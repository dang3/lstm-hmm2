mov
adc
add
inc
outsl
outsl
insb
gs
outsb
add
or
add
mov
insb
jae
add
jb
lea
sub
or
push
fcomi
ljmp
nop
inc
add
dec
outsb
je
addr16
sub
jnp
out
rcrb
jns
push
add
out
cmpsb
std
push
outsl
jb
jg
daa
or
imul
add
cwtl
adc
jae
jb
addr16
push
out
or
cmp
cmp
mov
pushw
and
jns
iret
sbb
cmp
pop
push
dec
bound
lock
push
sbb
push
push
jns
jl
pop
push
jl
and
dec
leave
jb
popa
arpl
cltd
int
inc
add
pop
inc
add
aas
jl
addl
jmp
adc
loopne
mov
sahf
pop
push
gs
xchg
out
popf
mov
push
jl
add
adc
mov
cmp
dec
mov
adc
andb
fs
jmpw
cmp
cmp
cmovs
cmp
pop
xor
cmp
cmp
xor
shlb
cmp
nopl
in
jbe
adc
scas
or
in
in
in
add
mov
leave
clc
hlt
lock
leave
leave
leave
lods
test
call
mov
imul
xadd
inc
ret
mov
dec
in
pushl
loopne
fcoml
les
and
pushl
ja
or
call
sub
je
movzwl
mov
in
movsb
popf
outsb
inc
inc
pop
ret
mov
fcom
psubsb
fxch
shl
add
aad
xor
push
stos
out
ret
and
insb
dec
and
mov
jg
imul
and
xor
xor
sub
imul
add
imul
outsl
data16
pop
icebp
ljmp
les
push
push
je
popa
inc
inc
gs
insb
outsl
jo
gs
outsl
int
mov
mov
gs
adc
es
pop
insl
enter
imul
ljmp
fs
push
test
jae
stos
lods
xchg
arpl
pop
mov
call
pop
jnp
popaw
dec
leave
xorb
out
imul
bound
clc
addr16
test
jl
pop
push
outsb
imul
outsb
pop
mov
push
sub
mov
cmpb
mov
push
fcomps
dec
cs
mov
iret
mov
mov
mov
mov
dec
add
inc
or
and
imul
adc
push
adc
adc
xchg
cmpsb
imul
fildll
add
not
lcall
fistpll
add
xor
pop
lods
sub
aas
inc
and
sub
sbb
dec
sub
xor
jbe
imul
cmp
imul
jmp
jmp
lret
jns
fistpll
fildll
sub
cmp
add
js
cltd
in
mov
inc
sub
mov
pop
xor
mov
add
nop
jp
lock
mov
mov
jmp
std
das
mov
shr
movzbl
mov
and
jmp
mov
and
sub
outsl
nop
add
ljmp
and
add
push
lock
add
lret
push
add
cmpsb
les
xchg
shl
or
jbe
jl
sbb
loopne
cmpl
pushl
mov
cld
add
orl
adc
jle
rorb
mov
cmp
push
addr16
lock
and
sub
jge
xchg
or
mov
cld
mov
inc
pop
or
add
mov
adc
push
push
add
sub
cmp
mov
mov
mov
loop
mov
lret
add
lret
mov
mov
rorl
lret
push
sub
sbb
xor
mov
cmpb
negb
int
sub
push
mov
aaa
pop
fdivs
loopne
sbb
xor
pop
cmp
lds
push
push
mov
lea
push
push
clc
add
and
lock
pop
xchg
movb
outsl
or
pop
adc
or
pop
lock
or
fsubrl
add
ret
pop
cld
fucom
pop
pop
pop
faddp
add
mov
sub
jae
sti
in
mov
mov
mov
push
and
or
test
jne
in
shll
push
jns
add
jmp
or
push
outsl
or
mov
mov
and
push
push
lea
push
push
inc
add
fistpll
add
and
cmp
jbe
sub
add
adc
iret
test
jne
lods
fimull
js
in
scas
dec
mov
add
aaa
jnp
rcll
clc
sub
pusha
cmp
and
in
push
fidivrs
loope
pop
rcll
add
sarl
jbe
ljmp
adc
jle
clc
and
add
xchg
xor
push
mov
in
adc
cmp
jne
andl
mov
stos
inc
push
cmp
jae
mov
add
mov
loop
fidivrl
ret
jae
fdiv
sbb
push
add
iret
lea
or
aaa
sub
dec
mov
xor
add
push
pusha
dec
mov
or
lds
mov
std
sub
add
jbe
int3
outsb
imul
mov
iret
xchg
mov
and
or
adc
shr
cmp
jb
dec
push
mov
push
ja
jmp
dec
and
es
mov
adcl
cwtl
and
cmp
pusha
bound
dec
les
je
fcoml
sbb
push
push
mov
rcrl
xchg
inc
or
mov
scas
or
sub
idiv
je
and
jmp
xor
dec
adc
mov
add
sarl
or
jbe
in
inc
jbe
mov
cmp
adc
std
add
mov
lahf
loop
cmpsb
adc
andl
mov
jns
aas
in
shl
je
lods
cmp
aad
ret
jecxz
inc
and
xchg
inc
or
outsb
sarl
jo
mov
add
or
mov
leave
cld
mov
cmp
push
rcl
add
ja
push
test
add
jns
cld
cmp
xlat
jne
mov
test
btr
cmp
add
mov
or
add
mov
dec
jnp
sub
lea
mov
inc
lods
jmp
sbbb
das
add
mov
mov
xchg
iret
fucomi
sti
fwait
enter
iret
sub
sub
cmp
and
inc
sbb
jl
mov
mov
mov
sti
call
movl
dec
cld
xor
das
mov
mov
mov
mov
inc
or
jae
lea
imul
add
sub
mov
addr16
push
xor
mov
ffreep
fidivs
lea
rcr
and
clc
inc
paddb
lea
or
pushl
loopne
push
je
loope
push
rorb
jmp
mov
cmp
sub
rorb
mov
shl
in
andl
sub
sub
or
push
mov
loopne
clc
cld
jmp
mov
dec
mov
rcrl
or
inc
inc
mov
add
cmp
cmp
test
push
pop
push
mov
inc
jb
xchg
or
into
sbb
testl
in
adc
jns
ret
mov
test
roll
test
cld
iret
jecxz
fisttpl
push
ljmp
pop
rorb
pop
data16
sub
jb
movsl
jns
push
push
xor
ficoms
push
adc
xchg
mov
jne
and
lret
mov
iret
inc
movups
mov
scas
ljmp
repnz
xor
jmp
xor
jle
or
call
loop
sbb
mov
push
jb
scas
testl
lcall
jne
or
adc
inc
cld
or
cmp
in
je
lea
inc
pop
xor
xchg
xchg
pusha
ret
ret
mov
xlat
mov
pop
pop
clc
mov
lret
cmp
xchg
ret
pop
dec
clc
sub
sub
cmpsl
xor
test
xchg
mov
sub
or
push
lahf
mov
mov
cmp
sbb
add
fmull
movsl
movl
add
sub
loopne
add
cmpsb
loop
out
dec
roll
in
or
shrl
enter
loopne
movsb
pop
sub
add
mov
jb
mov
push
mov
jg
or
fdivrs
lea
push
mov
loop
roll
add
lock
hlt
sub
mov
mov
mov
call
xchg
xor
shll
lret
mov
jg
cmp
push
and
cmp
push
xchg
movaps
cmp
jb
sbb
ljmp
adc
add
mov
das
mov
lea
add
sub
xchg
mov
or
adc
inc
or
addl
pop
cld
or
mov
push
mov
imul
adc
pop
mov
mov
roll
xlat
sub
out
icebp
mov
addl
scas
rcrl
lea
repnz
sbb
sub
adc
call
add
or
les
add
ljmp
sbb
pop
xor
leave
xor
out
push
negb
rol
mov
iret
rolb
ja
cmp
shl
in
mov
call
ljmp
rolb
push
add
lea
ja
sub
negl
add
push
jle
inc
ret
xchg
jl
mov
push
sub
js
add
outsb
jae
shlb
repnz
cmp
push
clc
jge
jno
cmpsl
jmp
negb
cmp
pop
push
jecxz
sti
ljmp
insb
sti
cltd
jae
neg
fldz
fstl
add
js
fwait
icebp
arpl
rcr
outsb
mov
mov
hlt
mov
lcall
pop
in
rorl
shlb
xor
mov
xlat
je
mov
cmp
shlb
mov
and
jmp
shll
adc
sbb
jg
call
ret
jp
out
call
cmp
jne
mov
cmp
jbe
mov
mov
sub
sbb
cmpsb
fidivs
mov
mov
dec
pushl
scas
es
mov
mul
lock
cmp
push
pop
shr
imul
add
enter
mov
loopne
stc
adc
inc
sbb
wbinvd
shrl
xchg
pop
enter
aaa
sbb
sbb
inc
add
add
nop
lret
add
add
movsb
xor
mov
xchg
or
loope
adc
inc
add
icebp
mov
dec
jbe
jg
inc
and
ret
add
pop
sub
sub
mov
or
sbb
addr16
ds
and
aas
sub
ljmp
in
rcrl
xor
test
js
push
add
jbe
loopne
arpl
lods
push
push
in
cmp
ja
pop
or
push
lock
fildl
push
push
jae
ss
mov
push
adc
jge
sbb
mov
js
add
push
adc
mov
push
testb
je
adc
call
add
fimull
cmp
cmp
notl
mov
dec
cmp
or
xor
mov
push
and
xor
arpl
cmp
jne
test
daa
dec
movb
lea
jmp
push
and
cmp
pop
pop
incb
lods
fldcw
mov
push
xor
mov
pop
enter
mov
dec
pop
fdivl
lcall
push
sbb
xor
inc
setne
sub
das
cmpl
sbb
adc
add
jp
jbe
loop
shr
inc
mov
mov
jno
fildl
pop
loop
push
push
sbb
enter
pop
mov
cmp
jne
mov
lcall
xchg
and
mov
sbb
dec
jne
mov
jo
addr16
cld
mov
jg
push
add
lea
add
decl
faddl
adc
add
div
call
cltd
pop
cmpsl
jo
and
xor
dec
sti
mov
std
or
cmp
je
aaa
push
pop
mov
test
pop
jge
mov
add
push
xchg
jnp
inc
hlt
adc
pop
movl
or
add
insl
mov
hlt
inc
imull
rorb
hlt
add
mov
mov
sbb
xor
mov
sub
jge
sti
movb
jg
dec
sahf
arpl
jl
aaa
and
aam
jge
jle
and
cmp
jge
dec
jae
add
dec
aam
loope
lds
addl
pop
push
jmp
xchg
in
pop
cmp
int
in
adcl
pusha
in
jl
cmp
mov
cmp
je
orl
inc
cmp
push
add
incl
jbe
addb
inc
add
fsubs
push
jecxz
xchg
das
jl
push
mov
cs
dec
jne
push
das
int3
jbe
sbb
imull
lds
les
and
lds
add
clc
push
pop
stos
leave
loop
test
cmp
mov
adc
jb
sbb
add
sbb
jg
imul
leave
pop
mov
mov
cmp
aaa
and
add
mov
cmpsb
inc
jbe
inc
xor
mulb
xor
mov
xchg
outsb
ret
jecxz
jne
mov
nop
xchg
xor
sbb
add
ss
xor
mov
out
enter
scas
mov
js
ss
xchg
sti
cli
je
dec
dec
pop
mov
jl
cmpb
testl
lea
faddl
fadd
test
inc
aaa
add
sbb
imul
cld
dec
out
in
xchg
jae
sub
push
xchg
in
mov
lock
push
xor
scas
cmp
scas
adc
dec
sbb
mov
add
dec
lcall
in
das
insl
add
push
movb
inc
push
or
ja
repz
and
cmp
inc
cmpps
gs
push
mulb
incl
insl
jmp
jb
xchg
add
je
dec
je
divb
std
jo
inc
mov
dec
push
pop
sub
lock
or
inc
cld
addr16
add
push
xchg
dec
mov
cmp
and
jl
stos
xchg
push
cmpl
mov
or
pop
cmp
adcl
aaa
pushf
fnstsw
test
dec
jb
sbb
dec
sub
cmpsl
outsl
call
inc
inc
xor
jae
cmpsb
dec
inc
call
mov
stos
ja
inc
xorl
dec
inc
push
divb
mov
adc
ds
insl
test
lret
test
sarl
xor
xor
mov
jle
ja
add
sbb
add
cmp
jbe
mov
bound
ja
bound
ret
aaa
jne
fucomi
add
scas
mov
mov
cmp
movl
inc
in
inc
clc
or
aaa
lret
repnz
lock
shlb
mov
lea
add
pushl
or
call
jbe
pop
mov
decl
shl
mov
shl
add
mov
dec
into
out
xor
loope
lea
add
dec
mov
sbb
mov
out
pushl
mov
out
int
push
sub
mov
xor
div
imul
mov
sub
adc
xor
jns
loope
pop
sbb
pop
adc
outsl
test
daa
mov
ret
mov
lds
push
repz
adc
pop
adc
fcoml
add
mov
jne
mov
jmp
mov
ret
pop
mov
cmp
jne
mov
lock
xorb
movl
sbb
dec
jne
sbb
repnz
or
cmp
mov
pop
mov
fimuls
mov
cmp
xlat
add
push
xor
mov
pop
push
aam
sub
dec
push
fdivs
pop
mov
popf
lea
pop
sbb
or
push
push
pushf
test
call
pop
sub
mov
fisubl
hlt
ret
jle,pn
gs
push
dec
dec
xor
adc
addr16
sti
call
or
shlb
mov
inc
push
fisttpl
insb
mov
inc
mov
repz
xor
jmp
bound
add
pop
rcr
arpl
ss
lret
lock
in
cmpl
adcb
ret
aas
icebp
xorl
sbb
fdivrl
or
pusha
rol
out
fisubs
cmp
ret
add
ljmp
out
mov
and
js
or
popa
mov
cmp
or
jo
sti
sbb
movzbl
add
pusha
movsb
adc
or
and
mov
ret
push
push
push
lea
mov
pop
jne
lret
dec
mov
mov
mov
not
das
jo
outsl
adc
cmp
sbb
cmp
ja
sub
jg
jmp
aam
in
push
sub
or
or
adc
inc
pushaw
or
xchg
int3
dec
mov
adc
jns
out
and
xor
outsl
ja
sahf
dec
push
mov
or
adc
flds
loop
or
jl
pushf
loopne
or
sbb
ret
jle
or
shrl
lret
adc
jbe
pop
loopne
push
add
clc
sub
pop
inc
cmc
stos
insl
xorl
xchg
jnp
out
push
inc
add
mov
cmpsb
and
fldl2t
mov
cmp
cmp
mov
negb
push
add
ret
mov
pop
mov
fldcw
add
cmp
add
add
pop
sub
adc
mov
imul
sub
jl
add
add
fldcw
push
mov
fldcw
pop
inc
int3
xor
loopne
popa
cmpsl
les
mov
lods
dec
and
jb
mov
ljmp
mov
jae
shll
clc
mov
mov
pop
cmp
cmp
mov
add
es
jge
xchg
push
sbb
and
xor
mov
cmp
mov
int
loopne
ja
les
jb
xchg
notb
sbb
cmc
lahf
je
sti
push
dec
sub
cltd
outsl
mov
cmp
jbe
add
std
mov
mov
inc
inc
sbb
xchg
scas
mov
push
mov
shr
je
nop
sbb
fnstenv
dec
je
addb
cmovs
sbb
push
std
jg
out
inc
loop
push
adc
add
and
je
mov
cmp
jne
dec
adc
mov
add
dec
ds
add
pop
aaa
add
mov
cmp
jne
shr
inc
cltd
notl
shr
sbb
mov
cli
and
cmp
sub
push
add
ljmp
add
adc
fstl
roll
fnsave
shl
fisubrl
jle
pop
inc
mov
mov
push
mov
inc
mov
sahf
imull
push
sbb
push
out
sahf
out
adc
push
or
pusha
rcrb
cwtl
subb
push
dec
jb
fistl
divb
fstpt
push
add
xchg
and
add
mov
or
je
and
addr16
bound
pop
pusha
movsl
insl
aaa
xor
push
es
dec
test
fcmovu
dec
out
jmp
or
sub
and
mov
clc
fstpt
pushl
lea
add
add
push
in
int
or
jge
aaa
fsubr
or
neg
jle
js
pop
sub
jmp
inc
dec
jmp
divb
aam
mov
xchg
outsl
ficompl
add
push
adc
data16
ret
or
mov
ret
pop
xor
shr
mov
lahf
jle
je
shlb
shl
dec
cld
push
call
add
mov
mov
mov
fldt
leave
and
sub
je
sub
je
das
popa
aaa
add
pop
mov
je
sahf
and
jmp
xchg
push
push
sbb
jge
mov
xor
jo
dec
sub
jmp
fstp
fldt
or
adc
out
data16
leave
mov
mov
adc
mov
pop
jns
add
or
jl
push
ret
mov
adc
inc
repnz
sbb
add
stc
inc
mov
mov
data16
sub
test
sub
sub
pop
jecxz
add
leave
out
jle
sbb
mov
cmp
fidivrs
jmp
jg
call
mov
bound
cmpb
xlat
fadds
stc
aaa
nop
lods
outsb
xor
xchg
push
or
push
push
in
int3
into
sbb
rorl
mov
push
pop
test
enter
mov
inc
cmp
and
jmp
lret
into
pop
inc
test
xchg
clc
js
aas
sbbl
pop
mov
addr16
leave
push
leave
bound
and
cld
gs
sahf
mov
sub
inc
aad
iret
decl
js
fbstp
push
stos
mov
cmp
or
mov
pop
out
sub
call
inc
imul
divl
jl
xor
cmp
call
mov
sti
jmp
stos
push
inc
mov
push
sbb
sarb
repnz
test
nop
fildl
daa
movsb
lcall
clc
scas
adc
inc
pop
pushf
mov
pop
pushf
mov
fs
aam
imul
loope
jp
iret
incl
mov
ds
push
cmpsb
scas
mov
pop
or
addl
jmp
mov
pop
cmp
sahf
xchg
pop
cmpsb
lock
mov
popa
incl
pop
mov
repz
mov
subb
and
cmp
lock
aad
bound
xor
mov
pop
xor
xchg
pop
ss
mov
add
jb
or
add
add
mov
pop
hlt
movzwl
decb
cld
push
push
inc
or
hlt
fildll
les
in
in
lock
xor
push
push
shll
mov
movl
data16
outsb
fnstsw
andb
pop
pop
pop
in
push
scas
fstl
push
sub
mov
out
jecxz
cmpsb
cmp
and
push
clc
pop
aas
or
jg
xor
add
adc
add
push
std
add
incl
inc
add
add
jb
insb
add
outsb
add
inc
add
out
jne
sbb
imul
inc
scas
fnstsw
dec
dec
jae
imul
push
inc
jne
loope
adc
add
jecxz
dec
es
pop
incl
in
mov
add
mov
inc
popa
mov
inc
scas
xor
das
clc
push
pushf
dec
clc
in
mov
out
mov
inc
incl
or
cmp
je
sub
pop
jmp
push
pop
inc
mov
jecxz
in
sub
push
cmpsl
inc
push
add
xchg
ret
pop
inc
or
insb
mov
fnsave
mov
lds
add
scas
popf
mov
sbb
pop
aaa
sub
out
adc
ror
test
je
shl
fsubrl
push
cs
lcall
lcall
cwtl
xor
jmp
cmp
fs
push
cld
mov
xlat
stos
mov
xor
push
shr
dec
rep
jl
pop
and
rep
mov
mov
sub
sar
aaa
add
add
jmp
cmp
je
pop
mov
notb
xor
sbb
mov
mov
mov
push
jg
test
sbb
jne
jne
ljmp
aas
add
jbe
sub
dec
xor
or
or
test
xchg
cmp
jle
adc
jb
movhps
jl
add
jmp
and
dec
mov
xor
or
scas
cmp
mov
push
scas
lods
fisttpl
inc
mov
mov
cmpsl
or
inc
sub
sub
add
test
pop
loope
inc
adc
add
ds
je
mov
lea
insl
dec
insl
mov
pop
sub
pushf
mov
inc
out
sahf
xchg
cmpsl
add
jns
pushf
pop
clc
lock
rol
mov
std
in
mov
xor
xor
jb
cmp
jne
or
or
or
push
inc
dec
ret
addl
mov
mov
xchg
xchg
sub
lea
push
add
mov
rorl
mov
leave
jmp
repz
or
add
jle
push
call
mov
add
repnz
je
pop
adc
testb
shrb
je
cld
pop
xchg
push
filds
adc
pop
pop
adc
out
mov
cwtl
in
call
or
out
loop
jecxz
out
mov
dec
pop
fwait
out
jb
movl
or
cmp
cmp
bound
rolb
inc
cmp
enter
lock
or
cli
add
mov
push
inc
sbb
std
int3
dec
inc
jl
add
sahf
mov
add
and
push
jo
mov
rcl
outsb
lock
and
leave
xor
mov
or
adc
out
sbb
mov
push
add
dec
jne
or
jmp
push
jmp
in
adc
inc
subb
decl
cwtl
ljmp
xor
test
jne
xor
psubusw
jp
jne
shl
inc
add
out
std
icebp
shll
pop
cmp
ret
xchg
jo
xchg
add
add
in
and
lea
pop
and
fcompl
cmp
jmp
xor
add
daa
jecxz
jp
jb
iret
push
pop
add
push
jmp
pop
adc
cs
push
push
push
fbstp
xor
lea
mov
mov
mov
movl
cmpsb
sub
mov
cmp
or
adc
jb
inc
or
pop
das
sbb
or
add
out
add
xor
push
clc
stos
mov
jae
sarb
aas
jmp
push
inc
in
lock
sbbb
popf
or
or
rorb
push
add
ja
lods
xor
pop
jle
in
sbb
pop
push
in
or
pushf
ret
jp,pn
in
or
adc
imul
add
and
push
push
mov
rcl
idivl
int3
mov
add
and
or
jno
sbb
pop
in
push
incl
adc
aaa
cmpsb
pop
push
or
inc
fisubrs
cmp
sbbb
mov
loopne
scas
cmpsl
cmp
jae
shlb
cmp
pop
push
lock
loopne
push
and
sbb
jmp
push
movsbl
inc
inc
jmp
add
add
push
imulb
or
push
jecxz
mov
push
cmp
mov
push
aas
loop
mov
and
cmp
lea
cmp
enter
jg
add
int3
test
dec
cmpl
out
pop
pop
dec
mov
outsb
cmp
adc
jno
sbb
je
adc
pop
icebp
adc
sub
xor
clc
mov
addb
je
dec
sbb
add
aaa
lods
jbe
test
lea
push
add
stos
fnstenv
mov
jo
movsb
jmp
adc
jns
jbe
adc
or
cli
push
jns
je
orl
enter
cmp
push
lds
sub
sbb
ds
and
pushl
add
mov
add
inc
add
sbb
xchg
adc
add
ljmp
scas
mov
mov
cmovno
xor
mov
and
je
dec
or
add
dec
push
add
xor
mov
imul
mov
jl
addl
out
insb
aas
dec
clc
fisttps
roll
inc
enter
adc
or
cs
divb
jl
mov
lcallw
mov
loopne
cmc
or
shrb
xor
faddp
subl
arpl
sbb
in
push
cmp
adc
sbb
adc
push
or
mov
pop
adc
pop
adc
nop
dec
lock
push
jmp
shrl
add
outsb
xor
pop
cmp
in
cmp
adc
sbb
adc
xchg
loopne
dec
add
push
mov
pushf
call
std
lods
adc
adc
push
mov
dec
ret
and
push
dec
mov
dec
lock
in
loopne
push
out
push
aas
xchg
mov
cmpsl
loopne
pop
push
push
push
push
mov
cmp
mov
sbb
cmp
fwait
cmpsb
imul
adc
add
mov
dec
push
pusha
loop
mov
dec
mov
into
add
nop
ss
add
cmpsb
xor
and
pushf
pusha
mov
inc
push
inc
std
fwait
or
mov
add
xlat
or
rcrl
test
sbb
cmp
adc
adc
jle
pusha
xchg
jae
mov
lock
sbb
sahf
or
std
jmp
ret
xor
nop
or
or
xor
and
or
dec
clc
scas
data16
mov
pop
cmp
push
sub
mov
cmp
pusha
add
add
je
push
mov
cmp
cmp
adc
lcall
jmp
sub
cmp
mov
jmp
mov
jmp
mov
jmp
mov
out
iret
jmp
push
sbb
into
jmp
mov
jmp
mov
jmp
mov
adc
lret
movzbl
orb
ret
daa
xor
popa
mov
lea
pop
push
sbbb
jno
dec
pop
or
inc
pop
mov
xorl
inc
sbb
cli
in
ds
daa
jo
fsubr
out
push
inc
loopne
mov
mov
loopne
sbb
or
mov
xchg
jo
scas
and
movsb
adc
enter
push
clc
mov
aas
mov
cmp
or
jo
scas
add
or
fisubrs
and
shlb
mov
sbb
aas
jns
add
jne
test
jle
dec
mov
arpl
adc
je
add
cmp
sub
stos
pusha
test
icebp
jmp
repz
xor
pop
xchg
and
add
cmp
or
in
cmpsb
lret
sti
jle
sub
sub
scas
xor
inc
xlat
iret
cmp
jg
xor
mov
repz
adc
cmp
jmp
ja
mov
xor
jb
push
ss
add
pop
jle
cld
shlb
imul
testb
dec
pop
mov
mov
push
aaa
out
xchg
inc
in
test
sub
das
pushf
inc
xor
mov
pop
lea
pushl
icebp
in
push
sub
sbb
add
mov
add
mov
dec
insb
pop
dec
je
add
int3
pop
cmp
inc
call
jmp
fadds
iret
pop
pop
jl
or
mov
inc
or
jg
add
xor
xor
pushl
cmp
inc
inc
inc
inc
inc
inc
and
repz
mov
mov
cltd
idiv
add
jle
cs
mov
and
and
dec
jmp
fdivl
loopne
inc
aaa
inc
inc
mov
in
pop
rorl
in
mov
cld
frstor
add
rolb
imul
or
pop
in
outsl
adc
ja
add
mov
mov
mov
leave
fists
dec
add
lock
icebp
push
cmpw
clc
adc
arpl
push
popf
cmpb
pop
insl
lock
push
push
or
stc
popa
scas
fildll
inc
stos
les
pop
ret
ds
adc
jl
inc
jnp
mov
int
add
dec
add
test
roll
mov
sub
jl
rcrb
mov
jne
jge
jae
inc
cmp
adc
adc
mov
sbb
push
ds
add
addb
cmp
jnp
mov
push
sub
subb
adc
mov
jb
dec
mov
cmp
je
inc
push
push
sarb
jg
jae
jne
call
adc
push
loopne
jne
jo
inc
inc
repnz
adc
jnp
out
push
movsb
decb
ss
nop
cmp
pop
mov
push
mov
jmp
pop
cltd
push
xor
push
cmpsl
js
push
and
lods
mov
movsb
ror
push
push
jmp
pusha
jp
loopne
call
ret
es
mov
mov
mov
add
mov
sahf
or
outsl
test
mov
mov
adc
add
push
push
or
loopne
push
loopne
mov
loopnew
cmc
out
dec
scas
jle
je
mov
lahf
adc
or
sbb
clc
in
aas
push
dec
clc
dec
jl
lock
hlt
pop
pop
andl
push
fsub
nop
add
or
mov
jne
cmpsb
dec
cmp
jp
add
jae
mov
push
jg
mov
inc
in
addr16
mov
dec
cld
std
cs
loopne
inc
inc
clc
xchg
adc
mov
jle
push
add
jo
out
test
sub
lock
ljmp
pop
pop
mov
inc
clc
in
push
lcall
shlb
data16
js
jg
test
sub
mov
mov
sub
mov
adc
into
loop
sahf
lods
cmp
mov
cmpsb
arpl
cmp
cmp
sub
mov
cs
push
mulb
decb
or
ss
lods
mov
aaa
and
sbbl
out
call
push
adc
ret
daa
adc
add
rolb
or
cmp
xor
sub
sbb
nop
ret
clc
outsb
push
into
jno
stc
es
jg
pop
test
sub
push
loop
dec
fcoml
dec
and
mov
add
inc
mov
push
and
dec
sub
call
call
xchg
mov
sub
inc
sub
je
cmpsb
out
rorb
dec
dec
pop
or
push
push
loopne
add
in
add
rcl
push
or
mov
adc
inc
ret
jg
ljmp
push
insb
mov
and
cmp
aad
fcmovnu
jl
rcr
add
js
or
std
imul
dec
add
add
out
add
call
mov
dec
cmp
je
sub
inc
push
gs
js
push
rolb
je
inc
jb
pop
mov
cmc
inc
and
add
pop
js
lock
sub
jne
es
or
pop
cld
sub
push
adc
and
sub
ljmp
lret
add
sbb
jne
jp
repz
add
push
pop
mov
pushfw
mov
or
fwait
xchg
push
repz
popfw
pop
stos
bsf
shr
add
jns
test
mov
mov
cmp
pop
pop
jmp
in
call
pop
cmp
rclb
xlat
or
jmp
inc
pop
add
jne
daa
push
cmp
es
lret
dec
test
jecxz
push
mov
mov
add
out
dec
mov
push
pop
dec
dec
test
xchg
cltd
in
dec
inc
lock
rorb
pushf
jne
jg
pop
imul
push
jns
popa
ret
addl
mov
pop
pop
lods
mov
xchg
xor
sub
stos
and
mov
or
mov
mov
scas
int3
pop
pop
cli
jo
cli
icebp
push
inc
push
pusha
cmp
mov
das
fwait
mov
ljmp
clc
adc
adc
xor
test
and
xbegin
add
in
sbb
das
push
push
das
sbb
and
loopne
testl
add
or
pop
js
fists
ret
call
xchg
adc
test
mov
adc
insl
cmc
pop
les
repz
push
pop
imul
movl
add
cmp
das
push
inc
add
je
dec
out
test
mov
cmp
xchg
xor
stos
sti
fwait
lret
inc
js
xor
inc
nop
jne
push
sbb
pop
inc
xor
jno
orl
shr
jmp
imul
mov
addb
leave
push
fbstp
cwtl
push
ja
push
pop
pushl
mov
xchg
cmpsl
mov
and
or
dec
dec
push
notb
ret
mov
adc
dec
das
inc
xchg
jbe
sbb
xlat
jne
dec
jb
hlt
xchg
or
lret
pop
sub
or
add
push
mov
xchg
rorl
fwait
pop
cmc
shr
cmp
jge
pop
inc
addb
dec
cmp
and
jmp
sbb
jmp
repz
cmp
mov
icebp
insb
or
rolb
rol
xchg
jp
pop
loopne
push
fmuls
ret
adc
cmp
adc
push
outsb
inc
inc
pop
push
push
pop
lock
jle
jnp
shr
inc
cmp
lcall
or
push
incl
pop
xchg
out
fsubl
sbb
cmp
xor
sbb
nop
loop
fstl
sub
bound
loope
dec
aam
loope
mov
inc
shlb
rcrl
lods
add
mov
and
and
inc
in
jmp
inc
cmp
cs
shl
inc
jo
inc
jo
pushf
push
xor
inc
xchg
cltd
pushf
push
enter
or
pop
adc
push
mov
mov
push
or
push
push
nop
test
push
add
rcrl
rcrl
cmpsb
clc
aaa
scas
pop
add
lea
sub
mov
cld
ret
ja
add
loope
sbb
inc
xlat
push
adc
dec
mov
ja
lds
and
and
ja
or
push
fs
out
cltd
jge
add
je
xchg
rolb
aaa
mov
jo
push
push
jo
adc
mov
jo
mov
das
popf
adc
test
mov
icebp
add
dec
mov
das
test
xor
add
test
into
je
subl
icebp
sub
test
jb
ljmp
cmp
sub
shl
lretw
loopne
add
xlat
pop
aad
adc
jle
loopne
cmpsb
adc
outsl
repnz
jecxz
loopne
add
dec
cmp
rclb
fdivrl
stos
orb
add
outsb
and
inc
cld
test
lahf
push
or
sub
aad
ret
jg
cmp
or
mov
jo
daa
or
mov
xor
jmp
fidivl
cmp
push
or
xchg
rcr
out
pop
pop
xchg
add
dec
clc
fiadds
call
or
movsl
into
push
push
mov
mov
push
ss
or
subb
pop
mov
dec
jmp
jbe
adc
inc
sbbl
iret
mov
jbe
mov
popf
ja
pop
add
loopne
cmp
pushl
shl
add
dec
jmp
iret
mov
out
imul
dec
loope
and
sbb
push
mov
lea
rclb
adc
add
icebp
add
add
or
or
dec
jne
pop
pushl
enter
les
stos
cmp
pop
lea
jmp
mov
jae
xchg
pusha
movsb
add
aam
jbe
subl
jp
jge
or
jo
aam
cmpsb
es
enter
jbe
decl
xchg
enter
shlb
add
push
shr
iret
fwait
int
push
push
mov
inc
dec
dec
add
pop
xor
fwait
jbe
add
add
dec
adc
add
and
ss
pop
inc
and
shr
and
push
movsb
or
pop
das
or
adc
das
test
jmp
pushf
adc
fiadds
leave
jmp
int
sub
pushf
push
sbb
push
lret
sub
inc
js
leave
cmp
fucomi
pop
dec
cmp
mov
test
clc
sub
cmp
incb
dec
push
insb
and
outsb
fisubl
inc
adc
int3
test
mov
shrl
cmpsb
idivb
pinsrw
and
cmp
cmpsl
or
sbb
add
loope
int3
or
or
jno
add
jl
hlt
in
mov
nop
jle
dec
push
sub
sub
mov
sub
mov
lea
sub
fidivrl
push
or
leave
ja
aaa
mov
jg
mov
outsb
pop
or
jg
rorb
mov
jne
push
clc
in
pop
pop
lods
std
add
clc
jmp
cmp
jge
sbb
cmp
jo
shl
ficoml
push
jge
mov
out
jnp
jle
imul
int
mov
dec
sub
cmpb
adc
push
add
aad
and
sub
push
lds
pop
sahf
fbstp
mov
pop
dec
inc
clc
xor
rorl
imul
dec
js
cmp
dec
push
mov
sub
sub
popa
xchg
lods
push
adc
adc
push
mov
pop
push
push
pop
adc
inc
inc
ss
into
mov
cld
push
adc
js
out
adc
sub
aas
loope
jle
adc
cmpsw
scas
jle
jnp
xchg
fldpi
ljmp
clc
push
stos
sbb
call
mov
dec
mov
adc
rorb
adc
mov
mov
bound
fimull
negl
testl
cs
sti
xchg
xor
mov
mov
xchg
cmp
push
cmp
decl
fidivrl
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
mov
test
lods
ret
mov
and
jg
lcall
adc
jmp
push
mov
mov
rcll
or
es
cs
adc
add
sub
cmp
fimuls
mov
mov
sti
stc
sbb
or
pop
call
rolb
lods
jle
stc
xchg
push
ror
sub
shll
jb
pop
xchg
aaa
sub
ret
mov
mov
mov
jg
xchg
and
leave
dec
dec
pop
cmp
inc
xorb
ja
inc
hlt
jmp
es
outsb
push
jmp
lret
pushf
dec
addb
cmp
fucomp
sub
sbb
push
jae
cmp
push
sbb
push
sbb
mov
adc
ds
es
and
sub
inc
add
adc
xor
in
sbb
adcb
test
jecxz
sarl
lock
mov
fcompl
jle
adc
cmp
or
fcoml
je
or
popa
or
imul
xchg
adc
pop
cmpsl
mov
add
cmp
sbb
push
rclb
cld
jmp
and
ret
push
stc
leave
insb
lea
mov
sbb
mov
add
mov
hlt
mov
pop
jmp
aas
add
mov
int3
mov
mov
adc
ret
insb
adc
and
nopl
fs
jne
or
sbb
mov
aad
insb
and
mov
and
push
pop
insl
jl
adc
sbb
scas
ret
movsb
push
and
jns
cmp
sub
add
inc
cld
imul
sub
lds
adc
dec
mov
ret
or
pushl
cmp
pop
pandn
mov
xor
fisubrs
mov
cli
cmp
add
in
sub
pop
adc
daa
popa
push
sub
lea
push
xchg
adc
xchg
nop
pop
daa
mov
lock
xchg
pop
test
mull
mov
aas
and
and
add
cmp
lret
aas
leave
lods
pop
ret
mov
jo
or
push
dec
dec
xchg
jne
pop
mov
or
fidivl
jb
push
loopne
pop
add
dec
call
mov
ljmp
fucom
ss
lods
jo
push
jnp
aam
or
push
ss
mov
add
or
pop
push
call
or
jb
out
or
dec
lods
testb
in
idiv
jge
adc
cmp
je
or
decl
cmp
jne
mov
cmp
jge
fildl
shlb
imul
daa
clc
mov
sub
sbb
inc
loopne
push
in
adc
jmp
jmp
or
ss
imul
in
mov
push
in
test
fsubrs
adc
xor
stos
rclb
push
dec
rcrl
jns
push
push
fbstp
add
mov
mov
or
sub
popa
fisttpl
sahf
or
add
cmpsl
mov
jle
mov
add
dec
dec
cmpsb
cltd
mov
add
adc
ljmp
js
push
dec
jne
enter
push
fistl
mov
aad
xor
decl
jne
sbb
xchg
scas
xor
sbb
push
jbe,pn
xchg
inc
sub
sub
sbb
push
lods
je
icebp
scas
adc
dec
std
jecxz
inc
push
mov
incl
pop
pop
pop
mov
jecxz
inc
outsb
ret
sub
loop
inc
in
sbb
inc
and
adc
push
xchg
add
sbb
mov
outsb
dec
inc
out
std
fadds
push
xor
int3
ss
incb
xchg
mov
mov
push
pop
mov
outsb
dec
sub
aam
xor
inc
adc
jne
or
jbe
pop
pop
add
sbb
push
and
jae
bound
test
or
jne
ret
fisttps
daa
push
icebp
mov
sbb
in
add
repnz
outsl
or
mov
xchg
cmp
mov
ljmp
jl
shld
sub
filds
in
push
pushf
xor
je
push
dec
and
jae
inc
cmp
push
xorb
xchg
sub
mov
shrb
ds
idivl
cmp
adc
pop
jne
loop
aam
stos
push
cmp
cs
xlat
test
in
scas
inc
add
adc
inc
jne
xor
sti
mov
nop
clc
jns
adc
cmp
in
mov
xor
add
mov
ret
inc
cmp
push
scas
xor
push
sbbl
cmpsb
mov
jo
xor
lcall
cmpb
jg
aas
flds
std
aam
push
add
jg
movw
add
push
push
fldt
add
popl
push
or
testl
arpl
outsb
jb
outsb
iret
xor
xor
cs
fstl
out
insb
add
inc
gs
outsl
outsb
addr16
popa
mov
push
push
daa
not
std
pop
cmpb
filds
je
es
push
mov
je
pop
jb
pop
cmp
inc
ja
sbbl
dec
xchg
popa
lcall
ds
push
mov
pop
aam
pusha
cmpsb
sbb
push
insl
insl
inc
cmp
mov
add
cmp
leave
and
sbb
or
or
insb
xchg
push
cmp
pop
out
std
push
lret
jne
out
add
mov
mov
idivb
fidivl
inc
mov
jge
adc
or
lds
fsubp
and
cltd
fistpll
add
pop
lock
negb
cmp
and
adc
add
adc
fldl
xchg
jno
push
aad
xchg
rcl
cli
jl
and
fmul
ret
int3
rolb
mov
dec
jnp
add
xor
andb
cmp
cmp
push
shl
outsl
aam
sub
and
add
jb
jnp
imul
inc
push
and
arpl
add
adc
test
lea
addr16
xor
xchg
adc
or
mov
push
imul
sbb
mov
mov
cmp
sbb
and
mov
mov
add
or
and
outsb
rorb
insl
inc
jo
sub
pop
adc
push
mov
dec
push
sub
adc
popf
outsl
adc
inc
pop
dec
gs
mov
push
sbb
lret
hlt
fs
sti
or
pusha
lock
mov
movsl
movsb
cmp
jb
jns
imul
cmp
inc
sbb
imull
add
mov
or
mov
pop
mov
mov
cld
jne
mov
push
ret
js
add
mov
js
and
sbb
add
test
mov
lret
fistpl
push
inc
rcrl
sbb
sti
lods
push
call
push
mov
cmp
aaa
push
pop
sbb
mov
adc
jnp
pop
pop
ret
sbb
ds
add
out
cli
inc
pushf
inc
stc
push
call
shlb
push
xchg
mov
pop
dec
adc
sub
ficoml
add
clc
ret
xchg
lahf
and
push
bnd
aaa
push
into
leave
ja
push
pop
icebp
push
bound
fcomps
push
push
jbe
pop
test
push
cmp
jb
add
or
jb
adc
and
clc
fildll
sahf
pop
and
jbe
testb
adc
mov
push
loop
push
jno
ret
cmp
filds
sub
sbb
mov
stc
pusha
mov
out
push
pushl
dec
decl
divb
push
push
fmull
cltd
mov
out
inc
sbb
jg
aaa
xor
sbb
andw
or
or
roll
add
push
adc
cmp
mov
leave
mov
jb
outsl
dec
sbbb
scas
jae
in
lods
or
inc
mov
clc
in
fiadds
data16
fwait
aaa
mov
out
aas
push
stos
mov
jnp
sub
addl
adc
rorl
jmp
sbb
pop
cmp
or
cwtl
lods
loope
out
add
inc
lods
xor
aaa
outsl
pop
add
pusha
aad
xchg
or
inc
shrb
adc
rorl
mov
mov
call
push
xor
adc
outsl
fs
jno
push
inc
sbb
xchg
std
fnsave
jo
jbe
sbb
or
test
mov
xor
pop
fidivrs
sub
push
jge
icebp
cwtl
jle
mov
jmp
adc
inc
push
nop
jo
jmp
int
jo
add
jb
in
cmp
lret
loopne
fiaddl
xchg
lock
push
fsts
xchg
mov
lcall
xchg
cld
cld
cmp
int
cld
xor
adc
cwtl
sarl
mov
lock
pushf
loope
inc
cmpsb
and
add
aam
cmpb
push
jb
add
test
sbb
mov
les
jg
sti
jo
hlt
or
add
js
add
sbb
push
test
sbb
and
pop
inc
pushf
hlt
sub
jg
mov
or
and
adc
movl
or
or
cmp
cli
jge
add
mov
clc
rorb
adc
fistl
sub
inc
inc
jle
movsb
inc
adc
jno
cpuid
xchg
dec
push
push
sbb
jle
enter
lret
leave
pop
push
push
push
bound
jge
lahf
jl
cmp
popa
mov
cmpl
dec
loop
bound
imul
push
push
aaa
mov
scas
add
in
or
loopne
mov
sub
add
jns
push
test
fmull
mov
ret
mov
or
mov
or
sbb
cmpl
int3
imul
sbb
cmpsl
lock
jg
ljmp
mov
add
lea
sub
mov
jg
jb
je
dec
je
push
sbb
and
pop
lock
dec
stos
ret
sub
mov
and
or
xchg
ds
or
push
add
nop
out
pop
repnz
sti
mov
push
lahf
mov
jns
lock
dec
jnp
lods
push
add
dec
cmpsl
and
faddl
mov
nop
pusha
cmp
rorb
push
xor
push
cmp
rorb
xor
je
cmp
adc
or
ss
jo
push
adc
ljmp
fwait
mov
dec
sar
xor
add
sarb
push
adc
std
sbb
mov
inc
and
decb
jg
lods
ss
je
hlt
pop
sub
lea
mov
ror
mov
aad
push
cmp
ret
fwait
outsl
mov
dec
or
cmp
inc
or
inc
addb
inc
add
jo
add
push
into
push
mov
fisttpl
sub
push
or
ds
push
or
xchg
dec
loope
data16
push
push
and
cwtl
or
push
outsb
dec
pop
aad
out
jmp
adc
push
or
clc
cmp
jl
cmp
jge
cli
push
add
or
int
jl
outsl
je
and
shl
repnz
add
mov
push
lods
or
add
dec
add
or
jge
popf
push
jo
inc
adc
sub
add
lods
enter
and
add
loopne
mov
mov
adc
mov
add
mov
mov
add
add
add
pop
adc
or
aas
f2xm1
loope
daa
add
push
add
push
or
jg
js
jbe
dec
push
dec
inc
loop
sbb
add
cmp
and
loopne
addr16
mov
or
push
gs
in
aas
jnp
stos
or
jb
jns
es
imul
mov
push
outsl
arpl
inc
gs
mov
insb
je
dec
outsl
je
imul
mov
gs
jge
std
dec
outsl
inc
arpl
or
or
jg
insl
int
jle
inc
xor
xor
outsl
insl
bound
ljmp
inc
outsl
js
pop
push
imul
inc
ja
add
andps
outsb
dec
inc
xor
je
sti
add
dec
add
int
pmulhuw
in
and
adc
in
in
or
daa
daa
and
int3
clc
hlt
lock
daa
daa
daa
in
call
jb
aam
sbb
ror
dec
dec
or
rclb
bswap
rclb
mov
xchg
xchg
xchg
xchg
lods
test
mov
pushf
cwtl
xchg
nop
xchg
xchg
xchg
xchg
mov
out
xor
xchg
xor
imul
cmp
mov
adc
xor
ds
mov
and
mov
stos
pop
test
push
jl
pcmpeqb
cmp
cmp
pusha
cmp
cmp
pop
pop
push
push
cmp
cmp
dec
dec
inc
inc
cmp
cmp
cmp
xor
cmp
cmp
sub
and
cmp
cmp
sbb
adc
cmp
cmp
or
add
pushf
pushf
mov
lret
clc
hlt
lock
cmp
loopne
cmp
aam
ror
cmp
cmp
enter
cmp
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jo
cmp
cmp
push
cmp
cmp
push
dec
cmp
cmp
dec
inc
inc
cmp
cmp
cmp
xor
sub
cmp
cmp
and
sbb
cmp
cmp
adc
or
cmp
cmp
add
cld
lret
popf
mov
call
cmp
cmp
fcom
sarb
cmp
cmp
enter
cmp
cmp
cmp
lods
test
mov
pushf
cwtl
xchg
nop
daa
mov
cmp
daa
daa
daa
jl
je
daa
daa
daa
daa
insb
push
daa
daa
pop
pop
push
push
daa
daa
daa
daa
dec
dec
inc
inc
daa
daa
daa
daa
cmp
xor
daa
daa
daa
daa
sub
and
daa
daa
daa
daa
sbb
adc
daa
daa
daa
daa
or
add
xchg
xchg
xchg
daa
cld
leave
clc
hlt
xchg
xchg
xchg
xchg
lock
call
xchg
loopne
fcom
daa
daa
mov
ror
mov
daa
daa
daa
mov
and
daa
lods
test
pmulhuw
in
pushf
cwtl
dec
cs
xchg
nop
mov
test
in
js
jo
insb
leave
leave
leave
leave
push
leave
leave
leave
pop
push
push
dec
leave
leave
leave
leave
dec
inc
inc
cmp
leave
leave
leave
cmp
sub
enter
and
sbb
cmp
mov
or
cmp
cmp
add
cld
enter
mov
hlt
pop
lock
daa
mov
cmp
in
loopne
daa
daa
daa
daa
fcom
ror
daa
daa
daa
daa
enter
daa
daa
daa
daa
mov
jb
daa
test
mov
pushf
cwtl
xchg
nop
leave
leave
add
leave
leave
leave
leave
cmpb
lret
leave
leave
jo
push
scas
dec
cld
add
and
or
cltd
or
adc
jns
out
sbb
and
xlat
insb
rorb
cmp
jno
ret
jae
daa
inc
sub
cmp
lock
outsl
push
push
les
insl
subb
aas
in
adc
mov
push
push
lods
popa
pop
pop
jl
mov
xchg
push
push
push
gs
mov
lods
shr
inc
cmp
cmpl
and
sbb
pop
or
sarb
movl
push
pop
mov
pop
addr16
andl
push
out
dec
cltd
sbb
dec
add
inc
mov
sbb
pop
pop
inc
jge
and
das
inc
jp
mov
aas
cmp
push
push
add
dec
xchg
ss
xchg
push
pop
push
push
or
pop
push
dec
add
push
push
dec
xchg
sub
nop
push
data16
add
push
xchg
sbb
mov
add
xor
es
sbb
pushl
cmp
lock
dec
dec
repnz
cmc
dec
dec
dec
dec
div
clc
stc
dec
dec
dec
dec
cli
sti
cld
std
dec
dec
dec
dec
jmp
loope
dec
dec
dec
loop
in
dec
dec
dec
dec
out
call
dec
ljmp
dec
out
out
rcl
dec
dec
dec
dec
rcl
aam
dec
dec
dec
dec
xlat
fcomp
dec
dec
dec
dec
fcmovu
daa
and
inc
shll
daa
daa
ret
lds
daa
daa
daa
mov
leave
daa
daa
daa
daa
lret
int
daa
daa
daa
into
iret
mov
daa
daa
daa
daa
mov
mov
daa
daa
daa
daa
mov
mov
daa
mov
daa
daa
daa
mov
daa
daa
daa
mov
daa
daa
daa
cmpsb
cmpsl
test
daa
daa
daa
daa
stos
stos
lods
lods
daa
daa
daa
daa
scas
scas
nop
xchg
daa
daa
daa
daa
xchg
xchg
xchg
xchg
daa
daa
daa
daa
xchg
xchg
cwtl
cltd
daa
daa
daa
daa
lcall
daa
sahf
lahf
addb
addl
xchg
daa
mov
daa
daa
mov
daa
daa
jb
je
aas
daa
daa
daa
jbe
js
sti
sub
fistps
add
jb
sub
jne
hlt
pop
push
popa
or
je
sahf
shrb
adc
pop
test
and
mov
ret
mov
adc
or
rorb
adc
test
imul
add
xor
add
stc
add
mov
bnd
add
cmpsl
jns
inc
sbb
inc
jnp
inc
ss
lret
subb
push
or
and
xchg
mov
pop
shlb
insb
je
js
inc
inc
mov
cmp
cmpl
out
add
rclb
addr16
push
jg
loopne
dec
fmul
mov
or
or
arpl
mov
mov
and
or
or
dec
add
xor
imul
adc
sub
add
mov
or
or
add
and
add
adc
push
test
int3
or
jae
call
push
and
cld
push
je
insb
jae
xchg
add
adc
sbb
sbb
rcrl
push
inc
pop
je
push
les
out
iret
mov
xchg
clc
add
pop
or
arpl
sbb
data16
sub
idivb
inc
jb
mov
inc
inc
bound
je
mov
scas
inc
sahf
mov
in
movl
enter
cld
filds
xor
adc
jne
dec
data16
in
lds
push
xor
or
outsb
loop
jb
arpl
rcl
loopne
xor
cmp
and
inc
xlat
dec
lea
mov
in
dec
lds
out
and
loope
or
mov
and
xlat
sub
pusha
lea
jle
or
imul
nop
mov
inc
in
mov
addr16
xlat
add
push
mov
gs
insb
outsl
ja
dec
push
push
addr16
rolb
mov
in
inc
sti
mov
fcom
loopne
xchg
cld
jg
dec
outsb
jbe
insb
imul
xchg
sub
dec
nop
mov
ret
xor
xlat
mov
out
popa
and
sbb
xchg
das
fcmovu
inc
push
outsb
fsts
mov
maxps
outsl
imul
ret
cmpsl
or
inc
mov
push
or
imulb
ffreep
pop
xchg
dec
jo
inc
inc
outsl
outsb
jb
push
fnstsw
xchg
scas
adcl
shlb
and
push
clc
push
imul
xchg
dec
xchg
push
xchg
push
jb
insb
fisubl
sub
mov
das
dec
push
inc
ljmp
sbb
adc
jle
je
cmp
mov
xchg
xlat
pushf
xchg
push
mov
cld
mov
popa
outsb
add
fistpll
dec
dec
or
push
jo
arpl
push
xor
inc
popa
jl
mov
out
adc
loop
cmpsb
rcrb
dec
mov
es
push
jb
fcomip
lea
adc
pop
xchg
push
adcl
dec
push
rcll
fisttpll
mov
cld
lea
push
popa
data16
cmp
dec
mov
out
xchg
pop
mov
pop
mov
je
xlat
lods
inc
es
sahf
loopne
adc
dec
push
lds
cmp
mov
cwtl
out
and
pusha
shrb
sbb
outsl
repz
jne
jo
cmpsb
sarb
mov
cmp
xor
and
hlt
movaps
push
enter
add
or
into
and
shrl
sarb
dec
mull
test
inc
xchg
push
push
mov
popa
test
jne
pop
dec
aas
int3
add
clc
loopne
stc
push
push
adc
inc
mul
das
nop
cmpsb
aam
xor
and
aam
cltd
mov
iret
repz
or
fnstsw
lahf
push
mov
jnp
sbb
push
loopne
sbb
jbe
subb
push
pusha
push
add
stos
sub
pushf
adc
addb
into
and
dec
mov
imul
out
xchg
popa
inc
lds
test
outsb
arpl
data16
lock
in
gs
or
sub
mov
jb
add
pop
push
mov
push
add
add
lcall
outsl
sbb
xchg
mov
fists
fwait
incb
mov
pop
lods
push
pushf
xor
mov
pop
es
bound
setp
out
adc
push
push
je
jns
jnp
test
mov
xor
push
mov
or
pop
add
inc
enter
pushf
sbb
iret
repz
push
sub
dec
push
in
jb
push
pop
rclb
in
and
cmp
mov
pop
push
and
loop
pop
cmp
popf
mov
popf
adc
out
repz
add
push
and
push
fs
lock
sbb
mov
cmpsb
inc
sahf
pop
ror
pushf
mov
xchg
dec
dec
sar
push
inc
imul
cld
sbb
ret
adc
repz
fisttpll
fisubl
add
pop
push
lods
cmp
add
add
xor
jmp
pushf
and
pusha
jae
cld
bt
jb
sbb
mov
mov
lahf
inc
rclb
mov
ret
jg
popa
inc
in
icebp
cli
add
loopne
add
popa
fistpl
sbb
push
adc
and
pop
mov
shrb
dec
dec
jne
pop
push
cli
mov
or
ficompl
orb
sti
cmp
mov
inc
inc
cmp
or
inc
jo
sub
shll
and
xor
in
out
jge
cmp
add
lock
add
loopne
and
dec
inc
nop
mov
leave
popl
xor
inc
mov
lods
out
mov
in
je
loop
jmp
or
push
mov
das
xlat
mov
data16
pop
xchg
cmc
lret
cli
sub
jmp
out
leave
jmp
jmp
out
and
dec
dec
std
mov
mov
or
ss
push
add
nop
pop
pop
pop
xor
jmp
add
out
cmpsb
adc
adc
shl
int3
xor
data16
pop
or
jmp
outsb
sub
lds
sbb
jo
mov
iret
ds
fildl
push
jg
fdivrs
jb
push
fiadds
jecxz
sub
jg
sub
pop
add
pop
adc
pop
in
jg
mov
rolb
aaa
lcall
push
jg
and
mov
mov
pop
jg
mov
pop
cmp
jne
push
dec
add
or
inc
jne
or
neg
ret
add
push
push
push
popa
gs
imul
push
or
cmpsb
insb
jmp
fcomps
pushf
sub
add
ds
das
cmp
cmp
je
data16
and
mov
popa
jl
or
add
cmp
sti
jmp
sub
jne
outsl
and
pop
pop
or
xor
cmc
jo
jno
add
enter
jl
mov
lock
adcl
stc
add
sub
and
xchg
and
or
adc
mov
cld
jne
cmp
cwtl
mov
xor
lea
fprem
pop
inc
adc
outsb
jecxz
mov
dec
clc
sub
dec
out
ss
jno
and
sub
inc
lret
mov
push
and
sbb
add
dec
and
xchg
sub
pop
push
mov
and
inc
cmp
jl
mov
adcb
pop
and
es
imul
je
jmp
dec
inc
clc
es
lret
inc
mov
in
sbb
or
sub
mov
jg
and
call
movb
inc
ret
enter
push
test
sbb
rcrb
or
pusha
push
add
js
mov
and
pop
jne
out
or
mulb
test
pop
push
out
add
mov
inc
mov
repz
pop
imull
ja
pop
je
ucomiss
inc
dec
jne
jmp
mov
mov
repz
jmp
adc
iret
and
fcmovb
mov
dec
rcrl
test
xlat
dec
pop
push
or
jne
sarb
inc
xchg
mov
ljmp
ret
mov
xor
ds
jb
push
pop
mov
push
mov
ljmp
jbe
add
mov
sub
jmp
mov
dec
jne
push
inc
ljmp
mov
insb
roll
inc
add
andw
cltd
add
stos
scas
lods
dec
scas
in
cltd
jns
shr
mov
scas
jp
add
inc
mov
mov
out
in
adc
mov
fcompp
leave
push
mov
mov
mov
in
fcoms
pop
scas
adc
push
or
dec
test
nop
cmpsb
inc
mov
je
mov
add
pop
dec
mov
adc
push
cs
je
inc
xor
mov
mov
negl
adcl
ja
xchg
int3
inc
data16
cmpsb
mov
add
and
outsb
add
mov
outsb
dec
jmp
lods
sub
mov
push
add
loope
jnp,pt
xchg
daa
andl
or
je
pop
fadd
faddp
subb
add
shrl
clc
fistps
fdivr
call
test
add
lock
fnstcw
rcrl
jp
add
ret
ffree
ffree
ffree
pop
and
out
jne
sarb
jge
and
pop
orl
add
and
sub
push
enter
dec
mov
fdivrl
push
loopne
add
add
scas
loope
mov
and
sub
add
adc
cld
lock
sbb
cld
js
or
xchg
js
pop
mov
push
sahf
pop
jbe
inc
push
loop
adc
push
gs
jbe
fcoms
adc
and
cmpsb
and
hlt
test
xchg
push
loop
and
add
mov
cmpsb
adc
adc
mov
leave
push
add
les
xchg
aam
imul
xchg
xor
cmpsl
mov
iret
lcall
pop
mov
adcb
pushf
jns
sub
mov
pop
sbb
push
das
jo
xchg
sbb
mov
add
fs
and
jbe
jo
stc
push
test
jmp
cmp
inc
jae
mov
call
sub
push
push
push
aas
lods
es
shl
mov
inc
loopne
inc
mov
loopne
add
loopne
jne
push
call
rcrl
clc
mov
es
stc
test
stc
and
or
push
mov
pushf
push
bound
jmp
xchg
dec
pusha
sbb
test
xchg
orl
mov
push
dec
or
and
stos
add
int3
inc
js
outsl
call
fldt
fcomps
setne
jmp
cmp
jbe
leave
push
dec
pop
cltd
test
imul
movb
and
dec
and
dec
add
add
xchg
push
adc
das
sub
and
fdivrs
add
in
sub
xlat
and
pop
adc
mov
sbb
scas
lods
mov
rorb
enter
adc
nop
outsb
mov
aas
mov
and
ja
push
xlat
test
sub
adc
and
inc
rcll
mov
or
movsb
pop
pop
dec
sub
inc
add
cmp
fisttpl
imul
adc
mov
adc
push
mov
pop
sbb
jp
pushf
and
push
push
lret
iret
pop
or
cmp
arpl
xor
jne
mov
je
cld
mov
cld
cmp
and
scas
adc
in
and
cwtl
ret
aam
mov
pop
aam
sti
adc
insb
jbe
sbb
gs
popa
faddp
lods
cmp
test
test
pop
sti
xor
call
or
jae
je
jnp
pop
pushf
lods
bound
scas
pusha
and
push
aad
add
daa
push
call
loopne
and
dec
or
push
and
xor
inc
sahf
inc
add
test
adc
mov
rorb
movsb
or
inc
xor
or
fisttpll
dec
dec
inc
popf
xor
roll
dec
push
lea
mov
enter
fistps
mov
push
adc
sub
dec
or
enter
sub
push
or
add
push
mov
clc
cld
push
jnp
jecxz
rolb
insl
push
xchg
xor
sbb
inc
hlt
adc
sbb
jae
mov
lds
lock
and
ret
in
adc
inc
and
cmp
mov
neg
and
ljmp
lods
lret
xchg
test
jne
test
je
test
jne
lea
call
ret
or
mov
or
dec
jns
push
push
data16
and
call
sbb
cld
add
xchg
sbb
out
or
setg
inc
cmpsb
cltd
fisubrs
rcrl
ds
xlat
push
fdivrs
das
mov
lock
dec
pusha
stc
pop
add
jmp
fisttpll
dec
xchg
mov
mov
mov
inc
lock
mov
sbb
loop
aad
sbb
adcl
mov
xlat
repnz
iret
mov
out
cmp
mov
xor
cmp
dec
push
in
movsb
data16
add
aad
push
xor
xor
fidivrs
neg
je
cli
xor
cmp
jae
aaa
aas
movsb
imul
rcl
ret
mov
jp
cmp
xlat
insb
inc
push
jb
fs
adc
pop
pushf
push
cltd
dec
inc
cmp
scas
pusha
jmp
fiaddl
fisubrl
repnz
mov
shr
or
push
and
shll
pop
xchg
rcrb
or
lahf
lock
push
test
idiv
insb
lock
icebp
pop
pop
add
imul
fisubs
sub
mov
sti
das
push
not
dec
je
mov
mov
and
icebp
jbe
push
lea
add
lock
pusha
fldcw
add
pop
push
mov
jne
lea
push
pop
pop
add
shlb
call
cmp
aaa
or
sub
xchg
cs
xor
add
adcb
pop
and
pushf
inc
and
sbb
sbbb
sbbl
je
lock
push
scas
push
aad
mov
pop
iret
mov
cmp
push
push
add
insb
cmp
fsub
das
sbb
push
or
pop
pop
jns
addr16
pop
popa
or
inc
mov
jne
add
lahf
insb
outsb
ja
dec
lahf
js
mov
icebp
aas
xor
mov
adc
out
jmp
pop
inc
dec
fsubrl
mov
inc
or
xchg
push
js
lods
lahf
adc
xchg
icebp
push
or
cmp
jno
aad
sub
stos
push
push
push
idivl
sbb
imul
pusha
loope
inc
and
pop
mov
dec
incl
aad
mov
xchg
adc
aas
push
sub
and
punpcklwd
mov
test
inc
shlb
push
mov
adc
add
jge
pop
sahf
hlt
sub
dec
std
dec
cld
lea
loopne
ss
mov
mov
dec
cmp
jmp
lcall
push
mov
dec
jno
ja
dec
push
sub
clc
adc
fists
mov
lock
add
adc
mov
mov
push
push
rolb
push
jo
mov
xchg
jle
adc
jmp
cld
sbb
in
addl
mov
pop
push
lret
clc
ja
push
mov
add
repnz
rcrl
adc
ja
mov
arpl
enter
jb
nop
dec
adc
inc
out
sbb
cmp
adc
out
push
cmp
cmp
adc
dec
jne
std
dec
lock
mov
sub
sbb
push
add
lock
adc
sahf
in
data16
ljmp
mov
or
mov
cmp
es
adc
cmpsl
sbb
mov
stos
fnstsw
xor
push
push
sbb
mov
add
dec
sub
jae
inc
jge
sub
ljmp
lret
add
xor
fisubs
mov
mov
and
cmp
fwait
or
cmpsb
dec
je
sub
or
add
or
sbb
ja
imul
sub
iret
roll
and
pop
pop
pop
pop
xor
sbb
jg
xchg
jl
mov
sbb
je
dec
fadd
and
mov
shlb
add
insl
ret
mov
fimuls
add
and
test
int3
cmp
push
dec
mov
cmp
mov
aaa
imul
fmulp
js
push
in
xor
test
out
mov
sbbb
cmc
mov
sub
loopne
inc
xchg
out
sahf
std
cs
xchg
pop
sbb
imul
out
bound
and
movsl
je
jno
in
cwtl
in
idivl
add
cmp
jne
jbe
mov
adc
cmp
adc
ljmp
pusha
loopne
fs
movsl
test
mov
xor
inc
sub
mov
mov
lahf
jns
mov
add
push
pop
jg
std
in
inc
mov
mov
or
adc
fstps
add
dec
loopne
mov
fnstsw
inc
ret
jecxz
lcall
mov
lcall
xchg
pop
inc
jbe
clc
and
xchg
fdivs
outsl
jg
jl
xor
je
mov
or
je
mov
inc
je
dec
and
mov
dec
xchg
loope
mov
mov
ret
lret
cmp
jne
fcoms
pop
fisubrl
mov
xchg
xor
mov
mov
dec
iret
mov
addr16
out
in
sar
add
or
add
push
int3
stos
xlat
bswap
ret
jb
or
adc
lods
dec
or
stos
push
cld
pop
js
push
xor
stos
or
jne
shr
xchg
fsubrs
neg
jmp
or
je
mov
stos
xchg
push
mov
dec
mov
fnstsw
dec
and
mov
inc
dec
cmp
add
clc
decl
leave
jg
dec
mov
stos
cmp
jne
pop
mov
fwait
mov
mov
in
sub
adc
adc
fsubrl
cmpsl
rolb
and
sbb
shr
inc
shl
aam
ds
xor
in
pushf
fwait
in
mov
sbb
in
ss
push
push
push
mov
xchg
jae
psubd
push
repz
push
repnz
adc
pop
adc
and
and
jle
test
scas
fs
dec
jge
cli
adc
sbb
adc
lods
enter
adc
nop
push
sub
lcall
repz
repz
jne
mov
sub
ss
sbb
adc
ja
movswl
mov
aad
arpl
ret
popf
aam
pop
rcrb
or
js
call
lret
jmp
cld
lahf
xchg
xlat
xor
push
xchg
decb
inc
dec
inc
dec
lods
or
sub
or
dec
xchg
jge
int3
es
adc
dec
aam
sbb
jg
cmp
jl
mov
mov
mov
stos
neg
sbb
stos
jmp
ja
jge
decl
clc
movlps
pop
pop
inc
fstps
push
xchg
shr
mov
sub
ljmp
jbe
xor
dec
sub
mov
das
clc
leave
mov
mov
mov
add
lock
and
cli
adc
mov
pusha
aas
es
scas
je
mov
nop
jge
enter
repz
inc
test
je
jne
sbb
mov
stos
xor
cmpsl
sbb
push
sti
add
data16
std
dec
je
inc
jne
pop
dec
jne
ret
xchg
repnz
int
xchg
or
repnz
jl
dec
pop
mov
or
pushf
fwait
popa
mov
mov
inc
je
push
push
cmp
cmp
mov
subb
stos
dec
lods
dec
pop
add
mov
inc
loop
ret
jle
fisttpl
shrl
mov
and
inc
add
and
fcomi
jge
and
adc
and
sub
inc
sub
fdivr
jbe
sub
sbb
into
cmp
sub
sub
jns
fs
xor
sub
xor
popl
add
shll
test
jle
dec
dec
fisttps
cmp
lods
cmc
pop
adc
ret
movsb
cmp
add
and
inc
push
adcb
mov
and
or
xor
inc
cmc
cmpsb
call
clc
fldt
je
imul
dec
cmp
or
enter
leave
and
call
fldt
fstsw
fwait
mov
jg
cmc
scas
idiv
je
fidivl
jne
lea
mov
or
mov
nop
shr
and
icebp
in
pop
push
xor
stos
mov
add
jns
jp
adc
sti
and
jge
pushf
or
mov
adc
cmpb
jb
movb
js
decb
and
cmp
jmp
sub
leave
jmp
mov
cmp
inc
xor
push
or
add
fimull
jecxz
and
out
mov
dec
ljmp
rorl
test
sub
push
neg
neg
sbb
rolb
add
or
mov
xor
adc
jl
mov
cmpsl
sbb
mov
loopne
jae
dec
add
mov
fistpll
in
mov
or
mov
cmp
mov
pop
jo
or
mov
jne
mov
sbb
sub
mov
and
jne
dec
mov
jmp
mov
add
aas
and
mov
ljmp
enter
popa
shll
jbe
pop
jmp
add
je
mov
iret
inc
sub
sahf
test
mov
jns
fwait
test
push
inc
incl
sbb
ljmp
lods
or
outsb
xchg
add
cmp
or
lock
dec
and
fistpll
sub
scas
not
pop
add
jg
jne
mov
sahf
dec
xchg
add
push
mov
add
loopne
adc
aas
jmp
fstpt
dec
popa
daa
scas
fs
mov
mov
andl
jmp
push
add
out
int
cmp
mov
ljmp
pminub
inc
dec
add
fldpi
ljmp
loopne
incl
push
push
inc
imul
push
cmp
push
nop
jb
aaa
add
stc
jl
cmpsb
sbb
mov
pusha
rcl
mov
mov
push
lret
push
xchg
outsl
out
push
lcall
mov
push
jae
push
adc
inc
lods
xorb
push
adcb
push
jb
sbbl
cmpsl
lods
lahf
aad
add
adc
mov
or
cmpsl
lea
mov
jge
mov
fldt
sub
fldenv
adc
mov
jae
xor
dec
push
fstpl
fwait
mov
aas
cmp
fbld
jae
fstpt
inc
add
xchg
pop
xor
mov
add
and
fldenv
pop
shrb
data16
leave
jle
pop
movsl
in
pusha
je
mov
push
in
stos
inc
ja
fistpl
cwtl
pop
in
test
sbb
sti
divl
push
adc
roll
pop
addr16
divb
movb
sbb
or
or
cli
cmp
inc
stc
inc
xor
fisttps
push
imul
lds
mov
pusha
ljmp
ss
add
or
fdiv
jle
loopne
cwtl
ret
xchg
or
sbb
add
sub
pop
roll
pushf
xorb
adc
add
add
shll
lea
mov
lea
push
mov
push
cmp
mov
jno
mov
add
pop
movsl
fidivs
loopne
jo
adc
addb
in
mov
stos
jp
and
mov
adc
test
and
insl
cmp
mov
sub
les
or
dec
inc
cld
dec
adc
inc
test
lods
addb
add
daa
ja
and
jb
or
jb
sti
pop
jo
insb
je
cmp
ja
adc
jle
iret
add
inc
dec
jne
sub
loopne
mov
aas
cltd
idiv
imul
pop
adc
pop
ret
cli
add
repnz
push
or
cmpl
push
ret
popa
jo
mov
sub
adc
xchg
xchg
andb
sbb
movsl
mov
call
adc
dec
sarb
inc
pop
dec
ficoml
hlt
or
dec
in
xchg
into
mov
inc
pop
inc
call
data16
add
popf
jne
outsb
inc
add
sbb
add
and
pop
mov
lods
mov
pop
pop
lock
or
dec
lock
imul
pop
inc
fs
push
sub
mov
mov
fimull
les
sbb
and
ss
sub
cmpsb
mov
ret
imul
dec
fsubrl
cmp
jb
test
mov
sbb
fisttps
sbb
subl
call
pop
adc
aad
mov
and
inc
sbb
popa
mov
pop
shll
cmp
gs
mov
mov
push
int3
and
bound
cmovbe
inc
jg
mov
inc
rcrb
cwtl
aad
fimull
mov
and
add
lret
or
inc
bound
repnz
es
xchg
pop
push
dec
cmp
xorl
xchg
sbb
mov
call
push
push
and
ret
mov
aam
pop
fmuls
push
or
adc
and
jnp
out
enter
add
add
sub
je
mov
or
mov
dec
ljmp
cmp
ret
xchg
loopne
mov
in
cmpb
jne
pop
orb
adc
mov
lea
or
cmpsl
push
rorb
inc
jecxz
outsl
loop
pop
cs
ret
push
fdivrl
idiv
mov
jae
mov
loop
xlat
adc
loope
out
sbb
lea
jle
ror
aam
xchg
cmp
addr16
cwtl
inc
add
adc
pop
sahf
cli
repnz
test
cltd
cmpb
lods
sbb
pop
xchg
scas
in
mov
sahf
dec
dec
insb
mov
mov
mov
daa
pop
mov
mov
mov
es
into
add
or
mov
call
dec
or
jno
cmp
sbb
jne
sub
jno
sub
mov
dec
add
xor
cmp
add
inc
xchg
cltd
lahf
jmp
lcall
out
mull
xlat
js
sbb
jmp
pop
mov
pop
mov
in
push
add
inc
pop
add
jo
pop
call
enter
jg
leave
push
adc
xor
js
mov
jne
or
xor
rcll
adc
add
popa
inc
dec
push
fmul
sub
jns
outsl
add
mov
das
pushl
mov
add
adc
and
mov
mov
popw
icebp
mov
inc
cmp
push
pop
incl
outsb
loopne
call
fdiv
inc
js
xchg
ljmp
add
jb
movlhps
divb
js
imul
adc
mov
pop
ljmp
call
adc
orb
dec
jne
mov
fdivs
mov
fs
fimuls
or
add
ja
pop
adc
icebp
cmp
and
sub
or
inc
fsubp
or
or
pop
mov
or
push
popa
inc
test
or
repz
add
mov
js
iret
repz
into
sub
pop
mov
hlt
mov
rol
out
adc
int3
add
mov
fcompl
lock
cmp
xchg
mov
mov
pop
pop
adc
inc
ret
and
lds
dec
push
lea
mov
push
and
pop
mov
aam
adc
aam
dec
sub
jmp
pushf
inc
sbb
xor
mov
in
sub
or
xchg
xor
mov
je
add
jmp
out
add
cli
push
pop
dec
sahf
adc
popf
push
dec
push
pop
dec
lock
pop
jb
or
and
mov
ficomps
in
xor
mov
lcall
sub
nop
adc
sbb
adc
call
and
add
push
jmp
jecxz
dec
mov
sub
jmp
cmpb
dec
mov
aam
ret
andl
sub
mov
jmp
add
push
mov
and
mov
or
push
sarb
rcrb
je
push
or
fmull
xor
out
add
or
or
add
mov
or
xor
or
inc
and
push
sub
movb
cmp
in
xchg
je
add
ret
xor
push
xchg
loope
and
divl
xor
xchg
push
pop
xor
push
andl
sbb
lds
xchg
inc
jns
xchg
fs
add
sbb
xchg
xor
jae
iret
push
push
jmp
and
shll
lea
push
cltd
mov
add
jb
aam
mov
js
fucomp
out
loope
push
or
test
adc
jmp
scas
push
hlt
jmp
mov
adc
popf
pop
in
cmpb
mov
imul
insb
dec
mov
ljmp
mov
cmp
stos
in
pop
adc
sub
addl
xor
or
pusha
cmp
jne
push
mov
in
sub
pop
cmc
dec
or
jae
adc
sahf
pusha
push
std
cmp
pushl
clc
cwtl
mov
pop
jno
rcl
jmp
add
cmp
stos
lods
sub
das
lcall
adc
dec
and
add
inc
mov
aas
clc
loope
sbb
xor
sub
sbb
les
mov
push
sbb
rcr
lea
or
and
mov
arpl
rcrl
pop
dec
adc
sbb
fmuls
lahf
mov
fimuls
ffreep
rcll
sbb
push
xorb
push
or
popl
xlat
inc
ret
and
jge
adc
nop
rolb
jl
clc
ljmp
loop
aas
sbb
adc
aam
jo
adc
jae
divl
cmp
jle
js
sub
add
fsubl
pop
mov
in
xchg
nop
aam
xor
es
inc
pop
in
inc
or
sahf
lock
add
jb
aad
add
or
cmpsb
lock
arpl
adc
icebp
iret
test
dec
hlt
hlt
arpl
hlt
cltd
fmuls
dec
mov
test
add
out
adc
repnz
aad
inc
cmpsb
in
mov
push
stos
push
and
pop
inc
in
mov
adc
cmp
jl
fstpl
push
jne
incl
mov
xchg
adc
adcb
dec
and
push
mov
sbb
idivl
mov
sbb
dec
je
adc
je
or
fucomi
cli
je
jmp
mov
and
sbb
jmp
fcoms
shll
notb
cmpsl
lock
xor
xlat
repnz
sbb
lahf
out
loopne
push
js
push
in
add
pusha
mov
jl
cmp
sub
inc
aad
outsb
add
cmpb
mov
mov
pushf
or
add
lods
lods
sbb
inc
mov
out
mov
dec
adc
scas
les
pop
jecxz
and
into
mov
or
ds
sub
jl
aad
pop
cs
mov
or
dec
or
mov
inc
mov
mov
clc
aas
leave
cmc
test
jne
cmp
jg
mov
cli
notl
cltd
xor
sub
add
ss
xchg
aad
add
fs
int3
xor
jle
mull
xor
notb
call
add
xor
scas
jecxz
aam
aam
js
jno
xor
lock
fwait
stos
les
out
inc
sub
not
out
imul
add
pop
loopne
mov
aaa
rcll
cwtl
shr
pusha
ja
mov
sbb
mov
insl
mov
jne
les
xor
mov
cmp
jmp
mov
mov
popa
add
bound
fadd
or
aad
mov
js
mov
repz
enter
add
dec
cmp
dec
ljmp
add
call
out
sub
jb
and
pusha
cmp
shl
pop
shlb
es
loopne
in
cltd
fmul
imul
ljmp
iret
jae
in
sbb
jecxz
mov
xor
ss
mov
dec
pop
cmp
mov
or
ja
cmp
xchg
sub
mov
add
mov
xor
jbe
jl
enter
fs
pop
or
in
jno
mov
add
or
xor
add
ja
cmp
popa
adc
sbb
and
cmpsl
mov
pop
dec
sbb
test
cmc
sub
mov
out
fadds
and
data16
and
jmp
mov
mov
mov
inc
cmpsl
or
mov
fcomps
and
jp
push
push
xor
aam
xchg
icebp
and
aam
insb
jne
je
lock
push
out
inc
push
mov
mov
xor
mov
gs
mov
add
push
cmpsl
lock
orl
gs
mov
jecxz
lods
adc
dec
fisubrs
and
push
out
add
xchg
insb
pusha
add
ret
sub
or
mov
pop
lea
rcr
dec
add
xor
or
and
pusha
cmp
fmuls
je
test
add
pusha
pop
dec
or
pop
jb
xlat
add
pop
sbb
push
test
push
push
sahf
shl
enter
ja
jne
adc
faddl
sbb
data16
popl
popf
loopne
push
pop
sub
push
scas
gs
mov
adc
inc
iret
daa
adc
popa
jb
arpl
pop
test
fdivp
clc
into
push
inc
pop
xchg
lret
aam
int3
pop
sub
add
test
rcll
jo
stos
ret
lea
out
xor
pop
push
cmp
add
and
ljmp
adc
aas
aas
jge
add
push
shll
out
les
pop
into
mov
jmp
fldl
jnp
add
fbstp
sbb
cld
or
or
inc
push
rcr
lahf
bound
inc
aas
push
sbb
push
mov
or
push
sbb
daa
jmp
jmp
call
push
out
and
or
movsl
mov
lret
xchg
inc
add
dec
mov
call
and
movsb
xchg
sbb
sbb
dec
pushf
or
jbe
inc
cld
xchg
jmp
add
xchg
shlb
add
sbb
jno
dec
pop
lock
out
inc
mov
inc
lods
and
sub
inc
add
and
dec
jnp
mov
push
add
mul
daa
subb
js
sbb
xor
test
push
push
push
mov
adc
pop
inc
inc
dec
lret
push
pop
sub
dec
push
hlt
jbe
nopl
lock
sub
xchg
movl
push
sti
or
hlt
pop
add
out
out
xchg
push
scas
shlb
add
movsb
stc
es
loope
dec
call
mov
jne
dec
cli
xchg
dec
loope
cmpsb
jae
fldl
add
xor
adc
jl
je
xchg
cmp
cmp
in
add
cmpsb
add
sbb
adc
insl
divl
test
push
outsb
mov
incl
mov
cwtl
rorb
pop
leave
and
loop
clc
mov
push
jecxz
mov
cmpsl
mov
mov
mull
cmp
insb
js
add
std
sub
add
pop
cmp
add
das
push
mov
pop
les
xchg
jo
pop
dec
jne
push
push
inc
and
pop
jecxz
pop
shrb
lret
mov
dec
mov
xchg
mov
cmp
or
or
adcb
mov
sub
jg
fwait
and
je
mov
shlb
sahf
inc
je
call
and
in
push
test
cmc
jle
mov
aad
pop
sbb
xlat
sbbw
jp
int3
inc
adc
pop
sub
adcb
add
add
iret
mov
mov
hlt
mov
aaa
dec
adc
fdivs
addr16
mov
std
pop
jns
add
jmp
mov
cmp
addr16
out
cmp
and
xchg
je
jne
inc
sub
insb
aam
jmp
int3
jge
call
jle
test
stos
in
dec
jne
lds
les
iret
pushl
xor
mov
sub
push
add
aas
add
mov
mov
sub
adc
sub
xchg
xor
out
test
mov
fldcw
cmpl
or
in
outsb
ret
in
loope
int3
dec
pushf
push
shlb
xor
mov
pop
movsl
sub
or
popf
xchg
call
push
popa
in
rcrb
enter
int3
aaa
mov
lods
xor
push
and
hlt
or
and
mov
mov
or
xchg
mov
jno
loopne
jnp
stc
les
xorb
shrb
loope
mov
xchg
pop
jle
or
sub
or
test
and
lods
or
mov
mov
add
mov
rcrb
shlb
xchg
mov
xor
mov
push
cmc
out
out
mov
or
in
mov
outsb
arpl
sub
cltd
jle
into
or
mov
cmpsl
xor
mov
jp
or
hlt
lds
js
jbe
xchg
mov
in
inc
nop
push
push
and
cmp
loopne
mov
in
xor
cmp
or
addr16
cmp
stc
pushf
xor
mov
test
add
mov
xchg
shrl
sub
xor
loope
sbb
sub
stc
xor
add
cmp
das
int3
ucomiss
notl
les
test
pop
adc
ja
nop
sub
loop
into
ja
add
jnp
ljmp
sub
xchg
sub
test
push
ljmp
pop
inc
cmp
dec
lea
stc
mov
sarb
call
xor
adc
roll
fcomip
sub
das
inc
mov
xchg
push
jl
pop
fisubrl
xchg
inc
gs
les
into
std
fistl
cmpb
sbb
les
les
or
pop
arpl
or
je
shlb
fistl
scas
pop
jp
add
sub
fcos
ss
shrb
cli
arpl
pop
or
add
cmpsl
or
verr
sbb
push
adc
sub
insb
mov
push
sub
or
adc
leave
xchg
and
or
out
and
jg
pusha
fs
jg
cmp
in
sbb
sbb
aam
mov
fsub
jmp
push
shr
cs
push
push
or
fisttps
mov
pop
pop
das
or
decb
push
push
push
jb
jmp
pusha
nop
push
or
adc
ljmp
dec
push
adc
push
xorb
xchg
xor
add
pusha
push
insl
pop
aaa
adc
rolb
outsb
jmp
divb
movsb
mov
jmp
rcrb
loopne
add
xchg
adc
enter
mov
mov
int
std
xchg
mov
inc
call
or
jge
clc
inc
ficomps
es
push
loopne
and
push
rorl
lods
xchg
and
scas
data16
in
loopne
call
push
ret
mov
or
gs
cmp
push
fdivl
addr16
aaa
mov
in
enter
mov
xchg
mov
mov
add
push
cld
and
jb
cmp
je
jmp
xor
inc
mov
sub
jmp
and
sbb
add
push
shll
or
or
mov
fs
mov
mov
ficoms
or
test
xor
mov
lds
nop
jne
sub
pop
inc
add
jae
testb
pop
xor
push
dec
adc
mov
mov
sbb
adc
lahf
mov
sbb
cli
mov
xor
xor
adc
add
mov
and
add
jae
adc
out
lret
enter
lods
rcrb
xchg
xchg
imul
jmp
sub
jb
mov
pushf
mov
gs
add
leave
mov
ret
cmpb
sub
fst
push
mov
divl
and
lock
std
cmp
sub
out
pusha
push
sub
jae
imul
outsl
neg
cmp
cld
pop
adc
mov
rcr
movsb
dec
ret
hlt
add
mov
mov
and
cmp
mov
inc
sbb
pop
addb
jmp
pop
enter
xchg
lock
inc
xor
rolb
or
and
push
mov
insb
jb
mov
test
jns
xchg
andb
shrb
adc
pop
shl
out
and
out
mov
cld
pop
sahf
fldl
adc
pop
mov
in
imull
add
imull
mov
add
add
aaa
les
adcb
or
mov
ror
dec
adc
cmp
enter
insb
pop
cltd
or
xlat
int3
and
adc
xor
loopne
push
push
mov
shrb
iret
in
push
in
imulb
push
sub
mov
inc
lret
cmp
fdivs
ds
and
adc
cmp
add
adc
sub
sbb
imul
jle
jne
out
test
les
mov
push
xor
lahf
jmp
lahf
fnstsw
add
or
fnstenv
pop
clc
insl
and
push
loope
push
xchg
push
cmc
test
ja
clc
xchg
sub
adc
in
jbe
jb
xchg
sub
push
inc
loope
inc
das
lcall
jne
sbb
pop
mov
ret
or
fisttpl
jmp
sbb
lods
shrl
push
adcb
dec
testb
xchg
mov
xchg
cmp
ret
mov
and
loope
adc
cltd
dec
jns
cmp
inc
jne
pusha
mov
or
inc
cwtl
lds
insl
mov
les
or
xchg
jecxz
mov
mov
ss
in
inc
ror
inc
adcb
pusha
shlb
mov
and
adc
call
xchg
das
fcmovnu
jp
add
and
mov
dec
lods
cli
push
adc
push
loopne
or
addb
int3
mov
fidivrs
add
jne
cmp
nop
sarl
test
jp
cmc
mov
inc
and
pop
cwtl
sbb
pop
dec
dec
int3
pop
push
pop
and
pusha
jae
popf
imul
push
sbb
dec
clc
imul
and
xor
cmp
dec
xor
xor
popa
sub
mov
leave
insb
inc
imul
test
outsl
enter
pop
sub
xchg
sub
lock
sub
and
xor
or
icebp
mov
jecxz
insb
jge
inc
adc
inc
sbb
subl
jg
sub
mov
push
xor
test
jne
jg
aas
cmp
lcall
ret
jle
ds
aam
inc
or
ret
sbb
hlt
addr16
inc
mov
dec
add
clc
aaa
add
pop
mov
mov
aas
dec
aas
inc
xchg
outsb
add
pop
lock
dec
dec
outsl
xor
jge
mov
jne
or
mov
dec
push
pop
mov
out
jns
adc
rcl
xchg
xor
pop
cmp
sbb
dec
and
mov
cmp
insl
sbb
or
bnd
insl
sbb
sub
sub
pop
xchg
lea
mov
repnz
dec
mov
jle
lods
mov
lahf
sahf
hlt
push
xlat
sbb
dec
mov
test
and
xor
nop
inc
inc
xchg
inc
fsubrp
dec
int
int3
adc
nop
cli
jle
stos
add
sbb
xchg
arpl
in
sbb
rorb
pop
adc
inc
sbbb
jbe
das
jmp
fdivr
int
sbb
push
js
arpl
ret
jne
push
xadd
sti
arpl
push
ret
pop
jg
adcb
add
dec
adc
aam
xorb
ja
add
sbb
xor
mov
xor
pop
sbb
repz
mov
ljmp
aaa
sti
clc
nop
sub
add
xchg
and
and
mov
xor
rorb
mov
rorb
cld
mov
fldenv
fst
sbb
push
cmp
filds
mov
cmp
mov
add
mov
mov
insb
mov
and
push
scas
push
dec
scas
sub
movsl
aaa
mov
pop
sub
sbb
inc
sbb
bound
ljmp
jne
jle
or
or
imul
xlat
xchg
in
mov
add
add
mov
into
out
add
add
or
lret
push
mov
data16
pushf
and
adc
sar
add
call
sar
xor
adc
jmp
cmp
fadds
emms
add
movb
mov
dec
sbb
xchg
rorb
sub
jno
jbe
pop
es
enter
clc
xor
and
into
dec
jne
push
or
stc
inc
cli
mov
rol
ss
shl
sub
dec
mov
into
push
adc
mov
ficoms
mov
cmp
or
fcomps
daa
in
sub
cmpsl
mov
std
or
and
push
mov
jl
movsb
cmp
js
mov
sbbb
and
aaa
enter
das
sbb
pop
fsubr
pop
outsb
push
cmp
insb
loopne
pop
add
dec
aam
add
and
dec
lcall
cmp
add
rolb
sub
mov
dec
movsl
inc
inc
sub
mov
test
hlt
add
enter
leave
sub
push
add
dec
fidivs
sbb
dec
fwait
les
ret
adc
in
mov
clc
mov
nop
pushl
cld
push
inc
insb
push
hlt
mov
in
dec
pop
cmp
adc
push
mov
lahf
daa
lds
inc
sarb
iret
pop
loopne
push
arpl
push
insl
fs
out
sub
add
inc
sub
push
xor
add
or
fiaddl
jo
push
inc
push
push
xor
xor
sub
inc
or
inc
mov
daa
or
add
and
mov
sbb
jae
movsb
adc
add
add
aaa
push
inc
fcomps
or
fs
gs
outsb
test
adc
int3
add
sahf
mov
add
pop
call
jno
popa
imul
into
jbe
mov
add
popa
lock
and
rol
pusha
push
dec
sbb
outsb
sarb
inc
inc
loope
shr
or
mov
movzwl
xor
inc
dec
push
test
cmp
fcmovb
in
ret
cs
or
or
push
rolb
cli
push
sbb
inc
jl
pop
icebp
ret
jg
or
xor
inc
jmp
pop
pop
pop
ret
pop
push
dec
repnz
inc
imul
or
xlat
jl
mov
lahf
pop
push
sub
adc
cmc
or
push
sbb
ss
and
js
fmuls
inc
xor
sub
jb
add
jbe
je
or
sbbb
and
call
inc
xor
cwtl
test
jbe
cmpl
andb
dec
adc
int
mov
jmp
cmp
lea
push
adc
mov
ret
mov
std
add
adc
adc
mov
add
inc
cmp
ret
popf
sub
fcmovu
mov
dec
mov
xchg
cmp
mov
popfw
loop
inc
in
adc
adcl
rorl
adcl
sahf
sbb
mov
pop
int
sbb
and
or
adc
xlat
enter
in
in
sub
push
xchg
push
movb
pushf
xor
jo
out
iret
fsubl
clc
pop
fsubs
cld
adc
add
pop
adc
flds
xchg
push
adc
xchg
pop
add
jae
mov
ret
or
dec
scas
stos
add
in
sbb
dec
add
push
jno
xchg
movsl
add
push
mov
xor
mov
dec
ss
orl
ljmp
jg
cmp
mov
inc
aam
aad
push
xchg
lret
test
push
aas
push
push
cmpsb
pop
push
aaa
les
aad
lods
or
or
and
les
je
imul
dec
inc
gs
pop
mov
pop
arpl
inc
rclb
pusha
mov
adc
icebp
push
pop
sbb
jne
insl
mov
mov
test
enter
mov
and
cs
cmp
idiv
cmp
inc
cmp
jne
movzbl
dec
xor
stos
cmpb
add
mov
xchg
mov
xor
and
xchg
mov
inc
sub
dec
cmc
int3
xchg
cmc
cld
push
mov
add
add
add
dec
insl
adc
in
dec
jne
add
pop
call
mulb
lods
popf
push
pop
sbbb
inc
movl
int
fs
inc
mov
stos
xchg
lock
and
ret
mov
daa
mov
add
sub
add
push
adc
fdivs
insl
mov
loopne
and
lea
lahf
push
push
outsb
addl
or
adc
aaa
call
shlb
dec
out
mov
cmp
inc
dec
sub
adc
sbb
jbe
cwtl
scas
add
lcall
lock
xor
in
inc
pop
sbbl
and
mov
outsb
leave
mov
imul
lret
loopne
push
sbb
add
neg
pop
adc
inc
or
nop
call
mov
add
clc
and
pusha
xchg
les
pop
pop
or
xchg
ret
iret
bound
cmc
jl
push
add
xchg
fisttps
mov
test
xor
xor
inc
jne
mov
mov
dec
cmp
clc
call
inc
push
pop
add
dec
sarl
dec
sbb
jnp
or
test
jo
stc
ret
dec
mov
mov
or
shlb
jp
pop
xchg
jb
inc
incl
mov
pop
and
inc
and
inc
idivb
add
aas
test
jmp
inc
jecxz
orb
mov
dec
notb
mov
pop
xchg
or
dec
or
dec
ss
xor
rcll
cmp
xorb
pushl
pusha
sub
xor
in
movsb
or
xor
adc
loopne
lods
push
dec
inc
repz
push
scas
or
mov
pop
enter
fistpl
cmc
xor
adc
push
jne
fstp
xchg
push
sbb
outsb
jl
mov
out
sbbl
mov
jmp
jge
and
or
add
sti
movsb
out
jecxz
pop
jmp
sarb
mov
and
and
bnd
je
ret
popa
mov
add
jb
add
mov
push
pushf
sbb
sti
or
jo
and
xchg
or
enter
orb
ds
adc
pop
popf
add
pusha
mov
sub
adc
out
das
dec
dec
cmp
ja
inc
ja
int3
adc
fdivrs
or
mov
mov
jle
sub
push
loopne
dec
dec
pop
cmp
jmp
dec
mov
sub
lea
orb
inc
bound
cmp
cmp
pop
add
enter
jg
push
scas
sti
in
or
int3
dec
and
mov
sub
or
lock
pop
adc
in
and
test
dec
mov
shlb
sub
adc
fidivl
pop
stos
andb
mov
inc
push
repnz
add
and
push
mov
mov
xor
adc
xor
hlt
popa
jb
xor
push
pop
ret
pop
fwait
or
jge
mov
or
aam
lcall
dec
pop
pop
sub
mov
add
subb
test
or
jne
add
leave
push
jg
push
sbb
push
add
adc
push
enter
clc
push
pop
sub
lahf
or
jbe
mov
push
bnd
xor
cwtl
sbb
stc
incl
mov
outsl
or
rorb
inc
ss
pop
pop
mov
cmp
jge
lock
adc
test
daa
fwait
subb
add
mov
adc
jbe
jne
outsl
cltd
add
push
aam
pop
and
int3
and
cmp
jle
cld
pop
jo
outsl
iret
add
call
fdivr
mov
mov
lods
adc
adc
mov
xchg
push
or
adc
or
mov
inc
xor
cs
mov
push
inc
xor
cld
or
rcll
lock
or
xor
and
hlt
lock
pusha
mov
dec
xchg
dec
inc
lods
fisubl
jmp
add
sbb
push
in
dec
push
push
add
lods
adc
decl
dec
or
dec
js
sub
sbb
add
mov
push
gs
push
push
test
fmull
les
sbb
ret
sahf
aas
iret
imul
xlat
and
mov
rcll
pop
mov
pusha
rcrl
ljmp
and
pushf
insb
leave
and
in
ja
cmp
or
iret
push
je
push
mov
cmpsl
inc
addb
mov
call
sub
test
ret
mov
mov
ljmp
add
lea
inc
xlat
in
mov
adc
jl
dec
or
test
jo
inc
cld
das
add
add
insb
pop
enter
pop
or
inc
mov
add
dec
in
push
iretw
cmp
inc
or
push
adc
or
add
rorb
bound
in
outsl
adc
stos
icebp
outsl
sub
scas
push
aam
adc
push
fcmovb
ret
lods
inc
ret
sub
mov
ret
aad
pop
enter
inc
add
or
es
add
xchg
sub
add
cmpsb
addb
jmp
inc
nop
mov
fistps
and
movb
or
pop
pusha
pop
mov
mov
sub
add
pop
mov
add
rclb
dec
fsts
addl
lret
stc
and
out
and
lods
push
out
push
fcom
popf
or
outsb
mov
push
or
and
je
inc
push
xchg
loope
out
push
push
jl
dec
outsb
inc
pushl
sbb
mov
shr
mov
pushw
pop
sbb
sbb
dec
jne
jno
nop
arpl
data16
lods
std
or
rcrb
test
jl
inc
pop
xor
xchg
mov
inc
out
or
mov
push
pusha
jo
jne
jle
loopne
or
push
aam
inc
pop
xor
adc
push
cmp
lahf
sub
pop
and
jo
inc
iret
enter
pop
adc
pop
or
sarb
daa
add
lock
dec
mov
pop
ja
cs
in
in
repnz
popf
mov
xor
pop
das
dec
sahf
xchg
addr16
mov
dec
movsb
pop
pushf
inc
loopne
out
popf
xchg
mov
popf
mov
push
jo
jns
iret
enter
xor
and
out
cmp
mov
popf
cmp
iret
dec
pop
inc
inc
sub
xlat
popf
out
cmp
add
push
in
pop
popf
cmp
fbstp
mov
iret
leave
xor
push
push
pop
sub
in
jne
and
cmp
out
sbb
adc
sbb
popf
cmp
aad
push
test
or
or
out
in
fs
and
mov
in
mov
cld
dec
push
mov
xchg
iret
enter
pop
lock
out
in
xchg
in
das
call
enter
daa
loopne
mov
daa
out
fadds
aam
js
sarb
cmpsb
sbb
mov
repnz
int3
rcrb
cmp
lahf
mov
mov
leave
jae
movsb
mov
lods
ja
out
in
mov
inc
pop
jl
sbbl
sbb
add
lods
adc
mov
jg
sti
cmp
xlat
cmp
or
hlt
fsub
loopne
pop
cld
in
xor
mov
mov
mov
sub
hlt
cmp
and
push
insb
jo
js
xor
push
test
mov
and
and
or
adc
adc
fs
dec
nop
pop
repnz
push
dec
cmpsb
add
repnz
sbb
mov
sub
or
leave
inc
or
and
inc
push
imul
lahf
mov
in
push
mov
mov
je
ljmp
sbb
loopne
cli
adc
or
pop
ret
dec
adc
xchg
imul
mov
cmp
mov
and
pop
adc
cwtl
call
mov
mov
loop
rorl
test
push
ja
bound
mov
jb
repnz
imul
adc
enter
into
hlt
and
and
mov
lods
repz
ret
jecxz
int
mov
and
stc
clc
lea
lcall
loopne
sbb
adc
mov
std
sub
clc
mov
mov
xadd
or
adc
dec
sub
pushf
adc
fninit
pusha
dec
and
lahf
and
fildll
cmpl
ja
mov
jecxz
and
adc
pop
push
ret
xor
sbb
or
nop
inc
lea
fwait
pusha
iret
cmpsb
sub
leave
adc
and
mov
inc
or
adc
hlt
dec
insl
pop
jp
cld
clc
adc
add
add
ret
cmpsl
xchg
push
push
jle
movsl
call
mov
lods
pop
nop
xchg
out
mov
add
pop
es
in
or
test
test
es
mov
es
fs
sub
xor
cltd
fs
dec
cmp
inc
fs
dec
es
dec
mov
push
movsb
nop
pop
es
lods
pop
es
or
je
je
pop
es
es
es
pop
es
cmp
test
les
es
int3
mov
lcall
daa
test
je
mov
pop
or
incb
mov
inc
js
dec
add
outsl
je
mov
fs
jne
das
dec
jne
inc
fs
lret
imul
fs
outsb
inc
mov
add
jb
insl
jo
inc
fs
mov
push
je
pop
push
cmp
or
es
xchg
and
jns
pusha
sbb
jae
pop
inc
jns
lea
mov
test
cmp
sbb
xchg
push
jb
and
inc
xchg
add
and
cmp
inc
insb
jmp
js
int3
and
or
dec
and
adc
push
push
push
scas
or
test
mov
adc
cmp
repz
sub
push
pop
push
mov
iret
js
sahf
jnp
pop
aas
es
adc
inc
pop
jnp
xor
xor
add
xor
adc
cmc
push
outsb
sub
movsb
pop
add
dec
loope
lods
ds
add
fucomp
outsl
or
movsl
dec
sbb
out
rorl
inc
stc
test
pop
pop
jne
pop
xor
out
pushf
mov
push
inc
mov
mov
mov
inc
jb
repz
loope
add
mov
adc
xchg
iret
fucomi
cld
add
iret
xchg
outsb
add
in
gs
mov
out
jl
push
inc
nop
sbb
fld
dec
test
fs
lock
inc
clc
inc
jb
adc
popa
push
push
imull
inc
nop
mov
popa
out
fimull
jo
out
in
sub
add
mov
pusha
sub
push
inc
dec
mov
sub
sub
imul
dec
rcrl
or
xchg
push
jb
jb
dec
cld
orl
inc
cmp
dec
sub
cmpsl
lcall
add
in
outsb
add
fcmovne
testb
mull
inc
or
adc
add
loop
call
pushf
in
pop
es
mov
in
and
or
loop
std
and
in
push
enter
pop
dec
in
enter
lret
sub
je
cmp
nop
adc
psrld
or
pop
cwtl
sub
shlb
cs
pop
mov
adc
xor
es
add
sbb
dec
ds
aaa
ret
sub
pop
add
cmc
sub
or
aas
dec
je
sbb
dec
adc
in
fs
push
nop
xchg
jbe
es
jbe
add
sbb
adc
inc
mov
pop
sub
aas
stc
pop
inc
dec
pop
sbb
clc
mov
jb
lret
clc
pop
stos
push
repnz
hlt
mov
repnz
jnp
or
div
xchg
sbb
leave
aaa
leave
push
in
mov
sub
mov
addb
mov
mov
jnp
sbb
cli
sbb
loopne
icebp
cmpl
dec
loopne
movl
mov
nop
push
sub
cmpsb
xor
fmul
add
mov
sub
xor
insl
mov
loopne
sbbl
rorb
scas
repnz
jmp
sarb
mov
rcl
inc
imul
push
jne
jmp
adc
pop
in
addr16
or
test
repnz
subb
xor
push
mov
shlb
lock
out
decl
daa
jecxz
roll
push
roll
roll
pop
cmp
dec
es
lret
add
jecxz
lret
adc
test
das
sub
push
mov
add
xchg
xchg
cli
adc
pop
sbb
sub
add
mov
push
and
imull
pop
mov
cmp
in
cld
test
adc
sar
pop
pusha
inc
push
add
andb
sub
adc
xchg
push
or
test
mov
pop
les
addl
xchg
clc
jmp
and
imul
push
inc
jmp
mov
push
rclb
pop
push
cmp
lods
rcll
add
lea
imul
dec
inc
pop
imul
dec
inc
iret
sahf
jmp
mov
dec
sbb
add
aas
dec
nop
push
shlb
hlt
adc
dec
repz
dec
jnp
and
dec
cmp
test
jo
sub
lret
xchg
negb
push
cld
or
or
insb
int
adc
or
ret
rcrb
xor
jne
pop
inc
add
and
add
imul
and
mov
add
mov
call
mull
and
xchg
add
or
xchg
fadds
lods
lock
add
mov
mov
and
or
or
xchg
jns
xlat
jb
mov
xor
sbb
enter
movsl
pop
ret
outsl
and
inc
jg
pop
loopne
mov
mov
sub
inc
add
mov
or
add
sarl
in
or
nop
lret
loopne
in
in
xchg
in
loopne
pop
mov
lock
jno
loopne
mov
pop
flds
aam
sub
into
mov
roll
mov
mov
cmp
push
loop
js
rep
cmp
xchg
dec
scas
pushf
leave
pop
add
adc
clc
dec
pop
jb
push
daa
or
pusha
loope
pop
test
push
add
fwait
jbe
xor
notrack
push
push
ja
fs
add
pop
add
mov
shr
cmp
mov
fs
cmp
dec
mov
ficoml
data16
or
ja
xor
lock
adc
jg
pop
test
jmp
outsl
or
dec
rorb
ret
cmp
mov
adc
aaa
scas
orb
sub
repz
fwait
jne
test
imul
inc
sbb
mov
mov
mov
roll
cmp
add
daa
add
lret
or
sbb
fldcw
push
add
sbb
test
in
pop
cltd
or
addb
das
xchg
loopne
jns
js
enter
popf
push
mov
inc
orb
movzbl
mov
push
and
inc
adc
mov
cs
push
ret
rcrl
jle
xor
es
lock
cmp
out
mov
add
bound
cmp
mov
test
int
xor
cmp
sub
xchg
rcr
inc
mov
dec
les
xchg
stos
mov
xlat
jbe
clc
fucomip
push
sbb
cmpsb
test
inc
sbb
cmp
pop
cmp
sbb
daa
scas
and
add
ja
mov
mov
push
in
cmpb
cmp
sub
add
imul
popf
or
sbb
dec
mov
arpl
in
cmp
sbb
jns
cmp
std
and
or
in
in
add
and
in
push
loop
inc
decb
push
inc
pop
in
inc
and
rolb
cmpsl
add
jns
sub
data16
mov
cmp
pop
andb
imul
cmp
repz
mov
cmp
push
jo
scas
fdivl
mov
mov
aam
cli
xor
cmpb
lock
sbb
imul
lods
lock
movswl
adc
mov
cmp
popa
inc
jb
add
or
xor
jle
dec
sti
or
fnstsw
daa
xchg
lock
dec
pop
movsl
mov
dec
inc
in
movsb
test
call
pop
mov
pop
mov
inc
inc
push
in
loopne
mov
xor
mov
mov
leave
and
fcoms
mov
or
in
or
cwtl
inc
ror
inc
shlb
int3
enter
xchg
dec
test
mov
and
imul
pop
les
ljmp
je
or
jmp
and
iret
mov
shrb
mov
imul
xchg
je
lock
pushf
cmp
test
aas
pop
sarb
repnz
cmp
imul
inc
rcll
daa
cmp
jnp
jecxz
daa
push
dec
outsb
popl
mov
mov
inc
insl
push
push
jb
mov
push
ret
sbb
add
xor
add
mov
fnsave
mov
insl
and
inc
les
xor
leave
test
add
mov
sub
pop
movsb
mulb
sub
movsb
mov
insb
mov
lret
inc
xor
add
cwtl
jecxz
mov
in
lds
adc
mov
inc
mov
adc
stos
mov
rorl
push
sub
rcrl
mov
push
push
inc
cmp
repnz
js
mov
push
popa
icebp
inc
or
jp
pusha
dec
mov
popa
push
loope
push
xlat
inc
pop
jecxz
jmp
jo
cmpsl
call
test
aaa
inc
inc
test
sub
add
clc
inc
add
xor
jmp
ficoms
enter
cmp
clc
ss
jge
and
xor
mov
loopne
mov
push
enter
outsl
push
inc
push
loopne
sbb
adc
push
jnp
and
ja
mov
outsl
cmp
sub
xchg
jp
xchg
ret
cmp
scas
mov
and
mov
in
adc
push
fs
ss
out
rcr
out
add
xchg
imulb
inc
pop
pop
sub
sahf
dec
arpl
mov
out
inc
push
call
dec
mov
xor
loopne
popl
movsb
and
pop
pop
sbb
dec
dec
cmp
shlb
in
and
test
loopne
insb
mov
xor
pusha
xor
jo
aam
mov
push
pop
pop
push
cmp
roll
push
fwait
dec
int3
scas
dec
mov
pop
enter
movsb
enter
and
and
aaa
mov
mov
xchg
xor
xchg
jecxz
and
ds
jae
fisubrs
pop
lds
and
imul
pop
iret
jnp
sub
ljmp
daa
inc
inc
call
sbb
std
mov
fdivrs
pop
sbb
es
bound
mov
cmp
leave
mov
incl
cmp
mov
sub
or
cwtl
movsb
cltd
movsb
aad
sbb
cmp
cmp
cwtl
cwtl
lds
xchg
sub
adc
dec
adc
and
jmp
or
jmp
fistl
movsb
adc
dec
push
imul
repnz
dec
mov
nop
dec
xchg
cs
arpl
mov
addr16
ljmp
sbb
ret
xlat
xchg
pop
cmp
mov
rorl
add
test
push
sub
and
adc
add
mov
push
cmp
cwtl
adc
gs
add
jnp
test
movsb
out
push
out
lcall
jp
repz
fwait
mov
cli
iret
jae
jl
mov
dec
add
repz
test
xchg
mov
fldt
ret
mov
and
mov
mov
and
mov
lods
and
loop
lods
and
cmp
lods
movsl
cwtl
sbb
lods
sub
movsb
adc
mov
movsb
cmc
xor
jmp
loope
and
jo,pn
mov
mov
les
and
inc
mov
mov
mov
mov
inc
adc
push
dec
int3
push
dec
pop
imul
lret
dec
sub
outsl
dec
push
inc
jnp
inc
cmp
cwtl
mov
shr
orps
dec
mov
xchg
scas
aaa
movsl
inc
movsb
mov
inc
fwait
popa
adc
lods
lods
and
mov
and
and
push
movsb
adc
mov
movsb
push
cmp
lods
adcb
inc
mov
mov
into
aaa
pushf
push
test
inc
adc
jnp
iret
jb
jb
inc
in
cmp
in
imul
es
mov
add
iret
pop
push
movsb
xor
popa
add
rclb
pusha
pop
adc
rclb
inc
add
je
mov
jmp
add
add
in
lds
dec
sub
push
sbb
or
daa
mov
loopne
dec
lcall
leave
xchg
mov
pop
push
push
sbb
test
xorl
xchg
xchg
xor
fstpl
fwait
inc
xchg
pop
leave
xor
pop
push
add
js
inc
rorl
pop
andb
push
mov
inc
inc
out
popa
xchg
xorl
fldcw
pop
popa
test
sbb
repnz
mov
fmull
inc
sub
inc
push
lcall
das
insb
mov
loop
pop
leave
mov
xor
jns
mov
adc
jne
pop
xor
push
popa
xor
out
cmp
aas
pop
dec
sub
jb
xchg
jb
push
data16
and
xor
inc
ljmp
out
xor
adc
or
pop
sti
cmpsb
jbe
jbe
out
dec
fwait
push
ss
aaa
xor
jo
loopne
mov
jecxz
push
jecxz
addl
ficompl
outsb
aaa
push
es
imul
jnp
push
imul
ja
test
ret
mov
mov
push
push
imul
mov
shrl
fistpl
loope
inc
repnz
add
push
imul
mov
aas
mov
cmpsl
add
push
xor
push
jl
jno
mov
and
jle
sub
adc
rorb
lcall
sti
pop
jo
add
insb
cmp
jns
add
les
mov
je
mov
sub
vprotb
xchg
int
cltd
cwtl
insb
mov
pop
sub
mov
and
leave
mov
int
and
sub
lret
sub
push
push
dec
scas
jecxz
daa
add
pop
lret
dec
test
arpl
push
call
inc
es
inc
jp
cmpsb
divl
and
aaa
push
push
imul
cmc
gs
test
nop
ljmp
sub
sahf
inc
push
enter
in
lods
push
xor
jecxz
mov
sbb
inc
test
adc
mov
mov
push
movsb
dec
mov
push
insl
dec
add
mov
lret
sbb
add
cmp
notl
jne
cltd
je
outsb
cmp
jb
imul
lret
xor
dec
mov
mov
push
sti
adc
push
jae
push
and
xlat
sbb
pop
cmp
mov
adc
sbb
adc
je
push
mov
ds
jg
and
inc
lods
pop
ja
out
in
cmp
or
push
test
cmp
aas
dec
sub
add
and
dec
mov
int3
lea
add
sub
push
or
adc
ret
adcl
adc
pop
mov
sbb
std
out
or
add
shll
adc
arpl
or
push
repz
or
enter
mov
add
aad
jle
das
inc
aaa
xor
aam
into
and
mov
sbb
jae
cltd
dec
cmp
aas
mov
into
and
push
mov
cmp
cs
mov
in
pusha
jo
std
dec
inc
xchg
lock
sti
incl
pusha
or
jle
sbb
inc
push
xchg
pop
pop
mov
push
adc
sti
cmp
add
jg
add
lahf
jno
inc
mov
rorb
or
xor
mov
jo
loopne
mov
sub
mov
popa
loopew
dec
adc
test
sbbl
mov
cmp
sbb
addb
lock
xchg
xchg
xor
rcrb
and
inc
dec
jne
jno
pop
inc
rcrl
xor
pop
lock
adc
mov
mov
or
adc
hlt
jne
inc
or
mov
aam
push
aam
leave
test
movsb
data16
pop
dec
xorl
xchg
inc
add
mov
lret
push
dec
imul
aaa
orb
lea
leave
fwait
add
clc
repnz
add
fdivrs
test
xor
push
cmp
push
xor
inc
aam
insl
adc
jns
lret
addr16
or
xor
nop
out
push
jbe
cli
loopne
cmpsb
dec
add
and
insb
or
push
adc
or
or
jp
push
sarb
jnp
and
pop
imull
ljmp
or
jne
dec
jne
jmp
lahf
jb
lret
scas
dec
outsl
out
aaa
test
js
jb
cmp
cmp
ficomps
addr16
pop
pop
push
inc
cmp
pop
xchg
cwtl
xchg
ss
pop
dec
cld
cmpl
fisubs
in
push
cmp
aaa
sub
pushf
push
cmpsl
std
add
and
sbb
adc
or
leave
push
pop
or
xchg
pop
inc
daa
add
push
and
dec
adc
mov
or
xchg
clc
ret
mov
sbb
mov
jl
or
xchg
add
xor
push
or
divps
pop
sbb
push
test
dec
incl
or
fistpll
lret
je
mov
dec
add
or
sbb
jne
in
fucomi
mov
xchg
dec
in
scas
movsb
and
cmpsb
sbb
loop
mov
neg
adc
imul
insb
sbb
adc
jne
aad
in
jmp
mov
movsb
sbb
hlt
jo
loopne
and
pop
je
mov
enter
mov
pop
or
test
pop
cli
pop
add
dec
in
mov
mov
cmpb
je
mov
cmp
push
lar
mov
push
adc
ja
jecxz
jle
test
cli
shr
sbb
mov
cmp
sbb
sbb
add
add
jae
es
or
movsbl
cmpsb
mov
push
xor
je
movsl
imul
push
mov
in
fldt
aaa
iret
mov
push
adc
mov
mov
jl
pushl
cmpb
ja
jb
add
add
call
fnstenv
lret
out
mov
mov
or
adc
inc
mov
std
mov
jb
cmp
std
js
jl
adc
sbb
jmp
popa
lds
pop
shlb
push
mov
js
clc
dec
mov
dec
mov
push
int
or
leave
rorl
hlt
dec
inc
pop
inc
or
sbb
pop
pop
mov
jl
rorl
jle
jb
incl
cmp
pop
cwtl
jno
dec
ljmp
and
cmp
subb
decl
cmp
inc
mov
stos
mov
rep
dec
pop
cltd
dec
and
adc
sti
les
aas
or
push
mov
dec
dec
add
mov
pop
cmp
out
aam
jne
clc
inc
mov
push
movsb
add
xlat
xor
call
jb
adc
pop
das
in
pop
insl
scas
int3
inc
shl
and
inc
in
mov
sbb
insb
sbb
nop
adc
adc
clc
adc
fsubrs
jmp
dec
pushf
sub
enter
das
cmp
adc
hlt
inc
sahf
or
cmp
popa
inc
mov
lea
or
adc
shl
push
or
hlt
out
adc
dec
hlt
inc
xchg
jmp
cs
addl
mov
jne
adc
or
add
out
aad
out
pop
cmp
insb
push
pop
mov
add
jne
xchg
cmp
gs
insb
call
adc
lods
pop
lds
popa
lock
enter
cmp
arpl
push
call
mov
push
adc
add
bound
dec
hlt
dec
jmp
imul
mov
mov
dec
stos
pop
or
ja
or
out
dec
jnp
and
pop
pavgb
add
popa
into
jne
cmp
repz
orb
fstps
addr16
fiadds
adc
inc
mov
std
lods
add
add
or
pushw
or
int3
jle
fistpll
pop
fmuls
xor
push
sbb
lret
rclb
sbb
sbb
cmpsl
and
stos
cld
aad
or
xor
add
or
es
push
les
fisubs
fstps
fwait
imul
sub
fnsave
dec
inc
push
fistpll
daa
dec
sub
ja
out
lcall
enter
sahf
fucomi
jmp
pop
inc
shll
sub
jmp
inc
or
sbb
bound
inc
ja
add
cmp
adc
push
or
mov
jp
orb
push
pushl
pushl
push
fildl
jp
xor
nop
fisubs
lret
add
adc
filds
dec
or
jae
mov
int
adc
clc
dec
or
dec
add
xchg
add
aaa
push
xchg
xchg
dec
push
mov
fldcw
movsb
add
cmp
test
pusha
jle
lahf
add
stos
or
push
call
adc
xor
into
lods
sbb
int
into
lea
xchg
gs
pop
xchg
mov
push
arpl
lods
mov
sbb
or
fisubrl
into
add
jg
or
data16
outsl
push
mov
sbb
sbb
adc
dec
outsl
inc
insb
outsl
sbb
cs
sbb
dec
outsb
insb
jns
inc
insb
popa
push
xchg
push
inc
in
in
out
push
iret
leave
call
rorb
pop
mov
push
push
mov
inc
je
insb
out
mov
fmull
cmpsl
or
dec
imul
fbld
outsl
jne
test
or
dec
xchg
add
lea
push
dec
gs
jo
gs
add
in
pop
add
or
cmpb
push
add
add
outsl
das
cs
dec
gs
xlat
or
jae
shlb
shlb
jne
roll
aaa
fs
or
or
insb
jmp
inc
jbe
add
push
push
gs
add
or
push
mov
sysenter
add
jo
inc
aam
xchg
adc
xchg
mov
out
fcomp
loopne
adc
mov
jb
bound
xchg
out
push
push
push
out
mov
mov
ffreep
or
dec
outsb
fldt
imul
xlat
and
cs
xchg
pushf
shrb
and
dec
movl
push
or
jns
adc
aad
xchg
mov
popa
fisubrl
xlat
aad
inc
pop
or
dec
das
in
out
dec
mov
arpl
ljmp
push
imul
imul
mov
je
sub
xchg
jae
insb
ja
insb
cmp
mov
xchg
cwtl
out
ja
mov
jo
fwait
push
in
insl
fists
ds
mov
cmp
lret
punpcklbw
arpl
js
lcall
adc
stos
popa
cmp
in
out
adc
dec
les
cmp
data16
pop
xchg
nop
push
or
jne
fs
outsb
aas
sub
mov
sarb
lret
pop
mov
mov
js
cwtl
xchg
xchg
outsl
jnp
fiaddl
push
or
or
fisttps
sarb
test
adc
mov
xor
and
and
inc
dec
cmp
inc
xchg
pusha
or
sti
mov
test
int3
jno
jg
mov
push
jo
xchg
xchg
outsl
ret
mov
push
mov
push
scas
add
jo
mov
shrd
cmpsl
sub
adc
inc
mov
incl
ret
shlb
shll
std
dec
nop
test
cmovns
jo
popa
outsl
pushl
add
pushf
jae
push
rclb
sahf
cmpsb
in
cmp
mov
jno
mov
push
enter
jno
cmp
mov
in
pushf
dec
lahf
cmp
cltd
mov
mov
hlt
mov
push
mov
stos
jge,pn
mov
push
dec
lods
pop
cmp
popf
insb
mov
dec
lock
mov
pusha
movsb
xor
push
idivl
dec
scas
fsubr
push
push
test
add
hlt
fimull
popa
jecxz
sbb
sbb
testl
ret
xor
cmpsb
inc
inc
mov
dec
insl
bound
push
roll
fs
jl
es
jae
or
cmpsb
mov
addl
jl
xchg
cwtl
pushf
mov
adc
push
jo
clc
data16
dec
mov
test
xor
cmp
fsubrs
fcompl
or
dec
jb
mov
mov
add
fnstsw
cmp
pop
push
cwtl
data16
and
mov
xchg
lods
pop
setb
jae
jae
fbld
mov
push
insb
mov
xchg
cmp
push
pop
push
adc
clc
sbb
mov
lock
inc
divl
repz
push
mov
cmp
dec
push
aaa
push
add
or
xchg
scas
mov
mov
inc
sub
mov
push
sbb
bound
daa
sub
dec
lcall
enter
daa
movsb
mov
test
stos
sahf
mov
aam
xchg
cmpsl
and
pcmpeqb
jo
inc
adc
vmwrite
inc
mov
add
psubb
movsb
cmp
sbb
roll
stc
push
andps
or
in
and
jb
or
or
jb
pop
jb
sbb
jb
pop
and
mov
sub
push
add
cltd
lods
adc
or
push
push
out
out
lcall
jl
out
mov
jbe
dec
enter
and
loop
rclb
pop
push
daa
cld
ja
adc
inc
add
dec
repz
enter
sbb
and
cmp
repz
cmp
icebp
dec
fdiv
push
jmp
fs
subb
dec
aas
or
test
mov
arpl
adc
push
iret
mov
ret
loopne
sub
push
sub
cmp
push
ror
xchg
out
je
push
leave
fwait
int
inc
mov
in
push
mov
call
repz
lock
rclb
orb
lock
popa
and
fdivrl
sbb
dec
es
inc
add
movups
and
sub
cs
fwait
sbb
fiaddl
flds
nop
sub
adc
push
sub
add
mov
in
jns
movsb
jp
lods
jp
pop
dec
repz
mov
fwait
pop
enter
std
in
or
fidivs
xchg
inc
and
mov
pop
add
jp
add
jg
pop
lret
sar
mov
call
rcll
nop
call
stos
mov
rorb
mov
push
fcoms
cli
loopne
fmuls
in
sbb
mov
fsubrs
xchg
aam
add
enter
adc
sahf
dec
push
add
pop
sbb
inc
vpshlq
int
dec
addb
fs
idivl
ss
jl
cmpb
xchg
jae
enter
push
mov
mov
inc
or
add
sub
aad
or
inc
pop
push
inc
inc
data16
into
scas
pop
data16
add
pop
or
cld
xor
pusha
pop
pop
rolb
pop
faddl
enter
adc
sti
hlt
lcall
lcall
idiv
idiv
cmc
push
push
push
xor
mov
xor
lock
mov
sbb
cmp
repz
sbb
sub
shrl
iret
loopne
or
add
or
out
or
nop
out
pop
xchg
push
imul
add
scas
xor
data16
mov
pop
add
cmp
cld
and
add
addr16
mov
das
inc
xor
inc
push
fs
les
enter
shrb
mov
inc
subb
arpl
imul
pop
add
ficoms
pop
out
mov
pushf
and
or
or
or
mov
repz
fadds
add
mov
jnp
outsb
jo
sub
mov
cwtl
sub
cltd
or
fs
dec
adc
mov
or
pop
push
add
mov
pushl
mov
in
pop
dec
pop
cmpl
jne
push
mov
push
cmp
pop
and
mov
push
mov
sbb
inc
sbb
xor
mov
imul
outsl
jne
out
lock
lcall
test
sub
cmp
or
clc
push
xchg
js
ljmp
cmpsb
fdivrl
jo
dec
push
loop
dec
cmp
xlat
bound
push
xchg
cmpsl
filds
cmc
je
test
ss
and
or
dec
les
lds
stos
adc
cmp
pop
shll
aas
and
xor
sbb
cmpsl
sub
fcomi
and
jl
test
loope
jnp
divl
jmp
sbb
adc
add
pop
rolb
dec
stc
mov
rcrb
sub
jo
fbld
and
dec
shlb
pop
and
dec
aaa
push
inc
mov
movsb
dec
or
or
inc
je
xor
dec
inc
dec
pop
pop
idiv
sbb
scas
push
dec
mov
sub
sbb
and
or
and
or
inc
cmp
xchg
ljmp
mov
pop
or
xchg
mov
inc
test
rorb
sbb
pop
pop
and
adc
dec
jne
pop
andb
add
and
sub
jno
cmp
dec
daa
inc
add
mov
rclb
push
xchg
stc
sbb
jb
jae
push
add
js
xor
or
add
pusha
and
orb
inc
add
cltd
xor
jae
js
movsb
rcrl
enter
popf
shlb
sbb
and
lock
jp
ret
add
std
pop
push
add
adc
push
mov
data16
push
fstpt
insb
and
push
and
xor
sbb
adc
inc
jmp
aad
xlat
insl
dec
or
push
xchg
sbb
mov
test
loopne
dec
add
outsb
not
cmpb
dec
stos
xor
loope
outsl
scas
or
or
sarl
or
pop
jb
mov
or
and
jle
popl
mov
rcl
loope
popl
cmp
je
ficoms
add
jmp
faddp
and
sbb
mov
pop
hlt
adc
xchg
mov
push
jb
je
idiv
mov
inc
mov
imul
push
add
xor
loop
fsubrp
jo
jo
fld
inc
adc
mov
lds
inc
jecxz
stos
addr16
xor
inc
push
and
out
add
in
mov
pop
xchg
lds
aas
call
jne
jge
inc
mov
test
xchg
sbb
fisubrs
aaa
nop
jmp
sub
mov
icebp
mov
add
xchg
pop
lock
and
xchg
popf
and
add
inc
insl
clc
jo
in
pop
mov
add
add
mov
add
call
push
mov
cmc
add
sahf
push
aam
orb
push
sbb
or
and
sbb
add
inc
mov
rcrb
mov
icebp
xchg
arpl
push
in
mov
cmp
test
or
or
mov
add
and
or
ss
push
dec
xor
pop
fbstp
fcompl
cmp
mov
call
jecxz
push
add
dec
push
sahf
add
jbe
into
mov
outsl
pop
xchg
test
add
pop
outsb
and
mov
nop
imul
cmpsb
lahf
fildll
test
jge
in
int
dec
hlt
je
shlb
das
xor
imul
shl
mov
jae
pop
lds
inc
adc
repz
jle
dec
andb
ljmp
sbb
movsb
or
adc
mov
fcmove
xorl
ja
test
xor
cmp
and
stos
fildl
and
rcrl
jo
les
jl
and
inc
cmp
xchg
sub
cli
xorl
jle
jno
mov
js
lret
pop
xchg
cs
movsb
fisttpl
and
adc
inc
dec
xchg
inc
imul
jb
inc
mov
mov
rol
and
cmpsl
push
mov
push
pop
cwtl
clc
inc
inc
mov
mov
in
push
hlt
pop
enter
stc
dec
repnz
push
mov
dec
hlt
cmp
adc
test
popf
sbb
jns
pop
inc
and
out
ret
jp
movsb
lea
add
sbb
sub
jmp
inc
clc
mov
jmp
push
mov
xor
insb
cmp
shll
add
enter
and
add
inc
mov
mov
test
insl
xchg
mov
mov
xor
mov
push
in
mov
pusha
scas
stc
mov
iret
dec
inc
or
jg
shll
and
jae
jg
icebp
and
lret
dec
add
or
xor
or
or
arpl
test
inc
xchg
daa
es
jge
dec
pushf
mov
xchg
mov
sbb
cmp
mov
xor
mov
test
jne
jl
leave
iret
mov
cmp
and
lret
fisttpl
mov
add
mov
daa
pop
roll
mov
imul
jmp
xor
mov
pop
pop
cmp
push
inc
into
and
adc
hlt
adc
or
or
sub
fnstcw
insl
xchg
xor
hlt
imul
adc
insb
pop
sti
or
push
ret
insl
ja
xor
test
jnp
ret
repnz
shl
loope
mov
pop
xchg
gs
call
mov
xor
sub
addr16
mov
adc
sarb
mov
mov
andl
lock
cmpl
push
or
in
mov
inc
jbe
sahf
leave
clc
push
mov
stos
insb
rorb
lods
mov
push
sub
ret
dec
cmpsl
or
sbb
xchg
outsl
pusha
out
fdivrs
mov
rorb
sub
adc
daa
arpl
pop
xlat
adc
outsl
insb
cld
or
xorl
pop
adcb
pop
shll
test
out
mov
push
or
movsb
cmpl
subb
adc
inc
and
insl
arpl
mov
ds
jmp
cmp
cmp
shlb
sbb
mov
mov
call
and
cmp
push
mov
imul
cld
inc
sub
orb
outsl
rolb
nop
xchg
pushl
popl
mov
pmulhuw
fsubl
add
mov
or
rcrl
add
mul
cmp
imul
mov
push
jno
inc
notl
and
fstpl
add
or
mov
cmp
sub
sbb
shlb
cs
dec
mov
sbbl
jae
add
rolb
mov
test
cmpb
mov
dec
jbe
xor
sub
divb
cld
loopne
movsb
das
dec
or
nop
out
js
stos
ss
jl
push
cld
pop
into
lret
test
sti
mov
mov
cmp
dec
fldenv
sbb
add
lea
in
mov
aad
inc
ret
and
mov
xor
in
jmp
out
out
pop
ficompl
int
xor
mov
fcomip
mov
jmp
data16
push
into
inc
mov
aas
setg
xchg
mov
xchg
xor
daa
xor
popa
push
adc
add
aaa
ds
pop
test
lret
inc
ret
push
roll
stc
add
adc
adc
add
jns
add
das
add
mov
int
mov
mov
rorl
inc
sub
je
pop
lods
notb
sub
stc
and
adc
adc
lds
mov
inc
dec
and
in
push
sub
jle
stos
inc
nop
cld
ret
rcrl
out
inc
xchg
cmp
pop
aad
push
push
mov
mov
into
mov
adc
scas
add
lret
fsubs
mov
out
pop
cmpsb
mov
push
jmp
ret
xorb
subl
mov
push
cld
pop
or
cmp
cwtl
sub
sbb
enter
sti
cs
cmp
cltd
sub
jmp
sbb
and
xchg
xchg
ss
inc
and
cwtl
mov
lea
test
outsb
or
pop
push
or
and
and
mov
add
add
sub
adc
cmpsb
pop
cmp
bnd
jle
fildll
sbb
addb
xor
aam
pop
mov
jmp
mov
dec
mov
sub
xor
hlt
std
jg
dec
out
xor
fimuls
or
out
dec
test
or
adc
inc
and
xor
push
nop
popf
xchg
mov
dec
push
mov
xor
push
out
sbb
test
dec
shll
cmp
adc
movsb
push
hlt
addb
pop
cmp
sub
jmp
dec
add
or
in
inc
scas
cmpsl
inc
scas
aad
ret
iret
pusha
and
rcll
xlat
dec
mov
xchg
stc
iret
pop
and
push
mov
push
cwtl
mov
sarl
rcrl
mov
mov
shlb
adc
xchg
sub
pop
pusha
imul
cmp
test
imul
aas
movsl
push
mov
jge
mov
pusha
orb
rcrb
pop
mov
std
clc
add
add
sbb
call
add
add
out
je
sbb
cli
popa
ljmp
jns
fnstcw
in
jge
xor
lahf
push
pop
lds
dec
rol
mov
lcall
aad
pop
mov
adc
aam
lcall
mov
jae
ret
je
stos
adc
btr
ret
xlat
add
cli
add
mov
and
push
inc
adc
aam
jmp
mov
jl
fmuls
dec
inc
orl
adc
stos
inc
cmp
je
sbb
sar
jg
ljmp
and
bt
add
shl
mov
fistpll
ds
ret
adc
push
inc
cmp
jne
inc
decl
jne
or
mov
les
mov
xor
sub
mov
inc
push
roll
and
mov
or
push
inc
ds
mov
xor
add
xor
nop
fs
xchg
les
aaa
xchg
out
adc
ja
mov
inc
add
rcl
xchg
mov
pop
cmpsl
mov
lret
push
ret
mov
enter
xorl
ja
mov
movsb
test
xor
xchg
sbb
fwait
popa
mov
dec
fs
imul
and
shlb
pop
sub
xchg
or
sub
daa
push
bound
test
out
cmpb
out
sub
aas
or
push
push
adc
jne
and
aam
push
sahf
dec
cmc
sub
lret
jmp
dec
int
add
and
enter
pushf
or
mov
mov
jae
cs
cvtps2pd
jns
or
adc
adc
or
dec
push
arpl
mull
cmp
dec
dec
loope
jg
inc
push
data16
jbe
xchg
jl
or
out
popf
clc
mov
dec
clc
repz
sub
or
jmp
mov
or
sbb
lock
enter
cmp
dec
jne
xor
cmc
popf
pushf
jge
sbb
cmp
sahf
test
and
mov
and
pushf
mov
subl
xchg
xchg
adc
adc
test
add
mov
enter
inc
push
adc
and
or
push
add
pop
inc
aad
adc
popf
dec
push
roll
and
sbb
negl
orb
inc
adc
lock
daa
sub
mov
sbb
cmp
testl
mov
xor
adc
lods
sbb
ret
sahf
xlat
pusha
insl
es
out
lcall
aad
sbb
pop
es
lahf
in
cmp
cmp
dec
rolb
cmp
mov
mov
bound
in
dec
pop
repnz
test
xchg
dec
mov
xchg
sub
pop
cmp
popf
xor
adc
cmp
pop
scas
mov
push
in
jns
clc
or
xor
push
into
mov
in
nop
enter
scas
nop
pop
int3
imul
xchg
inc
daa
loopne
das
inc
xchg
imul
mov
pop
test
inc
imul
lret
mov
cmp
inc
test
repz
xchg
xor
dec
xchg
inc
in
push
mov
xchg
sbb
aad
int
hlt
and
lods
mov
clc
shlb
or
jg
xchg
fadds
mov
push
pop
jb
mov
mov
in
mov
sahf
xor
inc
out
inc
dec
xchg
fcomp
and
fldenv
mov
push
adc
in
xlat
mov
out
pushf
int3
mov
pop
pop
lock
addl
sbb
inc
je
orb
add
ret
add
mov
dec
or
push
dec
iret
pop
divl
add
movsb
dec
sub
jbe
repz
inc
pop
or
adc
push
rolb
aam
push
sarb
pop
sar
push
addl
lds
je
test
mov
movsl
fcompl
jecxz
sub
movsb
cmc
fbld
aam
pop
dec
movsb
test
scas
sub
clc
hlt
inc
xor
sbb
xor
shll
sbb
nop
leave
int
push
movsb
mov
pushf
mov
and
movsl
and
and
sub
push
push
outsb
lock
hlt
push
icebp
xor
aad
int
fsubr
jno
jnp
mov
and
xor
or
jo
and
dec
pushf
sub
ud0
es
les
sub
incb
xchg
add
ss
xor
test
mov
cmpsb
adc
cmp
movsb
out
or
fidivs
lock
loope
mov
les
push
pusha
push
or
and
add
out
mov
lret
je
xor
sbb
loopne
adcl
out
ss
cmp
push
lods
das
xchg
shlb
cmpsb
dec
mov
leave
arpl
sub
cmpsb
mov
and
pop
ss
int
lds
mov
ficoml
cmpsl
push
sub
fsubs
fs
loope
push
inc
call
lret
imul
sub
inc
inc
ret
mov
call
pop
lock
popa
shrb
cmpsl
inc
add
nop
cmpsl
add
es
loop
jne
xor
jne
lret
shlb
in
cmpsl
ret
jb
xlat
adcl
ss
inc
lock
lods
mov
xchg
xchg
jmp
insl
fstl
arpl
clc
adc
jno
cmp
mov
test
int3
sub
push
repnz
ss
hlt
push
jae
push
mov
add
cmp
rcl
dec
push
xlat
test
daa
mov
imul
nop
jo
push
push
repnz
test
jns
or
fistps
fisubl
mov
push
ret
add
inc
les
mov
hlt
test
lea
rclb
or
dec
lds
pop
dec
mov
mov
daa
cld
jns
pop
outsl
or
hlt
inc
adc
xchg
add
push
mov
inc
cmp
sbb
inc
sbb
lea
pop
ljmp
out
and
mov
pop
jb
add
pushf
test
js
xchg
stos
push
dec
and
or
and
mov
stos
clc
mov
mov
or
loope
cli
push
mov
int3
push
pop
jmp
mov
adc
inc
movsb
ret
fisubl
or
or
mov
lret
sub
daa
mov
cmp
addr16
jae
dec
cmp
add
xor
gs
in
in
push
inc
or
sahf
stc
les
repnz
in
cld
mov
in
mov
mov
js
xor
inc
pop
shlb
test
push
fmuls
sub
stc
stos
sub
sbb
sub
inc
sbb
add
cmpsl
mov
and
mov
out
xor
addr16
dec
lea
adc
inc
out
dec
imul
and
lods
add
testb
jne
mov
add
mov
push
nop
dec
outsl
xchg
cmp
out
push
push
orb
inc
orb
mov
hlt
sub
jmp
clc
imul
lods
inc
rolb
mov
or
mov
clc
mov
push
add
ss
push
pop
cmp
inc
add
pop
and
inc
ret
les
je
mov
add
cmpb
out
js
mov
dec
adc
js
dec
out
iret
push
repz
pop
lds
push
lcall
mov
lret
add
mov
jle
mov
dec
mov
vmwrite
mov
sbb
jo
jo
xor
cmp
cmp
sbb
lods
and
test
jmp
hlt
add
xor
xor
inc
add
bound
filds
mov
xchg
xor
data16
sbb
fisubrl
cld
xor
cmp
in
push
jae
cmp
mov
xor
xchg
nop
add
rcl
jnp
jae
xor
insb
mov
sub
cmp
daa
andb
dec
and
cmc
dec
fucomip
ds
lea
dec
nop
push
fdivs
test
dec
adc
push
lock
or
pop
addl
test
xor
iret
and
or
pop
mov
rclb
not
mov
outsb
jmp
sbb
rcrb
sbb
push
pusha
sub
add
dec
xor
and
dec
sbb
cli
icebp
mov
and
or
je
fcomps
or
pop
or
jmp
or
push
xor
adc
or
icebp
fwait
ja
xor
adc
sahf
lods
addb
or
xchg
add
repz
jle
into
or
rcrl
mov
xor
push
aam
adc
pop
sbb
outsl
sub
repnz
adc
and
and
jg
push
add
outsl
mov
push
and
test
movb
mov
mov
aam
out
push
aaa
push
shrl
jmp
fiadds
push
inc
sub
xchg
xlat
push
fs
stc
je
mov
data16
test
xor
sarl
outsl
cmpsl
sbb
xor
dec
and
shlb
orb
push
fs
nop
cmp
jo
push
xchg
cli
mov
or
popf
incl
scas
stc
nop
cltd
xchg
insl
andl
mov
insl
mov
mov
push
bound
and
rcrb
out
lcall
cmc
mov
repnz
mov
and
dec
sbb
or
sbb
ljmp
sub
mov
or
or
rdmsr
mov
je
dec
inc
jge
push
adc
pop
mov
dec
pushaw
hlt
jl
dec
nop
xchg
mov
dec
mov
and
adc
sub
inc
sbb
dec
lock
aas
cmp
je
test
sbb
imul
in
imul
cwtl
inc
cmp
data16
mov
jp
xor
lcall
mov
push
sar
call
push
jle
addl
jo
lret
shll
movsb
inc
andb
div
mov
cmpb
and
inc
aam
add
cmpsb
insb
sbb
lock
inc
inc
imul
lock
daa
pop
and
dec
lock
xchg
mov
adc
and
lahf
jg
or
adc
sub
pop
inc
and
orb
out
lods
mov
xchg
pushf
inc
cmp
sbb
int3
cmp
dec
sub
or
add
sub
fwait
jmp
pop
adcb
lret
das
mov
or
adc
push
xchg
out
cs
jle
ljmp
jmp
jl
and
inc
mov
cli
jbe
and
pusha
and
mov
cmp
int3
shl
cmpsl
in
mov
es
in
gs
cld
and
pop
fwait
addr16
aad
xor
sub
fs
loopne
pushw
out
lods
xorl
and
in
or
or
sub
pop
mov
adc
or
cmp
in
jne
sbb
cmpsl
mov
or
add
jo
ret
xor
push
push
inc
cmp
rcl
push
xor
add
adc
jp
jo
cmp
adc
shl
test
lock
je
push
pop
pop
repnz
mov
adc
pop
test
add
outsl
aam
pop
pop
inc
popf
sbb
mov
fs
pop
cmp
or
or
lock
sti
add
je
loopne
and
or
sbb
mov
adc
bound
std
call
or
push
cmp
add
push
jae
sub
ret
jge
mov
jmp
shrb
das
or
adc
jmp
ret
cltd
sub
push
xchg
mov
push
mov
mov
sbb
in
pop
ficoml
cmpsl
movsb
movl
sub
dec
push
sbb
xor
stos
aam
jecxz
cmp
push
push
call
ja
or
fwait
pushf
sar
nop
popa
add
pop
xor
lods
add
cmp
dec
or
mov
pop
out
sbb
loope
loopne
xchg
cmp
gs
xchg
mov
shl
imul
push
push
xor
sub
mov
stos
lock
xor
mov
faddl
in
sbb
add
add
mov
addb
add
pop
mov
repnz
or
stos
call
call
jl
or
dec
sahf
fsubr
sbb
add
test
push
enter
inc
hlt
jmp
mov
mov
xchg
fwait
lods
rcrl
dec
enter
rorb
cmp
lods
pop
push
ret
nop
iret
and
mov
outsb
pop
lcall
mov
xchg
cs
jl
push
jmp
int
inc
das
mov
nop
or
jnp
inc
or
sub
pop
mov
pop
or
clc
and
dec
add
loope
cmp
or
jo
test
cmp
mov
mov
jmp
mov
add
sti
push
add
sbb
sbb
ret
outsb
xchg
ret
and
shrb
push
arpl
psubsb
add
fadd
add
scas
cwtl
sbb
scas
mov
adc
lods
and
or
mov
sbb
adc
mov
add
movsb
push
add
pop
mov
fdivr
sbb
bound
jne
gs
repnz
add
and
std
mov
sbb
push
andps
popa
pop
mov
adc
adc
sbb
adc
outsb
or
fisubs
mov
cmp
je
xorl
jmp
adc
fcomp
jmp
rolb
sbb
test
arpl
cmpps
pop
inc
lret
nop
push
mov
sbb
add
outsb
and
cmp
and
test
sub
jnp
adc
popa
fmull
adc
xchg
and
add
mov
lds
xor
lcall
mov
into
push
sbb
insl
pop
mov
push
mov
jns
inc
fidivs
mov
cmp
dec
rolb
ja
and
xchg
cmp
push
push
imul
stc
or
test
enter
rcrl
inc
mov
imul
jnp
fmull
sahf
iret
and
xchg
mov
pop
lret
mov
adc
pop
inc
pop
rorb
mov
inc
pop
lahf
rorb
pop
dec
push
ljmp
rcl
fiaddl
mov
sub
int
inc
sbb
xor
fistps
jle
jo
sub
pop
add
scas
data16
mov
jl
cmp
ret
jmp
pop
loopne
xlat
adc
adc
push
pop
jo
imul
push
push
add
ret
in
in
pop
xor
inc
lock
dec
cmp
jne
pop
shll
cmp
nopl
fwait
adc
ret
adc
or
push
bound
mov
shlb
fwait
ficoml
add
push
jne,pn
aas
xchg
lods
out
add
mov
sub
test
adc
mov
add
int
sbb
outsb
push
add
add
dec
loopne
mov
adc
in
out
les
sub
or
dec
add
add
push
aaa
or
movsb
stc
in
add
inc
cmp
sub
cs
push
xchg
sbb
mov
inc
nop
adc
pinsrw
lds
dec
cli
inc
and
inc
loopne
push
mov
inc
and
inc
rorl
rorl
jae
mov
mov
adc
hlt
adc
enter
or
add
cs
sbb
adc
cld
sub
int3
nop
inc
sahf
inc
jmp
loopne
xor
dec
xchg
clc
ss
pop
pop
inc
jae
stc
rcll
jl
clc
jl
inc
sbbb
push
cmpsb
outsl
orb
lea
aaa
xchg
xor
jge
notl
dec
mov
loope
add
xor
clc
pop
addb
insb
jle
js
popa
xchg
in
insb
insb
push
cmp
cmp
cmc
icebp
loopne
adc
or
add
xor
dec
movsb
mov
mov
inc
sbb
jne
adc
nop
mov
mov
jbe
lahf
std
xchg
jmp
push
imul
shll
or
or
jmp
cmp
jl
xor
sub
fsubs
in
and
arpl
addr16
mov
loopne
jg
pop
fldenv
nop
cld
lods
nop
push
inc
or
add
scas
cmpsl
in
aam
mov
cmp
cmp
xchg
jp
pop
outsl
inc
jmp
or
sub
insl
outsl
mov
and
sub
push
adc
dec
adc
sbb
sbb
lret
adc
sarl
xchg
shll
js
imul
adc
add
sbb
xchg
adc
inc
adc
pop
pop
mov
adcl
lret
xchg
adc
mov
rcrb
mov
push
sahf
je
inc
enter
add
aas
insb
ret
sub
js
les
or
fstp
mov
and
inc
pop
sub
in
sti
sub
das
rclb
dec
scas
pop
and
ret
jmp
cld
adc
dec
adc
cs
push
adc
jo
fucomp
fisttps
nop
add
ja
es
mov
add
fadds
adc
aad
sbb
out
pusha
scas
sbb
movb
push
das
ljmp
cmp
ud1
mov
mov
dec
hlt
js
arpl
scas
rolb
enter
cmp
push
lret
lahf
clc
stc
sbb
test
dec
adc
push
aam
bound
push
dec
push
inc
lret
popa
cmp
xchg
pop
bound
xor
xor
pop
cli
push
and
add
cld
mov
inc
notl
push
aas
adc
in
outsl
sahf
inc
inc
jmp
push
cmpb
test
sbb
fwait
enter
sbb
test
jne
inc
lock
push
je
dec
nop
mov
sbb
cli
cmp
add
loopne
push
xchg
xchg
jmp
pop
push
push
lcall
dec
mov
pop
inc
cs
jne
push
cltd
mov
fwait
or
jne
mov
inc
ds
int3
xorl
rolb
call
jle
inc
scas
add
adc
nop
or
sub
add
pop
adc
push
pop
adc
cmp
jnp
in
loope
in
stos
sbb
fmull
jg
les
lods
add
jo
jge
hlt
ret
aaa
xchg
inc
jl
js
add
testl
push
mov
in
sbb
negb
rclb
fs
xor
xor
mov
lcall
xlat
xchg
push
adc
cmpsb
push
test
lahf
sbb
test
xor
cmpsb
push
test
or
and
xor
sub
stc
xlat
mov
inc
xor
mov
hlt
lret
das
addb
jmp
icebp
mov
push
sarb
xor
mov
rcl
inc
insb
push
push
or
mov
fwait
ret
xor
mov
aam
loopne
inc
nop
cmp
test
mov
addb
addr16
out
les
xchg
sbb
mov
out
rclb
sub
sub
iret
xchg
xor
cmc
sub
add
pushf
push
fidivrs
mov
add
jbe
adc
add
push
icebp
mov
movsb
mov
inc
fsts
lret
mov
pop
xor
les
dec
add
outsl
or
cld
rep
mov
xor
pop
dec
mov
jge
inc
push
ds
add
add
shll
adc
pop
call
aas
sbb
out
fistpll
aaa
mov
xor
jne
outsb
loop
ret
dec
jle
je
pop
lret
sbbl
nop
inc
popa
pop
jecxz
enter
daa
ds
fsubrl
mull
inc
rclb
ret
mov
ss
aad
hlt
pop
js
les
in
sub
in
or
dec
in
add
sub
jae
lret
jl
mov
mov
int3
sub
cmp
push
mov
xor
mov
enter
repz
lock
add
adc
cmp
cmp
sbb
xchg
and
sbb
mov
sarl
adc
adc
add
sbb
mov
fnstsw
daa
jno
test
sbb
in
notb
dec
testb
inc
mov
cmp
jmp
rolb
fidivl
test
push
std
or
dec
cmpsl
aaa
pop
push
sbb
xor
ficompl
pop
loopne
hlt
cmpb
test
lods
cltd
enter
or
fs
xor
ss
sub
shlb
sub
int3
ret
and
addb
dec
inc
pop
xchg
adc
dec
adcl
xor
cmp
rclb
pop
test
ret
push
popf
mov
add
notb
loope
xchg
movsb
and
pop
in
loopne
testb
jns
clc
sub
xchg
loopne
inc
repnz
sbb
jno
jo
imul
pop
je
jo
movsl
aad
movsl
and
push
hlt
push
xchg
mov
push
pop
mov
fcmovne
clc
dec
sbb
adc
js
rcll
or
shlb
push
cld
in
jmp
add
jl
mov
lcall
sbb
xor
jne
shlb
jnp
mov
adc
jmp
push
arpl
or
mov
pop
mov
je
hlt
adc
out
dec
or
jne
in
adc
jmp
dec
repnz
or
sub
adc
xchg
or
xor
test
pop
pushf
adc
adc
sub
inc
sub
adc
push
sub
fsub
sbb
mov
fmuls
jns
insb
cmp
loopne
push
out
lcall
adc
mov
pop
nop
hlt
cmp
je
adc
pop
mov
xchg
fmuls
add
pop
sar
push
neg
cli
mov
pushf
je
xchg
les
cmpsl
mov
mov
sbb
addr16
and
xchg
adc
push
mov
add
jmp
das
aam
lahf
jne
ret
int3
ds
adc
or
lds
aam
add
inc
enter
xchg
push
sbb
add
cmp
arpl
inc
pusha
sbb
push
xor
xchg
mov
adc
and
sahf
push
stc
ljmp
sub
xor
pop
cmp
popa
xor
inc
in
dec
pop
sbb
mov
sbb
in
push
xchg
or
adc
mov
inc
repz
xor
fsubrl
and
adc
fsubrs
out
push
mov
inc
xlat
lahf
movsl
xchg
repz
sub
adc
dec
xlat
mov
dec
lea
or
dec
or
inc
adc
and
pop
fldt
int3
pop
or
scas
adc
or
xor
pop
push
and
adc
pusha
shlb
nop
mov
shlb
sub
fsubs
loopne
repnz
imul
jge
popa
sub
xor
lds
mov
addb
fmul
mov
sti
shrl
hlt
sub
out
sbb
cwtl
lcall
out
aam
push
sub
pushf
clc
mov
enter
inc
lods
pop
ds
lock
and
jge
mov
sub
sbb
fldl
xor
enter
add
jl
and
add
flds
and
and
adc
xor
and
mov
inc
push
sbb
sub
push
and
shll
adc
pop
inc
adc
adc
inc
jmp
pop
or
les
popa
imul
inc
xor
xchg
jle
add
xchg
and
mov
aad
out
clc
cmp
xor
dec
testl
adc
in
mov
mov
add
mov
add
inc
jno
add
imul
and
dec
mov
push
jle
das
dec
and
repnz
pusha
adc
add
cmpsl
stc
sbb
inc
lahf
adc
push
ret
push
pop
xchg
das
or
mov
add
and
ss
sbb
pop
xchg
pop
repnz
mov
test
pop
inc
inc
lahf
mov
das
xlat
fidivrs
push
sbb
mov
popf
wbinvd
add
pop
dec
jnp
or
test
push
lahf
mov
jl
mov
mov
flds
fcmovnu
jne
ret
and
testb
mov
mov
mov
mov
inc
jae
add
inc
fndisi(8087
js
fadd
adc
add
dec
xor
add
or
icebp
sbb
in
loop
clc
adc
in
imul
call
xor
sbb
jo
test
rolb
nop
cld
addr16
and
pop
mov
cmpsb
jg
pop
xor
fbstp
xchg
cs
xchg
push
mov
pop
aaa
dec
pop
jo
ret
lock
fs
cmp
ret
or
clc
and
pop
imull
jne
inc
popf
push
lcall
inc
psadbw
jl
in
add
pop
jno
push
xchg
dec
push
arpl
inc
in
pusha
imul
cmp
mov
inc
cmp
sbb
mov
pop
andps
mov
jnp
sbb
mov
xlat
cmpsb
push
xchg
js
mov
enter
clc
and
int
pop
xlat
inc
jle
addb
out
jge
iret
sub
sti
xchg
and
test
cmp
push
fwait
inc
movsb
xor
shl
out
jo
sub
and
daa
dec
cmp
mov
incb
xor
xor
pop
add
cmp
fistps
imul
xchg
jge
leave
sbb
rcr
cmp
mov
sub
pusha
xlat
or
dec
sbb
or
rol
add
cmp
xor
mov
cmp
adc
jbe
dec
cmpb
push
jns
add
mov
daa
jmp
clc
jb
pop
and
and
loopne
push
dec
or
sub
lret
cs
iret
mov
loope
add
jne
sbb
xorb
shrb
push
andl
loope
mov
push
jle
call
clc
out
mov
cmp
inc
lret
and
pop
clc
inc
add
push
pop
xchg
push
dec
cmp
inc
mov
in
sbb
inc
sub
push
push
addr16
movsl
mov
orb
sub
or
pop
xchg
jb
mov
ja
adc
fisttpl
iret
sarl
push
fiadds
cmp
ds
loop
dec
push
jbe
test
leave
mov
addr16
cpuid
pusha
dec
push
or
fisubrs
xor
cltd
xor
dec
xor
mov
or
mov
call
loope
adc
mov
enter
xlat
mov
loopne
pop
call
fcoml
lahf
mov
fmuls
insb
insb
nop
push
sarb
adc
inc
fiaddl
inc
sbb
aam
and
ja
test
mov
mov
sub
dec
sbb
xchg
cmp
and
loopne
xor
setns
shrb
js
cmpsl
mov
xorl
mov
aas
out
push
push
pusha
jmp
mov
enter
push
adc
sbb
xlat
je
scas
imul
iret
push
pop
adc
in
mov
les
in
xchg
jo
push
enter
mov
es
stos
fcomps
loopne
xchg
xchg
and
pop
and
inc
testb
inc
aam
mov
xor
mov
leave
out
mov
mov
push
add
add
cmp
pop
daa
push
cmp
and
roll
loope
iret
rcl
add
xchg
stos
into
push
fadds
mov
jb
call
xchg
pusha
lea
push
dec
test
adc
lock
dec
mov
mov
imul
in
jnp
into
call
lods
add
fisubs
jge
js
mov
cmp
jne
mov
or
mov
loope
add
lcall
aam
aam
mov
and
cvttps2pi
js
je
loope
jl
orb
out
add
sub
sub
scas
or
outsb
push
jmp
mov
rcll
mov
sub
inc
mov
leave
adc
adc
xor
iret
and
das
xchg
inc
and
jbe
inc
xchg
add
mov
pushl
addr16
xchg
dec
bound
mov
sbb
call
pop
mov
add
add
push
test
or
inc
test
cmp
sbb
mov
xchg
pop
jmp
insl
daa
pop
sahf
clc
and
mov
hlt
les
adc
pop
call
int3
outsl
jnp
sarb
inc
lds
pop
pushf
iret
cld
aad
push
movb
jmp
test
cmove
xor
js
mov
cmp
jl
mov
xor
clc
pop
ja
bts
jmp
adc
movsl
xor
cmp
push
arpl
aas
cmpsl
push
fsubl
pop
gs
pop
cmp
push
dec
je
mov
cwtl
or
xchg
jmp
mov
mov
icebp
insl
jo
xor
xchg
andl
arpl
cs
imul
sbb
jmp
add
add
dec
or
popf
jae
mov
jno
je
push
adc
pusha
mov
lods
and
clc
and
dec
mov
lea
or
stos
movsl
add
sub
and
cld
or
adc
push
push
jne
js
and
into
or
cmp
inc
pop
daa
faddp
adc
shlb
ss
imul
or
stos
dec
xor
hlt
in
in
jns
mov
jno
inc
jne
xor
das
sbb
and
adc
cmp
jo
sbb
std
adc
jne
push
ja
pop
mov
or
add
add
adc
pop
mov
mov
insl
dec
fldenv
scas
shll
outsb
pusha
sbb
loope
scas
cmp
leave
popa
pusha
repz
pop
mov
pop
les
jns
out
lea
pop
add
inc
mov
cmp
loop
es
sbb
mov
sub
cmp
push
pop
cmp
repz
js
xchg
movsb
fsubrp
mov
mov
pop
cltd
sbb
and
and
xchg
and
fsubrl
jmp
mov
jmp
jl
xorl
adc
gs
insl
inc
push
imul
push
mov
xchg
pop
fsubs
cmp
rorl
add
out
push
inc
push
sbb
push
sbb
dec
or
or
and
ja
fs
in
mov
aaa
inc
sub
mov
xlat
sub
pop
xchg
lock
ret
adc
sbb
and
out
add
test
push
cmp
mov
or
push
sbb
inc
cli
pop
push
lods
sar
inc
mov
pop
cmp
call
mov
jp
pop
popa
jl
shrl
cwtl
addr16
mov
cld
lret
repnz
push
push
call
add
fists
dec
push
mov
mov
inc
dec
jp
add
push
dec
mov
dec
xchg
nop
dec
lahf
push
push
sbb
loopne
les
mov
test
movsb
pop
pushf
cmp
movb
andl
mov
sub
fidivl
imul
lcall
push
push
mov
mov
add
adc
mov
sbb
cmpsb
fsubs
js
xchg
push
imul
pop
in
add
inc
sbb
or
loope
cmp
and
xchg
pop
or
adc
rorb
ds
and
mov
inc
and
adc
xor
or
dec
pop
in
mov
repnz
push
out
pop
enter
mov
lcall
sub
mov
push
dec
push
lret
or
mov
mov
testl
adc
adc
cmp
icebp
ljmp
push
fdivp
cmp
dec
call
xor
pushl
pop
xchg
mov
sub
sub
xor
das
pop
ficompl
and
ja,pn
xchg
mov
lcall
out
and
add
sbb
out
mov
das
loop
loop
idivl
outsb
cs
jno
lahf
lret
push
cmc
js
xchg
test
mov
inc
fcompl
or
xor
movsbl
jl
aas
adc
add
ret
inc
repnz
mov
fs
push
push
daa
enter
test
aaa
mov
cli
cmp
inc
adc
insl
or
dec
popa
fdivl
loop
mov
js
inc
push
decb
sbbb
daa
or
sub
mov
add
sbb
and
and
and
bound
pop
mov
cmp
dec
or
dec
clc
in
sbb
dec
orb
inc
cwtl
pop
faddl
add
dec
pop
bound
leave
pop
pop
adc
and
daa
jnp
pop
sbb
sbb
and
enter
pandn
dec
add
scas
cmpb
jg
loop
movsb
sbb
or
sbb
push
pusha
or
and
sub
fistl
push
add
add
cmp
and
push
inc
pop
inc
or
inc
lods
das
and
divl
test
push
pop
movl
rolb
inc
add
jae
mov
sti
pop
mov
mov
sbb
xchg
sbb
ret
or
sbb
pop
enter
popf
test
xlat
clc
mov
mov
inc
or
pop
movsb
add
imul
into
lock
inc
adc
xor
out
jmp
mov
adc
xor
mov
addl
ret
clc
adcb
mov
xor
sub
lahf
adc
push
or
movsb
imul
jmp
or
and
jg
addr16
mov
dec
mov
mov
add
enter
das
xor
jne
xchg
stc
pop
push
and
nop
and
arpl
sbbl
pop
sbb
imul
mov
js
test
jae
loopne
dec
loopne
push
scas
pop
mov
jbe
sbb
pushf
loop
scas
cmpsl
adc
test
pusha
sub
and
lahf
test
test
in
jmp
pop
stc
jg
inc
xchg
xchg
mov
pusha
xchg
sbb
xor
rcr
sbb
cmp
push
xor
mov
mov
jo
rolb
loope
pop
jmp
mov
sbb
pop
pop
xchg
push
dec
aam
stos
test
or
and
jmp
xorl
sar
jbe
push
add
das
xor
cmp
pop
pop
xchg
cmp
adc
sub
aam
ret
sbb
iret
out
aam
or
out
and
cmp
repz
jecxz
ds
pop
mov
jg
inc
mov
loope
push
mov
stc
add
xor
inc
ud1
adc
ficoml
orb
movsb
jae
sub
ret
lods
inc
adc
sbb
cmpl
cld
sub
fldcw
pcmpeqw
adcl
xor
add
sub
inc
inc
mov
pop
push
add
xchg
pop
insl
lds
xchg
inc
fldcw
enter
cmp
aas
fisttpll
aas
mov
cmp
ja
cmp
inc
push
and
push
loopne
mov
push
es
mov
call
adc
jne
test
xor
imul
imul
dec
mov
xchg
sbb
std
jo
push
sbb
mov
ja
das
add
in
addb
adc
jns
imul
or
add
or
imul
out
hlt
cs
and
shlb
mov
inc
pop
and
inc
out
fldenv
or
ficoml
shlb
xchg
stos
cmp
rcrl
daa
lahf
inc
add
cmp
or
pushf
mov
sbb
xor
mov
sbb
loop
sbb
lcall
cli
rcrb
jns
aaa
adc
inc
sbbb
loope
aad
push
dec
jb
shufps
mov
jl
nop
pop
mov
loope
push
inc
lods
dec
imulb
xor
mov
jne
adc
jne
jno
aad
push
or
nop
and
inc
push
push
pushf
mov
xchg
mov
push
push
orl
or
and
push
xlat
jmp
js
addl
or
add
cmp
ljmp
hlt
jmp
mov
and
push
adc
adc
dec
add
je
push
or
adc
inc
or
fadd
adc
ds
mov
inc
outsb
insb
bound
rol
add
mov
iret
scas
jae
shlb
inc
scas
loop
xor
jne
insl
insw
inc
ret
sbb
jg
add
rcrb
or
fadd
addl
sahf
mov
pusha
imul
bndldx
inc
cmp
pop
imul
mov
or
xor
push
adc
xchg
cmp
jecxz
lret
xlat
dec
xor
hlt
xchg
mov
xor
shrb
cmp
inc
xor
push
loopne
add
mov
inc
sysexit
enter
and
popf
ret
push
filds
add
inc
push
add
pop
shrl
lret
cmp
leave
mov
movb
mov
aam
and
call
mov
inc
js
pop
xor
iret
loop
sti
push
mov
pop
sbb
cmc
xchg
mov
push
in
adc
cmp
setne
pop
or
sbb
hlt
sub
add
mov
or
movsb
inc
or
push
ret
sbb
mov
imul
cmpsl
pop
pop
push
sub
or
mov
inc
in
xchg
mov
imul
out
and
mov
adc
push
dec
ret
dec
and
js
xor
cltd
mov
dec
gs
faddp
and
ds
lds
test
push
jg
pop
adc
adcw
sbb
nop
je
and
hlt
in
dec
fisubrl
and
or
dec
sub
mov
cmpl
loop
cmp
je
jecxz
jp
inc
lret
in
dec
fildl
sbb
lock
orb
sbb
in
dec
mov
daa
xor
jp
sbb
jbe
daa
sbb
sbb
fstl
adc
repz
es
aaa
fcompl
sub
jp
sub
or
shl
cmpsb
adc
pop
bound
shl
outsl
sbb
cmp
icebp
and
jae
das
sub
stc
enter
dec
push
and
or
and
mov
ljmp
cmp
in
xor
adc
mov
xchg
imul
fcmovnb
sub
jmp
xchg
inc
mov
inc
testb
call
inc
sbb
sbb
mov
adc
and
pop
nop
cmp
int3
pop
adc
mov
loopne
lcall
loopne
ljmp
gs
stos
mov
lods
mov
sbb
pop
dec
mov
adc
scas
mov
and
in
mov
out
rorl
nop
push
cmpsb
flds
imul
inc
adc
fisttpl
inc
xstore-rng
cmpsl
add
movsb
mov
ficoms
dec
cmp
pop
push
push
jge
loope
add
jle
out
and
cld
push
push
add
xor
push
xchg
sub
adc
sarl
inc
add
and
test
inc
sbb
es
mov
imul
mov
mov
add
xor
xlat
out
pusha
dec
into
pop
daa
outsb
add
xlat
inc
nop
jl
sti
push
inc
inc
daa
pop
xchg
push
cs
dec
dec
dec
dec
inc
mov
push
xchg
leave
shlb
test
mov
xchg
push
fisubs
push
cld
out
xor
cmp
jne
dec
mull
jae
pop
sub
stc
inc
incl
jb
jp
sub
adc
push
andb
loope
xlat
jns
in
inc
inc
cmp
ret
push
inc
lcall
pusha
xchg
mov
xor
sbb
and
sbbl
pop
icebp
movsb
jle
arpl
inc
dec
jne
int3
add
nop
inc
fists
jg
jno
das
dec
cli
or
mov
pop
add
stos
cltd
ljmp
stos
sahf
xchg
jnp
or
dec
jecxz
inc
gs
aam
inc
sbb
ss
cmpsl
dec
add
outsb
sub
cmp
das
cmp
rolb
fwait
xlat
ja
adc
jp
addl
nopl
dec
or
je
pop
xor
jbe
jp
push
or
push
in
int
cmp
jg
push
dec
cmp
mov
pop
cmp
cwtl
test
addr16
fcmovu
mov
dec
mov
sbb
xchg
sbb
fdivrs
pop
push
dec
test
jl
inc
and
add
jne
inc
dec
jne
or
cli
cmpsb
push
mov
aas
adc
mov
or
xor
xorl
jg
xor
and
sbb
xor
cmp
addr16
hlt
and
inc
and
call
sar
loope
inc
shrb
test
inc
jnp,pn
jne
xor
xor
cld
addr16
or
and
add
add
jb
adc
insb
add
clc
mov
sbb
aas
cmpsb
mov
dec
nop
sub
push
cmp
ret
popa
insl
sbb
adc
std
insb
push
scas
xor
push
adc
jl
xchg
stos
pop
mov
add
out
imul
int
and
subl
pusha
push
and
inc
loope
push
or
add
mov
in
push
xor
rorb
dec
dec
dec
lods
inc
xor
adc
repnz
jp
xlat
test
sahf
jmp
dec
rorb
ja
xchg
ja
cmp
lea
shlb
xchg
cwtl
inc
divl
lods
lahf
push
pop
mov
hlt
xor
clc
or
ja
jno
pusha
test
mov
ret
pop
add
into
aaa
dec
dec
add
xchg
dec
pop
xchg
add
cmp
mov
push
inc
je
dec
push
adc
int3
dec
negl
xlat
sub
scas
add
insb
mov
push
pop
push
xchg
iret
dec
dec
adc
adc
aad
sbb
test
out
or
cmp
jne
inc
stos
xlat
mulb
and
add
out
xchg
pop
popa
leave
xor
mov
les
test
or
cmpsb
adc
cmp
mov
inc
shll
push
pop
jo
mov
dec
or
addb
add
jo
adc
inc
in
btc
or
mov
es
cwtl
mov
lcall
adc
add
xchg
mov
pop
dec
pop
add
add
pop
movups
into
movsb
in
add
fwait
add
lcall
jl
push
jle
add
addl
dec
inc
lret
ss
xchg
push
xchg
dec
rorb
fsub
push
mov
add
xchg
pop
xor
out
std
push
test
xor
jmp
push
fdivrl
push
sub
and
rolb
dec
add
lret
incl
mov
pop
dec
xchg
pop
adc
rcrl
or
push
add
xor
add
xorl
in
in
pop
add
lret
and
add
adc
add
adc
nop
outsb
flds
add
clc
jne
adc
les
ja
popf
inc
add
cmpsb
or
mov
or
call
pop
xchg
sahf
push
cmp
int3
shrb
nop
sbb
inc
popa
stc
jno
lock
sbb
adc
pop
fcmovnu
dec
leave
mov
xor
and
test
fadd
sub
add
push
rorl
dec
cld
mov
pop
add
iret
push
and
fsub
pusha
inc
add
add
repz
popf
inc
adc
rcrb
push
jp
fmul
movaps
ja
loopne
adc
or
cmp
pop
sbb
sbb
jmp
xchg
sub
cmp
adc
sbb
pusha
roll
lcall
fsts
mov
idivl
cmp
and
pop
inc
or
add
sbb
dec
inc
adc
jge
idivb
cmpb
cmp
test
xchg
dec
dec
aaa
add
lds
sbb
sub
xor
mov
push
lret
or
push
in
or
movsb
mov
sub
inc
enter
pop
insb
fdivl
sbb
xchg
out
mov
rorb
stos
dec
and
push
add
add
add
adc
sbb
into
or
pushf
aaa
mov
nop
xchg
jns
add
lock
pop
rolb
lea
mov
movzbl
lea
push
addr16
testb
mov
pop
or
add
dec
fsubs
push
fisttpl
mov
cmp
cld
pcmpeqb
xor
push
dec
mov
aam
pop
mov
xor
xchg
or
mov
mov
sbb
je
push
pushf
cmpsl
mov
inc
fs
add
add
dec
loopne
dec
jnp
adc
das
or
rolb
mov
loop
les
xchg
je
inc
daa
lock
inc
pop
push
jno
push
ret
sti
jo
push
push
or
cmp
adc
adc
test
outsl
mov
mov
push
jnp
jl
cld
push
cmp
add
aaa
add
lea
outsb
dec
gs
call
or
dec
data16
iret
daa
dec
inc
rclb
orl
sbb
cmpb
xchg
stc
popa
filds
jo
mov
stc
push
pop
mov
push
mov
jnp
movsb
dec
cmp
or
loope
xchg
lcall
in
adc
inc
mov
inc
push
inc
fildll
loop
pop
inc
pop
pop
push
dec
push
or
sub
or
gs
jl
xchg
cmp
test
fcoml
test
push
push
sbb
lea
sbb
mov
out
push
push
enter
js
dec
or
inc
jle
nop
mov
jge
mov
add
or
scas
sbb
adc
decl
prefetchw
sbb
jb
pop
xchg
add
push
pop
rcll
mov
or
or
push
les
mov
imul
cmp
clc
adc
sti
out
pop
popa
xor
gs
fbld
lret
adc
xor
adc
adc
cmpsb
rcrb
xor
hlt
pop
inc
data16
movsl
add
les
shlb
in
inc
adc
or
inc
jb
test
push
call
mov
pop
add
fcoml
fldenv
dec
fcomps
push
psrad
enter
adc
sbb
cmp
sbb
test
adc
adc
mov
cwtl
pop
js
sti
fadds
fcomps
add
cmpsl
jge
pop
sbb
adc
sbb
cmc
jns
cmpsl
stc
jnp
test
sahf
out
arpl
inc
sahf
out
sahf
sbb
sub
cmp
stos
mov
xor
decl
or
dec
inc
cltd
icebp
sbb
xchg
cmp
cs
out
gs
in
incl
pop
lcall
xlat
popf
rolb
fdivs
sub
lds
jno
or
incl
inc
mov
movsl
leave
aam
cld
lcall
pop
aaa
mov
stc
dec
and
pop
and
sbb
jnp
sub
sbb
push
pop
inc
push
sbb
dec
pop
addb
pop
inc
pop
xor
enter
push
scas
jne
clc
dec
popa
outsb
popa
addr16
mov
mov
into
aad
sahf
pushf
addr16
das
incl
hlt
mov
add
mov
jns
xchg
xchg
into
jnp
sub
xchg
xchg
jge
jg
arpl
pusha
sbb
sbb
jo
ljmp
cmp
iret
push
sub
and
or
incb
inc
dec
or
mov
inc
test
mov
jmp
xor
xor
inc
add
cmpsl
sbb
lret
loopne
lods
adc
js
sbbb
popa
pop
and
or
xchg
filds
mov
mov
jne
sbb
push
mov
mov
xchg
pop
xchg
adcb
cld
cmpsl
xchg
sub
pop
and
inc
adcl
add
ret
test
or
jo
insl
popa
and
leave
stc
enter
inc
les
jp
test
add
push
cmp
sbb
mov
sbb
cld
jb
mov
xchg
push
pop
sub
ret
push
movl
fdivrs
ret
xlat
cmp
xchg
das
andl
or
xchg
rcr
xor
ja
push
add
enter
rclb
push
sub
fistps
pop
sub
lock
adc
stc
pop
mov
movb
add
mov
and
add
xchg
cltd
dec
push
out
pushf
mov
and
mov
popf
lahf
adc
inc
inc
mov
jmp
and
out
pop
jg
add
and
jnp
scas
push
jecxz
sar
inc
mov
divl
rcl
shlb
mov
mov
xchg
jl
inc
and
add
and
hlt
test
add
sbb
and
and
dec
pop
mov
cmp
test
xor
push
dec
pop
xchg
out
mov
fistpl
dec
fdivl
push
mov
sub
xor
sbb
cwtl
aam
fmuls
push
jle
mov
cmp
jb
popf
inc
mov
and
nop
dec
sarl
imul
add
cld
mov
out
fwait
mov
cmp
or
and
mov
arpl
xchg
mov
or
cmp
lret
enter
sbb
cmp
cmpb
dec
or
or
push
xor
test
ja
loop
inc
js
inc
jg
mov
stos
call
push
lock
pop
push
jns
test
cli
cld
sbb
dec
pop
jae
jmp
pop
dec
xor
sarb
les
dec
and
add
shlb
jo
mov
loope
push
aas
fprem1
mov
cmp
add
rcrb
xor
and
stos
xor
loopne
iret
cmp
fwait
gs
jl
add
pop
aas
imul
xor
jle
mov
and
mov
dec
sahf
cld
xor
jns
sbb
std
sub
dec
dec
inc
cmp
fcomi
fdivrs
dec
xchg
daa
in
mov
add
mov
push
inc
jne
mov
adc
adc
adc
push
pop
xor
loope
sbb
or
sub
lcall
imul
lock
add
and
and
cmpsl
push
lock
arpl
imul
aam
ja
fstl
sbb
and
pusha
imul
lock
aaa
xor
fcom
push
iret
int3
xchg
jmp
pop
movsl
in
or
sbb
push
jno
in
pop
fwait
jbe
add
xchg
data16
aaa
mov
das
xor
push
sub
stos
sarb
ret
sbb
sub
adc
arpl
hlt
and
inc
dec
push
loopne
mov
inc
jae
lds
push
sbb
cltd
and
lret
add
out
lcall
push
das
add
inc
mov
hlt
adc
add
sbb
push
shrb
jno
test
mov
jg
mov
and
rcrl
or
test
fmul
push
mov
dec
dec
pop
xchg
adc
insb
daa
inc
rorb
push
add
sbb
dec
and
pop
and
add
inc
or
mov
dec
pop
mov
movb
xchg
lods
and
mov
sbb
sub
mov
jmp
dec
sbb
lock
sbb
add
mov
sbb
jmp
and
aaa
loopne
jne
pop
imul
push
or
push
aas
pop
pop
clc
cmc
stos
mov
xor
inc
jmp
out
cmpb
in
add
loopne
sbb
mov
cmc
mov
xchg
inc
sub
mov
xor
sbb
lea
and
cs
xor
mov
mov
in
out
dec
add
and
test
loop
cmp
stos
decl
scas
or
cltd
dec
sahf
adc
jecxz
dec
jne
das
and
call
mov
sub
add
in
mov
sub
das
movsb
je
sub
call
imul
xor
xchg
sub
sbb
or
inc
loope
and
jle
ljmp
incl
fstpl
in
lods
cmpsl
xor
pop
inc
pop
hlt
sub
inc
add
xchg
sub
cmp
enter
cmp
lock
sbb
add
lock
xorb
ljmp
inc
cmp
into
xchg
lret
mov
rorl
push
in
test
adc
add
cwtl
add
push
dec
mov
inc
push
aad
inc
dec
jne
fwait
push
sub
pop
pop
jnp
sub
pop
pop
gs
sub
ljmp
pop
inc
sti
xor
push
leave
pop
cld
or
dec
jmp
ret
fsubrs
repz
sbb
add
ljmp
lret
dec
xchg
test
xchg
xchg
and
andb
cs
dec
orb
and
xor
inc
ret
xlat
and
mov
int3
inc
movsl
jo
inc
cmp
sub
push
inc
sub
mov
arpl
sub
lods
outsl
pop
adc
pop
imul
add
dec
movsl
das
inc
pusha
or
test
lods
das
les
iret
clc
je
mov
xor
dec
push
jge
into
cmpb
out
cmp
xchg
cli
jl
mov
xor
lods
cwtl
and
mov
js
and
std
inc
inc
add
lods
mov
lcall
in
add
mov
mov
add
outsb
add
imul
or
inc
testl
nop
adc
popa
xchg
add
cltd
xor
push
and
popa
es
push
mov
imul
aam
mov
idivl
nop
and
rol
cld
jbe
push
jmp
cld
pop
insb
int3
mov
ljmp
dec
pop
adc
dec
adc
adc
jmp
xchg
adc
jnp
pop
adc
into
xorb
cmp
adc
jae
or
push
inc
insl
gs
jo
loope
arpl
add
or
sbb
and
add
push
inc
setl
push
xor
push
and
loop
and
or
dec
mov
adc
jg
add
push
pop
inc
add
add
or
cmp
mov
bound
jb
insl
push
adc
jne
arpl
call
adc
xchg
dec
xchg
cs
test
xor
jne
imul
test
pop
jno
add
stc
jmp
push
clc
push
ret
outsl
push
sbb
subb
push
inc
push
adc
or
cwtl
xchg
and
inc
xor
shl
and
sbb
mov
orb
sbb
sbb
in
ss
push
adc
mov
divl
jge
sub
stc
dec
pop
js
arpl
std
jne
push
pusha
cmpl
data16
sub
push
push
lods
add
inc
jno
xchg
inc
ja
add
or
push
leave
rorb
push
lea
cmc
pop
pop
ret
movl
push
push
adc
add
xchg
out
push
inc
sbb
rcl
push
out
or
xchg
dec
in
xchg
sbb
xchg
xchg
jl
cmp
inc
xchg
sbb
addb
and
and
subb
xor
rcll
aam
push
xchg
mov
fildll
mov
pop
scas
pop
rolb
inc
lock
js
add
cmp
add
test
mov
roll
pop
jbe
imul
mov
fs
idivl
and
xabort
mov
jb
pop
std
xor
fcomps
and
push
mov
rorb
outsl
addl
push
sub
xorl
adc
mov
xor
mov
test
adc
or
jne
inc
insb
add
push
push
inc
orl
add
push
stc
sub
es
xor
mov
push
pop
dec
in
orb
cmp
ret
outsb
dec
add
push
xadd
dec
out
inc
cltd
and
cmp
mov
adc
mov
cmp
enter
outsb
pinsrw
mov
mov
lods
test
dec
dec
dec
movsb
mov
dec
dec
xchg
nop
mov
test
dec
dec
je
insb
push
lahf
fs
pushf
pushf
faddl
punpckldq
pushf
pushf
pushf
pushf
gs
pushf
pushf
imul
pushf
insl
outsb
outsl
push
pushf
pushf
pushf
pushf
push
push
push
push
pushf
pushf
pushf
pushf
push
push
push
pop
pushf
pushf
pushf
pushf
pop
pop
pop
pop
pushf
pushf
pushf
pushf
pop
pop
pop
inc
pushf
pushf
pushf
pushf
inc
inc
inc
inc
pushf
pushf
pushf
pushf
inc
inc
inc
dec
pushf
pushf
pushf
pushf
dec
dec
dec
dec
pushf
pushf
pushf
pushf
dec
dec
dec
xor
xor
pushf
pushf
pushf
xor
pushf
pushf
pushf
cmp
cmp
pushf
pushf
pushf
cmp
pushf
pushf
pushf
and
and
pushf
pushf
pushf
and
pushf
pushf
pushf
sub
sub
pushf
pushf
pushf
sub
pushf
pushf
pushf
adc
adc
add
mov
cmp
lods
or
repnz
inc
pushf
adc
enter
or
stc
mov
and
jo
inc
push
mov
push
fidivl
shlb
fsub
xor
out
and
loope
or
ds
xorl
xchg
push
mov
cmp
cmp
sub
add
pop
sub
inc
rorl
adc
mov
push
push
or
pop
and
cmp
jns
push
push
adc
adc
sbb
mov
int
jns
les
mov
add
rcrl
mov
add
jmp
adc
jmp
adc
stc
cmpsl
adc
lods
add
add
ds
mov
adc
dec
cmp
adc
adc
in
xchg
cs
pop
xchg
inc
aas
addr16
push
frstor
push
ret
inc
adc
pop
mov
stos
sbb
push
movb
xor
lods
cmp
mov
pop
or
sub
mov
decl
jo
push
adc
push
adc
cmp
sub
pop
mov
loope
aas
inc
test
push
add
add
adc
loope
mov
push
sbb
sub
mov
std
rorl
xor
pusha
fcoml
jmp
mov
rcrl
xchg
add
into
cli
loopne
test
xor
xor
or
adc
sbb
xor
int3
xor
cs
mov
fildl
inc
pushw
mov
cli
pop
jg
ret
add
dec
int
dec
arpl
inc
mov
and
cmovne
or
push
nop
inc
cmpsl
ds
mov
xor
inc
add
fisttpl
or
add
jae
or
data16
enter
or
iret
push
nop
inc
mov
aam
sti
cwtl
stos
addb
pop
push
dec
cmpsl
add
fldenv
dec
adc
dec
push
or
sub
pop
ret
je
pusha
jl
mov
lret
inc
and
out
cmc
jo
push
or
rclb
imul
bound
in
inc
inc
inc
insb
add
inc
jl
js
ret
ret
push
push
imul
inc
inc
imul
adc
in
adc
aad
xor
dec
les
push
imul
in
std
add
pop
mov
cmp
inc
iret
add
out
ret
xchg
sub
jmp
mov
pop
add
add
add
rolb
aas
mov
leave
xchg
push
mov
ret
pop
inc
inc
jp
and
mov
jge
dec
add
xchg
rcrb
daa
rcl
and
je
aad
sub
pop
dec
stc
inc
push
push
xor
jecxz
add
cmpsb
mov
jns
pop
push
mov
lcall
outsl
insb
adc
addb
mov
xor
cmp
push
push
fwait
rclb
dec
sub
imul
jb
sbb
out
pop
gs
int3
add
push
inc
sbb
push
or
je
imul
loopne
enter
jo
or
xor
adc
or
data16
stos
fwait
jae
adc
adc
pop
mov
and
add
loope
adc
jae
je
aas
imulb
lahf
cmp
fists
jns
cmpsb
clc
cmp
cmp
push
data16
sbb
or
je
arpl
adc
adc
gs
test
int3
or
imul
imul
scas
mov
lahf
jae
xchg
movsb
iret
mov
jbe
es
outsb
int
paddsw
cs
jo
outsl
sbb
push
inc
das
sti
adc
outsl
je
sbb
or
fdivrs
jl
or
dec
outsb
jae
shl
fimull
sbb
jb
push
inc
insb
dec
sbbl
or
and
xchg
repnz
add
stc
cld
and
inc
insb
push
push
push
out
outsl
push
push
jo
inc
push
mov
jnp
inc
jns
sbb
or
pop
push
jo
nop
and
xor
sbb
adc
xor
popf
lret
mov
adc
loopne
negl
adc
loopne
add
jne
jnp
in
dec
pop
faddl
push
mov
xor
dec
jl
jp
data16
lods
mov
sbb
je
adc
cs
inc
imul
pop
inc
outsl
jb
jae
bound
or
mov
pop
add
mov
adc
pop
mov
decl
push
in
mov
push
push
xchg
xlat
pop
sub
adc
cli
jle
sbb
add
jle
dec
cmp
inc
imul
and
jne
xor
imul
add
add
into
pop
dec
sub
and
fs
mov
cmp
add
jecxz
add
fucom
pop
adc
mov
adc
inc
loopne
push
call
insb
out
lahf
les
push
add
mov
cmp
fwait
sub
fstl
push
gs
imull
push
fdivrs
cmp
arpl
or
sbbb
nop
addl
mov
mov
mov
ss
inc
sbb
mov
leave
push
push
sbb
or
mov
push
pusha
addb
push
add
push
and
and
ror
repnz
push
pop
inc
repnz
mov
mov
sbb
and
dec
adc
add
pop
scas
leave
and
add
mov
aas
add
add
add
in
in
add
addr16
insl
xchg
insl
ds
add
push
shlb
dec
dec
testl
push
sbb
xlat
fwait
in
mov
in
jo
aaa
nop
mov
sbb
sbb
xchg
insb
pop
add
adc
incl
decl
jo
push
clc
xor
sbb
pop
insb
and
pop
xor
pop
iret
push
movsb
cmpsb
push
js
shlb
push
inc
inc
pop
push
test
jae
pop
sbb
adc
aad
dec
xchg
adc
sbb
add
jnp
ds
aas
push
int3
push
or
fnstsw
adc
rorl
adc
sbb
add
aas
mov
mov
fcoml
pop
xchg
and
mov
sbb
pop
push
sbb
idivb
add
push
ljmp
mov
es
sbb
pusha
mov
sbb
xchg
insl
pop
test
xor
decl
clc
dec
cmp
sbb
dec
das
inc
and
xchg
pop
mov
call
inc
movsb
mov
fs
push
pop
in
mov
mov
pavgb
nop
pop
adc
lock
insb
jle
push
mov
in
sarb
rclb
or
xchg
pop
and
test
nop
test
push
test
out
dec
loopne
test
or
mov
fiaddl
aam
insl
popa
notl
push
xlat
sbb
popf
idivl
js
push
xlat
sub
mov
mov
scas
into
jo
stc
inc
xchg
orb
inc
inc
jno
sahf
cld
inc
sub
and
inc
pusha
lahf
inc
pusha
mov
pop
push
xchg
movsb
scas
mov
sarb
inc
test
test
enter
jl,pn
mov
mov
scas
movsb
mov
xor
dec
push
scas
mov
mov
xchg
xor
mov
js
mov
push
movb
pop
sbb
pusha
dec
adcb
dec
xor
test
mov
push
les
or
pushf
mov
nop
xchg
and
fs
mov
cmp
cwtl
outsb
leave
xor
inc
psrlq
add
push
xor
mov
das
je
inc
lods
push
mov
jg
mov
sbb
mov
lock
pusha
cmp
add
push
mov
cmp
pop
sbb
push
mov
and
pop
into
cmp
inc
shrb
push
push
xlat
das
bound
aaa
hlt
push
sub
xchg
xor
push
xchg
adc
jbe
jbe
push
out
push
iret
out
push
inc
pushf
adc
or
mov
xor
nop
jle
lods
xchg
xor
inc
dec
jne
push
sbb
and
mov
gs
add
sub
addr16
orl
cmpsl
movsl
decb
pop
mov
and
inc
jl
adc
movl
push
dec
or
je
sbb
outsl
pop
sub
xchg
ret
dec
nop
mov
rorl
inc
cmp
xor
lea
xchg
sbb
test
adc
xchg
sub
test
ret
stc
xorb
popl
decl
pusha
xor
adc
cmp
push
mov
dec
and
les
or
xchg
mov
mov
push
mov
cwtl
in
cmpb
decl
and
adc
cltd
mov
cmc
cmp
rol
jne
cmp
hlt
and
or
das
xor
dec
leave
jg
xchg
daa
mov
inc
popa
repnz
add
popa
movsl
pop
or
mov
or
outsl
pushf
ret
fs
ss
or
cmp
je
enter
outsb
and
cmp
dec
and
mov
neg
inc
xchg
add
icebp
mov
sar
je
incl
jle
dec
cmpsb
cmp
pop
or
cmpb
adcl
xor
adc
in
add
adc
mov
push
decb
adc
or
orb
mov
cmp
push
fisttps
cld
pop
test
push
shr
shr
push
fstps
arpl
pushw
clc
adc
std
xorb
mov
mov
clc
adc
in
pop
cmp
pop
cld
es
mov
dec
gs
in
sbb
shlb
xor
pop
xchg
arpl
pop
inc
xchg
ljmp
imul
mov
outsl
ja,pt
ss
inc
imul
jb
dec
xchg
jnp
add
push
dec
in
mov
dec
xor
push
add
lcall
pusha
mov
push
add
insb
aaa
pop
popa
scas
clts
aam
push
sub
jb
in
aas
add
jmp
cmpsl
jl
ret
cmp
jne
or
ja
mov
pop
in
stc
mov
ja
add
inc
sahf
scas
xchg
lds
loop
addr16
xor
loopne
push
pop
lcall
imul
scas
mov
movl
fdiv
jo
push
pop
les
ret
adc
sti
js
push
inc
sahf
jo
jecxz
add
jnp
jo
push
mov
sbb
or
icebp
push
jne
sahf
adc
xchg
xorb
sbb
push
fistl
xchg
and
fwait
pop
push
or
push
mov
mov
je
mov
xor
hlt
popl
push
jne
je
faddl
add
add
iret
sbb
push
in
or
jg
cmpxchg
pop
jnp
test
aaa
inc
icebp
mov
pop
or
cs
call
adc
aaa
adc
imul
ss
adc
fcoms
or
stos
cmp
daa
jne
lock
lds
sub
pop
addb
stos
sbb
inc
daa
inc
shrl
xor
add
scas
test
jecxz
dec
sahf
aaa
mov
aas
or
inc
insl
cmpsl
or
adc
aam
or
sub
popl
test
push
mov
cltd
sarb
cs
inc
ret
testl
int
cmp
cli
or
cmp
fistps
out
xor
xor
push
sbb
lods
mov
loope
mov
ds
cmp
outsl
add
cmpsb
sub
dec
push
scas
jg
imul
jnp
inc
lahf
adc
dec
cli
test
dec
mov
dec
and
or
add
mov
loopne
out
mov
xorl
cmp
or
sub
popf
adc
addr16
mov
dec
jp
cmova
inc
imul
cmp
push
xor
mov
dec
addr16
sti
pushf
sbb
scas
push
addr16
xor
dec
push
inc
ss
push
mov
push
push
pop
adc
ret
es
iret
inc
inc
mov
dec
mov
cs
push
add
push
adc
push
test
dec
sub
push
mov
ficompl
or
pop
mov
aas
jns
loopne
sub
mov
insb
jle
xchg
inc
jmp
faddl
icebp
movsb
push
push
popa
mov
es
mov
cmpl
or
orb
xchg
cmpsb
mov
adc
mov
adc
cmp
mov
lea
xor
push
sbb
adc
lock
adc
jl
rolb
and
test
out
jb
cmpb
jmp
or
jmp
shrb
add
mov
mov
add
pop
mov
test
mov
call
mov
add
lods
arpl
and
jo
mov
in
pop
or
pushf
inc
out
dec
mov
in
rclb
out
cmp
sbb
adc
lahf
jle
test
js
mov
gs
xor
mov
ret
das
push
dec
test
jo
xor
add
popf
and
ret
fcomps
adc
adc
xor
cmc
adc
mov
sub
mov
iret
xor
imul
sbb
xlat
or
adc
jo
cli
xlat
inc
add
loop
mov
adc
jae
mov
arpl
mov
jae
ret
mov
and
rol
mov
loop
add
mov
es
inc
fstpt
clc
and
cmpsl
xchg
jno
jne
shlb
inc
jle
adcl
push
cmp
mov
fmull
lahf
xor
cwtl
ss
sbb
mov
add
lea
sahf
movl
nop
gs
push
adc
add
jo
mov
rorl
inc
push
cmp
adc
ljmp
scas
jmp
or
push
inc
or
push
push
mov
out
pop
pusha
xchg
mov
mov
daa
and
cmp
mov
test
add
jmp
xchg
push
mov
jp
inc
clc
clc
push
push
insl
jge
in
pop
sub
add
cltd
sub
or
js
and
lock
mov
movb
push
sub
addb
mov
mov
ja
jle
mov
jmp
mov
mov
cmc
out
out
push
loopne
push
or
in
mov
dec
sbb
dec
mov
cwtl
fisttpll
xchg
or
stc
sbb
xchg
popa
cmpsb
jne
pop
dec
les
jmp
sub
movsb
mov
je
fcmovnb
cmp
push
test
push
push
ss
bound
stos
and
sbbl
and
push
arpl
sarb
outsb
dec
daa
cltd
scas
push
sbbb
ret
inc
adc
mov
ljmp
dec
and
cmp
inc
inc
add
jge
shl
xchg
and
lods
shrb
sbb
arpl
xor
filds
outsl
out
add
sbb
push
leave
dec
test
fdiv
outsb
aam
pop
xor
push
das
xor
fldcw
sub
test
shl
pop
push
push
sbb
jo
hlt
arpl
movsl
and
sub
pop
push
rorb
push
and
mov
adc
push
nop
jg
xor
jmp
mov
fsubr
mov
sbb
sbb
fmull
pop
dec
lds
out
sbb
or
fs
or
sub
inc
hlt
ret
clc
movb
out
je
xchg
cmp
hlt
out
jb
es
dec
test
add
hlt
jo
sbb
int3
mov
push
xchg
imul
mov
mov
mov
cmp
inc
stos
push
enter
inc
xchg
xchg
cmp
test
mov
push
negb
dec
push
jp
or
dec
jp
xor
pushf
add
out
and
fldl
adc
jp
clc
jbe
push
lock
lods
icebp
and
sbb
mov
and
add
aaa
lds
mov
jbe
das
push
cmp
dec
add
mov
movb
int3
mov
aaa
sbb
call
pop
sbb
sub
push
adc
hlt
nop
adc
dec
je
enter
fbld
outsb
repnz
outsb
faddl
push
or
push
fdivrs
xchg
add
xchg
outsb
clc
jo
sbbl
mov
mov
fisttpl
xchg
cmp
xchg
jmp
mov
loop
jne
adc
adc
ds
pop
js
mov
cmp
mov
or
xor
xor
mov
mov
xor
nop
jo
jl
cmpsb
xchg
jp
xor
scas
js
xchg
test
shlb
fwait
imul
rorl
sti
add
or
adc
add
adc
cmpsb
ja
dec
sbb
add
pop
enter
lock
jns
out
pop
shl
inc
jne
jle
pop
pusha
pop
or
xchg
bnd
dec
mov
mull
mov
aad
push
jne
inc
nop
popf
adcb
jmp
mov
jle
ds
testb
jns
inc
xor
dec
orb
enter
lock
pop
push
adc
popa
pusha
sub
inc
sbbb
mov
xor
pushf
sbb
mov
push
and
dec
jge
sub
addr16
daa
insl
mov
push
adc
test
loope
mov
test
ja
or
pushf
mov
inc
jb
dec
mov
jmp
enter
cmp
out
divl
add
push
or
push
add
or
pop
or
or
dec
jae
stc
xor
push
or
ja
sub
push
push
cmp
sub
cmpsb
rcrb
in
jae
xchg
push
clc
xor
cltd
andb
and
js
hlt
in
call
cmp
int3
cmp
mov
sub
inc
fldcw
and
jo
and
enter
arpl
scas
xchg
gs
xchg
inc
movsl
mov
add
adc
cmp
jae
push
push
in
js
pop
mov
xchg
or
jge
popa
xchg
dec
push
repz
push
incl
sbb
inc
lret
mov
addr16
or
mov
push
mov
cmpsl
sahf
icebp
and
push
or
add
frndint
sbb
jecxz
je
sarb
pop
push
ret
loopne
add
push
or
inc
add
sbb
mov
cli
adc
lea
adc
shlb
push
mov
stos
add
test
pop
xlat
insl
cmp
push
je
xor
ret
cmp
xor
iret
dec
pop
cmpsl
mov
cmp
pusha
jns
testb
lcall
lea
sub
imull
cmpsl
inc
movb
inc
jne
cmpb
pop
fs
add
cmp
fidivs
jne
adc
cmp
subl
js
ljmp
nop
mov
adcl
dec
scas
dec
scas
enter
add
xchg
adc
daa
std
or
sbb
repnz
pop
jbe
andb
xor
loope
out
lock
and
subl
outsl
nop
dec
iret
add
adcl
add
in
imul
cs
outsb
jns
insb
add
scas
push
fucomip
add
jns,pn
ja
outsl
getsec
iret
test
fdivrs
dec
dec
add
xchg
aam
and
push
or
shlb
mov
fcmovnu
mov
mov
loope
pusha
add
enter
add
cmp
push
or
mov
xchg
aas
cmp
test
pop
jbe
ja
xor
or
daa
sbb
or
rorl
or
sub
orb
mov
jae
push
pop
mov
pop
or
shll
sbb
scas
outsl
mov
cmp
je
negb
call
fmul
dec
add
and
ds
insl
push
add
push
cmp
or
or
or
and
in
int
pop
push
daa
sub
mov
jae
pop
or
push
loopne
sub
adc
sbb
test
pusha
jb
pop
or
mov
sbb
jno
dec
jo
jne
fildll
adc
data16
inc
xchg
mov
mov
insb
adc
dec
pop
aas
add
mov
mov
popa
add
mov
das
rclb
dec
enter
aam
push
imul
loopne
add
leave
ret
push
ss
sub
leave
add
mov
cmp
outsl
or
pusha
dec
mov
insl
rcr
or
push
jp
jo
push
enter
xchg
adc
cmpsl
add
lea
je
lock
mov
popf
and
call
addr16
out
subb
cmp
movups
pop
jge,pt
adc
loope
xor
or
sarb
loope
adc
in
movsl
vmwrite
inc
jl
push
push
mov
sub
cmp
sbb
or
fdivr
add
ret
loop
test
or
cmc
fwait
mov
imul
in
nop
ror
add
bound
sahf
mov
shll
push
je
cmp
js
mov
fcomps
in
push
bound
aam
mov
out
pop
in
outsl
imul
cwtl
push
xchg
in
out
cmp
mov
adc
inc
ss
imul
call
inc
sbb
lcall
les
in
mov
rcrb
dec
mov
scas
fiaddl
fincstp
shll
fscale
popa
icebp
or
push
ret
cmp
shlb
faddl
mov
pop
jg
add
push
sub
sub
cmp
adc
cmp
and
xchg
in
test
adc
or
in
dec
pusha
jge
add
or
in
mov
sub
fcoms
pushw
shlb
mov
les
call
je
fsubl
insl
or
cmp
lea
sub
mov
sbb
and
and
dec
mov
pop
ljmp
lock
jmp
jns
xor
sbb
cmp
insl
or
sub
inc
inc
das
inc
xchg
add
data16
add
sbb
sti
loopne
movb
mov
sbb
mov
stos
dec
enter
jmp
leave
dec
sbb
inc
or
bound
dec
cmp
punpckhdq
adc
add
sub
movsb
adcl
add
lea
add
dec
pop
or
lcall
add
or
hlt
add
adc
xor
inc
mov
adc
mov
pop
lods
sub
cmp
aas
adc
jle
inc
mov
dec
repz
mov
push
pop
pop
pop
pop
clc
xchg
pop
push
inc
dec
jne
or
cmp
sub
pop
push
or
mov
add
inc
jo
fistpl
sbb
or
lea
push
movsb
jae
js
in
fildl
cmpl
dec
jns
sbb
jmp
dec
and
mov
cmc
incb
mov
mov
jmp
scas
push
sti
pop
lock
add
adc
adc
xchg
cld
push
or
pusha
loopne
inc
cmp
cmpl
push
cmpl
lret
mov
mov
sti
popa
cmp
cld
rolb
jne
ds
and
repnz
mov
mov
std
lea
mov
outsb
pop
push
cmp
cs
ss
xor
jmp
addr16
data16
add
xor
cld
loop
roll
addb
xchg
inc
lret
add
into
movsb
ja
das
jne
add
mov
and
adc
ja
mov
dec
movzwl
lea
xchg
lret
or
leave
in
clc
repz
push
dec
xlat
pop
cld
test
adc
push
inc
pop
pusha
add
pusha
and
mov
push
push
pop
clc
frstor
ss
sub
cmc
je
stc
aas
push
inc
mov
dec
mov
add
mov
push
fcomps
es
lock
adc
cmp
jno
sti
pop
push
fcoms
mov
outsl
fdivs
addr16
dec
lock
cmp
cmp
call
loope
rolb
jo
mov
add
hlt
sub
add
xchg
mov
je
fwait
aam
jge
inc
push
outsl
push
dec
dec
mov
mov
xor
clc
inc
outsb
xor
shrl
loope
fadd
mov
ja
ret
jnp
jns
insb
je
test
out
and
mov
or
xor
push
test
ljmp
lods
lock
jb
push
gs
shlb
xlat
mov
add
stc
sbb
or
jmp
cmp
loopne
fcoml
add
add
popa
add
ret
mov
shrl
leave
mov
and
adc
pushf
gs
add
cmc
add
nop
pop
cld
push
push
gs
leave
test
jo
add
test
adcb
mov
insl
arpl
sub
pop
mov
mov
add
mov
xor
pop
add
adc
sub
jne
ss
lock
inc
jmp
add
inc
mov
std
mov
int3
cmc
decl
cmp
jg
test
jle
cmp
jl
cmpsb
aaa
adc
popf
mov
cmp
jg
cwtl
and
mov
cmpl
nop
push
cmp
or
mov
popa
enter
dec
sub
pusha
imul
call
lahf
sbb
pop
adc
dec
xchg
nop
adcl
enter
push
add
fcomps
add
sbb
sbb
fsubrs
scas
sub
sub
jbe
push
mov
or
push
pop
popa
mov
das
and
fmuls
mov
ds
sub
test
cmpb
xchg
xchg
rcr
jo
dec
adc
lret
inc
ret
in
sub
or
outsl
or
jl
push
cmp
dec
loopne
in
ss
dec
mov
stos
insb
orb
cmp
jmp
jno
mov
xor
ss
and
js
push
repnz
add
sub
mov
aad
xor
call
loope
call
sub
imul
sub
nop
mov
enter
jbe
add
mov
mov
mov
push
mov
sbb
add
xchg
or
dec
rdpmc
shr
dec
pop
hlt
nop
xchg
inc
rolb
repz
inc
gs
jo
push
jns
int3
aas
adc
mov
add
xor
js
mov
jcxz
mov
imul
xchg
shr
xchg
sbb
pop
push
cmp
or
xor
bnd
lock
test
add
and
insb
jecxz
adc
sbb
pop
addb
shr
mov
mov
repnz
jl
cmp
sub
rolb
je
sbb
or
xchg
sub
sub
add
or
je
dec
or
xchg
xor
mov
sub
jmp
les
out
movsb
mov
xor
jmp
lea
jmp
jge
and
imulw
sub
or
adc
cmp
jns
add
and
shlb
push
sub
adc
stos
cld
inc
or
js
mov
push
pushf
and
inc
pop
lret
hlt
icebp
dec
iret
sub
js
adc
cld
sub
clc
stos
adc
testb
sub
dec
pop
sbb
mov
xor
aam
push
sbb
sbb
ret
mov
cmp
push
out
add
inc
mov
jae
mov
out
add
insb
and
mov
sbb
popa
push
ret
cs
clc
pop
mov
xor
mov
mov
inc
incl
sbb
cmp
ss
hlt
mov
jg
pop
or
loope
and
push
ret
outsl
lods
sub
nop
mov
push
mov
jns
sbb
adc
insl
clc
jg
xlat
pop
mov
scas
addl
pop
dec
shll
add
insl
jns
mov
out
addl
dec
adc
in
loopne
mov
out
imul
nop
and
lcall
dec
movsl
loopne
aaa
push
stos
add
push
inc
push
add
rorb
sub
mov
inc
fmuls
xor
or
xor
mov
out
in
outsb
add
push
lods
or
push
mov
or
push
sbb
push
orb
push
mov
outsb
mov
mov
sbb
xchg
lods
sbb
in
in
push
xchg
cld
adc
mov
xchg
inc
int
mov
loopne
dec
jae
jecxz
adc
jo
or
arpl
stos
jle
or
push
movb
popa
xor
sahf
adc
clc
and
and
dec
add
pop
mov
in
test
push
jmp
loopne
xor
cmp
jns
mov
das
sbb
mov
fsubs
sub
xor
adc
xor
lcall
push
ret
push
dec
or
invd
enter
dec
inc
test
and
jg
xchg
cmc
add
mov
cmp
pop
rolb
cld
xchg
cmp
ror
or
mov
sbb
sub
ret
ljmp
jno
aas
test
mov
fisttpl
hlt
mov
add
movb
loopne
out
adcl
loope
hlt
pop
jne
cmp
inc
sbb
stos
mov
inc
daa
lock
ret
imul
mov
add
loope
lahf
xchg
pop
fldcw
dec
js
lret
jp
je
nop
mov
xchg
and
pop
insb
add
es
sbb
cld
leave
ret
inc
push
inc
push
jbe
sbb
xorb
fistps
int3
pop
adc
or
ret
popa
pop
insb
testl
dec
addr16
filds
andb
sbb
nop
ret
or
inc
out
inc
cmp
xor
and
push
cmp
movsb
int
je
daa
mov
pop
mov
dec
inc
cmp
subl
movsl
push
rorb
or
pop
sub
xor
dec
rolb
xor
and
or
and
dec
sub
fisubrl
insl
cmp
adcb
xor
push
push
adc
add
jne
dec
imul
pop
jo
mov
imul
inc
push
imul
es
and
xchg
add
push
sub
add
add
nop
cmpsl
sub
sbb
add
adc
lock
adc
mov
out
and
popa
fs
arpl
pop
sub
lahf
aas
movsb
jg
push
xchg
xor
adc
push
sub
xor
mov
mov
sub
xor
mov
push
lds
out
xchg
cld
or
push
cmovno
negb
rolb
rcll
clc
pop
xor
and
pop
sbb
fadds
lahf
dec
sub
cmpsb
push
mov
or
lds
xor
jae
pop
int3
push
fsubs
js
sti
pop
mov
pusha
push
loope
cmp
adc
xchg
ret
mov
jg
push
mov
inc
jp
inc
dec
add
movsb
xchg
xchg
push
or
imul
and
or
xor
adc
cmpb
cmpl
or
inc
insb
andl
sbb
or
xchg
adc
add
mov
jmp
or
mov
dec
sarb
cmp
lock
test
add
lea
jns
or
xchg
or
pushl
or
pop
ss
adc
and
push
stc
or
mov
push
ret
int3
add
fists
sub
cmp
xor
inc
test
add
xor
push
test
pop
fiaddl
jne
movl
mov
dec
gs
pop
jmp
cmp
jne
add
add
add
into
ljmp
arpl
ds
rol
les
push
adc
out
lahf
adc
aaa
enter
jne
sub
or
add
vpshrdq
scas
sbb
js
mov
push
xorl
aam
xchg
mov
pop
mov
daa
fs
out
leave
xor
flds
inc
adc
aaa
add
and
adc
dec
or
andb
les
mov
aas
fisttps
inc
mov
das
fldenv
add
movl
divb
adc
cmc
sub
call
jmp
sar
scas
pop
cmp
out
push
fmuls
add
xchg
sbb
push
and
lods
ss
mov
add
sub
pop
movsl
stos
loopne
and
sub
mov
pusha
sub
je
mov
sbb
ds
hlt
cmp
pusha
stos
add
in
nop
cmp
and
xchg
loopne
popa
dec
sub
jmp
sahf
xchg
adc
inc
insl
push
sbb
imul
jmp
outsl
push
je
mov
or
cmp
inc
lds
adc
imul
sbb
inc
mov
jno
adc
jne
pop
test
and
inc
shlb
jl
push
mov
test
lahf
loopne
dec
dec
cmp
jne
mov
xor
push
add
xchg
test
or
popa
je
xor
dec
imul
das
xor
repz
jecxz
sbb
in
jmp
xchg
sub
imul
jg
xchg
stos
cmpl
push
int
or
test
sbb
insb
jnp
int3
dec
jb
sub
insl
js
in
inc
in
cmp
xor
pop
nop
fsub
aad
pop
adc
mov
and
cli
add
je
pop
add
bound
shll
push
and
test
sbb
xor
jbe
pop
loopne
mov
ss
push
ja
loopne
adc
mov
je
std
loopne
test
or
aas
testl
loopne
and
xor
mov
cmpsb
push
outsl
mov
pop
and
cmp
insb
mov
mov
pop
shl
inc
jmp
test
pop
data16
mov
cmp
and
add
leave
xlat
add
inc
xor
mov
sub
dec
jle
xchg
inc
push
sub
xor
daa
lock
mov
push
mov
cmp
rclb
cmpsl
nop
fldenv
adc
mov
push
xorb
es
or
dec
lret
sub
and
sahf
jo
or
bswap
mov
mov
leave
leave
loopne
ds
add
jmp
mov
inc
addr16
nop
xchg
fimull
pop
adc
push
lods
pop
rorl
fidivrl
test
or
xchg
cmp
adc
cmpsb
adc
call
mov
fsub
mov
iret
repnz
lock
cwtl
lock
imul
movl
inc
sbb
mov
mov
pop
pop
js
in
popa
push
or
into
scas
rorl
adc
push
aaa
jno
cmp
fwait
daa
pop
ret
jl
movl
add
enter
mov
pushf
or
sahf
in
test
cmp
mov
negl
sub
sub
push
sub
cltd
or
jmp
adc
push
dec
jl
fisubrs
outsb
dec
mov
mov
jmp
popa
or
aaa
jns
sub
lea
and
xchg
out
and
xor
cmp
out
int
cwtl
mov
cmp
jmp
add
andl
nop
jge
test
es
popf
mov
out
adc
inc
mov
mov
sub
ret
inc
lods
and
lds
and
cmp
and
xchg
movsb
mov
push
mov
aad
or
ret
adc
in
xchg
add
cmp
mov
mov
test
into
mov
sub
addb
ds
inc
bound
jns
push
lret
adc
push
pop
or
cld
pop
jnp
xor
scas
iret
xchg
dec
mov
je
mov
push
or
int
mov
xor
inc
mov
mov
mov
fcom
movsb
adc
iret
sub
scas
cmpsb
loopne
sub
test
push
add
roll
test
fstl
pop
or
push
iret
push
jne
xchg
sub
add
xlat
mov
sub
movsb
ret
notb
inc
adc
and
sbb
mov
add
fcoml
pop
ret
cmp
push
sbb
mov
fisttps
dec
jg
movzwl
push
dec
in
scas
shl
adc
scas
lods
mov
mov
push
sbb
adc
mov
lock
pop
sbb
stos
mov
and
test
push
pop
imul
jg
pop
xor
or
sub
ja
jge
pushf
mov
fadds
std
dec
inc
cld
rorb
sbb
mov
jge
xorb
call
js
pop
dec
inc
or
inc
lret
outsl
imul
push
pop
and
push
orb
pop
movsl
lret
cmp
insb
xchg
pop
movsb
arpl
scas
add
sbb
mov
mov
negl
ljmp
pop
jle
in
jne
loope
sbb
loope
addb
ffree
scas
test
jmp
xor
inc
xor
fwait
xchg
adc
clc
roll
sbbl
and
push
and
cmp
dec
cmpsl
cmpsb
dec
or
adc
add
and
xchg
pop
mov
dec
stc
push
dec
in
test
push
dec
mov
xchg
ja
cmpsl
xchg
inc
in
ret
cld
pop
outsb
pop
sub
push
cmpb
pop
aas
dec
loope
dec
and
push
push
cmp
aad
or
jo
loope
mov
and
xchg
dec
out
stc
sub
cmp
sub
or
xor
and
insb
add
inc
jg
jnp
lods
clc
std
mov
icebp
sbb
dec
sbb
jg
call
push
sub
pop
adc
inc
sub
movl
push
pop
jecxz
sahf
adc
mov
xchg
xor
psubsw
aaa
sub
pop
inc
ret
push
adc
pop
sbb
xor
inc
sbb
xchg
jp
mov
rolb
sub
daa
fbld
or
call
sbb
mov
sbb
add
and
mov
lret
add
test
lods
sbb
and
push
ljmp
int
daa
dec
je
sub
je
sub
inc
or
je
xchg
sub
xor
cmp
xor
outsb
inc
test
xor
mov
faddl
jmp
push
dec
jmp
mov
mov
and
in
stos
push
add
or
movsl
test
rclb
out
outsb
ret
sub
dec
sub
mov
adc
cmp
add
bound
es
push
pusha
pop
adc
decl
mov
mov
add
pop
loopne
jmp
cmc
mov
in
mov
inc
mov
mov
add
subb
outsl
push
outsb
outsb
sub
inc
inc
mov
cmp
ja
lock
imul
push
mov
iret
adc
add
mov
inc
sbb
hlt
xorb
lahf
cmp
movb
push
aas
jae
add
out
arpl
lock
inc
xor
inc
mov
cmp
push
add
cmp
pop
add
add
cmpsb
test
lock
pop
jne
pop
das
or
dec
mov
rorb
test
pop
shll
aas
push
jb
push
pop
dec
js
inc
add
inc
stos
add
push
cmp
pop
cli
int3
gs
leave
pop
addr16
dec
sub
sub
xchg
inc
or
pop
sbbb
loopne
cmp
or
enter
sbb
dec
shl
mov
jp
ja
jae
test
adc
orl
and
adc
sbb
jg
gs
mov
or
subb
insb
jne
fisttpl
loop
mov
lock
sahf
dec
repnz
xlat
stos
mov
add
int3
cmp
xchg
dec
ljmp
pop
sub
xchg
pop
aaa
and
push
mov
hlt
ja
xor
rolb
ss
inc
cmpsb
or
sbb
sub
jg
je
sahf
inc
adc
add
jo
push
xor
idiv
mov
cmpb
ret
stos
iret
es
fcmove
adc
adc
mov
jmp
or
push
pop
test
or
add
pop
pop
cs
jno
lock
push
push
add
icebp
adc
je
sub
inc
rclb
aam
mov
add
std
push
nop
aas
sarb
add
inc
xor
dec
pop
sub
sbb
xchg
add
data16
or
je
movsb
stc
dec
popa
add
mov
out
or
sub
or
call
push
mov
xchg
pop
les
cmp
mov
repz
xor
enter
pop
insl
or
ja
jb
popa
inc
leave
idivl
jbe
pop
dec
pop
or
testl
jp
xor
stos
lret
movsl
cs
pop
jno
pop
or
lcall
adc
push
sub
daa
insb
add
aad
xor
pushf
scas
out
mov
cwtl
enter
lahf
mov
sbb
jb
sub
test
push
sbb
xchg
test
cli
ret
and
dec
push
or
out
push
out
or
or
stos
and
cli
dec
call
mov
pop
loopne
sti
sub
xor
add
xchg
cs
imul
mov
scas
lods
fdivrs
subl
inc
mov
mov
or
or
data16
iret
rorl
or
push
sub
jbe
jbe
mov
push
fadds
movsb
mov
jo
les
scas
cmpsl
xor
or
cld
lahf
in
enter
subb
push
lahf
add
and
push
fsubs
mov
pop
sbb
push
or
push
test
xchg
or
push
pop
pop
daa
daa
and
rorb
xchg
sub
xor
push
dec
push
loop
les
or
add
das
sbbl
inc
push
sub
xorb
adc
jp
imul
push
in
push
mov
pop
mov
inc
lods
or
aam
mov
dec
and
sbb
push
xchg
adc
ret
jb
shll
push
pop
jno
addb
mov
lock
mov
mov
clc
and
sbb
ret
inc
mov
jb
ficompl
jle
ljmp
and
sbb
adc
pusha
and
inc
add
add
nop
sbb
test
sub
xor
cmpsl
add
or
rclb
xor
mov
rcrb
icebp
push
push
mov
or
or
xor
mov
and
pop
nop
cmp
add
inc
shlb
orl
dec
rsqrtps
sahf
inc
in
xor
adcb
sbb
sbb
fmul
xorl
mov
hlt
mov
jno
in
ljmp
pop
add
jbe
adc
xor
pop
dec
and
ret
push
push
fs
and
in
pcmpeqw
insl
inc
movsl
mov
sbb
and
loop
enter
sbb
mov
sub
out
pop
mov
jl
push
je
int3
fadd
mov
mov
pop
mov
cmp
pop
cmp
test
enter
pushf
lret
test
stos
adc
frstor
push
rolb
xchg
sbb
and
xchg
add
cmp
stos
adc
jbe
data16
mov
sahf
fadds
adc
inc
add
mov
loope
mov
cwtl
push
add
iret
adc
mov
sbb
jae
sub
xor
add
dec
inc
dec
ja
outsb
pop
cwtl
fmuls
inc
es
cld
dec
adc
inc
enter
sbb
outsl
lods
sub
cli
sarl
fsubrs
cmpsb
or
adc
test
mov
dec
cmp
pop
cmpsb
into
push
shlb
imul
cmp
fcmovu
lret
outsl
test
lcall
loop
push
call
pop
outsl
adc
adc
jno
push
push
add
cwtl
int
xchg
loop
push
out
mov
lea
dec
adc
pop
lret
jmp
rorb
add
jb
sub
xchg
lea
or
out
add
pop
lahf
sbb
add
add
lods
test
adc
add
pushf
xor
filds
mov
push
add
xchg
in
ds
cli
dec
sbb
lret
das
movb
sub
mov
add
rorl
and
dec
rolb
enter
add
ret
push
sub
xor
adc
loop
inc
adc
dec
push
xor
adcl
or
data16
inc
js
andb
pop
fldenv
repz
dec
xlat
mov
pushf
pusha
xor
cmc
sbb
mov
sbb
or
push
inc
or
mov
fdivr
iret
or
pop
dec
pop
test
sbb
xlat
inc
sub
dec
inc
fadd
inc
and
cmp
cmp
push
ds
inc
sti
jge
add
push
es
push
mov
and
pop
ja
js
test
push
inc
stos
ficomps
pop
cmp
push
fistl
aas
mov
mov
inc
mov
inc
dec
popa
pop
mov
movl
xlat
sahf
push
push
mov
clc
sub
clc
stos
cmp
dec
add
xor
dec
gs
jmp
sub
push
fcompl
cmp
cltd
jmp
lret
add
pop
push
out
jmp
dec
mov
lret
mov
mov
dec
in
or
sub
xchg
ret
stos
mov
or
jmp
test
or
cli
push
scas
mov
mov
pop
shrl
dec
pushf
pusha
js
int3
mov
mov
inc
outsl
pop
sub
insb
jp
mov
lods
int
push
or
nop
push
jnp
das
xchg
movsl
jg
pop
insb
or
mov
out
cmp
jns
shlb
cmp
jbe
cmp
or
scas
push
enter
push
cmp
pop
rorb
aam
scas
jno
jp
xor
lea
adc
add
inc
pusha
cmpsb
xchg
mov
shr
imul
add
in
mov
sahf
sub
aad
js
sub
es
arpl
mov
mov
or
xorb
inc
gs
enter
inc
jne
and
pushw
push
jp
sub
aad
push
pop
inc
or
adc
add
nop
sbbb
pop
stos
adc
lds
add
lahf
mov
pop
sbb
out
daa
and
and
test
cli
pusha
and
in
sti
test
pop
and
push
imul
push
add
and
enter
or
rolb
jle
fimull
shrl
push
push
mov
incl
aas
push
xor
testb
je
pop
pop
add
pop
jns
jno
mov
push
ret
sbb
inc
xor
sarb
enter
outsl
cltd
cs
inc
sub
jbe
or
push
pop
hlt
movsb
adc
or
adc
fsubs
add
outsl
pusha
sub
rorb
aam
push
add
movsb
movsb
iret
cld
inc
sub
mov
mov
add
add
sarb
sahf
mov
sti
nop
mov
add
pop
adc
das
jo
mov
cmp
je
shr
inc
sbb
hlt
mov
pop
test
repz
sbb
push
mov
incb
ret
rorl
push
gs
add
and
insb
mov
ret
add
movb
adc
xchg
dec
cmp
push
xchg
push
xor
inc
inc
ret
cmpsl
dec
jo
repnz
push
push
xor
sbb
bound
pusha
arpl
and
sub
mov
push
bound
sbb
cld
add
scas
sbb
stos
rcrb
insl
and
inc
flds
scas
jnp
add
adc
push
sbb
fdivrs
xchg
jne
cmpl
inc
int
and
push
push
popa
and
enter
add
push
jne
lock
adc
daa
pop
xorl
or
inc
nop
inc
nop
mov
pop
pop
enter
pushf
inc
inc
mov
or
dec
inc
or
ja
adc
cmp
pop
faddl
loop
lods
adc
int3
mov
sub
sbb
pop
cld
lock
and
xchg
rol
cmp
add
or
mov
push
imulb
dec
mov
adc
rorb
push
jne
and
xchg
adc
stos
push
addr16
addb
inc
shll
stc
lods
pop
pop
sub
mov
push
cld
loope
js
stos
pop
and
push
cmp
jns
adc
sbb
and
mov
mov
pop
cmpsb
inc
stos
xor
pop
stc
andl
outsl
lods
loop
xor
and
addl
and
rorl
leave
jle
dec
push
xchg
adc
push
ret
insl
repnz
pop
aam
lock
ret
rcrb
stc
clc
inc
adc
adc
inc
add
ss
mov
frstor
jb
and
pop
stos
dec
sarb
sub
xor
mov
mov
sub
mov
pop
cmp
ja
adc
jl
pop
mov
inc
das
xchg
mov
pop
imul
movsl
rcrb
bound
ret
pop
cmpsl
je
xor
inc
push
fs
mov
call
mov
mov
imulb
int
test
push
push
xchg
mov
add
push
adc
push
roll
test
and
inc
adc
mov
les
cmp
loopne
mov
jo
dec
push
xchg
and
jb
les
cmp
push
imul
clc
jnp
sub
add
adcb
mov
jbe
sbb
cltd
dec
mov
add
insb
jl
daa
xor
cs
ds
out
add
and
or
sarl
xor
inc
xchg
sbb
sub
sub
das
push
andl
xor
cmp
sbb
es
mov
fisubrs
add
sub
add
pop
out
lods
fiaddl
jb
std
and
add
das
mov
fidivrl
adc
jne
jae
sbb
and
push
iret
push
inc
push
xor
jl
hlt
xchg
add
and
mov
add
and
bound
and
rorb
sbb
xchg
push
das
mov
inc
jno
lods
mov
xor
push
dec
adc
icebp
shr
mov
in
and
int3
add
sbb
ljmp
loop
jne
icebp
sub
int3
sbb
into
push
dec
loop
add
add
xchg
cmp
lds
out
pshufw
lods
adc
call
andb
pop
mov
stos
repz
sbb
cmp
mov
fbld
add
add
adc
andl
inc
add
inc
sbb
lahf
xorb
mov
jecxz
hlt
enter
or
mov
dec
or
inc
push
sbb
inc
cmp
mov
xchg
data16
inc
sti
fldl
inc
cmp
ret
test
cmp
sub
rorb
pusha
inc
dec
rolb
enter
insb
and
leave
mov
dec
jo
pop
insb
loopne
insl
lock
cltd
jne
stc
cmpsl
inc
and
ljmp
scas
movsb
test
ret
cmpxchg
cmp
jl
jns
es
repnz
mov
jg
push
push
test
imul
pop
nop
popa
adc
cwtl
add
shlb
inc
push
sbb
cld
scas
adc
hlt
loopne
out
clc
movsb
sbb
mov
mov
mov
dec
cs
inc
push
adc
mov
cmp
inc
pop
add
inc
and
lcall
int
push
push
mov
mov
mov
nop
mov
xchg
adc
leave
inc
out
nop
popl
into
inc
insb
push
xor
das
fiaddl
lret
xor
shrb
lret
lock
mov
xor
and
imul
add
xor
cmp
mov
xchg
lock
inc
jb
scas
push
or
scas
or
sti
int3
call
adc
push
roll
add
in
dec
sbb
std
jne
mov
jl
mov
or
inc
aaa
movsb
sbb
xchg
push
insl
xchg
adc
xor
adc
cmp
in
clc
jne
aaa
pop
ret
xor
push
cmpsl
add
push
dec
xchg
daa
cwtl
push
push
inc
sbb
pop
adcb
jne
lods
std
dec
rcr
cmpb
mov
dec
sbb
dec
jmp
pop
add
push
push
outsl
mov
sub
int
jno
aaa
jmp
xchg
adc
lock
test
sbb
cmp
sarb
cwtl
iret
push
add
mov
pop
add
sub
sbb
test
adc
or
out
outsl
mov
add
or
mov
jb
stos
lock
adc
mov
push
in
outsl
mov
inc
or
inc
testl
ds
outsl
fiadds
add
inc
sub
ret
or
mov
mov
addb
pop
dec
cmp
imul
or
insl
aad
mov
push
icebp
push
push
mov
or
arpl
add
dec
imul
mov
rcl
dec
lods
popf
ss
ret
push
inc
lea
mov
mov
mov
mov
sub
jne
mov
push
push
push
add
loopne
dec
dec
mov
xchg
xchg
inc
ds
push
mov
icebp
mov
mov
dec
je
sub
sub
adc
or
sbb
or
and
lods
sbb
pop
cmp
mov
push
fldt
adc
push
adc
add
inc
std
cmp
sbb
test
push
fcomip
mov
arpl
mov
push
outsl
pop
rol
shrb
cmp
push
mov
xchg
mov
nop
mov
sub
cmp
adc
lods
enter
ret
pop
addr16
jo
push
arpl
or
out
jp
ret
testl
roll
in
mov
jo
or
in
loopne
test
rcll
pop
cmpb
add
cmp
jno
inc
leave
mov
mov
cli
hlt
mov
sbb
cmp
and
mov
mov
and
pop
mov
mov
jmp
outsb
pop
xor
decb
xchg
mov
mov
lret
pusha
lea
arpl
xor
fs
xor
nop
dec
jmp
push
pop
mov
xor
nop
xchg
clc
roll
inc
mov
jmp
flds
xchg
inc
jo
rcrb
ror
rcr
mov
nop
clc
aas
iret
add
repnz
push
sarb
mov
out
int
mov
cmp
ret
push
or
mov
sbb
aam
jb
jne
or
cmp
push
enter
mov
pop
shr
shlb
stos
inc
add
lret
add
sbb
add
les
sahf
mov
mov
rol
or
shrl
or
loope
dec
cli
and
sub
jne
push
cmp
jne
lahf
ds
sub
mov
mov
dec
lock
push
mov
push
push
lods
lret
rclb
inc
ss
mov
rcrb
test
mov
lea
data16
nop
mov
cmp
icebp
call
rol
clc
xchg
inc
dec
dec
push
lds
out
loop
inc
ss
inc
insb
gs
leave
aam
push
imul
mov
adc
cs
in
sbb
js
cs
rcrl
push
fs
aad
test
aam
pop
dec
imul
popa
or
es
or
loop
push
fsubrs
sub
lret
imulb
bound
imul
arpl
into
dec
stos
push
adc
jo
xor
push
mov
jno
in
aad
add
int3
push
push
jb
aad
or
mov
or
je
adc
insl
ret
cld
add
jne
call
push
loope
std
test
jbe
sbb
mov
lock
add
push
sti
dec
cmpb
cmpsl
cwtl
je
inc
ljmp
mov
or
and
inc
jg
test
add
daa
push
cltd
and
aas
xor
jae
jns
push
xor
mov
orl
inc
inc
or
inc
les
and
add
movsb
pop
out
popa
ss
jo
xor
or
lock
repnz
push
and
or
inc
xor
pop
idivl
std
in
out
gs
or
jmp
mov
sub
dec
jno
sbb
or
cmp
je
jo
sub
mov
shlb
das
rcrb
push
decl
adc
xor
and
pushf
out
aaa
sbb
testl
sbb
mov
xor
cmp
mov
push
mov
pusha
mov
jo
mov
mov
nop
mov
mov
movsb
test
mov
mov
mov
shlb
jo
aam
movsl
sub
adc
cmp
sbb
addr16
cs
mov
pop
arpl
shrb
icebp
test
sub
xor
int
mov
adcb
and
movsb
jb
lret
fisubrs
lret
push
xor
in
nop
cwtl
cmp
fidivrs
lods
or
and
filds
inc
sub
xchg
add
lods
push
movsb
xor
push
clc
pop
and
pop
xor
push
movsb
xor
fs
nop
lret
mov
push
sbb
and
je
gs
sub
js
loope
add
jl
orb
gs
test
and
mov
nop
loopne
or
xor
xchg
dec
cwtl
sub
adcb
mov
lret
test
gs
sub
lods
int3
mov
lods
or
in
add
mov
cmp
rcrb
enter
xchg
dec
push
sub
shlb
fnsave
xlat
xchg
xchg
popa
sub
add
pushf
lock
outsl
pop
mov
jo
dec
adc
sbb
cmpsb
sub
stos
ret
aas
mov
stos
pop
xor
testl
jbe
or
nop
arpl
or
insl
add
jb
add
pop
xor
xor
inc
push
or
inc
in
pop
mov
pusha
in
es
xor
aaa
dec
xchg
stos
loope
rcll
jae
fdivl
sub
gs
adc
ja
push
fsubrp
out
add
out
outsb
jb
aaa
jae
arpl
jb
push
xor
lods
xchg
add
test
push
or
aaa
dec
sbb
or
jg
inc
adc
mov
jecxz
xor
mov
xchg
push
icebp
mov
push
mov
pop
jno
add
ret
jae
dec
ds
mov
aaa
aaa
sub
push
push
dec
inc
lahf
mov
ja
mov
inc
push
insb
jnp
icebp
gs
les
mov
inc
inc
push
jne
push
push
jnp
pop
xor
imul
jg
mov
adc
dec
pand
mov
aaa
xchg
cmpsl
xlat
lods
add
in
xchg
sahf
mov
cmp
jne
orl
andb
lods
inc
sahf
ja
push
jae
cmpsb
and
jae
dec
outsl
push
imul
xchg
arpl
inc
rcrl
sbbl
add
push
or
mov
jl
inc
xlat
cmc
sbb
adc
adc
roll
push
add
movsb
nop
lahf
in
in
jne
in
mov
inc
jne
in
loop
pop
loope
repnz
xchg
nop
ret
and
push
jb
das
add
cmp
push
rclb
cld
and
int3
or
lahf
or
pop
dec
pop
inc
decb
adc
wrmsr
inc
js
inc
sahf
insl
stos
fs
cmp
push
dec
loope
iret
xchg
push
pop
jp
mov
and
pop
jle
dec
sub
out
repnz
push
cmp
xor
or
push
dec
cmpsl
adc
sub
daa
call
or
jns
jl
dec
aad
ret
push
fmuls
xchg
push
cwtl
fxam
pop
ret
push
out
or
gs
adc
or
jns
xchg
adc
cs
mov
outsl
adc
popa
popa
push
sbb
sub
enter
pop
adc
mov
gs
insb
add
test
idivb
mov
pop
xor
jbe
inc
or
inc
inc
outsb
sti
pop
mov
mov
xchg
pop
cli
jns
xor
je
pop
cmp
jno
pop
fsubs
adc
inc
or
push
jb
sbbl
push
setg
jp
inc
ja
testl
inc
adc
test
out
gs
pushf
adc
add
mov
pop
jo
jns
jo
jno
rol
sbb
push
add
addr16
and
loopne
arpl
mov
and
ja
lods
cmp
fs
push
jp
mov
and
dec
ja
in
mov
arpl
inc
ud2
sub
ja
mov
out
scas
dec
outsb
out
ret
test
inc
cmp
and
mov
pop
inc
sub
arpl
fs
jg
or
pop
bound
dec
mov
cmp
and
push
jmp
push
mov
sub
sbb
add
fisttps
xchg
adc
daa
xor
mov
jnp
nop
and
mov
dec
das
inc
or
mov
cmovns
es
and
pop
adc
mov
pop
idivl
jo
adc
loop
jno
pop
inc
mov
movsb
sbb
lahf
pop
sub
je
add
or
jecxz
adc
outsl
xlat
je
lods
jge
or
arpl
bound
jne
jae
sbb
nop
mov
mov
dec
jo
push
inc
aaa
inc
insb
lds
cmp
jb
jb
push
sub
scas
push
ss
push
ret
mov
push
lahf
ss
mov
ss
andl
adc
cmpsl
fbld
fists
gs
dec
imul
adc
sbb
shr
dec
pop
daa
adc
and
sbb
pop
rolb
adc
mov
push
je
idivl
mov
les
clc
sarb
mov
cmpsl
lahf
sub
shlb
cmp
repnz
bound
xchg
xchg
bound
mul
or
lahf
insb
roll
sub
push
push
mov
pop
adc
bound
outsl
test
sub
adc
orb
aaa
push
addr16
add
inc
adc
test
lock
addr16
jp
add
les
ljmp
insl
lds
fbstp
adc
push
add
dec
movsb
xchg
stos
adc
jecxz
mov
daa
push
mov
outsl
mov
or
pop
push
shrl
je
or
adc
inc
pop
gs
xchg
loop
xor
outsl
les
inc
scas
mov
jg
enter
or
sub
insl
ret
pop
repz
or
lds
and
insb
mov
jae
stos
call
push
imul
out
mov
jecxz
add
sbb
adc
push
sbb
movl
jae
xchg
test
inc
jae
add
push
loop
addr16
adc
pop
ljmp
loop
push
subl
pop
xchg
fisubs
mov
mov
lds
arpl
adc
movzwl
das
and
insl
xor
imul
cmp
or
sub
push
out
mov
and
adc
rcll
shrb
out
push
pop
add
inc
sbb
sbb
adc
movq
pop
push
aas
lahf
sub
sub
xlat
imul
int3
lret
into
js
add
je
jns
adc
bound
cmpsl
lds
ss
or
or
push
xor
push
stos
imul
mov
push
lods
insl
mov
decl
mov
and
jns
jg
and
and
pop
addr16
inc
sbb
cmpsb
and
inc
sbb
add
shlb
inc
into
xlat
pop
decb
mov
cmpb
adc
lahf
mov
push
inc
mov
cmp
xchg
fwait
jb
xlat
popf
sbb
mov
xchg
jb
insl
ja
and
nop
mov
and
mov
or
or
xchg
repnz
aaa
mov
sub
sub
daa
iret
enter
fcomps
lods
nop
xor
cmp
pushf
mov
movsb
pop
test
cmpb
hlt
cmpsl
test
js
sub
sub
scas
ljmp
ret
js
lock
mov
movsb
push
test
xorl
pusha
rclb
scas
daa
mov
mov
in
mov
pop
lods
lahf
xchg
ja
clc
test
pusha
movsb
hlt
pop
popf
sarb
xlat
dec
les
out
cmp
inc
pusha
xchg
outsl
pop
push
rclb
and
push
mov
add
xchg
lahf
fs
cmpsb
shll
sbb
xor
fs
pop
add
sbb
dec
and
test
xchg
les
out
push
pushf
push
dec
scas
les
dec
jl
inc
lahf
ds
rorb
push
push
inc
fisttps
push
push
push
imul
mov
sbb
add
repnz
mov
adc
push
jae
add
mov
in
into
adc
pop
add
dec
pop
pop
repnz
dec
or
and
aaa
or
in
stos
cmp
lret
sub
outsb
add
sub
lahf
movb
inc
add
test
cmpsl
icebp
pop
jp
mov
notl
pop
imul
lret
ds
aam
mov
jecxz
cmp
xor
inc
dec
pop
adc
adc
lret
xor
ljmp
sbb
scas
inc
cmp
jp
lock
mov
ja
int
add
sahf
adc
or
outsl
mov
or
test
je
imul
xor
adc
and
jo
and
scas
xchg
fcom
pop
stos
enter
or
cmp
add
jb
loope
or
and
mov
sbb
scas
and
cmp
dec
xor
imul
xchg
jo
sub
pushf
rorb
push
xlat
nop
imul
in
outsb
and
push
sbbb
push
icebp
or
fidivl
pusha
mov
inc
outsl
jb
popa
je
rorb
or
sub
inc
and
je
icebp
mov
or
out
icebp
lds
fildll
xchg
push
adc
mov
fmul
mov
repnz
or
inc
push
cmpsb
mov
add
mov
dec
cmp
shrb
js
je
mov
mov
inc
xchg
mov
int3
pop
or
insl
mull
sbb
sub
add
lret
xor
sub
mov
int
adcb
lods
push
divl
dec
cmp
jl
jl
pushf
mov
addb
cmc
fdivrs
mov
add
mov
pop
mov
push
push
je
dec
push
loopne
insb
push
push
and
mov
insb
pop
in
jle
push
jo
jecxz
cmp
jbe
dec
add
lock
orb
hlt
call
add
adc
movsb
insl
insl
push
fsubl
pushf
insb
insb
outsl
addr16
add
mov
adc
int
int3
push
xor
jae
xchg
or
insb
xor
stos
rolb
ds
adc
sub
int
addr16
int3
dec
pop
bnd
push
int
shlb
inc
push
push
add
pop
add
ja
cmc
xchg
lea
pop
add
or
push
push
or
xorb
jg
add
mov
sbb
add
pop
xchg
xchg
push
xor
es
push
nop
pusha
aad
rolb
jmp
test
subl
mov
aam
test
clc
add
sub
and
outsl
cmpsb
adc
adc
xor
loopne
nop
gs
nop
xchg
mov
ret
sti
dec
inc
rol
test
add
dec
push
add
push
sub
dec
sbb
sbbl
xor
or
ja
lret
cmp
dec
sbb
sbb
sbb
xor
dec
aaa
or
insb
inc
sti
xchg
xchg
out
jns
mov
or
pop
push
inc
add
rclb
xor
adc
cmp
add
in
or
sub
mov
aad
movsl
clc
mov
sar
and
inc
add
xor
cs
in
dec
sbb
xor
add
or
xchg
int3
xchg
inc
xchg
dec
or
push
add
add
dec
mov
add
dec
add
ss
or
ja
mov
inc
lret
je
cltd
mov
xchg
pop
cmpsb
out
jl
add
out
cmpsb
loopne
dec
movl
xchg
aaa
or
movsl
mov
cmpsl
cmp
dec
arpl
loopne
inc
fs
inc
mov
mov
jae
cmpsl
pop
jne
cmp
mov
imul
add
sahf
nop
flds
movsb
sbb
dec
mov
mov
pusha
and
xchg
mov
jnp
push
mov
mov
fs
pop
adc
cmpl
xor
mov
jecxz
add
xchg
push
pop
mov
pop
lgdtl
jbe
push
inc
add
push
in
adc
cmp
leave
xor
les
inc
or
push
add
pop
das
add
imul
xchg
out
in
hlt
dec
lock
rcrb
mov
inc
das
in
loopne
sub
push
mov
sbb
xor
test
sub
pusha
mov
or
and
aaa
leave
adc
cmp
inc
xchg
sbb
pop
insb
pusha
add
pop
call
push
push
inc
sbb
aas
and
mov
and
sbb
push
sub
push
and
cmp
inc
hlt
sbb
es
dec
inc
daa
jle
test
inc
scas
dec
subl
xor
sbb
and
or
fs
dec
cld
outsb
jae
mov
and
aam
lds
movb
dec
jmp
fcoml
inc
jns
cmpsb
xor
clc
es
sbb
ds
mov
pop
rclb
jo
push
pop
inc
sub
or
and
or
nop
inc
iret
inc
push
movsb
int3
xchg
xor
xchg
sbb
inc
sub
cwtl
pushf
jle
add
pushf
jb
xchg
lret
push
mov
xchg
mov
out
in
andb
in
int3
jo
and
lods
hlt
sbb
xor
jne
pop
inc
scas
jne
aaa
filds
stos
sub
inc
push
dec
loop
sbb
pop
ret
insl
xor
insb
setae
sub
mov
xor
rcl
push
push
mov
push
dec
push
rcrb
jg
add
sbb
pop
cmove
push
dec
testl
negl
inc
mov
adc
adc
stos
dec
outsb
jne
xchg
adc
or
mov
inc
or
imul
xor
insl
bound
pop
or
jb
divl
or
popa
jb
add
sbb
adc
cmovl
scas
out
mov
sbb
push
jmp
push
bound
insb
fs
jbe
and
adc
inc
and
scas
adc
popa
mov
pop
inc
adc
dec
cwtl
sti
jle
add
push
or
mov
jge
jne
nop
pushf
xlat
sbb
js
arpl
add
out
pop
adc
loope
pop
icebp
sub
ja
adc
adc
push
xchg
cmp
int
test
jno
dec
pop
lret
mov
testb
loop
cmpsb
fiadds
adc
inc
jne
outsl
inc
insb
popa
addr16
cmpb
insl
popa
das
or
or
sub
push
popa
insb
adc
mov
push
or
in
int3
or
push
add
dec
push
or
outsl
and
ds
je
inc
sbb
inc
xor
out
or
sub
push
enter
ds
sub
clc
shlb
inc
add
cwtl
push
jns
negl
push
jl
mov
inc
push
fmull
dec
push
push
clc
xor
negl
cmp
pop
cmp
add
inc
sub
out
pop
push
daa
mov
sub
les
in
inc
das
sbb
jnp
movsl
rcrl
shlb
test
fsubrs
push
push
loopne
mov
bound
add
iret
rorl
insl
xor
push
pop
addr16
or
lds
fimuls
in
ljmpw
lods
dec
adcl
xor
push
pop
imul
sbb
add
scas
jmp
mov
insb
cld
mov
inc
lea
in
je
inc
xchg
lock
fwait
ret
lea
jnp
mov
push
and
test
mov
jae
cmp
add
xchg
adc
add
pop
dec
inc
mov
push
or
filds
lods
jge
cmp
dec
add
ret
jge
dec
xor
inc
orl
inc
inc
jp
xor
mov
and
or
pop
cli
insl
dec
xchg
and
adc
or
clc
cmpsl
xor
xchg
ss
add
or
mov
xor
cwtl
xor
or
xchg
iret
sbb
mov
or
add
stc
js
mov
gs
lea
inc
arpl
pop
xchg
cmc
setp
ljmp
xor
popa
aam
lock
fdivrs
cwtl
nop
iret
roll
cmp
adc
jp
outsb
cmp
popa
fs
int3
sbb
shl
sbb
sbb
bound
adc
lea
inc
sub
aaa
push
lock
out
adc
jae
lock
loopne
mov
or
stos
inc
cmp
push
fs
out
out
or
icebp
cwtl
dec
cwtl
add
test
push
add
in
push
fistl
adc
cwtl
das
pop
add
fwait
pop
pop
sbb
cwtl
push
rcrb
push
adc
iret
stos
les
jne
adc
pop
push
fwait
push
enter
je
jg
push
and
outsb
sub
ja
outsb
jne
sahf
iret
cs
cmpsb
push
loopne
int3
test
pop
fdivrl
sbb
cmc
mov
outsl
pop
sbb
add
mov
mov
pop
add
nop
arpl
sbb
pop
mov
adc
sbb
lret
popa
sahf
push
imul
and
aad
or
or
ljmp
imull
push
lea
bnd
inc
dec
je
add
inc
stos
add
std
cwtl
add
xor
or
sub
sbb
jb
ss
test
imul
xor
loopne
adc
mov
cmp
xor
or
xlat
inc
or
cmp
jecxz
or
fistl
push
or
insb
lds
add
and
add
jo
pushf
mov
adc
xor
popa
or
imul
popa
push
inc
inc
adc
mov
shr
push
jle
push
push
cs
xor
adc
in
std
mov
xor
je
imul
fistl
pop
sbb
outsb
imul
sub
insl
mov
sbb
jo
inc
outsl
mov
fstps
adc
sub
sbb
or
into
int
in
push
push
add
ficoms
cmc
and
lock
dec
inc
out
js
and
push
addl
sahf
loopne
xor
mov
outsb
icebp
adc
pusha
jle
xor
adc
mov
jb
add
test
popa
push
cmp
bound
pop
cmp
inc
roll
inc
negl
bound
loope
or
push
push
imul
sti
aad
pop
and
or
cmp
push
inc
push
imul
test
jo
test
push
and
out
mov
sbb
xchg
fsubrl
xchg
insl
inc
aam
negb
nop
jl
scas
sub
push
test
inc
and
jge
add
and
push
sbb
cmp
cwtl
pop
inc
inc
aas
inc
adc
mov
dec
add
or
or
movsl
or
scas
inc
push
dec
adc
mov
pop
daa
or
add
and
cmp
add
xlat
roll
mov
mov
pop
outsb
add
pop
push
and
and
inc
jmp
ds
test
mov
lock
mov
sbb
out
cmp
add
jb
jp
add
mov
pop
and
mov
and
loopne
sbb
loope
movsl
sub
outsb
out
aam
cmp
dec
lahf
jl
mov
and
fildll
movl
push
or
je
icebp
push
push
fidivs
mov
cmp
in
add
sbb
sub
or
xlat
insl
dec
sbb
cli
push
sbb
add
test
and
lea
jo
xchg
mov
fs
add
jg
push
fldenv
and
jmp
sub
and
push
cld
mov
push
inc
inc
lods
inc
xchg
add
cmp
mov
loopne
std
ja
clc
inc
mov
sbbl
push
iret
push
and
xor
fmuls
or
inc
nop
xchg
add
movsb
subb
lods
adc
or
ja
and
dec
cmp
scas
inc
ljmp
out
es
imul
rclb
pop
mov
loope
xchg
xorb
popa
les
fcoml
xchg
pop
sbb
push
inc
loope
insl
loope
inc
adc
pop
dec
inc
lock
aaa
mov
pop
test
mov
or
jecxz
cmc
es
adc
rorb
xor
xchg
mov
arpl
sub
sbb
add
pop
rcll
dec
cs
out
sahf
fdiv
popa
mov
inc
jmp
movsb
inc
jb
and
mov
cmp
xchg
jmp
leave
jns
mov
fcoms
dec
lcall
xchg
push
xor
adc
imul
loope
xorb
bnd
dec
or
and
mov
ret
pop
outsl
sub
aam
xorl
mov
mov
add
add
pusha
loopnew
movsb
adc
xchg
sub
jecxz
sub
clc
adc
push
out
outsl
scas
inc
lock
inc
pushl
sbb
push
mov
lock
jmp
add
incl
and
mov
hlt
jne
arpl
cmp
jg
mov
daa
mov
fwait
inc
ret
cmp
jno
inc
jge
jl
xor
dec
mov
and
add
push
dec
lret
pop
mov
or
push
sub
jmp
cmp
add
das
add
daa
lods
aaa
sub
jle
xlat
sub
jmp
cmp
adc
fnstsw
or
cmp
test
xor
jmp
imul
aaa
ss
flds
lcall
cmp
shrb
fists
in
push
mov
adc
adc
dec
or
sarb
in
dec
adc
mov
aam
pop
movsb
mov
in
outsb
add
adc
ljmp
adcb
sbb
jo
lods
jbe
cwtl
push
daa
add
sbb
push
and
pop
add
repz
add
fstpl
aad
imul
inc
mov
and
push
jb
mov
bnd
je
cmp
nop
iret
loopne
jl
orb
repnz
lcall
sbb
das
cmp
inc
push
cmp
ret
adc
hlt
xorb
je
adc
inc
push
mov
pushf
addb
inc
lds
sbb
movsl
xchg
sahf
cmpsl
cmpb
add
rclb
orb
enter
adc
inc
inc
push
js
sbb
jb
sbb
repnz
imul
dec
pop
jg
test
and
aas
mov
sub
inc
sti
cmp
mov
cmp
sub
cmp
add
int
orb
push
cmp
inc
aas
adc
inc
or
sub
jno
sub
or
lcall
sbb
lcall
add
cmp
push
mov
dec
xor
aas
mov
bound
testb
lea
or
mov
sbb
sbb
clc
nop
inc
je
pop
int3
pusha
sbb
add
jecxz
add
push
nop
xchg
xor
add
cmpsb
pusha
test
add
mov
sbb
pusha
jmp
fdivrs
add
fisttps
cmpl
mov
out
inc
mov
lea
jb
sub
je
mov
dec
data16
movups
sub
pop
dec
pop
pop
inc
dec
xor
and
icebp
pop
xchg
lahf
mov
ret
test
adc
xor
jg
adc
cmc
push
xor
add
jle
adc
and
jmp
ret
mov
mov
cli
push
or
test
pusha
enter
rolb
or
jge
xor
mov
cmpsb
jbe
pop
cltd
es
in
xor
cmp
jb
into
dec
or
mov
into
lea
sub
les
mov
xor
xor
or
mov
or
push
cmp
test
ret
mov
inc
pop
je
xchg
orl
add
push
jecxz
mov
add
xor
leave
cmpsb
mov
cmp
jne
or
xlat
loope
out
xlat
cmpsl
xor
xor
mov
cld
out
stos
push
or
dec
inc
or
iret
rorb
jle
xchg
add
inc
or
jne
rcll
or
outsw
in
sbb
je
xor
xchg
lock
stc
inc
in
int3
sahf
dec
xor
mov
pop
or
adc
push
lcall
loope
xchg
iret
call
sbb
pop
or
test
adc
idivb
lods
sub
fadds
lcall
push
or
push
in
xorl
sub
sbb
mov
out
mov
or
xor
inc
lods
nop
mov
adc
inc
sub
sub
dec
sti
xchg
or
push
hlt
pop
jo
dec
inc
inc
xor
pop
stc
pop
and
jnp
inc
add
adc
pop
or
loop
and
icebp
sti
mov
ljmp
sbb
dec
xchg
adc
mov
sub
jo
mov
sbb
mov
ret
fs
pop
fnstenv
mov
daa
and
fidivrs
inc
lret
cmp
je
gs
mov
push
and
xchg
mov
outsl
jge
adc
call
idivl
clc
sub
mov
mov
adc
dec
jne
testb
pop
jnp
call
fisttpll
adc
sahf
sub
icebp
movb
lods
and
xchg
push
jb
and
and
gs
push
or
or
mov
decb
inc
pop
test
jne
xor
test
mov
and
push
fwait
sub
cmp
insb
gs
iret
imul
sti
or
mov
dec
and
dec
loopne
jecxz
mov
and
push
es
jl
cmp
lock
mov
cmp
jae
mov
or
mov
xor
add
jbe
sbb
mov
sbbb
popa
cld
push
jae
pop
aaa
cwtl
or
aas
or
mov
gs
fstl
loopne
or
test
psadbw
push
pop
sarl
in
xor
bound
test
add
scas
cmp
sub
andl
ffree
cmp
fnstsw
clc
jo
and
adcb
call
mov
stos
incb
jmp
jbe
jp
in
or
and
add
pop
xchg
xchg
rclb
test
je
push
pop
or
sbb
or
es
inc
push
mov
lds
out
sbb
mov
dec
fidivs
subb
push
push
or
addl
lods
push
jo
dec
xchg
test
jb
insl
or
sub
daa
popl
pushf
cmpsl
cmpb
test
and
mov
loopne
add
or
or
xor
push
dec
idivl
sarb
inc
mov
pop
cmp
out
and
push
scas
sarl
andl
mov
add
dec
stc
je
mov
mov
mov
cltd
pusha
adc
or
adc
sub
lods
mov
or
mov
or
and
enter
pop
lock
dec
mov
sbbb
xchg
add
add
into
push
not
hlt
pusha
sbb
nop
or
xchg
mov
add
lods
nop
pop
pop
pop
xchg
iret
repz
icebp
cltd
inc
daa
inc
and
addr16
pop
or
sbb
push
popf
push
orl
push
adc
je
in
les
cmp
or
lds
call
adc
scas
sub
mov
or
xchg
ret
xchg
pop
fcoml
or
ja
xor
adc
outsl
loopne
push
add
icebp
add
adcb
je
outsl
cwtl
das
mov
or
pop
add
jge
dec
or
lock
inc
inc
sarb
mov
mov
mov
adc
or
inc
je
inc
outsb
ljmp
sbb
insb
adc
sbb
push
dec
dec
pop
bound
push
mov
jge
imul
adc
inc
sub
xchg
test
sub
les
or
inc
cmpsb
or
mov
inc
pop
sbbb
stc
in
fsts
mov
mov
lea
ficoml
mov
enter
xor
mov
xor
ret
inc
or
add
mov
aam
push
xor
jnp
sub
add
add
push
add
dec
add
adc
dec
or
sub
dec
ret
add
push
repnz
cmp
jne
jge
test
aam
jae
aam
jno
push
jle
mov
push
jo
add
ror
mov
xor
jle
add
add
pop
mov
call
addb
dec
in
sub
cmpb
sub
lock
and
mov
movsb
leave
test
lock
ret
pop
add
js
adc
adc
ss
mov
fcoms
jge
jmp
and
sub
fmull
shlb
into
xchg
or
push
mov
bts
add
movb
jmp
rorb
adc
inc
cli
enter
faddl
mov
pop
jb
mov
js
push
test
push
adc
cmp
cmp
jle
aam
idiv
push
imul
inc
push
mov
add
mov
or
rcll
jmp
lret
ret
jne
push
sbb
jnp
add
cmp
in
cwtl
inc
jnp
in
push
push
in
dec
aam
xor
dec
fwait
xor
push
inc
cmp
sbb
pop
dec
call
bound
jle
cmp
add
imul
pop
mov
sbb
dec
sbb
sub
movsl
sub
inc
aad
or
or
mov
cmp
adc
sub
gs
mov
or
adc
sarb
rclb
aam
mov
sbb
jo
ss
imul
aaa
add
lcall
shrb
imul
shll
dec
dec
lea
arpl
or
or
push
pop
and
push
lds
pop
jne
sub
jmp
pop
mov
mov
sbb
or
and
push
add
out
outsl
dec
lds
lret
cmp
dec
mov
and
loopne
mov
sub
pop
mov
dec
cmpsb
or
push
fwait
cmpsl
nop
inc
in
sbb
sbb
adc
pusha
push
fwait
ja
outsl
inc
enter
je
orl
pusha
aas
mov
lea
or
push
jg
push
std
enter
icebp
insb
add
scas
push
jge
arpl
mov
sub
adc
in
ret
xlat
jbe
xadd
dec
mov
jno
out
xchg
movsb
mov
pop
insl
mov
xchg
pop
cmp
and
add
push
fcmovbe
or
iret
fcmovb
mov
sbb
push
inc
xor
sbb
sub
add
and
mov
xchg
fadds
mov
and
mov
faddl
pop
inc
and
nop
jg
frstor
lods
rolb
sarb
adc
psubq
bound
mov
sub
sbb
inc
ret
inc
pop
popa
and
dec
aad
xor
mov
adc
cld
and
sbb
jns
test
aas
adc
adc
inc
or
push
sbb
je
out
or
adc
loop
mov
push
lock
sti
mov
push
jecxz
lock
pop
loopne
mov
gs
in
fwait
adc
or
loopne
mov
mov
xor
or
mov
inc
cltd
pop
cmp
sti
mov
or
pop
les
aas
mov
push
adc
add
jo
fcoml
xchg
adc
fadds
mov
dec
jo
fwait
ss
rcr
ss
add
sub
loopne
clc
sbb
add
loope
sub
sti
xor
in
in
jmp
push
or
dec
and
dec
sbb
adc
shlb
sub
or
mov
push
fdivl
mov
imul
mov
rorb
mov
loopne
and
push
mov
loope
jo
mov
adc
or
cmp
int3
jo
pop
imul
ret
and
pop
push
push
cmp
jle
insb
adc
adc
xchg
test
cmp
mov
pop
cmp
dec
pop
lods
insl
ljmp
jg
cmpsl
sbb
outsl
mov
fmuls
xor
lahf
rorl
sub
adc
or
sub
jno
sub
cmp
xor
pop
push
add
inc
push
xor
xchg
add
loopne
rcl
inc
aad
cmpsl
adc
dec
dec
dec
or
pop
xlat
and
cmp
push
in
ja
mov
xchg
dec
cmc
lahf
loopne
ret
cmp
adcb
das
sbb
mov
jge
and
enter
iret
cmp
in
cmpsb
ss
pop
into
in
xchg
inc
mov
lcall
dec
outsl
mov
or
pop
jnp
push
or
xor
fistpl
push
inc
xor
scas
lret
leave
loopne
in
dec
add
in
add
pop
add
or
pop
mov
cmp
cmp
and
xchg
push
mov
loopne
fsubl
sbb
call
lock
adc
cmc
test
test
pusha
fcoms
gs
push
bound
lock
insb
and
pop
mov
and
cmp
inc
bnd
xchg
out
ret
or
jl
xor
mov
and
cmpsl
push
das
addr16
push
loope
and
or
adc
aam
pop
test
adc
les
popa
mov
hlt
jecxz
hlt
imul
pop
or
and
cmpsl
lea
leave
sbb
adc
pop
jae
fildl
je
in
addr16
loopne
or
clc
out
ds
popa
mov
sahf
sbb
pop
jne
xchg
or
arpl
stc
and
adc
inc
adc
inc
and
adc
adcl
adc
fstpt
adc
and
sbb
mov
lods
call
fs
sub
or
push
decl
cmp
add
inc
mov
lods
push
shrl
add
sub
imul
push
xchg
mov
mov
inc
inc
cs
pop
sbb
xchg
lret
dec
clc
inc
and
inc
movsb
dec
dec
mov
mov
xchg
mov
daa
add
and
jns
jge
push
pop
int
lock
aad
div
jg
push
and
pop
add
adc
dec
xchg
nop
cmpsb
test
push
inc
xor
push
add
and
int
adc
repnz
inc
or
mov
int
add
jne
mov
cmpsb
sbb
stos
mov
or
je
stos
mov
mov
cmpb
mov
and
push
mov
ljmp
sbb
jmp
add
insl
cmpsb
jne
add
push
or
xor
xchg
lock
fmuls
jle
jo
or
pop
fsubrl
add
and
adc
mov
pop
or
cmpsb
sbb
pushf
cs
inc
cld
add
jg
subb
test
lret
or
push
cmp
and
sub
jmp
mov
sub
aas
adc
repz
cwtl
inc
cmp
lahf
push
out
out
push
sub
push
sarb
js
cwtl
push
jmp
push
bswap
mov
adc
or
or
test
hlt
iret
mov
push
sub
add
sbb
xchg
in
xor
jecxz
jl
or
in
in
and
pop
jp
sbb
push
cltd
pop
lret
or
add
fwait
adc
pop
subb
add
add
dec
adc
movsb
or
sarb
scas
push
and
add
hlt
jle
xor
xor
sbb
dec
cmpsb
fwait
sbb
movsb
or
push
mov
add
and
inc
or
push
lock
orl
pop
or
js
xchg
pop
hlt
in
adc
xchg
loopne
arpl
inc
adc
nopl
cmp
out
mov
sbb
in
inc
in
nop
jl
push
or
movsl
fsubrs
test
mov
loopne
imul
xor
in
insb
inc
xorb
mov
fwait
jnp
adc
movq
mov
jmp
sbbl
dec
fcom
fcomps
fs
and
xlat
nop
icebp
lds
jo
jge
scas
inc
cmp
lea
js
mov
lret
andl
adc
iret
loop
jl
loope
push
inc
cmp
mov
add
dec
out
es
int3
outsl
subb
add
jecxz
rclb
enter
xchg
and
clc
lock
xchg
andl
add
mov
lods
push
shlb
adc
sbb
mov
adc
jl
dec
mov
rcrb
loopne
dec
cmp
adc
orb
mov
cltd
aam
sbb
rorb
subb
push
rorl
lret
add
push
push
pop
jmp
jb
das
pop
lock
bound
jne
dec
lret
imul
add
push
rcrb
or
adc
cmp
imul
sbb
pop
gs
test
jnp
sbb
xor
negl
addl
pop
or
jmp
lock
and
pop
sbb
ret
fsubs
shr
pusha
aas
push
je
mov
xlat
or
xor
les
les
out
mov
mov
mov
adc
sub
les
mov
push
loope
sub
pop
mov
push
sbb
aas
or
and
fiaddl
push
arpl
xchg
sbb
mov
and
mull
inc
outsb
inc
roll
lahf
les
inc
arpl
divb
adc
loope
dec
dec
xchg
cmpsb
xor
push
or
sub
add
fs
pusha
cmp
das
mov
ss
cmp
push
mov
xchg
cmpl
add
adc
imul
mov
or
testb
xchg
sbb
mov
insb
pushf
add
out
or
mov
test
add
cmpsl
xor
lcall
aaa
adc
adc
sbb
and
jmp
add
insl
inc
pushf
outsl
in
fisttpl
inc
pop
out
cmp
lret
ds
outsb
adc
out
and
ja
mov
push
or
adc
ja
inc
jmp
adc
inc
cwtl
push
jno
xor
or
jle
mov
push
pop
dec
adc
pop
popa
or
cmp
mov
outsb
mov
xchg
mov
cmp
inc
cmp
add
push
inc
cmp
pop
push
jo
dec
je
outsb
vpsllw
shll
jno
ret
dec
mov
lea
cmp
add
cmp
or
mov
jo
roll
insb
mov
outsl
jb
add
add
ljmp
cltd
sub
sub
inc
lret
popf
movsl
pop
in
out
ds
cld
call
dec
js
push
push
xchg
adc
pusha
mov
inc
lret
pusha
fisttps
push
add
cmpsl
pop
movb
mov
sbb
addr16
ss
and
sub
or
call
inc
add
sub
xor
sub
mov
inc
cmp
and
mov
adc
cmp
push
cmpsb
test
inc
test
mov
mov
dec
lahf
mov
in
hlt
fs
or
or
sub
movsb
dec
sub
addr16
jnp
push
jo
sbb
sbb
jo
andb
or
cmp
in
icebp
inc
xrelease
aaa
pop
xor
mov
hlt
inc
mov
cmp
xchg
inc
and
mov
lret
jne
xor
or
repnz
jo
sarb
sub
sbb
lcall
mov
andb
jl
std
lret
call
and
in
xchg
popf
push
arpl
push
push
inc
shl
jo
sub
fadds
rcrl
call
into
adc
sbb
fnstenv
or
cmp
or
xor
inc
fldenv
loope
movsb
inc
inc
add
sub
add
addb
lock
xchg
repz
adc
and
mov
sub
jnp
sbb
xor
dec
imul
adc
push
mov
inc
daa
shl
add
lea
mov
je
pop
sub
add
sub
sub
filds
cli
call
jecxz
mov
dec
mov
dec
or
call
push
adc
mov
idiv
or
mov
or
and
add
jecxz
ret
pop
xor
ja
imull
enter
dec
push
or
or
jne
aad
insb
lret
adc
cltd
ljmp
insb
add
cwtl
add
insb
ret
out
in
pop
and
mov
xchg
cmp
loop
xchg
jo
jecxz
cmp
pusha
std
nop
sbb
cmp
je
mov
add
ret
mov
lahf
arpl
je
mov
dec
inc
pop
lods
lock
xchg
cmpsb
stos
mov
jnp
lcall
xor
lock
and
sub
jne
loop
add
sub
fstpt
insb
or
push
lret
negb
push
jb
inc
push
mov
loopne
popf
adc
sbb
or
adc
popa
jle
add
fadds
inc
lret
xor
aad
enter
cs
xchg
or
xor
addb
adc
inc
int3
sahf
and
cwtl
and
or
lret
push
in
adc
inc
pop
and
pop
aas
and
leave
inc
jb
cmp
xchg
pop
and
cmp
or
inc
jb
or
jle
je
mov
mov
mov
mov
iret
andb
adc
not
mov
js
cmp
in
call
mov
mov
icebp
xor
sbb
das
mov
add
lret
outsl
or
lds
jg
movsl
or
aas
test
push
je
push
cmp
pop
pop
and
push
fs
xchg
scas
push
inc
xor
das
adc
js
push
je
leave
xlat
push
in
sti
mov
mov
adc
pop
js
pop
nop
pop
and
icebp
fidivrl
push
rolb
pop
adc
push
fs
dec
cmc
mov
push
push
lds
push
mov
adc
jmp
daa
les
xchg
ret
cli
inc
sbb
addl
bsr
out
add
adc
sbb
jo
aad
inc
inc
sub
sbb
xor
xor
jmp
in
shlb
mov
fildll
mov
in
add
leave
xlat
xor
push
fldt
pop
add
and
mov
and
rorl
js
jns,pt
cmp
and
inc
sub
mov
dec
jne
mov
push
into
stos
roll
mov
push
dec
push
fcomps
iret
sub
clc
insb
jnp
xchg
ss
push
call
add
inc
outsb
in
push
dec
xlat
dec
sbb
call
shrb
adc
aaa
pushl
mov
inc
add
mov
push
mov
push
outsb
dec
dec
loop
inc
jp
push
shr
add
add
sub
es
inc
sarb
cmpsb
pop
mov
in
fwait
imul
push
jb
add
mov
adc
test
pushf
sub
lcall
push
call
nop
mov
pop
mov
jmp
xor
adc
in
aam
mov
adc
stc
icebp
cs
jl
adc
enter
sarb
or
and
int3
in
jmp
pusha
dec
jo
int3
popa
pop
or
repz
sbb
add
cmc
adc
xchg
rcrl
sar
fisttpl
push
add
shrb
dec
xor
or
call
ja
pop
push
mov
adc
add
jl
sti
xor
cs
push
out
sarb
pop
aaa
dec
xor
push
decl
mov
popa
sbb
xchg
dec
pop
xor
mov
xchg
ds
fcoml
scas
pop
push
in
roll
mov
mov
in
add
cmp
xor
dec
icebp
xor
std
dec
std
fmuls
add
pusha
xor
inc
test
sti
loopne
dec
es
push
loopne
add
push
inc
sbb
mov
dec
imull
rcll
dec
mov
cltd
cmp
dec
xorb
pop
mov
cmpsl
sbb
mov
imul
loop
cmp
das
dec
jmp
sahf
rolb
xchg
loopne
or
outsb
jp
pop
pusha
add
jo
or
dec
pop
ja
aaa
pop
aam
xor
add
jmp
inc
push
pop
fdivrs
idiv
adc
pop
push
add
and
fnstenv
js
xor
aad
dec
sbb
add
sub
negb
fcomi
add
ret
xor
clc
dec
clc
fdivs
mov
cmovnp
sub
and
inc
adc
rcl
mov
push
inc
push
mov
loope
mov
sub
jns
jne
inc
xor
cmp
ja
lahf
adc
aas
and
daa
insl
and
out
aad
and
xchg
adc
outsb
lahf
fsubr
mov
cwtl
or
lods
fildl
sub
cmp
xchg
aaa
lcall
and
mov
or
rolb
and
inc
adc
xchg
xor
pop
xor
ss
xchg
lret
sub
addb
movsl
mov
pushf
iret
cmp
inc
lcall
push
es
jmp
mov
push
pop
xor
cmpb
test
or
daa
pop
fadds
pop
jne
loope
mov
fsubl
mov
dec
aas
xchg
and
jne
insl
or
ljmp
cmp
cmp
popa
inc
jge
aaa
cmp
jne
les
std
and
mov
pop
sbb
jl
cmpsb
adc
pop
mov
mov
cmp
inc
aam
aaa
and
pop
jb
sti
add
jo
xor
push
cmp
mov
test
jo
jne
xor
inc
cmp
or
sub
sub
aaa
js
sub
adc
xchg
adc
xlat
sbbl
dec
adc
xchg
jo,pn
push
shrb
addr16
mov
stc
out
sti
ja
mov
pop
fs
xchg
mov
or
iret
ret
mov
add
dec
sub
sub
mov
add
pop
out
mov
xor
pop
hlt
pushf
xchg
mov
sub
xchg
lock
or
mov
dec
adc
mov
lods
les
ds
sub
shrl
rcrb
ljmp
mov
jge
or
and
mov
add
add
enter
call
adc
clc
jmp
xchg
aad
dec
and
test
js
mov
adc
mov
mov
cmpsl
mov
rol
pop
arpl
add
mov
cltd
sbb
cmp
jno
ljmp
cmc
inc
loop
sbb
xor
adc
shrb
adc
jp
rclb
pop
and
xor
ret
and
inc
inc
testl
lods
adc
and
or
mov
sbb
cmc
pusha
add
dec
in
adc
inc
daa
push
sub
or
sub
or
lock
ret
and
or
inc
or
dec
cmp
outsl
fcoms
lods
jae
cmp
jns
and
or
shrl
and
hlt
jae
cwtl
cld
in
js
hlt
inc
ret
add
insb
shlb
and
pop
dec
fmuls
jns
cmp
cld
ss
push
cmp
fiaddl
lods
shl
mov
mov
clc
push
inc
aam
push
js
roll
or
add
loopne
testb
add
scas
mov
pop
addr16
out
cmp
or
and
mov
ror
icebp
aad
fcompl
jecxz
xor
jb
mov
dec
orl
es
add
add
pop
repz
sub
dec
add
test
sbb
sahf
xlat
mov
vmwrite
jae
inc
and
inc
out
cmp
in
add
and
cs
xchg
and
cmp
jb
mov
adc
push
pop
xor
inc
push
push
mov
ja
and
scas
cmp
clc
lcall
sbb
in
cmp
lock
in
xchg
add
cmp
xorb
adc
movsb
dec
and
and
ja
add
or
je
xorb
xorl
inc
insb
xchg
xchg
push
mov
push
fwait
mov
mov
std
fstl
lea
push
pop
test
cmpsl
insl
scas
mov
add
inc
xchg
mov
jbe
sub
cld
cmp
adc
out
cli
arpl
dec
test
cmpxchg
xlat
fwait
push
aam
adc
imul
add
inc
je
adc
in
rcrb
push
lea
xor
sbb
aam
divb
call
mov
adc
push
jo
mov
sbb
mov
mov
mov
test
ret
lea
or
sbb
in
jp
fstpt
imul
adc
in
push
data16
hlt
decl
push
ret
pop
in
stos
add
sarb
jl
mov
push
cli
sub
packuswb
imul
push
add
mov
mov
dec
jno
inc
and
das
adc
out
push
or
fcomps
nop
push
mov
fnstcw
push
or
cmp
cmp
lea
divl
xor
push
arpl
or
push
ret
cmc
and
in
lods
movl
xor
add
rolb
addr16
shrb
ds
adc
jge
sbb
mov
mov
jecxz
cltd
test
mov
es
cli
cli
xchg
xor
cmp
jne
adc
int3
cmpsl
push
inc
inc
xor
push
push
push
sub
lcall
in
dec
loop
scas
jo
mov
orl
lea
cmovae
daa
pop
push
fwait
dec
pop
out
mov
lea
xchg
jp
cli
imul
outsb
xchg
xor
xchg
push
stos
hlt
icebp
dec
test
std
loopne
lock
push
ret
xchg
fadds
mov
fisubs
add
inc
inc
sahf
fstpl
inc
nop
xchg
fs
sbb
jle
aam
inc
cmp
jge
jb
add
adc
jae
mov
sbb
pusha
dec
and
lods
add
mov
cmp
in
xor
loop
inc
push
xor
jb
inc
xchg
jg
mov
sbb
ret
add
add
pop
cmp
mov
out
or
jecxz
push
ffreep
iret
je
pop
and
or
and
mov
mov
test
or
fsubl
adc
mov
outsb
les
fmuls
xor
rcl
int
iret
aas
movsl
sub
jecxz
jae
xchg
outsb
lods
or
fisubs
push
and
dec
or
incl
in
fcoml
xor
sbb
ret
push
in
mov
inc
addb
xor
lock
jp
testb
push
inc
jne
mov
nop
lahf
inc
inc
and
inc
ljmp
aas
sub
mov
cmp
push
push
push
jo
outsl
adc
sub
or
std
mov
ret
sbb
mov
adc
cld
mov
xchg
pop
lock
xor
adc
xor
xchg
adc
add
out
clc
mov
cld
inc
nop
cmp
inc
mov
xchg
daa
add
sbb
out
add
push
fs
xor
div
push
sub
test
fsubr
sub
and
xchg
and
jge
mov
outsl
xor
lock
add
sbb
popf
sbb
push
lret
je
or
mov
test
xchg
test
sti
movsb
sbb
inc
sbb
cmpsl
test
xor
inc
xor
add
in
in
or
iret
addb
or
arpl
pusha
xor
and
pop
mov
lock
jmp
sbb
xchg
cvtdq2ps
dec
mov
iret
jmp
sbb
imul
adc
pop
addb
xlat
sti
xchg
inc
adc
int3
decl
jmp
mov
jb
mov
lret
or
push
in
sub
xor
cmp
adc
fildll
inc
xchg
aaa
in
insb
test
xchg
ja
mov
int3
and
sub
mov
mov
jge
inc
jg
mov
or
mov
xor
inc
add
and
ds
dec
or
push
and
lahf
xor
pop
into
adc
sub
xchg
test
adc
cmp
loope
decb
movb
insb
aam
pop
push
mov
adc
pop
jl
aaa
sbb
mov
jp
jge
aam
iret
pop
js
fistl
add
add
xchg
mov
xor
adc
add
aaa
fcomps
push
ljmp
fs
pop
xchg
inc
cmp
ret
jg
je
out
dec
mov
sbb
push
jb
fcoms
mov
inc
cli
les
add
cmpl
pop
loopne
sbb
std
ljmp
arpl
in
inc
push
inc
imul
add
and
sbb
ja
or
sbbb
and
out
cmp
adc
dec
dec
cmp
jne
fidivrl
push
xor
push
imul
dec
or
js
push
test
or
shlb
inc
ret
ret
je
iret
pop
orl
sbb
outsl
enter
lods
xchg
es
fcmovnbe
aaa
sar
call
outsb
dec
or
add
dec
xor
daa
sub
dec
jnp
sub
clc
adc
ja
jl
push
cs
das
sub
mov
je
jo
data16
or
lods
cmp
sbb
es
jnp
inc
sub
js
pop
ror
repnz
add
add
mov
jne
sbb
call
push
stos
movsl
push
test
inc
adc
scas
mov
testb
jl
inc
adc
hlt
sub
and
icebp
test
push
mov
lret
or
adc
sarl
sub
sub
inc
cld
dec
mov
add
stos
imul
fisubrl
sub
call
or
jo
call
in
cmpsb
mov
inc
or
mov
cmpxchg
mov
fbld
push
rorb
mov
andb
pop
testb
test
sbb
cmp
popf
mov
lock
aam
mov
dec
pop
dec
sbb
add
popf
add
aam
mov
mov
cmp
and
clc
in
cmp
xchg
or
sarb
enter
add
mov
cwtl
in
bound
cwtl
shrb
add
cmp
mov
inc
fs
clc
sbb
dec
sbb
ljmp
pushf
imul
fistpl
out
or
rorb
movsb
inc
inc
adc
leave
dec
xchg
add
mov
sbb
fcoms
sub
inc
ret
imul
inc
mov
adc
shr
jecxz
push
es
adc
cs
lock
sbb
nop
out
cmp
fdivl
popa
mov
enter
ja
jle
push
pop
or
mov
pop
push
sub
pushf
jo
shr
xchg
dec
mov
cmpsl
mov
mov
add
push
inc
and
dec
or
and
jb
jmp
cmpsl
test
jecxz
lods
add
insb
fsubl
movsb
dec
adc
sub
add
stc
push
sub
xor
cwtl
xchg
nop
loopne
add
daa
das
outsb
inc
add
test
push
mov
test
das
add
inc
pop
mov
inc
pop
inc
dec
mov
js
arpl
sbb
fcoml
sahf
aaa
lods
xchg
adcb
sbb
inc
popa
add
fcoml
scas
dec
les
xor
mov
arpl
xor
sbb
jno
lahf
pop
or
and
push
mov
or
pushf
ret
fbld
push
in
repz
jo
push
xor
in
pop
jo
ret
jmp
xchg
mov
fists
or
jle
cmpb
rorb
cmp
lret
shr
pop
dec
jecxz
lock
adc
push
pop
rolb
add
int3
rclb
inc
stc
adc
xlat
mov
push
aam
fimuls
push
jge
mov
xchg
daa
stos
add
les
into
mov
jne
nop
dec
push
push
rcl
push
or
xchg
adc
or
jbe
xchg
lcall
andb
in
sbb
shl
or
push
inc
dec
jbe
aad
mov
push
mov
mov
jno
pop
inc
sbbb
pop
addr16
mov
das
push
testb
pop
inc
das
xchg
arpl
daa
xchg
and
sbb
mov
test
loopne
out
push
movsl
pop
in
or
inc
mov
jne
mov
pop
shlb
or
sbb
jmp
dec
mov
rorb
mov
orb
add
sbb
rclb
xlat
add
in
into
hlt
cmpsb
or
jb
loope
sahf
push
rcrl
mov
roll
movsb
or
push
inc
je
dec
shlb
or
cmc
dec
es
jns
and
jnp
std
add
cmp
movsb
xchg
loopne
es
sbb
lds
popf
mov
int3
out
add
add
movsl
mov
cld
sub
or
movsl
repnz
or
sub
or
or
cs
or
ret
mov
add
fists
test
pop
inc
sar
pusha
xchg
xor
jle
fistpl
orb
xchg
lahf
or
and
pop
inc
test
and
scas
movsl
xor
es
fwait
push
sub
popa
and
push
pop
jne
int3
movsl
rol
mov
mov
and
push
ret
mov
jb
add
loope
push
xor
inc
pop
mov
mov
xchg
xor
dec
loopne
xchg
adc
xchg
xor
ret
fcmovnu
and
sbb
ret
jecxz
jo
xchg
mov
fidivs
xor
inc
repnz
adc
inc
inc
fadd
adc
push
inc
add
enter
sbb
push
inc
ds
cwtl
add
xchg
pop
daa
iret
enter
mov
lock
leave
cmp
mov
xchg
ja
dec
jl
dec
js
adc
jns
sahf
je
jo
insb
iret
leave
rorl
push
les
or
es
fs
inc
dec
cwtl
cld
or
cmp
adc
push
and
adc
dec
mov
adc
dec
imul
and
pop
jne
jae
jb
sub
push
je
mov
push
or
fsubs
sub
adc
push
push
or
cmp
add
push
xor
or
push
popa
insb
fldl
testb
inc
adc
add
sub
outsl
imul
insb
push
inc
jb
outsb
adc
push
xchg
stos
and
jae
pop
xchg
inc
mov
adc
inc
outsl
adc
jbe
lret
les
scas
insb
mov
push
dec
push
sbb
xchg
leave
jl
out
hlt
push
push
int3
xor
or
pop
cmpl
ret
or
or
pop
and
xorl
ds
pop
add
inc
fwait
xchg
adc
jo
and
dec
es
adc
in
push
mov
pop
mov
push
xor
add
mov
popf
repnz
lahf
or
mov
int3
mov
adc
int3
call
push
jo
xchg
je
das
mov
test
push
xor
cs
lcall
and
or
pop
call
mov
or
inc
push
rolb
inc
cmp
sahf
clc
hlt
maxps
add
pop
sub
push
push
and
and
mov
or
iret
adc
sub
add
cltd
dec
jmp
test
inc
push
lds
loope
push
cs
xchg
mov
push
push
push
rcll
filds
sub
dec
enter
mov
adc
mov
nop
mov
push
and
sub
rcr
addl
addr16
cmp
js
jmp
add
iret
in
add
fwait
cwtl
jecxz
out
insl
pmulhuw
out
in
andb
cmp
push
lock
push
adc
es
clc
or
mov
xor
push
out
sahf
negl
dec
js
mov
repz
pop
push
push
out
insb
jnp
loopne
push
mov
pushf
push
fcoms
push
or
adc
lock
fcompl
jae
inc
stc
inc
and
sub
insl
bound
negl
test
jle
lods
int
adc
mov
add
jle
or
cmpsl
adc
adc
and
or
and
adc
aas
fisttps
rcl
push
push
clc
jne
mov
or
or
movb
jae
popa
jmp
or
pusha
test
fs
lret
mov
dec
gs
jbe
or
or
adc
adc
movaps
outsb
adc
push
fs
fmul
or
adc
push
mov
enter
pop
xchg
push
cmp
push
ret
mov
adc
popa
in
popa
imul
or
xor
lods
pusha
pop
or
jno
lods
sbb
pop
mov
add
sbb
fists
loope
loop
pop
add
pusha
inc
xchg
imull
sahf
js
ss
push
pop
cmp
jns
push
add
mov
inc
cmp
push
adc
xor
aaa
dec
data16
xor
push
ja
imul
mov
push
clc
xchg
adc
push
addb
or
js
xchg
je
jae
or
push
jmp
inc
add
imul
add
imul
lahf
cmp
jb
sub
test
lahf
enter
pushf
lahf
js
inc
lock
ja
push
cmp
push
aam
xor
rcr
pop
adc
sbb
and
hlt
fldl
cwtl
pusha
roll
cmp
mov
cmp
ja
es
add
add
jbe
adc
pop
push
jno
pushf
sbb
inc
movsb
mov
sub
shlb
cmp
popa
fs
imul
filds
and
test
inc
dec
es
mov
and
add
je
popa
loope
pop
add
scas
xor
adc
roll
jnp
lods
sbb
pushf
test
pop
mov
pop
loope
pop
aaa
mov
je
dec
iret
in
out
wbinvd
add
push
out
pop
andl
sahf
mov
jmp
nop
pop
pop
dec
imul
ret
and
or
stos
and
lahf
pop
outsb
or
shrl
xor
fistpll
push
xchg
push
push
jb
inc
add
mov
add
jnp
jg
mov
cs
ja
outsb
jb
insb
cmpl
add
imul
cmp
jo
sbb
inc
jle
cmp
sbb
add
mov
js
xor
mov
lds
add
sub
adc
outsl
arpl
inc
shll
xor
cwtl
inc
push
adc
iret
push
pusha
push
addr16
push
lds
addr16
movsl
lcall
leave
jmp
jp
push
gs
filds
mov
inc
nop
mov
inc
lods
movsbl
shlb
jb
inc
sbb
or
xchg
sbb
test
adc
nop
fdivp
cmpl
or
add
pop
adc
dec
jecxz
rcl
adc
sti
push
outsl
jae
cmp
or
sbb
das
mov
xor
cmpsl
pop
mov
lea
or
or
or
aad
sbb
jb
in
dec
je
jecxz
push
fists
xchg
xchg
xchg
cmpl
push
out
and
fs
inc
cs
popa
js
dec
pop
rcrl
test
cmp
jnp
push
mov
or
add
stos
and
sbb
addps
sbb
mov
cwtl
movhps
popa
lds
jo
ja
gs
pop
roll
or
or
and
inc
negl
ss
add
mov
mov
inc
xchg
lods
pop
xchg
movsb
add
adc
jmp
mov
push
insb
adc
das
mov
push
xchg
clc
inc
cld
dec
xor
stc
outsb
cmp
push
push
add
pushf
ljmp
stc
pushf
cli
int3
std
sahf
mov
push
sbb
mov
sbb
fdivr
cmpsb
push
pop
cld
fdivrp
cmc
jns
dec
mov
loopne,pt
cld
nop
pushl
push
dec
out
inc
push
loopne
in
scas
sbbb
fistpll
add
add
add
add
inc
add
or
push
add
pop
jp
decl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lahf
sub
add
mov
in
in
jmp
ljmp
call
jmp
jmp
jmp
jmp
jmp
jmp
fdivrp
fdivr
fcos
clc
fdivr
xlat
call
call
call
call
call
call
call
dec
dec
dec
dec
dec
dec
mov
cmp
leave
dec
ret
sub
jmp
cld
sbb
push
sbb
insb
ds
jns
addb
enter
imul
loopne
sbb
insb
ds
clc
add
adc
daa
jl
mov
push
push
inc
push
or
cs
aam
jns
repz
cmp
pushf
and
nop
mov
jmp
mov
jle
sar
int
sub
notb
scas
les
pusha
push
dec
jae
rcrl
mov
add
jl
imul
ds
add
dec
add
mov
into
push
xor
fsubl
sti
sahf
out
pop
in
pop
sbb
lcall
and
add
jo
inc
out
jge
push
fimuls
icebp
cmp
push
jnp
clc
lock
in
jbe
jmp
cld
test
mov
xchg
pop
sbb
shr
pmaxsw
shll
out
or
sbb
addb
add
lods
pushf
movsb
pop
aaa
or
out
nop
lock
cmpsl
pop
arpl
cmp
inc
je
mov
cmp
add
repnz
add
stc
aas
dec
sub
add
add
cs
cmp
or
inc
jne
in
call
xchg
test
mov
incl
inc
shll
pop
cmp
xchg
and
fiaddl
orl
mov
pusha
xlat
mov
adc
fidivrs
pusha
dec
in
jo
shlb
je
test
fidivs
aam
inc
mov
data16
filds
xchg
imul
in
rcl
add
push
pop
int
adcb
adc
scas
inc
add
lcall
je
jne
add
sub
fcoml
lcall
dec
insl
gs
add
push
dec
pop
das
sbb
dec
inc
jb
jb
pop
jle
dec
jno
fs
dec
cli
pusha
and
mov
or
xchg
mov
fbstp
pop
or
das
pusha
mov
mov
clc
mov
das
add
or
ret
aad
xor
sbb
adc
sub
int
enter
out
pop
outsb
test
adc
addr16
test
mov
mov
pop
adc
les
xor
and
insb
adc
push
adc
push
sub
jle
sbb
push
adc
les
stos
subb
and
aaa
mov
mov
stc
cmp
pop
sbb
fs
adc
nop
push
push
orl
mov
pusha
ret
iret
mov
iret
ret
sbb
mov
movsb
lea
aas
add
stos
push
hlt
jg
nop
pop
in
iret
in
gs
in
xchg
inc
pop
add
jb
push
dec
and
data16
jnp
jnp
cmp
int3
testb
xchg
js
lcall
inc
inc
ss
dec
or
data16
movsb
inc
push
lods
xchg
xor
cmp
and
pop
lock
dec
jle,pn
jo
cmpl
xor
std
cmpsb
sub
jno
adc
dec
or
adc
adc
aad
loop
mov
pop
push
sub
mov
outsl
sbb
add
add
add
mov
clc
mov
and
addl
add
add
add
call
add
add
aaa
mov
mov
mov
mov
or
mov
mov
adc
sbb
sbb
and
jmp
mov
mov
mov
mov
add
push
mov
dec
mov
lcall
pushl
sub
dec
mov
mov
mov
in
inc
inc
inc
mov
inc
inc
inc
and
cmc
pop
or
mov
mov
stc
dec
pushl
pushl
pushl
xchg
pusha
push
int3
lock
popa
lahf
out
sahf
pusha
andb
sti
xor
cwtl
arpl
push
push
dec
rep
nop
fs
push
sub
imul
sbb
jbe
in
stc
sahf
mulb
nop
push
mov
inc
ja
ja
je
push
xor
jge
fcomps
mov
imul
jbe
nop
push
or
out
jns
ja
dec
mov
push
clc
inc
repz
push
pop
push
push
jns
data16
sbb
jns
cmp
fdivrl
jnp
xchg
dec
js
shrl
jl
push
pusha
xchg
ds
insb
mov
jne
push
in
aam
imull
cld
loopne
mov
out
adc
imul
jnp
sahf
imul
cs
adc
xor
or
push
mov
data16
mov
cs
jae
fldcw
or
xchg
jg
adcl
cmp
fadd
xchg
xchg
jo
inc
cmpsb
pop
scas
rcrb
and
mov
mov
cmpsl
jmp
mov
xor
cmp
mov
insb
mov
mov
nop
clc
outsb
push
lods
ret
inc
or
sub
pop
jo
push
adc
int3
mov
lock
shrl
mov
mov
clc
mov
xchg
pushf
and
shl
fimuls
cs
mov
into
les
rolb
jl
fists
mov
add
cmp
cmp
dec
leave
inc
fidivl
mov
adc
in
mov
mov
insb
mov
lds
mov
pop
xchg
incl
inc
and
add
or
pushf
or
mov
inc
mov
push
push
pop
adc
push
mov
adc
inc
cmp
jecxz
mov
inc
aaa
aaa
pop
sub
mov
jg
jle
out
inc
mov
dec
cwtl
mov
inc
pushf
addb
push
cmpsl
cwtl
mov
and
es
lahf
or
test
add
push
jbe
mov
inc
push
inc
add
inc
andl
dec
ficoms
cmp
les
jns
lret
in
sbb
dec
mov
ds
cmp
or
or
dec
or
xchg
rclb
sbb
stc
xchg
aas
xor
adc
std
les
inc
and
mov
pcmpeqb
cmp
mov
add
push
push
adc
cmp
gs
pusha
adc
inc
inc
adc
enter
test
xor
leave
push
in
or
push
cwtl
mov
aas
sub
mov
inc
andb
sbb
mov
or
fwait
test
mov
mov
add
and
xor
add
sub
xor
adc
outsl
les
xchg
inc
push
mov
iret
sarl
push
xor
mov
iret
repz
xlat
in
incb
cmpsl
stc
or
mov
inc
js,pn
pop
inc
test
in
push
add
inc
sbb
sahf
push
adc
fisubrl
insb
push
sbb
pusha
in
int
mov
cs
mov
inc
aam
sbb
ds
shll
mov
insb
inc
test
push
jb
mov
mov
std
add
or
adc
jle
adc
cmpsl
add
add
outsl
test
or
jae
push
mov
dec
adc
pop
imul
sub
es
inc
pop
test
xchg
pop
xchg
pushf
sbb
pushf
loope
rol
xchg
loope
loop
loop
int3
pop
add
jo
pcmpeqb
cmp
xor
jecxz
cmp
mov
and
sbb
test
xor
shll
hlt
mov
nop
sbb
dec
jp
push
sarb
aaa
in
push
sbb
scas
push
fs
shl
push
fcomps
xor
push
pusha
daa
mov
in
mov
mov
in
mov
inc
adc
mov
dec
stos
or
adc
pop
and
lock
adc
xchg
mov
mov
mov
cmpsb
pop
lahf
adc
add
idivl
test
clc
add
adc
push
popa
jns
rcrb
insl
or
inc
data16
lea
mov
adc
test
xor
adcb
xor
jno
push
adc
je
push
int
inc
arpl
aam
sbb
pop
jmp
xchg
add
inc
sahf
dec
inc
push
loopne
jbe
movsl
outsl
add
push
sub
jo
call
add
mov
movl
or
scas
xor
inc
or
push
negl
fcmovnbe
and
mov
jne
cmc
hlt
mov
jmp
test
pop
push
setns
pop
in
dec
jne
xor
ds
mov
cmp
jne
xchg
sub
in
dec
mov
dec
sub
shlb
cmp
jne
mov
inc
add
fmuls
mov
sbb
cmp
mov
insb
out
dec
push
adcb
cmp
and
mov
add
aas
inc
push
jg
insl
and
inc
jnp
aaa
dec
add
dec
aam
inc
fildl
or
jnp
ds
inc
push
ficompl
test
inc
adc
xchg
and
push
inc
push
aas
and
pushf
pop
or
mov
or
push
inc
mov
iret
push
cmpb
jne
jge
dec
jle
mov
pop
in
fcmovb
xor
je
push
xorb
stos
pop
or
push
inc
adc
aad
or
mov
out
jp
jb
xchg
xor
idivl
mov
jae
push
insb
add
aaa
call
aaa
mov
pop
insb
push
aas
add
cmpsb
sub
push
pop
inc
add
sbbl
push
fcmove
aaa
xchg
outsb
mov
jmp
inc
lret
dec
or
inc
jmp
popf
mov
adc
loopne
push
outsb
imul
sub
adc
push
scas
fstps
add
push
cmovo
insb
sub
imul
fs
fs
dec
inc
shlb
mov
popa
sbb
dec
push
or
cmp
jb
cmp
popf
sub
mov
inc
and
xchg
pop
hlt
or
inc
mov
js
push
mov
mov
out
jo
inc
jg
inc
clc
out
enter
xor
push
and
enter
nopl
add
test
fnstcw
lods
pop
xchg
fimuls
or
add
push
or
push
cltd
sarb
add
mov
dec
mov
fadds
call
jns
push
add
repnz
cmp
inc
addl
add
xchg
push
int
mov
hlt
mov
dec
pop
inc
lea
inc
push
and
les
xchg
add
pop
pop
mov
psubusw
sbb
push
test
mov
pop
pop
mov
stc
sbb
xor
mov
cmc
sub
mov
push
aam
xor
or
xlat
sbb
jmp
xor
enter
inc
dec
mov
jae
test
aaa
cmc
imul
inc
xor
imul
fstpt
inc
in
and
rorl
adc
shll
sbb
dec
shll
xor
rcrb
xor
scas
push
push
mov
xchg
mov
mov
sub
movsb
nop
dec
out
dec
inc
inc
pop
pop
mov
pop
icebp
out
pushf
sbbl
add
je
sub
and
je
arpl
shll
jle
or
mov
imul
push
movswl
or
gs
shrb
add
xor
lds
gs
inc
int3
mov
nop
sbb
inc
jmp
hlt
adc
mov
ljmp
jp
aas
enter
or
add
fwait
cmp
mov
subl
adc
push
insb
jmp
cmp
jo
fwait
xlat
inc
or
xchg
shrl
push
lret
clc
mov
cmp
icebp
mov
xchg
push
scas
dec
jecxz
hlt
fdiv
incl
sbb
cmpsl
lahf
stc
add
inc
dec
fisttps
fs
push
mov
inc
fistps
sub
andl
inc
notl
in
or
mov
sbb
movsb
dec
inc
loopne
lods
inc
inc
xor
jle
add
dec
mov
fidivs
shrb
or
mov
stc
stc
push
mov
inc
loopne
xchg
hlt
fwait
mov
inc
dec
mov
cmpsl
sbbb
inc
lcall
or
pop
test
pop
xor
mov
nop
cld
mov
in
movsb
mov
addb
orb
add
loop
dec
jae
movlps
inc
push
ja
dec
les
rolb
mov
xchg
dec
pusha
or
sbb
xchg
cmp
cs
pusha
mov
sbb
frstor
lea
dec
repz
add
adc
dec
pop
or
pop
inc
mov
pop
repnz
mov
pop
addr16
jns
or
insl
aaa
repnz
inc
push
add
jb
or
jle
jp
push
and
sarb
dec
jb
pop
inc
sbb
leave
in
mov
or
adc
cmp
push
mov
and
mov
and
lea
inc
push
sbb
pop
gs
pop
jle
cmp
pop
push
push
and
push
nop
jmp
and
add
cmp
out
lea
sbb
movsb
add
xor
push
cs
jmp
bound
xor
enter
adc
add
mov
sub
lret
fstpt
sub
fadds
inc
loop
ret
mov
jle
dec
outsb
rclb
cmp
fildll
leave
rorl
xor
inc
es
outsl
pop
mov
mov
andb
inc
ret
adc
inc
add
jecxz
inc
cmp
pop
insl
fsubs
fisubs
push
push
sub
add
iret
in
clc
popa
inc
sub
and
test
add
push
dec
std
jae
fildll
clc
cltd
push
movsl
enter
ds
loope
inc
cmpsl
pop
pop
dec
mov
sub
rcl
mov
pop
outsl
sub
rolb
lret
sbb
mov
cwtl
adc
push
mov
jo
addr16
adc
xlat
test
mov
rol
mov
out
mov
push
push
lret
imul
add
je
sbb
test
test
xlat
xor
inc
cmpb
mov
subl
sub
orb
out
push
push
cmpb
or
push
push
sbb
push
lock
sar
mov
cmc
push
lahf
in
sarb
pop
inc
cmp
ret
cs
sbb
inc
mov
mov
loop
and
sbb
sbb
sbb
sub
or
ret
dec
adc
jl
pop
push
fmull
cmp
xchg
and
cmp
dec
mov
pop
inc
cmpsl
or
xor
jne
or
dec
insb
and
sti
pusha
cmp
and
mov
xchg
sbb
sbb
cld
pop
add
aaa
lods
cmp
lock
je
rorl
mov
push
inc
push
push
add
and
pushl
repnz
dec
push
push
incl
in
lret
inc
call
push
inc
add
sahf
mov
jb
mov
notb
popa
movnti
xor
insl
xorb
gs
sub
xchg
xchg
ss
fidivrl
ljmp
pop
jbe
or
call
sbb
inc
lods
push
add
imul
cmp
cmc
lds
and
mov
mov
rol
mov
repnz
jg
mov
pop
pop
jbe
mov
insl
out
pop
test
xchg
dec
bound
andb
out
xchg
in
cvttps2pi
mov
into
clc
pop
push
fwait
cmp
int
and
sbb
ljmp
gs
or
adc
rol
jne
jae
lock
jno
fcomp
shrb
add
mov
sbb
mov
sub
iret
push
pop
mov
xchg
es
add
shll
or
int3
push
test
fimuls
je
xchg
sbb
mov
xlat
mov
mov
dec
cmc
movb
add
adc
push
sbb
add
in
ficompl
repz
cld
mov
add
ljmp
push
adc
mov
mov
test
add
lods
popa
mov
scas
call
adc
in
sbb
int
ss
cs
sbb
sbb
push
fisubs
mov
mov
or
push
sub
lcall
jne
testb
jne
sbb
je
push
adc
push
test
adc
sbb
pop
or
xor
mov
mov
pop
fwait
xchg
lcall
rcll
fsubl
mov
sbb
test
mov
ljmp
push
inc
xchg
bnd
insl
sbb
cmp
pusha
and
shlb
mov
mov
imul
cmp
dec
inc
cld
ficoml
movsl
push
fs
and
insb
test
mov
mov
sbb
mov
adc
xor
js
jecxz
cmp
dec
iret
add
fwait
js
inc
pop
inc
dec
imul
imul
or
aaa
jne
pusha
jnp
mov
shlb
and
pop
pop
cld
test
dec
mov
or
stc
adc
testb
mov
adc
xchg
rorb
fdivrp
fstpl
fwait
jmp
mov
lods
sub
cmp
push
add
lret
fsubrs
adc
cli
imul
into
add
push
insl
pop
xor
xor
push
adc
xchg
orl
dec
arpl
popf
jns
xchg
jmp
sub
mov
push
inc
or
movl
sub
pop
test
loopne
inc
push
out
mov
or
fisubl
add
mov
dec
mov
fldl
cs
cmc
ret
fiaddl
add
push
pop
bound
movsl
test
cwtl
iret
and
xchg
jge
or
cmp
in
sub
lea
mov
sbb
push
xor
out
mov
push
cs
jecxz
into
push
mov
pop
dec
sub
jno
imul
push
jmp
loopne
or
fbstp
shrl
fadds
mov
cs
mov
in
mov
push
push
sub
mov
push
inc
dec
add
pop
jno
or
je
push
pop
sbb
mov
jmp
loopne
xchg
orl
dec
xor
add
or
add
xchg
ljmp
js
aas
push
mov
push
sbb
push
add
and
and
daa
adc
xchg
xor
mov
xchg
pop
ror
cmpl
sub
xchg
mov
insb
sbb
lock
mov
jmp
movb
add
add
mov
xor
push
add
mov
xor
shll
pop
subb
inc
and
inc
je
sub
pusha
mov
pop
aas
adc
add
outsb
push
sbb
cs
adc
adc
lea
cwtl
stc
aam
dec
push
xchg
or
cmpsl
adc
dec
lock
arpl
inc
or
je
faddl
pop
xchg
sahf
mov
add
loope
js
cmp
imul
in
xchg
cmp
jae
jmp
testl
sub
mov
orb
cmpl
pop
lahf
push
es
add
inc
mov
adc
fbstp
xor
lods
add
xchg
jne
mov
inc
push
or
fsts
add
push
call
xor
movsb
fmuls
out
popa
movsb
jecxz
sbb
test
fnsave
mov
leave
jp
mov
loop
pusha
adc
mov
ror
fimuls
adc
enter
test
xchg
push
lret
mov
inc
sbb
mov
daa
mov
mov
je
dec
push
cmp
fwait
pop
daa
and
xchg
push
stc
movb
sbb
sbb
fmuls
fnsave
jbe
and
mov
mov
fadd
sbb
mov
lret
sbb
rol
inc
enter
pop
and
adcb
test
cli
add
adc
and
xlat
fcmovbe
add
or
mov
das
jnp
add
pop
pop
sub
push
or
adc
pop
lock
cwtl
dec
pusha
enter
dec
xor
inc
jl
mov
aad
lock
cmc
pop
rcrb
add
clc
sbb
jmp
stc
push
insl
dec
mov
dec
inc
sbb
cmp
dec
hlt
jne
dec
ja
xchg
or
sbb
push
push
mov
sbb
inc
outsl
inc
mov
shl
hlt
pop
stc
push
push
fnstcw
outsl
and
mov
or
add
pop
aaa
mov
popa
pop
ljmp
jmp
gs
popf
sbb
pusha
out
fptan
add
cmc
jnp
jl
iret
mov
insb
sbb
enter
xchg
or
cmc
and
jb
pop
dec
cld
in
mov
lsl
inc
add
pop
rolb
jmp
ret
aas
roll
les
pusha
pop
xor
xchg
iret
pop
pushf
punpckhbw
and
mov
daa
pop
or
fwait
dec
and
icebp
hlt
inc
add
fimuls
orl
cmp
movsl
add
push
xchg
getsec
leave
scas
or
and
imul
adc
mov
or
push
add
add
mov
sub
inc
decl
out
dec
out
pop
jmp
cmp
je
mov
jbe
push
adc
pushf
lret
fwait
jge
cmp
push
or
add
pop
xchg
adc
je
mov
sarl
fs
jbe
or
xchg
or
loope
addr16
enter
fs
in
out
sub
addl
xchg
cltd
loopne
or
dec
jbe
add
nop
scas
and
mov
out
js
push
cmp
inc
push
movsl
addb
or
in
adc
inc
mov
sub
xchg
adc
subl
mov
mov
or
gs
ret
inc
and
inc
inc
sahf
in
clc
xor
jg
or
jne
imull
movaps
mov
push
add
sub
daa
lds
pop
cvtdq2ps
or
or
pop
sub
mov
cmp
out
push
lcall
in
jecxz
mov
sbb
cld
fstpl
push
push
ds
add
scas
and
adc
dec
fldt
xchg
mov
xchg
filds
dec
sbb
sbbb
push
mov
jl
mov
push
les
adc
add
dec
call
mov
inc
sbb
popa
jns
ljmp
lahf
fs
pop
jae
ret
dec
andnps
addb
scas
in
and
enter
adc
stos
add
orl
xchg
jne
fmull
or
add
push
xchg
push
inc
mov
pushf
sarb
xchg
jecxz
jns
rorl
mov
loop
dec
sbb
aas
loopne
cmp
xor
push
or
xor
jecxz
es
or
shll
je
sbb
add
push
push
fld
lcall
repnz
sbb
inc
popa
mov
dec
mov
rcrb
sbb
sub
out
clc
cmp
lahf
add
xor
imul
inc
repz
mov
push
add
pop
pop
pop
std
ficoms
subl
push
pop
add
fisttpll
jmp
subl
cltd
xchg
subw
add
push
jp
stos
push
pop
je
jo
iret
clc
out
test
test
dec
faddp
mov
test
inc
inc
repz
fidivs
das
mov
test
xchg
mov
test
fmul
xor
adc
int3
scas
fisttpll
or
push
mov
sbb
xchg
addl
rorb
xchg
and
stos
adc
add
shrb
daa
push
fistps
pop
je
sbb
adc
ret
lret
sub
cmp
or
mov
insb
sbb
adc
dec
stos
or
cmp
add
cltd
fcoms
imulb
fdivs
addb
pusha
jl
mov
dec
sub
add
push
or
pop
sbb
sbb
or
mov
in
push
xchg
sbb
and
inc
add
mov
dec
jmp
pop
adc
mov
stos
dec
mov
inc
inc
jne
adc
inc
jne
repnz
stc
shrb
xchg
dec
jne
cwtl
dec
je
mov
mov
mov
xchg
jle
mov
pop
push
xor
js
repz
jg
scas
or
mov
adc
jmp
dec
loop
dec
push
into
dec
enter
fisubrl
cmp
repnz
cwtl
or
pop
pop
loop
nop
push
inc
and
xor
enter
or
sub
add
mov
loop
sub
inc
inc
push
test
fistl
sbb
jmp
push
arpl
icebp
repnz
js
testb
mov
imul
aad
sbb
xchg
mov
ret
je
ljmp
rorl
shl
outsl
push
mov
dec
push
or
mov
mov
leave
aad
testl
push
divl
sub
daa
jae
mov
fwait
pop
or
inc
cs
xor
cs
pusha
mov
dec
dec
add
dec
push
dec
enter
cmp
outsl
jne
xchg
addr16
and
test
movsb
loopne
addr16
js
cmc
xchg
vpsrlw
into
pop
pop
push
ret
pop
lock
nop
dec
fisubrl
sub
and
sub
pop
gs
xchg
xor
adc
fmull
cmp
adc
in
jmp
pop
fimull
xchg
rolb
std
sub
xlat
gs
ret
xor
add
push
sub
dec
adc
xor
or
mov
movsb
adc
dec
inc
mov
mov
dec
inc
sub
cwtl
mov
ljmp
stos
imul
mov
or
lea
mov
inc
pop
rclb
pop
inc
xor
jge
pop
ljmp
cs
or
push
jecxz
adc
rcrl
pop
insb
repz
mov
icebp
mov
inc
mov
scas
adc
lds
xor
mov
and
adc
add
shrb
inc
dec
test
push
xchg
xor
xchg
lret
adc
pop
sub
popa
dec
lock
rorb
shll
inc
je
dec
or
clc
mov
int
jecxz
inc
add
pop
xchg
je
je
push
sbbb
fs
in
and
insb
adc
xchg
nop
inc
ja
mov
loopne
addb
rolb
mov
je
test
jmp
sub
enter
mov
das
add
mov
test
js
cld
sub
sti
add
mov
mov
pop
loopne
jp
aam
je
inc
push
xchg
push
inc
cmp
dec
inc
xchg
xchg
repz
add
test
xorl
sti
cmpsb
insl
pop
addr16
inc
imul
and
and
push
leave
imul
dec
mov
push
or
add
inc
popf
xchg
in
in
sub
cmp
dec
ljmp
and
and
mov
push
inc
and
lret
sub
inc
pop
sbb
daa
jns
dec
movsb
mov
sbbb
push
cmp
mov
jge
adc
js
aaa
mov
mov
dec
xor
outsl
cmp
shrb
arpl
mov
push
shlb
filds
lock
jp
push
nop
gs
mov
mov
or
adc
pusha
push
sti
test
xchg
adc
cs
xlat
cmpl
dec
lcall
iret
and
dec
jmp
adc
rol
cmpl
mov
push
rcll
push
movb
inc
mov
pop
cmp
xor
dec
orl
push
inc
inc
add
adc
sbb
dec
xchg
fadds
test
and
push
dec
mov
sub
adc
sahf
mov
sti
rorb
cmpl
inc
loop
pusha
rcl
inc
inc
add
mov
dec
dec
jecxz
int3
add
sub
gs
xchg
or
mov
aaa
je
pushl
hlt
pop
or
and
xchg
adc
es
xchg
sbb
pop
mov
enter
xor
inc
add
push
adc
inc
add
test
add
sub
lahf
add
push
imull
enter
pop
mov
pop
add
out
rolb
jo
imul
add
test
enter
pop
add
shl
cmp
inc
push
in
adc
jnp
jns
or
stos
xor
or
out
je
and
sbbb
lock
mov
push
add
cmp
cmp
or
sub
dec
pushf
cli
lods
test
jle
xor
popa
mov
add
dec
jne
push
jno
mov
lahf
mov
rclb
sub
pusha
push
adc
rclb
cld
xchg
sub
adc
inc
or
xorb
daa
dec
es
and
sti
cmp
ficompl
adc
andb
adc
xor
cmp
in
or
je
xor
and
mov
jo
cld
psrld
xor
pop
sub
nop
pop
daa
pop
lea
xchg
adc
dec
adc
xchg
jne
imul
dec
rclb
or
or
add
jno
lret
cmp
in
pop
in
in
push
pop
cmp
dec
sbb
mov
mov
and
lea
pop
mov
aas
lds
push
dec
xchg
mov
cmpb
inc
cs
mov
je
pop
fs
enter
rcrb
movsl
xchg
add
sub
adc
push
mov
push
les
mov
les
fildll
xlat
inc
addr16
xchg
clc
testb
je
push
jne
test
pop
inc
jns
adc
loopne
pop
lock
ja
mov
in
dec
sub
push
sbb
push
pushf
fisubrl
inc
or
lock
lcall
clc
jo
dec
loopne
clc
call
and
test
cs
adc
adc
clc
ret
add
ret
hlt
xor
adc
cmp
sub
aad
or
test
stc
rol
pop
mov
gs
pop
add
jl
roll
fadd
shrl
hlt
and
push
sub
push
mov
push
push
cs
cmpsb
or
add
out
sub
mov
push
ftst
push
xor
sahf
pop
push
add
mov
push
mov
pushf
inc
pop
sbb
mov
sub
sarb
push
cmp
fildll
push
dec
cmp
mov
push
push
adc
imul
loopne
add
scas
inc
data16
pop
xor
shl
movntps
ret
lods
icebp
out
data16
adc
enter
and
testb
adc
or
stc
lock
aas
cmp
pop
lods
push
ljmp
mov
fs
das
popa
lret
adc
aaa
mov
xchg
fs
sahf
js
or
push
cmpsb
xor
in
mov
cmpsl
pop
je
mov
pusha
inc
andb
or
cmp
lret
ja
shufps
nop
and
add
mov
movsl
data16
cmp
je
mov
lcall
and
mov
rol
je
xchg
enter
or
or
in
sub
inc
dec
jb
xchg
pusha
pusha
cmp
into
js
mov
xor
fbstp
sarb
mov
arpl
add
cwtl
mov
mulb
cld
sbb
adc
xchg
cli
push
insl
or
or
aam
mov
fidivrs
and
jno
mov
push
fwait
insl
sbb
outsl
push
cld
push
cmp
inc
push
ficoms
or
and
rcrl
add
js
cmpsl
add
je
idivl
mov
xchg
push
or
in
in
adc
inc
mov
imul
jno
sbb
or
cmpb
pop
sbb
inc
je
das
lahf
push
mov
inc
fwait
and
ss
xchg
mov
jno
cld
inc
pop
insb
and
or
sbb
inc
jb
mov
mov
imul
push
jg
adc
xor
jle
mov
and
test
jle
dec
mov
pop
sub
cmpb
xor
ret
pop
mov
push
mov
out
fdivrl
jle
sbb
lds
cmp
jg
dec
adc
or
nop
push
test
sbb
stc
jb
push
or
mov
push
add
pusha
xchg
push
adc
lret
addr16
shll
cmpb
or
pop
aas
push
xor
arpl
mov
sub
xchg
dec
jo
mov
insl
rolb
rolb
push
dec
stos
jle
imulb
add
sub
daa
inc
and
iret
xor
push
or
adc
add
js
pusha
pop
xchg
push
popa
mov
out
inc
inc
rcll
adc
push
test
adc
or
fdivr
and
je
jg
jne
enter
add
cld
or
popf
pop
xor
add
inc
aas
mov
pusha
jle
inc
or
lock
or
dec
mov
push
rorl
loope
fists
push
sahf
jmp
sbb
dec
pop
ret
shlb
mov
dec
or
and
insl
rol
inc
add
push
xor
sti
cld
add
push
popa
rcrb
dec
inc
sar
ss
mov
mov
dec
fs
bound
add
push
jecxz
push
xor
push
inc
adc
pop
pop
mov
sub
leave
pop
add
add
add
fcomp
inc
out
mov
adc
add
jo
dec
ljmp
lods
mov
loopne
lds
lds
xchg
and
std
ret
aam
out
inc
fsubl
or
insb
dec
sub
psadbw
xorb
xor
aad
aam
and
inc
lods
mov
les
push
shl
or
sbb
inc
add
add
or
rcrb
or
leave
push
sbb
aaa
dec
stos
cmp
rcl
pop
addr16
push
cmp
loop
and
add
dec
and
lcall
lret
adc
in
test
pop
push
or
out
mov
mov
adc
iret
add
fucomi
pop
add
xchg
or
or
dec
or
or
imul
jno
loopne
ficoml
mov
mov
insl
into
inc
stos
popa
push
je
mov
adc
adc
add
dec
sub
inc
or
loope
sbb
xchg
mov
insb
daa
xor
arpl
xchg
lea
frstor
sub
jl
push
adc
cmpl
outsb
add
outsb
or
push
dec
scas
sub
inc
lea
xchg
push
sub
and
push
add
sti
outsb
push
mov
lock
mov
dec
xlat
jl
inc
jg
aaa
and
xlat
cli
add
in
cld
clc
inc
ret
repnz
push
pop
repnz
adc
dec
lret
ficompl
rcrb
add
pop
sub
xchg
jnp
sbb
test
fwait
xor
or
xchg
jo
mov
jg
mov
push
scas
inc
mov
lea
jl
mov
mov
adc
sti
insb
adc
sub
xchg
inc
int
in
dec
fists
jge
lahf
xchg
sub
pxor
pop
push
pushf
ret
inc
adc
call
test
inc
cs
sub
neg
xor
and
lods
loop
or
adc
sbb
jge
push
add
lock
xor
add
dec
or
nop
dec
lahf
imul
or
push
push
xor
dec
dec
pop
sub
mov
xchg
push
and
and
push
push
adc
lods
out
popf
movsb
aad
mov
and
fistl
stos
test
fs
sub
or
fcompl
dec
mov
push
add
cmp
adc
outsb
das
jnp
inc
es
addl
inc
sub
dec
ficompl
stos
sub
cmp
cmp
jp
ret
dec
test
pop
mov
cmp
aaa
call
sub
sub
das
in
or
imul
adcl
lods
inc
imul
sbb
xor
dec
jecxz
pop
bound
in
addr16
mov
inc
enter
inc
or
sub
outsb
insb
movsb
leave
push
or
arpl
aaa
sarb
mov
xchg
adc
add
pop
and
xchg
add
push
loop
or
push
test
clc
nop
adc
and
inc
into
rcrl
adc
sbb
adc
or
ret
repz
fisubl
inc
fistpll
in
or
xor
or
add
cmp
lret
jp
xchg
and
inc
inc
clc
je
loopne
loope
sbbl
int3
add
cmp
daa
push
sub
dec
dec
loope
xchg
push
adc
add
xlat
shr
sub
shr
add
loopne
mov
orb
into
out
and
aam
inc
fdivr
int3
sbb
jecxz
test
sbb
mov
inc
inc
fsubl
inc
imull
jne
jle
xor
cli
test
push
jne
addb
sbb
clc
adc
add
inc
push
xor
imul
fs
ds
xor
push
or
scas
xor
inc
mov
pop
inc
xor
jge
inc
or
or
enter
push
pop
popa
jecxz
hlt
into
dec
lea
add
loopne
scas
xor
xchg
es
mul
in
xor
inc
scas
sbbb
rol
pusha
jns
std
fwait
xor
pop
pop
pop
loope
add
add
int3
add
pop
popa
add
jl
subb
push
and
push
hlt
or
sbb
lret
lcall
jge
xchg
inc
mov
adc
inc
sbb
add
and
mov
inc
and
xchg
pop
mov
inc
lahf
out
xor
addb
mov
push
jg
and
test
mov
mov
cmpsb
test
dec
lods
lds
mov
adc
pop
add
mov
adc
or
adc
add
ja
inc
subb
sar
js
adc
and
push
into
mov
sub
jae
jle
je
fadds
inc
mov
mov
dec
dec
clc
cltd
xor
jo
shr
cld
sub
adc
xor
cltd
mov
push
lret
push
test
movsl
pop
movsl
int3
cmc
stos
adc
pusha
das
jnp
mov
dec
add
cmpsb
rclb
xor
push
add
xchg
add
mov
mov
jg
jo
or
shlb
insb
loopne
or
mov
jl
adc
push
jmp
sub
sub
or
adc
es
or
jg
inc
sbb
fnsave
movb
hlt
mov
xchg
imul
aam
stos
ret
test
jge
rcll
xor
mov
or
push
jmp
sub
push
orl
push
or
xor
cli
adc
xorl
or
clc
or
adc
and
xchg
into
cmpsl
add
sub
dec
addr16
mov
movsb
shlb
movsl
or
outsw
adc
std
lods
and
cmp
pop
push
orb
loopne
push
mov
addb
inc
cmpb
es
rcrb
or
leave
and
movsb
inc
jmp
add
std
inc
xchg
cwtl
sub
out
push
sub
incb
sbb
pushf
jo
dec
or
and
dec
loopne
mov
gs
call
adc
je
mov
notb
add
push
mov
bound
xchg
imull
sbb
cmp
push
sbb
pop
add
lods
icebp
out
jge
jb
jle
dec
ss
lods
fiadds
dec
adcl
sbbb
rcr
cmp
cs
xorb
add
sbb
into
add
aaa
adcl
scas
add
incl
pop
ja
fidivrs
lcall
lcall
orb
xchg
push
and
sti
lret
mov
outsb
ss
add
push
pusha
adc
push
jo
cltd
xor
aam
rol
push
in
and
test
je
adc
inc
add
outsl
rol
mov
add
jnp
mov
push
std
sbb
roll
cmp
into
pop
pop
out
sub
sub
mov
in
test
addr16
add
add
subl
mov
aas
cmpb
mov
out
sub
outsl
loope
test
aas
data16
xchg
mov
add
test
and
jb
xor
push
push
addb
cwtl
push
sub
inc
sub
hlt
in
outsl
xor
out
testb
gs
ret
dec
push
or
daa
loopne
push
mull
cmp
pop
ss
mov
rcll
adc
out
sbb
xchg
adc
jbe
mov
out
push
test
js
push
dec
je
sub
push
xchg
cwtl
cmp
movsb
xor
mov
sub
or
sub
push
sti
and
ds
inc
fdivl
cmp
pusha
imul
mov
sub
adc
sbb
mov
pop
ret
xor
scas
add
int3
pop
xor
mov
mov
pop
sub
inc
mov
xchg
rcl
sbb
scas
push
xchg
or
and
jmp
push
add
jo
mov
or
inc
scas
mov
mov
push
mov
inc
add
aas
sub
popa
and
mov
mov
xor
and
inc
inc
pop
jmp
or
pause
sbbl
xchg
pop
xor
test
loop
or
fs
dec
pop
jb
cmp
jle
cwtl
cwtl
test
inc
jp
cwtl
dec
jne
lret
es
add
and
or
jp
and
test
push
inc
add
or
scas
add
adc
pop
jecxz
cwtl
adc
sub
setne
aas
or
dec
stc
leave
jmp
mov
mov
mov
jo
add
mov
add
dec
push
in
loopne
add
dec
shl
sub
cmpsl
test
mov
pop
or
push
pop
arpl
out
or
in
leave
adc
inc
or
push
or
out
xchg
xor
dec
pop
mov
adc
and
pop
fs
fcoms
jmp
push
add
fists
adc
xor
fildll
shlb
mov
arpl
push
sbb
sbb
sbb
add
jg
ret
les
jns
or
les
lret
shlb
jo
cmp
jecxz
inc
push
movsl
mov
cmpl
dec
and
and
das
pop
cld
xor
loop
add
fidivl
ret
sbb
mov
clc
or
dec
lcall
loopne
or
pop
lock
fwait
rcrb
push
sbb
push
add
pushf
add
mov
mov
in
xchg
pop
and
mov
or
xchg
or
ljmp
pop
sbb
inc
fadds
ret
xor
rolb
adc
cmc
call
rolb
aam
sti
xor
mov
gs
adcl
jle
cmp
inc
dec
fs
dec
mov
push
test
or
test
dec
lcall
or
or
inc
xorb
psrlq
and
mov
add
in
cltd
push
inc
stos
pop
and
test
mov
push
lret
mov
out
mov
xchg
and
mov
and
jnp
sub
cmp
daa
inc
sub
adc
mov
pop
inc
jns
mov
in
sub
out
cmpsb
and
aam
and
or
cmp
and
adc
push
jns
jae
rclb
fmul
add
push
std
inc
or
push
int
sub
mov
or
inc
or
pop
jnp
xchg
jmp
or
pop
adc
das
inc
aas
dec
popa
and
iret
add
int3
pop
loopne
repnz
shlb
enter
push
adc
sub
shl
or
inc
mov
cmp
int3
movb
in
loopne
clc
adc
arpl
mov
outsl
mov
enter
sbb
cld
xchg
cs
jo
push
cli
or
sti
adc
jae
or
adc
movsb
pop
ds
adc
jle
adc
or
dec
gs
dec
or
dec
movsb
pop
mov
sub
push
add
int
mov
inc
dec
mov
add
pop
test
push
cmpb
test
sbb
cmp
pop
push
inc
js
add
out
mov
cs
pop
das
dec
mov
stos
cmp
adc
inc
insb
je
adc
and
push
push
les
mov
jp
das
dec
jp
cmp
orb
pop
jmp
push
lret
inc
insb
and
inc
es
add
or
loope
pusha
int3
andl
xorl
and
js
aas
hlt
pop
idiv
push
subb
lea
mov
jecxz
adc
or
add
ja
push
push
mov
pop
or
push
push
dec
popa
ret
push
xchg
jne
dec
mov
mov
movb
pusha
mov
xor
inc
adc
arpl
inc
fcomps
mov
pop
insb
or
or
lods
cltd
pop
ja
push
movsb
loope
pop
inc
and
mov
push
pop
mov
push
sbb
sub
pop
mov
sub
test
movsb
xchg
pop
test
pop
xchg
rclb
adc
jne
xchg
cmp
push
in
cmp
xor
out
adc
mov
adc
push
xlat
in
cltd
in
mov
xor
js
jb
aad
mov
mov
push
jnp
jno
mov
outsb
push
adc
fs
popa
xchg
clc
dec
sbb
das
dec
pop
std
push
xor
mov
inc
mov
rcrb
mov
pop
push
js
sbb
or
dec
jo
and
push
sub
sar
cld
sbb
push
inc
or
inc
outsl
out
mov
xor
inc
punpcklbw
inc
stos
push
pop
mov
mov
jb
inc
push
sub
jnp
scas
fdiv
push
dec
dec
push
dec
or
je
inc
add
push
cld
adc
jle
pushf
add
sub
xor
inc
jnp
push
or
lds
cmp
andl
push
dec
xor
cwtl
clc
add
jbe
cmc
mov
inc
push
push
push
dec
inc
push
cmp
daa
add
fisttpl
mov
push
mov
movb
push
clc
fstl
cmpb
jg
mov
mov
jne
cmp
add
sbb
imull
cmpl
repnz
dec
dec
mov
jns
xchg
adc
pushf
adc
adc
mov
cltd
adc
jns
and
imul
add
mov
popa
jb
pop
cmp
push
sbb
inc
aas
sub
fistl
inc
sbb
jno
movsb
test
xchg
and
sub
cwtl
push
dec
lds
xor
and
adc
popa
sub
dec
sbb
dec
ds
adc
adc
adc
cwtl
and
movsl
mov
jbe
into
loop
and
mov
add
sti
mov
es
or
scas
iret
fdivs
enter
outsl
dec
inc
fwait
sarb
xchg
jg
mov
add
mov
cmp
jg
in
aad
jns
test
push
add
insl
cmp
push
add
gs
negl
push
out
fisttpl
mov
jbe
mov
cmp
subb
adc
xor
icebp
jns
sahf
xor
and
xor
fwait
cli
or
sbb
pushf
sub
mov
dec
je
add
imul
das
push
jmp
in
aam
int3
push
pop
test
in
adc
inc
and
pop
pop
daa
movsb
inc
subb
mov
push
dec
push
popa
insl
dec
inc
je
mov
xchg
xor
pop
mov
rcrl
push
ljmp
mov
push
cmp
jo
adc
pop
cmpsl
and
or
mov
jbe
aad
enter
rclb
push
xor
adc
mov
adc
sbb
adc
les
or
outsl
sbb
adc
aaa
xor
nop
push
xchg
aam
lds
mov
or
cmp
nop
adc
out
xor
or
lahf
insb
xor
dec
dec
cmpb
adc
xchg
hlt
loope
jp
shrb
sbb
lea
xor
add
jo
int
popa
ret
dec
addl
and
cmp
aad
jo
arpl
push
jge
shlb
push
mov
and
dec
mov
lcall
lahf
xor
sysret
call
pop
xor
inc
inc
mov
lods
mov
sub
jo,pn
adc
or
and
in
cmpb
orb
mov
fwait
cwtl
jns
lock
outsl
add
cmove
inc
and
jmp
add
add
jl
add
push
inc
add
xor
xor
in
pop
call
shlb
jno
ret
daa
mov
mov
orb
cmpl
xor
lret
mov
or
push
outsb
cmpsl
stc
cwtl
mov
mov
pop
push
add
orl
pushl
inc
add
aad
outsb
and
jg
inc
jne
leave
test
shlb
xchg
out
mov
inc
nop
dec
xchg
dec
cmp
out
xor
call
das
mov
fwait
pop
cwtl
add
sub
mov
test
xchg
cs
and
mov
mov
loopne
xchg
jg
dec
faddl
pop
and
nop
push
rolb
xlat
psubb
adc
sub
pop
push
dec
add
fildl
fdivl
xchg
and
adc
adcl
in
xor
out
in
sbb
dec
adc
add
les
push
mull
add
or
lea
add
fstpl
pop
add
inc
mov
jecxz
pushf
sarb
cmpsb
add
cmpsl
add
lods
or
xchg
lea
mov
icebp
jle
xchg
adc
or
in
rorb
jo
and
push
inc
mov
or
sbb
test
cmpsb
xor
ret
test
shrb
cmp
test
fnstsw
push
stc
fistps
jp
sub
cmpl
jle
inc
mov
push
hlt
jne
testb
adc
iret
and
adc
cmpsl
lea
mov
adc
pop
test
sbb
dec
sub
add
or
icebp
loop
aam
mov
xor
hlt
or
adc
das
add
push
and
fsubs
loopne
movl
dec
jno
dec
sbb
nop
fcompl
mov
cmp
add
addr16
rolb
mov
mov
add
mov
inc
out
dec
sub
add
sbb
add
push
inc
add
pop
fcoms
inc
add
push
lahf
fwait
xor
pusha
cmp
jp
xchg
jno
inc
adc
cmpsl
xor
or
inc
cmp
mov
mov
add
adc
pop
or
imul
data16
sub
inc
loopne
aam
imulb
push
mov
adc
mov
sub
cmpsl
loop
outsl
mov
mov
dec
mov
and
mov
and
and
mov
in
idivb
lret
stos
divb
add
xchg
je
ret
inc
sub
mov
pop
jne
add
repnz
jnp
add
pop
push
movsl
daa
mov
fisubl
xchg
jbe
add
mov
jmp
sub
add
mov
jne
ja
and
in
hlt
lods
stc
aad
mov
and
lock
add
aam
je
inc
repnz
enter
add
cmc
adcb
add
mov
pop
mov
into
dec
nop
cmp
adc
sub
inc
addr16
mov
push
shll
es
cmp
sbb
xlat
loop
xchg
jbe
pop
or
cmp
jae
fcompl
add
cmp
ja
or
jl
fcompl
adcl
in
loopne
add
imul
push
xchg
inc
mov
push
clc
xor
lret
sub
sub
inc
inc
sub
lea
mov
or
lods
andl
pusha
adc
ret
fwait
cmp
xchg
cmp
or
or
xchg
pop
dec
testb
fdivrs
out
insl
sbbl
and
shrb
push
movsb
outsb
sub
add
jmp
add
pop
jmp
push
mov
sub
or
ss
sub
or
pop
je
clc
loopne
inc
adc
cmp
jo
adc
pop
sbb
ss
mov
push
mov
add
push
stc
inc
add
inc
into
pop
mov
mov
scas
push
popa
pop
and
int3
push
sbb
push
jbe
or
push
add
imul
int
mov
cmp
or
xchg
sahf
negl
xor
inc
bound
aad
out
cmc
inc
lahf
je
and
and
pushf
lock
daa
add
and
cli
fimuls
lock
imul
popf
shr
movsl
frstor
xlat
dec
ficoml
add
and
ficomps
add
dec
add
pushf
mov
mov
xor
clc
xchg
xchg
stc
ret
jg
add
or
or
and
sbb
lea
mov
fdivr
rolb
fbld
and
push
and
lock
add
sbb
sbb
xchg
sub
loopne
ffreep
add
cmp
jne
rorb
dec
cltd
fisttps
pop
js
xor
dec
mov
clc
and
inc
sbb
and
adc
jne
mov
inc
mov
cmp
dec
or
gs
negb
push
cmp
jae
jne
xchg
je
idiv
add
enter
cmp
jge
push
sbb
repz
push
dec
push
or
sub
imul
and
addr16
mov
pop
add
mov
mov
mov
int
into
pop
sub
add
jne
or
xchg
add
enter
pop
pop
fwait
adc
mov
cmp
inc
or
xor
shlb
jne
mov
jne
inc
push
fwait
and
arpl
sahf
enter
and
aaa
inc
imul
add
sbb
sub
mov
or
imul
andb
ds
pop
or
ss
sarb
ss
imul
test
lcall
push
cmp
mov
jge
pop
idivl
loop
inc
add
andb
outsl
cmp
pop
or
stos
sbb
jno
mov
xchg
outsl
xlat
or
add
adc
xor
add
push
pop
or
ret
loop
dec
jl
inc
mov
mov
lods
or
lea
test
xor
fldl
leave
insl
pop
ljmp
mov
rclb
loopne
and
test
or
js
mov
aam
push
bound
pop
adc
inc
sbb
out
cmp
inc
push
lds
pop
dec
add
dec
push
popf
pop
popa
scas
nop
add
lcall
js
test
and
push
cmovl
lock
mov
cmp
mov
add
pop
push
subb
sub
sahf
or
xorl
sub
adc
cmp
notl
push
imul
sbb
cltd
mov
and
xchg
test
ds
jns
int
pop
jecxz
fwait
mov
int
pop
rcrb
mov
pushf
insb
jns
xor
push
xchg
jne
pop
xchg
cmp
xchg
jp
inc
push
and
stos
and
cld
jmp
in
jne
inc
mov
push
subl
cmp
scas
test
icebp
and
pop
adc
sbb
add
push
xor
in
fs
mov
cmp
pop
mov
pop
daa
daa
cmp
cli
popa
fnstcw
and
and
into
mov
mov
inc
and
pop
stos
jae
addr16
cmp
aas
mov
adc
lds
mov
jbe
pop
mov
adc
movsb
or
dec
es
inc
stos
test
push
inc
dec
cmp
cmp
adc
mov
push
pop
pusha
push
out
jne
dec
imul
sbb
push
mov
rorb
jne
and
push
lods
inc
and
subb
push
xchg
int3
push
nop
push
push
cmp
movsb
bsf
je
adc
and
inc
iret
sub
cmp
sub
add
jbe
push
dec
sub
and
dec
mov
pop
shll
aad
cwtl
je
pop
enter
icebp
es
in
pop
cmp
pop
aaa
xchg
cmpsl
imul
lds
fiaddl
add
add
xchg
jl
dec
cmp
rclb
jns
or
adc
roll
inc
aam
sbb
mov
jmp
aam
popa
lds
shlb
add
lcall
add
test
sbb
jo
shr
inc
pop
adc
fimuls
inc
insl
add
adc
push
adc
push
loop
js
xchg
push
lods
mov
sbb
imul
pop
and
adc
and
call
xchg
movsb
adc
mov
sbb
jnp
jmp
add
inc
sbb
add
cmp
or
xor
jne
test
insb
insb
popa
adc
lods
or
xchg
mov
popa
fldl
outsb
add
adc
inc
sub
test
dec
andl
ss
mov
mov
inc
aam
sbb
dec
cwtl
jnp
scas
and
add
push
loope
pop
repnz
add
adc
pusha
mov
js
mov
movsb
je
dec
or
and
mov
pushf
mov
mov
int
mov
jmp
push
stos
xchg
mov
push
jmp
pop
lcall
jbe
mov
push
shr
test
mov
dec
ret
cmp
push
mov
mov
test
hlt
mov
pop
dec
test
mov
push
sahf
mov
sub
xor
mov
dec
jp
and
imul
les
sbb
ret
mov
outsl
fidivs
mov
sub
mov
cmp
push
cmp
mov
xchg
lsl
hlt
cmp
cli
stos
or
push
sub
inc
add
mov
jl
cmp
sbb
repz
je
mov
lock
aam
mov
in
cwtl
inc
or
sub
call
adc
lods
out
sub
pusha
repnz
jo
jg
xor
sbb
push
aas
cmpsl
mov
movl
jecxz
sbb
or
add
dec
sub
add
cmp
sbb
and
jbe
imulb
or
adc
pop
add
imul
lcall
sub
iret
and
or
int3
xchg
lea
or
jo
mov
movsl
test
cmp
or
andb
adc
aaa
push
xor
les
jl
pusha
repnz
push
popa
lahf
fsubrs
inc
and
xchg
sub
xchg
sbb
cmp
xor
shrl
ficomps
icebp
jnp
push
out
testb
push
or
pop
and
sub
pextrw
test
inc
fldt
inc
or
mov
or
sbb
daa
lea
out
or
mov
dec
fiaddl
movsl
cmp
adcb
dec
adc
jo
or
out
add
cmp
cmc
into
sub
lcall
mov
or
jl
pop
xchg
jo
cmpsl
movsb
add
xor
test
mov
mov
pop
mov
insb
jnp
jge
push
sub
sbb
out
mov
mov
inc
fs
mov
sub
cmc
fmuls
insb
push
inc
sbb
cmp
test
sbb
or
adc
cmp
sbb
adc
xchg
dec
push
or
push
jno
mov
int3
sub
inc
and
lea
push
pop
add
and
xchg
in
jl
xchg
cmc
ficomps
insl
arpl
icebp
pop
dec
xchg
mov
in
sbb
xchg
hlt
jecxz
test
mov
cmp
push
test
sub
adc
lea
ret
xchg
xor
xchg
add
les
js
mov
dec
mov
adc
mov
pop
sub
cs
cmp
push
cmp
nop
sbb
ret
xchg
fcomp
adc
xchg
fldl
fcomip
add
adc
add
push
cmc
mov
inc
adc
repnz
push
mov
dec
dec
arpl
outsl
shlb
mov
mov
mov
insb
add
sub
push
inc
movsl
imul
lahf
enter
insb
ljmp
xlat
jne
pop
jmp
loopne
pop
notb
mov
sbb
pop
dec
je
sarb
loope
push
add
sub
mov
adc
add
nop
in
call
imul
call
inc
push
pusha
inc
inc
std
adc
daa
pop
push
sbb
stc
xchg
inc
dec
or
fcomps
ds
add
jbe
fimuls
sbb
fdiv
adc
or
stc
test
jno
jo
jmp
andb
lock
cmp
sbb
or
mov
imul
insb
dec
outsb
ret
push
add
mov
test
pop
xor
cmp
inc
xor
xchg
leave
adc
test
dec
jmp
std
pop
mov
inc
scas
lock
mov
repz
daa
adc
add
inc
ffreep
xchg
add
popa
in
cmp
cmp
or
mov
cmp
adc
mov
push
push
xchg
js
clc
sarl
push
and
or
push
es
mov
xchg
xchg
push
inc
pusha
and
outsb
mov
mov
jno
imul
sub
fdiv
sub
lea
testb
setne
mov
out
add
fmull
pusha
fistpll
notl
cltd
cmp
sub
mov
mov
mov
or
mov
xchg
xor
push
add
and
jmp
add
lret
inc
out
sbb
pop
rcll
pop
bsr
pop
pop
and
inc
out
movsb
push
je
dec
and
dec
push
xchg
and
and
push
and
inc
pop
daa
dec
push
push
leave
or
adc
cwtl
and
or
nop
jbe
cmp
sbb
sub
je
xor
push
cmp
and
dec
jbe
out
nop
sub
push
ret
add
dec
sbb
mov
mov
imul
xchg
xchg
popa
xor
push
add
sarb
and
cmp
rol
popf
test
or
roll
cmpb
mov
test
pop
add
outsl
push
add
inc
jae
dec
adc
imul
jo
push
mov
jmp
cs
xchg
or
mov
cmp
mov
push
cs
xchg
mov
push
inc
out
adc
cmp
sub
cmp
icebp
call
mov
mov
xchg
orb
xor
push
test
sbb
jae
cmp
cmp
dec
add
insl
fstpt
lea
lahf
mov
xchg
je
lods
leave
lahf
call
out
mov
xor
jecxz
sub
es
inc
fisttps
in
xchg
pushf
sub
sbb
or
or
pop
adc
jecxz
outsl
mov
dec
inc
add
test
xchg
imull
adc
cmpsb
lea
dec
inc
dec
mov
lret
es
insb
out
clc
push
jge
jmp
push
test
dec
sahf
adc
mov
ja
adc
int
dec
aam
ds
pop
in
dec
jg
add
in
repz
aam
test
pusha
cmpl
sub
xchg
adc
push
addb
or
enter
adc
sub
and
push
cmp
push
mov
jne
ret
mov
sub
add
jl
aam
je
xchg
test
sub
loopne
sub
es
test
jnp
mov
nop
sbb
inc
jmp
rcrb
jb
adc
pusha
test
test
lea
fs
cmp
cmp
and
sub
scas
sbb
shl
xchg
aad
or
dec
and
addr16
pop
jp
or
adc
orl
fdivr
popf
cmp
jecxz
push
int3
mov
leave
hlt
jne
and
sahf
or
or
rorl
scas
jb
mov
je
or
test
mov
inc
sbb
cmp
xlat
and
sub
jmp
sub
cmp
scas
loop
sbb
mov
dec
or
data16
mov
push
sbb
aad
mov
movb
fcompl
add
adc
or
mov
push
adc
sub
shll
lea
movsb
adc
lods
dec
in
clc
mov
cmp
pop
cmp
pop
int3
add
loopne
xchg
or
insl
inc
cmp
jg
pop
dec
add
jmp
dec
push
inc
add
add
inc
popa
sub
out
xor
ret
or
xor
push
bound
cs
cmp
or
or
rorb
xchg
cwtl
push
test
movsb
lods
ret
dec
mov
rclb
pop
inc
lcall
fstl
xchg
sbb
pop
gs
mov
or
dec
int3
imul
ja
loopne
and
push
popa
lods
cld
jno
xor
push
dec
adc
in
jmp
sub
cmp
clc
mov
or
xchg
lea
fldl
cmp
cli
cmp
imul
sbbl
iret
adc
dec
mov
clc
xor
mov
or
lods
push
or
les
loope
les
push
or
adc
fs
inc
shrb
test
adcb
add
add
loop
lea
jmp
loopne
and
adc
pop
sarl
pop
or
adc
mov
or
nop
rcll
pop
out
dec
lock
pusha
insb
sbb
push
je
and
add
test
add
push
jns
jb
or
adc
pusha
testl
je
push
xor
and
out
push
fldenv
or
adc
bound
subb
nop
add
sub
mov
pop
jne
sub
fmuls
cmpsb
xor
call
aam
inc
outsb
add
les
ds
mov
push
pop
add
leave
mov
inc
add
mov
cmp
sbb
shlb
jnp
or
and
fnstenv
in
push
inc
mov
sbb
mov
test
and
int
mov
or
jmp
inc
or
pop
push
jbe
jo
div
pop
sub
popa
jns
pusha
les
jb
push
push
mov
mov
cmp
ret
rorb
je
pop
pushf
cwtl
stc
cmpl
xchg
addb
rorb
mov
cvtps2pi
ret
jnp
cmp
push
and
push
dec
test
pushf
cmp
incl
decl
hlt
rcll
add
jb
add
mov
adc
pop
inc
push
and
jg
add
mov
add
dec
int
lret
xchg
dec
xor
add
cmp
lods
mov
jae
pop
xchg
push
fstpl
cltd
mov
dec
gs
pop
mov
clc
or
mov
cmp
insl
fs
cmp
or
stos
add
adc
aam
adc
sub
and
divl
mov
outsb
and
mov
xor
mov
sub
aam
cwtl
inc
outsl
call
movsl
add
pushf
jecxz
fildl
cmp
xor
push
mov
out
pop
push
prefetch
aam
or
pop
pmaddwd
jae
pop
aaa
push
inc
cmp
sub
and
rcll
lret
loopne
adc
push
push
push
add
or
in
mov
dec
je
push
in
xchg
pusha
jb
push
outsl
popf
adc
js
jmp
arpl
xor
and
or
fstpl
roll
and
shr
mov
ljmp
jb
stos
out
sub
aaa
fcoms
shrl
xor
sbb
and
xor
sub
lods
or
push
xchg
mov
sbbl
xchg
push
test
xor
mov
or
icebp
sub
adc
and
mov
cmp
sbb
sbb
add
mov
lock
add
fcoms
pop
xor
scas
xchg
push
mov
clc
add
mov
fwait
insb
add
pushf
dec
jno
sbbb
add
in
and
negl
dec
push
js
outsl
enter
dec
in
xor
std
jg
stc
js
sub
mov
pop
jmp
repnz
dec
in
clc
push
jo
sbb
je
nop
inc
mov
mov
pop
pop
cmp
mov
out
push
fnstcw
imul
mov
mov
repz
mov
jne
push
push
xchg
popa
jns
pushf
test
aam
dec
mov
dec
pop
test
or
inc
dec
inc
dec
or
or
sbb
add
mov
dec
sub
lret
insl
nop
or
mov
cmpsl
mov
fnsave
mov
push
dec
and
jl
lea
jno
mov
sub
fcompl
repnz
jecxz
sbb
or
rcrb
and
adc
int
int
ret
mov
out
or
and
in
test
jecxz
cld
push
add
and
push
mov
jg
fisttpl
mov
xor
dec
movl
adc
dec
fisubrl
in
dec
dec
outsb
rclb
jno
jmp
scas
inc
push
clc
fisubrs
cmp
je
mov
sti
adc
mov
lcall
stc
ret
push
lea
icebp
popf
adcb
and
cmpsb
mov
test
push
or
cmp
push
cmp
push
xlat
mov
test
or
pusha
inc
pushf
lock
add
jmp
movsb
jno
sub
adc
lret
push
and
or
int3
xchg
cld
and
insl
adcb
add
cvtps2pd
sbb
js
cld
in
lock
xlat
mov
xor
das
cld
push
push
cmp
roll
fidivrl
push
add
inc
xor
add
adc
push
push
jne
mov
fisubrs
pushf
pop
push
lahf
adc
sbb
hlt
add
insb
faddl
enter
xorl
shll
mov
out
and
leave
inc
pop
add
cmp
push
pop
push
mov
subl
loopne
inc
add
ret
insl
je
mov
out
outsl
fisttps
sbbl
fdiv
rolb
frstor
dec
pop
subl
or
sarb
aaa
cmp
jle
nop
repz
pusha
sub
lahf
push
rcr
arpl
arpl
xchg
mov
add
popa
inc
insb
sub
es
test
jb
dec
sub
test
push
sub
idivb
xorb
or
cwtl
loopne
cs
js
sbb
lock
mov
push
test
pop
aaa
insl
aam
push
stc
icebp
and
inc
or
outsl
mov
pop
mov
inc
xchg
and
or
push
push
add
and
xchg
es
inc
nop
and
pop
daa
add
sub
inc
inc
in
cmp
nop
inc
or
inc
and
or
push
sbb
adc
aam
pushf
shlb
into
lock
test
ljmp
out
clc
cmp
inc
push
add
xor
xor
mov
jmp
pop
jecxz
cmp
addl
mov
daa
mov
lret
inc
or
add
mov
sbb
scas
js
sub
sub
push
mov
dec
mov
inc
jo
push
adc
shlb
nop
sub
push
add
jae
or
add
cmp
add
sub
or
adc
es
fimuls
push
adc
and
xor
push
cmpsb
sbb
aad
or
push
pop
jne
test
ret
popa
mov
pmaxub
arpl
mov
and
nop
sbbb
dec
adc
push
xor
loopne
fstps
orl
insb
mov
add
adcl
mov
mov
cmpsl
pushl
mov
adc
out
pushf
mov
xor
push
cmp
add
and
add
or
movsb
inc
ud0
push
andl
roll
mov
loop
aaa
test
stos
mov
les
cmp
inc
data16
xchg
hlt
clc
fists
fsubl
adc
loop
mov
jbe
push
sahf
pop
cmp
inc
cmp
or
je
gs
cld
ja
mov
jle
add
or
data16
xor
and
mov
add
lock
loop
mov
out
xor
mov
push
jo
pop
fildl
aaa
push
insl
test
add
xchg
inc
dec
jb
mov
mov
adc
jecxz
add
ret
pop
dec
xor
call
push
cmp
data16
insl
xor
ret
jae
arpl
add
cmpsl
and
push
mov
and
push
add
enter
test
push
inc
outsb
sbb
and
mov
push
je
add
sbb
fnsave
aas
ss
mov
les
pusha
dec
mov
push
fcoml
adc
adc
dec
inc
mov
push
xchg
xchg
push
leave
mov
push
leave
mov
cmp
fs
ljmp
pushf
pushf
cmpsb
xchg
in
add
adc
das
push
or
push
das
dec
cmp
ret
cmpb
mov
and
fadds
adc
mov
dec
sub
add
mov
cs
add
loop
rorl
inc
movl
jl
xchg
test
inc
ljmp
dec
in
call
mov
cmpsl
repnz
mov
imul
fcmovb
in
or
imul
dec
iret
shlb
jle
cld
cmp
dec
imul
andl
or
sub
push
push
ror
push
sub
add
pop
in
sub
adc
adcl
je
and
and
pop
rcrl
jg
mov
mov
adc
pop
sti
nop
pop
sbb
or
or
push
sahf
inc
adc
xlat
sub
and
clc
lods
icebp
addr16
arpl
inc
fldcw
add
in
dec
adc
out
and
push
and
pop
pop
pop
das
pop
mov
mov
jg
or
xchg
xchg
fistpll
sbb
mov
jne
dec
adc
adc
daa
out
aaa
test
in
mov
imul
cmc
daa
adc
dec
je
cs
mov
pop
lods
call
das
mov
jmp
mov
pusha
xchg
jne
xor
rorl
ds
shlb
adc
pop
mov
mov
cmp
xchg
jo
pop
clc
arpl
outsb
lock
pxor
push
xchg
mov
adc
adc
sbb
xchg
sbb
or
les
ret
cmpsb
pop
hlt
adc
cmp
jno
movsb
enter
mov
inc
cwtl
rol
dec
xchg
nop
jnp
sbb
push
push
add
aad
nop
fiadds
add
lret
mov
push
ret
sub
cld
pop
jge
push
call
xor
dec
das
cmpsl
insl
inc
ja
loopne
push
adc
xchg
sub
ret
xor
xor
insl
and
sahf
mov
pop
or
add
pop
jnp
xchg
push
pusha
and
pusha
and
lea
clc
cmpsl
roll
in
rolb
pop
repz
mov
add
std
push
mov
into
imull
pop
xor
jmp
lods
xchg
push
daa
or
jne
test
daa
add
push
in
outsb
add
inc
bound
pop
push
xor
in
je
adc
or
add
push
add
lods
mov
mov
je
clc
or
arpl
sbb
es
or
rep
push
hlt
mov
push
push
inc
and
pop
jmp
cmp
sub
inc
push
gs
push
jl
shrb
pushf
or
insb
or
and
xor
push
jae
sbb
inc
imul
testb
inc
add
push
sub
mov
pop
fstp
fnstenv
mov
mov
add
cmp
or
in
lcall
scas
push
scas
in
inc
jg
and
ret
sbbl
dec
sahf
add
push
pop
in
enter
add
mov
add
pop
ljmp
rorb
mov
inc
sbb
mov
sbb
ds
repnz
pusha
shrb
sbbb
and
shlb
jg
pusha
shlb
dec
push
pop
scas
mov
mov
addl
cmpsb
xchg
mov
ss
mov
loopne
sbb
add
inc
pop
and
jno
lock
pop
adc
shll
rorl
xchg
lret
push
xchg
dec
pop
cmpsb
xchg
popa
dec
pop
sti
popl
dec
aaa
or
add
add
lock
and
js
orl
and
jno
fadds
lcall
adc
daa
mov
pop
jo
mov
jp
xor
lahf
pop
pop
int
sub
dec
shll
mov
scas
pop
testl
mov
or
popa
push
add
aaa
cmpsl
inc
test
repz
cmc
ret
lock
jae
jns
in
inc
call
push
imul
add
or
test
inc
mov
orl
add
mov
push
or
int
push
mov
xor
xchg
and
movsb
imul
or
mov
and
push
sbb
pop
push
sbb
inc
or
sbb
in
add
mov
adc
in
daa
lahf
inc
or
sub
push
sub
cmp
into
sbb
adc
in
out
push
xchg
mov
inc
sub
push
inc
pop
das
cmp
cmp
push
dec
lahf
push
mov
sbb
cmp
and
mov
cs
loopne
std
sub
xor
add
in
inc
add
or
mov
jb
jae
pop
cmp
orb
roll
dec
daa
andl
daa
ds
sbb
cwtl
xchg
stos
scas
or
movsl
orl
scas
stos
jns
rcpps
mov
or
cmp
loope
je
cmp
push
mov
adc
dec
enter
adc
addb
and
mov
lods
jno
sbb
jo
cmp
insl
push
iret
inc
lods
xor
xchg
adc
or
dec
sbb
fiaddl
mov
jb
test
push
push
push
cmpsl
and
aam
sub
sub
pushf
dec
cmp
add
mov
pop
pop
decl
sub
xor
sub
cmpb
in
pop
mov
sub
xchg
pop
adc
xlat
cli
addr16
jle
mov
addb
adc
xor
cmc
nop
jg
dec
jae
jmp
imul
popf
mov
adc
fdivrl
push
push
mov
jnp
movsb
adcl
cltd
or
mov
repnz
ret
inc
push
adc
sub
pop
cs
or
sbb
add
test
sub
or
es
inc
jne
inc
mov
adc
mov
or
inc
ljmp
add
dec
xor
addb
outsb
pop
or
out
sub
ret
mov
jmp
dec
leave
movsb
inc
lcall
faddl
add
push
mov
dec
add
jb
or
pushf
or
mov
test
movsb
adc
push
push
push
in
orl
mov
test
xor
xor
mov
jg,pn
jge
lock
push
je
adc
pop
jmp
add
daa
adc
mov
por
out
push
adc
or
jl
dec
cmp
adc
dec
xchg
daa
sbb
mov
imul
sub
in
inc
push
jle
xchg
or
jo
dec
push
sbb
xor
push
por
add
sbb
adc
ss
movsl
aas
jns
inc
xor
lods
popa
dec
xor
or
out
js
outsb
aad
mov
or
test
es
psubw
or
cmpsl
inc
inc
jne
cmp
es
aam
add
push
cwtl
scas
add
test
dec
mov
sbb
adc
dec
add
jmp
iret
cmp
push
sbb
inc
dec
xor
mov
sub
jecxz
cmpsl
mov
sbb
xor
adc
push
popa
mov
xchg
inc
add
push
pop
xchg
and
xchg
add
inc
mov
ret
and
jo
scas
mov
push
lods
mov
test
lods
leave
mov
inc
stos
push
test
mov
sub
mov
adc
and
push
pop
jns
cmp
xchg
nop
fwait
sbb
pop
mov
out
leave
mov
lds
pushf
or
addb
das
or
lds
pop
sbb
rorl
adc
dec
jmp
add
mov
push
insb
outsb
mov
in
fstl
test
addr16
mov
or
lret
pusha
or
call
ds
or
inc
add
push
inc
imul
xchg
int
cmpb
es
add
jecxz
fnop
sti
fisttps
test
or
nop
push
call
nop
aam
add
jb
in
jbe
pop
leave
add
inc
sbb
inc
std
sub
pop
cmp
sub
inc
ret
testb
je
push
cmp
cmp
test
inc
xchg
imul
movsl
in
daa
mov
push
insb
fisttpl
mov
sub
and
lret
xchg
daa
aas
and
mov
mov
das
pop
pop
sub
jecxz
lds
jo
mov
add
pop
ret
imulb
add
pop
xor
jne
mov
js
mov
push
push
cmp
inc
adc
mov
test
xor
or
xchg
pop
mov
xchg
or
push
cwtl
lods
dec
cmp
xor
lea
xchg
jge
adc
movsb
gs
push
xlat
pop
adc
rclb
fwait
cmp
shlb
inc
push
xor
insl
xor
and
daa
adc
enter
or
mov
scas
in
sbb
sbbb
out
cmpb
data16
int
pusha
or
loop
insb
scas
lea
loopne
ljmp
gs
cmp
push
pop
pop
xchg
cmp
sbb
push
sub
inc
jne,pn
subl
or
mov
popf
mov
mov
gs
pop
push
ja
les
call
sbb
dec
xor
cmp
stos
mov
pop
outsl
sub
outsl
xor
nop
bound
lcall
or
sub
sub
nop
test
adc
mov
jbe
mov
add
mov
in
mov
or
mov
cmp
jge
and
mov
lcall
or
jle
aas
mov
mov
fcom
ds
and
xchg
or
wrmsr
pop
es
mov
add
je
mov
push
xchg
insb
nop
inc
add
jo
push
idivl
test
sub
push
notl
and
pop
add
inc
notl
scas
fimuls
sahf
xchg
popf
ja
add
add
dec
sub
xor
in
movsl
orb
out
rcrl
xor
xchg
int
imul
jo
lea
xor
inc
dec
out
imul
mov
in
add
xor
cmp
or
aam
fstl
cmp
or
push
pop
pusha
es
adc
push
adc
add
xchg
daa
sbb
pop
jnp
mov
mov
mov
test
xor
pop
shlb
addl
subb
mov
inc
or
das
les
loop
je
sbb
pusha
shll
fcmovbe
cmpsl
mov
jmp
ja
add
mov
pop
push
sub
dec
pop
or
sahf
es
or
jo
sbb
dec
push
dec
adc
adc
inc
inc
lock
sub
dec
insl
sub
ss
sbbb
out
icebp
adc
aad
add
ljmp
aad
xor
jno
cli
loope
dec
aas
inc
cs
mov
jne
inc
xor
shlb
ret
xor
notl
xchg
imul
rcrl
dec
jp
mov
mov
sub
pop
imul
mov
lock
sar
or
push
nop
shrl
push
inc
loop
xchg
cmpsl
dec
jbe
icebp
mov
wbinvd
cmpb
adc
mov
xor
outsb
fsub
jge
icebp
sbb
xor
mov
push
dec
cwtl
nop
in
hlt
lahf
pop
sbb
and
push
pcmpeqd
or
sub
movsb
in
pop
aas
pop
xor
and
push
nop
cmp
test
or
add
je
loop
call
and
mov
jl
xchg
dec
or
in
in
sti
xor
jle
push
pop
inc
jo
call
bound
mov
sbb
cmp
xor
into
or
adc
mov
leave
xchg
cmpsb
mov
or
inc
lcall
xor
mov
xor
xchg
lret
push
fs
and
pop
stc
mov
xor
add
cmpl
jle
add
notl
shrb
pop
in
or
cmpl
mov
ret
inc
mov
lret
mov
dec
lea
in
xor
jge
dec
sbb
inc
imul
mov
lret
scas
xchg
push
data16
and
add
sbb
jb
sub
lods
movsb
lock
in
sbb
rolb
jno
imul
adc
clc
cmp
or
xor
dec
movsl
in
or
call
mov
je
jne
or
int3
ss
sbb
fmul
les
ror
cmp
in
cmp
xchg
xlat
or
dec
dec
das
add
insl
mov
mov
mov
out
js
pop
mov
add
push
call
subb
pop
loope
mov
cmp
pop
add
pushf
lea
adc
jle
insb
push
mov
stc
sub
add
mov
sub
int
inc
mov
add
pop
add
add
add
mulb
xchg
mov
mov
and
out
or
test
mov
mov
mov
dec
lcall
jbe
and
ss
add
sarb
scas
adc
loopne
push
fiaddl
inc
cs
jle
repz
mov
and
jle
adc
jmp
sbb
mov
mov
clc
push
sub
mov
xchg
dec
push
test
mov
push
imul
insb
xchg
xchg
dec
or
add
pop
movsb
inc
cmp
jmp
cmpsb
or
jnp
dec
test
add
jle
sbb
inc
dec
fsubl
shll
movsb
imul
mov
lcall
sbb
aam
aam
les
sub
dec
dec
mov
test
add
or
rcrb
inc
outsl
push
add
ficoml
jns
and
loopne
ret
dec
dec
add
or
rolb
pop
fsubl
fsub
mov
je
shrb
cmp
shrb
mov
dec
loopne
adc
pop
mov
xchg
jge
or
cs
dec
xlat
int3
add
in
add
xchg
add
sub
mov
inc
iret
outsl
add
mov
rcrb
int3
aaa
adc
fnstcw
adc
daa
test
push
shlb
mov
sub
jne
mov
cs
add
or
scas
gs
xchg
gs
inc
mov
dec
jne
sub
cmp
mov
clc
cmp
add
sub
decl
jne
or
sub
mov
shr
adc
jmp
dec
jne
sbb
xchg
insl
lea
jecxz
add
push
stos
push
add
insb
ja
cld
add
pushf
fbld
or
sub
sub
push
cmpsb
add
xor
imul
clc
nop
cmpsb
jnp
lahf
mov
jg
loopne
push
lcall
pushf
adc
or
mov
and
jno
mov
cmp
pop
mov
fcoml
and
movsb
push
sbb
es
lods
rclb
ss
and
add
adc
add
xor
mov
add
pop
add
sub
aaa
sub
or
rclb
mov
xchg
rorb
in
xchg
addr16
fcmovnbe
fdivrs
xchg
push
mov
out
xchg
xchg
and
cmp
leave
mov
aam
lods
adc
and
testb
in
pop
push
lock
imul
imul
mov
xchg
cmpsb
cmp
cmp
aam
in
bound
add
xchg
mov
adc
add
add
sub
adc
loopne
test
sbb
inc
nop
or
jo
out
lock
sahf
rorb
adc
sbb
add
add
mov
sbb
or
jbe
push
loopne
mov
mov
fwait
test
or
test
and
leave
ret
jmp
sbb
sbb
fs
fxtract
repz
faddl
fcom
movsb
loope
xor
push
add
dec
jge
add
daa
aam
push
inc
das
jmp
cmpsb
ds
push
imul
lea
sub
enter
cmovns
xchg
mov
xchg
inc
cmpsl
test
xor
cld
xor
add
and
scas
xor
call
jmp
fisubl
fwait
sti
out
cwtl
and
inc
sbb
pusha
test
sbb
dec
add
and
pop
and
cmp
repz
insb
and
mov
push
nopl
inc
in
or
push
or
movsl
pusha
jnp
adc
mov
adc
sub
outsl
or
cmp
lcall
in
adc
and
add
shr
xchg
xchg
add
and
pop
das
sub
mov
es
cmp
jl
or
cli
adc
dec
clc
movsb
rclb
les
ret
xchg
push
pop
mov
frstor
jmp
or
pop
dec
pop
sub
sbb
add
adc
div
orl
push
mov
sbb
push
sbb
xchg
cltd
aaa
add
mov
loop
xor
push
movsb
inc
out
fwait
js
cmp
inc
fdivrs
push
pop
or
outsl
sub
es
xchg
ljmp
ja
and
jg
test
add
and
push
xor
push
inc
jns
orb
and
fisttps
jae
and
sbb
daa
mov
shll
or
sbb
xchg
inc
mov
cwtl
js
sub
sbb
jnp
add
pop
sub
add
push
mov
push
dec
or
or
rolb
pop
and
sbb
das
lods
shlb
inc
xor
cmpsl
mov
and
pop
mov
xor
popf
shlb
in
arpl
dec
call
subb
xchg
push
adc
pusha
jmp
push
arpl
ja
adc
add
push
push
xor
addb
and
or
cmp
dec
test
mov
sbb
add
and
add
lret
adc
test
lret
sub
xchg
cwtl
clc
cmp
pop
cltd
cwtl
fs
adc
pusha
repnz
fnsave
inc
xor
dec
arpl
jae
xor
xor
mov
add
cmp
pop
push
loopne
mov
adc
ret
out
incl
in
hlt
pop
pop
fwait
inc
push
insb
add
hlt
add
rclb
sbb
ficomps
addr16
and
xor
sbb
fmull
add
inc
sbb
mov
add
xchg
add
mov
push
bound
mov
cwtl
out
pop
jbe
mov
and
cmp
push
fiaddl
add
cmpl
ret
test
jb
mov
jbe
push
or
pusha
adc
jecxz
sbb
cmp
and
lcall
pop
pop
scas
xchg
add
dec
inc
sbb
gs
push
push
xor
lret
mov
inc
clc
clc
fs
lea
lret
xchg
test
out
daa
and
arpl
mov
push
inc
dec
mov
and
mov
mov
insl
popf
jo
test
or
divl
test
addb
clc
rcl
mov
std
mov
sbb
shrb
push
push
jge
sbb
push
fstpt
movsb
dec
inc
inc
push
xor
dec
call
add
pusha
aaa
inc
ss
jge
cmp
sti
fs
fnstcw
jae
fmuls
push
jo
jbe
ficompl
cmp
mov
xor
push
jle
sub
scas
int
hlt
jle
pop
add
mov
into
mov
jmp
adc
mov
lret
pushf
and
nop
inc
xor
loopne
push
imul
in
scas
cmp
sub
es
cmp
setl
push
xor
pop
push
popf
push
cmp
movl
pop
das
sbb
sub
and
les
subl
mov
or
pop
out
and
adc
pop
test
cmp
fistl
adc
fmuls
cmp
or
dec
out
fldl
pop
xchg
inc
lock
pop
rcl
scas
sbb
lea
das
daa
iret
pop
movl
iret
pop
out
lock
push
inc
cld
mov
jle
fistl
inc
or
push
or
adc
in
andl
cld
sbb
lret
jne
push
jp
imul
in
push
rclb
and
call
adc
int3
inc
sub
in
mov
sbb
js
mov
dec
lock
sub
bound
insl
inc
sbb
shrb
or
lock
adc
push
mov
pop
push
in
pop
or
jb
lahf
icebp
and
lods
movsb
nop
pop
adc
or
dec
push
lahf
push
cli
repnz
mov
popa
jnp
xchg
jl
mov
aas
hlt
sbb
insb
push
mov
push
sub
nop
data16
jo
mov
adc
push
inc
or
rol
and
mov
into
or
mov
push
cmpb
call
mov
es
pop
orb
push
push
cmpb
xor
inc
lds
mov
add
pop
nop
sbb
or
mov
and
xor
addb
enter
push
jo
adc
add
xor
pushf
test
cmp
ja
je
pop
sbb
hlt
xchg
je
loopne
push
add
mov
inc
je
inc
and
push
test
inc
shrb
mov
mov
or
cwtl
je
in
imul
adc
mov
add
and
ja
fstpl
push
fnstenv
jl
mov
sub
xchg
iret
pop
sbb
mov
repnz
xchg
das
add
sbb
iret
cmp
mov
xchg
jl
je
inc
cmp
rclb
mov
cmpl
inc
stos
adc
clc
movsl
and
arpl
push
out
enter
add
pushf
das
ljmp
dec
dec
dec
loope
inc
sub
rcrb
enter
mov
inc
aaa
dec
dec
in
sarb
addr16
jns
jns
out
pop
fsubl
in
cs
stos
dec
adc
xchg
xor
inc
and
out
xor
icebp
add
js
mov
ss
int3
out
jp
adc
cwtl
push
mov
sbb
inc
fs
adc
sbb
ret
dec
jnp
lcall
movsl
push
ret
xor
call
mov
adc
arpl
add
inc
mov
and
jnp
lock
shrl
ljmp
test
xchg
movsb
dec
mov
dec
adc
fistpll
popf
insb
xchg
inc
ret
push
add
mov
clc
jmp
xor
ficoml
inc
pop
enter
pop
les
and
inc
add
add
ljmp
adc
dec
or
inc
sbb
push
add
inc
ljmp
adcb
mov
sbb
lods
fmull
jnp
pusha
and
insb
out
adc
inc
jae
nop
sbb
or
aaa
push
sar
dec
xchg
stos
lcall
inc
mov
inc
cmpsl
push
dec
jne
mov
mov
or
sbb
adc
or
fwait
in
orb
jmp
adc
sub
push
adc
dec
mov
dec
mov
add
add
mov
call
ljmp
jg
push
cmp
add
ret
xchg
xchg
and
or
subl
mov
adc
cwtl
scas
movb
xchg
adc
and
bound
insl
sarl
inc
pop
sbb
dec
insl
mov
dec
loopne
mov
aaa
jbe
add
les
cmpsl
orl
push
and
leave
xor
sbb
mov
cmpl
stc
add
xor
out
ljmp
outsb
sub
pop
lret
jge
popf
insb
mov
lcall
jle
filds
mov
loope,pn
sbb
nop
cmpsb
sub
mov
scas
lahf
jno
cwtl
popa
call
and
cmp
xlat
or
insl
dec
lret
cld
daa
push
shll
add
sbb
pop
out
ljmp
in
jae
mov
add
jne
dec
dec
push
sbb
or
movsb
push
adc
mov
sbb
sub
sbbb
add
lock
adc
addr16
jg
adc
sbb
pop
or
adc
js,pt
push
jne
push
cmc
push
lret
mov
and
inc
adc
add
push
nop
outsl
lods
adc
push
push
and
je
clc
in
fs
xor
movb
dec
push
es
dec
fiaddl
inc
sbb
cmp
jl
jmp
cmpsb
xor
adc
out
jae
pop
push
sahf
shl
jbe
push
adc
aas
out
push
adc
cmpsl
inc
jne
inc
and
nop
add
push
and
or
jne
das
fistps
lcall
and
inc
jns
cmp
inc
in
and
fadds
pop
aaa
pop
imul
mov
sbb
adc
xabort
sbb
sbb
jg
xchg
jl
jle
push
push
int3
data16
jmp
mov
adc
pop
sbb
sbb
or
sbb
xchg
mov
inc
lret
or
popf
or
pop
sub
jo
cmp
or
cmpb
mov
xchg
cmp
cmp
js
stos
loopne
and
sbb
fs
adc
adc
ret
add
pop
sub
fwait
test
imul
stos
sbb
inc
xchg
shrl
dec
mov
add
shlb
lahf
mov
push
outsb
ja
xchg
mov
jne
in
sbb
sub
mov
sub
mov
mov
ljmp
sbb
lods
sub
xor
fildl
jl
mov
movsb
or
or
dec
sbb
sbb
add
mov
adc
out
add
add
incl
inc
add
ljmp
dec
add
xchg
test
or
inc
sbb
cmpsb
mov
test
lock
out
sub
lcall
inc
loopne
and
pushf
pop
aaa
or
arpl
test
loope
scas
clc
imul
inc
adcb
clc
aam
pusha
mov
mov
mov
sbbb
inc
mov
and
and
pushf
imul
ret
or
je
adc
hlt
int
scas
ret
adc
add
lods
xor
ficoml
and
xlat
sbb
mov
adc
sub
dec
push
lret
mov
mov
mov
rolb
cmc
mov
test
and
lahf
and
mov
adc
push
test
cli
mov
call
push
xor
rcrb
int
add
sub
sbb
rorb
mov
loopne
push
lea
popa
sub
adc
push
dec
cmp
xor
cmpsb
sub
lret
inc
push
inc
inc
or
addr16
pop
subl
xlat
fcom
sbb
add
mov
push
push
popa
pop
sbb
mov
sub
fldl
addb
dec
and
push
inc
jnp
hlt
test
pop
testl
dec
inc
cmpsb
pushf
sbb
push
xlat
jo
xchg
movsb
pop
sub
mov
sub
adc
xchg
and
lods
mov
or
mov
adc
inc
add
fidivl
out
cli
add
add
sbb
xchg
mov
nop
inc
ret
mov
cmp
notl
and
inc
xchg
aaa
dec
pushf
mov
lea
jne
aad
mov
andb
pop
ficoms
out
rclb
push
push
mov
inc
inc
dec
xchg
inc
movl
loopne
inc
xor
or
orb
or
or
add
and
mov
lcall
add
jl
es
gs
add
ret
inc
dec
inc
add
andl
test
out
ret
xor
ja
or
movl
xor
sbb
add
mov
pop
lock
or
pop
adc
aad
mov
mov
jo
add
or
jmp
mov
movsb
in
cmp
mov
daa
ja
dec
xchg
ds
les
add
mov
mov
or
or
sbb
add
jge
or
ss
inc
xchg
jne
and
or
sbb
dec
and
pop
push
and
sbb
mov
pop
aas
push
shlb
sbb
xor
add
sbb
adc
xor
jg
test
cmp
and
add
and
xchg
adc
les
sub
enter
sub
cwtl
dec
xchg
add
push
dec
sub
cmp
jge
das
sub
jmp
or
stos
jl
add
jl
or
jecxz
sbb
push
xchg
jg
idivb
or
mov
jl
scas
sbb
and
scas
ret
sbb
or
xor
sub
call
jp
fwait
pop
push
fstpt
inc
push
sub
mov
add
push
inc
pop
sub
test
es
lods
or
inc
sbb
std
nop
mov
add
rcrl
les
fidivrs
nop
add
das
and
sub
xor
pusha
sub
pop
mov
fldpi
jb
add
add
jp
sbbb
sub
and
mov
lret
sbb
mov
lock
aaa
inc
aam
xor
test
and
stc
mov
jo
pop
jb
or
test
les
mov
pop
filds
inc
test
or
mov
push
cmp
sub
add
cmpl
lahf
mov
lret
adc
nop
jmp
in
shll
adc
mov
lock
fs
lock
pop
push
mov
xor
jle
mov
gs
lcall
and
fs
fldcw
scas
rolb
dec
sub
inc
sbb
mov
pop
pop
mov
pushf
mov
call
ret
fs
ss
pop
test
les
inc
inc
add
xchg
sbb
outsb
mov
mov
bound
jo
fisubrs
mov
xor
repz
pop
inc
mulb
jmp
pop
xor
jl
pop
pop
adc
sub
mov
inc
inc
popf
mov
xchg
test
xchg
or
or
daa
lock
es
lea
pop
loope
adc
test
movsl
clc
pop
add
sbb
inc
sbb
lock
stos
and
lock
cmp
jle
jne
test
push
inc
sbb
and
ficompl
add
subl
jl
loopne
lret
cld
push
xchg
clc
pop
push
insb
in
in
cmp
and
test
cmp
push
lea
insl
in
sbb
insl
mov
insb
mov
pop
add
adc
std
notb
scas
add
adc
and
test
add
in
cmpsb
mov
or
and
push
mov
cld
and
push
mov
jbe
dec
ss
mov
jae
lods
jmp
pop
jle
rorl
push
inc
jge
data16
cmpsb
adc
lods
fmull
jb
leave
out
and
mov
sub
or
cmp
repz
pop
out
mov
fisttpl
ret
mov
sti
shl
enter
arpl
enter
roll
js
test
push
loopne
lods
popf
adc
add
xor
test
push
lds
addl
sbb
add
xchg
or
incl
cmpsb
movsl
scas
pop
adc
and
add
inc
add
push
inc
rorb
inc
dec
movsl
add
or
adc
add
or
arpl
xlat
xor
pop
sbb
adc
dec
and
mov
pop
iret
test
insb
mov
dec
or
xor
jo
adc
movsl
out
stos
adc
in
or
jno
xchg
and
adc
addr16
int3
or
jae
aas
inc
or
aam
push
mov
adc
push
inc
or
lcall
fcoml
mov
inc
subl
push
inc
push
dec
push
sbb
mov
mov
dec
test
pop
inc
or
clc
or
fcoms
inc
jns
sub
xor
sub
add
sahf
lahf
jo
enter
lods
sub
adc
mov
das
jmp
push
aaa
add
jo
jo
and
xchg
or
mov
in
add
cmp
imul
imul
jo
cmp
pop
mov
push
xacquire
cs
lds
inc
dec
pop
sub
das
and
sbbb
inc
lahf
jbe
and
cs
cs
mov
lahf
inc
pop
cmp
cmp
jne
sbb
sbb
lret
cmp
cwtl
mov
sti
fcomps
cld
outsl
lret
out
ljmp
bound
test
adc
mov
cmp
mov
cmp
das
movsb
inc
adc
add
fnstcw
shlb
loopne
lock
adc
push
cwtl
scas
lret
test
sbb
rorl
shlb
rorb
mov
cmp
sub
inc
push
push
or
cmpsb
lods
ret
and
pusha
sub
xor
pop
mov
xor
pop
leave
lds
or
xchg
pop
jle
push
jmp
pop
sbb
js
clc
xchg
push
lods
pop
mov
mov
fwait
inc
dec
sbb
push
dec
pop
insb
rolb
xchg
mov
cwtl
sub
jne
inc
push
or
psubb
pusha
hlt
add
ljmp
jmp
add
and
add
lods
ljmp
mov
push
ja
dec
push
push
les
jbe
push
outsl
sbb
repnz
rorb
leave
addr16
mov
xchg
nop
sbb
fs
call
xchg
daa
cmp
push
mov
pushf
aaa
movb
inc
fbld
and
xchg
roll
nop
and
inc
pushf
add
push
or
mov
mov
xor
and
pop
lock
xor
or
cmp
lret
inc
mov
mov
sbb
cmp
xor
cmp
cmp
push
clc
mov
jp
fstpl
jp
adc
pavgb
leave
std
and
sub
xor
sbbl
pop
jmp
ficoml
rcr
divl
in
pop
fcoms
sbb
jecxz
test
movl
adc
int
or
test
inc
xchg
je
xchg
cmp
pusha
sub
push
fmuls
jle
outsb
out
xchg
int3
icebp
cmp
inc
js
sbb
adc
add
mov
stos
dec
sbb
add
jmp
mov
jp
inc
sbb
call
or
popf
adc
push
xchg
rolb
aam
rclb
nop
xchg
addr16
roll
add
out
cmpsl
lea
adc
les
xchg
movsb
add
mov
or
les
cmpsb
mov
aam
out
adc
sub
sub
dec
xor
les
pop
add
cli
add
in
add
push
sbb
adc
cmp
xor
adc
sub
jl
adc
insl
movsl
or
xor
and
adc
out
xor
pop
adc
mov
dec
insb
add
inc
jne
push
out
mov
mov
mov
pushf
cmp
outsb
push
or
add
dec
inc
test
xor
jnp
lods
mov
pop
adc
sub
cmp
adc
jp
dec
clc
and
inc
inc
sarb
add
push
jno,pt
adc
adc
push
ja
ret
sbb
pop
fimull
dec
add
add
aaa
iret
pusha
cmp
fimuls
pop
xchg
pop
out
add
lds
out
xor
add
and
sbb
and
xor
and
xchg
pop
sub
add
fists
jno
xchg
lock
push
lock
push
push
inc
sub
fwait
cmp
mov
or
daa
stos
insb
sub
in
les
dec
and
mov
scas
jno
jp
push
jo
adc
hlt
aaa
in
push
int
ret
in
dec
mov
mov
xor
mull
adc
dec
or
xchg
mov
and
adc
pushl
xlat
inc
adc
mov
or
inc
ret
iret
or
mov
mov
dec
popl
sbb
lods
or
es
sbb
fsts
out
stos
arpl
sbb
pop
imul
push
and
cmp
fwait
je
add
push
divl
mov
adc
jo
movsb
loopne
dec
push
or
xor
mov
dec
inc
aam
xchg
xchg
sub
push
mov
aaa
xlat
in
and
jbe
jne
repz
inc
jbe
inc
jg,pt
sub
pusha
sti
pop
sub
cmp
jne
pop
jp
cmp
test
adc
pop
bound
pop
and
lods
enter
rorb
pop
mov
idivl
orl
lock
test
out
and
xor
punpcklbw
xchg
leave
and
je
loopne
rclb
dec
arpl
mov
out
icebp
xor
popa
push
ljmp
push
lds
gs
and
int3
pop
push
or
cmp
pop
cli
lods
insb
mov
punpckldq
ret
xchg
imul
mov
pop
push
adc
ret
xor
add
pop
sub
mov
pop
push
arpl
test
and
dec
xchg
jnp
add
inc
lock
minps
add
dec
test
push
pop
dec
ret
cmp
adc
pushf
lock
mov
or
shlb
add
rolb
pop
sbb
fiadds
xchg
add
cmp
fsubs
add
cmpsl
test
inc
shl
inc
inc
inc
dec
inc
fcoms
dec
int
push
shlb
sub
push
adc
mulb
pop
xchg
mov
push
scas
cltd
cmp
pop
inc
adc
pop
fisttpl
mov
test
push
adc
sbb
test
mov
arpl
fdiv
loope
scas
pop
cld
je
xchg
faddp
add
dec
insl
or
adc
cmp
sub
or
in
pop
mov
inc
or
popa
js
mov
lea
and
ss
imul
cwtl
or
pop
test
lea
adc
loope
pop
fldt
push
cs
push
sbb
bound
rcll
push
pusha
adcl
or
jl
jge
rorb
or
pop
sub
jle
jl
xor
lock
daa
ss
ss
test
or
es
push
lahf
jb
push
sub
adc
dec
and
sub
add
cli
cmpl
and
inc
and
dec
adc
int3
jl
lret
adc
and
adc
mov
lea
mov
sbb
xchg
adc
aad
mov
lahf
popf
shlb
pop
rcrl
pop
lods
aad
mov
and
adc
ret
xor
push
mov
jmp
cmp
icebp
inc
sbb
add
inc
jo
mov
ds
cmp
cmpsb
pop
insb
adc
call
adcb
adc
jbe
lret
jae
out
pop
les
or
cltd
jae
inc
lret
js
imul
sub
flds
add
mov
insb
and
jg
sub
xor
sbb
mov
jecxz
nop
adc
sub
jle
mov
andb
push
outsl
frstor
jb
fisttpl
xchg
add
inc
into
push
mov
aaa
add
call
loope
subb
push
cmp
jle
pusha
in
cmp
movsb
das
dec
test
xchg
pop
mov
sub
jb
push
mov
mov
sub
add
sbb
push
jmp
or
fisubl
ljmp
popf
mov
dec
pushf
sub
or
and
pusha
or
mov
adc
and
xor
cmp
pusha
or
add
mov
inc
mov
popf
adc
nop
andl
push
sub
adc
pop
in
and
cltd
mov
lcall
sbb
clc
fadds
sub
xchg
pop
adc
push
adc
mov
lods
cmp
call
in
jae
daa
mov
xor
push
xor
pusha
push
add
mov
sub
mov
hlt
ds
and
xchg
jg
call
test
nop
jp
xchg
inc
aad
addl
rcr
xor
mov
and
add
cmp
pop
cwtl
jl
imulb
pop
pop
stc
fmuls
fidivrs
cmc
outsl
cmp
sbbl
ss
ret
and
add
inc
inc
add
sub
inc
add
inc
cmp
or
push
pop
dec
sub
and
push
xor
insl
or
sub
dec
mov
in
shll
add
or
jno
push
xchg
sub
push
inc
roll
push
lods
and
adc
mov
and
inc
loop
push
imul
into
mov
into
lods
push
add
addl
aam
xchg
lret
in
adc
jmp
shll
outsl
sub
insl
rorb
xchg
mov
jne
faddl
sbb
xchg
mov
popf
insb
insb
hlt
cmpb
fdivl
or
lret
shrb
psrlq
sbb
sbb
pop
adc
or
inc
outsl
cmp
inc
sahf
test
inc
push
cld
lcall
dec
push
pop
xor
pop
mov
jmp
push
push
and
and
jg
add
pop
bound
sub
xor
add
and
subl
sarl
sub
adc
jne
sbbl
lods
loopew
add
xor
mov
sbb
and
dec
add
mov
jmp
mov
rcrb
xchg
cmpsl
mov
cmpsb
aas
sbb
sti
push
mov
lock
lea
add
xacquire
fld
popl
mov
aam
jge
add
aaa
add
jo,pt
mov
adc
mov
inc
arpl
adc
pusha
cmp
xchg
inc
in
psrad
call
mov
dec
test
xor
adc
fdiv
test
push
loopne
cmp
cmp
roll
xor
ljmp
xchg
add
cmp
adc
mov
jge
and
adc
sub
xor
je
sbbb
in
inc
test
push
mov
loope
popa
sub
dec
sbb
or
sub
pop
ret
xchg
and
add
lret
cwtl
and
adc
inc
addr16
sub
loopne
lea
and
fwait
movsl
adc
gs
or
lock
cmp
inc
mov
sti
inc
adc
shlb
idiv
in
mov
xchg
adc
push
and
push
aaa
clc
push
and
mov
pop
out
add
cmp
mov
pop
pop
push
jp
or
push
sbbl
ret
mov
adc
rol
and
in
fcom
cmpsb
pop
or
and
push
outsl
sub
or
mov
push
jmp
adc
shlb
mov
mov
add
or
xchg
jmp
add
push
in
loopne
stc
xchg
xlat
gs
cmpsb
adc
into
movsb
es
mov
inc
xchg
into
out
cmp
ret
das
push
mov
data16
test
call
jne
push
jnp
sub
push
movsb
xor
inc
pop
mov
mov
sub
push
lods
dec
fcoml
in
or
push
inc
mov
push
pop
dec
cmp
shlb
mov
or
xchg
dec
in
xchg
out
lea
mov
cs
lods
addl
sub
add
push
xchg
es
dec
daa
scas
test
fstpl
data16
push
mov
mov
inc
jg
ja
imul
dec
mov
push
movsb
fidivl
and
cmpsl
and
and
cwtl
push
adc
pop
inc
pop
and
cs
inc
mov
dec
push
addr16
outsb
fiaddl
bound
add
pop
fwait
aaa
and
adc
push
mov
ret
or
lock
je
sarl
add
adc
inc
leave
insb
ds
sbb
mov
push
mov
cmp
pusha
mov
jmp
dec
push
ficoml
inc
ret
jnp
test
sub
enter
push
adc
add
loopne
fidivl
or
or
cmp
inc
push
add
pop
das
cmp
pop
mov
xor
and
mov
test
sbb
cltd
mov
or
pop
mov
mov
adc
andb
xor
in
cmp
mov
hlt
pop
xor
out
mov
pop
jno
mov
and
mov
mov
stos
mov
fs
fwait
pmaxub
daa
mov
loopne
sahf
and
movsl
add
clc
loopne
mov
lock
add
fcomip
ret
xchg
dec
sbbb
xchg
inc
pop
pop
sub
scas
dec
mov
or
cmpsl
mov
int3
add
lds
add
int3
dec
aam
repz
jl
dec
clc
mov
push
out
faddl
sbbl
push
fildl
mov
inc
or
mov
jge
dec
adcb
mov
sbb
stos
fsubl
adc
inc
jmp
pusha
cmpsl
inc
sub
insb
outsl
inc
adc
dec
sbb
stos
lret
mov
inc
push
jmp
inc
pop
pop
scas
jg
xor
sbb
sahf
adc
bound
sub
adcl
push
inc
cmpsl
dec
test
cli
ljmp
adc
inc
inc
or
shl
aas
adc
sbb
daa
dec
je
jmp
cmp
addr16
sub
int
push
dec
and
xor
adc
or
movsb
cs
mov
dec
xchg
add
outsb
popa
stc
or
movl
into
daa
jo
dec
enter
imul
jnp
dec
sbb
ret
bound
ret
les
push
dec
repz
aam
jp
push
iret
cltd
jnp
or
adc
xchg
das
jno
lcall
shrl
dec
adc
aam
lcall
test
sbb
inc
mov
push
mov
cli
pop
repz
push
xchg
ja
movsl
shl
jns
out
loopne
imul
push
iret
push
or
adc
inc
sub
std
ljmp
inc
fcoms
sbb
adc
add
popa
dec
and
jae
dec
or
push
xor
leave
dec
jns
subb
xchg
imul
adc
jmp
ret
xchg
lea
imul
gs
jmp
and
pop
stos
cmp
enter
jnp
inc
add
aas
movsb
push
jp
pop
adc
mov
jae
hlt
adc
sub
in
rcll
xchg
addr16
add
cmc
push
cwtl
mov
sub
xchg
addps
jno
push
adc
mov
xchg
sub
out
lret
and
daa
cltd
cmpsl
test
xlat
add
xchg
shl
mov
data16
pop
bound
pop
add
sbb
xchg
or
pusha
shlb
dec
or
push
idivl
dec
mov
push
inc
push
push
mov
xor
rorb
loop
jno
mov
nop
pushf
add
mov
cmpsb
push
ret
push
mov
ja
and
xlat
adc
sbbb
jno
xchg
into
jmp
or
and
adc
jecxz
sub
push
add
push
loopne
sub
fs
cmp
cld
orb
mov
adc
sub
push
xor
in
sbb
popf
and
push
push
lea
cwtl
in
add
clc
mov
jnp
insb
decl
movzbl
shlb
rolb
push
fucomi
add
sbb
lcall
xor
lds
bound
sub
data16
lds
mov
rorb
push
sub
mov
push
ljmp
dec
cmp
mov
push
cmp
test
out
pop
adc
subb
inc
push
bound
push
aad
mov
mov
mov
hlt
xchg
push
dec
add
ljmp
and
data16
jo
jno
push
loopne
push
jg
or
pop
push
push
jne
sbb
ret
nop
movb
xor
sbbb
aam
iret
nop
mov
cmpsb
inc
xor
fistl
dec
mov
arpl
jns
push
push
movsb
mov
push
inc
cmpsl
add
jno
nop
fcom
dec
or
pop
dec
push
loope
xorb
mov
sbb
adc
rorb
stc
insl
push
cmpl
ja
push
outsl
jecxz
mov
adc
jmp
xchg
mov
dec
notb
jl
cmpb
std
pusha
jo
mov
movsl
add
xor
in
jb
sbb
out
mov
ficomps
inc
and
lcall
jbe
dec
mov
push
xchg
popa
lods
je
cs
and
cmp
push
sarl
stos
into
push
in
test
add
ret
or
ja
xchg
xchg
mov
dec
in
stc
cmp
cmpl
jbe
xchg
sbb
out
or
inc
xchg
arpl
inc
add
imul
lock
add
add
pop
push
xor
outsb
xor
test
arpl
jp
adc
call
mov
xor
lods
lcall
cmc
les
add
fstps
adc
call
inc
sub
mov
push
mov
dec
rcll
roll
xchg
sbbb
shlb
sbb
sbb
jmp
add
sbb
xor
aam
add
test
jo
pop
jbe
dec
call
pushf
mov
mov
jl
daa
mov
inc
aaa
pop
and
add
leave
jmp
in
pushf
movsb
lret
push
sub
add
popa
mov
push
push
fistpl
cltd
and
push
sbb
mov
push
dec
sbb
pusha
mov
jo
xor
or
clc
adc
and
insl
sbb
arpl
pop
push
cmp
in
movsb
mov
jns
add
ljmp
pop
mov
jl
fwait
ss
scas
mov
jae
push
sbb
mov
fnstenv
scas
mov
and
in
repnz
push
in
ja
jmp
pop
ret
sbb
sarl
add
aam
xchg
xchg
xchg
mov
daa
xor
js
and
iret
dec
or
out
mov
shr
inc
and
adc
mov
push
push
sahf
icebp
jl
movsl
xchg
sbb
mov
in
mov
push
sbb
lahf
pop
add
push
push
pusha
movb
sbb
pop
and
lcall
cwtl
xchg
sub
lock
adc
xlat
sbb
sub
mov
mov
inc
jp
ret
and
dec
mov
pop
jo
inc
cli
lahf
ss
mov
loop
adc
and
mov
ds
push
and
jb
fsubr
sahf
mov
cltd
adc
xchg
movsb
cmpsb
dec
cs
js
fmuls
inc
shlb
jae
in
sbb
aas
xchg
loope
push
add
add
clc
add
rolb
pushl
sarb
sbb
jne
dec
mov
adc
adc
dec
pop
fistl
addl
sbbl
pop
and
mov
pop
sbb
sbb
out
inc
xor
dec
mov
pushl
rcrb
xor
adc
dec
jecxz
nop
addb
push
idiv
in
nop
or
lock
add
fs
inc
cmp
sbb
lret
cmp
xchg
je
int
jb
sti
mov
cmp
int3
and
add
pop
cmp
ljmp
and
jge
imul
ret
fldt
lock
pop
push
adc
xchg
movsl
stos
sub
sbb
xor
jns
pop
flds
push
popf
xchg
mov
dec
jp
cmp
xorb
js
in
dec
repnz
sti
arpl
fadds
pusha
and
xor
adc
jnp
or
add
inc
in
sbb
cmp
lret
sbb
lock
adc
push
push
lcall
icebp
sbb
pusha
daa
mov
outsl
jo
imul
imul
in
repz
xor
push
test
push
imul
adc
and
outsb
jp
ret
jb
test
mov
sub
pop
ret
imul
or
pmaxsw
jne
xchg
sub
arpl
imul
add
bound
js
imul
dec
je
es
pop
xor
jb
bound
add
loop
scas
mov
push
es
mov
or
jo
pop
inc
jp
inc
ljmp
inc
push
mov
mov
daa
push
inc
loope
mov
into
sub
adc
outsl
das
das
xchg
lock
sbb
and
cmp
cmp
movsb
xor
loop
iret
sbb
bound
jns
outsb
fsubrs
andl
ja
rolb
push
das
cmp
xor
mov
js
or
fstl
add
adc
and
hlt
sub
push
and
arpl
mov
xlat
jge
xchg
rclb
and
push
push
out
leave
movsb
mov
das
popa
std
loopne
push
hlt
sub
setae
and
pop
addb
bound
inc
dec
inc
aaa
out
mov
or
pop
clc
test
outsl
jge
add
cmpb
es
or
sti
and
dec
push
dec
pusha
mov
mov
cltd
mov
dec
mov
add
call
movsl
jne
aam
sub
push
adc
pusha
mov
imul
sti
pop
sub
mov
jne
mov
cmp
and
and
ljmp
dec
adc
insl
fisttps
and
xor
inc
xor
push
push
mov
mov
add
xlat
xchg
xchg
bswap
in
and
lahf
or
lea
adc
mov
and
fcomps
movsl
adc
push
cmp
jnp
loopne
lcall
pop
shlb
xchg
or
enter
pop
or
clc
jg
xor
or
stos
fs
adc
inc
add
sub
sbb
or
push
or
sub
inc
mov
pop
adc
jbe
inc
fcoml
ja
sahf
push
testl
or
add
out
out
cltd
sub
popa
outsl
jge
cmp
jns
fistpll
add
xor
add
xor
or
and
adc
push
ja
jge
xor
pusha
clc
pop
testl
sbb
ss
enter
push
push
pop
and
movsb
xor
and
add
lea
mov
push
ret
into
xchg
clc
cli
clc
add
add
mov
sbb
iret
push
add
pop
or
or
or
or
or
repz
or
push
movups
adc
repz
adc
push
pop
repz
repz
sbb
sbb
lcall
and
and
in
sti
fcoms
repz
out
out
or
iret
repz
sbb
cmp
pop
outsl
cmp
repz
xchg
mov
iret
repz
testl
sahf
out
cmp
sahf
out
sahf
jl
cwtl
cmpsb
mov
lea
rcr
sti
daa
lret
pop
inc
jmp
sub
dec
in
or
pop
push
cltd
mov
and
adc
xchg
push
cs
and
or
dec
in
lret
or
push
mov
push
and
cs
sub
dec
sub
in
lret
cmp
movsb
jb
cmp
inc
push
cs
dec
sbb
xchg
push
dec
sbb
lret
sbb
jmp
pop
sbb
xchg
push
ja
push
popa
imul
push
bound
arpl
and
xor
and
addr16
push
sbb
mov
sbb
push
sahf
stos
inc
jns
test
rclb
fdivs
xchg
adc
fisubrs
xchg
out
fcomp
cmovns
std
add
int
adc
outsb
js
aaa
scas
cwtl
inc
scas
popa
or
pop
push
int3
incb
sbb
push
adc
dec
xchg
cmovne
inc
cmp
sub
or
sbb
fldl
emms
mov
bound
test
loopne
faddl
adcb
xor
popa
jo
add
out
testl
jb
xchg
sbbb
xlat
aaa
push
test
test
aam
mov
dec
or
icebp
xchg
aas
inc
xchg
mov
sub
mov
in
jae
sbb
jne
daa
movsb
pop
xor
pop
push
xor
adc
adc
nop
pusha
repnz
mov
test
fildll
pushf
fs
mov
lds
mov
pop
xor
je
inc
aaa
mov
subb
and
mov
push
fs
or
dec
or
stos
mov
sub
xchg
ss
fs
test
sbb
adc
and
push
outsb
lods
aaa
mov
outsb
jae
pop
pop
dec
insl
addr16
pop
out
adc
jo
push
xchg
fsubl
imul
inc
rorb
adc
xor
xor
sbb
and
add
push
aam
jl
push
sub
or
push
jb
jmp
adc
dec
gs
jmp
and
imul
rdmsr
xor
xor
pop
push
pusha
out
add
inc
pop
sahf
fs
je
cmp
inc
mov
xchg
add
or
push
mov
inc
sub
sbb
xor
and
fwait
adc
mov
push
push
nop
popf
sub
fs
dec
jle
or
pop
stos
sbb
xor
adc
mov
cmp
in
addl
lea
pmulhw
nop
iret
add
mov
ja
push
inc
lahf
das
hlt
sbbb
push
sbb
mov
daa
insl
imul
sub
xchg
inc
dec
sub
jecxz
sub
lea
xor
jge
xchg
cmp
sub
gs
movb
add
js
sbb
cs
jne
inc
inc
fs
dec
and
inc
pusha
nop
xchg
xor
add
sbb
add
dec
sbb
out
call
push
and
dec
out
call
pop
bound
dec
pop
mov
xor
add
or
nop
cmpsl
movsb
or
int3
lcall
push
cwtl
popa
popa
ret
inc
add
or
loope
sub
jno
in
xchg
insl
or
inc
aad
shl
icebp
inc
or
jo
xchg
sbb
sbbb
mov
and
sub
jge
sub
shlb
movsb
and
or
sti
xor
out
cmp
je
mov
addl
fldcw
cmp
xchg
mov
push
stos
test
push
stc
xchg
xor
rorl
out
inc
sub
adc
js
cmp
inc
sbb
subl
mov
subb
rcll
pop
or
mov
sub
sub
pop
inc
mov
scas
or
cmpb
mov
repz
mov
xor
and
icebp
push
add
adc
pop
inc
inc
xchg
push
and
idivb
xor
and
in
rorb
jmp
and
add
inc
cmp
hlt
mul
sbb
pop
and
fwait
cmc
daa
xor
leave
dec
xlat
push
ret
cmp
inc
repnz
or
push
cmp
sbb
dec
in
dec
addl
push
cmp
add
add
int3
lock
decb
inc
stos
stc
xlat
mov
mov
xor
mov
sub
mov
subl
popa
sbb
int
add
cmc
push
xchg
inc
mov
xchg
lahf
ror
xor
rcll
loope
jmp
inc
sahf
cs
das
push
data16
popa
mov
adc
adc
mov
ret
inc
insb
aaa
fadds
jbe
fwait
imul
cmp
and
dec
xor
cmp
pusha
imul
addr16
in
les
int
loope
stc
das
adc
jle
push
jne
xchg
or
test
call
dec
push
adc
push
fadds
mov
or
and
xor
xor
push
pop
insb
pop
gs
sbb
pop
or
add
fcompl
jge
call
mov
mov
fdivs
adc
xor
or
orl
aam
sbb
ss
pop
loop
mov
ret
inc
pop
inc
cmp
movsb
adc
add
je
pop
jmp
enter
inc
nop
jno
xchg
aam
and
sub
sub
adc
in
jns
push
or
add
mov
adc
xor
sub
xchg
xchg
dec
shrb
xchg
je
xchg
incl
mov
pop
sub
dec
cld
xorl
push
or
inc
sub
shll
icebp
aad
inc
push
and
scas
cltd
nop
add
ret
mov
push
inc
fsubrs
leave
xor
adc
insb
lds
inc
push
push
stos
push
shll
es
mov
xchg
or
or
pop
and
mov
xchg
aam
aam
mov
fdivrl
dec
jo
test
pop
cmp
inc
mov
inc
sub
lods
push
mov
jecxz
push
push
jmp
rorl
gs
inc
test
cs
adc
fisttpll
fidivl
dec
dec
or
sub
shll
inc
movsb
das
or
mov
inc
mov
mov
lods
lea
lods
add
fiadds
dec
mov
sub
pop
add
or
popf
test
mov
xor
je
cmp
dec
es
cmp
sub
clc
mov
hlt
pmuludq
pop
adc
or
in
xchg
add
pop
add
xor
xchg
mov
xchg
incl
pop
inc
call
adc
add
lahf
rclb
ret
in
mov
andb
cmp
std
cmp
or
inc
ja
jmp
lods
loop
sub
rolb
test
lret
sub
sbb
roll
mov
xor
add
sqrtps
les
lret
xor
das
insl
addr16
lock
push
cmp
inc
bound
fstl
sbb
cmp
add
popa
in
or
imul
in
lret
and
mov
mov
js
dec
movsb
mov
shr
gs
sbb
scas
call
stc
inc
int
push
xor
cmp
jne
mov
dec
sub
dec
push
movsl
jp
leave
add
scas
xlat
nop
xor
ret
and
inc
jle
pop
mov
adc
lea
pop
push
cltd
mov
rorb
inc
xor
test
pop
decl
inc
dec
aad
xor
mov
and
call
mov
xchg
punpckhwd
lds
mov
dec
xchg
scas
xchg
inc
or
sahf
in
lret
adc
les
sub
std
fdiv
inc
mov
mov
shlb
inc
add
leave
sti
adc
into
xchg
scas
pop
test
cwtl
push
push
es
inc
dec
clc
clc
mov
scas
mov
add
ret
mov
out
sbb
lock
jne
in
dec
sub
dec
dec
cmp
daa
mov
xchg
add
lcall
lahf
inc
or
lock
repnz
push
adc
add
xor
lock
in
rcrl
cmp
push
sub
or
mov
cmpl
pop
mov
and
popf
xchg
and
leave
in
jns
jge
xor
sti
dec
jne
or
addps
nop
sbb
mov
sbb
sbb
sbb
mov
testl
and
sti
mov
subl
cmp
ret
pop
push
test
push
push
loop
push
rol
cmp
pop
nop
xchg
mov
cld
push
adc
adc
or
dec
pop
cld
dec
js
int
push
arpl
adc
dec
add
xor
jmp
fldcw
lods
push
les
scas
or
sbb
adc
and
test
push
adc
out
jb
sub
add
sti
iret
mov
pop
ret
push
push
push
adc
or
and
inc
inc
or
or
add
mov
add
add
adc
jae
push
rcrb
sahf
mov
add
mov
xor
inc
add
push
inc
mov
xor
or
mov
jnp
int
adc
jo
add
rclb
ss
addb
setg
xor
insb
jle
add
add
or
outsb
add
add
fdivrl
sbb
jl
stc
pop
or
sbb
lret
shlb
pop
mov
pop
mov
lret
mov
sbb
inc
inc
rclb
inc
cmovl
lcall
enter
out
cmpsb
xor
repz
mov
fadds
out
test
test
int
pop
sub
je
and
pop
xlat
nop
rcrb
or
add
testb
sub
adc
mov
adc
pop
sub
ja
inc
sbb
outsl
outsl
fidivl
leave
cwtl
sbb
push
xor
pop
push
push
sbb
and
jnp
movsb
aaa
adc
jbe
shrl
push
das
loopne
js
out
loopne
scas
rol
pushf
mov
or
ret
xor
sub
xchg
add
lods
push
jl
or
inc
xlat
addl
and
iret
repz
shl
mov
and
xor
cmp
repz
inc
dec
iret
repz
dec
push
push
pop
pop
pusha
mov
sti
nop
dec
push
or
pop
add
or
cld
sbb
push
out
sub
xchg
imul
scas
getsec
mov
lock
sbb
xor
outsb
pop
loopne
in
xchg
inc
dec
ds
dec
mov
push
sbb
inc
mov
and
add
movsl
gs
sub
pusha
inc
pop
mov
or
nop
pop
mov
push
pop
push
push
sub
push
mov
aas
pop
rcll
xor
inc
sbb
rcrl
pop
test
sbb
es
shll
lret
jnp
push
shl
pop
mov
sti
int
or
and
sbb
adc
cld
mov
inc
dec
dec
add
pop
call
xchg
and
aas
pop
je
or
xorl
shl
mov
sahf
inc
xchg
lods
mov
xchg
test
pop
mov
adc
ficomps
clc
inc
xor
daa
jmp
inc
xor
notl
dec
jecxz
loope
mov
cmpb
inc
les
loopne
aam
fwait
pop
iret
xor
mov
dec
iret
adc
adc
mov
inc
rcl
or
pop
pop
pop
sbb
or
pop
cmp
cmp
test
sbb
pop
shlb
jle
sbb
dec
loop
cmpsl
and
insl
ljmp
pusha
rcrl
or
fcompl
add
stc
xchg
test
lock
jb
and
inc
cmc
in
outsb
inc
movsb
pop
sub
movb
pop
pop
andb
xor
xor
stos
mov
sub
jb
xor
mov
cmp
adc
mov
mov
adc
jle
loope
or
mov
and
adc
call
mov
loope
xchg
cmp
into
push
and
sbb
adc
repnz
cmp
jne
sbb
in
sbb
sbb
es
push
pop
mov
sbb
pop
pop
mov
add
sbb
mov
fists
and
and
aas
push
push
push
insl
push
mov
fisubs
add
or
cmp
sbb
jmp
mov
ja
mov
rorb
cmp
inc
sub
inc
pop
mov
mov
adc
stos
add
int
inc
adc
cmc
stc
loope
sbb
jmp
inc
sbb
ss
jnp
push
inc
push
xchg
dec
adc
xchg
and
jmp
vaddsubps
push
or
push
pop
and
jg
psubq
movb
aad
aaa
je
int
add
sub
ss
add
inc
ficoml
sbb
adcl
adc
push
push
jb
or
inc
inc
xorb
clc
dec
xchg
adc
adc
sbb
ja
sahf
fldcw
fsubrs
push
insb
adc
test
fsts
jnp
js
dec
push
jo
mov
dec
daa
push
int3
pop
sub
shll
bound
sbb
ret
sbb
nop
push
inc
add
dec
dec
push
lcall
into
xlat
or
mov
push
dec
dec
shll
cmp
cmp
and
cmp
popa
lock
push
das
popf
in
cltd
or
xor
dec
jns
push
adc
sbb
insl
add
scas
xor
out
rorb
xchg
loope
mov
pop
jo
jle
inc
cmp
daa
cmovl
push
leave
jl
xor
jb
outsb
mov
call
or
lcall
sbb
ds
ljmp
inc
cmp
or
mov
push
cmp
sub
adc
pop
leave
push
fiaddl
xorb
pop
out
int
scas
loopne
jnp
pusha
add
xchg
call
sub
punpcklbw
je
lods
adc
and
insb
jo
inc
and
pusha
dec
es
add
mov
sub
fisttpl
shlb
inc
push
arpl
push
push
pop
insb
mov
xor
push
inc
and
jno
sub
sub
or
cwtl
mov
mov
aas
push
mov
lods
roll
mov
addr16
inc
xor
fnstenv
subb
sbb
mov
and
cltd
fcomps
dec
mov
fs
aad
ss
ret
inc
sbb
sbb
je
pop
imul
xchg
je
cmpsl
nop
xchg
add
jp
or
addl
adc
jns
pusha
mov
add
out
inc
adc
mov
jg
test
cmp
xchg
inc
hlt
xchg
je
mov
cmovb
sbbb
xor
call
out
test
dec
adc
xchg
aad
daa
add
and
mov
mov
inc
in
xchg
adc
mov
les
xor
scas
pusha
jecxz
daa
inc
xorb
mov
imul
andb
mov
mov
or
inc
lret
push
add
adc
push
xchg
mov
mov
pop
and
lcall
pop
adc
sahf
les
inc
inc
or
adc
push
or
mov
stos
and
xchg
mov
sbb
call
data16
push
outsl
shlb
xchg
jmp
inc
scas
mov
jne
ja
xor
xor
add
arpl
insb
cmp
dec
outsb
arpl
add
and
int3
jg
add
gs
dec
cmp
int3
fidivrl
insb
ss
adc
je
push
adcb
cmp
mov
cmc
negb
sub
inc
cmpsl
pusha
pushf
sub
add
jp
push
push
stos
mov
xor
xor
add
call
cmp
push
cmp
enter
xchg
sbb
dec
add
pop
repnz
out
sub
jnp
or
cwtl
scas
xor
mov
or
pop
adcl
or
rcrb
xchg
mov
add
enter
add
inc
sahf
push
outsl
aad
or
push
inc
and
add
sbb
adc
pop
sub
inc
push
sbbl
mov
adc
pop
push
insl
outsl
jl
pusha
dec
enter
pop
or
scas
lds
shlb
test
sarl
call
jne
bound
out
sbb
cmp
mov
sbb
pop
adc
test
or
shll
or
or
push
jmp
out
mov
cmpsl
or
dec
inc
in
in
fisubrs
hlt
fs
popa
js
cmpsl
popf
mov
nop
sub
js
jno
shrb
push
jl
jno
rclb
pop
inc
xlat
aas
push
enter
inc
test
inc
add
jb
lret
sbb
sub
js
fdivs
mov
arpl
adc
or
mov
cmpsl
out
mov
pusha
rolb
xlat
jnp
test
adc
mov
mov
and
sub
adc
stos
pop
adc
scas
inc
xor
sahf
sbb
push
scas
adc
mov
cld
pop
cmp
adc
packuswb
stc
sti
sbb
pop
pusha
push
and
add
push
dec
nop
jp
dec
fs
cs
dec
adc
dec
adc
call
push
imul
add
sarb
push
bound
or
call
je
adc
mov
adc
testb
mov
mov
inc
and
hlt
nop
prefetch
or
daa
dec
ss
in
mov
inc
push
ljmp
inc
std
das
mov
pop
or
jle
and
dec
dec
into
sub
shl
int
lock
pop
pop
adc
dec
sbbb
adcl
invd
cmp
daa
push
jo
inc
mov
sbb
adc
pop
adc
mov
push
rcrb
xor
lahf
or
or
sarb
pop
xchg
lock
in
gs
adc
dec
adcb
fsubr
and
push
or
add
mov
popa
cs
clc
cmp
outsl
mov
aas
lea
adc
pushw
arpl
xor
adc
dec
and
je
push
push
gs
cld
ds
rorl
lea
mov
cs
xchg
arpl
add
and
xor
xchg
cld
fcomip
cmp
cmp
fs
mov
push
jb
insl
popa
jb
or
int3
mov
jbe
ja
cmpsl
sub
scas
push
iret
out
mov
add
xor
cltd
or
cmpsb
pop
and
inc
or
pop
ds
add
loopne
lea
push
loope
rol
inc
jo
arpl
mov
imul
inc
sub
mov
cwtl
sub
leave
push
xchg
add
lret
rcr
in
fidivs
roll
jne
scas
inc
or
dec
add
add
int3
inc
test
dec
push
sar
adcl
dec
jae
push
push
push
dec
movsl
dec
or
cmp
add
ja
adc
movb
clc
xchg
add
add
popa
xor
popf
or
pop
xchg
jo
rolb
mov
mov
scas
pop
add
ret
test
jo
jo
fdivrl
sbbl
and
mov
iret
lds
mov
jl
cmp
pushf
mov
js
push
lds
jl
das
sarb
and
or
add
adc
jb
or
inc
mov
mov
mov
add
mov
cmp
ret
inc
jge
cmp
mov
insl
mov
stos
sub
repnz
rorl
cmp
cmpsl
popa
xlat
subl
cmpsb
push
inc
push
cmp
sahf
loop
or
jl
cmp
jmp
inc
add
test
scas
jl
jb
aam
inc
add
inc
add
in
jns
sub
inc
add
add
inc
mov
inc
pushf
and
ja
ja
jns
loope
lock
orl
fwait
cmp
pushl
or
inc
add
inc
js
inc
repnz
mov
push
clc
insb
sahf
int
mov
insl
sbb
adc
pushf
shlb
ret
iret
add
adc
lock
ds
mov
add
ljmp
test
mov
and
pop
insl
push
cld
ret
jp
adc
adc
out
add
adc
push
and
xchg
and
inc
mov
push
inc
add
aaa
pop
jp
mov
sbb
push
push
sub
mov
inc
or
inc
mov
mov
mov
ljmp
jg
ljmp
stos
ljmp
jmp
mov
in
lcall
sbb
cmp
and
lods
es
mov
dec
lods
fsubrl
lcall
mov
mov
fnstcw
xor
push
push
mov
cmp
js
pop
mov
test
out
negl
xorb
clc
es
popf
in
repz
mov
sub
sahf
ja
jl
cmpl
in
cmp
fsubp
enter
push
jae
in
shrl
cmpsl
xor
push
je
xor
in
jge
lods
test
inc
pushf
lret
cmp
mov
les
addb
leave
dec
fs
jns
mov
outsb
dec
pop
ret
andl
add
jl
sub
inc
fiadds
cmp
add
jmp
add
fs
pushf
ljmp
cmp
je
cmpsl
cmp
add
test
in
cmp
cmp
cmp
add
dec
jmp
in
adc
popf
shr
inc
mov
pop
jb
adc
or
addl
sbb
and
aam
fcompl
xchg
pop
xor
ds
inc
mov
jo
push
add
jo
popa
mov
pop
repnz
call
add
sub
popa
add
popf
aaa
mov
cli
pusha
enter
add
dec
add
shll
loope
add
popa
push
popa
loope
or
cmp
loope
decb
or
ds
sbb
pop
inc
jo
sti
inc
mov
adc
sbb
leave
xchg
and
testb
and
xor
repnz
bnd
orl
sbbl
pop
inc
es
mov
addl
lock
inc
cld
pop
cli
push
imul
nop
xchg
adc
pop
cmp
repz
mov
inc
and
mov
add
pop
in
jns
and
or
femms
xchg
xor
push
sbb
mov
pop
shlb
and
xchg
pop
push
lods
loope
nop
jl
add
mov
mov
jo
mov
inc
and
jecxz
addb
and
pop
es
jecxz
test
adc
cwtl
push
or
and
outsl
sbb
mov
add
cmpsl
sbb
xor
mov
enter
sub
iret
mov
push
loope
sub
dec
ja
test
jno
sbb
inc
jne
cbtw
adc
sbb
mov
mov
xchg
je
push
add
mov
hlt
pusha
push
sub
or
or
cmp
push
cmp
pop
sub
popa
inc
pop
inc
mov
push
gs
out
shll
or
fs
das
or
enter
xchg
loopne
daa
xchg
and
stos
mov
fs
movsb
out
xor
dec
or
daa
jecxz
bnd
fdivs
push
xor
pop
cmp
mov
jne
mov
inc
pusha
push
pop
sarb
dec
movsb
mov
adc
pop
lea
or
mov
mov
adc
mov
xchg
mov
repnz
sbb
ss
imul
pop
xorl
outsb
stos
push
addb
push
mov
mov
push
inc
push
ret
jg
pusha
dec
mov
outsl
mov
push
jb
xlat
inc
lcall
dec
cmp
js
adc
xor
jae
inc
insb
movsb
loop
cli
push
add
mov
sbb
mov
cmp
or
loopne,pt
cmp
dec
rclb
cmp
push
imul
and
sbb
or
ds
fimull
mov
inc
fwait
aaa
icebp
lods
sarb
mov
fs
push
jle
mov
mov
push
in
ljmp
mov
xchg
adc
mov
or
and
mov
inc
sub
cmp
and
mov
inc
fists
mov
pushf
and
inc
or
ret
push
adcb
adcl
scas
adc
xchg
nop
jns
movsb
add
fwait
lods
hlt
pop
orb
push
adc
fdivs
dec
popa
and
lods
push
and
pop
or
add
mov
add
cmp
inc
adc
push
dec
and
pop
mov
loopne
and
sbb
cld
inc
call
jl
add
jl
sub
rcrl
inc
aaa
or
test
repz
dec
add
roll
sub
ret
adcb
jne
fadds
sti
dec
add
pushl
fdivrl
sbb
cmovg
iret
cmp
test
dec
or
call
lock
adc
loop
push
inc
popa
movsl
shlb
bnd
jbe
stos
cmp
mov
in
and
icebp
xchg
fmuls
jbe
adc
loopne
pop
in
push
xchg
je
push
and
cli
clc
push
mov
daa
andb
pusha
mov
pop
enter
add
pop
add
out
add
xor
jl
clc
nop
clc
rolb
int3
add
pop
bnd
adc
mov
xor
sbb
inc
frstor
aaa
xchg
and
and
lahf
jb
pop
dec
push
jo
mov
inc
cs
sub
xor
cwtl
inc
lds
shl
pop
repnz
jb
shrb
dec
adc
pop
dec
dec
nop
or
dec
xor
pusha
repz
xchg
rolb
pop
enter
dec
jo
pop
repnz
shlb
or
jns
or
test
loopne
dec
and
xchg
arpl
out
dec
dec
pushf
pop
jne
orl
push
xlat
into
test
push
add
or
or
enter
xchg
dec
call
dec
movsl
dec
loopew
data16
adc
and
add
push
mov
imul
add
jp
dec
adc
enter
orl
sub
push
sti
imul
decl
push
dec
ljmp
adc
and
shrl
iret
addl
inc
adc
xor
sub
les
pop
sbb
aam
rcl
sti
cmp
aam
push
xorb
xor
push
pcmpeqw
adc
das
pop
sub
push
inc
scas
and
push
mov
and
adc
cmpsb
jno
ds
imul
lods
mov
cmp
pop
pop
and
call
daa
and
js
inc
out
inc
pop
add
cmp
jne
shlb
lea
pop
sbb
outsb
sbb
cmovo
add
inc
or
clc
into
adc
inc
jo
sbbl
inc
popa
cmp
js
inc
pop
and
aaa
push
dec
test
mov
sahf
dec
test
and
inc
dec
movsb
jmp
jmp
or
cmp
pop
push
and
or
cmp
std
fcmove
push
mov
pop
je
nop
lahf
pop
and
loop
and
cmpsb
adc
incb
and
inc
and
dec
filds
or
les
mov
out
push
sbb
mov
mov
bnd
or
ja
push
je
and
stos
push
inc
jno
pop
inc
jl
das
and
pushl
push
movsl
cltd
mov
pushf
mov
and
or
and
sbb
jne
lea
and
sbb
ret
dec
lods
pop
mov
outsb
jbe
cwtl
in
mov
or
push
das
jmp
jnp
pop
push
sti
jmp
dec
and
mov
hlt
jne
xorb
or
inc
movsb
int
jmp
add
xchg
dec
sti
stc
dec
data16
add
fmull
shlb
fists
add
js
or
cmp
add
je
sub
js
xorb
aaa
jns
pop
adc
inc
ret
insl
paddusb
add
unpckhps
ss
hlt
mov
sbb
push
dec
sbb
dec
or
add
adc
inc
adc
inc
loopne
cmpsl
movsb
cld
sub
mov
sub
jbe
inc
add
cld
je
inc
loopne
xor
xchg
mov
sub
fiadds
gs
push
sbb
lods
cwtl
xchg
xor
aam
dec
sbb
jo
and
or
sbb
test
mov
js
jne
mov
mov
adc
jns
xchg
pushf
dec
inc
popf
mov
dec
pop
ret
mov
ja
addb
sub
hlt
es
daa
scas
adc
mov
sbb
or
mov
cmp
add
add
ss
aas
sub
incl
push
jle
jle
cld
adc
push
jne
and
inc
inc
or
add
xor
inc
iret
cwtl
mov
push
mov
push
jo
cmp
jo
adc
fs
mov
cltd
mov
fwait
enter
xor
jl
add
pop
inc
push
sbb
add
lds
je
fidivl
aam
xor
fs
shlb
mov
movsl
inc
ss
inc
int3
jl
sub
add
aaa
dec
orb
inc
clc
push
mov
sbb
sub
repnz
pop
add
or
or
cmp
add
adc
adc
sbb
sub
pop
stos
add
mov
adc
push
cmpb
cld
testb
sub
dec
jae
add
or
imul
xchg
jg
stos
mov
xchg
jo
pusha
cmp
inc
sbb
jle
push
mov
pop
adc
sbb
ljmp
or
mov
and
jbe
mov
adc
pop
jnp
loop
je
adc
add
ret
out
add
or
jne
add
in
push
leave
push
dec
add
inc
popa
add
mov
rclb
ret
jecxz
test
mov
mov
dec
or
add
xchg
nopl
push
mov
mov
in
or
add
daa
loope
cmp
sub
sub
inc
sbb
add
ret
adc
xor
mov
sub
sub
out
dec
cmp
test
adc
cmp
mov
inc
imul
xor
call
adcb
mov
ss
mov
xchg
rcl
dec
lock
xor
jae
ret
or
aaa
outsl
ja
and
inc
cs
add
pop
push
mov
and
mov
push
inc
movsl
mov
ljmp
fildl
add
dec
cmp
jl
cmp
loope
xchg
stos
test
inc
add
addb
fists
and
enter
xor
inc
dec
dec
xchg
pop
lea
out
jno
leave
or
mov
adc
xchg
push
outsl
cmp
sbb
dec
pusha
stos
dec
xor
jl
cmpb
push
cmp
cltd
mov
jmp
sub
pop
sbb
mov
lahf
mov
dec
shrl
add
mov
cld
roll
dec
enter
mov
out
jo
adc
repz
sbb
daa
jne
popf
xor
test
lret
repnz
lahf
mov
mov
bound
outsl
adc
popa
jecxz
inc
fcoml
mov
xlat
adc
sti
pusha
adc
inc
mov
mov
sbb
sub
iret
jb
fdivrp
sub
neg
jmp
arpl
je
and
pusha
sbb
pusha
lock
push
push
test
subb
and
mov
and
mov
adc
stos
ja
dec
aaa
inc
mov
pop
pop
push
adc
inc
or
sbb
add
add
pushf
and
ret
jl
xchg
pop
mov
ds
push
sbb
or
add
mov
inc
icebp
adc
mov
or
push
roll
inc
clc
add
int3
rcrl
cmp
je
js
or
and
adcl
xor
or
cmp
nop
mov
mov
inc
xor
cmc
mov
xor
or
jbe
cmp
cmp
adc
sti
jmp
inc
sbb
lea
cwtl
rorb
repz
insb
call
and
and
dec
push
filds
add
inc
push
adc
aas
scas
sub
push
std
jp
xchg
lret
aaa
leave
aam
cltd
and
mov
in
movsl
daa
sbb
fnstenv
stos
or
je
jnp
xchg
and
dec
and
push
dec
lret
mov
ljmp
and
pop
inc
push
iret
repz
outsb
mov
inc
jbe
pop
inc
cltd
cmp
jb
lods
or
shll
add
xchg
sbb
inc
mov
sub
add
sbb
xchg
mov
jle
push
sub
lock
clc
pop
dec
out
shlb
and
sbb
mov
testb
sbb
pop
add
adc
test
and
and
repnz
add
xchg
sbb
mov
xor
mov
cmp
push
mov
push
inc
imull
and
in
int
or
inc
sub
push
dec
inc
sub
syscall
xchg
mov
jo
sub
or
inc
xchg
add
cwtl
das
sahf
jo
or
jp
clc
xor
jle
or
dec
pop
dec
adc
ret
sbb
mov
or
sbb
je
pop
das
pop
pop
addl
shrl
enter
insb
pop
mov
ficompl
inc
test
mov
add
push
xchg
inc
fstpt
je
in
or
xor
orl
repnz
pop
into
add
das
xor
js
sbb
mov
cmc
add
push
add
iret
xor
xor
jae
push
add
popf
mov
sarb
add
add
insb
popa
lods
int3
sbb
aas
test
push
jle
ret
test
sbb
sbb
cwtl
test
mov
aam
cmp
popa
enter
pushf
cmp
sbb
test
xor
int
enter
sub
pop
test
ret
xlat
call
fisttpl
push
je
adc
push
stos
sub
mov
sbb
test
or
mov
push
lods
call
clc
sbb
sbb
ja
inc
fiadds
pop
sbb
dec
adc
fwait
adc
xor
push
ljmp
lahf
aaa
mov
stos
dec
out
inc
or
dec
testb
and
push
lret
dec
inc
pop
js
or
ret
xchg
xlat
aad
push
mov
pop
add
cli
rorb
movsb
mov
jle
cld
pop
cwtl
jno
mov
adc
andl
push
in
imul
mov
shll
jb
pop
xor
popa
aam
jnp
add
rclb
fmuls
and
and
cmp
dec
cmp
arpl
cmp
test
and
jb
cmp
mov
cmp
movb
add
push
xchg
add
inc
ss
shlb
and
or
jnp
lahf
stos
adc
aaa
lock
sbb
pop
nop
inc
mov
mov
push
cmp
lret
and
imul
cvtpi2ps
aaa
inc
push
push
add
add
and
dec
into
mov
lods
pop
andb
dec
push
mov
sbb
pop
call
push
mov
add
sbb
leave
mov
iret
dec
mov
jg
and
dec
out
jns
int3
adc
ja
call
pop
je
mov
sbb
sbb
cwtl
outsl
out
sbb
rcrb
fs
mov
ja,pt
pop
push
inc
sub
xlat
mov
jo
lcall
inc
sub
sbbb
fildl
in
inc
lods
mov
push
ret
or
inc
mov
addr16
dec
outsl
jbe
inc
xor
xchg
adc
mov
sti
pop
mov
dec
cmp
adc
aaa
test
iret
push
jb
dec
xlat
loopne
rorb
cmp
outsb
push
icebp
ja
inc
sarl
incb
sub
add
xlat
sbb
es
or
sbb
mov
ret
sbb
outsl
into
or
pop
loope
fists
pop
out
push
in
lea
push
mov
xchg
adc
enter
loopne
outsl
inc
aaa
xchg
test
xor
or
in
jne
add
mov
fucomi
push
sub
dec
ja
mov
and
xor
or
outsb
fcomip
sbb
enter
mov
adc
gs
stos
adc
daa
fmuls
and
repnz
pop
ss
adc
or
inc
dec
scas
cmp
addl
int
movsb
sbb
fs
nop
popa
in
add
pop
xchg
and
push
mov
aad
enter
ja
push
nop
xchg
adc
gs
loope
stos
add
pop
inc
and
dec
pushf
or
mov
and
frstor
mov
xchg
add
cwtl
jo
cmc
call
popw
test
aam
stc
xor
ret
lret
popa
insl
popa
add
jne
sbb
dec
jmp
jg
mov
mov
jns
or
dec
push
aaa
jb
push
subb
add
pop
fs
je
xchg
hlt
pop
in
repz
xor
push
add
movsb
stc
push
xor
xor
mov
sbb
cli
push
int3
adc
jmp
jmp
mov
negl
lea
aam
and
enter
or
xchg
hlt
test
add
push
mov
sbb
loope
fs
adc
xchg
mov
push
pop
or
push
pop
add
sbb
push
mov
sbb
pop
ret
out
cmp
imul
ja
rclb
push
fists
imul
pop
mov
arpl
dec
add
xlat
push
or
das
add
cmpsb
xlat
cmp
adc
xchg
test
xchg
maxps
mov
jmp
push
push
sub
std
test
push
arpl
inc
test
shr
adc
jmp
in
mov
rcrl
jmp
cltd
mov
and
sub
imul
and
scas
cli
stc
push
ret
div
andl
je
mov
add
fbld
mov
adc
div
js
or
mov
daa
mov
lahf
mov
nop
push
inc
lods
fcom
mov
xor
add
adc
push
daa
orl
and
pop
insb
xor
push
les
insb
rol
mov
add
pop
test
nop
mov
test
adc
sub
fcoml
andb
addl
jns
mov
pushf
sub
loopne
cmp
jb
mov
lret
pop
adc
inc
push
or
xchg
push
pop
and
inc
and
mov
dec
andb
jo
jne
test
pop
adc
daa
iret
adc
in
xor
mov
andl
add
pop
insb
inc
jo
jecxz
leave
add
adcl
cmp
dec
xchg
stos
pop
xchg
subb
shlb
cmc
sub
sbb
out
fnop
or
je
push
fildl
pop
into
mov
push
cli
test
cmp
js
leave
mov
xchg
in
add
sbb
and
mov
xchg
or
cmpsb
leave
add
inc
inc
add
xchg
in
mov
mov
fwait
cmp
add
and
sub
add
inc
fs
adc
fmuls
jecxz
push
inc
inc
xorl
xor
sti
dec
leave
loope
or
xchg
and
xchg
dec
pop
sbb
mov
setg
fisubl
gs
dec
and
sbb
inc
mov
mov
sbbb
inc
mov
add
xlat
pop
adc
sbbl
cmp
test
jp
xor
in
lock
fnstenv
sbb
and
mov
or
fwait
mov
inc
add
push
push
loopne
lods
pop
jnp
stos
xor
mov
add
inc
sub
dec
and
jb
cmp
mov
repz
cmp
adc
filds
jb
addr16
add
mov
int
imul
jl
mov
fs
int3
cmp
addb
mov
popf
xor
cltd
fadd
dec
dec
sbb
xchg
bound
jae
add
inc
inc
mov
dec
or
pop
orl
push
int3
add
in
nop
sti
lock
xchg
test
cmpsl
xor
adc
leave
int
adc
adc
xor
mov
fwait
sub
add
jne
dec
adc
loopne
fcomi
andl
push
insl
stc
mov
les
ss
mov
adc
mov
adc
add
das
daa
push
xor
jo
leave
movsl
cli
popa
dec
xchg
jno
jnp
inc
popa
fists
sub
jmp
add
cmp
scas
or
cmp
pop
mov
and
or
aaa
in
mov
and
and
je
mov
push
push
out
xor
or
nop
cmp
adc
and
push
mov
xlat
inc
or
mov
lret
rolb
mov
pop
fstl
sbb
mov
sub
movsb
push
mov
mov
sbb
cmpsl
mov
lock
daa
add
xor
incb
and
pop
xor
mov
in
jno
xor
inc
rorb
in
rolb
add
xchg
test
mov
jecxz
mov
dec
xor
adc
js
nop
fwait
or
dec
adc
add
jecxz
add
mov
daa
cmpsl
xlat
in
dec
jmp
pop
mov
push
ret
test
inc
sub
insb
sub
xlat
add
add
adc
insl
ljmp
dec
ret
xchg
aas
adc
lods
sub
sbb
cmp
jp
adc
loope
mov
dec
dec
int
pop
jg
imul
fs
call
and
jne
push
out
pusha
lods
jl
push
and
mov
sbb
fcmovb
dec
inc
and
xorb
sub
inc
cmpb
push
xchg
pop
add
mov
int
sbb
int
dec
insl
add
sub
add
mov
jecxz
mov
pop
sub
lods
xor
sbb
xor
jp
adc
jg
sub
lcall
jae
repnz
loop
cmpsb
hlt
data16
aas
add
insb
xchg
iret
jmp
add
aas
xor
mov
arpl
jo
adc
cmpl
adc
daa
mov
sub
nop
push
imul
add
push
mov
cmp
jae
pop
jle
and
and
sarb
pusha
inc
iret
xchg
sbb
cmp
xor
aaa
clc
call
pop
icebp
push
xlat
xchg
out
mov
aad
mov
dec
xor
sbbl
rolb
pusha
pop
out
lret
add
or
lods
fucomip
call
xchg
dec
adc
or
add
es
js
jmp
cmp
pushf
push
xor
sbb
popa
jns
imul
loop
pusha
xor
mov
je
push
ret
push
outsb
and
adcl
cmc
int3
iret
nop
mov
mov
sub
jne
ljmp
adc
mov
sbb
jne
pop
mov
or
sbb
sbb
shl
shl
add
or
dec
xchg
testb
jecxz
mov
jmp
andb
les
cmp
faddp
push
loopne
mov
or
mov
insl
and
int3
inc
jne
loopne
add
xorb
xchg
sub
nop
test
mov
sbb
popf
add
dec
movsb
mov
fcomps
jns
mov
insl
mov
sbb
or
jl
jo
and
or
adc
icebp
push
mov
fbld
out
sbb
or
negl
adc
xorl
test
sti
add
in
inc
push
out
cmpsb
sbbb
cli
jl
decl
and
andb
test
shll
sbb
movsb
add
test
subb
xchg
ss
xlat
add
xor
push
dec
daa
and
inc
and
sbb
testl
dec
xlat
fimull
cwtl
xor
mov
dec
sbb
dec
inc
out
aad
dec
xchg
mov
jge
pop
lahf
sub
fidivs
outsl
mov
insb
pop
inc
xchg
addl
je
jo
int
add
add
dec
aad
movsb
outsl
xchg
ljmp
xorb
xor
and
rcrb
shlb
xchg
cli
jne
test
mov
adc
gs
mov
fwait
js
movsb
shll
xchg
push
in
push
mov
mov
adc
cmp
inc
data16
dec
sarb
mov
pusha
sbb
xchg
jo
mov
inc
fs
add
shll
xor
sbb
add
in
dec
scas
inc
inc
mov
dec
dec
or
add
inc
js
icebp
sar
fs
mov
cli
mov
cmpb
inc
push
dec
mov
xchg
inc
xchg
or
dec
in
cmp
das
addl
sti
or
dec
sbb
idivl
int
fs
imul
add
and
daa
mov
sbb
mov
pop
hlt
addr16
or
fwait
fs
lret
pop
hlt
add
pop
hlt
call
call
mov
inc
or
lock
jmp
push
push
aaa
addl
adc
loopne
cmpl
lods
add
pop
adc
addb
xor
inc
sbb
xchg
jle
cwtl
in
sub
mov
cmp
push
xor
and
lea
adc
jns
push
cmp
pop
jle
and
test
in
jne
sub
jg
and
and
jmp
add
imul
inc
xor
xor
adcb
or
and
inc
mov
mov
add
movsb
mov
sbb
mov
mov
xchg
inc
inc
inc
sub
push
nop
addb
add
sub
test
xchg
leave
aam
cwtl
ja
call
andl
add
sbb
mov
jle
dec
push
inc
add
or
pop
test
sub
add
fs
or
inc
or
or
xchg
xchg
xchg
or
push
xorl
dec
imul
movsb
jnp
jge
adc
mov
popa
push
or
mov
jo
push
pushf
inc
or
push
and
cmp
mov
sub
es
fcmove
les
add
popf
xorl
subl
mov
lock
cltd
hlt
inc
or
pop
mov
jle
movsb
neg
in
mov
inc
enter
test
cmp
adc
dec
push
push
or
sti
cmpsl
mov
lahf
into
sub
popa
jno
andl
xchg
pop
rolb
pop
jle
inc
sbb
cwtl
push
dec
jmp
push
push
push
mov
sub
cwtl
mov
lock
adc
outsl
sbb
push
xorb
sarl
or
push
adc
enter
lock
cmp
mov
or
sbb
sub
mov
and
fstl
cmp
es
out
and
mov
test
into
add
cltd
in
movsb
add
sbb
outsb
leave
test
sbb
stos
inc
xorb
call
push
mov
jae
pushf
test
inc
daa
int3
shrb
adc
fnstcw
jo
or
push
pop
push
xchg
lock
adc
subl
dec
inc
pushf
pop
pop
mov
adc
sub
outsl
or
inc
jb
ficoms
dec
lea
sbb
dec
xor
test
or
push
adc
push
daa
or
clc
outsl
js
ss
andl
gs
mov
movsb
add
xchg
and
xorb
mov
mov
hlt
xor
mov
and
imul
adc
sbb
sbb
mov
jmp
cmpsb
mov
pop
movsl
sub
sbb
add
fiaddl
push
or
ss
mov
fs
inc
sahf
xchg
add
add
or
add
jl
ret
dec
clc
xchg
test
adcl
cmp
mov
imul
mov
dec
or
lahf
xchg
rorb
ret
mov
add
cmp
push
push
pushf
shlb
stos
cmp
push
pop
push
pop
pop
adc
test
add
adc
xchg
stos
clc
mov
jg
cmp
jle
mov
pop
sbb
andl
jno
and
or
jmp
push
cmp
cmp
imul
push
arpl
jns
adc
pop
pop
outsb
push
arpl
ss
addr16
jge
or
jmp
test
jmp
les
aad
imul
out
or
cmp
push
jle
or
sub
sbb
cmp
repz
add
dec
adc
movsb
jbe
or
lret
and
addb
adc
push
shrd
or
adc
mov
clc
cmp
rol
xchg
sub
mov
add
dec
cmpsl
cmp
repz
mull
loopne
sub
inc
ja
mov
xor
loope
adc
mov
loope
icebp
fcmovbe
jno
sub
and
popa
icebp
sub
xor
add
xchg
orl
xchg
jo
repz
adc
or
dec
push
cld
adc
das
push
mov
dec
rcll
pop
adc
mov
mov
hlt
test
add
int3
clc
inc
jmp
adc
cmp
je
mov
mov
bound
pop
mov
mov
daa
sbb
outsb
adc
xchg
mov
jg
adc
subl
jo
sbb
fwait
xor
inc
sub
rclb
push
push
sbb
sub
addb
mov
aaa
mov
mov
aaa
push
nop
xchg
dec
add
aam
mov
jl
inc
xchg
sbb
add
and
pushf
add
add
jl
dec
inc
outsl
adc
mov
push
cmpsl
or
push
mov
cmpl
pop
add
data16
cmp
clc
fbld
jge
shlb
sub
adc
or
add
mov
xchg
fadds
add
sbbb
push
pop
pop
ret
or
mov
add
movsb
mov
pop
dec
adc
jmp
cwtl
xchg
add
inc
adc
mov
adc
fdivs
and
cmpsb
dec
fistpl
dec
or
adc
fcomps
int3
push
cmp
jl
faddl
jne
mov
push
xchg
aam
imul
bound
add
mov
mov
add
add
out
add
scas
sbb
jmp
shll
jp
flds
mov
mov
cmpb
cmpl
cltd
xor
pop
out
xchg
js
ret
lods
pop
add
aad
fs
push
inc
loope
or
xor
mov
enter
push
rcrl
hlt
in
adc
repz
daa
push
or
aad
insl
inc
xchg
xchg
ljmp
add
andb
sbb
mov
inc
stos
pop
or
js
inc
das
or
dec
dec
inc
daa
fdivs
sbb
fwait
xchg
pop
or
push
inc
in
lock
push
cld
jne
rolb
ljmp
cltd
mov
adc
imul
enter
lahf
xor
icebp
cmpsl
cld
stos
push
inc
loopne
aad
fistps
mov
mov
pop
pop
pop
arpl
mov
dec
ret
mov
sbb
push
sbb
scas
adc
sbb
lock
pusha
jmp
stos
ss
sub
push
and
aaa
xchg
push
push
add
dec
gs
jge
and
std
mov
mov
pop
cwtl
dec
sub
movzwl
add
pop
and
sbb
push
jne
add
loope
out
jmp
xor
inc
inc
pop
aaa
adc
inc
xchg
push
int
cmp
jl
inc
divb
iret
repnz
pop
das
inc
call
jae
paddusw
cmpsl
aaa
xchg
cmp
push
mov
xchg
icebp
mov
push
push
push
add
je
jp
cmovl
ds
dec
inc
sbbl
loopne
inc
push
bound
push
sub
cmp
fldl
adc
xor
leave
push
push
adc
nop
xchg
das
add
in
sbb
cmp
push
or
addr16
sbb
nop
or
push
insb
or
adc
das
cmc
push
loope
fdivs
cmc
fidivl
dec
add
pushf
and
add
daa
imul
orb
stc
and
jbe
xor
stos
mov
fdivrs
xchg
cltd
sbb
sub
adc
rorb
and
dec
xchg
mov
push
push
pop
and
cmp
inc
sub
outsl
mov
push
jns
rolb
adc
insl
rolb
jns
in
movsl
cltd
mov
jo
push
push
jl
xchg
enter
je
cmp
ret
mov
jo
aas
add
sahf
fldenv
fstl
sub
jns
cmp
test
cmc
push
bound
jge
cs
shrl
cmp
sbb
mov
pop
sarl
adc
and
imul
les
sbb
lds
imul
or
les
lcall
dec
mov
js
pop
in
push
popa
xor
cmp
jne
xchg
cmp
sub
fwait
push
mov
movsb
lret
pop
add
push
cmp
push
fsubrs
mov
mov
push
sbb
out
mov
mov
sub
dec
push
add
sub
or
shrb
imul
cwtl
iret
pop
sarl
stc
or
ret
arpl
xor
and
or
push
pop
shrb
ret
xchg
push
inc
sbb
js
ss
into
mov
xchg
cmp
je
pop
jnp
push
movl
fildl
dec
and
or
fcmovnu
pop
cmpsb
cmc
or
mov
inc
nop
ficoml
gs
and
loopne
popf
push
pop
pop
inc
inc
and
or
adc
bound
mov
add
jmp
mov
pop
sbb
stos
adc
xchg
stc
sub
icebp
test
fucomi
sbb
push
negb
pop
add
lret
sub
or
jo
lar
adc
push
mov
sub
into
in
jge
in
mov
mov
test
jle
or
mov
stos
inc
pusha
or
or
sbb
enter
fcmovb
je
or
xchg
fs
cli
call
cmp
hlt
or
add
cmpsl
jbe
ss
adc
sbbb
xor
sub
cmc
and
cmp
outsl
test
ljmp
rclb
xchg
adcl
or
loope
adc
sbb
jg
cs
cs
testl
mov
or
xor
scas
arpl
pop
fistps
or
or
adc
xchg
ja
lret
push
pop
adc
orb
test
fs
bound
inc
and
add
cmp
sbb
xchg
cmp
pop
popa
cltd
dec
sbbl
lahf
je
pop
lcall
idivl
push
dec
adc
xorb
jmp
inc
add
add
sub
sbbl
popa
mov
mov
lahf
adc
arpl
in
cld
mov
adc
or
dec
push
iret
cltd
jo
jbe
mov
jns
add
push
insb
or
sub
movsl
or
lea
sub
test
push
pop
mov
scas
jge
rcrl
sbb
pop
scas
mov
add
add
and
mov
inc
cmp
push
dec
rolb
cmpsb
add
push
jl
add
sbb
fisubrs
data16
sbb
pop
sub
and
lock
inc
lock
jmp
mov
sub
shll
mov
loope
xor
sbb
xor
outsb
int3
sbb
adc
mov
mov
mov
das
sbb
xchg
enter
mov
xchg
ret
das
add
aas
xlat
sarl
push
sub
lock
ret
cs
or
shlb
mov
in
mov
es
inc
cmp
adc
lret
pop
notb
jl
add
mov
cs
jp
sbb
int3
jg
lods
dec
fistl
push
shr
je
xor
es
sbb
sbb
cltd
incl
jmp
add
mov
sbb
in
or
stos
ljmp
or
fwait
cmp
cmp
sahf
sub
fidivs
mov
test
and
bound
dec
jl
stc
mov
inc
test
or
imul
sub
jecxz
pop
dec
or
je
xchg
pop
nop
or
adc
repnz
addb
cmp
out
adc
sub
jne
outsl
xchg
sub
lea
mov
and
mov
sub
add
loopne
or
cmpl
or
adc
adc
sbb
add
mov
lea
sub
test
mov
push
scas
test
pusha
mov
nop
mov
jl
mov
sbb
call
idiv
inc
sub
lock
pop
or
push
mov
int3
cltd
mov
add
xchg
cmovbe
mov
add
mov
js
out
lret
out
pop
arpl
lds
xor
dec
ret
rorb
dec
js
jb
sub
inc
jmp
and
cmpsl
push
push
clc
and
bound
dec
lods
aam
insl
adc
xor
stc
mov
add
push
xlat
xchg
inc
adc
insl
mov
mov
xorl
lock
sahf
mov
xchg
or
sti
cmp
xor
adc
push
xorb
popf
test
lea
adc
pusha
incl
ds
push
add
in
add
cmp
sbb
cltd
inc
mov
fstps
stc
mov
cmp
sbb
je
movsb
dec
dec
inc
cmp
or
fbstp
add
adc
and
adc
cmp
mov
pop
lods
out
mov
sbb
sbb
clc
xchg
xchg
mov
movsl
rcrl
xor
sbb
mov
movsb
test
dec
stc
xor
jmp
nop
in
add
dec
xor
jne
xor
sbb
clc
bound
cmp
imul
cs
mov
jge
jecxz
lods
shrb
adc
sbb
or
adc
push
fistl
xlat
adc
dec
arpl
ret
inc
test
sub
outsb
jno
dec
dec
lods
outsl
jmp
cmp
or
clc
mov
push
data16
movsb
scas
jl
jle
mov
inc
add
cltd
jo
push
clc
arpl
je
das
mov
mov
mov
mov
rolb
cmp
aad
in
dec
add
mov
adc
push
inc
stc
jmp
and
sbb
mov
sbb
adc
and
ljmp
ss
jb
xchg
mov
pop
pop
xor
lahf
inc
add
dec
adc
dec
js
add
sbb
jne
data16
xchg
sub
out
cmp
inc
cmpsb
push
test
mov
fistl
rclb
mov
jo
adc
das
push
pop
cwtl
adc
inc
ret
cli
not
and
mov
popa
rorb
jg
mov
cs
mov
and
dec
add
dec
jnp
sti
jne
aam
sub
add
xchg
cmpsl
das
and
pop
and
cmp
mov
movsl
pop
test
mov
call
rcrl
mov
ja
pop
xor
mov
test
xor
aaa
cmpl
lcall
push
sbb
adc
stos
inc
rolb
mov
xor
mov
or
scas
insl
sbb
adc
xchg
loopne
sbb
out
rorl
sbb
push
call
arpl
inc
movb
or
jnp
aad
or
dec
inc
aaa
lock
cmpl
inc
inc
je
fildll
std
push
cmp
cmpb
push
mov
arpl
in
popf
pop
rorb
sbb
shlb
and
jbe
test
cmpsl
stc
icebp
push
lea
adc
inc
fmulp
adc
jle
mov
cmp
sub
push
roll
fdivrs
cld
bound
mov
rcl
sbb
fsubrl
xchg
pop
jb
pop
add
hlt
push
imul
test
clc
cs
sub
cmpsb
in
rclb
mov
nop
fs
sbb
add
das
aad
cmp
sbbb
test
sub
jb
xchg
mov
jo
test
and
call
cmpsl
rclb
testb
sbb
sub
push
sarl
es
sbb
icebp
jp
sub
push
or
push
les
jmp
fwait
pop
ret
cwtl
push
orl
push
xor
or
loopne
lds
loop
mov
js
pop
sub
add
pop
and
arpl
add
aam
adc
sbb
sti
and
mov
jmp
jecxz
sub
shll
insb
movsl
inc
adc
leave
pop
mov
ficoml
imul
sbb
jb
xlat
lock
xchg
andb
sbb
out
pop
push
popa
xorb
ret
or
dec
jns
sbb
roll
outsb
or
popf
or
add
int
rsm
imul
arpl
stos
add
mov
mov
xchg
stos
mov
inc
push
mov
pop
xorb
jp
xor
xor
aaa
or
imul
mov
inc
insl
pop
loop
xorl
xorb
adc
xchg
test
ja
in
sub
jne
inc
adc
cltd
das
in
push
sarb
aad
jmp
sub
wbinvd
cltd
mov
cmp
push
daa
dec
mov
arpl
sbb
dec
push
cmp
nop
out
testb
insl
fs
push
jl
push
sub
jne
pop
pop
sub
xor
stos
insb
enter
pop
subl
aaa
jmp
add
arpl
dec
jbe
dec
sbb
insl
inc
aaa
test
xor
or
add
push
adc
loope
jno
icebp
pop
rcrb
pop
lret
adc
aad
arpl
aaa
inc
add
je
loop
inc
icebp
imul
cmp
inc
popa
push
push
or
cmc
outsb
and
push
dec
cwtl
adc
and
push
add
sub
add
xchg
rol
pop
call
cmpsl
aaa
push
dec
cmc
sarb
dec
mov
push
cmovge
mov
out
xchg
sub
sbb
aad
adcl
sbb
push
hlt
dec
mov
mov
jbe
fisubs
xlat
jno
lea
insl
imul
push
inc
jle
jo
icebp
mov
jne
inc
shlb
test
lock
scas
testl
test
push
or
sbb
add
or
js
popa
shrb
leave
add
fcompl
pop
push
mov
pop
orb
psllw
push
mov
xchg
xchg
outsl
inc
or
cmp
arpl
lea
imul
sbb
fs
add
mov
popa
inc
or
xlat
insl
mov
sti
sbb
lods
or
add
int
add
cmc
sti
scas
mov
xchg
imul
lods
pusha
insl
out
out
add
or
add
inc
push
inc
cmp
mov
insb
inc
or
test
or
add
or
cmpsl
je
gs
call
xchg
dec
add
lds
inc
push
add
cwtl
aad
xchg
cmp
daa
aaa
add
inc
inc
pcmpgtd
pusha
xchg
lock
add
dec
fmull
int
push
mov
or
addl
lds
or
movsl
mov
xchg
clc
inc
nop
dec
js
jnp
mov
xorb
pop
daa
adc
jp
ret
int3
xchg
movsb
int3
push
test
xor
repz
push
loopne
inc
add
sbb
sub
mov
lock
das
push
mov
nop
orb
add
adc
cmp
add
andl
test
or
in
or
fmuls
mov
and
or
addl
and
shlb
cmp
add
pushf
and
or
movzbl
fadd
das
popa
add
outsl
add
add
aam
cli
movb
test
daa
jecxz
into
dec
shlb
cmp
add
mov
and
sub
sbb
mov
pop
dec
je
push
lock
sbb
aaa
or
sbb
add
leave
lcall
xchg
pop
sub
mov
xorb
mov
lahf
movsb
jo
and
mov
xor
leave
pop
and
lods
aam
mov
jmp
leave
xorl
out
cmp
jne
pop
add
roll
outsl
movb
lods
adc
jne
outsb
adc
mov
xchg
push
adc
loopne
mov
mov
repz
push
mov
add
add
sub
call
xor
repz
xlat
inc
cwtl
jne
dec
inc
repz
push
cmpsb
inc
xlat
ret
jmp
aas
mov
xchg
insl
aaa
sbb
sub
and
pop
testb
cmp
and
daa
xor
dec
fs
sahf
xor
sbb
in
enter
push
add
ds
mov
jge
jmp
jae
fsubrl
inc
jl
jmp
push
sub
repz
sar
xchg
shlb
clc
dec
stos
sub
or
push
inc
or
cli
out
add
push
cmp
push
cmp
add
shlb
add
or
and
sbb
cmpsb
pop
mov
push
test
inc
fisttps
jecxz
shrl
cli
lahf
aam
cmp
icebp
mov
shll
push
cmpsl
aam
add
sbbb
mov
jl
add
push
push
cmc
mov
inc
test
int
js
push
ljmp
xlat
push
aas
inc
dec
add
adc
and
repz
or
int3
jne
repnz
shr
sbb
dec
mov
dec
dec
inc
and
push
dec
and
push
stc
rorb
ja
xchg
shlb
rorb
add
addr16
fisttps
aas
mov
fwait
shrb
and
and
dec
dec
enter
sbb
fiaddl
aam
cmpsl
inc
in
xchg
sbb
xchg
adc
icebp
sub
repz
or
mov
jg
insb
jle
xor
xor
shrl
pop
jg
and
cmp
add
nop
jnp
je
rolb
inc
or
rolb
sbb
mov
cli
pop
lcall
jge
fsub
and
xor
push
fmul
shlb
jo
daa
add
mov
sbbb
mov
pop
cs
cmp
pop
pop
and
dec
ja
test
adc
push
lret
inc
add
pushf
mov
call
add
xor
cs
shll
inc
push
repz
xor
or
scas
and
jo
icebp
jl
add
or
xor
addr16
in
and
movl
inc
cmp
sbb
inc
inc
cmc
and
imul
cli
daa
je
mov
and
or
je
fwait
xchg
pop
and
imul
xchg
push
scas
idivb
repz
xchg
call
lods
pop
and
test
and
inc
push
stos
fnstcw
lret
jnp
add
xor
jle
dec
mov
stos
stos
sub
dec
and
sbb
xor
xchg
mov
shld
jne
dec
fcmovnbe
out
adc
fdivs
pop
dec
mov
rclb
mov
pushf
ss
xor
push
ret
and
in
jnp
jne
jne
mov
into
add
sub
dec
stos
and
or
out
xor
ljmp
jmp
enter
rcll
ret
stos
int
mov
jp
les
in
lods
cld
xchg
jl
rolb
xor
or
adc
jge
inc
pop
jne
mov
xor
dec
inc
imull
loop
and
push
cmp
jecxz
and
adc
test
and
stos
mov
push
dec
mov
ret
and
sbb
mov
adc
dec
or
scas
dec
cmp
add
fcoms
push
pop
and
mov
push
mov
or
sti
cltd
cmp
repz
lock
dec
lock
popl
bound
cmp
cwtl
inc
lcall
rcl
icebp
add
or
xchg
icebp
mov
jmp
testl
sbb
jp
std
dec
sub
rcll
jno
shrl
and
bound
add
inc
idivb
rol
cltd
cmp
jns
gs
nop
dec
jecxz
cmp
sbb
sub
adc
xchg
pusha
xchg
sbb
pop
jp
mov
clc
jno
mov
adc
adc
push
mov
movd
sbb
adc
adc
pop
add
lds
sti
insl
xor
xchg
or
add
arpl
sub
push
sarb
mov
loope
add
add
sbb
adc
scas
push
insl
cmc
shrb
push
je
or
push
test
add
movsl
add
push
xchg
aas
xchg
dec
adc
add
mov
xor
sarl
cmp
hlt
sub
movl
xchg
add
shll
pop
orb
cli
or
mov
pop
aam
lods
jo
pop
add
cmp
rorl
jge
loopne
cltd
jmp
sbb
sarb
in
andl
push
pop
sbb
imul
inc
add
call
sbb
js
and
jne
jns
or
add
jns
jae
xor
ja
xor
and
sub
xor
cmovbe
mov
mov
stos
sbb
inc
cltd
push
nop
test
aaa
inc
jmp
pop
sbb
in
aaa
ret
dec
add
dec
sbb
lods
fcompp
or
or
cmp
and
xchg
push
pop
adc
mov
enter
das
mov
imul
pop
aaa
and
in
mov
loopne
add
sahf
xchg
mov
cwtl
sub
add
in
aaa
int
mov
inc
mov
cs
add
sbb
dec
or
push
pop
lds
or
in
fmuls
adc
push
pop
mov
into
push
push
in
stc
clc
jns
xor
xchg
pop
add
test
dec
jo
xor
or
mov
xor
inc
mov
test
fstps
popa
inc
mov
add
pusha
hlt
inc
inc
int
test
inc
jbe
mov
imul
lret
add
add
mov
orb
xorl
mov
xor
fsubl
sahf
sahf
out
dec
mov
loopne
adc
je
test
in
xchg
test
sbb
addr16
ret
imul
dec
sbb
repnz
flds
ret
popa
pop
je
icebp
into
jp
jle
add
cmp
push
sbb
pop
fsts
jmp
popa
ret
or
lock
shl
mov
sbb
mov
insb
jae
or
mov
xorb
cmp
movl
inc
stos
and
jmp
xchg
es
and
fnsave
mov
sub
mov
inc
jl
pop
xor
mov
mov
subb
add
push
mov
xchg
add
add
popa
push
dec
dec
test
test
sbb
mov
add
add
xchg
cs
loope
loope
fisubrs
sub
cmp
inc
scas
push
clc
in
push
subb
dec
lods
adc
push
adc
add
addb
faddp
or
or
aam
ret
add
rcl
es
jle
jne
dec
dec
add
inc
rcrb
or
repnz
adc
add
subb
vmovaps
pop
lods
sub
push
and
pop
adc
inc
cmp
cli
mov
sub
outsl
je
sub
xchg
xor
scas
sub
sbb
push
sub
dec
shrb
icebp
cmpsl
pop
lock
je
shlb
or
sbb
dec
or
sbbl
lea
and
jns
sbb
dec
inc
sub
and
push
add
push
faddl
sbb
shrl
jmp
fwait
mov
add
jne
mov
mov
in
mov
lea
adcl
mov
mov
sub
sbb
add
push
icebp
add
mov
scas
test
push
push
and
rorb
and
xor
and
add
jl
pushf
fiaddl
xchg
mov
jno
add
xor
mov
pop
sarb
jl
lds
and
push
aam
add
push
pop
mov
xor
sysret
xchg
les
pop
cmp
pop
or
orps
push
pusha
clc
mov
xchg
imul
pop
xchg
dec
loop
cmp
negb
outsl
lock
out
mov
push
and
push
pop
movsb
xor
out
ret
es
pop
ds
cmp
lock
mov
cmove
rcrl
or
push
jecxz
pop
nop/reserved
sub
pusha
jb
clc
enter
pop
orl
add
sub
dec
add
xor
lret
scas
dec
rcrb
imul
push
lea
sub
sbb
jge
push
mov
sarl
or
add
testl
out
pop
or
mov
ret
sbbl
dec
xchg
rorb
test
ja
jle
daa
mov
or
xor
xchg
call
or
mov
cltd
rcl
push
mov
add
repnz
jmp
push
and
sub
rorb
shll
jbe
xor
and
mov
rolb
xabort
adc
loopne
in
imul
cmp
push
xor
push
inc
push
add
sub
arpl
aas
lock
fs
push
lods
xchg
fcoms
push
jg
push
in
nop
pop
sbb
jl
add
jg
sbb
sbb
in
lds
imul
jne
add
iret
pop
sub
test
pop
mov
mov
and
clc
or
sub
push
nop
imul
xchg
cmpsb
adc
mov
pop
scas
mov
sub
jbe
xor
add
fmull
push
les
and
sahf
and
push
out
add
stos
inc
call
push
add
inc
cmp
and
cmp
and
jle
inc
inc
mov
js
hlt
jo
pop
dec
fsubs
push
cmp
or
push
adc
inc
sub
sub
stos
pop
mov
lods
test
sar
fldpi
cmp
mov
pop
hlt
dec
fstpl
dec
add
jne
clc
in
push
xor
out
and
adc
rolb
iret
pop
or
aam
ror
and
add
inc
push
or
adc
xor
lock
or
pop
dec
test
add
pop
rorb
add
sbb
fsubr
je
xchg
cmp
pop
adc
outsl
add
lock
add
xchg
addl
push
fwait
nop
insl
pop
xlat
jle
icebp
mov
nop
movsb
push
mov
push
mov
inc
out
add
xor
mov
dec
shrb
cmp
lahf
nop
inc
inc
mov
outsl
sbbl
or
ljmp
xchg
hlt
or
push
add
mov
mov
xchg
add
sub
cmp
jmp
mov
push
add
add
mov
imul
sbb
dec
adc
loope
mov
rcll
aaa
push
les
in
lds
pop
push
jo
add
jne
lock
or
xlat
add
or
das
bound
aaa
das
test
lea
ss
test
rcr
inc
push
inc
fistl
add
sub
push
xor
pop
adc
push
inc
inc
add
lock
xor
js
ret
pop
mov
loope
ss
hlt
fnstcw
or
leave
movsb
push
mov
insl
inc
xchg
cmp
xor
pop
inc
insb
sbb
je
push
jnp
lea
es
dec
mov
pop
out
pop
push
mov
or
mov
ret
adc
pop
jl
mov
cltd
sbb
inc
cmp
xchg
nop
js
arpl
xchg
pusha
pushf
mov
fsubp
js
enter
cmp
test
insl
sub
xchg
les
imul
jb
pop
jb
push
dec
pop
jb
pop
xor
xchg
bound
stc
pop
mov
mov
pop
out
cwtl
nop
pop
lds
add
sarb
dec
push
mov
jl
sbb
adc
add
pop
or
lock
push
aad
mov
leave
and
dec
inc
pop
dec
jb
ljmp
dec
repnz
pop
pop
jb
jnp
dec
aam
push
push
xchg
sub
pop
mov
xchg
and
dec
dec
flds
push
push
add
in
mov
inc
pusha
sbb
movsb
and
mov
pop
push
mov
iret
pop
cmp
sbbb
test
dec
dec
xchg
outsb
jnp
insl
scas
outsl
je
adc
loop
dec
ss
cmp
enter
mov
jb
sbb
push
call
in
adc
sti
test
xchg
mov
out
jl
or
jle
test
cmp
mov
enter
xchg
xorl
or
xchg
or
mov
pop
sti
xor
decb
or
add
pop
adc
insb
cmp
adc
cmp
push
push
push
push
pop
or
jge
dec
xchg
cmc
push
xor
inc
imul
sub
adc
clc
lahf
cmp
cltd
roll
sbb
mov
pop
jne
pop
or
add
pop
inc
sbb
movsb
pop
cmp
xor
or
jo
jno
movb
out
cld
jb
adc
lods
test
dec
add
aaa
dec
mov
xor
std
cmp
test
cmpb
sbb
pop
lock
repnz
xchg
lret
and
or
repnz
cmp
jbe
adc
test
cmp
sbb
adc
mov
dec
adc
arpl
rol
enter
xorl
cmp
loopne
movsb
pop
dec
sub
ja
inc
xchg
jae
movsl
add
push
insb
cmp
fs
cld
sbb
fbstp
cltd
int
popa
lock
cmp
and
push
repz
in
mov
popf
sub
sub
out
jl
mov
sbb
movb
xor
and
or
pop
arpl
inc
mov
or
xchg
mov
push
sub
ja
add
xor
lret
addl
repnz
cmp
cld
push
sbb
pop
test
jae
jne
fiaddl
xchg
and
sti
pop
xchg
test
test
repz
pop
pop
pop
inc
push
test
push
es
xor
cmp
xchg
mov
or
add
dec
mov
movsb
add
hlt
push
cmpsb
xor
flds
adc
push
cmpsb
mov
ljmp
pop
pusha
inc
pop
dec
out
nop
xchg
lahf
xchg
push
mov
insl
call
pop
fcmovbe
outsb
adc
nop
test
mov
or
movsb
or
sbb
push
pop
cli
addr16
adc
mov
aaa
inc
dec
xchg
rcl
lcall
or
frstor
pop
mov
xor
sbb
push
or
orb
mov
mov
lock
cmpsb
pop
fwait
adc
sbb
mov
push
cld
inc
or
lcall
inc
push
push
test
lods
std
pop
mov
xchg
js
mov
mov
cmp
addb
pushf
cmp
sub
popf
sub
push
mov
cmpsb
pop
test
xchg
dec
or
push
push
stos
mov
adc
dec
loopne
imul
mov
push
imulb
adc
mov
in
push
sbb
leave
mov
and
dec
jmp
sub
adc
dec
sbb
pop
dec
inc
inc
xor
js
jmp
xchg
js
sbb
inc
dec
push
movsl
or
imull
lods
xor
clc
add
es
pop
imul
jae
sub
jp
cld
popa
movsb
xor
mov
out
outsb
jne
sbb
mov
add
inc
mov
and
aad
jb
jae
pop
mov
inc
int
hlt
scas
cmp
sbb
cs
imul
ljmp
or
iret
ds
ja
jmp
sbb
xor
mov
adcb
sub
cld
mov
jge
shl
xchg
jne
in
imul
test
mov
rolb
push
dec
cmp
rcrb
adc
ja
jns
xlat
mov
es
xchg
push
ds
pusha
call
jns
dec
pusha
or
or
and
inc
or
xor
lock
sub
pop
pop
insb
insl
roll
jmp
sbb
lea
outsl
mov
jno
shlb
inc
sahf
lahf
hlt
imul
iret
mov
add
cmp
and
pop
mov
cmp
sbbl
sub
dec
lock
add
popf
xchg
aad
mov
clc
cmp
push
dec
hlt
arpl
nop
inc
push
mov
cld
lret
les
pop
hlt
je
and
adc
lds
jno
push
fcmovbe
cmp
mov
mov
subl
shrl
push
xor
sub
dec
sarl
fcompl
add
mov
or
mov
ret
xchg
xchg
adc
mov
xchg
or
xchg
cmpsb
add
inc
mov
lock
nop
mov
cwtl
add
dec
push
sbb
jle
in
add
add
enter
add
jae
in
es
and
sbb
mov
outsl
call
push
mov
dec
loop
cmp
aam
testl
mov
sbb
in
rcrl
fistl
add
adcb
xor
dec
leave
pop
test
nop
xor
mov
js
fcmovnb
imul
test
or
lcall
mov
sub
adc
cmp
jmp
jno
ljmp
sub
jne
imulb
fiaddl
push
push
mov
movsb
mov
cmp
jge
ret
xlat
or
shrb
pop
or
lcall
push
insb
cli
clc
add
adc
call
pushf
jecxz
ret
mov
lahf
push
xor
push
push
pop
out
adcb
push
push
fs
jae
and
insl
jno
mov
mov
adc
movsl
ja
mov
je
idivl
and
and
leave
je
pop
jno
sbb
mov
xorl
loopne
pop
inc
sbb
or
cmp
test
arpl
loopne
and
and
or
ja
push
push
mov
scas
inc
cmp
movsl
call
pop
mov
cmp
adc
into
or
rcr
add
inc
sub
xchg
xorb
inc
add
sbb
and
sbb
pop
pop
add
out
add
sbb
or
pushl
pushl
mov
jle
movsb
mov
pop
push
cltd
push
xchg
push
pop
sub
test
in
or
lahf
outsl
pop
scas
aad
mov
sub
mov
add
popf
push
mov
jnp
mov
insl
push
test
push
push
sti
orl
inc
testl
sbb
mov
jo
or
lcall
mov
imul
xor
cmp
inc
mov
adc
mov
add
or
jmp
pop
and
or
inc
pop
sbb
mov
mov
sahf
cmp
or
mov
add
pop
fsubrl
jmp
sahf
mov
push
pop
fldcw
jo
aaa
pop
mov
pop
sub
call
cmp
xchg
daa
mov
sti
xorb
lea
sub
dec
shlb
cs
data16
or
cltd
mov
or
cmpl
mov
push
push
add
leave
inc
nop
adc
loope
pop
add
shl
imul
push
push
add
mov
int
fmuls
or
enter
add
out
push
add
push
rolb
jl
jmp
xchg
fdiv
mov
dec
push
add
insl
mov
std
js
inc
inc
or
fidivs
or
js
cs
inc
and
addl
sbb
enter
xchg
into
jge
pop
hlt
movb
aaa
mov
pop
adc
push
jl
xchg
imul
mov
mov
jo
or
sbb
sbb
jns
add
pop
sbb
mov
call
sbb
ficoml
jge
mov
lea
icebp
pop
adc
push
jl
or
fstl
jo
inc
das
aam
dec
hlt
and
aam
mov
shlb
sbb
jmp
adc
xor
shlb
jmp
js
stc
cwtl
pop
sti
xor
xor
test
or
subl
pop
aam
sub
test
test
add
les
dec
push
pop
xchg
shlb
adc
push
arpl
jo
add
push
divb
rcrb
jbe
dec
xchg
xor
cmpsl
xor
inc
data16
movl
sub
seta
or
push
inc
mov
mov
inc
add
inc
inc
add
inc
in
push
pop
sbbb
enter
jae
sbb
push
pusha
or
fs
jo
je
js
lods
add
std
cmp
inc
add
into
inc
cs
cmp
xchg
mov
inc
jecxz
push
je
aaa
popa
or
add
sub
xchg
es
mov
add
mov
fisttpll
push
sbb
xchg
test
xchg
or
push
cltd
xchg
stos
pop
jne
test
jle
lahf
inc
cmp
mov
dec
xor
pop
sbb
push
inc
imul
cltd
mov
or
pop
fldt
mov
nop
mov
icebp
inc
popf
xchg
clc
adc
sub
push
incl
jne
mov
lcall
or
mov
movsl
sub
loope
mov
je
mov
test
cvtps2pd
jo
push
enter
rol
inc
mov
xor
mov
mov
xchg
pop
nop
std
in
sub
pop
loopne
call
sbb
pop
sarb
sub
sbb
lock
pop
scas
jle
sub
loope
inc
sub
or
fsubrs
adc
add
and
mov
jns,pn
sbb
inc
cmp
xor
mov
sbb
or
mov
adc
nop
cmpsb
clc
imul
jne
cmp
in
dec
add
jge
push
xchg
into
aam
and
or
faddl
push
or
cmp
xchg
mov
sbb
mov
push
cmpsl
mov
xchg
xchg
xchg
inc
jnp
mov
cwtl
sti
or
xchg
js
rcl
icebp
cmpl
push
and
cmpl
or
fistl
sarl
loopne
lea
jmp
dec
ja
cmp
xlat
das
push
sub
incl
insb
adc
int
jle
loope
sbb
or
pop
pop
test
xchg
xchg
add
cmp
xor
lock
rcll
js
aad
jns
sub
sbb
cmpb
test
clc
in
fsubrl
push
mov
imul
xchg
aad
cmpb
push
sub
inc
sub
in
adc
adc
xlat
sub
push
lret
push
add
adc
js
shl
sbb
stos
insb
add
dec
adc
mov
movsb
hlt
pop
movb
sub
xchg
xchg
pop
adc
adc
out
jg
push
mov
and
ss
mov
pop
sbb
pop
movsl
inc
nop
push
and
sbb
nop
xchg
lods
mov
clc
cmp
or
xchg
fldt
in
daa
mov
in
inc
add
pop
and
test
test
mov
or
cmp
in
pop
adc
push
pop
pop
loope
add
cmpsl
das
cmp
adc
adc
add
ja
inc
or
mulb
jb
inc
pop
cld
push
movsl
xchg
mull
sbb
jbe
aam
lret
clc
dec
enter
mov
jg
mov
call
push
cmpsl
mov
or
fs
fnstenv
sbb
dec
fisttpl
ljmp
add
sahf
cmpsb
cmp
sub
inc
loop
ja
bound
rcll
cmpsb
pop
sbb
subl
gs
dec
adc
xor
nop
in
bnd
sbb
add
adcl
repnz
andb
jne
and
std
popa
jp
movsl
sub
lods
jnp
xor
inc
in
dec
test
mov
mov
in
pop
xor
test
or
add
sub
aam
xchg
jae
mov
push
or
jne
std
popf
inc
pop
mov
add
sub
lock
fisubrs
or
sbbb
insl
pop
loope
adc
movsb
hlt
fsubs
popa
add
mov
leave
mov
test
adc
fildll
loope
fldl
jl
and
add
repnz
test
enter
insl
dec
loop
cmpb
sbb
hlt
insl
mov
adc
push
orl
or
cltd
roll
sbb
imul
roll
mov
fdivl
rclb
clc
mov
add
or
orb
cmpsb
adc
cmp
int
pop
dec
dec
xchg
inc
ljmp
sarl
lahf
lods
icebp
rol
adc
enter
mov
cmp
jmp
fistpll
or
dec
in
outsb
push
insb
adc
add
pop
xchg
add
or
outsl
nop
pop
and
cmp
xor
pusha
loope
and
adc
or
add
sbb
out
push
rol
gs
push
and
cltd
dec
shrb
mov
add
imul
std
xor
repnz
jae
mov
punpcklwd
cmp
pop
xor
dec
add
int
insb
cmp
xor
ret
or
clc
mov
mov
adc
jp
mov
xchg
jp
xor
add
aam
sub
mov
adcl
add
push
aad
cmp
test
mov
shll
test
and
insb
and
adc
sub
addr16
hlt
ret
dec
enter
fs
dec
xor
cmp
jmp
sub
jmp
mov
loopne
daa
jg
das
lods
xor
sbb
adc
das
cltd
or
mov
sbb
in
inc
xchg
in
jecxz
mov
xchg
outsb
mov
movb
inc
loop
je
pop
lods
dec
inc
enter
or
in
or
add
insl
sbb
or
xchg
hlt
inc
je
dec
je
push
push
into
push
mov
pop
cmp
lea
push
pop
sbb
lcall
ret
and
lock
mov
fmull
adc
inc
add
popa
inc
lods
aad
or
rolb
icebp
addb
add
jmp
sbb
vunpcklpd
adc
adc
les
sub
addr16
xchg
pop
test
add
sbb
pop
push
mov
adc
cmp
cmp
adc
xchg
jle
loopne
dec
adc
jmp
pcmpeqd
and
mov
adc
or
dec
xchg
jmp
cmp
test
es
cmp
fbstp
rcll
adc
mov
pop
aad
outsb
cld
or
in
mov
adc
hlt
add
out
dec
xchg
flds
aaa
mov
add
stos
add
arpl
fcoms
or
pop
roll
stc
add
xor
adc
push
repnz
pusha
and
adc
pop
xchg
sub
aad
adc
add
fstpl
pop
cltd
and
insl
mov
ffreep
or
inc
inc
sti
jle
add
jb
adc
xchg
insl
pusha
ja
stc
jg
mov
sbb
test
jne
pushf
or
lods
sbb
mov
lds
sbb
int
and
pusha
jmp
sbb
add
pop
sub
adc
push
xor
jmp
adc
js
inc
cmpsb
clc
ds
xchg
sbb
add
xchg
sbbl
inc
enter
add
sbb
call
dec
addr16
dec
cmp
push
sub
mov
mov
or
sbb
fsubs
add
aad
loope
cmp
jne
mov
mov
imul
mov
sti
lahf
fcmovb
dec
dec
xlat
lret
cli
inc
add
aam
jge
cmp
push
push
mov
das
fmuls
inc
mov
lods
pop
movsb
mov
mov
shrl
cmpl
inc
mov
testb
push
mov
fwait
adc
and
jne
sub
add
jl
and
or
lcall
pop
sub
add
mov
pop
rorl
and
add
rcrb
lds
outsb
cmp
add
insl
jo
adc
mov
shrl
add
lea
push
subb
or
cmpb
xchg
or
ret
lock
sahf
addr16
pop
sbb
dec
jns
cmp
sbb
or
or
pop
in
fsubl
mov
clc
popl
shll
pop
xchg
and
in
push
testl
sbb
push
add
lods
inc
roll
out
inc
sbb
enter
sbb
ljmp
das
pop
xchg
dec
repnz
fidivrl
in
addl
or
add
fsubs
push
fnstsw
cmp
fdivs
cmp
dec
imul
push
inc
and
cmp
hlt
mov
and
dec
sbb
in
add
and
or
je
xchg
fisttpl
add
inc
fsts
xchg
rorb
push
or
lcall
rclb
mov
xor
in
loopne
sbb
cmp
int3
jne
mov
mov
imul
aam
jmp
pop
divl
fwait
mov
sub
shrb
mov
xor
nop
rolb
jge
rolb
daa
cli
cmpsb
and
mov
lock
fisttpl
les
and
das
adc
je
dec
dec
fs
cmovbe
push
and
and
insb
dec
xor
divl
push
add
mov
mov
sub
and
mov
scas
shlb
movsl
rorl
jne
sub
loopne
in
call
aam
and
aas
xchg
rclb
lret
inc
mov
shlb
mov
inc
jns
cltd
nop
data16
mov
mov
mov
push
in
mov
pop
dec
fstpt
mov
lods
cmc
sub
inc
ds
or
xor
inc
inc
and
cmp
jle
or
jmp
jmp
mov
push
pop
mov
jns
ss
push
push
jbe
das
shr
mov
add
shr
rorl
ja
inc
pop
xor
and
jo
and
mov
cs
lods
mov
idivl
call
aad
inc
sbb
cmpsl
stc
lock
dec
push
mov
add
mov
and
push
xorb
adc
inc
jbe
loopne
cmpl
lcall
pop
dec
jmp
cmp
xchg
add
pop
xor
jo
adc
add
inc
jo
adc
and
mov
call
aad
jmp
jle
jbe
adc
jne
adcl
lea
xchg
mov
lds
outsl
inc
cmp
mov
push
push
or
and
sbb
mov
mov
test
mov
das
xor
inc
mov
pop
and
cld
push
and
push
stos
in
xor
je
mov
cld
add
or
sahf
fildl
sub
push
sub
adc
push
sbb
pop
aam
add
fdivs
sbb
imul
mov
mull
and
and
imul
or
adc
test
ret
inc
xor
or
inc
mov
or
and
adc
add
xchg
add
repnz
repz
test
xchg
mov
aam
push
jmp
pushf
movsl
mov
movhps
xchg
les
lods
jmp
fidivs
movsl
fucomp
mov
jno
addl
adcb
xor
cmpsl
scas
add
xchg
inc
and
or
jnp
add
mov
loopne
gs
and
and
sub
add
push
es
push
icebp
adc
mov
and
sbb
or
sbb
add
je
sahf
xor
movsb
jnp
lea
inc
movsb
sub
mov
xchg
popl
push
mov
sbb
cmpsl
inc
xor
loop
jmp
test
lds
popa
jne
and
sbb
out
repnz
or
or
add
int3
or
adc
outsl
in
loope
push
push
psubb
and
cltd
sbb
aaa
and
add
inc
or
mov
movsb
push
inc
add
jp
test
mov
mov
sub
dec
or
sbb
fs
pop
pop
outsl
mov
gs
push
push
fwait
sbb
mov
and
inc
loope
daa
inc
push
push
push
mov
pop
fisubs
jp
xchg
xor
push
jmp
xchg
push
mov
cmp
mov
pop
xor
dec
testb
movlps
or
mov
cmp
adc
sub
mov
mov
orb
jne
cmp
add
aaa
add
popa
stos
jb
nop
push
xorl
xor
push
jecxz
sbb
pop
loope
cmp
jno
mov
arpl
test
fsubrl
imull
sbb
mov
mov
subl
mov
lods
push
push
in
cli
movsl
movsb
in
mov
test
xor
lcall
out
lds
or
and
mov
xor
pop
lret
push
push
mov
out
lahf
test
xchg
pop
loopne
shll
xor
add
data16
add
int3
test
jbe
pop
adc
and
pop
and
adc
dec
call
add
xchg
cs
sub
add
mov
mov
xor
sarb
dec
das
test
xor
adc
sbb
pusha
push
push
pushf
pop
push
ficoml
jl
push
push
je
add
outsl
push
aam
mov
and
jnp
adc
add
sbb
or
push
jl
sub
cmp
mov
mov
ret
sub
or
shll
jno
xor
loopne
mov
xor
lods
xchg
xlat
push
jnp
ret
jno
inc
push
mov
mov
sub
inc
sub
jbe
jmp
inc
pop
fcmovnbe
and
stos
sbb
add
dec
xor
loope
inc
push
iret
leave
rol
andb
push
fstl
pop
repz
mov
mov
dec
and
add
push
jecxz
ljmp
or
push
imul
inc
lods
add
clc
rclb
mov
adc
cmpsb
movsl
cmp
or
xor
inc
and
push
sub
add
pusha
inc
cmpsb
leave
or
cld
xchg
insl
ffree
and
loope
sar
outsb
fistl
jge
mov
sub
push
icebp
adc
enter
add
sub
add
rorb
fmuls
cld
sub
movsb
xlat
inc
xor
cmpsl
sub
ljmp
popa
shlb
dec
pop
add
das
arpl
inc
call
imul
rclb
inc
mov
lock
sub
test
aam
ret
cmp
inc
cmp
jge
and
mov
repz
loop
mov
adc
or
and
and
mov
insb
mov
inc
mov
out
addb
push
or
xchg
and
or
inc
add
or
xchg
sbb
inc
mov
and
movsl
add
into
int3
and
and
addr16
mov
nop
cmc
dec
mov
les
stc
dec
lea
les
and
inc
mov
push
and
mov
mov
das
ret
sti
cmpsb
push
in
hlt
or
cmpsb
jecxz
inc
mov
xor
push
adc
mov
test
and
xor
pop
pop
xorl
shll
les
in
out
mov
push
out
cmpsb
mov
pop
inc
addb
subb
lods
mov
in
std
push
movsb
or
add
nop
test
ja
aas
jmp
jo,pn
loope
inc
push
adcb
xchg
push
adc
push
out
add
mov
lods
xlat
push
fildll
mov
out
pop
mov
pop
lcall
jo
dec
popf
out
je
pop
sub
hlt
scas
cmp
scas
testl
js
cltd
add
push
xor
orl
xchg
mov
faddl
test
bound
mov
sbb
or
push
pusha
push
lds
and
or
xor
pop
jno
inc
push
rolb
test
adc
cmp
and
pop
or
in
repz
test
pop
nop
push
sub
inc
ljmp
inc
fadds
push
inc
xchg
jle
adc
add
lods
cmpl
and
pusha
add
jbe
adc
and
fs
in
xor
arpl
push
nop
add
ja
mov
in
add
dec
xor
jmp
push
out
sbb
aad
test
mov
lret
sbb
xor
xor
or
mov
or
add
das
cmp
mov
mov
push
inc
adc
or
mov
lods
addb
les
mov
call
cmp
mov
dec
inc
cmp
push
and
je
stos
adcb
fildl
mov
insb
addb
add
fistpll
orb
sbb
mov
mov
ret
es
mov
scas
or
adc
pop
sbb
dec
pop
fists
xchg
jb
fwait
out
mov
push
sbb
dec
sbb
sysenter
les
pop
xor
mov
add
lock
or
jnp
rcr
aaa
adc
jg
mov
lds
and
loop
or
push
hlt
add
dec
add
dec
dec
outsb
inc
cmp
je
test
adc
xchg
imul
ss
add
jne
pop
pusha
lea
or
dec
jne
nop
push
mov
inc
adc
jecxz
fimull
xchg
xor
loop
loopne
sbb
call
push
fmul
lcall
xor
dec
push
shr
das
adc
insl
cmp
lahf
xchg
jne
and
inc
cmp
add
bound
mov
pcmpgtw
inc
add
sbb
loopne
add
add
mov
lods
add
std
and
pop
aaa
pop
dec
mov
mov
add
push
mov
cmp
sbbl
mov
mov
je
push
shlb
xor
mov
jo
sub
pop
sbb
dec
mov
testb
shl
lods
dec
cmp
sti
stc
rcrb
and
or
or
leave
sub
or
movb
fs
push
cmpsl
pop
repnz
mov
test
gs
lcall
adc
adc
jle
or
inc
sub
and
lea
dec
sbb
mov
jae
add
sbb
adc
in
dec
xchg
aaa
inc
or
dec
and
add
sub
fiaddl
mov
mov
mov
sbb
push
cmpsb
mov
adc
sbb
or
push
cwtl
cmpsb
imul
popa
aaa
cmp
lock
aaa
pusha
repz
rcl
add
mov
cmpsl
pop
scas
dec
aaa
mov
cmp
inc
sub
jmp
cmp
dec
imul
and
sbb
int
imul
xor
mov
push
cmp
mov
shlb
or
ret
rcll
push
sbb
inc
pop
ret
and
jmp
mov
cmp
inc
ss
xorb
sarb
adc
fnstcw
test
mov
clc
sysret
movsb
cmp
inc
and
andb
cld
pop
push
push
push
or
fs
push
mov
cmp
imul
inc
push
je
add
sbb
mov
sub
arpl
cmp
and
adc
mov
push
and
and
push
adc
pop
int
orb
enter
or
sub
push
pusha
push
and
aam
add
mov
fisubs
cmpsl
or
mov
movsb
mov
mov
push
sbb
neg
sbb
aas
in
and
jg
fisttpll
jb
pop
mov
addl
cli
xchg
les
sbb
xor
hlt
and
dec
pop
adc
xchg
mov
inc
dec
sbb
and
enter
push
enter
jl
inc
insb
divb
in
enter
xor
push
aad
jl
xlat
in
movsb
in
dec
clc
aaa
push
sar
shlw
push
sub
inc
add
jle
cwtl
lock
imulb
int3
std
inc
dec
cmp
repnz
je
mov
adc
inc
jecxz
nop
jle
fsubrp
xrelease
pop
xor
outsl
xchg
add
push
jl
inc
cmp
dec
insb
add
lahf
dec
mov
push
in
loopne
pop
xchg
sbb
cwtl
outsb
test
out
call
pop
fistpll
addb
add
rep
in
mov
je
add
add
dec
pusha
inc
mov
repz
rorb
bound
sub
std
dec
mov
data16
xchg
daa
fbstp
clc
gs
out
cmp
add
stos
mov
enter
dec
jle
mov
add
cmp
cmp
mov
push
pop
and
rorb
xor
js
dec
mov
repnz
imul
mov
xor
xchg
outsb
outsl
lret
imul
loopne
and
cwtl
in
out
cmc
add
adc
xor
sub
xor
clc
pop
gs
add
lods
push
add
fadd
nop
pop
fbld
inc
or
hlt
inc
jns
fcmovnu
add
shlb
mov
sub
push
repz
mov
jmp
cmp
inc
mov
or
aaa
jns
cmp
xor
test
add
push
pushf
aad
dec
push
roll
leave
add
movsl
and
add
push
popa
pop
call
mov
inc
notb
cmpsl
aam
sbb
rorb
cwtl
je
mov
or
das
sub
adc
sub
mov
leave
lods
pusha
mov
data16
jl
pushf
mov
shlb
mov
sbb
subb
push
gs
insb
xchg
mov
pop
mov
or
or
mov
mov
push
mov
in
dec
or
cmp
sub
push
cmp
test
or
xchg
lds
mov
add
das
rorb
cld
fs
cmp
sbb
or
daa
cltd
or
pushf
bound
ja
jbe
pop
add
aaa
ret
in
popf
pop
mov
adc
mov
jne
fdivs
clc
scas
pop
or
or
jge
jno
sbb
sbb
add
nop
sub
pop
popf
add
xor
cwtl
adc
dec
lock
sbb
int3
xor
fistpll
push
dec
xor
sbb
push
in
push
je
call
and
add
aad
dec
pop
lahf
out
sub
mov
push
inc
popa
xchg
and
jnp
stos
mov
dec
or
mov
pop
pusha
mov
lock
jo
sub
ljmp
add
dec
push
push
push
or
mov
pop
pop
add
fbld
push
mov
je
sub
lret
js
test
aas
sbb
loopne
jg
test
inc
call
cmp
push
sti
adc
push
mov
mov
scas
idiv
push
stc
ds
dec
pop
jnp
and
dec
mov
daa
cmp
stos
inc
aam
push
fstl
cmpsl
mov
int
mov
dec
or
add
pushl
movsb
jnp
loop
les
pop
sbb
mov
enter
aaa
dec
push
xchg
call
loopne
aaa
adcb
incb
and
push
pop
jmp
sub
pop
and
jns
sbb
sbb
enter
dec
aaa
jo
cli
out
mov
sbb
and
push
scas
data16
cmp
adcb
fdivr
rolb
mov
popf
add
mov
lcall
pop
pop
push
imulb
xor
jne
push
jge
ds
adc
sbb
pop
fs
rep
inc
cmp
cmp
clc
add
cmp
cli
sub
xor
add
dec
int
adc
mov
aam
inc
cmp
sub
js
loopne
mov
push
call
pop
or
jg
adc
mov
adc
add
shlb
pop
fwait
and
mov
cmp
in
call
lret
push
shrb
dec
push
jg
xchg
std
fsubr
mov
sub
call
mov
inc
aam
jl
out
movsb
into
aam
call
cmp
pop
mov
cmp
add
test
fiadds
xor
sarb
sub
icebp
lea
popa
xor
add
andb
inc
test
ret
call
int3
mov
adc
adc
pop
fidivs
dec
xor
add
sarb
fisubrs
dec
xchg
inc
enter
mov
inc
test
and
dec
cmp
push
jle
sbb
mov
sti
dec
sarb
dec
psubq
in
fldenv
out
in
jl
jne
pushl
mov
insl
mov
pop
inc
ficompl
push
aad
stos
jl
mov
into
mov
pop
mov
mov
iret
sub
lods
mov
lods
push
and
push
sub
push
sbb
jl
flds
pop
lret
pop
push
sbb
xor
mov
leave
cmp
mov
xchg
mov
jo
dec
in
xchg
xor
cmp
leave
sti
add
adc
out
repnz
mov
cwtl
sbb
movsb
ret
mov
xor
movsl
jb
test
pushf
dec
in
in
add
cmp
out
mov
mov
dec
in
mov
mov
enter
add
out
lods
add
test
mov
xor
sbb
push
les
arpl
lahf
hlt
add
sbb
inc
xchg
insl
jp
fdivs
mov
andb
loope
clc
jecxz
cmpb
pusha
mov
pop
pop
call
pusha
daa
andb
aas
stc
idivl
cwtl
mov
push
jbe
sahf
inc
sti
mov
inc
pop
mov
cmp
ret
jmp
imul
add
incb
jo
cmp
das
ja
add
test
or
push
movsl
adc
das
ja
add
xor
imul
js
xor
imul
jnp
orb
xor
jnp
jns
addr16
outsl
aas
push
add
fdivrs
cmp
push
movsl
jne
mov
ret
scas
xor
aaa
es
movsb
in
jle
jle
cmp
xor
or
sub
and
aaa
push
cmp
mov
inc
jb
push
xor
cmp
inc
add
cmp
xor
xor
xchg
sub
rclb
inc
sub
jo
adc
push
add
cmpsl
insl
sbb
pop
jno
lds
push
adc
negl
xlat
pop
jno
pop
push
push
jbe
jb
pop
sbb
mov
sbb
and
jbe
in
mov
dec
inc
outsl
sbb
ja
push
cmp
push
or
push
cmpsl
cmp
orb
mov
mov
mov
sub
sbb
out
sahf
jne
inc
mov
xor
and
xchg
adc
mov
dec
test
inc
addr16
js
clc
addr16
push
push
and
and
sub
ret
push
jbe
mov
add
inc
scas
mov
jne
pop
aaa
in
xor
jne
jno
sub
out
fadds
add
mov
add
mov
jnp
inc
test
es
push
xor
repz
pop
cwtl
movsb
lods
mov
cmp
notb
in
dec
in
repnz
sbb
adc
inc
and
dec
nop
lret
adc
insb
cmp
pop
mov
and
dec
in
es
insl
mov
inc
jb
pop
push
leave
js
mov
inc
jb
nop
cwtl
xchg
pop
and
mov
jb
shl
jns
pop
and
add
xchg
mov
and
mov
cs
mov
pusha
andb
loopne
adc
mov
add
jb
pop
jo
pop
and
jmp
add
xchg
pop
leave
inc
shlb
and
pop
leave
inc
repnz
add
daa
xchg
push
adc
shlb
xchg
orb
or
or
sub
and
ljmp
cmp
out
lret
int3
enter
enter
fcomp
mov
loopne
jecxz
jmp
nop
dec
enter
sahf
mov
jne
je
and
and
cld
es
add
and
ds
inc
cmpsb
dec
test
or
mov
pop
push
push
adc
or
add
or
inc
push
adc
add
ljmp
mov
sbb
add
sbb
sbb
fiaddl
sbb
divl
aam
xchg
adc
xor
pop
push
push
push
aam
insb
pusha
adc
stc
cmp
dec
stos
pop
push
clc
and
and
loopne
imul
arpl
sbb
pusha
les
out
outsl
add
decb
out
pop
pop
pop
test
push
push
jns
orb
sahf
out
mov
ror
out
sahf
out
loopne
lock
iret
repz
add
sub
repz
cmp
push
repz
repz
pusha
push
mov
leave
leave
leave
leave
add
fs
repnz
push
mov
cld
cmp
cmp
fmuls
xchg
inc
into
sahf
mov
fcoms
xchg
adc
xchg
add
data16
out
lea
call
or
in
xchg
repnz
push
push
sbb
inc
outsb
repz
dec
mov
clts
div
inc
xor
or
or
andl
fdivrl
out
push
hlt
adc
xor
jns
out
mov
repz
adc
dec
fs
sahf
iret
repz
enter
add
add
adc
mov
add
dec
sahf
jmp
jno
jmp
fisubrl
pop
cmp
mov
push
les
sarl
js
int3
fs
push
and
or
imul
aas
fcoml
dec
clc
push
adc
jns
sbb
push
xor
push
pop
add
mov
fsubrl
mov
push
test
loopne
insb
les
sub
imul
jae
aas
adc
pop
push
sbb
and
push
movsl
jmp
pushl
pop
pop
in
repz
lods
cmpsb
lret
aam
push
hlt
iret
jnp
jg
mov
or
push
add
repz
mov
mov
stc
cmp
repz
adc
pop
out
sahf
cmpsl
adc
add
xchg
sbb
sbb
adc
jns
mov
push
js
out
sahf
sbb
cmp
jnp
mov
pop
cmp
jae
addb
push
rcrb
pop
or
fistps
xor
sahf
out
sbb
jo
cwtl
js
out
add
out
jae
jno
pop
mov
add
loopne
outsb
or
xor
andl
out
dec
pusha
mov
mov
iret
repz
mov
mov
repz
repz
out
sahf
out
out
inc
pushl
mov
cmp
push
cmp
addb
or
fimuls
push
adc
std
sbb
and
add
negb
add
inc
adc
or
or
out
cmovle
add
repnz
jne
loopne
add
adc
sbb
nop
pop
adc
add
push
xchg
arpl
jne
sbb
outsl
mov
xchg
mov
push
lock
imul
add
lahf
lock
int
popf
psubb
add
xlat
cli
adc
add
push
lock
mov
sahf
ja
push
clc
and
scas
lods
call
cmc
rcl
ud0
add
out
aad
sub
sbbb
pop
in
add
lock
push
cmc
and
ja
sub
cmp
mov
cmp
fimuls
jmp
in
add
push
jae
push
fidivrl
mov
dec
imul
mov
pushf
clc
jns
out
mov
pop
repz
mov
jg,pn
jg
sbb
packsswb
pushf
fcoml
add
out
shlb
imul
cmpsl
mov
in
mov
jnp
xchg
pop
movsl
out
cmovne
scas
jmp
and
lret
inc
sarb
mov
push
sub
aas
add
mov
cltd
pop
ror
fsubr
call
cli
cli
sar
repz
lds
mov
push
and
ljmp
add
scas
loopne
lock
lock
xchg
lahf
jg
aam
push
mov
test
movsl
and
lods
in
jo
stc
lock
add
imul
icebp
out
xor
dec
lcall
push
cwtl
sti
cwtl
add
data16
add
cmp
jno
repnz
dec
dec
jae
xchg
repnz
imul
mov
or
push
xor
ds
sub
jg
dec
cli
lcall
or
stos
add
scas
out
imul
lods
fsub
hlt
sbb
lahf
mov
fs
in
add
cld
sti
push
push
cmc
dec
add
dec
ror
add
mov
incl
rolb
nop
sarl
mov
jmp
imulb
inc
imul
idivb
pop
push
sbb
jo
mov
roll
add
lahf
mov
in
mov
jns
incl
mov
nop
mov
aas
jg
pop
add
xchg
add
add
cltd
out
movsl
rolb
push
mov
jl
out
jg
adc
jo
add
mov
loop
stc
aad
xlat
insb
outsb
mov
jo
add
mov
call
add
mov
add
out
cmp
js,pn
cli
push
fidivl
push
frstor
xchg
jg
fdivrs
imul
stc
mov
fiadds
hlt
jnp
outsb
sub
jle
mov
push
mov
push
roll
ficomps
mov
xlat
push
pop
in
inc
cmpb
cs
push
jnp
xor
nop
add
ds
pop
mov
imul
xchg
sarl
sub
int3
sahf
jg
das
dec
dec
add
add
int
addr16
scas
vmwrite
mov
clc
call
repz
sbb
or
inc
and
iret
fstpl
push
pmulhuw
or
cmp
jns
in
push
push
pop
push
pusha
push
js
mov
iret
jnp
jbe
xor
inc
push
pop
iret
repz
jo
movsb
mov
imul
movsb
and
sub
inc
push
pushf
add
pop
or
adc
out
add
daa
mov
rclb
mov
ss
nop
add
add
dec
jne
scas
roll
mov
insl
mov
outsl
das
jl
inc
movsb
out
or
or
add
dec
and
shr
pop
or
nop
daa
mov
out
sahf
ja
test
std
cld
loopne
repz
cli
cld
stc
and
clc
inc
cmp
repz
testb
hlt
enter
jns
iret
repnz
icebp
and
sahf
out
sahf
inc
out
push
lcall
jmp
mov
jg
ss
add
lods
add
add
pop
andb
add
or
dec
divl
orb
icebp
push
decl
or
or
add
iret
repz
jle
push
int3
fsubr
cld
or
and
inc
push
pop
jns
out
jo
nop
pushf
mov
jns
out
int3
loopne
add
mov
cmp
adc
push
xchg
mov
sub
add
xchg
pop
repnz
daa
sbb
push
rorb
daa
movzwl
cmp
pop
insl
rorl
dec
and
gs
call
pop
mov
aaa
push
xchg
ja
pop
add
mov
faddp
jg
jg
stc
mov
repz
mov
cmp
repz
incb
add
repz
repz
aas
iret
add
shl
add
jo
stos
inc
adc
dec
push
bnd
cmpsl
fiadds
dec
sbb
mov
pop
cli
add
inc
pmuludq
push
adc
xor
mov
pop
mov
or
shlb
and
mov
xor
int
push
js
mov
pusha
shrb
push
sub
fadds
dec
push
sub
cld
ficoms
insb
sbb
push
jae
jns
dec
rclb
pop
outsl
pusha
iret
popf
out
jns
and
ss
pop
mov
push
clc
dec
inc
push
call
aam
inc
pop
push
scas
push
ds
lock
cwtl
dec
data16
sbb
gs
cmp
rolb
push
mov
arpl
cmp
loopne
scas
out
or
xor
or
call
push
mov
mov
ds
xlat
jl
cs
dec
lock
outsb
push
pushl
ds
test
inc
push
jl
xor
ss
aas
xchg
rol
rcrb
das
sahf
push
mov
cmpsb
das
push
out
test
sub
lock
mov
jns
push
les
push
shrb
test
adc
cmpb
dec
enter
jnp
int
insb
ds
jbe
inc
push
mov
scas
loopne
mov
xor
mov
mov
es
or
jbe
mov
jecxz
testl
dec
mov
mov
sbb
fdivrs
xor
mov
add
daa
pushf
jae
out
push
mov
pusha
or
testl
outsl
loop
sub
out
mov
nop
inc
pop
dec
repz
iret
iret
adc
xlat
call
push
mov
ficomps
filds
pop
ror
sbbb
vshufps
mov
scas
nop
xchg
mov
dec
out
sub
sbb
pop
jg
int3
push
pop
inc
loope
pxor
pop
sbb
je
fadds
jecxz
jp
outsb
xchg
fcomps
sbb
lods
xor
rcll
shrl
mov
jo
nop
loop,pn
push
lret
js
or
jge
iret
jo
clc
subl
mov
notl
enter
out
js
push
lock
lahf
cs
cmovbe
out
inc
push
pop
xchg
aam
mov
fcompl
aaa
push
sahf
cmp
xor
mov
shlb
pop
test
adc
nop
pusha
pushf
rolw
sub
fdivrp
sahf
mov
cs
mov
test
xchg
adc
nop
push
add
sub
inc
lock
sbb
push
mov
mov
cmpb
mov
push
add
push
add
sub
filds
andl
sub
inc
add
movsl
fstpt
jecxz
pop
aaa
or
neg
inc
sbb
inc
pop
inc
add
ja
jge
pop
dec
aaa
push
pop
dec
add
mov
fdivl
add
adc
dec
xchg
mov
jmp
push
loop
push
inc
mov
mov
xor
or
dec
xor
or
mov
cmp
push
mov
jl
inc
or
pop
mov
loopne
addr16
out
xor
jnp
or
in
stc
cmp
dec
dec
mov
xor
mov
roll
sbb
cld
mov
push
pop
mov
int
mov
push
push
jb
addr16
test
and
mov
jb
outsb
and
cmp
mov
or
pop
add
and
cli
pushl
rorl
sbb
nop
add
fldenv
mov
add
jo
repnz
mov
int
into
add
mov
pop
negb
aaa
cmp
int
into
or
push
insb
pshufw
repnz
rcll
jl
adc
or
xor
pop
push
push
pop
xor
or
int
and
aas
inc
sti
loopne
decl
jb
idivb
rol
arpl
xchg
add
add
xchg
jge
call
lahf
xor
xor
or
notl
xchg
insl
and
fdivp
pop
mov
adc
es
inc
test
and
sahf
add
sti
mov
add
add
sub
or
jg
movsb
pop
inc
mov
push
nop
inc
or
adc
incb
pushl
pop
pop
add
sbb
pop
int3
cld
jo
js
inc
add
adc
shr
cwtl
fcomip
push
insl
jle
fs
push
add
lret
adc
jmp
mov
pop
add
scas
jg
int3
add
xchg
add
jmp
inc
nop
enter
jg
cli
psubq
mov
mov
xlat
or
push
je
pop
adc
or
ja
push
pop
pop
add
pop
push
popa
ss
jg
popa
out
lmsw
pop
loopne
or
dec
pop
and
push
cwtl
and
or
mov
fnstcw
jmp
fdivr
cs
cmp
sti
xor
clc
push
sbb
outsl
mov
jg
loopne
fs
cmp
flds
push
jns
ja
mov
gs
mov
flds
add
gs
pop
push
inc
add
sbbb
hlt
wbinvd
dec
xor
adc
add
mov
aas
add
fists
pop
adc
xchg
int3
pop
add
jg
incl
sub
out
cmc
cs
or
les
mov
push
dec
push
adc
add
sbb
sub
pop
aam
imul
cmp
imul
lods
std
fs
add
loope
in
in
add
add
sti
push
pop
aam
xor
loopne
and
xchg
add
out
jg
cs
rclb
cmp
push
lret
cld
cmp
mov
gs
bnd
jo
and
insb
push
or
sti
cmp
pop
test
aas
test
mov
dec
leave
leave
in
in
pusha
subps
sti
sti
int
adc
mov
push
call
add
inc
inc
add
pushl
jb
mov
out
xchg
dec
cmovs
ret
pop
test
push
rcrl
popa
add
dec
and
mov
insb
lret
inc
adc
aas
or
mov
mov
and
in
out
imul
sti
lods
mov
ljmp
add
loop
push
je
inc
adc
xor
inc
mov
and
mov
insl
call
jns
out
and
js
ljmp
ljmp
push
test
jae
stos
lods
bound
imul
cmp
call
loopne
mov
dec
leave
xorb
in
insl
outsl
inc
and
pop
loopne
bound
test
sub
pop
add
pop
jg
add
sub
lods
adc
mov
cmpb
in
mov
lcall
adc
and
adc
cmp
std
mov
xchg
push
daa
and
sub
imul
add
fnstsw
push
adc
adc
lcall
outsl
and
cltd
not
lock
mov
add
sbb
cmp
int3
xor
pop
inc
in
ljmp
sub
imul
ficompl
pop
xor
mov
idivb
bound
cmp
imul
clc
into
jg
adc
jl
insb
add
mov
adc
xor
adc
decl
sub
inc
pop
add
dec
or
lock
mov
test
or
push
clc
inc
incb
push
sub
mov
ljmp
jae
dec
jne
pop
mov
and
cmpsb
cli
es
incl
sahf
mov
std
incw
sub
lea
in
mov
add
jnp
lods
inc
mov
loopne
sbb
jne
ja
adc
pop
add
ss
jne
mov
adc
ret
inc
push
hlt
adc
or
sbb
call
add
sbb
andl
mov
lock
and
clc
call
sub
pop
mov
mov
pusha
xor
cld
or
inc
fistps
mov
incb
loop
ljmp
jo
push
cmp
test
fcmovu
mov
sub
mov
cmp
sbb
push
lret
adc
rcrb
mov
lcall
sub
mov
out
clc
pop
inc
add
inc
or
sub
sbb
aaa
aaa
jmp
fs
clc
inc
mov
pusha
push
pop
hlt
ljmp
divb
mov
fstp
and
cmpb
mov
int
or
rolb
lds
incb
jle
nop
and
mov
scas
push
mov
sbb
loopne
and
fwait
and
xchg
push
cld
orb
mov
aas
dec
adc
sti
std
cld
pushf
or
cld
call
xchg
into
pop
mov
icebp
dec
sbb
lret
jle
mov
mov
jle
outsb
faddp
fdiv
sbb
jae
jle
lods
std
mulb
rclb
incl
divb
jg
or
jns
jns
cmp
pop
or
jg
jg
clc
incl
or
in
jg
in
jne
push
clc
les
inc
pop
push
rorb
jmp
inc
data16
fimull
mov
add
lock
out
addb
insb
ret
jg
call
lods
loopne
and
jmp
fidivrs
loope
mov
mov
pop
or
out
mov
sti
shl
cs
xchg
xor
or
push
lock
test
push
fiadds
out
mov
aam
inc
push
and
out
sbb
nop
and
add
dec
and
sbb
adc
decl
repz
lods
iret
xor
adc
cmp
pusha
push
mov
xor
dec
ficoml
das
jle
pusha
or
push
xor
clc
xchg
inc
clc
dec
xchg
jae
or
add
dec
icebp
mov
or
addb
outsl
mov
fwait
cmp
cmp
inc
lock
cld
lds
cwtl
xor
mov
add
mov
mov
push
cmp
scas
or
push
in
sbb
or
jne
ds
xchg
das
cmp
mov
and
ljmp
imulb
outsl
sub
and
add
mov
decl
fs
dec
mov
cmp
adc
cmp
ficompl
es
mov
pop
shll
pushl
xorl
cmpsb
sub
lret
aas
mov
or
dec
data16
lods
cmp
sbb
dec
jecxz
inc
and
fsubrs
xchg
inc
or
sahf
mov
test
data16
push
jl
or
add
leave
cld
xor
aaa
xchg
add
clc
lods
mov
add
aas
lcall
movsl
addb
repnz
btr
mov
push
test
aaa
cmp
cli
dec
jnp
sub
fists
jp
inc
pushf
jmp
sbb
sbbb
das
fistps
sbbb
divl
add
sbb
jae
adc
hlt
push
mov
mov
jmp
test
add
mov
sub
mov
loope
and
dec
cld
xor
fists
test
outsl
jmp
mov
lea
bound
addr16
mov
ret
jmp
and
inc
lea
paddb
pop
imul
loopne
jbe
inc
add
ret
adc
push
pusha
fbstp
loopne
fdivp
jg
mov
fstpt
sub
sar
cmpsl
shl
call
adc
jb
or
xorl
jp
sub
jns,pt
aas
dec
or
push
pop
xchg
or
cmpsb
mov
and
push
cmp
call
test
push
pop
xorb
xor
js
setno
testl
add
test
add
cli
nop
lock
scas
push
ss
sar
das
dec
sbb
lahf
sbb
movsb
inc
ljmp
mov
out
fadds
data16
xchg
dec
repz
mul
xor
ficoms
push
fisttpl
xchg
inc
adc
cmp
jne
xchg
frstor
and
inc
pop
inc
dec
iret
push
xor
lcall
xchg
scas
ljmp
mov
pop
leave
outsl
mov
or
aam
inc
adc
sub
clc
jmp
call
adc
out
loop
fdiv
lcall
jb
mov
testl
jne
or
or
lcall
xorb
fiadds
xchg
lcall
xchg
mov
xlat
mov
or
rcl
and
lock
fistps
fldcw
ret
pop
dec
dec
addr16
clc
sub
sub
adcl
mov
sub
lahf
adc
mov
test
mov
lret
add
jmp
test
xchg
lret
add
add
lcall
ljmp
pop
push
in
or
in
movsl
pop
ja
or
cld
aas
jmp
sub
fidivrl
jb
loopne
mov
mov
daa
jg
or
xchg
je
adc
call
inc
adc
roll
arpl
hlt
sub
ljmp
mov
js
iret
mov
fiadds
test
call
addr16
mov
push
cmp
push
test
cld
lahf
aad
bswap
scas
lock
call
rcrl
inc
cld
fisubl
push
int3
push
mov
decl
ret
mov
andl
sub
lahf
adc
das
dec
in
mov
add
xchg
jge
inc
or
neg
push
cmp
lss
jmp
dec
or
clc
cmpsl
add
data16
cli
inc
ret
jmp
adc
mov
sub
das
mov
pop
clc
addl
inc
mov
shlb
mov
out
lock
inc
sbb
stc
call
and
test
in
sbb
pop
cmp
and
or
lcall
iret
pop
insb
and
out
outsl
add
rorl
sarl
js
je
iret
ja
cmp
js
pop
fidivs
lock
imul
test
add
cld
adc
mov
jmp
push
jle
sbb
or
lea
jl
mov
add
jecxz
push
pop
add
pushf
and
fistl
jae
pop
rcrl
fcomip
lcall
ds
dec
iret
push
gs
loop
xchg
and
clc
jge
lahf
cmpsb
shll
pop
test
mov
in
cmp
sbb
lea
jecxz
mov
loope
adc
lcall
and
ret
or
or
rcr
outsb
add
aas
jmp
pop
insb
hlt
mov
in
sbb
xchg
and
ja
mov
jmp
adc
cmp
adc
mov
sbb
inc
add
xchg
jmp
push
into
ret
and
cmp
jle
lock
push
sbb
aam
mov
fists
mov
scas
es
fists
xorb
shll
insb
push
mov
loop
or
aas
in
clc
or
ss
loopne
stc
mov
inc
sbb
jle
jg
add
dec
aaa
sbb
cs
enter
sbb
incl
add
inc
sbb
push
es
lret
push
aas
mov
xor
aaa
cmp
adc
inc
add
loope
and
and
and
call
add
pop
push
inc
vmovaps
pop
test
fcmovb
call
mov
xor
ds
xchg
and
outsl
mov
in
rcrl
xor
lcall
in
sbb
test
shlb
loopne
mov
outsb
sub
in
cmp
ja
pop
or
pop
and
push
lock
ss
and
movb
and
xchg
adc
out
xor
dec
inc
ljmp
lea
xchg
cmpsl
rcrb
call
xchg
fimull
iret
testb
mov
jge
push
or
sbb
rolb
ljmp
out
ja
mov
and
xor
arpl
aad
out
add
movb
lea
jmp
adc
jg
enter
cmp
pop
pop
pop
adc
fldcw
sbb
jmp
pop
enter
mov
dec
pop
in
aaa
and
in
je
loopne
out
mov
decl
mov
je
setne
sub
das
clc
jg
inc
dec
inc
sbb
adcb
jg
inc
inc
and
fisttpll
mov
out
mov
lock
jno
stos
xchg
int3
fildl
push
cld
test
stos
dec
enter
pop
adc
ljmp
adc
mov
and
mov
add
das
ret
mulb
loope
cmpl
cld
mov
add
js
fdivr
push
mov
inc
in
test
les
in
adc
jb
sub
fcompl
loope
dec
xchg
nop
pop
jo
notb
and
dec
loope
adc
xchg
repnz
pop
ljmp
add
add
jge
xlat
ljmp
clc
jge
inc
hlt
adc
adc
sbb
les
fisubs
pop
stc
jg
sub
lret
mov
rorb
push
sbb
xor
mov
sub
decl
pop
push
jg
dec
neg
jne
sahf
arpl
jl
jle
inc
clc
jmp
adc
cmpb
add
jecxz
mov
add
clc
incl
lods
xor
loope
out
jnp
mov
cmpl
jns
push
jmp
xchg
aaa
orl
stos
or
bnd
pusha
xchg
andl
cltd
filds
pop
adcl
add
mov
add
notb
decl
lock
in
or
ret
jg
mov
loope
adc
mov
add
call
add
lock
inc
xor
push
mov
mov
ret
cs
out
jb
mov
jnp
mov
cmpsl
lock
daa
and
faddl
inc
lds
lcall
incl
pop
dec
das
cmp
les
sbb
stos
dec
ficompl
push
pushl
call
insl
xchg
sbb
push
jle
add
jg
leave
jp
push
lock
mov
inc
mov
enter
lock
call
jle
int3
int3
mov
mov
ror
push
and
and
fisttps
adcb
arpl
ds
call
jmp
dec
adc
inc
jae
in
xchg
das
aad
in
mov
xchg
sti
cli
or
cmp
idivb
add
psubb
xor
negl
repnz
invd
shll
push
ja
loope
faddp
test
inc
aaa
add
loopne
aam
pushl
pushf
fldl
out
in
loope
frstor
pushl
pushf
in
dec
mov
ret
mov
scas
cmp
xchg
cmpl
lock
jg
xchg
mov
and
dec
shlb
fadds
dec
lcall
push
testb
testl
call
mov
mov
and
pop
push
ret
mov
pop
and
aaa
std
push
imul
or
decb
ljmp
filds
insl
sar
jmp
aaa
pop
pop
push
sbb
pop
sub
inc
ds
and
das
and
fs
sbb
push
xchg
pushl
dec
mov
cmp
mov
add
xchg
push
loopne
loope
sbbl
pushl
ja
frstor
js
jle
test
cmp
add
pop
gs
mov
dec
ja
sbb
mov
dec
xchg
xchg
add
int
mov
push
stos
jle
pop
lock
dec
jne
in
into
lret
fs
xor
call
lret
lods
fiaddl
mov
xor
mov
out
add
cmp
add
out
add
mov
adc
cmc
pushl
inc
xor
int3
nop
scas
mov
in
clc
mov
cmpl
push
or
adc
xchg
ja
and
aad
jge
call
sbb
inc
adc
fildll
out
rolb
jnp
add
sbb
fnsave
mov
push
andb
add
and
scas
clc
idiv
sub
sub
fisubl
inc
data16
xor
std
jbe
filds
inc
add
xor
ja
out
and
pushl
mov
or
pop
sub
mov
out
mov
and
xor
pushw
data16
rolb
call
cld
dec
xor
iret
cmc
imull
adc
mov
outsl
test
mov
aaa
andb
cmp
or
sub
jecxz
adc
ss
in
xchg
cmp
pop
push
push
mov
dec
jnp
dec
dec
cli
dec
add
popl
push
jns
rorl
dec
inc
cli
sbb
out
or
jg
inc
je
mov
shlb
incl
repnz
cmp
rol
ret
adc
mov
sbb
cmp
jg
aaa
mov
mov
loopne
mov
sbb
add
mov
pop
pop
repz
jge
push
push
loopne
popf
jl
xlat
or
push
pop
mov
ret
test
fidivrs
adc
daa
pop
lret
jbe
adc
jmp
ret
jle,pn
jae
cmp
adc
addr16
sti
call
mov
mov
clc
push
pop
or
inc
decl
lods
jns
or
test
or
xchg
frstor
ss
jb
addl
or
add
lcall
sbb
jo
int3
ret
aas
add
jle
push
push
and
add
jl
cld
pop
xchg
cmp
cld
call
ret
out
out
mov
mov
and
gs
mov
lea
or
repnz
repz
insb
jge
clc
scas
or
push
daa
push
incl
inc
mov
cwtl
movsb
fs
cli
clc
in
adc
and
lcall
and
push
add
ret
lea
mov
clc
push
lret
jbe
das
pop
call
lods
sub
rcll
incl
jg
xor
hlt
sub
lock
or
or
pusha
or
adc
mov
daa
xchg
sbb
lret
dec
mov
jns
cli
and
and
cmp
scas
jns
xor
aam
inc
pushaw
mov
and
imul
dec
or
adc
add
aad
rcrl
clc
imul
or
or
pop
sbb
adc
inc
unpcklps
decl
sbb
pop
loopne
pusha
inc
cmc
pop
jmp
lock
fistps
or
and
popl
cmpsb
and
add
incl
add
rcrl
push
add
ret
hlt
stos
into
mov
stos
dec
lock
adc
push
inc
cli
and
push
sti
decl
cmp
jne
es
mov
js
or
cmp
loopne
call
sub
outsl
inc
cmpsb
jo
and
cmp
jo
xchg
xorb
cmp
sub
inc
fstpt
and
loopne
mov
stos
jmp
pop
jmp
push
test
xchg
cmpl
xchg
ljmp
dec
cmp
pop
fistpll
hlt
push
jb
jle
fiadds
add
push
iret
clc
add
roll
sub
and
sbb
cld
pop
jg
ljmp
out
stos
add
lods
mov
mov
pop
pop
cld
adc
lea
jmp
clc
xchg
ret
mov
nop
jmp
dec
mov
lock
push
sub
call
inc
push
dec
inc
rorb
loope
lcall
mov
popa
push
cmp
paddd
loopne
ljmp
gs
sbb
mov
pop
xor
std
jg
jmp
xor
aam
les
leave
sub
or
cmp
das
shlb
or
push
xor
cmc
sti
fstpl
xor
imul
mul
jo
or
mov
dec
and
psrlw
jmp
pop
and
fnstcw
push
sub
sti
mov
pop
pop
inc
push
or
in
or
pop
or
sti
lods
jns
psubusw
fcomip
inc
dec
popa
ljmp
shrb
sbb
adc
repnz
add
jmp
mov
ret
je
dec
add
adc
inc
das
sub
shll
pop
jb
sub
pop
or
cld
mov
cmc
mov
mov
and
and
mov
fs
adc
fcmovnbe
xor
push
mov
cmp
xor
jmp
std
jg
aad
push
jne
mov
xchg
out
pusha
ljmp
mov
and
jg
lahf
push
and
test
rcr
xchg
dec
cltd
out
xor
push
ss
loopne
lods
loope
lret
mov
leave
xchg
das
incl
rorb
rol
insl
pop
inc
inc
sub
push
orl
stos
fiadds
sbb
out
pushl
pushl
mov
aaa
add
movl
incl
pop
xchg
dec
sti
outsl
jg
mov
cmp
jne
push
adc
add
adc
add
std
clc
jg
pushl
add
add
jmp
pop
cmp
cmp
jl
andl
adc
add
outsl
add
movsl
jns
ja
out
fsubs
inc
mov
push
cmp
or
loope
ret
xor
sahf
jg
mov
or
dec
add
into
or
or
push
ljmp
shrl
xchg
popf
add
add
decl
sbb
mulb
loope
enter
cld
pop
adc
notb
inc
adc
push
dec
add
clc
push
cs
lcall
or
incb
iret
ficoms
push
out
mov
sbb
sbb
or
push
adc
adc
fstl
push
or
push
cmp
cmp
jp
femms
or
scas
pop
push
clc
jb
aaa
fdivrl
or
push
into
insl
inc
mov
sub
ljmp
je
and
addr16
bound
pop
xor
push
es
dec
test
lahf
dec
fildl
sahf
and
scas
cmp
faddl
test
mull
add
ss
ljmp
and
idiv
pop
outsb
add
or
adc
call
jb
je
xchg
cmp
fwait
jbe
mov
push
adc
sub
ja
sbb
or
movsb
pop
xor
cmp
or
cmp
push
push
sub
mov
push
pop
hlt
jg
or
push
inc
mov
dec
jne
pop
push
mov
push
loope
inc
pop
dec
lcall
jmp
pop
cmp
ret
mov
rol
outsb
mov
pushl
push
jae
or
out
insb
ja
movsl
and
out
sub
scas
repz
inc
dec
pushl
xchg
sub
lock
test
adc
js
mov
cmpsb
pop
mov
fldt
jp
cmp
outsb
je
sub
je
das
sub
ss
cmp
loope
jmp
dec
sub
xchg
jge
mov
xor
jg
gs
sbb
aas
mov
push
sub
fldz
movsb
cmp
lahf
sbb
pushl
ds
mov
jl
nop
add
or
ret
nop
ss
stc
enter
adc
and
fildl
and
xor
push
add
fisttps
mov
mov
and
movsl
aam
push
xorb
stc
jle
ja
adc
jmp
add
push
fwait
mov
push
test
rep
sub
mov
or
lock
or
jg
xorb
mov
fstps
add
aam
add
loop
and
push
add
inc
out
insl
inc
clc
push
inc
outsl
mov
or
cmc
adc
test
dec
popf
std
cmp
ja
or
faddl
or
je
adc
inc
mov
sbbb
insl
inc
jo
and
jle
sub
ljmp
ss
fbstp
mov
fldt
call
shll
pop
cli
repz
push
add
mov
push
mov
cmp
pop
mov
clc
push
push
push
shrl
popa
jno
push
js
cld
test
sub
cmc
mov
out
dec
shll
clc
dec
and
orb
call
shrb
or
insl
sbb
dec
out
jecxz
and
xchg
scas
lock
pop
adc
mov
cmpsb
push
mov
pop
out
std
lcall
dec
dec
dec
inc
sbb
imul
adc
jnp
push
push
dec
add
orb
lcall
pusha
ljmp
jne
add
jecxz
ror
adc
clc
cmc
push
es
insl
mov
imul
and
push
ja
mov
inc
call
jnp
jo
fbld
scas
push
and
call
mov
xor
sub
xor
jg
call
xchg
clc
mov
xchg
hlt
cmp
dec
xor
ret
jb
sub
jl
out
jg
inc
clc
push
or
jnp
mov
cs
mov
xchg
mov
pop
push
dec
loopne
pop
push
orl
jo
test
or
inc
or
lcall
movsb
sbb
mov
movsb
inc
ror
test
pop
fisttpll
dec
les
dec
push
inc
in
lcall
mov
or
xor
test
xor
sbb
pop
mov
or
ret
ret
mov
add
add
add
stc
out
insb
inc
lea
jmp
cmp
bound
cld
add
sbb
mov
mov
test
negb
sbb
int
test
cmp
pop
lods
cld
sub
js
pop
push
sbb
fsubrs
xor
inc
xor
or
test
lock
xchg
or
jae
emms
cld
lcall
or
add
jmp
cmp
push
ret
cmp
and
mov
ret
cmp
mov
sub
xchg
xor
push
in
sub
int3
add
dec
push
sub
or
fdivs
or
sub
sbb
push
ds
es
add
aas
sbb
and
imul
or
pop
adc
clc
mov
adc
xchg
cmpsl
ss
pop
das
rcll
jo
add
sbb
lods
sub
adc
movsb
int
pop
je
and
cmp
jne
push
or
or
pop
adc
and
decl
inc
push
mov
lds
and
and
jg
adc
add
shlb
xchg
cmpsl
addr16
neg
cmp
mov
mov
mov
loope
jmp
bnd
bound
inc
mov
loope
and
mov
mov
pop
sbb
lret
pop
pop
cmp
out
mov
pop
mov
xlat
je
xor
jne
das
mov
decb
ja
es
push
ffree
mov
and
orb
sbb
jg
daa
in
or
outsl
shlb
or
or
mov
xchg
push
roll
push
clc
pop
or
push
cmp
lock
dec
xchg
outsl
mov
push
xor
jbe
int3
in
lahf
rclb
cld
adcb
jmp
push
mov
lret
mov
cmp
push
cmp
mov
insl
sbb
aam
and
movsl
add
or
daa
mov
jo
rclb
jle
jl
std
roll
or
xor
xor
mov
push
fstps
sub
clc
cmpsb
js
or
fs
cwtl
stc
call
aad
jp
out
psubusw
lock
std
icebp
sarl
jmp
jmp
jo
das
xor
cmp
mov
push
and
adc
sbb
pushl
pop
jmp
mov
xor
call
inc
dec
xchg
jecxz
lcall
leave
sub
xor
dec
add
lcall
push
mov
sub
pop
cmc
add
xor
mov
insb
or
inc
aam
cmp
xor
sbb
add
inc
or
jo
pop
jge
cmp
pop
xchg
or
xor
cmp
fistps
mov
inc
shrl
shrb
cmp
pop
cmpsl
and
push
lret
or
insb
andb
jmp
jbe
stos
outsl
or
xor
pop
dec
jg
popf
inc
cmp
dec
enter
add
sbb
or
pushf
pop
stos
pop
mov
fadds
push
outsb
aaa
or
push
addb
and
data16
idivl
and
adc
lock
cmc
ret
or
out
and
adc
sbb
mov
push
decl
xchg
push
push
xchg
neg
jb
shrl
add
add
dec
imul
pushl
rcrl
xlat
pop
push
push
loopne
shlb
pop
push
lock
std
fwait
push
dec
fcomp
xor
incl
addr16
jecxz
adc
nop
loope
ss
push
ret
push
xchg
aas
loop
test
adc
outsb
fiaddl
add
decl
aas
jle
aas
mov
jmp
sub
inc
push
adc
dec
loopne
je
cmp
fdivl
mov
icebp
decb
xor
int3
push
adc
add
dec
add
clc
sbb
hlt
add
sbb
call
inc
outsb
outsl
mov
sub
add
stos
sub
jl
ret
xor
cmp
push
adc
test
incl
in
sbb
stos
jp
push
cld
cmp
call
jo
push
sub
mov
adc
and
hlt
sbb
sub
insl
add
pop
hlt
call
inc
and
in
ret
add
and
cmp
out
out
mov
mov
jg
decl
mov
jl,pn
js
daa
push
outsl
fs
push
je
dec
or
add
call
lret
sub
push
or
jb
add
cld
decl
inc
mov
insb
mov
dec
clc
addb
aas
xor
push
in
aam
ds
push
enter
inc
mov
fildll
mov
jg
sbb
jmp
or
dec
jne
inc
rorl
adc
inc
or
push
mov
aas
sar
scas
mov
adc
push
mov
or
getsec
jmp
xor
aaa
insb
enter
mov
in
xchg
jecxz
outsb
lcall
in
cmp
xchg
xor
sub
roll
add
stos
fucom
je
loop
js
sar
std
jbe
test
adc
lahf
jecxz
and
in
push
aas
mov
movl
and
xchg
outsl
or
fdivrs
mov
mov
aas
adc
push
xlat
sbb
cmpsb
mov
add
mov
jbe
dec
xor
pop
pushf
mov
mov
into
mov
aad
adc
nop
cmpsb
loopne
orl
loopne
decl
xchg
movl
cmp
stos
nop
or
pop
cmpsb
push
or
xlat
or
sbb
cmp
adc
test
pop
movsb
fsubs
test
lahf
jae
ret
adc
std
cmp
jl
mov
seto
arpl
xor
jo,pt
add
ret
aas
xor
cld
jle
add
adc
loope
mov
cli
push
sub
fs
in
out
scas
push
aam
cwtl
and
icebp
push
xor
fs
inc
adc
leave
out
das
dec
hlt
mov
in
sbb
cld
inc
xchg
add
xchg
lret
out
adc
fildll
or
outsl
pop
ret
mov
roll
sbb
fdivr
decl
dec
pop
or
pop
mov
arpl
fwait
pop
adcl
and
add
test
dec
mov
jmp
ljmp
cli
bound
pushl
xchg
xchg
cmp
push
or
cwtl
or
mov
jne
lcall
outsb
xor
sbb
inc
or
data16
sar
lcall
loopne
aas
mov
push
adc
cmp
fiadds
push
rcr
fdiv
or
fs
sub
sarl
dec
hlt
ja
hlt
adc
push
ret
fcmovb
dec
xlat
xor
xor
dec
addb
je
cmp
sbb
mov
pop
loope
mov
pop
sub
call
fildl
cmp
add
mov
fstps
enter
add
ljmp
test
addr16
mov
decl
push
mov
mov
sbb
mov
adc
mov
xchg
dec
hlt
push
jmp
inc
mov
mov
lcall
shlb
mov
clc
mov
stc
incl
cmp
inc
mov
cmc
adc
pop
inc
mov
decl
pop
cmp
jge
call
push
dec
je
inc
dec
mov
jbe
pop
adc
jl
js
adcl
cmp
add
and
ja
sarb
mul
ret
cmp
daa
aas
jmp
decl
mov
cmp
sub
cld
xor
dec
and
mov
xor
shlb
ret
inc
cmp
cmp
sbbb
movsl
add
ja
fs
sub
push
push
gs
fwait
popa
sahf
int3
movsb
sbb
pop
sbb
and
jmp
sti
fcmovnb
int3
pop
cmp
jmp
or
cmp
cld
ret
sbb
mov
push
mov
inc
adc
adc
in
ret
mov
push
test
mov
cld
mov
mov
cld
pop
and
push
or
mov
mov
pop
and
and
dec
mov
repz
sbb
popa
inc
clc
fdivl
dec
daa
test
stc
das
or
test
push
inc
pusha
jg
sbb
incl
data16
and
inc
mov
out
push
sbb
cld
pop
popa
mov
mov
in
add
mov
adc
scas
dec
les
jg
call
push
jo
adcl
cmp
aaa
repnz
mov
hlt
incl
divl
dec
push
sbb
and
cmc
add
out
or
mov
fldl
aas
add
pop
loopne
pushl
icebp
dec
xor
adc
cmpb
fisubl
jle
inc
inc
push
dec
ret
pusha
imul
pusha
push
js
adc
loope
or
les
incl
icebp
inc
cmp
mov
adc
mov
std
je
sti
frstor
mov
add
xchg
dec
jge
add
pushl
jge
jl
jne
jns
js
mov
nop
imul
test
dec
dec
nop
lds
mov
adc
aad
adc
cmp
pushl
push
mov
cmp
jne
push
and
jmp
ds
sahf
xor
decl
mov
sahf
push
movsb
decb
lock
cmp
aas
inc
addl
mov
adc
jmp
mov
ja
adc
decl
lock
call
push
mov
rcl
cmc
loopne
fs
bound
clts
test
cli
outsl
mov
push
cmp
lock
rcl
lret
scas
emms
aam
pop
mov
push
mov
add
sbb
cli
add
inc
xlat
jp
add
or
jg
pop
adc
popa
push
add
push
or
sub
iret
jp
call
push
das
sub
and
jno
mov
and
or
mov
rolb
mov
cwtl
mov
mov
adc
outsl
cli
out
adc
repnz
stc
push
sbb
add
or
cmp
dec
repnz
jbe
xchg
testb
lcall
jnp
loopne
test
jo
shr
pop
adc
inc
jg
int3
inc
in
or
pop
cld
ljmp
inc
mov
dec
cld
movsl
imul
jmp
inc
clc
xchg
adc
cmc
add
jg
cmp
es
ljmp
dec
test
xchg
fcoms
ljmp
pop
add
pusha
lods
testb
mov
data16
data16
sub
or
aas
and
cld
iret
inc
push
mov
push
or
decl
or
js
sbb
mov
cmpsb
sahf
or
arpl
sub
mov
lcall
push
mov
xchg
push
push
xor
or
cltd
sbb
push
xor
cwtl
popa
xor
aaa
mul
jg
aas
call
adc
fistl
add
or
or
add
push
mov
adc
daa
pop
sbb
push
mov
call
mov
cmp
mov
sbb
call
stc
pop
pushf
sbb
jmp
decl
push
mov
dec
mov
jo
and
int3
leave
mov
inc
push
dec
mov
cmp
mov
data16
pop
adc
dec
inc
pop
pop
xchg
pop
add
sbb
arpl
sub
imul
xchg
call
and
add
jl
daa
add
aad
add
inc
inc
lcall
mov
and
pusha
pop
or
je
mov
or
in
add
mov
jle
call
or
loope
movsb
mov
inc
pop
cld
pop
and
add
das
js
outsl
ds
movb
add
pop
pushf
pop
and
pop
cmc
call
cmp
outsb
dec
mov
dec
jp
pop
sub
dec
pop
dec
cmp
and
mov
mov
jns
call
push
dec
icebp
mov
out
decl
lock
hlt
mov
jb
dec
jle
aam
dec
cmpsb
daa
aam
inc
aam
lcall
aam
mov
loopne
add
cwtl
add
adc
insl
jle
aam
jbe
rolb
mov
popf
popf
addr16
js
movsl
mov
mov
or
dec
cmp
iret
add
pop
into
loope
ja
sbb
mov
sub
call
lea
les
add
jmp
jge
js
rorl
push
pop
mov
pushf
out
int
lahf
add
inc
adc
mov
movsb
loop
decl
aad
xchg
test
dec
ret
cmp
incl
inc
mov
cmc
ljmp
test
push
add
inc
pusha
add
enter
dec
out
gs
das
xor
insb
pop
arpl
jno
lcall
mov
in
adc
int3
aad
lods
dec
inc
mov
mov
cmovne
inc
pusha
jmp
aas
inc
dec
jl
cmp
aas
in
cld
lcall
jge
sub
lods
jl
pop
jg
test
nop
flds
ret
outsb
or
in
jmp
subl
shl
es
sub
sbb
mov
lcall
pop
fisubrl
sbb
repz
inc
adc
sbb
call
lock
je
mov
cs
loopne
xor
mov
clc
xor
mov
mov
push
or
cmp
sub
dec
outsl
adc
cmp
hlt
jmp
xor
ljmp
rcl
cli
sbb
icebp
ljmp
incl
mov
push
sbb
sbb
jo
cmp
add
testl
push
mov
jg
push
sub
das
addr16
and
std
addr16
cmp
dec
jbe
jle
ljmp
cmpsb
sbb
mov
lods
mov
in
insl
lock
sbb
add
jg
sub
test
bound
cmp
fldt
das
push
int3
push
subb
out
test
mov
add
or
sti
fwait
add
lret
mov
ljmp
xchg
cmp
les
jno
inc
mov
and
dec
sbb
call
negl
jle
cmpsb
pusha
stos
sti
call
add
ja
push
fistps
punpckhbw
jns
dec
xor
je
movsb
incl
rolb
cld
pop
jne
es
hlt
xchg
fnstenv
call
pop
push
adc
daa
and
dec
outsl
idiv
lret
dec
push
out
sub
out
or
mov
insb
add
fcomip
shr
dec
and
aas
test
subb
mov
nop
pop
cmp
data16
or
and
fs
in
inc
movsb
and
push
lea
mov
out
xor
xlat
pop
push
jmp
popf
loop
adc
push
xlat
pop
push
dec
data16
fcomip
mov
ljmp
sbbb
lock
jnp
jbe
xor
push
shl
inc
loope
faddl
in
mov
jmp
push
icebp
pop
pop
and
pusha
pop
mov
push
adc
xchg
call
pop
clc
mov
daa
inc
adc
in
push
scas
pop
js
mov
inc
and
mov
push
cmpsb
or
pop
das
or
mov
mov
dec
out
add
scas
pushl
adc
ret
add
lock
push
pop
dec
cmp
add
loopne
dec
mov
shll
sbb
dec
push
mov
cmc
decl
es
ret
pusha
push
ret
add
inc
jle
cmp
mov
out
xor
outsb
ret
cmp
outsl
insb
pop
dec
out
or
lcall
test
or
push
fs
lret
ljmp
pop
pop
loopne
dec
xchg
lahf
push
jl
incl
xchg
iret
push
inc
lock
iret
xor
xchg
popf
push
sub
push
mov
lods
loopne
shl
imul
push
hlt
pusha
aad
jle
mov
push
add
daa
mov
and
dec
xchg
jmp
outsb
mov
loopne
cmp
in
dec
sbb
incl
enter
push
fstps
ss
or
ret
push
mov
jo
loop
cwtl
or
or
mov
inc
dec
shrb
ret
push
push
push
mov
and
ret
aas
or
jo
sub
mov
jg
add
inc
cmp
or
fisubrs
or
pop
or
inc
cwtl
inc
pop
adc
inc
out
scas
or
std
inc
mov
jle
incl
ja
dec
fdivrs
push
addr16
xchg
push
fmul
mov
adc
xchg
push
cmp
and
lock
push
push
jo
mov
incl
add
adc
pop
and
sbb
nop
inc
js
arpl
push
test
call
cmpsb
sbb
lea
mov
in
leave
dec
movsb
shl
lretw
push
cmpsl
inc
mov
cmpsl
shll
dec
add
adc
push
fdivrl
pusha
pop
dec
loopne
rorl
adc
lcall
inc
lcall
sub
repnz
in
cli
stos
scas
mov
loope
mov
jge
or
outsl
addb
cmp
loop
ret
add
xlat
xchg
mov
movsb
testl
call
addr16
lret
js
cmpsl
or
aaa
mov
inc
mov
ljmp
mov
dec
mov
incl
mov
andl
shl
mov
jne
ret
cmp
fcomps
adc
adc
xorb
mov
xor
js
add
bound
dec
lea
adc
add
add
pusha
sbb
add
ret
pmaxub
repz
push
sbb
pop
push
add
cld
add
and
incl
xchg
push
jp
jge
jecxz
fs
call
cmpsb
cltd
loope
movsl
dec
jg
jbe
push
dec
jo
and
shr
adc
add
decl
add
shlb
pop
mov
push
or
or
push
mov
movsl
loope
ljmp
add
push
rorb
push
cld
jmp
aaa
decl
cmpsb
ret
add
add
xor
mov
cmp
lcall
mov
movsb
cli
inc
call
shrb
fisubs
xorb
and
incl
push
lods
mov
cmp
push
movsb
or
cmp
adc
or
jno
jbe
jg
stos
or
pop
nop
jle
dec
push
lock
inc
inc
add
cmp
decl
adc
push
loop
inc
or
leave
adc
mov
pop
lock
dec
lock
outsb
inc
inc
mov
mov
mov
jo
sbb
jne
cmpsb
clc
decb
jg
mov
mov
scas
jge
icebp
mov
mov
lcall
mov
out
mov
xchg
hlt
jnp
jle
push
aaa
dec
mov
add
int
jmp
fadd
inc
jo
jle
dec
sub
call
pop
or
jnp
push
adc
push
adc
into
sub
loop
add
mov
inc
push
dec
inc
push
popa
and
sahf
dec
add
stos
inc
mov
bound
cs
push
shrd
out
cmp
jo
lods
mov
cmc
sub
lret
incl
mov
push
arpl
sub
les
and
xor
push
ss
sbb
or
into
and
or
pop
sub
and
scas
cmp
notl
mov
inc
adc
incl
mov
lods
cli
jge
mov
ja
ret
call
inc
dec
mov
adc
jp
push
sbb
arpl
add
adc
fstl
out
in
adc
jg
adc
pop
outsl
mov
aas
pusha
xlat
mov
cmpsl
push
add
ss
cmp
movsb
pop
ljmp
add
push
mov
cli
and
cld
jmp
cmpsb
xor
or
adc
add
out
jg
subb
jle
dec
cs
adc
push
insb
cmp
pop
mov
dec
leave
mov
ljmp
and
in
push
scas
push
insb
add
ret
and
je
adc
lods
jne
ret
mov
scas
mov
sub
push
jmp
and
sub
dec
pushl
cmp
pop
xchg
ret
mov
adc
add
jg
mov
fcomip
cmp
mov
std
pop
cmp
jnp
dec
cli
dec
pop
cmp
cmp
pushf
jmp
pushl
cltd
add
in
jb
jmp
ljmp
sbb
sub
pushl
jae
into
sbb
inc
push
lcall
loopne
das
adc
adc
aaa
out
sbb
stos
loop
insb
outsl
loop
aas
stos
or
pop
ret
inc
dec
nop
pop
clc
test
sbb
adcb
scas
adc
sub
jle
ret
jg
and
inc
adc
add
int
lods
scas
cmp
hlt
mov
pop
fs
xchg
popa
or
je
mov
pop
push
xchg
mov
inc
pop
mov
mov
into
dec
das
pop
stc
cmp
es
mov
xchg
jmp
cld
in
popa
and
insb
lea
mov
test
mov
incl
push
sti
popa
pop
or
inc
pop
loopne
jmp
aas
imul
fildll
add
jns
sub
jg
mov
int3
inc
push
push
adc
and
inc
jo
dec
or
add
rorb
xchg
shl
pop
or
sbb
pop
adc
decb
jg
adc
aad
dec
movsl
call
std
pushl
and
enter
xchg
stos
mov
and
int3
push
and
jo
pop
mov
sub
in
cmp
repnz
sub
cmp
adc
pop
sub
fcoml
mov
outsl
add
decl
inc
pushl
push
sti
xchg
incl
xor
push
xor
add
cli
or
jg
push
jae
mov
sub
sub
daa
popa
lods
shll
ljmp
icebp
add
add
out
inc
lea
jl
xlat
jl
add
outsb
lcall
add
call
inc
dec
or
es
push
mov
rcll
sbb
cmp
aas
inc
jl
ror
sbb
dec
sbb
pusha
les
cmpsb
add
cmp
mov
enter
loope
dec
jbe
xchg
repnz
xor
push
out
pop
inc
pop
int3
mov
inc
sar
pop
ds
push
popa
and
sti
inc
pop
or
adc
clc
pop
sbb
mov
push
pusha
test
inc
adc
push
adc
pop
data16
add
sbb
lret
inc
sbbb
incl
or
call
xor
xor
sub
sbb
sar
in
outsl
lcall
xor
and
pushl
stc
sub
sbb
jne
cmp
jb
mov
in
xchg
add
and
mov
pop
lea
ljmp
roll
fisttpl
mov
add
shll
push
or
ljmp
imul
in
add
lcall
pop
sub
dec
sbb
sbb
sbb
push
popa
loope
and
mov
adc
adc
or
or
call
je
or
je
icebp
rcrb
int
test
pushl
pop
hlt
jg
rcl
rcl
rcl
cmp
jb
incl
ficomps
out
inc
loop
testb
or
out
mov
inc
repz
pusha
fwait
pop
std
mov
mov
xorb
pop
push
jns
mov
jns
neg
neg
sbb
or
iret
into
cli
pop
mov
je
test
xor
ficoms
xor
mov
ja
and
out
add
inc
jae
mov
push
loopne
aas
sbb
mov
push
jecxz
mov
cmp
sub
xor
add
loope
mov
in
mov
mov
clc
mov
sbb
pusha
rolb
aaa
sub
pop
mov
js
and
out
cli
pop
je
push
in
push
sti
repz
es
sub
mov
test
xchg
mov
incl
and
add
inc
aaa
int
rclb
or
incl
aaa
inc
xor
jae
and
xorl
fwait
aam
pop
push
rcrl
jcxz
pushl
jne
aaa
insb
jnp
js
or
xlat
or
aad
push
and
call
insl
dec
fstl
inc
call
jg
rcl
dec
repz
out
jb
adc
push
jb
out
stc
sti
in
adc
arpl
mov
xor
push
push
fisttpl
jae
push
decl
mov
cmp
sbbl
mov
sub
pushf
lock
sbbb
movsb
ret
add
add
dec
mov
cmp
sub
or
mov
sub
rcll
inc
fidivrl
add
push
cmp
dec
or
ja
pop
and
pop
je
inc
aas
ljmp
mov
int3
sbb
jg
cmp
adc
ds
cmp
arpl
sub
jmp
sbb
inc
inc
clc
incl
sbb
or
aaa
lods
setb
add
scas
je
dec
ds
cmc
add
push
cmp
mov
jmp
xor
sbb
and
push
rolb
daa
add
push
fdivp
adc
jl
dec
decl
out
popa
xchg
clc
nop
clc
mov
jb
sub
pavgb
sbb
add
cmpb
sbb
xchg
mov
mov
addr16
add
bound
daa
cmp
ret
rolb
decl
push
add
push
sbb
mov
push
sbb
push
aam
push
or
cli
push
fwait
or
mov
in
add
outsl
lret
shrl
stc
incl
mov
pusha
sbb
lock
xlat
imul
sbb
call
in
mov
pop
jne
jge
mov
push
lock
in
mov
std
jmp
test
jne
pop
in
push
inc
adc
into
stos
sarb
inc
dec
push
dec
rcrl
add
cmc
add
pusha
gs
mov
or
incl
mov
lahf
sahf
or
add
cmpsl
inc
xchg
push
cmp
jmp
or
dec
mov
jo
and
jmp
and
jo
sub
decl
add
jne
enter
push
subl
icebp
mov
add
xchg
xor
mov
pop
adc
lret
adc
incl
push
movsl
adc
out
mov
or
jnp
add
mov
mov
scas
adc
pop
adc
push
cmp
ret
lcall
pop
mov
out
dec
jecxz
fs
jmp
mov
pusha
or
sarl
mov
xor
xchg
inc
add
call
and
sar
call
aas
dec
cmpsb
out
push
pop
les
loop
adc
aaa
mov
xor
pushl
out
adc
jno
scas
cmp
fwait
pop
clc
loopne
cmp
and
jae
sarb
dec
or
lock
pop
cltd
add
pushf
xchg
incl
jb
in
in
incb
pop
repnz
adc
cld
xor
and
pop
adc
push
push
mov
cwtl
add
xor
ljmp
jae
test
adc
data16
ljmp
dec
ret
test
dec
cmp
das
mov
stos
xchg
ds
call
lcall
gs
cld
cmp
pop
ret
adc
incl
push
rorb
or
int3
lock
in
scas
inc
add
adc
jmp
adc
inc
jne
scas
fcmovbe
pop
mov
sub
add
lcall
addr16
test
fnsave
pusha
jle
mov
shlb
xlat
push
fcomps
popl
lcall
push
push
cmpl
cmpsb
mov
cmp
cmpb
outsb
jo
pop
dec
inc
int3
std
mov
pop
inc
dec
les
jg
jle
inc
or
add
cli
pop
fidivrl
add
jecxz
or
push
mov
div
ljmp
addl
lods
adc
imul
add
in
fists
sub
outsb
iret
cmp
fstl
out
insb
add
dec
jmp
jl
daa
not
std
out
add
movsl
mov
je
pop
fistpll
sbb
dec
push
pop
cmp
lds
cmp
inc
ja
rclb
stc
adc
sbb
dec
decl
loopne,pt
add
dec
daa
je
aam
adc
in
cmp
aam
mov
or
mov
iret
imul
mov
and
jp
add
jg
pushl
lods
sbb
clc
jmp
push
lret
sbb
gs
stos
jl
inc
sbb
jge
bound
sub
cltd
xchg
pop
xchg
fisttps
fistpl
lock
inc
mov
test
mov
sti
dec
and
cld
incl
fldl
xchg
or
push
out
cmp
jl
leave
ret
cmp
scas
cmc
lods
pop
lret
pushf
lret
ds
je
xor
add
add
cmp
lcall
insb
repnz
imul
pop
inc
outsl
mov
xor
push
inc
lcall
inc
imul
ja
and
push
xor
aaa
aam
iret
mov
mov
aam
aaa
aaa
adc
inc
pop
nop
or
cli
jg
mov
insb
aaa
ljmp
test
pop
and
adc
xchg
push
inc
clc
call
xchg
and
ret
testl
pop
mov
dec
mov
xorb
out
pop
or
mov
pusha
push
mov
adc
push
mov
dec
shlb
inc
rcr
les
jp
push
add
add
xchg
push
pop
adc
jp
sbb
add
ljmp
rorb
push
jno
outsb
shlb
mov
cs
push
xchg
push
pushl
add
imul
cmp
jmp
pop
jle
mov
add
fadds
cli
inc
ljmp
jmp
add
cmp
sbb
or
push
add
ljmp
outsb
jnp
add
push
inc
dec
sahf
lcall
mov
sbb
sbb
push
push
mov
inc
negl
or
or
sbb
mov
sbb
sbb
pop
add
out
into
pushf
dec
cmp
ljmp
js
cs
cmpsl
and
inc
les
add
loopne
adc
sbb
push
incl
add
pop
outsb
inc
cmp
pop
xchg
mov
sti
push
es
cmpb
loopne
incl
push
pop
hlt
sub
dec
push
ljmp
mov
jns
xor
sub
call
mov
lea
jecxz
fs
cli
fadds
rclb
fbld
sbb
dec
sub
rcr
or
dec
adc
outsl
arpl
ret
inc
and
jmp
inc
or
push
loop
out
jle
lds
add
cmp
filds
sub
lods
add
adc
push
adcl
mov
cld
fistl
adc
adc
sbb
fadds
push
dec
sarl
sbb
andw
or
andb
cmp
push
adc
out
add
or
dec
push
xchg
scas
sbb
mov
cmp
pop
or
mov
clc
add
jle
imull
mov
dec
repnz
mov
jmp
jp
aas
push
andb
mov
sbb
pop
imul
loopne
lcall
or
dec
mov
adc
mov
decl
or
sbb
sub
push
add
push
ljmp
call
adcl
add
fcomps
adc
add
mov
test
push
jbe
mov
push
jno
inc
dec
outsb
xchg
push
or
jmp
push
push
inc
jl
stos
aaa
nop
xchg
lods
stc
jbe
sub
jo
push
sbb
push
ja
ficomps
ljmp
fscale
and
or
jecxz
adc
popf
fistpll
and
push
pushf
dec
call
lret
pop
cmp
mov
cli
movl
rorb
inc
xor
push
xor
ss
sbb
cld
insb
lods
daa
inc
std
incl
loope
add
outsl
jo
push
decl
jo
dec
mov
icebp
mov
lcall
test
cmp
sub
decl
je
arpl
jb
movsb
or
adc
xchg
ss
xor
pushl
fcompl
cmp
sbb
inc
pop
nop
xlat
loopne
pop
pop
lahf
xchg
cwtl
adc
decl
fimull
jne
and
adc
nop
pushl
ljmp
jae
rcr
repnz
and
add
cmp
jne
icebp
dec
lea
mov
jb
cmpsl
fsts
gs
out
loop
jp
sbb
inc
jg
xchg
lock
test
jno
xchg
outsb
pop
cmp
jle
call
xchg
dec
add
fcom
push
push
stos
incl
jno
mov
inc
das
push
and
aas
push
daa
mov
test
inc
clc
lods
or
jno
sub
decl
cld
mov
aaa
insb
xchg
xchg
les
fbstp
call
adc
sub
sub
je
dec
lods
mov
push
ret
and
or
mov
clc
jns
or
ret
pop
push
mov
jle
ja
jg
lods
add
xchg
fsubr
mov
daa
out
clc
jmp
push
test
les
pop
sub
jne
push
push
movb
ljmp
mov
and
out
or
divl
xchg
xor
je
cmp
aas
jg
dec
jbe
lock
jns
push
icebp
repnz
cmc
div
psubb
out
mov
cld
std
jmp
loope
jecxz
add
out
in
jg
cmp
mov
jmp
in
jmp
in
in
out
leave
out
rcl
mov
psrlq
aad
xlat
fcomp
fcmovu
fdivp
lret
ffreep
rol
enter
sub
into
iret
mov
mov
mov
mov
fs
out
pop
stc
mov
mov
mov
mov
mov
cmpsl
test
stos
stos
lods
lods
scas
scas
nop
xchg
xchg
orb
xchg
xchg
xlat
add
mov
fcos
test
ret
inc
call
mov
or
lock
push
mov
dec
jae
stos
jo
and
or
cld
push
test
add
nop
mov
clc
out
out
and
mov
inc
xor
inc
std
decl
fildl
out
xor
das
add
jg
inc
pop
cmp
add
pusha
jg
cld
and
lcall
mov
es
shrb
repnz
push
test
out
lock
pop
cld
jg
adc
mov
adc
or
hlt
bound
jmp
adc
std
sbb
jp
mov
lds
push
sar
dec
jle
pop
or
decb
sub
aaa
xor
adc
pop
mov
rcll
ror
mov
pop
shrb
pop
hlt
xchg
add
int
scas
add
push
xor
mov
out
mov
decl
mov
in
cmp
push
sbb
insl
mov
sub
add
mov
push
or
cmpsl
mov
jo
cltd
or
ss
add
adc
aaa
aaa
je
lods
and
pop
mov
cmpsb
push
lahf
dec
add
mov
imulb
push
enter
lahf
dec
xor
int3
or
add
jge
cli
decl
test
sti
add
xor
sbb
mov
imul
decl
jle
mov
push
add
xchg
add
or
xchg
xorb
fistps
adc
pop
pop
js
xor
fldenv
sarb
add
in
adc
jg
cmp
mov
ss
insb
xorl
ja
sarb
add
add
add
or
and
pushl
loope
jo
daa
add
push
add
outsl
insl
fldcw
push
or
jns
pushl
jno
ja
pop
out
add
xor
fld
lcall
mov
or
push
xorb
repz
jmp
push
adc
jg
shrl
xor
adc
cmp
push
add
dec
xchg
jae
mov
and
mov
adc
fldt
mov
mov
or
int3
ficoms
or
or
add
xor
movups
imull
or
decb
pop
mov
add
aad
icebp
add
mov
inc
call
add
das
neg
je
jo
mov
fs
pop
ud0
cli
insl
pop
push
call
inc
inc
lods
pushf
add
sub
leave
test
and
sbb
xchg
leave
sbb
outsb
loope
push
jle
jp
testl
or
or
daa
add
add
cld
clc
hlt
daa
lock
call
dec
mov
sarb
inc
pop
jbe
and
movsb
jg
incl
test
adc
and
mov
inc
mov
call
push
inc
insl
jnp
cmp
dec
ret
cli
hlt
nop
cmp
lods
push
movsb
pop
jns
adc
cmp
cmpb
in
push
jo
push
push
push
dec
dec
inc
pop
push
aam
mov
mov
or
adc
outsb
mov
fsub
cmp
fstpl
hlt
and
push
faddl
aam
int3
lret
sub
push
jb
shrd
pop
out
rorb
orb
jo
push
faddl
add
inc
mov
add
and
sub
sbb
add
sbb
add
lock
cmp
rorb
int3
scas
and
add
push
aas
inc
hlt
mov
paddw
and
mov
mov
jb
decb
jb
fcomi
popa
fcmovne
pushf
cltd
cld
hlt
paddb
sub
cmp
pusha
into
int3
pop
mov
paddd
ret
aaa
call
add
je
mov
mov
add
outsb
pop
jb
loope
dec
dec
cs
sub
in
inc
sbb
fiadds
add
add
inc
fiaddl
out
push
add
shl
cmp
add
emms
jo
or
enter
sahf
in
pop
fmull
pop
out
in
jae
unpckhps
sbb
rolb
add
es
pop
enter
cmp
fcmovu
int
pushf
xchg
xchg
ret
add
mov
pop
lock
dec
cld
addr16
lret
fcomps
push
xchg
fimuls
cmpsb
sbb
mov
ljmp
call
pop
jae,pt
jge
push
loopne
and
mov
sahf
and
pushf
push
ljmp
subl
dec
xchg
test
sbb
mov
mov
xchg
rcrb
push
push
sbb
add
mov
loopne
or
lcall
mov
inc
pop
or
dec
cli
gs
add
cli
lcall
fnstcw
mov
cs
arpl
xor
and
push
repnz
mov
pop
dec
inc
inc
outsl
mov
adc
ficomps
inc
pop
pop
fstpt
das
inc
aas
cmp
lcall
fucomi
mov
push
add
push
xor
fsubrp
pop
pop
or
pop
push
clc
call
mov
mov
jg
push
mov
mov
add
inc
or
push
call
sbb
mov
notb
seta
popf
sahf
setg
pop
jns
test
mov
jo
pop
jns
xchg
jb
je
jbe
js
jp
jl
jle
insl
add
or
adc
fidivrl
pop
sbb
ljmp
call
sahf
shlb
cld
movsb
sbb
xor
add
iret
and
jl
and
or
incl
cmp
push
push
inc
adc
adc
cltd
push
mov
add
aad
push
pusha
loope
add
call
or
movsb
scas
imul
imul
mov
or
decl
pushf
dec
gs
inc
pusha
pop
sbb
cmp
call
sti
dec
push
cmpsb
xchg
push
out
sbb
jg
decl
out
hlt
sbb
mov
jmp
push
mov
sbb
jmp
adc
and
pop
adc
nop
cmovbe
mov
mov
mov
xchg
fs
jmp
clc
jle
outsl
das
push
out
ss
sub
call
inc
mov
call
sbb
inc
outsl
mov
jg
hlt
sub
fmuls
adc
mov
loopw
cld
xchg
cmp
add
inc
pop
and
dec
incl
add
stos
ss
lcall
sub
rdpmc
inc
mov
mov
and
xor
decl
loopne
push
mov
xchg
nop
sub
call
stos
popf
pop
inc
adc
sub
sbb
adc
cli
pop
hlt
call
lods
xchg
mov
shl
add
adcl
aam
inc
mov
mov
cs
push
push
push
in
dec
add
sub
inc
pop
inc
and
sbb
dec
in
jle
cmp
dec
add
cmp
mov
insl
cld
xchg
inc
or
adc
add
mov
out
mov
xor
adc
dec
arpl
rol
or
lea
adc
push
add
dec
xor
adc
cmp
int
or
lcall
decb
cmp
pop
mov
sbb
sub
or
daa
lock
add
ds
test
ja
ret
add
add
jmp
mov
in
movl
xor
lea
cld
add
jb
jne
repnz
mov
nop
out
enter
rcrb
jle
dec
aaa
xor
xchg
and
sti
fisttps
inc
leave
mov
das
xchg
test
outsl
test
or
ficompl
lcall
aas
scas
fdivp
push
nop
sbb
cld
sub
inc
setg
lahf
ja
loopne
decl
nop
fs
insb
xchg
jns
sti
push
add
lret
sar
incl
push
mov
out
push
or
outsb
popa
inc
leave
xchg
dec
xchg
cmp
inc
nop
js
call
or
ja
xchg
mov
or
or
xlat
add
xchg
insl
shl
pop
mov
in
incl
sbb
nop
inc
mov
hlt
cld
cld
int
inc
iret
add
mov
into
aas
dec
dec
push
outsl
or
mov
insb
shlb
mov
inc
xchg
or
or
inc
loopne
adc
xchg
pop
cld
call
xchg
pushf
dec
xchg
inc
jns
loope
xor
gs
test
inc
and
pushl
adc
popa
out
xchg
adc
daa
xchg
xchg
sbb
outsb
fsts
negb
sub
pop
decl
or
test
lea
xchg
cmpsl
or
inc
dec
mov
mov
imul
push
xchg
pusha
fists
dec
ret
lock
jg
jmp
fdivp
jmp
sbb
xlat
adc
aaa
std
fistps
ret
dec
xchg
inc
mov
dec
mov
call
or
and
in
xchg
and
cltd
xchg
push
xchg
cld
das
fisubl
mov
imul
cwtl
and
and
sub
fcomip
jmp
je
insb
inc
jbe
mov
ljmp
cltd
mov
sub
lcall
xchg
push
xor
inc
popa
jl
push
rorl
out
cmpsl
inc
or
pop
push
or
lcall
pop
fsubp
push
jle
aam
enter
push
adc
data16
lcall
pop
cld
xor
lcall
dec
push
rcll
push
mov
pop
insl
adcl
inc
cld
cmp
mov
inc
std
pushf
mov
lcall
dec
lds
shll
das
pushf
adc
pushf
sbb
rclb
loopne
pop
sub
std
jmp
fidivrl
mov
mov
or
sub
push
gs
mov
aaa
mov
adc
xor
and
dec
xor
loop
xor
mov
fmull
mov
ja
cmovge
inc
decl
or
or
unpcklps
daa
sub
sub
pop
std
mov
mov
out
popf
push
or
jg
mov
mov
outsb
icebp
adc
xor
hlt
dec
mov
add
lret
sbb
dec
push
aad
dec
push
outsl
inc
sbb
mov
das
xor
mov
jg
inc
insb
fs
cmp
test
addr16
lods
sarb
push
mov
nop
outsl
adc
es
cmp
sahf
xor
or
adc
or
jg
jg
orl
mov
add
push
idivl
pop
inc
jo
clc
inc
add
jmp
and
dec
imulb
aam
insl
and
mov
out
jb
gs
pop
xor
cmpsb
lcall
ss
arpl
xchg
jp
dec
cmpb
adc
fisttps
scas
adc
sub
inc
jns
add
pop
lahf
xchg
inc
lahf
pushf
sbb
outsl
fs
mov
pop
aaa
sub
adc
fwait
push
or
jo
dec
mov
or
pop
outsb
incb
sbb
lods
cmp
repz
push
and
jne
ljmp
add
jb
mov
inc
push
pop
mov
inc
mov
test
ja
push
in
inc
sahf
daa
cmp
and
add
pop
inc
mov
mov
int3
mov
push
insb
jo
leave
and
mov
orl
mov
addr16
cld
inc
sbb
incl
cld
push
mov
pop
leave
shrl
push
shl
test
inc
sahf
gs
pop
fwait
pop
mov
hlt
jl
sar
bound
sub
fdivr
jg
aad
push
or
pop
mov
add
add
add
push
cmpsb
lret
mov
ss
xchg
ljmp
bound
fadds
insl
mov
daa
cmpsb
cwtl
shrb
mov
lods
sub
adc
cmp
mov
adc
add
push
add
movb
fildll
jmp
ret
ljmp
add
dec
ret
mov
mov
mov
adc
and
nop
fcoml
xor
sub
cmpsl
or
mov
jp
or
lea
sbb
clc
jp
sbb
das
incb
fs
mov
add
or
dec
dec
adc
ljmp
xlat
push
jmp
in
out
cli
pop
lock
out
add
decl
popa
sbb
loopne
cmp
mov
mov
pop
pop
leave
dec
mov
or
mov
in
mov
cmp
add
cmpb
cmp
jmp
pop
scas
xor
or
add
shl
fs
je
and
clc
sbb
mov
ja
adc
pop
pop
xchg
cmpb
add
fcmovne
sbbb
mov
sub
add
int3
mov
mov
scas
sub
outsl
cli
add
cmp
sti
jbe
jp
out
sub
jo
pop
fdivrs
jb
out
or
lea
ficoms
pushl
push
dec
lahf
inc
outsb
mov
or
cmpb
cmp
rolb
mov
mov
push
jg
sbb
and
mov
clc
dec
fsts
xchg
addl
sub
fisttps
lock
in
sbb
fadd
add
sbb
push
push
push
mov
js
dec
fld
mov
mov
scas
sub
xor
in
jmp
jo
xor
fcoms
clc
jle
cs
add
cmp
ds
cli
incl
or
or
jp
add
push
adc
cmp
sti
mov
ret
jne
outsl
and
sbb
mov
fists
lock
daa
jne
mov
mov
pop
pop
pop
ret
ss
sub
add
pushl
cwtl
addl
out
and
ljmp
adc
push
in
nop
outsb
jmp
and
adc
and
xor
fwait
push
adc
fldenv
push
aam
nop
push
xor
stc
in
fisttps
adcb
pushl
push
repnz
pop
sarb
rclb
test
sbb
push
and
pop
std
call
mov
adc
sahf
or
jecxz
sbb
xchg
std
jp
shlb
es
lcall
inc
or
test
add
xchg
fldcw
dec
jg
jmp
pop
and
mov
pushf
shlb
or
dec
inc
sbb
cmp
sub
sub
xchg
ljmp
in
loopne
stos
push
inc
mov
push
jg
and
mov
cmpb
incl
mov
dec
push
das
adc
lret
movsl
sub
ljmp
decb
xor
hlt
add
pop
data16
arpl
dec
incl
sar
mov
lock
and
sti
incl
inc
and
push
mov
push
js
xchg
mov
dec
loop
pop
sbb
cld
and
dec
or
lock
pusha
mov
lods
cmc
push
push
push
test
fwait
pop
call
clc
lods
inc
cli
jl
fisubs
loopne
mov
cwtl
sub
dec
inc
lret
mov
fcoml
lcall
add
das
push
out
or
jle
aad
ljmp
sbb
test
pop
inc
cltd
adc
lcall
addb
adc
xor
and
cmp
add
aad
adc
cmp
adc
add
mov
jg
mov
sti
xor
push
pop
rcrb
imul
ljmp
jne
adc
xchg
xor
or
fwait
and
fwait
push
pop
dec
lret
jg
mov
test
std
push
sbb
les
pusha
mov
cli
cmpsb
push
sub
adc
ljmp
decb
xor
call
mov
cmp
std
aad
subb
popa
xor
addb
pop
dec
sbb
xchg
pop
pop
dec
scas
dec
xor
fbstp
inc
push
scas
int
sub
cmc
add
testb
inc
icebp
decl
sub
jbe
jbe
in
or
add
ljmp
inc
jmp
adc
popf
mov
fildll
add
jne
sub
bound
cli
jmp
sub
sbb
push
jp
incl
js
xor
hlt
lds
pop
rcrb
push
iret
jmp
push
add
pop
adc
push
jmp
sbb
popf
repnz
jl
push
or
fildll
xor
out
rolb
enter
cmpsl
sbb
mov
mov
adc
mov
in
popa
mov
insb
mov
mov
add
jg
icebp
fwait
aaa
push
adc
ljmp
cmp
cmp
clc
lcall
insb
mov
les
cs
xchg
jp
sub
mov
cmc
ljmp
sbb
js
lcall
xchg
or
rclb
sbb
push
clc
mov
mov
mov
bound
jmp
adc
fcmovb
mov
xchg
movsb
das
test
fisubl
jns
test
pop
lock
movsl
insb
loopne
sti
aas
xor
sub
xor
push
sub
xor
mov
push
xor
cmpsl
push
ss
mov
push
das
repnz
sti
pushl
push
pop
lret
sbb
aas
in
and
inc
incl
inc
je
out
mov
stos
mov
cltd
or
lods
dec
scas
in
jmp
cltd
push
scas
jp
jg
insb
loopne
mov
std
aaa
adc
mov
mov
test
popa
and
jns
adc
test
cmp
popa
orl
or
adc
aaa
pop
cwtl
ljmp
mov
test
pop
add
sbb
icebp
roll
inc
insb
loopne
jmp
inc
xchg
adc
jae
es
push
call
and
add
cmpsb
mov
or
cmp
adc
mov
and
xchg
or
dec
fisubrl
stos
mov
sub
mov
push
add
fdecstp
add
andl
or
sbb
pop
jp
lret
sarb
adcb
roll
mov
clc
lock
dec
add
fcomps
out
ret
out
mov
add
add
and
lcall
outsb
andl
push
jge
mov
and
pop
nop
xor
mov
lock
movsb
movswl
push
mov
mov
sub
add
and
loope
pop
mov
aad
ljmp
sbb
mov
and
push
push
test
andb
fbld
push
push
add
push
enter
lea
xchg
jge
and
rclb
add
mov
pushl
or
cli
adc
mov
pushf
inc
or
dec
adc
fadds
jbe,pn
call
sub
mov
mov
or
test
push
cmp
insl
imul
out
xor
cmpsl
lcall
js
out
inc
cmp
mov
mov
popa
add
xchg
call
add
sbb
mov
inc
adc
mov
insb
loopne
ljmp
or
das
je
into
call
fsubp
sbbl
and
into
or
insl
jmp
ljmp
inc
es
cmp
add
cmp
das
add
mov
pop
inc
xlat
jae
dec
inc
lea
and
pop
mov
inc
outsb
fidivs
or
mov
cld
push
in
gs
in
push
mov
lcall
sub
push
cmp
adc
push
cmpl
incl
push
pop
add
mov
push
bound
jmp
decl
or
je
test
cmp
pushf
mov
pusha
mull
movsb
inc
sbb
or
decl
adc
fucom
pushf
inc
fucomip
std
inc
call
jecxz
mov
sub
jle
mov
push
leave
popa
add
pop
xchg
scas
loopne
mov
pop
imul
mov
mov
std
xor
push
push
add
lahf
mov
mov
fsubs
xor
jmp
js
add
notb
mov
xchg
and
inc
mov
decl
mov
xchg
inc
or
ss
add
movsb
push
lea
insb
or
inc
icebp
lcall
call
cmpb
adc
mov
rcrl
push
push
push
adc
mov
mov
xadd
jp
lcall
test
mov
sarl
pop
mov
xchg
loopne
push
mov
xchg
inc
jl
lcall
jmp
push
xor
adc
mov
jae
leave
add
pusha
test
ljmp
ret
jne
inc
xchg
mov
jo
adc
adc
daa
fildll
adc
loope
dec
add
pop
popa
jnp
or
imul
outsl
loopne
pop
sti
sbb
dec
dec
mov
incl
je
jnp
mov
mov
cmp
inc
ja
mov
push
ds
inc
ljmp
jl
add
sarb
or
sbb
cmp
inc
loopne
lcall
inc
jns
cmp
inc
sbb
scas
cmpsb
xchg
inc
daa
ret
mov
mov
movsl
push
stc
pop
sarb
lea
dec
jle
dec
cmp
fdivr
push
into
sbb
call
adc
adc
scas
jle
ud0
ja
xchg
pusha
and
test
jg
cwtl
pop
test
aam
lods
psubusw
mov
dec
pushl
subb
fcomps
jae
mov
inc
orb
insb
xchg
es
insl
ret
hlt
lcall
xor
jg
jb
inc
mov
mov
sub
imul
mov
pushf
xchg
js
imul
and
inc
jecxz
cmc
call
pop
or
and
cs
ret
decl
scas
push
or
dec
into
sbb
outsl
sbb
sarl
jae
xlat
scas
add
pop
sbbl
cmp
lcall
pop
les
and
out
in
mov
add
cmp
sbb
push
mov
movsl
out
sub
mov
jmp
or
adc
jno
shll
jg
push
mov
roll
push
jl
pushl
js
cmp
rclb
and
mov
in
cmp
xorb
cmp
or
xor
mov
add
xor
pop
xor
push
jge
inc
adcl
mov
push
add
pushf
cld
call
fimuls
xor
loopne
and
push
jb
or
nop
add
cmpsl
mov
gs
cmp
fimull
call
cld
jmp
scas
shlb
rclb
inc
inc
lods
cs
test
add
test
inc
ds
add
or
icebp
test
push
es
cs
jnp
mov
sbbb
ljmp
ret
daa
in
popa
subl
jne
add
enter
jno
decl
nop
addl
nop
mov
sahf
push
mov
push
push
hlt
clc
cld
push
adc
or
insl
test
outsl
clc
inc
sbb
sub
cmpsb
sbb
shrb
jae
mov
adc
inc
xor
out
dec
fld
pop
hlt
lea
ret
xor
nop
xchg
clc
push
and
or
adc
jo
cmp
filds
ljmp
xchg
loope
add
ret
or
ret
imul
pusha
decl
pop
add
rorb
cmc
cmp
call
or
outsb
inc
jbe
add
dec
or
mov
addr16
insb
inc
adc
and
cld
rolb
fdivp
lret
xor
and
aas
cmp
scas
add
lret
mov
out
push
out
cwtl
insb
loopne
sub
mov
jo
test
mov
call
dec
inc
push
outsb
push
mov
cmp
loopne
ljmp
mov
add
mov
scas
lods
push
rcrb
fcomip
inc
dec
dec
xchg
test
js
ret
pop
or
mov
and
or
cmp
jg
incl
jns
fldenv
daa
cmp
sti
outsl
inc
mov
cmp
aas
lds
inc
cmp
loope
adc
movzwl
lds
stos
pusha
jo
push
ret
sbb
es
lods
jge
xor
fiadds
decl
dec
pop
test
sbbb
in
xor
jle
shll
js
pop
fld
das
fs
outsl
push
pop
hlt
or
sbb
jp
mov
mov
movsb
daa
pushl
mov
fwait
push
pop
pop
pushf
push
cltd
dec
xor
daa
and
jmp
mov
mov
aad
add
mov
fwait
incb
and
loopne
faddp
cmp
fdivr
add
cmp
sub
pushl
adc
ss
push
inc
fsubr
mov
dec
lock
icebp
add
cmpsb
ss
incl
insb
dec
inc
inc
das
roll
ds
mov
xchg
and
xchg
lcall
inc
call
fstpl
lea
add
and
lcall
movsb
add
mov
sub
jl
insl
or
sbbl
mov
aaa
subb
fdivr
or
mov
add
or
add
and
mov
out
xcrypt-ofb
cmpsl
sub
cmp
xchg
jecxz
or
je
xchg
ret
outsb
daa
mov
ja
pop
aas
lcall
inc
add
fsubrs
inc
xchg
add
pop
dec
adc
pushf
adc
push
das
sbb
jmp
push
std
inc
sbb
or
lahf
jge
sbb
jl
inc
mov
sub
into
scas
shrl
decl
pop
xlat
ja
lods
movsb
mul
mov
pop
out
cli
aas
out
sub
ficompl
inc
scas
mov
jg
jmp
movsl
nop
xchg
or
js
scas
inc
pop
mov
cmpl
sbb
adc
inc
fdivl
lahf
inc
fadd
sub
aas
mov
in
pop
adc
adc
or
out
sub
inc
ficoml
iret
inc
iret
mov
orb
ret
mov
call
inc
push
sub
mov
lock
pop
add
adc
adc
xchg
adc
pushl
aam
lods
cmp
je
stos
or
testl
bnd
pushl
inc
mov
sub
jg
test
fcmovb
and
and
lods
jmp
addr16
inc
jmp
fcomip
and
mov
cs
fcomp
outsl
xchg
mov
push
push
sbb
hlt
cmp
jmp
lret
jge
sbb
aaa
xor
sub
jge
add
test
xchg
pop
mov
rep
mov
xorb
pop
cmc
xchg
cmp
hlt
in
pushf
cmp
ljmp
mov
je
cmp
jb
cmp
ja
imul
sub
inc
mov
pop
push
ret
sbb
cmp
dec
jge
ds
xchg
cmp
jg
decl
pop
cmpb
push
aaa
cmp
add
scas
xor
mov
pop
pusha
jne
imulb
sbb
lea
push
lcall
ljmp
sub
imul
jns
arpl
clc
pop
enter
ss
jge
in
js
mov
inc
leave
mov
jno
push
fdivl
fsubrs
shrl
rcrb
test
cmp
mov
mov
jg
cmp
jmp
sub
mov
sbb
push
lcall
jo
bound
cmpsb
lcall
repnz
jno
jmp
xchg
and
xor
cmp
test
or
ret
ljmp
cmp
sbb
mov
add
jecxz
es
xor
jp
mov
gs
mov
lods
xor
mov
or
dec
fadd
stc
fdivrp
or
aam
add
aas
decl
cmp
in
lea
in
mov
test
inc
mov
das
cli
sti
ja
cmp
ja
or
jp
pop
lods
es
dec
mov
push
in
cld
jg
pop
ds
mov
int
sti
jmp
push
repnz
mov
mov
or
or
xorl
call
dec
cmpb
aam
out
add
adc
lcall
popa
stos
ss
lods
and
jne
and
push
push
int
or
push
cmp
ljmp
mov
jp
push
cmp
push
mov
dec
iret
ja
ljmp
pop
daa
clc
movb
sub
inc
fisubrs
or
adc
jb
shrl
xor
call
stos
adc
shlb
cmc
test
dec
and
call
push
push
dec
into
jl
cmp
sar
inc
mov
fildl
xchg
decl
sub
and
in
in
int
mov
xchg
push
lret
or
pop
std
push
adc
rcr
outsb
inc
es
int3
inc
xchg
mov
call
add
aaa
mov
push
lret
jmp
movsl
xor
xor
jnp
sbb
sub
inc
pop
idivb
in
into
hlt
dec
cld
pop
lock
push
push
and
jmp
lcall
jecxz
outsl
pop
fcmovb
dec
cmp
or
aas
decl
jo
adc
sub
insl
rcll
xchg
mov
dec
clc
sbb
lock
mov
jg
dec
lock
sahf
jmp
add
leave
stos
sub
int
add
inc
enter
stc
and
aam
jmp
sub
push
sub
ljmp
dec
adc
and
xor
cwtl
push
or
int
pop
pop
add
mov
add
into
push
jb
pop
aaa
dec
sar
or
mov
cmp
shlb
inc
add
and
xor
sbb
je
pop
pop
orb
in
jg
sbb
cmp
or
push
inc
negb
adc
cmpsb
imull
das
cld
lock
movsl
xchg
push
mov
cmp
or
xchg
lock
incl
push
data16
ljmp
sbb
aam
iret
insl
mov
cmp
jg
or
cmpsl
jns
adc
lahf
xor
push
stos
in
test
mov
mov
in
ljmp
jae
movsl
lea
xchg
cmpsb
xorb
fisttpl
jge
nop
fmul
lods
je
sub
insb
xor
xchg
xor
pushf
rorb
push
data16
sub
mov
rorl
es
movsl
push
inc
inc
or
call
call
jg
jnp
mov
push
mov
push
adc
sahf
out
outsb
pop
int
insb
sbb
inc
or
push
dec
cmp
orb
test
cld
lcall
out
jne
sub
xchg
mov
loop
loop
cmp
aas
enter
cmp
ret
or
loope
clc
decl
das
xor
loope
sub
insb
push
cmpsl
in
jp
jmp
pop
dec
ret
pushf
out
fmulp
pop
pop
sub
mov
or
jl
add
jnp
fwait
jmp
in
ret
pop
mov
dec
mov
adc
fstps
inc
cwtl
loopne
lcall
lock
xchg
mov
pop
xor
mov
dec
jmp
out
orl
jmp
xchg
or
loopne
or
xchg
fmul
out
loopne
nop
cs
pop
xlat
inc
push
addr16
xlat
xchg
sub
and
incl
rcrl
or
cs
leave
mov
lock
push
stos
mov
mov
nop
adc
and
inc
pop
cltd
sarl
and
push
test
rclb
aaa
imul
add
insl
sar
mov
push
lahf
fwait
mov
loope
cs
pop
and
jns
mov
push
ret
incl
cld
push
cld
xchg
cs
cmc
mov
sub
lock
jg
dec
fidivrs
scas
nop
ficoms
dec
fstl
lret
add
fst
adc
loopne
test
push
call
pop
iret
mov
ret
adc
in
test
add
nop
or
ljmp
repnz
jg
adc
push
pop
pushf
mov
inc
dec
loopne
mov
pop
dec
or
lock
scas
testl
sub
pushl
cmp
call
pop
sub
mov
ss
shrl
or
jnp
jge
fsubs
pop
add
dec
adc
mov
add
movsb
sarl
lcall
mov
cmp
imul
mov
jl
mov
and
mov
cmpsb
pop
cli
mov
pop
fwait
scas
jmp
minss
loopne
mov
arpl
pop
addb
xor
add
push
or
insb
daa
mov
adc
push
pop
add
add
or
cltd
jge
sub
or
lcall
jg
sbb
aas
lea
mov
sahf
in
mov
xor
ret
push
xlat
sbb
sti
add
std
out
clc
gs
jle
lret
popf
pop
and
pop
mov
lock
ficompl
or
rcl
cld
or
repz
rcr
sbb
lock
loopne
inc
jecxz
ljmp
mov
mov
insl
bound
sub
stos
ret
std
add
dec
aam
jnp
push
and
inc
mov
xchg
pop
mov
mov
stos
neg
sbb
insb
loopne
dec
jg
jge
decl
mov
inc
push
push
mov
shr
std
das
clc
push
mov
cmp
mov
ds
sbb
mov
mov
push
aaa
insb
loopne
pop
mov
das
clc
pop
pushl
insb
mov
insl
add
fadd
fdivp
push
mov
add
add
jmp
xor
adc
aaa
jge
mov
lods
popa
add
test
inc
dec
jne
jmp
cld
lcall
cli
cmp
push
fsubr
stos
xor
adc
hlt
sub
jecxz
imul
lret
mov
ret
outsl
pop
push
lods
popa
add
lcall
sbb
fwait
add
decl
cmp
js
jb
pushf
fwait
js
les
fdivrp
ljmp
add
or
fstps
ja
imul
movsl
loope
in
dec
mov
pop
or
mov
and
repz
sub
sub
and
adc
ljmp
mov
stc
jbe
sub
sub
xlat
mov
es
jg
outsl
adc
jns
into
orl
sub
in
push
mov
mov
lcall
popf
and
fcmovb
in
movsl
inc
add
mov
loop
ljmp
outsb
bnd
incl
cli
ret
cltd
mov
repz
adc
add
adc
cmpsb
in
inc
fcmovnb
fstpt
incl
xchg
xor
push
fsubrl
push
push
pop
cmp
imull
out
sub
or
in
pop
or
or
nop
pop
ljmp
mov
or
xor
and
push
fsubl
push
mov
adc
or
incl
js
add
out
test
out
mov
cs
mov
insb
loopne
cmp
and
andl
inc
stos
xor
cmp
cmpl
push
xor
inc
inc
push
enter
ljmp
add
cmpsb
je
imul
adc
out
fabs
push
sub
push
shrl
and
ja
push
inc
rcr
scas
jo
lock
lcall
mov
lcall
arpl
fistps
inc
sub
xor
js
sbbb
jl
ds
jg
fdivrs
sbb
pushf
or
rorl
imul
and
jnp
push
cmp
and
xor
lock
pusha
xor
jg
inc
adc
cmp
inc
mov
stos
loopne
je
notb
cmp
ljmp
push
mov
ret
cld
out
lcall
ret
insb
adc
scas
mov
cmp
movb
inc
xchg
icebp
sub
and
xor
loopne
loope
adc
jg
push
add
sub
lret
loopne
test
rolb
pop
lds
ljmp
cli
mov
cmp
sbb
jmp
in
fidivl
fwait
pop
imul
push
sub
push
jle
shlb
out
cli
pop
ret
push
pop
fldt
fnstcw
fadd
into
pop
and
inc
ljmp
pusha
push
mov
enter
aas
divl
mov
jmp
mov
fwait
push
or
bound
or
pop
jecxz
or
or
popa
add
jg
lock
std
pop
and
sub
fadds
call
sar
imul
jnp
mov
pop
ret
push
push
ret
push
push
sarb
add
jg
lock
lcall
xor
mov
sahf
add
frstor
add
push
aaa
adc
popa
add
test
mov
mov
inc
negl
inc
test
insl
and
push
int
cmp
jg
add
test
cmp
in
cmpsb
fiaddl
add
ljmp
jo
jg
es
mov
push
and
cmp
fmulp
je
nop
jb
add
add
sbb
inc
push
sbb
add
call
push
enter
lret
sub
test
movl
and
andb
and
nop
mov
dec
or
ljmp
or
inc
mov
lods
shll
push
adc
mov
fsubs
decl
xor
outsb
jbe
sub
xchg
adc
out
ret
jge
fdivs
and
in
push
loope
sbb
inc
mov
ret
mov
sbb
inc
mov
and
test
xchg
add
pop
xchg
mov
fisubl
std
add
xor
lcall
nop
icebp
pop
lods
pop
scas
adc
mov
daa
divl
adc
push
in
adc
add
addr16
movsb
incl
cwtl
xchg
jae
sbb
stc
push
stc
inc
cli
sub
jb
jbe
cmp
sub
lock
je
inc
lcall
or
sub
or
mov
push
or
fsubr
jecxz
mov
inc
mov
lcall
sub
inc
idiv
pushl
push
mov
iret
lea
loop
out
loop
sahf
or
jmp
mov
test
dec
out
jg
bound
mov
popl
mov
jg
push
cwtl
repnz
adc
mov
push
cmp
xchg
int
shll
and
loop
dec
fwait
call
enter
ret
insb
mov
jo
adc
js
test
adc
mulb
adc
sub
inc
inc
mov
add
insb
sub
sbb
xorb
incl
repz
add
jg
shrb
mov
adc
lock
mov
and
lcall
or
jb
sti
insb
je
jnp
sbb
ja
adc
push
loopne
sti
outsl
dec
popf
mov
subl
sbb
rclb
repnz
xor
neg
add
lcall
dec
fcoms
insl
insb
ds
add
or
incl
ret
push
inc
std
std
xchg
xor
pop
rcll
in
pop
xchg
ja
popl
and
out
clc
mov
add
imul
cld
xchg
mov
xchg
mov
movsb
lea
or
insb
push
clc
jle
mov
hlt
or
lods
push
push
std
ljmp
inc
push
cmpsb
pop
inc
push
dec
data16
or
pop
loopne
ret
add
lock
lcall
jge
shl
decb
pop
push
xchg
lods
mov
mov
insl
data16
imul
fcoms
mov
inc
push
mov
sbb
data16
inc
sarb
decl
push
shll
ret
clc
xor
cmp
loop
out
sahf
dec
insb
dec
cmp
jb
adc
int
adc
shlb
sbb
fwait
mov
mov
hlt
or
inc
outsb
jmp
jg
fldcw
sbb
pop
sbb
dec
int
mov
cld
mov
cmp
inc
xlat
push
jecxz
push
push
dec
icebp
out
int3
and
sub
push
add
mov
push
sub
push
push
cmp
jbe
faddl
jo
fstpl
lret
pushl
rclb
add
ljmp
sub
shrl
incb
sar
cmpsb
push
jg
ret
and
std
enter
lret
stos
repnz
aaa
pop
jg
add
sub
jmp
xchg
inc
and
pop
sbb
leave
adc
out
popa
xor
add
mov
fcomip
ljmp
xor
or
add
mov
scas
mov
loopne
popf
mov
ffreep
and
sbb
pop
adc
jo
pop
jo
dec
mov
scas
bound
clc
pop
stos
shll
lcall
stc
add
test
rorl
in
xor
pushl
rolb
or
mov
pop
ret
push
cld
cmpsl
jns
mov
flds
pushl
loop
push
lahf
lret
in
jl
hlt
idiv
jecxz
loope
loop,pn
in
xlat
adc
out
popf
lea
enter
fisubl
ljmp
repnz
push
mov
mov
and
pop
loopne
faddp
xor
repnz
mov
xchg
orb
mov
mov
sub
shll
pop
sbb
sub
icebp
xor
mov
xchg
add
nop
mov
decl
es
ficoms
lods
or
dec
insb
lcall
cmp
dec
cld
jle
jno
cmp
xchg
inc
xor
push
jecxz
or
mov
sbb
jg
or
cwtl
inc
xorb
in
add
jle
ljmp
je
lock
in
jp
or
sbb
jmp
out
bound
das
ljmp
push
inc
call
in
add
pop
insb
jmp
sbb
mov
jg
mov
lret
sub
sbb
icebp
jmp
pop
add
jne
add
mov
jne
shll
decl
add
jmp
sub
stos
ss
pusha
daa
jns
std
decl
ss
daa
das
aas
sbb
bound
pop
push
aam
adc
mov
cmpsb
or
repz
add
xor
clc
ljmp
jb
and
incl
es
sub
out
push
test
repz
xchg
stos
or
stos
push
fxsave
mov
stos
dec
popa
ret
fcmove
imul
ljmp
call
mov
scas
cli
mov
mov
ss
call
inc
jmp
fadd
fiadds
cmp
add
add
and
testl
or
or
or
incl
jl
add
pop
add
mov
mov
or
ret
or
in
add
add
cmp
in
dec
jbe
insb
sahf
int
out
or
mov
dec
repz
test
stc
repnz
jle
cld
mov
call
pop
adc
je
pop
nop
and
pextrw
call
loop
mov
mov
in
pop
sub
mov
adc
popf
je
mov
dec
push
lea
in
test
push
add
js
ljmp
sahf
jo
in
addl
push
pop
shrb
in
cld
repz
decl
push
mov
mov
pop
cld
sub
add
jg
aad
orl
cltd
cltd
pushl
test
mov
and
mov
push
ret
xor
insb
and
sahf
fimuls
jg
in
xor
mov
lcall
cmp
nop
jle
rolb
mov
mov
incl
dec
jg
outsb
aas
mov
incl
ss
or
je
cmc
imul
sub
xchg
jne
jp
pop
fnsave
ret
mov
sub
decb
incb
sbb
mov
dec
cld
je
sbb
add
fdivrp
das
pop
icebp
xor
sbbb
repz
pop
outsb
inc
clc
lods
movsb
dec
scas
ljmp
lock
scas
jg
mov
or
add
add
and
or
stc
fmull
popa
and
add
hlt
pop
loope
sbb
jl
inc
enter
mov
jg
add
in
repnz
lock
popa
xchg
divl
cmp
jg
scas
mov
mov
cmp
subl
loope
inc
hlt
fisttpl
loopne
imul
shrl
xchg
xor
jae
iret
enter
std
call
js
enter
push
jl
shlb
push
xor
cltd
mov
shrd
add
lret
pusha
pop
dec
stos
mov
mov
loope
in
enter
out
mov
arpl
loopne
jmp
mov
negl
pop
fs
iret
inc
mov
ljmp
fcompl
or
mov
mov
jg
sbb
cmp
adc
adc
cld
call
jmp
faddl
xor
jl
adc
cmpsb
cmpl
jne
push
stos
adc
pop
loopne
ret
outsb
fsubrs
cmc
pop
sbb
adc
call
or
dec
bound
clc
rorl
sarl
inc
or
mov
icebp
lods
mov
das
add
jne
lcall
dec
and
add
les
cmp
xor
sub
inc
sub
mov
jmp
pop
mov
sbb
test
fld1
lea
jmp
mov
inc
xchg
mov
pop
xorb
xor
aaa
cld
decl
and
push
push
and
and
aam
mov
jg
fimuls
decl
mov
xchg
jle
je
xor
nop
cmp
ds
js
mov
or
jg
decl
sbb
and
sub
clc
ljmp
cld
jns
loop
aas
sbb
pop
sbb
xlat
cld
mov
mov
push
dec
mov
xchg
mov
jg
aas
dec
and
xor
dec
in
daa
cld
loope
daa
xor
notb
inc
mov
lock
test
repz
dec
mov
sub
iret
inc
dec
ljmp
popa
dec
hlt
push
push
call
insl
xchg
sahf
xor
jae
adc
aam
mov
sub
sbb
loopne
pop
add
lods
out
negb
mov
out
xchg
xorl
mov
pop
pop
testl
mov
adc
cmpsb
add
mov
scas
lcall
adc
dec
push
push
xor
push
xor
mov
xchg
sbb
rol
pushl
and
std
sbb
lret
xor
call
mov
add
and
sbb
sbb
xor
inc
pop
or
jle
dec
inc
clc
push
loop
xor
pop
lahf
jmp
xchg
adc
cmp
jmp
push
jl
mov
push
mov
shlb
aam
subb
add
mov
cld
fwait
popf
ficomps
lods
adc
add
outsl
loopne
mov
lcall
cmpsb
add
adc
push
call
sub
or
dec
mov
jg
inc
sub
cwtl
cli
cvtps2pd
pop
test
fisttps
xchg
arpl
hlt
pusha
jne
fwait
dec
add
jno
decb
sbbb
cltd
push
in
mov
and
xor
rol
xor
add
clc
jl
out
add
or
mov
decl
adc
mov
in
add
pop
mov
lock
lea
mov
push
lods
adc
loope
out
add
pop
loopne
push
faddp
sbb
push
shr
pusha
test
mov
ljmp
clc
dec
mov
adc
jbe
jmp
shl
call
mov
sti
decl
xchg
pop
fcompl
stos
xchg
sar
lods
mov
sbb
jmp
dec
jle
mov
aad
mov
push
or
addr16
shll
addr16
cld
pushl
dec
bound
fs
sahf
loop
xor
add
call
pop
xor
pushl
or
pusha
cmp
loope
xor
call
es
loopne
lahf
xlat
xor
in
out
ljmp
xor
loopne
mov
add
call
pushf
mov
stc
add
outsb
mov
mov
mov
mov
and
sub
xor
jmp
div
sbb
add
mov
add
jl
xor
pop
and
mov
ljmp
mov
pop
or
out
ja
popa
xor
xor
adc
or
addl
jmp
popf
lcall
and
stos
dec
jmp
aaa
clc
subb
jmp
mov
rcl
ds
and
jmp
fdivrs
xchg
adc
sub
icebp
cmp
cld
lcall
fsubrs
enter
pop
fidivl
aam
aam
pop
cli
movsb
js
jg
xor
mov
out
in
in
xchg
test
out
or
cwtl
xchg
or
rcrb
push
outsl
or
filds
clc
jg
out
mov
sbb
aad
add
add
add
and
jg
out
push
xchg
jbe
incl
dec
jb
mov
push
js
add
and
dec
xchg
pop
lds
adc
mov
fisttpll
sysenter
push
cmp
cltd
or
lcall
cmp
cmp
jbe
or
testb
leave
and
xlat
add
jmp
lock
push
cmpsb
inc
adc
cmp
sbb
je
ja
jne
adc
add
sbb
cmp
lock
loope
or
iret
adc
or
mov
aam
sahf
or
incl
jb
imul
daa
push
push
adc
popa
addr16
sbb
stc
clc
xchg
lret
cmp
jae
int3
inc
stc
mov
lcall
xchg
mov
test
jp
pushf
ret
mov
jecxz
test
bound
xchg
shll
rcrb
inc
xor
adc
or
pushl
adc
call
scas
add
adc
add
pop
or
push
adcl
sar
aas
add
mov
cs
sbb
ljmp
into
sbb
insl
inc
or
outsb
xchg
pusha
and
divb
adc
and
jno
sbb
sbb
xlat
push
push
push
fprem
push
hlt
push
stc
or
lahf
shll
xor
mov
loopne
mov
push
inc
and
or
push
lret
xchg
push
push
lcall
cwtl
add
mov
inc
pop
or
pop
pop
notl
xchg
les
xor
fistpll
movsb
call
add
subl
ljmp
pusha
comiss
push
adc
cli
ljmp
lods
or
rcr
scas
mov
mov
jo
clc
pushf
loop
dec
push
das
sar
add
or
rorl
pushf
test
pushl
mov
dec
inc
inc
dec
lret
in
pop
lret
in
clc
insb
popl
in
xor
stc
nop
loopne
xchg
mov
xor
fsubrs
popa
cmp
jmp
imul
pop
add
int
xchg
push
in
sub
es
mov
shlb
in
dec
call
cmp
in
iret
mov
clc
ljmp
or
add
inc
movsl
out
jecxz
cld
ljmp
testb
test
or
je
xchg
cmp
pop
jne
shlb
incl
xchg
loope
setne
test
out
mov
jno
sbb
xchg
sub
fisttpll
insl
inc
incl
hlt
pop
popf
mov
push
xor
inc
mov
clc
mov
decl
push
aas
out
bound
fwait
aas
push
pop
outsb
loopne
cmpsl
mov
adc
add
ja
inc
ficompl
std
orl
lcall
ret
mov
js
jo
daa
pop
xor
mov
pop
dec
stos
push
mov
cs
pop
icebp
incl
add
fs
popa
dec
pop
addr16
shll
push
jmp
faddp
jnp
cltd
in
add
xchg
hlt
pop
or
and
decl
mov
fwait
or
repz
push
inc
clc
jmp
faddl
sub
or
inc
jmp
sbb
and
cmp
xchg
adc
pop
test
les
faddl
sbb
sbb
jp
push
inc
loope
std
fisttps
aaa
sbb
test
push
sbb
mov
rcr
daa
add
decl
and
test
loopne
mov
inc
jmp
nop
dec
xchg
mov
sub
mov
mov
xor
pusha
in
xchg
cmp
cmp
std
decl
test
push
inc
je
sbb
mov
xchg
cld
jg
or
push
sub
repnz
loopne
xchg
popf
add
or
ja
sbb
scas
pop
sub
push
gs
aas
test
in
es
jecxz
push
mov
sub
inc
negb
sub
call
xor
lods
fcmovne
test
cmp
cmpl
mov
dec
in
sub
or
inc
pusha
ljmp
clc
dec
jnp
aaa
movsl
xor
lea
loopne
bound
popf
gs
mov
lcall
stos
inc
in
add
xor
inc
adc
out
sub
xchg
jnp
adcl
or
or
xor
and
fcomip
incl
fadds
into
or
fisubs
pushf
and
ss
pop
call
add
shl
add
xchg
pop
jle
insb
and
and
cld
or
test
jmp
pop
ficoml
mov
lret
add
mov
js
nop
mov
decb
pusha
or
ljmp
or
lea
aam
or
mov
mov
sub
cs
or
push
out
cltd
decl
or
sbb
sti
mov
jp
pop
push
sbbb
out
push
test
and
fcompl
push
pop
jns
lods
xchg
dec
mov
mov
mov
nop
push
push
jnp
iret
data16
xchg
add
sub
pop
incl
imul
adc
test
enter
cld
stc
or
jnp
sar
pushf
xor
xchg
aaa
add
icebp
push
or
push
mov
mov
movb
jmp
sahf
data16
sbb
push
je
dec
adc
fisubs
ror
js
fldl
or
fisttpl
es
dec
pop
orl
xchg
insb
jl
ljmp
pop
std
decl
sti
aam
andl
andb
bound
ja
xchg
pop
add
add
ss
test
inc
sub
adc
inc
mov
jg
mov
adc
xlat
in
sbb
fbstp
je
dec
add
inc
pop
ss
jbe
add
inc
sti
mov
xchg
push
push
adcl
pop
inc
pop
mov
cmpsb
xchg
fistps
cltd
cs
cmpsb
jle
adc
test
adc
ret
mov
fdivs
add
xchg
or
sub
xchg
mov
push
inc
int
aam
cmpb
lcall
aaa
jno
jne
sti
or
dec
negb
xchg
add
pop
push
adc
xchg
lcall
pushl
mov
or
std
mov
xor
pop
or
adc
loopne
rol
cmpsb
jg
iret
adcb
sbb
loope
xor
jbe
call
stos
sub
or
je
sub
mov
add
sbb
inc
shlb
or
mov
sbb
mov
ja
or
dec
sti
push
ret
push
clc
cmp
decl
pusha
pop
jp
int3
push
or
movsl
adcl
bound
mov
inc
add
push
adc
xchg
mov
sub
mov
xor
lds
mov
lock
jg
rcl
outsb
jmp
adc
mov
ret
daa
mov
mov
incl
loop
mov
add
aam
lds
xor
lahf
pop
xor
mov
cld
les
mov
stos
decb
jge
clc
add
pop
jl
add
lods
dec
loopne
cwtl
jl
mov
and
cmp
clc
xchg
mov
jne
jmp
insl
add
mov
xor
fldl
push
pop
push
enter
insb
addb
inc
cltd
sbb
sbb
call
pop
cs
push
push
mov
sub
sub
jmp
nop
lock
cmp
and
lret
add
push
ljmp
or
push
push
mov
mov
and
mov
sar
cli
cmp
mov
ds
cs
out
or
popa
xor
adc
lret
sub
jge
pop
cld
adcl
pop
cmp
inc
inc
jae
out
push
test
out
add
push
adc
mov
jmp
popa
xor
jb
xchg
mov
fs
mov
and
mov
sub
pop
adc
lock
fsubrs
and
mov
rclb
push
enter
pop
mov
dec
xchg
and
call
mov
rcll
xchg
decl
js
test
mov
out
jb
mov
leave
leave
xchg
mov
lcall
mov
adc
pop
add
cmp
or
jmp
push
pop
adc
lock
or
dec
and
std
sub
mov
js
ljmp
cmp
in
jae
fstpt
cmp
mov
mov
xor
jmp
in
xor
lock
nop
lock
xor
fwait
nop
in
mov
js
inc
sbb
aaa
popl
or
adc
or
or
adc
mov
orb
add
rorb
jo
sbb
xchg
pushf
es
pop
ds
pushf
mov
and
cmp
inc
push
les
rorl
adc
inc
or
ljmp
out
lret
repnz
cli
decl
mov
jle
adc
xchg
add
mov
cmp
incl
dec
xchg
pop
stc
sbb
adc
ficomps
ret
repnz
push
adc
or
subb
stc
inc
mov
sub
fstpt
fs
cwtl
mov
adc
ds
xlat
mov
sbb
test
stos
arpl
jge
jne
sub
xor
jo
leave
rclb
push
jl
push
mov
sar
sbb
jp
loope
aas
loopne
sub
push
pop
cmp
sub
mov
inc
lret
mov
or
incl
les
imul
lcall
mov
mov
dec
jmp
adc
jmp
push
sub
dec
pop
rcrl
pop
insb
add
mov
mov
push
and
das
mov
dec
mov
or
inc
nop
rol
mov
outsb
mov
clc
add
sbb
xchg
outsb
lea
mov
mov
lcall
pop
jns
fucomp
add
lea
fcoms
mov
sbb
mov
insl
lcall
or
fmulp
mov
sub
add
jo
xor
leave
or
lcall
notb
jge
pushf
sbb
cmp
mov
push
sub
add
fisubs
mov
dec
adc
and
call
jne
scas
pop
sub
add
inc
cwtl
lods
packsswb
jecxz
mov
pop
pushl
std
lcall
nop
out
adc
gs
sbb
lret
dec
dec
scas
cli
jmp
xor
adc
xchg
daa
mov
jl
shl
sub
jns
out
sub
adc
or
xor
incl
call
and
pop
test
sub
xchg
add
shrl
or
mov
neg
out
jae
fidivrs
add
outsl
ret
enter
test
call
imul
incl
cs
int3
pop
adc
cmpsl
push
bound
sub
test
jge
jae
jb
lods
sbb
xchg
and
call
adc
pop
clc
imul
push
dec
and
loopne
xor
sub
mov
pop
nop
movsb
cmp
je
leave
inc
lcall
js
pop
push
sub
sbb
fdivl
mov
pop
cmpb
loopne
xor
incl
adc
cmp
out
dec
jmp
dec
test
iret
stos
in
in
jl
xor
shlb
les
lds
mov
push
and
mov
mov
dec
test
shlb
mov
ret
mov
sub
push
mov
cmp
mov
dec
dec
inc
add
setge
dec
add
or
mov
pushl
pop
xlat
je
cli
bound
pop
pop
push
mov
ljmp
xchg
repnz
fisttpl
xchg
test
ret
cmpsb
sub
ljmp
nop
push
stos
sbb
sub
outsb
stos
scas
sub
jne
int3
hlt
decl
or
sbb
pop
xchg
add
push
xchg
leave
roll
sbb
push
lcall
loopne
add
lcall
mov
xor
sub
jae
aam
or
or
cld
rolb
inc
dec
pop
sarl
jge
mov
sbb
incl
push
mov
test
fs
aas
inc
dec
es
add
adc
add
inc
mov
sti
ss
adc
nop
hlt
mov
inc
sbb
cmp
icebp
mov
or
cmpsb
sbb
cmp
sbb
xor
pop
add
mov
js
mov
pop
insl
sbb
nop
pop
mov
jl
push
decl
ret
add
cmp
sbb
nop
hlt
jle
sahf
sbb
jge
sbb
jg
push
xor
sbb
xchg
inc
or
jg
or
out
cmp
sbb
inc
push
pusha
mov
push
ret
jge
mov
call
arpl
loope
in
cwtl
jno
rcrb
inc
mov
pop
std
sbb
stos
ret
das
sbb
out
mov
fisubl
shl
ja
js
bound
int3
mov
dec
pop
rolb
ret
mov
xor
xor
pushf
or
enter
mov
xor
aaa
repnz
mov
push
popa
fs
sbb
xlat
test
decl
mov
sub
dec
loopne
push
cmpsl
pop
pop
or
daa
pop
cmp
inc
adc
and
ljmp
rclb
mov
inc
test
cld
sbb
and
inc
mov
and
adc
into
fwait
hlt
lcall
sub
jb
add
jb
ret
sub
loop
fwait
xor
shrd
call
inc
scas
sub
xchg
leave
aaa
mov
pop
push
add
mov
aam
sar
adc
ljmp
inc
jo
and
pop
in
lock
or
and
lcall
inc
inc
movsl
cmpsb
les
pop
aas
es
xor
test
decl
mov
fists
imull
jno
pusha
lret
pop
cwtl
les
sub
ljmp
in
inc
pop
pop
enter
add
pop
cmpsl
mov
pop
test
push
lret
lods
neg
insl
cld
push
mov
lock
jge
stos
xor
in
xor
sar
push
sub
bound
aaa
mov
outsl
or
dec
ffreep
mov
push
stos
inc
imul
loop
fisubrs
int3
js
jg
pushl
decb
out
or
or
pop
jne
les
push
dec
in
or
movl
push
push
or
xchg
pushl
stos
inc
ja
cwtl
test
xchg
jg
xor
mov
dec
lods
mov
mov
call
mov
incl
mov
iret
lret
popl
lcall
cs
mov
les
es
and
push
jle
xor
arpl
pop
add
clc
xchg
fisubs
outsb
shll
jp
loopne
fcomip
mov
push
je
sub
sarl
sbb
movsb
jle
ljmp
lock
mov
jl
lock
pop
in
jbe
sbb
lods
cwtl
inc
mov
adc
add
out
mov
mov
dec
sbb
das
pop
lcall
dec
sbb
sub
push
fs
dec
fisubl
in
in
and
bound
clc
ljmp
sbb
dec
fcoml
lret
out
loopne
add
loopne
dec
xor
jg
lcall
mov
rcll
cmp
shl
pop
jo
rcrb
daa
call
leave
je
inc
lods
mov
xor
js
loope
mov
adc
enter
inc
xchg
add
adc
mov
add
jmp
lahf
testl
jge
dec
xor
daa
and
outsl
push
movsb
ret
adc
xchg
out
nop
lret
clc
sbb
jle
jne
cld
lock
hlt
cltd
out
jl
cmpsb
mov
cmp
sbbb
test
out
pushl
es
mov
or
idivl
insl
fs
mov
fsqrt
fldt
and
aad
fsubrl
scas
add
incl
imull
push
fisubl
push
push
or
jmp
xor
sub
out
out
mov
inc
jo
cmpsl
daa
or
or
and
add
clc
inc
sahf
lock
adc
add
repnz
cli
mov
push
inc
mov
test
arpl
mov
push
adc
adc
jecxz
mov
sub
in
out
ljmp
inc
adc
popa
cmp
hlt
sub
xlat
cmc
loope
ds
jnp
add
fdivs
mov
in
jp
sub
addr16
inc
pop
movsb
mov
dec
std
addl
in
outsl
es
sub
pusha
scas
sub
shrl
jge
jns
loop
lock
pop
and
sbb
fimuls
mov
add
filds
xchg
in
outsb
in
cmpsl
cmp
movsb
in
clc
mov
test
sub
cmpsb
push
lds
repnz
int
pop
outsl
aaa
mov
jb
pop
in
mov
lret
stc
mov
add
sahf
lcall
sbb
outsl
mov
addl
outsl
inc
push
and
sbb
jae
push
adc
dec
scas
je
and
shlb
pushl
ja
xchg
xor
repnz
xchg
jbe
out
mov
xchg
pop
adc
call
loopne
call
repnz
loopne
fidivrl
mov
jb
pop
pusha
fdivr
incl
adc
pop
test
push
lahf
nop
push
fadd
xor
add
adc
pushf
sub
je
in
dec
push
pushl
dec
lock
lock
int
pusha
in
rcrb
aam
push
out
in
fwait
clc
fisttps
adc
in
inc
sbbb
pushl
or
pop
dec
fneni(8087
fnsave
sub
mov
test
roll
ret
push
loope
cmp
xor
ret
subb
adc
cmp
repz
push
mov
je
rcll
cld
pop
mov
push
jl
push
cmp
dec
sbb
add
ror
and
push
mov
pop
sbbb
fisttpl
cmpb
or
or
testl
add
movb
les
lock
pop
iret
add
cmp
outsl
ljmp
cli
jg
sahf
mov
out
movsb
adc
inc
jl
pushf
mov
jmp
dec
sub
enter
adc
aam
push
adc
jne
push
out
addb
dec
out
arpl
fmuls
jg
mov
adc
rorl
lea
mov
mov
add
call
mov
sti
cmpl
xor
loopne
sbbb
outsb
push
pop
decl
push
sarl
dec
cmp
mov
or
lea
push
inc
ret
xchg
jb
sbb
inc
add
fucomp
cmp
inc
cmp
ljmp
lret
popf
sub
dec
mov
jp
scas
in
xchg
cmp
xchg
adc
inc
in
adc
sarb
sub
dec
sbb
cmp
or
ljmp
or
sbbl
test
mov
add
mov
sub
daa
sar
decl
enter
or
ss
loope
inc
mov
insl
cs
cld
push
es
cld
adc
bound
pop
mov
add
adc
pop
lods
xchg
xchg
shlb
mov
decl
jbe
ret
adc
je
adc
adc
add
incl
jne
lret
sub
xor
sbb
pop
mov
test
lcall
inc
add
mov
call
fisttpl
clc
or
mov
jmp
rcrl
les
jnp
mov
xchg
nop
clc
xor
insb
incl
insb
or
push
dec
jecxz
fcmove
and
outsl
sub
jae
test
jl
imul
push
xchg
add
dec
ljmp
dec
dec
jmp
cmp
dec
sbb
lcall
sub
std
mov
dec
inc
mov
inc
mov
cltd
adc
mov
sahf
xchg
jl
add
fists
repz
pop
sbb
push
lds
movsl
adc
ja
cmp
sar
jmp
jle
push
xor
sub
and
out
out
lds
push
clc
or
repnz
add
mov
mov
dec
add
pop
in
push
mov
xor
cli
xchg
inc
imul
sub
mov
jo
iret
fs
call
mov
stos
movsl
inc
mov
jp
mov
daa
jp
sub
xchg
xchg
add
pop
sbb
mov
or
test
sbb
decl
xchg
fadd
or
sbb
inc
xor
pop
imul
push
mov
das
ficompl
leave
ffree
add
add
dec
loope
stos
outsb
dec
inc
fildl
sbb
jge
aas
mov
test
sub
xchg
add
out
fadd
movsl
pop
aam
int3
jmp
das
bound
adc
fisubrl
in
jl
mov
jl
pop
ret
sahf
in
jge
adc
call
push
aaa
jl
rclb
test
pop
adc
add
and
call
and
fsubrl
mov
fsubs
cmpsl
mov
inc
or
xchg
ret
lds
ljmp
scas
sbb
mov
pushf
sbb
jbe
mov
insb
xor
mov
cld
decl
mov
lcall
cmp
pop
incl
mov
rcr
sar
rorl
mov
mov
inc
jo
stc
ret
pop
pushl
int3
or
xor
pop
insl
adc
mov
loope
and
rol
incl
mov
jmp
jg
cmp
in
shl
xor
inc
jecxz
insl
fistpl
inc
push
sub
addb
adc
int
pop
xchg
and
fisttpl
cmp
pop
sahf
or
ror
cmp
or
sbb
movsb
mov
fbstp
and
dec
bound
rorl
bound
mov
xor
or
loopne
jb
pop
mov
and
insb
add
push
adc
mov
dec
ret
jnp
fstps
xor
push
jne
pusha
ss
cmp
inc
dec
fwait
mov
lcall
mov
sbb
aaa
xlat
fdiv
add
inc
dec
loopne
aaa
xor
mov
push
aad
and
adc
fcomip
dec
lock
les
ret
mov
popa
pop
add
dec
jmp
es
or
clc
shrb
mov
push
mov
sti
aaa
jge
pop
cmc
decl
fldl
adc
ja
push
mov
xor
sbb
add
decl
call
or
mov
fbstp
js
xor
test
pop
mov
je
adc
jb
and
cmp
jl
leave
and
xchg
enter
add
mov
xor
pop
incl
inc
inc
loopne
lahf
adc
mov
testb
mov
xchg
dec
test
pushl
push
xor
xchg
jne
enter
push
aam
iret
adc
dec
pop
mov
repz
rol
fiaddl
ds
mov
pop
push
dec
scas
sub
inc
jge
inc
pusha
mov
or
mov
add
pop
xchg
popw
xchg
add
dec
and
mov
jmp
jecxz
mov
mov
or
push
cwtl
out
pop
fdivr
call
dec
inc
xor
xchg
hlt
hlt
push
sub
lock
incl
filds
adc
movsb
loop
dec
pop
xor
inc
inc
rcl
sub
dec
cmp
mov
cld
adc
mov
pushf
inc
inc
pop
push
sub
add
ljmp
push
addl
add
pushf
adc
mov
cmpsl
add
adc
xchg
pop
xchg
ret
inc
cmp
movsb
sbb
daa
adc
xor
pop
cmp
or
adc
pop
add
fstpt
movsb
leave
xchg
enter
dec
lahf
cmp
dec
ds
dec
pop
push
cmp
pusha
es
jg
ljmp
movb
repnz
xchg
xchg
xchg
inc
cmp
test
sti
sar
add
pop
dec
aam
ficompl
ja
leave
and
cwtl
sbb
call
les
loope
mov
push
and
jg
push
cmp
xbegin
andl
scas
adc
inc
fisubrs
sar
decl
and
pop
pop
push
push
dec
enter
sub
or
cld
jg
lret
mov
sub
sub
pop
js
or
pushl
out
adc
inc
or
fsubr
cmp
adc
pushf
add
inc
push
ret
dec
rcl
pushl
cmp
sbb
push
jns
cmp
add
xor
imul
in
pop
cmp
or
adc
rclb
movl
mov
cmp
push
scas
inc
and
decb
push
clc
gs
add
sbb
xlat
outsl
add
sbb
ljmp
push
mov
inc
add
mov
test
push
imul
nop
andl
jns
lock
lock
push
insl
push
adc
mov
push
or
fcom
data16
in
push
lahf
gs
call
or
aas
stos
add
add
or
and
lahf
adc
ljmp
pop
sub
adc
xchg
je
sbb
mov
popa
inc
movq
call
add
aas
sbb
inc
aas
jl
xor
cld
pop
adc
movsb
pop
imul
loopne
aas
xorl
gs
js
fmull
or
mov
xor
in
dec
and
movsl
aad
adc
inc
sub
testb
shll
add
jg
push
les
or
dec
dec
or
cmp
iret
in
xchg
push
pop
pop
inc
mov
ljmp
fcoml
nop
dec
pop
scas
add
inc
or
inc
xchg
sub
pop
pushf
in
pop
or
inc
sar
loope
adc
or
add
lcall
sbb
and
test
das
pushl
inc
mov
lds
pop
js
adc
pop
pusha
lret
jl
addr16
addr16
sub
jne
imul
ret
add
xchg
fcmovb
push
inc
sub
ret
xchg
mov
push
test
xchg
out
jmp
dec
pop
inc
pop
push
xor
push
push
pop
ffreep
daa
xor
lcall
push
adc
add
sbb
ret
leave
xor
jbe,pt
aas
imul
inc
add
cmpsb
mov
mov
add
les
jne
xor
dec
roll
fcos
lcall
push
add
and
inc
inc
and
enter
fcomps
add
push
jne
push
outsb
push
fdiv
jmp
or
cmp
loop
push
pop
jle
dec
and
pusha
sar
lock
ret
pop
sbb
shlw
xchg
andl
mov
enter
mov
xchg
sub
rcrb
lret
sar
sub
sbb
pop
mov
lcall
add
push
aas
push
ljmp
adc
and
in
xchg
into
mov
ljmp
incl
mov
sbb
mov
lods
pop
cmp
pop
inc
push
sbb
leave
out
pop
sub
push
adc
ljmp
fstpl
ja
int
pop
adc
in
mov
and
sub
idiv
push
decl
mov
pop
lock
cmp
pop
mov
push
out
cwtl
das
fcomps
ror
in
cmp
enter
jg
inc
int3
outsb
pop
mov
adc
test
mov
adc
adc
std
mov
repnz
cmp
pushf
adcb
xchg
int
jo
test
push
xor
fisttps
pusha
or
sub
jo
cmpsb
pusha
push
mov
outsb
iret
dec
push
xchg
ljmp
das
inc
inc
fdivl
test
cmp
nop
xor
ja
int3
xor
test
negb
pop
xor
subl
sub
popf
xchg
and
pushl
call
push
sbb
cmpsl
sbb
or
push
adc
cmp
pop
fmull
ss
or
add
das
daa
fwait
mov
add
sub
pop
xchg
aaa
pop
lock
mov
hlt
sub
mov
in
lock
out
push
pop
call
mov
cmpsb
pop
mov
pop
fsubr
mulb
pop
aam
outsb
add
nop
out
pop
int3
inc
loopne
enter
and
insb
call
inc
mov
push
les
jecxz
nop
dec
add
jp
dec
in
mov
lcall
jp
sub
lods
sbbb
inc
sbb
loop
push
inc
cmp
inc
jnp
xor
sbb
mov
andb
loopne
sub
add
or
sub
cmp
push
jg
and
addb
or
add
popa
xchg
cmp
je
mov
mov
in
jg
and
mov
pop
push
das
cli
scas
lcall
cmpsl
pop
jnp
sub
dec
sub
hlt
cmp
enter
inc
add
call
dec
ds
cld
incl
sub
enter
dec
jg
pop
or
push
push
addr16
push
filds
in
imull
push
or
dec
sbb
pop
push
dec
or
aaa
jae
dec
pop
xor
sti
add
inc
xchg
movd
sbb
jae
cmp
jecxz
inc
jg
jmp
xor
iret
out
ret
les
push
in
in
sub
push
add
push
data16
out
lds
rcrb
dec
imul
add
or
and
jmp
sub
or
xorl
pop
or
cmp
stc
nop
add
call
dec
outsb
push
insb
adc
cmp
faddl
jp
mov
movups
xchg
jae
add
or
in
outsb
dec
or
or
in
je
mov
jmp
pop
mov
sbb
mov
shlb
xchg
sbb
icebp
outsl
xlat
dec
cli
adc
push
popa
insl
cld
jg
ljmp
sbb
pop
dec
sbb
scas
sub
adc
jbe
unpcklps
fdivr
mov
pop
jo
je
inc
push
ja
outsb
addr16
stos
shrl
inc
cmp
mov
in
icebp
nop
jbe
pushl
imul
or
jnp
mov
lahf
mov
push
jb
xchg
jbe
fisttps
hlt
lock
in
mov
bts
outsb
in
ljmp
call
imul
clc
inc
cmp
aas
clc
inc
inc
loop
je
sub
mov
jmp
mov
stos
cmp
jg
aam
aam
sbb
pop
dec
mov
pop
or
das
xor
and
pop
dec
mov
or
dec
xor
and
call
lahf
adc
adc
sbb
and
je
dec
xchg
nop
mov
scas
clc
push
xlat
cli
nop
pop
repnz
dec
mov
or
loope
nop
and
or
xchg
in
pushf
cmp
xchg
repnz
cwtl
xlat
xor
leave
add
nop
or
pop
loopne
mov
jp
mov
sub
or
mov
outsl
push
xchg
nop
decl
push
pushaw
mov
fmuls
std
rcrb
push
loopne
enter
decl
fimuls
les
add
cltd
dec
lods
aad
jnp
dec
sbb
shll
jecxz
pop
jg
lcall
mov
lock
sbb
pop
jo
jecxz
loope
pop
inc
adc
sbb
loopne
rcrl
jl
add
bswap
outsb
nop
jmp
fmul
adc
sbb
call
mov
scas
or
xor
outsl
jnp
loope
rcll
jns
clc
add
add
pusha
adc
push
mov
or
sub
xchg
aam
insb
scas
adc
dec
loopne
add
mov
and
les
pop
mov
mov
pushf
mov
sbb
nop
push
xchg
stc
repz
nop
mov
pushf
xor
mov
test
mov
lods
in
mov
pop
sub
mov
repnz
mov
test
divb
daa
mov
adc
in
push
adc
jg
cmp
dec
push
dec
xchg
push
cs
int3
pusha
rclb
inc
insb
aam
stos
pop
lock
add
jl
les
inc
or
je
sub
std
decl
or
pushf
jecxz
push
test
inc
js
dec
gs
mul
inc
fs
push
das
dec
jne
mov
int3
pop
jle
outsl
fs
outsb
xorl
xchg
das
pop
outsl
push
push
push
xchg
sar
lcall
sbb
add
pop
cmp
pop
or
fwait
jns
clc
inc
out
in
xchg
xor
inc
aas
inc
jae
pop
inc
jns
push
mov
fwait
mov
push
mov
faddl
xchg
mov
and
add
push
loopne
out
cli
cmp
call
mov
pop
mov
add
call
ss
push
add
in
mov
mov
fidivs
es
fldenv
dec
cs
ss
sbb
decl
sbb
ds
push
aas
lock
jg
jb
in
xor
xor
fld
push
jg
sahf
pusha
lcall
cmpsl
push
cmp
xchg
pop
mov
push
inc
cwtl
xor
sbb
stos
push
inc
fucom
leave
cmp
call
add
stc
sbb
mov
add
mov
ss
sub
push
xor
fisttpl
arpl
out
movsb
or
jo
lods
iret
pop
cmp
repz
inc
mov
pop
sbb
add
loope
inc
popa
fs
out
xchg
outsl
push
ret
inc
pushf
or
lcall
add
or
add
sub
pop
jg
adc
jl
popa
popa
mov
and
fs
testb
inc
lods
jg
pushl
in
negl
pop
or
and
inc
adc
dec
stos
add
leave
mov
out
jl
mov
incl
sbb
idiv
mov
add
test
jg
inc
pop
in
mov
js
sub
pusha
add
bound
pop
xchg
out
add
decb
xchg
sbb
jle
dec
outsb
insb
pop
enter
scas
hlt
fisttps
iret
enter
pop
cmp
add
sahf
aam
pop
ret
xchg
sub
js
pop
pushl
fbld
shr
in
mov
add
inc
inc
mov
decl
clc
fdivrl
mov
es
jecxz
in
cld
incl
and
mov
repnz
repz
push
jns
mov
pop
dec
pop
in
add
add
pop
nop
mov
xchg
ljmp
pop
cmp
mov
push
fsubrl
pusha
pop
xor
and
pusha
xor
aad
fldenv
ja
in
dec
jae
movsb
mov
sbb
test
es
sub
and
push
dec
in
pop
mov
sti
cmpsb
adc
sarb
pop
sbb
jmp
jmp
pop
fs
push
xor
cs
es
jbe
add
pop
or
lods
mov
ljmp
in
les
push
ficoml
clc
pop
mov
hlt
pop
sbb
decl
inc
outsb
fstl
mov
leave
out
in
pop
nop
in
cmp
sbb
pop
lods
lds
test
and
and
xlat
pushl
jge
dec
cmp
enter
nop
loopne
shlb
mov
jg
cmpsb
or
adc
pop
fcomps
les
fcomp
gs
call
xlat
shr
shlb
mov
loopne
jg
mov
mov
inc
cmpsl
es
cmc
or
xlat
sub
repnz
jno
sbb
or
add
jne
push
imul
pop
jmp
adc
pop
mov
sbb
xor
cmpsb
mov
clc
push
pusha
lock
lcall
xchg
push
jns
test
jmp
inc
xchg
or
ljmp
push
shlb
xlat
push
enter
incl
jns
notb
pop
sbb
std
jo
jmp
push
pop
and
sub
decl
pop
or
or
or
adc
push
cld
int3
adc
sbb
ljmp
mov
ret
incl
jnp
out
mov
inc
xchg
jne
pushf
xchg
mov
push
jg
ds
std
int3
stos
sbb
add
mov
loopne
hlt
out
mov
in
pop
mov
in
movsb
push
call
fs
inc
mov
pushl
adc
push
and
xor
in
clc
add
mov
adc
mov
jle
pop
les
cmp
xchg
clc
jmp
and
and
sbb
sbb
imul
aam
adcl
push
call
call
adcb
imul
loopne
and
incl
mov
pop
adcl
xor
in
out
sahf
jmp
inc
jmp
fldcw
add
aas
int3
add
loop,pn
fdivr
sti
dec
repz
mov
adcb
movsl
sbb
test
test
leave
lock
cmp
fsts
inc
mov
mov
cld
dec
mov
das
push
cmp
sti
filds
lret
aas
jmp
push
inc
adc
xor
jge
in
scas
adc
nop
out
add
imul
test
inc
cs
cmp
lods
hlt
incl
je
or
lret
fidivrs
xor
mov
dec
dec
and
or
xor
lcall
pop
or
scas
mov
outsl
add
push
mov
es
movsl
pop
pop
adc
adc
mov
cmp
out
pushl
fimull
pop
and
mov
fdivrl
dec
adc
getsec
rol
jbe
adc
rolb
add
inc
cmp
add
call
loope
mov
jmp
sub
cmp
clc
mov
fcmovnbe
in
push
movsb
out
jae
mov
call
incl
mov
lret
test
jmp
add
add
imul
call
xchg
ds
mov
cs
push
ja
cld
loopne
stos
lahf
dec
decl
inc
into
adcl
push
lods
arpl
add
push
out
sbb
cmp
inc
loopne,pn
nop
or
xchg
push
loopne
in
adc
std
lock
pop
inc
push
decl
or
xchg
test
data16
push
sub
and
inc
leave
gs
dec
call
jmp
pop
in
cmp
mov
sti
outsl
cmp
xchg
jp
pop
push
pop
or
leave
or
xchg
jmp
les
les
mov
mov
lret
add
push
dec
notrack
push
push
ja
sahf
scas
aaa
jmp
fs
call
add
cmc
insb
xchg
or
dec
pop
push
jmp
cmp
out
sub
incl
insb
pop
cmp
pop
mov
rclb
pushf
inc
jg
pushl
dec
dec
repz
jmp
adc
sub
pop
mov
pop
inc
call
mov
cmp
mov
xchg
adc
lock
and
inc
arpl
dec
or
inc
jmp
aam
aaa
or
roll
fcomip
push
xlat
cmp
adc
jmp
int3
inc
enter
pop
dec
popf
cs
lcall
imul
subb
push
mov
sbb
lds
out
add
mov
outsl
lcall
das
imul
les
push
loopne
adc
neg
add
jb
dec
call
push
iret
repz
inc
pop
imul
jns
dec
mov
cmp
daa
into
loopne
out
jns
loop
or
push
push
add
adc
int3
mov
and
adc
dec
mov
xchg
mov
fs
mov
cmpsb
mov
cmp
push
fildll
inc
mov
popa
and
dec
fistpll
mov
pop
ficompl
rolb
arpl
incl
jmp
mov
insl
jnp
add
jle
and
xchg
xlat
in
or
pop
pop
jmp
push
fcomip
inc
mov
mov
dec
imul
and
jmp
pop
add
lds
mov
sub
push
jo
and
call
jbe
xor
mov
and
jmp
inc
jg
mov
popa
lea
jecxz
mov
inc
div
ljmp
and
push
loope
push
pop
into
iret
push
mov
outsb
js
ljmp
sarl
arpl
aaa
enter
cmp
mov
mov
fwait
pop
xchg
cmc
dec
les
cmpsl
xchg
sahf
sbb
and
inc
lock
aaa
sti
dec
xchg
stos
call
mov
fmull
dec
decl
insl
cmp
xchg
mov
fbstp
cmc
rolb
pushf
je
sub
adc
push
push
je
jle
inc
inc
shl
into
jne
nop
popa
cmp
jae
pop
push
push
mov
fs
pop
jmp
inc
xor
ljmp
mov
push
cld
jae
add
jmp
enter
xchg
lds
push
jg
outsl
mov
xchg
js
mov
or
xchg
jbe
std
xor
jmp
mov
mov
jmp
rolb
mov
lret
cmpsb
dec
insb
outsb
mov
cmp
andb
pushl
rep
pop
jns
outsb
roll
sbb
cmp
es
scas
enter
jns
jo
jg
nop
lock
sbb
inc
cli
dec
ljmp
lods
mov
lcall
sbb
adc
sub
push
adc
iret
enter
icebp
call
popa
cld
ret
js
pushf
testb
jb
mov
mov
mov
leave
fcomip
fildll
mov
xchg
sbb
clc
fnstsw
cwtl
nop
fistpll
xchg
popa
addr16
fistl
adc
dec
ficomps
insl
sub
mov
dec
xor
and
pushl
jp
pop
jmp
clc
sbb
xchg
andl
or
push
das
mov
adc
inc
xor
sub
es
decl
dec
je
dec
and
pop
jo
cli
popa
adc
mov
jo
mov
or
add
pushl
loopne
pop
jno
aaa
shll
push
daa
adcl
sub
mulb
adc
std
jg
sub
xor
dec
hlt
mov
jmp
lods
add
jmp
or
dec
and
and
inc
incl
add
mov
pop
int
loope
or
es
dec
mov
incl
pop
push
fisubrl
arpl
pop
sahf
pop
adcb
in
jb
jmp
lret
sbb
mov
in
and
lock
jb
jl
das
pop
mov
jns
out
mov
mov
insl
mov
xor
and
mov
sbb
mov
dec
jecxz
es
ficompl
or
sub
and
xchg
nop
xchg
addl
jmp
adc
mov
out
cmp
jb
push
repz
jae
sub
cmp
sub
cmp
mov
lcall
ljmp
mov
ficoml
daa
inc
push
cmp
fstpt
call
mov
aam
mov
lock
or
sbb
clc
pop
cmp
pop
and
std
mulb
daa
sub
or
shll
ljmp
jo
fimull
sbb
adc
es
or
loopne
call
shrl
orb
ss
or
sub
xor
adc
xor
pop
mov
aam
out
jo
mov
or
cmp
pop
cld
clc
mov
test
idivl
insb
push
jbe
jne
ja,pn
jnp
xchg
adc
pop
pushl
jbe
push
call
ljmp
cld
push
insb
mov
cli
add
pop
flds
mov
jns
inc
frstor
ja
mov
test
mov
call
pushf
mov
jmp
sub
sub
xor
cmp
daa
jg
mov
mov
inc
add
aaa
gs
scas
lods
mov
shlb
add
sub
fcmovnu
rclb
jecxz
stos
or
push
lret
fbld
xchg
sbb
xchg
stos
hlt
and
es
ss
sub
adc
gs
lcall
xor
dec
rcrb
jmp
adc
inc
pop
or
ja
das
add
sbb
cmp
pop
sti
jbe
andl
daa
adc
jno
ljmp
pop
xchg
test
addr16
cmp
jg
outsl
dec
push
dec
js
add
pusha
and
pushf
sbb
pop
adc
and
push
cmp
je
xchg
icebp
fbld
pop
call
adc
inc
js
cs
push
fimuls
loope
push
adc
rorb
xor
push
rolb
jmp
ljmp
mov
mov
fcom
loopne
mov
cmp
leave
clc
mov
pop
push
jns
fstl
outsl
jmp
cmp
add
jb
jns
add
mov
sub
push
mov
fsub
ljmp
mov
push
jb
cmpsl
mov
add
scas
jmp
add
adc
cmpsb
adc
outsl
mov
decl
scas
fiadds
jecxz,pn
lahf
cmpsb
ror
lock
fldt
nop
cmpsl
add
pusha
enter
push
stos
decl
gs
jnp
pop
rolb
rcll
mov
enter
push
and
mov
adcl
cltd
lcall
lcall
adc
aaa
ret
push
daa
ss
adc
pop
mov
sbb
mov
xchg
cmp
lea
lods
lods
incl
sbb
pushf
push
add
into
pop
xor
fmull
sahf
lock
incl
decl
xor
mov
mov
repnz
jmp
dec
loopne
mov
fnsave
mov
mov
mov
test
sbb
add
mov
adc
inc
fadd
test
aas
call
das
jge
push
imul
cwtl
bound
clc
jmp
sub
inc
int3
fadds
or
enter
cmp
sub
xchg
add
out
sbb
pop
nop
pop
lock
syscall
mov
inc
ss
cmp
jb
lcall
fmul
loop
xchg
cmpsl
push
cmc
and
jle
pop
or
das
sub
push
mov
ds
add
xchg
pop
repnz
and
incl
aas
and
shll
xchg
sub
xchg
arpl
inc
xor
add
cltd
ljmp
cli
xchg
and
and
push
xor
sub
mov
int
imulb
push
or
lock
adc
sbb
inc
je
arpl
xor
cmp
cld
adc
and
adc
jae
jnp
lahf
sbbb
xorl
out
ss
das
mov
jmp
sbbl
loop
inc
pop
insb
jle
call
leave
xor
mov
fstpl
jno
arpl
inc
imul
push
movl
ljmp
mov
lods
push
push
stos
js
dec
cmpsb
sub
sub
xchg
je
push
inc
dec
jmp
incl
daa
mov
adc
imul
dec
push
cmp
or
adc
inc
push
inc
dec
xlat
inc
movsl
decl
mov
pop
in
adcl
mov
fs
jmp
xor
xchg
sahf
lcall
push
push
js
jne
jp
roll
aad
fwait
and
stos
xchg
int3
inc
loopne
pop
inc
jg
jmp
inc
jmp
ja
adc
enter
cli
adc
sub
in
clc
lcall
push
outsl
jg
jg
inc
adc
ja
inc
loopne
insb
mov
xor
ljmp
dec
ds
fsts
cmpsl
mov
aad
add
sbbl
inc
adc
idiv
call
or
mov
ss
scas
pop
out
daa
and
add
inc
sub
or
sbbl
ret
decl
mov
push
or
test
lock
cld
jmp
test
inc
inc
add
jns
mov
cmc
ret
outsl
lcall
and
dec
push
fcmovnbe
sub
pop
insb
loop
jns
xchg
mov
cmp
lret
fiaddl
sub
cmpl
decl
in
pop
fs
fadds
fildll
fwait
ret
fstl
add
lods
cmp
sbbb
into
scas
or
jmp
jne
and
and
sub
or
sbbb
dec
sbb
jg
adc
inc
adcb
pusha
cmp
pop
gs
mov
xchg
incl
mov
fidivrs
fdiv
cs
and
sahf
outsb
leave
rcrl
push
pop
inc
decl
add
js
push
mov
push
iret
push
sbb
fcos
incl
sbb
or
inc
pop
stos
cmp
sub
mov
ficoml
jge
jno
aam
jbe
aaa
std
lcall
fs
pop
mov
cmpb
es
pop
leave
inc
xor
cmpsl
lahf
jmp
jo
lock
push
movsl
lods
cs
push
pop
inc
mov
push
mov
lock
jmp
cmp
inc
dec
sub
out
leave
pop
cld
aas
sbb
loopne
pop
lock
jmp
add
add
lcall
pop
inc
push
or
add
rcrl
call
xor
fstl
sbb
xor
mov
push
sub
clc
fwait
adc
in
jp
fildll
clc
add
stos
inc
pop
add
xchg
in
mov
or
push
mov
pop
fsts
data16
pushf
mov
movsl
cmp
out
outsb
push
lods
dec
pop
daa
roll
sahf
negl
push
sbb
mov
push
sahf
mov
out
mov
xchg
ljmp
fildll
cltd
and
cld
adc
addb
pop
mov
je
mov
adc
rorl
cmp
aad
sbb
sbb
fstp
push
sub
lods
add
sar
cli
fildll
ret
xor
insl
add
daa
pop
push
test
dec
xor
incl
cld
fucomip
loopne
add
fwait
data16
mov
int
jg
lcall
pop
pusha
enter
or
xchg
fcomip
cmove
dec
jnp
sahf
jle
inc
mov
das
pop
mov
push
shl
sti
es
je
pop
outsb
xchg
incl
sbb
sbb
fldcw
cmp
mov
sub
hlt
incl
adc
adc
orl
push
jb
fistps
push
push
adc
push
push
cmc
jmp
out
jmp
adcb
jmp
dec
int3
add
mov
data16
jl
aaa
mov
loopne
in
push
or
in
push
mov
scas
push
mov
aas
cmp
sti
jns
mov
xchg
fistpl
js
sahf
mov
xlat
xchg
leave
push
mov
add
cwtl
and
push
fistps
cltd
nop
popa
sbb
fisttpl
rorb
fildl
nop
add
in
cmpsl
clc
push
mov
fildll
xor
jb
pop
data16
or
push
push
stc
inc
fists
imul
add
inc
mov
pop
mov
sub
aaa
imul
adc
push
jo
push
mov
jmp
lcall
repnz
push
pop
mov
clc
mov
cmp
call
push
and
inc
xor
loopne
arpl
mov
fnstcw
lock
sub
pop
gs
std
fsubl
xchg
xor
adc
xor
push
data16
adc
pop
cld
mov
push
arpl
xchg
inc
es
pop
inc
outsl
jmp
xchg
cmpsb
dec
jbe
or
jb
cmovs
push
repnz
xchg
inc
pop
addr16
inc
clc
decl
push
xchg
or
in
sbb
dec
push
pushw
in
test
xchg
mov
stos
fisubs
daa
popf
cld
fdiv
es
js
adc
mov
pop
movsb
fwait
cmp
or
test
pop
ret
inc
mov
in
js
nop
dec
fs
stos
mov
bound
lods
mov
push
int3
or
ljmp
push
mov
dec
push
push
cmp
js
sub
xchg
je
sti
inc
push
dec
adc
out
and
fcomps
add
call
test
mov
xchg
int3
push
xchg
inc
xchg
and
inc
in
pop
jnp
push
fs
je
push
cmp
mov
mov
add
icebp
add
mov
rclb
mov
lock
mov
pop
test
pop
scas
test
test
adc
in
push
enter
xchg
xchg
mov
xchg
dec
jne
push
push
je
and
rclb
xchg
sub
das
lret
jno
pop
shr
push
in
mov
pop
int3
loop
add
cld
incl
push
addb
xchg
das
mov
nop
imull
repnz
out
int
adc
and
push
sub
nop
pushf
dec
cwtl
cmp
add
fistpll
or
and
inc
xor
leave
pop
repz
cwtl
mov
cltd
or
fwait
mov
in
cmp
xchg
pop
outsb
adcb
or
jnp
mov
inc
mov
mov
hlt
in
jg
inc
negl
and
add
and
pushf
in
call
notb
xchg
xchg
pop
repnz
cmp
inc
pop
xchg
js
insl
sbb
cltd
inc
jg
retw
rorb
aas
lods
popf
cmp
movsb
fsubs
push
imul
lcall
dec
fwait
pop
pusha
imul
imul
pop
xchg
loopne
fimull
fwait
add
cld
adc
pop
mov
xchg
cmpsb
inc
mov
sbb
rorb
sbb
mov
ljmp
add
mov
addl
mov
loop
mov
call
cld
sub
inc
adcl
popa
nop
mov
pop
fbld
fsubs
cmpsl
add
idiv
fistps
xchg
add
imul
cmp
stos
test
cmpsb
push
dec
data16
es
dec
lock
dec
outsl
push
cld
inc
add
xor
mov
push
sbb
sbb
push
xchg
pop
mov
nop
test
pusha
sbb
ds
mov
add
mov
arpl
fwait
jecxz
cld
movsb
test
push
imul
jmp
inc
lock
mov
cmp
lret
sahf
pop
jne
les
movsb
inc
sub
sti
decl
repnz
rcrb
sahf
mov
outsb
adc
or
imul
add
clc
sbb
push
int3
push
inc
dec
mov
add
popa
sahf
mov
cmp
inc
loope
adc
mov
imul
xchg
rcrl
inc
add
pusha
in
add
cmp
sub
cmpsb
faddl
push
cmpsb
decl
adc
add
add
mov
xchg
or
or
inc
loopne
add
lds
mov
inc
in
xor
out
enter
cmpsl
add
aas
ds
mov
cld
cmp
and
mov
xchg
push
nop
ja
dec
rcr
aam
fdivp
push
adc
xor
and
nop
ljmp
icebp
mov
and
sub
xchg
jmp
repnz
mov
xchg
arpl
clc
mov
add
div
test
fcomip
fildl
gs
dec
hlt
jb
leave
xchg
fnstsw
xor
inc
pushl
add
cmp
incb
rolb
inc
int3
push
bound
xchg
mov
rcrl
dec
les
and
lods
pop
loope
loopne
xchg
pop
loopne,pt
aaa
lods
jo
out
xor
sub
fmuls
aam
ljmp
or
dec
out
rcr
mov
mov
dec
ja
enter
push
jp
push
mov
call
lds
or
sahf
and
les
sub
inc
inc
sbb
sarb
and
pop
sub
xchg
adc
mov
out
mov
js
add
dec
inc
push
popa
iret
or
cmpl
jg
jmp
es
push
das
and
inc
mov
add
mov
jmp
jno
mov
fisttpll
and
xchg
mov
pushf
adc
sbb
lods
lods
jbe
mov
inc
test
test
cmp
or
jmp
rcll
cs
movsb
lea
push
mov
push
jmp
pushf
pop
sbb
pop
cmp
sbb
inc
cwtl
jecxz
adc
xchg
out
clc
fwait
mov
inc
mov
mov
pop
cmp
clc
ljmp
xor
add
pop
rcrb
test
nop
out
add
stos
mov
sub
inc
xor
dec
pop
clc
test
push
les
sub
mov
adc
push
adc
xorb
in
jmp
pushf
fs
sbb
sub
add
leave
xchg
dec
push
decb
cmpsb
cmpsb
fisubrs
adc
imul
or
cmpsl
cmp
hlt
test
cmpsl
inc
fcoml
mov
pushl
fcoml
jne
jb
adc
outsl
mov
icebp
popf
sub
loope
pushl
mov
data16
cmpsl
lods
in
or
test
pop
sub
ret
sti
mov
xor
or
jg
fisttps
jnp
pop
push
mov
jmp
push
aas
pusha
jge
das
in
jns
stos
xchg
push
mov
cli
lock
mov
add
push
cmp
mov
std
pop
pusha
add
je
cmp
sub
xor
mov
and
test
cs
push
ja
jno
pop
dec
sbb
mov
roll
in
nop
and
inc
js
mov
lcall
fsubrl
fdivl
sub
jo
aam
aam
add
cmp
roll
push
fwait
dec
int3
scas
dec
mov
pop
mov
fcomip
mov
lret
pop
test
repz
rolb
pop
jb
sahf
loopne
cs
stos
or
rolb
lods
stos
sbbb
in
add
inc
xchg
idiv
and
push
insl
mov
inc
cmpsl
jecxz
or
ret
push
jmp
test
scas
fistpll
aad
mov
inc
fstpl
xor
adc
imul
fdivrp
mov
cmp
pusha
dec
xchg
hlt
ljmp
test
test
push
cwtl
mov
xor
aad
mov
adc
mov
inc
xchg
jnp
cwtl
aas
dec
je
xchg
aad
ljmp
pop
nop
aaa
push
je
sbb
or
jmp
fnsetpm(287
nop
pushf
push
cmpsl
inc
adc
dec
cmp
imul
decl
rclb
jbe
and
mov
addr16
in
mov
lcall
xlat
dec
push
and
clc
and
enter
shll
inc
enter
and
scas
decl
rcrb
jno
nop
loopne
xor
adc
dec
fidivl
gs
leave
cmc
push
inc
or
movsb
mov
test
scas
ss
mov
cld
sbb
ss
cmp
mov
lcall
mov
jmp
add
leave
and
mov
std
mov
test
inc
test
inc
mov
push
push
or
in
decl
in
loop
mov
movsb
mov
xchg
sbb
adc
and
out
pushl
movsb
push
mov
jmp
push
movsb
aam
loope
xlat
add
mov
adc
lcall
les
movsl
mov
pop
adc
inc
test
xor
mov
mov
pop
mov
push
mov
aaa
sub
mov
push
test
jmp
or
sbb
out
cld
jg
pop
cmp
scas
pop
inc
sub
lret
mov
inc
scas
aaa
movsl
add
fwait
xchg
call
add
lds
cmp
iret
and
and
lods
lea
lods
pushl
cmp
movsl
push
mov
lds
movsb
adc
mov
jle
iret
mov
jnp
iret
dec
xchg
xchg
arpl
sti
pushl
test
inc
cmp
xor
jg
lcall
enter
inc
xor
test
mov
loopne
inc
mov
mov
ljmp
add
or
dec
sbb
out
mov
aaa
cmp
or
adc
xor
je
mov
pop
jg
ret
bound
or
or
xchg
cmp
jmp
addr16
jmp
cltd
pop
xor
pop
mov
mov
adc
aas
or
pushl
test
xchg
mov
inc
mov
out
out
xchg
mov
lret
push
rcrb
add
test
out
and
in
xor
add
sub
adc
lock
dec
inc
pop
or
mov
or
xchg
or
pop
jmp
test
sar
incl
aas
push
gs
push
aaa
push
ret
mov
xchg
xchg
fiadds
jg
enter
dec
shl
roll
jne
pop
add
push
loope
or
aas
jl
push
jmp
xor
adc
mov
or
nop
call
sub
ljmp
adc
lods
fs
xchg
jb
pop
adc
call
add
enter
adc
mov
bound
aad
sub
inc
xchg
push
out
jb
ss
push
clc
incl
or
daa
or
cmp
jo
jp
inc
adc
mov
dec
inc
and
and
lock
push
aas
inc
push
cmp
inc
jle
scas
sub
dec
rcrb
mov
push
shl
adc
int3
push
jmp
pop
inc
or
out
mov
and
movsb
xor
sar
aaa
out
or
jmp
mov
cmp
stc
sbb
call
pop
daa
mov
cmp
push
lahf
dec
or
out
mov
or
or
mov
mov
or
xchg
jns
xor
xchg
mov
mov
mov
inc
aam
imul
rclb
add
cmp
int
sbb
decl
call
xor
pop
gs
testl
jg
sub
mov
or
lods
ss
add
out
inc
or
mov
jmp
jg
insl
lahf
test
and
loop
pop
and
adc
add
iret
cld
lock
dec
pushl
push
jmp
ficoms
mov
orb
fucomp
pop
fs
mov
ljmp
mov
sbb
and
jo
lods
das
push
cmp
add
jp
lret
xchg
inc
ret
ljmp
sbb
xchg
or
xchg
sbbb
adc
jg
and
cld
jne
icebp
push
sahf
pop
repz
sbb
push
inc
std
incl
lret
mov
adc
xor
int
pushl
push
lock
loopne
test
sub
lock
in
int3
sti
xor
mov
sbb
dec
inc
adc
ljmp
sar
and
xchg
mov
push
xor
movb
inc
rorl
jmp
mov
sbb
ret
aad
adc
js
sbbl
mov
fsub
sbb
iret
decl
push
inc
pop
mov
sub
mov
mov
ret
cli
js
pusha
ds
movsb
push
pop
cmp
pop
push
fdivrs
or
dec
bnd
push
bound
out
mov
sub
jns
dec
fldenv
rcll
adc
hlt
xchg
xchg
sub
incl
pop
aaa
jmp
mov
in
fstl
dec
mov
out
clc
fnstcw
adc
lcall
leave
dec
rcrl
xchg
xor
push
sub
clc
sbb
inc
push
lock
loop
pushl
mov
adc
adc
aaa
or
in
fildll
in
aas
dec
xor
or
in
mov
test
cwtl
inc
pop
or
fcomps
je
ja
pop
cmp
dec
or
addr16
insb
and
mov
imul
mov
lds
lret
arpl
call
loop
aad
fwait
shll
dec
push
xchg
mov
mov
lret
aas
mov
pop
prefetchnta
ljmp
sti
mov
mov
push
mov
or
movsl
adc
sar
dec
dec
cmp
inc
test
push
jg
fidivs
push
pop
shll
jbe
or
sub
pop
push
sahf
mov
call
in
mov
pop
cmpsl
cmp
ss
ljmp
dec
je
outsb
mov
and
aas
daa
xchg
xchg
out
or
pop
dec
adc
negl
dec
pushf
adc
mov
nop
jbe
incb
insb
daa
xchg
xchg
add
sub
clc
pushl
out
es
dec
scas
pop
outsl
pop
cmp
sahf
pop
test
divl
add
aam
xchg
clc
or
xchg
push
dec
sti
pmuludq
jl
nop
adc
in
sti
in
inc
in
add
seto
pop
adc
inc
mov
imul
dec
gs
jmp
xor
in
or
push
sub
mov
push
and
dec
adc
ljmp
push
or
mov
adc
decl
xor
xchg
fadds
loopne
rolb
xor
int
imul
jg
clc
sbb
pop
dec
jo
les
outsl
mov
add
daa
mov
pop
jo
dec
hlt
cmp
cwtl
loope
fcom
pop
xchg
rcrb
jne
and
sar
call
add
adc
imul
sbb
ljmp
adc
sub
cmpsb
aas
test
lods
sub
jo
out
jge
das
add
call
mov
arpl
sahf
and
lods
lcall
lcall
push
pop
js
sub
das
cld
cmp
inc
pop
fs
in
nop
data16
and
jmp
sub
int
or
xor
or
movsb
adc
pop
lods
add
pop
inc
jno
filds
in
mov
cmp
or
pop
icebp
sub
idiv
dec
stc
adc
cmp
cmpsl
sub
andb
xchg
testl
addr16
mov
add
cmp
call
mov
nop
out
shl
jge
repnz
movsl
sub
loope
in
push
icebp
int3
mov
mov
sbb
sub
hlt
out
iret
pop
xor
or
dec
sub
push
dec
jg
dec
xchg
mov
add
shll
dec
pop
xchg
ffree
lcall
fisubrs
popa
mov
ret
mov
add
xor
dec
int3
mov
and
sbb
and
decl
jne
adc
ja
leave
clc
jbe
and
jb
jmp
in
jmp
cld
add
jmp
inc
clc
sub
and
jo
xchg
les
dec
push
leave
pop
std
ljmp
mov
mov
xchg
or
mov
lret
repnz
push
jge
adc
lock
pop
jg
test
loope
rorl
or
mov
or
ljmp
aaa
xor
popa
leave
cwtl
lret
lret
pop
icebp
fmuls
fnstsw
push
pop
popa
fsubl
lahf
pusha
mov
jno
mov
movsb
nop
xor
or
xor
mov
sub
icebp
mov
sbb
decl
jmp
inc
movsb
es
clc
cld
daa
ret
jo
insb
push
mov
shll
xchg
mov
add
scas
clc
out
lcall
div
sub
push
sarl
add
es
and
scas
or
outsl
push
addb
addl
xchg
addr16
fbld
mov
int3
add
jp
sahf
es
xchg
int
lret
or
ds
out
cli
sbb
push
in
enter
sti
cmp
fwait
test
sub
call
add
adc
imul
into
xchg
jae
and
lcall
dec
cmp
jp
pop
adc
jo
dec
je
add
pop
add
push
mov
add
ret
or
decl
psubsw
jbe
dec
xor
sarl
mov
sbb
jmp
fwait
ret
and
ljmp
ja
mov
dec
push
push
pop
shrl
jmp
aad
push
les
cmp
aas
fs
cmp
xor
mov
jb
lds
mov
sbb
xchg
popf
push
lret
sub
adc
or
fbld
aad
jmp
loope
popf
push
xor
icebp
imul
out
clc
mov
fdivs
xor
es
aam
push
and
add
cmp
lret
into
mov
out
ret
nop
arpl
fnstenv
in
andl
pushl
test
pop
xlat
adc
fcoms
pop
mov
push
ret
mov
cmpsl
dec
cld
andb
cmp
or
and
loopne
std
fwait
incb
adcl
jmp
aas
xchg
push
je
mov
xchg
or
adc
pusha
mov
pusha
aas
ret
iret
mov
ljmp
jle
ljmp
outsb
xchg
sub
inc
sbb
sub
pop
cmp
sbb
fcomps
loop
add
pop
sarl
mov
out
adc
insb
xchg
jbe
jmp
loopne
std
incl
dec
ss
jg
adc
adc
sub
sbb
cmp
aaa
stos
ljmp
cld
orl
stc
or
ljmp
sar
fisttps
sub
add
mov
or
push
adc
push
je
mov
call
jge
sbb
and
jle
sub
lahf
ja
outsl
push
daa
aam
shll
sar
jp
fstp
pop
jb
sti
pop
mov
pop
push
pusha
das
mov
or
jg
fcompp
cmp
and
rcrl
call
xor
mov
shll
rcr
mov
inc
loope
ja
movsl
and
iret
int3
cwtl
inc
loopne
fcmovnbe
ds
cltd
add
adcb
sar
pop
lea
xchg
mov
adc
cmp
xlat
xchg
nop
mul
lcall
in
pop
rolb
mov
insb
push
xbegin
or
fldcw
incl
int
and
in
cmc
push
shr
pop
fnsave
jb
outsb
mov
fildl
xlat
aaa
loopne
adc
or
sbb
mov
sub
sbb
ljmp
push
sti
xchg
xchg
cmp
xchg
addl
pop
inc
lods
pop
mov
rol
testl
xlat
dec
call
fsubr
js
dec
xchg
xor
jo
popf
xor
int
jmp
rorl
sbb
aas
fdivs
call
add
push
les
mov
jge
inc
xor
xchg
mov
ljmp
movsb
repnz
sub
je
add
lods
movsb
add
cltd
cld
jmp
aam
incl
mov
stos
mov
mov
hlt
pushl
push
and
aam
into
ja
sbb
outsl
clc
pop
cmovp
cmp
int3
adc
lock
call
and
push
cmp
mov
inc
add
int
faddl
test
dec
or
ljmp
or
ret
insb
lods
xchg
sub
sbb
inc
sbb
ss
jbe
js
loop
add
push
and
or
mov
or
mov
inc
add
pop
pushf
push
or
pop
rcl
subb
pushl
je
shll
in
and
or
push
pop
and
es
sbb
and
call
sbb
daa
mov
mov
adc
inc
fidivl
mov
lcall
fiadds
mov
mov
fcmovbe
fcomip
inc
shll
dec
pushf
push
sub
or
push
jmp
and
jb
pushl
fcmovne
lods
out
jns
incl
shl
nop
fimuls
jb
push
xor
jg
mov
jb
mov
loop
jno
es
addr16
je
sub
jo
jns
sahf
or
dec
lcall
push
cmp
mov
xchg
pop
or
out
sbb
std
xor
fisttps
or
aas
pop
dec
sub
mov
fildll
push
jne
out
frstor
insb
add
jne
bound
out
xor
jb
jg
gs
sti
cmpsb
jbe
jbe
out
dec
fwait
push
ss
cmpsl
xorl
es
in
jae
push
negl
xchg
inc
ficompl
push
out
outsb
aaa
push
es
imul
push
imul
outsl
inc
lcall
add
and
xchg
inc
inc
inc
pop
push
inc
ret
pop
inc
add
loopne
ljmp
loop
xchg
dec
cs
sub
fsubrs
aas
add
outsb
in
bound
push
xor
popl
sub
push
xor
rcrl
sti
outsl
and
mov
lret
mov
sub
sbb
ffree
loopne
lret
pop
les
aad
sub
xchg
xchg
add
push
daa
add
pop
or
push
ret
mov
jg
mov
xor
add
pushl
mov
lret
clc
bound
adc
and
test
push
int
xor
incl
pop
and
push
pop
lcall
mov
add
add
or
shll
pop
push
aas
inc
es
xor
inc
pop
inc
ja
cs
jg
call
shll
push
data16
and
outsl
loope
xchg
lods
or
insb
sub
enter
jp
fcmovnu
mov
jl
sub
push
mov
pop
cwtl
lock
daa
and
dec
mov
jg
jo
fdivrl
add
aad
xorl
lods
lret
sbb
pop
lock
pop
xor
cmp
pushl
cltd
inc
xchg
jmp
fsubl
jl
out
pop
push
inc
mov
lret
and
push
arpl
sti
adc
pop
cmp
inc
pushf
into
cltd
pop
mov
push
jae
sbb
sub
inc
mov
xchg
xchg
shrb
adc
into
inc
dec
in
dec
xlat
xchg
ljmp
and
lds
push
cmc
movsb
cmp
cli
push
lcall
push
mov
decl
icebp
out
add
mov
addb
mov
ret
sub
enter
push
aad
movsl
mov
jmp
inc
mov
xor
popa
orl
jb
sbb
inc
add
jo
jo
xor
cli
call
push
mov
cmp
dec
repz
dec
leave
fstp
push
leave
rolb
stos
cs
lcall
cmp
clc
jle
push
cli
push
into
xor
cmp
and
jb
lods
incl
enter
int3
jb
mov
movsb
jae
psubb
movsb
jnp,pn
test
popf
jnp
mov
cmp
mov
das
mov
cmp
jbe
in
cmp
incl
pushl
or
mov
jns
push
clc
xor
jp
push
jg
lahf
jno
jmp
inc
mov
mov
sbb
xchg
mov
pop
pop
pop
jo
inc
es
incl
or
add
loopne
popa
std
clc
add
mov
incl
sbb
inc
sbb
adc
sub
sub
sbb
or
cmp
pop
lock
add
sbb
push
insb
sbb
xchg
fidivrs
dec
jno
add
sbb
dec
cmp
sub
incl
cld
das
fiaddl
push
and
add
mov
inc
dec
cmpsl
loopne
scas
or
shlb
hlt
decl
xor
test
adc
sub
push
clc
pop
and
push
inc
or
lret
jns
in
dec
clc
adc
decl
lret
gs
in
dec
in
push
xchg
jne
loope
testl
inc
and
ljmp
test
add
mov
out
jb
test
adc
adc
jg
mov
hlt
mov
je
out
or
orl
jmp
sub
add
sub
ljmp
ret
inc
lea
jmp
addb
adc
sti
pop
lock
xor
push
mov
rol
ret
decl
or
jb
cmpl
pop
shlb
jno
dec
popa
loope
lahf
pusha
or
repz
push
enter
pop
decb
outsl
push
jns
out
lea
mov
fisttps
push
sbb
mov
sub
push
negb
cs
ret
lcall
jecxz
push
aam
sahf
sbb
js
jecxz
and
popf
pushl
and
int3
ds
in
cmpsl
enter
in
loopne
xchg
adc
push
cmp
repz
addr16
enter
cmc
fs
enter
cmp
jo
out
rcrb
adc
cmp
add
adcb
test
cmp
jmp
mov
dec
outsl
add
add
in
lcall
jns
mov
push
sahf
addr16
out
int3
lcall
adc
or
adc
xchg
lock
push
add
cld
cmp
adc
sub
pushl
in
fimull
xchg
jle
lods
movsb
pusha
adc
mov
mov
jg
and
or
cmp
or
popf
negb
mov
inc
add
test
je
sub
ljmp
subl
jmp
into
les
or
out
push
int3
and
fistpl
inc
mov
mov
jno
adc
call
jmp
mov
push
aad
inc
lods
jo
mov
mov
adc
out
mov
ljmp
adc
cld
ljmp
rorb
cmp
or
add
mov
dec
loop
cmovbe
hlt
push
div
mov
xor
pop
loop
das
nop
test
jns
fsubs
sbb
jns
sbb
sub
fstpt
je
mov
popa
adc
add
lea
test
cmp
fcomps
xor
adcb
sbb
mov
nop
mov
push
adc
jmp
insb
in
and
les
test
dec
arpl
lcall
jmp
xor
popa
pop
add
pop
adc
xor
dec
sbb
jge
jb
test
pop
or
ljmp
lds
or
shl
dec
or
fildll
mov
ljmp
mov
fcomip
incl
xor
loopne
ss
lcall
js
rcrb
lcall
or
es
loopne
jae
sub
jne
or
pop
fs
out
pop
ss
ss
xchg
cmp
mov
call
pop
push
inc
dec
sbb
fidivs
mov
xlat
inc
push
jnp
jae
push
into
adc
sub
rclb
nop
xlat
lock
jecxz
push
idivb
inc
adc
jno
mov
icebp
ljmp
sub
or
xorb
or
aas
pop
jmp
jle
jmp
pop
and
aad
sbb
rcl
bts
imull
loope
movsl
xor
inc
call
cld
cmp
dec
push
xchg
lcall
testl
dec
cld
push
and
mov
bound
call
in
mov
andb
and
xchg
dec
call
push
subb
cmp
icebp
stc
in
std
dec
sbb
nop
shr
shrb
xor
stc
mov
movsb
fld
jns
fsubl
adc
loopne
jnp
shlb
lock
hlt
inc
aam
imul
fcomp
xor
nop
in
int3
dec
adc
call
or
pop
mov
xor
cmp
call
cmp
imul
enter
mov
push
inc
std
push
je
gs
mov
jecxz
loopne
xor
in
in
mov
outsb
mov
pop
enter
rcl
fcomp
fs
push
loopne
adc
jmp
les
fnstenv
out
jbe
sub
sar
sti
pop
or
call
cmpsl
pop
sub
rorb
loopne
xor
aaa
roll
jmp
adc
push
push
cs
xchg
add
adc
mov
decl
inc
push
add
sbb
popl
and
leave
or
mov
fs
add
test
push
or
int
incl
mov
xor
mov
inc
jmp
inc
mov
mov
out
and
sub
aas
fcmovnbe
mov
xchg
ficomps
jnp
js
sbb
dec
adc
fmuls
sbb
add
adc
or
cmc
call
sbb
sbb
loope
push
lea
lret
inc
or
push
sub
mov
adc
sahf
cmp
mov
xchg
mov
mov
popa
lods
scas
mov
pusha
mov
pop
mov
jmp
scas
inc
shrl
add
push
mov
dec
jmp
jo
movsb
xor
adc
or
sbb
jecxz
es
mov
jns
jb
and
inc
xchg
hlt
lcall
adc
out
mov
mov
inc
lea
dec
jns
cmp
pop
mov
pusha
ret
add
in
cmp
pop
inc
dec
inc
mov
add
adc
clc
mov
imul
mov
jle
ljmp
add
mov
incl
dec
cld
ja
push
call
or
loopne
sub
jno
lods
subb
xlat
or
sub
xor
push
sar
add
outsl
add
add
mov
adc
sbb
lret
repnz
cmpb
or
addr16
ljmp
repz
cmpsl
repnz
push
inc
int
in
popa
les
mov
lock
push
mov
cmpsb
and
and
xchg
add
and
fcomip
cmp
mov
or
cwtl
jne
jmp
push
fcoms
rcl
rclb
or
clc
cmpsl
mov
sahf
in
fadds
push
push
hlt
xchg
and
jg
sbb
dec
sbb
leave
adcb
add
mov
mov
incl
loopne
imul
pop
adc
cld
decl
lcall
xbegin
lds
test
arpl
out
ljmp
fcomps
cmpsl
sti
cmp
aam
das
in
inc
aam
adc
or
imul
shrb
call
insl
ret
repnz
push
mov
andl
push
sub
mov
pop
pop
loope
dec
cs
push
cltd
orb
mov
mov
xchg
push
fisubrl
jp
inc
sub
fs
push
add
hlt
add
cmovo
sbb
call
jnp
test
daa
or
call
dec
push
test
cmpsl
stos
repz
push
jg
jmp
inc
dec
mov
adcl
popf
mov
mov
ds
add
imul
pop
push
and
jmp
sub
pop
out
mov
nop
ljmp
pop
jo
arpl
sub
stos
pushl
in
sub
fstl
xchg
jo
pop
stos
add
pop
pop
daa
jg
test
cld
mov
jae
cmc
push
lcall
sbb
push
adc
test
decl
cmp
jle
push
inc
in
ljmp
mov
xor
cwtl
cwtl
xor
or
pavgw
lea
jb
jmp
sbb
test
ljmp
push
flds
cmp
ljmp
shrb
out
clc
imul
or
cmpsl
mov
mov
dec
cli
jge
mov
mov
adc
ljmp
rcl
inc
testl
dec
out
sbb
push
xchg
rol
add
ljmp
xchg
repnz
sub
lock
cld
sbb
sub
fdivr
and
imulb
mov
inc
add
push
mov
inc
lea
cmpsb
dec
pushl
cmp
cmp
lea
inc
jmp
fists
and
fists
mov
jmp
seto
sub
es
push
cmpsb
orb
test
aam
call
sbb
push
movsb
test
cmpsl
pop
adc
push
btc
jmp
or
cmp
incl
fs
and
dec
or
mov
jl
sbb
xlat
pop
lea
xor
jmp
ret
cs
xor
xchg
cs
xchg
mov
lea
sub
sbb
inc
or
ss
aaa
mov
xor
jle
dec
add
jb
or
fbld
call
adc
in
out
cmp
daa
pop
sti
int3
aam
cmc
clc
stos
jns
ljmp
lret
arpl
pop
scas
add
and
or
push
sbb
cltd
fimuls
in
dec
ljmp
dec
test
jmp
add
filds
call
or
and
lcall
sti
cmp
mov
stc
inc
dec
xchg
or
jge
and
pop
mov
lcall
or
adc
popa
test
xchg
xor
adc
ret
mov
pop
add
xchg
lret
push
cmp
nop
in
stc
push
das
psubw
push
lret
dec
sbb
dec
xchg
mov
out
dec
sub
shlb
cmp
in
mov
pop
mov
outsl
and
adc
mov
add
lahf
inc
mov
pusha
test
mov
ss
iret
in
add
sub
jno
mov
call
stos
shll
daa
mov
cmp
or
cmp
jl
cmp
and
jns
mov
push
jg
xchg
incl
rcl
and
clc
jp
adc
push
test
insl
push
add
out
sub
test
sti
das
xchg
xor
dec
les
call
int
stos
in
xchg
mov
in
add
or
or
imul
inc
in
inc
pusha
imul
sbb
jmp
mov
jns
jle
ret
cmp
cwtl
movsl
js
aam
push
sub
mov
mov
push
sbb
sarb
cmpsl
add
adc
mov
loop
sbb
cmp
clc
adc
lldt
movsb
scas
jg
jmp
fisubs
push
jae
pop
fucomi
scas
cmp
xor
pop
movsb
lea
dec
xlat
rorb
add
hlt
pushl
dec
inc
inc
inc
mov
dec
adc
lret
pusha
into
adcl
incl
xchg
rclb
and
mov
in
mov
les
test
cmpsl
aaa
hlt
dec
lock
fs
lock
xlat
lcall
jo
movsb
mov
and
test
mov
and
jb
call
std
rcrl
mov
js
mov
pop
mov
fs
mov
cmpsb
pshufw
pushl
or
pushl
inc
sub
rsm
xchg
inc
push
pop
lcall
decb
dec
sbb
sbb
fisttpll
aam
sbb
sub
add
test
cmp
adc
bnd
xchg
sub
push
adc
or
adc
andb
push
fcos
out
and
add
or
inc
mov
stc
leave
adcl
ret
in
decl
addr16
xchg
stos
jne
fimull
cmp
mov
loopne
cmp
add
jns
push
xlat
das
add
jns
mov
mov
or
jb
aaa
pop
les
mov
pop
xchg
incl
mov
xchg
int3
insb
cld
jo
and
in
sub
mov
les
mov
outsl
xchg
mov
mov
mov
and
jae
ljmp
aaa
imul
jp
inc
stos
xchg
or
or
sti
cmp
mov
sbbl
dec
insb
jmp
pop
add
pop
jne
inc
call
and
mov
lret
push
fdivl
push
fst
mov
mov
add
std
fcomip
inc
loope
pusha
xor
inc
push
push
dec
shlb
movsl
jmp
hlt
shrb
adc
sbb
add
push
push
push
mov
push
push
movsl
mov
mov
add
in
and
hlt
dec
outsb
jbe
dec
loopne
in
clc
shr
lods
pop
mov
mov
add
cmpsb
lock
lds
mov
add
out
stos
dec
pop
pusha
add
lahf
rorb
ds
jg
pop
add
or
lret
add
incl
cmp
jle
push
inc
addr16
cwtl
push
ror
push
push
daa
push
lea
rcrb
enter
insl
enter
xchg
pushf
xorl
loop
add
mov
lcall
mov
enter
cli
jg
test
sbb
add
cmp
lea
push
les
test
loope
dec
mov
loop
add
clc
call
enter
xor
les
push
das
movsl
daa
bound
int3
call
ja
clc
inc
cli
or
and
jns
add
sbb
ljmp
or
sbb
xor
xchg
faddl
sub
add
std
rcrb
jb
pushf
add
sbb
fisttpll
pop
popa
adc
adc
mov
or
out
idivb
and
fcomps
push
movb
fiadds
jl
or
cltd
cli
insl
jnp
add
addr16
cmp
adc
adc
orl
rcrb
cld
jle
mov
ljmp
mov
pop
test
decl
stos
cmp
jne
mov
mov
mov
jmp
pop
jmp
mov
call
mov
loop
das
pop
push
dec
add
test
push
cli
mov
imul
push
push
adc
add
sub
or
pop
push
add
rorb
lock
jne
push
or
shll
xor
in
jl
lcall
mov
jl
out
das
fistps
aaa
nop
clc
fisttpll
xchg
ljmp
cwtl
mov
ja
push
or
iret
pop
adc
les
jmp
sbb
loope
mov
or
xor
gs
jno
mov
add
les
mov
lcall
jp
mov
and
popa
in
xchg
sti
cmp
or
in
testb
sub
dec
cld
call
mov
dec
or
pop
xchg
stos
sub
push
cmp
mov
add
inc
cmp
jl
in
push
cmp
decl
mov
cmp
push
adc
inc
inc
mov
adc
jg
test
jle
insb
xor
outsl
std
pop
lock
aas
inc
cld
cld
adc
dec
inc
std
inc
fcomi
iret
cmpb
jbe
arpl
mov
fwait
mov
sbb
cwtl
push
mov
add
movsb
imul
test
inc
or
andl
pusha
push
add
out
std
ljmp
push
push
or
shrl
lea
sarl
add
pop
pusha
push
popl
lock
fists
sub
mov
xor
ljmp
ljmp
addl
test
adc
orl
fs
aad
mov
pushl
jl
adc
dec
inc
jb
push
cmp
push
loopne
add
inc
cld
mov
sub
popl
paddusb
test
ret
movsl
dec
xor
ljmp
add
jge
mov
roll
js
fbld
test
dec
cmp
sbb
add
loopne
mov
daa
inc
adc
cmp
fsubrs
pushl
ss
push
movsb
int
jp
push
mov
fsubs
sub
jg
push
inc
dec
jne
mov
pushf
scas
mov
push
ds
mov
sbb
xchg
mov
push
ja
push
stos
ljmp
push
xor
add
je
cmpsb
je
or
push
and
pop
dec
call
push
leave
cmp
push
dec
pushf
or
lock
pop
sub
gs
sub
fiadds
add
xlat
mov
fadds
popa
pop
ljmp
sbb
adc
sti
pushl
mov
or
mov
sti
inc
adc
cmp
lcall
in
or
adc
jg
stos
push
mov
sbb
mov
inc
push
fistpll
jmp
or
xchg
call
add
sahf
insb
dec
outsl
push
lods
fadd
int
mov
jo
daa
ss
insl
cli
das
jp
daa
mov
adc
cmp
aaa
shll
ficoms
call
rclb
cltd
adc
jnp
cld
push
dec
adc
mov
mov
mov
clc
push
out
mov
pop
cli
dec
adc
sar
fs
mov
loope
lds
ffree
ffreep
push
lcall
jne
lahf
mov
pop
mov
in
ret
popl
or
jmp
testl
sbb
cvttps2pi
fwait
and
les
rcrl
outsl
hlt
nop
sub
mov
mov
ljmp
shr
sub
add
cmpl
stc
rorb
push
movsb
rsm
fists
sub
add
jno
xchg
adc
out
iret
out
hlt
adc
mov
les
cmc
cmp
js
int
dec
pop
in
in
enter
lahf
mov
test
aad
xor
outsl
lcall
inc
or
decl
test
add
add
dec
scas
imul
ss
lods
incl
push
or
or
jmp
sub
jp
push
dec
and
std
ljmp
in
cmp
cmp
pusha
mov
popf
mov
inc
inc
inc
mov
mov
dec
mov
dec
clc
cs
lods
sti
ja
or
dec
inc
fiaddl
mov
jg
sbb
pop
outsl
leave
sub
sub
loopne
repz
add
ljmp
sahf
enter
mov
std
aaa
movsl
adc
es
gs
or
or
mov
mov
mov
mov
xchg
or
pop
subl
push
inc
mov
mov
inc
arpl
addr16
pop
mov
inc
mov
lea
xchg
stos
popl
add
test
ds
pushl
fistl
mov
jl
pop
or
cmp
dec
les
in
cmp
test
decl
mov
dec
push
pop
loopne
jo
add
add
sub
lds
or
lcall
daa
jne
xor
mov
rclb
call
pushf
in
test
sbb
mov
dec
clc
or
out
pop
ss
outsl
fsubrs
mov
lret
cmpb
decl
sub
lock
xchg
adc
lcall
mov
sarb
or
rcrb
mov
and
inc
pop
outsl
scas
jmp
imul
mov
add
bound
adc
inc
push
cmp
jecxz
ret
jmp
and
pusha
xchg
inc
ret
mov
mov
movsb
enter
cmpsb
fcomip
decl
push
shlb
mov
jg
sbb
xchg
xorb
or
adc
xchg
adc
gs
adc
xor
jae
dec
loope
xor
adc
and
call
fistpll
adc
daa
inc
adcb
inc
fmull
loop
fcom
pop
sub
cmp
pop
test
shll
movsl
mov
push
std
decl
lret
inc
xchg
js
pop
repnz
jg
jmp
imul
movsb
and
mov
int
pop
xchg
lock
add
push
cmpl
call
jnp
les
dec
pop
mov
mov
mov
mov
xor
xor
sbb
ja
push
mov
inc
sbb
jbe
ljmp
add
sbb
sub
xor
inc
sbb
cmp
mulb
nop
pop
pop
and
pop
testb
mov
loop
add
cmp
jb
adc
decl
push
call
ja
out
mov
dec
ds
push
ss
or
pushl
inc
aas
or
add
testl
ret
push
in
mov
call
mov
inc
sbb
mov
or
decl
xor
xor
adc
inc
push
repnz
and
mov
adc
call
aad
adc
adc
jmp
xchg
mov
popa
nop
out
or
fldt
call
ret
jnp
out
or
mov
jg
jp
or
cmp
test
dec
dec
xchg
cmp
xor
incl
addr16
add
push
and
dec
mov
add
pop
push
mov
arpl
xor
out
iret
test
push
adcb
or
icebp
xchg
adcb
ljmp
mov
pop
data16
mov
jno
incl
decl
mov
test
cmp
cmp
add
scas
mov
outsb
or
pop
sub
out
out
xorl
sbb
fs
dec
in
into
mov
shlb
movsl
cmc
sub
aas
add
cltd
nop
fwait
sbbl
inc
cld
fwait
out
stos
fimuls
xchg
add
inc
decl
mov
data16
test
loopne
mov
mov
scas
dec
je
push
popf
mov
add
jl
sub
add
popa
jg
pushl
into
mov
js
pop
pop
add
test
imul
xchg
es
ret
incl
adc
xchg
cld
andl
adc
jnp
es
fsqrt
jmp
adc
lahf
std
pop
out
loopne
mov
push
mov
or
scas
xchg
or
cwtl
incl
pop
mov
ljmp
fstl
scas
push
js
adc
sub
ljmp
push
pop
adc
pop
sbb
pushf
scas
or
or
mov
loopne
cmpsb
stos
loopne
mov
iret
xor
xchg
xchg
cmp
addb
call
idivb
jne
test
add
add
ljmp
sbb
push
imul
adc
insl
pop
push
popa
push
add
lds
sbb
lcall
movsb
or
jg
xor
mov
or
inc
pop
inc
push
inc
ja
mov
xchg
femms
xor
jbe
hlt
decl
inc
sub
lret
rclb
mov
lods
flds
sbb
or
mov
add
or
ss
ljmp
daa
imul
lea
lret
adc
inc
icebp
push
dec
push
mov
add
decl
outsb
add
stos
mov
fdivrs
pop
and
data16
push
cmp
out
push
movsl
cmp
mov
dec
push
dec
add
cmp
call
dec
or
jl
iretw
out
sub
or
push
les
les
rol
popa
std
jno
rol
fisttpll
negl
cli
pop
arpl
rol
daa
imul
inc
neg
mov
inc
or
int3
loop
mov
fwait
push
mov
pop
jne
addb
add
sahf
test
cmp
sahf
pop
lahf
sub
lcall
fsub
inc
add
and
sub
movsb
ret
xchg
outsb
xchg
inc
pop
js
jge
jge
test
clc
sub
das
add
std
dec
jg
sbb
test
xor
mov
icebp
sbb
enter
incl
enter
add
jecxz
or
repz
inc
mov
fimull
sarb
out
decl
xor
cmc
xchg
xchg
dec
jl
or
incl
cmp
loopne
or
mov
adc
dec
data16
mov
adc
push
aas
add
add
in
scas
movsb
and
mov
sbb
and
jge
addl
mov
mov
decl
push
pop
stos
cmp
int
and
pop
je
aam
xchg
and
sbb
pop
adc
inc
add
aam
push
push
xor
mov
mov
rep
mov
push
add
mov
sarl
lea
in
jl
or
sbb
add
adc
fnstcw
cmpsb
jbe
test
pop
addl
and
xor
xlat
aas
pop
notb
mov
inc
add
and
or
and
or
dec
or
jmp
mov
cli
fstpt
add
ret
idiv
mov
or
decl
dec
movsbl
jnp
lcall
sbb
sub
dec
add
xlat
push
orb
jbe
push
aaa
cs
and
sarb
outsl
add
clc
jl
jb
add
out
fdivr
jg
pushl
lock
mov
or
adc
xchg
add
add
mov
jmp
sub
adc
pop
mov
sbb
mov
fnop
xchg
xchg
lret
dec
in
imul
or
sbb
cld
jo
pop
sbb
jle
cmc
int
xor
and
rolb
sar
xlat
dec
out
ljmp
lahf
xor
lahf
add
test
cli
incl
ret
pop
scas
add
xchg
push
stos
jmp
cmp
fwait
push
sbb
sbb
mov
clc
cmpsb
jmp
aas
clc
inc
mov
mov
pop
adc
mov
jb
pushl
push
mov
pop
sbb
scas
insb
inc
dec
jb
dec
test
jmp
mov
shrb
push
insb
sbb
add
or
mov
loope
cld
call
push
jp
jmp
push
cmp
or
sbb
and
sub
cmp
test
and
movsb
repnz
push
or
cmp
push
ds
hlt
jnp
insb
popf
or
leave
jo
jp
or
bound
fisttps
mov
inc
pushl
fadds
jg
fdivp
and
xlat
pop
cmp
and
scas
stos
push
pop
add
add
cli
mov
add
mov
or
mov
and
cmp
mov
xor
iret
lods
pop
imul
add
sub
and
jo
dec
jmp
cmp
mov
leave
dec
dec
out
js
nop
pushf
add
push
dec
movsb
push
stos
test
and
pop
add
lcall
add
mov
push
pusha
push
adc
push
dec
jnp
dec
xlat
add
and
insb
cwtl
paddb
adc
test
push
adc
cld
iret
inc
dec
jg
or
push
and
sub
cmc
call
xor
add
adc
mov
in
inc
out
xor
fbstp
cmp
adc
and
pop
and
aas
lahf
mov
int3
jge
aad
jo
pop
sbb
or
push
and
mov
les
gs
xchg
adc
sub
ljmp
cwtl
adc
rcrb
lcall
dec
nop
pop
xor
and
jg
fidivl
push
inc
push
push
sub
and
dec
pop
jmp
shll
ljmp
adc
push
or
ja
cmpsb
and
out
mov
lahf
outsl
cmpsl
popf
add
cmp
jp
or
pop
push
jno
out
cmpsb
fcmovnu
es
mov
pop
lret
add
clc
aas
sub
add
pop
insl
out
imul
shlb
int
cmp
decl
ds
or
sub
hlt
jbe
add
dec
fsts
icebp
jbe
fnstcw
push
dec
lret
cwtl
hlt
cmp
cmp
or
mov
push
aas
ret
mov
mov
aaa
in
adc
cmpsl
mov
into
lods
sbb
push
inc
popf
inc
shrb
xor
enter
or
je
sub
incl
in
cmp
adc
or
push
outsl
or
clc
push
ss
jp
dec
dec
imul
or
in
data16
sbb
push
loopne
addr16
mov
gs
mov
or
mov
incl
gs
add
outsl
test
addr16
sbb
sbb
adc
dec
outsl
mov
sbb
popa
decl
out
add
out
dec
fldl
es
scas
cld
pop
ljmp
roll
clc
pop
repnz
mov
je
or
or
test
or
in
xchg
xor
repnz
add
scas
rolb
test
pop
outsl
adc
add
or
aas
add
sub
sar
ljmp
nop
aas
addr16
aaa
mov
sbb
mov
orb
lcall
mov
mov
in
das
cli
incl
je
rorb
push
repz
aam
int
jbe
cmp
xorl
cmp
mov
leave
incl
lea
movl
mov
mov
int3
and
push
popl
es
dec
push
dec
icebp
fcomip
inc
imul
pushf
sub
insb
or
dec
inc
leave
inc
rcr
test
aaa
cld
pushl
or
mov
cmp
sbb
sbb
or
sbbb
jo
mov
mov
dec
aad
in
andb
pop
pusha
dec
add
jg
repz
sub
pusha
rcl
sub
inc
stos
jb
pop
popa
push
inc
pop
or
leave
enter
icebp
jmp
fiaddl
xchg
fildll
movsb
daa
sub
cld
jg
stos
jb
mov
jae
movsb
lods
rolb
sub
movsb
pushf
sub
xchg
sbb
out
adc
mov
repnz
mov
jg
incl
jo
outsb
mov
adc
sub
and
lcall
pusha
pop
jb
cld
mov
sub
sub
push
andb
inc
mov
incl
pop
out
add
push
sub
mov
fistl
push
pop
cwtl
pop
insb
push
dec
les
mov
fildll
dec
sub
pop
les
pop
and
es
lods
adc
popl
addb
xchg
or
das
cmp
sbb
or
lcall
pusha
pusha
and
push
lcall
mov
adc
incl
sti
cmp
and
dec
or
clc
mov
sbb
rcll
sub
cli
pushl
imul
push
xor
mov
or
mov
xor
pop
adc
inc
mov
icebp
out
or
adc
popa
or
sub
xor
scas
add
incb
xor
push
xor
nop
andb
mov
in
mov
outsl
out
or
bound
fbld
dec
fs
jl,pt
arpl
push
xor
adc
insb
js
mov
insl
sahf
push
pop
or
xlat
incl
sub
xorb
push
in
cmp
loopne
ret
xchg
loopne
jg
xchg
fs
push
imul
inc
inc
ss
data16
fists
notl
ret
push
lock
xor
jl
movsl
and
or
mov
xor
xor
push
rcrl
add
adc
push
les
in
add
push
mov
xor
nop
dec
sbb
pushl
call
cmpsl
xor
cmovns
in
mov
mov
jmp
adc
test
outsl
xor
loop
fnop
push
clc
push
xor
xor
and
add
ljmp
fwait
ja
sti
cs
jb
push
cld
jns
data16
ret
fnstcw
jnp
jl
jge
cld
fidivrs
subl
insl
int3
into
ss
inc
push
test
jne
fdivs
das
jbe
sarl
flds
ja
fs
ror
lods
pushl
jp
push
fs
aam
in
lock
cmp
or
xor
sbb
push
push
sbb
imul
pop
xor
pusha
iret
xor
sbb
outsl
icebp
dec
enter
cmpsl
xor
xor
or
loope
pop
fs
cmpsl
xor
push
push
xchg
fistpll
out
and
les
mov
clc
js
out
or
mov
loopne
js
enter
lcall
jae
jle
mov
ss
test
in
hlt
cmpsl
fistpll
test
push
mov
call
push
push
test
xchg
notl
nop
pop
ljmp
nop
mov
xor
or
mov
dec
add
add
int
lahf
mov
lea
push
ja
mov
in
mov
idiv
mov
cwtl
idivl
push
nop
and
cmp
clc
mov
clc
or
shrl
in
jnp
xchg
or
aaa
repnz
lret
push
adc
adc
xchg
sbb
cld
pop
sbb
ss
push
mov
bound
dec
adc
sub
daa
cmp
xchg
mov
lds
mov
pop
sahf
push
cmp
and
aaa
jb
sub
add
add
cmp
push
sub
push
push
xchg
sbb
test
lods
nop
jg
cmpl
pop
xchg
int3
data16
inc
push
fimull
stc
negb
or
in
in
sbb
and
pusha
cltd
pop
das
ret
faddl
fwait
inc
dec
adc
cmp
popf
ret
push
outsb
aas
fcompl
fucomp
stc
dec
pop
add
inc
xchg
cs
push
xor
xchg
cmp
xchg
or
js
scas
or
sub
cmp
adc
fwait
test
pop
xor
data16
in
nop
hlt
out
jmp
out
push
adc
sub
into
xchg
sahf
mov
jmp
cmp
or
mov
push
clc
dec
cld
or
arpl
incl
mov
and
cmp
or
cmp
insb
fiaddl
pop
push
pop
push
sub
pushl
xchg
mov
xchg
push
popf
nop
push
lock
sub
cmp
lahf
sub
mov
push
mov
mov
sbb
lock
pop
inc
popa
and
jg
cmp
sub
cmp
hlt
mov
dec
movups
nop
sbb
movsb
adc
inc
fwait
jg
call
aaa
inc
jecxz
mov
push
out
cmp
adc
adc
inc
jo
sbb
ds
adc
stc
sub
cld
scas
add
in
push
inc
add
push
jae
call
lcall
xchg
jl
cltd
xchg
adc
xor
mov
cmp
pusha
inc
incl
or
rcl
sbb
inc
pushl
sbb
mov
aas
cld
incl
mov
inc
aam
in
jb
aam
int3
add
jne
repz
andl
decl
mov
ljmp
xlat
loop
cmpl
ds
push
fcoms
pushf
jge
int
aas
pop
incl
pop
scas
adc
xchg
scas
or
fbld
add
insb
fstps
push
xlat
call
add
aam
neg
out
frstor
cmp
cmp
filds
stc
adc
pop
pushf
xlat
scas
and
lock
sub
leave
inc
lds
jnp
adc
arpl
mov
hlt
sahf
sub
lcall
push
add
mov
dec
ficoms
or
clc
or
pop
subl
cmpsb
out
sub
movsb
ret
add
pop
ss
pop
pop
test
out
mov
or
pop
cmp
test
addr16
mov
aas
clc
mov
cmpsb
loopne
xor
inc
mov
jg
stos
push
cli
ffreep
sub
xorl
inc
test
incl
add
jne
lcall
enter
mov
and
incl
out
ds
cld
lahf
jbe
cmp
insb
loopne
ss
ror
cmp
adc
adc
mov
pop
or
outsl
enter
mov
pusha
xchg
jb
add
pop
stos
sahf
inc
lock
xchg
pushl
cld
dec
fs
dec
mov
pop
rorb
jb
dec
sub
adc
int
outsl
popa
sbb
stos
lcall
pop
insl
fmuls
lods
movl
mov
cmpsl
js
mov
push
and
cld
mov
lcall
and
arpl
inc
in
sbb
or
or
call
mov
inc
inc
sub
jl
jae
cli
dec
push
icebp
mov
xor
jno
clc
cmp
cld
and
mov
decl
out
data16
bound
inc
inc
pop
lock
out
test
xlat
decl
inc
add
or
xchg
pop
push
inc
add
pushl
mov
pop
test
lcall
xor
inc
push
cmp
icebp
mov
or
add
and
jmp
sbb
adc
pop
jbe
jecxz
and
jg
mov
and
cmpsl
fmuls
add
cmp
adcb
shlb
push
sar
call
mov
and
shrl
das
popf
xor
inc
jmp
cwtl
enter
cmp
mov
inc
adc
out
add
shr
jp
testl
or
lret
add
jle
xor
add
ljmp
push
pop
xchg
popf
loope
ret
sbb
gs
push
pop
sub
mov
in
sbb
cmp
outsl
hlt
enter
lea
mov
push
sub
push
sub
lods
inc
push
sub
lcall
dec
or
pop
addb
or
fs
sub
xor
and
iret
pop
and
cmp
clc
call
loopne
xor
inc
or
aas
pop
iret
nop
jo
xorl
scas
call
xor
dec
scas
popf
shrb
pop
insl
jo
dec
and
or
mov
and
std
mov
testl
imul
adcb
push
inc
pop
xlat
out
clc
outsl
and
insb
sub
cmp
sbb
je
leave
push
and
adc
jg
rcrl
pop
lods
or
cmp
ret
pop
dec
mov
add
push
pop
aam
jae
mov
ljmp
pop
inc
inc
jmp
pop
enter
dec
inc
fstp
les
stos
xor
scas
xchg
outsl
in
dec
mov
cmpsl
fwait
mov
or
mov
ljmp
add
add
xor
pop
jne
cmpsl
or
nop
das
inc
and
scas
pop
int
shlb
mov
xor
adc
add
pop
mov
sbb
mov
jnp
inc
sbb
or
mov
das
pop
fisttpl
mov
clc
mov
and
movsl
inc
fwait
xchg
push
add
inc
aas
cmp
jae
mov
add
fld
mov
test
and
jecxz
or
add
push
push
jg
ljmp
and
out
xchg
subb
in
enter
dec
fsubrs
xchg
inc
mov
and
xchg
aad
inc
mov
jp
mov
xchg
xor
adc
js
or
aam
jne
inc
xchg
pop
inc
or
js
call
adc
dec
fisubrl
dec
dec
push
popf
inc
cltd
nop
shlb
adc
pusha
jne
sub
lcall
negb
or
insl
mov
adc
pop
mov
test
mov
lret
and
movsb
test
jne
pop
xor
ljmp
sar
sbb
dec
inc
push
iret
cmp
es
dec
rorb
sbb
pushl
push
in
mov
or
push
loopne
push
or
movb
sbb
mov
and
cmp
jne
push
dec
xor
movsb
inc
pop
rorb
dec
xchg
push
mov
sub
ja
jp
nop
out
jo
stc
mov
cli
pushl
adc
inc
sub
add
add
add
add
adcl
shl
jb
sbb
popf
and
jmp
mov
sub
in
add
outsl
jl
mov
dec
mov
xor
loopne
add
cmp
lods
mov
sub
adc
xlat
popa
dec
push
pusha
dec
add
outsl
lret
addl
push
out
push
add
loop
jmp
mov
inc
dec
iret
pop
arpl
inc
or
mov
xchg
call
or
jbe
les
ja
mov
cmp
rcl
adc
shlb
xchg
push
call
add
sbbb
out
dec
outsb
xor
jo
pop
add
pusha
mov
cs
push
mov
outsl
movaps
or
mov
gs
daa
clc
imul
sub
clc
mov
add
incl
push
mov
mov
cmpsl
dec
stos
outsl
mov
call
lods
add
mov
add
ljmp
lods
sub
test
dec
and
pop
xchg
hlt
pop
in
or
nop
xchg
hlt
sub
dec
daa
xchg
sbb
loopne
lcall
jne
and
or
push
dec
jb
imul
sbbl
and
out
inc
test
mov
pmulhw
bound
call
push
lcall
cmp
push
shll
inc
decl
fists
shrb
dec
jl
xchg
jb
push
xchg
sahf
and
pushl
and
hlt
popf
sbb
dec
push
in
in
ja
call
lahf
dec
dec
push
pushf
ss
in
mov
mov
in
cmp
decl
stc
mov
or
jae
jg
aam
or
dec
or
movsl
add
cmpsb
imul
xchg
push
xchg
mov
and
xchg
xchg
sub
dec
mov
cmp
aad
mov
cmp
lock
std
jmp
push
mov
jns
xchg
mov
pop
cwtl
subl
xor
jmp
sbb
or
stos
int
aas
push
cmovnp
fcomi
jl
out
sub
pop
adc
mov
aas
or
std
test
cmp
incl
sub
loope
pop
xchg
jle
mov
cmp
nop
in
and
xor
out
aad
xchg
cmp
jmp
jns
rolb
hlt
or
rol
mov
mov
mov
push
cmc
fdivr
pop
sti
lea
in
or
push
inc
cmp
ja
xor
pop
and
jl
sbb
fbld
mov
sbb
lods
insb
pop
sbb
push
and
mov
cli
ljmp
fldl
push
je
push
repz
sbb
jg
mov
sbb
popf
pusha
outsb
sar
xchg
out
xorl
dec
push
xor
jg
test
cmp
ss
je
fsubrp
in
push
push
mov
cmp
adc
push
lods
jl
xor
jecxz
clc
jo
out
ja
sbb
push
mov
sbb
cmp
pushl
bound
jl
aas
jo
and
pop
cmp
cmp
xlat
adc
mov
mov
out
pop
push
jo
adcb
aaa
stos
cli
loope
mov
leave
mov
push
or
mov
sub
arpl
incl
dec
add
jp
test
push
je
push
pop
mov
cmp
mov
decl
mov
fdivr
cmp
add
jb
arpl
sbb
jo
test
pushl
or
test
add
xchg
sarl
lret
in
adc
add
mov
inc
mov
xchg
lret
mov
loop
mov
inc
aas
cmpsb
pop
imul
call
jno
movsl
sbb
push
xchg
shlb
loope
push
mov
aas
test
sbb
pushl
roll
jno
mov
jne
jo
lcall
jge
push
sbb
sbb
clc
add
mov
sbb
ret
adc
push
test
mov
test
cmp
adc
fistl
add
stc
mov
jns
js
nop
hlt
dec
test
or
mov
pop
pusha
clc
xchg
mov
ljmp
clc
int3
nop
lret
push
outsl
ret
push
cwtl
push
and
fwait
rcrb
lds
fs
ljmp
jg
xchg
insb
jg
out
push
int
adc
jae
jecxz
lea
in
jmp
pop
negl
or
decl
es
and
push
pop
lcall
imul
add
push
pop
rolb
cld
decl
stos
int3
ret
inc
xchg
add
aas
and
jg
jbe
xor
popf
add
cmpl
loope
fwait
iret
sub
stc
repnz
cmc
test
ljmp
loop
push
imul
popf
push
rorb
iret
mov
inc
jmp
insb
js
cmp
mov
sub
data16
jle
add
lods
inc
lock
decl
fstp
ljmp
cwtl
push
iret
add
movsl
adc
cmp
decl
imul
adc
int
xchg
mov
inc
ljmp
xchg
or
hlt
adc
ret
sahf
test
dec
push
xor
pusha
add
lock
mov
mov
mov
adc
sti
cs
pushl
lea
or
jb
jbe
mov
jmp
push
xchg
ficompl
lcall
jb
add
loopne
mov
scas
sbbb
add
pop
mov
mov
and
push
lret
dec
jg
call
cmp
inc
inc
push
push
xor
sub
push
xchg
adc
add
movsb
xor
scas
lcall
test
lcall
notb
or
movsl
push
pop
sar
lahf
inc
int
lods
adc
mov
jo
roll
lds
loop
inc
inc
dec
jl
enter
divb
adc
nop
xchg
or
add
inc
jnp
push
sbb
enter
rorb
fisttpl
jle
jb
clc
incl
clc
dec
sbb
lret
roll
rcll
jb
divl
ljmp
ret
lea
loope
or
and
or
push
in
sbb
outsl
into
add
decl
aad
repz
dec
push
lcall
pop
mov
push
mov
push
roll
lret
enter
add
jmp
rclb
nop
scas
cmp
std
and
pushl
xchg
data16
jge
inc
mov
pusha
push
mov
inc
cmp
dec
mov
sub
mov
fnstsw
sbb
test
ret
inc
js
ret
or
push
nop
cmp
lea
test
push
test
addr16
mov
adc
pop
call
jbe
sbbb
add
add
push
add
xchg
and
jns
cli
mov
cltd
or
add
cmp
out
dec
xchg
cld
scas
fcoms
inc
push
scas
jo
pop
xor
jg
sbb
jo
mov
rcr
pop
pop
mov
jmp
sbb
inc
scas
and
or
and
and
add
cmpsl
sbb
fmuls
add
inc
andb
aaa
push
ja
push
lods
pop
jns,pn
push
jmp
xchg
clc
sbb
xchg
lahf
jmp
cmc
or
mov
movl
fs
shld
iret
push
jmp
dec
add
subb
cmpsb
pusha
nop
jbe
inc
les
add
ljmp
pop
mov
lret
xchg
pop
or
jg
lods
lea
cmpsl
pushf
call
cmp
pushl
shrl
mov
ljmp
imul
rorb
xchg
cld
jl
aas
pop
rolb
add
push
or
or
popa
cld
imul
lret
pop
push
or
pop
lods
push
cmp
pusha
decl
mov
add
sbb
icebp
test
call
dec
xchg
clc
xor
push
push
sarl
pop
ret
cmp
or
adc
lcall
insb
sub
or
xchg
adc
je
loop
movsb
aas
add
jmp
mov
jle
cmpb
or
je
or
push
lcall
nop
insb
push
push
inc
adc
jmp
js
push
lock
dec
lret
xor
incl
aas
out
sbb
pop
sbb
stos
add
rcrl
cmp
cli
cli
pop
push
fisttpll
call
sbb
inc
shl
and
ret
fistpll
cmp
incl
in
adc
les
dec
lock
fldenv
repnz
aaa
xor
mov
adc
sbb
ret
rcrl
scas
adc
ds
test
jb
sti
pop
hlt
push
or
adc
cmp
filds
push
jnp
andl
mov
call
iret
call
dec
imul
inc
mov
push
call
push
pop
movd
insb
xchg
mov
mov
js
pop
pusha
lahf
adc
rcl
dec
andb
pop
jmp
mov
push
pop
or
or
inc
push
test
das
clc
mov
pusha
cmpsb
mov
and
dec
pop
mov
jg
and
pop
jg
std
add
sar
ljmp
push
rorb
sub
sbb
add
into
rcll
aas
or
jl
push
cs
clc
adc
loop
jmp
mov
pusha
xorl
ds
fcomip
sbb
orb
jmp
in
mov
pop
push
adc
push
mov
push
je
and
jb
jae
cmp
dec
ja
insl
xchg
nop
scas
mov
scas
add
push
nop
inc
adc
mov
aad
je
cmpps
lcall
adc
shrb
popa
xor
jp
loop
addr16
sub
lcall
negl
icebp
nop
add
inc
pop
push
xor
inc
xor
add
inc
ret
mov
cmpsl
ja
in
adc
in
sub
das
mov
call
repnz
xchg
inc
stc
sub
repz
movb
push
arpl
or
push
sub
cmpsl
dec
pop
arpl
dec
add
push
pop
or
sbb
out
andl
cmp
mov
nop
adc
mov
jae
loopne
lahf
js
pop
dec
enter
pop
push
xorb
jl
ljmp
pop
xchg
jecxz
les
mov
or
dec
shll
mov
cmc
push
inc
cmpb
adc
decb
sub
lea
mov
pushf
add
sub
lcall
xor
es
xchg
aaa
sbb
fimull
jbe
or
rcll
xor
mov
xorb
sbb
jg
mov
jnp
ret
clc
jg
ret
incb
clc
or
scas
mov
mov
das
aad
outsb
shll
popa
xor
out
fiaddl
ret
mov
dec
imul
mov
xor
xor
incl
jle
addr16
sbb
lretw
or
sub
adc
sti
mov
icebp
movsb
jmp
lock
fbld
je
dec
pop
outsl
insb
icebp
sbb
push
fwait
mov
loope
adc
ss
inc
cmp
mov
sbb
xorl
cli
in
cmove
or
andl
call
push
clc
adcb
imul
lock
idiv
dec
cli
and
push
shl
aas
test
or
mov
jns
loopne
test
add
call
std
pop
movsb
xchg
xor
mov
adc
stos
in
sub
inc
adc
xor
mov
mov
repnz
fwait
pushf
dec
jge
add
dec
or
mov
inc
add
add
adcl
xchg
shll
and
sub
adc
sbb
mov
sbb
sbb
outsl
shlb
xchg
in
jnp
call
lahf
rclb
inc
dec
xor
push
mov
add
xchg
push
jp
je
clc
push
movsb
pop
test
fdivrp
jne
xchg
mov
xchg
sub
clc
jns
scas
sub
pop
mov
mov
dec
js
stos
cmpsl
sbb
cltd
call
and
aas
iret
xchg
and
mov
mov
mov
pusha
dec
jno
or
test
dec
push
pop
cmc
ljmp
cmpsl
or
ret
in
daa
popf
xor
aas
push
adc
ficoms
or
pop
cli
das
pop
hlt
sub
decl
jg
test
inc
inc
or
fs
cmpsb
inc
xchg
out
rcrb
lods
cwtl
lock
incl
push
inc
lcall
aas
fsubl
pop
xchg
enter
incl
hlt
hlt
add
orl
out
mov
push
dec
repz
sub
rorb
jmp
ficomps
push
idivl
or
mov
cmp
shrl
xor
aad
inc
js
out
out
ljmp
lods
xor
and
mov
cmp
imul
inc
add
adc
repz
pop
xor
sub
enter
inc
push
adc
fcomip
lcall
adc
dec
dec
and
or
push
jg
pop
bound
scas
loopne
pushf
mov
jmp
je
push
rcll
pop
adc
mov
inc
adc
inc
adc
cld
sub
fistps
inc
pushl
sub
inc
negl
rorl
jmp
js
add
lahf
cwtl
ret
movsb
dec
out
popl
inc
loopne
call
jns
adc
push
push
dec
push
cmp
pop
mov
insb
fwait
sbb
incl
nop
pop
jae
decl
add
inc
cmp
daa
push
pop
lock
sbb
add
adc
sbb
or
xor
mov
push
sbb
sub
mov
mov
or
iret
iret
sub
push
pusha
mov
add
nop
out
dec
pop
and
insl
xor
mov
lahf
insl
mov
cmc
iret
fldcw
add
decl
sbb
cld
aaa
fs
jns
arpl
outsb
cmpsl
repz
andb
adc
cld
rep
lods
incl
xor
icebp
push
aad
dec
xchg
inc
sub
and
sbb
hlt
jne
push
inc
xor
orb
outsb
scas
loopne
aad
gs
push
lods
push
stos
shrl
add
lods
sbb
subb
jg
inc
arpl
dec
or
or
mov
and
mov
cwtl
xchg
pop
loop
adc
adc
test
add
das
cmp
sbb
ljmp
sbb
je
push
adc
sub
in
inc
fiaddl
jae
outsl
and
pop
xchg
hlt
not
outsl
rorb
int
push
call
mov
mov
mov
sbb
js
push
rorl
add
les
jg
decl
imul
popa
or
mov
sub
mov
inc
das
sar
call
cltd
subl
enter
xchg
les
pushf
add
pop
mov
pop
sub
cwtl
inc
mov
pop
sbb
data16
add
jge
pop
jns
pushf
std
ljmp
jp
or
sub
adc
pop
mov
test
cmp
jg
or
jl
mov
ds
xchg
ss
incl
outsl
dec
test
sahf
movsl
xor
dec
sbb
gs
cld
test
cmp
add
outsl
outsb
pushl
or
shlb
xor
adc
xchg
outsl
stos
adc
mov
jg
or
mov
scas
dec
test
mov
pop
push
pushl
sub
sub
inc
insb
xor
push
js
or
cmovge
jmp
ds
xlat
jno
mov
dec
les
mov
inc
call
rorb
test
cmp
stos
xlat
inc
and
in
clc
adc
cmp
iret
jb
mov
jp
or
inc
cld
jmp
repnz
adc
shlb
in
push
cmp
lds
addr16
call
mov
add
cs
imul
inc
push
stos
adc
je
incl
cmpsl
xor
in
lock
testb
jne
xor
sbb
mov
sarb
jecxz
xor
fmull
sub
sbb
pop
fsts
add
add
fimull
or
pop
push
dec
call
lock
pusha
leave
mov
xchg
add
lcall
arpl
sti
test
cld
loopne
addl
nop
clc
adcl
test
push
lahf
out
jecxz
fs
fs
ljmp
jne
stos
push
sbb
lcall
jl
rcl
lea
orb
add
incl
dec
pop
rol
hlt
test
xchg
inc
pop
inc
pop
int3
enter
fcomps
jne
inc
out
push
je
mov
and
mov
sbb
or
push
clc
fdivrl
lcall
jne
orl
movsb
shr
and
add
adc
xchg
scas
test
lcall
pop
ret
mov
sub
mov
outsl
test
test
mov
and
lods
mov
sub
call
cmp
or
add
lgs
xchg
repnz
add
inc
mov
call
adc
push
push
or
loope
roll
in
or
push
ret
inc
jl
sbb
in
adc
mov
jbe
ret
es
and
push
repz
lret
ss
mov
nop
pop
push
cmpsb
jecxz
add
jo
nop
roll
ja
rorb
decl
subl
mov
mov
mov
pop
and
test
sub
jg
jmp
shlb
sti
adc
insl
push
addb
fcoms
cmpsb
adc
cmp
rorl
mov
js
ja
push
dec
sti
sub
pop
dec
push
push
push
decl
scas
aas
dec
daa
jle
rcll
pop
js
or
add
rclb
and
call
fndisi(8087
jns
inc
mov
dec
shlb
and
dec
jns
push
mov
fs
dec
lock
incl
addl
mov
xchg
jnp
mov
iret
fstl
lea
xchg
fisttps
adc
sarl
xor
incl
loop
gs
pop
cmp
adc
mov
inc
mov
adc
fcomip
ficomps
sub
je
push
mov
dec
lea
inc
cmpsb
pop
std
decl
inc
add
jp
xchg
insl
xor
or
fbstp
ficomps
mov
inc
jnp
mov
xchg
lret
cld
hlt
pop
popl
or
cmp
xchg
cmp
adcb
sahf
jne
fidivrl
mov
or
data16
sbbb
outsb
hlt
mov
cmp
lods
fistl
test
jg
xor
mov
test
sahf
add
adc
mov
and
sub
xchg
jns
jl
push
cmc
push
or
xchg
add
pushl
inc
push
xlat
xlat
jge
rcl
pop
jge
clc
and
mov
sahf
fidivrl
jmp
adc
adc
pop
imul
repz
mov
rorb
add
jo
jle
mov
clc
cmp
jae
inc
or
lock
or
mov
les
in
inc
mov
mov
inc
call
lea
ret
repnz
in
fnstenv
in
or
sbb
pusha
clc
jmp
je
loopne
or
and
sbb
cmc
mov
fmuls
xlat
fwait
jge
jge
std
dec
inc
or
adc
or
fildl
addr16
les
add
clc
or
jo
cmpsl
jle
cmpsb
mov
outsb
or
incl
cmp
imul
dec
aaa
cli
hlt
testb
mov
pushl
cld
cmp
sbb
sbb
lods
sub
push
aad
cwtl
nop
clc
js
mov
xchg
mov
cmp
inc
filds
jmp
mov
lret
fnstsw
pushf
pop
les
cmp
xchg
cmp
lea
subb
xchg
movb
adc
sbb
and
into
or
push
dec
clc
and
dec
cmp
sti
mov
ljmp
xchg
ror
lods
std
push
cmp
decl
xor
sub
jne
imul
out
xchg
mov
and
lcall
mov
cli
jbe
adc
test
lds
sbb
arpl
or
aaa
adc
fnstenv
scas
dec
movsb
fs
out
mov
mov
push
loopne
rorl
hlt
mov
shll
pop
mov
add
mov
incl
cmp
hlt
rol
push
rolb
cmp
fldcw
rolb
scas
adc
sbb
ja
scas
add
test
cmpl
or
xor
jbe
das
aam
shlb
mov
or
push
adc
decl
cmovne
stc
cmp
dec
or
or
repnz
push
xchg
or
pop
mov
iret
add
cmp
call
fdivl
add
pop
orb
out
push
dec
and
andb
lcall
xor
inc
clc
cmp
ss
addr16
gs
add
adc
lret
inc
xchg
push
dec
push
add
movsl
aam
cmp
push
out
shrl
xor
jecxz
fbld
or
jne
cli
adc
adc
stc
out
jmp
dec
add
adc
int3
xor
mov
shl
call
sub
pop
adc
fbstp
movsl
pop
and
cmp
or
cmp
and
jnp
test
jmp
pusha
das
cmp
adc
xchg
pushf
sbb
inc
pop
xchg
dec
sbb
bound
jmp
mov
decl
lcall
inc
push
or
mov
adc
xor
bound
decl
mov
aaa
dec
mov
cmp
push
loop
call
repnz
xchg
xchg
mov
jae
idiv
fdivs
add
inc
and
and
bound
inc
ret
xchg
nop
scas
fwait
es
aaa
and
add
mov
push
push
jge
outsl
in
sub
lea
push
jl
insb
push
dec
fdiv
fdivrs
add
mov
in
dec
adc
or
incl
adc
movsb
pop
addr16
xchg
jl
sbb
iret
and
test
cwtd
js
fcomps
not
adc
jg
call
or
mov
add
fs
dec
sub
and
xchg
jmp
sbb
in
stos
jge
cltd
jp
dec
add
pop
or
es
cli
je
shll
mov
or
loopne
aas
cmpsb
sub
push
dec
or
cld
xor
adc
pop
popa
push
jb
out
fldenv
add
sbb
imul
test
hlt
xchg
xor
jle
ljmp
cli
mov
call
push
pop
add
jmp
mov
mov
test
mov
and
pop
popa
xor
popa
shrb
subb
clc
daa
ljmp
aas
or
loopne
mov
lcall
push
xchg
divl
push
jne
loopne
xor
inc
sbb
inc
or
cmp
sub
jg
orl
mov
push
adc
and
cltd
dec
or
mov
jmp
ret
sbb
cmp
orb
jg
out
repnz
nop
cmp
je
xchg
bound
ret
mov
and
and
jg
mov
adc
mov
lcall
adc
mov
adc
mov
inc
sub
xchg
push
xchg
adc
arpl
push
je
jg
add
cmp
adc
dec
jg
mov
mov
ljmp
inc
loopne
sbb
add
sbb
xor
jge
cmp
mov
mov
jg
lcall
fsubrs
pusha
hlt
jl
mov
sub
and
adc
popa
jl
ja
jp
adc
cwtl
xor
sub
jae
test
or
mov
js
outsl
in
int3
inc
sbb
cld
call
hlt
cmp
cli
mov
cli
out
sub
adc
clc
inc
xor
sub
mov
clc
xchg
enter
and
jle
xor
nop
and
dec
push
push
and
mov
push
test
adc
adc
ljmp
nop
and
or
leave
and
sbb
lock
add
mov
add
daa
lock
shlb
jg
jp
push
sub
jg
adc
addl
cmpb
mov
lret
std
add
pop
pop
xchg
mov
outsb
dec
iret
insl
ret
jno
add
sub
incl
fwait
call
subb
sbb
dec
fisttps
dec
xchg
xor
jmp
imul
add
sbb
and
call
add
insl
fstl
add
fists
push
adc
jg
sbb
mov
in
adc
ret
mov
loop
mov
add
incl
mov
sbb
mov
push
ss
aas
jl
into
ret
xchg
jbe
js
cmc
pop
in
mov
dec
test
add
adc
jnp
incl
pusha
sub
call
movsl
aas
mov
xor
jo
xor
pop
rolb
sub
rcl
js
add
movsl
je
rclb
mov
cmp
or
cmc
push
adcb
es
lcall
je
incl
sub
sbb
sbbb
adc
mov
addl
fwait
popf
sbb
rcll
lcall
lods
andb
sbb
lcall
add
decl
movsl
fidivs
lods
sbb
push
dec
inc
xchg
jns
and
mov
popa
loopne
cmp
jbe
andb
arpl
decl
push
negl
sahf
stc
aam
jmp
lods
jge
push
cltd
sub
push
mov
mov
inc
call
lcall
lods
pop
xchg
sahf
xor
ret
call
cmpsl
xorl
clc
sub
jmp
mov
ss
push
enter
xchg
das
test
decl
scas
nop
pop
or
insl
movsb
mov
sub
sbbl
add
pop
add
ljmp
inc
cmp
sbbl
mov
cmp
outsl
jg
movsb
cmc
sbb
jl
popa
fs
xor
xor
and
sarl
mov
popf
push
addr16
xor
push
inc
mov
inc
pop
icebp
mov
imul
mov
test
incl
loope
fdiv
or
into
add
mov
jecxz
movsl
jbe
lods
inc
call
mov
inc
rclb
mov
add
xor
sub
inc
daa
loopne
fdivr
lcall
out
shl
xlat
xchg
mov
or
movsb
enter
xchg
mov
sub
push
jg
jmp
fsts
xor
mov
lcall
mov
int3
inc
cmp
push
adcl
sub
push
ljmp
sub
lcall
dec
add
mov
sbb
xlat
add
and
pop
mov
in
sbbl
or
in
push
push
or
or
out
out
pushl
add
sbb
mov
cmp
call
sub
jp
rcrb
xchg
sub
mov
sbb
or
cmp
add
mov
pop
jmp
inc
adc
fdiv
xorb
jb
aaa
adc
loope
mov
insl
add
mov
xchg
dec
mov
jp
repnz
std
mov
push
pop
or
or
adc
lcall
cmpsl
lods
addb
xchg
mov
adc
dec
adc
lret
imul
inc
mov
and
sahf
addb
jl
jmp
or
decl
mulps
aam
ss
lcall
les
xor
jne
push
push
es
sbb
and
or
push
lea
cmp
loope
pushl
pop
dec
bound
js
sub
jle
or
jle
xchg
and
mov
mov
ret
fldenv
push
push
push
orb
jo
out
cmp
cli
pushl
sub
inc
cltd
out
jbe
popl
add
xchg
cmp
inc
js
ljmp
hlt
mov
rorl
stc
dec
sub
add
cmp
push
test
jo
call
push
inc
les
mov
sbb
repz
aas
inc
or
daa
nop
jecxz
xor
adc
jg
xchg
push
es
jl
adc
call
jl
adc
mov
and
lcall
aaa
dec
jp
addr16
das
push
les
push
sbb
sbbl
loop
add
mov
inc
sbb
mov
aad
and
test
mov
fmuls
ss
push
mov
xchg
cs
cld
dec
xchg
cmp
add
cmp
sbb
and
andl
sar
mov
or
iret
xchg
dec
test
loopne
xchg
push
pop
call
std
fisttps
xchg
lock
xor
rcl
push
pop
fisttpl
inc
xchg
ret
test
inc
shrl
mov
mov
dec
sub
stos
xchg
inc
adc
lcall
sub
jne,pn
clc
dec
addb
mov
sbb
enter
loop
add
mov
or
mov
add
or
mov
add
dec
call
mov
shl
subb
test
je
or
rolb
inc
pop
push
add
bswap
aam
push
push
call
and
jae
add
pushf
cwtl
scas
shll
pop
jnp
fcoml
lock
hlt
ret
jl
pusha
pusha
push
jecxz
jo
or
xchg
mov
lea
cltd
fldt
or
dec
fdiv
out
mov
enter
add
neg
es
subb
adc
cld
xlat
mov
mov
leave
sbb
cltd
mov
lock
jno
xchg
dec
decl
mov
mov
in
and
push
loop
inc
jl
inc
push
or
xchg
pop
dec
stos
outsl
mov
adc
std
lcall
mov
and
inc
mov
daa
cmp
jg
dec
cmp
jg
mov
pop
add
stos
adc
incl
in
shl
xor
xor
adc
jo
jo
stc
xor
sbb
pop
addb
inc
repz
cmp
call
and
and
or
pop
pop
push
imul
std
shrl
push
xchg
ret
movb
adc
xchg
cwtl
add
fwait
pop
sub
lods
andl
movsb
in
orb
adc
inc
or
movsl
call
or
sub
fldenv
or
pusha
dec
aam
add
sub
pop
outsl
add
pushl
jne
xchg
pusha
adc
retw
lea
cmp
call
rorl
sbb
int3
insl
test
and
popa
push
push
adc
ds
pop
lock
decl
mov
push
jae
xchg
js
push
repnz
lcall
je
inc
mov
pushl
std
fists
add
push
cmp
xlat
call
scas
lahf
out
shlb
pop
ret
pop
pop
in
popf
and
adcl
mov
jbe
lret
mov
push
xor
xchg
lcall
jno
lock
sbb
cmp
or
inc
mov
dec
pop
scas
cltd
mov
ljmp
push
adc
inc
or
js
adc
xchg
inc
insl
mov
arpl
fsubrs
mov
jmp
dec
adc
shrl
test
inc
in
or
adc
inc
jp
pop
addb
adc
mov
mov
add
jmp
ret
push
mov
popa
mov
mov
mov
add
xchg
xor
sbb
push
ljmp
aaa
mov
notb
mov
sbb
imul
aaa
scas
clc
scas
mov
push
and
add
lret
xchg
adcl
test
dec
decl
pushf
aam
bound
jp
pop
push
inc
lret
addl
pop
les
arpl
aam
sub
inc
cmpsb
insl
mov
incl
adc
mulb
aad
ds
notl
push
lea
inc
inc
jmp
lods
incl
lea
cltd
adc
ret
sbb
test
movsb
add
jecxz
xchg
cmpsb
mov
mov
lcall
lods
push
daa
inc
xor
cli
cmp
js
pushf
xorb
rorb
adc
ret
xchg
jg
jb
jmp
aad
pusha
mov
jl
add
push
jo
dec
and
push
or
jne
leave
daa
shl
mov
incl
dec
ret
mov
scas
cmpsl
ror
cmp
psubw
inc
repz
scas
and
pop
mov
mov
push
cmp
incl
mov
hlt
fwait
mov
xchg
jno
nop
sbb
ss
inc
jp
cmpsb
and
cli
popa
fs
xchg
inc
jl
js
cli
jecxz
push
or
std
jmp
enter
xchg
or
and
add
lret
sti
inc
loope
xchg
xchg
pop
mov
cld
ljmp
test
dec
movsb
cmp
mov
sbb
rorb
loopne
mov
addb
pushf
nop
xor
ja
cmp
je
jmp
sbb
xlat
hlt
lret
incb
pusha
adc
cmp
pusha
loopne
add
mov
sbb
mov
push
add
inc
inc
xchg
cmp
negl
cli
cmp
jmp
mov
pusha
cmp
fcoml
or
jne
xor
jb
pop
sbb
addr16
fmuls
xchg
sbb
sbb
sar
cmpsl
out
andb
jg
xchg
sub
jge
cmc
or
sti
sub
lods
lcall
dec
jbe
lock
aaa
std
insl
dec
loope
ja
mov
ljmp
pusha
data16
inc
ret
cmp
addb
jb
push
fldl
or
pop
pavgb
add
push
dec
outsl
hlt
adc
push
or
incl
dec
addl
jno
xchg
les
sbbb
incl
add
jno
rcrb
add
daa
jle
inc
and
sbb
mull
adc
decl
test
or
test
xlat
sbb
and
xchg
movsl
sub
daa
es
pop
push
jne
inc
jg
ljmp
mov
and
inc
in
dec
inc
mov
shrl
aaa
in
mov
ret
jmp
cmp
test
je
cmp
dec
lcall
clc
or
enter
jg
or
xchg
mov
add
inc
sbb
jg
or
pop
arpl
adc
sbb
cmp
inc
mov
pop
sub
jno
nop
sbb
lcall
and
inc
mov
lcall
xchg
xchg
jnp
jbe
repnz
sbb
lods
cmp
cmpsl
or
push
pushf
stos
pop
lock
add
enter
and
pop
rol
fildll
je
rol
jge
mov
das
add
add
jmp
mov
fucomi
sub
decl
push
jo
into
ret
xchg
mov
mov
inc
add
add
mov
int3
out
fucomip
andl
jl
sbb
or
sub
push
pop
push
sub
lcall
lahf
ret
fs
adc
loopne
aas
mov
negl
incl
pop
in
lds
or
and
sub
jb
aas
jl
sbb
clc
xchg
jo
imul
stos
das
pop
je
jo
add
xor
adc
ljmp
add
clc
iret
jae
stc
sub
mov
dec
into
adc
xor
or
decb
mov
mov
inc
into
and
ljmp
mov
pop
cltd
das
arpl
mov
mov
nop
and
rcrb
inc
sti
pop
pop
jp
adc
mov
clc
dec
xor
adc
ret
mov
out
mov
clc
aas
insb
jecxz
add
addb
ljmp
cwtl
mov
inc
sub
sub
and
xchg
sub
cmp
mov
mov
stos
ret
push
dec
mov
pop
sub
and
sahf
xchg
sbb
xor
ljmp
aas
fsub
mov
clc
adc
jnp
cmp
push
out
lcall
mov
add
cmp
es
imul
xchg
jge
mov
stc
call
popf
inc
xor
je
test
pop
jmp
popa
test
nop
jg
daa
cmp
fcompl
jae
push
je
add
jno
movsl
adc
mov
outsb
negl
jae
call
lahf
jne
test
add
sub
sbb
sbb
or
sbb
mov
add
inc
xchg
inc
in
fistl
popf
add
or
in
and
jecxz
adc
dec
xor
cs
mov
sub
xor
popa
xor
pop
aaa
mov
push
test
sbb
mov
mov
jg
cmp
mov
jo
mov
xor
aaa
out
sub
lcall
mov
nop
bound
and
fiaddl
jnp
imul
mov
mov
dec
pop
xor
je
jg
stos
out
lods
dec
bound
mov
mov
lcall
mov
or
push
daa
mov
ljmp
push
and
adc
sar
jmp
in
mov
fsubp
xorl
insb
pusha
test
jge
mov
popa
mov
push
aas
into
inc
adc
cltd
sarl
cwtl
push
sub
out
sbb
mov
call
mov
push
jmp
pop
lods
or
dec
fcmovne
jnp
shlb
pop
mov
call
mov
and
or
sbb
mov
iret
adc
mov
pop
lock
jl
add
flds
adc
mov
and
movsl
lahf
je
loopne
adc
sbb
leave
adc
sub
dec
fwait
sar
add
mov
sub
scas
insl
scas
aaa
or
fistpll
movsl
add
xor
enter
xor
dec
stc
push
cli
out
testl
adc
adc
in
mov
xchg
jo
or
mov
arpl
lahf
scas
sub
jno
mov
lods
pop
outsl
push
ljmp
pop
ret
insb
mov
cltd
sbb
mov
mov
mov
nop
ljmp
cli
pop
push
sub
adc
push
clc
lcall
mov
add
mov
sub
decb
lock
je
and
ss
out
ss
movsbl
cmpsb
xor
jg
or
push
mov
cmp
push
inc
das
xlat
xor
adc
pushl
cmp
pop
pop
add
mov
fnsave
aad
enter
ja
cwtl
aas
mov
inc
fwait
sar
mov
jnp
jnp
sbb
ret
add
sahf
enter
push
cmp
xchg
dec
test
dec
mov
fsub
adc
adc
jg
addb
cltd
mov
push
and
mov
mov
or
xor
test
and
sbb
xchg
addr16
mov
sbb
add
nop
mov
cmp
outsb
mov
hlt
lret
lcall
aaa
add
test
lret
pop
push
mov
xor
dec
push
mov
lahf
push
dec
pop
and
sub
sbb
nop
sub
dec
fs
jmp
fs
clc
jne,pn
inc
adc
cmp
mov
fwait
pop
jl
aam
mov
popa
xchg
popf
add
sbb
lcall
out
sub
ljmp
add
push
sbb
ret
or
movsb
xorb
decl
lock
cli
jnp
lea
mov
repnz
pop
shrb
pop
idivl
cs
xlat
inc
notl
mov
pop
testl
mov
sub
mov
pop
std
jg
jnp
inc
sub
mov
mov
dec
pop
filds
dec
cmp
jg
decl
sbb
sbb
shrl
or
inc
pop
mov
sbb
pushl
and
clc
xlat
shr
dec
addr16
sti
call
mov
pop
fiadds
jnp
push
test
dec
ljmp
das
fs
add
pushl
xchg
cmp
imul
xor
jg
push
cs
and
lret
dec
lock
pop
mov
inc
decl
sbb
shlb
rclb
mov
sar
fisttps
push
pop
in
or
mov
fisttpll
andl
inc
js
push
orl
jmp
xor
adc
cmp
scas
and
xor
orb
sub
push
insl
mov
jno
call
push
adc
xor
push
arpl
sbb
xlat
xchg
inc
cli
hlt
ljmp
and
push
dec
push
dec
fs
clc
bswap
sub
scas
xchg
cmpsb
hlt
fbstp
mov
mov
push
mov
call
das
push
mov
inc
fs
ds
testb
add
pusha
test
cmpsl
outsl
orb
test
push
or
jnp
or
mov
inc
mov
push
mov
mov
pusha
and
pop
leave
or
and
jmp
arpl
sub
decl
and
ret
dec
setno
pop
lret
leave
and
test
mov
pop
adc
dec
icebp
dec
inc
mov
xor
les
sbb
decl
lcall
push
pop
add
mov
sub
sub
int3
int3
or
mov
sti
mov
push
fwait
mov
cmpsb
loopne
hlt
add
leave
and
enter
stos
movsb
sbb
jp
btrl
daa
push
xor
insl
incl
cld
outsl
jmp
dec
cmp
mov
pop
xchg
outsl
dec
scas
cmpl
ljmp
fneni(8087
outsb
dec
inc
adc
out
loop
add
push
testb
inc
aam
mov
mov
pushl
add
mov
add
ljmp
sub
outsl
pop
fs
iret
mov
dec
sar
call
add
fcom
fs
lds
mov
pop
push
cmp
ljmp
lock
fidivrl
push
xor
jg
js
jl
call
ljmp
cmp
mov
fdivl
das
sar
pop
mov
aam
or
mov
ficoml
rcl
sbb
es
call
dec
repz
sub
mov
lcall
dec
xchg
lock
adc
mov
incl
fnstsw
jns
sahf
fnstcw
inc
dec
outsb
inc
xor
aad
dec
lcall
adc
push
mov
jmp
leave
insl
push
arpl
adc
test
cmc
and
xchg
xchg
jg
decl
mov
sub
and
dec
lock
sub
mov
xor
mov
mov
ret
lods
sbb
or
rcrb
scas
and
addl
sub
nop
sbb
lcall
jo
cmp
pop
xchg
jmp
testl
call
add
test
hlt
mov
inc
push
cmp
cs
push
or
leave
jmp
test
call
inc
scas
cld
adc
je
std
mov
or
or
add
xor
adc
adc
mov
out
cli
daa
push
je
aas
rolb
clc
inc
add
lcall
mov
mov
xor
jge
mov
repnz
sub
pop
mov
inc
or
dec
dec
mov
inc
decl
push
sbbl
push
xchg
mov
pusha
jmp
les
jecxz
or
push
scas
mov
mov
pop
xchg
adc
sbb
push
iret
pop
lock
mov
adc
pushl
fnsave
sbb
sti
and
je
push
adc
dec
pop
push
and
adc
incl
xor
mov
js
mov
ljmp
and
rclb
push
cwtl
cld
inc
incl
jne
into
xchg
and
and
inc
push
movsl
or
daa
push
mov
hlt
cmp
jmp
shlb
inc
leave
imul
push
jmp
stos
xor
stos
and
in
inc
mov
call
dec
mov
push
sbb
jmp
or
inc
and
cmpsb
rorl
aad
push
jbe
ret
jne
in
mov
or
andl
push
insl
inc
pop
mov
js
mov
call
outsl
mov
insl
dec
fldenv
scas
shll
outsb
jmp
fcmovb
js
cmp
leave
popa
pusha
repz
pop
mov
pop
jmp
pop
mov
lea
jno
bound
shll
ret
adc
xor
repz
fisttpl
movsb
push
jns
xchg
push
lcall
ljmp
aad
repnz
sti
push
pusha
xor
pop
pop
mov
and
add
int
out
cli
dec
or
pushf
orb
mov
filds
sti
jo
jl
jmp
push
adc
add
inc
jmp
lret
lcall
mov
and
cmp
sarl
or
or
pop
enter
cmp
dec
ret
aaa
je
lcall
and
add
ret
add
jne
jmp
sub
ds
dec
js
addr16
hlt
inc
ds
adc
fadd
ret
das
add
dec
push
sbb
rcll
les
add
rorb
inc
sub
mov
test
dec
loope
sub
sahf
mov
pop
mov
cld
inc
cli
pop
pop
loope
adc
call
cld
aaa
inc
cmp
gs
push
sbb
and
les
sub
inc
xor
je
lret
pusha
sbb
jbe
adc
hlt
mov
xor
movsl
inc
jp
add
xchg
icebp
add
nop
mov
sub
mov
and
out
test
push
mov
mov
mov
shrb
scas
push
lcall
and
ljmp
push
pop
daa
push
loopne
push
les
enter
outsb
add
jmp
sub
inc
outsb
mov
mov
jg
js
xchg
jg
mov
sbb
push
test
mov
jo
and
les
mov
cld
push
pop
dec
cmp
imul
or
pop
mov
nop
and
es
decl
gs
lret
xor
push
in
shll
mov
push
adc
inc
ja
push
testb
push
mov
bound
popa
cmp
add
sbb
jno
lock
or
jl
adc
ret
out
clc
push
sub
cltd
js
cltd
mov
xchg
dec
lock
mov
dec
mov
call
dec
jecxz
fs
out
mov
adc
mov
inc
xchg
arpl
leave
sbb
lcall
into
push
enter
push
cmp
jbe
xchg
notl
cmp
sahf
ja
hlt
movsb
push
int3
loopne
push
ds
enter
inc
xor
nop
cli
loopne
adc
sub
jg
mov
mov
ss
xor
in
cs
lods
ljmp
es
in
dec
or
push
in
nop
mov
mov
aaa
dec
clc
push
pop
push
push
dec
loopne
incl
popf
xor
sub
adc
aaa
ret
sar
movsl
scas
xchg
xor
xchg
inc
vmulps
add
mov
sbb
nop
je
and
aam
loopne
leave
movsl
xchg
and
cltd
sar
sub
and
lcall
decl
clc
leave
hlt
sbb
sub
movsl
dec
mov
decl
inc
les
jnp
dec
sbb
mov
mov
and
or
mov
pmuludq
add
out
scas
cmpb
jg
pop
dec
mov
sbb
sub
les
das
sub
cmp
mov
insl
inc
xchg
imul
out
push
xor
call
dec
orb
mov
test
inc
jl
clc
les
mov
mov
je
ret
or
imulb
sbb
or
add
decl
in
sub
movl
mov
decl
fs
ror
sbb
in
xorl
incl
addr16
loop
xlat
clc
sbb
aam
int3
cld
pop
popa
xor
xchg
inc
test
outsl
scas
leave
add
and
push
or
jge
lods
mov
into
xchg
dec
loopne
pop
fs
jle
or
popf
lret
cli
call
adc
xchg
dec
inc
and
out
rcrb
add
dec
adc
mov
out
adc
loopne
shll
xchg
ljmp
enter
imul
or
xor
push
sbb
dec
test
jmp
lahf
addr16
push
inc
outsl
lahf
mov
out
mov
mov
cmp
push
aas
inc
in
sbb
int
roll
sbb
or
fxch
pusha
cmpsl
mov
or
and
xchg
cli
fdivr
pushl
outsb
push
pop
jge
test
mov
imull
or
xchg
jl
fmuls
pop
nop
pop
rclb
andl
push
xor
pop
adc
sbb
shrb
les
call
ljmp
mov
sbb
add
jl
jl
imul
push
ss
outsl
clc
ja
aam
iret
xor
xlat
or
incl
fs
cmp
aam
aam
test
inc
push
push
pusha
int
stos
popf
and
pop
dec
loopne
movsl
into
push
or
or
dec
ja
arpl
adc
xor
cmp
jge
adc
inc
lea
or
mov
xor
push
lock
iret
movsb
incl
orl
jl
popf
mov
out
cmp
pop
inc
pop
sub
stc
sub
mov
jg
jmp
mov
add
cmp
stc
stos
xor
imul
mov
fcmovb
lret
jmp
rcl
or
pushf
sub
jmp
lock
cmp
mov
cld
pop
pcmpeqw
adcl
into
cmp
adc
push
dec
adc
add
lds
mov
daa
cmp
pushl
adc
fst
ret
add
push
subb
mov
jo
loope
or
decl
mov
insb
sub
mov
shlb
outsb
sbb
enter
mov
pop
xor
ljmp
adc
movsb
xor
mov
or
int3
adcb
adcl
mov
cld
jmp
insb
adc
jns
fidivs
sbb
mov
mov
aas
adc
ret
fiadds
shll
jecxz
dec
pop
push
data16
cmp
pop
push
movsl
jl
aaa
fidivs
or
mov
adc
mov
ljmp
sbb
pop
cmp
adc
mov
pop
shl
ljmp
push
push
sbb
and
cmpl
sbb
pop
sarb
lcall
pop
imul
sbb
bound
add
and
ret
cli
push
loopne
call
cmp
ret
sub
ljmp
out
mov
add
mov
mov
sbb
sbb
jb,pt
cvtpi2ps
incl
stos
add
mov
rcll
or
sub
pop
jbe
outsl
add
outsl
add
sub
adc
lcall
and
rcl
add
stos
sahf
adc
inc
cmpsl
pushf
stc
cltd
movsb
xchg
mov
xor
add
lcall
push
lcall
imul
push
mov
jmp
dec
loop
adc
decl
cmp
inc
jge
aas
addl
and
jo
add
xchg
cs
jg
ljmp
jmp
andb
or
push
lock
call
cmp
lds
sahf
xchg
orb
mov
inc
sub
call
adc
outsb
jecxz
lds
and
push
sbbb
inc
cmp
loop
inc
or
inc
inc
jae
cmp
repnz
push
pop
cs
sarb
cmp
movsl
or
fisttpl
jno
mov
push
std
xor
mov
jbe
jecxz
and
mov
mov
xor
xor
pushl
or
push
ss
pop
aam
mov
data16
push
arpl
push
stc
mov
outsb
ljmp
jecxz
popa
cmpsb
or
insl
dec
sub
shrb
sbb
push
add
adc
jmp
sbb
lock
sbb
ret
in
test
jg
lcall
xlat
cmc
and
push
cwtl
add
xor
xchg
or
aad
or
in
jle
pop
push
push
clc
insb
cmp
sub
lcall
pop
or
sbb
adc
adc
push
inc
or
inc
push
outsl
adc
cld
and
xchg
rolb
adc
cld
pop
clc
cmp
cmpsb
inc
ret
mov
or
jo
ss
movsb
and
gs
in
jmp
bound
decl
lods
or
inc
and
xlat
fstps
jno
adc
mov
sar
subl
fnsave
in
or
and
into
shl
lcall
inc
sub
add
sbb
push
jg
fs
clc
push
inc
jg
loopne
sbb
fld
add
push
decl
dec
lret
aaa
pop
sbb
dec
cltd
nop
lret
ret
push
call
hlt
lds
decl
push
imul
loopne
in
push
mov
adc
sub
cmpb
inc
scas
jg
repnz
mov
jp
sub
fisttps
dec
popf
sbb
sbb
nop
addr16
ss
ljmp
movups
adc
lret
cmp
and
cmp
setge
lock
jmp
adc
lcall
lret
cmc
outsl
inc
imul
inc
inc
icebp
dec
add
adc
or
push
adc
xor
orb
push
pop
into
aam
or
addr16
add
mov
push
test
fld
cmp
pop
jmp
inc
push
mov
sbb
das
push
and
incl
sbb
push
push
mov
movsl
rcl
jmp
call
call
sub
mov
orb
mov
inc
call
es
or
je
or
decl
adc
jg
into
pop
jb
mov
shlb
scas
mov
adc
decl
dec
mov
test
push
lock
cmpsb
or
addl
adc
pop
add
pop
fs
or
cmpsl
add
fisttps
call
test
push
in
orb
iret
es
or
cs
and
and
xor
int3
loop
incl
push
js
outsl
mov
fldt
adc
inc
inc
sbb
lods
xchg
sbb
lods
add
es
jns
dec
add
into
add
shll
jo
pop
xchg
mov
outsl
pop
daa
or
xor
fsubl
aaa
inc
inc
mov
mull
pop
arpl
decb
test
dec
stos
nop
xchg
add
test
cmp
movsb
push
xor
sub
jge
test
decl
rcrb
rcll
fnop
pop
cmp
ljmp
inc
sub
out
xchg
push
dec
add
xlat
andl
jg
push
lcall
clc
push
repz
inc
orb
test
adc
sub
pop
xchg
cld
jg
or
xor
dec
pop
arpl
lds
or
and
inc
or
sti
outsl
and
xor
je
cmp
pop
scas
fsubrs
jmp
test
ljmp
push
sahf
xchg
jnp
dec
mov
inc
sbb
push
gs
dec
dec
cmpsl
rolb
outsb
daa
ja
pusha
jle
shlb
data16
inc
and
mov
mov
outsl
mov
inc
cmp
jl
mov
jg
pop
add
dec
xchg
xor
adc
jp
push
pop
jge
mov
test
dec
pop
push
mov
mov
dec
jae
gs
xor
push
jmp
addr16
ficoml
inc
add
scas
decl
push
add
add
adc
jl
popl
inc
adc
inc
and
shrl
sbb
rclb
faddl
call
test
jmp
pop
xorb
mov
xorb
and
inc
and
ljmp
cmp
shrb
hlt
and
and
enter
es
out
mov
imul
add
loopne
cmp
dec
jne
mov
rcll
or
push
stos
pop
imul
sub
pop
or
insb
add
ja
aas
push
paddq
xor
scas
fcomip
aas
or
mov
int
cmpsl
adc
test
pop
idiv
loop
adc
loop
pop
arpl
or
stos
idivl
cmp
out
or
mov
jle
xlat
scas
sbb
shll
and
dec
and
pop
xor
scas
jp
push
cwtl
pop
popl
xlat
cwtl
mov
or
push
popa
xchg
push
test
xlat
subl
cmp
movl
xlat
pop
jp
xlat
test
jmp
dec
rorb
ja
xchg
xor
ret
sub
adc
jmp
adc
iret
gs
xor
pop
popf
mov
fidivrl
es
icebp
mov
mov
cld
push
mov
push
xchg
cs
inc
lahf
aaa
dec
dec
dec
aas
sbb
inc
inc
inc
mov
push
inc
je
int
hlt
cmp
cmpsb
jo
sbb
xlat
push
sbb
loop
mov
mov
dec
pusha
sahf
jns
mov
mov
xor
cmp
call
cmp
jo
sub
test
xchg
xlat
es
cld
jnp
push
sbb
lret
incl
mov
outsb
out
pop
and
push
fnstsw
das
xor
lock
pusha
loop
or
pop
out
mov
inc
loop
cmp
call
sub
add
and
pop
mov
inc
fs
xlat
pop
or
add
fwait
inc
insb
gs
into
xlat
orb
xor
mov
mov
sbb
aas
adc
incl
xchg
pop
imul
push
or
push
iret
repz
and
adc
push
cmp
xchg
or
jbe
fidivrl
sbb
incl
imul
xor
add
sbb
push
shrb
fdivl
or
test
xor
add
fcompl
sti
fnstcw
cli
pop
mulb
and
cli
ljmp
jo
pop
cld
or
dec
mov
lret
pushl
mov
push
push
mov
cmpsl
add
sub
daa
out
subl
inc
inc
shl
sbb
and
in
loopne
pop
ror
stc
and
filds
lods
js
hlt
push
fwait
push
aas
sub
hlt
jg
pushl
sub
adc
push
jg
fwait
es
or
mov
add
lcall
decl
aam
push
out
or
mov
icebp
add
sbb
sub
incl
mov
push
mov
pop
push
in
test
fcompl
ror
xorb
movsl
pop
shlb
popa
mov
cwtl
ret
lcall
and
fsubs
cmp
pop
rcll
daa
add
sbb
ret
loopne
rcrb
push
jp
std
push
sub
adc
xchg
push
adc
adc
jecxz
addb
fistpll
push
pop
sbb
xchg
cmpsl
sbb
sub
and
in
dec
adc
imul
shlb
mov
jg
pop
testb
push
stc
mov
loop
and
push
sbb
jge
imul
cmp
insb
std
push
cld
decl
add
sbb
adc
sbb
sub
std
or
cmp
push
decl
or
sub
mov
mov
inc
popa
mov
dec
pushl
add
fcoms
xlat
or
adcl
or
mov
insb
mov
sub
or
push
push
mov
pop
sub
push
mov
pop
mov
pushl
sub
dec
aaa
mov
dec
jbe
pushw
add
or
nop
inc
leave
mov
push
roll
sbb
jmp
and
sub
ljmp
pop
call
fdivrs
jae
add
dec
fsubs
mov
test
hlt
or
call
and
cmp
mov
jbe
outsl
and
or
popl
xchg
scas
cmp
call
xchg
mov
je
push
lods
sub
nop
inc
negl
ficompl
jmp
add
push
out
out
pop
cs
sbb
xor
sub
jmp
xrelease
mov
imul
das
xorl
movsl
sbb
jl
test
add
decl
push
mov
aam
inc
jae
shlb
outsl
push
fsubr
jo
pop
out
jnp
pop
push
rcll
sti
ljmp
push
cmp
mov
add
push
jo
in
xor
jo
pushf
jp
call
daa
int3
xor
push
ljmp
orl
lcall
mov
ret
scas
pusha
add
add
fstpl
pop
adc
or
out
jae
call
sub
xor
js
imul
sbb
call
xor
inc
aas
xlat
or
cmp
jmp
mov
cs
sbb
imul
sbb
js
unpcklps
ja
fildl
jmp
add
push
popa
jns
mov
fnstenv
inc
dec
loop
out
and
out
js
jb
in
inc
aas
push
xchg
adc
ja
adc
mov
mov
mov
in
decl
dec
adc
lret
idiv
add
pushf
in
mov
ljmp
movsl
repz
stos
pop
mov
or
mov
mov
scas
sbb
adc
in
decl
mov
lahf
testb
sub
push
cmpb
add
sbb
inc
addb
adc
fcomp
in
pushf
xchg
adc
push
xor
cld
push
ljmp
mov
stc
xor
cli
shlb
push
jo
faddp
sbb
call
fmull
mov
repz
inc
adc
shl
aad
xchg
mov
mov
xchg
dec
es
sbbb
add
or
pop
sbb
push
push
std
lcall
xor
enter
out
or
scas
in
xor
nop
push
add
mov
add
rol
lea
cltd
xchg
or
push
mov
in
leave
fs
add
ja
and
xor
add
clc
jg
or
into
cli
push
inc
cmp
add
adc
mov
rolb
pop
mov
lods
sbb
repnz
inc
test
push
push
inc
inc
add
push
jg
lock
addb
popf
and
or
test
dec
ds
pusha
fldl
incl
mov
andl
fisttps
or
les
fldpi
data16
jmp
bound
mov
and
and
push
fs
cmpsl
les
adc
push
inc
test
hlt
adc
sub
add
xchg
xor
or
lcall
fs
hlt
out
inc
xor
mov
outsb
mov
loopne
out
add
adc
incl
inc
insb
jmp
mov
sti
dec
inc
imul
imul
inc
shrb
mov
adc
push
mov
mov
les
dec
dec
jmp
cmp
add
rcr
clc
incl
mov
and
xchg
push
jp
dec
jns
nop
jo
cmp
xchg
outsl
clc
out
xor
add
mov
scas
mov
decl
lods
add
in
xchg
loopne
lods
pop
inc
add
and
inc
shlb
jp
frstor
push
fnop
pop
mov
add
lods
add
add
clc
ljmp
mov
or
inc
jns
add
mov
ljmp
pusha
adc
lds
add
add
sbb
mov
or
inc
nop
icebp
mov
or
and
cmpsl
js
and
dec
mov
fwait
ljmp
loopne
xchg
or
dec
jo
adc
pop
fistl
cmp
add
lcall
mov
adc
in
in
sub
inc
cmovs
adc
ljmp
sub
aam
add
in
push
xchg
addb
jnp
ss
jmp
cli
add
popa
pop
lret
mov
jge
sub
lods
test
jge
xchg
sbb
xchg
rclb
gs
incl
ret
sub
rorb
pop
cmp
xchg
xchg
and
out
aam
cs
lods
sbb
sbb
xchg
lock
es
add
idiv
ljmp
inc
mov
or
cmp
add
push
mov
cmc
enter
lcall
cmp
iret
mov
sub
leave
js
repnz
notl
sub
pop
das
idiv
mov
loopne
push
inc
clc
lock
push
xor
decl
pop
test
add
aam
test
out
or
adc
out
icebp
sbb
mov
bound
xchg
push
enter
rolb
sub
andb
and
test
sub
cli
pop
push
or
inc
jg
pop
xor
xchg
aaa
push
flds
idivl
pop
jmp
mov
cwtl
ret
xor
in
push
jp
shrl
je
inc
dec
test
lahf
inc
ljmp
pop
outsb
es
es
das
sub
incb
or
xchg
jg
mov
add
mov
mov
or
movq
mov
mov
push
jno
sub
mov
xor
pushf
test
sbb
dec
jne
shr
nop
test
inc
idivl
sub
sbb
jg
fildll
pop
pushf
pop
inc
dec
xchg
loop
xchg
and
inc
jnp
shrl
leave
in
xchg
and
imul
imull
scas
mov
push
sqrtps
push
push
push
push
pop
pop
pop
ficoml
pop
pop
pop
inc
pop
jns
fstpl
dec
dec
dec
dec
dec
dec
dec
dec
xor
vmwrite
fstp
hlt
cmp
cmp
ds
and
cmp
and
in
push
sub
sub
adc
adc
xchg
push
pop
adc
sbb
sbb
push
pop
add
or
add
add
movswl
decl
or
or
clc
lret
push
add
movsb
add
sbb
fs
xchg
mov
push
lock
bound
repnz
sbb
stos
and
sbb
orb
sub
sbb
test
mov
mov
adc
ljmp
or
cld
loopne
data16
mov
nop
xchg
adc
mov
in
and
pop
cld
add
xor
adc
jae
je
jle
lea
fdivrp
sbb
jg
mov
jg
sbb
adc
fildll
and
rorl
arpl
adc
sarb
int
adc
gs
mov
gs
cmc
mov
sahf
push
out
and
add
pushl
int
jl
jo
mov
mov
outsl
sbb
push
inc
sbb
mov
add
sbb
cli
call
or
cwtl
pop
cmpl
cld
call
xor
inc
les
sbb
mov
adc
and
call
jnp
push
mov
or
add
int3
xchg
nop
in
std
cld
xor
fsubrl
insb
sub
jnp
idivb
sti
unpcklps
or
inc
jns
adc
mov
or
pushl
or
fistpl
inc
imul
adc
xor
es
pop
xor
aas
testl
pop
adc
pop
or
jmp
jb
or
stc
sbb
mov
mov
rdpmc
or
dec
jl
jp
mov
xor
sbb
je
adc
sub
pop
in
sub
sbb
inc
outsl
decl
mulb
ljmp
push
mov
fisubl
negl
mov
cwtl
push
mov
push
ljmp
mov
and
sbb
andps
ja
incl
roll
dec
pop
leave
sbb
sub
cmp
sbbb
push
sbb
xor
cmpl
xor
incl
insb
add
ds
mov
xchg
sub
psubw
xorb
push
add
jo
push
ljmp
out
add
mov
dec
jecxz
xor
insb
aaa
mov
dec
mov
mov
incl
and
jl
int3
add
pop
in
mov
mov
inc
xorl
push
add
call
jno
and
push
adc
mov
sahf
idiv
call
adc
call
sub
inc
add
mov
add
or
repnz
mov
sbb
pushl
std
les
cmp
sarb
mov
jo
sbb
sbb
mov
ds
lcall
rep
push
and
cmp
xchg
jns
pop
jmp
add
adc
movsb
or
push
xor
push
mov
les
push
mov
sbb
cli
pop
and
data16
and
loopne
daa
in
in
jg
inc
lods
pop
repnz
pushf
and
jg
pop
cli
mov
icebp
add
mov
push
shr
ret
addb
pushl
xchg
push
sub
aas
int3
test
pop
lsl
push
shlb
call
and
or
add
push
cmp
bound
sbb
sub
mov
mov
out
ficoms
add
lock
clc
ss
pop
jbe
add
sub
fildl
ss
push
xor
add
hlt
mov
sbb
pop
iret
subb
fadds
sub
pop
ret
jo
mov
scas
or
std
ljmp
insb
mov
xor
cmp
dec
dec
pop
xchg
xor
and
imul
mov
pop
lcall
cwtl
or
dec
dec
and
std
add
xor
int
adc
sbb
fsub
xlat
add
mov
loope
mov
push
add
mov
mov
push
insb
filds
adc
rcrl
or
or
outsl
dec
arpl
add
ljmp
cmp
aad
push
inc
pushf
sti
push
xchg
popa
cmp
add
cli
jmp
mov
push
lret
in
cmpsl
adc
push
mov
push
xchg
ljmp
out
or
pop
dec
sbb
lock
mov
call
inc
fcoml
pop
xchg
pusha
lcall
sbb
sub
add
xchg
sahf
add
push
das
lcall
movsl
mov
pop
sarl
rcrb
pop
pop
push
in
inc
mov
rclb
pop
inc
jle
scas
das
lods
add
dec
sub
dec
testl
push
mov
in
in
sti
xchg
in
pop
dec
decb
pop
das
test
fnstsw
pop
subb
jbe
ljmp
jle
insb
pop
call
inc
push
cmpsl
dec
clc
pop
orl
cmp
adcb
and
add
cmp
sbb
cmp
int3
rcr
fdivrs
cmpsb
jo
and
or
sub
fisubl
pushl
sub
les
dec
pop
aam
or
mov
hlt
xor
fstps
adcb
add
push
push
sub
mov
call
dec
fstpt
mov
fistpl
push
push
clc
jp
movl
pushl
std
push
jl
mov
xchg
fs
pushf
cvtdq2ps
fidivrl
fcomip
pop
hlt
bswap
mov
movb
mov
add
decl
stos
cmc
or
testl
out
add
mov
popa
in
insl
jg
clc
jbe
fmuls
xchg
xchg
cwtl
sub
rcl
outsl
add
sub
hlt
push
fstp
inc
pop
bound
push
or
dec
cmc
jo
pop
add
add
xchg
loopne
pop
adc
mov
lcall
cmp
inc
push
out
push
lahf
pop
pop
pusha
fs
gs
push
pusha
out
enter
mov
shl
jmp
push
mov
push
arpl
imul
xchg
jbe
lock
sbb
or
sub
cmp
jns
xbegin
jg
mov
clc
or
insl
rolb
and
pop
in
out
incl
cwtl
xchg
int
enter
aam
pop
jg
mov
sbb
subb
fadd
sbbl
jbe
notl
push
xchg
mov
sar
xorl
int3
xor
imul
test
xchg
mov
scas
nop
adc
xchg
sub
jg
add
rcrl
or
or
push
and
loopne
daa
nop
jg
or
stos
jle
jbe
fcompl
cmp
xchg
xchg
pushf
fcomps
ret
xorl
lcall
add
out
in
lcall
push
jl
aaa
or
out
idiv
jg
popf
xchg
push
mov
rcrb
cmpsl
outsb
test
mov
or
push
sub
xchg
scas
decl
cmp
ror
ss
sub
and
sub
mov
lcall
mov
adc
dec
pop
dec
subl
ss
fistpll
sub
js
mov
xor
adc
jle
mov
mov
mov
icebp
lahf
ret
push
mov
pushf
mov
add
cli
jmp
push
xor
pop
ret
fbstp
add
bswap
push
fists
pop
scas
mov
ljmp
aam
add
les
sbb
or
je
sbb
adc
pushl
clc
add
aaa
movsl
mov
rcl
inc
cmp
in
and
dec
or
pushl
cli
jp
test
xor
push
dec
or
ja
ljmp
mov
mov
inc
incl
sbb
sub
or
scas
test
mov
cmc
std
movsl
push
or
push
xor
icebp
push
cld
push
ret
fiadds
adc
push
es
aam
dec
shlb
lcall
lret
data16
lcall
cmc
cmp
icebp
xor
aam
and
sub
fwait
das
and
loopne
das
adc
es
incl
cld
call
mov
mov
adc
jb
and
mov
pop
lahf
sbb
push
sarb
fcomip
stos
outsl
push
cld
and
adc
in
pop
jmp
adc
add
std
xlat
cmp
rorb
decl
mov
mov
xlat
lds
clc
imul
xchg
rorl
jle
fst
cld
and
jp
xor
in
jmp
roll
and
aam
sub
mov
test
mov
incl
push
mov
dec
in
jl
fildll
mov
clc
pop
out
in
movsb
jno
jg
call
movsl
jmp
outsl
iret
fs
adc
ret
incl
sub
adc
xlat
mov
and
sbbb
lods
pop
fistl
dec
pushl
xchg
imul
insb
in
push
clc
push
push
loope
popl
arpl
jnp
jle
push
popa
adc
mov
pushl
dec
xor
xchg
mov
ja
sarb
fcomip
jg
push
imul
scas
push
dec
in
imul
jne
mov
gs
ljmp
push
jnp,pn
ficompl
es
pop
popa
scas
xchg
add
cmp
mov
pusha
dec
jecxz
add
or
cmpsl
jl
les
pop
pop
cmp
pushl
jne
lds
inc
xor
jae
sub
clc
push
scas
iret
push
ret
popf
jno
mov
lcall
and
pop
bts
push
imul
js
or
ljmp
dec
push
popa
sbb
adc
inc
sti
inc
pushl
mov
push
inc
sahf
mov
sbb
scas
jo
push
and
lock
nop
cmp
or
stos
roll
jne
mulps
dec
je
inc
xchg
out
pusha
pop
cmp
mov
orl
push
jecxz
or
or
outsb
or
decl
jp
or
pop
dec
popl
jp
sahf
push
jne
je
movsb
push
ret
fdivr
incl
or
arpl
sbb
mulb
sub
popa
jg
sbb
stos
or
jnp
inc
push
mov
aam
incl
or
xor
mov
adc
push
je
aaa
adc
sbb
fidivs
decl
outsl
inc
inc
or
mov
xorb
push
daa
jne
loope
ss
daa
jb
fildll
daa
xorb
pop
jle
aaa
inc
out
push
xor
decl
insb
push
cmp
or
or
push
mov
sbb
imul
ret
es
sub
movsl
pop
push
push
push
pop
inc
insl
cmpsl
sub
xorb
shrb
ret
push
add
xor
jp
test
cs
lcall
cltd
pop
or
mov
inc
cmp
sbb
pop
out
test
dec
testl
sub
pop
sahf
push
scas
inc
sub
push
jnp
ds
cmp
out
nop
rcrb
pop
stos
dec
push
out
sbb
or
inc
lahf
mov
ss
cli
cs
push
call
mov
dec
add
jl
pop
mov
or
out
jecxz
adc
inc
inc
xor
xor
decl
xor
call
cmp
ja
movl
pop
mov
pop
inc
cs
dec
dec
or
mov
lcall
push
xor
dec
addr16
inc
imull
dec
sti
scas
push
addr16
ret
mov
push
xor
sbb
lcall
sbb
loop
imul
push
je
adc
loop
repz
inc
push
add
call
xchg
out
jle
adc
dec
sub
pop
xchg
dec
scas
push
mov
bound
jecxz
mov
or
fiaddl
pop
lea
mov
xor
icebp
jmp
jge
dec
push
ds
cmp
int3
shll
dec
push
mov
mov
fisttps
mov
cmpsb
mov
clc
or
out
es
es
imul
cwtl
adc
lea
jecxz
mov
and
iret
or
add
inc
lahf
xchg
jle
sar
loop
nop
mov
or
repz
or
jmp
incl
mov
mov
xchg
mov
or
xchg
int
xchg
and
and
lahf
aaa
pop
adcl
nop
mov
mov
into
sbb
adc
bound
jg
daa
mov
lods
test
sbb
mov
lea
adc
subb
ret
sbb
ljmp
jecxz
imul
pop
mov
adc
dec
out
sahf
mov
and
lods
add
adc
js
push
mov
incl
and
ret
mov
and
dec
jbe
fistl
xor
sbb
andl
shlb
sbb
pushl
and
sbb
adc
and
push
mov
lea
push
fisttpll
dec
imul
or
call
fcom
or
mov
pushl
cmp
addb
jge
fsubrs
cmp
jae
xchg
jmp
dec
cld
xlat
mov
loopne
and
sub
outsl
clc
jg
mov
sub
mov
mov
push
lea
fstl
or
mov
pusha
lods
pop
notl
xchg
decl
fdivp
add
sbb
sub
lods
xor
dec
sbb
inc
in
xchg
or
jae
cltd
pop
repz
sbb
mov
or
sbb
adc
lret
fimuls
sub
lcall
mov
sbb
or
or
mov
adc
ljmp
dec
call
and
dec
mov
mov
and
mov
pusha
xchg
mov
cmc
mov
pop
ud0
fucomi
insb
or
mov
jp
inc
clc
mov
mov
cmp
sbb
sahf
inc
cmp
pop
arpl
cwtl
insb
mov
das
or
sub
fbld
jl
sub
xchg
mov
jmp
ja
out
add
cmc
mov
loopne
push
shlb
decl
mov
and
fstl
inc
cmp
add
or
adcl
mov
dec
mov
sbb
call
xchg
scas
add
mov
inc
lret
out
pushf
mov
jecxz
mov
shl
xor
sub
arpl
pop
cli
push
arpl
push
dec
insl
sarb
push
imul
pop
pop
dec
ds
lcall
cmp
xor
jg
decl
ret
loopne
xchg
xchg
jge
and
shrb
sbb
xor
lods
xor
stos
lcall
leave
inc
sub
cs
in
jp
xor
or
incl
das
mov
inc
addl
test
cmpsb
jg
push
sbb
xchg
mov
sbb
inc
pusha
shr
mov
push
jo
mov
adc
and
mov
xor
xchg
mov
xchg
mov
xchg
out
mov
leave
insb
xor
out
jg
push
enter
fbld
decl
inc
repnz
sub
sbb
add
push
movsb
dec
hlt
xchg
addr16
shlb
lock
xor
xor
and
and
push
mov
add
add
and
test
fs
pop
repnz
inc
lock
icebp
sub
mov
push
daa
jbe
mov
clc
rcrb
in
js
mov
fstps
or
test
test
cltd
lea
daa
js
mov
ljmp
add
aas
jp
scas
test
mov
sub
in
dec
add
fwait
and
adc
in
mov
cmpl
dec
sub
aas
and
sbb
dec
push
in
pop
inc
loope
ss
sub
push
aaa
ja
das
push
cmp
ljmp
enter
xchg
cwtl
push
movb
add
repnz
adc
aas
sub
mov
out
mov
dec
in
hlt
out
cmp
cmp
add
and
stos
addr16
jg
ljmp
dec
mov
sub
or
mov
fwait
xor
fadds
xor
daa
xchg
std
ljmp
rorl
fs
sub
push
sub
cmp
repz
fisttpl
das
ljmp
pusha
sub
pop
jle
xor
add
adc
pop
and
in
inc
sub
scas
cli
lcall
insl
xchg
pop
or
add
mov
pop
lcall
repnz
mov
cltd
data16
inc
and
add
pop
js
shlb
nop
add
and
adc
lea
incl
ds
or
pop
sbb
xchg
sahf
popf
add
adc
mov
call
lock
pop
fwait
js
in
hlt
push
subb
cld
outsb
incl
mov
xchg
cmp
into
pop
jo
dec
mov
lods
cwtl
adc
faddl
add
pushl
xor
xor
xchg
fstpl
inc
mov
outsb
xchg
lock
ret
lods
or
xchg
cld
lcall
js
xchg
lahf
xchg
sbb
int3
sub
adc
loop
inc
mov
pusha
cmpsb
sbb
add
and
decl
imul
push
inc
and
mov
movsb
aam
scas
lods
test
in
push
adc
les
rorb
jge
shll
jle
scas
lock
hlt
sbb
jg
add
sbb
out
out
push
jno
decl
sub
or
or
xor
ja
push
push
or
fisttps
and
or
sub
decb
inc
xchg
push
imul
xorb
push
arpl
js
imul
fmuls
cmp
fmul
mov
sub
xchg
testb
lcall
dec
sbb
cmp
iret
and
out
push
adc
nop
fs
aas
add
ljmp
clc
aas
nop
push
pop
das
mov
andl
or
push
cmp
dec
push
insl
jg
rolb
inc
mov
jmp
jle
pop
incl
sbb
jmp
jo
push
push
pushl
inc
cmpsl
add
sbb
call
or
vmulsd
adc
pushl
xchg
xor
mov
ret
scas
jo,pt
fnstcw
add
shl
push
aam
adc
test
or
inc
data16
dec
push
jge
add
mov
adc
xor
sbb
mov
popf
push
rcrl
insl
pushl
mov
sbb
push
fsubl
and
push
push
pop
pop
or
stc
outsl
add
mov
aas
divl
and
mov
mov
add
shll
mov
addr16
pop
cmpsl
mov
xor
decl
jmp
sbb
push
test
aam
rolb
jb
cmp
aas
iret
ljmp
pushf
fadd
std
add
add
insb
imul
inc
xor
pop
jae
push
adc
lret
fildll
pop
jb
mov
cmp
ja
or
dec
xor
push
or
push
cld
adc
lret
xor
cmp
test
test
add
ja
inc
mov
cwtl
decl
into
xor
or
call
pop
xor
adc
decl
or
sbb
les
pop
cmp
add
int
add
jmp
outsw
fadds
imul
pushf
not
and
jg
stc
or
ret
test
mov
ss
mov
mov
decl
push
cltd
push
outsl
push
test
mov
mov
fldl
xor
mov
das
add
rcll
push
hlt
arpl
sub
inc
loopne
jg
sbb
js
scas
or
fldt
inc
adc
pop
push
pushl
out
dec
ljmp
lret
imul
push
adc
add
rorb
lcall
push
add
or
or
gs
sti
daa
sub
lcall
dec
lret
pop
js
test
lahf
pop
mov
sbb
es
or
sbbb
jmp
hlt
mov
sub
out
mov
adc
ret
pop
aad
cwtl
mov
movsl
pushf
inc
movsb
dec
xor
das
int3
sub
add
idivb
jno
cmp
add
repnz
add
jnp
or
and
ljmp
add
das
cld
mov
loopne
xor
cmpsl
notb
jg
mov
jl
add
outsb
push
in
stc
xchg
cmp
sub
push
jne
push
dec
lods
push
cld
ljmp
cli
xchg
fbld
mov
mov
fdivrs
push
shlb
push
add
jg
mov
fisubs
lea
push
jg
inc
dec
cmp
xchg
test
rcr
idiv
fistpll
orl
test
stos
je
int3
or
mov
jp
push
pop
es
cltd
hlt
adc
dec
out
sub
jle
push
jmp
push
loopne
push
push
int3
mov
pop
mov
in
add
outsb
mov
bound
or
add
cmc
lret
aaa
cmp
imul
in
sbbl
hlt
inc
movsl
test
imul
cmp
cld
call
cmpsl
popf
icebp
in
lock
out
test
pop
arpl
lcall
or
mov
or
adc
test
mov
inc
jle
cmp
imul
scas
shrb
lret
sbb
and
fmull
push
out
inc
dec
add
std
pushl
loope
add
in
pop
ret
cmp
dec
test
inc
lock
jg
bound
mov
and
sub
dec
inc
pushf
push
cmp
jg
loopne
fs
loop
xchg
sbb
cmp
add
sbb
pushf
adc
add
add
rcll
loopne
cwtl
and
and
aas
outsb
sti
push
rolb
push
and
nop
lock
pop
push
cmp
es
lcall
and
adc
pop
inc
xchg
or
sub
fidivrl
mov
fsubl
adc
push
sub
dec
popa
imul
jmp
jns
pop
insl
adc
cld
in
ret
mov
pusha
rcl
mov
testb
lcall
mov
push
jp
and
pushw
lds
jecxz
push
mov
movsl
xor
shrb
repz
mov
decl
rcll
loopne
das
or
xchg
sub
dec
call
cld
popa
cmp
notb
je
ret
ficompl
push
mov
les
pop
filds
lods
add
mov
dec
lcall
add
or
add
dec
sub
test
adc
pop
movb
imul
cmp
adc
bound
dec
aam
cmp
mov
into
mov
lcall
jo
cmpsl
pop
pop
pop
push
das
cli
jg
or
jge
insb
sbb
adc
mov
pop
js
clc
lea
adc
fmuls
mov
mov
and
dec
dec
mov
aam
call
add
inc
pusha
mov
adc
mov
icebp
cmpsl
add
sbb
aad
mov
ljmp
and
jmp
sub
push
cmc
cmp
lods
adc
adc
push
stos
and
push
mov
lea
cld
pop
cmp
loopne
andl
sbb
or
or
cmp
hlt
mov
incl
add
jne
ds
int
gs
push
cmp
out
movzwl
lea
movsb
in
push
push
pop
push
cmp
mov
pop
cs
jmp
addr16
fsubr
dec
pop
call
data16
insb
sub
push
cs
out
icebp
push
and
and
dec
outsl
cmp
xor
cli
scas
stc
push
shlb
clc
popa
ds
push
aas
shlb
pop
fistps
sarb
das
outsb
pop
sbb
test
jmp
or
iret
mov
int
mov
or
pushf
cld
rclb
int
inc
adc
cmp
pop
push
push
pop
clc
inc
add
jge
movsl
fstpt
loop
xchg
inc
aas
and
and
ljmp
inc
mov
dec
mov
or
add
bound
xchg
ljmp
sbb
xor
sbb
sub
cmp
xor
mov
ljmp
sti
and
loopne
call
dec
push
rorb
fs
mov
ljmp
push
push
rclb
pop
insl
bound
sti
and
mov
and
shr
inc
push
outsl
push
dec
aam
inc
testb
shll
scas
cli
decl
in
out
in
shrl
adc
mov
into
xor
test
vpmacssdqh
mov
or
insl
or
xchg
cmpl
inc
ret
lock
jb
push
sub
pop
mov
lds
hlt
jno
aas
jecxz
stos
mov
scas
lock
ljmp
cmp
add
jne
ljmp
out
or
sbb
mov
pop
push
ljmp
add
add
dec
mov
pusha
sub
lcall
inc
pop
and
sub
enter
add
mov
mov
mov
dec
pushl
insl
dec
pop
cmp
mov
mov
inc
dec
xchg
cmp
or
add
pop
incl
fcompl
lods
cmc
or
pop
pusha
jne
ss
add
mov
in
mov
std
mov
clc
sub
clc
out
sarl
adc
cmpsb
aaa
insb
loopne
imul
or
ret
mov
loope
sbb
xor
out
adc
pop
stos
cwtl
les
xchg
mov
pushf
jecxz
dec
inc
gs
mov
or
cmpsb
push
push
add
fwait
popa
loop
call
mov
sbb
add
call
and
adc
or
push
test
dec
pop
mov
sbb
scas
cmp
xchg
jo
or
in
inc
sub
daa
or
les
mov
insb
das
ds
sahf
cmpsl
pushl
cld
ljmp
push
sub
inc
or
or
adc
outsb
mov
mov
add
pushl
jg
or
cmp
jbe
xchg
mov
dec
fcomps
push
jno
fisubl
in
je
outsl
dec
jg
add
cmp
jnp
roll
pop
cmc
fwait
adc
ret
xor
mov
jno
add
pushl
jmp
ds
jo
fnsave
adc
cmc
mov
stos
pop
pop
roll
fs
decl
sbb
movsb
xor
mov
jo
mov
sbb
int3
jbe
nop
pop
js
push
push
xchg
inc
loopne
mov
jecxz
inc
xor
sub
add
les
ret
call
xchg
divb
shlb
jge
inc
in
popf
cmp
adc
mov
mov
jmp
pushl
insb
adc
mov
mov
pop
cs
mov
fnstsw
adc
xor
push
jmp
imul
or
aas
dec
mov
or
nop
add
aam
insb
inc
cmc
cmp
lock
ret
test
adc
bound
roll
cmp
add
pushf
ret
mov
dec
or
inc
mov
js
dec
and
and
int
call
adc
cld
pop
pop
cld
jmp
bound
push
loop
mov
jb
push
jmp
jmp
les
cmp
fcmovnu
lea
push
or
mov
sub
cmp
push
sub
out
mov
ljmp
adc
adcl
addr16
mov
pop
ret
and
sub
mov
sub
and
insb
imul
jg
mov
mov
mov
pop
insb
inc
or
or
insb
push
adc
push
or
inc
pusha
mov
cmc
dec
mov
inc
lods
and
arpl
mulb
inc
sub
gs
lcall
adc
movsl
dec
cmp
popa
sub
ljmp
inc
sahf
or
sbb
push
push
pop
mov
nop
fcomip
repz
daa
decl
and
out
sub
daa
loope
and
mov
inc
mov
sbb
cs
pop
pop
imul
jmp
enter
xchg
test
mov
xchg
xchg
test
repz
inc
mov
hlt
sbb
or
or
lahf
push
xchg
loopne
add
pushl
or
cld
movsb
cmc
mov
cmpsl
testb
leave
roll
call
mov
push
xor
int3
ret
repnz
pusha
addr16
jmp
lcall
int3
orb
mov
in
mov
movsl
jmp
ret
call
sbb
sub
fcoml
lea
pushl
imul
fs
pop
push
add
lock
lock
lods
or
std
incl
xor
fidivl
mov
xchg
lods
loopne
leave
sarl
fstpt
push
les
shr
mov
push
cmp
mov
mov
mov
xchg
icebp
lsl
movsb
xor
jg
xchg
dec
hlt
lods
sbb
in
xchg
cmp
insb
jae
sarl
add
loopne
xor
pop
push
fcoml
or
jle
cwtl
adcl
cmp
aas
push
test
incl
adcl
adc
arpl
pop
add
iret
call
aaa
pop
mov
or
cld
pop
add
dec
dec
jmp
sarl
insb
sbb
das
adc
cmp
nop
mov
push
push
lcall
adc
ret
sub
das
in
cmpsb
test
cmp
add
ljmp
aad
nop
dec
test
adcl
push
and
into
sbb
xor
mov
or
push
xor
dec
imul
adc
dec
sbb
int3
decl
inc
sbb
pop
stc
mov
dec
in
mov
sub
adc
incl
jmp
xchg
mov
mov
push
cmp
dec
dec
or
push
mov
decl
and
sbb
dec
xor
add
cmp
sbb
sub
cmp
mov
add
lahf
xchg
fldcw
lods
pusha
and
lret
mov
out
cmp
adc
inc
push
sub
push
and
insl
arpl
or
insl
cli
mov
pop
adc
sbb
xor
dec
and
ljmp
push
aas
sbb
mov
loope
scas
add
jecxz
mov
imulb
lcall
mov
inc
imul
in
pop
pusha
dec
dec
cmovb
or
cmp
mov
lcall
cmp
push
and
int3
adc
daa
pusha
stos
nop
push
xchg
dec
cmp
in
push
push
add
adc
add
test
pop
push
test
pop
add
sub
mov
add
pop
adc
mov
pop
sub
xadd
jg
pop
pushf
sub
xor
test
jb
dec
out
sbb
cld
adc
inc
rclb
stc
dec
add
pushl
add
sub
add
push
lret
cwtl
push
dec
pushl
repnz
push
int
fwait
scas
pushl
data16
fdivs
sbb
cltd
bound
fcomps
fwait
add
sub
inc
lock
js
scas
xor
or
dec
jne
push
hlt
daa
movsl
xor
loope
add
xchg
adc
adc
icebp
lcall
xor
cltd
out
mov
xchg
cld
cmp
sub
inc
mov
lods
adc
jg
les
outsb
das
shlb
dec
mov
orl
xlat
jg
add
shrb
xor
cmp
sub
arpl
cmp
dec
ljmp
push
addl
push
cmp
add
sbb
pop
cmp
add
adc
bound
mov
push
inc
out
int3
mov
jg
sbb
push
or
ret
ds
push
cld
ljmp
mov
pop
sbb
movsl
inc
adc
stc
jo
insl
push
aam
xchg
push
push
jne
movsb
sbb
cmp
lret
pop
and
jne
pusha
pop
adc
incl
rcll
xor
adc
daa
mov
or
mov
sub
mov
push
mov
mov
xchg
out
push
inc
daa
inc
or
cmp
inc
dec
dec
cli
push
mov
imul
pop
js
xlat
add
test
lret
pusha
cmp
int3
add
fcomip
fsubr
gs
addr16
or
sub
cmp
mov
inc
loop
mov
les
sub
sbb
sbb
outsb
lea
movsbl
aaa
pop
call
dec
cmp
mov
mov
and
je
or
pop
sar
incl
filds
dec
add
or
pop
adc
push
pop
mov
mov
xchg
dec
mov
in
xor
in
pop
adc
sar
js
call
sub
leave
lods
pusha
scas
sub
add
xchg
pop
xor
mov
ss
das
adc
add
jmp
mov
dec
cwtl
mov
xchg
or
push
jnp
inc
fadd
dec
xchg
or
cmp
and
call
cld
aaa
in
add
dec
lret
cmp
fldl
sbb
adc
loope
cmc
fdivp
pop
icebp
scas
cmp
rcrl
ja
clc
imul
and
sub
adc
add
adc
lcall
ljmp
push
push
pop
lea
idiv
daa
or
mov
pushf
dec
adc
mov
addr16
push
jp
dec
hlt
xor
addr16
lcall
cmp
and
test
mov
xor
hlt
jnp
pusha
shlb
add
jg
cli
fsubrs
and
push
loop
and
xchg
adc
mov
mov
mov
cmp
or
jo
pop
ret
and
xor
push
lcall
jno
cli
cmpb
jg
popa
js
bound
push
js
ja
mov
dec
inc
and
jmp
cmp
out
cwtl
sbb
jmp
push
sbb
or
xor
jns
jnp,pt
mov
or
sub
pop
sar
jg
stos
mov
repnz
pop
push
mov
jl
inc
and
negb
les
jo
or
sbb
std
or
decl
loopne
das
and
sub
jg
sbb
jbe
adc
mov
push
out
push
add
and
mov
fs
sahf
hlt
push
fldl
xchg
pop
xor
cld
clc
cwtl
loopne
stos
xchg
inc
iret
mov
add
arpl
adc
xchg
mov
loopne
mov
and
jmp
or
sar
decl
loope
cld
pop
loopne
xlat
sub
addps
iret
push
fidivs
popa
ret
mov
pop
shlb
sahf
jg
add
add
aas
testb
mov
jmp
push
pop
lods
movsb
lock
in
scas
fs
je
out
mov
sub
in
and
fistps
iret
add
push
sub
and
cld
in
ljmp
pop
andl
push
ja
xchg
bound
or
pop
repnz
call
or
dec
lcall
or
and
lahf
shrl
pop
call
push
or
adc
push
mov
xchg
mov
sub
inc
lcall
ljmp
mov
and
mov
mov
fnstenv
popf
xchg
ss
decl
add
or
mov
pop
pushf
ja
lcall
iret
adc
inc
in
adc
add
and
stc
arpl
or
and
or
sti
cmpsl
or
mov
push
and
and
setns
outsb
sbb
dec
aaa
into
cmp
pop
cmp
inc
inc
sub
call
jnp
dec
push
sub
mov
jmp
popa
insl
stc
sbb
lds
popa
cmp
add
sub
movsb
adc
test
adc
cmp
and
rcrl
pop
shlb
xchg
fsubrs
repz
pusha
bound
in
or
push
mov
pop
jb
and
fcomps
stos
jbe
stos
cmp
mov
jae
pusha
and
fldt
decl
adc
in
inc
cmpsb
xchg
arpl
nop
out
adc
mov
insb
dec
inc
mov
rcrb
and
dec
xchg
je
stos
or
sbb
cmp
xor
xor
dec
cwtl
outsb
outsl
adc
jecxz
push
add
sti
jmp
xor
mov
mov
iret
inc
addr16
xchg
pop
popa
dec
adc
jnp
and
dec
inc
pop
rorl
pop
popa
mov
sbbb
inc
cmpsb
lret
shll
mov
jne
jecxz
out
clc
dec
lds
pop
sub
sbb
push
popf
xchg
xor
mov
pusha
lcall
imul
in
or
jmp
push
decl
test
jge
aas
test
mov
add
test
imul
xchg
incl
dec
push
das
or
popa
mov
pop
arpl
mov
mov
cmp
ret
jle
or
push
dec
daa
jg
pop
push
xor
movsl
and
movsb
ja
in
or
mov
push
or
push
push
xor
cltd
nop
sbb
dec
or
popa
and
or
lea
fadds
mov
inc
sbb
jmp
mov
push
mov
popa
jo
mov
mov
decl
in
sub
jl
mov
inc
cmp
lahf
js
sbb
inc
mov
adc
jne
scas
aaa
std
ds
gs
sub
push
daa
les
mov
ds
jg
je
loopne
push
in
inc
adc
pusha
sbb
pop
lock
ret
cmpl
mov
lret
cmp
cmp
inc
data16
out
push
rolb
outsl
cli
in
call
ret
dec
enter
sbbl
inc
fs
movb
inc
or
mov
cmp
pop
xchg
or
mov
call
or
imul
std
mov
dec
cld
test
adc
fidivrs
decl
pusha
jecxz
scas
int
lcall
and
dec
rorl
subl
cld
call
clc
hlt
nop
lea
js
jecxz
mov
call
lock
shr
les
mov
inc
adc
icebp
add
lret
push
call
ljmp
push
in
ret
cmp
out
into
jmp
stos
rorb
bnd
pop
fimull
bound
in
lea
jbe
dec
cld
repz
lcall
xchg
or
inc
dec
cmpsl
xchg
ljmp
dec
adc
movsl
pushl
jns
pop
adc
inc
arpl
xor
shrl
jnp
js
lods
lea
push
lods
add
or
mov
lods
lods
cmp
sbb
dec
hlt
arpl
stc
sub
inc
mov
mov
icebp
movsb
cmp
lds
add
pop
loopne
fcomip
fists
sub
js
mov
addr16
addr16
lret
xlat
push
mov
ja
mov
dec
divps
jno
data16
pusha
fnstsw
mov
pop
mov
sub
sbb
fidivs
pop
or
or
subb
adc
dec
shl
sbb
xchg
scas
sbbb
lcall
fwait
jp
xor
cmp
fisubl
jmp
aam
pop
push
mov
ds
adc
jecxz
mov
paddw
jg
aaa
inc
aaa
in
and
pop
loope
cmp
adc
adc
rorb
test
jg
or
push
out
xchg
push
enter
dec
hlt
add
call
gs
cmpl
mov
js
incl
pushf
ret
icebp
test
inc
and
push
mov
inc
cwtl
clc
pop
std
decl
das
clc
mov
mov
push
loopne
jle
xor
outsl
pusha
xor
jge
shrb
adc
sub
out
and
push
xchg
dec
sbb
and
mov
add
push
mov
push
cltd
or
shl
jo
push
cmp
das
jmp
jle
jg
std
ljmp
into
adc
es
xor
and
rolb
gs
xchg
inc
or
in
dec
subb
clc
inc
fucom
es
lds
push
dec
iret
addr16
decl
pop
movsl
mov
cli
xor
sbbl
xchg
loope
out
aad
rorb
mov
pop
mov
les
add
inc
or
or
call
push
icebp
orl
ret
push
test
ret
outsb
ljmp
fisubrs
adc
and
repnz
sub
pop
push
imul
push
sub
adc
add
test
imul
xchg
stos
xor
lock
push
cmp
mov
add
cld
xchg
nop
ljmp
dec
stc
imul
xlat
pushf
ret
push
addr16
movsb
xor
addl
test
test
inc
add
mov
ss
mov
fistps
into
inc
jo
lcall
faddl
fmul
dec
sbb
push
add
lcall
stos
pop
insl
mov
fsub
push
xchg
test
inc
test
mov
lcall
xchg
sub
or
or
lahf
or
add
xor
fcomps
inc
xor
loopne
fdivrs
xchg
inc
ds
xlat
imul
insb
add
and
das
shrb
push
inc
push
and
adc
outsl
and
rol
decl
fs
adcb
imul
aam
inc
xchg
movsb
rolb
out
lcall
mov
call
fsubrl
xor
imul
xorl
pop
roll
sub
lcall
cmp
aaa
roll
cwtl
xchg
subb
aad
xchg
popf
or
iret
pop
mov
push
mov
push
or
add
pushl
dec
cli
fisubrl
xor
dec
rcl
dec
push
dec
dec
mov
dec
adc
scas
adc
out
stos
sub
push
daa
call
xchg
adc
xchg
sbb
adc
pop
call
pop
pusha
aas
in
mov
push
xor
mov
xchg
mov
jl
icebp
jmp
xchg
insl
arpl
xor
pop
pushl
inc
pop
sar
gs
in
inc
test
adc
add
lcall
call
dec
jo
inc
sub
pop
scas
push
aaa
fwait
rcrl
sbbb
pop
dec
lret
dec
lock
pop
popa
cs
push
mov
mov
mov
push
jns
sub
call
pop
cmp
dec
test
xchg
push
sbb
pushl
dec
ljmp
mov
lea
fstps
ret
mov
jbe
movsl
pushl
les
cmpl
inc
insb
dec
xor
andl
movsl
sbb
imul
lock
rolb
sar
incl
adc
mov
popf
adc
sti
scas
mov
push
and
lds
cmpl
lock
ds
call
inc
pop
rolb
xchg
lock
sbbb
sbb
inc
scas
fdivs
inc
lods
cmp
push
nop
and
out
not
divb
je
add
incl
and
cmp
jne
adc
fsubrs
add
push
xchg
sti
pusha
push
outsb
or
loopne
dec
jl
and
mov
and
orb
push
and
jmp
jo
sub
or
aas
out
sbb
sbb
and
es
and
inc
jne
sub
incl
or
cmc
add
add
sbb
popa
test
push
dec
rcrl
sub
and
in
mov
mov
cmpsb
and
into
sub
pop
xor
clc
and
out
cli
aad
push
outsl
pop
dec
xor
fmull
jae
aas
fucomip
inc
and
or
jmp
addl
add
fadd
cmp
add
jae
fs
imul
imul
add
sub
lcall
fisttpl
and
lahf
popa
push
mov
leave
inc
call
lcall
into
lea
adc
aad
cli
cmc
adc
jae
push
xchg
adc
mov
lcall
ss
fistpl
int3
aam
xchg
cmpsl
push
or
out
scas
sub
push
add
push
add
punpckhwd
enter
lea
cmpsl
hlt
push
xchg
les
xor
in
fs
cmpsl
inc
loopne
inc
mov
mov
add
decl
jo
inc
cmp
and
enter
outsl
dec
jle
inc
sub
mov
cmp
scas
call
mov
pop
daa
jg
fisttps
and
shrb
cli
inc
mov
or
movsl
aam
mov
fdivs
fs
xchg
aam
inc
push
mov
lea
cmc
or
xor
dec
fldt
add
jbe
mov
outsl
inc
xchg
cmp
test
xchg
jae
jl
push
inc
pop
adc
pop
imul
mov
js
outsb
xchg
jbe
inc
mov
mov
sbb
ljmp
shrb
jb
mov
imul
jno
cmpsl
or
jle
jmp
dec
push
out
push
push
dec
mov
jno
outsb
test
mov
fcomip
mov
xor
xchg
mov
jnp
movsb
adcl
aam
or
inc
loopne
and
xchg
cmp
test
decl
jne
dec
repnz
mov
dec
mov
cmp
dec
mov
jle
loopne
mov
fcoms
pop
or
loopne
loopne
pushf
mov
xchg
mov
and
jge
pushl
push
stc
push
inc
xchg
and
add
ljmp
cmp
sub
push
in
push
jecxz
loope
or
js
enter
lcall
lock
and
roll
push
xchg
lock
mov
lock
add
orb
clc
fisttpl
jle
add
xor
or
sub
pop
cmp
push
add
ljmp
sbb
mov
or
push
ret
hlt
and
lahf
mov
rol
push
popf
mov
call
lea
xor
sub
and
sbb
pop
adc
pop
js
add
xchg
mov
jo
mov
add
push
clc
jl
push
pop
ds
xchg
mov
nop
js
incl
xor
mov
shll
mov
cmp
incl
push
push
cmp
sub
sub
lods
xor
pop
inc
sahf
in
fldt
lock
fisubrl
cmpsb
lock
jp
push
pusha
imul
test
js
mov
push
js
jle
xchg
xchg
popa
popa
jns
rorl
mov
nop
mov
cld
decl
shll
mov
push
inc
loopne
or
sub
inc
cli
call
mov
jmp
inc
inc
insl
or
or
rorb
inc
outsl
jmp
insl
test
call
adc
jle
test
add
cmp
clc
push
das
cli
xchg
popa
and
cmp
mov
negb
ret
sub
dec
adc
je
xor
jecxz
dec
stos
loopne
call
and
and
xor
dec
add
pop
cmp
sub
in
notl
mov
cmp
inc
sti
mov
sbb
sub
popa
mov
outsl
cli
iret
jp
mov
sbb
dec
lods
leave
rorb
imul
call
loop
in
push
mov
setg
adc
jg
loope
sub
jnp
xor
mov
jbe
dec
fidivrl
lock
mov
sub
or
lcall
xchg
outsb
adc
es
shlb
pop
mov
mov
int
std
push
or
inc
int
hlt
add
movb
icebp
or
call
fcoms
movsb
sub
pop
xor
mov
push
dec
mov
xor
xorb
inc
pop
int3
cwtl
loopne
adc
lcall
push
push
orb
pusha
add
mov
mov
and
add
xchg
xchg
mov
hlt
in
incl
add
mov
dec
and
sbb
xchg
add
cli
inc
lods
jne
push
sbb
sub
call
in
sub
push
push
dec
in
scas
sahf
jnp
movl
add
mov
cmp
jl
or
popa
cmp
cli
dec
adc
push
fmull
mov
jle
int3
es
sub
pop
leave
fs
insb
or
add
dec
inc
enter
add
cld
mov
lcall
jmp
insb
out
stos
loopne
pop
dec
push
call
dec
push
cs
inc
sbb
pop
into
add
test
or
js
cmp
jle
arpl
add
sbb
adc
dec
rorb
jnp
cmp
push
loop
call
sar
mov
and
or
lock
inc
mov
ljmp
adc
lds
jbe
xor
xor
or
fwait
cli
or
inc
je
adc
xor
call
movsl
add
push
adc
jb
subl
add
sbb
xor
mov
decb
jbe
xchg
enter
pop
adc
ja
add
push
das
pop
sub
and
lock
xor
pop
mov
pop
fildll
xorb
bound
scas
mov
stos
jp
imul
pop
adc
ljmp
loope
lock
les
or
movsb
xchg
decl
add
sub
sub
enter
repz
insb
add
jge
push
push
sub
clc
sbb
mov
add
dec
filds
push
je
pop
add
push
orb
lock
outsl
adc
adc
sbb
rorb
ret
xor
call
js
fiaddl
sbb
popa
or
cmpsb
je
call
push
xchg
xor
adc
inc
int3
js
jp
inc
sub
iret
sbb
in
mov
lahf
or
sbb
pop
inc
push
and
pop
out
ffree
mov
lods
pop
repz
out
inc
es
mov
subb
mov
and
or
fimull
push
pop
mov
stc
adc
pop
or
pop
repz
adc
mov
in
xor
cmp
cmp
cmp
movsb
xchg
orl
lods
adc
in
add
push
add
jp
mov
lcall
popf
add
sarb
cmp
ja
out
test
or
cmp
pop
hlt
ljmp
ja
push
sbb
inc
add
cmp
mov
pop
mov
loopne
decl
add
mov
add
dec
in
dec
sbb
add
test
xchg
mulb
lock
call
repz
pop
xor
xor
mov
lea
cmc
out
imul
fnstsw
insl
add
add
jge
adc
cmp
adc
movb
push
dec
push
or
aas
mov
ret
lock
out
adc
inc
dec
aad
sub
cmp
imul
cmpsb
test
mov
xchg
inc
sbb
cmp
pop
jne
pop
push
hlt
sub
or
mov
lea
mov
mov
xchg
sub
or
push
pop
sub
lcall
fs
cli
int3
fs
lods
movsb
rcrl
adc
movsb
movsb
pop
es
call
sub
add
dec
add
dec
or
pushl
push
data16
mov
inc
fstpt
jae
sbb
sub
ror
and
das
sub
gs
cs
push
jne
imul
sbb
jp
insb
fldl
lret
adc
hlt
cltd
cmp
mov
sbb
push
xchg
xchg
dec
pop
gs
cwtl
dec
rcr
pop
xchg
test
inc
test
jmp
add
push
mov
push
xor
xor
dec
stos
add
dec
mov
cmp
or
mov
adc
ret
cmpsb
inc
data16
divb
or
jg
push
xor
test
sub
cli
in
dec
jl
xor
adc
mov
jle
add
sbb
add
jmp
test
xor
ss
dec
dec
mov
in
pop
test
ljmp
hlt
popa
add
subb
icebp
roll
adc
cmp
mov
je
sub
push
jns
jg
push
and
pop
mov
cmpsb
mov
adc
push
rcrl
pop
add
add
gs
movsb
add
pushl
push
xor
cmp
pop
mov
rclb
sub
cli
pop
adc
iret
dec
jno
movsb
push
popl
inc
and
pushl
ss
inc
lods
maxps
fcomps
lock
xlat
or
rorb
mov
xchg
inc
loopne
mov
mov
ret
in
pushf
push
or
cmc
mov
fdivrl
pop
cmc
add
movsl
cs
mov
adc
add
cmp
lcall
pop
dec
lret
pop
jecxz
adc
fs
jmp
xchg
clc
adc
mov
mov
lahf
mov
mov
pop
jb
inc
and
cmc
fucomip
or
decl
dec
daa
inc
shlb
push
in
cmp
movsl
cmp
or
jo
and
enter
loopne
or
push
add
lcall
div
sub
and
loopne
or
pop
rcrb
add
sub
imul
testb
pop
icebp
outsb
sbb
xor
jge
mov
out
sahf
mov
mov
sar
add
ds
jg
imulb
shlb
ret
ljmp
or
ljmp
push
call
jp
inc
dec
les
clc
add
cld
lahf
cmc
mov
das
add
repnz
cld
jg
into
rol
std
and
sbb
add
pop
dec
mov
mov
fistpll
push
cmp
pop
pop
daa
sub
loop
daa
stos
dec
cmpsl
xchg
inc
add
fmuls
lock
call
xchg
and
push
loop
cld
roll
sub
fildl
sub
or
sub
or
add
inc
mov
imul
fisubl
mov
mov
lcall
jne
dec
sbb
fisttpll
xchg
pop
les
xchg
push
adc
or
xchg
ljmp
adc
ret
lods
jb
movsl
xor
adc
cs
jne
add
adcb
mov
xor
inc
cmpsl
mov
mov
push
mov
and
test
fldt
and
cmp
mov
in
std
sahf
mov
add
xchg
es
mov
pushl
add
test
into
imul
or
int3
jmp
jbe
pop
cwtl
rcr
pop
cmc
sub
dec
jmp
ret
int3
fisttpl
std
pushf
cli
loopne
scas
clc
sbb
add
push
adcl
das
add
sbb
sub
fcoml
decl
scas
pop
aam
popa
les
test
mov
icebp
loope
cmpsb
repnz
jg
dec
hlt
inc
or
cmp
pop
nop
inc
lea
pusha
jno
icebp
ja
inc
push
insb
pushf
enter
and
mov
lock
fsubs
out
adcb
dec
and
dec
aad
adc
fs
mov
sub
push
repz
cmp
out
jl
sbb
adc
pushf
and
jg
ljmp
enter
lds
dec
push
jp
lock
push
sub
mov
lods
mov
sub
std
jno
enter
adc
insb
cmp
jg
int3
sti
and
ret
testl
mov
sarl
movsb
pop
push
call
addr16
dec
addb
adc
and
bound
xchg
xor
pop
fimuls
pop
mov
sub
push
mov
dec
sbb
dec
add
loop
mov
adc
mov
xchg
sub
mov
cwtl
push
shr
add
jmp
cmp
mov
lcall
jns
adc
shlb
jmp
add
popf
jmp
adc
pop
mov
cld
clc
decl
add
cmpl
shrl
adc
pusha
xchg
pusha
jmp
rclb
les
out
pop
xchg
inc
push
rclb
or
rolb
jns
add
cmp
jnp
inc
xchg
cmpsl
sbb
test
push
lock
push
call
scas
outsl
adc
inc
and
push
fucom
fnstcw
cwtl
int
xchg
mov
mov
lret
mov
fwait
cmpsl
jge
imul
shrb
adc
jne
add
or
stos
mov
or
sbb
mov
inc
add
add
pushl
mov
push
jecxz
jae
add
filds
push
inc
movsl
or
push
pop
xchg
or
xchg
in
jg
or
das
or
mov
sbb
shufps
or
das
xchg
les
mov
call
inc
inc
and
or
lahf
sbbb
imulb
inc
mov
and
adc
push
adc
dec
adc
adc
dec
fst
adc
lcall
and
inc
js
adc
movsb
adc
mov
mov
pushf
jmp
jge
sbb
mov
mov
inc
or
je
nop
mov
pop
test
decl
cld
inc
lea
sarl
push
in
mov
outsl
dec
ljmp
xchg
inc
aas
mov
lret
aas
inc
add
in
xor
ds
cli
dec
into
std
lods
insb
add
js
xchg
push
cmp
push
loop
les
scas
sbb
jo
mov
lods
mov
lcall
inc
inc
mov
mov
push
push
push
es
pop
mov
add
or
dec
push
sahf
scas
pop
leave
lods
insb
call
cli
test
lea
xor
dec
gs
in
jmp
outsl
jp
fdivs
xchg
jbe
push
loopne
push
cltd
jmp
lret
add
xchg
popf
test
out
pushl
jo
xor
xchg
cld
mov
sbb
test
sub
call
mov
jmp
push
pop
and
scas
cmp
sub
ret
xor
lcall
cmp
lock
ljmp
mov
add
dec
inc
scas
inc
push
mov
pushl
push
fwait
icebp
nop
push
jnp
jmp
pop
dec
pop
insb
out
cmp
leave
scas
mov
jmp
decl
ret
movsl
into
mov
xchg
mov
sbb
push
pusha
jne
pop
mov
push
loopne
scas
jno
pop
icebp
jg
into
stc
xor
or
add
ja,pt
cmpsb
lea
incl
stc
add
mov
dec
out
lcall
in
xchg
cld
out
lods
push
test
sahf
dec
add
rcll
or
pop
or
sub
jle
data16
xchg
int
imul
mov
push
and
cmp
jae
inc
fimull
and
cli
jmp
ds
cmp
and
mov
int3
ret
adc
cmpsl
mov
ljmp
jbe
pop
cwtl
sbbb
add
sbb
pop
or
cld
out
movsb
xchg
push
out
je
and
push
and
ljmp
or
out
adc
xchg
and
pop
sar
push
lea
and
cmp
adc
adc
cmp
inc
push
daa
sub
and
stos
jle
cmp
iret
dec
push
mov
popa
or
inc
lahf
and
inc
or
or
ljmp
lcall
pop
jno
out
imul
pop
sub
out
sarb
inc
mov
add
cli
incl
mov
xchg
inc
inc
jb
add
out
test
lods
mov
fnstenv
ss
or
cmp
js
adc
cmpsl
sub
rol
inc
dec
and
pop
das
lock
cmpsl
ret
test
rcrb
cli
jmp
adc
lods
push
mov
aam
or
incl
faddl
js
xlat
in
cmpsl
add
jb
or
mov
add
add
pop
pop
pusha
sub
or
jo
movsb
or
add
out
push
add
mov
push
sbb
fabs
xor
sub
xor
jp
lcall
testb
and
inc
bound
dec
and
mov
nop
jbe
jle
lock
or
dec
lcall
lds
aaa
cmpl
mov
add
push
jmp
sbb
mov
mov
popf
lock
rcrb
jmp
stos
or
pushf
xor
add
outsb
push
and
add
add
cltd
in
jae
fadds
sub
pushf
mov
inc
or
or
jg
cld
xlat
adc
push
sbb
mov
les
inc
push
add
inc
es
outsb
call
or
js
les
pop
jo
and
pushf
adc
cmp
lds
add
scas
jbe
dec
sub
add
ss
add
jmp
add
mov
xchg
pop
push
inc
sub
inc
fadds
aas
add
jg
or
subl
aad
cmpsb
out
test
or
ljmp
pop
into
js
sub
mov
ljmp
push
neg
add
icebp
ja
push
insb
adc
ljmp
dec
stc
cwtl
jnp
add
pop
imul
out
inc
inc
push
adc
movsb
cmc
lcall
mov
rcrl
test
loopne
stos
pop
lret
leave
push
sbb
fwait
inc
pusha
subl
dec
movsb
or
imul
cmpsl
pop
mov
xor
push
xchg
jnp
jo
or
cmp
addl
add
pop
fs
push
aas
pushf
imull
lcall
push
jnp
jns
paddq
popf
ss
inc
mov
clc
inc
clc
mov
add
push
aam
push
and
add
add
nop
xor
pop
sbb
sarb
add
cmp
push
test
cltd
or
es
sbb
sbbb
mov
lahf
jbe
pop
ja
push
out
xchg
decl
loope
lcall
inc
fstp
push
scas
rcrl
daa
push
xor
bound
sahf
sub
pusha
insl
or
ss
cwtl
xchg
push
xchg
mov
ds
mov
decl
addr16
dec
fidivrl
les
adc
mov
jnp
ja
clc
dec
push
adc
inc
and
and
repnz
jg
test
dec
lahf
mov
cld
insl
pushf
dec
jne
or
and
repnz
jnp
dec
fs
test
lahf
movsb
dec
cld
and
lea
push
movsl
inc
idiv
mov
mov
in
pushf
movsb
sahf
test
sbb
adc
adc
out
mov
insb
or
cmp
pop
lahf
dec
call
xchg
pop
xchg
and
nop
nop
int
jmp
inc
mov
adc
test
inc
and
out
movsb
mov
icebp
xchg
push
loop
cmp
mov
push
mov
jae
xor
insb
mov
jle
sti
sub
add
pop
test
push
dec
dec
push
push
jb
out
jge
adc
pop
stos
outsl
das
push
dec
bound
loope
ljmp
popf
xlat
adc
jne
jae
lock
dec
dec
insb
push
pop
insb
insb
push
inc
push
xor
pop
test
rolb
shlb
jmp
clc
push
mov
inc
or
mov
pop
sbb
outsl
mov
sub
lods
mov
mov
push
fs
pushl
sarl
xor
popf
adc
jbe
xor
jne
push
bound
jg
jg
loop
jne
inc
fucomp
rol
jno
jge
mov
in
loop
mov
and
push
call
ljmp
mov
dec
cmp
sbb
outsl
daa
call
inc
xchg
or
decl
pop
stos
jns
pop
mov
add
mov
sar
pop
ja
pop
mov
push
std
call
shlb
jp
sub
clc
das
popf
cs
push
loope
push
adc
test
fldcw
sbb
or
jno
addr16
aaa
add
rclb
add
ret
loopne
fdivr
lcall
mov
adc
js
pusha
mov
popf
jae
dec
or
add
call
dec
jns
push
hlt
jecxz
sub
mov
imul
pop
lock
decl
ret
addps
test
pop
mov
sbb
repnz
add
hlt
dec
jmp
sub
adc
xor
test
clc
ljmp
lods
adc
lock
cwtl
andl
mov
adc
rcr
call
mov
dec
in
push
insb
sub
je
adc
inc
inc
lahf
sbb
pop
repnz
mov
mov
unpcklps
adc
add
inc
add
test
push
rorb
and
lcall
mov
sub
xor
pusha
adc
mov
enter
test
mov
das
lcall
ljmp
push
pop
mov
push
push
lea
jg
incl
dec
cmpsb
cmp
stos
int3
fnsave
movsb
push
cld
stos
or
or
push
xchg
mov
push
test
xchg
push
stc
jge
mov
je
lods
adcb
test
hlt
pushl
mov
adc
push
adc
addb
fwait
test
adc
jmp
mov
add
xchg
xorb
call
xorl
lcall
push
clc
jne
aaa
ret
cmp
xlat
jmp
jo
fnstcw
xor
jo
stos
push
mov
aaa
jne
int
cmpsl
and
fildl
cmc
ljmp
rolb
sub
pop
push
aam
cmpsb
loope
push
push
push
cmp
and
inc
pop
in
outsl
mov
adc
cltd
push
cld
test
sbb
xchg
adc
pop
push
mov
lcall
call
add
and
and
pusha
les
mov
cmp
add
decb
push
sub
and
pop
push
rolb
mov
sub
push
pushf
sub
inc
shr
mov
sbb
adc
inc
testb
inc
add
jne
sbb
loope
xlat
call
add
push
xchg
notl
je
test
pop
pop
into
sbb
jg
and
dec
cmp
xchg
ret
push
add
aad
jge
inc
or
jne
push
sbb
rol
xor
incl
pushl
add
mov
or
pop
or
mov
lods
leave
add
inc
aad
jbe
hlt
xchg
ljmp
lock
inc
lea
push
inc
dec
cmpl
add
lock
pop
sti
ljmp
push
add
adc
mov
out
fsubs
inc
ds
push
cld
in
ret
pop
mov
add
sbb
pop
inc
arpl
or
icebp
sbb
jnp
adc
add
sub
sbb
xor
cmc
call
mov
add
inc
repz
sub
push
adc
or
incl
mov
lret
popa
mov
pop
adc
icebp
test
mov
ret
arpl
es
sbb
dec
xchg
xlat
lea
add
jg
enter
popl
testl
daa
mov
jp
int3
scas
cmp
aad
loope
cmp
dec
push
mov
scas
xor
cmp
mov
leave
aaa
call
mov
les
jp
sbbb
mov
clc
insb
and
clc
pop
gs
hlt
sub
or
push
jg
or
sbb
sub
cmp
enter
clc
decl
lahf
and
enter
pop
mov
popa
sbb
pushl
or
sbb
lret
test
mov
popa
jl
push
push
xor
mov
inc
sbb
das
xchg
jae
and
stos
xor
jb
add
sbb
sbb
mov
adc
adcb
xor
js
js
add
loopne
pop
stc
shlb
ljmp
or
xor
xchg
mov
decl
and
shlb
loope
ds
in
or
cs
cmp
js
pop
jg
push
sbb
adc
xor
push
cmp
push
lret
jae
inc
lcall
movsb
mov
scas
stos
cwtl
sbb
cwtl
and
xchg
incb
inc
bound
js
inc
loopne
xor
decl
lock
jecxz
add
sbbl
pop
push
mov
xor
fcomip
adc
mov
js
or
push
push
int
push
enter
mov
add
lcall
cli
dec
subl
shlb
and
or
mov
or
ljmp
add
das
mov
dec
jge
jne
or
scas
mov
ljmp
outsl
or
cmp
call
mov
xchg
mov
xchg
je
aaa
mov
pop
jl
mov
cld
or
es
neg
pop
in
inc
pop
pop
fs
push
or
add
stos
xchg
dec
stos
imulb
inc
jmp
push
mov
ja
add
inc
push
scas
push
dec
out
mov
call
xchg
push
lea
cmpsl
mov
stos
mov
sub
mov
mov
popf
dec
lock
in
jle
pusha
sbb
inc
mov
rcrb
push
sti
in
es
sub
or
jp
sub
inc
pop
ja
add
pop
sbbb
xor
fdivs
cmp
and
call
enter
aas
xor
stos
pop
hlt
fistl
mov
inc
xchg
adcl
inc
inc
movsl
fimuls
outsb
adc
data16
jecxz
les
sbb
cli
inc
push
add
xor
in
rorl
in
ss
femms
sub
mov
call
insl
and
or
inc
xor
pop
idivl
std
insl
add
or
sub
xor
pop
dec
gs
sub
jno
adcl
push
je
jo
out
ret
dec
mov
mov
push
mov
shrb
pop
addr16
dec
andl
aaa
sbb
add
jns
out
add
sbb
and
sub
sysenter
cmp
in
push
pop
inc
dec
dec
push
push
pop
pop
pusha
fs
pop
jns
js
addb
mov
in
lods
mov
mov
enter
icebp
lcall
adc
incl
shll
mov
jmp
icebp
jp
add
pushl
xor
sti
and
xchg
inc
sub
mov
call
sbb
push
push
movsb
xor
les
sbb
sub
sub
push
mov
pop
hlt
push
xor
gs
cmp
xor
clc
inc
orb
aaa
cld
out
inc
push
lret
dec
mov
aam
add
lock
mov
adc
dec
addb
mov
repz
jo
enter
js
add
and
inc
test
dec
je
cwtl
sub
inc
xchg
mov
or
pushf
dec
and
subb
pop
shlb
adc
dec
rolb
mov
stc
movsb
movsb
int3
iret
enter
cmp
ljmp
pushl
cmp
jg
ljmp
test
pop
clc
outsb
dec
xor
test
dec
pop
movsb
or
jmp
and
in
call
dec
cmp
sub
lods
test
cmp
adc
xorw
es
aaa
rsqrtps
pushl
aad
jae
outsb
jb
mov
mov
inc
outsl
fsubrs
dec
das
add
dec
jae
std
decl
and
pop
mov
mov
cmovs
mov
mov
scas
xchg
out
xorb
mov
incl
adc
sahf
insl
push
jo
gs
mov
pop
out
rcrb
fbld
js
jae
mov
jb
xchg
adc
and
cmp
fstpt
pusha
sbbb
sub
push
mov
pushf
push
outsl
xor
sbb
lods
xchg
mov
mov
incl
out
loopne
push
pop
ret
jae
mov
cmp
dec
ds
aaa
loope
popa
jne
scas
push
push
dec
aaa
mov
out
incl
fists
xchg
and
ja
push
icebp
mov
mov
inc
push
into
jae
dec
mov
xchg
inc
inc
push
jne
jmp
push
push
jnp
push
mov
stos
imul
subb
and
rol
fildl
daa
adc
pop
sub
adc
mov
cmpsl
xlat
lea
xor
jmp
stos
jne
pusha
add
orb
mov
pop
stos
pusha
fs
out
imul
mov
scas
pop
jae
fimull
xchg
arpl
mov
xor
fldenv
fwait
adc
push
push
cmpsl
lods
xchg
add
mov
pop
mov
push
sbb
lods
jge
pusha
arpl
jecxz
and
dec
aas
lea
sbb
hlt
aam
and
pushl
mov
roll
repnz
jbe
mov
sub
lods
mov
add
decl
shlb
mov
dec
mov
mov
add
ljmp
xor
fs
shlb
and
and
shlb
cwtl
aas
and
mov
incl
mov
daa
sbb
rorb
inc
ret
xor
xor
icebp
incl
mov
push
push
sbb
addb
sbb
sarb
aaa
std
incl
scas
roll
outsb
pop
or
mov
inc
ds
out
dec
ja
and
insb
push
pop
xchg
or
add
or
aam
insb
cld
push
mov
out
and
outsl
loop
mov
jae
mov
inc
call
jmp
lock
jl
mov
sbb
mov
push
jmp
pop
xchg
xchg
call
push
psubw
imul
incl
cld
push
or
ret
add
cld
pushf
xor
bound
jnp
push
fsubs
or
dec
pusha
push
cld
sub
shrb
rcll
xchg
push
push
std
pushl
xor
jg
xor
and
jg
fisttps
incl
and
mov
dec
sbb
adc
and
mov
mov
in
clc
push
ret
inc
or
or
sar
jmp
ja
js
orb
lahf
incl
xchg
lock
mov
nop
rorl
adc
dec
repz
sub
call
insb
enter
insb
adc
mov
stos
pushl
andb
jne
mov
jge
jo
fidivrs
sbb
pop
rorl
push
adc
xchg
xor
cmpsb
adcb
jne
mov
cmp
dec
stc
dec
pop
add
popa
mov
outsb
cmp
dec
xchg
jg
ret
clc
add
clc
mov
call
cld
pushl
int3
test
adc
or
xchg
adc
lret
ret
sbb
test
pop
test
mov
jb
mov
fisubrl
sbb
mov
out
push
and
out
mov
pop
mov
cmp
incl
repnz
pop
jno
xor
and
sbb
mov
sub
mov
or
jns
leave
or
sahf
cs
push
jmp
cmp
lret
cmpsl
fisubrs
jl
mov
adc
dec
sbbl
mov
pusha
pop
cmp
decl
inc
adc
inc
in
sbb
sbb
pop
cmp
jle
pusha
sbb
xlat
clc
jg
mov
sub
or
stos
and
pop
adc
dec
inc
ja
sbb
cmp
dec
call
enter
shlb
and
and
mov
sarl
push
add
adc
xchg
push
pop
call
popf
adc
adc
call
loop
lret
push
ret
jns
cs
add
test
sbb
push
mov
cld
push
cs
adc
addr16
rcll
ret
jg
mov
add
mov
jl
mov
out
lds
pop
ret
push
or
call
add
add
repnz
enter
in
pop
mov
imul
sub
ljmp
jns
jbe
clc
negb
dec
mov
enter
sbb
push
jl
cmp
xchg
mov
sbb
sub
sahf
loop
jmp
inc
lret
fwait
fs
add
pushl
xor
shlb
outsl
testb
std
jl
outsl
loope
xor
pop
in
jg
dec
leave
jl
inc
rcrb
cmp
fs
call
adc
dec
xchg
adc
data16
pop
out
push
xor
jl
xchg
sbb
mov
decl
xor
popa
addr16
add
subb
adc
lret
jne
ja
adc
sbb
insl
mov
adc
lret
xor
push
mov
cmc
xor
or
sbbl
and
insl
stos
inc
cld
call
or
enter
insl
push
inc
inc
push
mov
pushf
mov
stc
xor
and
in
gs
fbld
sbb
clc
fmuls
outsl
fwait
call
dec
sub
mov
mov
cwtl
add
scas
js
xchg
xchg
jmp
add
jo
inc
or
xchg
insl
push
sub
seto
clc
movsb
mov
adc
xchg
arpl
enter
hlt
paddusw
pushl
mov
ffreep
jb
fs
lods
fcmovbe
dec
dec
aad
mov
ret
fnstcw
wrmsr
sti
dec
push
cmp
imul
loope
int3
data16
jmp
out
jns
iret
xchg
cltd
int3
pop
sub
push
out
push
add
idiv
push
pop
push
pfsubr
mov
adc
loope
fiadds
dec
pop
cmp
push
pushf
dec
int
leave
sarb
stc
call
fcmovnb
dec
xor
ss
repnz
aas
lock
leavew
sar
pop
push
mov
rorb
clc
cld
jmp
xchg
mov
push
enter
pop
mov
loope
sub
repnz
lret
iret
mov
xlat
clc
inc
jg
pusha
cmp
rorl
into
xor
pop
daa
sub
rcrl
xchg
fcos
add
mov
push
rorl
add
iret
decb
ud0
fisttps
xchg
mov
pop
or
mov
mov
mov
fmull
mov
adc
fimuls
add
inc
mov
das
sbb
add
dec
adc
fldenv
sbb
and
rolb
jg
orl
push
sbb
movsl
and
add
xchg
and
xor
mov
or
and
lret
inc
outsl
imul
outsb
ret
dec
clc
push
std
outsl
mov
or
xor
test
mov
iret
dec
les
popa
fdivr
fiadds
inc
arpl
xor
jge
mov
add
jl
dec
sub
test
xchg
jns
xchg
popa
inc
add
lds
popf
mov
fsub
jecxz
adcb
cli
mov
cld
add
pop
add
dec
xor
jne
sbb
adcl
push
cmp
fisubrs
icebp
sub
cltd
add
ljmp
xchg
add
push
inc
xchg
or
imul
fs
fistps
push
pop
gs
mov
shrb
xor
add
cmpsb
sub
dec
loope
popa
dec
push
out
rolb
and
sbbb
test
cmp
inc
xor
stc
imul
rorb
shr
sub
leave
shlb
nop
loopne
fdivrl
ljmp
cs
push
clc
mov
repnz
rcl
test
pop
incl
cmp
or
aam
or
xor
sbb
pop
lods
das
sahf
js
xor
dec
mov
loopne,pn
aam
aad
imul
inc
faddl
xchg
insl
add
cmp
hlt
add
mov
adc
jb
pop
lods
mov
inc
stos
pop
xor
mov
fmuls
loopne
cli
add
xchg
test
mov
fsubrp
pop
test
aam
lcall
and
fstpl
fxch
and
in
rorl
mov
dec
mov
loopne
sub
cmp
cmp
xchg
or
mov
sub
sbb
add
call
out
sbb
sbb
mov
push
cmp
fistpll
aam
dec
test
inc
add
cmovp
pushl
aas
cli
inc
jg
dec
add
push
lds
mov
pop
sbb
dec
imul
cld
jmp
pop
dec
add
dec
pop
xor
xor
fildll
cmp
adc
out
loop
ljmp
add
aad
inc
adc
xor
jmp
lods
int
add
pop
jl
add
and
mov
or
jmp
js
stc
xchg
ja
int3
jge
subb
inc
cmovnp
in
das
fadds
jg
hlt
add
push
sahf
insb
pusha
shll
mov
and
aaa
jg
cmc
push
rcl
jmp
adc
dec
jae
xchg
hlt
fadds
ret
inc
pusha
xchg
adc
adc
mov
sahf
cmp
fldl
cs
inc
jne
xlat
pop
cmp
adc
push
cmp
call
mov
arpl
xlat
movsb
les
sub
xor
or
and
cmp
decl
das
dec
cmpsl
and
mov
jge
arpl
ret
faddl
in
add
aam
out
clc
mov
and
es
sub
cmpsb
cmp
sbb
mov
push
sbb
pop
lock
cmp
mov
mov
mov
aad
pop
enter
cmpsb
push
xor
negb
or
mov
xchg
les
sbb
xlat
mov
and
jae
aam
aam
lock
jmp
mov
sub
das
aam
pop
add
pop
sub
mov
jno
bound
adc
fnstenv
mov
hlt
arpl
inc
inc
cmpl
jae
call
add
sub
decl
adc
push
lcall
pop
cmc
rolb
test
call
fsubr
mov
insl
and
jle
sbb
push
je
push
jne
jo
clc
xchg
adc
sbb
add
xchg
or
roll
or
xor
int
call
std
xchg
cmc
cmpsb
ret
pusha
cltd
dec
jb
lret
push
adc
ficoml
push
mov
pop
xor
xor
call
or
sbb
nop
jl
sbb
fiaddl
ja
or
daa
xlat
or
shll
outsl
mov
aas
jge
xor
add
adc
or
sub
cmp
sub
adc
fdivrl
hlt
xchg
dec
lock
sbb
repz
and
shrl
cli
call
and
adc
fldl
or
aaa
sar
incl
push
cmp
in
adc
lock
or
icebp
fcmovnbe
ret
push
out
cs
test
ljmp
xchg
stos
or
imul
jne
mov
mov
nop
mov
nop
mov
mov
arpl
test
or
out
test
push
sub
push
das
xor
stos
lods
fnstcw
shrb
hlt
decl
sub
in
fnstenv
jp
loopne
xor
fsubrl
es
lods
mov
dec
xlat
shll
addr16
sub
cmp
jg
decl
push
xor
add
in
in
das
stos
or
jne
out
mov
in
pushl
dec
call
jnp
xchg
mov
fsts
and
cmpsb
sbb
test
jmp
push
test
fnsave
fnstsw
jle
pusha
jg
push
loopne
mov
sbb
dec
ficomps
stos
in
leave
fidivs
fisubrs
push
inc
mov
dec
inc
insb
ficomps
and
push
mov
enter
outsb
dec
fidivrl
in
lret
insb
inc
mov
push
jg
ljmp
in
fbld
loopne
mov
adc
cmp
cwtl
add
push
std
lcall
dec
mov
inc
dec
adc
xchg
fwait
pop
ret
adc
cmp
sbb
pop
shl
mov
mov
mov
popf
movsb
sti
pop
leave
and
or
push
cmp
fsubrs
loopne
ret
or
rcrb
adc
fildll
jb
jns
add
loope
inc
jb
fs
loope
mov
imul
sub
addr16
das
sub
and
int3
inc
movsb
fldt
aad
or
pushf
push
jo
lcall
sbb
pop
push
fistps
sub
xor
int
outsl
in
mov
imul
jmp
lcall
pop
lock
add
loop
rclb
cmp
or
popf
psrad
adc
out
clc
jg
bound
andb
les
imul
ljmp
adc
mov
fldt
jmp
inc
add
or
divb
mov
pop
dec
and
xor
incl
mov
outsb
sub
dec
rcrb
lcall
adc
je
insb
mov
decl
ret
cmpsl
inc
mov
cmpsl
push
insb
mov
ss
arpl
adcl
push
or
ljmp
or
les
inc
jae
arpl
out
pop
push
ss
sti
pop
jns
inc
sub
jo
jmp
sbb
rcrl
push
mov
dec
push
push
cmpsl
sar
ljmp
mov
and
mov
sbb
sbb
jb
jns
sub
test
std
decl
jp
and
jnp
out
push
mov
dec
or
mov
inc
inc
dec
cmp
decl
out
scas
dec
outsb
xor
push
sbb
inc
gs
cmp
aas
cmp
outsl
cmp
insb
fptan
xor
and
jg
test
or
adc
jp
jg
rcrl
movd
push
push
add
add
filds
mov
ljmp
les
jb
cmp
sub
cmpsl
xchg
insl
movsb
or
ret
stos
adc
mov
pusha
xchg
mov
repnz
jo
pop
inc
aad
and
notl
lds
loope
mov
outsl
jl
repz
and
mov
xchg
sub
jl
iret
pop
dec
xor
mov
add
js
adc
outsl
xlat
je
imul
addl
jns
fcomps
push
pop
iret
jg
inc
std
jae
xchg
adc
push
inc
fbld
sar
push
and
jb
imul
cld
call
adc
test
xchg
push
daa
push
jbe
push
lea
test
push
push
mov
aaa
loopne
mov
gs
jb
jl
dec
imul
scas
clc
ljmp
pop
adc
lret
movb
aaa
add
daa
stos
or
jmp
xchg
shl
mov
xchg
add
test
mov
lcall
sub
orl
scas
imul
jmp
pop
sbb
bound
std
adc
jno
lahf
lcall
add
push
lods
adc
or
mov
adc
stos
sub
pusha
adc
add
or
aam
pop
stos
and
addr16
jg
pop
jp
rolb
mov
cmp
lahf
sbb
xchg
fbstp
or
and
decl
inc
push
ja
daa
adc
sahf
mov
mov
call
stos
cmp
adcb
push
in
ljmp
notl
inc
cwtl
fidivrl
addr16
cmpsl
fistpll
in
push
push
push
outsl
mov
mov
or
jg
rolb
and
and
divl
or
adc
jmp
mov
fimull
pop
call
hlt
call
imul
out
mov
lds
pop
push
sbb
and
in
clc
fisubl
mov
pop
pop
mov
int
mov
mov
aas
push
ljmp
xchg
push
pop
adc
push
mov
push
subl
pop
xchg
fisubs
xor
repz
cmpsl
cli
mov
push
insb
or
jo
adc
mov
adc
out
sbb
adc
shlb
or
push
arpl
inc
mov
movl
hlt
jmp
imul
inc
mov
testl
cmpsl
icebp
mov
cmp
push
jg
push
cmp
incl
push
pusha
pop
ljmp
mov
inc
ret
pop
adc
lods
fwait
idiv
ljmp
aas
lahf
add
imul
pop
or
setno
imul
adcb
adc
fsubrs
inc
aas
cmp
rcll
repnz
decl
lods
cwtl
pop
subb
sbb
mov
call
incl
jns
xor
cmp
jg
pop
push
rcll
daa
inc
fcompl
outsb
pop
call
inc
jecxz
push
mov
push
xor
fnstcw
sarl
xor
stos
push
cld
jg
popa
xorb
movsl
inc
cmpsb
xor
mov
incl
in
fmul
popf
nop
cmp
pushf
pop
add
in
push
or
insb
add
sub
out
adc
cmp
add
dec
jg
adc
sub
sbb
icebp
sbb
add
cld
cli
decb
outsl
push
cli
sub
adc
and
and
sbb
mov
cli
sub
mov
cli
gs
and
adc
sbb
pushf
stos
or
repnz
inc
js
popa
sbb
out
fiaddl
js
cwtl
int3
fildl
sbb
and
decl
fwait
in
inc
push
mov
push
cmp
nop
fdivr
jbe
out
add
test
aaa
lock
dec
shlb
adc
dec
sbb
ss
insb
outsl
and
and
add
fcoms
cld
pushl
adc
cmp
cmp
jle
clc
jo
in
hlt
fwait
pushl
inc
push
adc
insb
out
pop
adc
movsb
mov
test
fistpl
nop
or
incl
and
data16
push
das
imulb
jbe
mov
mov
mov
das
cmp
mov
cmp
inc
jmp
inc
push
out
pop
bound
lea
xchg
ds
pop
sub
lret
loopne
or
stos
sub
call
sub
sub
jo
popl
ljmp
cli
mov
push
lock
lock
int3
pop
sbb
loope
imul
sub
cwtl
pop
mov
jmp
push
add
adc
wrmsr
addr16
jle
add
add
inc
mov
sub
ljmp
add
out
loopne
mov
popa
add
ljmp
inc
cli
dec
in
lock
scas
test
pop
imul
mov
movsb
cmpsb
subb
outsl
mov
sti
xor
jo
adc
sar
jo
pop
add
inc
sti
into
push
ret
dec
add
cmp
es
dec
int
fmul
inc
popa
arpl
xor
inc
cld
inc
adc
or
decl
outsl
mov
aas
aas
inc
divl
addl
and
mov
add
jp
dec
shll
and
jg
addb
sbbb
xchg
dec
mov
xor
dec
dec
push
lock
incl
nop
fs
mov
add
pusha
jmp
jne
jmp
shrb
or
int3
sbb
cmpsl
loope
xlat
decl
incl
inc
cmp
xchg
cli
nop
cmp
pop
rorl
test
aaa
and
mov
icebp
outsl
fwait
test
les
jmp
call
jge
lds
mov
push
push
inc
jg
pop
inc
das
movsb
jns
pushf
pusha
add
orb
jb
arpl
cmp
call
cld
pop
aad
push
push
and
in
movsl
sub
adc
add
jns
xchg
or
movsb
inc
out
and
and
out
mov
cmp
pop
push
int3
jl
or
bound
ljmp
jne
mov
enter
or
cmp
pop
jmp
ljmp
push
sbb
fnsave
pop
jnp
adc
mov
incl
loopne
inc
push
les
jo
and
jl
mov
mov
push
adc
mov
bound
stos
imul
mov
and
mov
je
add
rclb
inc
jecxz
movsb
aaa
std
or
jo
xor
nop
popf
fwait
mov
cmpsl
aad
pop
and
xorb
sub
lahf
xchg
dec
push
jg
call
or
sbb
mov
call
loop
dec
sub
les
xchg
dec
mov
loopne
sahf
and
in
pop
xor
sti
xchg
les
fcomip
clc
dec
clc
das
pop
in
push
mov
fcmovnb
or
inc
push
fwait
sbb
xchg
imul
incl
push
sub
es
stc
inc
pushf
and
stos
jg
add
jns
nop
out
fsubp
mov
rol
jl
cmpsb
outsb
push
out
outsb
dec
lock
dec
enter
pop
xor
jbe
rorb
dec
mov
push
mov
and
lcall
cmp
bnd
dec
xor
ss
nop
lcall
jecxz
pop
jb
mov
aaa
dec
sbb
shll
imul
shll
mov
push
mov
pop
out
sbb
insb
fadd
or
or
dec
pop
pusha
mov
dec
mov
mov
inc
cmpsb
xchg
fists
dec
popf
mov
std
xchg
sbb
pushl
std
cwtl
add
nop
ja
cld
in
pop
xor
out
jae
ficoml
stos
incl
out
inc
enter
adc
dec
ss
or
mov
test
lcall
inc
clc
popf
in
add
iret
cmp
data16
lock
cmpsl
nop
iret
pushf
call
lds
cltd
add
in
dec
iret
jle
int3
cmp
mov
jg
ljmp
mov
fwait
int
jnp
jle
jo
lods
pusha
ds
jnp
shrb
aas
rolb
pusha
push
test
shrl
popa
sbb
dec
outsb
mov
fwait
neg
neg
jno
scas
mulb
mov
adc
insb
fdivrp
push
clc
cmp
sahf
sub
hlt
les
nop
movsb
cmp
aas
insb
add
mov
adc
and
loop
std
ja
jnp
mov
lret
repz
faddl
lods
push
inc
sub
cli
mov
jle
mov
or
fadd
ret
ds
and
orl
xor
data16
inc
jge
jle
call
popa
bound
add
mov
push
xchg
mov
xor
sub
out
cli
outsl
mov
add
setle
xor
adc
add
inc
adc
mov
push
movsb
repz
lea
out
push
and
jns
std
icebp
add
stos
push
unpckhps
mov
jmp
int3
addr16
sahf
mov
cmpsl
or
add
add
lahf
aas
dec
outsb
jg
adc
test
iret
or
dec
or
mov
pop
sbb
fildl
jb
sub
or
dec
xchg
inc
insl
xchg
sbb
pushf
push
adc
jmp
or
cwtl
cmp
jno
nop
arpl
nop
add
xchg
add
nop
pop
hlt
push
push
xor
add
lods
popf
inc
divl
inc
push
fadds
push
nop
addr16
je
push
fcom
pop
or
fisubrs
mov
and
push
jb
sbb
push
sbb
and
sbb
andl
mov
mov
add
shlb
ret
test
es
daa
loopne
decl
dec
dec
adc
jecxz
adc
or
cwtl
pop
inc
jmp
hlt
inc
rcrl
xchg
sub
jmp
add
insb
add
sbb
test
shl
fstl
dec
ss
push
or
mov
add
mov
dec
inc
dec
dec
sub
inc
repz
sbb
cmp
aaa
std
fadd
popf
cs
dec
out
and
dec
int3
jmp
es
popf
jg
fbstp
sub
push
cmpsl
fwait
pop
sbbb
inc
jae
ja
in
sbb
decl
jmp
xor
es
xchg
inc
divl
xor
add
inc
dec
fs
enter
call
insb
divps
cmp
lcall
sub
call
adc
mov
add
cmp
xor
js
pop
xchg
add
pusha
mov
aam
or
outsl
mov
xlat
sti
popa
cmp
cmp
aas
rcll
ljmp
inc
fdivrp
inc
clc
inc
add
push
and
mov
inc
pop
mov
js
pop
or
inc
or
mov
enter
outsl
test
mov
sbb
pop
movsl
lret
pop
inc
mov
outsl
cmp
jp
repnz
add
das
cld
pop
cltd
and
inc
add
add
lock
subb
dec
nop
add
sub
xchg
add
add
adc
inc
push
add
movsl
movsl
inc
idiv
mov
jmp
int3
push
lock
mov
jae
cmp
test
call
cld
call
je
xlat
push
les
push
nop
pushf
repnz
add
or
leave
and
icebp
xchg
decl
js
and
jnp
cmp
je
xchg
imul
mov
clc
mov
lcall
jmp
filds
and
repnz
cli
jmp
adc
dec
jno
adc
pop
and
mov
sbb
and
cmp
mov
and
or
aaa
ds
in
cmp
add
sub
mov
dec
pop
cltd
dec
push
inc
sbb
cmp
push
pop
dec
mov
and
add
and
pop
hlt
or
fs
add
adc
xor
je
faddl
xor
daa
stos
in
inc
push
sub
sbb
nop
push
sub
scas
stos
mov
out
cs
push
aaa
cs
add
mov
inc
dec
inc
testb
xor
cmp
pop
hlt
inc
ljmp
xor
inc
sub
push
push
xchg
and
and
jmp
xor
stos
jmp
cli
inc
mov
shll
dec
fiaddl
pop
rol
out
push
xchg
aaa
mov
mov
rcr
jb
cmp
leave
cmp
leave
push
jb
inc
loopne
aaa
xchg
or
push
push
sbb
mov
fcmovne
or
sbb
sbb
or
inc
dec
push
push
pop
clc
incl
and
xchg
dec
pop
adc
and
pop
sub
add
or
lret
ljmp
out
add
dec
push
mov
push
std
insl
fidivrs
push
lcall
inc
in
push
pop
push
sub
aam
cs
mov
add
fs
loopne
call
js
out
testl
sahf
ss
nop
stos
out
xchg
mov
push
mov
push
jo
jmp
adc
clc
scas
popf
nop
sbb
push
jb
and
stos
adc
push
outsb
orb
mov
dec
mov
das
mov
inc
cwtl
dec
bswap
fdivrs
pop
mov
hlt
mov
lock
and
xor
mov
enter
lcall
mov
sbb
pop
loopne
lret
mov
sub
rorl
add
mov
pop
sub
mov
mov
rcl
cvtps2pd
cmpsl
cmp
icebp
add
mov
imul
fildl
or
push
faddl
popa
add
xchg
iret
pop
pop
aam
imul
push
jp
mov
dec
lahf
cli
fildll
ljmp
dec
mov
cmp
addb
adc
filds
js
in
scas
push
nop
or
xor
inc
decl
add
mov
add
sbb
divl
add
imul
dec
and
mov
ret
mov
sbb
in
cmpsb
push
and
pop
push
pop
adc
push
std
jmp
pop
loopne
and
sbb
cmp
cs
add
mov
and
or
inc
fs
outsb
jmp
push
jo
lcall
insb
loopne
leave
jbe
lahf
and
push
and
loop
sbb
es
fs
push
xchg
pop
mov
ljmp
jl
int3
flds
and
push
push
jl
push
popa
mov
or
push
jg
decl
or
dec
mov
xorb
pop
dec
push
mov
fwait
xor
cmp
pop
int3
pop
mov
mov
shll
js
icebp
pop
mov
pop
aaa
pop
and
jl
test
addl
dec
mov
enter
and
pop
movsb
cmpsl
and
pop
sarl
mov
and
jmp
xor
jecxz
dec
cli
push
ljmp
sub
dec
movsl
mov
scas
mov
inc
sbb
mov
aaa
rorb
adc
dec
dec
push
or
adc
adc
loop
repnz
mov
or
setns
shll
call
xchg
push
dec
jge
xchg
mov
pop
jnp
sbb
inc
inc
adc
jb
adc
stos
incl
sbb
adc
mov
sbb
js
test
inc
fs
dec
imul
xor
lcall
add
pop
adc
sbb
sbbl
cli
push
gs
fcomip
jno
imul
and
jns
mov
imul
and
outsl
je
fildl
enter
push
push
mov
shll
dec
xor
in
pushf
mov
jl
rorl
adc
and
int
jo
pop
sbb
xchg
dec
mov
adc
int3
dec
cmp
pushf
inc
inc
sub
mov
loop
push
psubq
popa
insb
push
inc
jo
scas
inc
lods
in
imul
sub
sub
and
cmp
ljmp
in
sub
lea
movsb
xor
sub
xor
pop
xchg
or
mov
and
fisttps
push
dec
insb
test
adcb
sti
das
lret
xchg
xchg
addb
or
jae
and
mull
dec
insb
adc
repz
test
or
test
ss
xchg
inc
rcrb
fisubs
mov
std
cmp
mov
mov
sbb
sub
add
pop
fmul
push
push
inc
inc
cmp
push
mov
xlat
incl
cmp
add
pop
xor
and
sar
inc
ret
mov
inc
or
js
adc
aas
je
pop
push
or
jl
adc
or
or
movsl
int
rorl
into
cs
jmp
adc
mov
movsb
and
mov
add
mov
mov
mov
das
or
mov
adc
or
xchg
lock
imul
inc
pop
bsf
leave
mov
adc
gs
and
or
ds
jg
fstpl
ja
adc
or
cld
push
orl
subl
xchg
mov
aam
mov
test
lcall
push
movsb
xchg
sarb
xchg
pop
or
add
dec
and
and
and
icebp
inc
cmp
fisubrl
xor
in
xchg
testl
jg
ljmp
sbb
xchg
add
adc
mov
and
call
pop
push
mov
dec
mov
arpl
or
adc
push
bound
fcomip
idiv
addr16
add
les
adc
dec
leave
inc
or
lcall
inc
xor
and
hlt
adc
repnz
xor
ljmp
pop
push
test
xchg
cmp
mov
xorb
adc
mov
cld
adc
std
call
jae
mov
sub
sti
jne
je
imul
ljmp
cmp
cmpsl
sbb
xor
rorb
add
les
xchg
and
fstl
xor
push
ss
push
sub
or
loope
xchg
or
cli
and
add
inc
mov
shll
loopne
xor
sub
or
aas
inc
cmp
sbb
cld
lret
pushl
xchg
mov
sub
or
add
xchg
jle
mov
ljmp
icebp
cmp
mov
xchg
clc
adc
mov
popa
pop
hlt
cmp
mov
xor
aaa
or
insl
call
rclb
dec
sahf
xchg
pusha
add
incl
mov
xchg
mov
push
imul
out
test
dec
jg
cld
jae
xchg
sbb
cmpsl
movsl
stos
ss
add
xor
adcl
and
mov
add
mov
rolb
push
and
call
and
or
call
xchg
xlat
lcall
rol
and
jne
addl
and
dec
jmp
outsl
pop
dec
dec
or
add
mov
jae
xor
jecxz
push
test
or
dec
sbb
das
mov
mov
je
ds
mov
decl
jge
rolb
xor
sub
add
call
clc
inc
mov
call
cld
mov
aam
push
mov
ja
movzwl
adc
dec
inc
and
dec
push
mov
xor
fs
xchg
hlt
ljmp
push
add
rorl
daa
in
or
dec
pop
es
jb
jg
lret
addl
aas
and
sbb
inc
iret
xchg
imul
insb
inc
movsb
sti
stos
cmp
cmpsb
das
call
iret
push
xor
mov
lods
leave
add
push
jmp
inc
popa
jecxz
and
test
decl
pop
sarl
cmp
adcb
jo
loop
and
fiaddl
sbb
fwait
ljmp
cli
push
jae
aam
sub
mov
push
xchg
pop
pop
inc
cmp
pop
sahf
sub
incl
popf
mov
int
push
add
ret
rorb
mov
and
jns
dec
inc
push
js
jmp
fnstsw
pop
je
mov
pop
cmp
sub
pmuludq
nop
sbb
jle
call
cmp
mov
cmp
push
inc
add
in
rol
jmp
mov
dec
mov
mov
mov
fistps
nop
mov
and
ja
call
pop
mov
sub
movsl
cmp
sub
aaa
test
or
jmp
or
push
jne
mov
adc
push
mov
in
cmc
pushl
sarb
mov
lea
xlat
sub
fisttps
add
cmp
mov
xorl
add
xchg
lcall
dec
cmp
insb
xchg
xor
test
cmp
test
jmp
loope
sub
lcall
dec
aas
inc
adc
dec
dec
jl
or
jb
fs
push
idivb
jae
xchg
mov
sub
aam
sbb
fadds
and
inc
dec
aaa
mov
cmc
insl
jmp
jo
sbb
in
loop
ljmp
ljmp
je
sahf
jns
push
mov
sahf
inc
mov
jle
add
in
add
incl
sbb
test
outsl
enter
fisubl
test
adc
push
lea
sti
and
stos
test
or
lods
xchg
jno
sbb
cmp
fwait
fs
mov
cwtl
add
jle
xor
incl
jno
adc
bound
push
mov
add
mov
mov
sbb
mov
es
subb
and
sub
fwait
mov
jno
cmpsb
call
nop
jno
orl
movsb
add
and
lock
adc
decl
loopne
jge
daa
sub
mov
sbb
sbb
push
cmpsb
push
lahf
xchg
fsubl
jo
std
push
mov
xchg
jo
sahf
jae
sahf
and
dec
sbb
mov
add
jb
xchg
pop
gs
mov
mov
mov
popa
ja
popa
mov
je
je
sbb
push
psadbw
or
in
xchg
mov
icebp
jg
sbb
pop
cmp
sti
fistps
jmp
jbe
adcb
cmp
and
sbb
test
call
lcall
push
xchg
and
push
je
mov
dec
mov
inc
pop
push
xchg
mov
incl
pop
rorb
xchg
sub
ficompl
sub
mov
and
dec
test
pop
movsb
testb
add
jg
decl
sbb
pop
lods
inc
xchg
and
sahf
or
out
jmp
adc
imul
push
pop
adc
adc
fcoms
in
lea
repz
lds
call
add
sbb
xchg
dec
sbb
inc
dec
push
call
or
add
mov
xchg
loop
and
sbb
xor
xor
jmp
pop
ja
call
clc
cwtl
cmp
and
and
sub
mov
mov
fwait
and
arpl
xor
fs
mov
pushl
enter
pop
dec
and
bound
cwtl
mov
aas
pop
pusha
rcl
mov
test
push
mov
aas
mov
pop
mov
cmp
add
je
or
adc
xchg
insl
fisubs
adc
add
incl
sub
dec
mov
shll
scas
push
test
mov
add
mov
jg
mov
inc
mov
mov
pushf
outsl
test
fdivs
ret
aam
xchg
xchg
and
pop
adc
dec
sarb
jne
andl
ret
dec
and
mov
out
mov
mov
add
sbb
pop
std
outsl
add
je
test
decl
cld
mov
adc
inc
negl
das
outsb
call
mov
or
sub
and
insl
fisttpl
int3
add
mov
sub
pop
std
fbld
jb
lahf
inc
outsl
mov
icebp
push
pop
cwtl
pop
inc
jbe
movb
sub
jnp
in
adc
call
nop
mov
mov
insb
push
repnz
lcall
mov
push
pop
xchg
sti
ja
sbbb
pushl
jge
insl
add
sub
mov
outsl
adc
mov
in
nop
xchg
or
or
repnz
push
jno
loopne
push
push
push
mov
xchg
pop
addl
outsb
fbstp
adcb
sub
in
incl
sbb
pop
sub
inc
push
out
jae
stos
ljmp
adc
cmp
push
filds
in
inc
ss
push
pushl
xor
and
adc
sub
fsubs
xor
dec
leave
test
cmp
mov
mov
sub
sbb
add
pop
pop
mov
jmp
cmpb
enter
lcall
ret
add
sti
add
inc
stos
aaa
std
incl
imul
lock
xorps
push
pusha
adc
loope
in
sahf
cmpl
ljmp
js
mov
xchg
push
lahf
push
xor
clc
ficoml
and
mov
call
test
and
mov
mov
arpl
push
pushf
add
test
adc
or
inc
mov
mov
daa
dec
je
push
call
inc
pop
cmpsb
ficomps
ljmp
xchg
je
lcall
leave
push
jno
push
cmp
sbb
test
jo
ret
sub
push
fwait
adc
outsb
add
pushl
shrb
and
sbb
mov
std
lcall
push
in
imul
pop
scas
sbb
jg
je
add
xorb
stos
mov
in
jb
xchg
call
mov
pushl
add
cmp
insb
jge
cmp
mov
xor
stc
je
add
call
jnp
subb
cmp
sub
movswl
cmp
sbb
pusha
into
int3
in
outsl
xchg
shl
out
icebp
xchg
test
decl
pop
xorb
dec
testl
out
jmp
mov
sarb
lock
jo
sub
jg
lcall
push
scas
cmp
add
push
test
out
add
test
insb
adc
dec
cmpl
or
lock
push
dec
sbb
pop
xchg
sar
rcll
dec
cmp
pop
test
jmp
mov
push
popa
add
scas
stos
loopne
js
gs
inc
add
jbe
das
pop
sub
sbb
pusha
ret
dec
lcall
mov
insb
add
inc
pop
add
push
jo
sbb
dec
pop
sahf
push
jmp
ljmp
add
bound
dec
pop
int3
rorb
jg
push
mov
and
fcoms
lcall
and
pop
pusha
cmpsl
inc
add
sub
mov
sbb
pop
lock
lcall
or
cmp
add
stos
jge
sbb
push
and
or
mov
pop
and
sbb
clc
dec
mov
aad
cmp
xchg
pushl
cli
ret
xor
push
push
fiaddl
adc
inc
loop
xor
lcall
mov
and
xchg
fiadds
ffreep
std
scas
fisubs
lret
sub
cmp
add
jmp
scas
rclb
or
loope
jmp
ficomps
paddsw
mov
call
addb
xchg
js
or
movsb
pop
in
dec
push
pop
hlt
sub
jge
sarl
pushl
push
fcoml
xlat
add
jno
loopne
subb
fisttpl
inc
lret
addr16
add
call
mov
enter
and
jmp
movb
pop
lcall
sbb
jnp
inc
mov
xchg
enter
lcall
dec
mov
rolb
push
push
inc
inc
sbb
jl
inc
pop
out
fdivrl
enter
iret
cmpsb
scas
xchg
mov
fbld
ret
sub
and
dec
outsl
int3
sbbl
pop
testb
fwait
push
push
and
jg
sahf
sbb
mov
dec
cld
lcall
push
in
jg
call
dec
subb
cs
pushl
cmp
mov
mov
out
subb
jne
addb
adc
imul
adc
and
pop
cld
fdivs
insl
pop
sbb
dec
push
aaa
je
cli
sahf
jb
nop
sub
pop
sarb
or
ss
cmpsl
cld
and
mov
cli
decl
push
ljmp
lcall
out
pop
jnp
decl
push
xchg
sti
subl
data16
and
mov
cli
inc
xchg
in
sbb
push
les
push
mov
add
mov
pop
cmp
dec
inc
mov
mov
lret
pop
inc
pusha
jg
ds
jae
pop
sbb
das
aas
popl
incl
ss
pop
cmp
bound
int
xor
inc
and
ret
adc
add
enter
dec
jle
aas
or
dec
test
add
pop
inc
loop
inc
xor
insb
cld
adc
push
ret
ja
aas
push
mov
jae
add
enter
or
fmuls
adc
out
cmpb
adc
incl
mov
rcrb
incl
fisttps
pop
inc
ret
pop
push
mov
inc
jmp
shlb
add
sbb
add
scas
xor
cmp
fistps
or
jmp
and
stc
imul
and
decl
cmp
or
popf
sbb
popa
sar
scas
adc
inc
jno
jmp
insb
or
aas
lcall
icebp
mov
xor
test
inc
rcrb
out
in
shlb
pop
mov
pop
jg
or
incl
incl
mov
inc
dec
mull
mov
cld
ljmp
into
daa
dec
and
cs
popa
test
sub
enter
or
mov
mov
push
add
popl
ss
dec
inc
pushf
and
ljmp
mov
push
push
dec
je
add
jmp
cmp
negb
jg
sbb
and
ljmp
je
add
adc
or
xchg
aas
adc
daa
mov
push
sub
mov
sbb
dec
gs
popa
jle
and
xchg
push
lods
loopne
adc
pop
pop
dec
mov
es
es
jle
mov
out
clc
inc
push
dec
ret
cli
mov
fcompl
xor
cmpsl
sub
add
sbb
ljmp
xor
add
mov
xchg
insb
scas
addb
sbb
movsb
ljmp
test
mov
sti
adc
insb
in
leave
push
aad
aas
xchg
fmul
js
ret
scas
dec
jg
loope
push
je,pt
xchg
jecxz
movsb
into
mov
out
adc
fstpl
xchg
nop
movsb
incl
insb
pop
je
push
push
dec
ret
rcll
lock
ret
pusha
and
add
incl
and
sbb
mov
subb
add
dec
adc
add
ror
jge
clc
je
sbb
lods
mov
dec
rorb
push
and
mov
inc
inc
decl
inc
push
inc
inc
pop
mov
pop
push
mov
aaa
sub
xor
sub
cs
inc
pop
mov
push
xchg
inc
cs
lcall
mov
adc
add
pushf
and
push
call
inc
dec
rsqrtps
sbb
in
mov
add
sarb
leave
popa
push
jle
push
test
mov
cld
adc
mov
sub
daa
xchg
adc
push
fs
insl
xchg
or
scas
int
xchg
and
aaa
jb
aaa
aaa
movl
je
xor
movsb
lock
mov
bound
jae
test
repnz
call
movsb
mov
and
mov
les
in
jo
push
push
push
faddp
jmp
pusha
add
insb
xchg
sub
lret
adc
mov
adc
aad
or
scas
dec
and
rorb
decl
ds
outsb
pop
ja
jae
daa
cmp
push
push
and
lcall
cmp
adc
jmp
bound
add
cli
mov
xor
sub
arpl
sbb
jmp
jl
loopne
cs
cmpsl
call
test
cwtl
outsb
or
mov
xor
mov
gs
push
push
pop
cmp
idiv
ljmp
push
outsl
xchg
cmpsb
xchg
xchg
addb
jle
sub
lret
dec
imul
sbb
fidivrl
mov
cmpsl
add
incl
mov
mov
pop
xchg
cmp
jne
pop
imul
ja
inc
cmpsl
scas
iret
out
fsubs
jp
sbb
daa
or
pushl
jno
and
inc
push
aam
cmp
push
jo
loopne
add
pushl
push
or
loope
or
inc
and
ss
adc
ret
movsl
jp
mov
sar
lcall
repnz
sub
data16
pusha
insb
dec
cmc
sbb
mov
sub
and
aam
loop
add
pop
sbb
bnd
mov
and
decl
movsb
xchg
loop
jbe
mov
cmp
sub
jg
mov
mov
or
dec
add
mov
dec
jne
decl
sub
out
mov
xchg
sbb
cwtl
push
jg
imul
pop
lock
cmp
insl
fwait
adc
jge
ljmp
mov
cld
and
adc
clc
dec
outsb
pop
enter
mov
push
lods
pop
mov
test
mov
lock
pop
cmp
adc
cmp
lcall
jle
or
pop
cmpsl
sbb
cmp
jg
pop
adc
push
enter
stos
add
or
adc
out
stos
xor
jns
jo
inc
cld
pop
ljmp
sbb
dec
mov
jmp
dec
rolb
or
cmp
in
and
decl
mov
jecxz
daa
dec
adc
push
xorb
cmp
call
add
jo
and
or
and
mov
xchg
nop
pop
stc
xchg
push
xchg
ss
pushl
cwtl
and
daa
mov
adc
pop
push
inc
and
jmp
shrb
xor
sbb
inc
decl
push
shll
and
mov
dec
out
sbb
pop
pop
fwait
scas
xchg
aad
jae
lcall
dec
and
popf
movsl
xor
push
lods
sbb
mov
repnz
ret
pop
imulb
cmp
loop
loopne
imul
adc
pop
sub
xor
rolb
dec
cmp
push
std
mov
jge
or
cs
sbb
adc
lcall
outsl
sub
add
lret
add
mov
and
test
lods
jg
rcrb
push
enter
arpl
pop
pop
daa
and
mov
cmp
movsl
add
push
sti
lcall
xchg
bound
enter
pop
lods
push
and
in
ret
pop
cwtl
in
mov
inc
fisubs
jle
out
enter
mov
sub
in
jmp
or
mov
rorl
insl
dec
stos
and
aad
mov
cmpsl
pop
xor
popa
jmp
adc
push
fcoml
dec
sahf
ljmp
clc
inc
xlat
daa
mov
xor
or
lcall
jne
ss
lcall
sarb
inc
clc
pop
lea
loopne
add
xor
sbb
incl
scas
popf
mov
and
adc
fwait
aam
fs
sbb
icebp
cmp
aaa
adc
lcall
push
jne
sub
aaa
and
call
pop
sub
dec
mov
movsb
lods
mov
xor
dec
lcall
xor
sbb
ljmp
les
in
xchg
pushf
jns
in
pop
cli
lcall
pop
mov
orl
and
inc
xor
or
mov
mov
pop
or
ljmp
idivl
js
sub
iret
insl
ficomps
push
dec
push
dec
sub
mov
aam
incl
mov
push
cmp
sarb
inc
xor
out
mov
cmp
sarl
and
sub
push
xorb
jl
xlat
add
cmp
aas
andb
movsb
sub
push
je
pushf
or
mov
jmp
cmp
pop
or
cs
pop
push
lahf
ljmp
clc
lock
adc
inc
and
add
or
fwait
mov
add
mov
push
in
inc
outsb
je
mov
push
xchg
scas
popa
inc
sahf
sub
rcrl
sbb
mov
sub
hlt
ljmp
pop
fiaddl
xlat
bound
push
loopne
call
xchg
jl
imul
add
push
add
outsl
and
decl
mov
fdivr
cmp
sahf
movsl
or
insl
sbb
and
adc
stos
decl
out
sbb
pop
fidivl
add
scas
add
or
adc
sbbl
add
xchg
bound
dec
sbb
insl
clc
xchg
incl
adc
xlat
adc
popa
or
inc
leave
push
push
fildll
dec
call
add
andl
adc
lock
pushl
aam
pop
push
popa
insb
xor
popa
jns
nop
pop
sbb
sub
daa
cld
mov
sbb
mov
mov
lcall
push
or
mov
and
roll
dec
adc
sub
cmp
addl
or
repnz
mov
lods
xchg
into
jno
je
inc
mov
test
cmpsl
xchg
std
data16
and
push
leave
push
jb
and
jmp
in
jmp
add
shrl
jb
sub
dec
xor
movb
addb
ljmp
aam
cmp
cld
push
clc
scas
cmp
call
and
sub
add
fcoml
and
pop
mov
scas
decl
push
push
jo
xor
sysret
sbb
add
mov
or
jae
add
sub
xchg
incl
mov
inc
xchg
mov
lock
dec
xchg
xor
pop
fisttpl
cli
add
pop
xchg
inc
or
cmpsl
movsl
aas
add
ljmp
test
in
push
sti
push
clc
adc
mov
or
and
std
fstl
xor
add
daa
mov
dec
add
and
pusha
dec
or
mov
mov
dec
jecxz
xchg
xor
pop
call
jbe
lahf
add
call
mov
inc
adc
push
mov
add
cmc
xor
mov
jmp
ret
push
cltd
jg
or
cmp
jg
cmp
jbe
aaa
add
jp
jle
fcmovb
add
fisttpl
and
adc
stc
or
and
test
je
lahf
or
call
and
ja
lea
mov
push
add
dec
xor
or
sub
jle
add
frstor
xchg
pop
and
fsubs
ja
add
add
jle
or
cmp
xor
call
sbb
imul
lds
cmp
es
xchg
sub
fadds
inc
inc
add
jg
and
int
mov
imul
mov
test
decl
pop
fcoms
inc
mov
add
clc
js
inc
inc
dec
dec
dec
sbb
sub
pop
fnstenv
lock
cwtl
sub
adc
call
sub
push
push
or
or
mov
mov
mov
pop
insb
jb
push
cmp
ficompl
cmp
daa
sbb
aaa
and
mov
cmp
aam
mov
push
js
or
out
insb
jns
add
jmp
pop
sub
lcall
test
call
scas
push
jnp
inc
ss
ss
or
jle
push
imul
jmp
subb
mov
rclb
cmpb
push
leave
inc
cltd
aaa
cmpb
adc
rsm
mov
xchg
cmp
and
ljmp
mov
add
cwtl
or
stos
cmp
adcb
sahf
out
je
insb
imul
mov
pop
nop
fstpt
mov
pushl
push
jmp
outsb
push
adc
xchg
xlat
inc
pushf
xchg
nop
sbb
xchg
aad
jge
aaa
cmp
in
add
fdivs
data16
fmull
mov
jle
cs
sbb
mov
and
in
dec
sub
sub
jl
mov
fists
add
xchg
xor
test
jmp
rcll
popf
cmp
xchg
or
adcl
pop
sub
mov
and
push
nop
js
sub
jg
mov
jg
jecxz
add
or
fldenv
sub
mov
outsl
pop
mov
push
mov
scas
test
pop
outsl
mov
decl
hlt
dec
mov
imul
testb
push
in
pop
and
inc
mov
and
cmp
out
mov
xchg
or
push
mov
xor
xchg
push
arpl
inc
fs
in
jg
sub
inc
add
sahf
sahf
xor
cmpsb
jo
jmp
cmp
pop
inc
addr16
jle
pop
imul
repnz
add
in
jle
mov
decl
andb
cli
sub
mov
adc
pop
filds
dec
pusha
cmpsl
sbb
mov
sbb
add
rclb
dec
pop
add
into
mov
inc
mov
pop
dec
sub
in
pusha
inc
xor
mov
lcall
ret
xor
inc
icebp
cmp
icebp
rolb
stos
xor
lods
sub
xor
sbb
push
in
sub
incb
pop
dec
or
cmp
mov
jle
popa
or
mov
or
scas
xor
mov
jnp
xor
mov
cmp
rclb
lcall
sub
dec
jo
xor
pop
lcall
mov
add
sub
inc
push
mov
jbe
jg
cltd
mov
bound
out
xchg
xorl
into
orl
push
popa
lret
dec
jge
or
cmpsl
pop
sbb
xor
add
sar
ljmp
sub
push
pop
inc
lods
std
push
fsubs
dec
push
adc
mov
push
nop
and
dec
mov
xchg
dec
or
outsl
mov
push
push
ja
enter
fisubl
stos
jae
ds
decl
imul
or
inc
push
push
jb
aaa
mov
adc
rclb
call
mov
push
cmp
ljmp
es
and
pop
jl
push
movsb
into
or
sbb
adc
in
add
xchg
pop
adc
sub
incl
cmc
and
push
je
lods
jne
repnz
mov
mov
mov
jg
adc
xlat
bound
pop
jl
push
test
mov
jbe
pop
pop
and
inc
push
repnz
fs
jle
hlt
cmp
jnp
call
incl
add
mov
add
hlt
or
popf
lods
aaa
iret
and
adcl
pushl
cltd
push
pushf
inc
imul
and
jbe
sub
sbb
and
add
push
dec
shlb
mov
test
xor
xor
es
push
and
outsl
and
push
dec
pop
cmc
nop
cmpsl
push
flds
in
mov
dec
scas
clc
push
pop
lds
cmc
xorl
int3
data16
fcom
mov
aas
das
jbe
mov
mov
fcompl
mov
ljmp
push
nop
roll
out
pop
mov
sbb
xlat
pop
cmp
pusha
das
xor
add
call
test
add
dec
jg
pop
jno
gs
jo
pop
push
or
lcall
push
add
loopne
decl
fmull
or
lds
sbbl
inc
cmc
ret
or
add
out
xor
loopne
cmpsl
js
jg
cmp
push
sbb
dec
and
push
add
xchg
insb
add
pusha
out
stos
hlt
in
sbb
sbb
es
call
xchg
iret
xchg
test
sbb
enter
inc
xor
sbb
out
outsb
xchg
inc
pop
cmp
push
sbb
add
add
mov
jp
pop
jl
dec
sbbb
mov
jnp
mov
call
shl
add
sti
aaa
jns
testl
push
addr16
sub
and
and
mov
xchg
sti
in
je
enter
mov
sub
pop
ds
ret
xchg
pop
jg
sub
xchg
fs
pop
mov
mov
cs
jmp
mov
dec
mov
add
leave
push
cmpsl
xor
ljmp
nop
xchg
jp
repnz
lock
mov
mov
jp
and
pop
hlt
push
mov
mov
and
cmpsb
clc
sbb
popa
fs
addr16
cmp
push
daa
pop
inc
xchg
cmp
pop
ljmp
cwtl
dec
cmp
call
imul
xchg
pop
jnp
adc
inc
rcrl
das
cli
dec
inc
lods
sub
jb
jl
jl
push
mov
xchg
jb
sub
add
jg
cld
lea
decb
ret
call
cld
out
xor
fdivl
jae
xchg
push
popl
add
xchg
insb
incl
cld
cmpsl
loopne
adc
jge
jle
mov
lds
jl
lock
mov
push
std
in
mov
inc
ja
xchg
add
cmp
dec
push
pusha
dec
adc
sbb
adc
insb
inc
ds
dec
inc
dec
push
push
loopne
jb
adc
fcos
test
pushf
pop
jl
nop
out
xchg
inc
je
cld
mov
incl
cmpsb
push
outsb
xchg
xchg
adc
sarl
jo
outsb
pop
xor
mov
nop
jne
hlt
adc
mov
sbb
lcall
push
mov
ret
adc
sub
cli
mov
add
xchg
jg
movsl
push
aaa
pushl
subl
mov
pop
mov
xchg
repnz
lea
test
sub
mov
lds
dec
mov
inc
out
adc
or
dec
cmp
adc
call
sbb
xor
frstor
insl
jne
adc
lods
scas
enter
cmp
rcr
sub
ljmp
mov
jl
push
add
enter
push
pop
lret
cmpsl
ljmp
hlt
dec
popa
fisubrs
sahf
in
and
idivl
or
ret
cwtl
jns
fisubrl
in
pop
sub
or
mov
ficompl
out
mov
clc
and
cmp
mov
decl
mov
jecxz
sbb
loop
popa
cmp
aam
insl
pushf
and
dec
sbb
jg
add
pop
inc
test
mov
js
call
roll
lea
cli
or
mov
jo
rcrl
fwait
jp
fwait
clc
lcall
add
or
pop
push
test
outsb
ss
cli
lcall
mov
lods
xchg
subl
out
push
and
stos
lods
bound
dec
cmp
scas
push
sbb
into
outsl
pop
shlb
push
sbb
cmpl
in
sahf
shrb
movsb
ljmp
xchg
cmp
rcl
sbb
adc
adc
xchg
adc
ljmp
mov
push
inc
cmpsb
mov
pop
dec
or
je
dec
lcall
xor
adc
sub
cmp
mov
leave
mov
push
xor
jg
inc
add
testb
mov
sub
imul
cs
add
mov
push
enter
add
aad
gs
inc
add
orl
andb
jle
sub
xchg
cmp
push
or
jg
rorb
push
aad
or
ror
adc
dec
iret
lea
daa
sbb
sub
dec
adc
inc
mov
cld
imul
data16
inc
loop
pop
push
inc
call
sub
push
sarb
push
lret
sbb
push
icebp
pop
push
pop
call
push
and
out
push
insb
push
mov
and
or
and
ret
sbb
test
mov
mov
decl
or
add
pop
and
cmp
in
jp
jnp
jmp
mov
lcall
add
out
pusha
adc
mov
mov
nop
cmp
ljmp
sub
pop
addr16
xor
imul
js
fs
inc
cmp
pop
pop
test
adc
xor
jg
fsubrs
sub
test
sbb
mov
sbb
inc
das
inc
sub
fistl
repnz
mov
adc
and
dec
mov
mov
outsl
sbbb
sub
nop
ja
test
cmp
push
aas
fcomip
dec
mov
push
xchg
arpl
fsts
pop
add
scas
mov
sub
jmp
jmp
sar
insb
mov
rcrl
or
decl
das
sub
icebp
fldenv
xor
and
punpckhbw
mov
jns
icebp
out
mov
cld
pop
loopne
jmp
xor
mov
fisubs
sub
or
inc
push
addb
push
sbb
ljmp
and
test
repnz
jne
test
mov
pop
inc
inc
cmpb
ljmp
mov
mov
leave
push
inc
ljmp
movb
fsubs
jl
or
andl
aas
xlat
and
add
xchg
jae
push
fwait
cmpsb
sub
ljmp
sbb
cwtl
xchg
adc
adc
mov
mov
jno
mov
push
xor
pop
pop
xchg
aam
imul
xchg
scas
xchg
faddl
pop
negb
xor
add
rcll
xchg
mov
dec
ljmp
orl
or
les
jg
lcall
dec
or
inc
pop
push
mov
mov
sub
ret
jle
add
lcall
or
add
pusha
fwait
mov
xor
add
incl
xor
add
mov
xor
testb
test
adc
mov
stos
add
and
adc
aaa
cld
daa
inc
shrb
aad
add
decl
das
or
and
sbb
popa
test
loop
xor
lcall
xor
sub
les
fwait
clc
decl
lock
insb
pushf
xor
les
pop
jne
sub
out
add
ljmp
push
clc
cld
ret
mov
push
ret
adc
jne
stos
push
jle
pop
hlt
mov
icebp
aaa
cmp
and
xor
lcall
rcrl
inc
shlb
dec
mov
xor
add
imul
add
pop
pop
sbbb
adc
mov
clc
push
clc
jg
add
jl
mov
aas
or
cld
mov
xor
add
inc
sbb
das
dec
and
push
mov
and
pop
hlt
pop
movl
fwait
mov
pop
cli
inc
je,pn
inc
inc
repnz
jl
or
sbb
or
dec
ficoml
inc
inc
orl
jl
clc
pop
mov
and
movsl
andl
cmp
inc
sahf
neg
inc
ret
cmp
mov
xor
push
mov
push
jp
scas
push
inc
out
adc
ljmp
bound
pop
pop
push
incl
mov
pop
push
in
mov
and
jmp
push
imul
decl
add
gs
pop
rolb
ja
sub
jmp
sbb
outsb
ljmp
and
xor
call
jg
lcall
testb
in
pop
ljmp
je
movsl
jmp
stc
sete
or
dec
mov
rcr
inc
rcrb
push
nop
mov
dec
imul
mov
test
or
adc
pop
cs
pushl
pushf
jp
lret
in
je
and
add
xchg
getsec
cli
inc
std
stos
jge
lea
cmp
adcb
loope
fstpt
mov
lea
movsb
add
xor
out
sbb
mov
push
push
cld
adc
sarb
idiv
incl
adc
rorb
cmp
xchg
mov
pop
in
cmpsb
mov
clc
mov
mov
adc
push
adc
pop
test
mov
mov
loope
scas
or
ret
imul
add
and
xchg
pop
push
insb
test
adc
push
inc
sub
inc
push
lcall
add
jecxz
mov
and
jmp
sbb
jae
jno
loopne
xor
jg
ljmp
dec
rcll
bound
or
daa
xchg
fcoms
nop
push
dec
sub
mov
sub
mov
les
cmp
push
dec
jb
pop
outsl
scas
mov
pop
push
inc
pop
ret
dec
pop
add
xchg
xor
jg
decl
out
jle
mov
adc
jbe
and
sub
push
sub
call
jl
pop
inc
out
scas
adc
jne
and
je
and
mov
out
jbe
fs
lods
sub
hlt
call
movsb
cmc
in
or
loopne
adc
addr16
clc
mov
inc
loope
jne
jo
lcall
mov
rorb
or
mov
sbb
or
icebp
add
leave
enter
testb
xchg
push
inc
hlt
cld
roll
or
call
rclb
pop
mov
jmp
sub
jg
fwait
dec
test
push
mov
inc
das
les
push
ljmp
sub
add
pop
mov
arpl
rolb
mov
ljmp
lods
test
pop
push
in
pushf
cwtl
mov
mov
pop
cs
inc
mov
jg
push
dec
popa
out
ljmp
jnp
les
add
push
and
orl
movl
call
mov
sbb
ret
andl
mov
lahf
scas
ret
outsl
jmp
xchg
rcrb
fnstcw
int3
jnp
or
enter
mov
movsl
cld
incl
cltd
fisubl
mov
sahf
arpl
clc
subb
mov
incl
adc
outsb
pop
pop
push
cmp
jne
and
sbb
jmp
lcall
fldt
xchg
xor
xchg
push
inc
loopne
lock
dec
inc
fiadds
rcrb
fildl
sbb
sarl
pop
data16
dec
jg
mov
inc
testb
inc
decb
or
sub
test
xor
ljmp
or
sub
fbstp
jno
mov
cmpsl
ret
adc
pop
dec
push
insb
dec
scas
mov
ss
mov
adc
pushf
push
jp
pushl
imul
addb
insl
enter
jb
ljmp
pop
cmp
sbb
test
test
xor
adc
mov
loop
xchg
fwait
cwtl
test
pusha
jmp
or
int3
jnp
ljmp
iret
dec
repnz
rcrb
add
xor
dec
mov
fcomp
sbb
mov
jne
aas
jmp
icebp
lcall
mov
mov
or
mov
mov
cmpsl
shrb
ja
nop
adc
dec
jno
lea
and
cmpl
push
test
call
clc
pop
lcall
lea
enter
in
or
ljmp
or
icebp
and
xorb
push
cwtl
inc
mov
inc
setle
add
add
xor
add
es
rcrl
sbb
bound
cwtl
incl
jo
add
shlb
xor
repz
sub
aaa
cld
lcall
cwtl
add
clc
cmc
test
insl
pusha
mov
negb
addr16
add
mov
dec
out
mov
add
je
dec
les
add
jg
cs
cmp
insb
add
jl
or
test
and
pushl
lgs
sub
das
push
pop
ljmp
movsb
jbe
mov
push
cmp
int3
mov
sbb
mov
cwtl
test
mov
sub
cmp
sbb
jae
mov
ds
mov
cmp
xor
add
jo
sub
ljmp
popf
mov
imul
push
les
push
add
cmp
jmp
int
bound
push
add
outsb
mov
jl
in
jne
sbb
xchg
decl
inc
jne
push
push
cmp
addr16
dec
pop
mov
cwtl
js
incb
decl
dec
rolb
or
lea
adc
cmp
pop
pop
icebp
or
xchg
lcall
push
push
add
mov
jg
jl
or
pop
ret
mov
push
and
xor
add
xchg
sub
ljmp
adc
cltd
or
pop
aam
cmpsl
stc
mov
or
rclb
add
fwait
mov
les
stos
dec
jecxz
stc
test
fwait
sbb
fldt
js
inc
rcr
adc
in
jmp
fsts
lock
lock
sti
pop
pushf
jecxz
mov
inc
inc
mov
cld
lods
je
lock
in
movsl
jbe
dec
pusha
daa
call
loopne
push
cwtl
cld
nop
fisubs
js
mov
xor
push
jmp
mov
and
call
lods
aad
lods
gs
test
popf
dec
cld
jbe
call
or
xchg
adc
xchg
in
pop
sti
dec
cmp
adc
nop
fcmovne
es
and
fnsave
mov
movsb
test
out
mov
lods
mov
inc
push
imul
imul
or
lcall
out
cli
lcall
push
lahf
loopne
mov
mov
add
ljmp
insl
sbb
jmp
adc
add
dec
lock
add
call
push
scas
pop
add
test
inc
scas
decl
push
lret
les
push
and
cli
pushl
or
adc
inc
sahf
orl
aaa
add
and
je
push
stc
bound
ret
jns
ljmp
push
pop
sub
arpl
cmp
jl
or
incl
inc
xor
dec
add
arpl
pop
mov
popa
decl
stc
test
xchg
lret
pop
dec
sbb
nop
lcall
pop
pop
sub
lcall
sarb
and
or
lods
jp
adc
sub
insb
xor
jo
add
lods
decl
nop
movlps
sbb
lock
add
sar
out
test
notb
testl
aaa
mov
ljmp
jmp
inc
push
mov
or
push
inc
dec
inc
cli
inc
ss
add
add
mov
add
or
cli
decl
fsubrl
test
fildl
dec
and
adc
adc
movsl
cmp
loopne
stc
jae
jmp
xchg
call
jg
sbb
cltd
sbb
decl
mov
test
incl
in
dec
aam
or
rcrl
loopne
dec
int3
lret
cwtl
or
mov
xor
aam
sub
mov
cwtl
dec
adc
pop
adc
pop
or
jbe
xchg
or
sti
or
inc
gs
ret
add
aam
dec
std
ja
mov
ret
pop
mov
outsl
popf
xor
cld
neg
mov
xchg
inc
add
pop
mov
mov
ror
inc
push
shrl
clc
jo
cmp
shll
adc
pushl
loopne
test
and
xchg
jmp
push
and
or
and
or
mov
or
mov
add
mov
xor
icebp
inc
jle
insl
rolb
les
pop
xor
loopne
push
sub
sbb
xor
jmp
subl
mov
ljmp
rcr
jbe
shrb
add
pop
rorb
dec
xor
or
push
add
cs
loope
xchg
push
mov
xor
add
cmp
dec
adc
data16
lea
bound
sbb
js
sbb
lods
mov
decl
popa
cwtl
push
mov
mov
mov
pushl
div
les
imul
push
add
jmp
das
mov
mov
je
jl
pushl
adc
cmp
inc
dec
leave
mov
aad
mov
dec
cs
call
push
fisubl
mov
cmpsl
scas
xchg
push
jo
sbb
mov
decl
xchg
rorb
adc
bound
inc
dec
call
mov
outsb
test
inc
pop
xchg
andb
jns
and
mov
and
arpl
inc
add
ret
repz
adc
cmp
test
push
lock
or
cmp
std
adc
mov
mov
sub
push
lods
pop
notb
jle
ljmp
inc
adc
jg
add
inc
add
mov
gs
ljmp
shrb
imul
fmul
enter
sub
cmp
add
mov
inc
pop
decl
jne
xor
mov
lcall
scas
lods
jecxz
pop
sub
fiadds
add
imul
cltd
cmp
out
clc
lcall
dec
getsec
xchg
movsl
ja
adc
testb
scas
hlt
jge
mov
jmp
incl
cld
call
add
push
inc
das
test
push
dec
mov
ja
sar
adc
cmc
cltd
inc
mov
decl
xor
outsb
aam
stc
addb
or
nop
mov
adc
fildll
and
sbb
cld
outsl
fwait
push
jge
ds
adc
jge
mov
and
pushw
repnz
fcomip
incl
xor
and
xchg
jb
daa
test
loope
shll
push
sub
pushl
pop
hlt
xchg
push
push
inc
push
push
dec
push
xor
jle
ljmp
movsb
adc
stos
mov
pop
sub
mov
pop
test
pop
inc
out
adc
rorl
call
adc
mov
call
lcall
lret
or
lods
ret
pop
jns
and
push
faddl
cs
hlt
ja
pusha
mov
push
dec
call
pop
ret
cs
cmpsl
add
sbb
test
inc
cmp
dec
pop
test
push
adc
addr16
outsl
pop
xor
mov
mov
mov
inc
sub
mov
sbb
jg
or
add
add
add
push
jns
ljmp
push
insb
call
jb
dec
push
push
push
xor
sub
in
rcrb
js
add
ljmp
lods
shrb
and
nop
sub
push
or
cmp
sbb
or
sub
es
clc
ja
daa
jl
jmp
ljmp
pusha
add
push
mov
push
mov
test
jg
fwait
pop
jg
sbb
mov
dec
movsl
fstps
or
or
call
popa
ror
mov
add
or
adc
mov
and
iret
inc
and
ljmp
sbb
mov
pop
mov
push
inc
dec
push
inc
in
dec
add
pop
push
xor
fisttps
sahf
jnp
arpl
addl
pop
pop
pop
scas
nop
sbb
and
js
pusha
ret
les
jmp
les
jg
mov
out
nop
pop
sti
stos
cwtl
leave
daa
in
pop
push
cmpsb
pop
cmp
jbe
sarb
daa
fcmovnb
mov
call
inc
pop
sub
add
or
push
mov
incl
adc
dec
cmp
jb
sbb
pop
jb
call
xchg
jo
lea
pop
push
test
jle
filds
sub
add
pop
push
lods
cmp
jge
jno
mov
sbb
pop
or
push
xlat
inc
mov
sub
decl
xchg
pusha
icebp
pop
into
push
push
push
mov
fcoms
mov
dec
ret
fs
lods
test
pushl
shlb
fsubr
clc
pop
sub
sub
test
in
mov
adc
ds
mov
stos
jge
sbb
inc
cmp
xchg
sub
scas
les
aam
pop
call
xchg
test
pop
adc
adc
fimuls
push
inc
pop
pop
push
or
dec
add
sarb
enter
adc
mov
stos
push
jmp
xchg
sbb
xchg
xchg
add
mov
xor
fmuls
jnp
dec
dec
jp
call
call
test
dec
cs
leave
mov
mov
rcr
cmc
pop
pop
lcall
fistl
push
fs
aaa
xchg
imul
push
je
dec
mov
arpl
inc
std
aaa
add
pinsrw
jo
push
ljmp
mov
push
xchg
insb
cs
outsb
iret
leave
pop
mov
inc
inc
fs
in
out
pushf
pusha
clc
call
pop
pop
push
hlt
sarb
pop
out
mov
or
dec
rorb
cli
imul
jp
mov
and
ds
sbbl
popa
mov
cmp
xor
fldenv
test
js
or
out
cwtl
inc
loopne
xchg
decl
pushf
movsb
aas
add
add
mov
repnz
inc
xor
cmp
adc
jo
cmp
add
dec
lods
lock
cmp
inc
cwtl
xor
push
xor
and
test
pop
and
mov
pop
rolb
aaa
std
decl
and
nop
les
lock
xor
nop
loop
loopne
push
pop
add
adcb
ljmp
and
and
xchg
cmp
lods
xor
cwtl
sbb
pushl
dec
repnz
movsb
clc
sbb
and
sbb
xchg
test
pushl
sar
mov
clc
jmp
popf
inc
cmp
pusha
daa
pop
movsb
push
cld
lods
mov
adcb
add
das
xorb
dec
lret
or
test
push
push
cwtl
or
xchg
lret
test
or
push
test
adc
adc
adc
rol
sub
hlt
xchg
mov
xlat
inc
pushl
mov
loopne
or
pop
lods
add
sbb
cs
in
sbb
or
push
pop
or
ljmp
sub
rcr
inc
ja
addr16
fildl
mov
mov
mov
lcall
decb
notl
and
lahf
mov
cld
sbbl
mov
outsb
adc
mov
outsl
inc
pop
cli
decl
pop
sub
cld
inc
push
mov
aad
icebp
mov
or
mov
std
addr16
repz
and
fildll
mov
or
adc
jmp
mov
push
mov
mov
loope
faddl
push
and
into
loope
decl
pop
es
or
add
xchg
or
outsl
clc
mov
mov
fs
mov
rcrb
fmull
pop
dec
fwait
call
xchg
and
aas
or
push
sub
sub
pushf
sbb
dec
popa
dec
push
fstps
lcall
leave
mov
add
sub
add
or
inc
dec
scas
sbb
fs
add
cmpsb
lcall
mov
test
ja
pusha
and
pusha
inc
cs
pop
pop
sar
lcall
repnz
mov
or
insl
inc
xchg
mov
and
ljmp
xchg
sbb
sbb
aaa
in
mov
sbb
lock
mov
mov
sahf
xor
add
adc
mov
ljmp
or
mov
fiadds
mov
pop
popa
js
inc
jnp
or
mov
test
jl
hlt
das
cli
xlat
pop
and
dec
in
and
mov
mov
pop
sub
outsl
mov
loope
and
jl
mov
cmp
aas
sahf
inc
cmpsl
add
inc
mov
mov
mov
lcall
pop
fistpll
cld
mov
sbb
jl
cltd
mov
bound
mov
or
fildll
ret
ljmp
inc
pop
jmp
lcall
jnp
and
imul
outsb
push
cli
decl
fisubs
loopne
cmp
ljmp
mov
pusha
add
scas
sub
adc
jb
subl
ljmp
decl
sbb
mov
cmp
les
rcl
gs
ja
adcl
add
push
out
adc
mov
and
mov
repz
push
outsl
mov
decl
and
sbb
inc
adc
rclb
jle
sbb
imul
xor
xchg
sub
push
xor
pushl
xchg
movsl
decl
push
push
je
inc
data16
invd
out
push
adc
sub
jmp
cltd
and
mov
inc
push
and
or
insl
cld
setg
or
aad
inc
adc
decl
sbb
mov
stos
pusha
mov
insb
sahf
xor
fiadds
jmp
pop
subl
xchg
gs
sarb
mov
lret
jg
pusha
mov
fnstenv
sbb
adc
xor
mov
fbld
decl
jb
or
cmp
fisttps
insl
lret
pop
scas
xor
xchg
dec
pushl
adc
push
les
and
bound
clc
jle
adc
jge
imul
push
pop
push
pop
orb
xor
pusha
xor
addb
pop
mov
cli
jg
or
outsl
sti
imul
mov
xchg
mov
push
sub
mov
add
lods
add
cmpsl
mov
cmp
outsb
mov
push
add
inc
std
incl
test
in
or
pop
ds
inc
fimuls
nop
mov
std
mov
and
inc
mov
popa
setne
pop
cmp
or
pop
sub
iret
mov
add
adc
scas
shll
add
rcr
cld
test
ficoml
jne
jns
andl
xchg
sub
sahf
mov
shrb
orl
ret
jmp
add
es
pop
stos
fs
adc
mov
incl
jbe
notb
add
xor
lret
ds
popa
mov
cmpsb
inc
sarb
popa
into
or
pop
xchg
mov
orb
mov
sbb
ja
mov
mov
or
add
xor
mov
into
arpl
fcomip
aaa
ret
mov
push
jo
add
cmpsb
xor
mov
or
dec
daa
add
pop
and
push
push
loop
push
push
repz
add
add
les
cli
loop
daa
inc
dec
call
push
lret
and
cmp
stc
add
mov
leave
add
or
jmp
dec
cs
push
enter
jg
push
bound
mov
jbe
add
cmpsl
mov
psrad
sar
or
test
jb
adc
add
bnd
pop
add
into
decb
ret
mov
add
psubb
and
ret
movsl
pop
int
ljmp
popa
leave
adc
int
fnsave
lcall
shlb
add
adc
dec
aas
enter
sbb
jg
push
push
cmpl
mov
les
cmp
ljmp
or
aas
sbb
dec
pop
int3
xchg
icebp
sbb
fimuls
inc
push
scas
mov
out
mov
add
pop
call
xor
int3
incb
pop
sbb
cmp
je
lock
and
out
mov
cmp
enter
jnp
cmp
dec
movsb
push
cwtl
arpl
jg
push
or
call
inc
pusha
scas
insb
ss
fistps
into
hlt
inc
adc
dec
out
insb
pop
fmuls
js
faddl
mov
pop
cld
ds
shrb
int3
dec
sub
mov
mov
push
cld
xchg
add
dec
data16
lcall
jge
jl
or
mov
in
das
sub
xor
adc
icebp
outsl
popf
and
aaa
push
pop
lock
mov
jns
out
add
jg
pop
and
add
pusha
adc
sub
jg
call
test
adc
cmpsb
dec
add
test
sarl
aaa
dec
decl
add
nop
push
das
mov
xor
mov
dec
cli
jmp
in
rolb
sub
jbe
incl
jno
and
or
aaa
loopew
pop
imul
hlt
pop
pop
sub
jl
rolb
adc
mov
and
movsl
decl
xor
aas
repnz
decl
or
jg
push
mov
cld
aam
jg
lcall
shlb
popa
push
gs
jecxz
dec
leave
sbb
xchg
push
stc
loope
hlt
addb
incl
testl
cltd
sbb
push
xchg
add
sbb
add
push
popf
and
pushl
mov
dec
or
dec
les
shll
pop
or
cwtl
cld
sbb
mov
mov
incl
inc
mov
cld
nop
out
sub
jecxz
push
ja
pushl
fstl
jb
cmpsl
and
pop
outsl
xchg
scas
dec
shlb
jnp
fs
pop
push
mov
leave
add
mov
sbb
and
push
imul
aas
sahf
ja
xor
subb
arpl
fildll
imul
popa
mov
push
sub
add
xchg
outsb
mov
jmp
popf
push
inc
add
andb
call
pop
pushf
mov
sub
pop
jb
sub
mov
and
das
cmp
push
xchg
mov
aas
mov
lea
cmp
incl
xchg
add
push
rorb
iret
or
pop
sub
push
and
scas
pop
lcall
incl
cmp
clc
push
movsl
jge
sbb
incl
imul
xor
mov
call
xlat
sub
jbe
and
or
mov
mov
pusha
push
sub
fs
mov
lahf
jb
push
aam
test
lret
ss
pop
incl
pop
fcomps
aaa
insb
xchg
lcall
nop
xchg
fwait
mov
movsb
cmp
sub
mov
cs
mov
pop
or
dec
dec
sbb
int
incl
push
inc
insb
fldl
or
or
sarb
test
mov
pop
xor
inc
ffreep
push
shll
aad
sbb
cmp
pop
sub
and
ljmp
jmp
cld
mov
aam
fcoml
ficompl
xchg
aaa
mov
dec
shl
sbb
pop
sub
ss
dec
sbb
push
mov
inc
inc
mov
adc
xchg
mov
mov
test
bound
popf
or
lods
push
sbb
push
adc
mov
mov
mov
inc
inc
iret
inc
ss
jg
fimuls
aam
lods
rolb
sbb
mov
or
fbstp
sub
lods
enter
inc
push
in
add
xchg
fmul
fdivrs
inc
cmp
add
incl
lods
mov
test
xchg
push
push
mov
push
xchg
dec
dec
pop
jb
mov
cwtl
mov
dec
iret
or
daa
inc
shr
call
imul
lock
int3
mov
fidivl
or
jmp
orb
out
xor
jg
cmp
je
cli
add
into
xchg
decl
push
sbb
cmp
cmp
aam
rclb
out
clc
sbb
or
call
shl
orl
movsl
mov
ret
mov
push
fisttps
inc
lock
sti
lcall
or
pop
pusha
bound
nop
inc
inc
out
dec
push
inc
scas
mov
push
pop
enter
hlt
inc
inc
nop
or
or
add
incl
mov
cld
pushf
push
add
xor
repnz
out
mov
ret
pop
inc
int3
push
rcl
sbbl
bound
xchg
rcll
jg
decl
add
mov
adc
shlb
push
pop
add
orb
cmp
jg
push
popa
add
push
adc
bound
pop
inc
loopne
sub
test
xchg
scas
push
ss
das
in
dec
in
mov
nop
stos
ja
call
rcll
push
repz
or
mov
or
mov
xchg
dec
call
stos
xchg
fs
add
adc
adc
lock
in
push
xor
adcl
lcall
sub
sub
jo
imul
sub
daa
rcl
pop
inc
xor
rorb
dec
add
pop
and
push
sbb
jg
pop
or
mov
int
pop
mov
push
pop
mov
pop
mov
pop
hlt
jmp
pop
jbe
jo
jne
cmp
and
cs
dec
xchg
push
test
sbb
push
adc
add
sarb
std
push
dec
scas
inc
push
or
push
outsb
ret
jg
movl
dec
insl
cld
mov
rcrl
lods
or
and
dec
decl
add
push
test
es
sbb
lcall
sbb
xor
rorl
getsec
add
adcb
decl
push
or
cwtl
andb
xorl
clc
and
sub
pop
mov
test
movl
jae
add
sub
call
lret
jbe
xchg
or
jnp
enter
shrb
gs
nop
fbld
and
pop
dec
mov
cmp
dec
aam
decl
mov
xchg
rol
cmp
mov
inc
cmp
fiadds
decl
mov
lods
adcb
loop
cmp
or
sub
movsb
pop
push
je
gs
or
mov
and
test
aaa
adc
and
adc
or
dec
dec
mov
add
imul
jmp
fcomip
jg
and
shrb
cmp
mov
mov
pop
decl
or
xor
dec
sbb
lret
push
das
jmp
push
sti
jmp
fwait
xchg
incl
or
and
mov
popf
inc
xchg
or
jle
jmp
push
ficompl
lret
xchg
sbb
lods
popf
mov
js
jl
jp
pop
xchg
faddl
add
push
fprem
and
cmp
sbb
incl
fistl
jp
jl
push
es
cmp
add
test
lcall
pusha
popa
loopne
xchg
hlt
dec
popa
jl
xlat
popa
sub
jae
addr16
out
push
hlt
outsl
stos
sbb
in
call
stos
add
es
mov
add
call
ret
jnp
inc
lret
call
cmp
sub
mov
xlat
sub
mov
stc
push
add
adc
aam
loope
out
mov
sub
inc
sub
jo
into
lcall
cmpl
adc
jg
mov
lds
cwtl
je
inc
lds
test
jne
cld
fldcw
lcall
iret
shr
mov
pop
mov
and
xchg
cmp
lds
incl
xor
lahf
sbb
xchg
jo
fmull
popf
je
pushl
inc
sbbb
out
push
popf
sub
mov
cmpl
inc
lcall
jle
pusha
lcall
inc
push
ljmp
movsl
mov
test
movb
test
movsb
hlt
dec
fdivr
and
aas
mov
adc
mov
pushf
lahf
and
inc
call
bound
or
adc
mov
fsubrs
jmp
incl
xor
and
sbb
inc
add
in
or
mov
jo
lcall
and
jb
add
lds
cmp
fidivl
les
cmp
and
outsl
add
stos
addr16
sbb
sbb
mov
lcall
mov
les
xorl
inc
and
xchg
pusha
inc
inc
xchg
jg
movsb
lcall
mov
adc
mov
sub
adc
adc
aaa
fs
dec
jge
add
add
fsubrs
dec
add
dec
dec
push
sbb
dec
jmp
jg
push
jg
pushl
pop
dec
cmp
add
out
xchg
xor
pop
mov
dec
filds
adc
enter
pop
adc
ret
and
lcall
jg
mov
jo
and
mov
pop
or
pop
cli
jbe
out
decl
in
jl
add
leave
inc
dec
lods
cwtl
loop
or
frstor
je
aad
lahf
add
lret
addb
mov
mov
xchg
cmc
bound
mov
push
jns
lcall
je
xor
mov
pop
dec
cmpsl
rcrb
insb
popa
cwtl
lea
movsb
nop
nop
imul
das
decl
out
add
aam
pop
push
or
mov
test
int
jo
add
and
xchg
xchg
mov
cmp
sub
push
test
inc
add
push
icebp
es
xchg
rclb
into
test
ficoml
xchg
rolb
xchg
mov
xchg
cld
cmp
loope
mov
adc
in
push
adc
in
sub
or
jmp
mov
test
pusha
inc
or
xchg
imul
inc
adc
and
xchg
loopne
ret
movsb
outsb
push
sbb
jg
push
mov
jmp
daa
jne
sub
pop
jbe
or
xchg
mov
mov
mov
add
popa
add
int3
pop
cmc
fnsave
mov
push
cli
and
or
cmpsb
aaa
dec
outsl
cli
inc
push
adc
dec
mov
fs
inc
inc
es
inc
cs
lret
mov
xchg
add
push
xchg
sub
enter
inc
or
xor
dec
or
add
sbb
add
push
ret
or
mov
mov
je
aaa
pop
rclb
hlt
pop
push
mov
clc
int
clc
sbb
dec
jg
push
cmp
inc
ret
pop
cmc
lcall
sub
pushf
add
inc
pop
cmpsb
mov
add
mov
clc
fwait
or
dec
enter
pop
das
add
or
add
addr16
adc
sbb
loop
call
lock
popa
push
scas
daa
test
lea
mov
sbb
mov
dec
or
push
loopne
push
mov
cmpsb
mov
pusha
adc
fisubrs
rol
int
mov
push
std
mov
dec
fdivrs
and
in
fbstp
sub
jne
xor
push
fwait
sbb
ljmp
push
cli
daa
pusha
jo
jge
cmp
inc
push
test
and
mov
movsl
cli
ror
and
cs
les
mov
add
lcall
push
cmpsl
inc
push
iret
add
aam
sbb
sbb
xor
lcall
incl
pushf
sub
pop
adc
not
cmp
aas
repnz
mov
adc
call
sahf
mov
jbe
and
test
lods
aaa
inc
lods
pop
or
mov
aam
xchg
push
loopne
mov
sahf
pop
or
sbb
data16
mov
cmc
imul
or
and
add
push
fwait
pop
add
pop
out
das
and
lock
mov
or
adc
std
jmp
mov
mov
cmp
adc
imul
pop
in
pop
mov
lock
xchg
and
and
mov
pushl
push
jge
inc
push
es
pop
jne
inc
inc
shlb
inc
push
jecxz
and
out
or
mov
jmp
test
aaa
xor
and
adc
lcall
nop
lock
inc
pop
das
fsubl
xchg
pusha
mov
nop
xchg
fcomps
inc
jmp
dec
fbld
sub
loope
cmpsb
movsl
ljmp
call
outsl
add
push
push
es
mov
jg
jmp
push
mov
adc
rorl
and
xlat
xchg
inc
out
fisubl
inc
mov
scas
pop
mov
xchg
scas
clc
sub
add
sbb
sahf
bound
push
cwtl
test
out
cmpsb
outsl
cmp
sahf
push
push
mov
inc
and
sbb
xchg
sub
fcomip
pop
fwait
pop
cmp
cld
push
fldcw
js
decl
add
mov
cmp
rorb
lock
nop
shrb
insb
add
add
or
and
add
aaa
cs
or
movsl
mov
xchg
xchg
dec
inc
dec
ss
pushl
sbb
inc
dec
push
or
js
push
sar
and
mov
add
call
js
in
and
jle
dec
push
cmpsl
mov
movsb
jge
ret
dec
or
ljmp
xchg
jo
out
xchg
cmp
ret
or
dec
pop
das
add
mov
add
xchg
fadd
in
lcall
insb
pop
mov
ficompl
arpl
add
les
mov
sbb
inc
add
jmp
dec
mov
les
call
push
xor
push
repnz
jg
xor
add
and
sbb
pop
das
mov
or
test
xchg
cmp
cli
sbb
frstor
xchg
loope
pusha
lea
push
movb
lea
add
cmp
test
lcall
popa
mov
aaa
imul
addl
jnp
shrb
sbb
and
test
push
sbb
fldt
mov
sub
aaa
dec
xchg
xor
push
cmp
fs
pop
dec
in
xchg
nop
pop
fsubs
iret
pop
xchg
and
sbb
mov
fisttpl
decl
fsubs
pop
xor
ret
call
test
pop
inc
xor
push
mov
push
sub
jg
sub
add
sbb
mov
inc
adc
call
inc
loop
imul
cwtl
mov
fwait
adc
or
frstor
jmp
or
inc
and
stos
fwait
pop
rcll
repnz
lods
mov
xor
jne
sbb
scas
cli
mov
xchg
mov
lcall
jmp
sti
mov
shrb
dec
das
jl
cmp
jl
mov
or
out
je
filds
jecxz
mov
xor
sbb
and
out
ja
decl
arpl
mov
mov
dec
sbb
fs
fisttps
rolb
push
sbb
mov
xchg
std
dec
and
mov
les
pushl
or
das
pop
xor
sub
and
es
fdivl
std
decl
cmpsb
inc
daa
filds
mov
xor
test
pop
jmp
xchg
imulb
clc
adc
je
or
fcomip
add
mov
jmp
xor
aas
sarl
popa
mov
xor
ret
out
mov
out
pop
jns
sub
popa
mov
mov
sbb
aaa
daa
mov
jb
dec
clc
decl
subl
mov
popa
and
or
int3
jmp
lcall
out
pop
sbb
mov
dec
stos
mov
enter
inc
js
fld
nop
lcall
cltd
rorb
cmp
mov
jo
jns
xor
fcomip
frstor
lret
sub
out
mov
out
inc
test
lcall
jmp
in
rolb
adc
adc
pop
fcom
test
imul
fcoml
push
inc
ljmp
sbbb
loope
cmp
or
aas
ja
add
inc
femms
pop
lcall
jmp
sbb
pusha
dec
in
jmp
jo
adc
inc
daa
cmp
es
scas
xchg
je
adc
push
mov
lahf
dec
jb
xor
adc
sub
jmp
cld
mov
loop
inc
gs
pop
shll
ljmp
xlat
into
rolb
inc
add
or
push
add
push
push
lods
fdivs
jle
inc
jmp
cwtl
movsl
adc
push
push
decl
inc
push
mov
cmc
outsb
mov
push
loop
pop
adc
enter
adc
mov
hlt
jns
outsl
jl
sbb
decl
push
jno
push
jle
cmpsb
dec
enter
ja
mov
inc
jge
scas
xchg
icebp
fcmovnbe
mov
es
or
push
and
mov
pop
sub
test
fimuls
or
adc
ss
fcos
or
sub
hlt
adc
scas
push
jne
stos
inc
fcompl
pusha
and
inc
jg
dec
push
rcr
popf
adc
fs
xchg
dec
in
add
inc
call
pusha
jno
in
je
jecxz
mov
cmp
ja
out
mov
fwait
in
mov
jl
jg
jmp
push
lret
stos
mov
lods
or
js
jo
add
cmp
aaa
cld
ljmp
in
mov
int
shrb
repnz
jo
cmc
adc
pop
lret
cld
incl
push
popa
mov
popa
jl
nopl
sbb
jmp
call
sub
popa
jns
or
xchg
popa
ja
loopne
aaa
jp
ret
inc
add
add
iret
add
mov
mov
pop
rcr
repnz
jle
cli
push
lahf
lcall
call
fisubl
inc
adc
into
sbb
add
adc
sarb
inc
insb
daa
hlt
js
test
cltd
lock
pop
inc
jle
out
pop
jo
daa
rcrb
movl
pusha
loopne
out
fs
pop
loopne
lds
sub
pop
add
or
mov
pop
repnz
daa
lahf
call
call
add
out
cmp
pop
das
gs
sbb
mov
and
gs
or
push
int
lcall
push
push
or
das
add
and
add
ret
loope
jecxz
nop
jg
shll
mov
mov
mov
push
mov
decl
lock
in
rorb
call
call
cmp
std
jmp
mov
push
sarl
sub
outsl
add
cmc
mov
inc
icebp
adc
lcall
and
out
mov
cli
stc
jne
push
cmpsl
add
testb
and
data16
xor
fldl
push
in
xchg
adc
sub
repnz
icebp
popa
outsb
ljmp
pop
testb
xchg
and
lock
sub
imul
mov
mov
daa
orl
adc
movsb
insb
adc
out
mov
decl
add
cld
or
test
les
icebp
das
adc
repnz
cmpsl
sub
dec
sbb
mov
jns
mov
pushf
push
subl
sub
outsl
mov
stos
fs
push
push
sar
fsts
sbb
mov
pushl
dec
adc
outsb
test
dec
fmull
xor
test
pop
adc
cmp
jbe
mov
adc
nop
cmp
int3
sub
hlt
add
sub
addb
lea
pop
dec
pushl
xchg
orb
mov
test
fs
flds
adc
fs
mov
cmp
pop
pop
idivb
sarb
jg
xchg
iret
add
sti
xchg
add
orb
push
andl
pushl
mov
out
sub
mov
mov
mov
lods
add
jmp
sub
leave
cmp
dec
fwait
popa
sub
mov
sub
add
nop
add
inc
sub
jb
pop
add
hlt
mov
sbb
and
inc
sbb
cmp
decl
ljmp
and
dec
jecxz
mov
or
fisubs
and
stos
add
dec
pop
sbb
outsb
cmp
mov
testb
inc
inc
dec
mov
cmp
ljmp
inc
mov
xor
xchg
sub
pop
shlb
and
js
fstpt
rorb
les
sub
lcall
sbb
hlt
sub
dec
and
ret
je
jg
ds
mov
and
mov
mov
loopne
imul
decl
loopne
aaa
pushf
iret
rcll
mov
sub
jo
push
xchg
testw
jg
sub
dec
mov
movsb
jbe
jno
loope
fisttps
aam
fnsave
push
pop
push
xor
mov
dec
adc
test
mov
jne
sub
add
lods
les
cmp
sbb
call
orb
inc
seto
lret
push
xchg
sub
jg
lods
pop
push
inc
mov
pushl
testb
adc
adc
sti
lock
xchg
test
out
cli
push
inc
fists
mov
out
inc
jp
adc
dec
les
fistpl
clc
or
jne
fucomip
lods
lods
lock
mov
mov
lret
dec
ja
inc
outsl
pop
les
inc
lcall
sub
pop
sub
cmp
jbe
loopne
lcall
daa
push
leave
push
and
push
nop
test
dec
jecxz
mov
xchg
aas
sti
inc
xor
jns
repz
pop
movb
and
xchg
ja
cmp
and
in
and
mov
pop
add
mov
mov
ficompl
and
or
rolb
xchg
nop
mov
lcall
and
sbb
shrb
sbb
ljmp
cli
hlt
mov
data16
jo
sub
push
and
xor
ss
cmp
pushl
and
stc
in
sub
jbe
dec
pushf
out
dec
js
and
pop
inc
cli
and
iret
cmp
ds
mov
mov
insb
popa
dec
cs
mov
lcall
xchg
inc
loope
fdivr
loopne
sbb
sub
mov
fists
fcmovnbe
pop
xchg
ret
std
decl
inc
or
xchg
sub
ja
lret
dec
push
mov
aad
adc
or
jmp
test
xor
popa
add
shlb
cmp
or
mov
andl
test
inc
lret
ss
or
or
mov
pop
adc
or
and
add
jle
sbb
aas
adc
add
or
stos
xor
pop
cmp
xchg
movb
sti
mov
nop
pop
dec
dec
repnz
jg
lock
out
imul
cld
cwtl
loop
sub
and
int
int
out
jmp
push
cs
and
jbe
sub
sbb
sbb
dec
inc
and
incb
add
and
test
dec
lock
fistps
adcb
ljmp
inc
incl
movsl
sub
rol
inc
or
mov
cwtl
call
adcl
in
lods
push
js
and
push
sar
ret
popl
jg
xchg
dec
sbb
inc
and
add
subl
pop
data16
repz
ljmp
lret
add
or
add
pop
add
lcall
sbb
jne
sbb
scas
mov
push
lock
sub
nop
adcl
jnp
sub
pop
push
push
cmp
test
add
mov
adc
mov
cmp
decl
int3
jg
pop
les
adc
and
negb
inc
jmp
mov
dec
sbb
sub
clc
push
rcrb
and
inc
std
incl
xchg
mov
fisttps
mov
icebp
add
mov
pop
add
or
inc
xchg
or
add
or
inc
pop
hlt
outsb
call
mov
mov
inc
inc
cld
fnsave
jmp
adc
sub
jo
or
incl
and
mov
ret
xchg
lds
sbb
lret
mov
and
dec
cwtl
inc
ja
pop
cld
loopne
fisubrs
jbe
xor
sarl
movq
sub
incl
inc
orl
enter
pushl
pop
loope
xchg
add
or
jp
sub
xchg
cmp
movb
enter
inc
mov
sarb
jle
fmuls
aas
adc
je
dec
orb
pop
adc
outsb
incl
push
cli
fidivl
out
push
faddp
sbb
dec
scas
cli
dec
push
adc
and
add
test
inc
mov
mov
sub
stc
dec
push
enter
in
in
sub
sub
xchg
rolb
xor
rclb
cmpb
adc
mov
data16
mov
xchg
add
add
test
or
pop
idiv
outsl
jmp
mov
mov
push
mov
or
arpl
mov
xor
inc
pusha
or
jg
mov
add
cmp
stc
adc
addl
dec
shlb
rcrb
dec
dec
inc
cmp
mov
dec
pushl
loope
cmpsb
fistpl
movsb
jl
or
add
sbb
insl
dec
mov
add
pop
cmc
scas
nop
in
imul
sub
fwait
ss
push
add
call
add
pusha
cmp
jecxz
out
push
icebp
push
and
pop
testl
jg
out
push
jbe
popa
dec
xlat
jecxz
sub
xchg
lds
movl
mov
jl
in
mov
lahf
pop
sub
adc
and
scas
mov
mov
jne
test
add
jmp
insb
and
adcl
push
adc
sub
sbb
xor
cmp
scas
clc
sub
loope
fadds
push
sbb
pop
and
int3
repz
les
decl
adc
pop
into
sub
popa
lods
out
push
inc
add
lahf
lock
sti
mov
pop
inc
data16
dec
sarb
das
mov
movsl
or
and
clc
ss
popa
inc
sub
xchg
scas
incl
mov
rcrb
xor
movsl
xchg
add
inc
xor
sahf
lahf
scas
mov
pushl
in
cmp
mov
mov
mov
movsl
xorb
cmpb
stos
incl
dec
jae
clc
dec
mov
popf
adc
das
cmp
jmp
jecxz
add
idivl
sub
lahf
xchg
xchg
mov
call
pusha
outsb
push
pop
daa
mov
rorb
add
repnz
jns
dec
dec
ficoml
cli
decl
pop
jl
clc
push
add
dec
or
pop
addb
pushl
adc
cmp
cld
push
pop
fprem
les
out
and
xlat
mov
je
ficomps
loop
cmc
pop
add
pop
pop
rorb
jns
ds
lods
add
or
out
sbbb
cmp
fdivrl
push
jns
sub
sbb
movsb
jmp
lock
push
or
movsb
movsb
cld
nop
push
xchg
lock
clc
pushl
ret
rorb
mov
jnp
je
mov
out
cmpsb
jmp
jmp
orl
mov
and
or
jmp
cmp
xchg
les
repz
arpl
adc
adc
mov
sahf
enter
cmpsl
arpl
jno
mov
mov
add
add
dec
rolb
pop
loop
xchg
cmp
xor
lcall
mov
inc
cmpsb
push
mov
xor
xor
cmp
add
cmpsl
xchg
incl
cmpsb
scas
clc
pop
jne
lcall
and
add
or
aaa
push
fstpt
into
lahf
push
incl
xchg
insl
mov
xor
adc
loope
shrl
dec
movsb
adc
mov
les
mov
mov
jg
mov
jge
push
and
pop
push
test
xchg
cmp
pushl
aam
dec
dec
rcll
es
and
pop
in
sbb
or
sub
ljmp
dec
jp
addl
in
mov
popa
rcr
sbb
add
fs
xchg
dec
sar
fistps
in
imull
mov
jg
jno
or
mov
inc
or
addr16
or
scas
pushl
cld
jmp
fdivl
pusha
sub
call
or
pusha
pop
jle
mov
adc
push
adc
jle
dec
xchg
sub
adc
incl
cld
lret
cmpb
push
popa
or
std
incl
dec
jnp
daa
addl
sbb
movsl
shlb
cmp
ss
push
ss
aad
incl
sub
pop
add
pop
adc
or
xchg
sbb
adc
add
cmp
dec
out
clc
insb
sbb
out
cmp
out
clc
or
mov
pop
push
lods
sub
push
cmp
push
pop
jg
test
dec
push
xor
pop
push
sub
das
mov
and
mov
or
pushf
test
inc
call
aaa
xchg
jmp
or
xor
xor
xor
movsl
shlb
mov
cld
jns
jmp
sbb
pop
lds
clc
aaa
cld
dec
sbb
pop
inc
dec
fadd
mov
outsl
xchg
xchg
outsb
inc
add
cmp
fldl
sbb
xor
fidivs
clc
xchg
fs
call
lea
mov
es
stos
dec
lcall
stos
adc
clc
push
or
mov
iret
addl
enter
fs
mov
add
rolb
mov
mov
subb
mov
xchg
xorb
stos
pop
jo
sub
hlt
inc
stos
sbb
push
pop
es
jg
lcall
adc
nop
and
sbb
add
add
ljmp
mov
cmovbe
add
add
add
dec
sti
add
mov
adc
dec
jmp
fists
inc
mov
idiv
cmp
cmp
scas
addr16
cmpsl
mov
sbb
dec
xor
jg
or
cmp
xchg
outsl
adc
or
incl
add
cmp
push
hlt
shlb
pop
jbe
mov
xor
incl
sbb
cmp
jno
aaa
inc
insb
movsb
bound
add
pop
loope
jle
sbb
push
and
or
mov
push
mov
divl
out
inc
or
mov
in
jns
adc
cmpl
sahf
daa
sub
mov
lock
xor
jne
fwait
test
adc
sub
inc
push
popa
je
aaa
popf
mov
or
sub
loope
cli
mov
xchg
jg
dec
push
cmp
mov
hlt
mul
dec
adc
lret
mov
call
rcrb
inc
into
arpl
xor
lods
and
in
pop
sar
xor
push
mov
call
sub
ds
mov
movsl
sub
or
mov
pop
and
push
cmpsl
cmp
mov
jns
loope
sub
inc
inc
ret
cmp
mov
add
cmpsb
xor
es
clc
js
call
pushf
sub
jecxz
pushl
jecxz
and
aam
push
mov
movsb
jl
jge
addb
data16
sub
jmp
cld
cmpsl
push
and
ljmp
lock
mov
fstps
mov
pop
jb
pop
sbb
push
mov
and
ja
adc
mov
mov
rorb
adc
cltd
int3
imul
jecxz
decl
cmpsb
call
mov
test
dec
cmpsb
ds
daa
sbb
mov
lcall
adc
jmp
add
sbb
cmp
dec
cli
mov
or
loop
mov
ljmp
push
sbb
test
loope
sub
mov
jo
adc
cld
incl
aaa
mov
jmp
fisubrs
lock
jmp
cli
sbb
xor
pushf
sbb
add
sub
or
inc
cmp
cld
jg
add
shlb
push
or
inc
les
dec
fbld
xchg
add
jmp
mov
es
call
fists
xchg
inc
inc
add
sub
ret
or
and
call
test
or
xchg
mov
adc
mov
cwtl
lahf
or
pop
xor
ljmp
dec
cli
ja
cmp
push
adc
jmp
fbstp
push
cmp
dec
cmp
outsl
or
push
and
xchg
ljmp
movsl
rep
xchg
pop
mov
sbb
adc
dec
cmpsl
out
lahf
movsb
mov
push
or
cmp
dec
sbb
fdivr
ljmp
bound
out
popa
fildll
push
mov
mov
mov
testb
adc
div
sbb
enter
adc
jnp
jo
fdivl
std
call
push
and
inc
ja
xchg
push
lods
notl
enter
mov
mov
daa
jb
push
ljmp
pop
jns
les
jmp
rcl
add
cmc
xor
ss
pop
insb
loope
ret
inc
xor
test
test
push
ljmp
les
cs
and
mov
adc
fsubrs
mov
push
sarb
jmp
out
xchg
cmpsb
sbb
orb
inc
add
and
jl
push
xor
inc
ret
jp
test
mov
pop
std
call
dec
inc
daa
lret
adc
add
push
jns
and
pop
call
sbb
ds
mov
test
outsl
or
ljmp
cli
adc
adc
pop
ss
adc
push
ss
stos
in
jne
imul
cmpsb
fbld
mov
std
jp
cmpsb
adc
push
pop
dec
cs
incl
and
cmp
fsub
sar
mull
aas
les
lock
ljmp
cmpsb
jge
repz
push
cs
fdivrs
lds
cmp
rcll
jge
or
xor
sar
repnz
test
pop
cmpxchg
adc
mov
lds
ffreep
and
in
les
add
add
popa
jl
sbb
incl
les
cmpb
aaa
pop
test
xchg
sbb
push
xlat
decb
and
inc
push
mov
inc
repnz
ja
mov
xor
fldl
or
filds
push
mov
add
adc
push
push
ss
jp
ds
outsl
jmp
and
pusha
adc
xchg
xchg
jo
push
mov
jb
and
xor
push
adc
mov
add
sub
test
stos
inc
xchg
rcr
or
dec
push
jl
lcall
lcall
xor
adc
or
xchg
je
nop
or
ds
jge
pop
call
das
ljmp
or
sub
lea
cmp
fmull
inc
filds
push
mov
pop
jne
sbb
movsb
clc
cmpsb
fadds
mov
mov
sub
cmpsl
ljmp
xchg
inc
int3
sbb
xchg
xor
gs
mov
mov
adcl
fisttpll
shll
and
pop
inc
sub
mov
pop
cmpl
pusha
push
pushf
decl
cmpsb
add
push
adc
daa
inc
fmul
push
sbb
xchg
int3
mov
xor
sar
lea
push
clc
cmp
insb
mov
incl
addr16
cltd
popf
fs
add
adc
fwait
stos
decl
cmp
test
loopne
push
imul
push
jge
subb
push
push
cmp
mov
mov
and
rcrl
stos
out
pushf
pop
dec
pop
sub
cli
mov
mov
push
cmc
sub
ret
and
push
clc
movsl
pop
movsb
nop
and
add
xor
cmc
add
testb
pushl
xchg
rorl
pop
mov
and
mov
push
cmp
and
rcrb
das
cmp
sti
xorl
decl
inc
jnp
mov
sub
inc
es
or
mov
andb
call
pop
stos
cmc
iret
adc
xchg
hlt
lcall
mov
cmp
stos
loope
arpl
or
decl
push
dec
mov
adc
loopne
call
loopne
mov
dec
dec
shr
mov
pop
add
leave
push
lcall
push
or
or
inc
dec
ljmp
and
sub
in
dec
adc
lcall
mov
movsb
insl
xchg
jbe
mov
or
jp
ljmp
and
clc
bound
addl
xchg
sub
pop
scas
pushl
pop
push
add
call
mov
mov
icebp
add
das
clc
jmp
push
test
sbb
push
xchg
sub
orb
cmpsb
leave
test
or
in
mov
fisubrs
test
jg
cmp
das
dec
add
gs
push
jle
lcall
pop
test
lcall
inc
pusha
or
scas
sbb
mov
sub
movsb
cmp
push
dec
sar
xchg
or
fisubs
mov
loopne
decl
push
cmp
add
sub
pop
and
adc
pop
dec
mov
inc
mov
les
sbb
dec
test
push
jg
cmp
dec
xchg
push
push
cmpsl
sbb
xchg
jmp
pop
mov
and
mov
xchg
jmp
push
or
inc
fmuls
pop
idivb
pop
fistps
dec
stc
out
jne
pop
lods
sbb
push
loopne
xchg
fs
push
pop
insl
cmpsb
pop
sub
ljmp
mov
push
nop
je
push
jo
dec
adc
xchg
pop
and
xchg
call
cld
add
outsl
xor
sbb
adc
jno
pop
popa
mov
test
daa
lahf
fcmovnbe
je
pop
sbb
dec
sbb
xor
pushl
fmull
test
jne
das
jmp
push
add
dec
mov
ret
push
sub
rcr
shll
ljmp
por
pushf
pop
push
xchg
cmp
arpl
xchg
push
xchg
jbe
dec
fcompl
in
adc
ds
fmul
xor
lods
pop
xor
add
jmp
sbb
or
push
imul
fbstp
pop
out
lea
lcall
or
push
dec
clc
jl
in
jnp
sbb
jg
inc
pop
xchg
sbb
sbb
adc
ret
inc
mov
dec
sbb
adc
mov
ret
xor
sub
fwait
dec
ljmp
dec
data16
xchg
loopne
sub
sub
mov
aas
jmp
xchg
pop
push
dec
dec
cli
sbb
mov
incl
push
cmp
das
xor
xor
mov
cmpsb
or
adc
mov
in
aam
mov
das
pusha
ret
adc
test
dec
ret
ret
shlb
adc
add
call
jmp
and
aam
add
movsb
dec
lods
shl
call
mov
dec
out
xor
or
or
mov
loope
sbb
jg
test
sbb
push
ljmp
sbb
push
ds
inc
ljmp
push
pop
int
mov
jecxz
enter
shl
jo
std
inc
pusha
mov
es
add
std
fstpl
xor
adc
in
ljmp
nop
daa
jecxz
inc
aaa
fwait
popa
in
les
xor
dec
rcrb
push
out
fidivs
test
daa
mov
inc
and
cltd
jl
xor
orb
add
sbb
rol
pop
jno
pop
decl
jmp
add
addl
xchg
adc
lret
mov
stos
cmp
and
inc
xchg
ds
shlb
decl
sti
push
loop
inc
inc
pop
cwtl
mov
and
mov
loopne
dec
sarl
nop
cld
inc
or
call
xor
jg
int3
hlt
add
inc
cmp
clc
inc
cld
xorb
mov
jae
sbb
inc
into
lods
dec
xchg
call
pop
push
cmp
cmpb
inc
mov
rolb
idiv
push
adc
sub
ud2
out
or
mov
pop
xchg
lea
es
ja
pop
add
cmp
stos
fwait
out
cli
add
xchg
or
push
inc
mov
pushl
testb
mov
enter
insb
or
f2xm1
push
sub
pop
lcall
xor
rorb
shlb
sbb
sub
pop
in
mov
jne
shrl
pop
cmc
call
sbb
clc
and
fidivl
or
dec
fiaddl
ja
jnp
test
dec
inc
daa
int
scas
pop
mov
push
xlat
jmp
aam
add
pop
lea
cs
dec
aam
cmpl
sti
sbb
cmp
pushf
mov
push
imul
aam
sti
loopne
push
nop
and
push
insb
lahf
xor
dec
pop
mov
mov
aas
xchg
and
stc
pusha
das
mov
pushf
cmp
fcomip
jmp
mov
sbb
xchg
popf
lea
cmp
mov
hlt
call
mov
andl
lcall
mov
popf
xor
or
fmull
clc
add
sbb
sub
sub
adc
pusha
scas
sub
dec
lret
call
nop
int3
xchg
int3
decl
dec
cli
push
cwtl
xlat
notb
cmp
ss
push
dec
xchg
lcall
xchg
hlt
nop
out
lahf
or
xor
fnstsw
mov
sub
pop
cmp
out
xchg
xchg
dec
xchg
sbb
add
mov
xchg
hlt
pushl
push
sub
add
call
decl
sbb
out
jmp
push
pop
lret
jg
sar
ja
jo
mov
cld
mov
arpl
xchg
pop
clc
call
mov
sub
push
xor
daa
dec
dec
jmp
out
mov
scas
adc
aad
aam
add
add
xchg
or
xorl
add
arpl
addr16
ss
mov
incl
jle
cmp
data16
and
dec
ret
mov
into
mov
cmpsb
sub
sahf
inc
stc
jmp
and
jmp
jmp
mov
hlt
sbb
nop
movsb
mov
mov
out
pop
inc
cmc
adc
dec
xchg
popa
ret
or
xchg
inc
xchg
sub
jg
mov
enter
sbb
test
sub
iret
movsl
inc
insl
es
add
fldenv
das
mov
adc
push
mov
incl
rclb
add
mov
nop
mov
jo
insw
aas
clc
pushl
lcall
jns
sbb
movsl
loope
test
add
loope
xor
and
cmp
push
pop
and
and
into
fidivrs
pop
mov
andl
bound
fcmovnu
cmpsb
test
movsl
rorl
sub
sub
cmpsb
arpl
ja
mov
pop
mov
hlt
xchg
pmaxsw
fldcw
mov
outsl
dec
lcall
mov
sbb
sbb
rolb
icebp
jne
aaa
adc
sub
movsl
loopne
sbb
inc
adc
add
or
aaa
adc
pushf
sub
adc
fwait
sub
fnstsw
imul
xchg
rorb
and
jns
pop
outsl
or
xor
pop
je
dec
push
jg
lcall
cs
push
cmpb
orl
and
sbb
adc
pop
sarl
shlb
sbb
mov
cmp
adc
js
push
inc
stc
mov
call
cmp
xor
fwait
and
jl
lock
sub
or
or
fdivr
ljmp
and
dec
dec
jl,pn
ficoml
imul
xchg
dec
cs
push
cs
or
and
sub
push
pop
or
stos
das
jne
nop
mov
js
das
dec
dec
add
mov
addr16
push
repz
push
jno
in
mov
les
xchg
inc
mov
add
test
mov
sbb
inc
std
call
stos
sub
lea
sbb
mov
or
adc
jle
add
or
cmc
jle
lahf
nop
hlt
pop
sbb
jge
xor
pop
ret
fidivrs
in
or
lock
vmovapd
cs
jmp
mov
lods
cmp
sub
mov
sub
ror
insb
dec
cwtl
jbe
push
jg
jge
cs
add
mov
xor
or
es
push
jge
push
mov
ja
sub
xor
movsl
jns
nop
push
sub
pushl
cmp
cmc
fisubrl
pop
xlat
sub
inc
sbb
cwtl
or
mov
xor
mov
mov
mov
or
cmpb
lock
push
or
movsb
push
aaa
dec
adc
adc
sub
or
dec
inc
fdivr
jmp
dec
std
or
jo
xchg
fdiv
dec
jne
hlt
idivl
addr16
mov
sbb
call
int
imul
loope
add
sub
sar
add
pop
and
adc
mov
das
dec
insb
iret
scas
xor
jg
and
ja
shlb
int
lock
in
xor
incl
inc
loop
lock
and
sub
cmpsb
xchg
xor
jb
add
ljmp
iret
imul
dec
movsb
stos
and
add
xor
inc
sahf
xor
mov
iret
inc
inc
clc
jmp
loopne
push
jecxz
push
je
pop
wbinvd
sar
and
loopne
xlat
pushf
cmp
sbb
std
sar
mov
out
and
fildll
not
clc
pop
ja
iret
jnp
cld
jns
mov
nop
hlt
push
int3
pop
mov
jl
std
call
mov
movsb
xorb
mov
sbb
lock
jg
and
cmp
push
pop
push
dec
rorb
incl
add
popa
pushf
aam
pop
fistpll
out
sub
adc
les
stc
icebp
pop
or
pushl
std
loop
push
sbb
repz
or
test
mov
sub
pop
mov
incl
and
ljmp
imul
sbb
push
rcll
adc
inc
mov
and
call
sub
jno
or
add
dec
push
fs
sbb
sti
xchg
mov
cmp
or
xchg
ljmp
icebp
pushl
push
inc
dec
pusha
mov
arpl
xor
pop
push
cmp
adc
call
lods
and
in
fwait
add
xlat
jno
jle
in
mov
and
jmp
jmp
loop
mov
fcomip
fwait
dec
inc
adc
aad
test
push
pop
shrl
mov
incl
lock
push
lock
sbb
dec
add
sub
inc
movsl
pop
adc
dec
pop
adc
aaa
adc
pop
mov
adc
stos
les
loop
call
sarl
xchg
add
lods
and
cmp
inc
dec
test
aas
test
xor
imul
lods
pop
jno
or
pop
sbb
leave
hlt
dec
roll
xchg
inc
cmp
xor
inc
aad
or
or
stc
hlt
or
pop
das
and
inc
jmp
or
sbb
movsb
mov
add
sub
stos
sbb
and
sar
in
inc
or
and
sbb
inc
movsb
push
ffree
mov
stos
jo
xchg
sahf
dec
jmp
ffree
push
xchg
push
jmp
mov
std
call
mov
adc
in
mov
push
outsl
add
data16
test
sbb
cmp
aad
and
or
add
call
lock
cli
movsb
add
shll
and
hlt
ljmp
inc
imul
or
jnp
cld
pop
mov
push
daa
ror
ja
adc
nop
jp
pop
rcrl
mov
sub
inc
ja
in
loopne
pop
mov
clc
popf
fidivl
inc
and
scas
inc
add
mov
addr16
mov
xor
cwtl
sbb
adc
decl
add
pusha
cmpsl
call
popa
pop
cs
cmp
or
outsb
movsb
lcall
inc
cmp
aas
or
ljmp
mov
xchg
dec
sub
imul
add
add
dec
pop
incl
mov
shrl
mov
add
dec
cmp
mov
mov
sbb
inc
shr
cmp
cmp
call
or
push
push
pop
or
mov
jmp
mov
pop
adc
subb
andb
fisttpll
mov
push
popf
loope
sbbb
test
inc
xlat
add
jmp
mov
cli
in
add
adc
jl
inc
lcall
pop
lock
shrl
outsl
cmpl
adcl
rcrb
popa
cwtl
add
dec
fs
add
shll
decl
xchg
imul
add
push
pushf
jmp
mov
add
mov
adc
jg
sub
pop
xor
xor
call
or
cmp
sub
mov
inc
repz
sbb
orb
andl
mov
inc
scas
orb
add
xchg
repnz
sub
shl
push
jmp
mov
aad
popa
or
scas
or
clc
add
imul
add
cli
nop
cmc
loopne
enter
les
and
outsl
clc
push
jmp
jae
mov
jmp
push
sub
xchg
in
movsb
mov
jmp
insb
mov
pop
sbb
adc
push
addb
ja
push
sbb
mov
pusha
jecxz
pop
sbb
adc
add
inc
lcall
dec
adc
negl
leave
sbb
add
lock
call
xchg
inc
insl
xlat
lea
dec
adc
nop
cmp
iret
xchg
mov
mov
int3
fisttpl
addr16
cli
ja
imul
or
add
jg
rcl
add
jno
or
sub
mov
js
push
imul
sbb
sub
adc
popa
loopne
test
add
mov
fs
dec
rcr
lods
decl
test
sbb
shlb
add
outsb
dec
dec
inc
and
dec
dec
jmp
cli
and
test
xchg
mov
push
stc
shlb
push
notl
sub
in
dec
mov
pop
jl
aas
mov
xchg
sbb
jno,pn
jmp
inc
fidivrs
cmc
movsl
adc
fisubrl
sbb
and
andb
add
adc
xchg
sub
xchg
sbb
dec
lds
ljmp
or
mov
loopne
lahf
pop
sub
in
dec
jo
out
scas
and
cmp
jg
mov
cmp
inc
xor
xchg
and
pop
sbb
jle
sbb
lcall
jge
fsub
push
adc
push
js
repz
call
dec
pop
pop
push
ljmp
mov
das
mov
pop
and
ljmp
pop
xchg
or
pop
insl
add
lea
inc
adc
addb
orl
cli
stos
xor
pop
jb
push
mov
enter
adc
movsb
call
vfnmsubps
mov
jl
mov
xchg
and
adc
pushl
push
push
lods
arpl
jl
sbb
fists
push
push
add
dec
mov
and
push
icebp
xor
push
dec
outsl
clc
imul
jg
scas
clc
fildll
imul
mov
scas
adc
push
leave
inc
out
sub
sbb
je
call
mov
cwtl
test
dec
flds
insb
jecxz
inc
leave
lahf
int3
adc
ret
movsl
cwtl
out
loop
insl
cwtl
xchg
add
sub
aam
leave
ret
mov
lods
xor
dec
and
aad
mov
push
insl
adc
push
in
jne
dec
test
fdivs
adc
mov
in
xor
in
mov
rorl
bound
cmpb
xor
or
pop
pop
rcrl
mov
sti
pushl
add
xchg
cmp
sbb
sub
add
sbb
xor
pop
mov
adc
imull
popf
push
jg
mov
cmp
hlt
mov
test
pop
sbb
sbb
test
jg
popa
or
cmpl
pop
ret
inc
jae
shlb
push
cld
jmp
dec
lahf
lahf
cmp
js
mov
and
sub
mov
ret
inc
arpl
xor
mov
insb
xor
inc
ret
adc
xchg
add
mov
addb
jecxz
clc
add
ret
lds
popa
pop
nop
or
rcrl
mov
dec
mov
cltd
jmp
nop
sbb
jnp
rep
lock
dec
lock
popl
bound
cmp
cwtl
icebp
mov
ss
rorb
adc
jno
add
int
int3
icebp
mov
jmp
testl
movsb
push
inc
add
mov
dec
pop
push
test
push
adc
shll
test
and
mov
inc
lods
in
add
xchg
jae
inc
fwait
lcall
cltd
fs
or
mov
popf
jno
adcb
shll
mov
jmp
rol
add
ss
aaa
cmp
sub
popa
std
in
incl
and
gs
ret
mov
int3
xchg
push
lods
xchg
push
mov
add
adc
das
inc
movaps
jle
sbb
inc
bound
lcall
nop
popl
das
lods
sar
xorb
add
and
add
mov
mov
jmp
lea
cmp
scas
fnstsw
movb
rcll
fldcw
cmp
lret
sbb
or
mov
cmpb
or
cld
or
outsl
jmp
ss
cmp
cwtl
or
rorb
movsb
daa
enter
adc
sub
dec
inc
popl
lock
push
adc
dec
cmpsl
andps
and
aas
mov
movsl
ss
xchg
jb
adc
xchg
push
fbld
adc
aam
lods
ret
mov
cmp
xor
pop
mov
add
jmp
sbb
cmpsb
xor
sbb
lcall
faddp
sbb
adc
pop
out
ja
and
sar
pushl
lock
mov
scas
pusha
cmpsb
and
add
jb
jbe
pop
add
mov
or
in
pushl
cld
mov
cmp
int
pop
scas
or
adc
adc
call
cld
jmp
mov
sub
xor
outsl
add
scas
por
mov
jmp
and
lcall
lods
inc
mov
mov
xchg
shll
sbb
and
add
incl
push
dec
add
dec
adc
mov
sub
stc
and
inc
inc
popa
push
mov
push
repnz
or
mov
inc
cs
das
mov
sub
imul
cmp
pop
mov
and
movsb
pop
sub
pusha
daa
dec
jb
lcall
testb
sub
subl
push
xor
sbb
loopne
testl
ljmp
sub
aas
dec
dec
incb
icebp
sbb
jg
mov
in
cmpsb
jno
stc
sbb
mov
les
mov
decl
rorb
mov
ss
and
or
inc
cmp
shlb
cmc
clc
gs
sarl
jb
ds
mov
dec
xchg
xor
mov
loopne
test
ljmp
sub
mov
jb
je
fwait
mov
shl
jmp
jnp
xchg
mov
add
sahf
xchg
out
push
xchg
cmp
dec
or
jg
test
push
pop
cltd
jge
lahf
xchg
int3
adc
inc
sbb
mov
stos
repz
xor
pushf
gs
je
push
sub
test
sar
incl
mov
sub
mov
add
mov
mov
movsl
shlb
lock
cmpsb
and
call
insb
outsb
dec
mov
mov
jns
aaa
adc
pop
rorb
hlt
or
mov
jmp
or
subb
cs
inc
adc
xor
decl
popf
test
mov
jo
fxch
mov
and
dec
jae
dec
sbbb
jo
je
rclb
shlb
cli
jmp
mov
test
cs
les
loopne
shlb
decl
and
out
inc
mov
or
out
push
add
push
loope
decl
fcmovbe
sub
cmp
jp
push
add
out
sbb
rclb
sub
imul
pushl
push
push
adc
add
xchg
daa
push
fmull
test
dec
cmp
jno
scas
push
sub
popl
ds
std
jg
sbb
or
and
or
iret
push
push
mov
push
mov
pop
and
xchg
push
js
dec
aam
add
pushl
mov
leave
js
stos
mov
xor
pop
jmp
sbb
insb
push
ljmp
inc
fldenv
push
and
outsb
shlb
or
or
cmp
or
dec
sbbl
lea
out
and
dec
mov
rcll
and
cmp
add
xor
out
pop
inc
jg
hlt
loop
lods
sbb
shr
fwait
push
and
xchg
add
loop
shlb
cmp
ja
cmpsl
sti
enter
mov
adcl
xor
or
dec
pushl
mov
imul
cmp
fadds
push
dec
pop
jmp
out
adc
mov
dec
inc
lahf
add
dec
or
mov
je
mov
jp
push
lahf
leave
pop
mov
fistpll
sbb
mov
adc
std
sbb
jno
out
jmp
pushl
sbb
loope
sbb
pop
sarb
scas
mov
sbb
call
ret
and
xor
sub
test
and
and
pop
pop
incl
test
mov
lock
nop
sub
pusha
push
pop
dec
jmp
adc
cmp
repz
cs
insl
pusha
mov
cmp
jmp
adc
sbb
dec
mov
sarb
pusha
imul
xchg
ud0
filds
mov
daa
adc
mov
shll
sbb
pushf
cmp
call
call
cmpsl
sbb
pop
int3
pusha
in
pop
sub
sbb
add
mov
sub
cmpsb
jg
cmp
sub
ds
push
cmpsb
mov
lret
and
lcall
cmp
imul
fcmovnb
xchg
lret
aaa
push
xor
xor
loop
jge
lock
decl
ja
xchg
les
sub
add
rol
mov
test
out
pop
or
incl
push
add
arpl
or
sbb
les
jmp
aaa
in
jbe
cs
jg
or
ret
xor
push
test
bound
push
fisttpl
and
rorb
adc
push
inc
insb
fucomi
inc
cwtl
dec
adc
decl
jmp
mov
xchg
cmp
sbb
call
mov
xabort
cmp
jl
adc
jmp
shll
loopne
lock
bound
pop
cmp
sbb
aas
in
xor
hlt
mov
lods
push
adc
ljmp
mov
push
jg
lea
sbb
jb
add
adc
dec
adc
xor
fldl
enter
mov
add
mov
leave
outsl
sub
adc
or
sbb
imul
js
mov
testl
inc
adc
pop
sbb
aas
sbb
push
or
add
cmc
mov
cld
in
nop
mov
shlb
add
adc
nop
out
lock
add
out
shrl
clc
dec
pop
aad
andl
movsl
xchg
cltd
aam
enter
or
sub
pop
cmpsb
sub
push
imul
cld
mov
jns
mov
inc
xchg
ds
inc
adc
incl
lret
pop
mov
ret
inc
rorb
lods
jp
adc
cmp
ss
addb
add
cmp
ljmp
or
pop
pop
fcoml
dec
inc
xchg
push
out
xchg
iret
adc
xchg
movsb
sbb
add
xor
orl
cli
pop
xor
cwtl
sbb
out
sbb
jg
mov
je
cld
sarl
inc
pop
push
push
mov
jl
jbe
call
jmp
cwtl
add
lcall
inc
scas
das
loope
xor
xchg
add
or
mov
les
ljmp
jl
jae
fadds
push
ja
inc
add
icebp
nop
sbb
mov
inc
out
xchg
add
test
xchg
pushl
xchg
ljmp
jl
shrl
cwtl
clc
int3
adc
xchg
xchg
test
push
lcall
sub
adc
xchg
pusha
mov
inc
xchg
pop
lock
mov
sub
and
je
push
xor
or
es
imul
inc
enter
add
sub
add
sub
dec
or
add
xchg
push
ja
pop
pop
insl
pop
cmp
push
aaa
orl
ffreep
aam
daa
lds
xor
sbb
push
push
mov
add
lret
test
cmp
mov
pop
lcall
dec
call
fildll
push
add
jg
arpl
shr
or
add
add
sub
jmp
into
sub
lea
pop
push
xor
and
adc
dec
inc
jmp
je
daa
or
mov
or
pop
xorl
mov
call
sub
rolb
nop
or
mov
adc
sbb
sbb
pop
decl
es
pop
and
hlt
adc
mov
out
clc
call
adc
sbb
jns
js
pop
adc
mov
inc
adc
int
cmc
or
xor
xor
cmc
fbld
cmp
xchg
out
pusha
add
dec
in
lcall
inc
orb
fcoms
nop
pop
std
mov
xor
add
dec
dec
pop
sub
lds
lock
incl
push
jp,pt
hlt
jne
jmp
pop
and
decl
loope,pn
inc
dec
cs
dec
ds
in
dec
dec
lcall
in
and
out
es
jb
push
push
imul
incl
xchg
dec
inc
dec
dec
cmc
inc
scas
dec
push
aaa
push
xor
xor
pushl
popa
arpl
sahf
dec
rcl
xor
xchg
cmp
sbb
mov
xchg
inc
adc
xor
jecxz
scas
outsl
shlb
divb
dec
incb
sbb
cmp
call
jb
sbb
adc
and
ljmp
fildll
ja
rolb
jg
lods
lcall
mov
jb
sbb
mov
mov
cmpb
inc
or
imul
dec
mov
sub
fadds
call
mov
jne
fistpll
dec
shll
decl
fcomp
xchg
pop
or
jmp
adc
ss
xor
add
andb
push
int
inc
or
pop
mov
mov
pop
xlat
mov
lret
cli
xchg
ljmp
push
push
mov
adc
das
clc
test
sarl
fbstp
mov
lcall
mov
mov
sbb
push
pop
push
push
jecxz
lret
or
and
xor
cli
or
inc
adc
mov
mov
sbb
ljmp
sbb
dec
xor
xor
popa
adc
pop
add
add
push
or
cmp
sarb
pop
or
push
dec
jl
pop
leave
adcb
mov
cmp
sub
pop
sub
lea
notb
dec
mov
push
or
sub
cmp
or
imul
lcall
sbb
adc
dec
pop
loope
sbb
and
pop
sbb
mov
cmc
call
sub
jae
inc
gs
test
sahf
xchg
cmp
in
cld
sbb
ficoml
sbb
jnp
push
cmp
pop
mov
loopne
std
pushl
and
jno
pop
xor
js
pop
es
nop
lock
fldl
repz
mov
lods
add
scas
inc
and
incl
pop
cmp
int
jo
mov
pusha
stos
fwait
sbb
out
fidivl
sub
sub
lcall
mov
es
adc
cld
cli
sahf
jne
loopne
pushl
js
fcom
mov
out
add
dec
jecxz
psadbw
std
push
std
scas
popa
mov
mov
push
pushl
xchg
cmp
xor
inc
pusha
mov
test
lret
sub
xchg
pop
add
pop
pop
inc
push
push
mov
sbb
mov
movsb
lcall
repnz
pusha
leave
push
mov
rcrl
sarl
addr16
cli
rcrl
jg
mov
scas
sub
lret
and
inc
jmp
lahf
fs
aaa
add
mov
jne
cs
mov
add
insl
xor
mov
enter
shlb
mov
and
and
jg
hlt
push
gs
push
int
scas
rolb
incl
inc
lods
lahf
imull
aas
bswap
mov
mov
loop
inc
mov
pushf
push
and
clc
pop
dec
mov
sbb
fdivs
add
decl
loopne
fs
xchg
je
pop
sbb
loopne
call
insb
lods
mov
hlt
xchg
mov
test
dec
outsl
sub
rclb
xchg
js
mov
outsl
cmp
loop
xor
xor
xor
rcll
stos
sbb
daa
insl
imul
push
jmp
pop
pop
test
xor
push
test
push
lcall
shrb
adc
cld
cmp
adc
and
cltd
mov
mov
out
add
cmp
xor
cli
jp
das
js
addr16
and
loope
loop
jns
dec
mov
and
lcall
dec
fcompl
xor
cmp
and
inc
dec
sbb
nop
fldlg2
fistpl
inc
mov
pushl
addr16
insl
jmp
pop
sub
inc
dec
push
adc
sub
das
ss
or
clc
add
test
ljmp
dec
inc
adc
ret
es
dec
lock
jg
pop
xchg
jecxz
cmp
or
push
das
inc
jmp
jg
sbb
and
xchg
shlb
repz
xchg
ss
aad
ljmp
inc
loopne
mov
inc
int
and
out
mov
loope
mov
push
cs
mov
adc
sub
sbb
push
or
loopne
add
add
xor
xchg
sar
decl
fisubs
outsl
mov
cld
rclb
pusha
in
ss
pop
loope
dec
and
add
aam
dec
lods
sub
fcomp
push
mov
je
adc
iret
sti
or
std
push
push
subl
jl
push
pop
imul
addr16
call
jmp
and
inc
sub
push
call
pop
insb
insl
roll
jmp
sbb
lea
cwtl
iret
mov
decl
lock
or
into
daa
hlt
imul
jne
pop
ret
imul
pop
les
das
add
testb
cmpl
push
add
pop
in
mov
adc
add
outsb
mov
sarl
xchg
or
cmp
and
and
std
lcall
sbb
lea
dec
pop
sub
jg
xlat
add
decl
imul
sarl
in
xchg
es
dec
xor
push
inc
add
push
scas
push
fildl
sub
sub
push
das
cli
pushl
clc
jbe
mov
pop
outsl
fiadds
roll
lock
add
mov
xchg
pop
push
scas
mov
lock
arpl
add
ja
rcr
int3
fs
xchg
lock
xorl
incl
addr16
push
movsl
dec
or
jle
pop
sub
push
pop
adc
enter
das
dec
or
add
in
mov
outsl
xor
inc
sbbb
cmova
rcr
cmp
sbb
cmp
or
jle
mov
jl
cmp
or
imull
xchg
mov
ljmp
mov
inc
adc
mov
rolb
add
es
xchg
rclb
std
decl
sub
jp
popa
pusha
into
sti
mov
mov
inc
subb
sbb
test
scas
inc
in
cltd
lcall
pop
sbb
call
push
pop
loope
shll
cmp
movsb
adc
decl
ds
push
add
jl
pop
pusha
sub
into
sub
push
add
xchg
addl
or
jo
fbld
inc
xlat
adc
mov
fsubrp
cmp
push
inc
stos
or
je,pt
movl
mov
adc
push
sbb
jmp
outsl
push
xor
test
ds
cld
aas
cmp
iret
std
mov
inc
inc
adc
push
repz
mov
jne
shlb
adc
dec
pop
xor
mov
mov
pop
test
outsl
xorl
popa
incl
push
sbb
sub
jp
jg
dec
clc
sub
push
cmpsb
dec
or
lret
push
pushl
mov
daa
cltd
cmp
mov
cmp
cmp
fistl
sbb
or
ljmp
ret
jne
jne
adc
inc
or
imul
sbb
and
incl
sbbl
pop
pop
add
loope
add
pop
adc
and
mov
ljmp
iret
pop
adc
sub
insl
push
pop
xor
fistpl
cs
sub
ljmp
cmp
push
mov
jg
mov
and
mov
push
cmp
xchg
jae
adc
add
decl
add
and
push
clc
pusha
add
push
call
incl
aad
xor
push
add
and
loop
and
fcomip
mov
push
fdivrl
xchg
cmp
sub
and
movsb
test
mov
les
jmp
add
jo
int
fsubl
les
lods
sub
cmpsb
sbb
dec
movl
je
fdivrl
add
push
add
push
lcall
cmp
clc
call
dec
or
test
cld
lock
pop
push
or
movsl
mov
sbb
or
dec
out
xchg
call
data16
lods
incb
cmpb
xchg
add
ljmp
sbb
cmpl
sub
mov
push
add
imul
pushl
into
pop
push
cs
das
add
repz
adc
shrb
push
loope
outsl
fwait
test
jno
insl
ret
xchg
cmc
je
xor
push
cli
sbb
sbb
fcomip
jmp
pop
add
sbb
jle
cltd
or
movsb
push
add
pop
ja
sar
pop
jl
or
ret
push
dec
addr16
ficompl
adc
mov
mov
cmp
pop
ljmp
int
sbb
pop
flds
icebp
jb
and
inc
rcr
ja
dec
sbb
xchg
xor
stos
insl
call
out
push
or
and
rolb
fs
push
add
imul
jg
and
inc
jnp
dec
mov
jo
adc
pop
and
rcll
cli
call
iret
cmp
mov
sbbb
inc
decl
add
les
enter
imul
adc
or
xchg
pushf
test
pusha
inc
cmp
std
pushl
add
dec
imul
leave
fwait
or
decl
or
pop
pop
fldt
sbb
jge
clc
mov
and
jmp
and
xor
push
js
divl
cmp
or
xchg
dec
jb
ret
and
out
clc
adc
sub
sub
add
cli
pushl
jnp
out
cmpsb
mov
xchg
mov
jo
mov
ss
mov
scas
pop
inc
and
fsubs
sbb
xor
test
sbb
inc
add
test
push
jge
arpl
or
nop
jbe,pn
lcall
dec
inc
into
push
sahf
ds
lods
stos
or
fcmovne
inc
call
inc
inc
rcl
adc
pop
sbbb
jb
push
fs
sbb
fildll
pusha
or
fs
jo
je
sahf
push
inc
dec
cmp
call
add
into
pushl
push
and
push
ret
inc
inc
je
aaa
sub
jmp
fs
int
inc
test
shlb
jae
sbb
loop
pop
push
sbb
sbb
movsl
mov
lea
jne
loopne
incl
jle
popf
inc
cmp
mov
addr16
push
mov
cmc
pop
sbb
incl
and
sbb
out
push
mov
pop
jecxz
sbb
lcall
add
in
or
jp
inc
popf
add
jl
sbb
xor
xlat
std
call
push
in
mov
sub
adc
roll
mov
pop
push
mov
sbb
sbb
lcall
ret
inc
push
sub
inc
push
or
or
xor
mov
sarb
roll
loopne
enter
clc
aaa
fimull
sub
ljmp
clc
sbb
pushf
jo
pop
scas
jle
les
or
inc
xchg
push
enter
subb
aas
fcomps
xchg
insl
fimuls
jne
xchg
xchg
cmp
xchg
push
ficomps
or
sbb
pop
sbb
mov
push
cmc
cld
gs
pop
lcall
test
sbb
jg
test
cmp
imul
std
call
insl
adc
jbe
jge
or
out
lret
jns
add
ss
je
cmp
xchg
adc
cmp
int3
out
bound
aad
jmp
mov
cmc
xchg
mov
xchg
xchg
mov
shll
push
xchg
mov
mov
push
jl
add
sub
cli
sub
icebp
push
outsl
push
icebp
xor
push
lcall
pop
dec
daa
push
stc
fs
sbb
adc
dec
pop
push
jo
and
out
or
das
clc
lret
xchg
push
push
pop
das
clc
fprem
sbb
jnp
decl
es
andl
pusha
sub
ljmp
test
xchg
push
sub
dec
mov
mov
sbb
in
mov
leave
ljmp
je
or
mov
ljmp
mov
xchg
popa
fisubrl
and
push
inc
popa
outsl
pop
ret
jne
daa
mov
int3
lock
mov
cmpb
xchg
push
aad
aam
call
outsl
nop
sub
mov
pop
lret
stos
or
push
sbb
push
dec
lret
or
or
inc
test
movsl
and
xchg
shll
push
les
mov
push
decl
sub
pop
movsl
pushf
jg
push
adc
mov
sub
aam
cmp
jo
rcrl
sbbb
cmpsb
inc
nop
push
scas
mov
add
lret
jmp
push
pushf
sbb
xor
xor
lods
sub
push
hlt
call
push
add
mov
mov
mov
shll
cmc
insl
or
hlt
adc
loop
or
inc
call
mov
cmpsl
das
gs
xchg
xchg
nop
xchg
fisubs
adc
add
adc
mov
jl
sub
in
push
test
call
or
pop
in
and
mov
mov
int
es
call
or
dec
inc
gs
leave
cmpsb
mov
sub
mov
mov
aam
scas
jg
and
add
cmp
ja
sbb
mov
loop
out
sti
mov
sub
and
cmpsb
pop
lret
push
sub
xor
adc
xor
incl
sti
sub
pop
add
push
sub
xor
lahf
shl
andb
ljmp
dec
sub
fstpl
push
mov
test
dec
cwtl
sbb
sub
ja
lock
xor
movsl
sub
shr
or
push
add
mov
int
lock
ljmp
sahf
fstpl
or
jge
pop
pop
fdivs
pop
mov
add
push
mov
inc
and
das
sar
xor
outsl
loopne
sub
mov
push
mov
insl
pop
mov
popa
jmp
mov
mov
jge
lock
xor
addb
pop
adc
stos
xchg
jg
out
add
jmp
clc
fldl
inc
cs
inc
sbb
or
int3
les
test
icebp
dec
inc
scas
andb
insl
mov
adc
push
orl
adc
mov
cltd
roll
push
imul
or
dec
mov
jmp
lcall
clc
cmp
mov
adc
shrl
loopne
in
mov
test
call
std
jge
aas
add
std
movsb
add
dec
dec
or
inc
mov
push
push
lahf
lods
mov
jl
sub
mov
test
ljmp
loop
and
push
movsb
andl
call
add
push
es
mov
aaa
pop
add
mov
pop
mov
push
cmp
add
test
decl
dec
cmp
xor
pusha
pusha
ret
ss
jecxz
incl
sarl
sub
rolb
call
out
add
mov
repz
sub
add
or
js
call
dec
sbb
or
es
jo
es
mov
outsl
incl
mov
mov
daa
fwait
test
les
fldl
das
js
stc
loopne
cltd
jne
aas
mov
sti
sbb
rclb
aad
orl
push
sub
cli
ljmp
test
sbb
and
mov
pushl
xchg
adc
inc
push
adc
xor
cs
hlt
or
mov
jae
lock
pop
sbb
js
jmp
jo
jmp
mov
adc
cmp
jg
adc
or
dec
sub
mov
mov
mov
mov
call
lds
inc
push
and
fdivrs
inc
mov
xor
scas
cli
inc
out
pop
cmp
add
sub
jle
xchg
adc
or
add
sbb
cli
pop
xorl
je
cmp
inc
incl
hlt
inc
dec
add
xchg
scas
adc
into
push
pop
cmp
sub
adc
adc
lcall
fiaddl
and
mov
pushf
pushl
std
dec
fmuls
bound
dec
push
or
shlb
aam
incl
mov
in
adc
adc
roll
sub
imul
cmp
or
mov
ljmp
pusha
mov
push
inc
adc
stos
jp
inc
movd
sbb
adc
pop
fwait
repz
pushl
dec
pusha
sub
setge
and
jbe
push
push
pop
ret
xor
dec
and
rcl
call
cmc
sub
push
cmp
cli
fmuls
push
sahf
cmc
sbb
sbb
adc
jg
and
mov
xchg
repnz
cld
mov
or
add
out
and
jne
sub
decl
mov
sub
mov
dec
loopne
into
mov
decl
inc
into
pop
shll
add
mov
xor
sbb
push
pushf
add
dec
adc
xchg
push
shll
pop
jmp
push
add
xchg
or
mov
mov
cmp
adc
adc
xor
pop
adc
pop
rcr
or
push
mov
lock
jb
sub
adc
movsb
mov
repnz
mov
push
jbe
leave
pop
and
in
cli
shr
mov
sbb
lcall
fidivrl
add
add
fstps
mov
cmc
add
insl
cld
jmp
mov
pushf
popa
adc
adc
out
push
cld
lcall
daa
xor
xchg
jne
push
out
cli
add
inc
add
addr16
mov
faddl
inc
mov
call
add
inc
mov
push
addr16
xor
das
push
sub
add
cmp
pop
add
decl
out
and
jle
cwtl
push
or
sub
jmp
and
adc
das
pop
and
stos
xlat
lret
ljmp
push
push
nop
sub
pushf
xor
mov
pop
mov
out
or
push
jno
mov
jne
lods
fs
inc
inc
decl
ret
andb
bound
fbld
adc
lock
adc
jmp
sub
int3
dec
dec
mov
and
mov
clc
fwait
lcall
inc
jp
push
inc
rcrl
mov
jge
dec
jae
testl
call
sbbb
pop
rcrb
in
cmpsb
imul
incl
pop
add
adc
or
xchg
jmp
add
push
push
sub
sub
cmp
cmpsb
shlb
add
sbb
in
mov
pop
sbb
push
popa
dec
and
incl
sbb
sahf
xchg
pop
and
test
out
fldl
or
xor
paddq
icebp
and
pop
xchg
ret
scas
dec
sbb
out
in
xor
or
sbb
fwait
xchg
xorb
add
mov
mov
lods
sub
dec
pop
dec
mov
xor
inc
int3
mov
inc
push
inc
cs
sbb
pop
add
rorb
in
addl
call
outsb
sahf
and
cli
pop
movsb
push
mov
decl
cmp
fsubrl
fs
dec
cmovs
cs
mov
xlat
sub
add
stc
dec
jge
add
jmp
outsl
cli
in
decl
mov
push
enter
insb
shll
mov
mov
popa
mov
lret
push
sub
xchg
popa
pushf
inc
cmp
divl
lds
or
and
jle
jmp
jne
ljmp
jecxz
jmp
add
cwtl
aam
jmp
pop
dec
push
or
ljmp
or
adc
mov
aam
sub
enter
xchg
incl
jmp
lods
fdiv
jecxz
pusha
outsb
in
pushf
adc
or
add
test
dec
cmp
mov
jne
and
popa
sbb
cld
jae
inc
pop
inc
das
push
inc
jmp
cmp
mov
mov
fwait
sub
push
popf
mov
incl
adcl
jne
sub
loopne
pushf
arpl
lret
popf
inc
jns
decl
nop
jmp
loopne
push
xor
jns
xchg
jns
lcall
mov
push
dec
mov
lock
shlb
test
lods
mov
add
pushl
in
adcb
push
lods
test
insb
push
adc
mov
clc
outsb
pop
ds
sar
out
inc
sti
clc
xor
adc
xor
aaa
test
hlt
ljmp
mov
adc
cmp
loopne
cmp
pusha
pop
dec
or
setbe
add
jo
or
and
les
jmp
push
js
mov
dec
dec
loope
pushl
std
cmp
dec
sbb
and
dec
xchg
add
jge
add
sbb
cltd
unpcklps
cmp
jecxz
and
push
jle
dec
mov
inc
ret
jmp
jle
jbe
lcall
xchg
inc
mul
dec
int
enter
add
aas
lret
push
sti
and
into
inc
std
call
fwait
add
ljmp
test
inc
mov
outsl
das
hlt
push
pop
lahf
push
sbb
add
jge
xor
adc
in
call
movsb
testl
push
je
sbb
pop
gs
add
or
data16
jmp
inc
sub
cmpsb
adc
sub
push
sbb
adc
mov
push
mov
cmp
adc
jg
add
nop
lahf
pop
xchg
cs
shll
cmp
xchg
mov
xor
adc
movsl
add
outsl
mov
jmp
or
adc
pop
jo
sub
popa
xchg
mov
call
adc
cmp
pop
mov
call
loopne
push
xor
and
mov
rclb
nop
insl
xor
push
daa
data16
cmp
dec
mov
add
mov
cmpsb
ret
out
cs
mov
or
xor
dec
mov
call
dec
sub
pop
imul
push
push
sbb
jg
out
pop
sbb
mov
add
mov
and
mov
pop
add
dec
mov
add
data16
icebp
or
mov
lcall
cmp
or
pusha
and
aaa
push
mov
cmp
push
sub
lcall
pop
xchg
inc
sub
in
sbb
mov
xchg
popf
lret
pop
lods
movsb
fwait
add
sarl
cmpsl
adc
lods
flds
popf
add
nop
hlt
push
mov
stc
xchg
jle
addr16
mov
add
xor
pop
dec
popa
xchg
mov
jg
sbb
cwtl
dec
cmp
clc
add
xor
filds
decl
lret
add
outsb
cmp
xchg
aaa
inc
sarb
mov
mov
ljmp
pusha
repnz
mov
rcrb
movsl
pop
adc
jmp
dec
test
addl
mov
sbb
outsl
mov
mov
jo
hlt
movsb
xchg
lcall
xchg
out
sub
ljmp
push
stos
push
popa
jbe
pop
cmpsl
shlb
adc
adc
mov
ret
pusha
lods
in
inc
push
jbe
rolb
inc
outsb
add
out
cmp
mov
push
xor
mov
push
mov
pcmpeqb
jo
nop
dec
jo
mov
push
xorl
or
sub
push
push
inc
cmp
add
fadd
push
pop
stos
fldenv
cmpsl
jb
leave
mov
xor
xor
aaa
lcall
loopne
int3
push
and
push
inc
and
daa
push
mov
ds
fcomip
decl
in
call
lock
das
lret
rorl
std
decl
jo
icebp
and
pop
aas
int
push
sbb
test
jecxz,pn
icebp
arpl
call
test
mov
pop
inc
clc
mov
inc
xorl
xor
pop
sbb
fnstcw
add
data16
sub
cmpsb
out
mov
daa
add
sub
mov
js
jae
and
adc
push
dec
jg
lcall
xor
sub
adc
and
jbe
mov
xchg
imul
jne
cwtl
lcall
jg
test
push
pusha
fsubl
mov
js
push
or
cmpb
vtestps
push
push
wrmsr
inc
xlat
inc
jmp
popa
in
add
mov
loopne
cli
es
xchg
or
sahf
jl
sub
inc
cmp
ljmp
sbb
or
incl
mov
inc
aam
add
loopne
ja
ljmp
fcoml
mov
sbb
cli
decl
mov
inc
sub
pushl
jbe
or
mov
rorb
enter
cmp
dec
xor
fcoml
jge
or
insb
in
out
adc
sub
das
fs
rcrl
pop
dec
cmpsl
popa
cld
pop
ja
ljmp
sbb
popa
add
pushl
or
test
inc
pushf
aam
and
mov
rolb
push
add
fdivrl
and
das
clc
jne
sbb
and
arpl
arpl
add
lock
mov
mov
pop
rolb
xor
lahf
pusha
ljmp
xchg
jo
add
or
cmp
jge,pn
mov
pop
xor
jl
or
push
js
mov
rol
pushl
shrb
ss
movsb
xlat
inc
add
sbb
mov
addb
jmp
sbb
mov
mov
or
and
int3
adc
mov
aaa
rcrb
add
imul
andb
sbb
add
inc
adc
loopne
mov
jmp
and
lock
cmp
jecxz
push
ja
andb
ljmp
mulb
clc
sub
movsl
pop
popa
jno
repz
inc
sbb
insb
fsubr
inc
dec
sbb
dec
add
push
incl
push
cmpb
mov
xchg
mov
jle
xor
sub
xchg
push
mov
xchg
popf
std
rorl
mov
add
mov
dec
inc
xchg
pushl
lock
add
test
or
dec
mov
movb
mov
mov
mov
bound
add
mov
mov
push
in
pop
nop
stos
mov
sbb
rcr
test
mov
or
inc
push
inc
scas
inc
mov
pop
jp
shlb
inc
lcall
imul
out
mov
push
pop
sbb
add
sub
call
or
orb
xorb
aam
sub
mov
cmpsb
mov
push
movsb
push
mov
fcomip
or
cmp
das
jo,pn
mov
adc
sbb
and
sar
js
aam
add
rolb
mov
std
adc
jmp
inc
xorb
push
bound
imul
inc
rcll
pop
xchg
icebp
jle
pushl
inc
or
out
clc
push
add
mov
decl
push
andl
aam
xor
out
lock
lcall
mov
enter
inc
jne
pop
mov
inc
xor
sbb
dec
or
fnstsw
or
or
add
call
mov
xchg
dec
inc
jne
adc
pushf
in
repz
ljmp
cli
ljmp
cmpsb
scas
nop
push
sub
aad
movsb
mov
xchg
stc
les
loop
das
cli
jmp
pop
test
adc
hlt
popf
inc
pop
or
or
mov
or
popa
xchg
notb
jb
dec
xchg
addb
insb
xor
mov
arpl
mov
nop
cmp
push
push
outsb
mov
jg
mov
dec
test
sub
insl
ss
mov
jmp
outsl
mov
rcrl
aam
orb
cmp
ja
sbb
popf
xor
call
dec
incl
dec
out
pop
in
orb
xor
mov
mov
and
incl
incl
xor
les
push
call
cmp
sbb
inc
jb
les
cli
fcomip
dec
or
or
push
sarb
decb
incl
lahf
fwait
sarb
inc
movsb
xor
inc
test
arpl
loopne
xchg
pusha
push
imul
dec
pop
jge
add
pop
dec
rclb
out
dec
and
adcb
ljmp
or
fsubrl
mov
imul
cs
add
sbb
pop
out
add
bound
shlb
call
and
gs
loopne
inc
sub
push
hlt
add
mov
cmpsl
orb
ljmp
popa
sub
leave
lds
add
dec
and
aaa
jne
dec
jg
mov
add
adc
adc
or
dec
xlat
insb
push
icebp
pushl
inc
pop
inc
add
jb
xor
sahf
cmpsb
mov
cmpsl
fwait
stc
cld
nop
imul
loopne
jb
adc
dec
ljmp
or
call
xchg
cmp
movsb
rol
inc
mov
mov
xchg
inc
add
dec
jmp
je
sub
xchg
inc
cmp
push
xchg
pop
push
ffree
sar
mov
aaa
rcl
xchg
test
jo
lods
push
out
add
rol
inc
sbb
jg
daa
nop
sar
pop
mov
outsb
cmpsb
cmpb
adc
lods
es
ds
in
mov
push
jle
sahf
or
lcall
loop
je
fs
mov
add
rcll
sbb
int3
push
icebp
sub
jae
mul
and
adc
es
daa
sbb
daa
or
sbb
pushl
aam
test
or
repnz
add
dec
loopne
sub
xchg
xchg
and
out
sub
cmp
dec
popa
lcall
adc
add
xchg
lret
bound
daa
dec
rcll
mov
inc
jne
fcmovb
mov
and
ljmp
loop
pop
subb
jae
add
jge
popa
sub
fiaddl
or
pop
sbb
mov
out
xchg
lea
dec
imul
push
jg
inc
dec
sbb
sub
rcll
hlt
sbb
mov
sub
jg
or
inc
push
out
lods
cmpsl
fld
sar
xchg
xchg
in
dec
outsb
in
mov
xor
or
hlt
aaa
rcl
cli
int
movsl
imul
dec
xor
adc
mov
jg
ficomps
gs
xchg
add
popa
rcl
push
jbe
rcrl
out
movsl
adc
rorb
sbb
adc
push
sbb
inc
incl
and
mov
ja
cmp
fsubrs
aaa
std
jmp
fs
aad
sbb
lret
inc
mov
int3
push
push
adc
mov
adc
pushl
dec
test
daa
xchg
cmc
cli
sbb
push
nop
ss
out
call
mov
hlt
pop
sahf
jl,pn
or
test
xor
das
and
push
mov
inc
sub
fidivrs
add
add
lods
popa
insb
pop
or
gs
jmp
sarb
cli
cmp
jmp
or
jl
or
test
jo
pop
leave
jg
add
mov
jg
sub
sub
sub
daa
rolb
inc
aas
out
inc
jmp
incl
dec
push
or
mov
addb
js
rcr
call
js
ret
jg
mov
dec
cmp
pop
in
jecxz
cmpsb
jle
dec
outsb
ret
inc
rclb
mov
mov
fists
push
add
or
popf
ljmp
and
clc
test
dec
jg
imul
clc
sbb
in
adc
mov
xor
or
stos
je
inc
ljmp
in
sahf
dec
jle
inc
js
lods
add
inc
add
les
fimull
in
dec
loopne
loopne
and
pushf
mov
rcrb
pop
popa
and
lods
push
pop
mov
movsl
ljmp
scas
inc
dec
and
cmpsb
aam
test
inc
dec
and
inc
mov
call
subb
and
lods
pop
cwtl
xchg
cmp
mov
add
sarb
cmp
les
sub
sub
xor
scas
sub
lock
lcall
pushf
and
inc
stos
in
pop
aas
test
or
rcll
test
or
cmpsl
addr16
dec
cmp
and
mov
scas
and
or
mov
outsl
scas
sti
je
mov
or
js
test
sub
add
cmpsb
hlt
pushl
sbb
add
mov
outsl
jecxz
cmp
in
or
jo
mov
insb
dec
mov
add
pop
icebp
mov
lret
pop
cmp
addl
or
xchg
dec
xchg
in
adc
call
adc
fcmovnbe
xchg
dec
outsl
and
inc
es
add
and
dec
lods
aad
incl
adc
jne
lea
test
lcall
shlb
push
jbe
add
add
xor
fidivrl
pop
mov
cmp
pusha
notl
mov
fcoms
mov
or
test
lar
divb
pop
or
pop
orb
cmp
fdivr
out
add
std
push
adc
aaa
dec
ret
nop
or
mov
mov
push
mov
jmp
and
popa
or
pop
or
in
mov
adc
xor
push
out
jae
jns
lods
mov
cmovae
cmp
push
pop
divl
push
push
pop
call
insl
mov
push
insb
sbb
mov
cs
push
push
or
push
stc
adc
fiadds
xor
jmp
mov
pusha
add
call
or
xchg
mov
or
add
fisttpl
or
stc
pushf
pop
repnz
fstpt
outsb
lahf
xchg
dec
es
add
outsb
push
pop
sub
mov
popl
mov
jo
fstl
and
shrb
outsl
incl
ja
sti
sub
clc
sub
adc
jnp
and
lahf
mov
fnstenv
out
mov
jmp
pop
cmp
enter
std
in
jg
pop
add
mov
es
mov
mov
fildl
mov
nop
outsb
dec
js
mov
pop
fcoms
jg
add
pushl
cld
pop
push
inc
xchg
lock
lcall
fcmovb
fcomp
movsb
shlb
scas
mov
fldt
ljmp
or
add
inc
add
jl
or
fistps
ds
nop
add
xchg
add
jbe
sub
adc
lcall
jmp
hlt
and
pop
inc
push
inc
outsb
out
hlt
or
push
testl
mov
dec
int
xor
lock
mov
pop
or
xchg
hlt
pop
orl
jmp
push
es
and
sbb
loopne
stos
or
hlt
aas
adc
outsl
mov
sbb
out
imul
aaa
enter
pop
daa
shr
mov
add
lods
and
mov
inc
add
pop
in
sets
ja
loop
xor
call
sub
pop
inc
pop
adc
lret
out
sbb
adc
push
sbb
push
adc
push
cmp
push
mov
or
incl
mov
push
aad
dec
sbb
pop
filds
movsl
mov
jnp
add
push
jg
nop
fcoms
dec
test
decl
and
inc
adcl
xchg
scas
sbb
cmc
ljmp
pop
push
dec
out
mov
or
inc
stos
scas
mov
das
xchg
movsb
push
and
dec
mov
jmp
in
gs
push
and
xor
or
cmp
ja
lret
outsb
pop
cmp
decl
add
xchg
aam
adc
adc
mov
in
jnp
adcl
and
das
clc
decl
mov
jno
jb
or
adc
add
filds
cmp
mov
add
mov
rcll
add
push
sbb
mov
pushl
push
xchg
incb
mov
pusha
or
ja
mov
out
inc
pushl
mov
push
mov
add
mov
shlb
scas
clc
jge
leave
psubusw
popa
inc
push
mov
add
je
fwait
jle
and
inc
call
pop
ds
clc
push
mov
repz
test
andb
popf
test
push
add
mov
cli
pop
mov
rclb
jne
aaa
addl
call
fadds
xorb
push
ss
inc
lahf
andb
and
dec
lea
cmc
ja
lock
xchg
push
pusha
add
fistl
add
movsb
sub
mov
mov
jg
outsb
inc
aas
xor
sub
rolb
dec
add
mov
mov
mov
shll
or
jmp
call
dec
cli
scas
xor
push
inc
clc
ret
jge
and
push
into
rclb
ror
dec
mov
jg
and
mov
and
les
xor
jecxz
adc
and
sub
cmp
testl
fisttps
push
out
lods
xor
inc
hlt
mov
sbb
xor
and
mov
rcrb
js
fs
sub
jg
sahf
imull
sarb
mov
fdivrs
int
imul
sbb
push
dec
mov
das
clc
lcall
push
push
test
jnp
fnstcw
jbe
add
ds
jnp
cmp
dec
sbb
pop
shlb
push
pop
add
mov
dec
xor
pop
mov
xor
mov
mov
add
jecxz
fistl
pop
cmp
cmp
pop
mov
jle
adc
sahf
data16
out
xor
mov
cmp
imul
sarl
push
or
pushl
emms
or
or
fdivs
lret
adc
lcall
and
mov
inc
mov
inc
cmp
ljmp
xchg
xor
or
inc
xor
test
shlb
or
js
adc
inc
and
pop
pop
clc
decl
out
mov
mov
pop
or
or
repz
pop
or
incl
shll
jp
aam
rorb
mov
mulb
nop
fs
dec
aaa
lret
rolb
outsb
pop
fisttpl
add
jmp
fst
call
adc
mov
pop
mov
push
xchg
push
add
ljmp
adc
add
and
ret
orb
outsl
ret
insb
sub
enter
pop
outsl
push
inc
mov
pop
jg
decb
add
sbb
repnz
mov
movb
mov
cmp
orl
orb
test
dec
ss
adc
push
loope
xor
add
decl
xor
in
mov
inc
rcpps
xor
sbb
or
call
push
pop
fldt
jbe
addr16
sub
es
cmpl
pop
sub
lcall
mov
xor
scas
or
pop
addb
and
fdiv
xchg
add
inc
inc
push
bound
or
fcoms
push
popa
aam
roll
adc
push
jo
arpl
or
outsb
mov
mov
pop
cmp
test
mov
xchg
pop
xchg
xchg
call
mov
jg
mov
in
xor
dec
in
or
imul
pop
fadd
loop
leave
or
pop
lds
mov
add
dec
movswl
decl
roll
pop
sub
jecxz
outsl
cli
jmp
int
pusha
mov
outsb
data16
les
xor
lea
popf
ss
lcall
xchg
xor
xor
loopne
xor
jmp
push
push
aaa
in
xor
push
adc
dec
incl
enter
adc
sbbl
cli
adc
xchg
cmc
lcall
jge
data16
adc
add
incl
movsb
jns
sbb
dec
xlat
subl
pusha
mov
call
cmpsb
fs
test
mov
call
xchg
sub
pop
mov
jne
les
push
test
pusha
xor
fisttps
mov
or
sar
push
push
dec
dec
mov
mov
xchg
std
jo
inc
inc
inc
fs
ljmp
data16
dec
push
add
das
lea
and
movsb
mov
inc
mov
jp
jmp
pop
and
mov
cmpsb
sub
mov
movsb
clc
mov
inc
dec
push
loop
or
mov
incl
and
xchg
or
leave
adc
xor
push
sub
mov
dec
mov
push
dec
mov
rclb
jmp
xchg
sub
aas
fcoms
fs
mov
in
cld
cmp
sub
lods
mov
ss
cld
xor
pop
push
jns
std
lahf
sub
add
nop
out
adc
fdivr
jnp
lock
ss
jl
cld
jge
xchg
mov
ds
xchg
mov
or
out
jnp
mov
sub
sbb
stos
shlb
cwtl
push
mov
push
lea
push
iret
data16
incb
pushf
mov
fdiv
out
imul
sahf
scas
mov
lods
shlb
enter
mov
push
push
push
fmull
mov
rep
fdivp
int
push
ret
js
or
push
fidivrl
xchg
mov
pushf
in
les
lea
pushl
fwait
in
repz
xchg
test
xchg
xchg
sbb
push
cmpsl
int3
pushf
cwtl
out
test
in
scas
and
pushl
mov
push
xor
test
sbb
sar
mov
jnp
dec
xrelease
fadds
cwtl
decl
jo
movsb
lcall
fwait
mov
pop
into
in
xchg
add
jbe
inc
and
out
jl
fisttps
push
fimull
lds
in
shr
jg
test
cli
push
addl
pop
dec
pop
adc
inc
push
mov
jmp
loopne
mov
clc
lret
dec
xor
jo
pop
sub
int3
fildll
incl
out
fimull
int
pop
inc
push
dec
add
mov
lock
incl
jns
mov
leave
mov
mov
inc
xchg
outsl
pusha
and
js
scas
bound
push
or
loopne
jle
dec
jb
add
fadds
bnd
int3
or
call
leave
sub
pop
mov
sub
mov
mov
mov
dec
mov
mov
pop
movsb
sbb
add
fidivrs
aas
in
decl
push
push
dec
sub
jl
push
jp
mov
add
out
add
adc
pop
aaa
iret
jg
lcall
push
js
fcomps
les
cmp
pusha
sub
cmpsb
call
daa
rorb
inc
sbb
fstps
and
mov
xor
subb
mov
fwait
incb
push
nop
data16
pop
dec
jg
inc
add
and
xchg
incl
pop
pop
lods
mov
scas
add
pop
rorl
cmpsl
cs
and
and
outsl
sbb
call
xor
add
movsl
adcb
test
test
jg
and
dec
add
inc
imul
jbe
cmp
mov
jns
and
lcall
and
mov
adc
sbbl
rolb
sbb
pop
pop
or
clc
call
mov
or
leave
arpl
movsb
adc
push
lea
cmp
sbb
sar
dec
inc
ds
push
push
sti
movsl
dec
fwait
mov
shlb
pop
xor
or
jg
pop
movsl
or
inc
xchg
addr16
adc
dec
lcall
add
movsb
shll
pusha
or
pop
sub
jmp
push
sbb
sub
movsb
rolb
or
loop
mov
incl
js
jl
push
jg
sbb
add
nop
add
xchg
or
cmp
enter
fwait
lock
jl
loop
fmull
mov
xor
ds
sarb
xor
jmp
mov
push
adc
inc
icebp
decl
loop
imul
adc
jnp
add
mov
inc
sbb
cmpsl
je
ljmp
pop
add
in
shll
out
add
cs
cltd
xchg
push
and
or
ljmp
enter
lds
xor
int
push
lds
leave
xor
aam
psubb
mov
or
lock
repz
mov
not
ljmp
int3
test
sbb
sub
test
pop
orl
or
fldt
andb
adc
add
xchg
cmp
pop
push
jo
jmp
dec
leave
mov
loopne
and
lods
decb
add
cvtpi2pd
jo
ud0
aas
je
mov
into
add
xchg
lods
or
mov
cmp
pop
xor
adc
mov
addb
cmp
push
lock
std
adc
or
sbb
fs
mov
jbe
mov
iret
pop
clc
aaa
cld
in
testl
test
pop
pushf
lods
push
enter
add
add
test
pusha
pusha
stos
and
inc
pusha
sarb
sbb
mov
push
aaa
ret
push
rcrb
xchg
jmp
and
mov
mov
or
add
pop
hlt
adc
jg
dec
orb
pop
cmp
ss
or
inc
lcall
jmp
call
orl
push
add
ret
sahf
and
hlt
cmpsl
movsb
jg
fisubs
hlt
cmpsb
scas
mov
push
andl
jge
sub
adcb
xor
in
adc
and
mov
push
and
pop
sbb
adc
mov
and
dec
dec
xor
and
mov
sub
lea
shrb
xchg
fs
sub
or
add
enter
or
nop
adc
gs
js
insb
add
push
push
negl
dec
and
insl
call
je
xor
or
jbe
pop
ljmp
ds
pushl
xchg
fwait
insb
cmp
push
dec
filds
adc
or
inc
addl
call
sub
aas
xor
or
sbb
out
cltd
pop
xor
ljmp
pop
out
sbb
xchg
mov
and
lea
xlat
jb
lret
les
xchg
movsb
fistl
pop
aas
inc
mov
aad
aaa
sbb
pop
ja
and
aam
repnz
dec
cld
mov
lcall
nop
mov
and
lret
push
aas
sahf
xor
inc
adc
xchg
daa
out
cli
in
pop
cmp
or
leave
add
es
and
jg
jmp
nop
out
push
jb
addr16
cmp
inc
mov
pop
jo
movsb
sub
pop
aas
push
test
jg
addb
fwait
subb
in
jbe
inc
add
xor
jp
mov
cli
call
bnd
imull
pop
inc
pop
aaa
sub
add
sub
mov
dec
clts
aas
add
mov
xchg
adc
ret
pop
mov
decl
add
xchg
shlb
insb
sbb
insl
mov
inc
lret
dec
testl
ljmp
pusha
fimuls
lea
sarb
inc
fisttpll
dec
fdivrs
jg
or
push
add
stos
ljmp
inc
push
das
hlt
lret
mov
xor
lar
lret
dec
dec
inc
das
pop
imul
mov
and
ds
dec
lcall
pusha
addr16
ret
jg
sbb
dec
fsubp
add
mov
lahf
xchg
inc
test
andb
orb
call
test
add
sbb
pop
insl
ret
and
cmpl
adc
adc
inc
and
sbb
adc
jnp
or
xor
push
cmpsb
sub
pushf
jne
cmc
incl
add
and
adc
xchg
in
adc
inc
outsl
clc
pop
std
xchg
jmp
fmuls
push
push
nop
ss
clc
ljmp
cmp
fistl
mov
pop
popa
push
add
jne
and
ficoml
mov
sub
psubusb
add
call
or
inc
jl
repnz
fistpl
add
dec
movsl
sbb
dec
push
inc
pop
mov
lea
or
rcr
aam
mov
jns
cltd
adc
jmp
rol
xor
push
mov
in
inc
pop
xchg
std
call
enter
cmp
outsb
imul
xor
cmp
sub
push
adc
lahf
jne
adc
mov
ret
sbb
xchg
jmp
jmp
int3
subb
aaa
cmp
xchg
or
ja
cmp
push
pop
call
rorl
cmpsl
sub
rorb
sub
push
add
sarl
jbe
xor
adc
add
sub
imul
nop
cli
inc
loopne
into
jecxz
jl
js
decl
and
dec
das
dec
inc
adc
addr16
or
pusha
sub
xchg
jmp
push
and
ja
mov
cld
aad
add
pushl
je
adc
lods
cltd
sahf
push
sub
in
je
and
mov
bound
mov
lods
pushf
xchg
pop
sbb
loope
movsl
das
mov
push
pop
xor
lahf
std
outsb
in
aam
outsb
mov
movsb
incb
add
adc
inc
or
incl
dec
sysenter
lcall
lods
fimull
sub
add
insb
loope
ss
out
sub
ljmp
push
xor
xchg
pop
xchg
gs
jmp
pop
clc
dec
xor
subl
imull
adc
jle
mov
pushl
jo
das
add
dec
lret
jo
not
outsl
add
jmp
jle
mov
and
xor
test
mov
imul
sub
mov
test
ja
ljmp
adc
inc
inc
adc
add
rol
scas
jle
xchg
xor
les
sbb
fisubrs
sub
dec
dec
mov
enter
inc
adc
mov
adc
decl
inc
inc
in
jp
pop
cmp
addl
shrl
mov
mov
cmpsl
fcomps
negl
mov
fadds
push
daa
mov
or
add
add
ljmp
enter
ljmp
stos
es
clc
rcll
stos
test
pop
mov
and
or
push
shl
or
jg
add
push
scas
dec
add
push
mov
xchg
xchg
fs
dec
mov
fidivl
jne
jb
inc
and
pop
inc
sbb
js
jecxz
pop
scas
enter
pushl
rclb
popf
dec
inc
es
mov
ljmp
xlat
push
push
cmpsl
add
or
push
cwtl
dec
cmp
mov
movzbl
sub
test
pushl
clc
mov
adc
sarb
jle
or
roll
add
sbb
jle
jns
fldcw
jmp
pop
decl
cmp
iret
push
mov
fisubl
fisttpl
stos
mov
std
ljmp
mov
push
push
cmp
inc
and
rclb
push
jge
aad
movsl
cli
ja
or
mov
insl
sbb
call
test
adc
mov
xor
jno
inc
and
fstps
push
and
je
ret
xchg
and
sar
adc
jmp
mov
pop
xchg
add
push
sarb
shlb
or
ret
sub
push
push
shrb
xchg
dec
in
repnz
add
mov
inc
xor
jg
sti
and
outsb
call
jne
jecxz
inc
cmpxchg
in
sub
inc
icebp
decl
push
dec
adc
test
inc
js
xor
pop
subl
call
sbb
out
testb
add
sbb
xchg
xchg
xchg
aam
pop
mov
dec
jle
xchg
andl
push
fldt
daa
fdivs
mov
roll
fildll
mov
addr16
push
es
mov
xor
xlat
and
test
sbb
jmp
dec
lock
pcmpeqb
adc
cli
inc
adc
sbb
test
add
xorb
or
push
mov
adc
sub
xchg
adc
xor
or
cwtl
jg
sub
jbe
pop
daa
mov
out
and
ja
push
pushl
and
and
cli
pop
dec
xchg
loop
in
dec
sbb
jmp
cmc
lcall
fadds
mov
sbb
fsubs
or
ljmp
push
cmp
aam
nop
push
sbb
outsl
or
fisttpl
jno
or
pop
push
pop
sub
mov
enter
cmp
or
mov
add
or
jnp
idiv
aaa
pushf
mov
enter
add
cmp
sbb
not
jae
add
sar
pusha
pop
lahf
cmp
xchg
mov
xor
outsb
adc
add
add
scas
cli
imul
xor
aaa
ficoml
jb
mov
push
xchg
mov
das
ljmp
and
sbb
mov
push
addr16
cmp
inc
repnz
push
jge
dec
adc
cmp
and
or
pop
imul
or
scas
pop
ret
push
pop
xor
sbb
sub
leave
loop
incl
fildll
dec
jl
cli
outsb
and
mov
es
sbb
sbb
sbb
ljmp
add
out
jl
xor
add
jb
je
mov
call
push
enter
icebp
or
xchg
dec
dec
pop
xchg
scas
mov
sbbb
mov
leave
jbe
mov
insl
out
mov
sub
jne
incl
imul
aas
in
pop
fcom
jmp
subl
hlt
push
enter
adc
or
xchg
mov
or
ljmp
fmuls
and
inc
fcomp
mov
loope
sub
lds
mov
push
inc
aad
inc
add
mov
lcall
movsb
mov
pop
arpl
mov
inc
loop
xor
ret
add
xchg
sbb
std
out
clc
cmp
xchg
pusha
xlat
or
pushl
add
mov
or
push
sbb
insb
ds
xor
popf
cmp
stc
int3
scas
outsl
jmp
jg
clc
lret
jl
or
cmp
adc
in
sub
push
pop
cmp
cmp
insl
roll
inc
pop
popa
jne
mov
ret
mov
fists
lcall
push
cs
sbb
sbb
js
inc
scas
mov
mov
or
bound
cli
and
test
scas
jne
mov
lea
leave
cmp
add
dec
push
jg
cmp
adc
jb
test
sahf
pop
or
xor
lcall
adc
mov
ret
pop
mov
arpl
or
aad
aaa
add
loopne
imul
ljmp
fildll
mov
xchg
inc
or
push
clc
scas
or
out
xor
pushl
pop
hlt
daa
call
fsts
inc
pop
jno
and
jbe
push
cmp
dec
incl
adc
mov
and
pop
inc
or
sbb
cmp
xchg
push
sbb
pushl
sbb
in
js
dec
fmull
add
mov
hlt
dec
mov
leave
es
add
inc
push
add
loopne
mov
mov
xor
pop
xchg
lods
sbb
jg
pop
xor
inc
and
scas
push
loopne
scas
or
rcl
ljmp
pop
enter
xor
pop
push
xchg
mov
push
adc
bound
pop
sub
mov
incl
sub
sbb
fimuls
pushf
jle
add
pop
addb
cmp
sub
imul
push
insl
pop
mov
and
imul
mov
add
nop
fdivs
das
pushl
xor
and
cmp
imul
popf
jmp
sub
mov
inc
ljmp
fistpll
imul
cltd
rcrb
scas
ret
out
jl
jge
push
js
push
aad
rcl
les
sub
in
dec
cmp
pop
xor
cmc
cmpsb
pop
mov
jne
repnz
decl
cs
nop
mov
stos
lods
cmp
or
popf
add
xchg
lahf
mov
leave
in
pop
hlt
jg
lods
jl
in
xchg
mov
outsl
xchg
sahf
push
add
jg
rorl
fwait
lods
pop
sub
incl
cld
decl
lret
mov
sub
sbb
and
loopne
xchg
call
in
fnsave
out
sub
xchg
push
push
lcall
lcall
or
adc
xorl
movsb
mov
adc
les
and
incl
pop
jge
pop
adc
decl
add
insl
inc
or
push
sbb
jmp
lret
sub
daa
jecxz
sbb
loop
push
adc
xchg
pushl
js
mov
aas
in
adcl
inc
cmpsl
incl
add
push
movsl
pop
cmp
fwait
idivb
js
in
fildll
or
mov
stos
pop
jg
push
mov
dec
fwait
les
flds
ljmp
sar
xchg
roll
lock
test
icebp
in
push
call
adc
mov
adc
or
lock
cwtl
sbb
push
xor
pop
dec
test
adc
daa
lock
loopne
ljmp
inc
jns
pop
test
sub
clc
adc
lcall
call
das
cmp
rcrl
dec
sub
cmpsb
cmp
inc
lret
and
jg
xor
add
dec
nop
aaa
fcomi
dec
inc
or
add
call
clc
sbb
clc
lock
sbb
mov
and
lcall
ret
test
pop
cmp
or
sub
clc
pop
iret
ds
cmc
call
mov
push
in
and
es
call
mov
mov
jne
nop
clc
jo
add
sbb
cmp
jmp
rclb
test
push
adc
sub
and
cltd
jp
or
fs
jmp
mov
mov
mov
sbb
stos
or
mov
mov
daa
cmp
mov
dec
or
mov
mov
push
jecxz
pop
adc
stc
xor
mov
mov
cmp
scas
push
out
jg
sub
decl
je
sbb
xorl
bound
xchg
lock
data16
repnz
scas
mov
and
pop
cmp
rorb
adcb
pop
xor
cltd
xlat
incl
add
lret
jo
add
scas
decl
sbb
sub
jl
and
sub
adc
movsb
adc
lods
jmp
mov
add
xchg
dec
pop
fadds
leave
daa
mov
jmp
dec
outsb
jnp
xor
push
mov
jmp
stc
clc
idiv
ljmp
dec
jmp
mov
sbb
in
dec
ret
lahf
dec
push
cmp
ja
and
nop
hlt
decl
push
inc
mov
aad
sub
and
push
std
outsb
push
mov
mov
sbb
pushf
jmp
add
fistpl
dec
gs
das
hlt
and
cmp
or
dec
negl
lcall
push
pusha
sub
fs
pop
or
sub
test
mov
pop
add
test
inc
lcall
jmp
andb
aas
sarl
sahf
xorl
inc
add
daa
pop
add
inc
enter
push
idivl
sbb
out
dec
jecxz
adc
mov
aaa
std
ljmp
xor
pop
push
dec
inc
addr16
bound
cmpsb
xor
and
xor
or
sbb
adc
ljmp
and
pusha
mov
mov
dec
out
nop
icebp
mov
sub
sub
add
add
dec
decl
cmp
or
cwtl
pop
je
xchg
je
push
enter
pop
sub
mov
sbb
es
add
ljmp
inc
es
xchg
and
pop
push
les
mov
adc
dec
jbe
or
push
incl
popf
leave
add
or
inc
inc
mov
inc
push
cmp
pop
add
xchg
sbb
and
loopne
movsb
out
pop
adc
inc
mov
in
add
pop
dec
lret
jl
movsb
xchg
test
xorl
stos
mov
push
sub
xor
decl
inc
xchg
test
test
sub
adc
inc
fs
dec
int
pop
mov
pusha
cs
sti
lods
incl
rclb
xchg
js
out
pop
decl
sub
cli
jns
sbb
fcoml
gs
mov
ljmp
push
inc
shl
aas
add
pop
jl
pop
add
jmp
mov
jp
cmp
mov
and
movsb
xchg
mov
inc
jl
adc
push
sbb
out
cmp
mov
dec
add
push
out
pop
iret
mov
add
pushf
adc
ljmp
sbb
cwtl
dec
test
cmpsl
and
pop
dec
mov
push
decl
mov
sub
fildl
daa
and
jo
sub
fs
pop
adc
sbb
cmp
xchg
add
jmp
testl
nop
out
adc
xchg
adc
cmp
in
decl
outsl
mov
push
ret
or
pop
xchg
cmpsb
jo
cmp
push
mov
push
inc
mov
push
cmp
out
cmp
and
enter
or
aaa
push
dec
mov
aas
mov
pop
std
fdivrl
or
mov
cmp
cltd
or
scas
xlat
mov
cmp
fdivs
mov
and
jb
pop
lds
jg
xor
inc
popa
jne
orl
inc
cmp
dec
testb
jo
push
and
movsb
jb
mov
push
stc
mov
addw
mov
ret
sbb
push
mov
idivb
mov
pop
add
decl
mov
rcrb
aaa
push
mov
mov
pcmpgtb
push
and
inc
xorb
mov
pop
inc
outsl
inc
pusha
and
add
cmp
xchg
dec
stos
inc
add
repz
das
and
sbb
movsb
cmp
pop
in
mov
lcall
inc
jno
outsl
adc
jmp
push
inc
push
decl
into
sbb
xor
lahf
dec
es
xor
xchg
dec
and
xlat
in
pushl
inc
cwtl
pop
mov
add
inc
dec
mov
rclb
sahf
ret
and
cmp
shlb
dec
enter
or
jo
pop
into
movsb
roll
je
cltd
fdivs
dec
iret
pop
inc
test
gs
les
mov
add
cli
inc
mov
cmpsb
cmp
jg
fcmovnb
or
loope
push
mov
mov
add
and
enter
lahf
adc
jg
ljmp
popa
xchg
mov
insb
pop
popa
and
mov
cmp
mov
push
jne
dec
mov
in
lahf
mov
adc
adc
inc
jne
sub
jne
decl
push
jecxz
jbe
and
pop
mov
jno
and
incl
jg
rcr
pop
adc
scas
inc
popf
dec
jl
ficoms
sub
dec
xchg
pop
cli
popf
pop
sbb
jnp
rolb
ret
out
jo
dec
in
or
push
pop
jp
adc
xchg
ja
imul
lds
ret
in
cmpsl
sub
sar
incl
enter
add
sub
loop
push
aad
adc
sbb
lcall
cmc
push
push
rclb
jg
rolb
call
aaa
mov
add
adc
xor
push
push
add
mov
lock
cmp
int
push
ja
test
add
mov
jg
or
or
outsl
fsubrl
push
push
divl
inc
clc
pushl
lret
mov
xchg
fdivr
mov
push
adc
rcrl
pop
testb
push
shll
dec
or
lcall
incb
push
jmp
lds
clc
cwtl
les
sub
xchg
add
jb
sbb
xlat
dec
fisubs
incl
xchg
cmp
cmp
pop
push
ret
pop
nop
hlt
xchg
movsl
mov
inc
pushl
cmpsl
add
sbbb
or
dec
sub
mov
adc
inc
inc
and
in
loope
std
jmp
rolb
ret
adc
in
adc
xor
adc
lods
adc
pop
add
adc
jo
push
push
outsl
and
cmpsb
dec
xchg
jne
inc
sarb
dec
inc
sub
movsb
cwtl
mov
ljmp
mov
or
sub
or
jmp
add
pop
popa
dec
xchg
dec
rolb
add
cli
ljmp
mov
lcall
fldcw
cmp
ss
pushl
sahf
insb
icebp
mov
inc
mov
inc
mov
or
ljmp
popa
add
inc
lock
pop
add
sahf
pushl
cld
lcall
movsl
into
add
inc
addr16
sub
negl
add
js
incl
xlat
out
pop
mov
shll
inc
and
inc
je
cltd
add
mov
sbb
ret
clc
and
add
sbbb
add
xchg
mov
ljmp
jo
out
xchg
out
hlt
xor
seto
stos
pusha
xor
addr16
iret
pop
sub
adc
insb
inc
mov
popf
sub
idiv
and
lret
int
das
pushf
js
loope
cmp
mulb
sub
xchg
mov
sahf
pop
movsl
xchg
ret
lea
jmp
add
add
dec
inc
xor
or
mov
add
mov
lcall
and
imul
inc
nop
in
push
ljmp
push
leave
arpl
orb
addr16
dec
cwtl
inc
dec
popa
and
adc
das
das
clc
jmp
into
jge
aad
cwtl
ret
add
push
adc
sub
cs
and
test
fcomip
mov
push
add
dec
mov
pop
pop
inc
test
je
popa
add
mov
scas
clc
incl
xor
jp
popf
push
or
adc
adc
cmpl
sub
clc
dec
xor
shrb
arpl
and
js
sub
jmp
gs
inc
cli
lahf
mov
std
adc
ror
call
sub
shrb
imul
dec
lcall
cld
or
lcall
adc
bound
call
add
xor
or
pop
pop
movb
incl
xchg
shrb
add
lea
jge
or
or
add
add
scas
ja
cli
in
fimull
adc
dec
mov
and
addr16
rolb
cmp
sbb
jp
clc
jg
dec
lods
dec
add
into
mov
rolb
inc
jbe
sub
ljmp
and
sbb
push
scas
add
mov
pop
popf
mov
aam
adc
nop
and
ljmp
or
push
repnz
push
adc
cmp
push
inc
adc
jg
ss
and
dec
inc
rol
adc
xor
hlt
lret
add
out
mov
inc
add
or
ja
pusha
add
stos
add
ljmp
mov
pop
mov
cmc
cmp
add
movsl
sti
ljmp
ficompl
imul
jbe
inc
cmp
add
cli
shlb
movsb
cmp
adc
std
jg
or
test
aas
adc
je
mov
mov
sub
ret
or
inc
scas
cmp
mov
gs
enter
sub
inc
jae
jno
cltd
popa
sub
dec
add
or
dec
jne
mov
cwtl
cli
sub
repnz
ds
inc
or
adc
adc
push
add
mov
cld
jg
and
js
rolb
enter
inc
xor
or
dec
sbb
fnsave
cmc
pop
shlb
mov
mov
jp
ljmp
sbb
inc
sbbb
call
pushf
push
or
ficoms
int3
push
xchg
xor
ljmp
pop
call
fisubrs
xchg
adc
inc
loopne
dec
and
sbb
xlat
and
sbb
out
mov
or
mov
push
sbb
outsb
mov
int
xchg
decl
jo
inc
or
data16
jne
fstpl
xchg
in
rorb
jg
jmp
push
dec
adc
sbb
pop
or
mov
fs
sbb
push
decl
clc
adc
or
xor
pop
mov
lds
push
cmp
pop
fdivrp
pushl
sub
adc
fs
dec
cmp
mov
lea
jae
scas
push
add
icebp
cmp
pop
add
popa
lock
jp
jae
ret
xlat
aas
add
dec
fmuls
and
jmp
jne
dec
inc
ljmp
sub
pop
add
mov
decl
fstl
arpl
loop
sbb
inc
push
xor
icebp
idiv
jmp
movsb
inc
xor
call
dec
add
pop
sbb
mov
call
adc
add
cmpsl
test
in
add
out
cmp
inc
mov
cmp
cmpsb
xor
push
pop
les
das
sar
jg
push
and
out
testb
adc
or
hlt
cmp
cmp
jle
mov
dec
push
xlat
or
test
cmp
pop
or
outsb
jle
cmp
call
pop
dec
rorb
pop
xchg
fdivs
jecxz
push
mov
pushf
xchg
lcall
jmp
inc
lcall
cmp
mov
push
ss
sub
loope
shlb
in
call
mov
adc
push
std
aas
lock
call
mov
rorl
lods
leave
mov
xchg
push
lcall
xchg
ret
in
xor
fsubs
mov
or
pop
push
add
sbb
aas
cmp
cmp
inc
sub
jg
or
data16
xchg
test
jg
fmuls
jmp
sub
lea
cmc
ljmp
dec
inc
rorl
mov
cmpsl
enter
dec
ljmp
jo
xor
sbb
andb
cmovp
or
inc
push
les
push
cmp
jmp
hlt
and
aas
or
nop
mov
fcomip
jne
outsb
mov
adc
mov
dec
and
and
fwait
and
in
pop
pushw
add
push
pop
cmp
xchg
or
and
fimull
js
lods
stc
mov
sbb
test
pop
add
inc
pusha
pusha
mov
or
push
cmp
repnz
jmp
or
pandn
or
sbb
xchg
jne
sbb
xor
mov
mov
cmpsl
jo
clc
test
ljmp
es
subl
idiv
incl
push
into
adc
lds
in
nop
mov
jno
clc
js
mov
add
mov
out
sbb
sbb
sub
adc
pushl
mov
xchg
adc
push
mov
aad
shrb
and
outsb
popa
and
mov
mov
test
test
xor
das
pop
bound
dec
adc
jp
test
pmullw
call
lock
or
adc
mov
roll
push
sbb
test
dec
jmp
mov
rorl
in
cmpb
dec
pop
xchg
add
mov
fs
dec
cmp
add
inc
int3
inc
jp
pop
inc
mov
orb
jmp
pop
and
jno
push
dec
sbb
cli
arpl
xor
jg
jae
mov
xlat
jmp
ja
lea
sbb
adc
inc
daa
test
imul
call
or
outsb
or
jo
jo
pop
xorb
jne
cmpsl
sub
pop
incl
push
mov
mov
inc
mov
movl
incl
rol
jle
out
cmp
and
xorb
fists
or
sub
fchs
pop
jp
inc
push
mov
cmp
sub
jbe
lret
cli
jg
push
sub
inc
outsl
cmp
jmp
sahf
jg
je
jg
jne
repnz
fdivrp
mov
or
dec
add
ret
push
dec
add
xor
pusha
jle
xor
xchg
inc
call
xchg
ret
dec
test
or
sub
sbb
and
addps
xor
xchg
jmp
insl
or
test
outsb
out
adc
adc
fs
sbb
or
sbb
fidivrs
and
incl
sbb
and
das
or
xchg
aaa
mov
testl
clc
decl
jecxz
rcll
or
inc
and
pop
and
mov
das
add
in
mov
push
push
mov
sbb
pop
and
pop
clc
out
incb
lcall
cmp
lock
pop
rorb
and
popa
xchg
cmp
dec
add
mov
shr
inc
js
mov
gs
push
dec
sub
xor
jmp
mov
sbb
or
adc
hlt
add
jmp
adc
push
add
cmp
pop
inc
mov
pop
cmc
dec
or
cmp
jb
js
xchg
mov
xor
push
loope
sbb
fildll
cmp
push
push
inc
fwait
inc
lcall
hlt
addb
fdivrs
mov
pop
adc
dec
dec
leave
fldt
push
xchg
or
or
xlat
push
in
dec
push
or
mov
inc
adc
insb
ljmp
xchg
mov
adc
push
adc
push
xor
dec
loopne
or
cli
mov
mov
data16
xor
movsl
add
mov
push
jbe
push
fucomp
adc
or
add
dec
dec
in
decl
pushl
and
mov
test
je
aad
jmp
cwtl
rcrb
pop
push
outsb
add
mov
push
cmp
pop
in
xor
xchg
and
repnz
adc
cli
decl
push
in
clc
inc
in
jbe
repnz
cmp
pop
mov
adc
cmp
jg
mov
out
bound
mov
sti
dec
pop
add
or
cmp
mov
lcall
test
icebp
shlw
inc
rep
mov
cld
jmp
movsl
mov
xchg
xchg
inc
xchg
xorb
add
cwtl
bound
out
gs
call
inc
dec
rclb
sahf
insl
das
sbb
pop
inc
dec
cld
dec
jle
mov
stc
xchg
push
cmpsb
mov
loop
in
push
fsubr
adc
rol
pop
jg
add
push
scas
sub
out
sahf
and
incl
fdivrl
sbb
das
jp
lahf
add
adc
cmpsl
push
ds
bound
imul
inc
aaa
xchg
push
adc
push
orb
es
loopne
int3
adc
fistpll
cld
push
xor
inc
add
out
xorb
pop
aam
decl
xchg
imul
pop
lahf
dec
jl
xchg
cmp
push
xchg
jne
in
das
cli
jg
add
jge
or
ret
mov
push
pop
fisubrl
cmp
aaa
call
daa
add
push
das
in
or
mov
aam
sti
out
sub
mov
xchg
jne
jg
jg
aaa
sub
and
mov
add
add
push
lret
inc
xor
push
cli
clc
ljmp
sbb
ljmp
mov
subb
adc
ljmp
push
sti
je
les
xchg
movsb
faddl
pop
or
push
xor
jmp
mov
addr16
adc
xchg
mov
and
adc
inc
fwait
or
jbe
or
inc
or
add
incl
outsb
fisttps
jmp
movsb
sbb
dec
dec
mov
xor
or
sbb
call
rorb
sub
int3
add
mov
cmp
xor
ss
call
loope
push
add
xlat
adc
movaps
and
cmp
inc
loopne
sbb
mov
aam
fwait
aam
idivb
test
cmp
or
decl
pop
inc
enter
aad
fsubl
lea
jle
mov
bound
dec
and
inc
imul
push
cltd
pop
clc
adc
mov
add
inc
pop
ss
das
gs
jge
jmp
data16
iret
stos
test
push
push
xor
fistps
lret
rol
jno
dec
mov
sbb
dec
test
xchg
xor
adc
inc
addb
push
jg
inc
addl
pop
stos
pop
loopne
ret
add
jge
imul
xchg
in
xor
mov
fdivrs
push
hlt
jp
mov
aam
and
fisttps
jno
jo
lds
je
test
lahf
mov
and
xor
iret
inc
dec
pusha
orb
bound
ljmp
js
aaa
divl
les
mov
push
xchg
add
lcall
push
inc
mov
sbb
cmp
ja
add
and
inc
rcrb
aaa
pop
sub
jg
cmp
adc
inc
ja
jg
sub
dec
jg
push
mov
xchg
ja
jecxz
add
out
cmp
pushl
xor
arpl
mov
ja
mov
jp
cmpsb
or
jmp
add
jmp
mov
popf
lcall
sub
mov
sbb
sub
add
les
and
shlb
mov
adc
lcall
mov
aaa
mov
push
sub
ret
scas
ljmp
int3
bound
jge
decb
cli
stos
pop
push
jecxz
add
add
or
into
lcall
add
mov
rclb
or
clc
fcomip
push
mov
and
mov
jg
fisubs
jo
jmp
insb
cmc
jl
and
or
adc
mov
push
sub
sub
lcall
pushf
pop
pop
or
or
inc
js
sarl
cmp
pop
les
add
int
fs
int
lcall
sahf
lret
scas
cmp
add
repz
shrb
sub
push
adc
out
mov
push
push
xadd
ret
pusha
mov
add
or
jns
imul
outsb
sub
jmp
mov
dec
mov
add
push
mov
sub
roll
pop
pop
bound
xchg
pusha
add
adc
ss
pushl
jp
push
add
adc
xchg
movsl
rolb
ficoml
mov
inc
mov
nop
xchg
in
and
sbb
bnd
or
mov
clc
outsb
inc
incb
ss
outsb
sub
dec
or
and
movb
popf
mov
ljmp
ret
es
lret
jo
daa
call
xchg
cltd
jg
hlt
and
pop
dec
pop
outsl
pop
in
rcrl
add
jmp
cmc
decl
mov
xor
mov
in
test
and
out
cs
inc
lcall
xorb
cmp
sbb
dec
dec
sub
ds
mov
sbbb
or
ljmp
inc
xor
push
or
or
add
or
les
add
in
jb
incl
daa
jge
mov
mov
loopne
mov
dec
inc
fs
xor
lret
lcall
ss
add
mov
stc
push
push
sub
pop
inc
mov
enter
rcll
and
inc
into
pop
sbb
imul
fcomip
jge
sbb
fcomps
in
add
mov
push
mov
aad
lea
out
decl
lock
mov
push
test
pop
pop
cli
test
into
out
sub
je
mov
sbb
movl
lcall
add
xor
aas
cmpb
sbb
dec
in
sub
add
ljmp
mov
in
jbe
insb
jge
sbb
and
call
cs
sbb
xchg
xor
jmp
cmp
xchg
mov
sub
sub
iret
sub
test
xlat
shr
pop
or
push
inc
lods
or
repnz
jg
add
ss
lcall
sti
hlt
aaa
sbb
xor
lcall
mov
ret
push
cmp
pop
add
pusha
push
dec
repnz
inc
adc
and
loop
lods
in
mov
es
cmpsb
dec
mov
mov
ret
or
loop
test
scas
push
movsl
mov
lock
cmp
pusha
pop
les
add
clc
mov
mov
inc
adc
test
mov
ljmp
test
jne
adc
test
fs
cld
roll
and
das
aaa
movsl
xchg
scas
mov
sub
sbb
lock
jg
inc
sar
sub
lods
xor
lods
scas
sbb
stos
cmp
sbb
or
mov
ds
jb
mov
add
jl
gs
cld
push
sub
pop
xor
sbb
inc
inc
pop
and
clc
jmp
dec
xor
nop
nop
leave
xchg
or
pushl
clc
jb
push
jb
jbe
add
dec
push
xchg
lcall
dec
xor
adc
add
xor
mov
dec
jne
or
and
push
test
add
dec
in
mov
pop
cmp
xor
out
adc
jg
popa
pop
mov
push
sub
jbe
add
inc
pushf
sysenter
push
addr16
or
add
ljmp
mov
fcoml
adc
cmp
hlt
aaa
shlb
inc
pop
in
push
les
decl
and
push
push
adc
gs
pop
jecxz
and
mov
addb
les
xchg
imul
dec
xchg
dec
sti
mov
inc
or
test
addl
jb
push
xchg
fstl
fbld
adc
out
adc
je
xor
mov
addl
js
es
cltd
pushl
or
stos
sbb
sbb
cmp
push
movsb
or
rcll
mov
add
or
mov
adcl
adc
clc
in
testb
ljmp
dec
or
mov
jle
jg
adc
lret
xor
jmp
imull
cli
test
xchg
adcb
and
sahf
add
ljmp
dec
pop
xor
and
dec
ss
sar
les
add
adc
test
enter
push
jmp
jb
mov
mov
cmp
or
jbe
cmp
xchg
or
cmp
jmp
sbb
fnstsw
rclb
incl
inc
xchg
mov
aam
ret
addr16
aam
jbe
xchg
inc
push
cmpsl
xor
hlt
xchg
inc
addr16
dec
add
adc
mov
pop
aam
cmp
call
sbb
push
inc
or
or
xor
fadd
dec
lcall
icebp
dec
xchg
pop
jecxz
pop
dec
jg
ljmp
lea
lahf
rcr
xchg
iret
xor
mov
sub
pusha
push
je
decl
fwait
add
xchg
call
lret
mov
sbb
out
ljmp
ja
dec
add
nop
shlb
cmpl
sub
mov
incl
mov
movsb
test
adc
jns
test
outsb
clc
call
icebp
out
jb
pop
rcl
shlb
xchg
pop
or
call
lahf
das
and
push
mov
sbb
arpl
cmp
fisttps
jle
sbb
add
aad
dec
loop
add
repnz
and
jmp
bound
shll
mov
sbb
mov
cmp
add
xchg
sbb
xchg
sbb
sbb
mov
decl
adc
test
xor
lds
inc
and
xchg
sarb
add
pop
lods
push
push
pop
adc
mov
inc
lods
sbbb
xor
lahf
hlt
fistl
lock
xorl
cli
or
incl
loopne
dec
jge
bnd
movsl
rclb
adc
jle
imul
or
fcomip
bound
or
inc
jecxz
jge
je
inc
pop
push
enter
xchg
sub
out
testb
dec
adc
movsb
ror
xchg
ljmp
pop
add
jp
cmp
pop
sbb
or
jl
clc
pop
cmc
xor
sarl
dec
mov
test
insl
ficoml
mov
and
mov
add
add
incl
dec
je
loopne
xchg
testb
cmp
fcomip
pop
nop
jecxz
jbe
lret
inc
insb
xchg
sahf
add
cs
lcall
fwait
or
pop
xorl
add
decl
hlt
sub
dec
js
push
adc
push
sbbb
popa
test
add
jecxz
call
les
push
push
or
in
mov
mov
outsl
nop
lock
in
jns
loop
push
or
fimuls
call
mov
pop
inc
outsl
cmp
add
lcall
mov
add
and
leave
scas
cwtl
adc
pop
ja
pop
inc
and
sub
js
insl
dec
call
push
sbb
pushf
xchg
pop
clc
adc
daa
inc
jl
addb
lods
and
add
or
push
cmp
movsb
or
adc
fcmovb
out
nop
call
jo
sbb
out
xchg
ret
adc
in
mov
push
jg
pushl
adc
js
jb
xor
cs
out
insb
mov
ja
decl
not
or
gs
push
lret
ret
sub
dec
sbb
and
push
mov
hlt
call
daa
cmc
or
mov
or
dec
sbb
out
ret
enter
dec
ret
ja
and
ljmp
data16
rorl
cmp
inc
pushl
sahf
subb
add
lock
iret
fildll
insb
inc
stos
push
mov
call
inc
dec
sub
mov
fdiv
or
inc
mov
adc
sub
lahf
decl
bound
pminsw
lods
dec
dec
popa
cwtl
in
inc
sbb
test
aad
nop
es
lds
cltd
shrd
push
enter
and
incl
mov
mov
and
fimull
cmp
add
cmpsl
je
pushl
rclb
cmp
test
mov
les
stos
fwait
mov
mov
inc
clc
fstpl
inc
mov
jg
sub
js
fisttpll
mov
lret
push
fimull
xor
lcall
incl
push
push
pop
push
xchg
jno
lret
push
out
fistpl
fisubl
inc
data16
xchg
outsl
call
inc
nop
xor
dec
adc
inc
push
sub
inc
loop,pt
rorl
xchg
jns
mov
sub
mov
pusha
push
push
sbb
xchg
pop
cmp
in
mov
pushl
dec
sub
adcb
sub
imul
push
aaa
add
cmp
cli
or
cwtl
push
mov
or
decl
dec
inc
sbb
frstor
jg
xor
jmp
mov
loop
or
push
adc
or
jmp
xchg
xchg
push
cmp
cltd
jno
adc
test
js
and
addr16
sbb
pop
test
ljmp
and
fiadds
dec
cmc
sbb
rcrb
ja
dec
push
aad
icebp
xorb
add
xor
jp
ljmp
ret
mov
add
ljmp
roll
test
decl
pop
xchg
fwait
push
div
fisttpl
sub
mov
out
or
jg
and
xor
sahf
fwait
sbb
movsb
hlt
filds
and
cld
test
sub
xlat
das
inc
rclb
jg
incl
sub
jmp
in
pop
scas
icebp
pop
sahf
cmp
in
divl
and
add
mov
les
and
or
incl
stos
popa
mov
push
dec
mov
push
ljmp
test
adc
push
movsb
fcmovu
clc
push
bound
sbb
loopne
pop
shrb
add
outsb
add
std
addb
add
lret
add
mov
or
fwait
movsl
scas
pop
mov
xchg
fst
push
push
dec
std
call
sub
pusha
jnp
repnz
cmp
or
and
sti
push
fistpll
fs
or
jae
hlt
and
mov
cmp
dec
aas
jo
mov
adc
adc
fldl
sbb
decl
mov
mov
je
adc
popf
lods
adc
aaa
daa
aam
xor
adcb
lcall
hlt
scas
mov
xchg
nop
jo
and
xchg
xor
gs
incl
xchg
mov
add
jg
and
push
outsl
or
loope
mov
cmp
push
call
test
mov
cmp
mov
adc
addr16
pop
inc
aad
sub
sbb
incl
adc
rcl
cmp
add
sbb
cmpsb
jo
add
dec
or
push
loopne
cmpsl
call
adc
jae
adc
mov
arpl
pusha
inc
mov
xor
ljmp
fldenv
and
in
mov
or
pop
adc
iret
jns,pt
add
mov
decl
inc
add
xor
adc
into
ja
add
addb
push
sub
sbb
push
repz
cld
mov
add
push
nop
inc
inc
les
loopne
movsl
bswap
inc
hlt
mov
pushf
pop
sbb
adc
lahf
and
adcl
mov
in
outsb
ret
sbb
int
xlat
inc
movsb
sbb
ffree
sar
adc
push
jmp
adc
gs
lods
push
test
jne
std
jg
sub
sbb
cmp
mov
cmp
movsl
hlt
xchg
dec
cwtl
incl
push
rclb
in
sub
cwtl
mov
enter
cmpsl
dec
xchg
nop
jb
pop
sub
sar
outsl
es
ss
lods
sti
jo
jne
stos
jg
and
mov
fistpll
jg
cmp
dec
pop
jle
adc
cwtl
int
insl
outsb
aam
sub
cld
call
add
ljmp
mov
jmp
insb
xor
xchg
ret
lret
dec
dec
arpl
or
movl
and
add
mov
xchg
incl
xchg
sbb
insl
xchg
dec
call
jnp
jp
fbld
jnp
inc
bound
shll
bound
lcall
shll
pop
mov
dec
push
dec
out
cmpsl
mov
clts
inc
and
xor
incl
sbb
jmp
pop
and
test
cld
ja
adc
cld
call
fs
lods
xchg
imul
cmpb
sub
aas
xor
or
das
push
dec
inc
imul
fbld
push
dec
dec
pop
dec
add
enter
lcall
enter
inc
add
xchg
inc
adc
xor
push
add
dec
dec
and
mov
cmp
sub
mov
nop
sbb
jb
add
cmp
pop
mov
js
jecxz
dec
pop
jns
inc
or
xor
add
xor
push
nop
pop
lods
fldl
jge
enter
mov
shrl
call
sbb
pop
adc
jmp
inc
out
inc
out
xorb
lcall
push
sbb
aaa
in
mov
inc
cmp
add
lahf
insb
xor
jp
aas
mov
jecxz
and
dec
enter
adc
cmp
pop
mulb
loop
or
push
cmpsb
sub
xchg
or
mov
ljmp
pop
mov
rcrl
imulb
or
divb
inc
adc
imull
cld
mov
dec
addr16
dec
mov
mov
out
mov
mov
hlt
sbb
fstpl
enter
idivb
mov
xchg
leave
sub
mov
fidivrl
jmp
clc
jmp
pop
jne
clc
ljmp
mov
pop
lock
xor
push
pop
push
daa
adc
incl
fcmovnbe
ds
in
jmp
sub
fdivrp
pop
inc
push
jmp
arpl
out
xchg
cs
enter
mov
dec
je
jo
add
daa
jae
js
incl
lcall
cmc
lcall
hlt
sub
add
mov
jno
pushl
fmuls
repnz
push
pop
add
inc
test
or
cmp
loope
es
ljmp
mov
or
xlat
fstps
hlt
dec
sub
and
ljmp
jg
push
ror
dec
pop
add
imul
jle
idiv
aas
or
pop
or
aam
shrb
or
sub
sub
push
aam
lds
and
xor
fdivl
iret
enter
lods
int
adc
lds
jne
jmp
push
adcb
cmp
lods
add
mov
clc
mov
lret
adc
push
jecxz
idivb
test
cmpl
sbbb
movsb
inc
dec
inc
shrb
mov
cld
ja
addb
lock
jmp
sub
jmp
inc
aaa
std
sub
xor
jle
lcall
dec
inc
cmpb
and
inc
cltd
adc
lcall
push
pop
mov
neg
xchg
mov
in
and
int
shrl
inc
into
pop
hlt
xlat
ud0
dec
incb
scas
push
or
xor
or
inc
mov
push
add
aaa
or
add
mov
push
inc
or
sti
subl
int
push
or
xchg
dec
ss
cmp
fucomip
push
push
push
jnp
es
daa
scas
daa
adc
push
or
pop
in
push
ljmp
hlt
ss
outsl
pop
rcll
inc
js
sub
decl
mov
and
outsl
and
add
sbb
int3
das
jmp
test
fcomip
xchg
sahf
rclb
insb
call
lock
mov
xor
fcomip
fsts
rorb
outsb
sub
pusha
inc
pushf
daa
fcom
nop
xchg
sub
ljmp
inc
repnz
lock
pop
xchg
sub
add
sbb
jmp
adc
add
or
insl
jne
fs
and
inc
stos
mov
in
sbb
pop
inc
mov
adc
and
sahf
push
dec
adc
inc
mov
adc
lock
jg
push
xor
gs
loop
sahf
or
pop
pop
push
cmp
dec
and
mov
pushf
stos
push
cmp
push
sbb
cli
add
jno
lret
adc
lods
dec
shr
sarl
iret
cmpsl
xchg
or
xchg
jbe
and
mov
lea
inc
and
pop
lock
jg
incl
pop
adc
pop
sbb
dec
pop
jne
pop
aas
add
or
mov
mov
lret
jne
adc
sbb
mov
sbb
dec
pop
push
popa
add
xor
das
mov
push
dec
or
jp
nop
rcrb
dec
or
dec
xorb
scas
imul
mov
decl
enter
sbb
pushf
mov
jmp
fiadds
jo
jp
jmp
testl
fdivl
push
push
mov
inc
test
add
mov
mov
pop
xchg
and
jmp
imul
test
jno
jl
adc
push
mov
adc
xchg
push
mov
shrb
add
loop
dec
ret
xchg
pushf
je
imul
push
dec
and
in
jnp
push
add
test
and
inc
in
daa
jge
sbb
leave
insl
xchg
lods
sbb
mov
inc
sub
push
fneni(8087
leave
add
es
in
dec
or
loopne
add
stos
jg
aam
or
mov
incl
cmp
cmp
adc
sub
ds
push
inc
ret
or
jge
ljmp
sub
and
pop
add
or
jb
sti
cld
cmovnp
mov
xor
loop
push
xchg
or
cmp
jbe
call
xchg
cltd
lcall
outsl
arpl
outsl
cmp
out
hlt
jge
push
imul
dec
mov
incl
cltd
xchg
and
jne
sub
sti
in
pop
jecxz
jo
mov
rol
add
adc
ja
add
mov
and
push
outsb
repnz
mov
sbb
popf
xchg
mov
and
cli
xor
bound
outsl
mov
cmc
pusha
and
andl
fs
leave
push
xchg
outsb
mov
sub
xchg
inc
push
sbb
sbb
ret
push
cmc
dec
or
xor
push
clc
dec
ja
bound
daa
dec
fcompl
add
decl
sub
imul
and
inc
jae
divl
jmp
fwait
pushl
mov
add
and
sub
fs
fwait
insl
mov
or
inc
mov
or
mov
pause
dec
mov
cmp
add
sub
lods
mov
in
mov
push
out
jne
call
call
adc
outsb
paddw
xchg
in
add
push
cmpb
mov
jg
call
dec
arpl
addr16
hlt
inc
rorb
push
cmc
es
push
or
xor
ljmp
adc
or
clc
xor
test
mov
scas
lcall
inc
cld
jecxz
in
push
cld
enter
xlat
and
stos
pop
inc
loop
cld
xor
sbb
repnz
insb
pushl
das
inc
xchg
addb
adc
roll
inc
repnz
fsubrs
push
stc
jmp
movsl
pop
rolb
push
icebp
lcall
aam
int
pop
pop
shlb
addb
cmp
fst
xor
dec
fucomp
int3
test
shlb
mov
jmp
cmp
lock
inc
insl
xor
sub
jbe
js
push
sub
mov
add
sbb
dec
sbb
push
pop
loope
push
cmpsl
stc
or
icebp
lret
mov
xchg
and
push
ljmp
xchg
rcll
and
rol
xchg
mov
mov
mov
imul
dec
test
adc
shl
out
sub
insl
and
dec
inc
bound
mov
pop
mov
aam
dec
sbb
cltd
mov
ljmp
add
mov
adc
scas
dec
cwtl
or
dec
jmp
ret
fwait
decb
cmp
pop
and
loope
and
adc
outsl
sbb
decl
movsb
pusha
mov
and
int
xchg
cli
cmpb
add
xchg
popf
mov
lds
mov
pop
xchg
xor
cmp
call
mov
aaa
xchg
or
aas
jl
mov
lods
sub
cmp
xlat
sbb
or
and
call
pop
push
push
ret
xchg
add
inc
push
aam
cmpsl
outsl
std
mov
sbb
jb
sub
xor
dec
fs
mov
jg
or
dec
sti
imul
fadd
add
out
xor
and
andl
xchg
aam
gs
sbb
das
movsb
addl
incl
cld
jmp
jge
loop
mov
mov
jns
pop
push
sbb
decl
mov
lea
ficompl
xorb
dec
mov
sbbb
pop
pop
mov
roll
jnp
and
adc
fiaddl
mov
daa
int3
mov
jbe
sub
movsb
pop
jge
ret
orl
xchg
mov
ljmp
sub
inc
mov
aas
outsl
dec
imul
and
inc
sti
lea
add
inc
sar
xor
jecxz
adc
adc
jg
cs
rcl
fcmove
es
lahf
pop
hlt
push
int3
jg
pop
or
or
inc
lea
pop
sbb
add
ljmp
and
clc
test
add
call
sbbl
or
mov
lcall
pop
rcr
mov
ljmp
aad
sbb
sub
adc
add
call
adc
jbe
inc
test
hlt
test
push
xor
add
jmp
pop
push
adc
dec
xor
enter
xchg
push
nop
xchg
fsubp
add
add
ljmp
clc
adc
pop
clc
push
sub
rcll
das
inc
add
add
adc
insl
scas
es
xchg
call
sub
test
inc
or
add
into
or
int
pop
jmp
and
pop
add
inc
mov
dec
cld
ljmp
push
push
mov
push
dec
or
clc
fsubrs
cld
fwait
push
je
int
arpl
xchg
dec
and
test
ljmp
lock
adc
lock
test
or
jno
inc
lds
pop
mov
xchg
push
cld
incl
and
sub
sbb
adc
movsb
sbb
decl
xchg
stos
adc
pop
mov
dec
out
shrb
push
lahf
pop
jg
cmpb
popa
push
fnstsw
xor
rclb
lcall
xor
mov
adc
add
sub
lcall
dec
push
arpl
push
xchg
pop
jae
or
lcall
insb
jmp
insl
pop
lret
sbb
or
roll
mov
lcall
or
push
inc
lret
mov
sub
stos
pop
add
push
sub
pop
jecxz
mov
mov
in
mov
nop
cmp
addb
scas
ljmp
pop
inc
fbld
mov
adc
xchg
fcomp
mov
incl
orl
inc
divl
mov
repz
inc
push
push
mov
pop
pop
dec
ret
push
pop
pushf
ror
sbb
pusha
hlt
call
sbb
sub
loope
cmp
add
add
dec
fs
lcall
jmp
xor
add
pop
cmp
mov
pop
mov
test
push
shrl
mov
inc
add
push
mov
int
inc
dec
outsb
dec
push
pop
imul
sbb
ret
sbbb
lcall
fsubrs
roll
push
dec
mov
insb
loopne
sbb
jg
imul
fimuls
fcompl
inc
dec
mov
jl
loop
jo
ret
movsb
repz
xchg
sub
andl
xor
hlt
inc
shl
push
lods
and
lods
dec
and
outsl
pop
pusha
fisttps
sti
inc
jb
mov
or
cmpsl
sub
stos
incl
mov
rolb
or
add
int
aad
fildl
adc
ljmp
daa
add
or
add
mov
jns
in
cmp
cmp
sbb
jg
mov
popf
add
add
je
inc
fdivl
jno
imul
sub
sub
ljmp
add
add
lea
inc
xchg
test
popa
out
ret
jp
aam
es
aam
dec
adc
lcall
and
lods
sbb
mov
test
std
fdivs
popa
dec
add
xor
sub
hlt
lret
rclb
stos
fcomip
decl
out
or
lret
jle
mov
cmp
inc
and
pushl
mov
dec
cmp
and
es
pop
sbb
lods
push
mov
and
jg
dec
aam
push
lcall
sub
into
cwtl
or
inc
es
sar
call
sub
push
or
push
adc
aam
mov
add
es
mov
lahf
push
arpl
add
mov
mov
xchg
mov
sbb
imul
pop
test
out
xchg
add
xchg
adc
out
push
mov
es
jb
mov
cmp
jo
fiaddl
mov
lods
loopne
pop
fs
outsl
mov
fs
adc
push
ljmp
and
add
shl
or
pop
das
pushl
add
mov
dec
push
xchg
cli
cmp
mov
pop
xchg
xlat
test
icebp
dec
mov
mov
dec
dec
inc
insl
in
cld
mov
sub
insl
adc
jo
push
xchg
add
daa
add
xchg
icebp
mov
cs
and
gs
aas
lods
adc
decl
clc
pop
in
leave
scas
or
xchg
mov
push
clc
inc
aas
imul
roll
jmp
hlt
sub
ja
mov
aas
pop
add
mov
js
sarb
push
mov
sub
hlt
iret
popf
lods
sahf
push
adc
rcrb
dec
cmp
js
add
dec
nop
shlb
mov
imul
clc
jmp
push
cld
lock
ficoms
push
ljmp
addl
cmpsl
cli
les
loopne
pop
in
dec
and
repz
pop
or
cld
or
mov
xorb
aaa
mov
jg
fisubrl
push
das
adc
ss
mov
or
cmpsb
push
jmp
ret
lret
cli
mov
xor
fwait
dec
fstpl
push
inc
xor
faddl
daa
fdivs
and
aaa
push
std
cvtps2pi
roll
outsl
or
loop
xor
gs
vpmacssww
push
adc
xchg
or
pop
cmp
jecxz
ret
outsb
cmp
nop
sbb
cli
push
lcall
adc
cld
ljmp
adc
fistpl
in
mov
and
cmc
sub
out
mov
push
ret
sub
push
dec
lret
cltd
xchg
jnp
fbld
cs
adc
add
adc
sbbb
mov
and
out
or
jmp
push
and
add
add
repz
or
sub
push
mov
cmp
push
cmp
sub
data16
stos
inc
lock
sub
cmp
pop
hlt
ljmp
loopne
sbb
pop
aam
dec
xor
xor
std
das
push
sbb
add
fwait
rolb
ret
ljmp
cli
inc
sbb
add
pop
test
jmp
mov
xchg
cmpb
dec
sti
xchg
fcoml
sbb
pushl
dec
sbb
js
mov
push
push
dec
jb
sbb
add
loopne
add
push
call
cltd
nop
aad
insl
sub
daa
dec
push
inc
add
es
adc
and
outsb
jno
ljmp
aas
ret
call
cli
push
cli
mov
xchg
jg
pop
cmp
ret
popa
inc
or
push
mov
inc
jb
dec
mov
nop
cmpsb
mov
or
mov
push
and
stc
mov
add
lcall
push
or
loop
cmc
cmp
pop
cmc
lcall
ja
cmpsl
xchg
add
lods
mov
mov
pop
pop
mov
addl
push
pop
nop
mov
mov
xchg
test
push
adc
dec
xchg
add
sahf
mov
outsl
add
dec
mov
lock
cmp
call
or
pop
pop
cmp
sbb
adc
scas
sbb
cmp
or
mov
add
xchg
fsubs
mov
push
out
cli
push
cmpl
and
pusha
jo
dec
jecxz
insl
mov
dec
add
ljmp
jnp
pop
nop
fnstcw
or
pusha
insl
sbb
in
xor
mov
inc
out
popa
loope
ljmp
jb
lds
mov
cmp
mov
add
adc
mov
push
sub
imul
andl
psubq
lcall
or
loope
mov
adc
je
sbb
jecxz
out
clc
inc
push
jl
cmpb
xor
inc
in
mov
or
pushl
shl
and
or
movsb
lods
sub
dec
addr16
es
cli
mov
push
mov
decl
cwtl
pop
cmp
sbbb
jnp
sbb
call
add
add
xchg
sbbl
fmul
mov
pop
fcomp
pushl
nop
mov
addr16
ret
or
cmc
pop
sub
orb
xchg
pop
and
outsb
lock
xchg
jbe
xchg
jae
adc
and
mov
or
dec
xlat
adcb
aaa
std
and
ja
pop
pop
jle
xor
incl
dec
sbb
or
sbb
adc
incb
cld
sub
rcll
add
cs
jmp
add
test
sbb
pop
lods
push
mov
adc
fiadds
push
mov
add
mov
outsb
test
xchg
add
sub
jecxz
fidivrl
jg
pushl
adc
mov
cmp
jle
enter
push
pop
cmc
fdivrp
or
and
mov
dec
movsb
out
push
push
sub
and
cs
add
push
adc
push
loopne
jae
mov
scas
mov
scas
push
add
imul
xor
call
push
mov
sbb
cmpl
outsb
lcall
add
xchg
fildl
loopne
add
and
in
repz
mov
jb
pop
data16
xchg
jg
and
decl
jp
adc
aaa
lock
ljmp
imulb
push
repnz
push
push
push
push
loopne
add
aaa
cwtl
adcb
cs
jg
ds
stc
mov
jno
lods
push
jb
adc
popa
call
inc
sarb
ret
lock
pop
adc
pop
outsl
and
cld
mov
sbb
add
ficoms
push
or
das
clc
fbstp
out
rcrl
and
or
lcall
ja
popf
movsb
je
jne
gs
decl
pmulhw
add
xchg
sub
sbb
xchg
ret
push
into
lea
dec
sbb
xor
dec
or
rclb
loop
xor
dec
daa
and
ret
insl
lss
jl
mov
pushl
inc
adc
lock
cmp
lahf
ss
push
pop
fmul
push
mov
es
pushl
push
xlat
pop
xchg
xchg
inc
dec
sti
in
inc
popa
nop
lea
xorb
or
dec
jge
out
mov
jmp
pop
jmp
aad
or
mov
push
sbb
es
ret
jg
lods
stos
push
xchg
pusha
xchg
roll
cwtl
fcoml
ja
les
add
fldt
xor
fcomps
inc
pop
sub
sar
lcall
adc
mov
sub
xchg
scas
dec
pop
xor
daa
mov
shr
adc
js
inc
outsb
mov
ljmp
movsb
orl
cmpl
jg
sub
mov
and
dec
test
add
and
dec
mov
sbb
je
or
stc
nop
scas
sbb
or
xchg
add
clc
inc
or
decl
fildl
call
push
jg
repz
or
pusha
daa
push
add
stos
lea
out
enter
ljmp
push
int
and
add
pop
push
in
jno
loope
lock
lock
sarb
incl
inc
cmp
push
adc
divb
incl
rcrb
jle
or
xor
mov
push
sbb
cmp
mov
shrl
sub
lock
mov
push
ficomps
mov
xor
enter
adc
add
mov
adc
cmp
cwtl
push
test
loop
mov
jmp
or
ljmp
inc
rolb
cmp
push
movsb
push
and
fcomps
pop
and
int3
xchg
lret
push
mov
stos
pop
inc
jl
xor
add
rorl
mov
inc
scas
cmp
loopne
add
add
push
ja
das
test
push
and
stos
adc
adc
pushl
out
lods
pop
adc
xor
jl
xor
call
insb
jg
cmp
jmp
sbb
sub
faddl
or
incl
dec
dec
xchg
test
jbe
inc
dec
outsb
xchg
and
out
xor
mov
fsubl
mov
mov
add
add
mov
pushl
in
mov
jo
or
dec
in
pushf
mov
add
adc
pop
inc
icebp
leave
xor
adc
and
push
sbb
jns
push
adc
adcb
imul
mov
xchg
mov
hlt
add
cmp
pushf
add
scas
cli
pusha
mov
dec
or
sbb
sti
mov
push
jge
dec
pop
cmc
fildll
andl
xor
iret
jb
lcall
jp
lock
test
inc
lods
jo
bound
bound
incl
ss
sahf
pop
sbb
xchg
imul
imul
cmpsl
and
add
jb
decl
mov
add
daa
pop
daa
in
test
add
mov
push
or
or
push
jp
or
lret
jg
and
sub
mov
inc
arpl
jns
insb
add
lcall
add
movsb
rol
jns
or
paddd
inc
xor
inc
enter
jg
pop
stos
pop
xor
test
pop
mov
sbb
add
pushl
dec
push
pop
ss
or
and
inc
jg
mov
add
add
push
test
pop
inc
js
rorb
ljmp
shrl
cmp
or
push
repnz
adc
fwait
sub
xchg
mov
ljmp
push
cmpsb
sbb
test
adc
push
pop
pusha
adc
jmp
shlb
pop
gs
dec
int3
jp
jl
and
nop
cltd
or
add
ja
cmpb
dec
sub
and
mov
sbb
call
inc
ud0
mov
or
ret
pop
xchg
hlt
enter
add
fildl
jbe
decl
and
dec
test
jno
sub
pop
xchg
orl
dec
repz
push
inc
inc
mov
add
pop
adc
rcrb
sub
or
dec
dec
shl
pop
mov
stos
pop
jo
je
daa
push
pop
or
dec
jns
add
jg
xor
inc
mov
xor
jnp
pusha
icebp
fists
pusha
int
pushl
rcr
inc
sub
push
scas
cmp
imul
lret
aad
mov
mov
or
and
outsl
inc
xor
andb
aam
push
mov
mov
orb
xor
fcomip
cmp
mov
inc
fisubs
add
push
add
sbb
ljmp
pop
mull
jo
add
and
icebp
inc
pop
add
mov
in
pushl
dec
xchg
mov
mov
or
mov
popa
bound
sub
cmpsl
pusha
popa
pop
xor
pop
pop
nop
mov
incl
sbb
xchg
dec
movsl
nop
push
enter
movsb
pusha
notb
cwtl
inc
cli
ja
jno
pop
inc
je
add
dec
xorl
loopne
aas
decb
sub
fildl
jmp
jl
cmp
and
inc
dec
inc
fmuls
mov
call
jmp
xchg
xchg
push
cmc
jl
jb
rolb
iret
and
adc
lret
cmpsb
add
and
bound
stos
je
mov
cli
pop
jle
sbb
pushl
orl
adc
and
addb
rorl
sbb
outsb
cli
cld
or
fwait
jo
outsb
push
clc
aas
add
popa
inc
cmpsl
movsl
ljmp
adc
enter
sahf
add
stos
push
jecxz
pop
inc
adc
decl
into
movsl
pop
icebp
rcr
in
call
mov
repnz
and
popa
hlt
and
stc
imul
or
xchg
push
inc
or
cmpsl
shlb
notb
jle
pop
pop
sub
cmp
rcrl
insb
mov
dec
or
jae
leave
sub
push
cmp
es
ror
mov
sub
and
ret
adc
xorb
lcall
out
inc
mov
out
aad
dec
pop
test
add
std
outsl
call
add
aam
lock
out
mov
addr16
fs
push
dec
mov
incl
push
js
call
imul
and
cwtl
aam
pop
xchg
push
sub
lahf
jg
add
cmp
sbb
sbb
lcall
mov
mov
inc
scas
dec
hlt
push
xor
rcrb
cmc
shl
ja
les
add
call
pop
mov
or
loop
das
rclb
add
pop
adc
add
push
jmp
xchg
imul
sub
andl
test
arpl
or
mov
test
jge
mov
fbld
sbb
jmp
je
shlb
and
call
mov
scas
sbb
cmp
jno
test
pusha
shrb
xor
xchg
inc
jmp
pop
mov
push
add
aad
dec
pop
imul
cli
incl
add
hlt
or
lret
movsl
lock
insb
and
jge
fidivs
std
dec
lods
leave
jmp
adc
xchg
ja
sbb
dec
popf
ljmp
pop
push
pusha
push
add
ds
mov
pop
or
dec
bndstx
add
pushl
xchg
sub
pop
add
adc
loopne
mov
std
push
xchg
into
aad
ljmp
pop
xor
jmp
insl
push
daa
hlt
push
lea
std
jg
push
lcall
or
es
nop
loopne
mov
xchg
fistpl
ljmp
cmp
mov
or
pop
out
adc
pusha
data16
sbb
into
stos
popa
rcll
adcb
adc
sbb
sub
inc
inc
ret
push
cmp
int3
sub
test
sub
ss
sahf
fs
clc
pushl
pop
and
insb
or
data16
jb
fwait
test
shld
sbb
sub
data16
insl
icebp
add
shr
sub
or
arpl
int3
daa
or
mov
ss
loopne
adc
nop
and
xchg
lods
mov
fimull
incl
les
sbb
in
and
push
in
nop
xor
sbb
inc
call
cmp
or
out
cld
cmpl
push
mov
mov
sub
aam
aas
repz
or
lcall
daa
and
sub
or
mov
nop
adcl
call
addb
and
xor
sbb
incl
mov
push
aam
cmp
add
or
fnstenv
sbb
and
ss
repnz
push
xchg
aas
dec
test
pop
pushl
or
cmp
mov
add
jno
adc
and
std
call
fadds
cmc
insb
cmp
orl
pop
jo
and
push
lods
lea
loopne
pop
loopne
fisubrs
or
loop
adc
adc
push
ljmp
test
outsb
outsb
push
or
sbb
ljmp
popa
fildl
jb
mov
ret
xor
stc
dec
ret
push
xchg
addl
test
inc
aad
call
xor
mov
aad
mov
pushl
xorl
jne
add
test
xor
ud2
push
add
movsb
sahf
lret
jmp
inc
lds
jmp
clc
ja
xor
jg
or
into
mov
repnz
sbb
repnz
in
add
insl
pop
mov
or
push
mov
ja
push
ljmp
sub
adc
mull
add
push
decl
pop
mov
out
clc
ss
add
sub
add
imul
inc
lcall
and
jo
call
lcall
pop
mov
ret
daa
dec
popa
call
clc
roll
lret
sbb
sbb
mov
push
pop
cmp
cmp
pusha
cmp
rorb
fidivrs
sarb
jo
aaa
mov
pop
hlt
decl
xchg
push
cmpsb
movsb
daa
jmp
ret
push
add
cmp
push
cld
ljmp
sub
in
cwtl
rolb
mov
lahf
pop
clc
or
xor
insl
add
push
and
sbb
jno
adc
push
mov
lcall
outsl
xor
pop
jle
sub
sbb
cs
movsb
mov
fisubrs
sub
sbb
lret
ret
js
add
jp
sub
call
jns
rcr
dec
pop
xor
adc
dec
fimuls
or
cld
fcomip
sub
loopne
cmp
movb
fnsave
out
mov
dec
imul
and
or
incl
ljmp
dec
cmpps
lods
and
adc
and
xchg
mov
jg
mov
repnz
add
jne
ret
fiaddl
mov
cld
push
out
dec
cmp
daa
dec
rorb
push
fs
sbb
push
jne
add
jnp
inc
adc
inc
jmp
sub
or
cmp
mov
lret
adc
lahf
cmp
pop
int3
jmp
ret
push
rorb
or
inc
jne
inc
nop
adc
mov
rcll
cli
ljmp
xchg
mov
add
and
add
pushl
pop
shll
test
pop
ret
shll
dec
out
andb
loopne
dec
es
mov
add
add
clc
pushl
xchg
jnp
mov
pop
inc
lcall
pop
mov
imul
mov
xchg
sub
push
ljmp
pop
or
cs
sub
xchg
xor
repnz
and
loope
mov
scas
push
adc
dec
jg
mov
push
xor
jmp
mov
jno
mov
shlb
dec
xchg
mov
mov
repnz
imul
inc
addb
push
jle
dec
push
jg
int3
leave
xchg
dec
sbb
and
sbb
adc
mov
or
xchg
incl
fcom
mov
addr16
xor
jne
jo
xchg
mov
ss
push
andb
insb
inc
das
addr16
lahf
and
cli
pop
enter
es
mov
cs
xchg
movsb
jg
dec
sbb
sbb
adc
lods
jge
add
mov
cmp
mov
cmp
mov
adc
cld
pop
nop
ljmp
bound
mov
xor
and
push
adc
xchg
cltd
movl
incl
mov
and
jmp
lods
test
pop
rolb
mov
call
jg
pusha
dec
mov
xchg
into
sti
push
sbb
inc
daa
mov
and
sub
cmp
mov
push
mov
call
inc
add
add
stos
lea
sub
or
or
add
adc
dec
jmp
shlb
or
loopne
lcall
cmc
xchg
mov
xor
or
or
outsb
test
aad
in
movsb
incl
and
mov
or
jmp
sahf
add
fs
xchg
xchg
rcrb
incl
shl
ret
inc
in
cli
adc
push
and
and
or
push
sti
sbb
jecxz
cmc
xchg
lcall
fisttps
mov
nop
push
call
nop
aam
sub
sahf
or
xchg
cmp
dec
clc
in
push
inc
sub
mov
add
cmp
ret
sub
xor
fwait
or
rcr
sahf
mov
imul
decl
hlt
lods
ret
ret
mov
dec
popf
sti
push
adc
dec
imulb
and
adc
int
scas
clc
decl
ret
pop
shrb
sub
and
mov
incl
and
xchg
add
xchg
jbe
test
dec
out
sbb
clc
sub
test
gs
fistpll
imul
aam
sbb
and
negl
cmp
rorb
lcall
mov
pop
add
loope
inc
jl
cs
mov
shr
ss
and
and
sbb
push
pop
xchg
int3
lahf
xor
aad
mov
jno
fcomip
mov
sti
push
inc
pop
daa
adc
test
imul
xor
pushl
xor
sub
daa
popf
mov
jmp
cmp
sbb
mov
stos
sbb
pop
mov
pop
lods
lcall
mov
cmpsl
and
daa
loopne
ljmp
cmp
lcall
gs
push
shll
rcl
and
aaa
std
rcrb
dec
push
dec
fisubrl
sbb
jne
imul
jg
enter
cmpsb
push
pop
inc
idiv
fdivl
jns
mov
jmp
pop
sub
test
jl
rclb
or
sbb
iret
xchg
fcoml
aam
xchg
jne
cmp
lods
xchg
dec
mov
sub
dec
pop
push
or
mov
test
movsb
pushl
pop
and
leave
xlat
dec
add
incb
cld
jg
mov
out
inc
ja
jge
ds
add
cmp
mov
int3
shll
pop
mov
sahf
loop
adc
aaa
dec
lahf
adc
iret
aas
lahf
add
into
out
jg
loop
fwait
andl
jle
inc
inc
xchg
adc
fidivl
or
add
add
add
xor
fcomip
ljmp
comiss
and
or
or
adc
push
idiv
decl
sbb
stc
ljmp
mov
repz
loope
add
popf
adc
int3
dec
adc
jmp
and
xchg
add
out
xchg
pop
leave
dec
in
adc
xor
inc
xchg
mov
pop
lcall
jno
popa
popf
test
cmp
add
dec
jp
add
nop
ret
xor
dec
cmp
xchg
adc
inc
or
aam
stos
aad
push
push
pop
pusha
xlat
fst
fldlg2
xor
je
pop
decl
sub
mov
ret
int3
inc
outsl
addl
dec
mov
ljmp
arpl
repz
push
test
pusha
or
sub
or
and
scas
mov
pop
push
mov
das
pop
stc
jg
add
cmpb
icebp
adc
sar
dec
sbbl
shrl
pushf
push
or
ret
mov
push
sbb
ljmp
enter
jns
xor
add
jmp
mov
jmp
push
clc
cmp
mov
or
or
test
and
das
dec
adc
mov
cmc
in
adc
jo
inc
sub
dec
mov
ret
sub
out
mov
pop
push
aam
xlat
outsb
loopne
jg
cmp
push
inc
loopne
add
sti
cmp
fcomip
lcall
jg
in
push
sub
je
mov
mov
xchg
jne
not
rclb
sti
cwtl
sub
cmp
loopne
ret
mov
loope
outsb
mov
mov
mov
adc
imulb
jl
adcl
mov
loope
std
cmp
xor
fimuls
adc
xchg
call
cs
pushf
movsl
aaa
js
adcb
lea
mov
push
jp
mov
lock
jnp
xchg
ljmp
xchg
dec
pop
or
addl
mov
mov
out
arpl
fcomip
jmp
dec
add
add
sbb
loop
sub
pop
adc
sub
sub
push
pushl
sbb
mov
or
add
ds
or
test
popa
xor
mov
inc
lcall
cmp
repnz
push
and
addl
fiadds
jp
jbe
cld
jg
add
sbb
jmp
psrld
xchg
jg
and
or
imul
add
add
jbe
mov
xor
xchg
fs
xchg
movsb
dec
xor
data16
push
ljmp
je
add
or
add
repnz
xchg
adc
cmp
mov
jo
cmp
or
mov
sbb
sbb
pop
ljmp
rorb
lods
dec
imul
inc
adc
lods
mov
push
and
incl
push
inc
xchg
mov
mov
pop
pop
add
pop
movsl
cltd
lods
movsb
lock
in
loopne
mov
in
mov
sahf
dec
or
clc
clc
lock
out
clc
or
cmp
inc
outsb
add
jne
test
rcr
int3
fcoms
xchg
enter
push
shlb
out
incl
jl
in
adc
pop
mov
add
cmpsb
push
mov
xor
dec
mov
rol
mov
add
cmpsb
jmp
mov
incl
loope
dec
fwait
cmp
fdivl
mov
cmpsl
dec
inc
cwtl
or
inc
bnd
int
ss
call
or
inc
mov
daa
imul
and
add
sub
add
adc
add
xchg
mov
or
mov
mov
mov
jae
mov
les
cwtl
add
pushl
rcll
lcall
jbe
fmull
into
sbbb
push
fmull
scas
adc
loopne
out
cmpsb
addl
inc
cs
jle
out
xchg
fcomip
dec
mul
push
and
jle
adc
sub
add
pop
int3
add
lret
or
add
clc
cld
cs
pop
mov
fdivs
or
add
dec
lcall
es
jmp
stos
push
lcall
call
mov
mov
sbb
fsubrl
sbb
and
call
mov
xchg
cmpsb
int3
or
dec
fadds
fdivrs
enter
aam
rorl
xchg
jg
les
lods
mov
xor
push
hlt
jl
add
rclb
and
push
and
inc
add
mov
jg
enter
mov
cmp
add
cmp
test
les
je
or
decl
movl
push
test
jge
aad
pop
dec
int3
hlt
adcb
bswap
jg
das
rcrb
pop
pop
insb
pop
fcmovnbe
pop
add
insl
mov
fwait
sub
fcompl
inc
push
insb
xchg
int3
adc
cmp
push
les
test
add
ljmp
in
call
fidivs
rcrb
push
pop
icebp
pop
les
cmp
arpl
rcrb
mov
aaa
add
imul
dec
incl
sub
push
jmp
loopne
jne
std
hlt
adc
enter
push
ljmp
sub
ret
shll
in
insb
mov
test
add
incl
or
sub
repz
int3
sub
push
cmpsb
js
lcall
add
aad
shlb
sub
call
ljmp
rcr
shl
add
or
cltd
pop
out
push
mov
cmp
pushl
cmpsb
sarb
test
test
add
and
mov
cmp
rcr
adc
mov
jmp
sbb
nop
test
sbb
nop
lods
negl
ljmp
clc
test
aas
cltd
icebp
mov
sbb
push
aam
dec
cli
call
int
push
lret
cmpb
jg
call
scas
js
fisubrl
mov
ret
mov
neg
push
push
cmp
push
adc
add
dec
call
loop
add
push
add
enter
mov
mov
dec
push
mov
je
rcrb
shlb
fwait
lods
decl
es
pushl
inc
xchg
xchg
and
mov
inc
aam
cmpsb
je
rcr
pop
fmuls
std
jmp
scas
pop
lea
or
xchg
dec
and
data16
push
repz
in
or
pusha
pop
jmp
arpl
push
and
and
adcb
sub
sub
adc
mov
test
sti
test
clc
or
std
out
lock
cmpsl
repnz
shr
adc
sbb
pop
xchg
lret
add
mov
xchg
arpl
loopne
ljmp
shll
popf
cli
nop
pop
mov
loope
or
and
divb
push
or
or
lcall
adc
fxtract
jns
nop
or
sbb
push
sbb
loope
lcall
jg
les
inc
leave
popa
xor
push
daa
aam
inc
movsb
mov
mov
xchg
jle
in
decl
lea
mov
les
aam
mov
push
sub
sub
jmp
add
aaa
or
pop
leave
pop
ja
dec
add
add
jno
dec
fisubrl
cmp
pushl
clc
mov
push
int
and
and
repnz
fadds
dec
add
jmp
out
mov
js
or
and
adc
xor
cld
mov
mov
inc
arpl
and
sbb
inc
or
or
clc
mov
fwait
cmp
idivl
aas
rcrl
mov
or
lcall
xchg
add
xchg
xchg
cmp
sar
ljmp
mov
outsb
out
inc
nop
jge
adc
adc
or
out
xchg
test
mov
mov
xchg
xchg
pop
mov
xor
addl
test
pop
testb
movups
jg
fcomip
push
add
fadds
loop
or
mov
stos
cld
inc
fs
jg
jmp
ss
pop
sarl
into
add
xchg
xchg
xor
add
push
es
mov
enter
dec
cmp
sbb
adc
and
fs
mov
pop
decl
call
or
mov
outsb
out
cltd
dec
pop
out
je
aad
mov
push
sahf
inc
or
jg
daa
test
jg
add
and
lret
shlb
cmp
mov
jns
pushf
dec
add
xor
pop
stos
sbb
shrb
mov
inc
outsb
ljmp
cli
inc
push
push
call
push
pop
lock
sbb
into
shrb
pushl
std
pop
sbb
mov
mov
push
mov
dec
ja
or
pop
mov
scas
movsb
incb
shl
and
clc
and
pop
mov
add
incl
cld
push
adc
push
leave
inc
mov
mov
xchg
adcl
sbb
jle
loop
mov
mov
cli
or
cmp
mov
xchg
inc
lret
adc
add
inc
imull
mov
sub
dec
rclb
shrb
gs
repnz
push
mov
call
cmp
xchg
mov
add
add
sub
mov
push
call
out
out
jo
sbbb
push
sub
lcall
mov
xor
ja
push
std
and
gs
adc
stc
pop
daa
xor
cld
test
dec
adc
aas
dec
jecxz
pusha
mov
or
jae
push
mov
rorb
mov
ret
mov
lods
add
decl
push
mov
or
push
inc
adc
or
int3
xchg
outsl
adc
push
add
mov
mov
decl
arpl
xor
push
push
mov
lahf
dec
or
pop
push
mov
xor
add
lods
mov
ficoml
enter
sar
or
out
subl
addr16
adc
sbb
add
or
pushl
or
or
adc
jno
inc
adc
lcall
decl
push
inc
int3
sub
mov
xor
mov
popa
lds
lock
sbb
popl
jbe
sub
lcall
inc
jg
in
push
add
push
push
sahf
out
jp
push
adc
pop
sub
add
push
mov
sub
decl
pop
movsl
push
or
dec
or
mov
pop
jg
and
out
cmovge
xor
xlat
mov
dec
and
ret
xor
pushl
pop
and
push
or
lret
addl
mov
push
push
mov
lea
fcoml
add
and
mov
dec
mov
test
push
lock
mov
pop
xor
popa
fcmovb
rorl
out
mov
add
aam
es
data16
scas
dec
push
rcr
std
add
das
add
push
int3
add
das
dec
cmc
pop
mov
xchg
sbb
loopne
fidivrl
xchg
dec
and
cmp
or
daa
into
into
push
xor
clc
insl
dec
add
add
clc
jge
cmp
sbb
lahf
or
jl
clc
out
test
outsb
dec
mov
out
push
jno
mov
xor
adc
mov
mov
mov
mov
adc
shll
rolb
pop
cmp
fistpl
pushf
inc
in
add
and
dec
cmpb
cld
mov
ja
pop
rcrb
ss
push
cmpb
ljmp
lcall
push
add
insb
call
sbb
mov
push
popa
sti
ljmp
fdivrs
mov
inc
pop
lret
cmp
mov
call
outsb
adc
jmp
adcb
push
or
xor
ss
out
sbb
imul
call
loopne
fst
dec
lret
cmpsb
in
xor
mov
daa
iret
xchg
xchg
nop
add
clc
lcall
add
hlt
cli
ret
out
lock
push
inc
cld
lods
in
xchg
mov
cli
dec
jbe
or
incl
xchg
outsl
sbb
insb
jmp
dec
dec
pop
pop
add
mov
push
pushf
jns
in
and
jmp
cmp
std
jo
adc
push
ds
sub
xorl
add
mov
cld
js
sub
add
jg
xchg
cmpsb
lock
xchg
rorb
sbb
int
lock
arpl
sbb
std
cmp
and
mov
mov
inc
ljmp
loop
pop
mov
pop
jl
dec
xor
jae
add
inc
imul
xor
mov
jmp
lret
push
add
outsb
jo
cli
push
xor
gs
adc
ljmp
cmp
sub
push
cmpb
and
js
jl
jg
xchg
inc
mov
push
cmpb
sbb
cld
js
loop
and
lret
mov
decl
pop
mov
fwait
and
cmp
push
jo
les
je
add
pushl
push
pop
in
xchg
add
ljmp
mov
pop
mov
ljmp
loopne
scas
mov
xorb
je
outsb
outsl
push
inc
fildl
and
incb
frstor
xchg
es
popa
and
out
add
je
or
and
lock
or
pop
and
add
call
pop
repnz
je
xor
add
xor
lret
cmp
xchg
jo
xchg
lcall
xchg
js
cmp
nop
jno
adc
addps
pusha
cld
pop
or
add
push
insl
adc
push
and
add
or
lcall
inc
pop
ret
iret
fnsetpm(287
add
stos
aaa
test
sar
lcall
or
cmpl
mov
xor
mov
jg
or
cld
push
or
lahf
push
mov
inc
push
jl
xchg
inc
adc
cld
das
jb
lds
sbb
inc
scas
sbb
incl
mov
in
popa
add
pop
mov
push
ret
testb
nop
cs
add
dec
add
incl
insb
inc
xor
push
xor
fsts
dec
push
ljmp
fmuls
or
stos
inc
xchg
sub
leave
jg
out
popl
add
jp
and
cld
lods
mov
shlb
mov
jmp
dec
adc
leave
jmp
mov
xchg
mov
mov
aaa
add
int3
dec
add
ret
scas
inc
push
sbb
nop
imul
mov
pop
ljmp
stos
lods
stos
xorb
ficompl
or
pusha
push
jp
jnp
mov
push
adc
push
adc
nop
xlat
push
test
jo
roll
jo
mov
dec
and
leave
inc
cmpsl
dec
inc
std
inc
sub
insl
xchg
dec
inc
repz
test
call
loopne
jl
insb
sbb
jbe
jmp
adc
subl
sub
outsl
decl
and
test
stos
mov
shl
lahf
push
movsb
clc
aas
xchg
mov
ljmp
cmp
imul
fsubrl
mov
popa
lds
cmpsb
rclb
xchg
lock
incl
nop
adc
aad
aaa
movb
dec
push
mov
and
sub
or
jo
and
xor
mov
add
mov
mov
inc
pop
mov
cld
dec
cmpsl
adc
les
hlt
add
daa
or
orb
leave
iret
sarl
into
sub
xchg
inc
dec
add
stos
push
cmc
pop
aad
sub
push
mov
mov
mov
fildll
movsb
cmp
mov
cmpsb
mov
mov
mov
push
inc
and
addl
jmp
aad
push
movsb
xlat
cmc
and
ret
and
das
cmp
or
lcall
add
imul
sbb
and
mov
adc
arpl
push
lock
clc
push
pop
loope
cltd
push
orl
push
push
test
cs
lahf
movsb
incl
mov
cwtl
loop
inc
fadds
nop
add
pushl
and
adc
clc
mov
cmp
pop
and
adc
shrb
call
imull
xor
xchg
je
and
inc
adc
add
push
adc
jg
jmp
outsl
push
push
loopne
imul
in
pop
test
pusha
xor
sub
push
fiaddl
xchg
mov
sbb
decl
fadds
mov
jecxz
lds
fdiv
andl
push
cmp
lds
lock
aas
adc
into
mov
fdiv
pushl
and
or
bound
xchg
jnp
xchg
cmp
mov
or
and
iret
pop
push
xor
dec
incl
int3
test
aaa
pop
imul
sub
sbb
adc
adc
in
jle
lcall
adc
push
loope
sbb
push
in
stc
enter
cltd
int
or
mov
xchg
and
pop
cmc
iret
pop
sbb
dec
or
fldenv
call
cmpsl
sub
enter
stc
sub
fiadds
inc
mov
mov
outsb
jns
and
test
pop
sbb
decl
lock
aad
push
push
stc
clc
or
fs
test
cld
lea
xor
test
xchg
ret
in
mov
pop
repnz
mov
call
sub
popa
lsl
or
mov
inc
stos
xchg
arpl
fs
mov
add
incl
mov
popa
out
mov
bound
or
mov
cmp
cmp
inc
adc
data16
lahf
test
xlat
pop
xor
and
sbb
adc
ficoml
out
mov
add
inc
add
xor
ljmp
xor
mov
cltd
jg
add
push
cli
push
jmp
add
mov
xchg
mov
clc
sub
lret
xlat
out
jno
inc
mov
lcall
or
or
ja
push
mov
fs
or
inc
pop
pushf
js
push
out
push
mov
ljmp
push
iret
pop
lea
iret
call
inc
les
adcb
lea
mov
jmp
sub
sbb
pop
ret
ret
push
nop
jae
call
repz
sub
push
stos
or
add
lds
mov
jne
jb
call
cmp
incl
pop
add
pusha
loope
mov
addr16
lret
inc
test
psubsw
ja
clc
sub
rolb
mulb
aaa
fisttps
or
lret
sti
pop
ret
loopne
ja
add
mov
cs
adc
adcb
cmp
inc
fs
test
jl
sti
add
push
icebp
or
test
orb
lcall
push
mov
xchg
adcb
jp
push
rcll
pop
icebp
incl
pusha
mov
push
inc
inc
or
push
ret
pmaxsw
addl
hlt
push
jo
add
ret
sub
and
push
mov
lock
mov
in
pushf
imul
or
sbb
inc
adc
mov
xlat
jo
sbb
mov
push
out
sub
add
addl
daa
mov
test
lcall
pusha
pop
adcb
add
idivl
xchg
or
js
xchg
js
push
cwtl
pusha
fildll
ret
int3
mov
sbb
movsb
xchg
cmp
jg
mov
aam
outsl
mov
xchg
aad
mov
fisubrl
adc
jmp
call
inc
arpl
inc
decl
rorb
dec
loopne
call
inc
outsl
xchg
icebp
xor
or
rolb
clc
cmp
and
add
in
clc
shlb
subb
in
movsb
adc
dec
inc
dec
push
dec
leave
loop
int
stos
cmp
lcall
inc
adc
stc
ja
push
adc
inc
loop
or
dec
adc
js
add
or
lcall
or
aad
pop
aas
pop
adc
push
mov
jo
add
or
jmp
cmp
movsb
in
cmp
mov
daa
ja
dec
xchg
pop
pop
shl
lcall
fdecstp
mov
into
mov
xchg
add
in
push
sbb
incl
push
inc
inc
sub
ss
inc
shlb
sub
test
adc
or
es
loopne
fcompl
ljmp
cli
lcall
push
mov
push
scas
xor
add
pop
jno
add
ljmp
pop
jg
imul
in
and
xchg
insl
pop
mov
push
add
add
xchg
pusha
add
add
aas
inc
ret
call
cmp
jnp
adc
popa
adc
pop
push
xchg
cmp
jl
or
sbb
push
fdivrl
sbb
jg
idivb
addl
and
sub
lock
sbb
cmp
scas
ret
inc
pushl
sbbl
inc
adc
jmp
push
cmp
fiadds
je
addl
add
inc
add
sub
push
or
xchg
pop
sbb
ss
jmp
call
mov
xchg
test
popa
xor
cmp
mov
mov
js
lds
daa
fidivrs
xchg
aaa
pop
xchg
and
sub
ljmp
iret
adc
hlt
enter
mov
add
add
mov
xchg
add
and
dec
aam
mov
ljmp
clc
xlat
dec
sub
push
shll
lcall
enter
sbb
dec
xchg
add
pop
inc
xor
jg
or
mov
rclb
adc
dec
inc
xchg
adc
and
and
and
sbbb
jl
inc
in
sbb
aam
incl
imulb
in
adc
cmp
sbb
or
cmp
mov
push
rolb
mov
mov
jle
imul
add
push
sbb
mov
sub
push
roll
nop
adc
xchg
xchg
mov
lds
test
pop
and
incl
test
stc
aam
push
inc
insl
das
in
dec
add
scas
in
lea
mov
mov
outsb
adc
in
and
lock
repz
lds
icebp
ficompl
lcall
loopne
jg
imul
mov
mov
fdivrl
cwtl
xchg
daa
unpcklps
mov
popa
sub
xor
fsubs
int3
aaa
sar
pushl
lock
aaa
ds
sbb
lock
push
leave
ret
cmp
pop
in
rcll
notl
add
push
mov
and
ds
jle
ret
enter
icebp
inc
addr16
jmp
xchg
mov
imulb
pop
mov
lcall
cmc
sbbb
push
lea
mov
lea
jg
ss
lock
add
mov
dec
std
xchg
loopne
rol
sbb
jmp
pusha
mov
cmpsl
or
stos
aaa
orl
or
cli
sbb
and
fisttpl
mov
inc
les
push
mov
pushl
sbb
mov
mov
inc
lods
jmp
pop
jle
sub
adc
dec
xor
inc
jge
and
cmp
push
inc
lods
ret
je
jmp
and
lods
pop
rol
inc
mov
inc
and
xor
adc
es
loope
mov
pushl
icebp
enter
push
sub
mov
adc
push
jmp
mov
incl
mov
sub
add
mov
push
lds
cmc
sub
jns,pt
xor
mov
or
jl
frstor
and
ljmp
clc
adc
mov
adc
mov
mov
xor
add
push
sub
add
dec
and
fstpt
inc
or
call
sbb
sbb
ljmp
adc
repnz
pop
adcb
insb
cmp
inc
lret
dec
and
mov
cmp
dec
or
adc
mov
popa
mov
adc
stos
fadd
add
cmpsl
les
dec
out
adc
incl
pop
mov
mov
jae
push
inc
mov
idiv
incl
jl
pop
pop
pop
or
pusha
out
add
or
fdivl
shr
aam
dec
push
adc
or
decl
inc
sub
and
or
jecxz
js
test
push
push
inc
push
dec
mov
fwait
outsb
push
sbb
jg
incb
out
mov
pop
mov
xchg
sbb
shrl
inc
xor
ljmp
or
int3
jnp
or
add
adc
shr
fmul
das
jmp
push
aaa
add
jecxz
repz
jo
and
add
add
lcall
js
lds
into
sub
push
andl
lds
mov
loope
ljmp
push
mov
lahf
xlat
popf
lret
xchg
cmpsb
clc
cs
arpl
xlat
mov
add
xor
lret
xchg
xchg
in
pop
adc
pushl
outsl
lret
les
ljmp
aad
cltd
fcomps
pushl
xchg
sbb
pusha
mov
push
push
call
cwtl
sbb
packuswb
mov
sbb
cmc
ljmp
and
xor
scas
lret
fadds
sub
pop
sbb
push
shlb
or
mov
addb
cmp
or
inc
or
incl
push
or
ret
std
cmpsb
fnstenv
pusha
test
in
mov
xor
dec
xchg
mov
ret
pop
decl
pop
mov
or
das
cld
clc
xor
dec
loopne
jae
shrd
mov
mov
push
dec
cmp
ss
xchg
mov
sub
sub
or
jg
sub
jmp
add
pop
loop
or
xchg
std
jmp
sti
pop
push
or
xchg
fildll
aam
pop
pop
pop
mov
xchg
sbb
imul
movsl
call
adc
into
mov
and
outsl
sbb
fistps
adc
call
leave
sbb
mov
fdivrs
xor
aas
aam
test
pop
mov
push
add
pushf
stos
hlt
icebp
or
movb
inc
fucomip
ljmp
repnz
fnstsw
stos
cmp
rcl
fdiv
jo
cld
xlat
xor
xor
lock
sbb
jo
dec
data16
rolb
lcall
lock
jmp
aam
sub
xor
lret
xor
cltd
in
adc
jmp
sub
pop
movb
js
cmp
push
clc
outsl
jne
movsl
pop
sahf
jp
insb
pop
mov
sub
decl
shrb
push
int
mov
push
jno
xor
xorb
xchg
out
pop
rcrb
in
cmc
call
adc
mov
xchg
cmp
adc
sbb
testl
mov
mov
int
cli
out
clc
incl
jne
push
cmp
xchg
js
sub
in
jmp
fadd
rolb
cmp
outsb
out
cltd
push
adc
pop
mov
dec
sbb
or
inc
jmp
ret
and
mov
jp
inc
sbb
fldl
or
mov
out
icebp
fwait
decl
xchg
shrb
inc
push
rcrl
sbb
inc
enter
fldl
fbld
ss
lock
push
testl
adc
and
les
cmpsb
mov
aam
lock
int
out
adc
in
mov
pop
js
add
and
jg
and
push
adc
push
adc
and
xor
sbb
test
in
call
cmp
xchg
outsl
xor
dec
sub
xor
pop
cwtl
aaa
loop
dec
insb
pop
lret
cli
push
out
icebp
inc
sbb
ficomps
or
push
std
or
out
push
jo
dec
jle
adc
test
in
jns
js
dec
inc
stos
jnp
and
mov
scas
pop
adc
movsb
hlt
je
or
add
sub
call
fistl
clc
push
fistps
addb
sbb
lods
inc
lcall
adc
xchg
dec
out
ja
adc
or
lods
pop
movsl
xchg
cmc
pushl
inc
test
ja
loopne
cmp
incb
or
pop
or
call
inc
and
xchg
and
int
rdmsr
hlt
add
cld
pushl
or
push
push
loope
add
fcoms
xchg
ljmp
hlt
inc
push
jno
sbb
fsubrp
loope
sbbl
jns
and
aas
adcl
daa
movsb
in
fisubl
inc
jg
test
sub
test
dec
jbe
loop
cmp
imul
hlt
insl
jno
dec
push
fidivs
mov
push
mov
inc
sbb
in
ljmp
dec
cmp
aaa
adc
dec
xor
leave
mov
xor
inc
loope
lods
adc
mov
test
jmp
dec
adc
out
rcrl
xchg
jle
call
ds
cmp
scas
es
xor
ds
in
loop
xor
push
adc
inc
inc
jle
js
daa
mov
das
mov
jecxz
divl
clc
pop
push
pop
push
mov
aam
or
xchg
cmpsb
xor
xor
mov
mov
dec
sar
loop
sub
cmp
jbe
push
mov
jne
repz
ds
and
jg
addb
xor
ret
push
fabs
pop
jp
incl
cmp
test
adc
pop
bound
pop
and
ror
pop
mov
push
dec
and
decl
pop
mov
and
ret
mov
push
fmull
addb
je
cmpb
cmp
add
cmp
pop
icebp
dec
ljmp
pushl
mov
mov
pop
push
xor
mov
clc
pop
hlt
mov
push
mov
xor
bound
scas
sbb
sahf
pop
push
pop
xorb
cmp
int3
xor
insl
lea
lret
mov
ret
daa
push
inc
mov
jmp
mov
lds
mov
pusha
sub
fs
add
daa
minps
sbb
and
xchg
cmp
fs
mov
xor
das
test
jae
clc
pushaw
sahf
sar
scas
add
mov
add
cmp
cmpsl
xlat
mov
add
call
enter
inc
inc
sbb
popa
inc
fldl
push
leave
inc
xor
add
sbb
xchg
mov
sbb
xchg
incl
dec
call
mov
sbb
fstl
outsl
daa
mov
mov
mov
dec
push
arpl
push
insl
addr16
imul
scas
sub
or
into
sub
cmpsl
decl
cmc
add
jge
call
sbb
mov
sub
pop
mov
ss
dec
enter
jmp
cmp
pop
pop
add
xor
or
jno
movsl
lock
xlat
mov
xor
push
xorb
or
loopne
clc
mov
inc
call
call
aas
sbb
in
lds
in
mov
jg
jl
cmpsb
cmp
lock
fcomip
out
daa
ss
ss
es
push
dec
mov
jg
shrl
pop
dec
mov
cmp
adc
and
pop
jg
daa
inc
and
dec
and
imul
adc
jge
and
out
jno
fstpt
cmp
push
push
loop
jp
push
sub
cli
mov
pop
cmp
pop
lcall
pop
mov
incl
sbb
sub
xchg
adc
jg
push
sbb
popa
repz
jmp
sbb
jae
add
incl
data16
and
adc
push
pop
push
leave
pop
push
adc
dec
mov
inc
push
sti
jae
mov
mov
and
outsl
mov
or
mov
fbld
sub
lods
mov
xchg
inc
enter
and
clc
call
pusha
add
int3
inc
and
jecxz
nop
inc
push
push
sub
mov
outsl
push
inc
cmp
and
cmp
dec
js
add
cmp
sbb
pop
rclb
adc
and
pop
popa
push
ja
cli
cmp
std
jb
in
cmp
add
decl
pop
lea
mov
jmp
mov
dec
sub
jno
movsb
pop
and
pop
add
push
je
mov
and
add
xchg
xchg
mov
cmp
ret
sbb
ljmp
popf
adcb
imul
push
lea
sarl
inc
or
push
xor
jmp
jo
sbb
xor
pop
mov
or
add
add
test
adc
pop
stos
lahf
sbb
xchg
sub
jg
mov
popa
dec
dec
add
dec
jp
inc
fbstp
dec
mov
jne
sbb
clc
jo
ds
cwtl
add
or
pop
and
jne
push
or
bound
adc
cmp
push
subb
cmpb
mov
add
fistps
pop
fwait
std
push
pop
mov
outsb
and
js
xor
insl
xor
mov
sub
jg
nop
or
mov
push
mov
outsl
mov
movsl
xor
sbb
xchg
add
outsl
fs
adc
sub
cmp
xor
mov
pop
pop
stc
fdivrs
mov
cmc
outsl
faddp
add
outsl
mov
pop
cld
mov
xchg
testl
or
adc
outsl
add
sub
pop
mov
sub
and
or
sub
fisttps
xchg
mov
mov
mov
adc
movsb
mov
loope
stos
sub
es
xchg
insb
mov
decl
les
sub
xchg
aam
jmp
repz
inc
loop
leave
js
movsl
adc
jge
into
lock
cltd
idiv
mov
mov
daa
mov
xchg
loop
stos
enter
push
sbb
jecxz
jmp
ljmp
jne
fs
loop
push
mov
xchg
jo
nop
sbb
popa
xor
push
dec
or
mov
or
mov
mov
add
xchg
or
xchg
lcall
push
xlat
inc
lods
add
pop
inc
les
pop
sbb
or
inc
lahf
sub
ljmp
or
test
lcall
jl
mov
pop
xor
int3
sub
repnz
mov
xor
incl
push
and
and
jg
xchg
test
bound
fsts
pop
std
xor
pop
mov
subl
jo
push
jnp
push
clc
repz
adc
add
pop
adc
sbbl
jmp
mov
das
mov
jg
inc
faddl
in
mov
adc
das
js
loopne
adc
mov
mov
cs
out
stos
orb
out
push
or
dec
lock
inc
add
or
jge
add
incl
push
sbbb
mov
push
int3
jmp
arpl
cs
rcll
inc
in
jmp
inc
and
cmovge
pop
daa
and
outsb
or
adc
mov
dec
cli
incl
and
shl
out
mov
sbb
xorb
clc
add
sub
rcll
add
cmpb
pushl
test
cmpsb
icebp
or
fadds
cmp
add
jg
adc
fwait
pop
dec
pop
aam
jge
ret
js
leave
or
mov
les
push
divb
rclb
sub
push
xchg
aam
lods
cli
mov
xchg
inc
sub
push
pop
xchg
adcb
call
dec
mov
mov
sub
inc
subb
int
outsl
call
push
push
std
or
xchg
add
sahf
jae
ffreep
punpckhdq
inc
inc
mov
mov
in
call
fildl
and
les
adc
movsb
inc
push
roll
in
rorb
xchg
insl
cli
add
ss
pop
xchg
int3
jnp
and
and
lock
sub
push
push
and
adcb
sub
or
cli
aaa
std
mov
ret
sub
scas
adc
rcrl
add
dec
ret
mov
mov
cld
or
std
stc
inc
jmp
adc
sub
in
lock
jmp
dec
fadds
bound
adcl
xchg
pop
jmp
sbb
test
push
push
sar
dec
loope
stc
rep
call
daa
cwtl
fisttpll
fcomip
ljmp
push
repz
dec
cmp
movsl
and
push
mov
movsb
out
test
jmp
sbb
push
jnp
sub
jb
lahf
or
rcrb
loopne
jl
mov
mov
ds
shl
add
or
dec
add
mov
xchg
jbe
xor
cvtdq2ps
mov
add
lods
pop
cmc
fistps
fldl2e
or
iret
insl
orb
jae
insb
push
fildll
ss
pop
fstpt
jbe
add
mov
fimuls
pop
push
push
in
sbb
dec
cmpsl
pop
mov
clc
xor
pusha
add
test
inc
mov
pusha
xchg
jae
mov
imul
outsl
data16
xchg
jo
pop
and
dec
and
jg
or
xchg
mov
das
add
ret
push
or
pusha
testb
gs
xchg
sbb
push
cwtl
call
xchg
es
ljmp
sub
jnp
fsubrs
xor
mov
mov
add
fneni(8087
or
lcall
les
mov
popf
xor
mov
pushl
cmpsb
cmp
lds
adc
pop
and
xchg
xchg
lock
mov
push
and
pop
insb
cltd
add
decl
xor
cmp
xor
dec
sbbl
int3
xchg
push
aaa
lock
call
add
push
push
mov
fwait
sarb
mov
or
push
nop
rclb
ficoms
movsb
into
cltd
and
scas
jg
jg
dec
in
xor
ja
inc
jb
push
in
dec
loop
inc
je
adc
test
xor
xor
incl
pop
add
jp
pop
push
out
mov
in
pushl
psrld
dec
mov
jno
add
push
pop
cmp
add
repz
sbb
inc
or
cs
mov
lock
xor
pop
mov
and
jp
dec
lock
stc
incl
add
pop
mov
imul
sub
incl
cwtl
imul
push
cmp
xchg
movl
cmc
jmp
leave
sub
mov
cmp
add
pop
repnz
adc
mov
ljmp
sub
jmp
aad
cmpsl
enter
push
add
pushl
mov
pop
push
lret
dec
jp
adc
and
mov
push
xor
aaa
pop
js
dec
enter
pop
add
dec
call
stos
xchg
das
movb
add
push
stc
or
and
xchg
inc
mov
popa
or
incl
xchg
cmp
enter
sbb
add
jbe
ljmp
or
sub
jl
andl
or
nop
sahf
and
cltd
jnp
add
pushl
add
sbb
test
cmc
or
cmp
sti
and
jno
ret
movsb
ljmp
sub
mov
or
ret
cmp
mov
cli
lcall
sti
dec
push
imul
push
bound
decl
inc
sbb
iret
out
divb
in
fbstp
inc
out
adc
inc
or
int
or
sbb
inc
add
add
imul
mov
movsb
adc
nop
lods
rcrb
andl
xchg
cltd
bound
pusha
push
nop
incb
jbe
adc
rorl
decl
jmp
sub
cmp
std
ss
cmp
push
subl
movsl
pushl
mov
or
adc
add
mov
shll
xchg
mov
inc
jg
decl
rol
ds
dec
adc
and
sub
add
pushl
fldl
sub
mov
out
lret
orl
call
xchg
and
mov
or
adc
mov
pop
stc
mov
or
add
sub
fbld
pop
adc
push
sbb
andb
ret
adcb
or
cmpsb
mov
nop
pushl
mov
in
cmpsb
push
ret
cld
insb
inc
push
faddl
ja
mov
adc
fcomip
rolb
rclb
dec
pop
mov
jmp
or
pop
and
call
push
das
and
push
add
cld
scas
cli
pushl
in
inc
mov
int3
test
pop
xchg
jle
xchg
aaa
and
movsb
xchg
sub
jg
lds
or
xor
or
ja
or
add
sbb
push
ret
dec
xor
adc
xchg
sub
xor
and
imul
sarb
mov
outsl
or
jmp
subl
lcall
cld
lods
pop
push
and
xor
lds
jae
rclb
cmp
mov
mov
pop
jp
fcoms
push
sub
mov
cmc
in
pusha
aad
cmpsb
ljmp
mov
mov
fbld
inc
adc
hlt
or
mov
xor
mov
lcall
decl
inc
sbb
ret
xchg
mov
jbe
push
dec
hlt
xchg
push
dec
add
xchg
push
jecxz
lcall
pop
dec
xor
pop
pop
jp
push
mov
xchg
cmpsl
addb
jg
popf
and
out
push
jne
xchg
clc
mov
sub
scas
jge
inc
sub
pop
add
ljmp
fiadds
adc
add
decl
sbb
lock
jbe
push
loop
sahf
repnz
adc
sub
or
lret
inc
jge
jle
lock
pushl
loope
adcl
dec
sub
dec
or
insl
jle
orl
lods
sbb
js
divl
adc
les
aaa
in
adc
push
lea
xchg
test
add
sub
ljmp
pop
repz
jnp
mov
xchg
inc
and
hlt
je
mov
dec
ja
leave
mov
xchg
adc
je
xor
pop
and
sbb
push
roll
cmc
lcall
into
push
inc
outsb
pop
clc
mov
mov
add
jb
sbb
sub
fldcw
pop
addr16
fimull
xchg
push
pop
aam
sbb
cmpb
inc
xchg
lret
jg
jg
test
imul
shrb
mov
pushl
mov
mov
mov
xchg
hlt
outsb
xor
pop
das
add
gs
xchg
inc
jns
in
call
xchg
jle
outsb
gs
or
push
imul
or
add
xchg
mov
loopne
push
decl
test
cmp
lods
pop
adc
dec
loope
mov
add
pusha
test
ljmp
insb
xchg
add
aad
or
je
ss
pusha
jmp
subps
bound
aam
jo
cmp
push
pop
xor
pushf
pop
roll
mov
sbb
dec
mov
adc
jp
jo
aaa
jl
adc
inc
lret
pop
cmpsb
cmp
sub
and
imul
sub
js
movsl
jo
stos
xor
movsb
outsl
ret
mov
rclb
mov
dec
push
call
jo
xchg
sbb
cmpsl
clc
test
adc
pop
mov
xlat
xchg
pop
push
add
jecxz
adcl
dec
ljmp
fimull
pop
les
loopne
test
cmpsl
push
mov
incl
cld
insl
ret
push
nop
sub
ja
dec
in
mov
sub
cmp
ljmp
rcll
xchg
xchg
mov
mov
sbb
and
push
pusha
lret
ret
jecxz
insl
bound
xchg
and
call
ljmp
das
and
jl
jg
aad
loope
aam
jecxz
or
mov
iret
push
call
push
ja
dec
adc
jle
pop
dec
sub
aaa
std
inc
sarb
fsubr
and
mov
pop
mov
insb
vmovaps
jno
lcall
and
mov
inc
and
out
bound
call
pop
ja
popa
mov
push
jo
int3
sub
and
mov
sub
jns
out
js
ljmp
cs
add
adc
lea
inc
xchg
icebp
jg
cmp
jae
aas
or
es
mov
pop
sbb
movsl
lret
dec
add
pop
xchg
push
add
adc
incl
sbb
pop
sbb
int3
jbe
sahf
adc
movsb
sar
fistl
sbbl
jmp
mov
mov
pop
adc
or
fmuls
xor
das
or
nop
add
dec
xchg
in
sbb
push
ljmp
hlt
xor
jbe
dec
sub
push
add
push
or
daa
inc
mov
or
inc
push
cmp
jns
das
dec
ljmp
std
stc
jb
sti
xchg
mov
decl
sub
dec
pop
stos
xor
ljmp
fsubl
hlt
ljmp
pop
aaa
pop
outsl
loopne
mov
jge
xchg
fisttpl
xchg
mov
mov
xor
jg
mov
popf
xchg
test
add
mov
jbe
cli
sti
sbb
mov
sbb
insl
test
sub
inc
jg
adc
jmp
mov
push
inc
fs
pop
mov
outsb
sbb
rcll
std
gs
jo
jo
add
mov
movsb
repnz
addl
dec
pop
or
adc
push
push
je
adc
inc
xor
rorb
loopne
push
ljmp
cli
sub
imul
mull
jmp
insb
ret
mov
jp
outsb
add
faddl
test
xor
fiadds
adc
lcall
arpl
arpl
adc
call
jl
mov
ss
push
arpl
imul
pop
js
rcl
dec
jg
pop
es
sar
stos
pop
aam
push
add
inc
popa
jnp
mov
mov
shlb
jg
sbb
rcll
xchg
andl
stos
jb
or
mov
push
mov
push
mov
icebp
decl
jg
add
stos
lahf
mov
das
sbb
rclb
sarb
xchg
push
std
pushl
cmp
pop
out
mov
xchg
mov
cmp
jns
ret
or
add
inc
aam
ja
adc
mov
mov
je
call
cmp
push
cmpsb
mov
mov
cld
and
adc
mov
.byte
xchg
mov
mov
adc
add
inc
outsl
outsl
insb
gs
outsb
add
or
add
mov
insb
jae
add
jb
lea
sub
or
push
fcomi
ljmp
nop
inc
add
dec
outsb
je
addr16
sub
jnp
out
rcrb
jns
push
add
out
cmpsb
std
push
outsl
jb
jg
daa
or
imul
add
cwtl
adc
jae
jb
addr16
push
out
or
cmp
cmp
mov
pushw
and
jns
iret
sbb
cmp
pop
push
dec
bound
lock
push
sbb
push
push
jns
jl
pop
push
jl
and
dec
leave
jb
popa
arpl
cltd
int
inc
add
pop
inc
add
aas
jl
addl
jmp
adc
loopne
mov
sahf
pop
push
gs
xchg
out
popf
mov
push
jl
add
adc
mov
cmp
dec
mov
adc
andb
fs
jmpw
cmp
cmp
cmovs
cmp
pop
xor
cmp
cmp
xor
shlb
cmp
nopl
in
jbe
adc
scas
or
in
in
in
add
mov
leave
clc
hlt
lock
leave
leave
leave
lods
test
call
mov
imul
xadd
inc
ret
mov
dec
in
pushl
loopne
fcoml
les
and
pushl
ja
or
call
sub
je
movzwl
mov
in
movsb
popf
outsb
inc
inc
pop
ret
mov
fcom
psubsb
fxch
shl
add
aad
xor
push
stos
out
ret
and
insb
dec
and
mov
jg
imul
and
xor
xor
sub
imul
add
imul
outsl
data16
pop
icebp
ljmp
les
push
push
je
popa
inc
inc
gs
insb
outsl
jo
gs
outsl
int
mov
mov
gs
adc
es
pop
insl
enter
imul
ljmp
fs
push
test
jae
stos
lods
xchg
arpl
pop
mov
call
pop
jnp
popaw
dec
leave
xorb
out
imul
bound
clc
addr16
test
jl
pop
push
outsb
imul
outsb
pop
mov
push
sub
mov
cmpb
mov
push
fcomps
dec
cs
mov
iret
mov
mov
mov
mov
dec
add
inc
or
and
imul
adc
push
adc
adc
xchg
cmpsb
imul
fildll
add
not
lcall
fistpll
add
xor
pop
lods
sub
aas
inc
and
sub
sbb
dec
sub
xor
jbe
imul
cmp
imul
jmp
jmp
lret
jns
fistpll
fildll
sub
cmp
add
js
cltd
in
mov
inc
sub
mov
pop
xor
mov
add
nop
jp
lock
mov
mov
jmp
std
das
mov
shr
movzbl
mov
and
jmp
mov
and
sub
outsl
nop
add
ljmp
and
add
push
lock
add
lret
push
add
cmpsb
les
xchg
shl
or
jbe
jl
sbb
loopne
cmpl
pushl
mov
cld
add
orl
adc
jle
rorb
mov
cmp
push
addr16
lock
and
sub
jge
xchg
or
mov
cld
mov
inc
pop
or
add
mov
adc
push
push
add
sub
cmp
mov
mov
mov
loop
mov
lret
add
lret
mov
mov
rorl
lret
push
sub
sbb
xor
mov
cmpb
negb
int
sub
push
mov
aaa
pop
fdivs
loopne
sbb
xor
pop
cmp
lds
push
push
mov
lea
push
push
clc
add
and
lock
pop
xchg
movb
outsl
or
pop
adc
or
pop
lock
or
fsubrl
add
ret
pop
cld
fucom
pop
pop
pop
faddp
add
mov
sub
jae
sti
in
mov
mov
mov
push
and
or
test
jne
in
shll
push
jns
add
jmp
or
push
outsl
or
mov
mov
and
push
push
lea
push
push
inc
add
fistpll
add
and
cmp
jbe
sub
add
adc
iret
test
jne
lods
fimull
js
in
scas
dec
mov
add
aaa
jnp
rcll
clc
sub
pusha
cmp
and
in
push
fidivrs
loope
pop
rcll
add
sarl
jbe
ljmp
adc
jle
clc
and
add
xchg
xor
push
mov
in
adc
cmp
jne
andl
mov
stos
inc
push
cmp
jae
mov
add
mov
loop
fidivrl
ret
jae
fdiv
sbb
push
add
iret
lea
or
aaa
sub
dec
mov
xor
add
push
pusha
dec
mov
or
lds
mov
std
sub
add
jbe
int3
outsb
imul
mov
iret
xchg
mov
and
or
adc
shr
cmp
jb
dec
push
mov
push
ja
jmp
dec
and
es
mov
adcl
cwtl
and
cmp
pusha
bound
dec
les
je
fcoml
sbb
push
push
mov
rcrl
xchg
inc
or
mov
scas
or
sub
idiv
je
and
jmp
xor
dec
adc
mov
add
sarl
or
jbe
in
inc
jbe
mov
cmp
adc
std
add
mov
lahf
loop
cmpsb
adc
andl
mov
jns
aas
in
shl
je
lods
cmp
aad
ret
jecxz
inc
and
xchg
inc
or
outsb
sarl
jo
mov
add
or
mov
leave
cld
mov
cmp
push
rcl
add
ja
push
test
add
jns
cld
cmp
xlat
jne
mov
test
btr
cmp
add
mov
or
add
mov
dec
jnp
sub
lea
mov
inc
lods
jmp
sbbb
das
add
mov
mov
xchg
iret
fucomi
sti
fwait
enter
iret
sub
sub
cmp
and
inc
sbb
jl
mov
mov
mov
sti
call
movl
dec
cld
xor
das
mov
mov
mov
mov
inc
or
jae
lea
imul
add
sub
mov
addr16
push
xor
mov
ffreep
fidivs
lea
rcr
and
clc
inc
paddb
lea
or
pushl
loopne
push
je
loope
push
rorb
jmp
mov
cmp
sub
rorb
mov
shl
in
andl
sub
sub
or
push
mov
loopne
clc
cld
jmp
mov
dec
mov
rcrl
or
inc
inc
mov
add
cmp
cmp
test
push
pop
push
mov
inc
jb
xchg
or
into
sbb
testl
in
adc
jns
ret
mov
test
roll
test
cld
iret
jecxz
fisttpl
push
ljmp
pop
rorb
pop
data16
sub
jb
movsl
jns
push
push
xor
ficoms
push
adc
xchg
mov
jne
and
lret
mov
iret
inc
movups
mov
scas
ljmp
repnz
xor
jmp
xor
jle
or
call
loop
sbb
mov
push
jb
scas
testl
lcall
jne
or
adc
inc
cld
or
cmp
in
je
lea
inc
pop
xor
xchg
xchg
pusha
ret
ret
mov
xlat
mov
pop
pop
clc
mov
lret
cmp
xchg
ret
pop
dec
clc
sub
sub
cmpsl
xor
test
xchg
mov
sub
or
push
lahf
mov
mov
cmp
sbb
add
fmull
movsl
movl
add
sub
loopne
add
cmpsb
loop
out
dec
roll
in
or
shrl
enter
loopne
movsb
pop
sub
add
mov
jb
mov
push
mov
jg
or
fdivrs
lea
push
mov
loop
roll
add
lock
hlt
sub
mov
mov
mov
call
xchg
xor
shll
lret
mov
jg
cmp
push
and
cmp
push
xchg
movaps
cmp
jb
sbb
ljmp
adc
add
mov
das
mov
lea
add
sub
xchg
mov
or
adc
inc
or
addl
pop
cld
or
mov
push
mov
imul
adc
pop
mov
mov
roll
xlat
sub
out
icebp
mov
addl
scas
rcrl
lea
repnz
sbb
sub
adc
call
add
or
les
add
ljmp
sbb
pop
xor
leave
xor
out
push
negb
rol
mov
iret
rolb
ja
cmp
shl
in
mov
call
ljmp
rolb
push
add
lea
ja
sub
negl
add
push
jle
inc
ret
xchg
jl
mov
push
sub
js
add
outsb
jae
shlb
repnz
cmp
push
clc
jge
jno
cmpsl
jmp
negb
cmp
pop
push
jecxz
sti
ljmp
insb
sti
cltd
jae
neg
fldz
fstl
add
js
fwait
icebp
arpl
rcr
outsb
mov
mov
hlt
mov
lcall
pop
in
rorl
shlb
xor
mov
xlat
je
mov
cmp
shlb
mov
and
jmp
shll
adc
sbb
jg
call
ret
jp
out
call
cmp
jne
mov
cmp
jbe
mov
mov
sub
sbb
cmpsb
fidivs
mov
mov
dec
pushl
scas
es
mov
mul
lock
cmp
push
pop
shr
imul
add
enter
mov
loopne
stc
adc
inc
sbb
wbinvd
shrl
xchg
pop
enter
aaa
sbb
sbb
inc
add
add
nop
lret
add
add
movsb
xor
mov
xchg
or
loope
adc
inc
add
icebp
mov
dec
jbe
jg
inc
and
ret
add
pop
sub
sub
mov
or
sbb
addr16
ds
and
aas
sub
ljmp
in
rcrl
xor
test
js
push
add
jbe
loopne
arpl
lods
push
push
in
cmp
ja
pop
or
push
lock
fildl
push
push
jae
ss
mov
push
adc
jge
sbb
mov
js
add
push
adc
mov
push
testb
je
adc
call
add
fimull
cmp
cmp
notl
mov
dec
cmp
or
xor
mov
push
and
xor
arpl
cmp
jne
test
daa
dec
movb
lea
jmp
push
and
cmp
pop
pop
incb
lods
fldcw
mov
push
xor
mov
pop
enter
mov
dec
pop
fdivl
lcall
push
sbb
xor
inc
setne
sub
das
cmpl
sbb
adc
add
jp
jbe
loop
shr
inc
mov
mov
jno
fildl
pop
loop
push
push
sbb
enter
pop
mov
cmp
jne
mov
lcall
xchg
and
mov
sbb
dec
jne
mov
jo
addr16
cld
mov
jg
push
add
lea
add
decl
faddl
adc
add
div
call
cltd
pop
cmpsl
jo
and
xor
dec
sti
mov
std
or
cmp
je
aaa
push
pop
mov
test
pop
jge
mov
add
push
xchg
jnp
inc
hlt
adc
pop
movl
or
add
insl
mov
hlt
inc
imull
rorb
hlt
add
mov
mov
sbb
xor
mov
sub
jge
sti
movb
jg
dec
sahf
arpl
jl
aaa
and
aam
jge
jle
and
cmp
jge
dec
jae
add
dec
aam
loope
lds
addl
pop
push
jmp
xchg
in
pop
cmp
int
in
adcl
pusha
in
jl
cmp
mov
cmp
je
orl
inc
cmp
push
add
incl
jbe
addb
inc
add
fsubs
push
jecxz
xchg
das
jl
push
mov
cs
dec
jne
push
das
int3
jbe
sbb
imull
lds
les
and
lds
add
clc
push
pop
stos
leave
loop
test
cmp
mov
adc
jb
sbb
add
sbb
jg
imul
leave
pop
mov
mov
cmp
aaa
and
add
mov
cmpsb
inc
jbe
inc
xor
mulb
xor
mov
xchg
outsb
ret
jecxz
jne
mov
nop
xchg
xor
sbb
add
ss
xor
mov
out
enter
scas
mov
js
ss
xchg
sti
cli
je
dec
dec
pop
mov
jl
cmpb
testl
lea
faddl
fadd
test
inc
aaa
add
sbb
imul
cld
dec
out
in
xchg
jae
sub
push
xchg
in
mov
lock
push
xor
scas
cmp
scas
adc
dec
sbb
mov
add
dec
lcall
in
das
insl
add
push
movb
inc
push
or
ja
repz
and
cmp
inc
cmpps
gs
push
mulb
incl
insl
jmp
jb
xchg
add
je
dec
je
divb
std
jo
inc
mov
dec
push
pop
sub
lock
or
inc
cld
addr16
add
push
xchg
dec
mov
cmp
and
jl
stos
xchg
push
cmpl
mov
or
pop
cmp
adcl
aaa
pushf
fnstsw
test
dec
jb
sbb
dec
sub
cmpsl
outsl
call
inc
inc
xor
jae
cmpsb
dec
inc
call
mov
stos
ja
inc
xorl
dec
inc
push
divb
mov
adc
ds
insl
test
lret
test
sarl
xor
xor
mov
jle
ja
add
sbb
add
cmp
jbe
mov
bound
ja
bound
ret
aaa
jne
fucomi
add
scas
mov
mov
cmp
movl
inc
in
inc
clc
or
aaa
lret
repnz
lock
shlb
mov
lea
add
pushl
or
call
jbe
pop
mov
decl
shl
mov
shl
add
mov
dec
into
out
xor
loope
lea
add
dec
mov
sbb
mov
out
pushl
mov
out
int
push
sub
mov
xor
div
imul
mov
sub
adc
xor
jns
loope
pop
sbb
pop
adc
outsl
test
daa
mov
ret
mov
lds
push
repz
adc
pop
adc
fcoml
add
mov
jne
mov
jmp
mov
ret
pop
mov
cmp
jne
mov
lock
xorb
movl
sbb
dec
jne
sbb
repnz
or
cmp
mov
pop
mov
fimuls
mov
cmp
xlat
add
push
xor
mov
pop
push
aam
sub
dec
push
fdivs
pop
mov
popf
lea
pop
sbb
or
push
push
pushf
test
call
pop
sub
mov
fisubl
hlt
ret
jle,pn
gs
push
dec
dec
xor
adc
addr16
sti
call
or
shlb
mov
inc
push
fisttpl
insb
mov
inc
mov
repz
xor
jmp
bound
add
pop
rcr
arpl
ss
lret
lock
in
cmpl
adcb
ret
aas
icebp
xorl
sbb
fdivrl
or
pusha
rol
out
fisubs
cmp
ret
add
ljmp
out
mov
and
js
or
popa
mov
cmp
or
jo
sti
sbb
movzbl
add
pusha
movsb
adc
or
and
mov
ret
push
push
push
lea
mov
pop
jne
lret
dec
mov
mov
mov
not
das
jo
outsl
adc
cmp
sbb
cmp
ja
sub
jg
jmp
aam
in
push
sub
or
or
adc
inc
pushaw
or
xchg
int3
dec
mov
adc
jns
out
and
xor
outsl
ja
sahf
dec
push
mov
or
adc
flds
loop
or
jl
pushf
loopne
or
sbb
ret
jle
or
shrl
lret
adc
jbe
pop
loopne
push
add
clc
sub
pop
inc
cmc
stos
insl
xorl
xchg
jnp
out
push
inc
add
mov
cmpsb
and
fldl2t
mov
cmp
cmp
mov
negb
push
add
ret
mov
pop
mov
fldcw
add
cmp
add
add
pop
sub
adc
mov
imul
sub
jl
add
add
fldcw
push
mov
fldcw
pop
inc
int3
xor
loopne
popa
cmpsl
les
mov
lods
dec
and
jb
mov
ljmp
mov
jae
shll
clc
mov
mov
pop
cmp
cmp
mov
add
es
jge
xchg
push
sbb
and
xor
mov
cmp
mov
int
loopne
ja
les
jb
xchg
notb
sbb
cmc
lahf
je
sti
push
dec
sub
cltd
outsl
mov
cmp
jbe
add
std
mov
mov
inc
inc
sbb
xchg
scas
mov
push
mov
shr
je
nop
sbb
fnstenv
dec
je
addb
cmovs
sbb
push
std
jg
out
inc
loop
push
adc
add
and
je
mov
cmp
jne
dec
adc
mov
add
dec
ds
add
pop
aaa
add
mov
cmp
jne
shr
inc
cltd
notl
shr
sbb
mov
cli
and
cmp
sub
push
add
ljmp
add
adc
fstl
roll
fnsave
shl
fisubrl
jle
pop
inc
mov
mov
push
mov
inc
mov
sahf
imull
push
sbb
push
out
sahf
out
adc
push
or
pusha
rcrb
cwtl
subb
push
dec
jb
fistl
divb
fstpt
push
add
xchg
and
add
mov
or
je
and
addr16
bound
pop
pusha
movsl
insl
aaa
xor
push
es
dec
test
fcmovu
dec
out
jmp
or
sub
and
mov
clc
fstpt
pushl
lea
add
add
push
in
int
or
jge
aaa
fsubr
or
neg
jle
js
pop
sub
jmp
inc
dec
jmp
divb
aam
mov
xchg
outsl
ficompl
add
push
adc
data16
ret
or
mov
ret
pop
xor
shr
mov
lahf
jle
je
shlb
shl
dec
cld
push
call
add
mov
mov
mov
fldt
leave
and
sub
je
sub
je
das
popa
aaa
add
pop
mov
je
sahf
and
jmp
xchg
push
push
sbb
jge
mov
xor
jo
dec
sub
jmp
fstp
fldt
or
adc
out
data16
leave
mov
mov
adc
mov
pop
jns
add
or
jl
push
ret
mov
adc
inc
repnz
sbb
add
stc
inc
mov
mov
data16
sub
test
sub
sub
pop
jecxz
add
leave
out
jle
sbb
mov
cmp
fidivrs
jmp
jg
call
mov
bound
cmpb
xlat
fadds
stc
aaa
nop
lods
outsb
xor
xchg
push
or
push
push
in
int3
into
sbb
rorl
mov
push
pop
test
enter
mov
inc
cmp
and
jmp
lret
into
pop
inc
test
xchg
clc
js
aas
sbbl
pop
mov
addr16
leave
push
leave
bound
and
cld
gs
sahf
mov
sub
inc
aad
iret
decl
js
fbstp
push
stos
mov
cmp
or
mov
pop
out
sub
call
inc
imul
divl
jl
xor
cmp
call
mov
sti
jmp
stos
push
inc
mov
push
sbb
sarb
repnz
test
nop
fildl
daa
movsb
lcall
clc
scas
adc
inc
pop
pushf
mov
pop
pushf
mov
fs
aam
imul
loope
jp
iret
incl
mov
ds
push
cmpsb
scas
mov
pop
or
addl
jmp
mov
pop
cmp
sahf
xchg
pop
cmpsb
lock
mov
popa
incl
pop
mov
repz
mov
subb
and
cmp
lock
aad
bound
xor
mov
pop
xor
xchg
pop
ss
mov
add
jb
or
add
add
mov
pop
hlt
movzwl
decb
cld
push
push
inc
or
hlt
fildll
les
in
in
lock
xor
push
push
shll
mov
movl
data16
outsb
fnstsw
andb
pop
pop
pop
in
push
scas
fstl
push
sub
mov
out
jecxz
cmpsb
cmp
and
push
clc
pop
aas
or
jg
xor
add
adc
add
push
std
add
incl
inc
add
add
jb
insb
add
outsb
add
inc
add
out
jne
sbb
imul
inc
scas
fnstsw
dec
dec
jae
imul
push
inc
jne
loope
adc
add
jecxz
dec
es
pop
incl
in
mov
add
mov
inc
popa
mov
inc
scas
xor
das
clc
push
pushf
dec
clc
in
mov
out
mov
inc
incl
or
cmp
je
sub
pop
jmp
push
pop
inc
mov
jecxz
in
sub
push
cmpsl
inc
push
add
xchg
ret
pop
inc
or
insb
mov
fnsave
mov
lds
add
scas
popf
mov
sbb
pop
aaa
sub
out
adc
ror
test
je
shl
fsubrl
push
cs
lcall
lcall
cwtl
xor
jmp
cmp
fs
push
cld
mov
xlat
stos
mov
xor
push
shr
dec
rep
jl
pop
and
rep
mov
mov
sub
sar
aaa
add
add
jmp
cmp
je
pop
mov
notb
xor
sbb
mov
mov
mov
push
jg
test
sbb
jne
jne
ljmp
aas
add
jbe
sub
dec
xor
or
or
test
xchg
cmp
jle
adc
jb
movhps
jl
add
jmp
and
dec
mov
xor
or
scas
cmp
mov
push
scas
lods
fisttpl
inc
mov
mov
cmpsl
or
inc
sub
sub
add
test
pop
loope
inc
adc
add
ds
je
mov
lea
insl
dec
insl
mov
pop
sub
pushf
mov
inc
out
sahf
xchg
cmpsl
add
jns
pushf
pop
clc
lock
rol
mov
std
in
mov
xor
xor
jb
cmp
jne
or
or
or
push
inc
dec
ret
addl
mov
mov
xchg
xchg
sub
lea
push
add
mov
rorl
mov
leave
jmp
repz
or
add
jle
push
call
mov
add
repnz
je
pop
adc
testb
shrb
je
cld
pop
xchg
push
filds
adc
pop
pop
adc
out
mov
cwtl
in
call
or
out
loop
jecxz
out
mov
dec
pop
fwait
out
jb
movl
or
cmp
cmp
bound
rolb
inc
cmp
enter
lock
or
cli
add
mov
push
inc
sbb
std
int3
dec
inc
jl
add
sahf
mov
add
and
push
jo
mov
rcl
outsb
lock
and
leave
xor
mov
or
adc
out
sbb
mov
push
add
dec
jne
or
jmp
push
jmp
in
adc
inc
subb
decl
cwtl
ljmp
xor
test
jne
xor
psubusw
jp
jne
shl
inc
add
out
std
icebp
shll
pop
cmp
ret
xchg
jo
xchg
add
add
in
and
lea
pop
and
fcompl
cmp
jmp
xor
add
daa
jecxz
jp
jb
iret
push
pop
add
push
jmp
pop
adc
cs
push
push
push
fbstp
xor
lea
mov
mov
mov
movl
cmpsb
sub
mov
cmp
or
adc
jb
inc
or
pop
das
sbb
or
add
out
add
xor
push
clc
stos
mov
jae
sarb
aas
jmp
push
inc
in
lock
sbbb
popf
or
or
rorb
push
add
ja
lods
xor
pop
jle
in
sbb
pop
push
in
or
pushf
ret
jp,pn
in
or
adc
imul
add
and
push
push
mov
rcl
idivl
int3
mov
add
and
or
jno
sbb
pop
in
push
incl
adc
aaa
cmpsb
pop
push
or
inc
fisubrs
cmp
sbbb
mov
loopne
scas
cmpsl
cmp
jae
shlb
cmp
pop
push
lock
loopne
push
and
sbb
jmp
push
movsbl
inc
inc
jmp
add
add
push
imulb
or
push
jecxz
mov
push
cmp
mov
push
aas
loop
mov
and
cmp
lea
cmp
enter
jg
add
int3
test
dec
cmpl
out
pop
pop
dec
mov
outsb
cmp
adc
jno
sbb
je
adc
pop
icebp
adc
sub
xor
clc
mov
addb
je
dec
sbb
add
aaa
lods
jbe
test
lea
push
add
stos
fnstenv
mov
jo
movsb
jmp
adc
jns
jbe
adc
or
cli
push
jns
je
orl
enter
cmp
push
lds
sub
sbb
ds
and
pushl
add
mov
add
inc
add
sbb
xchg
adc
add
ljmp
scas
mov
mov
cmovno
xor
mov
and
je
dec
or
add
dec
push
add
xor
mov
imul
mov
jl
addl
out
insb
aas
dec
clc
fisttps
roll
inc
enter
adc
or
cs
divb
jl
mov
lcallw
mov
loopne
cmc
or
shrb
xor
faddp
subl
arpl
sbb
in
push
cmp
adc
sbb
adc
push
or
mov
pop
adc
pop
adc
nop
dec
lock
push
jmp
shrl
add
outsb
xor
pop
cmp
in
cmp
adc
sbb
adc
xchg
loopne
dec
add
push
mov
pushf
call
std
lods
adc
adc
push
mov
dec
ret
and
push
dec
mov
dec
lock
in
loopne
push
out
push
aas
xchg
mov
cmpsl
loopne
pop
push
push
push
push
mov
cmp
mov
sbb
cmp
fwait
cmpsb
imul
adc
add
mov
dec
push
pusha
loop
mov
dec
mov
into
add
nop
ss
add
cmpsb
xor
and
pushf
pusha
mov
inc
push
inc
std
fwait
or
mov
add
xlat
or
rcrl
test
sbb
cmp
adc
adc
jle
pusha
xchg
jae
mov
lock
sbb
sahf
or
std
jmp
ret
xor
nop
or
or
xor
and
or
dec
clc
scas
data16
mov
pop
cmp
push
sub
mov
cmp
pusha
add
add
je
push
mov
cmp
cmp
adc
lcall
jmp
sub
cmp
mov
jmp
mov
jmp
mov
jmp
mov
out
iret
jmp
push
sbb
into
jmp
mov
jmp
mov
jmp
mov
adc
lret
movzbl
orb
ret
daa
xor
popa
mov
lea
pop
push
sbbb
jno
dec
pop
or
inc
pop
mov
xorl
inc
sbb
cli
in
ds
daa
jo
fsubr
out
push
inc
loopne
mov
mov
loopne
sbb
or
mov
xchg
jo
scas
and
movsb
adc
enter
push
clc
mov
aas
mov
cmp
or
jo
scas
add
or
fisubrs
and
shlb
mov
sbb
aas
jns
add
jne
test
jle
dec
mov
arpl
adc
je
add
cmp
sub
stos
pusha
test
icebp
jmp
repz
xor
pop
xchg
and
add
cmp
or
in
cmpsb
lret
sti
jle
sub
sub
scas
xor
inc
xlat
iret
cmp
jg
xor
mov
repz
adc
cmp
jmp
ja
mov
xor
jb
push
ss
add
pop
jle
cld
shlb
imul
testb
dec
pop
mov
mov
push
aaa
out
xchg
inc
in
test
sub
das
pushf
inc
xor
mov
pop
lea
pushl
icebp
in
push
sub
sbb
add
mov
add
mov
dec
insb
pop
dec
je
add
int3
pop
cmp
inc
call
jmp
fadds
iret
pop
pop
jl
or
mov
inc
or
jg
add
xor
xor
pushl
cmp
inc
inc
inc
inc
inc
inc
and
repz
mov
mov
cltd
idiv
add
jle
cs
mov
and
and
dec
jmp
fdivl
loopne
inc
aaa
inc
inc
mov
in
pop
rorl
in
mov
cld
frstor
add
rolb
imul
or
pop
in
outsl
adc
ja
add
mov
mov
mov
leave
fists
dec
add
lock
icebp
push
cmpw
clc
adc
arpl
push
popf
cmpb
pop
insl
lock
push
push
or
stc
popa
scas
fildll
inc
stos
les
pop
ret
ds
adc
jl
inc
jnp
mov
int
add
dec
add
test
roll
mov
sub
jl
rcrb
mov
jne
jge
jae
inc
cmp
adc
adc
mov
sbb
push
ds
add
addb
cmp
jnp
mov
push
sub
subb
adc
mov
jb
dec
mov
cmp
je
inc
push
push
sarb
jg
jae
jne
call
adc
push
loopne
jne
jo
inc
inc
repnz
adc
jnp
out
push
movsb
decb
ss
nop
cmp
pop
mov
push
mov
jmp
pop
cltd
push
xor
push
cmpsl
js
push
and
lods
mov
movsb
ror
push
push
jmp
pusha
jp
loopne
call
ret
es
mov
mov
mov
add
mov
sahf
or
outsl
test
mov
mov
adc
add
push
push
or
loopne
push
loopne
mov
loopnew
cmc
out
dec
scas
jle
je
mov
lahf
adc
or
sbb
clc
in
aas
push
dec
clc
dec
jl
lock
hlt
pop
pop
andl
push
fsub
nop
add
or
mov
jne
cmpsb
dec
cmp
jp
add
jae
mov
push
jg
mov
inc
in
addr16
mov
dec
cld
std
cs
loopne
inc
inc
clc
xchg
adc
mov
jle
push
add
jo
out
test
sub
lock
ljmp
pop
pop
mov
inc
clc
in
push
lcall
shlb
data16
js
jg
test
sub
mov
mov
sub
mov
adc
into
loop
sahf
lods
cmp
mov
cmpsb
arpl
cmp
cmp
sub
mov
cs
push
mulb
decb
or
ss
lods
mov
aaa
and
sbbl
out
call
push
adc
ret
daa
adc
add
rolb
or
cmp
xor
sub
sbb
nop
ret
clc
outsb
push
into
jno
stc
es
jg
pop
test
sub
push
loop
dec
fcoml
dec
and
mov
add
inc
mov
push
and
dec
sub
call
call
xchg
mov
sub
inc
sub
je
cmpsb
out
rorb
dec
dec
pop
or
push
push
loopne
add
in
add
rcl
push
or
mov
adc
inc
ret
jg
ljmp
push
insb
mov
and
cmp
aad
fcmovnu
jl
rcr
add
js
or
std
imul
dec
add
add
out
add
call
mov
dec
cmp
je
sub
inc
push
gs
js
push
rolb
je
inc
jb
pop
mov
cmc
inc
and
add
pop
js
lock
sub
jne
es
or
pop
cld
sub
push
adc
and
sub
ljmp
lret
add
sbb
jne
jp
repz
add
push
pop
mov
pushfw
mov
or
fwait
xchg
push
repz
popfw
pop
stos
bsf
shr
add
jns
test
mov
mov
cmp
pop
pop
jmp
in
call
pop
cmp
rclb
xlat
or
jmp
inc
pop
add
jne
daa
push
cmp
es
lret
dec
test
jecxz
push
mov
mov
add
out
dec
mov
push
pop
dec
dec
test
xchg
cltd
in
dec
inc
lock
rorb
pushf
jne
jg
pop
imul
push
jns
popa
ret
addl
mov
pop
pop
lods
mov
xchg
xor
sub
stos
and
mov
or
mov
mov
scas
int3
pop
pop
cli
jo
cli
icebp
push
inc
push
pusha
cmp
mov
das
fwait
mov
ljmp
clc
adc
adc
xor
test
and
xbegin
add
in
sbb
das
push
push
das
sbb
and
loopne
testl
add
or
pop
js
fists
ret
call
xchg
adc
test
mov
adc
insl
cmc
pop
les
repz
push
pop
imul
movl
add
cmp
das
push
inc
add
je
dec
out
test
mov
cmp
xchg
xor
stos
sti
fwait
lret
inc
js
xor
inc
nop
jne
push
sbb
pop
inc
xor
jno
orl
shr
jmp
imul
mov
addb
leave
push
fbstp
cwtl
push
ja
push
pop
pushl
mov
xchg
cmpsl
mov
and
or
dec
dec
push
notb
ret
mov
adc
dec
das
inc
xchg
jbe
sbb
xlat
jne
dec
jb
hlt
xchg
or
lret
pop
sub
or
add
push
mov
xchg
rorl
fwait
pop
cmc
shr
cmp
jge
pop
inc
addb
dec
cmp
and
jmp
sbb
jmp
repz
cmp
mov
icebp
insb
or
rolb
rol
xchg
jp
pop
loopne
push
fmuls
ret
adc
cmp
adc
push
outsb
inc
inc
pop
push
push
pop
lock
jle
jnp
shr
inc
cmp
lcall
or
push
incl
pop
xchg
out
fsubl
sbb
cmp
xor
sbb
nop
loop
fstl
sub
bound
loope
dec
aam
loope
mov
inc
shlb
rcrl
lods
add
mov
and
and
inc
in
jmp
inc
cmp
cs
shl
inc
jo
inc
jo
pushf
push
xor
inc
xchg
cltd
pushf
push
enter
or
pop
adc
push
mov
mov
push
or
push
push
nop
test
push
add
rcrl
rcrl
cmpsb
clc
aaa
scas
pop
add
lea
sub
mov
cld
ret
ja
add
loope
sbb
inc
xlat
push
adc
dec
mov
ja
lds
and
and
ja
or
push
fs
out
cltd
jge
add
je
xchg
rolb
aaa
mov
jo
push
push
jo
adc
mov
jo
mov
das
popf
adc
test
mov
icebp
add
dec
mov
das
test
xor
add
test
into
je
subl
icebp
sub
test
jb
ljmp
cmp
sub
shl
lretw
loopne
add
xlat
pop
aad
adc
jle
loopne
cmpsb
adc
outsl
repnz
jecxz
loopne
add
dec
cmp
rclb
fdivrl
stos
orb
add
outsb
and
inc
cld
test
lahf
push
or
sub
aad
ret
jg
cmp
or
mov
jo
daa
or
mov
xor
jmp
fidivl
cmp
push
or
xchg
rcr
out
pop
pop
xchg
add
dec
clc
fiadds
call
or
movsl
into
push
push
mov
mov
push
ss
or
subb
pop
mov
dec
jmp
jbe
adc
inc
sbbl
iret
mov
jbe
mov
popf
ja
pop
add
loopne
cmp
pushl
shl
add
dec
jmp
iret
mov
out
imul
dec
loope
and
sbb
push
mov
lea
rclb
adc
add
icebp
add
add
or
or
dec
jne
pop
pushl
enter
les
stos
cmp
pop
lea
jmp
mov
jae
xchg
pusha
movsb
add
aam
jbe
subl
jp
jge
or
jo
aam
cmpsb
es
enter
jbe
decl
xchg
enter
shlb
add
push
shr
iret
fwait
int
push
push
mov
inc
dec
dec
add
pop
xor
fwait
jbe
add
add
dec
adc
add
and
ss
pop
inc
and
shr
and
push
movsb
or
pop
das
or
adc
das
test
jmp
pushf
adc
fiadds
leave
jmp
int
sub
pushf
push
sbb
push
lret
sub
inc
js
leave
cmp
fucomi
pop
dec
cmp
mov
test
clc
sub
cmp
incb
dec
push
insb
and
outsb
fisubl
inc
adc
int3
test
mov
shrl
cmpsb
idivb
pinsrw
and
cmp
cmpsl
or
sbb
add
loope
int3
or
or
jno
add
jl
hlt
in
mov
nop
jle
dec
push
sub
sub
mov
sub
mov
lea
sub
fidivrl
push
or
leave
ja
aaa
mov
jg
mov
outsb
pop
or
jg
rorb
mov
jne
push
clc
in
pop
pop
lods
std
add
clc
jmp
cmp
jge
sbb
cmp
jo
shl
ficoml
push
jge
mov
out
jnp
jle
imul
int
mov
dec
sub
cmpb
adc
push
add
aad
and
sub
push
lds
pop
sahf
fbstp
mov
pop
dec
inc
clc
xor
rorl
imul
dec
js
cmp
dec
push
mov
sub
sub
popa
xchg
lods
push
adc
adc
push
mov
pop
push
push
pop
adc
inc
inc
ss
into
mov
cld
push
adc
js
out
adc
sub
aas
loope
jle
adc
cmpsw
scas
jle
jnp
xchg
fldpi
ljmp
clc
push
stos
sbb
call
mov
dec
mov
adc
rorb
adc
mov
mov
bound
fimull
negl
testl
cs
sti
xchg
xor
mov
mov
xchg
cmp
push
cmp
decl
fidivrl
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
mov
test
lods
ret
mov
and
jg
lcall
adc
jmp
push
mov
mov
rcll
or
es
cs
adc
add
sub
cmp
fimuls
mov
mov
sti
stc
sbb
or
pop
call
rolb
lods
jle
stc
xchg
push
ror
sub
shll
jb
pop
xchg
aaa
sub
ret
mov
mov
mov
jg
xchg
and
leave
dec
dec
pop
cmp
inc
xorb
ja
inc
hlt
jmp
es
outsb
push
jmp
lret
pushf
dec
addb
cmp
fucomp
sub
sbb
push
jae
cmp
push
sbb
push
sbb
mov
adc
ds
es
and
sub
inc
add
adc
xor
in
sbb
adcb
test
jecxz
sarl
lock
mov
fcompl
jle
adc
cmp
or
fcoml
je
or
popa
or
imul
xchg
adc
pop
cmpsl
mov
add
cmp
sbb
push
rclb
cld
jmp
and
ret
push
stc
leave
insb
lea
mov
sbb
mov
add
mov
hlt
mov
pop
jmp
aas
add
mov
int3
mov
mov
adc
ret
insb
adc
and
nopl
fs
jne
or
sbb
mov
aad
insb
and
mov
and
push
pop
insl
jl
adc
sbb
scas
ret
movsb
push
and
jns
cmp
sub
add
inc
cld
imul
sub
lds
adc
dec
mov
ret
or
pushl
cmp
pop
pandn
mov
xor
fisubrs
mov
cli
cmp
add
in
sub
pop
adc
daa
popa
push
sub
lea
push
xchg
adc
xchg
nop
pop
daa
mov
lock
xchg
pop
test
mull
mov
aas
and
and
add
cmp
lret
aas
leave
lods
pop
ret
mov
jo
or
push
dec
dec
xchg
jne
pop
mov
or
fidivl
jb
push
loopne
pop
add
dec
call
mov
ljmp
fucom
ss
lods
jo
push
jnp
aam
or
push
ss
mov
add
or
pop
push
call
or
jb
out
or
dec
lods
testb
in
idiv
jge
adc
cmp
je
or
decl
cmp
jne
mov
cmp
jge
fildl
shlb
imul
daa
clc
mov
sub
sbb
inc
loopne
push
in
adc
jmp
jmp
or
ss
imul
in
mov
push
in
test
fsubrs
adc
xor
stos
rclb
push
dec
rcrl
jns
push
push
fbstp
add
mov
mov
or
sub
popa
fisttpl
sahf
or
add
cmpsl
mov
jle
mov
add
dec
dec
cmpsb
cltd
mov
add
adc
ljmp
js
push
dec
jne
enter
push
fistl
mov
aad
xor
decl
jne
sbb
xchg
scas
xor
sbb
push
jbe,pn
xchg
inc
sub
sub
sbb
push
lods
je
icebp
scas
adc
dec
std
jecxz
inc
push
mov
incl
pop
pop
pop
mov
jecxz
inc
outsb
ret
sub
loop
inc
in
sbb
inc
and
adc
push
xchg
add
sbb
mov
outsb
dec
inc
out
std
fadds
push
xor
int3
ss
incb
xchg
mov
mov
push
pop
mov
outsb
dec
sub
aam
xor
inc
adc
jne
or
jbe
pop
pop
add
sbb
push
and
jae
bound
test
or
jne
ret
fisttps
daa
push
icebp
mov
sbb
in
add
repnz
outsl
or
mov
xchg
cmp
mov
ljmp
jl
shld
sub
filds
in
push
pushf
xor
je
push
dec
and
jae
inc
cmp
push
xorb
xchg
sub
mov
shrb
ds
idivl
cmp
adc
pop
jne
loop
aam
stos
push
cmp
cs
xlat
test
in
scas
inc
add
adc
inc
jne
xor
sti
mov
nop
clc
jns
adc
cmp
in
mov
xor
add
mov
ret
inc
cmp
push
scas
xor
push
sbbl
cmpsb
mov
jo
xor
lcall
cmpb
jg
aas
flds
std
aam
push
add
jg
movw
add
push
push
fldt
add
popl
push
or
testl
arpl
outsb
jb
outsb
iret
xor
xor
cs
fstl
out
insb
add
inc
gs
outsl
outsb
addr16
popa
mov
push
push
daa
not
std
pop
cmpb
filds
je
es
push
mov
je
pop
jb
pop
cmp
inc
ja
sbbl
dec
xchg
popa
lcall
ds
push
mov
pop
aam
pusha
cmpsb
sbb
push
insl
insl
inc
cmp
mov
add
cmp
leave
and
sbb
or
or
insb
xchg
push
cmp
pop
out
std
push
lret
jne
out
add
mov
mov
idivb
fidivl
inc
mov
jge
adc
or
lds
fsubp
and
cltd
fistpll
add
pop
lock
negb
cmp
and
adc
add
adc
fldl
xchg
jno
push
aad
xchg
rcl
cli
jl
and
fmul
ret
int3
rolb
mov
dec
jnp
add
xor
andb
cmp
cmp
push
shl
outsl
aam
sub
and
add
jb
jnp
imul
inc
push
and
arpl
add
adc
test
lea
addr16
xor
xchg
adc
or
mov
push
imul
sbb
mov
mov
cmp
sbb
and
mov
mov
add
or
and
outsb
rorb
insl
inc
jo
sub
pop
adc
push
mov
dec
push
sub
adc
popf
outsl
adc
inc
pop
dec
gs
mov
push
sbb
lret
hlt
fs
sti
or
pusha
lock
mov
movsl
movsb
cmp
jb
jns
imul
cmp
inc
sbb
imull
add
mov
or
mov
pop
mov
mov
cld
jne
mov
push
ret
js
add
mov
js
and
sbb
add
test
mov
lret
fistpl
push
inc
rcrl
sbb
sti
lods
push
call
push
mov
cmp
aaa
push
pop
sbb
mov
adc
jnp
pop
pop
ret
sbb
ds
add
out
cli
inc
pushf
inc
stc
push
call
shlb
push
xchg
mov
pop
dec
adc
sub
ficoml
add
clc
ret
xchg
lahf
and
push
bnd
aaa
push
into
leave
ja
push
pop
icebp
push
bound
fcomps
push
push
jbe
pop
test
push
cmp
jb
add
or
jb
adc
and
clc
fildll
sahf
pop
and
jbe
testb
adc
mov
push
loop
push
jno
ret
cmp
filds
sub
sbb
mov
stc
pusha
mov
out
push
pushl
dec
decl
divb
push
push
fmull
cltd
mov
out
inc
sbb
jg
aaa
xor
sbb
andw
or
or
roll
add
push
adc
cmp
mov
leave
mov
jb
outsl
dec
sbbb
scas
jae
in
lods
or
inc
mov
clc
in
fiadds
data16
fwait
aaa
mov
out
aas
push
stos
mov
jnp
sub
addl
adc
rorl
jmp
sbb
pop
cmp
or
cwtl
lods
loope
out
add
inc
lods
xor
aaa
outsl
pop
add
pusha
aad
xchg
or
inc
shrb
adc
rorl
mov
mov
call
push
xor
adc
outsl
fs
jno
push
inc
sbb
xchg
std
fnsave
jo
jbe
sbb
or
test
mov
xor
pop
fidivrs
sub
push
jge
icebp
cwtl
jle
mov
jmp
adc
inc
push
nop
jo
jmp
int
jo
add
jb
in
cmp
lret
loopne
fiaddl
xchg
lock
push
fsts
xchg
mov
lcall
xchg
cld
cld
cmp
int
cld
xor
adc
cwtl
sarl
mov
lock
pushf
loope
inc
cmpsb
and
add
aam
cmpb
push
jb
add
test
sbb
mov
les
jg
sti
jo
hlt
or
add
js
add
sbb
push
test
sbb
and
pop
inc
pushf
hlt
sub
jg
mov
or
and
adc
movl
or
or
cmp
cli
jge
add
mov
clc
rorb
adc
fistl
sub
inc
inc
jle
movsb
inc
adc
jno
cpuid
xchg
dec
push
push
sbb
jle
enter
lret
leave
pop
push
push
push
bound
jge
lahf
jl
cmp
popa
mov
cmpl
dec
loop
bound
imul
push
push
aaa
mov
scas
add
in
or
loopne
mov
sub
add
jns
push
test
fmull
mov
ret
mov
or
mov
or
sbb
cmpl
int3
imul
sbb
cmpsl
lock
jg
ljmp
mov
add
lea
sub
mov
jg
jb
je
dec
je
push
sbb
and
pop
lock
dec
stos
ret
sub
mov
and
or
xchg
ds
or
push
add
nop
out
pop
repnz
sti
mov
push
lahf
mov
jns
lock
dec
jnp
lods
push
add
dec
cmpsl
and
faddl
mov
nop
pusha
cmp
rorb
push
xor
push
cmp
rorb
xor
je
cmp
adc
or
ss
jo
push
adc
ljmp
fwait
mov
dec
sar
xor
add
sarb
push
adc
std
sbb
mov
inc
and
decb
jg
lods
ss
je
hlt
pop
sub
lea
mov
ror
mov
aad
push
cmp
ret
fwait
outsl
mov
dec
or
cmp
inc
or
inc
addb
inc
add
jo
add
push
into
push
mov
fisttpl
sub
push
or
ds
push
or
xchg
dec
loope
data16
push
push
and
cwtl
or
push
outsb
dec
pop
aad
out
jmp
adc
push
or
clc
cmp
jl
cmp
jge
cli
push
add
or
int
jl
outsl
je
and
shl
repnz
add
mov
push
lods
or
add
dec
add
or
jge
popf
push
jo
inc
adc
sub
add
lods
enter
and
add
loopne
mov
mov
adc
mov
add
mov
mov
add
add
add
pop
adc
or
aas
f2xm1
loope
daa
add
push
add
push
or
jg
js
jbe
dec
push
dec
inc
loop
sbb
add
cmp
and
loopne
addr16
mov
or
push
gs
in
aas
jnp
stos
or
jb
jns
es
imul
mov
push
outsl
arpl
inc
gs
mov
insb
je
dec
outsl
je
imul
mov
gs
jge
std
dec
outsl
inc
arpl
or
or
jg
insl
int
jle
inc
xor
xor
outsl
insl
bound
ljmp
inc
outsl
js
pop
push
imul
inc
ja
add
andps
outsb
dec
inc
xor
je
sti
add
dec
add
int
pmulhuw
in
and
adc
in
in
or
daa
daa
and
int3
clc
hlt
lock
daa
daa
daa
in
call
jb
aam
sbb
ror
dec
dec
or
rclb
bswap
rclb
mov
xchg
xchg
xchg
xchg
lods
test
mov
pushf
cwtl
xchg
nop
xchg
xchg
xchg
xchg
mov
out
xor
xchg
xor
imul
cmp
mov
adc
xor
ds
mov
and
mov
stos
pop
test
push
jl
pcmpeqb
cmp
cmp
pusha
cmp
cmp
pop
pop
push
push
cmp
cmp
dec
dec
inc
inc
cmp
cmp
cmp
xor
cmp
cmp
sub
and
cmp
cmp
sbb
adc
cmp
cmp
or
add
pushf
pushf
mov
lret
clc
hlt
lock
cmp
loopne
cmp
aam
ror
cmp
cmp
enter
cmp
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jo
cmp
cmp
push
cmp
cmp
push
dec
cmp
cmp
dec
inc
inc
cmp
cmp
cmp
xor
sub
cmp
cmp
and
sbb
cmp
cmp
adc
or
cmp
cmp
add
cld
lret
popf
mov
call
cmp
cmp
fcom
sarb
cmp
cmp
enter
cmp
cmp
cmp
lods
test
mov
pushf
cwtl
xchg
nop
daa
mov
cmp
daa
daa
daa
jl
je
daa
daa
daa
daa
insb
push
daa
daa
pop
pop
push
push
daa
daa
daa
daa
dec
dec
inc
inc
daa
daa
daa
daa
cmp
xor
daa
daa
daa
daa
sub
and
daa
daa
daa
daa
sbb
adc
daa
daa
daa
daa
or
add
xchg
xchg
xchg
daa
cld
leave
clc
hlt
xchg
xchg
xchg
xchg
lock
call
xchg
loopne
fcom
daa
daa
mov
ror
mov
daa
daa
daa
mov
and
daa
lods
test
pmulhuw
in
pushf
cwtl
dec
cs
xchg
nop
mov
test
in
js
jo
insb
leave
leave
leave
leave
push
leave
leave
leave
pop
push
push
dec
leave
leave
leave
leave
dec
inc
inc
cmp
leave
leave
leave
cmp
sub
enter
and
sbb
cmp
mov
or
cmp
cmp
add
cld
enter
mov
hlt
pop
lock
daa
mov
cmp
in
loopne
daa
daa
daa
daa
fcom
ror
daa
daa
daa
daa
enter
daa
daa
daa
daa
mov
jb
daa
test
mov
pushf
cwtl
xchg
nop
leave
leave
add
leave
leave
leave
leave
cmpb
lret
leave
leave
jo
push
scas
dec
cld
add
and
or
cltd
or
adc
jns
out
sbb
and
xlat
insb
rorb
cmp
jno
ret
jae
daa
inc
sub
cmp
lock
outsl
push
push
les
insl
subb
aas
in
adc
mov
push
push
lods
popa
pop
pop
jl
mov
xchg
push
push
push
gs
mov
lods
shr
inc
cmp
cmpl
and
sbb
pop
or
sarb
movl
push
pop
mov
pop
addr16
andl
push
out
dec
cltd
sbb
dec
add
inc
mov
sbb
pop
pop
inc
jge
and
das
inc
jp
mov
aas
cmp
push
push
add
dec
xchg
ss
xchg
push
pop
push
push
or
pop
push
dec
add
push
push
dec
xchg
sub
nop
push
data16
add
push
xchg
sbb
mov
add
xor
es
sbb
pushl
cmp
lock
dec
dec
repnz
cmc
dec
dec
dec
dec
div
clc
stc
dec
dec
dec
dec
cli
sti
cld
std
dec
dec
dec
dec
jmp
loope
dec
dec
dec
loop
in
dec
dec
dec
dec
out
call
dec
ljmp
dec
out
out
rcl
dec
dec
dec
dec
rcl
aam
dec
dec
dec
dec
xlat
fcomp
dec
dec
dec
dec
fcmovu
daa
and
inc
shll
daa
daa
ret
lds
daa
daa
daa
mov
leave
daa
daa
daa
daa
lret
int
daa
daa
daa
into
iret
mov
daa
daa
daa
daa
mov
mov
daa
daa
daa
daa
mov
mov
daa
mov
daa
daa
daa
mov
daa
daa
daa
mov
daa
daa
daa
cmpsb
cmpsl
test
daa
daa
daa
daa
stos
stos
lods
lods
daa
daa
daa
daa
scas
scas
nop
xchg
daa
daa
daa
daa
xchg
xchg
xchg
xchg
daa
daa
daa
daa
xchg
xchg
cwtl
cltd
daa
daa
daa
daa
lcall
daa
sahf
lahf
addb
addl
xchg
daa
mov
daa
daa
mov
daa
daa
jb
je
aas
daa
daa
daa
jbe
js
sti
sub
fistps
add
jb
sub
jne
hlt
pop
push
popa
or
je
sahf
shrb
adc
pop
test
and
mov
ret
mov
adc
or
rorb
adc
test
imul
add
xor
add
stc
add
mov
bnd
add
cmpsl
jns
inc
sbb
inc
jnp
inc
ss
lret
subb
push
or
and
xchg
mov
pop
shlb
insb
je
js
inc
inc
mov
cmp
cmpl
out
add
rclb
addr16
push
jg
loopne
dec
fmul
mov
or
or
arpl
mov
mov
and
or
or
dec
add
xor
imul
adc
sub
add
mov
or
or
add
and
add
adc
push
test
int3
or
jae
call
push
and
cld
push
je
insb
jae
xchg
add
adc
sbb
sbb
rcrl
push
inc
pop
je
push
les
out
iret
mov
xchg
clc
add
pop
or
arpl
sbb
data16
sub
idivb
inc
jb
mov
inc
inc
bound
je
mov
scas
inc
sahf
mov
in
movl
enter
cld
filds
xor
adc
jne
dec
data16
in
lds
push
xor
or
outsb
loop
jb
arpl
rcl
loopne
xor
cmp
and
inc
xlat
dec
lea
mov
in
dec
lds
out
and
loope
or
mov
and
xlat
sub
pusha
lea
jle
or
imul
nop
mov
inc
in
mov
addr16
xlat
add
push
mov
gs
insb
outsl
ja
dec
push
push
addr16
rolb
mov
in
inc
sti
mov
fcom
loopne
xchg
cld
jg
dec
outsb
jbe
insb
imul
xchg
sub
dec
nop
mov
ret
xor
xlat
mov
out
popa
and
sbb
xchg
das
fcmovu
inc
push
outsb
fsts
mov
maxps
outsl
imul
ret
cmpsl
or
inc
mov
push
or
imulb
ffreep
pop
xchg
dec
jo
inc
inc
outsl
outsb
jb
push
fnstsw
xchg
scas
adcl
shlb
and
push
clc
push
imul
xchg
dec
xchg
push
xchg
push
jb
insb
fisubl
sub
mov
das
dec
push
inc
ljmp
sbb
adc
jle
je
cmp
mov
xchg
xlat
pushf
xchg
push
mov
cld
mov
popa
outsb
add
fistpll
dec
dec
or
push
jo
arpl
push
xor
inc
popa
jl
mov
out
adc
loop
cmpsb
rcrb
dec
mov
es
push
jb
fcomip
lea
adc
pop
xchg
push
adcl
dec
push
rcll
fisttpll
mov
cld
lea
push
popa
data16
cmp
dec
mov
out
xchg
pop
mov
pop
mov
je
xlat
lods
inc
es
sahf
loopne
adc
dec
push
lds
cmp
mov
cwtl
out
and
pusha
shrb
sbb
outsl
repz
jne
jo
cmpsb
sarb
mov
cmp
xor
and
hlt
movaps
push
enter
add
or
into
and
shrl
sarb
dec
mull
test
inc
xchg
push
push
mov
popa
test
jne
pop
dec
aas
int3
add
clc
loopne
stc
push
push
adc
inc
mul
das
nop
cmpsb
aam
xor
and
aam
cltd
mov
iret
repz
or
fnstsw
lahf
push
mov
jnp
sbb
push
loopne
sbb
jbe
subb
push
pusha
push
add
stos
sub
pushf
adc
addb
into
and
dec
mov
imul
out
xchg
popa
inc
lds
test
outsb
arpl
data16
lock
in
gs
or
sub
mov
jb
add
pop
push
mov
push
add
add
lcall
outsl
sbb
xchg
mov
fists
fwait
incb
mov
pop
lods
push
pushf
xor
mov
pop
es
bound
setp
out
adc
push
push
je
jns
jnp
test
mov
xor
push
mov
or
pop
add
inc
enter
pushf
sbb
iret
repz
push
sub
dec
push
in
jb
push
pop
rclb
in
and
cmp
mov
pop
push
and
loop
pop
cmp
popf
mov
popf
adc
out
repz
add
push
and
push
fs
lock
sbb
mov
cmpsb
inc
sahf
pop
ror
pushf
mov
xchg
dec
dec
sar
push
inc
imul
cld
sbb
ret
adc
repz
fisttpll
fisubl
add
pop
push
lods
cmp
add
add
xor
jmp
pushf
and
pusha
jae
cld
bt
jb
sbb
mov
mov
lahf
inc
rclb
mov
ret
jg
popa
inc
in
icebp
cli
add
loopne
add
popa
fistpl
sbb
push
adc
and
pop
mov
shrb
dec
dec
jne
pop
push
cli
mov
or
ficompl
orb
sti
cmp
mov
inc
inc
cmp
or
inc
jo
sub
shll
and
xor
in
out
jge
cmp
add
lock
add
loopne
and
dec
inc
nop
mov
leave
popl
xor
inc
mov
lods
out
mov
in
je
loop
jmp
or
push
mov
das
xlat
mov
data16
pop
xchg
cmc
lret
cli
sub
jmp
out
leave
jmp
jmp
out
and
dec
dec
std
mov
mov
or
ss
push
add
nop
pop
pop
pop
xor
jmp
add
out
cmpsb
adc
adc
shl
int3
xor
data16
pop
or
jmp
outsb
sub
lds
sbb
jo
mov
iret
ds
fildl
push
jg
fdivrs
jb
push
fiadds
jecxz
sub
jg
sub
pop
add
pop
adc
pop
in
jg
mov
rolb
aaa
lcall
push
jg
and
mov
mov
pop
jg
mov
pop
cmp
jne
push
dec
add
or
inc
jne
or
neg
ret
add
push
push
push
popa
gs
imul
push
or
cmpsb
insb
jmp
fcomps
pushf
sub
add
ds
das
cmp
cmp
je
data16
and
mov
popa
jl
or
add
cmp
sti
jmp
sub
jne
outsl
and
pop
pop
or
xor
cmc
jo
jno
add
enter
jl
mov
lock
adcl
stc
add
sub
and
xchg
and
or
adc
mov
cld
jne
cmp
cwtl
mov
xor
lea
fprem
pop
inc
adc
outsb
jecxz
mov
dec
clc
sub
dec
out
ss
jno
and
sub
inc
lret
mov
push
and
sbb
add
dec
and
xchg
sub
pop
push
mov
and
inc
cmp
jl
mov
adcb
pop
and
es
imul
je
jmp
dec
inc
clc
es
lret
inc
mov
in
sbb
or
sub
mov
jg
and
call
movb
inc
ret
enter
push
test
sbb
rcrb
or
pusha
push
add
js
mov
and
pop
jne
out
or
mulb
test
pop
push
out
add
mov
inc
mov
repz
pop
imull
ja
pop
je
ucomiss
inc
dec
jne
jmp
mov
mov
repz
jmp
adc
iret
and
fcmovb
mov
dec
rcrl
test
xlat
dec
pop
push
or
jne
sarb
inc
xchg
mov
ljmp
ret
mov
xor
ds
jb
push
pop
mov
push
mov
ljmp
jbe
add
mov
sub
jmp
mov
dec
jne
push
inc
ljmp
mov
insb
roll
inc
add
andw
cltd
add
stos
scas
lods
dec
scas
in
cltd
jns
shr
mov
scas
jp
add
inc
mov
mov
out
in
adc
mov
fcompp
leave
push
mov
mov
mov
in
fcoms
pop
scas
adc
push
or
dec
test
nop
cmpsb
inc
mov
je
mov
add
pop
dec
mov
adc
push
cs
je
inc
xor
mov
mov
negl
adcl
ja
xchg
int3
inc
data16
cmpsb
mov
add
and
outsb
add
mov
outsb
dec
jmp
lods
sub
mov
push
add
loope
jnp,pt
xchg
daa
andl
or
je
pop
fadd
faddp
subb
add
shrl
clc
fistps
fdivr
call
test
add
lock
fnstcw
rcrl
jp
add
ret
ffree
ffree
ffree
pop
and
out
jne
sarb
jge
and
pop
orl
add
and
sub
push
enter
dec
mov
fdivrl
push
loopne
add
add
scas
loope
mov
and
sub
add
adc
cld
lock
sbb
cld
js
or
xchg
js
pop
mov
push
sahf
pop
jbe
inc
push
loop
adc
push
gs
jbe
fcoms
adc
and
cmpsb
and
hlt
test
xchg
push
loop
and
add
mov
cmpsb
adc
adc
mov
leave
push
add
les
xchg
aam
imul
xchg
xor
cmpsl
mov
iret
lcall
pop
mov
adcb
pushf
jns
sub
mov
pop
sbb
push
das
jo
xchg
sbb
mov
add
fs
and
jbe
jo
stc
push
test
jmp
cmp
inc
jae
mov
call
sub
push
push
push
aas
lods
es
shl
mov
inc
loopne
inc
mov
loopne
add
loopne
jne
push
call
rcrl
clc
mov
es
stc
test
stc
and
or
push
mov
pushf
push
bound
jmp
xchg
dec
pusha
sbb
test
xchg
orl
mov
push
dec
or
and
stos
add
int3
inc
js
outsl
call
fldt
fcomps
setne
jmp
cmp
jbe
leave
push
dec
pop
cltd
test
imul
movb
and
dec
and
dec
add
add
xchg
push
adc
das
sub
and
fdivrs
add
in
sub
xlat
and
pop
adc
mov
sbb
scas
lods
mov
rorb
enter
adc
nop
outsb
mov
aas
mov
and
ja
push
xlat
test
sub
adc
and
inc
rcll
mov
or
movsb
pop
pop
dec
sub
inc
add
cmp
fisttpl
imul
adc
mov
adc
push
mov
pop
sbb
jp
pushf
and
push
push
lret
iret
pop
or
cmp
arpl
xor
jne
mov
je
cld
mov
cld
cmp
and
scas
adc
in
and
cwtl
ret
aam
mov
pop
aam
sti
adc
insb
jbe
sbb
gs
popa
faddp
lods
cmp
test
test
pop
sti
xor
call
or
jae
je
jnp
pop
pushf
lods
bound
scas
pusha
and
push
aad
add
daa
push
call
loopne
and
dec
or
push
and
xor
inc
sahf
inc
add
test
adc
mov
rorb
movsb
or
inc
xor
or
fisttpll
dec
dec
inc
popf
xor
roll
dec
push
lea
mov
enter
fistps
mov
push
adc
sub
dec
or
enter
sub
push
or
add
push
mov
clc
cld
push
jnp
jecxz
rolb
insl
push
xchg
xor
sbb
inc
hlt
adc
sbb
jae
mov
lds
lock
and
ret
in
adc
inc
and
cmp
mov
neg
and
ljmp
lods
lret
xchg
test
jne
test
je
test
jne
lea
call
ret
or
mov
or
dec
jns
push
push
data16
and
call
sbb
cld
add
xchg
sbb
out
or
setg
inc
cmpsb
cltd
fisubrs
rcrl
ds
xlat
push
fdivrs
das
mov
lock
dec
pusha
stc
pop
add
jmp
fisttpll
dec
xchg
mov
mov
mov
inc
lock
mov
sbb
loop
aad
sbb
adcl
mov
xlat
repnz
iret
mov
out
cmp
mov
xor
cmp
dec
push
in
movsb
data16
add
aad
push
xor
xor
fidivrs
neg
je
cli
xor
cmp
jae
aaa
aas
movsb
imul
rcl
ret
mov
jp
cmp
xlat
insb
inc
push
jb
fs
adc
pop
pushf
push
cltd
dec
inc
cmp
scas
pusha
jmp
fiaddl
fisubrl
repnz
mov
shr
or
push
and
shll
pop
xchg
rcrb
or
lahf
lock
push
test
idiv
insb
lock
icebp
pop
pop
add
imul
fisubs
sub
mov
sti
das
push
not
dec
je
mov
mov
and
icebp
jbe
push
lea
add
lock
pusha
fldcw
add
pop
push
mov
jne
lea
push
pop
pop
add
shlb
call
cmp
aaa
or
sub
xchg
cs
xor
add
adcb
pop
and
pushf
inc
and
sbb
sbbb
sbbl
je
lock
push
scas
push
aad
mov
pop
iret
mov
cmp
push
push
add
insb
cmp
fsub
das
sbb
push
or
pop
pop
jns
addr16
pop
popa
or
inc
mov
jne
add
lahf
insb
outsb
ja
dec
lahf
js
mov
icebp
aas
xor
mov
adc
out
jmp
pop
inc
dec
fsubrl
mov
inc
or
xchg
push
js
lods
lahf
adc
xchg
icebp
push
or
cmp
jno
aad
sub
stos
push
push
push
idivl
sbb
imul
pusha
loope
inc
and
pop
mov
dec
incl
aad
mov
xchg
adc
aas
push
sub
and
punpcklwd
mov
test
inc
shlb
push
mov
adc
add
jge
pop
sahf
hlt
sub
dec
std
dec
cld
lea
loopne
ss
mov
mov
dec
cmp
jmp
lcall
push
mov
dec
jno
ja
dec
push
sub
clc
adc
fists
mov
lock
add
adc
mov
mov
push
push
rolb
push
jo
mov
xchg
jle
adc
jmp
cld
sbb
in
addl
mov
pop
push
lret
clc
ja
push
mov
add
repnz
rcrl
adc
ja
mov
arpl
enter
jb
nop
dec
adc
inc
out
sbb
cmp
adc
out
push
cmp
cmp
adc
dec
jne
std
dec
lock
mov
sub
sbb
push
add
lock
adc
sahf
in
data16
ljmp
mov
or
mov
cmp
es
adc
cmpsl
sbb
mov
stos
fnstsw
xor
push
push
sbb
mov
add
dec
sub
jae
inc
jge
sub
ljmp
lret
add
xor
fisubs
mov
mov
and
cmp
fwait
or
cmpsb
dec
je
sub
or
add
or
sbb
ja
imul
sub
iret
roll
and
pop
pop
pop
pop
xor
sbb
jg
xchg
jl
mov
sbb
je
dec
fadd
and
mov
shlb
add
insl
ret
mov
fimuls
add
and
test
int3
cmp
push
dec
mov
cmp
mov
aaa
imul
fmulp
js
push
in
xor
test
out
mov
sbbb
cmc
mov
sub
loopne
inc
xchg
out
sahf
std
cs
xchg
pop
sbb
imul
out
bound
and
movsl
je
jno
in
cwtl
in
idivl
add
cmp
jne
jbe
mov
adc
cmp
adc
ljmp
pusha
loopne
fs
movsl
test
mov
xor
inc
sub
mov
mov
lahf
jns
mov
add
push
pop
jg
std
in
inc
mov
mov
or
adc
fstps
add
dec
loopne
mov
fnstsw
inc
ret
jecxz
lcall
mov
lcall
xchg
pop
inc
jbe
clc
and
xchg
fdivs
outsl
jg
jl
xor
je
mov
or
je
mov
inc
je
dec
and
mov
dec
xchg
loope
mov
mov
ret
lret
cmp
jne
fcoms
pop
fisubrl
mov
xchg
xor
mov
mov
dec
iret
mov
addr16
out
in
sar
add
or
add
push
int3
stos
xlat
bswap
ret
jb
or
adc
lods
dec
or
stos
push
cld
pop
js
push
xor
stos
or
jne
shr
xchg
fsubrs
neg
jmp
or
je
mov
stos
xchg
push
mov
dec
mov
fnstsw
dec
and
mov
inc
dec
cmp
add
clc
decl
leave
jg
dec
mov
stos
cmp
jne
pop
mov
fwait
mov
mov
in
sub
adc
adc
fsubrl
cmpsl
rolb
and
sbb
shr
inc
shl
aam
ds
xor
in
pushf
fwait
in
mov
sbb
in
ss
push
push
push
mov
xchg
jae
psubd
push
repz
push
repnz
adc
pop
adc
and
and
jle
test
scas
fs
dec
jge
cli
adc
sbb
adc
lods
enter
adc
nop
push
sub
lcall
repz
repz
jne
mov
sub
ss
sbb
adc
ja
movswl
mov
aad
arpl
ret
popf
aam
pop
rcrb
or
js
call
lret
jmp
cld
lahf
xchg
xlat
xor
push
xchg
decb
inc
dec
inc
dec
lods
or
sub
or
dec
xchg
jge
int3
es
adc
dec
aam
sbb
jg
cmp
jl
mov
mov
mov
stos
neg
sbb
stos
jmp
ja
jge
decl
clc
movlps
pop
pop
inc
fstps
push
xchg
shr
mov
sub
ljmp
jbe
xor
dec
sub
mov
das
clc
leave
mov
mov
mov
add
lock
and
cli
adc
mov
pusha
aas
es
scas
je
mov
nop
jge
enter
repz
inc
test
je
jne
sbb
mov
stos
xor
cmpsl
sbb
push
sti
add
data16
std
dec
je
inc
jne
pop
dec
jne
ret
xchg
repnz
int
xchg
or
repnz
jl
dec
pop
mov
or
pushf
fwait
popa
mov
mov
inc
je
push
push
cmp
cmp
mov
subb
stos
dec
lods
dec
pop
add
mov
inc
loop
ret
jle
fisttpl
shrl
mov
and
inc
add
and
fcomi
jge
and
adc
and
sub
inc
sub
fdivr
jbe
sub
sbb
into
cmp
sub
sub
jns
fs
xor
sub
xor
popl
add
shll
test
jle
dec
dec
fisttps
cmp
lods
cmc
pop
adc
ret
movsb
cmp
add
and
inc
push
adcb
mov
and
or
xor
inc
cmc
cmpsb
call
clc
fldt
je
imul
dec
cmp
or
enter
leave
and
call
fldt
fstsw
fwait
mov
jg
cmc
scas
idiv
je
fidivl
jne
lea
mov
or
mov
nop
shr
and
icebp
in
pop
push
xor
stos
mov
add
jns
jp
adc
sti
and
jge
pushf
or
mov
adc
cmpb
jb
movb
js
decb
and
cmp
jmp
sub
leave
jmp
mov
cmp
inc
xor
push
or
add
fimull
jecxz
and
out
mov
dec
ljmp
rorl
test
sub
push
neg
neg
sbb
rolb
add
or
mov
xor
adc
jl
mov
cmpsl
sbb
mov
loopne
jae
dec
add
mov
fistpll
in
mov
or
mov
cmp
mov
pop
jo
or
mov
jne
mov
sbb
sub
mov
and
jne
dec
mov
jmp
mov
add
aas
and
mov
ljmp
enter
popa
shll
jbe
pop
jmp
add
je
mov
iret
inc
sub
sahf
test
mov
jns
fwait
test
push
inc
incl
sbb
ljmp
lods
or
outsb
xchg
add
cmp
or
lock
dec
and
fistpll
sub
scas
not
pop
add
jg
jne
mov
sahf
dec
xchg
add
push
mov
add
loopne
adc
aas
jmp
fstpt
dec
popa
daa
scas
fs
mov
mov
andl
jmp
push
add
out
int
cmp
mov
ljmp
pminub
inc
dec
add
fldpi
ljmp
loopne
incl
push
push
inc
imul
push
cmp
push
nop
jb
aaa
add
stc
jl
cmpsb
sbb
mov
pusha
rcl
mov
mov
push
lret
push
xchg
outsl
out
push
lcall
mov
push
jae
push
adc
inc
lods
xorb
push
adcb
push
jb
sbbl
cmpsl
lods
lahf
aad
add
adc
mov
or
cmpsl
lea
mov
jge
mov
fldt
sub
fldenv
adc
mov
jae
xor
dec
push
fstpl
fwait
mov
aas
cmp
fbld
jae
fstpt
inc
add
xchg
pop
xor
mov
add
and
fldenv
pop
shrb
data16
leave
jle
pop
movsl
in
pusha
je
mov
push
in
stos
inc
ja
fistpl
cwtl
pop
in
test
sbb
sti
divl
push
adc
roll
pop
addr16
divb
movb
sbb
or
or
cli
cmp
inc
stc
inc
xor
fisttps
push
imul
lds
mov
pusha
ljmp
ss
add
or
fdiv
jle
loopne
cwtl
ret
xchg
or
sbb
add
sub
pop
roll
pushf
xorb
adc
add
add
shll
lea
mov
lea
push
mov
push
cmp
mov
jno
mov
add
pop
movsl
fidivs
loopne
jo
adc
addb
in
mov
stos
jp
and
mov
adc
test
and
insl
cmp
mov
sub
les
or
dec
inc
cld
dec
adc
inc
test
lods
addb
add
daa
ja
and
jb
or
jb
sti
pop
jo
insb
je
cmp
ja
adc
jle
iret
add
inc
dec
jne
sub
loopne
mov
aas
cltd
idiv
imul
pop
adc
pop
ret
cli
add
repnz
push
or
cmpl
push
ret
popa
jo
mov
sub
adc
xchg
xchg
andb
sbb
movsl
mov
call
adc
dec
sarb
inc
pop
dec
ficoml
hlt
or
dec
in
xchg
into
mov
inc
pop
inc
call
data16
add
popf
jne
outsb
inc
add
sbb
add
and
pop
mov
lods
mov
pop
pop
lock
or
dec
lock
imul
pop
inc
fs
push
sub
mov
mov
fimull
les
sbb
and
ss
sub
cmpsb
mov
ret
imul
dec
fsubrl
cmp
jb
test
mov
sbb
fisttps
sbb
subl
call
pop
adc
aad
mov
and
inc
sbb
popa
mov
pop
shll
cmp
gs
mov
mov
push
int3
and
bound
cmovbe
inc
jg
mov
inc
rcrb
cwtl
aad
fimull
mov
and
add
lret
or
inc
bound
repnz
es
xchg
pop
push
dec
cmp
xorl
xchg
sbb
mov
call
push
push
and
ret
mov
aam
pop
fmuls
push
or
adc
and
jnp
out
enter
add
add
sub
je
mov
or
mov
dec
ljmp
cmp
ret
xchg
loopne
mov
in
cmpb
jne
pop
orb
adc
mov
lea
or
cmpsl
push
rorb
inc
jecxz
outsl
loop
pop
cs
ret
push
fdivrl
idiv
mov
jae
mov
loop
xlat
adc
loope
out
sbb
lea
jle
ror
aam
xchg
cmp
addr16
cwtl
inc
add
adc
pop
sahf
cli
repnz
test
cltd
cmpb
lods
sbb
pop
xchg
scas
in
mov
sahf
dec
dec
insb
mov
mov
mov
daa
pop
mov
mov
mov
es
into
add
or
mov
call
dec
or
jno
cmp
sbb
jne
sub
jno
sub
mov
dec
add
xor
cmp
add
inc
xchg
cltd
lahf
jmp
lcall
out
mull
xlat
js
sbb
jmp
pop
mov
pop
mov
in
push
add
inc
pop
add
jo
pop
call
enter
jg
leave
push
adc
xor
js
mov
jne
or
xor
rcll
adc
add
popa
inc
dec
push
fmul
sub
jns
outsl
add
mov
das
pushl
mov
add
adc
and
mov
mov
popw
icebp
mov
inc
cmp
push
pop
incl
outsb
loopne
call
fdiv
inc
js
xchg
ljmp
add
jb
movlhps
divb
js
imul
adc
mov
pop
ljmp
call
adc
orb
dec
jne
mov
fdivs
mov
fs
fimuls
or
add
ja
pop
adc
icebp
cmp
and
sub
or
inc
fsubp
or
or
pop
mov
or
push
popa
inc
test
or
repz
add
mov
js
iret
repz
into
sub
pop
mov
hlt
mov
rol
out
adc
int3
add
mov
fcompl
lock
cmp
xchg
mov
mov
pop
pop
adc
inc
ret
and
lds
dec
push
lea
mov
push
and
pop
mov
aam
adc
aam
dec
sub
jmp
pushf
inc
sbb
xor
mov
in
sub
or
xchg
xor
mov
je
add
jmp
out
add
cli
push
pop
dec
sahf
adc
popf
push
dec
push
pop
dec
lock
pop
jb
or
and
mov
ficomps
in
xor
mov
lcall
sub
nop
adc
sbb
adc
call
and
add
push
jmp
jecxz
dec
mov
sub
jmp
cmpb
dec
mov
aam
ret
andl
sub
mov
jmp
add
push
mov
and
mov
or
push
sarb
rcrb
je
push
or
fmull
xor
out
add
or
or
add
mov
or
xor
or
inc
and
push
sub
movb
cmp
in
xchg
je
add
ret
xor
push
xchg
loope
and
divl
xor
xchg
push
pop
xor
push
andl
sbb
lds
xchg
inc
jns
xchg
fs
add
sbb
xchg
xor
jae
iret
push
push
jmp
and
shll
lea
push
cltd
mov
add
jb
aam
mov
js
fucomp
out
loope
push
or
test
adc
jmp
scas
push
hlt
jmp
mov
adc
popf
pop
in
cmpb
mov
imul
insb
dec
mov
ljmp
mov
cmp
stos
in
pop
adc
sub
addl
xor
or
pusha
cmp
jne
push
mov
in
sub
pop
cmc
dec
or
jae
adc
sahf
pusha
push
std
cmp
pushl
clc
cwtl
mov
pop
jno
rcl
jmp
add
cmp
stos
lods
sub
das
lcall
adc
dec
and
add
inc
mov
aas
clc
loope
sbb
xor
sub
sbb
les
mov
push
sbb
rcr
lea
or
and
mov
arpl
rcrl
pop
dec
adc
sbb
fmuls
lahf
mov
fimuls
ffreep
rcll
sbb
push
xorb
push
or
popl
xlat
inc
ret
and
jge
adc
nop
rolb
jl
clc
ljmp
loop
aas
sbb
adc
aam
jo
adc
jae
divl
cmp
jle
js
sub
add
fsubl
pop
mov
in
xchg
nop
aam
xor
es
inc
pop
in
inc
or
sahf
lock
add
jb
aad
add
or
cmpsb
lock
arpl
adc
icebp
iret
test
dec
hlt
hlt
arpl
hlt
cltd
fmuls
dec
mov
test
add
out
adc
repnz
aad
inc
cmpsb
in
mov
push
stos
push
and
pop
inc
in
mov
adc
cmp
jl
fstpl
push
jne
incl
mov
xchg
adc
adcb
dec
and
push
mov
sbb
idivl
mov
sbb
dec
je
adc
je
or
fucomi
cli
je
jmp
mov
and
sbb
jmp
fcoms
shll
notb
cmpsl
lock
xor
xlat
repnz
sbb
lahf
out
loopne
push
js
push
in
add
pusha
mov
jl
cmp
sub
inc
aad
outsb
add
cmpb
mov
mov
pushf
or
add
lods
lods
sbb
inc
mov
out
mov
dec
adc
scas
les
pop
jecxz
and
into
mov
or
ds
sub
jl
aad
pop
cs
mov
or
dec
or
mov
inc
mov
mov
clc
aas
leave
cmc
test
jne
cmp
jg
mov
cli
notl
cltd
xor
sub
add
ss
xchg
aad
add
fs
int3
xor
jle
mull
xor
notb
call
add
xor
scas
jecxz
aam
aam
js
jno
xor
lock
fwait
stos
les
out
inc
sub
not
out
imul
add
pop
loopne
mov
aaa
rcll
cwtl
shr
pusha
ja
mov
sbb
mov
insl
mov
jne
les
xor
mov
cmp
jmp
mov
mov
popa
add
bound
fadd
or
aad
mov
js
mov
repz
enter
add
dec
cmp
dec
ljmp
add
call
out
sub
jb
and
pusha
cmp
shl
pop
shlb
es
loopne
in
cltd
fmul
imul
ljmp
iret
jae
in
sbb
jecxz
mov
xor
ss
mov
dec
pop
cmp
mov
or
ja
cmp
xchg
sub
mov
add
mov
xor
jbe
jl
enter
fs
pop
or
in
jno
mov
add
or
xor
add
ja
cmp
popa
adc
sbb
and
cmpsl
mov
pop
dec
sbb
test
cmc
sub
mov
out
fadds
and
data16
and
jmp
mov
mov
mov
inc
cmpsl
or
mov
fcomps
and
jp
push
push
xor
aam
xchg
icebp
and
aam
insb
jne
je
lock
push
out
inc
push
mov
mov
xor
mov
gs
mov
add
push
cmpsl
lock
orl
gs
mov
jecxz
lods
adc
dec
fisubrs
and
push
out
add
xchg
insb
pusha
add
ret
sub
or
mov
pop
lea
rcr
dec
add
xor
or
and
pusha
cmp
fmuls
je
test
add
pusha
pop
dec
or
pop
jb
xlat
add
pop
sbb
push
test
push
push
sahf
shl
enter
ja
jne
adc
faddl
sbb
data16
popl
popf
loopne
push
pop
sub
push
scas
gs
mov
adc
inc
iret
daa
adc
popa
jb
arpl
pop
test
fdivp
clc
into
push
inc
pop
xchg
lret
aam
int3
pop
sub
add
test
rcll
jo
stos
ret
lea
out
xor
pop
push
cmp
add
and
ljmp
adc
aas
aas
jge
add
push
shll
out
les
pop
into
mov
jmp
fldl
jnp
add
fbstp
sbb
cld
or
or
inc
push
rcr
lahf
bound
inc
aas
push
sbb
push
mov
or
push
sbb
daa
jmp
jmp
call
push
out
and
or
movsl
mov
lret
xchg
inc
add
dec
mov
call
and
movsb
xchg
sbb
sbb
dec
pushf
or
jbe
inc
cld
xchg
jmp
add
xchg
shlb
add
sbb
jno
dec
pop
lock
out
inc
mov
inc
lods
and
sub
inc
add
and
dec
jnp
mov
push
add
mul
daa
subb
js
sbb
xor
test
push
push
push
mov
adc
pop
inc
inc
dec
lret
push
pop
sub
dec
push
hlt
jbe
nopl
lock
sub
xchg
movl
push
sti
or
hlt
pop
add
out
out
xchg
push
scas
shlb
add
movsb
stc
es
loope
dec
call
mov
jne
dec
cli
xchg
dec
loope
cmpsb
jae
fldl
add
xor
adc
jl
je
xchg
cmp
cmp
in
add
cmpsb
add
sbb
adc
insl
divl
test
push
outsb
mov
incl
mov
cwtl
rorb
pop
leave
and
loop
clc
mov
push
jecxz
mov
cmpsl
mov
mov
mull
cmp
insb
js
add
std
sub
add
pop
cmp
add
das
push
mov
pop
les
xchg
jo
pop
dec
jne
push
push
inc
and
pop
jecxz
pop
shrb
lret
mov
dec
mov
xchg
mov
cmp
or
or
adcb
mov
sub
jg
fwait
and
je
mov
shlb
sahf
inc
je
call
and
in
push
test
cmc
jle
mov
aad
pop
sbb
xlat
sbbw
jp
int3
inc
adc
pop
sub
adcb
add
add
iret
mov
mov
hlt
mov
aaa
dec
adc
fdivs
addr16
mov
std
pop
jns
add
jmp
mov
cmp
addr16
out
cmp
and
xchg
je
jne
inc
sub
insb
aam
jmp
int3
jge
call
jle
test
stos
in
dec
jne
lds
les
iret
pushl
xor
mov
sub
push
add
aas
add
mov
mov
sub
adc
sub
xchg
xor
out
test
mov
fldcw
cmpl
or
in
outsb
ret
in
loope
int3
dec
pushf
push
shlb
xor
mov
pop
movsl
sub
or
popf
xchg
call
push
popa
in
rcrb
enter
int3
aaa
mov
lods
xor
push
and
hlt
or
and
mov
mov
or
xchg
mov
jno
loopne
jnp
stc
les
xorb
shrb
loope
mov
xchg
pop
jle
or
sub
or
test
and
lods
or
mov
mov
add
mov
rcrb
shlb
xchg
mov
xor
mov
push
cmc
out
out
mov
or
in
mov
outsb
arpl
sub
cltd
jle
into
or
mov
cmpsl
xor
mov
jp
or
hlt
lds
js
jbe
xchg
mov
in
inc
nop
push
push
and
cmp
loopne
mov
in
xor
cmp
or
addr16
cmp
stc
pushf
xor
mov
test
add
mov
xchg
shrl
sub
xor
loope
sbb
sub
stc
xor
add
cmp
das
int3
ucomiss
notl
les
test
pop
adc
ja
nop
sub
loop
into
ja
add
jnp
ljmp
sub
xchg
sub
test
push
ljmp
pop
inc
cmp
dec
lea
stc
mov
sarb
call
xor
adc
roll
fcomip
sub
das
inc
mov
xchg
push
jl
pop
fisubrl
xchg
inc
gs
les
into
std
fistl
cmpb
sbb
les
les
or
pop
arpl
or
je
shlb
fistl
scas
pop
jp
add
sub
fcos
ss
shrb
cli
arpl
pop
or
add
cmpsl
or
verr
sbb
push
adc
sub
insb
mov
push
sub
or
adc
leave
xchg
and
or
out
and
jg
pusha
fs
jg
cmp
in
sbb
sbb
aam
mov
fsub
jmp
push
shr
cs
push
push
or
fisttps
mov
pop
pop
das
or
decb
push
push
push
jb
jmp
pusha
nop
push
or
adc
ljmp
dec
push
adc
push
xorb
xchg
xor
add
pusha
push
insl
pop
aaa
adc
rolb
outsb
jmp
divb
movsb
mov
jmp
rcrb
loopne
add
xchg
adc
enter
mov
mov
int
std
xchg
mov
inc
call
or
jge
clc
inc
ficomps
es
push
loopne
and
push
rorl
lods
xchg
and
scas
data16
in
loopne
call
push
ret
mov
or
gs
cmp
push
fdivl
addr16
aaa
mov
in
enter
mov
xchg
mov
mov
add
push
cld
and
jb
cmp
je
jmp
xor
inc
mov
sub
jmp
and
sbb
add
push
shll
or
or
mov
fs
mov
mov
ficoms
or
test
xor
mov
lds
nop
jne
sub
pop
inc
add
jae
testb
pop
xor
push
dec
adc
mov
mov
sbb
adc
lahf
mov
sbb
cli
mov
xor
xor
adc
add
mov
and
add
jae
adc
out
lret
enter
lods
rcrb
xchg
xchg
imul
jmp
sub
jb
mov
pushf
mov
gs
add
leave
mov
ret
cmpb
sub
fst
push
mov
divl
and
lock
std
cmp
sub
out
pusha
push
sub
jae
imul
outsl
neg
cmp
cld
pop
adc
mov
rcr
movsb
dec
ret
hlt
add
mov
mov
and
cmp
mov
inc
sbb
pop
addb
jmp
pop
enter
xchg
lock
inc
xor
rolb
or
and
push
mov
insb
jb
mov
test
jns
xchg
andb
shrb
adc
pop
shl
out
and
out
mov
cld
pop
sahf
fldl
adc
pop
mov
in
imull
add
imull
mov
add
add
aaa
les
adcb
or
mov
ror
dec
adc
cmp
enter
insb
pop
cltd
or
xlat
int3
and
adc
xor
loopne
push
push
mov
shrb
iret
in
push
in
imulb
push
sub
mov
inc
lret
cmp
fdivs
ds
and
adc
cmp
add
adc
sub
sbb
imul
jle
jne
out
test
les
mov
push
xor
lahf
jmp
lahf
fnstsw
add
or
fnstenv
pop
clc
insl
and
push
loope
push
xchg
push
cmc
test
ja
clc
xchg
sub
adc
in
jbe
jb
xchg
sub
push
inc
loope
inc
das
lcall
jne
sbb
pop
mov
ret
or
fisttpl
jmp
sbb
lods
shrl
push
adcb
dec
testb
xchg
mov
xchg
cmp
ret
mov
and
loope
adc
cltd
dec
jns
cmp
inc
jne
pusha
mov
or
inc
cwtl
lds
insl
mov
les
or
xchg
jecxz
mov
mov
ss
in
inc
ror
inc
adcb
pusha
shlb
mov
and
adc
call
xchg
das
fcmovnu
jp
add
and
mov
dec
lods
cli
push
adc
push
loopne
or
addb
int3
mov
fidivrs
add
jne
cmp
nop
sarl
test
jp
cmc
mov
inc
and
pop
cwtl
sbb
pop
dec
dec
int3
pop
push
pop
and
pusha
jae
popf
imul
push
sbb
dec
clc
imul
and
xor
cmp
dec
xor
xor
popa
sub
mov
leave
insb
inc
imul
test
outsl
enter
pop
sub
xchg
sub
lock
sub
and
xor
or
icebp
mov
jecxz
insb
jge
inc
adc
inc
sbb
subl
jg
sub
mov
push
xor
test
jne
jg
aas
cmp
lcall
ret
jle
ds
aam
inc
or
ret
sbb
hlt
addr16
inc
mov
dec
add
clc
aaa
add
pop
mov
mov
aas
dec
aas
inc
xchg
outsb
add
pop
lock
dec
dec
outsl
xor
jge
mov
jne
or
mov
dec
push
pop
mov
out
jns
adc
rcl
xchg
xor
pop
cmp
sbb
dec
and
mov
cmp
insl
sbb
or
bnd
insl
sbb
sub
sub
pop
xchg
lea
mov
repnz
dec
mov
jle
lods
mov
lahf
sahf
hlt
push
xlat
sbb
dec
mov
test
and
xor
nop
inc
inc
xchg
inc
fsubrp
dec
int
int3
adc
nop
cli
jle
stos
add
sbb
xchg
arpl
in
sbb
rorb
pop
adc
inc
sbbb
jbe
das
jmp
fdivr
int
sbb
push
js
arpl
ret
jne
push
xadd
sti
arpl
push
ret
pop
jg
adcb
add
dec
adc
aam
xorb
ja
add
sbb
xor
mov
xor
pop
sbb
repz
mov
ljmp
aaa
sti
clc
nop
sub
add
xchg
and
and
mov
xor
rorb
mov
rorb
cld
mov
fldenv
fst
sbb
push
cmp
filds
mov
cmp
mov
add
mov
mov
insb
mov
and
push
scas
push
dec
scas
sub
movsl
aaa
mov
pop
sub
sbb
inc
sbb
bound
ljmp
jne
jle
or
or
imul
xlat
xchg
in
mov
add
add
mov
into
out
add
add
or
lret
push
mov
data16
pushf
and
adc
sar
add
call
sar
xor
adc
jmp
cmp
fadds
emms
add
movb
mov
dec
sbb
xchg
rorb
sub
jno
jbe
pop
es
enter
clc
xor
and
into
dec
jne
push
or
stc
inc
cli
mov
rol
ss
shl
sub
dec
mov
into
push
adc
mov
ficoms
mov
cmp
or
fcomps
daa
in
sub
cmpsl
mov
std
or
and
push
mov
jl
movsb
cmp
js
mov
sbbb
and
aaa
enter
das
sbb
pop
fsubr
pop
outsb
push
cmp
insb
loopne
pop
add
dec
aam
add
and
dec
lcall
cmp
add
rolb
sub
mov
dec
movsl
inc
inc
sub
mov
test
hlt
add
enter
leave
sub
push
add
dec
fidivs
sbb
dec
fwait
les
ret
adc
in
mov
clc
mov
nop
pushl
cld
push
inc
insb
push
hlt
mov
in
dec
pop
cmp
adc
push
mov
lahf
daa
lds
inc
sarb
iret
pop
loopne
push
arpl
push
insl
fs
out
sub
add
inc
sub
push
xor
add
or
fiaddl
jo
push
inc
push
push
xor
xor
sub
inc
or
inc
mov
daa
or
add
and
mov
sbb
jae
movsb
adc
add
add
aaa
push
inc
fcomps
or
fs
gs
outsb
test
adc
int3
add
sahf
mov
add
pop
call
jno
popa
imul
into
jbe
mov
add
popa
lock
and
rol
pusha
push
dec
sbb
outsb
sarb
inc
inc
loope
shr
or
mov
movzwl
xor
inc
dec
push
test
cmp
fcmovb
in
ret
cs
or
or
push
rolb
cli
push
sbb
inc
jl
pop
icebp
ret
jg
or
xor
inc
jmp
pop
pop
pop
ret
pop
push
dec
repnz
inc
imul
or
xlat
jl
mov
lahf
pop
push
sub
adc
cmc
or
push
sbb
ss
and
js
fmuls
inc
xor
sub
jb
add
jbe
je
or
sbbb
and
call
inc
xor
cwtl
test
jbe
cmpl
andb
dec
adc
int
mov
jmp
cmp
lea
push
adc
mov
ret
mov
std
add
adc
adc
mov
add
inc
cmp
ret
popf
sub
fcmovu
mov
dec
mov
xchg
cmp
mov
popfw
loop
inc
in
adc
adcl
rorl
adcl
sahf
sbb
mov
pop
int
sbb
and
or
adc
xlat
enter
in
in
sub
push
xchg
push
movb
pushf
xor
jo
out
iret
fsubl
clc
pop
fsubs
cld
adc
add
pop
adc
flds
xchg
push
adc
xchg
pop
add
jae
mov
ret
or
dec
scas
stos
add
in
sbb
dec
add
push
jno
xchg
movsl
add
push
mov
xor
mov
dec
ss
orl
ljmp
jg
cmp
mov
inc
aam
aad
push
xchg
lret
test
push
aas
push
push
cmpsb
pop
push
aaa
les
aad
lods
or
or
and
les
je
imul
dec
inc
gs
pop
mov
pop
arpl
inc
rclb
pusha
mov
adc
icebp
push
pop
sbb
jne
insl
mov
mov
test
enter
mov
and
cs
cmp
idiv
cmp
inc
cmp
jne
movzbl
dec
xor
stos
cmpb
add
mov
xchg
mov
xor
and
xchg
mov
inc
sub
dec
cmc
int3
xchg
cmc
cld
push
mov
add
add
add
dec
insl
adc
in
dec
jne
add
pop
call
mulb
lods
popf
push
pop
sbbb
inc
movl
int
fs
inc
mov
stos
xchg
lock
and
ret
mov
daa
mov
add
sub
add
push
adc
fdivs
insl
mov
loopne
and
lea
lahf
push
push
outsb
addl
or
adc
aaa
call
shlb
dec
out
mov
cmp
inc
dec
sub
adc
sbb
jbe
cwtl
scas
add
lcall
lock
xor
in
inc
pop
sbbl
and
mov
outsb
leave
mov
imul
lret
loopne
push
sbb
add
neg
pop
adc
inc
or
nop
call
mov
add
clc
and
pusha
xchg
les
pop
pop
or
xchg
ret
iret
bound
cmc
jl
push
add
xchg
fisttps
mov
test
xor
xor
inc
jne
mov
mov
dec
cmp
clc
call
inc
push
pop
add
dec
sarl
dec
sbb
jnp
or
test
jo
stc
ret
dec
mov
mov
or
shlb
jp
pop
xchg
jb
inc
incl
mov
pop
and
inc
and
inc
idivb
add
aas
test
jmp
inc
jecxz
orb
mov
dec
notb
mov
pop
xchg
or
dec
or
dec
ss
xor
rcll
cmp
xorb
pushl
pusha
sub
xor
in
movsb
or
xor
adc
loopne
lods
push
dec
inc
repz
push
scas
or
mov
pop
enter
fistpl
cmc
xor
adc
push
jne
fstp
xchg
push
sbb
outsb
jl
mov
out
sbbl
mov
jmp
jge
and
or
add
sti
movsb
out
jecxz
pop
jmp
sarb
mov
and
and
bnd
je
ret
popa
mov
add
jb
add
mov
push
pushf
sbb
sti
or
jo
and
xchg
or
enter
orb
ds
adc
pop
popf
add
pusha
mov
sub
adc
out
das
dec
dec
cmp
ja
inc
ja
int3
adc
fdivrs
or
mov
mov
jle
sub
push
loopne
dec
dec
pop
cmp
jmp
dec
mov
sub
lea
orb
inc
bound
cmp
cmp
pop
add
enter
jg
push
scas
sti
in
or
int3
dec
and
mov
sub
or
lock
pop
adc
in
and
test
dec
mov
shlb
sub
adc
fidivl
pop
stos
andb
mov
inc
push
repnz
add
and
push
mov
mov
xor
adc
xor
hlt
popa
jb
xor
push
pop
ret
pop
fwait
or
jge
mov
or
aam
lcall
dec
pop
pop
sub
mov
add
subb
test
or
jne
add
leave
push
jg
push
sbb
push
add
adc
push
enter
clc
push
pop
sub
lahf
or
jbe
mov
push
bnd
xor
cwtl
sbb
stc
incl
mov
outsl
or
rorb
inc
ss
pop
pop
mov
cmp
jge
lock
adc
test
daa
fwait
subb
add
mov
adc
jbe
jne
outsl
cltd
add
push
aam
pop
and
int3
and
cmp
jle
cld
pop
jo
outsl
iret
add
call
fdivr
mov
mov
lods
adc
adc
mov
xchg
push
or
adc
or
mov
inc
xor
cs
mov
push
inc
xor
cld
or
rcll
lock
or
xor
and
hlt
lock
pusha
mov
dec
xchg
dec
inc
lods
fisubl
jmp
add
sbb
push
in
dec
push
push
add
lods
adc
decl
dec
or
dec
js
sub
sbb
add
mov
push
gs
push
push
test
fmull
les
sbb
ret
sahf
aas
iret
imul
xlat
and
mov
rcll
pop
mov
pusha
rcrl
ljmp
and
pushf
insb
leave
and
in
ja
cmp
or
iret
push
je
push
mov
cmpsl
inc
addb
mov
call
sub
test
ret
mov
mov
ljmp
add
lea
inc
xlat
in
mov
adc
jl
dec
or
test
jo
inc
cld
das
add
add
insb
pop
enter
pop
or
inc
mov
add
dec
in
push
iretw
cmp
inc
or
push
adc
or
add
rorb
bound
in
outsl
adc
stos
icebp
outsl
sub
scas
push
aam
adc
push
fcmovb
ret
lods
inc
ret
sub
mov
ret
aad
pop
enter
inc
add
or
es
add
xchg
sub
add
cmpsb
addb
jmp
inc
nop
mov
fistps
and
movb
or
pop
pusha
pop
mov
mov
sub
add
pop
mov
add
rclb
dec
fsts
addl
lret
stc
and
out
and
lods
push
out
push
fcom
popf
or
outsb
mov
push
or
and
je
inc
push
xchg
loope
out
push
push
jl
dec
outsb
inc
pushl
sbb
mov
shr
mov
pushw
pop
sbb
sbb
dec
jne
jno
nop
arpl
data16
lods
std
or
rcrb
test
jl
inc
pop
xor
xchg
mov
inc
out
or
mov
push
pusha
jo
jne
jle
loopne
or
push
aam
inc
pop
xor
adc
push
cmp
lahf
sub
pop
and
jo
inc
iret
enter
pop
adc
pop
or
sarb
daa
add
lock
dec
mov
pop
ja
cs
in
in
repnz
popf
mov
xor
pop
das
dec
sahf
xchg
addr16
mov
dec
movsb
pop
pushf
inc
loopne
out
popf
xchg
mov
popf
mov
push
jo
jns
iret
enter
xor
and
out
cmp
mov
popf
cmp
iret
dec
pop
inc
inc
sub
xlat
popf
out
cmp
add
push
in
pop
popf
cmp
fbstp
mov
iret
leave
xor
push
push
pop
sub
in
jne
and
cmp
out
sbb
adc
sbb
popf
cmp
aad
push
test
or
or
out
in
fs
and
mov
in
mov
cld
dec
push
mov
xchg
iret
enter
pop
lock
out
in
xchg
in
das
call
enter
daa
loopne
mov
daa
out
fadds
aam
js
sarb
cmpsb
sbb
mov
repnz
int3
rcrb
cmp
lahf
mov
mov
leave
jae
movsb
mov
lods
ja
out
in
mov
inc
pop
jl
sbbl
sbb
add
lods
adc
mov
jg
sti
cmp
xlat
cmp
or
hlt
fsub
loopne
pop
cld
in
xor
mov
mov
mov
sub
hlt
cmp
and
push
insb
jo
js
xor
push
test
mov
and
and
or
adc
adc
fs
dec
nop
pop
repnz
push
dec
cmpsb
add
repnz
sbb
mov
sub
or
leave
inc
or
and
inc
push
imul
lahf
mov
in
push
mov
mov
je
ljmp
sbb
loopne
cli
adc
or
pop
ret
dec
adc
xchg
imul
mov
cmp
mov
and
pop
adc
cwtl
call
mov
mov
loop
rorl
test
push
ja
bound
mov
jb
repnz
imul
adc
enter
into
hlt
and
and
mov
lods
repz
ret
jecxz
int
mov
and
stc
clc
lea
lcall
loopne
sbb
adc
mov
std
sub
clc
mov
mov
xadd
or
adc
dec
sub
pushf
adc
fninit
pusha
dec
and
lahf
and
fildll
cmpl
ja
mov
jecxz
and
adc
pop
push
ret
xor
sbb
or
nop
inc
lea
fwait
pusha
iret
cmpsb
sub
leave
adc
and
mov
inc
or
adc
hlt
dec
insl
pop
jp
cld
clc
adc
add
add
ret
cmpsl
xchg
push
push
jle
movsl
call
mov
lods
pop
nop
xchg
out
mov
add
pop
es
in
or
test
test
es
mov
es
fs
sub
xor
cltd
fs
dec
cmp
inc
fs
dec
es
dec
mov
push
movsb
nop
pop
es
lods
pop
es
or
je
je
pop
es
es
es
pop
es
cmp
test
les
es
int3
mov
lcall
daa
test
je
mov
pop
or
incb
mov
inc
js
dec
add
outsl
je
mov
fs
jne
das
dec
jne
inc
fs
lret
imul
fs
outsb
inc
mov
add
jb
insl
jo
inc
fs
mov
push
je
pop
push
cmp
or
es
xchg
and
jns
pusha
sbb
jae
pop
inc
jns
lea
mov
test
cmp
sbb
xchg
push
jb
and
inc
xchg
add
and
cmp
inc
insb
jmp
js
int3
and
or
dec
and
adc
push
push
push
scas
or
test
mov
adc
cmp
repz
sub
push
pop
push
mov
iret
js
sahf
jnp
pop
aas
es
adc
inc
pop
jnp
xor
xor
add
xor
adc
cmc
push
outsb
sub
movsb
pop
add
dec
loope
lods
ds
add
fucomp
outsl
or
movsl
dec
sbb
out
rorl
inc
stc
test
pop
pop
jne
pop
xor
out
pushf
mov
push
inc
mov
mov
mov
inc
jb
repz
loope
add
mov
adc
xchg
iret
fucomi
cld
add
iret
xchg
outsb
add
in
gs
mov
out
jl
push
inc
nop
sbb
fld
dec
test
fs
lock
inc
clc
inc
jb
adc
popa
push
push
imull
inc
nop
mov
popa
out
fimull
jo
out
in
sub
add
mov
pusha
sub
push
inc
dec
mov
sub
sub
imul
dec
rcrl
or
xchg
push
jb
jb
dec
cld
orl
inc
cmp
dec
sub
cmpsl
lcall
add
in
outsb
add
fcmovne
testb
mull
inc
or
adc
add
loop
call
pushf
in
pop
es
mov
in
and
or
loop
std
and
in
push
enter
pop
dec
in
enter
lret
sub
je
cmp
nop
adc
psrld
or
pop
cwtl
sub
shlb
cs
pop
mov
adc
xor
es
add
sbb
dec
ds
aaa
ret
sub
pop
add
cmc
sub
or
aas
dec
je
sbb
dec
adc
in
fs
push
nop
xchg
jbe
es
jbe
add
sbb
adc
inc
mov
pop
sub
aas
stc
pop
inc
dec
pop
sbb
clc
mov
jb
lret
clc
pop
stos
push
repnz
hlt
mov
repnz
jnp
or
div
xchg
sbb
leave
aaa
leave
push
in
mov
sub
mov
addb
mov
mov
jnp
sbb
cli
sbb
loopne
icebp
cmpl
dec
loopne
movl
mov
nop
push
sub
cmpsb
xor
fmul
add
mov
sub
xor
insl
mov
loopne
sbbl
rorb
scas
repnz
jmp
sarb
mov
rcl
inc
imul
push
jne
jmp
adc
pop
in
addr16
or
test
repnz
subb
xor
push
mov
shlb
lock
out
decl
daa
jecxz
roll
push
roll
roll
pop
cmp
dec
es
lret
add
jecxz
lret
adc
test
das
sub
push
mov
add
xchg
xchg
cli
adc
pop
sbb
sub
add
mov
push
and
imull
pop
mov
cmp
in
cld
test
adc
sar
pop
pusha
inc
push
add
andb
sub
adc
xchg
push
or
test
mov
pop
les
addl
xchg
clc
jmp
and
imul
push
inc
jmp
mov
push
rclb
pop
push
cmp
lods
rcll
add
lea
imul
dec
inc
pop
imul
dec
inc
iret
sahf
jmp
mov
dec
sbb
add
aas
dec
nop
push
shlb
hlt
adc
dec
repz
dec
jnp
and
dec
cmp
test
jo
sub
lret
xchg
negb
push
cld
or
or
insb
int
adc
or
ret
rcrb
xor
jne
pop
inc
add
and
add
imul
and
mov
add
mov
call
mull
and
xchg
add
or
xchg
fadds
lods
lock
add
mov
mov
and
or
or
xchg
jns
xlat
jb
mov
xor
sbb
enter
movsl
pop
ret
outsl
and
inc
jg
pop
loopne
mov
mov
sub
inc
add
mov
or
add
sarl
in
or
nop
lret
loopne
in
in
xchg
in
loopne
pop
mov
lock
jno
loopne
mov
pop
flds
aam
sub
into
mov
roll
mov
mov
cmp
push
loop
js
rep
cmp
xchg
dec
scas
pushf
leave
pop
add
adc
clc
dec
pop
jb
push
daa
or
pusha
loope
pop
test
push
add
fwait
jbe
xor
notrack
push
push
ja
fs
add
pop
add
mov
shr
cmp
mov
fs
cmp
dec
mov
ficoml
data16
or
ja
xor
lock
adc
jg
pop
test
jmp
outsl
or
dec
rorb
ret
cmp
mov
adc
aaa
scas
orb
sub
repz
fwait
jne
test
imul
inc
sbb
mov
mov
mov
roll
cmp
add
daa
add
lret
or
sbb
fldcw
push
add
sbb
test
in
pop
cltd
or
addb
das
xchg
loopne
jns
js
enter
popf
push
mov
inc
orb
movzbl
mov
push
and
inc
adc
mov
cs
push
ret
rcrl
jle
xor
es
lock
cmp
out
mov
add
bound
cmp
mov
test
int
xor
cmp
sub
xchg
rcr
inc
mov
dec
les
xchg
stos
mov
xlat
jbe
clc
fucomip
push
sbb
cmpsb
test
inc
sbb
cmp
pop
cmp
sbb
daa
scas
and
add
ja
mov
mov
push
in
cmpb
cmp
sub
add
imul
popf
or
sbb
dec
mov
arpl
in
cmp
sbb
jns
cmp
std
and
or
in
in
add
and
in
push
loop
inc
decb
push
inc
pop
in
inc
and
rolb
cmpsl
add
jns
sub
data16
mov
cmp
pop
andb
imul
cmp
repz
mov
cmp
push
jo
scas
fdivl
mov
mov
aam
cli
xor
cmpb
lock
sbb
imul
lods
lock
movswl
adc
mov
cmp
popa
inc
jb
add
or
xor
jle
dec
sti
or
fnstsw
daa
xchg
lock
dec
pop
movsl
mov
dec
inc
in
movsb
test
call
pop
mov
pop
mov
inc
inc
push
in
loopne
mov
xor
mov
mov
leave
and
fcoms
mov
or
in
or
cwtl
inc
ror
inc
shlb
int3
enter
xchg
dec
test
mov
and
imul
pop
les
ljmp
je
or
jmp
and
iret
mov
shrb
mov
imul
xchg
je
lock
pushf
cmp
test
aas
pop
sarb
repnz
cmp
imul
inc
rcll
daa
cmp
jnp
jecxz
daa
push
dec
outsb
popl
mov
mov
inc
insl
push
push
jb
mov
push
ret
sbb
add
xor
add
mov
fnsave
mov
insl
and
inc
les
xor
leave
test
add
mov
sub
pop
movsb
mulb
sub
movsb
mov
insb
mov
lret
inc
xor
add
cwtl
jecxz
mov
in
lds
adc
mov
inc
mov
adc
stos
mov
rorl
push
sub
rcrl
mov
push
push
inc
cmp
repnz
js
mov
push
popa
icebp
inc
or
jp
pusha
dec
mov
popa
push
loope
push
xlat
inc
pop
jecxz
jmp
jo
cmpsl
call
test
aaa
inc
inc
test
sub
add
clc
inc
add
xor
jmp
ficoms
enter
cmp
clc
ss
jge
and
xor
mov
loopne
mov
push
enter
outsl
push
inc
push
loopne
sbb
adc
push
jnp
and
ja
mov
outsl
cmp
sub
xchg
jp
xchg
ret
cmp
scas
mov
and
mov
in
adc
push
fs
ss
out
rcr
out
add
xchg
imulb
inc
pop
pop
sub
sahf
dec
arpl
mov
out
inc
push
call
dec
mov
xor
loopne
popl
movsb
and
pop
pop
sbb
dec
dec
cmp
shlb
in
and
test
loopne
insb
mov
xor
pusha
xor
jo
aam
mov
push
pop
pop
push
cmp
roll
push
fwait
dec
int3
scas
dec
mov
pop
enter
movsb
enter
and
and
aaa
mov
mov
xchg
xor
xchg
jecxz
and
ds
jae
fisubrs
pop
lds
and
imul
pop
iret
jnp
sub
ljmp
daa
inc
inc
call
sbb
std
mov
fdivrs
pop
sbb
es
bound
mov
cmp
leave
mov
incl
cmp
mov
sub
or
cwtl
movsb
cltd
movsb
aad
sbb
cmp
cmp
cwtl
cwtl
lds
xchg
sub
adc
dec
adc
and
jmp
or
jmp
fistl
movsb
adc
dec
push
imul
repnz
dec
mov
nop
dec
xchg
cs
arpl
mov
addr16
ljmp
sbb
ret
xlat
xchg
pop
cmp
mov
rorl
add
test
push
sub
and
adc
add
mov
push
cmp
cwtl
adc
gs
add
jnp
test
movsb
out
push
out
lcall
jp
repz
fwait
mov
cli
iret
jae
jl
mov
dec
add
repz
test
xchg
mov
fldt
ret
mov
and
mov
mov
and
mov
lods
and
loop
lods
and
cmp
lods
movsl
cwtl
sbb
lods
sub
movsb
adc
mov
movsb
cmc
xor
jmp
loope
and
jo,pn
mov
mov
les
and
inc
mov
mov
mov
mov
inc
adc
push
dec
int3
push
dec
pop
imul
lret
dec
sub
outsl
dec
push
inc
jnp
inc
cmp
cwtl
mov
shr
orps
dec
mov
xchg
scas
aaa
movsl
inc
movsb
mov
inc
fwait
popa
adc
lods
lods
and
mov
and
and
push
movsb
adc
mov
movsb
push
cmp
lods
adcb
inc
mov
mov
into
aaa
pushf
push
test
inc
adc
jnp
iret
jb
jb
inc
in
cmp
in
imul
es
mov
add
iret
pop
push
movsb
xor
popa
add
rclb
pusha
pop
adc
rclb
inc
add
je
mov
jmp
add
add
in
lds
dec
sub
push
sbb
or
daa
mov
loopne
dec
lcall
leave
xchg
mov
pop
push
push
sbb
test
xorl
xchg
xchg
xor
fstpl
fwait
inc
xchg
pop
leave
xor
pop
push
add
js
inc
rorl
pop
andb
push
mov
inc
inc
out
popa
xchg
xorl
fldcw
pop
popa
test
sbb
repnz
mov
fmull
inc
sub
inc
push
lcall
das
insb
mov
loop
pop
leave
mov
xor
jns
mov
adc
jne
pop
xor
push
popa
xor
out
cmp
aas
pop
dec
sub
jb
xchg
jb
push
data16
and
xor
inc
ljmp
out
xor
adc
or
pop
sti
cmpsb
jbe
jbe
out
dec
fwait
push
ss
aaa
xor
jo
loopne
mov
jecxz
push
jecxz
addl
ficompl
outsb
aaa
push
es
imul
jnp
push
imul
ja
test
ret
mov
mov
push
push
imul
mov
shrl
fistpl
loope
inc
repnz
add
push
imul
mov
aas
mov
cmpsl
add
push
xor
push
jl
jno
mov
and
jle
sub
adc
rorb
lcall
sti
pop
jo
add
insb
cmp
jns
add
les
mov
je
mov
sub
vprotb
xchg
int
cltd
cwtl
insb
mov
pop
sub
mov
and
leave
mov
int
and
sub
lret
sub
push
push
dec
scas
jecxz
daa
add
pop
lret
dec
test
arpl
push
call
inc
es
inc
jp
cmpsb
divl
and
aaa
push
push
imul
cmc
gs
test
nop
ljmp
sub
sahf
inc
push
enter
in
lods
push
xor
jecxz
mov
sbb
inc
test
adc
mov
mov
push
movsb
dec
mov
push
insl
dec
add
mov
lret
sbb
add
cmp
notl
jne
cltd
je
outsb
cmp
jb
imul
lret
xor
dec
mov
mov
push
sti
adc
push
jae
push
and
xlat
sbb
pop
cmp
mov
adc
sbb
adc
je
push
mov
ds
jg
and
inc
lods
pop
ja
out
in
cmp
or
push
test
cmp
aas
dec
sub
add
and
dec
mov
int3
lea
add
sub
push
or
adc
ret
adcl
adc
pop
mov
sbb
std
out
or
add
shll
adc
arpl
or
push
repz
or
enter
mov
add
aad
jle
das
inc
aaa
xor
aam
into
and
mov
sbb
jae
cltd
dec
cmp
aas
mov
into
and
push
mov
cmp
cs
mov
in
pusha
jo
std
dec
inc
xchg
lock
sti
incl
pusha
or
jle
sbb
inc
push
xchg
pop
pop
mov
push
adc
sti
cmp
add
jg
add
lahf
jno
inc
mov
rorb
or
xor
mov
jo
loopne
mov
sub
mov
popa
loopew
dec
adc
test
sbbl
mov
cmp
sbb
addb
lock
xchg
xchg
xor
rcrb
and
inc
dec
jne
jno
pop
inc
rcrl
xor
pop
lock
adc
mov
mov
or
adc
hlt
jne
inc
or
mov
aam
push
aam
leave
test
movsb
data16
pop
dec
xorl
xchg
inc
add
mov
lret
push
dec
imul
aaa
orb
lea
leave
fwait
add
clc
repnz
add
fdivrs
test
xor
push
cmp
push
xor
inc
aam
insl
adc
jns
lret
addr16
or
xor
nop
out
push
jbe
cli
loopne
cmpsb
dec
add
and
insb
or
push
adc
or
or
jp
push
sarb
jnp
and
pop
imull
ljmp
or
jne
dec
jne
jmp
lahf
jb
lret
scas
dec
outsl
out
aaa
test
js
jb
cmp
cmp
ficomps
addr16
pop
pop
push
inc
cmp
pop
xchg
cwtl
xchg
ss
pop
dec
cld
cmpl
fisubs
in
push
cmp
aaa
sub
pushf
push
cmpsl
std
add
and
sbb
adc
or
leave
push
pop
or
xchg
pop
inc
daa
add
push
and
dec
adc
mov
or
xchg
clc
ret
mov
sbb
mov
jl
or
xchg
add
xor
push
or
divps
pop
sbb
push
test
dec
incl
or
fistpll
lret
je
mov
dec
add
or
sbb
jne
in
fucomi
mov
xchg
dec
in
scas
movsb
and
cmpsb
sbb
loop
mov
neg
adc
imul
insb
sbb
adc
jne
aad
in
jmp
mov
movsb
sbb
hlt
jo
loopne
and
pop
je
mov
enter
mov
pop
or
test
pop
cli
pop
add
dec
in
mov
mov
cmpb
je
mov
cmp
push
lar
mov
push
adc
ja
jecxz
jle
test
cli
shr
sbb
mov
cmp
sbb
sbb
add
add
jae
es
or
movsbl
cmpsb
mov
push
xor
je
movsl
imul
push
mov
in
fldt
aaa
iret
mov
push
adc
mov
mov
jl
pushl
cmpb
ja
jb
add
add
call
fnstenv
lret
out
mov
mov
or
adc
inc
mov
std
mov
jb
cmp
std
js
jl
adc
sbb
jmp
popa
lds
pop
shlb
push
mov
js
clc
dec
mov
dec
mov
push
int
or
leave
rorl
hlt
dec
inc
pop
inc
or
sbb
pop
pop
mov
jl
rorl
jle
jb
incl
cmp
pop
cwtl
jno
dec
ljmp
and
cmp
subb
decl
cmp
inc
mov
stos
mov
rep
dec
pop
cltd
dec
and
adc
sti
les
aas
or
push
mov
dec
dec
add
mov
pop
cmp
out
aam
jne
clc
inc
mov
push
movsb
add
xlat
xor
call
jb
adc
pop
das
in
pop
insl
scas
int3
inc
shl
and
inc
in
mov
sbb
insb
sbb
nop
adc
adc
clc
adc
fsubrs
jmp
dec
pushf
sub
enter
das
cmp
adc
hlt
inc
sahf
or
cmp
popa
inc
mov
lea
or
adc
shl
push
or
hlt
out
adc
dec
hlt
inc
xchg
jmp
cs
addl
mov
jne
adc
or
add
out
aad
out
pop
cmp
insb
push
pop
mov
add
jne
xchg
cmp
gs
insb
call
adc
lods
pop
lds
popa
lock
enter
cmp
arpl
push
call
mov
push
adc
add
bound
dec
hlt
dec
jmp
imul
mov
mov
dec
stos
pop
or
ja
or
out
dec
jnp
and
pop
pavgb
add
popa
into
jne
cmp
repz
orb
fstps
addr16
fiadds
adc
inc
mov
std
lods
add
add
or
pushw
or
int3
jle
fistpll
pop
fmuls
xor
push
sbb
lret
rclb
sbb
sbb
cmpsl
and
stos
cld
aad
or
xor
add
or
es
push
les
fisubs
fstps
fwait
imul
sub
fnsave
dec
inc
push
fistpll
daa
dec
sub
ja
out
lcall
enter
sahf
fucomi
jmp
pop
inc
shll
sub
jmp
inc
or
sbb
bound
inc
ja
add
cmp
adc
push
or
mov
jp
orb
push
pushl
pushl
push
fildl
jp
xor
nop
fisubs
lret
add
adc
filds
dec
or
jae
mov
int
adc
clc
dec
or
dec
add
xchg
add
aaa
push
xchg
xchg
dec
push
mov
fldcw
movsb
add
cmp
test
pusha
jle
lahf
add
stos
or
push
call
adc
xor
into
lods
sbb
int
into
lea
xchg
gs
pop
xchg
mov
push
arpl
lods
mov
sbb
or
fisubrl
into
add
jg
or
data16
outsl
push
mov
sbb
sbb
adc
dec
outsl
inc
insb
outsl
sbb
cs
sbb
dec
outsb
insb
jns
inc
insb
popa
push
xchg
push
inc
in
in
out
push
iret
leave
call
rorb
pop
mov
push
push
mov
inc
je
insb
out
mov
fmull
cmpsl
or
dec
imul
fbld
outsl
jne
test
or
dec
xchg
add
lea
push
dec
gs
jo
gs
add
in
pop
add
or
cmpb
push
add
add
outsl
das
cs
dec
gs
xlat
or
jae
shlb
shlb
jne
roll
aaa
fs
or
or
insb
jmp
inc
jbe
add
push
push
gs
add
or
push
mov
sysenter
add
jo
inc
aam
xchg
adc
xchg
mov
out
fcomp
loopne
adc
mov
jb
bound
xchg
out
push
push
push
out
mov
mov
ffreep
or
dec
outsb
fldt
imul
xlat
and
cs
xchg
pushf
shrb
and
dec
movl
push
or
jns
adc
aad
xchg
mov
popa
fisubrl
xlat
aad
inc
pop
or
dec
das
in
out
dec
mov
arpl
ljmp
push
imul
imul
mov
je
sub
xchg
jae
insb
ja
insb
cmp
mov
xchg
cwtl
out
ja
mov
jo
fwait
push
in
insl
fists
ds
mov
cmp
lret
punpcklbw
arpl
js
lcall
adc
stos
popa
cmp
in
out
adc
dec
les
cmp
data16
pop
xchg
nop
push
or
jne
fs
outsb
aas
sub
mov
sarb
lret
pop
mov
mov
js
cwtl
xchg
xchg
outsl
jnp
fiaddl
push
or
or
fisttps
sarb
test
adc
mov
xor
and
and
inc
dec
cmp
inc
xchg
pusha
or
sti
mov
test
int3
jno
jg
mov
push
jo
xchg
xchg
outsl
ret
mov
push
mov
push
scas
add
jo
mov
shrd
cmpsl
sub
adc
inc
mov
incl
ret
shlb
shll
std
dec
nop
test
cmovns
jo
popa
outsl
pushl
add
pushf
jae
push
rclb
sahf
cmpsb
in
cmp
mov
jno
mov
push
enter
jno
cmp
mov
in
pushf
dec
lahf
cmp
cltd
mov
mov
hlt
mov
push
mov
stos
jge,pn
mov
push
dec
lods
pop
cmp
popf
insb
mov
dec
lock
mov
pusha
movsb
xor
push
idivl
dec
scas
fsubr
push
push
test
add
hlt
fimull
popa
jecxz
sbb
sbb
testl
ret
xor
cmpsb
inc
inc
mov
dec
insl
bound
push
roll
fs
jl
es
jae
or
cmpsb
mov
addl
jl
xchg
cwtl
pushf
mov
adc
push
jo
clc
data16
dec
mov
test
xor
cmp
fsubrs
fcompl
or
dec
jb
mov
mov
add
fnstsw
cmp
pop
push
cwtl
data16
and
mov
xchg
lods
pop
setb
jae
jae
fbld
mov
push
insb
mov
xchg
cmp
push
pop
push
adc
clc
sbb
mov
lock
inc
divl
repz
push
mov
cmp
dec
push
aaa
push
add
or
xchg
scas
mov
mov
inc
sub
mov
push
sbb
bound
daa
sub
dec
lcall
enter
daa
movsb
mov
test
stos
sahf
mov
aam
xchg
cmpsl
and
pcmpeqb
jo
inc
adc
vmwrite
inc
mov
add
psubb
movsb
cmp
sbb
roll
stc
push
andps
or
in
and
jb
or
or
jb
pop
jb
sbb
jb
pop
and
mov
sub
push
add
cltd
lods
adc
or
push
push
out
out
lcall
jl
out
mov
jbe
dec
enter
and
loop
rclb
pop
push
daa
cld
ja
adc
inc
add
dec
repz
enter
sbb
and
cmp
repz
cmp
icebp
dec
fdiv
push
jmp
fs
subb
dec
aas
or
test
mov
arpl
adc
push
iret
mov
ret
loopne
sub
push
sub
cmp
push
ror
xchg
out
je
push
leave
fwait
int
inc
mov
in
push
mov
call
repz
lock
rclb
orb
lock
popa
and
fdivrl
sbb
dec
es
inc
add
movups
and
sub
cs
fwait
sbb
fiaddl
flds
nop
sub
adc
push
sub
add
mov
in
jns
movsb
jp
lods
jp
pop
dec
repz
mov
fwait
pop
enter
std
in
or
fidivs
xchg
inc
and
mov
pop
add
jp
add
jg
pop
lret
sar
mov
call
rcll
nop
call
stos
mov
rorb
mov
push
fcoms
cli
loopne
fmuls
in
sbb
mov
fsubrs
xchg
aam
add
enter
adc
sahf
dec
push
add
pop
sbb
inc
vpshlq
int
dec
addb
fs
idivl
ss
jl
cmpb
xchg
jae
enter
push
mov
mov
inc
or
add
sub
aad
or
inc
pop
push
inc
inc
data16
into
scas
pop
data16
add
pop
or
cld
xor
pusha
pop
pop
rolb
pop
faddl
enter
adc
sti
hlt
lcall
lcall
idiv
idiv
cmc
push
push
push
xor
mov
xor
lock
mov
sbb
cmp
repz
sbb
sub
shrl
iret
loopne
or
add
or
out
or
nop
out
pop
xchg
push
imul
add
scas
xor
data16
mov
pop
add
cmp
cld
and
add
addr16
mov
das
inc
xor
inc
push
fs
les
enter
shrb
mov
inc
subb
arpl
imul
pop
add
ficoms
pop
out
mov
pushf
and
or
or
or
mov
repz
fadds
add
mov
jnp
outsb
jo
sub
mov
cwtl
sub
cltd
or
fs
dec
adc
mov
or
pop
push
add
mov
pushl
mov
in
pop
dec
pop
cmpl
jne
push
mov
push
cmp
pop
and
mov
push
mov
sbb
inc
sbb
xor
mov
imul
outsl
jne
out
lock
lcall
test
sub
cmp
or
clc
push
xchg
js
ljmp
cmpsb
fdivrl
jo
dec
push
loop
dec
cmp
xlat
bound
push
xchg
cmpsl
filds
cmc
je
test
ss
and
or
dec
les
lds
stos
adc
cmp
pop
shll
aas
and
xor
sbb
cmpsl
sub
fcomi
and
jl
test
loope
jnp
divl
jmp
sbb
adc
add
pop
rolb
dec
stc
mov
rcrb
sub
jo
fbld
and
dec
shlb
pop
and
dec
aaa
push
inc
mov
movsb
dec
or
or
inc
je
xor
dec
inc
dec
pop
pop
idiv
sbb
scas
push
dec
mov
sub
sbb
and
or
and
or
inc
cmp
xchg
ljmp
mov
pop
or
xchg
mov
inc
test
rorb
sbb
pop
pop
and
adc
dec
jne
pop
andb
add
and
sub
jno
cmp
dec
daa
inc
add
mov
rclb
push
xchg
stc
sbb
jb
jae
push
add
js
xor
or
add
pusha
and
orb
inc
add
cltd
xor
jae
js
movsb
rcrl
enter
popf
shlb
sbb
and
lock
jp
ret
add
std
pop
push
add
adc
push
mov
data16
push
fstpt
insb
and
push
and
xor
sbb
adc
inc
jmp
aad
xlat
insl
dec
or
push
xchg
sbb
mov
test
loopne
dec
add
outsb
not
cmpb
dec
stos
xor
loope
outsl
scas
or
or
sarl
or
pop
jb
mov
or
and
jle
popl
mov
rcl
loope
popl
cmp
je
ficoms
add
jmp
faddp
and
sbb
mov
pop
hlt
adc
xchg
mov
push
jb
je
idiv
mov
inc
mov
imul
push
add
xor
loop
fsubrp
jo
jo
fld
inc
adc
mov
lds
inc
jecxz
stos
addr16
xor
inc
push
and
out
add
in
mov
pop
xchg
lds
aas
call
jne
jge
inc
mov
test
xchg
sbb
fisubrs
aaa
nop
jmp
sub
mov
icebp
mov
add
xchg
pop
lock
and
xchg
popf
and
add
inc
insl
clc
jo
in
pop
mov
add
add
mov
add
call
push
mov
cmc
add
sahf
push
aam
orb
push
sbb
or
and
sbb
add
inc
mov
rcrb
mov
icebp
xchg
arpl
push
in
mov
cmp
test
or
or
mov
add
and
or
ss
push
dec
xor
pop
fbstp
fcompl
cmp
mov
call
jecxz
push
add
dec
push
sahf
add
jbe
into
mov
outsl
pop
xchg
test
add
pop
outsb
and
mov
nop
imul
cmpsb
lahf
fildll
test
jge
in
int
dec
hlt
je
shlb
das
xor
imul
shl
mov
jae
pop
lds
inc
adc
repz
jle
dec
andb
ljmp
sbb
movsb
or
adc
mov
fcmove
xorl
ja
test
xor
cmp
and
stos
fildl
and
rcrl
jo
les
jl
and
inc
cmp
xchg
sub
cli
xorl
jle
jno
mov
js
lret
pop
xchg
cs
movsb
fisttpl
and
adc
inc
dec
xchg
inc
imul
jb
inc
mov
mov
rol
and
cmpsl
push
mov
push
pop
cwtl
clc
inc
inc
mov
mov
in
push
hlt
pop
enter
stc
dec
repnz
push
mov
dec
hlt
cmp
adc
test
popf
sbb
jns
pop
inc
and
out
ret
jp
movsb
lea
add
sbb
sub
jmp
inc
clc
mov
jmp
push
mov
xor
insb
cmp
shll
add
enter
and
add
inc
mov
mov
test
insl
xchg
mov
mov
xor
mov
push
in
mov
pusha
scas
stc
mov
iret
dec
inc
or
jg
shll
and
jae
jg
icebp
and
lret
dec
add
or
xor
or
or
arpl
test
inc
xchg
daa
es
jge
dec
pushf
mov
xchg
mov
sbb
cmp
mov
xor
mov
test
jne
jl
leave
iret
mov
cmp
and
lret
fisttpl
mov
add
mov
daa
pop
roll
mov
imul
jmp
xor
mov
pop
pop
cmp
push
inc
into
and
adc
hlt
adc
or
or
sub
fnstcw
insl
xchg
xor
hlt
imul
adc
insb
pop
sti
or
push
ret
insl
ja
xor
test
jnp
ret
repnz
shl
loope
mov
pop
xchg
gs
call
mov
xor
sub
addr16
mov
adc
sarb
mov
mov
andl
lock
cmpl
push
or
in
mov
inc
jbe
sahf
leave
clc
push
mov
stos
insb
rorb
lods
mov
push
sub
ret
dec
cmpsl
or
sbb
xchg
outsl
pusha
out
fdivrs
mov
rorb
sub
adc
daa
arpl
pop
xlat
adc
outsl
insb
cld
or
xorl
pop
adcb
pop
shll
test
out
mov
push
or
movsb
cmpl
subb
adc
inc
and
insl
arpl
mov
ds
jmp
cmp
cmp
shlb
sbb
mov
mov
call
and
cmp
push
mov
imul
cld
inc
sub
orb
outsl
rolb
nop
xchg
pushl
popl
mov
pmulhuw
fsubl
add
mov
or
rcrl
add
mul
cmp
imul
mov
push
jno
inc
notl
and
fstpl
add
or
mov
cmp
sub
sbb
shlb
cs
dec
mov
sbbl
jae
add
rolb
mov
test
cmpb
mov
dec
jbe
xor
sub
divb
cld
loopne
movsb
das
dec
or
nop
out
js
stos
ss
jl
push
cld
pop
into
lret
test
sti
mov
mov
cmp
dec
fldenv
sbb
add
lea
in
mov
aad
inc
ret
and
mov
xor
in
jmp
out
out
pop
ficompl
int
xor
mov
fcomip
mov
jmp
data16
push
into
inc
mov
aas
setg
xchg
mov
xchg
xor
daa
xor
popa
push
adc
add
aaa
ds
pop
test
lret
inc
ret
push
roll
stc
add
adc
adc
add
jns
add
das
add
mov
int
mov
mov
rorl
inc
sub
je
pop
lods
notb
sub
stc
and
adc
adc
lds
mov
inc
dec
and
in
push
sub
jle
stos
inc
nop
cld
ret
rcrl
out
inc
xchg
cmp
pop
aad
push
push
mov
mov
into
mov
adc
scas
add
lret
fsubs
mov
out
pop
cmpsb
mov
push
jmp
ret
xorb
subl
mov
push
cld
pop
or
cmp
cwtl
sub
sbb
enter
sti
cs
cmp
cltd
sub
jmp
sbb
and
xchg
xchg
ss
inc
and
cwtl
mov
lea
test
outsb
or
pop
push
or
and
and
mov
add
add
sub
adc
cmpsb
pop
cmp
bnd
jle
fildll
sbb
addb
xor
aam
pop
mov
jmp
mov
dec
mov
sub
xor
hlt
std
jg
dec
out
xor
fimuls
or
out
dec
test
or
adc
inc
and
xor
push
nop
popf
xchg
mov
dec
push
mov
xor
push
out
sbb
test
dec
shll
cmp
adc
movsb
push
hlt
addb
pop
cmp
sub
jmp
dec
add
or
in
inc
scas
cmpsl
inc
scas
aad
ret
iret
pusha
and
rcll
xlat
dec
mov
xchg
stc
iret
pop
and
push
mov
push
cwtl
mov
sarl
rcrl
mov
mov
shlb
adc
xchg
sub
pop
pusha
imul
cmp
test
imul
aas
movsl
push
mov
jge
mov
pusha
orb
rcrb
pop
mov
std
clc
add
add
sbb
call
add
add
out
je
sbb
cli
popa
ljmp
jns
fnstcw
in
jge
xor
lahf
push
pop
lds
dec
rol
mov
lcall
aad
pop
mov
adc
aam
lcall
mov
jae
ret
je
stos
adc
btr
ret
xlat
add
cli
add
mov
and
push
inc
adc
aam
jmp
mov
jl
fmuls
dec
inc
orl
adc
stos
inc
cmp
je
sbb
sar
jg
ljmp
and
bt
add
shl
mov
fistpll
ds
ret
adc
push
inc
cmp
jne
inc
decl
jne
or
mov
les
mov
xor
sub
mov
inc
push
roll
and
mov
or
push
inc
ds
mov
xor
add
xor
nop
fs
xchg
les
aaa
xchg
out
adc
ja
mov
inc
add
rcl
xchg
mov
pop
cmpsl
mov
lret
push
ret
mov
enter
xorl
ja
mov
movsb
test
xor
xchg
sbb
fwait
popa
mov
dec
fs
imul
and
shlb
pop
sub
xchg
or
sub
daa
push
bound
test
out
cmpb
out
sub
aas
or
push
push
adc
jne
and
aam
push
sahf
dec
cmc
sub
lret
jmp
dec
int
add
and
enter
pushf
or
mov
mov
jae
cs
cvtps2pd
jns
or
adc
adc
or
dec
push
arpl
mull
cmp
dec
dec
loope
jg
inc
push
data16
jbe
xchg
jl
or
out
popf
clc
mov
dec
clc
repz
sub
or
jmp
mov
or
sbb
lock
enter
cmp
dec
jne
xor
cmc
popf
pushf
jge
sbb
cmp
sahf
test
and
mov
and
pushf
mov
subl
xchg
xchg
adc
adc
test
add
mov
enter
inc
push
adc
and
or
push
add
pop
inc
aad
adc
popf
dec
push
roll
and
sbb
negl
orb
inc
adc
lock
daa
sub
mov
sbb
cmp
testl
mov
xor
adc
lods
sbb
ret
sahf
xlat
pusha
insl
es
out
lcall
aad
sbb
pop
es
lahf
in
cmp
cmp
dec
rolb
cmp
mov
mov
bound
in
dec
pop
repnz
test
xchg
dec
mov
xchg
sub
pop
cmp
popf
xor
adc
cmp
pop
scas
mov
push
in
jns
clc
or
xor
push
into
mov
in
nop
enter
scas
nop
pop
int3
imul
xchg
inc
daa
loopne
das
inc
xchg
imul
mov
pop
test
inc
imul
lret
mov
cmp
inc
test
repz
xchg
xor
dec
xchg
inc
in
push
mov
xchg
sbb
aad
int
hlt
and
lods
mov
clc
shlb
or
jg
xchg
fadds
mov
push
pop
jb
mov
mov
in
mov
sahf
xor
inc
out
inc
dec
xchg
fcomp
and
fldenv
mov
push
adc
in
xlat
mov
out
pushf
int3
mov
pop
pop
lock
addl
sbb
inc
je
orb
add
ret
add
mov
dec
or
push
dec
iret
pop
divl
add
movsb
dec
sub
jbe
repz
inc
pop
or
adc
push
rolb
aam
push
sarb
pop
sar
push
addl
lds
je
test
mov
movsl
fcompl
jecxz
sub
movsb
cmc
fbld
aam
pop
dec
movsb
test
scas
sub
clc
hlt
inc
xor
sbb
xor
shll
sbb
nop
leave
int
push
movsb
mov
pushf
mov
and
movsl
and
and
sub
push
push
outsb
lock
hlt
push
icebp
xor
aad
int
fsubr
jno
jnp
mov
and
xor
or
jo
and
dec
pushf
sub
ud0
es
les
sub
incb
xchg
add
ss
xor
test
mov
cmpsb
adc
cmp
movsb
out
or
fidivs
lock
loope
mov
les
push
pusha
push
or
and
add
out
mov
lret
je
xor
sbb
loopne
adcl
out
ss
cmp
push
lods
das
xchg
shlb
cmpsb
dec
mov
leave
arpl
sub
cmpsb
mov
and
pop
ss
int
lds
mov
ficoml
cmpsl
push
sub
fsubs
fs
loope
push
inc
call
lret
imul
sub
inc
inc
ret
mov
call
pop
lock
popa
shrb
cmpsl
inc
add
nop
cmpsl
add
es
loop
jne
xor
jne
lret
shlb
in
cmpsl
ret
jb
xlat
adcl
ss
inc
lock
lods
mov
xchg
xchg
jmp
insl
fstl
arpl
clc
adc
jno
cmp
mov
test
int3
sub
push
repnz
ss
hlt
push
jae
push
mov
add
cmp
rcl
dec
push
xlat
test
daa
mov
imul
nop
jo
push
push
repnz
test
jns
or
fistps
fisubl
mov
push
ret
add
inc
les
mov
hlt
test
lea
rclb
or
dec
lds
pop
dec
mov
mov
daa
cld
jns
pop
outsl
or
hlt
inc
adc
xchg
add
push
mov
inc
cmp
sbb
inc
sbb
lea
pop
ljmp
out
and
mov
pop
jb
add
pushf
test
js
xchg
stos
push
dec
and
or
and
mov
stos
clc
mov
mov
or
loope
cli
push
mov
int3
push
pop
jmp
mov
adc
inc
movsb
ret
fisubl
or
or
mov
lret
sub
daa
mov
cmp
addr16
jae
dec
cmp
add
xor
gs
in
in
push
inc
or
sahf
stc
les
repnz
in
cld
mov
in
mov
mov
js
xor
inc
pop
shlb
test
push
fmuls
sub
stc
stos
sub
sbb
sub
inc
sbb
add
cmpsl
mov
and
mov
out
xor
addr16
dec
lea
adc
inc
out
dec
imul
and
lods
add
testb
jne
mov
add
mov
push
nop
dec
outsl
xchg
cmp
out
push
push
orb
inc
orb
mov
hlt
sub
jmp
clc
imul
lods
inc
rolb
mov
or
mov
clc
mov
push
add
ss
push
pop
cmp
inc
add
pop
and
inc
ret
les
je
mov
add
cmpb
out
js
mov
dec
adc
js
dec
out
iret
push
repz
pop
lds
push
lcall
mov
lret
add
mov
jle
mov
dec
mov
vmwrite
mov
sbb
jo
jo
xor
cmp
cmp
sbb
lods
and
test
jmp
hlt
add
xor
xor
inc
add
bound
filds
mov
xchg
xor
data16
sbb
fisubrl
cld
xor
cmp
in
push
jae
cmp
mov
xor
xchg
nop
add
rcl
jnp
jae
xor
insb
mov
sub
cmp
daa
andb
dec
and
cmc
dec
fucomip
ds
lea
dec
nop
push
fdivs
test
dec
adc
push
lock
or
pop
addl
test
xor
iret
and
or
pop
mov
rclb
not
mov
outsb
jmp
sbb
rcrb
sbb
push
pusha
sub
add
dec
xor
and
dec
sbb
cli
icebp
mov
and
or
je
fcomps
or
pop
or
jmp
or
push
xor
adc
or
icebp
fwait
ja
xor
adc
sahf
lods
addb
or
xchg
add
repz
jle
into
or
rcrl
mov
xor
push
aam
adc
pop
sbb
outsl
sub
repnz
adc
and
and
jg
push
add
outsl
mov
push
and
test
movb
mov
mov
aam
out
push
aaa
push
shrl
jmp
fiadds
push
inc
sub
xchg
xlat
push
fs
stc
je
mov
data16
test
xor
sarl
outsl
cmpsl
sbb
xor
dec
and
shlb
orb
push
fs
nop
cmp
jo
push
xchg
cli
mov
or
popf
incl
scas
stc
nop
cltd
xchg
insl
andl
mov
insl
mov
mov
push
bound
and
rcrb
out
lcall
cmc
mov
repnz
mov
and
dec
sbb
or
sbb
ljmp
sub
mov
or
or
rdmsr
mov
je
dec
inc
jge
push
adc
pop
mov
dec
pushaw
hlt
jl
dec
nop
xchg
mov
dec
mov
and
adc
sub
inc
sbb
dec
lock
aas
cmp
je
test
sbb
imul
in
imul
cwtl
inc
cmp
data16
mov
jp
xor
lcall
mov
push
sar
call
push
jle
addl
jo
lret
shll
movsb
inc
andb
div
mov
cmpb
and
inc
aam
add
cmpsb
insb
sbb
lock
inc
inc
imul
lock
daa
pop
and
dec
lock
xchg
mov
adc
and
lahf
jg
or
adc
sub
pop
inc
and
orb
out
lods
mov
xchg
pushf
inc
cmp
sbb
int3
cmp
dec
sub
or
add
sub
fwait
jmp
pop
adcb
lret
das
mov
or
adc
push
xchg
out
cs
jle
ljmp
jmp
jl
and
inc
mov
cli
jbe
and
pusha
and
mov
cmp
int3
shl
cmpsl
in
mov
es
in
gs
cld
and
pop
fwait
addr16
aad
xor
sub
fs
loopne
pushw
out
lods
xorl
and
in
or
or
sub
pop
mov
adc
or
cmp
in
jne
sbb
cmpsl
mov
or
add
jo
ret
xor
push
push
inc
cmp
rcl
push
xor
add
adc
jp
jo
cmp
adc
shl
test
lock
je
push
pop
pop
repnz
mov
adc
pop
test
add
outsl
aam
pop
pop
inc
popf
sbb
mov
fs
pop
cmp
or
or
lock
sti
add
je
loopne
and
or
sbb
mov
adc
bound
std
call
or
push
cmp
add
push
jae
sub
ret
jge
mov
jmp
shrb
das
or
adc
jmp
ret
cltd
sub
push
xchg
mov
push
mov
mov
sbb
in
pop
ficoml
cmpsl
movsb
movl
sub
dec
push
sbb
xor
stos
aam
jecxz
cmp
push
push
call
ja
or
fwait
pushf
sar
nop
popa
add
pop
xor
lods
add
cmp
dec
or
mov
pop
out
sbb
loope
loopne
xchg
cmp
gs
xchg
mov
shl
imul
push
push
xor
sub
mov
stos
lock
xor
mov
faddl
in
sbb
add
add
mov
addb
add
pop
mov
repnz
or
stos
call
call
jl
or
dec
sahf
fsubr
sbb
add
test
push
enter
inc
hlt
jmp
mov
mov
xchg
fwait
lods
rcrl
dec
enter
rorb
cmp
lods
pop
push
ret
nop
iret
and
mov
outsb
pop
lcall
mov
xchg
cs
jl
push
jmp
int
inc
das
mov
nop
or
jnp
inc
or
sub
pop
mov
pop
or
clc
and
dec
add
loope
cmp
or
jo
test
cmp
mov
mov
jmp
mov
add
sti
push
add
sbb
sbb
ret
outsb
xchg
ret
and
shrb
push
arpl
psubsb
add
fadd
add
scas
cwtl
sbb
scas
mov
adc
lods
and
or
mov
sbb
adc
mov
add
movsb
push
add
pop
mov
fdivr
sbb
bound
jne
gs
repnz
add
and
std
mov
sbb
push
andps
popa
pop
mov
adc
adc
sbb
adc
outsb
or
fisubs
mov
cmp
je
xorl
jmp
adc
fcomp
jmp
rolb
sbb
test
arpl
cmpps
pop
inc
lret
nop
push
mov
sbb
add
outsb
and
cmp
and
test
sub
jnp
adc
popa
fmull
adc
xchg
and
add
mov
lds
xor
lcall
mov
into
push
sbb
insl
pop
mov
push
mov
jns
inc
fidivs
mov
cmp
dec
rolb
ja
and
xchg
cmp
push
push
imul
stc
or
test
enter
rcrl
inc
mov
imul
jnp
fmull
sahf
iret
and
xchg
mov
pop
lret
mov
adc
pop
inc
pop
rorb
mov
inc
pop
lahf
rorb
pop
dec
push
ljmp
rcl
fiaddl
mov
sub
int
inc
sbb
xor
fistps
jle
jo
sub
pop
add
scas
data16
mov
jl
cmp
ret
jmp
pop
loopne
xlat
adc
adc
push
pop
jo
imul
push
push
add
ret
in
in
pop
xor
inc
lock
dec
cmp
jne
pop
shll
cmp
nopl
fwait
adc
ret
adc
or
push
bound
mov
shlb
fwait
ficoml
add
push
jne,pn
aas
xchg
lods
out
add
mov
sub
test
adc
mov
add
int
sbb
outsb
push
add
add
dec
loopne
mov
adc
in
out
les
sub
or
dec
add
add
push
aaa
or
movsb
stc
in
add
inc
cmp
sub
cs
push
xchg
sbb
mov
inc
nop
adc
pinsrw
lds
dec
cli
inc
and
inc
loopne
push
mov
inc
and
inc
rorl
rorl
jae
mov
mov
adc
hlt
adc
enter
or
add
cs
sbb
adc
cld
sub
int3
nop
inc
sahf
inc
jmp
loopne
xor
dec
xchg
clc
ss
pop
pop
inc
jae
stc
rcll
jl
clc
jl
inc
sbbb
push
cmpsb
outsl
orb
lea
aaa
xchg
xor
jge
notl
dec
mov
loope
add
xor
clc
pop
addb
insb
jle
js
popa
xchg
in
insb
insb
push
cmp
cmp
cmc
icebp
loopne
adc
or
add
xor
dec
movsb
mov
mov
inc
sbb
jne
adc
nop
mov
mov
jbe
lahf
std
xchg
jmp
push
imul
shll
or
or
jmp
cmp
jl
xor
sub
fsubs
in
and
arpl
addr16
mov
loopne
jg
pop
fldenv
nop
cld
lods
nop
push
inc
or
add
scas
cmpsl
in
aam
mov
cmp
cmp
xchg
jp
pop
outsl
inc
jmp
or
sub
insl
outsl
mov
and
sub
push
adc
dec
adc
sbb
sbb
lret
adc
sarl
xchg
shll
js
imul
adc
add
sbb
xchg
adc
inc
adc
pop
pop
mov
adcl
lret
xchg
adc
mov
rcrb
mov
push
sahf
je
inc
enter
add
aas
insb
ret
sub
js
les
or
fstp
mov
and
inc
pop
sub
in
sti
sub
das
rclb
dec
scas
pop
and
ret
jmp
cld
adc
dec
adc
cs
push
adc
jo
fucomp
fisttps
nop
add
ja
es
mov
add
fadds
adc
aad
sbb
out
pusha
scas
sbb
movb
push
das
ljmp
cmp
ud1
mov
mov
dec
hlt
js
arpl
scas
rolb
enter
cmp
push
lret
lahf
clc
stc
sbb
test
dec
adc
push
aam
bound
push
dec
push
inc
lret
popa
cmp
xchg
pop
bound
xor
xor
pop
cli
push
and
add
cld
mov
inc
notl
push
aas
adc
in
outsl
sahf
inc
inc
jmp
push
cmpb
test
sbb
fwait
enter
sbb
test
jne
inc
lock
push
je
dec
nop
mov
sbb
cli
cmp
add
loopne
push
xchg
xchg
jmp
pop
push
push
lcall
dec
mov
pop
inc
cs
jne
push
cltd
mov
fwait
or
jne
mov
inc
ds
int3
xorl
rolb
call
jle
inc
scas
add
adc
nop
or
sub
add
pop
adc
push
pop
adc
cmp
jnp
in
loope
in
stos
sbb
fmull
jg
les
lods
add
jo
jge
hlt
ret
aaa
xchg
inc
jl
js
add
testl
push
mov
in
sbb
negb
rclb
fs
xor
xor
mov
lcall
xlat
xchg
push
adc
cmpsb
push
test
lahf
sbb
test
xor
cmpsb
push
test
or
and
xor
sub
stc
xlat
mov
inc
xor
mov
hlt
lret
das
addb
jmp
icebp
mov
push
sarb
xor
mov
rcl
inc
insb
push
push
or
mov
fwait
ret
xor
mov
aam
loopne
inc
nop
cmp
test
mov
addb
addr16
out
les
xchg
sbb
mov
out
rclb
sub
sub
iret
xchg
xor
cmc
sub
add
pushf
push
fidivrs
mov
add
jbe
adc
add
push
icebp
mov
movsb
mov
inc
fsts
lret
mov
pop
xor
les
dec
add
outsl
or
cld
rep
mov
xor
pop
dec
mov
jge
inc
push
ds
add
add
shll
adc
pop
call
aas
sbb
out
fistpll
aaa
mov
xor
jne
outsb
loop
ret
dec
jle
je
pop
lret
sbbl
nop
inc
popa
pop
jecxz
enter
daa
ds
fsubrl
mull
inc
rclb
ret
mov
ss
aad
hlt
pop
js
les
in
sub
in
or
dec
in
add
sub
jae
lret
jl
mov
mov
int3
sub
cmp
push
mov
xor
mov
enter
repz
lock
add
adc
cmp
cmp
sbb
xchg
and
sbb
mov
sarl
adc
adc
add
sbb
mov
fnstsw
daa
jno
test
sbb
in
notb
dec
testb
inc
mov
cmp
jmp
rolb
fidivl
test
push
std
or
dec
cmpsl
aaa
pop
push
sbb
xor
ficompl
pop
loopne
hlt
cmpb
test
lods
cltd
enter
or
fs
xor
ss
sub
shlb
sub
int3
ret
and
addb
dec
inc
pop
xchg
adc
dec
adcl
xor
cmp
rclb
pop
test
ret
push
popf
mov
add
notb
loope
xchg
movsb
and
pop
in
loopne
testb
jns
clc
sub
xchg
loopne
inc
repnz
sbb
jno
jo
imul
pop
je
jo
movsl
aad
movsl
and
push
hlt
push
xchg
mov
push
pop
mov
fcmovne
clc
dec
sbb
adc
js
rcll
or
shlb
push
cld
in
jmp
add
jl
mov
lcall
sbb
xor
jne
shlb
jnp
mov
adc
jmp
push
arpl
or
mov
pop
mov
je
hlt
adc
out
dec
or
jne
in
adc
jmp
dec
repnz
or
sub
adc
xchg
or
xor
test
pop
pushf
adc
adc
sub
inc
sub
adc
push
sub
fsub
sbb
mov
fmuls
jns
insb
cmp
loopne
push
out
lcall
adc
mov
pop
nop
hlt
cmp
je
adc
pop
mov
xchg
fmuls
add
pop
sar
push
neg
cli
mov
pushf
je
xchg
les
cmpsl
mov
mov
sbb
addr16
and
xchg
adc
push
mov
add
jmp
das
aam
lahf
jne
ret
int3
ds
adc
or
lds
aam
add
inc
enter
xchg
push
sbb
add
cmp
arpl
inc
pusha
sbb
push
xor
xchg
mov
adc
and
sahf
push
stc
ljmp
sub
xor
pop
cmp
popa
xor
inc
in
dec
pop
sbb
mov
sbb
in
push
xchg
or
adc
mov
inc
repz
xor
fsubrl
and
adc
fsubrs
out
push
mov
inc
xlat
lahf
movsl
xchg
repz
sub
adc
dec
xlat
mov
dec
lea
or
dec
or
inc
adc
and
pop
fldt
int3
pop
or
scas
adc
or
xor
pop
push
and
adc
pusha
shlb
nop
mov
shlb
sub
fsubs
loopne
repnz
imul
jge
popa
sub
xor
lds
mov
addb
fmul
mov
sti
shrl
hlt
sub
out
sbb
cwtl
lcall
out
aam
push
sub
pushf
clc
mov
enter
inc
lods
pop
ds
lock
and
jge
mov
sub
sbb
fldl
xor
enter
add
jl
and
add
flds
and
and
adc
xor
and
mov
inc
push
sbb
sub
push
and
shll
adc
pop
inc
adc
adc
inc
jmp
pop
or
les
popa
imul
inc
xor
xchg
jle
add
xchg
and
mov
aad
out
clc
cmp
xor
dec
testl
adc
in
mov
mov
add
mov
add
inc
jno
add
imul
and
dec
mov
push
jle
das
dec
and
repnz
pusha
adc
add
cmpsl
stc
sbb
inc
lahf
adc
push
ret
push
pop
xchg
das
or
mov
add
and
ss
sbb
pop
xchg
pop
repnz
mov
test
pop
inc
inc
lahf
mov
das
xlat
fidivrs
push
sbb
mov
popf
wbinvd
add
pop
dec
jnp
or
test
push
lahf
mov
jl
mov
mov
flds
fcmovnu
jne
ret
and
testb
mov
mov
mov
mov
inc
jae
add
inc
fndisi(8087
js
fadd
adc
add
dec
xor
add
or
icebp
sbb
in
loop
clc
adc
in
imul
call
xor
sbb
jo
test
rolb
nop
cld
addr16
and
pop
mov
cmpsb
jg
pop
xor
fbstp
xchg
cs
xchg
push
mov
pop
aaa
dec
pop
jo
ret
lock
fs
cmp
ret
or
clc
and
pop
imull
jne
inc
popf
push
lcall
inc
psadbw
jl
in
add
pop
jno
push
xchg
dec
push
arpl
inc
in
pusha
imul
cmp
mov
inc
cmp
sbb
mov
pop
andps
mov
jnp
sbb
mov
xlat
cmpsb
push
xchg
js
mov
enter
clc
and
int
pop
xlat
inc
jle
addb
out
jge
iret
sub
sti
xchg
and
test
cmp
push
fwait
inc
movsb
xor
shl
out
jo
sub
and
daa
dec
cmp
mov
incb
xor
xor
pop
add
cmp
fistps
imul
xchg
jge
leave
sbb
rcr
cmp
mov
sub
pusha
xlat
or
dec
sbb
or
rol
add
cmp
xor
mov
cmp
adc
jbe
dec
cmpb
push
jns
add
mov
daa
jmp
clc
jb
pop
and
and
loopne
push
dec
or
sub
lret
cs
iret
mov
loope
add
jne
sbb
xorb
shrb
push
andl
loope
mov
push
jle
call
clc
out
mov
cmp
inc
lret
and
pop
clc
inc
add
push
pop
xchg
push
dec
cmp
inc
mov
in
sbb
inc
sub
push
push
addr16
movsl
mov
orb
sub
or
pop
xchg
jb
mov
ja
adc
fisttpl
iret
sarl
push
fiadds
cmp
ds
loop
dec
push
jbe
test
leave
mov
addr16
cpuid
pusha
dec
push
or
fisubrs
xor
cltd
xor
dec
xor
mov
or
mov
call
loope
adc
mov
enter
xlat
mov
loopne
pop
call
fcoml
lahf
mov
fmuls
insb
insb
nop
push
sarb
adc
inc
fiaddl
inc
sbb
aam
and
ja
test
mov
mov
sub
dec
sbb
xchg
cmp
and
loopne
xor
setns
shrb
js
cmpsl
mov
xorl
mov
aas
out
push
push
pusha
jmp
mov
enter
push
adc
sbb
xlat
je
scas
imul
iret
push
pop
adc
in
mov
les
in
xchg
jo
push
enter
mov
es
stos
fcomps
loopne
xchg
xchg
and
pop
and
inc
testb
inc
aam
mov
xor
mov
leave
out
mov
mov
push
add
add
cmp
pop
daa
push
cmp
and
roll
loope
iret
rcl
add
xchg
stos
into
push
fadds
mov
jb
call
xchg
pusha
lea
push
dec
test
adc
lock
dec
mov
mov
imul
in
jnp
into
call
lods
add
fisubs
jge
js
mov
cmp
jne
mov
or
mov
loope
add
lcall
aam
aam
mov
and
cvttps2pi
js
je
loope
jl
orb
out
add
sub
sub
scas
or
outsb
push
jmp
mov
rcll
mov
sub
inc
mov
leave
adc
adc
xor
iret
and
das
xchg
inc
and
jbe
inc
xchg
add
mov
pushl
addr16
xchg
dec
bound
mov
sbb
call
pop
mov
add
add
push
test
or
inc
test
cmp
sbb
mov
xchg
pop
jmp
insl
daa
pop
sahf
clc
and
mov
hlt
les
adc
pop
call
int3
outsl
jnp
sarb
inc
lds
pop
pushf
iret
cld
aad
push
movb
jmp
test
cmove
xor
js
mov
cmp
jl
mov
xor
clc
pop
ja
bts
jmp
adc
movsl
xor
cmp
push
arpl
aas
cmpsl
push
fsubl
pop
gs
pop
cmp
push
dec
je
mov
cwtl
or
xchg
jmp
mov
mov
icebp
insl
jo
xor
xchg
andl
arpl
cs
imul
sbb
jmp
add
add
dec
or
popf
jae
mov
jno
je
push
adc
pusha
mov
lods
and
clc
and
dec
mov
lea
or
stos
movsl
add
sub
and
cld
or
adc
push
push
jne
js
and
into
or
cmp
inc
pop
daa
faddp
adc
shlb
ss
imul
or
stos
dec
xor
hlt
in
in
jns
mov
jno
inc
jne
xor
das
sbb
and
adc
cmp
jo
sbb
std
adc
jne
push
ja
pop
mov
or
add
add
adc
pop
mov
mov
insl
dec
fldenv
scas
shll
outsb
pusha
sbb
loope
scas
cmp
leave
popa
pusha
repz
pop
mov
pop
les
jns
out
lea
pop
add
inc
mov
cmp
loop
es
sbb
mov
sub
cmp
push
pop
cmp
repz
js
xchg
movsb
fsubrp
mov
mov
pop
cltd
sbb
and
and
xchg
and
fsubrl
jmp
mov
jmp
jl
xorl
adc
gs
insl
inc
push
imul
push
mov
xchg
pop
fsubs
cmp
rorl
add
out
push
inc
push
sbb
push
sbb
dec
or
or
and
ja
fs
in
mov
aaa
inc
sub
mov
xlat
sub
pop
xchg
lock
ret
adc
sbb
and
out
add
test
push
cmp
mov
or
push
sbb
inc
cli
pop
push
lods
sar
inc
mov
pop
cmp
call
mov
jp
pop
popa
jl
shrl
cwtl
addr16
mov
cld
lret
repnz
push
push
call
add
fists
dec
push
mov
mov
inc
dec
jp
add
push
dec
mov
dec
xchg
nop
dec
lahf
push
push
sbb
loopne
les
mov
test
movsb
pop
pushf
cmp
movb
andl
mov
sub
fidivl
imul
lcall
push
push
mov
mov
add
adc
mov
sbb
cmpsb
fsubs
js
xchg
push
imul
pop
in
add
inc
sbb
or
loope
cmp
and
xchg
pop
or
adc
rorb
ds
and
mov
inc
and
adc
xor
or
dec
pop
in
mov
repnz
push
out
pop
enter
mov
lcall
sub
mov
push
dec
push
lret
or
mov
mov
testl
adc
adc
cmp
icebp
ljmp
push
fdivp
cmp
dec
call
xor
pushl
pop
xchg
mov
sub
sub
xor
das
pop
ficompl
and
ja,pn
xchg
mov
lcall
out
and
add
sbb
out
mov
das
loop
loop
idivl
outsb
cs
jno
lahf
lret
push
cmc
js
xchg
test
mov
inc
fcompl
or
xor
movsbl
jl
aas
adc
add
ret
inc
repnz
mov
fs
push
push
daa
enter
test
aaa
mov
cli
cmp
inc
adc
insl
or
dec
popa
fdivl
loop
mov
js
inc
push
decb
sbbb
daa
or
sub
mov
add
sbb
and
and
and
bound
pop
mov
cmp
dec
or
dec
clc
in
sbb
dec
orb
inc
cwtl
pop
faddl
add
dec
pop
bound
leave
pop
pop
adc
and
daa
jnp
pop
sbb
sbb
and
enter
pandn
dec
add
scas
cmpb
jg
loop
movsb
sbb
or
sbb
push
pusha
or
and
sub
fistl
push
add
add
cmp
and
push
inc
pop
inc
or
inc
lods
das
and
divl
test
push
pop
movl
rolb
inc
add
jae
mov
sti
pop
mov
mov
sbb
xchg
sbb
ret
or
sbb
pop
enter
popf
test
xlat
clc
mov
mov
inc
or
pop
movsb
add
imul
into
lock
inc
adc
xor
out
jmp
mov
adc
xor
mov
addl
ret
clc
adcb
mov
xor
sub
lahf
adc
push
or
movsb
imul
jmp
or
and
jg
addr16
mov
dec
mov
mov
add
enter
das
xor
jne
xchg
stc
pop
push
and
nop
and
arpl
sbbl
pop
sbb
imul
mov
js
test
jae
loopne
dec
loopne
push
scas
pop
mov
jbe
sbb
pushf
loop
scas
cmpsl
adc
test
pusha
sub
and
lahf
test
test
in
jmp
pop
stc
jg
inc
xchg
xchg
mov
pusha
xchg
sbb
xor
rcr
sbb
cmp
push
xor
mov
mov
jo
rolb
loope
pop
jmp
mov
sbb
pop
pop
xchg
push
dec
aam
stos
test
or
and
jmp
xorl
sar
jbe
push
add
das
xor
cmp
pop
pop
xchg
cmp
adc
sub
aam
ret
sbb
iret
out
aam
or
out
and
cmp
repz
jecxz
ds
pop
mov
jg
inc
mov
loope
push
mov
stc
add
xor
inc
ud1
adc
ficoml
orb
movsb
jae
sub
ret
lods
inc
adc
sbb
cmpl
cld
sub
fldcw
pcmpeqw
adcl
xor
add
sub
inc
inc
mov
pop
push
add
xchg
pop
insl
lds
xchg
inc
fldcw
enter
cmp
aas
fisttpll
aas
mov
cmp
ja
cmp
inc
push
and
push
loopne
mov
push
es
mov
call
adc
jne
test
xor
imul
imul
dec
mov
xchg
sbb
std
jo
push
sbb
mov
ja
das
add
in
addb
adc
jns
imul
or
add
or
imul
out
hlt
cs
and
shlb
mov
inc
pop
and
inc
out
fldenv
or
ficoml
shlb
xchg
stos
cmp
rcrl
daa
lahf
inc
add
cmp
or
pushf
mov
sbb
xor
mov
sbb
loop
sbb
lcall
cli
rcrb
jns
aaa
adc
inc
sbbb
loope
aad
push
dec
jb
shufps
mov
jl
nop
pop
mov
loope
push
inc
lods
dec
imulb
xor
mov
jne
adc
jne
jno
aad
push
or
nop
and
inc
push
push
pushf
mov
xchg
mov
push
push
orl
or
and
push
xlat
jmp
js
addl
or
add
cmp
ljmp
hlt
jmp
mov
and
push
adc
adc
dec
add
je
push
or
adc
inc
or
fadd
adc
ds
mov
inc
outsb
insb
bound
rol
add
mov
iret
scas
jae
shlb
inc
scas
loop
xor
jne
insl
insw
inc
ret
sbb
jg
add
rcrb
or
fadd
addl
sahf
mov
pusha
imul
bndldx
inc
cmp
pop
imul
mov
or
xor
push
adc
xchg
cmp
jecxz
lret
xlat
dec
xor
hlt
xchg
mov
xor
shrb
cmp
inc
xor
push
loopne
add
mov
inc
sysexit
enter
and
popf
ret
push
filds
add
inc
push
add
pop
shrl
lret
cmp
leave
mov
movb
mov
aam
and
call
mov
inc
js
pop
xor
iret
loop
sti
push
mov
pop
sbb
cmc
xchg
mov
push
in
adc
cmp
setne
pop
or
sbb
hlt
sub
add
mov
or
movsb
inc
or
push
ret
sbb
mov
imul
cmpsl
pop
pop
push
sub
or
mov
inc
in
xchg
mov
imul
out
and
mov
adc
push
dec
ret
dec
and
js
xor
cltd
mov
dec
gs
faddp
and
ds
lds
test
push
jg
pop
adc
adcw
sbb
nop
je
and
hlt
in
dec
fisubrl
and
or
dec
sub
mov
cmpl
loop
cmp
je
jecxz
jp
inc
lret
in
dec
fildl
sbb
lock
orb
sbb
in
dec
mov
daa
xor
jp
sbb
jbe
daa
sbb
sbb
fstl
adc
repz
es
aaa
fcompl
sub
jp
sub
or
shl
cmpsb
adc
pop
bound
shl
outsl
sbb
cmp
icebp
and
jae
das
sub
stc
enter
dec
push
and
or
and
mov
ljmp
cmp
in
xor
adc
mov
xchg
imul
fcmovnb
sub
jmp
xchg
inc
mov
inc
testb
call
inc
sbb
sbb
mov
adc
and
pop
nop
cmp
int3
pop
adc
mov
loopne
lcall
loopne
ljmp
gs
stos
mov
lods
mov
sbb
pop
dec
mov
adc
scas
mov
and
in
mov
out
rorl
nop
push
cmpsb
flds
imul
inc
adc
fisttpl
inc
xstore-rng
cmpsl
add
movsb
mov
ficoms
dec
cmp
pop
push
push
jge
loope
add
jle
out
and
cld
push
push
add
xor
push
xchg
sub
adc
sarl
inc
add
and
test
inc
sbb
es
mov
imul
mov
mov
add
xor
xlat
out
pusha
dec
into
pop
daa
outsb
add
xlat
inc
nop
jl
sti
push
inc
inc
daa
pop
xchg
push
cs
dec
dec
dec
dec
inc
mov
push
xchg
leave
shlb
test
mov
xchg
push
fisubs
push
cld
out
xor
cmp
jne
dec
mull
jae
pop
sub
stc
inc
incl
jb
jp
sub
adc
push
andb
loope
xlat
jns
in
inc
inc
cmp
ret
push
inc
lcall
pusha
xchg
mov
xor
sbb
and
sbbl
pop
icebp
movsb
jle
arpl
inc
dec
jne
int3
add
nop
inc
fists
jg
jno
das
dec
cli
or
mov
pop
add
stos
cltd
ljmp
stos
sahf
xchg
jnp
or
dec
jecxz
inc
gs
aam
inc
sbb
ss
cmpsl
dec
add
outsb
sub
cmp
das
cmp
rolb
fwait
xlat
ja
adc
jp
addl
nopl
dec
or
je
pop
xor
jbe
jp
push
or
push
in
int
cmp
jg
push
dec
cmp
mov
pop
cmp
cwtl
test
addr16
fcmovu
mov
dec
mov
sbb
xchg
sbb
fdivrs
pop
push
dec
test
jl
inc
and
add
jne
inc
dec
jne
or
cli
cmpsb
push
mov
aas
adc
mov
or
xor
xorl
jg
xor
and
sbb
xor
cmp
addr16
hlt
and
inc
and
call
sar
loope
inc
shrb
test
inc
jnp,pn
jne
xor
xor
cld
addr16
or
and
add
add
jb
adc
insb
add
clc
mov
sbb
aas
cmpsb
mov
dec
nop
sub
push
cmp
ret
popa
insl
sbb
adc
std
insb
push
scas
xor
push
adc
jl
xchg
stos
pop
mov
add
out
imul
int
and
subl
pusha
push
and
inc
loope
push
or
add
mov
in
push
xor
rorb
dec
dec
dec
lods
inc
xor
adc
repnz
jp
xlat
test
sahf
jmp
dec
rorb
ja
xchg
ja
cmp
lea
shlb
xchg
cwtl
inc
divl
lods
lahf
push
pop
mov
hlt
xor
clc
or
ja
jno
pusha
test
mov
ret
pop
add
into
aaa
dec
dec
add
xchg
dec
pop
xchg
add
cmp
mov
push
inc
je
dec
push
adc
int3
dec
negl
xlat
sub
scas
add
insb
mov
push
pop
push
xchg
iret
dec
dec
adc
adc
aad
sbb
test
out
or
cmp
jne
inc
stos
xlat
mulb
and
add
out
xchg
pop
popa
leave
xor
mov
les
test
or
cmpsb
adc
cmp
mov
inc
shll
push
pop
jo
mov
dec
or
addb
add
jo
adc
inc
in
btc
or
mov
es
cwtl
mov
lcall
adc
add
xchg
mov
pop
dec
pop
add
add
pop
movups
into
movsb
in
add
fwait
add
lcall
jl
push
jle
add
addl
dec
inc
lret
ss
xchg
push
xchg
dec
rorb
fsub
push
mov
add
xchg
pop
xor
out
std
push
test
xor
jmp
push
fdivrl
push
sub
and
rolb
dec
add
lret
incl
mov
pop
dec
xchg
pop
adc
rcrl
or
push
add
xor
add
xorl
in
in
pop
add
lret
and
add
adc
add
adc
nop
outsb
flds
add
clc
jne
adc
les
ja
popf
inc
add
cmpsb
or
mov
or
call
pop
xchg
sahf
push
cmp
int3
shrb
nop
sbb
inc
popa
stc
jno
lock
sbb
adc
pop
fcmovnu
dec
leave
mov
xor
and
test
fadd
sub
add
push
rorl
dec
cld
mov
pop
add
iret
push
and
fsub
pusha
inc
add
add
repz
popf
inc
adc
rcrb
push
jp
fmul
movaps
ja
loopne
adc
or
cmp
pop
sbb
sbb
jmp
xchg
sub
cmp
adc
sbb
pusha
roll
lcall
fsts
mov
idivl
cmp
and
pop
inc
or
add
sbb
dec
inc
adc
jge
idivb
cmpb
cmp
test
xchg
dec
dec
aaa
add
lds
sbb
sub
xor
mov
push
lret
or
push
in
or
movsb
mov
sub
inc
enter
pop
insb
fdivl
sbb
xchg
out
mov
rorb
stos
dec
and
push
add
add
add
adc
sbb
into
or
pushf
aaa
mov
nop
xchg
jns
add
lock
pop
rolb
lea
mov
movzbl
lea
push
addr16
testb
mov
pop
or
add
dec
fsubs
push
fisttpl
mov
cmp
cld
pcmpeqb
xor
push
dec
mov
aam
pop
mov
xor
xchg
or
mov
mov
sbb
je
push
pushf
cmpsl
mov
inc
fs
add
add
dec
loopne
dec
jnp
adc
das
or
rolb
mov
loop
les
xchg
je
inc
daa
lock
inc
pop
push
jno
push
ret
sti
jo
push
push
or
cmp
adc
adc
test
outsl
mov
mov
push
jnp
jl
cld
push
cmp
add
aaa
add
lea
outsb
dec
gs
call
or
dec
data16
iret
daa
dec
inc
rclb
orl
sbb
cmpb
xchg
stc
popa
filds
jo
mov
stc
push
pop
mov
push
mov
jnp
movsb
dec
cmp
or
loope
xchg
lcall
in
adc
inc
mov
inc
push
inc
fildll
loop
pop
inc
pop
pop
push
dec
push
or
sub
or
gs
jl
xchg
cmp
test
fcoml
test
push
push
sbb
lea
sbb
mov
out
push
push
enter
js
dec
or
inc
jle
nop
mov
jge
mov
add
or
scas
sbb
adc
decl
prefetchw
sbb
jb
pop
xchg
add
push
pop
rcll
mov
or
or
push
les
mov
imul
cmp
clc
adc
sti
out
pop
popa
xor
gs
fbld
lret
adc
xor
adc
adc
cmpsb
rcrb
xor
hlt
pop
inc
data16
movsl
add
les
shlb
in
inc
adc
or
inc
jb
test
push
call
mov
pop
add
fcoml
fldenv
dec
fcomps
push
psrad
enter
adc
sbb
cmp
sbb
test
adc
adc
mov
cwtl
pop
js
sti
fadds
fcomps
add
cmpsl
jge
pop
sbb
adc
sbb
cmc
jns
cmpsl
stc
jnp
test
sahf
out
arpl
inc
sahf
out
sahf
sbb
sub
cmp
stos
mov
xor
decl
or
dec
inc
cltd
icebp
sbb
xchg
cmp
cs
out
gs
in
incl
pop
lcall
xlat
popf
rolb
fdivs
sub
lds
jno
or
incl
inc
mov
movsl
leave
aam
cld
lcall
pop
aaa
mov
stc
dec
and
pop
and
sbb
jnp
sub
sbb
push
pop
inc
push
sbb
dec
pop
addb
pop
inc
pop
xor
enter
push
scas
jne
clc
dec
popa
outsb
popa
addr16
mov
mov
into
aad
sahf
pushf
addr16
das
incl
hlt
mov
add
mov
jns
xchg
xchg
into
jnp
sub
xchg
xchg
jge
jg
arpl
pusha
sbb
sbb
jo
ljmp
cmp
iret
push
sub
and
or
incb
inc
dec
or
mov
inc
test
mov
jmp
xor
xor
inc
add
cmpsl
sbb
lret
loopne
lods
adc
js
sbbb
popa
pop
and
or
xchg
filds
mov
mov
jne
sbb
push
mov
mov
xchg
pop
xchg
adcb
cld
cmpsl
xchg
sub
pop
and
inc
adcl
add
ret
test
or
jo
insl
popa
and
leave
stc
enter
inc
les
jp
test
add
push
cmp
sbb
mov
sbb
cld
jb
mov
xchg
push
pop
sub
ret
push
movl
fdivrs
ret
xlat
cmp
xchg
das
andl
or
xchg
rcr
xor
ja
push
add
enter
rclb
push
sub
fistps
pop
sub
lock
adc
stc
pop
mov
movb
add
mov
and
add
xchg
cltd
dec
push
out
pushf
mov
and
mov
popf
lahf
adc
inc
inc
mov
jmp
and
out
pop
jg
add
and
jnp
scas
push
jecxz
sar
inc
mov
divl
rcl
shlb
mov
mov
xchg
jl
inc
and
add
and
hlt
test
add
sbb
and
and
dec
pop
mov
cmp
test
xor
push
dec
pop
xchg
out
mov
fistpl
dec
fdivl
push
mov
sub
xor
sbb
cwtl
aam
fmuls
push
jle
mov
cmp
jb
popf
inc
mov
and
nop
dec
sarl
imul
add
cld
mov
out
fwait
mov
cmp
or
and
mov
arpl
xchg
mov
or
cmp
lret
enter
sbb
cmp
cmpb
dec
or
or
push
xor
test
ja
loop
inc
js
inc
jg
mov
stos
call
push
lock
pop
push
jns
test
cli
cld
sbb
dec
pop
jae
jmp
pop
dec
xor
sarb
les
dec
and
add
shlb
jo
mov
loope
push
aas
fprem1
mov
cmp
add
rcrb
xor
and
stos
xor
loopne
iret
cmp
fwait
gs
jl
add
pop
aas
imul
xor
jle
mov
and
mov
dec
sahf
cld
xor
jns
sbb
std
sub
dec
dec
inc
cmp
fcomi
fdivrs
dec
xchg
daa
in
mov
add
mov
push
inc
jne
mov
adc
adc
adc
push
pop
xor
loope
sbb
or
sub
lcall
imul
lock
add
and
and
cmpsl
push
lock
arpl
imul
aam
ja
fstl
sbb
and
pusha
imul
lock
aaa
xor
fcom
push
iret
int3
xchg
jmp
pop
movsl
in
or
sbb
push
jno
in
pop
fwait
jbe
add
xchg
data16
aaa
mov
das
xor
push
sub
stos
sarb
ret
sbb
sub
adc
arpl
hlt
and
inc
dec
push
loopne
mov
inc
jae
lds
push
sbb
cltd
and
lret
add
out
lcall
push
das
add
inc
mov
hlt
adc
add
sbb
push
shrb
jno
test
mov
jg
mov
and
rcrl
or
test
fmul
push
mov
dec
dec
pop
xchg
adc
insb
daa
inc
rorb
push
add
sbb
dec
and
pop
and
add
inc
or
mov
dec
pop
mov
movb
xchg
lods
and
mov
sbb
sub
mov
jmp
dec
sbb
lock
sbb
add
mov
sbb
jmp
and
aaa
loopne
jne
pop
imul
push
or
push
aas
pop
pop
clc
cmc
stos
mov
xor
inc
jmp
out
cmpb
in
add
loopne
sbb
mov
cmc
mov
xchg
inc
sub
mov
xor
sbb
lea
and
cs
xor
mov
mov
in
out
dec
add
and
test
loop
cmp
stos
decl
scas
or
cltd
dec
sahf
adc
jecxz
dec
jne
das
and
call
mov
sub
add
in
mov
sub
das
movsb
je
sub
call
imul
xor
xchg
sub
sbb
or
inc
loope
and
jle
ljmp
incl
fstpl
in
lods
cmpsl
xor
pop
inc
pop
hlt
sub
inc
add
xchg
sub
cmp
enter
cmp
lock
sbb
add
lock
xorb
ljmp
inc
cmp
into
xchg
lret
mov
rorl
push
in
test
adc
add
cwtl
add
push
dec
mov
inc
push
aad
inc
dec
jne
fwait
push
sub
pop
pop
jnp
sub
pop
pop
gs
sub
ljmp
pop
inc
sti
xor
push
leave
pop
cld
or
dec
jmp
ret
fsubrs
repz
sbb
add
ljmp
lret
dec
xchg
test
xchg
xchg
and
andb
cs
dec
orb
and
xor
inc
ret
xlat
and
mov
int3
inc
movsl
jo
inc
cmp
sub
push
inc
sub
mov
arpl
sub
lods
outsl
pop
adc
pop
imul
add
dec
movsl
das
inc
pusha
or
test
lods
das
les
iret
clc
je
mov
xor
dec
push
jge
into
cmpb
out
cmp
xchg
cli
jl
mov
xor
lods
cwtl
and
mov
js
and
std
inc
inc
add
lods
mov
lcall
in
add
mov
mov
add
outsb
add
imul
or
inc
testl
nop
adc
popa
xchg
add
cltd
xor
push
and
popa
es
push
mov
imul
aam
mov
idivl
nop
and
rol
cld
jbe
push
jmp
cld
pop
insb
int3
mov
ljmp
dec
pop
adc
dec
adc
adc
jmp
xchg
adc
jnp
pop
adc
into
xorb
cmp
adc
jae
or
push
inc
insl
gs
jo
loope
arpl
add
or
sbb
and
add
push
inc
setl
push
xor
push
and
loop
and
or
dec
mov
adc
jg
add
push
pop
inc
add
add
or
cmp
mov
bound
jb
insl
push
adc
jne
arpl
call
adc
xchg
dec
xchg
cs
test
xor
jne
imul
test
pop
jno
add
stc
jmp
push
clc
push
ret
outsl
push
sbb
subb
push
inc
push
adc
or
cwtl
xchg
and
inc
xor
shl
and
sbb
mov
orb
sbb
sbb
in
ss
push
adc
mov
divl
jge
sub
stc
dec
pop
js
arpl
std
jne
push
pusha
cmpl
data16
sub
push
push
lods
add
inc
jno
xchg
inc
ja
add
or
push
leave
rorb
push
lea
cmc
pop
pop
ret
movl
push
push
adc
add
xchg
out
push
inc
sbb
rcl
push
out
or
xchg
dec
in
xchg
sbb
xchg
xchg
jl
cmp
inc
xchg
sbb
addb
and
and
subb
xor
rcll
aam
push
xchg
mov
fildll
mov
pop
scas
pop
rolb
inc
lock
js
add
cmp
add
test
mov
roll
pop
jbe
imul
mov
fs
idivl
and
xabort
mov
jb
pop
std
xor
fcomps
and
push
mov
rorb
outsl
addl
push
sub
xorl
adc
mov
xor
mov
test
adc
or
jne
inc
insb
add
push
push
inc
orl
add
push
stc
sub
es
xor
mov
push
pop
dec
in
orb
cmp
ret
outsb
dec
add
push
xadd
dec
out
inc
cltd
and
cmp
mov
adc
mov
cmp
enter
outsb
pinsrw
mov
mov
lods
test
dec
dec
dec
movsb
mov
dec
dec
xchg
nop
mov
test
dec
dec
je
insb
push
lahf
fs
pushf
pushf
faddl
punpckldq
pushf
pushf
pushf
pushf
gs
pushf
pushf
imul
pushf
insl
outsb
outsl
push
pushf
pushf
pushf
pushf
push
push
push
push
pushf
pushf
pushf
pushf
push
push
push
pop
pushf
pushf
pushf
pushf
pop
pop
pop
pop
pushf
pushf
pushf
pushf
pop
pop
pop
inc
pushf
pushf
pushf
pushf
inc
inc
inc
inc
pushf
pushf
pushf
pushf
inc
inc
inc
dec
pushf
pushf
pushf
pushf
dec
dec
dec
dec
pushf
pushf
pushf
pushf
dec
dec
dec
xor
xor
pushf
pushf
pushf
xor
pushf
pushf
pushf
cmp
cmp
pushf
pushf
pushf
cmp
pushf
pushf
pushf
and
and
pushf
pushf
pushf
and
pushf
pushf
pushf
sub
sub
pushf
pushf
pushf
sub
pushf
pushf
pushf
adc
adc
add
mov
cmp
lods
or
repnz
inc
pushf
adc
enter
or
stc
mov
and
jo
inc
push
mov
push
fidivl
shlb
fsub
xor
out
and
loope
or
ds
xorl
xchg
push
mov
cmp
cmp
sub
add
pop
sub
inc
rorl
adc
mov
push
push
or
pop
and
cmp
jns
push
push
adc
adc
sbb
mov
int
jns
les
mov
add
rcrl
mov
add
jmp
adc
jmp
adc
stc
cmpsl
adc
lods
add
add
ds
mov
adc
dec
cmp
adc
adc
in
xchg
cs
pop
xchg
inc
aas
addr16
push
frstor
push
ret
inc
adc
pop
mov
stos
sbb
push
movb
xor
lods
cmp
mov
pop
or
sub
mov
decl
jo
push
adc
push
adc
cmp
sub
pop
mov
loope
aas
inc
test
push
add
add
adc
loope
mov
push
sbb
sub
mov
std
rorl
xor
pusha
fcoml
jmp
mov
rcrl
xchg
add
into
cli
loopne
test
xor
xor
or
adc
sbb
xor
int3
xor
cs
mov
fildl
inc
pushw
mov
cli
pop
jg
ret
add
dec
int
dec
arpl
inc
mov
and
cmovne
or
push
nop
inc
cmpsl
ds
mov
xor
inc
add
fisttpl
or
add
jae
or
data16
enter
or
iret
push
nop
inc
mov
aam
sti
cwtl
stos
addb
pop
push
dec
cmpsl
add
fldenv
dec
adc
dec
push
or
sub
pop
ret
je
pusha
jl
mov
lret
inc
and
out
cmc
jo
push
or
rclb
imul
bound
in
inc
inc
inc
insb
add
inc
jl
js
ret
ret
push
push
imul
inc
inc
imul
adc
in
adc
aad
xor
dec
les
push
imul
in
std
add
pop
mov
cmp
inc
iret
add
out
ret
xchg
sub
jmp
mov
pop
add
add
add
rolb
aas
mov
leave
xchg
push
mov
ret
pop
inc
inc
jp
and
mov
jge
dec
add
xchg
rcrb
daa
rcl
and
je
aad
sub
pop
dec
stc
inc
push
push
xor
jecxz
add
cmpsb
mov
jns
pop
push
mov
lcall
outsl
insb
adc
addb
mov
xor
cmp
push
push
fwait
rclb
dec
sub
imul
jb
sbb
out
pop
gs
int3
add
push
inc
sbb
push
or
je
imul
loopne
enter
jo
or
xor
adc
or
data16
stos
fwait
jae
adc
adc
pop
mov
and
add
loope
adc
jae
je
aas
imulb
lahf
cmp
fists
jns
cmpsb
clc
cmp
cmp
push
data16
sbb
or
je
arpl
adc
adc
gs
test
int3
or
imul
imul
scas
mov
lahf
jae
xchg
movsb
iret
mov
jbe
es
outsb
int
paddsw
cs
jo
outsl
sbb
push
inc
das
sti
adc
outsl
je
sbb
or
fdivrs
jl
or
dec
outsb
jae
shl
fimull
sbb
jb
push
inc
insb
dec
sbbl
or
and
xchg
repnz
add
stc
cld
and
inc
insb
push
push
push
out
outsl
push
push
jo
inc
push
mov
jnp
inc
jns
sbb
or
pop
push
jo
nop
and
xor
sbb
adc
xor
popf
lret
mov
adc
loopne
negl
adc
loopne
add
jne
jnp
in
dec
pop
faddl
push
mov
xor
dec
jl
jp
data16
lods
mov
sbb
je
adc
cs
inc
imul
pop
inc
outsl
jb
jae
bound
or
mov
pop
add
mov
adc
pop
mov
decl
push
in
mov
push
push
xchg
xlat
pop
sub
adc
cli
jle
sbb
add
jle
dec
cmp
inc
imul
and
jne
xor
imul
add
add
into
pop
dec
sub
and
fs
mov
cmp
add
jecxz
add
fucom
pop
adc
mov
adc
inc
loopne
push
call
insb
out
lahf
les
push
add
mov
cmp
fwait
sub
fstl
push
gs
imull
push
fdivrs
cmp
arpl
or
sbbb
nop
addl
mov
mov
mov
ss
inc
sbb
mov
leave
push
push
sbb
or
mov
push
pusha
addb
push
add
push
and
and
ror
repnz
push
pop
inc
repnz
mov
mov
sbb
and
dec
adc
add
pop
scas
leave
and
add
mov
aas
add
add
add
in
in
add
addr16
insl
xchg
insl
ds
add
push
shlb
dec
dec
testl
push
sbb
xlat
fwait
in
mov
in
jo
aaa
nop
mov
sbb
sbb
xchg
insb
pop
add
adc
incl
decl
jo
push
clc
xor
sbb
pop
insb
and
pop
xor
pop
iret
push
movsb
cmpsb
push
js
shlb
push
inc
inc
pop
push
test
jae
pop
sbb
adc
aad
dec
xchg
adc
sbb
add
jnp
ds
aas
push
int3
push
or
fnstsw
adc
rorl
adc
sbb
add
aas
mov
mov
fcoml
pop
xchg
and
mov
sbb
pop
push
sbb
idivb
add
push
ljmp
mov
es
sbb
pusha
mov
sbb
xchg
insl
pop
test
xor
decl
clc
dec
cmp
sbb
dec
das
inc
and
xchg
pop
mov
call
inc
movsb
mov
fs
push
pop
in
mov
mov
pavgb
nop
pop
adc
lock
insb
jle
push
mov
in
sarb
rclb
or
xchg
pop
and
test
nop
test
push
test
out
dec
loopne
test
or
mov
fiaddl
aam
insl
popa
notl
push
xlat
sbb
popf
idivl
js
push
xlat
sub
mov
mov
scas
into
jo
stc
inc
xchg
orb
inc
inc
jno
sahf
cld
inc
sub
and
inc
pusha
lahf
inc
pusha
mov
pop
push
xchg
movsb
scas
mov
sarb
inc
test
test
enter
jl,pn
mov
mov
scas
movsb
mov
xor
dec
push
scas
mov
mov
xchg
xor
mov
js
mov
push
movb
pop
sbb
pusha
dec
adcb
dec
xor
test
mov
push
les
or
pushf
mov
nop
xchg
and
fs
mov
cmp
cwtl
outsb
leave
xor
inc
psrlq
add
push
xor
mov
das
je
inc
lods
push
mov
jg
mov
sbb
mov
lock
pusha
cmp
add
push
mov
cmp
pop
sbb
push
mov
and
pop
into
cmp
inc
shrb
push
push
xlat
das
bound
aaa
hlt
push
sub
xchg
xor
push
xchg
adc
jbe
jbe
push
out
push
iret
out
push
inc
pushf
adc
or
mov
xor
nop
jle
lods
xchg
xor
inc
dec
jne
push
sbb
and
mov
gs
add
sub
addr16
orl
cmpsl
movsl
decb
pop
mov
and
inc
jl
adc
movl
push
dec
or
je
sbb
outsl
pop
sub
xchg
ret
dec
nop
mov
rorl
inc
cmp
xor
lea
xchg
sbb
test
adc
xchg
sub
test
ret
stc
xorb
popl
decl
pusha
xor
adc
cmp
push
mov
dec
and
les
or
xchg
mov
mov
push
mov
cwtl
in
cmpb
decl
and
adc
cltd
mov
cmc
cmp
rol
jne
cmp
hlt
and
or
das
xor
dec
leave
jg
xchg
daa
mov
inc
popa
repnz
add
popa
movsl
pop
or
mov
or
outsl
pushf
ret
fs
ss
or
cmp
je
enter
outsb
and
cmp
dec
and
mov
neg
inc
xchg
add
icebp
mov
sar
je
incl
jle
dec
cmpsb
cmp
pop
or
cmpb
adcl
xor
adc
in
add
adc
mov
push
decb
adc
or
orb
mov
cmp
push
fisttps
cld
pop
test
push
shr
shr
push
fstps
arpl
pushw
clc
adc
std
xorb
mov
mov
clc
adc
in
pop
cmp
pop
cld
es
mov
dec
gs
in
sbb
shlb
xor
pop
xchg
arpl
pop
inc
xchg
ljmp
imul
mov
outsl
ja,pt
ss
inc
imul
jb
dec
xchg
jnp
add
push
dec
in
mov
dec
xor
push
add
lcall
pusha
mov
push
add
insb
aaa
pop
popa
scas
clts
aam
push
sub
jb
in
aas
add
jmp
cmpsl
jl
ret
cmp
jne
or
ja
mov
pop
in
stc
mov
ja
add
inc
sahf
scas
xchg
lds
loop
addr16
xor
loopne
push
pop
lcall
imul
scas
mov
movl
fdiv
jo
push
pop
les
ret
adc
sti
js
push
inc
sahf
jo
jecxz
add
jnp
jo
push
mov
sbb
or
icebp
push
jne
sahf
adc
xchg
xorb
sbb
push
fistl
xchg
and
fwait
pop
push
or
push
mov
mov
je
mov
xor
hlt
popl
push
jne
je
faddl
add
add
iret
sbb
push
in
or
jg
cmpxchg
pop
jnp
test
aaa
inc
icebp
mov
pop
or
cs
call
adc
aaa
adc
imul
ss
adc
fcoms
or
stos
cmp
daa
jne
lock
lds
sub
pop
addb
stos
sbb
inc
daa
inc
shrl
xor
add
scas
test
jecxz
dec
sahf
aaa
mov
aas
or
inc
insl
cmpsl
or
adc
aam
or
sub
popl
test
push
mov
cltd
sarb
cs
inc
ret
testl
int
cmp
cli
or
cmp
fistps
out
xor
xor
push
sbb
lods
mov
loope
mov
ds
cmp
outsl
add
cmpsb
sub
dec
push
scas
jg
imul
jnp
inc
lahf
adc
dec
cli
test
dec
mov
dec
and
or
add
mov
loopne
out
mov
xorl
cmp
or
sub
popf
adc
addr16
mov
dec
jp
cmova
inc
imul
cmp
push
xor
mov
dec
addr16
sti
pushf
sbb
scas
push
addr16
xor
dec
push
inc
ss
push
mov
push
push
pop
adc
ret
es
iret
inc
inc
mov
dec
mov
cs
push
add
push
adc
push
test
dec
sub
push
mov
ficompl
or
pop
mov
aas
jns
loopne
sub
mov
insb
jle
xchg
inc
jmp
faddl
icebp
movsb
push
push
popa
mov
es
mov
cmpl
or
orb
xchg
cmpsb
mov
adc
mov
adc
cmp
mov
lea
xor
push
sbb
adc
lock
adc
jl
rolb
and
test
out
jb
cmpb
jmp
or
jmp
shrb
add
mov
mov
add
pop
mov
test
mov
call
mov
add
lods
arpl
and
jo
mov
in
pop
or
pushf
inc
out
dec
mov
in
rclb
out
cmp
sbb
adc
lahf
jle
test
js
mov
gs
xor
mov
ret
das
push
dec
test
jo
xor
add
popf
and
ret
fcomps
adc
adc
xor
cmc
adc
mov
sub
mov
iret
xor
imul
sbb
xlat
or
adc
jo
cli
xlat
inc
add
loop
mov
adc
jae
mov
arpl
mov
jae
ret
mov
and
rol
mov
loop
add
mov
es
inc
fstpt
clc
and
cmpsl
xchg
jno
jne
shlb
inc
jle
adcl
push
cmp
mov
fmull
lahf
xor
cwtl
ss
sbb
mov
add
lea
sahf
movl
nop
gs
push
adc
add
jo
mov
rorl
inc
push
cmp
adc
ljmp
scas
jmp
or
push
inc
or
push
push
mov
out
pop
pusha
xchg
mov
mov
daa
and
cmp
mov
test
add
jmp
xchg
push
mov
jp
inc
clc
clc
push
push
insl
jge
in
pop
sub
add
cltd
sub
or
js
and
lock
mov
movb
push
sub
addb
mov
mov
ja
jle
mov
jmp
mov
mov
cmc
out
out
push
loopne
push
or
in
mov
dec
sbb
dec
mov
cwtl
fisttpll
xchg
or
stc
sbb
xchg
popa
cmpsb
jne
pop
dec
les
jmp
sub
movsb
mov
je
fcmovnb
cmp
push
test
push
push
ss
bound
stos
and
sbbl
and
push
arpl
sarb
outsb
dec
daa
cltd
scas
push
sbbb
ret
inc
adc
mov
ljmp
dec
and
cmp
inc
inc
add
jge
shl
xchg
and
lods
shrb
sbb
arpl
xor
filds
outsl
out
add
sbb
push
leave
dec
test
fdiv
outsb
aam
pop
xor
push
das
xor
fldcw
sub
test
shl
pop
push
push
sbb
jo
hlt
arpl
movsl
and
sub
pop
push
rorb
push
and
mov
adc
push
nop
jg
xor
jmp
mov
fsubr
mov
sbb
sbb
fmull
pop
dec
lds
out
sbb
or
fs
or
sub
inc
hlt
ret
clc
movb
out
je
xchg
cmp
hlt
out
jb
es
dec
test
add
hlt
jo
sbb
int3
mov
push
xchg
imul
mov
mov
mov
cmp
inc
stos
push
enter
inc
xchg
xchg
cmp
test
mov
push
negb
dec
push
jp
or
dec
jp
xor
pushf
add
out
and
fldl
adc
jp
clc
jbe
push
lock
lods
icebp
and
sbb
mov
and
add
aaa
lds
mov
jbe
das
push
cmp
dec
add
mov
movb
int3
mov
aaa
sbb
call
pop
sbb
sub
push
adc
hlt
nop
adc
dec
je
enter
fbld
outsb
repnz
outsb
faddl
push
or
push
fdivrs
xchg
add
xchg
outsb
clc
jo
sbbl
mov
mov
fisttpl
xchg
cmp
xchg
jmp
mov
loop
jne
adc
adc
ds
pop
js
mov
cmp
mov
or
xor
xor
mov
mov
xor
nop
jo
jl
cmpsb
xchg
jp
xor
scas
js
xchg
test
shlb
fwait
imul
rorl
sti
add
or
adc
add
adc
cmpsb
ja
dec
sbb
add
pop
enter
lock
jns
out
pop
shl
inc
jne
jle
pop
pusha
pop
or
xchg
bnd
dec
mov
mull
mov
aad
push
jne
inc
nop
popf
adcb
jmp
mov
jle
ds
testb
jns
inc
xor
dec
orb
enter
lock
pop
push
adc
popa
pusha
sub
inc
sbbb
mov
xor
pushf
sbb
mov
push
and
dec
jge
sub
addr16
daa
insl
mov
push
adc
test
loope
mov
test
ja
or
pushf
mov
inc
jb
dec
mov
jmp
enter
cmp
out
divl
add
push
or
push
add
or
pop
or
or
dec
jae
stc
xor
push
or
ja
sub
push
push
cmp
sub
cmpsb
rcrb
in
jae
xchg
push
clc
xor
cltd
andb
and
js
hlt
in
call
cmp
int3
cmp
mov
sub
inc
fldcw
and
jo
and
enter
arpl
scas
xchg
gs
xchg
inc
movsl
mov
add
adc
cmp
jae
push
push
in
js
pop
mov
xchg
or
jge
popa
xchg
dec
push
repz
push
incl
sbb
inc
lret
mov
addr16
or
mov
push
mov
cmpsl
sahf
icebp
and
push
or
add
frndint
sbb
jecxz
je
sarb
pop
push
ret
loopne
add
push
or
inc
add
sbb
mov
cli
adc
lea
adc
shlb
push
mov
stos
add
test
pop
xlat
insl
cmp
push
je
xor
ret
cmp
xor
iret
dec
pop
cmpsl
mov
cmp
pusha
jns
testb
lcall
lea
sub
imull
cmpsl
inc
movb
inc
jne
cmpb
pop
fs
add
cmp
fidivs
jne
adc
cmp
subl
js
ljmp
nop
mov
adcl
dec
scas
dec
scas
enter
add
xchg
adc
daa
std
or
sbb
repnz
pop
jbe
andb
xor
loope
out
lock
and
subl
outsl
nop
dec
iret
add
adcl
add
in
imul
cs
outsb
jns
insb
add
scas
push
fucomip
add
jns,pn
ja
outsl
getsec
iret
test
fdivrs
dec
dec
add
xchg
aam
and
push
or
shlb
mov
fcmovnu
mov
mov
loope
pusha
add
enter
add
cmp
push
or
mov
xchg
aas
cmp
test
pop
jbe
ja
xor
or
daa
sbb
or
rorl
or
sub
orb
mov
jae
push
pop
mov
pop
or
shll
sbb
scas
outsl
mov
cmp
je
negb
call
fmul
dec
add
and
ds
insl
push
add
push
cmp
or
or
or
and
in
int
pop
push
daa
sub
mov
jae
pop
or
push
loopne
sub
adc
sbb
test
pusha
jb
pop
or
mov
sbb
jno
dec
jo
jne
fildll
adc
data16
inc
xchg
mov
mov
insb
adc
dec
pop
aas
add
mov
mov
popa
add
mov
das
rclb
dec
enter
aam
push
imul
loopne
add
leave
ret
push
ss
sub
leave
add
mov
cmp
outsl
or
pusha
dec
mov
insl
rcr
or
push
jp
jo
push
enter
xchg
adc
cmpsl
add
lea
je
lock
mov
popf
and
call
addr16
out
subb
cmp
movups
pop
jge,pt
adc
loope
xor
or
sarb
loope
adc
in
movsl
vmwrite
inc
jl
push
push
mov
sub
cmp
sbb
or
fdivr
add
ret
loop
test
or
cmc
fwait
mov
imul
in
nop
ror
add
bound
sahf
mov
shll
push
je
cmp
js
mov
fcomps
in
push
bound
aam
mov
out
pop
in
outsl
imul
cwtl
push
xchg
in
out
cmp
mov
adc
inc
ss
imul
call
inc
sbb
lcall
les
in
mov
rcrb
dec
mov
scas
fiaddl
fincstp
shll
fscale
popa
icebp
or
push
ret
cmp
shlb
faddl
mov
pop
jg
add
push
sub
sub
cmp
adc
cmp
and
xchg
in
test
adc
or
in
dec
pusha
jge
add
or
in
mov
sub
fcoms
pushw
shlb
mov
les
call
je
fsubl
insl
or
cmp
lea
sub
mov
sbb
and
and
dec
mov
pop
ljmp
lock
jmp
jns
xor
sbb
cmp
insl
or
sub
inc
inc
das
inc
xchg
add
data16
add
sbb
sti
loopne
movb
mov
sbb
mov
stos
dec
enter
jmp
leave
dec
sbb
inc
or
bound
dec
cmp
punpckhdq
adc
add
sub
movsb
adcl
add
lea
add
dec
pop
or
lcall
add
or
hlt
add
adc
xor
inc
mov
adc
mov
pop
lods
sub
cmp
aas
adc
jle
inc
mov
dec
repz
mov
push
pop
pop
pop
pop
clc
xchg
pop
push
inc
dec
jne
or
cmp
sub
pop
push
or
mov
add
inc
jo
fistpl
sbb
or
lea
push
movsb
jae
js
in
fildl
cmpl
dec
jns
sbb
jmp
dec
and
mov
cmc
incb
mov
mov
jmp
scas
push
sti
pop
lock
add
adc
adc
xchg
cld
push
or
pusha
loopne
inc
cmp
cmpl
push
cmpl
lret
mov
mov
sti
popa
cmp
cld
rolb
jne
ds
and
repnz
mov
mov
std
lea
mov
outsb
pop
push
cmp
cs
ss
xor
jmp
addr16
data16
add
xor
cld
loop
roll
addb
xchg
inc
lret
add
into
movsb
ja
das
jne
add
mov
and
adc
ja
mov
dec
movzwl
lea
xchg
lret
or
leave
in
clc
repz
push
dec
xlat
pop
cld
test
adc
push
inc
pop
pusha
add
pusha
and
mov
push
push
pop
clc
frstor
ss
sub
cmc
je
stc
aas
push
inc
mov
dec
mov
add
mov
push
fcomps
es
lock
adc
cmp
jno
sti
pop
push
fcoms
mov
outsl
fdivs
addr16
dec
lock
cmp
cmp
call
loope
rolb
jo
mov
add
hlt
sub
add
xchg
mov
je
fwait
aam
jge
inc
push
outsl
push
dec
dec
mov
mov
xor
clc
inc
outsb
xor
shrl
loope
fadd
mov
ja
ret
jnp
jns
insb
je
test
out
and
mov
or
xor
push
test
ljmp
lods
lock
jb
push
gs
shlb
xlat
mov
add
stc
sbb
or
jmp
cmp
loopne
fcoml
add
add
popa
add
ret
mov
shrl
leave
mov
and
adc
pushf
gs
add
cmc
add
nop
pop
cld
push
push
gs
leave
test
jo
add
test
adcb
mov
insl
arpl
sub
pop
mov
mov
add
mov
xor
pop
add
adc
sub
jne
ss
lock
inc
jmp
add
inc
mov
std
mov
int3
cmc
decl
cmp
jg
test
jle
cmp
jl
cmpsb
aaa
adc
popf
mov
cmp
jg
cwtl
and
mov
cmpl
nop
push
cmp
or
mov
popa
enter
dec
sub
pusha
imul
call
lahf
sbb
pop
adc
dec
xchg
nop
adcl
enter
push
add
fcomps
add
sbb
sbb
fsubrs
scas
sub
sub
jbe
push
mov
or
push
pop
popa
mov
das
and
fmuls
mov
ds
sub
test
cmpb
xchg
xchg
rcr
jo
dec
adc
lret
inc
ret
in
sub
or
outsl
or
jl
push
cmp
dec
loopne
in
ss
dec
mov
stos
insb
orb
cmp
jmp
jno
mov
xor
ss
and
js
push
repnz
add
sub
mov
aad
xor
call
loope
call
sub
imul
sub
nop
mov
enter
jbe
add
mov
mov
mov
push
mov
sbb
add
xchg
or
dec
rdpmc
shr
dec
pop
hlt
nop
xchg
inc
rolb
repz
inc
gs
jo
push
jns
int3
aas
adc
mov
add
xor
js
mov
jcxz
mov
imul
xchg
shr
xchg
sbb
pop
push
cmp
or
xor
bnd
lock
test
add
and
insb
jecxz
adc
sbb
pop
addb
shr
mov
mov
repnz
jl
cmp
sub
rolb
je
sbb
or
xchg
sub
sub
add
or
je
dec
or
xchg
xor
mov
sub
jmp
les
out
movsb
mov
xor
jmp
lea
jmp
jge
and
imulw
sub
or
adc
cmp
jns
add
and
shlb
push
sub
adc
stos
cld
inc
or
js
mov
push
pushf
and
inc
pop
lret
hlt
icebp
dec
iret
sub
js
adc
cld
sub
clc
stos
adc
testb
sub
dec
pop
sbb
mov
xor
aam
push
sbb
sbb
ret
mov
cmp
push
out
add
inc
mov
jae
mov
out
add
insb
and
mov
sbb
popa
push
ret
cs
clc
pop
mov
xor
mov
mov
inc
incl
sbb
cmp
ss
hlt
mov
jg
pop
or
loope
and
push
ret
outsl
lods
sub
nop
mov
push
mov
jns
sbb
adc
insl
clc
jg
xlat
pop
mov
scas
addl
pop
dec
shll
add
insl
jns
mov
out
addl
dec
adc
in
loopne
mov
out
imul
nop
and
lcall
dec
movsl
loopne
aaa
push
stos
add
push
inc
push
add
rorb
sub
mov
inc
fmuls
xor
or
xor
mov
out
in
outsb
add
push
lods
or
push
mov
or
push
sbb
push
orb
push
mov
outsb
mov
mov
sbb
xchg
lods
sbb
in
in
push
xchg
cld
adc
mov
xchg
inc
int
mov
loopne
dec
jae
jecxz
adc
jo
or
arpl
stos
jle
or
push
movb
popa
xor
sahf
adc
clc
and
and
dec
add
pop
mov
in
test
push
jmp
loopne
xor
cmp
jns
mov
das
sbb
mov
fsubs
sub
xor
adc
xor
lcall
push
ret
push
dec
or
invd
enter
dec
inc
test
and
jg
xchg
cmc
add
mov
cmp
pop
rolb
cld
xchg
cmp
ror
or
mov
sbb
sub
ret
ljmp
jno
aas
test
mov
fisttpl
hlt
mov
add
movb
loopne
out
adcl
loope
hlt
pop
jne
cmp
inc
sbb
stos
mov
inc
daa
lock
ret
imul
mov
add
loope
lahf
xchg
pop
fldcw
dec
js
lret
jp
je
nop
mov
xchg
and
pop
insb
add
es
sbb
cld
leave
ret
inc
push
inc
push
jbe
sbb
xorb
fistps
int3
pop
adc
or
ret
popa
pop
insb
testl
dec
addr16
filds
andb
sbb
nop
ret
or
inc
out
inc
cmp
xor
and
push
cmp
movsb
int
je
daa
mov
pop
mov
dec
inc
cmp
subl
movsl
push
rorb
or
pop
sub
xor
dec
rolb
xor
and
or
and
dec
sub
fisubrl
insl
cmp
adcb
xor
push
push
adc
add
jne
dec
imul
pop
jo
mov
imul
inc
push
imul
es
and
xchg
add
push
sub
add
add
nop
cmpsl
sub
sbb
add
adc
lock
adc
mov
out
and
popa
fs
arpl
pop
sub
lahf
aas
movsb
jg
push
xchg
xor
adc
push
sub
xor
mov
mov
sub
xor
mov
push
lds
out
xchg
cld
or
push
cmovno
negb
rolb
rcll
clc
pop
xor
and
pop
sbb
fadds
lahf
dec
sub
cmpsb
push
mov
or
lds
xor
jae
pop
int3
push
fsubs
js
sti
pop
mov
pusha
push
loope
cmp
adc
xchg
ret
mov
jg
push
mov
inc
jp
inc
dec
add
movsb
xchg
xchg
push
or
imul
and
or
xor
adc
cmpb
cmpl
or
inc
insb
andl
sbb
or
xchg
adc
add
mov
jmp
or
mov
dec
sarb
cmp
lock
test
add
lea
jns
or
xchg
or
pushl
or
pop
ss
adc
and
push
stc
or
mov
push
ret
int3
add
fists
sub
cmp
xor
inc
test
add
xor
push
test
pop
fiaddl
jne
movl
mov
dec
gs
pop
jmp
cmp
jne
add
add
add
into
ljmp
arpl
ds
rol
les
push
adc
out
lahf
adc
aaa
enter
jne
sub
or
add
vpshrdq
scas
sbb
js
mov
push
xorl
aam
xchg
mov
pop
mov
daa
fs
out
leave
xor
flds
inc
adc
aaa
add
and
adc
dec
or
andb
les
mov
aas
fisttps
inc
mov
das
fldenv
add
movl
divb
adc
cmc
sub
call
jmp
sar
scas
pop
cmp
out
push
fmuls
add
xchg
sbb
push
and
lods
ss
mov
add
sub
pop
movsl
stos
loopne
and
sub
mov
pusha
sub
je
mov
sbb
ds
hlt
cmp
pusha
stos
add
in
nop
cmp
and
xchg
loopne
popa
dec
sub
jmp
sahf
xchg
adc
inc
insl
push
sbb
imul
jmp
outsl
push
je
mov
or
cmp
inc
lds
adc
imul
sbb
inc
mov
jno
adc
jne
pop
test
and
inc
shlb
jl
push
mov
test
lahf
loopne
dec
dec
cmp
jne
mov
xor
push
add
xchg
test
or
popa
je
xor
dec
imul
das
xor
repz
jecxz
sbb
in
jmp
xchg
sub
imul
jg
xchg
stos
cmpl
push
int
or
test
sbb
insb
jnp
int3
dec
jb
sub
insl
js
in
inc
in
cmp
xor
pop
nop
fsub
aad
pop
adc
mov
and
cli
add
je
pop
add
bound
shll
push
and
test
sbb
xor
jbe
pop
loopne
mov
ss
push
ja
loopne
adc
mov
je
std
loopne
test
or
aas
testl
loopne
and
xor
mov
cmpsb
push
outsl
mov
pop
and
cmp
insb
mov
mov
pop
shl
inc
jmp
test
pop
data16
mov
cmp
and
add
leave
xlat
add
inc
xor
mov
sub
dec
jle
xchg
inc
push
sub
xor
daa
lock
mov
push
mov
cmp
rclb
cmpsl
nop
fldenv
adc
mov
push
xorb
es
or
dec
lret
sub
and
sahf
jo
or
bswap
mov
mov
leave
leave
loopne
ds
add
jmp
mov
inc
addr16
nop
xchg
fimull
pop
adc
push
lods
pop
rorl
fidivrl
test
or
xchg
cmp
adc
cmpsb
adc
call
mov
fsub
mov
iret
repnz
lock
cwtl
lock
imul
movl
inc
sbb
mov
mov
pop
pop
js
in
popa
push
or
into
scas
rorl
adc
push
aaa
jno
cmp
fwait
daa
pop
ret
jl
movl
add
enter
mov
pushf
or
sahf
in
test
cmp
mov
negl
sub
sub
push
sub
cltd
or
jmp
adc
push
dec
jl
fisubrs
outsb
dec
mov
mov
jmp
popa
or
aaa
jns
sub
lea
and
xchg
out
and
xor
cmp
out
int
cwtl
mov
cmp
jmp
add
andl
nop
jge
test
es
popf
mov
out
adc
inc
mov
mov
sub
ret
inc
lods
and
lds
and
cmp
and
xchg
movsb
mov
push
mov
aad
or
ret
adc
in
xchg
add
cmp
mov
mov
test
into
mov
sub
addb
ds
inc
bound
jns
push
lret
adc
push
pop
or
cld
pop
jnp
xor
scas
iret
xchg
dec
mov
je
mov
push
or
int
mov
xor
inc
mov
mov
mov
fcom
movsb
adc
iret
sub
scas
cmpsb
loopne
sub
test
push
add
roll
test
fstl
pop
or
push
iret
push
jne
xchg
sub
add
xlat
mov
sub
movsb
ret
notb
inc
adc
and
sbb
mov
add
fcoml
pop
ret
cmp
push
sbb
mov
fisttps
dec
jg
movzwl
push
dec
in
scas
shl
adc
scas
lods
mov
mov
push
sbb
adc
mov
lock
pop
sbb
stos
mov
and
test
push
pop
imul
jg
pop
xor
or
sub
ja
jge
pushf
mov
fadds
std
dec
inc
cld
rorb
sbb
mov
jge
xorb
call
js
pop
dec
inc
or
inc
lret
outsl
imul
push
pop
and
push
orb
pop
movsl
lret
cmp
insb
xchg
pop
movsb
arpl
scas
add
sbb
mov
mov
negl
ljmp
pop
jle
in
jne
loope
sbb
loope
addb
ffree
scas
test
jmp
xor
inc
xor
fwait
xchg
adc
clc
roll
sbbl
and
push
and
cmp
dec
cmpsl
cmpsb
dec
or
adc
add
and
xchg
pop
mov
dec
stc
push
dec
in
test
push
dec
mov
xchg
ja
cmpsl
xchg
inc
in
ret
cld
pop
outsb
pop
sub
push
cmpb
pop
aas
dec
loope
dec
and
push
push
cmp
aad
or
jo
loope
mov
and
xchg
dec
out
stc
sub
cmp
sub
or
xor
and
insb
add
inc
jg
jnp
lods
clc
std
mov
icebp
sbb
dec
sbb
jg
call
push
sub
pop
adc
inc
sub
movl
push
pop
jecxz
sahf
adc
mov
xchg
xor
psubsw
aaa
sub
pop
inc
ret
push
adc
pop
sbb
xor
inc
sbb
xchg
jp
mov
rolb
sub
daa
fbld
or
call
sbb
mov
sbb
add
and
mov
lret
add
test
lods
sbb
and
push
ljmp
int
daa
dec
je
sub
je
sub
inc
or
je
xchg
sub
xor
cmp
xor
outsb
inc
test
xor
mov
faddl
jmp
push
dec
jmp
mov
mov
and
in
stos
push
add
or
movsl
test
rclb
out
outsb
ret
sub
dec
sub
mov
adc
cmp
add
bound
es
push
pusha
pop
adc
decl
mov
mov
add
pop
loopne
jmp
cmc
mov
in
mov
inc
mov
mov
add
subb
outsl
push
outsb
outsb
sub
inc
inc
mov
cmp
ja
lock
imul
push
mov
iret
adc
add
mov
inc
sbb
hlt
xorb
lahf
cmp
movb
push
aas
jae
add
out
arpl
lock
inc
xor
inc
mov
cmp
push
add
cmp
pop
add
add
cmpsb
test
lock
pop
jne
pop
das
or
dec
mov
rorb
test
pop
shll
aas
push
jb
push
pop
dec
js
inc
add
inc
stos
add
push
cmp
pop
cli
int3
gs
leave
pop
addr16
dec
sub
sub
xchg
inc
or
pop
sbbb
loopne
cmp
or
enter
sbb
dec
shl
mov
jp
ja
jae
test
adc
orl
and
adc
sbb
jg
gs
mov
or
subb
insb
jne
fisttpl
loop
mov
lock
sahf
dec
repnz
xlat
stos
mov
add
int3
cmp
xchg
dec
ljmp
pop
sub
xchg
pop
aaa
and
push
mov
hlt
ja
xor
rolb
ss
inc
cmpsb
or
sbb
sub
jg
je
sahf
inc
adc
add
jo
push
xor
idiv
mov
cmpb
ret
stos
iret
es
fcmove
adc
adc
mov
jmp
or
push
pop
test
or
add
pop
pop
cs
jno
lock
push
push
add
icebp
adc
je
sub
inc
rclb
aam
mov
add
std
push
nop
aas
sarb
add
inc
xor
dec
pop
sub
sbb
xchg
add
data16
or
je
movsb
stc
dec
popa
add
mov
out
or
sub
or
call
push
mov
xchg
pop
les
cmp
mov
repz
xor
enter
pop
insl
or
ja
jb
popa
inc
leave
idivl
jbe
pop
dec
pop
or
testl
jp
xor
stos
lret
movsl
cs
pop
jno
pop
or
lcall
adc
push
sub
daa
insb
add
aad
xor
pushf
scas
out
mov
cwtl
enter
lahf
mov
sbb
jb
sub
test
push
sbb
xchg
test
cli
ret
and
dec
push
or
out
push
out
or
or
stos
and
cli
dec
call
mov
pop
loopne
sti
sub
xor
add
xchg
cs
imul
mov
scas
lods
fdivrs
subl
inc
mov
mov
or
or
data16
iret
rorl
or
push
sub
jbe
jbe
mov
push
fadds
movsb
mov
jo
les
scas
cmpsl
xor
or
cld
lahf
in
enter
subb
push
lahf
add
and
push
fsubs
mov
pop
sbb
push
or
push
test
xchg
or
push
pop
pop
daa
daa
and
rorb
xchg
sub
xor
push
dec
push
loop
les
or
add
das
sbbl
inc
push
sub
xorb
adc
jp
imul
push
in
push
mov
pop
mov
inc
lods
or
aam
mov
dec
and
sbb
push
xchg
adc
ret
jb
shll
push
pop
jno
addb
mov
lock
mov
mov
clc
and
sbb
ret
inc
mov
jb
ficompl
jle
ljmp
and
sbb
adc
pusha
and
inc
add
add
nop
sbb
test
sub
xor
cmpsl
add
or
rclb
xor
mov
rcrb
icebp
push
push
mov
or
or
xor
mov
and
pop
nop
cmp
add
inc
shlb
orl
dec
rsqrtps
sahf
inc
in
xor
adcb
sbb
sbb
fmul
xorl
mov
hlt
mov
jno
in
ljmp
pop
add
jbe
adc
xor
pop
dec
and
ret
push
push
fs
and
in
pcmpeqw
insl
inc
movsl
mov
sbb
and
loop
enter
sbb
mov
sub
out
pop
mov
jl
push
je
int3
fadd
mov
mov
pop
mov
cmp
pop
cmp
test
enter
pushf
lret
test
stos
adc
frstor
push
rolb
xchg
sbb
and
xchg
add
cmp
stos
adc
jbe
data16
mov
sahf
fadds
adc
inc
add
mov
loope
mov
cwtl
push
add
iret
adc
mov
sbb
jae
sub
xor
add
dec
inc
dec
ja
outsb
pop
cwtl
fmuls
inc
es
cld
dec
adc
inc
enter
sbb
outsl
lods
sub
cli
sarl
fsubrs
cmpsb
or
adc
test
mov
dec
cmp
pop
cmpsb
into
push
shlb
imul
cmp
fcmovu
lret
outsl
test
lcall
loop
push
call
pop
outsl
adc
adc
jno
push
push
add
cwtl
int
xchg
loop
push
out
mov
lea
dec
adc
pop
lret
jmp
rorb
add
jb
sub
xchg
lea
or
out
add
pop
lahf
sbb
add
add
lods
test
adc
add
pushf
xor
filds
mov
push
add
xchg
in
ds
cli
dec
sbb
lret
das
movb
sub
mov
add
rorl
and
dec
rolb
enter
add
ret
push
sub
xor
adc
loop
inc
adc
dec
push
xor
adcl
or
data16
inc
js
andb
pop
fldenv
repz
dec
xlat
mov
pushf
pusha
xor
cmc
sbb
mov
sbb
or
push
inc
or
mov
fdivr
iret
or
pop
dec
pop
test
sbb
xlat
inc
sub
dec
inc
fadd
inc
and
cmp
cmp
push
ds
inc
sti
jge
add
push
es
push
mov
and
pop
ja
js
test
push
inc
stos
ficomps
pop
cmp
push
fistl
aas
mov
mov
inc
mov
inc
dec
popa
pop
mov
movl
xlat
sahf
push
push
mov
clc
sub
clc
stos
cmp
dec
add
xor
dec
gs
jmp
sub
push
fcompl
cmp
cltd
jmp
lret
add
pop
push
out
jmp
dec
mov
lret
mov
mov
dec
in
or
sub
xchg
ret
stos
mov
or
jmp
test
or
cli
push
scas
mov
mov
pop
shrl
dec
pushf
pusha
js
int3
mov
mov
inc
outsl
pop
sub
insb
jp
mov
lods
int
push
or
nop
push
jnp
das
xchg
movsl
jg
pop
insb
or
mov
out
cmp
jns
shlb
cmp
jbe
cmp
or
scas
push
enter
push
cmp
pop
rorb
aam
scas
jno
jp
xor
lea
adc
add
inc
pusha
cmpsb
xchg
mov
shr
imul
add
in
mov
sahf
sub
aad
js
sub
es
arpl
mov
mov
or
xorb
inc
gs
enter
inc
jne
and
pushw
push
jp
sub
aad
push
pop
inc
or
adc
add
nop
sbbb
pop
stos
adc
lds
add
lahf
mov
pop
sbb
out
daa
and
and
test
cli
pusha
and
in
sti
test
pop
and
push
imul
push
add
and
enter
or
rolb
jle
fimull
shrl
push
push
mov
incl
aas
push
xor
testb
je
pop
pop
add
pop
jns
jno
mov
push
ret
sbb
inc
xor
sarb
enter
outsl
cltd
cs
inc
sub
jbe
or
push
pop
hlt
movsb
adc
or
adc
fsubs
add
outsl
pusha
sub
rorb
aam
push
add
movsb
movsb
iret
cld
inc
sub
mov
mov
add
add
sarb
sahf
mov
sti
nop
mov
add
pop
adc
das
jo
mov
cmp
je
shr
inc
sbb
hlt
mov
pop
test
repz
sbb
push
mov
incb
ret
rorl
push
gs
add
and
insb
mov
ret
add
movb
adc
xchg
dec
cmp
push
xchg
push
xor
inc
inc
ret
cmpsl
dec
jo
repnz
push
push
xor
sbb
bound
pusha
arpl
and
sub
mov
push
bound
sbb
cld
add
scas
sbb
stos
rcrb
insl
and
inc
flds
scas
jnp
add
adc
push
sbb
fdivrs
xchg
jne
cmpl
inc
int
and
push
push
popa
and
enter
add
push
jne
lock
adc
daa
pop
xorl
or
inc
nop
inc
nop
mov
pop
pop
enter
pushf
inc
inc
mov
or
dec
inc
or
ja
adc
cmp
pop
faddl
loop
lods
adc
int3
mov
sub
sbb
pop
cld
lock
and
xchg
rol
cmp
add
or
mov
push
imulb
dec
mov
adc
rorb
push
jne
and
xchg
adc
stos
push
addr16
addb
inc
shll
stc
lods
pop
pop
sub
mov
push
cld
loope
js
stos
pop
and
push
cmp
jns
adc
sbb
and
mov
mov
pop
cmpsb
inc
stos
xor
pop
stc
andl
outsl
lods
loop
xor
and
addl
and
rorl
leave
jle
dec
push
xchg
adc
push
ret
insl
repnz
pop
aam
lock
ret
rcrb
stc
clc
inc
adc
adc
inc
add
ss
mov
frstor
jb
and
pop
stos
dec
sarb
sub
xor
mov
mov
sub
mov
pop
cmp
ja
adc
jl
pop
mov
inc
das
xchg
mov
pop
imul
movsl
rcrb
bound
ret
pop
cmpsl
je
xor
inc
push
fs
mov
call
mov
mov
imulb
int
test
push
push
xchg
mov
add
push
adc
push
roll
test
and
inc
adc
mov
les
cmp
loopne
mov
jo
dec
push
xchg
and
jb
les
cmp
push
imul
clc
jnp
sub
add
adcb
mov
jbe
sbb
cltd
dec
mov
add
insb
jl
daa
xor
cs
ds
out
add
and
or
sarl
xor
inc
xchg
sbb
sub
sub
das
push
andl
xor
cmp
sbb
es
mov
fisubrs
add
sub
add
pop
out
lods
fiaddl
jb
std
and
add
das
mov
fidivrl
adc
jne
jae
sbb
and
push
iret
push
inc
push
xor
jl
hlt
xchg
add
and
mov
add
and
bound
and
rorb
sbb
xchg
push
das
mov
inc
jno
lods
mov
xor
push
dec
adc
icebp
shr
mov
in
and
int3
add
sbb
ljmp
loop
jne
icebp
sub
int3
sbb
into
push
dec
loop
add
add
xchg
cmp
lds
out
pshufw
lods
adc
call
andb
pop
mov
stos
repz
sbb
cmp
mov
fbld
add
add
adc
andl
inc
add
inc
sbb
lahf
xorb
mov
jecxz
hlt
enter
or
mov
dec
or
inc
push
sbb
inc
cmp
mov
xchg
data16
inc
sti
fldl
inc
cmp
ret
test
cmp
sub
rorb
pusha
inc
dec
rolb
enter
insb
and
leave
mov
dec
jo
pop
insb
loopne
insl
lock
cltd
jne
stc
cmpsl
inc
and
ljmp
scas
movsb
test
ret
cmpxchg
cmp
jl
jns
es
repnz
mov
jg
push
push
test
imul
pop
nop
popa
adc
cwtl
add
shlb
inc
push
sbb
cld
scas
adc
hlt
loopne
out
clc
movsb
sbb
mov
mov
mov
dec
cs
inc
push
adc
mov
cmp
inc
pop
add
inc
and
lcall
int
push
push
mov
mov
mov
nop
mov
xchg
adc
leave
inc
out
nop
popl
into
inc
insb
push
xor
das
fiaddl
lret
xor
shrb
lret
lock
mov
xor
and
imul
add
xor
cmp
mov
xchg
lock
inc
jb
scas
push
or
scas
or
sti
int3
call
adc
push
roll
add
in
dec
sbb
std
jne
mov
jl
mov
or
inc
aaa
movsb
sbb
xchg
push
insl
xchg
adc
xor
adc
cmp
in
clc
jne
aaa
pop
ret
xor
push
cmpsl
add
push
dec
xchg
daa
cwtl
push
push
inc
sbb
pop
adcb
jne
lods
std
dec
rcr
cmpb
mov
dec
sbb
dec
jmp
pop
add
push
push
outsl
mov
sub
int
jno
aaa
jmp
xchg
adc
lock
test
sbb
cmp
sarb
cwtl
iret
push
add
mov
pop
add
sub
sbb
test
adc
or
out
outsl
mov
add
or
mov
jb
stos
lock
adc
mov
push
in
outsl
mov
inc
or
inc
testl
ds
outsl
fiadds
add
inc
sub
ret
or
mov
mov
addb
pop
dec
cmp
imul
or
insl
aad
mov
push
icebp
push
push
mov
or
arpl
add
dec
imul
mov
rcl
dec
lods
popf
ss
ret
push
inc
lea
mov
mov
mov
mov
sub
jne
mov
push
push
push
add
loopne
dec
dec
mov
xchg
xchg
inc
ds
push
mov
icebp
mov
mov
dec
je
sub
sub
adc
or
sbb
or
and
lods
sbb
pop
cmp
mov
push
fldt
adc
push
adc
add
inc
std
cmp
sbb
test
push
fcomip
mov
arpl
mov
push
outsl
pop
rol
shrb
cmp
push
mov
xchg
mov
nop
mov
sub
cmp
adc
lods
enter
ret
pop
addr16
jo
push
arpl
or
out
jp
ret
testl
roll
in
mov
jo
or
in
loopne
test
rcll
pop
cmpb
add
cmp
jno
inc
leave
mov
mov
cli
hlt
mov
sbb
cmp
and
mov
mov
and
pop
mov
mov
jmp
outsb
pop
xor
decb
xchg
mov
mov
lret
pusha
lea
arpl
xor
fs
xor
nop
dec
jmp
push
pop
mov
xor
nop
xchg
clc
roll
inc
mov
jmp
flds
xchg
inc
jo
rcrb
ror
rcr
mov
nop
clc
aas
iret
add
repnz
push
sarb
mov
out
int
mov
cmp
ret
push
or
mov
sbb
aam
jb
jne
or
cmp
push
enter
mov
pop
shr
shlb
stos
inc
add
lret
add
sbb
add
les
sahf
mov
mov
rol
or
shrl
or
loope
dec
cli
and
sub
jne
push
cmp
jne
lahf
ds
sub
mov
mov
dec
lock
push
mov
push
push
lods
lret
rclb
inc
ss
mov
rcrb
test
mov
lea
data16
nop
mov
cmp
icebp
call
rol
clc
xchg
inc
dec
dec
push
lds
out
loop
inc
ss
inc
insb
gs
leave
aam
push
imul
mov
adc
cs
in
sbb
js
cs
rcrl
push
fs
aad
test
aam
pop
dec
imul
popa
or
es
or
loop
push
fsubrs
sub
lret
imulb
bound
imul
arpl
into
dec
stos
push
adc
jo
xor
push
mov
jno
in
aad
add
int3
push
push
jb
aad
or
mov
or
je
adc
insl
ret
cld
add
jne
call
push
loope
std
test
jbe
sbb
mov
lock
add
push
sti
dec
cmpb
cmpsl
cwtl
je
inc
ljmp
mov
or
and
inc
jg
test
add
daa
push
cltd
and
aas
xor
jae
jns
push
xor
mov
orl
inc
inc
or
inc
les
and
add
movsb
pop
out
popa
ss
jo
xor
or
lock
repnz
push
and
or
inc
xor
pop
idivl
std
in
out
gs
or
jmp
mov
sub
dec
jno
sbb
or
cmp
je
jo
sub
mov
shlb
das
rcrb
push
decl
adc
xor
and
pushf
out
aaa
sbb
testl
sbb
mov
xor
cmp
mov
push
mov
pusha
mov
jo
mov
mov
nop
mov
mov
movsb
test
mov
mov
mov
shlb
jo
aam
movsl
sub
adc
cmp
sbb
addr16
cs
mov
pop
arpl
shrb
icebp
test
sub
xor
int
mov
adcb
and
movsb
jb
lret
fisubrs
lret
push
xor
in
nop
cwtl
cmp
fidivrs
lods
or
and
filds
inc
sub
xchg
add
lods
push
movsb
xor
push
clc
pop
and
pop
xor
push
movsb
xor
fs
nop
lret
mov
push
sbb
and
je
gs
sub
js
loope
add
jl
orb
gs
test
and
mov
nop
loopne
or
xor
xchg
dec
cwtl
sub
adcb
mov
lret
test
gs
sub
lods
int3
mov
lods
or
in
add
mov
cmp
rcrb
enter
xchg
dec
push
sub
shlb
fnsave
xlat
xchg
xchg
popa
sub
add
pushf
lock
outsl
pop
mov
jo
dec
adc
sbb
cmpsb
sub
stos
ret
aas
mov
stos
pop
xor
testl
jbe
or
nop
arpl
or
insl
add
jb
add
pop
xor
xor
inc
push
or
inc
in
pop
mov
pusha
in
es
xor
aaa
dec
xchg
stos
loope
rcll
jae
fdivl
sub
gs
adc
ja
push
fsubrp
out
add
out
outsb
jb
aaa
jae
arpl
jb
push
xor
lods
xchg
add
test
push
or
aaa
dec
sbb
or
jg
inc
adc
mov
jecxz
xor
mov
xchg
push
icebp
mov
push
mov
pop
jno
add
ret
jae
dec
ds
mov
aaa
aaa
sub
push
push
dec
inc
lahf
mov
ja
mov
inc
push
insb
jnp
icebp
gs
les
mov
inc
inc
push
jne
push
push
jnp
pop
xor
imul
jg
mov
adc
dec
pand
mov
aaa
xchg
cmpsl
xlat
lods
add
in
xchg
sahf
mov
cmp
jne
orl
andb
lods
inc
sahf
ja
push
jae
cmpsb
and
jae
dec
outsl
push
imul
xchg
arpl
inc
rcrl
sbbl
add
push
or
mov
jl
inc
xlat
cmc
sbb
adc
adc
roll
push
add
movsb
nop
lahf
in
in
jne
in
mov
inc
jne
in
loop
pop
loope
repnz
xchg
nop
ret
and
push
jb
das
add
cmp
push
rclb
cld
and
int3
or
lahf
or
pop
dec
pop
inc
decb
adc
wrmsr
inc
js
inc
sahf
insl
stos
fs
cmp
push
dec
loope
iret
xchg
push
pop
jp
mov
and
pop
jle
dec
sub
out
repnz
push
cmp
xor
or
push
dec
cmpsl
adc
sub
daa
call
or
jns
jl
dec
aad
ret
push
fmuls
xchg
push
cwtl
fxam
pop
ret
push
out
or
gs
adc
or
jns
xchg
adc
cs
mov
outsl
adc
popa
popa
push
sbb
sub
enter
pop
adc
mov
gs
insb
add
test
idivb
mov
pop
xor
jbe
inc
or
inc
inc
outsb
sti
pop
mov
mov
xchg
pop
cli
jns
xor
je
pop
cmp
jno
pop
fsubs
adc
inc
or
push
jb
sbbl
push
setg
jp
inc
ja
testl
inc
adc
test
out
gs
pushf
adc
add
mov
pop
jo
jns
jo
jno
rol
sbb
push
add
addr16
and
loopne
arpl
mov
and
ja
lods
cmp
fs
push
jp
mov
and
dec
ja
in
mov
arpl
inc
ud2
sub
ja
mov
out
scas
dec
outsb
out
ret
test
inc
cmp
and
mov
pop
inc
sub
arpl
fs
jg
or
pop
bound
dec
mov
cmp
and
push
jmp
push
mov
sub
sbb
add
fisttps
xchg
adc
daa
xor
mov
jnp
nop
and
mov
dec
das
inc
or
mov
cmovns
es
and
pop
adc
mov
pop
idivl
jo
adc
loop
jno
pop
inc
mov
movsb
sbb
lahf
pop
sub
je
add
or
jecxz
adc
outsl
xlat
je
lods
jge
or
arpl
bound
jne
jae
sbb
nop
mov
mov
dec
jo
push
inc
aaa
inc
insb
lds
cmp
jb
jb
push
sub
scas
push
ss
push
ret
mov
push
lahf
ss
mov
ss
andl
adc
cmpsl
fbld
fists
gs
dec
imul
adc
sbb
shr
dec
pop
daa
adc
and
sbb
pop
rolb
adc
mov
push
je
idivl
mov
les
clc
sarb
mov
cmpsl
lahf
sub
shlb
cmp
repnz
bound
xchg
xchg
bound
mul
or
lahf
insb
roll
sub
push
push
mov
pop
adc
bound
outsl
test
sub
adc
orb
aaa
push
addr16
add
inc
adc
test
lock
addr16
jp
add
les
ljmp
insl
lds
fbstp
adc
push
add
dec
movsb
xchg
stos
adc
jecxz
mov
daa
push
mov
outsl
mov
or
pop
push
shrl
je
or
adc
inc
pop
gs
xchg
loop
xor
outsl
les
inc
scas
mov
jg
enter
or
sub
insl
ret
pop
repz
or
lds
and
insb
mov
jae
stos
call
push
imul
out
mov
jecxz
add
sbb
adc
push
sbb
movl
jae
xchg
test
inc
jae
add
push
loop
addr16
adc
pop
ljmp
loop
push
subl
pop
xchg
fisubs
mov
mov
lds
arpl
adc
movzwl
das
and
insl
xor
imul
cmp
or
sub
push
out
mov
and
adc
rcll
shrb
out
push
pop
add
inc
sbb
sbb
adc
movq
pop
push
aas
lahf
sub
sub
xlat
imul
int3
lret
into
js
add
je
jns
adc
bound
cmpsl
lds
ss
or
or
push
xor
push
stos
imul
mov
push
lods
insl
mov
decl
mov
and
jns
jg
and
and
pop
addr16
inc
sbb
cmpsb
and
inc
sbb
add
shlb
inc
into
xlat
pop
decb
mov
cmpb
adc
lahf
mov
push
inc
mov
cmp
xchg
fwait
jb
xlat
popf
sbb
mov
xchg
jb
insl
ja
and
nop
mov
and
mov
or
or
xchg
repnz
aaa
mov
sub
sub
daa
iret
enter
fcomps
lods
nop
xor
cmp
pushf
mov
movsb
pop
test
cmpb
hlt
cmpsl
test
js
sub
sub
scas
ljmp
ret
js
lock
mov
movsb
push
test
xorl
pusha
rclb
scas
daa
mov
mov
in
mov
pop
lods
lahf
xchg
ja
clc
test
pusha
movsb
hlt
pop
popf
sarb
xlat
dec
les
out
cmp
inc
pusha
xchg
outsl
pop
push
rclb
and
push
mov
add
xchg
lahf
fs
cmpsb
shll
sbb
xor
fs
pop
add
sbb
dec
and
test
xchg
les
out
push
pushf
push
dec
scas
les
dec
jl
inc
lahf
ds
rorb
push
push
inc
fisttps
push
push
push
imul
mov
sbb
add
repnz
mov
adc
push
jae
add
mov
in
into
adc
pop
add
dec
pop
pop
repnz
dec
or
and
aaa
or
in
stos
cmp
lret
sub
outsb
add
sub
lahf
movb
inc
add
test
cmpsl
icebp
pop
jp
mov
notl
pop
imul
lret
ds
aam
mov
jecxz
cmp
xor
inc
dec
pop
adc
adc
lret
xor
ljmp
sbb
scas
inc
cmp
jp
lock
mov
ja
int
add
sahf
adc
or
outsl
mov
or
test
je
imul
xor
adc
and
jo
and
scas
xchg
fcom
pop
stos
enter
or
cmp
add
jb
loope
or
and
mov
sbb
scas
and
cmp
dec
xor
imul
xchg
jo
sub
pushf
rorb
push
xlat
nop
imul
in
outsb
and
push
sbbb
push
icebp
or
fidivl
pusha
mov
inc
outsl
jb
popa
je
rorb
or
sub
inc
and
je
icebp
mov
or
out
icebp
lds
fildll
xchg
push
adc
mov
fmul
mov
repnz
or
inc
push
cmpsb
mov
add
mov
dec
cmp
shrb
js
je
mov
mov
inc
xchg
mov
int3
pop
or
insl
mull
sbb
sub
add
lret
xor
sub
mov
int
adcb
lods
push
divl
dec
cmp
jl
jl
pushf
mov
addb
cmc
fdivrs
mov
add
mov
pop
mov
push
push
je
dec
push
loopne
insb
push
push
and
mov
insb
pop
in
jle
push
jo
jecxz
cmp
jbe
dec
add
lock
orb
hlt
call
add
adc
movsb
insl
insl
push
fsubl
pushf
insb
insb
outsl
addr16
add
mov
adc
int
int3
push
xor
jae
xchg
or
insb
xor
stos
rolb
ds
adc
sub
int
addr16
int3
dec
pop
bnd
push
int
shlb
inc
push
push
add
pop
add
ja
cmc
xchg
lea
pop
add
or
push
push
or
xorb
jg
add
mov
sbb
add
pop
xchg
xchg
push
xor
es
push
nop
pusha
aad
rolb
jmp
test
subl
mov
aam
test
clc
add
sub
and
outsl
cmpsb
adc
adc
xor
loopne
nop
gs
nop
xchg
mov
ret
sti
dec
inc
rol
test
add
dec
push
add
push
sub
dec
sbb
sbbl
xor
or
ja
lret
cmp
dec
sbb
sbb
sbb
xor
dec
aaa
or
insb
inc
sti
xchg
xchg
out
jns
mov
or
pop
push
inc
add
rclb
xor
adc
cmp
add
in
or
sub
mov
aad
movsl
clc
mov
sar
and
inc
add
xor
cs
in
dec
sbb
xor
add
or
xchg
int3
xchg
inc
xchg
dec
or
push
add
add
dec
mov
add
dec
add
ss
or
ja
mov
inc
lret
je
cltd
mov
xchg
pop
cmpsb
out
jl
add
out
cmpsb
loopne
dec
movl
xchg
aaa
or
movsl
mov
cmpsl
cmp
dec
arpl
loopne
inc
fs
inc
mov
mov
jae
cmpsl
pop
jne
cmp
mov
imul
add
sahf
nop
flds
movsb
sbb
dec
mov
mov
pusha
and
xchg
mov
jnp
push
mov
mov
fs
pop
adc
cmpl
xor
mov
jecxz
add
xchg
push
pop
mov
pop
lgdtl
jbe
push
inc
add
push
in
adc
cmp
leave
xor
les
inc
or
push
add
pop
das
add
imul
xchg
out
in
hlt
dec
lock
rcrb
mov
inc
das
in
loopne
sub
push
mov
sbb
xor
test
sub
pusha
mov
or
and
aaa
leave
adc
cmp
inc
xchg
sbb
pop
insb
pusha
add
pop
call
push
push
inc
sbb
aas
and
mov
and
sbb
push
sub
push
and
cmp
inc
hlt
sbb
es
dec
inc
daa
jle
test
inc
scas
dec
subl
xor
sbb
and
or
fs
dec
cld
outsb
jae
mov
and
aam
lds
movb
dec
jmp
fcoml
inc
jns
cmpsb
xor
clc
es
sbb
ds
mov
pop
rclb
jo
push
pop
inc
sub
or
and
or
nop
inc
iret
inc
push
movsb
int3
xchg
xor
xchg
sbb
inc
sub
cwtl
pushf
jle
add
pushf
jb
xchg
lret
push
mov
xchg
mov
out
in
andb
in
int3
jo
and
lods
hlt
sbb
xor
jne
pop
inc
scas
jne
aaa
filds
stos
sub
inc
push
dec
loop
sbb
pop
ret
insl
xor
insb
setae
sub
mov
xor
rcl
push
push
mov
push
dec
push
rcrb
jg
add
sbb
pop
cmove
push
dec
testl
negl
inc
mov
adc
adc
stos
dec
outsb
jne
xchg
adc
or
mov
inc
or
imul
xor
insl
bound
pop
or
jb
divl
or
popa
jb
add
sbb
adc
cmovl
scas
out
mov
sbb
push
jmp
push
bound
insb
fs
jbe
and
adc
inc
and
scas
adc
popa
mov
pop
inc
adc
dec
cwtl
sti
jle
add
push
or
mov
jge
jne
nop
pushf
xlat
sbb
js
arpl
add
out
pop
adc
loope
pop
icebp
sub
ja
adc
adc
push
xchg
cmp
int
test
jno
dec
pop
lret
mov
testb
loop
cmpsb
fiadds
adc
inc
jne
outsl
inc
insb
popa
addr16
cmpb
insl
popa
das
or
or
sub
push
popa
insb
adc
mov
push
or
in
int3
or
push
add
dec
push
or
outsl
and
ds
je
inc
sbb
inc
xor
out
or
sub
push
enter
ds
sub
clc
shlb
inc
add
cwtl
push
jns
negl
push
jl
mov
inc
push
fmull
dec
push
push
clc
xor
negl
cmp
pop
cmp
add
inc
sub
out
pop
push
daa
mov
sub
les
in
inc
das
sbb
jnp
movsl
rcrl
shlb
test
fsubrs
push
push
loopne
mov
bound
add
iret
rorl
insl
xor
push
pop
addr16
or
lds
fimuls
in
ljmpw
lods
dec
adcl
xor
push
pop
imul
sbb
add
scas
jmp
mov
insb
cld
mov
inc
lea
in
je
inc
xchg
lock
fwait
ret
lea
jnp
mov
push
and
test
mov
jae
cmp
add
xchg
adc
add
pop
dec
inc
mov
push
or
filds
lods
jge
cmp
dec
add
ret
jge
dec
xor
inc
orl
inc
inc
jp
xor
mov
and
or
pop
cli
insl
dec
xchg
and
adc
or
clc
cmpsl
xor
xchg
ss
add
or
mov
xor
cwtl
xor
or
xchg
iret
sbb
mov
or
add
stc
js
mov
gs
lea
inc
arpl
pop
xchg
cmc
setp
ljmp
xor
popa
aam
lock
fdivrs
cwtl
nop
iret
roll
cmp
adc
jp
outsb
cmp
popa
fs
int3
sbb
shl
sbb
sbb
bound
adc
lea
inc
sub
aaa
push
lock
out
adc
jae
lock
loopne
mov
or
stos
inc
cmp
push
fs
out
out
or
icebp
cwtl
dec
cwtl
add
test
push
add
in
push
fistl
adc
cwtl
das
pop
add
fwait
pop
pop
sbb
cwtl
push
rcrb
push
adc
iret
stos
les
jne
adc
pop
push
fwait
push
enter
je
jg
push
and
outsb
sub
ja
outsb
jne
sahf
iret
cs
cmpsb
push
loopne
int3
test
pop
fdivrl
sbb
cmc
mov
outsl
pop
sbb
add
mov
mov
pop
add
nop
arpl
sbb
pop
mov
adc
sbb
lret
popa
sahf
push
imul
and
aad
or
or
ljmp
imull
push
lea
bnd
inc
dec
je
add
inc
stos
add
std
cwtl
add
xor
or
sub
sbb
jb
ss
test
imul
xor
loopne
adc
mov
cmp
xor
or
xlat
inc
or
cmp
jecxz
or
fistl
push
or
insb
lds
add
and
add
jo
pushf
mov
adc
xor
popa
or
imul
popa
push
inc
inc
adc
mov
shr
push
jle
push
push
cs
xor
adc
in
std
mov
xor
je
imul
fistl
pop
sbb
outsb
imul
sub
insl
mov
sbb
jo
inc
outsl
mov
fstps
adc
sub
sbb
or
into
int
in
push
push
add
ficoms
cmc
and
lock
dec
inc
out
js
and
push
addl
sahf
loopne
xor
mov
outsb
icebp
adc
pusha
jle
xor
adc
mov
jb
add
test
popa
push
cmp
bound
pop
cmp
inc
roll
inc
negl
bound
loope
or
push
push
imul
sti
aad
pop
and
or
cmp
push
inc
push
imul
test
jo
test
push
and
out
mov
sbb
xchg
fsubrl
xchg
insl
inc
aam
negb
nop
jl
scas
sub
push
test
inc
and
jge
add
and
push
sbb
cmp
cwtl
pop
inc
inc
aas
inc
adc
mov
dec
add
or
or
movsl
or
scas
inc
push
dec
adc
mov
pop
daa
or
add
and
cmp
add
xlat
roll
mov
mov
pop
outsb
add
pop
push
and
and
inc
jmp
ds
test
mov
lock
mov
sbb
out
cmp
add
jb
jp
add
mov
pop
and
mov
and
loopne
sbb
loope
movsl
sub
outsb
out
aam
cmp
dec
lahf
jl
mov
and
fildll
movl
push
or
je
icebp
push
push
fidivs
mov
cmp
in
add
sbb
sub
or
xlat
insl
dec
sbb
cli
push
sbb
add
test
and
lea
jo
xchg
mov
fs
add
jg
push
fldenv
and
jmp
sub
and
push
cld
mov
push
inc
inc
lods
inc
xchg
add
cmp
mov
loopne
std
ja
clc
inc
mov
sbbl
push
iret
push
and
xor
fmuls
or
inc
nop
xchg
add
movsb
subb
lods
adc
or
ja
and
dec
cmp
scas
inc
ljmp
out
es
imul
rclb
pop
mov
loope
xchg
xorb
popa
les
fcoml
xchg
pop
sbb
push
inc
loope
insl
loope
inc
adc
pop
dec
inc
lock
aaa
mov
pop
test
mov
or
jecxz
cmc
es
adc
rorb
xor
xchg
mov
arpl
sub
sbb
add
pop
rcll
dec
cs
out
sahf
fdiv
popa
mov
inc
jmp
movsb
inc
jb
and
mov
cmp
xchg
jmp
leave
jns
mov
fcoms
dec
lcall
xchg
push
xor
adc
imul
loope
xorb
bnd
dec
or
and
mov
ret
pop
outsl
sub
aam
xorl
mov
mov
add
add
pusha
loopnew
movsb
adc
xchg
sub
jecxz
sub
clc
adc
push
out
outsl
scas
inc
lock
inc
pushl
sbb
push
mov
lock
jmp
add
incl
and
mov
hlt
jne
arpl
cmp
jg
mov
daa
mov
fwait
inc
ret
cmp
jno
inc
jge
jl
xor
dec
mov
and
add
push
dec
lret
pop
mov
or
push
sub
jmp
cmp
add
das
add
daa
lods
aaa
sub
jle
xlat
sub
jmp
cmp
adc
fnstsw
or
cmp
test
xor
jmp
imul
aaa
ss
flds
lcall
cmp
shrb
fists
in
push
mov
adc
adc
dec
or
sarb
in
dec
adc
mov
aam
pop
movsb
mov
in
outsb
add
adc
ljmp
adcb
sbb
jo
lods
jbe
cwtl
push
daa
add
sbb
push
and
pop
add
repz
add
fstpl
aad
imul
inc
mov
and
push
jb
mov
bnd
je
cmp
nop
iret
loopne
jl
orb
repnz
lcall
sbb
das
cmp
inc
push
cmp
ret
adc
hlt
xorb
je
adc
inc
push
mov
pushf
addb
inc
lds
sbb
movsl
xchg
sahf
cmpsl
cmpb
add
rclb
orb
enter
adc
inc
inc
push
js
sbb
jb
sbb
repnz
imul
dec
pop
jg
test
and
aas
mov
sub
inc
sti
cmp
mov
cmp
sub
cmp
add
int
orb
push
cmp
inc
aas
adc
inc
or
sub
jno
sub
or
lcall
sbb
lcall
add
cmp
push
mov
dec
xor
aas
mov
bound
testb
lea
or
mov
sbb
sbb
clc
nop
inc
je
pop
int3
pusha
sbb
add
jecxz
add
push
nop
xchg
xor
add
cmpsb
pusha
test
add
mov
sbb
pusha
jmp
fdivrs
add
fisttps
cmpl
mov
out
inc
mov
lea
jb
sub
je
mov
dec
data16
movups
sub
pop
dec
pop
pop
inc
dec
xor
and
icebp
pop
xchg
lahf
mov
ret
test
adc
xor
jg
adc
cmc
push
xor
add
jle
adc
and
jmp
ret
mov
mov
cli
push
or
test
pusha
enter
rolb
or
jge
xor
mov
cmpsb
jbe
pop
cltd
es
in
xor
cmp
jb
into
dec
or
mov
into
lea
sub
les
mov
xor
xor
or
mov
or
push
cmp
test
ret
mov
inc
pop
je
xchg
orl
add
push
jecxz
mov
add
xor
leave
cmpsb
mov
cmp
jne
or
xlat
loope
out
xlat
cmpsl
xor
xor
mov
cld
out
stos
push
or
dec
inc
or
iret
rorb
jle
xchg
add
inc
or
jne
rcll
or
outsw
in
sbb
je
xor
xchg
lock
stc
inc
in
int3
sahf
dec
xor
mov
pop
or
adc
push
lcall
loope
xchg
iret
call
sbb
pop
or
test
adc
idivb
lods
sub
fadds
lcall
push
or
push
in
xorl
sub
sbb
mov
out
mov
or
xor
inc
lods
nop
mov
adc
inc
sub
sub
dec
sti
xchg
or
push
hlt
pop
jo
dec
inc
inc
xor
pop
stc
pop
and
jnp
inc
add
adc
pop
or
loop
and
icebp
sti
mov
ljmp
sbb
dec
xchg
adc
mov
sub
jo
mov
sbb
mov
ret
fs
pop
fnstenv
mov
daa
and
fidivrs
inc
lret
cmp
je
gs
mov
push
and
xchg
mov
outsl
jge
adc
call
idivl
clc
sub
mov
mov
adc
dec
jne
testb
pop
jnp
call
fisttpll
adc
sahf
sub
icebp
movb
lods
and
xchg
push
jb
and
and
gs
push
or
or
mov
decb
inc
pop
test
jne
xor
test
mov
and
push
fwait
sub
cmp
insb
gs
iret
imul
sti
or
mov
dec
and
dec
loopne
jecxz
mov
and
push
es
jl
cmp
lock
mov
cmp
jae
mov
or
mov
xor
add
jbe
sbb
mov
sbbb
popa
cld
push
jae
pop
aaa
cwtl
or
aas
or
mov
gs
fstl
loopne
or
test
psadbw
push
pop
sarl
in
xor
bound
test
add
scas
cmp
sub
andl
ffree
cmp
fnstsw
clc
jo
and
adcb
call
mov
stos
incb
jmp
jbe
jp
in
or
and
add
pop
xchg
xchg
rclb
test
je
push
pop
or
sbb
or
es
inc
push
mov
lds
out
sbb
mov
dec
fidivs
subb
push
push
or
addl
lods
push
jo
dec
xchg
test
jb
insl
or
sub
daa
popl
pushf
cmpsl
cmpb
test
and
mov
loopne
add
or
or
xor
push
dec
idivl
sarb
inc
mov
pop
cmp
out
and
push
scas
sarl
andl
mov
add
dec
stc
je
mov
mov
mov
cltd
pusha
adc
or
adc
sub
lods
mov
or
mov
or
and
enter
pop
lock
dec
mov
sbbb
xchg
add
add
into
push
not
hlt
pusha
sbb
nop
or
xchg
mov
add
lods
nop
pop
pop
pop
xchg
iret
repz
icebp
cltd
inc
daa
inc
and
addr16
pop
or
sbb
push
popf
push
orl
push
adc
je
in
les
cmp
or
lds
call
adc
scas
sub
mov
or
xchg
ret
xchg
pop
fcoml
or
ja
xor
adc
outsl
loopne
push
add
icebp
add
adcb
je
outsl
cwtl
das
mov
or
pop
add
jge
dec
or
lock
inc
inc
sarb
mov
mov
mov
adc
or
inc
je
inc
outsb
ljmp
sbb
insb
adc
sbb
push
dec
dec
pop
bound
push
mov
jge
imul
adc
inc
sub
xchg
test
sub
les
or
inc
cmpsb
or
mov
inc
pop
sbbb
stc
in
fsts
mov
mov
lea
ficoml
mov
enter
xor
mov
xor
ret
inc
or
add
mov
aam
push
xor
jnp
sub
add
add
push
add
dec
add
adc
dec
or
sub
dec
ret
add
push
repnz
cmp
jne
jge
test
aam
jae
aam
jno
push
jle
mov
push
jo
add
ror
mov
xor
jle
add
add
pop
mov
call
addb
dec
in
sub
cmpb
sub
lock
and
mov
movsb
leave
test
lock
ret
pop
add
js
adc
adc
ss
mov
fcoms
jge
jmp
and
sub
fmull
shlb
into
xchg
or
push
mov
bts
add
movb
jmp
rorb
adc
inc
cli
enter
faddl
mov
pop
jb
mov
js
push
test
push
adc
cmp
cmp
jle
aam
idiv
push
imul
inc
push
mov
add
mov
or
rcll
jmp
lret
ret
jne
push
sbb
jnp
add
cmp
in
cwtl
inc
jnp
in
push
push
in
dec
aam
xor
dec
fwait
xor
push
inc
cmp
sbb
pop
dec
call
bound
jle
cmp
add
imul
pop
mov
sbb
dec
sbb
sub
movsl
sub
inc
aad
or
or
mov
cmp
adc
sub
gs
mov
or
adc
sarb
rclb
aam
mov
sbb
jo
ss
imul
aaa
add
lcall
shrb
imul
shll
dec
dec
lea
arpl
or
or
push
pop
and
push
lds
pop
jne
sub
jmp
pop
mov
mov
sbb
or
and
push
add
out
outsl
dec
lds
lret
cmp
dec
mov
and
loopne
mov
sub
pop
mov
dec
cmpsb
or
push
fwait
cmpsl
nop
inc
in
sbb
sbb
adc
pusha
push
fwait
ja
outsl
inc
enter
je
orl
pusha
aas
mov
lea
or
push
jg
push
std
enter
icebp
insb
add
scas
push
jge
arpl
mov
sub
adc
in
ret
xlat
jbe
xadd
dec
mov
jno
out
xchg
movsb
mov
pop
insl
mov
xchg
pop
cmp
and
add
push
fcmovbe
or
iret
fcmovb
mov
sbb
push
inc
xor
sbb
sub
add
and
mov
xchg
fadds
mov
and
mov
faddl
pop
inc
and
nop
jg
frstor
lods
rolb
sarb
adc
psubq
bound
mov
sub
sbb
inc
ret
inc
pop
popa
and
dec
aad
xor
mov
adc
cld
and
sbb
jns
test
aas
adc
adc
inc
or
push
sbb
je
out
or
adc
loop
mov
push
lock
sti
mov
push
jecxz
lock
pop
loopne
mov
gs
in
fwait
adc
or
loopne
mov
mov
xor
or
mov
inc
cltd
pop
cmp
sti
mov
or
pop
les
aas
mov
push
adc
add
jo
fcoml
xchg
adc
fadds
mov
dec
jo
fwait
ss
rcr
ss
add
sub
loopne
clc
sbb
add
loope
sub
sti
xor
in
in
jmp
push
or
dec
and
dec
sbb
adc
shlb
sub
or
mov
push
fdivl
mov
imul
mov
rorb
mov
loopne
and
push
mov
loope
jo
mov
adc
or
cmp
int3
jo
pop
imul
ret
and
pop
push
push
cmp
jle
insb
adc
adc
xchg
test
cmp
mov
pop
cmp
dec
pop
lods
insl
ljmp
jg
cmpsl
sbb
outsl
mov
fmuls
xor
lahf
rorl
sub
adc
or
sub
jno
sub
cmp
xor
pop
push
add
inc
push
xor
xchg
add
loopne
rcl
inc
aad
cmpsl
adc
dec
dec
dec
or
pop
xlat
and
cmp
push
in
ja
mov
xchg
dec
cmc
lahf
loopne
ret
cmp
adcb
das
sbb
mov
jge
and
enter
iret
cmp
in
cmpsb
ss
pop
into
in
xchg
inc
mov
lcall
dec
outsl
mov
or
pop
jnp
push
or
xor
fistpl
push
inc
xor
scas
lret
leave
loopne
in
dec
add
in
add
pop
add
or
pop
mov
cmp
cmp
and
xchg
push
mov
loopne
fsubl
sbb
call
lock
adc
cmc
test
test
pusha
fcoms
gs
push
bound
lock
insb
and
pop
mov
and
cmp
inc
bnd
xchg
out
ret
or
jl
xor
mov
and
cmpsl
push
das
addr16
push
loope
and
or
adc
aam
pop
test
adc
les
popa
mov
hlt
jecxz
hlt
imul
pop
or
and
cmpsl
lea
leave
sbb
adc
pop
jae
fildl
je
in
addr16
loopne
or
clc
out
ds
popa
mov
sahf
sbb
pop
jne
xchg
or
arpl
stc
and
adc
inc
adc
inc
and
adc
adcl
adc
fstpt
adc
and
sbb
mov
lods
call
fs
sub
or
push
decl
cmp
add
inc
mov
lods
push
shrl
add
sub
imul
push
xchg
mov
mov
inc
inc
cs
pop
sbb
xchg
lret
dec
clc
inc
and
inc
movsb
dec
dec
mov
mov
xchg
mov
daa
add
and
jns
jge
push
pop
int
lock
aad
div
jg
push
and
pop
add
adc
dec
xchg
nop
cmpsb
test
push
inc
xor
push
add
and
int
adc
repnz
inc
or
mov
int
add
jne
mov
cmpsb
sbb
stos
mov
or
je
stos
mov
mov
cmpb
mov
and
push
mov
ljmp
sbb
jmp
add
insl
cmpsb
jne
add
push
or
xor
xchg
lock
fmuls
jle
jo
or
pop
fsubrl
add
and
adc
mov
pop
or
cmpsb
sbb
pushf
cs
inc
cld
add
jg
subb
test
lret
or
push
cmp
and
sub
jmp
mov
sub
aas
adc
repz
cwtl
inc
cmp
lahf
push
out
out
push
sub
push
sarb
js
cwtl
push
jmp
push
bswap
mov
adc
or
or
test
hlt
iret
mov
push
sub
add
sbb
xchg
in
xor
jecxz
jl
or
in
in
and
pop
jp
sbb
push
cltd
pop
lret
or
add
fwait
adc
pop
subb
add
add
dec
adc
movsb
or
sarb
scas
push
and
add
hlt
jle
xor
xor
sbb
dec
cmpsb
fwait
sbb
movsb
or
push
mov
add
and
inc
or
push
lock
orl
pop
or
js
xchg
pop
hlt
in
adc
xchg
loopne
arpl
inc
adc
nopl
cmp
out
mov
sbb
in
inc
in
nop
jl
push
or
movsl
fsubrs
test
mov
loopne
imul
xor
in
insb
inc
xorb
mov
fwait
jnp
adc
movq
mov
jmp
sbbl
dec
fcom
fcomps
fs
and
xlat
nop
icebp
lds
jo
jge
scas
inc
cmp
lea
js
mov
lret
andl
adc
iret
loop
jl
loope
push
inc
cmp
mov
add
dec
out
es
int3
outsl
subb
add
jecxz
rclb
enter
xchg
and
clc
lock
xchg
andl
add
mov
lods
push
shlb
adc
sbb
mov
adc
jl
dec
mov
rcrb
loopne
dec
cmp
adc
orb
mov
cltd
aam
sbb
rorb
subb
push
rorl
lret
add
push
push
pop
jmp
jb
das
pop
lock
bound
jne
dec
lret
imul
add
push
rcrb
or
adc
cmp
imul
sbb
pop
gs
test
jnp
sbb
xor
negl
addl
pop
or
jmp
lock
and
pop
sbb
ret
fsubs
shr
pusha
aas
push
je
mov
xlat
or
xor
les
les
out
mov
mov
mov
adc
sub
les
mov
push
loope
sub
pop
mov
push
sbb
aas
or
and
fiaddl
push
arpl
xchg
sbb
mov
and
mull
inc
outsb
inc
roll
lahf
les
inc
arpl
divb
adc
loope
dec
dec
xchg
cmpsb
xor
push
or
sub
add
fs
pusha
cmp
das
mov
ss
cmp
push
mov
xchg
cmpl
add
adc
imul
mov
or
testb
xchg
sbb
mov
insb
pushf
add
out
or
mov
test
add
cmpsl
xor
lcall
aaa
adc
adc
sbb
and
jmp
add
insl
inc
pushf
outsl
in
fisttpl
inc
pop
out
cmp
lret
ds
outsb
adc
out
and
ja
mov
push
or
adc
ja
inc
jmp
adc
inc
cwtl
push
jno
xor
or
jle
mov
push
pop
dec
adc
pop
popa
or
cmp
mov
outsb
mov
xchg
mov
cmp
inc
cmp
add
push
inc
cmp
pop
push
jo
dec
je
outsb
vpsllw
shll
jno
ret
dec
mov
lea
cmp
add
cmp
or
mov
jo
roll
insb
mov
outsl
jb
add
add
ljmp
cltd
sub
sub
inc
lret
popf
movsl
pop
in
out
ds
cld
call
dec
js
push
push
xchg
adc
pusha
mov
inc
lret
pusha
fisttps
push
add
cmpsl
pop
movb
mov
sbb
addr16
ss
and
sub
or
call
inc
add
sub
xor
sub
mov
inc
cmp
and
mov
adc
cmp
push
cmpsb
test
inc
test
mov
mov
dec
lahf
mov
in
hlt
fs
or
or
sub
movsb
dec
sub
addr16
jnp
push
jo
sbb
sbb
jo
andb
or
cmp
in
icebp
inc
xrelease
aaa
pop
xor
mov
hlt
inc
mov
cmp
xchg
inc
and
mov
lret
jne
xor
or
repnz
jo
sarb
sub
sbb
lcall
mov
andb
jl
std
lret
call
and
in
xchg
popf
push
arpl
push
push
inc
shl
jo
sub
fadds
rcrl
call
into
adc
sbb
fnstenv
or
cmp
or
xor
inc
fldenv
loope
movsb
inc
inc
add
sub
add
addb
lock
xchg
repz
adc
and
mov
sub
jnp
sbb
xor
dec
imul
adc
push
mov
inc
daa
shl
add
lea
mov
je
pop
sub
add
sub
sub
filds
cli
call
jecxz
mov
dec
mov
dec
or
call
push
adc
mov
idiv
or
mov
or
and
add
jecxz
ret
pop
xor
ja
imull
enter
dec
push
or
or
jne
aad
insb
lret
adc
cltd
ljmp
insb
add
cwtl
add
insb
ret
out
in
pop
and
mov
xchg
cmp
loop
xchg
jo
jecxz
cmp
pusha
std
nop
sbb
cmp
je
mov
add
ret
mov
lahf
arpl
je
mov
dec
inc
pop
lods
lock
xchg
cmpsb
stos
mov
jnp
lcall
xor
lock
and
sub
jne
loop
add
sub
fstpt
insb
or
push
lret
negb
push
jb
inc
push
mov
loopne
popf
adc
sbb
or
adc
popa
jle
add
fadds
inc
lret
xor
aad
enter
cs
xchg
or
xor
addb
adc
inc
int3
sahf
and
cwtl
and
or
lret
push
in
adc
inc
pop
and
pop
aas
and
leave
inc
jb
cmp
xchg
pop
and
cmp
or
inc
jb
or
jle
je
mov
mov
mov
mov
iret
andb
adc
not
mov
js
cmp
in
call
mov
mov
icebp
xor
sbb
das
mov
add
lret
outsl
or
lds
jg
movsl
or
aas
test
push
je
push
cmp
pop
pop
and
push
fs
xchg
scas
push
inc
xor
das
adc
js
push
je
leave
xlat
push
in
sti
mov
mov
adc
pop
js
pop
nop
pop
and
icebp
fidivrl
push
rolb
pop
adc
push
fs
dec
cmc
mov
push
push
lds
push
mov
adc
jmp
daa
les
xchg
ret
cli
inc
sbb
addl
bsr
out
add
adc
sbb
jo
aad
inc
inc
sub
sbb
xor
xor
jmp
in
shlb
mov
fildll
mov
in
add
leave
xlat
xor
push
fldt
pop
add
and
mov
and
rorl
js
jns,pt
cmp
and
inc
sub
mov
dec
jne
mov
push
into
stos
roll
mov
push
dec
push
fcomps
iret
sub
clc
insb
jnp
xchg
ss
push
call
add
inc
outsb
in
push
dec
xlat
dec
sbb
call
shrb
adc
aaa
pushl
mov
inc
add
mov
push
mov
push
outsb
dec
dec
loop
inc
jp
push
shr
add
add
sub
es
inc
sarb
cmpsb
pop
mov
in
fwait
imul
push
jb
add
mov
adc
test
pushf
sub
lcall
push
call
nop
mov
pop
mov
jmp
xor
adc
in
aam
mov
adc
stc
icebp
cs
jl
adc
enter
sarb
or
and
int3
in
jmp
pusha
dec
jo
int3
popa
pop
or
repz
sbb
add
cmc
adc
xchg
rcrl
sar
fisttpl
push
add
shrb
dec
xor
or
call
ja
pop
push
mov
adc
add
jl
sti
xor
cs
push
out
sarb
pop
aaa
dec
xor
push
decl
mov
popa
sbb
xchg
dec
pop
xor
mov
xchg
ds
fcoml
scas
pop
push
in
roll
mov
mov
in
add
cmp
xor
dec
icebp
xor
std
dec
std
fmuls
add
pusha
xor
inc
test
sti
loopne
dec
es
push
loopne
add
push
inc
sbb
mov
dec
imull
rcll
dec
mov
cltd
cmp
dec
xorb
pop
mov
cmpsl
sbb
mov
imul
loop
cmp
das
dec
jmp
sahf
rolb
xchg
loopne
or
outsb
jp
pop
pusha
add
jo
or
dec
pop
ja
aaa
pop
aam
xor
add
jmp
inc
push
pop
fdivrs
idiv
adc
pop
push
add
and
fnstenv
js
xor
aad
dec
sbb
add
sub
negb
fcomi
add
ret
xor
clc
dec
clc
fdivs
mov
cmovnp
sub
and
inc
adc
rcl
mov
push
inc
push
mov
loope
mov
sub
jns
jne
inc
xor
cmp
ja
lahf
adc
aas
and
daa
insl
and
out
aad
and
xchg
adc
outsb
lahf
fsubr
mov
cwtl
or
lods
fildl
sub
cmp
xchg
aaa
lcall
and
mov
or
rolb
and
inc
adc
xchg
xor
pop
xor
ss
xchg
lret
sub
addb
movsl
mov
pushf
iret
cmp
inc
lcall
push
es
jmp
mov
push
pop
xor
cmpb
test
or
daa
pop
fadds
pop
jne
loope
mov
fsubl
mov
dec
aas
xchg
and
jne
insl
or
ljmp
cmp
cmp
popa
inc
jge
aaa
cmp
jne
les
std
and
mov
pop
sbb
jl
cmpsb
adc
pop
mov
mov
cmp
inc
aam
aaa
and
pop
jb
sti
add
jo
xor
push
cmp
mov
test
jo
jne
xor
inc
cmp
or
sub
sub
aaa
js
sub
adc
xchg
adc
xlat
sbbl
dec
adc
xchg
jo,pn
push
shrb
addr16
mov
stc
out
sti
ja
mov
pop
fs
xchg
mov
or
iret
ret
mov
add
dec
sub
sub
mov
add
pop
out
mov
xor
pop
hlt
pushf
xchg
mov
sub
xchg
lock
or
mov
dec
adc
mov
lods
les
ds
sub
shrl
rcrb
ljmp
mov
jge
or
and
mov
add
add
enter
call
adc
clc
jmp
xchg
aad
dec
and
test
js
mov
adc
mov
mov
cmpsl
mov
rol
pop
arpl
add
mov
cltd
sbb
cmp
jno
ljmp
cmc
inc
loop
sbb
xor
adc
shrb
adc
jp
rclb
pop
and
xor
ret
and
inc
inc
testl
lods
adc
and
or
mov
sbb
cmc
pusha
add
dec
in
adc
inc
daa
push
sub
or
sub
or
lock
ret
and
or
inc
or
dec
cmp
outsl
fcoms
lods
jae
cmp
jns
and
or
shrl
and
hlt
jae
cwtl
cld
in
js
hlt
inc
ret
add
insb
shlb
and
pop
dec
fmuls
jns
cmp
cld
ss
push
cmp
fiaddl
lods
shl
mov
mov
clc
push
inc
aam
push
js
roll
or
add
loopne
testb
add
scas
mov
pop
addr16
out
cmp
or
and
mov
ror
icebp
aad
fcompl
jecxz
xor
jb
mov
dec
orl
es
add
add
pop
repz
sub
dec
add
test
sbb
sahf
xlat
mov
vmwrite
jae
inc
and
inc
out
cmp
in
add
and
cs
xchg
and
cmp
jb
mov
adc
push
pop
xor
inc
push
push
mov
ja
and
scas
cmp
clc
lcall
sbb
in
cmp
lock
in
xchg
add
cmp
xorb
adc
movsb
dec
and
and
ja
add
or
je
xorb
xorl
inc
insb
xchg
xchg
push
mov
push
fwait
mov
mov
std
fstl
lea
push
pop
test
cmpsl
insl
scas
mov
add
inc
xchg
mov
jbe
sub
cld
cmp
adc
out
cli
arpl
dec
test
cmpxchg
xlat
fwait
push
aam
adc
imul
add
inc
je
adc
in
rcrb
push
lea
xor
sbb
aam
divb
call
mov
adc
push
jo
mov
sbb
mov
mov
mov
test
ret
lea
or
sbb
in
jp
fstpt
imul
adc
in
push
data16
hlt
decl
push
ret
pop
in
stos
add
sarb
jl
mov
push
cli
sub
packuswb
imul
push
add
mov
mov
dec
jno
inc
and
das
adc
out
push
or
fcomps
nop
push
mov
fnstcw
push
or
cmp
cmp
lea
divl
xor
push
arpl
or
push
ret
cmc
and
in
lods
movl
xor
add
rolb
addr16
shrb
ds
adc
jge
sbb
mov
mov
jecxz
cltd
test
mov
es
cli
cli
xchg
xor
cmp
jne
adc
int3
cmpsl
push
inc
inc
xor
push
push
push
sub
lcall
in
dec
loop
scas
jo
mov
orl
lea
cmovae
daa
pop
push
fwait
dec
pop
out
mov
lea
xchg
jp
cli
imul
outsb
xchg
xor
xchg
push
stos
hlt
icebp
dec
test
std
loopne
lock
push
ret
xchg
fadds
mov
fisubs
add
inc
inc
sahf
fstpl
inc
nop
xchg
fs
sbb
jle
aam
inc
cmp
jge
jb
add
adc
jae
mov
sbb
pusha
dec
and
lods
add
mov
cmp
in
xor
loop
inc
push
xor
jb
inc
xchg
jg
mov
sbb
ret
add
add
pop
cmp
mov
out
or
jecxz
push
ffreep
iret
je
pop
and
or
and
mov
mov
test
or
fsubl
adc
mov
outsb
les
fmuls
xor
rcl
int
iret
aas
movsl
sub
jecxz
jae
xchg
outsb
lods
or
fisubs
push
and
dec
or
incl
in
fcoml
xor
sbb
ret
push
in
mov
inc
addb
xor
lock
jp
testb
push
inc
jne
mov
nop
lahf
inc
inc
and
inc
ljmp
aas
sub
mov
cmp
push
push
push
jo
outsl
adc
sub
or
std
mov
ret
sbb
mov
adc
cld
mov
xchg
pop
lock
xor
adc
xor
xchg
adc
add
out
clc
mov
cld
inc
nop
cmp
inc
mov
xchg
daa
add
sbb
out
add
push
fs
xor
div
push
sub
test
fsubr
sub
and
xchg
and
jge
mov
outsl
xor
lock
add
sbb
popf
sbb
push
lret
je
or
mov
test
xchg
test
sti
movsb
sbb
inc
sbb
cmpsl
test
xor
inc
xor
add
in
in
or
iret
addb
or
arpl
pusha
xor
and
pop
mov
lock
jmp
sbb
xchg
cvtdq2ps
dec
mov
iret
jmp
sbb
imul
adc
pop
addb
xlat
sti
xchg
inc
adc
int3
decl
jmp
mov
jb
mov
lret
or
push
in
sub
xor
cmp
adc
fildll
inc
xchg
aaa
in
insb
test
xchg
ja
mov
int3
and
sub
mov
mov
jge
inc
jg
mov
or
mov
xor
inc
add
and
ds
dec
or
push
and
lahf
xor
pop
into
adc
sub
xchg
test
adc
cmp
loope
decb
movb
insb
aam
pop
push
mov
adc
pop
jl
aaa
sbb
mov
jp
jge
aam
iret
pop
js
fistl
add
add
xchg
mov
xor
adc
add
aaa
fcomps
push
ljmp
fs
pop
xchg
inc
cmp
ret
jg
je
out
dec
mov
sbb
push
jb
fcoms
mov
inc
cli
les
add
cmpl
pop
loopne
sbb
std
ljmp
arpl
in
inc
push
inc
imul
add
and
sbb
ja
or
sbbb
and
out
cmp
adc
dec
dec
cmp
jne
fidivrl
push
xor
push
imul
dec
or
js
push
test
or
shlb
inc
ret
ret
je
iret
pop
orl
sbb
outsl
enter
lods
xchg
es
fcmovnbe
aaa
sar
call
outsb
dec
or
add
dec
xor
daa
sub
dec
jnp
sub
clc
adc
ja
jl
push
cs
das
sub
mov
je
jo
data16
or
lods
cmp
sbb
es
jnp
inc
sub
js
pop
ror
repnz
add
add
mov
jne
sbb
call
push
stos
movsl
push
test
inc
adc
scas
mov
testb
jl
inc
adc
hlt
sub
and
icebp
test
push
mov
lret
or
adc
sarl
sub
sub
inc
cld
dec
mov
add
stos
imul
fisubrl
sub
call
or
jo
call
in
cmpsb
mov
inc
or
mov
cmpxchg
mov
fbld
push
rorb
mov
andb
pop
testb
test
sbb
cmp
popf
mov
lock
aam
mov
dec
pop
dec
sbb
add
popf
add
aam
mov
mov
cmp
and
clc
in
cmp
xchg
or
sarb
enter
add
mov
cwtl
in
bound
cwtl
shrb
add
cmp
mov
inc
fs
clc
sbb
dec
sbb
ljmp
pushf
imul
fistpl
out
or
rorb
movsb
inc
inc
adc
leave
dec
xchg
add
mov
sbb
fcoms
sub
inc
ret
imul
inc
mov
adc
shr
jecxz
push
es
adc
cs
lock
sbb
nop
out
cmp
fdivl
popa
mov
enter
ja
jle
push
pop
or
mov
pop
push
sub
pushf
jo
shr
xchg
dec
mov
cmpsl
mov
mov
add
push
inc
and
dec
or
and
jb
jmp
cmpsl
test
jecxz
lods
add
insb
fsubl
movsb
dec
adc
sub
add
stc
push
sub
xor
cwtl
xchg
nop
loopne
add
daa
das
outsb
inc
add
test
push
mov
test
das
add
inc
pop
mov
inc
pop
inc
dec
mov
js
arpl
sbb
fcoml
sahf
aaa
lods
xchg
adcb
sbb
inc
popa
add
fcoml
scas
dec
les
xor
mov
arpl
xor
sbb
jno
lahf
pop
or
and
push
mov
or
pushf
ret
fbld
push
in
repz
jo
push
xor
in
pop
jo
ret
jmp
xchg
mov
fists
or
jle
cmpb
rorb
cmp
lret
shr
pop
dec
jecxz
lock
adc
push
pop
rolb
add
int3
rclb
inc
stc
adc
xlat
mov
push
aam
fimuls
push
jge
mov
xchg
daa
stos
add
les
into
mov
jne
nop
dec
push
push
rcl
push
or
xchg
adc
or
jbe
xchg
lcall
andb
in
sbb
shl
or
push
inc
dec
jbe
aad
mov
push
mov
mov
jno
pop
inc
sbbb
pop
addr16
mov
das
push
testb
pop
inc
das
xchg
arpl
daa
xchg
and
sbb
mov
test
loopne
out
push
movsl
pop
in
or
inc
mov
jne
mov
pop
shlb
or
sbb
jmp
dec
mov
rorb
mov
orb
add
sbb
rclb
xlat
add
in
into
hlt
cmpsb
or
jb
loope
sahf
push
rcrl
mov
roll
movsb
or
push
inc
je
dec
shlb
or
cmc
dec
es
jns
and
jnp
std
add
cmp
movsb
xchg
loopne
es
sbb
lds
popf
mov
int3
out
add
add
movsl
mov
cld
sub
or
movsl
repnz
or
sub
or
or
cs
or
ret
mov
add
fists
test
pop
inc
sar
pusha
xchg
xor
jle
fistpl
orb
xchg
lahf
or
and
pop
inc
test
and
scas
movsl
xor
es
fwait
push
sub
popa
and
push
pop
jne
int3
movsl
rol
mov
mov
and
push
ret
mov
jb
add
loope
push
xor
inc
pop
mov
mov
xchg
xor
dec
loopne
xchg
adc
xchg
xor
ret
fcmovnu
and
sbb
ret
jecxz
jo
xchg
mov
fidivs
xor
inc
repnz
adc
inc
inc
fadd
adc
push
inc
add
enter
sbb
push
inc
ds
cwtl
add
xchg
pop
daa
iret
enter
mov
lock
leave
cmp
mov
xchg
ja
dec
jl
dec
js
adc
jns
sahf
je
jo
insb
iret
leave
rorl
push
les
or
es
fs
inc
dec
cwtl
cld
or
cmp
adc
push
and
adc
dec
mov
adc
dec
imul
and
pop
jne
jae
jb
sub
push
je
mov
push
or
fsubs
sub
adc
push
push
or
cmp
add
push
xor
or
push
popa
insb
fldl
testb
inc
adc
add
sub
outsl
imul
insb
push
inc
jb
outsb
adc
push
xchg
stos
and
jae
pop
xchg
inc
mov
adc
inc
outsl
adc
jbe
lret
les
scas
insb
mov
push
dec
push
sbb
xchg
leave
jl
out
hlt
push
push
int3
xor
or
pop
cmpl
ret
or
or
pop
and
xorl
ds
pop
add
inc
fwait
xchg
adc
jo
and
dec
es
adc
in
push
mov
pop
mov
push
xor
add
mov
popf
repnz
lahf
or
mov
int3
mov
adc
int3
call
push
jo
xchg
je
das
mov
test
push
xor
cs
lcall
and
or
pop
call
mov
or
inc
push
rolb
inc
cmp
sahf
clc
hlt
maxps
add
pop
sub
push
push
and
and
mov
or
iret
adc
sub
add
cltd
dec
jmp
test
inc
push
lds
loope
push
cs
xchg
mov
push
push
push
rcll
filds
sub
dec
enter
mov
adc
mov
nop
mov
push
and
sub
rcr
addl
addr16
cmp
js
jmp
add
iret
in
add
fwait
cwtl
jecxz
out
insl
pmulhuw
out
in
andb
cmp
push
lock
push
adc
es
clc
or
mov
xor
push
out
sahf
negl
dec
js
mov
repz
pop
push
push
out
insb
jnp
loopne
push
mov
pushf
push
fcoms
push
or
adc
lock
fcompl
jae
inc
stc
inc
and
sub
insl
bound
negl
test
jle
lods
int
adc
mov
add
jle
or
cmpsl
adc
adc
and
or
and
adc
aas
fisttps
rcl
push
push
clc
jne
mov
or
or
movb
jae
popa
jmp
or
pusha
test
fs
lret
mov
dec
gs
jbe
or
or
adc
adc
movaps
outsb
adc
push
fs
fmul
or
adc
push
mov
enter
pop
xchg
push
cmp
push
ret
mov
adc
popa
in
popa
imul
or
xor
lods
pusha
pop
or
jno
lods
sbb
pop
mov
add
sbb
fists
loope
loop
pop
add
pusha
inc
xchg
imull
sahf
js
ss
push
pop
cmp
jns
push
add
mov
inc
cmp
push
adc
xor
aaa
dec
data16
xor
push
ja
imul
mov
push
clc
xchg
adc
push
addb
or
js
xchg
je
jae
or
push
jmp
inc
add
imul
add
imul
lahf
cmp
jb
sub
test
lahf
enter
pushf
lahf
js
inc
lock
ja
push
cmp
push
aam
xor
rcr
pop
adc
sbb
and
hlt
fldl
cwtl
pusha
roll
cmp
mov
cmp
ja
es
add
add
jbe
adc
pop
push
jno
pushf
sbb
inc
movsb
mov
sub
shlb
cmp
popa
fs
imul
filds
and
test
inc
dec
es
mov
and
add
je
popa
loope
pop
add
scas
xor
adc
roll
jnp
lods
sbb
pushf
test
pop
mov
pop
loope
pop
aaa
mov
je
dec
iret
in
out
wbinvd
add
push
out
pop
andl
sahf
mov
jmp
nop
pop
pop
dec
imul
ret
and
or
stos
and
lahf
pop
outsb
or
shrl
xor
fistpll
push
xchg
push
push
jb
inc
add
mov
add
jnp
jg
mov
cs
ja
outsb
jb
insb
cmpl
add
imul
cmp
jo
sbb
inc
jle
cmp
sbb
add
mov
js
xor
mov
lds
add
sub
adc
outsl
arpl
inc
shll
xor
cwtl
inc
push
adc
iret
push
pusha
push
addr16
push
lds
addr16
movsl
lcall
leave
jmp
jp
push
gs
filds
mov
inc
nop
mov
inc
lods
movsbl
shlb
jb
inc
sbb
or
xchg
sbb
test
adc
nop
fdivp
cmpl
or
add
pop
adc
dec
jecxz
rcl
adc
sti
push
outsl
jae
cmp
or
sbb
das
mov
xor
cmpsl
pop
mov
lea
or
or
or
aad
sbb
jb
in
dec
je
jecxz
push
fists
xchg
xchg
xchg
cmpl
push
out
and
fs
inc
cs
popa
js
dec
pop
rcrl
test
cmp
jnp
push
mov
or
add
stos
and
sbb
addps
sbb
mov
cwtl
movhps
popa
lds
jo
ja
gs
pop
roll
or
or
and
inc
negl
ss
add
mov
mov
inc
xchg
lods
pop
xchg
movsb
add
adc
jmp
mov
push
insb
adc
das
mov
push
xchg
clc
inc
cld
dec
xor
stc
outsb
cmp
push
push
add
pushf
ljmp
stc
pushf
cli
int3
std
sahf
mov
push
sbb
mov
sbb
fdivr
cmpsb
push
pop
cld
fdivrp
cmc
jns
dec
mov
loopne,pt
cld
nop
pushl
push
dec
out
inc
push
loopne
in
scas
sbbb
fistpll
add
add
add
add
inc
add
or
push
add
pop
jp
decl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lahf
sub
add
mov
in
in
jmp
ljmp
call
jmp
jmp
jmp
jmp
jmp
jmp
fdivrp
fdivr
fcos
clc
fdivr
xlat
call
call
call
call
call
call
call
dec
dec
dec
dec
dec
dec
mov
cmp
leave
dec
ret
sub
jmp
cld
sbb
push
sbb
insb
ds
jns
addb
enter
imul
loopne
sbb
insb
ds
clc
add
adc
daa
jl
mov
push
push
inc
push
or
cs
aam
jns
repz
cmp
pushf
and
nop
mov
jmp
mov
jle
sar
int
sub
notb
scas
les
pusha
push
dec
jae
rcrl
mov
add
jl
imul
ds
add
dec
add
mov
into
push
xor
fsubl
sti
sahf
out
pop
in
pop
sbb
lcall
and
add
jo
inc
out
jge
push
fimuls
icebp
cmp
push
jnp
clc
lock
in
jbe
jmp
cld
test
mov
xchg
pop
sbb
shr
pmaxsw
shll
out
or
sbb
addb
add
lods
pushf
movsb
pop
aaa
or
out
nop
lock
cmpsl
pop
arpl
cmp
inc
je
mov
cmp
add
repnz
add
stc
aas
dec
sub
add
add
cs
cmp
or
inc
jne
in
call
xchg
test
mov
incl
inc
shll
pop
cmp
xchg
and
fiaddl
orl
mov
pusha
xlat
mov
adc
fidivrs
pusha
dec
in
jo
shlb
je
test
fidivs
aam
inc
mov
data16
filds
xchg
imul
in
rcl
add
push
pop
int
adcb
adc
scas
inc
add
lcall
je
jne
add
sub
fcoml
lcall
dec
insl
gs
add
push
dec
pop
das
sbb
dec
inc
jb
jb
pop
jle
dec
jno
fs
dec
cli
pusha
and
mov
or
xchg
mov
fbstp
pop
or
das
pusha
mov
mov
clc
mov
das
add
or
ret
aad
xor
sbb
adc
sub
int
enter
out
pop
outsb
test
adc
addr16
test
mov
mov
pop
adc
les
xor
and
insb
adc
push
adc
push
sub
jle
sbb
push
adc
les
stos
subb
and
aaa
mov
mov
stc
cmp
pop
sbb
fs
adc
nop
push
push
orl
mov
pusha
ret
iret
mov
iret
ret
sbb
mov
movsb
lea
aas
add
stos
push
hlt
jg
nop
pop
in
iret
in
gs
in
xchg
inc
pop
add
jb
push
dec
and
data16
jnp
jnp
cmp
int3
testb
xchg
js
lcall
inc
inc
ss
dec
or
data16
movsb
inc
push
lods
xchg
xor
cmp
and
pop
lock
dec
jle,pn
jo
cmpl
xor
std
cmpsb
sub
jno
adc
dec
or
adc
adc
aad
loop
mov
pop
push
sub
mov
outsl
sbb
add
add
add
mov
clc
mov
and
addl
add
add
add
call
add
add
aaa
mov
mov
mov
mov
or
mov
mov
adc
sbb
sbb
and
jmp
mov
mov
mov
mov
add
push
mov
dec
mov
lcall
pushl
sub
dec
mov
mov
mov
in
inc
inc
inc
mov
inc
inc
inc
and
cmc
pop
or
mov
mov
stc
dec
pushl
pushl
pushl
xchg
pusha
push
int3
lock
popa
lahf
out
sahf
pusha
andb
sti
xor
cwtl
arpl
push
push
dec
rep
nop
fs
push
sub
imul
sbb
jbe
in
stc
sahf
mulb
nop
push
mov
inc
ja
ja
je
push
xor
jge
fcomps
mov
imul
jbe
nop
push
or
out
jns
ja
dec
mov
push
clc
inc
repz
push
pop
push
push
jns
data16
sbb
jns
cmp
fdivrl
jnp
xchg
dec
js
shrl
jl
push
pusha
xchg
ds
insb
mov
jne
push
in
aam
imull
cld
loopne
mov
out
adc
imul
jnp
sahf
imul
cs
adc
xor
or
push
mov
data16
mov
cs
jae
fldcw
or
xchg
jg
adcl
cmp
fadd
xchg
xchg
jo
inc
cmpsb
pop
scas
rcrb
and
mov
mov
cmpsl
jmp
mov
xor
cmp
mov
insb
mov
mov
nop
clc
outsb
push
lods
ret
inc
or
sub
pop
jo
push
adc
int3
mov
lock
shrl
mov
mov
clc
mov
xchg
pushf
and
shl
fimuls
cs
mov
into
les
rolb
jl
fists
mov
add
cmp
cmp
dec
leave
inc
fidivl
mov
adc
in
mov
mov
insb
mov
lds
mov
pop
xchg
incl
inc
and
add
or
pushf
or
mov
inc
mov
push
push
pop
adc
push
mov
adc
inc
cmp
jecxz
mov
inc
aaa
aaa
pop
sub
mov
jg
jle
out
inc
mov
dec
cwtl
mov
inc
pushf
addb
push
cmpsl
cwtl
mov
and
es
lahf
or
test
add
push
jbe
mov
inc
push
inc
add
inc
andl
dec
ficoms
cmp
les
jns
lret
in
sbb
dec
mov
ds
cmp
or
or
dec
or
xchg
rclb
sbb
stc
xchg
aas
xor
adc
std
les
inc
and
mov
pcmpeqb
cmp
mov
add
push
push
adc
cmp
gs
pusha
adc
inc
inc
adc
enter
test
xor
leave
push
in
or
push
cwtl
mov
aas
sub
mov
inc
andb
sbb
mov
or
fwait
test
mov
mov
add
and
xor
add
sub
xor
adc
outsl
les
xchg
inc
push
mov
iret
sarl
push
xor
mov
iret
repz
xlat
in
incb
cmpsl
stc
or
mov
inc
js,pn
pop
inc
test
in
push
add
inc
sbb
sahf
push
adc
fisubrl
insb
push
sbb
pusha
in
int
mov
cs
mov
inc
aam
sbb
ds
shll
mov
insb
inc
test
push
jb
mov
mov
std
add
or
adc
jle
adc
cmpsl
add
add
outsl
test
or
jae
push
mov
dec
adc
pop
imul
sub
es
inc
pop
test
xchg
pop
xchg
pushf
sbb
pushf
loope
rol
xchg
loope
loop
loop
int3
pop
add
jo
pcmpeqb
cmp
xor
jecxz
cmp
mov
and
sbb
test
xor
shll
hlt
mov
nop
sbb
dec
jp
push
sarb
aaa
in
push
sbb
scas
push
fs
shl
push
fcomps
xor
push
pusha
daa
mov
in
mov
mov
in
mov
inc
adc
mov
dec
stos
or
adc
pop
and
lock
adc
xchg
mov
mov
mov
cmpsb
pop
lahf
adc
add
idivl
test
clc
add
adc
push
popa
jns
rcrb
insl
or
inc
data16
lea
mov
adc
test
xor
adcb
xor
jno
push
adc
je
push
int
inc
arpl
aam
sbb
pop
jmp
xchg
add
inc
sahf
dec
inc
push
loopne
jbe
movsl
outsl
add
push
sub
jo
call
add
mov
movl
or
scas
xor
inc
or
push
negl
fcmovnbe
and
mov
jne
cmc
hlt
mov
jmp
test
pop
push
setns
pop
in
dec
jne
xor
ds
mov
cmp
jne
xchg
sub
in
dec
mov
dec
sub
shlb
cmp
jne
mov
inc
add
fmuls
mov
sbb
cmp
mov
insb
out
dec
push
adcb
cmp
and
mov
add
aas
inc
push
jg
insl
and
inc
jnp
aaa
dec
add
dec
aam
inc
fildl
or
jnp
ds
inc
push
ficompl
test
inc
adc
xchg
and
push
inc
push
aas
and
pushf
pop
or
mov
or
push
inc
mov
iret
push
cmpb
jne
jge
dec
jle
mov
pop
in
fcmovb
xor
je
push
xorb
stos
pop
or
push
inc
adc
aad
or
mov
out
jp
jb
xchg
xor
idivl
mov
jae
push
insb
add
aaa
call
aaa
mov
pop
insb
push
aas
add
cmpsb
sub
push
pop
inc
add
sbbl
push
fcmove
aaa
xchg
outsb
mov
jmp
inc
lret
dec
or
inc
jmp
popf
mov
adc
loopne
push
outsb
imul
sub
adc
push
scas
fstps
add
push
cmovo
insb
sub
imul
fs
fs
dec
inc
shlb
mov
popa
sbb
dec
push
or
cmp
jb
cmp
popf
sub
mov
inc
and
xchg
pop
hlt
or
inc
mov
js
push
mov
mov
out
jo
inc
jg
inc
clc
out
enter
xor
push
and
enter
nopl
add
test
fnstcw
lods
pop
xchg
fimuls
or
add
push
or
push
cltd
sarb
add
mov
dec
mov
fadds
call
jns
push
add
repnz
cmp
inc
addl
add
xchg
push
int
mov
hlt
mov
dec
pop
inc
lea
inc
push
and
les
xchg
add
pop
pop
mov
psubusw
sbb
push
test
mov
pop
pop
mov
stc
sbb
xor
mov
cmc
sub
mov
push
aam
xor
or
xlat
sbb
jmp
xor
enter
inc
dec
mov
jae
test
aaa
cmc
imul
inc
xor
imul
fstpt
inc
in
and
rorl
adc
shll
sbb
dec
shll
xor
rcrb
xor
scas
push
push
mov
xchg
mov
mov
sub
movsb
nop
dec
out
dec
inc
inc
pop
pop
mov
pop
icebp
out
pushf
sbbl
add
je
sub
and
je
arpl
shll
jle
or
mov
imul
push
movswl
or
gs
shrb
add
xor
lds
gs
inc
int3
mov
nop
sbb
inc
jmp
hlt
adc
mov
ljmp
jp
aas
enter
or
add
fwait
cmp
mov
subl
adc
push
insb
jmp
cmp
jo
fwait
xlat
inc
or
xchg
shrl
push
lret
clc
mov
cmp
icebp
mov
xchg
push
scas
dec
jecxz
hlt
fdiv
incl
sbb
cmpsl
lahf
stc
add
inc
dec
fisttps
fs
push
mov
inc
fistps
sub
andl
inc
notl
in
or
mov
sbb
movsb
dec
inc
loopne
lods
inc
inc
xor
jle
add
dec
mov
fidivs
shrb
or
mov
stc
stc
push
mov
inc
loopne
xchg
hlt
fwait
mov
inc
dec
mov
cmpsl
sbbb
inc
lcall
or
pop
test
pop
xor
mov
nop
cld
mov
in
movsb
mov
addb
orb
add
loop
dec
jae
movlps
inc
push
ja
dec
les
rolb
mov
xchg
dec
pusha
or
sbb
xchg
cmp
cs
pusha
mov
sbb
frstor
lea
dec
repz
add
adc
dec
pop
or
pop
inc
mov
pop
repnz
mov
pop
addr16
jns
or
insl
aaa
repnz
inc
push
add
jb
or
jle
jp
push
and
sarb
dec
jb
pop
inc
sbb
leave
in
mov
or
adc
cmp
push
mov
and
mov
and
lea
inc
push
sbb
pop
gs
pop
jle
cmp
pop
push
push
and
push
nop
jmp
and
add
cmp
out
lea
sbb
movsb
add
xor
push
cs
jmp
bound
xor
enter
adc
add
mov
sub
lret
fstpt
sub
fadds
inc
loop
ret
mov
jle
dec
outsb
rclb
cmp
fildll
leave
rorl
xor
inc
es
outsl
pop
mov
mov
andb
inc
ret
adc
inc
add
jecxz
inc
cmp
pop
insl
fsubs
fisubs
push
push
sub
add
iret
in
clc
popa
inc
sub
and
test
add
push
dec
std
jae
fildll
clc
cltd
push
movsl
enter
ds
loope
inc
cmpsl
pop
pop
dec
mov
sub
rcl
mov
pop
outsl
sub
rolb
lret
sbb
mov
cwtl
adc
push
mov
jo
addr16
adc
xlat
test
mov
rol
mov
out
mov
push
push
lret
imul
add
je
sbb
test
test
xlat
xor
inc
cmpb
mov
subl
sub
orb
out
push
push
cmpb
or
push
push
sbb
push
lock
sar
mov
cmc
push
lahf
in
sarb
pop
inc
cmp
ret
cs
sbb
inc
mov
mov
loop
and
sbb
sbb
sbb
sub
or
ret
dec
adc
jl
pop
push
fmull
cmp
xchg
and
cmp
dec
mov
pop
inc
cmpsl
or
xor
jne
or
dec
insb
and
sti
pusha
cmp
and
mov
xchg
sbb
sbb
cld
pop
add
aaa
lods
cmp
lock
je
rorl
mov
push
inc
push
push
add
and
pushl
repnz
dec
push
push
incl
in
lret
inc
call
push
inc
add
sahf
mov
jb
mov
notb
popa
movnti
xor
insl
xorb
gs
sub
xchg
xchg
ss
fidivrl
ljmp
pop
jbe
or
call
sbb
inc
lods
push
add
imul
cmp
cmc
lds
and
mov
mov
rol
mov
repnz
jg
mov
pop
pop
jbe
mov
insl
out
pop
test
xchg
dec
bound
andb
out
xchg
in
cvttps2pi
mov
into
clc
pop
push
fwait
cmp
int
and
sbb
ljmp
gs
or
adc
rol
jne
jae
lock
jno
fcomp
shrb
add
mov
sbb
mov
sub
iret
push
pop
mov
xchg
es
add
shll
or
int3
push
test
fimuls
je
xchg
sbb
mov
xlat
mov
mov
dec
cmc
movb
add
adc
push
sbb
add
in
ficompl
repz
cld
mov
add
ljmp
push
adc
mov
mov
test
add
lods
popa
mov
scas
call
adc
in
sbb
int
ss
cs
sbb
sbb
push
fisubs
mov
mov
or
push
sub
lcall
jne
testb
jne
sbb
je
push
adc
push
test
adc
sbb
pop
or
xor
mov
mov
pop
fwait
xchg
lcall
rcll
fsubl
mov
sbb
test
mov
ljmp
push
inc
xchg
bnd
insl
sbb
cmp
pusha
and
shlb
mov
mov
imul
cmp
dec
inc
cld
ficoml
movsl
push
fs
and
insb
test
mov
mov
sbb
mov
adc
xor
js
jecxz
cmp
dec
iret
add
fwait
js
inc
pop
inc
dec
imul
imul
or
aaa
jne
pusha
jnp
mov
shlb
and
pop
pop
cld
test
dec
mov
or
stc
adc
testb
mov
adc
xchg
rorb
fdivrp
fstpl
fwait
jmp
mov
lods
sub
cmp
push
add
lret
fsubrs
adc
cli
imul
into
add
push
insl
pop
xor
xor
push
adc
xchg
orl
dec
arpl
popf
jns
xchg
jmp
sub
mov
push
inc
or
movl
sub
pop
test
loopne
inc
push
out
mov
or
fisubl
add
mov
dec
mov
fldl
cs
cmc
ret
fiaddl
add
push
pop
bound
movsl
test
cwtl
iret
and
xchg
jge
or
cmp
in
sub
lea
mov
sbb
push
xor
out
mov
push
cs
jecxz
into
push
mov
pop
dec
sub
jno
imul
push
jmp
loopne
or
fbstp
shrl
fadds
mov
cs
mov
in
mov
push
push
sub
mov
push
inc
dec
add
pop
jno
or
je
push
pop
sbb
mov
jmp
loopne
xchg
orl
dec
xor
add
or
add
xchg
ljmp
js
aas
push
mov
push
sbb
push
add
and
and
daa
adc
xchg
xor
mov
xchg
pop
ror
cmpl
sub
xchg
mov
insb
sbb
lock
mov
jmp
movb
add
add
mov
xor
push
add
mov
xor
shll
pop
subb
inc
and
inc
je
sub
pusha
mov
pop
aas
adc
add
outsb
push
sbb
cs
adc
adc
lea
cwtl
stc
aam
dec
push
xchg
or
cmpsl
adc
dec
lock
arpl
inc
or
je
faddl
pop
xchg
sahf
mov
add
loope
js
cmp
imul
in
xchg
cmp
jae
jmp
testl
sub
mov
orb
cmpl
pop
lahf
push
es
add
inc
mov
adc
fbstp
xor
lods
add
xchg
jne
mov
inc
push
or
fsts
add
push
call
xor
movsb
fmuls
out
popa
movsb
jecxz
sbb
test
fnsave
mov
leave
jp
mov
loop
pusha
adc
mov
ror
fimuls
adc
enter
test
xchg
push
lret
mov
inc
sbb
mov
daa
mov
mov
je
dec
push
cmp
fwait
pop
daa
and
xchg
push
stc
movb
sbb
sbb
fmuls
fnsave
jbe
and
mov
mov
fadd
sbb
mov
lret
sbb
rol
inc
enter
pop
and
adcb
test
cli
add
adc
and
xlat
fcmovbe
add
or
mov
das
jnp
add
pop
pop
sub
push
or
adc
pop
lock
cwtl
dec
pusha
enter
dec
xor
inc
jl
mov
aad
lock
cmc
pop
rcrb
add
clc
sbb
jmp
stc
push
insl
dec
mov
dec
inc
sbb
cmp
dec
hlt
jne
dec
ja
xchg
or
sbb
push
push
mov
sbb
inc
outsl
inc
mov
shl
hlt
pop
stc
push
push
fnstcw
outsl
and
mov
or
add
pop
aaa
mov
popa
pop
ljmp
jmp
gs
popf
sbb
pusha
out
fptan
add
cmc
jnp
jl
iret
mov
insb
sbb
enter
xchg
or
cmc
and
jb
pop
dec
cld
in
mov
lsl
inc
add
pop
rolb
jmp
ret
aas
roll
les
pusha
pop
xor
xchg
iret
pop
pushf
punpckhbw
and
mov
daa
pop
or
fwait
dec
and
icebp
hlt
inc
add
fimuls
orl
cmp
movsl
add
push
xchg
getsec
leave
scas
or
and
imul
adc
mov
or
push
add
add
mov
sub
inc
decl
out
dec
out
pop
jmp
cmp
je
mov
jbe
push
adc
pushf
lret
fwait
jge
cmp
push
or
add
pop
xchg
adc
je
mov
sarl
fs
jbe
or
xchg
or
loope
addr16
enter
fs
in
out
sub
addl
xchg
cltd
loopne
or
dec
jbe
add
nop
scas
and
mov
out
js
push
cmp
inc
push
movsl
addb
or
in
adc
inc
mov
sub
xchg
adc
subl
mov
mov
or
gs
ret
inc
and
inc
inc
sahf
in
clc
xor
jg
or
jne
imull
movaps
mov
push
add
sub
daa
lds
pop
cvtdq2ps
or
or
pop
sub
mov
cmp
out
push
lcall
in
jecxz
mov
sbb
cld
fstpl
push
push
ds
add
scas
and
adc
dec
fldt
xchg
mov
xchg
filds
dec
sbb
sbbb
push
mov
jl
mov
push
les
adc
add
dec
call
mov
inc
sbb
popa
jns
ljmp
lahf
fs
pop
jae
ret
dec
andnps
addb
scas
in
and
enter
adc
stos
add
orl
xchg
jne
fmull
or
add
push
xchg
push
inc
mov
pushf
sarb
xchg
jecxz
jns
rorl
mov
loop
dec
sbb
aas
loopne
cmp
xor
push
or
xor
jecxz
es
or
shll
je
sbb
add
push
push
fld
lcall
repnz
sbb
inc
popa
mov
dec
mov
rcrb
sbb
sub
out
clc
cmp
lahf
add
xor
imul
inc
repz
mov
push
add
pop
pop
pop
std
ficoms
subl
push
pop
add
fisttpll
jmp
subl
cltd
xchg
subw
add
push
jp
stos
push
pop
je
jo
iret
clc
out
test
test
dec
faddp
mov
test
inc
inc
repz
fidivs
das
mov
test
xchg
mov
test
fmul
xor
adc
int3
scas
fisttpll
or
push
mov
sbb
xchg
addl
rorb
xchg
and
stos
adc
add
shrb
daa
push
fistps
pop
je
sbb
adc
ret
lret
sub
cmp
or
mov
insb
sbb
adc
dec
stos
or
cmp
add
cltd
fcoms
imulb
fdivs
addb
pusha
jl
mov
dec
sub
add
push
or
pop
sbb
sbb
or
mov
in
push
xchg
sbb
and
inc
add
mov
dec
jmp
pop
adc
mov
stos
dec
mov
inc
inc
jne
adc
inc
jne
repnz
stc
shrb
xchg
dec
jne
cwtl
dec
je
mov
mov
mov
xchg
jle
mov
pop
push
xor
js
repz
jg
scas
or
mov
adc
jmp
dec
loop
dec
push
into
dec
enter
fisubrl
cmp
repnz
cwtl
or
pop
pop
loop
nop
push
inc
and
xor
enter
or
sub
add
mov
loop
sub
inc
inc
push
test
fistl
sbb
jmp
push
arpl
icebp
repnz
js
testb
mov
imul
aad
sbb
xchg
mov
ret
je
ljmp
rorl
shl
outsl
push
mov
dec
push
or
mov
mov
leave
aad
testl
push
divl
sub
daa
jae
mov
fwait
pop
or
inc
cs
xor
cs
pusha
mov
dec
dec
add
dec
push
dec
enter
cmp
outsl
jne
xchg
addr16
and
test
movsb
loopne
addr16
js
cmc
xchg
vpsrlw
into
pop
pop
push
ret
pop
lock
nop
dec
fisubrl
sub
and
sub
pop
gs
xchg
xor
adc
fmull
cmp
adc
in
jmp
pop
fimull
xchg
rolb
std
sub
xlat
gs
ret
xor
add
push
sub
dec
adc
xor
or
mov
movsb
adc
dec
inc
mov
mov
dec
inc
sub
cwtl
mov
ljmp
stos
imul
mov
or
lea
mov
inc
pop
rclb
pop
inc
xor
jge
pop
ljmp
cs
or
push
jecxz
adc
rcrl
pop
insb
repz
mov
icebp
mov
inc
mov
scas
adc
lds
xor
mov
and
adc
add
shrb
inc
dec
test
push
xchg
xor
xchg
lret
adc
pop
sub
popa
dec
lock
rorb
shll
inc
je
dec
or
clc
mov
int
jecxz
inc
add
pop
xchg
je
je
push
sbbb
fs
in
and
insb
adc
xchg
nop
inc
ja
mov
loopne
addb
rolb
mov
je
test
jmp
sub
enter
mov
das
add
mov
test
js
cld
sub
sti
add
mov
mov
pop
loopne
jp
aam
je
inc
push
xchg
push
inc
cmp
dec
inc
xchg
xchg
repz
add
test
xorl
sti
cmpsb
insl
pop
addr16
inc
imul
and
and
push
leave
imul
dec
mov
push
or
add
inc
popf
xchg
in
in
sub
cmp
dec
ljmp
and
and
mov
push
inc
and
lret
sub
inc
pop
sbb
daa
jns
dec
movsb
mov
sbbb
push
cmp
mov
jge
adc
js
aaa
mov
mov
dec
xor
outsl
cmp
shrb
arpl
mov
push
shlb
filds
lock
jp
push
nop
gs
mov
mov
or
adc
pusha
push
sti
test
xchg
adc
cs
xlat
cmpl
dec
lcall
iret
and
dec
jmp
adc
rol
cmpl
mov
push
rcll
push
movb
inc
mov
pop
cmp
xor
dec
orl
push
inc
inc
add
adc
sbb
dec
xchg
fadds
test
and
push
dec
mov
sub
adc
sahf
mov
sti
rorb
cmpl
inc
loop
pusha
rcl
inc
inc
add
mov
dec
dec
jecxz
int3
add
sub
gs
xchg
or
mov
aaa
je
pushl
hlt
pop
or
and
xchg
adc
es
xchg
sbb
pop
mov
enter
xor
inc
add
push
adc
inc
add
test
add
sub
lahf
add
push
imull
enter
pop
mov
pop
add
out
rolb
jo
imul
add
test
enter
pop
add
shl
cmp
inc
push
in
adc
jnp
jns
or
stos
xor
or
out
je
and
sbbb
lock
mov
push
add
cmp
cmp
or
sub
dec
pushf
cli
lods
test
jle
xor
popa
mov
add
dec
jne
push
jno
mov
lahf
mov
rclb
sub
pusha
push
adc
rclb
cld
xchg
sub
adc
inc
or
xorb
daa
dec
es
and
sti
cmp
ficompl
adc
andb
adc
xor
cmp
in
or
je
xor
and
mov
jo
cld
psrld
xor
pop
sub
nop
pop
daa
pop
lea
xchg
adc
dec
adc
xchg
jne
imul
dec
rclb
or
or
add
jno
lret
cmp
in
pop
in
in
push
pop
cmp
dec
sbb
mov
mov
and
lea
pop
mov
aas
lds
push
dec
xchg
mov
cmpb
inc
cs
mov
je
pop
fs
enter
rcrb
movsl
xchg
add
sub
adc
push
mov
push
les
mov
les
fildll
xlat
inc
addr16
xchg
clc
testb
je
push
jne
test
pop
inc
jns
adc
loopne
pop
lock
ja
mov
in
dec
sub
push
sbb
push
pushf
fisubrl
inc
or
lock
lcall
clc
jo
dec
loopne
clc
call
and
test
cs
adc
adc
clc
ret
add
ret
hlt
xor
adc
cmp
sub
aad
or
test
stc
rol
pop
mov
gs
pop
add
jl
roll
fadd
shrl
hlt
and
push
sub
push
mov
push
push
cs
cmpsb
or
add
out
sub
mov
push
ftst
push
xor
sahf
pop
push
add
mov
push
mov
pushf
inc
pop
sbb
mov
sub
sarb
push
cmp
fildll
push
dec
cmp
mov
push
push
adc
imul
loopne
add
scas
inc
data16
pop
xor
shl
movntps
ret
lods
icebp
out
data16
adc
enter
and
testb
adc
or
stc
lock
aas
cmp
pop
lods
push
ljmp
mov
fs
das
popa
lret
adc
aaa
mov
xchg
fs
sahf
js
or
push
cmpsb
xor
in
mov
cmpsl
pop
je
mov
pusha
inc
andb
or
cmp
lret
ja
shufps
nop
and
add
mov
movsl
data16
cmp
je
mov
lcall
and
mov
rol
je
xchg
enter
or
or
in
sub
inc
dec
jb
xchg
pusha
pusha
cmp
into
js
mov
xor
fbstp
sarb
mov
arpl
add
cwtl
mov
mulb
cld
sbb
adc
xchg
cli
push
insl
or
or
aam
mov
fidivrs
and
jno
mov
push
fwait
insl
sbb
outsl
push
cld
push
cmp
inc
push
ficoms
or
and
rcrl
add
js
cmpsl
add
je
idivl
mov
xchg
push
or
in
in
adc
inc
mov
imul
jno
sbb
or
cmpb
pop
sbb
inc
je
das
lahf
push
mov
inc
fwait
and
ss
xchg
mov
jno
cld
inc
pop
insb
and
or
sbb
inc
jb
mov
mov
imul
push
jg
adc
xor
jle
mov
and
test
jle
dec
mov
pop
sub
cmpb
xor
ret
pop
mov
push
mov
out
fdivrl
jle
sbb
lds
cmp
jg
dec
adc
or
nop
push
test
sbb
stc
jb
push
or
mov
push
add
pusha
xchg
push
adc
lret
addr16
shll
cmpb
or
pop
aas
push
xor
arpl
mov
sub
xchg
dec
jo
mov
insl
rolb
rolb
push
dec
stos
jle
imulb
add
sub
daa
inc
and
iret
xor
push
or
adc
add
js
pusha
pop
xchg
push
popa
mov
out
inc
inc
rcll
adc
push
test
adc
or
fdivr
and
je
jg
jne
enter
add
cld
or
popf
pop
xor
add
inc
aas
mov
pusha
jle
inc
or
lock
or
dec
mov
push
rorl
loope
fists
push
sahf
jmp
sbb
dec
pop
ret
shlb
mov
dec
or
and
insl
rol
inc
add
push
xor
sti
cld
add
push
popa
rcrb
dec
inc
sar
ss
mov
mov
dec
fs
bound
add
push
jecxz
push
xor
push
inc
adc
pop
pop
mov
sub
leave
pop
add
add
add
fcomp
inc
out
mov
adc
add
jo
dec
ljmp
lods
mov
loopne
lds
lds
xchg
and
std
ret
aam
out
inc
fsubl
or
insb
dec
sub
psadbw
xorb
xor
aad
aam
and
inc
lods
mov
les
push
shl
or
sbb
inc
add
add
or
rcrb
or
leave
push
sbb
aaa
dec
stos
cmp
rcl
pop
addr16
push
cmp
loop
and
add
dec
and
lcall
lret
adc
in
test
pop
push
or
out
mov
mov
adc
iret
add
fucomi
pop
add
xchg
or
or
dec
or
or
imul
jno
loopne
ficoml
mov
mov
insl
into
inc
stos
popa
push
je
mov
adc
adc
add
dec
sub
inc
or
loope
sbb
xchg
mov
insb
daa
xor
arpl
xchg
lea
frstor
sub
jl
push
adc
cmpl
outsb
add
outsb
or
push
dec
scas
sub
inc
lea
xchg
push
sub
and
push
add
sti
outsb
push
mov
lock
mov
dec
xlat
jl
inc
jg
aaa
and
xlat
cli
add
in
cld
clc
inc
ret
repnz
push
pop
repnz
adc
dec
lret
ficompl
rcrb
add
pop
sub
xchg
jnp
sbb
test
fwait
xor
or
xchg
jo
mov
jg
mov
push
scas
inc
mov
lea
jl
mov
mov
adc
sti
insb
adc
sub
xchg
inc
int
in
dec
fists
jge
lahf
xchg
sub
pxor
pop
push
pushf
ret
inc
adc
call
test
inc
cs
sub
neg
xor
and
lods
loop
or
adc
sbb
jge
push
add
lock
xor
add
dec
or
nop
dec
lahf
imul
or
push
push
xor
dec
dec
pop
sub
mov
xchg
push
and
and
push
push
adc
lods
out
popf
movsb
aad
mov
and
fistl
stos
test
fs
sub
or
fcompl
dec
mov
push
add
cmp
adc
outsb
das
jnp
inc
es
addl
inc
sub
dec
ficompl
stos
sub
cmp
cmp
jp
ret
dec
test
pop
mov
cmp
aaa
call
sub
sub
das
in
or
imul
adcl
lods
inc
imul
sbb
xor
dec
jecxz
pop
bound
in
addr16
mov
inc
enter
inc
or
sub
outsb
insb
movsb
leave
push
or
arpl
aaa
sarb
mov
xchg
adc
add
pop
and
xchg
add
push
loop
or
push
test
clc
nop
adc
and
inc
into
rcrl
adc
sbb
adc
or
ret
repz
fisubl
inc
fistpll
in
or
xor
or
add
cmp
lret
jp
xchg
and
inc
inc
clc
je
loopne
loope
sbbl
int3
add
cmp
daa
push
sub
dec
dec
loope
xchg
push
adc
add
xlat
shr
sub
shr
add
loopne
mov
orb
into
out
and
aam
inc
fdivr
int3
sbb
jecxz
test
sbb
mov
inc
inc
fsubl
inc
imull
jne
jle
xor
cli
test
push
jne
addb
sbb
clc
adc
add
inc
push
xor
imul
fs
ds
xor
push
or
scas
xor
inc
mov
pop
inc
xor
jge
inc
or
or
enter
push
pop
popa
jecxz
hlt
into
dec
lea
add
loopne
scas
xor
xchg
es
mul
in
xor
inc
scas
sbbb
rol
pusha
jns
std
fwait
xor
pop
pop
pop
loope
add
add
int3
add
pop
popa
add
jl
subb
push
and
push
hlt
or
sbb
lret
lcall
jge
xchg
inc
mov
adc
inc
sbb
add
and
mov
inc
and
xchg
pop
mov
inc
lahf
out
xor
addb
mov
push
jg
and
test
mov
mov
cmpsb
test
dec
lods
lds
mov
adc
pop
add
mov
adc
or
adc
add
ja
inc
subb
sar
js
adc
and
push
into
mov
sub
jae
jle
je
fadds
inc
mov
mov
dec
dec
clc
cltd
xor
jo
shr
cld
sub
adc
xor
cltd
mov
push
lret
push
test
movsl
pop
movsl
int3
cmc
stos
adc
pusha
das
jnp
mov
dec
add
cmpsb
rclb
xor
push
add
xchg
add
mov
mov
jg
jo
or
shlb
insb
loopne
or
mov
jl
adc
push
jmp
sub
sub
or
adc
es
or
jg
inc
sbb
fnsave
movb
hlt
mov
xchg
imul
aam
stos
ret
test
jge
rcll
xor
mov
or
push
jmp
sub
push
orl
push
or
xor
cli
adc
xorl
or
clc
or
adc
and
xchg
into
cmpsl
add
sub
dec
addr16
mov
movsb
shlb
movsl
or
outsw
adc
std
lods
and
cmp
pop
push
orb
loopne
push
mov
addb
inc
cmpb
es
rcrb
or
leave
and
movsb
inc
jmp
add
std
inc
xchg
cwtl
sub
out
push
sub
incb
sbb
pushf
jo
dec
or
and
dec
loopne
mov
gs
call
adc
je
mov
notb
add
push
mov
bound
xchg
imull
sbb
cmp
push
sbb
pop
add
lods
icebp
out
jge
jb
jle
dec
ss
lods
fiadds
dec
adcl
sbbb
rcr
cmp
cs
xorb
add
sbb
into
add
aaa
adcl
scas
add
incl
pop
ja
fidivrs
lcall
lcall
orb
xchg
push
and
sti
lret
mov
outsb
ss
add
push
pusha
adc
push
jo
cltd
xor
aam
rol
push
in
and
test
je
adc
inc
add
outsl
rol
mov
add
jnp
mov
push
std
sbb
roll
cmp
into
pop
pop
out
sub
sub
mov
in
test
addr16
add
add
subl
mov
aas
cmpb
mov
out
sub
outsl
loope
test
aas
data16
xchg
mov
add
test
and
jb
xor
push
push
addb
cwtl
push
sub
inc
sub
hlt
in
outsl
xor
out
testb
gs
ret
dec
push
or
daa
loopne
push
mull
cmp
pop
ss
mov
rcll
adc
out
sbb
xchg
adc
jbe
mov
out
push
test
js
push
dec
je
sub
push
xchg
cwtl
cmp
movsb
xor
mov
sub
or
sub
push
sti
and
ds
inc
fdivl
cmp
pusha
imul
mov
sub
adc
sbb
mov
pop
ret
xor
scas
add
int3
pop
xor
mov
mov
pop
sub
inc
mov
xchg
rcl
sbb
scas
push
xchg
or
and
jmp
push
add
jo
mov
or
inc
scas
mov
mov
push
mov
inc
add
aas
sub
popa
and
mov
mov
xor
and
inc
inc
pop
jmp
or
pause
sbbl
xchg
pop
xor
test
loop
or
fs
dec
pop
jb
cmp
jle
cwtl
cwtl
test
inc
jp
cwtl
dec
jne
lret
es
add
and
or
jp
and
test
push
inc
add
or
scas
add
adc
pop
jecxz
cwtl
adc
sub
setne
aas
or
dec
stc
leave
jmp
mov
mov
mov
jo
add
mov
add
dec
push
in
loopne
add
dec
shl
sub
cmpsl
test
mov
pop
or
push
pop
arpl
out
or
in
leave
adc
inc
or
push
or
out
xchg
xor
dec
pop
mov
adc
and
pop
fs
fcoms
jmp
push
add
fists
adc
xor
fildll
shlb
mov
arpl
push
sbb
sbb
sbb
add
jg
ret
les
jns
or
les
lret
shlb
jo
cmp
jecxz
inc
push
movsl
mov
cmpl
dec
and
and
das
pop
cld
xor
loop
add
fidivl
ret
sbb
mov
clc
or
dec
lcall
loopne
or
pop
lock
fwait
rcrb
push
sbb
push
add
pushf
add
mov
mov
in
xchg
pop
and
mov
or
xchg
or
ljmp
pop
sbb
inc
fadds
ret
xor
rolb
adc
cmc
call
rolb
aam
sti
xor
mov
gs
adcl
jle
cmp
inc
dec
fs
dec
mov
push
test
or
test
dec
lcall
or
or
inc
xorb
psrlq
and
mov
add
in
cltd
push
inc
stos
pop
and
test
mov
push
lret
mov
out
mov
xchg
and
mov
and
jnp
sub
cmp
daa
inc
sub
adc
mov
pop
inc
jns
mov
in
sub
out
cmpsb
and
aam
and
or
cmp
and
adc
push
jns
jae
rclb
fmul
add
push
std
inc
or
push
int
sub
mov
or
inc
or
pop
jnp
xchg
jmp
or
pop
adc
das
inc
aas
dec
popa
and
iret
add
int3
pop
loopne
repnz
shlb
enter
push
adc
sub
shl
or
inc
mov
cmp
int3
movb
in
loopne
clc
adc
arpl
mov
outsl
mov
enter
sbb
cld
xchg
cs
jo
push
cli
or
sti
adc
jae
or
adc
movsb
pop
ds
adc
jle
adc
or
dec
gs
dec
or
dec
movsb
pop
mov
sub
push
add
int
mov
inc
dec
mov
add
pop
test
push
cmpb
test
sbb
cmp
pop
push
inc
js
add
out
mov
cs
pop
das
dec
mov
stos
cmp
adc
inc
insb
je
adc
and
push
push
les
mov
jp
das
dec
jp
cmp
orb
pop
jmp
push
lret
inc
insb
and
inc
es
add
or
loope
pusha
int3
andl
xorl
and
js
aas
hlt
pop
idiv
push
subb
lea
mov
jecxz
adc
or
add
ja
push
push
mov
pop
or
push
push
dec
popa
ret
push
xchg
jne
dec
mov
mov
movb
pusha
mov
xor
inc
adc
arpl
inc
fcomps
mov
pop
insb
or
or
lods
cltd
pop
ja
push
movsb
loope
pop
inc
and
mov
push
pop
mov
push
sbb
sub
pop
mov
sub
test
movsb
xchg
pop
test
pop
xchg
rclb
adc
jne
xchg
cmp
push
in
cmp
xor
out
adc
mov
adc
push
xlat
in
cltd
in
mov
xor
js
jb
aad
mov
mov
push
jnp
jno
mov
outsb
push
adc
fs
popa
xchg
clc
dec
sbb
das
dec
pop
std
push
xor
mov
inc
mov
rcrb
mov
pop
push
js
sbb
or
dec
jo
and
push
sub
sar
cld
sbb
push
inc
or
inc
outsl
out
mov
xor
inc
punpcklbw
inc
stos
push
pop
mov
mov
jb
inc
push
sub
jnp
scas
fdiv
push
dec
dec
push
dec
or
je
inc
add
push
cld
adc
jle
pushf
add
sub
xor
inc
jnp
push
or
lds
cmp
andl
push
dec
xor
cwtl
clc
add
jbe
cmc
mov
inc
push
push
push
dec
inc
push
cmp
daa
add
fisttpl
mov
push
mov
movb
push
clc
fstl
cmpb
jg
mov
mov
jne
cmp
add
sbb
imull
cmpl
repnz
dec
dec
mov
jns
xchg
adc
pushf
adc
adc
mov
cltd
adc
jns
and
imul
add
mov
popa
jb
pop
cmp
push
sbb
inc
aas
sub
fistl
inc
sbb
jno
movsb
test
xchg
and
sub
cwtl
push
dec
lds
xor
and
adc
popa
sub
dec
sbb
dec
ds
adc
adc
adc
cwtl
and
movsl
mov
jbe
into
loop
and
mov
add
sti
mov
es
or
scas
iret
fdivs
enter
outsl
dec
inc
fwait
sarb
xchg
jg
mov
add
mov
cmp
jg
in
aad
jns
test
push
add
insl
cmp
push
add
gs
negl
push
out
fisttpl
mov
jbe
mov
cmp
subb
adc
xor
icebp
jns
sahf
xor
and
xor
fwait
cli
or
sbb
pushf
sub
mov
dec
je
add
imul
das
push
jmp
in
aam
int3
push
pop
test
in
adc
inc
and
pop
pop
daa
movsb
inc
subb
mov
push
dec
push
popa
insl
dec
inc
je
mov
xchg
xor
pop
mov
rcrl
push
ljmp
mov
push
cmp
jo
adc
pop
cmpsl
and
or
mov
jbe
aad
enter
rclb
push
xor
adc
mov
adc
sbb
adc
les
or
outsl
sbb
adc
aaa
xor
nop
push
xchg
aam
lds
mov
or
cmp
nop
adc
out
xor
or
lahf
insb
xor
dec
dec
cmpb
adc
xchg
hlt
loope
jp
shrb
sbb
lea
xor
add
jo
int
popa
ret
dec
addl
and
cmp
aad
jo
arpl
push
jge
shlb
push
mov
and
dec
mov
lcall
lahf
xor
sysret
call
pop
xor
inc
inc
mov
lods
mov
sub
jo,pn
adc
or
and
in
cmpb
orb
mov
fwait
cwtl
jns
lock
outsl
add
cmove
inc
and
jmp
add
add
jl
add
push
inc
add
xor
xor
in
pop
call
shlb
jno
ret
daa
mov
mov
orb
cmpl
xor
lret
mov
or
push
outsb
cmpsl
stc
cwtl
mov
mov
pop
push
add
orl
pushl
inc
add
aad
outsb
and
jg
inc
jne
leave
test
shlb
xchg
out
mov
inc
nop
dec
xchg
dec
cmp
out
xor
call
das
mov
fwait
pop
cwtl
add
sub
mov
test
xchg
cs
and
mov
mov
loopne
xchg
jg
dec
faddl
pop
and
nop
push
rolb
xlat
psubb
adc
sub
pop
push
dec
add
fildl
fdivl
xchg
and
adc
adcl
in
xor
out
in
sbb
dec
adc
add
les
push
mull
add
or
lea
add
fstpl
pop
add
inc
mov
jecxz
pushf
sarb
cmpsb
add
cmpsl
add
lods
or
xchg
lea
mov
icebp
jle
xchg
adc
or
in
rorb
jo
and
push
inc
mov
or
sbb
test
cmpsb
xor
ret
test
shrb
cmp
test
fnstsw
push
stc
fistps
jp
sub
cmpl
jle
inc
mov
push
hlt
jne
testb
adc
iret
and
adc
cmpsl
lea
mov
adc
pop
test
sbb
dec
sub
add
or
icebp
loop
aam
mov
xor
hlt
or
adc
das
add
push
and
fsubs
loopne
movl
dec
jno
dec
sbb
nop
fcompl
mov
cmp
add
addr16
rolb
mov
mov
add
mov
inc
out
dec
sub
add
sbb
add
push
inc
add
pop
fcoms
inc
add
push
lahf
fwait
xor
pusha
cmp
jp
xchg
jno
inc
adc
cmpsl
xor
or
inc
cmp
mov
mov
add
adc
pop
or
imul
data16
sub
inc
loopne
aam
imulb
push
mov
adc
mov
sub
cmpsl
loop
outsl
mov
mov
dec
mov
and
mov
and
and
mov
in
idivb
lret
stos
divb
add
xchg
je
ret
inc
sub
mov
pop
jne
add
repnz
jnp
add
pop
push
movsl
daa
mov
fisubl
xchg
jbe
add
mov
jmp
sub
add
mov
jne
ja
and
in
hlt
lods
stc
aad
mov
and
lock
add
aam
je
inc
repnz
enter
add
cmc
adcb
add
mov
pop
mov
into
dec
nop
cmp
adc
sub
inc
addr16
mov
push
shll
es
cmp
sbb
xlat
loop
xchg
jbe
pop
or
cmp
jae
fcompl
add
cmp
ja
or
jl
fcompl
adcl
in
loopne
add
imul
push
xchg
inc
mov
push
clc
xor
lret
sub
sub
inc
inc
sub
lea
mov
or
lods
andl
pusha
adc
ret
fwait
cmp
xchg
cmp
or
or
xchg
pop
dec
testb
fdivrs
out
insl
sbbl
and
shrb
push
movsb
outsb
sub
add
jmp
add
pop
jmp
push
mov
sub
or
ss
sub
or
pop
je
clc
loopne
inc
adc
cmp
jo
adc
pop
sbb
ss
mov
push
mov
add
push
stc
inc
add
inc
into
pop
mov
mov
scas
push
popa
pop
and
int3
push
sbb
push
jbe
or
push
add
imul
int
mov
cmp
or
xchg
sahf
negl
xor
inc
bound
aad
out
cmc
inc
lahf
je
and
and
pushf
lock
daa
add
and
cli
fimuls
lock
imul
popf
shr
movsl
frstor
xlat
dec
ficoml
add
and
ficomps
add
dec
add
pushf
mov
mov
xor
clc
xchg
xchg
stc
ret
jg
add
or
or
and
sbb
lea
mov
fdivr
rolb
fbld
and
push
and
lock
add
sbb
sbb
xchg
sub
loopne
ffreep
add
cmp
jne
rorb
dec
cltd
fisttps
pop
js
xor
dec
mov
clc
and
inc
sbb
and
adc
jne
mov
inc
mov
cmp
dec
or
gs
negb
push
cmp
jae
jne
xchg
je
idiv
add
enter
cmp
jge
push
sbb
repz
push
dec
push
or
sub
imul
and
addr16
mov
pop
add
mov
mov
mov
int
into
pop
sub
add
jne
or
xchg
add
enter
pop
pop
fwait
adc
mov
cmp
inc
or
xor
shlb
jne
mov
jne
inc
push
fwait
and
arpl
sahf
enter
and
aaa
inc
imul
add
sbb
sub
mov
or
imul
andb
ds
pop
or
ss
sarb
ss
imul
test
lcall
push
cmp
mov
jge
pop
idivl
loop
inc
add
andb
outsl
cmp
pop
or
stos
sbb
jno
mov
xchg
outsl
xlat
or
add
adc
xor
add
push
pop
or
ret
loop
dec
jl
inc
mov
mov
lods
or
lea
test
xor
fldl
leave
insl
pop
ljmp
mov
rclb
loopne
and
test
or
js
mov
aam
push
bound
pop
adc
inc
sbb
out
cmp
inc
push
lds
pop
dec
add
dec
push
popf
pop
popa
scas
nop
add
lcall
js
test
and
push
cmovl
lock
mov
cmp
mov
add
pop
push
subb
sub
sahf
or
xorl
sub
adc
cmp
notl
push
imul
sbb
cltd
mov
and
xchg
test
ds
jns
int
pop
jecxz
fwait
mov
int
pop
rcrb
mov
pushf
insb
jns
xor
push
xchg
jne
pop
xchg
cmp
xchg
jp
inc
push
and
stos
and
cld
jmp
in
jne
inc
mov
push
subl
cmp
scas
test
icebp
and
pop
adc
sbb
add
push
xor
in
fs
mov
cmp
pop
mov
pop
daa
daa
cmp
cli
popa
fnstcw
and
and
into
mov
mov
inc
and
pop
stos
jae
addr16
cmp
aas
mov
adc
lds
mov
jbe
pop
mov
adc
movsb
or
dec
es
inc
stos
test
push
inc
dec
cmp
cmp
adc
mov
push
pop
pusha
push
out
jne
dec
imul
sbb
push
mov
rorb
jne
and
push
lods
inc
and
subb
push
xchg
int3
push
nop
push
push
cmp
movsb
bsf
je
adc
and
inc
iret
sub
cmp
sub
add
jbe
push
dec
sub
and
dec
mov
pop
shll
aad
cwtl
je
pop
enter
icebp
es
in
pop
cmp
pop
aaa
xchg
cmpsl
imul
lds
fiaddl
add
add
xchg
jl
dec
cmp
rclb
jns
or
adc
roll
inc
aam
sbb
mov
jmp
aam
popa
lds
shlb
add
lcall
add
test
sbb
jo
shr
inc
pop
adc
fimuls
inc
insl
add
adc
push
adc
push
loop
js
xchg
push
lods
mov
sbb
imul
pop
and
adc
and
call
xchg
movsb
adc
mov
sbb
jnp
jmp
add
inc
sbb
add
cmp
or
xor
jne
test
insb
insb
popa
adc
lods
or
xchg
mov
popa
fldl
outsb
add
adc
inc
sub
test
dec
andl
ss
mov
mov
inc
aam
sbb
dec
cwtl
jnp
scas
and
add
push
loope
pop
repnz
add
adc
pusha
mov
js
mov
movsb
je
dec
or
and
mov
pushf
mov
mov
int
mov
jmp
push
stos
xchg
mov
push
jmp
pop
lcall
jbe
mov
push
shr
test
mov
dec
ret
cmp
push
mov
mov
test
hlt
mov
pop
dec
test
mov
push
sahf
mov
sub
xor
mov
dec
jp
and
imul
les
sbb
ret
mov
outsl
fidivs
mov
sub
mov
cmp
push
cmp
mov
xchg
lsl
hlt
cmp
cli
stos
or
push
sub
inc
add
mov
jl
cmp
sbb
repz
je
mov
lock
aam
mov
in
cwtl
inc
or
sub
call
adc
lods
out
sub
pusha
repnz
jo
jg
xor
sbb
push
aas
cmpsl
mov
movl
jecxz
sbb
or
add
dec
sub
add
cmp
sbb
and
jbe
imulb
or
adc
pop
add
imul
lcall
sub
iret
and
or
int3
xchg
lea
or
jo
mov
movsl
test
cmp
or
andb
adc
aaa
push
xor
les
jl
pusha
repnz
push
popa
lahf
fsubrs
inc
and
xchg
sub
xchg
sbb
cmp
xor
shrl
ficomps
icebp
jnp
push
out
testb
push
or
pop
and
sub
pextrw
test
inc
fldt
inc
or
mov
or
sbb
daa
lea
out
or
mov
dec
fiaddl
movsl
cmp
adcb
dec
adc
jo
or
out
add
cmp
cmc
into
sub
lcall
mov
or
jl
pop
xchg
jo
cmpsl
movsb
add
xor
test
mov
mov
pop
mov
insb
jnp
jge
push
sub
sbb
out
mov
mov
inc
fs
mov
sub
cmc
fmuls
insb
push
inc
sbb
cmp
test
sbb
or
adc
cmp
sbb
adc
xchg
dec
push
or
push
jno
mov
int3
sub
inc
and
lea
push
pop
add
and
xchg
in
jl
xchg
cmc
ficomps
insl
arpl
icebp
pop
dec
xchg
mov
in
sbb
xchg
hlt
jecxz
test
mov
cmp
push
test
sub
adc
lea
ret
xchg
xor
xchg
add
les
js
mov
dec
mov
adc
mov
pop
sub
cs
cmp
push
cmp
nop
sbb
ret
xchg
fcomp
adc
xchg
fldl
fcomip
add
adc
add
push
cmc
mov
inc
adc
repnz
push
mov
dec
dec
arpl
outsl
shlb
mov
mov
mov
insb
add
sub
push
inc
movsl
imul
lahf
enter
insb
ljmp
xlat
jne
pop
jmp
loopne
pop
notb
mov
sbb
pop
dec
je
sarb
loope
push
add
sub
mov
adc
add
nop
in
call
imul
call
inc
push
pusha
inc
inc
std
adc
daa
pop
push
sbb
stc
xchg
inc
dec
or
fcomps
ds
add
jbe
fimuls
sbb
fdiv
adc
or
stc
test
jno
jo
jmp
andb
lock
cmp
sbb
or
mov
imul
insb
dec
outsb
ret
push
add
mov
test
pop
xor
cmp
inc
xor
xchg
leave
adc
test
dec
jmp
std
pop
mov
inc
scas
lock
mov
repz
daa
adc
add
inc
ffreep
xchg
add
popa
in
cmp
cmp
or
mov
cmp
adc
mov
push
push
xchg
js
clc
sarl
push
and
or
push
es
mov
xchg
xchg
push
inc
pusha
and
outsb
mov
mov
jno
imul
sub
fdiv
sub
lea
testb
setne
mov
out
add
fmull
pusha
fistpll
notl
cltd
cmp
sub
mov
mov
mov
or
mov
xchg
xor
push
add
and
jmp
add
lret
inc
out
sbb
pop
rcll
pop
bsr
pop
pop
and
inc
out
movsb
push
je
dec
and
dec
push
xchg
and
and
push
and
inc
pop
daa
dec
push
push
leave
or
adc
cwtl
and
or
nop
jbe
cmp
sbb
sub
je
xor
push
cmp
and
dec
jbe
out
nop
sub
push
ret
add
dec
sbb
mov
mov
imul
xchg
xchg
popa
xor
push
add
sarb
and
cmp
rol
popf
test
or
roll
cmpb
mov
test
pop
add
outsl
push
add
inc
jae
dec
adc
imul
jo
push
mov
jmp
cs
xchg
or
mov
cmp
mov
push
cs
xchg
mov
push
inc
out
adc
cmp
sub
cmp
icebp
call
mov
mov
xchg
orb
xor
push
test
sbb
jae
cmp
cmp
dec
add
insl
fstpt
lea
lahf
mov
xchg
je
lods
leave
lahf
call
out
mov
xor
jecxz
sub
es
inc
fisttps
in
xchg
pushf
sub
sbb
or
or
pop
adc
jecxz
outsl
mov
dec
inc
add
test
xchg
imull
adc
cmpsb
lea
dec
inc
dec
mov
lret
es
insb
out
clc
push
jge
jmp
push
test
dec
sahf
adc
mov
ja
adc
int
dec
aam
ds
pop
in
dec
jg
add
in
repz
aam
test
pusha
cmpl
sub
xchg
adc
push
addb
or
enter
adc
sub
and
push
cmp
push
mov
jne
ret
mov
sub
add
jl
aam
je
xchg
test
sub
loopne
sub
es
test
jnp
mov
nop
sbb
inc
jmp
rcrb
jb
adc
pusha
test
test
lea
fs
cmp
cmp
and
sub
scas
sbb
shl
xchg
aad
or
dec
and
addr16
pop
jp
or
adc
orl
fdivr
popf
cmp
jecxz
push
int3
mov
leave
hlt
jne
and
sahf
or
or
rorl
scas
jb
mov
je
or
test
mov
inc
sbb
cmp
xlat
and
sub
jmp
sub
cmp
scas
loop
sbb
mov
dec
or
data16
mov
push
sbb
aad
mov
movb
fcompl
add
adc
or
mov
push
adc
sub
shll
lea
movsb
adc
lods
dec
in
clc
mov
cmp
pop
cmp
pop
int3
add
loopne
xchg
or
insl
inc
cmp
jg
pop
dec
add
jmp
dec
push
inc
add
add
inc
popa
sub
out
xor
ret
or
xor
push
bound
cs
cmp
or
or
rorb
xchg
cwtl
push
test
movsb
lods
ret
dec
mov
rclb
pop
inc
lcall
fstl
xchg
sbb
pop
gs
mov
or
dec
int3
imul
ja
loopne
and
push
popa
lods
cld
jno
xor
push
dec
adc
in
jmp
sub
cmp
clc
mov
or
xchg
lea
fldl
cmp
cli
cmp
imul
sbbl
iret
adc
dec
mov
clc
xor
mov
or
lods
push
or
les
loope
les
push
or
adc
fs
inc
shrb
test
adcb
add
add
loop
lea
jmp
loopne
and
adc
pop
sarl
pop
or
adc
mov
or
nop
rcll
pop
out
dec
lock
pusha
insb
sbb
push
je
and
add
test
add
push
jns
jb
or
adc
pusha
testl
je
push
xor
and
out
push
fldenv
or
adc
bound
subb
nop
add
sub
mov
pop
jne
sub
fmuls
cmpsb
xor
call
aam
inc
outsb
add
les
ds
mov
push
pop
add
leave
mov
inc
add
mov
cmp
sbb
shlb
jnp
or
and
fnstenv
in
push
inc
mov
sbb
mov
test
and
int
mov
or
jmp
inc
or
pop
push
jbe
jo
div
pop
sub
popa
jns
pusha
les
jb
push
push
mov
mov
cmp
ret
rorb
je
pop
pushf
cwtl
stc
cmpl
xchg
addb
rorb
mov
cvtps2pi
ret
jnp
cmp
push
and
push
dec
test
pushf
cmp
incl
decl
hlt
rcll
add
jb
add
mov
adc
pop
inc
push
and
jg
add
mov
add
dec
int
lret
xchg
dec
xor
add
cmp
lods
mov
jae
pop
xchg
push
fstpl
cltd
mov
dec
gs
pop
mov
clc
or
mov
cmp
insl
fs
cmp
or
stos
add
adc
aam
adc
sub
and
divl
mov
outsb
and
mov
xor
mov
sub
aam
cwtl
inc
outsl
call
movsl
add
pushf
jecxz
fildl
cmp
xor
push
mov
out
pop
push
prefetch
aam
or
pop
pmaddwd
jae
pop
aaa
push
inc
cmp
sub
and
rcll
lret
loopne
adc
push
push
push
add
or
in
mov
dec
je
push
in
xchg
pusha
jb
push
outsl
popf
adc
js
jmp
arpl
xor
and
or
fstpl
roll
and
shr
mov
ljmp
jb
stos
out
sub
aaa
fcoms
shrl
xor
sbb
and
xor
sub
lods
or
push
xchg
mov
sbbl
xchg
push
test
xor
mov
or
icebp
sub
adc
and
mov
cmp
sbb
sbb
add
mov
lock
add
fcoms
pop
xor
scas
xchg
push
mov
clc
add
mov
fwait
insb
add
pushf
dec
jno
sbbb
add
in
and
negl
dec
push
js
outsl
enter
dec
in
xor
std
jg
stc
js
sub
mov
pop
jmp
repnz
dec
in
clc
push
jo
sbb
je
nop
inc
mov
mov
pop
pop
cmp
mov
out
push
fnstcw
imul
mov
mov
repz
mov
jne
push
push
xchg
popa
jns
pushf
test
aam
dec
mov
dec
pop
test
or
inc
dec
inc
dec
or
or
sbb
add
mov
dec
sub
lret
insl
nop
or
mov
cmpsl
mov
fnsave
mov
push
dec
and
jl
lea
jno
mov
sub
fcompl
repnz
jecxz
sbb
or
rcrb
and
adc
int
int
ret
mov
out
or
and
in
test
jecxz
cld
push
add
and
push
mov
jg
fisttpl
mov
xor
dec
movl
adc
dec
fisubrl
in
dec
dec
outsb
rclb
jno
jmp
scas
inc
push
clc
fisubrs
cmp
je
mov
sti
adc
mov
lcall
stc
ret
push
lea
icebp
popf
adcb
and
cmpsb
mov
test
push
or
cmp
push
cmp
push
xlat
mov
test
or
pusha
inc
pushf
lock
add
jmp
movsb
jno
sub
adc
lret
push
and
or
int3
xchg
cld
and
insl
adcb
add
cvtps2pd
sbb
js
cld
in
lock
xlat
mov
xor
das
cld
push
push
cmp
roll
fidivrl
push
add
inc
xor
add
adc
push
push
jne
mov
fisubrs
pushf
pop
push
lahf
adc
sbb
hlt
add
insb
faddl
enter
xorl
shll
mov
out
and
leave
inc
pop
add
cmp
push
pop
push
mov
subl
loopne
inc
add
ret
insl
je
mov
out
outsl
fisttps
sbbl
fdiv
rolb
frstor
dec
pop
subl
or
sarb
aaa
cmp
jle
nop
repz
pusha
sub
lahf
push
rcr
arpl
arpl
xchg
mov
add
popa
inc
insb
sub
es
test
jb
dec
sub
test
push
sub
idivb
xorb
or
cwtl
loopne
cs
js
sbb
lock
mov
push
test
pop
aaa
insl
aam
push
stc
icebp
and
inc
or
outsl
mov
pop
mov
inc
xchg
and
or
push
push
add
and
xchg
es
inc
nop
and
pop
daa
add
sub
inc
inc
in
cmp
nop
inc
or
inc
and
or
push
sbb
adc
aam
pushf
shlb
into
lock
test
ljmp
out
clc
cmp
inc
push
add
xor
xor
mov
jmp
pop
jecxz
cmp
addl
mov
daa
mov
lret
inc
or
add
mov
sbb
scas
js
sub
sub
push
mov
dec
mov
inc
jo
push
adc
shlb
nop
sub
push
add
jae
or
add
cmp
add
sub
or
adc
es
fimuls
push
adc
and
xor
push
cmpsb
sbb
aad
or
push
pop
jne
test
ret
popa
mov
pmaxub
arpl
mov
and
nop
sbbb
dec
adc
push
xor
loopne
fstps
orl
insb
mov
add
adcl
mov
mov
cmpsl
pushl
mov
adc
out
pushf
mov
xor
push
cmp
add
and
add
or
movsb
inc
ud0
push
andl
roll
mov
loop
aaa
test
stos
mov
les
cmp
inc
data16
xchg
hlt
clc
fists
fsubl
adc
loop
mov
jbe
push
sahf
pop
cmp
inc
cmp
or
je
gs
cld
ja
mov
jle
add
or
data16
xor
and
mov
add
lock
loop
mov
out
xor
mov
push
jo
pop
fildl
aaa
push
insl
test
add
xchg
inc
dec
jb
mov
mov
adc
jecxz
add
ret
pop
dec
xor
call
push
cmp
data16
insl
xor
ret
jae
arpl
add
cmpsl
and
push
mov
and
push
add
enter
test
push
inc
outsb
sbb
and
mov
push
je
add
sbb
fnsave
aas
ss
mov
les
pusha
dec
mov
push
fcoml
adc
adc
dec
inc
mov
push
xchg
xchg
push
leave
mov
push
leave
mov
cmp
fs
ljmp
pushf
pushf
cmpsb
xchg
in
add
adc
das
push
or
push
das
dec
cmp
ret
cmpb
mov
and
fadds
adc
mov
dec
sub
add
mov
cs
add
loop
rorl
inc
movl
jl
xchg
test
inc
ljmp
dec
in
call
mov
cmpsl
repnz
mov
imul
fcmovb
in
or
imul
dec
iret
shlb
jle
cld
cmp
dec
imul
andl
or
sub
push
push
ror
push
sub
add
pop
in
sub
adc
adcl
je
and
and
pop
rcrl
jg
mov
mov
adc
pop
sti
nop
pop
sbb
or
or
push
sahf
inc
adc
xlat
sub
and
clc
lods
icebp
addr16
arpl
inc
fldcw
add
in
dec
adc
out
and
push
and
pop
pop
pop
das
pop
mov
mov
jg
or
xchg
xchg
fistpll
sbb
mov
jne
dec
adc
adc
daa
out
aaa
test
in
mov
imul
cmc
daa
adc
dec
je
cs
mov
pop
lods
call
das
mov
jmp
mov
pusha
xchg
jne
xor
rorl
ds
shlb
adc
pop
mov
mov
cmp
xchg
jo
pop
clc
arpl
outsb
lock
pxor
push
xchg
mov
adc
adc
sbb
xchg
sbb
or
les
ret
cmpsb
pop
hlt
adc
cmp
jno
movsb
enter
mov
inc
cwtl
rol
dec
xchg
nop
jnp
sbb
push
push
add
aad
nop
fiadds
add
lret
mov
push
ret
sub
cld
pop
jge
push
call
xor
dec
das
cmpsl
insl
inc
ja
loopne
push
adc
xchg
sub
ret
xor
xor
insl
and
sahf
mov
pop
or
add
pop
jnp
xchg
push
pusha
and
pusha
and
lea
clc
cmpsl
roll
in
rolb
pop
repz
mov
add
std
push
mov
into
imull
pop
xor
jmp
lods
xchg
push
daa
or
jne
test
daa
add
push
in
outsb
add
inc
bound
pop
push
xor
in
je
adc
or
add
push
add
lods
mov
mov
je
clc
or
arpl
sbb
es
or
rep
push
hlt
mov
push
push
inc
and
pop
jmp
cmp
sub
inc
push
gs
push
jl
shrb
pushf
or
insb
or
and
xor
push
jae
sbb
inc
imul
testb
inc
add
push
sub
mov
pop
fstp
fnstenv
mov
mov
add
cmp
or
in
lcall
scas
push
scas
in
inc
jg
and
ret
sbbl
dec
sahf
add
push
pop
in
enter
add
mov
add
pop
ljmp
rorb
mov
inc
sbb
mov
sbb
ds
repnz
pusha
shrb
sbbb
and
shlb
jg
pusha
shlb
dec
push
pop
scas
mov
mov
addl
cmpsb
xchg
mov
ss
mov
loopne
sbb
add
inc
pop
and
jno
lock
pop
adc
shll
rorl
xchg
lret
push
xchg
dec
pop
cmpsb
xchg
popa
dec
pop
sti
popl
dec
aaa
or
add
add
lock
and
js
orl
and
jno
fadds
lcall
adc
daa
mov
pop
jo
mov
jp
xor
lahf
pop
pop
int
sub
dec
shll
mov
scas
pop
testl
mov
or
popa
push
add
aaa
cmpsl
inc
test
repz
cmc
ret
lock
jae
jns
in
inc
call
push
imul
add
or
test
inc
mov
orl
add
mov
push
or
int
push
mov
xor
xchg
and
movsb
imul
or
mov
and
push
sbb
pop
push
sbb
inc
or
sbb
in
add
mov
adc
in
daa
lahf
inc
or
sub
push
sub
cmp
into
sbb
adc
in
out
push
xchg
mov
inc
sub
push
inc
pop
das
cmp
cmp
push
dec
lahf
push
mov
sbb
cmp
and
mov
cs
loopne
std
sub
xor
add
in
inc
add
or
mov
jb
jae
pop
cmp
orb
roll
dec
daa
andl
daa
ds
sbb
cwtl
xchg
stos
scas
or
movsl
orl
scas
stos
jns
rcpps
mov
or
cmp
loope
je
cmp
push
mov
adc
dec
enter
adc
addb
and
mov
lods
jno
sbb
jo
cmp
insl
push
iret
inc
lods
xor
xchg
adc
or
dec
sbb
fiaddl
mov
jb
test
push
push
push
cmpsl
and
aam
sub
sub
pushf
dec
cmp
add
mov
pop
pop
decl
sub
xor
sub
cmpb
in
pop
mov
sub
xchg
pop
adc
xlat
cli
addr16
jle
mov
addb
adc
xor
cmc
nop
jg
dec
jae
jmp
imul
popf
mov
adc
fdivrl
push
push
mov
jnp
movsb
adcl
cltd
or
mov
repnz
ret
inc
push
adc
sub
pop
cs
or
sbb
add
test
sub
or
es
inc
jne
inc
mov
adc
mov
or
inc
ljmp
add
dec
xor
addb
outsb
pop
or
out
sub
ret
mov
jmp
dec
leave
movsb
inc
lcall
faddl
add
push
mov
dec
add
jb
or
pushf
or
mov
test
movsb
adc
push
push
push
in
orl
mov
test
xor
xor
mov
jg,pn
jge
lock
push
je
adc
pop
jmp
add
daa
adc
mov
por
out
push
adc
or
jl
dec
cmp
adc
dec
xchg
daa
sbb
mov
imul
sub
in
inc
push
jle
xchg
or
jo
dec
push
sbb
xor
push
por
add
sbb
adc
ss
movsl
aas
jns
inc
xor
lods
popa
dec
xor
or
out
js
outsb
aad
mov
or
test
es
psubw
or
cmpsl
inc
inc
jne
cmp
es
aam
add
push
cwtl
scas
add
test
dec
mov
sbb
adc
dec
add
jmp
iret
cmp
push
sbb
inc
dec
xor
mov
sub
jecxz
cmpsl
mov
sbb
xor
adc
push
popa
mov
xchg
inc
add
push
pop
xchg
and
xchg
add
inc
mov
ret
and
jo
scas
mov
push
lods
mov
test
lods
leave
mov
inc
stos
push
test
mov
sub
mov
adc
and
push
pop
jns
cmp
xchg
nop
fwait
sbb
pop
mov
out
leave
mov
lds
pushf
or
addb
das
or
lds
pop
sbb
rorl
adc
dec
jmp
add
mov
push
insb
outsb
mov
in
fstl
test
addr16
mov
or
lret
pusha
or
call
ds
or
inc
add
push
inc
imul
xchg
int
cmpb
es
add
jecxz
fnop
sti
fisttps
test
or
nop
push
call
nop
aam
add
jb
in
jbe
pop
leave
add
inc
sbb
inc
std
sub
pop
cmp
sub
inc
ret
testb
je
push
cmp
cmp
test
inc
xchg
imul
movsl
in
daa
mov
push
insb
fisttpl
mov
sub
and
lret
xchg
daa
aas
and
mov
mov
das
pop
pop
sub
jecxz
lds
jo
mov
add
pop
ret
imulb
add
pop
xor
jne
mov
js
mov
push
push
cmp
inc
adc
mov
test
xor
or
xchg
pop
mov
xchg
or
push
cwtl
lods
dec
cmp
xor
lea
xchg
jge
adc
movsb
gs
push
xlat
pop
adc
rclb
fwait
cmp
shlb
inc
push
xor
insl
xor
and
daa
adc
enter
or
mov
scas
in
sbb
sbbb
out
cmpb
data16
int
pusha
or
loop
insb
scas
lea
loopne
ljmp
gs
cmp
push
pop
pop
xchg
cmp
sbb
push
sub
inc
jne,pn
subl
or
mov
popf
mov
mov
gs
pop
push
ja
les
call
sbb
dec
xor
cmp
stos
mov
pop
outsl
sub
outsl
xor
nop
bound
lcall
or
sub
sub
nop
test
adc
mov
jbe
mov
add
mov
in
mov
or
mov
cmp
jge
and
mov
lcall
or
jle
aas
mov
mov
fcom
ds
and
xchg
or
wrmsr
pop
es
mov
add
je
mov
push
xchg
insb
nop
inc
add
jo
push
idivl
test
sub
push
notl
and
pop
add
inc
notl
scas
fimuls
sahf
xchg
popf
ja
add
add
dec
sub
xor
in
movsl
orb
out
rcrl
xor
xchg
int
imul
jo
lea
xor
inc
dec
out
imul
mov
in
add
xor
cmp
or
aam
fstl
cmp
or
push
pop
pusha
es
adc
push
adc
add
xchg
daa
sbb
pop
jnp
mov
mov
mov
test
xor
pop
shlb
addl
subb
mov
inc
or
das
les
loop
je
sbb
pusha
shll
fcmovbe
cmpsl
mov
jmp
ja
add
mov
pop
push
sub
dec
pop
or
sahf
es
or
jo
sbb
dec
push
dec
adc
adc
inc
inc
lock
sub
dec
insl
sub
ss
sbbb
out
icebp
adc
aad
add
ljmp
aad
xor
jno
cli
loope
dec
aas
inc
cs
mov
jne
inc
xor
shlb
ret
xor
notl
xchg
imul
rcrl
dec
jp
mov
mov
sub
pop
imul
mov
lock
sar
or
push
nop
shrl
push
inc
loop
xchg
cmpsl
dec
jbe
icebp
mov
wbinvd
cmpb
adc
mov
xor
outsb
fsub
jge
icebp
sbb
xor
mov
push
dec
cwtl
nop
in
hlt
lahf
pop
sbb
and
push
pcmpeqd
or
sub
movsb
in
pop
aas
pop
xor
and
push
nop
cmp
test
or
add
je
loop
call
and
mov
jl
xchg
dec
or
in
in
sti
xor
jle
push
pop
inc
jo
call
bound
mov
sbb
cmp
xor
into
or
adc
mov
leave
xchg
cmpsb
mov
or
inc
lcall
xor
mov
xor
xchg
lret
push
fs
and
pop
stc
mov
xor
add
cmpl
jle
add
notl
shrb
pop
in
or
cmpl
mov
ret
inc
mov
lret
mov
dec
lea
in
xor
jge
dec
sbb
inc
imul
mov
lret
scas
xchg
push
data16
and
add
sbb
jb
sub
lods
movsb
lock
in
sbb
rolb
jno
imul
adc
clc
cmp
or
xor
dec
movsl
in
or
call
mov
je
jne
or
int3
ss
sbb
fmul
les
ror
cmp
in
cmp
xchg
xlat
or
dec
dec
das
add
insl
mov
mov
mov
out
js
pop
mov
add
push
call
subb
pop
loope
mov
cmp
pop
add
pushf
lea
adc
jle
insb
push
mov
stc
sub
add
mov
sub
int
inc
mov
add
pop
add
add
add
mulb
xchg
mov
mov
and
out
or
test
mov
mov
mov
dec
lcall
jbe
and
ss
add
sarb
scas
adc
loopne
push
fiaddl
inc
cs
jle
repz
mov
and
jle
adc
jmp
sbb
mov
mov
clc
push
sub
mov
xchg
dec
push
test
mov
push
imul
insb
xchg
xchg
dec
or
add
pop
movsb
inc
cmp
jmp
cmpsb
or
jnp
dec
test
add
jle
sbb
inc
dec
fsubl
shll
movsb
imul
mov
lcall
sbb
aam
aam
les
sub
dec
dec
mov
test
add
or
rcrb
inc
outsl
push
add
ficoml
jns
and
loopne
ret
dec
dec
add
or
rolb
pop
fsubl
fsub
mov
je
shrb
cmp
shrb
mov
dec
loopne
adc
pop
mov
xchg
jge
or
cs
dec
xlat
int3
add
in
add
xchg
add
sub
mov
inc
iret
outsl
add
mov
rcrb
int3
aaa
adc
fnstcw
adc
daa
test
push
shlb
mov
sub
jne
mov
cs
add
or
scas
gs
xchg
gs
inc
mov
dec
jne
sub
cmp
mov
clc
cmp
add
sub
decl
jne
or
sub
mov
shr
adc
jmp
dec
jne
sbb
xchg
insl
lea
jecxz
add
push
stos
push
add
insb
ja
cld
add
pushf
fbld
or
sub
sub
push
cmpsb
add
xor
imul
clc
nop
cmpsb
jnp
lahf
mov
jg
loopne
push
lcall
pushf
adc
or
mov
and
jno
mov
cmp
pop
mov
fcoml
and
movsb
push
sbb
es
lods
rclb
ss
and
add
adc
add
xor
mov
add
pop
add
sub
aaa
sub
or
rclb
mov
xchg
rorb
in
xchg
addr16
fcmovnbe
fdivrs
xchg
push
mov
out
xchg
xchg
and
cmp
leave
mov
aam
lods
adc
and
testb
in
pop
push
lock
imul
imul
mov
xchg
cmpsb
cmp
cmp
aam
in
bound
add
xchg
mov
adc
add
add
sub
adc
loopne
test
sbb
inc
nop
or
jo
out
lock
sahf
rorb
adc
sbb
add
add
mov
sbb
or
jbe
push
loopne
mov
mov
fwait
test
or
test
and
leave
ret
jmp
sbb
sbb
fs
fxtract
repz
faddl
fcom
movsb
loope
xor
push
add
dec
jge
add
daa
aam
push
inc
das
jmp
cmpsb
ds
push
imul
lea
sub
enter
cmovns
xchg
mov
xchg
inc
cmpsl
test
xor
cld
xor
add
and
scas
xor
call
jmp
fisubl
fwait
sti
out
cwtl
and
inc
sbb
pusha
test
sbb
dec
add
and
pop
and
cmp
repz
insb
and
mov
push
nopl
inc
in
or
push
or
movsl
pusha
jnp
adc
mov
adc
sub
outsl
or
cmp
lcall
in
adc
and
add
shr
xchg
xchg
add
and
pop
das
sub
mov
es
cmp
jl
or
cli
adc
dec
clc
movsb
rclb
les
ret
xchg
push
pop
mov
frstor
jmp
or
pop
dec
pop
sub
sbb
add
adc
div
orl
push
mov
sbb
push
sbb
xchg
cltd
aaa
add
mov
loop
xor
push
movsb
inc
out
fwait
js
cmp
inc
fdivrs
push
pop
or
outsl
sub
es
xchg
ljmp
ja
and
jg
test
add
and
push
xor
push
inc
jns
orb
and
fisttps
jae
and
sbb
daa
mov
shll
or
sbb
xchg
inc
mov
cwtl
js
sub
sbb
jnp
add
pop
sub
add
push
mov
push
dec
or
or
rolb
pop
and
sbb
das
lods
shlb
inc
xor
cmpsl
mov
and
pop
mov
xor
popf
shlb
in
arpl
dec
call
subb
xchg
push
adc
pusha
jmp
push
arpl
ja
adc
add
push
push
xor
addb
and
or
cmp
dec
test
mov
sbb
add
and
add
lret
adc
test
lret
sub
xchg
cwtl
clc
cmp
pop
cltd
cwtl
fs
adc
pusha
repnz
fnsave
inc
xor
dec
arpl
jae
xor
xor
mov
add
cmp
pop
push
loopne
mov
adc
ret
out
incl
in
hlt
pop
pop
fwait
inc
push
insb
add
hlt
add
rclb
sbb
ficomps
addr16
and
xor
sbb
fmull
add
inc
sbb
mov
add
xchg
add
mov
push
bound
mov
cwtl
out
pop
jbe
mov
and
cmp
push
fiaddl
add
cmpl
ret
test
jb
mov
jbe
push
or
pusha
adc
jecxz
sbb
cmp
and
lcall
pop
pop
scas
xchg
add
dec
inc
sbb
gs
push
push
xor
lret
mov
inc
clc
clc
fs
lea
lret
xchg
test
out
daa
and
arpl
mov
push
inc
dec
mov
and
mov
mov
insl
popf
jo
test
or
divl
test
addb
clc
rcl
mov
std
mov
sbb
shrb
push
push
jge
sbb
push
fstpt
movsb
dec
inc
inc
push
xor
dec
call
add
pusha
aaa
inc
ss
jge
cmp
sti
fs
fnstcw
jae
fmuls
push
jo
jbe
ficompl
cmp
mov
xor
push
jle
sub
scas
int
hlt
jle
pop
add
mov
into
mov
jmp
adc
mov
lret
pushf
and
nop
inc
xor
loopne
push
imul
in
scas
cmp
sub
es
cmp
setl
push
xor
pop
push
popf
push
cmp
movl
pop
das
sbb
sub
and
les
subl
mov
or
pop
out
and
adc
pop
test
cmp
fistl
adc
fmuls
cmp
or
dec
out
fldl
pop
xchg
inc
lock
pop
rcl
scas
sbb
lea
das
daa
iret
pop
movl
iret
pop
out
lock
push
inc
cld
mov
jle
fistl
inc
or
push
or
adc
in
andl
cld
sbb
lret
jne
push
jp
imul
in
push
rclb
and
call
adc
int3
inc
sub
in
mov
sbb
js
mov
dec
lock
sub
bound
insl
inc
sbb
shrb
or
lock
adc
push
mov
pop
push
in
pop
or
jb
lahf
icebp
and
lods
movsb
nop
pop
adc
or
dec
push
lahf
push
cli
repnz
mov
popa
jnp
xchg
jl
mov
aas
hlt
sbb
insb
push
mov
push
sub
nop
data16
jo
mov
adc
push
inc
or
rol
and
mov
into
or
mov
push
cmpb
call
mov
es
pop
orb
push
push
cmpb
xor
inc
lds
mov
add
pop
nop
sbb
or
mov
and
xor
addb
enter
push
jo
adc
add
xor
pushf
test
cmp
ja
je
pop
sbb
hlt
xchg
je
loopne
push
add
mov
inc
je
inc
and
push
test
inc
shrb
mov
mov
or
cwtl
je
in
imul
adc
mov
add
and
ja
fstpl
push
fnstenv
jl
mov
sub
xchg
iret
pop
sbb
mov
repnz
xchg
das
add
sbb
iret
cmp
mov
xchg
jl
je
inc
cmp
rclb
mov
cmpl
inc
stos
adc
clc
movsl
and
arpl
push
out
enter
add
pushf
das
ljmp
dec
dec
dec
loope
inc
sub
rcrb
enter
mov
inc
aaa
dec
dec
in
sarb
addr16
jns
jns
out
pop
fsubl
in
cs
stos
dec
adc
xchg
xor
inc
and
out
xor
icebp
add
js
mov
ss
int3
out
jp
adc
cwtl
push
mov
sbb
inc
fs
adc
sbb
ret
dec
jnp
lcall
movsl
push
ret
xor
call
mov
adc
arpl
add
inc
mov
and
jnp
lock
shrl
ljmp
test
xchg
movsb
dec
mov
dec
adc
fistpll
popf
insb
xchg
inc
ret
push
add
mov
clc
jmp
xor
ficoml
inc
pop
enter
pop
les
and
inc
add
add
ljmp
adc
dec
or
inc
sbb
push
add
inc
ljmp
adcb
mov
sbb
lods
fmull
jnp
pusha
and
insb
out
adc
inc
jae
nop
sbb
or
aaa
push
sar
dec
xchg
stos
lcall
inc
mov
inc
cmpsl
push
dec
jne
mov
mov
or
sbb
adc
or
fwait
in
orb
jmp
adc
sub
push
adc
dec
mov
dec
mov
add
add
mov
call
ljmp
jg
push
cmp
add
ret
xchg
xchg
and
or
subl
mov
adc
cwtl
scas
movb
xchg
adc
and
bound
insl
sarl
inc
pop
sbb
dec
insl
mov
dec
loopne
mov
aaa
jbe
add
les
cmpsl
orl
push
and
leave
xor
sbb
mov
cmpl
stc
add
xor
out
ljmp
outsb
sub
pop
lret
jge
popf
insb
mov
lcall
jle
filds
mov
loope,pn
sbb
nop
cmpsb
sub
mov
scas
lahf
jno
cwtl
popa
call
and
cmp
xlat
or
insl
dec
lret
cld
daa
push
shll
add
sbb
pop
out
ljmp
in
jae
mov
add
jne
dec
dec
push
sbb
or
movsb
push
adc
mov
sbb
sub
sbbb
add
lock
adc
addr16
jg
adc
sbb
pop
or
adc
js,pt
push
jne
push
cmc
push
lret
mov
and
inc
adc
add
push
nop
outsl
lods
adc
push
push
and
je
clc
in
fs
xor
movb
dec
push
es
dec
fiaddl
inc
sbb
cmp
jl
jmp
cmpsb
xor
adc
out
jae
pop
push
sahf
shl
jbe
push
adc
aas
out
push
adc
cmpsl
inc
jne
inc
and
nop
add
push
and
or
jne
das
fistps
lcall
and
inc
jns
cmp
inc
in
and
fadds
pop
aaa
pop
imul
mov
sbb
adc
xabort
sbb
sbb
jg
xchg
jl
jle
push
push
int3
data16
jmp
mov
adc
pop
sbb
sbb
or
sbb
xchg
mov
inc
lret
or
popf
or
pop
sub
jo
cmp
or
cmpb
mov
xchg
cmp
cmp
js
stos
loopne
and
sbb
fs
adc
adc
ret
add
pop
sub
fwait
test
imul
stos
sbb
inc
xchg
shrl
dec
mov
add
shlb
lahf
mov
push
outsb
ja
xchg
mov
jne
in
sbb
sub
mov
sub
mov
mov
ljmp
sbb
lods
sub
xor
fildl
jl
mov
movsb
or
or
dec
sbb
sbb
add
mov
adc
out
add
add
incl
inc
add
ljmp
dec
add
xchg
test
or
inc
sbb
cmpsb
mov
test
lock
out
sub
lcall
inc
loopne
and
pushf
pop
aaa
or
arpl
test
loope
scas
clc
imul
inc
adcb
clc
aam
pusha
mov
mov
mov
sbbb
inc
mov
and
and
pushf
imul
ret
or
je
adc
hlt
int
scas
ret
adc
add
lods
xor
ficoml
and
xlat
sbb
mov
adc
sub
dec
push
lret
mov
mov
mov
rolb
cmc
mov
test
and
lahf
and
mov
adc
push
test
cli
mov
call
push
xor
rcrb
int
add
sub
sbb
rorb
mov
loopne
push
lea
popa
sub
adc
push
dec
cmp
xor
cmpsb
sub
lret
inc
push
inc
inc
or
addr16
pop
subl
xlat
fcom
sbb
add
mov
push
push
popa
pop
sbb
mov
sub
fldl
addb
dec
and
push
inc
jnp
hlt
test
pop
testl
dec
inc
cmpsb
pushf
sbb
push
xlat
jo
xchg
movsb
pop
sub
mov
sub
adc
xchg
and
lods
mov
or
mov
adc
inc
add
fidivl
out
cli
add
add
sbb
xchg
mov
nop
inc
ret
mov
cmp
notl
and
inc
xchg
aaa
dec
pushf
mov
lea
jne
aad
mov
andb
pop
ficoms
out
rclb
push
push
mov
inc
inc
dec
xchg
inc
movl
loopne
inc
xor
or
orb
or
or
add
and
mov
lcall
add
jl
es
gs
add
ret
inc
dec
inc
add
andl
test
out
ret
xor
ja
or
movl
xor
sbb
add
mov
pop
lock
or
pop
adc
aad
mov
mov
jo
add
or
jmp
mov
movsb
in
cmp
mov
daa
ja
dec
xchg
ds
les
add
mov
mov
or
or
sbb
add
jge
or
ss
inc
xchg
jne
and
or
sbb
dec
and
pop
push
and
sbb
mov
pop
aas
push
shlb
sbb
xor
add
sbb
adc
xor
jg
test
cmp
and
add
and
xchg
adc
les
sub
enter
sub
cwtl
dec
xchg
add
push
dec
sub
cmp
jge
das
sub
jmp
or
stos
jl
add
jl
or
jecxz
sbb
push
xchg
jg
idivb
or
mov
jl
scas
sbb
and
scas
ret
sbb
or
xor
sub
call
jp
fwait
pop
push
fstpt
inc
push
sub
mov
add
push
inc
pop
sub
test
es
lods
or
inc
sbb
std
nop
mov
add
rcrl
les
fidivrs
nop
add
das
and
sub
xor
pusha
sub
pop
mov
fldpi
jb
add
add
jp
sbbb
sub
and
mov
lret
sbb
mov
lock
aaa
inc
aam
xor
test
and
stc
mov
jo
pop
jb
or
test
les
mov
pop
filds
inc
test
or
mov
push
cmp
sub
add
cmpl
lahf
mov
lret
adc
nop
jmp
in
shll
adc
mov
lock
fs
lock
pop
push
mov
xor
jle
mov
gs
lcall
and
fs
fldcw
scas
rolb
dec
sub
inc
sbb
mov
pop
pop
mov
pushf
mov
call
ret
fs
ss
pop
test
les
inc
inc
add
xchg
sbb
outsb
mov
mov
bound
jo
fisubrs
mov
xor
repz
pop
inc
mulb
jmp
pop
xor
jl
pop
pop
adc
sub
mov
inc
inc
popf
mov
xchg
test
xchg
or
or
daa
lock
es
lea
pop
loope
adc
test
movsl
clc
pop
add
sbb
inc
sbb
lock
stos
and
lock
cmp
jle
jne
test
push
inc
sbb
and
ficompl
add
subl
jl
loopne
lret
cld
push
xchg
clc
pop
push
insb
in
in
cmp
and
test
cmp
push
lea
insl
in
sbb
insl
mov
insb
mov
pop
add
adc
std
notb
scas
add
adc
and
test
add
in
cmpsb
mov
or
and
push
mov
cld
and
push
mov
jbe
dec
ss
mov
jae
lods
jmp
pop
jle
rorl
push
inc
jge
data16
cmpsb
adc
lods
fmull
jb
leave
out
and
mov
sub
or
cmp
repz
pop
out
mov
fisttpl
ret
mov
sti
shl
enter
arpl
enter
roll
js
test
push
loopne
lods
popf
adc
add
xor
test
push
lds
addl
sbb
add
xchg
or
incl
cmpsb
movsl
scas
pop
adc
and
add
inc
add
push
inc
rorb
inc
dec
movsl
add
or
adc
add
or
arpl
xlat
xor
pop
sbb
adc
dec
and
mov
pop
iret
test
insb
mov
dec
or
xor
jo
adc
movsl
out
stos
adc
in
or
jno
xchg
and
adc
addr16
int3
or
jae
aas
inc
or
aam
push
mov
adc
push
inc
or
lcall
fcoml
mov
inc
subl
push
inc
push
dec
push
sbb
mov
mov
dec
test
pop
inc
or
clc
or
fcoms
inc
jns
sub
xor
sub
add
sahf
lahf
jo
enter
lods
sub
adc
mov
das
jmp
push
aaa
add
jo
jo
and
xchg
or
mov
in
add
cmp
imul
imul
jo
cmp
pop
mov
push
xacquire
cs
lds
inc
dec
pop
sub
das
and
sbbb
inc
lahf
jbe
and
cs
cs
mov
lahf
inc
pop
cmp
cmp
jne
sbb
sbb
lret
cmp
cwtl
mov
sti
fcomps
cld
outsl
lret
out
ljmp
bound
test
adc
mov
cmp
mov
cmp
das
movsb
inc
adc
add
fnstcw
shlb
loopne
lock
adc
push
cwtl
scas
lret
test
sbb
rorl
shlb
rorb
mov
cmp
sub
inc
push
push
or
cmpsb
lods
ret
and
pusha
sub
xor
pop
mov
xor
pop
leave
lds
or
xchg
pop
jle
push
jmp
pop
sbb
js
clc
xchg
push
lods
pop
mov
mov
fwait
inc
dec
sbb
push
dec
pop
insb
rolb
xchg
mov
cwtl
sub
jne
inc
push
or
psubb
pusha
hlt
add
ljmp
jmp
add
and
add
lods
ljmp
mov
push
ja
dec
push
push
les
jbe
push
outsl
sbb
repnz
rorb
leave
addr16
mov
xchg
nop
sbb
fs
call
xchg
daa
cmp
push
mov
pushf
aaa
movb
inc
fbld
and
xchg
roll
nop
and
inc
pushf
add
push
or
mov
mov
xor
and
pop
lock
xor
or
cmp
lret
inc
mov
mov
sbb
cmp
xor
cmp
cmp
push
clc
mov
jp
fstpl
jp
adc
pavgb
leave
std
and
sub
xor
sbbl
pop
jmp
ficoml
rcr
divl
in
pop
fcoms
sbb
jecxz
test
movl
adc
int
or
test
inc
xchg
je
xchg
cmp
pusha
sub
push
fmuls
jle
outsb
out
xchg
int3
icebp
cmp
inc
js
sbb
adc
add
mov
stos
dec
sbb
add
jmp
mov
jp
inc
sbb
call
or
popf
adc
push
xchg
rolb
aam
rclb
nop
xchg
addr16
roll
add
out
cmpsl
lea
adc
les
xchg
movsb
add
mov
or
les
cmpsb
mov
aam
out
adc
sub
sub
dec
xor
les
pop
add
cli
add
in
add
push
sbb
adc
cmp
xor
adc
sub
jl
adc
insl
movsl
or
xor
and
adc
out
xor
pop
adc
mov
dec
insb
add
inc
jne
push
out
mov
mov
mov
pushf
cmp
outsb
push
or
add
dec
inc
test
xor
jnp
lods
mov
pop
adc
sub
cmp
adc
jp
dec
clc
and
inc
inc
sarb
add
push
jno,pt
adc
adc
push
ja
ret
sbb
pop
fimull
dec
add
add
aaa
iret
pusha
cmp
fimuls
pop
xchg
pop
out
add
lds
out
xor
add
and
sbb
and
xor
and
xchg
pop
sub
add
fists
jno
xchg
lock
push
lock
push
push
inc
sub
fwait
cmp
mov
or
daa
stos
insb
sub
in
les
dec
and
mov
scas
jno
jp
push
jo
adc
hlt
aaa
in
push
int
ret
in
dec
mov
mov
xor
mull
adc
dec
or
xchg
mov
and
adc
pushl
xlat
inc
adc
mov
or
inc
ret
iret
or
mov
mov
dec
popl
sbb
lods
or
es
sbb
fsts
out
stos
arpl
sbb
pop
imul
push
and
cmp
fwait
je
add
push
divl
mov
adc
jo
movsb
loopne
dec
push
or
xor
mov
dec
inc
aam
xchg
xchg
sub
push
mov
aaa
xlat
in
and
jbe
jne
repz
inc
jbe
inc
jg,pt
sub
pusha
sti
pop
sub
cmp
jne
pop
jp
cmp
test
adc
pop
bound
pop
and
lods
enter
rorb
pop
mov
idivl
orl
lock
test
out
and
xor
punpcklbw
xchg
leave
and
je
loopne
rclb
dec
arpl
mov
out
icebp
xor
popa
push
ljmp
push
lds
gs
and
int3
pop
push
or
cmp
pop
cli
lods
insb
mov
punpckldq
ret
xchg
imul
mov
pop
push
adc
ret
xor
add
pop
sub
mov
pop
push
arpl
test
and
dec
xchg
jnp
add
inc
lock
minps
add
dec
test
push
pop
dec
ret
cmp
adc
pushf
lock
mov
or
shlb
add
rolb
pop
sbb
fiadds
xchg
add
cmp
fsubs
add
cmpsl
test
inc
shl
inc
inc
inc
dec
inc
fcoms
dec
int
push
shlb
sub
push
adc
mulb
pop
xchg
mov
push
scas
cltd
cmp
pop
inc
adc
pop
fisttpl
mov
test
push
adc
sbb
test
mov
arpl
fdiv
loope
scas
pop
cld
je
xchg
faddp
add
dec
insl
or
adc
cmp
sub
or
in
pop
mov
inc
or
popa
js
mov
lea
and
ss
imul
cwtl
or
pop
test
lea
adc
loope
pop
fldt
push
cs
push
sbb
bound
rcll
push
pusha
adcl
or
jl
jge
rorb
or
pop
sub
jle
jl
xor
lock
daa
ss
ss
test
or
es
push
lahf
jb
push
sub
adc
dec
and
sub
add
cli
cmpl
and
inc
and
dec
adc
int3
jl
lret
adc
and
adc
mov
lea
mov
sbb
xchg
adc
aad
mov
lahf
popf
shlb
pop
rcrl
pop
lods
aad
mov
and
adc
ret
xor
push
mov
jmp
cmp
icebp
inc
sbb
add
inc
jo
mov
ds
cmp
cmpsb
pop
insb
adc
call
adcb
adc
jbe
lret
jae
out
pop
les
or
cltd
jae
inc
lret
js
imul
sub
flds
add
mov
insb
and
jg
sub
xor
sbb
mov
jecxz
nop
adc
sub
jle
mov
andb
push
outsl
frstor
jb
fisttpl
xchg
add
inc
into
push
mov
aaa
add
call
loope
subb
push
cmp
jle
pusha
in
cmp
movsb
das
dec
test
xchg
pop
mov
sub
jb
push
mov
mov
sub
add
sbb
push
jmp
or
fisubl
ljmp
popf
mov
dec
pushf
sub
or
and
pusha
or
mov
adc
and
xor
cmp
pusha
or
add
mov
inc
mov
popf
adc
nop
andl
push
sub
adc
pop
in
and
cltd
mov
lcall
sbb
clc
fadds
sub
xchg
pop
adc
push
adc
mov
lods
cmp
call
in
jae
daa
mov
xor
push
xor
pusha
push
add
mov
sub
mov
hlt
ds
and
xchg
jg
call
test
nop
jp
xchg
inc
aad
addl
rcr
xor
mov
and
add
cmp
pop
cwtl
jl
imulb
pop
pop
stc
fmuls
fidivrs
cmc
outsl
cmp
sbbl
ss
ret
and
add
inc
inc
add
sub
inc
add
inc
cmp
or
push
pop
dec
sub
and
push
xor
insl
or
sub
dec
mov
in
shll
add
or
jno
push
xchg
sub
push
inc
roll
push
lods
and
adc
mov
and
inc
loop
push
imul
into
mov
into
lods
push
add
addl
aam
xchg
lret
in
adc
jmp
shll
outsl
sub
insl
rorb
xchg
mov
jne
faddl
sbb
xchg
mov
popf
insb
insb
hlt
cmpb
fdivl
or
lret
shrb
psrlq
sbb
sbb
pop
adc
or
inc
outsl
cmp
inc
sahf
test
inc
push
cld
lcall
dec
push
pop
xor
pop
mov
jmp
push
push
and
and
jg
add
pop
bound
sub
xor
add
and
subl
sarl
sub
adc
jne
sbbl
lods
loopew
add
xor
mov
sbb
and
dec
add
mov
jmp
mov
rcrb
xchg
cmpsl
mov
cmpsb
aas
sbb
sti
push
mov
lock
lea
add
xacquire
fld
popl
mov
aam
jge
add
aaa
add
jo,pt
mov
adc
mov
inc
arpl
adc
pusha
cmp
xchg
inc
in
psrad
call
mov
dec
test
xor
adc
fdiv
test
push
loopne
cmp
cmp
roll
xor
ljmp
xchg
add
cmp
adc
mov
jge
and
adc
sub
xor
je
sbbb
in
inc
test
push
mov
loope
popa
sub
dec
sbb
or
sub
pop
ret
xchg
and
add
lret
cwtl
and
adc
inc
addr16
sub
loopne
lea
and
fwait
movsl
adc
gs
or
lock
cmp
inc
mov
sti
inc
adc
shlb
idiv
in
mov
xchg
adc
push
and
push
aaa
clc
push
and
mov
pop
out
add
cmp
mov
pop
pop
push
jp
or
push
sbbl
ret
mov
adc
rol
and
in
fcom
cmpsb
pop
or
and
push
outsl
sub
or
mov
push
jmp
adc
shlb
mov
mov
add
or
xchg
jmp
add
push
in
loopne
stc
xchg
xlat
gs
cmpsb
adc
into
movsb
es
mov
inc
xchg
into
out
cmp
ret
das
push
mov
data16
test
call
jne
push
jnp
sub
push
movsb
xor
inc
pop
mov
mov
sub
push
lods
dec
fcoml
in
or
push
inc
mov
push
pop
dec
cmp
shlb
mov
or
xchg
dec
in
xchg
out
lea
mov
cs
lods
addl
sub
add
push
xchg
es
dec
daa
scas
test
fstpl
data16
push
mov
mov
inc
jg
ja
imul
dec
mov
push
movsb
fidivl
and
cmpsl
and
and
cwtl
push
adc
pop
inc
pop
and
cs
inc
mov
dec
push
addr16
outsb
fiaddl
bound
add
pop
fwait
aaa
and
adc
push
mov
ret
or
lock
je
sarl
add
adc
inc
leave
insb
ds
sbb
mov
push
mov
cmp
pusha
mov
jmp
dec
push
ficoml
inc
ret
jnp
test
sub
enter
push
adc
add
loopne
fidivl
or
or
cmp
inc
push
add
pop
das
cmp
pop
mov
xor
and
mov
test
sbb
cltd
mov
or
pop
mov
mov
adc
andb
xor
in
cmp
mov
hlt
pop
xor
out
mov
pop
jno
mov
and
mov
mov
stos
mov
fs
fwait
pmaxub
daa
mov
loopne
sahf
and
movsl
add
clc
loopne
mov
lock
add
fcomip
ret
xchg
dec
sbbb
xchg
inc
pop
pop
sub
scas
dec
mov
or
cmpsl
mov
int3
add
lds
add
int3
dec
aam
repz
jl
dec
clc
mov
push
out
faddl
sbbl
push
fildl
mov
inc
or
mov
jge
dec
adcb
mov
sbb
stos
fsubl
adc
inc
jmp
pusha
cmpsl
inc
sub
insb
outsl
inc
adc
dec
sbb
stos
lret
mov
inc
push
jmp
inc
pop
pop
scas
jg
xor
sbb
sahf
adc
bound
sub
adcl
push
inc
cmpsl
dec
test
cli
ljmp
adc
inc
inc
or
shl
aas
adc
sbb
daa
dec
je
jmp
cmp
addr16
sub
int
push
dec
and
xor
adc
or
movsb
cs
mov
dec
xchg
add
outsb
popa
stc
or
movl
into
daa
jo
dec
enter
imul
jnp
dec
sbb
ret
bound
ret
les
push
dec
repz
aam
jp
push
iret
cltd
jnp
or
adc
xchg
das
jno
lcall
shrl
dec
adc
aam
lcall
test
sbb
inc
mov
push
mov
cli
pop
repz
push
xchg
ja
movsl
shl
jns
out
loopne
imul
push
iret
push
or
adc
inc
sub
std
ljmp
inc
fcoms
sbb
adc
add
popa
dec
and
jae
dec
or
push
xor
leave
dec
jns
subb
xchg
imul
adc
jmp
ret
xchg
lea
imul
gs
jmp
and
pop
stos
cmp
enter
jnp
inc
add
aas
movsb
push
jp
pop
adc
mov
jae
hlt
adc
sub
in
rcll
xchg
addr16
add
cmc
push
cwtl
mov
sub
xchg
addps
jno
push
adc
mov
xchg
sub
out
lret
and
daa
cltd
cmpsl
test
xlat
add
xchg
shl
mov
data16
pop
bound
pop
add
sbb
xchg
or
pusha
shlb
dec
or
push
idivl
dec
mov
push
inc
push
push
mov
xor
rorb
loop
jno
mov
nop
pushf
add
mov
cmpsb
push
ret
push
mov
ja
and
xlat
adc
sbbb
jno
xchg
into
jmp
or
and
adc
jecxz
sub
push
add
push
loopne
sub
fs
cmp
cld
orb
mov
adc
sub
push
xor
in
sbb
popf
and
push
push
lea
cwtl
in
add
clc
mov
jnp
insb
decl
movzbl
shlb
rolb
push
fucomi
add
sbb
lcall
xor
lds
bound
sub
data16
lds
mov
rorb
push
sub
mov
push
ljmp
dec
cmp
mov
push
cmp
test
out
pop
adc
subb
inc
push
bound
push
aad
mov
mov
mov
hlt
xchg
push
dec
add
ljmp
and
data16
jo
jno
push
loopne
push
jg
or
pop
push
push
jne
sbb
ret
nop
movb
xor
sbbb
aam
iret
nop
mov
cmpsb
inc
xor
fistl
dec
mov
arpl
jns
push
push
movsb
mov
push
inc
cmpsl
add
jno
nop
fcom
dec
or
pop
dec
push
loope
xorb
mov
sbb
adc
rorb
stc
insl
push
cmpl
ja
push
outsl
jecxz
mov
adc
jmp
xchg
mov
dec
notb
jl
cmpb
std
pusha
jo
mov
movsl
add
xor
in
jb
sbb
out
mov
ficomps
inc
and
lcall
jbe
dec
mov
push
xchg
popa
lods
je
cs
and
cmp
push
sarl
stos
into
push
in
test
add
ret
or
ja
xchg
xchg
mov
dec
in
stc
cmp
cmpl
jbe
xchg
sbb
out
or
inc
xchg
arpl
inc
add
imul
lock
add
add
pop
push
xor
outsb
xor
test
arpl
jp
adc
call
mov
xor
lods
lcall
cmc
les
add
fstps
adc
call
inc
sub
mov
push
mov
dec
rcll
roll
xchg
sbbb
shlb
sbb
sbb
jmp
add
sbb
xor
aam
add
test
jo
pop
jbe
dec
call
pushf
mov
mov
jl
daa
mov
inc
aaa
pop
and
add
leave
jmp
in
pushf
movsb
lret
push
sub
add
popa
mov
push
push
fistpl
cltd
and
push
sbb
mov
push
dec
sbb
pusha
mov
jo
xor
or
clc
adc
and
insl
sbb
arpl
pop
push
cmp
in
movsb
mov
jns
add
ljmp
pop
mov
jl
fwait
ss
scas
mov
jae
push
sbb
mov
fnstenv
scas
mov
and
in
repnz
push
in
ja
jmp
pop
ret
sbb
sarl
add
aam
xchg
xchg
xchg
mov
daa
xor
js
and
iret
dec
or
out
mov
shr
inc
and
adc
mov
push
push
sahf
icebp
jl
movsl
xchg
sbb
mov
in
mov
push
sbb
lahf
pop
add
push
push
pusha
movb
sbb
pop
and
lcall
cwtl
xchg
sub
lock
adc
xlat
sbb
sub
mov
mov
inc
jp
ret
and
dec
mov
pop
jo
inc
cli
lahf
ss
mov
loop
adc
and
mov
ds
push
and
jb
fsubr
sahf
mov
cltd
adc
xchg
movsb
cmpsb
dec
cs
js
fmuls
inc
shlb
jae
in
sbb
aas
xchg
loope
push
add
add
clc
add
rolb
pushl
sarb
sbb
jne
dec
mov
adc
adc
dec
pop
fistl
addl
sbbl
pop
and
mov
pop
sbb
sbb
out
inc
xor
dec
mov
pushl
rcrb
xor
adc
dec
jecxz
nop
addb
push
idiv
in
nop
or
lock
add
fs
inc
cmp
sbb
lret
cmp
xchg
je
int
jb
sti
mov
cmp
int3
and
add
pop
cmp
ljmp
and
jge
imul
ret
fldt
lock
pop
push
adc
xchg
movsl
stos
sub
sbb
xor
jns
pop
flds
push
popf
xchg
mov
dec
jp
cmp
xorb
js
in
dec
repnz
sti
arpl
fadds
pusha
and
xor
adc
jnp
or
add
inc
in
sbb
cmp
lret
sbb
lock
adc
push
push
lcall
icebp
sbb
pusha
daa
mov
outsl
jo
imul
imul
in
repz
xor
push
test
push
imul
adc
and
outsb
jp
ret
jb
test
mov
sub
pop
ret
imul
or
pmaxsw
jne
xchg
sub
arpl
imul
add
bound
js
imul
dec
je
es
pop
xor
jb
bound
add
loop
scas
mov
push
es
mov
or
jo
pop
inc
jp
inc
ljmp
inc
push
mov
mov
daa
push
inc
loope
mov
into
sub
adc
outsl
das
das
xchg
lock
sbb
and
cmp
cmp
movsb
xor
loop
iret
sbb
bound
jns
outsb
fsubrs
andl
ja
rolb
push
das
cmp
xor
mov
js
or
fstl
add
adc
and
hlt
sub
push
and
arpl
mov
xlat
jge
xchg
rclb
and
push
push
out
leave
movsb
mov
das
popa
std
loopne
push
hlt
sub
setae
and
pop
addb
bound
inc
dec
inc
aaa
out
mov
or
pop
clc
test
outsl
jge
add
cmpb
es
or
sti
and
dec
push
dec
pusha
mov
mov
cltd
mov
dec
mov
add
call
movsl
jne
aam
sub
push
adc
pusha
mov
imul
sti
pop
sub
mov
jne
mov
cmp
and
and
ljmp
dec
adc
insl
fisttps
and
xor
inc
xor
push
push
mov
mov
add
xlat
xchg
xchg
bswap
in
and
lahf
or
lea
adc
mov
and
fcomps
movsl
adc
push
cmp
jnp
loopne
lcall
pop
shlb
xchg
or
enter
pop
or
clc
jg
xor
or
stos
fs
adc
inc
add
sub
sbb
or
push
or
sub
inc
mov
pop
adc
jbe
inc
fcoml
ja
sahf
push
testl
or
add
out
out
cltd
sub
popa
outsl
jge
cmp
jns
fistpll
add
xor
add
xor
or
and
adc
push
ja
jge
xor
pusha
clc
pop
testl
sbb
ss
enter
push
push
pop
and
movsb
xor
and
add
lea
mov
push
ret
into
xchg
clc
cli
clc
add
add
mov
sbb
iret
push
add
pop
or
or
or
or
or
repz
or
push
movups
adc
repz
adc
push
pop
repz
repz
sbb
sbb
lcall
and
and
in
sti
fcoms
repz
out
out
or
iret
repz
sbb
cmp
pop
outsl
cmp
repz
xchg
mov
iret
repz
testl
sahf
out
cmp
sahf
out
sahf
jl
cwtl
cmpsb
mov
lea
rcr
sti
daa
lret
pop
inc
jmp
sub
dec
in
or
pop
push
cltd
mov
and
adc
xchg
push
cs
and
or
dec
in
lret
or
push
mov
push
and
cs
sub
dec
sub
in
lret
cmp
movsb
jb
cmp
inc
push
cs
dec
sbb
xchg
push
dec
sbb
lret
sbb
jmp
pop
sbb
xchg
push
ja
push
popa
imul
push
bound
arpl
and
xor
and
addr16
push
sbb
mov
sbb
push
sahf
stos
inc
jns
test
rclb
fdivs
xchg
adc
fisubrs
xchg
out
fcomp
cmovns
std
add
int
adc
outsb
js
aaa
scas
cwtl
inc
scas
popa
or
pop
push
int3
incb
sbb
push
adc
dec
xchg
cmovne
inc
cmp
sub
or
sbb
fldl
emms
mov
bound
test
loopne
faddl
adcb
xor
popa
jo
add
out
testl
jb
xchg
sbbb
xlat
aaa
push
test
test
aam
mov
dec
or
icebp
xchg
aas
inc
xchg
mov
sub
mov
in
jae
sbb
jne
daa
movsb
pop
xor
pop
push
xor
adc
adc
nop
pusha
repnz
mov
test
fildll
pushf
fs
mov
lds
mov
pop
xor
je
inc
aaa
mov
subb
and
mov
push
fs
or
dec
or
stos
mov
sub
xchg
ss
fs
test
sbb
adc
and
push
outsb
lods
aaa
mov
outsb
jae
pop
pop
dec
insl
addr16
pop
out
adc
jo
push
xchg
fsubl
imul
inc
rorb
adc
xor
xor
sbb
and
add
push
aam
jl
push
sub
or
push
jb
jmp
adc
dec
gs
jmp
and
imul
rdmsr
xor
xor
pop
push
pusha
out
add
inc
pop
sahf
fs
je
cmp
inc
mov
xchg
add
or
push
mov
inc
sub
sbb
xor
and
fwait
adc
mov
push
push
nop
popf
sub
fs
dec
jle
or
pop
stos
sbb
xor
adc
mov
cmp
in
addl
lea
pmulhw
nop
iret
add
mov
ja
push
inc
lahf
das
hlt
sbbb
push
sbb
mov
daa
insl
imul
sub
xchg
inc
dec
sub
jecxz
sub
lea
xor
jge
xchg
cmp
sub
gs
movb
add
js
sbb
cs
jne
inc
inc
fs
dec
and
inc
pusha
nop
xchg
xor
add
sbb
add
dec
sbb
out
call
push
and
dec
out
call
pop
bound
dec
pop
mov
xor
add
or
nop
cmpsl
movsb
or
int3
lcall
push
cwtl
popa
popa
ret
inc
add
or
loope
sub
jno
in
xchg
insl
or
inc
aad
shl
icebp
inc
or
jo
xchg
sbb
sbbb
mov
and
sub
jge
sub
shlb
movsb
and
or
sti
xor
out
cmp
je
mov
addl
fldcw
cmp
xchg
mov
push
stos
test
push
stc
xchg
xor
rorl
out
inc
sub
adc
js
cmp
inc
sbb
subl
mov
subb
rcll
pop
or
mov
sub
sub
pop
inc
mov
scas
or
cmpb
mov
repz
mov
xor
and
icebp
push
add
adc
pop
inc
inc
xchg
push
and
idivb
xor
and
in
rorb
jmp
and
add
inc
cmp
hlt
mul
sbb
pop
and
fwait
cmc
daa
xor
leave
dec
xlat
push
ret
cmp
inc
repnz
or
push
cmp
sbb
dec
in
dec
addl
push
cmp
add
add
int3
lock
decb
inc
stos
stc
xlat
mov
mov
xor
mov
sub
mov
subl
popa
sbb
int
add
cmc
push
xchg
inc
mov
xchg
lahf
ror
xor
rcll
loope
jmp
inc
sahf
cs
das
push
data16
popa
mov
adc
adc
mov
ret
inc
insb
aaa
fadds
jbe
fwait
imul
cmp
and
dec
xor
cmp
pusha
imul
addr16
in
les
int
loope
stc
das
adc
jle
push
jne
xchg
or
test
call
dec
push
adc
push
fadds
mov
or
and
xor
xor
push
pop
insb
pop
gs
sbb
pop
or
add
fcompl
jge
call
mov
mov
fdivs
adc
xor
or
orl
aam
sbb
ss
pop
loop
mov
ret
inc
pop
inc
cmp
movsb
adc
add
je
pop
jmp
enter
inc
nop
jno
xchg
aam
and
sub
sub
adc
in
jns
push
or
add
mov
adc
xor
sub
xchg
xchg
dec
shrb
xchg
je
xchg
incl
mov
pop
sub
dec
cld
xorl
push
or
inc
sub
shll
icebp
aad
inc
push
and
scas
cltd
nop
add
ret
mov
push
inc
fsubrs
leave
xor
adc
insb
lds
inc
push
push
stos
push
shll
es
mov
xchg
or
or
pop
and
mov
xchg
aam
aam
mov
fdivrl
dec
jo
test
pop
cmp
inc
mov
inc
sub
lods
push
mov
jecxz
push
push
jmp
rorl
gs
inc
test
cs
adc
fisttpll
fidivl
dec
dec
or
sub
shll
inc
movsb
das
or
mov
inc
mov
mov
lods
lea
lods
add
fiadds
dec
mov
sub
pop
add
or
popf
test
mov
xor
je
cmp
dec
es
cmp
sub
clc
mov
hlt
pmuludq
pop
adc
or
in
xchg
add
pop
add
xor
xchg
mov
xchg
incl
pop
inc
call
adc
add
lahf
rclb
ret
in
mov
andb
cmp
std
cmp
or
inc
ja
jmp
lods
loop
sub
rolb
test
lret
sub
sbb
roll
mov
xor
add
sqrtps
les
lret
xor
das
insl
addr16
lock
push
cmp
inc
bound
fstl
sbb
cmp
add
popa
in
or
imul
in
lret
and
mov
mov
js
dec
movsb
mov
shr
gs
sbb
scas
call
stc
inc
int
push
xor
cmp
jne
mov
dec
sub
dec
push
movsl
jp
leave
add
scas
xlat
nop
xor
ret
and
inc
jle
pop
mov
adc
lea
pop
push
cltd
mov
rorb
inc
xor
test
pop
decl
inc
dec
aad
xor
mov
and
call
mov
xchg
punpckhwd
lds
mov
dec
xchg
scas
xchg
inc
or
sahf
in
lret
adc
les
sub
std
fdiv
inc
mov
mov
shlb
inc
add
leave
sti
adc
into
xchg
scas
pop
test
cwtl
push
push
es
inc
dec
clc
clc
mov
scas
mov
add
ret
mov
out
sbb
lock
jne
in
dec
sub
dec
dec
cmp
daa
mov
xchg
add
lcall
lahf
inc
or
lock
repnz
push
adc
add
xor
lock
in
rcrl
cmp
push
sub
or
mov
cmpl
pop
mov
and
popf
xchg
and
leave
in
jns
jge
xor
sti
dec
jne
or
addps
nop
sbb
mov
sbb
sbb
sbb
mov
testl
and
sti
mov
subl
cmp
ret
pop
push
test
push
push
loop
push
rol
cmp
pop
nop
xchg
mov
cld
push
adc
adc
or
dec
pop
cld
dec
js
int
push
arpl
adc
dec
add
xor
jmp
fldcw
lods
push
les
scas
or
sbb
adc
and
test
push
adc
out
jb
sub
add
sti
iret
mov
pop
ret
push
push
push
adc
or
and
inc
inc
or
or
add
mov
add
add
adc
jae
push
rcrb
sahf
mov
add
mov
xor
inc
add
push
inc
mov
xor
or
mov
jnp
int
adc
jo
add
rclb
ss
addb
setg
xor
insb
jle
add
add
or
outsb
add
add
fdivrl
sbb
jl
stc
pop
or
sbb
lret
shlb
pop
mov
pop
mov
lret
mov
sbb
inc
inc
rclb
inc
cmovl
lcall
enter
out
cmpsb
xor
repz
mov
fadds
out
test
test
int
pop
sub
je
and
pop
xlat
nop
rcrb
or
add
testb
sub
adc
mov
adc
pop
sub
ja
inc
sbb
outsl
outsl
fidivl
leave
cwtl
sbb
push
xor
pop
push
push
sbb
and
jnp
movsb
aaa
adc
jbe
shrl
push
das
loopne
js
out
loopne
scas
rol
pushf
mov
or
ret
xor
sub
xchg
add
lods
push
jl
or
inc
xlat
addl
and
iret
repz
shl
mov
and
xor
cmp
repz
inc
dec
iret
repz
dec
push
push
pop
pop
pusha
mov
sti
nop
dec
push
or
pop
add
or
cld
sbb
push
out
sub
xchg
imul
scas
getsec
mov
lock
sbb
xor
outsb
pop
loopne
in
xchg
inc
dec
ds
dec
mov
push
sbb
inc
mov
and
add
movsl
gs
sub
pusha
inc
pop
mov
or
nop
pop
mov
push
pop
push
push
sub
push
mov
aas
pop
rcll
xor
inc
sbb
rcrl
pop
test
sbb
es
shll
lret
jnp
push
shl
pop
mov
sti
int
or
and
sbb
adc
cld
mov
inc
dec
dec
add
pop
call
xchg
and
aas
pop
je
or
xorl
shl
mov
sahf
inc
xchg
lods
mov
xchg
test
pop
mov
adc
ficomps
clc
inc
xor
daa
jmp
inc
xor
notl
dec
jecxz
loope
mov
cmpb
inc
les
loopne
aam
fwait
pop
iret
xor
mov
dec
iret
adc
adc
mov
inc
rcl
or
pop
pop
pop
sbb
or
pop
cmp
cmp
test
sbb
pop
shlb
jle
sbb
dec
loop
cmpsl
and
insl
ljmp
pusha
rcrl
or
fcompl
add
stc
xchg
test
lock
jb
and
inc
cmc
in
outsb
inc
movsb
pop
sub
movb
pop
pop
andb
xor
xor
stos
mov
sub
jb
xor
mov
cmp
adc
mov
mov
adc
jle
loope
or
mov
and
adc
call
mov
loope
xchg
cmp
into
push
and
sbb
adc
repnz
cmp
jne
sbb
in
sbb
sbb
es
push
pop
mov
sbb
pop
pop
mov
add
sbb
mov
fists
and
and
aas
push
push
push
insl
push
mov
fisubs
add
or
cmp
sbb
jmp
mov
ja
mov
rorb
cmp
inc
sub
inc
pop
mov
mov
adc
stos
add
int
inc
adc
cmc
stc
loope
sbb
jmp
inc
sbb
ss
jnp
push
inc
push
xchg
dec
adc
xchg
and
jmp
vaddsubps
push
or
push
pop
and
jg
psubq
movb
aad
aaa
je
int
add
sub
ss
add
inc
ficoml
sbb
adcl
adc
push
push
jb
or
inc
inc
xorb
clc
dec
xchg
adc
adc
sbb
ja
sahf
fldcw
fsubrs
push
insb
adc
test
fsts
jnp
js
dec
push
jo
mov
dec
daa
push
int3
pop
sub
shll
bound
sbb
ret
sbb
nop
push
inc
add
dec
dec
push
lcall
into
xlat
or
mov
push
dec
dec
shll
cmp
cmp
and
cmp
popa
lock
push
das
popf
in
cltd
or
xor
dec
jns
push
adc
sbb
insl
add
scas
xor
out
rorb
xchg
loope
mov
pop
jo
jle
inc
cmp
daa
cmovl
push
leave
jl
xor
jb
outsb
mov
call
or
lcall
sbb
ds
ljmp
inc
cmp
or
mov
push
cmp
sub
adc
pop
leave
push
fiaddl
xorb
pop
out
int
scas
loopne
jnp
pusha
add
xchg
call
sub
punpcklbw
je
lods
adc
and
insb
jo
inc
and
pusha
dec
es
add
mov
sub
fisttpl
shlb
inc
push
arpl
push
push
pop
insb
mov
xor
push
inc
and
jno
sub
sub
or
cwtl
mov
mov
aas
push
mov
lods
roll
mov
addr16
inc
xor
fnstenv
subb
sbb
mov
and
cltd
fcomps
dec
mov
fs
aad
ss
ret
inc
sbb
sbb
je
pop
imul
xchg
je
cmpsl
nop
xchg
add
jp
or
addl
adc
jns
pusha
mov
add
out
inc
adc
mov
jg
test
cmp
xchg
inc
hlt
xchg
je
mov
cmovb
sbbb
xor
call
out
test
dec
adc
xchg
aad
daa
add
and
mov
mov
inc
in
xchg
adc
mov
les
xor
scas
pusha
jecxz
daa
inc
xorb
mov
imul
andb
mov
mov
or
inc
lret
push
add
adc
push
xchg
mov
mov
pop
and
lcall
pop
adc
sahf
les
inc
inc
or
adc
push
or
mov
stos
and
xchg
mov
sbb
call
data16
push
outsl
shlb
xchg
jmp
inc
scas
mov
jne
ja
xor
xor
add
arpl
insb
cmp
dec
outsb
arpl
add
and
int3
jg
add
gs
dec
cmp
int3
fidivrl
insb
ss
adc
je
push
adcb
cmp
mov
cmc
negb
sub
inc
cmpsl
pusha
pushf
sub
add
jp
push
push
stos
mov
xor
xor
add
call
cmp
push
cmp
enter
xchg
sbb
dec
add
pop
repnz
out
sub
jnp
or
cwtl
scas
xor
mov
or
pop
adcl
or
rcrb
xchg
mov
add
enter
add
inc
sahf
push
outsl
aad
or
push
inc
and
add
sbb
adc
pop
sub
inc
push
sbbl
mov
adc
pop
push
insl
outsl
jl
pusha
dec
enter
pop
or
scas
lds
shlb
test
sarl
call
jne
bound
out
sbb
cmp
mov
sbb
pop
adc
test
or
shll
or
or
push
jmp
out
mov
cmpsl
or
dec
inc
in
in
fisubrs
hlt
fs
popa
js
cmpsl
popf
mov
nop
sub
js
jno
shrb
push
jl
jno
rclb
pop
inc
xlat
aas
push
enter
inc
test
inc
add
jb
lret
sbb
sub
js
fdivs
mov
arpl
adc
or
mov
cmpsl
out
mov
pusha
rolb
xlat
jnp
test
adc
mov
mov
and
sub
adc
stos
pop
adc
scas
inc
xor
sahf
sbb
push
scas
adc
mov
cld
pop
cmp
adc
packuswb
stc
sti
sbb
pop
pusha
push
and
add
push
dec
nop
jp
dec
fs
cs
dec
adc
dec
adc
call
push
imul
add
sarb
push
bound
or
call
je
adc
mov
adc
testb
mov
mov
inc
and
hlt
nop
prefetch
or
daa
dec
ss
in
mov
inc
push
ljmp
inc
std
das
mov
pop
or
jle
and
dec
dec
into
sub
shl
int
lock
pop
pop
adc
dec
sbbb
adcl
invd
cmp
daa
push
jo
inc
mov
sbb
adc
pop
adc
mov
push
rcrb
xor
lahf
or
or
sarb
pop
xchg
lock
in
gs
adc
dec
adcb
fsubr
and
push
or
add
mov
popa
cs
clc
cmp
outsl
mov
aas
lea
adc
pushw
arpl
xor
adc
dec
and
je
push
push
gs
cld
ds
rorl
lea
mov
cs
xchg
arpl
add
and
xor
xchg
cld
fcomip
cmp
cmp
fs
mov
push
jb
insl
popa
jb
or
int3
mov
jbe
ja
cmpsl
sub
scas
push
iret
out
mov
add
xor
cltd
or
cmpsb
pop
and
inc
or
pop
ds
add
loopne
lea
push
loope
rol
inc
jo
arpl
mov
imul
inc
sub
mov
cwtl
sub
leave
push
xchg
add
lret
rcr
in
fidivs
roll
jne
scas
inc
or
dec
add
add
int3
inc
test
dec
push
sar
adcl
dec
jae
push
push
push
dec
movsl
dec
or
cmp
add
ja
adc
movb
clc
xchg
add
add
popa
xor
popf
or
pop
xchg
jo
rolb
mov
mov
scas
pop
add
ret
test
jo
jo
fdivrl
sbbl
and
mov
iret
lds
mov
jl
cmp
pushf
mov
js
push
lds
jl
das
sarb
and
or
add
adc
jb
or
inc
mov
mov
mov
add
mov
cmp
ret
inc
jge
cmp
mov
insl
mov
stos
sub
repnz
rorl
cmp
cmpsl
popa
xlat
subl
cmpsb
push
inc
push
cmp
sahf
loop
or
jl
cmp
jmp
inc
add
test
scas
jl
jb
aam
inc
add
inc
add
in
jns
sub
inc
add
add
inc
mov
inc
pushf
and
ja
ja
jns
loope
lock
orl
fwait
cmp
pushl
or
inc
add
inc
js
inc
repnz
mov
push
clc
insb
sahf
int
mov
insl
sbb
adc
pushf
shlb
ret
iret
add
adc
lock
ds
mov
add
ljmp
test
mov
and
pop
insl
push
cld
ret
jp
adc
adc
out
add
adc
push
and
xchg
and
inc
mov
push
inc
add
aaa
pop
jp
mov
sbb
push
push
sub
mov
inc
or
inc
mov
mov
mov
ljmp
jg
ljmp
stos
ljmp
jmp
mov
in
lcall
sbb
cmp
and
lods
es
mov
dec
lods
fsubrl
lcall
mov
mov
fnstcw
xor
push
push
mov
cmp
js
pop
mov
test
out
negl
xorb
clc
es
popf
in
repz
mov
sub
sahf
ja
jl
cmpl
in
cmp
fsubp
enter
push
jae
in
shrl
cmpsl
xor
push
je
xor
in
jge
lods
test
inc
pushf
lret
cmp
mov
les
addb
leave
dec
fs
jns
mov
outsb
dec
pop
ret
andl
add
jl
sub
inc
fiadds
cmp
add
jmp
add
fs
pushf
ljmp
cmp
je
cmpsl
cmp
add
test
in
cmp
cmp
cmp
add
dec
jmp
in
adc
popf
shr
inc
mov
pop
jb
adc
or
addl
sbb
and
aam
fcompl
xchg
pop
xor
ds
inc
mov
jo
push
add
jo
popa
mov
pop
repnz
call
add
sub
popa
add
popf
aaa
mov
cli
pusha
enter
add
dec
add
shll
loope
add
popa
push
popa
loope
or
cmp
loope
decb
or
ds
sbb
pop
inc
jo
sti
inc
mov
adc
sbb
leave
xchg
and
testb
and
xor
repnz
bnd
orl
sbbl
pop
inc
es
mov
addl
lock
inc
cld
pop
cli
push
imul
nop
xchg
adc
pop
cmp
repz
mov
inc
and
mov
add
pop
in
jns
and
or
femms
xchg
xor
push
sbb
mov
pop
shlb
and
xchg
pop
push
lods
loope
nop
jl
add
mov
mov
jo
mov
inc
and
jecxz
addb
and
pop
es
jecxz
test
adc
cwtl
push
or
and
outsl
sbb
mov
add
cmpsl
sbb
xor
mov
enter
sub
iret
mov
push
loope
sub
dec
ja
test
jno
sbb
inc
jne
cbtw
adc
sbb
mov
mov
xchg
je
push
add
mov
hlt
pusha
push
sub
or
or
cmp
push
cmp
pop
sub
popa
inc
pop
inc
mov
push
gs
out
shll
or
fs
das
or
enter
xchg
loopne
daa
xchg
and
stos
mov
fs
movsb
out
xor
dec
or
daa
jecxz
bnd
fdivs
push
xor
pop
cmp
mov
jne
mov
inc
pusha
push
pop
sarb
dec
movsb
mov
adc
pop
lea
or
mov
mov
adc
mov
xchg
mov
repnz
sbb
ss
imul
pop
xorl
outsb
stos
push
addb
push
mov
mov
push
inc
push
ret
jg
pusha
dec
mov
outsl
mov
push
jb
xlat
inc
lcall
dec
cmp
js
adc
xor
jae
inc
insb
movsb
loop
cli
push
add
mov
sbb
mov
cmp
or
loopne,pt
cmp
dec
rclb
cmp
push
imul
and
sbb
or
ds
fimull
mov
inc
fwait
aaa
icebp
lods
sarb
mov
fs
push
jle
mov
mov
push
in
ljmp
mov
xchg
adc
mov
or
and
mov
inc
sub
cmp
and
mov
inc
fists
mov
pushf
and
inc
or
ret
push
adcb
adcl
scas
adc
xchg
nop
jns
movsb
add
fwait
lods
hlt
pop
orb
push
adc
fdivs
dec
popa
and
lods
push
and
pop
or
add
mov
add
cmp
inc
adc
push
dec
and
pop
mov
loopne
and
sbb
cld
inc
call
jl
add
jl
sub
rcrl
inc
aaa
or
test
repz
dec
add
roll
sub
ret
adcb
jne
fadds
sti
dec
add
pushl
fdivrl
sbb
cmovg
iret
cmp
test
dec
or
call
lock
adc
loop
push
inc
popa
movsl
shlb
bnd
jbe
stos
cmp
mov
in
and
icebp
xchg
fmuls
jbe
adc
loopne
pop
in
push
xchg
je
push
and
cli
clc
push
mov
daa
andb
pusha
mov
pop
enter
add
pop
add
out
add
xor
jl
clc
nop
clc
rolb
int3
add
pop
bnd
adc
mov
xor
sbb
inc
frstor
aaa
xchg
and
and
lahf
jb
pop
dec
push
jo
mov
inc
cs
sub
xor
cwtl
inc
lds
shl
pop
repnz
jb
shrb
dec
adc
pop
dec
dec
nop
or
dec
xor
pusha
repz
xchg
rolb
pop
enter
dec
jo
pop
repnz
shlb
or
jns
or
test
loopne
dec
and
xchg
arpl
out
dec
dec
pushf
pop
jne
orl
push
xlat
into
test
push
add
or
or
enter
xchg
dec
call
dec
movsl
dec
loopew
data16
adc
and
add
push
mov
imul
add
jp
dec
adc
enter
orl
sub
push
sti
imul
decl
push
dec
ljmp
adc
and
shrl
iret
addl
inc
adc
xor
sub
les
pop
sbb
aam
rcl
sti
cmp
aam
push
xorb
xor
push
pcmpeqw
adc
das
pop
sub
push
inc
scas
and
push
mov
and
adc
cmpsb
jno
ds
imul
lods
mov
cmp
pop
pop
and
call
daa
and
js
inc
out
inc
pop
add
cmp
jne
shlb
lea
pop
sbb
outsb
sbb
cmovo
add
inc
or
clc
into
adc
inc
jo
sbbl
inc
popa
cmp
js
inc
pop
and
aaa
push
dec
test
mov
sahf
dec
test
and
inc
dec
movsb
jmp
jmp
or
cmp
pop
push
and
or
cmp
std
fcmove
push
mov
pop
je
nop
lahf
pop
and
loop
and
cmpsb
adc
incb
and
inc
and
dec
filds
or
les
mov
out
push
sbb
mov
mov
bnd
or
ja
push
je
and
stos
push
inc
jno
pop
inc
jl
das
and
pushl
push
movsl
cltd
mov
pushf
mov
and
or
and
sbb
jne
lea
and
sbb
ret
dec
lods
pop
mov
outsb
jbe
cwtl
in
mov
or
push
das
jmp
jnp
pop
push
sti
jmp
dec
and
mov
hlt
jne
xorb
or
inc
movsb
int
jmp
add
xchg
dec
sti
stc
dec
data16
add
fmull
shlb
fists
add
js
or
cmp
add
je
sub
js
xorb
aaa
jns
pop
adc
inc
ret
insl
paddusb
add
unpckhps
ss
hlt
mov
sbb
push
dec
sbb
dec
or
add
adc
inc
adc
inc
loopne
cmpsl
movsb
cld
sub
mov
sub
jbe
inc
add
cld
je
inc
loopne
xor
xchg
mov
sub
fiadds
gs
push
sbb
lods
cwtl
xchg
xor
aam
dec
sbb
jo
and
or
sbb
test
mov
js
jne
mov
mov
adc
jns
xchg
pushf
dec
inc
popf
mov
dec
pop
ret
mov
ja
addb
sub
hlt
es
daa
scas
adc
mov
sbb
or
mov
cmp
add
add
ss
aas
sub
incl
push
jle
jle
cld
adc
push
jne
and
inc
inc
or
add
xor
inc
iret
cwtl
mov
push
mov
push
jo
cmp
jo
adc
fs
mov
cltd
mov
fwait
enter
xor
jl
add
pop
inc
push
sbb
add
lds
je
fidivl
aam
xor
fs
shlb
mov
movsl
inc
ss
inc
int3
jl
sub
add
aaa
dec
orb
inc
clc
push
mov
sbb
sub
repnz
pop
add
or
or
cmp
add
adc
adc
sbb
sub
pop
stos
add
mov
adc
push
cmpb
cld
testb
sub
dec
jae
add
or
imul
xchg
jg
stos
mov
xchg
jo
pusha
cmp
inc
sbb
jle
push
mov
pop
adc
sbb
ljmp
or
mov
and
jbe
mov
adc
pop
jnp
loop
je
adc
add
ret
out
add
or
jne
add
in
push
leave
push
dec
add
inc
popa
add
mov
rclb
ret
jecxz
test
mov
mov
dec
or
add
xchg
nopl
push
mov
mov
in
or
add
daa
loope
cmp
sub
sub
inc
sbb
add
ret
adc
xor
mov
sub
sub
out
dec
cmp
test
adc
cmp
mov
inc
imul
xor
call
adcb
mov
ss
mov
xchg
rcl
dec
lock
xor
jae
ret
or
aaa
outsl
ja
and
inc
cs
add
pop
push
mov
and
mov
push
inc
movsl
mov
ljmp
fildl
add
dec
cmp
jl
cmp
loope
xchg
stos
test
inc
add
addb
fists
and
enter
xor
inc
dec
dec
xchg
pop
lea
out
jno
leave
or
mov
adc
xchg
push
outsl
cmp
sbb
dec
pusha
stos
dec
xor
jl
cmpb
push
cmp
cltd
mov
jmp
sub
pop
sbb
mov
lahf
mov
dec
shrl
add
mov
cld
roll
dec
enter
mov
out
jo
adc
repz
sbb
daa
jne
popf
xor
test
lret
repnz
lahf
mov
mov
bound
outsl
adc
popa
jecxz
inc
fcoml
mov
xlat
adc
sti
pusha
adc
inc
mov
mov
sbb
sub
iret
jb
fdivrp
sub
neg
jmp
arpl
je
and
pusha
sbb
pusha
lock
push
push
test
subb
and
mov
and
mov
adc
stos
ja
dec
aaa
inc
mov
pop
pop
push
adc
inc
or
sbb
add
add
pushf
and
ret
jl
xchg
pop
mov
ds
push
sbb
or
add
mov
inc
icebp
adc
mov
or
push
roll
inc
clc
add
int3
rcrl
cmp
je
js
or
and
adcl
xor
or
cmp
nop
mov
mov
inc
xor
cmc
mov
xor
or
jbe
cmp
cmp
adc
sti
jmp
inc
sbb
lea
cwtl
rorb
repz
insb
call
and
and
dec
push
filds
add
inc
push
adc
aas
scas
sub
push
std
jp
xchg
lret
aaa
leave
aam
cltd
and
mov
in
movsl
daa
sbb
fnstenv
stos
or
je
jnp
xchg
and
dec
and
push
dec
lret
mov
ljmp
and
pop
inc
push
iret
repz
outsb
mov
inc
jbe
pop
inc
cltd
cmp
jb
lods
or
shll
add
xchg
sbb
inc
mov
sub
add
sbb
xchg
mov
jle
push
sub
lock
clc
pop
dec
out
shlb
and
sbb
mov
testb
sbb
pop
add
adc
test
and
and
repnz
add
xchg
sbb
mov
xor
mov
cmp
push
mov
push
inc
imull
and
in
int
or
inc
sub
push
dec
inc
sub
syscall
xchg
mov
jo
sub
or
inc
xchg
add
cwtl
das
sahf
jo
or
jp
clc
xor
jle
or
dec
pop
dec
adc
ret
sbb
mov
or
sbb
je
pop
das
pop
pop
addl
shrl
enter
insb
pop
mov
ficompl
inc
test
mov
add
push
xchg
inc
fstpt
je
in
or
xor
orl
repnz
pop
into
add
das
xor
js
sbb
mov
cmc
add
push
add
iret
xor
xor
jae
push
add
popf
mov
sarb
add
add
insb
popa
lods
int3
sbb
aas
test
push
jle
ret
test
sbb
sbb
cwtl
test
mov
aam
cmp
popa
enter
pushf
cmp
sbb
test
xor
int
enter
sub
pop
test
ret
xlat
call
fisttpl
push
je
adc
push
stos
sub
mov
sbb
test
or
mov
push
lods
call
clc
sbb
sbb
ja
inc
fiadds
pop
sbb
dec
adc
fwait
adc
xor
push
ljmp
lahf
aaa
mov
stos
dec
out
inc
or
dec
testb
and
push
lret
dec
inc
pop
js
or
ret
xchg
xlat
aad
push
mov
pop
add
cli
rorb
movsb
mov
jle
cld
pop
cwtl
jno
mov
adc
andl
push
in
imul
mov
shll
jb
pop
xor
popa
aam
jnp
add
rclb
fmuls
and
and
cmp
dec
cmp
arpl
cmp
test
and
jb
cmp
mov
cmp
movb
add
push
xchg
add
inc
ss
shlb
and
or
jnp
lahf
stos
adc
aaa
lock
sbb
pop
nop
inc
mov
mov
push
cmp
lret
and
imul
cvtpi2ps
aaa
inc
push
push
add
add
and
dec
into
mov
lods
pop
andb
dec
push
mov
sbb
pop
call
push
mov
add
sbb
leave
mov
iret
dec
mov
jg
and
dec
out
jns
int3
adc
ja
call
pop
je
mov
sbb
sbb
cwtl
outsl
out
sbb
rcrb
fs
mov
ja,pt
pop
push
inc
sub
xlat
mov
jo
lcall
inc
sub
sbbb
fildl
in
inc
lods
mov
push
ret
or
inc
mov
addr16
dec
outsl
jbe
inc
xor
xchg
adc
mov
sti
pop
mov
dec
cmp
adc
aaa
test
iret
push
jb
dec
xlat
loopne
rorb
cmp
outsb
push
icebp
ja
inc
sarl
incb
sub
add
xlat
sbb
es
or
sbb
mov
ret
sbb
outsl
into
or
pop
loope
fists
pop
out
push
in
lea
push
mov
xchg
adc
enter
loopne
outsl
inc
aaa
xchg
test
xor
or
in
jne
add
mov
fucomi
push
sub
dec
ja
mov
and
xor
or
outsb
fcomip
sbb
enter
mov
adc
gs
stos
adc
daa
fmuls
and
repnz
pop
ss
adc
or
inc
dec
scas
cmp
addl
int
movsb
sbb
fs
nop
popa
in
add
pop
xchg
and
push
mov
aad
enter
ja
push
nop
xchg
adc
gs
loope
stos
add
pop
inc
and
dec
pushf
or
mov
and
frstor
mov
xchg
add
cwtl
jo
cmc
call
popw
test
aam
stc
xor
ret
lret
popa
insl
popa
add
jne
sbb
dec
jmp
jg
mov
mov
jns
or
dec
push
aaa
jb
push
subb
add
pop
fs
je
xchg
hlt
pop
in
repz
xor
push
add
movsb
stc
push
xor
xor
mov
sbb
cli
push
int3
adc
jmp
jmp
mov
negl
lea
aam
and
enter
or
xchg
hlt
test
add
push
mov
sbb
loope
fs
adc
xchg
mov
push
pop
or
push
pop
add
sbb
push
mov
sbb
pop
ret
out
cmp
imul
ja
rclb
push
fists
imul
pop
mov
arpl
dec
add
xlat
push
or
das
add
cmpsb
xlat
cmp
adc
xchg
test
xchg
maxps
mov
jmp
push
push
sub
std
test
push
arpl
inc
test
shr
adc
jmp
in
mov
rcrl
jmp
cltd
mov
and
sub
imul
and
scas
cli
stc
push
ret
div
andl
je
mov
add
fbld
mov
adc
div
js
or
mov
daa
mov
lahf
mov
nop
push
inc
lods
fcom
mov
xor
add
adc
push
daa
orl
and
pop
insb
xor
push
les
insb
rol
mov
add
pop
test
nop
mov
test
adc
sub
fcoml
andb
addl
jns
mov
pushf
sub
loopne
cmp
jb
mov
lret
pop
adc
inc
push
or
xchg
push
pop
and
inc
and
mov
dec
andb
jo
jne
test
pop
adc
daa
iret
adc
in
xor
mov
andl
add
pop
insb
inc
jo
jecxz
leave
add
adcl
cmp
dec
xchg
stos
pop
xchg
subb
shlb
cmc
sub
sbb
out
fnop
or
je
push
fildl
pop
into
mov
push
cli
test
cmp
js
leave
mov
xchg
in
add
sbb
and
mov
xchg
or
cmpsb
leave
add
inc
inc
add
xchg
in
mov
mov
fwait
cmp
add
and
sub
add
inc
fs
adc
fmuls
jecxz
push
inc
inc
xorl
xor
sti
dec
leave
loope
or
xchg
and
xchg
dec
pop
sbb
mov
setg
fisubl
gs
dec
and
sbb
inc
mov
mov
sbbb
inc
mov
add
xlat
pop
adc
sbbl
cmp
test
jp
xor
in
lock
fnstenv
sbb
and
mov
or
fwait
mov
inc
add
push
push
loopne
lods
pop
jnp
stos
xor
mov
add
inc
sub
dec
and
jb
cmp
mov
repz
cmp
adc
filds
jb
addr16
add
mov
int
imul
jl
mov
fs
int3
cmp
addb
mov
popf
xor
cltd
fadd
dec
dec
sbb
xchg
bound
jae
add
inc
inc
mov
dec
or
pop
orl
push
int3
add
in
nop
sti
lock
xchg
test
cmpsl
xor
adc
leave
int
adc
adc
xor
mov
fwait
sub
add
jne
dec
adc
loopne
fcomi
andl
push
insl
stc
mov
les
ss
mov
adc
mov
adc
add
das
daa
push
xor
jo
leave
movsl
cli
popa
dec
xchg
jno
jnp
inc
popa
fists
sub
jmp
add
cmp
scas
or
cmp
pop
mov
and
or
aaa
in
mov
and
and
je
mov
push
push
out
xor
or
nop
cmp
adc
and
push
mov
xlat
inc
or
mov
lret
rolb
mov
pop
fstl
sbb
mov
sub
movsb
push
mov
mov
sbb
cmpsl
mov
lock
daa
add
xor
incb
and
pop
xor
mov
in
jno
xor
inc
rorb
in
rolb
add
xchg
test
mov
jecxz
mov
dec
xor
adc
js
nop
fwait
or
dec
adc
add
jecxz
add
mov
daa
cmpsl
xlat
in
dec
jmp
pop
mov
push
ret
test
inc
sub
insb
sub
xlat
add
add
adc
insl
ljmp
dec
ret
xchg
aas
adc
lods
sub
sbb
cmp
jp
adc
loope
mov
dec
dec
int
pop
jg
imul
fs
call
and
jne
push
out
pusha
lods
jl
push
and
mov
sbb
fcmovb
dec
inc
and
xorb
sub
inc
cmpb
push
xchg
pop
add
mov
int
sbb
int
dec
insl
add
sub
add
mov
jecxz
mov
pop
sub
lods
xor
sbb
xor
jp
adc
jg
sub
lcall
jae
repnz
loop
cmpsb
hlt
data16
aas
add
insb
xchg
iret
jmp
add
aas
xor
mov
arpl
jo
adc
cmpl
adc
daa
mov
sub
nop
push
imul
add
push
mov
cmp
jae
pop
jle
and
and
sarb
pusha
inc
iret
xchg
sbb
cmp
xor
aaa
clc
call
pop
icebp
push
xlat
xchg
out
mov
aad
mov
dec
xor
sbbl
rolb
pusha
pop
out
lret
add
or
lods
fucomip
call
xchg
dec
adc
or
add
es
js
jmp
cmp
pushf
push
xor
sbb
popa
jns
imul
loop
pusha
xor
mov
je
push
ret
push
outsb
and
adcl
cmc
int3
iret
nop
mov
mov
sub
jne
ljmp
adc
mov
sbb
jne
pop
mov
or
sbb
sbb
shl
shl
add
or
dec
xchg
testb
jecxz
mov
jmp
andb
les
cmp
faddp
push
loopne
mov
or
mov
insl
and
int3
inc
jne
loopne
add
xorb
xchg
sub
nop
test
mov
sbb
popf
add
dec
movsb
mov
fcomps
jns
mov
insl
mov
sbb
or
jl
jo
and
or
adc
icebp
push
mov
fbld
out
sbb
or
negl
adc
xorl
test
sti
add
in
inc
push
out
cmpsb
sbbb
cli
jl
decl
and
andb
test
shll
sbb
movsb
add
test
subb
xchg
ss
xlat
add
xor
push
dec
daa
and
inc
and
sbb
testl
dec
xlat
fimull
cwtl
xor
mov
dec
sbb
dec
inc
out
aad
dec
xchg
mov
jge
pop
lahf
sub
fidivs
outsl
mov
insb
pop
inc
xchg
addl
je
jo
int
add
add
dec
aad
movsb
outsl
xchg
ljmp
xorb
xor
and
rcrb
shlb
xchg
cli
jne
test
mov
adc
gs
mov
fwait
js
movsb
shll
xchg
push
in
push
mov
mov
adc
cmp
inc
data16
dec
sarb
mov
pusha
sbb
xchg
jo
mov
inc
fs
add
shll
xor
sbb
add
in
dec
scas
inc
inc
mov
dec
dec
or
add
inc
js
icebp
sar
fs
mov
cli
mov
cmpb
inc
push
dec
mov
xchg
inc
xchg
or
dec
in
cmp
das
addl
sti
or
dec
sbb
idivl
int
fs
imul
add
and
daa
mov
sbb
mov
pop
hlt
addr16
or
fwait
fs
lret
pop
hlt
add
pop
hlt
call
call
mov
inc
or
lock
jmp
push
push
aaa
addl
adc
loopne
cmpl
lods
add
pop
adc
addb
xor
inc
sbb
xchg
jle
cwtl
in
sub
mov
cmp
push
xor
and
lea
adc
jns
push
cmp
pop
jle
and
test
in
jne
sub
jg
and
and
jmp
add
imul
inc
xor
xor
adcb
or
and
inc
mov
mov
add
movsb
mov
sbb
mov
mov
xchg
inc
inc
inc
sub
push
nop
addb
add
sub
test
xchg
leave
aam
cwtl
ja
call
andl
add
sbb
mov
jle
dec
push
inc
add
or
pop
test
sub
add
fs
or
inc
or
or
xchg
xchg
xchg
or
push
xorl
dec
imul
movsb
jnp
jge
adc
mov
popa
push
or
mov
jo
push
pushf
inc
or
push
and
cmp
mov
sub
es
fcmove
les
add
popf
xorl
subl
mov
lock
cltd
hlt
inc
or
pop
mov
jle
movsb
neg
in
mov
inc
enter
test
cmp
adc
dec
push
push
or
sti
cmpsl
mov
lahf
into
sub
popa
jno
andl
xchg
pop
rolb
pop
jle
inc
sbb
cwtl
push
dec
jmp
push
push
push
mov
sub
cwtl
mov
lock
adc
outsl
sbb
push
xorb
sarl
or
push
adc
enter
lock
cmp
mov
or
sbb
sub
mov
and
fstl
cmp
es
out
and
mov
test
into
add
cltd
in
movsb
add
sbb
outsb
leave
test
sbb
stos
inc
xorb
call
push
mov
jae
pushf
test
inc
daa
int3
shrb
adc
fnstcw
jo
or
push
pop
push
xchg
lock
adc
subl
dec
inc
pushf
pop
pop
mov
adc
sub
outsl
or
inc
jb
ficoms
dec
lea
sbb
dec
xor
test
or
push
adc
push
daa
or
clc
outsl
js
ss
andl
gs
mov
movsb
add
xchg
and
xorb
mov
mov
hlt
xor
mov
and
imul
adc
sbb
sbb
mov
jmp
cmpsb
mov
pop
movsl
sub
sbb
add
fiaddl
push
or
ss
mov
fs
inc
sahf
xchg
add
add
or
add
jl
ret
dec
clc
xchg
test
adcl
cmp
mov
imul
mov
dec
or
lahf
xchg
rorb
ret
mov
add
cmp
push
push
pushf
shlb
stos
cmp
push
pop
push
pop
pop
adc
test
add
adc
xchg
stos
clc
mov
jg
cmp
jle
mov
pop
sbb
andl
jno
and
or
jmp
push
cmp
cmp
imul
push
arpl
jns
adc
pop
pop
outsb
push
arpl
ss
addr16
jge
or
jmp
test
jmp
les
aad
imul
out
or
cmp
push
jle
or
sub
sbb
cmp
repz
add
dec
adc
movsb
jbe
or
lret
and
addb
adc
push
shrd
or
adc
mov
clc
cmp
rol
xchg
sub
mov
add
dec
cmpsl
cmp
repz
mull
loopne
sub
inc
ja
mov
xor
loope
adc
mov
loope
icebp
fcmovbe
jno
sub
and
popa
icebp
sub
xor
add
xchg
orl
xchg
jo
repz
adc
or
dec
push
cld
adc
das
push
mov
dec
rcll
pop
adc
mov
mov
hlt
test
add
int3
clc
inc
jmp
adc
cmp
je
mov
mov
bound
pop
mov
mov
daa
sbb
outsb
adc
xchg
mov
jg
adc
subl
jo
sbb
fwait
xor
inc
sub
rclb
push
push
sbb
sub
addb
mov
aaa
mov
mov
aaa
push
nop
xchg
dec
add
aam
mov
jl
inc
xchg
sbb
add
and
pushf
add
add
jl
dec
inc
outsl
adc
mov
push
cmpsl
or
push
mov
cmpl
pop
add
data16
cmp
clc
fbld
jge
shlb
sub
adc
or
add
mov
xchg
fadds
add
sbbb
push
pop
pop
ret
or
mov
add
movsb
mov
pop
dec
adc
jmp
cwtl
xchg
add
inc
adc
mov
adc
fdivs
and
cmpsb
dec
fistpl
dec
or
adc
fcomps
int3
push
cmp
jl
faddl
jne
mov
push
xchg
aam
imul
bound
add
mov
mov
add
add
out
add
scas
sbb
jmp
shll
jp
flds
mov
mov
cmpb
cmpl
cltd
xor
pop
out
xchg
js
ret
lods
pop
add
aad
fs
push
inc
loope
or
xor
mov
enter
push
rcrl
hlt
in
adc
repz
daa
push
or
aad
insl
inc
xchg
xchg
ljmp
add
andb
sbb
mov
inc
stos
pop
or
js
inc
das
or
dec
dec
inc
daa
fdivs
sbb
fwait
xchg
pop
or
push
inc
in
lock
push
cld
jne
rolb
ljmp
cltd
mov
adc
imul
enter
lahf
xor
icebp
cmpsl
cld
stos
push
inc
loopne
aad
fistps
mov
mov
pop
pop
pop
arpl
mov
dec
ret
mov
sbb
push
sbb
scas
adc
sbb
lock
pusha
jmp
stos
ss
sub
push
and
aaa
xchg
push
push
add
dec
gs
jge
and
std
mov
mov
pop
cwtl
dec
sub
movzwl
add
pop
and
sbb
push
jne
add
loope
out
jmp
xor
inc
inc
pop
aaa
adc
inc
xchg
push
int
cmp
jl
inc
divb
iret
repnz
pop
das
inc
call
jae
paddusw
cmpsl
aaa
xchg
cmp
push
mov
xchg
icebp
mov
push
push
push
add
je
jp
cmovl
ds
dec
inc
sbbl
loopne
inc
push
bound
push
sub
cmp
fldl
adc
xor
leave
push
push
adc
nop
xchg
das
add
in
sbb
cmp
push
or
addr16
sbb
nop
or
push
insb
or
adc
das
cmc
push
loope
fdivs
cmc
fidivl
dec
add
pushf
and
add
daa
imul
orb
stc
and
jbe
xor
stos
mov
fdivrs
xchg
cltd
sbb
sub
adc
rorb
and
dec
xchg
mov
push
push
pop
and
cmp
inc
sub
outsl
mov
push
jns
rolb
adc
insl
rolb
jns
in
movsl
cltd
mov
jo
push
push
jl
xchg
enter
je
cmp
ret
mov
jo
aas
add
sahf
fldenv
fstl
sub
jns
cmp
test
cmc
push
bound
jge
cs
shrl
cmp
sbb
mov
pop
sarl
adc
and
imul
les
sbb
lds
imul
or
les
lcall
dec
mov
js
pop
in
push
popa
xor
cmp
jne
xchg
cmp
sub
fwait
push
mov
movsb
lret
pop
add
push
cmp
push
fsubrs
mov
mov
push
sbb
out
mov
mov
sub
dec
push
add
sub
or
shrb
imul
cwtl
iret
pop
sarl
stc
or
ret
arpl
xor
and
or
push
pop
shrb
ret
xchg
push
inc
sbb
js
ss
into
mov
xchg
cmp
je
pop
jnp
push
movl
fildl
dec
and
or
fcmovnu
pop
cmpsb
cmc
or
mov
inc
nop
ficoml
gs
and
loopne
popf
push
pop
pop
inc
inc
and
or
adc
bound
mov
add
jmp
mov
pop
sbb
stos
adc
xchg
stc
sub
icebp
test
fucomi
sbb
push
negb
pop
add
lret
sub
or
jo
lar
adc
push
mov
sub
into
in
jge
in
mov
mov
test
jle
or
mov
stos
inc
pusha
or
or
sbb
enter
fcmovb
je
or
xchg
fs
cli
call
cmp
hlt
or
add
cmpsl
jbe
ss
adc
sbbb
xor
sub
cmc
and
cmp
outsl
test
ljmp
rclb
xchg
adcl
or
loope
adc
sbb
jg
cs
cs
testl
mov
or
xor
scas
arpl
pop
fistps
or
or
adc
xchg
ja
lret
push
pop
adc
orb
test
fs
bound
inc
and
add
cmp
sbb
xchg
cmp
pop
popa
cltd
dec
sbbl
lahf
je
pop
lcall
idivl
push
dec
adc
xorb
jmp
inc
add
add
sub
sbbl
popa
mov
mov
lahf
adc
arpl
in
cld
mov
adc
or
dec
push
iret
cltd
jo
jbe
mov
jns
add
push
insb
or
sub
movsl
or
lea
sub
test
push
pop
mov
scas
jge
rcrl
sbb
pop
scas
mov
add
add
and
mov
inc
cmp
push
dec
rolb
cmpsb
add
push
jl
add
sbb
fisubrs
data16
sbb
pop
sub
and
lock
inc
lock
jmp
mov
sub
shll
mov
loope
xor
sbb
xor
outsb
int3
sbb
adc
mov
mov
mov
das
sbb
xchg
enter
mov
xchg
ret
das
add
aas
xlat
sarl
push
sub
lock
ret
cs
or
shlb
mov
in
mov
es
inc
cmp
adc
lret
pop
notb
jl
add
mov
cs
jp
sbb
int3
jg
lods
dec
fistl
push
shr
je
xor
es
sbb
sbb
cltd
incl
jmp
add
mov
sbb
in
or
stos
ljmp
or
fwait
cmp
cmp
sahf
sub
fidivs
mov
test
and
bound
dec
jl
stc
mov
inc
test
or
imul
sub
jecxz
pop
dec
or
je
xchg
pop
nop
or
adc
repnz
addb
cmp
out
adc
sub
jne
outsl
xchg
sub
lea
mov
and
mov
sub
add
loopne
or
cmpl
or
adc
adc
sbb
add
mov
lea
sub
test
mov
push
scas
test
pusha
mov
nop
mov
jl
mov
sbb
call
idiv
inc
sub
lock
pop
or
push
mov
int3
cltd
mov
add
xchg
cmovbe
mov
add
mov
js
out
lret
out
pop
arpl
lds
xor
dec
ret
rorb
dec
js
jb
sub
inc
jmp
and
cmpsl
push
push
clc
and
bound
dec
lods
aam
insl
adc
xor
stc
mov
add
push
xlat
xchg
inc
adc
insl
mov
mov
xorl
lock
sahf
mov
xchg
or
sti
cmp
xor
adc
push
xorb
popf
test
lea
adc
pusha
incl
ds
push
add
in
add
cmp
sbb
cltd
inc
mov
fstps
stc
mov
cmp
sbb
je
movsb
dec
dec
inc
cmp
or
fbstp
add
adc
and
adc
cmp
mov
pop
lods
out
mov
sbb
sbb
clc
xchg
xchg
mov
movsl
rcrl
xor
sbb
mov
movsb
test
dec
stc
xor
jmp
nop
in
add
dec
xor
jne
xor
sbb
clc
bound
cmp
imul
cs
mov
jge
jecxz
lods
shrb
adc
sbb
or
adc
push
fistl
xlat
adc
dec
arpl
ret
inc
test
sub
outsb
jno
dec
dec
lods
outsl
jmp
cmp
or
clc
mov
push
data16
movsb
scas
jl
jle
mov
inc
add
cltd
jo
push
clc
arpl
je
das
mov
mov
mov
mov
rolb
cmp
aad
in
dec
add
mov
adc
push
inc
stc
jmp
and
sbb
mov
sbb
adc
and
ljmp
ss
jb
xchg
mov
pop
pop
xor
lahf
inc
add
dec
adc
dec
js
add
sbb
jne
data16
xchg
sub
out
cmp
inc
cmpsb
push
test
mov
fistl
rclb
mov
jo
adc
das
push
pop
cwtl
adc
inc
ret
cli
not
and
mov
popa
rorb
jg
mov
cs
mov
and
dec
add
dec
jnp
sti
jne
aam
sub
add
xchg
cmpsl
das
and
pop
and
cmp
mov
movsl
pop
test
mov
call
rcrl
mov
ja
pop
xor
mov
test
xor
aaa
cmpl
lcall
push
sbb
adc
stos
inc
rolb
mov
xor
mov
or
scas
insl
sbb
adc
xchg
loopne
sbb
out
rorl
sbb
push
call
arpl
inc
movb
or
jnp
aad
or
dec
inc
aaa
lock
cmpl
inc
inc
je
fildll
std
push
cmp
cmpb
push
mov
arpl
in
popf
pop
rorb
sbb
shlb
and
jbe
test
cmpsl
stc
icebp
push
lea
adc
inc
fmulp
adc
jle
mov
cmp
sub
push
roll
fdivrs
cld
bound
mov
rcl
sbb
fsubrl
xchg
pop
jb
pop
add
hlt
push
imul
test
clc
cs
sub
cmpsb
in
rclb
mov
nop
fs
sbb
add
das
aad
cmp
sbbb
test
sub
jb
xchg
mov
jo
test
and
call
cmpsl
rclb
testb
sbb
sub
push
sarl
es
sbb
icebp
jp
sub
push
or
push
les
jmp
fwait
pop
ret
cwtl
push
orl
push
xor
or
loopne
lds
loop
mov
js
pop
sub
add
pop
and
arpl
add
aam
adc
sbb
sti
and
mov
jmp
jecxz
sub
shll
insb
movsl
inc
adc
leave
pop
mov
ficoml
imul
sbb
jb
xlat
lock
xchg
andb
sbb
out
pop
push
popa
xorb
ret
or
dec
jns
sbb
roll
outsb
or
popf
or
add
int
rsm
imul
arpl
stos
add
mov
mov
xchg
stos
mov
inc
push
mov
pop
xorb
jp
xor
xor
aaa
or
imul
mov
inc
insl
pop
loop
xorl
xorb
adc
xchg
test
ja
in
sub
jne
inc
adc
cltd
das
in
push
sarb
aad
jmp
sub
wbinvd
cltd
mov
cmp
push
daa
dec
mov
arpl
sbb
dec
push
cmp
nop
out
testb
insl
fs
push
jl
push
sub
jne
pop
pop
sub
xor
stos
insb
enter
pop
subl
aaa
jmp
add
arpl
dec
jbe
dec
sbb
insl
inc
aaa
test
xor
or
add
push
adc
loope
jno
icebp
pop
rcrb
pop
lret
adc
aad
arpl
aaa
inc
add
je
loop
inc
icebp
imul
cmp
inc
popa
push
push
or
cmc
outsb
and
push
dec
cwtl
adc
and
push
add
sub
add
xchg
rol
pop
call
cmpsl
aaa
push
dec
cmc
sarb
dec
mov
push
cmovge
mov
out
xchg
sub
sbb
aad
adcl
sbb
push
hlt
dec
mov
mov
jbe
fisubs
xlat
jno
lea
insl
imul
push
inc
jle
jo
icebp
mov
jne
inc
shlb
test
lock
scas
testl
test
push
or
sbb
add
or
js
popa
shrb
leave
add
fcompl
pop
push
mov
pop
orb
psllw
push
mov
xchg
xchg
outsl
inc
or
cmp
arpl
lea
imul
sbb
fs
add
mov
popa
inc
or
xlat
insl
mov
sti
sbb
lods
or
add
int
add
cmc
sti
scas
mov
xchg
imul
lods
pusha
insl
out
out
add
or
add
inc
push
inc
cmp
mov
insb
inc
or
test
or
add
or
cmpsl
je
gs
call
xchg
dec
add
lds
inc
push
add
cwtl
aad
xchg
cmp
daa
aaa
add
inc
inc
pcmpgtd
pusha
xchg
lock
add
dec
fmull
int
push
mov
or
addl
lds
or
movsl
mov
xchg
clc
inc
nop
dec
js
jnp
mov
xorb
pop
daa
adc
jp
ret
int3
xchg
movsb
int3
push
test
xor
repz
push
loopne
inc
add
sbb
sub
mov
lock
das
push
mov
nop
orb
add
adc
cmp
add
andl
test
or
in
or
fmuls
mov
and
or
addl
and
shlb
cmp
add
pushf
and
or
movzbl
fadd
das
popa
add
outsl
add
add
aam
cli
movb
test
daa
jecxz
into
dec
shlb
cmp
add
mov
and
sub
sbb
mov
pop
dec
je
push
lock
sbb
aaa
or
sbb
add
leave
lcall
xchg
pop
sub
mov
xorb
mov
lahf
movsb
jo
and
mov
xor
leave
pop
and
lods
aam
mov
jmp
leave
xorl
out
cmp
jne
pop
add
roll
outsl
movb
lods
adc
jne
outsb
adc
mov
xchg
push
adc
loopne
mov
mov
repz
push
mov
add
add
sub
call
xor
repz
xlat
inc
cwtl
jne
dec
inc
repz
push
cmpsb
inc
xlat
ret
jmp
aas
mov
xchg
insl
aaa
sbb
sub
and
pop
testb
cmp
and
daa
xor
dec
fs
sahf
xor
sbb
in
enter
push
add
ds
mov
jge
jmp
jae
fsubrl
inc
jl
jmp
push
sub
repz
sar
xchg
shlb
clc
dec
stos
sub
or
push
inc
or
cli
out
add
push
cmp
push
cmp
add
shlb
add
or
and
sbb
cmpsb
pop
mov
push
test
inc
fisttps
jecxz
shrl
cli
lahf
aam
cmp
icebp
mov
shll
push
cmpsl
aam
add
sbbb
mov
jl
add
push
push
cmc
mov
inc
test
int
js
push
ljmp
xlat
push
aas
inc
dec
add
adc
and
repz
or
int3
jne
repnz
shr
sbb
dec
mov
dec
dec
inc
and
push
dec
and
push
stc
rorb
ja
xchg
shlb
rorb
add
addr16
fisttps
aas
mov
fwait
shrb
and
and
dec
dec
enter
sbb
fiaddl
aam
cmpsl
inc
in
xchg
sbb
xchg
adc
icebp
sub
repz
or
mov
jg
insb
jle
xor
xor
shrl
pop
jg
and
cmp
add
nop
jnp
je
rolb
inc
or
rolb
sbb
mov
cli
pop
lcall
jge
fsub
and
xor
push
fmul
shlb
jo
daa
add
mov
sbbb
mov
pop
cs
cmp
pop
pop
and
dec
ja
test
adc
push
lret
inc
add
pushf
mov
call
add
xor
cs
shll
inc
push
repz
xor
or
scas
and
jo
icebp
jl
add
or
xor
addr16
in
and
movl
inc
cmp
sbb
inc
inc
cmc
and
imul
cli
daa
je
mov
and
or
je
fwait
xchg
pop
and
imul
xchg
push
scas
idivb
repz
xchg
call
lods
pop
and
test
and
inc
push
stos
fnstcw
lret
jnp
add
xor
jle
dec
mov
stos
stos
sub
dec
and
sbb
xor
xchg
mov
shld
jne
dec
fcmovnbe
out
adc
fdivs
pop
dec
mov
rclb
mov
pushf
ss
xor
push
ret
and
in
jnp
jne
jne
mov
into
add
sub
dec
stos
and
or
out
xor
ljmp
jmp
enter
rcll
ret
stos
int
mov
jp
les
in
lods
cld
xchg
jl
rolb
xor
or
adc
jge
inc
pop
jne
mov
xor
dec
inc
imull
loop
and
push
cmp
jecxz
and
adc
test
and
stos
mov
push
dec
mov
ret
and
sbb
mov
adc
dec
or
scas
dec
cmp
add
fcoms
push
pop
and
mov
push
mov
or
sti
cltd
cmp
repz
lock
dec
lock
popl
bound
cmp
cwtl
inc
lcall
rcl
icebp
add
or
xchg
icebp
mov
jmp
testl
sbb
jp
std
dec
sub
rcll
jno
shrl
and
bound
add
inc
idivb
rol
cltd
cmp
jns
gs
nop
dec
jecxz
cmp
sbb
sub
adc
xchg
pusha
xchg
sbb
pop
jp
mov
clc
jno
mov
adc
adc
push
mov
movd
sbb
adc
adc
pop
add
lds
sti
insl
xor
xchg
or
add
arpl
sub
push
sarb
mov
loope
add
add
sbb
adc
scas
push
insl
cmc
shrb
push
je
or
push
test
add
movsl
add
push
xchg
aas
xchg
dec
adc
add
mov
xor
sarl
cmp
hlt
sub
movl
xchg
add
shll
pop
orb
cli
or
mov
pop
aam
lods
jo
pop
add
cmp
rorl
jge
loopne
cltd
jmp
sbb
sarb
in
andl
push
pop
sbb
imul
inc
add
call
sbb
js
and
jne
jns
or
add
jns
jae
xor
ja
xor
and
sub
xor
cmovbe
mov
mov
stos
sbb
inc
cltd
push
nop
test
aaa
inc
jmp
pop
sbb
in
aaa
ret
dec
add
dec
sbb
lods
fcompp
or
or
cmp
and
xchg
push
pop
adc
mov
enter
das
mov
imul
pop
aaa
and
in
mov
loopne
add
sahf
xchg
mov
cwtl
sub
add
in
aaa
int
mov
inc
mov
cs
add
sbb
dec
or
push
pop
lds
or
in
fmuls
adc
push
pop
mov
into
push
push
in
stc
clc
jns
xor
xchg
pop
add
test
dec
jo
xor
or
mov
xor
inc
mov
test
fstps
popa
inc
mov
add
pusha
hlt
inc
inc
int
test
inc
jbe
mov
imul
lret
add
add
mov
orb
xorl
mov
xor
fsubl
sahf
sahf
out
dec
mov
loopne
adc
je
test
in
xchg
test
sbb
addr16
ret
imul
dec
sbb
repnz
flds
ret
popa
pop
je
icebp
into
jp
jle
add
cmp
push
sbb
pop
fsts
jmp
popa
ret
or
lock
shl
mov
sbb
mov
insb
jae
or
mov
xorb
cmp
movl
inc
stos
and
jmp
xchg
es
and
fnsave
mov
sub
mov
inc
jl
pop
xor
mov
mov
subb
add
push
mov
xchg
add
add
popa
push
dec
dec
test
test
sbb
mov
add
add
xchg
cs
loope
loope
fisubrs
sub
cmp
inc
scas
push
clc
in
push
subb
dec
lods
adc
push
adc
add
addb
faddp
or
or
aam
ret
add
rcl
es
jle
jne
dec
dec
add
inc
rcrb
or
repnz
adc
add
subb
vmovaps
pop
lods
sub
push
and
pop
adc
inc
cmp
cli
mov
sub
outsl
je
sub
xchg
xor
scas
sub
sbb
push
sub
dec
shrb
icebp
cmpsl
pop
lock
je
shlb
or
sbb
dec
or
sbbl
lea
and
jns
sbb
dec
inc
sub
and
push
add
push
faddl
sbb
shrl
jmp
fwait
mov
add
jne
mov
mov
in
mov
lea
adcl
mov
mov
sub
sbb
add
push
icebp
add
mov
scas
test
push
push
and
rorb
and
xor
and
add
jl
pushf
fiaddl
xchg
mov
jno
add
xor
mov
pop
sarb
jl
lds
and
push
aam
add
push
pop
mov
xor
sysret
xchg
les
pop
cmp
pop
or
orps
push
pusha
clc
mov
xchg
imul
pop
xchg
dec
loop
cmp
negb
outsl
lock
out
mov
push
and
push
pop
movsb
xor
out
ret
es
pop
ds
cmp
lock
mov
cmove
rcrl
or
push
jecxz
pop
nop/reserved
sub
pusha
jb
clc
enter
pop
orl
add
sub
dec
add
xor
lret
scas
dec
rcrb
imul
push
lea
sub
sbb
jge
push
mov
sarl
or
add
testl
out
pop
or
mov
ret
sbbl
dec
xchg
rorb
test
ja
jle
daa
mov
or
xor
xchg
call
or
mov
cltd
rcl
push
mov
add
repnz
jmp
push
and
sub
rorb
shll
jbe
xor
and
mov
rolb
xabort
adc
loopne
in
imul
cmp
push
xor
push
inc
push
add
sub
arpl
aas
lock
fs
push
lods
xchg
fcoms
push
jg
push
in
nop
pop
sbb
jl
add
jg
sbb
sbb
in
lds
imul
jne
add
iret
pop
sub
test
pop
mov
mov
and
clc
or
sub
push
nop
imul
xchg
cmpsb
adc
mov
pop
scas
mov
sub
jbe
xor
add
fmull
push
les
and
sahf
and
push
out
add
stos
inc
call
push
add
inc
cmp
and
cmp
and
jle
inc
inc
mov
js
hlt
jo
pop
dec
fsubs
push
cmp
or
push
adc
inc
sub
sub
stos
pop
mov
lods
test
sar
fldpi
cmp
mov
pop
hlt
dec
fstpl
dec
add
jne
clc
in
push
xor
out
and
adc
rolb
iret
pop
or
aam
ror
and
add
inc
push
or
adc
xor
lock
or
pop
dec
test
add
pop
rorb
add
sbb
fsubr
je
xchg
cmp
pop
adc
outsl
add
lock
add
xchg
addl
push
fwait
nop
insl
pop
xlat
jle
icebp
mov
nop
movsb
push
mov
push
mov
inc
out
add
xor
mov
dec
shrb
cmp
lahf
nop
inc
inc
mov
outsl
sbbl
or
ljmp
xchg
hlt
or
push
add
mov
mov
xchg
add
sub
cmp
jmp
mov
push
add
add
mov
imul
sbb
dec
adc
loope
mov
rcll
aaa
push
les
in
lds
pop
push
jo
add
jne
lock
or
xlat
add
or
das
bound
aaa
das
test
lea
ss
test
rcr
inc
push
inc
fistl
add
sub
push
xor
pop
adc
push
inc
inc
add
lock
xor
js
ret
pop
mov
loope
ss
hlt
fnstcw
or
leave
movsb
push
mov
insl
inc
xchg
cmp
xor
pop
inc
insb
sbb
je
push
jnp
lea
es
dec
mov
pop
out
pop
push
mov
or
mov
ret
adc
pop
jl
mov
cltd
sbb
inc
cmp
xchg
nop
js
arpl
xchg
pusha
pushf
mov
fsubp
js
enter
cmp
test
insl
sub
xchg
les
imul
jb
pop
jb
push
dec
pop
jb
pop
xor
xchg
bound
stc
pop
mov
mov
pop
out
cwtl
nop
pop
lds
add
sarb
dec
push
mov
jl
sbb
adc
add
pop
or
lock
push
aad
mov
leave
and
dec
inc
pop
dec
jb
ljmp
dec
repnz
pop
pop
jb
jnp
dec
aam
push
push
xchg
sub
pop
mov
xchg
and
dec
dec
flds
push
push
add
in
mov
inc
pusha
sbb
movsb
and
mov
pop
push
mov
iret
pop
cmp
sbbb
test
dec
dec
xchg
outsb
jnp
insl
scas
outsl
je
adc
loop
dec
ss
cmp
enter
mov
jb
sbb
push
call
in
adc
sti
test
xchg
mov
out
jl
or
jle
test
cmp
mov
enter
xchg
xorl
or
xchg
or
mov
pop
sti
xor
decb
or
add
pop
adc
insb
cmp
adc
cmp
push
push
push
push
pop
or
jge
dec
xchg
cmc
push
xor
inc
imul
sub
adc
clc
lahf
cmp
cltd
roll
sbb
mov
pop
jne
pop
or
add
pop
inc
sbb
movsb
pop
cmp
xor
or
jo
jno
movb
out
cld
jb
adc
lods
test
dec
add
aaa
dec
mov
xor
std
cmp
test
cmpb
sbb
pop
lock
repnz
xchg
lret
and
or
repnz
cmp
jbe
adc
test
cmp
sbb
adc
mov
dec
adc
arpl
rol
enter
xorl
cmp
loopne
movsb
pop
dec
sub
ja
inc
xchg
jae
movsl
add
push
insb
cmp
fs
cld
sbb
fbstp
cltd
int
popa
lock
cmp
and
push
repz
in
mov
popf
sub
sub
out
jl
mov
sbb
movb
xor
and
or
pop
arpl
inc
mov
or
xchg
mov
push
sub
ja
add
xor
lret
addl
repnz
cmp
cld
push
sbb
pop
test
jae
jne
fiaddl
xchg
and
sti
pop
xchg
test
test
repz
pop
pop
pop
inc
push
test
push
es
xor
cmp
xchg
mov
or
add
dec
mov
movsb
add
hlt
push
cmpsb
xor
flds
adc
push
cmpsb
mov
ljmp
pop
pusha
inc
pop
dec
out
nop
xchg
lahf
xchg
push
mov
insl
call
pop
fcmovbe
outsb
adc
nop
test
mov
or
movsb
or
sbb
push
pop
cli
addr16
adc
mov
aaa
inc
dec
xchg
rcl
lcall
or
frstor
pop
mov
xor
sbb
push
or
orb
mov
mov
lock
cmpsb
pop
fwait
adc
sbb
mov
push
cld
inc
or
lcall
inc
push
push
test
lods
std
pop
mov
xchg
js
mov
mov
cmp
addb
pushf
cmp
sub
popf
sub
push
mov
cmpsb
pop
test
xchg
dec
or
push
push
stos
mov
adc
dec
loopne
imul
mov
push
imulb
adc
mov
in
push
sbb
leave
mov
and
dec
jmp
sub
adc
dec
sbb
pop
dec
inc
inc
xor
js
jmp
xchg
js
sbb
inc
dec
push
movsl
or
imull
lods
xor
clc
add
es
pop
imul
jae
sub
jp
cld
popa
movsb
xor
mov
out
outsb
jne
sbb
mov
add
inc
mov
and
aad
jb
jae
pop
mov
inc
int
hlt
scas
cmp
sbb
cs
imul
ljmp
or
iret
ds
ja
jmp
sbb
xor
mov
adcb
sub
cld
mov
jge
shl
xchg
jne
in
imul
test
mov
rolb
push
dec
cmp
rcrb
adc
ja
jns
xlat
mov
es
xchg
push
ds
pusha
call
jns
dec
pusha
or
or
and
inc
or
xor
lock
sub
pop
pop
insb
insl
roll
jmp
sbb
lea
outsl
mov
jno
shlb
inc
sahf
lahf
hlt
imul
iret
mov
add
cmp
and
pop
mov
cmp
sbbl
sub
dec
lock
add
popf
xchg
aad
mov
clc
cmp
push
dec
hlt
arpl
nop
inc
push
mov
cld
lret
les
pop
hlt
je
and
adc
lds
jno
push
fcmovbe
cmp
mov
mov
subl
shrl
push
xor
sub
dec
sarl
fcompl
add
mov
or
mov
ret
xchg
xchg
adc
mov
xchg
or
xchg
cmpsb
add
inc
mov
lock
nop
mov
cwtl
add
dec
push
sbb
jle
in
add
add
enter
add
jae
in
es
and
sbb
mov
outsl
call
push
mov
dec
loop
cmp
aam
testl
mov
sbb
in
rcrl
fistl
add
adcb
xor
dec
leave
pop
test
nop
xor
mov
js
fcmovnb
imul
test
or
lcall
mov
sub
adc
cmp
jmp
jno
ljmp
sub
jne
imulb
fiaddl
push
push
mov
movsb
mov
cmp
jge
ret
xlat
or
shrb
pop
or
lcall
push
insb
cli
clc
add
adc
call
pushf
jecxz
ret
mov
lahf
push
xor
push
push
pop
out
adcb
push
push
fs
jae
and
insl
jno
mov
mov
adc
movsl
ja
mov
je
idivl
and
and
leave
je
pop
jno
sbb
mov
xorl
loopne
pop
inc
sbb
or
cmp
test
arpl
loopne
and
and
or
ja
push
push
mov
scas
inc
cmp
movsl
call
pop
mov
cmp
adc
into
or
rcr
add
inc
sub
xchg
xorb
inc
add
sbb
and
sbb
pop
pop
add
out
add
sbb
or
pushl
pushl
mov
jle
movsb
mov
pop
push
cltd
push
xchg
push
pop
sub
test
in
or
lahf
outsl
pop
scas
aad
mov
sub
mov
add
popf
push
mov
jnp
mov
insl
push
test
push
push
sti
orl
inc
testl
sbb
mov
jo
or
lcall
mov
imul
xor
cmp
inc
mov
adc
mov
add
or
jmp
pop
and
or
inc
pop
sbb
mov
mov
sahf
cmp
or
mov
add
pop
fsubrl
jmp
sahf
mov
push
pop
fldcw
jo
aaa
pop
mov
pop
sub
call
cmp
xchg
daa
mov
sti
xorb
lea
sub
dec
shlb
cs
data16
or
cltd
mov
or
cmpl
mov
push
push
add
leave
inc
nop
adc
loope
pop
add
shl
imul
push
push
add
mov
int
fmuls
or
enter
add
out
push
add
push
rolb
jl
jmp
xchg
fdiv
mov
dec
push
add
insl
mov
std
js
inc
inc
or
fidivs
or
js
cs
inc
and
addl
sbb
enter
xchg
into
jge
pop
hlt
movb
aaa
mov
pop
adc
push
jl
xchg
imul
mov
mov
jo
or
sbb
sbb
jns
add
pop
sbb
mov
call
sbb
ficoml
jge
mov
lea
icebp
pop
adc
push
jl
or
fstl
jo
inc
das
aam
dec
hlt
and
aam
mov
shlb
sbb
jmp
adc
xor
shlb
jmp
js
stc
cwtl
pop
sti
xor
xor
test
or
subl
pop
aam
sub
test
test
add
les
dec
push
pop
xchg
shlb
adc
push
arpl
jo
add
push
divb
rcrb
jbe
dec
xchg
xor
cmpsl
xor
inc
data16
movl
sub
seta
or
push
inc
mov
mov
inc
add
inc
inc
add
inc
in
push
pop
sbbb
enter
jae
sbb
push
pusha
or
fs
jo
je
js
lods
add
std
cmp
inc
add
into
inc
cs
cmp
xchg
mov
inc
jecxz
push
je
aaa
popa
or
add
sub
xchg
es
mov
add
mov
fisttpll
push
sbb
xchg
test
xchg
or
push
cltd
xchg
stos
pop
jne
test
jle
lahf
inc
cmp
mov
dec
xor
pop
sbb
push
inc
imul
cltd
mov
or
pop
fldt
mov
nop
mov
icebp
inc
popf
xchg
clc
adc
sub
push
incl
jne
mov
lcall
or
mov
movsl
sub
loope
mov
je
mov
test
cvtps2pd
jo
push
enter
rol
inc
mov
xor
mov
mov
xchg
pop
nop
std
in
sub
pop
loopne
call
sbb
pop
sarb
sub
sbb
lock
pop
scas
jle
sub
loope
inc
sub
or
fsubrs
adc
add
and
mov
jns,pn
sbb
inc
cmp
xor
mov
sbb
or
mov
adc
nop
cmpsb
clc
imul
jne
cmp
in
dec
add
jge
push
xchg
into
aam
and
or
faddl
push
or
cmp
xchg
mov
sbb
mov
push
cmpsl
mov
xchg
xchg
xchg
inc
jnp
mov
cwtl
sti
or
xchg
js
rcl
icebp
cmpl
push
and
cmpl
or
fistl
sarl
loopne
lea
jmp
dec
ja
cmp
xlat
das
push
sub
incl
insb
adc
int
jle
loope
sbb
or
pop
pop
test
xchg
xchg
add
cmp
xor
lock
rcll
js
aad
jns
sub
sbb
cmpb
test
clc
in
fsubrl
push
mov
imul
xchg
aad
cmpb
push
sub
inc
sub
in
adc
adc
xlat
sub
push
lret
push
add
adc
js
shl
sbb
stos
insb
add
dec
adc
mov
movsb
hlt
pop
movb
sub
xchg
xchg
pop
adc
adc
out
jg
push
mov
and
ss
mov
pop
sbb
pop
movsl
inc
nop
push
and
sbb
nop
xchg
lods
mov
clc
cmp
or
xchg
fldt
in
daa
mov
in
inc
add
pop
and
test
test
mov
or
cmp
in
pop
adc
push
pop
pop
loope
add
cmpsl
das
cmp
adc
adc
add
ja
inc
or
mulb
jb
inc
pop
cld
push
movsl
xchg
mull
sbb
jbe
aam
lret
clc
dec
enter
mov
jg
mov
call
push
cmpsl
mov
or
fs
fnstenv
sbb
dec
fisttpl
ljmp
add
sahf
cmpsb
cmp
sub
inc
loop
ja
bound
rcll
cmpsb
pop
sbb
subl
gs
dec
adc
xor
nop
in
bnd
sbb
add
adcl
repnz
andb
jne
and
std
popa
jp
movsl
sub
lods
jnp
xor
inc
in
dec
test
mov
mov
in
pop
xor
test
or
add
sub
aam
xchg
jae
mov
push
or
jne
std
popf
inc
pop
mov
add
sub
lock
fisubrs
or
sbbb
insl
pop
loope
adc
movsb
hlt
fsubs
popa
add
mov
leave
mov
test
adc
fildll
loope
fldl
jl
and
add
repnz
test
enter
insl
dec
loop
cmpb
sbb
hlt
insl
mov
adc
push
orl
or
cltd
roll
sbb
imul
roll
mov
fdivl
rclb
clc
mov
add
or
orb
cmpsb
adc
cmp
int
pop
dec
dec
xchg
inc
ljmp
sarl
lahf
lods
icebp
rol
adc
enter
mov
cmp
jmp
fistpll
or
dec
in
outsb
push
insb
adc
add
pop
xchg
add
or
outsl
nop
pop
and
cmp
xor
pusha
loope
and
adc
or
add
sbb
out
push
rol
gs
push
and
cltd
dec
shrb
mov
add
imul
std
xor
repnz
jae
mov
punpcklwd
cmp
pop
xor
dec
add
int
insb
cmp
xor
ret
or
clc
mov
mov
adc
jp
mov
xchg
jp
xor
add
aam
sub
mov
adcl
add
push
aad
cmp
test
mov
shll
test
and
insb
and
adc
sub
addr16
hlt
ret
dec
enter
fs
dec
xor
cmp
jmp
sub
jmp
mov
loopne
daa
jg
das
lods
xor
sbb
adc
das
cltd
or
mov
sbb
in
inc
xchg
in
jecxz
mov
xchg
outsb
mov
movb
inc
loop
je
pop
lods
dec
inc
enter
or
in
or
add
insl
sbb
or
xchg
hlt
inc
je
dec
je
push
push
into
push
mov
pop
cmp
lea
push
pop
sbb
lcall
ret
and
lock
mov
fmull
adc
inc
add
popa
inc
lods
aad
or
rolb
icebp
addb
add
jmp
sbb
vunpcklpd
adc
adc
les
sub
addr16
xchg
pop
test
add
sbb
pop
push
mov
adc
cmp
cmp
adc
xchg
jle
loopne
dec
adc
jmp
pcmpeqd
and
mov
adc
or
dec
xchg
jmp
cmp
test
es
cmp
fbstp
rcll
adc
mov
pop
aad
outsb
cld
or
in
mov
adc
hlt
add
out
dec
xchg
flds
aaa
mov
add
stos
add
arpl
fcoms
or
pop
roll
stc
add
xor
adc
push
repnz
pusha
and
adc
pop
xchg
sub
aad
adc
add
fstpl
pop
cltd
and
insl
mov
ffreep
or
inc
inc
sti
jle
add
jb
adc
xchg
insl
pusha
ja
stc
jg
mov
sbb
test
jne
pushf
or
lods
sbb
mov
lds
sbb
int
and
pusha
jmp
sbb
add
pop
sub
adc
push
xor
jmp
adc
js
inc
cmpsb
clc
ds
xchg
sbb
add
xchg
sbbl
inc
enter
add
sbb
call
dec
addr16
dec
cmp
push
sub
mov
mov
or
sbb
fsubs
add
aad
loope
cmp
jne
mov
mov
imul
mov
sti
lahf
fcmovb
dec
dec
xlat
lret
cli
inc
add
aam
jge
cmp
push
push
mov
das
fmuls
inc
mov
lods
pop
movsb
mov
mov
shrl
cmpl
inc
mov
testb
push
mov
fwait
adc
and
jne
sub
add
jl
and
or
lcall
pop
sub
add
mov
pop
rorl
and
add
rcrb
lds
outsb
cmp
add
insl
jo
adc
mov
shrl
add
lea
push
subb
or
cmpb
xchg
or
ret
lock
sahf
addr16
pop
sbb
dec
jns
cmp
sbb
or
or
pop
in
fsubl
mov
clc
popl
shll
pop
xchg
and
in
push
testl
sbb
push
add
lods
inc
roll
out
inc
sbb
enter
sbb
ljmp
das
pop
xchg
dec
repnz
fidivrl
in
addl
or
add
fsubs
push
fnstsw
cmp
fdivs
cmp
dec
imul
push
inc
and
cmp
hlt
mov
and
dec
sbb
in
add
and
or
je
xchg
fisttpl
add
inc
fsts
xchg
rorb
push
or
lcall
rclb
mov
xor
in
loopne
sbb
cmp
int3
jne
mov
mov
imul
aam
jmp
pop
divl
fwait
mov
sub
shrb
mov
xor
nop
rolb
jge
rolb
daa
cli
cmpsb
and
mov
lock
fisttpl
les
and
das
adc
je
dec
dec
fs
cmovbe
push
and
and
insb
dec
xor
divl
push
add
mov
mov
sub
and
mov
scas
shlb
movsl
rorl
jne
sub
loopne
in
call
aam
and
aas
xchg
rclb
lret
inc
mov
shlb
mov
inc
jns
cltd
nop
data16
mov
mov
mov
push
in
mov
pop
dec
fstpt
mov
lods
cmc
sub
inc
ds
or
xor
inc
inc
and
cmp
jle
or
jmp
jmp
mov
push
pop
mov
jns
ss
push
push
jbe
das
shr
mov
add
shr
rorl
ja
inc
pop
xor
and
jo
and
mov
cs
lods
mov
idivl
call
aad
inc
sbb
cmpsl
stc
lock
dec
push
mov
add
mov
and
push
xorb
adc
inc
jbe
loopne
cmpl
lcall
pop
dec
jmp
cmp
xchg
add
pop
xor
jo
adc
add
inc
jo
adc
and
mov
call
aad
jmp
jle
jbe
adc
jne
adcl
lea
xchg
mov
lds
outsl
inc
cmp
mov
push
push
or
and
sbb
mov
mov
test
mov
das
xor
inc
mov
pop
and
cld
push
and
push
stos
in
xor
je
mov
cld
add
or
sahf
fildl
sub
push
sub
adc
push
sbb
pop
aam
add
fdivs
sbb
imul
mov
mull
and
and
imul
or
adc
test
ret
inc
xor
or
inc
mov
or
and
adc
add
xchg
add
repnz
repz
test
xchg
mov
aam
push
jmp
pushf
movsl
mov
movhps
xchg
les
lods
jmp
fidivs
movsl
fucomp
mov
jno
addl
adcb
xor
cmpsl
scas
add
xchg
inc
and
or
jnp
add
mov
loopne
gs
and
and
sub
add
push
es
push
icebp
adc
mov
and
sbb
or
sbb
add
je
sahf
xor
movsb
jnp
lea
inc
movsb
sub
mov
xchg
popl
push
mov
sbb
cmpsl
inc
xor
loop
jmp
test
lds
popa
jne
and
sbb
out
repnz
or
or
add
int3
or
adc
outsl
in
loope
push
push
psubb
and
cltd
sbb
aaa
and
add
inc
or
mov
movsb
push
inc
add
jp
test
mov
mov
sub
dec
or
sbb
fs
pop
pop
outsl
mov
gs
push
push
fwait
sbb
mov
and
inc
loope
daa
inc
push
push
push
mov
pop
fisubs
jp
xchg
xor
push
jmp
xchg
push
mov
cmp
mov
pop
xor
dec
testb
movlps
or
mov
cmp
adc
sub
mov
mov
orb
jne
cmp
add
aaa
add
popa
stos
jb
nop
push
xorl
xor
push
jecxz
sbb
pop
loope
cmp
jno
mov
arpl
test
fsubrl
imull
sbb
mov
mov
subl
mov
lods
push
push
in
cli
movsl
movsb
in
mov
test
xor
lcall
out
lds
or
and
mov
xor
pop
lret
push
push
mov
out
lahf
test
xchg
pop
loopne
shll
xor
add
data16
add
int3
test
jbe
pop
adc
and
pop
and
adc
dec
call
add
xchg
cs
sub
add
mov
mov
xor
sarb
dec
das
test
xor
adc
sbb
pusha
push
push
pushf
pop
push
ficoml
jl
push
push
je
add
outsl
push
aam
mov
and
jnp
adc
add
sbb
or
push
jl
sub
cmp
mov
mov
ret
sub
or
shll
jno
xor
loopne
mov
xor
lods
xchg
xlat
push
jnp
ret
jno
inc
push
mov
mov
sub
inc
sub
jbe
jmp
inc
pop
fcmovnbe
and
stos
sbb
add
dec
xor
loope
inc
push
iret
leave
rol
andb
push
fstl
pop
repz
mov
mov
dec
and
add
push
jecxz
ljmp
or
push
imul
inc
lods
add
clc
rclb
mov
adc
cmpsb
movsl
cmp
or
xor
inc
and
push
sub
add
pusha
inc
cmpsb
leave
or
cld
xchg
insl
ffree
and
loope
sar
outsb
fistl
jge
mov
sub
push
icebp
adc
enter
add
sub
add
rorb
fmuls
cld
sub
movsb
xlat
inc
xor
cmpsl
sub
ljmp
popa
shlb
dec
pop
add
das
arpl
inc
call
imul
rclb
inc
mov
lock
sub
test
aam
ret
cmp
inc
cmp
jge
and
mov
repz
loop
mov
adc
or
and
and
mov
insb
mov
inc
mov
out
addb
push
or
xchg
and
or
inc
add
or
xchg
sbb
inc
mov
and
movsl
add
into
int3
and
and
addr16
mov
nop
cmc
dec
mov
les
stc
dec
lea
les
and
inc
mov
push
and
mov
mov
das
ret
sti
cmpsb
push
in
hlt
or
cmpsb
jecxz
inc
mov
xor
push
adc
mov
test
and
xor
pop
pop
xorl
shll
les
in
out
mov
push
out
cmpsb
mov
pop
inc
addb
subb
lods
mov
in
std
push
movsb
or
add
nop
test
ja
aas
jmp
jo,pn
loope
inc
push
adcb
xchg
push
adc
push
out
add
mov
lods
xlat
push
fildll
mov
out
pop
mov
pop
lcall
jo
dec
popf
out
je
pop
sub
hlt
scas
cmp
scas
testl
js
cltd
add
push
xor
orl
xchg
mov
faddl
test
bound
mov
sbb
or
push
pusha
push
lds
and
or
xor
pop
jno
inc
push
rolb
test
adc
cmp
and
pop
or
in
repz
test
pop
nop
push
sub
inc
ljmp
inc
fadds
push
inc
xchg
jle
adc
add
lods
cmpl
and
pusha
add
jbe
adc
and
fs
in
xor
arpl
push
nop
add
ja
mov
in
add
dec
xor
jmp
push
out
sbb
aad
test
mov
lret
sbb
xor
xor
or
mov
or
add
das
cmp
mov
mov
push
inc
adc
or
mov
lods
addb
les
mov
call
cmp
mov
dec
inc
cmp
push
and
je
stos
adcb
fildl
mov
insb
addb
add
fistpll
orb
sbb
mov
mov
ret
es
mov
scas
or
adc
pop
sbb
dec
pop
fists
xchg
jb
fwait
out
mov
push
sbb
dec
sbb
sysenter
les
pop
xor
mov
add
lock
or
jnp
rcr
aaa
adc
jg
mov
lds
and
loop
or
push
hlt
add
dec
add
dec
dec
outsb
inc
cmp
je
test
adc
xchg
imul
ss
add
jne
pop
pusha
lea
or
dec
jne
nop
push
mov
inc
adc
jecxz
fimull
xchg
xor
loop
loopne
sbb
call
push
fmul
lcall
xor
dec
push
shr
das
adc
insl
cmp
lahf
xchg
jne
and
inc
cmp
add
bound
mov
pcmpgtw
inc
add
sbb
loopne
add
add
mov
lods
add
std
and
pop
aaa
pop
dec
mov
mov
add
push
mov
cmp
sbbl
mov
mov
je
push
shlb
xor
mov
jo
sub
pop
sbb
dec
mov
testb
shl
lods
dec
cmp
sti
stc
rcrb
and
or
or
leave
sub
or
movb
fs
push
cmpsl
pop
repnz
mov
test
gs
lcall
adc
adc
jle
or
inc
sub
and
lea
dec
sbb
mov
jae
add
sbb
adc
in
dec
xchg
aaa
inc
or
dec
and
add
sub
fiaddl
mov
mov
mov
sbb
push
cmpsb
mov
adc
sbb
or
push
cwtl
cmpsb
imul
popa
aaa
cmp
lock
aaa
pusha
repz
rcl
add
mov
cmpsl
pop
scas
dec
aaa
mov
cmp
inc
sub
jmp
cmp
dec
imul
and
sbb
int
imul
xor
mov
push
cmp
mov
shlb
or
ret
rcll
push
sbb
inc
pop
ret
and
jmp
mov
cmp
inc
ss
xorb
sarb
adc
fnstcw
test
mov
clc
sysret
movsb
cmp
inc
and
andb
cld
pop
push
push
push
or
fs
push
mov
cmp
imul
inc
push
je
add
sbb
mov
sub
arpl
cmp
and
adc
mov
push
and
and
push
adc
pop
int
orb
enter
or
sub
push
pusha
push
and
aam
add
mov
fisubs
cmpsl
or
mov
movsb
mov
mov
push
sbb
neg
sbb
aas
in
and
jg
fisttpll
jb
pop
mov
addl
cli
xchg
les
sbb
xor
hlt
and
dec
pop
adc
xchg
mov
inc
dec
sbb
and
enter
push
enter
jl
inc
insb
divb
in
enter
xor
push
aad
jl
xlat
in
movsb
in
dec
clc
aaa
push
sar
shlw
push
sub
inc
add
jle
cwtl
lock
imulb
int3
std
inc
dec
cmp
repnz
je
mov
adc
inc
jecxz
nop
jle
fsubrp
xrelease
pop
xor
outsl
xchg
add
push
jl
inc
cmp
dec
insb
add
lahf
dec
mov
push
in
loopne
pop
xchg
sbb
cwtl
outsb
test
out
call
pop
fistpll
addb
add
rep
in
mov
je
add
add
dec
pusha
inc
mov
repz
rorb
bound
sub
std
dec
mov
data16
xchg
daa
fbstp
clc
gs
out
cmp
add
stos
mov
enter
dec
jle
mov
add
cmp
cmp
mov
push
pop
and
rorb
xor
js
dec
mov
repnz
imul
mov
xor
xchg
outsb
outsl
lret
imul
loopne
and
cwtl
in
out
cmc
add
adc
xor
sub
xor
clc
pop
gs
add
lods
push
add
fadd
nop
pop
fbld
inc
or
hlt
inc
jns
fcmovnu
add
shlb
mov
sub
push
repz
mov
jmp
cmp
inc
mov
or
aaa
jns
cmp
xor
test
add
push
pushf
aad
dec
push
roll
leave
add
movsl
and
add
push
popa
pop
call
mov
inc
notb
cmpsl
aam
sbb
rorb
cwtl
je
mov
or
das
sub
adc
sub
mov
leave
lods
pusha
mov
data16
jl
pushf
mov
shlb
mov
sbb
subb
push
gs
insb
xchg
mov
pop
mov
or
or
mov
mov
push
mov
in
dec
or
cmp
sub
push
cmp
test
or
xchg
lds
mov
add
das
rorb
cld
fs
cmp
sbb
or
daa
cltd
or
pushf
bound
ja
jbe
pop
add
aaa
ret
in
popf
pop
mov
adc
mov
jne
fdivs
clc
scas
pop
or
or
jge
jno
sbb
sbb
add
nop
sub
pop
popf
add
xor
cwtl
adc
dec
lock
sbb
int3
xor
fistpll
push
dec
xor
sbb
push
in
push
je
call
and
add
aad
dec
pop
lahf
out
sub
mov
push
inc
popa
xchg
and
jnp
stos
mov
dec
or
mov
pop
pusha
mov
lock
jo
sub
ljmp
add
dec
push
push
push
or
mov
pop
pop
add
fbld
push
mov
je
sub
lret
js
test
aas
sbb
loopne
jg
test
inc
call
cmp
push
sti
adc
push
mov
mov
scas
idiv
push
stc
ds
dec
pop
jnp
and
dec
mov
daa
cmp
stos
inc
aam
push
fstl
cmpsl
mov
int
mov
dec
or
add
pushl
movsb
jnp
loop
les
pop
sbb
mov
enter
aaa
dec
push
xchg
call
loopne
aaa
adcb
incb
and
push
pop
jmp
sub
pop
and
jns
sbb
sbb
enter
dec
aaa
jo
cli
out
mov
sbb
and
push
scas
data16
cmp
adcb
fdivr
rolb
mov
popf
add
mov
lcall
pop
pop
push
imulb
xor
jne
push
jge
ds
adc
sbb
pop
fs
rep
inc
cmp
cmp
clc
add
cmp
cli
sub
xor
add
dec
int
adc
mov
aam
inc
cmp
sub
js
loopne
mov
push
call
pop
or
jg
adc
mov
adc
add
shlb
pop
fwait
and
mov
cmp
in
call
lret
push
shrb
dec
push
jg
xchg
std
fsubr
mov
sub
call
mov
inc
aam
jl
out
movsb
into
aam
call
cmp
pop
mov
cmp
add
test
fiadds
xor
sarb
sub
icebp
lea
popa
xor
add
andb
inc
test
ret
call
int3
mov
adc
adc
pop
fidivs
dec
xor
add
sarb
fisubrs
dec
xchg
inc
enter
mov
inc
test
and
dec
cmp
push
jle
sbb
mov
sti
dec
sarb
dec
psubq
in
fldenv
out
in
jl
jne
pushl
mov
insl
mov
pop
inc
ficompl
push
aad
stos
jl
mov
into
mov
pop
mov
mov
iret
sub
lods
mov
lods
push
and
push
sub
push
sbb
jl
flds
pop
lret
pop
push
sbb
xor
mov
leave
cmp
mov
xchg
mov
jo
dec
in
xchg
xor
cmp
leave
sti
add
adc
out
repnz
mov
cwtl
sbb
movsb
ret
mov
xor
movsl
jb
test
pushf
dec
in
in
add
cmp
out
mov
mov
dec
in
mov
mov
enter
add
out
lods
add
test
mov
xor
sbb
push
les
arpl
lahf
hlt
add
sbb
inc
xchg
insl
jp
fdivs
mov
andb
loope
clc
jecxz
cmpb
pusha
mov
pop
pop
call
pusha
daa
andb
aas
stc
idivl
cwtl
mov
push
jbe
sahf
inc
sti
mov
inc
pop
mov
cmp
ret
jmp
imul
add
incb
jo
cmp
das
ja
add
test
or
push
movsl
adc
das
ja
add
xor
imul
js
xor
imul
jnp
orb
xor
jnp
jns
addr16
outsl
aas
push
add
fdivrs
cmp
push
movsl
jne
mov
ret
scas
xor
aaa
es
movsb
in
jle
jle
cmp
xor
or
sub
and
aaa
push
cmp
mov
inc
jb
push
xor
cmp
inc
add
cmp
xor
xor
xchg
sub
rclb
inc
sub
jo
adc
push
add
cmpsl
insl
sbb
pop
jno
lds
push
adc
negl
xlat
pop
jno
pop
push
push
jbe
jb
pop
sbb
mov
sbb
and
jbe
in
mov
dec
inc
outsl
sbb
ja
push
cmp
push
or
push
cmpsl
cmp
orb
mov
mov
mov
sub
sbb
out
sahf
jne
inc
mov
xor
and
xchg
adc
mov
dec
test
inc
addr16
js
clc
addr16
push
push
and
and
sub
ret
push
jbe
mov
add
inc
scas
mov
jne
pop
aaa
in
xor
jne
jno
sub
out
fadds
add
mov
add
mov
jnp
inc
test
es
push
xor
repz
pop
cwtl
movsb
lods
mov
cmp
notb
in
dec
in
repnz
sbb
adc
inc
and
dec
nop
lret
adc
insb
cmp
pop
mov
and
dec
in
es
insl
mov
inc
jb
pop
push
leave
js
mov
inc
jb
nop
cwtl
xchg
pop
and
mov
jb
shl
jns
pop
and
add
xchg
mov
and
mov
cs
mov
pusha
andb
loopne
adc
mov
add
jb
pop
jo
pop
and
jmp
add
xchg
pop
leave
inc
shlb
and
pop
leave
inc
repnz
add
daa
xchg
push
adc
shlb
xchg
orb
or
or
sub
and
ljmp
cmp
out
lret
int3
enter
enter
fcomp
mov
loopne
jecxz
jmp
nop
dec
enter
sahf
mov
jne
je
and
and
cld
es
add
and
ds
inc
cmpsb
dec
test
or
mov
pop
push
push
adc
or
add
or
inc
push
adc
add
ljmp
mov
sbb
add
sbb
sbb
fiaddl
sbb
divl
aam
xchg
adc
xor
pop
push
push
push
aam
insb
pusha
adc
stc
cmp
dec
stos
pop
push
clc
and
and
loopne
imul
arpl
sbb
pusha
les
out
outsl
add
decb
out
pop
pop
pop
test
push
push
jns
orb
sahf
out
mov
ror
out
sahf
out
loopne
lock
iret
repz
add
sub
repz
cmp
push
repz
repz
pusha
push
mov
leave
leave
leave
leave
add
fs
repnz
push
mov
cld
cmp
cmp
fmuls
xchg
inc
into
sahf
mov
fcoms
xchg
adc
xchg
add
data16
out
lea
call
or
in
xchg
repnz
push
push
sbb
inc
outsb
repz
dec
mov
clts
div
inc
xor
or
or
andl
fdivrl
out
push
hlt
adc
xor
jns
out
mov
repz
adc
dec
fs
sahf
iret
repz
enter
add
add
adc
mov
add
dec
sahf
jmp
jno
jmp
fisubrl
pop
cmp
mov
push
les
sarl
js
int3
fs
push
and
or
imul
aas
fcoml
dec
clc
push
adc
jns
sbb
push
xor
push
pop
add
mov
fsubrl
mov
push
test
loopne
insb
les
sub
imul
jae
aas
adc
pop
push
sbb
and
push
movsl
jmp
pushl
pop
pop
in
repz
lods
cmpsb
lret
aam
push
hlt
iret
jnp
jg
mov
or
push
add
repz
mov
mov
stc
cmp
repz
adc
pop
out
sahf
cmpsl
adc
add
xchg
sbb
sbb
adc
jns
mov
push
js
out
sahf
sbb
cmp
jnp
mov
pop
cmp
jae
addb
push
rcrb
pop
or
fistps
xor
sahf
out
sbb
jo
cwtl
js
out
add
out
jae
jno
pop
mov
add
loopne
outsb
or
xor
andl
out
dec
pusha
mov
mov
iret
repz
mov
mov
repz
repz
out
sahf
out
out
inc
pushl
mov
cmp
push
cmp
addb
or
fimuls
push
adc
std
sbb
and
add
negb
add
inc
adc
or
or
out
cmovle
add
repnz
jne
loopne
add
adc
sbb
nop
pop
adc
add
push
xchg
arpl
jne
sbb
outsl
mov
xchg
mov
push
lock
imul
add
lahf
lock
int
popf
psubb
add
xlat
cli
adc
add
push
lock
mov
sahf
ja
push
clc
and
scas
lods
call
cmc
rcl
ud0
add
out
aad
sub
sbbb
pop
in
add
lock
push
cmc
and
ja
sub
cmp
mov
cmp
fimuls
jmp
in
add
push
jae
push
fidivrl
mov
dec
imul
mov
pushf
clc
jns
out
mov
pop
repz
mov
jg,pn
jg
sbb
packsswb
pushf
fcoml
add
out
shlb
imul
cmpsl
mov
in
mov
jnp
xchg
pop
movsl
out
cmovne
scas
jmp
and
lret
inc
sarb
mov
push
sub
aas
add
mov
cltd
pop
ror
fsubr
call
cli
cli
sar
repz
lds
mov
push
and
ljmp
add
scas
loopne
lock
lock
xchg
lahf
jg
aam
push
mov
test
movsl
and
lods
in
jo
stc
lock
add
imul
icebp
out
xor
dec
lcall
push
cwtl
sti
cwtl
add
data16
add
cmp
jno
repnz
dec
dec
jae
xchg
repnz
imul
mov
or
push
xor
ds
sub
jg
dec
cli
lcall
or
stos
add
scas
out
imul
lods
fsub
hlt
sbb
lahf
mov
fs
in
add
cld
sti
push
push
cmc
dec
add
dec
ror
add
mov
incl
rolb
nop
sarl
mov
jmp
imulb
inc
imul
idivb
pop
push
sbb
jo
mov
roll
add
lahf
mov
in
mov
jns
incl
mov
nop
mov
aas
jg
pop
add
xchg
add
add
cltd
out
movsl
rolb
push
mov
jl
out
jg
adc
jo
add
mov
loop
stc
aad
xlat
insb
outsb
mov
jo
add
mov
call
add
mov
add
out
cmp
js,pn
cli
push
fidivl
push
frstor
xchg
jg
fdivrs
imul
stc
mov
fiadds
hlt
jnp
outsb
sub
jle
mov
push
mov
push
roll
ficomps
mov
xlat
push
pop
in
inc
cmpb
cs
push
jnp
xor
nop
add
ds
pop
mov
imul
xchg
sarl
sub
int3
sahf
jg
das
dec
dec
add
add
int
addr16
scas
vmwrite
mov
clc
call
repz
sbb
or
inc
and
iret
fstpl
push
pmulhuw
or
cmp
jns
in
push
push
pop
push
pusha
push
js
mov
iret
jnp
jbe
xor
inc
push
pop
iret
repz
jo
movsb
mov
imul
movsb
and
sub
inc
push
pushf
add
pop
or
adc
out
add
daa
mov
rclb
mov
ss
nop
add
add
dec
jne
scas
roll
mov
insl
mov
outsl
das
jl
inc
movsb
out
or
or
add
dec
and
shr
pop
or
nop
daa
mov
out
sahf
ja
test
std
cld
loopne
repz
cli
cld
stc
and
clc
inc
cmp
repz
testb
hlt
enter
jns
iret
repnz
icebp
and
sahf
out
sahf
inc
out
push
lcall
jmp
mov
jg
ss
add
lods
add
add
pop
andb
add
or
dec
divl
orb
icebp
push
decl
or
or
add
iret
repz
jle
push
int3
fsubr
cld
or
and
inc
push
pop
jns
out
jo
nop
pushf
mov
jns
out
int3
loopne
add
mov
cmp
adc
push
xchg
mov
sub
add
xchg
pop
repnz
daa
sbb
push
rorb
daa
movzwl
cmp
pop
insl
rorl
dec
and
gs
call
pop
mov
aaa
push
xchg
ja
pop
add
mov
faddp
jg
jg
stc
mov
repz
mov
cmp
repz
incb
add
repz
repz
aas
iret
add
shl
add
jo
stos
inc
adc
dec
push
bnd
cmpsl
fiadds
dec
sbb
mov
pop
cli
add
inc
pmuludq
push
adc
xor
mov
pop
mov
or
shlb
and
mov
xor
int
push
js
mov
pusha
shrb
push
sub
fadds
dec
push
sub
cld
ficoms
insb
sbb
push
jae
jns
dec
rclb
pop
outsl
pusha
iret
popf
out
jns
and
ss
pop
mov
push
clc
dec
inc
push
call
aam
inc
pop
push
scas
push
ds
lock
cwtl
dec
data16
sbb
gs
cmp
rolb
push
mov
arpl
cmp
loopne
scas
out
or
xor
or
call
push
mov
mov
ds
xlat
jl
cs
dec
lock
outsb
push
pushl
ds
test
inc
push
jl
xor
ss
aas
xchg
rol
rcrb
das
sahf
push
mov
cmpsb
das
push
out
test
sub
lock
mov
jns
push
les
push
shrb
test
adc
cmpb
dec
enter
jnp
int
insb
ds
jbe
inc
push
mov
scas
loopne
mov
xor
mov
mov
es
or
jbe
mov
jecxz
testl
dec
mov
mov
sbb
fdivrs
xor
mov
add
daa
pushf
jae
out
push
mov
pusha
or
testl
outsl
loop
sub
out
mov
nop
inc
pop
dec
repz
iret
iret
adc
xlat
call
push
mov
ficomps
filds
pop
ror
sbbb
vshufps
mov
scas
nop
xchg
mov
dec
out
sub
sbb
pop
jg
int3
push
pop
inc
loope
pxor
pop
sbb
je
fadds
jecxz
jp
outsb
xchg
fcomps
sbb
lods
xor
rcll
shrl
mov
jo
nop
loop,pn
push
lret
js
or
jge
iret
jo
clc
subl
mov
notl
enter
out
js
push
lock
lahf
cs
cmovbe
out
inc
push
pop
xchg
aam
mov
fcompl
aaa
push
sahf
cmp
xor
mov
shlb
pop
test
adc
nop
pusha
pushf
rolw
sub
fdivrp
sahf
mov
cs
mov
test
xchg
adc
nop
push
add
sub
inc
lock
sbb
push
mov
mov
cmpb
mov
push
add
push
add
sub
filds
andl
sub
inc
add
movsl
fstpt
jecxz
pop
aaa
or
neg
inc
sbb
inc
pop
inc
add
ja
jge
pop
dec
aaa
push
pop
dec
add
mov
fdivl
add
adc
dec
xchg
mov
jmp
push
loop
push
inc
mov
mov
xor
or
dec
xor
or
mov
cmp
push
mov
jl
inc
or
pop
mov
loopne
addr16
out
xor
jnp
or
in
stc
cmp
dec
dec
mov
xor
mov
roll
sbb
cld
mov
push
pop
mov
int
mov
push
push
jb
addr16
test
and
mov
jb
outsb
and
cmp
mov
or
pop
add
and
cli
pushl
rorl
sbb
nop
add
fldenv
mov
add
jo
repnz
mov
int
into
add
mov
pop
negb
aaa
cmp
int
into
or
push
insb
pshufw
repnz
rcll
jl
adc
or
xor
pop
push
push
pop
xor
or
int
and
aas
inc
sti
loopne
decl
jb
idivb
rol
arpl
xchg
add
add
xchg
jge
call
lahf
xor
xor
or
notl
xchg
insl
and
fdivp
pop
mov
adc
es
inc
test
and
sahf
add
sti
mov
add
add
sub
or
jg
movsb
pop
inc
mov
push
nop
inc
or
adc
incb
pushl
pop
pop
add
sbb
pop
int3
cld
jo
js
inc
add
adc
shr
cwtl
fcomip
push
insl
jle
fs
push
add
lret
adc
jmp
mov
pop
add
scas
jg
int3
add
xchg
add
jmp
inc
nop
enter
jg
cli
psubq
mov
mov
xlat
or
push
je
pop
adc
or
ja
push
pop
pop
add
pop
push
popa
ss
jg
popa
out
lmsw
pop
loopne
or
dec
pop
and
push
cwtl
and
or
mov
fnstcw
jmp
fdivr
cs
cmp
sti
xor
clc
push
sbb
outsl
mov
jg
loopne
fs
cmp
flds
push
jns
ja
mov
gs
mov
flds
add
gs
pop
push
inc
add
sbbb
hlt
wbinvd
dec
xor
adc
add
mov
aas
add
fists
pop
adc
xchg
int3
pop
add
jg
incl
sub
out
cmc
cs
or
les
mov
push
dec
push
adc
add
sbb
sub
pop
aam
imul
cmp
imul
lods
std
fs
add
loope
in
in
add
add
sti
push
pop
aam
xor
loopne
and
xchg
add
out
jg
cs
rclb
cmp
push
lret
cld
cmp
mov
gs
bnd
jo
and
insb
push
or
sti
cmp
pop
test
aas
test
mov
dec
leave
leave
in
in
pusha
subps
sti
sti
int
adc
mov
push
call
add
inc
inc
add
pushl
jb
mov
out
xchg
dec
cmovs
ret
pop
test
push
rcrl
popa
add
dec
and
mov
insb
lret
inc
adc
aas
or
mov
mov
and
in
out
imul
sti
lods
mov
ljmp
add
loop
push
je
inc
adc
xor
inc
mov
and
mov
insl
call
jns
out
and
js
ljmp
ljmp
push
test
jae
stos
lods
bound
imul
cmp
call
loopne
mov
dec
leave
xorb
in
insl
outsl
inc
and
pop
loopne
bound
test
sub
pop
add
pop
jg
add
sub
lods
adc
mov
cmpb
in
mov
lcall
adc
and
adc
cmp
std
mov
xchg
push
daa
and
sub
imul
add
fnstsw
push
adc
adc
lcall
outsl
and
cltd
not
lock
mov
add
sbb
cmp
int3
xor
pop
inc
in
ljmp
sub
imul
ficompl
pop
xor
mov
idivb
bound
cmp
imul
clc
into
jg
adc
jl
insb
add
mov
adc
xor
adc
decl
sub
inc
pop
add
dec
or
lock
mov
test
or
push
clc
inc
incb
push
sub
mov
ljmp
jae
dec
jne
pop
mov
and
cmpsb
cli
es
incl
sahf
mov
std
incw
sub
lea
in
mov
add
jnp
lods
inc
mov
loopne
sbb
jne
ja
adc
pop
add
ss
jne
mov
adc
ret
inc
push
hlt
adc
or
sbb
call
add
sbb
andl
mov
lock
and
clc
call
sub
pop
mov
mov
pusha
xor
cld
or
inc
fistps
mov
incb
loop
ljmp
jo
push
cmp
test
fcmovu
mov
sub
mov
cmp
sbb
push
lret
adc
rcrb
mov
lcall
sub
mov
out
clc
pop
inc
add
inc
or
sub
sbb
aaa
aaa
jmp
fs
clc
inc
mov
pusha
push
pop
hlt
ljmp
divb
mov
fstp
and
cmpb
mov
int
or
rolb
lds
incb
jle
nop
and
mov
scas
push
mov
sbb
loopne
and
fwait
and
xchg
push
cld
orb
mov
aas
dec
adc
sti
std
cld
pushf
or
cld
call
xchg
into
pop
mov
icebp
dec
sbb
lret
jle
mov
mov
jle
outsb
faddp
fdiv
sbb
jae
jle
lods
std
mulb
rclb
incl
divb
jg
or
jns
jns
cmp
pop
or
jg
jg
clc
incl
or
in
jg
in
jne
push
clc
les
inc
pop
push
rorb
jmp
inc
data16
fimull
mov
add
lock
out
addb
insb
ret
jg
call
lods
loopne
and
jmp
fidivrs
loope
mov
mov
pop
or
out
mov
sti
shl
cs
xchg
xor
or
push
lock
test
push
fiadds
out
mov
aam
inc
push
and
out
sbb
nop
and
add
dec
and
sbb
adc
decl
repz
lods
iret
xor
adc
cmp
pusha
push
mov
xor
dec
ficoml
das
jle
pusha
or
push
xor
clc
xchg
inc
clc
dec
xchg
jae
or
add
dec
icebp
mov
or
addb
outsl
mov
fwait
cmp
cmp
inc
lock
cld
lds
cwtl
xor
mov
add
mov
mov
push
cmp
scas
or
push
in
sbb
or
jne
ds
xchg
das
cmp
mov
and
ljmp
imulb
outsl
sub
and
add
mov
decl
fs
dec
mov
cmp
adc
cmp
ficompl
es
mov
pop
shll
pushl
xorl
cmpsb
sub
lret
aas
mov
or
dec
data16
lods
cmp
sbb
dec
jecxz
inc
and
fsubrs
xchg
inc
or
sahf
mov
test
data16
push
jl
or
add
leave
cld
xor
aaa
xchg
add
clc
lods
mov
add
aas
lcall
movsl
addb
repnz
btr
mov
push
test
aaa
cmp
cli
dec
jnp
sub
fists
jp
inc
pushf
jmp
sbb
sbbb
das
fistps
sbbb
divl
add
sbb
jae
adc
hlt
push
mov
mov
jmp
test
add
mov
sub
mov
loope
and
dec
cld
xor
fists
test
outsl
jmp
mov
lea
bound
addr16
mov
ret
jmp
and
inc
lea
paddb
pop
imul
loopne
jbe
inc
add
ret
adc
push
pusha
fbstp
loopne
fdivp
jg
mov
fstpt
sub
sar
cmpsl
shl
call
adc
jb
or
xorl
jp
sub
jns,pt
aas
dec
or
push
pop
xchg
or
cmpsb
mov
and
push
cmp
call
test
push
pop
xorb
xor
js
setno
testl
add
test
add
cli
nop
lock
scas
push
ss
sar
das
dec
sbb
lahf
sbb
movsb
inc
ljmp
mov
out
fadds
data16
xchg
dec
repz
mul
xor
ficoms
push
fisttpl
xchg
inc
adc
cmp
jne
xchg
frstor
and
inc
pop
inc
dec
iret
push
xor
lcall
xchg
scas
ljmp
mov
pop
leave
outsl
mov
or
aam
inc
adc
sub
clc
jmp
call
adc
out
loop
fdiv
lcall
jb
mov
testl
jne
or
or
lcall
xorb
fiadds
xchg
lcall
xchg
mov
xlat
mov
or
rcl
and
lock
fistps
fldcw
ret
pop
dec
dec
addr16
clc
sub
sub
adcl
mov
sub
lahf
adc
mov
test
mov
lret
add
jmp
test
xchg
lret
add
add
lcall
ljmp
pop
push
in
or
in
movsl
pop
ja
or
cld
aas
jmp
sub
fidivrl
jb
loopne
mov
mov
daa
jg
or
xchg
je
adc
call
inc
adc
roll
arpl
hlt
sub
ljmp
mov
js
iret
mov
fiadds
test
call
addr16
mov
push
cmp
push
test
cld
lahf
aad
bswap
scas
lock
call
rcrl
inc
cld
fisubl
push
int3
push
mov
decl
ret
mov
andl
sub
lahf
adc
das
dec
in
mov
add
xchg
jge
inc
or
neg
push
cmp
lss
jmp
dec
or
clc
cmpsl
add
data16
cli
inc
ret
jmp
adc
mov
sub
das
mov
pop
clc
addl
inc
mov
shlb
mov
out
lock
inc
sbb
stc
call
and
test
in
sbb
pop
cmp
and
or
lcall
iret
pop
insb
and
out
outsl
add
rorl
sarl
js
je
iret
ja
cmp
js
pop
fidivs
lock
imul
test
add
cld
adc
mov
jmp
push
jle
sbb
or
lea
jl
mov
add
jecxz
push
pop
add
pushf
and
fistl
jae
pop
rcrl
fcomip
lcall
ds
dec
iret
push
gs
loop
xchg
and
clc
jge
lahf
cmpsb
shll
pop
test
mov
in
cmp
sbb
lea
jecxz
mov
loope
adc
lcall
and
ret
or
or
rcr
outsb
add
aas
jmp
pop
insb
hlt
mov
in
sbb
xchg
and
ja
mov
jmp
adc
cmp
adc
mov
sbb
inc
add
xchg
jmp
push
into
ret
and
cmp
jle
lock
push
sbb
aam
mov
fists
mov
scas
es
fists
xorb
shll
insb
push
mov
loop
or
aas
in
clc
or
ss
loopne
stc
mov
inc
sbb
jle
jg
add
dec
aaa
sbb
cs
enter
sbb
incl
add
inc
sbb
push
es
lret
push
aas
mov
xor
aaa
cmp
adc
inc
add
loope
and
and
and
call
add
pop
push
inc
vmovaps
pop
test
fcmovb
call
mov
xor
ds
xchg
and
outsl
mov
in
rcrl
xor
lcall
in
sbb
test
shlb
loopne
mov
outsb
sub
in
cmp
ja
pop
or
pop
and
push
lock
ss
and
movb
and
xchg
adc
out
xor
dec
inc
ljmp
lea
xchg
cmpsl
rcrb
call
xchg
fimull
iret
testb
mov
jge
push
or
sbb
rolb
ljmp
out
ja
mov
and
xor
arpl
aad
out
add
movb
lea
jmp
adc
jg
enter
cmp
pop
pop
pop
adc
fldcw
sbb
jmp
pop
enter
mov
dec
pop
in
aaa
and
in
je
loopne
out
mov
decl
mov
je
setne
sub
das
clc
jg
inc
dec
inc
sbb
adcb
jg
inc
inc
and
fisttpll
mov
out
mov
lock
jno
stos
xchg
int3
fildl
push
cld
test
stos
dec
enter
pop
adc
ljmp
adc
mov
and
mov
add
das
ret
mulb
loope
cmpl
cld
mov
add
js
fdivr
push
mov
inc
in
test
les
in
adc
jb
sub
fcompl
loope
dec
xchg
nop
pop
jo
notb
and
dec
loope
adc
xchg
repnz
pop
ljmp
add
add
jge
xlat
ljmp
clc
jge
inc
hlt
adc
adc
sbb
les
fisubs
pop
stc
jg
sub
lret
mov
rorb
push
sbb
xor
mov
sub
decl
pop
push
jg
dec
neg
jne
sahf
arpl
jl
jle
inc
clc
jmp
adc
cmpb
add
jecxz
mov
add
clc
incl
lods
xor
loope
out
jnp
mov
cmpl
jns
push
jmp
xchg
aaa
orl
stos
or
bnd
pusha
xchg
andl
cltd
filds
pop
adcl
add
mov
add
notb
decl
lock
in
or
ret
jg
mov
loope
adc
mov
add
call
add
lock
inc
xor
push
mov
mov
ret
cs
out
jb
mov
jnp
mov
cmpsl
lock
daa
and
faddl
inc
lds
lcall
incl
pop
dec
das
cmp
les
sbb
stos
dec
ficompl
push
pushl
call
insl
xchg
sbb
push
jle
add
jg
leave
jp
push
lock
mov
inc
mov
enter
lock
call
jle
int3
int3
mov
mov
ror
push
and
and
fisttps
adcb
arpl
ds
call
jmp
dec
adc
inc
jae
in
xchg
das
aad
in
mov
xchg
sti
cli
or
cmp
idivb
add
psubb
xor
negl
repnz
invd
shll
push
ja
loope
faddp
test
inc
aaa
add
loopne
aam
pushl
pushf
fldl
out
in
loope
frstor
pushl
pushf
in
dec
mov
ret
mov
scas
cmp
xchg
cmpl
lock
jg
xchg
mov
and
dec
shlb
fadds
dec
lcall
push
testb
testl
call
mov
mov
and
pop
push
ret
mov
pop
and
aaa
std
push
imul
or
decb
ljmp
filds
insl
sar
jmp
aaa
pop
pop
push
sbb
pop
sub
inc
ds
and
das
and
fs
sbb
push
xchg
pushl
dec
mov
cmp
mov
add
xchg
push
loopne
loope
sbbl
pushl
ja
frstor
js
jle
test
cmp
add
pop
gs
mov
dec
ja
sbb
mov
dec
xchg
xchg
add
int
mov
push
stos
jle
pop
lock
dec
jne
in
into
lret
fs
xor
call
lret
lods
fiaddl
mov
xor
mov
out
add
cmp
add
out
add
mov
adc
cmc
pushl
inc
xor
int3
nop
scas
mov
in
clc
mov
cmpl
push
or
adc
xchg
ja
and
aad
jge
call
sbb
inc
adc
fildll
out
rolb
jnp
add
sbb
fnsave
mov
push
andb
add
and
scas
clc
idiv
sub
sub
fisubl
inc
data16
xor
std
jbe
filds
inc
add
xor
ja
out
and
pushl
mov
or
pop
sub
mov
out
mov
and
xor
pushw
data16
rolb
call
cld
dec
xor
iret
cmc
imull
adc
mov
outsl
test
mov
aaa
andb
cmp
or
sub
jecxz
adc
ss
in
xchg
cmp
pop
push
push
mov
dec
jnp
dec
dec
cli
dec
add
popl
push
jns
rorl
dec
inc
cli
sbb
out
or
jg
inc
je
mov
shlb
incl
repnz
cmp
rol
ret
adc
mov
sbb
cmp
jg
aaa
mov
mov
loopne
mov
sbb
add
mov
pop
pop
repz
jge
push
push
loopne
popf
jl
xlat
or
push
pop
mov
ret
test
fidivrs
adc
daa
pop
lret
jbe
adc
jmp
ret
jle,pn
jae
cmp
adc
addr16
sti
call
mov
mov
clc
push
pop
or
inc
decl
lods
jns
or
test
or
xchg
frstor
ss
jb
addl
or
add
lcall
sbb
jo
int3
ret
aas
add
jle
push
push
and
add
jl
cld
pop
xchg
cmp
cld
call
ret
out
out
mov
mov
and
gs
mov
lea
or
repnz
repz
insb
jge
clc
scas
or
push
daa
push
incl
inc
mov
cwtl
movsb
fs
cli
clc
in
adc
and
lcall
and
push
add
ret
lea
mov
clc
push
lret
jbe
das
pop
call
lods
sub
rcll
incl
jg
xor
hlt
sub
lock
or
or
pusha
or
adc
mov
daa
xchg
sbb
lret
dec
mov
jns
cli
and
and
cmp
scas
jns
xor
aam
inc
pushaw
mov
and
imul
dec
or
adc
add
aad
rcrl
clc
imul
or
or
pop
sbb
adc
inc
unpcklps
decl
sbb
pop
loopne
pusha
inc
cmc
pop
jmp
lock
fistps
or
and
popl
cmpsb
and
add
incl
add
rcrl
push
add
ret
hlt
stos
into
mov
stos
dec
lock
adc
push
inc
cli
and
push
sti
decl
cmp
jne
es
mov
js
or
cmp
loopne
call
sub
outsl
inc
cmpsb
jo
and
cmp
jo
xchg
xorb
cmp
sub
inc
fstpt
and
loopne
mov
stos
jmp
pop
jmp
push
test
xchg
cmpl
xchg
ljmp
dec
cmp
pop
fistpll
hlt
push
jb
jle
fiadds
add
push
iret
clc
add
roll
sub
and
sbb
cld
pop
jg
ljmp
out
stos
add
lods
mov
mov
pop
pop
cld
adc
lea
jmp
clc
xchg
ret
mov
nop
jmp
dec
mov
lock
push
sub
call
inc
push
dec
inc
rorb
loope
lcall
mov
popa
push
cmp
paddd
loopne
ljmp
gs
sbb
mov
pop
xor
std
jg
jmp
xor
aam
les
leave
sub
or
cmp
das
shlb
or
push
xor
cmc
sti
fstpl
xor
imul
mul
jo
or
mov
dec
and
psrlw
jmp
pop
and
fnstcw
push
sub
sti
mov
pop
pop
inc
push
or
in
or
pop
or
sti
lods
jns
psubusw
fcomip
inc
dec
popa
ljmp
shrb
sbb
adc
repnz
add
jmp
mov
ret
je
dec
add
adc
inc
das
sub
shll
pop
jb
sub
pop
or
cld
mov
cmc
mov
mov
and
and
mov
fs
adc
fcmovnbe
xor
push
mov
cmp
xor
jmp
std
jg
aad
push
jne
mov
xchg
out
pusha
ljmp
mov
and
jg
lahf
push
and
test
rcr
xchg
dec
cltd
out
xor
push
ss
loopne
lods
loope
lret
mov
leave
xchg
das
incl
rorb
rol
insl
pop
inc
inc
sub
push
orl
stos
fiadds
sbb
out
pushl
pushl
mov
aaa
add
movl
incl
pop
xchg
dec
sti
outsl
jg
mov
cmp
jne
push
adc
add
adc
add
std
clc
jg
pushl
add
add
jmp
pop
cmp
cmp
jl
andl
adc
add
outsl
add
movsl
jns
ja
out
fsubs
inc
mov
push
cmp
or
loope
ret
xor
sahf
jg
mov
or
dec
add
into
or
or
push
ljmp
shrl
xchg
popf
add
add
decl
sbb
mulb
loope
enter
cld
pop
adc
notb
inc
adc
push
dec
add
clc
push
cs
lcall
or
incb
iret
ficoms
push
out
mov
sbb
sbb
or
push
adc
adc
fstl
push
or
push
cmp
cmp
jp
femms
or
scas
pop
push
clc
jb
aaa
fdivrl
or
push
into
insl
inc
mov
sub
ljmp
je
and
addr16
bound
pop
xor
push
es
dec
test
lahf
dec
fildl
sahf
and
scas
cmp
faddl
test
mull
add
ss
ljmp
and
idiv
pop
outsb
add
or
adc
call
jb
je
xchg
cmp
fwait
jbe
mov
push
adc
sub
ja
sbb
or
movsb
pop
xor
cmp
or
cmp
push
push
sub
mov
push
pop
hlt
jg
or
push
inc
mov
dec
jne
pop
push
mov
push
loope
inc
pop
dec
lcall
jmp
pop
cmp
ret
mov
rol
outsb
mov
pushl
push
jae
or
out
insb
ja
movsl
and
out
sub
scas
repz
inc
dec
pushl
xchg
sub
lock
test
adc
js
mov
cmpsb
pop
mov
fldt
jp
cmp
outsb
je
sub
je
das
sub
ss
cmp
loope
jmp
dec
sub
xchg
jge
mov
xor
jg
gs
sbb
aas
mov
push
sub
fldz
movsb
cmp
lahf
sbb
pushl
ds
mov
jl
nop
add
or
ret
nop
ss
stc
enter
adc
and
fildl
and
xor
push
add
fisttps
mov
mov
and
movsl
aam
push
xorb
stc
jle
ja
adc
jmp
add
push
fwait
mov
push
test
rep
sub
mov
or
lock
or
jg
xorb
mov
fstps
add
aam
add
loop
and
push
add
inc
out
insl
inc
clc
push
inc
outsl
mov
or
cmc
adc
test
dec
popf
std
cmp
ja
or
faddl
or
je
adc
inc
mov
sbbb
insl
inc
jo
and
jle
sub
ljmp
ss
fbstp
mov
fldt
call
shll
pop
cli
repz
push
add
mov
push
mov
cmp
pop
mov
clc
push
push
push
shrl
popa
jno
push
js
cld
test
sub
cmc
mov
out
dec
shll
clc
dec
and
orb
call
shrb
or
insl
sbb
dec
out
jecxz
and
xchg
scas
lock
pop
adc
mov
cmpsb
push
mov
pop
out
std
lcall
dec
dec
dec
inc
sbb
imul
adc
jnp
push
push
dec
add
orb
lcall
pusha
ljmp
jne
add
jecxz
ror
adc
clc
cmc
push
es
insl
mov
imul
and
push
ja
mov
inc
call
jnp
jo
fbld
scas
push
and
call
mov
xor
sub
xor
jg
call
xchg
clc
mov
xchg
hlt
cmp
dec
xor
ret
jb
sub
jl
out
jg
inc
clc
push
or
jnp
mov
cs
mov
xchg
mov
pop
push
dec
loopne
pop
push
orl
jo
test
or
inc
or
lcall
movsb
sbb
mov
movsb
inc
ror
test
pop
fisttpll
dec
les
dec
push
inc
in
lcall
mov
or
xor
test
xor
sbb
pop
mov
or
ret
ret
mov
add
add
add
stc
out
insb
inc
lea
jmp
cmp
bound
cld
add
sbb
mov
mov
test
negb
sbb
int
test
cmp
pop
lods
cld
sub
js
pop
push
sbb
fsubrs
xor
inc
xor
or
test
lock
xchg
or
jae
emms
cld
lcall
or
add
jmp
cmp
push
ret
cmp
and
mov
ret
cmp
mov
sub
xchg
xor
push
in
sub
int3
add
dec
push
sub
or
fdivs
or
sub
sbb
push
ds
es
add
aas
sbb
and
imul
or
pop
adc
clc
mov
adc
xchg
cmpsl
ss
pop
das
rcll
jo
add
sbb
lods
sub
adc
movsb
int
pop
je
and
cmp
jne
push
or
or
pop
adc
and
decl
inc
push
mov
lds
and
and
jg
adc
add
shlb
xchg
cmpsl
addr16
neg
cmp
mov
mov
mov
loope
jmp
bnd
bound
inc
mov
loope
and
mov
mov
pop
sbb
lret
pop
pop
cmp
out
mov
pop
mov
xlat
je
xor
jne
das
mov
decb
ja
es
push
ffree
mov
and
orb
sbb
jg
daa
in
or
outsl
shlb
or
or
mov
xchg
push
roll
push
clc
pop
or
push
cmp
lock
dec
xchg
outsl
mov
push
xor
jbe
int3
in
lahf
rclb
cld
adcb
jmp
push
mov
lret
mov
cmp
push
cmp
mov
insl
sbb
aam
and
movsl
add
or
daa
mov
jo
rclb
jle
jl
std
roll
or
xor
xor
mov
push
fstps
sub
clc
cmpsb
js
or
fs
cwtl
stc
call
aad
jp
out
psubusw
lock
std
icebp
sarl
jmp
jmp
jo
das
xor
cmp
mov
push
and
adc
sbb
pushl
pop
jmp
mov
xor
call
inc
dec
xchg
jecxz
lcall
leave
sub
xor
dec
add
lcall
push
mov
sub
pop
cmc
add
xor
mov
insb
or
inc
aam
cmp
xor
sbb
add
inc
or
jo
pop
jge
cmp
pop
xchg
or
xor
cmp
fistps
mov
inc
shrl
shrb
cmp
pop
cmpsl
and
push
lret
or
insb
andb
jmp
jbe
stos
outsl
or
xor
pop
dec
jg
popf
inc
cmp
dec
enter
add
sbb
or
pushf
pop
stos
pop
mov
fadds
push
outsb
aaa
or
push
addb
and
data16
idivl
and
adc
lock
cmc
ret
or
out
and
adc
sbb
mov
push
decl
xchg
push
push
xchg
neg
jb
shrl
add
add
dec
imul
pushl
rcrl
xlat
pop
push
push
loopne
shlb
pop
push
lock
std
fwait
push
dec
fcomp
xor
incl
addr16
jecxz
adc
nop
loope
ss
push
ret
push
xchg
aas
loop
test
adc
outsb
fiaddl
add
decl
aas
jle
aas
mov
jmp
sub
inc
push
adc
dec
loopne
je
cmp
fdivl
mov
icebp
decb
xor
int3
push
adc
add
dec
add
clc
sbb
hlt
add
sbb
call
inc
outsb
outsl
mov
sub
add
stos
sub
jl
ret
xor
cmp
push
adc
test
incl
in
sbb
stos
jp
push
cld
cmp
call
jo
push
sub
mov
adc
and
hlt
sbb
sub
insl
add
pop
hlt
call
inc
and
in
ret
add
and
cmp
out
out
mov
mov
jg
decl
mov
jl,pn
js
daa
push
outsl
fs
push
je
dec
or
add
call
lret
sub
push
or
jb
add
cld
decl
inc
mov
insb
mov
dec
clc
addb
aas
xor
push
in
aam
ds
push
enter
inc
mov
fildll
mov
jg
sbb
jmp
or
dec
jne
inc
rorl
adc
inc
or
push
mov
aas
sar
scas
mov
adc
push
mov
or
getsec
jmp
xor
aaa
insb
enter
mov
in
xchg
jecxz
outsb
lcall
in
cmp
xchg
xor
sub
roll
add
stos
fucom
je
loop
js
sar
std
jbe
test
adc
lahf
jecxz
and
in
push
aas
mov
movl
and
xchg
outsl
or
fdivrs
mov
mov
aas
adc
push
xlat
sbb
cmpsb
mov
add
mov
jbe
dec
xor
pop
pushf
mov
mov
into
mov
aad
adc
nop
cmpsb
loopne
orl
loopne
decl
xchg
movl
cmp
stos
nop
or
pop
cmpsb
push
or
xlat
or
sbb
cmp
adc
test
pop
movsb
fsubs
test
lahf
jae
ret
adc
std
cmp
jl
mov
seto
arpl
xor
jo,pt
add
ret
aas
xor
cld
jle
add
adc
loope
mov
cli
push
sub
fs
in
out
scas
push
aam
cwtl
and
icebp
push
xor
fs
inc
adc
leave
out
das
dec
hlt
mov
in
sbb
cld
inc
xchg
add
xchg
lret
out
adc
fildll
or
outsl
pop
ret
mov
roll
sbb
fdivr
decl
dec
pop
or
pop
mov
arpl
fwait
pop
adcl
and
add
test
dec
mov
jmp
ljmp
cli
bound
pushl
xchg
xchg
cmp
push
or
cwtl
or
mov
jne
lcall
outsb
xor
sbb
inc
or
data16
sar
lcall
loopne
aas
mov
push
adc
cmp
fiadds
push
rcr
fdiv
or
fs
sub
sarl
dec
hlt
ja
hlt
adc
push
ret
fcmovb
dec
xlat
xor
xor
dec
addb
je
cmp
sbb
mov
pop
loope
mov
pop
sub
call
fildl
cmp
add
mov
fstps
enter
add
ljmp
test
addr16
mov
decl
push
mov
mov
sbb
mov
adc
mov
xchg
dec
hlt
push
jmp
inc
mov
mov
lcall
shlb
mov
clc
mov
stc
incl
cmp
inc
mov
cmc
adc
pop
inc
mov
decl
pop
cmp
jge
call
push
dec
je
inc
dec
mov
jbe
pop
adc
jl
js
adcl
cmp
add
and
ja
sarb
mul
ret
cmp
daa
aas
jmp
decl
mov
cmp
sub
cld
xor
dec
and
mov
xor
shlb
ret
inc
cmp
cmp
sbbb
movsl
add
ja
fs
sub
push
push
gs
fwait
popa
sahf
int3
movsb
sbb
pop
sbb
and
jmp
sti
fcmovnb
int3
pop
cmp
jmp
or
cmp
cld
ret
sbb
mov
push
mov
inc
adc
adc
in
ret
mov
push
test
mov
cld
mov
mov
cld
pop
and
push
or
mov
mov
pop
and
and
dec
mov
repz
sbb
popa
inc
clc
fdivl
dec
daa
test
stc
das
or
test
push
inc
pusha
jg
sbb
incl
data16
and
inc
mov
out
push
sbb
cld
pop
popa
mov
mov
in
add
mov
adc
scas
dec
les
jg
call
push
jo
adcl
cmp
aaa
repnz
mov
hlt
incl
divl
dec
push
sbb
and
cmc
add
out
or
mov
fldl
aas
add
pop
loopne
pushl
icebp
dec
xor
adc
cmpb
fisubl
jle
inc
inc
push
dec
ret
pusha
imul
pusha
push
js
adc
loope
or
les
incl
icebp
inc
cmp
mov
adc
mov
std
je
sti
frstor
mov
add
xchg
dec
jge
add
pushl
jge
jl
jne
jns
js
mov
nop
imul
test
dec
dec
nop
lds
mov
adc
aad
adc
cmp
pushl
push
mov
cmp
jne
push
and
jmp
ds
sahf
xor
decl
mov
sahf
push
movsb
decb
lock
cmp
aas
inc
addl
mov
adc
jmp
mov
ja
adc
decl
lock
call
push
mov
rcl
cmc
loopne
fs
bound
clts
test
cli
outsl
mov
push
cmp
lock
rcl
lret
scas
emms
aam
pop
mov
push
mov
add
sbb
cli
add
inc
xlat
jp
add
or
jg
pop
adc
popa
push
add
push
or
sub
iret
jp
call
push
das
sub
and
jno
mov
and
or
mov
rolb
mov
cwtl
mov
mov
adc
outsl
cli
out
adc
repnz
stc
push
sbb
add
or
cmp
dec
repnz
jbe
xchg
testb
lcall
jnp
loopne
test
jo
shr
pop
adc
inc
jg
int3
inc
in
or
pop
cld
ljmp
inc
mov
dec
cld
movsl
imul
jmp
inc
clc
xchg
adc
cmc
add
jg
cmp
es
ljmp
dec
test
xchg
fcoms
ljmp
pop
add
pusha
lods
testb
mov
data16
data16
sub
or
aas
and
cld
iret
inc
push
mov
push
or
decl
or
js
sbb
mov
cmpsb
sahf
or
arpl
sub
mov
lcall
push
mov
xchg
push
push
xor
or
cltd
sbb
push
xor
cwtl
popa
xor
aaa
mul
jg
aas
call
adc
fistl
add
or
or
add
push
mov
adc
daa
pop
sbb
push
mov
call
mov
cmp
mov
sbb
call
stc
pop
pushf
sbb
jmp
decl
push
mov
dec
mov
jo
and
int3
leave
mov
inc
push
dec
mov
cmp
mov
data16
pop
adc
dec
inc
pop
pop
xchg
pop
add
sbb
arpl
sub
imul
xchg
call
and
add
jl
daa
add
aad
add
inc
inc
lcall
mov
and
pusha
pop
or
je
mov
or
in
add
mov
jle
call
or
loope
movsb
mov
inc
pop
cld
pop
and
add
das
js
outsl
ds
movb
add
pop
pushf
pop
and
pop
cmc
call
cmp
outsb
dec
mov
dec
jp
pop
sub
dec
pop
dec
cmp
and
mov
mov
jns
call
push
dec
icebp
mov
out
decl
lock
hlt
mov
jb
dec
jle
aam
dec
cmpsb
daa
aam
inc
aam
lcall
aam
mov
loopne
add
cwtl
add
adc
insl
jle
aam
jbe
rolb
mov
popf
popf
addr16
js
movsl
mov
mov
or
dec
cmp
iret
add
pop
into
loope
ja
sbb
mov
sub
call
lea
les
add
jmp
jge
js
rorl
push
pop
mov
pushf
out
int
lahf
add
inc
adc
mov
movsb
loop
decl
aad
xchg
test
dec
ret
cmp
incl
inc
mov
cmc
ljmp
test
push
add
inc
pusha
add
enter
dec
out
gs
das
xor
insb
pop
arpl
jno
lcall
mov
in
adc
int3
aad
lods
dec
inc
mov
mov
cmovne
inc
pusha
jmp
aas
inc
dec
jl
cmp
aas
in
cld
lcall
jge
sub
lods
jl
pop
jg
test
nop
flds
ret
outsb
or
in
jmp
subl
shl
es
sub
sbb
mov
lcall
pop
fisubrl
sbb
repz
inc
adc
sbb
call
lock
je
mov
cs
loopne
xor
mov
clc
xor
mov
mov
push
or
cmp
sub
dec
outsl
adc
cmp
hlt
jmp
xor
ljmp
rcl
cli
sbb
icebp
ljmp
incl
mov
push
sbb
sbb
jo
cmp
add
testl
push
mov
jg
push
sub
das
addr16
and
std
addr16
cmp
dec
jbe
jle
ljmp
cmpsb
sbb
mov
lods
mov
in
insl
lock
sbb
add
jg
sub
test
bound
cmp
fldt
das
push
int3
push
subb
out
test
mov
add
or
sti
fwait
add
lret
mov
ljmp
xchg
cmp
les
jno
inc
mov
and
dec
sbb
call
negl
jle
cmpsb
pusha
stos
sti
call
add
ja
push
fistps
punpckhbw
jns
dec
xor
je
movsb
incl
rolb
cld
pop
jne
es
hlt
xchg
fnstenv
call
pop
push
adc
daa
and
dec
outsl
idiv
lret
dec
push
out
sub
out
or
mov
insb
add
fcomip
shr
dec
and
aas
test
subb
mov
nop
pop
cmp
data16
or
and
fs
in
inc
movsb
and
push
lea
mov
out
xor
xlat
pop
push
jmp
popf
loop
adc
push
xlat
pop
push
dec
data16
fcomip
mov
ljmp
sbbb
lock
jnp
jbe
xor
push
shl
inc
loope
faddl
in
mov
jmp
push
icebp
pop
pop
and
pusha
pop
mov
push
adc
xchg
call
pop
clc
mov
daa
inc
adc
in
push
scas
pop
js
mov
inc
and
mov
push
cmpsb
or
pop
das
or
mov
mov
dec
out
add
scas
pushl
adc
ret
add
lock
push
pop
dec
cmp
add
loopne
dec
mov
shll
sbb
dec
push
mov
cmc
decl
es
ret
pusha
push
ret
add
inc
jle
cmp
mov
out
xor
outsb
ret
cmp
outsl
insb
pop
dec
out
or
lcall
test
or
push
fs
lret
ljmp
pop
pop
loopne
dec
xchg
lahf
push
jl
incl
xchg
iret
push
inc
lock
iret
xor
xchg
popf
push
sub
push
mov
lods
loopne
shl
imul
push
hlt
pusha
aad
jle
mov
push
add
daa
mov
and
dec
xchg
jmp
outsb
mov
loopne
cmp
in
dec
sbb
incl
enter
push
fstps
ss
or
ret
push
mov
jo
loop
cwtl
or
or
mov
inc
dec
shrb
ret
push
push
push
mov
and
ret
aas
or
jo
sub
mov
jg
add
inc
cmp
or
fisubrs
or
pop
or
inc
cwtl
inc
pop
adc
inc
out
scas
or
std
inc
mov
jle
incl
ja
dec
fdivrs
push
addr16
xchg
push
fmul
mov
adc
xchg
push
cmp
and
lock
push
push
jo
mov
incl
add
adc
pop
and
sbb
nop
inc
js
arpl
push
test
call
cmpsb
sbb
lea
mov
in
leave
dec
movsb
shl
lretw
push
cmpsl
inc
mov
cmpsl
shll
dec
add
adc
push
fdivrl
pusha
pop
dec
loopne
rorl
adc
lcall
inc
lcall
sub
repnz
in
cli
stos
scas
mov
loope
mov
jge
or
outsl
addb
cmp
loop
ret
add
xlat
xchg
mov
movsb
testl
call
addr16
lret
js
cmpsl
or
aaa
mov
inc
mov
ljmp
mov
dec
mov
incl
mov
andl
shl
mov
jne
ret
cmp
fcomps
adc
adc
xorb
mov
xor
js
add
bound
dec
lea
adc
add
add
pusha
sbb
add
ret
pmaxub
repz
push
sbb
pop
push
add
cld
add
and
incl
xchg
push
jp
jge
jecxz
fs
call
cmpsb
cltd
loope
movsl
dec
jg
jbe
push
dec
jo
and
shr
adc
add
decl
add
shlb
pop
mov
push
or
or
push
mov
movsl
loope
ljmp
add
push
rorb
push
cld
jmp
aaa
decl
cmpsb
ret
add
add
xor
mov
cmp
lcall
mov
movsb
cli
inc
call
shrb
fisubs
xorb
and
incl
push
lods
mov
cmp
push
movsb
or
cmp
adc
or
jno
jbe
jg
stos
or
pop
nop
jle
dec
push
lock
inc
inc
add
cmp
decl
adc
push
loop
inc
or
leave
adc
mov
pop
lock
dec
lock
outsb
inc
inc
mov
mov
mov
jo
sbb
jne
cmpsb
clc
decb
jg
mov
mov
scas
jge
icebp
mov
mov
lcall
mov
out
mov
xchg
hlt
jnp
jle
push
aaa
dec
mov
add
int
jmp
fadd
inc
jo
jle
dec
sub
call
pop
or
jnp
push
adc
push
adc
into
sub
loop
add
mov
inc
push
dec
inc
push
popa
and
sahf
dec
add
stos
inc
mov
bound
cs
push
shrd
out
cmp
jo
lods
mov
cmc
sub
lret
incl
mov
push
arpl
sub
les
and
xor
push
ss
sbb
or
into
and
or
pop
sub
and
scas
cmp
notl
mov
inc
adc
incl
mov
lods
cli
jge
mov
ja
ret
call
inc
dec
mov
adc
jp
push
sbb
arpl
add
adc
fstl
out
in
adc
jg
adc
pop
outsl
mov
aas
pusha
xlat
mov
cmpsl
push
add
ss
cmp
movsb
pop
ljmp
add
push
mov
cli
and
cld
jmp
cmpsb
xor
or
adc
add
out
jg
subb
jle
dec
cs
adc
push
insb
cmp
pop
mov
dec
leave
mov
ljmp
and
in
push
scas
push
insb
add
ret
and
je
adc
lods
jne
ret
mov
scas
mov
sub
push
jmp
and
sub
dec
pushl
cmp
pop
xchg
ret
mov
adc
add
jg
mov
fcomip
cmp
mov
std
pop
cmp
jnp
dec
cli
dec
pop
cmp
cmp
pushf
jmp
pushl
cltd
add
in
jb
jmp
ljmp
sbb
sub
pushl
jae
into
sbb
inc
push
lcall
loopne
das
adc
adc
aaa
out
sbb
stos
loop
insb
outsl
loop
aas
stos
or
pop
ret
inc
dec
nop
pop
clc
test
sbb
adcb
scas
adc
sub
jle
ret
jg
and
inc
adc
add
int
lods
scas
cmp
hlt
mov
pop
fs
xchg
popa
or
je
mov
pop
push
xchg
mov
inc
pop
mov
mov
into
dec
das
pop
stc
cmp
es
mov
xchg
jmp
cld
in
popa
and
insb
lea
mov
test
mov
incl
push
sti
popa
pop
or
inc
pop
loopne
jmp
aas
imul
fildll
add
jns
sub
jg
mov
int3
inc
push
push
adc
and
inc
jo
dec
or
add
rorb
xchg
shl
pop
or
sbb
pop
adc
decb
jg
adc
aad
dec
movsl
call
std
pushl
and
enter
xchg
stos
mov
and
int3
push
and
jo
pop
mov
sub
in
cmp
repnz
sub
cmp
adc
pop
sub
fcoml
mov
outsl
add
decl
inc
pushl
push
sti
xchg
incl
xor
push
xor
add
cli
or
jg
push
jae
mov
sub
sub
daa
popa
lods
shll
ljmp
icebp
add
add
out
inc
lea
jl
xlat
jl
add
outsb
lcall
add
call
inc
dec
or
es
push
mov
rcll
sbb
cmp
aas
inc
jl
ror
sbb
dec
sbb
pusha
les
cmpsb
add
cmp
mov
enter
loope
dec
jbe
xchg
repnz
xor
push
out
pop
inc
pop
int3
mov
inc
sar
pop
ds
push
popa
and
sti
inc
pop
or
adc
clc
pop
sbb
mov
push
pusha
test
inc
adc
push
adc
pop
data16
add
sbb
lret
inc
sbbb
incl
or
call
xor
xor
sub
sbb
sar
in
outsl
lcall
xor
and
pushl
stc
sub
sbb
jne
cmp
jb
mov
in
xchg
add
and
mov
pop
lea
ljmp
roll
fisttpl
mov
add
shll
push
or
ljmp
imul
in
add
lcall
pop
sub
dec
sbb
sbb
sbb
push
popa
loope
and
mov
adc
adc
or
or
call
je
or
je
icebp
rcrb
int
test
pushl
pop
hlt
jg
rcl
rcl
rcl
cmp
jb
incl
ficomps
out
inc
loop
testb
or
out
mov
inc
repz
pusha
fwait
pop
std
mov
mov
xorb
pop
push
jns
mov
jns
neg
neg
sbb
or
iret
into
cli
pop
mov
je
test
xor
ficoms
xor
mov
ja
and
out
add
inc
jae
mov
push
loopne
aas
sbb
mov
push
jecxz
mov
cmp
sub
xor
add
loope
mov
in
mov
mov
clc
mov
sbb
pusha
rolb
aaa
sub
pop
mov
js
and
out
cli
pop
je
push
in
push
sti
repz
es
sub
mov
test
xchg
mov
incl
and
add
inc
aaa
int
rclb
or
incl
aaa
inc
xor
jae
and
xorl
fwait
aam
pop
push
rcrl
jcxz
pushl
jne
aaa
insb
jnp
js
or
xlat
or
aad
push
and
call
insl
dec
fstl
inc
call
jg
rcl
dec
repz
out
jb
adc
push
jb
out
stc
sti
in
adc
arpl
mov
xor
push
push
fisttpl
jae
push
decl
mov
cmp
sbbl
mov
sub
pushf
lock
sbbb
movsb
ret
add
add
dec
mov
cmp
sub
or
mov
sub
rcll
inc
fidivrl
add
push
cmp
dec
or
ja
pop
and
pop
je
inc
aas
ljmp
mov
int3
sbb
jg
cmp
adc
ds
cmp
arpl
sub
jmp
sbb
inc
inc
clc
incl
sbb
or
aaa
lods
setb
add
scas
je
dec
ds
cmc
add
push
cmp
mov
jmp
xor
sbb
and
push
rolb
daa
add
push
fdivp
adc
jl
dec
decl
out
popa
xchg
clc
nop
clc
mov
jb
sub
pavgb
sbb
add
cmpb
sbb
xchg
mov
mov
addr16
add
bound
daa
cmp
ret
rolb
decl
push
add
push
sbb
mov
push
sbb
push
aam
push
or
cli
push
fwait
or
mov
in
add
outsl
lret
shrl
stc
incl
mov
pusha
sbb
lock
xlat
imul
sbb
call
in
mov
pop
jne
jge
mov
push
lock
in
mov
std
jmp
test
jne
pop
in
push
inc
adc
into
stos
sarb
inc
dec
push
dec
rcrl
add
cmc
add
pusha
gs
mov
or
incl
mov
lahf
sahf
or
add
cmpsl
inc
xchg
push
cmp
jmp
or
dec
mov
jo
and
jmp
and
jo
sub
decl
add
jne
enter
push
subl
icebp
mov
add
xchg
xor
mov
pop
adc
lret
adc
incl
push
movsl
adc
out
mov
or
jnp
add
mov
mov
scas
adc
pop
adc
push
cmp
ret
lcall
pop
mov
out
dec
jecxz
fs
jmp
mov
pusha
or
sarl
mov
xor
xchg
inc
add
call
and
sar
call
aas
dec
cmpsb
out
push
pop
les
loop
adc
aaa
mov
xor
pushl
out
adc
jno
scas
cmp
fwait
pop
clc
loopne
cmp
and
jae
sarb
dec
or
lock
pop
cltd
add
pushf
xchg
incl
jb
in
in
incb
pop
repnz
adc
cld
xor
and
pop
adc
push
push
mov
cwtl
add
xor
ljmp
jae
test
adc
data16
ljmp
dec
ret
test
dec
cmp
das
mov
stos
xchg
ds
call
lcall
gs
cld
cmp
pop
ret
adc
incl
push
rorb
or
int3
lock
in
scas
inc
add
adc
jmp
adc
inc
jne
scas
fcmovbe
pop
mov
sub
add
lcall
addr16
test
fnsave
pusha
jle
mov
shlb
xlat
push
fcomps
popl
lcall
push
push
cmpl
cmpsb
mov
cmp
cmpb
outsb
jo
pop
dec
inc
int3
std
mov
pop
inc
dec
les
jg
jle
inc
or
add
cli
pop
fidivrl
add
jecxz
or
push
mov
div
ljmp
addl
lods
adc
imul
add
in
fists
sub
outsb
iret
cmp
fstl
out
insb
add
dec
jmp
jl
daa
not
std
out
add
movsl
mov
je
pop
fistpll
sbb
dec
push
pop
cmp
lds
cmp
inc
ja
rclb
stc
adc
sbb
dec
decl
loopne,pt
add
dec
daa
je
aam
adc
in
cmp
aam
mov
or
mov
iret
imul
mov
and
jp
add
jg
pushl
lods
sbb
clc
jmp
push
lret
sbb
gs
stos
jl
inc
sbb
jge
bound
sub
cltd
xchg
pop
xchg
fisttps
fistpl
lock
inc
mov
test
mov
sti
dec
and
cld
incl
fldl
xchg
or
push
out
cmp
jl
leave
ret
cmp
scas
cmc
lods
pop
lret
pushf
lret
ds
je
xor
add
add
cmp
lcall
insb
repnz
imul
pop
inc
outsl
mov
xor
push
inc
lcall
inc
imul
ja
and
push
xor
aaa
aam
iret
mov
mov
aam
aaa
aaa
adc
inc
pop
nop
or
cli
jg
mov
insb
aaa
ljmp
test
pop
and
adc
xchg
push
inc
clc
call
xchg
and
ret
testl
pop
mov
dec
mov
xorb
out
pop
or
mov
pusha
push
mov
adc
push
mov
dec
shlb
inc
rcr
les
jp
push
add
add
xchg
push
pop
adc
jp
sbb
add
ljmp
rorb
push
jno
outsb
shlb
mov
cs
push
xchg
push
pushl
add
imul
cmp
jmp
pop
jle
mov
add
fadds
cli
inc
ljmp
jmp
add
cmp
sbb
or
push
add
ljmp
outsb
jnp
add
push
inc
dec
sahf
lcall
mov
sbb
sbb
push
push
mov
inc
negl
or
or
sbb
mov
sbb
sbb
pop
add
out
into
pushf
dec
cmp
ljmp
js
cs
cmpsl
and
inc
les
add
loopne
adc
sbb
push
incl
add
pop
outsb
inc
cmp
pop
xchg
mov
sti
push
es
cmpb
loopne
incl
push
pop
hlt
sub
dec
push
ljmp
mov
jns
xor
sub
call
mov
lea
jecxz
fs
cli
fadds
rclb
fbld
sbb
dec
sub
rcr
or
dec
adc
outsl
arpl
ret
inc
and
jmp
inc
or
push
loop
out
jle
lds
add
cmp
filds
sub
lods
add
adc
push
adcl
mov
cld
fistl
adc
adc
sbb
fadds
push
dec
sarl
sbb
andw
or
andb
cmp
push
adc
out
add
or
dec
push
xchg
scas
sbb
mov
cmp
pop
or
mov
clc
add
jle
imull
mov
dec
repnz
mov
jmp
jp
aas
push
andb
mov
sbb
pop
imul
loopne
lcall
or
dec
mov
adc
mov
decl
or
sbb
sub
push
add
push
ljmp
call
adcl
add
fcomps
adc
add
mov
test
push
jbe
mov
push
jno
inc
dec
outsb
xchg
push
or
jmp
push
push
inc
jl
stos
aaa
nop
xchg
lods
stc
jbe
sub
jo
push
sbb
push
ja
ficomps
ljmp
fscale
and
or
jecxz
adc
popf
fistpll
and
push
pushf
dec
call
lret
pop
cmp
mov
cli
movl
rorb
inc
xor
push
xor
ss
sbb
cld
insb
lods
daa
inc
std
incl
loope
add
outsl
jo
push
decl
jo
dec
mov
icebp
mov
lcall
test
cmp
sub
decl
je
arpl
jb
movsb
or
adc
xchg
ss
xor
pushl
fcompl
cmp
sbb
inc
pop
nop
xlat
loopne
pop
pop
lahf
xchg
cwtl
adc
decl
fimull
jne
and
adc
nop
pushl
ljmp
jae
rcr
repnz
and
add
cmp
jne
icebp
dec
lea
mov
jb
cmpsl
fsts
gs
out
loop
jp
sbb
inc
jg
xchg
lock
test
jno
xchg
outsb
pop
cmp
jle
call
xchg
dec
add
fcom
push
push
stos
incl
jno
mov
inc
das
push
and
aas
push
daa
mov
test
inc
clc
lods
or
jno
sub
decl
cld
mov
aaa
insb
xchg
xchg
les
fbstp
call
adc
sub
sub
je
dec
lods
mov
push
ret
and
or
mov
clc
jns
or
ret
pop
push
mov
jle
ja
jg
lods
add
xchg
fsubr
mov
daa
out
clc
jmp
push
test
les
pop
sub
jne
push
push
movb
ljmp
mov
and
out
or
divl
xchg
xor
je
cmp
aas
jg
dec
jbe
lock
jns
push
icebp
repnz
cmc
div
psubb
out
mov
cld
std
jmp
loope
jecxz
add
out
in
jg
cmp
mov
jmp
in
jmp
in
in
out
leave
out
rcl
mov
psrlq
aad
xlat
fcomp
fcmovu
fdivp
lret
ffreep
rol
enter
sub
into
iret
mov
mov
mov
mov
fs
out
pop
stc
mov
mov
mov
mov
mov
cmpsl
test
stos
stos
lods
lods
scas
scas
nop
xchg
xchg
orb
xchg
xchg
xlat
add
mov
fcos
test
ret
inc
call
mov
or
lock
push
mov
dec
jae
stos
jo
and
or
cld
push
test
add
nop
mov
clc
out
out
and
mov
inc
xor
inc
std
decl
fildl
out
xor
das
add
jg
inc
pop
cmp
add
pusha
jg
cld
and
lcall
mov
es
shrb
repnz
push
test
out
lock
pop
cld
jg
adc
mov
adc
or
hlt
bound
jmp
adc
std
sbb
jp
mov
lds
push
sar
dec
jle
pop
or
decb
sub
aaa
xor
adc
pop
mov
rcll
ror
mov
pop
shrb
pop
hlt
xchg
add
int
scas
add
push
xor
mov
out
mov
decl
mov
in
cmp
push
sbb
insl
mov
sub
add
mov
push
or
cmpsl
mov
jo
cltd
or
ss
add
adc
aaa
aaa
je
lods
and
pop
mov
cmpsb
push
lahf
dec
add
mov
imulb
push
enter
lahf
dec
xor
int3
or
add
jge
cli
decl
test
sti
add
xor
sbb
mov
imul
decl
jle
mov
push
add
xchg
add
or
xchg
xorb
fistps
adc
pop
pop
js
xor
fldenv
sarb
add
in
adc
jg
cmp
mov
ss
insb
xorl
ja
sarb
add
add
add
or
and
pushl
loope
jo
daa
add
push
add
outsl
insl
fldcw
push
or
jns
pushl
jno
ja
pop
out
add
xor
fld
lcall
mov
or
push
xorb
repz
jmp
push
adc
jg
shrl
xor
adc
cmp
push
add
dec
xchg
jae
mov
and
mov
adc
fldt
mov
mov
or
int3
ficoms
or
or
add
xor
movups
imull
or
decb
pop
mov
add
aad
icebp
add
mov
inc
call
add
das
neg
je
jo
mov
fs
pop
ud0
cli
insl
pop
push
call
inc
inc
lods
pushf
add
sub
leave
test
and
sbb
xchg
leave
sbb
outsb
loope
push
jle
jp
testl
or
or
daa
add
add
cld
clc
hlt
daa
lock
call
dec
mov
sarb
inc
pop
jbe
and
movsb
jg
incl
test
adc
and
mov
inc
mov
call
push
inc
insl
jnp
cmp
dec
ret
cli
hlt
nop
cmp
lods
push
movsb
pop
jns
adc
cmp
cmpb
in
push
jo
push
push
push
dec
dec
inc
pop
push
aam
mov
mov
or
adc
outsb
mov
fsub
cmp
fstpl
hlt
and
push
faddl
aam
int3
lret
sub
push
jb
shrd
pop
out
rorb
orb
jo
push
faddl
add
inc
mov
add
and
sub
sbb
add
sbb
add
lock
cmp
rorb
int3
scas
and
add
push
aas
inc
hlt
mov
paddw
and
mov
mov
jb
decb
jb
fcomi
popa
fcmovne
pushf
cltd
cld
hlt
paddb
sub
cmp
pusha
into
int3
pop
mov
paddd
ret
aaa
call
add
je
mov
mov
add
outsb
pop
jb
loope
dec
dec
cs
sub
in
inc
sbb
fiadds
add
add
inc
fiaddl
out
push
add
shl
cmp
add
emms
jo
or
enter
sahf
in
pop
fmull
pop
out
in
jae
unpckhps
sbb
rolb
add
es
pop
enter
cmp
fcmovu
int
pushf
xchg
xchg
ret
add
mov
pop
lock
dec
cld
addr16
lret
fcomps
push
xchg
fimuls
cmpsb
sbb
mov
ljmp
call
pop
jae,pt
jge
push
loopne
and
mov
sahf
and
pushf
push
ljmp
subl
dec
xchg
test
sbb
mov
mov
xchg
rcrb
push
push
sbb
add
mov
loopne
or
lcall
mov
inc
pop
or
dec
cli
gs
add
cli
lcall
fnstcw
mov
cs
arpl
xor
and
push
repnz
mov
pop
dec
inc
inc
outsl
mov
adc
ficomps
inc
pop
pop
fstpt
das
inc
aas
cmp
lcall
fucomi
mov
push
add
push
xor
fsubrp
pop
pop
or
pop
push
clc
call
mov
mov
jg
push
mov
mov
add
inc
or
push
call
sbb
mov
notb
seta
popf
sahf
setg
pop
jns
test
mov
jo
pop
jns
xchg
jb
je
jbe
js
jp
jl
jle
insl
add
or
adc
fidivrl
pop
sbb
ljmp
call
sahf
shlb
cld
movsb
sbb
xor
add
iret
and
jl
and
or
incl
cmp
push
push
inc
adc
adc
cltd
push
mov
add
aad
push
pusha
loope
add
call
or
movsb
scas
imul
imul
mov
or
decl
pushf
dec
gs
inc
pusha
pop
sbb
cmp
call
sti
dec
push
cmpsb
xchg
push
out
sbb
jg
decl
out
hlt
sbb
mov
jmp
push
mov
sbb
jmp
adc
and
pop
adc
nop
cmovbe
mov
mov
mov
xchg
fs
jmp
clc
jle
outsl
das
push
out
ss
sub
call
inc
mov
call
sbb
inc
outsl
mov
jg
hlt
sub
fmuls
adc
mov
loopw
cld
xchg
cmp
add
inc
pop
and
dec
incl
add
stos
ss
lcall
sub
rdpmc
inc
mov
mov
and
xor
decl
loopne
push
mov
xchg
nop
sub
call
stos
popf
pop
inc
adc
sub
sbb
adc
cli
pop
hlt
call
lods
xchg
mov
shl
add
adcl
aam
inc
mov
mov
cs
push
push
push
in
dec
add
sub
inc
pop
inc
and
sbb
dec
in
jle
cmp
dec
add
cmp
mov
insl
cld
xchg
inc
or
adc
add
mov
out
mov
xor
adc
dec
arpl
rol
or
lea
adc
push
add
dec
xor
adc
cmp
int
or
lcall
decb
cmp
pop
mov
sbb
sub
or
daa
lock
add
ds
test
ja
ret
add
add
jmp
mov
in
movl
xor
lea
cld
add
jb
jne
repnz
mov
nop
out
enter
rcrb
jle
dec
aaa
xor
xchg
and
sti
fisttps
inc
leave
mov
das
xchg
test
outsl
test
or
ficompl
lcall
aas
scas
fdivp
push
nop
sbb
cld
sub
inc
setg
lahf
ja
loopne
decl
nop
fs
insb
xchg
jns
sti
push
add
lret
sar
incl
push
mov
out
push
or
outsb
popa
inc
leave
xchg
dec
xchg
cmp
inc
nop
js
call
or
ja
xchg
mov
or
or
xlat
add
xchg
insl
shl
pop
mov
in
incl
sbb
nop
inc
mov
hlt
cld
cld
int
inc
iret
add
mov
into
aas
dec
dec
push
outsl
or
mov
insb
shlb
mov
inc
xchg
or
or
inc
loopne
adc
xchg
pop
cld
call
xchg
pushf
dec
xchg
inc
jns
loope
xor
gs
test
inc
and
pushl
adc
popa
out
xchg
adc
daa
xchg
xchg
sbb
outsb
fsts
negb
sub
pop
decl
or
test
lea
xchg
cmpsl
or
inc
dec
mov
mov
imul
push
xchg
pusha
fists
dec
ret
lock
jg
jmp
fdivp
jmp
sbb
xlat
adc
aaa
std
fistps
ret
dec
xchg
inc
mov
dec
mov
call
or
and
in
xchg
and
cltd
xchg
push
xchg
cld
das
fisubl
mov
imul
cwtl
and
and
sub
fcomip
jmp
je
insb
inc
jbe
mov
ljmp
cltd
mov
sub
lcall
xchg
push
xor
inc
popa
jl
push
rorl
out
cmpsl
inc
or
pop
push
or
lcall
pop
fsubp
push
jle
aam
enter
push
adc
data16
lcall
pop
cld
xor
lcall
dec
push
rcll
push
mov
pop
insl
adcl
inc
cld
cmp
mov
inc
std
pushf
mov
lcall
dec
lds
shll
das
pushf
adc
pushf
sbb
rclb
loopne
pop
sub
std
jmp
fidivrl
mov
mov
or
sub
push
gs
mov
aaa
mov
adc
xor
and
dec
xor
loop
xor
mov
fmull
mov
ja
cmovge
inc
decl
or
or
unpcklps
daa
sub
sub
pop
std
mov
mov
out
popf
push
or
jg
mov
mov
outsb
icebp
adc
xor
hlt
dec
mov
add
lret
sbb
dec
push
aad
dec
push
outsl
inc
sbb
mov
das
xor
mov
jg
inc
insb
fs
cmp
test
addr16
lods
sarb
push
mov
nop
outsl
adc
es
cmp
sahf
xor
or
adc
or
jg
jg
orl
mov
add
push
idivl
pop
inc
jo
clc
inc
add
jmp
and
dec
imulb
aam
insl
and
mov
out
jb
gs
pop
xor
cmpsb
lcall
ss
arpl
xchg
jp
dec
cmpb
adc
fisttps
scas
adc
sub
inc
jns
add
pop
lahf
xchg
inc
lahf
pushf
sbb
outsl
fs
mov
pop
aaa
sub
adc
fwait
push
or
jo
dec
mov
or
pop
outsb
incb
sbb
lods
cmp
repz
push
and
jne
ljmp
add
jb
mov
inc
push
pop
mov
inc
mov
test
ja
push
in
inc
sahf
daa
cmp
and
add
pop
inc
mov
mov
int3
mov
push
insb
jo
leave
and
mov
orl
mov
addr16
cld
inc
sbb
incl
cld
push
mov
pop
leave
shrl
push
shl
test
inc
sahf
gs
pop
fwait
pop
mov
hlt
jl
sar
bound
sub
fdivr
jg
aad
push
or
pop
mov
add
add
add
push
cmpsb
lret
mov
ss
xchg
ljmp
bound
fadds
insl
mov
daa
cmpsb
cwtl
shrb
mov
lods
sub
adc
cmp
mov
adc
add
push
add
movb
fildll
jmp
ret
ljmp
add
dec
ret
mov
mov
mov
adc
and
nop
fcoml
xor
sub
cmpsl
or
mov
jp
or
lea
sbb
clc
jp
sbb
das
incb
fs
mov
add
or
dec
dec
adc
ljmp
xlat
push
jmp
in
out
cli
pop
lock
out
add
decl
popa
sbb
loopne
cmp
mov
mov
pop
pop
leave
dec
mov
or
mov
in
mov
cmp
add
cmpb
cmp
jmp
pop
scas
xor
or
add
shl
fs
je
and
clc
sbb
mov
ja
adc
pop
pop
xchg
cmpb
add
fcmovne
sbbb
mov
sub
add
int3
mov
mov
scas
sub
outsl
cli
add
cmp
sti
jbe
jp
out
sub
jo
pop
fdivrs
jb
out
or
lea
ficoms
pushl
push
dec
lahf
inc
outsb
mov
or
cmpb
cmp
rolb
mov
mov
push
jg
sbb
and
mov
clc
dec
fsts
xchg
addl
sub
fisttps
lock
in
sbb
fadd
add
sbb
push
push
push
mov
js
dec
fld
mov
mov
scas
sub
xor
in
jmp
jo
xor
fcoms
clc
jle
cs
add
cmp
ds
cli
incl
or
or
jp
add
push
adc
cmp
sti
mov
ret
jne
outsl
and
sbb
mov
fists
lock
daa
jne
mov
mov
pop
pop
pop
ret
ss
sub
add
pushl
cwtl
addl
out
and
ljmp
adc
push
in
nop
outsb
jmp
and
adc
and
xor
fwait
push
adc
fldenv
push
aam
nop
push
xor
stc
in
fisttps
adcb
pushl
push
repnz
pop
sarb
rclb
test
sbb
push
and
pop
std
call
mov
adc
sahf
or
jecxz
sbb
xchg
std
jp
shlb
es
lcall
inc
or
test
add
xchg
fldcw
dec
jg
jmp
pop
and
mov
pushf
shlb
or
dec
inc
sbb
cmp
sub
sub
xchg
ljmp
in
loopne
stos
push
inc
mov
push
jg
and
mov
cmpb
incl
mov
dec
push
das
adc
lret
movsl
sub
ljmp
decb
xor
hlt
add
pop
data16
arpl
dec
incl
sar
mov
lock
and
sti
incl
inc
and
push
mov
push
js
xchg
mov
dec
loop
pop
sbb
cld
and
dec
or
lock
pusha
mov
lods
cmc
push
push
push
test
fwait
pop
call
clc
lods
inc
cli
jl
fisubs
loopne
mov
cwtl
sub
dec
inc
lret
mov
fcoml
lcall
add
das
push
out
or
jle
aad
ljmp
sbb
test
pop
inc
cltd
adc
lcall
addb
adc
xor
and
cmp
add
aad
adc
cmp
adc
add
mov
jg
mov
sti
xor
push
pop
rcrb
imul
ljmp
jne
adc
xchg
xor
or
fwait
and
fwait
push
pop
dec
lret
jg
mov
test
std
push
sbb
les
pusha
mov
cli
cmpsb
push
sub
adc
ljmp
decb
xor
call
mov
cmp
std
aad
subb
popa
xor
addb
pop
dec
sbb
xchg
pop
pop
dec
scas
dec
xor
fbstp
inc
push
scas
int
sub
cmc
add
testb
inc
icebp
decl
sub
jbe
jbe
in
or
add
ljmp
inc
jmp
adc
popf
mov
fildll
add
jne
sub
bound
cli
jmp
sub
sbb
push
jp
incl
js
xor
hlt
lds
pop
rcrb
push
iret
jmp
push
add
pop
adc
push
jmp
sbb
popf
repnz
jl
push
or
fildll
xor
out
rolb
enter
cmpsl
sbb
mov
mov
adc
mov
in
popa
mov
insb
mov
mov
add
jg
icebp
fwait
aaa
push
adc
ljmp
cmp
cmp
clc
lcall
insb
mov
les
cs
xchg
jp
sub
mov
cmc
ljmp
sbb
js
lcall
xchg
or
rclb
sbb
push
clc
mov
mov
mov
bound
jmp
adc
fcmovb
mov
xchg
movsb
das
test
fisubl
jns
test
pop
lock
movsl
insb
loopne
sti
aas
xor
sub
xor
push
sub
xor
mov
push
xor
cmpsl
push
ss
mov
push
das
repnz
sti
pushl
push
pop
lret
sbb
aas
in
and
inc
incl
inc
je
out
mov
stos
mov
cltd
or
lods
dec
scas
in
jmp
cltd
push
scas
jp
jg
insb
loopne
mov
std
aaa
adc
mov
mov
test
popa
and
jns
adc
test
cmp
popa
orl
or
adc
aaa
pop
cwtl
ljmp
mov
test
pop
add
sbb
icebp
roll
inc
insb
loopne
jmp
inc
xchg
adc
jae
es
push
call
and
add
cmpsb
mov
or
cmp
adc
mov
and
xchg
or
dec
fisubrl
stos
mov
sub
mov
push
add
fdecstp
add
andl
or
sbb
pop
jp
lret
sarb
adcb
roll
mov
clc
lock
dec
add
fcomps
out
ret
out
mov
add
add
and
lcall
outsb
andl
push
jge
mov
and
pop
nop
xor
mov
lock
movsb
movswl
push
mov
mov
sub
add
and
loope
pop
mov
aad
ljmp
sbb
mov
and
push
push
test
andb
fbld
push
push
add
push
enter
lea
xchg
jge
and
rclb
add
mov
pushl
or
cli
adc
mov
pushf
inc
or
dec
adc
fadds
jbe,pn
call
sub
mov
mov
or
test
push
cmp
insl
imul
out
xor
cmpsl
lcall
js
out
inc
cmp
mov
mov
popa
add
xchg
call
add
sbb
mov
inc
adc
mov
insb
loopne
ljmp
or
das
je
into
call
fsubp
sbbl
and
into
or
insl
jmp
ljmp
inc
es
cmp
add
cmp
das
add
mov
pop
inc
xlat
jae
dec
inc
lea
and
pop
mov
inc
outsb
fidivs
or
mov
cld
push
in
gs
in
push
mov
lcall
sub
push
cmp
adc
push
cmpl
incl
push
pop
add
mov
push
bound
jmp
decl
or
je
test
cmp
pushf
mov
pusha
mull
movsb
inc
sbb
or
decl
adc
fucom
pushf
inc
fucomip
std
inc
call
jecxz
mov
sub
jle
mov
push
leave
popa
add
pop
xchg
scas
loopne
mov
pop
imul
mov
mov
std
xor
push
push
add
lahf
mov
mov
fsubs
xor
jmp
js
add
notb
mov
xchg
and
inc
mov
decl
mov
xchg
inc
or
ss
add
movsb
push
lea
insb
or
inc
icebp
lcall
call
cmpb
adc
mov
rcrl
push
push
push
adc
mov
mov
xadd
jp
lcall
test
mov
sarl
pop
mov
xchg
loopne
push
mov
xchg
inc
jl
lcall
jmp
push
xor
adc
mov
jae
leave
add
pusha
test
ljmp
ret
jne
inc
xchg
mov
jo
adc
adc
daa
fildll
adc
loope
dec
add
pop
popa
jnp
or
imul
outsl
loopne
pop
sti
sbb
dec
dec
mov
incl
je
jnp
mov
mov
cmp
inc
ja
mov
push
ds
inc
ljmp
jl
add
sarb
or
sbb
cmp
inc
loopne
lcall
inc
jns
cmp
inc
sbb
scas
cmpsb
xchg
inc
daa
ret
mov
mov
movsl
push
stc
pop
sarb
lea
dec
jle
dec
cmp
fdivr
push
into
sbb
call
adc
adc
scas
jle
ud0
ja
xchg
pusha
and
test
jg
cwtl
pop
test
aam
lods
psubusw
mov
dec
pushl
subb
fcomps
jae
mov
inc
orb
insb
xchg
es
insl
ret
hlt
lcall
xor
jg
jb
inc
mov
mov
sub
imul
mov
pushf
xchg
js
imul
and
inc
jecxz
cmc
call
pop
or
and
cs
ret
decl
scas
push
or
dec
into
sbb
outsl
sbb
sarl
jae
xlat
scas
add
pop
sbbl
cmp
lcall
pop
les
and
out
in
mov
add
cmp
sbb
push
mov
movsl
out
sub
mov
jmp
or
adc
jno
shll
jg
push
mov
roll
push
jl
pushl
js
cmp
rclb
and
mov
in
cmp
xorb
cmp
or
xor
mov
add
xor
pop
xor
push
jge
inc
adcl
mov
push
add
pushf
cld
call
fimuls
xor
loopne
and
push
jb
or
nop
add
cmpsl
mov
gs
cmp
fimull
call
cld
jmp
scas
shlb
rclb
inc
inc
lods
cs
test
add
test
inc
ds
add
or
icebp
test
push
es
cs
jnp
mov
sbbb
ljmp
ret
daa
in
popa
subl
jne
add
enter
jno
decl
nop
addl
nop
mov
sahf
push
mov
push
push
hlt
clc
cld
push
adc
or
insl
test
outsl
clc
inc
sbb
sub
cmpsb
sbb
shrb
jae
mov
adc
inc
xor
out
dec
fld
pop
hlt
lea
ret
xor
nop
xchg
clc
push
and
or
adc
jo
cmp
filds
ljmp
xchg
loope
add
ret
or
ret
imul
pusha
decl
pop
add
rorb
cmc
cmp
call
or
outsb
inc
jbe
add
dec
or
mov
addr16
insb
inc
adc
and
cld
rolb
fdivp
lret
xor
and
aas
cmp
scas
add
lret
mov
out
push
out
cwtl
insb
loopne
sub
mov
jo
test
mov
call
dec
inc
push
outsb
push
mov
cmp
loopne
ljmp
mov
add
mov
scas
lods
push
rcrb
fcomip
inc
dec
dec
xchg
test
js
ret
pop
or
mov
and
or
cmp
jg
incl
jns
fldenv
daa
cmp
sti
outsl
inc
mov
cmp
aas
lds
inc
cmp
loope
adc
movzwl
lds
stos
pusha
jo
push
ret
sbb
es
lods
jge
xor
fiadds
decl
dec
pop
test
sbbb
in
xor
jle
shll
js
pop
fld
das
fs
outsl
push
pop
hlt
or
sbb
jp
mov
mov
movsb
daa
pushl
mov
fwait
push
pop
pop
pushf
push
cltd
dec
xor
daa
and
jmp
mov
mov
aad
add
mov
fwait
incb
and
loopne
faddp
cmp
fdivr
add
cmp
sub
pushl
adc
ss
push
inc
fsubr
mov
dec
lock
icebp
add
cmpsb
ss
incl
insb
dec
inc
inc
das
roll
ds
mov
xchg
and
xchg
lcall
inc
call
fstpl
lea
add
and
lcall
movsb
add
mov
sub
jl
insl
or
sbbl
mov
aaa
subb
fdivr
or
mov
add
or
add
and
mov
out
xcrypt-ofb
cmpsl
sub
cmp
xchg
jecxz
or
je
xchg
ret
outsb
daa
mov
ja
pop
aas
lcall
inc
add
fsubrs
inc
xchg
add
pop
dec
adc
pushf
adc
push
das
sbb
jmp
push
std
inc
sbb
or
lahf
jge
sbb
jl
inc
mov
sub
into
scas
shrl
decl
pop
xlat
ja
lods
movsb
mul
mov
pop
out
cli
aas
out
sub
ficompl
inc
scas
mov
jg
jmp
movsl
nop
xchg
or
js
scas
inc
pop
mov
cmpl
sbb
adc
inc
fdivl
lahf
inc
fadd
sub
aas
mov
in
pop
adc
adc
or
out
sub
inc
ficoml
iret
inc
iret
mov
orb
ret
mov
call
inc
push
sub
mov
lock
pop
add
adc
adc
xchg
adc
pushl
aam
lods
cmp
je
stos
or
testl
bnd
pushl
inc
mov
sub
jg
test
fcmovb
and
and
lods
jmp
addr16
inc
jmp
fcomip
and
mov
cs
fcomp
outsl
xchg
mov
push
push
sbb
hlt
cmp
jmp
lret
jge
sbb
aaa
xor
sub
jge
add
test
xchg
pop
mov
rep
mov
xorb
pop
cmc
xchg
cmp
hlt
in
pushf
cmp
ljmp
mov
je
cmp
jb
cmp
ja
imul
sub
inc
mov
pop
push
ret
sbb
cmp
dec
jge
ds
xchg
cmp
jg
decl
pop
cmpb
push
aaa
cmp
add
scas
xor
mov
pop
pusha
jne
imulb
sbb
lea
push
lcall
ljmp
sub
imul
jns
arpl
clc
pop
enter
ss
jge
in
js
mov
inc
leave
mov
jno
push
fdivl
fsubrs
shrl
rcrb
test
cmp
mov
mov
jg
cmp
jmp
sub
mov
sbb
push
lcall
jo
bound
cmpsb
lcall
repnz
jno
jmp
xchg
and
xor
cmp
test
or
ret
ljmp
cmp
sbb
mov
add
jecxz
es
xor
jp
mov
gs
mov
lods
xor
mov
or
dec
fadd
stc
fdivrp
or
aam
add
aas
decl
cmp
in
lea
in
mov
test
inc
mov
das
cli
sti
ja
cmp
ja
or
jp
pop
lods
es
dec
mov
push
in
cld
jg
pop
ds
mov
int
sti
jmp
push
repnz
mov
mov
or
or
xorl
call
dec
cmpb
aam
out
add
adc
lcall
popa
stos
ss
lods
and
jne
and
push
push
int
or
push
cmp
ljmp
mov
jp
push
cmp
push
mov
dec
iret
ja
ljmp
pop
daa
clc
movb
sub
inc
fisubrs
or
adc
jb
shrl
xor
call
stos
adc
shlb
cmc
test
dec
and
call
push
push
dec
into
jl
cmp
sar
inc
mov
fildl
xchg
decl
sub
and
in
in
int
mov
xchg
push
lret
or
pop
std
push
adc
rcr
outsb
inc
es
int3
inc
xchg
mov
call
add
aaa
mov
push
lret
jmp
movsl
xor
xor
jnp
sbb
sub
inc
pop
idivb
in
into
hlt
dec
cld
pop
lock
push
push
and
jmp
lcall
jecxz
outsl
pop
fcmovb
dec
cmp
or
aas
decl
jo
adc
sub
insl
rcll
xchg
mov
dec
clc
sbb
lock
mov
jg
dec
lock
sahf
jmp
add
leave
stos
sub
int
add
inc
enter
stc
and
aam
jmp
sub
push
sub
ljmp
dec
adc
and
xor
cwtl
push
or
int
pop
pop
add
mov
add
into
push
jb
pop
aaa
dec
sar
or
mov
cmp
shlb
inc
add
and
xor
sbb
je
pop
pop
orb
in
jg
sbb
cmp
or
push
inc
negb
adc
cmpsb
imull
das
cld
lock
movsl
xchg
push
mov
cmp
or
xchg
lock
incl
push
data16
ljmp
sbb
aam
iret
insl
mov
cmp
jg
or
cmpsl
jns
adc
lahf
xor
push
stos
in
test
mov
mov
in
ljmp
jae
movsl
lea
xchg
cmpsb
xorb
fisttpl
jge
nop
fmul
lods
je
sub
insb
xor
xchg
xor
pushf
rorb
push
data16
sub
mov
rorl
es
movsl
push
inc
inc
or
call
call
jg
jnp
mov
push
mov
push
adc
sahf
out
outsb
pop
int
insb
sbb
inc
or
push
dec
cmp
orb
test
cld
lcall
out
jne
sub
xchg
mov
loop
loop
cmp
aas
enter
cmp
ret
or
loope
clc
decl
das
xor
loope
sub
insb
push
cmpsl
in
jp
jmp
pop
dec
ret
pushf
out
fmulp
pop
pop
sub
mov
or
jl
add
jnp
fwait
jmp
in
ret
pop
mov
dec
mov
adc
fstps
inc
cwtl
loopne
lcall
lock
xchg
mov
pop
xor
mov
dec
jmp
out
orl
jmp
xchg
or
loopne
or
xchg
fmul
out
loopne
nop
cs
pop
xlat
inc
push
addr16
xlat
xchg
sub
and
incl
rcrl
or
cs
leave
mov
lock
push
stos
mov
mov
nop
adc
and
inc
pop
cltd
sarl
and
push
test
rclb
aaa
imul
add
insl
sar
mov
push
lahf
fwait
mov
loope
cs
pop
and
jns
mov
push
ret
incl
cld
push
cld
xchg
cs
cmc
mov
sub
lock
jg
dec
fidivrs
scas
nop
ficoms
dec
fstl
lret
add
fst
adc
loopne
test
push
call
pop
iret
mov
ret
adc
in
test
add
nop
or
ljmp
repnz
jg
adc
push
pop
pushf
mov
inc
dec
loopne
mov
pop
dec
or
lock
scas
testl
sub
pushl
cmp
call
pop
sub
mov
ss
shrl
or
jnp
jge
fsubs
pop
add
dec
adc
mov
add
movsb
sarl
lcall
mov
cmp
imul
mov
jl
mov
and
mov
cmpsb
pop
cli
mov
pop
fwait
scas
jmp
minss
loopne
mov
arpl
pop
addb
xor
add
push
or
insb
daa
mov
adc
push
pop
add
add
or
cltd
jge
sub
or
lcall
jg
sbb
aas
lea
mov
sahf
in
mov
xor
ret
push
xlat
sbb
sti
add
std
out
clc
gs
jle
lret
popf
pop
and
pop
mov
lock
ficompl
or
rcl
cld
or
repz
rcr
sbb
lock
loopne
inc
jecxz
ljmp
mov
mov
insl
bound
sub
stos
ret
std
add
dec
aam
jnp
push
and
inc
mov
xchg
pop
mov
mov
stos
neg
sbb
insb
loopne
dec
jg
jge
decl
mov
inc
push
push
mov
shr
std
das
clc
push
mov
cmp
mov
ds
sbb
mov
mov
push
aaa
insb
loopne
pop
mov
das
clc
pop
pushl
insb
mov
insl
add
fadd
fdivp
push
mov
add
add
jmp
xor
adc
aaa
jge
mov
lods
popa
add
test
inc
dec
jne
jmp
cld
lcall
cli
cmp
push
fsubr
stos
xor
adc
hlt
sub
jecxz
imul
lret
mov
ret
outsl
pop
push
lods
popa
add
lcall
sbb
fwait
add
decl
cmp
js
jb
pushf
fwait
js
les
fdivrp
ljmp
add
or
fstps
ja
imul
movsl
loope
in
dec
mov
pop
or
mov
and
repz
sub
sub
and
adc
ljmp
mov
stc
jbe
sub
sub
xlat
mov
es
jg
outsl
adc
jns
into
orl
sub
in
push
mov
mov
lcall
popf
and
fcmovb
in
movsl
inc
add
mov
loop
ljmp
outsb
bnd
incl
cli
ret
cltd
mov
repz
adc
add
adc
cmpsb
in
inc
fcmovnb
fstpt
incl
xchg
xor
push
fsubrl
push
push
pop
cmp
imull
out
sub
or
in
pop
or
or
nop
pop
ljmp
mov
or
xor
and
push
fsubl
push
mov
adc
or
incl
js
add
out
test
out
mov
cs
mov
insb
loopne
cmp
and
andl
inc
stos
xor
cmp
cmpl
push
xor
inc
inc
push
enter
ljmp
add
cmpsb
je
imul
adc
out
fabs
push
sub
push
shrl
and
ja
push
inc
rcr
scas
jo
lock
lcall
mov
lcall
arpl
fistps
inc
sub
xor
js
sbbb
jl
ds
jg
fdivrs
sbb
pushf
or
rorl
imul
and
jnp
push
cmp
and
xor
lock
pusha
xor
jg
inc
adc
cmp
inc
mov
stos
loopne
je
notb
cmp
ljmp
push
mov
ret
cld
out
lcall
ret
insb
adc
scas
mov
cmp
movb
inc
xchg
icebp
sub
and
xor
loopne
loope
adc
jg
push
add
sub
lret
loopne
test
rolb
pop
lds
ljmp
cli
mov
cmp
sbb
jmp
in
fidivl
fwait
pop
imul
push
sub
push
jle
shlb
out
cli
pop
ret
push
pop
fldt
fnstcw
fadd
into
pop
and
inc
ljmp
pusha
push
mov
enter
aas
divl
mov
jmp
mov
fwait
push
or
bound
or
pop
jecxz
or
or
popa
add
jg
lock
std
pop
and
sub
fadds
call
sar
imul
jnp
mov
pop
ret
push
push
ret
push
push
sarb
add
jg
lock
lcall
xor
mov
sahf
add
frstor
add
push
aaa
adc
popa
add
test
mov
mov
inc
negl
inc
test
insl
and
push
int
cmp
jg
add
test
cmp
in
cmpsb
fiaddl
add
ljmp
jo
jg
es
mov
push
and
cmp
fmulp
je
nop
jb
add
add
sbb
inc
push
sbb
add
call
push
enter
lret
sub
test
movl
and
andb
and
nop
mov
dec
or
ljmp
or
inc
mov
lods
shll
push
adc
mov
fsubs
decl
xor
outsb
jbe
sub
xchg
adc
out
ret
jge
fdivs
and
in
push
loope
sbb
inc
mov
ret
mov
sbb
inc
mov
and
test
xchg
add
pop
xchg
mov
fisubl
std
add
xor
lcall
nop
icebp
pop
lods
pop
scas
adc
mov
daa
divl
adc
push
in
adc
add
addr16
movsb
incl
cwtl
xchg
jae
sbb
stc
push
stc
inc
cli
sub
jb
jbe
cmp
sub
lock
je
inc
lcall
or
sub
or
mov
push
or
fsubr
jecxz
mov
inc
mov
lcall
sub
inc
idiv
pushl
push
mov
iret
lea
loop
out
loop
sahf
or
jmp
mov
test
dec
out
jg
bound
mov
popl
mov
jg
push
cwtl
repnz
adc
mov
push
cmp
xchg
int
shll
and
loop
dec
fwait
call
enter
ret
insb
mov
jo
adc
js
test
adc
mulb
adc
sub
inc
inc
mov
add
insb
sub
sbb
xorb
incl
repz
add
jg
shrb
mov
adc
lock
mov
and
lcall
or
jb
sti
insb
je
jnp
sbb
ja
adc
push
loopne
sti
outsl
dec
popf
mov
subl
sbb
rclb
repnz
xor
neg
add
lcall
dec
fcoms
insl
insb
ds
add
or
incl
ret
push
inc
std
std
xchg
xor
pop
rcll
in
pop
xchg
ja
popl
and
out
clc
mov
add
imul
cld
xchg
mov
xchg
mov
movsb
lea
or
insb
push
clc
jle
mov
hlt
or
lods
push
push
std
ljmp
inc
push
cmpsb
pop
inc
push
dec
data16
or
pop
loopne
ret
add
lock
lcall
jge
shl
decb
pop
push
xchg
lods
mov
mov
insl
data16
imul
fcoms
mov
inc
push
mov
sbb
data16
inc
sarb
decl
push
shll
ret
clc
xor
cmp
loop
out
sahf
dec
insb
dec
cmp
jb
adc
int
adc
shlb
sbb
fwait
mov
mov
hlt
or
inc
outsb
jmp
jg
fldcw
sbb
pop
sbb
dec
int
mov
cld
mov
cmp
inc
xlat
push
jecxz
push
push
dec
icebp
out
int3
and
sub
push
add
mov
push
sub
push
push
cmp
jbe
faddl
jo
fstpl
lret
pushl
rclb
add
ljmp
sub
shrl
incb
sar
cmpsb
push
jg
ret
and
std
enter
lret
stos
repnz
aaa
pop
jg
add
sub
jmp
xchg
inc
and
pop
sbb
leave
adc
out
popa
xor
add
mov
fcomip
ljmp
xor
or
add
mov
scas
mov
loopne
popf
mov
ffreep
and
sbb
pop
adc
jo
pop
jo
dec
mov
scas
bound
clc
pop
stos
shll
lcall
stc
add
test
rorl
in
xor
pushl
rolb
or
mov
pop
ret
push
cld
cmpsl
jns
mov
flds
pushl
loop
push
lahf
lret
in
jl
hlt
idiv
jecxz
loope
loop,pn
in
xlat
adc
out
popf
lea
enter
fisubl
ljmp
repnz
push
mov
mov
and
pop
loopne
faddp
xor
repnz
mov
xchg
orb
mov
mov
sub
shll
pop
sbb
sub
icebp
xor
mov
xchg
add
nop
mov
decl
es
ficoms
lods
or
dec
insb
lcall
cmp
dec
cld
jle
jno
cmp
xchg
inc
xor
push
jecxz
or
mov
sbb
jg
or
cwtl
inc
xorb
in
add
jle
ljmp
je
lock
in
jp
or
sbb
jmp
out
bound
das
ljmp
push
inc
call
in
add
pop
insb
jmp
sbb
mov
jg
mov
lret
sub
sbb
icebp
jmp
pop
add
jne
add
mov
jne
shll
decl
add
jmp
sub
stos
ss
pusha
daa
jns
std
decl
ss
daa
das
aas
sbb
bound
pop
push
aam
adc
mov
cmpsb
or
repz
add
xor
clc
ljmp
jb
and
incl
es
sub
out
push
test
repz
xchg
stos
or
stos
push
fxsave
mov
stos
dec
popa
ret
fcmove
imul
ljmp
call
mov
scas
cli
mov
mov
ss
call
inc
jmp
fadd
fiadds
cmp
add
add
and
testl
or
or
or
incl
jl
add
pop
add
mov
mov
or
ret
or
in
add
add
cmp
in
dec
jbe
insb
sahf
int
out
or
mov
dec
repz
test
stc
repnz
jle
cld
mov
call
pop
adc
je
pop
nop
and
pextrw
call
loop
mov
mov
in
pop
sub
mov
adc
popf
je
mov
dec
push
lea
in
test
push
add
js
ljmp
sahf
jo
in
addl
push
pop
shrb
in
cld
repz
decl
push
mov
mov
pop
cld
sub
add
jg
aad
orl
cltd
cltd
pushl
test
mov
and
mov
push
ret
xor
insb
and
sahf
fimuls
jg
in
xor
mov
lcall
cmp
nop
jle
rolb
mov
mov
incl
dec
jg
outsb
aas
mov
incl
ss
or
je
cmc
imul
sub
xchg
jne
jp
pop
fnsave
ret
mov
sub
decb
incb
sbb
mov
dec
cld
je
sbb
add
fdivrp
das
pop
icebp
xor
sbbb
repz
pop
outsb
inc
clc
lods
movsb
dec
scas
ljmp
lock
scas
jg
mov
or
add
add
and
or
stc
fmull
popa
and
add
hlt
pop
loope
sbb
jl
inc
enter
mov
jg
add
in
repnz
lock
popa
xchg
divl
cmp
jg
scas
mov
mov
cmp
subl
loope
inc
hlt
fisttpl
loopne
imul
shrl
xchg
xor
jae
iret
enter
std
call
js
enter
push
jl
shlb
push
xor
cltd
mov
shrd
add
lret
pusha
pop
dec
stos
mov
mov
loope
in
enter
out
mov
arpl
loopne
jmp
mov
negl
pop
fs
iret
inc
mov
ljmp
fcompl
or
mov
mov
jg
sbb
cmp
adc
adc
cld
call
jmp
faddl
xor
jl
adc
cmpsb
cmpl
jne
push
stos
adc
pop
loopne
ret
outsb
fsubrs
cmc
pop
sbb
adc
call
or
dec
bound
clc
rorl
sarl
inc
or
mov
icebp
lods
mov
das
add
jne
lcall
dec
and
add
les
cmp
xor
sub
inc
sub
mov
jmp
pop
mov
sbb
test
fld1
lea
jmp
mov
inc
xchg
mov
pop
xorb
xor
aaa
cld
decl
and
push
push
and
and
aam
mov
jg
fimuls
decl
mov
xchg
jle
je
xor
nop
cmp
ds
js
mov
or
jg
decl
sbb
and
sub
clc
ljmp
cld
jns
loop
aas
sbb
pop
sbb
xlat
cld
mov
mov
push
dec
mov
xchg
mov
jg
aas
dec
and
xor
dec
in
daa
cld
loope
daa
xor
notb
inc
mov
lock
test
repz
dec
mov
sub
iret
inc
dec
ljmp
popa
dec
hlt
push
push
call
insl
xchg
sahf
xor
jae
adc
aam
mov
sub
sbb
loopne
pop
add
lods
out
negb
mov
out
xchg
xorl
mov
pop
pop
testl
mov
adc
cmpsb
add
mov
scas
lcall
adc
dec
push
push
xor
push
xor
mov
xchg
sbb
rol
pushl
and
std
sbb
lret
xor
call
mov
add
and
sbb
sbb
xor
inc
pop
or
jle
dec
inc
clc
push
loop
xor
pop
lahf
jmp
xchg
adc
cmp
jmp
push
jl
mov
push
mov
shlb
aam
subb
add
mov
cld
fwait
popf
ficomps
lods
adc
add
outsl
loopne
mov
lcall
cmpsb
add
adc
push
call
sub
or
dec
mov
jg
inc
sub
cwtl
cli
cvtps2pd
pop
test
fisttps
xchg
arpl
hlt
pusha
jne
fwait
dec
add
jno
decb
sbbb
cltd
push
in
mov
and
xor
rol
xor
add
clc
jl
out
add
or
mov
decl
adc
mov
in
add
pop
mov
lock
lea
mov
push
lods
adc
loope
out
add
pop
loopne
push
faddp
sbb
push
shr
pusha
test
mov
ljmp
clc
dec
mov
adc
jbe
jmp
shl
call
mov
sti
decl
xchg
pop
fcompl
stos
xchg
sar
lods
mov
sbb
jmp
dec
jle
mov
aad
mov
push
or
addr16
shll
addr16
cld
pushl
dec
bound
fs
sahf
loop
xor
add
call
pop
xor
pushl
or
pusha
cmp
loope
xor
call
es
loopne
lahf
xlat
xor
in
out
ljmp
xor
loopne
mov
add
call
pushf
mov
stc
add
outsb
mov
mov
mov
mov
and
sub
xor
jmp
div
sbb
add
mov
add
jl
xor
pop
and
mov
ljmp
mov
pop
or
out
ja
popa
xor
xor
adc
or
addl
jmp
popf
lcall
and
stos
dec
jmp
aaa
clc
subb
jmp
mov
rcl
ds
and
jmp
fdivrs
xchg
adc
sub
icebp
cmp
cld
lcall
fsubrs
enter
pop
fidivl
aam
aam
pop
cli
movsb
js
jg
xor
mov
out
in
in
xchg
test
out
or
cwtl
xchg
or
rcrb
push
outsl
or
filds
clc
jg
out
mov
sbb
aad
add
add
add
and
jg
out
push
xchg
jbe
incl
dec
jb
mov
push
js
add
and
dec
xchg
pop
lds
adc
mov
fisttpll
sysenter
push
cmp
cltd
or
lcall
cmp
cmp
jbe
or
testb
leave
and
xlat
add
jmp
lock
push
cmpsb
inc
adc
cmp
sbb
je
ja
jne
adc
add
sbb
cmp
lock
loope
or
iret
adc
or
mov
aam
sahf
or
incl
jb
imul
daa
push
push
adc
popa
addr16
sbb
stc
clc
xchg
lret
cmp
jae
int3
inc
stc
mov
lcall
xchg
mov
test
jp
pushf
ret
mov
jecxz
test
bound
xchg
shll
rcrb
inc
xor
adc
or
pushl
adc
call
scas
add
adc
add
pop
or
push
adcl
sar
aas
add
mov
cs
sbb
ljmp
into
sbb
insl
inc
or
outsb
xchg
pusha
and
divb
adc
and
jno
sbb
sbb
xlat
push
push
push
fprem
push
hlt
push
stc
or
lahf
shll
xor
mov
loopne
mov
push
inc
and
or
push
lret
xchg
push
push
lcall
cwtl
add
mov
inc
pop
or
pop
pop
notl
xchg
les
xor
fistpll
movsb
call
add
subl
ljmp
pusha
comiss
push
adc
cli
ljmp
lods
or
rcr
scas
mov
mov
jo
clc
pushf
loop
dec
push
das
sar
add
or
rorl
pushf
test
pushl
mov
dec
inc
inc
dec
lret
in
pop
lret
in
clc
insb
popl
in
xor
stc
nop
loopne
xchg
mov
xor
fsubrs
popa
cmp
jmp
imul
pop
add
int
xchg
push
in
sub
es
mov
shlb
in
dec
call
cmp
in
iret
mov
clc
ljmp
or
add
inc
movsl
out
jecxz
cld
ljmp
testb
test
or
je
xchg
cmp
pop
jne
shlb
incl
xchg
loope
setne
test
out
mov
jno
sbb
xchg
sub
fisttpll
insl
inc
incl
hlt
pop
popf
mov
push
xor
inc
mov
clc
mov
decl
push
aas
out
bound
fwait
aas
push
pop
outsb
loopne
cmpsl
mov
adc
add
ja
inc
ficompl
std
orl
lcall
ret
mov
js
jo
daa
pop
xor
mov
pop
dec
stos
push
mov
cs
pop
icebp
incl
add
fs
popa
dec
pop
addr16
shll
push
jmp
faddp
jnp
cltd
in
add
xchg
hlt
pop
or
and
decl
mov
fwait
or
repz
push
inc
clc
jmp
faddl
sub
or
inc
jmp
sbb
and
cmp
xchg
adc
pop
test
les
faddl
sbb
sbb
jp
push
inc
loope
std
fisttps
aaa
sbb
test
push
sbb
mov
rcr
daa
add
decl
and
test
loopne
mov
inc
jmp
nop
dec
xchg
mov
sub
mov
mov
xor
pusha
in
xchg
cmp
cmp
std
decl
test
push
inc
je
sbb
mov
xchg
cld
jg
or
push
sub
repnz
loopne
xchg
popf
add
or
ja
sbb
scas
pop
sub
push
gs
aas
test
in
es
jecxz
push
mov
sub
inc
negb
sub
call
xor
lods
fcmovne
test
cmp
cmpl
mov
dec
in
sub
or
inc
pusha
ljmp
clc
dec
jnp
aaa
movsl
xor
lea
loopne
bound
popf
gs
mov
lcall
stos
inc
in
add
xor
inc
adc
out
sub
xchg
jnp
adcl
or
or
xor
and
fcomip
incl
fadds
into
or
fisubs
pushf
and
ss
pop
call
add
shl
add
xchg
pop
jle
insb
and
and
cld
or
test
jmp
pop
ficoml
mov
lret
add
mov
js
nop
mov
decb
pusha
or
ljmp
or
lea
aam
or
mov
mov
sub
cs
or
push
out
cltd
decl
or
sbb
sti
mov
jp
pop
push
sbbb
out
push
test
and
fcompl
push
pop
jns
lods
xchg
dec
mov
mov
mov
nop
push
push
jnp
iret
data16
xchg
add
sub
pop
incl
imul
adc
test
enter
cld
stc
or
jnp
sar
pushf
xor
xchg
aaa
add
icebp
push
or
push
mov
mov
movb
jmp
sahf
data16
sbb
push
je
dec
adc
fisubs
ror
js
fldl
or
fisttpl
es
dec
pop
orl
xchg
insb
jl
ljmp
pop
std
decl
sti
aam
andl
andb
bound
ja
xchg
pop
add
add
ss
test
inc
sub
adc
inc
mov
jg
mov
adc
xlat
in
sbb
fbstp
je
dec
add
inc
pop
ss
jbe
add
inc
sti
mov
xchg
push
push
adcl
pop
inc
pop
mov
cmpsb
xchg
fistps
cltd
cs
cmpsb
jle
adc
test
adc
ret
mov
fdivs
add
xchg
or
sub
xchg
mov
push
inc
int
aam
cmpb
lcall
aaa
jno
jne
sti
or
dec
negb
xchg
add
pop
push
adc
xchg
lcall
pushl
mov
or
std
mov
xor
pop
or
adc
loopne
rol
cmpsb
jg
iret
adcb
sbb
loope
xor
jbe
call
stos
sub
or
je
sub
mov
add
sbb
inc
shlb
or
mov
sbb
mov
ja
or
dec
sti
push
ret
push
clc
cmp
decl
pusha
pop
jp
int3
push
or
movsl
adcl
bound
mov
inc
add
push
adc
xchg
mov
sub
mov
xor
lds
mov
lock
jg
rcl
outsb
jmp
adc
mov
ret
daa
mov
mov
incl
loop
mov
add
aam
lds
xor
lahf
pop
xor
mov
cld
les
mov
stos
decb
jge
clc
add
pop
jl
add
lods
dec
loopne
cwtl
jl
mov
and
cmp
clc
xchg
mov
jne
jmp
insl
add
mov
xor
fldl
push
pop
push
enter
insb
addb
inc
cltd
sbb
sbb
call
pop
cs
push
push
mov
sub
sub
jmp
nop
lock
cmp
and
lret
add
push
ljmp
or
push
push
mov
mov
and
mov
sar
cli
cmp
mov
ds
cs
out
or
popa
xor
adc
lret
sub
jge
pop
cld
adcl
pop
cmp
inc
inc
jae
out
push
test
out
add
push
adc
mov
jmp
popa
xor
jb
xchg
mov
fs
mov
and
mov
sub
pop
adc
lock
fsubrs
and
mov
rclb
push
enter
pop
mov
dec
xchg
and
call
mov
rcll
xchg
decl
js
test
mov
out
jb
mov
leave
leave
xchg
mov
lcall
mov
adc
pop
add
cmp
or
jmp
push
pop
adc
lock
or
dec
and
std
sub
mov
js
ljmp
cmp
in
jae
fstpt
cmp
mov
mov
xor
jmp
in
xor
lock
nop
lock
xor
fwait
nop
in
mov
js
inc
sbb
aaa
popl
or
adc
or
or
adc
mov
orb
add
rorb
jo
sbb
xchg
pushf
es
pop
ds
pushf
mov
and
cmp
inc
push
les
rorl
adc
inc
or
ljmp
out
lret
repnz
cli
decl
mov
jle
adc
xchg
add
mov
cmp
incl
dec
xchg
pop
stc
sbb
adc
ficomps
ret
repnz
push
adc
or
subb
stc
inc
mov
sub
fstpt
fs
cwtl
mov
adc
ds
xlat
mov
sbb
test
stos
arpl
jge
jne
sub
xor
jo
leave
rclb
push
jl
push
mov
sar
sbb
jp
loope
aas
loopne
sub
push
pop
cmp
sub
mov
inc
lret
mov
or
incl
les
imul
lcall
mov
mov
dec
jmp
adc
jmp
push
sub
dec
pop
rcrl
pop
insb
add
mov
mov
push
and
das
mov
dec
mov
or
inc
nop
rol
mov
outsb
mov
clc
add
sbb
xchg
outsb
lea
mov
mov
lcall
pop
jns
fucomp
add
lea
fcoms
mov
sbb
mov
insl
lcall
or
fmulp
mov
sub
add
jo
xor
leave
or
lcall
notb
jge
pushf
sbb
cmp
mov
push
sub
add
fisubs
mov
dec
adc
and
call
jne
scas
pop
sub
add
inc
cwtl
lods
packsswb
jecxz
mov
pop
pushl
std
lcall
nop
out
adc
gs
sbb
lret
dec
dec
scas
cli
jmp
xor
adc
xchg
daa
mov
jl
shl
sub
jns
out
sub
adc
or
xor
incl
call
and
pop
test
sub
xchg
add
shrl
or
mov
neg
out
jae
fidivrs
add
outsl
ret
enter
test
call
imul
incl
cs
int3
pop
adc
cmpsl
push
bound
sub
test
jge
jae
jb
lods
sbb
xchg
and
call
adc
pop
clc
imul
push
dec
and
loopne
xor
sub
mov
pop
nop
movsb
cmp
je
leave
inc
lcall
js
pop
push
sub
sbb
fdivl
mov
pop
cmpb
loopne
xor
incl
adc
cmp
out
dec
jmp
dec
test
iret
stos
in
in
jl
xor
shlb
les
lds
mov
push
and
mov
mov
dec
test
shlb
mov
ret
mov
sub
push
mov
cmp
mov
dec
dec
inc
add
setge
dec
add
or
mov
pushl
pop
xlat
je
cli
bound
pop
pop
push
mov
ljmp
xchg
repnz
fisttpl
xchg
test
ret
cmpsb
sub
ljmp
nop
push
stos
sbb
sub
outsb
stos
scas
sub
jne
int3
hlt
decl
or
sbb
pop
xchg
add
push
xchg
leave
roll
sbb
push
lcall
loopne
add
lcall
mov
xor
sub
jae
aam
or
or
cld
rolb
inc
dec
pop
sarl
jge
mov
sbb
incl
push
mov
test
fs
aas
inc
dec
es
add
adc
add
inc
mov
sti
ss
adc
nop
hlt
mov
inc
sbb
cmp
icebp
mov
or
cmpsb
sbb
cmp
sbb
xor
pop
add
mov
js
mov
pop
insl
sbb
nop
pop
mov
jl
push
decl
ret
add
cmp
sbb
nop
hlt
jle
sahf
sbb
jge
sbb
jg
push
xor
sbb
xchg
inc
or
jg
or
out
cmp
sbb
inc
push
pusha
mov
push
ret
jge
mov
call
arpl
loope
in
cwtl
jno
rcrb
inc
mov
pop
std
sbb
stos
ret
das
sbb
out
mov
fisubl
shl
ja
js
bound
int3
mov
dec
pop
rolb
ret
mov
xor
xor
pushf
or
enter
mov
xor
aaa
repnz
mov
push
popa
fs
sbb
xlat
test
decl
mov
sub
dec
loopne
push
cmpsl
pop
pop
or
daa
pop
cmp
inc
adc
and
ljmp
rclb
mov
inc
test
cld
sbb
and
inc
mov
and
adc
into
fwait
hlt
lcall
sub
jb
add
jb
ret
sub
loop
fwait
xor
shrd
call
inc
scas
sub
xchg
leave
aaa
mov
pop
push
add
mov
aam
sar
adc
ljmp
inc
jo
and
pop
in
lock
or
and
lcall
inc
inc
movsl
cmpsb
les
pop
aas
es
xor
test
decl
mov
fists
imull
jno
pusha
lret
pop
cwtl
les
sub
ljmp
in
inc
pop
pop
enter
add
pop
cmpsl
mov
pop
test
push
lret
lods
neg
insl
cld
push
mov
lock
jge
stos
xor
in
xor
sar
push
sub
bound
aaa
mov
outsl
or
dec
ffreep
mov
push
stos
inc
imul
loop
fisubrs
int3
js
jg
pushl
decb
out
or
or
pop
jne
les
push
dec
in
or
movl
push
push
or
xchg
pushl
stos
inc
ja
cwtl
test
xchg
jg
xor
mov
dec
lods
mov
mov
call
mov
incl
mov
iret
lret
popl
lcall
cs
mov
les
es
and
push
jle
xor
arpl
pop
add
clc
xchg
fisubs
outsb
shll
jp
loopne
fcomip
mov
push
je
sub
sarl
sbb
movsb
jle
ljmp
lock
mov
jl
lock
pop
in
jbe
sbb
lods
cwtl
inc
mov
adc
add
out
mov
mov
dec
sbb
das
pop
lcall
dec
sbb
sub
push
fs
dec
fisubl
in
in
and
bound
clc
ljmp
sbb
dec
fcoml
lret
out
loopne
add
loopne
dec
xor
jg
lcall
mov
rcll
cmp
shl
pop
jo
rcrb
daa
call
leave
je
inc
lods
mov
xor
js
loope
mov
adc
enter
inc
xchg
add
adc
mov
add
jmp
lahf
testl
jge
dec
xor
daa
and
outsl
push
movsb
ret
adc
xchg
out
nop
lret
clc
sbb
jle
jne
cld
lock
hlt
cltd
out
jl
cmpsb
mov
cmp
sbbb
test
out
pushl
es
mov
or
idivl
insl
fs
mov
fsqrt
fldt
and
aad
fsubrl
scas
add
incl
imull
push
fisubl
push
push
or
jmp
xor
sub
out
out
mov
inc
jo
cmpsl
daa
or
or
and
add
clc
inc
sahf
lock
adc
add
repnz
cli
mov
push
inc
mov
test
arpl
mov
push
adc
adc
jecxz
mov
sub
in
out
ljmp
inc
adc
popa
cmp
hlt
sub
xlat
cmc
loope
ds
jnp
add
fdivs
mov
in
jp
sub
addr16
inc
pop
movsb
mov
dec
std
addl
in
outsl
es
sub
pusha
scas
sub
shrl
jge
jns
loop
lock
pop
and
sbb
fimuls
mov
add
filds
xchg
in
outsb
in
cmpsl
cmp
movsb
in
clc
mov
test
sub
cmpsb
push
lds
repnz
int
pop
outsl
aaa
mov
jb
pop
in
mov
lret
stc
mov
add
sahf
lcall
sbb
outsl
mov
addl
outsl
inc
push
and
sbb
jae
push
adc
dec
scas
je
and
shlb
pushl
ja
xchg
xor
repnz
xchg
jbe
out
mov
xchg
pop
adc
call
loopne
call
repnz
loopne
fidivrl
mov
jb
pop
pusha
fdivr
incl
adc
pop
test
push
lahf
nop
push
fadd
xor
add
adc
pushf
sub
je
in
dec
push
pushl
dec
lock
lock
int
pusha
in
rcrb
aam
push
out
in
fwait
clc
fisttps
adc
in
inc
sbbb
pushl
or
pop
dec
fneni(8087
fnsave
sub
mov
test
roll
ret
push
loope
cmp
xor
ret
subb
adc
cmp
repz
push
mov
je
rcll
cld
pop
mov
push
jl
push
cmp
dec
sbb
add
ror
and
push
mov
pop
sbbb
fisttpl
cmpb
or
or
testl
add
movb
les
lock
pop
iret
add
cmp
outsl
ljmp
cli
jg
sahf
mov
out
movsb
adc
inc
jl
pushf
mov
jmp
dec
sub
enter
adc
aam
push
adc
jne
push
out
addb
dec
out
arpl
fmuls
jg
mov
adc
rorl
lea
mov
mov
add
call
mov
sti
cmpl
xor
loopne
sbbb
outsb
push
pop
decl
push
sarl
dec
cmp
mov
or
lea
push
inc
ret
xchg
jb
sbb
inc
add
fucomp
cmp
inc
cmp
ljmp
lret
popf
sub
dec
mov
jp
scas
in
xchg
cmp
xchg
adc
inc
in
adc
sarb
sub
dec
sbb
cmp
or
ljmp
or
sbbl
test
mov
add
mov
sub
daa
sar
decl
enter
or
ss
loope
inc
mov
insl
cs
cld
push
es
cld
adc
bound
pop
mov
add
adc
pop
lods
xchg
xchg
shlb
mov
decl
jbe
ret
adc
je
adc
adc
add
incl
jne
lret
sub
xor
sbb
pop
mov
test
lcall
inc
add
mov
call
fisttpl
clc
or
mov
jmp
rcrl
les
jnp
mov
xchg
nop
clc
xor
insb
incl
insb
or
push
dec
jecxz
fcmove
and
outsl
sub
jae
test
jl
imul
push
xchg
add
dec
ljmp
dec
dec
jmp
cmp
dec
sbb
lcall
sub
std
mov
dec
inc
mov
inc
mov
cltd
adc
mov
sahf
xchg
jl
add
fists
repz
pop
sbb
push
lds
movsl
adc
ja
cmp
sar
jmp
jle
push
xor
sub
and
out
out
lds
push
clc
or
repnz
add
mov
mov
dec
add
pop
in
push
mov
xor
cli
xchg
inc
imul
sub
mov
jo
iret
fs
call
mov
stos
movsl
inc
mov
jp
mov
daa
jp
sub
xchg
xchg
add
pop
sbb
mov
or
test
sbb
decl
xchg
fadd
or
sbb
inc
xor
pop
imul
push
mov
das
ficompl
leave
ffree
add
add
dec
loope
stos
outsb
dec
inc
fildl
sbb
jge
aas
mov
test
sub
xchg
add
out
fadd
movsl
pop
aam
int3
jmp
das
bound
adc
fisubrl
in
jl
mov
jl
pop
ret
sahf
in
jge
adc
call
push
aaa
jl
rclb
test
pop
adc
add
and
call
and
fsubrl
mov
fsubs
cmpsl
mov
inc
or
xchg
ret
lds
ljmp
scas
sbb
mov
pushf
sbb
jbe
mov
insb
xor
mov
cld
decl
mov
lcall
cmp
pop
incl
mov
rcr
sar
rorl
mov
mov
inc
jo
stc
ret
pop
pushl
int3
or
xor
pop
insl
adc
mov
loope
and
rol
incl
mov
jmp
jg
cmp
in
shl
xor
inc
jecxz
insl
fistpl
inc
push
sub
addb
adc
int
pop
xchg
and
fisttpl
cmp
pop
sahf
or
ror
cmp
or
sbb
movsb
mov
fbstp
and
dec
bound
rorl
bound
mov
xor
or
loopne
jb
pop
mov
and
insb
add
push
adc
mov
dec
ret
jnp
fstps
xor
push
jne
pusha
ss
cmp
inc
dec
fwait
mov
lcall
mov
sbb
aaa
xlat
fdiv
add
inc
dec
loopne
aaa
xor
mov
push
aad
and
adc
fcomip
dec
lock
les
ret
mov
popa
pop
add
dec
jmp
es
or
clc
shrb
mov
push
mov
sti
aaa
jge
pop
cmc
decl
fldl
adc
ja
push
mov
xor
sbb
add
decl
call
or
mov
fbstp
js
xor
test
pop
mov
je
adc
jb
and
cmp
jl
leave
and
xchg
enter
add
mov
xor
pop
incl
inc
inc
loopne
lahf
adc
mov
testb
mov
xchg
dec
test
pushl
push
xor
xchg
jne
enter
push
aam
iret
adc
dec
pop
mov
repz
rol
fiaddl
ds
mov
pop
push
dec
scas
sub
inc
jge
inc
pusha
mov
or
mov
add
pop
xchg
popw
xchg
add
dec
and
mov
jmp
jecxz
mov
mov
or
push
cwtl
out
pop
fdivr
call
dec
inc
xor
xchg
hlt
hlt
push
sub
lock
incl
filds
adc
movsb
loop
dec
pop
xor
inc
inc
rcl
sub
dec
cmp
mov
cld
adc
mov
pushf
inc
inc
pop
push
sub
add
ljmp
push
addl
add
pushf
adc
mov
cmpsl
add
adc
xchg
pop
xchg
ret
inc
cmp
movsb
sbb
daa
adc
xor
pop
cmp
or
adc
pop
add
fstpt
movsb
leave
xchg
enter
dec
lahf
cmp
dec
ds
dec
pop
push
cmp
pusha
es
jg
ljmp
movb
repnz
xchg
xchg
xchg
inc
cmp
test
sti
sar
add
pop
dec
aam
ficompl
ja
leave
and
cwtl
sbb
call
les
loope
mov
push
and
jg
push
cmp
xbegin
andl
scas
adc
inc
fisubrs
sar
decl
and
pop
pop
push
push
dec
enter
sub
or
cld
jg
lret
mov
sub
sub
pop
js
or
pushl
out
adc
inc
or
fsubr
cmp
adc
pushf
add
inc
push
ret
dec
rcl
pushl
cmp
sbb
push
jns
cmp
add
xor
imul
in
pop
cmp
or
adc
rclb
movl
mov
cmp
push
scas
inc
and
decb
push
clc
gs
add
sbb
xlat
outsl
add
sbb
ljmp
push
mov
inc
add
mov
test
push
imul
nop
andl
jns
lock
lock
push
insl
push
adc
mov
push
or
fcom
data16
in
push
lahf
gs
call
or
aas
stos
add
add
or
and
lahf
adc
ljmp
pop
sub
adc
xchg
je
sbb
mov
popa
inc
movq
call
add
aas
sbb
inc
aas
jl
xor
cld
pop
adc
movsb
pop
imul
loopne
aas
xorl
gs
js
fmull
or
mov
xor
in
dec
and
movsl
aad
adc
inc
sub
testb
shll
add
jg
push
les
or
dec
dec
or
cmp
iret
in
xchg
push
pop
pop
inc
mov
ljmp
fcoml
nop
dec
pop
scas
add
inc
or
inc
xchg
sub
pop
pushf
in
pop
or
inc
sar
loope
adc
or
add
lcall
sbb
and
test
das
pushl
inc
mov
lds
pop
js
adc
pop
pusha
lret
jl
addr16
addr16
sub
jne
imul
ret
add
xchg
fcmovb
push
inc
sub
ret
xchg
mov
push
test
xchg
out
jmp
dec
pop
inc
pop
push
xor
push
push
pop
ffreep
daa
xor
lcall
push
adc
add
sbb
ret
leave
xor
jbe,pt
aas
imul
inc
add
cmpsb
mov
mov
add
les
jne
xor
dec
roll
fcos
lcall
push
add
and
inc
inc
and
enter
fcomps
add
push
jne
push
outsb
push
fdiv
jmp
or
cmp
loop
push
pop
jle
dec
and
pusha
sar
lock
ret
pop
sbb
shlw
xchg
andl
mov
enter
mov
xchg
sub
rcrb
lret
sar
sub
sbb
pop
mov
lcall
add
push
aas
push
ljmp
adc
and
in
xchg
into
mov
ljmp
incl
mov
sbb
mov
lods
pop
cmp
pop
inc
push
sbb
leave
out
pop
sub
push
adc
ljmp
fstpl
ja
int
pop
adc
in
mov
and
sub
idiv
push
decl
mov
pop
lock
cmp
pop
mov
push
out
cwtl
das
fcomps
ror
in
cmp
enter
jg
inc
int3
outsb
pop
mov
adc
test
mov
adc
adc
std
mov
repnz
cmp
pushf
adcb
xchg
int
jo
test
push
xor
fisttps
pusha
or
sub
jo
cmpsb
pusha
push
mov
outsb
iret
dec
push
xchg
ljmp
das
inc
inc
fdivl
test
cmp
nop
xor
ja
int3
xor
test
negb
pop
xor
subl
sub
popf
xchg
and
pushl
call
push
sbb
cmpsl
sbb
or
push
adc
cmp
pop
fmull
ss
or
add
das
daa
fwait
mov
add
sub
pop
xchg
aaa
pop
lock
mov
hlt
sub
mov
in
lock
out
push
pop
call
mov
cmpsb
pop
mov
pop
fsubr
mulb
pop
aam
outsb
add
nop
out
pop
int3
inc
loopne
enter
and
insb
call
inc
mov
push
les
jecxz
nop
dec
add
jp
dec
in
mov
lcall
jp
sub
lods
sbbb
inc
sbb
loop
push
inc
cmp
inc
jnp
xor
sbb
mov
andb
loopne
sub
add
or
sub
cmp
push
jg
and
addb
or
add
popa
xchg
cmp
je
mov
mov
in
jg
and
mov
pop
push
das
cli
scas
lcall
cmpsl
pop
jnp
sub
dec
sub
hlt
cmp
enter
inc
add
call
dec
ds
cld
incl
sub
enter
dec
jg
pop
or
push
push
addr16
push
filds
in
imull
push
or
dec
sbb
pop
push
dec
or
aaa
jae
dec
pop
xor
sti
add
inc
xchg
movd
sbb
jae
cmp
jecxz
inc
jg
jmp
xor
iret
out
ret
les
push
in
in
sub
push
add
push
data16
out
lds
rcrb
dec
imul
add
or
and
jmp
sub
or
xorl
pop
or
cmp
stc
nop
add
call
dec
outsb
push
insb
adc
cmp
faddl
jp
mov
movups
xchg
jae
add
or
in
outsb
dec
or
or
in
je
mov
jmp
pop
mov
sbb
mov
shlb
xchg
sbb
icebp
outsl
xlat
dec
cli
adc
push
popa
insl
cld
jg
ljmp
sbb
pop
dec
sbb
scas
sub
adc
jbe
unpcklps
fdivr
mov
pop
jo
je
inc
push
ja
outsb
addr16
stos
shrl
inc
cmp
mov
in
icebp
nop
jbe
pushl
imul
or
jnp
mov
lahf
mov
push
jb
xchg
jbe
fisttps
hlt
lock
in
mov
bts
outsb
in
ljmp
call
imul
clc
inc
cmp
aas
clc
inc
inc
loop
je
sub
mov
jmp
mov
stos
cmp
jg
aam
aam
sbb
pop
dec
mov
pop
or
das
xor
and
pop
dec
mov
or
dec
xor
and
call
lahf
adc
adc
sbb
and
je
dec
xchg
nop
mov
scas
clc
push
xlat
cli
nop
pop
repnz
dec
mov
or
loope
nop
and
or
xchg
in
pushf
cmp
xchg
repnz
cwtl
xlat
xor
leave
add
nop
or
pop
loopne
mov
jp
mov
sub
or
mov
outsl
push
xchg
nop
decl
push
pushaw
mov
fmuls
std
rcrb
push
loopne
enter
decl
fimuls
les
add
cltd
dec
lods
aad
jnp
dec
sbb
shll
jecxz
pop
jg
lcall
mov
lock
sbb
pop
jo
jecxz
loope
pop
inc
adc
sbb
loopne
rcrl
jl
add
bswap
outsb
nop
jmp
fmul
adc
sbb
call
mov
scas
or
xor
outsl
jnp
loope
rcll
jns
clc
add
add
pusha
adc
push
mov
or
sub
xchg
aam
insb
scas
adc
dec
loopne
add
mov
and
les
pop
mov
mov
pushf
mov
sbb
nop
push
xchg
stc
repz
nop
mov
pushf
xor
mov
test
mov
lods
in
mov
pop
sub
mov
repnz
mov
test
divb
daa
mov
adc
in
push
adc
jg
cmp
dec
push
dec
xchg
push
cs
int3
pusha
rclb
inc
insb
aam
stos
pop
lock
add
jl
les
inc
or
je
sub
std
decl
or
pushf
jecxz
push
test
inc
js
dec
gs
mul
inc
fs
push
das
dec
jne
mov
int3
pop
jle
outsl
fs
outsb
xorl
xchg
das
pop
outsl
push
push
push
xchg
sar
lcall
sbb
add
pop
cmp
pop
or
fwait
jns
clc
inc
out
in
xchg
xor
inc
aas
inc
jae
pop
inc
jns
push
mov
fwait
mov
push
mov
faddl
xchg
mov
and
add
push
loopne
out
cli
cmp
call
mov
pop
mov
add
call
ss
push
add
in
mov
mov
fidivs
es
fldenv
dec
cs
ss
sbb
decl
sbb
ds
push
aas
lock
jg
jb
in
xor
xor
fld
push
jg
sahf
pusha
lcall
cmpsl
push
cmp
xchg
pop
mov
push
inc
cwtl
xor
sbb
stos
push
inc
fucom
leave
cmp
call
add
stc
sbb
mov
add
mov
ss
sub
push
xor
fisttpl
arpl
out
movsb
or
jo
lods
iret
pop
cmp
repz
inc
mov
pop
sbb
add
loope
inc
popa
fs
out
xchg
outsl
push
ret
inc
pushf
or
lcall
add
or
add
sub
pop
jg
adc
jl
popa
popa
mov
and
fs
testb
inc
lods
jg
pushl
in
negl
pop
or
and
inc
adc
dec
stos
add
leave
mov
out
jl
mov
incl
sbb
idiv
mov
add
test
jg
inc
pop
in
mov
js
sub
pusha
add
bound
pop
xchg
out
add
decb
xchg
sbb
jle
dec
outsb
insb
pop
enter
scas
hlt
fisttps
iret
enter
pop
cmp
add
sahf
aam
pop
ret
xchg
sub
js
pop
pushl
fbld
shr
in
mov
add
inc
inc
mov
decl
clc
fdivrl
mov
es
jecxz
in
cld
incl
and
mov
repnz
repz
push
jns
mov
pop
dec
pop
in
add
add
pop
nop
mov
xchg
ljmp
pop
cmp
mov
push
fsubrl
pusha
pop
xor
and
pusha
xor
aad
fldenv
ja
in
dec
jae
movsb
mov
sbb
test
es
sub
and
push
dec
in
pop
mov
sti
cmpsb
adc
sarb
pop
sbb
jmp
jmp
pop
fs
push
xor
cs
es
jbe
add
pop
or
lods
mov
ljmp
in
les
push
ficoml
clc
pop
mov
hlt
pop
sbb
decl
inc
outsb
fstl
mov
leave
out
in
pop
nop
in
cmp
sbb
pop
lods
lds
test
and
and
xlat
pushl
jge
dec
cmp
enter
nop
loopne
shlb
mov
jg
cmpsb
or
adc
pop
fcomps
les
fcomp
gs
call
xlat
shr
shlb
mov
loopne
jg
mov
mov
inc
cmpsl
es
cmc
or
xlat
sub
repnz
jno
sbb
or
add
jne
push
imul
pop
jmp
adc
pop
mov
sbb
xor
cmpsb
mov
clc
push
pusha
lock
lcall
xchg
push
jns
test
jmp
inc
xchg
or
ljmp
push
shlb
xlat
push
enter
incl
jns
notb
pop
sbb
std
jo
jmp
push
pop
and
sub
decl
pop
or
or
or
adc
push
cld
int3
adc
sbb
ljmp
mov
ret
incl
jnp
out
mov
inc
xchg
jne
pushf
xchg
mov
push
jg
ds
std
int3
stos
sbb
add
mov
loopne
hlt
out
mov
in
pop
mov
in
movsb
push
call
fs
inc
mov
pushl
adc
push
and
xor
in
clc
add
mov
adc
mov
jle
pop
les
cmp
xchg
clc
jmp
and
and
sbb
sbb
imul
aam
adcl
push
call
call
adcb
imul
loopne
and
incl
mov
pop
adcl
xor
in
out
sahf
jmp
inc
jmp
fldcw
add
aas
int3
add
loop,pn
fdivr
sti
dec
repz
mov
adcb
movsl
sbb
test
test
leave
lock
cmp
fsts
inc
mov
mov
cld
dec
mov
das
push
cmp
sti
filds
lret
aas
jmp
push
inc
adc
xor
jge
in
scas
adc
nop
out
add
imul
test
inc
cs
cmp
lods
hlt
incl
je
or
lret
fidivrs
xor
mov
dec
dec
and
or
xor
lcall
pop
or
scas
mov
outsl
add
push
mov
es
movsl
pop
pop
adc
adc
mov
cmp
out
pushl
fimull
pop
and
mov
fdivrl
dec
adc
getsec
rol
jbe
adc
rolb
add
inc
cmp
add
call
loope
mov
jmp
sub
cmp
clc
mov
fcmovnbe
in
push
movsb
out
jae
mov
call
incl
mov
lret
test
jmp
add
add
imul
call
xchg
ds
mov
cs
push
ja
cld
loopne
stos
lahf
dec
decl
inc
into
adcl
push
lods
arpl
add
push
out
sbb
cmp
inc
loopne,pn
nop
or
xchg
push
loopne
in
adc
std
lock
pop
inc
push
decl
or
xchg
test
data16
push
sub
and
inc
leave
gs
dec
call
jmp
pop
in
cmp
mov
sti
outsl
cmp
xchg
jp
pop
push
pop
or
leave
or
xchg
jmp
les
les
mov
mov
lret
add
push
dec
notrack
push
push
ja
sahf
scas
aaa
jmp
fs
call
add
cmc
insb
xchg
or
dec
pop
push
jmp
cmp
out
sub
incl
insb
pop
cmp
pop
mov
rclb
pushf
inc
jg
pushl
dec
dec
repz
jmp
adc
sub
pop
mov
pop
inc
call
mov
cmp
mov
xchg
adc
lock
and
inc
arpl
dec
or
inc
jmp
aam
aaa
or
roll
fcomip
push
xlat
cmp
adc
jmp
int3
inc
enter
pop
dec
popf
cs
lcall
imul
subb
push
mov
sbb
lds
out
add
mov
outsl
lcall
das
imul
les
push
loopne
adc
neg
add
jb
dec
call
push
iret
repz
inc
pop
imul
jns
dec
mov
cmp
daa
into
loopne
out
jns
loop
or
push
push
add
adc
int3
mov
and
adc
dec
mov
xchg
mov
fs
mov
cmpsb
mov
cmp
push
fildll
inc
mov
popa
and
dec
fistpll
mov
pop
ficompl
rolb
arpl
incl
jmp
mov
insl
jnp
add
jle
and
xchg
xlat
in
or
pop
pop
jmp
push
fcomip
inc
mov
mov
dec
imul
and
jmp
pop
add
lds
mov
sub
push
jo
and
call
jbe
xor
mov
and
jmp
inc
jg
mov
popa
lea
jecxz
mov
inc
div
ljmp
and
push
loope
push
pop
into
iret
push
mov
outsb
js
ljmp
sarl
arpl
aaa
enter
cmp
mov
mov
fwait
pop
xchg
cmc
dec
les
cmpsl
xchg
sahf
sbb
and
inc
lock
aaa
sti
dec
xchg
stos
call
mov
fmull
dec
decl
insl
cmp
xchg
mov
fbstp
cmc
rolb
pushf
je
sub
adc
push
push
je
jle
inc
inc
shl
into
jne
nop
popa
cmp
jae
pop
push
push
mov
fs
pop
jmp
inc
xor
ljmp
mov
push
cld
jae
add
jmp
enter
xchg
lds
push
jg
outsl
mov
xchg
js
mov
or
xchg
jbe
std
xor
jmp
mov
mov
jmp
rolb
mov
lret
cmpsb
dec
insb
outsb
mov
cmp
andb
pushl
rep
pop
jns
outsb
roll
sbb
cmp
es
scas
enter
jns
jo
jg
nop
lock
sbb
inc
cli
dec
ljmp
lods
mov
lcall
sbb
adc
sub
push
adc
iret
enter
icebp
call
popa
cld
ret
js
pushf
testb
jb
mov
mov
mov
leave
fcomip
fildll
mov
xchg
sbb
clc
fnstsw
cwtl
nop
fistpll
xchg
popa
addr16
fistl
adc
dec
ficomps
insl
sub
mov
dec
xor
and
pushl
jp
pop
jmp
clc
sbb
xchg
andl
or
push
das
mov
adc
inc
xor
sub
es
decl
dec
je
dec
and
pop
jo
cli
popa
adc
mov
jo
mov
or
add
pushl
loopne
pop
jno
aaa
shll
push
daa
adcl
sub
mulb
adc
std
jg
sub
xor
dec
hlt
mov
jmp
lods
add
jmp
or
dec
and
and
inc
incl
add
mov
pop
int
loope
or
es
dec
mov
incl
pop
push
fisubrl
arpl
pop
sahf
pop
adcb
in
jb
jmp
lret
sbb
mov
in
and
lock
jb
jl
das
pop
mov
jns
out
mov
mov
insl
mov
xor
and
mov
sbb
mov
dec
jecxz
es
ficompl
or
sub
and
xchg
nop
xchg
addl
jmp
adc
mov
out
cmp
jb
push
repz
jae
sub
cmp
sub
cmp
mov
lcall
ljmp
mov
ficoml
daa
inc
push
cmp
fstpt
call
mov
aam
mov
lock
or
sbb
clc
pop
cmp
pop
and
std
mulb
daa
sub
or
shll
ljmp
jo
fimull
sbb
adc
es
or
loopne
call
shrl
orb
ss
or
sub
xor
adc
xor
pop
mov
aam
out
jo
mov
or
cmp
pop
cld
clc
mov
test
idivl
insb
push
jbe
jne
ja,pn
jnp
xchg
adc
pop
pushl
jbe
push
call
ljmp
cld
push
insb
mov
cli
add
pop
flds
mov
jns
inc
frstor
ja
mov
test
mov
call
pushf
mov
jmp
sub
sub
xor
cmp
daa
jg
mov
mov
inc
add
aaa
gs
scas
lods
mov
shlb
add
sub
fcmovnu
rclb
jecxz
stos
or
push
lret
fbld
xchg
sbb
xchg
stos
hlt
and
es
ss
sub
adc
gs
lcall
xor
dec
rcrb
jmp
adc
inc
pop
or
ja
das
add
sbb
cmp
pop
sti
jbe
andl
daa
adc
jno
ljmp
pop
xchg
test
addr16
cmp
jg
outsl
dec
push
dec
js
add
pusha
and
pushf
sbb
pop
adc
and
push
cmp
je
xchg
icebp
fbld
pop
call
adc
inc
js
cs
push
fimuls
loope
push
adc
rorb
xor
push
rolb
jmp
ljmp
mov
mov
fcom
loopne
mov
cmp
leave
clc
mov
pop
push
jns
fstl
outsl
jmp
cmp
add
jb
jns
add
mov
sub
push
mov
fsub
ljmp
mov
push
jb
cmpsl
mov
add
scas
jmp
add
adc
cmpsb
adc
outsl
mov
decl
scas
fiadds
jecxz,pn
lahf
cmpsb
ror
lock
fldt
nop
cmpsl
add
pusha
enter
push
stos
decl
gs
jnp
pop
rolb
rcll
mov
enter
push
and
mov
adcl
cltd
lcall
lcall
adc
aaa
ret
push
daa
ss
adc
pop
mov
sbb
mov
xchg
cmp
lea
lods
lods
incl
sbb
pushf
push
add
into
pop
xor
fmull
sahf
lock
incl
decl
xor
mov
mov
repnz
jmp
dec
loopne
mov
fnsave
mov
mov
mov
test
sbb
add
mov
adc
inc
fadd
test
aas
call
das
jge
push
imul
cwtl
bound
clc
jmp
sub
inc
int3
fadds
or
enter
cmp
sub
xchg
add
out
sbb
pop
nop
pop
lock
syscall
mov
inc
ss
cmp
jb
lcall
fmul
loop
xchg
cmpsl
push
cmc
and
jle
pop
or
das
sub
push
mov
ds
add
xchg
pop
repnz
and
incl
aas
and
shll
xchg
sub
xchg
arpl
inc
xor
add
cltd
ljmp
cli
xchg
and
and
push
xor
sub
mov
int
imulb
push
or
lock
adc
sbb
inc
je
arpl
xor
cmp
cld
adc
and
adc
jae
jnp
lahf
sbbb
xorl
out
ss
das
mov
jmp
sbbl
loop
inc
pop
insb
jle
call
leave
xor
mov
fstpl
jno
arpl
inc
imul
push
movl
ljmp
mov
lods
push
push
stos
js
dec
cmpsb
sub
sub
xchg
je
push
inc
dec
jmp
incl
daa
mov
adc
imul
dec
push
cmp
or
adc
inc
push
inc
dec
xlat
inc
movsl
decl
mov
pop
in
adcl
mov
fs
jmp
xor
xchg
sahf
lcall
push
push
js
jne
jp
roll
aad
fwait
and
stos
xchg
int3
inc
loopne
pop
inc
jg
jmp
inc
jmp
ja
adc
enter
cli
adc
sub
in
clc
lcall
push
outsl
jg
jg
inc
adc
ja
inc
loopne
insb
mov
xor
ljmp
dec
ds
fsts
cmpsl
mov
aad
add
sbbl
inc
adc
idiv
call
or
mov
ss
scas
pop
out
daa
and
add
inc
sub
or
sbbl
ret
decl
mov
push
or
test
lock
cld
jmp
test
inc
inc
add
jns
mov
cmc
ret
outsl
lcall
and
dec
push
fcmovnbe
sub
pop
insb
loop
jns
xchg
mov
cmp
lret
fiaddl
sub
cmpl
decl
in
pop
fs
fadds
fildll
fwait
ret
fstl
add
lods
cmp
sbbb
into
scas
or
jmp
jne
and
and
sub
or
sbbb
dec
sbb
jg
adc
inc
adcb
pusha
cmp
pop
gs
mov
xchg
incl
mov
fidivrs
fdiv
cs
and
sahf
outsb
leave
rcrl
push
pop
inc
decl
add
js
push
mov
push
iret
push
sbb
fcos
incl
sbb
or
inc
pop
stos
cmp
sub
mov
ficoml
jge
jno
aam
jbe
aaa
std
lcall
fs
pop
mov
cmpb
es
pop
leave
inc
xor
cmpsl
lahf
jmp
jo
lock
push
movsl
lods
cs
push
pop
inc
mov
push
mov
lock
jmp
cmp
inc
dec
sub
out
leave
pop
cld
aas
sbb
loopne
pop
lock
jmp
add
add
lcall
pop
inc
push
or
add
rcrl
call
xor
fstl
sbb
xor
mov
push
sub
clc
fwait
adc
in
jp
fildll
clc
add
stos
inc
pop
add
xchg
in
mov
or
push
mov
pop
fsts
data16
pushf
mov
movsl
cmp
out
outsb
push
lods
dec
pop
daa
roll
sahf
negl
push
sbb
mov
push
sahf
mov
out
mov
xchg
ljmp
fildll
cltd
and
cld
adc
addb
pop
mov
je
mov
adc
rorl
cmp
aad
sbb
sbb
fstp
push
sub
lods
add
sar
cli
fildll
ret
xor
insl
add
daa
pop
push
test
dec
xor
incl
cld
fucomip
loopne
add
fwait
data16
mov
int
jg
lcall
pop
pusha
enter
or
xchg
fcomip
cmove
dec
jnp
sahf
jle
inc
mov
das
pop
mov
push
shl
sti
es
je
pop
outsb
xchg
incl
sbb
sbb
fldcw
cmp
mov
sub
hlt
incl
adc
adc
orl
push
jb
fistps
push
push
adc
push
push
cmc
jmp
out
jmp
adcb
jmp
dec
int3
add
mov
data16
jl
aaa
mov
loopne
in
push
or
in
push
mov
scas
push
mov
aas
cmp
sti
jns
mov
xchg
fistpl
js
sahf
mov
xlat
xchg
leave
push
mov
add
cwtl
and
push
fistps
cltd
nop
popa
sbb
fisttpl
rorb
fildl
nop
add
in
cmpsl
clc
push
mov
fildll
xor
jb
pop
data16
or
push
push
stc
inc
fists
imul
add
inc
mov
pop
mov
sub
aaa
imul
adc
push
jo
push
mov
jmp
lcall
repnz
push
pop
mov
clc
mov
cmp
call
push
and
inc
xor
loopne
arpl
mov
fnstcw
lock
sub
pop
gs
std
fsubl
xchg
xor
adc
xor
push
data16
adc
pop
cld
mov
push
arpl
xchg
inc
es
pop
inc
outsl
jmp
xchg
cmpsb
dec
jbe
or
jb
cmovs
push
repnz
xchg
inc
pop
addr16
inc
clc
decl
push
xchg
or
in
sbb
dec
push
pushw
in
test
xchg
mov
stos
fisubs
daa
popf
cld
fdiv
es
js
adc
mov
pop
movsb
fwait
cmp
or
test
pop
ret
inc
mov
in
js
nop
dec
fs
stos
mov
bound
lods
mov
push
int3
or
ljmp
push
mov
dec
push
push
cmp
js
sub
xchg
je
sti
inc
push
dec
adc
out
and
fcomps
add
call
test
mov
xchg
int3
push
xchg
inc
xchg
and
inc
in
pop
jnp
push
fs
je
push
cmp
mov
mov
add
icebp
add
mov
rclb
mov
lock
mov
pop
test
pop
scas
test
test
adc
in
push
enter
xchg
xchg
mov
xchg
dec
jne
push
push
je
and
rclb
xchg
sub
das
lret
jno
pop
shr
push
in
mov
pop
int3
loop
add
cld
incl
push
addb
xchg
das
mov
nop
imull
repnz
out
int
adc
and
push
sub
nop
pushf
dec
cwtl
cmp
add
fistpll
or
and
inc
xor
leave
pop
repz
cwtl
mov
cltd
or
fwait
mov
in
cmp
xchg
pop
outsb
adcb
or
jnp
mov
inc
mov
mov
hlt
in
jg
inc
negl
and
add
and
pushf
in
call
notb
xchg
xchg
pop
repnz
cmp
inc
pop
xchg
js
insl
sbb
cltd
inc
jg
retw
rorb
aas
lods
popf
cmp
movsb
fsubs
push
imul
lcall
dec
fwait
pop
pusha
imul
imul
pop
xchg
loopne
fimull
fwait
add
cld
adc
pop
mov
xchg
cmpsb
inc
mov
sbb
rorb
sbb
mov
ljmp
add
mov
addl
mov
loop
mov
call
cld
sub
inc
adcl
popa
nop
mov
pop
fbld
fsubs
cmpsl
add
idiv
fistps
xchg
add
imul
cmp
stos
test
cmpsb
push
dec
data16
es
dec
lock
dec
outsl
push
cld
inc
add
xor
mov
push
sbb
sbb
push
xchg
pop
mov
nop
test
pusha
sbb
ds
mov
add
mov
arpl
fwait
jecxz
cld
movsb
test
push
imul
jmp
inc
lock
mov
cmp
lret
sahf
pop
jne
les
movsb
inc
sub
sti
decl
repnz
rcrb
sahf
mov
outsb
adc
or
imul
add
clc
sbb
push
int3
push
inc
dec
mov
add
popa
sahf
mov
cmp
inc
loope
adc
mov
imul
xchg
rcrl
inc
add
pusha
in
add
cmp
sub
cmpsb
faddl
push
cmpsb
decl
adc
add
add
mov
xchg
or
or
inc
loopne
add
lds
mov
inc
in
xor
out
enter
cmpsl
add
aas
ds
mov
cld
cmp
and
mov
xchg
push
nop
ja
dec
rcr
aam
fdivp
push
adc
xor
and
nop
ljmp
icebp
mov
and
sub
xchg
jmp
repnz
mov
xchg
arpl
clc
mov
add
div
test
fcomip
fildl
gs
dec
hlt
jb
leave
xchg
fnstsw
xor
inc
pushl
add
cmp
incb
rolb
inc
int3
push
bound
xchg
mov
rcrl
dec
les
and
lods
pop
loope
loopne
xchg
pop
loopne,pt
aaa
lods
jo
out
xor
sub
fmuls
aam
ljmp
or
dec
out
rcr
mov
mov
dec
ja
enter
push
jp
push
mov
call
lds
or
sahf
and
les
sub
inc
inc
sbb
sarb
and
pop
sub
xchg
adc
mov
out
mov
js
add
dec
inc
push
popa
iret
or
cmpl
jg
jmp
es
push
das
and
inc
mov
add
mov
jmp
jno
mov
fisttpll
and
xchg
mov
pushf
adc
sbb
lods
lods
jbe
mov
inc
test
test
cmp
or
jmp
rcll
cs
movsb
lea
push
mov
push
jmp
pushf
pop
sbb
pop
cmp
sbb
inc
cwtl
jecxz
adc
xchg
out
clc
fwait
mov
inc
mov
mov
pop
cmp
clc
ljmp
xor
add
pop
rcrb
test
nop
out
add
stos
mov
sub
inc
xor
dec
pop
clc
test
push
les
sub
mov
adc
push
adc
xorb
in
jmp
pushf
fs
sbb
sub
add
leave
xchg
dec
push
decb
cmpsb
cmpsb
fisubrs
adc
imul
or
cmpsl
cmp
hlt
test
cmpsl
inc
fcoml
mov
pushl
fcoml
jne
jb
adc
outsl
mov
icebp
popf
sub
loope
pushl
mov
data16
cmpsl
lods
in
or
test
pop
sub
ret
sti
mov
xor
or
jg
fisttps
jnp
pop
push
mov
jmp
push
aas
pusha
jge
das
in
jns
stos
xchg
push
mov
cli
lock
mov
add
push
cmp
mov
std
pop
pusha
add
je
cmp
sub
xor
mov
and
test
cs
push
ja
jno
pop
dec
sbb
mov
roll
in
nop
and
inc
js
mov
lcall
fsubrl
fdivl
sub
jo
aam
aam
add
cmp
roll
push
fwait
dec
int3
scas
dec
mov
pop
mov
fcomip
mov
lret
pop
test
repz
rolb
pop
jb
sahf
loopne
cs
stos
or
rolb
lods
stos
sbbb
in
add
inc
xchg
idiv
and
push
insl
mov
inc
cmpsl
jecxz
or
ret
push
jmp
test
scas
fistpll
aad
mov
inc
fstpl
xor
adc
imul
fdivrp
mov
cmp
pusha
dec
xchg
hlt
ljmp
test
test
push
cwtl
mov
xor
aad
mov
adc
mov
inc
xchg
jnp
cwtl
aas
dec
je
xchg
aad
ljmp
pop
nop
aaa
push
je
sbb
or
jmp
fnsetpm(287
nop
pushf
push
cmpsl
inc
adc
dec
cmp
imul
decl
rclb
jbe
and
mov
addr16
in
mov
lcall
xlat
dec
push
and
clc
and
enter
shll
inc
enter
and
scas
decl
rcrb
jno
nop
loopne
xor
adc
dec
fidivl
gs
leave
cmc
push
inc
or
movsb
mov
test
scas
ss
mov
cld
sbb
ss
cmp
mov
lcall
mov
jmp
add
leave
and
mov
std
mov
test
inc
test
inc
mov
push
push
or
in
decl
in
loop
mov
movsb
mov
xchg
sbb
adc
and
out
pushl
movsb
push
mov
jmp
push
movsb
aam
loope
xlat
add
mov
adc
lcall
les
movsl
mov
pop
adc
inc
test
xor
mov
mov
pop
mov
push
mov
aaa
sub
mov
push
test
jmp
or
sbb
out
cld
jg
pop
cmp
scas
pop
inc
sub
lret
mov
inc
scas
aaa
movsl
add
fwait
xchg
call
add
lds
cmp
iret
and
and
lods
lea
lods
pushl
cmp
movsl
push
mov
lds
movsb
adc
mov
jle
iret
mov
jnp
iret
dec
xchg
xchg
arpl
sti
pushl
test
inc
cmp
xor
jg
lcall
enter
inc
xor
test
mov
loopne
inc
mov
mov
ljmp
add
or
dec
sbb
out
mov
aaa
cmp
or
adc
xor
je
mov
pop
jg
ret
bound
or
or
xchg
cmp
jmp
addr16
jmp
cltd
pop
xor
pop
mov
mov
adc
aas
or
pushl
test
xchg
mov
inc
mov
out
out
xchg
mov
lret
push
rcrb
add
test
out
and
in
xor
add
sub
adc
lock
dec
inc
pop
or
mov
or
xchg
or
pop
jmp
test
sar
incl
aas
push
gs
push
aaa
push
ret
mov
xchg
xchg
fiadds
jg
enter
dec
shl
roll
jne
pop
add
push
loope
or
aas
jl
push
jmp
xor
adc
mov
or
nop
call
sub
ljmp
adc
lods
fs
xchg
jb
pop
adc
call
add
enter
adc
mov
bound
aad
sub
inc
xchg
push
out
jb
ss
push
clc
incl
or
daa
or
cmp
jo
jp
inc
adc
mov
dec
inc
and
and
lock
push
aas
inc
push
cmp
inc
jle
scas
sub
dec
rcrb
mov
push
shl
adc
int3
push
jmp
pop
inc
or
out
mov
and
movsb
xor
sar
aaa
out
or
jmp
mov
cmp
stc
sbb
call
pop
daa
mov
cmp
push
lahf
dec
or
out
mov
or
or
mov
mov
or
xchg
jns
xor
xchg
mov
mov
mov
inc
aam
imul
rclb
add
cmp
int
sbb
decl
call
xor
pop
gs
testl
jg
sub
mov
or
lods
ss
add
out
inc
or
mov
jmp
jg
insl
lahf
test
and
loop
pop
and
adc
add
iret
cld
lock
dec
pushl
push
jmp
ficoms
mov
orb
fucomp
pop
fs
mov
ljmp
mov
sbb
and
jo
lods
das
push
cmp
add
jp
lret
xchg
inc
ret
ljmp
sbb
xchg
or
xchg
sbbb
adc
jg
and
cld
jne
icebp
push
sahf
pop
repz
sbb
push
inc
std
incl
lret
mov
adc
xor
int
pushl
push
lock
loopne
test
sub
lock
in
int3
sti
xor
mov
sbb
dec
inc
adc
ljmp
sar
and
xchg
mov
push
xor
movb
inc
rorl
jmp
mov
sbb
ret
aad
adc
js
sbbl
mov
fsub
sbb
iret
decl
push
inc
pop
mov
sub
mov
mov
ret
cli
js
pusha
ds
movsb
push
pop
cmp
pop
push
fdivrs
or
dec
bnd
push
bound
out
mov
sub
jns
dec
fldenv
rcll
adc
hlt
xchg
xchg
sub
incl
pop
aaa
jmp
mov
in
fstl
dec
mov
out
clc
fnstcw
adc
lcall
leave
dec
rcrl
xchg
xor
push
sub
clc
sbb
inc
push
lock
loop
pushl
mov
adc
adc
aaa
or
in
fildll
in
aas
dec
xor
or
in
mov
test
cwtl
inc
pop
or
fcomps
je
ja
pop
cmp
dec
or
addr16
insb
and
mov
imul
mov
lds
lret
arpl
call
loop
aad
fwait
shll
dec
push
xchg
mov
mov
lret
aas
mov
pop
prefetchnta
ljmp
sti
mov
mov
push
mov
or
movsl
adc
sar
dec
dec
cmp
inc
test
push
jg
fidivs
push
pop
shll
jbe
or
sub
pop
push
sahf
mov
call
in
mov
pop
cmpsl
cmp
ss
ljmp
dec
je
outsb
mov
and
aas
daa
xchg
xchg
out
or
pop
dec
adc
negl
dec
pushf
adc
mov
nop
jbe
incb
insb
daa
xchg
xchg
add
sub
clc
pushl
out
es
dec
scas
pop
outsl
pop
cmp
sahf
pop
test
divl
add
aam
xchg
clc
or
xchg
push
dec
sti
pmuludq
jl
nop
adc
in
sti
in
inc
in
add
seto
pop
adc
inc
mov
imul
dec
gs
jmp
xor
in
or
push
sub
mov
push
and
dec
adc
ljmp
push
or
mov
adc
decl
xor
xchg
fadds
loopne
rolb
xor
int
imul
jg
clc
sbb
pop
dec
jo
les
outsl
mov
add
daa
mov
pop
jo
dec
hlt
cmp
cwtl
loope
fcom
pop
xchg
rcrb
jne
and
sar
call
add
adc
imul
sbb
ljmp
adc
sub
cmpsb
aas
test
lods
sub
jo
out
jge
das
add
call
mov
arpl
sahf
and
lods
lcall
lcall
push
pop
js
sub
das
cld
cmp
inc
pop
fs
in
nop
data16
and
jmp
sub
int
or
xor
or
movsb
adc
pop
lods
add
pop
inc
jno
filds
in
mov
cmp
or
pop
icebp
sub
idiv
dec
stc
adc
cmp
cmpsl
sub
andb
xchg
testl
addr16
mov
add
cmp
call
mov
nop
out
shl
jge
repnz
movsl
sub
loope
in
push
icebp
int3
mov
mov
sbb
sub
hlt
out
iret
pop
xor
or
dec
sub
push
dec
jg
dec
xchg
mov
add
shll
dec
pop
xchg
ffree
lcall
fisubrs
popa
mov
ret
mov
add
xor
dec
int3
mov
and
sbb
and
decl
jne
adc
ja
leave
clc
jbe
and
jb
jmp
in
jmp
cld
add
jmp
inc
clc
sub
and
jo
xchg
les
dec
push
leave
pop
std
ljmp
mov
mov
xchg
or
mov
lret
repnz
push
jge
adc
lock
pop
jg
test
loope
rorl
or
mov
or
ljmp
aaa
xor
popa
leave
cwtl
lret
lret
pop
icebp
fmuls
fnstsw
push
pop
popa
fsubl
lahf
pusha
mov
jno
mov
movsb
nop
xor
or
xor
mov
sub
icebp
mov
sbb
decl
jmp
inc
movsb
es
clc
cld
daa
ret
jo
insb
push
mov
shll
xchg
mov
add
scas
clc
out
lcall
div
sub
push
sarl
add
es
and
scas
or
outsl
push
addb
addl
xchg
addr16
fbld
mov
int3
add
jp
sahf
es
xchg
int
lret
or
ds
out
cli
sbb
push
in
enter
sti
cmp
fwait
test
sub
call
add
adc
imul
into
xchg
jae
and
lcall
dec
cmp
jp
pop
adc
jo
dec
je
add
pop
add
push
mov
add
ret
or
decl
psubsw
jbe
dec
xor
sarl
mov
sbb
jmp
fwait
ret
and
ljmp
ja
mov
dec
push
push
pop
shrl
jmp
aad
push
les
cmp
aas
fs
cmp
xor
mov
jb
lds
mov
sbb
xchg
popf
push
lret
sub
adc
or
fbld
aad
jmp
loope
popf
push
xor
icebp
imul
out
clc
mov
fdivs
xor
es
aam
push
and
add
cmp
lret
into
mov
out
ret
nop
arpl
fnstenv
in
andl
pushl
test
pop
xlat
adc
fcoms
pop
mov
push
ret
mov
cmpsl
dec
cld
andb
cmp
or
and
loopne
std
fwait
incb
adcl
jmp
aas
xchg
push
je
mov
xchg
or
adc
pusha
mov
pusha
aas
ret
iret
mov
ljmp
jle
ljmp
outsb
xchg
sub
inc
sbb
sub
pop
cmp
sbb
fcomps
loop
add
pop
sarl
mov
out
adc
insb
xchg
jbe
jmp
loopne
std
incl
dec
ss
jg
adc
adc
sub
sbb
cmp
aaa
stos
ljmp
cld
orl
stc
or
ljmp
sar
fisttps
sub
add
mov
or
push
adc
push
je
mov
call
jge
sbb
and
jle
sub
lahf
ja
outsl
push
daa
aam
shll
sar
jp
fstp
pop
jb
sti
pop
mov
pop
push
pusha
das
mov
or
jg
fcompp
cmp
and
rcrl
call
xor
mov
shll
rcr
mov
inc
loope
ja
movsl
and
iret
int3
cwtl
inc
loopne
fcmovnbe
ds
cltd
add
adcb
sar
pop
lea
xchg
mov
adc
cmp
xlat
xchg
nop
mul
lcall
in
pop
rolb
mov
insb
push
xbegin
or
fldcw
incl
int
and
in
cmc
push
shr
pop
fnsave
jb
outsb
mov
fildl
xlat
aaa
loopne
adc
or
sbb
mov
sub
sbb
ljmp
push
sti
xchg
xchg
cmp
xchg
addl
pop
inc
lods
pop
mov
rol
testl
xlat
dec
call
fsubr
js
dec
xchg
xor
jo
popf
xor
int
jmp
rorl
sbb
aas
fdivs
call
add
push
les
mov
jge
inc
xor
xchg
mov
ljmp
movsb
repnz
sub
je
add
lods
movsb
add
cltd
cld
jmp
aam
incl
mov
stos
mov
mov
hlt
pushl
push
and
aam
into
ja
sbb
outsl
clc
pop
cmovp
cmp
int3
adc
lock
call
and
push
cmp
mov
inc
add
int
faddl
test
dec
or
ljmp
or
ret
insb
lods
xchg
sub
sbb
inc
sbb
ss
jbe
js
loop
add
push
and
or
mov
or
mov
inc
add
pop
pushf
push
or
pop
rcl
subb
pushl
je
shll
in
and
or
push
pop
and
es
sbb
and
call
sbb
daa
mov
mov
adc
inc
fidivl
mov
lcall
fiadds
mov
mov
fcmovbe
fcomip
inc
shll
dec
pushf
push
sub
or
push
jmp
and
jb
pushl
fcmovne
lods
out
jns
incl
shl
nop
fimuls
jb
push
xor
jg
mov
jb
mov
loop
jno
es
addr16
je
sub
jo
jns
sahf
or
dec
lcall
push
cmp
mov
xchg
pop
or
out
sbb
std
xor
fisttps
or
aas
pop
dec
sub
mov
fildll
push
jne
out
frstor
insb
add
jne
bound
out
xor
jb
jg
gs
sti
cmpsb
jbe
jbe
out
dec
fwait
push
ss
cmpsl
xorl
es
in
jae
push
negl
xchg
inc
ficompl
push
out
outsb
aaa
push
es
imul
push
imul
outsl
inc
lcall
add
and
xchg
inc
inc
inc
pop
push
inc
ret
pop
inc
add
loopne
ljmp
loop
xchg
dec
cs
sub
fsubrs
aas
add
outsb
in
bound
push
xor
popl
sub
push
xor
rcrl
sti
outsl
and
mov
lret
mov
sub
sbb
ffree
loopne
lret
pop
les
aad
sub
xchg
xchg
add
push
daa
add
pop
or
push
ret
mov
jg
mov
xor
add
pushl
mov
lret
clc
bound
adc
and
test
push
int
xor
incl
pop
and
push
pop
lcall
mov
add
add
or
shll
pop
push
aas
inc
es
xor
inc
pop
inc
ja
cs
jg
call
shll
push
data16
and
outsl
loope
xchg
lods
or
insb
sub
enter
jp
fcmovnu
mov
jl
sub
push
mov
pop
cwtl
lock
daa
and
dec
mov
jg
jo
fdivrl
add
aad
xorl
lods
lret
sbb
pop
lock
pop
xor
cmp
pushl
cltd
inc
xchg
jmp
fsubl
jl
out
pop
push
inc
mov
lret
and
push
arpl
sti
adc
pop
cmp
inc
pushf
into
cltd
pop
mov
push
jae
sbb
sub
inc
mov
xchg
xchg
shrb
adc
into
inc
dec
in
dec
xlat
xchg
ljmp
and
lds
push
cmc
movsb
cmp
cli
push
lcall
push
mov
decl
icebp
out
add
mov
addb
mov
ret
sub
enter
push
aad
movsl
mov
jmp
inc
mov
xor
popa
orl
jb
sbb
inc
add
jo
jo
xor
cli
call
push
mov
cmp
dec
repz
dec
leave
fstp
push
leave
rolb
stos
cs
lcall
cmp
clc
jle
push
cli
push
into
xor
cmp
and
jb
lods
incl
enter
int3
jb
mov
movsb
jae
psubb
movsb
jnp,pn
test
popf
jnp
mov
cmp
mov
das
mov
cmp
jbe
in
cmp
incl
pushl
or
mov
jns
push
clc
xor
jp
push
jg
lahf
jno
jmp
inc
mov
mov
sbb
xchg
mov
pop
pop
pop
jo
inc
es
incl
or
add
loopne
popa
std
clc
add
mov
incl
sbb
inc
sbb
adc
sub
sub
sbb
or
cmp
pop
lock
add
sbb
push
insb
sbb
xchg
fidivrs
dec
jno
add
sbb
dec
cmp
sub
incl
cld
das
fiaddl
push
and
add
mov
inc
dec
cmpsl
loopne
scas
or
shlb
hlt
decl
xor
test
adc
sub
push
clc
pop
and
push
inc
or
lret
jns
in
dec
clc
adc
decl
lret
gs
in
dec
in
push
xchg
jne
loope
testl
inc
and
ljmp
test
add
mov
out
jb
test
adc
adc
jg
mov
hlt
mov
je
out
or
orl
jmp
sub
add
sub
ljmp
ret
inc
lea
jmp
addb
adc
sti
pop
lock
xor
push
mov
rol
ret
decl
or
jb
cmpl
pop
shlb
jno
dec
popa
loope
lahf
pusha
or
repz
push
enter
pop
decb
outsl
push
jns
out
lea
mov
fisttps
push
sbb
mov
sub
push
negb
cs
ret
lcall
jecxz
push
aam
sahf
sbb
js
jecxz
and
popf
pushl
and
int3
ds
in
cmpsl
enter
in
loopne
xchg
adc
push
cmp
repz
addr16
enter
cmc
fs
enter
cmp
jo
out
rcrb
adc
cmp
add
adcb
test
cmp
jmp
mov
dec
outsl
add
add
in
lcall
jns
mov
push
sahf
addr16
out
int3
lcall
adc
or
adc
xchg
lock
push
add
cld
cmp
adc
sub
pushl
in
fimull
xchg
jle
lods
movsb
pusha
adc
mov
mov
jg
and
or
cmp
or
popf
negb
mov
inc
add
test
je
sub
ljmp
subl
jmp
into
les
or
out
push
int3
and
fistpl
inc
mov
mov
jno
adc
call
jmp
mov
push
aad
inc
lods
jo
mov
mov
adc
out
mov
ljmp
adc
cld
ljmp
rorb
cmp
or
add
mov
dec
loop
cmovbe
hlt
push
div
mov
xor
pop
loop
das
nop
test
jns
fsubs
sbb
jns
sbb
sub
fstpt
je
mov
popa
adc
add
lea
test
cmp
fcomps
xor
adcb
sbb
mov
nop
mov
push
adc
jmp
insb
in
and
les
test
dec
arpl
lcall
jmp
xor
popa
pop
add
pop
adc
xor
dec
sbb
jge
jb
test
pop
or
ljmp
lds
or
shl
dec
or
fildll
mov
ljmp
mov
fcomip
incl
xor
loopne
ss
lcall
js
rcrb
lcall
or
es
loopne
jae
sub
jne
or
pop
fs
out
pop
ss
ss
xchg
cmp
mov
call
pop
push
inc
dec
sbb
fidivs
mov
xlat
inc
push
jnp
jae
push
into
adc
sub
rclb
nop
xlat
lock
jecxz
push
idivb
inc
adc
jno
mov
icebp
ljmp
sub
or
xorb
or
aas
pop
jmp
jle
jmp
pop
and
aad
sbb
rcl
bts
imull
loope
movsl
xor
inc
call
cld
cmp
dec
push
xchg
lcall
testl
dec
cld
push
and
mov
bound
call
in
mov
andb
and
xchg
dec
call
push
subb
cmp
icebp
stc
in
std
dec
sbb
nop
shr
shrb
xor
stc
mov
movsb
fld
jns
fsubl
adc
loopne
jnp
shlb
lock
hlt
inc
aam
imul
fcomp
xor
nop
in
int3
dec
adc
call
or
pop
mov
xor
cmp
call
cmp
imul
enter
mov
push
inc
std
push
je
gs
mov
jecxz
loopne
xor
in
in
mov
outsb
mov
pop
enter
rcl
fcomp
fs
push
loopne
adc
jmp
les
fnstenv
out
jbe
sub
sar
sti
pop
or
call
cmpsl
pop
sub
rorb
loopne
xor
aaa
roll
jmp
adc
push
push
cs
xchg
add
adc
mov
decl
inc
push
add
sbb
popl
and
leave
or
mov
fs
add
test
push
or
int
incl
mov
xor
mov
inc
jmp
inc
mov
mov
out
and
sub
aas
fcmovnbe
mov
xchg
ficomps
jnp
js
sbb
dec
adc
fmuls
sbb
add
adc
or
cmc
call
sbb
sbb
loope
push
lea
lret
inc
or
push
sub
mov
adc
sahf
cmp
mov
xchg
mov
mov
popa
lods
scas
mov
pusha
mov
pop
mov
jmp
scas
inc
shrl
add
push
mov
dec
jmp
jo
movsb
xor
adc
or
sbb
jecxz
es
mov
jns
jb
and
inc
xchg
hlt
lcall
adc
out
mov
mov
inc
lea
dec
jns
cmp
pop
mov
pusha
ret
add
in
cmp
pop
inc
dec
inc
mov
add
adc
clc
mov
imul
mov
jle
ljmp
add
mov
incl
dec
cld
ja
push
call
or
loopne
sub
jno
lods
subb
xlat
or
sub
xor
push
sar
add
outsl
add
add
mov
adc
sbb
lret
repnz
cmpb
or
addr16
ljmp
repz
cmpsl
repnz
push
inc
int
in
popa
les
mov
lock
push
mov
cmpsb
and
and
xchg
add
and
fcomip
cmp
mov
or
cwtl
jne
jmp
push
fcoms
rcl
rclb
or
clc
cmpsl
mov
sahf
in
fadds
push
push
hlt
xchg
and
jg
sbb
dec
sbb
leave
adcb
add
mov
mov
incl
loopne
imul
pop
adc
cld
decl
lcall
xbegin
lds
test
arpl
out
ljmp
fcomps
cmpsl
sti
cmp
aam
das
in
inc
aam
adc
or
imul
shrb
call
insl
ret
repnz
push
mov
andl
push
sub
mov
pop
pop
loope
dec
cs
push
cltd
orb
mov
mov
xchg
push
fisubrl
jp
inc
sub
fs
push
add
hlt
add
cmovo
sbb
call
jnp
test
daa
or
call
dec
push
test
cmpsl
stos
repz
push
jg
jmp
inc
dec
mov
adcl
popf
mov
mov
ds
add
imul
pop
push
and
jmp
sub
pop
out
mov
nop
ljmp
pop
jo
arpl
sub
stos
pushl
in
sub
fstl
xchg
jo
pop
stos
add
pop
pop
daa
jg
test
cld
mov
jae
cmc
push
lcall
sbb
push
adc
test
decl
cmp
jle
push
inc
in
ljmp
mov
xor
cwtl
cwtl
xor
or
pavgw
lea
jb
jmp
sbb
test
ljmp
push
flds
cmp
ljmp
shrb
out
clc
imul
or
cmpsl
mov
mov
dec
cli
jge
mov
mov
adc
ljmp
rcl
inc
testl
dec
out
sbb
push
xchg
rol
add
ljmp
xchg
repnz
sub
lock
cld
sbb
sub
fdivr
and
imulb
mov
inc
add
push
mov
inc
lea
cmpsb
dec
pushl
cmp
cmp
lea
inc
jmp
fists
and
fists
mov
jmp
seto
sub
es
push
cmpsb
orb
test
aam
call
sbb
push
movsb
test
cmpsl
pop
adc
push
btc
jmp
or
cmp
incl
fs
and
dec
or
mov
jl
sbb
xlat
pop
lea
xor
jmp
ret
cs
xor
xchg
cs
xchg
mov
lea
sub
sbb
inc
or
ss
aaa
mov
xor
jle
dec
add
jb
or
fbld
call
adc
in
out
cmp
daa
pop
sti
int3
aam
cmc
clc
stos
jns
ljmp
lret
arpl
pop
scas
add
and
or
push
sbb
cltd
fimuls
in
dec
ljmp
dec
test
jmp
add
filds
call
or
and
lcall
sti
cmp
mov
stc
inc
dec
xchg
or
jge
and
pop
mov
lcall
or
adc
popa
test
xchg
xor
adc
ret
mov
pop
add
xchg
lret
push
cmp
nop
in
stc
push
das
psubw
push
lret
dec
sbb
dec
xchg
mov
out
dec
sub
shlb
cmp
in
mov
pop
mov
outsl
and
adc
mov
add
lahf
inc
mov
pusha
test
mov
ss
iret
in
add
sub
jno
mov
call
stos
shll
daa
mov
cmp
or
cmp
jl
cmp
and
jns
mov
push
jg
xchg
incl
rcl
and
clc
jp
adc
push
test
insl
push
add
out
sub
test
sti
das
xchg
xor
dec
les
call
int
stos
in
xchg
mov
in
add
or
or
imul
inc
in
inc
pusha
imul
sbb
jmp
mov
jns
jle
ret
cmp
cwtl
movsl
js
aam
push
sub
mov
mov
push
sbb
sarb
cmpsl
add
adc
mov
loop
sbb
cmp
clc
adc
lldt
movsb
scas
jg
jmp
fisubs
push
jae
pop
fucomi
scas
cmp
xor
pop
movsb
lea
dec
xlat
rorb
add
hlt
pushl
dec
inc
inc
inc
mov
dec
adc
lret
pusha
into
adcl
incl
xchg
rclb
and
mov
in
mov
les
test
cmpsl
aaa
hlt
dec
lock
fs
lock
xlat
lcall
jo
movsb
mov
and
test
mov
and
jb
call
std
rcrl
mov
js
mov
pop
mov
fs
mov
cmpsb
pshufw
pushl
or
pushl
inc
sub
rsm
xchg
inc
push
pop
lcall
decb
dec
sbb
sbb
fisttpll
aam
sbb
sub
add
test
cmp
adc
bnd
xchg
sub
push
adc
or
adc
andb
push
fcos
out
and
add
or
inc
mov
stc
leave
adcl
ret
in
decl
addr16
xchg
stos
jne
fimull
cmp
mov
loopne
cmp
add
jns
push
xlat
das
add
jns
mov
mov
or
jb
aaa
pop
les
mov
pop
xchg
incl
mov
xchg
int3
insb
cld
jo
and
in
sub
mov
les
mov
outsl
xchg
mov
mov
mov
and
jae
ljmp
aaa
imul
jp
inc
stos
xchg
or
or
sti
cmp
mov
sbbl
dec
insb
jmp
pop
add
pop
jne
inc
call
and
mov
lret
push
fdivl
push
fst
mov
mov
add
std
fcomip
inc
loope
pusha
xor
inc
push
push
dec
shlb
movsl
jmp
hlt
shrb
adc
sbb
add
push
push
push
mov
push
push
movsl
mov
mov
add
in
and
hlt
dec
outsb
jbe
dec
loopne
in
clc
shr
lods
pop
mov
mov
add
cmpsb
lock
lds
mov
add
out
stos
dec
pop
pusha
add
lahf
rorb
ds
jg
pop
add
or
lret
add
incl
cmp
jle
push
inc
addr16
cwtl
push
ror
push
push
daa
push
lea
rcrb
enter
insl
enter
xchg
pushf
xorl
loop
add
mov
lcall
mov
enter
cli
jg
test
sbb
add
cmp
lea
push
les
test
loope
dec
mov
loop
add
clc
call
enter
xor
les
push
das
movsl
daa
bound
int3
call
ja
clc
inc
cli
or
and
jns
add
sbb
ljmp
or
sbb
xor
xchg
faddl
sub
add
std
rcrb
jb
pushf
add
sbb
fisttpll
pop
popa
adc
adc
mov
or
out
idivb
and
fcomps
push
movb
fiadds
jl
or
cltd
cli
insl
jnp
add
addr16
cmp
adc
adc
orl
rcrb
cld
jle
mov
ljmp
mov
pop
test
decl
stos
cmp
jne
mov
mov
mov
jmp
pop
jmp
mov
call
mov
loop
das
pop
push
dec
add
test
push
cli
mov
imul
push
push
adc
add
sub
or
pop
push
add
rorb
lock
jne
push
or
shll
xor
in
jl
lcall
mov
jl
out
das
fistps
aaa
nop
clc
fisttpll
xchg
ljmp
cwtl
mov
ja
push
or
iret
pop
adc
les
jmp
sbb
loope
mov
or
xor
gs
jno
mov
add
les
mov
lcall
jp
mov
and
popa
in
xchg
sti
cmp
or
in
testb
sub
dec
cld
call
mov
dec
or
pop
xchg
stos
sub
push
cmp
mov
add
inc
cmp
jl
in
push
cmp
decl
mov
cmp
push
adc
inc
inc
mov
adc
jg
test
jle
insb
xor
outsl
std
pop
lock
aas
inc
cld
cld
adc
dec
inc
std
inc
fcomi
iret
cmpb
jbe
arpl
mov
fwait
mov
sbb
cwtl
push
mov
add
movsb
imul
test
inc
or
andl
pusha
push
add
out
std
ljmp
push
push
or
shrl
lea
sarl
add
pop
pusha
push
popl
lock
fists
sub
mov
xor
ljmp
ljmp
addl
test
adc
orl
fs
aad
mov
pushl
jl
adc
dec
inc
jb
push
cmp
push
loopne
add
inc
cld
mov
sub
popl
paddusb
test
ret
movsl
dec
xor
ljmp
add
jge
mov
roll
js
fbld
test
dec
cmp
sbb
add
loopne
mov
daa
inc
adc
cmp
fsubrs
pushl
ss
push
movsb
int
jp
push
mov
fsubs
sub
jg
push
inc
dec
jne
mov
pushf
scas
mov
push
ds
mov
sbb
xchg
mov
push
ja
push
stos
ljmp
push
xor
add
je
cmpsb
je
or
push
and
pop
dec
call
push
leave
cmp
push
dec
pushf
or
lock
pop
sub
gs
sub
fiadds
add
xlat
mov
fadds
popa
pop
ljmp
sbb
adc
sti
pushl
mov
or
mov
sti
inc
adc
cmp
lcall
in
or
adc
jg
stos
push
mov
sbb
mov
inc
push
fistpll
jmp
or
xchg
call
add
sahf
insb
dec
outsl
push
lods
fadd
int
mov
jo
daa
ss
insl
cli
das
jp
daa
mov
adc
cmp
aaa
shll
ficoms
call
rclb
cltd
adc
jnp
cld
push
dec
adc
mov
mov
mov
clc
push
out
mov
pop
cli
dec
adc
sar
fs
mov
loope
lds
ffree
ffreep
push
lcall
jne
lahf
mov
pop
mov
in
ret
popl
or
jmp
testl
sbb
cvttps2pi
fwait
and
les
rcrl
outsl
hlt
nop
sub
mov
mov
ljmp
shr
sub
add
cmpl
stc
rorb
push
movsb
rsm
fists
sub
add
jno
xchg
adc
out
iret
out
hlt
adc
mov
les
cmc
cmp
js
int
dec
pop
in
in
enter
lahf
mov
test
aad
xor
outsl
lcall
inc
or
decl
test
add
add
dec
scas
imul
ss
lods
incl
push
or
or
jmp
sub
jp
push
dec
and
std
ljmp
in
cmp
cmp
pusha
mov
popf
mov
inc
inc
inc
mov
mov
dec
mov
dec
clc
cs
lods
sti
ja
or
dec
inc
fiaddl
mov
jg
sbb
pop
outsl
leave
sub
sub
loopne
repz
add
ljmp
sahf
enter
mov
std
aaa
movsl
adc
es
gs
or
or
mov
mov
mov
mov
xchg
or
pop
subl
push
inc
mov
mov
inc
arpl
addr16
pop
mov
inc
mov
lea
xchg
stos
popl
add
test
ds
pushl
fistl
mov
jl
pop
or
cmp
dec
les
in
cmp
test
decl
mov
dec
push
pop
loopne
jo
add
add
sub
lds
or
lcall
daa
jne
xor
mov
rclb
call
pushf
in
test
sbb
mov
dec
clc
or
out
pop
ss
outsl
fsubrs
mov
lret
cmpb
decl
sub
lock
xchg
adc
lcall
mov
sarb
or
rcrb
mov
and
inc
pop
outsl
scas
jmp
imul
mov
add
bound
adc
inc
push
cmp
jecxz
ret
jmp
and
pusha
xchg
inc
ret
mov
mov
movsb
enter
cmpsb
fcomip
decl
push
shlb
mov
jg
sbb
xchg
xorb
or
adc
xchg
adc
gs
adc
xor
jae
dec
loope
xor
adc
and
call
fistpll
adc
daa
inc
adcb
inc
fmull
loop
fcom
pop
sub
cmp
pop
test
shll
movsl
mov
push
std
decl
lret
inc
xchg
js
pop
repnz
jg
jmp
imul
movsb
and
mov
int
pop
xchg
lock
add
push
cmpl
call
jnp
les
dec
pop
mov
mov
mov
mov
xor
xor
sbb
ja
push
mov
inc
sbb
jbe
ljmp
add
sbb
sub
xor
inc
sbb
cmp
mulb
nop
pop
pop
and
pop
testb
mov
loop
add
cmp
jb
adc
decl
push
call
ja
out
mov
dec
ds
push
ss
or
pushl
inc
aas
or
add
testl
ret
push
in
mov
call
mov
inc
sbb
mov
or
decl
xor
xor
adc
inc
push
repnz
and
mov
adc
call
aad
adc
adc
jmp
xchg
mov
popa
nop
out
or
fldt
call
ret
jnp
out
or
mov
jg
jp
or
cmp
test
dec
dec
xchg
cmp
xor
incl
addr16
add
push
and
dec
mov
add
pop
push
mov
arpl
xor
out
iret
test
push
adcb
or
icebp
xchg
adcb
ljmp
mov
pop
data16
mov
jno
incl
decl
mov
test
cmp
cmp
add
scas
mov
outsb
or
pop
sub
out
out
xorl
sbb
fs
dec
in
into
mov
shlb
movsl
cmc
sub
aas
add
cltd
nop
fwait
sbbl
inc
cld
fwait
out
stos
fimuls
xchg
add
inc
decl
mov
data16
test
loopne
mov
mov
scas
dec
je
push
popf
mov
add
jl
sub
add
popa
jg
pushl
into
mov
js
pop
pop
add
test
imul
xchg
es
ret
incl
adc
xchg
cld
andl
adc
jnp
es
fsqrt
jmp
adc
lahf
std
pop
out
loopne
mov
push
mov
or
scas
xchg
or
cwtl
incl
pop
mov
ljmp
fstl
scas
push
js
adc
sub
ljmp
push
pop
adc
pop
sbb
pushf
scas
or
or
mov
loopne
cmpsb
stos
loopne
mov
iret
xor
xchg
xchg
cmp
addb
call
idivb
jne
test
add
add
ljmp
sbb
push
imul
adc
insl
pop
push
popa
push
add
lds
sbb
lcall
movsb
or
jg
xor
mov
or
inc
pop
inc
push
inc
ja
mov
xchg
femms
xor
jbe
hlt
decl
inc
sub
lret
rclb
mov
lods
flds
sbb
or
mov
add
or
ss
ljmp
daa
imul
lea
lret
adc
inc
icebp
push
dec
push
mov
add
decl
outsb
add
stos
mov
fdivrs
pop
and
data16
push
cmp
out
push
movsl
cmp
mov
dec
push
dec
add
cmp
call
dec
or
jl
iretw
out
sub
or
push
les
les
rol
popa
std
jno
rol
fisttpll
negl
cli
pop
arpl
rol
daa
imul
inc
neg
mov
inc
or
int3
loop
mov
fwait
push
mov
pop
jne
addb
add
sahf
test
cmp
sahf
pop
lahf
sub
lcall
fsub
inc
add
and
sub
movsb
ret
xchg
outsb
xchg
inc
pop
js
jge
jge
test
clc
sub
das
add
std
dec
jg
sbb
test
xor
mov
icebp
sbb
enter
incl
enter
add
jecxz
or
repz
inc
mov
fimull
sarb
out
decl
xor
cmc
xchg
xchg
dec
jl
or
incl
cmp
loopne
or
mov
adc
dec
data16
mov
adc
push
aas
add
add
in
scas
movsb
and
mov
sbb
and
jge
addl
mov
mov
decl
push
pop
stos
cmp
int
and
pop
je
aam
xchg
and
sbb
pop
adc
inc
add
aam
push
push
xor
mov
mov
rep
mov
push
add
mov
sarl
lea
in
jl
or
sbb
add
adc
fnstcw
cmpsb
jbe
test
pop
addl
and
xor
xlat
aas
pop
notb
mov
inc
add
and
or
and
or
dec
or
jmp
mov
cli
fstpt
add
ret
idiv
mov
or
decl
dec
movsbl
jnp
lcall
sbb
sub
dec
add
xlat
push
orb
jbe
push
aaa
cs
and
sarb
outsl
add
clc
jl
jb
add
out
fdivr
jg
pushl
lock
mov
or
adc
xchg
add
add
mov
jmp
sub
adc
pop
mov
sbb
mov
fnop
xchg
xchg
lret
dec
in
imul
or
sbb
cld
jo
pop
sbb
jle
cmc
int
xor
and
rolb
sar
xlat
dec
out
ljmp
lahf
xor
lahf
add
test
cli
incl
ret
pop
scas
add
xchg
push
stos
jmp
cmp
fwait
push
sbb
sbb
mov
clc
cmpsb
jmp
aas
clc
inc
mov
mov
pop
adc
mov
jb
pushl
push
mov
pop
sbb
scas
insb
inc
dec
jb
dec
test
jmp
mov
shrb
push
insb
sbb
add
or
mov
loope
cld
call
push
jp
jmp
push
cmp
or
sbb
and
sub
cmp
test
and
movsb
repnz
push
or
cmp
push
ds
hlt
jnp
insb
popf
or
leave
jo
jp
or
bound
fisttps
mov
inc
pushl
fadds
jg
fdivp
and
xlat
pop
cmp
and
scas
stos
push
pop
add
add
cli
mov
add
mov
or
mov
and
cmp
mov
xor
iret
lods
pop
imul
add
sub
and
jo
dec
jmp
cmp
mov
leave
dec
dec
out
js
nop
pushf
add
push
dec
movsb
push
stos
test
and
pop
add
lcall
add
mov
push
pusha
push
adc
push
dec
jnp
dec
xlat
add
and
insb
cwtl
paddb
adc
test
push
adc
cld
iret
inc
dec
jg
or
push
and
sub
cmc
call
xor
add
adc
mov
in
inc
out
xor
fbstp
cmp
adc
and
pop
and
aas
lahf
mov
int3
jge
aad
jo
pop
sbb
or
push
and
mov
les
gs
xchg
adc
sub
ljmp
cwtl
adc
rcrb
lcall
dec
nop
pop
xor
and
jg
fidivl
push
inc
push
push
sub
and
dec
pop
jmp
shll
ljmp
adc
push
or
ja
cmpsb
and
out
mov
lahf
outsl
cmpsl
popf
add
cmp
jp
or
pop
push
jno
out
cmpsb
fcmovnu
es
mov
pop
lret
add
clc
aas
sub
add
pop
insl
out
imul
shlb
int
cmp
decl
ds
or
sub
hlt
jbe
add
dec
fsts
icebp
jbe
fnstcw
push
dec
lret
cwtl
hlt
cmp
cmp
or
mov
push
aas
ret
mov
mov
aaa
in
adc
cmpsl
mov
into
lods
sbb
push
inc
popf
inc
shrb
xor
enter
or
je
sub
incl
in
cmp
adc
or
push
outsl
or
clc
push
ss
jp
dec
dec
imul
or
in
data16
sbb
push
loopne
addr16
mov
gs
mov
or
mov
incl
gs
add
outsl
test
addr16
sbb
sbb
adc
dec
outsl
mov
sbb
popa
decl
out
add
out
dec
fldl
es
scas
cld
pop
ljmp
roll
clc
pop
repnz
mov
je
or
or
test
or
in
xchg
xor
repnz
add
scas
rolb
test
pop
outsl
adc
add
or
aas
add
sub
sar
ljmp
nop
aas
addr16
aaa
mov
sbb
mov
orb
lcall
mov
mov
in
das
cli
incl
je
rorb
push
repz
aam
int
jbe
cmp
xorl
cmp
mov
leave
incl
lea
movl
mov
mov
int3
and
push
popl
es
dec
push
dec
icebp
fcomip
inc
imul
pushf
sub
insb
or
dec
inc
leave
inc
rcr
test
aaa
cld
pushl
or
mov
cmp
sbb
sbb
or
sbbb
jo
mov
mov
dec
aad
in
andb
pop
pusha
dec
add
jg
repz
sub
pusha
rcl
sub
inc
stos
jb
pop
popa
push
inc
pop
or
leave
enter
icebp
jmp
fiaddl
xchg
fildll
movsb
daa
sub
cld
jg
stos
jb
mov
jae
movsb
lods
rolb
sub
movsb
pushf
sub
xchg
sbb
out
adc
mov
repnz
mov
jg
incl
jo
outsb
mov
adc
sub
and
lcall
pusha
pop
jb
cld
mov
sub
sub
push
andb
inc
mov
incl
pop
out
add
push
sub
mov
fistl
push
pop
cwtl
pop
insb
push
dec
les
mov
fildll
dec
sub
pop
les
pop
and
es
lods
adc
popl
addb
xchg
or
das
cmp
sbb
or
lcall
pusha
pusha
and
push
lcall
mov
adc
incl
sti
cmp
and
dec
or
clc
mov
sbb
rcll
sub
cli
pushl
imul
push
xor
mov
or
mov
xor
pop
adc
inc
mov
icebp
out
or
adc
popa
or
sub
xor
scas
add
incb
xor
push
xor
nop
andb
mov
in
mov
outsl
out
or
bound
fbld
dec
fs
jl,pt
arpl
push
xor
adc
insb
js
mov
insl
sahf
push
pop
or
xlat
incl
sub
xorb
push
in
cmp
loopne
ret
xchg
loopne
jg
xchg
fs
push
imul
inc
inc
ss
data16
fists
notl
ret
push
lock
xor
jl
movsl
and
or
mov
xor
xor
push
rcrl
add
adc
push
les
in
add
push
mov
xor
nop
dec
sbb
pushl
call
cmpsl
xor
cmovns
in
mov
mov
jmp
adc
test
outsl
xor
loop
fnop
push
clc
push
xor
xor
and
add
ljmp
fwait
ja
sti
cs
jb
push
cld
jns
data16
ret
fnstcw
jnp
jl
jge
cld
fidivrs
subl
insl
int3
into
ss
inc
push
test
jne
fdivs
das
jbe
sarl
flds
ja
fs
ror
lods
pushl
jp
push
fs
aam
in
lock
cmp
or
xor
sbb
push
push
sbb
imul
pop
xor
pusha
iret
xor
sbb
outsl
icebp
dec
enter
cmpsl
xor
xor
or
loope
pop
fs
cmpsl
xor
push
push
xchg
fistpll
out
and
les
mov
clc
js
out
or
mov
loopne
js
enter
lcall
jae
jle
mov
ss
test
in
hlt
cmpsl
fistpll
test
push
mov
call
push
push
test
xchg
notl
nop
pop
ljmp
nop
mov
xor
or
mov
dec
add
add
int
lahf
mov
lea
push
ja
mov
in
mov
idiv
mov
cwtl
idivl
push
nop
and
cmp
clc
mov
clc
or
shrl
in
jnp
xchg
or
aaa
repnz
lret
push
adc
adc
xchg
sbb
cld
pop
sbb
ss
push
mov
bound
dec
adc
sub
daa
cmp
xchg
mov
lds
mov
pop
sahf
push
cmp
and
aaa
jb
sub
add
add
cmp
push
sub
push
push
xchg
sbb
test
lods
nop
jg
cmpl
pop
xchg
int3
data16
inc
push
fimull
stc
negb
or
in
in
sbb
and
pusha
cltd
pop
das
ret
faddl
fwait
inc
dec
adc
cmp
popf
ret
push
outsb
aas
fcompl
fucomp
stc
dec
pop
add
inc
xchg
cs
push
xor
xchg
cmp
xchg
or
js
scas
or
sub
cmp
adc
fwait
test
pop
xor
data16
in
nop
hlt
out
jmp
out
push
adc
sub
into
xchg
sahf
mov
jmp
cmp
or
mov
push
clc
dec
cld
or
arpl
incl
mov
and
cmp
or
cmp
insb
fiaddl
pop
push
pop
push
sub
pushl
xchg
mov
xchg
push
popf
nop
push
lock
sub
cmp
lahf
sub
mov
push
mov
mov
sbb
lock
pop
inc
popa
and
jg
cmp
sub
cmp
hlt
mov
dec
movups
nop
sbb
movsb
adc
inc
fwait
jg
call
aaa
inc
jecxz
mov
push
out
cmp
adc
adc
inc
jo
sbb
ds
adc
stc
sub
cld
scas
add
in
push
inc
add
push
jae
call
lcall
xchg
jl
cltd
xchg
adc
xor
mov
cmp
pusha
inc
incl
or
rcl
sbb
inc
pushl
sbb
mov
aas
cld
incl
mov
inc
aam
in
jb
aam
int3
add
jne
repz
andl
decl
mov
ljmp
xlat
loop
cmpl
ds
push
fcoms
pushf
jge
int
aas
pop
incl
pop
scas
adc
xchg
scas
or
fbld
add
insb
fstps
push
xlat
call
add
aam
neg
out
frstor
cmp
cmp
filds
stc
adc
pop
pushf
xlat
scas
and
lock
sub
leave
inc
lds
jnp
adc
arpl
mov
hlt
sahf
sub
lcall
push
add
mov
dec
ficoms
or
clc
or
pop
subl
cmpsb
out
sub
movsb
ret
add
pop
ss
pop
pop
test
out
mov
or
pop
cmp
test
addr16
mov
aas
clc
mov
cmpsb
loopne
xor
inc
mov
jg
stos
push
cli
ffreep
sub
xorl
inc
test
incl
add
jne
lcall
enter
mov
and
incl
out
ds
cld
lahf
jbe
cmp
insb
loopne
ss
ror
cmp
adc
adc
mov
pop
or
outsl
enter
mov
pusha
xchg
jb
add
pop
stos
sahf
inc
lock
xchg
pushl
cld
dec
fs
dec
mov
pop
rorb
jb
dec
sub
adc
int
outsl
popa
sbb
stos
lcall
pop
insl
fmuls
lods
movl
mov
cmpsl
js
mov
push
and
cld
mov
lcall
and
arpl
inc
in
sbb
or
or
call
mov
inc
inc
sub
jl
jae
cli
dec
push
icebp
mov
xor
jno
clc
cmp
cld
and
mov
decl
out
data16
bound
inc
inc
pop
lock
out
test
xlat
decl
inc
add
or
xchg
pop
push
inc
add
pushl
mov
pop
test
lcall
xor
inc
push
cmp
icebp
mov
or
add
and
jmp
sbb
adc
pop
jbe
jecxz
and
jg
mov
and
cmpsl
fmuls
add
cmp
adcb
shlb
push
sar
call
mov
and
shrl
das
popf
xor
inc
jmp
cwtl
enter
cmp
mov
inc
adc
out
add
shr
jp
testl
or
lret
add
jle
xor
add
ljmp
push
pop
xchg
popf
loope
ret
sbb
gs
push
pop
sub
mov
in
sbb
cmp
outsl
hlt
enter
lea
mov
push
sub
push
sub
lods
inc
push
sub
lcall
dec
or
pop
addb
or
fs
sub
xor
and
iret
pop
and
cmp
clc
call
loopne
xor
inc
or
aas
pop
iret
nop
jo
xorl
scas
call
xor
dec
scas
popf
shrb
pop
insl
jo
dec
and
or
mov
and
std
mov
testl
imul
adcb
push
inc
pop
xlat
out
clc
outsl
and
insb
sub
cmp
sbb
je
leave
push
and
adc
jg
rcrl
pop
lods
or
cmp
ret
pop
dec
mov
add
push
pop
aam
jae
mov
ljmp
pop
inc
inc
jmp
pop
enter
dec
inc
fstp
les
stos
xor
scas
xchg
outsl
in
dec
mov
cmpsl
fwait
mov
or
mov
ljmp
add
add
xor
pop
jne
cmpsl
or
nop
das
inc
and
scas
pop
int
shlb
mov
xor
adc
add
pop
mov
sbb
mov
jnp
inc
sbb
or
mov
das
pop
fisttpl
mov
clc
mov
and
movsl
inc
fwait
xchg
push
add
inc
aas
cmp
jae
mov
add
fld
mov
test
and
jecxz
or
add
push
push
jg
ljmp
and
out
xchg
subb
in
enter
dec
fsubrs
xchg
inc
mov
and
xchg
aad
inc
mov
jp
mov
xchg
xor
adc
js
or
aam
jne
inc
xchg
pop
inc
or
js
call
adc
dec
fisubrl
dec
dec
push
popf
inc
cltd
nop
shlb
adc
pusha
jne
sub
lcall
negb
or
insl
mov
adc
pop
mov
test
mov
lret
and
movsb
test
jne
pop
xor
ljmp
sar
sbb
dec
inc
push
iret
cmp
es
dec
rorb
sbb
pushl
push
in
mov
or
push
loopne
push
or
movb
sbb
mov
and
cmp
jne
push
dec
xor
movsb
inc
pop
rorb
dec
xchg
push
mov
sub
ja
jp
nop
out
jo
stc
mov
cli
pushl
adc
inc
sub
add
add
add
add
adcl
shl
jb
sbb
popf
and
jmp
mov
sub
in
add
outsl
jl
mov
dec
mov
xor
loopne
add
cmp
lods
mov
sub
adc
xlat
popa
dec
push
pusha
dec
add
outsl
lret
addl
push
out
push
add
loop
jmp
mov
inc
dec
iret
pop
arpl
inc
or
mov
xchg
call
or
jbe
les
ja
mov
cmp
rcl
adc
shlb
xchg
push
call
add
sbbb
out
dec
outsb
xor
jo
pop
add
pusha
mov
cs
push
mov
outsl
movaps
or
mov
gs
daa
clc
imul
sub
clc
mov
add
incl
push
mov
mov
cmpsl
dec
stos
outsl
mov
call
lods
add
mov
add
ljmp
lods
sub
test
dec
and
pop
xchg
hlt
pop
in
or
nop
xchg
hlt
sub
dec
daa
xchg
sbb
loopne
lcall
jne
and
or
push
dec
jb
imul
sbbl
and
out
inc
test
mov
pmulhw
bound
call
push
lcall
cmp
push
shll
inc
decl
fists
shrb
dec
jl
xchg
jb
push
xchg
sahf
and
pushl
and
hlt
popf
sbb
dec
push
in
in
ja
call
lahf
dec
dec
push
pushf
ss
in
mov
mov
in
cmp
decl
stc
mov
or
jae
jg
aam
or
dec
or
movsl
add
cmpsb
imul
xchg
push
xchg
mov
and
xchg
xchg
sub
dec
mov
cmp
aad
mov
cmp
lock
std
jmp
push
mov
jns
xchg
mov
pop
cwtl
subl
xor
jmp
sbb
or
stos
int
aas
push
cmovnp
fcomi
jl
out
sub
pop
adc
mov
aas
or
std
test
cmp
incl
sub
loope
pop
xchg
jle
mov
cmp
nop
in
and
xor
out
aad
xchg
cmp
jmp
jns
rolb
hlt
or
rol
mov
mov
mov
push
cmc
fdivr
pop
sti
lea
in
or
push
inc
cmp
ja
xor
pop
and
jl
sbb
fbld
mov
sbb
lods
insb
pop
sbb
push
and
mov
cli
ljmp
fldl
push
je
push
repz
sbb
jg
mov
sbb
popf
pusha
outsb
sar
xchg
out
xorl
dec
push
xor
jg
test
cmp
ss
je
fsubrp
in
push
push
mov
cmp
adc
push
lods
jl
xor
jecxz
clc
jo
out
ja
sbb
push
mov
sbb
cmp
pushl
bound
jl
aas
jo
and
pop
cmp
cmp
xlat
adc
mov
mov
out
pop
push
jo
adcb
aaa
stos
cli
loope
mov
leave
mov
push
or
mov
sub
arpl
incl
dec
add
jp
test
push
je
push
pop
mov
cmp
mov
decl
mov
fdivr
cmp
add
jb
arpl
sbb
jo
test
pushl
or
test
add
xchg
sarl
lret
in
adc
add
mov
inc
mov
xchg
lret
mov
loop
mov
inc
aas
cmpsb
pop
imul
call
jno
movsl
sbb
push
xchg
shlb
loope
push
mov
aas
test
sbb
pushl
roll
jno
mov
jne
jo
lcall
jge
push
sbb
sbb
clc
add
mov
sbb
ret
adc
push
test
mov
test
cmp
adc
fistl
add
stc
mov
jns
js
nop
hlt
dec
test
or
mov
pop
pusha
clc
xchg
mov
ljmp
clc
int3
nop
lret
push
outsl
ret
push
cwtl
push
and
fwait
rcrb
lds
fs
ljmp
jg
xchg
insb
jg
out
push
int
adc
jae
jecxz
lea
in
jmp
pop
negl
or
decl
es
and
push
pop
lcall
imul
add
push
pop
rolb
cld
decl
stos
int3
ret
inc
xchg
add
aas
and
jg
jbe
xor
popf
add
cmpl
loope
fwait
iret
sub
stc
repnz
cmc
test
ljmp
loop
push
imul
popf
push
rorb
iret
mov
inc
jmp
insb
js
cmp
mov
sub
data16
jle
add
lods
inc
lock
decl
fstp
ljmp
cwtl
push
iret
add
movsl
adc
cmp
decl
imul
adc
int
xchg
mov
inc
ljmp
xchg
or
hlt
adc
ret
sahf
test
dec
push
xor
pusha
add
lock
mov
mov
mov
adc
sti
cs
pushl
lea
or
jb
jbe
mov
jmp
push
xchg
ficompl
lcall
jb
add
loopne
mov
scas
sbbb
add
pop
mov
mov
and
push
lret
dec
jg
call
cmp
inc
inc
push
push
xor
sub
push
xchg
adc
add
movsb
xor
scas
lcall
test
lcall
notb
or
movsl
push
pop
sar
lahf
inc
int
lods
adc
mov
jo
roll
lds
loop
inc
inc
dec
jl
enter
divb
adc
nop
xchg
or
add
inc
jnp
push
sbb
enter
rorb
fisttpl
jle
jb
clc
incl
clc
dec
sbb
lret
roll
rcll
jb
divl
ljmp
ret
lea
loope
or
and
or
push
in
sbb
outsl
into
add
decl
aad
repz
dec
push
lcall
pop
mov
push
mov
push
roll
lret
enter
add
jmp
rclb
nop
scas
cmp
std
and
pushl
xchg
data16
jge
inc
mov
pusha
push
mov
inc
cmp
dec
mov
sub
mov
fnstsw
sbb
test
ret
inc
js
ret
or
push
nop
cmp
lea
test
push
test
addr16
mov
adc
pop
call
jbe
sbbb
add
add
push
add
xchg
and
jns
cli
mov
cltd
or
add
cmp
out
dec
xchg
cld
scas
fcoms
inc
push
scas
jo
pop
xor
jg
sbb
jo
mov
rcr
pop
pop
mov
jmp
sbb
inc
scas
and
or
and
and
add
cmpsl
sbb
fmuls
add
inc
andb
aaa
push
ja
push
lods
pop
jns,pn
push
jmp
xchg
clc
sbb
xchg
lahf
jmp
cmc
or
mov
movl
fs
shld
iret
push
jmp
dec
add
subb
cmpsb
pusha
nop
jbe
inc
les
add
ljmp
pop
mov
lret
xchg
pop
or
jg
lods
lea
cmpsl
pushf
call
cmp
pushl
shrl
mov
ljmp
imul
rorb
xchg
cld
jl
aas
pop
rolb
add
push
or
or
popa
cld
imul
lret
pop
push
or
pop
lods
push
cmp
pusha
decl
mov
add
sbb
icebp
test
call
dec
xchg
clc
xor
push
push
sarl
pop
ret
cmp
or
adc
lcall
insb
sub
or
xchg
adc
je
loop
movsb
aas
add
jmp
mov
jle
cmpb
or
je
or
push
lcall
nop
insb
push
push
inc
adc
jmp
js
push
lock
dec
lret
xor
incl
aas
out
sbb
pop
sbb
stos
add
rcrl
cmp
cli
cli
pop
push
fisttpll
call
sbb
inc
shl
and
ret
fistpll
cmp
incl
in
adc
les
dec
lock
fldenv
repnz
aaa
xor
mov
adc
sbb
ret
rcrl
scas
adc
ds
test
jb
sti
pop
hlt
push
or
adc
cmp
filds
push
jnp
andl
mov
call
iret
call
dec
imul
inc
mov
push
call
push
pop
movd
insb
xchg
mov
mov
js
pop
pusha
lahf
adc
rcl
dec
andb
pop
jmp
mov
push
pop
or
or
inc
push
test
das
clc
mov
pusha
cmpsb
mov
and
dec
pop
mov
jg
and
pop
jg
std
add
sar
ljmp
push
rorb
sub
sbb
add
into
rcll
aas
or
jl
push
cs
clc
adc
loop
jmp
mov
pusha
xorl
ds
fcomip
sbb
orb
jmp
in
mov
pop
push
adc
push
mov
push
je
and
jb
jae
cmp
dec
ja
insl
xchg
nop
scas
mov
scas
add
push
nop
inc
adc
mov
aad
je
cmpps
lcall
adc
shrb
popa
xor
jp
loop
addr16
sub
lcall
negl
icebp
nop
add
inc
pop
push
xor
inc
xor
add
inc
ret
mov
cmpsl
ja
in
adc
in
sub
das
mov
call
repnz
xchg
inc
stc
sub
repz
movb
push
arpl
or
push
sub
cmpsl
dec
pop
arpl
dec
add
push
pop
or
sbb
out
andl
cmp
mov
nop
adc
mov
jae
loopne
lahf
js
pop
dec
enter
pop
push
xorb
jl
ljmp
pop
xchg
jecxz
les
mov
or
dec
shll
mov
cmc
push
inc
cmpb
adc
decb
sub
lea
mov
pushf
add
sub
lcall
xor
es
xchg
aaa
sbb
fimull
jbe
or
rcll
xor
mov
xorb
sbb
jg
mov
jnp
ret
clc
jg
ret
incb
clc
or
scas
mov
mov
das
aad
outsb
shll
popa
xor
out
fiaddl
ret
mov
dec
imul
mov
xor
xor
incl
jle
addr16
sbb
lretw
or
sub
adc
sti
mov
icebp
movsb
jmp
lock
fbld
je
dec
pop
outsl
insb
icebp
sbb
push
fwait
mov
loope
adc
ss
inc
cmp
mov
sbb
xorl
cli
in
cmove
or
andl
call
push
clc
adcb
imul
lock
idiv
dec
cli
and
push
shl
aas
test
or
mov
jns
loopne
test
add
call
std
pop
movsb
xchg
xor
mov
adc
stos
in
sub
inc
adc
xor
mov
mov
repnz
fwait
pushf
dec
jge
add
dec
or
mov
inc
add
add
adcl
xchg
shll
and
sub
adc
sbb
mov
sbb
sbb
outsl
shlb
xchg
in
jnp
call
lahf
rclb
inc
dec
xor
push
mov
add
xchg
push
jp
je
clc
push
movsb
pop
test
fdivrp
jne
xchg
mov
xchg
sub
clc
jns
scas
sub
pop
mov
mov
dec
js
stos
cmpsl
sbb
cltd
call
and
aas
iret
xchg
and
mov
mov
mov
pusha
dec
jno
or
test
dec
push
pop
cmc
ljmp
cmpsl
or
ret
in
daa
popf
xor
aas
push
adc
ficoms
or
pop
cli
das
pop
hlt
sub
decl
jg
test
inc
inc
or
fs
cmpsb
inc
xchg
out
rcrb
lods
cwtl
lock
incl
push
inc
lcall
aas
fsubl
pop
xchg
enter
incl
hlt
hlt
add
orl
out
mov
push
dec
repz
sub
rorb
jmp
ficomps
push
idivl
or
mov
cmp
shrl
xor
aad
inc
js
out
out
ljmp
lods
xor
and
mov
cmp
imul
inc
add
adc
repz
pop
xor
sub
enter
inc
push
adc
fcomip
lcall
adc
dec
dec
and
or
push
jg
pop
bound
scas
loopne
pushf
mov
jmp
je
push
rcll
pop
adc
mov
inc
adc
inc
adc
cld
sub
fistps
inc
pushl
sub
inc
negl
rorl
jmp
js
add
lahf
cwtl
ret
movsb
dec
out
popl
inc
loopne
call
jns
adc
push
push
dec
push
cmp
pop
mov
insb
fwait
sbb
incl
nop
pop
jae
decl
add
inc
cmp
daa
push
pop
lock
sbb
add
adc
sbb
or
xor
mov
push
sbb
sub
mov
mov
or
iret
iret
sub
push
pusha
mov
add
nop
out
dec
pop
and
insl
xor
mov
lahf
insl
mov
cmc
iret
fldcw
add
decl
sbb
cld
aaa
fs
jns
arpl
outsb
cmpsl
repz
andb
adc
cld
rep
lods
incl
xor
icebp
push
aad
dec
xchg
inc
sub
and
sbb
hlt
jne
push
inc
xor
orb
outsb
scas
loopne
aad
gs
push
lods
push
stos
shrl
add
lods
sbb
subb
jg
inc
arpl
dec
or
or
mov
and
mov
cwtl
xchg
pop
loop
adc
adc
test
add
das
cmp
sbb
ljmp
sbb
je
push
adc
sub
in
inc
fiaddl
jae
outsl
and
pop
xchg
hlt
not
outsl
rorb
int
push
call
mov
mov
mov
sbb
js
push
rorl
add
les
jg
decl
imul
popa
or
mov
sub
mov
inc
das
sar
call
cltd
subl
enter
xchg
les
pushf
add
pop
mov
pop
sub
cwtl
inc
mov
pop
sbb
data16
add
jge
pop
jns
pushf
std
ljmp
jp
or
sub
adc
pop
mov
test
cmp
jg
or
jl
mov
ds
xchg
ss
incl
outsl
dec
test
sahf
movsl
xor
dec
sbb
gs
cld
test
cmp
add
outsl
outsb
pushl
or
shlb
xor
adc
xchg
outsl
stos
adc
mov
jg
or
mov
scas
dec
test
mov
pop
push
pushl
sub
sub
inc
insb
xor
push
js
or
cmovge
jmp
ds
xlat
jno
mov
dec
les
mov
inc
call
rorb
test
cmp
stos
xlat
inc
and
in
clc
adc
cmp
iret
jb
mov
jp
or
inc
cld
jmp
repnz
adc
shlb
in
push
cmp
lds
addr16
call
mov
add
cs
imul
inc
push
stos
adc
je
incl
cmpsl
xor
in
lock
testb
jne
xor
sbb
mov
sarb
jecxz
xor
fmull
sub
sbb
pop
fsts
add
add
fimull
or
pop
push
dec
call
lock
pusha
leave
mov
xchg
add
lcall
arpl
sti
test
cld
loopne
addl
nop
clc
adcl
test
push
lahf
out
jecxz
fs
fs
ljmp
jne
stos
push
sbb
lcall
jl
rcl
lea
orb
add
incl
dec
pop
rol
hlt
test
xchg
inc
pop
inc
pop
int3
enter
fcomps
jne
inc
out
push
je
mov
and
mov
sbb
or
push
clc
fdivrl
lcall
jne
orl
movsb
shr
and
add
adc
xchg
scas
test
lcall
pop
ret
mov
sub
mov
outsl
test
test
mov
and
lods
mov
sub
call
cmp
or
add
lgs
xchg
repnz
add
inc
mov
call
adc
push
push
or
loope
roll
in
or
push
ret
inc
jl
sbb
in
adc
mov
jbe
ret
es
and
push
repz
lret
ss
mov
nop
pop
push
cmpsb
jecxz
add
jo
nop
roll
ja
rorb
decl
subl
mov
mov
mov
pop
and
test
sub
jg
jmp
shlb
sti
adc
insl
push
addb
fcoms
cmpsb
adc
cmp
rorl
mov
js
ja
push
dec
sti
sub
pop
dec
push
push
push
decl
scas
aas
dec
daa
jle
rcll
pop
js
or
add
rclb
and
call
fndisi(8087
jns
inc
mov
dec
shlb
and
dec
jns
push
mov
fs
dec
lock
incl
addl
mov
xchg
jnp
mov
iret
fstl
lea
xchg
fisttps
adc
sarl
xor
incl
loop
gs
pop
cmp
adc
mov
inc
mov
adc
fcomip
ficomps
sub
je
push
mov
dec
lea
inc
cmpsb
pop
std
decl
inc
add
jp
xchg
insl
xor
or
fbstp
ficomps
mov
inc
jnp
mov
xchg
lret
cld
hlt
pop
popl
or
cmp
xchg
cmp
adcb
sahf
jne
fidivrl
mov
or
data16
sbbb
outsb
hlt
mov
cmp
lods
fistl
test
jg
xor
mov
test
sahf
add
adc
mov
and
sub
xchg
jns
jl
push
cmc
push
or
xchg
add
pushl
inc
push
xlat
xlat
jge
rcl
pop
jge
clc
and
mov
sahf
fidivrl
jmp
adc
adc
pop
imul
repz
mov
rorb
add
jo
jle
mov
clc
cmp
jae
inc
or
lock
or
mov
les
in
inc
mov
mov
inc
call
lea
ret
repnz
in
fnstenv
in
or
sbb
pusha
clc
jmp
je
loopne
or
and
sbb
cmc
mov
fmuls
xlat
fwait
jge
jge
std
dec
inc
or
adc
or
fildl
addr16
les
add
clc
or
jo
cmpsl
jle
cmpsb
mov
outsb
or
incl
cmp
imul
dec
aaa
cli
hlt
testb
mov
pushl
cld
cmp
sbb
sbb
lods
sub
push
aad
cwtl
nop
clc
js
mov
xchg
mov
cmp
inc
filds
jmp
mov
lret
fnstsw
pushf
pop
les
cmp
xchg
cmp
lea
subb
xchg
movb
adc
sbb
and
into
or
push
dec
clc
and
dec
cmp
sti
mov
ljmp
xchg
ror
lods
std
push
cmp
decl
xor
sub
jne
imul
out
xchg
mov
and
lcall
mov
cli
jbe
adc
test
lds
sbb
arpl
or
aaa
adc
fnstenv
scas
dec
movsb
fs
out
mov
mov
push
loopne
rorl
hlt
mov
shll
pop
mov
add
mov
incl
cmp
hlt
rol
push
rolb
cmp
fldcw
rolb
scas
adc
sbb
ja
scas
add
test
cmpl
or
xor
jbe
das
aam
shlb
mov
or
push
adc
decl
cmovne
stc
cmp
dec
or
or
repnz
push
xchg
or
pop
mov
iret
add
cmp
call
fdivl
add
pop
orb
out
push
dec
and
andb
lcall
xor
inc
clc
cmp
ss
addr16
gs
add
adc
lret
inc
xchg
push
dec
push
add
movsl
aam
cmp
push
out
shrl
xor
jecxz
fbld
or
jne
cli
adc
adc
stc
out
jmp
dec
add
adc
int3
xor
mov
shl
call
sub
pop
adc
fbstp
movsl
pop
and
cmp
or
cmp
and
jnp
test
jmp
pusha
das
cmp
adc
xchg
pushf
sbb
inc
pop
xchg
dec
sbb
bound
jmp
mov
decl
lcall
inc
push
or
mov
adc
xor
bound
decl
mov
aaa
dec
mov
cmp
push
loop
call
repnz
xchg
xchg
mov
jae
idiv
fdivs
add
inc
and
and
bound
inc
ret
xchg
nop
scas
fwait
es
aaa
and
add
mov
push
push
jge
outsl
in
sub
lea
push
jl
insb
push
dec
fdiv
fdivrs
add
mov
in
dec
adc
or
incl
adc
movsb
pop
addr16
xchg
jl
sbb
iret
and
test
cwtd
js
fcomps
not
adc
jg
call
or
mov
add
fs
dec
sub
and
xchg
jmp
sbb
in
stos
jge
cltd
jp
dec
add
pop
or
es
cli
je
shll
mov
or
loopne
aas
cmpsb
sub
push
dec
or
cld
xor
adc
pop
popa
push
jb
out
fldenv
add
sbb
imul
test
hlt
xchg
xor
jle
ljmp
cli
mov
call
push
pop
add
jmp
mov
mov
test
mov
and
pop
popa
xor
popa
shrb
subb
clc
daa
ljmp
aas
or
loopne
mov
lcall
push
xchg
divl
push
jne
loopne
xor
inc
sbb
inc
or
cmp
sub
jg
orl
mov
push
adc
and
cltd
dec
or
mov
jmp
ret
sbb
cmp
orb
jg
out
repnz
nop
cmp
je
xchg
bound
ret
mov
and
and
jg
mov
adc
mov
lcall
adc
mov
adc
mov
inc
sub
xchg
push
xchg
adc
arpl
push
je
jg
add
cmp
adc
dec
jg
mov
mov
ljmp
inc
loopne
sbb
add
sbb
xor
jge
cmp
mov
mov
jg
lcall
fsubrs
pusha
hlt
jl
mov
sub
and
adc
popa
jl
ja
jp
adc
cwtl
xor
sub
jae
test
or
mov
js
outsl
in
int3
inc
sbb
cld
call
hlt
cmp
cli
mov
cli
out
sub
adc
clc
inc
xor
sub
mov
clc
xchg
enter
and
jle
xor
nop
and
dec
push
push
and
mov
push
test
adc
adc
ljmp
nop
and
or
leave
and
sbb
lock
add
mov
add
daa
lock
shlb
jg
jp
push
sub
jg
adc
addl
cmpb
mov
lret
std
add
pop
pop
xchg
mov
outsb
dec
iret
insl
ret
jno
add
sub
incl
fwait
call
subb
sbb
dec
fisttps
dec
xchg
xor
jmp
imul
add
sbb
and
call
add
insl
fstl
add
fists
push
adc
jg
sbb
mov
in
adc
ret
mov
loop
mov
add
incl
mov
sbb
mov
push
ss
aas
jl
into
ret
xchg
jbe
js
cmc
pop
in
mov
dec
test
add
adc
jnp
incl
pusha
sub
call
movsl
aas
mov
xor
jo
xor
pop
rolb
sub
rcl
js
add
movsl
je
rclb
mov
cmp
or
cmc
push
adcb
es
lcall
je
incl
sub
sbb
sbbb
adc
mov
addl
fwait
popf
sbb
rcll
lcall
lods
andb
sbb
lcall
add
decl
movsl
fidivs
lods
sbb
push
dec
inc
xchg
jns
and
mov
popa
loopne
cmp
jbe
andb
arpl
decl
push
negl
sahf
stc
aam
jmp
lods
jge
push
cltd
sub
push
mov
mov
inc
call
lcall
lods
pop
xchg
sahf
xor
ret
call
cmpsl
xorl
clc
sub
jmp
mov
ss
push
enter
xchg
das
test
decl
scas
nop
pop
or
insl
movsb
mov
sub
sbbl
add
pop
add
ljmp
inc
cmp
sbbl
mov
cmp
outsl
jg
movsb
cmc
sbb
jl
popa
fs
xor
xor
and
sarl
mov
popf
push
addr16
xor
push
inc
mov
inc
pop
icebp
mov
imul
mov
test
incl
loope
fdiv
or
into
add
mov
jecxz
movsl
jbe
lods
inc
call
mov
inc
rclb
mov
add
xor
sub
inc
daa
loopne
fdivr
lcall
out
shl
xlat
xchg
mov
or
movsb
enter
xchg
mov
sub
push
jg
jmp
fsts
xor
mov
lcall
mov
int3
inc
cmp
push
adcl
sub
push
ljmp
sub
lcall
dec
add
mov
sbb
xlat
add
and
pop
mov
in
sbbl
or
in
push
push
or
or
out
out
pushl
add
sbb
mov
cmp
call
sub
jp
rcrb
xchg
sub
mov
sbb
or
cmp
add
mov
pop
jmp
inc
adc
fdiv
xorb
jb
aaa
adc
loope
mov
insl
add
mov
xchg
dec
mov
jp
repnz
std
mov
push
pop
or
or
adc
lcall
cmpsl
lods
addb
xchg
mov
adc
dec
adc
lret
imul
inc
mov
and
sahf
addb
jl
jmp
or
decl
mulps
aam
ss
lcall
les
xor
jne
push
push
es
sbb
and
or
push
lea
cmp
loope
pushl
pop
dec
bound
js
sub
jle
or
jle
xchg
and
mov
mov
ret
fldenv
push
push
push
orb
jo
out
cmp
cli
pushl
sub
inc
cltd
out
jbe
popl
add
xchg
cmp
inc
js
ljmp
hlt
mov
rorl
stc
dec
sub
add
cmp
push
test
jo
call
push
inc
les
mov
sbb
repz
aas
inc
or
daa
nop
jecxz
xor
adc
jg
xchg
push
es
jl
adc
call
jl
adc
mov
and
lcall
aaa
dec
jp
addr16
das
push
les
push
sbb
sbbl
loop
add
mov
inc
sbb
mov
aad
and
test
mov
fmuls
ss
push
mov
xchg
cs
cld
dec
xchg
cmp
add
cmp
sbb
and
andl
sar
mov
or
iret
xchg
dec
test
loopne
xchg
push
pop
call
std
fisttps
xchg
lock
xor
rcl
push
pop
fisttpl
inc
xchg
ret
test
inc
shrl
mov
mov
dec
sub
stos
xchg
inc
adc
lcall
sub
jne,pn
clc
dec
addb
mov
sbb
enter
loop
add
mov
or
mov
add
or
mov
add
dec
call
mov
shl
subb
test
je
or
rolb
inc
pop
push
add
bswap
aam
push
push
call
and
jae
add
pushf
cwtl
scas
shll
pop
jnp
fcoml
lock
hlt
ret
jl
pusha
pusha
push
jecxz
jo
or
xchg
mov
lea
cltd
fldt
or
dec
fdiv
out
mov
enter
add
neg
es
subb
adc
cld
xlat
mov
mov
leave
sbb
cltd
mov
lock
jno
xchg
dec
decl
mov
mov
in
and
push
loop
inc
jl
inc
push
or
xchg
pop
dec
stos
outsl
mov
adc
std
lcall
mov
and
inc
mov
daa
cmp
jg
dec
cmp
jg
mov
pop
add
stos
adc
incl
in
shl
xor
xor
adc
jo
jo
stc
xor
sbb
pop
addb
inc
repz
cmp
call
and
and
or
pop
pop
push
imul
std
shrl
push
xchg
ret
movb
adc
xchg
cwtl
add
fwait
pop
sub
lods
andl
movsb
in
orb
adc
inc
or
movsl
call
or
sub
fldenv
or
pusha
dec
aam
add
sub
pop
outsl
add
pushl
jne
xchg
pusha
adc
retw
lea
cmp
call
rorl
sbb
int3
insl
test
and
popa
push
push
adc
ds
pop
lock
decl
mov
push
jae
xchg
js
push
repnz
lcall
je
inc
mov
pushl
std
fists
add
push
cmp
xlat
call
scas
lahf
out
shlb
pop
ret
pop
pop
in
popf
and
adcl
mov
jbe
lret
mov
push
xor
xchg
lcall
jno
lock
sbb
cmp
or
inc
mov
dec
pop
scas
cltd
mov
ljmp
push
adc
inc
or
js
adc
xchg
inc
insl
mov
arpl
fsubrs
mov
jmp
dec
adc
shrl
test
inc
in
or
adc
inc
jp
pop
addb
adc
mov
mov
add
jmp
ret
push
mov
popa
mov
mov
mov
add
xchg
xor
sbb
push
ljmp
aaa
mov
notb
mov
sbb
imul
aaa
scas
clc
scas
mov
push
and
add
lret
xchg
adcl
test
dec
decl
pushf
aam
bound
jp
pop
push
inc
lret
addl
pop
les
arpl
aam
sub
inc
cmpsb
insl
mov
incl
adc
mulb
aad
ds
notl
push
lea
inc
inc
jmp
lods
incl
lea
cltd
adc
ret
sbb
test
movsb
add
jecxz
xchg
cmpsb
mov
mov
lcall
lods
push
daa
inc
xor
cli
cmp
js
pushf
xorb
rorb
adc
ret
xchg
jg
jb
jmp
aad
pusha
mov
jl
add
push
jo
dec
and
push
or
jne
leave
daa
shl
mov
incl
dec
ret
mov
scas
cmpsl
ror
cmp
psubw
inc
repz
scas
and
pop
mov
mov
push
cmp
incl
mov
hlt
fwait
mov
xchg
jno
nop
sbb
ss
inc
jp
cmpsb
and
cli
popa
fs
xchg
inc
jl
js
cli
jecxz
push
or
std
jmp
enter
xchg
or
and
add
lret
sti
inc
loope
xchg
xchg
pop
mov
cld
ljmp
test
dec
movsb
cmp
mov
sbb
rorb
loopne
mov
addb
pushf
nop
xor
ja
cmp
je
jmp
sbb
xlat
hlt
lret
incb
pusha
adc
cmp
pusha
loopne
add
mov
sbb
mov
push
add
inc
inc
xchg
cmp
negl
cli
cmp
jmp
mov
pusha
cmp
fcoml
or
jne
xor
jb
pop
sbb
addr16
fmuls
xchg
sbb
sbb
sar
cmpsl
out
andb
jg
xchg
sub
jge
cmc
or
sti
sub
lods
lcall
dec
jbe
lock
aaa
std
insl
dec
loope
ja
mov
ljmp
pusha
data16
inc
ret
cmp
addb
jb
push
fldl
or
pop
pavgb
add
push
dec
outsl
hlt
adc
push
or
incl
dec
addl
jno
xchg
les
sbbb
incl
add
jno
rcrb
add
daa
jle
inc
and
sbb
mull
adc
decl
test
or
test
xlat
sbb
and
xchg
movsl
sub
daa
es
pop
push
jne
inc
jg
ljmp
mov
and
inc
in
dec
inc
mov
shrl
aaa
in
mov
ret
jmp
cmp
test
je
cmp
dec
lcall
clc
or
enter
jg
or
xchg
mov
add
inc
sbb
jg
or
pop
arpl
adc
sbb
cmp
inc
mov
pop
sub
jno
nop
sbb
lcall
and
inc
mov
lcall
xchg
xchg
jnp
jbe
repnz
sbb
lods
cmp
cmpsl
or
push
pushf
stos
pop
lock
add
enter
and
pop
rol
fildll
je
rol
jge
mov
das
add
add
jmp
mov
fucomi
sub
decl
push
jo
into
ret
xchg
mov
mov
inc
add
add
mov
int3
out
fucomip
andl
jl
sbb
or
sub
push
pop
push
sub
lcall
lahf
ret
fs
adc
loopne
aas
mov
negl
incl
pop
in
lds
or
and
sub
jb
aas
jl
sbb
clc
xchg
jo
imul
stos
das
pop
je
jo
add
xor
adc
ljmp
add
clc
iret
jae
stc
sub
mov
dec
into
adc
xor
or
decb
mov
mov
inc
into
and
ljmp
mov
pop
cltd
das
arpl
mov
mov
nop
and
rcrb
inc
sti
pop
pop
jp
adc
mov
clc
dec
xor
adc
ret
mov
out
mov
clc
aas
insb
jecxz
add
addb
ljmp
cwtl
mov
inc
sub
sub
and
xchg
sub
cmp
mov
mov
stos
ret
push
dec
mov
pop
sub
and
sahf
xchg
sbb
xor
ljmp
aas
fsub
mov
clc
adc
jnp
cmp
push
out
lcall
mov
add
cmp
es
imul
xchg
jge
mov
stc
call
popf
inc
xor
je
test
pop
jmp
popa
test
nop
jg
daa
cmp
fcompl
jae
push
je
add
jno
movsl
adc
mov
outsb
negl
jae
call
lahf
jne
test
add
sub
sbb
sbb
or
sbb
mov
add
inc
xchg
inc
in
fistl
popf
add
or
in
and
jecxz
adc
dec
xor
cs
mov
sub
xor
popa
xor
pop
aaa
mov
push
test
sbb
mov
mov
jg
cmp
mov
jo
mov
xor
aaa
out
sub
lcall
mov
nop
bound
and
fiaddl
jnp
imul
mov
mov
dec
pop
xor
je
jg
stos
out
lods
dec
bound
mov
mov
lcall
mov
or
push
daa
mov
ljmp
push
and
adc
sar
jmp
in
mov
fsubp
xorl
insb
pusha
test
jge
mov
popa
mov
push
aas
into
inc
adc
cltd
sarl
cwtl
push
sub
out
sbb
mov
call
mov
push
jmp
pop
lods
or
dec
fcmovne
jnp
shlb
pop
mov
call
mov
and
or
sbb
mov
iret
adc
mov
pop
lock
jl
add
flds
adc
mov
and
movsl
lahf
je
loopne
adc
sbb
leave
adc
sub
dec
fwait
sar
add
mov
sub
scas
insl
scas
aaa
or
fistpll
movsl
add
xor
enter
xor
dec
stc
push
cli
out
testl
adc
adc
in
mov
xchg
jo
or
mov
arpl
lahf
scas
sub
jno
mov
lods
pop
outsl
push
ljmp
pop
ret
insb
mov
cltd
sbb
mov
mov
mov
nop
ljmp
cli
pop
push
sub
adc
push
clc
lcall
mov
add
mov
sub
decb
lock
je
and
ss
out
ss
movsbl
cmpsb
xor
jg
or
push
mov
cmp
push
inc
das
xlat
xor
adc
pushl
cmp
pop
pop
add
mov
fnsave
aad
enter
ja
cwtl
aas
mov
inc
fwait
sar
mov
jnp
jnp
sbb
ret
add
sahf
enter
push
cmp
xchg
dec
test
dec
mov
fsub
adc
adc
jg
addb
cltd
mov
push
and
mov
mov
or
xor
test
and
sbb
xchg
addr16
mov
sbb
add
nop
mov
cmp
outsb
mov
hlt
lret
lcall
aaa
add
test
lret
pop
push
mov
xor
dec
push
mov
lahf
push
dec
pop
and
sub
sbb
nop
sub
dec
fs
jmp
fs
clc
jne,pn
inc
adc
cmp
mov
fwait
pop
jl
aam
mov
popa
xchg
popf
add
sbb
lcall
out
sub
ljmp
add
push
sbb
ret
or
movsb
xorb
decl
lock
cli
jnp
lea
mov
repnz
pop
shrb
pop
idivl
cs
xlat
inc
notl
mov
pop
testl
mov
sub
mov
pop
std
jg
jnp
inc
sub
mov
mov
dec
pop
filds
dec
cmp
jg
decl
sbb
sbb
shrl
or
inc
pop
mov
sbb
pushl
and
clc
xlat
shr
dec
addr16
sti
call
mov
pop
fiadds
jnp
push
test
dec
ljmp
das
fs
add
pushl
xchg
cmp
imul
xor
jg
push
cs
and
lret
dec
lock
pop
mov
inc
decl
sbb
shlb
rclb
mov
sar
fisttps
push
pop
in
or
mov
fisttpll
andl
inc
js
push
orl
jmp
xor
adc
cmp
scas
and
xor
orb
sub
push
insl
mov
jno
call
push
adc
xor
push
arpl
sbb
xlat
xchg
inc
cli
hlt
ljmp
and
push
dec
push
dec
fs
clc
bswap
sub
scas
xchg
cmpsb
hlt
fbstp
mov
mov
push
mov
call
das
push
mov
inc
fs
ds
testb
add
pusha
test
cmpsl
outsl
orb
test
push
or
jnp
or
mov
inc
mov
push
mov
mov
pusha
and
pop
leave
or
and
jmp
arpl
sub
decl
and
ret
dec
setno
pop
lret
leave
and
test
mov
pop
adc
dec
icebp
dec
inc
mov
xor
les
sbb
decl
lcall
push
pop
add
mov
sub
sub
int3
int3
or
mov
sti
mov
push
fwait
mov
cmpsb
loopne
hlt
add
leave
and
enter
stos
movsb
sbb
jp
btrl
daa
push
xor
insl
incl
cld
outsl
jmp
dec
cmp
mov
pop
xchg
outsl
dec
scas
cmpl
ljmp
fneni(8087
outsb
dec
inc
adc
out
loop
add
push
testb
inc
aam
mov
mov
pushl
add
mov
add
ljmp
sub
outsl
pop
fs
iret
mov
dec
sar
call
add
fcom
fs
lds
mov
pop
push
cmp
ljmp
lock
fidivrl
push
xor
jg
js
jl
call
ljmp
cmp
mov
fdivl
das
sar
pop
mov
aam
or
mov
ficoml
rcl
sbb
es
call
dec
repz
sub
mov
lcall
dec
xchg
lock
adc
mov
incl
fnstsw
jns
sahf
fnstcw
inc
dec
outsb
inc
xor
aad
dec
lcall
adc
push
mov
jmp
leave
insl
push
arpl
adc
test
cmc
and
xchg
xchg
jg
decl
mov
sub
and
dec
lock
sub
mov
xor
mov
mov
ret
lods
sbb
or
rcrb
scas
and
addl
sub
nop
sbb
lcall
jo
cmp
pop
xchg
jmp
testl
call
add
test
hlt
mov
inc
push
cmp
cs
push
or
leave
jmp
test
call
inc
scas
cld
adc
je
std
mov
or
or
add
xor
adc
adc
mov
out
cli
daa
push
je
aas
rolb
clc
inc
add
lcall
mov
mov
xor
jge
mov
repnz
sub
pop
mov
inc
or
dec
dec
mov
inc
decl
push
sbbl
push
xchg
mov
pusha
jmp
les
jecxz
or
push
scas
mov
mov
pop
xchg
adc
sbb
push
iret
pop
lock
mov
adc
pushl
fnsave
sbb
sti
and
je
push
adc
dec
pop
push
and
adc
incl
xor
mov
js
mov
ljmp
and
rclb
push
cwtl
cld
inc
incl
jne
into
xchg
and
and
inc
push
movsl
or
daa
push
mov
hlt
cmp
jmp
shlb
inc
leave
imul
push
jmp
stos
xor
stos
and
in
inc
mov
call
dec
mov
push
sbb
jmp
or
inc
and
cmpsb
rorl
aad
push
jbe
ret
jne
in
mov
or
andl
push
insl
inc
pop
mov
js
mov
call
outsl
mov
insl
dec
fldenv
scas
shll
outsb
jmp
fcmovb
js
cmp
leave
popa
pusha
repz
pop
mov
pop
jmp
pop
mov
lea
jno
bound
shll
ret
adc
xor
repz
fisttpl
movsb
push
jns
xchg
push
lcall
ljmp
aad
repnz
sti
push
pusha
xor
pop
pop
mov
and
add
int
out
cli
dec
or
pushf
orb
mov
filds
sti
jo
jl
jmp
push
adc
add
inc
jmp
lret
lcall
mov
and
cmp
sarl
or
or
pop
enter
cmp
dec
ret
aaa
je
lcall
and
add
ret
add
jne
jmp
sub
ds
dec
js
addr16
hlt
inc
ds
adc
fadd
ret
das
add
dec
push
sbb
rcll
les
add
rorb
inc
sub
mov
test
dec
loope
sub
sahf
mov
pop
mov
cld
inc
cli
pop
pop
loope
adc
call
cld
aaa
inc
cmp
gs
push
sbb
and
les
sub
inc
xor
je
lret
pusha
sbb
jbe
adc
hlt
mov
xor
movsl
inc
jp
add
xchg
icebp
add
nop
mov
sub
mov
and
out
test
push
mov
mov
mov
shrb
scas
push
lcall
and
ljmp
push
pop
daa
push
loopne
push
les
enter
outsb
add
jmp
sub
inc
outsb
mov
mov
jg
js
xchg
jg
mov
sbb
push
test
mov
jo
and
les
mov
cld
push
pop
dec
cmp
imul
or
pop
mov
nop
and
es
decl
gs
lret
xor
push
in
shll
mov
push
adc
inc
ja
push
testb
push
mov
bound
popa
cmp
add
sbb
jno
lock
or
jl
adc
ret
out
clc
push
sub
cltd
js
cltd
mov
xchg
dec
lock
mov
dec
mov
call
dec
jecxz
fs
out
mov
adc
mov
inc
xchg
arpl
leave
sbb
lcall
into
push
enter
push
cmp
jbe
xchg
notl
cmp
sahf
ja
hlt
movsb
push
int3
loopne
push
ds
enter
inc
xor
nop
cli
loopne
adc
sub
jg
mov
mov
ss
xor
in
cs
lods
ljmp
es
in
dec
or
push
in
nop
mov
mov
aaa
dec
clc
push
pop
push
push
dec
loopne
incl
popf
xor
sub
adc
aaa
ret
sar
movsl
scas
xchg
xor
xchg
inc
vmulps
add
mov
sbb
nop
je
and
aam
loopne
leave
movsl
xchg
and
cltd
sar
sub
and
lcall
decl
clc
leave
hlt
sbb
sub
movsl
dec
mov
decl
inc
les
jnp
dec
sbb
mov
mov
and
or
mov
pmuludq
add
out
scas
cmpb
jg
pop
dec
mov
sbb
sub
les
das
sub
cmp
mov
insl
inc
xchg
imul
out
push
xor
call
dec
orb
mov
test
inc
jl
clc
les
mov
mov
je
ret
or
imulb
sbb
or
add
decl
in
sub
movl
mov
decl
fs
ror
sbb
in
xorl
incl
addr16
loop
xlat
clc
sbb
aam
int3
cld
pop
popa
xor
xchg
inc
test
outsl
scas
leave
add
and
push
or
jge
lods
mov
into
xchg
dec
loopne
pop
fs
jle
or
popf
lret
cli
call
adc
xchg
dec
inc
and
out
rcrb
add
dec
adc
mov
out
adc
loopne
shll
xchg
ljmp
enter
imul
or
xor
push
sbb
dec
test
jmp
lahf
addr16
push
inc
outsl
lahf
mov
out
mov
mov
cmp
push
aas
inc
in
sbb
int
roll
sbb
or
fxch
pusha
cmpsl
mov
or
and
xchg
cli
fdivr
pushl
outsb
push
pop
jge
test
mov
imull
or
xchg
jl
fmuls
pop
nop
pop
rclb
andl
push
xor
pop
adc
sbb
shrb
les
call
ljmp
mov
sbb
add
jl
jl
imul
push
ss
outsl
clc
ja
aam
iret
xor
xlat
or
incl
fs
cmp
aam
aam
test
inc
push
push
pusha
int
stos
popf
and
pop
dec
loopne
movsl
into
push
or
or
dec
ja
arpl
adc
xor
cmp
jge
adc
inc
lea
or
mov
xor
push
lock
iret
movsb
incl
orl
jl
popf
mov
out
cmp
pop
inc
pop
sub
stc
sub
mov
jg
jmp
mov
add
cmp
stc
stos
xor
imul
mov
fcmovb
lret
jmp
rcl
or
pushf
sub
jmp
lock
cmp
mov
cld
pop
pcmpeqw
adcl
into
cmp
adc
push
dec
adc
add
lds
mov
daa
cmp
pushl
adc
fst
ret
add
push
subb
mov
jo
loope
or
decl
mov
insb
sub
mov
shlb
outsb
sbb
enter
mov
pop
xor
ljmp
adc
movsb
xor
mov
or
int3
adcb
adcl
mov
cld
jmp
insb
adc
jns
fidivs
sbb
mov
mov
aas
adc
ret
fiadds
shll
jecxz
dec
pop
push
data16
cmp
pop
push
movsl
jl
aaa
fidivs
or
mov
adc
mov
ljmp
sbb
pop
cmp
adc
mov
pop
shl
ljmp
push
push
sbb
and
cmpl
sbb
pop
sarb
lcall
pop
imul
sbb
bound
add
and
ret
cli
push
loopne
call
cmp
ret
sub
ljmp
out
mov
add
mov
mov
sbb
sbb
jb,pt
cvtpi2ps
incl
stos
add
mov
rcll
or
sub
pop
jbe
outsl
add
outsl
add
sub
adc
lcall
and
rcl
add
stos
sahf
adc
inc
cmpsl
pushf
stc
cltd
movsb
xchg
mov
xor
add
lcall
push
lcall
imul
push
mov
jmp
dec
loop
adc
decl
cmp
inc
jge
aas
addl
and
jo
add
xchg
cs
jg
ljmp
jmp
andb
or
push
lock
call
cmp
lds
sahf
xchg
orb
mov
inc
sub
call
adc
outsb
jecxz
lds
and
push
sbbb
inc
cmp
loop
inc
or
inc
inc
jae
cmp
repnz
push
pop
cs
sarb
cmp
movsl
or
fisttpl
jno
mov
push
std
xor
mov
jbe
jecxz
and
mov
mov
xor
xor
pushl
or
push
ss
pop
aam
mov
data16
push
arpl
push
stc
mov
outsb
ljmp
jecxz
popa
cmpsb
or
insl
dec
sub
shrb
sbb
push
add
adc
jmp
sbb
lock
sbb
ret
in
test
jg
lcall
xlat
cmc
and
push
cwtl
add
xor
xchg
or
aad
or
in
jle
pop
push
push
clc
insb
cmp
sub
lcall
pop
or
sbb
adc
adc
push
inc
or
inc
push
outsl
adc
cld
and
xchg
rolb
adc
cld
pop
clc
cmp
cmpsb
inc
ret
mov
or
jo
ss
movsb
and
gs
in
jmp
bound
decl
lods
or
inc
and
xlat
fstps
jno
adc
mov
sar
subl
fnsave
in
or
and
into
shl
lcall
inc
sub
add
sbb
push
jg
fs
clc
push
inc
jg
loopne
sbb
fld
add
push
decl
dec
lret
aaa
pop
sbb
dec
cltd
nop
lret
ret
push
call
hlt
lds
decl
push
imul
loopne
in
push
mov
adc
sub
cmpb
inc
scas
jg
repnz
mov
jp
sub
fisttps
dec
popf
sbb
sbb
nop
addr16
ss
ljmp
movups
adc
lret
cmp
and
cmp
setge
lock
jmp
adc
lcall
lret
cmc
outsl
inc
imul
inc
inc
icebp
dec
add
adc
or
push
adc
xor
orb
push
pop
into
aam
or
addr16
add
mov
push
test
fld
cmp
pop
jmp
inc
push
mov
sbb
das
push
and
incl
sbb
push
push
mov
movsl
rcl
jmp
call
call
sub
mov
orb
mov
inc
call
es
or
je
or
decl
adc
jg
into
pop
jb
mov
shlb
scas
mov
adc
decl
dec
mov
test
push
lock
cmpsb
or
addl
adc
pop
add
pop
fs
or
cmpsl
add
fisttps
call
test
push
in
orb
iret
es
or
cs
and
and
xor
int3
loop
incl
push
js
outsl
mov
fldt
adc
inc
inc
sbb
lods
xchg
sbb
lods
add
es
jns
dec
add
into
add
shll
jo
pop
xchg
mov
outsl
pop
daa
or
xor
fsubl
aaa
inc
inc
mov
mull
pop
arpl
decb
test
dec
stos
nop
xchg
add
test
cmp
movsb
push
xor
sub
jge
test
decl
rcrb
rcll
fnop
pop
cmp
ljmp
inc
sub
out
xchg
push
dec
add
xlat
andl
jg
push
lcall
clc
push
repz
inc
orb
test
adc
sub
pop
xchg
cld
jg
or
xor
dec
pop
arpl
lds
or
and
inc
or
sti
outsl
and
xor
je
cmp
pop
scas
fsubrs
jmp
test
ljmp
push
sahf
xchg
jnp
dec
mov
inc
sbb
push
gs
dec
dec
cmpsl
rolb
outsb
daa
ja
pusha
jle
shlb
data16
inc
and
mov
mov
outsl
mov
inc
cmp
jl
mov
jg
pop
add
dec
xchg
xor
adc
jp
push
pop
jge
mov
test
dec
pop
push
mov
mov
dec
jae
gs
xor
push
jmp
addr16
ficoml
inc
add
scas
decl
push
add
add
adc
jl
popl
inc
adc
inc
and
shrl
sbb
rclb
faddl
call
test
jmp
pop
xorb
mov
xorb
and
inc
and
ljmp
cmp
shrb
hlt
and
and
enter
es
out
mov
imul
add
loopne
cmp
dec
jne
mov
rcll
or
push
stos
pop
imul
sub
pop
or
insb
add
ja
aas
push
paddq
xor
scas
fcomip
aas
or
mov
int
cmpsl
adc
test
pop
idiv
loop
adc
loop
pop
arpl
or
stos
idivl
cmp
out
or
mov
jle
xlat
scas
sbb
shll
and
dec
and
pop
xor
scas
jp
push
cwtl
pop
popl
xlat
cwtl
mov
or
push
popa
xchg
push
test
xlat
subl
cmp
movl
xlat
pop
jp
xlat
test
jmp
dec
rorb
ja
xchg
xor
ret
sub
adc
jmp
adc
iret
gs
xor
pop
popf
mov
fidivrl
es
icebp
mov
mov
cld
push
mov
push
xchg
cs
inc
lahf
aaa
dec
dec
dec
aas
sbb
inc
inc
inc
mov
push
inc
je
int
hlt
cmp
cmpsb
jo
sbb
xlat
push
sbb
loop
mov
mov
dec
pusha
sahf
jns
mov
mov
xor
cmp
call
cmp
jo
sub
test
xchg
xlat
es
cld
jnp
push
sbb
lret
incl
mov
outsb
out
pop
and
push
fnstsw
das
xor
lock
pusha
loop
or
pop
out
mov
inc
loop
cmp
call
sub
add
and
pop
mov
inc
fs
xlat
pop
or
add
fwait
inc
insb
gs
into
xlat
orb
xor
mov
mov
sbb
aas
adc
incl
xchg
pop
imul
push
or
push
iret
repz
and
adc
push
cmp
xchg
or
jbe
fidivrl
sbb
incl
imul
xor
add
sbb
push
shrb
fdivl
or
test
xor
add
fcompl
sti
fnstcw
cli
pop
mulb
and
cli
ljmp
jo
pop
cld
or
dec
mov
lret
pushl
mov
push
push
mov
cmpsl
add
sub
daa
out
subl
inc
inc
shl
sbb
and
in
loopne
pop
ror
stc
and
filds
lods
js
hlt
push
fwait
push
aas
sub
hlt
jg
pushl
sub
adc
push
jg
fwait
es
or
mov
add
lcall
decl
aam
push
out
or
mov
icebp
add
sbb
sub
incl
mov
push
mov
pop
push
in
test
fcompl
ror
xorb
movsl
pop
shlb
popa
mov
cwtl
ret
lcall
and
fsubs
cmp
pop
rcll
daa
add
sbb
ret
loopne
rcrb
push
jp
std
push
sub
adc
xchg
push
adc
adc
jecxz
addb
fistpll
push
pop
sbb
xchg
cmpsl
sbb
sub
and
in
dec
adc
imul
shlb
mov
jg
pop
testb
push
stc
mov
loop
and
push
sbb
jge
imul
cmp
insb
std
push
cld
decl
add
sbb
adc
sbb
sub
std
or
cmp
push
decl
or
sub
mov
mov
inc
popa
mov
dec
pushl
add
fcoms
xlat
or
adcl
or
mov
insb
mov
sub
or
push
push
mov
pop
sub
push
mov
pop
mov
pushl
sub
dec
aaa
mov
dec
jbe
pushw
add
or
nop
inc
leave
mov
push
roll
sbb
jmp
and
sub
ljmp
pop
call
fdivrs
jae
add
dec
fsubs
mov
test
hlt
or
call
and
cmp
mov
jbe
outsl
and
or
popl
xchg
scas
cmp
call
xchg
mov
je
push
lods
sub
nop
inc
negl
ficompl
jmp
add
push
out
out
pop
cs
sbb
xor
sub
jmp
xrelease
mov
imul
das
xorl
movsl
sbb
jl
test
add
decl
push
mov
aam
inc
jae
shlb
outsl
push
fsubr
jo
pop
out
jnp
pop
push
rcll
sti
ljmp
push
cmp
mov
add
push
jo
in
xor
jo
pushf
jp
call
daa
int3
xor
push
ljmp
orl
lcall
mov
ret
scas
pusha
add
add
fstpl
pop
adc
or
out
jae
call
sub
xor
js
imul
sbb
call
xor
inc
aas
xlat
or
cmp
jmp
mov
cs
sbb
imul
sbb
js
unpcklps
ja
fildl
jmp
add
push
popa
jns
mov
fnstenv
inc
dec
loop
out
and
out
js
jb
in
inc
aas
push
xchg
adc
ja
adc
mov
mov
mov
in
decl
dec
adc
lret
idiv
add
pushf
in
mov
ljmp
movsl
repz
stos
pop
mov
or
mov
mov
scas
sbb
adc
in
decl
mov
lahf
testb
sub
push
cmpb
add
sbb
inc
addb
adc
fcomp
in
pushf
xchg
adc
push
xor
cld
push
ljmp
mov
stc
xor
cli
shlb
push
jo
faddp
sbb
call
fmull
mov
repz
inc
adc
shl
aad
xchg
mov
mov
xchg
dec
es
sbbb
add
or
pop
sbb
push
push
std
lcall
xor
enter
out
or
scas
in
xor
nop
push
add
mov
add
rol
lea
cltd
xchg
or
push
mov
in
leave
fs
add
ja
and
xor
add
clc
jg
or
into
cli
push
inc
cmp
add
adc
mov
rolb
pop
mov
lods
sbb
repnz
inc
test
push
push
inc
inc
add
push
jg
lock
addb
popf
and
or
test
dec
ds
pusha
fldl
incl
mov
andl
fisttps
or
les
fldpi
data16
jmp
bound
mov
and
and
push
fs
cmpsl
les
adc
push
inc
test
hlt
adc
sub
add
xchg
xor
or
lcall
fs
hlt
out
inc
xor
mov
outsb
mov
loopne
out
add
adc
incl
inc
insb
jmp
mov
sti
dec
inc
imul
imul
inc
shrb
mov
adc
push
mov
mov
les
dec
dec
jmp
cmp
add
rcr
clc
incl
mov
and
xchg
push
jp
dec
jns
nop
jo
cmp
xchg
outsl
clc
out
xor
add
mov
scas
mov
decl
lods
add
in
xchg
loopne
lods
pop
inc
add
and
inc
shlb
jp
frstor
push
fnop
pop
mov
add
lods
add
add
clc
ljmp
mov
or
inc
jns
add
mov
ljmp
pusha
adc
lds
add
add
sbb
mov
or
inc
nop
icebp
mov
or
and
cmpsl
js
and
dec
mov
fwait
ljmp
loopne
xchg
or
dec
jo
adc
pop
fistl
cmp
add
lcall
mov
adc
in
in
sub
inc
cmovs
adc
ljmp
sub
aam
add
in
push
xchg
addb
jnp
ss
jmp
cli
add
popa
pop
lret
mov
jge
sub
lods
test
jge
xchg
sbb
xchg
rclb
gs
incl
ret
sub
rorb
pop
cmp
xchg
xchg
and
out
aam
cs
lods
sbb
sbb
xchg
lock
es
add
idiv
ljmp
inc
mov
or
cmp
add
push
mov
cmc
enter
lcall
cmp
iret
mov
sub
leave
js
repnz
notl
sub
pop
das
idiv
mov
loopne
push
inc
clc
lock
push
xor
decl
pop
test
add
aam
test
out
or
adc
out
icebp
sbb
mov
bound
xchg
push
enter
rolb
sub
andb
and
test
sub
cli
pop
push
or
inc
jg
pop
xor
xchg
aaa
push
flds
idivl
pop
jmp
mov
cwtl
ret
xor
in
push
jp
shrl
je
inc
dec
test
lahf
inc
ljmp
pop
outsb
es
es
das
sub
incb
or
xchg
jg
mov
add
mov
mov
or
movq
mov
mov
push
jno
sub
mov
xor
pushf
test
sbb
dec
jne
shr
nop
test
inc
idivl
sub
sbb
jg
fildll
pop
pushf
pop
inc
dec
xchg
loop
xchg
and
inc
jnp
shrl
leave
in
xchg
and
imul
imull
scas
mov
push
sqrtps
push
push
push
push
pop
pop
pop
ficoml
pop
pop
pop
inc
pop
jns
fstpl
dec
dec
dec
dec
dec
dec
dec
dec
xor
vmwrite
fstp
hlt
cmp
cmp
ds
and
cmp
and
in
push
sub
sub
adc
adc
xchg
push
pop
adc
sbb
sbb
push
pop
add
or
add
add
movswl
decl
or
or
clc
lret
push
add
movsb
add
sbb
fs
xchg
mov
push
lock
bound
repnz
sbb
stos
and
sbb
orb
sub
sbb
test
mov
mov
adc
ljmp
or
cld
loopne
data16
mov
nop
xchg
adc
mov
in
and
pop
cld
add
xor
adc
jae
je
jle
lea
fdivrp
sbb
jg
mov
jg
sbb
adc
fildll
and
rorl
arpl
adc
sarb
int
adc
gs
mov
gs
cmc
mov
sahf
push
out
and
add
pushl
int
jl
jo
mov
mov
outsl
sbb
push
inc
sbb
mov
add
sbb
cli
call
or
cwtl
pop
cmpl
cld
call
xor
inc
les
sbb
mov
adc
and
call
jnp
push
mov
or
add
int3
xchg
nop
in
std
cld
xor
fsubrl
insb
sub
jnp
idivb
sti
unpcklps
or
inc
jns
adc
mov
or
pushl
or
fistpl
inc
imul
adc
xor
es
pop
xor
aas
testl
pop
adc
pop
or
jmp
jb
or
stc
sbb
mov
mov
rdpmc
or
dec
jl
jp
mov
xor
sbb
je
adc
sub
pop
in
sub
sbb
inc
outsl
decl
mulb
ljmp
push
mov
fisubl
negl
mov
cwtl
push
mov
push
ljmp
mov
and
sbb
andps
ja
incl
roll
dec
pop
leave
sbb
sub
cmp
sbbb
push
sbb
xor
cmpl
xor
incl
insb
add
ds
mov
xchg
sub
psubw
xorb
push
add
jo
push
ljmp
out
add
mov
dec
jecxz
xor
insb
aaa
mov
dec
mov
mov
incl
and
jl
int3
add
pop
in
mov
mov
inc
xorl
push
add
call
jno
and
push
adc
mov
sahf
idiv
call
adc
call
sub
inc
add
mov
add
or
repnz
mov
sbb
pushl
std
les
cmp
sarb
mov
jo
sbb
sbb
mov
ds
lcall
rep
push
and
cmp
xchg
jns
pop
jmp
add
adc
movsb
or
push
xor
push
mov
les
push
mov
sbb
cli
pop
and
data16
and
loopne
daa
in
in
jg
inc
lods
pop
repnz
pushf
and
jg
pop
cli
mov
icebp
add
mov
push
shr
ret
addb
pushl
xchg
push
sub
aas
int3
test
pop
lsl
push
shlb
call
and
or
add
push
cmp
bound
sbb
sub
mov
mov
out
ficoms
add
lock
clc
ss
pop
jbe
add
sub
fildl
ss
push
xor
add
hlt
mov
sbb
pop
iret
subb
fadds
sub
pop
ret
jo
mov
scas
or
std
ljmp
insb
mov
xor
cmp
dec
dec
pop
xchg
xor
and
imul
mov
pop
lcall
cwtl
or
dec
dec
and
std
add
xor
int
adc
sbb
fsub
xlat
add
mov
loope
mov
push
add
mov
mov
push
insb
filds
adc
rcrl
or
or
outsl
dec
arpl
add
ljmp
cmp
aad
push
inc
pushf
sti
push
xchg
popa
cmp
add
cli
jmp
mov
push
lret
in
cmpsl
adc
push
mov
push
xchg
ljmp
out
or
pop
dec
sbb
lock
mov
call
inc
fcoml
pop
xchg
pusha
lcall
sbb
sub
add
xchg
sahf
add
push
das
lcall
movsl
mov
pop
sarl
rcrb
pop
pop
push
in
inc
mov
rclb
pop
inc
jle
scas
das
lods
add
dec
sub
dec
testl
push
mov
in
in
sti
xchg
in
pop
dec
decb
pop
das
test
fnstsw
pop
subb
jbe
ljmp
jle
insb
pop
call
inc
push
cmpsl
dec
clc
pop
orl
cmp
adcb
and
add
cmp
sbb
cmp
int3
rcr
fdivrs
cmpsb
jo
and
or
sub
fisubl
pushl
sub
les
dec
pop
aam
or
mov
hlt
xor
fstps
adcb
add
push
push
sub
mov
call
dec
fstpt
mov
fistpl
push
push
clc
jp
movl
pushl
std
push
jl
mov
xchg
fs
pushf
cvtdq2ps
fidivrl
fcomip
pop
hlt
bswap
mov
movb
mov
add
decl
stos
cmc
or
testl
out
add
mov
popa
in
insl
jg
clc
jbe
fmuls
xchg
xchg
cwtl
sub
rcl
outsl
add
sub
hlt
push
fstp
inc
pop
bound
push
or
dec
cmc
jo
pop
add
add
xchg
loopne
pop
adc
mov
lcall
cmp
inc
push
out
push
lahf
pop
pop
pusha
fs
gs
push
pusha
out
enter
mov
shl
jmp
push
mov
push
arpl
imul
xchg
jbe
lock
sbb
or
sub
cmp
jns
xbegin
jg
mov
clc
or
insl
rolb
and
pop
in
out
incl
cwtl
xchg
int
enter
aam
pop
jg
mov
sbb
subb
fadd
sbbl
jbe
notl
push
xchg
mov
sar
xorl
int3
xor
imul
test
xchg
mov
scas
nop
adc
xchg
sub
jg
add
rcrl
or
or
push
and
loopne
daa
nop
jg
or
stos
jle
jbe
fcompl
cmp
xchg
xchg
pushf
fcomps
ret
xorl
lcall
add
out
in
lcall
push
jl
aaa
or
out
idiv
jg
popf
xchg
push
mov
rcrb
cmpsl
outsb
test
mov
or
push
sub
xchg
scas
decl
cmp
ror
ss
sub
and
sub
mov
lcall
mov
adc
dec
pop
dec
subl
ss
fistpll
sub
js
mov
xor
adc
jle
mov
mov
mov
icebp
lahf
ret
push
mov
pushf
mov
add
cli
jmp
push
xor
pop
ret
fbstp
add
bswap
push
fists
pop
scas
mov
ljmp
aam
add
les
sbb
or
je
sbb
adc
pushl
clc
add
aaa
movsl
mov
rcl
inc
cmp
in
and
dec
or
pushl
cli
jp
test
xor
push
dec
or
ja
ljmp
mov
mov
inc
incl
sbb
sub
or
scas
test
mov
cmc
std
movsl
push
or
push
xor
icebp
push
cld
push
ret
fiadds
adc
push
es
aam
dec
shlb
lcall
lret
data16
lcall
cmc
cmp
icebp
xor
aam
and
sub
fwait
das
and
loopne
das
adc
es
incl
cld
call
mov
mov
adc
jb
and
mov
pop
lahf
sbb
push
sarb
fcomip
stos
outsl
push
cld
and
adc
in
pop
jmp
adc
add
std
xlat
cmp
rorb
decl
mov
mov
xlat
lds
clc
imul
xchg
rorl
jle
fst
cld
and
jp
xor
in
jmp
roll
and
aam
sub
mov
test
mov
incl
push
mov
dec
in
jl
fildll
mov
clc
pop
out
in
movsb
jno
jg
call
movsl
jmp
outsl
iret
fs
adc
ret
incl
sub
adc
xlat
mov
and
sbbb
lods
pop
fistl
dec
pushl
xchg
imul
insb
in
push
clc
push
push
loope
popl
arpl
jnp
jle
push
popa
adc
mov
pushl
dec
xor
xchg
mov
ja
sarb
fcomip
jg
push
imul
scas
push
dec
in
imul
jne
mov
gs
ljmp
push
jnp,pn
ficompl
es
pop
popa
scas
xchg
add
cmp
mov
pusha
dec
jecxz
add
or
cmpsl
jl
les
pop
pop
cmp
pushl
jne
lds
inc
xor
jae
sub
clc
push
scas
iret
push
ret
popf
jno
mov
lcall
and
pop
bts
push
imul
js
or
ljmp
dec
push
popa
sbb
adc
inc
sti
inc
pushl
mov
push
inc
sahf
mov
sbb
scas
jo
push
and
lock
nop
cmp
or
stos
roll
jne
mulps
dec
je
inc
xchg
out
pusha
pop
cmp
mov
orl
push
jecxz
or
or
outsb
or
decl
jp
or
pop
dec
popl
jp
sahf
push
jne
je
movsb
push
ret
fdivr
incl
or
arpl
sbb
mulb
sub
popa
jg
sbb
stos
or
jnp
inc
push
mov
aam
incl
or
xor
mov
adc
push
je
aaa
adc
sbb
fidivs
decl
outsl
inc
inc
or
mov
xorb
push
daa
jne
loope
ss
daa
jb
fildll
daa
xorb
pop
jle
aaa
inc
out
push
xor
decl
insb
push
cmp
or
or
push
mov
sbb
imul
ret
es
sub
movsl
pop
push
push
push
pop
inc
insl
cmpsl
sub
xorb
shrb
ret
push
add
xor
jp
test
cs
lcall
cltd
pop
or
mov
inc
cmp
sbb
pop
out
test
dec
testl
sub
pop
sahf
push
scas
inc
sub
push
jnp
ds
cmp
out
nop
rcrb
pop
stos
dec
push
out
sbb
or
inc
lahf
mov
ss
cli
cs
push
call
mov
dec
add
jl
pop
mov
or
out
jecxz
adc
inc
inc
xor
xor
decl
xor
call
cmp
ja
movl
pop
mov
pop
inc
cs
dec
dec
or
mov
lcall
push
xor
dec
addr16
inc
imull
dec
sti
scas
push
addr16
ret
mov
push
xor
sbb
lcall
sbb
loop
imul
push
je
adc
loop
repz
inc
push
add
call
xchg
out
jle
adc
dec
sub
pop
xchg
dec
scas
push
mov
bound
jecxz
mov
or
fiaddl
pop
lea
mov
xor
icebp
jmp
jge
dec
push
ds
cmp
int3
shll
dec
push
mov
mov
fisttps
mov
cmpsb
mov
clc
or
out
es
es
imul
cwtl
adc
lea
jecxz
mov
and
iret
or
add
inc
lahf
xchg
jle
sar
loop
nop
mov
or
repz
or
jmp
incl
mov
mov
xchg
mov
or
xchg
int
xchg
and
and
lahf
aaa
pop
adcl
nop
mov
mov
into
sbb
adc
bound
jg
daa
mov
lods
test
sbb
mov
lea
adc
subb
ret
sbb
ljmp
jecxz
imul
pop
mov
adc
dec
out
sahf
mov
and
lods
add
adc
js
push
mov
incl
and
ret
mov
and
dec
jbe
fistl
xor
sbb
andl
shlb
sbb
pushl
and
sbb
adc
and
push
mov
lea
push
fisttpll
dec
imul
or
call
fcom
or
mov
pushl
cmp
addb
jge
fsubrs
cmp
jae
xchg
jmp
dec
cld
xlat
mov
loopne
and
sub
outsl
clc
jg
mov
sub
mov
mov
push
lea
fstl
or
mov
pusha
lods
pop
notl
xchg
decl
fdivp
add
sbb
sub
lods
xor
dec
sbb
inc
in
xchg
or
jae
cltd
pop
repz
sbb
mov
or
sbb
adc
lret
fimuls
sub
lcall
mov
sbb
or
or
mov
adc
ljmp
dec
call
and
dec
mov
mov
and
mov
pusha
xchg
mov
cmc
mov
pop
ud0
fucomi
insb
or
mov
jp
inc
clc
mov
mov
cmp
sbb
sahf
inc
cmp
pop
arpl
cwtl
insb
mov
das
or
sub
fbld
jl
sub
xchg
mov
jmp
ja
out
add
cmc
mov
loopne
push
shlb
decl
mov
and
fstl
inc
cmp
add
or
adcl
mov
dec
mov
sbb
call
xchg
scas
add
mov
inc
lret
out
pushf
mov
jecxz
mov
shl
xor
sub
arpl
pop
cli
push
arpl
push
dec
insl
sarb
push
imul
pop
pop
dec
ds
lcall
cmp
xor
jg
decl
ret
loopne
xchg
xchg
jge
and
shrb
sbb
xor
lods
xor
stos
lcall
leave
inc
sub
cs
in
jp
xor
or
incl
das
mov
inc
addl
test
cmpsb
jg
push
sbb
xchg
mov
sbb
inc
pusha
shr
mov
push
jo
mov
adc
and
mov
xor
xchg
mov
xchg
mov
xchg
out
mov
leave
insb
xor
out
jg
push
enter
fbld
decl
inc
repnz
sub
sbb
add
push
movsb
dec
hlt
xchg
addr16
shlb
lock
xor
xor
and
and
push
mov
add
add
and
test
fs
pop
repnz
inc
lock
icebp
sub
mov
push
daa
jbe
mov
clc
rcrb
in
js
mov
fstps
or
test
test
cltd
lea
daa
js
mov
ljmp
add
aas
jp
scas
test
mov
sub
in
dec
add
fwait
and
adc
in
mov
cmpl
dec
sub
aas
and
sbb
dec
push
in
pop
inc
loope
ss
sub
push
aaa
ja
das
push
cmp
ljmp
enter
xchg
cwtl
push
movb
add
repnz
adc
aas
sub
mov
out
mov
dec
in
hlt
out
cmp
cmp
add
and
stos
addr16
jg
ljmp
dec
mov
sub
or
mov
fwait
xor
fadds
xor
daa
xchg
std
ljmp
rorl
fs
sub
push
sub
cmp
repz
fisttpl
das
ljmp
pusha
sub
pop
jle
xor
add
adc
pop
and
in
inc
sub
scas
cli
lcall
insl
xchg
pop
or
add
mov
pop
lcall
repnz
mov
cltd
data16
inc
and
add
pop
js
shlb
nop
add
and
adc
lea
incl
ds
or
pop
sbb
xchg
sahf
popf
add
adc
mov
call
lock
pop
fwait
js
in
hlt
push
subb
cld
outsb
incl
mov
xchg
cmp
into
pop
jo
dec
mov
lods
cwtl
adc
faddl
add
pushl
xor
xor
xchg
fstpl
inc
mov
outsb
xchg
lock
ret
lods
or
xchg
cld
lcall
js
xchg
lahf
xchg
sbb
int3
sub
adc
loop
inc
mov
pusha
cmpsb
sbb
add
and
decl
imul
push
inc
and
mov
movsb
aam
scas
lods
test
in
push
adc
les
rorb
jge
shll
jle
scas
lock
hlt
sbb
jg
add
sbb
out
out
push
jno
decl
sub
or
or
xor
ja
push
push
or
fisttps
and
or
sub
decb
inc
xchg
push
imul
xorb
push
arpl
js
imul
fmuls
cmp
fmul
mov
sub
xchg
testb
lcall
dec
sbb
cmp
iret
and
out
push
adc
nop
fs
aas
add
ljmp
clc
aas
nop
push
pop
das
mov
andl
or
push
cmp
dec
push
insl
jg
rolb
inc
mov
jmp
jle
pop
incl
sbb
jmp
jo
push
push
pushl
inc
cmpsl
add
sbb
call
or
vmulsd
adc
pushl
xchg
xor
mov
ret
scas
jo,pt
fnstcw
add
shl
push
aam
adc
test
or
inc
data16
dec
push
jge
add
mov
adc
xor
sbb
mov
popf
push
rcrl
insl
pushl
mov
sbb
push
fsubl
and
push
push
pop
pop
or
stc
outsl
add
mov
aas
divl
and
mov
mov
add
shll
mov
addr16
pop
cmpsl
mov
xor
decl
jmp
sbb
push
test
aam
rolb
jb
cmp
aas
iret
ljmp
pushf
fadd
std
add
add
insb
imul
inc
xor
pop
jae
push
adc
lret
fildll
pop
jb
mov
cmp
ja
or
dec
xor
push
or
push
cld
adc
lret
xor
cmp
test
test
add
ja
inc
mov
cwtl
decl
into
xor
or
call
pop
xor
adc
decl
or
sbb
les
pop
cmp
add
int
add
jmp
outsw
fadds
imul
pushf
not
and
jg
stc
or
ret
test
mov
ss
mov
mov
decl
push
cltd
push
outsl
push
test
mov
mov
fldl
xor
mov
das
add
rcll
push
hlt
arpl
sub
inc
loopne
jg
sbb
js
scas
or
fldt
inc
adc
pop
push
pushl
out
dec
ljmp
lret
imul
push
adc
add
rorb
lcall
push
add
or
or
gs
sti
daa
sub
lcall
dec
lret
pop
js
test
lahf
pop
mov
sbb
es
or
sbbb
jmp
hlt
mov
sub
out
mov
adc
ret
pop
aad
cwtl
mov
movsl
pushf
inc
movsb
dec
xor
das
int3
sub
add
idivb
jno
cmp
add
repnz
add
jnp
or
and
ljmp
add
das
cld
mov
loopne
xor
cmpsl
notb
jg
mov
jl
add
outsb
push
in
stc
xchg
cmp
sub
push
jne
push
dec
lods
push
cld
ljmp
cli
xchg
fbld
mov
mov
fdivrs
push
shlb
push
add
jg
mov
fisubs
lea
push
jg
inc
dec
cmp
xchg
test
rcr
idiv
fistpll
orl
test
stos
je
int3
or
mov
jp
push
pop
es
cltd
hlt
adc
dec
out
sub
jle
push
jmp
push
loopne
push
push
int3
mov
pop
mov
in
add
outsb
mov
bound
or
add
cmc
lret
aaa
cmp
imul
in
sbbl
hlt
inc
movsl
test
imul
cmp
cld
call
cmpsl
popf
icebp
in
lock
out
test
pop
arpl
lcall
or
mov
or
adc
test
mov
inc
jle
cmp
imul
scas
shrb
lret
sbb
and
fmull
push
out
inc
dec
add
std
pushl
loope
add
in
pop
ret
cmp
dec
test
inc
lock
jg
bound
mov
and
sub
dec
inc
pushf
push
cmp
jg
loopne
fs
loop
xchg
sbb
cmp
add
sbb
pushf
adc
add
add
rcll
loopne
cwtl
and
and
aas
outsb
sti
push
rolb
push
and
nop
lock
pop
push
cmp
es
lcall
and
adc
pop
inc
xchg
or
sub
fidivrl
mov
fsubl
adc
push
sub
dec
popa
imul
jmp
jns
pop
insl
adc
cld
in
ret
mov
pusha
rcl
mov
testb
lcall
mov
push
jp
and
pushw
lds
jecxz
push
mov
movsl
xor
shrb
repz
mov
decl
rcll
loopne
das
or
xchg
sub
dec
call
cld
popa
cmp
notb
je
ret
ficompl
push
mov
les
pop
filds
lods
add
mov
dec
lcall
add
or
add
dec
sub
test
adc
pop
movb
imul
cmp
adc
bound
dec
aam
cmp
mov
into
mov
lcall
jo
cmpsl
pop
pop
pop
push
das
cli
jg
or
jge
insb
sbb
adc
mov
pop
js
clc
lea
adc
fmuls
mov
mov
and
dec
dec
mov
aam
call
add
inc
pusha
mov
adc
mov
icebp
cmpsl
add
sbb
aad
mov
ljmp
and
jmp
sub
push
cmc
cmp
lods
adc
adc
push
stos
and
push
mov
lea
cld
pop
cmp
loopne
andl
sbb
or
or
cmp
hlt
mov
incl
add
jne
ds
int
gs
push
cmp
out
movzwl
lea
movsb
in
push
push
pop
push
cmp
mov
pop
cs
jmp
addr16
fsubr
dec
pop
call
data16
insb
sub
push
cs
out
icebp
push
and
and
dec
outsl
cmp
xor
cli
scas
stc
push
shlb
clc
popa
ds
push
aas
shlb
pop
fistps
sarb
das
outsb
pop
sbb
test
jmp
or
iret
mov
int
mov
or
pushf
cld
rclb
int
inc
adc
cmp
pop
push
push
pop
clc
inc
add
jge
movsl
fstpt
loop
xchg
inc
aas
and
and
ljmp
inc
mov
dec
mov
or
add
bound
xchg
ljmp
sbb
xor
sbb
sub
cmp
xor
mov
ljmp
sti
and
loopne
call
dec
push
rorb
fs
mov
ljmp
push
push
rclb
pop
insl
bound
sti
and
mov
and
shr
inc
push
outsl
push
dec
aam
inc
testb
shll
scas
cli
decl
in
out
in
shrl
adc
mov
into
xor
test
vpmacssdqh
mov
or
insl
or
xchg
cmpl
inc
ret
lock
jb
push
sub
pop
mov
lds
hlt
jno
aas
jecxz
stos
mov
scas
lock
ljmp
cmp
add
jne
ljmp
out
or
sbb
mov
pop
push
ljmp
add
add
dec
mov
pusha
sub
lcall
inc
pop
and
sub
enter
add
mov
mov
mov
dec
pushl
insl
dec
pop
cmp
mov
mov
inc
dec
xchg
cmp
or
add
pop
incl
fcompl
lods
cmc
or
pop
pusha
jne
ss
add
mov
in
mov
std
mov
clc
sub
clc
out
sarl
adc
cmpsb
aaa
insb
loopne
imul
or
ret
mov
loope
sbb
xor
out
adc
pop
stos
cwtl
les
xchg
mov
pushf
jecxz
dec
inc
gs
mov
or
cmpsb
push
push
add
fwait
popa
loop
call
mov
sbb
add
call
and
adc
or
push
test
dec
pop
mov
sbb
scas
cmp
xchg
jo
or
in
inc
sub
daa
or
les
mov
insb
das
ds
sahf
cmpsl
pushl
cld
ljmp
push
sub
inc
or
or
adc
outsb
mov
mov
add
pushl
jg
or
cmp
jbe
xchg
mov
dec
fcomps
push
jno
fisubl
in
je
outsl
dec
jg
add
cmp
jnp
roll
pop
cmc
fwait
adc
ret
xor
mov
jno
add
pushl
jmp
ds
jo
fnsave
adc
cmc
mov
stos
pop
pop
roll
fs
decl
sbb
movsb
xor
mov
jo
mov
sbb
int3
jbe
nop
pop
js
push
push
xchg
inc
loopne
mov
jecxz
inc
xor
sub
add
les
ret
call
xchg
divb
shlb
jge
inc
in
popf
cmp
adc
mov
mov
jmp
pushl
insb
adc
mov
mov
pop
cs
mov
fnstsw
adc
xor
push
jmp
imul
or
aas
dec
mov
or
nop
add
aam
insb
inc
cmc
cmp
lock
ret
test
adc
bound
roll
cmp
add
pushf
ret
mov
dec
or
inc
mov
js
dec
and
and
int
call
adc
cld
pop
pop
cld
jmp
bound
push
loop
mov
jb
push
jmp
jmp
les
cmp
fcmovnu
lea
push
or
mov
sub
cmp
push
sub
out
mov
ljmp
adc
adcl
addr16
mov
pop
ret
and
sub
mov
sub
and
insb
imul
jg
mov
mov
mov
pop
insb
inc
or
or
insb
push
adc
push
or
inc
pusha
mov
cmc
dec
mov
inc
lods
and
arpl
mulb
inc
sub
gs
lcall
adc
movsl
dec
cmp
popa
sub
ljmp
inc
sahf
or
sbb
push
push
pop
mov
nop
fcomip
repz
daa
decl
and
out
sub
daa
loope
and
mov
inc
mov
sbb
cs
pop
pop
imul
jmp
enter
xchg
test
mov
xchg
xchg
test
repz
inc
mov
hlt
sbb
or
or
lahf
push
xchg
loopne
add
pushl
or
cld
movsb
cmc
mov
cmpsl
testb
leave
roll
call
mov
push
xor
int3
ret
repnz
pusha
addr16
jmp
lcall
int3
orb
mov
in
mov
movsl
jmp
ret
call
sbb
sub
fcoml
lea
pushl
imul
fs
pop
push
add
lock
lock
lods
or
std
incl
xor
fidivl
mov
xchg
lods
loopne
leave
sarl
fstpt
push
les
shr
mov
push
cmp
mov
mov
mov
xchg
icebp
lsl
movsb
xor
jg
xchg
dec
hlt
lods
sbb
in
xchg
cmp
insb
jae
sarl
add
loopne
xor
pop
push
fcoml
or
jle
cwtl
adcl
cmp
aas
push
test
incl
adcl
adc
arpl
pop
add
iret
call
aaa
pop
mov
or
cld
pop
add
dec
dec
jmp
sarl
insb
sbb
das
adc
cmp
nop
mov
push
push
lcall
adc
ret
sub
das
in
cmpsb
test
cmp
add
ljmp
aad
nop
dec
test
adcl
push
and
into
sbb
xor
mov
or
push
xor
dec
imul
adc
dec
sbb
int3
decl
inc
sbb
pop
stc
mov
dec
in
mov
sub
adc
incl
jmp
xchg
mov
mov
push
cmp
dec
dec
or
push
mov
decl
and
sbb
dec
xor
add
cmp
sbb
sub
cmp
mov
add
lahf
xchg
fldcw
lods
pusha
and
lret
mov
out
cmp
adc
inc
push
sub
push
and
insl
arpl
or
insl
cli
mov
pop
adc
sbb
xor
dec
and
ljmp
push
aas
sbb
mov
loope
scas
add
jecxz
mov
imulb
lcall
mov
inc
imul
in
pop
pusha
dec
dec
cmovb
or
cmp
mov
lcall
cmp
push
and
int3
adc
daa
pusha
stos
nop
push
xchg
dec
cmp
in
push
push
add
adc
add
test
pop
push
test
pop
add
sub
mov
add
pop
adc
mov
pop
sub
xadd
jg
pop
pushf
sub
xor
test
jb
dec
out
sbb
cld
adc
inc
rclb
stc
dec
add
pushl
add
sub
add
push
lret
cwtl
push
dec
pushl
repnz
push
int
fwait
scas
pushl
data16
fdivs
sbb
cltd
bound
fcomps
fwait
add
sub
inc
lock
js
scas
xor
or
dec
jne
push
hlt
daa
movsl
xor
loope
add
xchg
adc
adc
icebp
lcall
xor
cltd
out
mov
xchg
cld
cmp
sub
inc
mov
lods
adc
jg
les
outsb
das
shlb
dec
mov
orl
xlat
jg
add
shrb
xor
cmp
sub
arpl
cmp
dec
ljmp
push
addl
push
cmp
add
sbb
pop
cmp
add
adc
bound
mov
push
inc
out
int3
mov
jg
sbb
push
or
ret
ds
push
cld
ljmp
mov
pop
sbb
movsl
inc
adc
stc
jo
insl
push
aam
xchg
push
push
jne
movsb
sbb
cmp
lret
pop
and
jne
pusha
pop
adc
incl
rcll
xor
adc
daa
mov
or
mov
sub
mov
push
mov
mov
xchg
out
push
inc
daa
inc
or
cmp
inc
dec
dec
cli
push
mov
imul
pop
js
xlat
add
test
lret
pusha
cmp
int3
add
fcomip
fsubr
gs
addr16
or
sub
cmp
mov
inc
loop
mov
les
sub
sbb
sbb
outsb
lea
movsbl
aaa
pop
call
dec
cmp
mov
mov
and
je
or
pop
sar
incl
filds
dec
add
or
pop
adc
push
pop
mov
mov
xchg
dec
mov
in
xor
in
pop
adc
sar
js
call
sub
leave
lods
pusha
scas
sub
add
xchg
pop
xor
mov
ss
das
adc
add
jmp
mov
dec
cwtl
mov
xchg
or
push
jnp
inc
fadd
dec
xchg
or
cmp
and
call
cld
aaa
in
add
dec
lret
cmp
fldl
sbb
adc
loope
cmc
fdivp
pop
icebp
scas
cmp
rcrl
ja
clc
imul
and
sub
adc
add
adc
lcall
ljmp
push
push
pop
lea
idiv
daa
or
mov
pushf
dec
adc
mov
addr16
push
jp
dec
hlt
xor
addr16
lcall
cmp
and
test
mov
xor
hlt
jnp
pusha
shlb
add
jg
cli
fsubrs
and
push
loop
and
xchg
adc
mov
mov
mov
cmp
or
jo
pop
ret
and
xor
push
lcall
jno
cli
cmpb
jg
popa
js
bound
push
js
ja
mov
dec
inc
and
jmp
cmp
out
cwtl
sbb
jmp
push
sbb
or
xor
jns
jnp,pt
mov
or
sub
pop
sar
jg
stos
mov
repnz
pop
push
mov
jl
inc
and
negb
les
jo
or
sbb
std
or
decl
loopne
das
and
sub
jg
sbb
jbe
adc
mov
push
out
push
add
and
mov
fs
sahf
hlt
push
fldl
xchg
pop
xor
cld
clc
cwtl
loopne
stos
xchg
inc
iret
mov
add
arpl
adc
xchg
mov
loopne
mov
and
jmp
or
sar
decl
loope
cld
pop
loopne
xlat
sub
addps
iret
push
fidivs
popa
ret
mov
pop
shlb
sahf
jg
add
add
aas
testb
mov
jmp
push
pop
lods
movsb
lock
in
scas
fs
je
out
mov
sub
in
and
fistps
iret
add
push
sub
and
cld
in
ljmp
pop
andl
push
ja
xchg
bound
or
pop
repnz
call
or
dec
lcall
or
and
lahf
shrl
pop
call
push
or
adc
push
mov
xchg
mov
sub
inc
lcall
ljmp
mov
and
mov
mov
fnstenv
popf
xchg
ss
decl
add
or
mov
pop
pushf
ja
lcall
iret
adc
inc
in
adc
add
and
stc
arpl
or
and
or
sti
cmpsl
or
mov
push
and
and
setns
outsb
sbb
dec
aaa
into
cmp
pop
cmp
inc
inc
sub
call
jnp
dec
push
sub
mov
jmp
popa
insl
stc
sbb
lds
popa
cmp
add
sub
movsb
adc
test
adc
cmp
and
rcrl
pop
shlb
xchg
fsubrs
repz
pusha
bound
in
or
push
mov
pop
jb
and
fcomps
stos
jbe
stos
cmp
mov
jae
pusha
and
fldt
decl
adc
in
inc
cmpsb
xchg
arpl
nop
out
adc
mov
insb
dec
inc
mov
rcrb
and
dec
xchg
je
stos
or
sbb
cmp
xor
xor
dec
cwtl
outsb
outsl
adc
jecxz
push
add
sti
jmp
xor
mov
mov
iret
inc
addr16
xchg
pop
popa
dec
adc
jnp
and
dec
inc
pop
rorl
pop
popa
mov
sbbb
inc
cmpsb
lret
shll
mov
jne
jecxz
out
clc
dec
lds
pop
sub
sbb
push
popf
xchg
xor
mov
pusha
lcall
imul
in
or
jmp
push
decl
test
jge
aas
test
mov
add
test
imul
xchg
incl
dec
push
das
or
popa
mov
pop
arpl
mov
mov
cmp
ret
jle
or
push
dec
daa
jg
pop
push
xor
movsl
and
movsb
ja
in
or
mov
push
or
push
push
xor
cltd
nop
sbb
dec
or
popa
and
or
lea
fadds
mov
inc
sbb
jmp
mov
push
mov
popa
jo
mov
mov
decl
in
sub
jl
mov
inc
cmp
lahf
js
sbb
inc
mov
adc
jne
scas
aaa
std
ds
gs
sub
push
daa
les
mov
ds
jg
je
loopne
push
in
inc
adc
pusha
sbb
pop
lock
ret
cmpl
mov
lret
cmp
cmp
inc
data16
out
push
rolb
outsl
cli
in
call
ret
dec
enter
sbbl
inc
fs
movb
inc
or
mov
cmp
pop
xchg
or
mov
call
or
imul
std
mov
dec
cld
test
adc
fidivrs
decl
pusha
jecxz
scas
int
lcall
and
dec
rorl
subl
cld
call
clc
hlt
nop
lea
js
jecxz
mov
call
lock
shr
les
mov
inc
adc
icebp
add
lret
push
call
ljmp
push
in
ret
cmp
out
into
jmp
stos
rorb
bnd
pop
fimull
bound
in
lea
jbe
dec
cld
repz
lcall
xchg
or
inc
dec
cmpsl
xchg
ljmp
dec
adc
movsl
pushl
jns
pop
adc
inc
arpl
xor
shrl
jnp
js
lods
lea
push
lods
add
or
mov
lods
lods
cmp
sbb
dec
hlt
arpl
stc
sub
inc
mov
mov
icebp
movsb
cmp
lds
add
pop
loopne
fcomip
fists
sub
js
mov
addr16
addr16
lret
xlat
push
mov
ja
mov
dec
divps
jno
data16
pusha
fnstsw
mov
pop
mov
sub
sbb
fidivs
pop
or
or
subb
adc
dec
shl
sbb
xchg
scas
sbbb
lcall
fwait
jp
xor
cmp
fisubl
jmp
aam
pop
push
mov
ds
adc
jecxz
mov
paddw
jg
aaa
inc
aaa
in
and
pop
loope
cmp
adc
adc
rorb
test
jg
or
push
out
xchg
push
enter
dec
hlt
add
call
gs
cmpl
mov
js
incl
pushf
ret
icebp
test
inc
and
push
mov
inc
cwtl
clc
pop
std
decl
das
clc
mov
mov
push
loopne
jle
xor
outsl
pusha
xor
jge
shrb
adc
sub
out
and
push
xchg
dec
sbb
and
mov
add
push
mov
push
cltd
or
shl
jo
push
cmp
das
jmp
jle
jg
std
ljmp
into
adc
es
xor
and
rolb
gs
xchg
inc
or
in
dec
subb
clc
inc
fucom
es
lds
push
dec
iret
addr16
decl
pop
movsl
mov
cli
xor
sbbl
xchg
loope
out
aad
rorb
mov
pop
mov
les
add
inc
or
or
call
push
icebp
orl
ret
push
test
ret
outsb
ljmp
fisubrs
adc
and
repnz
sub
pop
push
imul
push
sub
adc
add
test
imul
xchg
stos
xor
lock
push
cmp
mov
add
cld
xchg
nop
ljmp
dec
stc
imul
xlat
pushf
ret
push
addr16
movsb
xor
addl
test
test
inc
add
mov
ss
mov
fistps
into
inc
jo
lcall
faddl
fmul
dec
sbb
push
add
lcall
stos
pop
insl
mov
fsub
push
xchg
test
inc
test
mov
lcall
xchg
sub
or
or
lahf
or
add
xor
fcomps
inc
xor
loopne
fdivrs
xchg
inc
ds
xlat
imul
insb
add
and
das
shrb
push
inc
push
and
adc
outsl
and
rol
decl
fs
adcb
imul
aam
inc
xchg
movsb
rolb
out
lcall
mov
call
fsubrl
xor
imul
xorl
pop
roll
sub
lcall
cmp
aaa
roll
cwtl
xchg
subb
aad
xchg
popf
or
iret
pop
mov
push
mov
push
or
add
pushl
dec
cli
fisubrl
xor
dec
rcl
dec
push
dec
dec
mov
dec
adc
scas
adc
out
stos
sub
push
daa
call
xchg
adc
xchg
sbb
adc
pop
call
pop
pusha
aas
in
mov
push
xor
mov
xchg
mov
jl
icebp
jmp
xchg
insl
arpl
xor
pop
pushl
inc
pop
sar
gs
in
inc
test
adc
add
lcall
call
dec
jo
inc
sub
pop
scas
push
aaa
fwait
rcrl
sbbb
pop
dec
lret
dec
lock
pop
popa
cs
push
mov
mov
mov
push
jns
sub
call
pop
cmp
dec
test
xchg
push
sbb
pushl
dec
ljmp
mov
lea
fstps
ret
mov
jbe
movsl
pushl
les
cmpl
inc
insb
dec
xor
andl
movsl
sbb
imul
lock
rolb
sar
incl
adc
mov
popf
adc
sti
scas
mov
push
and
lds
cmpl
lock
ds
call
inc
pop
rolb
xchg
lock
sbbb
sbb
inc
scas
fdivs
inc
lods
cmp
push
nop
and
out
not
divb
je
add
incl
and
cmp
jne
adc
fsubrs
add
push
xchg
sti
pusha
push
outsb
or
loopne
dec
jl
and
mov
and
orb
push
and
jmp
jo
sub
or
aas
out
sbb
sbb
and
es
and
inc
jne
sub
incl
or
cmc
add
add
sbb
popa
test
push
dec
rcrl
sub
and
in
mov
mov
cmpsb
and
into
sub
pop
xor
clc
and
out
cli
aad
push
outsl
pop
dec
xor
fmull
jae
aas
fucomip
inc
and
or
jmp
addl
add
fadd
cmp
add
jae
fs
imul
imul
add
sub
lcall
fisttpl
and
lahf
popa
push
mov
leave
inc
call
lcall
into
lea
adc
aad
cli
cmc
adc
jae
push
xchg
adc
mov
lcall
ss
fistpl
int3
aam
xchg
cmpsl
push
or
out
scas
sub
push
add
push
add
punpckhwd
enter
lea
cmpsl
hlt
push
xchg
les
xor
in
fs
cmpsl
inc
loopne
inc
mov
mov
add
decl
jo
inc
cmp
and
enter
outsl
dec
jle
inc
sub
mov
cmp
scas
call
mov
pop
daa
jg
fisttps
and
shrb
cli
inc
mov
or
movsl
aam
mov
fdivs
fs
xchg
aam
inc
push
mov
lea
cmc
or
xor
dec
fldt
add
jbe
mov
outsl
inc
xchg
cmp
test
xchg
jae
jl
push
inc
pop
adc
pop
imul
mov
js
outsb
xchg
jbe
inc
mov
mov
sbb
ljmp
shrb
jb
mov
imul
jno
cmpsl
or
jle
jmp
dec
push
out
push
push
dec
mov
jno
outsb
test
mov
fcomip
mov
xor
xchg
mov
jnp
movsb
adcl
aam
or
inc
loopne
and
xchg
cmp
test
decl
jne
dec
repnz
mov
dec
mov
cmp
dec
mov
jle
loopne
mov
fcoms
pop
or
loopne
loopne
pushf
mov
xchg
mov
and
jge
pushl
push
stc
push
inc
xchg
and
add
ljmp
cmp
sub
push
in
push
jecxz
loope
or
js
enter
lcall
lock
and
roll
push
xchg
lock
mov
lock
add
orb
clc
fisttpl
jle
add
xor
or
sub
pop
cmp
push
add
ljmp
sbb
mov
or
push
ret
hlt
and
lahf
mov
rol
push
popf
mov
call
lea
xor
sub
and
sbb
pop
adc
pop
js
add
xchg
mov
jo
mov
add
push
clc
jl
push
pop
ds
xchg
mov
nop
js
incl
xor
mov
shll
mov
cmp
incl
push
push
cmp
sub
sub
lods
xor
pop
inc
sahf
in
fldt
lock
fisubrl
cmpsb
lock
jp
push
pusha
imul
test
js
mov
push
js
jle
xchg
xchg
popa
popa
jns
rorl
mov
nop
mov
cld
decl
shll
mov
push
inc
loopne
or
sub
inc
cli
call
mov
jmp
inc
inc
insl
or
or
rorb
inc
outsl
jmp
insl
test
call
adc
jle
test
add
cmp
clc
push
das
cli
xchg
popa
and
cmp
mov
negb
ret
sub
dec
adc
je
xor
jecxz
dec
stos
loopne
call
and
and
xor
dec
add
pop
cmp
sub
in
notl
mov
cmp
inc
sti
mov
sbb
sub
popa
mov
outsl
cli
iret
jp
mov
sbb
dec
lods
leave
rorb
imul
call
loop
in
push
mov
setg
adc
jg
loope
sub
jnp
xor
mov
jbe
dec
fidivrl
lock
mov
sub
or
lcall
xchg
outsb
adc
es
shlb
pop
mov
mov
int
std
push
or
inc
int
hlt
add
movb
icebp
or
call
fcoms
movsb
sub
pop
xor
mov
push
dec
mov
xor
xorb
inc
pop
int3
cwtl
loopne
adc
lcall
push
push
orb
pusha
add
mov
mov
and
add
xchg
xchg
mov
hlt
in
incl
add
mov
dec
and
sbb
xchg
add
cli
inc
lods
jne
push
sbb
sub
call
in
sub
push
push
dec
in
scas
sahf
jnp
movl
add
mov
cmp
jl
or
popa
cmp
cli
dec
adc
push
fmull
mov
jle
int3
es
sub
pop
leave
fs
insb
or
add
dec
inc
enter
add
cld
mov
lcall
jmp
insb
out
stos
loopne
pop
dec
push
call
dec
push
cs
inc
sbb
pop
into
add
test
or
js
cmp
jle
arpl
add
sbb
adc
dec
rorb
jnp
cmp
push
loop
call
sar
mov
and
or
lock
inc
mov
ljmp
adc
lds
jbe
xor
xor
or
fwait
cli
or
inc
je
adc
xor
call
movsl
add
push
adc
jb
subl
add
sbb
xor
mov
decb
jbe
xchg
enter
pop
adc
ja
add
push
das
pop
sub
and
lock
xor
pop
mov
pop
fildll
xorb
bound
scas
mov
stos
jp
imul
pop
adc
ljmp
loope
lock
les
or
movsb
xchg
decl
add
sub
sub
enter
repz
insb
add
jge
push
push
sub
clc
sbb
mov
add
dec
filds
push
je
pop
add
push
orb
lock
outsl
adc
adc
sbb
rorb
ret
xor
call
js
fiaddl
sbb
popa
or
cmpsb
je
call
push
xchg
xor
adc
inc
int3
js
jp
inc
sub
iret
sbb
in
mov
lahf
or
sbb
pop
inc
push
and
pop
out
ffree
mov
lods
pop
repz
out
inc
es
mov
subb
mov
and
or
fimull
push
pop
mov
stc
adc
pop
or
pop
repz
adc
mov
in
xor
cmp
cmp
cmp
movsb
xchg
orl
lods
adc
in
add
push
add
jp
mov
lcall
popf
add
sarb
cmp
ja
out
test
or
cmp
pop
hlt
ljmp
ja
push
sbb
inc
add
cmp
mov
pop
mov
loopne
decl
add
mov
add
dec
in
dec
sbb
add
test
xchg
mulb
lock
call
repz
pop
xor
xor
mov
lea
cmc
out
imul
fnstsw
insl
add
add
jge
adc
cmp
adc
movb
push
dec
push
or
aas
mov
ret
lock
out
adc
inc
dec
aad
sub
cmp
imul
cmpsb
test
mov
xchg
inc
sbb
cmp
pop
jne
pop
push
hlt
sub
or
mov
lea
mov
mov
xchg
sub
or
push
pop
sub
lcall
fs
cli
int3
fs
lods
movsb
rcrl
adc
movsb
movsb
pop
es
call
sub
add
dec
add
dec
or
pushl
push
data16
mov
inc
fstpt
jae
sbb
sub
ror
and
das
sub
gs
cs
push
jne
imul
sbb
jp
insb
fldl
lret
adc
hlt
cltd
cmp
mov
sbb
push
xchg
xchg
dec
pop
gs
cwtl
dec
rcr
pop
xchg
test
inc
test
jmp
add
push
mov
push
xor
xor
dec
stos
add
dec
mov
cmp
or
mov
adc
ret
cmpsb
inc
data16
divb
or
jg
push
xor
test
sub
cli
in
dec
jl
xor
adc
mov
jle
add
sbb
add
jmp
test
xor
ss
dec
dec
mov
in
pop
test
ljmp
hlt
popa
add
subb
icebp
roll
adc
cmp
mov
je
sub
push
jns
jg
push
and
pop
mov
cmpsb
mov
adc
push
rcrl
pop
add
add
gs
movsb
add
pushl
push
xor
cmp
pop
mov
rclb
sub
cli
pop
adc
iret
dec
jno
movsb
push
popl
inc
and
pushl
ss
inc
lods
maxps
fcomps
lock
xlat
or
rorb
mov
xchg
inc
loopne
mov
mov
ret
in
pushf
push
or
cmc
mov
fdivrl
pop
cmc
add
movsl
cs
mov
adc
add
cmp
lcall
pop
dec
lret
pop
jecxz
adc
fs
jmp
xchg
clc
adc
mov
mov
lahf
mov
mov
pop
jb
inc
and
cmc
fucomip
or
decl
dec
daa
inc
shlb
push
in
cmp
movsl
cmp
or
jo
and
enter
loopne
or
push
add
lcall
div
sub
and
loopne
or
pop
rcrb
add
sub
imul
testb
pop
icebp
outsb
sbb
xor
jge
mov
out
sahf
mov
mov
sar
add
ds
jg
imulb
shlb
ret
ljmp
or
ljmp
push
call
jp
inc
dec
les
clc
add
cld
lahf
cmc
mov
das
add
repnz
cld
jg
into
rol
std
and
sbb
add
pop
dec
mov
mov
fistpll
push
cmp
pop
pop
daa
sub
loop
daa
stos
dec
cmpsl
xchg
inc
add
fmuls
lock
call
xchg
and
push
loop
cld
roll
sub
fildl
sub
or
sub
or
add
inc
mov
imul
fisubl
mov
mov
lcall
jne
dec
sbb
fisttpll
xchg
pop
les
xchg
push
adc
or
xchg
ljmp
adc
ret
lods
jb
movsl
xor
adc
cs
jne
add
adcb
mov
xor
inc
cmpsl
mov
mov
push
mov
and
test
fldt
and
cmp
mov
in
std
sahf
mov
add
xchg
es
mov
pushl
add
test
into
imul
or
int3
jmp
jbe
pop
cwtl
rcr
pop
cmc
sub
dec
jmp
ret
int3
fisttpl
std
pushf
cli
loopne
scas
clc
sbb
add
push
adcl
das
add
sbb
sub
fcoml
decl
scas
pop
aam
popa
les
test
mov
icebp
loope
cmpsb
repnz
jg
dec
hlt
inc
or
cmp
pop
nop
inc
lea
pusha
jno
icebp
ja
inc
push
insb
pushf
enter
and
mov
lock
fsubs
out
adcb
dec
and
dec
aad
adc
fs
mov
sub
push
repz
cmp
out
jl
sbb
adc
pushf
and
jg
ljmp
enter
lds
dec
push
jp
lock
push
sub
mov
lods
mov
sub
std
jno
enter
adc
insb
cmp
jg
int3
sti
and
ret
testl
mov
sarl
movsb
pop
push
call
addr16
dec
addb
adc
and
bound
xchg
xor
pop
fimuls
pop
mov
sub
push
mov
dec
sbb
dec
add
loop
mov
adc
mov
xchg
sub
mov
cwtl
push
shr
add
jmp
cmp
mov
lcall
jns
adc
shlb
jmp
add
popf
jmp
adc
pop
mov
cld
clc
decl
add
cmpl
shrl
adc
pusha
xchg
pusha
jmp
rclb
les
out
pop
xchg
inc
push
rclb
or
rolb
jns
add
cmp
jnp
inc
xchg
cmpsl
sbb
test
push
lock
push
call
scas
outsl
adc
inc
and
push
fucom
fnstcw
cwtl
int
xchg
mov
mov
lret
mov
fwait
cmpsl
jge
imul
shrb
adc
jne
add
or
stos
mov
or
sbb
mov
inc
add
add
pushl
mov
push
jecxz
jae
add
filds
push
inc
movsl
or
push
pop
xchg
or
xchg
in
jg
or
das
or
mov
sbb
shufps
or
das
xchg
les
mov
call
inc
inc
and
or
lahf
sbbb
imulb
inc
mov
and
adc
push
adc
dec
adc
adc
dec
fst
adc
lcall
and
inc
js
adc
movsb
adc
mov
mov
pushf
jmp
jge
sbb
mov
mov
inc
or
je
nop
mov
pop
test
decl
cld
inc
lea
sarl
push
in
mov
outsl
dec
ljmp
xchg
inc
aas
mov
lret
aas
inc
add
in
xor
ds
cli
dec
into
std
lods
insb
add
js
xchg
push
cmp
push
loop
les
scas
sbb
jo
mov
lods
mov
lcall
inc
inc
mov
mov
push
push
push
es
pop
mov
add
or
dec
push
sahf
scas
pop
leave
lods
insb
call
cli
test
lea
xor
dec
gs
in
jmp
outsl
jp
fdivs
xchg
jbe
push
loopne
push
cltd
jmp
lret
add
xchg
popf
test
out
pushl
jo
xor
xchg
cld
mov
sbb
test
sub
call
mov
jmp
push
pop
and
scas
cmp
sub
ret
xor
lcall
cmp
lock
ljmp
mov
add
dec
inc
scas
inc
push
mov
pushl
push
fwait
icebp
nop
push
jnp
jmp
pop
dec
pop
insb
out
cmp
leave
scas
mov
jmp
decl
ret
movsl
into
mov
xchg
mov
sbb
push
pusha
jne
pop
mov
push
loopne
scas
jno
pop
icebp
jg
into
stc
xor
or
add
ja,pt
cmpsb
lea
incl
stc
add
mov
dec
out
lcall
in
xchg
cld
out
lods
push
test
sahf
dec
add
rcll
or
pop
or
sub
jle
data16
xchg
int
imul
mov
push
and
cmp
jae
inc
fimull
and
cli
jmp
ds
cmp
and
mov
int3
ret
adc
cmpsl
mov
ljmp
jbe
pop
cwtl
sbbb
add
sbb
pop
or
cld
out
movsb
xchg
push
out
je
and
push
and
ljmp
or
out
adc
xchg
and
pop
sar
push
lea
and
cmp
adc
adc
cmp
inc
push
daa
sub
and
stos
jle
cmp
iret
dec
push
mov
popa
or
inc
lahf
and
inc
or
or
ljmp
lcall
pop
jno
out
imul
pop
sub
out
sarb
inc
mov
add
cli
incl
mov
xchg
inc
inc
jb
add
out
test
lods
mov
fnstenv
ss
or
cmp
js
adc
cmpsl
sub
rol
inc
dec
and
pop
das
lock
cmpsl
ret
test
rcrb
cli
jmp
adc
lods
push
mov
aam
or
incl
faddl
js
xlat
in
cmpsl
add
jb
or
mov
add
add
pop
pop
pusha
sub
or
jo
movsb
or
add
out
push
add
mov
push
sbb
fabs
xor
sub
xor
jp
lcall
testb
and
inc
bound
dec
and
mov
nop
jbe
jle
lock
or
dec
lcall
lds
aaa
cmpl
mov
add
push
jmp
sbb
mov
mov
popf
lock
rcrb
jmp
stos
or
pushf
xor
add
outsb
push
and
add
add
cltd
in
jae
fadds
sub
pushf
mov
inc
or
or
jg
cld
xlat
adc
push
sbb
mov
les
inc
push
add
inc
es
outsb
call
or
js
les
pop
jo
and
pushf
adc
cmp
lds
add
scas
jbe
dec
sub
add
ss
add
jmp
add
mov
xchg
pop
push
inc
sub
inc
fadds
aas
add
jg
or
subl
aad
cmpsb
out
test
or
ljmp
pop
into
js
sub
mov
ljmp
push
neg
add
icebp
ja
push
insb
adc
ljmp
dec
stc
cwtl
jnp
add
pop
imul
out
inc
inc
push
adc
movsb
cmc
lcall
mov
rcrl
test
loopne
stos
pop
lret
leave
push
sbb
fwait
inc
pusha
subl
dec
movsb
or
imul
cmpsl
pop
mov
xor
push
xchg
jnp
jo
or
cmp
addl
add
pop
fs
push
aas
pushf
imull
lcall
push
jnp
jns
paddq
popf
ss
inc
mov
clc
inc
clc
mov
add
push
aam
push
and
add
add
nop
xor
pop
sbb
sarb
add
cmp
push
test
cltd
or
es
sbb
sbbb
mov
lahf
jbe
pop
ja
push
out
xchg
decl
loope
lcall
inc
fstp
push
scas
rcrl
daa
push
xor
bound
sahf
sub
pusha
insl
or
ss
cwtl
xchg
push
xchg
mov
ds
mov
decl
addr16
dec
fidivrl
les
adc
mov
jnp
ja
clc
dec
push
adc
inc
and
and
repnz
jg
test
dec
lahf
mov
cld
insl
pushf
dec
jne
or
and
repnz
jnp
dec
fs
test
lahf
movsb
dec
cld
and
lea
push
movsl
inc
idiv
mov
mov
in
pushf
movsb
sahf
test
sbb
adc
adc
out
mov
insb
or
cmp
pop
lahf
dec
call
xchg
pop
xchg
and
nop
nop
int
jmp
inc
mov
adc
test
inc
and
out
movsb
mov
icebp
xchg
push
loop
cmp
mov
push
mov
jae
xor
insb
mov
jle
sti
sub
add
pop
test
push
dec
dec
push
push
jb
out
jge
adc
pop
stos
outsl
das
push
dec
bound
loope
ljmp
popf
xlat
adc
jne
jae
lock
dec
dec
insb
push
pop
insb
insb
push
inc
push
xor
pop
test
rolb
shlb
jmp
clc
push
mov
inc
or
mov
pop
sbb
outsl
mov
sub
lods
mov
mov
push
fs
pushl
sarl
xor
popf
adc
jbe
xor
jne
push
bound
jg
jg
loop
jne
inc
fucomp
rol
jno
jge
mov
in
loop
mov
and
push
call
ljmp
mov
dec
cmp
sbb
outsl
daa
call
inc
xchg
or
decl
pop
stos
jns
pop
mov
add
mov
sar
pop
ja
pop
mov
push
std
call
shlb
jp
sub
clc
das
popf
cs
push
loope
push
adc
test
fldcw
sbb
or
jno
addr16
aaa
add
rclb
add
ret
loopne
fdivr
lcall
mov
adc
js
pusha
mov
popf
jae
dec
or
add
call
dec
jns
push
hlt
jecxz
sub
mov
imul
pop
lock
decl
ret
addps
test
pop
mov
sbb
repnz
add
hlt
dec
jmp
sub
adc
xor
test
clc
ljmp
lods
adc
lock
cwtl
andl
mov
adc
rcr
call
mov
dec
in
push
insb
sub
je
adc
inc
inc
lahf
sbb
pop
repnz
mov
mov
unpcklps
adc
add
inc
add
test
push
rorb
and
lcall
mov
sub
xor
pusha
adc
mov
enter
test
mov
das
lcall
ljmp
push
pop
mov
push
push
lea
jg
incl
dec
cmpsb
cmp
stos
int3
fnsave
movsb
push
cld
stos
or
or
push
xchg
mov
push
test
xchg
push
stc
jge
mov
je
lods
adcb
test
hlt
pushl
mov
adc
push
adc
addb
fwait
test
adc
jmp
mov
add
xchg
xorb
call
xorl
lcall
push
clc
jne
aaa
ret
cmp
xlat
jmp
jo
fnstcw
xor
jo
stos
push
mov
aaa
jne
int
cmpsl
and
fildl
cmc
ljmp
rolb
sub
pop
push
aam
cmpsb
loope
push
push
push
cmp
and
inc
pop
in
outsl
mov
adc
cltd
push
cld
test
sbb
xchg
adc
pop
push
mov
lcall
call
add
and
and
pusha
les
mov
cmp
add
decb
push
sub
and
pop
push
rolb
mov
sub
push
pushf
sub
inc
shr
mov
sbb
adc
inc
testb
inc
add
jne
sbb
loope
xlat
call
add
push
xchg
notl
je
test
pop
pop
into
sbb
jg
and
dec
cmp
xchg
ret
push
add
aad
jge
inc
or
jne
push
sbb
rol
xor
incl
pushl
add
mov
or
pop
or
mov
lods
leave
add
inc
aad
jbe
hlt
xchg
ljmp
lock
inc
lea
push
inc
dec
cmpl
add
lock
pop
sti
ljmp
push
add
adc
mov
out
fsubs
inc
ds
push
cld
in
ret
pop
mov
add
sbb
pop
inc
arpl
or
icebp
sbb
jnp
adc
add
sub
sbb
xor
cmc
call
mov
add
inc
repz
sub
push
adc
or
incl
mov
lret
popa
mov
pop
adc
icebp
test
mov
ret
arpl
es
sbb
dec
xchg
xlat
lea
add
jg
enter
popl
testl
daa
mov
jp
int3
scas
cmp
aad
loope
cmp
dec
push
mov
scas
xor
cmp
mov
leave
aaa
call
mov
les
jp
sbbb
mov
clc
insb
and
clc
pop
gs
hlt
sub
or
push
jg
or
sbb
sub
cmp
enter
clc
decl
lahf
and
enter
pop
mov
popa
sbb
pushl
or
sbb
lret
test
mov
popa
jl
push
push
xor
mov
inc
sbb
das
xchg
jae
and
stos
xor
jb
add
sbb
sbb
mov
adc
adcb
xor
js
js
add
loopne
pop
stc
shlb
ljmp
or
xor
xchg
mov
decl
and
shlb
loope
ds
in
or
cs
cmp
js
pop
jg
push
sbb
adc
xor
push
cmp
push
lret
jae
inc
lcall
movsb
mov
scas
stos
cwtl
sbb
cwtl
and
xchg
incb
inc
bound
js
inc
loopne
xor
decl
lock
jecxz
add
sbbl
pop
push
mov
xor
fcomip
adc
mov
js
or
push
push
int
push
enter
mov
add
lcall
cli
dec
subl
shlb
and
or
mov
or
ljmp
add
das
mov
dec
jge
jne
or
scas
mov
ljmp
outsl
or
cmp
call
mov
xchg
mov
xchg
je
aaa
mov
pop
jl
mov
cld
or
es
neg
pop
in
inc
pop
pop
fs
push
or
add
stos
xchg
dec
stos
imulb
inc
jmp
push
mov
ja
add
inc
push
scas
push
dec
out
mov
call
xchg
push
lea
cmpsl
mov
stos
mov
sub
mov
mov
popf
dec
lock
in
jle
pusha
sbb
inc
mov
rcrb
push
sti
in
es
sub
or
jp
sub
inc
pop
ja
add
pop
sbbb
xor
fdivs
cmp
and
call
enter
aas
xor
stos
pop
hlt
fistl
mov
inc
xchg
adcl
inc
inc
movsl
fimuls
outsb
adc
data16
jecxz
les
sbb
cli
inc
push
add
xor
in
rorl
in
ss
femms
sub
mov
call
insl
and
or
inc
xor
pop
idivl
std
insl
add
or
sub
xor
pop
dec
gs
sub
jno
adcl
push
je
jo
out
ret
dec
mov
mov
push
mov
shrb
pop
addr16
dec
andl
aaa
sbb
add
jns
out
add
sbb
and
sub
sysenter
cmp
in
push
pop
inc
dec
dec
push
push
pop
pop
pusha
fs
pop
jns
js
addb
mov
in
lods
mov
mov
enter
icebp
lcall
adc
incl
shll
mov
jmp
icebp
jp
add
pushl
xor
sti
and
xchg
inc
sub
mov
call
sbb
push
push
movsb
xor
les
sbb
sub
sub
push
mov
pop
hlt
push
xor
gs
cmp
xor
clc
inc
orb
aaa
cld
out
inc
push
lret
dec
mov
aam
add
lock
mov
adc
dec
addb
mov
repz
jo
enter
js
add
and
inc
test
dec
je
cwtl
sub
inc
xchg
mov
or
pushf
dec
and
subb
pop
shlb
adc
dec
rolb
mov
stc
movsb
movsb
int3
iret
enter
cmp
ljmp
pushl
cmp
jg
ljmp
test
pop
clc
outsb
dec
xor
test
dec
pop
movsb
or
jmp
and
in
call
dec
cmp
sub
lods
test
cmp
adc
xorw
es
aaa
rsqrtps
pushl
aad
jae
outsb
jb
mov
mov
inc
outsl
fsubrs
dec
das
add
dec
jae
std
decl
and
pop
mov
mov
cmovs
mov
mov
scas
xchg
out
xorb
mov
incl
adc
sahf
insl
push
jo
gs
mov
pop
out
rcrb
fbld
js
jae
mov
jb
xchg
adc
and
cmp
fstpt
pusha
sbbb
sub
push
mov
pushf
push
outsl
xor
sbb
lods
xchg
mov
mov
incl
out
loopne
push
pop
ret
jae
mov
cmp
dec
ds
aaa
loope
popa
jne
scas
push
push
dec
aaa
mov
out
incl
fists
xchg
and
ja
push
icebp
mov
mov
inc
push
into
jae
dec
mov
xchg
inc
inc
push
jne
jmp
push
push
jnp
push
mov
stos
imul
subb
and
rol
fildl
daa
adc
pop
sub
adc
mov
cmpsl
xlat
lea
xor
jmp
stos
jne
pusha
add
orb
mov
pop
stos
pusha
fs
out
imul
mov
scas
pop
jae
fimull
xchg
arpl
mov
xor
fldenv
fwait
adc
push
push
cmpsl
lods
xchg
add
mov
pop
mov
push
sbb
lods
jge
pusha
arpl
jecxz
and
dec
aas
lea
sbb
hlt
aam
and
pushl
mov
roll
repnz
jbe
mov
sub
lods
mov
add
decl
shlb
mov
dec
mov
mov
add
ljmp
xor
fs
shlb
and
and
shlb
cwtl
aas
and
mov
incl
mov
daa
sbb
rorb
inc
ret
xor
xor
icebp
incl
mov
push
push
sbb
addb
sbb
sarb
aaa
std
incl
scas
roll
outsb
pop
or
mov
inc
ds
out
dec
ja
and
insb
push
pop
xchg
or
add
or
aam
insb
cld
push
mov
out
and
outsl
loop
mov
jae
mov
inc
call
jmp
lock
jl
mov
sbb
mov
push
jmp
pop
xchg
xchg
call
push
psubw
imul
incl
cld
push
or
ret
add
cld
pushf
xor
bound
jnp
push
fsubs
or
dec
pusha
push
cld
sub
shrb
rcll
xchg
push
push
std
pushl
xor
jg
xor
and
jg
fisttps
incl
and
mov
dec
sbb
adc
and
mov
mov
in
clc
push
ret
inc
or
or
sar
jmp
ja
js
orb
lahf
incl
xchg
lock
mov
nop
rorl
adc
dec
repz
sub
call
insb
enter
insb
adc
mov
stos
pushl
andb
jne
mov
jge
jo
fidivrs
sbb
pop
rorl
push
adc
xchg
xor
cmpsb
adcb
jne
mov
cmp
dec
stc
dec
pop
add
popa
mov
outsb
cmp
dec
xchg
jg
ret
clc
add
clc
mov
call
cld
pushl
int3
test
adc
or
xchg
adc
lret
ret
sbb
test
pop
test
mov
jb
mov
fisubrl
sbb
mov
out
push
and
out
mov
pop
mov
cmp
incl
repnz
pop
jno
xor
and
sbb
mov
sub
mov
or
jns
leave
or
sahf
cs
push
jmp
cmp
lret
cmpsl
fisubrs
jl
mov
adc
dec
sbbl
mov
pusha
pop
cmp
decl
inc
adc
inc
in
sbb
sbb
pop
cmp
jle
pusha
sbb
xlat
clc
jg
mov
sub
or
stos
and
pop
adc
dec
inc
ja
sbb
cmp
dec
call
enter
shlb
and
and
mov
sarl
push
add
adc
xchg
push
pop
call
popf
adc
adc
call
loop
lret
push
ret
jns
cs
add
test
sbb
push
mov
cld
push
cs
adc
addr16
rcll
ret
jg
mov
add
mov
jl
mov
out
lds
pop
ret
push
or
call
add
add
repnz
enter
in
pop
mov
imul
sub
ljmp
jns
jbe
clc
negb
dec
mov
enter
sbb
push
jl
cmp
xchg
mov
sbb
sub
sahf
loop
jmp
inc
lret
fwait
fs
add
pushl
xor
shlb
outsl
testb
std
jl
outsl
loope
xor
pop
in
jg
dec
leave
jl
inc
rcrb
cmp
fs
call
adc
dec
xchg
adc
data16
pop
out
push
xor
jl
xchg
sbb
mov
decl
xor
popa
addr16
add
subb
adc
lret
jne
ja
adc
sbb
insl
mov
adc
lret
xor
push
mov
cmc
xor
or
sbbl
and
insl
stos
inc
cld
call
or
enter
insl
push
inc
inc
push
mov
pushf
mov
stc
xor
and
in
gs
fbld
sbb
clc
fmuls
outsl
fwait
call
dec
sub
mov
mov
cwtl
add
scas
js
xchg
xchg
jmp
add
jo
inc
or
xchg
insl
push
sub
seto
clc
movsb
mov
adc
xchg
arpl
enter
hlt
paddusw
pushl
mov
ffreep
jb
fs
lods
fcmovbe
dec
dec
aad
mov
ret
fnstcw
wrmsr
sti
dec
push
cmp
imul
loope
int3
data16
jmp
out
jns
iret
xchg
cltd
int3
pop
sub
push
out
push
add
idiv
push
pop
push
pfsubr
mov
adc
loope
fiadds
dec
pop
cmp
push
pushf
dec
int
leave
sarb
stc
call
fcmovnb
dec
xor
ss
repnz
aas
lock
leavew
sar
pop
push
mov
rorb
clc
cld
jmp
xchg
mov
push
enter
pop
mov
loope
sub
repnz
lret
iret
mov
xlat
clc
inc
jg
pusha
cmp
rorl
into
xor
pop
daa
sub
rcrl
xchg
fcos
add
mov
push
rorl
add
iret
decb
ud0
fisttps
xchg
mov
pop
or
mov
mov
mov
fmull
mov
adc
fimuls
add
inc
mov
das
sbb
add
dec
adc
fldenv
sbb
and
rolb
jg
orl
push
sbb
movsl
and
add
xchg
and
xor
mov
or
and
lret
inc
outsl
imul
outsb
ret
dec
clc
push
std
outsl
mov
or
xor
test
mov
iret
dec
les
popa
fdivr
fiadds
inc
arpl
xor
jge
mov
add
jl
dec
sub
test
xchg
jns
xchg
popa
inc
add
lds
popf
mov
fsub
jecxz
adcb
cli
mov
cld
add
pop
add
dec
xor
jne
sbb
adcl
push
cmp
fisubrs
icebp
sub
cltd
add
ljmp
xchg
add
push
inc
xchg
or
imul
fs
fistps
push
pop
gs
mov
shrb
xor
add
cmpsb
sub
dec
loope
popa
dec
push
out
rolb
and
sbbb
test
cmp
inc
xor
stc
imul
rorb
shr
sub
leave
shlb
nop
loopne
fdivrl
ljmp
cs
push
clc
mov
repnz
rcl
test
pop
incl
cmp
or
aam
or
xor
sbb
pop
lods
das
sahf
js
xor
dec
mov
loopne,pn
aam
aad
imul
inc
faddl
xchg
insl
add
cmp
hlt
add
mov
adc
jb
pop
lods
mov
inc
stos
pop
xor
mov
fmuls
loopne
cli
add
xchg
test
mov
fsubrp
pop
test
aam
lcall
and
fstpl
fxch
and
in
rorl
mov
dec
mov
loopne
sub
cmp
cmp
xchg
or
mov
sub
sbb
add
call
out
sbb
sbb
mov
push
cmp
fistpll
aam
dec
test
inc
add
cmovp
pushl
aas
cli
inc
jg
dec
add
push
lds
mov
pop
sbb
dec
imul
cld
jmp
pop
dec
add
dec
pop
xor
xor
fildll
cmp
adc
out
loop
ljmp
add
aad
inc
adc
xor
jmp
lods
int
add
pop
jl
add
and
mov
or
jmp
js
stc
xchg
ja
int3
jge
subb
inc
cmovnp
in
das
fadds
jg
hlt
add
push
sahf
insb
pusha
shll
mov
and
aaa
jg
cmc
push
rcl
jmp
adc
dec
jae
xchg
hlt
fadds
ret
inc
pusha
xchg
adc
adc
mov
sahf
cmp
fldl
cs
inc
jne
xlat
pop
cmp
adc
push
cmp
call
mov
arpl
xlat
movsb
les
sub
xor
or
and
cmp
decl
das
dec
cmpsl
and
mov
jge
arpl
ret
faddl
in
add
aam
out
clc
mov
and
es
sub
cmpsb
cmp
sbb
mov
push
sbb
pop
lock
cmp
mov
mov
mov
aad
pop
enter
cmpsb
push
xor
negb
or
mov
xchg
les
sbb
xlat
mov
and
jae
aam
aam
lock
jmp
mov
sub
das
aam
pop
add
pop
sub
mov
jno
bound
adc
fnstenv
mov
hlt
arpl
inc
inc
cmpl
jae
call
add
sub
decl
adc
push
lcall
pop
cmc
rolb
test
call
fsubr
mov
insl
and
jle
sbb
push
je
push
jne
jo
clc
xchg
adc
sbb
add
xchg
or
roll
or
xor
int
call
std
xchg
cmc
cmpsb
ret
pusha
cltd
dec
jb
lret
push
adc
ficoml
push
mov
pop
xor
xor
call
or
sbb
nop
jl
sbb
fiaddl
ja
or
daa
xlat
or
shll
outsl
mov
aas
jge
xor
add
adc
or
sub
cmp
sub
adc
fdivrl
hlt
xchg
dec
lock
sbb
repz
and
shrl
cli
call
and
adc
fldl
or
aaa
sar
incl
push
cmp
in
adc
lock
or
icebp
fcmovnbe
ret
push
out
cs
test
ljmp
xchg
stos
or
imul
jne
mov
mov
nop
mov
nop
mov
mov
arpl
test
or
out
test
push
sub
push
das
xor
stos
lods
fnstcw
shrb
hlt
decl
sub
in
fnstenv
jp
loopne
xor
fsubrl
es
lods
mov
dec
xlat
shll
addr16
sub
cmp
jg
decl
push
xor
add
in
in
das
stos
or
jne
out
mov
in
pushl
dec
call
jnp
xchg
mov
fsts
and
cmpsb
sbb
test
jmp
push
test
fnsave
fnstsw
jle
pusha
jg
push
loopne
mov
sbb
dec
ficomps
stos
in
leave
fidivs
fisubrs
push
inc
mov
dec
inc
insb
ficomps
and
push
mov
enter
outsb
dec
fidivrl
in
lret
insb
inc
mov
push
jg
ljmp
in
fbld
loopne
mov
adc
cmp
cwtl
add
push
std
lcall
dec
mov
inc
dec
adc
xchg
fwait
pop
ret
adc
cmp
sbb
pop
shl
mov
mov
mov
popf
movsb
sti
pop
leave
and
or
push
cmp
fsubrs
loopne
ret
or
rcrb
adc
fildll
jb
jns
add
loope
inc
jb
fs
loope
mov
imul
sub
addr16
das
sub
and
int3
inc
movsb
fldt
aad
or
pushf
push
jo
lcall
sbb
pop
push
fistps
sub
xor
int
outsl
in
mov
imul
jmp
lcall
pop
lock
add
loop
rclb
cmp
or
popf
psrad
adc
out
clc
jg
bound
andb
les
imul
ljmp
adc
mov
fldt
jmp
inc
add
or
divb
mov
pop
dec
and
xor
incl
mov
outsb
sub
dec
rcrb
lcall
adc
je
insb
mov
decl
ret
cmpsl
inc
mov
cmpsl
push
insb
mov
ss
arpl
adcl
push
or
ljmp
or
les
inc
jae
arpl
out
pop
push
ss
sti
pop
jns
inc
sub
jo
jmp
sbb
rcrl
push
mov
dec
push
push
cmpsl
sar
ljmp
mov
and
mov
sbb
sbb
jb
jns
sub
test
std
decl
jp
and
jnp
out
push
mov
dec
or
mov
inc
inc
dec
cmp
decl
out
scas
dec
outsb
xor
push
sbb
inc
gs
cmp
aas
cmp
outsl
cmp
insb
fptan
xor
and
jg
test
or
adc
jp
jg
rcrl
movd
push
push
add
add
filds
mov
ljmp
les
jb
cmp
sub
cmpsl
xchg
insl
movsb
or
ret
stos
adc
mov
pusha
xchg
mov
repnz
jo
pop
inc
aad
and
notl
lds
loope
mov
outsl
jl
repz
and
mov
xchg
sub
jl
iret
pop
dec
xor
mov
add
js
adc
outsl
xlat
je
imul
addl
jns
fcomps
push
pop
iret
jg
inc
std
jae
xchg
adc
push
inc
fbld
sar
push
and
jb
imul
cld
call
adc
test
xchg
push
daa
push
jbe
push
lea
test
push
push
mov
aaa
loopne
mov
gs
jb
jl
dec
imul
scas
clc
ljmp
pop
adc
lret
movb
aaa
add
daa
stos
or
jmp
xchg
shl
mov
xchg
add
test
mov
lcall
sub
orl
scas
imul
jmp
pop
sbb
bound
std
adc
jno
lahf
lcall
add
push
lods
adc
or
mov
adc
stos
sub
pusha
adc
add
or
aam
pop
stos
and
addr16
jg
pop
jp
rolb
mov
cmp
lahf
sbb
xchg
fbstp
or
and
decl
inc
push
ja
daa
adc
sahf
mov
mov
call
stos
cmp
adcb
push
in
ljmp
notl
inc
cwtl
fidivrl
addr16
cmpsl
fistpll
in
push
push
push
outsl
mov
mov
or
jg
rolb
and
and
divl
or
adc
jmp
mov
fimull
pop
call
hlt
call
imul
out
mov
lds
pop
push
sbb
and
in
clc
fisubl
mov
pop
pop
mov
int
mov
mov
aas
push
ljmp
xchg
push
pop
adc
push
mov
push
subl
pop
xchg
fisubs
xor
repz
cmpsl
cli
mov
push
insb
or
jo
adc
mov
adc
out
sbb
adc
shlb
or
push
arpl
inc
mov
movl
hlt
jmp
imul
inc
mov
testl
cmpsl
icebp
mov
cmp
push
jg
push
cmp
incl
push
pusha
pop
ljmp
mov
inc
ret
pop
adc
lods
fwait
idiv
ljmp
aas
lahf
add
imul
pop
or
setno
imul
adcb
adc
fsubrs
inc
aas
cmp
rcll
repnz
decl
lods
cwtl
pop
subb
sbb
mov
call
incl
jns
xor
cmp
jg
pop
push
rcll
daa
inc
fcompl
outsb
pop
call
inc
jecxz
push
mov
push
xor
fnstcw
sarl
xor
stos
push
cld
jg
popa
xorb
movsl
inc
cmpsb
xor
mov
incl
in
fmul
popf
nop
cmp
pushf
pop
add
in
push
or
insb
add
sub
out
adc
cmp
add
dec
jg
adc
sub
sbb
icebp
sbb
add
cld
cli
decb
outsl
push
cli
sub
adc
and
and
sbb
mov
cli
sub
mov
cli
gs
and
adc
sbb
pushf
stos
or
repnz
inc
js
popa
sbb
out
fiaddl
js
cwtl
int3
fildl
sbb
and
decl
fwait
in
inc
push
mov
push
cmp
nop
fdivr
jbe
out
add
test
aaa
lock
dec
shlb
adc
dec
sbb
ss
insb
outsl
and
and
add
fcoms
cld
pushl
adc
cmp
cmp
jle
clc
jo
in
hlt
fwait
pushl
inc
push
adc
insb
out
pop
adc
movsb
mov
test
fistpl
nop
or
incl
and
data16
push
das
imulb
jbe
mov
mov
mov
das
cmp
mov
cmp
inc
jmp
inc
push
out
pop
bound
lea
xchg
ds
pop
sub
lret
loopne
or
stos
sub
call
sub
sub
jo
popl
ljmp
cli
mov
push
lock
lock
int3
pop
sbb
loope
imul
sub
cwtl
pop
mov
jmp
push
add
adc
wrmsr
addr16
jle
add
add
inc
mov
sub
ljmp
add
out
loopne
mov
popa
add
ljmp
inc
cli
dec
in
lock
scas
test
pop
imul
mov
movsb
cmpsb
subb
outsl
mov
sti
xor
jo
adc
sar
jo
pop
add
inc
sti
into
push
ret
dec
add
cmp
es
dec
int
fmul
inc
popa
arpl
xor
inc
cld
inc
adc
or
decl
outsl
mov
aas
aas
inc
divl
addl
and
mov
add
jp
dec
shll
and
jg
addb
sbbb
xchg
dec
mov
xor
dec
dec
push
lock
incl
nop
fs
mov
add
pusha
jmp
jne
jmp
shrb
or
int3
sbb
cmpsl
loope
xlat
decl
incl
inc
cmp
xchg
cli
nop
cmp
pop
rorl
test
aaa
and
mov
icebp
outsl
fwait
test
les
jmp
call
jge
lds
mov
push
push
inc
jg
pop
inc
das
movsb
jns
pushf
pusha
add
orb
jb
arpl
cmp
call
cld
pop
aad
push
push
and
in
movsl
sub
adc
add
jns
xchg
or
movsb
inc
out
and
and
out
mov
cmp
pop
push
int3
jl
or
bound
ljmp
jne
mov
enter
or
cmp
pop
jmp
ljmp
push
sbb
fnsave
pop
jnp
adc
mov
incl
loopne
inc
push
les
jo
and
jl
mov
mov
push
adc
mov
bound
stos
imul
mov
and
mov
je
add
rclb
inc
jecxz
movsb
aaa
std
or
jo
xor
nop
popf
fwait
mov
cmpsl
aad
pop
and
xorb
sub
lahf
xchg
dec
push
jg
call
or
sbb
mov
call
loop
dec
sub
les
xchg
dec
mov
loopne
sahf
and
in
pop
xor
sti
xchg
les
fcomip
clc
dec
clc
das
pop
in
push
mov
fcmovnb
or
inc
push
fwait
sbb
xchg
imul
incl
push
sub
es
stc
inc
pushf
and
stos
jg
add
jns
nop
out
fsubp
mov
rol
jl
cmpsb
outsb
push
out
outsb
dec
lock
dec
enter
pop
xor
jbe
rorb
dec
mov
push
mov
and
lcall
cmp
bnd
dec
xor
ss
nop
lcall
jecxz
pop
jb
mov
aaa
dec
sbb
shll
imul
shll
mov
push
mov
pop
out
sbb
insb
fadd
or
or
dec
pop
pusha
mov
dec
mov
mov
inc
cmpsb
xchg
fists
dec
popf
mov
std
xchg
sbb
pushl
std
cwtl
add
nop
ja
cld
in
pop
xor
out
jae
ficoml
stos
incl
out
inc
enter
adc
dec
ss
or
mov
test
lcall
inc
clc
popf
in
add
iret
cmp
data16
lock
cmpsl
nop
iret
pushf
call
lds
cltd
add
in
dec
iret
jle
int3
cmp
mov
jg
ljmp
mov
fwait
int
jnp
jle
jo
lods
pusha
ds
jnp
shrb
aas
rolb
pusha
push
test
shrl
popa
sbb
dec
outsb
mov
fwait
neg
neg
jno
scas
mulb
mov
adc
insb
fdivrp
push
clc
cmp
sahf
sub
hlt
les
nop
movsb
cmp
aas
insb
add
mov
adc
and
loop
std
ja
jnp
mov
lret
repz
faddl
lods
push
inc
sub
cli
mov
jle
mov
or
fadd
ret
ds
and
orl
xor
data16
inc
jge
jle
call
popa
bound
add
mov
push
xchg
mov
xor
sub
out
cli
outsl
mov
add
setle
xor
adc
add
inc
adc
mov
push
movsb
repz
lea
out
push
and
jns
std
icebp
add
stos
push
unpckhps
mov
jmp
int3
addr16
sahf
mov
cmpsl
or
add
add
lahf
aas
dec
outsb
jg
adc
test
iret
or
dec
or
mov
pop
sbb
fildl
jb
sub
or
dec
xchg
inc
insl
xchg
sbb
pushf
push
adc
jmp
or
cwtl
cmp
jno
nop
arpl
nop
add
xchg
add
nop
pop
hlt
push
push
xor
add
lods
popf
inc
divl
inc
push
fadds
push
nop
addr16
je
push
fcom
pop
or
fisubrs
mov
and
push
jb
sbb
push
sbb
and
sbb
andl
mov
mov
add
shlb
ret
test
es
daa
loopne
decl
dec
dec
adc
jecxz
adc
or
cwtl
pop
inc
jmp
hlt
inc
rcrl
xchg
sub
jmp
add
insb
add
sbb
test
shl
fstl
dec
ss
push
or
mov
add
mov
dec
inc
dec
dec
sub
inc
repz
sbb
cmp
aaa
std
fadd
popf
cs
dec
out
and
dec
int3
jmp
es
popf
jg
fbstp
sub
push
cmpsl
fwait
pop
sbbb
inc
jae
ja
in
sbb
decl
jmp
xor
es
xchg
inc
divl
xor
add
inc
dec
fs
enter
call
insb
divps
cmp
lcall
sub
call
adc
mov
add
cmp
xor
js
pop
xchg
add
pusha
mov
aam
or
outsl
mov
xlat
sti
popa
cmp
cmp
aas
rcll
ljmp
inc
fdivrp
inc
clc
inc
add
push
and
mov
inc
pop
mov
js
pop
or
inc
or
mov
enter
outsl
test
mov
sbb
pop
movsl
lret
pop
inc
mov
outsl
cmp
jp
repnz
add
das
cld
pop
cltd
and
inc
add
add
lock
subb
dec
nop
add
sub
xchg
add
add
adc
inc
push
add
movsl
movsl
inc
idiv
mov
jmp
int3
push
lock
mov
jae
cmp
test
call
cld
call
je
xlat
push
les
push
nop
pushf
repnz
add
or
leave
and
icebp
xchg
decl
js
and
jnp
cmp
je
xchg
imul
mov
clc
mov
lcall
jmp
filds
and
repnz
cli
jmp
adc
dec
jno
adc
pop
and
mov
sbb
and
cmp
mov
and
or
aaa
ds
in
cmp
add
sub
mov
dec
pop
cltd
dec
push
inc
sbb
cmp
push
pop
dec
mov
and
add
and
pop
hlt
or
fs
add
adc
xor
je
faddl
xor
daa
stos
in
inc
push
sub
sbb
nop
push
sub
scas
stos
mov
out
cs
push
aaa
cs
add
mov
inc
dec
inc
testb
xor
cmp
pop
hlt
inc
ljmp
xor
inc
sub
push
push
xchg
and
and
jmp
xor
stos
jmp
cli
inc
mov
shll
dec
fiaddl
pop
rol
out
push
xchg
aaa
mov
mov
rcr
jb
cmp
leave
cmp
leave
push
jb
inc
loopne
aaa
xchg
or
push
push
sbb
mov
fcmovne
or
sbb
sbb
or
inc
dec
push
push
pop
clc
incl
and
xchg
dec
pop
adc
and
pop
sub
add
or
lret
ljmp
out
add
dec
push
mov
push
std
insl
fidivrs
push
lcall
inc
in
push
pop
push
sub
aam
cs
mov
add
fs
loopne
call
js
out
testl
sahf
ss
nop
stos
out
xchg
mov
push
mov
push
jo
jmp
adc
clc
scas
popf
nop
sbb
push
jb
and
stos
adc
push
outsb
orb
mov
dec
mov
das
mov
inc
cwtl
dec
bswap
fdivrs
pop
mov
hlt
mov
lock
and
xor
mov
enter
lcall
mov
sbb
pop
loopne
lret
mov
sub
rorl
add
mov
pop
sub
mov
mov
rcl
cvtps2pd
cmpsl
cmp
icebp
add
mov
imul
fildl
or
push
faddl
popa
add
xchg
iret
pop
pop
aam
imul
push
jp
mov
dec
lahf
cli
fildll
ljmp
dec
mov
cmp
addb
adc
filds
js
in
scas
push
nop
or
xor
inc
decl
add
mov
add
sbb
divl
add
imul
dec
and
mov
ret
mov
sbb
in
cmpsb
push
and
pop
push
pop
adc
push
std
jmp
pop
loopne
and
sbb
cmp
cs
add
mov
and
or
inc
fs
outsb
jmp
push
jo
lcall
insb
loopne
leave
jbe
lahf
and
push
and
loop
sbb
es
fs
push
xchg
pop
mov
ljmp
jl
int3
flds
and
push
push
jl
push
popa
mov
or
push
jg
decl
or
dec
mov
xorb
pop
dec
push
mov
fwait
xor
cmp
pop
int3
pop
mov
mov
shll
js
icebp
pop
mov
pop
aaa
pop
and
jl
test
addl
dec
mov
enter
and
pop
movsb
cmpsl
and
pop
sarl
mov
and
jmp
xor
jecxz
dec
cli
push
ljmp
sub
dec
movsl
mov
scas
mov
inc
sbb
mov
aaa
rorb
adc
dec
dec
push
or
adc
adc
loop
repnz
mov
or
setns
shll
call
xchg
push
dec
jge
xchg
mov
pop
jnp
sbb
inc
inc
adc
jb
adc
stos
incl
sbb
adc
mov
sbb
js
test
inc
fs
dec
imul
xor
lcall
add
pop
adc
sbb
sbbl
cli
push
gs
fcomip
jno
imul
and
jns
mov
imul
and
outsl
je
fildl
enter
push
push
mov
shll
dec
xor
in
pushf
mov
jl
rorl
adc
and
int
jo
pop
sbb
xchg
dec
mov
adc
int3
dec
cmp
pushf
inc
inc
sub
mov
loop
push
psubq
popa
insb
push
inc
jo
scas
inc
lods
in
imul
sub
sub
and
cmp
ljmp
in
sub
lea
movsb
xor
sub
xor
pop
xchg
or
mov
and
fisttps
push
dec
insb
test
adcb
sti
das
lret
xchg
xchg
addb
or
jae
and
mull
dec
insb
adc
repz
test
or
test
ss
xchg
inc
rcrb
fisubs
mov
std
cmp
mov
mov
sbb
sub
add
pop
fmul
push
push
inc
inc
cmp
push
mov
xlat
incl
cmp
add
pop
xor
and
sar
inc
ret
mov
inc
or
js
adc
aas
je
pop
push
or
jl
adc
or
or
movsl
int
rorl
into
cs
jmp
adc
mov
movsb
and
mov
add
mov
mov
mov
das
or
mov
adc
or
xchg
lock
imul
inc
pop
bsf
leave
mov
adc
gs
and
or
ds
jg
fstpl
ja
adc
or
cld
push
orl
subl
xchg
mov
aam
mov
test
lcall
push
movsb
xchg
sarb
xchg
pop
or
add
dec
and
and
and
icebp
inc
cmp
fisubrl
xor
in
xchg
testl
jg
ljmp
sbb
xchg
add
adc
mov
and
call
pop
push
mov
dec
mov
arpl
or
adc
push
bound
fcomip
idiv
addr16
add
les
adc
dec
leave
inc
or
lcall
inc
xor
and
hlt
adc
repnz
xor
ljmp
pop
push
test
xchg
cmp
mov
xorb
adc
mov
cld
adc
std
call
jae
mov
sub
sti
jne
je
imul
ljmp
cmp
cmpsl
sbb
xor
rorb
add
les
xchg
and
fstl
xor
push
ss
push
sub
or
loope
xchg
or
cli
and
add
inc
mov
shll
loopne
xor
sub
or
aas
inc
cmp
sbb
cld
lret
pushl
xchg
mov
sub
or
add
xchg
jle
mov
ljmp
icebp
cmp
mov
xchg
clc
adc
mov
popa
pop
hlt
cmp
mov
xor
aaa
or
insl
call
rclb
dec
sahf
xchg
pusha
add
incl
mov
xchg
mov
push
imul
out
test
dec
jg
cld
jae
xchg
sbb
cmpsl
movsl
stos
ss
add
xor
adcl
and
mov
add
mov
rolb
push
and
call
and
or
call
xchg
xlat
lcall
rol
and
jne
addl
and
dec
jmp
outsl
pop
dec
dec
or
add
mov
jae
xor
jecxz
push
test
or
dec
sbb
das
mov
mov
je
ds
mov
decl
jge
rolb
xor
sub
add
call
clc
inc
mov
call
cld
mov
aam
push
mov
ja
movzwl
adc
dec
inc
and
dec
push
mov
xor
fs
xchg
hlt
ljmp
push
add
rorl
daa
in
or
dec
pop
es
jb
jg
lret
addl
aas
and
sbb
inc
iret
xchg
imul
insb
inc
movsb
sti
stos
cmp
cmpsb
das
call
iret
push
xor
mov
lods
leave
add
push
jmp
inc
popa
jecxz
and
test
decl
pop
sarl
cmp
adcb
jo
loop
and
fiaddl
sbb
fwait
ljmp
cli
push
jae
aam
sub
mov
push
xchg
pop
pop
inc
cmp
pop
sahf
sub
incl
popf
mov
int
push
add
ret
rorb
mov
and
jns
dec
inc
push
js
jmp
fnstsw
pop
je
mov
pop
cmp
sub
pmuludq
nop
sbb
jle
call
cmp
mov
cmp
push
inc
add
in
rol
jmp
mov
dec
mov
mov
mov
fistps
nop
mov
and
ja
call
pop
mov
sub
movsl
cmp
sub
aaa
test
or
jmp
or
push
jne
mov
adc
push
mov
in
cmc
pushl
sarb
mov
lea
xlat
sub
fisttps
add
cmp
mov
xorl
add
xchg
lcall
dec
cmp
insb
xchg
xor
test
cmp
test
jmp
loope
sub
lcall
dec
aas
inc
adc
dec
dec
jl
or
jb
fs
push
idivb
jae
xchg
mov
sub
aam
sbb
fadds
and
inc
dec
aaa
mov
cmc
insl
jmp
jo
sbb
in
loop
ljmp
ljmp
je
sahf
jns
push
mov
sahf
inc
mov
jle
add
in
add
incl
sbb
test
outsl
enter
fisubl
test
adc
push
lea
sti
and
stos
test
or
lods
xchg
jno
sbb
cmp
fwait
fs
mov
cwtl
add
jle
xor
incl
jno
adc
bound
push
mov
add
mov
mov
sbb
mov
es
subb
and
sub
fwait
mov
jno
cmpsb
call
nop
jno
orl
movsb
add
and
lock
adc
decl
loopne
jge
daa
sub
mov
sbb
sbb
push
cmpsb
push
lahf
xchg
fsubl
jo
std
push
mov
xchg
jo
sahf
jae
sahf
and
dec
sbb
mov
add
jb
xchg
pop
gs
mov
mov
mov
popa
ja
popa
mov
je
je
sbb
push
psadbw
or
in
xchg
mov
icebp
jg
sbb
pop
cmp
sti
fistps
jmp
jbe
adcb
cmp
and
sbb
test
call
lcall
push
xchg
and
push
je
mov
dec
mov
inc
pop
push
xchg
mov
incl
pop
rorb
xchg
sub
ficompl
sub
mov
and
dec
test
pop
movsb
testb
add
jg
decl
sbb
pop
lods
inc
xchg
and
sahf
or
out
jmp
adc
imul
push
pop
adc
adc
fcoms
in
lea
repz
lds
call
add
sbb
xchg
dec
sbb
inc
dec
push
call
or
add
mov
xchg
loop
and
sbb
xor
xor
jmp
pop
ja
call
clc
cwtl
cmp
and
and
sub
mov
mov
fwait
and
arpl
xor
fs
mov
pushl
enter
pop
dec
and
bound
cwtl
mov
aas
pop
pusha
rcl
mov
test
push
mov
aas
mov
pop
mov
cmp
add
je
or
adc
xchg
insl
fisubs
adc
add
incl
sub
dec
mov
shll
scas
push
test
mov
add
mov
jg
mov
inc
mov
mov
pushf
outsl
test
fdivs
ret
aam
xchg
xchg
and
pop
adc
dec
sarb
jne
andl
ret
dec
and
mov
out
mov
mov
add
sbb
pop
std
outsl
add
je
test
decl
cld
mov
adc
inc
negl
das
outsb
call
mov
or
sub
and
insl
fisttpl
int3
add
mov
sub
pop
std
fbld
jb
lahf
inc
outsl
mov
icebp
push
pop
cwtl
pop
inc
jbe
movb
sub
jnp
in
adc
call
nop
mov
mov
insb
push
repnz
lcall
mov
push
pop
xchg
sti
ja
sbbb
pushl
jge
insl
add
sub
mov
outsl
adc
mov
in
nop
xchg
or
or
repnz
push
jno
loopne
push
push
push
mov
xchg
pop
addl
outsb
fbstp
adcb
sub
in
incl
sbb
pop
sub
inc
push
out
jae
stos
ljmp
adc
cmp
push
filds
in
inc
ss
push
pushl
xor
and
adc
sub
fsubs
xor
dec
leave
test
cmp
mov
mov
sub
sbb
add
pop
pop
mov
jmp
cmpb
enter
lcall
ret
add
sti
add
inc
stos
aaa
std
incl
imul
lock
xorps
push
pusha
adc
loope
in
sahf
cmpl
ljmp
js
mov
xchg
push
lahf
push
xor
clc
ficoml
and
mov
call
test
and
mov
mov
arpl
push
pushf
add
test
adc
or
inc
mov
mov
daa
dec
je
push
call
inc
pop
cmpsb
ficomps
ljmp
xchg
je
lcall
leave
push
jno
push
cmp
sbb
test
jo
ret
sub
push
fwait
adc
outsb
add
pushl
shrb
and
sbb
mov
std
lcall
push
in
imul
pop
scas
sbb
jg
je
add
xorb
stos
mov
in
jb
xchg
call
mov
pushl
add
cmp
insb
jge
cmp
mov
xor
stc
je
add
call
jnp
subb
cmp
sub
movswl
cmp
sbb
pusha
into
int3
in
outsl
xchg
shl
out
icebp
xchg
test
decl
pop
xorb
dec
testl
out
jmp
mov
sarb
lock
jo
sub
jg
lcall
push
scas
cmp
add
push
test
out
add
test
insb
adc
dec
cmpl
or
lock
push
dec
sbb
pop
xchg
sar
rcll
dec
cmp
pop
test
jmp
mov
push
popa
add
scas
stos
loopne
js
gs
inc
add
jbe
das
pop
sub
sbb
pusha
ret
dec
lcall
mov
insb
add
inc
pop
add
push
jo
sbb
dec
pop
sahf
push
jmp
ljmp
add
bound
dec
pop
int3
rorb
jg
push
mov
and
fcoms
lcall
and
pop
pusha
cmpsl
inc
add
sub
mov
sbb
pop
lock
lcall
or
cmp
add
stos
jge
sbb
push
and
or
mov
pop
and
sbb
clc
dec
mov
aad
cmp
xchg
pushl
cli
ret
xor
push
push
fiaddl
adc
inc
loop
xor
lcall
mov
and
xchg
fiadds
ffreep
std
scas
fisubs
lret
sub
cmp
add
jmp
scas
rclb
or
loope
jmp
ficomps
paddsw
mov
call
addb
xchg
js
or
movsb
pop
in
dec
push
pop
hlt
sub
jge
sarl
pushl
push
fcoml
xlat
add
jno
loopne
subb
fisttpl
inc
lret
addr16
add
call
mov
enter
and
jmp
movb
pop
lcall
sbb
jnp
inc
mov
xchg
enter
lcall
dec
mov
rolb
push
push
inc
inc
sbb
jl
inc
pop
out
fdivrl
enter
iret
cmpsb
scas
xchg
mov
fbld
ret
sub
and
dec
outsl
int3
sbbl
pop
testb
fwait
push
push
and
jg
sahf
sbb
mov
dec
cld
lcall
push
in
jg
call
dec
subb
cs
pushl
cmp
mov
mov
out
subb
jne
addb
adc
imul
adc
and
pop
cld
fdivs
insl
pop
sbb
dec
push
aaa
je
cli
sahf
jb
nop
sub
pop
sarb
or
ss
cmpsl
cld
and
mov
cli
decl
push
ljmp
lcall
out
pop
jnp
decl
push
xchg
sti
subl
data16
and
mov
cli
inc
xchg
in
sbb
push
les
push
mov
add
mov
pop
cmp
dec
inc
mov
mov
lret
pop
inc
pusha
jg
ds
jae
pop
sbb
das
aas
popl
incl
ss
pop
cmp
bound
int
xor
inc
and
ret
adc
add
enter
dec
jle
aas
or
dec
test
add
pop
inc
loop
inc
xor
insb
cld
adc
push
ret
ja
aas
push
mov
jae
add
enter
or
fmuls
adc
out
cmpb
adc
incl
mov
rcrb
incl
fisttps
pop
inc
ret
pop
push
mov
inc
jmp
shlb
add
sbb
add
scas
xor
cmp
fistps
or
jmp
and
stc
imul
and
decl
cmp
or
popf
sbb
popa
sar
scas
adc
inc
jno
jmp
insb
or
aas
lcall
icebp
mov
xor
test
inc
rcrb
out
in
shlb
pop
mov
pop
jg
or
incl
incl
mov
inc
dec
mull
mov
cld
ljmp
into
daa
dec
and
cs
popa
test
sub
enter
or
mov
mov
push
add
popl
ss
dec
inc
pushf
and
ljmp
mov
push
push
dec
je
add
jmp
cmp
negb
jg
sbb
and
ljmp
je
add
adc
or
xchg
aas
adc
daa
mov
push
sub
mov
sbb
dec
gs
popa
jle
and
xchg
push
lods
loopne
adc
pop
pop
dec
mov
es
es
jle
mov
out
clc
inc
push
dec
ret
cli
mov
fcompl
xor
cmpsl
sub
add
sbb
ljmp
xor
add
mov
xchg
insb
scas
addb
sbb
movsb
ljmp
test
mov
sti
adc
insb
in
leave
push
aad
aas
xchg
fmul
js
ret
scas
dec
jg
loope
push
je,pt
xchg
jecxz
movsb
into
mov
out
adc
fstpl
xchg
nop
movsb
incl
insb
pop
je
push
push
dec
ret
rcll
lock
ret
pusha
and
add
incl
and
sbb
mov
subb
add
dec
adc
add
ror
jge
clc
je
sbb
lods
mov
dec
rorb
push
and
mov
inc
inc
decl
inc
push
inc
inc
pop
mov
pop
push
mov
aaa
sub
xor
sub
cs
inc
pop
mov
push
xchg
inc
cs
lcall
mov
adc
add
pushf
and
push
call
inc
dec
rsqrtps
sbb
in
mov
add
sarb
leave
popa
push
jle
push
test
mov
cld
adc
mov
sub
daa
xchg
adc
push
fs
insl
xchg
or
scas
int
xchg
and
aaa
jb
aaa
aaa
movl
je
xor
movsb
lock
mov
bound
jae
test
repnz
call
movsb
mov
and
mov
les
in
jo
push
push
push
faddp
jmp
pusha
add
insb
xchg
sub
lret
adc
mov
adc
aad
or
scas
dec
and
rorb
decl
ds
outsb
pop
ja
jae
daa
cmp
push
push
and
lcall
cmp
adc
jmp
bound
add
cli
mov
xor
sub
arpl
sbb
jmp
jl
loopne
cs
cmpsl
call
test
cwtl
outsb
or
mov
xor
mov
gs
push
push
pop
cmp
idiv
ljmp
push
outsl
xchg
cmpsb
xchg
xchg
addb
jle
sub
lret
dec
imul
sbb
fidivrl
mov
cmpsl
add
incl
mov
mov
pop
xchg
cmp
jne
pop
imul
ja
inc
cmpsl
scas
iret
out
fsubs
jp
sbb
daa
or
pushl
jno
and
inc
push
aam
cmp
push
jo
loopne
add
pushl
push
or
loope
or
inc
and
ss
adc
ret
movsl
jp
mov
sar
lcall
repnz
sub
data16
pusha
insb
dec
cmc
sbb
mov
sub
and
aam
loop
add
pop
sbb
bnd
mov
and
decl
movsb
xchg
loop
jbe
mov
cmp
sub
jg
mov
mov
or
dec
add
mov
dec
jne
decl
sub
out
mov
xchg
sbb
cwtl
push
jg
imul
pop
lock
cmp
insl
fwait
adc
jge
ljmp
mov
cld
and
adc
clc
dec
outsb
pop
enter
mov
push
lods
pop
mov
test
mov
lock
pop
cmp
adc
cmp
lcall
jle
or
pop
cmpsl
sbb
cmp
jg
pop
adc
push
enter
stos
add
or
adc
out
stos
xor
jns
jo
inc
cld
pop
ljmp
sbb
dec
mov
jmp
dec
rolb
or
cmp
in
and
decl
mov
jecxz
daa
dec
adc
push
xorb
cmp
call
add
jo
and
or
and
mov
xchg
nop
pop
stc
xchg
push
xchg
ss
pushl
cwtl
and
daa
mov
adc
pop
push
inc
and
jmp
shrb
xor
sbb
inc
decl
push
shll
and
mov
dec
out
sbb
pop
pop
fwait
scas
xchg
aad
jae
lcall
dec
and
popf
movsl
xor
push
lods
sbb
mov
repnz
ret
pop
imulb
cmp
loop
loopne
imul
adc
pop
sub
xor
rolb
dec
cmp
push
std
mov
jge
or
cs
sbb
adc
lcall
outsl
sub
add
lret
add
mov
and
test
lods
jg
rcrb
push
enter
arpl
pop
pop
daa
and
mov
cmp
movsl
add
push
sti
lcall
xchg
bound
enter
pop
lods
push
and
in
ret
pop
cwtl
in
mov
inc
fisubs
jle
out
enter
mov
sub
in
jmp
or
mov
rorl
insl
dec
stos
and
aad
mov
cmpsl
pop
xor
popa
jmp
adc
push
fcoml
dec
sahf
ljmp
clc
inc
xlat
daa
mov
xor
or
lcall
jne
ss
lcall
sarb
inc
clc
pop
lea
loopne
add
xor
sbb
incl
scas
popf
mov
and
adc
fwait
aam
fs
sbb
icebp
cmp
aaa
adc
lcall
push
jne
sub
aaa
and
call
pop
sub
dec
mov
movsb
lods
mov
xor
dec
lcall
xor
sbb
ljmp
les
in
xchg
pushf
jns
in
pop
cli
lcall
pop
mov
orl
and
inc
xor
or
mov
mov
pop
or
ljmp
idivl
js
sub
iret
insl
ficomps
push
dec
push
dec
sub
mov
aam
incl
mov
push
cmp
sarb
inc
xor
out
mov
cmp
sarl
and
sub
push
xorb
jl
xlat
add
cmp
aas
andb
movsb
sub
push
je
pushf
or
mov
jmp
cmp
pop
or
cs
pop
push
lahf
ljmp
clc
lock
adc
inc
and
add
or
fwait
mov
add
mov
push
in
inc
outsb
je
mov
push
xchg
scas
popa
inc
sahf
sub
rcrl
sbb
mov
sub
hlt
ljmp
pop
fiaddl
xlat
bound
push
loopne
call
xchg
jl
imul
add
push
add
outsl
and
decl
mov
fdivr
cmp
sahf
movsl
or
insl
sbb
and
adc
stos
decl
out
sbb
pop
fidivl
add
scas
add
or
adc
sbbl
add
xchg
bound
dec
sbb
insl
clc
xchg
incl
adc
xlat
adc
popa
or
inc
leave
push
push
fildll
dec
call
add
andl
adc
lock
pushl
aam
pop
push
popa
insb
xor
popa
jns
nop
pop
sbb
sub
daa
cld
mov
sbb
mov
mov
lcall
push
or
mov
and
roll
dec
adc
sub
cmp
addl
or
repnz
mov
lods
xchg
into
jno
je
inc
mov
test
cmpsl
xchg
std
data16
and
push
leave
push
jb
and
jmp
in
jmp
add
shrl
jb
sub
dec
xor
movb
addb
ljmp
aam
cmp
cld
push
clc
scas
cmp
call
and
sub
add
fcoml
and
pop
mov
scas
decl
push
push
jo
xor
sysret
sbb
add
mov
or
jae
add
sub
xchg
incl
mov
inc
xchg
mov
lock
dec
xchg
xor
pop
fisttpl
cli
add
pop
xchg
inc
or
cmpsl
movsl
aas
add
ljmp
test
in
push
sti
push
clc
adc
mov
or
and
std
fstl
xor
add
daa
mov
dec
add
and
pusha
dec
or
mov
mov
dec
jecxz
xchg
xor
pop
call
jbe
lahf
add
call
mov
inc
adc
push
mov
add
cmc
xor
mov
jmp
ret
push
cltd
jg
or
cmp
jg
cmp
jbe
aaa
add
jp
jle
fcmovb
add
fisttpl
and
adc
stc
or
and
test
je
lahf
or
call
and
ja
lea
mov
push
add
dec
xor
or
sub
jle
add
frstor
xchg
pop
and
fsubs
ja
add
add
jle
or
cmp
xor
call
sbb
imul
lds
cmp
es
xchg
sub
fadds
inc
inc
add
jg
and
int
mov
imul
mov
test
decl
pop
fcoms
inc
mov
add
clc
js
inc
inc
dec
dec
dec
sbb
sub
pop
fnstenv
lock
cwtl
sub
adc
call
sub
push
push
or
or
mov
mov
mov
pop
insb
jb
push
cmp
ficompl
cmp
daa
sbb
aaa
and
mov
cmp
aam
mov
push
js
or
out
insb
jns
add
jmp
pop
sub
lcall
test
call
scas
push
jnp
inc
ss
ss
or
jle
push
imul
jmp
subb
mov
rclb
cmpb
push
leave
inc
cltd
aaa
cmpb
adc
rsm
mov
xchg
cmp
and
ljmp
mov
add
cwtl
or
stos
cmp
adcb
sahf
out
je
insb
imul
mov
pop
nop
fstpt
mov
pushl
push
jmp
outsb
push
adc
xchg
xlat
inc
pushf
xchg
nop
sbb
xchg
aad
jge
aaa
cmp
in
add
fdivs
data16
fmull
mov
jle
cs
sbb
mov
and
in
dec
sub
sub
jl
mov
fists
add
xchg
xor
test
jmp
rcll
popf
cmp
xchg
or
adcl
pop
sub
mov
and
push
nop
js
sub
jg
mov
jg
jecxz
add
or
fldenv
sub
mov
outsl
pop
mov
push
mov
scas
test
pop
outsl
mov
decl
hlt
dec
mov
imul
testb
push
in
pop
and
inc
mov
and
cmp
out
mov
xchg
or
push
mov
xor
xchg
push
arpl
inc
fs
in
jg
sub
inc
add
sahf
sahf
xor
cmpsb
jo
jmp
cmp
pop
inc
addr16
jle
pop
imul
repnz
add
in
jle
mov
decl
andb
cli
sub
mov
adc
pop
filds
dec
pusha
cmpsl
sbb
mov
sbb
add
rclb
dec
pop
add
into
mov
inc
mov
pop
dec
sub
in
pusha
inc
xor
mov
lcall
ret
xor
inc
icebp
cmp
icebp
rolb
stos
xor
lods
sub
xor
sbb
push
in
sub
incb
pop
dec
or
cmp
mov
jle
popa
or
mov
or
scas
xor
mov
jnp
xor
mov
cmp
rclb
lcall
sub
dec
jo
xor
pop
lcall
mov
add
sub
inc
push
mov
jbe
jg
cltd
mov
bound
out
xchg
xorl
into
orl
push
popa
lret
dec
jge
or
cmpsl
pop
sbb
xor
add
sar
ljmp
sub
push
pop
inc
lods
std
push
fsubs
dec
push
adc
mov
push
nop
and
dec
mov
xchg
dec
or
outsl
mov
push
push
ja
enter
fisubl
stos
jae
ds
decl
imul
or
inc
push
push
jb
aaa
mov
adc
rclb
call
mov
push
cmp
ljmp
es
and
pop
jl
push
movsb
into
or
sbb
adc
in
add
xchg
pop
adc
sub
incl
cmc
and
push
je
lods
jne
repnz
mov
mov
mov
jg
adc
xlat
bound
pop
jl
push
test
mov
jbe
pop
pop
and
inc
push
repnz
fs
jle
hlt
cmp
jnp
call
incl
add
mov
add
hlt
or
popf
lods
aaa
iret
and
adcl
pushl
cltd
push
pushf
inc
imul
and
jbe
sub
sbb
and
add
push
dec
shlb
mov
test
xor
xor
es
push
and
outsl
and
push
dec
pop
cmc
nop
cmpsl
push
flds
in
mov
dec
scas
clc
push
pop
lds
cmc
xorl
int3
data16
fcom
mov
aas
das
jbe
mov
mov
fcompl
mov
ljmp
push
nop
roll
out
pop
mov
sbb
xlat
pop
cmp
pusha
das
xor
add
call
test
add
dec
jg
pop
jno
gs
jo
pop
push
or
lcall
push
add
loopne
decl
fmull
or
lds
sbbl
inc
cmc
ret
or
add
out
xor
loopne
cmpsl
js
jg
cmp
push
sbb
dec
and
push
add
xchg
insb
add
pusha
out
stos
hlt
in
sbb
sbb
es
call
xchg
iret
xchg
test
sbb
enter
inc
xor
sbb
out
outsb
xchg
inc
pop
cmp
push
sbb
add
add
mov
jp
pop
jl
dec
sbbb
mov
jnp
mov
call
shl
add
sti
aaa
jns
testl
push
addr16
sub
and
and
mov
xchg
sti
in
je
enter
mov
sub
pop
ds
ret
xchg
pop
jg
sub
xchg
fs
pop
mov
mov
cs
jmp
mov
dec
mov
add
leave
push
cmpsl
xor
ljmp
nop
xchg
jp
repnz
lock
mov
mov
jp
and
pop
hlt
push
mov
mov
and
cmpsb
clc
sbb
popa
fs
addr16
cmp
push
daa
pop
inc
xchg
cmp
pop
ljmp
cwtl
dec
cmp
call
imul
xchg
pop
jnp
adc
inc
rcrl
das
cli
dec
inc
lods
sub
jb
jl
jl
push
mov
xchg
jb
sub
add
jg
cld
lea
decb
ret
call
cld
out
xor
fdivl
jae
xchg
push
popl
add
xchg
insb
incl
cld
cmpsl
loopne
adc
jge
jle
mov
lds
jl
lock
mov
push
std
in
mov
inc
ja
xchg
add
cmp
dec
push
pusha
dec
adc
sbb
adc
insb
inc
ds
dec
inc
dec
push
push
loopne
jb
adc
fcos
test
pushf
pop
jl
nop
out
xchg
inc
je
cld
mov
incl
cmpsb
push
outsb
xchg
xchg
adc
sarl
jo
outsb
pop
xor
mov
nop
jne
hlt
adc
mov
sbb
lcall
push
mov
ret
adc
sub
cli
mov
add
xchg
jg
movsl
push
aaa
pushl
subl
mov
pop
mov
xchg
repnz
lea
test
sub
mov
lds
dec
mov
inc
out
adc
or
dec
cmp
adc
call
sbb
xor
frstor
insl
jne
adc
lods
scas
enter
cmp
rcr
sub
ljmp
mov
jl
push
add
enter
push
pop
lret
cmpsl
ljmp
hlt
dec
popa
fisubrs
sahf
in
and
idivl
or
ret
cwtl
jns
fisubrl
in
pop
sub
or
mov
ficompl
out
mov
clc
and
cmp
mov
decl
mov
jecxz
sbb
loop
popa
cmp
aam
insl
pushf
and
dec
sbb
jg
add
pop
inc
test
mov
js
call
roll
lea
cli
or
mov
jo
rcrl
fwait
jp
fwait
clc
lcall
add
or
pop
push
test
outsb
ss
cli
lcall
mov
lods
xchg
subl
out
push
and
stos
lods
bound
dec
cmp
scas
push
sbb
into
outsl
pop
shlb
push
sbb
cmpl
in
sahf
shrb
movsb
ljmp
xchg
cmp
rcl
sbb
adc
adc
xchg
adc
ljmp
mov
push
inc
cmpsb
mov
pop
dec
or
je
dec
lcall
xor
adc
sub
cmp
mov
leave
mov
push
xor
jg
inc
add
testb
mov
sub
imul
cs
add
mov
push
enter
add
aad
gs
inc
add
orl
andb
jle
sub
xchg
cmp
push
or
jg
rorb
push
aad
or
ror
adc
dec
iret
lea
daa
sbb
sub
dec
adc
inc
mov
cld
imul
data16
inc
loop
pop
push
inc
call
sub
push
sarb
push
lret
sbb
push
icebp
pop
push
pop
call
push
and
out
push
insb
push
mov
and
or
and
ret
sbb
test
mov
mov
decl
or
add
pop
and
cmp
in
jp
jnp
jmp
mov
lcall
add
out
pusha
adc
mov
mov
nop
cmp
ljmp
sub
pop
addr16
xor
imul
js
fs
inc
cmp
pop
pop
test
adc
xor
jg
fsubrs
sub
test
sbb
mov
sbb
inc
das
inc
sub
fistl
repnz
mov
adc
and
dec
mov
mov
outsl
sbbb
sub
nop
ja
test
cmp
push
aas
fcomip
dec
mov
push
xchg
arpl
fsts
pop
add
scas
mov
sub
jmp
jmp
sar
insb
mov
rcrl
or
decl
das
sub
icebp
fldenv
xor
and
punpckhbw
mov
jns
icebp
out
mov
cld
pop
loopne
jmp
xor
mov
fisubs
sub
or
inc
push
addb
push
sbb
ljmp
and
test
repnz
jne
test
mov
pop
inc
inc
cmpb
ljmp
mov
mov
leave
push
inc
ljmp
movb
fsubs
jl
or
andl
aas
xlat
and
add
xchg
jae
push
fwait
cmpsb
sub
ljmp
sbb
cwtl
xchg
adc
adc
mov
mov
jno
mov
push
xor
pop
pop
xchg
aam
imul
xchg
scas
xchg
faddl
pop
negb
xor
add
rcll
xchg
mov
dec
ljmp
orl
or
les
jg
lcall
dec
or
inc
pop
push
mov
mov
sub
ret
jle
add
lcall
or
add
pusha
fwait
mov
xor
add
incl
xor
add
mov
xor
testb
test
adc
mov
stos
add
and
adc
aaa
cld
daa
inc
shrb
aad
add
decl
das
or
and
sbb
popa
test
loop
xor
lcall
xor
sub
les
fwait
clc
decl
lock
insb
pushf
xor
les
pop
jne
sub
out
add
ljmp
push
clc
cld
ret
mov
push
ret
adc
jne
stos
push
jle
pop
hlt
mov
icebp
aaa
cmp
and
xor
lcall
rcrl
inc
shlb
dec
mov
xor
add
imul
add
pop
pop
sbbb
adc
mov
clc
push
clc
jg
add
jl
mov
aas
or
cld
mov
xor
add
inc
sbb
das
dec
and
push
mov
and
pop
hlt
pop
movl
fwait
mov
pop
cli
inc
je,pn
inc
inc
repnz
jl
or
sbb
or
dec
ficoml
inc
inc
orl
jl
clc
pop
mov
and
movsl
andl
cmp
inc
sahf
neg
inc
ret
cmp
mov
xor
push
mov
push
jp
scas
push
inc
out
adc
ljmp
bound
pop
pop
push
incl
mov
pop
push
in
mov
and
jmp
push
imul
decl
add
gs
pop
rolb
ja
sub
jmp
sbb
outsb
ljmp
and
xor
call
jg
lcall
testb
in
pop
ljmp
je
movsl
jmp
stc
sete
or
dec
mov
rcr
inc
rcrb
push
nop
mov
dec
imul
mov
test
or
adc
pop
cs
pushl
pushf
jp
lret
in
je
and
add
xchg
getsec
cli
inc
std
stos
jge
lea
cmp
adcb
loope
fstpt
mov
lea
movsb
add
xor
out
sbb
mov
push
push
cld
adc
sarb
idiv
incl
adc
rorb
cmp
xchg
mov
pop
in
cmpsb
mov
clc
mov
mov
adc
push
adc
pop
test
mov
mov
loope
scas
or
ret
imul
add
and
xchg
pop
push
insb
test
adc
push
inc
sub
inc
push
lcall
add
jecxz
mov
and
jmp
sbb
jae
jno
loopne
xor
jg
ljmp
dec
rcll
bound
or
daa
xchg
fcoms
nop
push
dec
sub
mov
sub
mov
les
cmp
push
dec
jb
pop
outsl
scas
mov
pop
push
inc
pop
ret
dec
pop
add
xchg
xor
jg
decl
out
jle
mov
adc
jbe
and
sub
push
sub
call
jl
pop
inc
out
scas
adc
jne
and
je
and
mov
out
jbe
fs
lods
sub
hlt
call
movsb
cmc
in
or
loopne
adc
addr16
clc
mov
inc
loope
jne
jo
lcall
mov
rorb
or
mov
sbb
or
icebp
add
leave
enter
testb
xchg
push
inc
hlt
cld
roll
or
call
rclb
pop
mov
jmp
sub
jg
fwait
dec
test
push
mov
inc
das
les
push
ljmp
sub
add
pop
mov
arpl
rolb
mov
ljmp
lods
test
pop
push
in
pushf
cwtl
mov
mov
pop
cs
inc
mov
jg
push
dec
popa
out
ljmp
jnp
les
add
push
and
orl
movl
call
mov
sbb
ret
andl
mov
lahf
scas
ret
outsl
jmp
xchg
rcrb
fnstcw
int3
jnp
or
enter
mov
movsl
cld
incl
cltd
fisubl
mov
sahf
arpl
clc
subb
mov
incl
adc
outsb
pop
pop
push
cmp
jne
and
sbb
jmp
lcall
fldt
xchg
xor
xchg
push
inc
loopne
lock
dec
inc
fiadds
rcrb
fildl
sbb
sarl
pop
data16
dec
jg
mov
inc
testb
inc
decb
or
sub
test
xor
ljmp
or
sub
fbstp
jno
mov
cmpsl
ret
adc
pop
dec
push
insb
dec
scas
mov
ss
mov
adc
pushf
push
jp
pushl
imul
addb
insl
enter
jb
ljmp
pop
cmp
sbb
test
test
xor
adc
mov
loop
xchg
fwait
cwtl
test
pusha
jmp
or
int3
jnp
ljmp
iret
dec
repnz
rcrb
add
xor
dec
mov
fcomp
sbb
mov
jne
aas
jmp
icebp
lcall
mov
mov
or
mov
mov
cmpsl
shrb
ja
nop
adc
dec
jno
lea
and
cmpl
push
test
call
clc
pop
lcall
lea
enter
in
or
ljmp
or
icebp
and
xorb
push
cwtl
inc
mov
inc
setle
add
add
xor
add
es
rcrl
sbb
bound
cwtl
incl
jo
add
shlb
xor
repz
sub
aaa
cld
lcall
cwtl
add
clc
cmc
test
insl
pusha
mov
negb
addr16
add
mov
dec
out
mov
add
je
dec
les
add
jg
cs
cmp
insb
add
jl
or
test
and
pushl
lgs
sub
das
push
pop
ljmp
movsb
jbe
mov
push
cmp
int3
mov
sbb
mov
cwtl
test
mov
sub
cmp
sbb
jae
mov
ds
mov
cmp
xor
add
jo
sub
ljmp
popf
mov
imul
push
les
push
add
cmp
jmp
int
bound
push
add
outsb
mov
jl
in
jne
sbb
xchg
decl
inc
jne
push
push
cmp
addr16
dec
pop
mov
cwtl
js
incb
decl
dec
rolb
or
lea
adc
cmp
pop
pop
icebp
or
xchg
lcall
push
push
add
mov
jg
jl
or
pop
ret
mov
push
and
xor
add
xchg
sub
ljmp
adc
cltd
or
pop
aam
cmpsl
stc
mov
or
rclb
add
fwait
mov
les
stos
dec
jecxz
stc
test
fwait
sbb
fldt
js
inc
rcr
adc
in
jmp
fsts
lock
lock
sti
pop
pushf
jecxz
mov
inc
inc
mov
cld
lods
je
lock
in
movsl
jbe
dec
pusha
daa
call
loopne
push
cwtl
cld
nop
fisubs
js
mov
xor
push
jmp
mov
and
call
lods
aad
lods
gs
test
popf
dec
cld
jbe
call
or
xchg
adc
xchg
in
pop
sti
dec
cmp
adc
nop
fcmovne
es
and
fnsave
mov
movsb
test
out
mov
lods
mov
inc
push
imul
imul
or
lcall
out
cli
lcall
push
lahf
loopne
mov
mov
add
ljmp
insl
sbb
jmp
adc
add
dec
lock
add
call
push
scas
pop
add
test
inc
scas
decl
push
lret
les
push
and
cli
pushl
or
adc
inc
sahf
orl
aaa
add
and
je
push
stc
bound
ret
jns
ljmp
push
pop
sub
arpl
cmp
jl
or
incl
inc
xor
dec
add
arpl
pop
mov
popa
decl
stc
test
xchg
lret
pop
dec
sbb
nop
lcall
pop
pop
sub
lcall
sarb
and
or
lods
jp
adc
sub
insb
xor
jo
add
lods
decl
nop
movlps
sbb
lock
add
sar
out
test
notb
testl
aaa
mov
ljmp
jmp
inc
push
mov
or
push
inc
dec
inc
cli
inc
ss
add
add
mov
add
or
cli
decl
fsubrl
test
fildl
dec
and
adc
adc
movsl
cmp
loopne
stc
jae
jmp
xchg
call
jg
sbb
cltd
sbb
decl
mov
test
incl
in
dec
aam
or
rcrl
loopne
dec
int3
lret
cwtl
or
mov
xor
aam
sub
mov
cwtl
dec
adc
pop
adc
pop
or
jbe
xchg
or
sti
or
inc
gs
ret
add
aam
dec
std
ja
mov
ret
pop
mov
outsl
popf
xor
cld
neg
mov
xchg
inc
add
pop
mov
mov
ror
inc
push
shrl
clc
jo
cmp
shll
adc
pushl
loopne
test
and
xchg
jmp
push
and
or
and
or
mov
or
mov
add
mov
xor
icebp
inc
jle
insl
rolb
les
pop
xor
loopne
push
sub
sbb
xor
jmp
subl
mov
ljmp
rcr
jbe
shrb
add
pop
rorb
dec
xor
or
push
add
cs
loope
xchg
push
mov
xor
add
cmp
dec
adc
data16
lea
bound
sbb
js
sbb
lods
mov
decl
popa
cwtl
push
mov
mov
mov
pushl
div
les
imul
push
add
jmp
das
mov
mov
je
jl
pushl
adc
cmp
inc
dec
leave
mov
aad
mov
dec
cs
call
push
fisubl
mov
cmpsl
scas
xchg
push
jo
sbb
mov
decl
xchg
rorb
adc
bound
inc
dec
call
mov
outsb
test
inc
pop
xchg
andb
jns
and
mov
and
arpl
inc
add
ret
repz
adc
cmp
test
push
lock
or
cmp
std
adc
mov
mov
sub
push
lods
pop
notb
jle
ljmp
inc
adc
jg
add
inc
add
mov
gs
ljmp
shrb
imul
fmul
enter
sub
cmp
add
mov
inc
pop
decl
jne
xor
mov
lcall
scas
lods
jecxz
pop
sub
fiadds
add
imul
cltd
cmp
out
clc
lcall
dec
getsec
xchg
movsl
ja
adc
testb
scas
hlt
jge
mov
jmp
incl
cld
call
add
push
inc
das
test
push
dec
mov
ja
sar
adc
cmc
cltd
inc
mov
decl
xor
outsb
aam
stc
addb
or
nop
mov
adc
fildll
and
sbb
cld
outsl
fwait
push
jge
ds
adc
jge
mov
and
pushw
repnz
fcomip
incl
xor
and
xchg
jb
daa
test
loope
shll
push
sub
pushl
pop
hlt
xchg
push
push
inc
push
push
dec
push
xor
jle
ljmp
movsb
adc
stos
mov
pop
sub
mov
pop
test
pop
inc
out
adc
rorl
call
adc
mov
call
lcall
lret
or
lods
ret
pop
jns
and
push
faddl
cs
hlt
ja
pusha
mov
push
dec
call
pop
ret
cs
cmpsl
add
sbb
test
inc
cmp
dec
pop
test
push
adc
addr16
outsl
pop
xor
mov
mov
mov
inc
sub
mov
sbb
jg
or
add
add
add
push
jns
ljmp
push
insb
call
jb
dec
push
push
push
xor
sub
in
rcrb
js
add
ljmp
lods
shrb
and
nop
sub
push
or
cmp
sbb
or
sub
es
clc
ja
daa
jl
jmp
ljmp
pusha
add
push
mov
push
mov
test
jg
fwait
pop
jg
sbb
mov
dec
movsl
fstps
or
or
call
popa
ror
mov
add
or
adc
mov
and
iret
inc
and
ljmp
sbb
mov
pop
mov
push
inc
dec
push
inc
in
dec
add
pop
push
xor
fisttps
sahf
jnp
arpl
addl
pop
pop
pop
scas
nop
sbb
and
js
pusha
ret
les
jmp
les
jg
mov
out
nop
pop
sti
stos
cwtl
leave
daa
in
pop
push
cmpsb
pop
cmp
jbe
sarb
daa
fcmovnb
mov
call
inc
pop
sub
add
or
push
mov
incl
adc
dec
cmp
jb
sbb
pop
jb
call
xchg
jo
lea
pop
push
test
jle
filds
sub
add
pop
push
lods
cmp
jge
jno
mov
sbb
pop
or
push
xlat
inc
mov
sub
decl
xchg
pusha
icebp
pop
into
push
push
push
mov
fcoms
mov
dec
ret
fs
lods
test
pushl
shlb
fsubr
clc
pop
sub
sub
test
in
mov
adc
ds
mov
stos
jge
sbb
inc
cmp
xchg
sub
scas
les
aam
pop
call
xchg
test
pop
adc
adc
fimuls
push
inc
pop
pop
push
or
dec
add
sarb
enter
adc
mov
stos
push
jmp
xchg
sbb
xchg
xchg
add
mov
xor
fmuls
jnp
dec
dec
jp
call
call
test
dec
cs
leave
mov
mov
rcr
cmc
pop
pop
lcall
fistl
push
fs
aaa
xchg
imul
push
je
dec
mov
arpl
inc
std
aaa
add
pinsrw
jo
push
ljmp
mov
push
xchg
insb
cs
outsb
iret
leave
pop
mov
inc
inc
fs
in
out
pushf
pusha
clc
call
pop
pop
push
hlt
sarb
pop
out
mov
or
dec
rorb
cli
imul
jp
mov
and
ds
sbbl
popa
mov
cmp
xor
fldenv
test
js
or
out
cwtl
inc
loopne
xchg
decl
pushf
movsb
aas
add
add
mov
repnz
inc
xor
cmp
adc
jo
cmp
add
dec
lods
lock
cmp
inc
cwtl
xor
push
xor
and
test
pop
and
mov
pop
rolb
aaa
std
decl
and
nop
les
lock
xor
nop
loop
loopne
push
pop
add
adcb
ljmp
and
and
xchg
cmp
lods
xor
cwtl
sbb
pushl
dec
repnz
movsb
clc
sbb
and
sbb
xchg
test
pushl
sar
mov
clc
jmp
popf
inc
cmp
pusha
daa
pop
movsb
push
cld
lods
mov
adcb
add
das
xorb
dec
lret
or
test
push
push
cwtl
or
xchg
lret
test
or
push
test
adc
adc
adc
rol
sub
hlt
xchg
mov
xlat
inc
pushl
mov
loopne
or
pop
lods
add
sbb
cs
in
sbb
or
push
pop
or
ljmp
sub
rcr
inc
ja
addr16
fildl
mov
mov
mov
lcall
decb
notl
and
lahf
mov
cld
sbbl
mov
outsb
adc
mov
outsl
inc
pop
cli
decl
pop
sub
cld
inc
push
mov
aad
icebp
mov
or
mov
std
addr16
repz
and
fildll
mov
or
adc
jmp
mov
push
mov
mov
loope
faddl
push
and
into
loope
decl
pop
es
or
add
xchg
or
outsl
clc
mov
mov
fs
mov
rcrb
fmull
pop
dec
fwait
call
xchg
and
aas
or
push
sub
sub
pushf
sbb
dec
popa
dec
push
fstps
lcall
leave
mov
add
sub
add
or
inc
dec
scas
sbb
fs
add
cmpsb
lcall
mov
test
ja
pusha
and
pusha
inc
cs
pop
pop
sar
lcall
repnz
mov
or
insl
inc
xchg
mov
and
ljmp
xchg
sbb
sbb
aaa
in
mov
sbb
lock
mov
mov
sahf
xor
add
adc
mov
ljmp
or
mov
fiadds
mov
pop
popa
js
inc
jnp
or
mov
test
jl
hlt
das
cli
xlat
pop
and
dec
in
and
mov
mov
pop
sub
outsl
mov
loope
and
jl
mov
cmp
aas
sahf
inc
cmpsl
add
inc
mov
mov
mov
lcall
pop
fistpll
cld
mov
sbb
jl
cltd
mov
bound
mov
or
fildll
ret
ljmp
inc
pop
jmp
lcall
jnp
and
imul
outsb
push
cli
decl
fisubs
loopne
cmp
ljmp
mov
pusha
add
scas
sub
adc
jb
subl
ljmp
decl
sbb
mov
cmp
les
rcl
gs
ja
adcl
add
push
out
adc
mov
and
mov
repz
push
outsl
mov
decl
and
sbb
inc
adc
rclb
jle
sbb
imul
xor
xchg
sub
push
xor
pushl
xchg
movsl
decl
push
push
je
inc
data16
invd
out
push
adc
sub
jmp
cltd
and
mov
inc
push
and
or
insl
cld
setg
or
aad
inc
adc
decl
sbb
mov
stos
pusha
mov
insb
sahf
xor
fiadds
jmp
pop
subl
xchg
gs
sarb
mov
lret
jg
pusha
mov
fnstenv
sbb
adc
xor
mov
fbld
decl
jb
or
cmp
fisttps
insl
lret
pop
scas
xor
xchg
dec
pushl
adc
push
les
and
bound
clc
jle
adc
jge
imul
push
pop
push
pop
orb
xor
pusha
xor
addb
pop
mov
cli
jg
or
outsl
sti
imul
mov
xchg
mov
push
sub
mov
add
lods
add
cmpsl
mov
cmp
outsb
mov
push
add
inc
std
incl
test
in
or
pop
ds
inc
fimuls
nop
mov
std
mov
and
inc
mov
popa
setne
pop
cmp
or
pop
sub
iret
mov
add
adc
scas
shll
add
rcr
cld
test
ficoml
jne
jns
andl
xchg
sub
sahf
mov
shrb
orl
ret
jmp
add
es
pop
stos
fs
adc
mov
incl
jbe
notb
add
xor
lret
ds
popa
mov
cmpsb
inc
sarb
popa
into
or
pop
xchg
mov
orb
mov
sbb
ja
mov
mov
or
add
xor
mov
into
arpl
fcomip
aaa
ret
mov
push
jo
add
cmpsb
xor
mov
or
dec
daa
add
pop
and
push
push
loop
push
push
repz
add
add
les
cli
loop
daa
inc
dec
call
push
lret
and
cmp
stc
add
mov
leave
add
or
jmp
dec
cs
push
enter
jg
push
bound
mov
jbe
add
cmpsl
mov
psrad
sar
or
test
jb
adc
add
bnd
pop
add
into
decb
ret
mov
add
psubb
and
ret
movsl
pop
int
ljmp
popa
leave
adc
int
fnsave
lcall
shlb
add
adc
dec
aas
enter
sbb
jg
push
push
cmpl
mov
les
cmp
ljmp
or
aas
sbb
dec
pop
int3
xchg
icebp
sbb
fimuls
inc
push
scas
mov
out
mov
add
pop
call
xor
int3
incb
pop
sbb
cmp
je
lock
and
out
mov
cmp
enter
jnp
cmp
dec
movsb
push
cwtl
arpl
jg
push
or
call
inc
pusha
scas
insb
ss
fistps
into
hlt
inc
adc
dec
out
insb
pop
fmuls
js
faddl
mov
pop
cld
ds
shrb
int3
dec
sub
mov
mov
push
cld
xchg
add
dec
data16
lcall
jge
jl
or
mov
in
das
sub
xor
adc
icebp
outsl
popf
and
aaa
push
pop
lock
mov
jns
out
add
jg
pop
and
add
pusha
adc
sub
jg
call
test
adc
cmpsb
dec
add
test
sarl
aaa
dec
decl
add
nop
push
das
mov
xor
mov
dec
cli
jmp
in
rolb
sub
jbe
incl
jno
and
or
aaa
loopew
pop
imul
hlt
pop
pop
sub
jl
rolb
adc
mov
and
movsl
decl
xor
aas
repnz
decl
or
jg
push
mov
cld
aam
jg
lcall
shlb
popa
push
gs
jecxz
dec
leave
sbb
xchg
push
stc
loope
hlt
addb
incl
testl
cltd
sbb
push
xchg
add
sbb
add
push
popf
and
pushl
mov
dec
or
dec
les
shll
pop
or
cwtl
cld
sbb
mov
mov
incl
inc
mov
cld
nop
out
sub
jecxz
push
ja
pushl
fstl
jb
cmpsl
and
pop
outsl
xchg
scas
dec
shlb
jnp
fs
pop
push
mov
leave
add
mov
sbb
and
push
imul
aas
sahf
ja
xor
subb
arpl
fildll
imul
popa
mov
push
sub
add
xchg
outsb
mov
jmp
popf
push
inc
add
andb
call
pop
pushf
mov
sub
pop
jb
sub
mov
and
das
cmp
push
xchg
mov
aas
mov
lea
cmp
incl
xchg
add
push
rorb
iret
or
pop
sub
push
and
scas
pop
lcall
incl
cmp
clc
push
movsl
jge
sbb
incl
imul
xor
mov
call
xlat
sub
jbe
and
or
mov
mov
pusha
push
sub
fs
mov
lahf
jb
push
aam
test
lret
ss
pop
incl
pop
fcomps
aaa
insb
xchg
lcall
nop
xchg
fwait
mov
movsb
cmp
sub
mov
cs
mov
pop
or
dec
dec
sbb
int
incl
push
inc
insb
fldl
or
or
sarb
test
mov
pop
xor
inc
ffreep
push
shll
aad
sbb
cmp
pop
sub
and
ljmp
jmp
cld
mov
aam
fcoml
ficompl
xchg
aaa
mov
dec
shl
sbb
pop
sub
ss
dec
sbb
push
mov
inc
inc
mov
adc
xchg
mov
mov
test
bound
popf
or
lods
push
sbb
push
adc
mov
mov
mov
inc
inc
iret
inc
ss
jg
fimuls
aam
lods
rolb
sbb
mov
or
fbstp
sub
lods
enter
inc
push
in
add
xchg
fmul
fdivrs
inc
cmp
add
incl
lods
mov
test
xchg
push
push
mov
push
xchg
dec
dec
pop
jb
mov
cwtl
mov
dec
iret
or
daa
inc
shr
call
imul
lock
int3
mov
fidivl
or
jmp
orb
out
xor
jg
cmp
je
cli
add
into
xchg
decl
push
sbb
cmp
cmp
aam
rclb
out
clc
sbb
or
call
shl
orl
movsl
mov
ret
mov
push
fisttps
inc
lock
sti
lcall
or
pop
pusha
bound
nop
inc
inc
out
dec
push
inc
scas
mov
push
pop
enter
hlt
inc
inc
nop
or
or
add
incl
mov
cld
pushf
push
add
xor
repnz
out
mov
ret
pop
inc
int3
push
rcl
sbbl
bound
xchg
rcll
jg
decl
add
mov
adc
shlb
push
pop
add
orb
cmp
jg
push
popa
add
push
adc
bound
pop
inc
loopne
sub
test
xchg
scas
push
ss
das
in
dec
in
mov
nop
stos
ja
call
rcll
push
repz
or
mov
or
mov
xchg
dec
call
stos
xchg
fs
add
adc
adc
lock
in
push
xor
adcl
lcall
sub
sub
jo
imul
sub
daa
rcl
pop
inc
xor
rorb
dec
add
pop
and
push
sbb
jg
pop
or
mov
int
pop
mov
push
pop
mov
pop
mov
pop
hlt
jmp
pop
jbe
jo
jne
cmp
and
cs
dec
xchg
push
test
sbb
push
adc
add
sarb
std
push
dec
scas
inc
push
or
push
outsb
ret
jg
movl
dec
insl
cld
mov
rcrl
lods
or
and
dec
decl
add
push
test
es
sbb
lcall
sbb
xor
rorl
getsec
add
adcb
decl
push
or
cwtl
andb
xorl
clc
and
sub
pop
mov
test
movl
jae
add
sub
call
lret
jbe
xchg
or
jnp
enter
shrb
gs
nop
fbld
and
pop
dec
mov
cmp
dec
aam
decl
mov
xchg
rol
cmp
mov
inc
cmp
fiadds
decl
mov
lods
adcb
loop
cmp
or
sub
movsb
pop
push
je
gs
or
mov
and
test
aaa
adc
and
adc
or
dec
dec
mov
add
imul
jmp
fcomip
jg
and
shrb
cmp
mov
mov
pop
decl
or
xor
dec
sbb
lret
push
das
jmp
push
sti
jmp
fwait
xchg
incl
or
and
mov
popf
inc
xchg
or
jle
jmp
push
ficompl
lret
xchg
sbb
lods
popf
mov
js
jl
jp
pop
xchg
faddl
add
push
fprem
and
cmp
sbb
incl
fistl
jp
jl
push
es
cmp
add
test
lcall
pusha
popa
loopne
xchg
hlt
dec
popa
jl
xlat
popa
sub
jae
addr16
out
push
hlt
outsl
stos
sbb
in
call
stos
add
es
mov
add
call
ret
jnp
inc
lret
call
cmp
sub
mov
xlat
sub
mov
stc
push
add
adc
aam
loope
out
mov
sub
inc
sub
jo
into
lcall
cmpl
adc
jg
mov
lds
cwtl
je
inc
lds
test
jne
cld
fldcw
lcall
iret
shr
mov
pop
mov
and
xchg
cmp
lds
incl
xor
lahf
sbb
xchg
jo
fmull
popf
je
pushl
inc
sbbb
out
push
popf
sub
mov
cmpl
inc
lcall
jle
pusha
lcall
inc
push
ljmp
movsl
mov
test
movb
test
movsb
hlt
dec
fdivr
and
aas
mov
adc
mov
pushf
lahf
and
inc
call
bound
or
adc
mov
fsubrs
jmp
incl
xor
and
sbb
inc
add
in
or
mov
jo
lcall
and
jb
add
lds
cmp
fidivl
les
cmp
and
outsl
add
stos
addr16
sbb
sbb
mov
lcall
mov
les
xorl
inc
and
xchg
pusha
inc
inc
xchg
jg
movsb
lcall
mov
adc
mov
sub
adc
adc
aaa
fs
dec
jge
add
add
fsubrs
dec
add
dec
dec
push
sbb
dec
jmp
jg
push
jg
pushl
pop
dec
cmp
add
out
xchg
xor
pop
mov
dec
filds
adc
enter
pop
adc
ret
and
lcall
jg
mov
jo
and
mov
pop
or
pop
cli
jbe
out
decl
in
jl
add
leave
inc
dec
lods
cwtl
loop
or
frstor
je
aad
lahf
add
lret
addb
mov
mov
xchg
cmc
bound
mov
push
jns
lcall
je
xor
mov
pop
dec
cmpsl
rcrb
insb
popa
cwtl
lea
movsb
nop
nop
imul
das
decl
out
add
aam
pop
push
or
mov
test
int
jo
add
and
xchg
xchg
mov
cmp
sub
push
test
inc
add
push
icebp
es
xchg
rclb
into
test
ficoml
xchg
rolb
xchg
mov
xchg
cld
cmp
loope
mov
adc
in
push
adc
in
sub
or
jmp
mov
test
pusha
inc
or
xchg
imul
inc
adc
and
xchg
loopne
ret
movsb
outsb
push
sbb
jg
push
mov
jmp
daa
jne
sub
pop
jbe
or
xchg
mov
mov
mov
add
popa
add
int3
pop
cmc
fnsave
mov
push
cli
and
or
cmpsb
aaa
dec
outsl
cli
inc
push
adc
dec
mov
fs
inc
inc
es
inc
cs
lret
mov
xchg
add
push
xchg
sub
enter
inc
or
xor
dec
or
add
sbb
add
push
ret
or
mov
mov
je
aaa
pop
rclb
hlt
pop
push
mov
clc
int
clc
sbb
dec
jg
push
cmp
inc
ret
pop
cmc
lcall
sub
pushf
add
inc
pop
cmpsb
mov
add
mov
clc
fwait
or
dec
enter
pop
das
add
or
add
addr16
adc
sbb
loop
call
lock
popa
push
scas
daa
test
lea
mov
sbb
mov
dec
or
push
loopne
push
mov
cmpsb
mov
pusha
adc
fisubrs
rol
int
mov
push
std
mov
dec
fdivrs
and
in
fbstp
sub
jne
xor
push
fwait
sbb
ljmp
push
cli
daa
pusha
jo
jge
cmp
inc
push
test
and
mov
movsl
cli
ror
and
cs
les
mov
add
lcall
push
cmpsl
inc
push
iret
add
aam
sbb
sbb
xor
lcall
incl
pushf
sub
pop
adc
not
cmp
aas
repnz
mov
adc
call
sahf
mov
jbe
and
test
lods
aaa
inc
lods
pop
or
mov
aam
xchg
push
loopne
mov
sahf
pop
or
sbb
data16
mov
cmc
imul
or
and
add
push
fwait
pop
add
pop
out
das
and
lock
mov
or
adc
std
jmp
mov
mov
cmp
adc
imul
pop
in
pop
mov
lock
xchg
and
and
mov
pushl
push
jge
inc
push
es
pop
jne
inc
inc
shlb
inc
push
jecxz
and
out
or
mov
jmp
test
aaa
xor
and
adc
lcall
nop
lock
inc
pop
das
fsubl
xchg
pusha
mov
nop
xchg
fcomps
inc
jmp
dec
fbld
sub
loope
cmpsb
movsl
ljmp
call
outsl
add
push
push
es
mov
jg
jmp
push
mov
adc
rorl
and
xlat
xchg
inc
out
fisubl
inc
mov
scas
pop
mov
xchg
scas
clc
sub
add
sbb
sahf
bound
push
cwtl
test
out
cmpsb
outsl
cmp
sahf
push
push
mov
inc
and
sbb
xchg
sub
fcomip
pop
fwait
pop
cmp
cld
push
fldcw
js
decl
add
mov
cmp
rorb
lock
nop
shrb
insb
add
add
or
and
add
aaa
cs
or
movsl
mov
xchg
xchg
dec
inc
dec
ss
pushl
sbb
inc
dec
push
or
js
push
sar
and
mov
add
call
js
in
and
jle
dec
push
cmpsl
mov
movsb
jge
ret
dec
or
ljmp
xchg
jo
out
xchg
cmp
ret
or
dec
pop
das
add
mov
add
xchg
fadd
in
lcall
insb
pop
mov
ficompl
arpl
add
les
mov
sbb
inc
add
jmp
dec
mov
les
call
push
xor
push
repnz
jg
xor
add
and
sbb
pop
das
mov
or
test
xchg
cmp
cli
sbb
frstor
xchg
loope
pusha
lea
push
movb
lea
add
cmp
test
lcall
popa
mov
aaa
imul
addl
jnp
shrb
sbb
and
test
push
sbb
fldt
mov
sub
aaa
dec
xchg
xor
push
cmp
fs
pop
dec
in
xchg
nop
pop
fsubs
iret
pop
xchg
and
sbb
mov
fisttpl
decl
fsubs
pop
xor
ret
call
test
pop
inc
xor
push
mov
push
sub
jg
sub
add
sbb
mov
inc
adc
call
inc
loop
imul
cwtl
mov
fwait
adc
or
frstor
jmp
or
inc
and
stos
fwait
pop
rcll
repnz
lods
mov
xor
jne
sbb
scas
cli
mov
xchg
mov
lcall
jmp
sti
mov
shrb
dec
das
jl
cmp
jl
mov
or
out
je
filds
jecxz
mov
xor
sbb
and
out
ja
decl
arpl
mov
mov
dec
sbb
fs
fisttps
rolb
push
sbb
mov
xchg
std
dec
and
mov
les
pushl
or
das
pop
xor
sub
and
es
fdivl
std
decl
cmpsb
inc
daa
filds
mov
xor
test
pop
jmp
xchg
imulb
clc
adc
je
or
fcomip
add
mov
jmp
xor
aas
sarl
popa
mov
xor
ret
out
mov
out
pop
jns
sub
popa
mov
mov
sbb
aaa
daa
mov
jb
dec
clc
decl
subl
mov
popa
and
or
int3
jmp
lcall
out
pop
sbb
mov
dec
stos
mov
enter
inc
js
fld
nop
lcall
cltd
rorb
cmp
mov
jo
jns
xor
fcomip
frstor
lret
sub
out
mov
out
inc
test
lcall
jmp
in
rolb
adc
adc
pop
fcom
test
imul
fcoml
push
inc
ljmp
sbbb
loope
cmp
or
aas
ja
add
inc
femms
pop
lcall
jmp
sbb
pusha
dec
in
jmp
jo
adc
inc
daa
cmp
es
scas
xchg
je
adc
push
mov
lahf
dec
jb
xor
adc
sub
jmp
cld
mov
loop
inc
gs
pop
shll
ljmp
xlat
into
rolb
inc
add
or
push
add
push
push
lods
fdivs
jle
inc
jmp
cwtl
movsl
adc
push
push
decl
inc
push
mov
cmc
outsb
mov
push
loop
pop
adc
enter
adc
mov
hlt
jns
outsl
jl
sbb
decl
push
jno
push
jle
cmpsb
dec
enter
ja
mov
inc
jge
scas
xchg
icebp
fcmovnbe
mov
es
or
push
and
mov
pop
sub
test
fimuls
or
adc
ss
fcos
or
sub
hlt
adc
scas
push
jne
stos
inc
fcompl
pusha
and
inc
jg
dec
push
rcr
popf
adc
fs
xchg
dec
in
add
inc
call
pusha
jno
in
je
jecxz
mov
cmp
ja
out
mov
fwait
in
mov
jl
jg
jmp
push
lret
stos
mov
lods
or
js
jo
add
cmp
aaa
cld
ljmp
in
mov
int
shrb
repnz
jo
cmc
adc
pop
lret
cld
incl
push
popa
mov
popa
jl
nopl
sbb
jmp
call
sub
popa
jns
or
xchg
popa
ja
loopne
aaa
jp
ret
inc
add
add
iret
add
mov
mov
pop
rcr
repnz
jle
cli
push
lahf
lcall
call
fisubl
inc
adc
into
sbb
add
adc
sarb
inc
insb
daa
hlt
js
test
cltd
lock
pop
inc
jle
out
pop
jo
daa
rcrb
movl
pusha
loopne
out
fs
pop
loopne
lds
sub
pop
add
or
mov
pop
repnz
daa
lahf
call
call
add
out
cmp
pop
das
gs
sbb
mov
and
gs
or
push
int
lcall
push
push
or
das
add
and
add
ret
loope
jecxz
nop
jg
shll
mov
mov
mov
push
mov
decl
lock
in
rorb
call
call
cmp
std
jmp
mov
push
sarl
sub
outsl
add
cmc
mov
inc
icebp
adc
lcall
and
out
mov
cli
stc
jne
push
cmpsl
add
testb
and
data16
xor
fldl
push
in
xchg
adc
sub
repnz
icebp
popa
outsb
ljmp
pop
testb
xchg
and
lock
sub
imul
mov
mov
daa
orl
adc
movsb
insb
adc
out
mov
decl
add
cld
or
test
les
icebp
das
adc
repnz
cmpsl
sub
dec
sbb
mov
jns
mov
pushf
push
subl
sub
outsl
mov
stos
fs
push
push
sar
fsts
sbb
mov
pushl
dec
adc
outsb
test
dec
fmull
xor
test
pop
adc
cmp
jbe
mov
adc
nop
cmp
int3
sub
hlt
add
sub
addb
lea
pop
dec
pushl
xchg
orb
mov
test
fs
flds
adc
fs
mov
cmp
pop
pop
idivb
sarb
jg
xchg
iret
add
sti
xchg
add
orb
push
andl
pushl
mov
out
sub
mov
mov
mov
lods
add
jmp
sub
leave
cmp
dec
fwait
popa
sub
mov
sub
add
nop
add
inc
sub
jb
pop
add
hlt
mov
sbb
and
inc
sbb
cmp
decl
ljmp
and
dec
jecxz
mov
or
fisubs
and
stos
add
dec
pop
sbb
outsb
cmp
mov
testb
inc
inc
dec
mov
cmp
ljmp
inc
mov
xor
xchg
sub
pop
shlb
and
js
fstpt
rorb
les
sub
lcall
sbb
hlt
sub
dec
and
ret
je
jg
ds
mov
and
mov
mov
loopne
imul
decl
loopne
aaa
pushf
iret
rcll
mov
sub
jo
push
xchg
testw
jg
sub
dec
mov
movsb
jbe
jno
loope
fisttps
aam
fnsave
push
pop
push
xor
mov
dec
adc
test
mov
jne
sub
add
lods
les
cmp
sbb
call
orb
inc
seto
lret
push
xchg
sub
jg
lods
pop
push
inc
mov
pushl
testb
adc
adc
sti
lock
xchg
test
out
cli
push
inc
fists
mov
out
inc
jp
adc
dec
les
fistpl
clc
or
jne
fucomip
lods
lods
lock
mov
mov
lret
dec
ja
inc
outsl
pop
les
inc
lcall
sub
pop
sub
cmp
jbe
loopne
lcall
daa
push
leave
push
and
push
nop
test
dec
jecxz
mov
xchg
aas
sti
inc
xor
jns
repz
pop
movb
and
xchg
ja
cmp
and
in
and
mov
pop
add
mov
mov
ficompl
and
or
rolb
xchg
nop
mov
lcall
and
sbb
shrb
sbb
ljmp
cli
hlt
mov
data16
jo
sub
push
and
xor
ss
cmp
pushl
and
stc
in
sub
jbe
dec
pushf
out
dec
js
and
pop
inc
cli
and
iret
cmp
ds
mov
mov
insb
popa
dec
cs
mov
lcall
xchg
inc
loope
fdivr
loopne
sbb
sub
mov
fists
fcmovnbe
pop
xchg
ret
std
decl
inc
or
xchg
sub
ja
lret
dec
push
mov
aad
adc
or
jmp
test
xor
popa
add
shlb
cmp
or
mov
andl
test
inc
lret
ss
or
or
mov
pop
adc
or
and
add
jle
sbb
aas
adc
add
or
stos
xor
pop
cmp
xchg
movb
sti
mov
nop
pop
dec
dec
repnz
jg
lock
out
imul
cld
cwtl
loop
sub
and
int
int
out
jmp
push
cs
and
jbe
sub
sbb
sbb
dec
inc
and
incb
add
and
test
dec
lock
fistps
adcb
ljmp
inc
incl
movsl
sub
rol
inc
or
mov
cwtl
call
adcl
in
lods
push
js
and
push
sar
ret
popl
jg
xchg
dec
sbb
inc
and
add
subl
pop
data16
repz
ljmp
lret
add
or
add
pop
add
lcall
sbb
jne
sbb
scas
mov
push
lock
sub
nop
adcl
jnp
sub
pop
push
push
cmp
test
add
mov
adc
mov
cmp
decl
int3
jg
pop
les
adc
and
negb
inc
jmp
mov
dec
sbb
sub
clc
push
rcrb
and
inc
std
incl
xchg
mov
fisttps
mov
icebp
add
mov
pop
add
or
inc
xchg
or
add
or
inc
pop
hlt
outsb
call
mov
mov
inc
inc
cld
fnsave
jmp
adc
sub
jo
or
incl
and
mov
ret
xchg
lds
sbb
lret
mov
and
dec
cwtl
inc
ja
pop
cld
loopne
fisubrs
jbe
xor
sarl
movq
sub
incl
inc
orl
enter
pushl
pop
loope
xchg
add
or
jp
sub
xchg
cmp
movb
enter
inc
mov
sarb
jle
fmuls
aas
adc
je
dec
orb
pop
adc
outsb
incl
push
cli
fidivl
out
push
faddp
sbb
dec
scas
cli
dec
push
adc
and
add
test
inc
mov
mov
sub
stc
dec
push
enter
in
in
sub
sub
xchg
rolb
xor
rclb
cmpb
adc
mov
data16
mov
xchg
add
add
test
or
pop
idiv
outsl
jmp
mov
mov
push
mov
or
arpl
mov
xor
inc
pusha
or
jg
mov
add
cmp
stc
adc
addl
dec
shlb
rcrb
dec
dec
inc
cmp
mov
dec
pushl
loope
cmpsb
fistpl
movsb
jl
or
add
sbb
insl
dec
mov
add
pop
cmc
scas
nop
in
imul
sub
fwait
ss
push
add
call
add
pusha
cmp
jecxz
out
push
icebp
push
and
pop
testl
jg
out
push
jbe
popa
dec
xlat
jecxz
sub
xchg
lds
movl
mov
jl
in
mov
lahf
pop
sub
adc
and
scas
mov
mov
jne
test
add
jmp
insb
and
adcl
push
adc
sub
sbb
xor
cmp
scas
clc
sub
loope
fadds
push
sbb
pop
and
int3
repz
les
decl
adc
pop
into
sub
popa
lods
out
push
inc
add
lahf
lock
sti
mov
pop
inc
data16
dec
sarb
das
mov
movsl
or
and
clc
ss
popa
inc
sub
xchg
scas
incl
mov
rcrb
xor
movsl
xchg
add
inc
xor
sahf
lahf
scas
mov
pushl
in
cmp
mov
mov
mov
movsl
xorb
cmpb
stos
incl
dec
jae
clc
dec
mov
popf
adc
das
cmp
jmp
jecxz
add
idivl
sub
lahf
xchg
xchg
mov
call
pusha
outsb
push
pop
daa
mov
rorb
add
repnz
jns
dec
dec
ficoml
cli
decl
pop
jl
clc
push
add
dec
or
pop
addb
pushl
adc
cmp
cld
push
pop
fprem
les
out
and
xlat
mov
je
ficomps
loop
cmc
pop
add
pop
pop
rorb
jns
ds
lods
add
or
out
sbbb
cmp
fdivrl
push
jns
sub
sbb
movsb
jmp
lock
push
or
movsb
movsb
cld
nop
push
xchg
lock
clc
pushl
ret
rorb
mov
jnp
je
mov
out
cmpsb
jmp
jmp
orl
mov
and
or
jmp
cmp
xchg
les
repz
arpl
adc
adc
mov
sahf
enter
cmpsl
arpl
jno
mov
mov
add
add
dec
rolb
pop
loop
xchg
cmp
xor
lcall
mov
inc
cmpsb
push
mov
xor
xor
cmp
add
cmpsl
xchg
incl
cmpsb
scas
clc
pop
jne
lcall
and
add
or
aaa
push
fstpt
into
lahf
push
incl
xchg
insl
mov
xor
adc
loope
shrl
dec
movsb
adc
mov
les
mov
mov
jg
mov
jge
push
and
pop
push
test
xchg
cmp
pushl
aam
dec
dec
rcll
es
and
pop
in
sbb
or
sub
ljmp
dec
jp
addl
in
mov
popa
rcr
sbb
add
fs
xchg
dec
sar
fistps
in
imull
mov
jg
jno
or
mov
inc
or
addr16
or
scas
pushl
cld
jmp
fdivl
pusha
sub
call
or
pusha
pop
jle
mov
adc
push
adc
jle
dec
xchg
sub
adc
incl
cld
lret
cmpb
push
popa
or
std
incl
dec
jnp
daa
addl
sbb
movsl
shlb
cmp
ss
push
ss
aad
incl
sub
pop
add
pop
adc
or
xchg
sbb
adc
add
cmp
dec
out
clc
insb
sbb
out
cmp
out
clc
or
mov
pop
push
lods
sub
push
cmp
push
pop
jg
test
dec
push
xor
pop
push
sub
das
mov
and
mov
or
pushf
test
inc
call
aaa
xchg
jmp
or
xor
xor
xor
movsl
shlb
mov
cld
jns
jmp
sbb
pop
lds
clc
aaa
cld
dec
sbb
pop
inc
dec
fadd
mov
outsl
xchg
xchg
outsb
inc
add
cmp
fldl
sbb
xor
fidivs
clc
xchg
fs
call
lea
mov
es
stos
dec
lcall
stos
adc
clc
push
or
mov
iret
addl
enter
fs
mov
add
rolb
mov
mov
subb
mov
xchg
xorb
stos
pop
jo
sub
hlt
inc
stos
sbb
push
pop
es
jg
lcall
adc
nop
and
sbb
add
add
ljmp
mov
cmovbe
add
add
add
dec
sti
add
mov
adc
dec
jmp
fists
inc
mov
idiv
cmp
cmp
scas
addr16
cmpsl
mov
sbb
dec
xor
jg
or
cmp
xchg
outsl
adc
or
incl
add
cmp
push
hlt
shlb
pop
jbe
mov
xor
incl
sbb
cmp
jno
aaa
inc
insb
movsb
bound
add
pop
loope
jle
sbb
push
and
or
mov
push
mov
divl
out
inc
or
mov
in
jns
adc
cmpl
sahf
daa
sub
mov
lock
xor
jne
fwait
test
adc
sub
inc
push
popa
je
aaa
popf
mov
or
sub
loope
cli
mov
xchg
jg
dec
push
cmp
mov
hlt
mul
dec
adc
lret
mov
call
rcrb
inc
into
arpl
xor
lods
and
in
pop
sar
xor
push
mov
call
sub
ds
mov
movsl
sub
or
mov
pop
and
push
cmpsl
cmp
mov
jns
loope
sub
inc
inc
ret
cmp
mov
add
cmpsb
xor
es
clc
js
call
pushf
sub
jecxz
pushl
jecxz
and
aam
push
mov
movsb
jl
jge
addb
data16
sub
jmp
cld
cmpsl
push
and
ljmp
lock
mov
fstps
mov
pop
jb
pop
sbb
push
mov
and
ja
adc
mov
mov
rorb
adc
cltd
int3
imul
jecxz
decl
cmpsb
call
mov
test
dec
cmpsb
ds
daa
sbb
mov
lcall
adc
jmp
add
sbb
cmp
dec
cli
mov
or
loop
mov
ljmp
push
sbb
test
loope
sub
mov
jo
adc
cld
incl
aaa
mov
jmp
fisubrs
lock
jmp
cli
sbb
xor
pushf
sbb
add
sub
or
inc
cmp
cld
jg
add
shlb
push
or
inc
les
dec
fbld
xchg
add
jmp
mov
es
call
fists
xchg
inc
inc
add
sub
ret
or
and
call
test
or
xchg
mov
adc
mov
cwtl
lahf
or
pop
xor
ljmp
dec
cli
ja
cmp
push
adc
jmp
fbstp
push
cmp
dec
cmp
outsl
or
push
and
xchg
ljmp
movsl
rep
xchg
pop
mov
sbb
adc
dec
cmpsl
out
lahf
movsb
mov
push
or
cmp
dec
sbb
fdivr
ljmp
bound
out
popa
fildll
push
mov
mov
mov
testb
adc
div
sbb
enter
adc
jnp
jo
fdivl
std
call
push
and
inc
ja
xchg
push
lods
notl
enter
mov
mov
daa
jb
push
ljmp
pop
jns
les
jmp
rcl
add
cmc
xor
ss
pop
insb
loope
ret
inc
xor
test
test
push
ljmp
les
cs
and
mov
adc
fsubrs
mov
push
sarb
jmp
out
xchg
cmpsb
sbb
orb
inc
add
and
jl
push
xor
inc
ret
jp
test
mov
pop
std
call
dec
inc
daa
lret
adc
add
push
jns
and
pop
call
sbb
ds
mov
test
outsl
or
ljmp
cli
adc
adc
pop
ss
adc
push
ss
stos
in
jne
imul
cmpsb
fbld
mov
std
jp
cmpsb
adc
push
pop
dec
cs
incl
and
cmp
fsub
sar
mull
aas
les
lock
ljmp
cmpsb
jge
repz
push
cs
fdivrs
lds
cmp
rcll
jge
or
xor
sar
repnz
test
pop
cmpxchg
adc
mov
lds
ffreep
and
in
les
add
add
popa
jl
sbb
incl
les
cmpb
aaa
pop
test
xchg
sbb
push
xlat
decb
and
inc
push
mov
inc
repnz
ja
mov
xor
fldl
or
filds
push
mov
add
adc
push
push
ss
jp
ds
outsl
jmp
and
pusha
adc
xchg
xchg
jo
push
mov
jb
and
xor
push
adc
mov
add
sub
test
stos
inc
xchg
rcr
or
dec
push
jl
lcall
lcall
xor
adc
or
xchg
je
nop
or
ds
jge
pop
call
das
ljmp
or
sub
lea
cmp
fmull
inc
filds
push
mov
pop
jne
sbb
movsb
clc
cmpsb
fadds
mov
mov
sub
cmpsl
ljmp
xchg
inc
int3
sbb
xchg
xor
gs
mov
mov
adcl
fisttpll
shll
and
pop
inc
sub
mov
pop
cmpl
pusha
push
pushf
decl
cmpsb
add
push
adc
daa
inc
fmul
push
sbb
xchg
int3
mov
xor
sar
lea
push
clc
cmp
insb
mov
incl
addr16
cltd
popf
fs
add
adc
fwait
stos
decl
cmp
test
loopne
push
imul
push
jge
subb
push
push
cmp
mov
mov
and
rcrl
stos
out
pushf
pop
dec
pop
sub
cli
mov
mov
push
cmc
sub
ret
and
push
clc
movsl
pop
movsb
nop
and
add
xor
cmc
add
testb
pushl
xchg
rorl
pop
mov
and
mov
push
cmp
and
rcrb
das
cmp
sti
xorl
decl
inc
jnp
mov
sub
inc
es
or
mov
andb
call
pop
stos
cmc
iret
adc
xchg
hlt
lcall
mov
cmp
stos
loope
arpl
or
decl
push
dec
mov
adc
loopne
call
loopne
mov
dec
dec
shr
mov
pop
add
leave
push
lcall
push
or
or
inc
dec
ljmp
and
sub
in
dec
adc
lcall
mov
movsb
insl
xchg
jbe
mov
or
jp
ljmp
and
clc
bound
addl
xchg
sub
pop
scas
pushl
pop
push
add
call
mov
mov
icebp
add
das
clc
jmp
push
test
sbb
push
xchg
sub
orb
cmpsb
leave
test
or
in
mov
fisubrs
test
jg
cmp
das
dec
add
gs
push
jle
lcall
pop
test
lcall
inc
pusha
or
scas
sbb
mov
sub
movsb
cmp
push
dec
sar
xchg
or
fisubs
mov
loopne
decl
push
cmp
add
sub
pop
and
adc
pop
dec
mov
inc
mov
les
sbb
dec
test
push
jg
cmp
dec
xchg
push
push
cmpsl
sbb
xchg
jmp
pop
mov
and
mov
xchg
jmp
push
or
inc
fmuls
pop
idivb
pop
fistps
dec
stc
out
jne
pop
lods
sbb
push
loopne
xchg
fs
push
pop
insl
cmpsb
pop
sub
ljmp
mov
push
nop
je
push
jo
dec
adc
xchg
pop
and
xchg
call
cld
add
outsl
xor
sbb
adc
jno
pop
popa
mov
test
daa
lahf
fcmovnbe
je
pop
sbb
dec
sbb
xor
pushl
fmull
test
jne
das
jmp
push
add
dec
mov
ret
push
sub
rcr
shll
ljmp
por
pushf
pop
push
xchg
cmp
arpl
xchg
push
xchg
jbe
dec
fcompl
in
adc
ds
fmul
xor
lods
pop
xor
add
jmp
sbb
or
push
imul
fbstp
pop
out
lea
lcall
or
push
dec
clc
jl
in
jnp
sbb
jg
inc
pop
xchg
sbb
sbb
adc
ret
inc
mov
dec
sbb
adc
mov
ret
xor
sub
fwait
dec
ljmp
dec
data16
xchg
loopne
sub
sub
mov
aas
jmp
xchg
pop
push
dec
dec
cli
sbb
mov
incl
push
cmp
das
xor
xor
mov
cmpsb
or
adc
mov
in
aam
mov
das
pusha
ret
adc
test
dec
ret
ret
shlb
adc
add
call
jmp
and
aam
add
movsb
dec
lods
shl
call
mov
dec
out
xor
or
or
mov
loope
sbb
jg
test
sbb
push
ljmp
sbb
push
ds
inc
ljmp
push
pop
int
mov
jecxz
enter
shl
jo
std
inc
pusha
mov
es
add
std
fstpl
xor
adc
in
ljmp
nop
daa
jecxz
inc
aaa
fwait
popa
in
les
xor
dec
rcrb
push
out
fidivs
test
daa
mov
inc
and
cltd
jl
xor
orb
add
sbb
rol
pop
jno
pop
decl
jmp
add
addl
xchg
adc
lret
mov
stos
cmp
and
inc
xchg
ds
shlb
decl
sti
push
loop
inc
inc
pop
cwtl
mov
and
mov
loopne
dec
sarl
nop
cld
inc
or
call
xor
jg
int3
hlt
add
inc
cmp
clc
inc
cld
xorb
mov
jae
sbb
inc
into
lods
dec
xchg
call
pop
push
cmp
cmpb
inc
mov
rolb
idiv
push
adc
sub
ud2
out
or
mov
pop
xchg
lea
es
ja
pop
add
cmp
stos
fwait
out
cli
add
xchg
or
push
inc
mov
pushl
testb
mov
enter
insb
or
f2xm1
push
sub
pop
lcall
xor
rorb
shlb
sbb
sub
pop
in
mov
jne
shrl
pop
cmc
call
sbb
clc
and
fidivl
or
dec
fiaddl
ja
jnp
test
dec
inc
daa
int
scas
pop
mov
push
xlat
jmp
aam
add
pop
lea
cs
dec
aam
cmpl
sti
sbb
cmp
pushf
mov
push
imul
aam
sti
loopne
push
nop
and
push
insb
lahf
xor
dec
pop
mov
mov
aas
xchg
and
stc
pusha
das
mov
pushf
cmp
fcomip
jmp
mov
sbb
xchg
popf
lea
cmp
mov
hlt
call
mov
andl
lcall
mov
popf
xor
or
fmull
clc
add
sbb
sub
sub
adc
pusha
scas
sub
dec
lret
call
nop
int3
xchg
int3
decl
dec
cli
push
cwtl
xlat
notb
cmp
ss
push
dec
xchg
lcall
xchg
hlt
nop
out
lahf
or
xor
fnstsw
mov
sub
pop
cmp
out
xchg
xchg
dec
xchg
sbb
add
mov
xchg
hlt
pushl
push
sub
add
call
decl
sbb
out
jmp
push
pop
lret
jg
sar
ja
jo
mov
cld
mov
arpl
xchg
pop
clc
call
mov
sub
push
xor
daa
dec
dec
jmp
out
mov
scas
adc
aad
aam
add
add
xchg
or
xorl
add
arpl
addr16
ss
mov
incl
jle
cmp
data16
and
dec
ret
mov
into
mov
cmpsb
sub
sahf
inc
stc
jmp
and
jmp
jmp
mov
hlt
sbb
nop
movsb
mov
mov
out
pop
inc
cmc
adc
dec
xchg
popa
ret
or
xchg
inc
xchg
sub
jg
mov
enter
sbb
test
sub
iret
movsl
inc
insl
es
add
fldenv
das
mov
adc
push
mov
incl
rclb
add
mov
nop
mov
jo
insw
aas
clc
pushl
lcall
jns
sbb
movsl
loope
test
add
loope
xor
and
cmp
push
pop
and
and
into
fidivrs
pop
mov
andl
bound
fcmovnu
cmpsb
test
movsl
rorl
sub
sub
cmpsb
arpl
ja
mov
pop
mov
hlt
xchg
pmaxsw
fldcw
mov
outsl
dec
lcall
mov
sbb
sbb
rolb
icebp
jne
aaa
adc
sub
movsl
loopne
sbb
inc
adc
add
or
aaa
adc
pushf
sub
adc
fwait
sub
fnstsw
imul
xchg
rorb
and
jns
pop
outsl
or
xor
pop
je
dec
push
jg
lcall
cs
push
cmpb
orl
and
sbb
adc
pop
sarl
shlb
sbb
mov
cmp
adc
js
push
inc
stc
mov
call
cmp
xor
fwait
and
jl
lock
sub
or
or
fdivr
ljmp
and
dec
dec
jl,pn
ficoml
imul
xchg
dec
cs
push
cs
or
and
sub
push
pop
or
stos
das
jne
nop
mov
js
das
dec
dec
add
mov
addr16
push
repz
push
jno
in
mov
les
xchg
inc
mov
add
test
mov
sbb
inc
std
call
stos
sub
lea
sbb
mov
or
adc
jle
add
or
cmc
jle
lahf
nop
hlt
pop
sbb
jge
xor
pop
ret
fidivrs
in
or
lock
vmovapd
cs
jmp
mov
lods
cmp
sub
mov
sub
ror
insb
dec
cwtl
jbe
push
jg
jge
cs
add
mov
xor
or
es
push
jge
push
mov
ja
sub
xor
movsl
jns
nop
push
sub
pushl
cmp
cmc
fisubrl
pop
xlat
sub
inc
sbb
cwtl
or
mov
xor
mov
mov
mov
or
cmpb
lock
push
or
movsb
push
aaa
dec
adc
adc
sub
or
dec
inc
fdivr
jmp
dec
std
or
jo
xchg
fdiv
dec
jne
hlt
idivl
addr16
mov
sbb
call
int
imul
loope
add
sub
sar
add
pop
and
adc
mov
das
dec
insb
iret
scas
xor
jg
and
ja
shlb
int
lock
in
xor
incl
inc
loop
lock
and
sub
cmpsb
xchg
xor
jb
add
ljmp
iret
imul
dec
movsb
stos
and
add
xor
inc
sahf
xor
mov
iret
inc
inc
clc
jmp
loopne
push
jecxz
push
je
pop
wbinvd
sar
and
loopne
xlat
pushf
cmp
sbb
std
sar
mov
out
and
fildll
not
clc
pop
ja
iret
jnp
cld
jns
mov
nop
hlt
push
int3
pop
mov
jl
std
call
mov
movsb
xorb
mov
sbb
lock
jg
and
cmp
push
pop
push
dec
rorb
incl
add
popa
pushf
aam
pop
fistpll
out
sub
adc
les
stc
icebp
pop
or
pushl
std
loop
push
sbb
repz
or
test
mov
sub
pop
mov
incl
and
ljmp
imul
sbb
push
rcll
adc
inc
mov
and
call
sub
jno
or
add
dec
push
fs
sbb
sti
xchg
mov
cmp
or
xchg
ljmp
icebp
pushl
push
inc
dec
pusha
mov
arpl
xor
pop
push
cmp
adc
call
lods
and
in
fwait
add
xlat
jno
jle
in
mov
and
jmp
jmp
loop
mov
fcomip
fwait
dec
inc
adc
aad
test
push
pop
shrl
mov
incl
lock
push
lock
sbb
dec
add
sub
inc
movsl
pop
adc
dec
pop
adc
aaa
adc
pop
mov
adc
stos
les
loop
call
sarl
xchg
add
lods
and
cmp
inc
dec
test
aas
test
xor
imul
lods
pop
jno
or
pop
sbb
leave
hlt
dec
roll
xchg
inc
cmp
xor
inc
aad
or
or
stc
hlt
or
pop
das
and
inc
jmp
or
sbb
movsb
mov
add
sub
stos
sbb
and
sar
in
inc
or
and
sbb
inc
movsb
push
ffree
mov
stos
jo
xchg
sahf
dec
jmp
ffree
push
xchg
push
jmp
mov
std
call
mov
adc
in
mov
push
outsl
add
data16
test
sbb
cmp
aad
and
or
add
call
lock
cli
movsb
add
shll
and
hlt
ljmp
inc
imul
or
jnp
cld
pop
mov
push
daa
ror
ja
adc
nop
jp
pop
rcrl
mov
sub
inc
ja
in
loopne
pop
mov
clc
popf
fidivl
inc
and
scas
inc
add
mov
addr16
mov
xor
cwtl
sbb
adc
decl
add
pusha
cmpsl
call
popa
pop
cs
cmp
or
outsb
movsb
lcall
inc
cmp
aas
or
ljmp
mov
xchg
dec
sub
imul
add
add
dec
pop
incl
mov
shrl
mov
add
dec
cmp
mov
mov
sbb
inc
shr
cmp
cmp
call
or
push
push
pop
or
mov
jmp
mov
pop
adc
subb
andb
fisttpll
mov
push
popf
loope
sbbb
test
inc
xlat
add
jmp
mov
cli
in
add
adc
jl
inc
lcall
pop
lock
shrl
outsl
cmpl
adcl
rcrb
popa
cwtl
add
dec
fs
add
shll
decl
xchg
imul
add
push
pushf
jmp
mov
add
mov
adc
jg
sub
pop
xor
xor
call
or
cmp
sub
mov
inc
repz
sbb
orb
andl
mov
inc
scas
orb
add
xchg
repnz
sub
shl
push
jmp
mov
aad
popa
or
scas
or
clc
add
imul
add
cli
nop
cmc
loopne
enter
les
and
outsl
clc
push
jmp
jae
mov
jmp
push
sub
xchg
in
movsb
mov
jmp
insb
mov
pop
sbb
adc
push
addb
ja
push
sbb
mov
pusha
jecxz
pop
sbb
adc
add
inc
lcall
dec
adc
negl
leave
sbb
add
lock
call
xchg
inc
insl
xlat
lea
dec
adc
nop
cmp
iret
xchg
mov
mov
int3
fisttpl
addr16
cli
ja
imul
or
add
jg
rcl
add
jno
or
sub
mov
js
push
imul
sbb
sub
adc
popa
loopne
test
add
mov
fs
dec
rcr
lods
decl
test
sbb
shlb
add
outsb
dec
dec
inc
and
dec
dec
jmp
cli
and
test
xchg
mov
push
stc
shlb
push
notl
sub
in
dec
mov
pop
jl
aas
mov
xchg
sbb
jno,pn
jmp
inc
fidivrs
cmc
movsl
adc
fisubrl
sbb
and
andb
add
adc
xchg
sub
xchg
sbb
dec
lds
ljmp
or
mov
loopne
lahf
pop
sub
in
dec
jo
out
scas
and
cmp
jg
mov
cmp
inc
xor
xchg
and
pop
sbb
jle
sbb
lcall
jge
fsub
push
adc
push
js
repz
call
dec
pop
pop
push
ljmp
mov
das
mov
pop
and
ljmp
pop
xchg
or
pop
insl
add
lea
inc
adc
addb
orl
cli
stos
xor
pop
jb
push
mov
enter
adc
movsb
call
vfnmsubps
mov
jl
mov
xchg
and
adc
pushl
push
push
lods
arpl
jl
sbb
fists
push
push
add
dec
mov
and
push
icebp
xor
push
dec
outsl
clc
imul
jg
scas
clc
fildll
imul
mov
scas
adc
push
leave
inc
out
sub
sbb
je
call
mov
cwtl
test
dec
flds
insb
jecxz
inc
leave
lahf
int3
adc
ret
movsl
cwtl
out
loop
insl
cwtl
xchg
add
sub
aam
leave
ret
mov
lods
xor
dec
and
aad
mov
push
insl
adc
push
in
jne
dec
test
fdivs
adc
mov
in
xor
in
mov
rorl
bound
cmpb
xor
or
pop
pop
rcrl
mov
sti
pushl
add
xchg
cmp
sbb
sub
add
sbb
xor
pop
mov
adc
imull
popf
push
jg
mov
cmp
hlt
mov
test
pop
sbb
sbb
test
jg
popa
or
cmpl
pop
ret
inc
jae
shlb
push
cld
jmp
dec
lahf
lahf
cmp
js
mov
and
sub
mov
ret
inc
arpl
xor
mov
insb
xor
inc
ret
adc
xchg
add
mov
addb
jecxz
clc
add
ret
lds
popa
pop
nop
or
rcrl
mov
dec
mov
cltd
jmp
nop
sbb
jnp
rep
lock
dec
lock
popl
bound
cmp
cwtl
icebp
mov
ss
rorb
adc
jno
add
int
int3
icebp
mov
jmp
testl
movsb
push
inc
add
mov
dec
pop
push
test
push
adc
shll
test
and
mov
inc
lods
in
add
xchg
jae
inc
fwait
lcall
cltd
fs
or
mov
popf
jno
adcb
shll
mov
jmp
rol
add
ss
aaa
cmp
sub
popa
std
in
incl
and
gs
ret
mov
int3
xchg
push
lods
xchg
push
mov
add
adc
das
inc
movaps
jle
sbb
inc
bound
lcall
nop
popl
das
lods
sar
xorb
add
and
add
mov
mov
jmp
lea
cmp
scas
fnstsw
movb
rcll
fldcw
cmp
lret
sbb
or
mov
cmpb
or
cld
or
outsl
jmp
ss
cmp
cwtl
or
rorb
movsb
daa
enter
adc
sub
dec
inc
popl
lock
push
adc
dec
cmpsl
andps
and
aas
mov
movsl
ss
xchg
jb
adc
xchg
push
fbld
adc
aam
lods
ret
mov
cmp
xor
pop
mov
add
jmp
sbb
cmpsb
xor
sbb
lcall
faddp
sbb
adc
pop
out
ja
and
sar
pushl
lock
mov
scas
pusha
cmpsb
and
add
jb
jbe
pop
add
mov
or
in
pushl
cld
mov
cmp
int
pop
scas
or
adc
adc
call
cld
jmp
mov
sub
xor
outsl
add
scas
por
mov
jmp
and
lcall
lods
inc
mov
mov
xchg
shll
sbb
and
add
incl
push
dec
add
dec
adc
mov
sub
stc
and
inc
inc
popa
push
mov
push
repnz
or
mov
inc
cs
das
mov
sub
imul
cmp
pop
mov
and
movsb
pop
sub
pusha
daa
dec
jb
lcall
testb
sub
subl
push
xor
sbb
loopne
testl
ljmp
sub
aas
dec
dec
incb
icebp
sbb
jg
mov
in
cmpsb
jno
stc
sbb
mov
les
mov
decl
rorb
mov
ss
and
or
inc
cmp
shlb
cmc
clc
gs
sarl
jb
ds
mov
dec
xchg
xor
mov
loopne
test
ljmp
sub
mov
jb
je
fwait
mov
shl
jmp
jnp
xchg
mov
add
sahf
xchg
out
push
xchg
cmp
dec
or
jg
test
push
pop
cltd
jge
lahf
xchg
int3
adc
inc
sbb
mov
stos
repz
xor
pushf
gs
je
push
sub
test
sar
incl
mov
sub
mov
add
mov
mov
movsl
shlb
lock
cmpsb
and
call
insb
outsb
dec
mov
mov
jns
aaa
adc
pop
rorb
hlt
or
mov
jmp
or
subb
cs
inc
adc
xor
decl
popf
test
mov
jo
fxch
mov
and
dec
jae
dec
sbbb
jo
je
rclb
shlb
cli
jmp
mov
test
cs
les
loopne
shlb
decl
and
out
inc
mov
or
out
push
add
push
loope
decl
fcmovbe
sub
cmp
jp
push
add
out
sbb
rclb
sub
imul
pushl
push
push
adc
add
xchg
daa
push
fmull
test
dec
cmp
jno
scas
push
sub
popl
ds
std
jg
sbb
or
and
or
iret
push
push
mov
push
mov
pop
and
xchg
push
js
dec
aam
add
pushl
mov
leave
js
stos
mov
xor
pop
jmp
sbb
insb
push
ljmp
inc
fldenv
push
and
outsb
shlb
or
or
cmp
or
dec
sbbl
lea
out
and
dec
mov
rcll
and
cmp
add
xor
out
pop
inc
jg
hlt
loop
lods
sbb
shr
fwait
push
and
xchg
add
loop
shlb
cmp
ja
cmpsl
sti
enter
mov
adcl
xor
or
dec
pushl
mov
imul
cmp
fadds
push
dec
pop
jmp
out
adc
mov
dec
inc
lahf
add
dec
or
mov
je
mov
jp
push
lahf
leave
pop
mov
fistpll
sbb
mov
adc
std
sbb
jno
out
jmp
pushl
sbb
loope
sbb
pop
sarb
scas
mov
sbb
call
ret
and
xor
sub
test
and
and
pop
pop
incl
test
mov
lock
nop
sub
pusha
push
pop
dec
jmp
adc
cmp
repz
cs
insl
pusha
mov
cmp
jmp
adc
sbb
dec
mov
sarb
pusha
imul
xchg
ud0
filds
mov
daa
adc
mov
shll
sbb
pushf
cmp
call
call
cmpsl
sbb
pop
int3
pusha
in
pop
sub
sbb
add
mov
sub
cmpsb
jg
cmp
sub
ds
push
cmpsb
mov
lret
and
lcall
cmp
imul
fcmovnb
xchg
lret
aaa
push
xor
xor
loop
jge
lock
decl
ja
xchg
les
sub
add
rol
mov
test
out
pop
or
incl
push
add
arpl
or
sbb
les
jmp
aaa
in
jbe
cs
jg
or
ret
xor
push
test
bound
push
fisttpl
and
rorb
adc
push
inc
insb
fucomi
inc
cwtl
dec
adc
decl
jmp
mov
xchg
cmp
sbb
call
mov
xabort
cmp
jl
adc
jmp
shll
loopne
lock
bound
pop
cmp
sbb
aas
in
xor
hlt
mov
lods
push
adc
ljmp
mov
push
jg
lea
sbb
jb
add
adc
dec
adc
xor
fldl
enter
mov
add
mov
leave
outsl
sub
adc
or
sbb
imul
js
mov
testl
inc
adc
pop
sbb
aas
sbb
push
or
add
cmc
mov
cld
in
nop
mov
shlb
add
adc
nop
out
lock
add
out
shrl
clc
dec
pop
aad
andl
movsl
xchg
cltd
aam
enter
or
sub
pop
cmpsb
sub
push
imul
cld
mov
jns
mov
inc
xchg
ds
inc
adc
incl
lret
pop
mov
ret
inc
rorb
lods
jp
adc
cmp
ss
addb
add
cmp
ljmp
or
pop
pop
fcoml
dec
inc
xchg
push
out
xchg
iret
adc
xchg
movsb
sbb
add
xor
orl
cli
pop
xor
cwtl
sbb
out
sbb
jg
mov
je
cld
sarl
inc
pop
push
push
mov
jl
jbe
call
jmp
cwtl
add
lcall
inc
scas
das
loope
xor
xchg
add
or
mov
les
ljmp
jl
jae
fadds
push
ja
inc
add
icebp
nop
sbb
mov
inc
out
xchg
add
test
xchg
pushl
xchg
ljmp
jl
shrl
cwtl
clc
int3
adc
xchg
xchg
test
push
lcall
sub
adc
xchg
pusha
mov
inc
xchg
pop
lock
mov
sub
and
je
push
xor
or
es
imul
inc
enter
add
sub
add
sub
dec
or
add
xchg
push
ja
pop
pop
insl
pop
cmp
push
aaa
orl
ffreep
aam
daa
lds
xor
sbb
push
push
mov
add
lret
test
cmp
mov
pop
lcall
dec
call
fildll
push
add
jg
arpl
shr
or
add
add
sub
jmp
into
sub
lea
pop
push
xor
and
adc
dec
inc
jmp
je
daa
or
mov
or
pop
xorl
mov
call
sub
rolb
nop
or
mov
adc
sbb
sbb
pop
decl
es
pop
and
hlt
adc
mov
out
clc
call
adc
sbb
jns
js
pop
adc
mov
inc
adc
int
cmc
or
xor
xor
cmc
fbld
cmp
xchg
out
pusha
add
dec
in
lcall
inc
orb
fcoms
nop
pop
std
mov
xor
add
dec
dec
pop
sub
lds
lock
incl
push
jp,pt
hlt
jne
jmp
pop
and
decl
loope,pn
inc
dec
cs
dec
ds
in
dec
dec
lcall
in
and
out
es
jb
push
push
imul
incl
xchg
dec
inc
dec
dec
cmc
inc
scas
dec
push
aaa
push
xor
xor
pushl
popa
arpl
sahf
dec
rcl
xor
xchg
cmp
sbb
mov
xchg
inc
adc
xor
jecxz
scas
outsl
shlb
divb
dec
incb
sbb
cmp
call
jb
sbb
adc
and
ljmp
fildll
ja
rolb
jg
lods
lcall
mov
jb
sbb
mov
mov
cmpb
inc
or
imul
dec
mov
sub
fadds
call
mov
jne
fistpll
dec
shll
decl
fcomp
xchg
pop
or
jmp
adc
ss
xor
add
andb
push
int
inc
or
pop
mov
mov
pop
xlat
mov
lret
cli
xchg
ljmp
push
push
mov
adc
das
clc
test
sarl
fbstp
mov
lcall
mov
mov
sbb
push
pop
push
push
jecxz
lret
or
and
xor
cli
or
inc
adc
mov
mov
sbb
ljmp
sbb
dec
xor
xor
popa
adc
pop
add
add
push
or
cmp
sarb
pop
or
push
dec
jl
pop
leave
adcb
mov
cmp
sub
pop
sub
lea
notb
dec
mov
push
or
sub
cmp
or
imul
lcall
sbb
adc
dec
pop
loope
sbb
and
pop
sbb
mov
cmc
call
sub
jae
inc
gs
test
sahf
xchg
cmp
in
cld
sbb
ficoml
sbb
jnp
push
cmp
pop
mov
loopne
std
pushl
and
jno
pop
xor
js
pop
es
nop
lock
fldl
repz
mov
lods
add
scas
inc
and
incl
pop
cmp
int
jo
mov
pusha
stos
fwait
sbb
out
fidivl
sub
sub
lcall
mov
es
adc
cld
cli
sahf
jne
loopne
pushl
js
fcom
mov
out
add
dec
jecxz
psadbw
std
push
std
scas
popa
mov
mov
push
pushl
xchg
cmp
xor
inc
pusha
mov
test
lret
sub
xchg
pop
add
pop
pop
inc
push
push
mov
sbb
mov
movsb
lcall
repnz
pusha
leave
push
mov
rcrl
sarl
addr16
cli
rcrl
jg
mov
scas
sub
lret
and
inc
jmp
lahf
fs
aaa
add
mov
jne
cs
mov
add
insl
xor
mov
enter
shlb
mov
and
and
jg
hlt
push
gs
push
int
scas
rolb
incl
inc
lods
lahf
imull
aas
bswap
mov
mov
loop
inc
mov
pushf
push
and
clc
pop
dec
mov
sbb
fdivs
add
decl
loopne
fs
xchg
je
pop
sbb
loopne
call
insb
lods
mov
hlt
xchg
mov
test
dec
outsl
sub
rclb
xchg
js
mov
outsl
cmp
loop
xor
xor
xor
rcll
stos
sbb
daa
insl
imul
push
jmp
pop
pop
test
xor
push
test
push
lcall
shrb
adc
cld
cmp
adc
and
cltd
mov
mov
out
add
cmp
xor
cli
jp
das
js
addr16
and
loope
loop
jns
dec
mov
and
lcall
dec
fcompl
xor
cmp
and
inc
dec
sbb
nop
fldlg2
fistpl
inc
mov
pushl
addr16
insl
jmp
pop
sub
inc
dec
push
adc
sub
das
ss
or
clc
add
test
ljmp
dec
inc
adc
ret
es
dec
lock
jg
pop
xchg
jecxz
cmp
or
push
das
inc
jmp
jg
sbb
and
xchg
shlb
repz
xchg
ss
aad
ljmp
inc
loopne
mov
inc
int
and
out
mov
loope
mov
push
cs
mov
adc
sub
sbb
push
or
loopne
add
add
xor
xchg
sar
decl
fisubs
outsl
mov
cld
rclb
pusha
in
ss
pop
loope
dec
and
add
aam
dec
lods
sub
fcomp
push
mov
je
adc
iret
sti
or
std
push
push
subl
jl
push
pop
imul
addr16
call
jmp
and
inc
sub
push
call
pop
insb
insl
roll
jmp
sbb
lea
cwtl
iret
mov
decl
lock
or
into
daa
hlt
imul
jne
pop
ret
imul
pop
les
das
add
testb
cmpl
push
add
pop
in
mov
adc
add
outsb
mov
sarl
xchg
or
cmp
and
and
std
lcall
sbb
lea
dec
pop
sub
jg
xlat
add
decl
imul
sarl
in
xchg
es
dec
xor
push
inc
add
push
scas
push
fildl
sub
sub
push
das
cli
pushl
clc
jbe
mov
pop
outsl
fiadds
roll
lock
add
mov
xchg
pop
push
scas
mov
lock
arpl
add
ja
rcr
int3
fs
xchg
lock
xorl
incl
addr16
push
movsl
dec
or
jle
pop
sub
push
pop
adc
enter
das
dec
or
add
in
mov
outsl
xor
inc
sbbb
cmova
rcr
cmp
sbb
cmp
or
jle
mov
jl
cmp
or
imull
xchg
mov
ljmp
mov
inc
adc
mov
rolb
add
es
xchg
rclb
std
decl
sub
jp
popa
pusha
into
sti
mov
mov
inc
subb
sbb
test
scas
inc
in
cltd
lcall
pop
sbb
call
push
pop
loope
shll
cmp
movsb
adc
decl
ds
push
add
jl
pop
pusha
sub
into
sub
push
add
xchg
addl
or
jo
fbld
inc
xlat
adc
mov
fsubrp
cmp
push
inc
stos
or
je,pt
movl
mov
adc
push
sbb
jmp
outsl
push
xor
test
ds
cld
aas
cmp
iret
std
mov
inc
inc
adc
push
repz
mov
jne
shlb
adc
dec
pop
xor
mov
mov
pop
test
outsl
xorl
popa
incl
push
sbb
sub
jp
jg
dec
clc
sub
push
cmpsb
dec
or
lret
push
pushl
mov
daa
cltd
cmp
mov
cmp
cmp
fistl
sbb
or
ljmp
ret
jne
jne
adc
inc
or
imul
sbb
and
incl
sbbl
pop
pop
add
loope
add
pop
adc
and
mov
ljmp
iret
pop
adc
sub
insl
push
pop
xor
fistpl
cs
sub
ljmp
cmp
push
mov
jg
mov
and
mov
push
cmp
xchg
jae
adc
add
decl
add
and
push
clc
pusha
add
push
call
incl
aad
xor
push
add
and
loop
and
fcomip
mov
push
fdivrl
xchg
cmp
sub
and
movsb
test
mov
les
jmp
add
jo
int
fsubl
les
lods
sub
cmpsb
sbb
dec
movl
je
fdivrl
add
push
add
push
lcall
cmp
clc
call
dec
or
test
cld
lock
pop
push
or
movsl
mov
sbb
or
dec
out
xchg
call
data16
lods
incb
cmpb
xchg
add
ljmp
sbb
cmpl
sub
mov
push
add
imul
pushl
into
pop
push
cs
das
add
repz
adc
shrb
push
loope
outsl
fwait
test
jno
insl
ret
xchg
cmc
je
xor
push
cli
sbb
sbb
fcomip
jmp
pop
add
sbb
jle
cltd
or
movsb
push
add
pop
ja
sar
pop
jl
or
ret
push
dec
addr16
ficompl
adc
mov
mov
cmp
pop
ljmp
int
sbb
pop
flds
icebp
jb
and
inc
rcr
ja
dec
sbb
xchg
xor
stos
insl
call
out
push
or
and
rolb
fs
push
add
imul
jg
and
inc
jnp
dec
mov
jo
adc
pop
and
rcll
cli
call
iret
cmp
mov
sbbb
inc
decl
add
les
enter
imul
adc
or
xchg
pushf
test
pusha
inc
cmp
std
pushl
add
dec
imul
leave
fwait
or
decl
or
pop
pop
fldt
sbb
jge
clc
mov
and
jmp
and
xor
push
js
divl
cmp
or
xchg
dec
jb
ret
and
out
clc
adc
sub
sub
add
cli
pushl
jnp
out
cmpsb
mov
xchg
mov
jo
mov
ss
mov
scas
pop
inc
and
fsubs
sbb
xor
test
sbb
inc
add
test
push
jge
arpl
or
nop
jbe,pn
lcall
dec
inc
into
push
sahf
ds
lods
stos
or
fcmovne
inc
call
inc
inc
rcl
adc
pop
sbbb
jb
push
fs
sbb
fildll
pusha
or
fs
jo
je
sahf
push
inc
dec
cmp
call
add
into
pushl
push
and
push
ret
inc
inc
je
aaa
sub
jmp
fs
int
inc
test
shlb
jae
sbb
loop
pop
push
sbb
sbb
movsl
mov
lea
jne
loopne
incl
jle
popf
inc
cmp
mov
addr16
push
mov
cmc
pop
sbb
incl
and
sbb
out
push
mov
pop
jecxz
sbb
lcall
add
in
or
jp
inc
popf
add
jl
sbb
xor
xlat
std
call
push
in
mov
sub
adc
roll
mov
pop
push
mov
sbb
sbb
lcall
ret
inc
push
sub
inc
push
or
or
xor
mov
sarb
roll
loopne
enter
clc
aaa
fimull
sub
ljmp
clc
sbb
pushf
jo
pop
scas
jle
les
or
inc
xchg
push
enter
subb
aas
fcomps
xchg
insl
fimuls
jne
xchg
xchg
cmp
xchg
push
ficomps
or
sbb
pop
sbb
mov
push
cmc
cld
gs
pop
lcall
test
sbb
jg
test
cmp
imul
std
call
insl
adc
jbe
jge
or
out
lret
jns
add
ss
je
cmp
xchg
adc
cmp
int3
out
bound
aad
jmp
mov
cmc
xchg
mov
xchg
xchg
mov
shll
push
xchg
mov
mov
push
jl
add
sub
cli
sub
icebp
push
outsl
push
icebp
xor
push
lcall
pop
dec
daa
push
stc
fs
sbb
adc
dec
pop
push
jo
and
out
or
das
clc
lret
xchg
push
push
pop
das
clc
fprem
sbb
jnp
decl
es
andl
pusha
sub
ljmp
test
xchg
push
sub
dec
mov
mov
sbb
in
mov
leave
ljmp
je
or
mov
ljmp
mov
xchg
popa
fisubrl
and
push
inc
popa
outsl
pop
ret
jne
daa
mov
int3
lock
mov
cmpb
xchg
push
aad
aam
call
outsl
nop
sub
mov
pop
lret
stos
or
push
sbb
push
dec
lret
or
or
inc
test
movsl
and
xchg
shll
push
les
mov
push
decl
sub
pop
movsl
pushf
jg
push
adc
mov
sub
aam
cmp
jo
rcrl
sbbb
cmpsb
inc
nop
push
scas
mov
add
lret
jmp
push
pushf
sbb
xor
xor
lods
sub
push
hlt
call
push
add
mov
mov
mov
shll
cmc
insl
or
hlt
adc
loop
or
inc
call
mov
cmpsl
das
gs
xchg
xchg
nop
xchg
fisubs
adc
add
adc
mov
jl
sub
in
push
test
call
or
pop
in
and
mov
mov
int
es
call
or
dec
inc
gs
leave
cmpsb
mov
sub
mov
mov
aam
scas
jg
and
add
cmp
ja
sbb
mov
loop
out
sti
mov
sub
and
cmpsb
pop
lret
push
sub
xor
adc
xor
incl
sti
sub
pop
add
push
sub
xor
lahf
shl
andb
ljmp
dec
sub
fstpl
push
mov
test
dec
cwtl
sbb
sub
ja
lock
xor
movsl
sub
shr
or
push
add
mov
int
lock
ljmp
sahf
fstpl
or
jge
pop
pop
fdivs
pop
mov
add
push
mov
inc
and
das
sar
xor
outsl
loopne
sub
mov
push
mov
insl
pop
mov
popa
jmp
mov
mov
jge
lock
xor
addb
pop
adc
stos
xchg
jg
out
add
jmp
clc
fldl
inc
cs
inc
sbb
or
int3
les
test
icebp
dec
inc
scas
andb
insl
mov
adc
push
orl
adc
mov
cltd
roll
push
imul
or
dec
mov
jmp
lcall
clc
cmp
mov
adc
shrl
loopne
in
mov
test
call
std
jge
aas
add
std
movsb
add
dec
dec
or
inc
mov
push
push
lahf
lods
mov
jl
sub
mov
test
ljmp
loop
and
push
movsb
andl
call
add
push
es
mov
aaa
pop
add
mov
pop
mov
push
cmp
add
test
decl
dec
cmp
xor
pusha
pusha
ret
ss
jecxz
incl
sarl
sub
rolb
call
out
add
mov
repz
sub
add
or
js
call
dec
sbb
or
es
jo
es
mov
outsl
incl
mov
mov
daa
fwait
test
les
fldl
das
js
stc
loopne
cltd
jne
aas
mov
sti
sbb
rclb
aad
orl
push
sub
cli
ljmp
test
sbb
and
mov
pushl
xchg
adc
inc
push
adc
xor
cs
hlt
or
mov
jae
lock
pop
sbb
js
jmp
jo
jmp
mov
adc
cmp
jg
adc
or
dec
sub
mov
mov
mov
mov
call
lds
inc
push
and
fdivrs
inc
mov
xor
scas
cli
inc
out
pop
cmp
add
sub
jle
xchg
adc
or
add
sbb
cli
pop
xorl
je
cmp
inc
incl
hlt
inc
dec
add
xchg
scas
adc
into
push
pop
cmp
sub
adc
adc
lcall
fiaddl
and
mov
pushf
pushl
std
dec
fmuls
bound
dec
push
or
shlb
aam
incl
mov
in
adc
adc
roll
sub
imul
cmp
or
mov
ljmp
pusha
mov
push
inc
adc
stos
jp
inc
movd
sbb
adc
pop
fwait
repz
pushl
dec
pusha
sub
setge
and
jbe
push
push
pop
ret
xor
dec
and
rcl
call
cmc
sub
push
cmp
cli
fmuls
push
sahf
cmc
sbb
sbb
adc
jg
and
mov
xchg
repnz
cld
mov
or
add
out
and
jne
sub
decl
mov
sub
mov
dec
loopne
into
mov
decl
inc
into
pop
shll
add
mov
xor
sbb
push
pushf
add
dec
adc
xchg
push
shll
pop
jmp
push
add
xchg
or
mov
mov
cmp
adc
adc
xor
pop
adc
pop
rcr
or
push
mov
lock
jb
sub
adc
movsb
mov
repnz
mov
push
jbe
leave
pop
and
in
cli
shr
mov
sbb
lcall
fidivrl
add
add
fstps
mov
cmc
add
insl
cld
jmp
mov
pushf
popa
adc
adc
out
push
cld
lcall
daa
xor
xchg
jne
push
out
cli
add
inc
add
addr16
mov
faddl
inc
mov
call
add
inc
mov
push
addr16
xor
das
push
sub
add
cmp
pop
add
decl
out
and
jle
cwtl
push
or
sub
jmp
and
adc
das
pop
and
stos
xlat
lret
ljmp
push
push
nop
sub
pushf
xor
mov
pop
mov
out
or
push
jno
mov
jne
lods
fs
inc
inc
decl
ret
andb
bound
fbld
adc
lock
adc
jmp
sub
int3
dec
dec
mov
and
mov
clc
fwait
lcall
inc
jp
push
inc
rcrl
mov
jge
dec
jae
testl
call
sbbb
pop
rcrb
in
cmpsb
imul
incl
pop
add
adc
or
xchg
jmp
add
push
push
sub
sub
cmp
cmpsb
shlb
add
sbb
in
mov
pop
sbb
push
popa
dec
and
incl
sbb
sahf
xchg
pop
and
test
out
fldl
or
xor
paddq
icebp
and
pop
xchg
ret
scas
dec
sbb
out
in
xor
or
sbb
fwait
xchg
xorb
add
mov
mov
lods
sub
dec
pop
dec
mov
xor
inc
int3
mov
inc
push
inc
cs
sbb
pop
add
rorb
in
addl
call
outsb
sahf
and
cli
pop
movsb
push
mov
decl
cmp
fsubrl
fs
dec
cmovs
cs
mov
xlat
sub
add
stc
dec
jge
add
jmp
outsl
cli
in
decl
mov
push
enter
insb
shll
mov
mov
popa
mov
lret
push
sub
xchg
popa
pushf
inc
cmp
divl
lds
or
and
jle
jmp
jne
ljmp
jecxz
jmp
add
cwtl
aam
jmp
pop
dec
push
or
ljmp
or
adc
mov
aam
sub
enter
xchg
incl
jmp
lods
fdiv
jecxz
pusha
outsb
in
pushf
adc
or
add
test
dec
cmp
mov
jne
and
popa
sbb
cld
jae
inc
pop
inc
das
push
inc
jmp
cmp
mov
mov
fwait
sub
push
popf
mov
incl
adcl
jne
sub
loopne
pushf
arpl
lret
popf
inc
jns
decl
nop
jmp
loopne
push
xor
jns
xchg
jns
lcall
mov
push
dec
mov
lock
shlb
test
lods
mov
add
pushl
in
adcb
push
lods
test
insb
push
adc
mov
clc
outsb
pop
ds
sar
out
inc
sti
clc
xor
adc
xor
aaa
test
hlt
ljmp
mov
adc
cmp
loopne
cmp
pusha
pop
dec
or
setbe
add
jo
or
and
les
jmp
push
js
mov
dec
dec
loope
pushl
std
cmp
dec
sbb
and
dec
xchg
add
jge
add
sbb
cltd
unpcklps
cmp
jecxz
and
push
jle
dec
mov
inc
ret
jmp
jle
jbe
lcall
xchg
inc
mul
dec
int
enter
add
aas
lret
push
sti
and
into
inc
std
call
fwait
add
ljmp
test
inc
mov
outsl
das
hlt
push
pop
lahf
push
sbb
add
jge
xor
adc
in
call
movsb
testl
push
je
sbb
pop
gs
add
or
data16
jmp
inc
sub
cmpsb
adc
sub
push
sbb
adc
mov
push
mov
cmp
adc
jg
add
nop
lahf
pop
xchg
cs
shll
cmp
xchg
mov
xor
adc
movsl
add
outsl
mov
jmp
or
adc
pop
jo
sub
popa
xchg
mov
call
adc
cmp
pop
mov
call
loopne
push
xor
and
mov
rclb
nop
insl
xor
push
daa
data16
cmp
dec
mov
add
mov
cmpsb
ret
out
cs
mov
or
xor
dec
mov
call
dec
sub
pop
imul
push
push
sbb
jg
out
pop
sbb
mov
add
mov
and
mov
pop
add
dec
mov
add
data16
icebp
or
mov
lcall
cmp
or
pusha
and
aaa
push
mov
cmp
push
sub
lcall
pop
xchg
inc
sub
in
sbb
mov
xchg
popf
lret
pop
lods
movsb
fwait
add
sarl
cmpsl
adc
lods
flds
popf
add
nop
hlt
push
mov
stc
xchg
jle
addr16
mov
add
xor
pop
dec
popa
xchg
mov
jg
sbb
cwtl
dec
cmp
clc
add
xor
filds
decl
lret
add
outsb
cmp
xchg
aaa
inc
sarb
mov
mov
ljmp
pusha
repnz
mov
rcrb
movsl
pop
adc
jmp
dec
test
addl
mov
sbb
outsl
mov
mov
jo
hlt
movsb
xchg
lcall
xchg
out
sub
ljmp
push
stos
push
popa
jbe
pop
cmpsl
shlb
adc
adc
mov
ret
pusha
lods
in
inc
push
jbe
rolb
inc
outsb
add
out
cmp
mov
push
xor
mov
push
mov
pcmpeqb
jo
nop
dec
jo
mov
push
xorl
or
sub
push
push
inc
cmp
add
fadd
push
pop
stos
fldenv
cmpsl
jb
leave
mov
xor
xor
aaa
lcall
loopne
int3
push
and
push
inc
and
daa
push
mov
ds
fcomip
decl
in
call
lock
das
lret
rorl
std
decl
jo
icebp
and
pop
aas
int
push
sbb
test
jecxz,pn
icebp
arpl
call
test
mov
pop
inc
clc
mov
inc
xorl
xor
pop
sbb
fnstcw
add
data16
sub
cmpsb
out
mov
daa
add
sub
mov
js
jae
and
adc
push
dec
jg
lcall
xor
sub
adc
and
jbe
mov
xchg
imul
jne
cwtl
lcall
jg
test
push
pusha
fsubl
mov
js
push
or
cmpb
vtestps
push
push
wrmsr
inc
xlat
inc
jmp
popa
in
add
mov
loopne
cli
es
xchg
or
sahf
jl
sub
inc
cmp
ljmp
sbb
or
incl
mov
inc
aam
add
loopne
ja
ljmp
fcoml
mov
sbb
cli
decl
mov
inc
sub
pushl
jbe
or
mov
rorb
enter
cmp
dec
xor
fcoml
jge
or
insb
in
out
adc
sub
das
fs
rcrl
pop
dec
cmpsl
popa
cld
pop
ja
ljmp
sbb
popa
add
pushl
or
test
inc
pushf
aam
and
mov
rolb
push
add
fdivrl
and
das
clc
jne
sbb
and
arpl
arpl
add
lock
mov
mov
pop
rolb
xor
lahf
pusha
ljmp
xchg
jo
add
or
cmp
jge,pn
mov
pop
xor
jl
or
push
js
mov
rol
pushl
shrb
ss
movsb
xlat
inc
add
sbb
mov
addb
jmp
sbb
mov
mov
or
and
int3
adc
mov
aaa
rcrb
add
imul
andb
sbb
add
inc
adc
loopne
mov
jmp
and
lock
cmp
jecxz
push
ja
andb
ljmp
mulb
clc
sub
movsl
pop
popa
jno
repz
inc
sbb
insb
fsubr
inc
dec
sbb
dec
add
push
incl
push
cmpb
mov
xchg
mov
jle
xor
sub
xchg
push
mov
xchg
popf
std
rorl
mov
add
mov
dec
inc
xchg
pushl
lock
add
test
or
dec
mov
movb
mov
mov
mov
bound
add
mov
mov
push
in
pop
nop
stos
mov
sbb
rcr
test
mov
or
inc
push
inc
scas
inc
mov
pop
jp
shlb
inc
lcall
imul
out
mov
push
pop
sbb
add
sub
call
or
orb
xorb
aam
sub
mov
cmpsb
mov
push
movsb
push
mov
fcomip
or
cmp
das
jo,pn
mov
adc
sbb
and
sar
js
aam
add
rolb
mov
std
adc
jmp
inc
xorb
push
bound
imul
inc
rcll
pop
xchg
icebp
jle
pushl
inc
or
out
clc
push
add
mov
decl
push
andl
aam
xor
out
lock
lcall
mov
enter
inc
jne
pop
mov
inc
xor
sbb
dec
or
fnstsw
or
or
add
call
mov
xchg
dec
inc
jne
adc
pushf
in
repz
ljmp
cli
ljmp
cmpsb
scas
nop
push
sub
aad
movsb
mov
xchg
stc
les
loop
das
cli
jmp
pop
test
adc
hlt
popf
inc
pop
or
or
mov
or
popa
xchg
notb
jb
dec
xchg
addb
insb
xor
mov
arpl
mov
nop
cmp
push
push
outsb
mov
jg
mov
dec
test
sub
insl
ss
mov
jmp
outsl
mov
rcrl
aam
orb
cmp
ja
sbb
popf
xor
call
dec
incl
dec
out
pop
in
orb
xor
mov
mov
and
incl
incl
xor
les
push
call
cmp
sbb
inc
jb
les
cli
fcomip
dec
or
or
push
sarb
decb
incl
lahf
fwait
sarb
inc
movsb
xor
inc
test
arpl
loopne
xchg
pusha
push
imul
dec
pop
jge
add
pop
dec
rclb
out
dec
and
adcb
ljmp
or
fsubrl
mov
imul
cs
add
sbb
pop
out
add
bound
shlb
call
and
gs
loopne
inc
sub
push
hlt
add
mov
cmpsl
orb
ljmp
popa
sub
leave
lds
add
dec
and
aaa
jne
dec
jg
mov
add
adc
adc
or
dec
xlat
insb
push
icebp
pushl
inc
pop
inc
add
jb
xor
sahf
cmpsb
mov
cmpsl
fwait
stc
cld
nop
imul
loopne
jb
adc
dec
ljmp
or
call
xchg
cmp
movsb
rol
inc
mov
mov
xchg
inc
add
dec
jmp
je
sub
xchg
inc
cmp
push
xchg
pop
push
ffree
sar
mov
aaa
rcl
xchg
test
jo
lods
push
out
add
rol
inc
sbb
jg
daa
nop
sar
pop
mov
outsb
cmpsb
cmpb
adc
lods
es
ds
in
mov
push
jle
sahf
or
lcall
loop
je
fs
mov
add
rcll
sbb
int3
push
icebp
sub
jae
mul
and
adc
es
daa
sbb
daa
or
sbb
pushl
aam
test
or
repnz
add
dec
loopne
sub
xchg
xchg
and
out
sub
cmp
dec
popa
lcall
adc
add
xchg
lret
bound
daa
dec
rcll
mov
inc
jne
fcmovb
mov
and
ljmp
loop
pop
subb
jae
add
jge
popa
sub
fiaddl
or
pop
sbb
mov
out
xchg
lea
dec
imul
push
jg
inc
dec
sbb
sub
rcll
hlt
sbb
mov
sub
jg
or
inc
push
out
lods
cmpsl
fld
sar
xchg
xchg
in
dec
outsb
in
mov
xor
or
hlt
aaa
rcl
cli
int
movsl
imul
dec
xor
adc
mov
jg
ficomps
gs
xchg
add
popa
rcl
push
jbe
rcrl
out
movsl
adc
rorb
sbb
adc
push
sbb
inc
incl
and
mov
ja
cmp
fsubrs
aaa
std
jmp
fs
aad
sbb
lret
inc
mov
int3
push
push
adc
mov
adc
pushl
dec
test
daa
xchg
cmc
cli
sbb
push
nop
ss
out
call
mov
hlt
pop
sahf
jl,pn
or
test
xor
das
and
push
mov
inc
sub
fidivrs
add
add
lods
popa
insb
pop
or
gs
jmp
sarb
cli
cmp
jmp
or
jl
or
test
jo
pop
leave
jg
add
mov
jg
sub
sub
sub
daa
rolb
inc
aas
out
inc
jmp
incl
dec
push
or
mov
addb
js
rcr
call
js
ret
jg
mov
dec
cmp
pop
in
jecxz
cmpsb
jle
dec
outsb
ret
inc
rclb
mov
mov
fists
push
add
or
popf
ljmp
and
clc
test
dec
jg
imul
clc
sbb
in
adc
mov
xor
or
stos
je
inc
ljmp
in
sahf
dec
jle
inc
js
lods
add
inc
add
les
fimull
in
dec
loopne
loopne
and
pushf
mov
rcrb
pop
popa
and
lods
push
pop
mov
movsl
ljmp
scas
inc
dec
and
cmpsb
aam
test
inc
dec
and
inc
mov
call
subb
and
lods
pop
cwtl
xchg
cmp
mov
add
sarb
cmp
les
sub
sub
xor
scas
sub
lock
lcall
pushf
and
inc
stos
in
pop
aas
test
or
rcll
test
or
cmpsl
addr16
dec
cmp
and
mov
scas
and
or
mov
outsl
scas
sti
je
mov
or
js
test
sub
add
cmpsb
hlt
pushl
sbb
add
mov
outsl
jecxz
cmp
in
or
jo
mov
insb
dec
mov
add
pop
icebp
mov
lret
pop
cmp
addl
or
xchg
dec
xchg
in
adc
call
adc
fcmovnbe
xchg
dec
outsl
and
inc
es
add
and
dec
lods
aad
incl
adc
jne
lea
test
lcall
shlb
push
jbe
add
add
xor
fidivrl
pop
mov
cmp
pusha
notl
mov
fcoms
mov
or
test
lar
divb
pop
or
pop
orb
cmp
fdivr
out
add
std
push
adc
aaa
dec
ret
nop
or
mov
mov
push
mov
jmp
and
popa
or
pop
or
in
mov
adc
xor
push
out
jae
jns
lods
mov
cmovae
cmp
push
pop
divl
push
push
pop
call
insl
mov
push
insb
sbb
mov
cs
push
push
or
push
stc
adc
fiadds
xor
jmp
mov
pusha
add
call
or
xchg
mov
or
add
fisttpl
or
stc
pushf
pop
repnz
fstpt
outsb
lahf
xchg
dec
es
add
outsb
push
pop
sub
mov
popl
mov
jo
fstl
and
shrb
outsl
incl
ja
sti
sub
clc
sub
adc
jnp
and
lahf
mov
fnstenv
out
mov
jmp
pop
cmp
enter
std
in
jg
pop
add
mov
es
mov
mov
fildl
mov
nop
outsb
dec
js
mov
pop
fcoms
jg
add
pushl
cld
pop
push
inc
xchg
lock
lcall
fcmovb
fcomp
movsb
shlb
scas
mov
fldt
ljmp
or
add
inc
add
jl
or
fistps
ds
nop
add
xchg
add
jbe
sub
adc
lcall
jmp
hlt
and
pop
inc
push
inc
outsb
out
hlt
or
push
testl
mov
dec
int
xor
lock
mov
pop
or
xchg
hlt
pop
orl
jmp
push
es
and
sbb
loopne
stos
or
hlt
aas
adc
outsl
mov
sbb
out
imul
aaa
enter
pop
daa
shr
mov
add
lods
and
mov
inc
add
pop
in
sets
ja
loop
xor
call
sub
pop
inc
pop
adc
lret
out
sbb
adc
push
sbb
push
adc
push
cmp
push
mov
or
incl
mov
push
aad
dec
sbb
pop
filds
movsl
mov
jnp
add
push
jg
nop
fcoms
dec
test
decl
and
inc
adcl
xchg
scas
sbb
cmc
ljmp
pop
push
dec
out
mov
or
inc
stos
scas
mov
das
xchg
movsb
push
and
dec
mov
jmp
in
gs
push
and
xor
or
cmp
ja
lret
outsb
pop
cmp
decl
add
xchg
aam
adc
adc
mov
in
jnp
adcl
and
das
clc
decl
mov
jno
jb
or
adc
add
filds
cmp
mov
add
mov
rcll
add
push
sbb
mov
pushl
push
xchg
incb
mov
pusha
or
ja
mov
out
inc
pushl
mov
push
mov
add
mov
shlb
scas
clc
jge
leave
psubusw
popa
inc
push
mov
add
je
fwait
jle
and
inc
call
pop
ds
clc
push
mov
repz
test
andb
popf
test
push
add
mov
cli
pop
mov
rclb
jne
aaa
addl
call
fadds
xorb
push
ss
inc
lahf
andb
and
dec
lea
cmc
ja
lock
xchg
push
pusha
add
fistl
add
movsb
sub
mov
mov
jg
outsb
inc
aas
xor
sub
rolb
dec
add
mov
mov
mov
shll
or
jmp
call
dec
cli
scas
xor
push
inc
clc
ret
jge
and
push
into
rclb
ror
dec
mov
jg
and
mov
and
les
xor
jecxz
adc
and
sub
cmp
testl
fisttps
push
out
lods
xor
inc
hlt
mov
sbb
xor
and
mov
rcrb
js
fs
sub
jg
sahf
imull
sarb
mov
fdivrs
int
imul
sbb
push
dec
mov
das
clc
lcall
push
push
test
jnp
fnstcw
jbe
add
ds
jnp
cmp
dec
sbb
pop
shlb
push
pop
add
mov
dec
xor
pop
mov
xor
mov
mov
add
jecxz
fistl
pop
cmp
cmp
pop
mov
jle
adc
sahf
data16
out
xor
mov
cmp
imul
sarl
push
or
pushl
emms
or
or
fdivs
lret
adc
lcall
and
mov
inc
mov
inc
cmp
ljmp
xchg
xor
or
inc
xor
test
shlb
or
js
adc
inc
and
pop
pop
clc
decl
out
mov
mov
pop
or
or
repz
pop
or
incl
shll
jp
aam
rorb
mov
mulb
nop
fs
dec
aaa
lret
rolb
outsb
pop
fisttpl
add
jmp
fst
call
adc
mov
pop
mov
push
xchg
push
add
ljmp
adc
add
and
ret
orb
outsl
ret
insb
sub
enter
pop
outsl
push
inc
mov
pop
jg
decb
add
sbb
repnz
mov
movb
mov
cmp
orl
orb
test
dec
ss
adc
push
loope
xor
add
decl
xor
in
mov
inc
rcpps
xor
sbb
or
call
push
pop
fldt
jbe
addr16
sub
es
cmpl
pop
sub
lcall
mov
xor
scas
or
pop
addb
and
fdiv
xchg
add
inc
inc
push
bound
or
fcoms
push
popa
aam
roll
adc
push
jo
arpl
or
outsb
mov
mov
pop
cmp
test
mov
xchg
pop
xchg
xchg
call
mov
jg
mov
in
xor
dec
in
or
imul
pop
fadd
loop
leave
or
pop
lds
mov
add
dec
movswl
decl
roll
pop
sub
jecxz
outsl
cli
jmp
int
pusha
mov
outsb
data16
les
xor
lea
popf
ss
lcall
xchg
xor
xor
loopne
xor
jmp
push
push
aaa
in
xor
push
adc
dec
incl
enter
adc
sbbl
cli
adc
xchg
cmc
lcall
jge
data16
adc
add
incl
movsb
jns
sbb
dec
xlat
subl
pusha
mov
call
cmpsb
fs
test
mov
call
xchg
sub
pop
mov
jne
les
push
test
pusha
xor
fisttps
mov
or
sar
push
push
dec
dec
mov
mov
xchg
std
jo
inc
inc
inc
fs
ljmp
data16
dec
push
add
das
lea
and
movsb
mov
inc
mov
jp
jmp
pop
and
mov
cmpsb
sub
mov
movsb
clc
mov
inc
dec
push
loop
or
mov
incl
and
xchg
or
leave
adc
xor
push
sub
mov
dec
mov
push
dec
mov
rclb
jmp
xchg
sub
aas
fcoms
fs
mov
in
cld
cmp
sub
lods
mov
ss
cld
xor
pop
push
jns
std
lahf
sub
add
nop
out
adc
fdivr
jnp
lock
ss
jl
cld
jge
xchg
mov
ds
xchg
mov
or
out
jnp
mov
sub
sbb
stos
shlb
cwtl
push
mov
push
lea
push
iret
data16
incb
pushf
mov
fdiv
out
imul
sahf
scas
mov
lods
shlb
enter
mov
push
push
push
fmull
mov
rep
fdivp
int
push
ret
js
or
push
fidivrl
xchg
mov
pushf
in
les
lea
pushl
fwait
in
repz
xchg
test
xchg
xchg
sbb
push
cmpsl
int3
pushf
cwtl
out
test
in
scas
and
pushl
mov
push
xor
test
sbb
sar
mov
jnp
dec
xrelease
fadds
cwtl
decl
jo
movsb
lcall
fwait
mov
pop
into
in
xchg
add
jbe
inc
and
out
jl
fisttps
push
fimull
lds
in
shr
jg
test
cli
push
addl
pop
dec
pop
adc
inc
push
mov
jmp
loopne
mov
clc
lret
dec
xor
jo
pop
sub
int3
fildll
incl
out
fimull
int
pop
inc
push
dec
add
mov
lock
incl
jns
mov
leave
mov
mov
inc
xchg
outsl
pusha
and
js
scas
bound
push
or
loopne
jle
dec
jb
add
fadds
bnd
int3
or
call
leave
sub
pop
mov
sub
mov
mov
mov
dec
mov
mov
pop
movsb
sbb
add
fidivrs
aas
in
decl
push
push
dec
sub
jl
push
jp
mov
add
out
add
adc
pop
aaa
iret
jg
lcall
push
js
fcomps
les
cmp
pusha
sub
cmpsb
call
daa
rorb
inc
sbb
fstps
and
mov
xor
subb
mov
fwait
incb
push
nop
data16
pop
dec
jg
inc
add
and
xchg
incl
pop
pop
lods
mov
scas
add
pop
rorl
cmpsl
cs
and
and
outsl
sbb
call
xor
add
movsl
adcb
test
test
jg
and
dec
add
inc
imul
jbe
cmp
mov
jns
and
lcall
and
mov
adc
sbbl
rolb
sbb
pop
pop
or
clc
call
mov
or
leave
arpl
movsb
adc
push
lea
cmp
sbb
sar
dec
inc
ds
push
push
sti
movsl
dec
fwait
mov
shlb
pop
xor
or
jg
pop
movsl
or
inc
xchg
addr16
adc
dec
lcall
add
movsb
shll
pusha
or
pop
sub
jmp
push
sbb
sub
movsb
rolb
or
loop
mov
incl
js
jl
push
jg
sbb
add
nop
add
xchg
or
cmp
enter
fwait
lock
jl
loop
fmull
mov
xor
ds
sarb
xor
jmp
mov
push
adc
inc
icebp
decl
loop
imul
adc
jnp
add
mov
inc
sbb
cmpsl
je
ljmp
pop
add
in
shll
out
add
cs
cltd
xchg
push
and
or
ljmp
enter
lds
xor
int
push
lds
leave
xor
aam
psubb
mov
or
lock
repz
mov
not
ljmp
int3
test
sbb
sub
test
pop
orl
or
fldt
andb
adc
add
xchg
cmp
pop
push
jo
jmp
dec
leave
mov
loopne
and
lods
decb
add
cvtpi2pd
jo
ud0
aas
je
mov
into
add
xchg
lods
or
mov
cmp
pop
xor
adc
mov
addb
cmp
push
lock
std
adc
or
sbb
fs
mov
jbe
mov
iret
pop
clc
aaa
cld
in
testl
test
pop
pushf
lods
push
enter
add
add
test
pusha
pusha
stos
and
inc
pusha
sarb
sbb
mov
push
aaa
ret
push
rcrb
xchg
jmp
and
mov
mov
or
add
pop
hlt
adc
jg
dec
orb
pop
cmp
ss
or
inc
lcall
jmp
call
orl
push
add
ret
sahf
and
hlt
cmpsl
movsb
jg
fisubs
hlt
cmpsb
scas
mov
push
andl
jge
sub
adcb
xor
in
adc
and
mov
push
and
pop
sbb
adc
mov
and
dec
dec
xor
and
mov
sub
lea
shrb
xchg
fs
sub
or
add
enter
or
nop
adc
gs
js
insb
add
push
push
negl
dec
and
insl
call
je
xor
or
jbe
pop
ljmp
ds
pushl
xchg
fwait
insb
cmp
push
dec
filds
adc
or
inc
addl
call
sub
aas
xor
or
sbb
out
cltd
pop
xor
ljmp
pop
out
sbb
xchg
mov
and
lea
xlat
jb
lret
les
xchg
movsb
fistl
pop
aas
inc
mov
aad
aaa
sbb
pop
ja
and
aam
repnz
dec
cld
mov
lcall
nop
mov
and
lret
push
aas
sahf
xor
inc
adc
xchg
daa
out
cli
in
pop
cmp
or
leave
add
es
and
jg
jmp
nop
out
push
jb
addr16
cmp
inc
mov
pop
jo
movsb
sub
pop
aas
push
test
jg
addb
fwait
subb
in
jbe
inc
add
xor
jp
mov
cli
call
bnd
imull
pop
inc
pop
aaa
sub
add
sub
mov
dec
clts
aas
add
mov
xchg
adc
ret
pop
mov
decl
add
xchg
shlb
insb
sbb
insl
mov
inc
lret
dec
testl
ljmp
pusha
fimuls
lea
sarb
inc
fisttpll
dec
fdivrs
jg
or
push
add
stos
ljmp
inc
push
das
hlt
lret
mov
xor
lar
lret
dec
dec
inc
das
pop
imul
mov
and
ds
dec
lcall
pusha
addr16
ret
jg
sbb
dec
fsubp
add
mov
lahf
xchg
inc
test
andb
orb
call
test
add
sbb
pop
insl
ret
and
cmpl
adc
adc
inc
and
sbb
adc
jnp
or
xor
push
cmpsb
sub
pushf
jne
cmc
incl
add
and
adc
xchg
in
adc
inc
outsl
clc
pop
std
xchg
jmp
fmuls
push
push
nop
ss
clc
ljmp
cmp
fistl
mov
pop
popa
push
add
jne
and
ficoml
mov
sub
psubusb
add
call
or
inc
jl
repnz
fistpl
add
dec
movsl
sbb
dec
push
inc
pop
mov
lea
or
rcr
aam
mov
jns
cltd
adc
jmp
rol
xor
push
mov
in
inc
pop
xchg
std
call
enter
cmp
outsb
imul
xor
cmp
sub
push
adc
lahf
jne
adc
mov
ret
sbb
xchg
jmp
jmp
int3
subb
aaa
cmp
xchg
or
ja
cmp
push
pop
call
rorl
cmpsl
sub
rorb
sub
push
add
sarl
jbe
xor
adc
add
sub
imul
nop
cli
inc
loopne
into
jecxz
jl
js
decl
and
dec
das
dec
inc
adc
addr16
or
pusha
sub
xchg
jmp
push
and
ja
mov
cld
aad
add
pushl
je
adc
lods
cltd
sahf
push
sub
in
je
and
mov
bound
mov
lods
pushf
xchg
pop
sbb
loope
movsl
das
mov
push
pop
xor
lahf
std
outsb
in
aam
outsb
mov
movsb
incb
add
adc
inc
or
incl
dec
sysenter
lcall
lods
fimull
sub
add
insb
loope
ss
out
sub
ljmp
push
xor
xchg
pop
xchg
gs
jmp
pop
clc
dec
xor
subl
imull
adc
jle
mov
pushl
jo
das
add
dec
lret
jo
not
outsl
add
jmp
jle
mov
and
xor
test
mov
imul
sub
mov
test
ja
ljmp
adc
inc
inc
adc
add
rol
scas
jle
xchg
xor
les
sbb
fisubrs
sub
dec
dec
mov
enter
inc
adc
mov
adc
decl
inc
inc
in
jp
pop
cmp
addl
shrl
mov
mov
cmpsl
fcomps
negl
mov
fadds
push
daa
mov
or
add
add
ljmp
enter
ljmp
stos
es
clc
rcll
stos
test
pop
mov
and
or
push
shl
or
jg
add
push
scas
dec
add
push
mov
xchg
xchg
fs
dec
mov
fidivl
jne
jb
inc
and
pop
inc
sbb
js
jecxz
pop
scas
enter
pushl
rclb
popf
dec
inc
es
mov
ljmp
xlat
push
push
cmpsl
add
or
push
cwtl
dec
cmp
mov
movzbl
sub
test
pushl
clc
mov
adc
sarb
jle
or
roll
add
sbb
jle
jns
fldcw
jmp
pop
decl
cmp
iret
push
mov
fisubl
fisttpl
stos
mov
std
ljmp
mov
push
push
cmp
inc
and
rclb
push
jge
aad
movsl
cli
ja
or
mov
insl
sbb
call
test
adc
mov
xor
jno
inc
and
fstps
push
and
je
ret
xchg
and
sar
adc
jmp
mov
pop
xchg
add
push
sarb
shlb
or
ret
sub
push
push
shrb
xchg
dec
in
repnz
add
mov
inc
xor
jg
sti
and
outsb
call
jne
jecxz
inc
cmpxchg
in
sub
inc
icebp
decl
push
dec
adc
test
inc
js
xor
pop
subl
call
sbb
out
testb
add
sbb
xchg
xchg
xchg
aam
pop
mov
dec
jle
xchg
andl
push
fldt
daa
fdivs
mov
roll
fildll
mov
addr16
push
es
mov
xor
xlat
and
test
sbb
jmp
dec
lock
pcmpeqb
adc
cli
inc
adc
sbb
test
add
xorb
or
push
mov
adc
sub
xchg
adc
xor
or
cwtl
jg
sub
jbe
pop
daa
mov
out
and
ja
push
pushl
and
and
cli
pop
dec
xchg
loop
in
dec
sbb
jmp
cmc
lcall
fadds
mov
sbb
fsubs
or
ljmp
push
cmp
aam
nop
push
sbb
outsl
or
fisttpl
jno
or
pop
push
pop
sub
mov
enter
cmp
or
mov
add
or
jnp
idiv
aaa
pushf
mov
enter
add
cmp
sbb
not
jae
add
sar
pusha
pop
lahf
cmp
xchg
mov
xor
outsb
adc
add
add
scas
cli
imul
xor
aaa
ficoml
jb
mov
push
xchg
mov
das
ljmp
and
sbb
mov
push
addr16
cmp
inc
repnz
push
jge
dec
adc
cmp
and
or
pop
imul
or
scas
pop
ret
push
pop
xor
sbb
sub
leave
loop
incl
fildll
dec
jl
cli
outsb
and
mov
es
sbb
sbb
sbb
ljmp
add
out
jl
xor
add
jb
je
mov
call
push
enter
icebp
or
xchg
dec
dec
pop
xchg
scas
mov
sbbb
mov
leave
jbe
mov
insl
out
mov
sub
jne
incl
imul
aas
in
pop
fcom
jmp
subl
hlt
push
enter
adc
or
xchg
mov
or
ljmp
fmuls
and
inc
fcomp
mov
loope
sub
lds
mov
push
inc
aad
inc
add
mov
lcall
movsb
mov
pop
arpl
mov
inc
loop
xor
ret
add
xchg
sbb
std
out
clc
cmp
xchg
pusha
xlat
or
pushl
add
mov
or
push
sbb
insb
ds
xor
popf
cmp
stc
int3
scas
outsl
jmp
jg
clc
lret
jl
or
cmp
adc
in
sub
push
pop
cmp
cmp
insl
roll
inc
pop
popa
jne
mov
ret
mov
fists
lcall
push
cs
sbb
sbb
js
inc
scas
mov
mov
or
bound
cli
and
test
scas
jne
mov
lea
leave
cmp
add
dec
push
jg
cmp
adc
jb
test
sahf
pop
or
xor
lcall
adc
mov
ret
pop
mov
arpl
or
aad
aaa
add
loopne
imul
ljmp
fildll
mov
xchg
inc
or
push
clc
scas
or
out
xor
pushl
pop
hlt
daa
call
fsts
inc
pop
jno
and
jbe
push
cmp
dec
incl
adc
mov
and
pop
inc
or
sbb
cmp
xchg
push
sbb
pushl
sbb
in
js
dec
fmull
add
mov
hlt
dec
mov
leave
es
add
inc
push
add
loopne
mov
mov
xor
pop
xchg
lods
sbb
jg
pop
xor
inc
and
scas
push
loopne
scas
or
rcl
ljmp
pop
enter
xor
pop
push
xchg
mov
push
adc
bound
pop
sub
mov
incl
sub
sbb
fimuls
pushf
jle
add
pop
addb
cmp
sub
imul
push
insl
pop
mov
and
imul
mov
add
nop
fdivs
das
pushl
xor
and
cmp
imul
popf
jmp
sub
mov
inc
ljmp
fistpll
imul
cltd
rcrb
scas
ret
out
jl
jge
push
js
push
aad
rcl
les
sub
in
dec
cmp
pop
xor
cmc
cmpsb
pop
mov
jne
repnz
decl
cs
nop
mov
stos
lods
cmp
or
popf
add
xchg
lahf
mov
leave
in
pop
hlt
jg
lods
jl
in
xchg
mov
outsl
xchg
sahf
push
add
jg
rorl
fwait
lods
pop
sub
incl
cld
decl
lret
mov
sub
sbb
and
loopne
xchg
call
in
fnsave
out
sub
xchg
push
push
lcall
lcall
or
adc
xorl
movsb
mov
adc
les
and
incl
pop
jge
pop
adc
decl
add
insl
inc
or
push
sbb
jmp
lret
sub
daa
jecxz
sbb
loop
push
adc
xchg
pushl
js
mov
aas
in
adcl
inc
cmpsl
incl
add
push
movsl
pop
cmp
fwait
idivb
js
in
fildll
or
mov
stos
pop
jg
push
mov
dec
fwait
les
flds
ljmp
sar
xchg
roll
lock
test
icebp
in
push
call
adc
mov
adc
or
lock
cwtl
sbb
push
xor
pop
dec
test
adc
daa
lock
loopne
ljmp
inc
jns
pop
test
sub
clc
adc
lcall
call
das
cmp
rcrl
dec
sub
cmpsb
cmp
inc
lret
and
jg
xor
add
dec
nop
aaa
fcomi
dec
inc
or
add
call
clc
sbb
clc
lock
sbb
mov
and
lcall
ret
test
pop
cmp
or
sub
clc
pop
iret
ds
cmc
call
mov
push
in
and
es
call
mov
mov
jne
nop
clc
jo
add
sbb
cmp
jmp
rclb
test
push
adc
sub
and
cltd
jp
or
fs
jmp
mov
mov
mov
sbb
stos
or
mov
mov
daa
cmp
mov
dec
or
mov
mov
push
jecxz
pop
adc
stc
xor
mov
mov
cmp
scas
push
out
jg
sub
decl
je
sbb
xorl
bound
xchg
lock
data16
repnz
scas
mov
and
pop
cmp
rorb
adcb
pop
xor
cltd
xlat
incl
add
lret
jo
add
scas
decl
sbb
sub
jl
and
sub
adc
movsb
adc
lods
jmp
mov
add
xchg
dec
pop
fadds
leave
daa
mov
jmp
dec
outsb
jnp
xor
push
mov
jmp
stc
clc
idiv
ljmp
dec
jmp
mov
sbb
in
dec
ret
lahf
dec
push
cmp
ja
and
nop
hlt
decl
push
inc
mov
aad
sub
and
push
std
outsb
push
mov
mov
sbb
pushf
jmp
add
fistpl
dec
gs
das
hlt
and
cmp
or
dec
negl
lcall
push
pusha
sub
fs
pop
or
sub
test
mov
pop
add
test
inc
lcall
jmp
andb
aas
sarl
sahf
xorl
inc
add
daa
pop
add
inc
enter
push
idivl
sbb
out
dec
jecxz
adc
mov
aaa
std
ljmp
xor
pop
push
dec
inc
addr16
bound
cmpsb
xor
and
xor
or
sbb
adc
ljmp
and
pusha
mov
mov
dec
out
nop
icebp
mov
sub
sub
add
add
dec
decl
cmp
or
cwtl
pop
je
xchg
je
push
enter
pop
sub
mov
sbb
es
add
ljmp
inc
es
xchg
and
pop
push
les
mov
adc
dec
jbe
or
push
incl
popf
leave
add
or
inc
inc
mov
inc
push
cmp
pop
add
xchg
sbb
and
loopne
movsb
out
pop
adc
inc
mov
in
add
pop
dec
lret
jl
movsb
xchg
test
xorl
stos
mov
push
sub
xor
decl
inc
xchg
test
test
sub
adc
inc
fs
dec
int
pop
mov
pusha
cs
sti
lods
incl
rclb
xchg
js
out
pop
decl
sub
cli
jns
sbb
fcoml
gs
mov
ljmp
push
inc
shl
aas
add
pop
jl
pop
add
jmp
mov
jp
cmp
mov
and
movsb
xchg
mov
inc
jl
adc
push
sbb
out
cmp
mov
dec
add
push
out
pop
iret
mov
add
pushf
adc
ljmp
sbb
cwtl
dec
test
cmpsl
and
pop
dec
mov
push
decl
mov
sub
fildl
daa
and
jo
sub
fs
pop
adc
sbb
cmp
xchg
add
jmp
testl
nop
out
adc
xchg
adc
cmp
in
decl
outsl
mov
push
ret
or
pop
xchg
cmpsb
jo
cmp
push
mov
push
inc
mov
push
cmp
out
cmp
and
enter
or
aaa
push
dec
mov
aas
mov
pop
std
fdivrl
or
mov
cmp
cltd
or
scas
xlat
mov
cmp
fdivs
mov
and
jb
pop
lds
jg
xor
inc
popa
jne
orl
inc
cmp
dec
testb
jo
push
and
movsb
jb
mov
push
stc
mov
addw
mov
ret
sbb
push
mov
idivb
mov
pop
add
decl
mov
rcrb
aaa
push
mov
mov
pcmpgtb
push
and
inc
xorb
mov
pop
inc
outsl
inc
pusha
and
add
cmp
xchg
dec
stos
inc
add
repz
das
and
sbb
movsb
cmp
pop
in
mov
lcall
inc
jno
outsl
adc
jmp
push
inc
push
decl
into
sbb
xor
lahf
dec
es
xor
xchg
dec
and
xlat
in
pushl
inc
cwtl
pop
mov
add
inc
dec
mov
rclb
sahf
ret
and
cmp
shlb
dec
enter
or
jo
pop
into
movsb
roll
je
cltd
fdivs
dec
iret
pop
inc
test
gs
les
mov
add
cli
inc
mov
cmpsb
cmp
jg
fcmovnb
or
loope
push
mov
mov
add
and
enter
lahf
adc
jg
ljmp
popa
xchg
mov
insb
pop
popa
and
mov
cmp
mov
push
jne
dec
mov
in
lahf
mov
adc
adc
inc
jne
sub
jne
decl
push
jecxz
jbe
and
pop
mov
jno
and
incl
jg
rcr
pop
adc
scas
inc
popf
dec
jl
ficoms
sub
dec
xchg
pop
cli
popf
pop
sbb
jnp
rolb
ret
out
jo
dec
in
or
push
pop
jp
adc
xchg
ja
imul
lds
ret
in
cmpsl
sub
sar
incl
enter
add
sub
loop
push
aad
adc
sbb
lcall
cmc
push
push
rclb
jg
rolb
call
aaa
mov
add
adc
xor
push
push
add
mov
lock
cmp
int
push
ja
test
add
mov
jg
or
or
outsl
fsubrl
push
push
divl
inc
clc
pushl
lret
mov
xchg
fdivr
mov
push
adc
rcrl
pop
testb
push
shll
dec
or
lcall
incb
push
jmp
lds
clc
cwtl
les
sub
xchg
add
jb
sbb
xlat
dec
fisubs
incl
xchg
cmp
cmp
pop
push
ret
pop
nop
hlt
xchg
movsl
mov
inc
pushl
cmpsl
add
sbbb
or
dec
sub
mov
adc
inc
inc
and
in
loope
std
jmp
rolb
ret
adc
in
adc
xor
adc
lods
adc
pop
add
adc
jo
push
push
outsl
and
cmpsb
dec
xchg
jne
inc
sarb
dec
inc
sub
movsb
cwtl
mov
ljmp
mov
or
sub
or
jmp
add
pop
popa
dec
xchg
dec
rolb
add
cli
ljmp
mov
lcall
fldcw
cmp
ss
pushl
sahf
insb
icebp
mov
inc
mov
inc
mov
or
ljmp
popa
add
inc
lock
pop
add
sahf
pushl
cld
lcall
movsl
into
add
inc
addr16
sub
negl
add
js
incl
xlat
out
pop
mov
shll
inc
and
inc
je
cltd
add
mov
sbb
ret
clc
and
add
sbbb
add
xchg
mov
ljmp
jo
out
xchg
out
hlt
xor
seto
stos
pusha
xor
addr16
iret
pop
sub
adc
insb
inc
mov
popf
sub
idiv
and
lret
int
das
pushf
js
loope
cmp
mulb
sub
xchg
mov
sahf
pop
movsl
xchg
ret
lea
jmp
add
add
dec
inc
xor
or
mov
add
mov
lcall
and
imul
inc
nop
in
push
ljmp
push
leave
arpl
orb
addr16
dec
cwtl
inc
dec
popa
and
adc
das
das
clc
jmp
into
jge
aad
cwtl
ret
add
push
adc
sub
cs
and
test
fcomip
mov
push
add
dec
mov
pop
pop
inc
test
je
popa
add
mov
scas
clc
incl
xor
jp
popf
push
or
adc
adc
cmpl
sub
clc
dec
xor
shrb
arpl
and
js
sub
jmp
gs
inc
cli
lahf
mov
std
adc
ror
call
sub
shrb
imul
dec
lcall
cld
or
lcall
adc
bound
call
add
xor
or
pop
pop
movb
incl
xchg
shrb
add
lea
jge
or
or
add
add
scas
ja
cli
in
fimull
adc
dec
mov
and
addr16
rolb
cmp
sbb
jp
clc
jg
dec
lods
dec
add
into
mov
rolb
inc
jbe
sub
ljmp
and
sbb
push
scas
add
mov
pop
popf
mov
aam
adc
nop
and
ljmp
or
push
repnz
push
adc
cmp
push
inc
adc
jg
ss
and
dec
inc
rol
adc
xor
hlt
lret
add
out
mov
inc
add
or
ja
pusha
add
stos
add
ljmp
mov
pop
mov
cmc
cmp
add
movsl
sti
ljmp
ficompl
imul
jbe
inc
cmp
add
cli
shlb
movsb
cmp
adc
std
jg
or
test
aas
adc
je
mov
mov
sub
ret
or
inc
scas
cmp
mov
gs
enter
sub
inc
jae
jno
cltd
popa
sub
dec
add
or
dec
jne
mov
cwtl
cli
sub
repnz
ds
inc
or
adc
adc
push
add
mov
cld
jg
and
js
rolb
enter
inc
xor
or
dec
sbb
fnsave
cmc
pop
shlb
mov
mov
jp
ljmp
sbb
inc
sbbb
call
pushf
push
or
ficoms
int3
push
xchg
xor
ljmp
pop
call
fisubrs
xchg
adc
inc
loopne
dec
and
sbb
xlat
and
sbb
out
mov
or
mov
push
sbb
outsb
mov
int
xchg
decl
jo
inc
or
data16
jne
fstpl
xchg
in
rorb
jg
jmp
push
dec
adc
sbb
pop
or
mov
fs
sbb
push
decl
clc
adc
or
xor
pop
mov
lds
push
cmp
pop
fdivrp
pushl
sub
adc
fs
dec
cmp
mov
lea
jae
scas
push
add
icebp
cmp
pop
add
popa
lock
jp
jae
ret
xlat
aas
add
dec
fmuls
and
jmp
jne
dec
inc
ljmp
sub
pop
add
mov
decl
fstl
arpl
loop
sbb
inc
push
xor
icebp
idiv
jmp
movsb
inc
xor
call
dec
add
pop
sbb
mov
call
adc
add
cmpsl
test
in
add
out
cmp
inc
mov
cmp
cmpsb
xor
push
pop
les
das
sar
jg
push
and
out
testb
adc
or
hlt
cmp
cmp
jle
mov
dec
push
xlat
or
test
cmp
pop
or
outsb
jle
cmp
call
pop
dec
rorb
pop
xchg
fdivs
jecxz
push
mov
pushf
xchg
lcall
jmp
inc
lcall
cmp
mov
push
ss
sub
loope
shlb
in
call
mov
adc
push
std
aas
lock
call
mov
rorl
lods
leave
mov
xchg
push
lcall
xchg
ret
in
xor
fsubs
mov
or
pop
push
add
sbb
aas
cmp
cmp
inc
sub
jg
or
data16
xchg
test
jg
fmuls
jmp
sub
lea
cmc
ljmp
dec
inc
rorl
mov
cmpsl
enter
dec
ljmp
jo
xor
sbb
andb
cmovp
or
inc
push
les
push
cmp
jmp
hlt
and
aas
or
nop
mov
fcomip
jne
outsb
mov
adc
mov
dec
and
and
fwait
and
in
pop
pushw
add
push
pop
cmp
xchg
or
and
fimull
js
lods
stc
mov
sbb
test
pop
add
inc
pusha
pusha
mov
or
push
cmp
repnz
jmp
or
pandn
or
sbb
xchg
jne
sbb
xor
mov
mov
cmpsl
jo
clc
test
ljmp
es
subl
idiv
incl
push
into
adc
lds
in
nop
mov
jno
clc
js
mov
add
mov
out
sbb
sbb
sub
adc
pushl
mov
xchg
adc
push
mov
aad
shrb
and
outsb
popa
and
mov
mov
test
test
xor
das
pop
bound
dec
adc
jp
test
pmullw
call
lock
or
adc
mov
roll
push
sbb
test
dec
jmp
mov
rorl
in
cmpb
dec
pop
xchg
add
mov
fs
dec
cmp
add
inc
int3
inc
jp
pop
inc
mov
orb
jmp
pop
and
jno
push
dec
sbb
cli
arpl
xor
jg
jae
mov
xlat
jmp
ja
lea
sbb
adc
inc
daa
test
imul
call
or
outsb
or
jo
jo
pop
xorb
jne
cmpsl
sub
pop
incl
push
mov
mov
inc
mov
movl
incl
rol
jle
out
cmp
and
xorb
fists
or
sub
fchs
pop
jp
inc
push
mov
cmp
sub
jbe
lret
cli
jg
push
sub
inc
outsl
cmp
jmp
sahf
jg
je
jg
jne
repnz
fdivrp
mov
or
dec
add
ret
push
dec
add
xor
pusha
jle
xor
xchg
inc
call
xchg
ret
dec
test
or
sub
sbb
and
addps
xor
xchg
jmp
insl
or
test
outsb
out
adc
adc
fs
sbb
or
sbb
fidivrs
and
incl
sbb
and
das
or
xchg
aaa
mov
testl
clc
decl
jecxz
rcll
or
inc
and
pop
and
mov
das
add
in
mov
push
push
mov
sbb
pop
and
pop
clc
out
incb
lcall
cmp
lock
pop
rorb
and
popa
xchg
cmp
dec
add
mov
shr
inc
js
mov
gs
push
dec
sub
xor
jmp
mov
sbb
or
adc
hlt
add
jmp
adc
push
add
cmp
pop
inc
mov
pop
cmc
dec
or
cmp
jb
js
xchg
mov
xor
push
loope
sbb
fildll
cmp
push
push
inc
fwait
inc
lcall
hlt
addb
fdivrs
mov
pop
adc
dec
dec
leave
fldt
push
xchg
or
or
xlat
push
in
dec
push
or
mov
inc
adc
insb
ljmp
xchg
mov
adc
push
adc
push
xor
dec
loopne
or
cli
mov
mov
data16
xor
movsl
add
mov
push
jbe
push
fucomp
adc
or
add
dec
dec
in
decl
pushl
and
mov
test
je
aad
jmp
cwtl
rcrb
pop
push
outsb
add
mov
push
cmp
pop
in
xor
xchg
and
repnz
adc
cli
decl
push
in
clc
inc
in
jbe
repnz
cmp
pop
mov
adc
cmp
jg
mov
out
bound
mov
sti
dec
pop
add
or
cmp
mov
lcall
test
icebp
shlw
inc
rep
mov
cld
jmp
movsl
mov
xchg
xchg
inc
xchg
xorb
add
cwtl
bound
out
gs
call
inc
dec
rclb
sahf
insl
das
sbb
pop
inc
dec
cld
dec
jle
mov
stc
xchg
push
cmpsb
mov
loop
in
push
fsubr
adc
rol
pop
jg
add
push
scas
sub
out
sahf
and
incl
fdivrl
sbb
das
jp
lahf
add
adc
cmpsl
push
ds
bound
imul
inc
aaa
xchg
push
adc
push
orb
es
loopne
int3
adc
fistpll
cld
push
xor
inc
add
out
xorb
pop
aam
decl
xchg
imul
pop
lahf
dec
jl
xchg
cmp
push
xchg
jne
in
das
cli
jg
add
jge
or
ret
mov
push
pop
fisubrl
cmp
aaa
call
daa
add
push
das
in
or
mov
aam
sti
out
sub
mov
xchg
jne
jg
jg
aaa
sub
and
mov
add
add
push
lret
inc
xor
push
cli
clc
ljmp
sbb
ljmp
mov
subb
adc
ljmp
push
sti
je
les
xchg
movsb
faddl
pop
or
push
xor
jmp
mov
addr16
adc
xchg
mov
and
adc
inc
fwait
or
jbe
or
inc
or
add
incl
outsb
fisttps
jmp
movsb
sbb
dec
dec
mov
xor
or
sbb
call
rorb
sub
int3
add
mov
cmp
xor
ss
call
loope
push
add
xlat
adc
movaps
and
cmp
inc
loopne
sbb
mov
aam
fwait
aam
idivb
test
cmp
or
decl
pop
inc
enter
aad
fsubl
lea
jle
mov
bound
dec
and
inc
imul
push
cltd
pop
clc
adc
mov
add
inc
pop
ss
das
gs
jge
jmp
data16
iret
stos
test
push
push
xor
fistps
lret
rol
jno
dec
mov
sbb
dec
test
xchg
xor
adc
inc
addb
push
jg
inc
addl
pop
stos
pop
loopne
ret
add
jge
imul
xchg
in
xor
mov
fdivrs
push
hlt
jp
mov
aam
and
fisttps
jno
jo
lds
je
test
lahf
mov
and
xor
iret
inc
dec
pusha
orb
bound
ljmp
js
aaa
divl
les
mov
push
xchg
add
lcall
push
inc
mov
sbb
cmp
ja
add
and
inc
rcrb
aaa
pop
sub
jg
cmp
adc
inc
ja
jg
sub
dec
jg
push
mov
xchg
ja
jecxz
add
out
cmp
pushl
xor
arpl
mov
ja
mov
jp
cmpsb
or
jmp
add
jmp
mov
popf
lcall
sub
mov
sbb
sub
add
les
and
shlb
mov
adc
lcall
mov
aaa
mov
push
sub
ret
scas
ljmp
int3
bound
jge
decb
cli
stos
pop
push
jecxz
add
add
or
into
lcall
add
mov
rclb
or
clc
fcomip
push
mov
and
mov
jg
fisubs
jo
jmp
insb
cmc
jl
and
or
adc
mov
push
sub
sub
lcall
pushf
pop
pop
or
or
inc
js
sarl
cmp
pop
les
add
int
fs
int
lcall
sahf
lret
scas
cmp
add
repz
shrb
sub
push
adc
out
mov
push
push
xadd
ret
pusha
mov
add
or
jns
imul
outsb
sub
jmp
mov
dec
mov
add
push
mov
sub
roll
pop
pop
bound
xchg
pusha
add
adc
ss
pushl
jp
push
add
adc
xchg
movsl
rolb
ficoml
mov
inc
mov
nop
xchg
in
and
sbb
bnd
or
mov
clc
outsb
inc
incb
ss
outsb
sub
dec
or
and
movb
popf
mov
ljmp
ret
es
lret
jo
daa
call
xchg
cltd
jg
hlt
and
pop
dec
pop
outsl
pop
in
rcrl
add
jmp
cmc
decl
mov
xor
mov
in
test
and
out
cs
inc
lcall
xorb
cmp
sbb
dec
dec
sub
ds
mov
sbbb
or
ljmp
inc
xor
push
or
or
add
or
les
add
in
jb
incl
daa
jge
mov
mov
loopne
mov
dec
inc
fs
xor
lret
lcall
ss
add
mov
stc
push
push
sub
pop
inc
mov
enter
rcll
and
inc
into
pop
sbb
imul
fcomip
jge
sbb
fcomps
in
add
mov
push
mov
aad
lea
out
decl
lock
mov
push
test
pop
pop
cli
test
into
out
sub
je
mov
sbb
movl
lcall
add
xor
aas
cmpb
sbb
dec
in
sub
add
ljmp
mov
in
jbe
insb
jge
sbb
and
call
cs
sbb
xchg
xor
jmp
cmp
xchg
mov
sub
sub
iret
sub
test
xlat
shr
pop
or
push
inc
lods
or
repnz
jg
add
ss
lcall
sti
hlt
aaa
sbb
xor
lcall
mov
ret
push
cmp
pop
add
pusha
push
dec
repnz
inc
adc
and
loop
lods
in
mov
es
cmpsb
dec
mov
mov
ret
or
loop
test
scas
push
movsl
mov
lock
cmp
pusha
pop
les
add
clc
mov
mov
inc
adc
test
mov
ljmp
test
jne
adc
test
fs
cld
roll
and
das
aaa
movsl
xchg
scas
mov
sub
sbb
lock
jg
inc
sar
sub
lods
xor
lods
scas
sbb
stos
cmp
sbb
or
mov
ds
jb
mov
add
jl
gs
cld
push
sub
pop
xor
sbb
inc
inc
pop
and
clc
jmp
dec
xor
nop
nop
leave
xchg
or
pushl
clc
jb
push
jb
jbe
add
dec
push
xchg
lcall
dec
xor
adc
add
xor
mov
dec
jne
or
and
push
test
add
dec
in
mov
pop
cmp
xor
out
adc
jg
popa
pop
mov
push
sub
jbe
add
inc
pushf
sysenter
push
addr16
or
add
ljmp
mov
fcoml
adc
cmp
hlt
aaa
shlb
inc
pop
in
push
les
decl
and
push
push
adc
gs
pop
jecxz
and
mov
addb
les
xchg
imul
dec
xchg
dec
sti
mov
inc
or
test
addl
jb
push
xchg
fstl
fbld
adc
out
adc
je
xor
mov
addl
js
es
cltd
pushl
or
stos
sbb
sbb
cmp
push
movsb
or
rcll
mov
add
or
mov
adcl
adc
clc
in
testb
ljmp
dec
or
mov
jle
jg
adc
lret
xor
jmp
imull
cli
test
xchg
adcb
and
sahf
add
ljmp
dec
pop
xor
and
dec
ss
sar
les
add
adc
test
enter
push
jmp
jb
mov
mov
cmp
or
jbe
cmp
xchg
or
cmp
jmp
sbb
fnstsw
rclb
incl
inc
xchg
mov
aam
ret
addr16
aam
jbe
xchg
inc
push
cmpsl
xor
hlt
xchg
inc
addr16
dec
add
adc
mov
pop
aam
cmp
call
sbb
push
inc
or
or
xor
fadd
dec
lcall
icebp
dec
xchg
pop
jecxz
pop
dec
jg
ljmp
lea
lahf
rcr
xchg
iret
xor
mov
sub
pusha
push
je
decl
fwait
add
xchg
call
lret
mov
sbb
out
ljmp
ja
dec
add
nop
shlb
cmpl
sub
mov
incl
mov
movsb
test
adc
jns
test
outsb
clc
call
icebp
out
jb
pop
rcl
shlb
xchg
pop
or
call
lahf
das
and
push
mov
sbb
arpl
cmp
fisttps
jle
sbb
add
aad
dec
loop
add
repnz
and
jmp
bound
shll
mov
sbb
mov
cmp
add
xchg
sbb
xchg
sbb
sbb
mov
decl
adc
test
xor
lds
inc
and
xchg
sarb
add
pop
lods
push
push
pop
adc
mov
inc
lods
sbbb
xor
lahf
hlt
fistl
lock
xorl
cli
or
incl
loopne
dec
jge
bnd
movsl
rclb
adc
jle
imul
or
fcomip
bound
or
inc
jecxz
jge
je
inc
pop
push
enter
xchg
sub
out
testb
dec
adc
movsb
ror
xchg
ljmp
pop
add
jp
cmp
pop
sbb
or
jl
clc
pop
cmc
xor
sarl
dec
mov
test
insl
ficoml
mov
and
mov
add
add
incl
dec
je
loopne
xchg
testb
cmp
fcomip
pop
nop
jecxz
jbe
lret
inc
insb
xchg
sahf
add
cs
lcall
fwait
or
pop
xorl
add
decl
hlt
sub
dec
js
push
adc
push
sbbb
popa
test
add
jecxz
call
les
push
push
or
in
mov
mov
outsl
nop
lock
in
jns
loop
push
or
fimuls
call
mov
pop
inc
outsl
cmp
add
lcall
mov
add
and
leave
scas
cwtl
adc
pop
ja
pop
inc
and
sub
js
insl
dec
call
push
sbb
pushf
xchg
pop
clc
adc
daa
inc
jl
addb
lods
and
add
or
push
cmp
movsb
or
adc
fcmovb
out
nop
call
jo
sbb
out
xchg
ret
adc
in
mov
push
jg
pushl
adc
js
jb
xor
cs
out
insb
mov
ja
decl
not
or
gs
push
lret
ret
sub
dec
sbb
and
push
mov
hlt
call
daa
cmc
or
mov
or
dec
sbb
out
ret
enter
dec
ret
ja
and
ljmp
data16
rorl
cmp
inc
pushl
sahf
subb
add
lock
iret
fildll
insb
inc
stos
push
mov
call
inc
dec
sub
mov
fdiv
or
inc
mov
adc
sub
lahf
decl
bound
pminsw
lods
dec
dec
popa
cwtl
in
inc
sbb
test
aad
nop
es
lds
cltd
shrd
push
enter
and
incl
mov
mov
and
fimull
cmp
add
cmpsl
je
pushl
rclb
cmp
test
mov
les
stos
fwait
mov
mov
inc
clc
fstpl
inc
mov
jg
sub
js
fisttpll
mov
lret
push
fimull
xor
lcall
incl
push
push
pop
push
xchg
jno
lret
push
out
fistpl
fisubl
inc
data16
xchg
outsl
call
inc
nop
xor
dec
adc
inc
push
sub
inc
loop,pt
rorl
xchg
jns
mov
sub
mov
pusha
push
push
sbb
xchg
pop
cmp
in
mov
pushl
dec
sub
adcb
sub
imul
push
aaa
add
cmp
cli
or
cwtl
push
mov
or
decl
dec
inc
sbb
frstor
jg
xor
jmp
mov
loop
or
push
adc
or
jmp
xchg
xchg
push
cmp
cltd
jno
adc
test
js
and
addr16
sbb
pop
test
ljmp
and
fiadds
dec
cmc
sbb
rcrb
ja
dec
push
aad
icebp
xorb
add
xor
jp
ljmp
ret
mov
add
ljmp
roll
test
decl
pop
xchg
fwait
push
div
fisttpl
sub
mov
out
or
jg
and
xor
sahf
fwait
sbb
movsb
hlt
filds
and
cld
test
sub
xlat
das
inc
rclb
jg
incl
sub
jmp
in
pop
scas
icebp
pop
sahf
cmp
in
divl
and
add
mov
les
and
or
incl
stos
popa
mov
push
dec
mov
push
ljmp
test
adc
push
movsb
fcmovu
clc
push
bound
sbb
loopne
pop
shrb
add
outsb
add
std
addb
add
lret
add
mov
or
fwait
movsl
scas
pop
mov
xchg
fst
push
push
dec
std
call
sub
pusha
jnp
repnz
cmp
or
and
sti
push
fistpll
fs
or
jae
hlt
and
mov
cmp
dec
aas
jo
mov
adc
adc
fldl
sbb
decl
mov
mov
je
adc
popf
lods
adc
aaa
daa
aam
xor
adcb
lcall
hlt
scas
mov
xchg
nop
jo
and
xchg
xor
gs
incl
xchg
mov
add
jg
and
push
outsl
or
loope
mov
cmp
push
call
test
mov
cmp
mov
adc
addr16
pop
inc
aad
sub
sbb
incl
adc
rcl
cmp
add
sbb
cmpsb
jo
add
dec
or
push
loopne
cmpsl
call
adc
jae
adc
mov
arpl
pusha
inc
mov
xor
ljmp
fldenv
and
in
mov
or
pop
adc
iret
jns,pt
add
mov
decl
inc
add
xor
adc
into
ja
add
addb
push
sub
sbb
push
repz
cld
mov
add
push
nop
inc
inc
les
loopne
movsl
bswap
inc
hlt
mov
pushf
pop
sbb
adc
lahf
and
adcl
mov
in
outsb
ret
sbb
int
xlat
inc
movsb
sbb
ffree
sar
adc
push
jmp
adc
gs
lods
push
test
jne
std
jg
sub
sbb
cmp
mov
cmp
movsl
hlt
xchg
dec
cwtl
incl
push
rclb
in
sub
cwtl
mov
enter
cmpsl
dec
xchg
nop
jb
pop
sub
sar
outsl
es
ss
lods
sti
jo
jne
stos
jg
and
mov
fistpll
jg
cmp
dec
pop
jle
adc
cwtl
int
insl
outsb
aam
sub
cld
call
add
ljmp
mov
jmp
insb
xor
xchg
ret
lret
dec
dec
arpl
or
movl
and
add
mov
xchg
incl
xchg
sbb
insl
xchg
dec
call
jnp
jp
fbld
jnp
inc
bound
shll
bound
lcall
shll
pop
mov
dec
push
dec
out
cmpsl
mov
clts
inc
and
xor
incl
sbb
jmp
pop
and
test
cld
ja
adc
cld
call
fs
lods
xchg
imul
cmpb
sub
aas
xor
or
das
push
dec
inc
imul
fbld
push
dec
dec
pop
dec
add
enter
lcall
enter
inc
add
xchg
inc
adc
xor
push
add
dec
dec
and
mov
cmp
sub
mov
nop
sbb
jb
add
cmp
pop
mov
js
jecxz
dec
pop
jns
inc
or
xor
add
xor
push
nop
pop
lods
fldl
jge
enter
mov
shrl
call
sbb
pop
adc
jmp
inc
out
inc
out
xorb
lcall
push
sbb
aaa
in
mov
inc
cmp
add
lahf
insb
xor
jp
aas
mov
jecxz
and
dec
enter
adc
cmp
pop
mulb
loop
or
push
cmpsb
sub
xchg
or
mov
ljmp
pop
mov
rcrl
imulb
or
divb
inc
adc
imull
cld
mov
dec
addr16
dec
mov
mov
out
mov
mov
hlt
sbb
fstpl
enter
idivb
mov
xchg
leave
sub
mov
fidivrl
jmp
clc
jmp
pop
jne
clc
ljmp
mov
pop
lock
xor
push
pop
push
daa
adc
incl
fcmovnbe
ds
in
jmp
sub
fdivrp
pop
inc
push
jmp
arpl
out
xchg
cs
enter
mov
dec
je
jo
add
daa
jae
js
incl
lcall
cmc
lcall
hlt
sub
add
mov
jno
pushl
fmuls
repnz
push
pop
add
inc
test
or
cmp
loope
es
ljmp
mov
or
xlat
fstps
hlt
dec
sub
and
ljmp
jg
push
ror
dec
pop
add
imul
jle
idiv
aas
or
pop
or
aam
shrb
or
sub
sub
push
aam
lds
and
xor
fdivl
iret
enter
lods
int
adc
lds
jne
jmp
push
adcb
cmp
lods
add
mov
clc
mov
lret
adc
push
jecxz
idivb
test
cmpl
sbbb
movsb
inc
dec
inc
shrb
mov
cld
ja
addb
lock
jmp
sub
jmp
inc
aaa
std
sub
xor
jle
lcall
dec
inc
cmpb
and
inc
cltd
adc
lcall
push
pop
mov
neg
xchg
mov
in
and
int
shrl
inc
into
pop
hlt
xlat
ud0
dec
incb
scas
push
or
xor
or
inc
mov
push
add
aaa
or
add
mov
push
inc
or
sti
subl
int
push
or
xchg
dec
ss
cmp
fucomip
push
push
push
jnp
es
daa
scas
daa
adc
push
or
pop
in
push
ljmp
hlt
ss
outsl
pop
rcll
inc
js
sub
decl
mov
and
outsl
and
add
sbb
int3
das
jmp
test
fcomip
xchg
sahf
rclb
insb
call
lock
mov
xor
fcomip
fsts
rorb
outsb
sub
pusha
inc
pushf
daa
fcom
nop
xchg
sub
ljmp
inc
repnz
lock
pop
xchg
sub
add
sbb
jmp
adc
add
or
insl
jne
fs
and
inc
stos
mov
in
sbb
pop
inc
mov
adc
and
sahf
push
dec
adc
inc
mov
adc
lock
jg
push
xor
gs
loop
sahf
or
pop
pop
push
cmp
dec
and
mov
pushf
stos
push
cmp
push
sbb
cli
add
jno
lret
adc
lods
dec
shr
sarl
iret
cmpsl
xchg
or
xchg
jbe
and
mov
lea
inc
and
pop
lock
jg
incl
pop
adc
pop
sbb
dec
pop
jne
pop
aas
add
or
mov
mov
lret
jne
adc
sbb
mov
sbb
dec
pop
push
popa
add
xor
das
mov
push
dec
or
jp
nop
rcrb
dec
or
dec
xorb
scas
imul
mov
decl
enter
sbb
pushf
mov
jmp
fiadds
jo
jp
jmp
testl
fdivl
push
push
mov
inc
test
add
mov
mov
pop
xchg
and
jmp
imul
test
jno
jl
adc
push
mov
adc
xchg
push
mov
shrb
add
loop
dec
ret
xchg
pushf
je
imul
push
dec
and
in
jnp
push
add
test
and
inc
in
daa
jge
sbb
leave
insl
xchg
lods
sbb
mov
inc
sub
push
fneni(8087
leave
add
es
in
dec
or
loopne
add
stos
jg
aam
or
mov
incl
cmp
cmp
adc
sub
ds
push
inc
ret
or
jge
ljmp
sub
and
pop
add
or
jb
sti
cld
cmovnp
mov
xor
loop
push
xchg
or
cmp
jbe
call
xchg
cltd
lcall
outsl
arpl
outsl
cmp
out
hlt
jge
push
imul
dec
mov
incl
cltd
xchg
and
jne
sub
sti
in
pop
jecxz
jo
mov
rol
add
adc
ja
add
mov
and
push
outsb
repnz
mov
sbb
popf
xchg
mov
and
cli
xor
bound
outsl
mov
cmc
pusha
and
andl
fs
leave
push
xchg
outsb
mov
sub
xchg
inc
push
sbb
sbb
ret
push
cmc
dec
or
xor
push
clc
dec
ja
bound
daa
dec
fcompl
add
decl
sub
imul
and
inc
jae
divl
jmp
fwait
pushl
mov
add
and
sub
fs
fwait
insl
mov
or
inc
mov
or
mov
pause
dec
mov
cmp
add
sub
lods
mov
in
mov
push
out
jne
call
call
adc
outsb
paddw
xchg
in
add
push
cmpb
mov
jg
call
dec
arpl
addr16
hlt
inc
rorb
push
cmc
es
push
or
xor
ljmp
adc
or
clc
xor
test
mov
scas
lcall
inc
cld
jecxz
in
push
cld
enter
xlat
and
stos
pop
inc
loop
cld
xor
sbb
repnz
insb
pushl
das
inc
xchg
addb
adc
roll
inc
repnz
fsubrs
push
stc
jmp
movsl
pop
rolb
push
icebp
lcall
aam
int
pop
pop
shlb
addb
cmp
fst
xor
dec
fucomp
int3
test
shlb
mov
jmp
cmp
lock
inc
insl
xor
sub
jbe
js
push
sub
mov
add
sbb
dec
sbb
push
pop
loope
push
cmpsl
stc
or
icebp
lret
mov
xchg
and
push
ljmp
xchg
rcll
and
rol
xchg
mov
mov
mov
imul
dec
test
adc
shl
out
sub
insl
and
dec
inc
bound
mov
pop
mov
aam
dec
sbb
cltd
mov
ljmp
add
mov
adc
scas
dec
cwtl
or
dec
jmp
ret
fwait
decb
cmp
pop
and
loope
and
adc
outsl
sbb
decl
movsb
pusha
mov
and
int
xchg
cli
cmpb
add
xchg
popf
mov
lds
mov
pop
xchg
xor
cmp
call
mov
aaa
xchg
or
aas
jl
mov
lods
sub
cmp
xlat
sbb
or
and
call
pop
push
push
ret
xchg
add
inc
push
aam
cmpsl
outsl
std
mov
sbb
jb
sub
xor
dec
fs
mov
jg
or
dec
sti
imul
fadd
add
out
xor
and
andl
xchg
aam
gs
sbb
das
movsb
addl
incl
cld
jmp
jge
loop
mov
mov
jns
pop
push
sbb
decl
mov
lea
ficompl
xorb
dec
mov
sbbb
pop
pop
mov
roll
jnp
and
adc
fiaddl
mov
daa
int3
mov
jbe
sub
movsb
pop
jge
ret
orl
xchg
mov
ljmp
sub
inc
mov
aas
outsl
dec
imul
and
inc
sti
lea
add
inc
sar
xor
jecxz
adc
adc
jg
cs
rcl
fcmove
es
lahf
pop
hlt
push
int3
jg
pop
or
or
inc
lea
pop
sbb
add
ljmp
and
clc
test
add
call
sbbl
or
mov
lcall
pop
rcr
mov
ljmp
aad
sbb
sub
adc
add
call
adc
jbe
inc
test
hlt
test
push
xor
add
jmp
pop
push
adc
dec
xor
enter
xchg
push
nop
xchg
fsubp
add
add
ljmp
clc
adc
pop
clc
push
sub
rcll
das
inc
add
add
adc
insl
scas
es
xchg
call
sub
test
inc
or
add
into
or
int
pop
jmp
and
pop
add
inc
mov
dec
cld
ljmp
push
push
mov
push
dec
or
clc
fsubrs
cld
fwait
push
je
int
arpl
xchg
dec
and
test
ljmp
lock
adc
lock
test
or
jno
inc
lds
pop
mov
xchg
push
cld
incl
and
sub
sbb
adc
movsb
sbb
decl
xchg
stos
adc
pop
mov
dec
out
shrb
push
lahf
pop
jg
cmpb
popa
push
fnstsw
xor
rclb
lcall
xor
mov
adc
add
sub
lcall
dec
push
arpl
push
xchg
pop
jae
or
lcall
insb
jmp
insl
pop
lret
sbb
or
roll
mov
lcall
or
push
inc
lret
mov
sub
stos
pop
add
push
sub
pop
jecxz
mov
mov
in
mov
nop
cmp
addb
scas
ljmp
pop
inc
fbld
mov
adc
xchg
fcomp
mov
incl
orl
inc
divl
mov
repz
inc
push
push
mov
pop
pop
dec
ret
push
pop
pushf
ror
sbb
pusha
hlt
call
sbb
sub
loope
cmp
add
add
dec
fs
lcall
jmp
xor
add
pop
cmp
mov
pop
mov
test
push
shrl
mov
inc
add
push
mov
int
inc
dec
outsb
dec
push
pop
imul
sbb
ret
sbbb
lcall
fsubrs
roll
push
dec
mov
insb
loopne
sbb
jg
imul
fimuls
fcompl
inc
dec
mov
jl
loop
jo
ret
movsb
repz
xchg
sub
andl
xor
hlt
inc
shl
push
lods
and
lods
dec
and
outsl
pop
pusha
fisttps
sti
inc
jb
mov
or
cmpsl
sub
stos
incl
mov
rolb
or
add
int
aad
fildl
adc
ljmp
daa
add
or
add
mov
jns
in
cmp
cmp
sbb
jg
mov
popf
add
add
je
inc
fdivl
jno
imul
sub
sub
ljmp
add
add
lea
inc
xchg
test
popa
out
ret
jp
aam
es
aam
dec
adc
lcall
and
lods
sbb
mov
test
std
fdivs
popa
dec
add
xor
sub
hlt
lret
rclb
stos
fcomip
decl
out
or
lret
jle
mov
cmp
inc
and
pushl
mov
dec
cmp
and
es
pop
sbb
lods
push
mov
and
jg
dec
aam
push
lcall
sub
into
cwtl
or
inc
es
sar
call
sub
push
or
push
adc
aam
mov
add
es
mov
lahf
push
arpl
add
mov
mov
xchg
mov
sbb
imul
pop
test
out
xchg
add
xchg
adc
out
push
mov
es
jb
mov
cmp
jo
fiaddl
mov
lods
loopne
pop
fs
outsl
mov
fs
adc
push
ljmp
and
add
shl
or
pop
das
pushl
add
mov
dec
push
xchg
cli
cmp
mov
pop
xchg
xlat
test
icebp
dec
mov
mov
dec
dec
inc
insl
in
cld
mov
sub
insl
adc
jo
push
xchg
add
daa
add
xchg
icebp
mov
cs
and
gs
aas
lods
adc
decl
clc
pop
in
leave
scas
or
xchg
mov
push
clc
inc
aas
imul
roll
jmp
hlt
sub
ja
mov
aas
pop
add
mov
js
sarb
push
mov
sub
hlt
iret
popf
lods
sahf
push
adc
rcrb
dec
cmp
js
add
dec
nop
shlb
mov
imul
clc
jmp
push
cld
lock
ficoms
push
ljmp
addl
cmpsl
cli
les
loopne
pop
in
dec
and
repz
pop
or
cld
or
mov
xorb
aaa
mov
jg
fisubrl
push
das
adc
ss
mov
or
cmpsb
push
jmp
ret
lret
cli
mov
xor
fwait
dec
fstpl
push
inc
xor
faddl
daa
fdivs
and
aaa
push
std
cvtps2pi
roll
outsl
or
loop
xor
gs
vpmacssww
push
adc
xchg
or
pop
cmp
jecxz
ret
outsb
cmp
nop
sbb
cli
push
lcall
adc
cld
ljmp
adc
fistpl
in
mov
and
cmc
sub
out
mov
push
ret
sub
push
dec
lret
cltd
xchg
jnp
fbld
cs
adc
add
adc
sbbb
mov
and
out
or
jmp
push
and
add
add
repz
or
sub
push
mov
cmp
push
cmp
sub
data16
stos
inc
lock
sub
cmp
pop
hlt
ljmp
loopne
sbb
pop
aam
dec
xor
xor
std
das
push
sbb
add
fwait
rolb
ret
ljmp
cli
inc
sbb
add
pop
test
jmp
mov
xchg
cmpb
dec
sti
xchg
fcoml
sbb
pushl
dec
sbb
js
mov
push
push
dec
jb
sbb
add
loopne
add
push
call
cltd
nop
aad
insl
sub
daa
dec
push
inc
add
es
adc
and
outsb
jno
ljmp
aas
ret
call
cli
push
cli
mov
xchg
jg
pop
cmp
ret
popa
inc
or
push
mov
inc
jb
dec
mov
nop
cmpsb
mov
or
mov
push
and
stc
mov
add
lcall
push
or
loop
cmc
cmp
pop
cmc
lcall
ja
cmpsl
xchg
add
lods
mov
mov
pop
pop
mov
addl
push
pop
nop
mov
mov
xchg
test
push
adc
dec
xchg
add
sahf
mov
outsl
add
dec
mov
lock
cmp
call
or
pop
pop
cmp
sbb
adc
scas
sbb
cmp
or
mov
add
xchg
fsubs
mov
push
out
cli
push
cmpl
and
pusha
jo
dec
jecxz
insl
mov
dec
add
ljmp
jnp
pop
nop
fnstcw
or
pusha
insl
sbb
in
xor
mov
inc
out
popa
loope
ljmp
jb
lds
mov
cmp
mov
add
adc
mov
push
sub
imul
andl
psubq
lcall
or
loope
mov
adc
je
sbb
jecxz
out
clc
inc
push
jl
cmpb
xor
inc
in
mov
or
pushl
shl
and
or
movsb
lods
sub
dec
addr16
es
cli
mov
push
mov
decl
cwtl
pop
cmp
sbbb
jnp
sbb
call
add
add
xchg
sbbl
fmul
mov
pop
fcomp
pushl
nop
mov
addr16
ret
or
cmc
pop
sub
orb
xchg
pop
and
outsb
lock
xchg
jbe
xchg
jae
adc
and
mov
or
dec
xlat
adcb
aaa
std
and
ja
pop
pop
jle
xor
incl
dec
sbb
or
sbb
adc
incb
cld
sub
rcll
add
cs
jmp
add
test
sbb
pop
lods
push
mov
adc
fiadds
push
mov
add
mov
outsb
test
xchg
add
sub
jecxz
fidivrl
jg
pushl
adc
mov
cmp
jle
enter
push
pop
cmc
fdivrp
or
and
mov
dec
movsb
out
push
push
sub
and
cs
add
push
adc
push
loopne
jae
mov
scas
mov
scas
push
add
imul
xor
call
push
mov
sbb
cmpl
outsb
lcall
add
xchg
fildl
loopne
add
and
in
repz
mov
jb
pop
data16
xchg
jg
and
decl
jp
adc
aaa
lock
ljmp
imulb
push
repnz
push
push
push
push
loopne
add
aaa
cwtl
adcb
cs
jg
ds
stc
mov
jno
lods
push
jb
adc
popa
call
inc
sarb
ret
lock
pop
adc
pop
outsl
and
cld
mov
sbb
add
ficoms
push
or
das
clc
fbstp
out
rcrl
and
or
lcall
ja
popf
movsb
je
jne
gs
decl
pmulhw
add
xchg
sub
sbb
xchg
ret
push
into
lea
dec
sbb
xor
dec
or
rclb
loop
xor
dec
daa
and
ret
insl
lss
jl
mov
pushl
inc
adc
lock
cmp
lahf
ss
push
pop
fmul
push
mov
es
pushl
push
xlat
pop
xchg
xchg
inc
dec
sti
in
inc
popa
nop
lea
xorb
or
dec
jge
out
mov
jmp
pop
jmp
aad
or
mov
push
sbb
es
ret
jg
lods
stos
push
xchg
pusha
xchg
roll
cwtl
fcoml
ja
les
add
fldt
xor
fcomps
inc
pop
sub
sar
lcall
adc
mov
sub
xchg
scas
dec
pop
xor
daa
mov
shr
adc
js
inc
outsb
mov
ljmp
movsb
orl
cmpl
jg
sub
mov
and
dec
test
add
and
dec
mov
sbb
je
or
stc
nop
scas
sbb
or
xchg
add
clc
inc
or
decl
fildl
call
push
jg
repz
or
pusha
daa
push
add
stos
lea
out
enter
ljmp
push
int
and
add
pop
push
in
jno
loope
lock
lock
sarb
incl
inc
cmp
push
adc
divb
incl
rcrb
jle
or
xor
mov
push
sbb
cmp
mov
shrl
sub
lock
mov
push
ficomps
mov
xor
enter
adc
add
mov
adc
cmp
cwtl
push
test
loop
mov
jmp
or
ljmp
inc
rolb
cmp
push
movsb
push
and
fcomps
pop
and
int3
xchg
lret
push
mov
stos
pop
inc
jl
xor
add
rorl
mov
inc
scas
cmp
loopne
add
add
push
ja
das
test
push
and
stos
adc
adc
pushl
out
lods
pop
adc
xor
jl
xor
call
insb
jg
cmp
jmp
sbb
sub
faddl
or
incl
dec
dec
xchg
test
jbe
inc
dec
outsb
xchg
and
out
xor
mov
fsubl
mov
mov
add
add
mov
pushl
in
mov
jo
or
dec
in
pushf
mov
add
adc
pop
inc
icebp
leave
xor
adc
and
push
sbb
jns
push
adc
adcb
imul
mov
xchg
mov
hlt
add
cmp
pushf
add
scas
cli
pusha
mov
dec
or
sbb
sti
mov
push
jge
dec
pop
cmc
fildll
andl
xor
iret
jb
lcall
jp
lock
test
inc
lods
jo
bound
bound
incl
ss
sahf
pop
sbb
xchg
imul
imul
cmpsl
and
add
jb
decl
mov
add
daa
pop
daa
in
test
add
mov
push
or
or
push
jp
or
lret
jg
and
sub
mov
inc
arpl
jns
insb
add
lcall
add
movsb
rol
jns
or
paddd
inc
xor
inc
enter
jg
pop
stos
pop
xor
test
pop
mov
sbb
add
pushl
dec
push
pop
ss
or
and
inc
jg
mov
add
add
push
test
pop
inc
js
rorb
ljmp
shrl
cmp
or
push
repnz
adc
fwait
sub
xchg
mov
ljmp
push
cmpsb
sbb
test
adc
push
pop
pusha
adc
jmp
shlb
pop
gs
dec
int3
jp
jl
and
nop
cltd
or
add
ja
cmpb
dec
sub
and
mov
sbb
call
inc
ud0
mov
or
ret
pop
xchg
hlt
enter
add
fildl
jbe
decl
and
dec
test
jno
sub
pop
xchg
orl
dec
repz
push
inc
inc
mov
add
pop
adc
rcrb
sub
or
dec
dec
shl
pop
mov
stos
pop
jo
je
daa
push
pop
or
dec
jns
add
jg
xor
inc
mov
xor
jnp
pusha
icebp
fists
pusha
int
pushl
rcr
inc
sub
push
scas
cmp
imul
lret
aad
mov
mov
or
and
outsl
inc
xor
andb
aam
push
mov
mov
orb
xor
fcomip
cmp
mov
inc
fisubs
add
push
add
sbb
ljmp
pop
mull
jo
add
and
icebp
inc
pop
add
mov
in
pushl
dec
xchg
mov
mov
or
mov
popa
bound
sub
cmpsl
pusha
popa
pop
xor
pop
pop
nop
mov
incl
sbb
xchg
dec
movsl
nop
push
enter
movsb
pusha
notb
cwtl
inc
cli
ja
jno
pop
inc
je
add
dec
xorl
loopne
aas
decb
sub
fildl
jmp
jl
cmp
and
inc
dec
inc
fmuls
mov
call
jmp
xchg
xchg
push
cmc
jl
jb
rolb
iret
and
adc
lret
cmpsb
add
and
bound
stos
je
mov
cli
pop
jle
sbb
pushl
orl
adc
and
addb
rorl
sbb
outsb
cli
cld
or
fwait
jo
outsb
push
clc
aas
add
popa
inc
cmpsl
movsl
ljmp
adc
enter
sahf
add
stos
push
jecxz
pop
inc
adc
decl
into
movsl
pop
icebp
rcr
in
call
mov
repnz
and
popa
hlt
and
stc
imul
or
xchg
push
inc
or
cmpsl
shlb
notb
jle
pop
pop
sub
cmp
rcrl
insb
mov
dec
or
jae
leave
sub
push
cmp
es
ror
mov
sub
and
ret
adc
xorb
lcall
out
inc
mov
out
aad
dec
pop
test
add
std
outsl
call
add
aam
lock
out
mov
addr16
fs
push
dec
mov
incl
push
js
call
imul
and
cwtl
aam
pop
xchg
push
sub
lahf
jg
add
cmp
sbb
sbb
lcall
mov
mov
inc
scas
dec
hlt
push
xor
rcrb
cmc
shl
ja
les
add
call
pop
mov
or
loop
das
rclb
add
pop
adc
add
push
jmp
xchg
imul
sub
andl
test
arpl
or
mov
test
jge
mov
fbld
sbb
jmp
je
shlb
and
call
mov
scas
sbb
cmp
jno
test
pusha
shrb
xor
xchg
inc
jmp
pop
mov
push
add
aad
dec
pop
imul
cli
incl
add
hlt
or
lret
movsl
lock
insb
and
jge
fidivs
std
dec
lods
leave
jmp
adc
xchg
ja
sbb
dec
popf
ljmp
pop
push
pusha
push
add
ds
mov
pop
or
dec
bndstx
add
pushl
xchg
sub
pop
add
adc
loopne
mov
std
push
xchg
into
aad
ljmp
pop
xor
jmp
insl
push
daa
hlt
push
lea
std
jg
push
lcall
or
es
nop
loopne
mov
xchg
fistpl
ljmp
cmp
mov
or
pop
out
adc
pusha
data16
sbb
into
stos
popa
rcll
adcb
adc
sbb
sub
inc
inc
ret
push
cmp
int3
sub
test
sub
ss
sahf
fs
clc
pushl
pop
and
insb
or
data16
jb
fwait
test
shld
sbb
sub
data16
insl
icebp
add
shr
sub
or
arpl
int3
daa
or
mov
ss
loopne
adc
nop
and
xchg
lods
mov
fimull
incl
les
sbb
in
and
push
in
nop
xor
sbb
inc
call
cmp
or
out
cld
cmpl
push
mov
mov
sub
aam
aas
repz
or
lcall
daa
and
sub
or
mov
nop
adcl
call
addb
and
xor
sbb
incl
mov
push
aam
cmp
add
or
fnstenv
sbb
and
ss
repnz
push
xchg
aas
dec
test
pop
pushl
or
cmp
mov
add
jno
adc
and
std
call
fadds
cmc
insb
cmp
orl
pop
jo
and
push
lods
lea
loopne
pop
loopne
fisubrs
or
loop
adc
adc
push
ljmp
test
outsb
outsb
push
or
sbb
ljmp
popa
fildl
jb
mov
ret
xor
stc
dec
ret
push
xchg
addl
test
inc
aad
call
xor
mov
aad
mov
pushl
xorl
jne
add
test
xor
ud2
push
add
movsb
sahf
lret
jmp
inc
lds
jmp
clc
ja
xor
jg
or
into
mov
repnz
sbb
repnz
in
add
insl
pop
mov
or
push
mov
ja
push
ljmp
sub
adc
mull
add
push
decl
pop
mov
out
clc
ss
add
sub
add
imul
inc
lcall
and
jo
call
lcall
pop
mov
ret
daa
dec
popa
call
clc
roll
lret
sbb
sbb
mov
push
pop
cmp
cmp
pusha
cmp
rorb
fidivrs
sarb
jo
aaa
mov
pop
hlt
decl
xchg
push
cmpsb
movsb
daa
jmp
ret
push
add
cmp
push
cld
ljmp
sub
in
cwtl
rolb
mov
lahf
pop
clc
or
xor
insl
add
push
and
sbb
jno
adc
push
mov
lcall
outsl
xor
pop
jle
sub
sbb
cs
movsb
mov
fisubrs
sub
sbb
lret
ret
js
add
jp
sub
call
jns
rcr
dec
pop
xor
adc
dec
fimuls
or
cld
fcomip
sub
loopne
cmp
movb
fnsave
out
mov
dec
imul
and
or
incl
ljmp
dec
cmpps
lods
and
adc
and
xchg
mov
jg
mov
repnz
add
jne
ret
fiaddl
mov
cld
push
out
dec
cmp
daa
dec
rorb
push
fs
sbb
push
jne
add
jnp
inc
adc
inc
jmp
sub
or
cmp
mov
lret
adc
lahf
cmp
pop
int3
jmp
ret
push
rorb
or
inc
jne
inc
nop
adc
mov
rcll
cli
ljmp
xchg
mov
add
and
add
pushl
pop
shll
test
pop
ret
shll
dec
out
andb
loopne
dec
es
mov
add
add
clc
pushl
xchg
jnp
mov
pop
inc
lcall
pop
mov
imul
mov
xchg
sub
push
ljmp
pop
or
cs
sub
xchg
xor
repnz
and
loope
mov
scas
push
adc
dec
jg
mov
push
xor
jmp
mov
jno
mov
shlb
dec
xchg
mov
mov
repnz
imul
inc
addb
push
jle
dec
push
jg
int3
leave
xchg
dec
sbb
and
sbb
adc
mov
or
xchg
incl
fcom
mov
addr16
xor
jne
jo
xchg
mov
ss
push
andb
insb
inc
das
addr16
lahf
and
cli
pop
enter
es
mov
cs
xchg
movsb
jg
dec
sbb
sbb
adc
lods
jge
add
mov
cmp
mov
cmp
mov
adc
cld
pop
nop
ljmp
bound
mov
xor
and
push
adc
xchg
cltd
movl
incl
mov
and
jmp
lods
test
pop
rolb
mov
call
jg
pusha
dec
mov
xchg
into
sti
push
sbb
inc
daa
mov
and
sub
cmp
mov
push
mov
call
inc
add
add
stos
lea
sub
or
or
add
adc
dec
jmp
shlb
or
loopne
lcall
cmc
xchg
mov
xor
or
or
outsb
test
aad
in
movsb
incl
and
mov
or
jmp
sahf
add
fs
xchg
xchg
rcrb
incl
shl
ret
inc
in
cli
adc
push
and
and
or
push
sti
sbb
jecxz
cmc
xchg
lcall
fisttps
mov
nop
push
call
nop
aam
sub
sahf
or
xchg
cmp
dec
clc
in
push
inc
sub
mov
add
cmp
ret
sub
xor
fwait
or
rcr
sahf
mov
imul
decl
hlt
lods
ret
ret
mov
dec
popf
sti
push
adc
dec
imulb
and
adc
int
scas
clc
decl
ret
pop
shrb
sub
and
mov
incl
and
xchg
add
xchg
jbe
test
dec
out
sbb
clc
sub
test
gs
fistpll
imul
aam
sbb
and
negl
cmp
rorb
lcall
mov
pop
add
loope
inc
jl
cs
mov
shr
ss
and
and
sbb
push
pop
xchg
int3
lahf
xor
aad
mov
jno
fcomip
mov
sti
push
inc
pop
daa
adc
test
imul
xor
pushl
xor
sub
daa
popf
mov
jmp
cmp
sbb
mov
stos
sbb
pop
mov
pop
lods
lcall
mov
cmpsl
and
daa
loopne
ljmp
cmp
lcall
gs
push
shll
rcl
and
aaa
std
rcrb
dec
push
dec
fisubrl
sbb
jne
imul
jg
enter
cmpsb
push
pop
inc
idiv
fdivl
jns
mov
jmp
pop
sub
test
jl
rclb
or
sbb
iret
xchg
fcoml
aam
xchg
jne
cmp
lods
xchg
dec
mov
sub
dec
pop
push
or
mov
test
movsb
pushl
pop
and
leave
xlat
dec
add
incb
cld
jg
mov
out
inc
ja
jge
ds
add
cmp
mov
int3
shll
pop
mov
sahf
loop
adc
aaa
dec
lahf
adc
iret
aas
lahf
add
into
out
jg
loop
fwait
andl
jle
inc
inc
xchg
adc
fidivl
or
add
add
add
xor
fcomip
ljmp
comiss
and
or
or
adc
push
idiv
decl
sbb
stc
ljmp
mov
repz
loope
add
popf
adc
int3
dec
adc
jmp
and
xchg
add
out
xchg
pop
leave
dec
in
adc
xor
inc
xchg
mov
pop
lcall
jno
popa
popf
test
cmp
add
dec
jp
add
nop
ret
xor
dec
cmp
xchg
adc
inc
or
aam
stos
aad
push
push
pop
pusha
xlat
fst
fldlg2
xor
je
pop
decl
sub
mov
ret
int3
inc
outsl
addl
dec
mov
ljmp
arpl
repz
push
test
pusha
or
sub
or
and
scas
mov
pop
push
mov
das
pop
stc
jg
add
cmpb
icebp
adc
sar
dec
sbbl
shrl
pushf
push
or
ret
mov
push
sbb
ljmp
enter
jns
xor
add
jmp
mov
jmp
push
clc
cmp
mov
or
or
test
and
das
dec
adc
mov
cmc
in
adc
jo
inc
sub
dec
mov
ret
sub
out
mov
pop
push
aam
xlat
outsb
loopne
jg
cmp
push
inc
loopne
add
sti
cmp
fcomip
lcall
jg
in
push
sub
je
mov
mov
xchg
jne
not
rclb
sti
cwtl
sub
cmp
loopne
ret
mov
loope
outsb
mov
mov
mov
adc
imulb
jl
adcl
mov
loope
std
cmp
xor
fimuls
adc
xchg
call
cs
pushf
movsl
aaa
js
adcb
lea
mov
push
jp
mov
lock
jnp
xchg
ljmp
xchg
dec
pop
or
addl
mov
mov
out
arpl
fcomip
jmp
dec
add
add
sbb
loop
sub
pop
adc
sub
sub
push
pushl
sbb
mov
or
add
ds
or
test
popa
xor
mov
inc
lcall
cmp
repnz
push
and
addl
fiadds
jp
jbe
cld
jg
add
sbb
jmp
psrld
xchg
jg
and
or
imul
add
add
jbe
mov
xor
xchg
fs
xchg
movsb
dec
xor
data16
push
ljmp
je
add
or
add
repnz
xchg
adc
cmp
mov
jo
cmp
or
mov
sbb
sbb
pop
ljmp
rorb
lods
dec
imul
inc
adc
lods
mov
push
and
incl
push
inc
xchg
mov
mov
pop
pop
add
pop
movsl
cltd
lods
movsb
lock
in
loopne
mov
in
mov
sahf
dec
or
clc
clc
lock
out
clc
or
cmp
inc
outsb
add
jne
test
rcr
int3
fcoms
xchg
enter
push
shlb
out
incl
jl
in
adc
pop
mov
add
cmpsb
push
mov
xor
dec
mov
rol
mov
add
cmpsb
jmp
mov
incl
loope
dec
fwait
cmp
fdivl
mov
cmpsl
dec
inc
cwtl
or
inc
bnd
int
ss
call
or
inc
mov
daa
imul
and
add
sub
add
adc
add
xchg
mov
or
mov
mov
mov
jae
mov
les
cwtl
add
pushl
rcll
lcall
jbe
fmull
into
sbbb
push
fmull
scas
adc
loopne
out
cmpsb
addl
inc
cs
jle
out
xchg
fcomip
dec
mul
push
and
jle
adc
sub
add
pop
int3
add
lret
or
add
clc
cld
cs
pop
mov
fdivs
or
add
dec
lcall
es
jmp
stos
push
lcall
call
mov
mov
sbb
fsubrl
sbb
and
call
mov
xchg
cmpsb
int3
or
dec
fadds
fdivrs
enter
aam
rorl
xchg
jg
les
lods
mov
xor
push
hlt
jl
add
rclb
and
push
and
inc
add
mov
jg
enter
mov
cmp
add
cmp
test
les
je
or
decl
movl
push
test
jge
aad
pop
dec
int3
hlt
adcb
bswap
jg
das
rcrb
pop
pop
insb
pop
fcmovnbe
pop
add
insl
mov
fwait
sub
fcompl
inc
push
insb
xchg
int3
adc
cmp
push
les
test
add
ljmp
in
call
fidivs
rcrb
push
pop
icebp
pop
les
cmp
arpl
rcrb
mov
aaa
add
imul
dec
incl
sub
push
jmp
loopne
jne
std
hlt
adc
enter
push
ljmp
sub
ret
shll
in
insb
mov
test
add
incl
or
sub
repz
int3
sub
push
cmpsb
js
lcall
add
aad
shlb
sub
call
ljmp
rcr
shl
add
or
cltd
pop
out
push
mov
cmp
pushl
cmpsb
sarb
test
test
add
and
mov
cmp
rcr
adc
mov
jmp
sbb
nop
test
sbb
nop
lods
negl
ljmp
clc
test
aas
cltd
icebp
mov
sbb
push
aam
dec
cli
call
int
push
lret
cmpb
jg
call
scas
js
fisubrl
mov
ret
mov
neg
push
push
cmp
push
adc
add
dec
call
loop
add
push
add
enter
mov
mov
dec
push
mov
je
rcrb
shlb
fwait
lods
decl
es
pushl
inc
xchg
xchg
and
mov
inc
aam
cmpsb
je
rcr
pop
fmuls
std
jmp
scas
pop
lea
or
xchg
dec
and
data16
push
repz
in
or
pusha
pop
jmp
arpl
push
and
and
adcb
sub
sub
adc
mov
test
sti
test
clc
or
std
out
lock
cmpsl
repnz
shr
adc
sbb
pop
xchg
lret
add
mov
xchg
arpl
loopne
ljmp
shll
popf
cli
nop
pop
mov
loope
or
and
divb
push
or
or
lcall
adc
fxtract
jns
nop
or
sbb
push
sbb
loope
lcall
jg
les
inc
leave
popa
xor
push
daa
aam
inc
movsb
mov
mov
xchg
jle
in
decl
lea
mov
les
aam
mov
push
sub
sub
jmp
add
aaa
or
pop
leave
pop
ja
dec
add
add
jno
dec
fisubrl
cmp
pushl
clc
mov
push
int
and
and
repnz
fadds
dec
add
jmp
out
mov
js
or
and
adc
xor
cld
mov
mov
inc
arpl
and
sbb
inc
or
or
clc
mov
fwait
cmp
idivl
aas
rcrl
mov
or
lcall
xchg
add
xchg
xchg
cmp
sar
ljmp
mov
outsb
out
inc
nop
jge
adc
adc
or
out
xchg
test
mov
mov
xchg
xchg
pop
mov
xor
addl
test
pop
testb
movups
jg
fcomip
push
add
fadds
loop
or
mov
stos
cld
inc
fs
jg
jmp
ss
pop
sarl
into
add
xchg
xchg
xor
add
push
es
mov
enter
dec
cmp
sbb
adc
and
fs
mov
pop
decl
call
or
mov
outsb
out
cltd
dec
pop
out
je
aad
mov
push
sahf
inc
or
jg
daa
test
jg
add
and
lret
shlb
cmp
mov
jns
pushf
dec
add
xor
pop
stos
sbb
shrb
mov
inc
outsb
ljmp
cli
inc
push
push
call
push
pop
lock
sbb
into
shrb
pushl
std
pop
sbb
mov
mov
push
mov
dec
ja
or
pop
mov
scas
movsb
incb
shl
and
clc
and
pop
mov
add
incl
cld
push
adc
push
leave
inc
mov
mov
xchg
adcl
sbb
jle
loop
mov
mov
cli
or
cmp
mov
xchg
inc
lret
adc
add
inc
imull
mov
sub
dec
rclb
shrb
gs
repnz
push
mov
call
cmp
xchg
mov
add
add
sub
mov
push
call
out
out
jo
sbbb
push
sub
lcall
mov
xor
ja
push
std
and
gs
adc
stc
pop
daa
xor
cld
test
dec
adc
aas
dec
jecxz
pusha
mov
or
jae
push
mov
rorb
mov
ret
mov
lods
add
decl
push
mov
or
push
inc
adc
or
int3
xchg
outsl
adc
push
add
mov
mov
decl
arpl
xor
push
push
mov
lahf
dec
or
pop
push
mov
xor
add
lods
mov
ficoml
enter
sar
or
out
subl
addr16
adc
sbb
add
or
pushl
or
or
adc
jno
inc
adc
lcall
decl
push
inc
int3
sub
mov
xor
mov
popa
lds
lock
sbb
popl
jbe
sub
lcall
inc
jg
in
push
add
push
push
sahf
out
jp
push
adc
pop
sub
add
push
mov
sub
decl
pop
movsl
push
or
dec
or
mov
pop
jg
and
out
cmovge
xor
xlat
mov
dec
and
ret
xor
pushl
pop
and
push
or
lret
addl
mov
push
push
mov
lea
fcoml
add
and
mov
dec
mov
test
push
lock
mov
pop
xor
popa
fcmovb
rorl
out
mov
add
aam
es
data16
scas
dec
push
rcr
std
add
das
add
push
int3
add
das
dec
cmc
pop
mov
xchg
sbb
loopne
fidivrl
xchg
dec
and
cmp
or
daa
into
into
push
xor
clc
insl
dec
add
add
clc
jge
cmp
sbb
lahf
or
jl
clc
out
test
outsb
dec
mov
out
push
jno
mov
xor
adc
mov
mov
mov
mov
adc
shll
rolb
pop
cmp
fistpl
pushf
inc
in
add
and
dec
cmpb
cld
mov
ja
pop
rcrb
ss
push
cmpb
ljmp
lcall
push
add
insb
call
sbb
mov
push
popa
sti
ljmp
fdivrs
mov
inc
pop
lret
cmp
mov
call
outsb
adc
jmp
adcb
push
or
xor
ss
out
sbb
imul
call
loopne
fst
dec
lret
cmpsb
in
xor
mov
daa
iret
xchg
xchg
nop
add
clc
lcall
add
hlt
cli
ret
out
lock
push
inc
cld
lods
in
xchg
mov
cli
dec
jbe
or
incl
xchg
outsl
sbb
insb
jmp
dec
dec
pop
pop
add
mov
push
pushf
jns
in
and
jmp
cmp
std
jo
adc
push
ds
sub
xorl
add
mov
cld
js
sub
add
jg
xchg
cmpsb
lock
xchg
rorb
sbb
int
lock
arpl
sbb
std
cmp
and
mov
mov
inc
ljmp
loop
pop
mov
pop
jl
dec
xor
jae
add
inc
imul
xor
mov
jmp
lret
push
add
outsb
jo
cli
push
xor
gs
adc
ljmp
cmp
sub
push
cmpb
and
js
jl
jg
xchg
inc
mov
push
cmpb
sbb
cld
js
loop
and
lret
mov
decl
pop
mov
fwait
and
cmp
push
jo
les
je
add
pushl
push
pop
in
xchg
add
ljmp
mov
pop
mov
ljmp
loopne
scas
mov
xorb
je
outsb
outsl
push
inc
fildl
and
incb
frstor
xchg
es
popa
and
out
add
je
or
and
lock
or
pop
and
add
call
pop
repnz
je
xor
add
xor
lret
cmp
xchg
jo
xchg
lcall
xchg
js
cmp
nop
jno
adc
addps
pusha
cld
pop
or
add
push
insl
adc
push
and
add
or
lcall
inc
pop
ret
iret
fnsetpm(287
add
stos
aaa
test
sar
lcall
or
cmpl
mov
xor
mov
jg
or
cld
push
or
lahf
push
mov
inc
push
jl
xchg
inc
adc
cld
das
jb
lds
sbb
inc
scas
sbb
incl
mov
in
popa
add
pop
mov
push
ret
testb
nop
cs
add
dec
add
incl
insb
inc
xor
push
xor
fsts
dec
push
ljmp
fmuls
or
stos
inc
xchg
sub
leave
jg
out
popl
add
jp
and
cld
lods
mov
shlb
mov
jmp
dec
adc
leave
jmp
mov
xchg
mov
mov
aaa
add
int3
dec
add
ret
scas
inc
push
sbb
nop
imul
mov
pop
ljmp
stos
lods
stos
xorb
ficompl
or
pusha
push
jp
jnp
mov
push
adc
push
adc
nop
xlat
push
test
jo
roll
jo
mov
dec
and
leave
inc
cmpsl
dec
inc
std
inc
sub
insl
xchg
dec
inc
repz
test
call
loopne
jl
insb
sbb
jbe
jmp
adc
subl
sub
outsl
decl
and
test
stos
mov
shl
lahf
push
movsb
clc
aas
xchg
mov
ljmp
cmp
imul
fsubrl
mov
popa
lds
cmpsb
rclb
xchg
lock
incl
nop
adc
aad
aaa
movb
dec
push
mov
and
sub
or
jo
and
xor
mov
add
mov
mov
inc
pop
mov
cld
dec
cmpsl
adc
les
hlt
add
daa
or
orb
leave
iret
sarl
into
sub
xchg
inc
dec
add
stos
push
cmc
pop
aad
sub
push
mov
mov
mov
fildll
movsb
cmp
mov
cmpsb
mov
mov
mov
push
inc
and
addl
jmp
aad
push
movsb
xlat
cmc
and
ret
and
das
cmp
or
lcall
add
imul
sbb
and
mov
adc
arpl
push
lock
clc
push
pop
loope
cltd
push
orl
push
push
test
cs
lahf
movsb
incl
mov
cwtl
loop
inc
fadds
nop
add
pushl
and
adc
clc
mov
cmp
pop
and
adc
shrb
call
imull
xor
xchg
je
and
inc
adc
add
push
adc
jg
jmp
outsl
push
push
loopne
imul
in
pop
test
pusha
xor
sub
push
fiaddl
xchg
mov
sbb
decl
fadds
mov
jecxz
lds
fdiv
andl
push
cmp
lds
lock
aas
adc
into
mov
fdiv
pushl
and
or
bound
xchg
jnp
xchg
cmp
mov
or
and
iret
pop
push
xor
dec
incl
int3
test
aaa
pop
imul
sub
sbb
adc
adc
in
jle
lcall
adc
push
loope
sbb
push
in
stc
enter
cltd
int
or
mov
xchg
and
pop
cmc
iret
pop
sbb
dec
or
fldenv
call
cmpsl
sub
enter
stc
sub
fiadds
inc
mov
mov
outsb
jns
and
test
pop
sbb
decl
lock
aad
push
push
stc
clc
or
fs
test
cld
lea
xor
test
xchg
ret
in
mov
pop
repnz
mov
call
sub
popa
lsl
or
mov
inc
stos
xchg
arpl
fs
mov
add
incl
mov
popa
out
mov
bound
or
mov
cmp
cmp
inc
adc
data16
lahf
test
xlat
pop
xor
and
sbb
adc
ficoml
out
mov
add
inc
add
xor
ljmp
xor
mov
cltd
jg
add
push
cli
push
jmp
add
mov
xchg
mov
clc
sub
lret
xlat
out
jno
inc
mov
lcall
or
or
ja
push
mov
fs
or
inc
pop
pushf
js
push
out
push
mov
ljmp
push
iret
pop
lea
iret
call
inc
les
adcb
lea
mov
jmp
sub
sbb
pop
ret
ret
push
nop
jae
call
repz
sub
push
stos
or
add
lds
mov
jne
jb
call
cmp
incl
pop
add
pusha
loope
mov
addr16
lret
inc
test
psubsw
ja
clc
sub
rolb
mulb
aaa
fisttps
or
lret
sti
pop
ret
loopne
ja
add
mov
cs
adc
adcb
cmp
inc
fs
test
jl
sti
add
push
icebp
or
test
orb
lcall
push
mov
xchg
adcb
jp
push
rcll
pop
icebp
incl
pusha
mov
push
inc
inc
or
push
ret
pmaxsw
addl
hlt
push
jo
add
ret
sub
and
push
mov
lock
mov
in
pushf
imul
or
sbb
inc
adc
mov
xlat
jo
sbb
mov
push
out
sub
add
addl
daa
mov
test
lcall
pusha
pop
adcb
add
idivl
xchg
or
js
xchg
js
push
cwtl
pusha
fildll
ret
int3
mov
sbb
movsb
xchg
cmp
jg
mov
aam
outsl
mov
xchg
aad
mov
fisubrl
adc
jmp
call
inc
arpl
inc
decl
rorb
dec
loopne
call
inc
outsl
xchg
icebp
xor
or
rolb
clc
cmp
and
add
in
clc
shlb
subb
in
movsb
adc
dec
inc
dec
push
dec
leave
loop
int
stos
cmp
lcall
inc
adc
stc
ja
push
adc
inc
loop
or
dec
adc
js
add
or
lcall
or
aad
pop
aas
pop
adc
push
mov
jo
add
or
jmp
cmp
movsb
in
cmp
mov
daa
ja
dec
xchg
pop
pop
shl
lcall
fdecstp
mov
into
mov
xchg
add
in
push
sbb
incl
push
inc
inc
sub
ss
inc
shlb
sub
test
adc
or
es
loopne
fcompl
ljmp
cli
lcall
push
mov
push
scas
xor
add
pop
jno
add
ljmp
pop
jg
imul
in
and
xchg
insl
pop
mov
push
add
add
xchg
pusha
add
add
aas
inc
ret
call
cmp
jnp
adc
popa
adc
pop
push
xchg
cmp
jl
or
sbb
push
fdivrl
sbb
jg
idivb
addl
and
sub
lock
sbb
cmp
scas
ret
inc
pushl
sbbl
inc
adc
jmp
push
cmp
fiadds
je
addl
add
inc
add
sub
push
or
xchg
pop
sbb
ss
jmp
call
mov
xchg
test
popa
xor
cmp
mov
mov
js
lds
daa
fidivrs
xchg
aaa
pop
xchg
and
sub
ljmp
iret
adc
hlt
enter
mov
add
add
mov
xchg
add
and
dec
aam
mov
ljmp
clc
xlat
dec
sub
push
shll
lcall
enter
sbb
dec
xchg
add
pop
inc
xor
jg
or
mov
rclb
adc
dec
inc
xchg
adc
and
and
and
sbbb
jl
inc
in
sbb
aam
incl
imulb
in
adc
cmp
sbb
or
cmp
mov
push
rolb
mov
mov
jle
imul
add
push
sbb
mov
sub
push
roll
nop
adc
xchg
xchg
mov
lds
test
pop
and
incl
test
stc
aam
push
inc
insl
das
in
dec
add
scas
in
lea
mov
mov
outsb
adc
in
and
lock
repz
lds
icebp
ficompl
lcall
loopne
jg
imul
mov
mov
fdivrl
cwtl
xchg
daa
unpcklps
mov
popa
sub
xor
fsubs
int3
aaa
sar
pushl
lock
aaa
ds
sbb
lock
push
leave
ret
cmp
pop
in
rcll
notl
add
push
mov
and
ds
jle
ret
enter
icebp
inc
addr16
jmp
xchg
mov
imulb
pop
mov
lcall
cmc
sbbb
push
lea
mov
lea
jg
ss
lock
add
mov
dec
std
xchg
loopne
rol
sbb
jmp
pusha
mov
cmpsl
or
stos
aaa
orl
or
cli
sbb
and
fisttpl
mov
inc
les
push
mov
pushl
sbb
mov
mov
inc
lods
jmp
pop
jle
sub
adc
dec
xor
inc
jge
and
cmp
push
inc
lods
ret
je
jmp
and
lods
pop
rol
inc
mov
inc
and
xor
adc
es
loope
mov
pushl
icebp
enter
push
sub
mov
adc
push
jmp
mov
incl
mov
sub
add
mov
push
lds
cmc
sub
jns,pt
xor
mov
or
jl
frstor
and
ljmp
clc
adc
mov
adc
mov
mov
xor
add
push
sub
add
dec
and
fstpt
inc
or
call
sbb
sbb
ljmp
adc
repnz
pop
adcb
insb
cmp
inc
lret
dec
and
mov
cmp
dec
or
adc
mov
popa
mov
adc
stos
fadd
add
cmpsl
les
dec
out
adc
incl
pop
mov
mov
jae
push
inc
mov
idiv
incl
jl
pop
pop
pop
or
pusha
out
add
or
fdivl
shr
aam
dec
push
adc
or
decl
inc
sub
and
or
jecxz
js
test
push
push
inc
push
dec
mov
fwait
outsb
push
sbb
jg
incb
out
mov
pop
mov
xchg
sbb
shrl
inc
xor
ljmp
or
int3
jnp
or
add
adc
shr
fmul
das
jmp
push
aaa
add
jecxz
repz
jo
and
add
add
lcall
js
lds
into
sub
push
andl
lds
mov
loope
ljmp
push
mov
lahf
xlat
popf
lret
xchg
cmpsb
clc
cs
arpl
xlat
mov
add
xor
lret
xchg
xchg
in
pop
adc
pushl
outsl
lret
les
ljmp
aad
cltd
fcomps
pushl
xchg
sbb
pusha
mov
push
push
call
cwtl
sbb
packuswb
mov
sbb
cmc
ljmp
and
xor
scas
lret
fadds
sub
pop
sbb
push
shlb
or
mov
addb
cmp
or
inc
or
incl
push
or
ret
std
cmpsb
fnstenv
pusha
test
in
mov
xor
dec
xchg
mov
ret
pop
decl
pop
mov
or
das
cld
clc
xor
dec
loopne
jae
shrd
mov
mov
push
dec
cmp
ss
xchg
mov
sub
sub
or
jg
sub
jmp
add
pop
loop
or
xchg
std
jmp
sti
pop
push
or
xchg
fildll
aam
pop
pop
pop
mov
xchg
sbb
imul
movsl
call
adc
into
mov
and
outsl
sbb
fistps
adc
call
leave
sbb
mov
fdivrs
xor
aas
aam
test
pop
mov
push
add
pushf
stos
hlt
icebp
or
movb
inc
fucomip
ljmp
repnz
fnstsw
stos
cmp
rcl
fdiv
jo
cld
xlat
xor
xor
lock
sbb
jo
dec
data16
rolb
lcall
lock
jmp
aam
sub
xor
lret
xor
cltd
in
adc
jmp
sub
pop
movb
js
cmp
push
clc
outsl
jne
movsl
pop
sahf
jp
insb
pop
mov
sub
decl
shrb
push
int
mov
push
jno
xor
xorb
xchg
out
pop
rcrb
in
cmc
call
adc
mov
xchg
cmp
adc
sbb
testl
mov
mov
int
cli
out
clc
incl
jne
push
cmp
xchg
js
sub
in
jmp
fadd
rolb
cmp
outsb
out
cltd
push
adc
pop
mov
dec
sbb
or
inc
jmp
ret
and
mov
jp
inc
sbb
fldl
or
mov
out
icebp
fwait
decl
xchg
shrb
inc
push
rcrl
sbb
inc
enter
fldl
fbld
ss
lock
push
testl
adc
and
les
cmpsb
mov
aam
lock
int
out
adc
in
mov
pop
js
add
and
jg
and
push
adc
push
adc
and
xor
sbb
test
in
call
cmp
xchg
outsl
xor
dec
sub
xor
pop
cwtl
aaa
loop
dec
insb
pop
lret
cli
push
out
icebp
inc
sbb
ficomps
or
push
std
or
out
push
jo
dec
jle
adc
test
in
jns
js
dec
inc
stos
jnp
and
mov
scas
pop
adc
movsb
hlt
je
or
add
sub
call
fistl
clc
push
fistps
addb
sbb
lods
inc
lcall
adc
xchg
dec
out
ja
adc
or
lods
pop
movsl
xchg
cmc
pushl
inc
test
ja
loopne
cmp
incb
or
pop
or
call
inc
and
xchg
and
int
rdmsr
hlt
add
cld
pushl
or
push
push
loope
add
fcoms
xchg
ljmp
hlt
inc
push
jno
sbb
fsubrp
loope
sbbl
jns
and
aas
adcl
daa
movsb
in
fisubl
inc
jg
test
sub
test
dec
jbe
loop
cmp
imul
hlt
insl
jno
dec
push
fidivs
mov
push
mov
inc
sbb
in
ljmp
dec
cmp
aaa
adc
dec
xor
leave
mov
xor
inc
loope
lods
adc
mov
test
jmp
dec
adc
out
rcrl
xchg
jle
call
ds
cmp
scas
es
xor
ds
in
loop
xor
push
adc
inc
inc
jle
js
daa
mov
das
mov
jecxz
divl
clc
pop
push
pop
push
mov
aam
or
xchg
cmpsb
xor
xor
mov
mov
dec
sar
loop
sub
cmp
jbe
push
mov
jne
repz
ds
and
jg
addb
xor
ret
push
fabs
pop
jp
incl
cmp
test
adc
pop
bound
pop
and
ror
pop
mov
push
dec
and
decl
pop
mov
and
ret
mov
push
fmull
addb
je
cmpb
cmp
add
cmp
pop
icebp
dec
ljmp
pushl
mov
mov
pop
push
xor
mov
clc
pop
hlt
mov
push
mov
xor
bound
scas
sbb
sahf
pop
push
pop
xorb
cmp
int3
xor
insl
lea
lret
mov
ret
daa
push
inc
mov
jmp
mov
lds
mov
pusha
sub
fs
add
daa
minps
sbb
and
xchg
cmp
fs
mov
xor
das
test
jae
clc
pushaw
sahf
sar
scas
add
mov
add
cmp
cmpsl
xlat
mov
add
call
enter
inc
inc
sbb
popa
inc
fldl
push
leave
inc
xor
add
sbb
xchg
mov
sbb
xchg
incl
dec
call
mov
sbb
fstl
outsl
daa
mov
mov
mov
dec
push
arpl
push
insl
addr16
imul
scas
sub
or
into
sub
cmpsl
decl
cmc
add
jge
call
sbb
mov
sub
pop
mov
ss
dec
enter
jmp
cmp
pop
pop
add
xor
or
jno
movsl
lock
xlat
mov
xor
push
xorb
or
loopne
clc
mov
inc
call
call
aas
sbb
in
lds
in
mov
jg
jl
cmpsb
cmp
lock
fcomip
out
daa
ss
ss
es
push
dec
mov
jg
shrl
pop
dec
mov
cmp
adc
and
pop
jg
daa
inc
and
dec
and
imul
adc
jge
and
out
jno
fstpt
cmp
push
push
loop
jp
push
sub
cli
mov
pop
cmp
pop
lcall
pop
mov
incl
sbb
sub
xchg
adc
jg
push
sbb
popa
repz
jmp
sbb
jae
add
incl
data16
and
adc
push
pop
push
leave
pop
push
adc
dec
mov
inc
push
sti
jae
mov
mov
and
outsl
mov
or
mov
fbld
sub
lods
mov
xchg
inc
enter
and
clc
call
pusha
add
int3
inc
and
jecxz
nop
inc
push
push
sub
mov
outsl
push
inc
cmp
and
cmp
dec
js
add
cmp
sbb
pop
rclb
adc
and
pop
popa
push
ja
cli
cmp
std
jb
in
cmp
add
decl
pop
lea
mov
jmp
mov
dec
sub
jno
movsb
pop
and
pop
add
push
je
mov
and
add
xchg
xchg
mov
cmp
ret
sbb
ljmp
popf
adcb
imul
push
lea
sarl
inc
or
push
xor
jmp
jo
sbb
xor
pop
mov
or
add
add
test
adc
pop
stos
lahf
sbb
xchg
sub
jg
mov
popa
dec
dec
add
dec
jp
inc
fbstp
dec
mov
jne
sbb
clc
jo
ds
cwtl
add
or
pop
and
jne
push
or
bound
adc
cmp
push
subb
cmpb
mov
add
fistps
pop
fwait
std
push
pop
mov
outsb
and
js
xor
insl
xor
mov
sub
jg
nop
or
mov
push
mov
outsl
mov
movsl
xor
sbb
xchg
add
outsl
fs
adc
sub
cmp
xor
mov
pop
pop
stc
fdivrs
mov
cmc
outsl
faddp
add
outsl
mov
pop
cld
mov
xchg
testl
or
adc
outsl
add
sub
pop
mov
sub
and
or
sub
fisttps
xchg
mov
mov
mov
adc
movsb
mov
loope
stos
sub
es
xchg
insb
mov
decl
les
sub
xchg
aam
jmp
repz
inc
loop
leave
js
movsl
adc
jge
into
lock
cltd
idiv
mov
mov
daa
mov
xchg
loop
stos
enter
push
sbb
jecxz
jmp
ljmp
jne
fs
loop
push
mov
xchg
jo
nop
sbb
popa
xor
push
dec
or
mov
or
mov
mov
add
xchg
or
xchg
lcall
push
xlat
inc
lods
add
pop
inc
les
pop
sbb
or
inc
lahf
sub
ljmp
or
test
lcall
jl
mov
pop
xor
int3
sub
repnz
mov
xor
incl
push
and
and
jg
xchg
test
bound
fsts
pop
std
xor
pop
mov
subl
jo
push
jnp
push
clc
repz
adc
add
pop
adc
sbbl
jmp
mov
das
mov
jg
inc
faddl
in
mov
adc
das
js
loopne
adc
mov
mov
cs
out
stos
orb
out
push
or
dec
lock
inc
add
or
jge
add
incl
push
sbbb
mov
push
int3
jmp
arpl
cs
rcll
inc
in
jmp
inc
and
cmovge
pop
daa
and
outsb
or
adc
mov
dec
cli
incl
and
shl
out
mov
sbb
xorb
clc
add
sub
rcll
add
cmpb
pushl
test
cmpsb
icebp
or
fadds
cmp
add
jg
adc
fwait
pop
dec
pop
aam
jge
ret
js
leave
or
mov
les
push
divb
rclb
sub
push
xchg
aam
lods
cli
mov
xchg
inc
sub
push
pop
xchg
adcb
call
dec
mov
mov
sub
inc
subb
int
outsl
call
push
push
std
or
xchg
add
sahf
jae
ffreep
punpckhdq
inc
inc
mov
mov
in
call
fildl
and
les
adc
movsb
inc
push
roll
in
rorb
xchg
insl
cli
add
ss
pop
xchg
int3
jnp
and
and
lock
sub
push
push
and
adcb
sub
or
cli
aaa
std
mov
ret
sub
scas
adc
rcrl
add
dec
ret
mov
mov
cld
or
std
stc
inc
jmp
adc
sub
in
lock
jmp
dec
fadds
bound
adcl
xchg
pop
jmp
sbb
test
push
push
sar
dec
loope
stc
rep
call
daa
cwtl
fisttpll
fcomip
ljmp
push
repz
dec
cmp
movsl
and
push
mov
movsb
out
test
jmp
sbb
push
jnp
sub
jb
lahf
or
rcrb
loopne
jl
mov
mov
ds
shl
add
or
dec
add
mov
xchg
jbe
xor
cvtdq2ps
mov
add
lods
pop
cmc
fistps
fldl2e
or
iret
insl
orb
jae
insb
push
fildll
ss
pop
fstpt
jbe
add
mov
fimuls
pop
push
push
in
sbb
dec
cmpsl
pop
mov
clc
xor
pusha
add
test
inc
mov
pusha
xchg
jae
mov
imul
outsl
data16
xchg
jo
pop
and
dec
and
jg
or
xchg
mov
das
add
ret
push
or
pusha
testb
gs
xchg
sbb
push
cwtl
call
xchg
es
ljmp
sub
jnp
fsubrs
xor
mov
mov
add
fneni(8087
or
lcall
les
mov
popf
xor
mov
pushl
cmpsb
cmp
lds
adc
pop
and
xchg
xchg
lock
mov
push
and
pop
insb
cltd
add
decl
xor
cmp
xor
dec
sbbl
int3
xchg
push
aaa
lock
call
add
push
push
mov
fwait
sarb
mov
or
push
nop
rclb
ficoms
movsb
into
cltd
and
scas
jg
jg
dec
in
xor
ja
inc
jb
push
in
dec
loop
inc
je
adc
test
xor
xor
incl
pop
add
jp
pop
push
out
mov
in
pushl
psrld
dec
mov
jno
add
push
pop
cmp
add
repz
sbb
inc
or
cs
mov
lock
xor
pop
mov
and
jp
dec
lock
stc
incl
add
pop
mov
imul
sub
incl
cwtl
imul
push
cmp
xchg
movl
cmc
jmp
leave
sub
mov
cmp
add
pop
repnz
adc
mov
ljmp
sub
jmp
aad
cmpsl
enter
push
add
pushl
mov
pop
push
lret
dec
jp
adc
and
mov
push
xor
aaa
pop
js
dec
enter
pop
add
dec
call
stos
xchg
das
movb
add
push
stc
or
and
xchg
inc
mov
popa
or
incl
xchg
cmp
enter
sbb
add
jbe
ljmp
or
sub
jl
andl
or
nop
sahf
and
cltd
jnp
add
pushl
add
sbb
test
cmc
or
cmp
sti
and
jno
ret
movsb
ljmp
sub
mov
or
ret
cmp
mov
cli
lcall
sti
dec
push
imul
push
bound
decl
inc
sbb
iret
out
divb
in
fbstp
inc
out
adc
inc
or
int
or
sbb
inc
add
add
imul
mov
movsb
adc
nop
lods
rcrb
andl
xchg
cltd
bound
pusha
push
nop
incb
jbe
adc
rorl
decl
jmp
sub
cmp
std
ss
cmp
push
subl
movsl
pushl
mov
or
adc
add
mov
shll
xchg
mov
inc
jg
decl
rol
ds
dec
adc
and
sub
add
pushl
fldl
sub
mov
out
lret
orl
call
xchg
and
mov
or
adc
mov
pop
stc
mov
or
add
sub
fbld
pop
adc
push
sbb
andb
ret
adcb
or
cmpsb
mov
nop
pushl
mov
in
cmpsb
push
ret
cld
insb
inc
push
faddl
ja
mov
adc
fcomip
rolb
rclb
dec
pop
mov
jmp
or
pop
and
call
push
das
and
push
add
cld
scas
cli
pushl
in
inc
mov
int3
test
pop
xchg
jle
xchg
aaa
and
movsb
xchg
sub
jg
lds
or
xor
or
ja
or
add
sbb
push
ret
dec
xor
adc
xchg
sub
xor
and
imul
sarb
mov
outsl
or
jmp
subl
lcall
cld
lods
pop
push
and
xor
lds
jae
rclb
cmp
mov
mov
pop
jp
fcoms
push
sub
mov
cmc
in
pusha
aad
cmpsb
ljmp
mov
mov
fbld
inc
adc
hlt
or
mov
xor
mov
lcall
decl
inc
sbb
ret
xchg
mov
jbe
push
dec
hlt
xchg
push
dec
add
xchg
push
jecxz
lcall
pop
dec
xor
pop
pop
jp
push
mov
xchg
cmpsl
addb
jg
popf
and
out
push
jne
xchg
clc
mov
sub
scas
jge
inc
sub
pop
add
ljmp
fiadds
adc
add
decl
sbb
lock
jbe
push
loop
sahf
repnz
adc
sub
or
lret
inc
jge
jle
lock
pushl
loope
adcl
dec
sub
dec
or
insl
jle
orl
lods
sbb
js
divl
adc
les
aaa
in
adc
push
lea
xchg
test
add
sub
ljmp
pop
repz
jnp
mov
xchg
inc
and
hlt
je
mov
dec
ja
leave
mov
xchg
adc
je
xor
pop
and
sbb
push
roll
cmc
lcall
into
push
inc
outsb
pop
clc
mov
mov
add
jb
sbb
sub
fldcw
pop
addr16
fimull
xchg
push
pop
aam
sbb
cmpb
inc
xchg
lret
jg
jg
test
imul
shrb
mov
pushl
mov
mov
mov
xchg
hlt
outsb
xor
pop
das
add
gs
xchg
inc
jns
in
call
xchg
jle
outsb
gs
or
push
imul
or
add
xchg
mov
loopne
push
decl
test
cmp
lods
pop
adc
dec
loope
mov
add
pusha
test
ljmp
insb
xchg
add
aad
or
je
ss
pusha
jmp
subps
bound
aam
jo
cmp
push
pop
xor
pushf
pop
roll
mov
sbb
dec
mov
adc
jp
jo
aaa
jl
adc
inc
lret
pop
cmpsb
cmp
sub
and
imul
sub
js
movsl
jo
stos
xor
movsb
outsl
ret
mov
rclb
mov
dec
push
call
jo
xchg
sbb
cmpsl
clc
test
adc
pop
mov
xlat
xchg
pop
push
add
jecxz
adcl
dec
ljmp
fimull
pop
les
loopne
test
cmpsl
push
mov
incl
cld
insl
ret
push
nop
sub
ja
dec
in
mov
sub
cmp
ljmp
rcll
xchg
xchg
mov
mov
sbb
and
push
pusha
lret
ret
jecxz
insl
bound
xchg
and
call
ljmp
das
and
jl
jg
aad
loope
aam
jecxz
or
mov
iret
push
call
push
ja
dec
adc
jle
pop
dec
sub
aaa
std
inc
sarb
fsubr
and
mov
pop
mov
insb
vmovaps
jno
lcall
and
mov
inc
and
out
bound
call
pop
ja
popa
mov
push
jo
int3
sub
and
mov
sub
jns
out
js
ljmp
cs
add
adc
lea
inc
xchg
icebp
jg
cmp
jae
aas
or
es
mov
pop
sbb
movsl
lret
dec
add
pop
xchg
push
add
adc
incl
sbb
pop
sbb
int3
jbe
sahf
adc
movsb
sar
fistl
sbbl
jmp
mov
mov
pop
adc
or
fmuls
xor
das
or
nop
add
dec
xchg
in
sbb
push
ljmp
hlt
xor
jbe
dec
sub
push
add
push
or
daa
inc
mov
or
inc
push
cmp
jns
das
dec
ljmp
std
stc
jb
sti
xchg
mov
decl
sub
dec
pop
stos
xor
ljmp
fsubl
hlt
ljmp
pop
aaa
pop
outsl
loopne
mov
jge
xchg
fisttpl
xchg
mov
mov
xor
jg
mov
popf
xchg
test
add
mov
jbe
cli
sti
sbb
mov
sbb
insl
test
sub
inc
jg
adc
jmp
mov
push
inc
fs
pop
mov
outsb
sbb
rcll
std
gs
jo
jo
add
mov
movsb
repnz
addl
dec
pop
or
adc
push
push
je
adc
inc
xor
rorb
loopne
push
ljmp
cli
sub
imul
mull
jmp
insb
ret
mov
jp
outsb
add
faddl
test
xor
fiadds
adc
lcall
arpl
arpl
adc
call
jl
mov
ss
push
arpl
imul
pop
js
rcl
dec
jg
pop
es
sar
stos
pop
aam
push
add
inc
popa
jnp
mov
mov
shlb
jg
sbb
rcll
xchg
andl
stos
jb
or
mov
push
mov
push
mov
icebp
decl
jg
add
stos
lahf
mov
das
sbb
rclb
sarb
xchg
push
std
pushl
cmp
pop
out
mov
xchg
mov
cmp
jns
ret
or
add
inc
aam
ja
adc
mov
mov
je
call
cmp
push
cmpsb
mov
mov
cld
and
adc
mov
add
jg
call
rol
and
ficompl
pop
cmp
jo
mov
add
adc
push
jo
test
outsb
dec
mov
insb
add
dec
lahf
add
decl
mov
imul
js
aaa
adc
cmpsl
mov
push
mov
fists
or
lcall
ljmp
lahf
adc
mov
mov
hlt
outsl
mov
jmp
or
jl
xchg
daa
and
ljmp
xchg
aam
sbb
dec
dec
inc
jg
jnp
add
setl
dec
decl
mov
jne
mov
add
pop
dec
cld
ljmp
rol
cs
mov
or
jg
mov
rcll
sbbl
decl
cmp
push
movsb
pop
and
fcmovbe
mov
or
cmpsb
cmp
and
add
aaa
jns
lahf
or
add
or
jmp
adc
mov
rcl
outsb
pop
or
pushl
pop
es
mov
xchg
and
adc
decl
and
jl
aam
xchg
add
adc
addr16
inc
add
push
cmp
sub
sbb
or
or
mov
lods
cmp
ret
ja
sahf
xor
movsb
or
adc
jg
inc
cld
aad
das
popa
add
repz
push
adc
sbbl
jno
fistpll
add
bnd
push
and
js
pushl
dec
gs
lret
add
scas
adc
add
inc
xchg
and
add
mov
push
adc
iret
leave
add
push
sbb
cmp
or
add
push
mov
push
lcall
loope
push
sbb
or
add
push
mov
push
push
lea
push
test
clc
pushl
push
imul
add
adc
xlat
iret
push
add
test
mov
sub
test
sbb
fisttps
sahf
adc
sbb
incb
sahf
insl
sti
jg
jg
push
popa
fcoms
loopne
adc
test
lret
repz
push
push
pop
xor
adc
arpl
cmpsl
cmp
mov
push
out
mov
bound
idivb
mov
mov
cmpsb
pop
sbb
ljmp
push
cs
xchg
imul
dec
in
lret
or
push
mov
dec
pusha
or
cmp
or
xchg
dec
sub
or
and
sub
xor
push
jg
sti
repz
cmp
cmp
inc
cmp
in
dec
sbb
jo
lahf
push
mov
dec
cs
sub
push
xchg
pusha
ja
push
popa
imul
and
or
cld
xchg
and
sub
sbb
jg
fisubrs
add
daa
xor
pop
mov
aad
add
dec
adc
mov
out
cli
fcomp
lret
pop
inc
int3
sar
incl
sbb
sub
xchg
sub
roll
aaa
scas
fwait
inc
push
popa
or
mov
push
dec
xchg
clc
push
adc
dec
xchg
scas
inc
pop
lea
mov
sub
clc
adc
push
lock
fists
emms
mov
daa
dec
xchg
clc
call
fldcw
loopne
faddl
dec
ljmp
jae
xor
and
orl
and
pusha
fnsave
nop
mov
cmc
incl
inc
and
jecxz
push
mov
orb
lcall
jg
inc
pop
push
leave
adc
xchg
mov
insl
sub
loopne
or
xor
pushl
or
push
push
cmp
xchg
ffreep
ljmp
popf
adc
push
out
cli
out
in
or
mov
pushf
pop
sbb
les
sbb
xor
adc
mov
pop
or
or
lods
aaa
orb
xchg
add
jg
push
sbb
clc
dec
ja
xlat
add
jae
or
popf
or
out
mov
fs
inc
sub
incl
ret
pop
ret
ljmp
aam
dec
mov
xor
pop
imul
hlt
incl
push
sub
xor
xor
or
cli
or
mov
lret
insb
ss
stos
mov
stc
mov
notl
jb
stos
adc
fdivr
lcall
outsb
add
inc
imul
rdmsr
xor
xor
adc
sub
ja
les
xlat
sbb
and
cmpsb
xchg
pop
sub
jbe
mov
sysret
sbb
and
push
test
test
jge
pop
mov
pop
xor
mov
cmpsb
jne
addr16
xor
adc
mov
loopne
movb
in
lcall
mov
dec
add
push
aam
scas
xor
mov
lret
mov
loop
in
lcall
lahf
lcall
ror
rcl
ja
mov
insb
xor
mov
adc
add
sbb
lcall
sbb
xor
push
clc
incl
add
jl
cmp
sub
inc
dec
insl
add
imul
lea
movl
jg
inc
fisttpl
scas
insl
js
sbb
cs
jne
and
or
and
inc
cld
pop
insl
ljmp
and
push
inc
ja
pop
push
push
fildll
sub
or
ret
xchg
pop
dec
sbb
call
movsl
lcall
add
or
in
popa
adc
xchg
enter
and
lcall
rol
movsl
sub
loop
test
pop
scas
bound
jo
add
inc
or
push
jb
xor
xchg
not
inc
fbld
mov
ss
pop
mov
xor
xor
cmpsb
je
sbb
shlb
mov
fadd
jno
mov
push
cmpsb
adc
inc
cmp
data16
inc
push
ljmp
xchg
out
mov
xchg
xor
cli
scas
fsubrs
mov
pop
gs
pushl
outsl
nop
ljmp
adc
addr16
subb
cmpsb
arpl
pop
or
das
jp
ja
jg
pop
lret
xor
rolb
cltd
adc
pop
pop
aas
xor
sub
or
mov
loop
loopne
mov
mov
cwtl
mov
bnd
push
adc
fwait
cmp
adc
mov
fstl
filds
idiv
cmpsl
sbb
outsl
mov
fs
sbb
adc
and
and
decl
and
shlb
arpl
mov
add
test
and
or
cmp
cmp
in
dec
sbb
sbb
push
xchg
ret
addl
cmp
std
add
out
or
add
nop
xlat
lock
pushl
mov
push
movaps
sbb
fsubrp
and
cmp
push
call
jl
xchg
sbb
push
push
int
add
incl
rcrl
out
xchg
dec
jmp
mov
jge
push
xchg
jae
and
je
push
mov
push
jmp
push
adc
pop
dec
stos
mov
fcoml
mov
mov
mov
jb
mov
ljmp
xor
faddl
or
test
imul
add
and
aad
jecxz
dec
and
fldt
sbb
pop
adc
fdivrs
jmp
addr16
jne
movsb
movsb
push
sub
sub
incl
sti
adc
or
rolb
out
dec
xor
mov
cwtl
in
insb
xchg
or
stos
incl
lods
mov
or
shll
xchg
add
inc
inc
fsubs
or
call
mov
sbbl
push
push
add
adc
push
rcrb
inc
sbb
pop
cmp
sub
stos
incl
xchg
xchg
push
inc
pop
loop
push
test
outsl
cli
inc
popf
fwait
adc
xchg
cltd
xchg
dec
and
outsb
adc
cmpsl
jp
or
or
mov
mov
pop
jo
jno
dec
sub
and
pop
jl
jo
add
cltd
ss
out
sub
lret
movsb
or
dec
sbb
push
push
mov
das
xchg
mov
enter
lds
cwtl
popa
lcall
cltd
mov
insb
jge
add
jo
sbb
shrl
dec
push
mov
jb
lock
pusha
and
cmc
or
xor
cmp
jne
int3
adc
pop
lcall
stos
mov
mov
movsl
pop
call
ret
pushl
xor
call
and
push
mov
mov
test
shll
dec
mov
addb
les
decb
sub
xor
add
mov
hlt
sti
dec
adc
daa
and
adc
orb
and
ljmp
leave
push
adc
sbb
pop
aad
sub
adc
mov
xchg
insl
test
or
add
or
xor
sarl
mov
pop
enter
ret
add
out
cli
inc
fiadds
xchg
add
pusha
adc
ss
repnz
lods
cmp
cmp
pop
and
and
sub
insl
and
sub
or
popa
mov
int
ljmp
jo
pop
popa
std
gs
adc
and
inc
insl
movsb
andl
insb
mov
inc
inc
lcall
xor
pop
push
dec
mov
cs
decl
jbe
and
pop
shll
xor
jl
andb
xchg
xchg
inc
add
jmp
or
dec
nop
int3
sbb
jmp
mov
in
mov
shll
pop
iret
pop
or
fsubs
fnsave
pushl
cmp
stos
cmp
fwait
or
sub
sub
cld
ljmp
dec
in
das
sahf
add
repz
inc
push
mov
inc
or
push
imul
cmpsl
cmp
mov
mov
insb
adc
js
lahf
incl
idivb
adc
cmp
push
ds
sub
add
outsb
clc
pushl
std
pop
pop
sub
sbb
mov
ret
xor
dec
jge
inc
mov
push
ret
lea
ljmp
pop
inc
je
dec
pop
adc
sbb
mov
test
cwtl
test
bound
stos
xor
movsb
lods
jl
push
sbb
xor
add
add
sbb
push
in
jb
in
imul
decl
xchg
popa
ret
cs
scas
jno
lds
push
popaw
adc
push
mov
xor
push
cmp
icebp
lcall
push
mov
xor
add
inc
clc
dec
inc
imul
dec
adc
and
cltd
xorb
adc
dec
add
pop
enter
in
repz
ret
sub
mov
out
mov
jno,pn
test
xchg
push
rcll
clc
lcall
fsub
pop
mov
test
cmpsl
adc
in
in
loope
es
xchg
lds
rcrb
enter
adc
out
mov
test
cmpsl
inc
pop
sub
in
das
sbb
aaa
and
test
pop
adc
ljmp
xor
enter
clc
clc
mov
loope
sti
add
sub
out
jo
imul
lock
sub
cld
jne
fs
ja
push
inc
dec
cmp
test
mov
sbb
mov
dec
fwait
and
inc
test
inc
push
xor
aad
icebp
mov
xor
insl
and
ljmp
test
pop
fadds
sub
jmp
cmp
movl
mov
or
inc
ror
pop
pop
sub
dec
insb
and
sub
mov
fwait
pusha
xchg
mov
lock
rorb
cmpb
mov
fs
lock
and
or
roll
cld
icebp
je
lcall
sbb
pop
mov
insb
adc
loopne
js
inc
mov
cmp
ss
call
pop
js
xor
jo
pshufw
cmp
xchg
and
incl
inc
popa
and
push
test
rcr
or
nop
mov
pop
and
xor
decl
cmp
inc
sub
aaa
jecxz
mov
rorl
sbb
cmpsl
loop
adcl
lcall
decl
decl
sbbb
add
loope
mov
inc
insb
addr16
xchg
sub
xor
adc
fs
xor
in
add
cmp
mov
movb
aad
add
sbb
and
xor
mov
call
out
insl
add
idiv
stos
cmp
mov
adc
js
orb
cmp
add
sbb
pop
xor
jmp
les
add
outsl
outsb
pop
shrl
pushf
adc
loopnew
loopne
or
xor
mov
incl
xor
ljmp
cmp
fisubs
in
cmp
cmp
clc
ficoml
mov
xor
repz
sar
sbb
js
push
adc
add
shr
lods
sar
inc
int
pop
sub
lods
add
in
inc
lock
pop
repnz
xor
adc
sti
cmovo
inc
mov
inc
les
fwait
iret
inc
xchg
jb
outsb
push
pushl
inc
loopne
in
popf
aaa
or
push
pop
cs
mov
xor
jmp
fcmovbe
outsl
rsqrtps
in
jl
out
loopne
sahf
add
jne
mov
ret
es
push
lods
test
mov
or
sbb
inc
add
nop
pop
add
or
scas
mov
mov
dec
ret
enter
sbb
stc
sub
sbb
iret
repz
fwait
adcb
or
adc
add
push
mov
rolb
add
mov
adc
adc
and
clc
ret
sbb
sbb
ljmp
or
mov
ret
test
std
adc
jg
cmp
cmp
lret
rorb
inc
jle
arpl
and
xchg
clc
in
xchg
jg
hlt
push
add
imul
pushf
xchg
fwait
jl
pushl
add
inc
cmpsb
ja
mov
imul
pop
movsb
jnp
and
dec
ljmp
arpl
push
int
lods
out
mov
push
and
jmp
inc
imul
cld
push
jg
leave
or
mov
add
push
add
daa
test
call
ljmp
adc
sahf
clc
sbb
mov
inc
ja
xchg
inc
clc
mov
push
or
shrb
mov
incb
fadd
xor
inc
mov
imul
mov
jg
leave
les
and
adc
aam
rcrl
or
mov
adc
out
test
and
inc
lock
xor
pop
addr16
or
jg
js
pushf
cmp
xor
and
push
mov
mov
inc
push
ret
jne,pn
call
pushf
shlb
push
or
and
dec
fistps
mov
jmp
jg
cmp
fs
pop
sarl
popa
xchg
pop
xor
mov
and
push
inc
fidivl
dec
shufps
add
xor
xor
mov
xchg
ljmp
decl
nop
xchg
inc
sbbb
xlat
mov
cmp
cwtl
scas
adc
decl
dec
pop
lea
es
adc
add
rcrb
xchg
js
sbb
xor
pop
xchg
movsb
out
cmp
push
ja
xor
xchg
xor
or
xor
add
add
lods
add
pop
or
andl
ljmp
xchg
push
push
mov
dec
rclb
sbb
cmp
or
add
es
imul
and
inc
jmp
ds
loopne
adc
into
pop
adc
lds
fisubrs
mov
inc
sbb
addb
jbe
sub
decl
inc
lcall
cmpsb
jno
mov
xchg
movsb
add
mov
add
adc
jmp
mov
jnp
mov
and
inc
sub
test
cwtl
insl
and
sbb
adc
add
cli
dec
mov
ret
daa
sbb
mov
incl
dec
out
add
xchg
lea
add
inc
cmp
inc
pop
imul
insb
adc
ljmp
mov
js
push
jo
aam
popf
fs
dec
xor
dec
push
cmpsl
push
ljmp
incl
xchg
and
cmp
pop
icebp
int3
add
inc
push
push
xor
inc
add
aaa
sub
mov
hlt
xor
mov
lcall
decl
stos
dec
dec
dec
cmp
cmp
rclb
and
incl
add
pop
shr
push
sub
xor
xlat
xor
push
loopne
and
aaa
je
xor
sbb
loopne
in
shl
mov
mov
jnp
pop
mov
scas
mov
movl
push
xchg
test
loop
mov
out
cmpsb
xor
arpl
mov
ja
js
mov
mov
push
pop
pop
inc
hlt
cmp
sub
popa
mov
fldcw
add
bnd
std
jmp
and
mov
leave
add
jns
push
fiaddl
mov
out
push
jnp
std
jmp
fdivrs
jnp
nop
inc
pop
jnp
movsb
cs
cld
and
lods
adc
xor
bound
xor
ret
jo
jne
rcrl
push
dec
lods
and
and
stc
jl
add
fcomps
xchg
fadds
jnp
push
jg
add
sarl
mov
dec
sahf
and
or
pushl
in
or
outsb
pop
or
lcall
mov
lret
out
mov
pop
jge
add
popa
cld
mov
pop
adc
subb
loope
mov
sbb
popf
xchg
js
mov
add
lock
ljmp
sbb
loope
je
pop
cmpsb
aam
popa
xchg
je
cmpsl
sbb
and
jl
pop
roll
addl
inc
jne
jns
cmp
mov
jg
dec
dec
insb
lret
inc
adc
mov
jg
test
mov
xchg
inc
inc
outsl
enter
je
add
mov
mov
call
xor
decl
adc
mov
aad
cwtl
inc
pop
shlb
add
mov
mov
mov
and
or
dec
daa
inc
xchg
mov
add
sub
and
or
jg
inc
sub
push
outsb
call
mov
or
mov
rorb
loope
jg
jg
cmpsl
inc
orb
mov
ja
pop
push
in
fs
mov
lea
loope
scas
out
rcrb
negb
pop
dec
sbb
dec
popa
push
rcll
jle
push
sbb
pop
lahf
and
push
jbe
sbb
sbb
add
loopne
decl
sbb
or
xchg
cld
popa
mov
punpckldq
dec
dec
or
and
filds
test
xchg
pop
lcall
mov
inc
inc
imul
dec
mov
scas
pop
or
pushl
or
popa
jb
mov
notl
jle
add
adc
or
xor
jmp
mov
enter
lcall
stc
lcall
out
inc
pop
dec
in
scas
pop
or
xchg
int3
fmul
mov
mov
xchg
ret
jbe
add
xchg
andb
add
push
test
ja
in
int
mov
nop
les
loopne
inc
out
outsb
arpl
out
gs
ljmp
js
icebp
jns
dec
cmp
adc
push
xchg
pop
ret
pushl
mov
sbb
fcoms
add
sbb
lock
push
test
dec
test
insl
popa
adc
pushf
pop
lock
lcall
loop
add
xchg
in
jb
in
in
mov
add
insb
dec
fisttps
mov
cli
lahf
pop
dec
in
pop
pop
inc
test
pop
pop
in
push
add
dec
fldt
cld
lock
test
push
ds
sub
hlt
jbe
leave
ret
in
nop
in
and
jmp
lock
cmp
das
push
pop
loopne
call
test
in
push
pop
push
lahf
clc
pop
repnz
dec
pushf
push
lock
mov
sbb
push
push
sahf
jl
insb
or
jmp
or
push
push
adc
mov
insl
or
xor
ss
loopne
fadds
xchg
cwtl
int3
call
xor
mov
add
negb
dec
pop
stc
std
int
pushl
cld
jnp
inc
sti
pushf
adc
add
push
aam
adcl
jo
pop
test
adcb
xor
push
les
push
dec
bound
mov
mov
add
test
nop
cmp
imul
pop
adc
cmpsl
lods
add
fwait
inc
or
inc
jle
jns
dec
cmp
sub
add
push
cmp
jne
sbb
or
jmp
add
lcall
sbb
incl
cld
lahf
fiadds
pop
push
xchg
pusha
inc
dec
add
or
pop
cltd
decl
xor
in
add
in
jl
or
inc
add
xchg
js
inc
jle
inc
rcrb
adc
add
cmpsl
aas
add
pop
add
jmp
and
xchg
cmp
or
cmp
shlb
incl
pusha
insl
js
lds
push
push
test
mov
mov
mov
test
inc
jmp
push
mov
lds
jecxz
cs
mov
fstl
stos
cmp
es
pushl
cld
jl
fwait
aam
xor
mov
js
sub
pop
xchg
cmpsb
sahf
sbb
cmp
aam
inc
dec
or
sahf
pop
mov
sbb
mov
incl
pop
push
inc
pop
sti
adc
leave
rorl
pop
dec
push
nop
add
icebp
jmp
pop
bnd
rcrb
cmp
pop
push
int
or
dec
mov
clc
mov
mov
dec
pop
push
test
push
rcrb
inc
push
pop
shr
pop
mov
pop
mov
push
fdivrs
pushf
ds
mov
shll
push
cs
cmp
cmp
ds
lods
push
cmp
mov
add
sbb
jmp
sub
dec
mov
lods
pop
add
or
xor
or
fmul
fs
sub
sti
jg
add
push
btc
sub
push
shlb
pop
adc
call
decl
movl
shl
push
loop
adc
pushf
push
add
in
add
incl
add
das
std
mov
mov
mov
xor
mov
push
xchg
mov
jg
dec
adc
pushl
leave
pop
iret
cmp
jmp
test
data16
and
sub
popa
or
jg
lods
dec
cld
dec
es
adc
bound
rorl
scas
shrl
mov
mov
jb
lret
jo
jo
push
js
fists
cs
testl
or
ljmp
sbb
sbb
push
jno
imul
or
cli
cmp
xchg
mov
add
jbe
push
push
sbb
and
xor
sub
sbb
ss
nop
into
push
or
push
in
aaa
and
dec
jl
ja
mov
rol
jl
cmp
aad
ret
mov
mov
ret
mov
xor
outsb
adc
push
mov
test
outsl
clc
jg
adc
push
jle
mov
adc
aam
jns
jmp
popa
clts
sbb
enter
pop
jp
and
in
push
adc
and
loope
out
and
mov
mov
nop
imul
push
xchg
xchg
or
push
push
sub
es
sbb
out
jo
adc
in
xor
jle
jle
xchg
dec
outsb
addb
and
or
sbb
xchg
ljmp
mov
sub
movsb
and
or
sbb
dec
inc
test
pop
push
jge
sti
fcomip
fcoml
jae
int
xchg
arpl
push
cmp
aam
ljmp
inc
dec
dec
add
pushl
leave
adc
push
push
pop
and
rcrb
lcall
sbb
xor
jno
ret
mov
mov
andl
stos
fld
sbb
lret
push
pop
sbbb
adc
sub
jno
jg
sub
enter
out
and
inc
pop
fldl
push
repnz
lcall
push
mov
cld
dec
add
and
rolb
inc
int3
shl
dec
dec
sbb
das
ret
stc
xchg
aam
insb
push
jecxz
outsl
pusha
mov
jmp
movsb
inc
dec
pop
pop
fcmovnu
decl
add
add
dec
gs
aam
add
idiv
push
mov
pop
push
imul
incl
inc
imul
sbb
sub
decl
or
cmpsb
jge
fwait
jns
mov
add
inc
nop
test
lcall
mov
cmp
clc
movsb
sbb
aas
and
push
sti
inc
cmpsb
pop
add
jg
rolb
stc
pop
jmp
cld
jg
jp
add
sbb
into
aad
ljmp
adc
push
jg
jmp
push
add
fs
sub
pop
xchg
add
call
xchg
jno
inc
lods
mov
add
or
hlt
mov
push
ljmp
fcoms
inc
add
stc
push
jno
es
loopne
nop
jbe
and
aad
add
call
movl
push
xor
stc
sub
push
dec
imul
jmp
mov
pop
inc
test
sbb
cmp
stos
pop
jecxz
mov
loope
shlb
adc
jg
clc
and
mov
pop
and
fisttpll
enter
mov
in
push
dec
adc
ror
adc
clc
icebp
cld
ret
inc
in
arpl
loop
mov
pop
decl
xchg
mov
shl
aas
sahf
fdivrs
lcall
popa
pop
mov
inc
jmp
fs
mov
or
jmp
leave
lods
scas
filds
call
or
xchg
movsl
pusha
lret
clc
push
xor
cmp
es
push
and
test
adc
fsubrl
js
mov
in
jo
adc
or
mov
testl
sbb
mov
pop
call
cwtl
and
push
add
xor
pop
xor
call
mov
and
or
dec
punpckldq
xor
mov
addr16
pusha
push
mov
xor
adc
aaa
xor
sbb
cld
lahf
add
pushl
incl
mov
add
decl
addr16
or
roll
mov
pop
and
push
cli
inc
and
inc
sbb
loopne
pushl
test
jae
enter
adc
or
push
jbe
add
in
or
decl
inc
bound
arpl
das
add
jmp
jmp
jnp
cmpsl
sub
cmp
test
dec
jb
pop
hlt
dec
jns
outsb
cs
xor
jmp
cmp
je
in
jmp
aaa
add
pop
rcrl
sar
mov
or
jbe
cmp
fists
inc
push
cmp
adc
mov
push
popf
push
jbe
dec
or
pop
inc
sbb
shrb
push
dec
pop
repnz
filds
pop
cmp
add
clc
ljmp
jecxz
test
add
shlb
and
mov
lds
inc
ljmp
sbb
jae
sbb
inc
imul
je
mov
in
subb
add
inc
push
cs
incl
add
leave
popf
mov
inc
push
addb
arpl
push
inc
push
rcrb
push
loope
sbb
fcmovb
hlt
fcos
inc
sbb
xor
add
cmp
ret
push
rcl
aaa
sbb
cmp
adc
xchg
sub
in
and
pop
add
xcrypt-cbc
cmpsl
push
cs
mov
adc
dec
dec
fists
xchg
cmpl
cld
lcall
add
and
add
pop
xchg
insb
fistl
and
jo
jmp
sub
mov
repz
mov
aaa
cmp
cmpsb
hlt
jmp
dec
test
mov
xchg
push
aas
xchg
add
cmp
push
jns
jl
xchg
push
mov
add
inc
lock
call
roll
xor
aas
mov
cmp
add
mov
lea
inc
fildll
cs
je
adc
sahf
lahf
mov
incl
pusha
cmp
les
movsl
and
cltd
sub
jmp
in
add
ret
pushf
jg
scas
add
pop
inc
addl
or
shrl
mov
enter
je
mov
jl
data16
movups
xor
ljmp
inc
aam
pop
inc
dec
aas
cwtl
mov
fwait
mov
mov
incl
insl
ds
jg
call
adc
icebp
sbb
dec
mov
shlb
or
push
push
cs
rcrb
call
xchg
and
sbb
inc
jne
mov
lods
and
pop
addr16
incl
stos
inc
pop
jmp
test
cltd
es
ja
jl
jg
or
scas
and
enter
xor
pop
sbb
add
aas
fisubrl
aam
adc
push
and
mov
sbb
push
cmp
cmpsb
sub
cmp
incl
inc
pusha
es
lcall
das
addl
cmpsl
xor
cmp
ljmp
xlat
shll
sbb
or
insl
fstpt
mov
pop
mov
mov
loopne
daa
mov
or
inc
call
sub
xor
xor
mulb
lods
lock
enter
adc
inc
adc
xchg
int3
lea
icebp
lcall
cs
aam
pop
fisubl
or
sar
std
adc
iret
cmpsb
icebp
sbbb
or
into
fs
movsb
lock
adc
xor
aas
add
cld
incl
add
and
outsb
icebp
and
imul
in
sbb
mov
fcomip
adc
mov
cmp
and
idiv
les
inc
popa
add
sub
lods
dec
sti
mov
xchg
or
pop
fs
push
mov
xor
daa
dec
ret
pop
add
sub
cmp
mov
pop
cs
sar
mov
mov
mov
shlb
pop
pop
xchg
jb
xor
cli
xor
mov
das
popa
and
mov
push
push
push
daa
cmp
and
xor
jmp
xchg
push
xor
xchg
lods
jmp
push
sbb
lcall
pusha
pop
mov
jl
clc
rcrb
inc
push
xor
fcmove
test
das
pop
jnp
sbb
sub
xchg
int
jmp
incl
add
imul
push
ss
lds
push
cmpb
aaa
and
or
push
cmp
push
inc
pop
inc
or
sbb
les
mov
ljmp
jae
lret
dec
in
cmp
insb
adc
ss
gs
iret
pushf
jne
rcrl
rolb
test
jae
loopne
clc
sahf
dec
addr16
push
mov
in
ss
pop
sub
outsb
sahf
mov
mov
add
or
std
mov
jmp
jb
decl
or
mov
push
push
sbb
popa
push
and
sbb
add
call
aas
or
jl
je
and
fnstsw
xchg
mov
mov
lahf
or
inc
pop
lea
ficoml
pop
push
movb
pop
ret
mov
decl
mov
ret
add
xchg
adc
scas
in
or
cmp
enter
clc
jo
and
ljmp
not
jb
inc
pusha
push
push
adc
imul
popa
jecxz
aas
mov
push
hlt
imul
dec
clc
call
adc
pop
push
and
add
mov
sbb
ror
dec
xor
incl
flds
flds
stos
fs
inc
call
ret
incl
adc
inc
dec
loopne
xchg
insb
mov
pop
adcb
cmp
dec
and
dec
int
xor
subl
enter
add
jne
in
pushl
mov
ljmp
hlt
mov
or
rclb
lods
push
add
add
inc
pushl
mov
aas
push
test
insl
mov
or
es
test
adc
adc
incb
insb
fcoms
rorb
sub
fbstp
lret
movsb
pushf
lock
mov
lahf
dec
lock
daa
mov
daa
enter
mov
iret
push
xchg
fnstcw
iret
outsl
sbb
jbe
in
lods
or
jg
lcall
ficoms
rorl
dec
xchg
mov
ror
and
pop
push
in
mov
insb
dec
dec
inc
lds
push
ljmp
jmp
inc
dec
xchg
rorl
lea
xor
adc
jmp
xchg
mov
arpl
sbb
inc
inc
or
loopne
out
sub
decl
lock
dec
pop
fdivs
aas
js
pop
xor
cmp
push
incl
je
pushf
push
daa
cmc
dec
mov
faddl
outsl
jmp
or
fwait
cwtl
addb
and
insb
sbb
andl
incl
js
lea
dec
adc
sub
fiaddl
mov
daa
inc
mov
jmp
sbb
je
out
mov
jge
fimuls
ss
xorl
pop
loopne
loop
xor
add
add
ja
pop
xor
pop
test
ret
jnp
and
cmp
or
add
jecxz
addr16
cmp
add
add
inc
pop
lods
xchg
stos
jmp
dec
dec
dec
or
push
movsb
es
sub
add
or
insb
aam
movsb
popf
xor
incl
inc
fdivl
aam
mulb
out
test
repnz
jo
in
push
test
pushl
or
sbb
and
in
in
shl
add
inc
clc
aas
sbb
clc
lret
sub
out
roll
fsubl
pop
push
into
sub
lock
and
mov
ljmp
push
rclb
xor
ret
pop
add
js
adc
adc
lcall
adc
inc
cld
fcoms
jge
push
call
add
fmull
shlb
mov
jl
sub
add
mov
mov
decl
stos
rolb
fwait
cmp
icebp
std
mov
jmp
or
sub
jo
inc
iret
push
pop
jp
lret
push
js
loop
xchg
rolb
push
cmp
cmp
cmp
jle
aam
push
jge
les
jg
and
movsb
hlt
outsb
movsl
inc
push
dec
add
mov
loopne
mov
in
mov
push
mov
mov
outsb
push
sti
std
decl
test
sbb
jnp
imul
sub
dec
stos
jns
pop
aam
xor
sub
mov
sub
cmp
sbb
dec
call
aad
enter
xor
push
decl
push
inc
adc
shrb
and
popa
pushl
sbb
and
aad
or
ficoml
cmp
pop
cli
loopne
adcl
pop
cmc
outsb
dec
jl
pusha
testl
add
xor
cmp
sarb
rclb
cmpsb
sub
mov
adc
jge
sbb
xchg
dec
mov
jo
add
aaa
add
jmp
xchg
out
mov
mov
dec
lcall
addb
movsb
or
add
das
mov
aad
stc
add
or
add
leave
add
sbb
push
xor
push
lds
jg
ljmp
or
push
or
lock
mov
and
sbb
xlat
adc
push
outsl
clc
lcall
dec
and
lock
out
fs
mov
pushl
dec
nop
xchg
mov
mov
in
pop
and
mov
ljmp
cli
dec
pop
inc
cmpsb
or
nop
jle
ret
cmp
dec
enter
dec
ss
mov
incl
pushl
and
hlt
testl
cmp
jg
push
std
enter
insb
mov
scas
push
jge
arpl
das
pop
pop
xchg
cmp
insl
push
adc
in
ret
xlat
jbe
lcall
xchg
dec
les
dec
mov
das
clc
out
in
inc
xor
mov
leave
mov
xchg
aam
or
inc
xlat
mov
out
inc
rcll
mov
pop
push
fisubrl
jmp
inc
sbb
xchg
xor
daa
call
pop
sub
fsubs
xchg
cli
add
jno
add
add
mov
jg
clc
jg
jne
les
sbb
push
jmp
mov
rolb
pop
jecxz
inc
cmp
jo
sbb
mov
add
cwtl
dec
pop
js
test
loopne
decl
filds
and
subl
mov
mov
les
dec
aas
adc
cmp
mov
and
lods
sub
int3
adc
push
sbb
push
cs
adc
jecxz
xchg
xchg
out
shl
inc
pop
jbe
in
call
jmp
xchg
das
decl
jne
aad
loopne
inc
jp
mov
xchg
pop
rolb
mov
inc
cltd
mov
incl
add
cmp
mov
push
jo
sbb
fcoml
xchg
and
push
ss
sbb
fcomps
js
add
sub
push
stc
push
cld
incl
inc
xor
rorl
adc
push
push
call
call
xor
in
jno
xor
shlb
sub
or
push
push
rcr
popf
jg
jns
dec
or
dec
pusha
sbb
mov
stos
icebp
enter
cld
jmp
cmovnp
mov
hlt
inc
loopne
in
or
pop
icebp
pop
imul
out
adc
pop
push
push
test
or
cmp
cs
jmp
fwait
jle
push
clc
push
and
inc
js
lods
jns
push
test
fcmovbe
lods
int
push
incl
pop
dec
lods
jo
orb
mov
nop
fwait
lahf
rcll
popa
add
adc
incb
pop
cmpsl
idiv
add
loop
sub
pop
rolb
les
int3
push
or
pop
cmpsl
jg
ljmp
pop
out
lcall
in
and
and
or
dec
xor
out
ss
lahf
loopne
adcb
mov
sub
add
xlat
push
lods
mov
jge
and
inc
in
lods
outsl
iret
cmp
cmpsb
ss
in
pop
into
in
pop
sbb
add
pop
xchg
incb
cmc
push
cmc
imul
repnz
push
or
pop
jnp
cld
cmp
and
inc
sbb
xor
jge
add
leave
out
dec
shrl
pop
add
pop
or
ds
mov
cmp
add
pand
jae
add
inc
xchg
shll
or
jg
jb
jne
dec
or
adc
cmc
pop
icebp
fcoms
pop
test
gs
jb
add
pusha
push
bound
test
and
decl
and
and
bnd
fdivs
xchg
xchg
or
lock
orl
clc
sbb
jmp
push
loope
leave
lock
add
xlat
cmpb
xchg
lcall
mov
leave
sbb
adc
cld
push
lock
mov
imul
sub
sti
fadds
adcb
sbb
daa
mov
popa
mov
ljmp
and
inc
xchg
addr16
add
test
out
fsub
and
lcall
ret
pop
jne
lcall
in
and
pushl
mov
or
mov
scas
sbb
movsb
cmc
jg
jb
jl
aam
loopne
xchg
xor
rcll
sub
pusha
xchg
sub
jecxz
mov
pop
enter
sub
inc
loopne
sub
nop
aaa
and
mov
stos
push
xchg
xchg
inc
leave
stos
and
leave
dec
xchg
cmpl
arpl
lds
dec
pop
sub
insl
adc
pop
in
mov
dec
sub
adc
ret
and
mov
pusha
dec
jmp
inc
mov
mov
and
adcb
sbb
dec
jo
int
jmp
sub
or
push
repz
icebp
push
lock
and
adc
mov
adc
push
xlat
cli
dec
repz
and
jg
repnz
outsl
sbbl
mov
daa
xor
mov
mov
lock
pushl
pop
loop
int
mov
jge
paddb
std
lcall
ljmp
pop
inc
mov
fs
lcall
mov
jl
inc
xor
daa
dec
imul
dec
enter
cmc
imul
decl
jle
loope
fcoms
mov
rorb
js
lcall
mov
sbb
stos
mov
jno
jg
xor
scas
jmp
test
ret
push
and
or
stc
stos
add
sbb
js
call
popf
cmovs
inc
shlb
push
out
sahf
sub
sar
adc
imul
pusha
sarb
repz
mov
dec
or
push
adc
ret
inc
ja
adc
lahf
loop
pushl
inc
hlt
pop
push
mov
inc
sbb
xchg
out
fcoml
or
ljmp
sub
add
ret
pop
cmc
call
push
xchg
rcl
jg
fiadds
mov
adc
xchg
orb
jnp
inc
dec
in
inc
and
jg
or
jae
hlt
jle
sbb
jbe
stc
fs
filds
lods
pop
push
mov
add
gs
or
mov
push
clc
orl
test
push
data16
nop
mov
adc
adc
icebp
in
push
sbb
adc
psubsb
add
mov
inc
push
adc
decl
insb
jecxz
loopne
adc
imul
xor
jo
cmp
call
mov
or
cmp
jmp
test
push
jb
rorb
call
fcomp
das
ss
xlat
xor
mov
sbb
lcall
daa
pop
lds
mov
incl
ror
divl
jl
and
iret
loope
addr16
inc
pop
and
push
xor
call
faddl
mov
shrb
inc
pop
out
adc
adc
clc
lock
call
sub
and
dec
xchg
lods
out
les
inc
mov
adc
ret
sarb
call
sub
or
lods
les
call
push
out
push
addr16
adc
xor
sbb
loope
jle
xchg
rorb
cld
pop
inc
into
jno
rclb
pop
push
cmpsb
cltd
fidivs
out
scas
cli
mov
mov
jb
das
pop
cmp
rclb
jg
inc
cmp
or
ljmp
lret
xor
repnz
xor
sbb
scas
das
and
cmp
inc
inc
ljmp
pop
out
sbb
or
jge
push
inc
push
sub
sbb
ss
repz
dec
cld
out
and
xchg
fsubs
rol
sub
inc
adc
je
mov
dec
xchg
xlat
ret
lcall
sbb
push
lcall
les
les
cmp
inc
cwtl
ret
sahf
fcomip
lcall
or
jb
mov
int3
sbb
sub
divl
mov
cmp
push
incl
das
sbb
and
mov
jecxz
dec
sub
aas
or
pop
dec
rol
sarb
inc
add
cmp
pop
rcr
inc
or
xorb
out
loopne
insb
scas
lods
adc
roll
xchg
enter
jbe
push
pop
in
xlat
cmp
push
cmp
sbb
das
add
adc
dec
inc
ss
dec
cmpsl
adc
xor
fcomip
incl
jle
add
shl
es
mov
outsb
inc
add
pushf
or
sbb
sbb
push
sbb
xchg
inc
push
mov
pusha
scas
xchg
cmpsl
xor
je
xor
shll
mov
jmp
faddl
mov
roll
mov
enter
ljmp
jg
cmp
movsb
cmc
xor
loopne
cltd
js
add
insl
xorl
sbb
add
decl
xchg
movsb
je
into
dec
sbb
fldenv
or
or
mov
jnp
imul
iret
push
fadds
popf
clc
call
hlt
sub
out
cmp
inc
nop
fs
add
icebp
inc
dec
pusha
push
or
enter
mov
xchg
popa
mov
sbb
daa
popf
jo
movsb
aam
sbb
andl
paddsw
xchg
xchg
aaa
dec
mov
inc
jp
cmp
jl
sub
xor
lret
daa
stos
stos
mov
jg
pusha
cld
je
pop
int3
cmpsl
ss
loopne
lret
inc
cld
pusha
nop
pop
popw
jne
pusha
lret
pushf
fisttps
mov
movb
ret
cmp
fimuls
dec
dec
loop
mov
adc
jle
lcall
xor
inc
adc
pop
mov
inc
xor
pusha
add
mov
inc
xor
jl
mov
mov
and
insl
adc
cmp
push
in
imul
inc
in
cmc
clc
xor
xchg
or
lcall
jns
sub
xchg
into
mov
mulb
loopne
fdiv
pushl
fcoms
popl
pop
jb
pop
mov
or
decl
test
pop
shl
pop
inc
repz
lcall
fwait
adc
std
inc
mov
mov
das
and
ljmp
movsl
jne
dec
lret
jne
push
mov
jo
fimuls
rcrb
jmp
jne
loopne
pop
aad
xor
nop
xchg
mov
inc
inc
popf
bound
sub
sbb
mov
xchg
je
sub
sarl
mov
aaa
int
into
adc
xchg
pop
xor
aad
movsl
cli
in
pushl
pop
fadds
push
dec
pop
les
js
movsb
inc
add
sbb
outsl
pop
in
ljmp
out
gs
js
test
xchg
xorb
lods
mov
pop
lds
push
push
jnp
add
jne
inc
inc
sbb
lea
and
addb
mov
or
xadd
add
adc
cmp
sub
fbld
cld
es
sar
xchg
adc
dec
and
out
repnz
xchg
cmc
ljmp
ficompl
push
ja
xor
sbb
sub
xor
or
xor
pushl
in
mov
xchg
push
iret
or
add
ret
out
adc
add
das
cltd
ljmp
enter
xor
sbb
inc
fisubrs
shrb
push
out
xchg
fs
pusha
or
clc
adc
lret
add
idivb
or
jnp
loopne
adc
pop
iret
pop
les
out
cli
jg
add
cmpsl
adc
push
stos
mov
xchg
mov
cmp
scas
xchg
ja
incl
bound
daa
adc
add
sub
call
jnp
lcall
fisttps
pop
push
jb
inc
push
pop
and
mov
and
cmp
cmp
test
dec
inc
xchg
adc
lods
setns
sub
xchg
test
cmp
repnz
add
sar
push
cmp
mov
enter
mov
in
pushl
add
in
and
inc
cs
imul
testb
mov
test
inc
or
mov
call
shlb
xor
add
add
and
push
cmp
push
xor
inc
mov
cmp
pushl
mov
add
push
pop
adc
xor
or
arpl
int3
repz
pop
lahf
dec
jmp
in
or
ja
xchg
stos
add
push
mov
or
test
cmp
mov
pop
clc
js
outsl
xor
cld
filds
clc
lahf
xchg
test
sbb
pop
std
cmp
call
push
mov
jecxz
or
push
inc
loop
and
xchg
cli
call
and
cltd
mov
insl
test
ljmp
inc
inc
shr
add
inc
in
jg
inc
ljmp
push
fstps
xchg
ss
xor
xchg
scas
subb
in
sub
dec
pop
stos
cmp
add
test
pop
mov
mov
push
sbb
mov
orb
jle
in
cli
xor
mov
decl
incb
push
add
pcmpeqw
cs
out
dec
movsl
cwtl
gs
stos
addb
jg
fs
pop
push
xchg
add
pop
movsb
or
jp
sar
mov
jbe
xchg
in
repz
mov
loopne
nop
mov
xchg
fnsave
sbb
push
mov
rolb
sub
push
dec
dec
add
das
clc
jmp
das
inc
add
cmp
push
mov
lcall
mov
incl
out
push
xchg
popl
sub
mov
sub
mov
cmc
xchg
rol
push
jmp
xchg
fcmovb
cmpsl
jp
rol
fneni(8087
sbb
lahf
or
sar
mov
cli
lcall
cli
sub
add
adc
mov
es
sbb
push
mov
dec
test
call
jge
stos
shrb
aam
in
jmp
mov
cwtl
int3
popa
xchg
inc
bnd
js
dec
mov
adc
adc
pushl
cmp
shlb
push
addb
imul
bound
jmp
das
pop
add
call
rcrl
cmc
xchg
add
bound
xor
rol
sub
pop
or
call
lret
fcmovb
dec
enter
es
sbb
sbb
cmpsb
dec
ds
xchg
ds
jne
pop
ret
or
std
std
inc
inc
push
gs
mov
sub
mov
lock
fmuls
add
movsl
mov
jne
and
daa
mov
pushl
in
xchg
mov
mov
insl
ljmp
roll
rclb
pushl
mov
cwtl
rorl
mov
mov
mov
sub
dec
push
mov
xchg
or
ljmp
cli
dec
dec
pusha
sub
ss
rolb
inc
push
loopne
pop
rcrb
outsb
xor
call
or
mov
lahf
cld
int3
pusha
dec
or
fdivrs
dec
jmp
inc
idiv
adc
adc
std
mov
rcll
inc
jmp
into
pop
jb
pushl
aad
nop
pop
dec
negb
fcomi
add
sub
xor
clc
dec
or
loopne
cmc
mov
xlat
adc
fcmovu
cmp
adcl
dec
sbb
xor
push
mov
jne
out
push
stos
scas
sub
push
mov
push
movsl
xchg
pop
test
repz
jge
xchg
clc
adc
cmp
test
cmpsl
dec
push
or
or
aaa
std
adc
in
fsubrs
outsb
leavew
mov
push
push
lods
and
lods
cmp
sub
cmc
inc
nop
addr16
aaa
fsubrs
loopne
dec
adc
or
js
dec
mov
out
cmp
sbb
cmc
push
push
test
adc
icebp
or
cmpsb
jge
fcmovnu
inc
popa
in
je
sbb
cmp
fdivr
incl
inc
shrb
mov
jo
inc
jmp
ret
inc
sbbl
mov
jge
or
or
inc
test
or
cwtl
sbb
pop
dec
or
sub
movsb
aad
and
pushf
shlb
incl
jle
aaa
dec
jle
inc
xor
adc
push
aam
sahf
add
xchg
inc
cmp
xor
mov
test
mov
inc
pusha
or
jmp
add
xchg
pop
mov
cmp
xor
mov
pop
sub
pop
int3
cmp
and
cmp
mov
test
test
aas
mov
inc
inc
cmp
addl
js
sub
inc
push
rolb
push
sar
cmp
nop
xchg
dec
je
scas
and
jo
rol
sub
adc
pop
pop
add
inc
stc
aas
mov
or
mov
push
xor
sub
add
pop
ljmp
sahf
stos
mov
dec
mov
insb
mov
or
mov
xor
pop
inc
push
shll
lods
xor
scas
aaa
lock
jmp
js
or
or
fistps
fwait
cwtl
push
push
shrb
ret
hlt
jmp
xchg
pop
mov
insl
ljmp
ljmp
jmp
mov
ret
xchg
mov
cmp
fstl
orb
pop
ret
and
jle
clc
xchg
jbe
xchg
aad
stos
jo
ss
adc
jg
js
xchg
rolb
add
mov
test
and
daa
inc
mov
xchg
pushl
push
outsl
mov
dec
popf
xchg
and
popf
adc
movsl
inc
or
jbe
add
xchg
inc
fcoms
rol
shrb
inc
add
insl
loop
ret
aas
add
mov
cmp
stc
es
test
pop
inc
bound
lcall
sbb
in
sub
das
ret
test
xor
inc
dec
sbb
jmp
incl
dec
in
lret
add
or
xlat
lcall
push
xchg
jae
shl
scas
sbb
call
adc
out
loopne
pop
aam
dec
fcoms
xchg
sarb
pusha
aad
ret
xchg
mov
lcall
ror
into
cmp
aam
repz
sbb
mov
xor
ret
inc
push
mov
lods
jmp
mov
jnp
js
sarl
adc
jmp
add
adc
pop
pop
add
jp
pop
cmp
mov
ljmp
xchg
push
test
loop
jg
pop
das
mov
mov
jnp
push
rol
dec
cmp
ror
jmp
or
and
cs
xchg
and
lcall
inc
mov
stos
mov
push
xchg
sar
call
in
iret
cmc
icebp
push
ja
pop
je
cwtl
lods
sbb
mov
or
xor
lock
in
mov
rorb
movsb
or
pop
sub
or
or
call
sub
out
pop
push
fsubrs
jle
insb
hlt
ljmp
mov
xchg
fs
fwait
xchg
mov
xchg
dec
scas
lods
pop
or
mov
or
push
add
fcoml
adc
xchg
movsl
sarb
cs
jo
cmp
das
insl
inc
cli
arpl
push
cli
psubusb
cld
imul
mov
movsb
out
dec
adc
in
push
sbb
mov
sbb
cmpsb
std
incl
fisubl
xor
xchg
xor
cld
pop
lahf
xchg
add
push
jo
dec
sbb
fs
je
pusha
inc
pop
mov
scas
mov
ret
cmp
lret
dec
dec
call
cmp
jp
fucomi
call
push
push
sub
mov
xor
hlt
sbb
push
pop
pop
add
ret
or
ret
pop
mov
packuswb
mov
imul
push
insb
inc
mov
repz
add
jmp
mov
addr16
call
and
jnp
jg
add
enter
popa
xchg
ljmp
test
out
or
dec
pusha
cs
cltd
imul
shrb
and
push
and
cmp
ljmp
lock
and
mov
fidivs
cmp
jnp
mov
shrb
mov
mov
call
mov
daa
sub
ljmp
mov
inc
sub
inc
sbb
jo
cli
into
fsubl
cmp
out
jg
gs
inc
push
inc
inc
jo,pt
push
sbb
call
lcall
push
sub
scas
mov
inc
in
popa
jb
call
mov
xchg
mov
fisttps
mov
out
sbb
test
jg
jmp
jp
cli
imul
mov
test
clc
in
inc
test
loope
adc
call
cli
cmp
ja
cmp
mov
and
andl
movl
add
add
repnz
push
ds
add
and
and
cmp
nop
scas
cmp
jge
jb
lock
bound
stos
cld
sti
xor
testl
cmpsb
aaa
dec
and
inc
inc
divb
add
cmp
cmp
push
clc
mov
jg
ret
or
mov
aaa
inc
imul
xor
push
ror
mov
ret
out
or
mov
adc
iret
jne
inc
jbe
mov
and
sub
mov
mov
mov
cld
or
mov
adc
in
ljmp
jno
or
cmp
rclb
xchg
mov
or
clc
sbb
jnp
push
and
jg
jmp
push
xchg
cmpsb
mov
push
sahf
ret
sub
push
call
outsb
or
pop
pop
mov
add
enter
push
pop
and
sub
mov
jb
xor
or
sbb
inc
add
test
jno
adc
pusha
mov
int3
jae
les
jb
nop
mov
add
lock
lcall
test
test
pushl
fnstcw
jo
js
add
xor
mov
cmp
ljmp
cmp
sub
xor
imul
dec
rcrl
incl
enter
imul
mov
notb
nop
push
fsubr
sub
out
adc
adc
jge
out
cmc
push
call
xchg
and
stos
inc
add
xor
pop
lcall
stos
jp
js
inc
or
mov
xchg
dec
iret
xchg
int3
lock
js
mov
call
xchg
imul
pop
or
sbb
add
jg
add
xlat
xor
xchg
cmpsl
pop
repz
in
in
or
pop
andb
out
pop
rolb
inc
xor
push
inc
push
call
mov
adc
js
incl
dec
jge
xlat
int
jmp
sbb
mov
lock
adc
xchg
imul
pusha
adc
inc
sbb
xchg
mov
decw
lock
sbb
call
jb
test
or
ljmp
fisubs
mov
test
jle
push
dec
outsl
sbb
xchg
in
push
loopne
lahf
imul
push
in
aaa
in
add
dec
push
icebp
dec
xor
and
jbe
mov
cmp
inc
ss
xor
call
mov
cmpsb
das
jl
gs
inc
mov
mov
leave
mov
test
clc
incl
stos
push
adc
dec
jecxz
jge
mov
test
xadd
incb
mov
or
insb
test
inc
dec
cmp
movsl
inc
jl
call
cld
orb
push
jg
outsb
cmp
adc
aaa
sbb
or
out
nop
out
xor
sub
fstp
sub
das
xchg
iret
push
pop
and
lcall
push
or
mov
xor
outsl
dec
jp
aaa
flds
mov
cli
xchg
lods
or
mov
xchg
pushl
movsb
add
and
add
and
sbb
shlb
lods
and
adc
jmp
xchg
pusha
dec
filds
into
push
sub
inc
adc
inc
and
mov
ret
add
shrb
xchg
cld
pop
aam
mov
ja
loopne
daa
or
lock
adc
or
out
out
daa
adc
dec
dec
je
lods
std
decl
xor
les
call
cld
pushl
orb
aas
pop
loopne
ret
mov
mov
pop
cmp
cmpsb
push
or
sbb
dec
xor
sbb
cld
mov
insb
sbb
or
and
test
loop
arpl
jo
fists
jmp
js
add
hlt
jl
inc
or
imul
cli
add
enter
xlat
add
popa
sbb
mov
movl
mov
adcb
mov
mov
enter
pop
repnz
mov
das
mov
and
mov
insl
arpl
add
aas
mov
lcall
sub
pushl
out
mov
shlb
jl
das
jns
or
add
xchg
mov
lea
pop
and
ljmp
and
jbe
imul
gs
inc
add
sub
loop
stos
cli
sbb
fildll
add
jl
jl
and
fldl
mov
out
push
mov
mov
insb
adc
inc
sbbb
mov
fcomip
jmp
xlat
sbb
or
jle
xchg
ljmp
adc
incl
push
adc
and
sub
adc
ret
mov
dec
test
lahf
add
mov
mov
cmp
or
sub
xor
sbb
lcall
and
inc
or
sarb
mov
outsl
ja
rcrb
jo
mov
decl
or
sbb
pop
add
or
fmull
lock
les
adc
pop
insb
mov
mov
incl
aam
add
addb
mov
add
cmp
or
call
cmp
jb
in
mov
fisttps
xorb
in
aam
test
into
aam
insl
out
xchg
add
sub
inc
lahf
sbb
decl
inc
cmp
xchg
xchg
xchg
add
adc
stc
or
cs
in
ror
rclb
mov
inc
fwait
jp
test
dec
shrl
nop
es
inc
sar
ljmp
adc
add
loopne
mov
push
cmp
xor
add
adc
inc
push
push
adc
xor
inc
mov
sub
dec
mov
test
xchg
sbb
call
mov
rcl
cwtl
cmpsl
mov
int3
lea
add
inc
and
mov
mov
decl
aam
push
mov
nop
mov
or
add
and
andb
fcomip
ljmp
add
push
push
pop
add
lods
aas
mov
add
mov
les
and
mov
out
pop
test
mul
inc
pop
inc
dec
mov
add
scas
push
or
in
pop
pop
dec
push
cmp
add
lret
xchg
jl
clc
lods
or
call
jo
arpl
cmp
bound
xlat
mov
dec
shl
je
daa
add
adc
sbb
mov
dec
or
ljmp
in
adc
jmp
loope
jo
shrb
fists
inc
jle
or
cltd
clc
pushl
movsb
cwtl
sub
orb
sub
jnp
sbb
jmp
test
pop
and
add
sbb
inc
xor
xlat
shl
mov
adcl
inc
sbb
adc
dec
jns
testb
punpckhbw
add
call
lds
sub
dec
push
push
pushl
or
adc
and
mov
or
mov
cs
dec
jge
jmp
test
jge
xor
test
dec
nop
std
test
adcb
es
mov
mov
cmp
clc
xchg
loopne
mov
call
xchg
cmp
and
push
stos
fisttps
inc
lock
pushl
call
and
push
sbbl
hlt
mov
sbb
fidivl
xchg
imul
and
add
push
fs
adc
pushl
jbe
imul
jns
jmp
dec
call
cwtl
and
hlt
test
call
cmpb
mov
adc
mov
or
les
mov
mov
outsb
leave
jnp
lods
pop
dec
idiv
call
cmp
pop
or
adc
mov
test
mov
adc
lahf
dec
sbb
pop
btr
fistl
add
or
fsubrp
push
jns
sub
or
or
insl
pop
aam
sub
pusha
add
cmp
lahf
popf
mov
inc
jmp
sbb
cs
inc
sar
pusha
xchg
cmp
lahf
mov
mov
flds
inc
jmp
pop
and
insw
mov
leave
push
jg
pop
pop
jmp
dec
sbb
jno
ss
push
pop
jne
fildl
bound
jg
sub
sbb
mov
jb
lret
dec
pop
subb
inc
inc
scas
sub
std
pop
mov
cmpsl
leave
pop
div
and
out
xchg
test
aas
adc
in
sbb
ret
sub
or
mov
sbb
mov
pop
jne
aas
jne
push
lcall
rclb
in
fwait
rorb
adc
pushf
cmp
fisttpl
nop
sub
lcall
test
dec
sahf
xchg
jo
aam
mov
sbb
jg
push
pop
pop
xorl
jo
insb
add
dec
sti
jo
lods
leave
xchg
fs
pusha
out
cmp
pop
pushf
pop
out
cmp
mov
cmp
cmp
or
xor
outsb
mov
loopne
cmp
call
inc
jb
clc
mov
adc
cmp
mov
pusha
cltd
scas
dec
add
stc
inc
testb
clc
stc
xchg
and
mov
push
mov
insl
xor
or
adc
mov
sahf
push
loopne
lock
outsb
cmpb
imul
aaa
std
call
daa
mov
jb
jo
fmuls
push
call
orb
test
mov
or
mov
adc
and
push
or
insl
out
arpl
rcrb
hlt
data16
cwtl
adc
jb
movsl
mov
daa
mov
loopne
inc
dec
js
dec
lret
cmp
popf
or
mov
sbb
and
add
mov
pop
mov
test
push
loopne
push
es
js,pt
mov
dec
mov
add
daa
out
clc
push
andb
adc
or
adc
and
fimuls
int3
out
push
das
cmp
jg
mulb
stc
int3
inc
dec
enter
int
push
outsb
or
push
push
xchg
push
call
shll
mov
je
pop
jl
mov
in
pop
mov
push
jp
outsl
inc
daa
rol
pop
inc
push
pop
and
xor
lcall
adc
test
jns
pop
test
lret
subb
incl
out
sub
mov
mov
out
cs
add
cmp
decl
dec
xchg
dec
dec
add
dec
xor
sbb
adc
outsl
xor
inc
mov
arpl
testl
push
xchg
iret
rolb
decl
into
dec
push
rcll
cmpsb
jo
inc
mov
nop
fimuls
push
adc
incl
or
aas
rorl
decl
pop
inc
or
sbb
and
ss
adc
cld
pop
es
ljmp
cltd
add
rcrb
jne
push
dec
mov
sbb
repnz
lret
and
incl
orl
hlt
cltd
cmp
cli
sti
jl
inc
push
daa
movsb
jne
out
xor
pushl
fxch
cwtl
add
dec
push
clc
cld
cmp
fsubr
pop
pop
push
add
push
cs
imul
fstpt
or
sub
add
je
imul
cmp
test
idiv
inc
jne
sub
add
mov
xchg
sarl
std
jg
push
sarl
push
sub
or
aaa
es
fst
popa
test
sub
sub
jb
enter
cli
mov
ja
mov
xchg
into
xlat
lret
loopne
inc
lcall
pop
jno
repz
shrb
dec
cwtl
push
loopne
ss
pop
and
push
rorl
ljmp
mov
push
push
rcrl
in
enter
loope
and
lcall
mov
call
cli
or
sub
ljmp
add
jnp
adc
test
daa
add
push
sbb
pop
add
in
sbb
mov
orb
popf
cmp
cli
sbb
dec
sbb
push
sub
stc
lock
gs
dec
rcrl
out
adc
int3
lret
add
stos
sbb
add
and
test
inc
or
call
bound
and
jmp
pop
lret
adc
sbb
jne
in
adc
sbb
cld
jl
rcrb
jmp
mov
mov
mov
aaa
inc
sbb
inc
mov
fmull
jp
fsubl
mov
inc
mov
push
popf
cmp
data16
call
aam
test
lcall
repz
dec
in
pop
push
not
inc
mov
das
repnz
push
lods
stc
push
and
and
fidivrl
push
sar
sub
push
adc
sbbb
dec
inc
decl
pusha
mov
test
ja
or
sub
ds
push
out
jnp
testl
jecxz
sti
fwait
arpl
pop
xor
adc
mov
out
adc
or
mov
ds
fwait
pop
cld
pushl
xchg
jnp
shrl
shl
fistps
and
lahf
loopne
int3
popa
push
xchg
call
jns
movsb
movsb
movsl
and
mov
int3
add
push
decl
lock
shrl
decl
dec
fcomi
mov
push
rclb
mov
mov
pop
subl
loop
test
sub
push
sub
es
cli
jmp
cwtl
jecxz
enter
aaa
fisttpll
fcomi
xchg
jmp
inc
adcb
in
mov
aad
pushl
cmp
lock
loope
adc
inc
sahf
lcall
xor
jns
inc
in
xchg
xor
popf
in
dec
in
push
pop
sub
mov
hlt
sub
mov
paddusw
push
sar
shll
pop
mov
adc
imul
mov
xlat
fidivs
push
push
in
add
pop
in
add
mov
pslld
push
jo
pop
mov
inc
out
test
mov
cs
mov
incl
out
push
mov
dec
out
push
clc
push
mov
fsubr
pusha
lods
inc
sar
lcall
fisubs
fidivl
add
mov
inc
icebp
or
xchg
cmpsb
pop
pop
inc
js
sub
mov
out
ljmp
icebp
test
sub
pop
ret
mov
dec
and
pop
ret
sub
clc
incl
jne
sub
xchg
xchg
push
in
and
mov
sbb
mov
rcr
mov
lahf
lahf
sbb
xchg
in
dec
ds
jmp
and
sbb
mov
add
lds
pop
fldenv
pop
inc
add
iret
fdivrs
xor
ljmp
testl
pop
outsb
mov
movsb
mov
sbb
orb
inc
push
lods
sbb
jmp
outsl
loop
adc
int
jle
repz
fcmovnu
and
or
cmpb
xchg
cmc
jmp
dec
aaa
jns
add
lods
ja
mov
jp
push
mov
adc
xchg
std
pusha
adc
cld
lcall
mov
andb
adc
xchg
dec
adc
call
adc
sbb
jecxz
pop
dec
inc
mov
fyl2x
mov
inc
sub
leave
adcb
mov
decl
xchg
xlat
xor
inc
xchg
mov
cmc
mov
adc
incl
test
mov
push
xor
ja
cmp
jb
frstor
inc
call
cmp
hlt
push
hlt
adc
jge
test
xor
scas
pusha
jmp
xchg
nop
adcl
lcall
loop
inc
lock
push
mov
sbb
and
out
push
inc
push
add
nop
xchg
add
loop
or
inc
andl
push
dec
jmp
sbb
pusha
xor
jg
pop
mov
push
sub
pushf
fildll
fbld
dec
out
call
subl
bound
cmp
cmpsb
adc
push
loop
lret
mov
or
and
push
adc
and
testb
jmp
xlat
push
pop
lahf
pop
add
loopne
mov
je
enter
mov
dec
inc
stos
std
pushl
bound
dec
mov
test
mov
xor
add
cld
mov
loopne
xor
xchg
or
inc
jmp
jg
jg
and
add
xchg
rorb
sub
add
dec
push
in
sub
and
sub
xchg
push
or
inc
ljmp
das
dec
or
or
and
mov
ret
push
nop
cmc
pop
mov
aaa
sub
shlb
push
rcl
inc
add
fcos
incl
add
lret
jo
aaa
mov
aad
lret
aam
xor
push
push
and
sbb
push
sbb
f2xm1
in
call
shl
cwtl
fistpll
fwait
xchg
lock
xor
mov
call
jns
xor
movsl
popa
pop
stos
sbb
pushl
push
es
add
lcall
lock
mov
dec
adc
lret
jmp
push
or
test
test
xchg
inc
andl
mov
cmpsl
add
sub
xor
inc
loope
xchg
xor
pop
mov
cs
and
ljmp
adc
ffreep
sub
adc
out
gs
dec
cmp
xlat
add
mov
nop
inc
imul
sub
shlb
rorb
lcall
clc
call
fldcw
mov
loop
cmp
sarb
sub
jmp
mov
loop
test
jo
or
add
mov
leave
or
test
xchg
pop
inc
popa
test
shll
xchg
jns
fisttps
adc
xchg
xor
inc
dec
mov
ja
rcl
inc
clc
dec
sbb
push
pop
aam
pop
jmp
inc
scas
fyl2xp1
movsb
cltd
in
jbe
xor
cld
incl
dec
repnz
in
mov
xchg
out
or
test
hlt
inc
or
mov
jecxz
xchg
cltd
mov
rcl
sub
popf
add
adc
adc
jns
loope
test
or
test
mov
out
push
imul
scas
lock
pop
pop
dec
push
adcl
add
sbb
and
add
fs
scas
inc
adc
pop
sbb
lcall
jmp
pop
xlat
call
notl
add
mov
sub
and
sbb
xor
push
jmp
pop
dec
adc
jg
jp
test
xor
add
sti
fstpl
andl
ss
mov
adc
push
xor
pop
movl
cld
fisubl
or
jo
push
jmp
testl
rclb
inc
adc
sub
inc
pop
mov
push
xor
add
and
add
or
stc
sbb
incl
cmc
aaa
or
push
dec
push
loopne
and
andb
cld
jmp
pop
xlat
sub
pop
div
fidivl
and
push
filds
ljmp
scas
lret
das
sub
adc
lods
aaa
adc
call
pop
mov
test
cmovne
add
pop
movsb
sub
outsl
and
push
mov
lahf
dec
dec
or
push
movsb
gs
sbb
or
jnp
decl
or
pushf
push
mov
in
inc
negb
ret
pop
sarl
cmp
test
and
and
or
sub
xchg
out
pushl
add
push
mov
and
call
out
clc
and
iret
dec
orps
push
xchg
mov
jmp
iret
pop
leave
add
aam
mov
int3
mov
loop
xchg
mov
cli
js
pushl
lods
or
rorb
es
call
aaa
lods
push
xor
flds
out
call
or
and
dec
and
mov
pop
std
push
daa
pusha
inc
ljmp
call
xor
jmp
mov
repnz
push
lret
in
addr16
loopne
lcall
cmpb
sub
mov
rcrb
mov
and
dec
xor
in
sub
jg
incl
imul
dec
dec
or
xor
movsb
aad
ljmp
mov
repz
xchg
mov
aaa
jne
arpl
dec
pcmpgtb
push
inc
cli
jge
jo
pop
mov
push
jge
push
and
push
dec
shr
adc
das
aas
and
pusha
inc
and
xlat
jge
lcall
lea
dec
and
xchg
jns
fwait
jo
inc
repnz
jmp
pop
lock
jl
jb
jmp
or
ds
adc
pop
icebp
in
incl
aam
dec
adc
scas
jp
loope
mov
outsb
pop
cmp
decl
sarl
repz
insb
out
ljmp
outsb
push
mov
or
jb
rorl
ja
negb
sub
add
sbb
jmp
mov
sti
pop
cmc
mov
hlt
push
or
xchg
shrl
cvtps2pd
in
ljmp
mov
pop
in
nop
push
cld
push
and
shrb
orb
push
mov
or
nop
int3
mov
and
ds
loope
adc
fsubrs
pop
cli
data16
sarb
enter
mov
mov
cmp
push
mov
xor
hlt
orb
movsl
cmp
or
xor
std
std
sti
out
sbb
ror
xor
dec
xor
sbb
xor
sbb
sbb
test
clc
pop
sub
mov
sbb
fisttpl
inc
sub
mov
das
sbb
aam
loopne
in
jmp
add
inc
xor
jmp
mov
sbb
sub
sbb
cmp
mov
repnz
add
sub
imul
and
sbbb
call
fildll
push
add
pop
in
mov
ret
rolb
jg
test
adc
mov
push
dec
push
pop
push
jne
js
repz
out
inc
bound
and
out
mov
das
cmp
dec
aam
fcmovne
mov
sti
es
out
jnp
mov
sbb
xchg
jne
addb
xchg
fistpll
or
mov
push
fsubrl
jl
mov
xchg
cmp
lock
push
lahf
out
push
call
cmc
ljmp
ja
mov
push
insl
ss
adc
ljmp
rorb
sub
sbb
xchg
dec
sub
outsl
les
test
mov
cmpsl
cmp
push
add
cli
lcall
outsb
je
leave
sub
hlt
aam
mov
outsb
icebp
xor
cmp
and
shrb
xchg
les
or
aam
aad
jae
int3
dec
std
push
fcmovne
push
push
scas
cmp
dec
in
sbb
test
jns
and
stc
add
fcoml
dec
jg
inc
bound
pop
negb
ljmp
bound
or
sbb
enter
or
pop
incl
incl
or
pop
or
shrl
fmull
or
aam
cs
add
xlat
shl
je
mov
mov
ffree
dec
cmp
add
lock
ljmp
dec
int3
test
std
clc
dec
inc
lock
loop
inc
pop
addl
pop
gs
rolb
hlt
adc
jmp
pop
mov
mov
popa
rclb
bound
loopne
sub
mov
mov
adc
hlt
mov
push
push
mov
adc
loopne
mov
lea
adc
mov
in
cltd
sub
cmp
loopne
dec
call
stos
aam
mov
xor
mov
push
mov
mov
or
mov
pop
pop
or
push
les
stos
sub
popa
js
sbb
pushl
xchg
insb
or
rclb
adc
fs
call
aaa
bound
pushl
call
loop
daa
je
xchg
jl
rclb
mov
test
jg
add
jmp
xor
jne
cmp
and
add
data16
jg
jno
dec
and
xorb
das
int
inc
dec
adc
or
xchg
jle
test
pushl
es
pop
jae
andl
js
jge
dec
nop
or
cmp
adc
xchg
cmp
pushf
cltd
in
dec
cmp
cli
cmp
mov
dec
sbb
addr16
xor
or
in
lret
cmp
ljmp
cmpsb
xor
xor
push
mov
out
inc
lret
push
testl
pushl
jge
test
pop
fistps
add
ret
xor
outsl
lock
call
int3
in
adc
push
jnp
ds
sub
add
roll
adc
loop
movsb
xchg
mov
sbb
cld
outsl
in
mov
add
cmp
and
pop
clc
into
adc
decl
add
pop
pusha
mov
mov
out
xchg
shll
cmc
add
fmuls
adcb
clc
lea
dec
das
jb,pt
mov
jecxz
aam
aaa
cld
call
cmpsl
insl
cltd
inc
push
dec
daa
inc
addl
shld
or
out
imul
adc
or
jo
cmp
cwtl
pop
nop
jbe
fcomip
lcall
adc
inc
ficompl
imul
xor
hlt
xchg
stc
stos
mov
out
cld
mov
mov
inc
outsb
mov
or
push
sbb
and
lea
addb
mov
or
lret
jmp
cmc
mov
lcall
pop
jge
dec
pop
out
in
daa
cwtl
insb
data16
lret
and
sub
push
pop
je
lcall
lods
shr
and
fldln2
mov
je
cld
mov
jg
adc
add
addl
cwtl
pop
cmp
aaa
sar
test
cmp
xorb
ljmp
lods
in
dec
cmpb
mov
leave
mull
into
cmpsb
mov
inc
nop
enter
mov
push
clc
dec
pusha
ljmp
xor
call
ljmp
push
jl
ss
nop
xor
or
std
scas
nop
aaa
test
add
adc
mov
and
loope
cmp
push
sarb
lods
shlw
adc
loop
inc
mov
inc
xchg
inc
and
decl
sub
test
std
dec
cmp
add
cmp
out
xor
jecxz
movl
std
mov
bound
stos
lret
add
jmp
mov
and
jb
ljmp
mov
mov
icebp
pop
cmpb
fdiv
add
sub
xor
fisttps
sub
xor
cmp
movb
outsl
adc
mov
sahf
nop
imul
pop
movsl
fs
jmp
nop
in
adc
add
mov
mov
ljmp
addb
dec
fistl
adc
scas
jmp
and
clc
loopne
xor
mov
faddl
clc
mov
add
xchg
call
inc
jmp
xlat
movsb
loopne
mov
std
sub
add
sbb
pusha
adc
adc
jp
ja
clc
jns
xor
adc
xlat
stc
mov
jne
popa
aam
push
divps
lcall
push
cmp
mov
push
inc
sub
jecxz
inc
sahf
jne
push
and
ljmp
or
or
push
bound
xrelease
mov
lcall
dec
loope
or
movsl
jmp
mov
pusha
lods
clc
jg
jb
or
mov
in
adc
sub
jg
fs
repz
rcrb
sub
cmp
sbb
fildll
and
or
adc
sub
or
leave
pop
addl
xchg
lods
fdivr
mov
mov
add
mov
decl
dec
imul
xchg
jo
nop
mov
push
insl
and
cmpb
mov
mov
ljmp
popa
lcall
pop
jmp
test
incl
xchg
dec
shrl
inc
xor
call
ret
xchg
jl
push
decl
sbb
and
popl
pop
ret
es
xor
or
sub
call
addb
ljmp
out
fwait
ss
cmpsb
mov
in
and
roll
mov
ss
push
mov
jns
jno
xor
lock
je
inc
cmp
jne
mov
lods
cmp
sub
push
cmpl
add
cs
adc
or
pop
icebp
pushl
loopne
add
cli
ret
test
lea
jo
pop
flds
sub
push
mov
in
add
pop
mov
movsb
mov
xor
xor
sarb
rol
andb
push
jmp
add
jns
sbb
or
xchg
loope
mov
addr16
insb
cmpsl
iret
movzwl
xor
repz
jmp
insl
mov
xor
add
imul
scas
aam
sbb
into
decl
sub
push
dec
xor
pop
stos
lods
push
mov
adc
insl
ljmp
test
fdivrl
mov
add
and
xlat
jg
dec
mov
dec
cmp
mov
stc
push
js
std
jg
adc
and
into
loop
lods
xchg
sub
and
cmp
mov
xor
pop
daa
mov
mov
dec
cmpsb
or
adc
ja
daa
add
adc
jg
pusha
and
pop
cmp
imul
mov
movsl
or
add
cmp
mov
ljmp
and
daa
inc
mov
shll
test
push
mov
cwtl
sbb
mov
call
mov
cmp
ja
adc
dec
add
insb
sub
pop
dec
or
orb
mov
adc
inc
sub
mov
sbb
mov
mov
jg
hlt
inc
rorb
push
cmpsl
jb
enter
pop
xchg
sahf
insb
mov
lods
inc
push
jo
iret
cmp
shlb
xor
jl,pn
shr
scas
mov
sub
inc
jo
and
add
or
rdmsr
dec
or
fcomip
ljmp
es
add
loop
outsb
pop
rorb
pop
xor
decl
adc
add
sub
lret
lods
jmp
incb
dec
bnd
dec
je
jmp
mov
movsb
jge
scas
add
jmp
mov
inc
mov
out
test
push
ljmp
push
ficoml
inc
sbb
inc
push
mov
cmp
jg
lcall
repz
inc
jmp
aam
sbb
sbb
dec
ljmp
xchg
push
or
loop
vpshld
test
push
xchg
jmp
xor
cld
jg
adc
js
nop
and
cs
push
sub
iret
imul
push
inc
mov
add
lock
xchg
xor
cmp
lret
jg
pop
std
xor
fcoms
mov
lcall
cmp
sahf
ja
daa
add
pop
loopne
mov
inc
xchg
pop
mov
push
pop
fcoms
or
and
imul
xchg
and
es
leave
adc
push
incl
adc
clc
inc
mov
icebp
pusha
lret
pop
dec
xor
and
ja
rorb
push
xchg
pop
sbb
pop
jb
xor
decl
or
xor
mov
xchg
and
fsubl
xchg
repnz
ljmp
cmp
gs
add
test
xchg
stos
in
movsl
inc
adc
sub
lock
incl
mov
mov
xor
inc
sbb
push
decl
or
pop
call
popa
mov
jns
jno
mulb
push
inc
jl
pop
nop
fwait
addl
jb
mov
push
pusha
dec
mov
js
jg
movsb
adc
arpl
inc
and
pop
and
loopne
xchg
adc
incl
ljmp
pop
into
stos
cmpsb
mov
or
addr16
mov
inc
pop
outsl
incl
clc
mov
test
pop
add
sbb
out
je
inc
xchg
inc
bound
incl
int3
inc
mov
pop
and
loopne
adc
and
inc
mov
xor
sbb
push
outsb
clc
mov
xchg
js
and
test
loop
push
pop
mov
mov
push
mov
call
les
das
stos
lcall
add
out
inc
or
decl
jecxz
push
mov
loopne
rcll
push
xchg
sub
jmp
movsb
xchg
dec
sub
mov
incl
out
dec
inc
pop
mov
scas
jp
or
cld
pushl
mov
xor
lods
jne
xor
mov
cli
adcb
cmc
xchg
jle
add
push
ss
mov
jnp
jg
test
adc
pop
lcall
or
clc
push
add
shr
xchg
test
hlt
test
xchg
sub
clc
test
sbb
scas
adc
jb
clc
sbb
add
cmp
sub
mov
lcall
xchg
push
movb
dec
aad
pushf
add
ljmp
sbb
jbe
xor
jmp
and
jne
dec
sarl
xor
mov
cs
xchg
sahf
shl
fsts
out
and
inc
and
sbb
rorl
test
dec
and
pushl
pop
nop
add
cmpsl
mov
sbb
mov
mov
movsb
mov
fsubl
or
pop
xchg
add
out
mov
push
nop
mov
lock
adc
divb
loop
sahf
sub
invd
add
in
adc
mov
lods
jl
out
iret
nop
dec
adc
int3
incl
cld
incl
daa
rcrl
mov
adc
and
xor
sub
js
adc
sbb
les
pusha
es
cmpsl
sbb
fisttpl
and
sub
sbb
das
and
and
jecxz
jge
jbe
adc
stos
lds
cmp
incl
lcall
push
lahf
cmp
jb
cmp
stos
jnp
and
scas
or
inc
inc
mov
xchg
ja
cmp
jbe
xor
rorb
out
icebp
pop
repnz
jmp
or
fs
mov
sahf
inc
lret
adc
jae
or
incl
jmp
out
jmp
pop
shll
mov
add
jb
xchg
mov
jmp
lcall
xor
inc
inc
jmp
nop
cmp
jle
mov
mov
jecxz
insb
test
out
out
mov
cmp
addr16
mov
adc
xor
mov
mov
fisubl
and
cli
push
mov
add
and
cli
adc
movsb
mov
fisubrl
mov
jo
cld
pusha
fsubs
lods
cmp
push
jo
or
lods
push
aaa
in
loope
xor
cs
or
in
shll
test
xor
cmc
mov
mov
add
ja
mov
inc
or
pop
clc
mov
fld
dec
sub
sub
ljmp
shlb
mov
adc
loope
adc
decl
xor
out
mov
and
or
hlt
xchg
or
mov
test
mov
push
mov
push
jmp
jg
fs
sbb
push
or
imul
clc
dec
movsb
pop
pop
imull
adc
std
jmp
mov
icebp
or
xor
pop
pushf
sub
mov
pushf
cmp
test
jg
dec
rclb
mov
inc
out
bound
loopne
cld
xor
sub
xor
mov
sarl
stc
jnp
pop
inc
outsb
daa
mov
sub
dec
push
movsl
pusha
insb
inc
jne
jmp
and
xchg
loopne
push
pop
or
and
or
xor
int3
adc
dec
incl
push
clc
mov
mov
xor
cld
lcall
aad
addl
push
add
add
mov
sub
and
inc
add
sub
xor
bound
xchg
mov
push
or
sub
decl
jns
mov
or
insb
mov
sbb
fsts
mov
mov
cs
pop
or
pop
and
push
mov
sub
leave
mov
jg
clc
push
xor
and
jnp
inc
ds
push
or
stc
mov
and
aas
pushf
push
testl
inc
inc
mov
pusha
cltd
mov
push
mov
push
fdivr
pushl
mov
dec
sbb
movsb
outsl
pop
aam
cmp
fsubrs
adc
ljmp
and
fisttpll
insb
xor
jecxz
cmp
and
pop
ljmp
decl
sti
push
inc
sarb
fbld
inc
xchg
add
xchg
lods
pop
hlt
and
test
sub
fisubrl
lcall
and
rorb
loope
push
push
bound
pushf
and
xchg
pushf
sbb
mov
inc
ja
pop
test
pushl
sbb
sbb
call
mov
pop
cmp
jge
cmp
mov
xor
imul
pusha
xchg
fwait
xor
sahf
sahf
push
sub
xor
add
inc
adc
aaa
pop
or
inc
pop
sbb
mov
mov
pop
iret
das
push
adc
decl
xchg
out
imul
or
add
fistpl
lods
pop
test
add
loopne
inc
add
movsb
or
add
inc
lcall
xor
scas
lcall
cmc
mov
and
or
or
xorb
les
movsb
pop
roll
jl
mov
mov
ret
into
and
xchg
mov
jo
xor
inc
cmc
ja
incl
inc
rcrl
aas
mov
push
fwait
je
xchg
jo
lcall
out
xor
flds
mov
or
fdivrp
mov
decl
flds
out
clc
add
inc
jg
push
fildll
sahf
add
adc
nop
mov
test
hlt
pop
mov
cbtw
cli
mov
pop
push
pop
cld
mov
sbb
das
xchg
or
enter
add
mov
mov
mov
fs
adc
call
std
adc
insl
sbb
movsb
push
dec
fstp
cwtl
xchg
insb
sub
pushl
mov
inc
test
xchg
ficoms
and
pop
or
dec
stos
or
pop
das
out
clc
decl
cld
push
int
imul
insb
jne
popa
push
rorl
adc
jo
or
aaa
icebp
mov
test
mov
mov
lods
xchg
cmp
ret
lcall
sbb
faddl
sti
xor
adc
nop
mov
mov
jnp
mov
mov
bound
imul
mov
xchg
into
add
lcall
add
ljmp
mov
add
cwtl
mov
or
and
jmp
add
rol
mov
pop
shlb
je
cmc
add
pop
inc
sub
pop
call
xor
mov
mov
push
xchg
mov
movsl
loope
jmp
jno
sub
pop
call
adc
call
add
and
or
pop
sbb
sub
sarb
xor
push
mov
jmp
sub
add
inc
push
and
push
push
push
sbb
adc
repz
xor
cmp
sbb
fadd
and
cmp
xchg
mov
iret
mov
pushl
cmp
adc
push
cmp
aam
andl
sub
outsl
xor
or
inc
jmp
shlb
xorb
pop
and
mov
pushf
mov
mov
into
mov
js
add
decl
nop
cli
add
fisubs
push
ss
outsl
add
cs
call
fistl
inc
outsb
and
xchg
je
fwait
adc
cmpsb
xorb
and
xchg
xor
andb
add
stos
pop
dec
add
decl
in
and
pop
and
icebp
inc
mov
sub
shlb
add
jmp
fldenv
enter
push
jae
fwait
lcall
adc
adc
imul
xchg
stos
rclb
push
adc
idivb
cmp
repnz
and
cwtl
mov
cmp
fists
mov
and
leave
aam
mov
test
add
jmp
mov
int3
sub
enter
aam
mov
and
and
inc
std
pop
mov
add
decl
mov
xor
fimuls
pop
pop
pop
fildl
jg
cmp
pop
loope
data16
add
mov
xchg
and
dec
or
addb
pop
sub
filds
add
mov
or
jbe
mov
push
adc
sbb
add
scas
push
bound
mov
sub
inc
movsl
lock
sub
ljmp
jmp
gs
and
or
push
dec
nop
push
ja
lahf
push
clc
pop
push
dec
inc
sbb
push
fists
femms
cld
sub
es
fbstp
mov
and
jne
mov
jbe
incl
sbb
xor
cmp
call
or
scas
int
call
adc
leave
loop
adc
orl
adc
les
insl
inc
and
ror
imul
mov
add
in
push
movsb
jne
orl
pushl
out
shll
cmp
cmp
cld
test
mov
mov
mov
lcall
cwtl
bound
or
daa
add
and
inc
inc
iret
and
or
xchg
insl
call
adc
xlat
pop
dec
or
orb
test
cmp
enter
ja
into
mov
push
push
imul
pop
mov
xchg
aam
lds
add
popf
rdtsc
test
fbld
les
sbb
popa
jge
loope
bound
add
sub
jl
outsb
push
ret
ja
call
add
dec
outsl
sarb
popf
adc
adc
mov
dec
nop
shl
incl
aaa
dec
add
adc
jb
fdivrs
pop
lcall
push
inc
cs
ret
xlat
outsl
dec
leave
roll
lock
es
or
leave
or
xchg
pop
adc
mov
inc
pop
add
jmp
jbe
mov
inc
cmp
jecxz,pt
cli
call
je
add
imul
int3
mov
lcall
daa
xor
mov
dec
outsb
jno
rcrl
or
aaa
in
enter
jns
js
ds
call
and
mov
dec
mov
mov
sbb
popl
cmpl
or
pop
push
add
inc
and
dec
xchg
pop
outsl
cltd
sbb
xchg
bound
cwtl
mov
jg
push
push
sahf
insl
and
shlb
hlt
cmpsl
pusha
adc
ljmp
je
mov
cltd
andb
inc
sub
les
inc
push
popf
lea
push
jmp
push
add
add
lcall
dec
and
mov
cld
mov
pop
in
dec
push
pop
xchg
sub
inc
and
sbb
es
add
pushl
fwait
xchg
jo
pop
push
sbb
lods
loopne
jns
rclb
add
pushl
test
loope
adc
pop
mov
addb
incl
jle
int3
mov
pop
gs
pop
sub
push
add
icebp
call
insl
add
jle
push
xorl
add
iret
sub
incl
div
inc
bound
sarl
outsb
popa
movsl
add
xchg
sbb
test
decb
or
pop
jb
or
mov
dec
repnz
and
gs
jge
pusha
pop
ja
imul
aad
test
jg
push
push
push
and
lar
enter
sbb
in
jmp
mov
add
add
cmp
js
cld
shl
push
out
sub
pushl
dec
shrb
push
mov
cmp
ja
push
ja
add
cs
or
push
xor
hlt
mov
push
je
daa
in
enter
jl
repz
sbb
cmp
mov
pop
pop
clc
lcall
jno
mov
pop
add
pop
hlt
pop
dec
add
aaa
xchg
icebp
ljmp
movsb
out
push
or
psllw
dec
scas
adc
fcomip
lea
push
adc
mov
rorl
nop
stos
mov
call
xor
or
adc
jg
cltd
xchg
sbb
xchg
pop
sbb
leave
push
xor
sbb
mov
add
xlat
ficoml
jge
mov
xchg
push
sbbb
inc
pop
jbe
xchg
pop
gs
cld
push
test
push
fstps
bswap
xchg
repz
cld
das
lods
nop
push
and
sbb
fnsave
dec
xchg
sub
cmc
jg
xchg
mov
inc
pop
and
in
xchg
data16
lock
inc
jnp
and
js
inc
and
scas
mov
cmp
es
xchg
mov
and
or
add
jmp
add
dec
xchg
adc
mov
cs
leave
dec
sub
xor
sar
ljmp
and
je
in
repz
mov
and
dec
out
add
insb
mov
push
aam
call
dec
icebp
out
mov
inc
sahf
mov
loopne
sahf
push
stos
xchg
cmpsl
mov
adc
mov
sub
add
and
outsb
icebp
mov
std
xor
popa
das
push
push
inc
pop
add
test
je
pop
rcl
xor
fbld
pushf
stos
jecxz
shrb
xor
push
and
mov
add
inc
fiadds
std
pushl
add
push
and
stc
xor
or
dec
sub
inc
movsb
cli
outsl
loop
inc
pop
enter
mov
xchg
xor
pop
xor
ss
mov
daa
sub
aaa
fstpt
push
test
dec
dec
cmp
iret
mov
mov
outsb
adc
insl
xchg
jb
cmp
add
ficoml
in
mov
mov
pusha
push
push
mov
decl
mov
iret
mov
in
push
dec
lock
sub
cmp
ss
sub
js
sbb
xor
push
mov
cmpb
push
jb
pop
fisttpl
mov
dec
and
jmp
dec
mov
movsb
pop
enter
ljmp
push
cwtl
inc
cmp
or
sub
aad
inc
pop
dec
xor
pushl
sbb
xor
mov
mov
or
mov
mov
fildl
fistps
sahf
pop
loopne
pop
push
sub
rol
xchg
clc
jg
pop
jl
xchg
insb
aam
enter
mov
sub
jg
push
cs
dec
pusha
or
fsubs
xor
int3
pop
cmp
sub
inc
dec
push
adc
sbb
insl
fnstsw
dec
nop
loopne
nop
adc
jl
es
xlat
dec
out
inc
or
or
jae
or
push
cmp
mov
incl
mov
jmp
jecxz
or
jp
pop
sbb
xor
jno
jo
pop
das
cmpl
push
loop
call
inc
addb
and
mov
add
or
inc
or
xor
stos
or
andps
sub
lods
flds
dec
pop
call
jns
aaa
inc
movsl
mov
cli
insl
inc
repnz
mov
inc
dec
fs
mov
orl
or
cmp
inc
mov
out
sbb
cmp
adc
call
lcall
orb
clc
push
inc
jnp
push
gs
data16
cmp
jns
cld
cmp
sar
or
xor
movsb
jo
and
stc
or
mov
cmp
testl
ds
aas
pop
add
hlt
xchg
and
add
pusha
call
pop
inc
int3
ja
lret
push
call
call
insb
out
js
inc
adcl
ret
jg
pop
inc
pop
jge
ds
test
loopne
inc
aaa
repz
push
jp
outsb
push
popf
xchg
out
cmp
lret
idivb
ljmp
out
sbb
loopne
sbb
in
out
and
or
in
jmp
mov
in
xor
xor
dec
push
lret
mov
das
pop
xchg
or
je
mov
cltd
ret
jmp
add
mov
jg
cmp
push
roll
sub
test
mov
adc
pop
add
dec
rorl
push
or
cmc
xchg
mov
sbb
mov
push
scas
mov
cmp
pop
push
pop
movsb
test
and
dec
ljmp
nop
jg
movsb
aaa
inc
adc
cmp
jmp
fstpl
mov
fiaddl
sahf
or
lcall
add
sar
xchg
adc
pop
out
cmp
adc
pop
fs
sub
adc
pop
pop
pusha
push
rolb
add
and
sti
pushl
xlat
mov
xor
jbe
aam
push
ret
push
xlat
inc
dec
push
xchg
clc
incl
push
dec
push
jbe
cltd
mov
cld
jb
adc
dec
bound
inc
ljmp
js
int
mov
xor
imul
jnp
lret
jmp
jo
push
jns
es
fxch
gs
insb
inc
and
divl
bound
sbb
add
fimuls
push
sbb
push
mov
out
mov
xlat
out
inc
and
idiv
mov
shlb
lods
sub
aaa
mov
and
cmp
pop
mov
inc
cwtl
sahf
xor
js
imul
sbb
sbb
adc
inc
sbb
inc
or
and
pop
inc
insb
add
xchg
les
push
loopne
lcall
movsl
adcl
mov
daa
add
jmp
loope
loop
in
pop
adc
fdivrs
xor
and
ljmp
add
out
out
rorb
rcl
rcl
aad
xlat
fdiv
lret
fcmovnu
fstp
ffreep
rol
les
std
mov
in
pop
dec
leave
lret
add
push
fidivs
iret
cmpxchg
mov
in
mov
add
sbb
inc
inc
xchg
add
ljmp
cwtl
pop
push
xor
sbb
inc
cli
icebp
and
pop
adc
nop
push
aam
xchg
dec
pop
fdivrl
movsl
fsubl
or
mov
icebp
and
fcomip
decl
pop
and
inc
fs
mov
mov
in
imul
mov
bound
lahf
lahf
push
add
push
jo
jp
xchg
pushf
dec
mov
idiv
decl
loope
pop
add
gs
aam
cmp
movsb
inc
pop
out
sub
sar
adc
jo
xchg
andb
pusha
push
or
ljmp
addl
pusha
xor
pushf
lahf
pushf
jle
add
add
pushl
fildl
lods
pop
xor
xor
outsl
dec
je
cmp
dec
adc
rorl
mov
cwtl
dec
push
mov
sbb
add
push
pop
test
loopne
jno
shlb
inc
adc
or
ljmp
adc
fwait
testl
mov
jg
movsb
or
inc
or
or
dec
fisubl
sub
dec
sbb
dec
sbb
jmp
add
mov
mov
and
pop
loopne
lret
fcmovnb
adc
test
shlb
push
pop
sub
out
or
insl
push
pop
loope
jns
dec
cmp
and
mov
xchg
sub
dec
adc
adc
cmp
inc
clc
scas
cli
incl
or
adc
lods
dec
push
jns
or
pop
adc
add
lret
clc
push
mov
dec
icebp
out
or
ljmp
lcall
mov
dec
inc
fs
dec
push
fimull
and
shl
ret
movsb
dec
clc
incl
gs
add
testb
js
negb
jle
jge
clc
decl
ja
and
cmp
je
mov
xor
sbb
or
ja
xchg
addb
outsl
sbb
lcall
jecxz
or
int
jae
mov
and
dec
add
clc
jg
inc
xorb
icebp
mov
push
mov
ljmp
sub
sbb
add
iret
fs
int
bound
lcall
xor
mov
aam
pop
cmp
jg
mov
and
mov
dec
and
imul
leave
adc
mov
repz
inc
in
rolb
test
inc
add
ljmp
pushl
jo
push
dec
xchg
sbb
test
addb
insb
jmp
mov
add
mov
xchg
mov
lcall
add
mov
pop
rorl
cltd
lea
ljmp
push
xchg
jl
inc
inc
sbb
or
inc
dec
jne
or
pushl
push
adc
push
sub
xchg
mov
clc
inc
jl
inc
fmull
mov
lcall
xchg
xor
and
adc
jmp
mov
filds
cmp
mov
dec
std
lret
mov
pop
mov
pop
xor
decl
pop
es
dec
adc
sub
or
imul
stc
mov
ljmp
lock
pop
mov
mov
inc
ret
dec
jmp
cltd
pop
lods
pop
add
dec
cmpb
mov
inc
incl
dec
inc
sbb
cmp
dec
mov
outsb
outsb
cs
clc
pcmpeqd
jb
scas
xchg
mov
mov
jo,pt
add
xor
push
add
inc
mov
sbb
mov
mov
incl
int3
xor
enter
rolb
adc
mov
mov
and
clc
decl
cmp
jb
add
push
jb
and
cltd
insl
or
mov
js
add
mov
pop
jo
pop
rorb
push
movsl
repnz
push
jne
jp
out
rorb
insb
lcall
inc
incl
fldcw
sub
dec
or
clc
push
push
sti
xlat
stc
and
ljmp
or
mov
dec
mov
pusha
call
add
mov
adc
jmp
pushf
aaa
adc
xor
or
lahf
sbb
shrl
dec
sarl
lcall
insb
jbe
sub
nop
cmpsb
mov
inc
pop
dec
push
sahf
or
xchg
mov
imul
mov
sbb
or
mov
test
je
mov
add
jmp
stos
adc
cmp
inc
mov
jg
fildll
sub
add
push
jl
add
push
hlt
ljmp
ss
sarl
and
push
movsl
fistpll
adc
jb
popa
push
xchg
push
test
sbbb
adc
test
dec
push
pop
sub
int
dec
mov
jle
hlt
pop
sub
and
mov
push
scas
cmp
push
ret
push
sarb
or
cmp
pop
inc
out
mov
fildll
mov
fiadds
mov
push
adc
or
xchg
and
xchg
jp
and
jp
clc
adc
jae
mov
es
ret
fsubrs
enter
decl
fdiv
das
push
push
pop
and
or
rcll
adc
and
pop
dec
stos
ficomps
inc
mov
adc
fs
and
xchg
adc
cmp
cltd
decl
dec
mov
ja
cmp
xchg
dec
and
ljmp
sub
jmp
int3
push
pop
dec
pop
add
fdivrp
mov
or
dec
int
repnz
movsb
orl
pusha
xor
sbb
push
cld
pushl
clc
cltd
jns
inc
or
xor
dec
push
mov
adc
stos
rclb
cld
js
fdivp
incl
xor
popf
mov
add
mov
negb
dec
icebp
add
dec
shlb
and
inc
rclb
sbb
pushl
mov
mov
pop
mov
das
sbb
add
or
adc
dec
in
jle
mov
fisttps
loop
xchg
ds
mov
aas
repz
inc
into
cli
and
push
fcmovnb
sub
out
lds
inc
push
mov
inc
lret
jnp
inc
jbe
push
popa
data16
cmp
sub
push
xchg
mov
in
xor
jo
inc
mov
enter
stos
mov
cli
adc
pop
push
mov
push
dec
and
stc
pop
mov
xchg
inc
inc
es
add
adc
movsb
ret
test
scas
push
popf
xchg
dec
ljmp
xchg
sar
inc
call
lcall
mov
cmpsl
shll
inc
sbb
clc
ljmp
movsb
or
mov
test
outsl
sbb
test
std
add
sub
outsl
repnz
filds
dec
fwait
sub
jle
test
lods
out
rorb
lods
and
lods
xor
call
pop
pop
dec
jo
sti
in
add
pop
int3
adc
pop
and
mov
andl
fisttps
test
test
inc
pop
js
stos
cmova
cmp
test
pop
fnsave
in
adc
push
sbb
inc
shll
pop
inc
and
dec
jne
cltd
adc
iret
mov
mov
cmp
adc
mov
lcall
xor
push
and
cld
and
xchg
out
and
adc
sub
call
imul
mov
jmp
cltd
and
dec
mov
push
add
rorb
lea
inc
call
jge
jo
lock
je
xchg
cs
mov
sbb
or
fcomps
sub
pop
xchg
hlt
incl
jb
push
out
sar
cmc
sub
jecxz
or
fwait
push
out
clc
cmp
je
jae
ss
mov
dec
hlt
lock
jge
pop
enter
jg
sub
rcrl
pop
bound
or
sbb
pop
adc
mov
mov
lock
jl
jae
stos
mov
cmp
xchg
movsl
rorl
push
iret
push
add
es
int3
mov
dec
mov
pop
not
ljmp
pusha
push
sbb
cmc
mov
mov
addl
push
add
push
cmp
push
fldl
in
call
ficompl
inc
adc
daa
adc
push
orb
jecxz
or
out
mov
incl
enter
rorb
rcrl
push
push
ret
jg
pop
scas
sbb
add
cmp
out
repnz
pop
divps
jae
mov
pop
orb
dec
sub
inc
mov
sub
mov
or
jg
hlt
lock
test
push
jge
ret
push
ret
int
test
add
jmp
out
test
cmp
rorb
inc
sub
out
movsb
movsb
xor
int3
xchg
fcoml
incl
cwtl
je
negb
or
dec
xor
jb
pop
sbb
sbb
dec
cmp
xchg
mov
jg
dec
rcrl
int
push
leave
shrb
or
xor
mov
or
repz
sbb
and
xorb
test
xchg
adc
int3
or
cmp
mov
jnp
movsb
add
fs
inc
sarl
dec
pop
xchg
decl
xor
add
inc
sbb
test
arpl
xor
nop
mov
cmc
incl
inc
test
dec
mov
inc
daa
or
ljmp
adc
push
xchg
add
orb
pop
les
incl
clc
pop
daa
or
cmp
xor
fcomip
pushl
xor
into
aad
aad
in
and
scas
cs
ret
xchg
movsb
sbb
sub
push
sbb
dec
pop
cmp
das
cld
hlt
inc
xchg
inc
pusha
inc
iret
adc
jmp
stos
mov
hlt
push
aaa
push
enter
cmp
lods
jbe
add
or
ljmp
cmc
push
sub
or
rcrl
aad
sar
fbld
mov
jle
mov
and
daa
inc
mov
jl
cmp
cs
adc
or
adc
cmp
loope
adc
pop
push
loop
aas
or
out
xor
jb
and
cmp
fstpl
push
stos
mov
subl
adc
xchg
push
sti
bound
lock
test
fildll
jb
testb
add
incl
inc
sbb
push
pop
xor
out
push
jbe
inc
leave
adc
mov
adcb
xor
mov
add
sub
dec
and
mov
cmp
and
arpl
pop
xor
ljmp
add
es
lds
jns
repz
enter
loope
incl
out
xchg
popa
dec
mov
and
testb
sbbl
push
fdivrl
stos
outsl
mov
sbb
movsb
imul
adcl
fdivs
in
pop
popa
adc
cmp
add
push
mov
mov
decl
adc
dec
jno
mov
adc
nop
lock
inc
jmp
scas
push
xchg
in
outsb
filds
mov
push
lahf
mov
xor
and
inc
mov
mov
fwait
lock
cmp
mov
lock
jnp
fdivr
dec
es
ss
lock
adc
or
and
mov
jle
mov
jo
lret
cltd
out
stos
add
dec
mov
pop
add
incl
fisubs
test
fwait
repnz
pop
mov
bound
sub
jg
pop
inc
or
call
adc
call
mov
scas
and
add
and
xchg
push
nop
inc
add
nop
in
xor
loop
dec
jb
add
xor
push
cwtl
cmp
xchg
fbstp
xorl
das
adc
adc
inc
aad
loopne
mov
mov
sbb
xor
inc
out
outsl
xor
adc
lcall
je
in
stc
addr16
cmp
in
lret
push
jb
ds
in
test
test
adc
or
loop
mov
mov
mov
pushl
sub
movsb
lock
xor
xchg
push
jnp
cmp
mov
in
call
pop
mov
nop
hlt
dec
sarb
aad
cs
fnsave
outsl
xor
fadd
mov
mov
and
iret
stos
add
mov
sub
aas
mov
aas
push
ljmp
lahf
xchg
sbb
push
push
jl
sub
add
test
pushf
imul
jmp
nop
data16
fmuls
and
pop
or
mov
push
inc
xlat
aas
into
rclb
or
sbbl
sub
xor
push
sub
popa
mov
push
add
mov
rcl
pushf
cs
call
add
xchg
push
or
incl
outsl
sbb
mov
jge
shll
mov
insl
sbb
out
outsb
or
pop
mov
or
mov
pop
mov
fcomp
pop
fdivrs
call
mov
add
and
dec
ljmp
push
gs
cmpsl
add
test
push
and
gs
mov
movsb
dec
inc
mov
je
or
repnz
adc
out
mov
or
push
mov
add
pop
mov
push
cmp
jecxz
xor
ljmp
nop
dec
jns
push
push
lahf
adc
sbb
addr16
incl
mov
repz
in
loope
jle
ja
arpl
xor
mov
dec
adc
test
adc
add
sbb
add
jnp
sub
add
cmp
lock
rolb
int3
xor
push
sbb
mov
cmpsl
repnz
cmp
inc
das
bound
call
push
push
cld
xchg
and
repz
inc
cmp
cmpb
push
pop
pop
inc
pusha
pop
pop
mov
adc
fs
adc
push
scas
mov
add
insb
or
sub
mov
cmpsb
shl
in
push
or
mov
decl
rclb
test
mov
daa
mov
nop
ljmp
jb
jo
dec
mov
lret
mov
daa
lahf
movsb
jno
test
lods
cmp
fildll
test
push
mov
dec
push
insb
mov
test
enter
jb
cmp
mov
xchg
xchg
lret
leave
test
lods
aam
pop
dec
cs
fdivs
mov
aaa
mov
daa
xchg
pop
or
cmp
mov
pop
push
clc
clc
mov
lea
sub
cmp
jmp
outsl
mov
xor
fistl
or
or
or
xor
lcall
adc
arpl
add
sbb
jg
in
mov
rolb
dec
arpl
xchg
mov
add
lock
sub
jne
jns
adc
in
nop
or
cmp
push
hlt
add
pop
shrb
sbb
add
mov
xor
fildll
sub
out
push
jo
jne
jg
call
or
lock
popa
rol
pop
inc
outsl
aaa
fcomps
jo
jae
xor
push
mov
call
loopne
push
pop
enter
popa
adc
inc
aaa
pop
lahf
inc
cs
cmp
stos
scas
or
and
outsb
adc
into
aad
mov
out
pop
sub
in
sub
aas
daa
cmovp
xchg
jb
jae
clc
xor
pop
aam
call
loopne
sar
or
sub
and
or
inc
mov
xchg
ss
sbb
add
push
or
dec
rorl
cli
xchg
mov
push
fs
inc
test
clc
jg
es
xor
sarl
mov
daa
loopne
insb
xchg
test
cmpsl
pop
mov
into
dec
scas
cltd
testl
lods
xlat
push
outsb
add
jae
mov
test
daa
push
adc
js
fistpl
adc
out
xor
pop
add
nop
xor
rcr
outsl
lahf
inc
call
or
and
pushl
ret
push
lcall
lock
testb
loop
decl
xor
xor
inc
lea
push
pop
mov
mov
call
add
jmp
sete
xor
inc
fcmovb
adc
das
push
mov
fwait
inc
pop
das
dec
popa
call
test
cli
imul
inc
cmp
mov
xor
pop
insb
jp
push
lret
decl
sbbb
gs
ret
mov
sbb
call
call
push
add
in
and
mov
ret
mov
and
adc
outsb
and
pushl
or
push
nop
or
jecxz
mov
fistl
or
jbe
movsl
jbe
push
sbbl
mov
shll
and
and
or
aad
mov
xor
and
jg
decl
bound
jge
push
call
loope,pn
addr16
push
cltd
or
mov
lcall
pushl
xchg
cs
pop
mov
inc
jns
in
test
or
sub
decl
mov
adc
jns
jns
sub
push
shll
movsl
jp
mov
lret
xchg
mov
pop
or
insl
cltd
dec
jo
not
orl
call
stos
and
clc
or
arpl
sbb
pop
sarb
test
pop
std
push
call
loopne
inc
dec
push
jmp
les
xor
pushl
outsb
loop
lret
xor
add
inc
jne
dec
rolb
inc
mov
sub
inc
loope
adc
loope
mov
sbb
jno
incl
call
test
xchg
mov
ja
dec
and
add
add
push
or
icebp
ljmp
xchg
out
xor
adc
cwtl
sti
popf
push
or
mov
inc
cmp
loope
mov
jg
clc
mov
inc
lcall
or
pushl
std
fbld
sub
test
imul
cmovle
xor
ljmp
inc
lock
nop
dec
lock
adc
xchg
mov
or
pop
jo
push
pop
mov
sbb
rcr
xchg
mov
movl
insb
jmp
es
cmp
push
call
jmp
inc
and
test
adc
test
or
pop
inc
pusha
call
std
mov
push
mov
mov
cmc
xor
xor
aam
or
jmp
and
mov
add
add
data16
cmp
incl
sbb
add
xchg
add
and
insl
pop
fwait
lods
leave
jge
xor
jle
aad
decl
jl
sub
pop
pop
data16
jge
repnz
mov
leave
outsl
out
out
clc
jg
stos
dec
or
popa
pop
cld
sbb
lret
adc
push
jnp
pop
aaa
jo
sbb
incl
mov
adc
or
lock
loop
ret
add
xor
mov
popa
xor
pop
jg
and
xor
xchg
fldl
pop
ds
jle
dec
jg
jno
push
rcll
lret
ret
lea
adc
int
movsb
adcb
mov
add
orb
lret
or
andb
sub
adc
insb
incl
push
dec
inc
mov
addl
decl
mov
push
xor
push
cmpsl
cli
lds
mov
add
add
push
subb
adc
add
add
call
xlat
ret
sbb
cmpsl
push
and
roll
sar
int
int
incl
jb
cs
adc
test
mov
add
ljmp
sarb
pop
vpshufd
lea
shrb
jno
add
ljmp
dec
add
pop
mov
and
add
push
sub
jmp
cmp
push
jmp
int
sbb
jo
scas
adc
inc
xchg
loope
inc
cmp
fwait
sar
call
add
jns
jmp
cltd
mov
push
dec
push
test
andb
inc
adc
cmpsl
xlat
pop
cmp
shl
jle
push
test
js
call
xchg
sbb
add
lret
lcall
shrb
or
data16
shlb
push
cmc
cmp
aas
test
les
jno
pop
repz
fs
decl
lock
sbb
dec
mov
mov
filds
or
add
sbb
leave
cmp
ja
mov
mov
lret
lods
lahf
push
xchg
mov
xchg
rorb
mov
pop
icebp
adc
arpl
dec
add
imul
jns
leave
dec
sub
dec
jecxz
xor
jle
pop
cld
ljmp
jp
adc
mov
adc
or
adc
dec
movsl
shll
adc
ret
ljmp
gs
mov
inc
pop
aaa
and
or
jg
sbbl
jg
push
push
mov
loop
call
dec
or
incl
cmpsl
clc
sbb
data16
pop
push
and
out
and
xchg
mov
inc
mov
adc
and
adc
xor
testl
icebp
lcall
pop
xlat
iret
inc
dec
leave
adc
and
aaa
dec
lods
outsl
aad
mov
in
adc
add
mov
xlat
inc
addr16
push
adc
inc
and
add
jle
mov
lods
hlt
fisttpl
cld
leave
test
mov
repnz
cmp
ljmp
aam
push
into
mov
jmp
inc
dec
adc
inc
dec
bswap
inc
and
ret
cmc
mov
lret
sub
lock
ljmp
push
inc
push
insb
das
sbb
rorl
push
gs
pop
cmp
gs
clc
add
mov
mov
cltd
cld
incl
add
lea
sbb
in
sub
push
jo
add
jge
inc
and
or
jmp
call
outsb
cmpsl
out
adc
xchg
and
adc
mov
xor
pop
mov
xlat
aas
jg
and
mov
scas
test
mov
or
add
es
mov
lcall
adc
sub
xchg
xlat
dec
inc
nop
jbe
aam
jbe
shlb
mov
mov
cmpsl
decl
add
mov
mov
xchg
mov
sub
add
pusha
movsb
add
mov
or
xchg
dec
out
repnz
jg
or
ds
roll
push
jmp
inc
cmp
xor
push
add
call
mov
pop
mov
jge
mov
fadds
inc
and
jmp
sub
in
ss
mov
pop
sbb
push
and
and
movb
mov
ror
cltd
imul
incl
imul
enter
repnz
sub
adc
or
push
test
ljmp
inc
imul
jb
add
push
es
cmp
pand
add
outsb
leave
pop
mov
push
and
mov
in
add
decl
rclb
fadds
xor
sub
sbb
clc
test
jg
lcall
mov
xchg
xchg
mov
bound
lods
pusha
shl
call
subl
in
jns
xchg
sub
inc
sub
add
movsl
cmpsb
add
mov
mov
bound
xor
pop
push
inc
pop
or
out
es
xchg
adc
mov
out
repnz
fs
insb
adc
les
sub
aaa
inc
fildll
ljmp
xor
je
lea
cli
pop
add
pusha
and
filds
out
pusha
jmp
gs
out
or
addb
lea
push
bound
add
and
add
sub
cmpl
lcall
pop
inc
int
cmp
cli
inc
mov
pop
xchg
push
lea
addr16
int3
xchg
xor
add
insb
xchg
nop
push
addr16
push
xchg
and
pusha
lret
sbb
mov
outsl
arpl
ret
jle
testb
js
cmp
decl
jns
mov
dec
sahf
dec
or
xchg
test
andb
in
dec
inc
in
mov
andb
mov
dec
and
jmp
add
jge
pop
push
clc
nop
aas
cltd
mov
dec
call
add
sbb
push
or
sub
fs
jg
call
incl
and
push
in
les
mov
ss
push
sbb
and
roll
sub
popa
adc
cli
enter
jbe
inc
test
lea
adc
decl
adc
xchg
mov
pop
mov
cld
cmp
scas
incl
and
cmpsb
sbb
mov
or
sbb
xchg
das
clc
mov
sbb
inc
dec
mov
mov
daa
enter
xor
fwait
lock
xor
xchg
xchg
or
test
das
mov
add
or
decl
inc
add
enter
mov
cwtl
push
jb
in
cwtl
jo
mov
mov
in
jl
sbbb
pop
jbe
sbb
and
cltd
insl
or
int
cltd
mov
or
stos
or
pop
and
filds
cltd
je
xchg
mov
add
mov
mov
lcall
xchg
lcall
or
mov
jg
aam
cmp
pop
xchg
fwait
mov
ljmp
or
nop
arpl
mov
mov
add
pop
pop
sbb
sub
outsl
jb
lods
pop
inc
pushf
movsl
nop
adc
les
mov
or
std
nop
pushf
lods
cwtl
cmp
popa
pop
aaa
mov
daa
popf
mov
popf
fmuls
stos
jg,pt
fcoms
sbb
insb
pop
sbb
jmp
loope
sahf
aad
sahf
hlt
xchg
dec
orb
jb
pop
and
pop
lock
pop
sub
fnsave
push
mov
lahf
icebp
and
mov
filds
mov
out
pushf
add
add
pushf
lahf
clc
in
mov
addr16
mov
add
push
jl,pt
dec
sahf
xchg
sub
inc
pop
adc
add
pop
mov
sub
mov
mov
add
orl
scas
mov
cmp
add
xchg
sbb
xor
loope
pushl
add
sbb
cmp
popa
xchg
cmp
test
cmp
arpl
cmp
insl
push
ficoms
or
inc
ljmp
sub
xchg
add
shld
cmp
out
movsb
movsl
movsl
in
sbb
pusha
push
xchg
cld
mov
xor
cwtl
outsb
cmp
cmpsb
pop
cwtl
inc
cmpsb
js
xchg
fistl
and
mov
mov
pusha
addb
or
mov
ja
scas
xchg
inc
jg
repz
cmpsl
test
cmpsl
test
enter
mov
cs
outsb
push
call
jp
outsb
push
pusha
pop
and
dec
xor
nop
or
test
fildll
in
test
dec
jge
imull
rcl
xchg
outsb
sub
test
mov
ret
sub
daa
pop
stos
mov
clc
pushl
les
mov
enter
aaa
jle
ljmp
lds
or
data16
add
and
xchg
sbb
or
xor
incl
mov
pop
insb
sub
or
lods
lods
mov
add
cmpsl
int3
int3
into
push
enter
jae
jg,pt
jmp
inc
push
scas
scas
leave
push
shll
jns
shrb
sbb
hlt
out
push
aaa
adc
push
out
scas
or
incb
aam
mov
sub
pop
mov
add
cmpb
fsubs
lods
insb
mov
dec
div
or
inc
mov
cmpl
cmp
pop
add
sbb
inc
adc
mov
and
lcall
add
mov
push
ret
mov
fwait
daa
mov
loopne
mov
test
ljmp
or
mov
bound
jns
nop
push
fnstsw
imul
push
dec
or
or
inc
mov
mov
iret
aaa
cli
jmp
add
mov
mov
mov
movsb
inc
mov
orb
ljmp
mov
enter
mov
fdivr
out
mov
push
add
and
or
or
fwait
jbe
jo
icebp
sub
incl
cmp
pop
mov
cltd
mov
pushf
or
test
aam
lock
add
shll
sub
mov
add
in
scas
and
ficompl
cmp
mov
les
inc
fnsave
outsl
imulb
daa
mov
push
mov
scas
clc
xor
repnz
mov
adc
add
mov
sar
data16
repnz
xor
adc
addps
pop
pop
xor
push
adc
push
add
int3
gs
in
cmp
cli
data16
pop
mov
clc
fcomip
scas
xchg
mov
daa
inc
nop
stos
inc
loopne
xor
xchg
or
call
add
cmp
and
dec
push
ss
cltd
rolb
mov
xchg
pop
mov
mov
push
fwait
mov
or
or
pop
push
add
outsl
adc
sub
das
dec
das
incl
or
pushl
or
mov
adc
sub
mov
jge
push
mov
xchg
test
mov
dec
sti
inc
pop
les
and
pop
push
rol
cpuid
jecxz
int
inc
cmp
pop
rcl
clc
fwait
inc
dec
dec
dec
jl
ljmp
mov
push
and
inc
dec
sar
cmp
scas
xor
dec
or
inc
push
enter
rorb
clc
push
ffreep
xor
push
or
or
sbb
pop
enter
int
sbb
cmp
xor
outsl
push
in
dec
cmpsl
jmp
ud0
jno
nop
lret
add
and
sarb
js
xchg
sbb
mov
pop
jmp
popf
rorb
and
test
adcl
cmc
and
iret
pop
add
pop
xor
sub
lock
or
scas
call
jg
clc
add
adc
pop
push
loop
enter
cmp
adc
add
test
jle
out
cmp
and
push
addr16
sbbb
pop
lret
addr16
add
jb
dec
leave
insb
repz
leave
insb
jp
repnz
xor
leave
push
jo
icebp
pop
adc
loope
test
lret
push
std
mov
mov
lods
fwait
addr16
xor
enter
hlt
fisttps
lret
xchg
or
add
mov
pop
cs
cmp
xchg
lret
mov
mov
lcall
cmp
pushf
lea
and
or
sbb
pop
bswap
dec
xor
cli
push
call
fwait
pop
mov
dec
dec
int3
lods
mov
inc
inc
inc
mov
push
cmc
jbe
pop
test
int
sub
push
xchg
pop
mov
shll
int
repnz
pop
imul
not
mov
in
int3
iret
add
push
cltd
push
cmp
jg
into
in
push
jbe
adcl
adc
add
clc
xor
push
or
in
rorb
enter
int3
ss
push
test
subb
xor
push
push
shrl
fwait
clc
pop
adc
cmp
out
cmpsb
inc
jnp
push
rcrb
sub
jl
pop
sub
pop
mov
and
rclb
sub
and
out
stos
sub
cmp
into
rcll
inc
pusha
shll
lcall
arpl
mov
sti
imul
sub
add
pusha
jg
ds
sbb
aam
pop
shrb
imul
adc
xorb
pop
and
clc
mov
aad
cmp
fwait
cmp
push
aaa
out
call
and
xlat
xlat
inc
mov
mov
insb
insb
mov
jns
xlat
adc
mov
decl
xor
std
decl
cmp
jl
fadds
xor
xchg
push
and
flds
int
mov
flds
push
fldcw
enter
sub
aas
xor
ret
dec
mov
divl
jns
jo
mov
stc
test
push
xchg
push
dec
lret
mov
mov
jg
addl
cmp
cwtl
cs
out
mov
push
cmpsl
out
int3
aam
or
dec
mov
lods
push
or
sbb
das
fsubr
add
dec
or
pushf
popa
movzwl
movsb
mov
das
jae
ret
fimuls
add
out
adc
add
jne
arpl
call
fidivrl
fiadds
xchg
push
sub
xor
xchg
fbstp
xchg
jg
sbb
fildll
push
mov
mov
xchg
and
dec
jae
dec
jae
dec
xor
loope
sbb
loopne
or
fsub
dec
pop
push
mov
dec
lret
wrmsr
in
loope
loope
inc
loope
fs
adc
sbb
loope
das
or
add
loop
js
add
repnz
add
movsb
loop
xor
scas
testb
add
loopne
scas
fistl
jecxz
sub
add
dec
ds
dec
jecxz
inc
hlt
pushl
incl
pushf
xor
push
fbld
add
in
in
inc
jl
scas
and
call
mov
stos
mov
pop
xchg
jmp
add
add
add
lock
or
xor
xchg
iret
push
out
out
leave
push
add
inc
hlt
out
and
adc
pop
call
xchg
xchg
sub
push
daa
clc
clc
fcoms
les
or
jmp
jmp
je
lcall
lock
jmp
jg
xchg
adc
mov
ljmp
test
in
or
js
xor
pop
jmp
add
xchg
inc
jmp
or
stos
outsb
jle
jns
add
repnz
adc
jne
xor
mov
iret
aas
std
shll
adcl
leave
in
call
call
and
adc
sub
in
rclb
cwtl
mov
pop
out
dec
pop
fs
out
fwait
mov
dec
sbb
lods
adcl
fdivr
sar
out
ss
out
cmpb
in
stos
inc
sub
ficompl
jle
push
add
mov
xorb
lock
jg
je
cmp
or
inc
decl
push
sbb
cmp
fs
lock
adc
xor
loop
lods
or
loop
inc
push
sub
enter
or
loope
pop
clc
and
xchg
add
repnz
pop
mov
add
inc
repnz
sbb
mov
pop
jmp
testb
ret
add
pusha
inc
sbb
clc
adc
mov
sbb
out
cltd
rcrb
cmc
nop
insl
js
subb
std
aaa
cli
cmc
sub
inc
gs
div
addr16
cld
mov
mulb
add
negl
add
jp
dec
jmp
add
mull
mov
inc
sbbl
call
dec
or
je
pop
push
stos
sub
sbb
std
sub
clc
xchg
clc
clc
rcrb
and
es
add
adc
stc
in
sbb
or
or
les
mov
stc
hlt
pop
pop
push
sti
or
jecxz
sti
mov
mov
lahf
inc
scas
icebp
or
dec
inc
sti
sub
cltd
js
outsl
dec
js
loopne
inc
cld
pop
cld
add
clc
fwait
sub
addr16
adc
cmp
cld
pusha
push
pop
push
and
std
lods
add
or
enter
mov
outsb
fmuls
xchg
decb
inc
es
incb
decl
cs
adc
xchg
rolb
cmc
in
jmp
or
adc
or
xchg
inc
pop
and
movsl
jge
scas
pushl
jb
cld
dec
cli
stos
xchg
sbb
inc
or
fucomi
cmpsl
addb
push
fwait
cmpsl
jns
mov
or
adc
or
icebp
sub
add
les
push
add
push
out
push
add
mov
outsl
add
cmp
xchg
mov
hlt
pop
scas
addb
cmp
data16
outsb
in
push
xor
add
sbb
mov
push
xchg
das
mov
sbb
sbb
xor
call
mov
add
mov
inc
mov
clc
test
call
pop
sbb
les
sub
nop
outsl
push
stc
add
lcall
sbb
mov
jge
pop
add
fs
or
push
or
add
or
bound
push
hlt
testl
mov
outsl
jo
mov
and
or
dec
and
mov
shl
test
hlt
xchg
je
outsl
or
je
sub
ljmp
push
daa
int3
into
das
or
rorl
lock
push
outsl
jnp
jbe
js
xor
cmp
fmuls
add
inc
fwait
aas
mov
adc
inc
subb
mov
pusha
insb
insb
mov
push
jne
xchg
cmc
outsl
push
psrlq
push
add
scas
cld
stc
cwtl
push
pop
inc
push
setge
mov
fwait
stc
pushf
add
in
add
push
or
jns
or
add
nop
jl
add
dec
mov
push
pop
lcall
adc
jns
or
adc
cmp
sub
adc
adc
adc
xor
jecxz
sbb
adc
push
dec
or
sbbl
push
and
jmp
jg
vpmacssww
push
aam
push
addr16
push
in
adc
aas
sub
loopne
sarl
cmp
jecxz
or
adc
xor
pusha
lods
pop
add
or
test
insl
jnp
fadds
ljmp
repnz
repnz
in
push
call
add
push
dec
iret
xor
xchg
sbb
pop
arpl
dec
les
out
push
jno
pop
jae
or
pop
out
xchg
jmp
pop
or
jne
mov
pop
sub
mov
pusha
cmp
jg
fisttps
push
xor
and
ja
stos
dec
jns
pusha
lds
test
mov
les
push
lret
in
test
mov
cwtl
adc
mov
and
jecxz
lcall
incl
ds
mov
rorl
or
scas
call
cld
pop
mov
clc
outsb
push
mov
inc
sbb
imul
fdivrp
incl
sbb
inc
das
lret
xor
adc
mov
cmp
dec
pop
dec
or
xchg
jg
dec
cs
mov
fildll
dec
sbb
push
sbb
ds
sbb
insb
sbb
dec
cmpsb
nop
push
push
or
adc
fadd
mov
fcomip
add
pop
inc
es
sbb
outsl
inc
or
xchg
cmpsl
movl
mov
mov
cs
lret
out
fwait
rclb
cwtl
out
popf
lock
lahf
or
insb
sub
test
push
fildll
mov
pop
mov
insb
out
mov
fstps
js
cmpsb
mov
nop
shrb
std
lahf
dec
stos
ror
stos
in
pop
shrb
fmul
sub
loopne
mov
and
jbe
mov
mov
fucomi
mov
lock
hlt
mov
mov
rcl
hlt
clc
push
fdivl
fbld
inc
pop
pusha
mov
mov
mov
pop
in
test
jb
std
aaa
call
sub
cld
and
outsl
les
dec
arpl
ret
test
mov
mov
mov
enter
push
incl
pop
mov
mov
nop
xchg
mov
adcb
dec
int3
movsl
or
into
pop
mov
adc
and
pop
out
jg
loopne
js
jp
adc
test
or
pusha
rcr
mov
repz
xchg
movsb
fs
push
clc
xlat
add
cli
in
out
aas
adc
test
lret
fldcw
scas
sbb
add
or
fstpt
imulb
cwtl
sub
je
jo
push
repnz
es
adc
sub
mov
mov
pop
mov
test
add
pop
out
xchg
mulb
loope
stc
or
mov
mov
sti
jo
jae
insb
cld
movsb
inc
push
cld
fadd
jg
push
sub
loopne
shll
mov
or
insb
jbe
jg
out
loope
adc
mov
cmp
shl
js
mov
fcom
dec
repz
bound
lock
dec
in
out
clc
out
aam
push
lock
call
shll
scas
or
add
jmp
cmp
and
push
hlt
pop
hlt
inc
cmpsb
orb
aad
ror
sar
lds
fisttpl
jl
xchg
fs
repz
mov
and
cmc
mov
sub
insb
ds
sub
mov
push
dec
push
sbb
adc
decl
xor
inc
data16
andb
in
dec
loop
cltd
add
daa
call
sub
jne
or
ljmp
dec
ret
add
jg
lea
mov
ret
call
inc
adc
fldl
add
sbb
ret
push
clc
sub
pop
andb
es
inc
jmp
clc
lods
jnp
sub
xlat
test
mov
test
or
push
scas
push
mov
pop
xchg
das
adc
rcrb
mov
test
fistpll
xchg
pop
outsl
push
jmp
mov
mov
scas
add
out
jmp
mov
cli
sub
jmp
mov
sti
sbb
adcb
daa
mov
ljmp
pop
ja
out
and
jge
mov
cmp
ret
dec
decl
test
inc
popa
xchg
test
vpackssdw
mov
out
decl
pop
push
xor
inc
adc
int3
or
fmuls
mov
jg
inc
inc
or
ja
rorl
jl
jg
fs
xchg
pusha
push
adc
add
std
shlb
and
call
adc
lea
fsubs
mov
decl
pop
pushf
ja
mov
nop
and
iret
in
push
out
insb
insb
testl
fistl
enter
ds
pusha
call
lock
adc
jl
cmpb
adc
and
movsb
push
cmp
sti
jmp
movsb
lret
xchg
test
mov
pop
repnz
in
mov
nop
daa
lds
push
cmpsb
lcall
mov
ret
mov
pop
mov
shll
nop
xor
pop
test
sub
jl
inc
or
sar
and
mov
dec
jo
push
push
aas
mov
call
orb
cmpsl
push
ja
jne
imul
fldt
out
sbb
dec
inc
fisubrs
pop
ret
dec
or
or
pop
negl
or
or
pushl
in
jbe
sbb
push
push
roll
popa
mov
push
mov
sarl
and
dec
push
gs
imul
pop
push
lahf
je
pop
nop
cwtl
dec
cmpsl
cmpsl
and
ret
push
call
inc
mov
mov
mov
fldenv
jns
or
ljmp
andb
add
push
mov
mov
lret
push
pop
or
jl
stos
gs
cmp
lcall
pop
test
adc
xor
scas
mov
cli
cld
sub
das
mov
addb
add
inc
inc
call
jg
incl
jne
rclb
mov
es
mov
cmp
pushf
es
or
fcompl
call
fmuls
push
mov
sbb
fistps
xchg
mov
push
mov
fs
ljmp
subb
cli
cmp
mov
add
dec
inc
outsl
add
jb
inc
jge
mov
sbb
sub
imul
xor
add
or
sti
sub
clc
mov
out
xchg
push
sub
lock
in
in
add
push
jmp
pop
insb
dec
and
dec
adc
decl
adc
jbe
mov
loopne
jb
gs
in
cmp
fnstenv
dec
dec
jne
sub
movsl
add
out
mov
hlt
mov
cmp
adc
call
rolb
mov
orps
xorb
ja
cltd
mov
xor
bound
inc
xchg
mov
push
ret
test
mov
test
or
loope
jg
mov
ss
push
mov
dec
mov
add
xchg
je
fs
incl
push
loopne
test
fsubrl
add
sub
add
sarb
int3
sbb
test
aam
stos
lea
or
pushf
jecxz
pop
add
sub
sub
rolb
iret
ljmp
cwtl
jecxz
sub
fcoms
lret
push
popa
pop
mov
cwtl
xchg
mov
enter
add
into
pop
es
push
adc
incb
clc
ljmp
mov
mov
test
daa
mov
sbb
or
loop
ljmp
adc
arpl
cmpsb
lcall
setno
sub
fisttpll
push
sbb
out
mov
xchg
mulb
rolb
test
sbb
xchg
xchg
jmp
inc
lock
fisttpl
das
and
das
lahf
inc
shlb
and
mov
cmpsb
sub
dec
mov
xor
push
cltd
in
addb
dec
add
jg
pop
gs
pusha
jne
adc
cmp
ret
sarb
mov
ficoml
push
push
mov
add
xchg
add
or
decb
xor
mov
sub
pop
movsb
shrl
mov
jns
or
mov
xchg
dec
or
sub
stos
adc
lcall
xchg
loop
ret
mov
ficoms
adc
jmp
inc
ret
lret
xor
aad
in
rol
inc
cltd
enter
or
adc
mov
adc
lcall
insl
test
jb
dec
push
cmp
mov
loope
or
jbe
pop
inc
xor
xchg
out
add
and
fwait
insl
or
push
inc
adcb
ret
les
inc
pusha
mov
inc
cli
or
addr16
inc
call
ret
push
call
add
jae
daa
or
das
hlt
or
pop
adc
and
xor
mulb
xor
fwait
pop
jns
int3
push
inc
in
add
lods
mov
sti
xor
dec
pushl
push
cmp
mov
xor
popf
cmp
jle
pop
ds
mov
inc
add
lock
clc
adc
adc
fs
insb
stos
pushl
cmc
mov
mov
pop
cmp
mov
dec
aam
fidivrs
fnstenv
cmp
ds
inc
or
dec
pop
test
nop
movsl
pushl
pop
test
cmpb
mov
xchg
dec
xor
and
and
or
aaa
std
push
lcall
pop
ret
fmuls
data16
xor
and
add
xor
cmp
xor
adc
call
inc
cmpsl
ret
repz
adc
add
mov
mov
push
ret
adc
jbe
movsl
push
cs
lcall
faddl
or
jmp
ror
repnz
fcoms
add
mov
sub
push
iret
inc
add
xchg
lock
pusha
push
fcomip
decl
inc
inc
fidivs
aam
mov
movsb
add
aam
fisubrs
in
cmp
cli
in
push
cs
movsb
loope
add
int
xchg
insb
add
fwait
or
test
fwait
dec
std
lahf
imul
les
push
or
cmpsb
pushf
jg
mov
xchg
cmp
adc
rorb
mov
loope
js
jb
dec
or
inc
inc
add
push
mov
xchg
inc
cmp
dec
mov
add
push
nop
shr
test
push
or
call
xor
push
push
sub
push
xlat
int3
ret
enter
subl
add
lcall
xchg
movsb
or
push
flds
pop
xor
mov
jg
in
or
mov
fisubrl
and
outsb
enter
psraw
andl
mov
xor
sbb
int3
pop
scas
and
cld
pop
xchg
mov
jg
mov
ret
sub
in
fcoms
and
ljmp
call
mov
adc
or
mov
fs
jb
in
pop
push
pop
pop
out
add
mov
cld
aad
jg
xlat
xor
rolb
push
pushf
and
mov
mov
je
mov
push
cmp
ja
add
xor
pop
push
lcall
movsl
pusha
pop
adc
inc
mov
jp
xchg
bound
or
jl
dec
daa
xor
jecxz
add
test
pop
or
mov
test
jg
nop
push
pop
pop
xor
adcl
mov
test
call
pusha
inc
fld1
push
pop
push
clc
loopne
inc
push
xchg
fcomps
fdivr
addr16
lcall
xchg
or
ss
xor
sbb
fdivrs
imul
movsb
or
cmp
adc
pop
scas
sbb
or
enter
pushf
fs
xchg
call
sahf
push
std
ss
sbb
fcomip
jg
mov
adc
test
cli
mov
and
ja
mov
mov
sarl
add
push
sbb
xchg
pop
pop
lcall
cmp
adcb
faddl
sub
js
inc
jae
aaa
mov
dec
jmp
fdiv
and
pop
cmp
push
xchg
dec
add
mov
adc
cmp
pop
xor
pop
fdivr
call
fsubs
cmp
lods
dec
and
addr16
push
and
dec
inc
dec
ds
mov
decl
clc
push
sub
or
cmp
inc
ljmp
test
push
add
and
xor
call
or
adc
and
jmp
add
outsl
arpl
sub
xchg
inc
cmp
sub
cmp
adc
add
fadd
dec
sar
mov
jge
jmp
lock
frstor
loop
dec
xchg
inc
nop
jno
adc
xchg
or
jmp
dec
xchg
add
or
dec
ss
or
inc
outsl
test
leave
pop
test
loopne
and
jecxz
jo
push
clc
mov
ds
sbb
inc
bound
sub
xchg
cmp
jo
aaa
adc
sub
lcall
rclb
push
dec
fisubs
jle
fs
cmp
test
mov
ret
daa
movsb
adc
push
cmp
and
mov
push
jg
ja
addr16
sub
add
inc
loopne
test
scas
hlt
push
aaa
in
cld
jg
lcall
pop
pop
pusha
and
xchg
pushf
pop
jbe
fs
ljmp
arpl
adc
jecxz
loopne
ficomps
pop
int
and
pop
add
pushl
lahf
test
xor
jno
push
sarl
jge
cmp
pusha
mov
push
iret
or
mov
xchg
adc
clc
pusha
pushf
mov
incl
cmpl
and
nop
xor
cmp
enter
jmp
mov
mov
leave
sarb
jne
jecxz
dec
fldt
loop
push
jmp
push
icebp
inc
stos
test
jg
movsb
sarb
add
jg
aas
ds
cld
imul
lea
inc
cmp
mov
mov
cmp
jo
addb
les
sbb
rclb
test
jmp
sub
jno
sarl
or
repz
and
call
hlt
fidivs
ja
jle
and
inc
fnstenv
add
mov
dec
das
test
mov
es
cmp
outsl
int3
test
mov
aad
cmp
pop
mov
aaa
std
pushl
sbb
test
jmp
jbe
add
or
cmp
ds
psllq
aas
pop
inc
sub
add
lcall
xchg
dec
rclb
mov
jl
jmp
test
or
sub
cwtl
sub
leave
sbb
jecxz
outsl
aas
orb
data16
pop
pushf
pop
push
sbb
scas
es
and
iret
int
fs
decl
and
cwtl
xchg
cltd
inc
sbb
push
out
inc
inc
pushf
dec
add
or
imul
adc
test
outsl
and
pop
call
fcmovnb
add
mov
or
and
add
inc
adc
loope
and
in
cmp
jbe
cmp
inc
cwtl
leave
sbbb
decl
jmp
hlt
hlt
push
enter
inc
sbb
push
push
xor
add
incl
inc
rdpmc
and
inc
sbb
rolb
or
jl
ljmp
add
cmp
pop
cld
cmp
push
cld
jmp
push
call
cli
dec
mov
jp
mov
aas
outsb
pushl
dec
dec
cld
rclb
xchg
or
xchg
adcb
push
repz
push
mov
call
ljmp
dec
pop
call
cmp
call
sbb
in
or
pop
xor
incl
lahf
call
add
dec
rorb
jmp
cmc
ficompl
or
es
movsb
pushf
dec
inc
pop
inc
and
loopne
push
adc
incl
and
xchg
in
xchg
mov
shl
or
dec
mov
fwait
xchg
push
inc
jmp
ds
pop
mov
orl
mov
cmpb
insl
outsb
sbb
add
jmp
xchg
test
in
push
aam
push
loope
add
inc
push
call
inc
push
pop
adc
daa
pop
stc
pop
wrmsr
push
jb
mov
popa
mov
data16
mov
gs
scas
push
dec
pusha
jbe
shlb
test
pushl
xor
aas
jo
adc
push
and
push
lock
adc
insb
fiaddl
push
cld
ljmp
cli
lock
in
sub
and
mov
movsl
xlat
pop
mov
mov
lea
and
lea
cs
and
enter
cmpsl
paddw
jp
pop
sbb
ljmp
iret
js
mov
jg
cmp
inc
in
outsb
jg
dec
les
enter
ljmp
inc
sub
add
stos
fs
data16
mov
xlat
fcomip
inc
push
cmp
iret
cmp
mov
cmp
les
jmp
dec
inc
aam
ret
or
pusha
sbbl
inc
lret
call
dec
inc
mov
xor
ljmp
nop
mov
pushf
add
cmp
incl
rcl
pop
mov
or
inc
fcmove
mov
sbb
inc
in
sbb
int
cld
add
test
mov
adc
cmp
outsb
scas
adc
mov
push
add
add
add
lret
adc
call
in
push
pushl
mov
sub
pop
jmp
sbb
cmp
or
test
mov
push
mov
ljmp
push
hlt
dec
aam
data16
and
inc
mov
fs
xchg
mov
xor
lret
xor
pusha
das
mov
or
cs
fcomip
call
inc
mov
lods
inc
repnz
shlb
loopne
sbb
and
pusha
mov
cld
xchg
dec
pushf
lea
nop
sar
mov
pop
js
repnz
jbe
push
je
inc
pop
jo
adcb
nop
decl
and
lcall
repnz
and
adc
xchg
ljmp
jmp
xor
mov
aaa
cli
or
ja
insl
lods
hlt
pop
jno
mov
rorb
adc
cmp
fcomip
fistpll
addr16
inc
lods
pop
cmpsb
jle
inc
movsb
nop
adc
adc
mov
cmp
rol
daa
jg
ss
push
inc
cmpl
pop
jg
xorl
add
and
cmovp
inc
pop
les
inc
jmp
fwait
jo,pn
sbb
call
imul
xor
cmp
enter
and
and
and
orb
ret
je
popa
lea
cmp
outsl
es
nop
sub
push
add
adc
dec
dec
lret
cs
aam
enter
ljmp
call
je
xchg
dec
xor
rorb
xor
les
ljmp
test
mov
pop
mov
adc
adcb
push
inc
sbb
dec
pop
inc
inc
int
fildll
pop
mov
andb
loope
sub
clc
add
pusha
data16
inc
push
outsl
or
mov
notl
ret
adc
lea
out
mov
imul
cmpsb
repz
popa
mov
jmp
test
int
icebp
call
lret
add
cmpsl
mov
incl
add
add
cmp
xorb
mov
inc
sub
adc
push
inc
push
mov
push
mov
rorl
sub
inc
sub
jne
mov
in
lds
dec
into
mov
jg
incl
lock
push
sbb
pop
popa
sub
out
cli
fbstp
or
mov
shll
fnstcw
mov
sbb
or
incl
hlt
push
loope
js
inc
push
rcr
push
and
push
data16
adc
incl
mov
mov
mov
mov
or
fwait
and
dec
cwtl
outsb
stos
jg
add
stos
push
adc
incl
std
in
lea
inc
movsb
push
mov
daa
xchg
movsb
dec
mov
and
add
js
jb
sbb
call
adc
xor
inc
js
mov
pop
sbb
push
inc
lods
jno
push
add
mov
adc
pushl
addr16
into
ret
add
push
out
xchg
out
fistps
decb
add
cwtl
mov
mov
adc
pop
rorb
or
add
mov
add
push
in
adc
adc
push
sti
or
push
cmc
ljmp
push
ret
adc
decl
cmp
lods
xchg
xor
mov
inc
cmpsl
sbbb
lret
incl
lock
inc
mov
loope
adc
mov
adc
shlb
add
cmc
fisttps
lahf
out
xchg
push
add
cmc
adc
jmp
roll
push
or
insb
jle
ror
pop
sbbb
push
push
or
aad
mov
mov
je
into
pusha
hlt
mov
cmp
jbe
ret
ret
jns
in
push
test
push
mov
push
or
sub
xor
shl
inc
repnz
fwait
or
rcr
int
jl
pushf
call
std
out
push
movb
or
add
push
inc
nop
in
pop
mov
push
lods
or
and
push
push
decl
rcrl
adc
push
and
and
cmpsl
out
rolb
cli
ljmp
xor
outsb
jae
add
mull
notb
adc
aam
or
sub
daa
mov
in
out
jl
sub
push
pushf
cmpsl
idivb
cld
cmpsb
or
push
push
pop
lods
cmpb
mull
push
adc
pop
dec
and
mov
mov
jg
loopne
lret
dec
lock
dec
xchg
adc
or
xchg
inc
adc
loopne
pushl
movsb
inc
inc
pop
or
adc
cmp
stos
mov
xor
pop
lahf
mov
iret
jg
mov
add
add
adc
jb
sub
sbb
bound
call
inc
sbb
inc
popf
adc
fsubrp
mov
add
rorb
scas
or
mov
add
lret
cld
and
test
loope
or
dec
es
out
cli
call
adc
and
xlat
jl
or
or
cmp
xchg
pushl
push
inc
sbb
xchg
sbb
add
jle
mov
sub
hlt
mov
and
hlt
je
jno
mov
and
mov
call
lret
in
adc
add
dec
or
jg
mov
ja
jmp
xor
pop
test
dec
jge
daa
sbb
mov
mov
test
andb
cmpsl
sub
outsl
clc
inc
inc
clc
dec
lcall
xchg
aaa
inc
pop
stos
mov
or
pop
or
fildll
adc
lods
not
mov
rol
jp
movsl
xorps
jg
ljmp
sub
sbb
cmc
scas
dec
jg
insl
cmp
mov
add
fisubrs
xor
cmp
ss
fsubs
sbb
add
pop
jg
imul
or
js
repz
push
dec
jmp
clc
xchg
test
aas
divb
and
pop
xor
jo
ss
push
mov
sbb
push
scas
xor
imul
pop
push
mov
lcall
int3
dec
fsubs
aad
jns
out
shlb
cmp
pop
ret
rcrl
inc
cld
andl
das
or
sub
decl
sbb
outsl
enter
das
inc
pop
or
xchg
xchg
add
add
jecxz
push
pop
mov
push
test
pop
xor
in
sbb
push
ret
sub
inc
mov
cmpsl
aas
lea
jne
loope
dec
ja
push
xor
es
test
test
sub
pop
clc
xchg
cmp
xor
std
push
mov
loop
dec
pusha
adc
or
cmpsl
dec
mov
xor
fisttpl
ljmp
pop
leave
pop
cltd
ss
out
cmp
xchg
dec
mov
loopne
icebp
add
icebp
gs
push
ljmp
leave
inc
fiadds
inc
push
enter
or
add
jb
dec
add
or
fcoml
dec
in
sbb
add
fcomp
divb
mov
push
pop
out
dec
pop
jnp
movsb
or
push
sbb
fcmovnb
push
inc
sub
cmp
cmpsl
lods
mov
pop
pop
pop
outsb
jg
nop
mov
mov
add
mov
iret
cmp
insl
jle
cmp
mov
rcr
push
fdivp
in
cli
fdivrp
filds
push
cmp
jns
xchg
dec
push
mov
pop
enter
push
and
xchg
das
add
call
repnz
insb
pop
cwtl
xchg
lret
inc
jb
inc
mov
jg
decl
push
push
push
les
push
rclb
or
pop
sbb
pop
gs
ljmp
repz
sbb
nop
test
push
push
push
mov
nop
loopne
and
faddl
pop
mov
mov
outsb
enter
pop
sub
xchg
inc
push
push
xchg
xchg
add
mov
jg
notl
ss
add
sub
lods
sbb
rclb
vpunpcklbw
fcomip
decl
ret
and
sbb
or
pop
fldt
pop
les
and
mov
popa
stos
inc
mov
lods
insl
sahf
push
rcrb
ljmp
movsb
subl
pop
mov
adc
ja
mov
pop
leave
xchg
or
xchg
bound
push
decl
and
sbb
xchg
clc
enter
push
mov
ret
jmp
push
or
mov
jp
adc
arpl
and
adc
adc
jg
icebp
xacquire
dec
insl
push
add
sub
ret
ljmp
sub
enter
add
push
cmp
xchg
mov
dec
cld
ret
or
pop
ds
insl
out
add
mov
fiaddl
push
ret
out
xchg
call
cmp
and
fisubs
call
mov
xchg
cmp
mov
sub
jge
leave
add
mov
add
or
js
outsl
push
mov
inc
enter
cmpsl
xchg
xor
sbbb
into
adc
fwait
call
in
adcl
inc
mov
xchg
sub
ds
add
ljmp
sbb
or
pop
icebp
pop
sub
and
mov
push
sub
sbbb
mov
test
lret
test
inc
mov
dec
aas
cld
insb
fdiv
jmp
jmp
je
cmp
aaa
dec
push
sub
or
es
hlt
jmp
inc
mov
mov
dec
push
cmp
sub
adc
fs
mov
add
xor
or
icebp
aam
add
sub
jg
call
push
mov
mov
pop
loopne
mov
inc
imulb
or
mov
jl
and
lds
pop
and
out
stos
lock
call
adc
add
push
pop
data16
daa
mov
sbb
je
sbb
popa
test
cld
outsb
nop
or
dec
adcb
cwtl
roll
add
daa
cs
or
mov
push
lahf
mov
pushl
jbe
or
pop
repnz
nopl
gs
fsubl
push
cwtl
dec
pop
cmp
xchg
xchg
aaa
sub
jo
push
aam
mov
notl
lcall
loope
shrb
scas
xor
push
lods
sbb
out
inc
cmpsl
mov
and
adc
movsb
cmp
call
lods
adc
nop
mov
outsb
leave
fwait
pusha
push
lock
inc
push
imul
push
ja
xor
or
call
xchg
sub
or
inc
pusha
insl
push
sub
and
sar
and
fiadds
or
or
cld
fisubrl
ljmp
mov
and
or
inc
sahf
mov
xchg
xchg
or
call
inc
fisubl
enter
xchg
mov
mov
ljmp
push
sub
nop
or
push
inc
call
mov
fs
jg
mov
push
sub
mov
or
in
sub
pop
and
mov
inc
pop
insl
dec
test
imul
stc
xchg
mov
leave
push
sub
arpl
pop
dec
inc
insl
fsts
and
dec
inc
adc
gs
pushl
or
call
js
adc
inc
xor
push
xor
push
sub
or
or
mov
lock
gs
mov
dec
xchg
mov
js
enter
cli
cmp
lret
mov
inc
enter
jl
aaa
leave
ds
das
mov
hlt
lcall
or
movl
push
lock
inc
call
ret
adc
iret
loopne
sub
aas
pop
pushf
daa
mov
call
roll
jge
ret
loopne
inc
loopne
add
xor
inc
push
sub
aaa
add
add
adc
lret
incl
je
push
push
inc
rorl
inc
cmp
iret
ss
xchg
jbe
call
mov
mov
pop
cmpsb
adc
cmp
rcrl
dec
into
subl
lcall
nop
rolb
jo
pop
jo
insb
sub
repnz
pop
mov
inc
fdivrs
jg
insl
sbbl
cs
clc
hlt
enter
pop
jb
and
or
pop
mov
clc
ljmp
fs
mov
pop
dec
fcoms
mov
insl
scas
insl
fldt
or
out
push
inc
cmp
rclb
outsl
mov
push
or
fbld
or
jb
inc
dec
inc
outsl
outsb
test
push
cmpsl
cs
pop
fdivrp
decl
push
add
xchg
pop
inc
rcrl
sub
push
mov
push
inc
inc
jno
fbld
jo
outsl
lods
cld
outsb
sbb
sub
popa
arpl
je
cmp
sbb
cmp
xor
jns
repnz
add
dec
push
push
pusha
andl
xchg
add
lock
dec
push
mov
jne
or
movsb
add
lcall
adc
pop
cmp
je
add
add
adc
mov
adc
dec
sbb
fstpt
pop
sarl
mov
push
stc
jne
sarl
out
cmpb
inc
add
movsl
incl
adc
sub
or
xor
sbb
call
ljmp
push
jmp
test
push
in
mov
into
and
into
adc
mov
callw
dec
sbb
bound
or
push
ret
jmp
in
sub
or
js
lcall
mov
mov
jg
inc
sub
push
and
sbb
xchg
xchg
sbb
dec
subl
ljmp
jg
mov
adc
iret
inc
jo
and
inc
pop
hlt
xlat
dec
lcall
cwtl
jmp
pop
in
mov
fiadds
test
jmp
and
bound
sub
mull
lahf
xchg
data16
cmp
jbe
adc
rolb
lret
inc
push
push
repnz
pop
push
or
adc
pop
cmp
jmp
jno
mov
std
daa
xchg
mov
jl
mov
call
nop
sub
aam
xor
imul
push
pop
in
and
jno
pop
movsl
add
xchg
fldl
hlt
add
ret
add
pushl
xchg
push
fisttpll
test
mov
and
scas
add
jo
clc
inc
lret
jg
inc
pop
aam
jne
xchg
and
icebp
sarb
or
incl
aaa
cld
cmp
xchg
mov
sub
add
orb
push
push
lcall
pop
pop
or
add
jb
pop
pop
and
inc
adc
xchg
jno
sub
inc
and
fcomip
inc
pushf
mov
or
loope
or
inc
sub
inc
xchg
sbb
dec
and
call
pop
jae
push
dec
or
repnz
and
and
adc
clc
call
ret
xor
adc
cmp
xchg
addl
or
lcall
pushf
sbb
call
cs
jne
push
xor
js
and
in
subl
jg
sub
sub
mov
sub
pop
jns
test
idivl
dec
call
push
lock
aam
xor
ds
push
sbb
jo
inc
and
nop
adc
jmp
push
inc
inc
add
sub
hlt
mov
ljmp
dec
adc
lods
inc
xchg
mov
and
and
cmp
mov
outsb
sbb
ficoms
sub
add
inc
inc
dec
xor
pushl
enter
negl
jne
inc
test
xchg
push
dec
mov
xor
jg
or
xchg
or
and
flds
decl
es
jge
lcall
divl
dec
mov
adc
inc
mov
add
mov
xchg
popa
jb
mov
cmp
icebp
lea
jle
incl
adc
mov
mov
push
adc
cmp
dec
push
fdivrs
or
adc
ljmp
jmp
mov
sub
and
xchg
dec
gs
std
fstpt
stc
cmp
cmp
in
push
add
mov
jns
fstpl
movsb
shld
stos
lods
in
push
pop
lods
scas
scas
nop
xchg
xchg
xchg
xchg
xchg
xchg
xchg
cwtl
cmpsl
or
lcall
cs
clc
jg
jecxz
push
ja
ja
add
js
loop
call
or
jns
outsb
icebp
adc
pop
decl
jp
iret
mov
mov
lcall
inc
insb
jl
jl
xchg
neg
pop
xchg
and
cmp
orb
cli
dec
jp
jnp
pusha
mov
or
insb
jns
xor
sbb
sbb
mov
int3
cwtl
stc
test
adc
mov
pop
outsl
pop
dec
ss
dec
push
sbb
inc
adc
mov
stos
or
add
push
adc
ja
add
mov
and
dec
jo
inc
sbb
lods
ret
insb
sub
dec
push
jb
jg
or
pop
fdivs
xchg
and
adc
out
pop
mov
mov
or
cld
jmp
mov
and
adc
les
xchg
mov
daa
sahf
and
sbb
addb
aas
es
call
pop
int3
xor
mov
or
or
loop
sub
jg
ss
ret
andb
or
popa
sbb
push
xor
daa
rep
cmpsb
and
shrb
lcall
sbb
xorb
aad
sbbb
nop
add
xlat
add
mov
jg
or
pop
clc
ss
or
push
push
mov
pop
aas
inc
sbb
xchg
jl
or
push
pop
adc
jmp
inc
jns
bound
push
jge
repnz
decl
push
int3
dec
pusha
les
outsb
mov
add
cmp
and
mov
cld
sbb
push
dec
jne
jg
add
xchg
or
or
jo
jmp
xlat
sub
sub
fldl
lcall
out
repnz
iret
adc
ljmp
scas
xchg
dec
jbe
nop
ljmp
add
or
pushf
jge
decl
test
add
jg
inc
outsb
outsl
jne
push
loop
movsb
jecxz
incb
call
push
add
arpl
adc
sub
es
jle
test
addb
pop
cld
incl
jge
push
ss
pop
jle
or
in
sbb
fcomps
fldl
incl
lock
lods
inc
xchg
pushf
sbb
aam
jb
jge
xchg
mov
or
xor
bound
push
sub
xchg
ds
push
leave
decl
push
ljmp
fs
add
push
pop
jg
sub
and
jg
xchg
jl
add
and
lods
sbb
jge
jl
lods
cmp
jg
pop
push
adc
insl
out
sub
dec
incl
sub
pop
push
dec
addl
add
mov
pop
hlt
sub
loop
test
or
out
sar
decl
mov
ja
cmp
or
xchg
rclb
add
jb
jle
push
or
sub
push
inc
dec
cmp
mov
movsb
dec
pop
xchg
call
cld
cltd
scas
ljmp
push
xor
or
mov
nop
push
sub
dec
jno
xchg
jle
jmp
add
nop
imul
or
cmpsb
inc
add
mov
mov
inc
pop
pushl
pop
push
xor
pusha
fdivs
sub
mov
clc
movsb
and
jg
fcmove
clc
add
cmp
cmp
cmp
cmp
ret
jl
and
mov
jmp
movl
jmp
pop
out
leave
es
pushf
nop
push
push
in
xchg
inc
sbb
js
push
xchg
add
ja
sbb
pop
call
cld
pushl
and
imul
and
lds
sub
dec
ljmp
adc
clc
and
sbb
ffreep
cmp
mov
into
mov
inc
add
rol
mov
ljmp
push
sbb
and
test
dec
arpl
pushl
mov
jmp
adc
in
test
aaa
adc
subl
add
loop
aad
lock
push
mov
push
sbb
mov
jmp
adc
dec
push
in
dec
shl
mov
icebp
cmpl
or
mov
adc
scas
dec
repz
aam
mov
cltd
jnp
ljmp
test
fsub
xor
mov
ljmp
aas
dec
mov
js
add
sub
fbld
cmp
popa
pop
push
sub
add
jg
push
jb
push
or
ret
and
xchg
in
push
loopne
add
pop
orb
insb
inc
add
scas
mov
push
rcll
dec
stos
fldl
adcb
push
in
addr16
jg
lods
incl
fldenv
imul
and
cmpsb
jbe
xor
pop
std
call
push
cs
movsl
testl
je
rolb
and
jg
jno
xchg
ljmp
add
pop
shrl
push
adc
push
mov
decl
inc
push
iret
xor
test
sbb
out
hlt
pop
enter
inc
mov
andl
mov
add
mov
cmp
mov
imul
in
xchg
dec
or
movsb
jle
mov
mov
push
std
call
repnz
or
das
cmp
jmp
mov
into
mov
dec
mov
fstl
popa
sti
fnstcw
mov
incl
push
mov
sbb
jmp
lods
cmp
lock
fsubs
fstpt
into
xchg
push
sti
cmpsl
mov
sti
nop
mov
sub
stos
and
in
lock
jnp
inc
rolb
pop
nop
inc
testl
jge
and
push
adc
movsl
and
rorb
and
jnp
inc
xchg
mov
call
and
test
std
xchg
mov
inc
movsl
mov
or
add
inc
adc
aaa
sbb
aam
pop
push
inc
jmp
jg
testl
mov
nop
test
add
out
sbb
bound
ret
mov
mov
cmp
cmp
pop
inc
movl
mov
in
stos
and
push
mov
nop
xor
jg
xchg
nop
inc
pop
push
ret
cmp
sbb
sub
repnz
or
ljmp
inc
jb
ficoml
xlat
inc
or
outsb
lret
gs
mov
jo
adc
ljmp
or
sbb
outsl
xchg
xchg
rorl
pop
push
pushl
push
fwait
pop
push
cs
xor
cmp
imul
xor
pop
xchg
incl
inc
test
mov
push
xor
dec
adc
push
jo
push
loopne
pusha
cld
decl
sbb
pop
jno
dec
sbb
ljmp
mov
push
inc
roll
clc
xor
inc
cmp
sbb
dec
pusha
mov
cld
push
mov
mov
xchg
pop
push
mov
mov
repz
dec
xchg
push
rclb
mov
in
pop
lods
xchg
int3
xor
pop
popw
loop
jns
and
and
stos
mov
sub
inc
fcompl
jecxz
jmp
insb
jb
pop
push
aad
dec
cmp
xchg
dec
js
insl
std
jg
addr16
or
lea
stos
push
loopne
xchg
outsl
jne
jg
lcall
out
mov
mov
outsb
cmp
js
add
push
mov
mov
mov
cld
mov
jbe
push
popa
imul
loop
jg
out
jae
mov
mov
das
and
enter
leave
fldt
fucom
cld
mov
or
jae
pop
and
jo
xlat
jecxz
out
call
shlb
imul
pushf
and
in
clc
sbb
sbb
sbb
adc
inc
cmc
dec
mov
pusha
or
push
lret
call
nop
js
pop
push
mov
pushf
add
or
pop
mov
mov
div
sub
or
sub
cli
mov
ljmp
ficoms
fsubp
mov
and
add
clc
pop
xor
rcr
cmpsl
pushf
pop
fcomip
ficomps
inc
mov
xchg
push
push
push
dec
xor
je
outsl
insb
add
jmp
jbe
shrb
mov
or
loope
and
xchg
cmp
xchg
dec
xor
xor
or
mov
inc
mov
inc
sbb
rorb
jg
out
js
inc
sbb
mov
xchg
xor
and
add
xchg
inc
aaa
dec
cmp
enter
fildll
or
mov
cli
test
xchg
and
ss
xchg
xor
and
jmp
movsb
sub
mov
sbb
mov
or
lcall
lock
and
mulb
or
jmp
push
jnp
aam
outsb
fs
xchg
and
fs
xchg
sub
pop
out
sbb
push
mov
pushf
sbb
mov
js
add
cwtl
adc
cld
pop
sbbl
popa
insb
jo
fwait
mov
icebp
ss
sbb
jae
cmp
sbb
sbb
cltd
and
jle
ljmp
and
imul
clc
adc
and
inc
xor
enter
sti
sbb
push
lcall
imul
je
scas
and
decl
mov
jmp
dec
lcall
mov
addb
pushl
cld
pop
lods
fwait
cmp
pop
mov
mov
push
leave
std
mov
sbb
cmp
pushf
inc
add
pop
sar
mov
jne
js
movsb
sbb
jg
mov
xchg
les
mov
aas
out
popf
sub
cmp
pusha
push
inc
xchg
incl
dec
add
pusha
dec
push
cmpsl
mov
fistps
jp
add
jns
pop
sahf
xchg
aam
mov
dec
ljmp
hlt
int
in
rolb
mov
pop
movsb
push
mov
xchg
mov
hlt
mov
mov
scas
ds
clc
mov
outsl
repz
dec
cld
incl
mov
addr16
call
call
mov
mov
test
stos
mov
imul
pop
enter
insb
adc
sarb
adc
sbb
push
jmp
or
and
aam
pop
mov
inc
inc
repz
or
cli
pop
std
push
test
dec
dec
lods
xor
pusha
dec
dec
xor
incl
out
add
cmpsb
adc
cmp
inc
xchg
mov
nop
je
adc
cmc
stos
dec
or
jg
add
movsb
xchg
dec
mov
out
clc
push
mov
sbb
jb
or
cmp
add
add
movsl
pop
jbe
cmp
jnp
js
les
push
cmpb
adc
push
outsl
add
repnz
inc
js
adcb
inc
cli
sub
in
inc
push
in
dec
xchg
jbe
xor
mov
mul
dec
and
je
cmc
push
adc
inc
dec
push
xor
outsb
in
imul
aaa
mov
mov
ret
fcmovne
mov
mov
xor
pop
dec
outsl
leave
inc
add
cmpsb
pushf
add
sarb
adc
decl
scas
sub
adc
pop
xchg
nop
lcall
pop
clc
imul
inc
mov
arpl
ljmp
mov
jecxz
sbb
rcrb
and
add
jg
lods
sarl
or
cmp
pop
or
push
adc
cmp
call
pop
aaa
ja
pop
rcrb
das
pop
shl
cwtl
bound
pop
xchg
dec
mov
lea
lock
lock
call
push
fcomps
test
mov
mov
inc
xchg
pop
out
in
cmp
test
incl
mov
mov
add
mov
mov
jle
mov
ljmp
dec
pusha
enter
inc
pop
rol
and
scas
std
mov
xlat
out
stos
pop
mov
pop
dec
adc
or
push
sub
mov
test
loop
xchg
icebp
pushl
addl
fldl
sub
sub
insl
jl
xchg
ljmp
cli
inc
nop
mov
add
pusha
sar
stc
lds
les
mov
mov
push
dec
clc
cltd
cmp
jl
push
aas
iret
rcrl
in
jns
cli
movsb
es
mov
cmpsb
and
loopne
decl
movsb
aaa
addl
cmp
inc
xor
and
shll
fildl
fists
sub
inc
in
mov
jb
pop
pop
xor
incl
mov
push
push
test
xchg
movsl
mov
std
sub
cld
stos
pop
in
sub
cmp
pop
xorl
jg
ds
jle
mov
dec
mov
adc
add
mov
jg
xor
lock
js
xor
inc
mov
inc
data16
movsl
mov
pushl
aaa
cmp
ss
pandn
push
jecxz
fsubrs
cmp
sub
ret
jl
cmp
jg
orb
add
or
in
mov
cltd
and
jl
add
jg
pop
sbbb
add
insb
or
ljmp
cli
jg
push
adc
inc
adc
mov
adc
sbb
xchg
sbb
pushl
xor
or
xchg
sub
jg
or
cmp
pop
inc
pop
rcll
pop
mov
cmp
nop
cmpsl
or
in
fwait
add
repz
out
xchg
sbbb
mov
lock
add
push
and
enter
inc
movsb
adc
xchg
push
call
cld
sarl
cld
daa
lods
xor
or
dec
ret
lcall
aad
adc
add
stc
inc
inc
xor
push
out
sbb
test
jge
ret
mov
jmp
adc
xlat
mov
and
aad
lock
ret
pop
into
into
xchg
lcall
or
adc
jle
cmp
pop
dec
jmp
hlt
jle
cld
push
push
pop
jns
insl
sub
outsb
popa
int3
push
and
pop
or
or
inc
sbb
test
mov
jne
jle
imul
mov
pop
add
fcomip
lea
shrl
lods
add
cli
je
adc
pop
es
xor
mov
sub
mov
and
mov
les
sarl
in
stos
enter
cmp
ljmp
and
jl
cmp
or
ret
inc
cltd
jb,pt
ret
add
mov
jmp
je
lock
add
mov
push
add
dec
inc
inc
or
out
mov
xor
pop
lcall
inc
pop
mov
sbb
rcll
cmp
daa
decl
inc
aaa
test
orl
out
outsl
dec
mov
stos
xchg
nop
int
ret
clc
jmp
rcll
xchg
or
adc
nop
inc
loop
out
mov
std
push
lcall
adc
rorl
sub
sti
fbld
pop
dec
hlt
test
test
jg
mov
cmpsb
add
pop
adcb
mov
ret
test
dec
sbb
test
adc
mov
imul
fiadds
imul
scas
pop
jmp
push
ljmp
sub
add
add
xchg
mov
cmp
sub
xchg
push
add
je
std
out
cli
add
pop
ss
add
pop
inc
or
ret
push
dec
xchg
fnstsw
pushl
xor
and
mov
divl
loopne
into
jnp
lock
nop
and
jmp
gs
adcl
sti
je
leave
in
ja
and
adc
mov
cwtl
decl
jp
add
inc
into
xor
ljmp
mov
and
pop
cmp
push
fstl
xchg
js
pop
imul
add
dec
ljmp
inc
ret
lods
inc
fadd
push
sub
sbb
std
sub
cli
out
inc
scas
mov
imul
icebp
push
ss
pop
xor
div
mov
insl
imul
call
and
inc
outsl
fadds
aas
aaa
lret
loopne
pushl
jp
mov
push
test
adc
daa
repnz
or
call
and
nop
add
cmp
mov
mov
insl
mov
or
pusha
sub
jbe
add
push
sbb
ss
ja
mov
mov
call
mov
xor
sub
cmp
xchg
sbb
sub
sbb
pusha
cwtl
cmp
call
jle
lods
push
xor
addr16
inc
add
add
sub
push
mov
or
icebp
push
mov
pop
dec
xor
pushf
aam
pop
clc
outsl
loop
sub
push
js
ljmp
xchg
inc
jmp
pop
push
in
inc
imul
mov
jg
pop
or
scas
rolb
call
sbb
xchg
movsb
sub
inc
xchg
push
and
in
nop
ss
mov
std
xlat
push
xor
xor
hlt
rolb
push
or
xor
sar
incl
jae
cmp
cmp
loopne
adc
or
repz
add
or
mov
or
add
mov
scas
lret
mov
neg
jmp
jb
incl
ret
jle
adc
into
jle
inc
pop
sbb
int
push
lcall
movl
add
outsb
mov
movsl
xchg
out
or
or
ljmp
rclb
inc
fiadds
fbld
push
push
add
jb
lods
test
lahf
inc
dec
pushf
loopne
mov
jmp
les
cld
ret
sbb
lret
jp
ss
pusha
call
xchg
push
mov
jge
lret
pop
pop
addb
out
pop
incl
mov
and
js
dec
fwait
and
sub
lock
xchg
push
int
add
lcall
aam
insl
ja
xchg
sbb
pop
sub
jae
cltd
icebp
or
push
fcoms
push
or
pushl
and
movsl
cmp
pushl
fnsave
std
and
aaa
sbb
pop
mov
inc
clc
sub
mov
aas
pop
loopne
cmp
icebp
hlt
xchg
repnz
arpl
mov
jbe
in
fptan
cmp
and
pushl
loopne
or
mov
sub
out
adc
xlat
cmpsl
pop
mov
jmp
fwait
jmp
and
cmp
push
jbe
movsb
mov
dec
jnp
stos
adc
pop
lds
mov
push
popa
in
incl
push
outsl
rolb
adc
sbb
dec
dec
or
loopne
jne
inc
in
mov
scas
lcall
outsb
add
jle
and
push
jne
pushf
sub
outsb
insl
jg
xorb
call
wrmsr
adcl
clc
incl
nop
mov
push
jo
sbb
mov
adc
push
fld1
hlt
es
cwtl
ret
incl
mov
icebp
out
adc
adc
push
adc
outsb
or
in
sub
fcompl
lods
mov
es
cmc
or
jmp
sub
jge
inc
repz
arpl
aaa
add
jbe
pop
push
xchg
test
call
andl
jbe
sbb
rcrb
mov
and
mov
ljmp
lods
mov
adc
mov
aaa
jmp
mov
xchg
push
dec
aaa
std
decl
jae
jmp
or
xor
dec
sbb
add
stos
stos
mov
rorb
add
xorb
mov
les
mov
in
out
xchg
decl
push
stc
sahf
aas
sahf
dec
enter
inc
js
andb
gs
xchg
mov
dec
lret
xchg
pop
xchg
adcl
or
inc
mov
jne
daa
sbb
ret
incl
push
mov
cmp
pop
push
mov
loopne
jnp
mov
and
mov
xchg
shl
or
xchg
cmp
cmp
add
push
adc
pop
scas
sbb
outsl
mov
jecxz
dec
call
fadds
push
mov
pushf
std
add
decl
cwtl
add
rcrb
or
add
fwait
or
in
xchg
roll
pop
scas
cli
fcomip
and
xchg
outsb
or
pop
imul
cli
call
lock
inc
sbb
push
and
out
cwtl
jmp
inc
call
sbbl
das
push
test
push
movb
sbb
or
insl
jge
mov
jmp
femms
sbb
push
jmp
and
faddp
rclb
rorb
gs
cmp
push
push
mov
xchg
inc
mov
hlt
xor
pop
sbb
clc
mov
int3
add
adc
call
add
call
pop
add
jns
jmp
out
cmp
jnp
mov
ss
adcb
scas
xchg
hlt
movsl
mov
fcomip
or
dec
jecxz
mov
loope
adc
imul
jmp
lock
cmp
pusha
xchg
jbe
das
adc
mov
outsb
and
adc
add
mov
adc
xchg
push
out
pushf
jno
sbb
push
movsb
jle
sarl
pop
icebp
mov
enter
cltd
neg
and
mov
push
mov
incl
pop
xchg
xchg
into
je
or
scas
add
in
xchg
mov
mov
es
mov
fisubrl
add
arpl
or
test
daa
mov
jmp
push
call
call
bound
adc
cmc
cld
fidivl
ljmp
lods
decl
mov
adc
add
jae
loopne
mov
adc
lds
sub
jmp
sub
mov
fisubrl
mov
clc
loope
scas
sub
scas
sbb
push
cmp
and
fists
shlb
inc
mov
push
addr16
ret
sbb
xchg
sbb
cmp
cli
stos
jne
mov
adc
pop
rol
dec
leave
cmp
ret
push
mov
or
call
sub
adc
sbb
repnz
inc
orl
cmp
xchg
inc
lcall
dec
mov
add
lahf
mov
jl
andb
mov
and
jmp
sub
dec
cmp
cmpsl
push
mov
decl
push
or
test
pop
ja
sub
sarl
push
and
incl
nop
mov
call
insl
mov
xchg
xchg
mov
lods
leave
mov
sub
jmp
xor
jmp
add
and
mov
add
movsl
in
subl
test
pop
or
movl
inc
test
repz
mov
xchg
lock
cmp
mov
dec
loopne
test
jg
ljmp
dec
outsb
sbb
and
mov
mov
pop
enter
add
add
push
pop
pusha
lcall
popf
pop
xchg
icebp
in
addr16
xchg
mov
cmp
cmp
nop
inc
mov
hlt
xchg
incl
sti
es
mov
testl
mov
mov
clc
mov
add
mov
push
roll
sub
sbb
or
pop
mov
pop
push
xchg
ljmp
repnz
adc
pop
dec
or
add
pop
xor
sbb
cmc
pop
das
dec
js
ret
or
pop
cmp
cwtl
in
inc
insb
test
nop
and
ret
inc
inc
sbb
movsb
ffreep
mov
mov
mov
xchg
sub
xor
sbb
xor
fdivl
mov
into
add
push
inc
inc
adc
inc
mov
aaa
cmp
movsb
aaa
push
and
sbb
or
inc
repz
mov
xsavec
imul
mov
enter
nop
push
adc
orl
aas
mov
lcall
outsb
mov
sbbl
inc
or
pop
cmp
inc
std
filds
inc
jl
leave
mov
sbb
test
scas
decb
adc
mov
sarl
mov
cmpsl
nop
enter
jg
cmp
sub
movsl
mov
xchg
movsl
adc
mov
jg
pop
add
add
cld
pusha
sub
pop
adc
push
push
add
in
xchg
and
mov
call
or
xchg
lock
cld
popa
loopne
icebp
vxorps
xchg
pop
das
add
push
loop
iret
scas
ljmp
call
pop
adc
xorb
fcoms
adc
fistps
pop
adc
add
add
incl
add
nop
imul
or
enter
movsl
add
fdivl
sub
lcall
pop
adc
mov
ljmp
mov
dec
scas
fs
pop
sbb
push
dec
ret
or
pushl
mov
sbb
push
enter
or
mov
rolb
and
mov
pop
push
ljmp
sub
push
pop
cwtl
xor
push
leave
sub
decl
ja
leave
enter
sbb
int3
call
cmp
push
les
or
sar
push
inc
inc
aas
pop
and
es
adc
incl
or
adc
aas
leave
mulb
xchg
xchg
mov
je
loopne
inc
jmp
imul
popf
mov
enter
cmp
pop
cmpsb
mov
jp
out
adcb
loop
jno
lret
incl
imul
fs
sti
fisubs
sbb
test
push
imul
mov
call
jg
xor
lret
add
incb
daa
pop
or
test
adc
stc
hlt
add
stos
pusha
push
sub
cs
pop
jno
incl
adc
icebp
jbe
ret
je
sbb
mov
mov
pop
or
into
xor
mov
push
push
mov
mov
rolb
call
cli
sub
lcall
jmp
imul
dec
lret
mov
add
xor
or
outsl
and
mov
push
fs
cmp
js
push
sub
add
and
or
push
mov
int3
pop
in
pop
cmp
mov
mov
jns
inc
jno
iret
dec
mov
fadd
dec
push
pop
mov
ret
jp
adc
jg
popa
sub
decl
dec
into
in
rol
test
clc
enter
lea
xor
cmc
xor
xchg
ret
out
mov
add
pop
ss
push
xlat
das
cmp
add
scas
in
bound
aas
push
inc
inc
add
mov
ljmp
jne
cmp
fcoms
push
add
subb
out
loopne
cmp
xor
inc
push
jo
push
add
add
jmp
mov
and
pusha
lds
or
sti
out
xchg
nop
xchg
push
and
call
fldt
mov
pop
daa
inc
mov
push
std
fdivp
and
push
and
insb
jns
or
mov
aad
fdivr
mov
movsb
shl
les
xchg
pushf
faddl
pop
add
dec
cli
pushf
pushf
fsub
adc
jmp
sub
mov
int
aad
push
xchg
xor
hlt
or
shrb
daa
or
pusha
xchg
pop
incl
or
test
sbb
pop
dec
or
aam
aaa
or
pusha
sbb
xchg
lcall
cld
sub
pop
sub
pusha
fdiv
cmp
insb
adc
lds
adc
xchg
xchg
push
pop
inc
inc
dec
call
mov
xchg
cwtl
and
add
fisubrs
lea
inc
adc
push
or
call
jmp
out
pop
shlb
enter
push
cli
push
xlat
cltd
nop
dec
arpl
dec
mov
or
enter
sbb
into
dec
sahf
not
in
loopne
pop
lock
incl
adc
xchg
add
orl
jns
rorb
sub
clc
jmp
adc
test
jg
xchg
xor
adcb
push
pusha
aam
scas
popa
lcall
movl
and
mov
mov
pop
mov
mov
call
and
xchg
and
cmp
mov
outsl
push
les
arpl
cmp
and
sub
in
pusha
xchg
jl
call
cltd
lods
sbb
dec
sub
lea
rclb
xchg
inc
add
aad
cmp
pop
cmp
mov
das
push
pop
les
orl
xchg
mov
sub
mov
cmp
pop
scas
rcll
mov
insb
mov
pop
sbb
xchg
mov
ja
les
data16
xor
enter
pushl
in
xlat
pop
mov
pop
pop
ficompl
mov
mov
push
hlt
in
lcall
or
xchg
loopne
push
push
in
pop
subb
pop
hlt
insl
xchg
lock
mov
rolb
call
mov
xchg
cmp
sub
mov
adc
incl
imul
fwait
sbb
lret
rcl
sub
mov
add
pushl
mov
cmc
pushf
pop
aad
test
mov
add
mov
or
adc
imul
xchg
push
push
dec
clc
outsl
lds
pop
mov
jle
jp
movsb
call
es
das
pop
shrb
loopne
mov
xchg
push
lret
mov
xchg
std
xchg
lea
sub
cmpsl
incl
mov
mov
pop
mov
ret
push
xchg
xchg
addr16
rclb
xor
ret
xlat
xchg
mov
jo
or
outsb
inc
or
ret
loope
inc
ret
adc
daa
fsubr
lods
lock
out
jle
je
nop
shlb
mov
insb
ss
and
or
pop
fadds
cld
xchg
push
xor
call
sbb
add
push
jecxz
out
test
cmp
cmp
jmp
lcall
pop
xchg
iret
xchg
xchg
mov
cmc
aaa
push
xchg
or
xchg
out
xchg
cmp
mov
dec
stos
push
jne
xlat
rclb
sbb
jmp
out
movsb
lret
xchg
lret
stos
in
mov
push
pop
sub
ja
lcall
fwait
es
ss
je
add
daa
xorb
cmp
popf
or
xorb
sub
pop
dec
out
jbe
fsts
and
push
dec
adc
aaa
sbb
call
sub
xchg
jo
arpl
incl
ret
add
push
jnp
and
clc
int3
jmp
push
fstpt
cmp
and
sub
pushl
jg
sub
lret
or
add
lea
inc
out
test
inc
mov
sub
xor
fdivr
cs
fs
ss
sti
in
inc
ret
mov
mov
shlb
cli
ds
pop
pop
subb
inc
push
pusha
dec
xor
pushl
jbe
cmp
popf
loop
pop
and
std
aam
add
push
out
fldt
pop
inc
iret
fldlg2
xchg
adc
inc
jns
dec
rclb
scas
fistl
cld
mov
push
sub
in
mov
xor
add
incl
xchg
sysenter
or
inc
and
push
dec
lcall
std
in
add
decl
inc
jl
lods
add
adc
aas
dec
sbb
addb
in
add
andb
lods
clc
lcall
packuswb
push
pop
int3
subl
pop
add
and
or
test
or
into
or
dec
push
mov
pop
cmpb
sahf
mov
test
jo
add
mov
cmp
lret
cmc
jp
mov
add
mov
int3
fidivs
sarl
or
push
mov
decl
add
or
push
addl
nop
sbb
lcall
sub
jg
jp
dec
lcall
ret
sbb
ljmp
pop
xor
adc
iret
pop
lret
or
jmp
or
popf
mov
fwait
pop
or
icebp
xor
fs
push
lock
decl
pushf
mov
add
clc
ret
mov
into
sub
mov
decl
js
movsb
adcl
xchg
nop
or
in
imul
mov
inc
in
loopne
ret
popa
test
fcompp
cli
test
in
in
dec
ljmp
sar
aaa
in
inc
movsl
mov
xchg
test
mov
add
lahf
loop
sarb
cmpb
decl
or
push
ret
loope
adc
dec
push
pop
std
fcomip
js
and
ds
pop
insb
leave
add
imul
loopne
or
rcl
aam
pushf
push
lcall
dec
xchg
mov
lds
aaa
adcb
movsb
push
jae
jne
xchg
mov
aaa
test
jg
mov
push
mov
sbb
pushfw
das
mov
inc
shl
les
xor
int3
mov
sar
mov
std
sub
cmp
mov
push
cmp
mov
addb
mov
clc
fcomip
out
cmpsb
xchg
sub
add
push
adc
sbb
fiadds
cmpsb
pop
gs
push
iret
sub
or
js
idiv
fucom
jl
loop
sub
imul
addr16
mov
push
mov
rcrl
pop
push
lock
call
mov
xchg
dec
and
dec
mov
mov
pushf
pop
or
xchg
lods
incl
outsl
les
in
les
jl
adc
aaa
and
das
clc
mov
adc
mov
sub
ds
ret
sub
jg
or
add
mov
out
add
push
lock
pop
xchg
mov
sbb
inc
mov
shll
pushl
incb
movsb
cmp
xchg
cmp
mov
sub
or
dec
and
leave
ljmp
cli
push
in
add
cltd
movsb
or
add
in
sbb
mov
push
or
jo
or
pop
mov
mov
sar
fcompl
push
mov
stos
imul
jle
inc
mov
sub
cli
xchg
andb
push
xor
add
jno
xor
iret
adc
pop
and
pushl
dec
shlb
xchg
in
jnp
xlat
imul
in
in
or
add
rolb
loope
pop
mov
inc
jnp
sub
lods
bound
mov
adc
fwait
and
cmp
sub
cmp
push
aas
dec
or
call
test
and
stc
nop
pop
push
call
std
jmp
aas
add
xchg
sub
jecxz
adc
dec
aas
inc
add
testl
jbe
inc
lock
mov
xchg
push
call
jg
jg
adc
pop
test
aas
sahf
out
int
out
xor
dec
xchg
mov
sub
scas
call
cmp
dec
or
mov
push
je
call
faddl
daa
lahf
and
cltd
dec
in
jae
fcoml
fmull
push
mov
hlt
dec
ljmp
fcomps
sbb
adc
cmp
loopne
call
sbb
pop
dec
lcall
pop
mov
ja
mov
xor
mov
dec
mov
jmp
cmp
shr
inc
cwtl
inc
pop
pop
fcomip
call
test
out
movsl
call
inc
xchg
insl
lea
cmp
add
push
and
lcall
cwtl
adc
jmp
push
mov
movsb
pop
inc
push
add
adc
inc
sub
das
mov
in
push
lock
les
mov
call
cmp
adc
addb
mov
cli
and
in
nop
pop
filds
pop
loop
jecxz
dec
xchg
mov
fisttpll
or
in
sbb
mov
decl
adc
and
inc
call
add
hlt
fisttps
push
add
add
aad
inc
cmp
mov
lock
test
add
adcl
ret
inc
sub
or
gs
mul
mov
xor
fwait
add
ja
pop
sbb
nop
jge
sbb
lahf
adc
call
mov
in
gs
fadds
inc
cmc
out
in
aad
xchg
dec
mov
sbb
out
inc
cwtl
add
jecxz
dec
cmpsb
jb
mov
in
add
ds
mov
lret
movsb
mov
insl
loope
clc
ljmp
rdtsc
inc
jge
pop
movb
pusha
stos
nop
cmp
xchg
or
or
decl
cmp
xchg
dec
dec
mov
sbb
incl
cmpb
adc
xor
inc
inc
add
push
jg
sub
add
inc
xor
pusha
shlb
xchg
shll
adc
out
decl
adc
inc
cld
lahf
pop
pop
test
popa
loopne
cmp
and
push
call
cld
incl
enter
xchg
movsb
cmp
add
daa
sub
inc
sbb
xchg
add
xor
decl
adc
adc
inc
je
inc
loopne
fwait
sar
xchg
fidivrl
add
cli
lock
fwait
je
adc
pop
jmp
push
add
inc
fcmovb
sub
js
mov
je
adc
jno
stc
and
xlat
scas
repnz
call
call
sbb
xchg
lock
and
inc
mov
xlat
push
ja
subl
sbb
push
xchg
flds
call
push
sub
add
and
xor
popf
mov
jg
and
sbb
inc
mull
xor
xor
fwait
nop
stos
ret
sti
mov
push
lock
fstpt
mov
xchg
and
lock
repnz
call
push
ret
jecxz
pop
ja
fdivrs
push
sbb
jl
pop
repnz
pop
and
xchg
pop
jb
repnz
lock
movsb
mov
mov
push
clc
pop
mov
push
das
push
js
hlt
std
hlt
pop
push
repz
dec
push
push
mov
xchg
fldcw
adc
push
push
enter
jb
cmp
cmp
call
rolb
push
mov
mov
cmp
mov
scas
lcall
mov
icebp
nop
out
call
pusha
neg
mov
xchg
push
pop
adc
imul
into
sbb
ds
test
sar
fsubs
test
adc
push
push
movsb
movsb
push
cmc
out
and
mov
es
pushf
les
lods
fisttps
add
daa
add
clc
insl
mov
cwtl
addr16
in
sub
gs
jmp
adc
int3
xchg
lea
sub
andb
fdivp
xchg
push
adc
mov
shr
ljmp
ficomps
mov
nop
adc
jb
nop
or
outsl
clc
sub
out
imull
das
imull
adc
or
jmp
fsubrs
aas
mov
cmp
pcmpgtb
dec
das
or
fdiv
pusha
orb
jae
rclb
es
dec
sar
das
push
in
jp
call
xchg
pop
or
add
cld
cmc
cmpb
daa
push
sbb
test
lea
add
cmp
push
stc
testb
push
aam
sbb
ljmp
stc
mov
idivb
fsubp
loopne
fcoml
sub
cltd
pop
push
fcomp
sti
outsl
ljmp
xlat
adc
data16
adc
jne
int3
sub
jg
and
rol
xor
inc
div
push
or
xor
inc
mov
or
lock
or
inc
cmpsb
nop
das
stc
cld
inc
push
jl
scas
xor
jbe
insb
std
adc
push
mov
push
add
adc
add
push
inc
add
mov
das
add
cmc
test
clc
sub
add
or
pop
adc
repnz
or
xchg
xchg
cld
arpl
movsl
and
int
add
pop
fs
sub
enter
icebp
call
push
push
sti
dec
mov
int
xor
mov
fldt
in
dec
pop
int
in
add
pop
push
add
jge
push
icebp
mov
cmc
inc
test
push
and
sar
incl
in
lcall
cs
pop
inc
add
nop
jne
ret
popa
mov
jb
pop
lsl
incl
add
pop
nop
mov
movsb
cmp
lea
or
mov
jg
shlb
mov
stc
xor
push
rcrl
dec
call
in
sub
lret
jecxz
and
fsubs
sbb
mov
cmpsb
push
leave
jmp
incl
dec
lcall
and
mov
or
xor
cli
push
sub
sub
sub
push
add
jg
cmpsl
adc
popa
push
jb
mov
or
call
dec
lcall
push
out
sarb
xor
aaa
mov
fsubs
mov
rcl
add
out
clc
dec
int3
push
xor
pusha
enter
sub
imul
ss
aaa
cld
ljmp
pusha
push
mov
add
sbb
mov
icebp
add
cwtl
jbe
dec
outsb
dec
sub
incl
or
stos
mov
sbb
mov
gs
cmpsl
les
or
shrb
pop
xor
lods
jns
movsl
gs
jmp
mov
cld
scas
pushl
lock
rol
mov
xor
filds
shl
fidivrl
sub
dec
inc
ljmp
and
sub
enter
dec
jb
adc
jg
out
or
cmp
inc
insl
leave
fsts
add
dec
sub
sbb
dec
xchg
and
fimull
addb
call
or
movsl
jg
mov
test
or
add
clc
mov
add
jg
call
call
push
push
dec
in
sbb
sub
jp
or
add
adc
and
push
fcomps
adc
jmp
aam
invd
push
mov
or
dec
cmp
fidivl
or
cld
adc
add
xchg
add
bound
mov
pop
cmp
xor
push
jmp
sub
lret
je
adc
in
ja
adc
adc
xor
pop
inc
add
pop
xor
jae
dec
inc
bound
mov
outsl
fisubl
and
bound
jo
icebp
xchg
jmp
jp
gs
ds
aaa
add
and
inc
xor
loop
pusha
inc
jg
xchg
adc
lret
sub
push
loope
mov
bound
dec
imul
fstp
mov
push
ffree
xor
or
sub
add
dec
add
jg
incl
jno
xor
or
adc
insb
loope
bound
pop
mov
lods
mov
add
or
call
in
inc
push
sbb
in
lods
push
push
add
xor
push
or
push
lock
or
scas
aad
repnz
jg
push
cwtl
pop
lock
inc
rcll
adc
enter
jg
jne
or
add
pop
jnp
adc
jbe
incl
outsl
push
or
cs
push
hlt
movsl
loopne
mov
fcomip
ljmp
and
push
rolb
cmp
inc
add
mov
xor
test
mov
test
jmp
rorb
cmp
test
add
adc
pusha
aam
adc
or
sbb
and
cmpsb
icebp
xchg
fwait
add
in
push
hlt
popa
or
incl
sbb
movsl
push
orl
mov
pop
xchg
insl
popa
movsl
mov
jno
pop
lock
jmp
lret
iret
data16
jo
ret
aas
pop
mov
and
push
or
push
in
cmpsb
push
adc
xorl
clc
cld
fstps
cmp
sub
lahf
scas
push
inc
sbb
subl
xchg
push
jb
hlt
call
clc
push
xchg
pop
mov
add
lcall
or
push
adc
leave
outsl
lock
inc
repnz
jns
aam
adcb
or
lea
or
fstps
push
push
push
xchg
cmp
call
and
call
cmp
outsb
popf
mov
jo
pop
in
or
mov
mov
add
or
lret
xchg
sbb
adc
or
inc
push
sub
inc
or
cld
int
push
mov
or
and
adc
test
mov
pop
xchg
movsb
xor
mov
jo
sbb
idivb
lods
push
or
aaa
pop
scas
dec
jb
cmpsl
incl
cmpsl
or
inc
aaa
cmp
or
fimuls
pushl
or
and
mov
imul
and
in
std
psubusw
fs
inc
scas
pusha
xor
cli
mov
push
cmp
mov
and
sbb
pop
decl
addr16
clc
imul
mov
sahf
inc
cmp
shlb
or
test
pop
das
mov
mov
or
jmp
mov
xchg
aam
fiadds
cmp
loopne
push
pop
or
push
cmpb
fidivs
movsb
jmp
ljmp
mov
dec
dec
xchg
and
push
adc
ja
shlb
ret
inc
cmp
jo
or
clc
dec
adc
lock
sbb
ljmp
scas
push
icebp
mov
xorb
sub
mov
and
outsl
inc
lds
clc
decl
shlb
and
pop
shrb
movsb
pop
aas
sub
bound
add
mov
dec
sub
ljmp
cmp
fsubp
mov
orb
sub
mov
pushl
pusha
inc
jo
jo
and
fcomip
ljmp
cmp
mov
dec
sbb
mov
jno
test
jb
mov
ret
inc
in
dec
je
ja
cmp
xchg
push
or
mov
rcrl
call
adc
xchg
jae
inc
pushf
adc
fs
mov
jmp
int3
call
outsb
fsubl
inc
xlat
inc
fldenv
xchg
push
fwait
xchg
ret
lcall
xchg
mov
outsl
xor
notb
push
and
andl
ja
adc
clc
call
lcall
mov
lock
fcomip
decl
inc
lds
mov
jmp
xchg
shlb
call
xor
add
xchg
scas
add
fcompl
adc
addb
aad
pop
ret
or
pop
sub
jne
push
call
sub
xor
inc
jp
and
adc
lds
pushf
addb
inc
dec
xor
mov
aaa
cld
mov
aas
insb
sub
push
sbb
push
std
out
xor
or
pop
cwtl
jecxz
notb
or
mov
daa
add
adc
scas
nop
test
or
xchg
cld
lret
sbb
lret
dec
pop
inc
sarl
lods
push
cli
and
or
inc
repz
test
sar
mov
outsb
dec
aad
adc
out
rolb
adcb
xor
scas
movsl
xlat
push
in
sar
sub
scas
insb
lahf
sbb
add
pop
push
mov
hlt
mov
xchg
add
push
pusha
push
sbb
pop
inc
mov
add
mov
fcmovb
rcrl
jle
xor
stc
out
int
adc
adc
lcall
add
cmpsb
dec
scas
mov
lcall
xchg
jbe
sbb
pop
or
push
adc
mov
in
xchg
and
push
sbb
adc
xchg
sub
sar
pop
inc
pusha
dec
adc
test
xor
or
ljmp
sbb
inc
dec
xor
jo
and
dec
sbb
jmp
cmp
popf
mov
adc
add
jg
data16
inc
xchg
addl
cld
jno
push
pop
mov
jge
fildll
punpcklwd
add
xor
sbb
jo
sar
movsb
or
jge
mov
sub
hlt
push
shll
enter
xchg
add
pop
cwtl
imul
imul
jl
lcall
aas
adc
imul
add
fnstenv
xor
cmpl
or
add
das
shrb
pop
fwait
and
fucom
pop
movsb
insl
loop
incl
or
fmull
dec
sbb
stc
push
add
adc
andl
aad
inc
test
fwait
ja
xor
push
fwait
es
xlat
dec
add
arpl
sub
cli
jl
jecxz
xchg
sbb
dec
xchg
data16
mov
mov
push
inc
pop
call
cwtl
and
pop
insb
sbb
inc
mov
jne
pop
data16
add
xor
enter
and
mov
cmc
addr16
adcl
jns
sbbl
cmp
cmp
rclb
add
rcrb
mov
or
ljmp
dec
ds
mov
and
in
mov
and
add
cmp
std
aaa
cmp
adc
pusha
in
out
sbb
decl
pop
pop
jmp
mov
adc
loop
rorl
adc
mov
fbld
pop
orb
mov
rclb
pop
lcall
sbb
pop
dec
lock
sbb
aaa
loop
push
sti
sbb
mov
push
lods
and
in
dec
jp
xchg
jns
enter
sbb
ss
sub
fildll
or
and
xchg
iret
xchg
adc
ret
jae
mov
pusha
add
mov
xchg
mov
jne
loope
imul
inc
adc
or
inc
mov
push
pop
sbb
fisttps
cmovb
js
lahf
xchg
adc
mov
pop
sbb
jg
lcall
mov
push
dec
imul
adc
pushl
testb
dec
sbb
das
mov
lds
add
cli
mov
bound
push
sbb
jmp
sbb
ss
int3
loopne
and
sub
dec
adc
pop
cwtl
stos
push
call
add
inc
lahf
cmp
push
mov
dec
sahf
and
or
shll
xchg
or
adc
pop
xacquire
and
les
clc
addl
or
jl
es
ljmp
lods
inc
repnz
inc
movl
xor
int3
mov
add
xor
shll
bound
decl
in
decb
sub
push
dec
ret
inc
mov
push
cmpsl
dec
lods
lods
stos
jno
inc
sub
inc
roll
clc
rol
push
xchg
je
cmp
pop
test
mov
shrb
jecxz
mov
inc
push
mov
mov
xor
xor
shlb
dec
adc
decl
sub
jbe
add
hlt
inc
testb
xor
push
outsl
mov
aam
les
bound
xchg
xchg
call
pusha
sub
mov
outsb
dec
or
pop
ljmp
ret
and
leave
xor
cltd
and
cmpsl
decl
arpl
gs
adcb
aas
inc
mov
push
daa
aas
and
pop
push
es
dec
call
fisttpl
jnp
mov
mov
and
lock
adc
sti
ljmp
test
in
and
cmpsb
aam
and
pop
and
and
inc
jecxz
mov
sub
and
xchg
cmp
pop
bound
lock
pushl
adc
dec
shll
inc
mov
popf
push
push
lods
movsb
pop
sub
cmp
or
jg
sbb
xor
rol
cltd
adc
mov
jmp
sub
xchg
in
add
sub
mov
adc
test
adc
test
ljmp
xchg
mov
jb
cmp
ret
wrmsr
cmpl
lea
lock
ja
adc
mov
adcl
aaa
bound
call
aaa
push
jno
pushf
es
mov
daa
aaa
inc
cmc
movsb
add
shll
cmp
add
mov
mov
inc
cmp
mov
push
test
nop
inc
nop
ljmp
xchg
pop
xchg
xor
enter
sarb
test
sahf
orb
add
aam
lahf
mov
and
push
add
mov
mov
adc
inc
daa
lods
sub
jne
sti
push
dec
das
mov
and
cld
mov
js
cld
cwtl
mov
and
mov
loope
or
jle
inc
orb
hlt
pusha
lcall
mov
fildll
inc
fadds
ss
jmp
mov
sub
in
add
shll
lahf
xchg
cmpsb
mov
sbb
mov
shll
mov
pusha
outsl
jmp
sbb
and
inc
cmp
mov
lcall
shrl
fimuls
or
sbb
dec
jp
ljmp
lock
nop
lea
pop
clc
inc
and
loopne
ljmp
push
dec
ljmp
lds
in
push
gs
insl
movsb
push
or
add
mov
dec
lcall
pop
dec
mov
pop
mov
xor
xor
pop
mov
cmpl
sbb
clc
ljmp
inc
popa
jno
roll
nop
bound
and
loope
mov
adc
dec
mov
push
xchg
push
adcb
stc
inc
push
cwtl
inc
or
mov
add
sbb
pushf
push
xor
out
jle
xchg
int3
or
cmc
pop
push
push
test
and
or
add
add
and
mov
or
dec
xor
loopne
ja
movb
mov
insl
ljmp
pushl
data16
xor
pop
lea
scas
pop
and
inc
loopne
in
lahf
insb
cmpb
std
jmp
ja
sbb
mov
push
sub
cmp
stc
das
push
inc
and
or
dec
clc
lcall
fucom
imul
or
xor
xchg
or
ret
push
or
cmp
jns
stos
dec
addr16
decl
jb
push
insl
mov
xor
push
dec
inc
popf
shl
cmpsb
push
sub
mov
movsb
jo
stos
push
or
incl
sub
push
je
push
add
push
xor
mov
sub
loopne
jmp
arpl
fadd
bound
inc
pop
sub
mov
fs
shlb
addb
gs
in
insl
xchg
imul
mov
adc
pop
movsl
leave
xchg
cmp
call
add
xor
jb
mov
xor
or
or
add
adc
decl
add
flds
inc
and
xor
loope
pop
pop
fsubrs
movsb
adcl
jns
xor
lret
scas
mov
and
stos
and
cmpsl
dec
rolb
mov
inc
ret
inc
inc
push
jae
pop
jg
fs
add
dec
mov
add
add
xor
lcall
cmp
repnz
xchg
cmp
fsubl
push
es
enter
loopne
adc
and
jecxz
sub
or
sub
incl
cmp
and
xchg
mov
out
je
mov
mov
dec
call
mov
mov
cmp
jae
call
fdivl
pop
stos
call
or
aad
ds
inc
jg
cs
fisttps
xor
xor
stos
ficoms
or
dec
push
mov
mov
and
or
scas
mov
and
push
adc
adc
push
std
decl
mov
adc
mov
cwtl
ret
decl
rolb
mov
ljmp
sub
cmpsb
xor
inc
or
pop
or
sbb
xor
inc
pusha
and
inc
jg
incl
or
pop
popa
inc
adc
outsb
lock
lds
adc
or
xchg
xor
sub
jo
sub
fsts
cmp
pop
data16
lds
cmp
fstpt
shlb
sar
jmp
fcompl
incl
xchg
jl
inc
sub
xchg
sbbl
sbb
aam
mov
outsl
inc
dec
daa
adc
fisubl
adc
call
mov
cmp
add
pop
mov
dec
pop
adc
sub
mov
add
es
clc
imul
icebp
sub
push
mov
mov
aas
xor
arpl
jns
jg
push
inc
xchg
push
adc
jb
or
sub
add
sub
decl
movsl
jp
push
add
xchg
mov
lea
das
jg
fisubl
cmp
xor
das
add
cmp
mov
and
cmpb
filds
movsl
cltd
insb
ds
mov
nop
add
add
mov
or
jae
dec
adc
popa
push
sbb
jo
fsubp
call
hlt
adc
pop
imul
push
mov
loop
push
leave
and
cmp
jg
inc
push
in
movsl
pop
cltd
mov
add
or
clc
ret
icebp
ljmp
ret
aas
sub
pop
sbb
cld
aad
and
sub
decl
adc
and
idivb
push
jle
sub
fs
ror
xor
xor
jns
ljmp
lods
or
sub
mov
dec
jecxz
fisttpl
mov
sbb
lcall
or
ja
aaa
or
js
adc
inc
sarb
or
clc
jae
scas
rol
cwtl
test
xlat
sbb
sub
inc
mov
call
nop
or
jmp
imul
fs
sbb
out
andb
fwait
stc
hlt
imul
add
popa
loopne
decl
and
out
xor
mov
jne
dec
inc
push
inc
dec
jg
xorl
add
ljmp
xor
inc
mov
out
jns
mov
xor
lcall
add
lods
xchg
cmpsb
mov
xchg
or
mov
incl
inc
sbb
bound
ds
inc
mov
lea
ljmp
mov
inc
xor
call
rclb
jbe
test
rcl
inc
ljmp
add
or
mov
push
cmpsl
sbb
fisubrl
add
xor
push
sar
fadds
jns
ss
ret
dec
jle
sub
adcl
and
push
xor
and
jmp
xchg
dec
dec
aaa
test
adc
dec
inc
inc
nop
jmp
sar
jmp
pop
pop
sbb
test
dec
adc
add
ret
xchg
inc
addl
ja
add
sbb
or
sar
sbbb
and
jne
push
push
in
dec
call
cmp
test
cmpsl
mov
push
dec
push
inc
aaa
push
xorb
jmp
or
push
xor
adc
inc
repnz
mov
mov
mov
or
push
std
fbld
test
std
sahf
loop
xor
mov
movsb
adc
cmp
xlat
xchg
xor
push
push
mov
sbb
nop
sbb
or
aad
mov
fnop
fidivs
aam
xchg
sbb
or
mov
or
push
std
decl
pop
xlat
push
cld
jg
push
punpckhbw
nop
sub
mov
push
imul
add
jmp
lods
xor
mov
inc
lahf
pop
mov
cmp
cltd
cmp
dec
out
fs
cmc
ljmp
jns
leave
mov
cmp
mov
out
negb
sub
fcompl
hlt
decl
cmp
push
les
and
lret
add
ds
xor
arpl
je
fmulp
call
xor
aas
dec
push
cmp
jns
fwait
out
cmp
inc
int3
mov
mov
clc
cmpsb
fwait
sub
jnp
fcom
cs
jmp
push
jo
dec
or
cmp
addb
xchg
jnp
add
and
push
jae
inc
cld
incb
or
add
pop
leave
aas
xor
pop
adc
mov
repnz
dec
xlat
jl
stos
imul
add
jle
cltd
inc
push
dec
ret
adc
push
xchg
adc
mov
mov
push
dec
and
sbb
jne
das
sar
clc
sbbl
pusha
pop
push
add
fdivr
add
incl
testb
inc
pop
or
sub
jmp
cmpl
push
pusha
fnstsw
imul
mov
incl
repnz
test
dec
xor
jg
mov
lcall
test
inc
mov
bound
xchg
fistpl
or
inc
or
repz
jns
cltd
xor
sub
pop
push
push
pusha
jmp
jnp
xor
or
mov
nop
shlb
hlt
xchg
xlat
jne
add
ja
jmp
decl
loope
lock
dec
insb
mov
pop
add
dec
push
add
adc
mov
inc
dec
aaa
lret
add
andb
add
pushl
and
cmp
add
inc
push
iret
leave
sbb
inc
cmp
mov
xor
lcall
xor
das
add
dec
outsb
dec
clc
xor
incl
sbb
pop
lret
mov
add
cli
jmp
add
stos
cmovbe
adc
movb
addl
and
imul
adc
fs
push
sar
sbb
and
fists
push
adc
test
js
mov
rcr
cld
adc
decl
leave
inc
xor
fsts
add
imul
cmp
roll
adc
adc
inc
test
outsl
mov
sbb
push
mov
push
popa
and
idiv
lcall
fildll
das
out
mov
dec
cmpsl
into
lock
call
dec
mov
add
inc
xor
xchg
int
or
inc
pusha
inc
int3
pop
inc
cmp
push
mov
adc
push
push
orb
cs
inc
les
pop
xor
movsb
jbe
push
std
mov
mov
jge
adcb
sbb
data16
jg
dec
xor
popa
out
inc
cmp
or
orb
sahf
sbb
add
pusha
cld
lea
pop
pcmpgtw
jg
cs
xor
enter
pop
jl
dec
sub
sbb
mov
push
push
loop
into
test
cmc
pushf
dec
sbb
incl
cwtl
stos
inc
js
cmp
adc
lcall
inc
loope
mov
and
dec
add
dec
inc
pop
push
cld
incl
push
test
inc
and
cmpl
mov
push
pusha
lcall
or
aas
pop
loop
popa
lahf
dec
shlb
loope
dec
dec
mov
js
inc
push
lcall
addr16
les
xchg
dec
fs
test
test
out
dec
imul
pop
sub
add
test
orl
frstor
icebp
decl
mov
or
jne
add
lods
stos
mov
call
add
pop
enter
and
push
loope
jbe
inc
popa
dec
les
or
xor
decl
or
push
jb
fnstenv
aas
jle
dec
dec
or
cmp
jg
sbb
xor
jmp
dec
xchg
stos
push
xchg
icebp
mov
mov
xor
jne
xchg
enter
loope
jo
out
jp
xor
shrl
add
mov
mov
add
aas
les
jo
clc
outsl
and
lret
xlat
enter
push
jbe
ljmp
push
dec
je
imul
adc
dec
js
mov
or
xor
mov
mov
sbb
mov
ss
xchg
roll
movsl
decl
add
ja
mov
int3
inc
inc
mov
leave
pop
xchg
sbb
or
jnp
shrb
imul
dec
orb
incl
push
andb
cmc
xor
test
push
sbb
pop
sub
jge
ja
mov
mov
mov
jae
cmp
das
xchg
mov
ljmp
out
jne
mov
push
pop
cmpb
outsb
mov
pop
inc
and
shrb
jge
das
mov
aas
pop
mov
mov
decl
inc
adc
mov
sbb
mov
fisubrs
loopne
pop
loopne
hlt
adc
inc
inc
clc
out
mov
sub
sbb
adcl
adc
inc
sub
hlt
add
fwait
decl
pusha
push
inc
adc
cmpsb
xor
fsubrs
xchg
call
test
rolb
add
imul
lcall
push
cmp
shrb
and
jl
mov
xchg
fiaddl
pop
and
cmp
xor
test
sub
cmc
ljmp
insb
out
add
xchg
xchg
inc
mov
and
loopne
lcall
out
add
lret
repnz
adc
stos
in
push
dec
add
push
pusha
adc
push
cmpsl
push
mov
nop
mov
mov
push
mov
dec
ja
in
rol
fiadds
cmp
scas
add
cmp
sbb
add
push
cwtl
daa
mov
inc
call
push
clc
in
and
add
add
sbb
test
fwait
jp
dec
mov
xchg
inc
in
push
outsb
push
dec
in
add
pop
in
out
adc
mov
xchg
push
outsb
bound
mov
and
push
push
sbb
mov
inc
and
decb
incl
sub
lahf
add
leave
rolb
shl
mov
push
rcrb
dec
incl
sub
imul
sbb
lea
cmpsb
call
and
pushl
test
test
mov
lods
xchg
or
mov
pushf
xor
and
adc
ret
frstor
push
call
mov
mov
aaa
sbb
pop
sarb
cltd
ret
mov
aas
or
mov
sub
xor
divl
jno
sbb
inc
and
add
sub
mov
fcomip
clc
adc
aas
mov
or
leave
push
dec
push
sub
sti
jl
cmp
rorb
fbstp
addb
xchg
scas
mov
lea
jae
loopne
jne
ja
mov
mov
lidtl
sub
and
xchg
sub
mov
test
mov
sbb
cmp
dec
or
cmpsl
in
or
pop
sub
xchg
cmp
out
pop
mov
decl
dec
xor
loope
push
fildll
cmpsl
jbe
pop
add
push
adc
movsb
fisttps
loope
rorl
fistpl
loop
les
mov
bound
iret
arpl
xor
xchg
incl
clc
pusha
or
adc
xor
pop
pop
push
mov
adc
incl
out
cmp
cmp
inc
push
sbb
xchg
jg
call
push
xor
mov
mov
pop
xor
fisttpl
push
lahf
sub
insl
push
decl
inc
mov
outsb
mov
sahf
add
scas
adc
adc
inc
xor
insb
push
jle
push
adc
or
out
mov
pop
fldt
aaa
push
xor
mov
inc
xchg
mov
lds
bound
orl
pushl
das
shlb
faddl
lock
fs
lds
jbe
dec
rcrb
ffreep
add
inc
add
ja
les
cmp
inc
nop
cltd
mov
mov
dec
or
addl
xchg
adc
fists
or
lahf
dec
mov
adc
mov
inc
sbb
mov
fwait
xchg
or
push
movq
ss
inc
xor
sti
test
shr
sbb
out
pop
sbb
popl
fisubl
shrl
add
sbb
or
out
mov
cmp
mov
or
or
pop
add
fnstenv
and
sub
mov
or
sbbl
popf
dec
jae
jo
test
out
mov
xor
aaa
fcomps
inc
jg
dec
lahf
fisubl
incb
pusha
sub
inc
shlb
jg
mov
fdivrs
dec
mov
xor
roll
sub
inc
sub
add
aaa
mov
das
imul
mov
push
inc
or
xchg
stos
inc
pop
xchg
insb
mov
dec
inc
ret
mov
cvtps2pi
pop
add
xlat
adc
mov
mov
xchg
add
push
mov
or
outsl
xor
mov
repnz
js
pop
add
loop
out
cli
aaa
das
scas
sub
andb
iret
or
mov
ret
sub
ja
incl
or
add
inc
xor
dec
xor
xor
adc
xchg
outsb
push
or
or
dec
scas
addb
sub
push
out
orb
sub
add
pop
jo
lds
in
xor
clc
decl
dec
outsl
movsb
dec
or
or
and
xchg
pop
dec
hlt
call
adc
mov
lahf
fisttps
mov
dec
lahf
or
insb
push
mov
mov
bound
mov
inc
lahf
inc
sub
loop
dec
and
pop
loope
ret
add
sub
inc
xor
loope
call
lahf
inc
out
push
adc
sub
loopne
jmp
rclb
aas
inc
subb
mov
push
cmpsb
lahf
cmpsb
in
mov
inc
push
or
inc
push
xlat
lds
adc
mov
mov
call
aas
rolb
xor
rclb
mov
pop
jg
sti
pop
arpl
dec
lcall
call
call
idivl
shrb
or
pop
scas
aaa
insb
mov
mov
push
push
jo
je
pop
mov
pushl
fstl
outsl
mov
sub
mov
lahf
pusha
pop
fcmovnu
aaa
mov
or
loop
mov
xor
stos
pop
lods
mov
aad
aas
push
xchg
in
xor
xor
push
idivl
sbb
dec
cmp
fadds
jae
in
dec
mov
pop
iret
inc
mov
out
xchg
loopne
fcmovnu
aas
cmp
or
outsb
jg
add
push
test
push
sarl
or
incl
cmp
popa
adc
dec
inc
xlat
cmp
add
out
dec
jg
mov
pop
shll
das
or
push
int3
add
call
push
cmpl
jecxz
add
ja
xor
mov
fsubs
jg
or
xor
ret
dec
xor
xor
mov
hlt
pushl
std
es
jg
pop
inc
lret
add
dec
push
loope
xchg
push
test
fbstp
imull
lcall
call
fcmovnb
mov
push
scas
ror
mov
incl
xor
cmp
cmp
adc
outsl
cli
adc
pushf
pop
int
jg
xchg
mov
xor
cmp
jo
sub
pop
ja
pop
loopne
push
arpl
pop
rorb
sbb
push
sbb
pushl
std
addr16
imul
cmp
mov
lahf
dec
inc
test
popa
ret
rolb
roll
pop
insb
xchg
sub
lcall
ret
push
aas
mov
insl
jae
push
dec
inc
add
adc
mov
lcall
sbb
js
mov
aam
ss
repnz
incl
push
rorb
or
inc
mov
aaa
adc
cltd
test
imul
cmp
ljmp
adc
nop
pop
aaa
adc
push
mov
and
push
mov
mov
jmp
test
lret
es
fdivl
repz
mov
outsb
dec
loopne
add
stos
push
add
inc
sysret
or
jnp
dec
mov
bound
inc
loope
add
dec
xor
xor
test
inc
add
pop
add
push
lods
mov
and
dec
adc
aad
jecxz
pop
sub
adc
pop
shrb
xor
sbb
sti
pop
cmc
inc
je
or
mov
jae
or
and
pop
jb
dec
jmp
nop
add
xchg
sbb
pop
adc
leave
xor
dec
jg
push
sub
jg
scas
sbb
mov
syscall
stos
inc
xor
ret
pop
orb
movsl
pusha
or
cmpsb
push
add
mov
and
mov
xor
mov
lcall
jbe
iret
and
pushl
outsb
dec
push
push
jg
lods
mov
bound
lods
dec
xor
mov
pop
dec
adc
les
xchg
cs
sbb
and
sbb
pop
cmc
cmp
push
mov
cs
scas
xchg
mov
inc
clc
pop
mov
inc
xor
shrl
dec
xlat
roll
push
dec
push
jbe
test
push
pop
adc
hlt
in
call
aas
jbe
mov
push
mov
orb
in
call
xchg
xor
iret
enter
push
push
in
cld
dec
cmp
xor
xchg
pop
and
push
roll
xlat
xor
inc
and
fidivl
pop
adc
xor
pop
sbb
xlat
shlb
inc
es
xor
push
xchg
movsl
jmp
xchg
pushf
mov
mov
adc
add
imul
pop
std
xor
scas
mov
xchg
sbb
sbb
push
ja
lds
pushl
popa
ja
pushf
mov
fs
sub
adc
jb
or
pop
push
inc
rcll
inc
scas
xor
sahf
adc
out
jmp
cmpsl
aas
loopne
sbb
ret
mov
xlat
ss
cmp
xor
aaa
out
jmp
sbb
aaa
xor
test
cmp
shrb
decl
orb
popl
jbe
and
inc
dec
jno
xchg
or
cmp
inc
out
lock
cmpl
sub
ljmp
mov
lock
outsb
push
mov
les
scas
add
and
mov
mov
std
loope
cmp
add
push
leave
push
adc
push
leave
inc
and
cld
call
cwtl
lcall
jb
dec
enter
pop
out
insb
sarb
insb
add
sahf
push
or
clc
cmp
dec
in
popf
gs
ds
andl
shr
cmp
fwait
mov
lcall
mov
data16
loope
call
mov
hlt
jne
pop
outsl
dec
push
mov
mov
jns
jne
roll
cmp
lods
imul
jne
movsl
xchg
inc
out
mov
add
xchg
inc
and
sub
rcr
jecxz
pop
mov
jmp
jecxz
neg
mov
ret
mov
xor
xor
xor
ljmp
and
adc
dec
adc
jl
mov
mov
imul
cs
jbe
push
test
sahf
arpl
mov
arpl
incl
out
pop
das
int
or
aaa
aas
dec
and
cmp
and
cmp
jmp
cmp
xor
pop
pop
arpl
jne
sbb
lret
aas
mov
std
ljmp
mov
mov
loop
sahf
push
das
mov
out
push
or
test
aaa
add
jne
call
out
cmpsb
xor
push
das
rcl
jg
xlat
or
or
addb
add
popf
xor
fwait
cmpsb
mov
fcomip
incl
ret
pop
mov
jne
scas
inc
loopne
ret
incl
dec
test
adc
adc
pop
add
test
jg
lcall
xchg
iret
xor
pop
jecxz
js
mov
incl
orb
mov
push
push
inc
aad
aad
ss
test
clc
pop
cmp
add
stos
jmp
mov
adcb
mov
sbb
add
decl
lods
xchg
pop
lahf
pop
jo
ss
xor
xchg
sub
dec
dec
push
aaa
sub
lcall
fsubr
adc
dec
rolb
call
cmp
out
jmp
jmp
inc
cmp
ljmp
push
mov
or
xor
imul
incl
outsl
adc
push
push
sbb
push
sbb
loop
pop
sub
loopne
lcall
stos
sub
cmpsl
das
stos
xorl
dec
ja
and
add
lea
lcall
addl
adc
push
push
jg
adc
cmp
inc
outsb
xchg
adc
xor
aaa
xchg
jne
dec
cmc
int3
push
ret
xor
add
pop
sbb
dec
aas
out
stos
enter
jg
arpl
cmpsb
inc
push
js
das
jo
fwait
mov
lods
test
incl
or
xchg
xchg
mov
ja
arpl
rcrl
dec
push
xchg
lods
call
pop
mov
imul
outsl
and
jg
and
ja
mov
mov
mov
ljmp
outsl
sub
add
add
add
insb
or
xorb
out
ficoms
inc
ss
bound
loope
pop
into
out
and
in
cmp
cmp
or
incl
pminsw
xchg
lods
fmuls
mov
outsl
cmpsl
and
xchg
out
fisubl
cmp
ret
push
fidivs
incl
xor
aaa
or
mov
sbb
loopne
mov
fdiv
and
mov
data16
aad
lock
fdivrs
adc
in
xor
add
ja
push
cld
imul
sbb
pop
or
inc
and
inc
jnp
jg
icebp
jnp
xor
mov
enter
or
in
divl
ljmp
pop
call
movsb
cwtl
push
leave
add
adc
stos
xor
adc
cld
push
call
push
sub
lock
sbb
add
inc
jo
divl
testl
popa
xor
sbb
leave
push
shll
lea
sbb
or
xlat
fildll
clc
mov
mov
data16
daa
jg
mov
push
cmp
movsl
and
cli
push
push
in
mov
push
add
out
std
mov
bound
push
push
daa
aaa
fs
adc
es
pushl
jle
xlat
push
xchg
mov
or
outsl
into
rcrb
daa
adc
aaa
mov
adc
cmp
jnp
test
imull
lret
pop
mov
xor
bound
cmpsl
xchg
iret
xor
in
xor
cmpsb
cli
ja
mov
arpl
add
aaa
outsb
pop
sbbb
push
jb
hlt
jb
jno
ss
push
add
in
filds
es
xchg
iret
xchg
sbb
push
jl
test
lahf
mov
mov
mov
cmpsb
ss
or
jb
dec
sub
pop
mov
shlb
mov
mov
iret
mov
movsb
adc
ja
cmp
iret
xor
sub
jne
mov
sbb
xor
xor
test
cmpsl
cmp
adc
dec
cs
add
ljmp
inc
cmp
out
or
xor
mov
mov
sbb
push
enter
xor
or
incl
int
imul
mov
xor
or
xor
inc
cmp
cmp
mov
outsl
int3
insl
stos
sbb
push
pop
mov
adc
jg
adc
clc
or
fwait
iret
int
add
pop
xor
insb
cwtl
test
jne
je
fcoms
pop
test
push
aaa
cld
sbb
daa
scas
aaa
xor
mov
mov
ss
divb
test
rcrl
dec
pop
xchg
imul
mov
packsswb
clc
call
pop
out
push
cmpsl
mov
sbbl
test
inc
movl
call
sbb
test
movsl
addr16
push
dec
add
mov
movsb
push
add
shll
jle
inc
mov
inc
mov
insb
push
inc
cmpsl
pushl
fsqrt
inc
das
pop
insl
inc
mov
mov
push
inc
jg
mov
adc
push
push
pop
and
and
xorb
jg
fs
inc
popl
scas
xchg
stos
push
push
cmpsl
in
sub
dec
inc
xchg
mov
push
inc
and
inc
insl
es
lret
push
or
inc
out
stos
call
imul
iret
dec
out
adc
jp
out
sub
xlat
xorl
xchg
mov
iret
ja
push
fisubrl
xchg
call
or
cwtl
addl
mov
das
sub
dec
cmp
mov
aaa
or
ljmp
pop
call
out
cmp
jg
push
shrb
out
nop
push
sti
out
scas
sbb
ljmp
call
jne
lock
outsl
aas
cmp
rcrl
inc
aas
test
cmp
ljmp
mov
xchg
xor
inc
sbb
pop
daa
xchg
pusha
mov
shll
inc
jle
cmc
sbb
cmp
push
sub
pushl
cmp
inc
pop
inc
jb
inc
xor
adc
mov
sub
out
or
jle
and
scas
sub
add
addr16
xor
mov
jl
cmp
fistl
jb
pop
dec
sbb
leave
xor
out
daa
imul
pop
push
dec
test
and
stc
and
xor
mov
cli
int
xchg
setb
or
sub
hlt
mov
in
das
cmp
lahf
std
fcomip
pop
jb
pop
lods
sbb
imul
jbe
mov
dec
inc
aaa
cmp
cmp
sahf
sub
loopne
das
popf
mov
ja
push
mov
out
cmp
je
lcall
ja
sub
lcall
or
xor
adcb
mov
loopne
push
pusha
xor
pop
scas
test
and
inc
aas
dec
push
call
add
or
sub
mov
sbb
fsubrs
insl
xchg
movsb
jb
aaa
data16
inc
or
adc
sub
incl
pop
pxor
aad
pop
xor
cmp
xor
pop
push
pop
popa
cmp
stos
mov
xlat
pop
pop
xor
or
sbb
sbb
sar
mov
add
jg
incl
mov
pop
pop
xchg
mov
mov
add
das
or
push
lcall
cmp
sub
mov
loop
into
pop
xchg
jl
push
les
inc
mov
mov
fbld
shrb
push
push
iret
mov
je
insl
fisubl
inc
inc
add
call
push
test
push
fmuls
pop
lcall
jecxz
rcll
lcall
pop
adc
aaa
or
pop
js
pusha
inc
imull
push
dec
sti
fwait
sbb
rclb
popa
call
adc
lods
adc
mov
je
insl
add
adc
call
mov
aas
shrl
mov
andl
pop
lcall
fdivrs
clc
cmp
mov
push
sbb
pop
lret
ret
sub
xor
cmp
pusha
pop
xchg
iret
or
test
pop
pop
or
inc
scas
adc
dec
orb
fcomip
call
aaa
inc
adc
inc
enter
adc
add
cmp
add
nop
or
outsb
pop
stos
or
lahf
xor
mov
xor
mov
sbb
push
rol
adcb
push
outsl
mov
adc
stos
cs
pop
jae
mov
push
push
xchg
divl
loop
mov
out
cmp
mov
mov
fwait
or
bound
cltd
and
imul
call
test
fs
adcl
or
add
bound
mov
xor
sub
dec
dec
xor
in
icebp
lahf
sub
push
mov
pop
xlat
cmpsb
loopne
daa
or
push
in
mov
push
imul
fbstp
pushf
cmp
popa
mov
test
sub
mov
or
outsl
call
imul
inc
jg
add
push
inc
lahf
bnd
xchg
inc
push
or
js
call
push
pop
pop
je
push
mov
dec
inc
inc
psubb
leave
dec
adc
mov
and
cld
mov
popa
and
jg
insb
and
aaa
push
mov
sub
imul
push
sub
js
dec
outsb
fmull
shrl
sbb
ja
cmpsb
dec
or
xchg
ss
sbb
push
xchg
ret
daa
popa
shll
sbb
repz
adc
ja
or
push
pusha
jmp
fwait
ret
hlt
adc
outsl
push
add
push
aaa
loop
inc
pop
mov
ja
xchg
or
das
mov
mov
xor
xchg
frstor
add
xor
xor
ss
jo
imul
push
je
xor
inc
and
add
xor
pop
mov
clc
inc
mov
sbb
jne
es
and
add
mov
ljmp
mov
sub
push
lods
push
call
mov
adc
and
pop
xchg
cmp
movl
incl
adc
rol
les
sbb
push
ret
ret
fdivl
adc
push
adc
or
and
inc
mov
push
pop
mov
adc
xor
aaa
mov
dec
loop
daa
and
pushl
cwtl
movsb
pop
in
cli
sub
pop
and
jg
push
xchg
xor
sbb
incl
mov
sbb
push
mov
enter
add
adc
lcall
cmp
dec
or
stos
push
mov
pushl
dec
adc
ret
jge
aam
sub
in
call
push
int
mov
mov
jmp
jl
inc
xor
jmp
inc
lcall
dec
jne
push
cmp
das
cmp
ret
aam
test
fidivs
jne
and
fisttpl
jmp
pushl
or
rcrl
and
loop
rolb
loopne
mov
jns
adc
outsl
decl
mov
and
repnz
je
sti
add
xchg
add
fldenv
in
shll
mov
and
xor
pusha
xchg
inc
or
pop
sahf
enter
dec
cmc
and
or
jg
mov
outsl
mov
mov
std
ja
ret
outsl
adc
push
cld
ljmp
jmp
loopne
nop
ret
outsl
mov
add
inc
cmpsb
jae
xchg
sbb
gs
sar
xor
lret
mov
sub
addb
outsl
test
or
add
aam
mov
jmp
sub
sbb
pop
pop
sub
cld
lods
and
lret
jne
popa
pop
xchg
sar
xchg
mov
aaa
leave
lret
jg
fsubl
xor
jmp
jp
pushl
pop
dec
iret
rorb
incl
lahf
mov
adc
aaa
inc
dec
sub
stos
push
mov
scas
adc
and
das
andb
add
decl
or
jno
shrl
loopne
inc
enter
int3
or
and
xor
or
xor
lds
sub
inc
sub
mov
and
jecxz
jg
pop
addr16
ss
fisttpl
xchg
add
in
es
ss
push
insb
xchg
pop
lahf
and
ljmp
shrb
xchg
mov
ljmp
mov
dec
jae
inc
shlb
rcrb
add
mov
push
outsl
and
push
and
int3
cwtl
or
xor
push
xchg
or
enter
call
xchg
mov
ja
call
dec
jle
daa
jl
adc
or
dec
pop
call
je
ljmp
adc
push
inc
leave
inc
jno
dec
in
decl
iret
inc
adc
hlt
shll
in
mov
lret
mov
lret
jmp
adc
ja
lcall
lock
mov
sub
dec
data16
and
pop
xor
loope
sti
cltd
sub
repz
push
in
jp
inc
rolb
jae
adc
fs
xor
jns
cmp
pop
xorl
fwait
sub
fwait
test
jmp
int3
js
mov
imul
mov
add
insl
mov
daa
loop
xor
mov
sbb
or
mov
fldenv
ljmp
mov
enter
jb
inc
decl
inc
out
mov
mov
dec
ret
lods
lods
cmc
aas
dec
arpl
lcall
fsubrs
xor
into
je
shl
pop
jae
dec
xor
ret
test
or
in
dec
or
imul
pop
jl
dec
out
int
cmc
stos
inc
cld
lcall
or
test
mov
xor
or
jecxz
sub
jg
xor
aas
xchg
push
rcll
fnstsw
add
sub
mov
push
ja
mov
mov
cmp
cmp
inc
sub
pop
and
incl
and
outsl
add
jl
inc
or
xchg
rcrb
dec
outsl
test
fwait
or
jne
mov
incl
leave
and
inc
sub
cmp
xchg
add
pop
fwait
shlb
aaa
mov
pop
sti
sbb
cmp
pop
popl
aam
add
dec
mov
ljmp
or
mov
xchg
push
push
sbb
and
add
cmpsb
push
fsubrs
loope
fcomip
cmpsb
xchg
inc
cmp
icebp
inc
pop
popa
das
mov
lock
mov
dec
mov
adc
or
or
sahf
lret
adc
add
jg
lcall
cmpsl
repnz
push
test
xchg
in
int3
cmpl
aaa
lds
bswap
inc
repnz
add
add
cli
pop
insb
mov
sub
popa
adcl
out
dec
adc
dec
mov
ror
jnp
mov
int
xor
in
aam
cwtl
xchg
push
sahf
adc
sub
in
cmp
jg
adc
call
mov
sub
pop
pushl
or
mov
fbld
jno
dec
inc
das
inc
xor
xchg
push
das
push
dec
pop
mov
fisubl
push
cmpsl
push
daa
dec
cmp
unpckhps
out
push
enter
add
incl
pop
dec
outsl
xchg
stos
push
and
push
fcompl
dec
sub
jecxz
cli
dec
xor
idiv
hlt
sahf
pop
sub
call
popf
sub
adc
jge
call
jmp
movb
rcr
in
inc
mov
lret
cs
pop
dec
or
call
push
rorl
bound
sub
sub
xor
inc
cld
sub
jg
jmp
inc
dec
add
push
aam
lea
xor
enter
pop
loopne
jge
in
pushl
fnstsw
sbb
pop
loopne
stc
jae
or
cmp
jg
hlt
inc
icebp
jmp
rorl
sbb
loope
dec
dec
les
cli
push
add
fldt
push
or
and
decl
stc
cmp
or
ljmp
jno
mov
dec
loope
test
xlat
insl
scas
mov
cmc
jg
lods
dec
cmpsb
or
mov
push
jp
adc
pop
in
pop
lods
mov
jg
add
pop
sub
and
cmp
sarb
cmp
insl
jmp
pop
mov
sub
xor
add
fimull
or
xchg
mov
push
punpcklwd
mov
imul
mov
fists
pop
mov
and
mov
xlat
cmp
aam
sarb
or
test
mov
hlt
orl
mov
dec
inc
and
dec
xchg
movsb
xchg
push
std
jp
xchg
jg
jge
jp
add
sbb
shrl
mov
xchg
xorb
mov
incl
cmp
aaa
loope
jg
xchg
sbb
mov
push
imul
ucomiss
add
shr
je
mov
xlat
stos
mov
push
sar
or
call
push
and
pop
fsubs
fwait
sub
lret
enter
divb
lret
rorl
and
decl
push
xchg
test
mov
push
jmp
push
adc
xchg
loopne
inc
cmp
cmp
mov
ds
or
movsbl
xor
or
add
xchg
jne
stc
sub
loopne
add
pop
add
call
cli
mov
push
and
mov
cltd
decl
data16
pushf
nop
push
add
adc
cld
incl
std
jne
mov
imul
xor
aam
dec
sarb
lock
out
aaa
or
jmp
xlat
pop
push
push
push
int
clc
jmp
fsubrs
or
mov
mov
aam
cmp
insb
rcl
jg
add
shlb
arpl
inc
adc
je
and
fcomip
mov
adc
pop
roll
push
fistpll
cld
or
or
xor
and
sub
jp
sub
popf
adc
sbb
push
push
push
shl
inc
mov
lcall
or
shl
es
incl
lds
aas
add
enter
cmp
lahf
mov
push
jle
in
jne
jbe
andl
dec
cmpb
inc
mov
call
jg
movl
je
frstor
mov
xchg
inc
clc
xor
add
dec
push
cmp
insb
mov
inc
push
popa
insl
inc
jns
std
lcall
dec
int
push
push
adc
jae
push
gs
jmp
xor
push
popa
call
mov
pop
aaa
int3
dec
icebp
pop
push
dec
cmp
lods
imul
outsl
je
add
jmp
lock
push
fidivs
or
or
incl
stc
fidivs
dec
or
inc
add
gs
arpl
gs
or
dec
and
sub
inc
dec
add
adc
in
scas
data16
mov
decl
push
clc
push
insb
fisttps
and
add
aam
add
decl
pushf
jbe
add
dec
stc
insl
add
incl
push
iret
add
add
dec
rcrb
or
xchg
test
inc
mov
cmp
push
outsl
daa
or
decl
loop
mov
adc
inc
fwait
adc
xchg
mov
enter
fs
push
push
lock
push
lods
add
nop
add
dec
mov
jmp
adc
popf
incl
decl
add
mov
inc
xchg
push
or
adc
and
pushl
jae
outsb
or
stos
leave
dec
and
roll
jl
imul
jmp
das
addr16
sbb
add
cld
and
xor
or
mov
nop
int
cmpsb
fsubp
adcb
ljmp
jb
cmpsb
enter
or
dec
pop
pushf
mov
sahf
loope
adc
jl
pusha
cmpsl
fucom
jecxz
mov
and
dec
ret
inc
add
rcrb
movsb
mov
push
cld
call
xchg
das
clc
dec
dec
push
pushf
pusha
inc
addl
add
jmp
pop
fisttps
fisttpl
inc
inc
xlat
adc
lret
das
in
or
dec
mov
jg
in
shrb
outsl
and
mov
push
sbb
les
and
lcall
inc
pop
pop
pop
inc
xchg
adc
or
jg
hlt
push
outsb
push
cmp
insb
sub
jo
out
sbb
inc
fwait
pop
orl
lock
dec
into
lods
sub
dec
push
and
jp
call
incl
adc
inc
imul
add
xlat
mov
jmp
and
scas
push
cmpsl
out
rolb
jno
jmp
or
sbb
hlt
xchg
test
cltd
insl
inc
fisubrs
ljmp
sbb
test
hlt
pop
dec
mov
out
fs
ss
add
and
in
mov
and
movsl
sbb
ds
sbb
mov
outsl
xchg
or
mov
inc
jg
or
sarb
notb
inc
lahf
ljmp
push
popa
fcomip
jmp
inc
xchg
jg
push
ljmp
ds
data16
rorb
pushl
inc
xchg
fsubrs
mov
dec
clc
or
cltd
add
mov
pop
dec
and
sub
and
push
js
inc
imul
lahf
jmp
outsl
ljmp
outsl
in
and
lahf
inc
inc
xor
inc
add
mov
test
sub
xchg
stos
rclb
ds
ljmp
push
cmc
and
jo
inc
add
pop
stos
sub
inc
jmp
mov
or
aaa
cltd
scas
cmp
adc
jae
test
ljmp
and
aaa
lods
xorb
mov
mov
loopne,pn
cmp
jmp
daa
add
int3
cmp
sbb
sarl
call
mov
mov
sub
dec
imul
outsl
pushf
or
leave
pop
lcall
lcall
call
push
bound
inc
inc
push
pop
mov
outsl
test
je
rolb
or
inc
jno
add
fisttps
pop
jno
mov
into
sbb
scas
push
adc
incb
adc
in
sti
and
ljmp
pop
scas
sub
add
lcall
ja
fisubrl
add
mov
fbstp
cmp
in
pop
das
or
mov
loopne
cmp
repz
bound
mov
pop
xlat
or
push
mov
add
pop
cmovs
push
push
sbb
cwtl
imul
and
sti
orb
jg
sbb
push
inc
mov
cmp
or
push
xor
and
or
or
dec
or
add
hlt
js
fst
fidivrs
cmc
ficompl
daa
faddl
mov
in
scas
jg
add
mov
or
add
jne
jo
or
std
pop
push
or
lock
sub
mov
xor
inc
dec
lock
loop
jbe
sbb
ss
les
orl
loopne
mov
decl
dec
mov
aaa
mov
or
je
xor
xchg
xor
insl
add
ret
incl
inc
inc
insb
dec
inc
add
and
and
mov
push
mov
enter
mov
sub
inc
inc
mov
cld
lcall
inc
pop
dec
movsb
orb
mov
xchg
ljmp
popa
fstl
pop
pop
and
or
pop
cmpb
shlb
cli
add
and
add
es
shrl
mov
fbld
push
mov
push
out
or
mov
sahf
add
and
inc
loopne
js
sub
pushl
inc
loopne
notl
inc
stos
push
and
inc
mov
pop
add
adc
and
outsl
fisttps
jo
nop
sub
push
test
add
inc
clc
cwtl
cwtl
jae
lret
inc
ljmp
mov
sub
mov
mov
test
jbe
lcall
out
jecxz
ret
mov
cmp
or
orb
mov
push
ficomps
add
mov
cs
or
sub
outsl
jp
das
add
cmp
rcrb
test
call
push
pop
mov
cs
fcomp
xor
dec
sub
inc
fsub
push
lods
aam
adc
sub
jo
cmp
in
sbb
stos
rclb
insl
xor
xchg
mov
arpl
incl
sbb
push
popa
gs
sub
pop
pop
xchg
xor
push
pop
dec
pop
pusha
scas
ss
ss
push
daa
decl
or
sbb
enter
or
add
rorl
das
data16
aaa
add
pop
ret
or
call
pop
sti
aam
adc
mov
and
mov
leave
sbb
and
jg
cmp
adc
pop
jmp
ljmp
cmp
adc
ljmp
inc
pushl
cmp
add
movsb
aas
xor
mov
sbb
cmp
incl
repnz
lcall
add
sarb
or
fnsetpm(287
mov
jl
jae
xor
mov
pop
dec
hlt
pop
push
or
dec
lcall
lods
addb
outsb
pop
cmp
incl
and
inc
aam
pop
dec
test
jo
mov
sbb
mov
test
inc
xchg
dec
out
or
cmovge
in
inc
movsl
loop
mov
mov
sbb
and
xchg
push
pusha
cwtl
adcl
cwtl
dec
jb
outsb
dec
cwtl
mov
push
cmp
sbb
pop
mov
test
xchg
xchg
test
mov
adc
aam
data16
dec
push
cs
cltd
enter
pop
mov
loope
fs
add
dec
fs
lret
dec
pop
test
aaa
push
sarb
cwtl
enter
sub
or
inc
cld
call
shrb
push
movsb
and
call
jp
lea
jb
inc
ret
popa
popl
das
sar
out
cli
inc
mov
xor
outsl
push
mov
cwtl
stos
xlat
popf
push
inc
xchg
das
pop
push
aas
incl
out
dec
mov
dec
mov
adc
cmp
or
push
adc
shrb
pushf
add
fcomip
popf
inc
aaa
xchg
inc
stos
push
mov
and
mov
xchg
insl
pop
test
push
aam
mov
orl
cmp
or
int
or
ljmp
inc
lret
lret
jb
ret
loop
or
mov
cld
fistps
push
movsl
dec
mov
push
shl
mov
mov
jg
iret
adc
pop
mov
dec
pop
or
push
pop
pop
jmp
pushl
xchg
aaa
pop
lcall
push
mov
or
addb
cmpsl
and
dec
insl
and
and
decl
sub
jg
adc
sub
cmp
xor
dec
xchg
inc
fcomip
jmp
in
sbb
dec
xchg
repnz
push
test
int3
cmp
fimuls
push
fcompl
add
add
sub
pop
ja
dec
jae
or
push
fcmovne
scas
decl
mov
mov
and
cli
adc
in
out
add
mov
fdivp
decl
mov
sub
fildll
or
mov
fists
add
add
pop
and
dec
jne
sbb
cmp
leave
clc
incl
mov
dec
cmpsb
push
pusha
pop
pop
fistl
adc
lcall
sarb
or
test
mov
ret
mov
inc
sub
mov
shr
xor
movsb
inc
push
enter
cmpsb
cmp
repnz
xchg
sub
dec
in
cltd
aam
adcb
xchg
out
adc
mov
add
xchg
fs
cmp
ljmp
or
rolb
adc
sub
enter
fadds
mov
jne
aas
pop
mov
outsl
and
xor
pop
fsubs
das
sbb
mov
movsb
jmp
std
lret
or
mov
movl
inc
call
sbb
add
enter
pop
aam
dec
xchg
sbb
adc
inc
in
int
incb
test
cmp
es
adc
rorb
call
inc
or
sarb
sbb
insb
enter
xor
loopne
push
pop
jo
cmpsl
inc
lods
mov
inc
std
in
insl
and
dec
pop
adc
xlat
movsb
dec
inc
orb
mov
clc
fistpl
ds
sbb
mov
repnz
or
and
xor
pop
out
sbb
inc
inc
es
push
or
sbb
cmpb
push
xchg
sbb
mov
rorb
ds
mov
inc
sbb
jb,pn
sub
mov
ret
pop
sbb
scas
and
rorb
sbb
leave
xor
or
adc
inc
add
push
js
ret
push
pop
or
mov
pop
outsl
in
jg
ret
dec
sahf
sbb
and
mov
sbb
xor
adc
pop
mov
testb
test
mov
cmp
mov
loopne
cs
or
xor
push
jl
ds
icebp
iret
arpl
les
mov
ja
sbb
shlb
jg
dec
pop
inc
dec
lcall
add
push
das
push
dec
dec
nop
mov
dec
and
cs
decl
outsl
xor
xor
or
fwait
outsl
adc
call
aas
inc
pop
aaa
adc
mov
outsb
or
das
xchg
cmc
call
cmpsl
xor
dec
add
sub
add
dec
scas
mulb
adc
pop
in
xor
add
in
inc
repnz
es
mov
xorb
dec
mov
pop
inc
cld
and
fimull
cmpsb
mov
sub
filds
add
aaa
lahf
cmp
jg
mov
test
ljmp
cmp
pop
icebp
call
push
cmp
sbb
mov
push
dec
mov
ljmp
inc
test
jno
push
aam
sub
lcall
lcall
adc
fsubl
jo
sbb
fnstsw
sbb
adc
push
mov
or
fwait
pushl
loope
inc
test
xor
push
imul
test
pop
pushl
sub
jp
or
aam
rolb
xchg
xchg
add
sub
das
xor
add
ret
and
lcall
fbld
call
xor
or
sar
call
add
xchg
imul
sar
dec
test
jl
call
adc
mov
xor
or
frstor
inc
xor
and
aam
in
xor
incl
add
mov
pop
xchg
pop
cmp
mov
outsb
loop
rcrl
dec
cli
ud0
mov
das
or
clc
jge
pop
stc
ds
mov
push
aas
inc
lods
pushl
rol
xchg
xchg
nop
pop
sub
xchg
lret
xchg
nop
and
insb
std
pushl
xchg
xchg
dec
sub
and
inc
xor
jg
xor
lcall
cmc
mov
push
xchg
xchg
push
pop
xchg
out
xor
fs
pop
push
and
push
outsl
push
and
cmp
mov
inc
clc
lcall
xorb
and
addb
and
cmp
incl
xchg
xchg
js
ret
cmpsb
mov
add
imul
or
incl
pusha
pop
fisubs
cmp
adc
or
mov
je
insb
repnz
repnz
lcall
lcall
ss
xchg
add
pushf
cwtl
push
pushf
cmp
pushl
std
and
push
pop
nop
enter
shlb
movsb
mov
and
call
adc
push
lret
aaa
dec
lock
sbb
adc
mov
cld
outsl
adc
mov
cwtl
test
fisubrl
orb
dec
push
inc
adc
clc
dec
push
arpl
or
arpl
cltd
add
dec
lea
pop
pop
in
clc
mov
mov
testl
dec
aaa
xor
add
dec
popa
lods
mov
jmp
mov
push
adc
popa
pusha
rcr
invd
orb
mov
push
adc
fists
adc
mov
mov
mov
stos
in
adc
je
jno
lret
fiaddl
lods
imul
sbb
lcall
fcoms
daa
push
pop
sbb
repnz
insl
aad
xchg
adc
call
adcb
shll
dec
lods
dec
fldl
out
repnz
orb
jp
or
rorb
sub
jno
addb
add
outsl
rolb
xchg
dec
lds
imull
add
push
loopne
push
pop
fbld
mov
cs
mov
dec
fdivs
movsb
call
pop
jg
mov
addb
daa
xchg
push
mov
sub
ljmp
xchg
aam
mov
sti
mov
push
mov
inc
mov
mov
lcall
jb
mov
cmp
add
sbb
xor
jb
mov
mov
mov
rcrb
rolb
sub
inc
xlat
add
fs
ljmp
dec
add
jb
imul
jp
cs
aam
daa
jp
pushl
fsubs
pop
mov
sbb
repnz
pop
add
sbb
jmp
nop
lock
and
out
ljmp
pop
push
in
call
sbbb
and
add
sbb
jns
popl
insb
add
lds
mov
xor
push
sbb
and
and
in
lods
sbb
mov
sbb
icebp
push
inc
scas
loop
incl
push
dec
xchg
push
xor
jge
movsl
add
dec
pop
xchg
xchg
leave
cltd
push
xchg
fwait
and
ss
and
mov
pop
push
scas
mov
xchg
adc
and
adc
and
lcall
fwait
xlat
cmp
jns
outsl
and
mov
push
gs
add
sub
clc
jmp
mov
mov
mov
rcrb
fxch
dec
fcoms
dec
cs
inc
inc
pop
cld
sub
push
add
int3
enter
jmp
dec
movsb
xchg
pop
push
dec
dec
adc
mov
insl
divl
xlat
xchg
and
mov
push
stos
call
sarb
or
xchg
int
fistl
or
jbe
and
push
mov
and
sub
sarl
imul
or
cmp
push
lahf
mulb
repnz
test
mov
loop
mov
ljmp
pusha
test
pop
jne
mov
in
je
insl
inc
mov
movsb
into
fs
mov
mov
xor
leave
add
call
les
test
pushf
leave
mov
sub
xchg
aas
mov
repz
mov
repz
jns
push
in
loopne
call
jo
add
js
je
push
sets
jmp
jg
test
test
xor
ljmp
inc
outsb
stos
or
cmp
push
mov
or
je
jg
mov
xlat
jae
fwait
cmp
add
incl
inc
scas
data16
or
inc
mov
mov
shrb
xor
pop
sbb
icebp
fcomip
ss
xlat
into
jo
inc
push
and
enter
jg
pop
int3
inc
pop
sbb
outsb
andl
xchg
add
in
daa
popl
add
cli
jb
sub
fbld
fistpl
and
add
mov
mov
incl
push
xchg
jp
jae
sahf
lret
cmp
xchg
lock
cmp
test
inc
dec
add
mov
loope
sub
lcall
outsb
repz
jno
js
shrb
lahf
dec
or
jmp
jbe
dec
push
add
lcall
sub
push
or
jle
ljmp
and
push
adc
sbbl
sub
mov
jb
push
fsub
push
loope
jg
fcomps
jp
dec
adc
xor
adc
or
sub
fdivl
ret
in
aaa
cltd
cwtl
sub
rclb
or
call
pop
xor
adc
pop
jo
subl
inc
rcll
or
mov
cmpsb
mov
or
jmp
mov
adc
ret
pop
mov
add
xchg
clc
decl
jo
repz
ja
cld
pusha
movsl
cmc
mov
pop
dec
cmp
pop
cmc
incl
or
js
sbbl
pop
adc
fisubrl
push
das
dec
repz
cmp
mov
call
je
dec
leave
or
lret
inc
xchg
call
decl
pop
or
push
mov
and
jg
pop
push
andb
popf
sub
pop
mov
add
jge
jg
sbb
jne
cmp
outsb
nop
jge
pusha
sub
dec
ss
mov
and
add
inc
xchg
cmpsl
mov
in
inc
out
or
mov
mulb
es
aaa
dec
test
mov
incl
push
xor
ret
xor
xchg
cmc
lea
lahf
daa
stc
mov
sbb
jne
mov
or
adc
cli
xor
sub
push
pop
mov
and
hlt
lcall
sub
nop
test
or
adc
sbb
pusha
testl
xchg
jmp
in
push
xchg
xchg
repnz
cld
jg
add
add
inc
pusha
mov
push
and
mov
movsb
sbb
rolb
and
iret
call
fdivp
cltd
inc
lock
ret
jl
inc
mov
or
in
outsl
cli
out
push
adcl
mov
or
adcb
incl
pusha
push
sub
sbb
fstpl
adc
clc
jl
cld
mov
das
dec
cmp
inc
inc
cwtl
dec
jne
out
sub
and
ja
or
dec
pop
pushl
add
cmp
outsb
push
xchg
or
test
mov
ss
adc
and
push
je
add
sub
fildll
push
xor
inc
and
mov
lret
rclb
jg
loopne
popl
push
sub
les
scas
clc
dec
add
inc
call
sub
dec
xchg
shl
or
cmpsb
fbstp
adc
enter
dec
push
dec
insl
outsb
mov
rorb
xor
test
pushl
ds
xor
sub
mov
outsl
cmp
xchg
adc
call
les
jecxz
adc
and
sbb
mov
cmp
xor
xor
push
sbb
push
mov
icebp
inc
jnp
adc
add
push
mov
xchg
ficoml
aaa
dec
push
sar
adc
mov
clc
cmp
std
cmp
xor
add
adc
jmp
addr16
fcomps
call
and
xor
jb
loop
adc
clc
sbb
sbb
adc
sbb
add
jp
mov
imul
and
xor
imul
out
fdivr
ja
clc
call
cmpsl
insb
adc
dec
in
popa
js
push
sub
rcrl
outsb
pop
or
in
jne
das
ss
fbld
inc
xchg
mov
lret
iret
sub
fcmovne
lock
pusha
push
test
sbb
int
and
jmp
int
jno
iret
jbe
or
ss
hlt
push
bound
xor
sbb
jne
pushl
repz
ret
add
mov
push
push
mov
xlat
push
push
stos
add
or
lcall
ret
mov
fstps
aas
inc
imul
mov
and
xor
sahf
in
adc
inc
imul
sub
aas
cld
mov
shrl
push
js
dec
loopne
fisttpl
lods
shll
xor
and
scas
movsb
xchg
and
popf
push
inc
sub
or
outsb
ljmp
hlt
jnp
sbb
and
pusha
fcompl
cmp
add
xor
daa
add
mov
mov
rolb
iret
aas
pop
cmp
mov
stos
scas
pop
pop
pop
enter
and
ss
lock
ljmp
inc
pop
adc
inc
jnp
cmp
sbb
into
xor
sub
ljmp
dec
and
ss
imul
roll
or
out
ljmp
daa
mov
aaa
rcrl
and
mov
cwtl
flds
fcomip
lcall
inc
inc
pop
xchg
cmpsb
mov
adc
shrb
lock
mov
mov
jl
jmp
add
testl
or
orl
hlt
pop
dec
xchg
add
dec
and
add
nop
push
add
mov
lods
sub
sbb
es
and
cmp
jmp
icebp
dec
fwait
xor
inc
push
or
int3
adc
push
repz
mov
mov
and
pop
movsl
loope
shll
sub
push
and
sbb
pop
bound
dec
loopne
jmp
add
pop
adc
sbb
nop
mov
outsb
push
inc
adc
mov
pop
jb
pusha
decl
inc
jb
mov
add
mov
push
or
imul
stos
cli
cmp
loope
inc
inc
pop
sub
addr16
push
sub
sbb
cmp
mov
fistpl
into
cmc
data16
or
ljmp
test
or
repnz
inc
adc
push
lcall
cli
or
aaa
lods
dec
inc
or
cmp
cmp
mov
xor
jg
adc
ljmp
push
les
pop
insb
je
push
inc
fcoms
xor
xor
xor
cmp
add
xchg
fnsave
add
jo
lock
ljmp
fidivrl
mov
mov
rolb
lcall
xchg
lcall
adc
pop
das
mov
inc
pop
incl
dec
xchg
clc
pushl
dec
sbb
or
daa
sbb
ljmp
pop
push
push
push
iret
sarb
pop
and
out
jl
pop
fisubrl
out
pop
inc
mov
adc
aam
pushl
movsl
daa
shlb
imul
and
idiv
mov
or
inc
sub
pop
cmp
dec
push
dec
sub
adc
idiv
inc
adc
pushf
cmp
xchg
adc
adc
add
incl
popa
ficoml
orl
mov
shll
shrb
sub
lret
std
int
xchg
cmc
or
adc
pusha
mov
pop
inc
loope
in
lds
lcall
dec
ficompl
dec
lcall
cmp
dec
cmp
dec
pusha
pusha
xchg
out
sbb
and
in
or
sub
inc
mov
rorb
adc
jg
lret
orl
add
enter
inc
cmp
jnp
rorb
sahf
cli
gs
hlt
ret
in
cmc
out
adc
dec
inc
ret
push
cs
sub
fbld
jg
xchg
or
movsl
inc
push
cmp
adc
inc
cmp
xchg
pop
mull
push
call
pushl
call
sar
and
mov
sub
sub
lret
inc
push
and
inc
clc
inc
xchg
pop
hlt
cmpsl
outsl
or
inc
enter
hlt
call
pushl
pushf
mov
sbb
mov
les
les
push
enter
out
fsubrs
jp
test
fcomip
sub
fadd
sbb
lea
add
pushf
sub
inc
sbbl
or
fdivl
mov
jg
inc
in
adc
push
andb
arpl
push
loop
jmp
lcall
sti
jae
lea
or
mov
gs
mov
inc
roll
lcall
rolb
push
sbb
cld
adc
and
mov
cmp
or
push
mov
add
nop
pop
and
xchg
into
mov
lock
xchg
and
fisubs
sbb
lods
cli
fistps
loopne
add
add
sub
aam
cmpsl
call
movsb
add
movsl
hlt
jg
test
inc
pushf
out
ret
addb
daa
hlt
pushl
movsl
or
addr16
jp
jecxz
dec
jl,pt
or
inc
aam
mov
mov
lcall
pop
addr16
xchg
jnp
jg
scas
inc
adc
sbb
push
rclb
fadds
dec
sub
cmp
lds
lock
dec
cmp
stos
clc
enter
jg
ds
ds
fbstp
lcall
push
mov
sbb
jl
shlb
mov
push
stos
mov
orb
mov
mov
in
inc
sub
dec
loop
pop
cmpsb
xchg
rcl
mov
out
or
testl
cmp
push
push
aam
xlat
roll
inc
and
test
ljmp
inc
lock
orb
adc
sbb
nop
gs
dec
xchg
test
incl
xchg
fsubrs
cmp
ja
inc
dec
inc
cmp
xchg
add
inc
inc
xchg
fisubs
aaa
cmp
fildll
adc
push
ret
push
js
inc
mov
push
clc
inc
out
rcrl
jne
cltd
fisubrl
cli
clc
or
test
repnz
and
ss
dec
addl
xor
jo
shlb
and
push
cmp
inc
sub
adcb
cld
aaa
mov
lcall
adc
call
dec
push
sbb
jo
bound
adc
jg
sbb
xchg
adc
lcall
lret
sbbb
repnz
rcl
xor
aad
push
rol
xchg
aad
popa
mov
mov
pushl
dec
inc
push
stc
adc
jns
aad
jb
sub
jbe
mov
xchg
nop
pusha
sahf
inc
ljmp
inc
arpl
add
or
jns
orb
pop
cld
incl
add
test
or
arpl
cmpsb
adc
mov
ljmp
inc
sbb
inc
dec
sbb
cmp
inc
inc
inc
jge
inc
mov
iret
dec
fadds
dec
sbb
ljmp
test
mov
push
loopne
and
testl
xor
shl
outsl
xor
jg
mov
in
cmp
pop
sub
push
and
fcomip
ljmp
je
mov
in
add
dec
movsb
sub
add
into
shlb
cmp
idiv
call
out
int3
das
jo
xchg
out
dec
or
dec
daa
push
mov
pop
dec
dec
shlb
dec
dec
mov
sbb
xor
xor
xchg
imul
inc
sahf
xchg
mov
mov
cs
cwtl
push
outsl
scas
mov
and
add
jg
movb
test
shll
pop
mov
and
cmp
jne
out
dec
test
sbb
jle
cld
jg
jnp
jl
decl
leave
dec
cmp
jbe
inc
fiaddl
aaa
std
aas
xor
xor
addl
or
outsl
xchg
cs
inc
imul
stos
sub
test
aaa
sarb
cwtl
fs
xor
or
xlat
lods
aaa
test
pop
sub
dec
adc
andl
mov
mov
cmc
lods
cmp
loope
addr16
sub
clc
decl
hlt
lahf
push
rcl
add
movsb
xchg
je
das
clc
aam
add
shlb
and
decl
sub
xlat
jp
xor
bound
xchg
cld
inc
and
ret
adc
jne
add
popf
adc
or
jg
test
adc
inc
add
push
lret
and
popf
xor
sub
fcomip
clc
pop
in
push
out
or
loopne
call
fs
addr16
cmpsb
nop
and
insl
add
mov
add
inc
sub
or
push
mov
daa
pusha
xchg
sbb
or
add
aaa
rcrl
adc
cli
or
cmp
inc
push
push
loop
or
push
push
add
mov
inc
pop
jg
and
sbb
push
je
clc
xchg
inc
mov
shll
cld
jmp
push
outsl
les
lods
int3
test
insb
fadd
jae
mov
orl
mov
insl
mov
popf
mov
outsl
inc
jmp
mov
decl
lea
inc
add
push
mov
inc
pop
xchg
and
xlat
mov
ljmp
fcoms
sub
test
mov
daa
or
jb
stc
inc
std
ljmp
push
hlt
push
clc
mov
testl
aas
mov
shrb
call
push
sub
adc
sub
xorb
pop
sti
and
xor
les
dec
outsb
adc
and
jle
fildll
call
fwait
and
adc
push
aaa
fsub
outsl
jp
aam
adcb
imul
dec
repnz
insb
adc
dec
test
sbb
nop
inc
sbb
aas
or
loope
je
imul
inc
xor
jmp
or
adc
inc
ljmp
jp
add
add
add
adc
xchg
xlat
lcall
fmull
nop
fwait
dec
loop
pop
push
add
jne
imul
repnz
pop
lock
js
mov
xchg
ror
out
loopne
pop
mov
in
jg
sbb
sbb
sbb
orb
inc
mov
add
xchg
jmp
or
add
lods
ljmp
xchg
sub
push
adc
ljmp
lock
cmpsb
loop
add
lahf
clc
int3
mov
incl
mov
xor
sub
add
mov
sub
lcall
in
stos
push
enter
sub
sbb
les
lods
dec
lcall
mov
ret
lcall
pop
push
sbb
lahf
or
xchg
es
mov
mov
pusha
mov
lcall
or
and
loope
inc
push
sub
out
and
and
js
mov
sub
lock
jo
add
ja
es
add
or
stos
fcomip
outsb
xor
mov
jae
sbb
fidivl
fistpll
ja
and
test
shrl
xchg
ljmp
ret
sbb
icebp
mov
xor
test
or
inc
sbb
mov
pop
or
mov
mov
cmp
aaa
mov
cmp
and
mov
dec
or
xor
dec
dec
dec
inc
sar
add
dec
add
cld
daa
in
mov
sub
sbb
dec
jns
mov
and
lcall
std
pusha
shll
ja
dec
xor
or
dec
das
inc
test
mov
or
scas
and
outsl
mov
push
push
sub
cli
aas
pop
pop
popa
bound
inc
push
pop
popa
cld
inc
adc
ljmp
mov
icebp
call
jp
xchg
hlt
or
fstl
mov
das
push
lea
mov
add
movsw
jo
xor
call
sbb
adcl
or
xor
add
inc
call
loopne
push
cmp
push
or
mov
js
inc
decl
lock
cmp
adc
jo
mov
inc
loopne
pushf
adc
mov
dec
mov
lahf
mov
es
lods
push
ds
mov
xchg
pop
aam
clc
ljmp
pop
enter
mov
sub
das
mov
xor
mov
adc
call
xor
push
pop
cmp
pop
push
and
call
jp
cmpsl
sbb
or
arpl
pusha
mov
xor
idiv
call
adc
mov
dec
pop
add
ds
cmp
xchg
dec
mov
mov
pop
sub
cli
lcall
in
mov
xor
inc
jo
imul
call
cmp
push
xchg
inc
and
add
sbb
adc
mov
daa
aas
or
mov
test
jmp
push
inc
dec
inc
or
sbb
pop
leave
xchg
or
sbb
lsl
cmpsb
pop
icebp
addl
rcrb
mov
dec
cs
adc
out
cli
clc
push
jg
cs
sbb
js
pop
jg
cmp
mov
sbb
or
jb
jle
push
sub
lcall
or
and
pop
sbb
push
orl
lods
mov
pushl
or
cmp
xor
mov
xor
cmp
cmp
lods
push
adc
and
and
mov
or
sub
negb
xchg
into
lahf
into
mov
or
test
xorb
inc
cld
stos
pushl
jle
ja
les
push
pop
call
lret
addr16
pushl
sub
xor
pop
cwtl
mov
or
clc
decl
xchg
scas
bound
pop
xchg
push
cmp
inc
and
fdivl
inc
dec
and
movsb
add
fcomip
clc
mov
decl
inc
test
mov
pop
loop
and
inc
adc
clc
lcall
adc
and
push
dec
mov
mov
jp
decl
in
out
repz
mov
jo
lcall
cmp
incl
pop
sub
lock
xchg
cmp
sbb
dec
incl
push
push
mov
aaa
inc
popf
sbb
decl
push
test
nop
mov
push
repnz
mov
jp
decb
jg
decl
push
mov
or
loopne
jge
adc
ljmp
shrb
jo
ret
xor
xchg
adc
pop
out
xchg
pushl
sbb
xchg
dec
add
mov
mov
gs
nop
xchg
arpl
cli
decl
arpl
push
dec
lahf
mov
push
lcall
pop
xchg
ljmp
clc
sub
adc
lods
andl
mov
xor
call
std
fs
push
call
dec
movq
mov
outsl
outsl
nop
fadds
imul
ljmp
pop
lret
cmpsb
hlt
inc
ja
loope
ret
push
das
inc
ljmp
test
push
inc
imul
xor
lock
or
or
or
aaa
stos
fisubrs
cs
jl
movsb
insl
push
or
and
lahf
pop
int3
or
ljmp
nop
jae
popa
pop
in
jo
mov
pop
sub
or
js
outsl
push
pop
sbb
out
nop
fdivl
inc
pop
fstps
cld
jb
incl
cmp
jae
xor
repnz
iret
add
outsl
adc
xor
cld
cmp
pop
adcl
inc
push
push
hlt
lds
or
adc
pop
stos
inc
mov
fcomip
ja
xor
popa
inc
inc
pop
les
das
dec
or
ficoms
xchg
imul
out
adc
cld
das
jne
mov
add
add
das
outsb
mov
cmpsb
outsl
hlt
xchg
sub
arpl
das
push
outsl
fildll
sub
push
jne
loopne
or
push
or
shrl
lcall
lods
adc
sub
pop
dec
imul
mov
pop
mov
add
and
imul
mov
jmp
or
addl
cmp
sbb
xor
adc
pop
dec
mov
lret
int3
jae
pusha
imul
cwtl
sbb
aas
rorl
bound
or
push
add
sub
out
inc
inc
aaa
stos
push
fstpt
incl
and
lock
sbb
insb
aas
and
pop
ret
adc
push
repnz
push
push
mov
sbb
inc
sub
or
push
pop
dec
ret
sarl
jmp
push
push
movsb
push
xchg
decl
inc
jmp
xchg
push
ret
cmp
insl
or
pop
sub
call
jle
mov
add
add
outsb
nop
inc
cmp
adc
adc
aaa
insl
inc
je
ss
out
es
ja
daa
pushl
push
xchg
call
ljmp
call
xchg
add
mov
adc
mov
jg
test
lods
xor
push
and
and
xorl
push
adc
fcomip
pop
movsb
cmpsb
jle
adc
hlt
stc
push
hlt
add
or
cmp
add
xor
roll
jnp
popf
push
add
pop
jmp
add
add
imul
daa
ss
lcall
repnz
and
or
add
mov
push
jno
xchg
inc
shlb
sbb
add
sahf
js
jns
movsb
not
shl
icebp
ljmp
and
and
add
sub
pushl
inc
loope
add
pop
push
movsl
pusha
test
jl
movsl
int
clc
movsl
cld
call
sub
mov
mov
incl
jmp
xor
mov
and
and
popa
imul
xchg
jge
out
pop
insb
xchg
dec
add
mov
xor
call
xor
loop
out
add
jecxz
sub
xchg
data16
call
add
je
in
or
jns
sbb
jecxz
push
jmp
nop
xchg
addr16
mov
xor
cmp
sub
fs
dec
mov
fbstp
js
inc
mov
sbb
out
cmpb
inc
jae
pop
mov
and
push
xchg
movsl
shll
jmp
adcl
aaa
lock
sub
cmp
and
or
mov
inc
cld
lcall
movsl
imul
enter
lcall
lahf
ds
les
les
insl
xor
es
imul
cmp
mov
xchg
inc
or
inc
dec
jo
jo
lcall
dec
add
mov
adc
es
jmp
pushf
push
push
add
cwtl
push
shrl
rorb
inc
add
mov
lock
movsb
xor
ss
decl
push
cmp
push
icebp
aam
leave
add
incl
or
cmp
dec
xchg
add
ret
mov
lcall
bound
pop
and
popa
fs
out
es
jmp
mov
pop
inc
fsubp
jnp
pop
mov
and
pop
push
incl
add
jnp
int3
cmpsb
or
cmp
add
jo
mov
inc
adc
sub
jne
add
jae
mov
nop
xchg
and
fwait
ss
mov
cld
cmp
cmp
xchg
hlt
lock
shlb
push
jb
loope
dec
pusha
inc
jmp
incl
xchg
das
arpl
movsl
or
jbe
add
inc
arpl
pop
jmp
lods
or
pop
je
xor
insl
or
je
inc
push
pop
pushl
fwait
dec
cmc
and
mov
imul
push
lods
mov
xchg
push
out
add
pop
add
jb
jl
fwait
pop
incl
ss
test
clc
call
cwtl
call
mov
mov
je
dec
and
lea
fildll
in
pop
mov
fldt
faddp
daa
loope
push
sbb
lds
pusha
xchg
bound
and
sti
je
scas
pop
push
push
inc
jg
js
push
xlat
or
daa
dec
adc
mov
loope
xorb
add
push
stos
mov
js
jbe
inc
clc
out
cmp
ja
lock
inc
filds
or
ja
mov
insb
or
test
loopne
fdivs
ficomps
mov
fbstp
test
movsb
inc
ret
xchg
jmp
mov
popf
insl
enter
clc
jmp
mov
ret
pop
mov
jnp
lea
dec
jne
mov
fdivrp
loopne
xor
fs
test
call
es
clc
outsl
cli
ljmp
cmp
push
cmpsl
dec
or
dec
jbe
pop
mov
ja
inc
and
xor
pop
test
or
ret
cmpsl
dec
std
cmpsb
xchg
cmp
ja
mov
inc
add
add
xchg
jo
and
ret
clc
ljmp
popa
add
add
fiadds
dec
jg
sub
cmp
add
in
lds
addl
push
xor
rcrb
cld
fucomip
jo
mov
das
sub
and
sub
adc
js
decl
and
cmp
add
pop
mov
gs
rorl
stos
jg
or
loop
add
mov
pop
call
adc
mov
xor
fwait
in
test
mov
mov
inc
and
and
or
scas
or
pop
xchg
imul
nop
fwait
stos
or
les
inc
lock
fs
incl
inc
push
insb
or
inc
xchg
push
cmp
or
push
inc
rcll
push
scas
mov
mov
es
xchg
sub
push
cs
and
ret
loopne
adc
and
movsl
std
out
pop
mov
jae
iret
fisttpl
or
cmp
cmp
mov
pushf
outsl
mov
cld
inc
fwait
xor
or
xor
sub
pusha
xchg
jp
stc
push
adc
mov
sub
jp
outsb
pop
ret
insl
cmc
mov
pop
push
jg
test
fiadds
pop
push
adc
jmp
pop
data16
cmp
es
xor
mov
rcll
and
dec
dec
test
pop
dec
sbb
cwtl
adcb
aaa
or
fildl
jmp
push
xor
orl
call
push
ffreep
lcall
bound
and
imul
outsl
mov
xchg
dec
jmp
add
push
lahf
inc
pop
cmp
xor
push
stos
jo
lret
and
mov
xor
daa
add
leave
movsb
xor
cld
xor
mov
mov
mov
mov
mov
mov
or
mov
xlat
mov
mov
ret
mov
cmpsb
lcall
movsl
test
push
inc
aaa
push
or
xor
jp
mov
xchg
pushl
mov
xchg
adc
in
pop
popa
xor
dec
jge
dec
enter
call
ljmp
sub
cltd
es
xor
dec
sbb
dec
imul
push
daa
aas
imul
decl
out
push
inc
adc
fs
leave
inc
jmp
mov
adc
popf
sbb
mov
sbb
ljmp
incl
mov
inc
std
dec
jne
xor
je
xchg
mov
adc
jg
loopne
in
adc
pushl
enter
mov
repnz
ficoml
xchg
cmpsl
inc
imull
les
add
and
xchg
hlt
mov
xor
jg
call
loop
jbe
ljmp
xchg
cmp
inc
and
xor
and
push
std
lods
cmp
decl
jle
cmp
outsl
mov
jno
cmp
sub
faddl
mov
pop
nop
out
jg
cmp
jne
int
mov
popf
test
call
hlt
inc
dec
fisttps
inc
jl
fcoms
xor
xchg
aaa
fisttps
je
push
rolb
jg
push
and
jnp
inc
dec
and
rorw
ja
mov
push
jns
dec
push
adc
push
xchg
and
inc
sbbb
adc
or
pushl
enter
lret
xchg
push
dec
add
adc
inc
sub
imul
scas
mov
or
pause
das
cmp
mov
ss
sub
test
cmpb
pushl
sbb
jne
lock
lock
roll
push
movzwl
std
pop
in
pop
sub
cmc
sarl
xchg
movl
adc
xchg
vmaxsd
adc
in
mov
mov
lods
clc
mov
subb
stos
jecxz
jmp
ret
clc
mov
in
pop
adc
subb
jno
jmp
xorl
or
int
addl
xchg
or
pop
adc
add
nop
mov
and
aas
or
fisubl
mov
movsl
test
pop
jl
out
add
dec
push
rorb
cltd
cli
or
jb
outsb
pop
or
and
cmp
outsl
inc
sbb
adc
aas
add
lret
adc
xor
add
mov
pusha
add
push
rolb
adc
fcoms
cli
fists
add
sbb
jne
inc
cld
aaa
adcl
add
icebp
jg
cmp
push
fadds
add
mov
fdivl
inc
subb
xchg
mov
mov
clc
jne
xchg
fsubs
add
decl
cmp
js
and
add
test
pop
add
decl
push
cmp
test
xchg
adcl
mov
sub
lcall
lods
pop
lret
es
stos
jae
adcb
neg
dec
or
and
xchg
js
fs
xor
cli
mov
aam
fucomip
adc
cmp
add
movsb
lahf
ss
loope
sub
pop
mov
sub
movsl
das
aas
cmp
inc
jl
shrb
jo
mov
insl
int
fwait
gs
test
das
inc
or
fdivs
iret
sbb
scas
cli
lcall
cmp
xchg
outsl
fidivrl
add
or
jl
push
fadd
out
bound
mov
out
xchg
inc
and
adc
cltd
pop
add
fwait
cmp
push
popf
ret
iret
inc
jg
add
pusha
dec
dec
outsb
lret
jecxz
inc
mov
push
ljmp
mov
je
je
or
push
sahf
push
into
jecxz
rcrb
pop
xor
add
jle
push
push
xor
add
or
fsubrs
es
inc
pop
adc
or
cli
add
mov
adc
sub
incl
enter
adc
mulps
mov
push
mov
sbb
dec
loopne
adc
outsb
sub
and
hlt
decl
jns
daa
xchg
mov
nop
push
push
gs
outsb
fs
fisttps
add
push
stos
inc
into
or
pusha
sbb
or
adcl
arpl
imul
lcall
adc
dec
and
cld
add
cmp
mov
xor
xor
movsl
mul
add
fmuls
subl
pusha
cmp
or
xorb
jnp
pushl
xchg
cli
push
or
clc
mov
mov
sub
push
ljmp
fimuls
add
push
jb
popa
ja
cli
mov
sub
or
push
das
ljmp
popf
xchg
pop
pop
fs
or
leave
pop
push
inc
jp
shlb
fwait
in
or
aas
hlt
cmp
aaa
cld
jmp
mov
lods
sub
lods
push
adc
xchg
inc
inc
or
es
push
or
lahf
inc
lock
jo
xchg
test
or
je
ret
fbstp
insl
mov
leave
add
jecxz
popa
adc
js
fsubrl
decl
fimull
clc
fimull
inc
popl
fwait
inc
test
mov
jo
cli
decl
fsubrs
dec
mov
lret
xor
js
daa
daa
pop
sub
nop
xchg
cwtl
mov
mov
cmp
jg
sub
cs
fisubrs
popa
shlb
decl
adc
cwtl
or
fnsave
jl
sub
sbb
mov
sbb
adc
dec
xorb
out
sbb
cltd
adc
test
xor
jb
adc
in
sahf
mov
push
pusha
call
rclb
pop
xchg
fmull
cmp
cmp
std
sbb
or
dec
insb
loope
in
imul
data16
push
je
leave
push
cmp
decb
pop
inc
or
pop
mov
or
mov
jmp
add
test
and
mov
xor
test
sbb
or
insb
mov
push
andb
fcos
push
loopne
test
push
stos
aam
fs
loopne
clc
add
or
inc
push
dec
mov
rorl
inc
sub
and
add
scas
cli
adc
jae
cmp
push
inc
cli
dec
outsl
xchg
inc
inc
push
adc
int3
mov
dec
inc
sub
mov
mov
aas
lcall
cwtl
mov
adcl
push
add
addr16
or
pop
or
das
mov
icebp
or
or
sub
jp
test
sbb
leave
mov
ljmp
add
or
push
movsb
mov
imul
dec
inc
adc
das
and
ljmp
pop
cmpsl
js
rorl
and
sub
sub
adc
out
and
ret
and
cmp
push
push
cmp
frstor
mov
pusha
pop
and
pop
out
jg
and
insb
pop
daa
sub
jo
sub
enter
orb
or
adc
leave
js
mov
and
or
jnp
adc
xor
or
enter
xchg
lods
adc
fiaddl
mov
mov
mov
or
pop
sahf
or
mov
dec
mov
fisubs
jbe
call
repnz
in
xchg
and
fdivr
or
push
in
or
inc
movsb
jb
sbb
in
inc
or
es
in
loopne
nop
lret
decl
and
fcomps
int
inc
aam
mov
xchg
ret
add
and
mov
xchg
dec
cld
jmp
jnp
add
xchg
popf
xchg
xchg
and
sarl
xchg
es
ja
mov
adcb
sub
hlt
add
jg
incl
jns
int3
cwtl
mov
imull
jg
and
sub
xor
sub
call
mov
jmp
dec
enter
pop
push
dec
push
test
enter
sbb
cld
incl
and
mov
out
mov
cmp
jge
fildl
test
pop
out
xchg
fwait
jmp
aad
or
scas
pop
jb
jmp
mov
pusha
add
and
mov
push
rorl
inc
incl
fisttpll
test
es
sbb
mov
push
xchg
xor
les
fisttps
sar
jmp
dec
fiaddl
les
jg
lods
in
mov
aam
inc
out
inc
xor
out
adc
cmp
dec
std
mov
add
jecxz
pop
leave
mov
or
add
incl
scas
push
orl
or
jmp
dec
push
xor
stos
ja
incl
sarl
lcall
fs
fs
dec
inc
add
rcrb
fisubrl
mov
jecxz
lds
lods
test
pusha
js
cmp
in
fwait
sub
ss
dec
arpl
jg
decl
mov
cli
fwait
ds
cmp
ja
lods
xor
push
into
xchg
adc
inc
and
adc
sbb
clc
fmul
add
sub
or
sbb
pop
push
pop
sbb
push
or
mov
pushf
push
popl
xor
dec
fldl
pushl
cld
fcomps
ret
mov
dec
shlb
clc
test
dec
enter
sar
inc
pop
pop
lock
hlt
fdivs
movsb
mov
inc
sub
stos
mov
inc
dec
dec
pop
lds
lock
and
in
cmp
dec
popf
inc
or
jecxz
fwait
mov
inc
pop
mov
adc
stos
push
pop
das
cli
dec
xchg
pop
xchg
pop
orl
fcomip
ret
mov
or
jns
jns
clc
mov
xor
fists
adc
xor
cli
cs
std
fwait
inc
loope
setg
andl
adc
pushl
ljmp
cmp
jecxz
xor
mov
in
bound
scas
cli
jmp
add
mov
lods
loope
cwtl
shlb
mov
rorl
add
or
xchg
call
or
scas
dec
cld
and
cmc
in
loopne
or
pushf
jmp
sbb
pop
add
test
wrmsr
mov
insb
mov
lahf
jl
mov
mov
push
or
jg
fs
and
adc
xchg
jbe
mov
cmc
add
jp
push
fcomip
scas
or
mov
aaa
in
add
or
scas
ljmp
ret
or
in
addb
pop
mov
sbb
jo
lcall
mov
xor
sub
sar
adc
add
cmp
mov
es
lea
cmp
incl
dec
cmp
loopne
dec
lcall
and
les
call
gs
out
mov
cmp
xor
fcompl
cltd
mov
jl
sbbl
mov
rcrl
mov
das
cli
cmp
pop
mov
add
arpl
sub
xor
pop
fdivrp
mov
lods
or
push
sbb
test
xchg
pop
or
lret
rolb
inc
push
cmc
mov
xchg
test
fistpll
inc
fdivs
shrl
idivb
call
pop
or
sahf
xor
mov
mov
hlt
js
js
add
stos
jl
and
fwait
sti
or
test
pushf
mov
jb
in
nop
nop
xchg
xchg
and
dec
cwtl
cwtl
dec
xchg
hlt
xor
jae
andb
out
add
dec
xchg
js
leave
jg
movsb
decl
les
data16
cld
sbb
incl
inc
xchg
movsb
push
xchg
mov
das
xorb
push
push
lret
sub
push
add
enter
call
es
adc
inc
or
rorb
jo
inc
jl
ja
lcall
xorl
mov
jbe
dec
push
sub
jns
sub
popf
cmpsb
out
es
stos
cltd
xor
and
xchg
jo
repz
jg
or
les
push
out
js
pop
hlt
pushl
or
lods
jb
jl
sub
adc
daa
adc
jmp
xchg
sbb
xor
leave
cwtl
loopne
jmp
inc
fstpt
or
stc
xchg
test
inc
jle
sbb
sub
pushl
and
js
test
mov
mov
jae
jns
sub
jle
rcll
sahf
mov
jmp
jp
lcall
mov
fiaddl
xchg
mov
in
arpl
addl
jl
sub
cmpsb
mov
and
aaa
notl
pop
add
aas
add
dec
addl
mov
incl
adc
inc
xchg
out
and
ljmp
mov
sub
das
sbb
and
sbb
xor
in
cmp
outsl
xchg
fsubrs
rolb
test
es
arpl
mov
daa
ja
hlt
incl
adc
adc
movsb
and
push
jg
xchg
mov
incl
test
sub
xchg
test
mov
xchg
inc
mov
ljmp
ret
add
add
clc
fldl
or
stos
or
hlt
cmp
dec
xchg
xchg
hlt
repnz
cmp
popa
pop
pop
stos
push
in
xchg
mov
sub
mov
test
dec
push
fisubrl
xor
stos
rcll
ffree
and
loop
add
stos
add
xlat
sub
test
adc
adc
mov
outsl
dec
les
lret
cld
pop
jp
sub
push
push
sbb
jg
rorl
popf
repz
dec
aaa
adc
insl
es
ret
sarb
lock
call
js
clc
xchg
ljmp
and
lods
xor
fucomip
stos
mov
inc
adc
sahf
cmpsl
lcall
out
pop
gs
fnstenv
xor
fadds
sbb
inc
psrlq
lahf
pop
cmp
ljmp
sbb
mov
in
popf
mov
xor
xor
mov
lods
sbb
fsubs
dec
ds
ljmp
mov
sub
jo
sbb
das
test
mov
mov
push
adc
aam
inc
les
call
test
xchg
insl
js
sbb
add
inc
mov
xchg
sbb
ja
cld
mov
cli
les
shll
push
daa
sub
push
sub
rcrb
adc
jg
fdivrs
jo
mov
scas
jns
xchg
nop
sub
roll
icebp
pop
call
mov
outsl
xchg
or
scas
push
push
nop
psubsb
adc
mov
lea
lods
ud0
or
sbb
mov
fbstp
test
sbb
mov
clc
mov
xchg
jb
fcoml
and
push
inc
add
filds
jg
cmp
adc
ljmp
scas
cmp
loop
sbb
xor
sar
std
es
dec
adc
pop
adc
dec
outsl
call
xlat
and
xchg
dec
cmp
mov
icebp
or
out
sub
enter
call
insb
xlat
dec
loope
je
adc
movsb
or
or
xchg
sbb
xchg
je
mov
fcomip
push
dec
clc
jge
sbb
mov
push
insb
mov
mov
push
mov
out
and
incl
ss
mov
mov
ret
mov
push
sar
xor
iret
add
inc
xchg
leave
test
inc
add
jmp
test
push
fbstp
mov
test
xchg
popf
or
js
push
or
inc
xchg
push
adc
clc
xchg
jecxz
mov
ss
push
push
add
xorb
rcr
mov
lcall
sbb
jnp
or
dec
add
jg
or
shl
adc
aad
inc
mov
add
jmp
cltd
add
test
inc
push
add
decl
mov
pop
loopne
cmpsl
addl
faddl
xlat
xor
add
push
add
loopne
mov
lret
mov
inc
pop
xlat
push
push
add
out
out
pop
ret
push
adc
hlt
pushl
mov
xlat
and
ljmp
mov
mov
mov
andb
pop
and
push
cli
add
mov
pop
clc
inc
cld
dec
incl
std
lds
mov
or
cmp
jbe
cmp
add
xchg
add
xchg
and
jmp
xlat
or
push
dec
dec
mov
add
imul
lds
lret
cli
call
cld
mov
or
dec
repz
or
cltd
rcrl
xor
mov
scas
call
fwait
add
mov
pushl
xor
inc
xor
or
ss
dec
or
cmp
sbb
lea
mov
ss
mov
jecxz
xor
stc
mov
inc
and
adc
scas
sbb
in
cmp
shlb
dec
push
mov
imul
xchg
adc
dec
sbb
test
out
cmp
lods
call
ss
ret
aam
jmp
cli
dec
add
adc
dec
jge
outsb
rclb
cmp
add
pop
lock
push
mov
pop
xchg
push
push
call
pusha
sbb
inc
jae
sarl
sbb
scas
sbb
sub
mov
or
add
aas
jg
pop
or
mov
nop
out
repnz
push
aaa
cmp
adc
ljmp
or
test
popf
mov
cmp
add
and
ljmp
xchg
test
sub
test
aas
or
jmp
lods
cli
pop
ret
rcl
or
mov
xchg
pop
das
mov
sbb
stos
xchg
pop
out
fildll
push
lret
int
push
shlb
mov
and
xorl
sub
jo
cmp
jmp
icebp
cmpsb
add
pop
cmp
cmpsb
dec
cmp
push
xchg
pop
loopne
decl
testb
and
ss
jl
fs
add
aam
and
add
mov
in
adc
lcall
inc
outsb
cli
xchg
adc
or
repnz
enter
clc
push
sbbb
adc
sbb
xor
jg
scas
divb
ret
cmp
imul
or
and
gs
test
jg
sub
pop
xchg
xor
jg
push
inc
or
jl
inc
cs
jnp
notl
bnd
mov
or
jnp
mull
push
sub
jae
idivl
jl
pushl
cld
setbe
push
mov
inc
mov
pusha
pushf
adc
dec
fwait
jg
jg
pop
push
xor
lcall
sub
dec
fistpll
jb
adc
xchg
mov
ret
sub
nop
mov
dec
mov
ljmp
insb
loop
iret
imul
daa
pop
out
jbe
cwtl
out
sbb
or
cmc
enter
or
adc
jg
sbb
sub
lods
mov
mov
mov
add
mov
pop
add
mov
cmp
dec
inc
pop
enter
adc
sub
mov
pushf
fcomip
incl
cmp
sub
sub
ret
dec
mov
movnti
push
jbe
fcmovnb
cs
xchg
and
mov
cmp
xor
adc
xchg
xchg
in
sub
dec
hlt
and
inc
cld
sbb
or
sub
cmp
mov
xchg
or
ret
imul
or
jg
or
sub
test
ret
cmp
or
js
in
insb
addr16
ljmp
fisubrs
scas
xchg
mov
sbb
push
sbb
pop
cli
inc
scas
inc
repnz
ret
push
push
dec
fisubl
push
call
inc
das
shll
dec
xor
or
enter
lcall
aaa
or
and
pop
and
cmp
push
pop
adc
cltd
cwtl
dec
sbb
cld
popf
xchg
rorb
jg
out
outsl
mov
mov
mov
mov
inc
add
bnd
mov
orl
adc
sbb
or
add
out
and
add
mov
inc
decl
je
add
adc
adc
dec
push
inc
add
inc
call
mov
inc
mov
fnstcw
push
incl
lcall
xor
sub
adc
or
inc
cmp
push
in
or
out
in
xor
rclb
xor
outsl
clc
inc
add
jg
and
lret
cld
inc
add
fimull
ljmp
mov
and
push
into
pcmpeqw
add
lcall
aam
lea
in
call
shl
dec
jp
pop
xor
add
arpl
or
and
lcall
mov
lret
or
clc
jmp
test
mov
push
inc
dec
dec
cli
push
add
and
jg
inc
xor
ljmp
sbb
and
sub
pop
popf
les
nop
arpl
out
add
shlb
leave
aam
jmp
out
or
in
movsl
adc
jo
clc
outsl
mov
push
pop
mov
rorb
push
mov
sbb
jo
xor
sbb
jmp
inc
adc
fdivs
pop
add
bound
fdivp
xchg
push
or
adcl
pop
ja
or
decl
orl
repnz
cvttps2pi
repnz
daa
lret
incl
loope
inc
cmp
mov
leave
push
enter
ret
cwtl
std
adc
loopne
add
call
icebp
adc
std
add
les
lcall
pop
pop
xor
shlb
popa
mov
fildll
int3
pop
inc
aas
and
outsl
or
ljmp
aas
das
inc
dec
sub
add
es
cmp
or
and
lds
jmp
push
mov
xchg
mov
addr16
out
cmp
ss
jne
inc
sbb
icebp
das
mov
outsb
jo
repz
add
or
push
cmp
scas
or
xor
shll
daa
or
pop
dec
sti
movl
addr16
dec
popa
xor
jne
inc
sbb
lock
stos
add
sar
pop
std
add
jl
mov
pop
mov
sub
add
cld
ja
mov
enter
sub
push
clc
call
cmp
sub
and
bound
subl
xor
cmp
movsb
loope
push
or
lods
and
incl
lcall
into
push
push
lds
into
jo
inc
jne
int
jmp
xchg
dec
add
mov
inc
dec
rorb
sub
iret
xor
dec
lcall
lock
fs
fdiv
sbb
test
or
mov
pushf
sub
pushl
fcomp
push
dec
ljmp
xchg
mov
lock
into
xchg
jnp
aam
dec
loope
std
repz
cld
ljmp
dec
mov
sub
push
mov
jae
xor
jmp
les
pop
rclb
movsb
mov
pop
xorb
adc
int3
ss
ljmp
or
pop
fsubrs
jmp
adc
cltd
testb
adc
and
add
cld
sbb
pop
mov
movswl
inc
and
inc
mov
xor
or
add
sub
ljmp
add
push
add
dec
outsw
mov
add
movsl
into
inc
sbb
cmpsb
lock
fwait
mov
or
stos
pop
out
mov
or
adcb
or
fcmove
ds
add
or
fcomip
decl
add
fwait
rclb
jg
dec
ret
xchg
cmpsl
pop
enter
cmc
xchg
subb
sub
fsub
out
test
sarb
jmp
movsl
in
push
and
xchg
mov
nop
popf
inc
enter
jg
gs
xor
fcomip
in
out
dec
push
mov
pop
js
inc
dec
mov
and
frstor
out
fcomp
mov
mov
test
fisubl
lahf
lods
dec
sbb
xor
outsb
mov
repnz
ficoms
sbb
and
xchg
and
andb
sbb
enter
sti
sti
push
fiadds
loopne
push
and
inc
sbb
lods
dec
in
dec
jg
sbb
loope
push
nop
sbb
push
rcrb
push
pop
loop
pusha
cmp
outsl
fdivs
inc
fs
push
je
xchg
fs
mov
push
cmp
clc
jl
nop
xchg
inc
into
aas
xchg
fcomps
mov
inc
fmuls
aad
inc
and
jb
pushf
pushf
sbb
mov
mov
test
sbb
lods
nop
mov
int3
push
ds
sar
mov
lods
mov
fsubr
mov
jbe
les
addr16
lcall
push
sub
popf
and
cmp
int3
paddusb
cld
loopne
fdivrl
mov
push
fidivrs
push
in
jle
add
aam
jmp
inc
hlt
jl
out
out
inc
clc
mov
or
xchg
pushf
sub
sbb
cmp
outsl
xchg
xchg
mov
adc
and
in
nop
pand
xor
and
or
movsb
cld
mov
in
add
add
inc
in
xor
pusha
or
xchg
adc
ds
rolb
dec
in
adc
dec
cmp
xchg
lret
push
nop
push
stc
enter
clc
sbb
out
cmp
mov
dec
insl
loope
out
adc
sbb
test
mov
fldt
and
mov
inc
push
loope
mov
enter
call
lcall
and
jge
loopne
jnp
mov
lods
repnz
sbb
insb
mov
sbb
and
outsl
inc
movsb
dec
and
popa
and
lahf
mov
rclb
inc
push
inc
aam
cld
in
hlt
sub
push
push
cmp
cmpl
pusha
out
jo
sbb
add
and
dec
mov
andnps
shlb
or
jo
shlb
data16
ja
out
rcr
aam
negl
dec
fmul
test
mov
enter
stc
in
call
inc
lock
mov
data16
and
pop
jo
dec
test
cs
push
adc
inc
xchg
adc
mov
pusha
repnz
stos
jp
pop
jae
js
mov
fwait
subb
mov
jne
mov
or
enter
push
pushl
cmp
lret
add
outsb
add
or
iret
outsl
mov
cwtl
and
pushf
enter
movsb
mov
and
or
and
sub
test
jnp
xor
push
pop
and
push
sbb
and
adc
sbb
adc
cmp
test
add
inc
xchg
or
mov
xlat
sbb
in
dec
dec
fnsave
or
sub
dec
xchg
jecxz
daa
jge
or
mov
inc
mov
mov
decl
mov
sti
stos
insb
dec
lahf
pop
dec
inc
adc
add
sub
push
dec
push
insb
cmp
mov
jle
push
insl
adc
and
shlb
inc
aam
mov
data16
arpl
fimull
dec
jmp
das
adc
sbb
sbb
jnp
jbe
insb
mov
imul
or
incl
ja
fidivrl
mov
or
xchg
test
jg
outsl
or
loop
call
outsl
jmp
ja
rcrb
mov
leave
push
dec
pop
out
sbb
addr16
cmpsl
sbb
repz
and
adc
out
xorl
sbb
sbb
lcall
fs
push
cmp
call
jne
pop
sti
jo
mov
incl
jb
imul
aaa
rolb
aas
mov
mov
jg
mov
movsl
leave
test
push
xlat
and
aas
ljmp
adc
mov
mov
movl
or
dec
pop
insb
xchg
decl
outsb
jmp
arpl
mov
adcl
add
lret
arpl
pusha
mov
out
pop
adc
call
add
add
fdivr
ljmp
push
xor
das
in
adc
sbb
cmp
rorb
in
push
rorb
andl
nop
xor
jb
push
orb
xor
mov
outsl
xchg
sub
mov
repnz
dec
xor
fimull
xchg
xorb
jo
inc
and
addb
call
orb
aad
sbb
out
xchg
pop
push
mov
outsl
ljmp
clc
pop
or
rcl
filds
add
adc
adc
das
jg
jae
jo
das
jne
pop
subl
mov
xchg
ljmp
xor
push
xlat
xor
mov
push
imul
cmpsl
mov
imul
add
pop
or
xchg
inc
nop
cmc
mov
and
es
gs
pop
push
call
push
xchg
mov
outsl
and
mov
out
daa
jae
sbbl
pop
fidivs
int
roll
or
push
imul
adc
pop
pop
jo
xchg
test
inc
stos
fadds
call
adc
xor
xchg
call
enter
push
rcll
fnsave
call
aas
lret
push
dec
xchg
add
pop
inc
pop
aaa
fwait
mov
adc
call
ja
pmaxsw
cmp
fisttpl
data16
xchg
imul
vxorpd
dec
arpl
call
mov
out
mov
mov
rcr
add
lret
pop
add
incl
lahf
out
or
dec
xor
scas
mov
xor
inc
arpl
inc
mov
lahf
pop
arpl
int3
push
sub
jns
addr16
cs
lcall
push
stos
add
jp
incl
jae
mov
outsl
adc
and
test
call
sbb
xchg
or
in
mov
push
ret
xorl
pop
and
push
out
inc
inc
sbb
jg
lret
shll
pushl
cmp
dec
stos
xor
xchg
sub
outsl
sub
xor
push
mov
iret
out
ficoml
call
and
mov
fists
cmp
imull
shlb
jne
sub
les
imul
push
sbb
inc
sub
clc
jg
andl
mov
pop
dec
sar
call
mov
push
aas
xorps
jb
data16
xchg
call
and
mov
aam
outsb
addr16
mov
sub
xlat
adc
data16
decl
xor
push
insl
shll
ja
shrb
fisttps
sbb
lcall
cmp
mov
adc
jmp
push
ss
push
ret
jbe
mov
ljmp
cmp
cmp
pop
xlat
and
xchg
or
pop
call
das
cli
pushl
lock
push
push
jae
imul
push
inc
imul
and
imul
pop
push
jmp
xchg
or
stos
push
inc
dec
fiaddl
jmp
dec
pushf
mov
mov
stos
add
mov
or
sbb
lcall
sbb
push
and
cli
call
loop
es
das
sti
adc
inc
xlat
cmp
scas
ss
or
and
pushl
test
movsb
test
dec
out
dec
mov
xor
pop
sbb
decl
popl
lahf
adc
adc
adc
jmp
clc
add
pop
clc
or
jae
test
pop
lahf
dec
jecxz
sub
decl
fimull
loopne
xchg
and
mov
into
daa
decl
inc
mov
adc
inc
bound
or
jmp
stos
loop
xchg
jg
shl
adc
fbld
shll
fsubrs
sti
cmp
adc
dec
cmpsl
into
dec
mov
pop
sub
mov
arpl
dec
push
nop
std
jmp
adc
pop
and
inc
mov
notl
arpl
add
test
mov
call
pop
popa
mov
xor
sub
inc
cs
ja
xor
sbb
call
dec
fildll
insl
scas
xor
mov
cli
add
aas
push
cwtl
jmp
dec
push
cld
ljmp
jmp
xchg
pop
mov
adc
rcll
adc
pushl
clc
arpl
jmp
push
dec
ud2
jbe
dec
into
xor
xchg
dec
xor
mov
inc
cmp
insb
pop
inc
jae
imul
dec
ud0
test
scas
test
pop
addr16
mov
adc
push
imul
pushl
adc
pop
test
sbb
jecxz
and
mov
sbb
les
ljmp
ret
mov
aaa
dec
push
sbb
test
ss
sbb
lea
iret
jo
aad
bound
xlat
movsb
call
adc
stos
add
pop
mov
or
ret
scas
sub
xor
popa
out
jae
pop
pop
aad
emms
or
arpl
sar
pushl
loope
bound
jecxz
xor
cmpsl
popa
aaa
sub
leave
mov
cmp
mov
out
scas
dec
pop
sbb
mov
push
sub
sbb
aad
adc
mov
mov
jbe
push
sbb
jle
mov
push
nop
xchg
out
sub
sti
mov
xchg
cmpsb
xor
push
mov
push
out
mov
mov
outsb
cmp
popa
adc
lahf
int
mov
inc
cli
in
ljmp
or
or
imul
mov
insl
aas
imul
and
cli
aaa
leave
in
push
je
push
es
test
xor
nop
lds
jns
adc
push
push
adc
jle
call
push
sbb
es
loop
lcall
addb
ret
xor
sbb
mov
sub
xor
rorl
cmp
movsb
imull
mov
jecxz
jmp
pop
pop
pop
mov
fstpt
aad
fidivl
outsl
or
mov
mov
jmp
sbb
jns,pn
jmp
xor
xor
push
fadds
push
push
aam
lret
ljmp
decl
inc
dec
push
dec
dec
push
push
push
cmp
mov
sub
adc
hlt
mov
loopne
and
nop
adc
add
shrl
pushl
mov
and
jno
add
add
roll
ja
vandps
mov
inc
add
call
add
rorb
pop
fwait
xchg
cltd
cld
mov
add
push
pusha
or
push
pop
fistpl
filds
jmp
clc
popa
in
xchg
xchg
negl
push
or
jo
decl
inc
mov
cmpsl
mov
dec
das
mov
test
dec
lcall
fwait
loop
add
xor
sbb
sub
movsb
mov
ficoms
incl
or
add
or
ret
test
push
and
aaa
xchg
repnz
lods
sti
mov
pop
movsb
pushf
pop
lds
pusha
scas
cli
call
push
aam
push
jge
push
mov
xor
inc
mov
fdiv
pop
xchg
fisttpl
mov
push
xchg
mov
cld
dec
fcoml
in
sub
xor
sbb
adc
incl
inc
lods
push
dec
push
and
mov
adc
pop
xorb
xor
clc
pop
xor
cmp
ret
cmp
or
or
decl
inc
add
lea
push
mov
cli
rcrl
jecxz
push
pop
cld
mov
and
daa
jg
repz
and
add
mov
sub
push
mov
ja
sbb
ret
cmp
flds
adc
lock
mov
xor
inc
mov
fldcw
add
and
add
and
shr
xor
mov
je
loop
sar
adc
dec
or
add
inc
add
decl
sub
cmp
mov
lock
jecxz
sub
js
dec
mov
lock
test
lret
jmp
cwtl
mov
incl
imul
rcr
push
mov
fisttps
inc
pop
xor
pop
adc
or
xchg
loope
and
and
mov
fwait
adc
push
in
pusha
and
outsl
push
dec
fmull
js
nop
mov
sub
cltd
mov
arpl
faddp
sub
sub
xchg
or
mov
add
decl
adc
mov
cmp
fsubl
loop
es
imul
and
scas
ss
and
in
out
clc
stos
fwait
xor
xchg
lcall
loop
pop
dec
cmp
out
pushf
sbbl
call
add
or
movsb
add
scas
inc
mov
sbb
loope
dec
pop
mov
cmp
inc
or
scas
mov
jg
push
add
adc
fsubs
cmpsb
xchg
xchg
add
adc
es
ds
sub
or
ljmp
movsb
push
or
mov
movsb
jecxz
pop
or
push
es
pop
lsl
adc
incb
lods
subb
and
sub
cli
incl
inc
xor
mov
xchg
in
adc
pusha
outsl
push
mov
js
push
sub
pop
test
movsb
sub
decl
daa
adc
movsl
pop
adc
add
and
xchg
inc
in
sbb
sbb
call
and
push
stos
sbb
mov
sbb
scas
insl
dec
sbbl
in
and
cmp
jnp
imul
sahf
or
inc
ljmp
outsl
fidivl
xor
pop
inc
adc
inc
jmp
imul
cmc
cmp
lock
sub
mov
push
cltd
cld
lock
push
sbb
clc
hlt
cwtl
mov
fadds
lcall
mov
enter
inc
adc
and
es
enter
mov
filds
or
adc
mov
add
decl
or
push
ss
jae
insb
jbe
xor
adc
add
iret
sub
pop
cld
mov
or
enter
insb
or
js
or
xchg
test
xor
lcall
or
insl
bnd
stos
sti
dec
mov
out
aaa
test
adc
sub
mov
enter
add
mov
cmpb
inc
mov
pop
repz
push
gs
adc
stos
mov
data16
les
sub
in
in
add
repnz
ljmp
push
adc
loopne
mov
push
or
dec
ljmp
popa
push
xchg
add
mull
mulb
dec
jl
popa
outsl
fwait
imul
and
incl
cmp
mov
push
or
es
mov
decl
pop
xor
dec
imul
xchg
lods
adc
mov
das
ror
add
fdivr
mov
aaa
test
mov
xor
jo
mov
clc
sub
call
cpuid
sub
xchg
ja
ret
test
call
add
add
push
cmc
daa
pop
and
xchg
ret
sbb
jmp
mov
shrb
jg
dec
cmp
lods
sbb
fisubs
mov
adc
jp
mov
cwtl
sub
das
pop
dec
sar
fwait
or
and
mov
sbb
jle
push
lcall
push
lods
push
loop
ljmp
mov
cmpsl
cmp
test
inc
imul
inc
mov
push
sub
or
mov
pop
daa
stos
cmp
mov
call
sbb
ficoms
arpl
icebp
sub
adc
pop
inc
lock
ds
or
cmpsl
and
lret
jg
das
mov
adc
insl
sti
pop
fs
inc
and
hlt
add
enter
or
sbb
jg
std
xor
inc
cmpb
das
inc
or
clc
push
add
push
push
jle
xor
push
mov
pop
mov
aam
add
pop
or
pmaxsw
add
rorb
mov
decl
out
andl
add
and
stos
stc
adc
xorl
decl
loopne
movsb
out
stc
push
and
and
adc
sub
pop
pusha
loopne
mov
lahf
adc
mov
inc
mov
fisttps
push
and
mov
lods
pop
repnz
clc
jmp
fs
fidivs
clc
jle
push
jo,pn
push
adc
lock
push
sar
shlb
push
adc
push
ja
pop
mov
and
or
adc
into
loope
sub
add
sbb
mov
push
popa
inc
mov
pop
push
ja
fisubs
inc
and
ds
push
push
add
or
movsb
lea
popa
pop
loop
add
fwait
and
mov
and
adc
add
imul
int3
shlb
sbb
push
lcall
ljmp
and
sbb
adc
pushl
mov
mov
or
fsubrp
or
sar
xchg
jne
mov
cs
int
dec
ss
xor
pop
lock
inc
sbb
push
out
loopne
mov
popa
out
jo
lods
adc
jmp
push
leave
inc
jb
mov
leave
adc
cmpsl
sbb
sbb
sbb
scas
mov
xchg
leave
push
adc
sub
xor
ljmp
fs
lret
xchg
out
sbb
sbb
and
jge
stos
xlat
inc
push
dec
or
dec
ret
sar
lcall
outsl
imulb
inc
sbb
jns
je
std
std
pushl
ror
sbb
lcall
pusha
adc
loope
push
not
repnz
jbe
hlt
xchg
add
ljmp
negl
test
dec
cli
cmc
nop
clc
jg
out
popa
xor
sub
xchg
fistpll
negl
and
das
dec
je
idiv
data16
sbb
mov
inc
int3
out
pushf
inc
jg
dec
insb
pop
test
pushf
popa
outsb
inc
repnz
mov
pop
cld
cmp
out
sbb
pop
and
dec
xchg
and
or
out
nop
shrb
sbb
clc
jne
push
add
lock
ficoml
lods
cmpb
hlt
cmp
xchg
jmp
jo
add
push
clc
add
mov
mov
or
je
cmpsb
decl
loope
test
int
xor
xor
fdivr
xchg
jg
mov
repnz
or
les
push
into
mov
inc
sbb
dec
mov
punpcklbw
aaa
xchg
call
mov
cmpsl
pop
aas
jle
incl
sbb
inc
push
mov
bound
cmp
adc
dec
or
cld
ret
loope
pop
push
ljmp
es
repnz
lret
dec
and
out
or
pop
fdivrs
ret
jbe
and
rorl
and
and
inc
in
fs
push
xchg
sbb
adc
or
sub
ja
inc
mov
or
or
test
mov
cmpsb
stc
lret
xchg
fsubl
cltd
inc
inc
jmp
sbbb
dec
out
in
inc
add
cmp
mov
cld
nop
sub
add
call
xchg
pop
and
xchg
in
mov
xchg
xor
lcall
addr16
mov
adc
push
add
mov
rolb
add
jg
loopne
dec
jne
jecxz
mov
jmp
add
aad
inc
jmp
adc
lcall
aam
mov
outsl
sub
roll
mov
cmp
movsl
and
insl
js
mov
hlt
mov
push
adc
aam
mov
dec
jne
and
in
pop
pop
sub
push
add
pop
lahf
and
jmp
fisubrl
ss
pop
outsl
fwait
cmpsl
das
cmp
xchg
cmp
bound
mov
add
xor
call
cld
inc
adc
push
dec
jl
jne
das
lret
leave
dec
stc
xchg
mov
inc
test
imulb
lock
push
jnp
jge
shrb
mov
and
ljmp
call
push
push
mov
sub
push
push
sub
roll
out
sar
incl
test
lods
mov
mov
lea
mov
mov
dec
outsb
mov
mov
inc
inc
mov
inc
mov
rcrl
add
pop
sub
push
es
jg
loop
mov
and
jp
or
jmp
movsl
adc
inc
sbb
pop
mov
mov
inc
ss
pop
add
inc
pop
cwtl
adc
lods
repnz
push
rorb
lahf
nop
jl
ja
aam
ds
push
cld
call
sub
incl
and
sbbb
fwait
adc
mov
inc
sub
mov
or
sub
data16
inc
xor
fiadds
mov
jbe
jno,pn
adc
push
fs
imul
jp
push
lahf
sbb
adc
add
mov
bnd
or
and
ffree
xchg
mov
decl
stos
add
nop
fcoms
push
lods
or
test
sbb
arpl
cld
incl
mov
pop
sub
sbb
cmp
xor
sub
jg
add
test
je
clc
cmpsb
mov
int
pop
cmp
push
inc
lods
push
mov
out
xchg
loop
lea
adc
lock
lods
dec
or
outsl
cmpsb
add
mov
or
adc
jmp
sbb
divb
or
adc
sbb
inc
inc
adc
mov
bnd
nop
out
add
cli
cld
mov
xor
inc
cmp
setp
leave
nop
jns
imul
lahf
outsl
mov
jns
les
inc
int3
dec
loope
call
sbb
xchg
add
add
loop
mov
add
sub
or
cltd
addr16
ret
mov
test
sbb
inc
sar
lret
jne
test
data16
ja
inc
orl
sbb
sbb
add
inc
mov
decl
adc
je
notb
inc
dec
fimuls
pop
pop
pop
pushl
push
mov
inc
sti
lds
cli
or
push
adc
inc
add
incl
jge
scas
pop
icebp
add
subl
nop
and
cmp
fdivrs
adc
mov
mov
icebp
lock
in
movsb
movsl
mov
pop
in
shrl
dec
es
aaa
adcb
and
and
and
jg
ret
sub
xchg
mov
add
pusha
lea
sbb
call
negb
or
adc
pop
cmp
pop
jmp
push
sbb
in
inc
clc
test
and
mov
mov
xchg
roll
outsb
sti
adc
xchg
sub
call
dec
mov
in
push
test
jb
pop
test
out
mov
xchg
sbb
in
loopne
rorb
mov
jecxz
in
or
inc
bound
sub
subl
or
mov
enter
or
adc
lods
add
sub
and
adc
or
xchg
sbb
or
mov
and
lea
ret
push
into
clc
fisttps
sub
insb
sti
sbb
jmp
in
fcoml
xor
fdiv
inc
and
fidivrl
frstor
add
incl
cmpsl
loope
pop
mov
add
mov
adc
jne
adc
loop
lret
push
sbb
lods
push
adc
scas
or
ljmp
pushl
pop
ret
cmpsb
jne
jae
test
divl
cmpl
adc
jmp
push
mov
loope
mov
fcompl
mov
sbb
jno
inc
cmp
incl
push
test
xor
loop
or
add
adc
clc
addr16
sahf
fs
push
repnz
pop
or
or
in
mov
in
push
adc
in
cmp
and
aaa
sub
add
lods
insb
sbbb
push
inc
push
adc
xlat
xor
enter
xor
add
leave
and
xor
fcomi
sub
xor
insb
sub
sub
or
add
xor
test
fisttps
mov
jae
imul
xchg
cmp
sar
dec
js
pop
sbb
push
adc
in
dec
arpl
add
sbb
pop
cmp
jmp
pop
ds
pop
inc
dec
sbb
inc
pop
cmpsb
cmp
dec
in
out
inc
stos
shl
pushl
cli
xchg
jp
cli
sbb
add
outsl
sbb
or
daa
jg
add
add
movsl
lock
sbb
clc
decl
repnz
int3
cmpsb
push
or
xchg
mov
mov
sbb
clc
call
fwait
add
jl
inc
adc
inc
outsl
loopne
aam
mov
xchg
decl
or
push
imul
dec
pop
incl
mov
inc
dec
or
stc
addl
ret
mov
sbb
add
pop
es
fimuls
add
clc
cmp
addb
ficoml
fdivr
pop
dec
ds
clc
sbb
add
rolb
sahf
add
repnz
mov
insl
xor
push
and
lea
fildll
inc
mov
or
dec
push
sbb
or
sub
add
or
sbb
je
add
or
iret
lock
xchg
lret
ljmp
in
pop
jo
int3
scas
cmp
and
addl
or
mov
addl
sub
push
inc
call
jb
call
sub
divb
push
dec
sub
rorb
and
xchg
movsb
movsl
pop
std
mov
jl
pop
or
cmp
adc
jbe
outsl
push
pushf
std
sbb
in
mov
jbe
push
cmp
incl
inc
inc
push
lcall
dec
dec
cmp
popa
dec
push
or
lock
xor
inc
push
push
push
inc
dec
inc
lock
call
sbb
popa
pop
mov
je
pusha
fldt
addb
shlb
inc
xchg
add
xor
shlb
lret
xchg
jecxz
imul
or
mov
in
es
nop
pop
repnz
or
pusha
jmp
decl
int3
add
pop
je
dec
mov
pmaddwd
hlt
jg
push
add
pop
sbb
push
and
xor
movsb
cmp
fbstp
add
push
or
inc
fbld
ljmp
add
pop
loopne
sbb
jg
jmp
sub
les
inc
dec
pop
test
je
addr16
lcall
dec
test
push
xor
and
fbld
cmp
push
mov
xchg
clc
ljmp
lock
xchg
sbb
fadds
es
call
mov
dec
inc
arpl
pop
jno
popa
inc
xchg
jne
ja
andl
call
adc
jo
xor
or
fstpt
sbb
or
call
leave
or
pop
nop
sbb
rcl
sub
mov
cwtl
cmp
push
and
decl
cli
push
ja
incb
lea
or
xchg
push
scas
push
fwait
dec
cld
mov
in
enter
lret
or
inc
js
add
add
cli
test
outsb
fisttps
imul
dec
movsl
sbb
outsl
xchg
mov
xchg
ss
dec
sub
incl
rolb
dec
sub
inc
jle
pop
mov
andb
jp
push
push
inc
lock
cmp
push
orl
push
dec
mov
cltd
movsl
and
imul
pushl
mov
mov
call
pop
inc
lret
iret
and
mov
in
inc
je
push
imul
decl
das
jns
in
mov
inc
add
shlb
jle
jae
les
les
xor
movsl
inc
lahf
int
sbb
ret
jg
cmp
add
jae
lahf
push
dec
test
or
pop
fs
scas
xor
test
jg
sahf
lcall
ds
lock
insb
aas
jb
dec
dec
push
fcomip
call
cmp
cmpsb
push
aas
and
sbb
xor
pop
aaa
imul
lahf
xchg
xchg
cmp
pushf
aam
add
jg
enter
call
call
cmpsb
lcall
arpl
and
loopne
add
cmp
aaa
mov
or
and
lcall
adc
mov
and
inc
xchg
sbb
addb
es
push
jl
lea
jp
adc
sbb
cs
jo
scas
mov
sub
mov
push
jb
scas
cli
lcall
outsb
fisttpll
pop
push
add
add
mov
je
mov
jmp
sbb
into
push
stos
nop
push
xchg
mov
out
push
cld
addb
mov
lods
je
push
mov
add
jle
ret
or
sbb
ss
push
nop
push
pop
imul
or
inc
jae
mov
punpckhbw
pusha
les
fstps
cmp
ja
or
lock
clc
dec
xor
mov
cli
cmp
popa
add
jg
add
mov
lcall
lea
dec
add
add
dec
inc
call
jl
add
or
lahf
aad
cmpsl
ljmp
pop
inc
stos
test
cmp
push
xor
filds
jnp
dec
adc
ja
call
dec
jl
add
and
add
std
test
add
call
sbb
push
lods
pop
push
fisttpl
bound
test
ja
and
inc
shl
sub
ljmp
add
mov
and
or
scas
fwait
xchg
jnp
call
pop
sbb
dec
add
mov
dec
or
sub
fscale
lods
test
popf
inc
adc
mov
sub
lock
ljmp
out
inc
pop
xchg
mov
insl
push
jne
or
jae
mov
loope
mov
dec
nop
scas
shll
lea
dec
jo
aam
jge
insb
pop
sub
outsb
jmp
es
inc
xor
pop
or
pop
mov
arpl
add
inc
lcall
inc
mov
mov
dec
ljmp
call
insl
mov
jnp
bound
add
or
inc
aas
mov
pop
fcomps
jmp
imul
fadd
xor
outsl
mov
add
mov
push
inc
stos
inc
mov
add
jne
jne
or
xor
push
add
inc
or
daa
xor
incl
push
pop
push
aas
sub
int3
daa
xchg
lock
das
fs
jg
adc
fadd
clc
mov
dec
cmp
jg
lock
adc
jle
and
fadds
mov
ret
dec
nop
inc
adc
xor
adc
add
mov
sub
inc
and
ss
pop
insb
adc
sub
in
dec
loope
inc
jmp
pop
andb
add
cmpsb
ljmp
sbb
jae
fs
pop
test
std
pop
nop
jl
adc
dec
inc
or
jg
pop
add
push
clc
jnp
xor
movsb
pop
std
decl
dec
test
mov
cmpsl
ret
movb
int3
add
incl
adc
sub
movsl
push
lods
xchg
or
ds
mov
rcr
adc
xchg
sub
and
cmpl
pop
sbb
cli
lcall
mov
mov
jge
xchg
out
sarl
or
outsl
sahf
sub
mov
daa
lret
pop
pop
fldenv
pop
ljmp
idiv
lcall
gs
pop
sub
jno
pusha
pusha
enter
dec
dec
mov
push
in
nop
mov
inc
sub
pop
pop
jmp
mov
sbb
test
test
outsl
flds
adc
call
dec
bound
leave
shlb
dec
sbb
jl
sar
mov
sub
test
adc
or
xor
xchg
mov
dec
push
cmp
xor
adc
sub
aam
ds
push
and
dec
cmp
xchg
int3
xor
jecxz
movsb
int
js
sar
pop
clc
mov
fs
cmc
pop
xchg
mov
and
call
hlt
or
cmpsl
pop
xchg
icebp
xlat
and
push
jns
in
in
into
out
fwait
dec
call
jmp
mov
test
call
call
andb
cwtl
loop
pop
outsl
cmp
gs
aaa
lret
les
test
sbb
push
adc
shlb
in
movsl
hlt
dec
sarb
dec
ror
pop
fldenv
mov
xor
mov
adc
dec
gs
jb
addr16
push
ljmp
pop
inc
xor
outsl
mov
cmpsl
mov
push
push
aaa
cmpb
add
lds
hlt
push
fsub
cmp
idivb
sub
add
outsb
xor
incl
and
jb
add
dec
add
rclb
xchg
add
icebp
or
nop
popa
into
mov
fisttps
sbb
rcrb
mov
add
push
sbb
inc
aam
pop
sub
adc
mov
in
or
imul
cmc
jg
sub
push
shlb
cld
ret
cmp
fistpll
pop
push
insb
or
loop
mov
into
test
and
sub
aad
adc
mov
sub
xor
addb
vmwrite
xchg
daa
incl
or
inc
pusha
mov
adc
test
jg
and
push
ror
fsubrs
lods
mov
and
cmpsl
nop
add
cmpb
sbb
dec
push
or
ret
roll
jge
push
aaa
clc
pop
sub
add
dec
mov
je
pop
std
scas
xchg
pop
push
les
push
scas
aam
hlt
adc
ficoml
cmpsb
test
mov
and
jbe
rcrb
mov
es
fs
decl
or
outsl
xchg
lock
push
or
inc
push
push
inc
iret
call
jl
sbb
popf
fcomps
test
push
jo
pop
push
dec
les
or
incl
mov
pop
rorb
or
pushf
push
test
or
js
pushl
sbb
int
fcmovnb
xchg
jl
jl
gs
fadds
and
or
call
imul
sub
movsl
mov
dec
in
aas
pop
in
les
lods
pop
mov
add
sbb
push
pop
mov
pop
pop
sbb
ljmp
mov
ret
push
sbb
and
dec
data16
adc
add
mov
fcomip
jmp
or
movsb
mov
mov
mov
dec
add
std
dec
sahf
std
pop
or
icebp
rclb
adc
sub
inc
imul
mov
push
xor
popa
out
femms
fwait
outsb
or
stos
movsb
loope
mov
inc
dec
pop
lcall
out
sqrtps
push
adc
roll
decl
xor
cmp
out
cmpsl
dec
cld
dec
test
adc
adc
inc
shrb
push
movsl
sbb
push
call
lcall
sbb
lods
pusha
xchg
sbb
imul
jg
hlt
mov
rclb
push
mov
pop
in
scas
mov
jnp
adc
inc
xchg
dec
lret
or
and
lcall
add
add
push
fadds
mov
in
pop
enter
adc
and
scas
jl
les
pop
dec
out
pop
loop
sar
cmp
pop
pop
leave
dec
mov
pop
ss
out
sbb
inc
xor
sbb
aas
xor
xchg
push
daa
xor
hlt
lret
xchg
pop
inc
cli
or
and
xor
push
inc
and
pusha
pushf
add
rol
push
loopne
daa
and
jg
notl
mov
jo
xchg
movsl
aaa
push
xchg
or
xchg
faddl
xor
inc
or
cmp
mov
sub
add
mov
test
ja
nop
mov
test
lods
push
lock
add
sbb
pop
mov
adc
add
ja
into
nop
and
dec
sbb
addr16
rolb
pop
jp
sub
inc
arpl
fcmovnbe
decl
jb
or
or
push
pushl
sbb
mov
or
sub
inc
xor
sbb
cmp
or
sub
dec
adc
pop
mov
enter
insb
add
jg
mov
mov
dec
in
leave
das
cmp
clc
pop
movsl
mov
std
and
cmpb
add
dec
mov
pop
xchg
hlt
pop
mov
jmp
pushl
lods
testl
andb
shrl
es
mov
mov
and
dec
jbe
cs
or
lcall
cs
dec
ds
hlt
aas
lret
repz
movsb
hlt
cld
clc
fildll
sbb
andb
or
enter
call
add
sub
adc
pop
push
dec
pop
loopne
ljmp
add
adc
and
ds
les
bound
push
fdivr
mov
call
adc
or
and
hlt
dec
ds
mov
mov
adc
mov
sbb
mov
mov
iret
int3
push
add
bound
inc
stos
sub
dec
adc
insb
pop
icebp
es
jle
lcall
and
mov
fsubrl
mov
pop
sub
fldenv
fstl
or
xor
jmp
push
hlt
mov
les
sub
adc
add
cs
xlat
mov
cmpsl
idivl
out
vpunpckldq
testb
das
and
iret
bound
mov
adcl
subl
sbb
call
dec
call
adc
dec
adc
mov
pushw
sti
mov
enter
test
and
add
lds
adc
cli
daa
addr16
pop
xchg
adc
add
repnz
call
push
ljmp
and
push
sahf
popa
aas
and
or
push
jmp
dec
ja
cltd
or
mov
and
ret
sub
sub
jnp
out
in
bound
xor
cmp
pop
or
mov
ds
inc
lods
pop
or
push
mov
mov
clc
pushf
add
fisttps
and
aad
push
add
xchg
gs
dec
cmpsl
imul
cld
sub
gs
push
pusha
push
shrb
sub
pop
mov
push
sbb
mov
movsl
enter
bound
pshufw
push
mov
sti
mov
in
mov
jg
lock
pushf
mov
sbb
jns
jl
mov
clc
mov
negb
pop
xor
repz
mov
cmpsl
or
sar
call
xor
adc
lods
daa
das
sbb
xchg
ja
call
shlb
popf
enter
mov
shrb
xchg
or
fdivrl
adc
movsb
ja
pop
and
jge
fbld
jp
or
cmp
mov
pop
test
test
push
mov
pop
add
mov
push
nop
mov
xor
mov
add
inc
jb
mov
movsb
hlt
mov
xor
mov
pop
xchg
mov
fstp
sub
es
movsl
popa
jl
notb
sbb
jmp
cmp
test
push
push
ficoml
xchg
mov
and
add
cmp
popf
xor
lret
jb
sub
shl
ljmp
lock
iret
add
and
incl
pop
mov
and
sub
leave
clc
ja
xchg
subl
adc
test
add
sti
arpl
imul
clc
jg
ljmp
add
aaa
fcomps
mov
inc
dec
imul
out
ret
or
cmp
xor
in
mov
mov
lods
sbb
shrl
mov
mov
or
xchg
in
push
in
outsl
das
fsubs
and
das
mov
aaa
adc
jle
pushl
sub
xor
test
mov
and
xlat
jmp
adc
cs
xor
stc
add
jg
push
xor
pop
insb
cld
imul
std
pusha
and
sub
ljmp
ret
jp
pushf
adc
rdpmc
push
or
sub
filds
mov
test
lahf
add
pushl
std
jb
mov
jne
test
xchg
inc
iret
fadds
f2xm1
movsl
push
push
lock
jg
jg
repnz
sarb
aam
insb
sbb
js
scas
mov
sahf
adc
incl
dec
sbb
sbb
imul
pop
cltd
pushl
sbb
pushf
fimull
andb
mov
and
inc
and
sub
sbb
or
movsb
add
decl
sub
xor
gs
out
jne
and
ss
lods
mov
jmp
pop
mov
lock
fs
incl
and
movsl
lea
mov
int
sbb
pop
dec
movsb
aaa
shl
lcall
ljmp
or
ljmp
stc
mov
sub
xlat
les
push
fwait
aas
add
insl
sbb
add
movb
and
out
addb
das
jne
filds
decl
inc
ljmp
enter
jno
aam
lods
push
mov
decl
and
sbb
or
ficoml
or
repnz
mov
jae
and
mov
add
pusha
xchg
mov
push
add
xor
in
cmp
xor
addl
daa
repnz
mov
jo
sbb
inc
subl
enter
in
jmp
sub
xor
cmp
lea
push
adc
dec
lret
sub
lcall
insl
jnp
xchg
adc
or
mov
push
aad
int
into
mov
frstor
xor
or
repnz
lock
jg
xor
and
in
add
sbb
add
add
jmp
ljmp
cwtl
rolb
and
push
cmp
pop
out
mov
das
xchg
mov
sub
mov
nop
repnz
test
jmp
push
imul
xorl
cmpb
add
push
mov
jmp
mov
sbb
sub
cmp
add
adc
xor
shlb
stos
decb
inc
pop
shlb
push
mov
sbb
xorb
aaa
test
and
mov
xlat
push
cmp
push
cld
pushl
rorb
orl
jbe
insl
and
das
jge
popa
inc
je
jae
sbb
mov
das
add
cwtl
or
lds
inc
mov
inc
incl
adc
mov
and
dec
dec
push
xchg
call
push
mov
cmpsb
fwait
or
add
jg
jb
dec
mov
cwtl
fldl
loope
pushf
outsl
loop
pop
aaa
pop
push
inc
pop
and
fbld
cmp
xor
dec
pop
lret
push
sub
cwtl
push
outsb
adc
leave
push
dec
mov
push
xchg
sbb
roll
dec
xlat
xchg
xorl
scas
dec
das
cmp
xchg
add
cld
dec
adc
clc
mov
movsl
xor
aad
push
pop
and
leave
call
xor
fildll
aaa
lods
inc
push
das
jmp
sub
pop
movaps
call
jno
daa
cmp
scas
pop
insl
add
popf
outsb
inc
adc
movsb
jnp
add
sub
jmp
orb
pop
push
push
mov
addr16
cmp
int
mov
movsb
dec
inc
cmp
push
and
jmp
repz
add
int
fcomip
loopne
jmp
inc
xor
mov
xchg
test
add
inc
test
dec
and
fdivr
adc
rcll
loop
sbb
jne
pop
push
incl
mov
ja
jae
js
pop
add
xchg
xchg
fs
outsl
xor
cmp
inc
repz
and
int3
jns
xor
in
rcr
jae
sbb
fistpl
jmp
sti
lea
ret
mov
pop
shl
nop
fstl
push
ljmp
jp
mov
push
dec
or
out
lods
xchg
and
lods
inc
lea
pop
cmc
in
call
sbbb
cmp
dec
popa
insb
ret
enter
dec
jns
mov
pop
sahf
pop
mov
jmp
in
xchg
daa
sub
ljmp
mov
cmp
addb
sbb
cmp
inc
call
lea
test
jbe
aad
sar
call
sti
xor
lcall
and
or
out
jae
mov
pushl
inc
repnz
mov
adc
hlt
cmpsl
jge
leave
decl
cmpsb
scas
inc
lods
scas
rolb
sbb
jne
sarl
push
add
pushl
push
inc
adc
insl
loopne
mov
lahf
inc
xor
decl
fs
fdivs
adc
outsl
aaa
or
outsb
insl
cmp
inc
dec
jg
sub
adc
or
sub
adc
pop
inc
rclb
decl
xor
xchg
cmovo
popa
or
add
pushl
adc
aaa
arpl
dec
mov
ss
ja
test
mov
das
push
or
inc
lea
rolb
mov
and
or
lods
add
xor
pop
cld
inc
jmp
mov
loope
sbb
inc
jnp
xchg
dec
ja
scas
pop
clc
js
std
decl
xor
xor
xchg
f2xm1
fisttpl
sarl
jg
cmpb
hlt
call
pop
int
xchg
dec
cs
in
andb
or
lret
lret
call
inc
adc
xor
imul
or
push
bound
or
lods
cmp
and
push
pop
std
nop
mov
subb
xor
sub
in
adc
adc
add
ja
adc
xchg
das
push
cmp
cltd
pop
jg
xchg
mov
lods
jmp
cmpsl
add
sti
cmpsb
mov
test
aam
decb
sarb
aam
mov
adc
add
fistps
fmuls
test
pop
pop
sub
adc
dec
lds
or
jne
enter
in
rolb
and
xor
idivb
cs
pop
jbe
mov
clc
jnp
rclb
incl
flds
call
xorl
test
dec
pop
add
test
test
push
loopne
and
dec
inc
outsl
es
mov
popf
movsb
std
jbe
sbb
or
fists
push
adc
mov
xor
jo
lcall
cmpsb
add
mov
or
inc
cld
mov
mov
loopne
enter
mov
jl
add
loope
je
out
in
mov
pushl
shl
mov
out
mov
sti
insb
push
cmp
push
ret
pushl
repz
jb
pop
cmp
and
aam
xorb
int
jge
and
push
lret
incl
scas
jle
sub
mov
dec
cmpl
lahf
pop
add
inc
rorb
inc
mov
orl
inc
movsl
add
mov
cli
imul
shll
mov
call
lock
daa
call
in
mov
imull
pusha
xor
sbb
jmp
inc
mov
je
pop
xchg
xor
in
jns
cmp
or
adc
clc
inc
aas
cmp
stc
push
mov
dec
pop
pushl
rclb
dec
add
inc
insl
add
mov
insl
sbb
clc
ljmp
mov
jbe
mov
rcl
fisubrl
fmull
rcrl
in
call
rcrl
and
xchg
mov
jns
loopne
push
xchg
and
push
add
push
testl
addb
daa
pop
rclb
dec
cwtl
inc
movsb
push
ror
sti
outsb
mov
dec
mov
push
rcll
out
and
sub
sbbl
cs
sbb
sub
add
sbb
call
and
push
arpl
push
xor
imull
pop
loopne
dec
or
and
push
inc
xchg
ja
decl
daa
add
cmc
add
test
mov
xchg
pop
ja
cmp
addl
mov
andb
inc
push
xor
pop
sbb
aas
cmpsl
test
test
incl
adc
or
out
fiadds
adc
and
incl
in
push
sbb
dec
push
test
mov
orl
add
movsb
pop
and
mov
sbb
sub
addr16
and
jbe
xchg
mov
sub
sub
data16
call
inc
rolb
sbb
push
je
movsl
mov
adc
push
sti
mov
inc
push
mov
aas
dec
roll
push
mov
add
inc
cs
jp
dec
dec
decl
fcoms
cmp
shl
push
xor
dec
add
and
sub
cld
mov
lock
add
sbb
int
cld
test
pop
loopne
add
push
inc
mov
fdivrs
cmp
call
xchg
inc
test
mov
mov
fwait
imul
adc
orb
sbb
jmp
push
adc
sbb
ljmp
xor
cltd
add
cmpsl
lea
scas
adc
adc
push
dec
xor
sahf
fs
inc
insb
call
sarb
sbb
mulb
adc
mov
pushl
lcall
sub
jo
mov
test
cmp
or
inc
add
aas
fildll
sub
inc
pop
inc
sub
xor
cmp
push
add
mov
mov
push
cmp
push
mov
bound
scas
xchg
comiss
mov
and
and
or
push
fistl
or
je
jp
and
add
push
inc
imul
test
xchg
in
mov
mov
jge
push
mov
inc
inc
xchg
dec
add
jnp
movsl
lcall
xor
cmp
pop
lods
add
and
dec
outsb
sbb
inc
and
repz
add
mov
inc
neg
inc
mov
insl
or
pop
jmp
mov
fnsave
pop
and
xor
inc
pop
mov
pop
mov
ds
jo
clc
pop
fcmovb
or
call
lcall
sbb
orl
push
sti
js
and
mov
jmp
sahf
inc
jb
dec
sbb
mov
shlb
pushf
inc
arpl
cmpsb
out
jle
decl
rclb
or
inc
rorl
add
xchg
mov
call
sub
xor
flds
inc
test
sahf
insb
out
ror
roll
sub
incl
cld
dec
mov
adc
sbb
or
add
jg
pop
pop
or
add
nop
mov
add
xchg
and
icebp
pop
pushf
adc
lcall
nop
or
cltd
jmp
pop
in
loope
jmp
or
data16
fs
decl
outsl
cld
adc
or
cmpsl
subl
cmp
stos
xlat
fcom
push
nop
add
incl
inc
pusha
es
jp
mov
dec
xor
dec
hlt
or
mov
decl
mov
cmp
hlt
ds
les
mov
sub
out
push
daa
add
sbb
lcall
adc
std
mov
mov
lock
mov
push
out
push
cmpl
out
scas
sbb
decl
cmp
and
loopne
inc
fimull
testl
jo
popf
clc
bswap
das
add
push
ljmp
cli
incl
sahf
call
and
pusha
clc
out
cmp
xchg
or
jmp
addr16
push
dec
and
andl
decl
ret
xor
mov
or
pop
sti
sbb
or
loop
pop
cs
sub
and
push
call
mov
add
sbb
daa
xor
loopne
sar
mov
ljmp
sub
mov
movsb
sti
sub
lea
jge
in
out
sbb
xor
inc
mov
call
jmp
xor
cmp
insl
cmp
adc
jmp
xchg
aaa
movsb
mov
mov
push
add
ret
enter
add
pusha
jg
or
push
fisttps
add
mov
pop
jmp
sbb
fxch
jmp
add
es
jle
sbb
xchg
and
pop
jo
outsl
mov
sub
lcall
lods
pop
mov
andb
xor
jns
lea
jge
out
cmp
addb
inc
or
cli
mov
or
or
call
call
ja
xor
or
lds
es
fbld
test
and
and
aaa
cld
incl
pop
or
cltd
int3
and
rorb
mov
lcall
push
popa
sbb
mov
or
dec
inc
fcomip
mov
dec
inc
lock
xchg
imul
nop
mov
mov
push
adc
dec
and
std
call
mov
or
mov
xchg
je
mov
jge
hlt
clc
out
clc
jmp
inc
clc
add
pusha
lods
test
push
mov
add
pop
icebp
dec
dec
loop
pop
insl
aaa
loop
jno
iret
xchg
jg
decl
mov
or
pop
pop
fldt
mov
mov
dec
and
sub
daa
clc
mov
inc
adc
les
or
or
xor
push
mov
pushl
out
mov
je
push
movsb
push
dec
clc
pop
jnp
sbb
ja
dec
mov
jae
aaa
or
or
clc
outsl
xor
incl
inc
inc
insb
or
push
mov
nop
test
xorl
xchg
or
mov
xlat
jnp
add
mov
jg
repnz
arpl
mov
xchg
sbb
xchg
push
ja
nop
in
or
std
jmp
cs
imul
fbld
jg
jle
add
fwait
jno
or
int3
loop
mov
push
dec
inc
out
adc
insb
mov
clc
shrb
pushf
mov
ss
lds
xor
ljmp
cli
inc
adc
in
mov
mov
xchg
pop
adc
jmp
flds
pop
xchg
dec
subb
xchg
push
inc
pop
fdivrp
or
ljmp
lods
mov
push
push
or
jne
leave
inc
mov
outsl
ficoml
sbb
xchg
inc
sahf
cwtl
push
lcall
daa
sahf
jno
push
loop
add
test
data16
mov
add
mov
pop
clc
mov
add
punpckhbw
xchg
push
pop
jns
test
pushf
mov
dec
inc
jns
mov
mov
jmp
lods
es
loopne
mov
jns
in
lock
add
rcrb
add
adc
sub
xor
cmp
inc
mov
sub
bound
bound
cmp
cmp
add
clc
cmp
add
clc
andnps
out
add
les
push
cmp
add
cld
inc
sti
in
lcall
cld
add
popa
lcall
jp
call
push
insl
outsl
xor
jl
add
ja
bound
dec
sar
mov
out
lret
mov
test
mov
xor
pop
inc
xor
xor
pop
jg
ret
test
xchg
xor
incl
cmp
xor
sbb
sar
shll
xor
jp
gs
mov
call
mov
mov
jle
jae
outsb
je
push
sub
fwait
push
je
les
add
mulb
mov
int3
cmp
adc
jbe
pushl
fmuls
xor
insl
xor
jg
in
xlat
fimuls
xor
stc
xor
pop
xor
sbb
in
lcall
mov
xor
jno
xor
xor
xor
scas
pop
fs
stos
xor
dec
xor
pushl
scas
pop
mov
adc
lock
xorl
mov
jmp
jg
inc
or
jle
xchg
push
mov
loope
js
sbb
pushf
or
mov
adc
jg
incl
cld
hlt
or
pop
and
shlb
cmp
jecxz
push
sub
xchg
mov
adc
call
pop
jbe
daa
push
hlt
das
test
loopne
push
das
int3
add
inc
lcall
mov
pop
sbb
test
mov
xor
inc
mov
test
pop
or
fdivs
cltd
dec
or
imul
ljmp
mov
and
int3
stos
mov
push
adc
movl
fcomip
incl
les
dec
in
or
ja
pop
popa
and
lcall
int3
adc
pop
jl
in
cmc
and
nop
or
jbe
or
popf
fs
pop
fisubrs
cmp
arpl
xchg
xchg
xchg
add
pop
pushf
xchg
inc
adc
aaa
jl
xchg
popa
xchg
sbb
data16
cmp
adc
push
xchg
in
or
sar
js
push
adc
pop
dec
sti
mov
jno
adc
repz
xchg
lock
mov
or
push
push
cmp
lds
cld
mov
xor
nop
scas
nop
das
or
or
dec
nop
sbb
in
sbb
fidivrl
xchg
es
xor
mov
shl
mov
aas
lock
movsb
lock
and
lcall
pushl
std
jmp
js,pn
inc
mov
push
push
inc
and
jl
lea
loop
loopne
xlat
and
inc
scas
xorb
test
aaa
sub
inc
inc
sbb
cmp
dec
or
sarl
inc
lcall
out
ljmp
scas
sub
xchg
dec
jg
scas
cwtl
js
scas
mov
test
fwait
mov
push
adc
inc
push
imul
cli
pushl
fdiv
push
jb
jmp
or
mov
pushl
adc
loope
xor
xchg
ds
cs
xor
sbb
pushl
fsubp
xchg
fcoms
data16
adc
push
rclb
xchg
and
or
fs
sub
adc
js
mov
mov
cmp
xchg
xchg
or
add
shll
mov
and
lcall
sbb
cmc
mov
loope
xorb
cld
lcall
push
and
mov
jmp
cmc
add
call
mov
or
jg
fs
lods
and
sarb
add
shll
lcall
inc
inc
inc
out
sub
mov
rorb
mov
mov
rcrb
decl
xchg
mov
and
int
cmp
lcall
xchg
pop
or
ss
pop
mov
cld
cmpsl
cmp
js
xchg
rclb
loopne,pt
jo
arpl
loopne
pop
in
add
incl
mov
add
xchg
movsl
xlat
loopne
cmp
pop
icebp
xchg
fdiv
jl
pop
mov
cwtl
lds
lock
pop
cmp
cltd
adc
rorl
cs
sti
fsubs
ss
imul
shlb
nop
sub
test
sbb
orl
jl
mov
das
andl
mov
dec
jg
xlat
shlb
popa
insl
cmp
pop
add
test
popf
adc
shl
jmp
pushl
dec
dec
bound
push
or
test
punpckhbw
call
scas
fsubs
call
push
mov
xchg
inc
es
insb
scas
fsub
imul
ljmp
xorb
mov
mulb
jo
pop
lahf
or
gs
roll
add
pop
js
xor
mov
or
decl
call
xchg
xchg
push
aas
xor
and
imulb
mov
push
ss
ljmp
ror
mov
inc
sub
jb
add
mov
out
dec
sub
or
ljmp
lock
adc
cs
lods
mov
push
sbb
xchg
or
mov
mov
jge
mov
movsl
lods
dec
pop
sbb
std
ror
lods
mov
push
push
jo
out
das
pop
and
outsl
or
jmp
xchg
sbb
andb
pop
popa
or
mov
adc
mov
cmpsb
sub
mov
or
inc
cld
cwtl
lcall
pusha
sbb
cmp
hlt
rcl
lcall
cs
aam
test
push
aam
fmuls
dec
shlb
aad
out
add
ret
and
pushl
dec
or
mov
fildl
pop
sbb
jb
rcl
pop
xor
dec
cmp
lcall
dec
adc
aaa
mov
mov
pop
nop
adc
xchg
or
dec
fcos
incl
cmp
cmp
outsl
movsb
sub
daa
ss
mov
decl
test
jnp
push
pop
add
ret
divl
adc
iret
sub
ret
or
sub
mov
push
les
pop
sarb
or
push
lcall
int3
data16
mov
and
jl
cmp
roll
mov
sbb
adc
pop
inc
or
cmp
scas
sbb
testl
js
bound
popf
inc
push
dec
push
inc
push
adc
leave
inc
outsb
es
ja
faddl
dec
jbe
out
xor
xor
sbb
loope
inc
xchg
mov
das
daa
lock
movsb
ja
push
add
call
mov
addr16
and
out
sahf
sti
ljmp
cltd
test
add
pushl
xchg
loopne
cmp
rorl
jmp
adc
jg
xor
cld
in
std
in
push
dec
mov
out
stos
decl
inc
shr
popf
mov
add
mov
xor
xchg
sbb
xor
xor
shll
aam
adc
jmp
sar
repnz
or
dec
enter
adc
enter
sbb
xor
insb
cmp
push
adc
pop
mov
xor
push
dec
pop
jmp
sub
jbe
pop
pop
cmp
fwait
daa
mov
orb
sub
adc
mov
adc
int3
mov
push
xchg
mov
cmp
int
negb
jns
pushl
mov
clc
mov
push
test
mov
pop
adcb
les
loopne
jmp
hlt
out
xchg
jp
jnp
xchg
push
lock
pop
dec
test
cmp
inc
pop
rolb
fsubs
push
fbld
xchg
lock
hlt
add
nop
movsb
es
filds
or
rolb
test
dec
mov
jg
jmp
fistl
dec
sbb
call
and
subb
dec
decl
mov
or
js
inc
pop
shll
test
pop
lcall
push
mov
sub
adcb
pusha
cmp
adcb
pop
inc
xchg
out
movsb
cwtl
in
cmp
les
movsb
xchg
adc
aaa
out
push
xchg
push
jecxz
add
mov
lcall
adc
mov
push
inc
dec
xchg
lret
test
inc
inc
std
aad
push
cmp
pushf
cmp
aaa
pop
call
rcll
je
push
xchg
push
ljmp
rorb
pop
ret
stos
aad
xlat
xchg
out
mov
sbb
xchg
jmp
stc
into
sbb
mov
pop
cs
mov
jg
dec
call
aad
xor
adc
add
jmp
add
dec
adc
and
jo
ljmp
xor
xchg
decl
mov
ret
imul
in
mov
mov
movsl
movsl
cmc
inc
enter
in
mov
xor
in
lock
lock
test
std
jmp
and
fsubs
pop
inc
movsl
sbb
or
push
ret
cmpsl
inc
ljmp
push
push
xor
cmpb
or
popa
stos
inc
cmpsb
xchg
mov
adc
or
sbb
add
lds
inc
leave
dec
aam
shr
loope
sbb
rol
enter
nop
mov
add
jg
dec
test
xchg
pushf
inc
push
lods
dec
jb
cwtl
mov
icebp
test
incl
push
jl
aam
movsl
push
js
xor
push
fprem
outsl
inc
subb
jp
sbb
add
fildll
and
jo
xlat
xchg
lea
outsb
clc
call
push
lea
sub
cld
dec
in
dec
mov
call
jl
jae
je
movb
cli
lcall
lcall
sarb
dec
mov
add
ljmp
mov
xchg
xchg
adc
sub
and
sub
mov
decl
push
adc
clc
adc
into
jo
ret
xchg
and
and
cmp
xchg
out
mov
call
xchg
xor
cmp
pop
push
mov
adc
fwait
pop
mov
add
div
jl
daa
and
mov
lcall
clc
or
sbbb
insl
sbb
enter
jb
dec
call
fsubrl
pop
ret
std
inc
adc
and
sub
push
call
aaa
cmpl
andl
enter
enter
outsl
mov
aam
loopne
outsb
stc
sub
or
inc
and
or
pop
outsl
cmp
sub
pop
mov
sub
pushf
enter
and
call
lods
movsb
jns
lret
test
fdivl
xchg
xchg
pop
movsl
inc
loop
add
bound
pop
mov
cwtl
jp
inc
enter
js
ret
jl
and
mov
xchg
test
orl
sub
call
add
jp
cld
sbb
rol
and
push
jb
jg
call
mov
or
or
and
stc
push
adc
insl
cmpsb
jb
int3
or
outsb
ljmp
push
cld
inc
aam
xor
and
xchg
and
dec
dec
ljmp
and
dec
out
inc
adc
jmp
push
rolb
lock
sbbl
rcrl
push
or
sub
call
or
sub
jns
std
add
std
pop
push
pop
cmp
cld
std
or
and
xor
hlt
popf
add
mov
add
fadds
push
cmpsl
add
out
inc
cld
testl
lcall
add
std
add
mov
jnp
loopne
push
lods
lock
call
adc
mov
sub
push
sub
push
icebp
mov
mov
std
in
in
mov
mov
out
pushf
lret
neg
jo
xor
test
movsb
or
sub
add
fs
cmp
pop
stc
xchg
cwtl
xchg
xchg
fildll
lcall
popa
add
cmp
mov
ljmp
mov
lret
dec
fwait
inc
js
mov
insl
mov
ud0
push
loop
or
or
nop
xchg
js
mov
add
jl
sub
sub
pop
push
or
popf
sub
sub
jg
mov
sub
xor
std
or
rcr
inc
dec
pop
mov
pusha
push
cs
inc
mov
fwait
stos
jmp
jns
dec
std
aaa
pop
movsb
pop
cmp
jmp
dec
movsb
jl
movsb
test
test
inc
out
lock
popf
lret
push
movsb
enter
scas
mov
inc
loop
in
add
sub
or
pop
in
push
mov
sbb
sub
mov
ja
clc
lcall
and
or
lret
lret
inc
inc
pop
xchg
pop
subb
xor
mov
je
or
cld
add
and
xchg
ds
push
enter
cld
ds
dec
incl
or
cmp
pop
xchg
fwait
aad
inc
jbe
dec
stos
icebp
jmp
cmp
xorb
jg
stc
stos
shlb
popf
push
add
dec
inc
xchg
mov
insl
dec
stos
decb
mov
ficoms
ljmp
je
js
ss
fisubl
sub
enter
cltd
rolb
das
shlb
inc
enter
ss
gs
xor
xor
mov
and
push
cmp
ja
dec
mov
in
cltd
push
mov
outsb
sbb
mov
in
mov
or
es
jbe
mov
les
mov
in
in
sub
outsb
jp
clc
pop
imul
fistps
in
sub
repnz
push
call
call
out
addb
js
popa
in
fsubl
popa
std
pushl
bound
push
adc
xchg
dec
and
push
jae
push
pusha
sbb
pop
hlt
ss
pop
out
cmp
jg
add
in
pop
repnz
push
shll
mov
pushl
mov
push
imul
push
jno
imul
pop
ja
fisttps
ss
cli
jmp
jne
sbb
das
jo
adc
outsb
pusha
test
inc
adc
outsb
mov
adcb
jmp
outsl
pop
ret
cmp
xchg
pop
test
jae
add
cmp
mov
cmp
out
jns
pusha
xchg
sub
aas
inc
adc
das
loope
notl
and
cmp
mov
outsl
call
mov
sbb
insl
les
dec
jbe
popa
mov
movd
push
and
dec
pop
dec
sbb
jp
mov
fbld
sub
fbld
ret
insl
pop
or
test
insb
retw
outsl
and
jecxz
cmp
addl
insl
mov
out
das
push
ds
pop
mov
add
clc
xchg
popf
into
push
sbbl
push
jo
mov
dec
xor
dec
cmp
lock
ret
ljmp
push
into
push
add
pop
bound
or
into
mov
adc
dec
popa
and
pop
cmp
mov
xchg
push
mov
daa
mov
mov
and
or
pusha
movlps
fisubl
shlb
lea
jnp
cli
or
lcall
dec
sbb
mov
mov
xor
decl
stos
pop
mov
in
mov
jo
add
movsb
shlb
lahf
movsb
stos
rcrb
sub
leave
test
pushf
cltd
ficompl
mov
add
lcall
shll
shlb
addr16
push
pushf
sub
nop
mov
jns
mov
sbbl
cmpsb
sar
fcoml
ret
xchg
cld
ret
xchg
mov
adc
pop
mov
pop
rcrb
xor
fnsave
lods
pop
test
mov
mov
inc
xor
dec
subb
or
stc
add
rcl
pusha
mov
push
insl
pop
push
mov
or
lods
adc
jno
push
jmp
insb
mov
fisttpl
and
sbb
inc
jo
cmp
sbb
xor
fcomps
push
pushl
mov
xor
dec
pusha
lea
mov
jmp
adc
out
or
shlb
jae
push
andb
rorl
and
mov
adc
xor
jno
mov
inc
dec
gs
cmc
rorl
xor
hlt
pushl
add
scas
sub
jecxz
xor
inc
push
push
jb
pushl
pop
movsb
sbb
mov
sub
mov
addl
mov
jecxz
push
ja
or
cs
and
lahf
push
pop
dec
or
jno
add
cli
mov
mov
es
add
shrb
inc
inc
pop
pop
dec
adc
mov
push
gs
or
add
jecxz
add
xchg
out
or
mov
mov
inc
and
jne
push
inc
popa
mov
push
or
ljmp
outsb
ja
movsb
imulb
adc
sti
xchg
pop
adc
lock
inc
sub
push
adc
and
bound
ljmp
inc
xchg
repnz
inc
into
mov
jbe
loope
out
add
cmp
sub
inc
int
add
cmp
rolb
jbe
adc
jns
ucomiss
ljmp
mov
sbb
sub
jecxz
xor
push
call
cmpl
or
add
add
mov
fs
or
xor
fbld
jo
sbb
out
out
mov
mov
jbe
jbe
pushl
mov
imul
cmpsl
push
cmp
imul
jge
js
xor
roll
dec
loop
mov
inc
or
dec
push
dec
cmp
pop
cmpsl
scas
sbb
sbb
dec
fdivrs
cmp
adc
fmul
cmp
cli
lcall
ja
aam
sbb
mov
fsubr
mov
lcall
jecxz
int3
add
add
out
jbe
lods
rclb
pop
sbb
jbe
stos
mov
add
incl
dec
jne
add
ljmp
in
jb
sar
inc
mov
adc
subl
std
mov
add
pop
mov
mov
test
mov
xchg
movsl
fwait
inc
js
cmpsb
subl
mov
or
insl
jbe
decl
xlat
shrl
in
inc
pop
mov
push
push
ret
or
lea
nop
jnp
xchg
adc
insb
ret
icebp
mov
mov
xor
js
test
js
ret
ror
insb
lahf
inc
insb
jb
lret
fldenv
aad
adc
mov
gs
sbb
push
jbe
js
jg
fsubrs
in
xchg
push
aaa
repnz
lds
adc
cmp
fwait
push
jmp
loopne
std
ljmp
sub
and
lds
sarb
mov
mov
jmp
adc
test
dec
mov
enter
hlt
mov
test
test
ljmp
cmp
int
push
enter
arpl
xor
jb
xor
call
lcall
mov
dec
addr16
and
inc
xor
jo
and
sbb
cmp
loopne
jecxz
ret
and
pop
sbbb
cmp
jbe
sbb
cmp
fistl
jg
and
xchg
dec
fadd
fwait
cmp
shll
and
incl
or
pop
mov
mov
and
cmp
jg
dec
lret
cmpb
pushf
fs
mov
or
pushl
lods
or
in
aam
cmc
sub
stos
mov
add
push
aaa
jecxz,pt
inc
push
push
out
invd
mov
xlat
or
mov
jg
lods
xor
fmull
call
jmp
inc
lea
fcomps
fistpl
mov
sub
in
ror
push
dec
inc
cmp
inc
mov
mov
inc
mov
push
bound
add
rcrb
add
push
jmp
pslld
cli
pushl
in
xchg
je
bound
mov
and
subl
or
cwtl
or
inc
scas
inc
xor
and
dec
pushl
jns
data16
enter
xchg
xorl
add
mov
loope
movsb
and
loope
cmc
leave
aaa
leave
push
ret
xor
lods
loop
adc
xchg
or
fdivs
cmp
stc
xor
jb
mov
push
pop
adc
fadds
dec
scas
xchg
aad
inc
out
adc
das
add
jno
mov
or
pop
push
lods
mov
adcb
mov
jo
jg
or
xchg
adc
xchg
jbe
imul
pop
and
sbb
ret
mov
test
jge
add
jl
loopne
das
jo
ljmp
push
push
add
daa
lods
xchg
stc
fwait
pop
les
xchg
enter
es
pusha
jmp
shl
or
vmovups
add
cmp
xchg
xlat
or
xor
jbe
add
jecxz
sub
call
cs
adc
call
xor
mov
bound
inc
in
outsl
pusha
adc
add
mov
lods
test
enter
mov
xor
mov
jle
mov
mov
fdivrl
pop
lods
call
loopne
int
addb
es
jo
sbb
adc
add
dec
ret
fs
fs
push
xchg
filds
and
add
rcrb
das
xchg
push
test
ret
rcrb
test
testl
ljmp
clc
data16
mov
dec
ja
aad
sub
add
inc
jle
and
mov
push
push
jg
jg
or
lea
pop
in
mov
mov
or
inc
lea
jns
push
repnz
in
ja
push
xchg
rorb
sbb
call
pop
push
hlt
xchg
mov
inc
pop
push
inc
icebp
add
adc
in
call
jg
dec
test
jne
cmp
cs
push
sbb
daa
and
lock
cmpsl
push
mov
mov
dec
cmpsl
dec
ret
sti
call
es
enter
adc
sub
shr
fdivs
clc
adc
pop
xchg
or
call
mov
ljmp
lods
or
lods
sub
pop
inc
subl
cltd
mov
iret
jg
pusha
enter
fbld
and
fistl
loop
addr16
lret
movsb
mov
lods
sub
inc
fdivs
sub
scas
pop
mov
dec
xor
call
scas
xchg
lods
inc
xor
sub
mov
and
pusha
pushf
movsb
cld
fcomip
decl
jb
rcrb
xchg
out
scas
push
dec
cwtl
incl
xchg
hlt
mov
in
jle
andl
mov
subb
dec
xchg
adc
jnp
test
push
and
andl
in
cmpsl
push
call
aaa
pop
or
sub
pop
sbb
incl
cwtl
jle
pusha
ds
test
add
fnsave
stc
dec
test
cld
test
in
pop
xchg
ss
ss
lock
xor
shlb
insb
movsl
int
ljmp
enter
pop
push
mov
adc
ds
or
or
push
sub
fs
lock
pop
out
sub
jge
dec
test
mov
mov
test
pop
test
orb
add
fldl
or
pop
movsb
mov
push
dec
and
mov
pop
mov
mov
mov
mov
jg
push
in
xor
sbbb
hlt
clc
xor
or
cmp
and
add
cmc
ja
dec
push
push
pop
shrb
cmp
lcall
cmp
nop
xor
bound
mov
sub
sub
out
nop
and
test
in
mov
ret
js
pushf
aam
mov
xchg
push
lahf
pop
pop
cwtl
rcll
jg
dec
dec
cmp
inc
push
cs
xchg
call
or
xlat
pop
sar
dec
sub
sahf
inc
addl
addl
mov
adc
int3
push
add
sub
dec
jg
add
das
add
cmp
negl
fstps
in
fwait
and
cmp
popl
adc
xchg
mov
lret
xchg
daa
mov
in
inc
aaa
or
testl
push
jae
outsb
xchg
test
shr
shl
push
test
ljmp
leave
ffreep
repz
aad
xchg
movsl
inc
cmpsl
into
dec
sbb
xchg
fistpl
adcl
call
mov
add
sub
fucomip
or
mov
test
push
jo
jo
cmc
jne
push
leave
iret
xor
sub
mov
inc
dec
out
add
pop
insb
or
inc
jne
ljmp
aam
adc
pop
mov
dec
mov
pop
aas
dec
xor
xchg
add
add
decl
aaa
pop
repz
push
aad
fiaddl
or
jne
mov
xor
lcall
adc
dec
mov
repz
adc
decl
loopne
popa
rorb
adc
and
and
jnp
mov
ljmp
mov
ljmp
xchg
dec
mov
addb
cmp
cmpl
add
push
inc
addr16
fadds
jno
sti
jg
jle
pop
insl
add
mov
sub
lds
mov
mov
mov
decl
inc
popa
xchg
xor
mov
daa
test
ljmp
in
xor
cmpb
rcrb
ret
repz
mov
es
xchg
adc
and
pusha
test
das
inc
or
sub
popw
loopw
mov
pop
add
mov
push
testl
call
mull
in
jmp
cmp
pop
or
imul
dec
inc
daa
scas
pusha
shrb
je
call
mov
test
jp
and
add
add
dec
push
inc
popf
mov
nop
cmpl
jmp
movsl
pop
mov
jmp
dec
jne
mov
dec
scas
mov
or
push
insl
popa
jmp
lods
mov
add
rolb
pop
roll
pop
mov
sub
mov
adc
and
cwtl
inc
xchg
sbb
sub
push
mov
mov
push
jnp
or
pop
or
test
push
pop
mov
add
mov
in
in
ljmp
lsl
shrb
jg
test
xor
jno
add
or
mov
lret
daa
push
sub
incl
dec
jecxz
stc
loop
sub
stc
cld
sbb
cli
js
cltd
call
add
insl
lock
push
dec
cli
mov
dec
jge
xchg
sti
add
insl
xchg
cld
hlt
xor
in
call
in
xchg
or
or
xor
in
adcb
jg
cmp
xor
fsub
inc
cs
push
inc
pop
lods
dec
jae
paddb
rolb
jg
mov
enter
and
call
sarb
jmp
inc
mov
push
loopne
inc
jo
repnz
xchg
aaa
addr16
nop
cwtl
jbe
inc
cmp
popf
lea
nop
insb
push
dec
xor
loop
jg
fwait
mov
mov
adc
jno
out
jns
xor
data16
adc
or
jg
mull
mov
bound
outsl
nop
and
pop
out
pop
push
add
sahf
adc
imul
stos
lea
dec
lahf
jmp
filds
pop
addl
adc
sbb
incb
jecxz
js
fndisi(8087
hlt
and
push
jne
cmp
ret
jle
inc
divl
incl
out
jbe
arpl
mov
aaa
jo
xor
ds
add
jnp
cmp
ret
jnp
xrelease
or
jb
addl
addb
adc
decl
dec
mov
adc
mov
out
push
inc
jecxz
push
repnz
pop
cld
jmp
daa
adc
or
outsb
orb
or
in
int
loope
in
fmulp
inc
jb
add
aam
xor
imul
test
dec
inc
sub
mov
dec
inc
scas
mov
les
int3
pop
mov
aaa
fdivr
dec
inc
cmpsb
adc
xchg
sub
adc
int3
ds
dec
xor
aaa
add
test
daa
loopne
mov
xchg
or
loopne
pusha
pop
lret
into
xchg
movsb
cwtl
cwtl
pushf
push
pop
loopne
pop
dec
push
pop
stos
jno,pn
push
and
jmp
push
call
cmp
push
dec
in
mov
decl
adc
nop
das
cli
int3
pushl
inc
adc
jno
dec
js
mov
xor
mov
negl
jo
call
cwtl
mov
push
mov
int3
sub
jg
push
leave
mov
stos
inc
or
in
xchg
add
mov
addb
mov
pusha
and
add
sub
sbb
push
inc
mov
dec
sub
mov
cmp
add
mov
or
xor
xchg
push
sub
sub
mov
int
std
cwtl
mov
test
aad
mov
stc
in
stos
call
cld
xchg
rcl
push
xchg
jmp
roll
sbb
and
mov
or
mov
cld
pusha
xchg
pop
sub
aaa
push
sub
clc
scas
inc
rcll
gs
test
movsb
pushl
stos
mov
jbe
sbb
mov
addb
xchg
lods
dec
push
incl
cmp
sub
cltd
imul
lcall
xor
mov
test
push
jno
dec
fcoms
inc
sbb
sahf
add
jg
mov
pushf
push
rcrl
inc
pop
cld
add
add
or
pop
inc
jo
jl
adc
jnp
sbb
xchg
mov
pop
xchg
add
pop
sub
dec
out
inc
fs
inc
mov
mov
test
pushf
push
jl
and
jns
movsb
mov
xor
sbb
aaa
cmp
push
cwtl
and
sti
mov
cmp
cltd
dec
add
or
mov
outsb
add
push
sub
ss
insl
clc
pushf
sbb
inc
clc
incl
xchg
lock
nop
mov
mov
addb
cltd
in
pop
mov
mov
or
push
jno
sub
decl
js
cmpsl
dec
xchg
rorb
pusha
test
enter
fisttps
mov
cmp
mov
lcall
sbb
adc
push
das
test
lahf
sub
aaa
roll
push
out
mov
adc
in
ret
xchg
dec
xchg
xchg
xchg
cld
or
adc
mov
incl
filds
and
shlb
sbb
pop
cld
jg
sub
test
or
test
cmp
nop
mov
sbb
jg
js
fs
aaa
sub
and
imul
add
lcall
pop
jns
in
or
in
lock
jo
or
mov
or
decl
inc
jo
inc
fwait
and
jb
lea
mulb
incl
push
jno
jecxz
aad
or
inc
aaa
lea
mov
mov
xchg
mov
push
call
mov
pop
sahf
out
jb
imul
mov
sub
xchg
lcall
imul
and
push
out
pop
call
insb
push
lret
jl
decl
xor
cmp
pusha
popl
mov
inc
iret
mov
pop
insb
or
xchg
cld
incl
adc
sub
out
inc
sbb
push
push
cmc
mov
mov
and
mov
cli
pop
das
addl
push
imul
ljmp
fwait
xor
mov
clc
jle
pop
mov
adc
sub
incl
outsb
pop
faddl
stc
or
push
or
mov
ret
adc
xchg
mov
dec
pop
ds
je
push
and
rol
aaa
adc
out
jle
jno
mov
or
repnz
xor
jl
add
pusha
mov
call
mov
jl
mov
in
lock
add
outsl
mov
dec
push
jl
pop
adc
shlb
add
sub
enter
and
addl
and
addr16
mov
adc
dec
aaa
xor
or
push
test
jg
jbe
sub
mov
jo
fcompl
jmp
or
sbb
xchg
cmp
cli
cmpsb
sbb
in
sub
dec
lds
push
or
outsl
push
stos
xchg
ljmp
mov
cwtl
in
jmp
or
decl
pop
pop
das
add
pop
cmp
lret
je
pop
inc
add
inc
ljmp
inc
pop
loopne
movsb
and
cmp
sarb
sub
or
fdiv
mov
inc
int
xchg
popf
shlb
test
ljmp
pop
xor
mov
jbe
pusha
jne
or
mov
xchg
mov
xchg
adc
call
or
or
cmp
cmp
add
push
add
push
clc
dec
jle
and
aad
outsl
xor
ficoms
psubusw
js
movsl
cmpsb
icebp
vmovaps
cmpb
xchg
sub
call
push
or
aam
dec
jecxz
lock
push
insl
test
dec
int3
adc
adc
add
jnp
jb
lods
in
mov
incl
pop
and
push
ds
dec
add
scas
xchg
mov
and
push
push
test
incb
ss
shrb
mov
popa
cs
inc
sbb
vmwrite
decb
clc
pop
cmc
movsb
incb
cmpsb
xchg
jno
test
lea
sbb
lcall
xchg
or
movb
sbb
and
xorb
imul
pusha
je,pn
or
xchg
adc
add
xchg
outsl
xor
add
mov
and
push
add
and
addr16
add
jmp
dec
pop
pop
pop
sbb
leave
leave
push
xor
jb
fbstp
fnstsw
sub
pop
mov
add
adc
mov
sbb
add
jb
int3
mov
add
jl
xchg
dec
shrb
mov
enter
cmp
push
pop
pop
dec
lret
rcrb
mov
incb
xchg
inc
jecxz
mov
in
insl
or
insl
add
inc
loopne
sti
cmp
std
xor
scas
add
or
push
mul
enter
in
std
and
mov
or
or
fbld
pusha
rcr
jp
loopne
xchg
xchg
xchg
dec
call
fmul
sub
fsubs
pop
adc
les
or
enter
lcall
std
and
aaa
mov
xorb
aam
or
movsb
std
cmp
and
aaa
sti
in
pop
pushf
std
add
and
xchg
sbb
add
cwtl
mov
in
fbld
rclb
inc
iret
cwtl
std
or
pop
xor
test
loope
popa
and
std
fs
sbb
lods
ljmp
pusha
add
test
pop
std
dec
add
or
ret
pop
pusha
mov
pop
in
pop
mov
aas
arpl
sti
sbb
push
std
cmpsb
and
and
lds
pop
nop
inc
xor
sahf
or
push
sub
inc
add
inc
dec
and
sbb
repz
add
inc
push
inc
and
call
cmp
adc
xor
xlat
and
das
clc
incl
dec
ret
fildll
push
stos
test
sti
lret
popf
dec
cmpsb
pop
leave
and
pushl
leave
mov
mov
add
mov
xchg
fcomp
sub
and
ss
add
lock
hlt
clc
rcrb
jo
dec
mov
or
sub
jmp
jg
jg
stos
push
and
jnp
or
xchg
jo
fidivrl
icebp
in
leave
fcoms
lods
mov
shl
int3
xor
and
in
hlt
add
scas
adc
rorl
shlb
pop
call
or
outsb
mov
fiadds
mov
dec
push
mov
in
ret
jmp
insb
ss
mov
mov
and
push
mov
push
rol
mov
jg
add
jns
jl
and
ljmp
rcrl
arpl
nopl
mov
fadds
decb
bound
push
ljmp
inc
pop
or
iret
mov
dec
pusha
dec
mov
jnp
add
jmp
inc
mov
arpl
ja
jmp
adc
or
cmp
int
arpl
decl
jae
popa
xor
ja
fildl
push
mov
je
mov
fdivr
jmp
fs
jnp
and
xchg
xor
push
cmpsl
xorl
inc
mov
xor
je
mov
push
in
mov
sub
mov
or
inc
xchg
lret
loopne
filds
dec
sbb
movsl
inc
dec
cmp
popa
inc
ljmp
add
xchg
cmp
lcall
push
jle
rdmsr
cs
and
mov
push
pop
mov
xchg
sarl
pop
mov
jp
ds
sub
jg
insl
mov
jg
pop
xor
outsb
adc
mov
stos
push
cmp
mov
mov
adc
mov
add
incl
daa
das
pop
les
and
in
das
sbb
xlat
in
and
mov
push
mov
dec
or
lcall
loopne
outsb
out
sbbb
sahf
clc
and
sub
fstpl
or
movsb
and
jb
jo
and
lcall
mov
mov
pop
outsb
sub
nop
pushf
mov
movsb
dec
es
mov
lcall
lods
pushf
sub
jb
pop
pushf
repz
inc
mov
cwtl
cwtl
push
lcall
ds
or
pop
or
push
lds
cld
aad
test
pop
pop
movsl
mov
fdivr
mov
cmp
movsb
test
mov
mov
xor
or
pop
add
adc
adc
xchg
or
hlt
jg
pop
repz
dec
dec
mov
adc
call
adc
and
lahf
int
mov
bound
inc
adc
inc
rolb
add
sahf
in
fmuls
dec
jne
jb
ja
add
call
enter
adc
inc
lea
adc
add
ja
imul
fisttps
andb
lea
lods
jmp
dec
mov
enter
or
out
and
cs
and
add
and
call
incl
mov
shld
inc
shrl
jl
cmc
inc
cmp
jg
enter
add
test
push
pop
ss
cmp
and
add
iret
push
pop
dec
mov
add
lea
mov
cmp
loope
push
sbb
nop
decb
jl
inc
mov
cmp
push
mov
inc
cs
push
cs
lret
or
stos
pop
xor
jb
pop
or
pop
shrl
shrb
xlat
xchg
stos
dec
or
cmp
mov
hlt
pop
leave
and
decl
lods
mov
xchg
test
sub
loopne
and
in
mov
sub
imul
enter
int3
xor
sbb
rcrb
xchg
sar
adc
call
pushf
lock
pop
add
cs
ss
sbb
or
mov
sub
xchg
in
adc
push
repz
decl
xor
lea
dec
loopne
shlb
and
xchg
pushf
ljmp
enter
xchg
imul
xor
in
in
push
loope
lcall
nop
mov
es
pushf
and
call
pop
add
mov
push
add
push
ds
adc
pop
nop
call
or
mov
rorl
add
into
xchg
cmp
mov
dec
adc
nop
pop
sbb
ret
leave
pop
out
sub
int
shlb
or
adc
inc
lods
clc
enter
lret
faddp
inc
lock
inc
add
sbb
xchg
xor
call
push
shl
add
test
daa
pop
daa
mov
roll
push
cmp
cmp
insl
or
cmp
mov
outsb
js
enter
or
add
cmp
test
test
inc
hlt
or
movsb
cmp
in
mov
add
inc
jmp
pop
push
in
loopne
xchg
dec
scas
cli
out
mov
jnp
test
pop
push
mov
cwtl
xor
pop
inc
xchg
pushl
cld
xor
sbb
data16
ljmp
imul
pop
jnp
or
sub
nop
call
xchg
sbb
inc
enter
xlat
pusha
push
in
sbb
in
lea
rolb
out
pop
dec
inc
enter
hlt
adc
add
std
push
fidivs
add
test
sbb
cmp
xchg
dec
cmp
stos
sarb
cmp
std
jg
xchg
lods
std
lods
xorl
mov
add
call
pushl
std
and
test
inc
and
xchg
jl
pushl
mov
mov
add
fisttpll
mov
xchg
lods
pop
xchg
std
pushl
push
jb
cmp
cwtl
in
push
lock
std
dec
or
adc
insl
push
out
adc
dec
jo
dec
je
push
add
lcall
add
mov
sub
inc
jl
jl
shlb
xorb
xlat
lret
mov
sti
mov
shrb
movsb
fdivs
stos
movsb
mov
leave
sub
dec
shll
lcall
jo
jo
nop
out
push
pusha
loopne
loop
or
mov
inc
inc
pusha
mov
es
movsb
cmp
cwtl
ss
lds
aam
fdivrs
adcb
clc
cld
pop
shlb
or
adc
sbb
popa
or
and
jb
faddl
xchg
add
mov
mov
dec
mov
jb
mov
cltd
fs
incl
cmp
pop
pusha
cld
pushl
push
dec
push
cmpsb
out
mov
and
sbb
js
jnp
and
adc
inc
or
stos
mov
test
mov
mov
pop
push
xchg
stos
pop
lock
mov
push
inc
in
movsb
mov
notl
jmp
pushl
ja,pn
dec
das
insl
pop
xor
aad
push
imul
and
scas
loope
push
mov
inc
adc
loopne
pop
pop
lock
inc
pop
and
test
roll
je
xor
mov
mov
out
daa
adc
imul
and
xor
mov
pop
push
push
cmp
ljmp
sbb
xlat
xor
sar
outsb
inc
arpl
dec
and
sti
into
test
xchg
inc
push
fisttps
hlt
mov
add
add
lds
jecxz
mov
xor
out
outsl
sti
mov
push
cmpsl
or
or
sub
orl
pop
insb
dec
jmp
outsl
rolb
and
aaa
and
mov
addr16
ret
mov
xchg
inc
push
ds
rcl
inc
adc
pop
je
scas
ss
pop
inc
out
pop
push
sub
and
decb
outsl
or
or
dec
inc
hlt
pop
xor
and
hlt
add
dec
mov
inc
mov
in
fdivl
pop
pop
stos
xchg
decl
ficoms
push
cmp
test
pop
and
xchg
mov
nop
jl
movsb
test
add
xchg
sub
add
sub
add
pop
cmp
sbb
cli
jmp
or
cmpl
xor
or
adc
call
add
lcall
incl
fbld
adc
mov
xor
cmp
cmp
out
xor
dec
jg
pop
and
loopne
decb
pop
clc
int3
shlb
mov
sahf
adcl
inc
and
mov
push
in
jns
fcoml
int3
mov
jg
and
pushf
mov
lret
les
enter
inc
inc
inc
xor
xor
xor
stos
lcall
lcall
cmp
in
fcompl
xchg
sub
cld
loope
add
sbb
lods
or
cmp
fsubs
incl
push
les
int3
push
std
add
cli
adcl
outsb
or
lods
mov
imul
add
add
test
jb
jmp
jb
mov
daa
mov
pop
sti
dec
dec
add
push
dec
in
jns
test
sub
sbb
add
faddl
int3
or
cltd
push
fs
fbstp
nop
push
pop
push
adc
push
xchg
rorl
inc
movsl
sbb
cli
jl
pushl
add
adc
adc
lock
outsb
add
int
cld
call
lock
xchg
cmp
sahf
stc
mov
fwait
bound
xor
cmp
nop
lret
incl
lret
xor
das
pop
adc
xor
bnd
sbb
sub
lds
rep
loope
lock
mov
add
sub
hlt
sbb
enter
mov
dec
stc
int
ds
imul
and
xor
lcall
pop
jne
leave
rorb
imul
or
nop
in
mov
add
xchg
fsubl
int3
test
xor
ror
sbb
jne
lods
xor
pushl
bound
xchg
pop
adc
mov
mov
filds
mulb
aaa
pop
cmp
inc
adc
lcall
mov
in
mov
mov
push
adc
push
or
pop
fmuls
add
aad
dec
and
dec
jg
mov
movsb
ja
xchg
or
jnp
mov
sub
cmp
add
pop
loopne
cmp
mov
rorl
or
sub
or
ljmp
cmp
add
pusha
sbb
pop
dec
pop
pop
into
leave
dec
ret
mov
jl
inc
shll
ljmp
xchg
mov
jno
sbb
gs
cwtl
cmp
mov
dec
jo
icebp
ljmp
pop
movsb
push
insl
test
fwait
nop
push
decl
sbb
and
sbbb
in
jnp
enter
ljmp
std
push
arpl
xchg
test
adc
sub
jle
push
mov
shl
inc
mov
sbb
cld
jmp
adc
lods
insl
sub
xor
cld
jg
pushl
xor
or
insl
movsl
pop
mov
xlat
push
add
sbb
mov
pop
inc
inc
lods
sub
pop
mov
sar
fneni(8087
sub
pop
or
push
xchg
mov
dec
xchg
mov
adc
or
or
addr16
enter
ljmp
hlt
xor
or
push
push
add
lods
shlb
shrb
inc
xor
and
inc
outsb
push
out
pop
lahf
cmp
push
lret
inc
fdivl
decl
out
jns
cmp
pop
inc
les
es
out
xlat
es
xchg
inc
out
lret
jg
dec
push
mov
cmp
and
add
and
bound
xlat
and
or
or
out
xor
les
rolb
dec
xchg
popa
fisttpll
add
sub
add
adc
adc
int
xchg
wbinvd
movswl
pushl
shl
push
and
cwtl
inc
loope
sub
rolb
rclb
xor
dec
adc
xchg
add
add
hlt
mov
sub
inc
in
mov
and
add
fstps
mov
dec
sub
rol
dec
jne
push
fdivl
dec
add
jnp
inc
cltd
sub
lods
and
inc
inc
push
icebp
fwait
out
repnz
sbb
sub
decl
in
pop
sub
shrb
add
pushf
cmp
sbb
mov
movsb
mov
xorps
mov
xor
mov
add
cmp
add
in
sbb
ficomps
inc
add
or
or
sub
mov
mov
loope
test
test
sbbb
les
jp
test
adc
ljmp
mov
cmpsl
lret
add
inc
push
xchg
loop
nop
movsl
lds
out
jne
push
mov
test
aam
decl
sub
push
adc
mulb
test
scas
push
test
ss
inc
xchg
inc
lcall
push
fcoml
add
inc
and
push
pop
or
pop
imul
jo
loopne
inc
pop
call
pushl
daa
test
addr16
nop
sbb
aas
push
and
inc
loope
dec
aas
mov
pop
mov
mov
mov
dec
inc
es
leave
test
and
push
into
dec
sarl
push
jno
repnz
mov
mov
mov
dec
cs
rorl
push
pushf
fbld
pop
andb
dec
or
imul
sar
lcall
or
inc
push
mov
lea
es
pop
js
test
cmpsl
add
cmpsb
incl
mov
xchg
in
mov
adc
jo
add
inc
pushf
dec
call
addr16
add
stc
add
pusha
int3
cmpsl
loopne
test
lock
fisttps
jmp
sub
lcall
mov
sarb
cld
sub
jbe
shlb
call
cli
insb
push
add
or
push
mov
or
insb
nop
or
mov
in
mov
lcall
nop
or
pop
mov
repz
sbb
pushf
aaa
add
aaa
loop
add
icebp
das
clc
pop
sub
rolb
js
xchg
xchg
push
sub
test
cld
lea
add
jp
imul
jg
in
mov
add
loopne
cmp
sub
mov
ljmp
aam
sbbl
rolb
subl
je
push
inc
or
mov
sbb
mov
xor
sar
fistpll
jae
mov
rcrb
add
aaa
fsubl
sub
pushf
or
add
jmp
cmp
add
add
sar
jo
pop
adc
in
xchg
cs
sub
pop
subb
jae
xor
push
sbb
jmp
stos
je
or
xchg
jg
push
testl
das
stc
aaa
sub
inc
push
inc
xor
inc
and
push
push
jae
sbbl
mov
jo
ljmp
add
cmpsb
es
and
dec
cmp
pushl
sub
adc
jmp
shrb
dec
psubb
int
loope
iret
imul
and
or
mov
es
dec
sbbl
lret
pusha
push
icebp
jg
sub
jmp
cmp
push
and
mov
add
call
fildll
push
inc
leave
cld
rorl
pusha
adc
pop
iret
cmp
sti
decl
clc
add
sub
call
enter
push
sti
and
lcall
cmc
cmpsl
xchg
adc
adc
sbb
xor
jg
cmp
dec
dec
pop
xor
pusha
fildll
insb
cld
dec
jo
js
jl
lods
or
jmp
fldt
mov
pop
cmp
sub
adc
and
or
call
xchg
icebp
decl
dec
mov
dec
pop
adc
incl
sbb
outsl
push
and
jl
mov
pop
decl
addr16
je
xchg
lret
mov
daa
popa
or
xor
pop
xor
pop
cmpsl
ljmp
xchg
or
mov
mov
ja
push
std
jg
test
std
adc
test
iret
xor
push
cltd
cwtl
inc
loop
jnp
decl
add
aaa
jo
dec
sub
inc
stc
pusha
pusha
jnp
imul
dec
push
or
push
aas
decl
leave
push
lea
add
dec
sub
int3
push
dec
nop
mov
outsl
cli
cmp
lods
sbbl
mov
mov
jae
mov
ljmp
mov
jno
jge
out
test
pop
cmp
or
adc
mov
pop
jge
movsb
movsb
cmp
jns
xchg
rclb
xchg
ficoms
imul
fldcw
imul
and
cmp
fwait
push
dec
xchg
sub
and
and
nop
cmc
dec
push
jmp
aas
sbb
adc
sub
fbld
fwait
les
cltd
push
pop
sbb
push
inc
mov
cmc
movsb
push
test
into
movsl
cmpl
mov
and
inc
xor
and
test
mov
or
mov
dec
sbb
in
fs
jae
jns
sub
or
fiaddl
mov
sbb
pop
adc
push
sbb
pop
sbb
pop
ret
mov
andl
outsl
decl
mulb
jb
adc
sbb
or
cltd
jg
decb
in
xchg
dec
testl
gs
rcll
nop
xchg
add
fdivr
insl
and
ret
cmp
mov
mov
in
les
sbb
enter
sbb
inc
or
mov
inc
push
mov
lea
mov
mov
and
aaa
enter
ret
insl
movsb
mov
shrl
or
xchg
mov
mov
jmp
sub
adc
orb
mov
inc
sbb
test
mov
les
push
mov
xorl
xchg
lret
xchg
mov
mov
inc
je
pusha
bound
test
lds
aaa
sub
andb
sub
and
test
call
lods
in
and
add
dec
sbb
xor
nop
mov
rol
enter
dec
adc
fdivrs
leave
imul
lock
adcl
sbb
jb
loopne
xor
jno
inc
ror
inc
scas
push
pop
cltd
sub
fisttpl
mov
scas
lea
lret
xlat
and
pushl
les
sub
inc
mov
loopne
call
fsubrl
ja
test
pusha
xchg
add
or
inc
ljmp
popa
cmpsl
inc
popl
mov
lahf
ja
and
popa
dec
andb
incl
test
cli
outsl
or
outsb
add
add
stos
jmp
mov
iret
aas
add
mov
push
dec
push
rclb
lahf
test
ret
daa
aad
dec
scas
lahf
or
cmpsb
stos
lcall
mov
arpl
push
fistpl
test
mov
imul
out
sub
jmp
test
cmp
ljmp
xor
or
add
and
test
ljmp
loopne
mov
imul
insl
xchg
insl
jl
cmpsb
in
adc
nop
add
push
push
test
loop
push
or
dec
sti
add
pop
and
jg
roll
sti
in
cmp
sub
pusha
add
outsl
or
fistl
decl
mov
pusha
sub
clc
inc
mov
and
inc
ret
mov
push
pop
adc
decl
dec
ret
nop
inc
push
loopne
jp
adc
xchg
insb
outsb
int
inc
mov
call
jp
xchg
pushf
pushf
nop
fdivrs
fmuls
das
clc
aam
pop
pushf
dec
adc
sarb
adcb
rolb
or
jnp
int3
and
dec
clc
call
enter
movsb
loop
xor
jmp
call
es
xchg
inc
cmpsb
sar
cmp
cltd
mov
test
pop
and
fstpt
adc
enter
dec
pop
aas
adc
mov
jnp
and
pop
add
or
push
add
cmp
mov
lcall
inc
push
mov
jl
mov
adc
cli
cwtd
lods
data16
ret
insb
call
mov
in
jl
or
or
mov
push
push
lds
cmpsb
ret
dec
and
nop
pop
loopne
lret
leave
cmp
mov
call
mov
pushf
push
push
add
out
call
ljmp
in
leave
push
rolb
stos
inc
sub
push
icebp
or
insl
sbb
mov
decl
pop
rorb
dec
jp
sbb
jl
xchg
scas
clc
lcall
jmp
jo
je
sbbb
test
ljmp
push
pusha
aad
jmp
scas
xchg
inc
es
cld
jmp
sbb
or
sub
fcomip
lds
xchg
push
cmp
lock
rcr
mov
sbb
jns
jo
call
add
jge
push
std
pop
and
adc
ret
jne
pop
xchg
movsl
push
mov
cltd
movsb
decl
inc
fldcw
fs
jb
pusha
insb
leave
pop
xor
jg
pop
test
adc
stos
cli
sbbl
dec
inc
in
lahf
jbe
push
push
mov
cld
sub
push
mov
clc
push
in
out
xchg
mov
cmc
test
push
jae
mov
aad
in
incl
pop
mov
mov
loop
xchg
xchg
pop
movsb
xchg
mov
mov
icebp
pop
call
mov
xchg
add
test
das
add
sbb
adc
or
adc
imul
orb
nop
dec
in
xchg
lea
add
lret
sub
inc
sub
mov
adc
dec
loop
pop
hlt
and
out
imul
sbb
sbb
jno
dec
and
imull
jle
pop
xor
movsb
sbb
or
jg
mov
mov
xchg
les
outsl
pushf
adc
push
adc
call
pop
sub
xor
int3
cltd
in
add
fdivrs
sub
jmp
or
cmp
xor
jmp
add
push
insb
xchg
cmp
les
push
pop
and
rol
mov
mov
clc
call
mov
pop
repnz
or
addl
loope
shrb
add
cmc
call
test
cmpsb
sub
out
lds
decl
addb
rcrl
pop
rcl
sub
iret
outsb
inc
mov
lcall
xlat
adc
insb
jmp
outsw
je
fistpll
mov
and
repnz
cltd
pop
cmc
pushl
add
pop
xorl
add
adcb
pushl
mov
or
or
xor
sub
aaa
jne
sub
into
jne
pop
xchg
or
ljmp
adc
imul
and
mov
jnp
ja
ja
lret
addr16
mov
adc
imul
push
push
sbb
sub
incl
mov
xlat
add
push
popa
shrb
xchg
dec
adc
or
cmp
test
das
lea
lds
add
imul
ret
insb
imul
jmp
push
inc
mov
ret
inc
push
dec
arpl
pop
push
add
jns
xchg
cmp
push
inc
js
xor
scas
dec
cld
jmp
nop
scas
aas
or
inc
js
add
mov
adc
mov
int3
rorb
xchg
fsubrs
sbb
in
jb
hlt
clc
mov
enter
or
mov
movsb
in
inc
or
and
movsb
out
sub
xor
in
sub
and
inc
lods
inc
pop
pop
pusha
fs
insb
scas
xchg
push
loop
mov
rclb
fs
push
outsl
repz
push
adc
or
inc
cld
aaa
ds
stos
pushf
add
stos
and
lods
ret
jg
mov
rorl
scas
adc
cs
push
test
dec
repnz
add
mov
xor
out
outsl
and
sbb
sbb
test
and
lahf
test
lret
sarb
mov
test
mov
decl
lock
cwtl
test
push
adc
mov
and
or
cmp
push
jb
je
insb
xor
add
add
sbb
xchg
std
mov
fmuls
loope
retw
pop
insb
add
cmp
out
les
clc
mov
pop
or
pop
xchg
or
or
test
insb
call
lcall
test
pop
js
inc
xor
mov
jle
lcall
or
mov
jg
ljmp
or
loope
add
add
outsl
lahf
or
xchg
test
sti
mov
in
dec
test
dec
or
lcall
jmp
in
push
enter
das
cld
pop
pop
sub
xchg
fsts
and
aad
outsl
jg
icebp
insb
fidivs
js
inc
and
les
enter
jg
mov
mov
mov
fbld
and
and
insl
call
ficoms
adc
sub
movl
xor
or
or
cmp
ljmp
push
or
sbb
push
xchg
dec
lcall
in
xchg
call
hlt
hlt
xchg
mov
mov
jbe
test
xor
stc
mov
mov
fsubl
jecxz
adc
andb
loopne
add
and
mov
add
decl
add
shlb
bound
inc
xor
mov
mov
mov
mov
aam
dec
pushf
and
inc
mov
incl
xchg
or
ret
rdtsc
mov
pop
pop
insb
cmp
lcall
inc
int3
stos
gs
imul
lret
leave
stos
dec
cmp
jmp
outsl
fs
and
push
adc
adc
fists
cld
call
mov
popl
jae
repnz
lret
cmp
popf
ss
lods
ret
sar
sbbb
in
fimull
pop
enter
dec
call
xchg
icebp
lcall
jge
push
loopne
les
push
cld
mov
jnp
xchg
shll
sbb
push
fdivr
aas
pusha
mov
mov
cmp
sbb
test
outsb
xor
lds
xor
pop
dec
mov
cmp
insb
stos
inc
sub
outsl
inc
sahf
aam
dec
clc
ljmp
enter
xor
jo
push
mov
push
je
outsl
mov
outsl
insb
adc
cld
int3
int3
clc
stc
lds
idiv
sub
xchg
lds
inc
sbb
les
push
sarb
or
mov
loope
mov
sar
mov
pop
lods
mov
fsubs
and
rolb
or
dec
pop
lds
ljmp
dec
add
dec
mov
fnstcw
cmp
call
push
push
sbb
push
inc
pushf
frstor
push
push
pushf
xor
testb
add
xchg
sarb
mov
pop
xor
test
sahf
nop
push
nop
roll
sub
adc
test
ljmp
mov
das
or
xchg
or
ljmp
outsb
decl
decb
jmp
and
sarl
test
jge
hlt
jmp
push
inc
lea
loop
dec
inc
test
dec
sbbl
push
movl
scas
nop
add
fildll
add
add
or
test
and
subl
lods
das
pop
ljmp
xor
inc
mov
in
push
test
incl
lea
cltd
dec
push
add
decl
sub
sbb
jl
mov
les
dec
subb
out
inc
test
and
sub
push
sahf
sar
lock
mov
lret
push
and
pop
jo
mov
lods
or
jg
ljmp
test
gs
in
add
add
and
sbb
fcompl
push
in
flds
movsb
and
test
call
addb
clc
jb
mov
addb
test
mov
js
inc
sar
adc
push
fs
sbb
out
and
mov
xchg
and
shrb
inc
add
popa
jmp
xchg
sub
mov
adc
ret
fiaddl
mov
mov
xchg
decl
and
push
mov
ror
xchg
ret
lcall
inc
adc
xchg
inc
add
xchg
inc
and
inc
popa
mov
xchg
stos
dec
jmp
jmp
mov
sub
ljmp
in
test
dec
inc
cmp
jl
leave
and
decb
out
or
and
mov
jg
and
enter
mov
or
inc
addr16
in
imulb
cmp
cld
imul
and
push
sub
mov
inc
aad
je
repnz
lods
add
mov
add
cli
pop
jnp
lods
cmp
in
enter
pushf
nop
xchg
xchg
das
and
or
mov
std
and
incl
fimull
xchg
lret
xor
out
sbb
and
dec
daa
fsubl
xchg
adc
sbb
cld
lock
es
add
mov
and
cwtl
push
and
dec
cmp
cmp
pop
jb
xchg
test
dec
dec
mov
movsl
jle
cmp
test
arpl
insb
xchg
mov
incl
push
and
mov
int3
adc
out
xchg
lea
sbb
sub
lock
in
arpl
into
in
sbb
test
es
repz
lcall
xchg
jne
add
cwtl
sbb
cmp
sbb
std
push
pusha
mov
in
rcrb
and
int3
mov
enter
test
xor
and
inc
dec
or
jmp
mov
clc
mov
inc
imul
and
adc
inc
inc
jb
ljmp
or
inc
mov
cld
and
ja
adc
jg
adc
or
mov
inc
cmpsl
and
pop
cmpb
sahf
mov
xor
pop
scas
xor
sti
sbb
cld
repz
inc
in
aam
insl
mov
cld
mov
dec
xor
cld
or
leave
and
aaa
and
cmpsl
loop
cld
dec
rcrb
sub
inc
mov
mov
mov
aaa
mov
jo
rorb
movsb
cld
test
test
mov
ds
pop
push
test
add
lods
or
bound
pushf
aad
add
int
cwtl
cwtl
test
xchg
dec
es
and
mov
xorb
inc
aad
or
lods
mov
push
mov
sub
and
in
dec
movsb
and
xchg
pop
add
xchg
sub
fistpl
nop
in
add
je
jb
das
add
sub
and
mov
and
mov
xchg
call
outsb
and
push
sub
add
add
xchg
xchg
ljmp
ficomps
cld
sti
pop
int
test
dec
add
mov
call
sarb
add
add
add
sti
and
daa
in
decl
enter
mov
mov
inc
incl
sub
incl
sti
fs
add
push
or
inc
mov
sub
test
aaa
les
rolb
lcall
jns
mov
add
in
sub
out
in
add
and
out
call
movsb
and
sub
dec
pop
adc
pop
mov
lock
cmc
pushf
lods
pushf
lret
mov
xchg
adcl
in
in
ss
or
dec
mov
lret
fs
inc
repnz
xchg
or
xchg
out
jb
in
or
push
jmp
cmpsb
sbb
dec
aam
push
pop
mov
loope
call
inc
inc
pusha
leave
add
test
jle
daa
hlt
fs
and
sub
mov
push
add
lret
leave
dec
sbb
test
xchg
lods
or
data16
hlt
cli
add
cmp
or
adc
or
mov
cli
cmp
jo
xchg
adc
cli
add
test
ljmp
andb
xchg
cli
fmuls
lahf
sub
shl
pop
nop
cli
mov
aad
add
ror
enter
mov
lahf
mov
sbb
mov
std
test
iret
adc
or
inc
sub
add
mov
xchg
mov
inc
loop
pop
rolb
out
fcomps
leave
test
ja
push
movsb
dec
enter
movl
push
inc
pusha
xor
dec
fcomip
aaa
inc
pushf
fs
push
mov
cli
cmp
rcrb
out
cli
pushl
pop
dec
test
lods
sbb
pop
rolb
stos
dec
ds
xchg
push
push
ds
and
push
leave
jmp
loopne
faddl
inc
push
insb
lock
rcl
xor
js
lds
adc
mov
cld
add
mov
mov
out
cli
daa
inc
rolb
lcall
jb
ret
cli
in
scas
inc
push
mov
movsb
jno
dec
push
or
and
add
push
add
ret
mov
push
add
ret
inc
lock
mov
shlb
sbb
jns
jg
call
fimuls
inc
lahf
cld
stc
or
pop
enter
popf
out
sbb
or
sub
fcmovnu
ret
adc
std
fistpll
dec
pop
repnz
stc
add
les
insb
xlat
jg
dec
or
xchg
stc
insb
or
push
sub
stos
call
shlb
sbb
stc
or
dec
jle
cmp
ud1
movsb
xor
sbb
test
loopne
jns
mov
xchg
inc
or
decb
sub
test
stc
add
nop
add
mov
pop
fs
xchg
aad
cli
mov
inc
rorb
vpsrlw
andl
sbbb
dec
shl
in
xor
xor
cmp
push
add
pop
shl
aad
sbb
xor
pop
daa
jl
dec
ret
mov
adc
dec
and
cli
loopne
inc
insb
xchg
xchg
add
imul
mov
lahf
call
clc
clc
or
fs
cmp
clc
cwtl
sbb
js
negb
or
mov
inc
xchg
mov
dec
jb
out
xor
or
or
cmp
cltd
nop
push
add
mov
xchg
mov
mov
mov
push
xchg
mov
ljmp
test
dec
daa
jmp
mov
pushf
sbb
xchg
shlb
pushf
pushf
sahf
scas
clc
sub
add
xor
and
and
je
mov
jl
in
stos
add
sahf
or
movsl
push
mov
jbe
mov
dec
mov
sbb
fmuls
sbb
xchg
sbb
clc
not
lcall
das
xchg
mov
notl
ljmp
push
lret
jp
pop
xchg
pop
inc
out
ljmp
js
call
cmp
sarb
dec
dec
jb
shl
shl
fdiv
sbb
pop
pusha
and
inc
in
popf
sbb
shlb
mov
pusha
rol
xchg
cmp
lods
or
out
int3
mov
test
nop
cwtl
add
or
lock
mov
pop
shlb
dec
test
and
or
out
dec
js,pn
cmpb
and
roll
adc
pushf
pop
push
nop
pop
pop
movsb
push
push
jo
or
mov
cmp
jb
inc
fimull
inc
cmp
lock
subb
les
sbb
test
cmp
and
mov
icebp
push
cwtl
adc
scas
and
mulb
adc
pop
and
incl
inc
cmp
idivb
pop
roll
stos
mov
xchg
mov
cmp
popa
loope
jbe
outsl
pop
and
testb
cmpsl
enter
es
push
les
fdivr
cmp
test
xchg
dec
adcl
out
shrl
daa
ret
pushf
stos
lods
cmpl
sbb
jge
pusha
std
jns
dec
cmpsb
push
add
or
cmp
add
and
and
jo
leave
je
test
orb
mov
dec
in
inc
mov
inc
jl
dec
mov
es
fs
lods
in
stos
adc
in
fmull
ja
push
xchg
rcrb
stc
and
add
xor
pop
cvtps2pd
cmp
dec
fbstp
add
xchg
rclb
lea
dec
cmpb
dec
inc
test
adc
ss
add
cmpsb
movsb
fsubr
or
add
jae
addb
xchg
cld
cli
ss
sbbb
mov
insl
push
jg
push
or
pusha
andl
add
add
imul
cli
out
lock
out
add
push
hlt
clc
seto
sub
sub
xor
and
add
add
push
filds
mov
xorl
sti
sti
add
inc
clc
enter
addr16
ss
out
rcr
imul
adc
xor
jb
stc
xchg
pushl
inc
cld
dec
cld
and
cmpsb
sbb
pop
xor
jb
addb
pushf
sbb
movsb
test
xchg
sbb
aam
adc
sbb
sub
ja
hlt
scas
adc
sbb
stos
cmp
test
cld
std
xor
ss
mov
xor
pusha
or
outsl
add
je
inc
push
push
call
cld
add
lcall
imul
stc
mov
xor
cmp
xor
add
aaa
or
add
std
call
mov
fcmovb
jo
das
dec
decb
test
in
or
mov
incb
nop
add
or
and
push
add
aaa
mov
mov
mov
test
add
inc
sbb
add
inc
sahf
add
leave
xchg
add
or
decl
or
inc
sbb
xchg
lfs
repnz
test
push
xlat
mov
jo
addl
and
cli
cmpsb
inc
mov
fwait
ljmp
les
jmp
and
and
rolb
ljmp
or
add
add
pop
das
arpl
aad
and
add
incl
leave
sar
fs
jae
pop
fwait
sbb
xchg
test
jg
loop
adc
sbb
jmp
push
outsb
adc
xchg
adc
nop
stos
sti
scas
incl
rep
data16
xchg
dec
add
pop
addb
push
test
xchg
addb
es
lcall
les
imul
jmp
das
xor
or
pushl
pop
incl
pop
sbb
outsb
xor
pushl
adc
shlb
lock
xchg
push
cmp
cmc
lcall
and
push
xor
jnp
sub
pop
push
inc
jb
fs
ljmp
mov
mov
pop
mov
mov
std
jmp
mov
jae
jae
daa
or
fs
fildll
sbb
loop
repnz
test
adc
push
aaa
ljmp
outsl
fs
decl
pusha
push
or
dec
or
les
cltd
sbb
xor
mov
lcall
add
pop
sub
inc
jnp
sub
push
adc
add
lahf
or
fwait
dec
call
mov
mov
inc
pusha
inc
mov
dec
xlat
pop
mov
call
adc
sarb
mov
xchg
pop
push
mov
jg
testl
inc
xchg
imul
adc
call
nop
or
add
lds
iret
mov
xchg
sbb
or
xchg
jne
das
shrl
int
shl
ljmp
dec
adc
mov
cmpsl
ret
and
inc
mov
push
mov
push
mov
lret
decl
ds
push
push
inc
ss
not
sub
fbstp
popf
mov
decl
je
or
cmpsl
test
sub
xorl
pop
je
dec
daa
inc
mov
or
incl
push
jp
or
outsb
jbe
dec
js
pushl
mov
add
xor
aaa
sub
push
xlat
adc
scas
push
xor
add
inc
sti
adc
dec
pop
cmp
in
push
adc
pop
or
mov
lock
lcall
ficompl
mov
mov
outsl
sub
dec
out
xlat
insb
adc
ss
and
stos
subb
xchg
clc
outsl
jnp
sbb
and
fwait
lret
out
sbb
pushl
outsl
xchg
cmp
pop
sbb
mov
sbb
jae
adc
adc
fwait
ja
xor
jmp
cmpsl
and
add
test
cs
xlat
lcall
les
shr
pop
pop
dec
or
push
cli
pop
daa
pop
ss
insb
int3
xchg
inc
aaa
test
sub
xor
adc
out
xor
adc
mov
push
xor
test
xlat
adc
incl
jne
jae
xor
pop
iret
mov
sub
pop
add
jle
js
xchg
push
decl
lds
mov
xchg
adc
nop
call
push
out
mov
shl
sub
mov
cwtl
fdivr
push
enter
pop
imul
rcll
ds
decl
lock
or
nop
jno
jg
clc
cmpsl
aam
iret
aam
ss
clc
push
push
leave
dec
xchg
fs
addb
icebp
call
loopne
nop
mov
jl
add
mov
fs
into
fs
incl
mov
xchg
ret
ds
pavgb
aam
in
jmp
insb
nop
arpl
sar
fcmovnu
and
push
rclb
mov
ret
adc
inc
int3
add
push
pop
gs
movsl
scas
outsl
jns
mov
mov
push
dec
cld
test
cmp
sar
jmp
shlb
sub
inc
aad
push
in
xchg
leave
lahf
xchg
inc
orb
mov
mov
clc
adc
in
or
pop
test
or
dec
adc
sbb
or
call
mov
mov
mov
imul
add
mov
push
sbb
lods
push
dec
cmpsl
test
xchg
add
outsl
clc
incl
adc
xlat
jg
cmp
dec
cli
xlat
xchg
rcr
mov
dec
mov
and
lods
inc
mov
mov
neg
loopne
adc
in
testl
call
adc
fs
xor
xchg
imul
mov
inc
loope
fstl
dec
pop
adc
or
fs
lock
incl
call
stos
jmp
add
jg
sbb
mov
aam
and
jmp
jbe
fiadds
jo
inc
test
jo
outsl
cmp
insl
mov
push
jae
aas
push
sarb
xor
incl
das
test
cmp
clc
jecxz
cmp
loop
sbb
call
mov
cmp
and
jg
scas
fdivrl
test
mov
cmp
sahf
fldl
ljmp
adc
das
and
clc
jbe
xchg
out
sbb
fadds
int3
fcoml
in
or
fcmovu
xor
inc
push
add
shl
popa
decl
js
xchg
mov
test
fidivs
mov
es
dec
mov
jae
add
mov
jno
aad
push
adc
add
aas
je
jae
shlb
xor
fisttpl
cmp
out
ficoml
outsl
das
push
inc
out
xlat
push
ret
pusha
add
add
bound
or
add
cld
and
and
jmp
mov
dec
cmp
mov
or
mov
dec
and
and
ljmp
fcompl
loopne
mov
push
cmpsl
sarb
call
std
call
stc
add
mov
sub
and
push
add
mov
sbb
rolb
test
jp
lcall
shr
loopne
lock
xor
adc
pop
mov
add
decl
jno
sbb
push
cmp
and
fcoml
pop
loopne
pop
jo
test
insl
push
inc
xor
mov
pop
hlt
jmp
add
xchg
xchg
test
or
out
xchg
or
idiv
add
sbb
jg
aam
out
jg
aad
and
cmp
stos
xor
inc
jg
std
lcall
aam
add
or
adc
cmp
or
in
xor
popa
cmp
test
in
incl
adc
jo
int3
sarl
pushf
lret
add
adc
jg
mov
push
xlat
sbb
sub
les
push
xlat
ljmp
jne
xchg
mov
jl
or
adcb
push
les
add
sub
lods
xacquire
mov
sbb
and
rcrb
push
es
in
sub
sbbb
test
leave
inc
or
fwait
rolb
in
mov
cwtl
sub
mov
mov
pop
sub
jo
dec
out
mov
xor
jo
mov
data16
gs
incl
pusha
mov
dec
dec
pop
pop
das
inc
mov
cmp
mov
pop
nop
dec
xor
mov
mov
jecxz
mov
je
add
inc
mov
push
xor
jmp
dec
mov
aam
ljmp
gs
or
in
pop
or
rol
adc
push
lock
jg
fsubs
adc
and
dec
adc
outsl
xchg
inc
nop
push
add
xchg
push
push
pusha
outsb
daa
or
lods
lods
fildll
pop
loope
es
push
xor
cmp
lcall
add
rcll
dec
lcall
iret
test
ljmp
and
inc
ret
das
adcl
insl
ret
mov
scas
add
pop
stos
push
sbb
add
xchg
pop
jns
jg
sub
test
adc
into
mov
adc
call
lret
push
aas
push
mov
decl
dec
std
mov
mov
inc
add
or
imul
mov
mov
lcall
push
iret
dec
inc
inc
add
popa
adc
movsb
add
dec
arpl
lcall
cmp
aas
mov
jnp
rclb
imul
and
aas
in
sbb
add
push
repnz
jle
stos
sub
in
mov
pusha
pop
gs
or
mov
aad
lahf
jae
inc
cwtl
out
adc
jg
jl
and
sub
jmp
pop
ret
aam
out
cld
add
inc
xchg
cmp
add
outsb
shll
jecxz
addb
mov
sub
xchg
push
dec
xchg
pop
inc
adc
decl
pop
roll
aas
testb
ljmp
cmp
fadds
dec
ljmp
and
xor
outsl
out
push
push
push
call
decb
data16
js
call
pop
popf
mov
js
nop
mov
in
cmp
jns
clc
or
inc
insb
add
cs
sbb
decl
mov
or
rorl
loope
clc
mov
xlat
mov
jno
cmp
add
outsb
pop
lods
ds
cli
xchg
roll
xchg
cld
dec
add
pushf
or
jg
call
call
leave
addb
mov
out
push
sbb
mov
mov
int
sbb
pop
add
xchg
sbb
or
shrb
das
add
mov
xchg
js
lods
decl
ja
push
cltd
enter
and
enter
outsl
cwtl
xor
pushf
mov
xor
jp
mov
outsl
out
adc
jg
rcrl
mov
imul
mov
hlt
xchg
sti
sar
sub
jno
insl
js
orb
mov
js
pushl
addr16
mov
insl
pop
pop
enter
sub
cmp
dec
mov
scas
mov
movsl
mov
scas
flds
adc
and
mov
pushl
xchg
aad
jb
out
pushf
enter
xor
ja
ret
adc
sbb
out
testl
in
mov
mov
or
fimull
jle
add
mov
mov
incl
adc
cmp
cmp
shr
loop
or
dec
sbb
xor
xor
adc
adc
mov
cmp
inc
add
push
mov
cmp
ljmp
xchg
int
dec
push
aaa
imul
mov
sub
iret
fisubrs
out
lahf
jbe
das
cli
ja
and
sub
lahf
lods
outsb
aam
lahf
push
pop
or
jg
sub
lock
mov
mov
pop
xchg
dec
lock
mov
lcall
icebp
add
push
lock
push
orb
pop
test
lock
flds
in
incl
pushf
fisttps
adc
enter
mov
sbb
and
adc
mov
jg
ljmp
or
inc
dec
lahf
push
les
loope
dec
sub
je
fldl
fsubrl
and
test
cmp
dec
add
pushl
cs
sub
push
mov
xor
ja
imul
inc
dec
jmp
xchg
pop
mov
gs
js
and
dec
scas
mov
repz
xor
jne
fdivrl
mov
mov
mov
inc
or
mov
mov
sbb
enter
shrb
inc
jmp
dec
enter
mov
insb
mov
jb
mov
sbb
shlb
mov
xor
cmp
mov
insl
and
lcall
push
add
mov
pusha
movsl
fistps
or
mov
push
mov
dec
and
push
push
cli
call
add
add
fsubr
cmc
mov
sti
imul
add
sub
lock
nop
jg
add
sbb
ss
cmpsb
or
dec
and
sub
call
imul
call
dec
mov
shlb
fnstcw
loop
add
lods
aas
insl
inc
jo
add
jg
cmp
jmp
insl
ss
jl
dec
jno
sub
imul
sbb
push
mov
clc
mov
in
notb
mov
ljmp
les
dec
shll
mov
push
lods
xchg
jg
sub
aaa
lods
insl
jmp
pop
mov
and
inc
cli
call
push
mov
sbb
mov
pop
lock
lcall
or
sahf
in
aam
and
dec
or
ds
add
fmuls
lock
mov
cld
iret
adc
and
in
frstor
int
lds
or
push
or
scas
pop
push
mov
cs
shrb
pop
aaa
add
scas
cmp
in
pop
outsb
push
and
or
or
in
dec
push
scas
push
clc
sub
incl
iret
mov
dec
cwtl
scas
mov
mov
fwait
mov
loopne
adc
dec
push
pushf
mov
jo
call
cmpsb
mov
in
sub
das
adc
or
mov
sub
stos
aam
dec
add
add
and
mov
cli
add
icebp
and
out
fs
decl
aam
or
lods
fdivrl
add
adc
add
push
add
jo
mov
adc
xor
jle
mov
adc
xor
pusha
mov
lret
cld
adc
mov
fs
adc
inc
stos
test
cmp
cmp
add
test
push
pop
mov
mov
jmp
mov
dec
mov
cwtl
inc
add
test
mov
cmp
sub
imul
loop
push
movlps
adc
xchg
fdivr
sub
stc
or
mov
dec
lahf
jle
push
add
dec
pop
mov
add
insb
add
roll
or
adc
repz
out
popa
lods
mov
sbb
adc
mov
call
cmc
jmp
sub
mov
adcb
cld
xor
jae
pop
push
push
push
sarb
add
je
xchg
mov
or
pusha
leave
push
sub
add
lret
in
inc
repz
int3
jp
push
shlb
nop
cmpsl
pusha
lcall
jle
or
add
gs
imul
pop
pop
or
testl
mov
outsl
daa
dec
sub
test
scas
push
mov
or
and
mov
dec
jnp
sbb
ds
mov
pop
popa
loop
inc
mov
enter
adc
incl
js
mov
sub
cmpsl
or
mov
pop
mov
push
mov
ss
pop
movsb
lea
push
ljmp
jns
aas
scas
inc
add
iret
add
push
add
cmp
call
mov
cmpsb
jp
cmp
push
aam
aas
or
repz
inc
lock
call
rolb
loopne
scas
pop
and
sub
cli
incl
loopne
stc
add
mov
seto
in
add
mov
out
movsl
aam
ljmp
call
push
pop
xchg
sub
mov
or
imul
mov
mov
jmp
aas
mov
push
js
je
in
sub
xchg
sbb
lods
in
nop
push
lahf
fcomip
and
pushl
xor
pop
sbb
mov
mov
sub
push
jg
incl
outsb
pop
mov
scas
cwtl
scas
rcrb
adc
in
push
xor
scas
loopne
mov
loope
in
adc
sub
cmp
push
mov
mov
jb
lcall
push
sub
cmp
sbb
adc
add
mov
aam
dec
xlat
fucom
pop
test
or
loop
push
pop
cli
jo
push
ljmp
xchg
lahf
and
aas
je
les
inc
outsb
xchg
pop
cmp
inc
insl
mov
mov
out
cmp
shlb
pusha
mov
lcall
mov
addr16
and
test
ret
xor
inc
sub
add
push
xchg
fstpt
lcall
add
movsb
movsb
fwait
cmp
add
lods
or
add
incl
push
int
das
and
mov
mov
or
je
or
pushl
push
add
adc
and
cmp
sbb
pop
cmp
std
lahf
fdivl
jbe
pop
call
mov
sub
pop
sbb
push
mov
iret
jae
xor
mull
inc
push
inc
xchg
cs
mov
add
andb
sub
out
pop
icebp
pop
xchg
adc
js
or
loop
repnz
loopne
test
std
lcall
scas
in
jecxz
xchg
enter
addl
sub
or
jg
mov
dec
pushf
xlat
cs
mov
jmp
fadds
push
aam
dec
push
test
ret
and
pop
mov
adc
sbb
and
add
rcl
mov
mov
cmp
insl
jle
bnd
pop
aas
lcall
or
jne
div
insl
scas
mov
push
sbb
cmpb
jecxz
mov
push
ret
lret
filds
inc
xor
jnp
shlb
cld
inc
decl
rcrb
lock
daa
adc
mov
cs
ja
sub
mov
mov
jmp
push
or
mov
push
and
push
inc
rcrb
jg
inc
fimuls
push
adc
xchg
lret
adc
cld
call
add
mov
out
stos
jmp
mov
cmpl
daa
mov
mov
add
jne
or
insb
cmp
sbb
ja
add
in
sub
je
ja
xor
bound
dec
cmp
jae
aaa
jg
or
sub
add
mov
adc
outsl
pusha
mov
bound
addr16
xchg
push
icebp
pop
pusha
or
sub
push
popf
in
ffreep
out
loopne
or
mov
out
sub
jle
movw
and
dec
lcall
movsb
test
lea
pop
cs
pop
add
pushf
in
pop
pushl
dec
jb
mov
in
adc
mov
dec
outsl
out
pop
mov
jecxz
nop
jle
lcall
mov
aam
add
fdivp
xor
cmpb
ljmp
call
les
sbb
xor
and
or
call
aaa
xchg
mov
sbb
das
loop
into
icebp
mov
adc
adc
dec
jno
mov
mov
push
xchg
dec
jl
jl
inc
lcall
or
xchg
and
pusha
iret
sub
daa
fbld
ret
mov
outsl
mov
ljmp
sub
popa
sti
mov
mov
cs
cmc
jmp
pushf
pop
mov
sub
mov
mov
mov
and
push
lcall
adc
jno
sbb
ss
and
and
dec
add
cmp
sub
call
pop
sub
jmp
mov
dec
ret
pushl
fiaddl
inc
xor
pop
inc
fdivl
pcmpeqw
xor
and
xchg
arpl
mov
call
inc
push
xor
sub
sub
add
lcall
mov
push
daa
cmp
mov
lret
push
loope
lds
jg
add
sub
test
xchg
gs
lret
inc
lret
ja
shlb
ss
testb
test
jns
decl
inc
mul
push
inc
pusha
jnp
xor
cmpb
out
psraw
xor
cs
xor
ljmp
add
jp
imul
inc
xor
pushaw
es
push
xlat
pop
xadd
xchg
rolb
and
les
incl
gs
loopne
sbb
addr16
xchg
nop
bound
cmp
in
outsl
clc
call
and
pop
mov
or
fsubrs
jo
xchg
fildll
dec
lahf
movsb
sarb
stc
push
or
jg
push
sarb
ss
call
xor
inc
call
repz
fst
repz
mov
jg
fs
xor
rorb
pop
fmull
push
xchg
jb
cmp
xor
sar
mov
mov
leave
popa
subb
idiv
insl
or
jl
push
pop
pop
jg
imul
sbb
divb
repnz
imul
xchg
aaa
xor
or
call
jns
dec
inc
jnp
icebp
pop
stos
stos
or
call
jnp
imul
call
jnp
insb
xor
push
xor
sub
jmp
xchg
and
push
pusha
lods
mov
mov
jmp
adc
xor
insb
push
cld
movsl
loopne
je
les
and
or
stos
and
rolb
dec
xor
fisttps
push
xor
mov
push
and
pop
inc
add
or
add
push
hlt
and
in
dec
mov
sbb
xchg
pushf
test
mov
dec
and
fcompl
out
std
sti
pop
dec
sub
push
adc
imul
or
cmp
decl
lods
dec
faddl
dec
sub
push
pop
aas
sub
pusha
push
adcb
pusha
pop
sbb
mov
sbb
shlb
lock
pop
cmp
and
inc
sub
jnp
pusha
orb
inc
repnz
adc
lea
mov
mulb
mov
push
aas
rcrb
fwait
mov
lock
leave
sbb
push
decl
insb
mov
xchg
and
or
cmp
or
loop
ds
movups
mov
shll
sub
dec
cmpsb
andb
push
fwait
adc
sub
es
sub
gs
addb
aas
cltd
add
movsb
mov
enter
out
sbb
pop
mov
mov
jb
jno
mov
jp
adc
or
imul
sub
push
or
dec
add
push
adc
or
sti
and
adc
mov
jle
std
jg
sub
fists
add
sbb
xsha256
cmpsb
push
dec
add
fistpll
paddw
testl
cmpsb
pop
incl
push
aad
insb
pusha
adc
cmp
popf
movsb
movzwl
push
sub
movsl
xchg
mov
add
mov
test
jmp
sbbb
pop
es
sub
je
das
mov
mov
iret
push
in
hlt
cld
jne
or
adc
fldl
dec
pushf
xor
adc
pop
iret
dec
inc
loope
fs
je
test
fwait
push
and
cmpl
push
outsb
cmp
ljmp
sbb
mov
xchg
rclb
test
adc
dec
xchg
fmul
leave
fsts
or
mov
andb
mov
out
xchg
cltd
loopne
push
sbb
mov
lcall
in
mov
cwtl
fcoms
add
xchg
sbb
incl
pop
add
mov
lock
dec
sbbl
xchg
pop
inc
inc
stos
mov
sar
out
or
mov
adc
aas
mov
insl
int3
js
mov
push
add
pop
cld
xor
pop
jbe
add
add
imulb
push
jne
ret
cs
inc
fcomi
dec
mov
incl
or
jbe
add
cld
sahf
or
das
or
or
or
incl
dec
nop
push
stos
sbb
mov
xlat
mov
pop
inc
ret
dec
loopne
add
push
pop
idivl
je
test
loopne
int
fstps
xor
fs
adc
mov
aaa
in
in
fimull
adc
mov
add
inc
mov
cmp
mov
out
call
and
out
add
xor
idiv
subl
hlt
out
icebp
mov
stc
xor
addr16
and
push
ljmp
cmc
js
add
incl
and
or
inc
jp
push
xchg
iret
jle
add
mov
faddl
sbb
or
cld
orb
xor
push
sbb
in
mov
orb
xchg
fisttpl
enter
fcmovnu
adc
jle
adc
pop
lcall
mov
rclb
sti
fsubs
lea
mov
movsb
hlt
or
scas
call
sbb
add
out
enter
out
xchg
xor
pop
mov
and
cwtl
mov
aam
sbb
adc
cmp
pop
sbb
lods
add
adc
or
push
sub
pop
fs
push
movsb
sbb
fs
add
outsl
std
fbld
push
xor
inc
add
in
into
sahf
aas
sbb
fimuls
dec
lock
xchg
sbbb
inc
xorb
jg
cmp
mov
dec
mov
mov
ljmp
cld
out
push
and
push
add
andb
fimull
dec
ja
enter
addr16
pop
mov
add
inc
or
and
neg
jnp
inc
call
or
out
cmovle
rorl
or
fnsave
pop
dec
or
ror
mov
add
xchg
fldl
out
arpl
sbb
jns
cmp
aam
loop
push
lock
cmc
fstl
pop
outsl
clc
push
std
mov
cmc
out
in
jecxz
clc
fmull
xor
pop
sar
cli
jmp
jl
fidivs
stc
out
sub
clc
cld
out
cli
push
aaa
mov
out
in
push
pop
push
pop
loopne
out
aad
fisubrs
aam
in
pushl
xchg
bswap
fildll
cli
jl
decb
test
lock
pop
mov
push
jmp
and
les
scas
repnz
jl
mov
ljmp
decl
iret
out
mov
cmp
pusha
int
in
lcall
cli
xorb
jg
mov
jg
xchg
xlat
lcall
adc
cmp
mov
sub
shrb
mov
movsb
pusha
mov
mov
jp
lock
adc
movsl
add
cs
clc
in
cmp
inc
mov
and
push
lcall
sti
adc
test
test
ljmp
lahf
push
subb
lret
mov
outsl
mov
iret
mov
jmp
lods
lcall
and
enter
dec
in
out
nop
test
fildl
adc
push
call
fisubl
push
imul
movsb
lcall
enter
pushf
lret
push
decl
data16
push
cmp
jno
mov
sub
push
imul
lock
pop
out
out
push
xor
jl
sub
pop
dec
jg
mov
lcall
mov
out
orb
out
out
cwtl
mov
push
int3
push
fsubrs
into
jl
fs
in
loop
mov
cmp
dec
ror
lods
cld
bnd
inc
loopne
jle
or
icebp
cmp
outsl
pushl
inc
jns
jmp
test
loope
int
jg
psubusb
sbb
add
into
sarl
gs
xor
sahf
mov
mov
incl
push
sub
mov
sub
or
pop
xchg
add
js
xor
cld
scas
movsb
mov
ljmp
clc
adc
push
enter
pusha
mov
loop
mov
jg
in
jo
cld
lret
dec
lahf
cmc
and
adc
cmove
mov
insb
out
subb
adc
xlat
in
mov
xchg
fnsave
insb
xchg
mov
ror
mov
fidivs
mov
out
movsb
ja
cltd
aad
push
notl
rorl
inc
sar
shl
pop
push
pusha
inc
addb
lods
inc
ret
call
nop
jns
stos
sub
scas
cmc
clc
add
push
scas
negb
add
jl
cmp
jmp
data16
dec
dec
dec
push
stc
adc
addr16
push
jmp
adcb
fcoms
add
jmp
pushl
and
rcrb
mov
adc
mov
pop
cmpxchg
add
or
dec
xchg
cmp
aas
pop
ret
mov
nop
orb
lcall
pop
push
mov
add
loopne
jb
dec
stos
jno
push
jl
nop
mov
mov
sbb
cld
aas
add
pop
test
loope
clc
lcall
cmp
das
push
pop
aas
cmpsb
push
sarl
imul
push
add
fsubl
ss
std
ljmp
aas
adc
push
pop
sub
jg
mov
test
fnstcw
sahf
adc
inc
fs
cmp
aaa
ja
cwtl
dec
jmp
jg
fmuls
or
xchg
fwait
xchg
ds
adc
sbb
ljmp
adc
out
iret
inc
cld
aas
pop
mov
daa
add
add
jg
jg
fstpt
cmpsl
push
stc
mov
sti
cld
std
data16
xchg
add
test
call
int
mov
outsb
rorb
add
movsb
push
syscall
jno
aaa
xchg
lret
mov
lods
lahf
mov
flds
nop
add
add
daa
ficompl
sar
cwtl
and
cld
fisttpl
cli
and
jg
out
call
testl
fmull
in
icebp
dec
stc
lock
out
nop
out
mov
jmp
mov
ljmp
xchg
std
decl
xchg
or
rol
push
and
add
mov
push
pop
addr16
inc
pop
outsb
jmp
scas
dec
add
xor
test
sbb
inc
push
jo
rcr
lock
cmp
push
fs
mov
in
dec
jg
hlt
sbb
inc
xlat
scas
push
push
pop
cmp
push
pop
push
int3
roll
pusha
mov
pop
nop
mov
lret
jmp
lods
add
mov
aas
mov
xchg
inc
dec
sub
mov
inc
out
add
in
stos
mov
daa
add
jbe
mov
inc
call
fadds
jns
mov
add
cmp
add
push
shlb
idivb
imul
clc
outsl
clc
push
jno
fmulp
loope
loop
call
dec
push
add
les
addb
dec
or
pop
xorb
cmpsb
sbb
sahf
loope
loop
xchg
xchg
jecxz
stc
push
popa
loope
decl
test
pop
aam
add
cmp
shlb
nop
mov
add
lods
mov
inc
or
sub
cmp
js
mov
lock
out
ss
push
ljmp
je
ss
lret
iret
adc
jbe
mov
xchg
mov
je
pop
cmc
incl
adc
fidivrl
xchg
mov
cmc
cmpsb
out
rcll
lock
mov
popf
push
nop
pop
rcll
cltd
jno
push
sbb
cld
out
mov
and
jb
xor
movsb
dec
xlat
mov
pop
outsl
jg
jg
and
dec
jecxz
ret
and
out
dec
jne
inc
test
out
inc
iret
pusha
insl
push
add
or
add
and
inc
add
jns
stos
sub
jg
loope
sub
cli
push
je
call
sbb
push
loope
jg
insb
cwtl
sahf
addr16
clc
pop
or
pop
insb
xorb
jg
cmp
mov
pop
sbb
jnp
outsl
xchg
push
sbb
mov
sub
pop
stos
cmp
push
mov
pop
and
inc
cld
iret
lcall
fcompl
sahf
sub
test
mov
incl
hlt
pusha
sbb
insb
pushf
pushf
repz
and
mov
test
shll
sbb
mov
and
push
outsb
or
adc
add
or
shlb
int3
lcall
js
iret
pusha
sbbb
pushf
cmp
xlat
mov
insb
adc
lds
loopne
out
push
mov
in
jns
call
hlt
push
movd
fcoml
mov
jns
cld
imul
dec
cmp
mov
xor
sahf
shlb
insl
add
xor
dec
loopne
mov
xor
gs
fdivr
outsl
adc
inc
insb
mov
pusha
in
sar
jo
sub
ret
movd
in
jb
fistpll
mov
clc
insl
ja
test
jb
andb
js
or
dec
insb
jne
dec
stos
call
pop
sar
push
xchg
pushf
call
pop
add
shl
jle
fbld
or
jl
sub
adc
pusha
js
lock
push
sahf
out
jp
cmp
jl
iret
mov
jnp
repnz
mul
ss
mov
js
mov
push
xchg
clc
jge
dec
jo
lock
or
mov
je
adcb
cmp
jnp
subb
sub
xchg
mov
ss
pusha
inc
push
js
mov
test
hlt
test
dec
jo
push
test
int
pop
push
sbb
enter
sahf
sbb
lods
loopne
cmp
test
push
push
jl
or
mov
or
js
pushf
rcr
mov
pop
int
sbb
lock
jl
fs
jno
cld
sar
mov
inc
js
push
mov
lret
int3
xorl
sub
jo
test
lret
int3
clc
mov
xor
mov
int
jnp
mov
fdiv
nop
mov
cmp
xchg
repz
push
sub
lods
rolb
mov
sbb
nop
mov
mov
cmp
test
movsb
shl
xchg
sbb
lcall
out
xchg
sbb
je
jle
lahf
repnz
js
mov
int3
in
or
dec
addb
inc
mov
push
outsl
rcr
add
cmp
push
jl
mov
clc
lcall
in
fwait
dec
or
cmp
sbb
fcomps
mov
test
fcompl
dec
ds
clc
aas
inc
pusha
movsl
sahf
adc
dec
pop
je
xchg
mov
lret
in
lahf
adc
pop
js
lods
int3
call
mov
mov
jg
xor
dec
and
mov
sbb
mov
mov
lds
adc
mov
aam
movsb
bound
ret
lret
pop
jo
mov
push
pushl
cmc
jne
xchg
sub
push
xor
mov
dec
insb
in
jl
mov
inc
mov
jle
clc
stos
adc
andb
gs
test
lods
adc
arpl
sbb
scas
mov
in
add
sub
mov
stos
mov
fs
push
pop
test
pusha
andb
lds
jns
in
mov
shrb
nop
clc
cmp
sbb
aas
clc
mov
jl
fisubrl
cmp
jns
and
je
jbe
mov
lock
mov
mov
cld
mov
in
mov
mov
add
push
pop
arpl
je
mov
hlt
mov
shl
mov
faddl
push
inc
jnp
fsubs
ret
movsb
mov
sub
pop
les
pop
sub
mov
enter
push
mov
insl
sub
sub
xchg
out
nop
movsb
mov
test
ljmp
or
adc
mov
push
scas
loop
add
lahf
fadds
mov
faddl
hlt
es
inc
into
fcoms
add
adc
mov
adc
jmp
mov
mov
call
out
into
mov
cmc
sub
data16
incl
test
xchg
inc
std
fcomps
pushl
inc
mov
xlat
pop
mov
adc
std
mov
cmpsb
and
mov
lcall
and
inc
rclb
es
mov
pop
adc
push
adc
add
in
fmul
sti
shl
out
loope
pop
aaa
ret
xchg
pop
inc
add
call
cld
flds
outsl
mov
lea
cli
incl
popa
popf
insl
or
in
std
inc
ljmp
pusha
dec
mov
mov
cli
daa
mov
insl
cld
xor
aam
sbb
in
fucomi
jle
aaa
xchg
jl
pop
gs
aam
and
hlt
xchg
incl
inc
cmpsl
and
call
ret
pop
pop
gs
int3
or
jge
out
call
pop
test
loopne
enter
cli
sub
adc
mov
jle
idiv
pushl
rcl
sub
mov
push
xchg
into
mov
outsl
push
pop
sbb
push
jo
clc
jmp
add
push
fdivr
add
inc
ljmp
or
insb
std
dec
dec
loopne
add
jae
and
mov
dec
mov
lock
push
mov
mov
mov
test
inc
fdivrs
adc
mov
ds
decl
and
xchg
push
cmp
mov
sbb
ss
push
jg
and
cmp
mov
jae
jge
add
test
pushl
sti
sub
fimuls
and
mulb
mov
pop
aam
xor
or
loope
sahf
es
push
xchg
add
and
cwtl
sub
mov
add
sti
js
into
enter
fildll
mov
les
xor
mov
push
or
push
push
call
inc
fs
add
fidivrs
add
push
sub
ja
push
push
push
mov
decl
into
cwtl
testl
push
loopne
ja
idivl
faddl
es
sar
jg
loopne
mov
pop
sub
jbe
push
je
clc
jl
inc
mov
fnstcw
movsb
outsl
mov
sbb
sbb
ss
xor
pusha
pushf
les
test
in
mov
lcall
mov
lods
outsb
es
xchg
jp
out
pusha
and
scas
sti
pop
lock
icebp
add
aam
cmpsb
mov
inc
push
fdivrl
or
jae
xor
hlt
jle
mov
ds
sub
outsb
xchg
push
loop
push
xchg
mov
insb
sbb
ljmp
fs
sahf
pop
out
out
cs
and
js
push
add
fsubl
adc
fisttps
ffreep
cs
mov
inc
cld
mov
sbb
mov
push
sti
js
push
lahf
into
mov
out
ds
sub
decl
xchg
arpl
scas
mov
mov
mov
cmpl
pop
cwtl
scas
out
push
sbb
outsb
iret
jmp
test
idivb
aas
rolb
outsl
in
es
mov
hlt
pop
mov
outsb
pusha
or
hlt
ss
movsb
add
mov
cmp
lods
call
xchg
inc
push
scas
xchg
pxor
dec
outsb
dec
xor
adc
in
pop
aaa
js
push
pop
data16
pop
push
sarl
scas
hlt
push
adc
les
sahf
aas
fbld
sbb
test
aas
loopne
scas
push
out
and
mov
rclb
jmp
xor
sahf
fs
test
imul
out
adc
dec
mov
pushf
add
int3
push
inc
xchg
mov
scas
clc
mov
in
xchg
xchg
into
and
sbb
push
push
cli
cmp
outsb
and
mov
loop
push
cmp
or
mov
mull
ja
jecxz
idivl
outsb
fs
mov
call
rorb
out
scas
sub
push
cmp
cld
loopne
decl
mov
inc
test
scas
out
mov
push
pushf
push
insb
cmp
dec
js
aam
jbe
add
clc
dec
jne
aad
inc
sbb
lahf
inc
sub
scas
fcoms
cld
and
out
nop
jp
pop
adc
dec
lcall
mov
push
pop
or
push
push
or
mov
cmp
jp
jbe
lcall
test
out
pop
sbb
into
cld
addb
dec
xor
cmp
dec
cs
xlat
outsl
decl
push
sub
inc
lods
xor
les
xchg
imul
adc
mov
scas
out
mov
add
pusha
add
das
out
push
adcl
call
jg
mov
fs
xchg
test
jnp
out
idivb
push
into
out
inc
je
sbb
mov
mov
out
mov
lock
lods
shrb
fcomip
in
push
test
pop
scas
ljmp
faddl
add
inc
inc
movsl
das
mov
shl
mov
sbb
mov
js
cld
outsb
int3
mov
sbb
into
mov
cwtl
push
mov
cmp
outsb
inc
loope
fcomip
incl
mov
scas
ret
pop
ja
fisubrs
mov
imul
sub
je
and
or
jmp
cmp
sub
pop
pop
outsl
cli
dec
ficoml
xchg
cmp
movsb
clc
pop
cmp
or
mov
cmp
rolb
sbbb
pushf
jle
mov
xchg
mov
decl
mov
mov
dec
push
jbe
test
cld
jo
sbb
mov
push
aas
mov
ljmp
adc
scas
mov
mov
loopne,pt
add
mov
test
in
loopne
jge
pushl
cmp
adc
call
cmpsb
jle
pop
shlb
push
pop
movsb
out
hlt
jg
sbb
adc
sahf
mov
scas
jle
fdivrs
mov
cmp
jl
call
pop
out
push
std
scas
cli
mov
cwtl
cs
xor
push
imull
test
nop
jnp
lcall
cld
out
or
pop
push
lock
push
insb
ss
hlt
incl
cld
mov
pusha
xor
sarb
mov
xchg
cld
lcall
jmp
xlat
iret
cmp
xor
ds
push
out
xchg
add
lcall
jg
jmp
out
mov
inc
out
or
cmp
jl
scas
pushf
pop
cmp
jle
daa
test
inc
pop
scas
sarl
mov
ds
xchg
jg
add
add
test
enter
cmc
xor
mov
xlat
out
test
jg
fwait
hlt
lahf
scas
js
push
movsl
out
sub
jle
popl
ljmp
mov
pop
ficoms
enter
mov
mov
movsb
push
mov
cld
xorb
pusha
jg
mov
movsb
pushl
cld
jg
pop
mov
decl
inc
mov
sbb
push
inc
push
je
push
mov
cmpsb
hlt
jg
decl
push
pop
sbb
cs
mov
and
and
inc
dec
xchg
loopne
fcomip
pop
pop
movsb
sub
cs
aam
test
xor
pop
lods
pusha
pop
mov
call
mov
add
inc
nop
addl
adc
mov
dec
sub
notl
in
mov
add
mov
mov
push
or
or
sahf
inc
push
sti
fsubrp
mov
dec
add
pop
inc
sbb
or
pop
stc
idivb
aas
push
pop
dec
aaa
push
pop
dec
add
mov
fstpl
xlat
es
fildl
push
inc
mov
or
loop
or
or
dec
xor
out
inc
mov
std
pop
mov
movsb
pop
mov
sub
or
dec
es
ss
dec
scas
mov
or
sub
aas
stos
loopne
imul
push
roll
push
inc
daa
ficompl
add
sub
add
add
add
in
and
test
inc
xchg
test
pop
lcall
pop
rolb
fnstcw
sub
sbb
add
imul
or
xchg
push
jg
clc
aas
push
pop
jmp
shlb
add
add
or
xchg
hlt
mov
repnz
push
xor
incl
cmp
insb
test
or
mov
jo
pusha
dec
add
outsl
push
xor
push
xchg
psubb
data16
or
rcll
ficompl
neg
out
cmp
or
fld
add
repnz
leave
push
pop
idivb
pop
pop
fdivs
mov
xchg
or
lock
xor
pop
fstps
std
cmp
mov
clc
data16
mov
jbe
into
repz
jg
sbbb
cmp
clc
incl
js
jo
iret
add
stc
mov
lock
ds
jo
or
push
add
aaa
repnz
out
pop
aas
es
std
xchg
dec
add
sbb
pop
xchg
and
push
add
add
add
pop
std
fistpll
mov
add
add
add
mov
dec
pop
outsb
stos
add
lock
or
jg
aas
rcrb
sar
ljmp
test
dec
jbe
pop
fstpt
clc
popl
adc
cmp
pusha
test
ljmp
fsubrl
sbb
sbb
mov
mov
sbb
not
into
das
ds
adc
lods
xchg
incl
pop
cld
call
pop
in
or
adc
mov
ds
les
subl
cli
mov
cmp
fcoml
dec
add
cs
push
popf
mov
aaa
add
pushf
add
iret
retw
sub
add
cmp
loopne
int
sub
call
std
add
in
inc
sbb
shll
xor
sbb
push
inc
and
add
aaa
cmc
insb
js
push
jbe
lock
loope
cmp
roll
sbbb
outsl
add
pop
or
fstl
mov
loopne
shll
fildl
and
push
push
cmpsb
hlt
incl
push
inc
adc
pop
out
clc
out
clc
ja
pop
add
outsb
push
and
add
or
and
test
sbb
cmp
mov
cmp
xorl
mov
idiv
jmp
sbb
cmp
scas
mov
aas
daa
and
out
pop
neg
xor
jg
or
mov
adc
or
sahf
push
loopne
std
jmp
push
push
jb
es
daa
cmp
xchg
in
mov
sbb
sbb
pop
or
mov
scas
out
cmp
aaa
pop
loopne
decl
adc
jne
jne
clc
push
cmc
sbb
nop
or
incl
jg
mov
lahf
adc
add
xor
cmp
inc
and
cmpl
xor
cmp
jmp
inc
cs
lods
pop
daa
inc
push
movsl
jg
mov
daa
dec
sub
sbb
and
insl
sti
mov
inc
repz
jns
clc
iret
loope
pop
jbe
and
pop
push
fnstsw
mov
int3
push
cmp
and
adc
cmp
lcall
mov
mov
push
dec
pop
push
cmp
fldenv
xor
push
xlat
repnz
jnp
lret
cwtl
call
xor
mov
mov
or
fistl
mov
in
call
pop
clc
rep
cmp
inc
inc
adc
lahf
jbe
decb
add
lcall
testl
incb
or
dec
ljmp
dec
push
fcomip
fildl
es
outsb
daa
inc
aad
sti
lods
insb
mov
pop
push
in
jns
js
adc
in
jo
push
push
imul
pusha
add
test
adc
add
mov
sbb
push
repz
mov
es
dec
mov
sbb
xor
inc
mov
xor
shlb
shll
cmp
daa
xor
arpl
mov
mov
inc
jns
lcall
dec
pop
icebp
das
clc
sub
fwait
cmpl
mov
lret
in
mov
pop
sahf
dec
lret
jmp
aas
fwait
inc
inc
es
mov
add
jle
sub
fistpll
xor
in
repz
sub
shll
xchg
push
test
xor
push
adc
xor
fcmovu
cmc
ja
cmp
inc
xchg
sbb
or
in
push
stos
movsb
out
adcb
or
xor
xor
jmp
sub
das
es
bound
repnz
inc
in
push
inc
sub
lret
push
push
xor
addl
add
dec
in
cmpsb
outsb
data16
inc
push
shlb
or
iret
out
push
inc
aam
aas
je
stos
inc
cs
aas
call
stos
ljmp
insb
or
pop
lock
es
jo
pop
fsubs
movsb
fildl
or
xor
jbe
movsb
mov
xchg
xor
mov
out
clc
sub
pop
das
pop
pop
jmp
divl
ret
and
data16
fsubrl
or
sub
jmp
adc
cltd
xchg
fistpll
loop
fwait
and
ret
daa
adc
daa
xchg
fisttpll
into
jmp
and
mov
sahf
pop
clc
or
sbb
divl
in
scas
fdivl
add
or
dec
daa
iret
cmp
out
clc
dec
or
dec
sarb
push
cli
jmp
inc
jnp
jl
pop
dec
rorl
out
aas
sbb
add
push
aaa
mov
loope
insb
pop
cltd
cltd
push
or
clc
fistpll
cmp
adc
test
xor
add
and
aaa
in
mov
cwtl
mov
inc
xor
ficomps
call
in
adc
add
incl
mov
and
mov
aas
push
mov
push
adc
scas
aas
pushl
inc
sub
inc
jae
ret
loopne
lahf
es
mov
push
andl
lcall
mov
aaa
loope
sahf
loope
dec
mov
nop
aaa
jl
daa
and
ljmp
and
push
xchg
mov
aaa
mov
daa
insl
mov
pop
jbe
decl
push
mov
sbb
inc
stc
rcr
xor
sti
mov
cmp
add
and
jg
jmp
xchg
add
test
mov
xchg
and
pushf
aas
subl
inc
push
aas
adc
das
sar
and
lahf
mov
lahf
jmp
xchg
add
paddb
ja
cld
push
lock
xor
mov
lock
cs
je
orb
ret
jbe
push
movsl
pop
push
inc
add
pop
jo
dec
push
ljmp
mov
mov
or
insb
sbb
and
mov
lcall
sti
add
mov
pop
add
cmpsl
add
notb
aaa
cmpsl
sbb
pop
push
imull
ja
jmp
or
or
inc
lret
mov
mov
arpl
enter
mov
and
sub
xchg
aaa
mov
push
cmp
incl
lret
mov
pop
cmp
push
sub
filds
dec
ja,pn
adc
add
xchg
decl
or
dec
dec
outsl
sbb
pop
jo
add
mov
push
stos
dec
leave
lcall
push
fidivrl
sbb
cltd
push
inc
mov
lods
sbb
inc
movsl
pusha
push
icebp
pop
pusha
xchg
xor
push
outsb
adc
mov
call
jae
adc
aaa
popa
cmp
xchg
out
xlat
popa
fldt
add
inc
adc
sub
mov
pop
insl
inc
adc
inc
xchg
xchg
in
incl
xlat
and
imul
dec
test
fwait
inc
dec
add
arpl
lcall
mov
or
pop
daa
cs
data16
xor
outsl
dec
add
aaa
sbb
arpl
stos
out
mov
sti
or
inc
sar
call
inc
xor
xor
aaa
cld
jmp
mov
xchg
mov
push
pop
incl
pop
cmp
call
sub
mov
sar
adc
inc
xchg
jp
aas
scas
xchg
in
pop
shll
pushl
adc
xorb
mov
jae
mov
push
pop
jecxz
lock
ficoms
dec
sti
jae
cmpsb
insl
incl
jg
jle
push
xchg
outsb
and
mov
cmp
gs
and
pop
movsl
cmp
or
sub
scas
xchg
mov
mov
or
jg
mov
adc
and
sub
arpl
mov
sbb
sub
jecxz
pop
xchg
inc
push
jg
inc
scas
dec
mov
xchg
mov
and
pushl
mov
xchg
and
sub
std
inc
aam
sub
adc
mov
push
mov
sbb
incl
push
sbb
adc
iret
inc
pshufw
lcall
push
and
push
loopne
xor
sub
scas
or
je
dec
xchg
xchg
jne
push
subb
decl
pop
dec
sbb
adc
or
fdivrp
mov
loop
cs
insb
push
push
insl
fisttps
inc
mov
push
pop
addr16
and
call
repnz
sub
pushl
push
jge
inc
cwtl
dec
nop
hlt
out
ljmp
and
and
lcall
data16
ja
sbb
sbbb
pop
or
sub
xor
rcrl
add
sbbl
test
aad
sti
movsb
icebp
repnz
fwait
addr16
cmp
std
out
mov
jecxz
lcall
adc
adc
fmull
pushl
shll
or
ret
inc
enter
je
push
pop
or
cmp
dec
pop
mov
push
arpl
mov
incl
cmp
push
pop
pop
jl
jo
lret
xchg
and
sbb
push
and
ljmp
adc
pop
mov
daa
dec
jae
stos
jo
jmp
ficoml
pop
lods
inc
add
fwait
sbb
iret
stos
or
mul
fs
lret
cmp
es
mov
ret
xchg
addb
jae
or
add
sbb
js
mov
push
and
lcall
and
add
loop
cmp
jb
insb
sti
adc
sbb
add
scas
out
insb
loope
cs
and
dec
stos
inc
je
and
push
rclw
ljmp
jae
jo
jmp
sub
xor
inc
mov
inc
cmp
ljmp
addl
mov
mov
popa
xchg
jb
das
test
sbb
mov
sbb
incl
subl
lods
jmp
negb
scas
fimull
imulb
adc
daa
add
rcrl
mov
cmc
add
mov
call
jge
add
inc
sub
sub
xchg
inc
cmpsl
jae
push
jl
popa
std
mov
jns
add
lds
or
xchg
jg
sub
ljmp
in
mov
sbb
fistl
lea
ljmp
mov
fwait
shl
jl
ret
fists
push
and
mov
pop
filds
cli
scas
andl
mov
xlat
lea
cmp
and
gs
inc
lea
ljmp
jecxz
fwait
pop
or
pop
dec
pop
adc
adc
jg
testb
outsb
outsl
adc
enter
jg
or
or
ret
inc
out
jno
movsl
sbb
adc
test
sbb
mov
cmp
sar
adc
or
push
add
sbb
mov
xor
iret
cmp
mov
mov
bound
popa
sub
nop
mov
mov
push
clc
mov
out
lcall
xchg
popa
xchg
out
lods
inc
lods
fwait
jmp
push
sub
jae
adc
sar
mov
aas
sbb
push
mov
ljmp
stos
cmp
add
inc
scas
divl
into
xchg
jbe
add
xlat
arpl
mov
and
inc
pop
lock
xchg
mov
test
insb
push
adc
incl
lahf
adcl
adc
or
dec
fwait
or
cmp
lods
int
in
add
ret
push
sub
mov
movsl
or
inc
push
jg
lcall
arpl
jb
xor
out
push
clc
iret
incl
lret
jns
jecxz
sub
mov
adc
xchg
push
decl
inc
pushw
mov
bndstx
xor
imul
mov
mov
pushl
inc
jecxz
mov
sbb
xchg
out
rol
sarl
lret
mov
push
dec
xor
popa
in
ljmp
outsl
push
push
mov
jecxz
dec
ret
cmp
and
sub
mov
decl
pushl
jae
and
xor
push
inc
mov
fs
cmp
jecxz
scas
cli
pushl
xchg
xchg
dec
lret
scas
arpl
stos
push
and
or
mov
cwtl
ret
xor
outsb
ss
inc
fisubrl
clc
inc
jo
ret
xchg
xchg
pop
or
inc
cmp
ret
and
and
mov
loopne
sub
pop
mov
push
outsb
xchg
adc
fwait
push
shrb
mov
scas
outsl
mov
and
cmpl
adc
decl
sbb
lea
lds
cs
test
ret
pop
mov
push
loop
jmp
out
push
pop
lcall
sbb
push
shrb
mov
stos
insl
mov
pop
mov
test
lcall
add
xor
fists
ljmp
push
cmp
adc
pop
add
lods
aaa
jg
fsubl
and
adc
or
mov
adc
mov
jmp
xchg
mov
lahf
adc
jb
add
jae
push
or
movb
out
stc
pop
aaa
sub
fstpl
mov
ja
adc
test
not
mov
xchg
test
orb
sub
pushl
les
test
hlt
test
sarb
dec
jnp
rolb
pushl
or
lods
mov
xchg
xorl
or
mov
adc
inc
sbb
sub
and
pop
sub
aas
pop
or
adc
mov
jecxz
lcall
bound
roll
imul
adc
mov
scas
inc
sbb
pop
sub
cmp
push
movsb
jmp
sub
mov
jge
mov
dec
adc
mov
mov
sbb
mov
jmp
adc
rorb
cwtl
mov
push
xchg
dec
pop
xchg
pop
sbb
pop
lods
sbb
fsubrl
sbb
jg
push
xlat
mov
or
orl
push
loop
jl
xor
jg
outsl
dec
and
push
xor
loopne,pn
xor
push
push
xor
cs
ljmp
push
xor
push
add
mov
adc
jp
pushl
cmpsb
sbb
mov
arpl
ret
mov
push
jnp
xor
adc
mov
mov
pushf
fsub
scas
add
push
mulb
or
jecxz
addr16
jbe
sti
push
movsb
adc
call
dec
js
or
pop
or
mov
mov
adc
push
scas
icebp
push
pop
lahf
dec
push
adc
lods
popa
fildl
stos
push
or
sbb
ret
or
xchg
dec
shrl
jmp
aam
rcll
addr16
lods
and
dec
les
test
out
sub
fisubs
cmp
aaa
decl
push
jl
adcb
add
fildl
fisubs
call
pop
jmp
mov
dec
add
jmp
aaa
pop
inc
ret
inc
rcl
jg
mov
push
jmp
scas
inc
push
push
jg
data16
add
ljmp
xlat
adc
aaa
gs
test
bound
adc
clc
jg
add
sub
ret
cmp
xchg
and
movsl
sub
call
leave
aam
pop
faddl
shrl
add
adc
add
push
cmc
dec
test
add
xor
add
push
adc
scas
fwait
push
sbb
push
sbb
data16
fcmovb
mov
sub
mov
incl
imul
ja
xchg
dec
in
or
inc
lods
ret
cmpsb
lock
jg
inc
mov
mov
gs
aas
or
pop
sub
xor
jg
sbb
scas
jecxz,pn
cmovg
xor
decl
imul
stos
xor
daa
daa
repz
shl
daa
and
sbb
adc
jmp
scas
xor
scas
mov
or
cmpsl
add
loop
and
call
inc
aaa
jecxz
fs
sarl
jge
js
outsl
or
es
test
jg
movsb
ret
or
daa
xchg
sub
mov
jmp
testl
loope
test
inc
cmpsb
arpl
mov
adc
loopne
jmp
clc
xor
xchg
xor
lds
adc
push
ret
popa
test
sub
pop
imul
adc
test
insl
js
sti
arpl
dec
insb
pop
mov
push
clc
out
repz
push
cmpsl
testl
add
add
rorl
mov
push
aaa
mov
cli
call
shrl
iret
cmpsl
imul
adc
pop
sub
pop
imul
sbb
jo
sbb
incl
je
out
fildll
test
clc
aaa
add
pop
jnp
jns
iret
je
scas
roll
cld
mov
push
bound
pop
xor
mov
or
imul
jp
jo
cs
or
jmp
mov
outsl
pop
or
notl
out
loope
mov
mov
daa
daa
das
xlat
xor
and
mov
or
orl
cli
in
cmp
fstpl
adc
jbe
nop
mov
addr16
scas
inc
xlat
ljmp
adc
mov
cli
mov
mov
and
jmp
sub
xor
xlat
and
loop
mov
imulb
add
jmp
jg
aad
std
pop
call
adc
and
test
pop
sahf
jae
ljmp
pop
lret
ret
push
add
push
and
pop
sti
xor
out
cmp
mov
iret
fwait
les
pusha
push
ja
push
mov
jbe
adc
scas
dec
jg
pop
dec
dec
pushl
jmp
repz
cmp
xor
call
dec
sub
outsl
stos
pop
mov
and
or
mov
sbb
mov
sbb
push
aad
adc
aaa
xlat
sub
cmp
fmull
xchg
lcall
out
arpl
fdivl
lods
imul
xchg
lock
addr16
outsb
fisubl
inc
rorl
out
mov
inc
dec
xchg
jmp
jecxz
daa
lahf
mov
inc
sub
fcomip
decl
adcl
ret
adc
outsb
push
inc
aad
frstor
dec
out
pop
dec
push
pop
xchg
ds
lcall
push
mov
outsl
ds
test
insb
shl
pop
push
pushl
es
lahf
stos
pop
xor
aaa
cld
push
or
xchg
xor
or
mov
aaa
adc
incl
fisubrs
mov
aaa
mov
mov
adc
aaa
mov
mov
or
pushl
fwait
mov
insl
pop
pop
ss
inc
pop
adc
sti
adc
and
add
jmp
or
add
mov
cmc
call
and
dec
popa
stc
fimuls
btc
ret
jbe
adc
cmpsl
daa
jae
and
scas
xchg
push
ja
call
jno
dec
fcomps
ret
xchg
decl
or
jae
cmp
jo
adc
sub
cmp
ljmp
ds
jae
arpl
push
nop
mov
movsb
das
dec
mov
xchg
sub
add
push
sbb
inc
daa
adc
jns
mov
bound
xchg
mov
sarb
mov
mov
xchg
lea
fsubrs
pop
adc
repz
adc
ss
pushl
mov
mov
and
test
packssdw
pop
jo
inc
cli
jg
jmp
sub
ja
pop
push
out
inc
mov
jg
cli
pop
lods
mov
add
inc
adc
ud2
and
and
or
jg
add
inc
push
mov
and
xor
andl
nop
push
cld
fists
push
cmpsl
and
pop
dec
mov
jg
popf
push
fwait
cmpsb
add
in
inc
mov
movsl
push
sbb
jmp
push
bound
pusha
dec
sbb
je
scas
fldcw
imul
pushl
movsl
pusha
mov
mov
popa
arpl
subl
mov
adc
and
cmpsl
pop
incl
ret
xchg
lret
jae
cmp
adc
iret
pop
and
push
ds
aaa
popf
ljmp
mov
dec
repz
jo
xchg
mov
mov
dec
adc
sbb
mov
ja
rorb
xor
or
mov
shlb
imul
cmp
data16
into
or
js
xchg
add
sub
cmp
or
addr16
add
mov
adc
out
test
sbb
adc
sysenter
adc
andl
push
pop
xor
leavew
ds
cld
pop
std
and
sub
sbb
jae
sbb
jo
stos
adc
xor
jecxz
inc
shll
sub
cmp
push
cs
lcall
ja
mov
sub
pusha
xchg
je
bound
mov
addl
add
insl
sbb
xor
iret
mov
mov
lret
xorl
push
lcall
mov
imul
outsl
iret
or
insb
pop
iret
adc
imul
int
dec
jnp
pop
jg
sub
and
add
xchg
xchg
xchg
sub
loop
pop
cld
jnp
test
daa
rorb
sbbb
adc
clc
fisttps
jnp
jl
mov
jno
bound
hlt
jmp
mov
cltd
xor
cmpsl
pop
pop
xchg
lcall
dec
sarb
cmp
sub
lcall
test
sahf
movsb
inc
aaa
jecxz
pop
jo
mov
mov
jle
xchg
sbb
add
arpl
adc
xor
push
stos
jmp
and
clc
inc
lock
dec
xor
dec
outsb
push
imul
mov
andl
sub
loope
rcl
lods
frstor
decl
jge
rolb
daa
push
mov
fldt
inc
inc
sbb
jae
jg
inc
std
in
loopne
push
or
and
push
jae
lock
ljmp
popa
loopne
xchg
pop
cs
lock
inc
push
pop
scas
push
int3
std
cmp
loop
orl
or
pushl
clc
adc
sti
or
mov
push
ret
aas
or
test
movsb
adc
jb
and
popf
pop
cmp
and
or
call
and
loope
cmp
mov
xchg
hlt
lret
rorl
sti
mov
mov
add
ss
adc
adc
and
test
shlb
sbb
or
push
sub
jmp
sbb
adc
xchg
jo
addr16
mov
jg
call
mov
lcall
xorb
lea
iret
sub
pop
sbb
dec
outsl
es
hlt
ljmp
mov
ss
jmp
push
das
sar
xor
bound
mov
aas
pop
movsl
pop
arpl
es
mov
sbb
sub
in
pop
cmc
scas
mov
add
xchg
outsb
jbe
xor
mov
dec
xor
sbb
arpl
xchg
pop
jg
xlat
add
std
push
and
adc
dec
stos
xchg
mov
loop
mov
pop
and
pop
sysret
sub
and
add
sub
or
mov
push
jno
sbb
enter
stos
aas
loop
mov
jbe
incl
push
rolb
xor
mov
and
dec
add
popa
loop
adc
mov
call
lods
cs
je
inc
or
add
push
fmuls
cmp
lret
iret
in
or
cmp
lods
aaa
jmp
mul
add
dec
pop
sbb
lcall
and
push
pop
mov
adc
jmp
sbb
xor
mov
pop
inc
xchg
mov
inc
stos
pop
lcall
addl
shlb
out
pop
and
cmp
ret
sbb
ljmp
in
and
xor
jno
scas
sbb
call
mov
pop
or
scas
pop
jmp
into
push
pop
mov
insb
ret
lret
cmpsb
add
scas
jne
adc
mov
iret
shld
or
mov
or
lahf
or
adc
and
mov
sbb
dec
add
incl
pop
xchg
push
and
arpl
dec
dec
jmp
or
in
push
xlat
das
inc
push
jne
jo
pop
and
sbb
test
push
mov
pop
push
jg
stos
sbb
jbe
push
adc
inc
add
pop
add
xchg
fwait
decl
mov
mov
rorb
incl
data16
push
mov
jecxz
add
das
adc
dec
dec
mov
lock
popf
dec
jns
ja
data16
lods
clc
cmp
nop
dec
stos
pop
mov
inc
jb
lock
andb
jg
adc
incl
cmovnp
or
aaa
lods
popa
sbb
lods
pop
or
aas
ret
jecxz
jmp
jae
add
push
adc
inc
arpl
pop
mov
pop
jg
imul
insl
sbb
sti
arpl
out
pop
out
and
insl
sahf
inc
fs
setb
clc
mov
addl
pop
add
pop
and
and
xor
inc
add
pusha
add
cli
incw
addb
add
or
add
add
add
add
call
push
add
jo
fisttps
add
rolb
add
add
ja
clc
sub
in
xor
adc
nop
xchg
cmc
addb
push
sbb
add
add
ljmp
or
mov
cli
out
mov
add
add
add
insl
aas
repnz
clc
incl
and
add
add
pop
fdivrs
stos
add
pusha
add
add
decl
jmp
adc
mov
add
cmpsb
rolb
loopne
lock
idiv
negb
push
shl
add
orl
add
add
xor
inc
push
cmp
loop
add
lcall
add
xor
sub
push
push
fbstp
out
rolb
mov
add
xor
pop
xor
movsb
sub
jbe
ret
adc
mov
inc
data16
in
jle
into
add
sub
push
out
shll
das
mov
cmp
lock
pushf
scas
fiaddl
out
adc
push
add
sub
jo
jle
out
cmp
pushl
std
add
cwtl
push
repz
and
ja
push
add
stos
das
pop
lock
push
and
aam
lock
push
ficoml
add
call
fcomi
int
dec
add
ds
add
rcrb
adc
icebp
mov
sub
jp
add
xor
sti
iret
mov
pop
pusha
cld
ljmp
push
addb
push
fisubs
pop
mov
and
jg
sahf
mov
jo
xorl
sub
ljmp
pop
inc
pop
sbb
out
lret
mov
jo
dec
add
dec
call
pop
rolb
pop
loopne
aas
mov
lock
or
cld
pop
mov
pop
dec
add
jo
jmp
decl
push
or
or
rorb
xor
movsl
popa
idiv
mov
add
stc
pop
mulb
adc
and
cmova
or
or
pop
imul
and
or
or
out
pusha
loopne
pop
mov
mov
and
mov
bound
mov
fimuls
xor
decl
ljmp
or
or
push
or
or
out
ja
pop
dec
sbb
mov
int
pop
incb
ret
add
lcall
or
or
jmp
mov
xchg
icebp
jg
pushf
ficoms
or
aaa
out
jo
or
inc
cli
outsl
ljmp
pusha
or
mov
lods
shr
subb
rorb
mov
rcr
idiv
sbb
hlt
push
sarb
add
lock
and
mov
inc
pusha
fdivr
push
sbb
jo
orb
mov
xorb
or
fisttps
adc
or
inc
or
in
jg
out
incl
or
sahf
or
xor
nop
or
fisttps
push
xor
mov
dec
pusha
pop
push
cli
push
loopne
sub
sub
xchg
mov
push
shlb
insb
pop
dec
adc
rcrb
sbb
mov
out
rorb
decl
push
sbb
loopne
lock
jbe
add
cmpsb
wrmsr
cmpxchg
cpuid
mov
sbb
pop
inc
in
mov
nop
fsubrp
inc
rcrl
pushl
shrb
inc
mov
xchg
jb
movswl
push
repz
sub
mov
sti
loopne
fsubs
clc
xor
cld
adc
jns
inc
xchg
add
lahf
push
pop
sub
addb
add
jmp
jo
ljmp
mov
jl
pop
adc
adc
adc
adc
jns
cmp
sub
lahf
out
mov
rcrb
adc
ss
aaa
rcll
aas
pop
roll
sbb
jg
adc
push
enter
aaa
lds
xor
das
and
insb
mov
mov
in
xchg
jmp
fisubrl
orb
add
lahf
std
lret
divb
add
rclb
adc
dec
pusha
popa
out
jae
in
push
mov
lock
cmc
pop
mov
rol
mov
push
push
dec
clc
adc
stos
lock
xchg
mov
adc
push
push
cld
mov
lret
rclb
loopne
add
lea
jmp
sbb
stos
pop
xor
ljmp
sti
repz
pusha
clc
and
xor
int3
inc
adc
pmullw
sub
ficoml
rcll
adcb
mov
xchg
add
cltd
sarb
mov
pop
mov
call
rorb
sbb
loopne
dec
mov
push
push
incb
cmpsb
aas
ds
mov
out
xor
inc
and
push
push
pusha
xchg
cmpsb
cld
pop
lock
fdivs
add
mov
mov
fcmovb
into
adc
add
adc
adc
ljmp
jb
and
loopne
adc
adc
fisttps
xor
add
pushl
add
adc
imul
add
cmp
aaa
pusha
dec
jo
adcb
insb
adc
stos
sti
idivl
push
push
rclb
mov
inc
pop
mov
rcr
push
inc
adc
jg
inc
cmp
dec
pushf
add
push
push
xchg
pop
pop
add
and
inc
neg
sbbb
sbb
or
sbb
lods
fistpl
xor
stc
inc
add
inc
jmp
add
iret
leave
add
in
les
pop
and
mov
inc
cmp
add
cmp
or
loopne
jg
mov
sub
push
ficoml
movb
add
pop
lock
sub
addr16
mov
xlat
aaa
sbb
or
shrb
filds
sub
add
or
dec
and
adc
popa
fnstcw
addb
aas
call
testb
dec
je
sub
scas
pop
hlt
rcr
dec
and
jg
pop
das
mov
out
add
shrl
push
xor
pushl
into
clts
push
mov
jg
pusha
xor
push
sbb
add
cmp
cmc
add
fidivl
cld
ret
xor
mov
lahf
or
dec
jg
imul
add
pop
or
adc
lea
syscall
ja
pushl
push
fldenv
cltd
jmp
inc
lock
lidtl
mov
mov
pop
cli
cmpsb
add
push
lods
loope
xchg
xor
inc
ljmp
shr
dec
lock
ret
pop
mov
push
sbb
pop
add
jg
or
cld
fiaddl
or
sbb
arpl
add
call
xlat
daa
xchg
cmp
in
push
decb
sbb
jle
popa
adc
add
sbb
cmp
pop
jg
jmp
push
inc
cwtl
jae
pop
lahf
icebp
sub
lds
mov
gs
decl
lods
and
and
jg
push
push
jmp
insl
aas
jns
jae
or
mov
add
pop
jge
mov
mov
cld
ljmp
insl
int
outsb
sbb
cmc
ret
inc
push
popa
cwtl
mov
mov
mov
incl
fstps
add
or
jbe
dec
or
adc
pop
ljmp
lods
dec
pusha
popf
insl
shrl
ret
add
dec
lcall
sbb
cmp
xchg
mov
mov
dec
or
and
sub
add
ffreep
and
std
lea
pop
cmp
or
dec
add
xor
jbe
lea
and
adc
xchg
icebp
lcall
cmp
add
add
mov
pop
adc
adc
call
sbb
call
cld
adc
dec
pop
pop
sbbl
add
add
fsub
push
cld
fstpt
jb
mov
addb
mov
inc
lods
fildl
push
decl
dec
in
pop
push
jnp
dec
mov
cmp
mov
fisttps
loop
ljmp
push
or
or
mov
daa
push
add
mov
sub
std
fmull
jp
imul
pop
icebp
mov
out
aas
and
and
add
aas
or
lcall
sbb
ffreep
fidivrs
sbb
roll
push
add
add
jb
fcomip
inc
outsl
or
adc
push
jp
insl
fbld
lods
cmp
mov
dec
iret
adc
sbb
sub
push
loop
test
dec
mov
out
or
mov
pop
mov
pop
dec
add
mov
pop
imul
or
add
test
outsl
xor
vcmpngt_uqsd
xchg
sub
and
decl
push
jg
or
ret
sti
inc
sbb
lods
jg
and
cwtl
popa
in
pop
and
jg
repnz
addr16
pop
shll
stc
insb
mov
xor
je
jecxz
jg
in
jl
das
cmp
push
cltd
daa
push
loopne
fistps
add
arpl
pusha
dec
mov
sub
add
imul
sbb
repz
test
xchg
sub
icebp
fisttps
out
mov
out
lret
sbb
cs
jbe
divl
and
sahf
add
push
push
enter
mov
adc
mov
pop
insb
inc
pop
and
sub
aas
icebp
jno
dec
clc
pop
pop
adc
adc
or
sub
and
sub
push
stos
xchg
sub
es
or
popa
into
or
imul
xchg
inc
mov
add
add
in
add
mov
fwait
sbb
push
scas
lcall
adc
cli
jg
adc
in
aas
cld
sbb
adc
adc
cmpsl
mov
adc
incl
loope
jno
jg
test
lds
mov
movsl
shrb
lcall
pusha
mov
rcrl
daa
push
xlat
pusha
rcrb
decb
jg
push
shll
repz
rorb
das
adc
inc
xchg
inc
and
mov
inc
les
outsb
adc
or
fbld
mov
dec
mov
add
lcall
ret
and
aam
pop
sub
sbb
insl
les
mov
mov
test
mov
imul
stc
dec
scas
add
cmpsl
inc
cmp
incl
mov
fidivl
addr16
sbb
xor
pop
cmp
cmp
or
in
mov
rolb
mov
ds
add
mov
push
dec
mov
bound
mov
not
xchg
fs
incl
and
xor
inc
cmp
adc
pop
jl
rolb
loopne
add
dec
shll
lds
data16
cwtl
jns
inc
lock
leave
add
movsb
cmc
int
dec
add
in
mov
adc
mov
rclb
or
xor
sarl
in
cmp
add
and
adc
jnp
int3
pop
pop
mov
test
cli
out
repz
nop
or
adcl
mov
mov
sub
push
fidivrs
ds
lcall
mov
adc
adc
inc
jae
xor
push
repz
cmp
mov
mov
addr16
mov
mov
dec
ljmp
lret
cli
ljmp
in
pushf
or
adc
das
or
push
fs
call
insb
add
inc
sbb
jns
add
lock
jb
aad
adc
pop
lock
cmpl
lods
pop
add
pop
mov
jg
pop
add
xchg
and
inc
or
jg
das
adc
xchg
shl
psubsb
scas
in
test
das
fbstp
inc
js
andb
popl
clc
sub
cli
mov
push
add
or
push
arpl
pop
nop
call
and
das
mov
add
sbb
xor
scas
ds
dec
dec
jb
push
mov
mov
inc
dec
xor
xor
fdivr
incl
pusha
sarb
jmp
pushl
out
push
push
aad
pop
push
dec
or
call
ljmp
cmpsb
jno
aaa
jecxz
jmp
push
lods
outsb
adc
and
lds
mov
out
cli
ljmp
fmul
inc
dec
dec
in
aas
int3
test
es
sub
inc
cmpb
jg
ficomps
lret
leave
in
mov
stos
inc
shll
decb
jg
add
test
out
mov
bound
mov
sbb
add
outsl
adc
mov
xor
mov
mov
pusha
dec
jg
mov
test
inc
cld
incl
or
cmp
cmp
es
inc
addb
jg
adc
jbe
mov
pop
inc
in
inc
inc
inc
inc
pandn
inc
inc
and
push
dec
repnz
test
call
imul
xor
subb
test
test
lock
inc
decb
cmpsl
scas
jo
pushl
pop
mov
pushf
pushf
cmp
fucom
push
cltd
dec
into
dec
in
aas
pop
icebp
repz
adc
sbb
cmc
aas
test
xor
mov
dec
jno
roll
in
stos
fistpll
ljmp
lcall
mov
jmp
cmp
push
ds
stos
sbb
andnps
sub
das
ljmp
mov
rcrb
fistps
outsl
stos
fcmovbe
add
pop
mov
loopne
arpl
add
sbb
inc
and
lods
aad
dec
push
and
mov
adc
pop
push
or
and
aas
fistps
jg
cmp
xor
inc
sub
prefetcht1
add
outsl
mov
andb
push
inc
movhps
mov
xchg
outsl
cmp
lcall
ljmp
and
lahf
stos
push
movsb
inc
decl
aad
aas
add
cmp
sub
incl
inc
add
fwait
cmp
add
mov
cld
insl
or
and
jns
movsl
mov
mov
add
call
adc
push
test
mov
lahf
add
std
lcall
adc
and
cmp
mov
push
cmp
out
ficompl
fxch
sbbb
jg
cmp
and
mov
ficoms
pop
pop
aam
mov
mov
dec
insb
jo
pop
add
outsl
and
icebp
call
shll
xor
sub
sbb
hlt
mov
nop
jg
xchg
shr
jl
sub
sub
les
or
and
push
clc
das
clc
adc
pop
cmp
test
xchg
add
pop
dec
add
ret
jo
push
nop
cli
pushl
add
inc
gs
lret
or
mov
or
inc
mov
lret
rcll
adc
push
loope
outsb
in
xchg
mov
andb
sarb
inc
pop
loop
mov
lcall
lods
mov
sbb
inc
fidivl
jle
and
dec
jg
cli
jb
inc
jo
inc
or
lods
push
das
push
cwtl
adc
inc
sbb
sbb
out
jno
and
jg
jmp
fsubl
sbb
lods
js
xor
and
clc
dec
add
mov
decl
enter
imul
fiadds
pop
adc
pushl
add
adc
popf
inc
mov
adc
jb
add
es
and
ss
je
ljmp
sub
inc
add
or
out
or
rorb
nop
popa
add
lcall
outsb
jno
mov
out
insl
dec
fadd
loop
cmpsb
cmp
xchg
bound
mov
incl
adc
or
adc
pushf
push
scas
sub
jo
mov
inc
incl
shrl
push
xor
clc
and
inc
rorb
mov
sub
cld
pop
dec
cli
lods
and
aas
jmp
lods
add
scas
roll
cmp
lods
jne
inc
int3
mov
push
jp
mov
pop
mov
and
cwtd
push
rclb
ljmp
pop
jmp
sahf
rorl
mov
mov
inc
pop
xor
scas
mov
out
test
jmp
add
popa
sub
jo
pusha
incl
inc
adc
dec
nop
xchg
cwtl
dec
aaa
and
xchg
add
or
jno
add
adc
dec
sub
adc
xchg
call
call
pop
cli
mov
mov
sub
push
js
dec
fcomip
jmp
outsb
movl
or
mov
sub
push
mov
sub
jmp
push
fistps
imulb
mov
inc
rolb
das
add
insb
mov
push
xor
aas
adc
aas
sub
ljmp
test
mov
sbb
adc
popf
negb
dec
mov
pop
cmp
repnz
mov
addl
add
fbstp
es
out
into
jbe
in
ss
xor
outsl
xchg
cmc
jle
adc
push
sub
pop
pop
fcmovb
test
outsb
lds
ret
shll
jns
adc
ror
adc
ja
call
inc
sti
fbstp
test
add
adc
mov
ret
xchg
cmp
inc
mov
push
and
pop
add
jmp
and
jecxz
les
inc
push
inc
cmp
pushf
pusha
or
push
mov
aad
inc
adcb
pop
push
fisttpll
daa
or
out
push
xor
add
cmpsl
inc
int
inc
inc
rcl
pop
js
test
dec
mov
sete
xlat
adc
jbe
sub
ret
and
jne
cwtl
aam
sub
les
std
aad
pop
add
lea
das
pop
sbb
test
sub
jg
push
sbb
add
sbb
dec
or
inc
test
inc
pop
inc
xchg
dec
std
incl
rcrl
inc
cs
lcall
scas
inc
inc
inc
cmp
add
pop
inc
dec
inc
push
push
inc
push
or
xchg
lcall
addr16
cltd
add
lret
add
or
cmpb
push
popa
push
hlt
push
pop
les
or
inc
jecxz
mov
outsl
add
or
pop
push
dec
fldl
add
sbb
in
incl
mov
pop
dec
daa
pop
add
add
xor
sbb
lea
ss
mov
or
cmp
lret
or
add
fs
jo
js
repz
jmp
jne
fisubrl
pop
outsl
push
or
or
lcall
cmp
pop
imul
cltd
ds
ljmp
fcoms
cwtl
add
adc
imul
xor
imul
cmp
pushl
jno
mov
jne
ss
inc
add
xchg
lahf
push
mov
inc
clc
das
mov
inc
xor
inc
add
xchg
add
lds
pushf
and
lock
push
sbb
jb
pusha
xchg
xor
mov
rcll
cmpsl
or
addl
and
call
inc
xor
adc
pushw
xchg
or
mov
dec
add
push
adc
icebp
mov
nop
xchg
xchg
or
test
cs
cwtl
call
addl
loopne
add
or
push
inc
imul
sub
sbb
pop
sub
xchg
or
mov
cmp
mov
clc
lods
addl
arpl
dec
or
or
or
sbb
and
inc
data16
ret
add
push
mov
xor
ss
jo
pop
movsb
into
scas
xchg
add
lcall
and
or
mov
in
add
sbb
pop
loope
inc
mov
ret
push
xor
dec
cmpsb
repz
mov
mov
xor
push
loopne
lcall
nop
add
ss
popa
sub
xor
dec
mov
and
sub
popf
add
jg
push
or
push
xor
dec
insl
pop
cmp
cld
call
daa
cmovnp
mov
xchg
fnsave
and
pop
mov
jg
je
sub
xor
les
xor
jle
sbb
adc
xor
sbb
mov
cmp
cs
fs
sub
xor
mov
push
inc
inc
dec
inc
sub
loopne
and
cmp
aas
hlt
or
and
dec
enter
and
lret
cmp
mov
fsubr
add
outsb
sbb
dec
jnp
js
push
pop
mov
ljmp
adc
std
mov
xchg
cs
movsl
ds
bound
cmp
or
cmp
push
pop
ss
cmp
add
cmp
ljmp
fs
push
jo
adc
aas
test
arpl
incl
adc
fadds
xor
mov
xlat
push
gs
push
dec
test
popa
and
xor
or
fcmovnu
jbe
xor
sbb
mov
popf
xor
jg
inc
test
mov
xchg
mov
outsb
dec
jp
sar
ja
or
gs
lock
jle
je
mov
outsb
lret
sub
jb
ss
jbe
or
clc
incl
loopne
inc
mov
xchg
jg
jb
mov
pushl
and
addb
mov
mov
and
adc
call
mov
clc
scas
and
insl
decl
fdivrl
inc
ja
sub
cmp
sbb
je
inc
clc
and
pop
subb
adc
sbb
lock
call
or
add
adc
bound
and
inc
into
jo
push
xchg
imul
out
inc
stc
pop
stos
fmuls
mov
jne
jne
cmp
jb
xchg
push
gs
add
pushl
lcall
mov
gs
cmp
popa
xor
mov
insb
push
cmp
and
add
jg
cmp
and
loope
sbb
das
sbbw
pop
out
je
dec
sbb
or
sarb
fsubrs
xor
jo
ret
inc
je
mov
xor
push
and
pushl
ss
lock
pushl
cmp
cmpsl
popa
scas
push
and
mov
movsb
mov
jb
xchg
rcl
jmp
fs
test
addr16
and
add
mov
mov
lods
shrl
mov
jae
es
clc
ds
mov
ret
dec
es
add
adc
call
cmp
xchg
or
and
push
scas
in
xor
ds
sbb
fabs
decl
inc
push
shll
roll
mov
push
adc
and
sbb
pop
data16
fisttps
inc
xor
and
push
xorl
jecxz
mov
pop
loopne
add
mov
adcb
xor
popf
iret
es
and
jmp
and
shlb
jo
hlt
or
dec
lcall
ljmp
icebp
aaa
xor
pop
pushf
sub
in
inc
shr
push
jo
or
decl
lds
adc
push
ret
jno
jne
mov
add
jg
xorb
cmpsl
inc
sub
outsb
push
mov
mov
sahf
cmp
xor
clc
sbb
in
xor
cmpsb
or
xchg
mov
xor
and
lods
xchg
mov
ljmp
daa
sbb
xor
sub
movsl
xor
xor
or
incl
stos
in
sub
sub
xor
test
sub
mov
add
and
xor
stos
ret
and
add
xor
outsl
stos
stos
push
bound
xchg
and
mov
scas
mov
inc
in
jl
mov
clc
dec
sbb
add
push
test
mov
cmp
or
inc
arpl
pop
push
loope
jle
push
leave
add
fisubrl
pop
pop
add
add
test
adc
adc
add
sub
inc
enter
or
divb
test
adc
push
xor
inc
data16
loopne
out
xorl
cmp
push
jb
or
xor
shl
xor
xor
xchg
xor
or
and
lock
push
xor
test
xor
scas
or
or
or
xor
xchg
add
xor
jae
xor
cmp
and
dec
addb
in
xor
xor
and
push
push
cmp
mov
ss
or
dec
ss
sahf
xchg
xchg
ss
adc
pusha
mov
mov
fsubp
adc
lods
cmp
jbe
outsl
scas
xchg
cltd
add
aaa
fisubs
aaa
aaa
inc
or
push
mov
aaa
aaa
add
data16
xor
aaa
nop
xchg
adc
cmp
subb
in
cmpsb
aaa
mov
mov
cmp
sar
push
sub
dec
cmp
loop
movsl
bnd
cmp
cmp
cmp
cmp
dec
gs
cmp
cmp
cmp
xor
mov
mov
mov
xor
sbb
icebp
sub
push
add
adcl
xor
inc
cmp
out
sub
fsub
adc
cmp
or
orb
orb
shlb
ljmp
push
cmp
inc
cmp
adc
int3
push
test
xor
inc
enter
movsb
mulb
inc
pop
sbb
testb
xor
adc
call
lock
xor
and
xor
je
je
enter
sub
movsb
xor
xor
and
inc
jo
aaa
push
push
mov
nop
inc
mov
push
sbb
ja
movsl
lods
mov
fwait
lods
push
in
sub
sub
jne
pop
fsubrs
pop
pusha
lea
xor
add
add
push
insb
pop
pushl
add
cs
pop
cltd
bound
in
xchg
pop
outsb
push
jmp
push
lea
add
jo
sbb
xchg
mov
or
std
fbld
lret
adc
jmp
fldcw
test
mov
ljmp
sub
cmp
gs
popf
pop
testl
clc
cmp
scas
xor
adc
iret
popa
dec
fnstcw
push
incl
adcl
push
pop
and
ret
lods
arpl
add
add
and
push
scas
clc
lcall
mulb
test
push
sbb
dec
inc
imul
popl
mov
and
add
sub
cmpsb
outsb
outsb
jb
jo
test
jb
inc
mov
sub
cmp
xchg
sub
jae
cld
inc
data16
addb
sbb
add
jno
add
dec
inc
dec
push
dec
inc
push
dec
xor
lcall
cmp
xor
xchg
inc
pop
adc
data16
cmpsl
lea
std
jg
sti
div
pop
add
push
lcall
ljmp
out
mov
decl
and
pusha
push
add
loop
jmp
inc
xor
push
add
ret
stos
mov
addl
incl
sarl
jae
movb
adc
or
push
xchg
mov
rol
xchg
pop
subb
rcrl
jg
jmp
into
add
jno
mov
jbe
not
insb
push
jno
cmp
ret
cli
push
fadd
inc
fisubrs
ds
dec
incl
rorl
push
cmp
sub
inc
sbb
cmpsb
adc
call
inc
or
xor
sub
push
rcll
or
test
fadds
es
scas
nop
pushl
roll
fimull
in
popf
cmpb
in
loopne
sub
mov
call
adc
push
dec
inc
pop
sbb
push
gs
adc
push
xchg
dec
jmp
mov
pop
pop
mov
call
sbb
fdivl
mov
arpl
and
lcall
imul
add
js
push
popa
xlat
xchg
push
insb
add
xchg
imul
shlb
sbb
popa
pop
imul
dec
xor
xchg
es
or
mov
mov
call
add
lcall
xchg
or
ret
xchg
xchg
jg
ss
push
pusha
add
dec
push
xlat
xor
insl
xchg
in
add
test
add
inc
divb
fidivrl
sbb
fs
dec
mov
je
outsb
cmp
sbb
loope
popf
hlt
outsl
adc
popa
mov
fs
ljmp
sbb
inc
in
addl
push
dec
sub
xor
test
loopne
mov
pop
testb
out
adc
outsb
pop
jecxz
pop
push
test
ljmp
shl
ret
insb
sbbl
or
fnstenv
mov
les
and
inc
add
mov
add
xchg
repnz
inc
stos
xor
orl
pop
sub
ljmp
outsl
sub
fists
sbb
and
add
sub
jg
mov
aad
test
fidivl
cmc
xor
pushf
sbbl
push
inc
push
mov
cmp
or
add
push
dec
das
test
inc
pop
xor
add
in
adc
mov
decl
mov
pop
or
xor
inc
es
add
cs
push
mov
xlat
xor
inc
push
sub
stos
inc
add
in
push
jns
test
and
orl
or
xorb
push
inc
xor
cmp
or
gs
mov
xor
cld
xor
lret
sub
or
mov
xor
inc
cld
int3
mov
mov
xor
ljmp
mov
xor
repnz
or
repz
sbb
xor
mov
sub
pop
xchg
xor
xor
xor
rorb
imul
xor
cmp
adc
sti
cld
fidivl
push
mov
add
and
cmp
in
or
lahf
cmp
aaa
aaa
sub
or
aaa
aaa
in
sub
in
fistl
or
adc
fistpll
imul
cmp
inc
adc
xchg
fadds
clc
enter
mov
xor
sub
cmp
sub
xchg
cmp
cmp
cmp
cmp
push
push
sub
cmp
cmp
cmp
cmp
cmp
push
mov
push
sub
xor
or
gs
add
push
xchg
push
sbb
jmp
cmc
mov
repnz
rorb
xor
xchg
inc
cld
aaa
add
push
mov
incl
insb
fiaddl
or
movsb
push
push
popf
rcll
aad
rcl
pop
sub
dec
and
jae
pop
test
data16
rcr
insl
adc
sti
gs
data16
push
mov
lock
outsl
push
sbb
insb
mov
sub
mov
and
jg
pop
outsb
jbe
popa
jb
inc
jne
jo
xchg
dec
cmp
loope
inc
mov
mov
decl
arpl
jb
and
pop
mov
or
lock
mov
test
sub
add
ss
add
ja
lcall
mov
jne
mov
aaa
or
add
pop
jne
sub
test
int
pushl
adc
mov
jecxz
sub
mov
push
sbb
aaa
test
jo
add
negl
inc
sbb
lret
and
push
mov
test
add
adc
inc
inc
aam
ljmp
xchg
data16
push
mov
adcl
mov
repz
popf
mov
dec
je
mov
in
adc
adc
push
push
dec
popf
shlb
movsb
push
cmp
fbld
mov
das
mov
and
imul
dec
xchg
push
jne
cmpsl
mov
adc
xchg
es
outsl
nop
pusha
hlt
pop
xlat
fisubs
jb
insb
cmp
clc
decl
fists
loop
jo
lods
fcmove
dec
push
jmp
ret
mov
adc
jne
inc
sub
xor
insb
incl
push
lret
ficomps
cmp
loop
aam
call
mov
mov
icebp
out
sub
or
pop
ret
lret
pop
sbb
push
jo
cmp
jmp
jne
sub
mov
push
lret
pop
ret
or
aam
lcall
push
dec
xor
dec
or
push
enter
xor
xlat
pusha
insl
popf
add
sahf
and
mov
pushl
arpl
push
sbb
stos
mov
mov
dec
sub
fcmovu
cmc
pushl
sbb
cmp
push
mov
or
or
test
mov
jb
mov
xor
or
call
fcoms
jmp
or
lods
sub
sbb
clc
push
pop
xor
lods
sbb
dec
xor
dec
inc
gs
lcall
push
inc
xor
fbstp
popf
adc
lods
and
leave
xor
inc
or
dec
and
pushl
xor
movl
jg
push
push
fisubl
add
sub
push
lcall
mov
xor
mov
pusha
sbb
add
xor
scas
nop
mov
add
jo
roll
popf
cmp
in
jg
testb
cmp
adc
jne
xchg
mov
in
xor
and
loope
jmp
sbb
ss
add
test
mov
mov
or
xor
xor
rclb
inc
or
lods
jge
jl
adc
mov
jg
xor
enter
jo
xor
mov
andl
xchg
inc
scas
shll
aas
inc
sbb
xor
mov
xor
rclb
jns
sbb
add
push
inc
and
jns
push
in
fldt
insb
add
jl
and
int
lock
movsb
adc
sbb
adc
aad
mov
cmp
and
push
cmp
incl
xorb
cmp
inc
xor
ss
and
aaa
jne
add
cld
xchg
or
adc
push
ss
ret
xor
adc
scas
xor
mov
cld
sub
xor
or
mov
sbb
sbb
mov
sub
adc
div
mov
sbb
xor
xchg
test
cmp
sbb
sub
mov
pusha
mov
mov
mov
xchg
decl
pop
cmp
inc
add
cmp
mov
inc
cmp
shlb
dec
in
test
imul
or
add
movsb
push
adc
and
mov
push
es
add
jg
dec
pushf
xor
nop
mov
repnz
xor
xor
push
or
pop
xchg
adc
xor
incl
and
add
enter
insl
push
shlb
lcall
xor
inc
mov
mov
clc
decl
arpl
rorl
push
imul
pop
test
adc
jg
add
fisubl
outsb
in
mov
xor
or
push
mov
bnd
add
pusha
adc
dec
push
pop
or
pushl
shlb
loopne
push
outsl
cmpsl
test
jns
lcall
loopne
mov
mov
movsl
mov
lods
dec
cmp
movsl
test
mov
cmp
jo
jae
cmpb
sahf
add
or
enter
sbb
sub
lcall
mov
xor
pop
arpl
push
rcr
mov
cltd
ss
adc
incl
dec
call
mov
cmpb
and
xchg
out
andb
repz
js
les
push
ret
pop
scas
test
cmp
adc
ds
aaa
insl
lcall
mov
decl
or
push
mov
xchg
rorl
es
sub
mov
mov
pop
inc
rorl
inc
mov
pushl
adc
daa
cs
in
sbbl
adc
or
test
or
sub
pop
outsl
clc
jg
jbe
sub
sub
sub
cmp
es
clc
loope
and
jmp
outsl
jp
loope
mov
insb
je
ljmp
xor
pop
aam
and
sub
jo
xor
mov
jmp
call
adc
nop
push
cmp
arpl
cltd
lret
cs
cli
xchg
outsl
fwait
and
xchg
pop
daa
inc
jmp
test
lret
adc
in
arpl
adc
xor
outsl
aaa
pop
xchg
adc
xor
lock
mov
push
rcll
and
xor
xor
loopne
aad
push
jmp
inc
xor
hlt
jne
add
cs
add
push
popa
adc
pop
adc
ja
aam
cmp
and
ret
mov
or
fiaddl
push
pusha
lea
aam
sbb
icebp
mov
jp
inc
nop
inc
pop
adc
out
mov
js
or
rcl
jno
aam
or
cmp
nop
fistps
rolb
loopne
ja
aam
out
or
gs
add
push
cmp
xor
add
or
or
xor
mov
pop
lods
push
lcall
or
sti
xor
mov
xor
add
rorb
lds
add
mov
adc
aad
incl
sbb
add
or
push
inc
add
inc
push
daa
lcall
jg
pop
cmp
orl
sub
push
add
iret
adc
cli
inc
dec
scas
jge
repnz
add
inc
rol
icebp
jg
mov
and
dec
in
or
loopne
call
subl
add
fildl
or
rcrb
mov
push
add
subb
cld
jno
push
jb
adc
and
jb
and
movsl
fwait
fildll
push
jbe
rol
lret
jle
lock
sub
or
fcmovbe
shlb
or
imul
in
pop
xor
jg
add
push
adc
rorb
dec
or
mov
test
add
add
je
jno
insb
and
shr
jne
imul
inc
jp
mov
sub
xchg
or
out
dec
inc
mov
jmp
sbb
mov
rclb
stos
cmp
jl
push
jl
and
sbb
out
clc
outsl
dec
push
aam
iret
add
call
gs
add
inc
add
out
mov
adc
lret
cmp
mov
adc
jl
inc
js
fcomip
inc
push
leave
add
jb
dec
outsb
push
popf
movsl
movsb
and
test
mov
jo
add
adc
add
sahf
lods
outsl
incl
sbb
xor
pop
inc
andb
mov
sbb
movl
xchg
in
dec
push
outsl
dec
sbb
aas
out
and
scas
rclb
sbb
mov
call
arpl
adc
test
fs
cltd
sub
push
loope
cmc
gs
sub
or
inc
imul
js
or
xchg
fildl
pop
pop
sti
lods
nop
push
and
mov
mov
addb
cs
jo
addr16
jg
or
sub
and
pusha
decl
mov
pop
jecxz
insb
sarl
sbb
or
sti
add
fxtract
adc
xor
cld
decl
jle
dec
fstps
push
pop
outsb
inc
cs
sbb
incl
adc
insl
sbb
inc
or
mov
std
lcall
xor
fisttpll
and
dec
pop
mov
push
cmp
decl
addr16
xchg
inc
dec
sub
pop
mov
mov
pop
imul
ja
popa
mov
sub
or
and
and
mov
sbb
mov
cs
imul
add
dec
and
cmpsl
sub
pop
cmp
mov
and
sbb
std
incl
pop
adc
or
dec
push
fsts
insb
and
scas
pop
mov
imul
fsubr
xor
adc
sub
jns
cmc
mov
push
cmp
inc
scas
bound
js
sarb
inc
ret
imul
mov
daa
aam
lcall
push
sbb
lea
insb
les
add
rcll
lahf
movsb
call
and
lods
mov
inc
mov
inc
sub
fdivl
jmp
mov
outsl
insb
test
xor
xorps
add
sub
jecxz
addr16
xchg
test
jp
mov
and
popl
mov
into
mov
out
data16
ja
cmpsb
push
subl
lret
cmp
jae
iret
loopne
popa
sbb
inc
lods
xchg
pushl
mov
insb
out
or
rcl
sbb
lods
pop
jae
mov
push
das
and
add
push
ret
xorb
mov
and
and
push
add
push
dec
and
hlt
jg
orb
sub
pushf
xorb
lcall
fisttpl
jae
out
pop
add
in
push
dec
orl
cld
das
inc
jmp
test
or
or
imul
in
insb
cmp
ret
shrl
adc
inc
jmp
cli
or
sub
sbb
jle
fcmovne
inc
incl
add
or
add
repnz
das
mov
addr16
jb
incl
mov
xchg
xor
in
sbb
pop
pushl
push
sbb
xchg
pusha
int
aaa
jae
cmp
dec
aas
das
ja
xchg
sti
inc
and
mov
das
es
or
insb
push
sub
push
jne
int3
movsb
pop
decl
incl
maxps
pop
in
jecxz
and
jo
xchg
fs
pop
or
cwtl
cwtl
nop
add
add
lcall
loope
jns
mov
cmpsb
mov
add
stos
es
add
mov
jbe
and
dec
add
dec
call
xor
inc
ljmp
or
mov
in
push
cmp
fisttpl
or
pop
or
test
cli
decl
ja
xor
inc
push
push
adc
sub
sub
sbb
push
andl
loop
jmp
fmull
decl
vphaddbd
insb
std
inc
fneni(8087
pop
orl
decl
push
mov
test
shll
sbb
shrb
inc
sbb
mov
dec
push
xor
add
adc
push
lcall
out
stos
movsl
push
add
rcrb
and
push
ss
or
add
incl
fadds
in
sbb
imul
xor
es
jmp
sbb
push
sub
or
cmpb
lods
adc
inc
cmp
push
and
jecxz
inc
into
and
data16
and
push
lret
or
nop
xchg
push
mov
xchg
inc
lret
and
and
cwtl
and
jns
push
mov
mov
inc
call
jg
xchg
push
outsb
inc
aad
inc
subb
adc
mov
inc
pop
push
jmp
movsl
mov
inc
movsl
rclb
mov
shlb
mov
dec
xor
inc
adc
add
int
xchg
lock
fs
jbe
adc
std
call
imul
jno
outsl
and
in
in
mov
and
mov
push
dec
cmp
scas
and
xor
ss
aaa
sbb
jbe
fcomip
pop
enter
daa
imul
repz
dec
insl
mov
or
pop
cmpb
adc
xor
or
pop
cld
imul
sub
hlt
ljmp
cmp
dec
insl
jae
and
mov
dec
cmp
dec
adc
adc
lcall
inc
repz
xchg
cmp
and
xor
test
sbb
push
sbb
or
addr16
ficomps
jnp
mov
mov
push
loope
decl
or
jo
outsl
jno
sbb
mov
test
icebp
fbld
in
jno
cmp
pop
aaa
daa
in
jmp
mov
or
imul
sub
pusha
jmp
and
out
ljmp
in
rolb
repnz
push
dec
in
jl
dec
leave
test
cmpl
cs
das
clc
add
orb
sub
mov
lcall
dec
js
cmp
cmp
testl
xchg
push
and
pop
mov
push
adc
lea
xchg
and
or
in
sub
addr16
push
push
add
pushl
popa
sbb
or
decl
jmp
popa
cs
das
sbb
notb
inc
cli
out
cmpsb
icebp
and
pushf
mov
aam
push
dec
adc
pusha
clc
or
fsts
add
stos
fldt
rcr
das
pop
push
jo
or
fs
aas
xor
loope
push
fdivrs
scas
xchg
lock
xorl
aas
insb
push
pusha
push
and
and
jo
lock
add
cmpsb
mov
adc
ljmp
test
pusha
and
and
pop
sub
scas
scas
lock
icebp
sbb
mov
and
add
jp
loopne
cs
cmp
add
jno
fnstcw
insl
adc
push
push
fimull
insb
test
jno
adc
andl
insb
mov
pusha
iret
and
cld
sbb
push
sub
push
inc
cmpsb
lcall
adc
and
movsb
nop
ja
push
pop
pop
fwait
inc
jmp
mov
clc
pusha
sbb
insl
xlat
pushl
push
jecxz
ss
cmp
xor
cmp
xor
dec
mov
jmp
std
mov
sub
adc
nop
mov
adc
adc
ja
fsubrs
xchg
daa
push
jne
leave
pop
int
jmp
cmp
sbb
inc
outsl
aaa
push
add
icebp
data16
dec
jae
popa
in
inc
insb
inc
or
pushl
pushf
xchg
test
push
sbb
scas
rorl
xor
out
and
dec
rol
insl
test
ljmp
xorl
mov
and
inc
push
pushf
dec
xor
jg
xor
fs
and
and
scas
pop
call
call
adc
mov
loop
inc
cmp
sbb
and
ret
push
mov
sbb
incl
inc
sbb
xor
sahf
mov
ljmp
pop
aad
push
and
push
jno
inc
mov
mov
adc
sub
cs
aas
adc
rcrl
cmc
sbb
add
in
std
fbstp
dec
mov
jnp
push
sbb
adc
loope
call
jl
pusha
pop
fwait
jmp
imul
sbb
pop
orl
inc
sbb
mov
pushl
cld
fwait
cmpsl
pop
mov
fisubl
das
popa
stos
cmp
push
sub
lcall
rcrb
xor
inc
mov
and
sub
popa
pop
push
dec
clc
enter
ja
mov
jg
pop
addb
icebp
mov
nop
mov
test
cli
out
and
js
sbb
lcall
and
and
and
mov
xchg
adc
test
dec
adc
push
xchg
jmp
add
push
dec
fcmovnbe
jle
and
add
sahf
mov
inc
dec
pop
dec
fs
adc
ret
jg
and
fsubl
fisubrl
or
xchg
stc
jne
jmp
out
arpl
rcrl
xchg
pop
fnstenv
jg
lods
mov
jge
pushaw
in
cli
pushl
mov
movsb
and
jge
sub
and
pop
jmp
adc
push
inc
fcoml
pop
sahf
xchg
push
add
incl
and
call
sub
into
xor
fwait
xor
dec
lods
dec
incl
ja
push
je
pop
pop
popa
cwtd
cmpsl
push
ret
outsl
sub
test
inc
sbb
cwtl
push
inc
cs
or
mov
adc
or
add
or
mov
movsb
aam
push
gs
pop
rcrb
fcomps
xor
incl
sbb
sbb
adc
mov
add
push
sbb
sbb
sarb
fimull
and
adc
and
incl
adc
lcall
mov
sysret
or
xor
jmp
nopl
add
push
or
sub
or
adc
or
shrb
in
mov
adc
pop
call
mov
push
mov
and
sbb
or
lock
aam
lcall
dec
or
xchg
adc
mov
xchg
add
cli
aaa
adc
add
or
decl
lock
or
das
sub
call
sbb
decl
dec
push
sub
add
sti
pop
enter
or
add
add
adc
jmp
sub
cmp
or
subl
imul
add
or
pop
lock
add
lea
jg
or
lock
lock
stos
mov
add
sti
repnz
add
adc
push
lock
call
lock
pop
lock
add
dec
in
jp
mov
sub
adc
sbb
adc
xor
pop
and
wbinvd
sub
icebp
lcall
incl
and
jno
inc
dec
add
pop
sbb
cmp
or
adc
push
mov
call
aaa
adc
push
adc
mov
sub
daa
mov
push
das
push
movsl
or
or
stos
pop
push
and
dec
or
decl
pop
nopl
insl
andb
imul
aaa
cwtl
out
add
add
popf
lock
add
lock
outsl
mov
adc
lea
aaa
cwtl
rolb
jb
lock
lock
das
xor
fbld
lock
push
add
dec
xor
and
movups
pushl
inc
pop
adc
or
lock
mov
fdivrl
mov
das
fsubrp
inc
or
and
aaa
cld
cli
adc
cmpsl
sub
sbb
ret
jg
pop
push
or
add
mov
or
aad
mov
loop
decl
jo
jb
adc
mov
adc
add
insl
inc
add
pushl
into
adc
rclb
call
cld
inc
push
adc
and
enter
decl
and
push
pop
dec
pop
xor
push
mov
pushl
or
or
or
std
mov
and
pop
jb
addl
outsl
jg
sbb
pop
aam
adc
mov
pop
sbb
or
lahf
enter
scas
push
push
mov
sbb
mov
adc
add
push
add
or
sbb
mov
jge
mov
push
scas
das
testb
push
scas
popa
add
xor
mov
cld
mov
mov
movb
jg
insb
cwtl
data16
jg
loopne
adc
add
idivl
xlat
inc
out
or
adc
inc
or
pop
add
add
outsb
xor
ds
insb
cli
mov
push
inc
daa
dec
lock
lock
push
lock
clc
das
sub
add
rolb
mov
call
xchg
testb
inc
decl
jbe
shlb
ret
add
js
xor
sbb
ja
pop
dec
std
cmp
pop
add
lock
adc
jg
aas
clc
call
pop
adc
inc
xlat
ret
add
xor
cmp
mov
mov
sbb
das
adc
pop
es
dec
cmp
mov
ss
or
jl
pop
fdivrs
cmp
adc
inc
jae
ret
cmc
cmp
adc
shlb
jle
ficompl
cld
ljmp
adc
ljmp
cs
std
mov
xor
xchg
lock
add
pop
sbbb
and
sub
push
enter
test
mov
dec
test
jecxz
sub
cmp
sbb
inc
rorb
add
sbb
cltd
dec
or
or
mov
fists
cmp
aaa
push
pop
and
pop
adc
or
insl
jmp
ret
clc
jg
lahf
xor
bsf
dec
cli
dec
sub
ljmp
sti
inc
fiaddl
push
push
jg
lcall
sbbb
pop
and
sub
inc
push
arpl
adc
sbb
adc
pushl
dec
and
inc
movsl
inc
loop
test
xor
sar
ljmp
addr16
aaa
lcall
add
sub
sub
push
push
push
mov
outsl
orb
push
pop
inc
cli
adc
and
push
cmp
or
aas
cwtl
lock
add
mov
inc
xor
loopne
or
orb
and
or
movsb
in
into
add
rcrl
arpl
and
cmpsl
sahf
call
jl
adc
or
jp
or
push
rorb
sub
sbb
clc
pop
cmp
cmpl
dec
and
ljmp
xor
pop
cmp
cvttps2pi
adc
fwait
dec
fisttpll
or
mov
les
lods
add
lar
or
or
mov
mov
add
into
and
sub
mov
cld
ss
out
mov
and
cmp
cwtl
adcb
mov
incl
sbb
and
loopne
fs
int
mov
xor
inc
pop
orl
sub
lock
lcall
xor
add
add
jb
in
dec
jl
push
or
es
lds
scas
mov
cmp
sub
add
sub
and
or
and
pushl
lock
and
incl
stos
xor
cmp
adc
push
inc
and
lock
and
mov
dec
or
jbe
aas
rcll
mov
std
incl
cld
jno
inc
or
movb
pop
xorl
pop
pop
jl
dec
inc
inc
jb
pop
adc
int
or
sub
pushl
insl
mov
ja
cmp
fwait
cmpb
xor
lock
mov
clc
ret
dec
xchg
imul
das
fdiv
push
add
xchg
sub
add
and
inc
cmpb
inc
push
filds
incl
dec
lret
jg
mov
xchg
stc
daa
fcom
push
add
test
pop
pop
or
pop
sbb
and
lock
shrl
cli
sbb
cmp
sbb
pop
sbb
sbb
xor
pop
push
xor
sbb
and
inc
sbb
sbb
nop
add
orl
cmp
sub
subl
cs
mov
xchg
js
sub
pushl
jg
movsb
mov
sub
pop
dec
dec
cmp
inc
mov
add
sub
xor
jmp
pusha
push
xor
pop
inc
pop
inc
jno
add
push
lock
add
lahf
push
fidivrl
or
dec
add
ret
add
mov
stos
sbb
call
or
and
es
clc
and
or
sbb
ret
or
add
cmp
inc
rolb
inc
adc
push
aas
mov
xor
add
adc
push
xchg
adc
sub
pop
mov
in
stos
sbb
fists
and
sbb
sub
or
fmuls
push
pushl
adc
sarb
jo
sbb
adc
in
lods
ss
push
push
sbb
mov
into
sbb
shlb
das
jbe
push
inc
jns,pn
inc
cmp
add
cmp
cmp
push
inc
pop
inc
cmpsb
sbb
jg
popf
add
pop
daa
dec
or
aas
repnz
decl
jg
or
cmp
and
fs
cmp
unpckhps
scas
sbb
push
pop
inc
mov
subl
ljmp
inc
jle
or
pop
sub
or
dec
dec
sbb
hlt
call
es
and
adc
inc
or
test
push
call
sub
loope
shrl
pop
fisubrs
mov
xor
jp
dec
jmp
dec
and
inc
pop
loop
add
movnti
inc
or
sbb
dec
mov
aad
inc
xchg
xor
cmp
push
inc
or
sbb
lret
outsb
or
pop
sbb
jg
lods
jo
sub
adc
and
lcall
loopne
pop
cli
or
or
aaa
xor
jg
cmp
ret
in
adc
cld
das
clc
adc
loopne
aaa
pop
adc
jge
sub
or
xchg
lock
cmpsb
call
add
das
sub
push
pop
or
aad
hlt
mov
popa
add
mov
lcall
mov
adc
mov
add
jp
lret
mov
inc
repnz
mov
lcall
pop
dec
call
adcb
push
sbb
imul
adc
pop
mov
push
mov
nop
hlt
cli
push
mov
subb
or
fisttps
or
mov
je
add
shll
lock
ljmp
mov
push
mov
lods
or
jns
xorl
pop
loopne
add
or
mov
call
adc
jae
lock
adc
push
sub
nop
cmc
lcall
and
adc
adc
sbb
cmpb
and
and
ja
int
filds
pop
lock
les
mov
pop
mov
add
or
xor
cmp
sub
fildll
add
out
not
sbb
decb
push
or
scas
sbb
xor
aad
pop
bound
pop
add
adc
and
divb
sub
mov
call
push
cmp
add
and
clc
test
dec
subl
in
push
lret
cld
dec
cmp
and
test
push
inc
sbb
adc
ljmp
mov
outsb
pop
xchg
dec
jle
sub
add
dec
sbb
sub
pop
push
push
ja
xchg
hlt
stos
js
push
pop
insl
insb
mov
xchg
sub
out
mov
pushl
aaa
push
cmp
pop
inc
jmp
cmp
push
sbb
gs
aas
and
fisubs
inc
jae
lea
xor
sub
addr16
push
cmp
shlb
lock
add
jne
cmp
insb
in
cmp
incl
pop
call
shlb
sub
jns
push
pop
xor
sbbl
cmp
cmp
pop
pop
pop
and
adc
aaa
insb
out
iret
inc
pop
roll
or
pusha
and
sbb
add
gs
ret
xchg
add
stos
xor
sbb
sub
sub
pusha
add
pushl
sbb
mov
dec
xor
jmp
fiaddl
cmp
subb
jl
sbb
mov
dec
and
cmp
and
jnp
lock
add
pop
add
jg
stos
inc
dec
push
orps
and
and
test
incl
jo
inc
sub
out
fcomi
iret
add
pop
sbb
adc
mov
cmp
sub
or
jp
adc
cmp
adc
mov
in
and
jo,pn
bound
outsb
in
jle
lods
dec
adc
clc
pushl
dec
sub
outsl
test
out
ljmp
dec
jecxz
ficoms
mov
sbb
mov
xchg
mov
add
cmp
fisubrs
call
clc
fcmovnu
xor
sub
or
cmp
push
cmp
push
ret
int
enter
or
xchg
and
sbb
loopne
lock
stos
decl
fisttps
add
add
idivb
jg
cwtl
ja
stc
add
jbe
push
cmp
add
add
jg
call
adc
or
cmp
push
add
dec
push
push
or
ds
sbb
sbb
fcomip
jmp
cmp
adc
xor
and
add
pushl
sub
xchg
dec
imul
aad
ficoml
mov
inc
adc
inc
cwtl
or
data16
mov
xlat
or
cmp
adc
sub
cmp
push
jg
dec
add
and
sub
sbb
aaa
rcrb
push
and
inc
mov
mov
add
add
clc
mov
cmpsb
sbb
pop
pop
rorl
add
push
adc
fistps
push
sbb
pop
inc
sbb
or
mov
outsb
mov
sbb
or
decl
repnz
outsl
shrl
fnsave
inc
shll
mov
decl
test
xchg
int3
ror
movsl
stos
pop
jg
jns
mov
xor
inc
mov
dec
sub
outsl
xchg
repnz
ljmp
data16
jg
lods
aas
cmp
dec
sbb
lock
mov
adc
call
push
ret
sub
sbb
ret
pop
mov
cmp
data16
push
push
inc
jbe
int3
jmp
sahf
and
add
sbb
outsl
outsb
pop
mov
ss
std
jg
sbb
pop
push
push
xchg
or
testl
mov
pop
hlt
fistl
ss
inc
mov
pop
fs
dec
ss
rorb
adc
mov
push
shll
pop
push
pop
dec
xor
call
cmp
xorl
jb
jnp
inc
and
dec
mov
push
and
ljmp
adc
inc
xchg
data16
popa
sbb
mov
push
sbb
jne
ret
push
out
add
pushl
xlat
pop
adc
inc
or
xor
adc
lods
popa
repz
sbb
jae
add
sbb
or
jg
outsb
xor
jno
or
add
adcl
mov
rolb
sub
cmp
add
and
jo
lock
xor
das
push
stos
cs
movsb
and
lret
inc
test
aam
cmc
call
and
sbb
add
lahf
push
xchg
mov
movsb
mov
jns
mov
add
jb
add
push
sub
int
outsb
mov
sbb
incl
fsubl
outsb
into
dec
or
into
fmuls
das
rcll
dec
xor
push
cld
jg
or
in
jg
push
jg
cmp
adc
pop
pop
dec
cmp
pushl
add
call
lcall
pop
lock
add
adc
loopne
push
pop
ss
push
or
jecxz
sbb
sbb
add
cmp
adc
scas
jp
jle
xor
lcall
dec
sbb
mov
rdpmc
pop
xor
or
push
rclb
or
nop
jmp
mov
add
cmp
add
inc
ja
inc
dec
pop
xchg
pop
ds
or
push
add
call
sti
add
daa
shrd
push
lcall
or
mov
pop
scas
or
or
xchg
pushf
or
cwtl
mov
or
shll
mov
adc
or
sbb
cs
lock
jb
xor
or
or
stc
add
mov
ds
or
dec
adc
adc
scas
push
push
cmp
mov
push
or
jbe
cmp
push
testb
daa
rorb
sub
cmp
mov
and
loop
jmp
sub
cmc
lock
add
pop
sub
or
sbb
loopne
decl
bswap
wrmsr
sub
aaa
dec
adc
gs
outsl
orb
sbb
xor
ss
jg
push
adc
das
cmp
gs
pop
cmp
pop
cmp
jmp
outsl
clc
lcall
adc
inc
and
cmpsb
std
ss
and
adc
cmp
pop
sbb
pop
cli
push
or
ret
aas
add
call
or
jmp
inc
popf
loope
adc
or
sub
sub
jge
rcrl
call
push
adc
fwait
sub
and
sbb
mov
sbb
and
in
ficompl
dec
out
sbb
pusha
cs
gs
hlt
jne
inc
sub
and
rolb
xlat
sahf
divl
test
add
fisttps
movsb
and
out
loop
sbb
out
loope
sbb
outsl
decl
adc
lcall
and
and
push
das
mov
cld
nopl
pop
cs
decb
jae
sbb
rcr
andb
and
ljmp
sub
xchg
ss
loope
xor
sbb
sbb
pop
pop
sarb
jo
and
adc
push
stos
mov
imul
inc
in
rolb
adc
cwtl
sahf
lcall
mov
sub
mov
and
adc
xlat
aad
sub
sbb
outsl
incl
fs
mov
ss
pushl
icebp
sbb
sub
and
mov
cs
sub
jg
push
add
xor
call
or
xor
cmp
lea
mov
in
add
psrad
or
lock
add
ud2
clc
push
mov
aam
sub
jg
aaa
pusha
fbld
adc
dec
sbb
xor
lock
add
mov
sub
ljmp
mov
adc
inc
or
mov
inc
sbb
stos
cs
pop
add
push
loopne
sub
mov
sar
jg
jg
push
add
aaa
dec
aas
jle
adc
adc
es
sub
push
sub
add
out
adc
out
adc
mov
lds
adc
or
jmp
inc
push
loope
mov
sbb
scas
mov
rcrl
out
cmp
xor
lcall
decl
out
cmp
stos
inc
pusha
outsb
and
jl
mov
ja
adc
pop
jbe
inc
aas
cmp
decl
insl
and
and
adc
jg
or
or
mov
aad
es
repnz
fcomip
outsl
scas
int3
shll
sbb
test
mov
sbb
sub
out
loopne
pushl
add
inc
out
push
and
cmp
movsb
sbb
mov
and
push
test
xor
adc
sbb
std
or
sbb
subb
pop
in
sub
cs
push
pop
and
push
jnp
add
mov
inc
ss
cmp
dec
cwtl
js
push
pop
push
and
ss
jns
cmp
jg
test
sbb
mov
cmp
cmp
or
call
push
xlat
sbb
fwait
or
sub
ljmp
dec
lcall
lock
push
adc
stos
add
pop
enter
and
or
or
stos
ljmp
and
dec
and
and
lock
add
pop
add
pushl
xor
sbb
or
pop
sbb
dec
mov
xchg
jo
pop
adc
pushl
stos
jo
and
dec
add
push
mov
sbb
and
and
push
incl
adc
pop
adc
insb
mov
add
sbb
es
ljmp
nop
test
call
inc
lret
sub
clc
decl
nop
sbb
int
fstps
sbb
push
aam
mov
add
dec
sbb
inc
cli
sub
sbb
adc
ret
ljmp
fidivrs
add
cmp
mov
pop
fs
or
add
mov
push
add
add
lcall
xchg
in
push
push
test
je
push
sbb
xchg
mov
adc
ficompl
cltd
out
and
mov
and
rcrl
les
xlat
pop
sbb
popf
jecxz
ljmp
unpckhps
lcall
stos
bound
sub
movsb
cmp
dec
js
jne
call
xor
add
sti
into
mov
cmp
out
and
sub
add
std
mov
and
sub
fbld
dec
cmp
daa
sub
sbb
xor
lea
je
sub
jge
mov
adc
shrb
dec
imul
mov
cwtl
idiv
jmp
push
incl
shlb
or
add
ret
mov
pop
push
pop
cs
cmp
xor
adc
mov
and
push
xor
mov
movsb
adc
roll
mov
xor
loope
mov
push
inc
decl
adc
add
out
adc
mov
insl
fucomip
ret
push
jge
xor
lock
arpl
xor
adc
xor
stos
adc
push
sbb
insl
scas
xor
call
adc
inc
mov
jnp
dec
clc
and
push
adc
scas
cli
out
clc
in
xor
je
lock
add
in
xor
mov
xchg
movsl
and
xor
ljmp
mov
ja
adc
xor
push
sub
sbb
push
outsl
add
dec
clc
das
lret
xor
or
lock
add
mov
sub
ss
cmp
jg
icebp
or
jbe
sarb
xor
ljmp
rcll
jmp
lods
sti
add
mov
ljmp
push
and
adc
adc
add
sbb
adc
adc
sahf
pop
adc
repz
insb
or
mov
dec
arpl
push
jp
pop
inc
sbb
lods
or
pusha
and
adc
xor
jmp
inc
push
cmp
or
jle
testb
adc
push
adc
add
and
pop
or
repz
call
adc
mov
mov
add
jecxz
xchg
lock
add
add
jg
jmp
bound
lock
add
add
cs
lcall
push
addl
sbb
xor
or
pop
cli
pop
shl
push
sbb
out
js
decl
push
sbb
sbb
adc
xor
sub
sbb
pop
add
push
stos
xor
or
inc
mov
lods
jno
cmp
push
jp
add
cmpsb
mov
popa
pop
add
push
sub
mov
mov
jo
mov
ret
add
int3
push
mov
and
call
push
in
pop
adc
mov
dec
lock
insl
push
xorl
mov
adc
int3
adc
icebp
lcall
sub
sub
push
dec
adc
and
into
mov
jo
or
sub
out
lock
push
dec
ret
add
lds
add
dec
das
jle
add
jo
sbb
add
pop
adc
cmpsb
cli
jg
adc
or
ljmp
call
pop
adc
pop
adc
pop
sbb
pop
movsl
sbb
dec
and
hlt
jg
push
syscall
add
xor
pop
imul
adc
dec
loop
fbld
or
sub
xchg
jg
test
mov
pop
dec
dec
mov
call
aad
ja
sbb
cmp
mov
pop
fistpll
add
lock
jg
pushl
sbb
add
dec
adc
cmp
push
and
inc
test
popa
jecxz
icebp
push
push
or
pop
mov
fcmovnbe
push
shrb
mov
mov
hlt
adc
jmp
sbb
cmpsl
sbb
cmp
push
mov
pop
add
sub
push
clc
add
or
arpl
lahf
dec
iret
dec
mov
or
test
lock
dec
push
or
decl
sbb
cmp
mov
lahf
push
and
incl
pop
pusha
push
adc
popa
scas
aam
add
or
scas
out
int3
push
jno
add
cli
jg
pop
fdivs
mov
les
outsb
cs
xchg
mov
add
fimuls
xor
lock
out
mov
sbb
or
jl
push
bound
test
test
xor
add
cltd
sar
icebp
pop
xlat
xor
pop
icebp
jne
mov
in
or
pop
das
jp
jb
mov
fs
dec
lock
test
jmp
or
add
sbb
mov
movsl
or
pop
jns
pop
aaa
pop
aad
sbb
add
cmp
iret
sarl
test
in
pop
adc
xchg
push
lret
outsl
orb
std
xor
mov
mov
decl
push
stos
pop
push
dec
lods
mov
and
fstpl
jmp
and
and
mov
sbb
pop
mov
inc
sub
jmp
cmp
sbb
stc
inc
add
mov
push
lock
push
ja
fwait
mov
dec
inc
outsb
ret
aaa
adc
or
lock
sbb
sub
add
roll
and
sbb
xor
fistps
pop
xchg
arpl
sub
adc
test
add
xchg
cmp
cmc
incl
push
adc
sbb
or
xchg
adc
cmp
fistpl
adc
insl
cmp
or
scas
sub
mov
test
push
pushf
loopne
lock
decl
inc
inc
jl
adc
or
inc
mov
sti
or
pop
push
sbb
adc
pop
and
jle
fs
inc
ljmp
or
out
mov
and
and
sbb
outsl
decl
cmpsl
sbb
cwtl
jg
adc
sub
add
adc
filds
sbb
test
les
adc
push
or
adc
call
sub
lock
adc
or
adc
and
call
add
outsb
push
repnz
and
and
xor
aaa
lock
push
rorb
adc
inc
add
adc
adc
popa
out
lret
xor
fnsave
xchg
lock
pushf
dec
add
sub
cvttps2pi
mov
or
je
stos
jg
lcall
cmp
je
outsb
cmp
push
mov
xlat
dec
fdivrl
inc
lock
jg
mov
inc
sbb
pop
pushf
adc
push
push
incl
add
leave
add
scas
lock
or
xchg
pop
pop
or
inc
outsl
xor
adc
adc
jo
pop
in
cld
mov
mov
add
clc
imulb
cmp
cmp
add
je
lock
dec
add
mov
decl
aas
insb
push
jb
xchg
add
packssdw
pop
pop
inc
adc
cs
aaa
add
int3
fmuls
lcall
or
mov
mov
xchg
xlat
loopne
or
adc
loop
pusha
and
add
decl
sbb
push
push
add
and
pop
inc
xchg
popa
adc
or
pop
xorb
test
mov
cmp
and
jb
sub
push
push
pop
sub
pop
jg
lods
jle
adc
lods
or
push
int3
add
mov
add
shlb
lods
push
lcall
pop
arpl
xor
mov
and
or
cmp
push
cld
jecxz
xchg
in
mov
and
je
lock
in
mov
mov
je
add
jg
dec
lcall
cmpl
xor
push
clc
pop
fs
xor
pusha
lods
add
mov
outsb
add
xor
jl
push
and
clc
or
lock
test
stos
jle
incl
inc
sbb
adc
mov
mov
stos
pop
clc
jle
sti
add
aaa
add
push
popa
or
pop
push
lcall
popw
push
and
and
nop
fs
imul
in
xchg
sbb
cmp
adc
jmp
mov
cmpsb
movsl
push
sub
lock
outsl
cli
fildl
pop
popa
adc
decl
add
pop
popa
es
pop
cmp
and
xchg
inc
les
cmp
xor
cs
inc
cli
orl
lock
sbb
cmp
ds
ret
adc
jp
out
push
pop
pop
push
or
sub
cld
mov
mov
dec
pop
das
ljmp
cs
add
out
or
cld
mov
outsb
add
inc
repz
cwtl
push
outsb
pop
mov
adc
ljmp
jecxz
or
xor
int3
je
push
pop
or
adc
call
or
popa
mov
dec
mov
xor
and
mov
sbb
pop
adc
cmp
mov
mov
jle
pop
add
fcomps
add
cmp
cmp
push
push
addr16
push
lea
mov
pop
dec
pop
xor
push
outsl
mov
pop
push
sbb
test
jmp
adc
sub
ljmp
insb
jb
sub
in
adc
or
pop
xor
decl
pop
addr16
push
inc
inc
and
aas
add
push
les
pop
insl
lock
fstl
push
push
test
adc
jg
and
sbb
dec
xor
sbb
arpl
in
das
mov
inc
jns
or
push
or
mov
jp
sbb
orb
xchg
cmc
call
cmpsb
aad
outsl
dec
lds
push
xor
or
movsl
jl
sub
ret
xchg
incl
pop
call
sub
incl
pop
shlb
xlat
aaa
or
push
or
cs
pop
mov
dec
jo
add
daa
addr16
push
rolb
adc
movsl
test
dec
xor
pop
cmc
cmp
jg
xchg
leave
cmp
movmskps
adc
cmpsb
jle
adc
xchg
jmp
add
gs
xor
xor
decb
fs
mov
sub
cltd
dec
sbb
dec
pop
ds
ret
push
loopne
stos
push
cs
xchg
vhsubps
mov
mov
call
scas
dec
and
popf
add
inc
pop
sbb
dec
shlb
pop
xchg
and
ja
inc
cmpsl
cs
xchg
lcall
adc
mov
push
and
ja
lcall
inc
and
sbb
int
or
jnp
jmp
ss
mov
mov
mov
pop
icebp
jg
lods
lea
adc
pop
pop
das
cmp
dec
aas
sbb
rclb
push
into
cmp
xor
sbb
push
sub
push
jg
loop
xor
adc
or
loop
push
or
mov
outsl
add
jp
das
sub
or
push
repnz
or
sub
push
dec
adc
and
sahf
dec
pop
jne
mov
pop
and
and
data16
or
das
dec
inc
clc
ffreep
dec
lock
add
lock
decl
add
dec
in
fsubrl
cld
jmp
aam
cmp
sbb
decl
das
pop
imul
jno
pop
pushl
jae
inc
or
xchg
adc
lock
add
jae
fs
sbbl
fs
mov
mov
adc
loopne
sti
filds
mov
jo
cwtl
add
stos
jmp
add
ds
cmovnp
adc
sbb
or
or
mov
out
je
lods
sub
inc
xor
lock
cmp
pcmpgtd
fs
mov
add
mov
cmp
and
lock
adc
pop
out
das
jo
dec
dec
push
sub
xchg
sub
mov
push
xor
pop
sub
mov
out
cli
lock
xor
cmp
add
or
roll
cli
incl
movsl
push
push
sbb
xor
fwait
je
add
incl
mov
lds
push
xchg
lods
and
pop
or
xchg
and
lcall
incl
inc
mov
or
or
sar
xchg
ljmp
daa
aaa
sub
daa
cmp
mov
and
and
push
inc
lods
sbb
dec
dec
call
adc
and
pop
and
lods
jmp
adc
cmp
test
incl
dec
push
lret
push
scas
clc
inc
sbb
push
pushf
fdivr
outsl
add
adc
adc
push
sbb
fisubs
lret
popa
loopne
bound
xchg
mov
xor
stos
scas
sbb
push
inc
ja
add
and
fildll
aad
ficomps
mov
cli
push
xor
call
mov
xor
jg
pop
js
pop
add
push
fimull
sub
jbe
sbb
inc
dec
ljmp
sbb
gs
fwait
outsb
ljmp
add
lcall
sbb
adc
cltd
ss
outsb
pop
int3
add
incl
loop
sub
lock
outsb
inc
cmp
mov
aam
imul
cmp
xor
mov
or
lcall
mov
jae
mov
sbb
push
sub
aam
es
sub
push
mov
call
add
sbb
mov
lcall
repnz
jns
call
dec
sub
pushl
sub
jl
adc
daa
adc
adc
adc
adc
adc
cmp
pop
repnz
inc
pop
mov
dec
adc
ja
mov
push
cmp
out
in
cltd
inc
lret
ja
dec
add
ds
inc
aaa
sti
fidivrs
call
pop
dec
push
dec
and
or
push
push
and
test
lcall
add
adc
pop
pop
xchg
mov
loop
or
push
es
cmpsb
imul
and
xchg
push
dec
sub
sub
cs
lcall
inc
xchg
sub
sub
das
sub
aaa
xor
adc
gs
cli
mov
add
sbb
push
sbb
adc
inc
mov
mov
loop
ljmp
test
add
aaa
xlat
std
inc
xor
pop
and
mov
notb
or
and
adc
mov
lock
cli
ljmp
inc
incl
add
push
cmp
lea
jg
add
shlb
dec
xor
mov
aaa
dec
jbe
sbbb
inc
in
sub
fadds
add
aas
aas
push
add
push
or
outsl
filds
in
add
shr
or
pop
xor
call
cltd
movsl
or
lock
cmp
pusha
sub
adc
adc
call
xor
sub
xor
adc
xchg
sub
mov
mov
xchg
mov
mov
inc
adc
call
adc
inc
cmp
filds
adc
or
inc
add
fldl
cmp
pop
sub
xchg
in
incl
xor
add
mov
sub
adc
adc
inc
or
cmp
ljmp
enter
cmp
add
add
and
mov
lahf
clc
lcall
cmpsl
jecxz
or
fidivrl
ljmp
or
sbb
or
xchg
or
lcall
sub
mov
xchg
clc
out
or
xor
prefetchnta
add
stc
nop
pop
push
cvtdq2ps
add
adc
push
push
push
or
pop
pop
pop
fcmovbe
out
sub
cmp
cmp
or
pop
push
cmpsl
insb
cld
pushl
in
ficoml
das
push
out
push
cmp
mov
jne
push
xchg
ds
subl
fisubrl
imul
xchg
fucomip
nop
mov
imul
das
in
pusha
dec
add
call
ja
inc
cs
xor
test
cmp
jbe
jg
cmp
sbb
push
add
imul
push
sub
push
adc
mov
outsl
push
sub
pop
mov
pop
stos
outsb
ljmp
lahf
shlb
pop
pop
dec
adc
jbe
pop
mov
adc
cmp
mov
lea
jl
add
cmpsl
ja
xchg
jl
int3
jg
sub
jg
std
push
jb
insb
add
fwait
icebp
dec
push
movsb
or
pushl
xor
adc
cmp
sbb
test
mov
pop
mov
ret
adc
pop
das
clc
fnsave
pop
or
xor
shlb
push
and
cmp
je
push
ja
incl
or
mov
or
les
lock
add
out
ret
adc
inc
insl
push
mov
and
cmp
inc
mov
sub
push
pusha
inc
lock
add
adc
and
pop
movsl
lcall
fdivp
lahf
addb
or
add
adc
jmp
dec
aaa
sbb
jb
xor
and
xor
cmovo
push
dec
and
sbb
and
and
es
and
inc
mov
pop
mov
pop
pop
and
sbb
or
add
push
adc
nop
incb
ficompl
xchg
lock
or
or
jmp
or
loop
incb
fiadds
jp
and
inc
ss
jmp
aas
cs
sbb
out
xchg
fisubl
xor
xor
or
jg
call
and
lret
test
xor
ds
decl
pop
mov
adc
jne
jb
adc
popf
inc
imul
jg
jle
add
decl
xor
aaa
sub
nop
push
xor
lock
ljmp
insl
enter
adc
xchg
fisubrl
xor
add
test
decl
adc
sub
outsl
jecxz
sub
xor
push
jnp
fwait
sub
test
data16
or
adc
daa
and
das
cli
cmp
pop
pop
adc
cwtl
in
bound
test
sbb
decl
mov
je
and
es
sbb
push
and
or
test
and
jmp
mov
or
adc
das
mov
fcoml
dec
inc
test
mov
dec
fwait
lcall
decb
and
or
cmp
sbb
aas
sbb
and
je
cmp
pop
mov
sub
mov
adc
call
adc
pop
and
jl
cli
sbb
push
adc
add
inc
decl
filds
scas
sbb
loop
jp
pushl
movaps
lea
lahf
ljmp
call
adc
adc
dec
or
sub
or
push
filds
decl
out
std
cmp
sbb
cmp
ljmp
mov
pop
mov
scas
add
cmpsb
das
pop
cmpsl
fs
xchg
pop
stos
jmp
sbb
test
adc
and
push
add
fildl
pusha
push
xor
and
pop
or
adc
mov
and
xor
mov
clc
cld
or
ljmp
and
pop
sub
push
packssdw
xchg
sub
das
aas
or
add
fbstp
or
dec
adc
fbstp
add
sub
or
dec
cmp
dec
pop
pop
loopne
clc
dec
inc
dec
popf
mov
or
in
cmp
jp
push
pushl
and
arpl
or
sbb
aaa
ljmp
and
or
xchg
hlt
push
add
mov
pop
cmp
rcrb
loopne
or
inc
cmp
inc
decl
decb
adc
pop
call
bound
jns
xchg
inc
jecxz
mov
sbb
cmp
xor
fcoms
and
or
mov
jmp
push
mov
sub
sbb
push
push
xor
xor
fistl
call
inc
xor
adc
inc
mov
popa
xchg
add
mov
and
decb
and
jg
push
and
push
loope,pt
test
cmpsl
and
pop
lea
outsl
dec
mov
insl
push
lock
sbb
cmc
fsubrs
inc
jg
test
inc
jg
and
lea
sbbb
xor
jle
pop
imul
out
and
sub
mov
push
xor
xor
sti
das
or
imul
add
push
cmp
push
aad
mov
decl
push
and
sbb
orl
jae
add
ljmp
push
push
cmp
jp
and
inc
sub
mov
fucomi
jg
push
fwait
sub
lods
xor
sbb
pcmpeqw
fs
pop
adc
pop
mov
and
aam
adc
xchg
in
fwait
inc
ljmp
mov
ljmp
orb
cmpsb
push
pop
push
aas
and
cmp
mov
das
add
ret
sbb
jmp
cld
and
cmp
add
das
clc
push
andb
xor
push
sbb
push
das
or
comiss
pop
pop
inc
lds
and
adc
adc
add
dec
mov
jg
jmp
dec
push
sub
adc
sbb
xor
inc
addr16
jg
fwait
ss
sbb
push
pop
loopne
adc
mov
movsb
pop
inc
adc
mov
sub
lea
sub
add
inc
push
mov
lcall
push
and
and
inc
jns
cli
xchg
push
sub
sbb
insb
loop
jno
daa
loopne
adc
xor
adc
andl
lods
lods
pusha
dec
xor
jmp
push
dec
lods
add
sbb
dec
and
inc
mov
cli
or
push
sub
sub
sbb
call
cmp
mov
sbb
dec
and
or
and
int3
enter
mov
pusha
sarl
daa
subb
movsl
les
cli
subl
call
dec
call
mov
xor
movsl
push
and
inc
mov
inc
test
sbb
les
sub
add
adc
add
pop
call
adc
cld
loop
fcomip
pop
add
aaa
addr16
pop
add
repnz
pop
or
fwait
sbb
jb
mov
sub
inc
jg
and
xor
push
in
mov
ds
pop
or
sar
jmp
test
push
pop
inc
test
mov
sar
pop
push
fcmovu
xor
adcb
test
xchg
inc
add
dec
std
mov
mov
inc
add
daa
add
push
pop
cmp
mov
adc
or
or
or
mov
pop
adc
mov
xchg
and
out
scas
sub
mov
jecxz
mov
rclb
pusha
out
cs
mov
int3
pop
cmp
sub
cli
sub
inc
in
call
push
sbb
pop
xor
jbe
mov
dec
pop
pusha
sbb
addl
incl
jnp
mov
cmp
push
fdivp
lock
push
ja
lcall
cmp
inc
inc
or
jmp
jne
pop
dec
and
jnp
inc
dec
mulb
call
or
fs
push
or
andl
inc
xor
outsl
aaa
je
in
sub
repnz
jmp
cmp
dec
std
outsl
mov
stos
or
mov
dec
shll
jl
sub
cli
cmc
clc
mov
and
sti
ljmp
sbb
pop
and
das
xor
xor
ljmp
and
and
mov
in
and
addr16
xor
adc
dec
adc
push
lock
or
adc
pusha
loop
and
xor
mov
dec
add
fists
adc
mov
add
cmp
aad
fmul
and
sbb
lock
ja
clc
or
cli
jg
mov
xor
pushl
jno
xorl
xor
dec
xor
popa
aas
xor
xor
pop
in
popa
cmp
jg
sub
imul
movsb
cmp
ljmp
sbb
inc
test
nop
push
sub
hlt
lcall
adc
add
andb
sbb
adc
inc
mov
popa
adc
mov
dec
pop
fcmovb
testb
decb
clc
inc
sub
push
and
sub
adc
adc
ret
dec
push
fwait
xchg
test
sbb
adc
add
pusha
xchg
mov
xor
inc
shl
ljmp
sbb
dec
mov
add
cs
lcall
es
imul
in
mov
mov
mov
mov
mov
or
rorb
sbb
xor
cmp
sbb
and
jo
mov
cli
ja
fisttpl
subl
adc
push
sbb
push
cwtl
aaa
loope
lret
pop
push
ds
sub
sbb
icebp
filds
lock
add
call
dec
sub
adc
ja
jno
and
mov
adc
inc
mov
push
and
cli
jg
add
movsb
sub
pop
and
lods
ljmp
adc
cmp
sbb
xor
cmp
dec
xchg
ljmp
inc
test
or
loopne
xlat
xor
out
movsb
fiaddl
es
inc
dec
push
jmp
xor
dec
and
dec
dec
cmp
mov
lahf
push
lcall
mov
adc
scas
push
pop
sbb
cmp
sbb
sbb
sbb
jmp
sub
pop
adc
mov
movsb
pop
cmp
sub
xchg
and
dec
rolb
les
ja
out
cli
or
sbb
scas
push
inc
ljmp
push
cltd
push
ss
sub
sub
incl
call
sbb
and
cmpsb
sbb
adc
call
insl
push
dec
cmpsb
or
clc
ljmp
jp
sub
xor
xor
pop
push
std
outsb
or
cld
cmp
dec
push
sub
or
lods
pop
lods
push
or
mov
ss
in
and
pop
hlt
enter
dec
addr16
fbstp
inc
shlb
adc
lock
jg
xchg
add
sbb
pusha
and
jg
jmp
sbb
lock
and
sub
push
nop
nop
pop
icebp
adc
and
push
jb
idivb
inc
mov
adc
and
scas
xchg
xor
stos
sub
add
jg
lock
cli
fcmovnu
adc
push
sbb
cmp
adc
mov
repnz
cmp
sub
dec
sub
mov
push
icebp
push
adc
pop
pop
lock
ficoml
pop
add
ljmp
pop
push
test
xchg
incl
add
lock
syscall
sbb
lock
mov
scas
clc
decl
cmp
or
push
lcall
adc
push
sub
call
lods
xor
and
pop
je
out
xor
mov
cmp
sub
adc
and
cmc
ljmp
aam
dec
pop
bound
or
xor
or
aam
fldl
and
xchg
add
lahf
cmpsb
add
push
or
or
test
add
mov
lahf
and
enter
sbb
push
aas
cmp
ret
add
ds
xor
cmp
jg
lock
adc
inc
cmp
push
aaa
adc
data16
or
pop
call
and
loop
rorl
dec
sbb
mov
inc
sbb
and
sub
in
movsl
adc
fcomip
stos
daa
mov
movsb
es
mov
xor
adc
lret
nop
ljmp
sbb
popa
push
add
push
sbbb
push
inc
sar
incl
add
add
jmp
lods
sub
std
stos
mov
sbb
pop
loop
insl
push
jg
or
adc
and
cld
loopne
xchg
test
mov
push
and
add
adc
push
sub
pop
sbb
ljmp
movsb
jbe
or
add
mov
mov
lods
mov
or
mov
das
lcall
cmp
bound
mov
push
fs
sub
jl
ljmp
inc
and
mov
pop
hlt
inc
lret
mov
add
jg
cmc
adc
outsb
shll
nopl
pusha
aam
mov
aam
or
or
out
push
adc
jo
push
loop
adc
and
or
cmp
sub
sbb
inc
loop
pop
andb
mov
sub
test
ss
inc
jg
push
dec
mov
push
test
xor
cld
fildll
inc
adcl
sub
cld
and
or
mov
and
fistpl
pop
data16
dec
or
adc
andb
sub
rol
sub
and
outsl
call
sub
imul
dec
push
sbb
adc
mov
fisubs
incl
jne
pop
adc
addl
mov
insl
mov
xor
or
cmpsl
mov
sub
push
add
sub
decl
sub
or
sub
shll
pop
dec
xor
add
call
loopne
push
or
cs
and
jbe
or
cmp
sub
add
xor
and
je
and
mov
mov
jbe
jp
pop
loopne
shl
mov
adc
inc
xor
call
and
push
push
adc
pop
adc
addl
push
adc
cmp
rdtsc
mov
pop
fwait
les
push
ss
pop
add
ss
cli
stos
add
jg
cmp
sub
pop
fwait
add
pop
adc
fmull
xor
cld
jmp
pop
add
add
stos
push
test
jl
hlt
frstor
mov
mov
sub
push
lcall
daa
cmpsb
adc
and
call
add
das
dec
or
outsl
add
cli
mov
sub
daa
pop
push
sbb
adc
adc
jbe
inc
lcall
test
cmp
jb
dec
rorb
sub
add
mov
and
mov
adc
lcall
testb
ljmp
jg
outsl
outsl
dec
inc
cmp
push
mov
sub
fisubs
adc
sub
or
lret
lock
jb
and
add
scas
fisttpll
add
and
adc
ja
adc
scas
sti
add
leave
dec
outsb
jns
adc
fwait
fcomip
xchg
sbb
fistl
sub
push
jns
ss
mov
pop
sbb
mov
call
mov
lahf
lcall
and
add
adc
sarl
fstpt
cmpl
pop
mov
sbbb
or
cmpb
aaa
push
test
xor
mov
xor
push
jg
sbb
add
xor
adc
cs
add
jg
xor
or
loope
xor
inc
and
lock
add
sub
std
ljmp
mov
adc
outsb
cmpsb
push
and
adc
sbb
pop
ljmp
cmp
jbe
js
std
dec
nop
and
push
cli
inc
mov
push
sbb
scas
adc
sbb
andb
pop
and
xor
add
xchg
fisubrl
dec
mov
std
xchg
arpl
cvtdq2ps
xor
je
sbb
sbb
sub
and
incl
jg
das
and
mov
jl
push
adcb
mov
add
mov
fisubrl
sbb
sub
aaa
or
or
cmp
adc
xchg
push
cmc
jg
ret
mov
cmpsb
imul
and
and
xchg
aaa
adc
lcall
add
push
dec
subb
push
adc
or
push
cmpl
fistpll
adc
cmp
loopne
lret
sbb
adc
add
pop
dec
and
mov
sub
das
lock
mov
aaa
std
xchg
pop
pop
inc
sub
jae
push
inc
jg
cmp
in
mov
or
and
xchg
push
mov
insb
out
xchg
das
mov
push
bound
pushl
iret
pop
mov
movsl
jbe
and
and
imul
add
push
pop
push
mov
decl
call
jle
sbb
xor
add
lds
cmp
cmp
rorb
jbe
loopne
decl
insl
push
add
lock
insl
lock
mov
sbb
lcall
sub
icebp
outsl
sub
xor
push
dec
adc
xor
jle
cmp
in
mov
mov
std
incl
or
mov
jle
pop
xchg
aaa
js
sub
inc
jg
in
add
or
jno
prefetchw
pusha
xor
aaa
mov
popa
or
sbb
cmp
add
or
and
xor
faddp
inc
sub
cwtl
xor
cld
decl
adc
pushf
xor
sbb
js
add
ds
xchg
push
cld
aaa
andb
daa
mov
xor
push
js
sub
push
daa
sub
pop
jae
jp
inc
in
fwait
inc
adc
or
cld
or
sub
push
int3
or
adc
cmp
adc
add
cwtl
mov
stos
clc
adc
mov
sub
nop/reserved
push
or
add
push
push
mov
xor
jp
and
sbb
daa
cmp
lock
gs
cmp
sbb
inc
adc
rcl
ja
shlb
insb
aam
or
inc
mov
inc
inc
add
push
pop
shlb
or
sub
decl
adc
sbb
outsl
aam
sbb
or
or
jmp
xchg
mov
addr16
sub
ja
sbb
lods
sbb
push
mov
xchg
mov
inc
mov
pop
or
ja
ja
scas
loopne
sysenter
and
and
xor
out
ljmp
dec
sbb
inc
sbb
dec
cmp
or
cmp
sti
dec
das
pop
cmp
add
and
inc
das
xor
inc
mov
cmp
add
dec
mov
and
or
mov
out
cli
mov
idivb
mov
mov
and
sub
ja
xlat
sahf
push
pop
jne
cmc
cmp
mov
mov
mov
push
sub
pop
lea
add
sub
sub
push
push
xor
lock
lcall
addl
js
add
xchg
out
adc
adc
mov
fwait
add
and
sub
and
lcall
push
add
pop
pop
sbb
aaa
mov
ds
push
fistps
cld
add
sub
mov
push
popl
sbb
or
es
sbb
xchg
aam
push
in
fisubrl
ljmp
sub
adc
jno
sar
push
ds
ljmp
sbb
sbb
aaa
test
jg
add
push
push
inc
stos
xchg
out
adc
xchg
inc
sub
mov
rcr
divb
xchg
mov
pop
sbb
sub
fidivrs
das
and
out
jbe
or
xchg
or
mov
sbb
pop
xor
push
xchg
imul
inc
mov
and
adc
push
pop
add
out
in
mov
ljmp
jo
loopne
adc
imul
cmc
incl
or
lock
lcall
push
or
xor
mov
push
adc
cli
decl
in
into
lcall
add
invd
punpckhdq
pop
rorb
test
das
fisubrl
cmp
sub
lock
jne
cli
or
or
mov
rcll
mov
movsb
or
xor
call
fsubr
sahf
adc
or
or
lcall
hlt
or
les
mov
jne
jbe
push
pop
adc
dec
mov
clc
or
push
push
test
incl
pushf
shlb
or
adc
inc
or
or
cli
sub
add
ljmp
sub
pop
loopne
in
lds
add
push
orb
sub
shrl
call
push
out
imul
mov
cwtl
fwait
cmp
adc
or
in
add
xor
mov
ljmp
and
ficoml
mov
ljmp
test
int
mov
and
and
nop
and
push
inc
xchg
aam
pop
add
fildll
jp
push
cmpsb
cli
addl
add
data16
imul
mov
es
ljmp
test
mov
and
add
jne
inc
repz
add
push
sti
insl
jbe
add
and
add
pop
jl
add
jae
jle
pop
faddl
adc
scas
xchg
pop
sub
insl
std
ficompl
mulb
js
clc
or
std
jg
and
inc
outsb
pusha
cs
ljmp
or
rep
cmp
mov
lcall
jae
aam
cmp
in
jo
dec
add
cltd
xchg
mull
aaa
loopne
xor
fdivs
call
mov
adc
mov
gs
dec
sarl
xor
test
mov
decl
xchg
jb
pusha
mov
lock
dec
adc
and
fmul
or
lods
sub
mov
arpl
add
test
add
mov
in
add
push
or
jmp
nop
add
decl
les
push
push
sub
adc
jb
popa
outsl
scas
mov
adc
sbb
jne
inc
jmp
cmp
jmp
sbb
or
std
sub
or
clc
mov
jmp
push
sbb
or
addl
jne
jae
add
cmp
and
add
cld
jbe
mov
inc
push
ret
icebp
jne
jmp
ret
mov
xor
add
push
lock
icebp
icebp
add
jmp
mov
push
push
fcmovb
sub
mov
cmpb
jne
mov
mov
or
mov
or
mov
sub
sbb
mov
add
ja
mov
loop
cmp
je
and
inc
or
lea
lcall
add
push
ds
xchg
dec
add
add
in
fistpll
fmull
scas
push
sub
mov
add
jmp
imul
adc
sahf
std
mov
and
ja
add
mov
loopne
fstp
or
loop
cmovb
mov
add
mov
fmull
mov
scas
std
pop
call
aad
xchg
add
sub
sub
mov
popa
lea
push
jne
sub
jmp
addr16
add
imul
rcr
sub
adc
add
test
sarl
add
add
test
or
sbb
ror
or
leave
repz
or
add
push
pop
mov
and
loopne
test
int3
dec
adc
xor
dec
jl
pop
aaa
rclb
dec
push
mov
xchg
and
push
iret
dec
pushf
push
jo
push
sub
xor
imul
add
test
cmp
mov
mov
push
iret
repz
testb
or
jns
cmpsl
push
sub
push
sbb
push
loopne
mov
repz
and
cmp
push
dec
or
jl
dec
in
sahf
in
pop
ds
leave
aaa
mov
mov
cltd
dec
lock
pop
ds
leave
out
add
inc
cld
popa
push
repnz
dec
push
xchg
iret
nop
pushf
gs
add
call
and
pop
adc
popa
or
push
dec
sub
dec
sahf
sub
cmp
repz
add
ljmp
mov
mov
fsub
jns
iret
out
add
out
sub
sahf
out
sahf
push
icebp
js
mov
jns
hlt
lock
sbb
repz
shl
inc
imull
iret
repz
nop
stc
mov
out
or
cld
xor
pop
jo
out
incb
or
cmpsb
rorb
dec
sub
jl
add
dec
imul
es
add
outsl
loopne
dec
sahf
outsl
and
pop
dec
repz
enter
lock
inc
sarb
jnp
sbb
dec
mov
mov
inc
push
sahf
subb
jl
push
xchg
out
xchg
nop
pop
mov
inc
mov
cs
add
fwait
iret
loopne
mov
add
pop
fwait
pop
in
imul
add
int
mov
rclb
xchg
add
xchg
sub
and
and
push
shlb
add
leave
xchg
clc
enter
add
jns
xor
or
test
dec
or
fists
test
xor
leave
push
cltd
dec
cwtl
lods
dec
enter
ds
movsb
mov
mov
lcall
scas
adc
xor
iret
repz
subb
repz
or
push
leave
xorb
cmp
add
bnd
xchg
add
fwait
iret
inc
shlb
jmp
call
mov
stc
jg
or
repz
push
push
cmp
repz
or
add
cmpsl
pushl
or
pop
or
rcl
or
adcb
call
sar
clc
adc
push
rcrb
pop
and
dec
cmp
jo
fldcw
pop
aas
mov
or
add
push
js
sbb
dec
pop
push
cmp
pop
push
out
dec
fisttpl
xchg
and
cmp
js
insb
and
push
pop
xor
and
xor
and
push
ljmp
popa
orb
gs
xor
add
ds
adc
insl
bound
subb
jne
outsb
cmp
push
gs
sub
outsl
pop
xor
sub
insl
jbe,pn
cmp
outsb
imul
and
and
fwait
mov
and
add
dec
add
mov
xchg
push
arpl
push
inc
add
insl
and
or
dec
and
push
push
dec
fs
addl
and
add
fdiv
xorb
je
jg,pt
pop
mov
cmp
inc
jne
imul
mov
push
sub
je
push
add
sub
pop
push
jae
and
ja,pt
jb
jae
pop
shl
mov
and
pop
fsubrl
mov
and
mov
inc
sbb
ja
cmp
dec
ret
push
sahf
and
and
or
add
adc
dec
sbb
xor
cmp
xlat
into
aaa
test
insb
jae
shrl
adc
lods
rolb
jae
in
fmuls
cmp
scas
ljmp
push
daa
enter
mov
ret
pop
repnz
iret
jo
js
and
test
sub
repnz
enter
or
cwtl
adc
aaa
push
sub
cmp
in
mov
pop
testl
in
mov
in
ret
inc
push
dec
inc
dec
push
je
inc
mov
popa
fs
imul
fs
insb
add
fs
insl
fisubrl
pop
outsl
adc
int
popa
push
sbb
insb
jno
insl
sub
ds
lock
xchg
outsl
inc
sarl
jb
inc
neg
mov
ret
push
pop
nop
fs
push
jne
add
jne
add
xor
pop
add
jbe
jae
inc
push
add
imul
sub
sbb
fstpt
inc
inc
push
xchg
pusha
insl
add
push
dec
or
dec
rcrb
imul
popf
outsl
jo
push
outsl
jmp
push
add
add
pop
sub
in
cltd
sbb
pop
pop
into
xor
pop
pop
sub
adc
add
push
adc
repz
repz
and
and
add
shlb
scas
popf
out
xor
inc
push
push
push
or
inc
push
inc
jne
mov
mov
test
pop
add
and
jb
and
mov
mov
add
and
daa
add
sbb
lea
push
push
and
mov
or
inc
enter
mov
pop
add
add
cmp
rolb
sbb
dec
enter
mov
add
ss
or
add
incb
das
pop
mov
clc
aas
push
pop
lcall
dec
sahf
loopne
cld
add
pop
fs
jns
or
push
aas
jg
cltd
cmp
sbb
addb
jbe
in
or
sub
fwait
int
mov
dec
add
imulb
inc
add
psubb
sbb
add
push
out
lock
int
fwait
neg
out
cmp
mov
ja
add
loopne
lock
pop
xchg
lods
rcrb
clc
pop
push
aas
pop
mov
imul
aas
pop
xchg
addr16
lock
mov
xchg
int
push
pop
std
cmp
addl
push
inc
add
jle
rol
mov
sbbb
es
sub
jo
iret
rolb
jl
xor
incb
lock
pushl
leave
div
xor
push
add
nopl
in
aas
es
push
add
enter
nopl
into
push
add
mov
lcall
mov
daa
add
add
imul
mov
outsb
daa
add
push
or
pop
std
clc
sbb
insb
lock
aas
rcrb
outsl
jnp
mov
add
push
inc
pop
pusha
mov
popl
adc
inc
jb
add
loopne
insb
push
jnp
pop
sbb
fimull
nop
mov
add
push
xor
pop
mov
data16
adc
adc
jbe
pop
aas
nopl
adc
out
add
addr16
ss
cmp
cld
pop
cmp
fsubl
mov
stos
xor
xacquire
and
insb
js
xchg
std
or
jle
or
addr16
cmp
sub
inc
add
inc
subl
popa
push
pusha
xor
sbb
push
dec
inc
cmc
mov
sbb
or
jbe
fnstenv
cmp
lock
push
sbb
and
data16
sbb
or
test
push
insb
jno
shl
xchg
pop
sahf
push
pop
and
add
push
and
addb
and
adc
add
and
sahf
jae
testb
xor
add
mov
push
lcall
repz
in
pop
daa
sbb
cmp
in
fstpl
daa
and
xor
lahf
and
daa
and
mov
inc
cmp
clc
dec
push
dec
fdivrl
notb
andl
dec
push
push
nop
pop
aaa
stc
daa
cmp
daa
xchg
insl
xchg
int
push
sbb
lock
dec
addl
imul
scas
jnp
clc
push
cmc
sbb
ret
jb
test
add
mov
lahf
adc
invd
xor
cmp
inc
and
cmpl
cltd
stc
xor
in
jnp
movsl
daa
dec
sub
repz
jns
xchg
mov
repz
and
cmp
dec
sub
sahf
ret
imul
jbe
and
push
mov
inc
and
push
and
fcomps
and
cmp
jmp
imul
push
mov
push
fs
xlat
in
jnp
push
lret
push
and
xor
push
or
mov
xsavec
leave
xor
push
jne
cmp
and
test
adc
ret
aas
cs
or
sbb
cmp
shll
outsb
daa
inc
aad
xchg
or
dec
dec
pop
mov
mov
out
in
in
dec
and
cltd
js
mov
sub
ficompl
push
daa
add
daa
jge
inc
fadds
xor
mov
push
repz
pushf
es
inc
mov
xor
shlb
inc
arpl
daa
popa
jecxz
cltd
mov
daa
rcr
in
xor
arpl
add
daa
lahf
cmp
imul
in
cmp
push
fwait
daa
push
mov
out
imul
sub
out
sub
aas
insl
cmpsl
mov
es
daa
out
hlt
sahf
dec
add
jle
xor
sbb
push
sub
jecxz
cmp
pop
adc
roll
xor
in
loopne
imul
push
stos
movsb
enter
out
sub
or
daa
xor
xor
idivl
js
bound
es
inc
in
pop
rol
cmp
ret
fisubrl
aaa
shrb
push
sub
push
pop
add
outsb
adc
or
xchg
xlat
shlb
es
sahf
daa
cmpl
rol
dec
je
aas
es
js
call
insb
or
test
pop
lock
cmp
fsubs
movsb
inc
testb
pop
xor
dec
xchg
dec
xor
mov
xchg
xor
ja
das
pop
pop
and
xchg
ret
pop
jne
adc
cmpsl
fsubrl
or
sub
lcall
pushf
mov
or
loop
fwait
xor
loope
inc
daa
adc
daa
addr16
lret
fisubs
clc
or
sbb
xchg
fidivrs
vrsqrtps
dec
xor
dec
daa
dec
daa
dec
out
or
daa
clc
dec
or
dec
shlb
mov
adcl
rorl
dec
out
aas
sbb
push
pushf
or
push
aaa
mov
jo
xor
cltd
cltd
xchg
movsb
fsts
decl
push
push
jg
cwtl
xor
fsubs
repz
orl
cmp
mov
and
cmp
jb
sahf
jb
or
sbb
sub
es
fsubrs
daa
shlb
or
cmp
push
mov
lahf
adc
xlat
pushl
inc
sub
inc
jae
popa
jo
arpl
push
icebp
shrb
ljmp
stos
cmovbe
push
pushf
aaa
lock
jo
fstpt
repz
daa
cmpsl
aaa
jl
daa
and
cmpsl
test
jbe
in
lret
stos
sub
and
mov
pop
jbe
pushf
outsb
push
ficoms
jge
sbb
mov
xor
push
xor
daa
and
jae
jmp
xchg
add
inc
js
push
and
aas
subl
jp
push
adc
movb
or
sub
lds
sbbb
or
cltd
xor
cld
cmp
mov
xor
or
insl
stc
psubsb
out
xchg
jns
fsts
or
push
mov
fistps
xchg
pop
sub
mov
stos
dec
inc
push
inc
iret
xor
cmpsl
in
add
adc
push
js
sar
or
js
add
add
ret
mov
shl
call
mov
mov
pusha
mov
inc
adc
cwtl
mov
insb
or
xchg
mov
sub
loope
std
ret
xor
add
jmp
or
or
ret
dec
lret
fcmovnb
or
xor
cmp
ret
das
pop
mov
jo
out
decl
ja
or
aaa
ja
xor
ja
push
cmpsl
ja
repz
xchg
rolb
divl
cwtl
inc
xchg
ja
xchg
aaa
inc
nop
push
push
dec
int3
pop
out
int3
outsb
pusha
adcb
mov
incb
jb
into
mov
lock
int
cs
xor
out
in
pop
ja
and
in
dec
or
sbb
cltd
pusha
data16
xor
dec
adc
jl
push
out
dec
fs
psubd
test
in
subl
ret
pop
loop
jl,pn
pop
fistps
jo,pn
testb
xchg
adc
paddd
push
fisttps
pusha
add
push
xchg
pop
jecxz
jnp
fildl
jb
cmp
jae
ret
push
das
jnp
int
add
rorl
hlt
ret
push
gs
cs
or
jb
xchg
and
std
lcall
ljmp
ja
popf
xchg
xor
cltd
stos
stos
push
pop
jo
mov
das
cwtl
adc
stos
mov
das
mov
cmp
insl
sarb
push
sbb
lcall
xor
loopne
repz
mov
stos
adc
push
inc
sbb
cmp
lcall
loopne
fstl
push
lcall
addl
insw
fst
das
push
pop
clc
sbb
ret
mov
xchg
mov
cmp
setp
sbbl
sub
int3
lret
fwait
sbb
data16
aaa
in
in
loope
fsubr
scas
repnz
rcrb
stos
and
add
xchg
add
xor
adc
das
stc
mov
pop
faddl
sahf
push
addl
jl
adc
cmc
and
fs
pop
repnz
add
flds
lds
mov
xor
mov
and
and
aam
mov
fwait
loope
out
adc
add
push
lret
out
and
shlb
and
xor
add
out
lock
mov
or
scas
and
hlt
int
test
cs
fadds
xchg
pop
imul
and
jo
push
mov
mov
push
repnz
cmp
cmc
mov
out
outsw
sahf
fistl
cs
ja
movsb
aad
fstpl
and
add
pop
rcrb
xor
jo
cwtl
sbb
jo
adc
add
test
sbb
fcmovne
das
jl
cmp
scas
fistpll
pop
xor
xchg
jo
cmpl
mov
adc
fcmovnu
mov
mov
das
add
popa
ljmp
cltd
mov
inc
dec
xor
in
mov
das
add
jl
lcall
iret
xor
das
inc
inc
fs
aam
mov
mov
pop
inc
pop
and
bound
in
pusha
aaa
das
push
outsl
xchg
movsb
rcll
or
cwtl
mov
rorl
scas
aaa
sbb
cmp
mov
loopne
mov
cmp
sbb
sbbb
cmp
jle
cwtl
pop
jg
or
pop
and
sub
lcall
and
add
push
sbb
inc
cmp
insb
push
pop
push
inc
inc
inc
cmp
cs
pushl
inc
cmp
ds
pop
sub
cmp
xchg
out
jmp
sti
jmp
pop
cmc
lcall
sub
sub
push
and
and
aaa
pop
add
jg
sub
sbb
ds
dec
dec
pop
sub
sysret
adc
adc
adc
adc
or
pushf
sti
stos
inc
xchg
xchg
push
sbb
and
sbb
incb
dec
push
imul
addr16
mov
adc
into
xor
sub
aaa
sub
cmp
dec
lcall
mov
jnp
push
icebp
mov
sub
pop
sub
pop
and
pop
daa
lods
cmp
sub
mov
cmp
ds
das
inc
dec
adc
sbb
or
adc
and
lds
insb
sbb
das
push
and
dec
sbb
push
sbb
xchg
mov
imul
clc
incl
inc
pop
daa
cmp
cmp
fidivl
inc
jg
ret
ljmp
xor
xor
das
push
xor
pop
pusha
xchg
xchg
bound
inc
lret
in
mov
repnz
insb
jns
adc
and
sbb
push
jg
sbbb
and
inc
and
dec
daa
cmp
inc
push
es
or
adc
and
call
pop
lcall
cmp
cmp
xor
ljmp
aaa
pop
xchg
mov
insb
mov
dec
cs
pop
daa
cmp
xor
sub
xor
mov
xor
push
inc
sub
das
inc
dec
push
clc
ljmp
cmpsb
pop
test
inc
fcmovbe
jle
icebp
mov
and
xor
xor
es
jg
outsl
in
and
inc
and
cmp
es
sub
push
sbb
sub
ja
sub
or
sbb
and
subl
ljmp
inc
pusha
sbb
jne
mov
test
jle
sub
and
dec
and
and
jbe
sbb
dec
mov
push
call
sub
jl
inc
xor
dec
push
xchg
test
pop
icebp
jmp
ret
decl
mov
push
sub
pop
and
pushl
aaa
inc
and
dec
cmpsb
dec
fs
and
adc
test
pop
iret
call
push
jae
xor
lret
jg
push
jne
pushf
ret
test
adc
and
inc
sbb
and
sbb
sub
sub
sbb
sarb
mov
sub
nop
inc
inc
xor
dec
gs
mov
mov
mov
cld
mov
clc
sub
das
aaa
stos
xor
lcall
sbb
cmp
cmp
sub
dec
push
xor
push
sub
sarb
cmp
jg
out
shl
call
push
jno
cmp
mov
mov
push
outsb
fcmovbe
mov
and
sbb
cmp
xor
mov
pop
xor
xor
sub
adc
dec
movsb
mov
pop
cmp
popa
fucompp
ds
fcomps
mov
inc
pop
shll
inc
dec
pop
cmp
and
dec
mov
hlt
aaa
push
sub
push
and
inc
xor
es
call
aaa
cmp
stos
mov
rcr
frstor
lahf
cmp
jge
pop
in
sbb
jmp
test
xchg
mov
push
push
cs
adc
sbb
xor
sbb
stos
lcall
sbb
dec
push
sub
xor
sub
inc
pop
xor
ds
sub
clc
decl
cmp
mov
xlat
pop
fldcw
inc
sbb
in
lock
cld
xor
dec
sub
insb
inc
push
dec
mov
inc
dec
es
loopne
hlt
dec
and
call
xor
pop
push
push
pop
xchg
movsl
mov
dec
jb
xor
clc
fwait
mov
in
ss
imul
and
mov
inc
sbb
sbb
cld
push
adc
dec
jbe
sbb
bound
cmp
xor
call
sub
xor
xor
dec
push
push
jne
dec
mov
push
add
fucom
mov
lock
dec
adc
sub
sbb
sbb
dec
adc
mov
rcl
out
fiaddl
inc
mov
mov
mov
pop
add
adc
lcall
cli
fistpl
add
dec
jb
pop
sbb
dec
sbb
mov
jne
popa
xchg
sbb
inc
push
push
fcomps
pushl
test
sub
pop
imul
pop
fsub
pop
in
pusha
mov
lahf
jbe
jnp
adcb
pop
cmp
pop
and
push
mov
xor
dec
lock
mov
out
jae
cmp
ljmp
pop
mov
mov
mov
imul
pusha
sbb
push
xchg
mov
das
sahf
dec
sbb
cmp
push
andb
test
mov
push
sub
sub
jmp
cmp
imul
iret
lcallw
pop
mov
outsl
nop
sub
lcall
jo
cmp
inc
pop
jne
dec
and
push
aaa
add
or
push
cmp
fcomip
push
xchg
mov
imul
pushl
stos
aad
insl
xchg
mov
popa
mov
inc
orb
or
jmp
lret
xor
inc
je
push
mov
dec
jge
cmp
decl
sti
sbb
das
dec
sbb
push
sbb
push
sub
daa
aas
inc
dec
pop
dec
push
lcall
pop
ss
js
push
lcall
pop
subl
bound
pop
push
sub
aad
loopne
cld
cmp
dec
pop
xorb
sub
sbb
push
inc
cwtd
movsb
scas
xchg
jg
lret
pop
test
scas
or
cmp
jo
mov
pop
dec
jno
and
and
mov
push
jg
jg
add
dec
pop
inc
es
insb
adcl
adc
push
xor
pushl
je,pt
pop
fadd
xlat
fisubrl
dec
xchg
xchg
pop
dec
pop
incb
repz
inc
sub
xor
dec
aas
icebp
or
scas
pusha
jnp
aas
pop
jnp
fs
dec
decl
lods
lret
stos
shr
cwtl
rorl
dec
dec
fs
push
mov
mov
xor
scas
and
addb
sbb
decl
and
push
cmp
adc
cmp
insl
sbb
push
and
mov
inc
pushf
push
sbbl
inc
aad
lcall
mov
sub
mov
arpl
push
sarl
pop
pop
outsb
xchg
xor
xor
sbb
mov
test
pushf
loopne
fdivp
test
pop
ret
cltd
popa
andb
cmp
dec
orl
mov
push
jl
dec
jbe
dec
jb
lock
push
sbb
jmp
es
sub
es
out
jmp
dec
and
jg
lcall
sahf
mov
std
fwait
mov
cmp
subb
and
inc
dec
or
xchg
repnz
mov
push
rclb
xchg
lret
ljmp
sahf
insl
xchg
mov
js
data16
jnp
dec
push
inc
bound
mov
push
subb
and
loope
in
push
aas
cmpb
adc
xor
xor
jmp
inc
dec
and
cmp
in
out
lods
ror
mov
sbb
shrb
sbb
adc
cmp
cmpsb
outsb
mov
test
mov
inc
mov
scas
sbb
pop
std
xlat
cmc
call
lods
fisttps
pop
xor
jle
xlat
jae
xchg
lds
pushf
jmp
pushf
dec
jg
inc
jbe
inc
jb
cmp
popa
dec
jne
mov
insl
mov
push
and
loop
inc
dec
mov
cmp
iret
loop
leave
push
lds
rol
mov
push
xor
aaa
dec
inc
xorb
jae
bound
lret
out
lods
sarl
jg
cmp
pop
sbb
jge
data16
std
jp
mov
mov
cld
in
mov
repz
jmp
test
adc
sbb
jae
xor
pop
aaa
pop
mov
stos
add
test
lds
lcall
daa
ds
stos
rol
jg
ret
scas
push
into
aam
mov
mov
orb
dec
add
orl
mov
loop
mov
loope
nop
mov
pop
xchg
subb
lcall
fwait
lret
int
loope
hlt
pushl
fldcw
push
nop
and
and
gs
fbstp
sbb
pop
test
sub
inc
insl
popf
push
inc
subb
push
xchg
cmp
stos
dec
cld
jmp
repnz
test
movsl
mov
mov
shrl
inc
popa
mov
xchg
inc
ljmp
fldenv
push
mov
push
push
xchg
incl
mov
sub
xlat
mov
in
iret
in
sti
xorl
pop
aas
jne
fs
dec
sbb
jns
incl
mov
sub
cmpsb
push
xchg
jbe
into
jbe
rcll
lock
jle
das
push
xchg
inc
and
pop
js
fsubr
in
loop
mov
push
incl
fwait
mov
filds
mov
fsub
jmp
pusha
push
lcall
mov
insb
mov
xor
into
shr
stc
xchg
mov
jle
mov
loopne
mov
xor
and
pop
mov
inc
jno
ja
loop
add
aas
pop
and
arpl
outsb
lahf
incl
cld
sub
cmp
sbb
es
insb
and
jne
mov
fdivp
lock
in
sbb
xor
mov
roll
in
aaa
push
ss
jbe
ss
jg
shl
les
lret
in
mov
push
xchg
cmp
sub
mov
clc
clc
mov
hlt
outsl
mov
sbb
jb
popf
leave
es
mov
cs
andw
mov
dec
jnp
dec
pop
jg
outsl
cli
inc
push
popa
and
mov
out
rcr
mov
mov
cltd
mov
mov
call
mov
fdivs
shlb
mov
jno
jg
jmp
pop
adc
mov
inc
fs
jecxz
dec
mov
leave
call
sbb
and
inc
push
adcl
push
jg
xor
dec
outsl
mov
pushl
arpl
dec
jl
cmp
xor
jb
outsb
jl
dec
jbe
insl
xchg
int
out
xor
fucomi
lock
in
shr
in
lods
int
popf
mov
std
cmpsb
jg
mov
sub
mov
mov
pop
lcall
cmp
in
jg
jle
sub
push
cmp
lods
pop
mov
ret
fcomip
pop
and
jne
fstps
push
xorl
jg
shlb
decb
lea
lods
jns
movsb
jae
mov
in
neg
call
cmp
out
shr
jmp
loope
popf
rol
push
decl
popf
enter
dec
insb
lcall
jns
xchg
push
jbe
push
mov
mov
mov
and
lcall
inc
bndldx
jnp
enter
push
add
lods
scas
jbe
fstps
ret
fistps
xlat
out
cmc
in
icebp
mov
push
jge
cmp
xchg
mov
scas
iret
xlat
pop
incl
idiv
je
cs
mov
icebp
fildl
shl
in
into
jmp
subb
xorl
mov
movsb
inc
lcall
jno
xchg
pop
je
decb
lock
inc
je
es
pop
sub
and
push
adc
jg
fsts
cmpsl
fdivl
aad
ljmp
cmc
lea
fcomip
hlt
fsubp
popf
sub
lcall
inc
gs
xchg
mov
mov
outsl
lock
loope
sbb
aaa
outsl
xchg
mov
call
push
call
in
cmpsb
leave
rorl
lcall
lret
mov
mov
xchg
sahf
pop
jae
xchg
xor
add
pop
lea
pusha
push
pop
pop
xor
fdivp
leave
out
pop
mov
fucomi
pushl
in
iret
ljmp
mov
pop
jg
pop
jae
pop
jl
mov
pop
sbbb
or
mov
xchg
sbb
sub
xchg
rcrb
iret
call
in
lret
mov
call
or
fildl
bound
andb
xchg
sahf
inc
bound
call
std
cmp
daa
dec
jb
jne
and
mov
lret
and
add
scas
dec
push
jge
fucomi
jge
mov
mov
adcl
jne
data16
test
pop
add
pop
dec
adc
push
xor
or
xchg
mov
fdiv
test
lret
sub
in
pop
pop
cli
or
int3
imul
push
mov
sahf
jp
cs
ljmp
arpl
xor
and
sbb
inc
ljmp
sbb
sbb
cmp
xchg
in
xchg
stos
mov
pop
icebp
pushl
mov
sbb
mov
jp
pop
outsl
push
insl
jge
js
cld
jg
popa
jno
adc
pop
adc
push
nopl
adc
pop
cmp
int3
aad
repnz
adc
enter
cmp
cld
lea
sbb
jg
adcb
mov
int3
es
arpl
xor
xor
sub
sub
xor
sbb
cmp
mov
push
std
out
hlt
stos
ret
into
lahf
mov
adc
adc
or
adc
adc
popl
loope
or
jnp
push
push
mov
push
or
sbb
ss
pop
test
ds
leave
or
lcall
js
jno
insb
jge
insl
adcl
xchg
pop
jne
push
jo
dec
addr16
dec
pop
sub
sub
sbb
sub
pop
cmc
das
stos
cmp
adc
sbb
jo
loopne
push
add
push
lods
shl
movsl
fsubrs
mov
pop
jge
loopne
cs
nop
nop
jne
push
outsl
andl
lods
adc
xchg
outsb
orl
add
jb
jle
movsb
icebp
call
test
rorb
jbe
nop
cmp
pop
inc
popf
jne
jae
xchg
push
lea
jbe
sarl
mov
inc
aas
and
aas
sbb
cmp
lcall
jp
pop
xor
fsubr
hlt
mov
ret
iret
pushl
decl
xchg
outsb
mov
bound
fs
pushf
ja
daa
cmp
jns
sub
adc
mov
sub
mov
lock
xorl
scas
or
test
popf
jnp
cwtl
and
mov
in
pusha
sbbb
pop
daa
cmp
and
pop
and
mov
int
inc
and
xor
test
data16
idivb
cmpsb
ret
aad
stos
ror
lods
mov
clc
sahf
stos
insl
mov
add
bound
adc
sbbl
and
adc
call
push
push
sbb
add
loop
popf
mov
lods
mov
ret
mov
cwtl
movsl
mov
xchg
adcl
jl
xor
mov
push
insl
daa
cmp
push
sub
sbb
pushl
aam
push
and
adc
jg
aad
repnz
icebp
sbb
insb
xchg
mov
lods
lret
xlat
lods
int3
jbe
sahf
rcl
mov
lahf
insl
nop
lahf
pop
popf
aaa
jne
shlb
pop
imul
cmp
push
nop
push
sub
push
sub
add
sbb
xchg
ljmp
fcmovu
xlat
loopne
iret
fcomp
into
mov
lcall
pusha
mov
jge
push
jb
inc
fs
and
inc
sub
pop
or
push
pop
xor
dec
pop
adc
xor
sbb
sti
mov
jmp
xchg
mov
cltd
mov
stos
mov
pushf
cmpsl
sbbl
pushf
push
xchg
mov
aaa
push
xchg
inc
js
cs
adc
and
add
push
push
in
pop
incb
and
sub
out
repnz
in
out
mov
adc
mov
push
aam
xor
jae
mov
mov
cltd
mov
and
push
cs
pop
cmp
sub
push
pushl
mov
addr16
adcl
mov
lea
decl
rolb
jnp
cmp
and
pop
aaa
push
xchg
sbb
imul
jg
xor
repz
out
cli
sbb
cli
std
call
subl
mov
jb
xor
xor
xor
aaa
pop
jp
jno
cmp
dec
jp
dec
jb
dec
fdiv
cwtl
and
sbb
push
incl
cld
jg
or
push
js
int
mov
pop
mov
mov
jb
fwait
icebp
lcall
dec
outsl
movsb
xor
pop
mov
pop
and
outsl
sbb
xor
adc
adc
lock
xchg
pop
out
cli
cld
out
clc
mov
in
cmc
aam
test
icebp
mov
mov
popf
outsl
clc
out
xchg
loopne
push
outsb
dec
imul
xor
add
clc
decl
stos
insb
cwtl
mov
cmp
pop
sbb
and
mov
icebp
inc
push
push
inc
ja
imul
nop
mov
cs
jp
and
jne
push
sbb
arpl
out
nop
lock
pop
sbb
and
adc
inc
adc
or
mov
cld
jbe
sti
fcomi
stc
shr
jmp
push
shr
icebp
shl
ljmp
andb
xor
daa
dec
imul
pop
jo
xchg
mov
scas
rcrl
mov
push
outsl
and
push
sbb
sub
mov
test
frndint
jmp
lds
stos
cmp
pop
cmpb
repz
sub
daa
dec
mov
sub
and
push
rclb
and
pop
sub
idivb
pop
lock
cld
repz
std
clc
sti
add
adc
sti
std
inc
call
icebp
clc
mov
ljmp
cwtl
mov
test
shll
cmpl
cs
int
ja
sub
and
inc
or
add
lcall
jecxz
test
ds
scas
fistps
out
je
sbb
or
das
pop
sbb
inc
sbb
push
test
hlt
push
sbb
sub
or
out
icebp
std
adc
stc
or
cld
lods
orl
sti
in
out
inc
or
stc
mov
iret
mov
fcomp
inc
add
loope
scas
lret
jg
dec
pop
icebp
mov
xchg
mov
mov
icebp
jp
aad
jb
jo
inc
gs
dec
sub
pushl
push
mov
push
cmpl
adc
pop
add
and
pop
mov
cmpsb
subb
in
lock
repz
incl
testb
cmp
push
out
stc
sti
out
cmp
out
repnz
mov
jmp
cmc
mov
mov
cs
push
pop
cmp
sbb
mov
mov
ret
cmp
xchg
jecxz
filds
inc
outsb
sbb
and
lahf
daa
dec
jl
insb
and
fsubs
jb
sbb
dec
add
sbb
inc
sbb
in
stc
fidivl
cli
and
add
repnz
icebp
shl
and
adc
stc
jmp
cli
cmp
push
mov
call
enter
hlt
divl
sub
pushl
cmp
sub
adc
mov
sub
dec
jge
loop
push
jp
jg
daa
cmc
incl
sub
push
cmp
sbb
pop
sbb
push
sbb
mov
pop
or
aaa
pop
push
cmpsl
lods
orb
and
js
adc
icebp
adc
jmp
ss
out
std
cmp
in
icebp
call
cli
fsubr
out
hlt
jg
add
xchg
stos
into
mov
lds
in
dec
decl
inc
pop
jae
push
outsb
cmp
xor
sub
and
sbb
sbb
cmp
popa
xchg
mov
push
jecxz
fcoml
sbb
pusha
outsb
push
push
ss
and
sub
addl
ljmp
js
dec
adc
nop
out
jg
std
in
ds
clc
xchg
fwait
xchg
test
mov
lahf
mov
loopne
push
aam
loop
xchg
stos
pop
sbbl
jnp
outsl
xor
mov
push
push
dec
sbb
inc
sbb
and
mov
decl
aas
imul
pop
sbb
push
sbb
dec
mov
push
lret
push
sub
pop
out
mov
idiv
ljmp
mov
in
add
or
div
push
loopne
pop
mov
mov
into
lret
lret
push
hlt
rcrl
je
mov
ja
push
outsl
mov
dec
push
push
insl
orl
ljmp
dec
sbb
xor
and
pop
sbb
push
sbb
dec
sbb
inc
sbb
dec
dec
dec
and
xor
call
jecxz
xchg
sbbl
push
inc
dec
or
out
fldl2e
in
fiaddl
ret
out
adc
out
cli
gs
ljmp
pop
jmp
lea
jns
dec
outsl
test
jl
imul
js
dec
add
pop
dec
sbb
in
push
xchg
test
jbe
pop
cmp
cmp
and
sahf
ss
sub
loop
inc
aam
shl
clc
out
dec
sti
push
iret
fbld
jmp
cld
jmp
inc
sti
jmp
in
fsub
in
fucomip
clc
icebp
jecxz
loop
sub
or
cs
pushf
rcrl
sahf
pusha
jo
jne
jmp
pop
jns
push
push
cmp
mov
cmpsb
push
mov
inc
cmp
pop
das
mov
test
call
sub
push
and
adc
sbb
jl
inc
adcl
pop
lcall
or
pop
incl
jmp
fs
add
push
and
insb
jmp
adc
add
add
pushl
incl
dec
inc
dec
jl
or
cmp
adcl
inc
xor
sub
outsb
add
mov
or
xor
xchg
lcall
add
xorl
xorl
sub
jmp
add
xchg
adc
inc
and
and
mov
add
sbb
and
incl
ds
inc
call
adc
dec
faddl
or
inc
incl
push
and
call
jmp
adc
add
add
fdivr
push
and
fdivrp
loopne
or
in
insb
dec
and
call
sub
out
push
and
push
daa
ss
pusha
add
xchg
jle,pn
push
ds
ljmp
inc
add
test
addl
adc
sbb
lcall
lcall
push
adc
sbb
push
jmp
xor
or
and
or
cmpsb
inc
pop
ljmp
jmp
xor
sub
inc
inc
inc
mov
xorl
xor
popa
popa
push
mov
push
xor
addr16
cmp
idivb
incl
shlb
inc
incl
and
or
or
decl
dec
dec
and
dec
call
daa
or
iret
xorb
sub
cmp
and
int
pop
xor
cmp
pop
cmpsb
ss
add
adc
call
adc
push
popa
test
push
js
pusha
add
jl
aaa
push
xor
aaa
addl
cmp
testb
mov
sub
cmp
or
test
andl
push
inc
scas
sahf
incl
or
popf
cs
ljmp
inc
stos
ljmp
sbb
mov
es
mov
cmp
cmp
int
or
push
cmp
or
and
mov
and
inc
jg
sbb
aam
testb
outsb
adc
add
fiadds
jle
inc
adc
sbb
es
andl
push
ljmp
in
ss
and
mov
or
es
add
pop
mov
push
xor
dec
pop
push
mov
add
mov
es
xor
rorl
inc
test
call
xchg
rcrl
cmp
jmp
cmp
or
adc
inc
test
xor
pushl
push
or
sub
inc
lcall
incl
test
sbb
imul
push
call
adc
pusha
cs
push
and
sub
mov
rcll
pop
push
dec
pusha
test
sub
test
mov
ljmp
ljmp
xchg
pop
mov
xor
outsb
adc
pop
push
or
mov
jle
mov
ds
cmp
test
and
jg
push
or
cwtl
pushl
test
lcall
push
and
jmp
test
inc
push
test
fdivr
lods
sub
ss
sub
sub
mov
inc
jo
ss
push
mov
lods
sub
incb
mov
into
adc
test
ret
decl
mov
enter
pop
or
dec
ljmp
add
mov
pushl
mov
inc
jl
adc
push
mov
add
inc
adc
jg
test
inc
hlt
ljmp
test
mov
cli
adc
add
cmpsb
dec
lcall
lcall
push
xchg
fiadds
decb
jo
addb
and
mov
sub
push
sub
sbb
push
sbb
imulb
jmp
mov
or
incl
shlb
sub
sub
and
sub
cs
adc
xor
ret
out
cs
cmp
and
sbb
sub
or
sbb
inc
divb
push
xchg
and
jg
je
sbb
pop
incl
xor
je
sbb
and
shlb
cmpsb
cmp
push
ret
or
xchg
xchg
les
inc
clc
stos
popa
pop
sub
sbb
dec
jbe
and
mov
cmp
xchg
xchg
idivb
sbb
xor
scas
jne
ljmp
shlb
xchg
mov
push
push
lcall
lcall
inc
push
push
adc
xchg
cmc
in
cmp
inc
push
jle
and
adc
movsb
testb
je
and
mov
mov
shlb
or
inc
inc
popa
sbb
add
cmp
test
dec
movb
dec
sub
mov
xchg
call
push
sub
fcmovu
and
mov
inc
call
call
cmp
sub
out
push
mov
inc
xchg
and
push
decl
inc
rcrb
push
cli
shlb
add
mov
adc
add
push
movb
ss
loop
xor
ljmp
sub
andb
sbb
and
jmp
sub
mov
insl
and
xchg
cmp
push
jle
push
into
xor
adc
and
pusha
add
cmp
xchg
and
xor
adc
inc
test
rcl
and
inc
jmp
adc
xchg
sahf
call
mov
adc
and
xchg
jbe
mov
push
and
push
orl
adc
inc
sbbb
jg
mov
xchg
dec
jbe
inc
and
inc
into
jp
mov
incl
push
aad
test
jne
insl
and
mov
scas
imul
mov
xor
adcb
ss
or
lcall
hlt
das
mov
push
and
sub
cwtl
dec
mov
push
push
push
lods
xchg
and
pushl
pushl
mov
sahf
mov
mov
inc
cmp
cs
xor
push
adc
inc
inc
call
fmul
xchg
and
inc
das
jle
jle
adc
inc
inc
jmp
jmp
incl
push
and
jmp
pushl
or
ljmp
out
push
cmp
inc
subb
xchg
mov
dec
push
cli
dec
sbbb
aas
inc
das
fiadds
push
rorl
inc
xchg
add
push
int
cwtl
push
or
aaa
xchg
shlb
dec
push
call
xor
dec
inc
call
call
xor
shlb
lcall
push
xchg
loopne
dec
push
xchg
xchg
cmp
push
and
or
xchg
dec
outsb
pushl
and
xor
ss
mov
xor
cmp
adc
outsb
test
inc
pushf
sar
js
cwtl
dec
notb
xchg
push
and
push
adc
outsl
faddp
jl
dec
pop
jle
jo
push
cmp
pusha
push
xchg
sub
fs
cmp
adc
cmpsb
sub
insb
and
or
inc
jo,pt
cwtl
add
mov
xor
frstor
lcall
fwait
push
adc
and
add
into
and
or
mov
jbe
jbe
push
dec
andb
mov
or
cs
test
jne
sbbb
data16
mov
gs
mov
dec
inc
mov
loope
xor
cmp
mov
sbb
add
xor
out
adcb
push
inc
cs
add
xor
sarb
adc
sbbl
mov
dec
pusha
inc
cwtl
add
push
outsb
inc
enter
jle
inc
rcrb
inc
mov
cld
test
or
dec
xchg
fiadds
incl
add
dec
test
stos
push
decl
ljmp
decl
push
jmp
call
call
call
cmpsb
bound
dec
xor
sbb
gs
xor
push
push
adc
dec
and
andb
ljmp
cmp
push
cs
xor
ss
cmp
dec
test
stos
cmp
cmp
dec
rcll
mov
popa
inc
mov
test
push
mov
pop
shll
je
test
shl
fisubs
and
scas
mov
push
ret
push
mov
call
stos
test
jo
jb
inc
orl
push
push
adc
add
push
inc
push
in
push
stos
dec
jle
cmp
cmp
and
xchg
inc
mov
test
mov
push
add
nop
jle
daa
pop
push
orb
xchg
inc
push
sub
sahf
sub
mov
pop
push
out
cmpsb
push
ret
jg
scas
mov
sub
mov
dec
test
stos
mov
and
jge
call
scas
add
enter
bound
call
push
or
call
decl
push
inc
xchg
aam
push
push
sbb
ficompl
jne
xchg
and
out
loopne
dec
adc
xorl
sub
ljmp
fisubs
xor
dec
and
hlt
jbe
js
adc
clc
fmull
cld
mov
data16
and
mov
negb
call
mov
sbb
cs
push
in
cmpsb
nop
dec
and
adc
lcall
xor
or
jmp
xor
push
xchg
lock
cmp
inc
xchg
pusha
jae
cmp
gs
jle
rcll
scas
cmp
mov
dec
pushl
xchg
dec
xchg
scas
inc
dec
pop
bound
push
mov
and
cmp
inc
xchg
pop
lcall
lods
shlb
push
orl
jg
mov
popa
scas
xchg
outsb
js
fmulp
and
jle
mov
push
xorb
test
shrl
decl
adc
shl
mov
mov
mov
xchg
incl
test
aas
dec
push
in
mov
inc
sbb
inc
xchg
mov
enter
addr16
sbbb
stos
push
movsl
mov
jle
add
pop
mov
outsb
xchg
loopne
jo
incb
mov
mov
mov
mov
pop
sbb
jmp
jg
in
dec
push
ds
cmp
incb
fidivrs
sbb
loop
push
push
xchg
shlb
mov
in
out
adc
mov
mov
hlt
xchg
clc
push
xchg
and
int
sahf
jle
add
adc
testb
fidivs
je
test
push
or
adc
push
call
pusha
jb
sbb
addr16
or
inc
mulb
lcall
push
pop
rolb
jle
mov
nop
xor
push
xor
notb
or
xchg
es
ds
adc
xchg
mov
add
mov
push
sub
dec
decl
mov
dec
cwtl
incb
push
call
inc
rcl
push
push
pop
incl
into
xchg
ljmp
clc
adc
bound
push
dec
inc
into
ss
push
sbb
ljmp
dec
sahf
lcall
push
inc
push
or
jp
loop
mov
incl
inc
cmpb
mov
sbb
add
jae
pushf
lcall
mov
sub
mov
and
test
dec
decl
test
lods
ljmp
jo
sub
mov
mov
or
mov
sub
or
inc
xchg
outsl
cs
sub
dec
push
xchg
xchg
adc
jle
arpl
and
adc
rorb
xor
rorl
mov
fiadds
adc
es
out
inc
popa
inc
jg
jmp
out
or
cmp
stos
add
mov
test
or
add
adcb
or
dec
push
add
push
sub
call
fisttpl
or
jbe
shrb
sbb
sbb
jbe
adc
test
jmp
or
lcall
add
mov
mov
pop
lea
cltd
outsb
xor
xor
fldenv
cmp
cmp
call
fadds
inc
incl
push
mov
jle
inc
jg
sbb
mov
push
xor
pop
scas
mov
inc
mov
jmp
sbb
scas
push
cmpsb
and
shrb
xor
pushl
jb
rorb
ds
pushl
mov
jle
andb
inc
incl
mov
shrb
pop
xchg
mov
outsb
nop
decl
mov
mov
mov
lcall
addl
icebp
jg
out
lods
lret
sub
jo
pusha
cmpsb
jg
sahf
fsub
shrb
pop
movsb
push
mov
mov
scas
inc
inc
rorl
adc
push
es
fwait
popa
lret
dec
decl
ret
sub
into
xor
lea
stc
lods
ret
push
faddl
lea
xor
lea
inc
popa
pusha
jle
out
shrb
cwtl
test
in
mov
mov
dec
xor
hlt
xchg
push
out
mov
inc
call
push
movb
sarl
jg
push
mov
cmpsb
movsl
push
sub
sbb
sbb
or
and
inc
lds
and
es
inc
movsl
loopne
sub
sub
dec
shll
xor
xor
xor
mov
or
cmp
test
add
pop
ljmpw
sbb
push
or
movsl
push
inc
incl
stos
cmp
jbe
mov
mov
lods
push
or
jbe
decl
pop
out
test
sbb
mov
or
xchg
push
into
xchg
movsl
xor
push
data16
mov
xchg
inc
pushl
movsb
sahf
mov
or
movsw
and
push
sbbb
push
add
gs
mov
jbe
decb
xchg
push
mov
out
xchg
inc
push
sub
push
sub
xchg
or
jle
movsb
sbb
aam
adcl
lea
dec
shrl
jns
inc
movsl
mov
push
or
push
pop
mov
sub
adc
pop
jbe
mov
dec
loope
inc
jg
mov
adcb
gs
sub
fdivr
fdivrp
xchg
xorb
into
jge
out
or
pop
cs
ljmp
pop
push
sub
adc
lcall
jbe
adc
add
dec
inc
push
loope
scas
xchg
jle
mov
push
cs
ss
in
or
or
pop
or
adc
cmp
cmpsl
pusha
xchg
imul
ficomps
jbe
popf
inc
jmp
jmp
dec
sub
pushf
inc
cmpsl
shlb
ss
cmp
adc
sahf
mov
dec
mov
jnp
popf
ret
inc
incl
dec
call
jae
dec
xor
fdivrs
and
push
out
sub
loope
dec
pop
sub
je,pt
incl
jmp
jb
add
adc
pop
unpckhps
addr16
subb
jns
jae
divb
adc
push
cmpsl
jmp
xchg
adcl
sub
ljmp
jo
cwtl
cmpsl
pusha
sbb
jge
push
xorb
jne
sub
movsb
jmp
leave
test
mov
dec
popf
andb
inc
mov
mov
subb
or
pushf
mov
push
xchg
mov
jmp
inc
cmp
test
dec
push
leave
sub
jne
push
into
lods
mov
xchg
inc
fcmovnb
out
fadds
sbb
push
call
loop
push
sbb
mov
mov
sar
outsb
jns
pushl
test
sbb
push
jmp
incl
fidivs
inc
pusha
adc
push
push
mov
cmp
push
and
add
pop
mov
decl
xchg
lcall
push
mov
incl
pop
sub
jmp
xchg
loopne
add
mov
mov
jle
into
andl
pop
xchg
pop
xor
into
mov
out
cmp
or
push
adc
pop
xor
mov
inc
jg
es
mov
popfw
push
inc
sub
or
pop
lcall
mov
dec
mov
mov
es
into
and
and
mov
and
pusha
data16
test
inc
mov
js
push
sbbl
jl
mov
add
pop
adc
push
mov
incl
decl
add
pushl
mov
cwtl
xchg
push
sub
or
fisubs
mov
into
jb
loop
sub
cmp
mov
or
inc
mov
mov
adc
adc
lds
sar
lods
mov
movb
mov
cwtl
cmp
out
mov
push
movsl
cmp
or
fdivr
or
jmp
inc
sub
fdivrp
loopne
jl
mov
sar
push
add
sub
scas
cmpsb
xchg
inc
sub
es
push
nop
repnz
sub
lods
inc
mov
idiv
mov
push
push
dec
ret
cmpsb
cmpsb
push
cli
pop
and
or
add
push
jg
inc
mov
adc
push
inc
sub
or
lcall
pop
push
negb
mov
testb
es
cltd
sub
inc
into
push
adcb
xor
int
pushl
jle
int3
inc
mov
push
cmp
cmp
mov
inc
lcall
popa
push
lcall
pop
cmp
ss
ss
lcall
scas
sbbl
dec
add
pushl
dec
pusha
scas
cwtd
pop
ds
push
mov
pusha
jmp
sub
or
xchg
mov
mov
pushl
out
xor
lcall
int3
inc
mov
incl
pop
push
xor
dec
push
inc
fwait
test
mov
and
xor
int
call
xchg
lret
sub
jbe
cmpsb
shrl
pushf
cmpsb
adc
xor
mov
int
mov
jmp
xor
ljmp
int3
inc
ljmp
inc
ss
mov
push
inc
outsb
ss
jbe,pt
out
push
cwtl
test
aaa
ret
pusha
push
inc
scas
jg
test
aam
call
ficoml
loope
add
add
scas
sbbl
xchg
pop
cmp
in
out
pushw
lcall
sub
xchg
mul
shrb
aad
sbb
cld
decl
aad
mov
incl
pushl
sub
jle
push
mov
push
or
mov
dec
sub
push
push
outsl
dec
mov
jle
aad
cmp
in
lock
xchg
push
and
push
and
sbb
decl
sbb
call
test
cmpsb
push
or
mov
inc
mov
mov
inc
pushl
decl
dec
cmp
ret
pop
call
jge
dec
sub
test
int3
sub
push
ficomps
sub
xchg
pop
pop
es
pusha
dec
sub
fs
or
inc
jmp
push
sub
push
pop
mov
ss
jb
sbb
xchg
add
xor
or
jle,pn
cld
shrb
cmp
or
sbbb
jg
inc
mov
adc
jbe
push
or
pushf
jbe
shrl
out
mov
mov
test
mov
subl
imul
shll
mov
inc
xchg
push
ss
out
mov
add
mov
xchg
inc
sub
orb
and
lret
fiadds
push
or
call
scas
cmpsb
push
lods
sahf
cs
sub
je
push
or
mov
push
add
sbb
loop
sub
jg
test
hlt
mov
sar
push
test
jnp
cmc
push
push
icebp
outsb
mov
incl
push
mov
or
inc
pusha
xchg
pop
or
outsb
push
fists
mov
sub
push
lcall
je
mov
ds
sbb
subb
out
clc
push
fsubl
and
sbb
outsb
mov
xchg
scas
faddl
mov
xor
out
mov
out
and
pop
rorl
andl
pop
outsb
inc
xchg
inc
mov
jle
adc
mov
jbe
push
push
dec
idiv
push
or
lahf
pop
push
loope
bound
sti
in
push
out
pop
pop
or
push
push
loopne
outsb
loope
pushl
mov
je
jbe
scas
mov
popa
xchg
and
mov
inc
mov
incl
outsb
inc
mov
xchg
mov
test
mov
call
mov
call
dec
or
push
cwtl
or
roll
sbb
pushf
push
mov
mov
xorb
cmpsb
cmpsl
loopne
inc
jg
lock
pop
repz
testb
or
or
dec
mov
sar
push
mov
aam
sub
fmuls
mov
cs
sbb
mov
mov
mov
call
in
scas
and
outsb
shrl
hlt
lods
outsb
mov
dec
int
mov
iret
cld
jbe
xor
adc
and
mov
stc
das
add
sbbl
fdivr
pslld
icebp
pop
ds
inc
pop
sub
mov
bound
xor
xor
or
cmp
cmp
test
out
jle
inc
adc
inc
incl
or
mov
dec
mov
jg,pt
daa
inc
mov
add
push
call
bound
lcall
je
mov
pop
xor
mov
push
sahf
push
push
adc
or
jmp
ds
pop
pop
icebp
outsl
or
clc
sbb
cmpsl
push
and
or
xchg
xor
mov
call
adcb
adc
or
sahf
push
mov
jmp
cmpsb
ljmp
sbb
or
push
lds
push
cmp
mov
and
and
mov
dec
and
pusha
ds
adc
ret
out
push
push
inc
adc
testl
cmp
pop
pop
popw
ds
pusha
xchg
es
in
jmp
loopne
fdivp
decl
or
add
jg
cmp
mov
movb
add
scas
adc
or
add
ss
ret
or
mov
punpckldq
scas
xor
and
inc
xor
sbb
sbb
aaa
stos
popa
and
push
dec
dec
lcall
es
jg
push
dec
stos
add
ss
dec
std
lock
pop
jbe
cli
clts
in
sahf
or
pop
cmpsl
jmp
dec
das
mov
call
and
mov
push
call
push
decb
pop
call
sbbl
or
mov
push
dec
push
inc
or
out
inc
loopne
lret
jo
xchg
push
mov
push
ja
mov
push
loopne
test
subb
or
test
inc
pushf
daa
js
jecxz
xchg
in
rcr
pop
push
pop
fiadds
mov
inc
pop
mov
scas
fiaddl
sub
pushl
les
push
mov
xor
inc
scas
lcall
inc
call
mov
enter
jno
inc
rolb
sbb
adcl
aad
mov
and
sahf
and
xor
cmp
cmp
ss
out
loop
sbb
idiv
mov
adc
jmp
mov
das
jmp
lret
push
mov
out
fucomip
clc
xor
loopne
fsubp
xchg
scas
push
xorb
cmp
add
xchg
inc
add
sub
push
adc
xchg
cs
test
pusha
xchg
inc
pop
sub
pop
popw
das
mov
pop
jl
sub
push
push
and
cmpb
adc
push
rolb
dec
mov
sub
mov
add
xchg
add
or
add
sub
inc
add
push
add
dec
or
cmp
mov
jl
gs
dec
sbb
int3
rcrb
jb
lcall
add
add
add
inc
cmpsb
icebp
add
jae
lcall
addr16
inc
test
bound
and
push
or
fiaddl
sub
push
js
std
inc
jo
push
es
and
test
or
add
jg
sbbl
or
xor
mov
push
inc
push
jb
sub
xor
fldl
sub
rolb
cwtl
dec
jo
mov
push
fisubs
adc
sahf
idivl
ja
push
jne
jo
pop
dec
mov
mov
neg
neg
outsl
sub
add
jnp
mov
out
mov
bound
sti
mov
addr16
jne
popa
xlat
rcr
jo
mull
xlat
insl
add
mov
fisubrl
arpl
push
insl
xchg
daa
push
mov
gs
insl
and
pusha
and
insl
push
jbe
lahf
inc
mov
fwait
adc
out
and
sbb
shll
push
sub
mov
push
outsl
push
sub
mov
push
or
dec
arpl
adc
fs
cs
push
mov
jg
mov
push
addr16
add
fcomps
mov
or
mov
sub
jne
aaa
arpl
or
mov
dec
and
mov
mov
ret
add
out
sarl
add
pop
es
je
sbb
or
mov
stos
push
mov
adc
jp
loopne
push
xchg
bound
inc
xor
inc
jmp
gs
outsb
cmpsl
shll
push
or
inc
xchg
negl
dec
scas
insl
mov
dec
and
jecxz
add
and
mov
insb
adc
jbe
fs
or
sbb
mov
or
push
push
loope
out
dec
pop
mov
xor
test
mov
add
outsl
lds
pop
mov
shlb
add
popl
outsb
pop
or
jae
push
mov
scas
stos
cs
inc
shrl
fs
aas
mov
xor
js
fadds
pop
out
fcmovb
ja
jg
adc
bound
xorl
or
fnstcw
dec
out
and
insl
adc
cmpsl
mov
push
adc
push
pop
xchg
mov
sbb
jne
jb
arpl
subl
ror
je
daa
pop
fmulp
imul
cmp
dec
das
pop
cli
shlb
imul
or
popa
mov
add
push
loope
mov
aaa
bound
ret
stos
out
pop
pop
jae
js
jo
jmp
arpl
sub
push
daa
das
xlat
push
xor
push
xor
fdiv
outsl
pop
pop
ret
insl
sbb
pop
xor
insb
sbb
outsl
pusha
push
pusha
xor
mov
jb
push
lods
xlat
and
je
lea
mov
daa
rcrl
stos
sub
pusha
movl
push
cmp
inc
sub
pop
divb
fildl
mov
loopne
shll
ja
mov
aas
mov
add
inc
sbb
mov
pop
sbb
pop
imul
dec
pop
jae
test
mov
outsl
mov
pop
xchg
pop
stos
or
mov
repz
jl
stos
insb
push
mov
xchg
mov
xchg
test
mov
adc
stos
sbb
and
cmpsb
add
inc
in
call
test
popa
pop
cmpsl
cmp
dec
sub
mov
mov
pop
mov
mov
push
or
arpl
jbe
mov
sbb
arpl
pop
cmp
insb
enter
mov
vpextrw
popa
push
out
xor
mov
dec
adc
or
nop
bound
subl
mov
add
and
inc
sbb
and
lahf
pop
inc
shll
mov
xlat
fistps
sub
push
fisubl
mov
scas
sbb
adc
mov
inc
aaa
aad
mov
fs
pop
add
and
fstpt
outsb
sub
mov
mov
outsl
repz
adc
popa
addr16
add
push
pop
lret
gs
cmp
jae
lret
filds
jecxz
and
daa
adc
jno
ret
loopne
pop
xchg
aaa
jne
and
mov
sub
sub
xchg
jae
lahf
push
jo
jge
mov
sbb
movq
mov
pop
pop
in
and
inc
pop
outsb
jae
push
add
ret
cmpsb
add
push
push
xchg
stos
cs
push
aas
jecxz
xlat
insb
lds
jae
jnp
mov
sub
xor
adc
push
mov
aaa
and
and
es
inc
jg
repz
sub
lret
cmp
push
push
arpl
pop
xorb
fwait
jns
scas
mov
sti
xor
add
push
subl
stos
fsubrs
addl
fmuls
call
insl
pop
pop
and
cmp
mov
outsb
out
pop
inc
xchg
scas
or
sbb
pusha
jae
xchg
pop
imul
imul
sti
adc
addr16
add
cmpsl
imul
sub
stos
inc
sbb
add
adc
and
inc
leave
jae
push
xchg
stos
push
or
scas
or
xor
mov
imul
sbb
mov
sub
roll
dec
out
outsb
pop
stos
adc
arpl
jae
sbb
inc
push
mov
outsb
jae
dec
in
dec
sbb
pop
outsl
xor
movsw
arpl
addr16
sahf
imul
lcall
and
xlat
mov
add
dec
lea
iret
jae
mov
fsubrl
lret
daa
cmp
mov
dec
xchg
xchg
mov
push
push
mov
ss
cs
push
jg
arpl
mov
and
cmp
testl
push
sbb
repnz
and
mov
imul
pop
push
push
push
mov
mov
mov
in
mov
and
out
test
shrl
push
sub
xor
mov
push
loope
dec
inc
fildll
or
scas
sub
insb
inc
sbb
faddl
adc
cs
sbb
inc
adc
insl
addr16
sbb
add
mov
pop
adc
mov
jg
imul
daa
sti
jne
inc
inc
push
push
inc
repz
rcrb
sbb
loope
repnz
add
data16
pop
adc
mov
or
fdivl
ret
aas
iret
inc
les
or
pop
fisubs
jb
push
mov
and
push
das
test
sub
jnp
shll
push
mov
call
dec
addr16
addr16
cmp
or
sbb
cmp
jnp
xchg
add
mov
loop
mov
inc
dec
inc
bsf
adc
xlat
jo
ret
repz
xchg
out
jb
inc
outsl
pop
or
jbe
or
fisttpll
rep
rcpps
out
adc
andb
adc
push
mov
arpl
mov
aas
push
arpl
insb
lret
jae
fsub
movsl
fs
mov
outsl
jne
daa
daa
pop
mov
and
sbb
sub
push
test
jp
inc
cmp
or
adc
outsb
subl
rorb
loope
cmp
xchg
retw
mov
sti
add
cmpsl
xchg
mov
movl
psadbw
loop
add
unpckhps
mov
rolb
test
pop
sti
sbb
sub
adc
and
dec
or
sub
xor
in
and
push
je
sbb
add
cwtl
sbb
cmp
lods
sbb
das
sti
jmp
add
add
mull
sbb
adc
jno
mov
je
or
nop
or
lds
push
gs
dec
inc
ja
lods
aad
dec
mov
sub
mov
or
jnp
pop
or
fwait
das
mov
addl
ljmp
pop
jp
mov
jle
outsb
fs
jbe
sub
push
lret
fidivl
xchg
imul
call
xor
stos
stos
dec
xor
fs
lds
xor
sbb
pusha
ja
xor
xor
sbb
push
dec
dec
xchg
mov
and
das
and
xchg
scas
cmp
test
ret
and
divb
or
pop
loopne
and
mov
out
xchg
push
pop
adc
test
repz
popa
fisttpl
xchg
xchg
imul
mov
inc
or
mov
arpl
outsl
sbb
push
sti
scas
das
addr16
adc
and
lcall
or
inc
cmp
testl
add
jmp
mov
rcll
sub
ss
push
iret
pop
cmpsl
xor
iret
or
out
push
das
ds
push
pop
add
aad
inc
push
lahf
adc
or
outsl
das
jns
imul
notl
adc
sbb
cs
pop
push
push
xchg
jns
scas
or
jb
or
out
sbb
dec
outsb
mov
ja
fbstp
adc
mov
xor
hlt
fldl
jp
outsl
pop
push
arpl
adc
dec
arpl
dec
xlat
sub
and
add
adc
push
lods
mov
sbb
mov
inc
arpl
shll
pop
dec
mov
pop
sti
arpl
pop
dec
stos
fwait
int
add
into
push
and
adc
cmp
call
imul
inc
pop
pusha
outsb
addb
subb
dec
adc
lock
add
lods
sub
insb
push
inc
ja
add
mov
jbe
test
cltd
mov
push
rcl
int3
add
rcll
add
add
add
lock
push
mov
testl
add
inc
and
nop
mov
sbb
or
jns
aas
cmp
add
add
adc
add
insl
push
push
inc
pop
add
sub
ror
add
add
sbb
xchg
cmp
push
add
add
lahf
dec
adc
and
push
aad
mov
cmp
pushf
inc
test
incl
or
xor
out
sub
adc
jne
dec
pusha
stos
in
sub
push
xor
aas
cmp
pushf
ret
pusha
adc
add
inc
mov
jle
into
add
dec
shll
sub
push
add
xor
inc
stos
mov
pushf
push
scas
adc
add
adc
pusha
add
rclb
sub
jo
cld
ficompl
dec
outsb
bound
mov
add
add
inc
mov
add
add
popa
sub
popa
jae
into
cwtl
rolb
or
jmp
add
cmp
nop
add
sar
adc
jo
repnz
adc
push
pop
repz
ds
add
sbb
cmpb
jnp
push
pop
pop
lock
xor
adc
adc
pusha
push
pop
sbb
into
ret
mov
ret
pop
lock
cwtl
orb
in
test
cmp
pop
and
and
faddl
xor
mov
jnp
pop
negl
add
rorb
xor
or
mov
shlb
add
mov
ud2
xchg
flds
fisubl
add
inc
or
jns
or
add
jb
cmp
ret
inc
out
push
add
xor
ret
add
insb
push
and
daa
icebp
sti
sahf
movsl
push
or
lahf
ja
or
dec
rclb
jne
cmp
sbb
lds
or
add
inc
xor
cmp
mov
inc
mov
add
mov
sbb
mov
shrb
push
add
daa
loopne
or
or
adc
push
sub
lea
adc
inc
or
sub
ds
or
sub
or
jo
cs
enter
and
xor
jnp
jnp
push
dec
pusha
pop
add
sub
out
enter
jnp
negb
mov
pop
or
rcrb
sbb
add
ja
ds
sub
sbb
loopne
adc
add
push
dec
loopne
and
mov
into
mov
incb
mov
dec
adc
lahf
dec
adc
out
int
rorb
xchg
jb
movswl
add
adc
or
into
invd
push
fwait
jbe
mov
adc
inc
xchg
add
jg
inc
pusha
daa
ret
push
pshufw
bnd
outsb
xor
push
es
adc
and
rorl
cmp
shr
iret
add
lahf
out
fcomip
popf
mov
cltd
push
roll
adc
adc
aaa
rcll
aas
scas
imul
jg
adc
movl
loope
add
jg
sarb
pusha
sbb
movsl
out
movl
mov
lahf
std
lret
add
add
adc
aaa
in
pop
imul
in
push
mov
aaa
out
jnp
xchg
mov
mov
add
enter
rolb
lret
add
lcall
xor
out
lods
xchg
pop
xor
stos
adcb
xchg
jo
sti
cld
xor
jg
inc
adc
lcall
insl
lret
xor
add
cmpsl
pop
sti
lock
pusha
or
sbb
bound
aaa
add
xchg
adc
aad
sub
aas
rolb
subl
xor
cmp
add
lahf
sbb
lock
xchg
push
push
pusha
xchg
repz
cwtl
subb
dec
into
adc
shlb
or
or
loopne
pusha
out
add
xor
mov
add
add
or
pop
in
rcl
push
addr16
add
in
xor
fwait
pusha
sbb
cmpsl
or
dec
sbb
pushf
jns
sarb
adc
add
mov
jnp
add
adc
mov
add
adcl
xor
add
mov
and
pop
xor
mov
or
sbb
fdecstp
fidivs
sbb
jle
imul
add
fwait
rolb
add
jnp
iret
leave
add
cmp
push
mov
ror
sbb
add
cmp
or
ret
in
jmp
sub
push
ficoml
mov
or
add
adc
push
scas
mov
addr16
scas
pop
xor
pop
sbb
aaa
sbb
mov
or
xchg
sub
orb
adc
enter
or
or
add
fldl
add
call
add
adc
dec
outsb
scas
pop
dec
and
jg
out
hlt
xor
sub
xor
mov
cmp
push
mov
rep
fnstenv
jg
sbb
add
push
test
aad
mov
nop
mov
pop
add
fisubrl
xchg
mov
ret
xor
sbb
cwtl
add
or
pusha
lods
imul
jo
movsl
pop
fnsave
jne
adc
cs
sbb
push
jne
sub
lidtl
mov
mov
add
and
mov
inc
fldt
pop
inc
jmp
ret
pop
add
imul
pop
push
pop
dec
insb
pop
sbb
in
nop
add
or
fiaddl
rorl
or
push
repnz
push
popa
mov
decb
sbb
rcrl
fdivrs
pop
sbb
fisttps
lahf
sysret
lahf
and
push
inc
icebp
jg
mov
in
pop
jg
insl
gs
and
pop
dec
adc
jg
call
fldcw
adc
jge
mov
ss
pop
jge
xor
insl
sbb
enter
cmc
ret
mov
outsb
sbb
mov
cwtl
leave
push
fwait
adc
fimull
sbb
adc
add
add
cmp
push
adc
sub
cmp
ret
pop
insl
rcrl
add
mov
cmp
xchg
insl
mov
sbb
sub
in
inc
sub
jge
adc
and
sub
xchg
stos
lods
lea
xor
cmp
add
and
xchg
pop
and
adc
inc
enter
popl
pop
pop
add
mov
adc
push
dec
pop
add
add
pusha
adc
int
sbb
js
mov
incl
fsub
pop
sbbl
adc
inc
divl
mov
add
fucomi
or
and
lods
decl
add
jnp
fdivs
pop
fildll
cmp
or
imul
mov
and
sub
fwait
add
sub
fmull
dec
adcl
outsl
and
sub
aas
and
or
mov
pop
aas
or
sub
sbb
and
fidivrs
sbb
pop
call
inc
imul
add
xor
sub
out
mov
pop
mov
cltd
sahf
popf
fistpl
sbb
les
lea
inc
and
lods
mov
syscall
daa
mov
outsb
add
sub
insb
push
cmp
mov
and
testb
and
and
pop
jnp
jecxz
lds
add
testl
dec
leave
push
add
test
fmulp
or
aad
inc
sti
inc
sbb
add
fcomps
inc
pop
and
mov
addr16
sub
push
pop
mov
mov
daa
jg
das
xchg
fsubs
cmp
daa
sbb
mov
add
arpl
pop
pusha
or
stos
fstl
test
clc
push
pop
or
and
shlb
loope
xor
out
popa
aas
sbb
pop
ss
push
mov
mov
and
push
adc
fstl
mov
sahf
inc
and
inc
add
xchg
fnstenv
mov
adc
lea
data16
and
sub
inc
adc
cwtl
lock
pop
adc
adc
adc
sub
dec
add
popf
mov
sub
dec
mov
adc
pop
aad
xlat
add
sbb
lods
add
pop
jb
add
and
outsb
movsb
movsb
sbb
scas
cmp
adc
add
imulb
or
adc
sahf
xor
adc
and
add
les
jg
adc
sub
movq
pusha
icebp
out
cs
imul
pop
addl
mov
decb
jg
pop
add
or
shrl
cmp
adc
push
inc
inc
and
lock
jmp
inc
adc
mov
mov
add
xor
sahf
and
or
mov
faddl
push
pop
sub
push
pfrsqit1
mov
mov
inc
dec
out
lods
add
mov
ficomps
imul
insl
dec
scas
sub
adc
call
sbb
mov
popa
push
sbb
sbb
shrl
in
sbb
lret
mov
add
add
ss
ds
add
adc
jmp
mov
xchg
arpl
adc
add
and
xor
inc
out
pop
fimull
pop
repz
nop
add
mov
add
adc
cwtl
xchg
pusha
out
pop
lock
enter
inc
push
add
add
add
push
dec
adc
xor
in
push
aas
add
pop
and
aad
pop
mov
aad
mov
add
les
out
repz
adc
test
in
ds
cld
add
or
push
aam
dec
push
inc
jae
mov
mov
or
addr16
mov
mov
pop
rolb
inc
loopne
add
adc
add
jo
push
sbb
jno
addb
dec
push
pop
addl
inc
add
testb
adc
pop
lock
test
aas
adc
pushf
pushf
int3
invd
adc
or
and
sbb
add
jg
popf
dec
mov
das
shl
psubsb
and
nop
mov
and
fbstp
inc
and
test
sbb
adc
leave
in
add
or
push
sub
leave
leave
sbb
and
mov
das
setl
cmpb
xor
mov
adcb
dec
dec
push
push
lahf
mov
inc
cltd
popf
or
dec
xor
xor
sub
xor
add
test
push
sbb
inc
add
jecxz
adc
mov
mov
inc
add
xadd
jb
xchg
xchg
fsub
in
aas
outsl
aas
and
dec
adc
pop
sub
jg
popl
mov
pushl
mov
cs
hlt
rcrb
sbb
aas
jg
inc
push
mov
orb
insl
sbb
scas
lahf
mov
add
outsl
inc
add
test
inc
xor
and
jb
jb
cmp
cmp
test
cmp
leave
xchg
inc
addb
mov
inc
das
inc
inc
pop
inc
cmp
cmp
inc
inc
inc
inc
cmp
cmp
inc
inc
inc
inc
enter
dec
dec
fisttps
push
popa
adc
jg
orl
and
nop
xchg
mov
jo
in
in
pop
mov
daa
addr16
jecxz
cmpsb
xchg
mov
call
repz
inc
pop
inc
jb
cmc
aas
and
mov
jg
pop
pop
mov
jg
and
jnp
inc
fistpll
mov
mov
ret
out
fildll
mov
lahf
ud0
xchg
ds
push
jmp
pop
decl
mov
scas
aas
mov
das
lahf
inc
mov
inc
push
pop
outsl
stos
divb
aad
xlat
mov
mov
scas
iret
inc
inc
adc
aas
imul
mov
dec
fists
inc
pop
outsl
pop
aad
inc
mov
sbb
lahf
ror
mov
aas
jg
mov
dec
aas
prefetcht1
sbbl
sbb
push
movq
dec
sub
cmp
adc
mov
lahf
stos
add
xchg
call
add
xchg
add
dec
test
dec
jns
jge
int3
push
add
call
xor
clc
push
sub
bound
add
dec
clc
cltd
and
or
pop
sbb
out
mov
xor
sbb
push
js
adc
aaa
mov
sbb
add
aam
xchg
sbbb
inc
loopne
popf
push
stos
pusha
jno
inc
or
test
dec
add
and
insl
and
adc
pop
and
push
shlb
test
and
outsl
adc
pop
or
mov
sbb
dec
push
jae
sub
inc
xorl
outsb
xor
imul
xchg
add
or
sbb
ss
cmpb
sarb
imul
cmpb
nop
insl
adc
mov
sub
adc
inc
mov
test
sub
and
insl
jbe
loop
pusha
fmull
int
sub
outsb
jb
shll
mov
dec
stos
dec
sbb
sub
cmp
roll
xor
inc
adc
inc
insb
addr16
jl
ret
into
mov
out
push
xor
aas
cmp
gs
pusha
mov
sbb
cld
jl
sub
adc
jnp
mov
push
icebp
out
jb
pushf
mov
imul
add
add
fimuls
fnsave
and
dec
dec
or
mov
ret
shrl
dec
xchg
cmp
xor
push
dec
adc
sbb
push
icebp
and
mov
ret
sub
adcl
xor
testl
insl
mov
dec
jle
popl
inc
loope
inc
push
inc
xlat
mov
ja
and
add
or
jb
push
xor
add
jb
push
add
mov
aad
jb
mov
add
or
nop
inc
dec
outsl
arpl
add
stos
sahf
cmp
or
test
xor
pop
xchg
add
stc
sbb
cmp
insl
mov
fcmovnu
add
cmp
pop
inc
adc
je
mov
and
loope
repz
sbb
mov
outsl
xor
je
adc
sub
sub
enter
lcall
inc
not
test
ret
cmp
pop
inc
ret
sbb
notb
rclb
test
popa
insl
daa
sbb
jae
mov
mov
shll
sbb
xor
push
je
push
pop
xor
or
mov
fisubrs
dec
imul
cs
aas
sbb
dec
inc
mov
or
je
fwait
lcall
outsb
push
mov
add
insb
cmp
mov
ja
adc
imul
jbe
pop
lds
lods
clc
cmp
mov
xchg
fdivr
pop
ds
leave
sbb
or
push
in
sbb
int
dec
jo
push
add
dec
mov
inc
mov
and
mov
or
rclb
bound
adc
insb
pop
pop
outsb
pop
mov
das
je
sub
and
stos
inc
rcrl
cltd
mov
or
push
rcll
inc
clc
adc
inc
movsb
dec
data16
insl
je
in
lods
inc
sbb
and
dec
and
sbb
jno
xor
stos
mov
or
sub
loop
lock
xor
inc
push
bound
push
jmp
push
and
push
and
and
inc
dec
aam
stos
push
jo
push
mov
adc
movsl
cmp
jo
movsb
push
mov
inc
rclb
in
pop
inc
push
or
jns
jp
dec
orl
jnp
int3
pop
bound
jmp
fnstenv
out
daa
mov
push
sub
and
shrl
sub
inc
call
orb
daa
pusha
push
add
sub
cmp
daa
jmp
mov
add
cmp
push
mov
cmp
sbbb
nop
mov
addb
inc
jecxz
add
push
jg
inc
roll
inc
push
and
mov
pusha
mov
imull
outsl
sbb
sbb
or
lock
adc
or
push
lea
paddb
add
imul
insl
sbb
loope
outsl
sub
test
mov
cmp
insl
pop
cmpsb
stos
into
fs
mov
int3
maxps
lods
divb
push
jo
xchg
sub
xor
xchg
push
inc
mov
pop
scas
cwtl
and
test
add
aaa
adc
pusha
pop
sub
les
fs
cli
and
outsl
outsb
mov
xchg
popa
dec
sub
and
daa
xor
push
pusha
pop
test
sub
cmpsl
inc
sub
and
mov
outsb
sub
adc
ja
or
sub
inc
sub
lods
push
sbb
sbb
mov
or
cmpsl
xor
lret
inc
xorl
jmp
mov
and
add
pop
gs
mov
aas
sbb
or
adc
xchg
push
lcall
push
gs
sbbl
inc
or
sbb
xor
gs
popa
bound
mov
sbb
jnp
jge
sbb
jae
sbb
xor
mov
add
ss
push
je
adc
add
addl
sub
adc
test
add
loop
mov
aam
mov
and
dec
jo
inc
std
dec
or
dec
sub
addb
sbb
sub
pusha
nop
adc
popf
dec
inc
mov
lods
jbe
mov
mov
adc
sbb
mov
testb
xor
add
inc
jns
andl
xchg
pop
xor
sub
add
js
mov
sbb
inc
daa
pop
adc
cmpsb
and
sub
sbb
sbb
out
popa
iret
pop
jno
and
ss
aam
sbb
bound
jno
sbb
sub
xchg
cli
jae
cmp
pop
aas
or
je
dec
roll
daa
jnp
cmp
jecxz
inc
inc
push
test
lock
sahf
or
sub
push
or
and
push
sahf
ss
xchg
add
popa
sahf
mov
push
in
dec
callw
bound
sbb
inc
out
daa
dec
dec
inc
push
test
add
and
xor
sbb
sbb
and
ret
dec
sbb
or
and
pop
sahf
add
mov
or
stc
mov
dec
push
pop
data16
adc
xchg
or
mov
fs
and
aaa
sbb
inc
push
imul
add
jbe
sub
and
rclb
cmp
inc
xchg
aas
das
mov
frstor
lret
push
enter
ret
pop
sbb
mov
mov
cs
add
mov
popf
clc
sbb
in
insb
or
in
clc
xor
inc
iret
fistl
orl
fsts
mov
adc
popa
sub
xchg
pushf
leave
mov
fwait
sub
scas
and
jecxz
subl
xor
shrl
jp
loopne
sbb
and
add
adc
orl
fadds
jno
push
pop
scas
int
sarb
outsl
lods
push
inc
mov
or
pop
sbb
ja
std
xchg
xchg
in
cmp
cmpsl
shrl
mov
outsl
push
rcll
push
sub
push
fs
aas
mov
rol
je
jne
dec
outsb
arpl
lods
sbb
imul
jp
aaa
andb
mov
addr16
cmp
inc
xchg
fnsave
ret
popa
jo
jmp
and
xor
dec
add
mov
sub
insb
dec
insb
lods
xchg
je
push
adc
lahf
sbb
icebp
dec
jae
fwait
nop
sub
adc
mov
outsl
pop
pop
and
and
out
into
lods
gs
dec
adc
xor
add
dec
adc
sbb
pop
xchg
push
pop
pusha
inc
fwait
push
and
shr
sbb
test
mov
mov
and
mov
dec
inc
jl
push
outsl
pop
dec
pop
push
dec
packsswb
xchg
sbb
addb
jne
sbb
lds
xchg
sbb
test
inc
ret
loopne
xor
jnp
pop
fndisi(8087
leave
jns
sbbb
adc
and
fwait
xchg
lods
shrb
sbbb
daa
xor
push
movsb
div
das
test
or
pop
fsubs
pusha
xchg
add
iret
add
es
inc
adc
xchg
pop
mov
dec
sub
and
jae
mov
fistpl
adc
imul
sbb
and
adc
xlat
mov
push
mov
sbb
push
xchg
add
jo
sbb
pop
jnp
sub
lods
and
popa
aad
cmc
mov
sarl
jmp
movsl
sbb
enter
dec
pop
adc
jmp
inc
fs
shlb
addb
lds
vandnps
fcoml
sbb
popa
mov
cmp
mov
jg
cmpsl
cmp
inc
pop
and
xchg
cs
push
inc
and
inc
push
pop
pop
jmp
ja
xchg
push
jl
xor
outsw
pop
push
jo
lea
add
mov
shrb
sub
repz
loope
adc
nop
mov
dec
xor
movsb
jle
aas
pop
dec
orl
inc
pop
lods
imul
dec
inc
mov
add
adc
add
mov
mov
fisubrl
fmuls
xor
stc
adc
push
nop
popl
es
pop
roll
pop
out
paddusb
push
inc
push
jle
pop
adc
rorb
add
add
inc
insl
aam
dec
or
mov
pop
and
cmp
mov
mov
sbb
cwtl
scas
inc
push
imul
xchg
scas
sbb
int
sahf
push
add
and
imul
stos
push
sbb
dec
loope
push
dec
popa
and
rorb
and
inc
jns
pushf
fs
in
push
ds
enter
dec
push
dec
imul
lahf
je
scas
in
jns
add
je
mov
sbb
cmp
add
and
fwait
popa
xor
adc
jbe
lcall
cmpsb
bound
loopne
add
push
fmul
das
push
enter
push
dec
xchg
incl
add
add
inc
add
inc
xchg
jecxz
insb
push
or
jmp
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
and
add
inc
