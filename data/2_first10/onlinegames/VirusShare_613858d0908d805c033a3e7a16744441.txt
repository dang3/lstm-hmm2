mov
inc
and
and
add
in
sub
movsl
in
jle
out
incl
push
push
push
pop
xor
lea
lock
stos
stos
stos
and
stos
sti
popf
popf
int
dec
call
jmp
out
ja
jne
dec
lea
pop
pop
pop
jg
std
call
or
fildl
jle
xor
adc
out
fildll
inc
dec
mov
bound
ss
push
ljmp
mov
push
je
mov
push
call
outsl
fmul
testb
in
dec
popl
fstl
insb
pop
xchg
push
pop
mov
jmp
add
push
inc
cmp
mov
mov
xor
ret
pop
push
or
pop
leave
ret
push
in
pop
push
push
jp
push
mov
mov
imul
cld
add
sbb
jmp
mov
ss
jo
insb
in
jne
jae
out
cs
icebp
es
mov
call
lock
rcr
je
xor
inc
push
push
xchg
mov
ds
ret
inc
push
lds
je
mov
data16
dec
enter
lret
cmpsl
insl
ss
inc
push
int
into
arpl
outsl
jbe
jmp
shlb
shll
jb
stc
pop
cmp
pop
out
mov
mov
js
movsb
movsb
movsl
sahf
out
sahf
cmpsb
cmpsl
test
stos
stos
jns
out
lods
lods
scas
scas
mov
jns
out
mov
mov
in
shrl
mov
xchg
mov
out
mov
gs
loope
jmp
imul
push
push
cld
push
call
scas
clc
pop
mov
push
or
jge
sbb
cld
dec
dec
cmp
xor
and
jae
pop
sbb
or
dec
mov
cmp
jmp
mov
imul
add
xor
movsl
add
adcb
inc
or
pop
pop
shl
sbb
pop
enter
in
mov
movl
or
jno
push
xchg
jne
jae
fwait
int
out
gs
jb
xor
xor
mov
iret
repz
cmc
testb
insb
fwait
dec
loope
imul
in
ss
sahf
cmpsl
out
call
ja
mov
adc
ret
out
aas
inc
gs
mov
sbb
or
or
add
inc
push
push
push
mov
sarb
dec
mov
mov
inc
ret
ja
xor
sbb
and
lock
push
mov
mov
dec
popa
xor
xor
sti
loope
decl
mov
jne
cmp
jb
fs
out
out
dec
jno
mov
push
push
adc
clc
sbb
int3
fimuls
rcrb
dec
je
mov
jns
ds
das
mov
fmul
sahf
loope
add
in
cld
jp
pop
add
lods
sub
mov
adc
addr16
repz
shll
xlat
fcomp
iret
repz
fcmovu
addr16
and
test
or
jno
or
imul
jne
cmpsl
jns
jb
gs
js
outsl
movsb
jns
jns
jl
jnp
int
lea
pusha
insl
jle
cmpsl
fldcw
adc
inc
xorl
subl
test
dec
xchg
mov
mov
inc
mov
push
jne
cmp
mov
out
cld
mov
out
ss
popa
xchg
jbe
gs
xchg
jge
jns
xchg
xchg
cwtl
cltd
mov
xorl
insb
into
sahf
gs
mov
test
lds
sahf
out
enter
out
jae
imulb
lret
int3
je
int
jb
iret
shrb
dec
sti
shll
rorb
cmp
movsl
mov
inc
sahf
out
stc
pushf
imul
push
inc
scas
mov
jne
call
xor
arpl
lcall
sbb
pop
fisttpll
push
push
mov
icebp
xchg
idiv
data16
or
and
sub
imul
pop
popa
pop
addr16
gs
inc
das
pusha
inc
sub
push
jo
roll
hlt
push
rcr
pop
ja
mov
mov
push
xor
je
mov
mov
pop
jp
orl
sbb
loope
stos
and
movsb
loopne
mov
in
les
in
or
mov
int
in
mov
scas
dec
das
jmp
sbb
filds
outsb
rclb
lret
mov
xchg
or
mov
pop
je
dec
push
mov
repz
lock
cmp
jg
or
jl
ret
and
pop
mov
cwtl
push
lcall
cwtl
jo
pushl
jo
add
sbb
and
movsb
out
in
call
gs
in
fdivr
in
shlb
pop
sub
fs
or
xlat
adc
and
or
scas
daa
popa
cmp
dec
jae
or
mov
or
sbb
dec
lock
or
fcmovu
ja
aam
adcb
ret
jl
pop
jg
sub
mov
lahf
jl
mov
mov
ss
jae
dec
cs
cli
pop
sbb
sti
insl
cld
sahf
xor
ja
jne
pop
push
lea
push
das
push
add
mov
pop
jb
movl
pop
sarl
mov
push
sahf
xchg
dec
gs
std
insb
pop
je
xchg
and
movsl
cmp
or
or
ret
or
adc
cmp
mov
mov
fidivrs
mov
xor
pop
je
cmp
je
inc
shr
jne
add
ds
dec
jne
outsl
mov
add
cld
pop
xchg
mov
adc
dec
xor
ficoml
fiaddl
xchg
cmp
jae
xor
mov
mov
mov
dec
je
xor
mov
adc
fimull
pushf
cmp
cmp
xchg
lds
and
sarl
pushl
or
jnp
jmp
lods
les
or
in
push
test
testb
mov
gs
fildl
outsl
fstpl
fbld
jb
jne
sbb
fs
iret
mov
push
fcomps
push
aam
outsb
jmp
push
aam
data16
and
sub
addr16
ss
inc
popl
es
push
push
in
adc
xlat
sbb
and
test
jne
fsubrl
push
mov
les
pop
cmp
jne
aad
xchg
dec
jle
push
mov
andb
mov
mov
push
lcall
daa
adc
mov
cmp
push
push
test
dec
inc
dec
cmp
inc
in
mov
mov
inc
jl
cmp
fcmovnbe
inc
add
push
xor
sbb
loop
pop
mov
jnp
std
xor
adc
or
cmp
mov
jle
jno
add
or
ret
mov
push
sarb
add
mov
je
and
add
or
push
dec
or
or
rcrb
repnz
sub
push
pop
cmp
into
xchg
jne
les
mov
pop
std
jne
lods
mov
xor
cmp
adc
push
daa
or
mov
pop
push
mov
stc
clc
push
addr16
dec
xor
xor
xor
out
xchg
mov
enter
or
and
sub
fstl
adc
in
in
outsb
and
cld
and
mov
mov
mov
arpl
cltd
in
jmp
add
adc
fiadds
ja
cltd
add
or
xor
outsb
out
cmp
test
jns
xchg
cli
fst
jecxz
nop
or
dec
and
and
sbb
mov
loopne
fldt
mov
pusha
pop
mov
dec
xchg
rcll
jl
and
sbb
adc
xor
mov
es
in
push
insl
popf
mov
roll
lods
pop
cmp
mov
movsb
jbe
imul
xor
iret
repz
iret
rcl
rcl
aam
dec
push
mov
cmp
sahf
out
es
sahf
jae
xor
cmp
and
dec
shll
jae
imul
mov
cmpsb
jae
cmp
cmc
neg
idivl
idiv
stc
cli
mov
xor
cld
and
std
pop
push
mov
insb
notb
pop
outsb
push
adc
cmp
sbb
xor
aad
fstp
and
mov
jp
gs
add
enter
jns
js
jl
movzwl
mov
cmp
xor
or
dec
stc
push
push
dec
xor
jo
sbbl
adc
push
mov
out
sub
test
mov
cmpsb
imul
insb
mov
imul
xchg
gs
in
rcrl
jb
pushf
pop
cmp
mov
popf
es
sahf
jne
mov
hlt
mov
sub
ds
loop
es
jl
int3
sbb
adc
sbb
loop
add
mov
test
test
ja
push
xchg
mov
fcmovnb
cmp
mov
out
std
lock
imulb
repnz
std
mov
iret
cmpl
jbe
or
dec
rorl
jl
inc
mov
cmp
push
add
movsl
cmpsb
je
inc
insb
ss
test
lods
outsb
mov
out
imul
es
ss
sub
mov
mov
jae
mov
dec
and
fs
push
jp
mov
mov
mov
dec
lock
jo
cmpsb
sbb
push
jb
arpl
cmpsb
imul
cmp
repz
imul
shll
test
xlat
js
out
fcomp
fcmovu
inc
mov
pop
inc
orb
imul
out
repnz
mov
iret
repz
rcr
inc
ret
lds
repz
enter
daa
xor
and
xchg
fstl
push
call
jb
mov
hlt
add
push
push
cld
wrmsr
jge
inc
fst
xchg
adc
outsl
sbb
or
mov
dec
fisttps
shrb
aad
pushf
and
andb
mov
gs
pushf
cmp
arpl
fbstp
lea
jmp
dec
mov
sahf
sbb
jmp
push
loop
adc
adc
or
call
pop
add
jmp
sbb
push
neg
sbb
inc
pop
jb
out
test
push
test
lahf
out
ss
lods
insb
out
inc
aas
or
push
fadds
mov
daa
int3
gs
inc
sarl
add
lret
push
pop
popa
xchg
in
fsubl
sbb
jge
ja
xchg
mov
cmp
jp
ret
inc
xchg
in
dec
and
adc
mov
enter
xlat
ret
lds
or
sbb
jg
jnp
jmp
mov
clc
adc
jecxz
and
mov
ficomps
loopne
and
cmp
fidivrl
and
adc
das
jne
xchg
mov
jmp
pushw
mov
mov
daa
test
mov
add
addr16
ret
dec
lds
push
push
mov
in
push
enter
pop
in
mov
in
dec
out
or
and
push
or
adc
or
ds
aad
mov
mov
ds
jnp
loopne
push
sub
add
mov
addr16
loopne
hlt
push
hlt
lea
inc
notb
mov
push
push
add
call
int
and
or
lret
orl
pop
mov
sub
into
mov
shlb
test
inc
js
push
psubw
xor
inc
fimuls
int
stos
clc
filds
loopne,pn
loope
loop
jecxz
jl
nop
add
jnp
adc
inc
movsl
push
addr16
cltd
add
and
push
test
aaa
xchg
daa
test
push
pop
pop
pop
or
lods
jnp
fcomp
dec
mov
incl
ficomps
icebp
sbb
pop
out
and
mulb
out
pop
mov
dec
xor
adcl
ss
fucom
cmpb
inc
inc
clc
inc
mov
sbb
loopne
sbb
pushf
call
enter
js
sbb
idivb
sub
cmp
jecxz
dec
ror
mov
fistpll
arpl
cmp
test
xchg
inc
and
jb
fdivrs
add
in
add
aam
mov
jo
lcall
cmp
add
inc
push
pop
xor
mov
filds
jo
sbb
clc
mov
divl
shlb
les
jo
dec
sbb
sbb
imul
jne
xor
mov
mov
std
in
call
out
cmp
jbe
xor
test
jbe
lea
cmpb
adc
rorb
jle
mov
xchg
sbb
add
es
jg
incl
into
jb
xor
pop
das
inc
out
test
sbb
lcall
add
shlb
dec
xchg
fstps
xchg
and
and
shr
sub
push
in
enter
mul
int3
decl
ja
pop
sarb
rcrb
mov
fldcw
xor
lods
je
rol
ljmp
mov
ds
adc
ja
popfw
lods
test
sub
push
sub
sub
in
cmpb
roll
lods
popf
hlt
sti
lods
mov
pop
xchg
lret
mov
add
pop
adc
sub
push
add
xor
jnp
push
aad
and
loope
xchg
sbb
popa
pusha
sbbb
mov
and
decb
and
test
pop
popf
orb
add
mov
jns
mov
cmp
dec
sub
repz
rep
cmp
cmp
dec
ja,pt
cmp
xor
repz
push
inc
jb
repz
repz
jbe
imul
inc
jge
or
dec
xor
int
dec
sub
cmpsb
adc
cmpsb
imul
inc
lcall
fwait
movsb
imul
popf
sub
sahf
aam
pop
enter
shll
jo
imul
mov
mov
cmp
data16
xor
xor
jge
test
lods
cmp
imul
and
dec
and
xchg
out
and
int
or
xchg
out
inc
daa
sub
leave
dec
repz
sub
inc
push
icebp
mov
jns
lcall
xor
lcall
mov
lock
pusha
in
inc
out
inc
movsb
cmp
lock
repnz
dec
xor
testl
xchg
out
je
or
or
and
outsl
or
pop
insb
push
jae
fwait
lea
push
adc
adc
repz
adc
adc
adc
insb
ss
adc
push
sbb
imul
je
imul
mov
flds
test
jae
xchg
xchg
addr16
int
xor
or
jmp
inc
mov
mov
out
pop
dec
mov
xchg
sahf
out
sahf
xchg
xchg
xchg
xchg
xchg
xchg
imul
js
pushf
mov
xor
jbe
cmp
push
sub
add
repz
cmc
outsl
push
adc
inc
int3
xor
dec
popa
arpl
fs
and
gs
fsts
xor
push
xorl
mov
insl
bound
push
jae
mov
cs
es
insb
loop
imul
push
into
dec
jo
add
lcall
lret
ficomps
jo
ud1
jecxz
jb
xchg
lret
in
jne
insb
push
jne
in
and
inc
xchg
xchg
imul
mov
insb
movsb
jne
push
mov
aad
lods
xchg
push
push
leave
adc
arpl
push
push
mov
or
pop
aaa
pop
addr16
mov
pop
outsl
pop
mov
pop
jecxz
lret
pop
call
xor
cmp
inc
adcl
orl
je
push
lret
repnz
pop
andl
sub
mov
aam
mov
add
js
sbb
dec
in
cmp
adcb
inc
push
jo
adc
and
ret
push
lahf
or
push
dec
sbb
test
sub
lret
lea
sbb
or
dec
lea
push
xchg
cmp
sub
shll
adc
xorl
push
and
pop
xor
adc
mov
pop
scas
outsb
loopne
push
ret
xorl
xchg
js,pt
adc
add
ds
je
pusha
clc
mov
and
mov
je
push
mov
sub
push
call
mov
pop
jg
movsl
ret
dec
jnp
hlt
loop
lcall
xor
cmp
push
sti
xor
jge
and
inc
jbe
shrl
mov
fmull
pop
add
ret
pushf
in
fbld
cmp
std
ret
ds
enter
imul
stos
outsb
hlt
test
xorl
cmpsl
ja
cmpl
push
add
mov
jne
inc
fdiv
jo
in
add
movsb
push
mov
inc
mov
adc
iret
lods
cmpsl
vphaddubw
jp
insl
adc
pop
sti
inc
jo
clc
ljmp
pop
mov
cmp
je
cmp
jb
dec
dec
adc
fdivrp
cmpw
jne
push
es
sbb
pop
jne
jl
jl
dec
sub
or
inc
xchg
jbe
adc
sbb
or
xlat
mov
pop
jb
xor
xor
nop
mov
rclb
dec
fistpll
push
push
and
mov
cmp
or
jo
fdivrl
mov
cmpsb
and
mov
or
push
les
mov
repnz
repz
cmc
testb
cmpsb
imul
lcall
inc
outsl
cmpsb
imul
inc
xchg
jne
ljmp
in
out
out
mov
cmp
rorb
mov
pushf
xchg
test
shlb
rclb
xlat
sbb
pop
arpl
movb
dec
sub
cmp
add
and
sub
add
sbb
mov
xor
xchg
jmp
mov
push
test
jo
inc
sub
rorl
mov
into
pusha
cmc
fistl
orb
bound
stos
scas
out
js
lods
mov
scas
xor
inc
push
stc
jne
inc
jmp
push
inc
mov
ja
cmp
mov
jle
push
xor
stc
xchg
daa
adc
in
stc
mov
rcrl
arpl
in
popa
mov
pop
daa
rolb
cld
lock
in
and
pop
shrb
cmp
and
inc
je
test
sbb
sbb
or
loopne
lea
pop
sub
lea
out
scas
mov
out
push
test
mov
pop
jo
ficoms
push
arpl
add
xchg
or
push
dec
rcll
mov
xor
shll
outsb
fs
mov
gs
rorl
repz
fs
js
mov
pop
mov
arpl
push
push
mov
push
pusha
into
je
xchg
jnp
inc
adc
add
cmp
push
dec
push
push
mov
jbe
andb
push
push
mov
jb
push
jp
jp
adc
mov
sub
jle
pop
es
fsubrs
cmpsb
clc
stos
outsb
cltd
jecxz
push
paddw
xchg
movsb
inc
push
adc
std
shl
sti
and
ss
mov
cmpl
adc
mov
jle
fwait
adc
add
cmc
addr16
push
xor
push
and
dec
into
repz
dec
xchg
dec
inc
push
lcall
decl
add
je
out
imul
push
scas
es
insb
ds
shll
mov
mov
add
mov
mov
dec
push
inc
dec
je
jo
xor
xor
jo
outsb
push
jno
in
inc
jne
gs
ds
repz
xchg
cwtl
push
repz
sarl
fwait
test
sahf
lahf
mov
jecxz
mov
xchg
movsb
js
cmpsb
mov
testl
gs
es
shlb
jmp
dec
outsb
sub
int
jb
outsb
je
imul
outsb
arpl
lret
int3
addr16
dec
lcall
je
dec
lcall
ret
add
pop
cmp
pop
and
les
roll
sarl
inc
push
fcmove
add
imul
arpl
test
cwtl
cld
sbb
call
cwtl
push
clc
rorb
push
js
movsb
daa
and
insl
xchg
mov
cmp
jne
sub
popl
ljmp
loop
mov
insl
mov
adc
mov
adc
cld
and
loope
cwtl
jae
int3
les
mov
enter
adc
fidivl
aaa
pop
pusha
pop
push
and
arpl
into
or
std
push
js
xchg
negb
xchg
jnp
pop
cmp
fdivrl
pop
or
and
push
sahf
out
fldt
arpl
adc
cmp
jl
push
and
cmp
sub
inc
lea
mov
bound
adc
daa
nop
dec
mov
sarb
xchg
jmp
or
mov
mov
push
je
push
mov
mov
enter
test
icebp
loopne
mov
mov
jae
add
pusha
subl
dec
xchg
add
mov
test
and
add
bound
stos
jl
sbb
push
sbb
push
adc
pushl
mov
push
addl
xor
and
data16
lret
inc
cmp
sub
cmp
xor
dec
ret
fwait
loop
mov
ja
out
push
pushf
push
sbb
pop
jbe
jo
in
outsb
dec
inc
jb
xor
popa
insl
gs
lcall
insb
cmpsb
imul
imul
cmpsb
imul
rcll
xor
imul
andl
gs
popa
mov
push
xlat
xor
cmp
shll
fcmovu
fdivrl
out
imul
lea
mov
mov
inc
lcall
insl
gs
imul
and
sahf
and
lea
mov
mov
xor
xor
imul
inc
inc
lcall
mov
sbb
jne
leave
imul
dec
sub
iret
popa
mov
push
outsl
addb
push
imul
jbe
adcb
jnp
xlat
das
sub
xor
jns
sub
xor
cmp
dec
dec
mov
push
fmuls
xor
pop
xor
dec
stc
and
add
add
test
or
pop
divl
das
xor
adc
xchg
and
add
sub
sbb
push
or
in
ja
lahf
adc
loopne
fmuls
les
xor
cmp
dec
leave
bound
movsbl
in
popf
out
cwtl
sbbl
pop
jb
lea
scas
and
adc
adc
and
jb
push
imul
push
lahf
js
imull
and
fucomip
adc
sbb
cld
push
xchg
pop
push
mov
mov
adc
enter
jnp
or
jl
push
es
and
sub
loop
daa
xchg
adcl
daa
test
add
mov
adc
pop
sub
xchg
inc
insb
aaa
pop
and
imul
xchg
xchg
cmpsb
imul
imul
cmpsb
imul
mov
cwtl
cmpsl
xor
dec
mov
enter
sub
je
xchg
gs
push
xor
mov
add
sbb
pusha
pop
ret
pop
mov
mov
dec
or
mov
dec
int3
mov
sti
jb
dec
rorl
arpl
xor
rcll
call
lcall
outsb
popa
je
lcall
arpl
adc
pop
test
lock
in
pushf
loopne
add
inc
ret
xor
shll
outsb
je
sbb
shll
int3
enter
push
rorb
cwtl
xor
in
daa
ror
dec
pop
nop
pushf
mov
inc
pop
jae
icebp
mov
lahf
mov
sbb
or
sub
leave
jp
mov
cli
popa
jl
or
or
jl
dec
cld
fwait
adc
jg
inc
cmp
jb
fstpl
push
out
push
mov
inc
or
mov
mov
faddl
lea
and
rcl
jmp
sti
inc
adc
adc
xor
sbb
jne
xor
nop
push
inc
inc
outsl
jge
xchg
jg
cmp
cli
pop
push
adc
or
loopne
lea
mov
in
shll
add
push
or
repz
stc
add
sbb
jp
add
sbb
insb
jns
dec
push
and
pop
jp
pusha
mov
je
cmpl
jne
cmpl
jne
int
adc
je
imul
addr16
push
jl
add
sete
in
jo
iret
jg
outsl
push
jne
popa
outsb
addr16
adc
adc
or
outsl
rorl
lret
jne
stc
cld
js
jbe
adc
sbb
add
sbb
fs
pushf
or
and
das
sub
test
pop
je
andb
orb
loope
inc
cmp
outsl
cmp
jne
movsb
or
negb
fisubs
or
lea
aaa
loope
or
bts
add
js
or
pop
mov
mov
push
mov
sbb
cmp
push
shlb
or
fldt
sbb
sub
jae
jb
xor
or
jns
je
inc
pop
ret
out
jne
pop
pop
mov
ljmp
stc
or
js
inc
dec
nop
jb
push
cli
pop
or
add
daa
loope
and
out
xchg
je
push
jl
dec
sbb
mov
ret
xor
jmp
adc
fstps
insl
add
jae
sub
add
clc
fisubs
or
sbb
jp
hlt
aam
add
int
adc
popa
push
jl
push
aaa
adc
mov
sub
add
mov
dec
cltd
fwait
testl
add
adc
or
push
pop
pop
jecxz
push
enter
inc
enter
and
sbbb
mov
sbb
hlt
adc
xor
mov
and
sub
mov
lea
fstpt
pop
loope
inc
sbb
pop
jne
loop
push
jb
inc
aas
add
test
sbb
mov
jmp
sub
add
cmp
push
jle
pushf
xor
fs
call
ja
mov
sbb
popf
arpl
pop
mov
inc
cld
mov
push
aam
xlat
mov
enter
add
pop
neg
push
sub
push
pop
and
aas
shll
orb
sub
sti
imul
test
push
out
inc
fistpll
inc
xorb
mull
movsb
je
icebp
xor
pop
sub
cmp
xor
shll
dec
pop
inc
hlt
inc
pop
inc
cmp
jl
clc
movsb
push
imul
fisttpll
xchg
xor
int3
out
clc
pusha
push
loope
ss
sbb
loop
inc
add
jmp
pop
xor
enter
dec
fmull
inc
insb
call
pop
xor
divb
push
mov
or
inc
add
test
inc
sbb
pop
sbb
add
mov
adc
fistpll
pop
incl
add
cmp
jl
loopne
adc
popa
pop
mov
rclb
dec
cmc
subb
xchg
mov
lods
mov
and
loopne
add
dec
je
adc
shlb
imul
insb
push
jb
je
or
shlb
fisubrl
jbe
ret
outsl
in
enter
out
xor
push
cmpsb
adc
lea
push
clc
sahf
pusha
xchg
pop
out
pop
mov
push
push
or
push
scas
stos
add
fisubrs
jbe
mov
inc
cmp
movb
mov
add
sti
push
push
pop
popf
outsb
pop
sbb
cmp
in
mov
or
mov
test
mov
popa
sub
or
lods
sti
cltd
ds
and
inc
ret
push
movsl
scas
je
add
add
jns
insl
clc
testb
and
in
adc
popa
and
push
rcrl
push
adc
stos
jmp
and
test
push
clc
add
jbe
aas
loope
inc
lock
cmp
cmp
mov
hlt
sbb
shr
and
pop
popf
or
cmp
push
xchg
jecxz
xor
pop
into
add
pop
pop
cmpsl
sbb
push
dec
mov
adcl
addb
xchg
mov
mov
orb
push
stos
inc
leave
jno
movsb
xor
in
push
push
push
shll
insw
push
inc
xchg
dec
outsl
outsb
sbb
loopne
shll
or
push
loope
pusha
cmp
xor
hlt
inc
cmp
xchg
pop
jne
cmp
xor
lcall
jb
jns
cmpsb
popa
jns
icebp
repnz
pop
movsb
inc
pushf
shrl
imul
pushf
and
or
push
inc
mov
pop
push
arpl
mov
pop
fs
cs
and
je
dec
sub
or
lds
fs
fucomip
adc
jecxz
imul
pop
adc
rcrb
xchg
add
push
mov
loop
jg
and
mov
sbb
aam
xchg
mov
push
lcall
test
outsl
lods
aam
inc
mov
clc
push
das
mov
test
pushf
adc
mov
out
jmp
xor
inc
mov
pop
jle
xor
ja
rclb
add
xor
shll
inc
imul
push
pop
imul
fcomps
add
xchg
sub
push
lea
push
mov
mov
cmovbe
cmp
inc
jne
adc
je
pop
rorl
or
aaa
rolb
dec
or
repz
into
push
jns
mov
inc
jb
dec
shll
cmpsb
imul
insb
push
gs
jo
xor
movsb
imul
push
push
dec
shll
outsl
arpl
jae
dec
shll
xor
in
iret
repz
cs
outsb
lock
repnz
ds
repz
div
clc
stc
dec
and
data16
mov
and
push
dec
and
mov
div
daa
rcr
shlb
pop
je
pop
sbb
jmp
ljmp
dec
jmp
mov
push
sub
or
mov
inc
fidivrl
push
and
mov
and
cmpsb
cmpsb
imul
imul
pop
out
sti
ss
ret
dec
push
or
dec
jo
jmp
adc
outsl
imul
mov
gs
test
dec
shll
jo
insb
and
mov
mov
je
addr16
mov
popa
sarl
ret
lods
les
adc
lcall
je
push
test
push
outsl
mov
roll
xor
dec
jb
jbe
sub
and
mov
and
lods
fmull
push
sbb
es
cmp
or
enter
enter
inc
jne
loopne
jns
jb
cmp
lcall
sbb
jbe
fnstenv
inc
loope
push
mov
mov
inc
pop
xchg
pop
stos
dec
cmp
and
mov
add
jo
xor
movsl
adc
push
and
push
mov
shlb
sti
inc
mov
xorl
mov
xchg
add
jg
shlb
and
test
jne
sar
incl
ret
cmpw
jne
mov
add
cmpl
sbb
mov
push
ret
inc
mov
adc
cmp
outsb
in
fst
mov
addr16
cmp
je
and
mov
pop
cmp
ja
jge
adc
jae
sbb
mov
mov
cmp
movb
cmp
std
in
in
adc
push
pop
sbb
or
je
decl
incl
clc
mov
int
or
or
bnd
and
adc
enter
cmp
mov
call
push
pusha
aaa
or
add
adc
dec
mov
cmp
jae
mov
mov
mov
cmp
push
adc
push
fsubl
sub
inc
in
push
rcl
inc
pop
push
imul
sbb
je
xchg
out
gs
je
pop
imul
sahf
cmpsl
icebp
ret
je
cmp
and
dec
jo
daa
iret
rep
push
insb
test
xor
xor
rcrb
je
ret
pop
or
jns
shlb
je
dec
rcll
dec
outsb
je
xor
enter
push
popa
pop
mov
cli
mov
add
mov
and
out
sahf
out
gs
gs
insb
outsl
jae
cmpsb
imul
outsb
fs
test
js
sti
fsubs
mov
insb
xor
xchg
out
out
aam
lods
popa
or
push
xor
rcrb
call
popa
enter
pop
inc
scas
lods
hlt
imul
in
inc
and
dec
mov
push
aaa
aam
adc
pop
out
sub
dec
inc
mov
dec
mov
push
insb
inc
movsb
mov
in
xlat
push
mov
hlt
fistpl
inc
xor
jb
movsbl
cmp
je
dec
jmp
mov
ds
aam
or
pop
jo
call
je
mov
mov
test
je
mov
inc
inc
jmp
andb
inc
dec
ret
xor
adc
test
je
mov
test
mov
adc
repz
cwtl
mov
mov
push
push
inc
cmp
jge
mov
jo
inc
sub
jmp
or
add
sub
jmp
jne
sbb
mov
dec
inc
shl
push
insb
inc
push
cmp
jge
or
cmp
lcall
std
or
sub
mov
cmp
xor
fidivrs
pop
jb
xor
or
leave
mov
je
ret
adc
inc
dec
sbb
jmp
push
mov
mov
inc
inc
test
jne
pop
mov
mov
test
nop
clc
add
movsl
adc
add
push
icebp
adc
repnz
inc
push
iret
repz
lea
inc
imul
inc
xchg
imul
je
imul
inc
imul
inc
insb
jae
add
push
xor
adc
xchg
arpl
mov
inc
jo
mov
add
sbbl
sbb
and
sub
pushf
jns
dec
lcall
jb
iret
jae
je
outsl
jb
inc
in
inc
or
leave
aam
subb
fdivr
les
jno
jae
loop
xor
jp
das
mov
xchg
lret
cmp
mov
mov
inc
test
add
dec
mov
jae
mov
adc
sarl
ret
mov
stc
rorl
cwtl
jp
and
iret
cmp
jbe
mov
outsl
movsl
mov
lock
or
inc
rol
inc
xor
scas
mov
inc
sbb
jmp
mov
mov
add
decl
std
mov
orl
fdivs
cmp
push
or
shll
push
mov
sub
xchg
int
push
mov
repnz
inc
sbb
outsl
sub
hlt
mov
xor
sar
inc
cmp
jb
movsb
cmp
es
das
sbb
and
mov
dec
scas
dec
fsubs
mov
outsb
rcr
mov
or
push
ror
mov
and
jmp
push
ljmp
imul
mov
or
ret
inc
clc
and
or
lret
dec
imul
adc
movsl
and
adc
add
push
add
mov
cmp
jo
lahf
in
sbb
shr
repnz
popa
sti
insl
fucom
xchg
cwtl
and
push
mov
add
xor
pop
jmp
insl
xchg
call
cs
sub
repz
adcl
sub
inc
cld
sub
int
in
inc
decl
jne
or
mov
adc
hlt
hlt
cli
imul
add
addps
dec
cmpsb
lock
or
inc
cmp
aam
push
dec
fmull
mov
adc
add
sub
outsl
les
shll
je
mov
dec
inc
ds
imul
mov
hlt
mov
imul
mov
nop
sub
imul
push
add
sbb
push
jbe
mov
cs
mov
cli
dec
fcompl
cmpsb
add
push
adc
lods
adc
adc
pusha
adc
or
adc
lock
popf
pop
push
fsubr
enter
pop
sarb
loope
dec
sbb
cmc
jle
push
mov
pop
lock
out
hlt
lods
out
push
and
fnstsw
andb
rol
adc
int3
add
push
jl
xor
jo
in
pop
add
clc
dec
cmpsb
xchg
stc
clc
inc
inc
push
xlat
jns
clc
clc
pushf
pusha
mov
shlb
dec
mov
sbb
add
pop
push
pusha
lea
ja
push
loopne
push
push
add
dec
rorl
shll
jbe
pop
das
int
insb
addr16
cmp
adc
or
xchg
out
inc
data16
pop
mov
cmpsb
mov
jbe
push
inc
push
sbb
iret
fs
sbb
mov
push
push
fidivrl
les
ret
pop
or
xor
jnp
and
jmp
rolb
sbb
stc
dec
dec
ljmp
icebp
jo
push
inc
cmpsb
imul
imul
sub
popa
orl
test
dec
mov
test
lret
fs
test
cltd
fistpl
sub
es
pop
inc
push
out
insb
insb
inc
bound
add
pop
or
xor
je
mov
test
lea
xchg
cmp
sbb
fstl
ret
jge
clc
popf
stos
stos
sub
sub
xchg
enter
cltd
pop
idiv
add
push
loopne
call
inc
cmp
jl
popf
cs
gs
jnp
repnz
dec
and
mov
cltd
sbb
nop
xchg
fstp
pushf
pop
inc
test
xchg
std
xor
fistpl
sbb
xchg
mov
inc
sub
lcall
jo
loopne
cmpsb
fstpl
pop
popf
lods
shrb
int
cmpsb
sub
inc
call
rolb
imul
and
jbe
inc
xor
shll
insb
gs
js
movsl
roll
lods
or
movsb
inc
aam
xlat
popf
or
xchg
inc
cs
ljmp
mov
clc
inc
jbe
gs
movsb
imul
dec
pop
lock
popf
dec
jnp
bound
cmp
push
das
lds
popf
or
mov
cmp
mov
adc
push
sub
push
lods
out
xor
jge
add
push
or
movsl
rol
fsubrs
icebp
and
mov
jnp
inc
outsb
fisubrs
test
inc
movl
inc
fmuls
pop
push
mov
fcmovne
mov
adc
push
add
aaa
push
mov
mov
xor
dec
jecxz
jle
cmpsb
push
sub
dec
js
mov
testl
push
push
add
push
cmp
push
pushf
xor
addr16
mov
bound
call
mov
scas
jne
push
add
pop
or
lret
popa
jmp
or
sbb
jbe
add
add
lods
ljmp
inc
or
add
out
push
or
into
mov
adc
sbb
rolb
sub
mov
je
dec
mov
sti
sub
je
or
je
cmp
mov
mov
add
push
mov
jl
and
sahf
mov
jge
pop
and
daa
add
pop
sbbl
mov
pop
lock
push
loop
andb
mov
jb
adc
cmpps
and
inc
push
outsl
insb
call
jmp
mov
add
mov
cmpb
sarb
or
or
inc
inc
fs
daa
rolb
loopne
call
mov
xor
shrl
and
stos
sbb
jp
dec
sbb
sub
mov
adc
out
push
xchg
dec
mov
dec
and
add
imul
ret
in
adc
jmp
add
lods
hlt
sub
clc
dec
mov
xbegin
stc
jge
pop
push
test
adc
in
adc
pop
fcoml
cmc
or
sahf
add
rorb
push
mov
sbb
lea
lret
je
push
stos
ffreep
add
data16
sarl
in
add
push
push
shl
and
cs
lock
aas
and
js
mov
push
inc
adc
lahf
insb
cmpl
fsubrp
dec
jno
jp
xchg
or
push
or
mov
xor
pop
jno
jbe
in
lods
cmp
push
dec
inc
dec
pop
jg
pop
push
xchg
mov
cmpl
and
dec
dec
xor
mov
mov
mov
sbb
cmp
mov
or
jb
movsl
std
aad
mov
shl
mov
clc
lock
enter
mov
pop
or
cmpb
sbb
pusha
test
adc
sub
outsl
shrb
int
and
push
test
adc
cmpsl
hlt
push
andb
lea
push
outsb
roll
shl
imul
xchg
push
adcb
push
pop
shr
xchg
sub
dec
andl
sbb
or
ret
shl
mov
push
cmpsb
add
xor
je
adc
jmp
xor
or
jne
pushl
dec
rcll
and
aam
lods
repz
addb
int3
jge
adc
movsb
add
fisubrl
imul
in
fsubl
push
push
js
fs
repz
sub
call
cmpsb
sub
dec
or
push
jae
imul
mov
cmpsb
insb
outsl
gs
jae
shll
xchg
sbb
push
aaa
mov
adc
aam
pop
push
adc
lcall
add
add
mov
add
hlt
je
add
movb
cmp
fmull
inc
es
pop
xor
push
aaa
in
leave
sub
neg
dec
jp
pop
xor
push
or
xor
rcrl
ljmp
aaa
adc
divl
cmp
je
movsl
cmp
xchg
adc
lret
lock
hlt
sbb
cmp
dec
popa
roll
hlt
ffree
lds
nop
and
aaa
pop
cs
adc
add
clc
or
cs
lret
loopne
pushf
nop
add
add
push
or
imulb
push
mov
push
push
ret
int3
add
or
push
push
dec
xchg
in
jb
pop
push
fucompp
cmp
jae
fisubl
jmp
jae
inc
mov
testb
pop
cmp
in
push
sub
inc
rolb
aam
inc
push
push
andl
push
pop
fcmovnu
pop
pop
fstps
push
sub
add
mov
fmull
mov
add
fldcw
mov
mov
mov
leave
lcall
outsl
es
out
out
out
fcmovnu
mov
jg
fstpt
out
lock
dec
iret
xor
cmp
xchg
scas
std
pop
pop
repz
push
fwait
les
es
mov
add
insl
dec
adc
add
mov
xchg
jbe
fldl
daa
arpl
repz
insl
insl
sub
rcr
jo
loopne
popa
daa
sbb
popf
and
outsb
inc
in
incl
cmpl
jae
xchg
jmp
dec
ds
fwait
daa
jo
mov
int
jae
clc
std
loope
mov
incb
xchg
andl
idivl
dec
jp
fildll
in
lods
cmpsl
scas
es
repz
into
ja
ja
push
in
jnp
adc
pop
filds
int
daa
jns
ror
in
aas
std
add
dec
fs
leave
jg
out
fistl
mov
fiadds
add
push
add
jns
xor
mov
jnp
es
jne
cmpsl
jnp
stos
add
dec
cs
mov
jb
add
push
mov
int3
mov
ja
mov
ja
add
dec
dec
stc
mov
dec
jge
loope
jbe
mov
lcall
mov
inc
insl
add
xor
out
in
or
push
mov
addr16
daa
jns
mov
mov
lods
lods
popf
popf
cmp
xchg
mov
add
push
mov
mov
mov
add
inc
out
hlt
pop
jb
call
adc
mov
loopne
or
daa
pop
aas
mov
pop
inc
sub
inc
pop
filds
mov
sub
dec
out
mov
sahf
jbe
ret
inc
fistl
fsub
mov
pop
jae
pop
sti
dec
lea
out
dec
xor
xor
in
ja
out
mov
sub
outsl
xchg
pop
aaa
out
inc
fninit
xchg
imul
cmp
xchg
subl
jmp
sti
ds
imul
lahf
xor
sub
imul
xchg
mov
aad
in
push
pop
mov
repnz
sahf
and
mov
pusha
adc
movsb
inc
popa
pop
call
scas
or
push
and
repnz
dec
push
add
xchg
leave
popa
outsl
fadds
push
loopne
pop
push
in
aas
jbe
imul
int3
iret
dec
es
cld
pop
fbstp
xor
aas
fistps
adc
lret
rcr
and
sti
fiaddl
pop
dec
add
pop
or
ja
xor
sahf
cmp
jp
dec
orb
cmp
cmp
push
push
mov
das
out
insl
ja
out
jmp
add
out
add
pop
ja
xlat
int3
xor
xor
fsubl
pop
dec
and
iret
pop
cld
es
out
sbb
add
xchg
sbb
aas
lahf
leave
or
rcr
jge
or
or
inc
xchg
out
or
mov
mov
leave
in
jmp
fists
fldln2
xchg
loope
outsb
mov
fdivr
addb
loop
cli
decl
add
sar
cmp
mov
and
movsl
jne
add
xor
pop
incl
pop
fs
dec
pop
and
je
imul
out
jmp
popa
jne
je
gs
gs
cs
js
xor
xor
in
jbe
dec
aas
popa
arpl
outsb
cmp
outsl
data16
ja
fwait
jg
rol
iret
mov
mov
into
icebp
call
cmp
ret
aaa
daa
push
push
dec
cmp
cs
pop
cld
repnz
push
call
das
sub
jne
das
aas
dec
add
gs
push
adc
js
push
dec
ja
ljmp
jbe
std
sub
andps
push
popa
data16
arpl
loope
lock
imul
into
jae
jne
fs
or
dec
shrb
insb
xor
sbb
inc
rcr
aaa
dec
outsl
or
imul
fisttpl
imull
inc
jb
popa
je
push
push
mov
xchg
cmp
outsl
pop
dec
popa
pushf
sbb
push
into
jnp
sbb
dec
cwtl
je
push
push
dec
push
push
push
pop
xchg
mov
or
je
jbe
fldl
sub
push
add
ljmp
jp
insb
adc
sti
popa
das
xor
xor
inc
arpl
jo
inc
outsb
arpl
int3
push
mov
dec
inc
addr16
and
cltd
insl
inc
inc
lods
popa
jne
mov
out
pop
mov
aaa
scas
imul
lods
stc
mov
adc
imul
loope
jo
cmp
imul
cmc
das
jbe
insl
jae
xchg
sahf
insb
xor
ja
jb
pop
pop
loopne
pusha
xorb
jo
cmp
das
sub
and
das
xor
negl
or
inc
inc
or
cmp
pop
ja
sub
jb
sbb
sbb
sbb
mov
and
push
inc
popf
add
xchg
or
adc
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
subb
stc
jg
and
add
fs
push
dec
jne
je
inc
jns
ljmp
mov
imul
bound
jae
daa
push
gs
jo
ficomps
push
cmp
dec
sbb
popa
outsl
xor
out
dec
push
fs
or
data16
stc
mov
addr16
push
push
gs
inc
jne
jb
outsb
je
xor
jae
fs
outsl
dec
shlb
mov
scas
or
inc
jb
adc
jmp
fildll
mov
gs
popa
outsb
fs
xor
mov
fidivl
dec
jo
insb
inc
arpl
loopne
insl
mov
fs
jo
xlat
in
add
fldenv
clc
subb
outsb
inc
adc
jns
jnp
jns
push
mov
adc
xor
inc
imul
dec
bound
xor
add
inc
in
inc
outsl
inc
or
mov
es
dec
insl
clc
das
sbb
fldl
and
jae
xor
xchg
rcrl
outsb
jo
je
pop
int
aaa
addr16
imul
and
popa
je
in
idivb
fdivs
ja
xchg
pop
jne
adc
imul
pop
inc
js
mov
insl
or
xlat
in
cmp
adc
insl
push
lret
cmp
jbe
mov
popa
movups
ret
gs
ja
jae
cmovae
mov
outsb
push
xor
sub
mov
jb
or
neg
jnp
enterw
sbbl
fwait
loopne
es
pop
push
inc
outsl
jg
mov
jo
jo
imul
insb
insb
sti
jnp
arpl
aas
aas
xor
inc
push
inc
pop
dec
inc
pop
out
sub
rcll
pop
leave
lret
push
mov
lcall
clc
iret
cmpsl
mov
and
outsb
push
xchg
push
sbb
ret
rorl
dec
or
je
fildll
dec
mov
cltd
push
out
mov
jno
mov
rcrl
ja
pop
inc
xor
mov
or
fisubs
jg
idivb
incl
or
jae
out
lcall
xchg
push
xorl
daa
adc
dec
push
pop
or
and
sub
or
push
sbb
or
call
pop
sbb
adc
push
cmp
or
aaa
add
mov
push
push
xor
adc
push
sub
std
lcall
or
adc
push
sbb
or
adc
add
add
or
adc
sti
adc
adc
es
or
dec
pop
push
lock
mov
cmp
outsl
addb
sbb
rdpmc
sbb
push
das
or
or
xor
cmp
repz
and
sub
inc
or
push
mov
pop
or
add
fistl
push
or
enter
imul
push
or
adc
and
or
inc
add
lock
pop
or
lock
sar
mov
cs
push
add
gs
pop
and
sbb
loopne
mov
or
sbb
cmp
movsb
rclb
cmp
lock
insb
add
pop
mov
shl
insb
sti
aaa
adc
sbb
test
or
or
or
pop
or
pop
clc
fbstp
or
lock
adc
push
or
mov
jno
sbb
add
or
cmovns
sub
mov
and
and
and
add
push
sbb
push
or
sbb
pop
push
adc
sbb
sbb
pop
insl
cltd
sbb
jge
cmp
add
addl
lock
cmpsb
mov
sbb
adc
add
mov
dec
or
popa
or
test
pop
add
loop
cs
lcall
cld
add
pop
xchg
push
add
or
push
rcll
and
jno
fdivrl
mov
or
dec
adc
adc
pushl
data16
jo
add
mov
mov
loopne
mov
or
push
adc
inc
pop
jl
pop
inc
sbb
inc
pushf
lock
sti
addr16
and
cs
add
add
inc
pushl
add
or
lock
adc
inc
dec
add
add
loopne
push
and
ss
imull
pusha
data16
pop
dec
or
lcall
add
pminub
insl
outsb
popa
sbb
jl
fisttpl
xor
test
adc
add
add
jo
add
out
addb
pop
and
add
loopne
aaa
and
cs
popa
je
imul
or
fwait
nop
ja
dec
fs
add
dec
and
rcr
dec
clc
xor
or
mov
push
outsl
push
aad
push
add
out
or
pushf
and
rcrb
repnz
jl
es
lock
inc
sti
repz
add
add
add
add
jne
pusha
mov
lea
push
or
jmp
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
popa
xor
ret
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
