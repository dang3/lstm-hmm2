pop
fmuls
mov
ret
nop
mov
icebp
insb
ljmp
call
movl
pop
sbb
fstpl
and
add
sub
mov
add
setb
sub
addr16
lahf
in
adc
mov
mov
sbb
push
mov
ret
pop
pop
testb
push
xor
mov
rorb
add
stos
mov
adc
hlt
xchg
jg
out
ficoms
sub
call
or
test
mov
jno
cmp
xor
daa
add
dec
and
push
call
lea
dec
xor
call
sub
mov
pop
jmp
inc
pop
inc
push
inc
lcall
xor
ja
mov
push
outsb
test
movsb
pop
pop
cld
fidivrs
push
call
add
add
push
sbb
fsubs
push
aaa
mov
jne
inc
cmp
test
fwait
mov
fisttpl
push
push
jbe
in
sbb
push
cmp
push
push
sbb
jo
enter
mov
fucomi
or
xor
mov
mov
lcall
and
cmp
mov
sbb
or
add
dec
sub
sub
xlat
pop
push
and
adc
popf
imul
jl
mov
add
enter
ss
je
push
push
cmp
push
xor
fistpl
push
push
sbb
mov
sub
lea
sub
pop
sbb
jo
in
jo
jb
in
pop
and
in
add
pushf
cmp
jne
mov
fistl
and
je
lock
sahf
lods
mov
fs
lock
or
push
push
and
mov
mov
mov
add
das
dec
push
mov
mov
mov
add
adc
sub
mov
mov
push
push
mov
sti
test
xor
push
sbb
cmp
sbb
aaa
pop
mov
add
sub
mov
aas
in
sbb
pop
sub
cltd
sbb
jp
lcall
test
sbb
cmp
jne
lea
mov
outsl
cli
clc
add
mov
mov
in
and
adc
dec
enter
ret
add
inc
jb
inc
adc
adc
daa
pop
sub
sub
add
push
sbb
sbb
lea
pop
push
mov
push
pop
jg
jae
insl
mov
push
jl
xchg
fadds
add
sub
lea
push
in
cltd
ret
jo
sbb
js
and
add
sbb
mov
mov
xor
mov
cmp
cmp
dec
mov
xor
ljmp
cmpsl
je
daa
adc
mov
jmp
lea
shl
sub
loope
lods
jecxz
adc
sub
pop
nop
and
test
int
pop
cmp
xchg
cmp
inc
push
xor
sub
das
sub
mov
fxch
push
push
loope
adc
dec
add
push
loope
xor
or
or
mov
mov
jmp
data16
nop
add
fucomi
out
mov
mov
mov
add
dec
jne
sub
ret
add
mov
and
xchg
pcmpeqb
test
mov
push
xchg
pop
les
insb
and
out
cmp
test
jbe
shlb
cltd
and
adc
jbe
push
push
or
mov
dec
inc
push
dec
push
je
pop
loopne
pop
rolb
sbb
inc
outsl
or
sub
incb
push
pop
daa
cmp
jne
mov
inc
mov
jmp
fdivs
loope
es
arpl
sub
sub
fidivs
pop
mov
sbb
jg
lds
pop
pop
dec
xor
out
cmpsb
sarl
push
cmpsb
push
jmp
jae
jo
sbb
call
cltd
mov
sbb
loopne
ret
adc
inc
cmp
jl
imul
cmp
cmp
pop
lea
into
in
push
add
adc
shl
dec
add
stos
jo
inc
lcall
repz
adc
xchg
shll
js
add
push
repnz
cmp
fisubs
add
and
xchg
sbb
xchg
js
je
inc
push
jge
xchg
int
mov
push
lahf
push
xchg
out
xchg
push
xchg
orl
cmp
stc
xchg
push
or
fwait
int
push
mov
or
ljmp
push
cmp
push
cmp
cld
push
popa
push
pop
leave
ljmp
rorl
je
or
xlat
cwtl
cmp
push
data16
push
sbb
cmp
push
lret
jo
ss
icebp
push
cld
mov
mov
mov
daa
mov
or
or
mov
jmp
mov
add
xchg
pop
pop
mov
jo
mov
or
aad
mov
sahf
sbb
dec
mov
enter
or
int
mov
push
stc
int
insb
or
movsb
imul
mov
push
fdivl
push
push
and
and
xchg
xlat
leave
sarb
or
inc
mov
sub
testl
push
add
mov
data16
sub
xor
adc
test
sbb
daa
push
cmpsl
jnp
in
cltd
fadds
add
lock
cmp
orb
mov
xor
inc
jle
cwtl
jae
in
and
push
mov
jo
je
movsb
lahf
push
push
inc
and
add
or
pop
out
xchg
dec
or
add
enter
and
mov
cld
and
hlt
xchg
xchg
xchg
xchg
lock
call
xchg
loopne
fcom
xchg
xchg
xchg
xchg
ror
enter
xchg
xchg
mov
xchg
xchg
xchg
xchg
js
addb
mov
nop
xchg
cwtl
inc
inc
inc
inc
pushf
mov
inc
inc
lods
mov
mov
mov
xor
dec
xchg
pop
rorl
je
mov
push
sbb
cmpsl
pop
push
ret
and
push
pop
jnp
neg
sbb
pop
add
ret
int3
add
add
sbb
jge
or
sub
add
jae
push
mov
or
loope
mov
fisttpll
call
sub
and
push
fs
ficomps
adc
pop
jnp
xchg
mov
gs
push
pushf
in
stc
insb
xchg
sbb
or
in
sbb
adc
mov
or
xor
mov
sbb
mov
jecxz
sbb
xchg
insb
dec
sub
mov
std
xor
jae
fcmovu
mov
lea
lahf
xor
pop
int
pushf
push
add
xor
sub
mov
ljmp
mov
cmpb
jne
inc
or
add
or
stc
adc
jbe
aam
dec
movsb
std
sub
testb
icebp
movzwl
jmp
jmp
and
jmp
push
pop
push
push
push
scas
adc
mov
push
imul
rcrb
inc
or
jo
scas
mov
rorl
fidivs
dec
inc
and
mov
add
cmc
add
xor
mull
mov
add
add
and
and
adc
loop
out
push
inc
movhlps
fadds
mov
xor
jecxz
or
mov
mov
nop
inc
adc
std
pushaw
jne
lock
pop
ret
movd
fs
push
adc
sbb
or
pusha
outsb
adc
and
mov
loope
jle
mov
sbb
sbb
add
fwait
scas
imul
sbb
xlat
xor
shll
pushaw
pop
sub
push
pop
dec
sbb
inc
fwait
cmpsb
imul
dec
xlat
sub
sbb
adc
imul
cmpsb
imul
imul
add
adc
add
in
sbb
xchg
repz
jmp
adc
shl
test
dec
lcall
out
jno
jo
je
popa
jns
gs
daa
jnp
aaa
or
outsl
outsb
fs
xor
xor
and
jmp
das
arpl
fs
and
daa
inc
dec
dec
push
push
inc
inc
add
add
jbe
sti
mov
or
dec
add
dec
add
push
pmulhw
jg
cs
insb
or
je
outsl
jb
arpl
add
push
sti
jg
mov
outsb
push
xor
popa
and
pop
push
jb
addr16
xchg
outsb
pop
arpl
insl
and
insb
gs
fadds
fwait
push
pop
arpl
pop
mov
popa
je
fs
bound
jo
push
test
arpl
add
lret
pushl
cmp
xor
popa
xor
bound
arpl
cmp
cmp
mov
cmp
xor
xor
ss
xor
sbb
insl
jns
arpl
aaa
add
xor
gs
mov
cmp
xor
xor
jg
mov
cmp
cmp
andl
mov
xor
push
nop
add
add
add
and
cmp
fucomp
add
pop
mov
int
mov
imul
adc
outsb
outsb
outsl
je
bound
std
fildll
mov
imul
insl
outsl
inc
cs
ret
incb
mov
adc
or
orb
mov
mov
orb
andl
into
mov
sub
in
daa
sbb
jnp
mov
jle
add
arpl
stos
push
sti
das
inc
dec
add
add
loopne
mov
fistpll
in
add
leave
arpl
nop
movups
adc
fs
add
xor
mov
add
pop
push
leave
mov
js
mov
lock
repnz
push
add
push
or
insb
repz
fsubrs
push
je,pn
js
fidivrl
fcomps
sbb
jb,pn
and
xchg
and
push
imul
add
es
cmpsl
insb
nop
out
and
xor
stc
push
mov
loopne
movsb
jnp
push
shrb
jbe
jo
inc
push
daa
lock
pusha
daa
xor
data16
das
dec
add
mov
loope
jne
outsl
arpl
dec
push
ja
dec
sbb
out
enter
inc
dec
add
mov
outsl
ffree
push
xor
stc
dec
add
sbb
add
mov
leave
add
movl
mov
mov
fs
addb
cmpsb
jl
push
mov
aad
inc
xor
in
lea
lea
push
out
sbb
add
inc
je
enter
notb
push
call
inc
cmp
je
add
lods
mov
push
and
pusha
sbb
push
mov
push
test
insb
mov
cmp
xor
mov
jne
dec
out
push
mov
push
push
pop
push
xchg
jae
test
or
xchg
sarl
pop
jno
sub
aas
mov
push
aas
push
call
insb
jb
jo
push
sbb
and
sub
test
cmc
push
push
sub
sbb
fs
es
stos
mov
jl
loope
mov
pop
push
dec
adc
adc
and
push
jge
repz
push
mov
inc
mov
mov
lock
shlb
cmpl
jbe
fs
inc
mov
jns
dec
and
fcoms
mov
jae
dec
add
xchg
xor
and
dec
add
mov
mov
push
push
jne
test
shl
pop
jl
cmp
adc
inc
mov
mov
iret
add
and
and
and
ja
cmp
sbb
in
out
or
and
mov
inc
lcall
sub
imul
out
insl
aas
sbb
xchg
test
xor
push
jg
add
cmp
in
mov
push
stc
mov
shlb
jnp
enter
bnd
and
inc
push
sbb
mov
xchg
in
mov
mov
push
mov
dec
ds
xor
add
mov
in
xor
dec
and
and
fwait
lea
jge
lods
mov
adc
add
cmpsb
xchg
xchg
add
add
and
push
insl
rcrl
cmp
jl
inc
mov
add
je
mov
jne
mov
xchg
xor
js
shl
mov
sub
inc
sbb
mov
inc
add
jb
add
lahf
xchg
xor
rolb
and
es
je
icebp
sbb
pop
lret
lock
pop
cld
jns
and
cmp
jno
sbb
and
and
or
xor
push
push
mov
lea
shl
nop
ret
push
rclb
repnz
test
or
pop
dec
pop
pop
inc
or
pop
xor
enter
push
dec
xor
and
jg
or
push
xor
push
enter
xor
mov
inc
sbb
sub
inc
xor
pop
xor
incb
jl
and
add
sub
add
popa
pop
mov
sub
sbb
mov
out
pusha
aad
add
les
out
lock
hlt
cmp
push
push
repnz
cmp
cmp
cmp
popa
jbe
sub
inc
into
adc
fisubrs
inc
pop
pop
xchg
push
sbb
ret
fs
aaa
mov
pop
xor
sbb
fwait
mov
js
es
mull
push
daa
flds
out
jo
adc
jbe
cmp
or
adc
shll
cmp
out
jp,pt
cmp
aas
mov
sbb
mov
test
pop
pop
sub
pop
mov
push
cmp
push
lret
and
sahf
sbb
enter
cmp
cmp
mov
mov
ss
pop
add
repnz
inc
ret
cs
fsts
pop
push
mov
xchg
ljmp
push
outsl
mov
mov
jno
cvttps2pi
mov
push
shll
sahf
inc
add
mov
jnp
inc
mov
mov
test
mov
mov
ret
aad
loope
mov
cmp
inc
or
shrb
inc
das
push
iret
dec
lcall
add
add
and
cmp
inc
shrb
jns
dec
clc
dec
jmp
cmp
scas
push
or
sub
in
dec
cmp
push
or
inc
sbb
loope
lret
pop
test
rorb
in
sbb
jle
lea
sub
stos
sub
clc
das
dec
xchg
push
adc
ret
add
out
jl
push
jle
pop
push
jl
movb
dec
push
clc
rorl
pop
mov
sub
js
mov
jl
and
adc
dec
xor
and
insb
mov
fs
test
xor
push
call
or
add
test
or
ret
dec
push
insb
loopne
or
out
loope
or
or
mov
push
addr16
pop
push
pop
xor
fistpl
pop
add
jbe
push
mov
mov
add
or
adc
rcrl
inc
adc
enter
or
lea
cmp
pop
mov
mov
inc
sub
inc
push
dec
idiv
sub
mov
sub
int
pop
inc
arpl
push
mov
inc
jne
insb
add
xor
mov
push
notb
hlt
or
dec
and
aaa
jb
cmpsl
jl
mov
mov
es
push
push
pop
mov
cli
faddl
adc
pushf
movsb
enter
sbb
es
xchg
fdivrs
aaa
imul
pop
dec
cwtl
or
sbb
ret
push
or
lss
enter
test
popa
and
mov
iret
xchg
data16
lret
rol
insb
xor
jp
test
out
inc
js
push
and
pop
xchg
cwtl
sub
dec
popa
xor
cmp
xor
xchg
mov
jo
push
lods
mov
and
adc
push
mov
jb
lret
jg
jl
dec
or
subb
push
inc
mov
jns
daa
movsb
mov
adc
inc
insl
add
call
and
and
inc
xchg
aas
sbb
leave
or
js
pop
adc
xchg
mov
push
mov
xchg
xchg
mov
sbb
imul
push
dec
stos
push
push
sbb
jle
fs
or
xchg
mov
push
gs
lods
jno
add
fs
movsb
xor
ja
nop
inc
jbe
mov
adc
xor
js
xor
sbb
adc
aaa
and
test
inc
or
and
mov
push
or
js
addb
inc
cmp
cmpb
test
test
or
xchg
sub
add
mov
push
std
fs
and
enter
sbb
adc
or
ss
mov
add
mulps
mov
adc
nop
inc
ss
adc
add
int
das
push
aaa
into
adc
cmp
es
push
call
es
das
or
or
adc
movsb
pop
and
mov
dec
adc
push
and
and
mov
xchg
lret
ljmp
mov
paddsb
mov
and
dec
pusha
xchg
data16
sti
comiss
jp
mov
sub
jnp
mov
cmp
iret
adc
loopne
and
push
or
xorb
fmull
cmove
sub
outsl
xchg
push
sub
sub
rolb
stc
cmpsb
mov
inc
in
or
lock
and
lea
mov
pop
pop
in
adc
cli
cmp
or
xor
adc
add
push
mov
sbb
sub
cmp
push
call
push
mov
and
push
faddl
dec
in
or
cmp
add
test
dec
push
and
outsb
or
and
pop
and
or
nop
or
or
mov
icebp
or
inc
pop
mov
push
cltd
sub
sbb
add
adc
mov
lds
sub
jl
in
nop
pop
pop
add
in
add
pop
add
ljmp
das
inc
add
xchg
or
aad
or
in
or
inc
out
xor
test
inc
cmp
leave
inc
add
cld
or
push
adcb
pop
mov
sub
sbb
push
movsb
sub
inc
mull
das
fistl
push
call
lock
mov
sbb
pop
in
dec
sbb
lods
mov
or
dec
push
and
mov
mov
insl
orl
and
mov
inc
and
loopne
js
flds
jns
or
or
add
push
dec
je
add
cmp
and
aaa
ret
sarl
xchg
push
cmpsb
enter
push
add
xor
iret
in
sub
lahf
cmpsb
pop
and
pop
add
inc
dec
adc
xchg
pop
push
enter
mov
pop
sbb
cmp
jb
dec
lods
mov
pop
repnz
or
mov
nop
pop
jb
jl
mov
and
test
js
push
push
aad
stc
sbb
adc
flds
push
sbb
das
push
push
jbe
or
sub
push
push
aaa
jecxz
fnstsw
adc
pop
sub
cmp
jbe
mov
and
dec
jb
sbb
add
nop
iret
pusha
jne
pusha
pusha
iret
push
xorl
pusha
add
xor
nop
add
adcb
les
and
and
mov
test
mov
nop
mov
imul
dec
jo
fwait
adc
bound
dec
inc
push
leave
orb
dec
js,pn
pop
inc
mov
dec
jbe
lahf
rorl
sbb
xchg
in
fcoms
dec
mov
fmull
add
mov
or
mov
jbe
xchg
fs
jp
data16
adc
push
out
mov
mov
cmpsl
add
outsb
push
mulb
call
in
inc
mov
mov
inc
lret
push
js
sahf
sbb
jl
je
inc
decl
push
dec
je
xchg
adc
je
sub
xchg
lock
mov
mov
xor
mov
jne
mov
dec
inc
fwait
loope
add
pop
xor
push
mov
dec
shrl
push
or
add
inc
inc
add
rorl
mov
cwtl
or
push
push
xchg
ja
arpl
push
jo
decl
push
push
push
pop
or
xchg
push
lods
mov
mov
out
insl
and
mov
cmp
push
pop
inc
adc
sbb
push
push
movb
cmp
dec
mov
scas
push
and
jo
sarb
aad
sbb
sbb
push
cmp
jnp
dec
arpl
dec
inc
aaa
jge
insb
aad
push
sub
outsl
push
inc
cs
jecxz
push
iret
fsubrl
push
add
mov
mov
jb
iret
xchg
fsubrl
ss
sub
pop
ret
inc
leave
out
cmp
or
out
cltd
in
sub
or
fiadds
lret
sahf
mov
push
mov
movsb
mov
dec
sahf
nop
push
inc
psrlq
fwait
push
insb
pop
pusha
ret
mov
jmp
lcall
lret
clc
mov
add
push
mov
insb
mov
sbb
dec
mov
inc
repz
pop
ljmp
mov
sub
pop
dec
sahf
xor
pop
decw
inc
pop
mov
jecxz
jl
jl
ret
jmp
xor
clc
movb
mov
call
rol
pushf
pushf
xchg
insb
pushl
cmc
jg
fs
inc
shl
rorb
jbe
inc
mov
lret
loop
lret
mov
push
movsbl
sub
data16
mov
shr
adc
pushl
dec
clc
test
adc
jnp
and
inc
sub
clc
adc
xchg
xor
push
test
xor
pusha
stc
jmp
jbe
jg
lret
add
rol
dec
addr16
sub
sub
add
fisubs
test
add
mov
ret
sarb
stc
ret
pop
mov
pusha
mov
popf
sub
xlat
mov
mov
sub
pushf
sub
inc
jl
push
adc
stos
sbb
dec
nop
fwait
movsb
add
xor
scas
add
cmp
int
and
jmp
add
jns
sahf
add
or
js
inc
sahf
adc
push
call
mov
jl
push
cmp
outsb
sub
mov
adc
imull
or
pop
xor
dec
push
jae
mov
sti
mov
shl
pop
fadd
and
push
mov
mov
pop
or
mov
jmp
cltd
and
add
sar
adc
fstpt
push
jg
js
cmp
aad
addr16
cmp
push
clc
push
and
outsl
nop
in
push
push
hlt
dec
scas
push
andb
fsts
push
push
fcomp
and
pop
rclb
and
rcl
jno
inc
inc
dec
inc
xchg
xlat
lock
cmp
mov
data16
sbb
mov
movsl
fwait
add
pop
je
lcall
push
adc
push
testl
or
and
aas
pop
jl
xchg
pop
add
mov
and
test
lods
cmpsl
adc
cmp
push
jo
int3
xchg
add
mov
mov
inc
xchg
jmp
rolb
xor
and
mov
sbb
clc
dec
out
adc
push
mov
mov
cmp
lods
clc
mov
je
insb
sub
mov
cmp
adc
mov
jnp
mov
push
or
xchg
xchg
and
inc
pop
ja
test
jb
mov
enter
fnsave
or
sub
push
pushf
push
push
and
or
mov
jle
test
sbb
mov
add
jg
mov
mov
cmp
fimuls
pop
push
pop
ret
sub
movsb
hlt
ret
ffree
and
sub
inc
movsb
add
push
lahf
xor
pop
orb
mov
add
inc
sbb
lret
fwait
mov
add
or
mov
xchg
mov
xlat
subl
or
mov
sbb
in
je
lods
add
push
cmp
xor
mov
mov
outsb
scas
mov
xor
and
cmp
push
xchg
arpl
jp
mov
popl
sbb
xor
jb
push
fstpl
push
fs
mov
mov
mov
es
out
add
mov
pop
cs
or
mov
pop
pusha
ret
adc
adc
std
adc
dec
mov
mov
lods
push
sti
mov
bound
je
push
cmp
mov
sub
in
mov
mov
and
sub
jp
push
inc
cmp
sub
mov
into
sbb
or
loope
mov
sub
cmpsb
pop
inc
enter
in
and
push
in
pop
and
or
les
aam
cwtl
push
out
rcll
jnp
lock
or
inc
lock
pcmpeqw
xlat
inc
cmp
push
push
ficoms
jns
lea
mov
push
sbb
call
and
int
cs
enter
add
adc
pop
nop
lret
test
dec
mov
arpl
repz
cmp
rorb
cmpsl
mov
push
rcr
pusha
rolb
pop
jb
sbb
jns
push
lods
cmp
incl
inc
jle
sbb
sbb
es
xchg
jle
mov
sub
xlat
pop
aam
ret
inc
push
sbb
xor
xlat
sub
or
testb
mov
in
mov
fidivl
dec
dec
push
or
ss
jo
clc
mov
and
cwtl
lock
jo
nop
mov
imull
pop
sub
mov
add
sbb
xchg
mov
or
jne
push
pushf
mov
addr16
addb
shll
push
out
das
addr16
mov
sub
push
jnp
and
sbbl
fld
cmp
lahf
add
lock
cwtl
sbb
xor
mov
mov
cmp
jecxz
scas
add
lret
outsl
xchg
js
faddl
adc
push
call
adc
jns
aad
test
jp
add
and
mov
mov
cmp
jg
adc
dec
add
test
scas
outsb
cmp
cmp
mov
adc
ret
ds
jno
addr16
inc
test
pop
xchg
roll
push
and
xor
and
int
sbb
push
mov
xor
xchg
mov
fcoml
add
mov
loop
call
mov
aad
add
cmpsl
mov
lret
dec
int3
sbbb
add
hlt
fidivs
pop
mov
cs
push
push
mov
or
test
adc
jl
add
enter
jo
inc
stos
scas
cmp
and
adc
repnz
fstp
push
add
lods
sub
push
mov
xchg
ds
or
punpckhdq
push
aaa
mov
test
sub
pop
shlb
and
cmpsb
sbb
es
mov
je
lea
push
int3
mov
adc
pop
rolb
movb
jmp
jae
add
fabs
pop
and
lahf
inc
pop
adc
fucomi
push
adc
push
dec
rcrl
pop
push
push
adc
loope
out
lds
shrl
fimull
cmp
lret
ljmp
mov
into
push
xlat
pop
xor
sub
cmp
inc
icebp
repnz
add
inc
and
and
pop
jp
jmp
lcall
push
int
jnp
xlat
movb
adc
loop
aas
sub
nop
aad
jmp
lds
jmp
call
movzbl
jmp
cmp
stos
mov
mov
push
pushf
pusha
insb
cmc
test
fmul
jmp
add
fstpl
pusha
jmp
call
test
jb
popl
mov
cmp
jmp
pop
push
xor
pusha
mov
sbb
in
inc
inc
rolb
stos
outsl
lcall
mov
cmp
pusha
jne
or
loopne
insl
out
out
mov
push
push
lahf
sarb
sarl
pusha
xor
les
push
test
add
test
xchg
mov
or
decb
mov
pushf
mov
mov
cmp
inc
ret
shr
cmpsl
cmp
jo
faddl
add
outsb
fstl
bound
push
pushf
or
or
scas
lret
les
inc
push
and
fwait
mov
movb
sbb
mov
mov
js
and
inc
lret
pushf
mov
jo
push
pusha
sub
ja
jg
mov
or
fsubr
cmp
or
add
push
sub
aas
aas
jo
aaa
ret
bound
inc
rcr
xchg
out
loopne
fidivs
xchg
adc
jbe
inc
mov
pushf
adc
cltd
repnz
les
ret
decl
sbbl
bts
stc
or
jecxz
jle
rcr
pushf
mov
icebp
pop
gs
lods
shlb
fwait
mov
push
call
mov
aad
lret
es
test
inc
dec
dec
mov
rcl
lret
or
adc
jmp
pusha
dec
push
pop
sti
outsb
mov
jl
add
shr
outsb
jne
ficoml
fisttpll
cmp
ja
imul
cmp
jmp
icebp
jbe
das
aam
div
mov
clc
in
insl
mov
outsl
std
or
add
lods
jne
lds
cmc
outsb
mov
inc
ja
jp
cmp
mov
inc
pusha
in
pop
pop
push
sub
pmaddwd
cmp
or
mov
test
fdivl
and
rcr
rol
mov
mov
cld
ljmp
and
add
mov
btr
clc
outsl
clc
mov
sbb
mov
jmp
pop
jecxz
outsb
or
or
xchg
mov
int
lea
pop
notl
mov
xor
not
or
pop
fistpll
pusha
push
popf
pcmpgtd
out
pop
dec
call
hlt
push
fimuls
movsb
out
push
pop
mov
lock
jmp
push
pushf
mov
xor
into
out
pusha
mov
or
xor
in
inc
dec
lods
and
outsl
adc
push
jb
cmp
or
cmp
or
cld
cmpsb
rorb
adc
add
mov
xorb
pop
mov
cltd
loopne
add
push
push
mov
test
mov
ret
sbb
fwait
sti
push
arpl
ret
mov
mov
and
sub
in
les
enter
call
out
jmp
movl
rorb
mov
add
adc
ret
jo
or
adc
cmp
adc
cmp
sbb
adc
adc
icebp
and
bound
mov
inc
mov
mov
push
push
mov
sbb
jl
jnp
sbb
in
mov
or
mov
push
jne
or
inc
cmp
mov
or
rorl
push
out
mov
add
lret
ds
and
rep
adcb
out
pop
icebp
loopne
pop
iret
lds
sti
push
push
fwait
lcall
add
incb
adc
shrb
sub
decb
xchg
mov
jmp
inc
xorb
mov
dec
xor
mov
xlat
pop
push
mov
fsts
push
or
pop
test
scas
inc
adc
insb
and
mov
fs
lahf
lock
push
push
push
dec
daa
iret
xchg
push
push
push
push
push
push
dec
push
jns
call
push
fisttpll
es
cmp
add
jge
out
jle
lret
xor
dec
add
stc
push
sub
jns
cmp
pop
ja
add
sti
clc
mov
pop
mov
sbb
fistpll
xor
test
sub
js
mov
inc
data16
xchg
inc
pop
ljmp
add
mov
loopne
mov
or
or
sahf
push
subb
mov
xor
aad
add
add
or
icebp
roll
adc
mov
push
ret
lds
jb
js
nop
sub
sbb
jmp
ss
push
xor
dec
or
fsubl
mov
cmp
xchg
add
mov
outsb
push
fwait
test
inc
js
mov
sub
mov
cld
bound
clc
gs
outsb
sbb
test
mov
sub
adcb
jae
jno
jmp
pusha
pop
jge
mov
pushf
gs
neg
lcall
and
push
ja
push
inc
push
jmp
inc
sbb
dec
mov
mov
das
and
jb
or
fstps
xor
sub
fstps
push
push
and
sbb
nop
xor
add
inc
in
scas
xor
add
push
xchg
test
ficompl
fidivs
xchg
sbb
insb
pop
pushf
inc
mov
sub
dec
test
mov
fisttpll
sbb
lret
xor
pop
push
cmp
jl
insl
jnp
sti
cmp
jg
sub
add
cmp
push
cmp
sahf
in
sahf
xor
ss
cs
sahf
in
xor
cmp
in
sahf
in
cmp
cmp
sahf
in
sahf
xor
xor
sahf
in
xor
pop
jl
in
sahf
in
xor
cmp
sahf
daa
and
das
aas
or
pop
pop
jne
jnp
mov
gs
xor
addr16
adc
test
pop
push
or
xor
xchg
into
mov
adc
xchg
inc
inc
xor
fbstp
sbb
ret
psubsw
push
pushf
sbb
fucomp
or
dec
jg
dec
dec
dec
or
imul
jle
cmp
lock
jae
and
push
sbb
cld
in
or
mov
add
loopne
dec
push
and
add
add
dec
jle
push
fimull
push
and
jmp
sti
cmp
mov
jmp
xor
mov
xor
jae
and
movsl
push
int
xchg
push
dec
adc
mov
and
dec
and
arpl
aaa
adc
sub
outsb
xor
xchg
lea
pushf
jge
sti
pop
jmp
outsb
and
sub
jbe
sbb
les
sbb
add
xor
testl
inc
pop
sub
bound
aam
mov
sysenter
ret
xor
lods
cwtl
add
repnz
push
mov
or
sub
pop
mov
clc
aad
lock
mov
sarb
jp
lea
prefetch
leave
jbe
arpl
push
fwait
dec
fnstcw
push
push
adc
push
adc
dec
mov
sbb
sbb
or
popa
mov
dec
dec
push
loope
xchg
fimuls
ss
push
jmp
pop
adc
idivb
or
call
sbb
lods
jmp
mov
pop
push
push
aad
push
pop
aas
mov
lock
test
mov
adcw
fildll
jmp
add
add
push
cld
inc
adc
mov
out
sub
dec
pop
sub
lret
pop
sbb
ss
daa
aaa
xor
xor
stos
mov
mov
adc
push
push
shll
xchg
or
enter
pop
pusha
cs
push
and
inc
mov
dec
repz
je
ds
xor
dec
inc
mov
inc
dec
enter
lea
xchg
shrb
call
sbb
dec
dec
mov
in
inc
test
cld
enter
pusha
dec
dec
movsl
aas
dec
mov
movsb
mov
in
inc
lcall
add
cmpsl
iret
adc
add
or
dec
rolb
adc
sbb
jl
add
mov
cmp
adc
ljmp
dec
and
jecxz
inc
out
movsb
enter
fwait
mov
jle
je
movb
add
aad
sub
je
xchg
jg
push
xchg
sbb
inc
xchg
adc
sub
out
adc
xchg
dec
les
dec
in
adc
cli
mov
fdivrs
ljmp
sti
push
or
jmp
rclb
push
inc
push
push
daa
fildll
mov
mov
jne
or
dec
sub
das
call
mov
pop
adc
or
ja
add
test
mov
sub
sub
cmp
lcall
sub
adc
mov
push
adc
dec
add
data16
jg
and
mov
fsub
ss
pop
cmp
dec
cmp
enter
sub
jl
loope
mov
push
sub
jb
jle
movsb
mov
loope
flds
inc
jl
nop
add
mov
push
and
nop
js
loopne
inc
mov
cmp
dec
dec
mov
mov
xor
add
jo
ret
xorl
xlat
lret
ja
push
leave
adc
add
inc
sbb
mov
adcb
sbb
imul
das
cwtl
in
xchg
inc
popa
push
dec
leave
mov
adc
cmovo
add
mov
sbb
and
jne
cmp
add
mov
orl
cwtl
jne
or
xchg
aas
mov
xor
mov
mov
mov
push
adc
xor
in
adc
xor
sti
fisubrs
out
loopne
pop
mov
sti
xor
xor
imul
jne
aam
adc
mov
jb
adc
pop
push
push
add
or
mov
jbe
mov
das
outsb
add
andb
dec
and
shr
les
mov
adc
xor
bound
jo
jp
xchg
mov
jbe
pop
sbb
or
xor
pop
ret
addb
cmp
inc
push
inc
cmp
sub
xchg
sbb
adc
xchg
clc
subl
xchg
sbb
add
sbb
sub
cmp
mov
sbb
push
push
push
jno
fiaddl
inc
jl
sub
nop
sbb
pop
or
cs
or
push
or
andb
mov
push
xchg
mov
sub
sbb
movsb
add
ss
xchg
prefetcht0
and
imul
add
mov
xchg
add
sub
xchg
int
sub
or
or
xor
adc
sub
mov
or
add
test
mov
push
ret
into
fildl
jb
mov
mov
fwait
insb
daa
cmpsb
mov
push
mov
cmpsb
adc
adc
in
push
shlb
outsb
inc
jbe
push
mov
std
fisttps
push
and
sub
and
test
sub
xor
push
loop
loope
mov
push
add
jp
xchg
mov
jecxz
push
jmp
inc
add
mov
fsubrs
pop
jbe
xlat
and
out
sbb
sub
jl
movsb
push
cmp
inc
xor
out
fnstsw
adc
add
inc
stos
jle
inc
jmp
push
repz
enter
add
icebp
fildl
mov
cs
or
jnp
dec
xchg
add
es
xchg
iret
and
adc
das
faddp
add
call
shlb
hlt
in
outsl
mov
nop
dec
sub
sbb
pop
mov
shll
push
xlat
push
cmp
je
sbb
out
push
jne
mov
arpl
push
call
inc
push
mov
mov
jl
push
add
test
pop
xor
mov
and
sahf
or
jmp
ret
mov
out
addl
inc
out
push
enter
out
cmp
or
xchg
add
fs
mov
or
mov
clc
sub
mov
divl
or
and
sub
and
add
jae
adc
mov
cmpsl
push
sbb
or
mov
cld
cmp
push
stos
xchg
lret
sbbb
test
push
mov
add
add
and
push
jle
sub
mov
enter
fdivs
gs
or
sub
push
insl
fbstp
rcrl
rorb
fildll
cli
or
mov
mov
push
or
cli
xor
xchg
cli
cs
mov
sbb
enter
cmp
jne
mov
or
ret
test
mov
dec
and
into
std
cmp
jb
push
fldcw
mov
cmp
mov
xor
pop
or
cmp
xchg
pusha
pop
mov
mov
lea
loope
push
data16
push
ss
pushf
cmp
outsl
mov
aas
pop
push
movb
dec
pop
popf
inc
fildll
jno
lock
dec
sahf
inc
fld1
push
aad
idivl
loopne
mov
xor
lret
fnsave
push
nop
dec
adc
adc
push
jmp
add
add
xchg
addl
lock
call
push
loopne
jo
enter
pop
add
jl
mov
rcr
add
test
dec
lea
and
xorl
pop
jg
add
dec
add
adc
pop
test
mov
fnstsw
jmp
mov
insl
mov
add
aaa
or
pop
add
or
jp
add
pop
xor
dec
jbe
mov
arpl
mov
out
lea
push
mov
pop
or
pushf
adc
fsubs
inc
divb
mov
push
lret
flds
jne
sub
cmp
sti
xchg
sub
mov
lret
add
adc
push
jmp
lea
add
and
sub
xchg
outsl
pop
ss
dec
cmp
sahf
inc
jmp
and
cli
adc
sub
lea
push
dec
xor
push
add
cld
dec
xor
mov
je
push
mov
cmpsb
testb
push
sub
push
movsb
add
and
nop
fsubrl
lret
push
sub
pop
pop
or
push
mov
and
arpl
add
add
push
int3
sbb
nop
movsb
inc
sub
mov
push
int3
inc
dec
push
xchg
adcb
push
insb
leave
rclb
add
lea
dec
outsb
xchg
or
or
ljmp
adc
cli
push
andl
fsts
or
je
loopne
push
pop
push
xchg
xchg
xadd
inc
cmp
adcl
jo
mov
ret
scas
jno
or
push
add
and
out
lret
pop
push
push
mov
inc
test
jge
jo
js
push
add
mov
dec
movsb
adc
sti
push
jbe
push
adc
cli
or
sbb
shufps
xchg
insl
jbe
std
les
inc
iret
mov
mov
and
call
pusha
dec
out
mov
mov
std
lock
cli
pop
cmp
cmp
push
je
mov
cwtl
repz
leave
inc
dec
out
jmp
push
push
popa
push
icebp
add
dec
jecxz
ret
addl
pusha
mov
test
orl
mov
cltd
js
cmp
scas
bswap
mov
stos
jp
mov
mov
std
jg
add
cmp
jae
mov
in
dec
jbe
andb
and
jb
cmp
push
pop
rcpps
xor
andl
paddb
jnp
inc
add
or
inc
int
push
insl
sbb
jmp
add
cmp
mov
arpl
push
ret
mov
movsb
aas
daa
adc
xchg
aaa
aas
push
inc
cwtl
pusha
mov
push
dec
xchg
addr16
push
add
mov
call
call
fisubrl
aad
xchg
push
test
lds
cmp
sarb
clc
flds
push
xor
loopne
push
xor
add
ret
xor
fwait
pop
icebp
cmp
inc
jnp
orl
sbb
pushf
jo
rcll
pop
inc
push
loope
dec
mov
mov
mov
jmp
inc
jb
in
adc
push
mov
or
push
push
jo
jae
ljmp
add
sub
pop
mov
adc
cmp
pop
ret
rcll
into
shll
js
push
fidivrs
push
add
dec
jae
lock
dec
in
addl
out
sahf
cli
ret
ret
test
xor
mov
mov
in
stc
clc
jle
mov
adc
mov
and
mov
mov
arpl
sub
push
add
or
dec
sub
jne
bound
pusha
outsb
jmp
sbb
push
nop
leave
cmp
dec
sbb
nop
sbb
sub
inc
shrb
scas
hlt
and
and
pop
jne
pop
sub
nop
mov
jne
adc
add
and
mov
cld
push
je
fwait
sub
add
fs
xor
mov
pop
scas
insb
sbb
push
mov
adc
mov
or
push
aas
adc
cmp
je
fldt
xchg
rclb
adc
xor
pop
fsubrl
mov
cmp
cwtl
adcl
sqrtps
push
bound
push
out
mull
sbb
pop
and
mov
lcall
mov
xchg
push
cmpb
push
cmpl
ss
sbb
cmp
lods
adc
pop
inc
loopne
jb
and
out
cmp
jb
adc
cli
adc
add
in
addb
es
mov
sbb
data16
pop
mov
and
dec
inc
test
pop
sub
aas
sbb
cmp
inc
icebp
jns
jg
test
test
sub
ret
loop
and
pop
ljmp
jbe
ss
imul
and
hlt
aad
sbb
lret
ljmp
cld
adc
sub
cmp
data16
push
sbbl
adc
jg
rol
cld
mov
add
and
repz
and
cmp
xor
hlt
call
sub
sti
and
dec
and
sub
sti
or
adc
sub
xor
out
mov
or
add
add
enter
pusha
inc
fldt
push
sbb
daa
xchg
int3
and
or
addb
or
pop
mov
push
test
inc
in
jecxz
fwait
lea
out
js
in
push
divb
and
or
push
insb
bswap
and
add
and
add
push
push
jb
xchg
sahf
dec
pushf
decb
push
push
je
and
ret
jg
and
ret
nop
push
pop
mov
pop
or
adcb
xor
mov
test
je
pop
aaa
in
xor
push
pop
lds
popa
adc
push
and
xor
cmp
outsb
or
xor
jne
push
mov
subb
into
adc
movsb
cmpsl
mov
mov
mov
rolb
adc
sub
xorb
or
cmp
pop
xor
xor
xlat
and
loope
or
sub
fs
sbb
insb
cmpsw
jb
mov
les
pop
dec
add
icebp
aaa
aaa
xlat
shlb
inc
pop
sub
add
push
pop
mov
fildl
mov
push
xchg
test
jl
fisubrl
movsb
pop
sbb
lds
mov
dec
jmp
jl
pop
dec
add
enter
pop
roll
mov
sub
stc
into
mov
mov
insb
lods
xor
xor
add
fwait
mov
adc
cs
and
cmp
mov
mov
fisttpll
push
nop
mov
faddp
test
lret
loopne
pop
inc
mov
jo
sub
sub
xchg
lods
push
mov
cmp
imul
add
dec
or
ja
aaa
jne
pop
roll
push
lods
xor
mov
cltd
jnp
pushf
or
test
or
test
popa
mov
fistpl
mov
push
gs
xchg
and
lret
call
out
adc
inc
enter
inc
inc
mov
fld
or
divl
add
inc
and
test
or
add
rcl
sub
aam
cmp
or
pop
push
pop
addl
leave
push
aaa
add
lret
adc
ja
fiaddl
jo
add
mov
push
addl
mov
inc
sahf
inc
mov
imul
cltd
mov
or
sahf
mov
sub
seto
xlat
adc
jne
lret
mov
and
jmp
dec
xchg
jmp
cli
mov
mov
mov
push
push
dec
test
out
sbb
push
data16
ret
inc
ds
outsb
sahf
and
jmp
mov
aas
adc
jns
out
mov
xor
in
stos
rcrl
in
stos
xor
call
pop
push
sbb
scas
test
sbb
gs
cs
popa
mov
add
mov
loope
repz
and
jo
pop
add
sbb
xlat
shll
mov
jo
mov
ljmp
adcb
mov
and
cmc
adc
lahf
ret
mov
xor
sbb
repz
or
lock
push
or
in
and
and
add
pusha
and
xchg
cmp
pusha
and
in
leave
mov
or
mov
and
fmul
out
shrb
cmp
rorb
add
dec
pusha
push
pop
or
imul
sub
call
xchg
lcall
xor
pop
int
dec
mov
mov
xchg
inc
pop
sub
pop
lret
xorl
pop
cs
call
pusha
sub
js
out
add
repnz
push
push
push
mov
push
cmp
fcoms
test
xchg
sub
and
sub
enter
sub
pop
mov
jo
add
mov
pop
add
push
in
jae
jne
mov
iret
xor
xor
dec
lret
lods
mov
outsl
push
jmp
je
mov
adc
and
shr
cmp
lock
cmp
bound
andb
fucomi
cli
std
mov
mov
push
insb
ret
pop
ljmp
adc
insb
pop
adc
ret
aas
rcl
sub
cmp
je
push
int
add
xor
mov
xor
or
and
insb
or
jae
push
loopne
push
insb
inc
cmp
out
je
ret
test
addl
add
nop
iret
push
cmc
sub
mov
xchg
jge
push
push
test
lock
and
rclb
add
xor
or
or
jl
push
mov
popa
xlat
ror
xor
and
pop
mov
ret
or
cltd
in
adc
sub
jo
int3
into
std
shll
inc
test
fsts
leave
shrl
or
adc
and
mov
fdivp
and
cld
shr
dec
popf
pop
test
add
xchg
daa
das
mov
or
mov
sub
mov
hlt
cmpsb
enter
adc
dec
lea
call
add
mov
push
test
imulb
inc
pushf
pusha
sub
pop
sub
mov
lods
mov
jmp
testl
push
jge
ljmp
call
aas
add
into
add
mov
dec
cmc
neg
push
decl
inc
clc
clc
push
jmp
inc
insl
iret
xchg
dec
jmp
mov
pop
jae
push
push
call
mov
push
sub
imul
aaa
pop
loope
fsubr
push
jge
mov
xlat
jge
sbb
jecxz
inc
inc
icebp
mov
sbb
std
xchg
mov
idivl
xchg
clc
or
ljmp
pop
es
inc
movsl
js
dec
leave
jl
pusha
inc
outsl
int
sub
jmp
or
lock
push
jmp
add
mov
jne
sbb
inc
mov
push
push
rorb
mov
mov
mov
psubsb
pop
scas
cmp
pusha
mov
nop
mov
std
pop
mov
sub
sti
xchg
mov
call
pop
ret
call
dec
lret
outsl
call
call
xchg
sub
btc
jnp
lcall
jecxz
jmp
sbb
sahf
jg
adc
div
call
add
jmp
ret
aaa
mov
imulb
add
scas
cmp
outsl
cmp
clc
mov
push
inc
adc
or
add
nop
cld
and
add
sub
add
jnp
sub
sbb
or
mov
popl
adc
jmp
clc
pop
int
jno
mov
push
dec
mov
ret
or
sub
pop
lret
jo
mov
pop
and
in
pop
adc
or
incl
orl
or
fistpll
ja
or
aas
sbb
cmpb
popa
cmpb
insb
scas
jne
mov
test
jne
or
sbb
push
mov
or
shll
lds
add
push
push
or
adc
sbb
and
jecxz
inc
je
sbb
stos
and
add
push
push
mov
push
cmp
and
adcb
and
fldcw
xchg
fucomp
ret
mov
clc
push
jbe
gs
bound
fisubs
sbb
xor
cmp
xor
and
movl
xchg
int
js
imul
sbb
pop
loope
in
jns
out
les
add
test
add
sub
mov
pop
inc
xchg
andb
fwait
in
cld
mov
fdivl
mov
jmp
xchg
push
fiadds
into
fwait
outsb
adc
rolb
dec
sbb
xchg
xchg
in
xor
ja
or
adc
jl
sub
adc
jo
add
sub
push
iret
add
lds
int3
rcrb
push
mov
lock
inc
fstl
xor
xlat
popl
mov
adc
call
add
push
std
xor
sbb
xlat
pushf
xchg
pop
shlb
in
fs
cmp
ret
scas
mov
or
jge
shlb
or
test
mov
bound
adc
je
idiv
mov
outsl
lea
in
repz
cmp
cmp
push
jl
add
std
cli
scas
or
sbbb
mov
sub
xchg
adc
mov
fs
or
je
aam
sbbl
test
sbb
in
je
push
lods
lock
test
imul
outsb
inc
scas
mov
lds
inc
rcrb
mov
or
ficoml
cmpsb
lea
cmp
sub
and
stc
mov
pusha
mov
test
das
adc
mov
cmp
push
xchg
mov
stos
in
es
fwait
or
pop
sub
jl
mov
push
pusha
mov
and
shrb
mov
mov
jns
push
test
pop
lock
rolb
jb
adc
inc
xlat
mov
add
mov
sahf
in
add
mov
stc
push
movsb
jns
jecxz
mov
add
mov
xor
sbbb
daa
jne
push
adc
in
iret
or
push
mov
jle
inc
iret
pusha
mov
loopne
pop
in
aas
or
cltd
sarb
repnz
adc
jo
xchg
pop
cmp
push
jo
dec
add
mov
in
and
les
mov
and
fnsave
xchg
xchg
push
aaa
mov
es
daa
or
test
xor
cmpsl
cmp
cmp
mov
movsb
cmp
or
add
jo
jnp
imul
ds
add
js
mov
lcall
les
pusha
and
pop
xchg
je
gs
xor
pop
xchg
push
add
addr16
call
icebp
call
scas
arpl
add
mov
clc
mov
lock
add
jl
push
cwtl
pusha
rolb
push
xor
and
and
mov
mov
dec
cs
mov
xor
inc
inc
test
pop
dec
dec
aaa
and
in
add
add
movsb
mov
jmp
nop
mov
nop
or
xchg
in
sbb
test
pshufw
add
in
lds
and
push
call
inc
jb
push
jae
mov
call
or
cmovl
shrl
push
or
add
nop
add
inc
sub
lds
inc
icebp
jg
mov
incl
add
je
or
pusha
adc
movsl
arpl
sbb
das
cmc
mov
loop
decl
addr16
jle
lea
cmp
adc
add
enter
push
adc
or
je
mov
fnstcw
adc
popf
test
pusha
fwait
pop
jl
lcall
test
movsb
add
nop
movsl
add
add
or
fdivrs
shll
xor
mov
and
mov
mov
scas
mov
sahf
repz
sbb
push
dec
add
push
pop
jb
sbb
xor
dec
imul
ss
mov
cld
pop
das
inc
or
push
sub
das
out
pop
push
mov
call
adc
popa
xchg
popf
hlt
sti
or
insb
jno
cmp
mov
inc
add
fs
or
adc
fs
and
enter
xchg
xchg
mov
test
enter
insb
push
fs
pop
pop
enter
push
push
dec
loopne
iret
out
dec
cld
nop
add
and
or
adc
and
and
sbb
and
and
and
sub
xor
and
and
inc
call
mov
test
mov
fsubrs
xchg
add
call
fwait
add
xchg
cltd
enter
neg
pop
add
adc
es
ds
pushf
cltd
add
stos
mov
xor
lret
push
test
jne
andl
adc
or
test
dec
jns
scas
jne
push
in
mov
or
fs
leave
mov
gs
push
fidivrl
push
xlat
xchg
inc
push
xor
mov
inc
call
jo
and
aad
lret
insb
mov
rclb
push
mov
test
push
pop
mov
call
pop
rcr
mov
or
lahf
sbb
mov
int
cmp
xchg
push
call
out
ficomps
lock
push
movl
ja
jns
jo
dec
pop
mov
fdivl
jg
dec
inc
loope
mov
push
mov
and
es
mov
push
js
filds
outsl
push
gs
mov
inc
mov
ljmp
sub
clc
call
xor
push
push
inc
sti
jge
mov
push
adc
fmull
mov
pop
pop
es
jl
jne
xor
out
xor
cmpsb
addr16
ss
int3
cwtl
nop
pop
rcll
popw
popf
xchg
add
pop
jmp
ss
in
call
push
push
push
push
mov
pusha
pop
xchg
lods
sub
pop
ret
xor
mov
sbb
andb
jne
movsb
adc
or
cmpsb
add
add
incl
cltd
xor
ret
test
cmp
or
and
or
scas
or
filds
xchg
adc
enter
ja
adc
jmp
sbbl
add
das
jnp
pop
mov
inc
push
pop
pop
jmp
arpl
mov
loope
inc
xor
push
lea
pop
clc
movsl
add
mov
test
lret
push
sub
fdivrs
pop
ret
jmp
pop
or
and
jo
cmp
aaa
adc
inc
jge
jo
pop
jg
jp
pop
loop
cmp
add
mov
mov
or
rorb
or
idivl
mov
adc
psubd
fistpl
je
mov
aaa
push
push
and
in
icebp
lcall
loopne
jb
jbe
and
or
push
cs
and
inc
pop
sti
push
pop
into
popf
ret
mov
dec
mov
mov
add
clc
inc
lock
inc
les
sbb
sbb
test
mov
sbb
sbb
xor
ss
xor
xor
fcomp
nop
mov
je
adc
mov
or
mov
push
mov
sub
xchg
sbb
imul
add
cmpsb
imul
mov
fldenv
je
out
sub
je
dec
cmp
push
push
add
jnp
imul
add
insl
lcall
xor
lcall
pop
insb
jp
lcall
xchg
xor
lcall
sahf
mov
imul
shrl
hlt
add
sahf
adc
ds
xor
shll
outsb
mov
fcmovnb
sahf
cmpsl
popf
fcompl
mov
add
mov
testb
div
pop
adc
pand
pop
push
adc
lcall
imul
or
mov
ss
push
dec
adc
add
out
xchg
lret
xlat
pop
mov
mov
adc
jne
mov
sbb
rclb
mov
add
sbb
cmp
jae
push
pop
scas
jmp
jae
sbb
in
and
lods
pop
mov
add
sahf
adc
nop
pop
daa
fnstcw
imul
insb
lcall
in
dec
shll
mov
xor
push
lcall
mov
lcall
jp
add
lcall
insb
lcall
dec
xor
shll
push
xor
daa
inc
add
jmp
jbe
and
adc
mov
cmpsb
imul
insl
mov
cmpsl
xor
orb
shll
add
mov
mov
add
xor
cmp
lcall
scas
shl
mov
int3
fcomps
pusha
push
add
nop
adcb
xor
xor
jnp
lea
aaa
nop
ss
jnp
fs
xchg
mov
pop
sahf
adc
imul
imul
cmpsb
imul
dec
shll
and
mov
adc
or
xor
cmpsb
add
mov
lock
adc
mov
daa
mov
jbe
cli
clc
pop
enter
mov
add
inc
lcall
pop
ret
add
sub
arpl
pusha
xchg
inc
mov
mov
mov
adc
cld
pusha
pop
cmp
adc
add
xchg
iret
shll
add
lahf
sbb
fwait
cmpsb
aas
add
nop
xor
enter
pop
repz
mov
adc
lcall
xchg
int
mov
ljmp
in
lcall
insb
movsl
int3
cmpsb
xchg
dec
push
mov
inc
xchg
daa
mov
mov
cwtl
dec
ret
mov
push
pop
xchg
daa
pop
mov
xchg
out
sbb
mov
stos
dec
add
inc
inc
outsb
jne
mov
sti
jmp
je
arpl
inc
dec
adc
je
jbe
fs
adc
scas
aam
je
adc
pop
xor
dec
jmp
xor
add
jb
jo
push
arpl
push
repz
add
add
loop
insl
jo
lds
inc
xor
push
sub
sbb
push
inc
push
dec
dec
jl
dec
outsl
fs
fists
insb
xor
insl
gs
js
mov
and
sgdtl
imul
imul
addr16
movsl
xchg
cmpsl
adc
idivb
mov
push
imul
imul
imul
xchg
sub
jbe
push
outsl
outsl
mov
jl
add
fs
hlt
insl
pop
fsin
idivb
pusha
add
je
jb
jne
push
loopne
lahf
fstl
and
and
inc
insb
popa
fistpl
add
or
outsb
imul
cmp
push
in
xlat
ficomps
je
arpl
pop
add
je
lods
sti
in
outsb
adc
gs
out
cmpsl
daa
pop
insl
xchg
scas
std
je
jo
imul
sub
pop
push
inc
push
inc
inc
jbe
dec
imul
insb
outsl
adc
fstp
pop
xchg
xchg
inc
adc
dec
add
pop
cmp
scas
dec
inc
inc
xor
ja
add
mov
mov
jae
dec
cmp
pop
jo
pop
add
out
ja
jae
outsb
stc
add
jbe
adc
call
add
fdivl
imul
in
fistpl
jb
push
push
inc
push
insb
loopne
xlat
fadd
pop
or
js
je
gs
mov
pop
jo
jl
cmp
popf
add
jne
pop
data16
add
aas
aas
xor
and
inc
inc
push
ret
cli
inc
inc
inc
pop
pop
pop
add
stos
add
jecxz
pop
pop
add
pusha
mov
pop
lods
sahf
outsb
sti
jl
jge
pop
mov
add
shrd
in
mov
or
mov
jns
add
push
fld
pop
jno
push
add
test
arpl
outsl
rorb
iret
push
mov
cmp
and
adc
inc
fs
xchg
movsb
mov
add
shrl
lcall
cmc
and
jecxz
test
or
out
sbb
loope
adc
incl
in
divl
xor
jno
jns
jae
push
push
sub
je
inc
add
icebp
out
mov
push
imul
decl
popa
dec
mov
adcb
test
inc
push
mov
movsb
jns
jo
mov
and
insb
add
mov
mov
setnp
dec
insb
mov
insb
sbb
jo
push
addr16
mov
outsl
sbb
outsl
popa
movsl
sbb
push
and
aad
adc
flds
inc
lea
or
jbe
pushf
mov
xlat
in
push
stos
data16
outsb
addr16
pusha
imul
xchg
shlb
and
cmp
dec
xorl
mov
aaa
call
imul
mov
outsb
cwtl
mov
mov
sbb
fwait
push
andl
sub
push
popa
ret
inc
inc
popa
jae
inc
out
addr16
pop
test
sbb
sbb
arpl
out
pop
outsb
dec
xchg
jo
roll
imul
fs
mov
daa
and
sbb
sti
dec
push
jge
outsl
ja
xor
push
arpl
fcmovne
shrb
adc
or
jne
sub
or
jae
xchg
insb
scas
sbb
ja
mov
push
repnz
inc
jae
arpl
shrl
shll
je
aad
dec
mov
sbb
jae
and
pusha
jo
push
push
data16
sub
sub
dec
jmp
sub
pop
jae
cmp
or
xchg
dec
cwtl
push
push
add
push
adc
cmp
repnz
jecxz
ret
js
push
test
pop
nop
cmpb
insb
mov
jns
inc
sbb
mov
incl
push
sbb
cmpsl
push
rorl
jne
scas
xor
sbb
dec
inc
arpl
or
sub
bound
mov
and
sbb
fistl
inc
insb
or
andl
xchg
xchg
sbbb
xor
sub
sbb
xorl
inc
xchg
xor
push
pop
fwait
imul
gs
popf
dec
inc
sub
arpl
pop
mov
int
punpckldq
arpl
mov
in
ds
fildl
mov
xchg
add
adc
push
add
push
mov
mov
stos
and
inc
fs
int3
les
push
inc
inc
push
in
ret
test
adc
mov
dec
add
pop
mov
cmpsb
push
jbe
add
jns
dec
mov
push
rcll
adc
mov
add
mov
adc
ss
and
mov
decl
outsb
push
bound
push
jne
jae
das
bound
inc
jbe
data16
bound
aaa
loopne
ds
cmp
pop
and
dec
push
mov
inc
das
add
jno
jne
fsubrs
in
sbb
jno
fadd
sahf
sbb
pop
push
das
imul
arpl
mov
jne
jo
jne
add
push
jp
in
insl
cmp
push
bound
xor
data16
daa
jne
push
gs
xlat
mov
mov
adc
je
ds
mov
int
test
fs
xor
mov
outsl
addr16
xchg
leave
scas
mov
dec
add
xchg
aam
sbb
jns
xor
bound
jmp
insl
incl
xchg
outsl
arpl
outsb
out
ja
or
insl
sbb
insb
sti
orb
daa
cmp
mov
stos
aas
mov
pop
pop
adc
dec
cmc
je
pop
mov
movsb
outsb
addr16
jno
bound
fcmovb
bound
cwtl
inc
sbb
cltd
pop
enter
mov
jnp
orb
xor
sub
jbe
dec
and
insl
insb
paddusw
cld
daa
je
data16
jo
data16
cmp
xchg
jg
push
push
push
push
and
sub
das
in
push
push
sub
fs
jo
adc
jae
insl
jg
jle
push
outsl
jo
adc
dec
push
jne
and
push
inc
mov
xor
xor
dec
pop
sbb
das
mov
das
gs
insl
movq
ret
mov
xor
data16
jae
pop
pop
outsl
push
push
inc
shrl
testl
pop
imul
add
testl
xor
out
stos
cmpsl
int
lods
repnz
add
mov
pop
jne
bt
xor
imul
imul
jae
xchg
bound
add
add
or
lods
mov
std
push
push
xor
add
out
insl
jae
or
add
cmp
cmp
outsb
pop
push
dec
add
cs
add
dec
jo
imul
xor
fnstenv
lods
std
testb
data16
push
dec
inc
and
adc
lea
gs
je
dec
and
sub
das
cmp
fwait
dec
inc
dec
push
and
sbb
xor
adc
jle
lret
xor
cmp
fidivl
pop
cmp
xchg
push
adcb
inc
nop
xchg
jo
gs
xor
fidivl
adc
inc
sahf
pop
aaa
movl
lea
push
sub
addr16
jbe
ja
pop
jae
lds
lret
rol
jmp
mov
inc
insb
xchg
iret
mov
sar
xchg
sub
jne
pop
dec
dec
jmp
jg
insl
je
fs
mov
es
insl
inc
subl
dec
testb
pop
mov
je
je
fs
jg
jne
outsl
mov
lea
fwait
adc
pop
subl
adc
bound
sub
dec
mov
sbbb
xor
and
mov
filds
inc
and
sub
xchg
push
jle
es
jg
mov
cmp
je
dec
xchg
out
jne
inc
pop
arpl
jns
popf
or
or
dec
xchg
mov
xor
cli
dec
sarl
dec
dec
inc
push
pop
push
mov
dec
cmp
inc
je
pop
movsl
out
in
mov
push
push
adc
pop
adc
or
sbb
jb
xchg
rorb
sbb
xor
mov
mov
push
cmp
xchg
sbb
mov
xchg
cs
inc
push
inc
dec
outsl
out
or
arpl
inc
inc
pop
stc
jg
pop
inc
inc
pop
pop
dec
dec
inc
push
dec
inc
pop
push
push
inc
push
inc
inc
inc
mov
mov
and
or
add
mov
sbb
add
mov
ja
jecxz
movzbw
or
sbbl
lahf
push
push
push
pusha
pop
pop
add
xor
rol
fisubl
loopne
jg
lea
cmp
add
add
inc
rcr
cmp
stc
pop
inc
sbb
loop
sbb
or
stc
jne
push
mov
mov
jmp
sbb
push
es
not
xlat
std
push
mov
xchg
leave
xchg
mov
push
movsbl
pop
lret
add
les
push
mov
call
rorb
pushl
push
push
pop
fsubrl
fdivr
not
rcl
push
jmp
xor
rclb
scas
sub
mov
std
js
shl
mov
shlb
mov
in
or
mov
rep
or
mov
popa
and
std
mov
xor
clc
mov
dec
popf
adc
mov
pushf
push
dec
aaa
ja
les
push
jmp
setb
neg
mov
clc
pop
test
movsl
shl
test
inc
or
pop
je
shl
lock
into
cmp
cmp
cld
icebp
adc
add
fsubs
stc
xor
out
fcmovnu
std
out
sub
test
stc
cmc
ds
mov
in
cmpsb
add
std
lret
pushf
shr
mov
loopne
loopne
or
in
call
push
and
xor
lods
add
cmp
fsts
or
outsb
jmp
mov
stos
out
or
or
push
push
fsubrs
push
pop
test
jnp
jns
imul
sar
scas
sbbb
leave
into
add
cmc
mov
lock
cwtl
add
mov
je
rcl
call
mov
push
inc
inc
mov
lock
rol
push
std
pushf
push
fisttpll
add
push
pop
testb
arpl
pusha
dec
shr
dec
dec
cmc
and
std
clc
negb
dec
mov
ljmp
push
pop
fidivrs
fmul
add
xchg
pusha
adc
les
jno
adc
incb
mov
in
aas
pop
jmp
mov
jo
mov
fldl
sbb
pop
cmp
push
je
lock
lock
insb
push
into
test
mov
setl
out
lods
sbb
add
shll
scas
sbb
into
inc
sbb
rcrl
mov
stos
mov
cmc
sub
push
ret
inc
sti
sub
mov
clc
lods
xor
mov
mov
or
mov
popf
jmp
xchg
adc
jg
in
jmp
xor
cmpsb
push
jmp
incb
popf
pop
push
sub
outsl
enter
lahf
not
into
mov
fistps
lret
push
push
mov
dec
cmp
jge
pop
sub
arpl
push
cmp
mov
out
pop
idiv
mov
sbb
ja
mov
mov
sbb
pushf
jmp
push
call
or
lret
jl
xchg
nop
imul
stos
mov
jle
rolb
add
insb
out
fmull
lods
das
push
jg
mov
inc
mov
pushf
in
or
xor
movsb
add
mov
jno
or
ficoms
test
xchg
stc
add
mov
sbb
pusha
push
jae
mov
mov
adc
stos
leave
xchg
test
sarb
fcmove
imul
subl
push
lds
fidivrs
fidivrs
jmp
ds
add
sub
and
cmp
insl
sbb
icebp
insl
add
mov
sbb
out
iret
leave
inc
ficompl
sbb
pushf
shll
jnp
sub
jp
iret
ljmp
out
sbb
dec
jmp
adc
cmp
mov
clc
sub
pop
call
cs
pusha
mov
inc
clc
hlt
out
popf
mov
negl
and
aam
pusha
sar
add
lret
xchg
ficoml
test
lods
cmp
jle
insl
or
sbb
push
adc
lock
sub
enter
adc
xor
cmp
cmp
fnsave
loopne
das
cmp
xor
ret
pushf
insl
add
jne
cs
insl
div
sbb
push
dec
dec
test
cmp
cmc
mov
cmp
xor
sti
sbb
and
pushf
sub
repz
pop
sub
in
sbbb
jbe
add
dec
or
and
mov
insl
icebp
pop
dec
and
dec
xor
and
sbb
mov
add
and
loop
sbb
jmp
hlt
inc
pusha
imul
int3
sahf
push
jle
sar
daa
or
addl
je
cmp
jbe
div
jg
fisttpl
lcall
fadds
in
clc
jmp
arpl
loopne
cmpl
lods
cmc
in
cmc
xor
hlt
rcl
cs
test
jg
add
xchg
int
shr
popf
lahf
pusha
mov
loop
roll
push
popf
jecxz
stc
cmc
call
dec
mov
lret
pushf
idiv
mov
mov
xchg
fsubrl
pop
jmp
out
jg
fmuls
loop
int3
jge
inc
or
ds
push
pop
adc
pushf
push
push
sub
adc
aas
pusha
adc
xor
push
lcall
aas
push
fs
loope
sbb
outsb
imul
and
or
lock
rcl
adc
push
inc
or
mov
loope
clc
daa
lea
ja
das
lods
out
or
rorl
sarl
movl
in
cmpsb
mov
push
mov
iret
and
hlt
out
or
enter
mov
fwait
vmovsd
les
xlat
add
clc
cmpsb
sbb
dec
imul
cmp
cltd
adc
leave
or
sbb
sub
dec
mov
lods
pop
out
int3
jnp
imul
hlt
daa
outsl
aaa
mov
aam
notl
enter
sub
nopl
rcrb
fmull
push
rorl
cli
pop
jmp
call
xchg
xor
pop
call
int3
ret
jmp
pop
clc
test
roll
popa
lcall
pop
call
lds
push
cmp
push
push
das
inc
je
mov
inc
push
xchg
dec
push
jmp
push
add
mov
loope
mov
mov
or
call
mov
or
jmp
jb
cmp
arpl
or
jo
adc
repnz
pushf
idiv
mov
jo
mov
xchg
mov
fnstsw
jmp
sahf
xor
cli
pop
cmp
fisttpl
sbb
mov
xchg
cmp
adc
mov
sub
testb
xchg
cmp
cmpsb
outsb
std
cli
in
sbb
or
sub
pop
mov
or
in
pop
and
mov
fadd
mov
push
xchg
movsb
popa
push
test
jmp
push
jecxz
ja
imul
in
cld
mov
pop
in
push
push
fiadds
popa
jl
fsub
js
call
shll
add
jmp
mov
cs
or
jg
test
or
lret
fdiv
aad
fidivl
cmp
cmp
jp
pop
lods
fdecstp
fldt
adc
scas
out
rol
sbb
int
xor
cli
mov
cs
leave
dec
rorl
mov
daa
xchg
cs
loope
or
scas
add
cmp
jb
dec
in
ret
mov
aam
inc
xor
or
cmpsb
leave
fiaddl
push
sbb
out
or
sub
adc
sahf
clc
add
pop
push
dec
call
call
xchg
loop
mov
push
push
outsl
add
cld
cmpb
iret
mov
dec
push
mov
push
mov
push
call
in
push
pop
adc
ja
dec
or
scas
loope
clc
pop
sysenter
test
add
sub
test
ss
lds
mov
push
push
pop
cltd
mov
xchg
fildl
or
push
call
push
push
hlt
pop
mov
and
add
sbb
cs
hlt
xchg
inc
push
call
jmp
xchg
rol
andl
pushf
push
xor
lcall
sbb
push
push
cmp
sub
xchg
jmp
call
cmp
dec
add
call
jmp
fsubrs
push
aas
call
add
fmuls
out
pushf
popf
clc
aam
mov
sbb
icebp
mov
js
pop
sub
adc
or
push
call
mov
pusha
lock
add
inc
shlb
mov
push
cmc
mov
jne
icebp
sub
roll
loope
aas
dec
cmp
cmp
out
ret
mov
das
jl
mov
jb
addb
inc
imul
test
fisubl
mov
jmp
add
cmp
adc
sbb
test
pop
aas
mov
insb
mov
cli
movsl
shr
insl
mov
add
inc
addr16
cli
add
add
ret
push
repz
mul
or
mov
jbe
mov
outsl
cmp
add
jg
jbe
iret
pop
cmp
add
test
or
add
pop
pop
ficomps
inc
jbe
fucomi
mov
aaa
pop
movsl
icebp
add
adc
sub
inc
pop
sbb
in
neg
or
lcall
cmp
mov
outsl
sbb
pop
gs
mov
inc
ja
repnz
aas
or
int
fucomip
fiaddl
pop
pop
pop
nop
sub
inc
imul
std
fidivrs
psllq
jp
sub
in
neg
cmpl
hlt
mov
popa
xor
cmpsl
ficomps
inc
cmc
pop
jmp
jle
mov
pop
inc
cmc
or
pop
arpl
sbb
setnp
xchg
in
mov
aas
xchg
push
jnp
lock
dec
getsec
pushl
mov
jnp
pop
inc
and
fsubp
mov
cmpsl
repz
arpl
out
stc
idivl
jmp
and
inc
js
cltd
ud2
xchg
jg
or
pop
aas
dec
icebp
xchg
cmp
or
neg
jnp
add
sarl
jmp
mov
jecxz
or
jnp
fcomps
sti
mov
sbb
add
fidivrs
aaa
ud2
lahf
pop
setle
es
ja
pand
push
repz
dec
imul
xor
jnp
aaa
dec
ja
xchg
mov
lods
inc
in
mov
mov
jnp
xor
pop
lock
mov
in
bts
in
and
orl
out
lcall
sub
adcb
mov
sbb
aad
push
lods
in
pushl
and
das
aam
in
xor
pusha
pushf
xor
and
and
decb
ffreep
lret
adc
negb
rcl
lods
out
pop
dec
pushf
mov
loop
pop
fcoml
jmp
int3
pop
add
fildl
lret
arpl
xor
in
in
insb
insl
push
sub
or
mov
test
test
in
addb
cmp
dec
mov
insl
das
and
enter
outsb
sub
jbe
sub
add
stos
push
cmp
add
out
hlt
inc
or
in
pop
icebp
push
or
nop
stc
mov
incl
push
out
cwtl
stc
test
enter
sti
stc
jmp
sarb
mov
jmp
testl
rorb
popa
shll
popa
cmp
push
mov
mov
push
inc
clc
cmpl
loop
mov
inc
dec
icebp
cmp
gs
mov
ljmp
repz
lock
clc
test
mov
push
loope
roll
pushf
mov
jns
sbb
pop
inc
stos
add
jp
out
add
ficoms
clc
xchg
out
push
lods
rorl
loope
xchg
mov
jmp
mov
add
dec
jmp
outsb
ja
mov
sbb
popa
hlt
in
mov
cmp
fmull
dec
xchg
sti
xor
adc
adc
cmc
sti
pop
and
xchg
outsb
cmp
add
dec
inc
es
addb
fcmovb
push
xchg
and
push
pop
inc
xlat
loope
inc
xchg
cmp
inc
shll
mov
leave
call
in
sbb
dec
pop
push
add
rcr
test
lret
mov
sub
xchg
push
ja
vmovapd
push
mov
fldt
add
dec
cmp
cwtl
mov
cld
push
inc
xchg
fsubrs
pop
into
cbtw
sub
in
cld
jp
xor
imul
in
cwtl
push
push
dec
call
add
pop
nopl
push
mov
jo
push
addr16
push
je
test
lods
mov
std
out
ret
mov
lahf
pop
inc
outsb
or
faddp
jecxz
movnti
pop
outsb
fcompl
jmp
ja
faddp
mov
divl
adc
shrb
pusha
std
pushl
add
mov
bts
stc
add
sbb
or
xchg
cli
mov
stos
sub
aam
int
fst
stc
xor
or
lret
inc
pop
lods
rorl
add
pop
shr
fs
outsl
aas
les
lret
jo
or
or
push
mov
xchg
loopne
sbb
pop
ret
hlt
lods
ret
enter
mov
shll
loope
add
cmpsl
xor
outsb
jmp
sub
mov
dec
out
jae
idivb
and
jmp
pop
push
out
mov
or
xlat
nop
loop
js
dec
xor
sub
inc
jne
fpatan
enter
int
testl
out
icebp
ret
pushf
testl
jmp
fmuls
jg
out
ja
jns
and
push
cmp
cmp
jmp
mov
pop
cld
in
fyl2xp1
aaa
xor
in
ret
pop
push
push
cld
std
mov
lods
or
lea
mov
push
jl
rcrb
pop
jmp
pop
jno
fnsave
icebp
stc
mov
stc
push
jg
push
pop
cmc
mov
repz
insl
aaa
dec
xor
sbb
adc
movsw
mov
ja
out
sub
test
icebp
pop
outsb
mov
ss
or
enter
and
sti
out
pusha
dec
adc
xchg
xor
adc
inc
jg
add
push
add
in
popa
adc
add
sub
fsubr
cmpl
jp
fdiv
push
pop
lahf
sbb
xor
call
push
mov
dec
sti
lods
jo
in
pusha
cmc
mov
sub
stc
xor
lock
outsb
jp
jmp
pushf
leave
jg
shrl
movsl
call
xor
cwtl
jne
sahf
or
xor
cmp
call
or
pminub
pop
icebp
call
jge
mov
mov
repz
push
scas
rcrb
mov
sarb
add
jno
loope
push
aaa
cld
insb
mov
push
std
addr16
fs
cmp
sbb
jb
imul
inc
neg
lock
in
and
mov
push
popa
shll
lret
cmp
andb
mov
in
push
jmp
rcrl
lea
lods
pop
mov
jg
les
xchg
push
mov
call
loope
rolb
pushf
jnp
xchg
xor
xlat
sbb
xor
add
jl
sbbb
jecxz
xor
pop
mov
dec
adc
xchg
add
lock
or
push
sub
in
scas
ret
sbb
jecxz
stc
or
xchg
clc
jbe
inc
loope
mov
lea
push
andl
pushf
pop
pop
clc
addl
clc
stos
push
push
xchg
sti
pop
and
adc
sub
in
lock
cltd
call
cmp
pop
pop
mov
les
xor
xchg
cld
and
roll
out
repnz
mov
aas
movsb
xchg
dec
mov
cwtl
cmp
jg
not
js
xchg
sti
loopne
xchg
decl
or
addb
mov
mov
mov
xor
dec
mov
dec
xchg
and
push
push
std
fucomp
adc
mov
aam
or
ret
lods
movsl
das
and
cmp
cmc
test
mov
sub
repnz
xchg
push
lahf
push
orl
add
divl
call
lock
out
pop
pop
rcl
jno
sar
cmc
xor
mov
xor
mov
fnsave
sti
stos
pop
gs
cli
sub
fsubrp
fld1
or
push
xchg
ret
outsb
outsb
sbb
sbbl
shr
outsl
pop
mov
push
push
pop
fcompl
imul
pop
sub
arpl
ljmp
sbb
adc
pop
add
test
cld
call
and
pop
pop
cwtl
setle
pop
xchg
lea
xchg
pop
inc
fistl
or
mov
adc
mov
sbb
xor
ret
mov
test
mov
mulb
stc
xchg
add
pusha
rcl
mov
adc
push
inc
adc
lods
sub
push
fsub
cmp
xchg
lahf
arpl
ds
adc
xchg
xchg
in
pushf
jp
pop
mov
mov
add
push
mov
inc
pushf
pop
pop
sbb
add
adc
xlat
cmc
js
or
xor
mov
jne
adc
xor
repz
sbb
add
cwtl
ds
loop
in
mov
pop
cltd
jmp
fiadds
adc
test
and
imul
rorb
pusha
cs
mov
adc
cmc
push
or
cmp
xor
shl
jmp
cmpsb
outsl
pusha
out
not
clc
jmp
cld
jp
rorb
sbb
add
subb
adc
das
cli
add
mov
lea
pusha
test
test
lds
rcll
and
jne
and
inc
sbb
xchg
testb
cmp
aas
mov
imul
push
jmp
xchg
sub
loop
dec
or
jo
push
inc
sbb
cmp
pop
dec
xlat
jmp
mov
cmp
sbb
mov
lret
push
mov
test
sbb
lret
add
mov
fcompl
inc
cld
sbb
xor
lea
jbe
imul
popa
mov
test
mov
std
andl
xchg
shl
aad
call
sbb
es
mov
xlat
inc
jne
push
jb
push
in
clc
adc
shlb
or
mov
sub
ss
aam
bound
sbb
je
mov
inc
jg
decl
aam
xchg
adc
mov
xchg
push
mov
sbb
mov
shll
idivl
pushl
std
sbb
pusha
adc
mov
lcall
loop
dec
std
fnstsw
jg
inc
das
dec
xchg
js
roll
mov
inc
out
outsl
std
pop
loopne
out
mov
scas
adc
mov
cli
xchg
in
cli
outsl
jg
pop
push
xor
jl
imul
sbb
mov
aaa
add
cmp
bnd
mov
rorl
push
push
out
sub
int3
push
jo
aad
mov
bound
push
mov
xor
sbb
lcall
inc
decl
fcoml
and
mov
aad
or
mov
fcmovu
sbb
pop
dec
dec
cli
in
mov
shrl
push
cmp
gs
rcr
jo
mov
mov
call
mov
lcall
std
pushl
ljmp
lods
dec
scas
repnz
jne
push
pop
lods
lret
xchg
das
cld
idivb
sbb
mov
shlb
mov
fnstsw
decl
icebp
mov
mov
xchg
inc
aas
rcrl
fidivl
push
scas
jle
aad
ret
clc
or
mov
aad
cmpsl
aad
and
dec
push
cmp
mov
das
lock
pop
and
rorb
sub
insb
arpl
testb
mov
decl
lcall
fwait
push
aaa
mov
imul
push
lahf
mov
pop
filds
xchg
jp
cltd
sahf
leave
cltd
add
sbb
xlat
popf
fs
ja
mov
xchg
mov
push
mov
cmpsb
pop
ret
das
icebp
lea
jmp
dec
mov
cltd
test
add
mov
mov
ret
xchg
hlt
test
int3
inc
mov
mov
inc
bound
push
shl
xor
mov
add
cld
mov
xchg
stos
movsl
pop
and
in
mov
pop
mov
cmpsb
test
in
xchg
orl
movsl
out
jecxz
inc
xlat
mov
stc
sbb
pop
call
and
sbb
and
xchg
xor
shll
ljmp
icebp
iret
inc
cmp
iret
icebp
push
clc
sub
sbb
mov
testl
mov
add
lock
jns
push
or
js
adc
daa
adc
std
ljmp
mov
into
sarb
daa
dec
sbb
push
add
cld
loop
xchg
push
daa
sahf
dec
cmp
fldcw
jecxz
pop
ljmp
sbb
clc
or
mov
pop
pop
xor
inc
cmp
lcall
and
or
mov
or
icebp
clc
shrl
aaa
and
jae
popa
or
bound
ja
pop
mov
pop
xchg
sbbl
call
test
std
decl
test
enter
in
add
out
jnp
jmp
test
cmpsl
sbb
les
loopne
and
lahf
mov
jle
sub
add
dec
cld
decl
push
mov
movsl
mov
rcll
inc
xor
movsl
cld
mov
aam
mov
sahf
jo
xor
adc
outsl
aas
out
fistps
leave
loopne
pop
mov
int3
pop
pushf
dec
push
pop
out
pop
int3
mov
lret
jg
or
push
mov
mov
jp
dec
lahf
sbb
or
sub
std
ljmp
cwtl
xor
lock
mov
inc
stos
leave
pop
mov
pushl
std
mov
rorl
cltd
cld
and
frstor
sbb
inc
addr16
jmp
push
cli
addr16
es
cmpsb
mov
mov
insb
sbb
sbb
out
call
pop
daa
into
int
mov
xchg
mov
pushf
mov
loop
xor
mov
pushl
clc
pop
lahf
push
cmp
lret
rcll
in
cmpb
das
rorl
xchg
jge
jecxz
dec
xor
inc
adc
pop
imul
pop
mov
push
add
inc
mov
adc
mov
inc
jg
pop
push
jg
sbb
mov
pop
cld
xor
aaa
shll
in
sarb
sbb
mov
push
lock
std
std
xchg
xchg
pusha
mov
mov
ret
jae
pushf
in
in
and
adc
decl
pushl
orb
jne
in
pop
dec
dec
push
and
aam
pop
roll
decl
dec
xchg
pop
test
daa
xchg
jno
into
mov
cmc
pop
xchg
inc
push
inc
mov
push
lods
adc
ss
leave
mov
push
xor
jmp
push
fmuls
les
push
test
sbb
aad
lahf
dec
cwtl
dec
jmp
dec
subl
push
mov
add
sub
mov
sbb
cs
mov
int3
sbb
xchg
ret
pop
sub
cmp
or
ljmp
test
xlat
mov
aad
cmp
jb
fcoml
push
push
fsubs
adc
das
popa
inc
inc
inc
cmpsl
inc
test
call
scas
dec
loope
iret
pop
mov
int3
push
inc
aas
mov
xchg
out
mov
jp
and
mov
sbb
jmp
hlt
push
xor
add
xchg
int
aad
outsl
add
jmp
movsl
sub
xchg
jne
stos
sub
nop
sbb
movb
xlat
xchg
pop
xor
scas
decl
fnstenv
outsb
popa
sbbb
orl
ja
adc
ljmp
mov
test
test
push
xlat
mov
sahf
and
incb
addl
les
or
call
jl
adc
das
insl
or
cmp
xchg
pop
pop
int3
nop
jmp
jo
mov
pushl
mov
cs
mov
repz
push
jecxz
scas
inc
cmp
ss
jg
or
mov
xor
sbb
outsl
pop
out
popa
xchg
pusha
sti
sub
sbb
imul
lcall
leave
stc
xor
inc
xor
push
test
cwtl
pop
jo
icebp
ss
adc
rorl
sbb
test
mov
scas
popa
call
or
movsb
jecxz
jae
xchg
xchg
push
ljmp
sub
divl
into
xchg
cmp
add
out
pop
ljmp
sub
inc
les
in
xchg
push
pop
add
dec
xchg
int
mov
test
or
mov
cmp
sub
dec
je
jmp
es
stc
mov
in
sub
xchg
aad
mov
add
fistpl
int3
push
iret
in
mov
roll
outsl
icebp
jmp
mov
xchg
js
jae
gs
aam
out
mov
lea
fnstsw
call
or
bound
cmp
xchg
mov
and
inc
fistpll
pop
scas
push
mov
jg,pt
push
daa
popa
in
xchg
movsl
shrl
rclb
mov
sarl
jg
sub
iret
pop
imul
loope,pn
lcall
addr16
cmp
adcb
xor
and
sub
jnp
out
push
movsl
test
and
mov
inc
xor
or
loope
cmp
inc
mov
jecxz
pop
add
cwtl
mov
aaa
nop
cwtl
dec
push
or
push
clc
outsl
cld
int
lcall
cmp
fisttps
loop
lods
jmp
mov
xchg
imul
jae
out
sar
mov
paddusw
popa
add
daa
pop
sti
pop
and
mov
lcall
in
sub
cmp
pop
vpsubusb
adc
test
fstpl
add
movsb
inc
and
les
cmp
mov
ret
sbb
aad
stos
bound
call
call
or
mov
push
stos
jno
stos
push
ljmp
gs
pushf
icebp
shrl
int3
add
popl
xor
lret
dec
fisttps
sub
push
adc
call
shll
ljmp
lahf
pop
out
sbb
bound
bound
ja
mov
mov
mov
repnz
pop
ret
dec
sbb
pop
pop
and
push
stos
jmp
cld
aas
les
ret
push
pushf
push
sbb
jmp
and
mov
pop
pop
pop
and
popf
test
sub
ret
idiv
in
xor
cmp
mov
xor
dec
cld
fucomip
push
adc
lds
cmc
push
mov
fstps
sbb
pop
mov
inc
jg
xchg
jmp
je
pop
pop
cwtl
cmovno
incl
push
mov
xchg
lock
out
or
add
ss
jle
mov
into
test
mov
filds
test
in
mov
fsubs
gs
xchg
fdivl
jmp
and
or
repz
mov
inc
mov
sbbl
or
loope
fistl
sub
cld
mov
jecxz
add
out
sub
popf
add
add
jecxz
push
scas
in
push
scas
out
mov
xchg
insb
push
mov
ret
je
inc
movsl
mov
int3
dec
or
push
pop
out
in
pop
cs
in
enter
or
push
push
in
fistpl
xchg
not
test
xor
push
inc
es
loopne
in
in
fisubl
test
mov
fistl
sti
pushl
insl
mov
pop
mov
ret
push
call
xchg
outsb
insl
mov
jge
add
fmuls
mov
add
cmc
xchg
mov
popa
scas
cmc
nop
outsb
cs
and
xchg
inc
or
subb
mov
jl
cmp
ficoml
inc
xlat
jp
dec
mov
mov
das
or
aas
xor
call
inc
dec
scas
dec
test
or
pop
jne
mov
mov
mov
push
pop
mov
mov
pop
sbb
sbb
insb
and
xor
icebp
xchg
xor
call
jno
mov
and
enter
das
nop
movsl
mov
sub
and
pop
imul
into
into
cmp
adc
xor
cs
das
lret
mov
jle
sbb
aas
mov
mov
insb
pop
push
movsl
push
mov
and
arpl
repnz
dec
adc
rcrl
add
jno
jmp
pop
cmp
adc
loopne
fucomip
jl
inc
ret
jne
dec
dec
xor
hlt
mov
cmc
or
fisttps
movsb
mov
mov
mov
pop
dec
das
jl
fsts
push
xor
xor
loope
push
loopne
push
mov
clc
call
addb
and
adc
or
divl
jmp
xorl
mov
push
sbb
sbb
sti
and
loop
leave
iret
and
lcall
cld
mov
cmp
ljmp
out
icebp
or
jo
mov
test
out
repz
mov
js
roll
adc
outsl
cltd
adc
or
cmp
addb
fucomip
mov
and
enter
cmpsb
jns
xchg
nop
out
or
fisttpll
rcrb
pusha
subl
mov
orl
and
aad
mov
sbb
or
inc
mov
xchg
js
and
mov
jnp
icebp
inc
cmp
cltd
xchg
stc
lret
xchg
leave
add
inc
cmp
les
xor
and
jb
stos
mov
dec
sub
pushf
push
cld
loop
nop
rorb
test
clc
mov
jge
mov
mov
mov
push
cmpl
pop
stos
inc
fistl
push
push
loope
cmpsb
outsl
outsb
add
xchg
aaa
call
jne
push
cltd
jle
jl
inc
movsb
jno
jae
jecxz
jmp
out
fs
mov
push
cmp
test
pop
cmp
movsl
popa
inc
sarl
cli
sbb
lock
lcall
mov
mov
cli
add
adc
cmovns
mov
shll
repnz
jb
sbb
pop
clc
in
jg
adc
xor
cltd
fcmovbe
pusha
jg
mov
push
std
mov
std
daa
inc
and
mov
fildll
inc
rcr
dec
test
daa
out
and
mov
das
mov
popf
push
adc
jg
mov
jmp
incl
add
mov
dec
in
popf
and
mov
mov
and
mov
mov
popf
das
pop
cltd
pop
sbb
hlt
cmpsb
and
pop
bound
lock
cmc
mov
icebp
icebp
popa
pop
mov
adc
jb
outsl
cmc
mov
jge
xchg
mov
or
lock
scas
insl
or
inc
incl
cmp
js
adc
xchg
cwtl
mov
add
push
dec
xchg
pop
cltd
fcoml
adc
sahf
lcall
cld
sub
pushf
jge
ret
cmpsl
test
xchg
lcall
xor
lods
jmp
out
in
push
xchg
push
fwait
xchg
add
ja
cs
push
outsl
cmc
jmp
mov
shl
js
lods
push
sub
in
addr16
inc
or
xchg
sti
repnz
or
loope,pt
push
int3
adc
inc
orb
xchg
xchg
movsb
xchg
xchg
call
idivb
clc
mov
loope
mov
xor
in
sub
stos
std
dec
out
xchg
in
stos
lahf
push
repnz
mov
ljmp
testb
add
mov
fdivl
mov
mov
jo
fnclex
mov
fcoml
jmp
sbb
fidivrl
bound
lock
fld
lea
fadds
dec
or
fsubp
mov
nop
popa
xlat
add
mov
into
testb
mov
mov
pop
push
jb
jle
cld
adc
jle
jg
mov
movb
adc
pop
cmc
xorb
jg
js
push
jno
cwtl
dec
stos
adc
aaa
cmp
dec
jmp
daa
pop
push
dec
popf
fnstsw
add
adc
cwtl
jmp
enter
jecxz
aas
subb
popa
insb
mov
push
xor
clc
mov
sub
decb
test
or
int
push
xor
dec
inc
push
incl
sub
repz
hlt
lahf
jle
popl
sbb
fistps
mov
inc
or
pop
inc
aam
mov
scas
mov
sbb
push
cwtl
in
pop
add
ljmp
and
mov
rcll
cli
xchg
pop
test
pushf
mov
aaa
imul
mov
incl
stc
or
fcomip
mov
inc
popf
jb
inc
mov
sub
aad
push
push
cmc
sahf
pop
xchg
jnp
call
outsb
cmp
ja
adc
jno
sub
xchg
and
and
aas
inc
scas
mov
jmp
jl
stc
int3
mov
lods
imul
jae
nop
ljmp
call
jle
mov
movsl
cmp
daa
mov
or
cmp
lcall
jg
jmp
js
mov
add
push
inc
cld
sti
xor
xchg
or
push
add
js
xor
xor
sub
cmp
lcall
jno
push
adc
leave
xor
jo
out
mov
cmp
xchg
call
icebp
push
rcl
pop
add
cmp
cld
pushl
cltd
cmpl
outsb
inc
iret
sub
lret
mov
cld
push
pop
mov
mov
leave
sub
repz
xor
inc
cmp
inc
and
nop
pop
push
rcll
fistps
cmpsl
mov
scas
or
xchg
lds
std
dec
add
xchg
int
pop
mov
inc
mov
mov
sub
inc
xlat
adc
das
mov
xor
shrl
outsl
std
jmp
in
out
dec
mov
sub
popf
add
mov
mov
jno
in
scas
inc
sbb
cltd
push
adc
xor
aaa
mov
mov
mov
data16
push
scas
hlt
adc
sbb
fbld
movsb
mov
and
jecxz
sbb
loope
fidivs
push
dec
idiv
pop
mov
push
into
outsb
das
in
lods
cmpsl
pcmpeqb
mov
lods
push
std
call
jle
aaa
xor
cmp
push
cmp
daa
jne
call
repnz
fdivs
push
addl
mov
mov
fcompl
das
sar
mov
xchg
jg
int3
jo
xchg
movsb
adc
cmp
inc
lcall
xlat
jge
leave
mov
jno
in
and
imulb
repnz
adc
jg
jge
mov
call
add
mov
pop
mov
repnz
mov
and
movsb
insb
and
cmp
loope
mov
pop
lds
leave
fistl
jle
fbstp
in
loope
xor
inc
or
cli
push
ret
inc
imul
pop
icebp
xchg
dec
mov
mov
or
in
inc
sub
bound
aad
fisubrl
pop
push
jecxz
dec
outsl
sarl
in
pop
push
and
inc
mov
hlt
aaa
enter
pop
mov
pop
icebp
adc
or
sub
ja
call
movsb
mov
test
xchg
xor
shrl
cmp
push
clc
test
es
inc
jnp
test
xchg
add
movsl
stc
std
incl
xor
ja
pusha
sub
out
pop
add
inc
mov
pop
mov
insb
test
dec
es
mov
test
push
lods
jle
inc
xchg
aad
aas
cmp
pushf
cmpsb
mov
xorl
lahf
test
fisubrs
inc
cli
mov
mov
sbb
cli
pushl
mov
cmc
lods
dec
mov
inc
ds
mov
out
rolb
ret
mov
mov
ffreep
dec
or
ss
xchg
sub
mov
enter
mov
fstps
mov
dec
add
jg
scas
jno
repnz
xchg
aam
cmpsl
iret
testl
dec
push
rclb
push
mov
pop
incl
dec
fistl
in
fcompl
mov
cmc
inc
js
sbb
dec
dec
adc
out
das
jge
testl
adc
insb
test
stos
rolb
adc
cmpsb
push
int
xchg
int3
addb
xchg
push
inc
in
test
cmp
aaa
push
test
in
xor
mov
enter
push
aaa
mov
mov
jns
pop
add
xor
xlat
cwtl
shr
out
rolb
push
ljmp
std
jmp
into
jmp
sbb
notl
mov
int3
push
xor
fldt
or
sbb
insl
fisttpl
xchg
cli
push
lahf
enter
cmc
xor
jp
out
jb
lea
clc
pusha
jmp
sbb
pop
push
pop
xchg
jmp
loopne
adc
fdivrp
fbstp
xlat
jne
sub
inc
enter
psubb
dec
inc
mov
test
daa
mov
sub
cmp
mov
mov
push
ljmp
mov
add
lcall
aaa
cmp
sbb
mov
out
pop
pop
imul
sbbb
and
lret
outsl
cld
loopne
cmc
inc
cmp
xor
dec
sub
rcll
dec
xchg
cmpb
bound
jle
aad
js
mov
psubusw
mov
pop
push
mov
shll
loop
in
pushl
iret
dec
add
cli
push
shlb
or
cwtl
in
or
dec
sbb
inc
sub
lods
and
push
popa
dec
pop
roll
sub
rcrb
test
mov
rcrb
scas
fnsave
mov
rcrb
mov
scas
jmp
enter
pop
xchg
stc
sub
xchg
fbstp
push
jae
xlat
adc
xchg
pop
data16
loopne
push
lahf
mov
xchg
iret
out
push
pushf
xchg
movsb
sbb
icebp
xor
fisttpl
sub
cmp
mov
divl
out
mov
icebp
scas
out
jnp
jo
into
xor
pusha
dec
jnp
inc
les
jnp
lcall
iret
xchg
fwait
adc
fwait
enter
push
push
xor
jg
lea
iret
enter
pop
mull
lods
jno
icebp
stos
outsb
xchg
les
insb
scas
inc
imul
sub
adc
repz
or
or
jmp
cmp
xorb
and
dec
pushf
pop
and
addb
adc
aas
roll
adc
fdivs
dec
iret
incl
faddp
lret
scas
sub
pop
push
push
add
pop
jge
jg
jmp
push
clc
dec
dec
mov
push
int
mov
cwtl
xchg
popw
test
icebp
outsb
mov
decb
cltd
movsb
inc
push
xchg
mov
out
aad
or
insb
stc
fdivrs
jo
shll
jno
or
imul
xchg
push
je
scas
decl
adc
jmp
cmp
add
out
cs
or
gs
insl
push
fucomip
sub
mov
pop
xchg
icebp
lret
call
pop
mov
cli
ret
aam
xor
sub
dec
jge
ljmp
pop
adc
pop
mov
in
outsb
mov
lea
mov
lcall
fwait
and
pop
dec
mov
push
imul
jae
jl
sub
cld
mov
popf
adc
out
or
das
rcrb
test
dec
in
xchg
cld
inc
or
mov
mov
in
insb
xchg
adcb
pop
inc
sbb
ljmp
xor
push
icebp
shll
sbb
push
sub
add
fbstp
in
mov
mov
xchg
pop
and
imul
xchg
repz
jne
jno
adc
pushf
dec
fs
popf
sub
bound
mov
aad
inc
and
lret
mov
mov
mov
mov
mov
leave
lret
mov
lock
jg
adc
movsb
sub
loop,pt
jae
inc
cwtl
sub
faddp
lret
jae
pop
pop
clc
add
xor
xor
loope
mov
jmp
xchg
out
or
leave
and
lods
shlb
rorl
mov
adc
shrb
inc
lock
mov
or
fimull
xor
pop
sub
fisttpl
pop
or
inc
jecxz
add
pop
pusha
adc
faddl
jmp
xchg
out
dec
and
sbb
pop
or
pop
scas
push
and
pusha
push
add
je
mov
add
dec
inc
push
outsb
xchg
adc
sbb
sbb
fstpt
aad
out
push
sahf
hlt
scas
jge
inc
xchg
jo
inc
mov
mov
lods
jmp
int
test
xor
into
jg
fldcw
movsl
jg
and
cmp
dec
mov
fldl
mov
sub
lahf
imul
pop
sbb
adcl
mov
out
nop
push
stos
dec
adc
stos
outsl
pand
bound
push
in
mov
sarb
ljmp
mov
add
dec
clc
pop
decl
shlb
mov
xchg
add
mov
lret
and
rcll
ret
cmp
dec
xchg
inc
push
lock
dec
adc
cmc
mov
roll
lret
cmpsl
std
stc
lcall
insl
ds
and
cmpl
dec
and
lcall
jg
sub
sbb
scas
xchg
data16
xor
clc
xor
cmp
push
inc
cli
push
incl
jecxz
cmp
fwait
pushf
sti
xor
push
dec
sahf
fidivrl
lds
lods
fimuls
xor
dec
mov
out
sahf
fs
test
jg
lods
incl
jae
jmp
aam
jbe
or
mov
push
repnz
mov
jmp
dec
stos
jmp
adc
pop
andl
mov
imul
bound
or
sbb
push
sbb
or
cmp
iret
xchg
mov
rorl
push
pop
jg
mov
or
adc
lret
pop
cmp
adc
das
adc
sbb
sbb
or
mov
into
cltd
add
rcll
mov
test
jmp
pop
scas
lods
stc
lret
lea
mov
mov
push
dec
gs
fadds
mov
lcall
out
add
sub
push
lods
push
cli
jp
pushl
data16
data16
sub
pop
das
push
mov
in
jae
in
pushl
js
enter
arpl
push
mov
clc
movsb
lods
mov
dec
fwait
mov
jne
js
cmp
sarl
mov
popf
fdivrl
std
dec
decl
jo
stc
mov
fsts
loopne
scas
out
lahf
inc
lock
sbb
adc
loop
sub
mov
ljmp
das
push
mov
divb
xchg
data16
cld
mov
and
jno
out
jecxz
xchg
and
fidivl
arpl
sbb
out
jg
push
mov
pushf
sub
or
sbb
jmp
jg
insb
xor
push
icebp
and
jo
int3
enter
pop
push
inc
pop
andl
in
fmuls
jg
pop
and
aam
push
sar
nop
inc
cmpsl
test
xchg
mov
outsl
inc
imul
aam
jle
cmp
add
inc
add
and
decl
fcompl
fisttps
rorl
fistps
fbstp
leave
push
inc
xchg
pop
xchg
int3
mov
ja
jg
push
or
into
push
push
lods
jle
jb
sarb
repnz
std
cmp
and
xchg
inc
icebp
in
lods
mov
add
mov
pop
ljmp
je
aas
scas
faddl
test
movsl
testb
fwait
push
add
mull
push
mov
mov
add
je
push
outsl
mov
incl
aam
cld
mov
or
push
jbe
in
mov
push
ds
pop
inc
stc
insl
or
mov
sbb
xlat
push
mov
xchg
jle
jmp
sti
sub
pushl
adc
jg
repnz
jg
jge
adc
dec
sbb
mov
pusha
jmp
and
call
inc
adc
out
cmp
call
xlat
jg
fnstcw
jmp
pop
and
jecxz
nop
adc
out
test
inc
stos
dec
test
sbb
data16
mov
aaa
lret
fistpll
aaa
dec
fistps
imul
mov
fldenv
cmpsb
cmp
push
nop
inc
mov
out
test
test
mov
in
and
aaa
daa
adc
sub
cmc
sahf
jg
lret
mov
mov
add
aaa
sub
bound
lea
aad
and
scas
test
jg
push
pop
pop
lods
or
add
loope
mov
ret
ret
clc
jp
lods
stos
out
mov
fmull
in
jno
jg
or
mov
jmp
aas
cmp
xor
jmp
or
lret
fcoml
mov
xchg
decl
mov
inc
cmp
shl
and
dec
imul
andb
hlt
and
fiaddl
outsl
sbb
mov
and
push
xlat
stos
ja
and
insl
insb
loopne
sti
js
xchg
xchg
push
adc
xor
in
out
ljmp
in
neg
fildll
push
adc
mov
mov
sbb
xchg
push
outsl
data16
jnp
dec
nop
movsl
idiv
pushl
loope
fistps
arpl
leave
xchg
xor
xchg
xlat
dec
mov
jp
xor
mov
cs
adc
pop
das
decl
pop
pop
stos
xchg
je
cld
or
das
lret
int
push
frstor
xlat
jno
cltd
mov
push
jmp
gs
pushf
pop
and
repz
adc
pop
or
movsb
dec
movsb
inc
cmp
shlb
mov
out
repnz
mov
inc
jl
xchg
clc
adc
outsb
inc
jp
sbb
mov
insb
daa
xor
adc
mov
mov
iret
add
nop
mov
jmp
xchg
call
test
or
movsl
fistpl
jbe,pn
mov
adc
xchg
pop
daa
daa
jmp
xchg
xchg
cmp
out
das
dec
sub
bound
sbb
adc
out
call
push
push
push
push
add
inc
lds
les
std
mov
sbb
jmp
out
inc
lods
pop
and
pop
out
cmpl
xchg
jno
outsl
fadd
push
xor
pop
and
sti
cmp
jmp
mov
and
dec
pop
sbbb
and
fs
xchg
and
push
out
mov
int
pop
xchg
dec
in
flds
push
cmp
fidivrl
dec
inc
push
mov
push
inc
xchg
xchg
xchg
pop
lret
push
shr
ljmp
cmc
add
jg
mov
rorb
aam
inc
mov
lcall
inc
jae
add
jg
add
pop
and
inc
stos
sti
jg
jmp
gs
andl
xor
out
shrl
xlat
pop
cmc
frstor
pusha
loope
daa
pop
cmpsl
sar
decl
js
in
cwtl
dec
dec
cmp
aam
pop
iret
jmp
daa
adc
test
jg
pushl
inc
addl
stos
adc
push
fidivrl
cmp
jg
das
lods
adc
dec
add
and
arpl
jg
mov
lcall
mull
push
out
cmpb
dec
sub
add
pushf
adc
cli
ljmp
scas
push
mov
inc
push
sbb
sti
daa
repnz
out
lcall
add
dec
sbb
add
sbb
jle
call
decl
das
mov
inc
push
push
add
adc
sub
pop
push
push
add
call
jl
pop
push
jmp
mov
test
shl
loop
les
fnstcw
out
les
mov
inc
xchg
jnp
xlat
jae
jno
mov
mov
into
or
pop
pop
lret
xchg
dec
sbb
in
fnstsw
jle
dec
scas
pop
or
ljmp
fisttpll
pushf
repnz
mov
xchg
in
xchg
or
dec
cmp
ret
out
addr16
inc
insb
xchg
push
movsb
adcb
cs
xor
inc
push
ds
cwtl
fimull
call
mov
int
dec
adc
or
mov
pop
decl
addr16
into
scas
imul
dec
out
fstpl
mov
or
ror
sbb
in
inc
inc
out
cs
mov
loop
pushl
jl
or
pop
sub
mov
int
repnz
sbb
lods
insl
negb
cmp
lods
sbb
jo
lods
mov
mov
adc
pushl
pop
mov
loope
out
gs
sub
sub
jmp
or
mov
adc
and
xchg
out
mov
jb
jnp
jns
push
lcall
mov
add
sub
jg,pn
lcall
pop
xor
sbb
sbb
push
cmpl
jne
enter
push
pusha
jbe
sbb
outsl
push
and
lcall
mov
je
or
xchg
ret
aas
adc
dec
out
jne
scas
out
ja
jl
ljmp
ror
xchg
movsl
mov
movsb
push
dec
fnstsw
rcrl
push
stos
out
daa
aaa
and
push
xor
ss
mov
nop
pop
cmpb
pop
xchg
mov
es
pushl
cld
fcomps
cltd
mov
rcrb
push
push
or
lahf
stos
cmp
es
mov
test
cld
jg
shrb
and
push
cmpb
xchg
in
push
add
xchg
push
mov
ret
jl
mov
lret
sub
inc
es
das
decl
out
dec
jg
lods
jge
test
and
aam
push
lret
call
adc
test
jno
push
add
mov
inc
push
push
cmp
ljmp
stos
movsb
adc
mov
mov
pop
sbb
dec
jmp
sbb
mov
pushl
push
add
push
nop
push
clc
out
push
xchg
ffree
mov
ja
call
dec
fisttpl
sbb
push
dec
iret
aaa
pop
lret
loope
jg
adc
mov
addl
add
mov
mov
fcompp
add
std
outsl
xchg
push
das
test
into
stos
es
sub
fcomi
movsl
outsl
cmp
cld
aad
pop
sub
mov
mov
pop
icebp
call
cmp
outsb
cwtl
xor
js
push
scas
outsl
clc
fstpt
shll
mov
and
cli
or
mov
pop
rcr
arpl
xchg
pop
push
push
hlt
sub
imul
iret
add
cmc
das
sbb
xchg
dec
test
dec
adc
stos
maxps
push
inc
sahf
lret
dec
cld
filds
xchg
lcall
sub
mov
push
subps
push
push
sbb
cmp
mov
mov
dec
sbb
adc
sub
inc
mov
es
or
cli
mov
adc
cmp
cmpsl
jno
lds
outsl
je
or
xor
push
call
outsl
repnz
sub
sub
push
fbstp
sub
incl
out
mov
xchg
xor
cld
mov
decl
ds
jmp
dec
enter
enter
mov
add
jb
fisubrs
dec
test
fsubl
lcall
fdivs
imulb
aam
xchg
rolb
cmc
test
outsl
gs
scas
sar
out
pop
in
lods
and
push
lock
mov
loop
int3
or
pop
stos
push
mov
inc
jmp
jecxz
or
and
mov
es
aaa
das
aam
pusha
push
dec
int3
cmp
out
cwtl
push
jmp
out
pop
sub
movsl
imul
xchg
idiv
mov
cltd
sub
call
or
pop
mov
cmc
xchg
sarl
sub
daa
adc
fwait
push
sahf
mov
adc
out
int
int3
int
aad
mov
xor
and
test
neg
mov
dec
nop
fsub
ja
mov
sub
sbb
call
decl
jb
jne
scas
dec
outsl
push
dec
xchg
jg
rcrb
fwait
mov
icebp
lods
out
sti
jmp
and
mov
call
mov
pop
cmp
mov
call
call
mov
pop
popf
dec
pop
add
sbb
jl
rclb
mov
jp
push
push
sbb
call
pop
cmp
pusha
call
pop
dec
xor
sub
adc
call
popa
sbb
fcoms
or
adc
mov
int
jae
pushf
popa
inc
lds
sub
jg
xchg
mov
jbe
sbb
lea
stos
jp
or
int
ret
cs
ljmp
sub
push
shrl
or
fcmovnu
ljmp
sub
jb
sbb
js
xor
decl
into
popa
iret
jp
ret
mov
or
dec
mov
sti
jp
cs
or
xchg
mov
into
fldcw
pop
ljmp
aas
inc
push
scas
lock
in
mov
int
mov
idiv
sbb
mov
fwait
xor
mov
stos
movsb
mov
add
hlt
sbb
mov
stos
data16
in
pushf
sbb
repnz
f2xm1
pop
adc
mov
rol
clc
repz
sbb
orps
dec
cmpsl
xchg
or
les
cmp
aad
mov
mov
pop
lcall
mov
es
dec
sub
cmp
push
repz
mov
clc
add
ljmp
cltd
aad
int3
cmp
mov
jo,pn
inc
mov
cmp
pop
rcr
repnz
add
hlt
addr16
int
mov
iret
adc
cld
cmp
test
subl
divl
xchg
add
out
pop
cmpsb
sub
jp
or
pop
clc
or
orb
int3
sbbb
xor
fstl
mov
cmp
add
add
test
movsb
inc
mov
jmp
outsb
insb
sbb
lods
and
std
jl
gs
dec
in
out
fstps
call
dec
push
jle
pop
pushl
scas
inc
mov
cmp
inc
and
fadd
adc
sbb
mov
adc
in
cmpsb
shrb
iret
mov
pusha
mulb
cmc
or
scas
in
gs
in
decb
adc
jmp
ficomps
pop
cmpsb
rclb
cltd
fcoml
aad
push
push
decl
dec
add
sub
push
pop
inc
xlat
int3
pop
sarl
scas
imul
outsl
cld
or
orl
sti
mov
enter
inc
cmp
scas
rcll
mov
xor
stos
jg
xchg
xchg
add
cli
add
cs
mov
movsl
xor
gs
mov
cmp
into
sahf
xchg
mov
icebp
mov
popa
push
rol
std
lock
jecxz
cvttps2pi
add
xchg
and
mov
mov
mov
jno
lds
lret
inc
push
xchg
mov
popf
cmp
pushl
adc
xlat
jle
cmp
dec
and
and
stc
jnp
inc
mov
pop
jo
inc
dec
test
call
add
mov
jp
cmpsb
stos
cmp
fsub
cmpb
pop
fucomip
aaa
das
enter
cmp
clc
add
mov
loop
shl
xor
xor
nop
sub
addr16
cmp
lds
aaa
sub
lock
das
ljmp
lret
dec
testl
push
out
shrb
dec
bound
mov
xchg
pop
stc
inc
aad
mov
mov
xchg
pop
push
pop
clc
jg
xor
xor
daa
mov
jae
mov
das
push
lods
push
clc
decl
incl
inc
push
loop
rclb
push
xor
dec
adc
jmp
ljmp
xor
ljmp
or
push
dec
sbb
fildl
push
mov
dec
ror
sbb
lcall
call
or
ljmp
jecxz
call
xchg
jge
adc
inc
ljmp
jl
pop
mov
hlt
lods
hlt
cmp
push
clc
ljmp
ss
sub
jae
lock
arpl
jg
push
adc
mov
mov
and
jl
pop
jmp
das
rcll
cmp
imul
popa
cmc
cmp
mov
les
adc
sbb
int
mov
fmuls
icebp
icebp
mov
mov
jg
dec
jns
jbe
movl
insl
push
out
cmp
pushl
xchg
cmpsl
xor
gs
jge
cmp
xchg
push
mov
and
mov
pop
sbb
mov
cld
mov
scas
insb
mov
xchg
out
add
nop
xchg
mov
clc
mov
out
test
push
mov
or
mov
ss
subl
addr16
mov
shlb
jmp
aas
adc
sub
mov
push
xchg
pop
cld
pop
add
ja
imul
mov
decl
int
jge
pusha
xorl
ljmp
mov
jge
or
icebp
enter
and
push
leave
adc
xlat
sub
xchg
xor
dec
iret
add
test
imul
mov
outsl
adc
jb
mov
test
loop
push
sbb
fmull
lea
inc
inc
ret
aaa
jge
lahf
xor
pop
jp
in
jmp
cpuid
iret
sbb
ud2
decl
fildll
call
stos
idivl
pop
and
inc
xor
aad
xchg
push
jb
out
mov
addl
pop
into
in
clc
mov
jmp
dec
addr16
or
test
es
adc
mov
push
ljmp
and
aam
ljmp
fisubrs
ret
or
pop
or
xchg
fdivs
lcall
out
add
sbb
cld
mov
sbb
sbb
jl
xor
and
pop
call
xchg
in
lea
outsb
call
aaa
movb
testl
xchg
adc
cld
xor
lcall
or
fwait
mov
mov
jb
notl
imul
sbb
cld
or
mov
mov
xor
mov
xor
adc
jno
icebp
scas
clc
pop
jg
in
or
loope
add
lea
adc
fisttps
decl
mov
gs
mov
loopne
fbld
loop
lock
jg
inc
xchg
movlps
hlt
bound
xchg
pushf
xor
ret
cmp
or
std
sbb
cltd
lea
cld
call
jo
mov
lds
push
pshufw
jmp
xor
in
js
pop
mov
pop
add
push
pop
loopne
lods
cmp
or
adc
sar
add
mov
jns
aad
xchg
pop
orl
lahf
test
call
dec
jno
insb
fmull
insb
and
add
fcomps
enter
pop
clc
jp
sahf
ret
mov
mov
mov
shll
fcmovu
lock
cld
mov
outsl
sub
shlb
clc
jmp
and
jnp
int3
cmpsb
into
ret
fsubp
js
sbbl
push
add
mov
jb
jbe
sti
adc
adc
in
cltd
sbb
sbb
xor
and
cmp
ret
mov
mov
insb
test
in
mov
sbb
lock
pop
inc
ret
inc
push
aad
mov
jno
dec
std
fdivrs
sub
in
sbb
mov
xchg
inc
mov
int3
mov
cmp
or
fs
xchg
aad
xor
dec
jg
iret
push
std
mov
inc
out
push
popf
lods
cmp
xchg
cmp
ret
ret
mov
addl
jmp
cld
je
xchg
lcall
or
pop
pop
ja
xor
jmp
and
or
mov
mov
push
mov
or
call
mov
mov
cli
out
ljmp
jb
dec
inc
sub
jmp
pop
mov
call
lds
xor
out
outsl
pop
cli
int
in
mov
arpl
scas
jnp
daa
mov
pop
mov
ret
xchg
leave
or
ficoml
mov
mov
fwait
sti
jne
jb
push
sub
sbb
insb
cltd
mov
xchg
sbb
mov
mov
mov
mov
loopne,pn
into
movsb
in
push
daa
lret
pop
push
test
mov
hlt
outsl
sbb
dec
test
pop
fbstp
or
fcmove
push
ss
xor
jp
dec
sbb
push
push
pop
push
iret
shll
lods
push
xor
movsl
fbstp
pop
clc
mov
cld
xchg
adc
mov
xor
fimull
add
add
or
pop
repnz
jl
orl
adc
cmp
inc
ljmp
xor
add
movsl
adc
fucomip
inc
pushf
push
cmp
add
adc
mov
lods
dec
test
jle
loopne
jg
jne
testb
mov
inc
faddl
outsb
xor
addr16
cld
push
mov
clc
sbb
les
jg
adc
adcl
lret
dec
aad
dec
sub
xchg
cld
push
lea
in
mov
sbb
mov
in
out
adcl
xor
pop
lea
movsl
stc
int
adc
pop
push
inc
mov
data16
and
inc
mov
jae
cmc
loopne
int3
mov
sub
dec
mov
xchg
dec
xor
fidivl
xchg
pop
lock
in
lock
call
xchg
push
cld
or
hlt
xor
imul
out
lods
int3
sbb
dec
test
jmp
imul
jecxz
inc
jae
dec
dec
dec
mov
scas
push
or
dec
dec
sub
icebp
rcr
outsl
std
ret
cmp
lock
iret
or
clc
jg
insb
adc
sbb
push
ja
mov
and
call
ss
aaa
cmp
inc
sbb
rcll
mov
imull
idiv
outsl
mov
sar
daa
das
dec
mov
add
dec
pop
out
clc
jg
ljmp
leave
mov
aaa
dec
sbb
jo
movsl
or
cmp
test
ret
push
and
push
inc
jo
jge
test
or
fistpll
sub
js
mov
dec
sub
mov
js
ret
pop
add
sbb
mov
gs
mov
int3
sub
xchg
or
sbb
pop
mov
push
push
mov
or
add
add
sub
jb
cltd
test
mov
or
inc
cld
add
or
sbb
call
fildl
sbb
stc
push
test
jmp
jecxz
and
sbb
inc
cmc
mov
adc
mov
or
movswl
pop
sbb
cwtl
push
sbb
inc
xchg
cmpsb
std
ljmp
bound
push
fdiv
insb
ds
in
fldenv
mov
data16
icebp
mov
jo
cmp
jo
jp
cli
cs
jmp
pop
sar
out
into
lock
dec
push
push
js,pn
dec
mov
cwtl
pop
adc
shlb
rolb
jnp
lods
fs
inc
and
mov
sbb
fsubs
into
sub
pop
rorb
sbb
sub
aaa
ja
and
xor
cmp
jg
pushl
lret
sahf
push
add
ficoml
insb
mov
push
pop
push
lret
mov
mov
cmp
int
pop
mov
fs
incl
fimull
sbb
jg
daa
int3
test
cmp
mov
popa
mov
and
std
ljmp
mov
das
dec
dec
or
loopne
movsl
pop
push
daa
mov
ljmp
mov
ja
push
add
cmp
or
rcrl
sar
lcall
mov
lock
xchg
fidivrs
filds
cwtl
sub
xorb
dec
mov
ss
push
lahf
cmc
bound
outsl
mov
popa
test
idivb
push
mov
xor
mov
adc
sub
ret
pop
and
decl
inc
repnz
push
cmp
lret
cmpsb
lock
gs
call
mov
clc
lods
jns
inc
inc
hlt
mov
inc
xlat
mov
sar
jl
int3
rcll
push
outsb
outsl
sbb
sbb
insb
jno
sti
ljmp
mov
jnp
xlat
cmp
hlt
cmp
mov
cld
or
aam
jmp
jns
negl
popa
mov
xchg
sahf
les
ror
jmp
sbb
bound
sub
pop
cs
jg
push
fmuls
lret
sbb
adc
xchg
movsb
repnz
sub
sbb
ds
clc
or
popa
xor
inc
mov
push
aam
add
fidivs
xchg
cmp
iret
push
or
lods
fdivr
mov
add
int3
adc
push
testl
mov
pushf
pop
shl
pop
push
test
call
push
in
loop
sarb
mov
jmp
in
jmp
movsl
sub
pusha
jg
mov
dec
mov
cmpb
xchg
dec
xchg
cli
cld
push
jmp
rcll
call
add
cmp
mov
pusha
mov
in
ret
sub
test
popf
mov
adc
imul
stos
fwait
rorl
sub
mov
fwait
sbb
add
mov
adc
stc
and
mov
filds
or
mov
sub
aas
popa
mov
xchg
fucomp
das
push
jns
test
cli
add
cs
testl
lock
mov
mov
jge
loopne
movsb
scas
shll
icebp
fcmovu
xchg
rolb
leave
jg
mov
or
jne
ss
shlb
push
mov
sub
mov
mov
push
scas
arpl
incl
jmp
mul
test
mov
lret
fwait
clc
mov
push
cs
mov
call
aaa
ret
pop
aam
dec
test
addl
mov
xchg
mov
rcrb
pop
adc
mov
in
mov
pop
pop
jo
arpl
fcompl
pop
mov
enter
outsl
push
lods
and
cmp
stc
std
push
iret
sbb
add
idiv
call
lret
mov
testl
cmc
and
jnp
or
stos
or
and
pop
xor
jmp
mov
lods
cmpsl
lahf
lods
fs
dec
pushl
ds
mov
dec
sbb
mov
movsl
incl
push
sub
or
jns
sbb
daa
and
incl
fildl
mov
stos
mov
shll
or
movsl
push
jge
sbb
xorl
flds
popa
xor
mov
decl
lret
push
push
test
ja
ja
ja
iret
cmc
sar
mov
sarl
bound
addr16
xor
inc
outsl
pop
mov
jp
in
mov
push
aam
pop
iret
in
shrl
test
fs
fwait
jg
incl
scas
popf
add
inc
pop
arpl
pop
xchg
mov
sbb
ret
fadds
pushf
adc
dec
stc
mov
gs
push
call
and
pusha
aam
iret
or
cmpsb
adc
lcall
sbb
out
xchg
pop
cltd
mov
jge
push
xor
cld
in
jmp
icebp
loope
icebp
jge
leave
and
pop
mov
sti
cmpsl
std
ss
xchg
pop
mov
das
fstps
mov
sbb
in
ret
rorl
scas
inc
cs
pushf
pop
adcl
incl
rorl
push
dec
or
nop
inc
fdivrp
ljmp
mov
or
test
lock
mov
push
push
cld
decl
mov
sub
cmpl
and
mov
cmpsl
push
outsb
cmc
pop
adc
scas
insb
notl
cmp
iret
push
add
lods
xor
mov
in
inc
lds
inc
mov
mov
idivb
addl
push
lods
test
push
je
icebp
xchg
pop
clc
inc
mov
sub
dec
loope
cmp
push
xchg
mov
ljmp
cmp
mov
and
rcll
popa
dec
mov
mov
das
inc
mov
fs
add
jne
in
je
mov
jmp
or
in
pop
push
inc
or
je
pop
fcmovnu
ss
lcall
mov
and
testl
stc
jmp
jg
loope
mov
sbb
add
scas
push
xchg
out
and
imul
das
sbb
out
cmp
inc
in
outsb
mov
push
lahf
jb
push
adc
in
ficomps
or
jbe
mov
icebp
lods
jo
inc
xor
jg
dec
mov
arpl
call
mul
ret
push
fs
pusha
mov
out
and
jl
fsubr
jle
in
test
pusha
mov
ss
popf
out
lret
mov
mov
enter
outsl
mov
insl
jo
shlb
cli
idivb
out
mov
fs
lods
test
jle
std
sub
cwtl
sti
stc
cwtl
push
adc
inc
stos
dec
lcall
nop
mov
inc
js
aas
or
pop
dec
cmp
sbb
cltd
mov
jmp
xor
push
movsl
icebp
or
xor
push
into
notl
js
leave
xchg
rol
adc
insb
xchg
enter
rorb
shll
mov
add
aam
incl
imull
jle
call
inc
push
dec
mov
sub
sub
popa
adc
fiadds
mov
sub
movsl
xlat
imul
mov
inc
push
inc
orl
ret
and
loopne
mov
es
or
mov
push
cmp
inc
shrb
jmp
push
sbb
orb
mov
enter
fmul
pop
inc
int
mov
sbb
bound
repz
cmp
or
nop
jmp
lahf
and
fidivrl
jge
icebp
lock
call
sub
enter
pop
xor
cmpsl
pusha
je
in
fmuls
ljmp
push
mov
push
ret
and
xlat
test
cmp
cltd
shll
add
je
push
adc
movsb
mov
push
ds
mov
dec
mov
mov
je
orb
subl
lea
std
push
iret
xchg
xchg
pop
insl
push
addr16
test
adc
push
xchg
cli
mov
mov
or
and
inc
fistps
inc
xor
testl
jmp
cwtl
icebp
loope
adc
push
dec
test
inc
add
adc
add
ljmp
or
inc
xor
xor
mov
mov
xor
xor
inc
xor
xchg
pushl
mov
fnstenv
add
push
xor
xor
outsl
xor
xor
xor
lock
call
xor
pusha
xor
cltd
xor
xor
xor
xor
xor
call
push
xor
xor
xor
jmp
adc
xorb
xor
lock
inc
ss
ss
ss
mov
xchg
movsl
shlb
jmp
ss
ss
and
xor
inc
aaa
popa
aaa
jle
ret
aaa
add
and
xor
jb
jge
xchg
push
cmc
sub
or
cmp
cmp
outsl
lock
pop
cmp
ret
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
outsb
cmp
jge
xchg
cmp
cmp
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
dec
cmp
xchg
cmp
sarb
cmp
fwait
lods
ds
sarl
lock
jmp
ds
sub
cmp
fs
je
cmpl
aas
ret
aas
sarb
aaa
and
and
xor
xor
xor
jg
stos
xor
adc
xor
xor
xor
xor
xor
popa
xor
ljmp
fwait
xor
xor
xor
sbb
pop
xor
fwait
xor
or
ljmp
aam
xor
xor
sub
xor
xor
xor
cmpl
xchg
xor
xor
inc
ss
sbb
mov
ret
add
push
aaa
xorb
sub
clc
ljmp
cmp
pusha
cmp
jne
xchg
cmp
cmp
cmp
cmp
cmp
sbb
sub
ljmp
dec
cmp
jo
cmp
cmp
cmp
or
mov
lcall
cmp
cmp
ljmp
push
fbld
popa
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
js
jle
mov
cmp
aam
repnz
arpl
outsl
ds
aas
pop
aas
insl
mov
cld
fbld
jge
test
xchg
aas
mov
daa
xor
jg
xor
xor
xor
xor
mov
shll
xor
xor
xor
mov
movsl
xor
pushl
mov
xor
xor
xor
xor
xor
xor
push
xor
jge
ja
pushl
nop
xor
xor
xor
xor
sub
push
das
cmc
xor
xor
xor
mov
xor
les
xor
inc
gs
xorl
divb
mov
inc
aaa
cwtl
aaa
pop
cmp
cmp
cmp
dec
cmp
cmp
popa
cmp
cmp
cmpb
cmp
cmp
cmp
clc
call
or
push
cmp
outsb
cmp
sahf
cmp
out
daa
idivb
dec
imul
test
ds
ds
pop
jmp
ds
add
sbb
xor
dec
aas
imul
inc
add
lcall
add
xor
dec
xor
jl
xchg
xor
repz
xor
xor
xor
in
adc
sbb
xor
popf
xor
xor
xor
xor
inc
xor
xor
adc
xor
xor
xor
xor
xor
pop
xor
mov
aad
sbb
xor
outsb
sbb
and
sub
cmp
inc
mov
cmp
cmp
je
xchg
mov
lahf
cmp
mov
test
call
cmp
add
sbb
sbb
cmp
lcall
cmp
pop
hlt
pop
call
dec
test
cmp
cmp
dec
cmp
xchg
cmp
cmp
cmp
decl
sbb
pop
cmp
ja
fnstcw
or
adc
ret
mov
sbb
adc
and
cmp
inc
test
cmc
add
or
lret
push
pop
adc
sbb
repnz
das
push
rcrl
xor
pop
nop
xor
mov
jne
daa
xor
xor
xor
xor
xor
xor
xor
mov
inc
xor
xorb
xor
popa
xor
xor
mov
xor
xor
xor
xor
xor
xor
xor
addr16
out
clc
mov
addr16
mov
xor
insb
ss
dec
lcall
mov
out
or
push
aaa
and
cmp
loopne
lds
stos
sub
cmp
cmp
repnz
cmp
cmp
cmp
imul
cmp
jg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
ljmp
fbld
cmp
pop
cmp
jle
popf
cmp
dec
push
cmp
cmp
ljmp
hlt
push
cmp
cmp
jo
jbe
cmpl
cmp
pop
cmp
cmp
xchg
cmp
outsl
sub
out
cmp
ds
sub
dec
jg,pt
xchg
mov
icebp
mov
mov
into
ds
fidivrl
out
ss
ljmp
aas
cmp
inc
aas
push
aas
push
aas
pop
aas
mov
mov
enter
pusha
jecxz
mov
adc
imul
xor
mov
cmpsb
xor
xor
xor
xor
xor
xor
xor
xor
sbb
incl
ja
jne
sahf
xor
mov
rcr
xor
mov
inc
xor
imul
lcall
scas
stos
xor
pop
xor
xor
xor
xchg
xor
xor
xor
xor
xor
xor
incl
xor
xor
xchg
jae
jp
xorb
ret
xor
xor
xor
sub
xor
xchg
xor
lods
xor
shll
ss
ss
ss
cmp
decl
outsl
ss
xchg
ss
mov
sbb
rcrl
adc
sbb
es
sub
decl
aaa
jp
mov
aaa
int3
aaa
fdivs
icebp
aaa
stc
aaa
add
or
adc
adc
cmp
xor
dec
cmp
push
cmp
cmp
outsl
cmp
aaa
sbb
cmc
mov
aam
jmp
adc
and
mov
cmp
cmp
cmp
jmp
sar
sarl
fdivrl
out
cmp
cmp
inc
cmp
cmp
sbb
imul
loope
idivl
std
pop
pop
cmp
repz
ljmp
jnp
xchg
cmp
cmp
cmp
cmp
cmp
inc
cmp
cmp
cmp
hlt
movsl
lcall
cmp
cmp
cmp
jge,pt
aaa
add
call
add
sbb
and
ljmp
and
dec
rcrl
popa
aas
data16
outsb
aas
ja
cmpb
fistl
aas
stos
fucomip
aas
icebp
aas
stc
aas
jecxz
mov
or
xor
xor
xor
std
xchg
cli
sbb
xor
xor
xor
xor
xor
cmp
test
lods
aad
sbb
mov
imulb
icebp
fcomip
xor
fxch
xor
xor
xor
xor
fnstenv
and
cld
mov
cs
fstl
xor
lock
or
jo
xor
xor
xor
jmp
xor
iret
iret
dec
xor
jge
jo
out
loopne
xor
in
xor
ss
jo
ja
ret
push
test
fnstenv
sti
decl
jne
pop
jno
xlat
lods
aaa
mov
xlat
aaa
add
sbb
popf
cmp
lcall
lods
jge
jg
cmp
jb
cli
out
cmp
xchg
xor
push
cmp
mov
jge
repz
mov
cmpsb
lcall
cmp
cmp
cmp
cmp
cltd
sbb
and
sub
cmp
out
push
incl
push
cmp
pop
cmp
jbe
jnp
stos
pushf
cmp
ljmp
cmp
inc
cmp
cmp
cmp
cmp
sarl
movsl
jno
lds
sar
incl
ds
aas
or
aas
and
es
jae
decl
cmp
aas
mov
xchg
aas
lcall
aas
mov
aas
in
out
aas
hlt
aas
cli
lahf
and
add
std
xor
inc
xor
xor
xorl
xor
xor
cmpl
adc
and
sub
xor
outsb
jns
lods
divl
loope
hlt
xor
xchg
xor
pop
lcall
jb
popa
jnp
sahf
xor
xor
xor
jmp
cmp
dec
xor
cmc
mov
sarb
lock
incl
xor
xor
xor
xor
xor
out
dec
xor
xor
cli
mov
xor
xor
xor
xor
xor
jg
xor
loop
dec
xor
jb
xorb
xor
out
mov
push
ss
ja
and
lcall
mov
hlt
ss
sub
xor
dec
aaa
dec
aaa
pop
aaa
push
mov
xor
cmp
cmp
push
insl
cmp
cmp
mov
mov
aam
ficoml
repnz
xor
add
cltd
adc
cmp
ret
cmp
add
adcl
sbb
clc
incl
cmp
cmpsb
cmp
mov
cmp
cmp
jmp
cmp
outsl
stos
cwtl
cmp
jns
jg
pop
cmp
cmp
cmp
xor
dec
add
or
mov
cwtl
cmp
mov
ret
jg
cmp
in
cmp
sbb
push
ds
in
ds
aas
or
adc
hlt
fcomip
aas
sbb
push
jns
aas
xor
ss
cmp
inc
and
push
aas
pop
aas
pusha
subl
js
jle
test
mov
pop
inc
insb
mov
fidivl
ljmp
mov
xor
inc
xchg
dec
xor
push
xor
mov
sti
push
or
xor
lods
inc
mov
or
mov
test
xor
xor
push
fdivs
fdivl
loopne
in
call
xor
jmp
xor
push
lds
sbb
lock
xor
and
sub
xor
xor
sarl
inc
xor
pop
decl
js
nop
xor
xlat
lods
xor
xor
xor
xor
repz
jle
and
xor
inc
xor
je
jl
scas
filds
add
or
xor
xor
push
aaa
adc
das
xor
pushf
push
pop
push
xor
loopne
jb
mov
xor
xor
movsl
insl
push
sar
ss
cmp
cmp
cmp
aam
lea
jb
mov
ljmp
add
mov
dec
imul
aas
in
gs
or
aas
xor
and
and
push
mov
cli
nop
lret
push
fwait
cwtl
add
int
pop
lcall
in
cwtl
push
arpl
add
iret
pop
mov
adc
filds
flds
or
push
adc
in
addr16
repnz
add
inc
push
pop
add
nop
sbb
pop
add
sub
mov
push
push
add
ret
adc
in
pop
or
fildll
and
mov
dec
cs
cmpsb
fs
addr16
mov
adc
jle
daa
adc
jbe,pn
insb
xor
loope
fbstp
inc
add
adc
sbb
std
mov
add
dec
add
cmpl
stos
bound
les
inc
cld
jmp
pushl
cwtl
and
aad
xchg
in
mov
mov
mov
call
pop
imul
js
sbb
jmp
inc
in
in
pop
testl
pusha
pushl
dec
lock
enter
jge
inc
jmp
xor
or
or
call
xchg
outsl
aam
push
les
and
mov
and
fwait
fwait
xor
cmp
fisttpll
cld
dec
insl
adc
jae
pop
mov
push
mov
scas
cmp
rclb
add
das
mov
dec
dec
sti
aaa
and
xchg
dec
sbb
xchg
in
decl
inc
mov
and
cmc
jnp
xchg
imul
xchg
pop
jg
movsb
imul
inc
xchg
lcall
push
sbb
mov
push
mov
push
or
or
add
xor
jl
dec
mov
pop
ret
call
jg
cmpsb
xchg
and
aad
insl
aas
mov
jle
aad
sub
inc
lret
mov
inc
ret
sbb
cmp
dec
leave
mov
dec
xchg
mov
pushf
out
cs
in
loop
inc
andl
jb
imul
fldcw
add
in
or
mov
pop
sub
mov
cld
lcall
or
xor
stos
hlt
add
jmp
inc
cld
push
call
jg
push
mov
add
pushf
push
idivb
xchg
mov
adc
call
pop
jnp
cmp
mov
adc
loopne
pop
cmc
mov
push
pusha
pushf
mov
in
mov
out
cmpsb
adc
and
insb
mov
lock
xor
xchg
add
push
mov
add
or
mov
lcall
adc
mov
xchg
fstp
add
add
ret
jae
add
pop
jg
aaa
mov
hlt
and
test
cmp
push
add
and
mov
shlb
mov
and
scas
shll
data16
xchg
dec
insb
out
loopne
add
mov
and
hlt
xor
lock
xchg
iret
enter
call
call
outsl
cltd
imul
sbb
loope
nop
in
lods
sbb
in
flds
jns
in
nop
lret
jmp
dec
push
cmp
pop
push
or
shlb
ss
inc
dec
or
push
in
mov
push
or
mov
pop
in
and
pop
jmp
inc
fistpl
mov
inc
and
rep
push
popa
imul
dec
add
dec
jbe
cmp
and
mov
out
add
or
mov
shlb
mov
call
sbb
std
and
xchg
xchg
fmul
inc
xlat
nop
push
or
ret
cld
sbb
fnsave
aam
and
jne
push
push
call
push
pusha
lods
push
aad
push
icebp
adc
test
js
lods
fwait
mov
sarl
sti
jnp
and
cmp
or
mov
pop
lea
pop
pusha
lcall
inc
or
cmpl
mov
jb
lea
loopne
mov
xor
lods
call
fstps
sbb
or
out
repz
xchg
insb
cmpsb
imul
jo
xchg
mov
testl
push
pushl
outsb
jmp
in
push
sbb
movl
xor
xchg
nop
jmp
or
fsub
pusha
das
sub
int
lcall
pop
mov
xchg
jne
movl
mov
cs
or
sbb
addr16
xchg
mov
push
mov
ja
adc
jae
push
ja
gs
test
loopne
or
lcall
cmp
lock
mov
push
jecxz
fiaddl
pop
add
dec
mov
adc
cmp
mov
orb
dec
testl
dec
and
dec
pusha
inc
cli
add
or
ret
aas
jmp
ss
sbb
out
inc
mov
enter
jne
pop
loope
or
adc
xor
adc
lock
pop
lahf
call
or
cld
inc
adc
fwait
hlt
and
jg
mov
mov
jge
add
int3
mov
pop
adc
imul
xor
add
sbb
push
fwait
aas
or
add
jne
jb
add
out
lea
loope
or
xor
pop
push
sti
mov
pop
adc
jae
enter
fs
pop
insl
add
and
adc
or
mov
pop
add
cmpsl
add
sub
outsb
fisttps
jno
nop
and
add
lahf
aam
push
jae
mov
add
inc
pop
popa
arpl
add
inc
ja
fdivrl
dec
out
gs
mov
inc
jns
add
das
clc
insl
push
adc
dec
jae
jb
jo
mov
sti
mov
push
mov
push
outsb
push
outsl
fs
insl
inc
adc
pop
xchg
sti
testb
push
imul
push
loop
sub
sub
data16
popa
or
ret
test
adc
xorb
push
and
aaa
jns
dec
mov
imul
sbb
orl
je
jo
mov
cmpsb
jae
jb
insb
and
inc
add
xchg
rcrb
xor
dec
lahf
xorb
xor
pop
fildll
fdivl
push
dec
dec
xor
ljmp
xor
xor
xor
xor
add
xor
pop
xorb
mov
xor
cmp
mov
lcall
adc
inc
ss
ss
ss
ss
cmc
js
xorb
ss
ss
divl
cld
adc
das
add
add
aaa
cmp
aaa
xchg
aaa
mov
xchg
fdivl
loop
out
aaa
inc
mov
mov
push
dec
add
popf
mov
pop
arpl
adc
mov
insl
cmpb
sbb
insl
clc
jnp
fbstp
insb
or
in
popa
outsb
fwait
insl
addr16
aam
pop
or
lfs
mov
lea
inc
lcall
push
xchg
push
jno
rorb
pop
ss
pop
mov
xchg
mov
ss
addr16
mov
add
int
pop
jbe
cmp
jne
xchg
es
mov
mov
pop
arpl
sub
mov
cs
push
jo
jp
int3
insl
xchg
mov
mov
jmp
xlat
xor
add
sub
jbe
shlb
inc
addr16
xor
scas
xor
add
or
pop
in
pop
mov
mov
outsl
sbb
bound
cmp
xlat
jne
push
mov
pop
jp
scas
jmp
insl
inc
jae
fwait
push
and
xor
pop
pop
xlat
xor
outsl
sub
imul
cmpsl
dec
xor
mov
jnp
imul
push
or
xor
lods
mov
das
pop
pop
ja
outsb
frstor
mov
jg
push
insb
cmp
daa
popa
shll
cmp
pop
rcrl
and
jl
jns
in
xlat
sub
pop
mov
add
insl
xchg
pop
add
ja
addr16
mov
movsb
adc
outsl
cmpb
jmp
scas
lods
jnp
das
or
add
fnstenv
stc
jnp
dec
insb
push
sbb
repz
jae
mov
daa
fs
aaa
pop
scas
dec
mov
mov
sbb
push
js
push
sub
push
int3
jno
sbb
push
test
cld
xchg
out
call
ljmp
inc
sub
add
mov
mov
jle
add
or
jne
cmp
test
add
stos
push
add
add
xor
test
movb
cmp
ficoms
pop
cmpl
lock
xor
xorl
jmp
das
mov
aaa
add
repz
ret
ret
xchg
test
std
xor
pop
jmp
or
push
mov
or
aas
outsl
or
add
mov
pusha
mov
mov
jmp
push
inc
and
pop
daa
jmp
out
push
cld
out
xor
stc
repnz
add
jmp
mov
lret
jg
lahf
adc
mov
push
mov
jmp
jg
iret
jmp
lea
and
ds
xor
out
sti
in
imul
mov
push
mov
ret
xchg
out
in
addl
xchg
adc
div
push
das
sbb
xor
jmp
add
mov
fcoml
daa
pop
add
push
jmp
xchg
mov
pop
push
stos
ret
cmp
jl
mov
sbb
pop
cmp
stos
frstor
pop
push
mov
add
adc
jg
or
cmp
inc
pop
jecxz
xor
clc
jb
jmp
xor
sub
jge
neg
pushl
fisttpl
xor
add
pop
pusha
je
mov
jno
fwait
cmpsl
and
in
mov
cld
pop
shr
xor
mov
add
roll
call
xchg
xor
sub
xor
shr
shl
or
mov
call
xchg
cmp
add
dec
sub
sub
jmp
lock
push
and
mov
adc
lret
test
popa
sub
push
and
in
movsb
xor
add
sub
loope
outsb
jmp
and
dec
push
xor
inc
jbe
adc
or
or
sti
jo
cmp
movsb
xor
mov
in
jle
adcb
sub
add
jge
add
outsb
das
out
or
adc
xchg
push
or
shl
imul
cmp
scas
sbb
add
sub
jae
push
mov
or
pop
imul
in
push
add
ret
adc
fistps
orb
mov
push
push
adc
pop
sub
add
mov
les
and
and
mov
test
lret
pop
loopne
ret
pusha
push
ret
cmp
add
aaa
add
push
je
incl
jmp
mov
loopne
fistpll
pop
not
jmp
pop
jbe
mov
fstl
pop
push
pop
pop
mov
outsl
jg
sub
dec
xor
add
pop
sbb
cld
aaa
mull
hlt
pop
sub
call
jmp
xor
pop
jnp
fs
ret
pop
adc
lret
in
sub
add
repnz
pop
xor
jmp
shrl
mov
mov
push
mov
mov
pop
jmp
clc
mov
mov
imul
adcb
pop
or
jp
rolb
in
inc
xor
bt
mov
push
cmpl
pop
icebp
xor
rcl
xor
adc
out
push
push
mov
sub
pop
add
dec
mov
fnsave
hlt
xor
xor
pop
xchg
push
adc
shlb
lods
add
sub
insb
aam
inc
mov
mov
add
pop
jmp
jmp
xchg
push
push
jmp
iret
clc
sar
neg
sub
shr
xor
clc
pop
push
mov
xor
mov
jmp
repnz
fisttpll
pop
add
jmp
in
fimuls
jmp
push
sti
and
sbb
test
push
aaa
cmp
stos
inc
outsl
or
adc
mov
subl
xor
mov
adc
or
nop
std
sbb
add
ja
push
js
icebp
xor
stc
or
fbld
daa
mov
xor
push
int3
insb
or
je
dec
mov
rcll
rclb
add
call
add
and
in
or
add
sub
push
das
lds
mov
and
jecxz
aam
test
dec
xor
loopne
test
sub
out
adcl
lret
jmp
add
cmp
and
mov
daa
mov
mov
xchg
sub
sbb
xchg
xchg
rol
push
outsb
add
xor
mov
out
popf
pop
adc
add
pop
add
or
sbb
loopne
fiaddl
fcomps
sbb
mov
int
mov
add
inc
cmp
pop
push
icebp
ds
fisttpll
daa
sub
addb
mov
rolb
push
movsl
mov
xor
pop
jb
adc
adc
pop
enter
out
pop
das
loope
addr16
or
testl
sbb
cmc
bound
add
or
icebp
pop
push
xchg
xor
iret
inc
or
add
negb
sbb
xor
push
inc
sub
idiv
pushw
data16
push
and
mov
push
je
sub
adc
jg
mov
sahf
jo
xor
into
push
cmc
or
mov
sub
outsl
lock
dec
or
fxrstor
loope
dec
lea
push
push
ficomps
inc
loopne
orl
test
pop
inc
push
mov
movsb
mov
fstpl
mov
test
add
fwait
arpl
push
stc
xchg
fdivr
xor
icebp
xchg
mov
push
mov
shl
push
dec
mov
pop
xor
jmp
filds
pop
jbe
jae
add
or
mov
xchg
jmp
mov
aaa
arpl
icebp
sub
imul
mov
stc
fsubl
aaa
mov
add
inc
inc
jl
or
pop
outsb
push
nop
hlt
add
lock
inc
jle
inc
mov
dec
inc
add
cs
xor
imul
sub
xor
dec
clts
pop
adc
aaa
xchg
test
push
push
pop
clc
jne,pn
inc
adc
pop
sub
lret
mov
test
loopne
mov
clc
jae
push
mov
inc
cli
aam
xchg
loopne
cmp
repz
and
sub
jb
mov
mov
sarl
push
sti
andb
push
movzwl
fcmovne
mov
fists
add
outsb
add
cmpps
or
imul
push
sbb
push
inc
cmp
push
mov
add
mov
add
in
incb
push
push
dec
mov
push
decl
cmp
neg
inc
dec
lods
jmp
ljmp
add
push
aam
ficoms
cli
mov
xor
stc
xlat
add
mov
sub
data16
sub
sub
sub
stc
ja
je
xchg
xchg
cmp
std
inc
sub
jmp
xchg
test
mov
or
insb
and
mov
adc
xchg
dec
leave
mov
pop
pop
add
or
pop
cmpsb
call
xor
or
adc
and
ss
mov
fbstp
mov
xchg
dec
xlat
out
xorb
imul
inc
mov
mov
mov
pop
aaa
push
jmp
das
arpl
inc
int
mov
jns
sub
or
aam
fisttps
cmpb
dec
inc
jb
pop
add
sub
lea
sub
fildl
das
adc
jmp
sti
mov
push
push
mov
pusha
or
int3
lds
xor
jle
sbb
jmp
das
insb
fwait
sbb
hlt
sub
xor
xchg
jns
jmp
aam
data16
adc
outsb
cwtl
push
psubq
xchg
sub
lds
test
jle
sbb
mov
xor
shrd
js
pop
add
mov
pop
daa
aaa
inc
mov
sbb
jb
jb
sbb
bound
push
jmp
adc
or
mov
push
dec
rcl
iret
ret
add
repz
cltd
or
movsb
or
stos
mov
mov
lds
dec
add
or
mov
scas
pop
sbb
mov
or
xchg
dec
jecxz
cwtl
cmp
hlt
ljmp
sbbb
sub
mov
dec
pop
mov
inc
es
sbb
dec
popf
xchg
hlt
ljmp
jle
and
push
sub
and
loopne
mov
jne
adc
cmpsb
stc
jmp
call
cmp
fsubrs
mov
cmc
xchg
lcall
push
aam
repnz
cmp
inc
mov
addb
sub
loope
es
out
push
mov
xchg
adc
mov
mov
decb
mov
jmp
lds
mov
pop
mov
xlat
icebp
sarb
add
pop
data16
jo
jno
sub
inc
loop
aas
dec
cltd
scas
push
dec
mov
outsb
scas
cs
rclb
mov
pop
fiadds
shlb
push
in
inc
push
cmc
aaa
xor
icebp
xchg
mov
xor
sub
cld
not
and
push
jmp
add
jmp
mov
out
sub
xchg
scas
or
orb
adc
pushf
adc
adc
inc
mov
std
js
scas
lahf
push
pop
inc
jg
cmp
jg
mov
mov
not
xchg
pushf
pop
add
or
shl
and
decl
mov
fidivs
xor
xchg
xor
sub
aam
cmp
mov
sti
jb
mov
loope
js
cmpsb
fistps
xchg
push
mov
inc
les
cmpsb
sub
mov
fstps
aaa
jmp
push
out
add
fbstp
xor
pop
out
into
jmp
leave
mov
push
and
int
repnz
dec
adc
ljmp
pop
in
stos
xor
in
adc
sub
sbb
lock
add
push
lock
xor
pop
popa
or
orb
jge
lea
and
push
dec
add
add
mov
in
pop
push
pop
push
scas
das
jo
jmp
cmp
repnz
pop
out
leave
or
adc
sbb
or
mov
dec
shrl
addb
lock
pop
ja
add
in
dec
add
push
mov
dec
iret
loop
and
in
add
inc
out
std
cmp
dec
int3
hlt
jmp
mov
repnz
je
jbe
mov
test
in
scas
mov
pop
xor
pop
mov
sub
sub
add
or
fldl
or
mov
iret
mov
xchg
add
mov
mov
cmp
loope
arpl
jg
or
icebp
arpl
pop
jl
pop
dec
je
cmc
loopne
xchg
scas
add
or
push
mov
lret
inc
sbb
adc
iret
sub
inc
bound
pop
mov
andl
movsl
shr
loop
inc
xchg
xchg
add
add
icebp
lret
inc
and
add
sub
jmp
mov
insb
or
xor
mov
in
or
test
loopne
pop
cmpsl
leave
push
dec
sbb
data16
pop
dec
jne
sti
or
mov
popl
cld
adc
dec
and
test
movsl
ss
add
or
mov
test
outsl
dec
jmp
lock
sbb
icebp
into
pop
jle
pop
adc
cld
hlt
int3
push
shl
cmp
in
popf
fsubs
jmp
or
inc
and
xor
imul
pop
or
dec
ret
int3
mov
sbb
jo
daa
int
nop
imul
sbb
repz
ret
shlb
loop
test
pop
js
insl
pop
mov
outsb
ret
pop
icebp
jbe
xchg
aam
pop
or
pusha
ja
add
mov
cmp
mov
push
sub
lcall
adc
jnp
mov
xor
push
mov
mov
imul
pop
test
add
and
xor
mov
or
pop
sub
and
push
cltd
add
loopne
outsb
pop
mov
xlat
in
sub
loopne
rcll
out
push
dec
ret
inc
add
lahf
and
add
mov
push
xor
sahf
notl
or
inc
pop
inc
in
ja
sub
jmp
iret
cli
out
sub
mov
jo
clc
jmp
icebp
inc
loope
popf
adc
xchg
push
and
gs
mov
idivb
mov
adc
adc
dec
xchg
je
mov
hlt
mov
icebp
mov
loope
add
jmp
cmpl
imul
in
lds
inc
lods
addr16
sub
pop
xchg
pop
inc
nop
fdivrl
sbb
inc
fsubrs
xor
out
pop
add
lods
movswl
movsb
enter
adc
ret
clc
imul
fistpl
add
fiaddl
xchg
adc
sub
shrl
and
and
cli
add
in
or
xchg
orl
icebp
lods
cmp
adc
int3
aaa
dec
sbb
or
cmp
aas
jmp
dec
mov
mov
xchg
fwait
pop
cltd
pusha
jmp
lahf
es
dec
and
dec
add
ss
mov
cmpsb
pop
add
lret
call
push
add
loopne
or
push
div
int
jo
mov
test
jle
sbb
clc
xchg
iret
add
rcrl
cmp
out
icebp
addr16
jmp
popa
ret
das
xchg
sub
mov
and
sbb
lret
out
loopne
iret
sub
xor
pop
inc
ds
inc
add
or
out
cli
push
adc
sbb
push
pop
mov
js
ja
lahf
adc
ljmp
jo
mov
subb
inc
cmp
jmp
fwait
hlt
sti
js
add
push
dec
adc
pusha
das
jl
mov
add
arpl
adc
xor
pop
stc
and
fisttpl
adc
out
mov
add
xor
mov
adc
cmp
xor
xchg
and
ja
pop
add
adc
mov
dec
mov
and
js
dec
out
xchg
xchg
xchg
adc
inc
ud2
jmp
into
test
adc
inc
adc
jmp
cld
out
cmp
push
out
inc
push
add
fldl2t
jg
aaa
fadd
add
loope
sub
lcall
inc
mov
pop
mov
push
int
subl
fadd
outsb
inc
loop
adc
cld
out
ljmp
add
and
mov
movsb
ds
call
inc
movsbl
rcrb
cmp
pop
xor
add
stos
jge
mov
aad
sbb
sub
ds
sub
mov
pop
and
bound
aaa
dec
mov
es
loope
jmp
mov
push
inc
fcomip
pop
or
loopne
jl
loop
push
pop
or
shlb
xor
inc
cmp
insb
mov
dec
add
cld
in
and
add
inc
sub
and
push
adc
sbb
dec
sbb
in
dec
fsubrs
js
pushf
pop
js
jmp
outsb
out
pop
pop
cmp
mov
in
sub
aad
or
decl
out
push
stc
dec
adc
adc
movsl
jno
add
xor
icebp
dec
mov
icebp
loope
pop
adc
mov
out
iret
add
dec
sub
pop
mov
mov
mov
andl
push
jl
pop
test
lea
pop
sbb
stos
mov
mov
fstl
or
addb
and
movsl
sbb
bound
jnp
arpl
mov
mov
faddp
incl
es
jmp
dec
lcall
ss
outsb
inc
shl
adc
xchg
in
jo
gs
jmp
out
sbb
adc
rorl
dec
sub
sub
int
add
aaa
fcompl
imul
push
rclw
adc
in
insl
mov
mov
mul
cmp
gs
int3
popf
out
imul
inc
rcl
aad
push
jae
and
jecxz
test
ja
xchg
sbb
adc
movsl
das
push
pop
ja
push
mov
xchg
inc
lods
js
jbe
add
mov
lods
pushl
jno
mov
add
add
sub
rcl
push
mov
sub
and
mov
pop
inc
pusha
scas
sbbl
or
jne
jmp
cs
xor
int
or
sub
mov
in
cmpsl
sbb
adc
lea
cmpsl
xchg
lret
inc
ljmp
roll
push
cmpl
inc
jecxz
mov
mull
or
icebp
das
je
sahf
fsubrs
cmpb
imul
mov
pop
push
adc
push
mov
mov
or
fs
adc
mov
in
ret
pop
add
push
fcoms
pop
jo
rorb
imul
adc
ret
or
pop
test
sbbb
subl
add
push
adc
mov
imul
outsl
add
roll
ljmp
rorl
cmp
das
sbb
push
notb
insl
cmp
add
cmp
sbb
mov
adc
arpl
sbb
mov
fsubrs
mov
mov
and
pop
jmp
out
enter
inc
or
sub
jmp
mov
add
pop
mov
push
mov
add
jns
jmp
sbb
and
pop
addr16
fstl
cltd
lahf
mov
xor
xchg
xor
and
fidivl
and
das
test
pop
pop
push
ss
adc
roll
stos
out
push
xor
in
mov
sub
pop
and
frstor
inc
and
push
dec
outsl
lock
repz
and
test
and
dec
jb
cmp
ja
xor
ss
repz
loop
stos
or
cmp
idivl
pop
mov
fsubrs
jae
out
call
dec
insl
lret
in
sub
sbb
cmpsb
add
xor
sbb
xor
jecxz
test
inc
test
add
imul
repz
sub
jecxz
int3
push
mov
iret
aaa
push
mov
out
pavgb
jb
adc
rolb
mov
xor
lcall
scas
jge
push
and
xchg
les
adc
pop
mov
add
mov
xorb
dec
in
dec
lret
xchg
pop
adc
mov
ljmp
imul
or
and
push
test
sarl
xor
aaa
btr
int3
xlat
jae
xor
test
subb
mov
mov
mov
ss
scas
jno
test
outsb
mov
fdivrs
jno
xor
mov
push
call
sbb
and
aad
clc
pop
jle
adc
nop
jmp
add
in
sub
xchg
xor
int3
xlat
push
pop
jbe
push
xchg
cmp
pushf
push
mov
clc
or
lcall
arpl
outsb
inc
ret
jns
or
or
mov
aaa
pop
in
sti
and
pop
loopne
ljmp
xor
cmp
pusha
subl
fdivr
or
shrb
pop
cmp
sbb
lret
ja
sbb
cmp
movb
ret
outsb
add
pop
es
mov
aad
mov
mov
jge
xor
add
inc
adc
je
test
push
xlat
mov
adc
jecxz
jne
insb
dec
lods
pushl
daa
push
add
push
bound
add
dec
mov
add
call
dec
outsl
add
cwtl
push
popa
mov
mov
jmp
and
sub
roll
rcll
xor
add
gs
addl
mov
or
push
inc
xlat
add
inc
push
jb
std
aaa
cmp
mov
neg
xchg
popf
jbe
call
outsl
aam
sbb
xor
dec
not
xor
clc
ret
sub
stc
push
push
lock
int3
push
mov
enter
cmp
and
xor
push
push
add
jo
add
shl
inc
mov
xor
xchg
xchg
fsubrp
pop
xor
cmc
nop
sub
pop
clc
mov
fisubs
pop
jns
pop
clc
pop
xchg
sub
sbb
stos
pop
popa
pop
fnsave
jne
adc
movsl
lock
cmpsb
arpl
loopne
ljmp
inc
sbb
insl
stos
aad
imul
dec
mov
jne
push
dec
jmp
pop
andl
lock
add
mov
cmpsl
fcomip
or
insb
pop
js
movsl
repz
idiv
into
out
incb
pop
xor
flds
lds
or
mov
das
aas
inc
cmp
fwait
shlb
decb
outsl
sbb
sub
adc
mov
inc
sbb
push
cwtl
ljmp
push
seta
ljmp
fmul
repz
and
addr16
rclb
scas
or
or
enter
shrb
xchg
call
jmp
test
add
fstl
stc
pop
push
fnstenv
lret
aas
add
mov
nop
stc
jbe
jmp
pop
pop
fmuls
add
xor
cmp
rclb
outsb
pop
or
repnz
xor
je
cmc
sbb
movsl
cli
adc
neg
add
jne
fstps
loope
jb
adc
jae
mov
add
ss
js
sub
sahf
sbb
repnz
outsb
test
in
inc
mov
adcl
xor
mov
or
ja
das
push
ds
call
mov
mov
popa
ret
sbb
shr
sub
sub
popw
push
out
add
pop
sbbl
shl
into
cmpsl
std
mov
adcl
movsl
fildl
or
xor
inc
add
inc
ret
ja
xchg
mov
movsl
dec
dec
imul
xor
insb
push
jmp
rorb
mov
mov
fistpl
jge
mov
push
push
sti
mov
pop
roll
jl
push
mov
nop
push
add
xchg
xchg
pop
and
inc
mov
fldcw
jmp
jecxz
push
sbb
mov
dec
fisttps
mov
icebp
out
hlt
icebp
xor
rcr
insl
seto
adc
and
loope
cmp
ret
push
cmp
mov
enter
inc
push
aas
cwtl
or
jle
mov
mov
insl
sbb
and
pop
xor
scas
clc
lods
in
test
fistpll
dec
ds
jbe
lds
pop
icebp
pop
jg
xchg
push
inc
lea
hlt
lret
int3
push
mov
in
sbb
rcrb
mov
mov
pusha
mov
bound
iret
pop
cmp
dec
or
fs
mov
mov
aam
pushf
enter
rcrb
mov
out
xchg
fadd
mov
pop
icebp
xlat
in
div
icebp
ds
push
xlat
int
jmp
inc
pop
jmp
bound
test
icebp
mov
add
or
shl
mov
add
mov
push
mov
mov
and
jmp
adc
pop
call
jmp
adc
mov
add
int
push
pop
loop
inc
or
nop
mov
sub
lock
pop
out
test
adc
sub
aad
cmc
xor
mov
lds
or
pusha
add
in
in
sub
sub
test
dec
je
add
mov
scas
fcoms
mov
xchg
and
or
xor
add
cmp
sbb
mov
cli
in
rcll
cmpb
xor
loope
inc
imul
out
mov
icebp
pop
push
ss
call
mov
fdivl
dec
repz
outsl
pop
or
cmp
mov
leave
xchg
mov
push
lock
fldlg2
mov
arpl
pop
loopne
pop
cs
mov
or
in
pop
cmpsb
loop
cli
aaa
mov
inc
inc
push
pop
or
loopne
test
add
hlt
or
icebp
pop
or
mov
movsl
bound
pop
push
pop
sbb
clflush
mov
mov
jb
jmp
jns
out
int
xor
cmp
push
jmp
jg
mov
xchg
neg
popa
xorl
ret
stc
jnp
wbinvd
dec
push
jo
add
mov
sub
enter
imul
or
dec
dec
or
jno
adc
add
mov
pop
dec
stc
gs
pop
shl
add
mov
jge
sub
lock
arpl
jecxz
rorb
data16
inc
ljmp
or
mov
add
sub
mov
add
out
mov
mov
fistps
mov
icebp
rolb
scas
stos
xor
hlt
rorb
and
mov
cmp
cld
jl
jmp
add
pop
and
jmp
sbb
jecxz
enter
xor
fwait
pusha
add
sub
call
cmp
shrb
and
push
add
or
das
sbb
pusha
hlt
cs
cmpsb
flds
mov
addb
call
out
or
sub
aaa
adc
sti
loop
loopne
std
repnz
aad
xor
adc
sbb
cmpsl
ret
shlb
mov
sti
in
lahf
inc
sbb
lods
or
sbb
rorb
add
or
ss
cli
ss
sbb
out
fwait
cmpsl
outsb
clc
jl
in
sbb
cli
push
cs
mov
adc
jle
mov
jb
adc
push
divl
stc
xchg
pop
outsl
adc
add
lahf
add
call
mov
cmc
mov
test
xchg
add
xchg
filds
pushf
sub
jp
xor
shrl
inc
push
adc
jmp
mul
aad
out
popa
inc
in
push
xlat
loop
fisubrl
dec
gs
xor
inc
and
push
pop
sub
or
xchg
pop
adc
aam
or
pop
mov
push
into
cmp
call
lock
insb
sbb
rcrb
or
pop
push
sub
pusha
add
mov
aas
in
mov
add
xor
jno
mov
xorl
adc
int
mov
mov
mov
pop
add
arpl
imul
push
pusha
adc
pop
pop
gs
lcall
add
xor
push
xor
cmp
xor
jl
aam
add
mov
sbb
pop
jmp
dec
aad
mov
lock
jmp
adc
arpl
inc
mov
push
mov
mov
adc
gs
xor
insl
out
sbb
push
icebp
cs
insb
fsub
xchg
loopne
aad
imul
and
pop
cmc
outsl
test
inc
jo
and
mov
not
or
mov
or
bnd
leave
inc
in
call
not
testl
movsb
sbb
mov
mov
mov
pop
sub
sub
add
sarl
cmp
inc
add
outsb
cmp
lods
js
in
stos
push
scas
into
adc
inc
jmp
aad
pop
push
pop
jmp
lcall
inc
add
rclb
and
pop
mulb
shll
ss
jns
jmp
dec
pop
sbb
add
xchg
or
fsubrs
lcall
inc
ss
fisubrs
and
inc
or
mov
sbb
xchg
add
and
and
dec
sahf
ret
jo
lret
and
push
sub
cmc
out
sbb
cmp
xor
call
outsl
les
hlt
adc
jb
js
das
add
jb
sub
add
ret
push
es
xchg
add
sahf
ljmp
sar
pop
adc
sub
lret
cltd
shlb
loopne
mov
xor
pusha
test
out
push
inc
sbb
call
fstpt
mov
cmp
mov
out
clc
aaa
fisubs
in
inc
ss
adc
dec
sarb
inc
jbe
push
push
ljmp
insb
nop
sbb
adc
push
mov
pop
or
add
add
xchg
push
inc
add
loop
add
xor
dec
add
push
ds
std
mov
fwait
cmp
fucomi
sbb
pop
xor
jg
or
jmp
fisubrl
jg
cld
mov
bound
xor
pop
ds
adc
fcmovnb
out
mov
test
faddl
push
xchg
push
and
outsl
xor
imul
xchg
int
das
fnstsw
mov
adc
sbb
out
stc
or
movsl
push
loopne
dec
sub
push
cmc
out
fwait
mov
xor
xchg
mov
inc
mov
xchg
add
xchg
aaa
loop
ja
and
cmp
test
dec
xor
sbb
push
rclb
xchg
mov
inc
push
or
and
dec
pop
push
sub
xor
iret
scas
mov
sub
fwait
or
or
std
loop
mov
or
iret
xchg
and
jl
xor
sti
xchg
adc
inc
xor
sub
sub
mov
addl
sub
out
outsb
inc
lret
insb
add
cmp
jmp
dec
test
push
pop
arpl
xor
imul
jmp
filds
and
sub
dec
pusha
mov
xchg
mov
dec
outsb
push
cs
pop
jecxz
repnz
je
inc
or
mov
sub
add
dec
pop
pop
push
cltd
stos
hlt
or
push
mov
inc
stos
pop
data16
iret
gs
cmp
cvtpi2ps
xchg
icebp
or
mov
sub
mov
into
shl
jmp
and
jnp
loop
adc
mov
pusha
enter
in
sbb
sbb
testl
inc
mov
adc
sti
icebp
into
push
hlt
lods
lcall
ret
mov
mov
xchg
fbld
shr
or
cwtl
cmpb
fwait
add
fsubl
jae
clc
ljmp
or
sub
sub
xchg
ficompl
fsts
push
insb
movsb
fwait
pusha
jmp
in
add
cli
mov
stc
pusha
repnz
or
mov
mov
cmp
stos
sub
pop
aam
adc
adc
cmp
fdivr
in
pop
and
imul
add
inc
mov
int
push
test
loop
cmp
repnz
add
repnz
std
sbb
test
add
mov
cmp
jmp
fisttpll
sub
rorl
aam
sbbb
cmp
dec
jl
xor
push
popa
outsb
es
test
and
filds
ljmp
add
xchg
hlt
push
data16
mov
cli
lds
pop
enter
sub
add
enter
jbe
add
negl
pop
or
in
pusha
xor
sub
push
aaa
mov
adc
mov
mov
scas
jno
push
sub
insb
xchg
cmpb
mov
mov
mov
sar
data16
dec
push
inc
push
orb
pop
cmp
fidivrl
shl
mov
inc
adc
sbb
adc
sahf
lods
rcrb
add
mov
fadds
in
adc
sub
test
jmp
pop
fwait
shrl
or
push
xor
xor
sub
adc
jle
out
loop
mov
adc
int3
mov
lods
pop
outsb
jne
mov
ja
pop
sub
inc
and
es
add
mov
or
adc
add
jb
dec
add
cld
es
sarl
and
push
cmp
or
cmp
imul
mov
mov
mov
lds
cmp
imul
push
fcoms
rep
ret
push
xor
scas
sbb
inc
mov
stos
divl
push
mov
jae
xor
mov
out
add
es
fs
xchg
mov
pop
xor
pop
aaa
mov
shlb
lock
jecxz
fs
add
add
xchg
ljmp
jnp
sbb
ja
dec
stos
sub
and
pop
mov
jmp
shll
cmp
pop
sbb
lret
das
cwtl
or
xchg
ss
push
repnz
push
loop
sub
jmp
scas
jg
popa
loopne
push
imul
cli
mov
cli
mov
movsl
sbb
shr
shl
jge
fdivs
jnp
sbb
and
cmpsb
out
in
push
enter
or
paddusw
mov
cmp
aas
or
lret
out
dec
mov
xor
and
xchg
mov
bswap
pop
and
leave
xchg
mov
xchg
popf
adc
jp
xorl
dec
test
push
xor
xor
xor
push
fmull
push
sbb
mov
push
sbb
imul
or
ret
jl
pop
sub
repz
aas
testl
ljmp
ljmp
jo
dec
jmp
pop
add
adc
cmp
fisubrl
fstpl
scas
loopne
cmpsb
xor
mov
mov
out
or
faddl
or
mov
movsl
sub
push
fwait
push
loope
test
sub
dec
push
add
push
push
add
ja
and
add
out
lcall
mov
jmp
test
sbb
pop
outsl
fstpt
std
and
sub
xor
dec
or
jmp
inc
fsubs
add
fiaddl
lret
or
jmp
int3
pop
ret
or
repnz
adc
aam
js
sbb
movsb
sub
dec
xchg
ret
jp
jecxz
push
adc
pop
mov
xchg
jecxz
jo
jg
cwtl
mov
movsl
in
push
xor
fsubrl
or
js
xorl
add
repz
and
fbld
push
jne
mov
pop
xor
das
loop
std
rep
cmp
inc
out
out
and
icebp
mov
add
ds
cmp
adc
pop
push
sbbl
push
aad
push
jp
jge
cmpsb
pop
sub
aaa
addb
mov
dec
ret
into
mov
mov
ja
clc
adc
test
sarb
xor
add
fcompl
mov
jmp
add
aaa
jns
scas
dec
adc
popf
js
push
aaa
add
outsl
je
inc
es
jecxz
xor
and
sbb
fisubl
out
loopne
fdivs
and
iret
stc
out
add
xchg
add
clc
sub
roll
jmp
and
movsb
mov
rorb
pushf
ss
popa
add
cmp
and
enter
mov
inc
into
mov
push
xor
addr16
mov
pop
pop
adc
std
mov
sub
and
in
imul
push
sub
cmpsb
sbb
mov
or
imul
and
hlt
xor
rol
add
push
out
push
sbb
pop
in
and
or
adc
aam
sub
enter
lea
push
add
fistl
push
js,pn
ret
jmp
inc
in
xchg
fs
mov
scas
sbb
mov
pop
or
loopne
ret
scas
enter
jg
add
movsl
adc
insb
adc
and
pop
sub
lret
and
sub
sbb
xor
test
inc
lds
pop
leave
repz
je
mov
mov
xor
mov
inc
mov
xor
aas
xlat
adcb
cmp
in
push
mov
out
mov
xor
outsb
je
fwait
push
xor
xchg
xchg
int3
add
pop
push
out
arpl
mov
mov
out
lods
loop
idiv
push
jae
push
shr
aaa
fcoms
std
mov
arpl
rcrl
loopne
jbe
xchg
repnz
xor
insl
adc
andb
and
sti
mov
aas
cli
dec
out
or
fsubrp
or
add
mov
jmp
jecxz
jb
sub
int
jecxz
popa
sub
add
xor
lahf
lock
in
stos
fnop
cltd
mov
fisttpll
dec
or
ret
lret
divb
test
adc
scas
cs
ret
sbb
fstl
fistpl
push
pop
insb
sub
test
cmp
insl
sub
push
outsb
cmpl
xchg
inc
cmp
or
pushl
int
xchg
push
jno
movsl
or
les
sarb
enter
or
fsubrl
rcrl
icebp
sahf
push
mov
fistpl
jp
jbe
sbb
mov
leave
lods
pop
add
adc
das
mov
in
xor
lcall
ss
xchg
out
sbb
push
mov
sbb
inc
pop
pusha
jp
outsl
dec
scas
jge
std
divb
jae
out
inc
dec
popf
loopne
sbb
pop
adc
out
fucomi
filds
aas
jecxz
jnp
scas
mov
je
cmpsl
dec
push
and
sti
sub
lcall
mov
jb
lods
push
jnp
ror
dec
sub
filds
aad
divb
outsb
hlt
enter
test
mov
icebp
lcall
in
mov
cmpsb
jg
les
aam
test
push
sbbl
push
fnstsw
adc
mov
adc
aam
mov
fildl
daa
cmp
and
mov
xchg
pop
push
sbb
cs
ja
out
decb
push
dec
pop
lret
dec
xchg
cld
or
and
sbb
adc
fiaddl
sahf
loope
push
adc
fdivs
xor
inc
inc
loop
sbb
sub
pushl
clc
pop
pusha
xor
aaa
stos
sub
pop
ret
inc
sbb
dec
fstpt
mov
mov
and
dec
mov
mov
pop
jns
or
jl
lock
sti
or
mov
pop
jo
dec
inc
aaa
push
fistpll
adc
mov
out
jle
sub
fidivs
rorl
out
imul
cmp
xchg
push
cmpsl
jb
jg
mov
enter
loop
js
movsl
sti
ljmp
icebp
rorl
xchg
pop
pop
push
sub
mov
inc
and
call
mov
cmc
add
popw
inc
dec
filds
loop
sbb
idiv
daa
mov
jmp
es
push
test
mov
mov
test
decl
jg
inc
bound
movq
jle
jl
push
inc
sbb
pop
int3
nop
push
outsl
xchg
imul
int3
rorb
mov
pushl
mov
into
inc
popf
add
mov
xor
leave
nop
add
mov
or
clc
arpl
fildl
out
int3
test
push
pop
sbb
sbb
push
or
out
push
or
mov
fistpll
inc
adc
scas
and
push
rcrb
sub
jp
and
loopne
pop
sbb
ds
cs
fadds
or
int3
inc
inc
mov
lret
ss
call
xor
push
dec
lret
or
jbe
mov
and
mov
mov
movsb
insl
mov
aad
jb
scas
pop
std
loopne
mov
int3
call
lds
popa
sti
mov
add
inc
add
les
test
aaa
scas
and
mov
cli
repnz
call
mov
sub
sbb
imul
sub
sbb
stc
jmp
enter
into
test
mov
das
test
xchg
add
ja
test
jg
icebp
xor
int3
adc
xor
inc
fwait
push
xchg
arpl
cli
mov
jecxz
jnp
cli
pop
sbb
mov
mov
cs
imul
or
xorl
insb
jno
xchg
icebp
mov
ss
or
inc
pop
adcb
idiv
stos
mov
jmp
xor
add
cmp
or
pop
adc
sbb
int
or
mov
out
ja
pop
clc
pusha
push
ret
adc
popa
jl
stos
stos
ss
mov
pop
outsl
or
mov
mov
rclb
inc
xor
sbb
jmp
fnstsw
push
push
in
rolb
mov
jp
das
jg
je
dec
scas
xchg
dec
xchg
shll
addr16
sub
push
xchg
or
inc
mov
jecxz
out
cmp
sbb
outsb
jae
std
adc
out
or
add
in
push
sub
cmc
xlat
cld
push
inc
cmpsl
enter
and
add
push
int3
std
cmpsb
jg
sti
or
sbb
jp
sbb
hlt
inc
sbb
xchg
jg
mov
enter
mov
das
mov
testb
xor
mov
mov
cmpsb
mov
daa
push
pop
insl
pusha
pushf
mov
mov
aad
push
dec
nop
int
bound
jne
test
lret
push
popa
cli
idivb
fadd
cmp
xchg
push
incl
or
test
cmp
dec
fcmovu
jp
mov
inc
shll
nop
add
jg
mov
sti
mov
mov
lock
test
cld
test
mov
sahf
lock
int
or
inc
aaa
jno
cld
das
aas
or
xor
sub
lock
mov
cmp
pop
cmp
test
jl
mov
repnz
mov
or
adc
cmp
ret
pop
mov
and
adc
add
add
mov
add
add
orb
add
add
add
or
test
add
popf
mov
mov
adc
and
jo
add
lods
add
push
insl
jo
xor
loopne
jbe
mov
je
push
es
inc
or
scas
mov
outsl
mov
inc
adc
dec
mov
sub
arpl
adc
inc
xchg
lret
or
add
popa
iret
lret
xchg
pop
cmp
and
mov
adc
popa
je
jae
andb
fists
imul
out
adc
and
cmp
andl
fwait
sti
idiv
adc
push
push
jmp
mov
inc
or
gs
mov
adc
mov
testl
mov
push
lock
adc
dec
and
cmp
ljmp
add
mov
lret
lcall
pop
movsl
or
mov
mov
adc
or
dec
or
pop
pop
arpl
mov
add
mov
pop
das
sub
mov
dec
testb
xor
adc
mov
push
int3
jo
pop
push
pop
lods
push
push
pop
pop
rsm
jo
dec
data16
data16
or
outsl
insl
or
add
push
inc
insl
xchg
or
xor
dec
xchg
sbb
sbb
and
jae
xor
dec
gs
cmp
push
pop
pop
icebp
sub
adc
or
sub
outsl
insl
js
jb
adc
int3
lcall
or
dec
or
mov
or
add
fwait
push
clc
jmp
adc
insb
inc
add
sub
sbb
sbbb
mov
inc
add
xor
or
lea
hlt
push
push
and
sub
stc
and
movups
nopl
sbb
or
loopne
pop
inc
rol
test
add
xchg
pushf
sbb
adc
sti
xor
enter
pop
xor
daa
insb
push
mov
adc
sahf
imul
and
push
ss
rclb
mov
add
add
add
addb
add
add
add
inc
add
call
int
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
popa
jmp
