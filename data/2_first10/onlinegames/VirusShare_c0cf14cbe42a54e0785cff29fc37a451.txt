insb
aas
mov
out
and
add
and
and
dec
shll
xchg
test
in
add
sbb
cmp
imul
xor
cmpsb
mov
clc
and
data16
and
sbbl
xorl
jbe
fwait
mov
cmpsl
addb
aas
add
ret
pushl
gs
xor
cs
insb
add
or
ficoml
sbb
push
gs
bound
push
jb
jbe
insb
gs
fcomi
jg
pop
jae
jae
gs
and
inc
inc
add
filds
jo
push
gs
outsl
imul
add
adc
adc
bound
xor
cs
std
insl
and
insl
gs
jo
insl
fs
add
je
pop
outsl
arpl
sbb
jb
xor
or
cmp
add
xor
add
in
sub
xor
shlb
out
std
rclb
xor
mov
inc
add
add
or
lds
in
mov
popa
enter
push
in
pop
outsb
add
outsl
int3
int
pop
into
push
iret
rorb
shll
xor
shll
aad
xlat
pop
fdivs
mov
mov
fisttpl
push
pop
loope
imul
inc
in
and
add
insl
mov
inc
daa
ljmp
in
pop
in
aaa
lock
repnz
xchg
int
stc
dec
pop
cli
sti
js
je
mov
fidivrs
call
jle
pop
adc
fbld
mov
xor
mov
mov
je
push
push
call
mov
jmp
mov
cmp
jne
xor
jmp
testl
sub
call
sti
test
je
sbb
outsb
imul
lods
pop
adc
jne
push
or
mov
sbb
iret
das
pop
stc
data16
inc
adc
cmp
jne
mov
loope
mov
pop
pop
pop
leave
ret
mov
in
sbb
fs
mov
xchg
adc
push
push
imul
jl
inc
mov
push
push
insl
test
xor
clc
add
pop
jnp
in
push
sbb
js
push
lock
data16
push
pop
insb
pop
push
int3
insl
jl
mov
adc
push
stos
mov
arpl
lock
cmp
je
push
adc
or
adc
clc
cmp
adc
push
push
sub
push
je
jnp
into
mov
push
push
or
movsl
sbb
jecxz
cmp
ss
in
sbb
pop
ret
dec
mov
mov
sbb
pop
fildl
sub
lods
fldenv
pop
jo
push
push
scas
inc
adc
negb
jo
push
adcl
mov
insl
fs
inc
test
mov
cli
daa
adc
push
dec
and
xchg
or
add
sbb
cmpsb
mov
pushl
dec
inc
lods
mov
mov
add
pop
mov
and
jo
sub
mov
notl
adc
or
call
push
sub
icebp
pop
loop
cld
cwtl
xor
jnp
or
in
adc
in
xchg
cmp
gs
adc
cmp
cmp
push
sbb
jae
adc
aas
jnp
sub
ja
jmp
sbb
icebp
push
arpl
push
and
jno
test
std
adc
push
adc
jae
decl
sbb
enter
inc
dec
dec
test
jne
push
pop
nop
sub
jmp
lds
rcl
sub
push
jecxz
inc
ret
mov
add
add
cmp
testl
je
pop
add
and
ret
aad
pop
clc
inc
and
loope
mov
rcl
jl
sub
mov
push
mov
out
sbb
sub
outsl
push
mov
adc
lcall
jecxz
out
adc
out
inc
js
lock
push
fstp
mov
in
inc
mov
jmp
or
mov
daa
out
push
fstps
call
push
jae
inc
mov
pop
inc
mov
add
std
add
fs
stc
je
or
je
sti
cli
out
jmp
lea
andb
mov
pop
lea
data16
lahf
fildll
adc
loopne
int
add
sti
push
sbb
push
and
mov
out
aas
jl
push
sahf
mov
pop
call
into
dec
cmp
push
xor
lret
pusha
into
dec
lock
imul
push
and
jp
insb
notb
jb
std
adc
xor
or
pop
mov
pop
pop
pop
pop
testb
cld
pop
jmp
mov
cmp
or
inc
fstl
int
insb
push
std
imul
lret
in
insb
push
add
je
popa
int
sub
add
add
sub
sub
sub
popw
insb
int
popf
or
jne
insb
inc
or
lcall
clc
test
ja
in
test
mov
fs
aaa
pop
jnp
push
test
add
add
push
repnz
xchg
add
int
test
inc
sbb
je
push
hlt
sub
call
or
push
mov
sti
leave
sbb
cmp
mov
icebp
stos
push
sar
add
std
enter
cmpsb
in
lret
std
dec
push
mov
iret
cmp
lcall
sti
data16
rol
mov
rclb
sub
xchg
xor
cmp
sub
leave
shlb
iret
push
shrb
rorb
int
xor
cs
int3
cld
sub
js
mov
jle
mov
adc
pop
loop
pop
ljmp
mov
negb
shrb
loope
or
mov
mov
adc
and
iret
lea
mov
fisubl
pop
fs
outsl
sub
lret
test
clc
je
jae
pop
sti
mov
mov
bound
sbb
sub
jg
or
clc
xlat
mov
dec
lods
clc
mov
pop
faddl
cmp
subb
fwait
int
or
pusha
outsl
dec
mov
and
call
ret
or
outsl
dec
repz
sti
mov
adc
dec
or
push
in
or
adc
push
call
ss
bound
sar
jl
insb
iret
int3
push
push
jbe
insb
mov
stos
jl
call
hlt
and
in
push
daa
cmp
dec
mov
cmp
pop
out
js
and
xor
outsl
jb
mov
or
out
and
and
lock
xchg
cmp
and
mov
test
xlat
vdivsd
lods
or
in
dec
mov
mov
and
cmc
and
sbb
lret
fdivrl
scas
je
adc
sbb
gs
aad
jge
xchg
mov
jnp
jmp
adc
add
xchg
add
and
dec
pop
out
sti
push
inc
jb
sub
sub
test
jae
sub
mov
or
loope
push
inc
mov
movsb
inc
mov
jb
adc
and
and
mov
inc
inc
lods
and
fwait
add
dec
dec
and
in
push
push
dec
inc
dec
jb
push
dec
cs
or
add
outsl
add
push
hlt
push
push
test
sbb
add
and
add
incl
add
push
add
add
nop
add
sbb
cwtl
add
mov
add
add
pop
mov
int
mov
push
mov
jb
addr16
insl
and
outsb
outsb
outsl
je
pushl
and
outsb
and
inc
dec
push
and
fs
aas
sbb
xchg
push
pushf
shrb
test
adc
test
pop
test
push
jae
test
mov
loope
fdivr
out
xchg
daa
repz
test
pop
cmp
test
out
push
testb
push
das
stc
das
dec
add
pushf
stc
cld
dec
push
and
add
or
xor
sbb
sbb
outsl
ret
pop
add
add
in
int3
sub
xor
pop
out
or
or
and
or
xor
dec
add
bound
pop
pop
cs
sbb
nop
push
add
fs
mov
popf
int
popa
in
xchg
fists
inc
cs
push
push
pop
sar
mov
daa
dec
jb
insb
outsl
arpl
xor
daa
or
inc
fcompl
add
or
add
rcl
dec
mov
fmul
mov
dec
xchg
data16
rorl
shll
inc
add
fidivrl
sub
and
sarb
int
call
lcall
pop
push
imul
jmp
mov
lcall
data16
imul
imul
lcall
push
movsb
insb
lcall
mov
shll
je
dec
shll
add
lcall
mov
mov
outsb
push
mov
shll
xchg
sti
xor
shll
xchg
lcall
xor
add
insb
jbe
imul
imul
ja
imulb
push
ret
insb
iret
xchg
mov
dec
shll
sbb
sarb
stos
cmp
pusha
mov
es
fnstenvs
inc
add
ret
pop
pop
mov
push
pop
insl
imul
jmp
outsb
je
rcl
cmp
dec
dec
sub
out
mov
adc
popa
fs
sub
dec
je
jo
jne
das
jnp
push
jns
outsw
inc
aaa
dec
jo
outsb
push
jb
adc
pop
cwtl
adc
push
dec
dec
add
jl
mov
sub
add
add
orb
jnp
adc
movsb
imul
mov
add
push
pop
adc
add
in
or
add
mov
push
mov
add
sbb
adc
and
mov
add
pop
mov
sbb
shlb
ja
aas
test
fdivrs
lret
scas
or
sarl
xchg
pop
add
pushl
push
jbe
sbb
inc
mov
and
xchg
pop
or
pop
or
lret
jmp
imul
xchg
test
mov
xor
adc
mov
xor
or
imul
and
das
adc
out
xor
jne
jb
gs
sbb
sarb
sub
add
aaa
idiv
pop
push
inc
jb
push
and
ja
or
push
mov
jae
data16
jg
pop
and
addr16
xor
push
cmpb
sbb
xor
repnz
insb
and
jp
pop
cs
adc
lahf
imul
arpl
popa
insl
xchg
push
dec
inc
push
push
inc
push
inc
dec
adc
or
inc
lds
je
imul
dec
push
inc
jne
or
jbe
jb
je
sub
dec
fwait
ja
test
imul
fs
aas
jnp
pop
inc
push
mov
mov
mov
pop
aas
cmp
xlat
dec
inc
and
orl
pop
pop
inc
sbb
mov
push
je
insb
nop
je
or
mov
outsl
and
outsl
jne
jae
adc
add
dec
push
push
sbb
dec
orl
imul
lods
or
push
cmc
mov
cwtl
cmpsl
pop
pop
gs
pop
aad
xor
in
je
mov
jns
xchg
jae
loopne
inc
stos
je
jne
or
stos
add
and
cmp
sti
sahf
mov
xchg
add
scas
call
clc
mov
call
fidivrl
jne
lea
mov
mov
out
incl
mov
movb
lea
xor
mov
mov
cmp
push
or
and
dec
mov
out
stos
add
fmull
adc
jns
frstor
sti
fcomp
cmpb
add
test
or
xor
movzbl
push
or
fwait
jg
mov
sbb
imul
arpl
rolb
jecxz
lock
nop
inc
call
push
mov
mov
shl
cmpl
adc
sbb
rclb
sbb
and
push
cld
outsl
leave
adc
sbb
bswap
add
push
ds
inc
pop
fs
adcb
add
adc
mov
leave
insb
mov
mov
outsl
mov
jge
pop
add
add
jg
xor
inc
pop
mov
mov
sti
into
icebp
notl
rol
int3
ret
into
mov
mov
aam
push
jg
in
int
mov
leave
cli
aad
mov
mov
mov
lock
cli
dec
enter
mov
sti
outsl
pop
stc
mov
rcr
lret
lret
ljmp
test
test
das
mov
rol
inc
mov
add
in
pop
mov
les
pop
sbb
negb
inc
adc
mov
lods
adc
adc
mov
daa
inc
iret
add
mov
mov
pop
push
leave
sub
lea
popa
test
stos
arpl
mov
xchg
jl
fstps
pop
pop
add
lock
or
sub
add
out
loop
pop
insl
ja
fs
adc
add
scas
pop
roll
mov
sub
sub
sarl
and
jmp
loop
push
dec
loope
lods
and
movl
lds
jae
xor
jo
cmp
cmp
lret
dec
cs
dec
mov
mov
repnz
xchg
mov
das
mov
jge
clc
pushl
mov
pop
sbb
pushf
fstpl
push
add
add
push
or
popf
jge
scas
stos
add
xchg
fmuls
adc
mov
push
in
pop
ret
jo
mov
push
push
gs
or
add
das
push
rcrb
lcall
pop
in
sbb
jge
andb
push
dec
xchg
test
test
popa
or
adc
popf
jmp
jnp
dec
mov
mov
test
or
cmp
xor
mov
test
mov
cmp
je
add
inc
cmp
ja
jl
cmp
pop
jae
mov
idiv
and
inc
andl
insl
dec
lcall
adcl
cmp
or
imul
ja
cmpb
push
adc
pop
movb
fcoms
push
inc
jg
out
push
call
pop
jne
xor
jmp
xchg
or
shl
push
out
in
notb
mov
lea
add
orl
mov
push
mov
call
fwait
add
call
sub
and
xchg
stos
mov
add
jne
call
cmp
add
push
mov
mov
jl
jo
lahf
and
add
pop
add
xor
test
idiv
xchg
fdivrs
call
loopne
cld
push
push
movl
mov
or
icebp
push
int
cmp
test
jle
sub
fdivr
xor
push
push
adc
std
cmp
out
data16
inc
mov
fcmovnu
mov
cmp
dec
mov
lret
mov
inc
and
and
mov
lret
es
and
or
imul
test
orl
add
and
and
jmp
add
cmp
pop
jmp
adc
mov
arpl
xchg
inc
in
sbb
or
cmc
adc
imul
xchg
lock
cmp
mov
pop
push
push
fucomp
cmpb
mov
daa
add
sbb
iret
xchg
push
push
xor
mov
adc
add
aas
mov
cmp
xor
iret
push
cmp
dec
mov
ud0
notb
incl
insl
hlt
fcompl
jmp
je
jmp
sbb
movsb
or
cmp
shrl
xor
loopne
fs
mov
filds
mov
andl
loope
push
mov
mov
add
push
and
test
add
scas
js
icebp
decl
in
add
movb
mov
sub
sub
push
add
push
jmp
add
inc
add
sti
push
push
in
inc
add
popa
imul
dec
out
in
xchg
jae
push
and
mov
fsts
rcr
push
lock
lods
dec
push
inc
int
push
xchg
or
decl
adc
shlb
or
mov
pop
arpl
in
sbb
or
sbb
cmp
in
xchg
fisttpl
add
clc
add
mov
mov
lds
and
push
inc
or
in
or
mov
mov
fstpl
mov
fwait
nop
pop
mov
push
lret
inc
repnz
sbb
add
pop
xor
adc
xor
adc
adc
adc
mov
add
int3
adc
push
lret
dec
xchg
inc
inc
lret
mov
add
jo
arpl
sub
lret
aas
push
rcll
push
adcb
xorb
xor
push
in
push
mov
jecxz
xchg
push
and
xor
push
and
cmp
jne
dec
cmp
lret
fdivrl
inc
push
repnz
ds
and
sbb
add
add
push
adc
stc
adc
and
xor
mov
mov
adc
adc
jmp
push
mov
je
pop
mov
je
pop
loop
das
and
divl
adc
pop
cmp
ja
fcomp
cld
add
or
jae
repnz
loopne
mov
adc
cmp
out
jmp
cmp
jb
sub
lock
sbb
addl
or
dec
sbb
rol
push
mov
cmp
adc
push
int
xchg
in
or
push
sbb
mov
push
xor
mov
icebp
out
outsl
ja
add
add
jge
push
push
push
sbb
inc
push
inc
push
push
push
and
pop
mov
xchg
add
js
dec
mov
fisubl
pop
sbb
orb
push
xchg
pop
pop
js
test
add
push
in
adc
movsl
add
mov
movsb
mov
mov
loopne
lods
sbb
into
jle
mov
imul
sbb
or
cmpsl
and
mov
insb
mov
mov
movsb
adc
loopne
pop
dec
pop
mov
call
push
add
cmp
sarl
push
in
mov
pusha
ss
add
notb
sbb
flds
pop
shrl
jl
pop
insl
jecxz
add
lds
nop
sbb
das
insb
jmp
scas
addl
adc
sbb
mov
clc
call
insl
loop
push
in
sbb
xchg
in
rcrb
mov
or
cmp
jle
lock
in
or
xchg
jbe
sbb
jmp
pop
call
lret
in
adc
lock
mov
mov
mov
inc
inc
inc
jmp
adc
and
pop
jb
adc
sbb
enter
push
add
mov
xchg
roll
xlat
sahf
popf
fiaddl
add
adc
andw
test
pushf
fnstcw
insl
sub
dec
cld
pop
jb
shll
push
bound
lret
imul
cmpsb
std
or
sub
adc
fisttpl
jnp
and
ljmp
xchg
out
mov
lea
cmp
pop
pop
xchg
clc
and
pushf
sti
mulb
mov
push
inc
push
add
mov
mov
out
call
xor
mov
repz
add
push
jo
loope
call
cli
fsubr
outsb
pop
or
movl
inc
call
out
or
pop
mov
xor
adc
or
xorl
pop
xor
adc
cmpsl
in
mov
add
mov
add
incb
jno
cmp
test
add
in
jl
xorb
adc
adc
and
and
mov
sbb
aas
nop
xor
adc
das
stc
adc
mov
xor
adc
outsb
and
add
inc
cld
ljmp
arpl
add
mov
arpl
inc
mov
movsb
fildl
mov
mov
adc
cmp
rcrl
add
adc
or
clc
jle
xor
cmp
jle
dec
movb
mov
dec
sbb
in
ja
pop
call
cmpsb
sbb
cmp
je
test
xchg
outsb
push
mov
inc
hlt
mov
push
in
jne
cmpl
imulb
mov
daa
sub
jne
xor
or
outsb
push
inc
clc
xchg
lods
cmpsl
das
std
test
add
popa
test
shr
sbb
addr16
inc
cmp
mov
inc
add
testb
sub
fimull
mov
sub
and
inc
mov
test
xchg
or
mulb
in
aas
shll
int
adc
inc
cmp
fcmovnu
fistps
loopne
add
sub
cli
seta
dec
test
add
inc
mov
or
jmp
pushl
sbb
lds
leave
jne
or
test
je
mov
shr
xor
test
mov
add
pop
and
in
icebp
or
test
je
das
icebp
sub
cltd
xchg
rorl
ljmp
mov
cmp
loope
or
mov
and
xchg
cmp
add
lahf
fstl
pop
sbb
aad
push
cmp
push
fidivl
jne
or
adc
push
sbb
jle
add
test
negb
sbb
add
fdivrs
dec
or
mov
mov
mov
and
lahf
popf
jmp
pop
and
add
je
add
sub
in
test
decl
pop
pop
add
mov
and
loope
dec
push
add
cmpb
inc
jne
or
jl
xorb
cli
addl
adc
adc
das
add
mov
cmp
pop
shlb
aaa
ret
mov
xor
adc
outsl
mov
adc
add
fimuls
fnsetpm(287
xor
std
inc
into
adc
add
xor
hlt
shr
lock
cld
mov
mov
cltd
pop
inc
idiv
adc
pop
pop
movsb
jg
sbb
jmp
andb
mov
add
and
mov
push
sub
enter
add
gs
xor
and
adcl
cmp
adc
adc
and
sub
adc
mov
dec
mov
lods
gs
into
scas
lock
adc
or
inc
mov
mov
stos
ret
mov
fs
ja
xor
mov
loopne
jbe
cmpb
xchg
add
jl
sbb
icebp
std
inc
cwtl
xor
clc
and
imul
sbb
and
andl
mov
adc
ljmp
je
or
imul
adc
and
ret
lcall
jge
rorb
mov
rcll
cmp
and
aaa
fdivrp
aas
cmp
jae
incl
lret
enter
or
leave
add
mov
call
loopne
sbb
mov
dec
push
pop
fsubrl
cld
jne
adc
repz
mov
jo
mov
add
loop
rcll
cli
push
mov
mov
jne
xor
sbb
xchg
push
jo
roll
pop
and
stos
pop
mov
call
dec
bound
out
fisubrl
es
jbe
or
cmp
mov
not
call
decb
jl
and
or
add
lea
pop
popa
xlat
sbb
mov
sbb
push
repnz
not
and
testl
lea
test
mov
sub
repnz
aam
or
mov
aaa
inc
fisubs
fimull
add
lea
call
mov
shl
push
pop
inc
sub
mov
and
divl
lods
xchg
sarl
inc
fiadds
psllq
jle
out
into
mov
shr
or
add
dec
jg
insl
jmp
pop
jg
push
lea
in
cmc
sbb
cli
mov
push
jle
rclb
cmpsb
jle
not
and
mov
and
adc
movb
mov
fidivl
add
mov
fiaddl
ficompl
xchg
adc
sbb
inc
xor
scas
roll
mov
das
insb
in
sub
sbbl
int3
xor
add
inc
std
sbb
add
out
mov
and
cli
sbb
out
mov
rolb
fcomp
cwtl
subb
lret
fucomi
sbb
add
rcr
stc
test
sbb
pusha
adc
pop
scas
testl
sti
mov
pop
les
xor
mov
mov
push
loop
ds
inc
add
sub
sub
mov
fcom
add
out
fdivrs
pop
int
or
les
cmp
arpl
adc
xor
jns
jl
or
or
xchg
jno
std
sti
mov
fisubrs
push
cld
and
fidivrs
pop
aas
pushf
fistps
das
push
mov
cmpsb
pop
mov
pop
or
sub
xor
cmp
rol
mov
adc
add
or
sub
ljmp
pop
ja
fcom
mov
bound
cs
sbb
shl
stc
test
jno
clc
jg
dec
dec
jo
in
cmp
inc
rclb
push
fadds
hlt
outsb
mov
daa
clc
jb
repz
notl
pop
es
adc
repnz
xchg
xorb
movsb
and
stos
mov
jl
out
call
lock
imull
mov
mov
hlt
pop
adc
call
pusha
mov
lods
xlat
lods
mov
in
cld
mov
adc
inc
add
jo
and
in
pop
test
out
fcoms
push
clc
cmp
into
pushf
jecxz
mov
fnstcw
jb
xchg
out
adc
enter
je
mov
mov
mov
out
loope
mov
fwait
and
sbb
loopne
ret
inc
xlat
mov
xchg
enter
or
mov
or
fbstp
pop
sahf
fisttps
sbb
push
insb
in
aam
and
gs
stc
out
sub
in
adc
inc
loop
shr
sbb
fdivs
lock
sbb
out
push
aam
mov
int
jp
daa
push
and
data16
sti
sub
aad
flds
outsl
adc
jae
movl
sahf
in
mov
lea
or
fisubrs
xor
test
jmp
fldt
pop
add
test
xor
mov
cld
xchg
cmpb
divb
adc
lock
pop
js
lds
popa
popf
insl
fsubrl
jns
adc
xor
mov
repnz
insb
and
or
in
mov
fstp
divl
mov
inc
inc
ljmp
repnz
sbb
xchg
mov
iret
fimuls
cltd
jb
repz
in
xchg
mov
int3
pop
pusha
dec
mov
out
jno
cli
xor
jge
rorb
mov
loope
sub
or
mov
jle
sub
jl
aam
out
testl
mov
xor
imul
out
pop
cs
mov
mov
fidivl
cmc
je
lea
test
out
aam
xchg
jae
adc
fisubrl
fidivs
test
jle
pop
out
cmp
or
gs
push
aas
sbb
cmp
rcl
fldenv
js
jbe
les
mov
mov
jbe
sarb
jp
jl
pop
je
pop
push
lret
pushl
or
sti
fdivp
cmp
lods
les
pusha
imul
sti
mov
fdivs
fisubs
adc
stos
rcrb
sbb
xor
in
sbb
repnz
ret
addb
push
xchg
ljmp
inc
push
adc
leave
or
mov
jns
and
out
push
jb
hlt
cmp
pop
mov
or
popf
mov
mov
ret
pop
pop
gs
fmul
repnz
sbb
rcrl
mov
or
push
or
arpl
fbstp
jno
dec
fcmovne
repnz
jge,pt
out
call
unpckhps
sbb
adc
rcrl
test
sub
jmp
dec
xor
lret
insl
faddp
call
outsl
jecxz
jp
pop
add
int
dec
xchg
fsub
xchg
fistpl
loopne
sub
jecxz
jp
negb
sbb
ljmp
add
ja
mov
out
jmp
mov
lds
jp
ficompl
ja
mov
xor
out
loopne
mov
sahf
aaa
lret
xor
aam
rcl
sub
movq
ret
repz
rclb
jno
lds
xor
jmp
hlt
xchg
out
xlat
pop
add
pop
movsb
mov
xor
or
or
pop
mov
inc
js
cmp
inc
das
inc
push
dec
cld
cmpb
mov
add
pop
sub
push
push
push
test
in
not
data16
leave
inc
xchg
cmp
inc
enter
insb
xlat
push
push
outsb
lea
insl
test
inc
pop
inc
test
nop
sti
mov
pop
mov
mov
into
ljmp
je
xchg
outsl
add
sbb
cmp
jne
xchg
mov
rclb
dec
cmp
pushf
pushf
push
xor
adc
pop
sbb
xchg
pop
push
imul
xchg
cli
push
cmp
jbe
lea
aaa
lret
adc
push
add
cmp
out
or
cmpsb
push
add
lea
push
outsl
pop
sub
clc
pop
adc
ljmp
push
push
movsl
jb
mov
mov
xlat
xchg
or
mov
dec
inc
inc
pop
push
push
dec
inc
shll
sub
adc
imulb
sbb
push
xor
push
pop
mov
lods
in
call
xor
push
out
or
or
mov
cmpsb
imul
push
mov
push
das
sbb
sub
xchg
mov
call
sbb
hlt
jno
in
call
ja
push
mov
decl
stc
jl
add
fsubs
das
data16
fsubrl
jo
loopne
loop
into
inc
jae
in
outsl
cmp
pop
sub
mov
mov
fisttpl
mov
test
mov
cmp
jle
mov
lds
mov
pushf
inc
pop
ja
jmp
cwtl
mov
enter
push
js
and
xchg
mov
cmp
jnp
add
push
cmp
push
or
inc
pop
int3
call
inc
in
out
lock
xchg
sub
or
test
rclb
add
insl
mov
loop
xor
incb
push
pop
mov
and
jecxz
leave
int3
out
dec
push
imul
das
fwait
or
push
mov
lret
cmp
xor
pop
fdivrs
mov
push
pushf
sub
adc
je
xor
mov
pop
mov
ds
das
sub
mov
out
cwtl
adc
dec
xlat
cmp
mov
cmp
and
jmp
sbb
cmp
je
sti
mov
cmpw
jne
pop
push
arpl
inc
add
cmp
add
sub
jl
jl
and
ljmp
fwait
mov
cld
push
aad
mov
int3
or
inc
lret
jbe
in
sbb
ja
movl
rolb
push
lahf
or
faddp
out
pop
push
je
xchg
cmp
testb
fisttps
dec
mov
cmp
je
cmp
jne
push
add
jnp
je
outsb
jecxz
push
pop
add
or
mov
stos
popa
or
mov
popf
push
loopne
jmp
adc
jle
sub
or
enter
xor
pop
push
loopne
cs
data16
adc
fiadds
push
cmp
mov
sub
inc
arpl
xor
je
lods
inc
andb
imul
mov
sub
mov
std
inc
mov
mov
push
mov
movsb
dec
xor
fldt
nop
fwait
push
sbb
mov
cmp
int3
push
and
movsl
mov
or
mov
ss
popa
adc
jne
mov
and
out
adc
repnz
dec
and
mov
outsl
lods
leave
cmpb
aam
or
mov
aam
mov
add
idivb
std
and
mulb
loop
lods
pusha
xchg
clc
rolb
clc
cmp
and
pushf
push
mov
testl
lcall
je
cmp
mov
pop
fildl
cmpl
arpl
out
push
jo
mov
jo
push
push
pop
rcrl
je
dec
shrb
fcompl
pop
mov
outsl
in
outsl
push
jle
in
sbb
pop
adc
pop
pop
call
dec
jmp
add
mov
das
add
inc
cmpb
imul
sub
pop
mov
cwtl
xor
idiv
xchg
adc
add
dec
pop
jmp
dec
mov
fcompl
push
cmp
ss
mov
lea
or
jnp
jl
mov
mov
js
xchg
insb
dec
add
mov
or
sbb
je
lret
add
lods
lods
push
insl
jb
pop
cs
mov
mov
mov
cs
lret
in
inc
mov
mov
mov
mov
pop
mov
mov
sbb
sub
sub
mov
js
insb
outsl
jb
insb
lret
mov
jb
and
fcmovu
subb
xor
dec
dec
test
jecxz
pop
in
push
out
dec
fnstenv
call
mov
mov
jae
out
out
sub
icebp
fsubrl
insl
bnd
repz
jl
mov
ret
les
lds
imul
leave
lret
xor
cmp
hlt
cmc
call
call
mov
movsb
lea
mov
xor
xor
pop
inc
add
push
dec
cmp
pop
loopne
clc
out
add
int3
jp
push
aaa
fs
add
rol
pop
nop
xchg
int
push
mov
loopne
xchg
insb
xchg
dec
ds
scas
dec
mov
push
cli
xor
imul
rcr
cmp
push
and
hlt
pusha
enter
decl
and
movsb
xor
out
mov
insb
stos
jge
lea
rcl
addr16
inc
fs
adc
je
iret
inc
mov
out
roll
cli
arpl
pop
inc
je
inc
xchg
pop
mov
test
mov
inc
xchg
scas
in
xor
jmp
aaa
enter
es
inc
pop
movsl
jmp
sbb
and
add
cmp
jmp
mov
test
or
jo
xor
hlt
cli
loope
xor
dec
push
cld
leave
mov
mov
cld
pop
sub
mov
cmc
insl
sub
inc
mov
xchg
std
sbb
in
sub
hlt
stos
enter
pop
cmp
fsub
push
outsb
cmp
cltd
mov
loop
cltd
sarl
imul
cmp
lock
es
pushf
fldt
cld
mov
inc
testl
pop
testb
and
sub
mov
sbb
mov
loope
lods
ss
or
mov
out
mov
pop
xchg
pop
in
push
add
or
lods
pop
nop
sub
push
inc
adc
ficompl
mov
jns
fisubrs
adc
test
pop
cmp
inc
adc
jg
sub
imul
push
sbb
ljmp
inc
mov
cmp
js
xor
jl
jns
movsl
leave
jne
push
mov
outsb
jne
adc
pop
inc
lcall
loopne
inc
sbb
fsubrl
cmp
cmp
gs
or
test
cmp
out
gs
cmpsb
mov
jecxz
not
adc
clc
leave
inc
xlat
mov
out
adc
mov
push
sub
cmp
jmp
pop
repz
sar
push
stc
repnz
or
fldl
mov
test
call
dec
aad
mov
call
pop
push
mull
outsb
inc
pop
adc
testb
sahf
cmp
lds
sbb
or
movl
aam
adc
inc
or
repnz
mov
data16
das
outsb
xchg
pop
mov
or
add
xchg
loopne
xchg
adc
mov
ss
pusha
sbb
xchg
dec
or
call
adc
mov
mov
adc
stos
jg
pop
mov
jge
push
movsl
movsb
xchg
and
hlt
aam
lcall
inc
cmp
std
cmp
push
adc
add
add
adc
push
or
mov
fs
mov
fs
fbld
inc
mov
hlt
into
faddl
mov
inc
push
jmp
clc
divl
cmc
inc
aas
sbb
test
in
leave
andb
daa
inc
movsb
pop
clc
push
mov
add
jmp
or
or
cmpsb
fsubrl
mov
lcall
icebp
popa
pop
mov
outsb
fwait
repnz
test
mov
add
inc
out
gs
gs
mov
fs
jo
xchg
xchg
xchg
je
dec
outsb
data16
cmpsl
pusha
outsl
inc
mov
imul
sub
jb
xor
and
xchg
xchg
js
int
jmp
adc
pop
add
les
dec
push
dec
inc
xchg
fs
inc
xchg
push
xchg
imul
arpl
or
adc
call
adc
clc
cld
inc
cmp
add
pop
aas
sub
adc
shlb
and
ss
in
roll
in
icebp
orb
and
in
push
loopne
mov
rcrb
or
lods
mov
sbb
dec
sub
push
jl
fdivl
cmp
fistpl
fcmovnb
fsts
adc
data16
adc
loopne
cld
pop
jno
xchg
or
dec
adcb
jne
jl
push
xlat
lea
add
jmp
mov
dec
ljmp
and
mulb
mov
push
lea
sbb
adc
addr16
hlt
cld
mov
repz
dec
fdiv
mov
cltd
pop
sbb
adc
shlb
decl
sub
xchg
adcb
add
adc
cmc
fidivl
inc
and
inc
xchg
repz
fdiv
or
xchg
ja
outsb
je
push
aaa
mov
inc
add
mov
fs
jl
mov
jo
jo
push
and
xchg
inc
jmp
cmp
or
sub
fbld
pop
jmp
push
repz
add
std
sub
repnz
xchg
std
xchg
sti
aas
xchg
sti
and
xchg
das
xchg
sub
fimuls
or
adc
mov
jg
outsb
fstpl
arpl
popa
push
add
ljmp
pop
push
daa
add
mov
int
pushl
or
jmp
pop
cmpsl
or
mov
cld
sub
dec
mov
fmuls
add
push
cwtl
cltd
cmp
jae
je
jb
es
sahf
adc
dec
mov
movsl
dec
shrl
cmpsb
cmpsl
jo
test
xlat
xor
scas
scas
mov
lcall
mov
mov
xor
cmpsb
mov
insb
mov
xchg
mov
mov
cmpsb
rol
jb
cmp
xor
es
xor
mov
das
enter
lret
int3
shll
int
inc
iret
jae
rorl
jne
rcl
adc
or
pop
xlat
orl
fcmovu
jo
test
outsb
cmp
xchg
gs
jo
outsb
xchg
gs
xchg
xor
cmpsb
imul
cmp
mov
push
xchg
outsb
cmp
gs
xchg
inc
inc
cmp
sbb
test
call
testl
stos
inc
fldl
pxor
lret
sub
or
insl
mov
or
add
push
push
xor
leave
popa
lahf
rolb
cmpsb
pop
daa
jle
xor
jge
mov
push
push
rolb
nop
in
jl
arpl
arpl
jo
je
cmp
mov
dec
pop
call
leave
push
inc
push
cmp
cwtl
hlt
js
xchg
jge
pop
call
sbb
add
lcall
add
sti
cmp
mov
faddl
or
or
pop
out
add
call
pop
mov
jae
mov
sbb
xchg
sub
rcll
pop
mov
mov
adc
inc
popf
pop
add
cmp
es
imul
mov
push
pop
ljmp
add
pop
and
inc
xchg
jmp
adc
inc
mov
push
mov
mov
mov
lea
xchg
or
fnstenv
lds
enter
add
lcall
orl
xchg
pop
and
iret
add
inc
push
mov
sbb
fidivl
lods
xor
das
mov
mov
insb
leave
cmp
or
mov
jmp
fxch
fs
pop
nop
or
and
out
test
lret
add
inc
adc
mov
push
or
stc
nop
inc
dec
push
aam
std
or
cmpb
nop
mov
test
call
cli
in
sbb
in
add
sub
push
dec
ja
pop
repnz
mov
nop
lods
sbb
cmp
in
shlb
add
pop
fs
sbb
xorl
mov
xchg
leave
mov
sbb
xchg
adc
push
xlat
add
cmp
xor
pcmpeqb
pop
sbb
and
xor
test
andl
adc
mov
nop
push
pop
sbb
in
sbb
aas
jb
cmp
imull
push
jne
push
jno
inc
mov
mov
movsl
jl
imul
cs
add
push
push
dec
push
mov
rorl
movsb
pop
gs
sbb
xor
std
pushf
xchg
stc
jge
xorb
pop
hlt
addl
mov
push
rep
or
xlat
out
cmp
adc
fwait
repz
push
popa
xchg
sbbl
push
mov
daa
lods
stos
push
les
push
inc
test
mov
mov
add
dec
jnp
or
cmp
xor
add
aam
into
add
sbb
push
sub
lods
sbb
xor
sbb
int3
add
cwtl
in
fs
cmc
into
jbe
dec
pop
cmpsb
mov
cmp
in
jne
sbb
cmp
sbb
test
sub
lret
mov
push
mov
mov
add
mov
xchg
mov
mov
inc
cld
sub
daa
sub
dec
mov
subb
sbb
cmp
mov
and
mov
dec
pop
fcomps
push
sub
scas
jnp,pt
outsl
repnz
jle
pop
leave
es
dec
les
inc
test
mov
mov
imul
mov
insl
cs
jae
fdivrl
cld
insb
dec
insl
rol
xorb
scas
or
in
add
aad
dec
lock
enter
icebp
inc
pop
and
mov
loopne
pop
mov
dec
insl
gs
dec
xchg
insl
inc
je
dec
imul
test
fwait
clc
adc
hlt
xor
dec
pop
clc
addl
in
incl
sub
fcoms
insl
cmp
lea
jmp
sub
xorb
mov
push
imul
aad
aam
jne
cmp
outsb
insl
out
daa
sub
addr16
insl
adc
mov
leave
dec
out
push
lock
add
mov
popa
pop
sbb
jle
pop
ret
stos
pop
add
jne
mov
daa
test
dec
mov
std
leave
adc
push
std
sub
jge
incb
popf
push
sbbl
shrl
int
notb
repz
pop
sarb
xchg
mov
adc
push
sbb
nop
mov
cmp
or
push
xor
pop
in
cmp
lret
outsl
nop
lock
jns
mov
pusha
push
push
push
loop
je
push
arpl
push
push
imul
cmp
add
fiaddl
adc
adc
cmp
movsb
inc
cmpsl
inc
add
sub
insb
lods
mov
or
mov
cmovo
mov
xchg
test
push
subl
mov
icebp
js
jo
xor
shlb
xchg
push
les
mov
movq
mov
in
add
push
insl
cmp
psllw
fistl
les
dec
push
clc
add
sub
mov
stos
or
add
rcl
pop
sub
in
mov
push
mov
dec
jge
sub
jo
shll
fldt
jo
pop
ss
mov
mov
fsts
sub
je
inc
js
call
pop
push
push
adc
lock
insl
les
movsb
pop
xor
or
jp
jb
mov
shrb
adc
cmp
pop
adc
inc
mov
jnp
in
push
lcall
ret
ret
jle
loope
cmp
and
pop
pop
mov
loope
xor
add
outsb
sub
sub
and
subb
xor
ficoml
dec
lock
push
ss
pop
push
lods
push
ret
xor
aam
add
xchg
inc
jnp
xchg
sub
fs
mov
mov
and
scas
mov
gs
xchg
gs
inc
push
cs
rcll
insb
insb
movsb
addr16
sbb
jae
mov
lret
cs
insb
jnp
push
mov
stos
pop
and
mov
je
push
jb
mov
or
cmpsb
pop
cmpsl
pop
roll
push
pop
test
lods
xchg
add
je
pop
xchg
add
jo
gs
xchg
outsb
push
gs
fnstenvs
gs
roll
aam
int
imul
fs
xlat
xor
xchg
gs
xor
popa
pushf
js
xchg
xchg
xchg
mov
ss
xchg
xchg
xchg
inc
push
cwtl
js
leave
mov
inc
lcall
mov
push
std
gs
dec
shll
imul
xlat
xor
mov
or
xlat
xor
mov
arpl
pop
push
arpl
jge
push
or
xor
mov
adc
mov
add
jg
std
cld
negl
int
adc
cli
test
test
mov
or
push
adc
pop
sbb
shlb
cmp
xchg
cmp
pop
ljmp
outsb
lahf
lea
cwtl
test
add
sbb
pop
xchg
gs
sahf
loope
push
cmp
xlat
addr16
adc
adc
ljmp
lock
je
add
shrl
jbe
mov
or
mov
stos
mov
mov
mov
or
subb
cmp
inc
add
test
ret
push
cli
call
mov
call
lcall
filds
pop
in
adcl
lsl
jb
mov
cmp
mov
or
jmp
ret
call
or
inc
rcrb
or
mov
fldt
inc
cmp
jb
lret
outsl
inc
incl
pop
jne
cltd
sub
ljmp
cmp
and
ja
pop
xchg
gs
pop
xor
dec
jae
fsubl
out
call
gs
aad
arpl
jb
pop
aad
arpl
add
lock
jne
clc
push
pop
daa
mov
cmp
outsl
lock
pop
inc
mov
sbb
push
pop
push
mov
dec
ljmp
xchg
mov
pop
outsl
mov
in
or
in
pop
inc
sub
cmpb
pop
push
sub
jmp
sarb
das
dec
cs
sub
ret
sbb
dec
push
or
sub
or
clc
sti
jbe
mov
or
jne
jne
testl
sbb
pop
aaa
jp
sub
mov
orl
loopne
loope
and
sbb
movsb
rorl
out
jmp
and
je
nop
loopne
movsb
imul
je
cmpsb
imul
jo
push
lcall
clc
lcall
and
cmpsb
imul
cmp
and
je
scas
testb
fucomip
icebp
andb
std
jo
jb
std
leave
jbe
cmp
inc
xlat
cmp
and
iret
std
je
pop
pop
fwait
and
je
push
or
imul
mov
gs
outsl
jae
or
mov
jne
lcall
aas
pop
xchg
jmp
sbb
mov
fucom
andb
sub
cmpsl
sub
aam
push
repz
mov
rolb
in
sbb
shlb
cmp
dec
jbe
es
add
xor
and
push
int
pop
sti
faddl
or
int3
sub
lock
inc
push
sub
orl
je
sbb
shll
outsl
arpl
or
push
shlb
pusha
popa
test
mov
pop
sbb
imul
hlt
add
xorl
loopne
jbe
sbb
mov
jecxz
loopne
lcall
dec
pop
scas
js
jbe
mov
xor
stos
stos
loopne
mov
imul
or
jae,pn
add
mov
jle
mov
movl
and
inc
push
cltd
sub
add
xor
push
icebp
inc
inc
xor
lods
test
mov
sbb
pop
adc
loopne
pop
push
xor
xadd
out
cltd
or
insb
in
or
clc
mov
loope
and
pusha
mov
lods
je
push
and
data16
adc
rcrw
adc
mov
loope
push
push
bound
mov
shrd
dec
leave
enter
mov
or
fdivrl
sbbl
adc
cmp
inc
cs
mov
sbbb
shll
dec
or
add
fidivs
adc
cmp
es
call
adc
shrb
clc
rorb
pop
xor
ret
cltd
std
inc
mov
cmp
jmp
cli
jae
popa
arpl
sub
imul
lret
mov
gs
imul
leave
mov
gs
lods
scas
outsb
pop
je
scas
push
mov
bound
mov
xor
mov
rol
lcall
ret
and
jmp
pop
cs
aas
popa
arpl
imul
gs
gs
jb
aam
in
jns
cmp
push
pop
out
shll
jp
sbb
dec
outsb
push
std
adc
dec
fsubl
ss
mov
adc
dec
or
sub
push
shr
sbb
sbb
or
sbb
adc
seto
out
movsb
aam
es
nop
insb
cmp
mov
in
jne
call
ja
call
push
xor
imul
xchg
cld
aaa
cmpb
js
pusha
lret
sub
mov
test
pop
iret
inc
andl
sub
aas
pop
dec
xchg
in
je
outsb
cmp
addr16
jo
outsl
sub
test
es
or
cmp
leave
roll
cmp
dec
lods
sarb
lods
inc
in
and
mov
scas
sub
divb
sbb
mov
popa
cwtl
sbb
dec
shll
arpl
pop
shll
arpl
stc
outsl
lret
push
rorl
jb
je
pop
cmpsb
fwait
sub
sub
push
and
ljmp
mov
out
sbb
pop
xchg
fcoms
cmp
push
frstpm(287
lock
imul
ret
pop
pop
mov
jmp
and
push
xor
and
cld
xor
sub
xor
sub
lods
push
push
imul
jns
je
insl
call
adc
fs
mov
arpl
sbb
je
mov
add
mov
fmuls
and
lret
cmpsl
clc
mov
and
jne
cmp
or
push
adc
inc
mov
mov
or
in
pmovmskb
lods
push
outsl
pop
jge
or
das
std
fidivs
sarb
jl,pn
sbb
or
std
pop
jb
js
call
adc
add
or
stos
cli
imul
push
push
cltd
nop
loop
dec
pop
add
add
add
subb
mov
movsl
mov
cmp
mov
shl
test
cmp
add
jmp
sbbb
in
sbb
movl
fsub
push
cmc
xor
enter
xor
dec
fucomi
repz
imul
in
out
pop
inc
sub
mov
sub
fs
movsb
add
outsb
data16
ja
ds
movsl
fnstcw
jae
frstor
movsl
pop
lcall
jb
fsub
cld
pop
loop
jecxz
in
push
jo
sbb
cld
out
insb
sub
into
out
lahf
rcll
mov
call
cltd
pop
out
nop
shll
mov
xchg
addr16
js
insb
roll
mov
pop
daa
clc
cld
sbb
fdivr
or
adc
shl
rcl
jmp
and
movl
jo
pop
mov
dec
stos
mov
mov
jle
xor
es
push
xor
es
rorb
wrmsr
xchg
fiadds
cli
or
clc
pop
das
cmp
les
inc
je
fwait
call
pop
mov
adc
sti
dec
jne
mov
das
cmp
push
push
add
lcall
xchg
sar
mov
sbb
and
cmp
cwtl
dec
add
mov
mov
jle
push
push
xlat
pop
jle
or
scas
dec
and
popf
xchg
push
ss
mov
rol
sbb
push
out
shll
lods
in
or
inc
ss
clc
movsb
test
call
lods
mov
or
xchg
mov
repz
mov
ds
les
fmull
pop
pop
loopne
cmp
lock
xchg
scas
out
mov
fcomip
jge
mov
xchg
call
in
xlat
cld
xchg
mov
or
mov
dec
pop
and
mov
scas
test
pop
and
mov
jbe,pt
add
rcrb
fcmovbe
jle
jne
ss
mov
push
add
jmp
adc
inc
ss
jns
daa
je
mov
mov
push
push
add
add
fxch
stos
or
pop
decl
and
add
and
lahf
push
mov
push
push
and
sbb
xchg
arpl
push
movsb
adc
mov
lret
arpl
movsbl
mov
fwait
or
mov
loope
lock
xchg
out
jl
push
lcall
jo
clc
xor
out
jne
push
cmp
add
pop
push
sbb
std
in
and
xchg
jge
mov
xchg
adc
push
jl
enter
sub
outsl
mov
icebp
adc
jge
mov
dec
add
push
aas
cmp
and
out
fiadds
jg
add
push
lea
fdivl
sbb
adc
and
mov
fmuls
sarl
enter
dec
incb
out
pop
dec
les
dec
cmp
sar
xor
push
test
ss
pusha
lahf
out
pop
sbb
push
pop
add
adc
loope
lock
mov
jmp
mov
mov
pop
xlat
adc
mov
pop
mov
repz
in
add
add
dec
push
jb
cld
dec
ljmp
pop
mov
cmp
mov
fnstsw
call
movsl
push
xor
sbbl
push
lods
daa
mov
xor
or
dec
add
lea
mov
test
mov
mov
repnz
jp
fs
sbb
fnstcw
aaa
iret
dec
loope
mov
in
jb
pop
inc
and
popa
cltd
xchg
sbb
fsubl
addr16
ds
jmp
or
lods
pusha
sbb
push
jmp
sbb
in
rorb
mov
repnz
rcrb
call
pusha
add
add
push
sbb
cmp
jb
pop
sti
es
sbb
and
push
xor
fmuls
jno
lcall
add
mov
xor
call
int3
repz
adc
jne
add
xor
call
lcall
mov
and
fadds
cmp
clc
outsb
jle
adc
dec
dec
inc
jg
outsl
adc
inc
jl
add
jg
sub
mov
fldt
mov
inc
inc
sub
jl
add
jg
insl
in
call
movsbl
lea
lea
xor
xchg
pusha
inc
cmp
jl
and
or
in
or
mov
xor
loopne
or
ret
jge
add
in
sbb
sbb
mov
push
mov
mov
ret
jl
mov
inc
cmp
mov
adc
iret
ja
add
pop
cmc
outsl
lea
add
push
add
mov
jbe
fsts
add
or
mov
rcll
cwtl
push
cmp
push
pop
sub
cmp
adc
add
rcrl
in
ss
mov
std
aam
arpl
mov
fs
sub
insl
in
push
push
or
sbb
stos
data16
sbb
mov
jmp
add
dec
sbb
xor
ret
mov
push
mov
and
jno
push
repnz
pop
in
sbb
cmp
adc
add
xchg
repnz
add
add
leave
mov
cmp
pop
mov
pop
jg
mov
adc
jg
inc
inc
xor
frstor
pop
adc
addr16
xchg
mov
xor
adc
xchg
and
lahf
mov
pusha
mov
call
cld
adc
mov
mov
push
push
clc
imulb
mov
jo
add
adc
push
call
call
mov
lret
aaa
jne
cltd
cmpb
mov
and
mov
add
cmp
clc
mov
jne
mov
int3
flds
inc
mov
add
and
adc
in
cmp
add
mov
pop
sub
and
es
mov
jo
push
lret
in
dec
push
cmc
mov
and
mov
mov
mov
jb
add
adc
call
mov
mov
rcr
inc
ja
xor
jmp
imul
and
mov
adc
mov
enter
or
pusha
call
and
mov
gs
dec
mov
loopne
mov
mov
cltd
in
fsubs
ljmp
add
and
hlt
add
mov
jnp
add
adc
mov
idivl
or
sbb
push
mov
or
or
mov
adc
inc
insb
xor
and
je
fwait
decl
clc
push
ss
dec
pop
call
cmc
out
fsubr
add
clc
jo
repz
mov
mov
xchg
daa
mov
enter
rclb
sbb
push
insb
dec
or
add
inc
stos
cs
pop
adc
or
lock
xor
incl
cmpl
and
jmp
adc
lods
mov
jb
jnp
lcall
cmp
pop
popa
push
xor
dec
mov
and
or
insl
ss
push
push
sbb
mov
pop
and
push
cmp
ss
push
mov
push
mov
cmp
pop
rcrl
cmpsl
stc
jo
iret
dec
or
rcrb
cmc
xor
push
jl
add
mov
and
stc
movsl
jo
enter
lret
pop
inc
and
movswl
ret
add
xchg
adc
adc
mov
and
adc
movsb
ja
or
fcomps
test
aam
popf
mov
fbld
call
movsb
xchg
repz
or
in
jl
mov
sbb
lret
imul
mov
sub
jb
lret
mov
xor
fs
pop
xchg
gs
imul
cs
dec
mov
lea
fstpl
lahf
xchg
cmp
xor
adc
xor
scas
sbb
mov
mov
fcomi
call
pop
jmp
inc
popa
mov
bound
out
enter
dec
add
mov
sahf
aaa
mov
push
push
les
xor
xor
into
and
dec
push
fsubl
int
add
int
and
or
jnp
inc
inc
cmp
in
adc
pop
pop
mov
clc
push
sub
outsl
cmpsb
lods
jo
andb
clc
aas
jnp
movsl
fstps
or
or
mov
pop
push
rcll
push
inc
adc
sub
xchg
fisubrl
push
pop
jb
mov
add
jno
adc
push
jne
add
test
pop
int
icebp
xchg
outsb
inc
sub
lods
or
add
xor
fs
inc
cmp
pushf
les
sub
imul
imul
pop
add
push
cmc
xchg
sub
and
mov
stos
mov
rolb
je
mov
bnd
arpl
sarl
cmp
out
in
push
add
dec
mov
shrb
out
clc
movsl
mov
mov
and
pop
js
adc
add
pop
and
scas
call
dec
shll
orb
mov
mov
mov
mov
loopne
xchg
dec
fwait
dec
xor
dec
or
fmul
pop
dec
loopne
or
push
push
mov
mov
dec
xchg
mov
shr
dec
jl
mov
add
orb
fnstenv
push
aam
xor
xlat
lcall
and
fcmovnu
push
outsl
cmp
dec
or
dec
pop
jo
nop
les
imul
pop
sbb
fildll
lret
fs
cmpw
mov
cmpl
xor
or
mov
mov
or
cmpsb
cmp
inc
cmp
jl
je
inc
sbb
jb
js,pt
add
jo
add
cmpl
mov
icebp
lea
iret
push
mov
add
cltd
hlt
or
sbbb
or
fisttps
push
loop
or
add
test
sbb
sbb
cmc
mov
mov
inc
lods
aad
dec
add
movl
mov
jno
mov
mov
fs
sbb
subl
cmpsl
sti
jecxz
mov
adc
mov
lea
shr
jle
movzwl
mov
jne
or
fisttpll
daa
add
adc
or
adc
movsl
mov
mov
adc
lock
adc
sub
ss
les
mov
mov
call
add
sbb
lea
xor
inc
xor
incb
add
jmp
mov
add
push
push
sub
mov
and
repz
mov
push
jno
push
mov
fimull
je
adc
mov
inc
adc
iret
xlat
inc
xor
or
xchg
jle
lea
pop
mov
pushl
add
push
scas
mov
lods
mov
xor
sti
or
stos
call
aas
loope
and
mov
push
mov
ret
add
fisubrl
std
xor
push
andl
data16
mov
adc
push
mov
call
dec
or
pushl
data16
or
or
scas
and
shrb
sti
inc
adc
add
jae
pushf
add
js
xchg
je
adc
sub
pop
imull
pop
cltd
cld
pop
mov
xchg
push
subl
xchg
lahf
stos
fsubs
pop
mov
jecxz
sbb
and
inc
cmp
add
out
testb
je
pop
inc
sub
jne
shr
or
or
jg
push
push
mov
andb
lock
fisttpll
push
xor
adc
mov
cli
xor
pusha
insb
test
enter
add
cmp
or
nop
sbb
or
push
sub
adc
pop
stos
fmull
cmpsb
imul
outsl
jb
lcall
jo
mov
xor
lds
les
or
sbb
add
jecxz
call
and
pop
xor
push
cltd
or
sahf
or
repz
je
addl
sub
and
mov
verr
lea
loop
pushf
adc
mov
pop
mov
adc
test
imul
leave
ret
or
xchg
sub
sbb
insb
add
pop
outsw
outsb
mov
mov
je
pop
adc
xor
add
add
lret
dec
pand
mov
or
xchg
loopne
mov
rcrl
mov
ret
push
stos
out
icebp
xor
aaa
mov
es
test
mov
pop
ja
or
jl
jecxz
cmp
adc
movsb
cmp
add
or
or
mov
or
pop
je
jo
das
into
jge
sti
inc
insl
test
or
push
in
push
and
xchg
ret
sub
mov
cmp
scas
je
sahf
jbe
fs
xchg
or
mov
popa
call
xlat
imulb
out
and
les
sub
dec
mov
push
scas
arpl
pop
cmp
push
sbb
adc
fdivrs
cmp
in
xchg
outsb
neg
push
mov
daa
and
inc
cld
mov
and
fisttpll
inc
outsl
or
gs
cmp
mov
arpl
and
jp
cwtl
and
repnz
jae
lahf
insb
mov
ret
push
dec
add
or
push
mov
test
push
xor
sbb
and
xor
inc
loope
xchg
mov
mov
mov
push
cmp
call
test
fs
inc
push
inc
inc
jns
loop
ds
inc
movsl
pop
lcall
outsb
lcall
imul
pop
lret
int3
push
stos
data16
aas
lock
and
rolb
pop
jae
je
addr16
les
lds
ss
mov
mov
mov
add
shlb
cmpsl
mov
inc
or
mov
lret
xor
jns
fwait
imul
lcallw
push
dec
and
or
pop
ret
push
aad
pop
mov
int3
mov
jle
movsb
add
mov
and
pusha
pop
add
mov
mov
adc
mov
adc
dec
js
jnp
adc
push
add
pop
mov
adc
adc
xorl
add
push
idivb
sub
inc
cmp
ljmp
push
test
or
push
xchg
cld
sub
mov
rcrl
test
pop
mov
inc
xor
jecxz
jns
cmp
nop
inc
jge
cmp
or
jb
adc
gs
xchg
js
insb
outsl
jb
pusha
xchg
gs
jb
gs
pop
adc
subb
xchg
insl
aaa
add
push
mov
leave
sub
nop
enter
add
leave
std
and
shlb
adc
push
add
and
xlat
or
mov
push
mov
push
xchg
add
and
push
mov
dec
push
push
dec
xchg
or
pop
push
mov
dec
fbld
mov
inc
pop
js
and
rcl
sbb
and
xlat
mov
pop
inc
push
xchg
pop
mov
rol
add
leave
repz
sarb
jb
nop
mov
dec
mov
and
inc
mov
mov
or
mov
fstps
add
pusha
add
repnz
xor
add
add
fs
movsb
test
mov
adc
fs
aas
insb
mov
sbb
fs
inc
shl
sub
cmp
xor
mov
ss
fstl
into
in
xor
daa
dec
ss
add
or
dec
roll
scas
ret
cltd
lret
ss
adc
cmp
jo
cltd
aad
or
push
aad
mov
push
arpl
gs
js
gs
in
pop
mov
add
imul
popa
insb
imul
or
and
push
add
gs
jbe
fs
cltd
mov
add
cld
mov
arpl
xor
dec
gs
xchg
add
fisttpl
pop
sub
sub
push
xor
std
and
add
ss
jo
add
add
inc
aas
push
jb
mov
jae
dec
push
popa
imul
jb
add
jae
aas
push
outsl
outsl
insb
shlb
jbe
outsl
pop
push
outsb
popa
jo
push
push
and
sbbl
push
mov
xor
add
inc
insb
jae
ret
sbb
mov
sbb
push
pop
outsl
imul
popa
jb
inc
packsswb
add
and
push
xor
in
add
sbb
sbb
mov
jne
adc
inc
shr
lret
add
insb
dec
pop
notb
jg
sub
adc
or
fcmovb
imul
outsb
mov
in
in
inc
jns
add
or
and
cmp
add
into
add
dec
pop
test
adc
stos
gs
test
test
gs
arpl
sbb
xlat
outsb
js
xchg
push
push
push
gs
shll
aas
xchg
lods
popf
int3
xor
dec
sbb
push
xorb
int
repz
out
sub
push
push
push
add
jae
les
popa
mov
sahf
int
loopne
daa
jno
pcmpeqb
xor
inc
and
xchg
push
jecxz
adc
das
jne
push
imul
aaa
pop
push
call
mov
add
cmp
imul
fsubs
mov
add
loopne
insb
or
filds
lret
push
sbb
int
daa
xor
cmpb
dec
add
jns
mov
mov
outsl
and
mov
ret
xor
outsb
push
ret
cmp
push
es
imul
pop
cmpsl
arpl
mov
data16
iret
cwtl
mov
pushf
jmp
push
and
dec
sti
dec
mov
test
lods
into
xchg
sbb
hlt
adc
xor
outsl
insl
insl
int3
dec
xor
cmp
pusha
pusha
imul
outsb
push
jmp
add
dec
inc
push
dec
inc
push
lods
add
jo
je
inc
push
das
rcll
pop
add
popa
enter
fcoms
addr16
fs
popa
xor
dec
add
inc
mov
xchg
xorb
mov
call
sub
and
add
scas
lds
lret
adc
pop
jecxz
lods
std
xchg
push
fiadds
inc
es
mov
or
mov
jb
sbb
outsb
push
push
push
int3
leave
push
lea
xchg
in
inc
inc
or
add
fwait
mov
shlb
outsb
inc
sbb
add
je
or
and
sub
push
not
mov
test
sub
sub
jbe
sti
push
pop
and
pusha
outsl
outsb
bnd
sub
lea
dec
mov
push
fcmovnb
pop
adc
imul
sub
popa
xchg
pop
adc
push
mov
sub
xor
fiadds
push
and
jnp
jnp
arpl
jb
cmp
ret
sti
fsubl
adc
or
outsb
jne
jno
popf
cmp
or
jne
push
jae
pop
jo
inc
popa
arpl
xor
sbb
inc
push
inc
push
out
movsl
jnp
or
add
dec
or
lret
mov
push
jns
add
insl
rcrb
add
movsb
pop
mov
xor
push
mov
dec
cmpsb
scas
fstpl
imul
inc
xchg
popa
fcomip
xor
jne
or
or
ret
inc
lds
aas
add
out
imul
dec
adc
jns
mov
cmc
push
jo
push
das
divl
add
das
mov
ret
mov
xor
inc
pop
push
add
loopew
dec
testl
dec
sbb
out
in
xchg
xchg
bound
outsb
mov
in
jge
in
or
leave
data16
gs
add
mov
ja
dec
push
push
inc
adc
push
xchg
mov
adc
fs
xchg
xor
and
sub
outsb
daa
adc
add
jno
push
push
jge
and
jo
xor
pop
and
fcoml
adc
add
xchg
fiaddl
repz
xor
dec
inc
dec
push
dec
pop
daa
imul
cmp
popa
mov
lret
xlat
adc
inc
or
push
xor
mov
rol
push
enter
insb
or
ret
stos
mov
adc
adc
push
xchg
pusha
add
and
push
xchg
cld
addr16
add
add
xchg
mov
push
mov
add
mov
dec
xor
test
mov
xor
xor
xor
dec
xor
pushl
mov
movsb
xor
xor
xor
xor
xor
push
xor
xor
clc
xor
xor
pushl
dec
xor
fs
js
test
cwtl
xor
outsl
pushl
xorl
ss
mov
shlb
ss
ss
fnsave
in
jmp
clc
ss
and
es
lcall
aaa
jae
js
jle
int3
aaa
out
add
mov
cmp
cmp
cmp
cmp
cmp
call
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sbb
cmp
cmp
pop
decl
dec
cmp
cmp
cmp
cmp
cmp
cmp
cmp
aaa
cmp
pop
cmp
cmp
mov
mov
loopne,pt
out
jmp
clc
ds
roll
aas
ds
dec
aas
pop
aas
push
aas
fildl
movsb
xchg
cwtl
xor
mov
xor
pushl
adc
and
sub
cmp
dec
xor
xor
xor
xor
xor
xor
dec
xor
std
ja
pushl
xor
jge
mov
mov
ss
sbb
and
or
mov
inc
fadds
lcall
xor
xor
xor
xor
xor
xor
xor
xor
mov
cwtl
xor
xor
xor
xor
xor
xchg
pop
fidivl
in
xor
sub
push
ss
xlat
fdivl
call
daa
stos
aaa
mov
aaa
das
cmp
lock
cmp
cmp
lds
sarb
call
ljmp
aaa
cmp
xchg
sahf
cmp
cmp
cmp
cmp
cmp
sbb
decl
jb
cmpsb
cmp
jmp
idivb
inc
ds
ds
jb,pt
js
test
mov
ds
ds
ds
ds
ds
sarb
in
out
rclb
aas
sbb
aas
pop
aas
imul
lahf
aas
cmpsb
aas
lods
aas
mov
in
sti
aas
inc
jo
jmp
pop
xor
xor
xor
xor
push
xor
insb
xor
js
mov
xchg
xor
xor
dec
add
and
call
sub
xorl
iret
xor
xor
rdpmc
cmp
pop
xor
jp
lcall
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
aaa
cld
mov
xor
mov
fdivs
loope
or
mov
aam
in
sub
pop
adcb
js
cmp
cmp
cmp
cmp
jl
mov
sahf
cmp
cmp
cmp
cmp
cmp
pop
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jne
mov
or
push
cmpb
aas
or
fwait
aas
mov
aas
sarb
xor
cld
sbb
icebp
test
cmp
sub
xor
cmp
ljmp
in
jge
pushf
xor
xor
xor
xor
xor
xor
xor
cwtl
mov
pushl
lods
xor
add
int3
shll
add
sbb
test
pushf
mov
ss
ss
ljmp
mov
popf
aaa
cmpsl
aaa
scas
aaa
ret
aaa
in
aaa
pop
cmp
jae
cmpl
xchg
lahf
cmp
cmp
cmp
or
push
cmp
cmp
cmp
call
cmp
cmp
push
cmp
imul
sub
cmp
cmp
cmp
ja
mov
idivl
cmpl
cmp
dec
ds
movsl
jmp
ds
ds
jbe,pt
cmpl
ds
mov
ds
nop
ljmp
cwtl
js
mov
xor
shlb
loope
adc
sbb
pop
pushl
inc
xor
jbe
jle
out
lock
xor
sbb
sbb
aaa
jl
sub
sub
loope
xor
xor
pushl
lret
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
sti
jmp
xor
xor
ss
inc
ss
lds
fbstp
getsec
cmp
inc
aaa
dec
aaa
push
stc
xor
data16
insl
aaa
xorl
fwait
aaa
mov
mov
pavgw
cmc
pushl
sbb
dec
cmp
popa
cmp
jbe
jnp
pushf
dec
cmpsl
cmp
or
sarl
loop
sti
sbb
outsb
cmp
cmp
jg
cmp
aas
cmp
jno
mov
cmp
cmp
cmp
xor
lcall
dec
cmp
xor
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
clc
cmp
out
adcl
cmp
xor
push
cmp
jns
xchg
mov
lret
cmp
pop
xchg
ds
movsb
ds
mov
idivb
sti
adc
xor
jno
aas
bound
int
ja
jg
pushf
adc
outsb
xor
jns
xorl
xor
xor
loopne
clc
pushl
int
xlat
xor
xor
xor
xor
mov
xor
xor
push
ljmp
je
xorl
xor
xor
xor
xor
xor
xor
xor
xor
js
popf
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
mov
xor
xor
dec
xor
pop
xor
insl
xor
jl
test
lods
stos
mov
clc
xor
xor
sti
xor
xor
xor
xor
xor
xor
xor
jg
xor
iret
push
jo
jne
jnp
test
xor
xor
xor
xor
xor
xor
call
ja
xor
xor
xor
in
divb
adc
outsl
decb
sub
push
inc
imul
xor
test
scas
xor
fidivs
mov
lcall
adc
aaa
bound
lea
fwait
ljmp
fbstp
jmp
aaa
add
cmp
cmp
cmp
dec
cmp
imul
push
cmp
ret
cmp
cmp
cmp
cwtl
add
xor
cmp
cmp
sub
outsb
cmp
cmp
cmp
ret
sti
dec
mov
decb
cmp
cmp
ds
out
ds
clc
decl
aas
dec
aas
addr16
lds
aas
out
mov
or
enter
mov
xor
decl
pushl
loopne
icebp
xor
xor
xor
pop
xor
outsb
call
xor
enter
xor
or
adc
es
and
pusha
xor
insb
xor
lahf
xor
pop
lret
pop
repz
xor
xor
xor
aad
pusha
push
mov
mov
xor
sub
xor
lock
ss
ss
ss
mov
ljmp
cmp
lret
ss
xchg
xor
aaa
sub
xor
cmp
ds
inc
je
xor
aaa
dec
aaa
push
aaa
push
dec
cmp
insb
mov
add
inc
inc
push
psubq
push
sbb
adc
mov
jns
adc
nop
mov
mov
je
mov
pop
shrb
sti
mov
mov
fisttpll
jno
inc
les
jnp
mov
adc
orl
cmp
shlb
sub
pusha
fsubrs
loopne
and
rorb
pusha
mov
ja
mov
enter
jb
orl
and
loop
loop
orl
jb
jb
sbbl
sbb
and
cmovo
les
push
setp
add
in
insl
call
xor
imul
test
imul
insl
lcall
xchg
add
xor
mov
aam
pusha
xorl
jg
xor
shll
push
xchg
inc
sub
add
jae
push
or
in
adcl
push
or
testl
push
dec
dec
adc
push
and
inc
and
mov
add
jb
push
cmp
and
nop
inc
and
and
and
and
xchg
push
enter
and
je
add
mov
and
pushf
or
nop
mov
and
leave
add
addb
std
or
xchg
add
push
and
and
cmp
jns
and
xor
jns
and
sbb
xor
mov
in
and
push
and
sbb
adc
pushf
jmp
jne
add
and
in
push
adc
push
xor
push
add
push
push
push
add
push
push
out
pop
and
inc
inc
push
jno
test
inc
cs
fcomps
adc
scas
adc
add
or
cli
dec
mov
insl
daa
and
lahf
in
sub
outsl
inc
shll
mov
ja
pop
jg
inc
and
imul
pushw
cmp
data16
dec
sbb
push
cmp
or
xor
cmp
cmovo
and
in
enter
inc
and
xchg
cmp
and
sub
add
pushf
stos
fsts
cs
push
adc
cmp
cmp
xchg
push
cmp
sub
aad
xchg
add
pop
mov
add
mov
and
cmp
cmp
add
cmp
jl
add
adc
repnz
lock
mov
cmp
sbb
xlat
cmp
addr16
mov
xchg
in
insl
pop
push
test
jne
pop
push
jecxz
nop
out
add
nop
xchg
mov
push
mov
xchg
xchg
xchg
mov
mov
xor
mov
lods
cltd
xchg
xchg
mov
insl
and
insb
push
mov
jl
dec
addb
lods
std
scas
std
scas
xchg
arpl
inc
divl
mov
insl
outsl
in
mov
mov
mov
mov
adc
stos
pop
add
mov
or
mov
sbb
int
insb
imul
jo
aaa
jmp
arpl
push
xor
scas
add
xchg
gs
fcom
insb
push
outsl
jb
cmp
sbbb
js,pn
xchg
push
push
add
aam
cmp
push
inc
push
inc
mov
pop
in
adc
jmp
int3
notl
jo
rol
ljmp
lret
adc
and
jb
sub
mov
outsl
outsb
outsb
gs
je
mov
cmp
fs
popa
frstor
jne
arpl
mov
aaa
mov
shlb
xor
stos
nop
sub
mov
gs
js
test
insb
outsl
jb
inc
mov
mov
insb
roll
and
xchg
and
add
sbb
daa
icebp
inc
sub
xor
ror
leave
pop
mov
push
inc
mov
push
call
and
push
jp
or
fildl
and
cli
pop
sbbb
clc
adc
int3
mov
out
or
jns
lcall
dec
add
enter
mov
add
vgf2p8affineqb
push
aam
add
fcomp
fstpl
movsl
call
jo
mov
out
mov
data16
sbb
adc
inc
repz
clc
dec
and
mov
xor
add
mov
push
sbb
js
lock
mov
mov
pop
test
jp
mov
loopne
adc
sbbl
add
cmpb
ficompl
sete
sbb
push
pop
xor
pop
mov
arpl
inc
jg
xlat
adc
add
or
mov
or
loope
das
add
or
ja
scas
add
or
jns
adc
popa
mov
and
out
das
sbb
mov
adc
adc
inc
adc
pause
pop
or
and
xor
and
push
add
cmp
xor
and
or
jmp
insb
lcall
sub
leave
into
add
lcall
bound
faddl
pop
inc
mov
dec
jnp
adc
and
and
mov
xor
pop
push
xor
mov
sub
push
or
jge
inc
sub
mov
add
inc
jae
cmp
and
jnp
add
nop
sbb
outsl
lods
jae
push
mov
push
outsb
jb
and
mov
add
inc
outsl
js
xor
mov
adc
or
jb
or
or
imul
xor
pop
xor
push
add
insl
dec
jae
xor
adc
les
mov
adc
sub
mov
lsl
push
jmp
add
xor
push
add
xor
leave
cmpsb
pop
pusha
mov
fwait
xor
fwait
mov
and
es
inc
jnp
xchg
roll
pop
ss
lock
or
cmpsb
lcall
mov
cmpsb
imul
xor
and
or
pop
jge
add
leave
add
dec
les
push
jne
repnz
push
xchg
lods
jno
loop
call
add
das
dec
inc
mov
sub
inc
sbb
add
add
mov
and
rcll
xor
mov
jno
sub
jbe
mov
adc
ss
ret
dec
ljmp
addr16
or
inc
mov
pop
in
xchg
mov
divb
int3
jle
adc
jnp
imul
push
jns
jns
cwtl
sub
xchg
lods
ja
pop
jns
pop
adc
bound
daa
or
or
dec
rcl
push
rorw
outsl
jecxz
shlb
push
and
add
imul
data16
jge
add
imul
add
and
dec
dec
les
sub
add
lods
push
outsb
shrl
pop
add
jne
loope
add
cmovns
gs
mov
jae
push
movsb
jmp
stos
add
pop
or
or
jmp
add
inc
mov
dec
pop
jecxz
mov
dec
outsl
and
mov
jmp
jecxz
inc
and
insl
scas
insl
add
outsb
inc
jae
and
add
movsl
popa
and
mov
out
add
addr16
out
inc
scas
sbb
imul
jge
push
sub
push
xchg
mov
lds
pop
mov
cmp
fnstenv
xor
sbbb
je
outsb
xchg
insb
popf
xchg
mov
adc
dec
or
lds
add
jge
addr16
dec
adc
mov
pop
xor
jle
mov
inc
push
sub
insb
mov
or
daa
dec
dec
xchg
dec
sbb
xlat
outsb
xchg
aam
into
mov
daa
jbe
mov
lods
shll
fs
outsl
pcmpeqw
jae
pop
mov
inc
push
imul
inc
push
mov
and
dec
js
outsb
push
insb
cmpsl
xchg
out
push
or
aaa
fucomip
decl
shlb
xor
xor
adc
xor
push
xchg
xor
inc
xor
xor
xor
mov
xor
xor
xor
xor
and
decl
xor
xorb
xor
imul
push
mov
mov
lea
mov
cmp
inc
xchg
je
fbld
shll
pushl
or
pop
cmp
jg
lcall
cmp
les
dec
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
ss
clc
pushl
xchg
cmp
add
or
cmp
ds
loop
lods
mov
add
xchg
mov
and
adc
push
sbb
outsl
and
or
pop
inc
sbb
inc
lret
mov
inc
inc
mov
cmp
or
loopne
mov
and
add
add
add
add
add
add
dec
outsl
jbe
mov
loopne
add
xor
or
rolb
add
sub
and
sub
mov
lock
cs
shlb
add
add
or
xor
add
or
pusha
add
adc
add
dec
stos
mov
je
je
add
lods
lds
rolb
add
addb
dec
xor
sbb
shrb
mov
mov
incb
add
smsw
push
xchg
sbb
out
inc
add
mov
lods
xchg
add
shlb
or
inc
nop
enter
adc
lods
mov
mov
sbb
mov
nop
push
enter
xor
out
mov
sbb
rclb
sub
outsl
add
add
add
add
addb
add
add
add
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
