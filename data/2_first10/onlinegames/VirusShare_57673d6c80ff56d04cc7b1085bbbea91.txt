mov
inc
and
and
add
in
sub
movsl
in
jle
out
incl
push
push
push
pop
xor
lea
lock
stos
stos
stos
and
stos
negl
call
jmp
out
dec
jne
dec
lea
dec
pop
pop
pop
jg
std
fiaddl
test
mov
jle
xor
adc
out
fildll
inc
aam
test
bound
ss
push
ljmp
mov
push
je
mov
push
call
aaa
in
enter
mov
popl
outsb
or
mov
xchg
push
pop
mov
jmp
sbbb
imull
push
inc
cmp
aas
adc
fimuls
ret
pop
push
fstpt
cld
add
pop
leave
ret
push
in
pop
push
push
jp
push
mov
data16
in
mov
add
sbb
jmp
ss
int
jo
insb
in
jne
jae
out
cs
mov
repnz
mov
call
lock
je
dec
add
xchg
shlb
inc
push
push
xchg
ret
in
repz
les
lds
je
dec
jge
fldt
leave
popa
lret
int3
inc
jnp
data16
int
into
arpl
outsl
jbe
shrl
sti
setp
shlb
shll
jb
mulps
ret
pop
mov
jnp
cwtl
je
into
movsb
movsb
movsl
cmpsb
out
sahf
out
test
stos
stos
sahf
out
sahf
lods
lods
scas
scas
mov
jns
out
mov
mov
mov
ds
mov
xchg
mov
out
mov
movsb
mov
loope
jmp
lea
jg
xchg
call
scas
clc
imul
mov
sbb
mov
dec
dec
cmp
mov
ss
jae
pop
sbb
or
dec
cmp
push
std
fistpll
jb
jmp
mov
imul
add
xor
movsl
add
mov
or
pop
pop
dec
mov
pop
enter
mov
ret
loop
test
add
dec
int
lds
in
jae
shrl
gs
jb
xor
xor
int
cmp
repz
cmc
testb
data16
loop,pt
jecxz
push
in
in
fnstcw
in
outsl
ljmp
je
lea
mov
jne
pop
cmp
mov
or
add
inc
push
push
push
mov
sarb
imul
pop
mov
jmp
pusha
adc
or
inc
mov
ret
sbb
loopne
aaa
mov
dec
popa
cmp
xor
mov
inc
sub
sub
cmp
jb
adc
mov
adc
adc
clc
sbb
or
push
sbb
adc
jns
mov
push
das
mov
and
jno
jnp
int3
in
cld
jp
pop
add
mov
dec
mov
adc
addr16
iretw
repz
aad
xlat
fcomp
fidivrl
repz
sahf
rolb
mov
lea
jb
sahf
out
dec
jae
sub
jb
sahf
out
jbe
ja
js
mov
jp
inc
jnp
xor
ss
jge
insl
jle
lahf
data16
cmpsl
adc
inc
xorl
insb
test
inc
xchg
push
inc
lcall
mov
dec
aad
ljmp
push
jge
orl
adc
popa
sahf
cmpsl
fldcw
xchg
gs
xchg
xchg
idivb
cltd
mov
outsb
pop
shrb
popf
insb
into
sahf
gs
mov
test
lds
enter
out
jae
jnp
cmpsl
jge
je
int
jb
iret
shlb
cmpsb
jge
in
shll
rorb
repz
mov
inc
jns
xchg
out
imul
pop
add
mov
xor
arpl
out
imul
sbb
jl
ja
push
push
mov
lds
out
data16
or
and
in
cmp
add
pop
popa
pop
cmpsl
repnz
gs
inc
das
pusha
push
test
jo
data16
inc
dec
lret
imul
call
mov
and
lea
jo
mov
adc
push
cmp
orl
stos
loopne
rorb
inc
xor
pushl
sbb
xor
std
mov
mov
push
int
mov
jp
jp
sbb
filds
jo
mov
mov
xor
inc
ds
pop
je
dec
push
mov
fstps
add
cmp
jg
or
jl
pop
nop
in
push
pop
mov
jmp
cwtl
int
jnp
push
je
pop
jne
stc
insb
mov
je
or
xchg
mov
dec
xor
jge
inc
inc
inc
hlt
xor
repnz
andb
cltd
xor
mov
push
cld
cmp
add
hlt
aam
push
cmpsb
imul
mov
and
jns
lcall
pop
push
call
mov
cld
mov
add
jb
jmp
xchg
das
aas
xlat
add
push
in
mov
repz
xor
xor
push
nop
lret
movb
inc
xchg
out
in
pop
lods
mov
dec
imul
mov
xchg
out
call
cltd
in
xorl
cmc
into
push
test
loope
add
cmp
aam
jae
jae
aam
or
push
mov
add
in
xchg
insb
ss
fmuls
push
shlb
pushf
pushf
xchg
imul
add
andl
lock
lcall
xor
movsb
int3
pop
fnstcw
repz
and
push
rcl
mov
fsub
rcl
sbb
lret
mov
inc
jbe
add
adc
inc
xchg
sub
mov
mov
and
sbb
or
test
cmp
sbb
pop
sbb
out
dec
sbb
sbb
adc
in
cld
add
jno
push
sbb
jb
sarb
lods
mov
lret
gs
push
sbb
in
imul
mov
movsb
inc
xchg
jmp
jae
in
adc
fidivl
sbb
xchg
inc
push
jno
mov
cmc
pop
push
shrb
and
pop
in
sbb
ret
addr16
popa
jmp
jg
push
dec
je
adc
clc
sub
or
xabort
or
outsb
jb
mov
lcall
cmp
testb
es
gs
pop
mov
push
pop
sbb
movsbl
fwait
inc
fsubl
pop
push
inc
inc
cmp
pop
std
lret
mov
jb
push
lods
mov
push
push
add
insb
lock
aam
int
test
imul
out
out
adcb
or
jl
jae
xchg
jnp
neg
pop
popa
add
cmp
jmp
mov
iret
add
mov
ss
cmp
pop
jle
mov
push
pushl
cmp
jl
fstpt
in
xor
cmp
pop
mov
pop
mov
mov
call
cmp
jmp
repnz
adc
push
adc
mov
push
inc
or
or
cmovs
jae
mov
test
dec
adc
aaa
roll
sti
in
sbb
add
or
mov
push
jno
rcrl
je
and
pop
pop
je
clc
sbb
or
pop
mov
pop
movsl
adc
jl
push
inc
xchg
daa
push
or
add
lock
idivl
js
mov
aaa
jg
movsl
mov
aas
sbb
pop
xor
mov
lea
ds
rorl
add
push
pusha
push
inc
es
lock
test
xor
shll
fwait
xor
in
shll
addr16
int
xchg
fs
sub
sub
and
cld
pop
mov
mov
sub
pop
xor
std
sti
addr16
cmp
insl
cmpsl
fldenv
stc
push
pop
xor
js
jecxz
jo
jb
cmp
adc
pushl
jl
cmp
cmpsl
jb
xchg
js
les
je
lds
pop
mov
or
addr16
jmp
add
jp
mov
leave
mov
cmp
in
mov
inc
jbe
arpl
nop
out
mov
sbbl
out
insb
dec
and
mov
jns
rol
cmp
repz
enter
jns
cmpsl
stc
int3
xor
into
iret
shl
cmp
out
shlb
adc
iret
xlat
fdivrs
outsb
cmp
xor
push
es
cmp
sar
std
pushf
js
jbe
pop
mov
jae
jns
mov
iret
inc
sbb
lock
and
xor
shll
xor
cmp
and
in
aaa
cs
out
sahf
in
out
out
lock
repnz
repz
hlt
cmc
div
lock
idiv
mov
xor
cli
sti
cld
jae
mov
mov
pop
push
push
xlat
pop
pop
test
pop
leave
sti
test
iret
repz
xor
push
shlb
imul
gs
gs
mov
fmull
adc
cs
js
nop
adcb
imulb
xor
jmp
cwtl
cltd
lcall
cwtl
ja
mov
mov
xor
mov
dec
sti
sahf
out
vshufps
enter
mov
dec
leave
lret
int
fnstcw
and
jb
fbstp
cld
jns
loope
jecxz
movb
lcall
sub
gs
repz
push
stc
jb
repz
rep
sti
jns
dec
aam
incb
or
add
xor
sbb
add
add
add
aaa
sarb
sbb
xor
cmp
popf
or
pop
shll
push
mov
mov
outsb
jnp
out
stos
mov
mov
mov
dec
repz
push
jae
outsl
push
dec
stos
insb
rclb
imul
ss
dec
sbb
push
outsb
pusha
push
pop
arpl
lcall
pop
push
push
inc
inc
pop
pop
xorl
xchg
xor
xor
movsb
jns
push
xor
ss
lea
cmp
gs
ds
sbb
and
and
inc
inc
and
jp
sbb
sub
sub
mov
sub
cs
sbb
lea
leave
ja
in
sbb
sub
xchg
lret
jb
cs
addr16
jnp
jge
int
cmpsb
dec
mov
gs
fldcw
test
dec
xchg
imul
mov
int
lea
ljmp
in
out
pusha
call
xor
gs
jmp
arpl
sbb
or
push
dec
addr16
and
and
push
lret
enter
insb
insl
outsb
int
imul
movsb
imul
test
jns
rcrl
int
inc
clc
cmpsl
jns
cmpsl
inc
ret
inc
lcall
inc
int3
inc
cmp
scas
jns
dec
fnstenv
divl
xor
rorb
dec
dec
xchg
out
xor
les
xor
sbb
push
or
adc
es
dec
loope
aaa
adc
adc
adc
sbb
aaa
pop
or
sbb
js
sbb
test
lods
nop
mov
out
pop
mov
xchg
mulb
shrb
push
enter
pop
cs
and
jo
mov
adcb
call
jl
pusha
loopne
mov
cs
inc
or
lock
je
xor
dec
sbb
xchg
sbb
andb
push
pop
addr16
lock
dec
test
movsl
inc
xchg
inc
movsl
test
jg
adc
add
ret
jne
xor
pushf
in
push
fmuls
jmp
mov
out
ret
int
push
xor
pop
lea
cltd
cs
std
push
jae
mov
inc
mov
movsb
push
loop
test
js
inc
push
sbb
push
shlb
and
jae
popa
arpl
dec
shrl
outsb
cmp
mov
pushf
popf
ds
insb
lahf
mov
mov
imul
cmp
and
adc
push
lock
adc
mov
dec
shlb
fisubrs
or
hlt
xchg
or
or
pop
stos
pusha
add
out
push
movsb
imul
gs
sahf
out
gs
xor
shlb
out
lock
rcrb
test
dec
and
or
jne
jb
xor
shll
push
jb
arpl
das
shlb
mov
mov
cmpsl
mov
mov
fimull
mov
clc
test
cli
lock
sti
cld
std
sub
stos
xor
rclb
imul
xlat
je
flds
fcmovnu
fstp
fbstp
dec
hlt
cmp
cld
rcrb
dec
daa
dec
jae
mov
dec
shll
inc
jne
jb
imul
imul
test
jb
js
xlat
push
push
and
mov
addb
push
mov
outsl
lahf
adc
or
inc
and
dec
or
mov
adc
push
push
lods
sbb
int3
clc
in
jno
push
popa
inc
or
fs
xor
mov
jl
or
push
push
mov
fmulp
mov
or
inc
add
ret
jne
mov
lret
push
outsb
decl
push
mov
cmp
ja
or
jbe
push
jmp
mov
popa
push
ret
imulb
sbb
jmp
lods
mov
sub
cwtl
testb
out
adc
mov
or
mov
sub
movsl
rcll
lock
cld
nop
enter
dec
add
loope
insb
mov
or
or
inc
or
pop
or
jo
push
dec
repnz
stc
mov
add
mov
lock
fnsave
adc
gs
push
jge
push
stos
add
pop
add
mov
shlb
xchg
cmp
pop
jg
idivl
mov
stc
cmp
add
xor
mov
add
pop
adc
in
test
xchg
mov
cs
jne
pop
xchg
out
fstps
pop
pop
xchg
or
cmp
movl
sbb
jp
je
pop
inc
ja
sub
pop
gs
pop
mov
scas
jae
inc
push
dec
adcb
and
add
mov
jmp
mov
jne
gs
inc
xchg
push
cmc
sbb
ret
dec
pop
cmp
mov
movsb
rcrb
dec
and
fwait
lret
cmp
jb
push
mov
aad
adc
push
jne
inc
lea
push
ret
cwtl
pushf
call
in
push
inc
cmc
cmp
pop
out
mov
add
ljmp
dec
push
sahf
idivb
xchg
pop
push
pop
cmp
and
adc
ret
movsl
lea
push
repz
xor
daa
dec
sbb
sbb
lahf
aaa
mov
inc
jl
or
jne
xor
jg
outsl
js
imul
shlb
push
mov
out
push
addr16
sbb
shl
jmp
mov
shlb
cs
xor
cmp
lock
or
jns
out
sub
push
out
add
mov
and
xor
lea
scas
stos
and
pop
sub
inc
cmp
add
xchg
mov
push
fsincos
insb
fsubrs
xor
in
fcoml
nop
and
imull
pusha
jmp
mov
imul
scas
or
fimull
push
xor
adc
add
jl
push
xlat
lret
mov
or
mov
push
push
mov
sub
fmuls
xchg
push
cmp
and
in
test
je
and
xchg
mov
cmp
mov
inc
js
dec
faddl
mov
pusha
cs
notb
clc
push
outsb
mov
popa
pusha
or
mov
dec
roll
cmp
cmp
fstps
loope
in
mov
mov
push
ds
cmp
in
stc
arpl
jb
mov
imul
jb
mov
lcall
jb
cmpsb
sub
scas
cs
lcall
popa
data16
dec
adc
xchg
shlb
inc
push
jbe
cmpsb
imul
lahf
lcallw
mov
lcall
xor
xor
out
test
lods
in
mov
dec
popa
pop
cs
lret
imul
jb
insl
gs
xchg
inc
inc
inc
das
cmpsb
sub
xchg
lret
inc
inc
xor
xor
jl
sbb
in
inc
dec
mov
insb
out
inc
out
push
lock
repnz
in
dec
lret
inc
jb
cmp
cs
popa
je
push
movb
jno
insb
push
pop
insb
jo
xor
xchg
lret
push
outsb
popa
jo
into
push
mov
mov
mov
arpl
dec
shll
xor
xor
pop
insb
jp
mov
mov
fimull
xchg
xchg
jge
out
xchg
xchg
xchg
cwtl
cltd
dec
test
cmpsl
cs
xor
add
pop
cmp
push
sub
nop
enter
call
pop
pop
out
inc
gs
cs
lret
in
outsb
outsl
ja
jb
pop
push
gs
data16
leave
push
fcoms
fnstenv
gs
cmp
fstp
fbld
int
loopne
loope
loop
dec
and
jle
mov
jo
sub
xor
outsb
cwtl
push
jb
lcall
dec
xchg
xchg
sub
in
push
xchg
lret
in
cmp
jb
jne
mov
push
jne
xchg
lret
in
jb
inc
js
mov
hlt
dec
xor
and
lock
aam
dec
pop
cs
push
jb
lret
in
mov
mov
gs
outsl
jb
adc
jns
pop
lock
push
mov
mov
xor
cmp
je
test
sbb
adc
pop
call
je
mov
jo
inc
repnz
pop
or
and
notb
push
hlt
and
push
sbb
pop
insl
clc
jne
xor
jae
dec
mov
or
xchg
adc
cmpl
ret
shlb
push
push
clc
fisubs
dec
cmp
aas
ret
or
ljmp
fisubrl
lea
jl
rcll
push
clc
test
jo
adc
popa
xor
adcl
shlb
sti
mov
push
xchg
inc
lock
xchg
sbb
loopne
adc
fadds
sub
sti
gs
and
hlt
ret
cmp
test
nop
sub
fs
cmpb
cmc
shlb
cmp
lcall
xor
cmp
ficoms
xor
subl
mov
mov
inc
mov
mov
sti
fmull
pop
add
in
mov
test
rcrb
repnz
mov
leave
push
mov
add
push
push
fstps
pop
jmp
cmpl
mov
sub
add
inc
faddl
push
movsb
cmp
mov
inc
mov
cmpsl
push
cmp
cmp
imul
sti
dec
imul
cmp
je
cmp
jb
dec
dec
cmpw
clc
imul
cmp
push
es
sbb
pop
jne
dec
aas
adc
push
and
push
xchg
movsb
cmp
push
ja
cmc
pop
fildl
inc
repnz
jb
add
push
or
nop
mov
lock
mov
in
jae
cmpsb
loop
push
call
jno
and
nop
je
movl
xor
push
dec
dec
pushf
add
sub
mov
or
push
fdivl
imul
add
stc
inc
xor
cli
fiaddl
inc
shll
dec
dec
outsl
gs
mov
imul
ja
jne
rorb
es
add
shrb
pop
cmp
xor
inc
cmp
push
inc
mov
insb
push
xchg
sbb
push
push
das
push
mov
sbb
mov
sbb
mov
xor
popa
jmp
mov
push
test
rol
cmp
test
pop
mov
inc
xorl
shll
pop
jnp
inc
dec
xor
xchg
int3
push
add
arpl
jne
aas
jmp
push
aaa
pop
aaa
push
mov
test
cmpsb
pop
mov
shrb
lock
push
inc
loop
inc
xor
stc
and
std
pop
fidivrl
cld
pop
sub
lret
cmc
cld
hlt
cld
cmp
mulb
aas
adc
sbb
add
cmp
add
pop
cmp
les
lea
xchg
or
cld
div
mov
mov
loopne
add
add
jmp
popa
push
adc
arpl
jl
test
adc
mov
in
or
gs
xor
pusha
inc
push
dec
je
jo
gs
gs
xor
pop
repz
sub
mov
and
loopne
push
test
shll
movsb
lock
push
adc
mov
into
mov
jmp
fldl
popa
insb
or
pushf
sbb
dec
push
push
mov
pusha
push
xor
push
sbb
outsb
mov
jp
test
mov
xchg
mov
loopne
sub
call
inc
push
inc
in
add
cmp
mov
cmpsb
in
fiaddl
push
pop
cwtl
mov
je
mov
xor
adc
fwait
adc
mov
insb
cld
push
xor
push
pop
push
sahf
and
dec
dec
dec
xchg
dec
inc
xor
sarb
cld
std
or
out
cmpsb
sbb
imul
imul
sbb
inc
push
mov
pushf
mov
sarb
shll
outsb
dec
shll
gs
add
xor
inc
je
inc
lcall
out
sahf
idivb
test
jns
mov
xchg
movsb
js
cmp
cmpsb
popl
loope
add
push
ficoml
hlt
xorb
push
shlb
imul
outsb
lcall
outsl
outsb
outsb
add
lret
int3
mov
mov
ror
sbb
jae
rcrb
mulb
enter
les
add
xlat
lds
leave
lock
push
stos
cmpsb
imul
sbb
lcall
push
fimull
mov
call
sbbl
icebp
in
pop
push
push
and
out
mov
pop
dec
fildl
addb
cmpl
mov
lods
orb
scas
pushf
cli
jl
push
pusha
aaa
bound
repz
pop
in
scas
cmp
and
inc
les
leave
or
mov
push
push
and
mov
ror
mov
mov
lret
iret
idiv
xchg
push
fdivrl
pop
or
and
mov
adc
push
sahf
arpl
adc
sub
inc
cmp
jl
push
and
gs
shl
add
lock
dec
insl
mov
mov
daa
nop
or
sub
mov
lock
push
in
addb
push
sub
push
mov
icebp
add
sbb
test
in
dec
jo
cwtl
push
add
xor
inc
cwtl
scas
movsb
dec
xchg
mov
pop
add
in
frstor
mov
andb
out
and
jecxz
inc
push
mov
sbb
push
shll
mov
adc
add
xchg
xchg
sub
sbb
push
js
pusha
aam
dec
cmp
sub
sub
bound
sub
jp
repz
les
je
ret
inc
sbb
dec
addb
jo
inc
gs
andl
cmpsb
imul
push
dec
imul
imul
xchg
push
xor
mov
pop
inc
jb
cwtl
cmpsb
imul
sarl
dec
popa
js
push
outsl
outsb
xor
jnp
repz
xor
lea
dec
shrl
sbbb
imul
imul
imul
rcr
mov
enter
out
push
js
addl
or
jb
adc
xor
jb
mov
ror
lret
int3
int
hlt
rcrb
iret
mov
arpl
addb
push
test
push
inc
mov
subb
into
xlat
das
sub
adc
mov
sub
dec
lcall
cltd
xchg
mov
push
push
pop
imul
jmp
iret
shr
pop
pusha
push
mov
push
ss
filds
cmpsl
fs
mov
rorl
gs
add
loopnew
outsb
mov
je
in
cwtl
sub
add
sbbl
push
add
adc
or
mov
mov
mov
and
jbe
inc
jno
outsb
je
adc
or
rcrb
xor
xor
inc
xchg
pop
adc
pusha
or
xchg
je
mov
jb
xchg
cmpsb
imul
data16
mov
jno
push
pop
leave
dec
ja
lea
xor
repnz
dec
add
sub
loope
xchg
outsb
jnp
mov
mov
xor
test
rcll
xor
dec
leave
add
test
dec
loop
in
rorl
xchg
push
dec
call
and
inc
or
inc
cmp
clc
and
mov
mov
add
fs
fiaddl
xchg
add
test
and
call
pop
add
xchg
fisubrl
popf
loopne
mov
clc
xor
mov
adc
outsb
loop
mov
jge
or
add
pop
pushl
dec
pop
mov
jl
cmpl
inc
lods
jbe
call
test
dec
add
sub
push
jmp
andb
push
xchg
lcall
rolb
repz
mov
movsl
mov
cmp
int
movsb
mov
jae
cmp
xchg
dec
shll
fs
xchg
dec
shll
outsl
jb
dec
shll
rclb
xchg
push
or
sbb
push
xor
repz
or
xor
pop
fdivrs
arpl
outsb
push
mov
adc
and
mov
sahf
dec
fst
push
popw
jge
jno
jbe
aam
jne
or
cltd
xor
cmp
jne
pop
je
nop
push
push
mov
pop
daa
jno
mov
sub
adc
or
insb
and
test
push
pop
jle
jo
dec
ficoms
pop
sbbl
xor
sub
dec
pop
jne
add
sahf
arpl
mov
out
inc
xor
or
and
mov
jns
jne
xchg
das
das
inc
cmp
jne
push
add
fwait
pop
add
pop
and
lea
sub
cli
push
cmp
ss
xchg
sbb
and
dec
fs
lea
mov
pop
add
shll
inc
adc
add
subb
outsb
xchg
lret
in
cmp
jb
pop
jb,pn
arpl
es
lret
in
cmp
xorb
ret
push
or
jo
pop
sbb
push
fsubr
adc
mov
out
gs
lock
mov
jns
lcall
mov
inc
test
clc
das
adc
shll
cmp
fcompl
cmp
and
lcall
outsb
lcall
outsl
jo
dec
mov
data16
cmpsb
imul
aam
adc
mov
lret
loopw
daa
dec
xchg
outsb
and
jb
imul
out
movsb
loopne
cwtl
cltd
lcall
popf
sahf
lahf
cmpsb
imul
imul
adc
jo
xlat
add
outsb
jo
aam
in
sbb
je
outsl
arpl
sbb
gs
imul
iret
inc
or
lret
test
int
pop
js
into
iret
shrb
sub
pop
cmpsb
imul
scas
lcall
mov
mov
lcall
mov
mov
fsubrl
cld
cld
mov
pop
das
push
mov
stos
pop
sub
add
adc
or
in
pop
xchg
adc
jae
scas
or
mov
outsl
mov
pop
jl
cmp
mov
je
pop
popa
orb
sahf
add
push
fstl
inc
pusha
mov
jae
loope
out
lock
cld
jbe
test
addr16
idiv
cld
cmp
ja
pop
neg
push
sub
rol
add
clc
pushf
add
lret
scas
popf
adc
arpl
lea
push
jp
pop
loope
in
sar
test
jb
cmp
inc
ficoml
inc
andb
push
and
pushf
lock
cmpb
mov
add
out
std
ficompl
inc
pop
inc
cmp
jl
dec
fldt
push
lock
pop
adc
sti
inc
cmpsb
dec
clc
pusha
push
or
cld
ljmp
sbb
cli
inc
xchg
ret
xor
lret
pop
jo
jmp
dec
in
inc
xor
mov
ss
clc
ds
sbb
inc
test
add
outsl
sub
popa
or
jo
andl
inc
push
push
int3
shrl
popf
pop
incl
cwtl
mov
es
cmp
jl
xchg
pop
les
mov
lret
add
sbb
pusha
sub
fstpt
sbb
loopne
and
fcompl
xchg
nop
cmpsb
xor
mov
out
movsb
imul
shll
pushf
arpl
or
mov
in
enter
cmpsb
adc
ljmp
or
cmc
sub
insb
fdivr
push
push
call
jmp
sub
mov
cmp
movb
mov
add
and
outsl
test
nop
mov
flds
inc
enter
pop
in
lcall
or
rorl
jle
pop
aam
dec
sbb
addb
sub
shlb
inc
xchg
sub
inc
ret
push
xor
ss
rcrb
lea
pushf
imul
xchg
sbb
lea
jp
in
or
inc
mov
push
push
push
rcrl
push
data16
xor
and
test
push
insl
mov
outsl
jge
mov
mov
or
lock
cmp
flds
xor
adc
adc
adcb
fwait
pop
mov
notl
inc
movb
cmp
addr16
dec
push
jns
lock
cmp
imul
loopne
fbld
push
dec
push
mov
rcll
jo
mov
test
fidivs
andl
icebp
dec
push
jne
push
xor
hlt
arpl
je
insl
outsl
outsb
icebp
lods
imul
cmp
mov
inc
add
push
mov
inc
repz
lcall
je
popa
adc
icebp
repnz
ja
je
lea
sbb
sbb
imul
test
dec
and
mov
cmp
es
jmp
jmp
add
jne
dec
jle
push
loop
movl
rol
xor
pop
leave
jo
aaa
and
popf
pop
mov
pop
ljmp
jecxz
mov
and
adc
mov
cmp
push
jle
loope
mov
mov
clc
or
scas
or
push
inc
or
pop
movsb
dec
xor
pushf
jle
jmp
fwait
xchg
mov
dec
in
mov
call
add
inc
cmp
xor
inc
gs
imul
jbe
dec
cmp
ret
pop
and
xchg
fbstp
testb
mov
and
lock
shlb
cmp
je
mov
dec
or
clc
mov
jp
mov
movsl
faddl
out
pop
es
std
jns
mov
xor
inc
jb
popa
je
lcall
insb
push
gs
insb
jo
lea
jo
jae
inc
shll
outsl
je
push
dec
shll
outsl
arpl
jae
dec
shll
xor
in
iret
repz
cs
outsb
lock
repnz
ds
repz
div
clc
stc
dec
add
sti
js
cld
je
xor
mov
dec
mov
frstor
rcr
xchg
mov
ret
inc
pusha
sub
enter
jmp
je
xchg
or
jnp
lods
mov
jb
shll
or
pop
inc
inc
fidivrl
jno
fildl
test
mov
rolb
shll
imul
xor
mov
mov
ljmp
push
mov
imul
imul
and
shll
imul
shll
mov
shll
popa
insb
mov
sub
movsb
imul
mov
andb
dec
add
push
loop
imul
stos
stos
gs
xor
add
mov
xchg
out
inc
shll
dec
lds
test
jmp
fiaddl
repz
je
jne
jb
adc
daa
outsb
rcll
push
mov
outsl
arpl
fadds
fistpl
mov
dec
xchg
push
push
xor
inc
pop
lods
xor
jl
push
and
std
jbe
inc
mov
cmpsl
std
mov
or
fcomps
rclb
add
js
fs
dec
push
push
push
sbb
pop
test
test
nop
mov
stc
add
jbe
inc
lret
mov
sbb
scas
add
ss
test
icebp
cmpl
cmp
lret
push
inc
xchg
pop
sub
inc
push
ret
stos
and
sbb
jae
cmp
aaa
subb
adc
iret
je
ss
je
and
sbb
pushl
jne
ja
mov
add
adc
jae
fdiv
outsl
call
mov
cmp
movb
cmp
jb
pop
mov
je
orl
je
decl
incl
in
int
lods
rolb
or
or
bnd
add
into
mov
sbb
hlt
adc
add
or
pop
nop
test
xchg
adc
mov
jle
dec
or
enter
roll
repz
mov
mov
xor
insb
out
mov
push
adc
push
fcompl
adc
adc
shrl
push
out
outsb
je
jb
shlb
jo
sahf
out
sub
xor
xchg
add
iret
jae
jo
outsb
push
insb
lcall
dec
je
jmp
push
jne
cmpsb
push
cwtl
jns
dec
outsb
lcallw
loop
dec
outsb
cmpsb
sbb
imul
xchg
push
popa
fs
test
mov
and
movsl
dec
outsb
gs
xor
shrl
je
insb
dec
shll
popa
outsb
ret
xor
insb
mov
add
sbb
int
mov
ret
in
into
cmp
cmp
mov
roll
popa
enter
jp
push
test
in
in
push
test
mov
loopne
mov
jp
aaa
xchg
cld
mov
jecxz
out
ds
dec
jmp
rcrb
es
rol
adc
inc
jbe
arpl
sbb
ret
movsb
xchg
fisubl
lock
data16
sbbb
adc
cmc
test
je
clc
cmp
jle
pop
pop
push
in
je
lea
push
sbb
cmp
ss
add
mov
popa
and
and
fadds
hlt
push
cli
stc
lcall
pusha
popa
movsl
sub
out
or
shl
sub
in
or
mov
push
mov
jbe
mov
pop
inc
call
jb
movsbl
cmp
and
je
xor
clc
dec
or
outsl
add
xchg
pop
shlb
ret
test
je
mov
decl
inc
inc
jmp
andb
inc
dec
add
mov
test
je
dec
fisttps
pop
push
inc
mov
mov
movzbl
inc
sub
inc
jp
cmp
jne
int
scas
std
cmpb
je
dec
inc
sub
add
sub
in
shr
jmp
mov
xor
in
dec
imulb
mov
clc
jge
clc
lcall
incl
sti
sub
mov
cmp
mov
out
pop
aad
push
inc
xor
adc
jmp
add
mov
add
leave
mov
pushf
jg
pop
ret
adc
inc
jmp
push
mov
mov
inc
inc
test
jne
je
popl
mov
mov
lock
adc
xor
sbb
je
mov
std
jmp
sub
lret
mov
jne
mov
sub
sbb
cmpb
je
mov
inc
cmp
je
add
xchg
out
add
mov
and
adc
mov
push
push
inc
pop
movsl
sbb
cmpsb
scas
ds
push
adc
andb
jp
jns
add
dec
rcll
bound
jb
and
xor
inc
imul
inc
imul
inc
insb
jae
arpl
lcall
movsb
dec
jge
outsl
bound
pop
pop
xorl
ja
add
mov
aaa
lock
out
ret
xor
add
ret
orl
gs
cmpsb
inc
imul
lcall
or
mov
pop
fldl
popf
push
cmp
adc
sub
pop
jmp
xor
movsb
lret
jg
mov
mov
mov
addb
div
push
jae
mov
push
mov
add
cmp
ljmp
push
cmp
adc
and
jo
mov
sbb
mov
in
sub
fldl
add
sub
pop
and
pushf
test
xorl
call
cmp
jb
jmp
mov
cmp
add
movzwl
mov
call
mov
add
mov
cmp
jae
cmp
jb
cmpsb
fwait
test
test
mov
mov
lcall
andb
push
and
sub
add
ljmp
jmp
cmp
arpl
das
jg
inc
inc
addb
and
test
xor
fistpl
neg
mov
sbb
or
push
ror
mov
and
push
out
out
push
insl
or
cmp
das
mov
or
insb
xor
pusha
repnz
stc
in
or
push
inc
fs
pop
xor
or
and
xor
dec
addr16
push
dec
adc
arpl
sahf
cli
push
inc
icebp
dec
cmpsb
cmp
jle
and
clc
pop
adc
push
clc
sti
mov
xchg
dec
jno
adc
das
ds
adc
dec
lret
push
inc
decl
jne
or
xor
or
icebp
lods
andl
adc
pop
loopne
test
dec
pusha
in
add
sbb
xchg
pop
sti
adc
insb
adc
sub
and
rclb
nop
dec
test
sbb
rolb
iret
addl
xchg
in
aas
xchg
xor
imul
push
add
sbb
push
mov
add
sbb
jge
sbb
sub
adc
repz
sub
adc
jl
decb
push
rorl
jecxz
popf
lcall
add
mov
push
mov
adc
sub
outsb
lods
xchg
mov
inc
lock
and
mov
jne
shlb
cmpb
frstor
outsl
cs
cmp
jo
mov
xchg
or
fdivp
or
sbb
push
jb
clc
or
ror
je
clc
or
cmp
ja
mov
stos
jno
inc
pop
sbb
cli
insb
imul
mov
test
lods
push
mov
push
inc
or
lcall
jbe
dec
mov
ds
dec
mov
pop
fwait
lock
xor
or
mov
out
js
jae
data16
mov
test
jbe
push
cmpsb
and
push
jle
push
sbb
jo
push
sbb
aaa
loope
ret
cmp
push
push
cmp
xchg
clc
bsf
inc
pop
adc
in
lock
dec
je
and
pop
jl
dec
xor
into
mov
int3
inc
gs
shll
push
imul
outsl
ja
inc
imul
xor
jns
les
pop
icebp
sub
pop
movb
mov
xor
cmp
cwtl
sub
xchg
sahf
les
jmp
insb
inc
fisubl
lods
xchg
cmpsb
arpl
insb
cmpsb
cltd
cs
popa
je
mov
hlt
pusha
ror
lea
cld
mov
nop
cld
test
push
jl
xchg
lock
or
call
lahf
adc
pop
inc
sbb
ret
in
mov
inc
cmp
jl
popf
sbbb
repnz
dec
leave
mov
pop
cltd
sbb
in
mov
pushf
pop
inc
test
xchg
std
or
sbb
and
xchg
mov
inc
sub
data16
lcall
test
push
pop
mov
jo
push
sub
cmpsb
imul
jo
lock
inc
imul
add
jbe
fldcw
iret
repz
faddl
fnstsw
sub
adc
fistps
add
jmp
dec
jg
test
inc
inc
sbb
inc
jbe
dec
xor
gs
imul
in
sar
popf
push
call
scas
pop
out
push
cmpsb
lods
loop
push
push
aaa
call
in
mov
jns
xor
jbe
aaa
add
add
pop
das
push
sub
pop
in
out
xor
add
pop
in
or
cmpsl
and
sti
jbe
popa
add
cld
or
fadds
das
xchg
int3
enter
add
mov
push
mov
mov
negb
fidivrl
in
popf
inc
imul
pop
inc
leave
push
int
and
mov
dec
dec
push
dec
pop
aam
shlb
pop
inc
pusha
mov
mov
mov
sti
add
push
inc
push
cmp
sub
cmp
jmp
les
add
fmul
lret
int3
in
mul
xchg
int
mov
stos
and
addr16
jb
xor
jae
add
fidivrs
jg
inc
dec
xor
add
xor
outsl
bound
daa
aas
sti
mov
push
into
xlat
cmp
dec
pop
cs
mov
xchg
pop
push
and
das
aas
sub
je
shrb
mov
mov
mov
testl
xor
gs
call
pop
push
push
dec
outsl
imul
jo
ja
fs
pushl
fs
insb
push
dec
gs
gs
xor
sbb
dec
outsl
fs
jg
icebp
in
gs
imul
inc
push
jb
popa
je
push
push
or
pop
inc
cmp
outsl
jae
dec
ds
jl
push
dec
cwtl
je
imul
add
and
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
adc
pop
adc
add
ret
popf
std
decl
inc
and
outsl
arpl
jae
gs
jo
or
jmp
xor
inc
imul
gs
xchg
sub
shrl
fisubs
inc
jne
jb
outsb
jge
sub
imul
push
xchg
sbb
push
imul
outsl
dec
hlt
dec
xchg
test
je
inc
jns
sub
sti
ja
iret
daa
push
gs
jo
popa
je
sbb
je
jbe
jnp
sbb
inc
pushf
movsl
push
je
inc
mov
fisttpl
cwtl
arpl
dec
arpl
outsl
outsb
and
dec
gs
jbe
mov
stos
xchg
jns
outsb
cmp
fcmovnu
mov
inc
push
push
shlb
mov
dec
imul
arpl
or
jae
pop
outsb
mov
jnp
arpl
and
jae
mov
imul
hlt
mov
pop
inc
fiaddl
stos
inc
inc
ficoms
add
loopne
hlt
dec
bound
dec
inc
outsl
cld
rcll
iret
int3
or
xor
and
lcall
jbe
sub
jae
ss
inc
xor
clc
stos
stc
mov
test
jae
jo
mov
add
test
arpl
hlt
insl
or
jo
pop
and
and
insl
xor
or
imul
fidivrs
push
outsb
arpl
jnp
fnstcw
test
xor
imul
loope
loope
jo
add
dec
ret
pop
das
mov
lds
and
imul
bound
mov
outsl
jo
mov
imul
insb
insb
arpl
xchg
lcall
inc
aas
aas
xor
inc
push
inc
pop
dec
inc
pop
int3
sub
pop
sub
jne
js
mov
jne
adc
sub
adc
add
sbb
imulb
insb
popa
push
push
mov
pop
ret
sub
adc
mov
xchg
insb
div
fisttps
dec
outsl
outsl
imul
aas
jae
push
or
mov
adc
filds
mov
mov
xorl
daa
adc
call
pop
or
and
sub
or
push
sbb
or
pop
lcall
movups
push
sysexit
or
or
or
cmp
inc
or
or
push
or
clts
or
jmp
pop
adc
push
adc
push
push
and
sbb
sub
add
jg
sti
pop
sbb
push
adc
push
dec
pop
add
push
or
adc
xor
sub
ljmp
sub
or
adc
jge
pushf
push
sub
push
lock
and
push
outsl
idiv
jg
push
adc
sub
sbb
sub
adc
push
or
mov
or
outsb
xchg
push
push
and
mov
pop
adc
js
adc
pop
ficoml
push
or
add
and
or
inc
add
lock
ljmp
xchg
pop
or
lock
add
pop
push
add
gs
pop
and
sbb
mov
sbb
and
push
scas
cmp
pop
mov
dec
lock
pop
pop
adc
adc
adc
xor
adc
sbb
fcomi
push
rorb
lcall
enter
pop
jo
notb
lock
push
pop
movsb
and
adc
adc
scas
loopne
sub
js
push
adc
pop
sbb
cmp
das
aaa
pop
das
clc
decl
pop
add
xchg
sub
push
es
and
fsubrs
xor
dec
xor
and
sub
sbb
jge
cmp
sub
imul
ss
fwait
push
push
add
or
push
mov
adc
sbb
jmp
fisttps
int3
cmp
sub
dec
or
popa
or
or
incl
decl
cs
pop
test
add
or
sub
jns
sti
cmp
sub
rcll
and
shlb
mov
or
ret
xchg
jae
adc
adc
or
cmp
jo
divb
sti
stc
add
mov
add
mov
add
rclb
add
add
dec
add
dec
add
shr
dec
loopne
push
and
js
pop
xor
daa
xor
push
or
push
jo
adc
add
and
insl
adc
shlb
mov
fs
add
mov
inc
add
xor
popf
je,pn
pop
pop
and
add
xlat
iret
xchg
pusha
jb,pn
jns
or
inc
popa
negb
or
sahf
in
mov
dec
push
or
stc
insb
dec
shrb
push
xor
fldenv
push
aad
and
inc
ss
out
incb
fcompl
add
insb
fildl
decl
add
fidivl
pop
mov
add
add
add
add
add
cmpb
jne
pusha
mov
lea
push
or
jmp
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
popa
xor
ret
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
