fdivrl
sti
scas
and
movb
and
push
and
xor
mov
sub
inc
pop
dec
shll
lods
ret
shll
ljmp
cmpsb
imul
shll
cmpsb
js
and
enter
mov
cmpsb
cwtl
and
add
and
xor
shrl
inc
dec
add
and
outsb
packssdw
xor
fs
insb
add
or
decl
imul
gs
bound
push
jb
jbe
insb
gs
ljmp
pop
jae
jae
gs
and
inc
inc
add
fcos
jg
pushw
gs
outsl
imul
add
adc
adc
bound
xor
gs
sarl
imul
push
in
xchg
in
fs
pop
jnp
jns
arpl
bound
xor
or
cmp
sbb
xor
subl
rolb
faddl
out
std
loopne
mov
xor
lea
push
mov
push
or
sub
frstpm(287
lds
gs
popa
enter
int
fcmovne
push
add
outsl
int3
int
pop
into
push
iret
rorb
shll
xor
shrl
aam
aad
xlat
pop
insl
xlat
xor
aaa
fisttpl
push
pop
pop
mov
lcall
in
and
lret
insl
shll
out
call
imul
in
pop
in
aaa
lock
repnz
div
mov
stc
dec
pop
cli
sti
js
je
mov
fnstsw
xlat
sub
mov
pop
jmp
arpl
adc
mov
xor
mov
jne
mov
or
add
rorb
jge
cmp
jne
aaa
mov
xor
jmp
lea
add
pushl
fstpt
je
sbb
outsl
outsl
int
pop
adc
jne
push
or
mov
sbb
iret
enter
das
incl
pop
inc
cmp
or
lds
mov
pop
pop
pop
leave
ret
mov
fisttpl
push
xchg
adc
push
push
imul
or
inc
mov
push
push
sub
mov
inc
push
clc
add
in
push
and
push
push
sbb
js
push
fisttpl
jae
add
add
push
pop
insb
pop
outsb
jecxz
push
mov
adc
push
stos
mov
jg
lock
cmp
je
push
adc
or
or
arpl
and
cmp
adc
push
push
fnstcw
pop
inc
cmp
je
jbe
insl
and
sbb
movsl
sbb
out
mov
jecxz
pop
in
sbb
xchg
add
mov
fisubl
cmp
xchg
xor
ficompl
jo
push
push
scas
inc
shlb
or
push
adcl
insb
and
mov
mov
mov
out
cmp
inc
cli
daa
adc
push
jmp
addb
push
sbb
fldl
pushl
dec
int
jge
inc
cmp
jge
add
bound
mov
or
fldcw
push
testb
je
adc
call
sbb
ljmp
in
cld
push
flds
ja
and
in
fucomp
jbe
add
leave
cmp
fldenv
or
aaa
jb
add
sub
out
xlat
xor
jmp
or
mov
mov
icebp
push
lds
push
bound
mov
push
adc
mov
psrld
mov
inc
inc
dec
dec
enter
test
jne
push
pop
jmp
lds
movl
jecxz
insb
or
add
ja
pusha
xor
xor
sti
decl
test
sub
add
aad
pop
sbb
imul
inc
and
loope
mov
lea
add
daa
push
addr16
and
ljmp
sub
call
lods
or
push
in
les
out
inc
in
cwtl
lock
js
lock
push
in
inc
mov
push
pop
sub
and
or
mov
fcoml
cwtl
pop
les
fisubs
fstl
call
mov
fdivp
pop
pop
pop
shlb
add
std
cwtl
mov
dec
add
stc
je
fimuls
repz
lea
sub
movsl
loopne
add
mov
sti
out
lea
stos
mov
loopne
mov
out
adc
pop
add
xor
les
addr16
or
ret
push
cmp
push
sahf
mov
call
out
call
ss
xor
lret
pushf
imul
mov
xlat
inc
into
xor
mov
std
adc
adc
mov
and
mov
or
pop
pop
negb
cld
pop
jmp
lods
jge
jmp
rcrb
or
imul
xchg
in
xchg
outsb
ljmp
pushl
xchg
imul
pop
imul
sub
jmpw
popw
or
jne
int
jg
insb
inc
or
test
jb
aam
ja
pop
mov
fistpl
in
push
test
add
sbb
xchg
mov
xchg
dec
inc
repz
loop
sbb
je
push
pusha
sbb
data16
adc
sbb
pop
or
push
stc
ds
movsl
fnstcw
enter
leave
imul
lcall
cs
arpl
fwait
movsl
pop
shrb
insl
mov
lret
inc
stos
pop
sar
shrb
lds
mov
push
pop
cwtl
iret
inc
xor
fcoms
pop
ss
dec
push
mov
sub
mov
pop
cld
rorb
jb
stos
adc
lods
out
into
pop
lds
fldenv
stos
xlat
pushf
loopne
add
fs
dec
ja
cmp
insb
stos
push
rorb
mov
xor
cs
jbe
dec
mov
js
jp
bound
mov
xchg
jl
sub
inc
lods
not
push
xlat
fisubs
dec
pop
jo
push
mov
cmp
stc
stc
add
fs
ss
les
fisubl
jnp
int3
fsubl
out
xor
and
mov
or
neg
mov
cs
mov
je
jae
dec
pusha
mov
addr16
int
pop
jnp
packssdw
inc
lcall
adc
and
scas
cmp
ss
loopne
subb
or
frstor
data16
push
loopne
jnp
pop
clc
lods
jl
lcall
cld
pushf
mov
adc
dec
popf
fwait
or
mov
adc
std
ficomps
dec
stc
bound
bound
enter
bound
dec
addr16
sar
sti
imul
in
addr16
push
push
mov
movsl
test
pop
pop
stc
adc
cmp
lcall
push
js
lcall
lea
in
out
and
xchg
leave
je
pop
lock
sub
popa
add
movsb
hlt
xchg
or
js
sbb
jno
or
inc
xor
lretw
pop
xchg
and
hlt
adc
in
mov
inc
out
mov
adc
push
adcl
dec
test
xchg
fs
clc
roll
outsl
ret
and
fisttpl
int3
int3
pop
xchg
add
daa
in
adc
push
cmp
loopne
fcomip
jb
sub
pop
pusha
mov
enter
mov
mov
inc
inc
and
pop
faddp
dec
movsb
inc
rolb
fwait
xchg
add
adc
push
mov
inc
fsubrs
push
dec
inc
dec
dec
in
sti
cmpsb
es
push
dec
inc
dec
and
dec
cs
outsl
push
adc
push
lds
add
inc
mov
and
add
nop
add
aas
addb
push
add
add
nop
add
enter
cmpsb
add
mov
add
add
pop
mov
int
mov
movsl
loop
push
addr16
insl
and
outsb
outsb
outsl
je
bound
mov
outsb
and
inc
dec
push
and
fs
out
mov
pop
rorl
add
mov
sarb
fwait
push
mov
hlt
out
and
out
insb
in
xchg
out
pop
nop
scas
mov
push
pop
jecxz
in
in
jge
imul
add
jbe
mov
in
add
lds
or
push
or
cmp
xor
gs
testl
jmp
push
xor
pop
push
loopne
inc
jb
sub
dec
insb
mov
outsb
and
add
addr16
cmpl
jae
stos
adc
out
insl
jbe
or
cs
je
sub
xor
inc
push
push
adc
cld
and
dec
xor
mov
outsl
arpl
dec
add
test
xchg
inc
aaa
insb
lcall
fdivp
or
int
insb
mov
mov
pop
mov
add
xor
push
cmp
cmpsb
pop
sbb
ds
pop
cmpsb
imul
imul
dec
shrl
cmp
imul
mov
fwait
cmpsb
sub
or
xchg
bound
adc
popf
insl
jl
mov
add
xor
scas
mov
dec
shl
push
jecxz
pop
shrb
inc
mov
push
xor
js
mov
mov
add
jb
es
and
fs
add
out
mov
sti
rclb
xorb
jo
incl
sbb
add
pop
add
push
and
jae
inc
inc
push
iret
dec
push
push
push
repnz
or
cwtl
and
adc
add
or
jl
cmp
add
sbb
inc
or
or
add
repnz
cmp
add
iret
daa
in
cmp
add
test
add
xor
das
add
cmp
and
adc
and
adc
filds
stc
inc
and
adc
pop
cmp
inc
sub
dec
and
addl
adc
jnp
popa
out
jb
call
div
xchg
insl
push
jp
cmp
jne
push
pop
jmp
adc
faddl
cmp
add
orl
cmp
pop
lea
leave
or
mov
cld
incb
loop
std
pop
mov
dec
aas
je
insb
xchg
insl
inc
outsl
pop
mov
and
sbb
loope
pusha
jl
adc
add
rcl
je,pt
mov
mov
leave
cmpsl
loop
into
xchg
or
int
adc
xchg
push
clc
std
inc
xor
lcall
sub
fistl
fs
and
push
adc
fs
push
mov
cmp
enter
or
lcall
pop
cld
add
adc
cmp
cmpb
je
push
dec
call
adc
add
icebp
outsl
sbb
add
cmp
jl
enter
adc
shr
adc
pop
inc
push
idiv
mov
mov
in
idiv
sbb
icebp
sarl
sub
filds
lds
out
pop
call
fwait
cmpsl
mov
add
out
mov
adc
cmp
mov
push
or
adc
sbb
movl
inc
inc
jmp
or
mov
popf
inc
cmp
mov
pop
add
clc
jp
outsl
ret
cmp
push
fdivs
dec
fidivl
fldcw
ret
mov
add
hlt
mov
mov
testl
lock
mov
xor
lahf
or
add
aas
xor
sub
adc
or
add
jo
mov
shl
fcomps
push
inc
sub
or
add
push
jbe
mov
jo
pop
cmp
and
fsubs
fsubr
fimuls
push
ret
cltd
cmpsb
scas
inc
cmp
outsb
and
mov
add
mov
and
fisttpll
push
mov
jp
lret
add
jne
or
inc
loopne
adc
add
push
adc
or
add
or
jb
addr16
mov
js
cld
stc
push
mov
jg
or
cmp
fwait
mov
cmp
jmp
in
mov
push
mov
or
fsubrs
pop
ss
pop
push
mov
aam
sub
aaa
cmp
mov
xchg
ret
lods
imul
mov
add
mov
sbb
mov
add
gs
sub
lret
jo
jb
jb
mov
lret
cs
cltd
mov
lcall
fldcw
outsb
fcmovnu
adc
addr16
adc
sbb
mov
shl
jecxz
nop
cld
cs
lods
cmp
mov
fcoms
shlb
cmp
inc
call
sti
fmull
mov
das
push
and
inc
mov
in
addr16
push
push
jge
push
jmp
inc
and
sub
scas
sbb
xchg
or
dec
mov
mov
push
jg
shr
stc
sub
out
push
jmp
add
mov
test
mov
inc
or
shlb
cmpw
jne
dec
cmp
cmp
mov
sbb
sbb
cmp
jge
mov
cmpl
inc
cmp
sub
cmpb
cli
cs
js
sub
jo
daa
cmpl
mov
dec
or
leave
je
add
push
aas
or
add
or
mov
fcmovnu
mov
add
push
inc
dec
sbb
mov
mov
subb
mov
jg
rcrl
or
roll
lods
lret
aaa
mov
add
sub
in
fbld
add
jno
mov
mov
fstl
stos
lahf
add
int3
mov
mov
imulb
mov
and
lea
shr
jle
movzwl
mov
jne
mov
add
ljmp
cmp
jp
insl
loope
mov
adc
add
push
data16
lock
jne
or
sub
mov
adc
ss
or
mov
lock
xchg
xor
or
inc
cmp
xchg
add
jmp
push
push
or
jns
jae
loop
outsb
pop
add
jge
jbe
jno
push
inc
mov
je
adc
pop
dec
or
loop
inc
adc
iret
lcall
das
je
and
mov
pushl
add
push
scas
loope
ffree
clc
add
fisttpll
ret
popa
loope
sub
sbb
loope
or
push
mov
mov
pusha
adc
lock
mov
xor
mov
data16
and
testl
push
call
jl
or
lahf
inc
aaa
pushl
lcall
xor
push
les
mov
or
mov
push
dec
call
push
imul
pop
int3
out
je
xchg
and
aas
repz
cld
test
or
push
push
test
les
push
jg
jecxz
cmp
dec
mov
or
inc
pop
in
out
testb
je
pop
inc
sub
ss
rcrb
sbb
jmp
aad
jo
mov
dec
aad
sti
gs
sbb
cmp
xor
inc
xchg
lods
jno
push
test
push
adc
push
mov
hlt
call
xchg
or
mov
mov
sarl
cmp
jne
nop
sbb
clc
dec
mov
es
jmp
and
push
cmp
or
subb
jmp
outsl
lret
mov
lret
jb
jb
gs
subl
sahf
fcom
pop
push
add
mov
and
adc
jecxz
pop
cld
or
inc
ret
jmp
jp
mov
mov
scas
andl
inc
cmpsb
sbbl
mov
addl
pop
ret
adc
jp
cltd
call
pop
inc
jne
inc
aaa
pop
xchg
inc
js
jmp
pushf
sbb
addps
mov
imul
cmp
or
mov
inc
daa
or
sub
sbb
xor
xor
sbb
pop
cld
cld
xchg
xor
mov
mov
xchg
mov
jnp
jle
jl
push
lea
pop
mov
rep
mov
mov
sbb
cmp
xor
jg
sub
je
cmp
jp
fistpll
cmp
jl
jmp
push
imul
rclb
js
dec
pop
nop
fisubs
bound
mulb
and
mov
fadds
sbb
es
popf
insb
jg
and
mov
mov
ss
nop
lods
movb
jp
insl
out
sbb
jmp
cmpl
lea
xchg
fisubrl
aad
xor
cld
push
js
ja
xor
sbb
push
testb
sbb
es
rcl
cmp
shll
mov
sbbb
or
pop
xor
jle
mov
push
push
scas
das
mov
test
ret
sbb
mov
test
cmp
mov
or
push
push
into
in
inc
fcmovne
std
cli
add
push
xchg
or
mov
push
rorb
pop
add
or
inc
and
xor
and
adcl
popa
pusha
fsts
sbb
pop
popa
jae
clc
rorb
mov
mov
ja
jmp
sbb
cmp
cwtl
fldcw
hlt
lods
cmc
fadds
sub
je
jl
pop
insb
iret
fsubr
negb
mov
je
mov
mov
add
cmp
add
pop
add
mov
mov
add
mov
sarb
out
and
inc
add
js
es
sub
or
jne
sbb
mov
add
mov
mov
and
lods
add
jmp
cld
sbb
jo
sub
inc
or
rcrl
mov
mov
cmpsb
cld
jae
fistl
dec
push
or
cmc
sbb
add
xor
sbb
lods
arpl
pop
mov
dec
or
sub
int
ficompl
loopne
push
inc
or
cmp
jb
int3
cmp
xchg
inc
ret
divb
cld
cmp
repz
mov
mov
adcl
sbb
cmpl
std
icebp
pop
stc
adc
imul
mov
inc
xchg
pop
cmp
cs
dec
xor
mov
into
push
push
aaa
dec
pop
mov
je
push
push
xor
pop
push
pop
fldt
arpl
lret
call
and
and
mov
jae
pop
adc
mov
ror
fiadds
push
ds
aas
mov
frstor
js
add
insl
popa
push
repz
push
xor
test
add
or
push
jne
sbb
in
pop
or
mov
cli
je
push
pop
orb
jne
sub
push
jo
call
inc
sahf
mov
xor
mov
mov
sbb
imul
stc
sbb
mov
aad
jl
or
js
jne
pop
adc
xchg
and
xchg
lahf
lea
pop
cmp
out
pop
fisttpll
sbb
lea
in
in
jmp
test
cmp
fstps
jle
jmp
sub
cmp
call
in
pop
movl
mov
dec
incl
push
or
xchg
pop
or
adc
je
sub
movsl
outsl
mov
mov
adc
fbstp
inc
push
add
dec
bound
xor
lahf
inc
push
add
or
inc
sbb
and
into
push
pop
mov
xchg
xchg
aaa
or
sbb
lock
and
push
pop
int
outsb
adc
pusha
cmpsb
mov
or
xchg
xchg
nop
imul
pop
data16
or
mov
js
out
imul
pop
mov
pop
sub
les
inc
popa
mov
jmp
or
das
push
add
mov
dec
sub
les
mov
jecxz
pop
add
mov
lock
enter
das
fmull
sbb
aas
int3
aaa
xor
in
jl
ret
push
sbb
fsubr
mov
popa
jns
call
sbb
add
ret
xchg
loopne
mov
adc
sbb
ret
adc
data16
clc
ss
shlb
aaa
push
dec
rcrl
mov
cmp
push
movsb
pop
mov
add
divl
inc
insb
xchg
cli
ljmp
gs
popa
outsb
fs
add
jb
arpl
fs
insl
mov
dec
outsl
popa
fs
imul
packsswb
sbb
and
push
imul
mov
bound
adc
jne
dec
divl
insl
xor
jne
sub
bound
int3
add
jb
outsb
pop
mov
or
je
ljmp
xchg
std
jnp
fadds
rorb
add
outsl
dec
test
push
imul
popa
insb
inc
dec
gs
js
add
imul
jb
outsb
and
push
arpl
mov
gs
outsl
add
cmp
gs
orb
push
mov
inc
insb
lods
push
sti
push
imul
add
xchg
cmpsl
repz
scas
mov
sub
mov
add
scas
fnsave
jne
xor
push
lods
fisttpll
je
out
sbb
mov
lret
dec
or
mov
add
gs
sti
jo
ret
fcom
mov
or
imul
imul
xor
inc
lahf
sysret
fldenv
sub
outsl
jb
outsl
fnstsw
mov
popa
jo
push
popa
adc
or
mov
adc
imul
mov
cmp
xor
arpl
inc
jo
inc
outsb
jbe
outsl
or
insl
fs
aad
jae
dec
inc
push
pop
js
aad
inc
xor
add
sbb
popa
in
mov
out
push
push
sbb
pop
add
mov
push
aad
imul
mov
add
jne
and
fistl
jne
pop
mov
pusha
pop
sub
inc
out
sub
arpl
loope
ja
subl
pop
dec
outsb
data16
mov
insl
popa
insl
adc
add
arpl
fdivs
inc
arpl
jo
inc
popa
arpl
lods
fisttpll
imul
sub
inc
push
cwtl
mov
adc
adc
popa
xlat
imul
mov
xor
push
outsb
lea
bound
cltd
add
insl
mov
fdivs
decb
lds
mov
push
adc
sub
insb
ja
xor
insb
mov
add
aas
aas
xor
inc
pop
push
add
clc
cmp
xor
dec
cmovge
in
lods
add
or
cmpl
clc
add
pop
push
sub
lock
clc
jns
aas
and
jae
arpl
inc
inc
push
insl
dec
in
mov
arpl
cmovo
fdivrs
push
adc
adc
out
lahf
xor
inc
pop
pop
dec
cltd
or
xor
imul
dec
and
sbb
pop
mov
dec
pusha
dec
mov
xor
inc
cmpsl
inc
inc
jne
fisubl
or
or
sbb
mov
dec
push
jge
pusha
and
pop
mov
adc
int
or
jno
imul
outsl
lea
subb
jb
dec
inc
add
pushl
push
addl
xor
xor
xor
mov
dec
dec
xor
xchg
nop
xor
xor
xor
xor
xor
xor
lcall
pop
xor
jne
mov
scas
xor
xor
xor
xor
xor
xor
pushl
xor
xor
xor
xor
scas
xor
fbstp
fs
js
ret
pushl
ss
aaa
ss
dec
aaa
pop
aaa
pop
aaa
je
jp
test
mov
xchg
aaa
mov
aaa
les
fcmovu
pushl
fbstp
imul
xchg
cmp
cmp
cmp
cmp
cltd
cmp
add
lcall
jge
mov
leave
cmp
cmp
cmp
imul
cmp
in
cmp
cmp
test
cmpsl
cmp
add
cmc
ds
aas
aam
call
aas
pop
aas
test
mov
xchg
aas
cwtl
aas
movsb
aas
mov
call
aas
in
xor
out
add
or
outsl
lcall
xor
push
xor
cmp
dec
xor
ret
xor
xor
xor
lcall
jns
sahf
xor
xor
xor
xor
xor
xor
xor
xor
out
mov
xor
xor
xor
inc
xor
mov
mov
ljmp
xor
or
adc
ss
ss
ss
bound
push
fildl
sub
add
mov
jb
loop
ja
fmuls
mov
sub
ja
or
cmc
and
and
pop
and
dec
and
adc
cmp
frstor
jno
sahf
std
inc
and
jne
mov
testl
mov
mov
popf
add
mov
leave
test
or
not
and
add
add
pop
add
inc
dec
mov
pop
test
stos
mov
js
nop
mov
fcomi
movsl
add
imul
cmpsb
imul
mov
adc
mov
out
pushf
scas
imul
pop
add
add
cmp
dec
shll
cmpsb
mov
dec
shll
loop
or
imul
cmpsb
imul
imul
dec
shll
ds
bound
xor
rorl
xlat
xor
mov
add
divb
xlat
add
enter
xor
rcll
mov
push
stos
mov
adc
push
neg
fnstcw
add
mov
mov
lcall
test
lret
cmpsb
imul
dec
shll
inc
push
pop
outsb
shll
xchg
sahf
dec
shll
rcr
xchg
dec
shll
out
clc
add
imul
cld
sub
cmp
inc
notl
push
shll
sub
mov
xchg
push
imul
add
lds
daa
adc
add
imul
ficoms
jl
xchg
dec
dec
outsb
je
je
dec
inc
and
adc
inc
je
jo
jne
jns
inc
aaa
ret
mov
push
jb
adc
loop
fcmovnu
adc
dec
add
xchg
mov
mov
add
add
or
and
mov
xchg
add
and
pop
mov
scas
shlb
and
stc
fidivrs
pop
pop
add
add
and
sub
and
fildll
gs
and
inc
popa
mov
xor
adc
add
mov
insb
fldcw
pop
aas
or
mov
mov
leave
add
pop
roll
incl
dec
cs
mulb
pop
add
mov
add
test
inc
xchg
inc
pop
sbb
lret
push
inc
xchg
movsl
adc
add
xor
inc
adc
adc
fdivl
das
xor
lds
adcl
xor
ud2
push
add
pop
stos
or
add
das
fstl
xlat
adc
je
jne
punpcklwd
scas
jnp
pop
inc
or
push
gs
pop
mov
gs
add
push
inc
jb
push
and
ja
mov
or
push
mov
jae
and
addr16
mov
aad
or
sbb
pusha
arpl
pop
add
mov
xorl
jp
pop
cs
add
test
arpl
outsl
pop
testl
inc
push
inc
dec
adc
addl
lds
inc
and
rclb
addr16
sub
inc
out
mov
imul
fs
cmpsb
dec
pop
inc
add
adc
mov
mov
imul
inc
pushl
insb
add
icebp
addr16
lods
jae
inc
add
je,pn
xor
and
lret
xor
push
idivl
popa
cmp
mov
mov
fsubs
lea
mov
lods
adc
adc
mov
xor
mov
cmpl
aaa
and
aam
push
or
mov
mov
ljmp
cmp
lea
arpl
test
sbb
pop
add
lods
sbb
sub
or
popl
nop
and
stos
mov
jecxz
clc
test
xor
mov
dec
dec
xchg
jp
mov
push
push
addr16
and
jo
add
jb
imul
jp
cli
dec
imul
sarl
and
inc
mov
in
inc
pop
or
add
pop
test
mov
stos
xchg
sub
imul
and
ret
test
dec
lcall
out
jnp
test
aam
jbe
and
xchg
push
js
rorl
adc
fs
jns
enter
add
xchg
inc
mov
pop
fidivrl
pop
xchg
push
inc
in
push
mov
pop
cmp
inc
sbb
add
stc
pop
std
pop
jb
leave
in
popa
dec
popa
and
pop
pop
jne
jns
dec
in
sbb
mov
fstpl
push
add
or
shll
xor
mov
sbb
xor
roll
stc
pop
mov
jl
add
jae
mov
push
cld
jg
or
jmp
xor
ret
inc
adc
mov
push
push
mov
or
or
jle
mov
cmpb
push
sarb
adc
fcomps
rolb
lret
push
cs
xor
push
cld
adc
xchg
pop
jne
xor
jnp
dec
jmp
sub
loopne
inc
mov
repnz
xchg
call
xchg
mov
cmpl
adc
or
mov
adc
jmp
cld
add
pop
sub
push
jmp
repz
jnp
xor
and
ret
add
dec
mov
mov
add
jge
scas
lret
iret
pop
cmp
stos
mov
mov
lods
inc
out
add
mov
pop
icebp
cmpsb
loopne
push
movl
jne
jb
mov
dec
cmp
jne
call
incl
pop
add
ror
sub
lea
or
or
leave
xor
mov
pcmpeqb
mov
pop
imul
pop
sahf
in
and
and
and
test
or
inc
orl
insb
inc
mov
push
jmp
adc
and
adc
mov
pop
insb
in
pop
or
lea
push
cmp
push
jnp
cmc
cmp
je
mov
movswl
leave
sub
es
out
dec
cmp
adc
cmp
pushf
or
push
xor
and
push
push
xor
mov
je
repnz
les
andl
jmp
adc
lcall
rcrb
decl
lcall
test
in
cld
and
add
mov
repnz
jmp
push
ds
push
sarl
xchg
lret
pusha
aas
shlb
sub
push
aas
cld
rol
push
pusha
push
stc
mov
inc
es
adc
inc
pop
jo
sub
icebp
decl
pop
in
add
movb
mov
sub
sub
or
push
jmp
or
cmpb
das
inc
inc
call
aaa
mov
mov
mov
stos
mov
adc
push
xor
xchg
or
decl
fnsave
data16
or
popa
adc
arpl
insb
and
test
mov
sbb
push
movzbl
shll
mov
pop
outsl
sti
outsl
fbld
andb
mov
or
push
mov
fsubrl
inc
pop
sbb
jl
push
aaa
pop
and
cmp
push
push
add
xor
adc
add
pop
repnz
dec
adc
add
les
add
enter
in
add
int3
adc
add
sbb
wbinvd
push
movsb
xor
adc
xchg
jo
testl
mov
cmc
add
cmpl
add
mov
add
in
push
xchg
inc
push
ret
mov
mov
mov
and
mov
fnstenv
jne
or
rol
push
pcmpgtw
sbb
lcall
and
dec
clc
fisttpl
or
adc
and
push
mov
sbb
scas
pusha
push
push
push
and
push
sti
shrb
mov
hlt
pop
mov
push
stos
movsl
gs
mov
push
pop
sbb
sahf
push
push
pop
push
ljmp
sub
pop
push
mov
aaa
xor
push
jge
movsl
add
mov
fcomps
les
loopne
mov
jnp
adc
mov
pushf
adc
mov
rep
xorb
mov
mov
mov
push
sbb
pop
push
mov
out
inc
or
mov
cmp
je
push
or
xchg
adc
leave
sbb
fcoml
jnp
push
repz
test
adc
mov
cmp
das
mov
inc
mov
mov
xchg
jle
sub
sub
insb
fcmovne
les
stc
and
push
pop
call
sti
mov
and
faddl
hlt
mov
decb
cmp
jb
lds
cmp
jne
push
add
mov
inc
add
or
scas
inc
popf
pop
mov
push
andw
imul
mov
aas
loopne
push
insl
subl
cld
pop
jb
imul
es
xor
adcl
rcrb
sbb
inc
test
mov
int3
divb
call
jne
test
xchg
std
xchg
out
mov
es
aaa
lea
cmp
jne
and
idivl
mulb
mov
jbe
hlt
add
adc
ja
inc
push
pop
cld
call
cmp
or
sti
xor
lsl
push
jo
loope
call
addr16
sbb
or
movl
pop
push
inc
call
out
or
push
or
insb
xor
cmp
xor
adc
cmpb
filds
cmp
xor
and
and
je
jo
mov
pop
enter
xor
repnz
sbb
repnz
pop
mov
mov
mov
sbb
nop
pop
repnz
imul
cwtl
xor
nop
xor
outsb
sub
or
cmp
xlat
jge
jle
outsl
lea
inc
out
adc
push
mov
add
jno
ja
outsb
call
or
cld
cmp
je
test
jns
sti
mov
push
inc
hlt
mov
push
in
jne
cmpl
daa
push
sti
push
aam
dec
inc
cld
jne
xor
outsb
mov
cmp
cmpsl
jmp
shll
fdivrl
sbb
addr16
inc
cmp
mov
inc
add
cmc
pop
xor
fs
push
pop
push
push
movzbl
and
inc
mov
xchg
push
cmp
adc
test
jne
cmp
insl
jmp
cmp
je
adc
push
or
cmc
clc
add
stc
and
or
sub
jg
adc
dec
leave
or
adc
out
shr
nop
sbb
lds
leave
jne
or
test
je
mov
rcr
imul
or
add
pop
and
and
or
mov
test
je
cs
ja
lret
sbb
shlb
or
push
mov
shll
xlat
xchg
jne
in
scas
mov
add
jp
loope
sbb
aad
push
cmp
shlb
add
adc
push
sbb
dec
mov
pop
or
scas
sbb
or
test
in
sbb
add
imul
out
jnp
rorl
repnz
adc
lea
les
je
cmpsl
cltd
test
sbbb
mov
in
sub
or
dec
cmp
rorb
jle
sar
add
cmpb
push
adcl
or
jl
mov
in
fcoms
add
sbb
pop
or
in
add
pop
shlb
aaa
ret
add
inc
dec
aam
scas
ficoml
push
je
rcr
cmp
lcall
push
into
fidivrs
dec
loope
pop
je
push
jmp
adc
mov
inc
add
xor
jbe
into
or
cld
mov
negl
pop
lret
pop
inc
idiv
adc
jg
loopne
and
lahf
andb
add
mov
or
xor
adc
lahf
in
test
add
movsb
xor
adc
add
repnz
ljmp
cmp
adc
mov
add
mov
xor
adc
lock
adc
ljmp
test
inc
mov
jo
xchg
sub
fs
ja
ret
ret
mov
subb
xchg
add
xor
loopne
inc
sbb
icebp
in
in
sarb
inc
call
imul
orl
or
or
inc
sub
out
mov
frstor
adc
add
ss
sbb
repz
loop
pusha
loope
jge
decl
inc
std
pop
fnstsw
lea
loopne
cmp
jae
incl
je
mov
enter
or
loopne
outsl
sbb
push
mov
lret
call
mov
dec
push
pop
jne
adc
sbb
dec
jo
mov
rolb
jns
adc
or
or
sbb
inc
inc
fsts
push
add
fwait
shll
pusha
stos
pop
cmpsb
xchg
stos
add
inc
dec
rolb
jbe
or
stos
jge
pop
sti
sti
not
and
push
jl
and
or
add
lea
or
xlat
sbb
mov
inc
jo
add
repnz
not
and
loop
jg
testl
mov
jb
shr
dec
je
lret
push
js
repnz
aam
in
test
or
fisubs
fimull
add
out
das
call
lea
shr
shl
push
pop
inc
ja
in
sub
mov
and
not
cmp
add
mov
mov
mov
shr
or
mov
dec
daa
pop
jg
push
adc
add
lea
sbb
fisttps
je
cli
mov
push
push
cmpsb
jle
not
and
call
push
hlt
pop
mov
das
adc
movb
jecxz
xorb
js
sbb
xlat
loopne
fiaddl
repz
imul
sbb
inc
xor
scas
roll
mov
test
sbb
pop
int3
xor
add
add
out
ja
bnd
and
cli
sbb
imul
rolb
fcomp
cwtl
subb
jns
out
sbb
add
rcr
mov
pusha
adc
pop
scas
testl
sti
mov
pop
les
subb
add
pop
push
fisubl
push
sub
sub
fcom
add
mov
pop
mov
pop
fyl2xp1
mov
pop
xor
out
mov
or
xor
xchg
out
nop
fmull
or
xchg
jno
std
aas
mov
cmp
push
cld
mov
sub
fidivrs
xchg
pop
imul
das
push
mov
cmpsb
pop
sub
cmp
sub
add
or
cmp
jnp
rol
popa
adc
add
or
ret
mov
ret
lret
mov
aad
aam
pop
bound
popa
imul
sbb
mov
or
and
jg
or
sub
inc
mov
rclb
push
fadds
hlt
or
daa
clc
jb
mov
push
pop
pop
es
adc
repnz
adc
and
mov
pop
test
xor
and
call
insl
aaa
outsl
mov
mov
adc
call
insb
int
add
fdivs
push
shlb
adc
add
rorb
in
pop
sahf
pop
and
clc
cmp
sbb
pop
jge
cli
fnstcw
ds
jg
or
fnstcw
fbstp
xor
loope
out
sbb
loopne
ret
pop
mov
and
mov
mov
fbstp
pushw
fcomps
aad
adc
scas
int3
push
and
gs
fnstenv
outsl
sbb
mov
adc
inc
loop
rcr
je
out
or
fcmovbe
fdivs
aaa
add
sbb
pop
add
mov
xlat
mov
daa
lret
repz
int3
aad
flds
outsl
adc
jae
movl
iret
cmp
mov
cmp
or
data16
repnz
xor
test
pushl
int
pusha
sbb
test
xor
mov
call
divb
adc
push
fadd
jbe
lret
repz
insl
adc
inc
sti
xor
mov
repz
repnz
or
in
mov
push
fcomip
xor
mov
xchg
nopl
xchg
mov
push
adc
cltd
jb
das
lods
fdiv
fmuls
pusha
dec
insl
pop
mov
jno
cli
xor
rcrb
mov
or
out
or
mov
sbb
imul
jle
sub
jae
mov
into
fwait
test
add
sbb
lock
lock
hlt
out
dec
fimuls
imul
aam
xchg
jae
orl
cmpsb
adc
fidivs
test
or
sbb
das
pop
imul
push
aas
sbb
cmp
rcrb
fstps
push
lret
test
mov
repz
xor
jp
jl
pop
fnstenv
mov
jecxz
pushl
xchg
gs
lods
les
arpl
jne
cli
mov
mov
mov
add
sub
rol
sbb
push
inc
in
sbb
pop
outsb
insl
or
int3
or
inc
push
push
jle
mov
fistps
xchg
stos
adc
aaa
jge
hlt
cmp
xchg
cld
cltd
or
insb
pop
scas
xlat
mov
ret
pop
pop
loopne
xchg
gs
sbb
rcrl
or
lock
int3
or
push
or
mov
sbb
out
dec
jge,pt
out
call
unpckhps
sbb
pop
test
pop
sub
jg
repz
ds
call
outsl
jecxz
jp
cmp
pop
dec
sbb
int
in
mov
loopne
sub
jecxz
jp
rcl
fcmovnb
cmp
mov
add
out
fdivl
mov
pop
outsl
cs
lds
jp
xor
mov
sbb
repnz
xor
out
loopne
mov
outsb
test
xor
aam
rcl
sub
mov
enter
add
repz
rorb
roll
dec
mov
pop
mov
mov
pop
add
pop
movsb
mov
ficompl
mov
xor
pop
clc
inc
adcl
inc
js
cmp
or
clc
dec
cld
andb
cmp
jl
push
pop
sub
push
push
push
mov
mov
call
cmp
mov
xlat
adc
mov
outsb
lea
push
jmp
and
lahf
inc
pop
inc
fisttps
pushl
pop
pop
mov
mov
into
ljmp
jge
adc
add
sbb
cmp
call
fistl
add
rclb
pushf
or
mov
or
dec
or
sub
pop
cmp
dec
jge
lcall
sub
pop
icebp
add
push
jae
or
dec
cmp
outsl
sbb
out
or
testb
mov
ja
call
mov
pop
into
pop
cmp
movsb
mov
push
loope
fistl
xlat
mov
sub
add
dec
push
insb
xchg
movsl
test
adc
adc
fstpt
push
pop
inc
call
mov
wrmsr
out
or
shrb
push
or
push
cs
int3
adcl
pop
push
push
sub
jae
mov
xchg
mov
neg
adc
call
xchg
hlt
loopne
test
icebp
dec
adc
data16
imul
xchg
shrb
add
jl
fsubs
das
fsubrl
xor
out
fidivs
loopne
loop
in
outsl
or
mov
sub
mov
jo
out
push
xchg
push
cmc
mov
xor
jnp
adc
jle
in
sub
adc
mov
aas
pop
sbb
enter
enter
fcmovnb
fldt
pop
add
sbb
jnp
add
jg
insl
shl
test
dec
or
decb
int3
call
and
cmp
and
inc
or
or
adc
js
rclb
add
inc
stc
incb
roll
fildl
push
testl
mov
cld
das
fwait
or
mov
cmp
xor
mov
adc
push
movhps
adc
dec
and
dec
adc
mov
shrl
or
and
por
mov
cwtl
dec
push
stos
and
adc
bound
mov
cmp
clc
in
sti
sbb
xrelease
jmp
lahf
sub
cmp
je
dec
dec
cmpw
jne
pop
mov
arpl
cmp
inc
mov
sub
arpl
push
add
pcmpeqb
shll
sbb
push
mov
lcall
testb
cwtl
cmp
inc
cmpl
add
or
fcomps
mov
cmp
fisttpll
mov
dec
or
inc
add
je
cmp
jne
push
iret
enter
js
rol
dec
fidivrs
mov
and
jbe
ja
pushf
push
daa
pop
cmp
arpl
sub
test
jle
aaa
shlb
mov
in
jae
push
or
data16
adc
adc
inc
push
subb
jg
ret
xchg
inc
jmp
and
orb
je
mov
jno
ret
mov
push
mov
push
dec
dec
sbb
push
mov
nop
inc
mov
or
mov
push
les
add
cld
inc
and
jmp
daa
mov
das
idivl
fdivrs
pushl
xchg
adc
or
or
fwait
push
sub
adc
or
sti
aam
mov
subl
lods
std
and
xorb
pop
divb
les
ds
xor
iret
inc
clc
clc
cmp
rcrl
jmp
popf
in
mov
add
pushf
inc
push
mov
cld
imull
cmp
mov
fbstp
mov
or
push
jo
mov
in
mov
sub
mov
stos
pusha
or
sbb
and
xorb
mov
pop
aaa
mov
je
cmp
sbb
pop
call
call
sub
pop
mov
cmpb
dec
inc
xchg
lods
leave
popf
or
mov
mov
adc
or
pop
dec
mov
add
push
ljmp
push
mov
cmp
insl
inc
mov
mov
push
rclb
push
lock
in
mov
mov
or
sbb
je
cs
or
scas
dec
or
mov
mov
mov
mov
pop
cs
inc
mov
mov
mov
mov
jb
imul
add
sub
sub
mov
jo
outsl
jb
mov
lret
gs
and
fcmovu
pop
add
dec
test
insl
xlat
insb
mov
pop
in
push
out
dec
data16
lret
out
call
mov
fucomi
jae
out
out
sub
icebp
bnd
fnstenv
rol
cmp
int
ret
rol
add
xor
enter
insl
xlat
sub
lret
cmp
int3
hlt
cmc
call
mov
mov
movsb
lea
mov
faddp
adc
cmp
scas
xchg
call
insb
pop
loopne
iret
int3
add
add
sub
push
xchg
pop
aaa
ljmp
push
xchg
mov
movsl
pushf
data16
ds
pop
jl
sbb
dec
rcl
xchg
pop
fdivrp
cmp
or
divb
pushf
idiv
jnp
movsb
cmpl
jg
lea
inc
int3
mov
rcl
sub
imul
adc
sti
insb
adc
pop
repnz
shl
and
cmpb
outsb
leave
mov
pushf
je
inc
ret
fistl
test
test
pusha
push
mov
insb
inc
sub
jmp
sbb
js
jnp
mov
dec
cs
test
xchg
add
cli
mov
ret
test
leave
std
or
rclb
movsb
mov
shlb
pop
pop
mov
fsub
hlt
sbb
push
int3
pusha
mov
xor
mov
lock
sub
into
cld
stos
cld
mov
jnp
adc
inc
inc
in
stos
gs
adc
and
adc
add
mov
push
mov
sub
pinsrw
or
add
dec
and
gs
pop
xchg
add
sti
mov
lods
inc
pop
iret
add
adc
mov
jl
add
jmp
inc
or
inc
adc
leave
and
je
adc
mov
sbb
sar
out
inc
cmp
jl
jns
mov
cmp
push
push
adc
fidivs
add
adc
stos
jae
fildll
data16
les
xchg
jmp
pop
sub
cmpl
std
icebp
push
out
gs
cmpsb
mov
pop
adc
sbb
jne
jl
xlat
adc
cmp
inc
insl
and
rclb
add
mov
mov
nop
add
add
or
fldl
mov
ljmp
aas
ss
jne
lods
push
sub
pop
movsb
fsubrs
jae
inc
pop
insb
inc
mov
push
xor
mov
add
lods
dec
enter
adc
adc
or
xor
imul
fsub
out
mov
fisttpll
xor
or
add
adc
das
roll
cmp
xor
ss
pusha
andl
dec
or
call
and
sbb
pushl
cmc
cs
push
jnp
enter
lock
lods
incb
lea
push
movsl
movsb
xchg
cmc
cmp
dec
and
imul
std
cmp
pusha
xchg
adc
adc
sub
movb
push
rcll
or
fs
clc
mov
push
or
in
cmpsl
push
jecxz
popa
jo
inc
movzbl
sbb
div
cmc
addr16
inc
mov
jl
and
clc
add
dec
push
mov
out
mov
add
lods
xor
adc
stos
pushf
dec
jo
leave
mov
shrl
popa
xlat
sub
fldt
hlt
cs
fs
add
pop
faddl
frstor
filds
pop
xchg
add
je
xchg
in
jb
outsb
outsw
sbb
adc
pop
mov
int
roll
and
or
xor
orl
xchg
xchg
xchg
xchg
mov
dec
adc
pop
loop
testb
dec
inc
orl
xchg
enter
xor
pop
nop
sub
pushf
loope
das
adc
call
call
stc
xchg
jnp
push
lods
inc
cmp
sub
mov
shrb
cmp
inc
in
roll
icebp
orb
xor
lret
xor
push
out
add
cmp
and
xor
xor
push
out
sub
xor
xchg
sbb
mov
fsts
push
adc
sub
adc
int3
push
cld
cld
pop
inc
fstps
jno
xchg
xchg
dec
inc
mov
ja
push
xlat
test
orb
cmp
loop
cmpsb
mov
ret
jmp
fwait
jle
cmp
adc
mull
je
ret
pusha
mov
sbb
dec
pushf
addr16
or
and
test
es
rcrb
sbb
jge
fstl
mov
aad
loopne
xor
insl
pop
push
xchg
add
cmp
dec
lcall
lea
fcmovu
sbb
jp
nop
or
cwtl
cmp
fdiv
and
ja
xchg
mov
call
pop
fmull
cld
mov
cmc
cmp
lahf
mov
sbb
pushf
cmp
and
inc
pop
faddl
fsubrs
dec
call
pop
sbb
mov
pop
mov
call
sub
sbb
jae
adc
add
std
sub
jns
sub
xchg
std
xchg
sti
aas
mov
pop
cmp
sti
xchg
sub
aas
wbinvd
stos
push
jp
out
pop
mov
push
jg
mov
shlb
add
sti
pop
fstp
ljmp
in
ss
int
push
sar
xor
fmuls
pop
cmpsl
loopne
movsb
fwait
or
mov
add
dec
pop
out
dec
cld
sub
xchg
cwtl
jb
fdivl
cltd
cmp
jae
es
shll
sahf
adc
cmpsb
imul
dec
shrl
test
xor
xlat
pop
lods
pop
scas
scas
mov
cmpsb
imul
fnstenvs
mov
mov
cmpsb
imul
shlb
insl
cmp
inc
shll
je
das
enter
dec
mov
lret
int
shll
inc
iret
jae
rcl
shll
jne
aam
aad
xlat
aaa
fsubs
fcmovu
jo
imul
and
pop
xchg
es
outsb
xor
and
mov
cmp
pop
ss
push
add
push
inc
inc
test
jae
clc
call
mov
and
sbb
xchg
incb
lcall
in
cmp
push
or
add
fsub
push
addr16
push
xor
int3
dec
jb
pop
gs
xor
push
push
rolb
negb
sti
lds
lea
fxch
fcomp
js
jo
je
sub
outsb
pop
into
leave
mov
cmp
push
inc
mov
inc
iret
repz
push
xchg
or
xchg
xchg
adc
xlat
and
dec
mov
das
push
cwtl
jle
ljmp
call
aad
loope
jo
jo
bound
dec
mov
add
push
push
clc
pop
inc
scas
or
pop
popf
add
mov
or
pop
addr16
pop
iret
jecxz
adc
push
mov
mov
push
push
add
inc
int3
pop
jo
push
push
mov
dec
inc
push
rol
pop
adc
push
sub
les
sub
je
mov
or
pop
sub
mov
dec
gs
jnp
jl
popf
push
adc
mov
in
subl
sbbb
xor
adc
jb
ret
push
push
adcb
minps
jb
mov
jae
sbb
enter
cmp
aas
lds
sbb
and
push
push
mov
int
clc
xchg
sub
lret
mov
lret
rcl
fcomp
in
sbb
mov
xchg
push
add
aad
ficoms
pop
jmp
sbb
xor
jmp
ja
pop
icebp
mov
push
adc
daa
cmp
call
shll
stos
adc
call
xor
xchg
adc
or
mov
jp
jb
mov
test
jae
add
nop
pop
adc
cmp
cltd
out
mov
loopne
mov
idiv
push
jle
in
mov
ret
ret
scas
and
in
xor
add
mov
je
xor
mov
dec
lock
jne
pusha
ss
push
ret
pop
mov
inc
leave
lock
adc
dec
push
mov
hlt
push
xor
inc
push
dec
sub
aad
dec
dec
pop
dec
inc
mov
lret
mov
cs
insb
cmp
mov
gs
xchg
test
insb
jne
cs
pop
xchg
fs
insb
jno
dec
pop
or
dec
outsb
xor
shll
gs
shll
imul
imul
mov
lcall
outsb
movsb
imul
insl
pop
das
roll
aam
mov
insb
fwait
cmpsb
mov
mov
jbe
mov
adc
dec
xchg
xchg
xchg
xchg
xor
insl
rcll
js
lcall
je
inc
mov
fnstsw
cmp
inc
loop
lcall
ds
lcall
mov
jb
jbe
mov
mov
or
outsl
pop
jbe
mov
mov
arpl
mov
mov
xchg
xchg
xchg
scas
or
xchg
xchg
fcoms
push
cmp
loope
sub
cmp
sarb
cld
movsl
icebp
dec
inc
cmpsb
adc
or
xor
add
mov
push
dec
pusha
mull
xor
out
xor
ss
lret
subb
repz
mov
add
adc
test
pop
dec
outsl
inc
mov
xchg
das
clc
sahf
mov
push
adc
jnp
mov
pop
test
aam
dec
add
pop
dec
je
add
and
and
cmp
movsb
or
repz
sbb
or
sbb
ja
push
mov
orl
mov
rclb
sti
shlb
cmp
inc
cmp
push
mov
mov
call
inc
cltd
mov
divb
cmp
xor
jl
sti
aas
sub
add
xor
cli
sbbl
ja
and
les
fbld
mov
push
aam
call
js
adc
or
lock
or
cld
push
cli
jbe
mov
aas
inc
cmp
jb
inc
incl
mov
mov
sbb
pop
push
pusha
ljmp
mov
mov
imul
imul
addl
in
jbe
data16
loopne
jne
enter
into
pop
jo
aam
pop
pop
adc
mov
arpl
push
push
in
jne
lret
mov
jo
in
cld
int
pop
inc
sahf
arpl
mov
pop
jns
ljmp
cmpb
movsb
leave
and
popa
popa
call
jb
mov
imul
sbb
sub
shrl
dec
dec
xlat
aas
dec
js
ljmp
divb
xor
and
push
lea
call
sbb
jb
xor
ret
push
aaa
sbb
stos
jmp
and
loopne
cmpl
sbb
loope
sahf
jns
cmp
jns
sbb
sub
je
mov
test
loopne
shlb
aas
popa
cltd
arpl
xor
outsl
xchg
outsb
cmp
xor
jae
insl
bound
xor
clc
es
and
xor
insl
bound
shlb
je
stos
idivb
andb
cmp
inc
inc
std
std
leave
push
jns
loop
xlat
cltd
int3
inc
in
outsl
int3
sbb
std
dec
shll
ret
and
dec
or
outsb
add
xor
shll
gs
outsl
insb
and
jae
jne
push
cmp
pop
jae
mov
in
sbb
clc
bound
jle
sub
in
movsb
add
sub
cmp
xlat
lds
jnp
fs
xor
add
add
inc
push
fs
std
negb
add
cmp
inc
das
or
aas
pop
es
pop
xchg
xor
int
inc
inc
js
pop
aas
pop
movsl
test
mov
sub
add
loope
push
push
push
je
imul
insb
outsl
or
imul
adc
rcl
pop
ret
rcrb
shr
pop
cmp
in
je
cmpl
inc
jbe
pop
jl
pop
in
sub
cld
add
xchg
xor
std
test
lea
push
mov
mov
imul
inc
popf
mov
push
mov
popa
out
call
enter
pop
pop
xchg
and
fs
sub
pop
and
rolb
inc
lcall
mov
mov
vunpckhps
mov
mov
lods
xadd
adc
xor
sbb
jmp
push
ja
loope
and
and
repz
push
mov
movsl
fwait
and
adc
push
push
fadds
push
jnp
push
test
loope
or
xchg
lods
or
or
jne
inc
mov
ret
rorl
mov
mov
fcoms
cld
sub
enter
cmc
cld
mov
test
push
and
pop
sbb
xlat
add
fidivs
adc
mov
gs
es
call
sub
adc
stos
clc
scas
rcll
fmull
jg
mov
sbb
std
cwtl
inc
cwtl
and
push
call
lret
mov
lret
je
outsl
outsb
cmp
sub
gs
imul
mov
outsb
gs
lods
shll
fistpl
mov
mov
cmpsb
imul
insl
xlat
rorl
jo
ret
lds
xlat
jne
mov
lret
xchg
gs
xchg
arpl
outsb
cmp
fs
jb
xchg
xchg
outsl
jns
cmp
adc
out
xor
and
data16
insl
xorb
sub
std
and
dec
mov
adc
dec
pop
mov
dec
or
jmp
push
shlb
pop
enter
jmp
cwtl
mov
cwtl
call
wbinvd
cmp
nop
aad
movsb
ret
add
adc
or
repnz
sbb
adc
sub
es
adc
aaa
add
xor
call
push
int3
inc
js
sub
cwtl
jb
inc
aaa
and
pop
jne
push
and
es
les
add
pop
dec
xchg
je
outsb
cmp
loope
fbstp
outsl
or
stos
jne
fisubrl
sbb
sbb
int
cs
adc
xor
lods
pusha
mov
inc
in
nop
in
sub
or
popa
cwtl
sbb
imul
lods
imul
or
popa
jb
je
rorl
arpl
in
nop
lret
mov
jae
je
and
jns
out
sbb
pop
dec
in
mov
xor
jb
nop
insl
in
outsl
pop
xor
and
mov
in
jmp
and
push
xor
sbb
loopne
adc
pop
scas
push
or
lcall
push
ss
je
insl
call
adc
fs
add
cmp
je
mov
add
mov
mov
push
and
call
mov
push
or
push
lock
jo
scas
xorl
push
mov
loop
pusha
or
out
insl
fistl
adc
sarb
jl,pn
add
jmp
call
add
fcoms
push
movl
cli
cmpsl
jge
mov
lock
mov
add
add
push
jbe
push
mov
into
and
jmp
pop
ja
mov
sbb
shll
pop
or
mov
jae
shll
nop
cmpsb
jmp
outsb
insb
bound
outsb
arpl
dec
xchg
push
in
lret
mov
xor
push
push
outsl
data16
mov
je
popa
pop
shll
xor
dec
arpl
dec
shll
pop
push
xor
shll
outsb
mov
outsl
ja
xor
shll
push
push
dec
insb
insb
dec
outsl
push
dec
shll
popa
nop
insl
pop
dec
push
sbb
xor
inc
popa
arpl
mov
and
aas
adc
rorb
rcr
fistpll
mov
and
sub
mov
mov
rol
and
adc
js
dec
fs
loopne
and
punpckhwd
subl
or
lods
lahf
insb
aam
ret
out
xchg
mov
or
adc
mov
adc
in
call
addl
pop
out
lods
sub
mov
mov
test
lods
xchg
push
faddl
jmp
ficoms
xor
movsb
fcoml
sub
movl
add
loope
xchg
xchg
xchg
loop
in
xchg
xchg
xchg
xchg
out
call
sub
leave
gs
dec
stos
pop
pop
sbb
aad
ret
xchg
ss
pop
push
outsb
xchg
insl
pop
ss
sub
gs
jne
jne
and
and
jno
fucomp
xor
xor
iret
in
in
out
insl
out
aaa
jp
lock
sbb
shrb
int
into
je
sahf
sub
iret
outsl
rcl
cld
pop
sar
in
xchg
and
cld
aam
aad
mov
cld
rcl
cld
cmp
pop
lcall
popa
dec
cmp
std
gs
aad
movsl
pop
sbb
push
xlat
push
fdivs
in
test
sbb
std
jae
pop
sbb
std
dec
dec
jo
mov
enter
ret
sti
adc
mov
rcrb
out
inc
add
stc
mov
or
int3
cld
outsb
mov
hlt
rcrl
push
movsb
inc
and
inc
shlb
push
gs
pop
xor
push
es
push
pop
dec
shll
dec
inc
outsl
shlb
shlb
insb
popa
fs
sbb
mov
cwtl
xor
insb
mov
adc
dec
std
in
jp
rorb
lock
daa
insb
mov
in
in
cmc
add
jg
sbb
mov
fsubs
adc
aas
rolb
adc
jl
fdivs
xor
lods
adc
mov
adc
push
sub
ds
mov
sub
and
lcall
push
les
sbb
mov
add
mov
repnz
movsl
int3
cs
pop
xor
data16
pop
test
stc
enter
xchg
je
mov
lret
mov
cmp
das
jo
mov
lret
popa
je
push
mov
outsb
cs
dec
shll
outsl
insl
das
push
or
cmp
fs
insb
icebp
push
jmp
out
outsb
lcall
insb
imul
pop
gs
ja
lcall
bswap
or
pop
mov
add
sti
mov
and
sbbb
inc
int3
pop
push
inc
lock
cmp
pop
xchg
ljmp
js
scas
cmp
dec
inc
xchg
pusha
push
mov
push
inc
cltd
pop
cs
cmp
pop
cmp
movsl
movsb
xchg
add
fs
aam
int
inc
leave
les
inc
or
fldenv
xlat
push
or
sti
cmp
push
sbbl
xchg
je
test
push
jg
sahf
mov
dec
sub
or
sbb
clc
push
sbb
mov
fimuls
sbb
cld
push
scas
or
shll
add
add
cmp
inc
push
andb
inc
cs
gs
push
mov
rcrl
or
and
les
sub
cmp
adc
sbb
out
stos
jb
std
lock
cs
pop
addb
ja
mov
push
call
sub
push
push
xor
cmp
adc
fs
call
std
testb
pop
mov
pop
mov
int3
pop
nop
cmpl
inc
push
jbe
ds
sti
jne
add
sarl
idivb
leave
out
push
jb
mov
shll
xor
xchg
push
sbb
pop
incl
ss
sbbb
lock
pop
push
push
sbb
push
mov
je
push
call
mov
dec
jle
std
mov
pop
push
call
cs
xchg
std
mov
fisubl
jl
cmp
jg
push
frstor
xor
xlat
bound
add
test
mov
lea
aas
add
push
push
and
adc
in
cmp
or
dec
xlat
outsb
xor
add
sub
es
cmp
add
pop
mov
adc
xor
push
mov
add
and
mov
mov
push
add
adc
call
mov
mov
rcr
inc
ja
xor
jmp
imul
add
adc
mov
enter
or
dec
call
push
mulb
sbb
cmpsl
lock
icebp
and
xor
pop
fs
push
mov
pop
sarl
push
jle
and
add
jmp
test
into
sub
pop
lcall
rorb
int3
fimull
sbb
mov
xlat
or
push
jne
cmp
lret
pop
fiadds
jne
add
add
add
movsl
loope
mov
scas
inc
jne
daa
mov
xchg
add
or
pop
imul
dec
jg
push
jl
adc
sbb
jb
mov
in
ljmp
xchg
dec
mov
cwtl
mov
lahf
xchg
sbb
ljmp
ljmp
add
xchg
int
add
mov
adc
fs
notl
jns
sbb
bound
pop
movsb
or
bound
aad
push
push
movsb
mov
add
sub
and
fstps
out
mov
out
mov
in
idivl
sub
and
popa
lcall
cmp
adc
sahf
lret
leave
cmp
fsubl
ss
adc
cmovbe
or
sub
insb
cmp
shll
push
and
mov
add
mov
jp
push
inc
and
mov
mov
or
stos
js
test
call
in
mov
mov
adc
adc
leave
not
sbb
sbb
or
mov
fldpi
fs
dec
mov
cmp
push
cwtl
pushf
insb
and
lock
add
dec
inc
cs
cwtl
mov
sbb
mov
nop
test
sbb
xchg
filds
dec
xchg
mov
inc
xorb
pusha
lea
add
jo
push
pop
add
gs
pop
std
in
add
test
sub
pop
mov
dec
inc
inc
jno
push
push
fsubrs
leave
dec
sbb
dec
sti
cld
dec
lcall
pop
inc
push
imul
xchg
lcall
sbb
sbb
jae
jae
mov
mov
mov
imul
fsubs
sbb
das
or
xor
ljmp
and
ret
sbb
mov
add
push
loopne
call
lods
leave
inc
or
cmp
pop
adc
les
add
mov
push
mov
test
popa
inc
sti
and
outsb
scas
dec
cmc
dec
scas
sti
lahf
or
xlat
inc
adc
sub
pavgb
push
stos
test
pop
rcr
push
and
pushf
mov
iret
inc
mov
movsb
bound
cmc
sub
dec
lock
or
and
addb
xor
outsl
js
sub
je
push
push
lret
out
adc
push
push
adc
stos
leave
jg
je
pop
sub
xor
movsb
addr16
xchg
add
mov
mov
insb
insl
add
mov
sub
fimull
jmp
call
adcb
pop
sub
dec
fsubrl
lret
shll
mov
sbb
cmp
and
jne
pop
add
sbb
sbb
mov
aaa
push
push
call
xchg
loopne
pop
and
mov
cmpsl
fildl
movl
push
jle
sub
je
mov
add
out
int3
mov
fisttps
add
inc
iret
test
cmp
int3
adc
aas
fistpll
fucomi
negl
aas
adc
cmp
call
jb
lret
xlat
js
add
filds
or
mov
call
add
hlt
pop
pop
add
add
call
test
lret
dec
dec
shrb
cli
aaa
add
sub
lock
mov
dec
das
add
xorl
xchg
dec
sub
loop
jp
inc
fsubl
inc
enter
push
pop
addb
les
dec
inc
xor
push
lods
dec
inc
dec
es
add
call
sub
jl
adc
sbb
aas
in
mov
xor
das
mov
cmp
inc
inc
mov
orl
add
fmuls
loope
clc
mov
xor
aaa
xchg
adc
call
or
hlt
inc
pop
jle
jp
adc
mov
fildll
loop
bound
add
inc
cmp
jl
jmp
outsb
jo
test
add
or
and
pop
cmp
sub
out
mov
push
daa
mov
lret
call
push
sahf
cli
pop
mov
pusha
adc
push
cwtl
mov
or
icebp
add
mov
sbb
sbb
enter
mov
mov
cld
mov
dec
mov
jne
es
pushl
sub
push
clc
mov
mov
dec
call
je
push
lock
push
lds
ret
fnstenv
pop
push
mov
xchg
sbb
and
adc
std
pop
mov
sbb
test
idivl
push
cli
push
shrb
inc
sub
cmpl
in
dec
mov
cmp
orb
xchg
pop
add
jne
jecxz
xor
mov
xor
push
xor
pop
je
sub
aad
fistl
repnz
xchg
mov
ds
repnz
inc
push
imul
test
imul
pop
add
ss
mov
push
or
inc
inc
adc
add
cmp
ffreep
push
imul
mov
ret
push
jge
push
sub
jae
cmpl
sbb
xor
mov
call
fimuls
push
clc
jl
sbb
jns
adc
or
sub
mov
pop
push
int
fwait
adc
lcall
add
ja
xor
sbb
sbb
arpl
lods
fcoms
push
ljmp
shlb
scas
lret
push
push
sbb
push
stos
jp
dec
int
rorl
in
dec
ds
hlt
push
jmp
mov
sbb
push
ja
mov
out
jns
enter
xor
enter
out
in
and
sbb
int
test
add
or
enter
mov
enter
xor
inc
repnz
daa
dec
or
dec
and
daa
or
test
inc
push
stos
adcb
inc
out
orb
push
or
or
pop
add
aam
add
cmp
dec
movb
add
jne
int
or
sub
sub
leave
sub
lods
call
mov
mov
lret
cwtl
sbb
hlt
lret
mov
and
pop
outsw
adc
mov
outsb
je
pop
mov
xchg
call
repz
mov
jecxz
and
sub
or
xor
ret
push
mov
lds
lahf
dec
rcll
repz
sar
mov
xor
mov
add
xor
mov
push
aaa
xor
fstl
jl
lcall
push
or
or
movsb
cmp
sub
xchg
push
fsubrl
mov
pop
add
sbb
inc
jns
push
or
call
imul
sub
enter
dec
mov
ret
mov
inc
xor
bound
adc
pop
pop
add
add
adc
nop
add
test
cmpl
add
mov
or
fcompl
gs
outsl
insb
rolb
outsb
mov
mov
jmp
dec
shll
inc
lods
dec
dec
jnp
lret
mov
dec
inc
push
sub
call
bound
jae
mov
fsubl
int
mov
in
adc
inc
outsb
sbb
std
daa
clc
test
loope
add
inc
cmc
adc
mov
movsl
mov
lea
push
in
mov
dec
mov
jns
pop
add
or
or
dec
lret
faddl
and
cwtl
xor
push
repnz
iret
test
mov
mov
insb
xor
adc
mov
call
add
cmp
push
std
push
adc
xchg
or
push
mov
movsl
aam
aad
push
adc
cli
gs
jb
mov
jo
gs
pusha
sub
in
ds
xadd
decb
ret
out
stc
jl
inc
inc
inc
incb
sahf
iret
enter
lret
iret
inc
inc
int3
int
into
mov
xor
add
cmp
cmp
and
repnz
mov
std
mov
and
pop
push
and
test
adc
icebp
mov
out
sbb
imulb
inc
add
stos
insb
std
stos
std
add
dec
aaa
lods
sbb
scas
enter
sub
sbb
sbb
mov
mov
fxch
enter
mov
mov
mov
xor
mov
je
push
shll
mov
andl
aaa
mov
dec
aas
out
bound
shl
push
sbb
fildll
mov
shll
nop
xchg
mov
adc
or
pop
xor
xor
and
lods
xor
enter
test
mov
xchg
outsl
cwtl
adc
setb
pop
fs
stc
int
pop
xor
xor
push
fs
dec
inc
inc
ja
fs
sub
pop
mov
iret
out
xor
cwtl
roll
fldcw
lea
adc
xor
and
sub
test
gs
jbe
pushf
stos
mov
js
inc
xchg
int
adc
and
jb
mov
fs
push
and
cmp
lock
or
xchg
or
fs
je
jp
lock
inc
orb
add
add
inc
jb
arpl
push
sub
sub
cmp
add
dec
gs
jbe
add
int3
push
movhps
int3
sub
push
sbb
adc
and
outsl
aas
and
add
mov
pop
or
sub
flds
sbb
adc
mov
je,pt
mov
mov
mov
jg
pop
add
sub
mov
mov
out
es
imul
mov
dec
sbb
jns
add
or
andb
and
pop
test
jo
cmp
pop
addl
icebp
addl
aaa
jae
arpl
adcb
or
add
outsl
imul
mov
add
jnp
or
sub
adcb
mov
jmp
add
add
jns
adc
into
movsl
mov
add
and
adc
jne
push
pop
aad
in
inc
jo
insl
mov
dec
add
cwtl
mov
pushf
fwait
imul
push
sbbl
arpl
xchg
test
push
add
insl
insl
pop
dec
adc
es
inc
push
pop
ret
push
cli
fildl
xchg
iret
das
jae
rclb
or
dec
loope
pop
orl
push
jge
push
dec
adc
pop
pusha
sub
xchg
insb
popa
fsubrl
mov
push
adcl
or
fs
push
sub
xchg
insb
dec
lods
or
add
jbe
hlt
mov
dec
and
out
aad
xor
xor
xorl
inc
or
mov
inc
jmp
inc
pop
sbb
add
fsubs
fwait
push
arpl
ds
xlat
pop
lods
jo
push
sbb
insl
aaa
or
dec
fldcw
sbb
lods
in
mov
and
lea
dec
add
fstpt
push
sti
pop
add
testb
jnp
out
imul
jb
and
jnp
and
btr
sbbl
adc
sub
dec
in
or
pop
mov
fs
mov
pop
adc
mov
add
add
sbb
adc
rcr
jo
fistpl
fwait
cmp
inc
popa
mov
insb
in
fbld
arpl
jecxz
push
out
adc
jnp
inc
sub
fbstp
adc
jns
imul
push
and
xchg
push
stos
in
inc
cmp
mov
aam
xchg
adc
pop
loope
jbe
inc
lock
arpl
outsl
push
and
rcr
testb
loope
jbe
cwtl
addb
jns
je
shrl
and
push
sbbl
cmp
fstpt
lret
test
xchg
dec
mov
sbb
adc
imul
mov
fs
insl
inc
inc
dec
out
and
pop
pushf
fildl
add
push
pusha
imul
push
inc
xorl
and
inc
fcoml
bound
rorb
sub
dec
xchg
adc
inc
dec
jo
xor
xchg
repz
sbb
inc
cmp
pop
out
and
dec
cld
fstpt
jb
add
ret
sbb
mov
nopl
mov
pop
mov
or
ljmp
into
sbb
inc
xor
lret
mov
jne
mov
pop
dec
lret
and
popa
add
mov
cmp
negb
ss
cmp
inc
clc
mov
add
pop
inc
mov
popa
mov
add
aam
in
cmp
mov
adc
cmp
fs
push
aas
test
mov
xchg
pop
mov
aas
aad
jmp
inc
das
inc
lock
xor
xor
xor
xor
adc
pushl
push
xor
xor
xor
xor
xor
decl
push
pop
xor
xor
xor
data16
cwtl
xor
xor
xor
xor
cmp
push
xor
jge
and
xor
xor
xor
xor
xor
scas
xor
clc
xor
pushl
data16
xorb
ss
int3
fidivl
jmp
aaa
push
cld
inc
aas
xchg
xchg
aaa
cmpsl
cmp
pushl
int
fdivl
ljmp
cmp
fdivrl
std
cmp
cmp
cmp
cmp
cmp
cmp
jo
cmpb
cmp
cmp
cmp
jnp
mov
xchg
cmp
decl
xchg
cmp
cmp
mov
sarl
ds
ds
aas
inc
aas
pop
add
adc
xchg
push
popl
test
insb
cmp
cmp
cmp
sbb
daa
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cltd
cmp
int3
cmp
xor
dec
ds
ds
ds
ds
sbb
mov
aas
and
ret
push
pusha
push
or
xor
xor
mov
jg
xor
xor
inc
xor
mov
or
adc
sub
fistpll
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
and
xor
sbb
ss
ss
mov
ljmp
xchg
ss
ss
loop
repz
aaa
adc
push
aaa
sub
jg
cmp
aaa
inc
aaa
pop
aaa
popa
aaa
insw
lods
aaa
mov
aad
in
xchg
das
lock
sti
sbb
aas
cmp
pop
cmp
jle
test
lcall
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
inc
cmp
nop
cmp
cmp
das
add
ja
lds
sbb
adc
jmp
dec
cmp
jle
mov
cmp
cmp
fdivrp
decl
push
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
addr16
fldcw
ds
sub
cmp
dec
ds
dec
ljmp
xchg
jo
xor
xor
jns
xor
xor
xor
bound
inc
mov
ljmp
xchg
xor
xor
xor
rorb
xor
xor
xor
xor
xchg
sbb
xor
adc
call
push
xor
xor
xor
decl
jbe
xchg
cwtl
ss
into
ss
add
sbb
aaa
cmpsb
aaa
mov
mov
aaa
shll
aaa
fnstenv
loopne
hlt
aaa
aaa
add
push
cmp
cmp
jno
out
in
out
cmp
cmp
cmp
cmp
out
clc
call
pop
cmp
ja
lds
lret
inc
xchg
cmp
cmp
mov
cmp
mov
out
test
mov
cmp
cmp
push
lea
xchg
ds
mov
les
mov
ds
jmp
and
xor
xor
or
lcall
xor
xor
xor
xor
xor
mov
mov
sbb
and
repz
dec
xor
aaa
insl
lock
xor
fdivs
shll
xor
xor
xor
xor
sbb
adc
or
xor
adc
cli
push
xor
xor
aas
xor
xor
xor
and
jg
jne
cmpsb
ss
ss
sarb
cmp
mov
cmp
cmp
call
cmp
cmp
cmp
cmp
cmp
cmp
cmp
inc
cmp
shl
cmp
pop
cmp
cmp
cmp
cmp
cmp
jecxz
xor
cmp
cmp
cmp
aad
jecxz
out
cmp
cmp
cmp
xchg
in
stc
scas
cmp
lret
lods
hlt
xchg
add
or
out
sbb
ds
sbb
ds
ds
xchg
std
test
fdivrs
filds
ds
add
sbb
push
aas
sub
aas
jno
push
cmp
int
nop
sbb
mov
int3
xor
xor
xor
xor
xor
movsl
xor
out
clc
movsl
pop
adc
xor
xor
dec
and
xor
ljmp
jae
js
jge
xorb
xor
movsl
xor
out
in
xor
xor
xor
xor
jge
cmp
inc
xor
lcall
xor
mov
pushf
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
jp
andb
xor
cmp
xor
push
fdivr
xor
in
lock
aaa
sub
cmpl
add
int
shll
xor
xor
xor
xor
mov
xor
lret
xor
dec
ss
test
mov
lcall
mov
iret
ss
call
mov
aaa
jl
lahf
cmp
cmp
push
lock
cmp
cmp
cmp
cmp
cmp
out
cmp
push
idivb
cmp
add
movsl
sub
xlat
jg
loop,pt
jmp
push
aas
jg
mov
xor
or
movsb
pop
inc
jle
test
nop
xor
jg
xor
push
pop
xor
and
sbb
push
xor
mov
out
xor
xor
xor
xor
xor
xor
fstpl
arpl
xor
xor
xor
sarb
lock
ss
ss
jmp
add
xor
aaa
mov
aaa
sar
add
aaa
shlb
fdivs
adc
sbb
shrb
add
cmp
xchg
sbb
cmp
push
cmp
add
repz
std
xchg
push
sbb
adc
arpl
jl
mov
nop
mov
mov
je
jl
fnstsw
mov
jle
adc
xchg
out
incl
add
or
enter
or
sub
xor
pop
mov
sub
lock
mov
add
enter
lret
aaa
pop
cmp
push
lock
cmpb
push
inc
jl
insb
pop
push
jb
jb
mov
inc
and
in
sbb
enter
ja
daa
add
sub
push
pop
dec
shrl
xor
mov
popf
pop
mov
xor
lcall
mov
imul
xor
cmpsb
imul
mov
lcall
pop
imul
add
ja
shlb
push
dec
dec
inc
and
subl
pop
movsl
push
or
or
add
xor
pusha
and
outsl
jne
call
pop
xor
pop
push
scas
test
sbb
dec
pop
push
cmp
pop
nop
add
inc
push
dec
dec
adc
mov
jo
and
inc
and
hlt
push
addb
pop
inc
push
add
pop
mov
fcmovu
sbb
or
and
test
inc
sub
xchg
rclb
xor
cmp
push
mov
int
lcall
or
es
loope
dec
sub
push
testl
adc
les
clc
aam
arpl
loopne
jle
cmp
jnp
push
fsubrl
xor
movsb
adc
add
push
data16
inc
cwtl
in
fs
test
mov
dec
pop
jnp
push
mov
out
pop
in
jne
sbb
and
loopne
stos
add
jnp
xchg
sub
pop
push
arpl
adc
aas
divb
add
xchg
fdiv
and
in
adc
or
mov
mov
add
mov
decb
jno
rcrl
xor
pop
es
ds
sbb
lret
pop
and
or
decl
les
adc
pusha
sbb
sbb
hlt
imul
sub
fs
xchg
and
insl
insl
pushf
xor
sub
je
sub
mov
mov
inc
arpl
mov
cmp
sub
pop
leave
xchg
mov
pop
xor
loopne
pop
push
or
insl
insl
fs
xchg
xchg
inc
je
dec
inc
imul
bound
movsb
gs
bound
or
adc
pop
pusha
clc
dec
adc
xchg
dec
push
mov
bound
jle
cmp
cmp
inc
sub
or
aaa
dec
call
inc
fs
cwtl
sbb
addr16
aaa
cmp
jg
add
cmp
addr16
mov
jmp
and
jmp
and
js
jnp
and
xor
cmp
dec
sbb
mov
sbb
or
sbb
in
inc
xor
iret
xor
xor
push
adc
cli
addr16
cli
push
xor
push
pop
push
add
mov
mov
push
push
xor
test
push
out
mov
inc
inc
push
inc
nop
lret
jo
inc
test
push
mov
adc
add
push
iret
cli
dec
lcall
lahf
in
sub
fisubs
cmovge
add
aas
mov
dec
xor
cmp
inc
and
mov
and
aas
adc
inc
jmp
cmp
dec
inc
stc
push
jno
and
jl
sub
jno
or
leave
sbbl
test
inc
mov
push
and
push
adc
mov
cmp
and
pusha
xchg
xchg
pop
leave
out
add
lock
and
dec
push
and
cmp
add
push
push
pop
add
jno
in
and
push
pop
mov
enter
mov
mov
mov
mov
int3
enter
mov
icebp
mov
mov
outsb
jae
xor
xor
outsl
outsl
inc
rolb
mov
lea
ss
pop
add
mov
adc
enter
or
push
test
rcr
stos
lods
cld
jo
inc
loopne
fnsave
scas
arpl
push
fwait
leavew
xor
aad
xlat
insb
lret
mov
adc
jb
daa
sbb
js
nop
sub
xor
das
pop
vunpckhps
sub
mov
add
and
jmp
cltd
outsl
jnp
and
fmull
push
or
lcall
ret
ret
sub
pop
fs
popa
lret
mov
inc
push
outsl
outsb
outsb
es
mov
gs
cmp
call
insb
fs
xchg
gs
jne
arpl
shll
mov
shlb
jno
jmp
imul
mov
gs
gs
mov
dec
cmp
insb
outsl
jb
mov
adc
pop
mov
mov
in
mov
cs
hlt
xchg
sub
mov
adc
ret
setl
pop
add
xor
jae
fsubr
ror
and
jp
pop
sub
or
jp
xchg
jmp
inc
frstor
push
pop
lds
sbb
sbb
call
and
push
hlt
mov
adc
outsl
add
pop
repz
or
iret
or
sbb
jbe
or
push
and
adcb
mov
aam
add
fcomp
sub
pop
fmull
loopne
out
mov
push
bound
ficompl
call
and
mov
push
push
pop
add
fimuls
leave
push
or
or
adc
add
dec
dec
int
push
and
push
imul
adc
mov
scas
adc
sbb
movsb
add
add
cmp
rcr
and
in
leave
pop
mov
arpl
in
pushf
sti
movl
or
mov
or
jo
test
mov
call
pop
pop
add
rorb
nop
add
nop
xchg
add
sbb
adc
xchg
or
push
dec
mov
xchg
cmp
add
sub
nopl
and
cmp
and
pop
push
sbb
sbb
gs
adc
das
sti
add
jae
pop
cmp
or
adc
loopne
das
sub
adc
pop
mov
cs
mov
shll
fdivrl
leave
jnp
inc
sub
rorl
adc
sub
notl
sub
mov
adc
lds
mov
les
mov
or
add
rcrb
sbb
mov
or
adc
les
mov
pop
adc
add
pop
in
adc
adc
out
lock
sub
jae
push
mov
push
outsb
jb
and
icebp
dec
les
js
adc
leave
cmpsb
xor
stos
xor
xor
jb
mov
imul
xor
incl
dec
insl
insl
dec
jae
int3
sbb
adc
xchg
std
cmc
inc
xor
mov
and
negl
sbbl
add
and
xchg
orl
xor
jns
imul
leave
cmp
xorl
es
inc
jnp
cmp
leave
fdiv
xor
or
cmpsb
sub
cmp
enter
fwait
cmpsb
imul
shll
xor
jge
add
leave
add
and
repnz
mov
arpl
jno
adc
cmp
add
das
xchg
mov
mov
xor
icebp
rolb
fadds
repz
dec
rcll
add
js
jno
jno
add
push
adc
inc
jbe
mov
mov
faddp
popa
ljmp
jne
inc
testb
repz
sub
adcb
or
mov
add
imul
sub
rorb
jo
xchg
popa
mov
pop
adc
imul
jo
sbb
cmp
aam
push
not
mov
adc
xchg
cltd
adc
add
imul
dec
outsl
sbb
flds
pop
inc
dec
add
ret
pop
sbb
xchg
pop
xchg
nop
out
xor
push
jb
mov
add
push
icebp
rcll
lods
push
stos
pop
add
xor
or
dec
psubusw
out
dec
add
add
imul
mov
aas
stos
add
enter
pop
or
add
pop
adc
cmp
pushf
mov
or
fucomp
and
mov
xlat
jne
jecxz
inc
and
xor
pop
movsb
jmp
jae
and
popa
jns
repz
movsl
popa
and
add
xlat
lea
or
jo
imul
ss
push
mov
cld
push
adc
pop
lds
jb
cmp
mov
pop
xor
xor
add
sbbb
mov
popf
xchg
pop
dec
or
ds
popf
addr16
jne
add
dec
adc
xchg
pop
xor
lods
jnp
imul
adc
inc
push
popa
xor
out
pop
fs
or
fwait
or
dec
imul
push
daa
jbe
push
ljmp
fs
and
adc
jne
je
xchg
adc
and
xor
ja
imul
and
push
cwtl
jmp
inc
rorb
add
incl
stos
push
aaa
shlb
xor
xor
adc
or
cmc
xor
push
xchg
test
xor
xor
xor
xor
xor
xor
xor
xor
xor
xorb
adc
and
pop
imul
ss
lds
adc
cmp
inc
fwait
je
mov
scas
mov
mov
call
inc
add
xlat
incl
cli
cmp
les
into
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
shrl
cmp
cmp
cmp
cmp
dec
cmp
pop
pop
call
or
cmp
push
lcall
cmpsb
lods
ds
xor
movsl
stos
subl
ret
or
mov
addb
push
adc
sbb
call
push
adc
xor
fistpl
or
inc
sub
or
lods
orb
push
add
push
mov
sbb
mov
add
push
or
loopne
sbb
push
rolb
add
jbe
mov
fadds
or
jl
add
shrb
add
insb
fmuls
rorb
xchg
flds
pusha
enter
mov
sbb
popf
rorl
inc
stos
sub
call
cmp
stos
dec
inc
int
jmp
jne
xlat
add
mov
sbb
pop
insb
dec
add
int
and
inc
mov
or
xchg
adc
push
cmp
mov
cmp
iret
push
movsb
sbb
push
repnz
add
in
mov
and
shl
outsb
add
push
mov
add
nop
mov
sahf
xor
mov
addr16
inc
xchg
in
mov
jne
stos
add
add
add
add
add
dec
add
add
add
add
inc
add
call
int
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
