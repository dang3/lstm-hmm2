sbbl
mov
iret
incl
xchg
gs
imul
xchg
sbb
in
fcmovnbe
lds
stos
fwait
xorl
lret
mov
pop
dec
aaa
sub
cltd
les
xchg
gs
add
mov
incl
jmp
add
mov
lea
rcrl
js
js
xchg
repnz
stos
mov
out
adc
add
lcall
lea
cwtl
lcall
lcall
mov
imul
xchg
fwait
call
cwtl
xchg
xchg
sahf
xchg
fwait
call
inc
test
cwtl
popf
mov
iret
lret
rcrl
cmpsl
lcall
cli
adc
lock
lock
imul
mov
xchg
clc
test
popf
lea
mov
in
add
loope
iret
lret
je
jle
xchg
idivl
inc
lret
fwait
lcall
je
mov
and
add
test
por
scas
lods
cmp
mov
sbb
sahf
aaa
mov
hlt
xor
xchg
cld
xor
xor
xchg
xor
xor
das
hlt
cs
cld
sub
adc
and
mov
les
call
and
and
aam
enter
scas
cld
push
mov
sbb
sbb
and
push
mov
fcoms
mov
enter
or
mov
or
or
pop
or
cld
add
add
xchg
push
xchg
dec
subb
pop
cmp
subl
aaa
out
paddusw
or
add
sub
pop
les
mov
test
je
adc
je
idivl
mov
int3
aas
and
dec
add
jb
addr16
cmp
xlat
stos
scas
test
ljmp
aas
mov
in
ljmp
inc
inc
lret
cmpsb
mov
icebp
repz
out
pop
fsubl
xchg
and
add
xor
cmp
repnz
movsb
ss
jl
jecxz
rorb
insb
ljmp
test
inc
bound
out
repz
notl
je
jbe
stc
pop
cli
adc
ficomps
test
cmp
xchg
stc
orl
xchg
mov
mov
loopne
dec
mov
inc
xor
add
int3
and
or
loop
out
fbld
pop
in
loope
les
pushf
xor
xchg
cld
xchg
movsb
mov
jl
dec
mov
test
jmp
mov
movsb
adc
fdivrs
mov
jge
scas
jg
ret
mov
movsb
pop
das
dec
mov
push
jmp
pushf
mov
repz
dec
dec
lret
xor
in
pop
scas
jae
ds
jae
scas
sub
iret
in
xor
xchg
push
shl
mov
call
bnd
repz
xchg
nop
jp
cmpsl
mov
testl
loopne
or
pop
in
inc
repz
dec
cmp
dec
cmpsl
sti
movsl
iret
and
jmp
jecxz
inc
fwait
lock
pop
mov
fistps
xchg
mov
jl
ss
cmp
mov
out
mov
hlt
negl
jnp
dec
pushl
jmp
pusha
imul
ret
dec
push
inc
and
dec
and
repz
push
jp
repnz
out
mov
in
stos
jmp
outsb
out
stc
jne
sub
mov
mov
cmp
loopne
sbb
cmp
stos
dec
adcl
std
ljmp
iret
jmp
lock
ljmp
loopne
std
fildl
jb
push
stos
in
xchg
add
mov
inc
sub
mov
mov
movsl
in
mov
aad
xlat
inc
int3
fildl
dec
test
dec
inc
aam
pop
or
outsl
ljmp
push
pop
and
cmp
ds
mov
scas
and
mov
lods
cmp
call
test
aam
fildll
sub
stos
fsubs
arpl
sbb
shr
pop
dec
shrb
push
adc
das
test
inc
mov
mov
sti
aas
into
add
and
jb
jae
mov
mov
or
lods
test
jb
dec
dec
sti
jg
pop
out
aas
inc
out
adc
jb
push
repnz
cltd
push
inc
xor
lods
push
xchg
xor
inc
xchg
or
jne
cld
cmp
adc
lret
cmp
jl
dec
mov
andl
test
sub
cmp
and
int
xor
cmpsl
pop
jmp
mov
pop
iret
test
adc
cmpsl
rorl
aad
jnp
das
lds
call
jne
cmpsl
mov
or
xchg
mov
test
cmpsb
push
push
add
leave
mov
cmpsb
repz
cmp
test
and
add
push
and
fimuls
pop
cmpsb
gs
iret
cld
mov
cmpsb
gs
lcall
cmpsb
inc
idiv
mov
xchg
cmc
mov
hlt
inc
hlt
stc
xor
jl
xor
dec
cli
hlt
adc
jb
scas
lods
pushl
cld
ljmp
ss
imul
pop
sbb
scas
or
repz
ljmp
hlt
cmp
mov
shll
sub
stc
adc
jb
stc
xor
xor
shll
pushf
xor
inc
xchg
ja
cs
lods
repnz
dec
repnz
inc
cli
add
mov
inc
addr16
push
xchg
sub
jb
ljmp
test
cld
add
mov
ds
aas
cli
in
inc
lret
cmp
inc
jnp
lea
pushf
cmp
lock
add
add
xor
popf
xor
fmull
pop
add
mov
lret
int3
sub
sub
and
push
sub
xchg
repnz
add
lea
addr16
push
ljmp
cltd
add
push
or
fsubrl
or
outsl
xlat
das
xchg
inc
push
xchg
inc
stc
sub
inc
xor
ss
xchg
dec
test
add
fcoml
hlt
leave
imul
dec
or
xchg
mov
nop
ror
mov
xchg
mov
dec
insl
iret
rolb
inc
stos
mov
xchg
hlt
xchg
push
out
fwait
pushf
or
hlt
dec
ds
leave
popf
rorb
lret
cli
je
add
xchg
arpl
bnd
mov
inc
sarl
add
in
mov
cmp
inc
lahf
push
cmp
xchg
push
jl
aaa
xchg
jae
dec
jmp
stc
push
mov
nop
int3
aaa
cmp
lcall
or
popf
shl
xchg
cld
ret
mov
pop
loopne
cltd
mov
ss
lahf
stc
mov
popf
inc
add
jb
scas
stc
pop
inc
scas
pushf
inc
pop
mov
pop
push
ret
out
mov
lods
fadd
fwait
scas
mov
sbbl
mov
loopne
sbb
push
ds
mov
roll
mov
adc
movhps
ret
inc
jle
in
out
push
or
xchg
pop
int3
cmp
push
out
jmp
inc
add
fdivrp
ret
sub
mov
jmp
je
loopne
hlt
xor
fidivrl
fidivl
xor
hlt
lock
xchg
outsl
out
imul
xorb
jmp
push
hlt
sar
int
and
cmpsl
call
je
repz
je
mov
push
cmp
arpl
fisttps
in
jnp
mov
scas
jp
aam
dec
fwait
ds
mov
mov
xchg
jge
stos
aad
mov
mov
fildll
scas
mov
mov
jmp
call
xchg
out
std
stos
stos
es
incl
fcom
fwait
cld
ljmp
pushl
ja
repz
sti
cld
add
inc
loopne
stc
aas
stc
mov
loopne
icebp
shr
nop
add
dec
divb
fiadds
mov
stos
xchg
xchg
inc
lea
add
sahf
xchg
xchg
nop
mov
popf
lcall
std
mov
nop
fwait
lcall
repnz
fstpt
or
cld
push
pushf
rorb
clc
cmp
data16
dec
and
or
data16
adc
inc
data16
clc
lods
xchg
pushf
xchg
and
out
or
pop
scas
mov
out
dec
inc
adc
jbe
dec
icebp
fdivp
stc
repz
cmovb
out
cld
cli
clc
std
rcll
clc
scas
repz
daa
ds
out
clc
stc
outsl
das
jb
pop
test
mov
fs
loope
leave
or
popf
mov
popf
aas
jg
rcrl
lcall
jmp
pop
cmp
lea
adc
jecxz
les
hlt
hlt
fdivrs
pop
inc
into
cld
jae
sbb
leave
jge
add
loopne
ror
mov
xchg
cld
push
dec
cmp
adc
mov
daa
std
iret
add
aad
mov
mov
mov
lret
mov
dec
inc
xor
sub
mull
mov
mov
test
fwait
stos
inc
adc
mov
lret
lcall
imul
xchg
jge
scas
movsl
xchg
jmp
mov
and
jge
dec
cltd
movsb
outsl
add
iret
int
aad
int3
sub
mov
and
ret
mov
in
insb
shll
scas
popl
inc
xlat
jle
xlat
jp
sub
xchg
out
repz
xchg
out
test
data16
lret
push
shl
in
out
repz
leave
sti
sti
shll
insb
cli
jmp
aam
jmp
outsb
jmp
cmpb
in
sbb
cld
jmp
repz
mov
bnd
sbb
jmp
cld
jmp
out
daa
aam
jecxz
mov
pop
and
daa
xor
dec
mov
cmc
add
ficoml
int
test
or
test
xor
ret
mov
jl
out
jne
cmp
stc
mov
test
scas
cmp
sub
lock
inc
add
rcl
cmp
stos
pushf
and
in
lahf
dec
scas
stc
pop
fucomi
xchg
out
jnp
mov
sub
inc
lahf
js
aas
sub
mov
rorb
mov
pop
sbb
in
gs
xor
sbb
pop
add
lret
sbb
push
fbld
repz
int3
and
mov
fwait
fwait
dec
imul
lret
jg
les
out
lods
pop
pop
aaa
dec
and
in
inc
stc
pop
rolb
mov
jmp
add
dec
xlat
mov
loop
sti
notb
mov
out
mov
mov
scas
outsb
sbb
lahf
jnp
mov
lock
faddl
inc
ret
inc
out
idivl
pop
cli
testb
or
cmp
cld
mov
insb
int3
jne
in
test
add
adc
cwtl
dec
out
je
jns
mov
inc
mov
pop
fwait
rclb
bound
xchg
xchg
mov
loope
adc
lcall
inc
out
cli
sbb
test
dec
pop
fidivrs
test
push
lods
adc
mov
ret
mov
hlt
cs
inc
jbe
add
int3
inc
sub
hlt
jle
pop
test
js
dec
lock
test
adc
push
xchg
aad
add
jbe
mulb
cmp
and
push
or
mov
shrb
scas
add
cltd
iret
scas
int3
imul
sti
dec
adc
cmp
mov
cmp
fstpt
push
in
inc
or
cmpsb
in
add
test
lret
shl
cmc
xlat
mov
mull
xchg
std
pop
stos
adc
ret
sub
pop
iret
loop
dec
pop
js
cli
push
push
bound
loop
fdivr
in
cmc
mov
and
mull
fcompl
sbb
inc
dec
and
lahf
lock
movsl
cli
dec
rorl
mov
mov
mov
in
repz
ljmp
cwtl
loopne
lcall
cmp
icebp
dec
repz
ret
addr16
pusha
jno
cli
lds
lods
pop
ret
in
cmp
sub
test
out
repnz
mov
cltd
push
sub
inc
adc
mov
cmp
imul
lahf
xchg
pop
sar
fwait
pop
test
cmp
loope
jbe
clc
sbb
fwait
nop
cmpsb
imul
mov
imul
rcll
imul
lcall
lret
and
inc
xchg
and
cwtl
cld
and
and
pop
lret
push
inc
in
pop
sbb
outsl
add
add
xchg
push
ret
divl
scas
cli
daa
scas
in
jl
mov
jl
jmp
lds
and
cli
pop
xchg
imulb
scas
lahf
push
shr
sub
xor
pop
sbb
clc
xor
lods
lods
cld
mov
cmp
adc
aad
push
out
mov
jns
lahf
out
jge
jae
pop
mov
cmp
subb
ljmp
sub
aam
sti
cmp
fcomi
xchg
shlb
dec
mov
mov
or
cltd
jle
and
ret
fldcw
mov
shl
mov
popf
pusha
jbe
and
or
mov
mov
lock
sub
out
xorb
or
adc
mov
mov
adc
testl
loope
xchg
and
and
cld
and
mov
scas
mov
bound
cld
in
aad
xchg
mov
roll
cld
sahf
in
idiv
jl,pt
std
scas
and
pop
int
push
loopne
clc
jl
sti
jl
adc
sbb
dec
jbe
cmp
mov
mov
jbe
adc
dec
fwait
push
mov
repz
cli
je
ja
pop
inc
cmp
jl
out
jno
mov
adcl
nop
lock
stc
je
mov
ds
mov
je
and
and
imul
out
cltd
outsb
mov
cltd
out
test
and
pmaddwd
mov
imul
hlt
sti
mov
mov
loope
std
mov
sbb
leave
lret
imul
testb
xchg
mov
mov
cld
mov
test
xchg
mov
jnp
mov
and
cld
or
add
dec
push
cmp
mov
dec
inc
hlt
add
mov
and
hlt
in
out
sbb
je
add
push
cld
cmp
push
pop
cld
mov
rcl
fstpt
and
jecxz
push
cmpsb
xrelease
xchg
push
scas
jbe
mov
mov
xchg
mov
int3
je
adc
repz
jecxz
cmp
push
jp
or
and
shr
xchg
in
xor
enter
jnp
mov
pushf
jae
sub
cmp
lods
arpl
fmull
ljmp
fmuls
xchg
xchg
sti
xchg
lods
xor
lock
sbb
mov
insb
fiadds
into
cmp
cmc
notl
scas
add
imul
ja
add
daa
fcmovnb
cmp
loop
fnstenv
mov
or
movsb
mov
sub
mov
in
lock
iret
je
dec
dec
mov
cld
pop
jmp
cltd
xchg
fldl
mov
loop
aaa
jmp
jmp
das
enter
inc
pop
mov
pop
cmp
sarb
jge
mov
inc
loopne
scas
sti
negl
inc
mov
arpl
mov
or
test
test
jg
xlat
lcallw
xchg
sub
mov
clc
pop
push
push
hlt
cli
cltd
cpuid
add
mov
notl
mov
orl
jmp
imulb
aaa
bound
je
pushf
dec
iret
mov
fdivr
repnz
pop
dec
mov
sbb
mov
jle
xor
rcrl
jmp
scas
pop
out
push
mov
or
inc
sti
js
cli
repz
cli
lods
mov
ficoml
or
cli
mov
cmp
cmp
cmp
aaa
cli
inc
in
push
dec
pop
jle
push
aas
fstpt
dec
push
mov
xor
in
int3
test
rcl
in
dec
xor
in
in
mov
cld
leave
jmp
in
push
filds
jbe
cld
movsb
lret
mov
mov
inc
mov
xchg
fwait
xchg
lcall
nop
pushf
mov
nop
add
repnz
fwait
mov
popf
lea
sbb
nop
aas
or
mov
lcall
mov
rol
cmpsb
in
je
icebp
sahf
mov
fldl
xchg
mov
xchg
lock
in
xchg
mov
sub
hlt
cld
loop
jnp
test
add
rcrl
test
xchg
jecxz
lea
cwtl
fidivs
mov
xchg
mov
cli
xchg
es
adc
push
aam
lcall
in
cld
scas
mov
xchg
xchg
out
pushl
jb
xchg
nop
inc
adc
jns
mov
testl
mov
adc
mov
cmp
push
xchg
dec
sahf
dec
mov
mov
lock
or
lock
jo
out
jb
shlb
sub
das
inc
ljmp
vfrczss
lods
cmp
xchg
xchg
repz
mov
popf
push
loop
ds
jmp
jo
int
xor
jmp
les
shrb
out
xchg
sahf
mov
out
fsubrp
mov
adc
adc
or
les
xchg
push
inc
pushf
shl
test
mov
lods
mov
cmc
hlt
lock
inc
push
std
fmuls
and
cltd
cmp
lods
in
call
inc
mov
xchg
lcall
mov
mov
and
jp
lahf
movsb
ror
mov
pushf
nop
mov
es
push
sahf
sbbb
stos
mov
cltd
xchg
adc
dec
xchg
pop
lods
ljmp
sbb
xchg
inc
mov
sahf
pushf
jne
call
ljmp
push
lcall
in
les
std
jp
pop
out
outsb
jbe
and
xchg
iretw
mov
in
data16
mov
xchg
lock
fsubrs
idivb
std
testb
mov
mov
into
lret
test
fdivs
mov
ljmp
add
test
ja
push
arpl
xor
pop
into
add
ljmp
add
add
int
int
int
int
int
int
int3
ljmp
int3
add
add
mov
pusha
int3
push
int3
add
icebp
lret
loopne
lret
jae
gs
push
lret
out
lret
movsl
lret
jp
add
or
lret
sti
leave
out
leave
out
pushf
leave
popa
leave
cmp
sub
adc
pop
cmpsl
add
add
leave
jmp
in
fcmovne
aam
leave
enter
enter
enter
enter
fadd
int
cmpsb
add
add
sahf
xchg
movl
inc
loop
mov
les
add
add
test
ret
rol
ret
xchg
ret
dec
ret
inc
ret
aas
ret
fadd
enter
ret
push
add
ret
jno
imul
ret
push
ret
or
jp
add
subb
or
nop
or
inc
shr
insl
pop
das
clc
push
mov
pop
sub
adc
inc
dec
push
pop
and
or
sbb
pop
sub
movsl
or
push
popl
pop
adc
pop
sub
cmpsl
or
pop
dec
xchg
std
push
clc
gs
jecxz
and
mov
mov
inc
mov
sti
mov
std
imul
cmpsb
dec
pop
call
lahf
std
clc
imulb
arpl
repz
mov
dec
adc
in
in
clc
aas
add
adc
ds
aas
shlb
cld
arpl
aaa
push
imul
inc
pop
xchg
inc
std
fs
sub
gs
outsl
xorl
mov
xor
and
shrl
or
loopne
cld
leave
jmp
sub
rol
adc
dec
mov
in
sub
mov
mov
lret
mov
lret
pop
dec
aaa
sub
or
aad
mov
lret
mov
mov
lret
mov
lret
inc
aaa
and
hlt
sub
sub
mov
lret
mov
popf
mov
pop
lret
mov
lret
dec
aas
xor
adc
mov
cmp
sub
mov
imul
mov
rcr
repz
dec
subb
mov
cld
and
jo
stc
ret
sahf
dec
call
dec
inc
xchg
gs
mov
push
dec
pop
push
inc
push
push
call
mov
gs
stos
cld
mov
pop
xchg
outsl
gs
push
dec
aas
xchg
gs
xchg
xor
pop
push
inc
pop
add
mov
cld
in
sbbb
aad
mov
sub
sub
daa
hlt
xchg
mov
lret
lds
jne
negb
cld
sub
mov
out
xlat
cmpsl
dec
inc
sub
call
int
fcoms
aas
je
cmpsl
mov
mov
lahf
mov
mov
imul
cld
and
stos
scas
mov
xor
mov
jg
lods
cltd
pushf
mov
lods
mov
aas
dec
repnz
mov
nop
cltd
mov
push
fbstp
test
movsl
out
cwtl
pushf
ja
jecxz
xor
mov
dec
mov
std
std
out
loopne
daa
imull
ds
clc
in
idiv
cld
out
sub
and
xor
mov
cld
mov
leave
mov
std
jecxz
std
fists
cld
and
cmpsl
xlat
les
jnp
mov
mov
ljmp
imul
fcoml
cld
leave
cmpsl
aaa
test
idiv
test
cld
add
clc
leave
adc
incl
dec
lock
cld
out
insl
jbe
insb
fcoml
loopne
ss
lahf
mov
mov
hlt
loopne
cmp
cmp
das
mov
in
mov
popf
pusha
ds
fucomip
mov
jmp
add
test
xchg
push
outsb
nop
sub
ljmp
xchg
mov
mov
lcall
xchg
clc
mov
loopne
aam
add
ljmp
loopne
rolb
mov
mov
mov
cwtl
hlt
mov
test
ficompl
and
cltd
icebp
jl
in
clc
mov
in
into
mov
cld
xor
fimull
mov
test
clc
in
jmp
fisttpl
insl
mov
outsl
and
mov
nop
lea
sar
or
adc
stc
cld
mov
stos
and
mov
and
lret
xchg
int
into
pushl
mov
add
popf
sahf
xchg
clc
and
dec
outsb
adc
mov
add
popl
je
je
xchg
je
jg
cli
pop
add
mov
in
fwait
add
fwait
jbe
je
jl
nop
cld
shld
test
hlt
je
aas
mov
xchg
stos
adc
cmp
or
in
inc
hlt
fisttps
xor
jno
lret
mov
repnz
fidivrs
loopne
int3
jnp
mov
jnp
mov
ljmp
xchg
js
imul
out
call
mov
fists
js
pop
decl
hlt
xchg
test
add
xchg
fidivrl
jp
cmp
jnp
dec
adc
repnz
hlt
movsl
cmpsb
add
add
sub
jmp
inc
pop
ds
xchg
loopne
jecxz
scas
and
mov
mov
testl
dec
jge
out
subb
mov
add
hlt
lcall
movsb
lret
out
mov
es
jbe
cli
jbe
jg
hlt
jnp
lock
mov
cld
dec
sbb
arpl
mov
aaa
frstor
sbb
ret
test
ja
scas
mov
and
push
pop
mov
nop
xchg
test
loope
mov
add
mov
mov
pop
jb
xlat
jmp
scas
cmp
pop
ret
nop
xor
insl
fimull
adcb
leave
xchg
xchg
xchg
out
mov
ret
jmp
add
mov
jg
inc
cmc
je
jle
mov
mov
clc
test
sbb
je
xor
into
mov
jl
lods
das
add
sti
mov
cmp
mov
push
dec
add
jl
add
fidivrl
in
xchg
das
xchg
stc
xchg
std
xor
inc
sbb
xchg
call
mov
mov
pop
and
jmp
jmp
sbb
std
pop
es
push
in
jae
test
sub
test
add
adc
das
lods
adcl
test
insb
pop
imul
inc
push
cli
add
inc
jle
test
add
inc
iret
pop
or
enter
dec
add
or
adc
scas
cmp
push
jbe
jb
or
adc
jne
ds
dec
andb
sti
icebp
ss
into
jge
cld
pop
cmpsb
imul
addr16
add
ds
pop
xchg
popf
mov
adc
mov
pop
jecxz
scas
in
adc
pop
mov
mov
insl
mov
int3
add
xchg
pop
test
add
loopne
mov
sub
out
add
ret
jp
out
ss
test
lods
lret
dec
out
dec
nop
in
mov
inc
clc
xchg
lock
mov
cmp
lock
shl
clc
fnstcw
repnz
cli
jl
push
cwtl
loopne
pop
mov
jbe
xchg
cld
adc
out
out
dec
arpl
rcr
std
adc
sti
jecxz
xor
repz
decb
jb
fs
or
and
repnz
repz
stos
repnz
cmpsl
mov
movsb
test
leave
dec
xlat
fldenv
sub
iret
xchg
repz
mov
in
int3
imul
fbld
into
je
insl
scas
test
inc
fcmovne
je
aam
mov
inc
or
pop
dec
aad
pop
jnp
pop
cmp
std
adc
adc
out
call
cmp
out
or
add
adc
out
es
sahf
les
fldl
ljmp
cmpsl
daa
test
jmp
cmp
sub
push
mov
pop
imulb
ret
fidivs
jg
movsl
das
push
and
je
cli
ret
and
push
scas
push
shrl
push
je
iret
lahf
sub
mov
mov
repnz
stc
rcrb
incb
push
xchg
sbb
cmp
push
je
aam
inc
sbbb
adc
stc
repz
xchg
inc
repnz
xchg
outsl
xchg
jb
mov
or
push
ljmp
jmp
sbb
inc
dec
dec
jge
xchg
push
enter
cltd
rorl
push
out
repnz
inc
adc
xor
hlt
imull
jae
sub
movsb
lds
lea
push
pop
adc
xchg
inc
lock
mov
enter
repz
or
add
jne
jg
icebp
pushl
repnz
loope
test
loopne
cmpsb
jl
cmpsb
addl
mov
and
cmpsb
je
lods
cli
jmp
cmp
std
lds
xchg
loope
cli
jmp
xlat
scas
rcr
jo
out
out
out
das
adc
jmp
mov
iret
std
jp
jg
lods
or
lds
cli
fisttps
cmpsb
jp
stos
fistl
std
adc
jle
jbe
ret
cld
xor
ja
insl
mov
jmp
pop
int3
mov
sub
fistpl
out
out
icebp
cltd
int
into
les
lods
dec
pop
jmp
fwait
jecxz
add
clc
das
std
scas
sub
incb
fstl
jno
lahf
and
icebp
xlat
movb
je
or
leave
dec
and
xchg
mov
test
out
popa
aam
aam
xchg
icebp
loopne
adc
lock
fcos
out
jb
addb
cvtps2pd
cltd
pop
inc
pop
repz
mov
das
pop
out
inc
or
inc
in
andl
lock
jg
call
fidivrl
xor
pop
dec
mov
lods
inc
icebp
inc
dec
rorl
fcompl
pop
inc
lock
mov
xchg
das
repnz
and
cmp
jp
dec
cmp
jmp
jecxz
lahf
in
push
movsl
pop
enter
pushf
cltd
push
sbb
mov
fstpt
aas
pop
stos
inc
dec
sbb
sub
mov
repz
testl
add
fbld
push
dec
shlb
stc
clc
pop
adc
out
mov
xchg
xchg
dec
test
std
or
mov
loop
mov
out
cmpsb
lea
mov
xchg
push
aaa
mov
cld
jno,pt
dec
rcrb
xchg
clc
pop
jno
and
test
jl
mov
adc
jecxz
jmp
xchg
std
test
add
mov
aas
sti
jl
repnz
rcll
aam
arpl
jge
sub
incb
jno
sub
in
ja
int3
jmp
jl
cld
push
fwait
lock
cli
add
adc
fstl
jne
enter
lds
test
fisubrs
push
sbbb
or
inc
push
jne
cld
mov
pop
mov
aam
mov
pop
pusha
lea
loop
push
pop
sub
sbb
cld
cmp
pushf
xor
lret
mov
clc
testl
cmp
jne
fwait
test
dec
outsl
insb
xchg
les
sbb
rclb
adc
jg
xor
setae
imul
jle
cmp
pushf
ja
jnp
ss
jg
iret
sbb
iret
mov
into
jae
pop
pop
push
mov
test
jg
loop
iret
pop
pop
addr16
mov
vrcpss
test
iret
pop
out
xor
jle
and
cmpsl
pushf
pop
mov
fidivrs
mov
mov
iret
addr16
mov
jge
lcall
mov
mov
int
push
shr
cli
push
test
pop
push
mov
jmp
fsubrp
mov
xor
lret
cltd
adc
mov
adc
xor
and
in
popf
call
cmp
fsubrs
push
jns
cmpsl
mov
mov
cli
in
jno
pushl
dec
ljmp
call
push
out
arpl
das
adc
daa
push
and
xchg
popf
lock
xchg
xlat
out
stc
push
cmp
daa
gs
mov
mov
pop
sub
cmp
jmp
repz
ret
sahf
add
cli
mov
or
aam
or
xchg
rcrl
mov
jb
or
xor
and
add
aaa
mov
xor
iret
in
repnz
iret
pop
repz
out
cmp
and
pop
xor
icebp
push
insl
jbe
cli
jne
mov
ret
mov
pushf
push
int
std
pop
orl
adcl
mov
mov
mov
lret
or
jmp
mov
jnp
inc
imul
and
scas
adc
mov
sbb
pop
add
les
mov
mov
das
inc
les
and
mov
jl
jecxz
cwtl
andl
test
je
outsb
xchg
adc
adc
ret
lahf
xor
add
in
push
push
dec
mov
mov
push
aas
inc
or
add
fdivrl
mov
jbe
cmp
adc
or
mov
out
adc
mov
les
mov
ljmp
out
jne
jg
mov
testl
adc
jl
lock
jmp
mov
hlt
sti
jb
enter
jo
mov
hlt
aas
push
cli
push
out
cmp
mov
hlt
adcl
ds
idivl
fisttps
cmp
int3
sub
adc
hlt
cmp
roll
imul
jge
sarb
clc
inc
jle
and
ds
div
xor
jns
out
mov
push
out
mov
ljmp
jl
clc
jecxz
sub
jmp
cli
mov
repz
idiv
in
xchg
cli
lock
add
out
repz
push
fistps
fdivrl
adc
xchg
cmp
test
ds
jl
stc
out
xchg
adc
fisttps
adc
cli
in
pusha
fdiv
sti
mov
and
adc
je,pt
iret
push
repnz
fs
sub
ret
cld
das
or
cld
sub
cltd
mov
cmp
mov
icebp
pop
ret
mov
adc
cld
jne
ret
mulb
aas
mov
aas
enter
mov
cmp
test
nop
sub
pop
xchg
das
dec
mov
inc
sbb
lret
adc
in
pop
test
cmp
aam
into
sti
aas
pop
sti
and
push
hlt
scas
test
add
or
data16
mov
stos
hlt
pop
adc
dec
testl
dec
iret
std
int
jmp
je
mov
mov
ficomps
je
cmp
ficoms
out
fidivrs
pop
inc
xchg
pop
pop
mov
fidivrs
rcr
inc
lcall
fidivs
adc
in
out
movsl
mov
repnz
push
mov
rcrl
movsl
push
cmp
fiadds
cmpsb
mov
int3
ss
sbb
jg
into
fnstcw
sti
into
cmpl
pop
lret
aad
cs
sub
adc
sbb
pop
jbe
imul
mov
int
adc
repz
jle
arpl
push
inc
mov
jmp
mov
sub
je
je
ds
jb
sbb
add
jl,pn
rol
mov
add
aaa
loop
mov
shrl
mov
repz
inc
push
jecxz
pop
mov
stc
call
cmc
inc
in
jb
in
mov
out
add
dec
xchg
push
and
jne
aas
sti
ds
div
in
cmp
jp
mov
lret
mov
cwtl
icebp
cmp
and
movsb
jg
das
mov
cmpsb
mov
clc
mov
or
faddl
icebp
mov
add
sub
or
add
out
jb
call
add
add
sub
adc
cmpl
add
hlt
or
enter
cld
out
jb
enter
xchg
or
adc
sbb
jmp
sub
testl
and
and
jmp
arpl
addb
cmpsb
ds
ds
jmp
movsb
aam
mov
or
sub
mov
andb
xor
or
jmp
or
dec
mov
cld
or
and
inc
inc
cld
and
in
lock
je
adc
nop
cli
inc
rolb
stos
inc
andl
das
fsubrl
cld
in
and
movsb
stos
in
aad
js
je
and
cmpsl
xor
and
jge
je
jg
sahf
add
movsl
push
sub
and
in
mov
xchg
adc
rcr
faddl
jnp
jl
jg
jp
sbbl
or
jp
pop
xchg
push
adc
movsb
pop
pop
repz
into
hlt
fnstcw
or
sahf
xchg
jl,pt
lret
pop
daa
daa
addr16
dec
mov
movsb
adc
jmp
das
xchg
and
xlat
loopne
or
adc
sub
ret
mov
aad
xlat
aas
sti
dec
movsb
add
lock
mov
sar
aad
iret
mull
cli
mov
cmp
cli
inc
sub
mov
hlt
shlb
adc
cmp
xchg
stos
cmp
fucomp
outsl
xchg
adc
xor
aaa
sub
lret
and
sub
and
mov
push
push
cmc
and
lods
ret
add
add
pop
inc
dec
pop
sub
mov
js
call
mov
je
ret
int
cmc
mov
repz
pop
test
cmp
shld
dec
mov
ds
dec
stos
sahf
es
adc
sub
loop
adc
daa
sub
stos
je
popf
or
mov
in
cli
hlt
sub
inc
push
faddl
andb
repz
dec
ret
mov
jmp
and
dec
sub
fadds
lea
or
movsl
mov
push
push
in
icebp
or
dec
jno
and
sub
push
pop
fcoml
pop
dec
push
cs
dec
mov
inc
xchg
xor
push
or
jae
loope,pn
push
push
sub
js
dec
daa
sbb
jl
aas
jns
jmp
std
lahf
jo
mov
jo
fisubl
addl
daa
sub
icebp
pop
jp
inc
fldenv
es
test
shll
sub
xorb
inc
pop
insb
push
inc
push
dec
and
inc
inc
mov
das
dec
sbb
push
ficoms
outsb
pop
xchg
and
cmp
movsl
push
xchg
push
cmp
jo
jge
push
jmp
and
imul
js
sub
sub
icebp
and
lcall
jns
es
je
jmp
mov
cli
pop
xchg
xlat
je
and
inc
inc
mov
and
push
sbb
xchg
jo
mov
cmovle
adc
pop
pop
adc
or
add
test
es
nop
cwtl
mov
push
sub
icebp
cmp
stc
dec
jo
mov
cmp
aad
movb
mov
das
comiss
or
push
mov
dec
and
add
int3
add
and
icebp
int
or
jge
adc
jecxz
loopne
rol
fstpl
inc
xchg
cmp
out
mov
cmp
in
int3
lret
repz
sbb
fstpt
test
or
dec
adc
adc
mov
loope
xor
in
push
xor
mov
aam
dec
push
lea
mov
xor
lahf
mov
or
lret
xchg
mov
movsb
cld
sbbb
dec
jmp
inc
sbb
adc
imull
jno
iret
cmp
adc
mov
jno
cld
cmp
mov
wrmsr
xchg
add
push
jns
lods
je
and
xchg
hlt
inc
out
jp
iret
adc
and
call
jmp
mov
mov
hlt
cmpsb
inc
ja
adc
adc
sub
shl
mov
das
sub
xchg
cmp
hlt
xor
sbb
sbb
das
inc
cltd
push
mov
or
leave
lods
sbb
xor
sbbl
sbb
and
mov
in
repz
lcall
cmpps
mov
xchg
jae
sub
dec
jb
pop
out
mov
in
push
stc
hlt
dec
das
daa
cmc
loope
cmp
xchg
int3
jg
shrl
aas
mov
mov
into
cmpsb
cmc
sbbl
lock
fsubrl
out
test
xchg
xchg
jge
pop
insb
lret
jns
icebp
adc
loop
into
push
inc
int3
dec
xchg
push
sub
shrb
cmp
movsb
lcall
sbb
sahf
pop
sub
xorb
repz
and
and
add
or
add
mov
xor
and
add
adc
push
mov
out
sbb
adc
mov
ds
in
push
test
push
nop
movsl
test
mov
stc
test
aad
ror
arpl
pop
sbb
add
and
and
les
pop
aas
std
add
adc
pop
adc
mov
pop
out
divl
lods
dec
inc
xor
sbb
sub
sub
dec
dec
or
pop
lret
inc
into
adc
xor
and
sub
imul
lock
xchg
or
mov
je
lcall
into
movsb
adcb
inc
rolb
sub
pop
jbe
je
stos
je
repz
xchg
jb
int3
repz
lea
xchg
lahf
repnz
out
add
in
add
cld
xchg
xchg
xchg
ja
in
scas
push
push
or
ficomps
daa
add
addb
sub
add
cmc
xchg
pop
and
jge
shrb
inc
pusha
mov
outsl
xor
and
ja
xor
out
icebp
jnp
and
scas
mov
and
sub
jmp
out
xchg
pop
arpl
pop
inc
sbb
push
clc
cmpsb
lods
movsb
dec
scas
pop
mov
ds
xabort
pop
js
adc
enter
addb
mov
mov
jecxz
sbb
xchg
or
cld
mov
pop
ljmp
gs
adc
in
dec
pop
pushl
lods
mov
daa
loope
add
sub
xchg
inc
xchg
std
aas
cmp
jmp
cmpsb
mov
scas
lcall
data16
inc
cmpsb
xchg
cmc
xchg
push
pop
pop
ljmp
sub
in
mov
movsb
ja
mov
testb
dec
fs
adc
in
arpl
jle
test
loopne
lods
jmp
out
cmp
and
out
scas
repnz
and
fcoms
pop
xor
das
cltd
push
lds
dec
das
xchg
cld
fwait
stos
add
inc
scas
repnz
sahf
sub
or
and
pop
lcall
stos
sbb
nop
ret
inc
mov
or
mov
mov
adc
mov
jbe
mov
cld
push
jge
aaa
scas
dec
cmp
sbb
cmp
shrb
mov
cmc
leave
movsb
xchg
imul
dec
jmp
test
jmp
test
mov
push
pop
pop
scas
cmc
pop
ja
pop
and
iret
jl
mov
iret
imull
cmc
xchg
je
xor
out
cld
lds
xor
ja
cmp
cmp
jg
sbb
cmp
mov
push
je
fwait
mov
or
mov
shlb
notb
adc
scas
lods
scas
loope
xor
mov
out
jne
jmp
mov
inc
mov
pop
in
aas
ss
xchg
or
adc
dec
test
cld
test
fldcw
inc
and
in
test
into
out
mov
pop
sbb
sub
mov
mov
add
adc
xor
inc
repz
cltd
loope
lea
lds
add
pushf
cltd
je
sti
cltd
ret
mov
cli
fmul
sub
ficoml
in
fsubl
lock
rclb
and
test
sub
cmc
clc
mov
and
cmpsb
mov
mov
jl
inc
aas
ret
clc
xchg
lods
pusha
inc
jb
xchg
inc
and
test
mov
mov
addl
and
or
std
ret
mov
mov
xchg
adc
jb
js
lock
clc
mov
mov
pop
xor
jp
dec
and
xchg
sbb
pop
scas
lods
scas
outsl
dec
movsl
outsb
fsubrp
mov
sub
jg
aaa
jbe
das
test
add
sub
jmp
jmp
ret
stos
and
aam
mov
mov
sub
inc
dec
mov
jp
in
and
dec
dec
test
jns
sti
jnp
add
cmp
xchg
adc
clc
mov
pushf
xor
dec
bound
hlt
xchg
inc
ja
les
test
add
call
adc
mov
mov
jp
add
lahf
nop
dec
cs
fdivs
fisubl
rcrb
add
and
pop
cmp
jno
rolb
xor
jno
rol
je
insb
cli
in
sub
push
add
dec
inc
rclb
and
lds
or
sub
sub
jg
xor
inc
xchg
sysret
outsl
ljmp
push
je
arpl
popa
add
jae
repz
arpl
lret
lods
add
fimuls
pop
jl
pop
pop
mov
pop
insl
cmp
xchg
outsl
mov
outsl
dec
push
jg
sub
sahf
push
jb
test
call
pushf
cmpsb
out
frstor
test
pop
dec
push
mov
nop
in
imul
testb
adc
gs
cli
pop
xlat
cwtl
sub
out
jge
ret
std
popa
sti
arpl
neg
xor
shr
inc
push
jnp
dec
mov
adc
push
jae
jg
je
lods
sbb
aam
xchg
filds
jecxz
sub
inc
dec
subl
out
inc
jg
in
out
test
jno
pop
adc
mov
mov
adc
add
xor
dec
jl
and
cld
push
mov
xchg
dec
inc
mov
test
dec
mov
dec
scas
dec
lea
inc
mov
xor
sub
inc
hlt
inc
faddl
cld
inc
xchg
inc
imul
inc
jmp
lcall
xchg
cmpsb
imul
imul
imul
imul
movsb
aad
jmp
lret
mov
in
adc
femms
dec
inc
xchg
and
mov
or
aas
sarb
sub
outsl
dec
adc
cli
iret
mov
cmp
dec
shll
iret
in
dec
shlb
xor
mov
pop
push
jle
mov
pop
jb
cmp
and
rclb
mov
cld
dec
xchg
sti
xchg
cmpsb
jg
test
roll
out
ljmp
adc
gs
pinsrw
pop
xchg
stc
inc
push
arpl
mov
fwait
cltd
shll
mov
shll
mov
fisubrs
lock
mulb
pop
mov
jmp
add
pop
pop
outsl
mov
jne
add
in
popf
dec
test
int
jo
dec
repnz
and
sbb
jb
aam
cs
call
scas
mov
lds
adc
dec
sbb
pop
fldt
add
sete
jp
add
mov
jno
mov
jnp
inc
lods
cmp
test
push
adc
enter
jl
xchg
lret
hlt
fwait
xor
jecxz
in
mov
les
inc
stc
insb
mov
jmp
js
and
scas
inc
repz
mov
jo
pop
xor
or
mov
or
mov
adcl
inc
stos
ret
out
mov
les
daa
xlat
adc
mov
cld
daa
mov
pop
fyl2x
insl
dec
cmp
add
aaa
pop
rorl
xchg
fisttpll
cmp
pop
push
scas
mov
jno
and
fbld
lahf
jb
mov
push
es
fcoml
loopne
movsb
or
ljmp
aas
call
cmp
and
test
cmp
mov
pop
sbb
cmp
cmp
dec
out
sti
sub
sar
mov
xchg
xchg
mov
arpl
mov
popf
cmpsl
fsubrs
mov
pop
icebp
test
mov
in
xchg
int
out
cmc
ja
cld
movsl
dec
push
dec
hlt
add
orl
cld
pop
aad
out
or
mov
notl
clc
push
rolb
cs
in
jmp
xchg
sub
add
jns
nop
pop
gs
add
mov
testl
int3
xchg
xchg
inc
out
xchg
add
in
fwait
std
out
sti
or
mov
mov
lahf
or
pop
aad
and
cltd
sbb
xchg
shll
int3
imul
loope
fcomps
dec
cmpsb
xchg
or
push
clc
add
mov
mov
cmp
mov
das
mov
daa
mov
out
jl
fistl
bound
ficoml
lock
jle
xchg
notl
jb
pop
or
mov
sbb
in
push
out
mov
jmp
pop
gs
push
ds
std
sub
or
add
push
ret
fistps
or
or
or
inc
xchg
jmp
pop
ret
in
adc
xor
add
xor
mov
jg
scas
xchg
push
lock
pop
fwait
push
and
gs
xchg
call
pop
shrb
incb
mov
clc
pop
mov
or
mov
xchg
cmpl
ljmp
cmp
fnclex
adc
pop
cld
adc
xchg
and
adc
adc
lret
clc
push
adc
movsb
lss
aad
hlt
push
sahf
stc
testb
push
lahf
in
movsb
or
mov
cmp
fs
adc
pop
in
rcrb
fstps
mov
cltd
jae
xchg
out
jge
js
cs
arpl
test
mov
cli
cmp
ss
outsw
mov
addr16
imul
ds
nop
mov
daa
or
cmpsb
mov
mov
fstpt
jl
int
js
js
in
xor
js
insl
jecxz
iret
jecxz
test
mov
icebp
jmp
in
into
mov
push
lock
cmpsb
add
xchg
jns
loope
ret
pop
loop
jg
mov
xchg
decb
push
loopne
push
in
lahf
jge
scas
testl
out
loope
jno
fbstp
aaa
lret
mov
cmpsl
xchg
ret
cmpsb
shrb
ja
xor
into
dec
mov
lods
xchg
mov
jmp
in
loop
test
add
and
jle
mov
add
scas
daa
pop
lds
jb
imull
inc
cmp
stos
out
gs
out
cmp
push
sti
pop
shrl
pop
stc
and
mov
pop
mov
pop
xchg
test
cmp
mov
out
into
xchg
addr16
in
fidivrl
iret
dec
and
incl
cmp
out
and
jae
out
repz
mov
sti
shrb
stc
insb
xchg
push
inc
push
push
cmp
inc
ret
adc
jp
test
xchg
mov
or
mov
pop
cltd
mov
out
pop
mov
xchg
ja
push
loopne
shrb
and
les
sti
testb
test
jl
cld
shl
movb
lahf
pop
sahf
lahf
pop
mov
icebp
jle
stc
fistl
push
pop
out
pop
push
hlt
xor
jecxz
fsts
mov
imul
jno
push
aad
push
mov
in
mov
imul
mov
jmp
rolb
inc
pop
mov
pop
imul
pop
stc
pop
testl
sahf
test
outsb
pop
cld
cmp
mov
scas
fdivr
adc
and
pop
test
add
out
pop
jecxz
negb
aas
mov
add
cli
jnp
add
ds
inc
adc
loopne
daa
mov
cs
insl
add
jns
mov
dec
mov
retw
fisubl
mov
clc
popa
in
pusha
pop
xchg
inc
xchg
sub
pop
in
pop
mov
pop
in
pop
pop
xchg
inc
push
pop
pop
pop
mov
in
push
push
pop
push
inc
pop
push
push
clc
push
call
adc
call
dec
pop
adc
gs
dec
dec
push
inc
in
inc
mov
inc
push
inc
pop
inc
in
inc
xchg
push
call
cmp
inc
cmp
cmp
cmp
mov
sub
lret
xor
shlb
mov
mov
sub
hlt
sub
lret
loopne
hlt
sub
daa
es
mov
and
and
lahf
sub
rcrb
fld
xchg
xchg
xchg
gs
xchg
int
fimull
pop
adc
adc
adc
mov
test
in
inc
or
fmuls
or
or
das
mov
push
push
pop
add
call
aas
pop
addr16
out
xchg
in
cmpsl
push
add
cmp
cli
push
ret
push
rol
test
rcl
and
push
sub
xor
hlt
pop
add
int
icebp
test
sub
pushf
aaa
cmp
sbb
loopne
fadds
jb
je
stc
das
pushf
adc
fsubrl
dec
xor
scas
fcompl
cli
mov
aam
stc
mov
scas
scas
ss
jae
stc
lahf
hlt
xchg
les
jbe
data16
addl
mov
in
mov
nop
out
imul
pop
sub
fisubrs
cld
adc
inc
cltd
jbe
pop
push
inc
idiv
push
adc
dec
push
xlat
test
xchg
mov
add
std
mov
stos
test
mov
jmp
adc
stc
mov
movsb
pop
movsb
mov
pcmpgtw
sbb
test
dec
ss
mov
xchg
psubb
mov
out
xchg
cli
test
movsl
push
aam
jae
push
ss
cwtl
and
repz
fsubr
shr
pop
je
add
dec
imull
bound
dec
into
std
pop
je
jmp
xlat
ds
dec
aam
add
ret
test
call
and
movsl
je
jl
das
mov
sarb
out
iret
mov
mov
stc
push
cmp
jl
std
dec
push
push
cmc
aaa
std
xor
dec
mov
and
pop
pop
setb
xchg
sub
mov
mov
dec
cmc
ds
inc
mov
test
stos
imul
dec
call
gs
push
outsl
mov
popf
pop
pop
cmpsb
lds
outsb
les
mov
dec
cmp
movntq
out
sti
ljmp
jae
test
or
mov
jp
add
repnz
mov
jae
out
or
scas
inc
jb
loop
repz
push
cmc
push
int3
add
xor
push
test
shlb
or
push
fistl
or
aad
jmp
dec
stos
movsb
sarb
add
mov
int
sbb
adc
aas
inc
mov
scas
scas
test
jecxz
lods
in
dec
in
out
in
cmp
insl
stos
les
pop
mov
shll
repz
dec
inc
or
sub
mov
mov
mov
stos
rorl
pop
pop
push
mov
repnz
in
sub
mov
in
in
or
lret
inc
int
mov
lret
loop
mov
mov
lret
xchg
lcall
sub
mov
xchg
mov
lcall
cld
les
xorb
dec
lcall
lcall
mov
mov
pop
ja
jbe
jne
je
sub
cld
jb
jno
jo
outsl
mov
outsb
lcall
pop
inc
push
push
mov
imul
mov
lds
inc
jb
data16
gs
stc
xchg
gs
mov
fwait
lods
lcall
sub
sbb
sbb
mov
mov
lret
xchg
mov
mov
lcall
lret
mov
lcall
ret
jmp
out
mov
ja
daa
inc
mov
pop
xchg
loop
imul
aas
sbb
mov
addb
add
jl
scas
fdiv
repz
push
pop
pushf
push
add
add
dec
pop
add
inc
repz
mov
clc
lods
push
pop
lret
lret
lds
cmc
cmpsb
pop
sbbb
lock
out
orps
adc
mov
mov
push
popf
jmp
popa
scas
cmp
add
sti
ret
push
sbb
pop
mov
mov
ljmp
pop
fsts
mov
lret
or
test
repnz
ja
cli
in
mov
inc
push
mov
test
idiv
das
mov
rorb
add
pop
cli
dec
xlat
mov
lret
outsl
dec
adc
mov
cmp
hlt
je
pop
push
add
and
lret
xchg
fs
out
sarb
cld
in
sti
sbb
jle
cmp
xchg
pop
xchg
and
cmp
pop
jbe
mov
adc
jle
or
dec
sbb
or
mov
iret
add
testb
test
cli
and
pandn
nop
es
lds
loope
das
pop
mov
stc
je
xchg
int
int3
jbe
popf
sub
sahf
dec
pop
mov
cld
pop
lea
xchg
add
adc
leave
and
lock
cltd
pop
adc
mov
adcb
sti
xor
add
hlt
iret
pop
jg
mov
scas
inc
jno
push
test
ss
jnp
out
inc
jne
xor
cmp
xor
pop
ja
mov
out
in
jae
lahf
xchg
repnz
and
or
sahf
add
cmpsb
lret
int3
inc
das
fnstsw
xchg
lret
decl
idivb
and
push
mov
inc
aad
mov
inc
aam
mov
test
sbb
mov
pop
fstpt
sub
mov
mov
cmp
inc
jne
es
push
adc
stos
jnp
cmpsl
movsb
pop
loope
lret
fistps
in
add
mov
pop
cmp
cmc
movsb
fidivl
je
jp
dec
fbstp
dec
scas
xchg
gs
push
shlb
mov
xchg
mov
xchg
fcoms
inc
xor
push
loopne
xchg
push
jno
int
fs
or
or
or
sub
call
pop
in
dec
mov
cmp
out
ficompl
dec
jl
leave
fcomp
std
sub
ffree
lock
add
lods
fadd
shrl
cmp
int
cli
xor
pop
nop
push
hlt
mov
rclb
dec
lret
mov
daa
adc
lcall
xor
lahf
dec
adc
pop
inc
push
mov
jb
mov
sarb
adc
stos
xor
jge
out
into
lea
jecxz
je
mov
push
je
jg
cli
ret
xlat
mov
cli
cli
lock
pop
fdivrp
icebp
cmp
daa
in
cld
mov
out
sti
int
xor
push
cs
mov
ljmp
jge
push
mov
repnz
icebp
mov
fisttps
cmp
pop
rolb
xchg
icebp
out
out
fiaddl
pop
das
out
jp
push
or
jae
or
inc
pop
mov
sbbb
mov
lods
out
mov
lock
inc
rorb
jle
pop
lret
ljmp
test
ds
jb
subb
push
cli
dec
bound
div
xchg
arpl
jo
iret
cld
clc
pop
cmc
cmp
fbstp
imul
mov
int
inc
daa
fistpll
aaa
sub
push
push
cltd
fimull
gs
in
dec
shll
arpl
in
in
bound
pop
inc
gs
xchg
pop
rcrl
and
xchg
xchg
pop
in
pop
fcomps
pop
xchg
push
fcom
cwtl
aas
push
push
fcoml
push
mov
lcall
dec
arpl
adc
popf
dec
lds
inc
inc
lds
push
adc
inc
roll
mov
pop
inc
aas
loopne
hlt
cmp
pop
xchg
cmp
cmp
jns
popf
xor
sub
mov
sub
daa
sub
das
lret
and
aam
daa
mov
and
pop
xchg
adc
jo
mov
cltd
aam
mov
sub
xchg
cld
pop
insb
test
movsb
jle
add
mov
std
in
mov
mov
push
aas
leave
shl
adc
icebp
das
adc
icebp
sbb
dec
adc
addr16
les
fcmovnb
xor
jns
test
or
ljmp
aam
pushf
add
arpl
jbe
repnz
lret
scas
cld
cli
mov
int3
mul
mov
lcall
nop
cwtl
xchg
xchg
xchg
in
pop
inc
jns
add
add
or
push
jg
mov
or
loop
mov
jle
test
lods
sbbb
cli
pop
xor
lcall
xor
sub
cwtl
cwtl
sti
js
push
push
sbb
push
je
inc
xchg
sbb
cltd
mov
xor
mov
imull
enter
shlb
out
xchg
pop
test
arpl
out
cmp
out
ss
stos
es
xor
xor
es
sub
fs
imulb
repz
lock
and
popf
lock
dec
es
cld
add
scas
push
aas
push
pop
movsb
fs
psubusb
repnz
int3
push
inc
imul
enter
jns
mov
adc
adc
sete
pop
xchg
lea
xchg
lea
hlt
sbb
sti
or
or
lahf
mov
das
add
cli
mov
cmp
or
mov
popf
hlt
clc
sarl
and
pop
mov
pop
fldl
repz
popf
lods
ret
xchg
inc
incb
enter
mov
int3
in
fld
add
cli
loop
iret
cmc
out
movsb
aas
pop
pop
jmp
hlt
nop
xchg
or
cmp
daa
inc
lahf
testl
xchg
and
jl
sti
repz
cli
roll
in
adc
pop
push
and
cs
lahf
sub
aas
test
inc
add
mov
pop
lods
lret
adc
sbb
gs
jbe
mov
dec
pop
jmp
hlt
and
pop
aas
cmc
mov
stos
sti
lret
fistpll
push
icebp
cmc
pop
pop
repnz
xor
leave
xchg
test
fdivrp
jecxz
out
and
jecxz
cli
iret
jecxz
fwait
in
mov
notb
lahf
push
xlat
in
xchg
lret
mov
gs
sbb
stc
inc
jg
mov
push
loop
and
pop
or
or
add
add
lret
das
lock
mov
fbstp
lcall
cmp
add
repz
lea
mov
cltd
mov
arpl
sub
xchg
pop
add
xchg
mov
mov
pop
sbbl
fcomps
test
push
daa
mov
pop
sbb
sbb
mov
mov
out
mov
outsb
mov
orb
cli
in
cmp
pop
add
pop
add
bsr
sub
xor
ljmp
push
push
cmp
cmp
inc
test
mov
push
inc
lods
xchg
and
mull
daa
ret
pop
fbld
enter
call
jmp
sbb
loope
mov
pop
add
clc
lcall
inc
stos
fwait
pop
dec
fldt
fldenv
sahf
and
jb
out
rcrb
fcmovnb
fs
cmp
and
dec
fistps
push
lods
scas
faddl
inc
clc
pop
pop
and
mov
dec
notb
shlb
mov
js
dec
cmp
test
mov
mov
xchg
loopne
xchg
stc
sbb
sbb
pop
mov
scas
jb
jb
adc
and
adc
xchg
int3
and
adc
xlat
divl
adc
inc
sti
jns
stc
pop
sbb
je
inc
mov
sub
int
scas
lea
mov
movsl
andb
stos
cmp
fwait
and
fcomps
imull
stc
dec
lcall
fbld
hlt
outsl
outsb
ss
repnz
or
jg
ret
inc
xor
xchg
sbb
pop
fs
sub
mov
and
test
jg
push
aas
sbb
lret
roll
pop
lcall
inc
sub
ljmp
out
clc
rorb
mov
pop
pop
xchg
out
decl
lds
add
cmc
jmp
fsin
loopne
incb
adc
std
add
out
insl
xchg
xchg
mov
sahf
cmp
out
ja
add
ja
xor
lret
mov
or
cmp
cld
stc
mov
add
in
jns
push
pop
iret
and
icebp
test
and
iret
ret
out
aad
dec
fldcw
fistl
gs
cmp
lret
mov
iret
out
imul
sbb
lcall
dec
mov
jb
mov
push
xchg
xlat
repnz
jg
pop
pop
sbb
dec
lahf
cmp
ret
cmp
sub
xchg
andl
dec
lahf
lcall
fisubs
jge
jnp
cmpsb
out
mov
jg
add
xchg
push
jns
fsts
movsb
mov
mov
push
xchg
out
sti
icebp
jle
mov
pop
mov
sub
fucomip
mov
sbb
and
xlat
and
push
aaa
add
mov
insb
in
stc
cmpsb
sbb
xchg
ficomps
push
sbb
mov
out
lcall
pop
into
jbe
arpl
loop
nop
xchg
lea
arpl
mov
fwait
push
or
addr16
xchg
nop
call
xchg
adc
stc
and
dec
insb
add
mov
cwtl
pushf
mov
frstor
daa
dec
and
and
add
and
stc
xchg
js
xor
sbb
adc
ret
add
scas
pop
add
mov
xchg
dec
fisttpl
add
repz
jge,pt
pop
mov
aam
aas
test
daa
jo
add
repz
pop
add
cli
aas
jge
cmp
jmp
xchg
pop
iret
out
pop
fisttpll
pop
dec
xor
ss
pop
sbb
shll
cmc
push
je
test
idiv
add
jl
stc
push
jp
je
mov
xchg
cmp
cmpl
mov
pop
test
je
mov
shll
jns
dec
out
cmpsl
pop
bswap
push
out
aam
daa
xchg
jle
mov
stc
je
pop
cli
adc
add
push
int3
cs
cmp
add
fcmovnb
jb
test
mov
fsubr
jbe
inc
ss
pop
sahf
mov
fchs
jle
jb
fcmovu
and
test
in
and
icebp
ja
xor
xcrypt-ctr
cmpsl
sahf
cmp
cs
xor
xchg
adc
add
mov
mov
ret
lock
mov
call
push
sub
jge
mov
repz
repnz
sbb
mov
pop
in
pmaxsw
jns
mov
jnp
decb
pop
jb
xor
dec
into
adc
cmp
push
jmp
lods
test
xchg
xchg
clc
out
aaa
jns
xchg
xchg
pop
loope
inc
je
test
out
ljmp
pushf
in
fdiv
xchg
dec
repz
dec
dec
inc
popa
lret
jmp
pop
fnstcw
je
mov
test
mov
push
std
test
out
dec
cmpsb
stc
je
xlat
fisubrl
add
mov
mov
loopne
sarl
mov
ljmp
imul
push
mov
sub
xchg
push
xchg
jecxz
jmp
mov
add
mov
inc
pop
jbe
sti
jbe
je
out
and
pop
scas
je
je
clc
test
cmp
sbb
inc
mov
push
mov
outsb
stc
inc
out
mov
andb
inc
lahf
imul
mov
dec
stos
jle
scas
mov
icebp
pop
sar
sarb
shl
test
mov
add
out
jnp
mov
xlat
mov
sbb
jecxz
negl
jmp
test
cwtl
stos
mov
and
repnz
cltd
sub
repnz
inc
add
mov
xchg
jmp
xchg
xlat
pop
adc
mov
gs
pusha
cmp
andl
shll
in
out
pop
inc
jl
dec
add
jmp
add
push
icebp
repnz
repz
sti
mov
or
jb
shll
add
out
or
lock
ds
adc
pop
push
int3
adc
je
cltd
xchg
stc
mov
icebp
cmpsl
xchg
adc
je
push
stc
push
cmp
lock
int3
aaa
lahf
movsb
mov
test
jmp
push
inc
dec
jg
mov
add
les
andl
popa
fdivs
jbe
scas
outsl
into
lods
push
cli
push
divl
mov
sbb
sub
mov
mulb
cmp
cmp
dec
sbb
pushf
cmp
enter
mov
cmpl
aaa
jecxz
inc
call
or
xchg
fists
cltd
cmp
jne
ret
movsb
inc
mov
sahf
lock
dec
out
or
sbb
jmp
out
scas
sub
add
jbe
mov
and
andl
popa
inc
pop
pop
dec
xlat
mov
enter
aas
mov
adcl
mov
repz
or
cmp
mov
xchg
jns
dec
les
pusha
fs
xchg
push
inc
decl
xchg
mov
negl
ds
out
sahf
sub
stc
comiss
aas
push
push
push
jbe
push
push
int
push
dec
lret
aam
enter
cmp
mov
test
jmp
cwtl
shll
mov
mov
jae
jnp
lds
pusha
mov
popa
cs
mov
iret
js
and
push
lret
daa
in
pop
add
scas
test
cmp
sbb
inc
or
call
in
add
cltd
cmc
hlt
cwtl
pop
into
mov
sub
in
lahf
sbb
jae
mov
and
jecxz
in
and
cmp
in
repz
xchg
div
sbb
or
push
ja
test
lock
mov
mov
jle
xlat
cmp
add
pop
je
sub
shll
arpl
cmp
mov
cmp
mov
push
std
mov
add
mov
jge
inc
sti
insl
cmp
lret
ret
jge
cld
test
scas
dec
mov
jbe
pop
nop
sub
mov
xchg
decl
fisubs
iret
xchg
in
jge
shrb
mov
sbb
repz
fnstcw
ds
dec
enter
pop
jp
push
add
scas
mov
dec
cmp
sub
pop
aam
dec
push
xchg
ret
js
cmp
sahf
pop
shl
xchg
jnp
ds
in
in
xchg
outsb
mov
cmp
lcall
mov
and
fnstcw
push
arpl
jmp
mov
aas
fbstp
repz
icebp
mov
cwtl
xor
ljmp
sub
negl
lods
adc
fistpll
mov
adc
add
std
mov
daa
jge
push
adc
inc
imul
jge
push
pop
or
lcall
dec
jg
lock
lock
insb
rclb
dec
lahf
add
inc
sbb
mov
mov
mov
add
and
ret
jbe
xchg
dec
jle
fidivrs
cmpsb
mov
ja
jl
cmp
push
push
lock
add
pop
aaa
adc
cwtl
pop
cmp
aas
cli
pop
pop
aaa
cmp
jbe
testl
scas
loopne
and
push
xchg
aaa
mov
xchg
int
xchg
ret
bswap
fistps
call
fldcw
fildl
jecxz
fdivrs
gs
pop
and
idivb
push
pop
cld
notb
loopne
inc
adc
gs
xchg
sahf
leave
mov
inc
fidivl
xor
lret
adc
fs
xor
cmpb
jnp
in
xchg
cmp
inc
xchg
push
js
std
mov
ret
cld
xor
xor
xor
mov
imul
jl
push
hlt
daa
mov
jmp
hlt
and
jb
and
fwait
aam
fwait
stos
xchg
addr16
dec
fs
test
shlb
fcoml
mov
daa
call
paddusb
mov
xchg
movsb
sub
xchg
dec
cs
dec
std
fs
divl
sbb
insl
adc
scas
repz
cli
inc
mov
mov
clc
add
je
dec
pop
xchg
les
repnz
call
dec
pop
test
push
dec
hlt
push
mov
pop
jg
ljmp
fwait
loopne
hlt
ja
xchg
cmpb
dec
mov
mov
sub
dec
ljmp
adc
in
es
imul
scas
mov
add
mov
addb
add
das
lock
adc
test
addb
sbb
push
dec
je
dec
cli
dec
xchg
jg
sub
addb
lret
int
repz
xor
cld
shl
mov
pop
test
cmc
mov
leave
stos
mov
ret
cli
iret
ja
loop
test
and
iret
scas
xchg
movhps
enter
mov
stc
jle
lcall
mov
ja
xchg
icebp
test
fmull
xchg
xlat
fcoms
std
mov
pop
daa
fsubr
cmc
mov
shr
nop
jmp
cmpsb
push
daa
cmp
and
xchg
std
fs
jmp
dec
subb
sub
ret
fidivs
pop
inc
fbld
popf
xchg
dec
bound
nop
call
pop
pop
mov
pop
in
outsb
and
rcrl
mov
sbb
dec
pop
or
xchg
clc
add
pop
push
sahf
or
fiaddl
pop
push
rorb
scas
inc
fwait
lcall
jmp
xchg
test
adc
cmpsl
stos
pop
mov
pop
mov
xchg
cmp
and
stos
les
iret
and
movb
jne
ja
dec
stos
lret
lret
mov
xor
in
jne
daa
iret
jecxz
jb
ret
sahf
xchg
cli
cld
inc
out
fildll
stos
fnstsw
fistpll
std
lds
imull
xlat
xchg
fsubrp
cmc
frstor
inc
fldcw
inc
push
clc
push
iret
lea
inc
pop
jmp
insb
lret
jmp
out
and
in
decl
jmp
pusha
add
cld
int
mov
int3
jb
jge
stos
cmp
add
out
dec
out
in
std
lret
bnd
cmc
dec
ljmp
nop
cmpb
or
jge
mov
shrl
stc
cld
pop
clc
push
lock
shll
mov
dec
in
in
insb
shl
sub
mov
loopne
repnz
nop
ror
adc
pop
loope
aad
call
adc
push
adc
cmp
or
out
mov
mov
pop
dec
jp
cld
mov
xchg
cli
sti
cli
mov
mov
push
add
mov
jne
enter
sub
sahf
clc
xchg
sbbl
sub
mov
in
clc
sub
lea
in
repz
call
mov
test
push
fldt
popa
and
int
enter
sub
adc
mov
pop
iret
jecxz
and
in
push
movsb
out
jecxz
adc
jmp
enter
ljmp
fidivrs
xchg
insl
imul
mov
iret
in
jb
sub
xchg
add
out
mov
jp
mov
ljmp
adc
xor
sub
adc
ficoms
dec
jle
pop
or
jnp
push
jmp
sbb
xchg
movsl
pusha
lock
js
xor
clc
xor
push
push
inc
mov
jae
cmp
nop
lock
fcom
inc
loopne
cli
or
lret
and
call
subl
into
xor
adc
lret
pop
scas
scas
ja
ja
fcompl
xor
xor
imul
jp
pop
and
xchg
test
mov
inc
inc
sahf
mulb
cmp
out
das
mov
and
and
mov
dec
or
inc
jns
icebp
clc
notl
outsb
xor
rcll
mov
fistpl
pop
shll
fnstcw
lahf
std
xchg
pop
ret
pop
stos
adcl
dec
in
insb
call
lock
nop
fcmove
pop
iret
mov
fcmovne
iret
aam
ret
jo
jmp
jle
cli
jae
fcoms
std
push
dec
sahf
cmp
dec
lods
ret
pushf
nop
bound
push
and
seta
std
pop
sahf
cld
pop
movsl
loop
std
dec
jl
lds
bound
scas
dec
fstl
pop
enter
xchg
xchg
out
test
lret
dec
orl
fcmovb
mov
push
daa
repz
sbb
push
pusha
idiv
dec
shlb
xchg
inc
lods
out
adc
sahf
jl
scas
iret
enter
test
jae
daa
loop
lret
fucomip
fidivl
insb
out
scas
or
add
add
addr16
and
jmp
pop
scas
jmp
cmp
jnp
addl
xchg
mov
mov
mov
sbb
adc
pop
or
cmp
dec
jge
xchg
stos
cwtl
mov
and
loop
add
icebp
mov
repnz
iret
sbb
cmp
pop
dec
xchg
scas
ds
out
add
fcmovne
cmp
sbb
jmp
lods
jecxz
repz
xchg
pop
inc
jno
out
test
xchg
clc
mov
aas
gs
fwait
outsl
jo
out
out
sarl
lock
pop
mov
cld
cmp
loop
aad
cmp
inc
jecxz
sub
cmp
pand
sbb
or
xlat
pop
xlat
hlt
mov
or
test
pop
fwait
out
mov
mov
mov
pop
lahf
enter
and
or
sub
lcall
fcmovne
sbb
lea
lods
shl
out
into
out
unpcklps
iret
aaa
hlt
fwait
sub
sub
sbb
iret
cmpb
out
lock
push
outsl
mov
inc
jmp
jecxz
mov
scas
pop
jle
jl
imull
xlat
inc
sahf
aas
stos
xchg
mov
sub
fwait
out
ljmp
sarb
fistps
xlat
iret
sti
add
dec
or
into
cmp
out
ret
sar
icebp
stc
sub
jnp
lods
xchg
in
jp,pt
daa
jmp
pop
nop
movsl
sahf
push
popf
pop
je
mov
iret
adcb
clc
inc
fwait
movsl
outsb
jge
jno
add
mov
sahf
sub
ficompl
repnz
stos
adc
pop
out
jno
and
cmpsb
cmpsb
faddl
sahf
mov
jmp
mull
xchg
gs
push
jbe
add
sti
xchg
pop
aaa
das
mov
inc
cmpb
shl
insl
lods
xchg
cmpsl
notl
enter
cmc
sbbl
loope
stos
insb
adc
ds
stc
stc
in
pop
fstp
addr16
jns
mov
out
xlat
loop
push
xchg
rcrl
sti
add
cli
std
or
xlat
xor
repz
xchg
pop
loop
adc
push
mov
inc
in
jae
cmp
out
insl
xor
dec
cmp
cwtl
add
out
mov
and
adc
add
pop
and
adc
ljmp
sahf
movsb
fucomp
push
imul
mov
pop
loopne
inc
mov
stc
mov
aam
mov
jne,pt
mov
in
jmp
aam
fdivrp
cli
cli
out
aas
insl
cld
ss
mov
sub
jge
bound
push
std
rolb
pusha
mov
cmp
dec
je
cmp
lea
pop
nop
movsl
mov
out
xchg
mov
mov
hlt
inc
lock
and
lcall
sbb
jmp
mov
daa
xchg
xchg
gs
in
add
sti
pop
int
daa
jge
inc
cld
pop
push
jnp
push
out
mov
dec
lea
jb
adc
repnz
jl
push
movsl
sub
add
mov
pusha
xlat
inc
dec
jmp
cmc
js
test
ficompl
call
iret
dec
cmpsl
mov
ffreep
into
mov
xchg
ffree
psubq
lret
outsl
xor
xchg
xlat
xchg
mov
push
jb
loope
into
int3
mov
push
mov
inc
hlt
inc
add
cli
loop
cmpsb
orl
ds
das
js
lods
outsl
mov
add
add
lcall
mov
ljmp
mov
fdivr
fdivr
int3
ds
cli
pop
cmp
cmp
out
fdivr
xchg
hlt
cmp
fdivr
cwtl
stc
cmp
fsubr
in
xor
out
cwtl
in
in
xor
push
hlt
mov
iret
mov
cmpsl
jns
fnstsw
out
fcmovb
stc
jecxz
int3
dec
js
aaa
jg
movl
mov
mov
lds
clc
rcrl
pop
xchg
popf
sbb
xchg
in
sub
push
add
push
add
out
fsubp
push
jns
add
lds
in
xor
mov
fcoml
push
dec
add
dec
add
dec
jmp
nop
sbb
dec
add
dec
add
mov
xchg
pop
cmp
int3
push
mov
pusha
cmc
mov
aad
jbe
jl
dec
adc
jp
je
jp
sar
popf
inc
das
cmp
fstps
in
sti
dec
jb
and
fstps
fstpl
out
out
mov
cmp
fisubrl
lret
xchg
mov
into
pop
jle
out
push
jg
int
rorb
dec
fnstcw
stc
aaa
loopne
sar
out
je
test
js
repz
out
out
stos
mov
flds
mov
call
xor
push
cld
fisttpl
aad
addr16
push
out
cli
aas
jg
mov
test
cmpsl
out
in
iret
and
add
in
aas
inc
in
hlt
outsl
pushl
out
bound
out
stc
add
cld
sub
jle
mov
hlt
out
mov
negb
filds
idivb
fstpl
scas
loop
pop
fstpt
fdivr
mov
negb
adc
push
scas
std
mov
sahf
mov
add
mov
xor
popf
cld
in
sti
into
fbstp
jge
dec
mov
mov
rcr
negl
sub
mov
mov
xchg
out
mov
sti
cld
mov
jns
out
mov
ficomps
test
int3
std
neg
mov
in
jnp
adc
fists
fsqrt
fcomps
fidivrs
inc
adcb
fwait
xchg
xchg
lcall
int
mov
std
hlt
mov
fbld
idiv
cli
sub
ja
xchg
fdivrp
scas
mov
and
mov
js
jmp
mov
shrb
stc
out
cli
mov
repz
enter
mov
out
ds
shll
xchg
mov
add
mov
jnp
stos
sub
repnz
xchg
icebp
daa
outsb
out
ds
inc
sarb
out
sarl
jbe
out
ds
ljmp
push
mov
mov
jo
mov
movsb
scas
xchg
mov
and
dec
mov
stos
mov
mov
dec
in
xchg
out
mov
xchg
pushf
xchg
dec
push
dec
lret
je
dec
inc
xchg
cmp
loopne
int3
xchg
adc
jge
repnz
add
mov
out
enter
sub
fwait
mov
fsubr
in
nop
ja
cli
cmp
lcall
mov
outsl
fstl
cmp
lcall
mov
adcb
xchg
test
cwtl
lea
ficompl
dec
mov
push
mov
and
dec
repz
cmp
mov
sub
int3
scas
loopne
imul
lods
hlt
scas
out
cli
dec
sbb
sarl
lods
out
out
leave
sti
push
pop
repz
sahf
xor
in
xchg
test
out
xchg
sub
adc
push
cmp
dec
dec
jmp
mov
jb
jg
inc
movsb
pop
jae
mov
mov
lcall
pop
cmpsl
int
mov
adc
fucomip
jns
pop
fmulp
daa
jp
cwtl
out
or
mov
sti
in
push
xchg
dec
enter
cmc
xor
sbb
imull
pslld
xchg
sub
mov
in
in
jns
xchg
outsb
mov
sahf
pusha
and
pushf
mov
je
test
idivb
ds
xchg
xlat
xchg
xchg
push
mov
jle
idivb
lahf
xchg
scas
ficoms
pushf
cmp
loop
test
nop
lcall
sbb
sub
rol
inc
daa
mov
cmpsb
mov
movsl
lock
xchg
dec
andb
int
mov
insb
pop
popf
lret
and
nop
loope
sbb
xchg
push
adc
mov
push
and
in
xchg
cmp
incl
dec
cltd
aaa
mulps
out
test
xchg
dec
lods
insb
ret
push
mov
xchg
lret
out
xlat
ljmp
ljmp
push
cli
loopne
mov
lock
sub
mov
mov
xchg
aam
push
and
pushf
nop
sbb
dec
cmpps
pushl
in
mov
xor
loopne
shrb
push
into
and
and
mov
mov
mov
sub
pop
test
mov
cs
movsl
jnp
ljmp
in
test
fsincos
std
icebp
or
xor
adc
adc
invd
push
add
std
shlb
fcmovnbe
jne
jge
scas
testb
scas
out
cmpsb
push
cmc
idivb
cli
iret
scas
iret
enter
add
ret
pop
ret
jecxz
mov
jnp
ja
imul
rcrb
rorb
sarb
push
pop
add
aaa
shrb
daa
sarb
rol
iret
lods
iret
push
iret
inc
iret
jge
add
push
iret
repnz
jecxz
int
ror
into
lods
into
cmpsb
into
mov
into
mov
jge
add
dec
into
ds
push
into
add
std
int
int
int
int
int
int3
xlat
pop
add
lret
int3
mov
int3
pop
int3
inc
int3
fmul
mov
add
add
pop
lret
mov
lret
xor
pop
leave
push
leave
inc
leave
sub
enter
add
add
push
enter
enter
cmpsl
jns
add
rcr
outsb
popa
push
movl
sbb
push
inc
icebp
loope
rol
jge
add
mov
mov
int
mov
pushf
les
add
xorb
cmp
sub
adc
hlt
ret
mov
stos
ret
jno
pusha
ret
dec
ret
dec
ret
add
add
or
mov
ret
cmp
ret
or
movsb
rcll
mov
lcall
add
mov
iret
in
ror
xor
stos
bswap
push
into
out
mov
int
int
int
add
add
int
int
ret
jns
cli
shl
fld
lret
sarl
in
fadd
nop
rolb
ss
rclb
pushf
ror
ret
iret
jle
in
add
jne
push
iret
dec
iret
es
and
push
iret
adc
mov
into
mov
mov
push
into
dec
scas
ds
int
sub
decb
jp
sub
mov
lret
fxch
ror
leave
jb
cs
and
or
add
add
xlat
enter
enter
enter
enter
pop
aaa
movl
mov
lcall
addr16
sub
sbb
pop
inc
cmc
loope
fcmovb
aam
leave
lds
outsl
add
add
lds
lds
lds
lds
cmc
lock
call
mov
stos
les
add
pop
les
inc
les
cld
ret
mov
sbb
adc
ret
adc
add
andb
ret
push
ret
into
shrl
aas
sarl
aam
leave
rol
stos
rolb
rcrb
shrb
and
add
in
das
stc
mov
iret
jp
jo
bound
hlt
loopne
push
int
add
jmp
int3
dec
int3
xor
int3
cli
lret
loope
ret
add
lret
cmpsb
lret
mov
test
aad
mov
lret
lret
std
leave
leave
mov
mov
sbbb
in
enter
js
add
adc
cs
sub
sbb
or
clc
flds
mov
insb
arpl
ljmp
add
and
lds
lds
lds
in
aam
lret
pushf
add
cwtl
les
les
cs
loopne
fcmovnb
gs
push
pop
add
add
adc
or
test
ret
pop
das
shll
rcr
add
cmc
imul
into
in
into
out
fmuls
enter
dec
into
mov
into
sti
or
cltd
int
int
add
and
in
int3
in
xor
lret
in
push
fxch
ror
lret
mov
add
pop
mov
js
outsl
add
inc
lret
aas
lret
aaa
lret
das
lret
sub
pop
lret
fcmove
ror
cmpsl
leave
adcb
push
cli
adc
xchg
dec
enter
add
add
int
xchg
movb
cmp
pextrw
mov
clc
ret
push
sbbb
sub
ret
ror
pop
add
add
mov
rcll
outsb
rcr
mov
sub
adc
lret
iret
les
pop
adc
xchg
iret
pusha
mov
js
bound
push
int3
dec
lret
and
add
lret
leave
scas
leave
test
mov
leave
xor
pop
leave
adc
mov
and
enter
enter
mov
cmp
enter
enter
jl
jbe
add
add
dec
enter
sbb
pop
cld
jecxz
mov
stos
movb
and
adc
test
les
imul
lds
push
lds
lds
lds
lds
lds
add
xchg
je
addb
lods
and
dec
stos
or
jo
inc
add
les
lss
les
inc
les
les
inc
std
ret
icebp
ret
loop
lret
xorb
cmp
ret
add
ret
dec
ret
daa
push
in
ret
add
rcr
rcr
cmp
mov
push
stos
shll
jl
jae
arpl
pop
rcll
das
add
pop
inc
roll
dec
xor
shrl
and
adc
rol
pop
dec
xor
sarb
cld
rol
add
out
pop
rclb
shrb
mov
mov
and
in
iret
fxch
iret
rorb
iret
scas
iret
stos
and
iret
or
insb
push
pop
add
inc
iret
cmp
or
test
mov
into
popl
add
xchg
sbb
dec
into
inc
into
sub
out
int
int
int
rorl
shl
push
int
int
int
int3
call
nop
ror
ret
int3
ljmp
mov
mov
int3
jg
jae
out
add
add
lret
loop
ror
mov
leave
test
pop
leave
lock
enter
jle
les
lret
jmp
fildll
and
add
fadd
imul
sub
adc
fnsetpm(287
push
dec
cmp
sub
inc
cmpb
lds
or
ret
iret
ret
or
mov
ret
jl
jb
imul
sub
add
sub
and
sbb
ret
das
ret
sbb
or
add
xlat
sarl
pop
sar
shlb
rcrb
rorb
adc
shrb
out
lahf
sub
iret
ror
add
mov
iret
out
scas
pop
and
repz
fbstp
pushl
ud0
js
pop
test
in
in
pop
mov
xchg
inc
xchg
clc
and
inc
out
mov
inc
ljmp
je
orl
inc
jmp
inc
addl
lock
mov
iret
jg
sahf
dec
clc
lahf
ljmp
cmp
mov
repz
push
mov
lcall
xchg
cs
pop
nop
movsb
fisttps
shl
sar
daa
mov
mov
es
daa
mov
std
ljmp
ljmp
cmpl
cmp
fdiv
fistps
in
mov
loop
std
and
loope
ljmp
push
pop
into
or
cmp
cwtl
bnd
int
test
cmp
mov
bound
cld
jg
sub
mov
movsl
mov
rorl
jge
pop
cld
mov
dec
mov
stos
nop
inc
clc
xchg
xchg
cld
test
es
mov
mov
mov
stos
adc
rorl
jbe
stos
mov
movsb
into
adc
jb
shl
popf
nop
sti
fbstp
mov
in
mov
push
les
stos
lods
pop
jne
scas
loopne
rorb
cmp
lods
mov
in
mov
mov
fildll
jl
mov
mov
popa
stos
nop
jne
fmuls
stc
cmpsb
inc
mov
mov
repz
inc
jmp
out
scas
fstpl
fidivl
mov
or
xlat
cmpsl
cmc
mov
dec
mov
aaa
jmp
scas
pop
dec
xor
dec
sbb
cmp
jb
repnz
lret
cmp
clc
pop
mov
testl
push
fimuls
jp
stc
sub
popf
icebp
push
xchg
and
mov
scas
push
and
cmp
mov
fmull
mov
mov
scas
sub
sti
adc
jecxz
lahf
fists
stc
inc
into
push
pop
ja
adc
cmpsb
adc
mov
dec
repnz
push
xchg
push
push
mov
mov
incl
dec
add
jl
paddd
jns
sub
mov
jne
rcrl
fdiv
xchg
push
daa
jl
insl
and
inc
dec
popf
out
mov
lods
test
pop
notl
lock
roll
out
pop
push
ds
mov
repnz
dec
out
les
xor
movsb
insb
loop
ret
cmc
fdiv
xchg
mov
das
dec
ja
cmp
pop
sbb
or
inc
or
out
stos
aam
xchg
dec
jge
ljmp
fldcw
xchg
idivb
adc
mov
xchg
mov
and
in
push
pand
xchg
out
push
push
mov
scas
addr16
xchg
icebp
hlt
in
cmp
pop
push
adc
mov
sbb
cs
sub
sub
mov
xchg
rclb
loopne
mov
leave
dec
mov
xchg
mov
mov
mov
pop
fbld
movsb
pop
popf
jecxz
pop
cmpsl
mov
sub
sti
roll
ljmp
jl
sti
repz
push
cwtl
lcall
jmp
fnsave
sub
xorb
jb
dec
xchg
movsb
cwtl
movsl
fnstenv
popa
scas
sub
sbb
aaa
sbb
adc
jb
es
out
inc
xchg
stc
aad
jbe
scas
inc
std
mov
mov
popf
mov
pop
adc
fisubrs
fidivl
push
sbb
jo
rorb
xchg
stos
cltd
decl
clc
shr
hlt
push
fdivrl
into
jbe
cmp
and
pop
or
lock
call
js
mov
sarl
xlat
test
add
dec
xchg
scas
xor
insb
sbb
mov
sbb
insl
das
lods
fists
mov
jge
mov
mov
inc
nop
mov
cwtl
icebp
lret
mov
scas
fsubrs
fistl
clc
inc
ret
mov
out
lea
lods
jle
call
shl
mov
in
stc
mov
or
decl
cli
repz
js
pop
xchg
fisubl
lret
ret
in
scas
ss
cli
stos
out
inc
outsb
jne
cld
stos
inc
stos
frstor
fistpll
outsl
cmpsl
mov
into
pop
mov
idivl
mov
jge
sbb
out
fucomp
arpl
dec
fisttpll
jae
xchg
add
sar
inc
inc
lock
xchg
nop
inc
repnz
mov
pop
out
orl
mov
popf
fisttpll
push
cmpsl
repz
incl
mov
push
lahf
fwait
push
push
push
push
pop
cmp
in
stc
push
add
outsb
dec
cmc
push
push
dec
jmp
dec
mov
xchg
mov
mov
and
pusha
pop
pop
cmp
jge
sbb
incl
movsb
mov
aad
mov
in
pop
push
inc
mov
imull
adc
and
and
lods
hlt
rclb
xor
inc
iret
stos
aaa
shrb
jl
out
les
push
aaa
jns
out
xor
gs
xorl
jno
outsl
test
fildll
jg
enter
lcall
xchg
sub
inc
enter
in
mov
mov
ljmp
mov
xor
es
lcall
sbb
sbb
push
mov
adc
fldl2e
cli
fadds
leave
std
jo
dec
cmp
push
out
push
push
lret
std
scas
dec
icebp
jmp
cmp
mov
cli
lret
jbe
mov
jg
sti
pop
aas
clc
sub
push
fdivs
jb
scas
cmc
xchg
mov
push
ss
cld
pop
sub
push
cmp
stos
dec
jle
sahf
pop
mov
or
jle
jb
neg
jg
pop
jp
xchg
lret
imul
xchg
shr
add
cli
sarb
repnz
xchg
incl
sarb
jge
outsb
lret
mov
daa
pop
and
xchg
scas
pop
shl
mov
fistpll
stos
push
xchg
cmp
ror
stos
sbb
cmp
jbe
decl
cltd
xchg
mov
sti
cmp
stos
adc
cmp
out
xor
fimuls
and
lret
test
jmp
ljmp
xchg
push
add
mov
pop
lock
test
jbe
jns
dec
negl
pop
mov
sbb
div
dec
mov
jbe
jnp
inc
inc
push
divl
mov
in
mov
sti
repz
xchg
rcrl
jae
sti
pop
fucomp
std
call
iret
jle
dec
fucomip
fdivrp
movsb
cmp
adc
fbstp
daa
mov
jg
stos
cmp
fwait
xchg
cld
jne
dec
jne
pop
test
rcrl
mov
cmpsl
sub
mov
repz
in
outsl
sbb
out
repz
sti
fdiv
cmpsl
sub
mov
ja
fcomps
in
fbld
inc
lahf
fildll
stc
repz
shlb
in
mov
mov
push
div
stos
add
stos
mov
jae
jg
jl
lahf
jmp
sub
mov
out
movsb
jnp
mov
jmp
rcrl
jne
in
call
adc
pusha
jge
testl
mov
icebp
je
stos
xchg
fsubr
pusha
mov
push
mov
fstpl
push
fmuls
mov
mov
cmp
mov
roll
stos
pushl
mov
push
mov
jle
std
out
and
ja
out
data16
mov
outsb
repz
mov
std
xor
sar
ds
icebp
sbb
call
push
inc
div
lahf
cld
inc
daa
sarb
mov
js
mov
lret
clc
test
xchg
daa
lahf
call
mov
shld
divl
in
pop
aad
ret
lret
mov
lret
inc
aaa
scas
pop
movsb
mov
mov
adc
rep
fisttpl
xchg
hlt
into
clc
xorb
pop
std
xor
jbe
daa
ja
pop
adc
repnz
jl
stc
or
sub
cld
lret
cmp
das
ljmp
jl
pop
scas
mov
mov
xchg
test
daa
lcall
sbbl
scas
mov
leave
xchg
cwtl
out
mov
jle
pop
xlat
insl
mov
je
push
out
mov
nop
sbb
adc
rorl
mov
cmc
in
in
mov
insb
lcall
mov
xor
cltd
xchg
cwtl
mov
dec
repnz
nop
xchg
and
cltd
jne
jns
mov
ja,pt
cmp
repnz
sub
mov
clc
or
mov
call
mov
push
mov
mov
mov
out
mov
es
sub
add
jg
enter
daa
iret
call
push
pop
lahf
cmp
std
scas
in
cli
dec
stos
adcl
mov
jp
lods
divb
mov
mov
sar
sti
adc
inc
decb
nop
sti
push
inc
cld
or
movsb
sar
fidivl
mov
mov
arpl
clc
sbb
repnz
outsb
xchg
je
sbb
inc
cld
lret
sub
iret
sbb
mov
shl
leave
je
mov
lcall
xchg
fdivr
mov
dec
cwtl
mov
cmp
sub
mov
mov
loopne
stos
xlat
ljmp
leave
push
lahf
and
rorb
es
iret
cli
and
enter
and
int3
xchg
push
lahf
bound
loopne
hlt
cwtl
adc
or
out
popl
cwtl
jo
jmp
jmp
push
int
enter
cmc
xlat
mov
adc
clc
fwait
lock
clc
hlt
xchg
cli
in
dec
fdivs
dec
fwait
js
xchg
push
jb
inc
mov
inc
mov
loopne
out
and
nop
lock
fneni(8087
xor
lods
loop
push
adc
lcall
xor
inc
ficompl
call
xchg
test
lcall
jb
dec
sti
std
pop
dec
xchg
enter
add
int
int
int
int
push
push
int
int
int
int3
mov
int3
jo
inc
int3
les
lret
and
add
mov
icebp
lret
xchg
lret
push
lret
cmpsb
leave
fwait
leave
xchg
leave
ja
out
inc
mov
xchg
xchg
enter
mov
add
enter
enter
enter
xchg
xor
cli
add
out
outsb
adc
add
lds
lds
nop
out
add
adc
lds
mov
mov
ret
out
mov
loop
iret
ret
cmp
ds
ds
movsb
std
shl
nop
cli
movsb
jb
ds
rcll
rcll
negl
jmp
inc
push
test
mov
dec
ljmp
jg
mov
lods
dec
movsl
or
fcmovb
nop
cltd
lock
sahf
shll
sub
lret
mov
sahf
stos
test
into
rcr
out
mov
rcrb
mov
aad
scas
mov
dec
pop
pop
vandnps
jno
mov
pop
dec
xlat
call
scas
ficompl
mov
mov
jnp
aas
stc
mov
jl
push
pop
decb
out
popf
cmpsl
loop
pop
inc
repnz
lods
jmp
push
les
decl
jnp
dec
pop
jecxz
dec
clc
popl
pop
cmp
hlt
mov
inc
sarb
scas
inc
pop
mov
cmpsl
mov
xchg
or
cltd
loop
pop
mov
out
dec
lds
lock
fisttpll
outsl
rcrl
jl
test
out
aas
cmc
xlat
jp
ja
in
iret
sub
fdivrs
lret
iret
pop
cmp
cld
and
shrb
xchg
jmp
idiv
incl
jmp
add
inc
add
call
int
jmp
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
pusha
mov
mov
xor
mov
inc
cmp
jb
popa
jmp
