sbbl
cmpsl
cld
mov
pop
pop
xchg
gs
dec
aas
das
sbb
xor
sarl
sub
mov
jae
gs
push
sub
mov
dec
cmp
sbb
mov
lahf
cld
scas
ror
gs
add
jns
insl
cld
arpl
incl
out
jmp
add
mov
lea
rcrl
js
js
xchg
repnz
stos
mov
out
adc
add
lcall
lea
cwtl
lcall
lcall
mov
fimull
xchg
lcall
xchg
xchg
sahf
adc
dec
adc
out
lcall
daa
mov
int
rcrl
cmpsl
lcall
ret
jmp
lock
fwait
fwait
shlb
testl
pushf
adc
lret
hlt
mov
in
add
es
lret
je
jle
xchg
idivl
jg
and
movsb
sub
adc
pop
test
mov
test
por
push
lods
cmp
mov
lcall
aaa
mov
hlt
xor
push
movsb
shll
xchg
xor
and
push
sub
mov
xchg
inc
xchg
sub
sub
daa
mov
es
enter
mov
cld
push
mov
cld
mov
mov
sbb
mov
rorb
cld
adc
call
mov
lret
or
and
mov
or
pop
push
mov
add
dec
add
cld
add
xchg
scas
add
jl
cld
pop
cmp
pushf
adc
out
mov
pop
aaa
out
jo
int3
or
pop
les
mov
add
imulb
je
adc
je
idivl
mov
int3
aas
adc
jb
addr16
cmp
adc
pushf
cli
xlat
stos
scas
test
ljmp
movsb
dec
and
inc
ljmp
jmp
dec
and
and
in
icebp
repz
out
pop
rolb
mov
or
mov
je
aas
repnz
mov
jl
jecxz
insb
ljmp
add
sti
xchg
mov
inc
or
in
test
adc
mov
test
loop
inc
mov
mov
cmp
xchg
stc
paddw
decl
dec
adc
cld
xchg
mov
dec
mov
dec
icebp
test
inc
int3
and
or
loop
inc
dec
xor
fbld
pop
les
test
shrl
or
dec
xchg
loop
out
jl
mov
jb
and
mov
scas
repz
jmp
sbb
movsb
dec
mov
fdivrs
mov
popf
test
call
mov
and
sub
lcall
stos
les
push
test
repz
fsubr
repnz
out
pop
scas
jae
sub
cmpsl
dec
iret
in
xor
test
data16
mov
xlat
bnd
repz
loopne
repnz
jo
dec
shlb
testl
cmpsl
pop
dec
inc
in
in
repz
cmp
jns
enter
sti
movsl
xor
int3
addr16
xchg
hlt
jecxz
inc
mov
neg
lcall
aaa
leave
sahf
ss
mov
dec
mov
hlt
idiv
mov
fwait
mov
out
cmp
pop
push
adc
and
or
clc
fcomip
je
push
popf
dec
cmp
sub
in
stos
jmp
add
pop
jp
out
stc
jne
sub
mov
mov
jmp
loopne
sbb
aas
jge
fidivrs
stos
dec
pmulhw
dec
jp
cld
std
ljmp
iret
jmp
lock
ljmp
jmp
jb
push
stos
pop
in
xchg
xchg
lods
out
cli
inc
sub
and
jb
ja
cli
movsl
in
mov
aad
pop
or
fildl
dec
test
cmp
aam
pop
add
outsl
ljmp
push
pop
and
cmp
ds
mov
scas
and
mov
lods
cmp
inc
mov
mov
mov
mov
stos
fsubs
pop
enter
out
pop
dec
shrb
or
or
sti
test
add
repnz
add
sub
mov
mov
or
lods
test
jb
jmp
scas
sti
jg
pop
out
aas
inc
out
inc
adc
loopne
inc
push
repnz
cltd
push
inc
xor
lods
push
daa
and
add
xchg
or
movsb
jne
cld
js
and
clc
lret
xchg
push
ljmp
xlat
dec
mov
pop
popa
inc
jecxz
ds
pop
and
cmp
dec
test
loope
mov
ljmp
cli
sub
iret
test
adc
lods
dec
cmpsl
xchg
ljmp
jns
out
cmp
dec
call
jne
cmpsl
mov
adc
and
sub
add
xchg
jae
adc
sub
cmp
test
inc
pop
cmpsb
add
dec
lret
movsb
dec
stc
fimuls
mov
lret
mov
cld
mov
mov
lret
lcall
mov
mov
mov
xchg
cmc
mov
pop
jmp
cmpsb
mov
add
cmpsl
jbe
dec
cli
hlt
adc
pushf
loope
lods
pushl
cld
ljmp
ss
imul
into
sbb
scas
or
out
inc
ljmp
hlt
jno
inc
fwait
or
sub
add
aaa
cli
mov
adc
in
stc
xor
xor
rorl
dec
xor
js
xchg
ja
cs
lods
in
xchg
in
inc
add
add
adc
mov
xchg
sub
jb
ljmp
test
cld
add
mov
ds
aas
cli
lret
xchg
mov
cmp
inc
jnp
lea
cltd
clc
je
pushf
cmp
lock
pop
loop
add
xor
popf
xor
mov
fwait
pop
add
imul
in
sub
push
sub
xchg
repnz
aas
inc
test
add
add
push
ljmp
cltd
add
push
or
pop
push
xor
xlat
das
xchg
inc
push
and
inc
dec
xlat
inc
and
insl
jb
adc
hlt
xchg
dec
test
or
fcoml
hlt
leave
xlat
push
xchg
hlt
in
fcomi
dec
or
mov
nop
cmpsl
xchg
gs
xchg
mov
mov
shrb
mov
hlt
xchg
push
int
cmp
ds
cmp
sub
jg
jmp
cmp
jmp
and
cmpb
add
mov
jns
xchg
push
cmp
daa
push
jl
aaa
xchg
jae
pushf
shr
xchg
add
push
mov
shll
outsl
add
scas
daa
dec
adc
stc
pop
mov
popf
shl
xchg
cld
ret
jno
popf
subl
fnsave
jnp
ja
scas
insl
jl
ds
mov
popf
inc
add
jb
scas
stc
pop
inc
scas
cmp
xchg
mov
push
ret
out
je
cmp
in
lods
fadd
fwait
dec
pop
jns
cs
sbbl
lds
inc
pop
xor
int3
jl
jno
adc
popl
push
adc
adc
movhps
ret
inc
jle
enter
pop
repz
or
sub
int3
mov
mov
ficoml
dec
enter
add
mov
xor
sub
jge
lahf
ret
jmp
hlt
daa
std
sub
out
xor
out
jae
outsl
jb
jl
outsl
cli
imul
scas
ret
sbb
sub
rorb
test
mov
aam
je
repz
push
movsb
lahf
jbe
sbb
mov
std
daa
push
xchg
in
xor
mov
fcoms
jl
mov
mov
aad
cmpsl
dec
ja
add
and
mov
mov
mov
cmc
imul
push
nop
mov
sti
stos
cmpsl
cmp
mov
std
jmp
push
push
repnz
in
cld
ljmp
pushl
lahf
jl
inc
sti
cld
add
inc
loopne
mov
pop
cld
icebp
loopne
icebp
decl
xor
inc
mov
stos
xchg
add
push
nop
cwtl
lea
xchg
xchg
nop
mov
popf
lcall
mov
mov
fists
repnz
fstpt
imul
cld
push
push
inc
data16
cmp
loopne
adc
dec
data16
adc
testl
xchg
enter
adc
scas
mov
out
jbe
dec
icebp
fdivp
dec
adc
es
stc
repz
clc
sar
out
cld
lcall
call
lahf
push
aad
out
clc
pop
cmp
stc
incl
test
jp
mov
mov
sti
mov
push
or
popf
mov
add
lahf
jg
rcrl
aas
in
lods
add
adc
lea
cmp
std
jecxz
fcomps
hlt
mov
ds
into
or
das
sbb
xor
fs
loopne
rclb
sar
cmp
adc
iret
add
aad
mov
mov
gs
xchg
gs
dec
inc
xor
push
xchg
mull
mov
push
inc
pop
cmpsl
jno
test
fwait
stos
mov
cwtl
gs
imul
sub
xchg
sahf
sar
into
and
cli
loop
dec
fidivl
dec
fisttps
iret
int
aad
int3
fstl
rclb
addr16
or
cli
xchg
ret
mov
in
fldenv
inc
xlat
jle
xlat
jp
pop
xor
imul
data16
repz
or
in
out
out
xchg
idiv
shll
frndint
cmc
jmp
test
jmp
mov
jmp
arpl
jmp
mov
jmp
out
fs
jmp
aaa
out
jmp
stc
jmp
out
daa
mov
out
jecxz
mov
pop
and
daa
xor
dec
mov
cmc
add
ficoml
int
test
or
test
xor
ret
mov
jl
out
jne
cmp
stc
mov
test
scas
cmp
sub
lock
inc
add
rcl
cmp
stos
pushf
and
in
lahf
dec
scas
stc
pop
fucomi
xchg
out
jnp
mov
sub
inc
lahf
js
aas
sub
mov
rorb
mov
pop
sbb
in
gs
xor
sbb
pop
add
lret
sbb
push
fbld
repz
int3
and
mov
fwait
fwait
dec
imul
lret
jg
les
out
lods
pop
pop
aaa
dec
and
in
inc
stc
pop
rolb
mov
jmp
add
dec
xlat
mov
loop
sti
notb
mov
out
mov
mov
scas
outsb
sbb
lahf
jnp
mov
lock
faddl
inc
ret
inc
out
idivl
pop
cli
testb
or
cmp
cld
mov
insb
int3
jne
in
test
add
adc
cwtl
dec
out
je
jns
mov
inc
mov
pop
fwait
rclb
bound
xchg
xchg
mov
loope
adc
lcall
inc
out
cli
sbb
test
dec
pop
fidivrs
test
push
lods
adc
mov
ret
mov
hlt
cs
inc
jbe
add
int3
inc
sub
hlt
jle
pop
test
js
dec
lock
test
adc
push
xchg
aad
add
jbe
mulb
cmp
and
push
or
clc
or
aad
call
pusha
mov
int3
imul
sti
dec
adc
call
ljmp
mov
dec
in
inc
or
cmpsb
in
add
test
mov
notl
adc
pop
stos
adc
inc
js
sub
pop
iret
loop
lret
iret
cli
push
push
and
xchg
sub
loop
fdivr
in
fistpll
and
mull
xchg
sbb
xchg
mov
jp
movsl
cli
mov
rol
xlat
mov
inc
aas
mull
fidivl
lret
pop
jge
stos
jl
or
adc
cmpb
jmp
dec
and
addr16
jmp
inc
lret
add
pop
ret
in
cmp
xor
add
repnz
dec
push
and
lods
std
xchg
cmpsb
scas
dec
xchg
dec
dec
loop
shlb
or
cmp
mov
lahf
xchg
pop
sar
fwait
pop
test
inc
mov
and
clc
sbb
fwait
nop
jbe
pop
shll
xchg
shll
rcrl
xchg
lret
shll
xchg
xchg
lret
and
cwtl
lret
mov
clc
and
pop
lret
push
sbb
sbb
int
outsl
add
push
mov
xor
dec
sub
aaa
scas
cli
daa
scas
in
inc
mov
shll
jmp
or
cli
pop
xchg
not
lret
in
shr
sub
xor
inc
ret
xor
lods
lods
cld
cmpb
adc
out
stc
adc
aad
push
out
out
push
div
cmpsb
jns
stos
jecxz
mov
pop
and
or
subb
pop
pop
add
jl
sub
jmp
fcomi
xchg
mov
mov
je
cltd
jle
inc
add
xor
ret
jle
idivb
in
mov
push
scas
popf
pusha
jbe
pop
push
les
add
mov
lock
and
out
xorb
jl
in
dec
add
mov
mov
push
repnz
loope
cmc
cld
add
and
je
cld
mov
scas
mov
add
cld
jg
lods
in
aad
xchg
mov
cmp
sbbb
jl,pt
std
scas
and
pop
fildll
jl
sti
jl
adc
sbb
add
iret
cmp
mov
mov
jbe
fwait
push
aas
and
adc
repz
cli
je
ja
or
out
jno
mov
add
lahf
jb
imull
adc
adcl
test
cmp
adc
mov
je
imul
and
movsb
xchg
cltd
outsb
mov
cltd
out
adc
cmc
xchg
nop
bound
hlt
sti
mov
mov
loope
std
mov
sbb
adc
pop
pop
imul
testb
jbe
in
jmp
cld
mov
outsb
cld
mov
push
xchg
and
cld
mov
mov
xchg
je
sbb
mov
or
leave
mov
mov
stos
lods
add
cmpsb
cld
sbb
xor
add
sbbl
je
add
pop
and
rcll
cld
mov
rcl
fildl
popl
add
mov
cmpsb
xrelease
ja
mov
je
xlat
cmp
xchg
mov
int3
je
aaa
add
jl
jecxz
cmp
push
pop
jne
movsb
stc
pop
adc
movsl
sub
popf
in
xor
enter
lods
out
mov
gs
pushf
pushf
std
dec
jle
cld
lods
arpl
test
cmp
icebp
xor
xchg
xchg
sti
xchg
int3
lods
sbb
mov
insb
ficoms
mov
add
cmc
notl
scas
add
mov
mov
cli
and
cmp
cmp
mov
je
jns
je
ret
mov
or
movsb
mov
pop
xor
fsub
adc
repnz
inc
iret
je
adc
mov
or
cld
pop
jecxz
dec
out
fldl
mov
clc
or
jmp
jmp
repnz
imul
pop
mov
pop
cmp
mov
fbstp
addr16
clc
fucomp
jle
pop
repnz
and
and
ret
arpl
jne
cmp
mov
cmpsb
adc
jb
dec
not
jg
xlat
data16
cmpsb
imul
test
daa
or
or
pop
push
push
jle
subl
add
mov
std
inc
test
dec
mov
jl
shr
add
notb
test
lea
pushf
dec
xor
mov
repnz
pop
shr
iret
pop
xchg
sbb
sub
and
cli
xor
mov
dec
adc
mov
xchg
mov
or
push
sti
js
cli
add
fs
add
xchg
aaa
jae
add
aas
dec
dec
dec
shll
repnz
cli
inc
in
pushf
in
lcall
jg
jg
fcompl
enter
shl
in
rol
lahf
in
mov
stc
adc
xchg
neg
push
in
push
fbld
mov
mov
xchg
fwait
xchg
lcall
mov
pushf
mov
mov
add
xchg
popf
lea
sbb
nop
fwait
mov
add
mov
xchg
lcall
dec
rorb
xchg
rol
cmpsb
icebp
sahf
mov
sub
pop
jmp
mov
loop
xchg
xor
in
xchg
mov
sub
cwtl
xchg
loop
jnp
test
xchg
mov
sbbb
test
xchg
jecxz
lea
and
jl
xchg
lcall
lcall
fwait
enter
les
lea
lock
lret
dec
cld
scas
mov
and
and
pushl
jb
xchg
nop
jns
mov
testl
ss
nop
mov
sub
xchg
rcrb
xchg
mov
fdivs
fidivrs
jge
pop
mov
leave
sub
and
mov
sub
cltd
stc
lcall
and
xchg
xchg
repz
mov
popf
pop
jp
dec
clc
jmp
jo
int
xor
aad
lea
stos
nop
nop
xchg
xchg
data16
out
xchg
sahf
mov
sahf
out
jns
mov
dec
mov
jle
rorb
decl
les
pop
dec
jp
shl
test
mov
lods
mov
aam
ret
rcll
std
fmuls
and
lods
in
call
nop
adc
lcall
mov
mov
iret
xchg
jp
jl
dec
lret
mov
pushf
nop
mov
sbbb
stos
mov
cltd
xchg
dec
and
sbb
lods
ljmp
jp
xchg
inc
mov
sub
ljmp
and
out
inc
jnp
test
cmc
cwtd
dec
outsb
jbe
mov
sub
xchg
xlat
int3
in
data16
cmc
dec
push
dec
add
fsubrs
idivb
std
push
std
dec
jo
mov
xchg
mov
push
into
fdivs
mov
mov
add
xchg
into
test
ja
push
arpl
xor
pop
into
add
ljmp
push
iret
int
mov
lahf
int
int
int
int
int
int
int
int3
ljmp
add
int3
mov
int3
push
int3
add
icebp
lret
loopne
lret
jae
gs
push
lret
out
lret
movsl
das
add
add
xchg
lret
jo
adc
sti
leave
out
leave
out
pushf
leave
popa
leave
cmp
sub
adc
pop
add
add
leave
jmp
in
fcmovne
aam
leave
enter
enter
enter
enter
fadd
add
add
cmpsb
sahf
xchg
movl
inc
loop
mov
les
les
test
ret
rol
ret
xchg
ret
dec
ret
inc
ret
aas
ret
fadd
enter
or
add
ret
imul
ret
push
ret
or
scas
incb
add
stc
punpckhdq
arpl
and
lahf
insl
cli
das
clc
push
mov
cli
sub
ret
enter
cli
and
or
sbb
and
and
popl
cli
adc
cli
sub
push
mov
cs
sub
lock
cld
jmp
mov
jg
jg
mov
cmc
dec
stos
push
scas
jg
jp
stc
aaa
aaa
push
push
and
aas
ljmp
lods
adc
lock
push
in
aas
add
aas
push
adc
ds
push
cld
jae
std
aaa
enter
xchg
gs
push
cld
pop
outsl
jg
mov
mov
int
jmp
mov
mov
cmp
ds
mov
jno
fsubrl
aam
cld
mov
pop
pop
xchg
gs
inc
xor
stc
aas
in
push
inc
cld
shrl
xchg
jns
pop
pop
pop
xchg
gs
cmp
pop
movsb
add
mov
pop
xchg
gs
xchg
test
dec
and
gs
dec
rclb
shll
pop
jns
pop
dec
cmp
sbb
jecxz
mov
cmp
das
inc
xchg
sub
mov
imul
sub
cli
pextrw
mov
cld
popf
cltd
lock
in
mov
dec
fs
sarl
mov
mov
mov
lret
jnp
addr16
push
sub
mov
dec
aas
xor
int
sbb
mov
jge
inc
jns
hlt
lods
push
sar
fwait
jmp
out
gs
mov
ret
cmp
cmp
loopne
aad
mov
inc
push
xchg
sub
mov
mov
mov
dec
jg
mov
scas
mov
xchg
test
enter
and
in
mov
mov
mov
shrl
cltd
sldt
mov
lods
mov
stos
test
lods
mov
inc
xchg
mov
mov
mov
repz
xlat
aas
or
pop
cwtl
mov
push
scas
mov
int
cld
jg
mov
negl
pusha
fsub
adc
cld
out
push
in
gs
lahf
mov
stc
in
mov
lahf
pop
outsl
mov
mov
cmpsb
fbld
fbld
mov
pop
js
int
call
lods
idiv
dec
cld
jnp
dec
sahf
mov
shl
es
xchg
inc
std
fildll
stc
idiv
notl
cld
add
fstpl
aas
jns
incl
int
or
cld
mov
insb
mov
push
loopne
sahf
dec
es
negl
mov
push
repz
jg
shlb
cmpsl
push
in
insl
fisubrl
fucomip
sub
iret
lock
test
xchg
test
jb
mov
sub
pop
mov
and
mov
lcall
loop
mov
lock
mov
lcall
hlt
call
stos
fbstp
hlt
mov
ds
inc
andb
cwtl
lock
aas
add
cmpsl
cld
fdivr
and
fisubrl
rorl
xchg
dec
cs
clc
in
jmp
neg
pop
mov
mov
mov
inc
add
xchg
mov
sar
scas
cmpsl
cmpsb
rol
and
cmc
clc
mov
stos
jb
in
rcrb
mov
xchg
jns
dec
mov
mov
cld
nop
mov
loopne
stos
xchg
dec
ja
dec
mov
mov
or
pushf
xchg
rcrl
ja
fs
xchg
fs
sahf
xchg
ja
dec
dec
fcoml
push
inc
loopne
mov
jp
adc
cli
lock
je
cli
push
sbb
mov
incl
xchg
incb
lods
adc
sbbl
cli
and
mov
hlt
ja
fisttps
or
sub
adc
repnz
jnp
mov
cmc
outsl
divl
sbb
in
enter
cmpsb
or
mov
lea
cmp
xchg
lret
mov
pop
cmp
mov
sahf
les
mov
mov
loop
push
jb
int3
or
push
ficompl
in
mov
xlat
addl
xor
push
fistpll
cld
loope
mov
cmp
pop
lea
scas
out
fisubrs
aad
mov
mov
inc
ret
addr16
lock
iret
mov
lods
mov
mov
mov
cmpl
adc
add
lock
jge
dec
sbb
arpl
mov
adc
cli
mov
loope
xchg
aas
push
cli
fwait
test
xchg
popf
xchg
mov
sub
in
out
add
mov
cs
repnz
dec
adc
stc
jbe
sbb
add
and
sbb
cmp
push
je
aam
jl
cli
jbe
cmp
repz
and
jl
repnz
xchg
outsl
xchg
jb
mov
int3
ja
dec
xchg
add
mov
cltd
cmc
xor
sbb
sub
std
stc
jnp
push
enter
or
mov
daa
arpl
movsl
add
jle
testl
inc
xchg
fiadds
out
inc
test
addl
repz
inc
lock
mov
sbb
out
roll
inc
or
jp
decb
lcall
adc
test
shlb
cmpsb
jl
out
cmpsb
addl
and
jg
cmpsb
xchg
ss
jl
jne
fmul
mov
fdivl
push
fmul
clc
sahf
ja
out
fcoml
fsubr
ljmp
stos
inc
mov
sbb
jg
out
mov
hlt
mov
jl
fdivl
xor
je
fistl
jl
loopne
jle
fdivs
xlat
clc
push
jne
insl
mov
inc
sbb
mov
out
pop
mov
sub
fistl
mov
iret
es
mov
mov
repnz
xchg
test
jl
jg
push
cmp
mov
add
xor
or
movsb
mov
mov
sub
dec
add
sbb
sbb
add
mov
jmp
sbb
jmp
icebp
shl
mov
jl
jp
and
decb
mov
mov
jl
es
insb
sbb
pop
leave
icebp
imul
data16
mov
xchg
je
xchg
and
aaa
fisttpl
sub
cmp
loop
nop
sti
jmp
fstl
shrb
xchg
pop
aas
xchg
cli
loope
icebp
jne
and
mov
leave
jb
imul
test
loopne
xor
cmp
inc
icebp
daa
iret
jge
xchg
push
mov
adc
jno
inc
daa
cmc
jb
cvtps2pd
cltd
pop
inc
daa
aaa
fs
cmp
xor
inc
dec
pop
out
cmp
in
cli
andl
or
jg
xchg
pop
cmp
cmp
shrl
dec
sldt
inc
add
dec
ds
dec
repnz
mov
lock
imul
push
std
xor
ds
sub
mov
push
in
aas
adc
mov
pushf
mov
insb
rcrl
fdivp
jns
dec
aas
pop
push
fsubrs
sbbb
mov
je
repz
les
adc
xchg
cmpsb
mov
xor
int3
out
ljmp
dec
rolb
xlat
out
mov
and
std
or
lds
les
jbe
rol
out
cmpsb
pslld
das
lea
imul
je
fs
inc
add
mov
subl
cmpb
clc
sub
in
test
jl
mov
sub
jl
jl
xchg
xchg
std
test
add
movsb
les
dec
dec
iret
scas
out
pop
ljmp
push
jb
lahf
in
incb
divl
int3
and
lahf
in
int3
ds
cli
dec
aaa
lahf
xchg
loop
add
jne
icebp
icebp
popf
add
jb
enter
sub
and
pop
cli
cmp
inc
or
inc
cmp
push
push
sbb
in
imul
jge
xchg
pop
sub
lea
aaa
repnz
lret
pop
into
sbb
cld
cmp
adc
bound
lods
pop
push
notl
pop
clc
idiv
cmp
aad
int3
sbb
sahf
call
pop
and
les
sbb
in
mov
jno
cmp
outsb
push
cmp
ret
mov
iret
ja
ss
jg
iret
iret
into
sbb
or
iret
mov
into
jae
fistpl
inc
mov
cmp
jg
loop
iret
or
pop
clc
mov
mov
jbe,pn
iret
adc
cld
fisubs
adc
mov
adc
outsl
mov
out
cli
jl
addr16
in
repz
adc
pop
in
sub
mov
fidivs
out
mov
clc
pop
sbb
push
inc
call
fidivs
hlt
or
lds
stc
sub
das
mov
ljmp
fsubp
push
call
insl
pop
icebp
cmpsl
ret
in
ficomps
and
adc
ja
adc
in
jno
push
add
out
orb
outsl
lar
push
out
arpl
xchg
mov
testl
pop
adc
lock
xchg
repz
cmpsb
cmp
pop
adc
xchg
mov
lods
xor
cmp
out
pop
fucom
repz
pushf
pop
gs
roll
cmp
cli
mov
or
gs
cltd
or
adcb
push
fldl
inc
add
xor
dec
xchg
xor
sahf
std
pusha
mov
xor
or
repnz
cmp
iret
pop
fxch
in
pop
mov
mov
ficomps
add
scas
hlt
aaa
push
icebp
push
sub
mov
pop
mov
orl
adcl
mov
inc
push
dec
cmp
or
jmp
mov
jle
xchg
je
ffreep
cmp
jbe
roll
push
inc
cmpb
adc
mov
add
je
les
add
mov
in
mov
add
hlt
arpl
js
jl
jecxz
cwtl
andl
test
jmp
mov
ret
mov
fildl
mov
push
iret
or
rorl
in
add
popf
jae
or
lock
mov
xchg
scas
pop
cmp
pop
mov
mov
repz
call
mov
jecxz
rcrb
js
jmp
icebp
cltd
sti
push
arpl
insl
mov
mov
inc
test
mov
aas
enter
hlt
clc
and
pusha
aas
out
mov
mov
mov
fildll
push
daa
mov
mov
in
sub
cmp
aam
into
sti
pop
dec
stos
jl
sub
adc
adc
clc
mov
or
jmp
ja
hlt
pop
adcb
jg
jmp
std
int
mov
jo
mov
pushf
mov
mov
mov
cli
jmp
jmp
in
lock
les
lahf
movsb
jmp
mov
push
loope
cmc
lds
in
out
cli
mov
cli
das
add
shll
leave
inc
fildll
fiadds
enter
movsl
sub
fwait
cmpsb
mov
int3
ss
lock
into
repnz
cmp
into
cmpl
push
add
cs
sub
fdivrl
mov
add
jbe
imul
mov
int
fucomip
repz
inc
adc
jle
mov
jmp
cmp
out
sbb
rorb
icebp
je
fidivs
jl,pn
rol
mov
add
xchg
ds
ds
loop
mov
push
ss
mov
in
jb
dec
jecxz
push
enter
mov
stc
call
mov
add
add
sub
cmpl
hlt
sub
jb
xchg
push
add
sti
mov
and
cmp
dec
stc
add
sti
icebp
cmp
cli
fnsaves
push
movsb
movsl
call
mov
cs
push
add
nop
adc
add
sub
add
sub
or
add
out
bswap
xchg
or
call
je
ds
aaa
pop
or
or
faddl
hlt
or
cld
out
jb
enter
movsb
mov
mov
xor
test
mull
hlt
cli
add
and
arpl
and
cmpsb
ds
ds
push
add
jmp
pcmpeqb
fmull
or
or
mov
pop
ror
adc
inc
ds
movsb
sub
dec
jge
ds
hlt
or
or
and
add
imul
lock
je
add
shl
adc
add
stos
push
pop
das
or
stos
ficoml
movsb
adc
cld
in
stos
in
aad
js
je
and
and
jmp
jge
orl
aam
movsb
sahf
sub
and
push
push
in
aam
in
mov
sarb
faddl
sub
jecxz
mov
push
add
or
push
adc
sbb
add
cmp
fnstcw
jl,pt
lret
test
daa
daa
addr16
adc
jmp
cmpsl
das
and
cmovns
xlat
loopne
or
push
inc
or
pop
mov
loope
xchg
xchg
sti
dec
movsb
stos
mov
dec
or
sub
stc
repnz
cmp
sub
cli
inc
call
mov
adc
jnp
movsl
iret
stos
cmp
fucomp
outsl
xchg
outsl
pop
je
adc
sub
and
nop
imul
insb
mov
push
loop
xor
stos
pushf
ds
pop
mov
nop
mov
clc
push
arpl
jno
xchg
pop
inc
and
movsb
je
ret
int
mov
push
dec
ljmp
push
inc
mov
fdivrl
hlt
cmp
jmp
std
fdivp
dec
mov
cmp
dec
pop
dec
adc
cmpb
inc
sub
daa
sub
stos
je
popf
or
and
in
cli
hlt
sub
pop
js
xor
andb
mov
adc
mov
jmp
fsubl
inc
jp
fadds
lea
or
movsl
mov
ds
shl
or
cmc
sub
adc
cmpsl
push
cmp
movsl
jbe
push
adc
dec
dec
dec
lret
jmp
dec
push
xchg
mov
jae
iret
and
push
je
daa
dec
jae
test
aas
jns
jmp
std
lahf
jo
nop
adc
and
jo
fisubl
jle
xchg
imul
in
icebp
pop
jp
adc
daa
es
dec
shll
aam
sbb
sub
xorb
and
sub
and
das
xchg
lcall
ficoms
outsb
pop
dec
cmp
dec
popf
aaa
jo
sub
enter
jp
xchg
dec
jo
in
cmp
mov
ja
xchg
std
sbb
sub
sub
icebp
clc
sahf
dec
dec
sub
lcall
je
xor
movsl
mov
je
adc
jb
andb
cli
push
sbb
lahf
movsb
es
xchg
jo
dec
cmovle
int3
pop
pop
adc
xlat
and
aaa
or
je
cmpsb
inc
inc
or
test
es
nop
cwtl
sub
icebp
ds
bound
sub
imul
pop
cmp
aad
jae
inc
inc
orl
mov
jmp
lahf
jecxz
sti
push
add
cmp
dec
mov
add
jle
mov
mov
hlt
jge
shl
imul
rcr
bound
sbb
stc
mov
int3
lret
adc
jns
repz
sbb
fildl
movl
dec
adc
cltd
into
xor
loope
xchg
pop
or
xor
in
push
xor
mov
lea
or
or
loope
and
push
inc
or
mov
dec
into
repz
popl
xor
aas
inc
inc
inc
sbb
sub
iret
cmp
sbb
or
cmp
pop
jmp
mov
adc
mov
int3
and
iret
adc
and
sbb
sub
jp
and
push
xchg
cmpsb
jnp
loop
inc
ja
adc
xchg
xchg
sub
shl
mov
mov
xchg
cmp
rolb
inc
loope
data16
inc
or
mov
leave
lods
sbb
mov
sbb
cld
in
repz
add
mov
ret
repnz
dec
mov
mov
dec
sub
out
mov
cmp
in
stc
hlt
loope
cmp
dec
ror
out
int3
jg
dec
stc
mov
js
mov
mov
scas
xchg
sbbl
push
pop
jae
ret
lock
lea
les
pop
insb
add
adc
loop
movsb
xor
ljmp
xchg
jo
mov
sub
cmp
movsb
lcall
pop
scas
sub
sub
orb
nop
mov
insl
xor
jo
mov
cmp
inc
out
pop
inc
mov
mov
roll
js
lock
or
scas
xchg
or
loop
out
adc
mov
das
out
sbb
adc
mov
push
xchg
sub
mov
push
nop
mov
stc
test
jb
mov
int3
insl
and
inc
mov
out
sbb
add
cmc
test
cld
mov
pop
adc
pop
daa
enter
and
pop
out
divl
call
push
sub
sbb
push
adc
sub
sub
daa
pop
lret
inc
das
dec
xchg
push
into
adc
daa
pop
and
jp
int3
cmp
aad
mov
cmpb
dec
call
outsb
sub
adc
into
lods
mov
into
mov
es
adcb
mov
pop
jbe
lea
cli
outsl
stos
xor
int3
repz
popf
scas
pop
loopne
mov
stc
je
repnz
inc
mov
jg
cmpsb
in
add
cld
xchg
xchg
xchg
xchg
gs
scas
push
test
or
pop
jp
dec
mov
xchg
sub
add
pop
pop
cmpsl
and
shrb
inc
jb
pusha
mov
and
inc
outsl
xor
scas
xor
out
adc
or
out
les
ljmp
test
pop
mov
int
xor
loopne
pop
pop
scas
push
clc
mov
lods
shl
jns
movb
aam
test
dec
pop
add
stc
stc
mov
mov
jecxz
sbb
xchg
or
inc
push
jb
pop
ljmp
fldt
cmpsb
in
or
pop
std
mov
adc
jl
xor
sub
inc
aas
cmp
mov
lcall
inc
or
mov
jmp
lret
jne
inc
je
add
xchg
cmc
cmp
cli
xchg
stos
mov
ja
mov
ret
mov
sbb
adc
in
jae
adc
lods
test
loopne
lods
jmp
lret
dec
jne
out
push
fs
out
int
test
or
out
xchg
xlat
inc
loop
cltd
dec
das
xchg
rcrl
scas
repnz
sahf
sub
daa
lcall
pop
lcall
stos
sbb
nop
ret
hlt
js
lret
jnp
aam
jb
mov
cmc
pop
dec
fidivrl
jbe
call
add
lahf
nop
repz
jp
mov
and
fcompl
out
and
inc
mov
setne
cltd
aaa
cmc
leave
dec
rolb
movsb
xchg
imul
jg
jge
popf
ret
test
ja
add
mov
push
pop
dec
mov
cmp
ret
xor
push
in
mov
lret
sub
mov
jnp
imulb
scas
cli
ficoms
sub
pop
inc
lock
pop
xor
les
jb
data16
adc
xchg
mov
or
fdivp
bound
add
jb
notb
neg
push
inc
shll
scas
lods
scas
loope
mov
push
mov
testl
sbb
cmp
dec
mov
cmp
ss
xchg
sub
mov
xchg
or
sub
push
xor
test
lahf
out
jmp
pop
xor
pop
or
jbe
fucomi
nop
xor
push
jge
push
inc
sti
cltd
loope
adc
add
jl
lds
cltd
je
sti
cltd
ret
mov
leave
mov
rclb
fsubl
push
sti
inc
lock
lret
cltd
iret
sbb
inc
sbb
sub
cmc
lock
and
cmpsb
mov
sar
pop
or
test
clc
insl
daa
and
nop
cmp
pusha
cmp
test
mov
and
jle
mov
jno
mov
mov
mov
sti
ret
rolb
sbb
js
lock
in
mov
jae
fcoms
mull
cli
xor
fildl
pop
std
sub
fdivrs
or
and
dec
lods
aaa
lret
into
push
inc
pop
aas
mov
stc
cltd
and
jmp
dec
and
jmp
mov
adc
push
inc
test
hlt
in
lret
sub
je
pop
dec
leave
mov
adcb
jno
dec
test
dec
add
loope
inc
mov
lock
jecxz
outsl
icebp
sbb
mov
in
les
and
sub
jge
add
aas
xchg
cmc
cmpsl
iret
loop
inc
pop
cmc
jb
push
insl
xor
ror
in
cli
test
jbe
fisubl
jo
movb
pop
test
jg
pop
inc
imul
in
mov
push
addr16
mov
into
sbb
ds
iret
movsb
ds
adcb
loopne
or
xchg
std
xlat
iret
daa
xor
pop
pop
filds
mul
adc
push
je
arpl
jb
out
xor
repz
arpl
adcb
fimuls
clc
sti
mov
jbe
jle
pop
out
insl
mov
movsb
aas
es
outsl
decl
jae
shrb
cs
mov
scas
out
aas
dec
testb
dec
fisttpl
jg
imul
jmp
scas
repnz
inc
clc
clc
pop
jno
adc
cltd
je
das
jecxz
sub
mov
mov
cmp
notb
inc
add
call
inc
js
out
test
sbb
mov
cmpsl
repz
jae
mov
xchg
filds
jecxz
ret
jmp
inc
dec
cmpl
add
pop
ljmp
add
dec
mov
xor
hlt
pop
sub
mov
mov
sub
push
xchg
cld
push
mov
sbb
cwtl
dec
test
mov
mov
dec
lcall
inc
xchg
inc
hlt
inc
faddl
jg
movsl
inc
cld
inc
xchg
ja
inc
imul
cmpsb
imul
dec
lcall
lcall
xchg
xchg
jg
cmpsb
imul
leave
inc
xchg
bound
in
adc
sub
aad
push
or
aas
xchg
int3
and
fwait
mov
cmp
inc
cmp
cmp
or
xor
iret
iret
xor
mov
push
adc
pop
pop
push
bound
dec
jmp
mov
inc
das
pop
js
jbe
out
popf
xchg
cmpsb
xchg
ffree
iret
and
out
xchg
jmp
inc
jg
std
xlat
cmpsb
enter
xchg
stc
adc
inc
push
arpl
lcall
cltd
shll
leave
push
cltd
filds
pop
pop
pop
into
stos
add
icebp
adc
and
mov
out
mov
mov
aaa
jne
add
mov
int
jo
dec
sbb
incl
add
lret
aam
cs
lock
mov
scas
mov
jnp
pop
test
sub
mov
cs
in
sub
fnstsw
pop
arpl
aaa
test
in
ds
jno
cli
cmp
iret
test
adc
enter
cld
pop
xchg
shll
adc
jecxz
inc
and
faddl
inc
stc
adc
iret
push
dec
xchg
lea
inc
push
xor
mov
pop
and
lcall
cmc
push
pop
or
inc
lret
rorb
out
mov
movsb
or
xlat
or
xchg
cld
daa
pop
mov
in
ret
mov
xchg
dec
cmp
rorl
xchg
rcrb
jns
dec
inc
ljmp
inc
or
jae
stos
dec
dec
mov
ficomps
fcompl
jno
out
mov
mov
sub
lret
repz
adc
cmpsb
inc
popf
int3
sub
fcom
notl
sahf
sbb
cltd
shl
push
cwtl
out
xchg
inc
inc
pop
xlat
movl
test
cmp
xor
xchg
ret
ret
dec
popa
mov
sbb
out
push
jg
in
cwtl
xor
cld
movsl
out
add
dec
mov
dec
xchg
sarl
test
lahf
mov
pop
and
mov
cmp
xor
push
in
mov
fwait
and
cmpsb
sub
pop
sbb
shr
and
int3
cmp
cli
xor
lcall
pop
or
in
mov
pop
ljmp
mov
ret
fmull
jmp
jl
fildl
fists
lahf
or
pop
mov
dec
dec
icebp
pop
loope
dec
dec
jecxz
mov
cmc
call
decb
mov
mov
stos
aad
loopne
xchg
stos
call
jl
outsl
and
add
sub
sahf
cmpsl
je
int
cli
in
mov
mov
cmp
out
add
mov
jns
imul
push
cmpsl
iret
negl
jmp
pop
sahf
je
lret
mov
repz
push
ds
mov
sub
jge
pop
lahf
cmp
in
adc
lahf
out
mov
jl
insb
mov
xchg
adc
sub
dec
out
jae
jecxz
add
cltd
pop
bound
cmpsl
cmpsl
repnz
mov
loopne
fadds
ret
inc
jb
or
mov
cmp
pop
sub
decl
jnp
inc
je
mov
in
add
jl
jg
idivl
test
out
ds
or
lock
roll
xchg
fwait
ss
xchg
xor
int3
ljmp
loopne
dec
subl
test
ret
incb
stos
sar
jecxz
mov
fldl
fstpt
jg
pop
cld
adc
repz
adc
adc
adc
push
sahf
mov
push
or
or
xor
pop
mov
out
pop
adc
push
rcrb
flds
lea
pushf
jmp
cmp
lcall
ds
jle
fs
ss
data16
outsl
adc
clc
addr16
stc
push
adc
out
cmp
push
nop
mov
int
leave
or
js
js
fistpll
js
dec
sub
js
mov
outsl
cmp
mov
sbb
shl
pop
mov
xchg
jae
js
pop
add
dec
loope
ret
jo
leave
loope
jmp
gs
shlb
hlt
sbb
cmp
aas
cli
pushf
adc
fdivr
dec
pushl
repz
lret
xor
xchg
shrb
xchg
mov
mov
ljmp
dec
shlb
push
jmp
jmp
mov
popf
dec
in
loop
and
add
loopne
mov
jb
aaa
sub
scas
mov
sub
imull
out
shl
mov
out
cmp
fistl
mov
out
mov
hlt
out
outsb
sbb
sbb
sbb
aam
dec
test
mov
inc
jp
sbb
repz
jmp
sub
psubw
xchg
call
aas
lock
xchg
inc
repnz
dec
cmp
push
xchg
enter
daa
cmp
call
in
imul
into
mov
xchg
ja
lahf
loopne
add
mov
jg
les
in
sbbl
mov
and
mov
pop
mov
lock
loop
and
dec
fisttpl
outsl
pop
out
pop
dec
hlt
fsts
sbb
and
xchg
sti
imul
aas
push
xlat
stc
pop
push
out
sbb
push
sbb
push
jmp
jl
hlt
xchg
rolb
jns
pop
dec
xchg
repz
das
movsb
jnp
stc
movsb
test
push
sahf
test
mov
pop
cmp
fisubl
or
popf
lret
dec
adc
mov
mov
jnp
test
inc
pop
ficompl
mov
sbb
push
mov
addr16
lea
fisubl
fldenv
mov
in
pusha
pop
hlt
pop
in
pop
mov
pop
in
pop
pop
pop
pop
xchg
gs
adc
push
in
push
push
push
push
clc
push
xchg
gs
push
call
dec
call
dec
mov
in
dec
dec
dec
adc
inc
push
dec
jns
in
inc
inc
addl
xchg
popf
call
push
xchg
ds
xor
cmp
mov
sub
pop
push
lods
xchg
ret
xor
shlb
mov
mov
call
sub
sub
sub
mov
enter
inc
and
and
push
fldenv
out
in
xchg
int
stos
addr16
xchg
fimull
cmp
adc
adc
adc
mov
pmulhuw
imul
in
push
in
enter
jne
jge
call
xchg
cmp
in
pop
pop
dec
pop
shrl
push
cli
data16
mov
push
pusha
mov
imul
movsb
je
dec
mov
icebp
test
sub
or
test
xorb
scas
stc
cmp
outsl
ds
xor
int
dec
ret
xchg
cli
mov
pushf
leave
xchg
aam
stc
mov
scas
scas
ss
cmp
cli
stc
and
test
aam
and
ds
addl
xor
ret
in
jl
stc
test
push
sub
or
cld
adc
pop
push
lret
adc
xlat
test
mov
leave
ljmp
add
push
call
sti
in
clc
test
int3
test
stc
mov
jno
mov
dec
in
loop
pop
hlt
test
xlat
jmp
popf
xchg
int
xchg
mov
jle
add
adc
sti
into
std
or
inc
stos
aam
pop
jl
js
fsqrt
cmp
adc
dec
in
out
mov
lahf
jl
aam
jbe
imul
aas
dec
dec
test
arpl
add
ds
movl
ret
in
test
cld
int
push
daa
outsb
std
je
lcall
mov
cli
iret
cmp
les
push
cmc
xor
std
dec
aaa
std
xor
std
sub
cmp
shll
into
std
pop
pop
or
psrld
out
pop
mov
cmp
cmp
out
xchg
lret
ret
dec
gs
imul
mov
mov
xchg
push
enter
fstpt
cmp
cmp
ljmp
pop
aas
daa
mov
jnp
adc
ja
mov
jp
add
mov
outsl
cmpsb
out
xchg
cltd
cmpl
add
push
data16
or
test
cmp
lods
or
mov
call
into
aad
jmp
inc
push
and
lock
xchg
mov
mov
rclb
stc
or
scas
scas
test
jecxz
lods
in
pop
lret
outsl
cmp
imul
movsb
cli
mov
or
cltd
pop
insb
and
test
and
stc
mov
mov
mov
mov
xchg
roll
lret
lds
fwait
xchg
pop
adc
ja
adc
adc
adc
inc
push
adc
adc
pmulhuw
in
or
daa
inc
mov
xchg
pop
cmp
mov
lret
mov
xchg
mov
sub
lcall
mov
mov
mov
movsb
lcall
mov
aas
xor
lcall
lcall
xor
mov
xchg
ja
jbe
jne
je
jae
and
jb
jno
jo
outsl
mov
jmp
scas
insl
mov
in
push
xchg
imul
mov
lds
addr16
jle
fsubl
stos
add
mov
xchg
lods
lcall
clc
mov
sbb
sbb
sub
mov
lret
mov
mov
lret
mov
pushf
mov
jecxz
pop
in
push
pop
ja
aaa
aaa
aaa
aaa
ja
daa
outsl
iret
pop
enter
pop
jnp
and
pop
mov
add
add
fmull
stc
scas
lret
std
shll
pop
and
in
xlat
out
clc
xchg
xchg
xchg
test
jg
lret
pop
pop
add
mov
adc
jb
out
inc
mov
ja
push
scas
cmpsl
cmp
daa
clc
fisubrl
jle
popa
sbbl
movsl
adc
jmp
mov
mov
push
push
cld
lds
cmc
mov
and
cli
mov
pop
test
std
nop
adc
cli
in
mov
test
cmp
lock
scas
cli
mov
add
sti
ja
lds
ret
jb
adc
jnp
fs
pop
mov
lock
and
das
int3
or
fstps
or
shr
cld
aas
scas
jg
sti
cmp
jle
cwtl
mov
push
ljmp
aam
add
or
mov
mov
psubq
stc
shr
in
mov
mov
dec
idivb
cli
addr16
decb
sbb
and
movl
mov
lds
int
int3
jb
sub
mov
cld
and
lea
xchg
add
and
adc
aam
adc
cltd
adcb
pop
orl
mov
cmpsb
add
pop
arpl
mov
jno
push
enter
mov
ss
pop
jae
jne
sub
push
ret
dec
out
xor
outsl
pop
loop
lret
sbb
les
aaa
push
in
xchg
setg
or
cmc
dec
clc
rcrl
pop
xchg
stos
xlat
mov
jecxz
int
dec
xlat
and
push
data16
mov
cmp
pop
xchg
aam
mov
push
add
test
out
clc
mov
ret
xlat
imul
mov
cmp
enter
mov
in
pop
popa
jg
pop
or
jl
fsubl
push
ljmp
clc
mul
sub
mov
or
mov
ss
xchg
divb
lcall
in
sub
mov
adc
daa
lock
ret
arpl
in
sahf
enter
inc
enter
popf
aas
aas
push
mov
and
gs
rorb
add
mov
jbe
test
jge
lock
cmp
or
mov
pop
cli
ret
xlat
lret
iret
inc
cmpb
aad
pop
or
in
sti
movsl
jmp
stos
fsubrp
jmp
cmp
or
test
rol
mov
aaa
cmpsl
lock
mov
std
push
mov
xor
cmpsb
stos
mov
mov
mov
ljmp
xlat
stos
scas
stos
xor
outsl
mov
sub
pop
rolb
xchg
stos
aam
mov
fiaddl
add
mov
pop
jp
jae
pop
mov
mov
jle
pop
test
or
add
loopne
rorb
mov
scas
ljmp
fnstsw
subb
push
fsubrs
movsb
lea
scas
xor
or
stc
int3
outsl
cli
pop
addr16
mov
cmp
mov
jl
sti
setg
mov
or
inc
push
push
xchg
clc
call
sbbb
stos
pop
sub
mov
and
call
jae
shl
ficomps
sub
js
pop
pop
out
add
jge
adc
xchg
pop
ljmp
jge
ds
and
ljmp
icebp
cwtl
jle
jg
in
gs
icebp
or
push
ljmp
push
push
repz
push
mov
cmp
ficoms
adc
int3
leave
mov
in
outsb
insb
int3
inc
inc
and
and
xchg
and
lock
jbe
add
jae
mov
and
add
mov
inc
and
fiadds
je,pn
daa
lahf
inc
daa
mov
sub
sti
mov
ljmp
mov
loopne
add
ljmp
negl
addr16
ficoml
sub
sub
mov
arpl
popa
das
sub
sub
pop
loop
mov
pop
rcrl
pop
fcomps
mov
push
fcoms
push
lcall
ret
dec
fildl
stos
dec
push
popf
dec
lds
mov
inc
lds
roll
scas
sub
inc
mov
ds
cmp
stc
cmp
cmp
cmp
fcmovne
mov
popf
xchg
inc
fidivrl
sub
sub
sub
daa
es
inc
push
jbe
loope
movsl
and
and
and
js
ds
and
pop
xchg
pop
mov
fimuls
cmp
mov
mov
fildll
lods
or
stos
test
and
jle
cmp
sub
leave
mov
std
in
mov
mov
sbbl
aam
das
adc
mov
adc
addr16
xchg
jmp
mov
pop
or
lods
cmp
shll
loop
dec
or
sbb
pop
push
pop
cs
inc
cld
in
xchg
orb
push
repnz
and
push
repz
in
into
fistps
fsubl
cmp
xchg
in
notb
ljmp
cmp
cmp
cld
jg
ss
and
ljmp
orl
sub
push
pop
and
inc
cmp
and
lock
add
pop
or
seta
inc
xchg
iret
scas
push
incb
push
or
add
or
shl
data16
addr16
xchg
in
xchg
xchg
push
mov
sbb
pop
or
in
int3
lahf
xchg
inc
or
pop
xchg
int
cmpsb
sahf
in
das
lret
mov
mov
xchg
hlt
sbb
stos
fwait
lcall
pusha
or
sub
adc
jge
cmpsb
fmul
ret
cmp
mov
dec
icebp
mov
mov
daa
cmpsl
xor
jmp
repnz
mov
iret
dec
xchg
inc
add
std
or
loop,pt
jecxz
imul
xchg
pop
xchg
mov
jl
mov
sbbb
dec
or
push
mov
xor
adc
loop
ja
hlt
mov
iret
cmp
cmp
stc
repnz
and
adcb
lods
ds
outsw
aam
pop
xor
xchg
out
in
into
lds
scas
inc
aaa
lock
xchg
push
cs
lahf
testl
out
adc
cli
roll
pop
pushf
sarl
and
jns
movb
imull
les
xlat
ja
ret
cmp
sbb
and
pop
xchg
pop
and
outsb
fistl
cwtl
mov
xchg
pop
fs
adc
cmc
jo
cli
pop
cmp
loopne
cmpsb
jecxz
and
leave
cmc
jecxz
jns
sub
jle
xlat
xor
mov
call
mov
inc
jmp
xchg
push
mov
gs
aas
int3
lods
nop
cltd
mov
xchg
mov
mov
xchg
andb
and
and
add
push
sbb
loop
idiv
pop
sbb
pop
mov
mov
xchg
lods
sub
lret
xchg
xchg
mov
mov
lret
mov
lods
nop
sahf
xchg
mov
mov
cs
push
adc
clc
add
add
add
xchg
xchg
mov
sub
cmp
mov
dec
mov
arpl
xchg
mov
popf
or
pop
pop
mov
call
sub
dec
pop
xchg
sti
ret
and
scas
inc
mov
xor
cld
dec
nop
loop
call
xchg
mov
sahf
sahf
fadd
daa
mov
xor
sbb
add
bound
out
sarb
mov
or
mov
cmpsl
cmp
out
fs
into
pop
ds
mov
leave
mov
cs
clc
xor
mov
mov
push
rcr
out
icebp
lods
inc
adc
aaa
dec
out
cmp
cmp
mov
daa
inc
xchg
stc
scas
xchg
stc
sbb
sbb
pop
mov
in
in
mov
xchg
adc
inc
in
fwait
adc
xchg
int3
and
adc
outsl
in
rorl
lahf
xlat
cmp
stc
pop
pcmpeqw
pop
sbb
add
mov
pop
clc
push
jo
jo
rcl
push
pop
testb
push
jecxz
cmc
add
jmp
aas
mov
mov
xchg
sbb
pop
mov
inc
push
cmp
out
out
test
jg
je
fwait
jecxz
cli
pop
shrb
add
sub
jle
jne
ljmp
pop
cmp
cs
pop
pop
aad
jmp
or
out
je
mov
sub
rclb
add
mov
std
add
mov
fwait
fwait
xchg
mov
gs
xchg
mov
mov
jg
emms
dec
loop
je,pt
jg
jmp
lods
enter
add
in
cwtl
mov
repz
test
lock
in
std
inc
fwait
ret
fwait
incb
fimuls
mov
shr
gs
sub
call
add
mov
sub
add
stos
jb
cmp
loop
outsb
lods
repz
jns
aas
adcb
out
enter
loopne
or
out
xlat
cmp
pop
sbb
fisubs
pushf
pop
push
push
cmpsb
out
mov
cmc
lret
and
adc
repz
repz
add
loop
rcrl
mov
mov
jne
add
sub
mov
stc
jae
jecxz
mov
push
and
imul
and
xchg
mov
mov
rcrl
pushf
sbb
sbb
xchg
jg
adc
je
mov
mov
pop
cli
jbe
ss
pushf
nop
xchg
ss
jno
fwait
xchg
xchg
nop
ja
vprotq
int3
pushf
cmp
out
fsubrs
add
inc
dec
add
daa
aaa
es
dec
dec
cwtl
frstor
and
sbb
add
adc
es
pop
add
push
stc
sbb
les
add
jno
sbb
scas
pop
add
add
jg
xchg
push
daa
add
test
iret
repz
into
inc
aas
test
in
iret
lods
fcomp
aam
sub
mov
add
sub
call
lret
fnstcw
out
pop
mov
lret
dec
push
jo
xchg
cld
repnz
dec
adc
jne
sti
rclb
loopne
imul
aaa
dec
mov
test
idivl
add
roll
push
jp
je
mov
pop
mov
pop
mov
loope
mov
sub
test
je
mov
shr
cmpsl
push
or
pop
aam
push
je
or
clc
sahf
je
je
loop
clc
aam
or
fmulp
cs
cmp
lret
sbb
ret
shlb
inc
pop
push
icebp
decb
nop
xchg
jb
test
add
jbe
mov
cmp
cs
xor
and
mov
xchg
jae
mov
mov
ret
lock
mov
pop
dec
xor
cs
sub
in
mov
repz
lret
mov
jnp
pop
lock
jne
add
mov
into
in
repz
jns
mov
pop
jb
pop
xor
loope
std
sub
inc
pusha
cmp
push
popl
mov
xchg
xchg
sub
aaa
jns
mov
pop
and
loop
xlat
cmpsl
stos
jcxz
add
inc
int
rep
sub
xchg
or
ja
dec
jmp
ljmp
xchg
push
push
out
and
popf
mov
test
mov
out
dec
cmpsb
add
dec
push
stc
je
xlat
fimull
add
je
repz
xlat
cli
xchg
dec
sub
fcom
mov
mov
test
xlat
or
xor
push
xchg
jecxz
xchg
cli
sti
push
je
jo
ljmp
sti
jbe
je
out
add
push
je
je
clc
test
cmp
iret
xor
in
push
mov
outsb
repnz
mov
and
enter
dec
jo
imul
sbb
push
das
in
or
scas
test
in
jl
mov
test
rcll
mov
out
out
jge
mov
mov
jae
jecxz
negl
inc
mov
cwtl
pop
imul
cltd
mov
add
and
cmpsb
pop
ljmp
xlat
pop
mov
cmp
mov
setge
orl
mov
adcb
cmp
stos
jmp
add
pop
enter
mov
or
ljmp
int3
sub
jle
fisttpll
push
lock
ds
fisttpll
int3
adc
dec
adc
xchg
je
cltd
xchg
stc
mov
je
push
xchg
ss
push
stc
push
out
lock
mov
lods
fucomip
out
mov
repz
push
jmp
push
jmp
jg
cmpb
mov
mov
les
andl
and
outsl
popa
fdivs
jbe
scas
cli
push
fwait
xor
dec
insb
mov
mulb
daa
adc
bound
mov
and
cmp
adc
arpl
enter
push
cmpl
aaa
jecxz
cmp
or
mov
mull
cmp
fucom
inc
dec
mov
aas
inc
dec
mov
dec
out
or
sbb
sub
in
roll
andl
popa
xlat
xchg
jmp
pusha
std
inc
enter
cmp
push
push
repz
cmc
ret
xor
mov
sar
repz
or
out
or
cmp
out
mov
les
out
pusha
jecxz
clc
push
notl
mov
and
add
mov
sub
jg
cmc
aas
push
push
push
lcall
aas
lods
movsb
push
lea
mov
cld
test
jmp
cwtl
mov
cltd
xchg
jmp
mov
test
lds
sub
dec
pop
movsb
decb
jge
daa
cltd
loopne
leave
push
mov
cmpsl
cs
push
add
sub
je
cmp
fs
mov
or
dec
ror
dec
gs
add
popa
mov
jmp
testl
adc
cld
stc
lahf
sbb
mov
cmpsl
int3
xorl
jp
in
popl
xchg
mov
mov
pop
out
test
cmp
xor
call
nop
scas
jo
xor
mov
je
scas
aas
sar
lock
fstps
cmp
inc
mov
jmp
push
lock
mov
fcoml
adc
int3
lea
cmp
pop
idivb
lret
ret
scas
push
idivb
sbb
fcoml
rorb
testl
cs
je
scas
mov
bound
data16
pop
jp
push
jp
stc
movb
scas
cmp
out
sbb
rol
cmp
or
xchg
repz
ds
js
pop
pop
jmp
daa
bound
out
jmp
cld
add
outsb
mov
lods
mov
jmp
stos
jmp
js
pop
fisubs
sahf
jmp
mov
sbb
ja
aaa
into
push
lods
jge
fiadds
push
fidivs
iret
and
bound
lods
adc
cld
lret
and
jl
out
loop
cli
xchg
jae
scas
lret
xchg
mov
add
adc
mov
in
or
adc
or
mov
mov
xchg
imulb
sub
adc
sti
dec
cmpsl
mov
inc
and
mov
jle
pop
sbb
cwtl
shlb
icebp
sbb
shrl
jnp
xchg
movb
ds
hlt
push
xor
add
mov
arpl
fsubrp
inc
sbb
cwtl
inc
pop
pop
int3
mov
das
cmp
xchg
push
out
dec
lahf
mov
imul
pop
mov
icebp
mov
js
cld
fnstsw
lret
or
sahf
mov
out
mov
test
mov
sti
jl
flds
xor
pop
adc
and
cmp
adc
xchg
mov
mov
cmp
and
rcll
pop
xor
adc
xchg
mov
outsb
xor
in
out
stc
push
fildll
inc
sti
loop
into
pop
lcall
cld
jle
in
addr16
sub
mov
inc
in
mov
mov
ret
xchg
repnz
stc
push
test
hlt
cmp
shlb
xchg
xorl
and
pop
fcmovu
pop
repnz
mov
pop
dec
xchg
aad
stc
xchg
mov
pop
out
stos
cmp
mov
mov
out
fdivrs
jg
push
adc
je
pop
mov
aaa
fwait
shr
xchg
fdivr
mov
insl
cwtl
data16
fbstp
addb
cmp
pop
rcrb
aam
lods
test
pop
sub
jnp
test
cli
imul
data16
test
mov
mov
rclb
xchg
pop
das
add
or
xchg
lahf
in
aas
and
out
jmp
or
test
frndint
mov
int
daa
loopne
ret
adcl
loope
cld
mov
fprem1
inc
and
repnz
sbb
dec
insb
ret
cmc
repnz
les
jb
dec
cmp
jge
jl
cmpsl
push
repz
or
out
mov
mov
add
push
out
adc
mov
jmp
xchg
je
inc
jle
jl
xchg
pop
mov
movb
sbb
pop
or
cmc
faddp
mov
enter
repz
jnp
lret
notb
loopne
push
fdivr
cmp
stc
out
pop
mov
push
ja
cmpsb
lods
ja
xchg
mov
jae
sub
dec
les
jno
and
scas
mov
out
jecxz
and
ljmp
aad
cmp
int
and
or
pop
rolb
std
jg
jle
xchg
add
mov
sti
fidivrs
cmp
cmp
sub
sar
inc
in
cmp
mov
pop
fsubrl
out
sarl
jb
out
iret
xorb
mov
jno
decl
inc
idiv
mov
enter
jae
aam
ret
mov
pop
mov
pop
loope
pop
out
sbb
jnp
iret
clts
add
lcall
or
lahf
cs
lahf
scas
fisttpll
push
faddp
rcrb
cmpsl
dec
jbe
and
cmp
push
sub
pop
lock
dec
mov
cs
mov
sub
out
ljmp
repnz
or
aas
or
loope
hlt
cli
lods
pop
push
inc
jle
mov
ja
clc
xchg
std
xchg
das
xor
dec
cmp
mov
inc
pop
icebp
in
jnp
cld
test
out
lods
pop
pop
lret
and
jb
icebp
lret
pop
repnz
mov
mov
adc
ret
add
xorb
adc
pop
xor
or
mov
pop
cmpsl
adc
out
icebp
arpl
adc
rep
clc
xchg
mov
push
sahf
bound
shlb
sbb
fsubrl
in
xor
aam
scas
leave
inc
psubd
popf
sbb
push
idiv
jmp
shrb
mov
repnz
es
jmp
push
sub
test
idivb
mov
ds
xor
cmpsb
sbb
pop
add
or
dec
fwait
xor
lcall
call
sub
dec
inc
push
add
test
out
adc
cmp
imul
in
pop
mov
inc
int3
test
xor
cmp
cmp
bound
cli
lods
push
popa
rcr
push
clc
inc
xchg
pop
dec
cmc
xchg
pop
adc
jb
iret
sub
js
test
jmp
idiv
repnz
repnz
shr
pop
int3
arpl
out
pop
cmp
inc
rorl
sti
lods
cmp
and
and
pop
outsl
mov
add
lahf
push
negb
xchg
add
out
adc
mov
scas
scas
ds
cmc
and
push
scas
mov
imul
push
rclb
hlt
jnp
sub
ljmp
pop
shl
and
add
jecxz
aaa
cmp
orb
outsb
mov
loope
mov
clc
jle
jg
inc
jb
aam
xchg
hlt
mov
cmpsl
mov
mov
sti
mov
or
mov
incl
div
mov
cmp
jecxz
rcrl
iret
into
arpl
call
cmc
sbb
div
test
icebp
jmp
into
jmp
rcrb
jg
outsl
in
aas
iret
daa
iret
cld
mov
adcb
push
sbb
arpl
roll
mov
pusha
into
fldt
clc
push
dec
lcall
imul
pop
cld
mov
filds
hlt
jg
sbb
jmp
std
push
fistl
call
iret
incl
aas
jnp
xchg
ljmp
sbb
rolb
cmpsl
lcall
jnp
loop
sti
out
fdivr
dec
push
lods
or
pop
xchg
ja
jmp
pop
sti
adc
stos
shll
sahf
nop
int3
and
mov
out
jge
inc
add
inc
scas
cmp
push
repnz
not
out
push
pop
out
jno
cli
int3
mov
lock
movsl
repz
stc
jle
addr16
lds
je
or
fsts
cltd
add
inc
sub
dec
xchg
mov
cmc
lret
cmc
sbbl
inc
push
sbb
inc
int
aas
ss
add
in
std
xlat
mov
mov
cs
out
sbb
sbb
adc
cli
sub
rcr
incb
fiadds
fldt
jbe
iret
push
popa
cmp
jns
out
repz
fistl
mov
push
movsb
ret
adc
xor
pop
scas
sarl
rolb
dec
jne
sahf
fisttps
shlb
iret
mov
cltd
pusha
cmovg
in
in
mov
xchg
dec
jmp
jge
movsb
sub
add
or
scas
sti
jp
sti
ss
stc
or
mov
idiv
outsb
mov
in
idiv
xlat
into
jecxz
mov
into
pop
movsb
jl
or
mov
stos
pop
sbb
inc
jecxz
dec
aas
stos
xchg
in
scas
mov
sti
lret
sar
pop
movsb
adc
xor
enter
mov
inc
in
inc
pop
or
pop
fildll
js
divl
gs
or
in
push
fs
mov
jge
and
jecxz
sbb
xlat
xchg
xchg
sbb
adc
pop
jae
xchg
out
out
call
sbb
xlat
iret
dec
divl
dec
dec
int
adc
fcmove
sbb
mov
fisttpl
stc
int3
and
xor
push
adcl
aam
loopne
xchg
mov
out
test
ljmp
add
in
icebp
sahf
insl
lret
std
inc
sub
testl
lcall
leave
dec
mov
in
cli
push
xchg
sbb
jge
dec
repnz
jo
loop
add
in
inc
fcmovb
std
scas
xchg
jnp
aaa
add
sub
ss
cmp
ds
jno
outsl
push
xchg
mov
jbe
shll
push
jmp
test
sub
mull
jge
mov
test
leave
or
or
mov
jp
je
jp
mov
pop
xor
loopne
and
cmpsb
cmp
xor
adc
mov
inc
out
cmpsl
jo
jle
jecxz
test
aas
lahf
loopne
adc
add
adc
xchg
mov
int
fdivrs
fisttps
testl
hlt
int
xor
cmc
or
push
cli
and
imul
stc
jbe
addr16
arpl
pop
in
ss
int
mov
outsb
sbb
mov
int
jecxz
or
paddusb
fdivl
int
ret
mov
iret
mov
push
stc
movsb
addr16
fbstp
xchg
aas
shr
mov
mov
out
adc
mov
out
adc
scas
clc
add
adcl
adc
xchg
cld
fwait
lret
mov
cwtl
stc
xchg
sbb
push
push
in
dec
dec
scas
repnz
fimuls
roll
call
fdivr
sub
mov
scas
rcrb
std
mov
sahf
mov
inc
outsl
int
sub
mov
fsubrp
mov
out
outsl
mov
sti
repz
rcr
jmp
xchg
ficomps
daa
inc
ret
mov
popl
clc
out
cmc
ja
and
jg
mov
xchg
es
in
pop
aas
pop
aad
jp
jp
jnp
cli
imul
dec
dec
xchg
mov
int
mov
sahf
shlb
mov
hlt
jmp
pop
or
stos
out
inc
rolb
call
icebp
cmp
cmp
mov
shrb
push
adc
lods
lcall
sahf
incl
mov
mov
std
jno
mov
mov
push
js
mov
std
sbb
js
testl
xchg
xor
outsb
scas
aas
jmp
shrb
jbe
fwait
jmp
mov
xor
xchg
std
and
mov
inc
pop
jae
nop
popl
xor
in
data16
xlat
pop
mov
pop
in
jae
and
scas
inc
addb
gs
xchg
mov
lret
lret
repz
push
ljmp
cld
movsb
xchg
cmc
mull
hlt
in
lcall
outsl
inc
add
notb
out
enter
cltd
mov
iret
ret
mov
xchg
xchg
rorl
cmp
flds
les
outsl
stos
aas
lahf
dec
mov
adc
cli
repz
std
mov
out
mov
lods
dec
sub
jb
js
imul
lcall
dec
ficompl
sub
sti
xchg
mov
sahf
jg
pop
pop
cwtl
js
data16
jae
push
scas
mov
mov
hlt
imul
das
test
mov
lods
out
xlat
mov
add
test
in
jl
in
xchg
xor
adc
pop
sti
push
cli
and
mov
in
lahf
ljmp
jb
xchg
push
jmp
lcall
repnz
pusha
test
push
in
fucomip
jns
mov
ficomps
dec
mov
mov
cmc
idivl
std
insl
stos
mov
push
jle
nop
dec
cmc
notl
inc
testb
inc
xchg
or
mov
dec
sub
in
lcall
pushf
and
sbb
sahf
dec
dec
in
sub
nop
pushf
mov
adcb
outsb
ds
xchg
loope
std
xchg
mov
dec
xchg
jp
pusha
mov
movsl
dec
dec
and
std
stos
adc
mov
orl
ror
mov
and
std
mov
pop
lock
and
push
int3
out
out
pusha
popf
lret
dec
or
xchg
pop
adc
jl
imull
dec
push
and
inc
sti
mull
inc
pop
std
fildll
mov
idiv
scas
mov
sbb
mov
sti
lcall
loopne
jb
jge
push
lock
xlat
mov
cmp
mov
jnp
notb
sbb
fsubrp
call
pop
inc
std
in
mov
xchg
push
andb
pmaxsw
into
test
js
lods
sahf
mov
gs
push
xor
mov
and
mov
mov
mov
pop
cmpsb
jl
fwait
cmpsb
mov
jmp
xor
ljmp
testb
je
dec
push
dec
push
inc
notb
push
cld
dec
adc
mov
lahf
dec
inc
neg
pop
cmpsl
test
dec
pushl
pop
mov
cld
in
mov
stc
das
ret
test
add
mov
mov
xchg
jnp
ja
imul
rcrb
rorb
sarb
aaa
in
jg
shrb
daa
rorb
add
sbb
stc
add
add
iret
iret
ror
iret
dec
into
sahf
into
xchg
into
mov
int
int
int
int
int
inc
aas
add
int
int
int3
lret
int3
fwait
xchg
jno
add
add
lods
int3
push
int3
cmpsl
lret
pop
lret
cs
sub
and
push
lret
or
sti
lret
fcmovne
ror
ret
add
or
lret
cmpsb
lret
xchg
jno
inc
hlt
leave
xchg
leave
jae
lods
enter
enter
enter
add
enter
enter
enter
mov
pusha
es
adc
mov
add
sbb
repnz
fld
leave
pop
lds
and
jns
insb
les
cmp
add
add
push
les
stc
ret
test
ret
fcmovnb
stos
ret
test
jne
push
dec
ret
sub
outsb
ja
cmp
jl
add
add
mov
movb
lods
lds
or
sti
add
add
into
les
les
les
les
les
jecxz
faddp
rol
into
ret
jp
pop
ret
push
ret
dec
cmp
jmp
or
ret
mov
rorl
jmp
shlb
lahf
pop
add
add
push
iret
mov
into
cmp
das
into
jmp
loopne
enter
or
add
hlt
out
sahf
std
int3
test
int3
pop
int3
push
int3
sbb
hlt
lret
ror
add
add
lret
lret
jnp
jo
push
lret
dec
lret
and
adc
add
cli
lret
out
lret
fcmove
iret
lret
mov
add
add
mov
lret
ja
lretw
dec
lret
or
std
leave
clc
leave
aad
leave
ror
add
add
leave
scas
leave
or
leave
pop
leave
dec
leave
xor
sub
es
adc
add
cli
enter
enter
enter
add
inc
enter
enter
enter
enter
cmp
xor
add
add
in
mov
movb
sub
or
in
ret
lds
add
inc
out
ds
cmpsb
les
les
sti
add
cwtl
les
cld
ret
cmc
ret
int
mov
add
xchg
ret
and
mov
cmpsb
shll
rcll
rclb
jae
insb
shlb
shlb
sbb
add
and
adc
std
into
jmp
mov
into
add
lock
int
cltd
int3
call
lret
lret
mov
dec
add
lret
insb
lret
lretw
pop
lret
dec
lret
ss
pop
lret
add
stc
lret
lret
mov
lret
sbb
adc
or
add
out
leave
in
leave
push
leave
dec
leave
ds
xor
sub
adc
or
add
pushf
or
enter
enter
enter
enter
enter
add
add
das
and
sbb
pop
sti
mov
lds
lds
lds
loopne
cmpb
rol
mov
cmp
les
les
hlt
ret
out
ret
in
iret
fs
sbbb
movsl
ret
push
jecxz
fld
aam
lret
or
movsl
fdivrl
or
sarl
shll
push
shll
rolb
add
mov
mov
iret
je
outsl
iret
pop
iret
pop
iret
or
into
icebp
add
cld
into
in
xlat
into
ror
mov
into
imul
into
push
into
inc
add
dec
in
xor
sub
int
int
int3
scas
int3
xchg
int3
xchg
pop
int3
inc
int3
lret
lret
mov
or
lret
mov
in
lret
mov
lahf
lret
or
add
cs
ret
enter
add
enter
push
mov
mov
cmpsl
lds
push
lds
add
jns
dec
lds
xor
inc
inc
test
mov
lahf
ret
push
ret
dec
sahf
daa
add
inc
sub
and
and
inc
rolb
outsl
subb
pop
jmp
dec
mov
cmpsl
iret
ror
scas
and
sbb
ljmp
xor
sub
adc
push
int
int
int
int3
fucom
push
int3
sub
or
stc
lret
jmp
movl
lret
test
popf
lret
mov
or
inc
sub
push
lret
cld
lret
mov
lret
pop
mov
lret
jle
jns
jo
pop
lret
add
adc
dec
lret
das
lret
sbb
adc
add
jmp
cmp
add
leave
ret
leave
test
jg
outsb
leave
push
inc
inc
sbb
mov
nop
enter
js
jae
imul
inc
adc
add
push
enter
enter
enter
mov
add
add
pop
dec
movl
and
movl
loope
enter
or
daa
adc
add
cmc
add
hlt
add
call
and
mov
lds
lds
outsb
lds
stos
das
scas
test
jge
or
out
les
pop
cwtl
les
fsubrl
inc
clc
ret
lock
subb
lcall
ret
dec
xchg
cmp
ret
loopne
lret
push
pusha
ret
xchg
loop
jmp
cli
add
add
xlat
iret
ror
mov
iret
jl
jae
push
iret
ljmp
fs
pop
add
push
lock
into
int
int
int
shlb
out
rclb
inc
int3
aaa
int3
daa
int3
fwait
in
or
mov
lret
lret
dec
lret
lods
add
jns
adc
leave
lock
fmulp
ror
leave
stos
leave
mov
leave
or
jle
add
leave
bswap
add
icebp
enter
enter
pop
add
in
dec
mov
enter
mov
add
pop
je
dec
dec
lret
xor
sub
in
cli
repz
out
ffree
xlat
rol
lret
lcall
mov
lods
cmpsl
mov
cmc
xor
stos
imul
add
sbb
pop
mov
xchg
inc
xchg
clc
outsl
inc
test
fs
add
inc
cltd
inc
ljmp
push
xlat
inc
jmp
inc
frstor
push
pop
mov
lock
test
cmc
add
add
ret
psadbw
loope
cwtl
cld
outsl
in
filds
lahf
mov
cwtl
movsb
fisttps
shl
lahf
in
add
idiv
adc
loope
cmc
jmp
cmp
lods
jmp
out
lock
pop
xchg
dec
mov
out
loop
add
and
loope
std
cli
add
bound
out
pop
into
or
cmp
pop
into
jmp
out
loopne
clc
inc
insb
jge
adc
insb
jge
push
jl
cld
jg
gs
xchg
xchg
movsl
mov
shll
jge
pop
xchg
gs
push
cld
push
dec
mov
jge
inc
clc
xchg
mov
mov
aad
enter
in
into
loopne
mov
mov
mov
xchg
scas
outsl
fnsave
push
out
aam
and
mov
aas
push
mov
mov
xchg
mov
scas
adc
ret
nop
lcall
out
sub
fdiv
mov
mov
cli
xchg
lcall
mov
ds
jmp
stos
jne
cmpsb
mov
lcall
sbb
fs
or
repz
inc
jmp
lret
std
xchg
jno
lock
mulb
jge
mov
scas
push
lahf
out
push
or
or
aad
or
jp
out
or
mov
mov
pop
pop
cmp
fucom
lods
pop
mov
mov
xchg
jmp
addr16
cmp
push
cmpsl
in
xchg
scas
sbb
mov
incb
inc
mov
repz
scas
xor
mov
loop
std
fwait
addr16
ret
out
dec
mov
lahf
mov
addl
fninit
in
call
sti
sub
or
mov
popf
mov
es
sub
lahf
imul
adc
push
mov
mov
int
orb
push
orl
or
imulb
mov
dec
cmp
jl
test
testl
popf
clc
pop
gs
inc
jb
loope,pt
sahf
subb
scas
jl
mov
dec
nop
fimuls
pushl
movsb
fld
leave
test
add
fdiv
xchg
mov
jg
out
cmp
leave
mov
cld
or
pop
sbb
out
xchg
divl
int3
testl
shl
add
ds
add
sbb
loopne
xchg
cmpsb
cmpsb
cli
mov
mov
fnstenv
cld
adc
adc
dec
mov
mov
fldcw
out
mov
cld
fisubrs
pop
lahf
push
ficoms
sbb
or
gs
mov
mov
dec
rclb
loopne
mov
sahf
xchg
cmp
addr16
fisubs
fildll
inc
jge
sub
pop
ds
std
push
mov
addl
sub
les
fsubrs
adc
mov
sbb
jmp
inc
imull
adc
mov
add
dec
xchg
movsb
ret
xchg
cwtl
movsl
imul
fidivrs
outsl
ja
adc
fsubrl
int3
jb
mov
xchg
cmp
lret
je
inc
mov
cmp
aas
mov
push
jle
cmc
fstps
push
push
outsl
fucom
fistl
ja
fidivrs
div
mov
jo
add
xchg
stos
int
test
clc
rcr
sti
jp
stos
test
into
mov
in
pop
or
lock
jge
jb
lods
mov
icebp
rcrl
cmpsb
mov
jmp
outsl
jle
adc
mov
mov
sbb
in
jne
cld
sbb
cmc
pop
fucom
jle
cmpsl
iret
push
xchg
add
add
stos
clc
in
scas
jbe
jl
jmp
clc
inc
stos
shlb
icebp
nop
mov
fsubrs
outsl
ja
adc
mov
testl
push
mov
push
stc
out
mov
fcmovnu
in
push
xorl
decl
cli
pop
sbb
xchg
adc
stc
ljmp
ret
pop
cli
fdivr
lret
inc
cld
cmp
subl
jp
mov
inc
jle
jae
dec
jb
xchg
stc
dec
hlt
dec
mov
dec
out
jb
iret
dec
adc
dec
xchg
add
out
sti
add
or
notl
pop
outsb
ja
dec
mov
lret
dec
mov
push
cwtl
push
add
cli
clc
dec
stc
dec
add
dec
add
add
dec
out
cmc
dec
inc
dec
aas
push
cmpsl
cmp
pop
incl
out
xchg
push
lcall
sti
fcoml
push
stc
mov
add
cld
cmp
dec
fsubl
fiaddl
lods
jle
xchg
ja
clc
and
loopne
and
jge
sbb
cli
out
push
movsb
xlat
xchg
cld
xchg
add
inc
mov
test
dec
xlat
enter
js
dec
rcll
fildl
and
lods
hlt
cmp
pop
cmp
jbe
addr16
ds
sarl
fwait
bound
leave
ffree
lods
cmp
aaa
jns
xchg
pop
adc
out
xor
out
adc
push
lds
fbstp
mov
enter
loop
inc
stos
mov
pushf
xchg
fwait
jne
mov
inc
hlt
aas
enter
adc
cmc
incb
inc
mov
and
int3
faddl
aam
lcall
sbb
sbb
inc
int3
adc
hlt
in
push
testl
jmp
insl
dec
out
rcll
or
out
inc
fwait
sbb
dec
std
cmp
out
cmp
pop
mov
adc
in
xchg
sti
pop
aas
sbb
loopne
clc
sub
jb
repz
xchg
mov
xlat
jmp
in
dec
mov
push
cmc
sahf
je
sub
cli
loopne
idiv
sub
neg
jg
mov
mov
xchg
in
xchg
inc
imul
xchg
movsl
jmp
out
mov
iret
repnz
xchg
incl
sarb
jge
outsb
aad
inc
jp
stc
daa
daa
pop
dec
scas
scas
pop
pop
hlt
imul
mov
adc
jg
cmp
xchg
push
push
in
cmp
jbe
pop
pop
loope
loopnew
xor
scas
notb
adc
cmp
in
sbb
inc
stos
fisubrs
mov
jl
je
lret
test
push
icebp
ljmp
cmp
cmpsl
ljmp
mov
jo
mov
push
test
jbe
pushf
cmp
scas
lock
divl
mov
mov
jbe
mov
push
out
or
je
cmpsb
mov
xor
cmc
sti
repz
int
cld
stc
xchg
shl
in
cld
jae
out
mov
xlat
fimull
aas
out
inc
pop
adc
adc
iret
loope
sahf
aad
mov
cmpb
out
scas
jae
cld
pop
out
push
and
lret
inc
sti
mov
push
iret
jg
xor
fdivrs
out
cmp
or
fsubs
jg
and
popf
in
fistpll
jg
and
fcomip
mov
xchg
mov
in
cmp
ja
dec
push
mov
fidivs
out
add
fstpl
mov
out
mov
ja
mov
jmp
scas
sub
mov
cmpsl
out
roll
dec
mov
call
adc
lea
paddusb
aam
xchg
lahf
inc
dec
mov
icebp
je
stos
xchg
stc
push
out
inc
fdivrl
mov
in
ljmp
mov
xor
ja
jge
ljmp
call
ret
mov
ds
cmp
mov
ja
out
fsubp
jle
test
out
fcmovnu
fucomi
mov
mov
jne
fildll
shll
xchg
pop
pop
sbb
test
cld
div
clc
fsubs
cld
inc
daa
sarb
mov
cld
sarb
sub
sahf
fmul
call
sub
cld
ss
add
imull
mov
push
in
pop
aad
ret
mov
lret
mov
aaa
scas
pop
movsb
adc
es
pop
repz
hlt
into
das
and
clc
xorb
xor
repnz
lret
aad
scas
adc
jmp
xor
inc
stc
mov
lret
or
pop
in
jmp
ljmp
cmc
push
shlb
das
jmp
std
daa
dec
and
call
lcall
mov
std
sbb
ja
cmp
stc
cmp
ret
dec
sub
push
cmc
fisttpll
outsb
in
out
adc
insb
jge
mov
xchg
fwait
scas
lret
popf
in
add
mov
jle
jmp
ffree
jmp
nop
jge
inc
repnz
cmpsb
jnp
fdiv
xchg
mov
movsl
mov
jns
ljmp
mov
xchg
outsb
ja
add
cltd
xchg
add
in
jg
jns
dec
pop
enter
mov
mov
push
mov
cmp
std
scas
leave
jne
dec
in
push
test
dec
pop
cli
lret
lods
divb
jl
sbb
cli
mov
adc
push
out
xchg
aas
stc
decb
adc
sar
scas
aad
mov
push
out
xor
sbb
dec
daa
xchg
xor
mov
sbb
inc
sub
loope
cld
lret
popf
dec
sbb
mov
mov
mov
or
call
pop
sahf
fcompl
fsts
cwtl
mov
and
pushf
orb
mov
xchg
insb
loopne
stos
xlat
ljmp
adc
hlt
mov
cld
sub
mov
into
es
iret
cli
orb
fs
jmp
xchg
push
mov
hlt
cwtl
out
popl
dec
adc
cwtl
jo
in
xlat
push
call
xchg
cmc
xlat
mov
stos
sar
fwait
lock
clc
ds
je
hlt
xchg
fdivs
dec
xchg
jo
xchg
push
les
mov
xor
lock
dec
neg
loopne
cmp
xchg
mov
xchg
jbe
daa
daa
jle
mov
mov
pushf
sti
call
xchg
test
lcall
xor
dec
sti
inc
push
stc
mov
test
repz
int
int
int
ljmp
int
int
int
int3
mov
int3
lret
mov
sti
mov
in
and
inc
xchg
sti
inc
jmp
stos
push
leave
cmpsb
hlt
cmp
nop
mov
jb
dec
leave
enter
mov
push
enter
enter
inc
mov
sub
adc
add
lds
add
stc
push
lds
lds
mov
mov
ret
adc
ljmp
iret
ret
lods
verw
ds
ret
std
shl
mov
pop
add
pop
rcrl
rorl
stos
stos
es
xchg
pop
push
fwait
addr16
inc
jmp
cwtl
sti
shrl
lea
std
mov
xor
xchg
es
fisubrl
inc
xchg
es
cltd
lock
pop
rcll
mov
push
mov
push
outsl
xchg
fdivrp
pop
and
pop
sahf
sti
mov
push
incb
std
mov
std
dec
add
add
rcl
jg
add
aas
std
inc
outsl
popa
lahf
fcomi
lahf
fs
in
aad
ja
jle
cld
testl
push
pop
dec
mov
pop
dec
repnz
xor
pop
mov
out
loope
dec
mov
pop
dec
aaa
incb
or
jno
inc
lock
mov
cs
shlb
xchg
jg
hlt
push
dec
add
lock
pop
mov
stc
cltd
loop
pop
mov
mov
das
sbb
hlt
sti
lods
sub
fwait
push
loope
lahf
mov
outsl
lods
cmpsb
loop
incl
sub
fdivrs
push
push
cmp
cmp
cld
sub
fadds
cli
ljmp
das
idiv
mov
incl
jmp
add
inc
add
call
int
jmp
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
pusha
mov
mov
xor
mov
inc
cmp
jb
popa
jmp
