mov
add
add
add
add
add
cli
and
repnz
lds
loop
and
sbb
cmp
pop
cli
gs
in
pop
fst
and
lcall
js
jmp
jmp
add
fwait
lods
pop
outsl
test
sbb
jae
cmpsl
jmp
popf
int3
negb
iret
movsb
push
mov
test
dec
sbb
ficoml
push
std
sbb
push
inc
fdivrl
xchg
dec
out
cmp
cmp
mov
adc
and
mov
dec
je
xchg
fcompl
rcrb
xchg
sbb
sbb
test
dec
push
dec
stc
test
test
dec
jb
scas
cmpsb
xor
mov
cli
pusha
out
mov
in
inc
inc
scas
imul
or
or
imul
jg
lcall
mov
mov
pop
mov
jg
es
lea
mov
sahf
pop
cmp
mov
sbb
in
sbb
lods
push
call
lret
aas
out
or
dec
mov
lcall
push
shl
je
aas
stos
lds
fucomip
loopne
sbb
or
imul
pop
std
push
in
stos
scas
ds
ficomps
lcall
int3
insb
test
mov
and
or
test
insl
xchg
rcrb
cltd
popl
or
mov
into
inc
sub
xlat
sbb
sbb
cmp
mov
jmp
dec
cmc
mov
lock
pop
outsl
fwait
mov
stos
xor
adc
xchg
ret
outsb
in
imul
in
xor
inc
sbb
xchg
mov
mov
out
lcall
mov
arpl
lods
sub
sbb
cmpb
es
cld
jg
xor
jmp
rcrl
pop
sbb
or
mov
or
dec
mov
shlb
in
push
scas
mov
mov
sbb
and
outsb
inc
aas
gs
pushf
mull
jmp
mov
test
pop
and
iret
daa
or
mov
mov
jmp
jp
test
jl
les
jmp
cmp
aaa
xchg
fidivrl
xchg
into
stc
jle
icebp
test
lret
in
mov
fidivrl
lds
cltd
and
add
mov
xchg
les
outsb
xor
in
sbb
in
insl
xchg
xchg
sahf
jle
cld
imul
pop
int
jecxz
movsl
imul
lcall
adc
mov
push
fistpl
dec
add
mov
push
push
adc
repz
mov
mov
aas
aam
inc
jle
and
mov
dec
xor
cmp
and
subb
sub
mov
hlt
mov
inc
mov
hlt
inc
jge
sahf
mov
jae
adc
xor
scas
push
cmp
lds
jge
push
lahf
je
add
pusha
mov
jge
fcoml
fists
cmp
test
ss
movb
loope
or
dec
push
into
xor
cmp
jp
dec
dec
in
sub
fnstcw
stos
fldenv
jo
aaa
push
mov
les
pop
lcall
insb
mov
cli
ss
test
xchg
orb
inc
and
aam
loope
int3
jl
test
jecxz
aam
fdivr
xlat
jp
mov
or
lea
sbb
jge
daa
test
roll
in
rorb
and
lods
add
orl
fbstp
jns
pop
lods
mov
mov
xor
insl
mov
sub
jge
xchg
inc
jo
loop
cmpsb
pop
or
mov
jp
inc
das
xor
call
adc
jbe
ds
cmp
dec
es
pop
adc
cwtl
xchg
mov
adc
mov
call
cwtl
mov
mov
cmp
cmp
mov
das
int3
mov
inc
sbb
sbb
sub
fldt
mov
and
jbe
xor
shlb
jp
test
dec
testb
addl
clc
add
mov
mov
mov
hlt
jg
loopne
mov
out
repnz
lea
sub
mov
lcall
push
sbb
dec
ds
push
pop
loop
or
mov
xor
jno
and
mov
into
and
xor
addl
outsl
adc
jg
les
mov
sbb
sbb
fs
jb
enter
lods
jns
rcll
inc
sbb
popf
int3
xorl
push
jb
sub
je
mov
and
call
cmc
lods
test
inc
push
mov
adc
xor
mov
fcomip
pcmpeqw
filds
push
inc
cmp
data16
xchg
hlt
or
mov
push
das
jl
jnp
fcompl
mov
mov
xor
mov
xlat
xchg
lret
pop
pop
inc
pop
in
xor
idivb
mov
sub
fiaddl
mov
inc
je
pop
push
stc
push
mov
arpl
nop
flds
sarb
adc
jb
add
test
scas
inc
inc
push
addb
jo
mov
inc
mov
pop
push
mov
inc
pop
ror
push
outsb
sarb
sbb
loopne
sub
fwait
gs
in
pop
enter
add
ds
gs
divb
out
divb
or
int3
push
dec
inc
iret
sarl
push
cli
pushf
lods
inc
aad
push
out
out
mov
adc
push
in
add
xor
inc
inc
cmp
add
push
xchg
arpl
inc
test
xchg
xor
lea
test
loope
icebp
stc
xchg
btr
mov
cmp
mov
mov
push
out
cmp
pop
or
jo
jns
mov
push
lret
dec
fldt
lods
outsl
ss
xchg
jnp
movsl
pop
fimull
mov
test
dec
inc
xor
push
xor
xchg
jno
jecxz
call
imul
jl
push
adc
test
stos
xchg
fisttpl
cmp
sbb
jnp
stos
es
dec
dec
bound
push
mov
insl
xchg
xchg
adc
sarl
lret
or
jecxz
jns
mov
movsl
dec
push
sub
push
lea
pop
pushf
ja
fsubs
jnp
mov
jnp
mov
add
fsubrs
jmp
clc
xor
popa
jne
das
or
push
push
shlb
jo
mov
mov
lahf
xlat
pop
xor
sub
shlb
repnz
in
pop
push
sbb
ret
pop
dec
mov
add
ret
or
pop
je
jnp
and
dec
mov
out
cmpsb
cwtl
inc
stc
out
push
inc
out
mov
cld
cmp
das
out
pop
add
popf
aam
or
jno
pop
xor
fimuls
jno
mov
and
popf
js
or
orb
xor
pop
lds
shlb
in
add
push
notl
add
cli
mov
scas
push
aas
mov
arpl
dec
das
shll
pop
aad
mov
mov
xchg
push
pop
xor
mov
cmp
leave
xchg
dec
aas
std
ret
or
adc
fcmovb
outsl
add
push
fwait
or
pop
leave
fmull
pop
push
shrl
test
out
insl
outsb
and
mov
pop
jnp
pop
push
arpl
dec
or
xor
sub
jb
mov
xlat
nop
mov
out
movsl
stc
fnsave
ret
cs
sti
jae
icebp
lret
shlb
jnp
add
stos
mov
insb
pop
pop
fidivl
add
test
imul
jo
dec
addb
adc
mov
jnp
jle
sbb
jecxz
inc
mov
inc
jp
push
xor
pop
adc
adc
add
jbe
push
mov
and
insl
call
fidivrs
arpl
push
push
movsb
add
or
je
dec
pop
mov
pop
mov
xchg
sbb
or
rcl
lret
pusha
sbb
sbb
and
jg
shlb
xchg
mov
jge
rcr
gs
dec
lds
inc
xchg
jg
mov
mov
or
xor
and
push
push
xchg
pop
cld
xchg
cld
jbe
je
mov
xchg
in
xchg
lahf
fnstcw
js
mov
sub
cld
adc
test
pop
mov
jmp
mov
jno
add
rorl
adc
push
fnstcw
call
sub
fnstcw
aas
jne
loopne
add
dec
ret
jnp
mov
popa
jg
popf
xor
cmp
mov
loop
mov
cli
js
pop
pushf
lock
mov
mov
dec
je
lret
enter
pop
icebp
fiadds
fwait
imul
dec
push
fisubs
mov
arpl
push
adc
aam
icebp
inc
dec
in
adc
add
popa
lcall
stos
add
or
cmpsb
ljmp
jmp
cmpsl
lock
cltd
enter
bound
push
pushf
popa
sub
jg
repz
inc
fsubrl
cmovns
jle
push
sbbl
fidivs
std
movb
aad
rcr
test
cld
enter
lds
loope
pusha
jl
lods
inc
test
ss
fcoml
jl
scas
out
and
xchg
push
lds
data16
stos
iret
je
mov
arpl
lock
sti
mov
dec
and
cmpsl
call
xor
das
pslld
add
ret
push
cmpb
pop
mov
dec
ljmp
cmpsl
cld
in
pop
sub
sub
nop
add
or
fistl
sbb
data16
cmpsl
xor
inc
pop
imul
xchg
xchg
and
lret
xchg
in
outsb
and
hlt
sbb
aam
jno
jo
xchg
xchg
stos
in
or
stc
bound
mov
and
mov
into
add
andl
jle
es
out
inc
cli
insb
shlb
insl
stos
xchg
lea
cmp
repnz
std
and
shr
cltd
int
adc
mov
jge
add
jmp
loop
js
test
gs
std
jbe
js
rol
push
mov
xlat
test
movsl
ljmp
push
std
sub
xor
not
sub
pop
dec
push
dec
mov
pop
or
jg
iret
or
pop
aad
mov
add
test
push
test
lods
mov
xchg
xlat
sub
aas
push
jge
pop
gs
fsubs
push
pushw
push
pop
or
mov
xchg
push
dec
out
es
jno
jmp
inc
popf
fistpl
jp
dec
xchg
inc
inc
hlt
outsb
dec
mov
bswap
adc
outsb
inc
popf
push
daa
mov
push
std
nop
jge
repnz
mov
imul
push
push
jb
push
adc
pusha
cmp
stos
push
cmp
in
loope
add
jmp
sbb
jno
mov
cmpsl
mov
jns
insb
stc
test
pop
ret
push
cli
mov
jmp
jns
or
int
enter
mov
ja
jb
int3
mulx
aaa
ret
dec
dec
shll
stos
inc
mov
mov
or
adc
lock
in
subl
add
xor
jge
stos
or
popa
push
push
xchg
lods
or
inc
jbe
add
pop
movsb
inc
push
int
cld
and
pop
in
sub
adc
cmp
jmp
mov
movsb
pop
xor
dec
aaa
fdivrs
je
adc
mov
call
ficoml
imul
xlat
adcl
ja
out
xor
jmp
test
mov
inc
movsb
inc
or
pop
xchg
or
adc
xchg
daa
in
mov
inc
outsl
xchg
inc
cmp
scas
daa
loop
sub
mov
adc
xorb
adc
out
and
loopne
mov
push
cmc
xchg
dec
lcall
scas
int3
jp
sahf
aad
call
cmpsl
mov
sbb
jl
inc
add
andl
jno
in
fsts
sub
ror
mov
adc
pop
xchg
jl
icebp
jbe
shlb
lcall
popa
pop
sub
or
vunpckhps
xchg
mov
das
test
add
incb
loop
mov
rorb
dec
mov
add
inc
in
out
or
lock
cmpsb
xor
and
add
push
jne
and
loopne
mov
cmp
push
leave
subl
js
xor
push
lea
sbb
aaa
cmc
lds
imul
mov
add
adc
add
lret
adc
fdivs
mov
cmp
scas
push
add
outsb
shrl
mov
xor
push
in
mov
adc
inc
sub
call
cmpb
xor
add
pop
mov
push
fmul
outsl
outsl
mov
dec
or
xchg
dec
add
sahf
adc
mov
mov
fldenv
in
mov
pusha
aaa
icebp
xchg
cmp
fidivl
test
in
xor
mov
fisubrs
pop
out
sbb
jns
roll
add
jno
and
add
mov
dec
test
mov
sbb
movq
xchg
ror
lock
and
sbb
shlb
cmpb
jno
mov
rcr
jecxz
jp
roll
cli
aas
mov
call
outsb
pop
in
scas
mov
or
fs
inc
popf
push
jp
dec
mov
mov
test
push
pop
loopnew
or
test
cmp
sub
daa
or
pop
mov
mov
add
cld
or
ret
and
xchg
lret
mov
std
pop
push
sub
jno
pop
cmp
jnp
and
pop
scas
xchg
outsb
xor
pusha
and
fdivrs
std
lods
fdivr
pop
cmp
fnstcw
sahf
add
ja
enter
inc
xchg
and
xchg
sbb
inc
pop
sub
ss
pusha
xor
jo
pop
test
das
push
fs
vpunpckldq
and
sub
cwtl
jne
jo
mov
push
repz
mov
jo
sbb
sti
cmp
es
cwtl
sbb
shrl
pop
data16
mov
loopne
xor
or
mov
add
and
test
push
mul
rolb
sub
and
repz
out
idivl
xor
addl
xor
push
adc
sahf
sub
mov
and
pop
dec
jnp
jmp
inc
push
mov
hlt
add
out
cld
jp
add
adcl
push
mov
in
mov
xchg
xor
mulb
jg
xchg
pop
rolb
mov
pop
mov
xchg
cmpsl
ss
cmp
data16
stc
xor
mov
and
sub
pop
fs
imul
popa
pushf
push
and
sbb
cmp
fiaddl
xlat
or
cwtl
inc
or
xchg
test
lea
sub
adc
movsb
scas
jbe
bound
add
imul
fimull
in
hlt
stc
jnp
adc
jb
dec
int3
arpl
or
loopne
jg
push
and
int3
adc
jne
or
inc
lahf
neg
aaa
test
mov
pop
aas
mov
lock
aam
je
es
mov
mov
xor
push
pop
outsl
call
les
out
jne
test
mov
jmp
daa
outsb
cld
js
pop
call
sti
out
xchg
rorl
push
decl
mov
lods
int
or
rcrl
sub
sub
pop
inc
push
inc
xchg
je
enter
cmp
mov
je
cmc
test
bound
ffree
loope
insl
jle
repz
rolb
fimuls
ror
dec
popf
pop
push
loope
arpl
xor
sbb
jge
add
push
lret
test
pushf
ja
jne
xchg
and
fwait
cwtl
or
xor
cmp
cltd
add
pop
int3
nop
hlt
sarl
xchg
lea
fucomp
in
sub
out
inc
cwtl
mov
jne
pop
dec
pop
xor
ficoml
insl
mov
shlb
hlt
pushf
loopne
add
jne
sti
dec
sub
ljmp
cmc
out
xchg
jg
lret
mov
dec
adc
add
in
mov
nop
fs
dec
jg
jp
mov
lahf
insl
mov
stc
jge
sub
les
xchg
ja
pusha
or
mov
jbe
jg
aam
mov
mov
lret
mov
add
lds
hlt
sbb
call
and
mov
in
out
orb
movsl
inc
add
pop
adc
cmp
mov
fsubrs
roll
cld
pop
dec
sahf
mov
cmpl
call
dec
mov
push
ds
loopne
ret
inc
std
ljmp
stc
adc
test
jp
or
popa
and
xor
sahf
jecxz
sub
sub
ret
lea
fcmovne
jno
jae
loopne
lods
and
mov
in
cmp
inc
mov
imul
or
jns
pop
ja
mov
mov
pop
jg
xlat
pop
jb
add
xchg
sbbb
xchg
mov
jae
cs
lods
into
fsubr
xchg
cmp
mov
fst
test
sub
xchg
arpl
xchg
cmp
je
mov
mov
xchg
fwait
xor
mov
jge
xorb
or
or
pop
dec
inc
inc
mov
mov
xor
clc
push
psadbw
aaa
xchg
fucomp
mov
xlat
xchg
dec
jle
gs
adc
adc
enter
lods
xchg
mov
mov
mov
jmp
dec
push
fnstenv
inc
inc
push
jne
lret
pop
ljmp
cmp
jnp
mov
mov
or
call
lods
jb
xor
insl
fnstsw
lahf
jp
or
add
xchg
lods
je
jecxz
inc
outsb
ss
mov
lret
pop
dec
dec
lods
jl
ret
int
iret
mov
out
test
mov
push
dec
jecxz
shlb
sarl
sarl
push
scas
xor
jecxz
nop
mov
out
sbb
data16
fs
xor
ror
pop
mov
pop
push
mov
and
sub
cmp
pushl
mov
xor
mov
push
inc
inc
outsl
insl
jo
arpl
pushf
sahf
mov
lods
inc
notl
dec
cld
testb
cld
aam
sub
add
lret
mov
mov
out
sarl
inc
mov
pusha
push
test
jb
test
jecxz
filds
out
jecxz
lret
int
pushf
sti
fmuls
jo
add
out
je
push
decb
mov
lock
les
sbb
int3
int3
inc
mov
xchg
inc
jo
inc
mov
mov
outsl
mov
hlt
popf
ss
adc
cmp
xchg
jne
mov
add
inc
mov
leave
mov
fisttpl
sub
imul
pop
push
mov
mov
into
lcall
movb
and
pop
adc
lret
rcrl
push
adc
push
sbb
jmp
jae
ljmp
push
cmpsb
cs
lret
pushf
loopne
icebp
lcall
mov
xor
in
fnstcw
cltd
pop
fnstenv
clc
pop
pop
movsb
hlt
mov
out
scas
mov
mov
mov
rclb
cmp
mov
mov
shlb
aad
jns
test
add
in
in
jmp
jns
inc
inc
sarb
test
jge,pn
xchg
iret
push
pop
pop
subl
mov
shlb
in
push
mov
sub
jb
out
or
push
xor
xchg
scas
push
ja
imul
inc
insb
jle
leave
icebp
test
jmp
aaa
int3
mov
add
scas
scas
xchg
inc
enter
mov
xor
insl
pop
jnp
cmp
sbb
fsub
and
sub
pop
jns
push
sbb
sbb
mov
jno
aaa
cmpb
jnp
mov
push
pop
cmp
cmp
lods
in
stc
hlt
popa
add
push
nop
popf
popf
mov
dec
iret
add
xchg
sub
inc
or
rorb
inc
dec
fsubr
jo
shrb
lret
ljmp
rcrl
ds
scas
cwtl
sbb
push
xchg
xchg
push
push
pop
lret
xor
mov
jp
add
pop
inc
movsb
jle
dec
mov
fisubl
std
dec
inc
push
adc
sub
jae
adc
dec
xchg
mov
mov
in
test
loope
sti
adc
xorl
mov
push
xchg
mov
xchg
arpl
jmp
scas
add
pop
or
insb
scas
inc
lret
or
dec
aaa
xor
dec
lods
nop
push
call
mov
in
lock
dec
adc
mov
int3
mov
mov
je
push
push
notb
ret
xchg
scas
cli
cli
inc
rorl
mov
sbb
rolb
jl
rcrb
mov
mov
addr16
push
xorb
cli
test
lods
sbb
daa
xchg
inc
xchg
jge
adc
dec
decb
outsl
cmpsl
outsb
fmul
repz
int3
add
add
popf
cmp
push
adc
mov
mov
test
dec
aad
push
cli
call
movsl
cmp
out
lret
pop
fisttpll
es
jo
movsb
aas
fsts
pop
push
ret
mov
sbb
popf
cli
decl
dec
loopne
addr16
rol
add
inc
call
rorl
sub
pop
mov
push
ret
add
adc
sub
jg
push
adc
push
cmc
and
int3
test
cmpsl
xchg
insl
jbe
popa
ljmp
or
push
jae
cmpsl
push
mov
mov
mov
dec
mov
xchg
rorl
jae
mov
fstp
insb
ljmp
in
add
test
xchg
stc
mov
ds
dec
jle
es
xchg
dec
push
jg
sbb
mov
jnp
sbb
push
adc
cltd
pop
pop
iret
mov
cs
jns
out
es
iret
mov
mov
push
jecxz
pop
sbb
push
loop
add
inc
xchg
sub
jecxz
out
xchg
dec
jmp
aam
repz
loope
cli
cmp
addr16
rorl
dec
jae
out
icebp
into
ret
jnp
out
ret
dec
fcoml
aad
gs
mov
inc
xor
pop
cs
xor
push
mov
sbb
push
inc
mul
jmp
add
daa
insl
push
and
mov
or
push
into
sub
xor
ret
lret
mov
cwtl
or
movsb
jmp
mov
sbb
popa
repnz
lds
out
jecxz
shlb
loopne
stos
push
xchg
dec
ret
jmp
xor
lock
sti
mov
mov
aaa
out
gs
pop
push
adc
jg
pushf
mov
fwait
xchg
push
xchg
jecxz
adcl
xchg
lcall
sbb
or
push
es
mov
es
mov
ficoms
lret
inc
incb
test
lods
lock
cmp
xchg
dec
jbe
loop
and
loop
subl
ds
mov
cmp
out
cltd
clc
sbb
mov
rcll
jmp
lea
call
xchg
push
je
int3
scas
mov
call
std
les
push
pop
cwtl
pop
jl
imul
push
cmc
push
xchg
leave
arpl
push
xchg
pop
into
pop
add
cmp
das
sub
test
push
sub
mov
push
pusha
out
out
aad
xchg
mov
dec
cmp
sahf
mov
daa
pusha
sbb
out
and
lahf
mov
pop
imul
into
pop
and
jo
pop
aas
xchg
mov
sub
pop
add
jmp
mov
ret
push
adc
mov
xor
mov
mov
pop
and
mov
jecxz
sbb
xchg
repnz
mov
inc
cmp
xor
lods
jnp
and
adc
add
call
fldcw
fcomps
fimull
push
push
hlt
popf
insb
jo
mov
loop
cmp
sbb
xchg
movsl
cmc
push
fbstp
pop
adc
dec
xor
add
add
scas
jge
mov
sub
and
daa
ds
addl
push
mov
and
xor
aad
sub
nop
or
jne
pop
aas
jmp
pop
cmp
pop
xor
mov
aas
pop
mov
clc
clc
stos
adc
or
mov
test
icebp
sbb
pop
adc
add
movsb
incl
xchg
lods
jb
test
mov
xor
or
sahf
mov
adc
cmp
dec
fcmove
inc
icebp
sbb
cmp
jecxz
fsubrl
lock
gs
lock
aas
jle
mov
adc
and
scas
adc
repnz
daa
mov
mov
sbb
arpl
mov
xchg
out
imul
jge
insl
pop
js
sarl
popa
loopne
mov
jne
adc
and
jno
mov
or
sbbl
xchg
jnp
mov
xchg
or
out
cmpsl
aam
xlat
dec
test
fs
rorl
je
or
rorl
push
lods
fidivrl
xchg
mov
xor
pop
xchg
cmp
xchg
jle
jmp
inc
push
sub
popa
stos
fld
cli
mov
out
scas
cwtl
xchg
std
loope
sub
or
jns
test
pop
subl
shlb
dec
clc
cmp
dec
xor
pop
ja
mov
sbb
stc
inc
mov
inc
test
popf
sbb
sti
stc
ds
cmc
call
pop
fimuls
sbb
je
fdivrl
ds
gs
fiaddl
test
xchg
std
inc
xor
sbb
cmp
cmpsl
pop
lds
jl
jno
out
outsl
out
fcmovnbe
mov
or
mov
mov
in
mov
sahf
mov
stos
push
popa
mov
xchg
sti
iret
dec
ljmp
mov
jno
xor
cbtw
int3
xchg
xor
lds
and
adc
out
outsl
jne
ret
mov
inc
aas
push
stc
sbb
dec
pop
push
xlat
dec
push
mov
in
loop
sarb
sahf
jb
popa
xor
fnstcw
pop
jecxz
pop
lds
mov
outsl
mov
hlt
sbb
jnp
mov
push
aaa
subb
mov
fldln2
ret
dec
sarl
or
and
lahf
mov
out
idivb
jns
and
pop
ja
jbe
ret
stc
jge
nop
xor
xchg
hlt
xchg
jne
mov
lcall
sub
cmc
scas
repnz
xchg
mov
fiadds
ss
jo
sbb
xorl
ret
pop
xchg
sbb
in
jge
adc
mov
lret
push
or
test
int
inc
aaa
pop
sub
or
inc
jbe
and
mov
xlat
xorb
push
xchg
in
insl
mov
cltd
sub
sub
jb
jle
mov
pop
xorl
or
jo
lock
push
xchg
sub
imul
or
push
mulb
fnstenv
inc
shrl
jle
pop
pop
es
mov
imul
cmp
xchg
pop
cwtl
insl
jle
push
push
cltd
or
in
cli
push
stos
popf
inc
shl
sbb
xlat
jo
xchg
jmp
ret
xor
push
xor
jns
insl
lods
hlt
push
sbb
sub
mov
rorb
pop
mov
and
das
rol
jne
xchg
xchg
mov
test
add
nop
imul
or
xchg
clc
mov
aad
push
icebp
movsl
sbb
inc
inc
shrb
jo
mov
mov
or
and
xlat
aad
aaa
fstps
push
icebp
out
ljmp
sub
scas
sub
mov
in
sbb
push
jg
xchg
mov
das
push
push
and
and
xor
xchg
je
xor
mov
test
jmp
stos
pop
fistpl
inc
or
pop
cli
adc
push
adc
or
jle
in
fsubs
mov
jne
xchg
sub
aas
inc
jae
cmc
popf
fisttps
ja
dec
sub
mov
adc
xchg
dec
sbb
hlt
and
sbb
repnz
dec
call
popf
ret
or
dec
int
mov
lret
shl
jmp
rcrb
push
cmp
mov
scas
sbb
rcrl
jmp
dec
sarl
push
and
jae
movhps
shrb
pop
enter
cmp
inc
jns
lock
stos
push
or
or
push
hlt
sbb
js
push
mov
pop
mov
xchg
sub
decb
fidivrs
aas
into
repz
insl
fsts
rclb
aaa
das
add
icebp
ja
mov
mov
or
test
mov
fsubs
daa
add
push
mov
outsb
push
inc
dec
xor
inc
lss
pop
mov
xchg
push
je
sub
ret
push
shlb
sub
jl
ljmp
inc
inc
pop
cmp
test
jns
mov
sti
repz
pop
test
inc
imul
into
push
ror
into
sarl
pop
es
cltd
sahf
stos
loope
lahf
jne
or
xchg
adc
fcoms
shrl
clc
mov
xchg
aaa
lret
pop
popl
sub
fucom
imul
movsl
cmpsl
add
ds
outsb
lock
nop
ljmp
xchg
mov
cmp
das
jecxz
or
cli
pop
out
je
insb
enter
cmp
xchg
sbb
add
push
aaa
lods
fnstcw
add
mov
inc
adc
daa
pusha
jge
ds
outsb
fbstp
mov
push
pop
pop
jg
mov
mov
and
jge
lcall
jbe
test
jbe
xor
inc
into
ret
in
lret
arpl
pop
sbb
pop
leave
cmp
loop
xor
mov
jnp
je
insb
mov
insb
aad
or
dec
pop
mov
les
jmp
pop
pop
mov
imul
stc
dec
cmpsl
add
jns
pusha
mov
sbb
fsub
pop
ret
ds
mov
mov
mov
lods
pop
and
jo
dec
lret
xor
rorb
lds
les
in
xchg
fs
pop
lds
dec
mov
push
ja
adc
es
outsb
rol
ljmp
mov
sbb
xor
push
xchg
inc
in
xlat
iret
aad
xchg
jnp,pt
icebp
mov
add
bound
daa
ret
push
or
push
mov
ljmp
call
repz
push
in
or
mov
pop
mov
leave
shll
push
push
aam
jmp
mov
cld
addr16
lret
pop
and
pop
inc
stos
cmpb
jne
inc
push
js
pushf
jno
mov
adc
push
sbb
stc
outsb
movsl
mov
call
cmp
pop
xchg
xchg
mov
in
sti
sbb
and
sbb
adc
or
mov
in
mov
cmpb
and
divb
sahf
aas
daa
and
xchg
enter
stc
cmp
aam
pop
sbb
sbb
xchg
push
shrb
or
add
cmpsl
shlb
xchg
int3
in
cwtl
cmpsb
ds
pop
aam
scas
mov
or
bound
sub
inc
inc
faddp
dec
bound
call
imul
mov
in
mov
ss
or
pop
lahf
and
scas
or
es
inc
mov
leave
daa
jp
jmp
xor
sbb
fsts
mov
or
add
mov
dec
sbb
in
xchg
out
xor
cli
xor
sbb
icebp
dec
outsl
stc
stos
and
push
jge
sub
pop
mov
insl
repnz
shrb
imul
ds
rolb
cmp
dec
push
out
push
test
je
sbb
out
mov
aad
pushf
xor
sub
jnp
and
xor
icebp
ret
add
jns
jo
xor
outsl
rcll
arpl
xor
xor
fisubl
xor
jne
mov
push
mov
or
dec
and
cmc
sbb
lcall
sub
xchg
stc
dec
and
fisubl
and
and
cmp
mov
and
fldcw
imul
jecxz
mov
cmpb
add
cmp
xor
dec
aas
test
mov
nop
mov
ret
movsb
mov
leave
pop
push
pushf
mov
pop
pop
sbb
add
add
popa
cmp
sbb
mov
lret
inc
sbb
adc
sub
pop
push
test
inc
mov
clc
mov
dec
shr
jmp
mov
insb
ror
mov
jnp
inc
pop
mov
gs
jle
jb
inc
and
sbb
mov
les
fucomi
and
pop
bound
daa
sbb
add
popa
lods
push
mov
cmpsl
or
fdivs
scas
arpl
jnp
inc
mov
mov
into
push
pushf
or
jno
inc
and
pop
test
into
std
or
add
push
iret
xchg
ljmp
dec
xchg
sti
xchg
jne
rcr
pushf
adc
cmp
mov
or
aad
mov
shrb
xchg
mov
lods
hlt
sarb
push
adc
and
outsl
mov
int
push
test
dec
ds
out
aas
stc
pop
stos
mov
push
or
ret
jne
mov
aaa
popa
sub
add
fbstp
inc
mov
outsb
ja
sub
dec
ja
bnd
sahf
mov
and
arpl
sbb
jl
test
mov
dec
cli
xchg
inc
xlat
jge
push
push
minps
sub
xor
pop
notb
mov
xchg
sbb
cmp
mov
cltd
mov
leave
mov
inc
add
scas
ret
xchg
add
into
cs
mov
lret
fs
test
lcall
xor
arpl
js
xchg
fldcw
clc
push
cld
jno
sbb
iret
pop
jl
jle
xor
movsb
insl
daa
lods
mov
fisubs
add
scas
lcall
jg
orl
std
lods
xor
jno
sbb
mov
loop
sbb
lcall
mov
movsb
or
dec
or
mov
mov
mov
xchg
lds
xchg
mov
sbbb
push
enter
jmp
data16
fisttps
cmp
inc
sbb
sahf
es
xor
sbb
pop
mov
jmp
vmovhps
jmp
mov
xchg
xchg
mov
inc
mov
mov
cltd
cmp
jns
xchg
jmp
or
iret
pop
je
sub
jae
stc
mov
mov
jle
dec
or
jmp
sarb
call
data16
cmpsl
adc
and
inc
push
icebp
cld
cld
sarb
popf
ficomps
aad
mov
scas
sub
or
pushf
mov
mov
and
aas
lea
inc
pop
dec
ror
sbb
sbb
stos
shl
loope
jg
movsl
and
cmc
insl
fxam
jb
xor
jge
adcl
in
sub
lods
jp
fwait
xchg
ret
xchg
mov
stos
icebp
mov
faddl
stc
adc
pop
xor
mov
ficomps
scas
cltd
ljmp
jno
pop
mov
adc
or
js
out
mov
push
cmpsl
bound
push
pop
repz
adc
scas
xor
stc
push
std
aaa
inc
xor
pop
notb
loopne
pop
out
loope
inc
lds
loop,pt
jne
stc
das
sub
mov
or
ljmp
sbb
shlb
sub
testl
out
test
rorb
lock
cltd
rorl
fidivrl
clc
adc
pop
ret
xlat
dec
pop
std
repnz
cmp
push
loope
pop
ror
ficomps
adc
adc
out
mov
or
repz
dec
fstpt
cwtl
add
pop
in
sub
stc
jbe
shrl
push
nop
std
cwtl
inc
sarb
mov
iret
cli
loopne
fwait
xor
popa
mov
and
mov
aaa
mov
test
sub
std
in
mov
push
pop
test
push
addb
or
ds
cs
pusha
nop
enter
stos
push
ret
loop
repz
lods
arpl
and
inc
push
fs
shrb
xchg
push
roll
xchg
inc
adcb
xchg
je
cmp
ret
or
repnz
fisttps
xor
test
stos
out
shll
push
xlat
loop
mov
repnz
sbb
jecxz
inc
mov
pop
cwtl
fcmovu
or
fsub
mov
xor
lock
movsl
std
aad
int
sub
adc
xor
push
and
call
dec
cmp
pop
cmp
adc
dec
cmc
lahf
adc
jle
js
imul
insl
sub
addb
notl
mov
rclb
mov
jecxz
or
int
push
push
or
fstps
inc
mov
popa
or
cwtl
mov
int3
push
dec
gs
and
aam
orl
jle
xchg
sub
stc
jae
test
fildl
cwtl
enter
xchg
test
cmp
adcb
and
xchg
loopne
sbb
cmp
dec
inc
mov
das
stos
adc
arpl
mov
fwait
cmpsl
lock
pop
mov
push
jge
cmpsl
xchg
leave
aad
sbb
test
cmp
push
std
gs
xor
cmp
adc
dec
in
mov
leave
arpl
xor
int3
adc
mov
or
ss
arpl
shll
les
in
sbb
xor
push
cmp
xlat
and
dec
pushf
test
push
lcall
or
and
push
pop
mov
cld
addl
leave
pusha
test
xlat
aas
out
pushl
push
loopne
int
lods
xchg
or
xchg
mov
leave
pop
xchg
xchg
in
jno
inc
jg
adc
rcr
or
jne
sub
rep
idivb
mov
call
insl
adc
push
call
fst
dec
rorb
nop
iret
es
fwait
mov
mov
jp
xor
add
inc
xor
dec
adc
mov
cwtl
sbb
push
int3
flds
bound
mov
jne
or
fidivrs
sub
test
cltd
aad
add
fistps
in
jnp
sbb
jno
test
mov
cld
pop
lock
nop
xor
jmp
ret
sbb
pop
dec
push
gs
add
testl
adc
das
cld
out
ror
cmpsb
push
das
aam
jl
leave
mov
mov
sub
test
jae
or
shlb
push
add
xor
outsb
nop
stos
fdivrs
aam
nop
ret
add
ror
sbb
leave
cld
fs
mov
or
hlt
daa
add
popf
or
and
xchg
push
out
mov
and
lahf
icebp
cmpl
mov
xchg
adc
insl
gs
dec
cmp
mov
cmpsb
psubsb
pop
loope
pop
sbb
mov
aam
dec
in
test
test
jp
in
mov
pop
xor
mov
ds
and
push
ss
lods
inc
inc
les
mov
sahf
jmp
inc
int3
cmpsb
xor
scas
arpl
dec
loopne
mov
inc
dec
insb
and
loop
and
jecxz
movaps
mov
insl
ljmp
es
ja,pt
popf
push
push
sbb
ret
jle
mov
xchg
repnz
add
mov
arpl
aaa
into
insl
je
pop
pop
subb
repz
add
pushl
jle
and
enter
insl
sbb
and
mov
cmp
xor
imull
mov
aaa
mov
mov
jo
or
ret
pop
lods
ret
fwait
je
inc
xor
aaa
push
mov
bound
mov
in
sbb
push
movsb
jo
iret
mov
das
test
in
fisubrl
add
pop
dec
sub
test
leave
mov
inc
stc
inc
cwtl
popa
sbb
adcb
xchg
cmc
imul
lahf
lock
pop
jmp
mov
imul
je
cs
mov
push
and
jo
dec
xlat
mov
imul
add
or
dec
pop
cmpsb
jecxz
bound
ret
cmpsb
jl
push
sbb
cmp
sub
stc
jl
lcall
imul
mov
sub
add
xchg
mov
ljmp
adc
push
stc
add
lahf
test
cmp
push
testb
xor
hlt
ja
dec
xor
loopne
push
rcrb
decl
mov
ficomps
clc
pop
ljmp
lock
mov
cltd
jo
mov
bound
inc
mov
ret
std
push
sbb
xchg
arpl
mov
in
iret
inc
mov
mov
pop
mov
fwait
fs
jmp
hlt
dec
loop
call
imul
xor
test
int
stos
jmp
and
movups
shl
sbb
lock
mov
int3
scas
push
pusha
xchg
mov
pop
popa
cmp
sbb
push
mov
stos
dec
push
jo
cs
push
and
and
loop
mov
adc
icebp
pushf
add
xor
icebp
outsb
std
stos
addr16
or
sub
inc
fdiv
mov
sarl
and
fstl
xchg
icebp
popf
cmp
xchg
fisubrl
shlb
das
fwait
sub
sub
jp
mov
in
or
mov
push
jne
and
testl
push
add
dec
mov
scas
mov
jns
lret
mov
and
ljmp
movsb
mov
cmp
jle
mov
cmpsb
repnz
dec
push
xchg
and
jmp
testl
inc
leave
mov
rcr
push
push
fnstcw
loope
pop
mov
lock
jne
cmp
or
js
sub
xchg
fs
pop
popf
inc
xchg
insb
lds
ss
fisttps
dec
xchg
fwait
inc
mov
and
imul
test
inc
xor
cmp
insb
push
fdivp
adc
pop
pop
lea
repnz
mov
nop
ret
imulb
shll
jecxz
jns
sub
popa
jmp
int
sub
outsb
mov
and
sahf
icebp
mov
daa
nop
sbb
sub
cli
sti
dec
subb
mov
std
in
out
dec
mov
add
jno
imul
movsl
cltd
xor
adc
and
nop
sub
lret
nop
adc
sbb
mov
and
cmp
or
sar
fdiv
pop
mov
adc
or
jp
daa
sarl
aas
pop
adc
bound
pop
inc
jp
mov
jmp
pop
testl
lock
imul
sahf
out
filds
cmp
add
add
jo
sbb
shlb
pop
fdivrs
or
jp
in
and
or
sbb
repnz
repnz
lahf
xor
and
sub
mov
mov
push
dec
mov
pop
into
mov
outsb
xchg
or
subb
es
mov
daa
testl
ja
fidivl
dec
mov
jmp
sbb
lods
out
out
idivl
sbb
test
pop
neg
xor
lret
out
fsubs
add
xor
mov
cmp
cmc
popa
test
push
dec
scas
lret
add
mov
fidivrl
dec
xchg
sub
mov
pusha
xchg
lret
pinsrw
dec
stos
mov
pop
iret
push
cld
scas
cmc
scas
jo
jne
ficoml
mov
daa
testb
sar
lret
pop
dec
aas
dec
jne
mov
jge
push
sahf
push
ret
add
or
jmp
lret
inc
cmp
push
outsb
and
mov
incl
cmp
xchg
xor
in
into
je
mov
mov
mov
jns
inc
dec
paddusb
inc
xchg
hlt
jb
enter
xor
in
mov
mov
push
js
push
mov
mov
iret
test
dec
in
loope
test
pop
enter
ds
jmp
xlat
xchg
sub
leave
jle
jbe
cli
pop
in
or
mov
rcrl
test
cmp
jns
fs
pop
inc
orb
movsb
out
sub
in
mov
daa
sub
lcall
mov
xor
insb
dec
les
push
aad
int3
outsl
ljmp
les
stos
xchg
mov
lds
scas
test
ja
push
inc
or
cwtl
sbb
outsb
xchg
mov
mov
or
lea
jo
xor
call
pop
js
scas
repz
xor
xchg
cmp
inc
shr
sbb
mov
cmpb
in
xor
mov
add
jbe
lods
out
adc
pop
rcll
jnp
cs
jns
mov
pop
pop
xor
test
pusha
icebp
gs
adc
mov
aas
dec
imul
outsb
popa
mov
cld
fmull
pop
sti
cmp
mov
adc
pop
je
xchg
lret
stc
mov
loopne
jo
cmc
arpl
lods
jge
mov
push
roll
push
dec
cmp
in
inc
cmp
and
xchg
jae
push
fwait
pop
sti
jp
jg
push
sti
test
push
xchg
popa
fistpll
cltd
jbe
inc
stc
add
aad
adc
and
cld
sub
or
out
mov
jnp
hlt
push
sbb
mov
or
sub
adc
psrad
push
sub
repnz
cld
mov
mov
jns
inc
ficompl
mov
imul
push
aas
and
mov
xor
decb
jg
aad
xchg
mov
popf
repnz
adcb
cmp
js
and
lahf
imul
lret
and
or
rcr
insl
fstpt
add
lea
mov
loopne
pop
push
repnz
push
subl
shlb
sbb
inc
in
cmp
movsl
fimull
rclb
and
mov
mov
fistps
lds
shrb
ret
stos
and
orb
or
and
std
lods
mov
movsb
push
rep
add
mov
les
and
pop
cli
pop
inc
outsb
mov
dec
dec
pop
jne
mov
iret
out
out
push
testl
push
inc
mov
xor
loopne
add
and
ret
xchg
push
push
dec
adc
imul
les
enter
or
and
jp
clc
lcall
xchg
mov
lcall
push
xor
outsb
arpl
aaa
cmpsb
sti
jns
test
jmp
pop
push
fdivr
cmpsl
inc
ss
xchg
mov
sbb
dec
data16
out
jo
jnp
loop
test
adc
add
xchg
imul
pop
xor
ja
lcall
and
or
imul
add
mov
icebp
mov
fbld
jne
dec
testl
jle
test
pushf
dec
jno
out
sarl
movsb
fld
sbb
sarb
dec
shl
inc
rcrb
mov
sub
push
hlt
cs
inc
xor
cmp
sbb
js
cli
sbb
loopne
mov
scas
lock
ds
xchg
imul
addr16
mov
adc
dec
xchg
or
movsl
insl
sub
mov
inc
fwait
push
mov
pushf
mov
clc
in
subb
xchg
lods
push
sbb
mov
dec
mov
ret
out
aaa
adc
clc
jbe
adc
bound
or
insl
out
inc
lds
je
ss
and
mov
jb
movsl
xor
jno
sub
fwait
add
inc
add
pop
ljmp
mov
lods
loope
subb
mov
or
shrb
dec
fsubrp
pop
daa
xchg
cmpb
push
roll
adc
mov
jns
leave
and
das
mov
icebp
push
xchg
inc
adc
push
jl
popf
jnp
lods
std
arpl
xor
in
or
lods
jp
inc
outsl
inc
add
push
push
mov
addr16
imul
mov
xchg
and
sarb
push
adc
inc
jno
sbb
lods
sub
call
fldl
into
arpl
dec
lea
les
fldlg2
xor
fs
pusha
aam
insb
cmp
sbb
cmp
jecxz
push
cmc
out
xor
pop
sub
dec
jns
movsl
or
pop
pop
arpl
pop
stc
add
push
xchg
adc
pop
pop
adc
je
mov
es
dec
cld
mov
scas
cmc
adc
pop
out
push
adc
lds
cmp
jle
das
cmpl
mov
adc
fidivrs
fisubrs
mov
lcall
add
outsl
xchg
rolb
cmpsb
cmc
push
and
adc
pusha
xchg
mov
pop
vpaddw
ss
pop
pop
sub
sbb
and
pop
sub
and
push
js
les
outsl
dec
out
nop
test
pop
mov
icebp
rcr
popf
xchg
fstl
lret
aam
int3
out
mov
or
ljmp
lods
add
insl
fwait
js
adc
mov
lods
xchg
in
mov
inc
inc
cld
fisubs
cmp
xchg
repnz
fs
pop
mov
mov
jp
xor
mov
cmpsl
pop
aad
out
psadbw
pop
sbb
sbb
loop
sub
test
push
xor
fnsave
pushf
dec
bnd
pop
es
inc
xchg
fidivrs
test
andl
or
adc
or
jb
loopne
mov
pop
xchg
or
xor
roll
mov
xchg
shrb
rcrb
cmp
mov
sti
in
xchg
cwtl
ja
in
dec
push
insb
inc
and
xor
test
mov
mov
jl
cmpsl
mov
mov
lods
mov
ret
ljmp
cmp
jo
test
iret
or
ss
pop
xchg
adc
sbb
jns
int3
mov
mov
ret
mov
outsl
jo
mov
xor
mov
dec
shl
fs
fnstenv
pop
imul
xorb
cmp
scas
dec
leave
jge
lcall
cmp
push
sbb
sahf
xchg
das
add
or
out
ret
test
mov
xchg
lds
jo
lret
ja
inc
insb
pusha
mov
mov
push
orb
or
scas
or
out
mov
rcll
js
aad
es
add
sbb
push
xor
inc
mov
pushf
aad
icebp
lock
mov
incb
cmp
xor
cmp
xchg
pop
test
jo
mov
aaa
or
cltd
inc
iret
lock
daa
ljmp
add
add
sub
jp
lods
mov
fisubs
movsl
and
hlt
je
in
or
mov
and
xchg
xchg
dec
fs
nop
push
xor
push
icebp
dec
lods
lods
stos
sub
clc
add
call
pop
push
adc
lods
xor
dec
in
je
pop
ret
and
sbb
dec
push
dec
sbb
scas
call
arpl
fadds
lock
dec
mov
push
cmp
xor
adc
test
data16
ret
mov
rep
add
pop
repnz
lods
sbb
jl
sub
jge
ret
jmp
cmp
mov
das
pop
fidivl
mov
pop
pop
inc
jp
mov
mov
xor
enter
push
xor
mov
insl
pop
in
push
jg
pushf
sbb
movsb
lret
dec
push
pop
lahf
test
sbb
aas
ret
or
push
aad
and
clc
jns
nop
jle
add
jecxz
jp
fidivrl
jo
lahf
xor
and
jl
pop
lods
xor
fldcw
or
rorb
mov
fmuls
and
xchg
jo
pop
inc
mov
mov
push
cmp
jno
cmpsb
outsb
pop
popf
xor
cmpsl
rclb
rcll
inc
push
psllw
out
cmp
xchg
sbb
es
xchg
aaa
cmp
inc
or
out
sub
mov
mov
add
icebp
adcl
mov
out
xchg
rorb
frstor
jl
jmp
adc
mov
push
mov
inc
lahf
aas
push
cmp
outsl
cmpsl
push
cmp
dec
dec
dec
iret
xlat
mov
mov
pop
rol
cmp
mov
mov
cmpsl
and
nopl
lret
dec
pop
fimull
int
pop
mov
fimull
push
incl
xchg
push
mov
loope
insb
or
mov
jle
dec
inc
sbb
cmp
mov
jge
xchg
mov
out
insl
mov
pushw
sub
loopne
mov
push
add
cmp
jno
aad
cmpsl
adc
cwtl
repz
or
jns
cmc
mov
lcall
add
es
push
mov
subl
lret
cmp
adc
std
fisubs
test
dec
mov
push
imul
cmc
mov
jae
mov
push
xor
fbld
xchg
mov
pop
cs
ficomps
imul
insl
pop
scas
call
cmp
mov
iret
pop
xchg
stc
fidivl
mov
dec
xor
jae
rol
loop,pt
sahf
ret
test
aaa
adc
scas
jae
mov
scas
je
je
or
inc
imul
cmp
mov
xor
mov
icebp
adc
jl
ds
mov
jo
dec
filds
dec
and
test
popf
lcall
xchg
mov
nop
push
cmp
loope
sub
xor
mov
sbb
jle
mov
cmp
pop
out
lcall
mov
into
movsb
push
mov
sub
test
insl
repnz
pushf
imul
rol
adc
xor
pop
fimull
pop
sub
pop
ds
pop
inc
cmpl
ja
jo
lcall
dec
jle
xchg
pop
aas
loopne
test
xchg
out
inc
adc
insb
cmc
xchg
mov
addl
arpl
push
cmp
xchg
jb
jno
jb
dec
inc
pushf
dec
mov
clc
adc
mov
addb
sahf
mov
xchg
popa
xchg
xchg
fcompl
or
mov
pop
lock
stc
adc
inc
orl
cld
sbb
ja
pop
xchg
incb
je
mov
into
call
mov
sbbb
mov
lcall
mov
pop
test
xor
in
lock
inc
addr16
xor
in
mov
push
sub
insb
mov
in
mov
and
shrb
xor
int3
cmp
jbe
mov
mov
shll
test
aad
mov
icebp
mov
out
stos
dec
icebp
push
xor
jl
sbb
in
xchg
addr16
dec
cmp
push
scas
addr16
out
jecxz
clc
inc
jnp
orl
lds
mov
cwtl
mov
xchg
xor
sbb
inc
lcall
xlat
sub
addr16
mov
mov
add
lock
cli
xor
pop
xchg
aaa
cmp
scas
mov
lret
inc
xchg
insl
jmp
or
xor
mov
mov
insl
bound
out
inc
xor
js
shr
dec
push
xchg
sbb
rorl
inc
sub
in
scas
push
sbb
pusha
stos
adc
imul
mov
adc
hlt
xor
push
out
or
and
or
mov
cmp
mov
add
or
stos
adc
aaa
cwtl
jbe
pushf
leave
inc
xor
pop
mov
addl
stc
or
sbb
sbb
in
adc
test
and
mov
or
push
imul
fcmovnu
xchg
negl
lods
xor
in
mul
sbb
pusha
push
cmp
test
jnp
jne
sub
testl
push
xchg
aad
int
sbb
mov
jno
or
testl
jbe
repz
jge
les
xchg
dec
xchg
add
scas
adc
hlt
hlt
ljmp
mov
xchg
mov
pop
jnp
loopne
xchg
push
push
mov
mov
das
sub
aad
adc
gs
cmp
jl
rolb
jmp
fsubr
into
xchg
stc
in
das
sub
and
xchg
lock
dec
outsb
push
mov
pop
dec
add
fsubp
fmuls
adc
inc
rorb
in
ljmp
mov
cmp
lcall
rclb
add
and
mov
push
sub
and
adc
andb
xor
mov
subb
and
test
xchg
and
popa
pop
outsl
inc
push
ret
ret
clc
mov
mov
lcall
data16
imul
ret
jae
pop
push
or
push
dec
mov
bound
test
aaa
xor
es
fstl
loopne
test
mov
cmp
enter
mov
jo
outsl
mov
xchg
fimuls
push
dec
into
jmp
xchg
faddl
jne
pop
cli
cmp
orb
push
inc
push
xor
cltd
out
in
and
inc
inc
sahf
pop
xor
nop
rcrb
and
push
adc
addr16
lret
mov
adc
xor
bswap
push
fcmovne
pop
mov
or
rolb
add
or
int3
icebp
mov
std
test
mov
das
scas
sti
negl
inc
adc
into
or
icebp
cmp
outsl
xchg
and
scas
into
mov
data16
pushf
nop
dec
test
dec
mov
fidivrl
sarb
jle
add
pop
cmp
shrb
lret
mov
pushf
push
mov
sbbb
jle
nop
ds
decb
inc
mov
xchg
push
sbb
cmp
pop
jmp
jnp
mov
bound
pop
mov
lret
add
in
mov
sahf
push
cwtl
sbb
jmp
popa
dec
and
sbb
scas
shll
inc
fstpt
fsub
cli
out
mov
adc
insl
into
fnstsw
adc
cmp
xor
pop
pop
adc
enter
out
iret
pop
sbbb
fwait
clc
pop
and
stos
cwtl
popa
push
mov
xlat
rorl
adc
sbb
fmuls
mov
ds
dec
sbb
sbbl
xor
adc
xchg
mov
jp
jae
pop
and
xor
push
pop
mov
sub
cs
jo
add
icebp
lock
or
sbb
aad
jae
xchg
sub
xchg
sbb
mov
dec
add
sub
das
rol
mov
xlat
adc
xchg
std
sub
inc
jnp
push
push
push
add
scas
fcoms
or
into
sbb
fs
xor
push
mul
xchg
mov
lret
xor
ret
pop
mov
ss
into
sbb
cli
je
pop
imull
out
scas
insb
jo
lret
int
cli
inc
daa
push
dec
invd
stos
scas
add
es
and
in
jo
mov
mov
and
test
adc
jno
imul
lea
mov
lods
das
popa
lock
ja
mov
mov
rcr
rol
or
shl
mov
ss
sbb
inc
int
sti
out
xchg
in
dec
int3
or
mov
sahf
xor
push
push
and
idivb
flds
pushf
and
fcomps
loopne
cmp
mov
jecxz
movsb
fnop
mov
or
mov
lret
into
nop
bound
xlat
daa
sub
jbe
cmp
mov
pop
lret
arpl
stos
cs
call
inc
insl
int
inc
std
ja
cmp
mov
inc
and
mov
lock
insl
adc
push
call
mov
xor
pop
inc
stc
and
dec
adc
dec
fidivl
sub
ja
xor
xor
ljmp
repz
mov
lret
or
outsl
imul
test
cmp
pop
lcall
pop
pop
cmp
insl
aaa
aad
rcll
gs
cmp
cmp
mov
add
adc
rolb
aad
sbb
xchg
push
or
push
pop
add
out
mov
fwait
daa
orb
faddl
xchg
pushf
leave
mov
repz
mov
fcmovnb
xor
ret
stc
dec
inc
dec
add
xor
leave
cmp
jp
shr
adc
jno
mov
roll
rolb
pcmpeqd
mov
enter
pop
ss
sub
dec
push
sub
icebp
mov
aas
fbld
ficompl
nop
push
mov
cmp
xor
push
xchg
sahf
inc
out
popa
js
mov
xor
hlt
test
and
sbb
outsb
std
sub
sub
pop
stos
push
and
in
movsb
mov
shlb
mov
jo
push
jecxz
rorl
mull
int
mov
add
mov
fs
xlat
mov
mov
push
xchg
xor
xor
adcb
mov
jmp
mov
xchg
adcl
xchg
ficompl
ljmp
pop
icebp
or
inc
inc
sub
xor
adc
ss
or
pop
mov
xor
notb
pop
xchg
pop
xor
movsb
mov
hlt
movsb
cwtl
sub
sbb
mov
mov
xor
dec
movsl
xor
fwait
int
out
inc
dec
mov
rcrb
shll
nop
adc
inc
in
xchg
fwait
or
outsb
and
pop
pusha
adc
nop
stos
cmp
pop
mov
cmp
pop
mov
mov
pop
cld
mov
std
sbbl
addr16
mov
ss
into
jle
int
popf
sub
jnp
int
inc
xchg
mov
jns
mov
or
xchg
call
cltd
push
clc
adc
stc
pop
xor
sub
xchg
sti
xlat
or
insb
sub
test
lock
rorb
in
leave
mov
sarb
rcl
ficomps
and
xchg
mov
aaa
pop
fnstenv
das
shrl
dec
shl
sub
xchg
add
test
push
mov
sbb
out
movsb
loopne
add
xor
data16
push
and
cmpsb
cmp
xchg
push
and
jecxz
daa
loopne
pop
add
push
mov
ljmp
and
inc
into
push
mov
and
cmp
fs
xor
stc
or
sarl
pop
cs
sti
pop
cwtl
sbb
push
cmpsl
fidivs
add
adc
inc
xor
xor
xchg
ss
into
xor
cmp
sub
test
push
xchg
adc
jo
mov
jno
add
sbb
pop
cs
shlb
aam
pop
cmp
add
repz
fnsave
lret
and
loopne
rcll
mov
gs
adc
mov
xchg
cmp
cmpsl
fcmovnb
shl
out
outsl
cmpsb
sub
addr16
pusha
lea
bound
iret
fst
cltd
fsubrs
icebp
or
or
imul
inc
popf
mov
sub
add
jae
movsb
ljmp
test
fildll
lret
stos
scas
pop
xchg
sahf
mov
js
jg
xchg
or
mov
sub
adc
jbe
mov
in
mov
mov
mov
stc
sbb
stos
jg
add
mov
mov
pusha
xor
jbe
push
pop
cli
pop
cmpl
or
out
lea
out
sub
scas
ss
xor
repz
fistpll
mov
sub
cmpb
std
and
mov
adc
pop
cmp
addr16
jmp
and
add
xchg
shrb
lret
dec
out
mov
scas
lret
cmpsb
xor
in
dec
pop
nop
fisubl
and
adc
movsl
shll
pop
lret
js
inc
iret
cltd
or
or
sbb
pushf
adc
dec
sub
in
xorb
out
push
ret
icebp
sub
xchg
lahf
shll
sbb
in
sub
lods
sti
jo
sub
pop
rcrb
push
sub
inc
test
adc
lret
pop
mov
sbb
daa
push
jge
hlt
and
leave
mov
hlt
stos
push
cmpsl
jle
cmpsb
je
repz
leave
shrb
insb
mov
fidivs
push
mov
sbb
mov
loop
xchg
sbb
stos
xchg
arpl
pop
cmp
cmp
or
lret
sbb
cmc
push
sahf
loop
cli
mov
or
or
test
out
and
aaa
bound
test
div
sub
inc
and
or
mov
psubw
xchg
jnp
sub
cli
cmp
les
outsl
test
mov
insl
jb
rcrl
push
and
lea
sarb
pop
xchg
rcll
es
imul
scas
pop
or
enter
mov
popf
ss
dec
lods
pushl
adc
xchg
pusha
int
and
fsubl
mov
es
sbb
in
faddl
cmp
and
xor
mov
out
aaa
gs
inc
jns
bnd
bound
dec
cmp
mov
stc
stos
push
addr16
sbb
adc
out
sub
leave
cmpsl
call
add
push
mov
loopne
inc
mull
out
shrl
jb
pushl
xor
mov
aad
scas
and
imul
inc
jae
testl
push
shl
and
cmp
adc
sbb
jge
test
xor
ficoml
push
icebp
les
lahf
adc
mov
mov
and
xor
mov
xchg
jg
pop
int
repnz
in
xchg
clc
out
je
push
int
filds
std
insb
cmp
cltd
loop
inc
push
lret
mov
pop
sbb
adc
xchg
push
add
mov
and
rorb
push
fisubrl
mov
call
sub
adc
fistpll
mov
das
push
cli
sbb
lods
xchg
movsb
bound
mov
xchg
jmp
mov
pop
mov
std
pop
dec
fwait
cmpsl
or
fldl
stos
push
lock
cmp
adc
cmp
sbb
test
mov
jmp
cmp
mov
sbb
mov
xchg
ljmp
aad
inc
adcb
add
add
das
xchg
xchg
aaa
mov
ret
stos
sbb
add
mov
shlb
and
push
fwait
in
inc
fwait
adc
in
mov
push
mov
jp
stos
dec
sbb
fcoml
idivb
shl
iret
xchg
mov
sub
dec
add
gs
in
bnd
shll
xchg
nop
sbb
in
add
loop
mov
mov
push
cmp
nop
js
cwtl
gs
mov
inc
or
js
cmc
addl
xor
mul
fildll
mov
xchg
rorl
imul
push
pusha
mov
xchg
jns
mov
inc
sbb
stos
pop
sahf
or
ret
inc
jmp
lret
lret
mov
mov
int
arpl
insb
pop
js
sub
mov
hlt
movb
jnp
jns
push
lods
movsl
fs
jae
mov
data16
or
add
dec
imul
bound
dec
sbb
enter
push
js
jl
pop
pop
jns
jnp
sti
mov
pop
dec
pop
cmp
adc
stc
loopne
and
adc
mov
cmp
icebp
lret
addr16
mov
dec
cmp
sub
adc
inc
cmp
int3
mov
or
inc
jno
xchg
jno
sbb
or
mov
pop
lods
and
sbb
idivl
mov
mulb
mov
insl
lock
jge
pop
movsb
pushf
cmp
push
cmp
sub
sub
lock
xchg
pusha
sti
cmp
ljmp
insl
paddw
cld
nop
ljmp
add
fildl
in
sahf
xchg
ret
stos
sub
pop
sbb
aad
fsubrl
sub
cmp
dec
pop
dec
xor
pushf
push
cwtl
pop
clc
aad
xor
lods
dec
sahf
or
test
inc
inc
pop
dec
mov
jecxz
push
adc
adc
xor
and
dec
sub
sub
pop
jge
jl
xchg
cwtl
cld
cwtl
popf
push
scas
sbb
inc
or
repz
fst
dec
pop
in
stos
sbb
inc
out
call
xor
pop
rcl
dec
sbb
fcoms
nop
jmp
dec
and
inc
pusha
adc
push
fsubr
es
jp
mov
ljmp
inc
adc
add
insl
pop
cmp
jl
add
ja
dec
mov
addr16
into
push
inc
je
sub
vunpckhpd
shlb
cmp
cmpsb
in
hlt
push
insl
rol
mov
cmpsl
push
push
dec
lret
dec
js
dec
push
inc
or
jp
dec
ss
push
fiadds
inc
mov
ffreep
sub
xor
mov
rorb
adcl
in
dec
std
mov
xchg
sub
cmp
scas
xor
add
adc
aaa
jecxz
es
cmp
out
clc
cmp
orb
gs
cmp
or
loopne
inc
mov
mov
adc
mov
add
xor
mov
and
add
jle
notl
ret
push
les
imul
cmpsl
adc
in
push
cmp
mov
decb
insb
xor
outsl
loope
dec
xor
xchg
imul
pop
push
imul
mov
cmp
ds
dec
fwait
arpl
jno
fs
ja
and
mov
inc
into
add
adc
mov
lods
pop
push
sbb
pop
xchg
lret
inc
mov
jo
sti
push
mov
mov
dec
and
push
and
insl
or
xchg
ds
push
clc
sub
aam
or
jl
inc
stc
cmp
imul
cmpsb
and
notb
cmp
outsl
xchg
ror
push
cld
add
mov
push
dec
mov
outsl
loopne
daa
rcll
int
push
repz
pop
imul
or
inc
in
dec
xchg
mov
adc
mov
inc
bound
scas
das
movl
mov
imul
xor
xlat
cltd
out
hlt
repz
fbld
jecxz
xor
jne
loop
push
cmc
pop
pop
pushf
xor
jge
data16
xor
lea
push
jnp
and
nop
in
je
sbb
repnz
test
mov
dec
or
cld
shrl
negb
jg
out
ret
xor
xor
jg
mov
fistpll
xor
movsb
loop
shll
clc
sbb
jge
icebp
xchg
mov
xchg
lret
int
clc
push
xchg
movsb
push
jno
xchg
xchg
dec
outsl
lcall
xor
mov
rcll
dec
mov
push
mov
repz
in
cld
lock
inc
std
mov
cmp
xchg
cmp
mov
pop
mov
pop
mov
ret
es
add
xor
movsb
mov
mov
adc
rcrl
daa
or
or
imul
add
sub
leave
dec
flds
les
fidivl
bound
insb
fcomps
aas
mov
xor
mov
fcmovnb
mov
inc
and
pop
sti
or
jnp
cmp
pop
popa
or
mov
jbe
adc
pop
cld
sbb
and
outsb
js
es
xlat
or
jecxz
inc
push
jae
or
lahf
cmpsl
ja
andb
shrl
xor
and
ret
cmp
dec
jbe
stc
and
push
xorl
jmp
ret
bound
rcll
mov
pushf
dec
jbe
test
daa
fidivrl
mov
nop
pop
xchg
jl
and
xorb
mov
lods
jno
xchg
outsb
outsl
mov
push
lahf
or
or
jbe
into
loopne
gs
jmp
insl
mov
push
push
scas
test
mov
mov
fdivrp
and
push
cwtl
dec
sbb
sub
adc
xchg
cmp
lds
stc
int
stc
cs
cmc
stos
int3
imul
jno
out
mov
cmc
lds
sbb
cmp
ret
and
xor
rorb
je
push
pop
imul
sbb
sbbl
mov
jnp
pop
icebp
popa
std
add
ret
pop
outsb
xchg
js
out
add
es
add
int3
mov
ret
repz
rclb
mov
out
push
mov
mov
lahf
sbb
xchg
jl
push
add
dec
fisubrl
add
or
dec
sbb
lcall
jo
jle
adc
xchg
data16
pop
inc
xor
js
mov
pop
imul
dec
fstps
clc
mov
adc
pop
inc
in
movsb
hlt
jns
xchg
cmp
in
aas
xlat
cmpsb
aam
pop
adc
movsb
cmp
bound
pop
xchg
out
jle
test
in
sahf
aam
dec
push
js
jle
pop
mov
jg
xchg
inc
add
bound
cmp
jne
cmp
mov
jmp
ret
mov
insb
cli
sub
or
dec
cmp
das
cltd
and
es
ret
pusha
scas
mov
lret
cli
xchg
lods
xor
jbe
rcrl
mov
dec
sub
sbb
xor
jg
aad
shlb
sub
push
ljmp
mov
pop
fsub
das
loope
cmp
xchg
mov
cmp
sub
fidivs
push
test
inc
leave
int
sub
hlt
or
push
popf
pop
jns
pop
out
cmp
jbe
mov
jg
add
jb
xchg
pusha
arpl
xlat
idivl
stos
xchg
jnp
sahf
mov
dec
sahf
pop
icebp
dec
push
sub
fsubrs
mov
or
out
mov
jns
test
mov
cmpsb
mov
out
fstpl
ja
repz
test
stc
inc
and
ret
jg
push
inc
or
or
scas
cltd
outsb
pushl
scas
lcall
mov
sub
inc
in
mov
in
inc
out
lret
mov
xchg
movsl
push
enter
out
dec
and
add
xchg
fidivrl
pop
stos
xor
stc
popa
prefetcht1
jg
push
loop
data16
outsl
out
sbb
xchg
ljmp
pop
ljmp
push
jmp
dec
add
jbe
adc
pop
mov
insl
test
cld
insb
sti
xorl
cli
cmc
sub
bound
sub
xlat
add
cmp
out
mov
pop
cmp
loope
loopne
mov
fwait
or
sbb
pop
fisubrl
test
add
popf
int
sub
pop
push
out
or
out
inc
add
lcall
std
and
fcoms
sbb
mov
pop
inc
ljmp
outsb
sub
call
add
lods
fcoml
mov
ss
test
out
xchg
stos
mov
or
xchg
push
imul
je
aaa
fisubrs
jns
push
mov
and
mov
in
cmp
adc
int
adc
add
repnz
dec
cmpsb
daa
push
push
push
xchg
dec
out
mov
jno
test
pop
divb
cmpsb
mov
cmp
pop
mov
movsl
loop
std
adc
inc
add
adc
mov
stc
fildl
loope
pop
pop
mov
int
sub
loop
ror
int3
adc
fsubrs
push
add
or
mov
push
pop
mov
push
mov
imul
pop
inc
adcb
icebp
movsb
sbb
je
sbb
mov
xor
cli
lret
add
bound
dec
inc
adc
stos
sbb
adc
aad
mov
data16
ja
add
inc
sbb
pop
loope
iret
rcrl
dec
mov
ret
adc
mov
pop
sbb
jle
mov
and
lret
mov
leave
imul
gs
lock
iret
add
test
xor
mov
lret
repz
push
or
fdivs
andb
mov
inc
aas
in
test
dec
mov
mov
jg
cli
scas
loop
push
in
shlb
jle,pn
aam
rorl
out
aam
or
lret
repnz
test
xchg
or
xor
adc
push
aaa
shl
sahf
cmp
mov
pop
aaa
mov
xchg
test
sbb
xchg
push
stc
pop
call
repz
out
iret
bound
dec
mov
enter
mul
mov
push
ljmp
les
sbb
pop
xchg
cltd
les
cltd
and
adc
es
push
adc
sarl
dec
mov
push
repnz
mov
imul
lock
mov
add
testb
cmpsb
hlt
xchg
out
scas
fisttpll
sub
jmp
mov
mov
xchg
mov
pop
cltd
test
loopne
jl
test
lret
jbe
fwait
mov
mov
mov
enter
sub
jns
inc
rcr
test
std
inc
movsb
int
mov
bound
std
xor
cmp
and
xor
jne,pn
mov
lahf
xor
pop
rclb
arpl
cli
adc
fmuls
mov
bound
fwait
lret
lret
inc
or
popf
test
hlt
fisubl
mov
lret
das
in
cs
mov
arpl
adc
mov
shrl
mov
or
inc
cmp
cmc
pop
or
mov
testb
lods
mov
outsb
mov
call
push
xchg
adc
nop
mov
daa
add
cltd
push
cltd
movsb
cmp
hlt
in
movl
fsubrl
jge
loop
ss
dec
mov
add
xchg
out
mov
push
add
mov
lock
sbb
mov
arpl
das
dec
sahf
jl
or
xor
sub
mov
pop
inc
nop
into
loopne
dec
xor
and
push
xor
cwtl
js
inc
or
adc
xor
pop
jecxz
ret
aam
imul
dec
jae
sti
push
test
sbb
push
mov
and
in
fwait
xor
jle
icebp
insb
or
loopne
cwtl
divl
jno
sbb
insb
icebp
pop
repz
in
xchg
data16
push
jnp
inc
in
addl
mov
loopne
in
inc
testl
repnz
out
dec
ljmp
out
rol
std
enter
pop
pusha
mov
rcll
ja
dec
dec
scas
lret
clc
mov
cltd
jmp
cmp
fisttpl
ds
adc
sub
push
ret
xor
sub
jecxz
pop
fiadds
push
test
scas
stc
sbb
jg
pop
adcl
aad
sub
iret
xchg
lods
inc
pop
movsb
inc
test
stos
ret
into
mov
cmp
jmp
pop
ljmp
mov
cmp
push
std
add
mov
mov
dec
add
mov
in
jmp
iret
clc
cltd
inc
lods
inc
cltd
jo
lock
ja
jno
cmp
mov
mov
pop
mov
lds
inc
ret
jno
gs
bound
lcall
imul
std
mov
enter
push
and
leave
and
cmp
cld
popa
leave
pop
push
shl
cmp
test
dec
sub
adc
mov
lret
cmp
mov
rol
add
pushf
sbb
add
sbb
scas
xor
gs
xor
xchg
mov
cmc
adc
es
inc
lods
mov
loopne
push
lods
std
xchg
sbb
sbb
xor
int3
imul
lret
jp
test
sub
ja
dec
inc
xchg
push
mov
pusha
adc
stos
lods
cmp
out
xor
js
movsl
shll
outsl
movsl
movsl
jbe
in
mov
add
mov
or
aam
adc
cmpsl
test
sbb
xlat
stc
sbb
push
fwait
pop
jb
cmp
inc
enter
int
and
fldcw
in
sbb
iret
push
sbb
out
mov
sub
and
sbb
dec
into
mov
outsb
jecxz
lods
fbstp
ja
loope
out
lods
pop
xor
loope
sub
mov
adc
das
aad
xor
add
pop
xchg
add
and
xchg
daa
mov
outsb
mov
xchg
nop
cmpsl
das
mov
in
dec
or
mov
or
and
jecxz
addr16
repz
and
jnp
xor
mov
sub
dec
movsb
adcb
shll
repz
dec
rcrb
mov
in
mov
push
add
lods
inc
scas
jo
fs
adc
ret
jge
push
fmul
mov
mov
aam
dec
push
ss
and
cmp
insl
in
or
fsubs
lods
push
adc
add
daa
mov
jge
lret
popf
add
mov
mov
jle
mov
imul
cs
das
push
insb
pop
mov
sbb
push
lock
pop
aad
jle
es
int
aad
xchg
pop
ljmp
jae
jle
cmp
mov
adc
push
addr16
outsb
imul
out
adc
subb
sbb
fisubrs
fnstcw
repz
popf
data16
xor
xorl
adc
inc
jge
dec
mov
adc
movsl
loop
je
pop
imul
jp
insb
loope
insb
out
pop
daa
shl
add
pop
fistps
and
testb
aaa
pop
mov
add
sub
sbb
lret
add
mov
scas
xchg
cmp
loop
lret
shlb
adc
push
sbb
mov
or
bound
xchg
and
xor
ret
repnz
ror
daa
lea
es
push
jns
mov
jge
in
negl
push
xadd
cmp
pop
add
xor
sbb
fs
mov
sub
or
icebp
shlb
gs
bound
jns
add
and
test
push
inc
and
add
add
lea
test
push
fstps
push
stos
push
push
into
fmulp
and
adc
sbb
cmp
addr16
into
fwait
add
fcoms
in
mov
incb
out
dec
cmp
hlt
add
mov
lea
push
lea
js
jp
xlat
adc
xchg
ret
xor
out
fsubrl
lods
aaa
nop
jnp
push
sub
daa
mov
jmp
out
mov
fwait
push
xor
mov
or
sbb
mov
mov
mov
std
mov
mov
in
mov
repz
ret
aas
and
or
inc
je
mov
bound
ret
mov
shll
and
and
icebp
xor
pop
int
imul
imull
insl
adc
xchg
dec
push
frstor
add
inc
mov
ret
sbb
repnz
sub
jl
inc
xor
xor
adc
adc
xorb
sti
or
push
pop
or
push
shrl
std
cli
inc
cmp
lds
fsubrl
fstpl
push
test
in
mov
jb
pop
push
xlat
mov
out
stos
add
bound
mov
lea
aas
cmp
cli
scas
out
addr16
sbb
sbb
out
jae
xor
enter
pop
sub
xor
out
or
cmp
xlat
xchg
xchg
xor
add
dec
mov
jae,pt
pop
mov
lahf
ljmp
lods
outsb
lods
rorl
pop
je
leave
daa
popa
mul
clc
cmp
inc
rorl
clc
cmp
cmp
xor
push
jae
push
mov
mov
fwait
xor
fdivl
mov
movsl
fmuls
in
cmp
rorl
add
mov
mov
gs
jg
int
loop
mov
idivb
stos
cltd
or
enter
adc
testb
dec
popfw
sbb
mov
sbb
fwait
outsl
add
mov
xchg
jle
xor
in
fildl
push
inc
pop
push
ret
in
shll
shrl
cmpsl
sub
icebp
dec
cld
ds
bound
lret
xchg
mov
mov
pop
clc
xor
or
or
or
xor
out
jmp
inc
push
fsts
or
lahf
out
mov
push
adc
movsl
jg
inc
or
sub
cmp
bswap
loopne
test
sub
xlat
imul
jl
cs
push
push
jmp
jecxz
jl
jnp
mov
nop
inc
jb
pop
and
cmpl
jnp
xchg
jnp
push
push
or
sbb
out
shll
add
xchg
arpl
cltd
sbb
inc
adc
loop
sar
add
stc
mov
mov
fwait
sahf
pop
adc
popa
mov
dec
add
fildl
push
mov
cwtl
std
or
inc
cli
mov
repnz
push
test
push
dec
jle
mov
jne
es
bnd
adc
aad
jb
fcoms
push
aaa
jno
fs
adc
pop
push
xchg
jl
mov
jns
jg
sbb
or
clc
mov
test
div
in
adc
inc
pop
rolb
xchg
xor
inc
popa
bnd
lret
push
mov
mov
cwtl
mov
aam
or
jae
push
mov
loope
inc
icebp
pop
adc
add
std
add
aas
call
mov
jg
inc
neg
pop
cmp
mov
add
jl
sbb
std
push
and
sub
cmp
pop
into
xchg
inc
add
push
scas
add
adc
dec
popf
and
enter
sub
jle
pop
sub
add
ljmp
mov
mov
jle
add
inc
mov
or
fiadds
mov
sbb
mov
push
cld
lods
popa
fmuls
pop
insl
xor
daa
shrl
inc
xlat
jl
iret
push
xchg
pop
dec
rorl
mov
in
stc
xchg
aad
push
aad
sub
fists
leave
dec
cmp
test
test
ljmp
fisubrs
out
push
es
pop
cld
lock
xchg
and
rcr
jb
inc
bnd
out
in
xchg
inc
fld
pushf
fmuls
inc
xor
test
lods
fidivl
movsl
mov
fisttpl
cmp
pop
cld
jae
bnd
jnp
outsl
push
sub
push
jmp
int
jmp
pop
mov
sbb
lret
stos
or
ror
push
pop
mov
cs
insl
jae
push
ja
cmpsb
rol
mov
ja
and
sub
adc
das
js
cltd
dec
mov
mov
orb
adc
sub
xor
mov
popl
sub
jnp
enter
adcb
xchg
outsl
jne
cs
mov
inc
cwtl
jmp
pop
repz
mov
stos
xchg
fsubl
movntq
xchg
je
sbb
lahf
lret
sub
arpl
and
outsl
les
or
imul
cs
add
inc
inc
inc
loopne
inc
push
daa
and
ja
andl
lahf
movsb
and
mov
dec
sbb
xor
xchg
or
loope
in
mov
leave
and
mov
push
mov
adc
push
subb
xchg
arpl
sahf
addb
addr16
fisubl
bound
movsl
cmpsb
imul
jle
dec
mov
scas
jb
pushf
inc
pop
jno
inc
enter
push
cmp
stc
inc
or
dec
sbb
pop
push
enter
out
fwait
lret
in
dec
add
test
jmp
hlt
pop
xchg
lods
fcomi
push
dec
mov
push
out
mov
lret
es
test
clc
xor
es
gs
jg
hlt
dec
push
mov
jns
adc
push
movsl
or
lret
jno
sub
jbe
aad
pop
cmpsl
je
mov
imul
push
xlat
cmp
and
or
mov
pop
xor
sbb
push
fisttpl
mov
jecxz
xchg
jge
sbb
into
or
mov
sub
pop
add
and
mov
daa
dec
mov
jb
aas
popf
xchg
scas
nop
daa
insb
mov
and
lds
mov
dec
popf
in
jl
push
cli
incl
mov
mov
pop
adc
test
or
xchg
int
push
ljmp
data16
mov
outsl
inc
cmp
or
adc
arpl
push
jns
add
outsl
sub
rcr
mov
sbb
cmpsb
ja
movsb
fstpl
pop
mov
jmp
andb
call
sbb
testl
sbbl
stos
mov
jecxz
mull
fcompl
lahf
fcoml
les
dec
add
adc
add
loopne
jae
hlt
mov
inc
addl
gs
lret
fistpl
ret
or
push
adcb
ds
nop
shrb
inc
sub
arpl
mov
adc
jo
fstpl
rclb
pop
iret
insl
mov
subb
hlt
data16
out
xor
dec
sbb
xchg
testb
dec
test
sub
mov
insl
xlat
jbe
mov
jge
cmp
push
mov
xlat
sub
sub
lcall
jbe
andl
jmp
xorl
mov
push
mov
fwait
jnp
call
push
push
int
inc
xchg
mov
push
fisttps
sbb
movsl
mov
ja
ja
fistpl
or
xchg
test
out
adc
xor
pop
xor
and
jmp
dec
sahf
sbb
push
mov
push
sbb
setge
addr16
jge
outsb
mov
dec
insl
mov
ret
pop
roll
movsb
xor
popf
adc
ja
test
cmpsl
aaa
sbb
pop
jecxz
aam
stos
sub
inc
push
lahf
xchg
js
test
xor
xor
aad
test
test
cmp
adc
adc
adc
jns
mov
notb
push
imul
jmp
les
add
dec
mov
xchg
xchg
iret
sbb
lret
imul
test
fistpll
pop
dec
jae
xor
mull
add
jo
aas
sub
fnstcw
pop
aas
jns
aam
and
dec
cs
and
movb
or
ss
sub
cld
shll
push
sbb
and
pop
data16
sbb
or
pusha
jmp
pop
push
inc
stos
push
idiv
addr16
sbb
pop
div
mov
mov
xchg
mov
addr16
lea
fsubs
push
cmp
popa
dec
es
popa
pop
dec
adc
pop
dec
loopne
outsb
adc
cmp
jo
pop
dec
out
xorb
mov
aaa
imul
fs
push
bound
push
scas
jmp
iret
or
push
test
scas
fcmovne
jno
aaa
addr16
daa
insl
push
adc
addr16
sbb
push
inc
sbbl
jns
jecxz
cmp
jnp
sti
push
into
mov
sub
inc
mov
sbb
fwait
jae
mov
dec
mov
mov
and
jp
pop
push
xor
mov
ret
pop
push
xchg
pop
in
popf
mov
in
cmpsl
icebp
jns
mov
mov
lock
inc
jnp
jmp
les
add
jbe
insb
je
hlt
aaa
mov
jbe
loopne
cs
inc
stos
test
movsb
aaa
xor
pop
xor
sbb
mov
mov
daa
sarb
mov
sub
bound
xchg
mov
ret
mov
xorl
fs
pop
in
lret
inc
lods
cmpsb
cli
bound
push
mov
lret
inc
xor
lcall
pop
in
bound
test
inc
mov
gs
sub
fnstsw
in
popa
mov
fdivs
test
cmpsb
and
xor
dec
std
mov
imul
dec
stos
mov
cmpsb
mov
movsl
mov
lds
fsts
call
and
add
loopne
mov
pusha
xor
mov
push
bound
push
or
or
and
mov
cwtl
adc
icebp
popf
pop
sbb
mov
enter
cmc
add
sahf
adc
sbb
jo
in
shr
in
std
mov
repnz
push
mov
faddl
mov
mov
fstl
mov
ljmp
mov
sbb
jl
lds
ret
dec
fnstenv
mov
cld
inc
lcall
mov
pop
mov
mov
sbb
pop
lea
jns
inc
sub
xchg
push
jp
outsb
xchg
fwait
xchg
xor
cltd
fsubr
mov
pusha
scas
cmp
pusha
xor
xchg
mov
scas
xchg
xchg
push
xchg
cs
sbb
in
add
outsl
pusha
dec
sub
xchg
xchg
sti
push
jnp
xor
lock
sar
pop
xor
out
xorl
xchg
jo
negl
ljmp
movsl
dec
ret
addr16
jp
push
add
sub
add
pop
lock
jle
jecxz
je
fsts
mul
mov
sub
inc
outsb
shll
cmpsb
lret
mov
pop
and
stc
orb
mov
cmp
mov
cmp
dec
mov
add
stos
or
daa
lcall
fadd
js
out
setle
orl
insl
sahf
inc
mov
cmp
inc
iret
jmp
or
pop
fnstcw
jle
mov
mov
push
test
lcall
les
into
pop
clc
xor
sahf
push
adc
lret
movsl
add
mov
xor
push
lahf
js
dec
aas
insb
push
pop
or
mov
cmp
enter
jmp
or
adc
test
cs
int3
loop
push
ret
lret
movsb
popf
and
push
pop
and
addb
lahf
mov
addb
cmp
ja
add
pop
xor
insl
lahf
jae
cli
mov
jno
int
mov
sub
int3
hlt
and
mov
movsl
cmc
int
push
mov
sub
mov
mov
adc
xchg
jae
lds
inc
fiaddl
int3
jle
mov
or
lret
repnz
mov
nop
inc
call
mov
and
repz
lahf
jo
into
iret
inc
or
bound
mov
adc
mov
or
std
xor
mov
mov
inc
or
push
mov
call
call
push
xchg
int3
shrl
mov
fnstcw
dec
fdiv
mov
lods
adc
add
push
jae
push
jb
cmc
xchg
std
jb
inc
mov
pop
sub
push
lea
mov
adc
popa
inc
stc
repz
mov
inc
pop
arpl
mov
xchg
sbb
fnstsw
push
adc
lcall
xchg
push
adc
jb
or
daa
lock
mov
ljmp
xchg
repz
jns
mov
jne
jbe
fsubl
andl
sahf
pop
dec
jb
jb
sahf
jge
cmp
sti
pop
lds
pop
sti
xchg
sub
sbbb
mov
cld
ljmp
push
xchg
mov
rcr
inc
jge
pop
loop
ja
mov
aas
cmp
mov
xchg
xchg
mov
xchg
clc
addr16
push
imul
pop
aas
mov
js
ret
pushf
cs
and
mov
rcrl
pop
mov
sub
pop
ret
cld
out
in
push
cmp
shrb
mov
pop
inc
push
pop
push
xchg
std
cmc
inc
xor
ja
pop
popf
sbb
push
push
pusha
addl
mov
jl
push
les
mov
fidivs
mov
inc
add
sbbl
cmp
repz
or
loopne
repz
jmp
test
mov
mov
out
stc
cmp
mov
cmp
int3
in
stos
loope
mov
fs
orb
dec
aam
xor
icebp
mov
into
iret
jecxz
xor
js
jo
int3
enter
shlb
jne
jge
out
or
sbb
push
out
and
mov
mov
jo
cs
ror
mov
adc
and
lds
mov
mov
pusha
mov
xor
sahf
outsb
mov
xchg
ret
je
cld
pushf
out
int
neg
in
adc
sbb
out
mov
cli
xchg
repz
mov
shrl
pop
and
fst
xchg
js
mov
mov
enter
outsl
movsb
xchg
xor
jb
add
mov
mov
pop
clc
test
les
lock
call
cmp
fidivrs
ror
outsb
sbb
mov
lods
shrb
jbe
data16
sbb
imul
mov
scas
sub
cmp
or
inc
mov
xchg
jo
out
mov
lret
xor
dec
dec
int
dec
fwait
inc
mov
fdivp
mov
cmp
pop
push
mov
lahf
out
mov
lods
into
jb
fimull
adc
icebp
dec
imul
cmp
dec
sbb
rolb
aam
adc
and
jnp
jb
ja
les
out
int3
xchg
add
pop
push
jnp
or
scas
push
orb
mov
gs
int3
inc
mov
or
jbe
imul
repnz
sub
stc
movsl
fistpll
inc
inc
hlt
mov
cmp
push
ds
or
mov
add
cmpsb
pop
sbb
rcl
sub
lds
inc
push
cmp
xor
add
mov
mov
add
push
push
nop
imul
movsb
test
add
sub
in
sbbl
and
shl
cwtl
or
stc
fdivrl
sub
ja
in
hlt
outsl
loopne
or
cltd
fnstsw
roll
fisubl
inc
ljmp
dec
dec
stos
out
push
cmpsl
sub
inc
ret
sub
rcll
in
dec
cmpsl
adc
lret
push
dec
inc
sti
jg
mov
bswap
dec
xchg
aas
fmuls
std
iret
icebp
jge
out
sbb
and
sub
notl
push
ja
shl
adc
aas
jecxz
nop
sahf
push
mov
push
or
sbb
pop
inc
sub
xor
fstps
mov
mov
push
cmpsb
pusha
call
es
mov
insl
cmpsl
xchg
cs
xlat
sbb
lods
adc
repz
loopne
shr
filds
dec
dec
dec
mov
stos
pushf
aas
mov
adc
cmp
jmp
sahf
mov
mov
or
sbb
data16
imul
fsub
jb
dec
mov
fists
mov
and
cwtl
sub
inc
sbb
movsl
dec
inc
jp
sahf
mov
sbb
test
push
xchg
test
fnstenv
pushf
mov
mul
test
cmp
fistps
loope
mov
scas
or
mov
mov
push
das
pop
add
mov
dec
std
xor
es
jmp
or
iret
inc
out
and
pop
or
ficomps
outsb
xchg
xchg
sahf
jle
imul
inc
ret
push
shlb
xor
pop
jbe
inc
xor
push
lock
mov
mov
mov
add
lret
mov
out
pop
movl
mul
mov
adc
pop
xor
imul
aaa
pop
xchg
subb
inc
xlat
xchg
sbb
outsl
cmp
aaa
push
add
push
sub
mov
in
cs
push
sub
mov
and
pop
push
mov
clc
repz
add
xchg
cmp
mov
inc
cmc
divl
mov
fsubrs
jns
lcall
dec
test
into
movsb
sub
pop
sbb
xchg
rorl
js
adc
dec
xchg
lret
dec
aam
xchg
mov
out
fimuls
mov
sub
and
notl
jns
cwtl
mov
push
incb
cmpsb
sub
mov
lea
xchg
stos
fisttpl
orl
loopne
mov
jnp
shrb
fildl
xor
call
mov
cmp
mov
push
ss
xlat
and
ja
mov
in
cmpsl
mov
icebp
andb
cmc
cmpsl
addb
and
ret
lods
ja
pop
fnstenv
out
jecxz
test
mov
mov
mov
pop
aaa
pusha
movsb
mov
fs
es
mov
fistpl
iret
inc
inc
lock
fs
xlat
add
mov
adc
inc
inc
divl
sbb
push
movsl
fwait
daa
fwait
jne
sub
cwtl
push
ds
xor
push
xor
mov
sahf
mov
or
fidivs
mov
pop
cmp
into
scas
xchg
cmp
add
scas
ret
addb
int
pop
dec
fwait
je
dec
jl
pop
dec
stos
adc
sub
mov
ret
fbstp
dec
in
sbb
and
and
adc
mov
dec
cmp
loope
push
clc
pop
cltd
mov
fsubp
pop
push
shl
push
hlt
movsb
adc
adc
rorl
mov
pop
pop
scas
sbb
clc
push
add
and
or
cs
or
ret
pop
jg
or
sbb
dec
xchg
pop
xchg
mov
or
int
add
jle
inc
js
les
in
enter
jmp
adc
mov
mov
cmp
fbld
sbb
or
jnp
adc
add
sub
and
leave
cwtl
mov
test
ret
inc
mov
push
and
js
aam
cmp
in
adc
jge
inc
inc
sahf
cmpsl
arpl
dec
mov
arpl
sbb
pop
and
add
lds
xchg
bound
imul
xchg
ret
decl
mov
xchg
aaa
cmpsb
ss
jl
dec
or
data16
aas
mov
push
sahf
pop
sbb
test
cmp
pop
rcll
cwtl
leave
cmp
inc
je
lods
push
inc
int3
aad
outsl
das
ds
xchg
and
mov
mov
adc
dec
ret
jo
inc
xchg
test
loopne
pop
push
pop
push
adc
fcmovnu
test
std
jne
fists
mov
sbb
sti
mov
inc
fdiv
mov
stos
sti
mov
rclb
pusha
and
in
bound
fdivl
fldcw
bound
pusha
xchg
add
leave
push
into
mov
loop
movsl
jp
pop
aam
mov
sbb
xchg
rorl
mov
fists
sub
pop
sbb
jmp
or
fiadds
mov
insl
mov
mov
sbb
xchg
aaa
add
or
sub
cs
xorb
mov
push
pop
mov
movsl
xor
daa
sbb
hlt
or
andl
in
imul
adc
lea
sub
sub
fnstenv
xor
xlat
insl
std
cwtl
mov
mov
jo
insl
xor
cltd
test
js
in
into
mov
jecxz
dec
clc
loope
pop
jb
ret
in
xchg
mov
je
in
jmp
sub
cmpsb
push
mov
or
in
jb
rorl
call
pop
add
add
mov
mov
sub
mulb
cmp
leave
xchg
lret
out
enter
cmpsb
push
cs
int
add
enter
push
call
and
jmp
inc
in
shrb
sbbb
push
mulb
mov
pop
test
in
adc
add
jbe
jg
xor
int3
xlat
call
xchg
xchg
add
aaa
pop
push
repz
sub
inc
pushl
int
sub
lods
jecxz
adc
mov
ret
jb
mov
cmp
or
imul
pop
cmp
in
sbb
or
adc
dec
adc
ljmp
test
jg
prefetch
lret
into
push
sbb
inc
and
jmp
rcrl
add
add
mov
add
addb
add
add
add
data16
add
add
addb
add
add
add
push
add
add
addb
add
add
add
add
add
add
add
add
add
nop
add
add
and
add
add
add
inc
add
add
add
sbb
add
xor
add
inc
xor
add
add
add
xor
add
add
add
cld
xor
add
xor
add
jb
gs
xor
cs
insb
add
add
add
dec
outsl
popa
fs
imul
add
add
inc
gs
jb
arpl
fs
jae
add
add
add
push
imul
insb
insb
outsl
arpl
add
add
jb
jne
insb
inc
jb
add
loopne
in
lea
daa
mov
mov
pop
inc
out
xor
xor
push
sti
jle
pop
inc
xor
add
loope
add
xor
pop
or
in
jb
jne
cmp
or
dec
stc
cmp
addr16
add
rolb
pop
push
mov
push
inc
fcmovbe
jecxz
xor
jge
cli
add
mov
add
mov
loopne
dec
dec
push
jne
add
inc
or
pop
pop
ror
jge
push
call
sbb
xor
mov
push
jecxz
rep
aaa
mov
push
test
pop
enter
jne
pusha
push
or
mov
add
loop
or
pushl
sub
lock
cmp
sbb
xor
pop
pop
pop
leave
ret
jb
and
adcb
loope
add
or
xchg
jae
and
orb
xor
or
loopne
xchg
ds
out
or
or
cmpl
jo
test
sub
xor
sub
cltd
subl
dec
aam
jmp
inc
fmull
add
inc
add
imul
add
pop
lea
lods
or
insb
lahf
in
inc
lock
push
call
or
sub
hlt
shll
nop
push
push
jne
and
addr16
mov
and
xchg
cmpsb
inc
pop
jne
sbb
inc
out
mov
or
repz
fadds
decl
int
xchg
adc
mov
fmuls
adc
je,pt
sub
jae
sbb
jmp
jo
and
xchg
test
jne
ss
into
adc
sub
lock
pushf
outsb
sub
xor
lock
adc
in
and
add
mov
cmp
cmpsb
or
inc
jmp
xor
pop
insl
sti
add
mov
cmp
push
mov
rol
ljmp
push
cmpsb
iret
lea
xchg
mov
lods
incb
mov
xor
pop
push
xor
or
wrmsr
dec
js
xor
mov
push
nop
xchg
jmp
sub
inc
mov
ror
shr
repz
fcmovnu
or
push
push
lea
push
push
rol
adc
subl
mov
clc
xor
lcall
cmpsb
push
ret
mov
movsb
mov
mov
push
inc
push
jae
inc
push
mov
jmp
loopne
xchg
push
aas
inc
push
adc
jnp
leave
movsb
hlt
add
popf
rorl
mov
pop
or
mov
lea
or
jmp
cwtl
sub
popf
jno
sub
jo
lods
adc
repnz
adcb
jmp
adc
xor
dec
jp
in
nop
mov
xchg
pop
repnz
dec
out
jne
out
pushl
push
add
sbb
push
loope
sti
and
sbb
adc
fcmovb
outsb
and
repnz
pop
jecxz
and
insl
add
or
jmp
lods
and
add
adc
adc
popa
adc
mov
les
sub
jmp
in
test
leave
or
es
shl
int
push
sti
fcoms
and
add
idivl
andb
sbb
xor
xchg
jmp
repz
mov
insb
movsb
cs
mov
sbb
add
cli
xchg
ljmp
out
incb
mov
and
outsl
addr16
sbb
out
insl
add
jb
js
std
sub
cmp
push
adc
outsb
dec
xchg
mov
mov
and
shlb
mov
jne
sub
out
nop
jo
fimull
mov
shl
lret
stc
es
adc
add
ret
jge
pop
sti
popa
add
mov
adc
add
call
jno
push
sub
jne
lea
mov
and
or
jge
dec
test
adc
dec
adcl
mov
adc
jb
inc
aad
dec
data16
or
jl
add
sahf
push
and
inc
mov
es
adc
clc
push
push
jno
hlt
add
fidivs
and
sub
add
mov
pop
dec
hlt
mov
inc
xchg
mov
inc
sahf
mov
push
sbb
mov
sbb
subb
xor
inc
ret
lcall
out
jne
mov
inc
add
cltd
push
pop
divl
cmp
pop
jl
push
mov
push
xchg
cltd
mul
jge
mov
in
movsb
daa
or
xchg
add
add
push
call
xchg
push
mov
cld
lea
ds
ror
xorl
or
call
addb
or
pop
mov
cmp
push
dec
rcll
jo
inc
add
addr16
fmull
add
xor
adc
mov
or
or
movsb
adc
xor
ret
mov
push
push
test
and
arpl
in
xor
insb
mov
push
push
rdtsc
into
add
pop
cmp
loop
add
pop
sub
lea
inc
cld
add
cmp
lock
ficoms
pushl
sbb
push
lea
lods
stos
add
nop
cmpl
je
out
push
jae
test
loop
mov
outsl
jnp
ljmp
pop
sbb
add
cwtl
sub
jmp
sbb
call
add
mov
mov
inc
inc
sbb
popa
daa
or
add
pop
test
xchg
ror
inc
mov
push
add
push
cmpsl
dec
test
xchg
test
or
cmp
xor
jnp
adc
sbb
jne
inc
cmp
sbb
je
push
daa
and
lea
push
and
pop
orl
enter
iret
aas
shlb
bound
test
dec
xor
or
and
and
cmp
inc
rcl
testl
mov
add
push
call
pop
mov
rdpmc
cmpsb
cmp
pop
or
pop
ret
nop
ffree
cld
xchg
mov
sbbl
push
loopne
push
add
push
decl
test
pop
xor
jle
jb
pop
sti
adc
push
push
fnstsw
ret
push
and
stos
pop
add
jmp
in
popa
lods
push
jne
fwait
scas
leave
push
test
clc
cmpsb
sbb
pushf
inc
cmp
je
icebp
ja
dec
out
add
push
shrl
fadds
stos
clc
lods
mov
sbb
aas
push
enter
cvtdq2ps
incb
mov
lds
incb
fistps
push
clc
and
sti
ret
shr
jg
bnd
add
pop
dec
pop
aaa
or
mov
push
or
push
or
adc
add
adcb
or
nop
add
cld
xchg
call
push
push
ds
leave
xor
sub
or
inc
incb
scas
mov
movzwl
test
jge
or
mov
stos
movl
idiv
cmp
jge
repnz
push
inc
imul
call
dec
mov
jne
sbb
cmp
mov
dec
pop
or
rclb
xchg
push
fwait
push
inc
cmp
add
out
or
enter
push
xchg
pop
push
mov
shl
callw
jbe
push
add
cmpsl
decb
mov
dec
aas
es
out
loope
in
inc
pop
out
fists
jb
fiadds
and
dec
xchg
loopne
or
jge
dec
pop
or
cmp
test
add
movsl
subl
push
cli
sahf
movsb
push
aam
sbb
stos
and
or
mov
cmp
ret
add
mov
adc
stos
inc
pushf
add
lock
push
sbb
mov
jge
jno
subl
sub
ret
mov
pop
das
and
and
dec
push
hlt
pop
push
dec
or
das
aaa
push
push
in
push
in
in
shlb
fnstenv
inc
ljmp
std
mov
popa
jmp
pop
xor
cmp
jne
adc
jmp
fidivrl
inc
loop
add
out
out
sti
test
pushf
pushf
fimull
mov
or
cmp
inc
dec
push
nop
cmpsl
add
adc
mov
and
xchg
cmp
mov
or
or
mov
or
xor
jle
adc
push
push
or
call
sbb
mov
and
cmp
bound
in
sbb
subl
xchg
inc
adc
dec
sbb
shlb
sub
pop
test
mov
jmp
arpl
jmp
or
adc
push
adc
test
add
repnz
push
outsb
daa
mov
fdivrs
jg
test
pushf
and
mov
jns
lock
jno
xchg
dec
fs
dec
pop
push
dec
sbb
xchg
add
push
xchg
mov
push
xlat
sub
repz
sub
mov
shr
push
adc
sbb
dec
or
inc
jmp
cmp
imul
insl
dec
sub
adc
sbb
add
mov
jl
sbb
shr
pusha
jae
xor
jbe
fistl
and
add
add
rorl
push
out
in
mov
mov
jp
and
nop
xor
cmp
subl
je
outsl
outsb
and
gs
out
pushf
adc
mov
jo
pop
push
push
arpl
fcoms
insb
cmp
outsb
je,pt
cmc
imull
ss
imul
inc
es
popa
insb
ja
movsl
xor
rcll
arpl
jns
mov
jae
fwait
xor
rorl
xchg
popa
fadds
js
inc
jnp
mov
data16
mov
aas
inc
js
je
push
movsb
outsb
dec
or
dec
popa
outsb
fs
out
pop
dec
jo
adc
je
stos
les
sbb
jl
imul
mov
xchg
stc
jno
push
xchg
lcall
scas
mov
cmp
jmp
push
xchg
cmp
dec
xor
or
push
jbe
add
je
and
jl
sub
mov
xor
movsb
mov
call
jae
xor
call
jae
xor
call
jae
mov
inc
mov
call
adc
jae
jne
stos
jmp
call
sub
jne
call
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
lods
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
sub
mov
popa
ret
add
je
add
sub
add
sub
add
addr16
add
xor
add
xor
add
add
shlb
add
xor
add
lea
mov
mov
mov
movb
add
sub
mov
xor
ret
mov
popl
add
push
push
push
push
push
push
lea
mov
push
mov
push
push
pushl
push
mov
add
mov
call
pop
mov
push
push
mov
mov
add
mov
mov
mov
add
mov
mov
add
mov
add
lea
push
push
push
call
pop
pop
add
mov
push
mov
mov
add
sub
mov
mov
mov
call
mov
mov
mov
pop
jmp
add
push
push
push
call
mov
pop
pop
pop
pop
pop
pop
jmp
add
