imulb
shlb
pushf
or
cld
mov
mov
orb
ja
xor
shl
shl
ljmp
xor
xor
loopne
shll
rol
cmpsb
imul
lcall
stos
mov
cltd
cmpsb
imul
out
imul
imul
cmpsb
imul
imul
out
dec
sarl
dec
xchg
add
scas
sbb
insb
pusha
push
clc
cmp
mov
fimuls
dec
shlb
xor
push
scas
adc
stos
shll
pusha
out
mov
mov
push
ss
shll
xor
push
clc
rorb
aas
lock
pop
dec
imul
imul
sarb
push
pusha
push
cwtl
sbb
adc
xor
or
push
call
xor
xchg
dec
and
addl
mov
xchg
add
insb
inc
les
adc
popa
mov
cwtl
sahf
cli
repnz
into
and
xchg
or
adcb
xor
mov
xor
lock
pop
lock
cmp
in
cmp
testb
je
xor
aad
cmp
mov
jb
dec
mov
inc
cmp
sbb
push
cli
push
imul
popf
mov
andb
js
dec
sbb
rcl
out
sbb
div
and
sbb
into
adc
adc
xor
daa
cmp
cmp
and
and
xor
das
outsl
add
subb
inc
dec
xor
dec
inc
inc
push
push
and
cld
jae
push
push
mov
dec
jge
add
add
inc
xor
xor
int3
aad
xchg
ret
and
fcmovu
scas
stos
fst
mov
cmpsl
pushf
movsl
mov
mov
inc
or
popf
cmp
orb
adc
cld
hlt
cli
cmpsb
mull
push
mov
call
fcmovu
or
test
faddp
rol
mov
fcmovb
pushf
lcall
ss
sti
inc
jo
and
mov
pop
sbb
int3
mov
ficoml
inc
es
dec
inc
pop
xor
xchg
jge
sbb
or
addb
adc
data16
mov
sbbb
cmp
adc
fsubs
loop
adc
es
and
mov
adcb
mov
test
mov
mov
dec
ljmp
cmp
dec
mov
out
into
std
int
or
into
ror
repnz
jecxz
add
dec
in
out
and
sbb
sbb
ret
sarb
mov
lods
lods
lods
popf
addr16
and
or
lret
sbb
stos
or
sub
es
sbb
add
std
xchg
fcomps
mov
das
add
inc
inc
dec
dec
inc
or
add
aam
pop
pop
jns
push
jmp
repz
xor
dec
aas
pop
daa
add
aaa
imul
adc
dec
aad
add
jb
xchg
testl
pushf
push
or
lock
xor
in
lds
rcll
outsb
test
and
cmp
add
add
xor
fnsave
in
repz
test
daa
int
inc
sbb
popf
dec
adc
cwtl
std
add
add
add
shr
pop
iret
mov
adc
es
xchg
cwtl
sti
add
std
das
les
xchg
adc
enter
xchg
not
sbb
jnp
jmp
rcll
inc
mov
sub
add
mov
pusha
pop
loop
nop
fdivrl
add
addr16
testb
sti
std
or
add
add
rcrb
cmc
fidivrs
cmp
sub
les
andl
cmp
rolb
add
fisubl
imull
loope
xchg
imul
loop
aaa
out
out
fimuls
sbb
adc
ljmp
fcmovu
cmp
out
or
or
ja
adc
rcr
popf
les
add
or
adc
add
push
pushl
adc
cli
rcrl
add
add
cmp
cmp
es
shlb
sbb
stos
adc
in
inc
inc
xchg
loope
cld
and
pop
es
add
add
sub
shr
cld
mov
xorb
add
push
xchg
xor
mov
sbb
adc
add
add
fstpl
outsl
movsl
jge
inc
xchg
mov
lcall
xchg
cli
xchg
dec
cltd
mov
add
add
hlt
cmp
pop
inc
inc
dec
insl
xchg
sbb
push
negl
xchg
inc
pop
mov
adc
add
add
std
stos
loopne
xchg
adc
cmpsl
movsl
imul
push
dec
mov
leave
int3
xlat
push
push
add
mov
fdivs
je
rolb
ficoml
add
add
adc
and
iret
fldenv
xlat
xor
cmpsb
and
push
insl
and
ljmp
lahf
add
add
cmc
adc
into
jl
dec
repnz
daa
shlb
arpl
add
add
out
jl
in
rolb
imul
sub
sbb
lds
jmp
add
ret
out
adc
fnstsw
iret
lds
add
les
loopne
sub
rorb
subl
xor
mov
inc
mov
push
arpl
test
and
test
pop
pop
out
cmpsl
add
add
xchg
popf
sbb
lcall
add
dec
or
mov
dec
pop
lahf
scas
mov
outsb
add
popf
jne
mov
js
jns
lcall
sahf
mov
mov
dec
cmp
add
inc
push
sub
push
popa
mov
jae
nop
mov
sahf
pop
dec
mov
dec
fcmovnbe
dec
or
add
add
cmp
movsb
ret
cmp
pop
repz
pop
pextrw
pop
sbb
std
into
stc
adc
sbb
add
pop
outsb
cmc
xor
sbb
data16
aad
repnz
sub
add
add
fbstp
sbb
jbe
xor
mov
mov
xchg
shr
sub
add
adc
out
lahf
out
es
sbb
sub
cmp
add
fists
scas
cmpsl
sub
mov
shlb
cs
add
add
in
and
add
or
xor
jno
pop
mov
mov
mov
ficomps
add
add
jg
fwait
add
fs
das
jb
cwtl
lock
jno
in
insb
pop
add
push
or
aas
popa
cltd
jbe
cwtl
jp
pop
mov
add
add
sbb
dec
adc
outsb
jle
mov
test
cmp
and
xorl
mov
int3
mov
sbbb
push
fwait
xor
add
push
aad
cmp
add
aas
and
and
loopne
and
cmpsb
add
out
in
cld
insl
enter
add
cs
sbb
sub
add
sti
into
cmp
shl
out
bound
sub
test
add
cmpb
shll
jmp
push
fnstcw
sbb
adc
mov
add
cld
push
mov
sbb
mov
jo
aad
jmp
jnp
pop
dec
xchg
adc
inc
add
inc
adc
addb
pop
cmp
sub
cmp
lret
bound
sub
sub
testb
int3
cmpsb
or
ret
stc
pop
testb
ja
add
add
inc
cli
xor
shll
add
and
inc
jb
mov
fldt
outsl
fistps
add
add
mov
mov
mov
mov
ret
cmpsl
scas
push
ds
lcall
add
add
push
outsl
mov
aas
gs
leave
pop
and
push
sub
std
jne
mov
add
fisttpll
xor
add
xor
and
call
dec
and
xchg
icebp
xor
scas
pop
mov
subl
add
test
xor
pusha
xor
xchg
stos
xchg
xchg
add
add
mov
arpl
dec
aad
jbe
les
repnz
lret
cmp
repz
xor
add
lret
stc
and
int3
movsb
pop
mov
fs
mov
dec
jae
outsb
dec
rorb
fs
jo
scas
push
inc
pop
shr
add
mov
stos
push
dec
imul
sbb
add
dec
jae
test
dec
jnp
subb
mov
mov
add
adc
lcall
pop
or
pop
fwait
push
daa
push
addr16
mov
xor
mov
add
insb
ret
xchg
fbld
mov
sub
loopne
shlb
mov
adc
cmp
pop
push
push
std
and
push
rol
repz
add
add
sbb
stc
ds
sub
and
ljmp
or
or
push
adc
add
add
rol
rorb
sbb
cmp
xchg
push
add
sti
adc
js
mov
lahf
aam
xorb
adc
inc
cmp
add
scas
fisubrl
ret
add
xor
fistl
cmp
movups
shrb
fildl
sbb
push
shll
sub
mov
add
add
lods
fs
stos
push
outsl
fists
mov
push
pop
jp
inc
sbb
sarl
shlb
sti
dec
xchg
icebp
mov
leave
dec
gs
into
pop
out
inc
add
add
bound
mov
xchg
adc
cltd
fildl
in
sbb
push
push
pop
adcb
xchg
stos
xchg
dec
push
mov
push
push
add
mov
js
mov
inc
or
pop
xor
xor
aam
push
add
and
add
add
in
lahf
mov
pop
inc
test
cmc
fwait
sbb
jmp
adc
push
call
add
add
imul
adc
jne
hlt
std
sbb
xor
or
jnp
int
xor
xor
add
add
test
lcall
scas
mov
jae
push
dec
mov
dec
fsts
int3
sub
std
add
sub
mov
pop
mov
movsb
xor
add
mov
aad
xchg
mov
inc
mov
popf
adc
andb
push
clc
add
or
jge
dec
xchg
jp
cltd
xchg
test
in
push
pop
add
push
push
cwtl
inc
sbbl
mov
jnp
inc
imul
add
add
mov
mov
push
adc
mov
popf
jle
rorb
fcoml
cmp
mov
pop
addb
nop
jno
mov
xor
xor
mov
ficomps
frstpm(287
div
jecxz
add
add
aad
cs
or
sbb
sbb
sbb
call
lahf
call
icebp
jge
movl
sar
icebp
insl
pushf
cmp
icebp
cli
icebp
clc
dec
and
sbb
movb
xchg
dec
and
scas
icebp
shll
mov
cmpsb
rorb
mov
stc
or
xchg
xchg
in
test
inc
int3
enter
roll
cli
std
les
mov
icebp
clc
mul
jecxz
cmpsl
jecxz
sbb
iret
mov
or
or
adc
pop
ss
jmp
or
push
das
inc
jecxz
daa
cs
add
xor
sbb
sbb
or
in
push
push
shrl
mov
shlb
add
add
rolb
lock
es
repz
fadds
cmp
iret
jbe
icebp
cmp
testb
outsb
fists
clc
icebp
mov
mov
ja,pn
cmp
dec
add
xlat
xchg
lds
or
rolb
mov
fcmovnbe
add
les
lret
shll
cli
call
arpl
out
loopne
add
mov
xor
or
aam
rcl
mov
aas
mov
xor
add
pop
sub
sub
push
and
cmp
pusha
inc
movsb
addr16
adc
inc
inc
dec
or
imul
add
pop
push
push
dec
dec
push
push
or
arpl
dec
xchg
jp
adc
sub
jbe
dec
cmp
aaa
adc
ret
es
adc
out
test
cld
test
cli
cld
repnz
mov
lret
mov
aam
push
add
mov
int
iret
stc
clc
nop
xchg
mov
adc
orl
in
scas
mov
sub
cmc
jmp
sbb
and
or
hlt
add
inc
add
adc
add
sarb
add
or
in
add
sbb
mov
sbb
inc
pop
js
push
cmp
jno
lea
add
xchg
test
dec
sti
orl
test
xor
mov
aaa
or
push
ja
xor
adc
arpl
fcmovnb
cmp
add
out
imul
mov
xor
cli
fists
jmp
test
push
dec
cmc
call
mov
pop
jb
xor
mov
and
dec
and
sbb
adc
xchg
ret
loope,pt
or
pop
sbb
sub
aaa
xor
xor
sub
sbb
adc
fcoms
inc
pop
sub
cmp
push
push
and
pop
push
ss
push
orl
xor
test
lea
fcoms
fcmove
int
fildll
fistps
mov
fs
in
hlt
fwait
in
push
aam
mov
testb
repz
repz
push
cmp
pop
jns
xor
fnsave
dec
stos
fisubrs
insb
sbb
inc
mov
mov
in
in
hlt
dec
push
ss
call
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
add
ret
add
aas
aas
add
xor
xor
add
and
xor
adc
pop
or
sub
or
test
or
or
dec
jns
push
xor
xor
jle
stos
add
push
push
sbb
or
pop
xchg
sub
push
push
push
or
add
adc
sub
jp
jns
pop
pop
push
jae
add
pop
es
into
sbb
inc
adc
and
cwtl
sub
scas
xchg
fs
xor
lods
jns
nop
sahf
roll
adc
xchg
mov
out
mov
sbb
xor
sub
mov
rolb
inc
decb
xchg
sbb
icebp
dec
dec
mov
mov
in
bound
xor
imul
daa
sbb
add
icebp
cmp
jle
mov
sbb
add
rcr
mov
mov
insl
aad
call
lods
inc
ljmp
stc
in
mov
xlat
or
in
es
cmp
into
cmp
les
push
shrl
add
or
arpl
pop
jmp
mov
mov
in
imul
and
add
mov
iret
stos
cmpsl
pushf
mov
popa
mov
fsubl
cmp
arpl
lahf
scas
cmpb
nop
xchg
cmp
int3
sbb
adc
in
xchg
rorl
adc
lods
pop
jmp
stc
rorb
rolb
adc
xor
sub
cmp
test
sub
pop
mov
rorl
scas
test
cmp
shl
in
xadd
mov
inc
inc
push
sub
cmp
sub
dec
mov
pop
add
push
add
arpl
cld
pop
cmp
fldcw
mov
scas
add
loope
outsl
out
xchg
shl
sub
test
mov
sbb
cmp
ss
add
test
xor
ss
mov
out
sub
sub
divb
inc
aad
cmp
sub
mov
xor
leave
lret
pushf
xor
cltd
mov
fmul
lock
orb
jae
orl
fwait
lds
icebp
mov
sub
pop
clc
das
je
mov
jb
jns
jl
cmpsb
imul
xchg
dec
dec
dec
pop
dec
aam
clc
pop
mov
mov
and
dec
cmp
pop
int3
mov
xchg
jecxz
dec
pop
push
mov
jno
pushf
and
mov
xchg
sbb
stos
and
daa
mov
push
sub
inc
sbb
test
cld
dec
enter
xchg
jg
sti
push
imull
mov
adc
add
adc
pusha
sbb
aam
fiaddl
mov
add
popa
enter
out
pop
cmpsb
jns
add
add
ret
inc
imul
outsl
add
ret
mov
xor
push
xchg
cwtl
hlt
pusha
add
fxch
mov
fadds
jge
inc
repz
test
mov
fs
push
sbb
sbb
aaa
mov
inc
ljmp
pop
push
inc
mov
and
inc
imul
add
sub
sbb
mov
lcall
sbb
mov
add
sar
or
mov
int3
sub
add
jle
scas
and
aaa
jne
cmp
add
add
sbb
fbld
out
cmp
test
cmp
pop
sahf
sahf
ficoms
fisttpl
add
add
test
sbb
cld
sub
push
jle
xor
xchg
call
mov
daa
dec
andb
add
fisubl
punpcklbw
shlb
mov
xchg
in
test
in
add
add
rcrb
dec
cmpsb
dec
xor
sbb
repz
sub
mov
mov
paddb
mov
or
aaa
push
pop
out
lods
loopne
jae
out
pop
mov
add
jns
xlat
and
adc
cmp
in
cli
mov
inc
stos
pop
int
es
adc
add
jmp
imul
std
fildl
ds
in
add
pop
jbe
jle
push
int
mov
aam
or
cltd
fsts
stos
or
dec
jecxz
ficoml
or
mov
jecxz
inc
push
mov
jns
stos
pop
call
lock
add
dec
stc
adc
ret
pop
lahf
lcall
and
popf
or
add
daa
dec
mov
cmp
xchg
adc
dec
jl
in
and
xchg
or
cltd
add
or
xorb
xor
adc
or
das
insb
xchg
dec
and
push
lret
push
int3
leave
dec
sbb
daa
rorl
fadds
cmp
xchg
frstor
or
add
gs
int3
or
dec
push
push
mov
mov
cld
movsb
adc
test
cmp
and
out
xor
push
dec
int
mov
hlt
jb
jecxz
pop
or
aaa
push
dec
dec
sbb
or
cmp
pop
add
push
xor
cmpsl
and
add
out
adc
fs
sbb
jnp
movsb
add
or
push
mov
sbbl
or
fidivl
jae
cwtl
out
jmp
mov
sti
sahf
in
shrl
and
sub
inc
roll
enter
dec
imul
or
mov
dec
pop
sti
inc
add
mov
fnsave
xor
mov
popf
test
xor
mov
sarb
nop
jge
pop
jns
pop
and
add
cmp
mov
add
in
and
je
pop
fcomps
mov
dec
jne
push
dec
lods
dec
sub
push
or
add
cmp
scas
jl
pusha
sahf
fucomi
adc
mov
shl
loopne
sub
imul
sub
aaa
dec
int3
cld
xor
imul
lcall
xchg
lods
push
and
sub
call
add
inc
repz
mov
mov
scas
iret
lcall
jmp
mov
dec
loope
js
and
lods
sub
adc
add
sbbb
repz
xchg
xchg
and
mov
aam
aaa
es
inc
push
xor
cmpsb
add
push
xor
jge
aam
push
push
test
orb
inc
inc
pop
movsb
adc
inc
push
add
dec
js
into
xor
inc
push
andl
clc
push
push
pop
sub
outsl
inc
sub
pusha
jo
add
push
xchg
movsl
test
push
je
add
decb
pop
std
push
out
imul
pop
mov
les
lret
or
add
lods
into
loope
sahf
push
mov
mov
jne
cmpb
movsl
adcl
or
jp
mov
stos
aad
pushf
test
bound
mov
mov
fs
lods
sub
xor
mov
dec
push
pop
xchg
inc
mov
add
jb,pt
mov
out
call
mov
xchg
mov
or
xchg
bound
rcrb
enter
int3
push
inc
xor
mov
jl
push
mov
add
push
sarb
rcll
nop
pop
das
pop
mov
inc
stc
mov
or
adcl
mov
jbe
out
add
push
sbb
out
gs
cmp
ret
and
ret
xor
push
popf
loope
xor
movsl
lea
jl
inc
test
jge
pop
aam
xchg
orb
mov
jns
aam
in
les
daa
cmpsl
push
cmp
lods
xchg
or
adc
xlat
repz
pusha
mov
jb
push
mov
sub
lds
mov
sbb
mov
xchg
inc
jp
mov
sarb
int3
mov
int3
mov
push
inc
stc
pop
outsl
pop
js
sbb
out
or
leave
loop
lret
ret
or
imull
xchg
aaa
pop
xor
mov
subb
mov
dec
popa
xchg
sbb
push
dec
mov
mov
ret
mov
add
test
daa
pop
cmp
and
mov
jnp
add
sbb
lret
insb
cmp
test
js
je
add
fistpl
push
lcall
cmp
push
dec
and
sub
sub
mov
lea
dec
idivb
sub
ret
jmp
cmp
in
das
sbb
scas
jo
cmpsb
or
dec
insl
fwait
jle
mov
arpl
imul
fld
negb
jnp
sub
negb
mov
mov
or
pop
adcb
cltd
xor
push
push
popa
jle
ret
sub
jb
jbe
lods
cmp
mov
or
rclb
xchg
and
push
cmp
sub
dec
mov
cs
rclb
pop
jnp
push
jo
aaa
andl
xlat
dec
mov
jno
cmpsl
xchg
mov
lods
mov
push
scas
shlb
stos
rcl
sub
pop
mov
test
into
icebp
lods
push
js
aaa
adc
roll
ljmp
and
rcr
repnz
xlat
cwtl
cli
rcrb
mov
and
into
iret
lds
inc
sbb
adc
in
cwtl
and
sub
dec
cmp
cmp
dec
jmp
and
xor
mov
dec
popf
out
int3
sti
ret
or
fisttps
push
push
pop
test
bound
or
xchg
aaa
add
test
test
jl
lret
add
push
int
sbb
repnz
test
movsb
xchg
int
mov
push
movsb
mov
scas
repnz
out
jl
xchg
sbb
repnz
mov
in
sbb
rcrl
outsl
loopne
lea
mov
fldt
xlat
loopne
sub
mov
sbb
movb
fdivs
pop
outsl
jns
ss
xchg
jno
xor
sub
pop
xlat
idivb
add
jecxz
lods
sbb
xchg
ret
hlt
jns
adc
into
add
mov
fidivl
mov
in
cmp
das
sub
mov
sub
sbb
lock
jge
movsl
pusha
sar
bound
rorl
mov
push
mov
into
mov
mov
subl
or
sub
mov
sbb
fwait
daa
and
addr16
repnz
jmp
sub
lods
fdivr
jp
mov
xchg
lock
push
fstl
push
xor
ret
xchg
repz
adc
fbstp
pop
jge
xchg
in
lds
repz
rclb
sub
cmpb
push
sahf
mov
into
in
pop
cmpb
iret
dec
jbe
inc
es
sbb
imul
aas
xchg
ret
add
fwait
push
sbb
test
cmpl
xor
dec
cmc
mov
fiaddl
or
mov
dec
ret
or
xor
pop
and
jg
mov
push
push
inc
movsb
ds
add
or
adc
cmp
mov
jp
push
sti
adc
push
push
and
adc
mov
popf
orl
and
loope
sub
enter
scas
push
and
imul
aas
lods
insb
and
add
pop
add
out
jbe
pop
cmp
xor
sahf
mov
cli
lret
in
lahf
xor
xor
or
and
xorb
jg
add
lock
xchg
popf
add
or
cltd
mov
cmp
and
cmp
insb
dec
mov
push
arpl
iret
mov
xchg
pop
sub
jns
or
sbb
jl
xchg
or
lds
xchg
out
and
adc
mov
insl
xor
fisubs
add
push
add
gs
add
scas
xor
in
push
fs
filds
fldt
mov
push
nop
mov
cmp
adc
ja
ficomps
loopne
or
mov
ret
sbb
int
cmp
mov
and
or
push
mov
xor
leave
ret
cmpsl
mov
pop
jle
arpl
decb
and
mov
enter
inc
inc
das
into
mov
adc
xor
ljmp
rcrb
lret
mov
xor
lds
mov
push
in
mov
xchg
xchg
call
movb
outsb
and
pop
mov
push
pop
in
outsb
rclb
not
iret
loop
cmp
loope
add
movsl
aam
mov
cmpl
dec
icebp
stos
in
jp
inc
xchg
pop
or
cmc
adc
push
inc
int
mov
dec
mov
push
orl
pop
xor
lods
pop
ret
push
ljmp
xchg
iret
adc
pop
mov
stc
mov
in
js
in
dec
jle
jmp
push
push
pop
in
movsb
inc
fidivs
arpl
pop
sbb
popa
test
out
lods
adc
stc
cmp
or
mov
xor
js
adc
test
pop
sbb
cs
mov
sub
mov
or
push
xor
ret
mov
popf
mov
cmp
stos
fwait
dec
fisubs
lods
andl
jle
idivl
jo
fs
adc
xor
or
jle
push
ss
xchg
xor
lcall
push
fisttps
loop
xchg
insl
xor
mov
add
push
jge
inc
mov
fwait
xor
scas
sub
push
xor
jmp
rorl
cmp
jnp
mov
dec
pop
cmp
mov
mov
jnp
xchg
mov
inc
add
insl
pop
xchg
shr
ret
push
push
push
fnstsw
loopne
or
pmovmskb
repnz
dec
test
mov
insl
leave
mov
xchg
lcall
mov
jnp
cltd
mov
out
int3
cld
fwait
bound
jbe
lret
lret
xchg
ficoms
pusha
insl
xchg
dec
dec
jge
or
jge
pop
pop
xchg
or
out
arpl
mov
push
sbb
or
cmpsb
cwtl
dec
ljmp
jl
and
dec
popa
push
outsb
aaa
xchg
dec
roll
mov
aad
cmpsb
rolb
mov
cwtl
pop
out
lock
dec
xor
jge
push
das
inc
leave
clc
leave
sub
jl
jge
adc
cmp
fsubrl
pop
lret
jne
insb
push
shrb
popa
ss
jns,pn
test
mov
bnd
xor
movsb
inc
mov
add
mov
jne
mov
mov
test
popa
sbb
std
ss
mov
ljmp
enter
xlat
fs
iret
or
and
js
xorb
xlat
jns
test
jecxz
loop
xor
test
cltd
mov
fcomps
push
dec
ja
mov
movsb
idiv
push
roll
call
cmp
pop
cmp
cmp
jno
mov
adc
leave
sub
cmp
dec
mov
pop
pop
jno
mov
test
dec
inc
int
mov
cltd
iret
jae
pushf
xor
push
jne
or
ds
push
cltd
mov
pop
divl
jo
stos
push
dec
dec
and
div
dec
adc
int3
aaa
mov
cltd
sbb
or
jo
jb
push
push
add
push
ds
or
std
dec
sti
jmp
sub
sbb
insl
jnp
ret
push
aad
pop
mov
test
and
lods
sub
fwait
cmc
pop
mov
fistpl
testb
lods
ret
sub
dec
cltd
imul
inc
repz
pop
bound
inc
shll
inc
ret
mov
test
jmp
add
jne
lahf
es
loopne
dec
push
arpl
aad
inc
sub
sbb
test
ret
sub
and
test
inc
test
mov
pop
mov
call
mov
xchg
mov
jae
sbb
push
arpl
ss
mov
repnz
sbb
addl
push
rcr
mov
adc
imul
pop
jmp
dec
mov
jae
jmp
xor
sti
mov
xchg
out
fildll
ficoms
xchg
sub
inc
mov
ret
mov
xchg
fs
test
mov
mov
int3
add
mov
xchg
out
push
ljmp
aaa
into
pop
dec
cmpsl
sbb
pop
mov
aaa
and
xchg
popa
test
mov
dec
insl
adc
aas
movsb
dec
roll
mov
mov
push
sub
push
syscall
pop
lea
orl
lahf
add
les
jnp
cmp
lret
jae
les
add
jg
leave
xchg
lret
clc
ljmp
movd
incb
mov
cmp
cmp
leave
js
addr16
ljmp
test
sbbl
pop
loop
jae
notl
jns
daa
xchg
mov
mov
sub
adc
pop
cmp
int
add
jae
cli
jge
js
mov
in
inc
adcb
cmp
sub
inc
dec
or
cmpsb
adc
xlat
mov
xlat
add
jl
test
and
mov
and
xchg
pop
adc
mov
sub
addr16
insb
insl
sub
adc
leave
jns
icebp
mov
lcall
sbb
roll
add
das
xor
push
cmp
rcrb
pop
mov
js
repnz
aas
pop
add
push
jbe
xchg
lret
call
lret
pop
movsl
add
lcallw
push
inc
lret
push
pop
push
jb
dec
loopne
lods
enter
mov
int
push
or
scas
outsl
inc
adc
mov
icebp
push
insb
scas
cmp
scas
fmuls
stos
push
loope
mov
cld
lods
mov
cmp
je
mov
or
sub
lds
inc
aam
sbb
lock
testl
mov
test
gs
sbb
xchg
pushf
js
push
or
out
rol
in
push
jg
jno
xor
rclb
mov
clc
icebp
lds
ds
lds
xchg
xchg
lcall
mov
xor
decb
push
shl
cmp
cmp
jmp
fmull
leave
test
pop
xor
jo
adc
adcb
jno
push
and
sbb
loope
mov
sbb
sbb
jge
ret
mov
cmc
mov
pop
mov
dec
mov
popa
and
push
or
mov
subl
push
jae
popa
int3
inc
or
daa
jae
jmp
mov
sbb
aam
add
push
stc
sub
xchg
frstors
xor
xchg
xor
daa
pop
je
mov
jl
fucomip
rolb
or
orl
pop
repnz
jb
fcoms
push
loop
sbb
inc
xchg
hlt
add
int
mov
mov
mov
push
or
lods
in
popf
pop
push
add
xor
adcl
adc
dec
dec
sub
pop
mov
adc
insb
push
jge
adc
jbe
or
cmp
adc
cmpsl
lods
sub
shll
fmul
or
sahf
sbbl
and
pop
pushf
call
adc
in
xor
fwait
outsb
addr16
mov
add
xchg
mov
sbb
mov
aas
push
xchg
xchg
jge
test
add
and
mov
inc
ficoml
push
fcompl
adc
push
and
pop
xchg
fmuls
pushf
shl
leave
adc
or
insl
jne
loopne
pop
cmp
arpl
jae
aam
ret
add
sbb
rolb
and
pop
pop
mov
bound
stos
inc
pop
cmp
push
dec
fs
cli
push
lods
mov
rclb
ja
jp
bound
sbb
dec
dec
dec
outsl
xor
jns
enter
arpl
sti
xlat
mov
ljmp
xchg
add
pop
dec
daa
sub
fsubl
popa
iret
ret
negb
cwtl
mov
add
lods
inc
jecxz
push
sbb
cs
jl
mov
and
je
cmpsb
faddl
xorb
jl
into
push
sub
insb
xchg
xchg
push
dec
add
in
cmpsb
imull
add
jecxz
and
mov
call
out
js
pop
push
mov
mov
xchg
in
dec
ss
jbe
in
hlt
les
push
scas
addr16
adc
enter
cmp
mov
add
repz
nop
leave
jg
jp
inc
xor
stos
data16
jo
sub
test
stc
inc
jg
arpl
repnz
cmp
lods
or
dec
and
test
daa
sub
lock
and
jb
cmp
loopne
cli
testl
add
mov
dec
fdivrp
imul
cwtl
dec
pop
mov
lcall
adc
ljmp
cs
mov
sahf
repnz
jne
jl
aad
int3
rcrb
and
mov
popa
aad
push
sbb
mov
and
outsl
jo
sbb
fs
xor
mov
push
std
sub
xchg
adc
loopne
xchg
cli
scas
pop
xor
ljmp
shlb
testb
pushf
orb
scas
and
and
shlb
mov
outsb
push
adc
jns
or
jae
sbb
inc
sub
xor
lods
dec
and
loop
aaa
dec
and
push
mov
push
xchg
test
xchg
je
fs
inc
mov
jb
iret
aam
mov
and
ret
sbb
inc
xchg
and
div
je
dec
push
dec
sbb
fisubs
pop
dec
push
adc
int
add
es
push
sti
fs
es
and
mov
xchg
ds
inc
or
and
push
cmp
mov
test
gs
clc
and
int3
imull
and
jno
mov
cwtl
pushf
sub
sbb
mov
push
mov
inc
push
pusha
dec
stos
repz
daa
ret
inc
mov
cmp
mov
xor
in
addr16
das
fstpt
dec
jo
popa
cmpsl
jge
push
lods
sub
push
aam
int3
pop
xchg
aas
adc
dec
xchg
mov
push
adc
add
in
sbb
xor
scas
pop
mov
or
ds
out
movsl
insb
mov
sub
inc
dec
mov
mov
pop
in
cmc
inc
sbb
cli
adc
push
xor
inc
lods
roll
es
fsubrs
inc
sub
xor
movsb
cmp
cmp
lret
incb
push
test
jmp
push
sar
push
add
xor
popa
imull
push
xor
xor
jbe
or
xchg
std
subb
lcall
push
inc
mov
add
shrb
mov
lahf
shrb
movsl
enter
add
cmp
loopne
pop
popa
cwtl
int3
mov
lock
dec
inc
insb
mov
es
int3
loopne
rcrb
in
fstp
dec
fidivrl
push
scas
push
movsb
xchg
add
inc
cltd
in
push
jmp
mov
les
pop
loop
inc
insl
enter
mov
pusha
mov
push
nop
loope
xlat
sahf
xchg
call
popa
sti
test
cmp
lea
sbb
div
mov
jbe
pusha
imulb
push
jne
adc
and
jae
negl
in
loope
cmp
mov
sub
push
in
adc
pushf
sbb
or
cmp
not
aas
and
fwait
push
popa
push
jmp
xor
dec
stos
rcrb
int3
cli
lret
mov
arpl
addb
mov
pop
mov
adcb
pop
xchg
add
icebp
add
add
insl
fs
jge
fstpl
lock
pop
sub
scas
repnz
rclb
imul
cmpsl
iret
and
push
shl
sahf
pop
cmp
jne
push
sbb
cmp
pop
sub
add
jmp
les
inc
sbb
add
loopne
enter
dec
div
mov
imul
lock
and
inc
out
inc
jae
in
push
je
or
out
test
shrb
jg
inc
das
notb
pop
rorb
bound
data16
outsb
dec
jmp
popf
scas
mov
lods
jno
movsl
cs
ret
xchg
jnp
movl
xor
fmull
mov
jle
popf
inc
push
into
pop
inc
loope
xchg
jg
cmp
inc
rorl
ret
out
jbe
mov
out
stc
xchg
add
xor
in
jle
movl
fiadds
out
lret
aaa
das
xchg
xchg
add
lcall
cmp
ja
sbb
movzbl
enter
or
test
or
orb
adc
lret
call
loope
notb
and
adc
lret
insl
mov
xchg
lods
aas
icebp
sbb
adc
cltd
into
mov
inc
aas
xchg
in
push
xor
hlt
cmc
nop
push
imul
int3
pop
pop
xchg
shlb
fistpl
lahf
mov
mov
arpl
push
mov
les
or
out
cmp
popa
push
sbb
insb
xchg
mov
repnz
and
add
sub
xchg
sbb
imul
add
xor
repz
out
add
or
dec
push
andl
xor
sbb
out
and
lods
fisubl
aam
lea
lds
lock
add
arpl
insl
cltd
or
dec
in
imull
push
inc
mov
add
sbb
pop
lods
cwtl
xor
bound
or
push
sbb
arpl
add
cs
stc
push
arpl
test
pop
jge
mov
ljmp
bound
jnp
shll
sub
adcb
pop
dec
repz
push
into
mov
jg
scas
sbb
push
test
and
mov
push
jae
xchg
ds
mov
cs
add
mov
jb
ja
push
and
push
stc
daa
cmpsb
mov
cmp
daa
ret
divb
push
cmpsb
movsb
les
push
push
inc
adc
xor
inc
or
sahf
bound
sbb
dec
sub
notb
mov
in
loope
or
movsb
fldl
test
mov
add
add
xchg
loope
mov
mov
testb
cltd
ret
sar
rcrl
outsl
orb
adc
cld
jae
int
mov
mov
push
sbb
add
cmc
aaa
cmpl
pusha
mov
mov
pushf
mov
mov
add
ror
sbb
lds
in
enter
addl
mov
out
js
push
mov
cmp
fmuls
cs
add
sbb
insl
nop
xor
movsl
das
and
xchg
aaa
hlt
lods
mov
add
sbb
rorl
jnp
out
xchg
das
or
icebp
fs
adc
jl
inc
mov
or
inc
or
mov
sub
add
mov
rorb
loope
nop
movsb
sub
out
inc
xor
popf
inc
jecxz
mov
push
xchg
pusha
aad
test
fsubs
cwtl
movsl
scas
xchg
addr16
lahf
inc
dec
pop
mov
inc
test
rcrl
fsubrs
push
scas
rorb
arpl
or
jne
outsl
mov
cmpl
add
fmulp
lahf
pop
std
push
cs
aam
inc
xor
and
int
pusha
aad
mov
inc
mov
pop
sub
pop
loopne
ret
mov
or
fisttpl
fcmovne
aad
in
or
cld
jp
jo
sub
gs
mov
xlat
jecxz
cmp
fldenv
ret
enter
push
and
aas
ja
dec
in
call
data16
cmpsl
out
js
and
popa
or
dec
sbb
jecxz
xor
test
mov
adc
ljmp
ficoml
and
stc
push
lahf
xchg
insl
mov
addr16
mov
jg
sbb
cmp
popf
leave
jae
in
xlat
dec
mov
pop
xchg
test
lcall
jecxz
hlt
mov
je
sbb
not
in
xchg
mov
popf
mov
lret
sub
ss
adc
xor
pop
jg
mov
std
push
mov
mulps
add
inc
adcl
cmpsb
adcb
push
mov
xchg
mov
and
xor
mov
cmp
pop
add
cwtl
or
xlat
adc
into
andb
idivb
ret
mov
pop
xor
mov
xchg
sbb
lock
loopne
pop
scas
insb
mov
out
loopne
int
xchg
aad
jge
inc
hlt
and
test
add
xor
out
in
testb
les
mov
sub
dec
or
xor
or
inc
cmp
jmp
push
pop
xchg
mov
mov
add
pop
fcoml
push
sahf
jg
mov
xchg
leave
out
xor
pop
sbb
mov
int
inc
es
jo
mov
adc
aaa
or
inc
sbb
jne
fcmovb
xchg
adc
jne
add
jg
test
insb
ja
dec
xchg
sub
pop
fcoms
je
pop
lods
cld
xor
mov
xchg
cmp
scas
add
mov
nop
shlb
in
imul
test
add
xlat
pop
push
xchg
mov
mov
xchg
push
and
jmp
mov
flds
push
cmpsb
aam
sbb
in
mov
mov
enter
stos
insb
hlt
roll
jge
ljmp
mov
movsl
lret
fnstsw
push
mov
ds
jp
stos
rcl
and
leave
lods
sub
xchg
addl
orb
test
push
jecxz
leave
push
inc
or
inc
jle
in
ret
cmpsb
hlt
lret
push
jmp
leave
mov
cltd
in
add
test
imul
xor
mov
fisttpl
mov
xlat
inc
leave
test
shl
or
jle
dec
daa
adc
loop
in
pushf
cmpsl
insl
or
xchg
mov
push
xchg
and
xor
mov
push
jnp
mov
jne
movsb
jae
sub
adc
sub
push
inc
or
jno
push
xor
das
clc
and
mov
pop
pop
sbb
je
xchg
unpckhps
jecxz
xor
mov
jl
loope
mov
pop
sbb
sbb
pop
les
pop
data16
xor
dec
xor
and
add
out
pushf
mov
in
ds
adc
movsl
out
repnz
ret
loop
out
pusha
mov
mov
ja
lock
jbe
mov
adc
lea
out
sbbl
jl
sbb
ds
xor
out
sbb
jae
shrb
jl
sbb
xlat
test
lret
lahf
cmp
cmpsb
popa
sub
repnz
rcrb
sbb
jge
popf
mov
pop
sbbl
pop
xchg
pusha
ffreep
mov
mov
xchg
nop
and
lods
shll
jns
xor
cs
adc
aas
dec
sarb
cmp
iret
mov
and
dec
mov
pop
lock
lret
roll
mov
mov
sub
jl
add
mov
add
loope
scas
leave
in
inc
or
scas
mov
aam
shlb
add
inc
push
or
mov
rorl
pusha
mov
or
xorb
icebp
in
mov
mov
cmp
cmp
loopne
cmp
and
gs
push
pop
add
imul
das
shrl
push
dec
mov
insl
stos
cli
mov
scas
out
and
adc
xchg
push
mov
in
jns
push
imul
sbb
sub
ss
lds
in
cltd
jl
orw
rcrl
add
jp
test
in
scas
mov
test
sbb
or
iret
insl
lods
lret
or
enter
fbstp
push
sub
mov
aas
into
and
scas
lcall
out
pop
mov
hlt
push
mov
test
mov
mov
push
xor
fstpl
dec
fisubrl
cmpsl
out
mov
jo
xor
mov
decb
shlb
add
adc
popl
std
sbb
mov
into
mov
sub
pop
sbb
fidivl
int
inc
fistps
xor
push
into
mov
repz
dec
rcr
subl
hlt
xchg
call
fisttpll
jae
pop
dec
cmpsl
dec
shlb
push
mov
xor
mov
bound
jne
movsl
jp
jge
sub
push
stc
or
faddl
jne
in
mov
mov
clc
sub
or
rcl
push
mov
inc
and
pop
rolb
xchg
sbb
inc
outsb
ret
lret
dec
mov
mov
jne
filds
cld
jle
jbe
sbb
lret
aaa
shr
fistps
jle
aam
aaa
imul
cmp
stos
in
inc
imulb
adc
push
or
push
sbb
dec
fmuls
aam
jno
inc
lods
call
mov
pop
xor
push
xchg
loop
and
and
push
xchg
sbb
xchg
fdivs
push
adc
mov
push
jns
pop
push
sub
or
sahf
stos
je
xchg
in
popf
pusha
jne
shll
mov
xor
xor
cld
or
and
outsl
in
add
or
leave
pop
data16
ficompl
arpl
and
mov
out
cmp
out
testb
cli
pop
mov
jl
mov
adc
add
cmpsb
sbb
jmp
test
ljmp
add
sarb
imul
adc
pop
dec
push
adc
scas
pop
daa
mov
dec
test
and
dec
add
and
inc
sub
jne
sub
xor
inc
xor
adc
popa
ret
lds
mov
mov
mov
hlt
jecxz
push
adc
test
add
mov
pop
xchg
leave
or
sub
in
test
push
mov
xchg
popf
sub
mov
mov
xchg
fsubr
loop
fidivl
push
imul
test
inc
dec
push
xchg
push
xor
sti
sub
sub
jno
sub
test
cltd
rcrb
cmp
push
or
push
sub
inc
cmc
leave
fmul
push
cmp
adc
bound
sahf
shrb
jbe
and
and
cmp
mov
jbe
or
orb
mov
xor
xchg
and
push
push
movsb
sub
and
icebp
adc
aam
and
or
or
push
inc
pop
pop
jb
mov
pop
sahf
and
xchg
adc
out
cmp
push
rorl
rcrl
xchg
mov
bound
sbb
mov
movsb
adc
pusha
cmp
jno
jg
xlat
push
xchg
xchg
sbb
mov
or
or
xor
mov
push
loop
push
movsl
clc
dec
inc
mov
sub
stos
jne
push
jbe
add
addb
mov
cli
in
push
sbb
lods
push
or
out
stos
loope
mov
fmul
mov
mov
jae
pop
fwait
mov
cld
mov
cmp
and
in
xlat
addr16
sbbb
push
jmp
jae
mov
xchg
push
xor
roll
insl
xor
push
mov
mov
cmp
sbb
cmp
inc
les
aam
ja
pop
lahf
mov
and
adc
out
push
mov
pop
xor
jg
or
daa
xor
lods
subb
and
xor
mov
adc
mov
xor
ss
lock
jbe
ret
mov
out
mov
xchg
xor
sub
lock
xor
push
cmp
rorb
pop
inc
mov
cld
or
ljmp
lret
mov
in
push
mov
sti
mov
lock
jo
loope
movsl
les
enter
or
push
andnps
pop
leave
cmpsl
out
pop
dec
sti
lret
lahf
out
xor
cmp
xor
dec
mov
aam
lahf
or
scas
inc
inc
cwtl
loop
adc
jne
pop
jne
mov
sub
outsb
inc
stos
xlat
jl
fistpl
out
add
movsb
xlat
fistpll
pusha
movsb
imul
repz
das
add
mov
ja
std
sub
ss
aaa
je
outsl
roll
jle
les
xchg
cwtl
xchg
sub
sub
add
xor
gs
or
push
pop
addr16
out
mov
push
cmp
hlt
and
int3
mov
stos
fildll
and
xor
mov
aas
lds
loopne
push
faddl
scas
and
and
xchg
or
mov
lds
cmp
sub
sarb
jno
inc
xchg
imul
sbb
fmuls
mov
cmp
jb
or
das
in
rcrl
mov
or
stos
in
call
and
in
pop
inc
bound
cld
test
adc
sbb
sbb
das
lods
cmp
popf
xchg
jo
shlb
xchg
adc
inc
shll
cmp
mov
inc
push
cltd
mov
inc
xor
or
sti
dec
test
add
dec
rcl
movsb
outsl
mov
out
fcoms
add
jge
or
mov
cmp
cmpsb
fsubs
mov
fwait
negl
fistps
cmpsl
pop
jne
sub
dec
rcrb
test
ret
cltd
mov
xchg
jo
xor
ds
mul
xchg
xchg
adc
dec
hlt
test
add
fisttpll
inc
cmc
xchg
lahf
pop
mov
out
jno
xor
stos
xchg
jb
mov
push
jns
xorb
pop
mov
loope
insb
adc
ss
repnz
inc
push
mov
outsl
cs
es
pop
xor
leave
inc
in
xchg
stos
xchg
inc
sub
sbb
rcl
negl
mov
data16
cmp
stos
ret
or
cs
lds
pop
enter
push
mov
adc
jge
stc
mov
jo
es
sbb
xlat
bound
fidivrs
dec
mov
push
rcll
aaa
dec
add
mov
add
js
jmp
stos
mov
mov
mov
xchg
daa
aam
ss
in
mov
aam
adc
insl
mov
or
js
mov
addr16
cld
mov
clc
popa
aaa
hlt
sub
xor
pop
adc
bound
and
sub
mov
test
dec
jmp
imul
in
pop
xor
shlb
jmp
jl
popf
xchg
js
out
ljmp
addr16
sarl
int
ja
pusha
mov
push
xchg
push
push
bound
fmull
mov
ret
cmp
std
inc
push
sbb
cmp
pop
ret
mov
jmp
or
jmp
inc
and
xlat
ret
pop
sub
movsb
scas
xchg
ret
mov
idivb
syscall
xchg
and
sbb
mov
mov
xor
fnstsw
fstpt
arpl
addl
ss
inc
test
and
aaa
test
dec
sbb
lock
lret
cli
testl
mov
and
or
loop
rol
push
mov
pop
in
sbb
aas
cmpsl
xor
imul
mov
add
add
mov
ljmp
sbb
sbb
add
adc
or
sbb
or
jns
mov
adc
aam
inc
ud2
enter
push
push
push
mov
in
push
repz
mov
popa
sbb
and
incb
pop
data16
bound
adc
mov
cwtl
sti
xor
push
stos
push
add
or
xchg
jb
imul
js
je
mov
mov
xchg
fadds
mov
insl
pop
test
jecxz
sub
cmp
out
dec
or
cli
sbb
jl
test
xchg
inc
and
jne
sbbb
cmp
xor
inc
fistpl
mov
xchg
outsl
sub
rorl
inc
and
cld
mov
push
cmp
add
inc
les
push
dec
cmp
mov
dec
pop
bound
int3
clc
push
in
xor
pop
cwtl
mov
adc
sbb
in
add
pop
adc
ja
addr16
or
scas
andl
icebp
xchg
aad
int3
jb
jo
aas
in
xorb
ret
mov
faddl
dec
lea
mov
or
js
aaa
jmp
and
and
lods
mov
pop
pop
test
push
shll
sub
mov
orl
dec
and
mov
push
fcom
imul
adc
adc
shll
imul
fmuls
push
sbb
pop
loope
mov
pop
aas
popa
hlt
subl
scas
sub
or
inc
mov
xlat
xchg
divb
inc
or
push
and
jbe
das
sbb
adc
loope
mov
or
je
mov
inc
cmpsb
lock
pop
fildll
sbb
sub
inc
xor
cmp
shlb
mov
paddsw
jp
inc
repz
cmpl
dec
adc
adc
push
test
or
shr
movsb
mov
mov
andl
outsb
xor
cs
adc
cmpsb
mov
mov
scas
push
shlb
cwtl
inc
inc
out
stc
push
dec
jno
lds
add
das
add
add
gs
mov
cmc
test
scas
sbb
mov
or
mov
shlb
pop
movsl
push
xchg
adcb
es
pusha
sbb
notl
pop
mov
mov
inc
sahf
js
bound
xchg
mov
loopne
inc
sbb
iret
adc
sub
push
fs
cmpsl
adc
inc
cld
ds
fs
mov
pop
push
inc
fdivrs
sub
es
add
adc
fwait
push
xor
jns
orl
jno
inc
ljmp
ficompl
stos
call
mov
roll
outsb
cli
mov
rcr
xlat
bound
das
stc
mov
stos
add
add
pushf
repnz
lock
lods
add
xchg
loop
mov
cmp
dec
xor
adc
mov
imul
std
jecxz
aaa
push
insl
push
cmp
add
jle
mov
out
icebp
sbb
inc
add
mov
rep
bound
or
data16
adc
loope
std
fsubr
dec
loop
leave
push
or
icebp
dec
je
inc
lods
sbb
cmpsl
test
mov
outsl
test
xchg
sbb
loop
mov
fidivrl
xchg
mov
cmp
adc
dec
jae
mov
push
stc
and
scas
inc
test
repz
push
fwait
xchg
sub
scas
mov
test
lcall
and
enter
sbb
inc
mov
sbb
mov
movb
lods
push
and
in
sub
lahf
cmp
push
jb
sbb
mov
mov
add
pop
adc
mov
sub
adc
testb
pop
lret
push
jle
rcl
daa
mov
cmp
popa
lret
fistpl
jbe
mov
clc
pushf
testl
xchg
dec
movsl
ret
mov
mov
mov
fists
loop
dec
insl
shlb
pushf
ljmp
ret
gs
push
inc
or
cmpsb
movsb
jnp
push
popf
dec
xor
aas
dec
ja
jo
sti
je
push
divb
push
movsl
push
inc
push
push
add
push
sarl
adc
push
pop
sbb
and
or
rclb
sbb
mov
sbbb
pop
jo
mov
pop
aaa
dec
ret
divl
push
stos
int
ud2
rcr
bound
pop
xchg
push
lock
push
jne
adc
das
xor
push
xchg
push
push
pop
adc
enter
xor
lock
mov
pop
and
cmp
dec
cltd
push
leave
into
idiv
push
in
push
cltd
cmc
mov
aad
lea
fwait
push
sub
mov
cmovge
xchg
test
hlt
and
xor
int
insl
call
mov
xorl
cmp
faddl
ret
jmp
sub
loop
int3
dec
mov
ret
lock
dec
fdivrs
pushf
pop
subb
lds
cld
imul
sub
scas
nop
daa
and
out
mov
scas
push
cmp
jno
push
sbb
xor
inc
nop
es
popf
pop
pop
jmp
xor
je
lret
cmc
je
xchg
es
cmpsl
pusha
mov
adc
insb
jmp
lods
test
xor
hlt
xchg
xchg
sbb
iret
cs
addr16
fisubrs
loopne
pop
rcr
and
pop
sub
xor
adc
or
js
mov
mov
cmpsb
sub
jecxz
add
sub
iret
mov
cltd
pop
sti
adc
cli
ficompl
iret
push
mov
insl
shll
sub
and
pusha
les
inc
and
lods
pop
dec
cmpl
cmp
js
scas
add
ret
popa
dec
sub
mov
les
stc
lret
lret
outsb
int3
loop
movsl
or
adc
loopne
inc
or
xor
inc
aam
xchg
cltd
jmp
jnp
andl
inc
push
add
cli
clc
mov
je
fstpl
jno
dec
loopne
xor
pop
or
int3
xchg
cwtl
mov
and
imul
fsubrs
orl
pop
fistl
bound
sbb
data16
mov
inc
pop
in
cmp
inc
push
pusha
sub
sub
and
mov
xor
loopne
and
mov
mov
xchg
xor
cmpsl
sarb
mov
insl
add
adc
jg
cltd
mov
fwait
je
lret
mov
add
cmp
aam
lret
jo
es
mov
xor
in
aas
jno
jo
inc
mov
sbb
or
inc
nop
stos
push
xchg
add
adc
pop
jge
xchg
inc
aam
push
inc
shlb
xchg
inc
cld
mov
dec
cmp
pop
test
adcl
sub
das
and
add
xor
icebp
mov
ret
or
cmpsl
fs
clc
add
stos
push
sbb
adc
cmp
inc
stc
pop
jmp
add
pop
sub
sarb
add
mov
ds
adc
popa
sbb
shll
jbe
icebp
mov
imul
push
loope
or
ljmp
xchg
rorl
ret
dec
int3
les
xchg
insl
add
or
dec
cld
sub
jmp
shr
ret
xor
cmpsb
lret
aam
hlt
cwtl
mov
push
or
mov
shr
mov
aas
mov
scas
rcll
roll
push
inc
inc
pop
ficomps
mov
mov
or
popa
into
jne
out
pop
sarb
or
xlat
stos
ds
jmp
nop
data16
bound
or
scas
icebp
xchg
push
jns
std
adc
rcr
andl
repz
and
lea
outsb
call
cmp
bound
or
pushf
xor
mov
mov
jnp
iret
inc
or
xchg
xchg
push
in
push
sbb
push
sub
jns
add
scas
jne
cmp
mov
or
or
ja
imul
xchg
test
add
sub
push
in
dec
cmp
test
jge
idiv
mov
sbb
inc
fnstenv
jbe
push
lock
cwtl
js
or
sub
push
xor
pop
pushl
mov
and
sti
jb
cmpsb
pop
or
pushf
add
leave
test
pop
and
dec
xor
or
rcll
adc
xchg
mov
add
aas
inc
and
aaa
leave
dec
or
or
push
pop
jno
out
jecxz
jge
hlt
jb
test
rol
cmp
filds
xchg
js
dec
sti
jp
jmp
data16
mov
pop
mov
push
pop
mov
sbb
lret
arpl
pop
test
icebp
mov
aaa
test
les
jno
in
xor
or
fs
and
in
pushf
mov
addr16
shll
sbb
xchg
adc
push
popa
or
inc
dec
add
dec
mov
xor
add
mov
arpl
movsl
imul
pop
test
arpl
aas
xor
sbb
pop
dec
lcall
push
aaa
mov
or
jecxz
int3
lock
sbb
push
lods
mov
aad
pop
out
scas
add
bnd
add
ljmp
fcmovnu
fisubrs
xchg
mov
xchg
fistps
popa
fcoms
push
rol
or
sbb
shl
movsb
xchg
push
push
int
mov
or
insb
sub
pusha
and
pop
inc
lcall
std
sub
cmp
in
sub
xchg
and
ret
adc
mov
inc
inc
aad
rorb
int3
sti
ja
xchg
mov
or
xchg
xchg
sub
ja
mov
pushf
clc
and
inc
mov
fildl
cmp
sbb
in
movsl
loop
mov
pusha
ja
jle
xchg
loop
fwait
out
pushf
mov
jmp
popf
lds
mov
pop
add
out
call
push
loope
sub
ja
nop
sbb
addl
push
mov
insl
jns
test
mov
adc
dec
mov
jge
incb
enter
dec
out
inc
adcl
xor
mov
mov
aaa
inc
add
adc
jns
jbe
fnstenv
insl
rol
pop
call
stc
mov
sbb
xor
add
fsts
popf
sti
xchg
jmp
xor
or
call
ror
clc
mov
xor
lock
loop
xorb
dec
or
sub
adcl
mov
xor
outsb
out
outsb
orb
cmp
fisubs
clc
aas
inc
add
add
push
cmpsb
mov
outsl
outsb
rclb
popa
enter
rcrb
lock
js
add
add
xchg
lret
and
cmp
sbb
out
test
insl
out
negl
add
xchg
mov
or
mov
mov
sbb
loopne
mov
cmp
xchg
fistpl
fidivl
xor
lods
dec
je
ret
mov
inc
push
sbb
xor
jmp
add
inc
xchg
rcll
sbb
dec
in
addr16
push
or
jbe
lcall
push
mov
xor
test
imul
adc
jb
mov
lds
jg
inc
lds
dec
sub
nop
stos
push
int
xchg
cli
jp
xchg
mov
pop
insl
cmpsl
jp
daa
fdiv
push
in
fdivrs
xchg
or
test
mov
push
mov
sbb
out
push
sub
scas
repnz
rorl
and
loopne
js
stos
adc
pop
movsb
in
cmpsl
and
dec
sbb
inc
sti
mov
pop
ret
pop
xchg
mov
mov
xor
mov
mov
movsb
sbbl
nop
inc
add
and
push
dec
jmp
inc
adcb
inc
add
inc
pusha
sub
sbb
inc
rcrb
inc
nop
inc
xor
inc
add
pop
sbb
idivb
sub
push
ret
xor
mov
jno
xor
xchg
cmp
js
xor
cmp
into
ss
pop
repz
in
jl
fcoms
mov
xor
repnz
sub
and
adcb
push
push
xor
scas
pushf
jb
ror
into
mov
xlat
mov
lret
out
xor
faddl
or
ret
pushf
scas
xlat
mov
pusha
pop
mov
repz
dec
add
pop
xchg
jns
xchg
rcll
pop
and
je
insl
cmp
shlb
push
out
bound
cmpsb
test
cmpsb
adc
ljmp
ret
cmp
and
add
bound
imul
xor
in
add
push
sub
push
int3
test
ja
out
xor
inc
loope
xor
in
out
xor
add
sub
aaa
mov
pop
mov
outsl
mov
daa
fstpl
inc
pop
mov
xchg
xor
cmp
cwtl
stos
lods
scas
mov
jle
or
xor
inc
mov
ror
push
cmp
lcall
ret
rolb
jne
inc
testl
add
lods
test
jae
pop
sarl
add
cmp
cmpsb
mov
xlat
lret
faddl
and
and
sub
mov
mov
or
mov
xchg
pop
cmpsl
push
ficomps
inc
pop
dec
js
sbb
jp
xchg
jnp
mov
inc
push
stc
adc
and
push
outsb
jge
mov
popa
lea
xor
sbb
push
test
xor
arpl
test
je
shlb
push
insl
jo
or
xor
jmp
or
push
add
sub
in
xchg
cmp
adc
sbb
into
mov
push
jg
and
scas
idiv
fisttpll
notb
imul
sti
cld
mov
and
ret
in
xor
pop
dec
stc
iret
jno
and
adc
jnp
adc
rclb
push
jne
mov
rolb
xor
mov
inc
add
jb
mov
xchg
sub
mov
iret
mov
outsb
sbb
xchg
pushf
sub
fadd
xchg
inc
fnsave
sbb
call
inc
push
enter
xor
pmullw
aas
jae
nop
jp
out
lcall
cmpsl
test
es
pop
sbb
loope
add
or
add
and
repnz
push
cmp
mov
popf
dec
adc
out
es
dec
es
dec
jecxz
sub
mov
dec
movsb
dec
cmp
dec
push
xor
xlat
rorl
adc
push
lret
xor
addb
or
or
movsl
sysexit
test
sbb
jnp
das
jno
xor
dec
repz
je,pn
add
ds
sub
daa
and
ja
pop
mov
mov
movsl
int3
jbe
cltd
aam
sub
loopne
and
cli
shlb
or
leave
jae
xlat
sbb
out
jmp
xor
mov
xor
or
cwtl
add
adc
mov
addb
les
aaa
test
jae
lcall
add
inc
das
cli
pop
xor
notl
aam
or
pop
fcomi
push
jne
loop
cmpsl
aad
jb
dec
add
add
cmp
nop
loopne
adc
add
push
pop
push
xchg
xchg
jbe
add
mov
sub
add
fcoms
fdivs
mov
fst
in
and
popa
cmp
mov
mov
inc
pop
xor
push
push
xchg
xchg
enter
or
xchg
sbb
scas
and
decb
add
loope
add
or
loop
sbb
fsubl
movsl
xchg
bound
mov
and
imul
jo
stc
adcl
outsl
inc
inc
fwait
outsb
push
xchg
sbb
cmp
sbb
push
movsb
mov
outsl
je
mov
je
jmp
out
and
inc
sbb
sbb
subb
xchg
push
xchg
jecxz
cli
xor
dec
push
lea
data16
inc
cwtl
out
or
nop
mov
lret
inc
sub
shlb
push
jb
mov
push
mov
loop
loop
jle
jbe
dec
cwtl
pusha
jnp
mov
sub
sub
cmp
push
sbb
cmp
icebp
mov
xor
movsl
sbb
mov
lods
into
mov
or
js
push
andl
pop
lret
cmpsb
repz
and
test
mov
pop
fnsave
imul
push
mov
nop
or
cmpb
mov
das
and
sahf
mov
xor
dec
test
push
aad
push
inc
ja
push
cmp
testb
xor
cmc
and
pop
push
inc
inc
sub
inc
adc
out
inc
adc
inc
clc
mov
inc
aaa
xchg
mov
sub
in
andl
js
les
xchg
stc
pop
and
cmc
fs
dec
mov
xor
mov
inc
sbb
xor
push
outsb
and
mov
push
ret
or
fsubl
fwait
jp
xor
pop
jge
ss
mov
adc
push
sub
loopne
leave
cli
mov
and
lcall
aas
mov
test
pop
dec
aas
mov
push
mov
imul
sbb
xchg
mov
xor
pop
push
ret
sbb
mov
dec
outsl
enter
addb
mov
mov
sub
mov
fs
inc
es
sub
pop
push
mov
adc
orl
mov
fstps
adc
mov
stos
leave
sbb
jmp
out
stos
inc
sub
mov
xor
popa
xlat
leave
jle
push
sbb
ja
dec
jb
or
rcll
andl
movsb
imul
pop
xor
xchg
sbb
cmpsl
std
xchg
mov
and
xchg
xchg
lods
mov
mov
mov
adc
inc
test
mov
ds
cmp
xor
add
or
lds
inc
jmp
and
jecxz
mov
lds
sub
xor
dec
dec
push
dec
and
out
fnstenv
inc
mov
pop
adcb
imul
inc
add
jne
insl
jae
andl
stc
jb
mov
es
jecxz
adc
mov
cld
cmp
or
push
sub
je
aas
movsl
push
jns
adc
ja
fadds
div
mov
mov
jb
rorb
mov
outsb
stos
mov
out
rcr
sarl
inc
sti
inc
push
pop
add
lods
and
cmp
ja
jnp
mov
jecxz
in
loope
in
xor
and
xchg
or
xlat
jae
arpl
add
pop
fwait
andl
mov
adc
pop
inc
push
test
imul
jo
push
repz
and
test
cmp
add
pop
sbb
mov
cs
fcomp
mov
call
sub
push
out
xchg
pop
loopne
je
sahf
mov
stos
sbb
add
stos
fidivl
pop
cmpsl
or
push
push
jo
fsubs
or
cwtl
adc
push
pop
nop
inc
in
hlt
fsts
jns
inc
mov
sub
enter
bnd
out
sub
inc
push
push
pop
jo
pop
scas
dec
popf
push
jbe
ss
ljmp
aas
inc
or
mov
sub
inc
adc
data16
loop
mov
add
mov
push
decb
pop
in
out
movsb
xor
mov
pusha
pushf
push
lret
js
xor
lods
pop
mov
push
sub
adcb
mov
sti
push
fstps
imulb
fabs
mov
call
cmc
mov
bound
lds
dec
insl
and
or
bts
xor
test
fldt
push
push
sti
scas
mov
pop
mov
aam
enter
inc
inc
mov
inc
inc
inc
inc
dec
js
lods
inc
inc
inc
dec
pop
push
add
gs
adc
cmpb
je
adc
adc
outsb
insb
adc
adc
push
xchg
cwtl
pop
pop
adc
adc
pop
inc
push
push
adc
adc
and
push
or
push
adc
or
adc
adc
and
cmp
mov
adc
adc
adc
lods
stos
rol
adc
adc
rcr
push
addb
ds
das
ja
adc
pusha
and
inc
push
jo
xchg
inc
inc
inc
inc
lcall
inc
xchg
nop
out
faddl
inc
inc
fcmovu
lret
pusha
nop
push
inc
inc
mov
inc
inc
inc
dec
insb
jb
inc
inc
inc
inc
dec
pop
pop
inc
and
or
mov
sbb
dec
or
cmp
popf
repnz
or
inc
push
mov
or
dec
inc
dec
sub
or
or
inc
adc
or
or
add
xchg
or
or
mov
or
sahf
fs
jmp
iret
fnstsw
ja
mov
arpl
leave
lock
andb
mov
add
or
mov
or
or
loop
out
or
or
fcmovu
scas
ror
or
shlb
xchg
adc
lock
pop
shll
xor
rclb
repnz
pop
xchg
and
and
js
insb
and
and
adc
push
xor
and
and
or
sbb
stos
push
loope
mov
fs
sub
xor
mov
mov
movsb
mov
lcall
dec
or
mov
or
rol
inc
dec
or
inc
sbbl
aas
sbb
adc
xor
sbb
icebp
add
or
divl
mov
leave
inc
test
ljmp
mov
js
out
lcall
xchg
jns
xor
sahf
ljmp
inc
pushf
xchg
test
cmc
das
rcrb
out
mov
xchg
push
add
xor
or
movsb
pop
stos
sahf
sti
lock
jecxz
lret
lods
push
cmp
push
clc
pop
mov
aam
push
and
cmp
cld
das
or
call
insb
push
notb
and
bound
mov
lock
inc
inc
sbb
and
xchg
sbb
clc
mov
and
mov
sub
mov
mov
or
push
test
test
js
enter
mov
sub
pop
dec
dec
ljmp
fidivs
mov
mov
in
jle
repz
shll
push
mov
dec
jne
xor
add
mov
iret
cmp
add
inc
and
adc
mov
add
or
inc
inc
xchg
mov
jg
adc
scas
imul
mov
mov
ret
icebp
mov
sub
aam
xor
shl
lret
xchg
push
push
call
imul
rcl
les
jmp
dec
inc
and
call
daa
test
dec
inc
addr16
movsb
fs
mov
pop
mov
adc
mov
mov
xor
outsb
movsb
push
mov
pop
or
ja
mov
in
adc
lds
mov
test
js
int3
jnp
push
popa
push
test
dec
adc
sbb
adc
adc
mov
or
mov
adc
dec
inc
out
cltd
mov
rol
aas
xor
cmpsb
pop
popf
cs
addr16
pop
inc
es
xchg
sbb
cmp
add
or
mov
inc
pusha
in
jae
inc
adc
sub
lcall
push
pusha
pop
rcl
cltd
fcoms
hlt
out
cmc
or
aam
or
lret
sbb
push
or
ret
rcrb
enter
adc
scas
cmp
and
stos
aas
lahf
aam
adc
mov
repz
js
sar
outsb
sub
lea
shll
icebp
xor
stos
sbb
push
push
out
es
aad
mov
xor
nop
lea
ret
insl
les
rcll
or
inc
subl
xor
addr16
xchg
sbb
popa
loopne
and
sbb
out
iret
or
xchg
sti
push
xchg
push
aaa
aam
mov
mov
mov
ret
out
sbb
mov
sbb
imul
mov
jbe
dec
push
adc
xchg
mov
sbb
lods
or
push
sub
inc
push
push
cmp
fidivrl
inc
adc
inc
dec
addl
rcrl
in
fcom
inc
push
in
stos
mov
in
or
dec
gs
sub
xor
ja
push
push
add
pop
dec
lahf
dec
cmp
add
shlb
nop
cmpsb
scas
in
pop
dec
pop
pop
adc
subl
std
cmpsb
lock
mov
mov
insl
psubb
icebp
sbb
inc
jle
sbb
sbb
push
mov
sbb
ret
nop
mov
mov
fcmove
cmp
das
cmpsb
mov
shlb
es
cld
lcall
push
cmp
cmpsb
ds
push
in
mov
ja
out
add
mov
push
mov
pop
mov
xor
fidivl
les
mov
pop
or
lahf
push
inc
leave
cmp
pop
and
ss
stc
xchg
pushf
sub
insl
inc
inc
andb
and
pop
mov
inc
inc
jno
je
mov
dec
int3
sub
jg
xchg
inc
fidivrs
enter
clc
xor
inc
push
inc
ds
mov
fnstenv
dec
sbb
das
sahf
dec
inc
pushf
das
inc
stos
push
xchg
adc
mov
ss
xchg
inc
jb
es
add
push
outsb
xchg
mov
pand
ja
shll
or
jl
xor
shll
icebp
push
dec
shr
push
aam
fstl
ss
add
sub
push
pop
inc
inc
pop
or
arpl
adc
and
or
and
xor
adc
and
lret
rorl
int3
icebp
cmpsb
idivl
add
fucomp
imul
cmp
push
pop
int3
add
pusha
push
jle
dec
shl
subb
mov
aad
adc
sbb
jle
ljmp
mov
outsb
mov
xor
adc
jne
push
xchg
mov
xchg
dec
bound
xchg
cli
adc
xchg
sbb
add
sbb
rol
iret
loope
leave
ret
fistps
xlat
or
cmp
pop
cld
pop
ja
sub
and
cmp
or
jno
add
add
adc
sub
pop
xor
push
leave
pop
jl
xorb
and
inc
pop
outsl
jmp
push
inc
dec
dec
jg
xorl
push
xchg
xchg
sbb
push
int
je
in
les
nop
test
push
adcb
mov
or
mov
dec
or
movsl
dec
fwait
icebp
imul
mov
enter
out
call
push
fdiv
sti
fcmovne
xchg
test
push
aaa
arpl
mov
and
mov
cmp
mov
das
pop
dec
push
ret
cmc
rclb
dec
aaa
ret
push
pusha
dec
push
jno
push
orl
scas
xchg
add
iret
hlt
inc
xchg
lea
pushf
test
mov
mov
xchg
cmp
xchg
lods
mov
mov
scas
sarb
ret
int
popf
cwtl
sub
call
cs
jmp
push
push
outsb
rol
dec
ret
mov
cmpsb
dec
movsb
add
ljmp
sub
sub
cltd
or
push
xor
inc
icebp
data16
mov
je
rol
sbb
push
push
inc
addr16
push
cmpsl
dec
dec
jmp
inc
sbb
push
scas
mov
addr16
mov
fisubrl
and
mov
mov
pushf
pop
in
dec
pushf
sbb
add
in
pop
cmp
movsl
mov
jecxz
xor
arpl
insl
lock
lret
daa
jle
loop
fcoms
sbb
add
dec
jmp
jge
rcr
retw
xchg
dec
push
addl
pop
pusha
and
inc
test
mov
fwait
mov
inc
mov
int3
cmp
roll
orl
fisubs
test
jp
mov
mov
cld
out
cli
mov
lret
sbb
add
cmp
mov
orb
jmp
adc
rcrl
jne
inc
insl
dec
sub
jecxz
cmovle
push
or
push
or
cmpsl
lahf
cwtl
jl
in
xor
arpl
add
xchg
out
scas
rcll
out
mov
fstpl
mov
aad
call
mov
sbb
inc
mov
jno
jae
add
nop
sub
jmp
rclb
loopne
dec
dec
cltd
mov
jp
iret
add
mov
je
aam
push
dec
push
jmp
movsl
fwait
dec
subb
iret
loopne
add
insl
mov
das
lods
loop
dec
pop
shl
xchg
sub
xchg
test
xor
sbb
pop
push
adc
mov
aaa
dec
stos
test
sub
hlt
jb
ds
cli
pusha
adc
or
xchg
inc
into
inc
pop
jno
lds
enter
jnp
fsubs
lods
dec
orl
mov
scas
push
cld
pop
cltd
mov
sub
cmpsb
cmp
andb
cmp
mov
idivl
mov
jge
push
sbb
int3
xchg
or
out
jge
adc
fisttpll
int
sub
mov
or
xchg
test
or
xchg
dec
shrl
adc
jns,pt
add
idivl
add
shr
pop
ret
mov
mov
and
jae
dec
add
jg
jl
imul
lods
xchg
sbb
test
push
pop
and
sub
dec
jae
pop
sub
push
add
loop
mov
inc
popl
iret
adc
into
jp
adc
out
adc
mov
andb
pusha
shll
hlt
repz
mov
pop
mov
std
xchg
push
jge
xchg
stos
cmpsl
mov
cmp
push
loopne
std
cmp
dec
dec
mov
or
cltd
xorb
sub
adc
push
and
sbb
arpl
int
insl
xchg
flds
imul
out
test
pushf
mov
sbb
xorb
fdivrs
xchg
mov
imulb
ret
mov
aaa
push
xor
rcl
push
sbb
aad
inc
dec
arpl
sub
int
inc
mov
popf
add
adc
xorl
xor
sbb
xor
cmp
adc
sti
mov
jns
xor
adc
jo
ret
sub
cmp
push
inc
jns
jnp
ret
jp
pop
mov
mov
and
xor
mov
lds
push
sub
jo
mov
loope
cmp
fidivl
mov
dec
xchg
fildl
sbb
jle
shll
pop
adc
xchg
fcompl
add
sub
and
aas
cwtl
popa
mov
mov
xor
test
add
fistps
push
and
dec
dec
push
dec
pushf
dec
inc
dec
dec
inc
jne
les
ret
enter
add
dec
es
push
add
in
pop
mov
cmpb
mov
dec
aaa
rcll
clc
in
mov
pop
pusha
add
add
lds
xchg
enter
xchg
mov
stos
mov
add
dec
pop
imul
jnp
insb
push
inc
dec
bound
jne
dec
popa
mov
aaa
add
data16
insb
imul
dec
dec
adc
dec
inc
cmp
pop
inc
inc
inc
arpl
dec
inc
add
shlb
imul
adc
cmp
xor
xor
es
aas
sbb
add
adc
adc
sbb
orb
pop
add
add
adc
pop
cmp
add
or
pop
sbb
and
mov
in
shr
in
mov
lahf
cld
jecxz
out
out
loopne
add
movsb
in
leave
mov
lldt
mov
aad
repz
lret
aam
rcr
lret
rorl
dec
mov
pop
mov
push
lock
es
shlb
test
pop
add
add
addl
mov
scas
mov
lahf
test
mov
add
pop
pushw
pop
insb
outsl
inc
fs
pusha
push
push
orb
ficoms
dec
or
add
sbbb
jp
mov
pop
pop
gs
jne
inc
pop
inc
add
inc
sub
pusha
inc
and
sbb
adcb
arpl
xor
pop
inc
adc
orl
jl
call
cmp
and
add
or
push
cmp
add
fdivrs
nop
sbb
inc
divps
cmp
out
pop
or
and
jne
xorl
mov
iret
hlt
int3
add
add
rol
cli
iret
sti
vpsubq
mov
out
loopne
shl
ret
out
jmp
cltd
movsl
arpl
and
lahf
lock
orb
aad
stos
mov
cmpsb
stos
mov
fcompl
mov
add
fcompl
into
rcrl
push
xchg
mov
mov
mov
arpl
shlb
aaa
insl
fs
imul
sub
imulb
xchg
adc
push
hlt
sub
xchg
outsb
pop
bound
mov
pusha
add
mov
jge
and
xor
pop
and
cmp
jne
mov
jecxz
cmp
or
pop
xor
adc
cmpsl
push
sub
xor
or
cmp
getsec
add
and
add
adc
repz
mov
mov
shl
add
push
jmp
loop
push
leave
aad
shll
loop
ret
ret
in
out
push
adc
into
mov
mov
mov
mov
mov
and
in
adc
cmp
aad
mov
cmpl
sahf
roll
popaw
imul
push
data16
test
push
jo
push
popf
xchg
cmpsb
add
push
jo
popa
sbb
or
add
scas
lret
add
fstp
aaa
or
js
je
dec
jl
jne
in
add
cs
cmp
jl
push
or
adc
mov
inc
or
inc
or
iret
or
sbb
mov
ss
pop
push
push
jbe
sub
mov
inc
test
lea
mov
jmp
sub
dec
aaa
shlb
cmp
orl
xor
lods
pop
push
pop
or
pusha
movsl
adc
add
add
mov
mov
xor
adc
in
stos
mov
dec
cltd
addr16
mov
sbb
shr
sbb
insb
add
inc
fs
out
sbb
fiaddl
leave
js
and
or
mov
dec
adc
or
pop
add
add
sub
sub
add
adc
xor
cmp
and
or
imul
lret
add
add
jp
sbb
add
adc
pusha
adc
add
jo
cmpsl
xor
js
lods
jmp
or
add
das
ss
addr16
icebp
cwtl
lods
add
gs
sarb
mulps
add
lods
add
add
idivl
aas
sbb
lea
or
nop
sbb
xchg
mov
pop
mov
fcmovu
lock
mov
mov
mov
cmpsb
ret
std
fmull
add
stos
movsb
jne
mov
in
lcall
inc
roll
stc
scas
ret
adc
sub
popa
insl
insl
xlat
addb
add
clc
lods
or
mov
int
ljmp
adc
movsb
mov
mov
cmp
push
imul
dec
push
lods
inc
mov
aam
mov
pop
lods
call
xlat
pop
aam
xor
sub
sbb
movb
sbb
add
das
imul
push
cmp
sbb
sbb
or
dec
adc
xor
add
stc
jnp
fcmovbe
add
adc
add
pop
sub
scas
int
call
sub
push
xlat
xlat
push
lret
aad
iret
inc
int
fwait
add
movb
xchg
xchg
sub
add
or
dec
stc
nop
fwait
iret
scas
cmp
mov
push
dec
mov
loope
aam
sbb
pop
lret
movsb
sub
clc
andb
sub
push
int
subb
xchg
or
push
data16
mov
add
jno
pop
fs
jo
jp
inc
pop
gs
cli
add
push
push
xchg
pop
push
mov
adc
cli
push
lret
mov
outsb
fisubrs
pop
dec
int
dec
jo
cmp
mov
subb
fimull
cmpsb
daa
cld
adc
and
aaa
pop
in
or
add
out
jne
ja
adc
repz
nop
lcall
xchg
adcb
stc
test
push
sbb
icebp
call
in
mov
stos
rcr
lcall
adc
push
sub
loope
adc
xchg
dec
outsb
out
xchg
xchg
mov
mov
add
test
imul
movsl
cmpsb
or
jne
sub
sbb
pop
push
popl
and
popa
fsubrl
mov
mov
xchg
cmpsl
inc
push
pop
out
mov
pop
or
stc
cmp
iret
mov
xor
rcrl
adc
cmc
cmpsl
loop
mov
push
int3
pop
cmp
push
cmp
hlt
add
ja
push
push
lock
add
into
lds
adc
add
add
add
dec
xor
add
add
sbb
add
dec
adc
add
add
mov
add
lea
add
push
mov
add
push
push
push
mov
call
push
call
inc
push
push
dec
push
and
inc
outsl
jb
jne
je
inc
popa
je
and
mov
push
pushl
mov
pushfw
pusha
push
mov
add
push
push
call
mov
push
mov
mov
add
lea
mov
push
mov
mov
push
push
push
push
push
push
push
push
push
push
call
sub
pop
rep
pop
add
add
rep
call
pop
lea
mov
add
mov
test
je
mov
lea
mov
mov
mov
mov
push
rep
mov
mov
add
jmp
pop
pop
pop
pop
pop
je
jmp
add
jne
mov
sub
adc
ret
inc
call
adc
call
jb
ret
cmp
jae
push
push
push
jmp
push
push
push
push
xor
xor
movsb
xor
dec
jle
call
jae
xor
call
sub
jae
mov
inc
jmp
mov
mov
call
adc
loop
xor
cmp
adc
cmp
adc
mov
call
adc
call
adc
jne
call
add
add
push
sub
lea
rep
pop
jmp
nop
add
add
add
add
add
pop
add
add
add
add
adc
add
adc
add
add
add
add
add
add
adcb
add
adc
add
adc
add
adc
add
add
add
add
or
add
pop
adc
add
and
add
cs
add
cmp
add
inc
adc
add
dec
adc
add
pop
adc
add
adc
nop
adc
add
add
cwtl
adc
add
add
mov
add
add
adc
add
adc
add
adc
add
add
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
add
add
add
add
inc
adc
add
add
add
add
add
add
add
addb
add
fs
add
add
add
addb
add
je
add
add
add
nop
adc
add
add
add
add
add
add
add
add
adc
add
add
add
adc
add
add
add
add
imul
jae
add
dec
outsl
popa
fs
imul
add
add
inc
gs
jb
arpl
fs
jae
add
add
push
imul
jb
je
arpl
add
inc
insb
outsl
bound
inc
insb
insb
outsl
arpl
add
inc
insb
outsl
bound
inc
jb
add
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
add
dec
gs
popa
addr16
outsl
js
add
add
jo
imul
add
je
insb
je
add
add
addr16
jo
outsb
dec
gs
add
add
dec
outsb
imul
add
add
dec
outsb
je
jb
gs
jo
outsb
inc
add
add
je
jb
arpl
jae
insl
popa
addr16
imul
add
add
push
popa
je
inc
imul
jae
add
add
jae
add
inc
imul
add
add
je
fs
jo
gs
dec
outsb
outsw
add
add
imul
add
add
push
dec
inc
gs
outsl
insb
fs
popa
je
inc
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
inc
push
xor
cs
insb
add
dec
xor
cs
insb
add
push
inc
push
dec
xor
cs
insb
add
xor
cs
insb
add
inc
inc
push
push
xor
cs
insb
add
dec
dec
dec
inc
push
cs
insb
add
xor
xor
fs
insb
add
inc
push
dec
cs
dec
dec
add
dec
push
inc
push
dec
cs
insb
add
push
inc
push
push
cs
insb
add
imul
insb
insb
add
push
imul
push
push
inc
push
push
xor
fs
insb
add
inc
dec
dec
xor
cs
insb
add
add
add
add
add
add
push
add
add
add
add
add
add
add
rclb
add
adc
add
pop
inc
add
dec
push
add
ficoms
add
pop
push
add
add
add
add
aas
inc
gs
push
inc
push
je
insb
imul
pop
pop
add
dec
inc
inc
dec
dec
inc
push
inc
push
pop
pop
inc
push
dec
dec
pop
add
jne
inc
jae
xor
pop
js
cs
insb
