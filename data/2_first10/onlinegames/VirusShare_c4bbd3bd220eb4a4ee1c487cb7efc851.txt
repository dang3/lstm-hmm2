in
call
push
push
push
push
call
mov
mov
and
push
aas
fistl
pop
and
test
jne
pop
pop
pop
pop
pop
ret
push
adc
insb
xchg
rclb
and
call
filds
sbb
push
mov
push
mov
insl
divl
add
add
jne
fistl
or
sarb
dec
and
ret
imul
push
adcl
cwtl
dec
push
push
push
adc
insl
sti
popf
sbb
add
movb
add
in
repz
push
fidivs
sub
mov
mov
je
ja
es
adc
outsb
xlat
divl
mov
test
push
jle
pop
sub
mov
mov
cmp
je
dec
cmp
push
fmuls
dec
in
les
out
in
iret
add
mov
jae
fisttpl
mov
or
add
push
ss
or
add
cmp
push
sysenter
ret
loope
imull
sbb
cmp
mov
or
int3
adc
in
shll
push
ret
pop
sub
add
sbb
sub
or
divl
dec
or
add
push
push
and
dec
je
mov
and
add
inc
insl
pop
xor
sbb
jbe
sbb
mov
daa
sbb
in
jl
mov
lods
rorl
inc
ret
or
lods
jne
adc
or
inc
outsb
adc
fstpt
adc
or
stos
stos
cmp
fstl
sub
sti
or
xchg
or
and
xchg
dec
clc
sub
pop
xor
jl
push
ds
cld
outsl
sbb
pop
push
ds
fistl
or
jmp
lcall
xchg
adc
push
add
ffreep
scas
mov
pop
xor
pop
push
mov
cmpsb
pop
add
add
mov
ret
outsb
sbb
push
fistpl
dec
pop
pop
push
mov
fisttpll
xorl
push
sbb
notb
push
sub
aas
push
mov
out
lock
push
movsb
cmp
sbb
push
movsl
jne
jmp
push
dec
and
je
jmp
adc
sbb
test
in
fwait
jle
dec
add
push
adc
fwait
pushl
movb
inc
push
push
lea
mov
mov
pushl
data16
out
sar
mov
shr
add
mov
sti
enter
pop
push
push
fsubrl
dec
je
insl
jl
pop
jg
in
sbb
ret
jo
out
cmp
shrl
in
inc
add
inc
or
cmp
jbe
push
mov
cmp
mov
and
push
push
xlat
xor
xor
push
mov
jl
dec
or
xor
in
xchg
or
fucomp
sbb
push
add
pop
mov
mov
xor
xor
or
lock
adc
push
loopne
add
xchg
mov
add
aaa
mov
add
sbb
out
push
into
sbbb
add
cmp
add
jmp
inc
pop
ja
sub
mov
dec
es
xor
jbe
enter
jne
jp
mov
adc
loopne
jo
das
fcmove
sbb
adc
dec
pop
mov
and
inc
call
xor
mov
cs
push
inc
negl
in
push
sbb
jecxz
enter
inc
fsts
push
sti
mulb
jmp
sbb
add
cmp
inc
icebp
mov
cmp
mov
or
int3
xor
test
or
inc
cs
and
cwtl
outsl
add
or
or
pushf
scas
outsl
shrb
outsl
adc
scas
insl
mov
es
adc
lods
lods
in
outsb
xchg
push
or
int
int
movsb
mov
mov
pusha
insb
mov
or
lcall
sbb
xor
lods
pop
out
loopne
add
dec
fildl
push
mov
add
roll
sbb
inc
ret
roll
test
push
fisubs
sbb
or
cltd
xor
mov
inc
aaa
pop
sbb
gs
rcl
sbb
je
call
addr16
add
jo
mov
pop
jl
add
push
sub
fs
push
fcomip
fisttpll
mov
mov
mov
adc
mov
mov
sbb
push
cld
cmp
or
push
jne
push
xor
mov
pusha
cmp
mov
cmp
jle
jle
fwait
sti
xor
xchg
add
and
std
jmp
ja
outsb
insb
popa
je
jb
gs
push
gs
gs
gs
ljmp
ja
ja
cs
insb
add
dec
outsl
outsb
pop
push
popa
jbe
pop
pushl
ds
dec
inc
push
sub
jne
cmp
add
and
cld
mov
mull
and
pop
dec
outsb
jae
popa
insb
insb
push
sub
mov
jb
outsb
sub
xor
fdivrs
xor
push
sbb
insl
push
inc
je
pop
mov
mov
and
pushl
push
into
pop
add
into
mov
leave
mov
int3
shl
insl
enter
adc
hlt
mov
test
push
mov
mov
add
jb
pop
dec
mov
outsl
mov
pop
outsl
ja
pop
push
es
dec
outsl
push
lcall
in
outsl
popa
insl
sbb
aaa
add
inc
dec
pop
inc
in
fcmovnu
in
outsl
outsl
je
jb
mov
pop
inc
gs
or
mov
insb
je
arpl
arpl
adc
dec
xchg
cmpsb
stc
xchg
dec
add
inc
add
dec
pop
nop
add
add
enter
mov
fucomp
add
pop
mov
int
mov
imul
or
jmp
popa
insl
and
outsb
outsb
outsl
je
bound
pop
and
incb
push
and
fs
and
popa
pop
addr16
femms
mov
pop
add
gs
jmp
pop
push
push
jae
fstpl
push
push
filds
ret
mov
arpl
cmc
xchg
ds
inc
add
jmp
adc
movsl
imul
push
or
adc
shlb
cmp
rolb
add
pop
add
mov
pop
sbb
xor
cmp
push
mov
mov
daa
aam
add
loopne
inc
enter
add
or
push
pop
xor
inc
testb
les
cmp
movsb
pop
loopne
sub
popf
xchg
sub
dec
add
daa
shrb
cmp
jmp
or
lock
jo
pop
dec
cld
out
sub
push
add
decl
fadd
call
adc
or
dec
mov
pushl
rclb
jbe
fmuls
push
std
jg
fdiv
fdivrs
push
pinsrw
in
enter
mov
mov
mov
push
sbb
push
push
cs
call
push
mov
add
std
arpl
pop
add
daa
xchg
or
sbb
jp
pop
rcrl
call
and
adc
test
xchg
add
inc
push
test
rorl
adc
jg
call
ds
mov
mov
xor
test
ljmp
mov
fmuls
call
xorl
add
mov
cmp
jne
lcall
std
jl
ss
mov
or
lcall
fcmovu
push
nop
aas
cmp
adc
xchg
sbb
div
fisttps
mov
shl
add
mov
adc
subb
cli
decl
xor
and
mov
mov
add
mov
frstor
dec
mov
fildll
enter
push
push
push
push
push
and
sbb
push
push
lea
push
enter
jmp
sbb
pop
pop
jb
enter
pop
mov
sti
mov
cmp
sbb
push
jmp
jmp
mov
fdiv
ss
popa
sbb
movb
adc
or
arpl
sbb
repnz
lcall
jb
push
fiaddl
out
fdivs
sbb
push
dec
pop
inc
jbe
mov
or
incl
dec
pop
shr
push
cmp
aas
imul
xor
sbb
les
call
xchg
jbe,pt
mov
push
push
cmp
lds
push
push
mov
fcoml
lcall
sbb
mov
inc
inc
mov
mov
pushl
mov
shll
mov
jge
pop
mov
or
pop
mov
or
sbb
xor
and
scas
repz
pop
fs
incl
mov
popa
mov
adc
push
jns
adc
push
inc
fbstp
and
mov
adc
jecxz
push
insb
mov
mov
std
lcall
ja
sbb
push
push
mov
lods
inc
cld
incl
icebp
mov
das
push
push
popa
push
sbb
in
adc
ljmp
je
fistps
push
push
dec
xchg
filds
cmp
fcoml
and
insb
movsl
outsb
jecxz
jmp
incl
rol
xchg
cmp
add
call
push
add
das
cld
call
add
neg
lcall
rcrb
mov
jle
push
mov
adc
mov
jg
mov
je
or
mov
mov
cmp
xlat
fisttps
mov
mov
cmp
mov
cmp
dec
loop
pop
test
in
and
mov
pop
int3
push
lret
xchg
scas
jns
decl
incl
call
jb
inc
lds
xchg
adc
sbb
jmp
fsts
pusha
cmp
aaa
sbb
or
insl
xchg
or
adc
decl
rcr
stc
jno
jne
popa
adc
jo
push
jne
xchg
lea
add
test
mov
adc
je
pop
mov
mov
pushl
subl
inc
movsl
mov
lahf
test
push
push
push
mov
decl
lcall
adc
sub
mov
out
insl
sub
mov
dec
mov
fbstp
divb
call
sbb
jmp
jge
inc
rcll
push
or
xlat
push
pop
push
cmp
decl
xlat
sbb
pop
cmp
mov
fildl
lods
inc
ret
pop
inc
call
daa
jno
cmp
outsb
mov
and
xor
add
fcmovb
xor
jecxz
lcall
js
push
add
inc
hlt
ret
sbb
mov
out
sbb
pop
adc
xor
push
decl
outsb
pop
mov
inc
dec
rorb
mov
jmp
sbb
sbb
jle
push
and
lcall
xchg
popa
mov
mov
pusha
xchg
add
jg
push
fdivr
xlat
ds
incl
push
xor
lcall
pop
push
push
sbb
cmpsb
mov
lcall
mov
xchg
dec
mov
lock
iret
fmul
hlt
int3
xor
or
rorb
sahf
mov
adc
aam
sarl
ss
push
mov
fsubs
enter
loope
fists
lahf
push
call
push
lods
int3
or
cmp
and
mov
xorb
clc
sub
xlat
sbb
cmp
jne
jp
jg
bound
stos
dec
adc
mov
cmp
hlt
idiv
incl
or
mov
lock
cmp
jl
lea
push
out
pushl
add
fs
xchg
pushf
pushf
lea
xchg
push
nop
xchg
addr16
jo
pop
movsb
fsincos
pop
clc
ljmp
xor
push
mov
jmp
jb
pop
fstpl
mov
decl
jle
mov
xchg
shl
sbb
push
bound
in
test
adc
lock
mov
mov
mov
fdivp
sbb
sub
gs
cld
lcall
mov
adc
or
adc
or
cmp
cs
inc
mov
pop
jmp
push
inc
xor
lahf
xchg
fcomip
push
xor
call
cli
sar
or
lret
loop
enter
mov
lcall
lods
or
jns
sub
clc
rorb
call
sti
fdivrp
in
jle
lds
pop
ret
std
push
sbb
sbb
icebp
lahf
pop
lea
push
out
sbb
push
sub
repnz
pop
push
jo
shll
shlb
cmp
lret
call
incl
add
mov
pop
mov
jb
or
negb
ljmp
insb
push
in
add
lea
jo
push
and
sub
mov
fimuls
push
dec
mov
push
add
or
cli
mov
xchg
mov
jno
mov
rep
movsw
movsb
add
jmp
dec
or
inc
in
out
adc
ljmp
push
cmp
pop
mov
outsl
js
insl
or
fwait
imulb
outsl
push
mov
add
or
dec
sbb
pop
in
pop
add
ljmp
fcmovnb
inc
sbb
loop
shll
pop
add
jecxz
pusha
ss
mov
push
xacquire
or
fstp
dec
out
mov
imulb
movb
push
test
dec
adc
leave
add
bound
xchg
pop
sbb
outsl
bnd
add
imul
or
enter
std
xlat
bound
pop
xor
pusha
arpl
push
or
pushl
cmp
push
or
fsubrs
popa
enter
popa
add
movsb
cwtl
jo
repnz
call
bound
pop
fisttpl
inc
mov
fsts
bound
daa
add
xorps
int3
jne
xchg
dec
sbb
mov
xchg
les
xlat
aad
decl
push
xchg
or
adc
pushf
lahf
sub
nop
pop
dec
xchg
pop
pop
pop
sbb
push
stc
popf
sbb
sub
clc
mov
daa
dec
aas
ret
arpl
push
mov
add
mov
mov
mov
mov
jbe
aad
cmp
xchg
and
mov
push
das
add
roll
fs
nop
jnp
std
xor
outsl
lock
add
cltd
popl
ficomps
lret
mov
and
xchg
push
mov
dec
mov
push
cwtl
out
or
jb
cmp
pushf
or
or
mov
mov
das
adc
sbb
pushf
add
test
or
fwait
push
and
sbb
jmp
out
dec
pusha
repnz
sbb
cld
sub
sbb
repnz
jmp
mov
rcll
out
mov
pusha
sub
add
xchg
enter
push
std
ljmp
sub
bound
pop
push
push
sbb
idiv
decl
jo
and
test
xchg
mov
push
mov
in
leave
jns
adc
push
cmp
ffreep
push
fcompl
mov
sub
lret
or
insl
pop
call
jg
ljmp
sub
push
pop
mov
imul
shlb
sbb
jb
je
mov
clc
pop
cld
lcall
dec
adc
pop
sub
addr16
dec
mov
sar
lcall
call
lret
xor
xor
jl
adc
push
pop
in
push
cmpsl
pop
xor
in
pop
lcall
shrl
sub
cmp
rolb
push
xor
std
sahf
dec
je
lcall
clc
xchg
push
lea
fwait
pop
cmovnp
inc
in
fcoms
fidivs
ljmp
pop
xchg
sub
clc
pop
mov
movsb
lea
mov
push
lcall
ljmp
sub
and
inc
add
pop
lock
jb
push
das
cld
inc
out
sbb
jmp
sbb
or
dec
add
jbe
mov
xchg
mov
mov
push
add
add
adc
cmp
pushl
fidivs
mov
fiaddl
xor
or
mov
push
mov
mov
pop
xor
or
pop
pop
in
add
add
mov
mov
lcall
xor
inc
push
sbb
xchg
mov
lods
in
push
call
inc
add
iret
faddl
rol
insl
lea
pop
loop
das
aaa
or
add
lods
je
xchg
dec
std
push
adc
add
inc
imul
push
roll
jmp
insb
shr
jne
imul
into
xchg
dec
push
or
pop
ljmp
clc
push
push
mov
stos
cltd
mov
push
inc
insb
test
incl
mov
mov
and
scas
imul
mov
fcos
call
daa
inc
dec
adc
pop
or
jmp
xchg
push
mov
test
push
idivl
scas
loope
stc
add
push
arpl
incl
adc
fistl
jle
loope
mov
mov
ljmp
lock
mov
movl
inc
jnp
pusha
or
add
shrb
jl
inc
pop
loop
mov
out
ret
fcoml
xchg
jg
inc
cmp
inc
or
mov
jo
adc
pop
mov
pop
ret
inc
icebp
mov
int3
add
ud0
mov
push
add
or
add
jb
mov
mov
sbb
pop
push
mov
or
sbb
call
cmp
xchg
add
mov
cli
pop
jnp
add
adc
or
lahf
rorb
xchg
test
inc
sbb
xor
push
fwait
pusha
ret
sbb
divb
insl
fwait
mov
dec
xchg
inc
call
clc
je
mov
pop
lods
cmp
dec
add
pop
xlat
stos
pusha
mov
call
cli
call
push
shll
daa
fstps
add
xlat
mov
mov
lea
push
pop
sbb
add
mov
jne
pop
call
sbb
lret
push
sbb
jge
sbb
or
mov
sbb
cmp
push
lock
lcall
das
test
cltd
pop
pop
and
sbb
mov
mov
jp
or
incl
roll
ss
sbb
js
insb
loopne
cli
decl
lea
mov
cs
shl
inc
push
sub
in
fbld
lods
pop
pusha
ret
rcll
sbb
xor
add
mov
sbb
xor
aad
push
adc
insb
mov
xchg
insb
ds
add
call
dec
nopl
icebp
insb
in
sbb
popa
inc
push
cmp
push
push
call
je,pn
test
inc
xcrypt-cfb
cmpsl
out
pop
mov
mov
inc
sbb
or
push
jg
decl
test
lods
clc
xchg
outsl
jp
pop
shl
jg
push
push
mov
jl
sti
mov
pop
sbb
mov
cmp
inc
xchg
sarl
pop
bound
lcall
cmp
ret
mov
jmp
repnz
jg
sub
sub
pop
or
cld
decl
or
arpl
push
jge
arpl
repnz
jg
adc
rolb
sub
sar
push
insl
shl
dec
add
incl
insb
sub
fwait
push
int3
push
and
add
cs
cmp
arpl
jmp
dec
or
inc
sahf
addr16
arpl
cmp
mov
xor
ds
add
dec
sub
cld
decl
cmp
test
adc
push
xlat
pop
cmpsl
xor
outsl
fucomip
dec
fs
xor
ds
mov
orb
cli
pop
ljmp
pop
test
mov
or
js
data16
mov
movsl
jle
nop
jo
ljmp
mov
xor
pop
repz
daa
cwtl
push
fdivr
pushl
sahf
sbb
pusha
mov
xor
insl
jo
pop
nop
fbstp
xlat
data16
dec
cld
mov
mov
rorb
es
in
into
pop
sub
dec
push
jo
das
mov
sti
push
fldenv
xchg
cmp
xchg
incl
test
inc
xchg
xchg
xor
mov
jne
xchg
ljmp
and
daa
sub
jmp
fistps
cmp
xchg
xorb
jb
or
fdivrs
and
cmp
mov
inc
notl
sbb
xor
js
jbe
and
arpl
lcall
out
add
int
xchg
jb
add
add
arpl
movsb
arpl
cmpsb
and
call
nop
out
arpl
mov
arpl
push
mov
fstp
and
and
dec
decl
push
mov
lahf
in
ja
les
mov
xlat
jl
mov
rclb
sti
sbb
mov
gs
adc
mov
pushl
lods
je
pusha
int
jns
js
inc
mov
shll
dec
fsubl
mov
loopne
pop
rcrl
inc
sub
shlb
inc
das
mov
cwtl
in
xorb
outsl
in
imul
fisttpl
js
jg
sub
xchg
testb
mov
in
mov
rcrb
dec
mov
dec
in
add
jg
sub
vaddsubpd
loopne
sarb
xor
cmp
mov
movsl
pop
in
push
pop
mov
dec
cmp
sbb
mov
push
push
mov
pop
xchg
sub
cltd
xchg
es
mov
shlb
test
stos
jb
cmp
stos
test
xor
add
js
fildl
jl
pop
js
rcrl
cmp
lcall
lret
cmpsl
dec
xor
push
sub
in
add
movsb
mov
mov
in
mov
bound
fs
push
push
icebp
mov
fs
test
dec
scas
add
pop
and
add
jnp
xchg
outsb
mov
and
ja
dec
in
dec
aam
test
add
or
fwait
sbb
dec
or
jg
inc
mov
jne
out
dec
xor
sbb
pusha
mov
dec
test
jnp
cmc
ljmp
pushf
pop
mov
daa
push
ret
and
das
lock
jmp
inc
aaa
mov
ret
inc
add
lods
and
lods
or
insl
addr16
ja
xor
inc
fwait
in
sub
sub
rolb
mov
stos
add
int3
dec
call
mov
icebp
add
call
xlat
mov
pop
loop
ja
roll
sub
push
call
mov
pop
cli
sbb
xchg
adc
add
stos
mov
dec
clc
jg
push
scas
push
adc
movsb
mov
or
mov
fdiv
mov
int3
lcall
or
xchg
jbe
jge
jmp
sbb
cltd
xchg
out
push
jmp
cld
jmp
in
lods
fsub
inc
lcall
in
fdivrl
add
mov
cs
lcall
dec
jns
in
or
adc
sbb
lahf
imul
push
fistpll
ljmp
enter
add
std
in
in
cmp
in
mov
add
stos
test
ret
mov
cmp
mov
cmp
jl
pushf
xor
mov
adc
jbe
cmc
cmp
dec
add
scas
lahf
into
push
loop
inc
dec
and
sub
sub
xor
sbb
inc
cli
or
divb
outsb
sbb
addr16
jne
jp
add
mov
incl
je
pop
dec
je
pop
cmp
push
adc
mov
cmp
dec
sahf
and
int3
test
pop
push
or
inc
push
sbb
sub
push
cmp
xchg
push
jne
jge
push
imul
daa
jb
enter
test
push
adcb
xor
adc
and
jns
cs
ljmp
xchg
add
enter
xchg
push
decl
rorl
ja
xor
ljmp
icebp
in
test
mov
lock
aaa
movsb
ljmp
cld
rclb
pop
out
in
jno
add
lret
fwait
out
push
lock
inc
push
test
jmp
testb
jnp
and
cmp
aaa
cli
outsl
insl
lsl
and
lea
mov
inc
int3
cmp
int
fstpt
cmp
push
mov
cwtl
or
call
int3
adc
decl
xchg
rorb
mov
cld
lcall
adc
sahf
pop
xor
jl
push
les
dec
std
mov
inc
pusha
adc
mov
pusha
iret
add
fmulp
mov
mov
inc
mov
out
adc
shl
out
shlb
mov
mov
sub
lods
push
mov
scas
je
out
cmp
add
test
adc
xor
out
repnz
call
aas
xor
xor
nop
add
out
ret
adc
adc
inc
push
sbb
movsl
pusha
repz
pop
fdivrl
sarb
incl
pop
fistl
mov
mov
and
and
fsub
loopne
insl
or
inc
call
decl
addr16
push
dec
mov
cmp
inc
dec
adc
adc
jg
sbb
popf
add
or
cmp
pushl
outsl
push
les
loope
fiadds
cli
push
or
popf
jb
icebp
outsl
cmc
and
fadds
mov
push
adc
push
add
mov
and
enter
pop
pop
lea
leave
mov
rorl
lea
xor
xor
or
mov
dec
fucomp
incl
leave
mov
mov
test
mov
call
das
cmc
call
mov
xor
fdivl
test
insb
jmp
xor
mov
test
or
enter
mov
test
std
cwtl
pop
decl
ljmp
inc
adc
and
popf
test
xchg
mov
mov
cmp
repz
sbb
add
lret
jnp
or
fistps
add
stos
mov
mov
mov
xor
jnp
inc
dec
orl
and
loope
pop
sar
pushl
push
clc
sbb
negl
pusha
inc
addb
dec
out
mov
bound
cltd
in
in
addb
call
push
shlb
iret
dec
cs
or
loopne
or
mov
jg
push
cmp
icebp
fidivl
into
jl
je
aam
dec
fistl
cs
inc
jecxz
sbb
nop
repnz
push
xchg
cmpsl
jg
xchg
loopne
jmp
add
test
ja
mov
outsb
sub
pop
mov
push
xchg
jmp
pop
or
sbb
arpl
dec
add
lahf
outsl
icebp
decb
cmp
mov
lea
push
mov
mov
mov
or
adc
jnp
std
test
imul
add
mov
in
pop
mov
aam
mov
xor
push
sbb
jne
inc
or
mov
clc
lcall
ficompl
les
mov
test
test
enter
incl
mov
xor
dec
pop
xor
mov
incl
mov
add
daa
add
leave
fwait
inc
gs
sub
cmp
pushl
in
das
jns
mov
mov
ljmp
jbe
inc
or
test
daa
xor
cmp
lahf
adc
pusha
push
pop
mov
ljmp
push
mov
xor
cwtl
sub
movsl
xchg
inc
mov
push
mov
das
es
adc
das
mov
cmpsb
loope
fwait
pushl
adc
jo
sbb
or
mov
mov
aaa
cli
in
rorl
repnz
lret
loop
or
dec
xchg
jmp
xor
cmp
add
cmc
push
mov
lcall
push
push
test
stos
incl
push
add
or
sbb
call
xor
scas
leave
incl
lea
insb
inc
adc
pop
and
addb
enter
adc
adc
mov
pop
into
pop
push
inc
rolb
cwtl
xor
outsl
adc
adc
sbb
jmp
push
fcmove
out
out
cmc
imul
jg
mov
cmp
jb
pop
add
pop
out
add
adc
jecxz
fadd
sti
lcall
loopne
inc
leave
pop
mov
sbb
fdivrl
jne
in
call
in
jo
jmp
xchg
arpl
or
mov
adc
push
adc
pop
push
call
test
jmp
mov
cmp
jne
pop
call
rcrl
pop
xor
inc
mov
add
pop
rorb
xor
cmp
mov
sar
ljmp
pushf
sbb
loope
nop
jp
or
lea
out
outsl
and
hlt
mov
les
test
sub
xor
jo
sub
jmp
push
sbb
movsl
and
add
fstps
xchg
sbb
mov
dec
data16
loope
sbb
pop
dec
stos
pop
sbb
push
push
xor
pop
nop
mov
fld
push
cmp
sub
inc
push
adc
mov
sbb
pop
filds
lret
mov
and
fildll
icebp
lcall
aaa
cwtl
rcll
add
sbb
sub
push
push
icebp
lcall
dec
or
int3
nop
mov
imul
pop
clc
test
divb
fiadds
popf
fcompl
dec
pop
test
and
insb
mov
mov
inc
in
mov
sub
pusha
add
or
mov
and
popa
and
mov
inc
incl
mov
or
or
decl
sbbl
fs
push
rcl
roll
add
jae
add
mov
add
inc
mov
call
jnp
sub
mov
sti
sbb
call
fildll
and
push
fs
push
pop
insb
addr16
jmp
ljmp
sub
dec
cltd
jns
les
cltd
in
loopne
lcall
xchg
pop
bound
add
xchg
les
test
in
rclb
lcall
movsl
jp
jno
decb
lcall
adc
mov
lock
add
mov
pop
ret
nop
add
fsubr
dec
lcall
lock
lahf
icebp
xchg
sub
jno
movq
ljmp
lock
jl
adc
ds
lock
lcall
cmp
je
dec
or
lock
scas
pop
ds
mov
mov
cmp
insb
adc
or
cmp
mov
xor
mov
stc
sub
call
xor
sub
mov
sbb
hlt
outsl
icebp
cs
ds
add
xor
por
inc
jmp
push
inc
sub
mov
fimull
sbb
jb
pushl
cli
jg
pop
call
mov
rcl
imul
mov
mov
lcall
imul
sar
testb
lea
in
mov
adc
push
push
aad
inc
jg
inc
movl
dec
sarl
mov
leave
or
and
mov
clc
inc
or
jg
fs
cmp
sahf
add
mov
xor
in
sub
push
mov
jne
outsb
mov
ljmp
dec
lock
sbb
adc
inc
aas
adc
or
shrb
mov
daa
adc
xor
pop
mov
ljmp
adc
rol
icebp
pushl
bound
xor
cmp
test
cmp
loopne
pop
loop
cmp
cmp
cmp
pop
sub
mov
mov
hlt
test
incl
xor
sub
lret
int
jns
sub
and
pushl
add
jne
cmp
jne
cmp
out
pop
je
cld
ljmp
inc
xchg
and
stc
add
andps
test
pop
movsb
mov
ds
in
add
xor
sub
jne
add
mov
jnp
sbb
cwtl
pop
gs
jnp
mov
jae
push
or
mov
decl
call
and
inc
xchg
fs
scas
jnp
mov
mov
jle
pop
pop
out
insb
fbstp
adc
lea
movsl
sub
sbb
adc
jl
stos
lcall
cs
iret
jbe
lods
test
pop
sbb
fistpl
cwtl
test
jne
or
lret
js
aas
incl
icebp
idiv
mov
mov
mov
push
add
fmuls
stos
or
ret
in
mov
jmp
out
popa
push
ret
lret
add
call
xchg
dec
mov
sbb
lahf
lock
gs
mov
mov
xor
cmp
inc
imul
outsb
push
xor
lret
pop
cli
movsl
dec
sbb
xor
or
add
or
incl
pushl
or
es
in
mov
dec
jo
xor
sahf
out
and
pop
pusha
mov
mov
imul
xchg
in
mov
roll
movsl
or
mov
or
decl
xchg
add
data16
mov
pop
lahf
xchg
inc
mov
cltd
sbb
push
add
aad
mov
inc
pop
and
or
rorb
push
mov
dec
add
sub
pop
arpl
mov
xchg
or
push
fcmovb
lret
outsb
fs
repnz
mov
jg
jle
jns
xor
loopne
and
inc
sub
mov
enter
jg
ud1
loop
call
data16
jecxz
pushl
fmuls
testb
addr16
rorb
pop
movsb
xchg
mov
je
cwtl
aaa
push
pushl
xor
xor
or
mov
or
mov
mov
sub
jl
xchg
or
ljmp
sbb
dec
scas
inc
add
popf
xor
sub
push
push
push
adc
call
cwtl
movsb
and
cmp
je
mov
xor
shlb
xor
aaa
clc
ret
bound
adc
jbe
repz
add
push
jmp
add
imul
jmp
fs
sbb
cli
jmp
push
sbb
pusha
insb
mov
or
add
and
xorb
add
push
and
and
nop
add
lcall
cld
out
pusha
cmp
xchg
xor
sbb
push
push
mulb
sbb
aam
pop
adc
push
pop
sbb
shll
xor
repnz
push
ljmp
lock
sbb
pop
inc
sub
add
and
cli
lcall
ja
adc
stos
or
pop
push
test
mov
andl
call
addr16
lods
sbb
sbb
lods
mov
push
push
test
sbb
adc
adcl
fs
xor
dec
mov
cmp
fsub
call
mov
stos
adc
sub
test
data16
xorb
aam
incl
lcall
adc
adc
or
jnp
scas
ret
in
data16
push
test
jae
in
add
or
mov
je
jg
data16
jg
subb
sbb
inc
inc
fcomps
push
ljmp
ljmp
sub
and
dec
sub
divb
cld
lret
inc
movsl
jg
ljmp
pop
dec
mov
pushf
test
cmp
push
fisubl
mov
aas
pop
aad
mov
data16
mov
das
bound
imull
cli
push
fists
inc
or
or
pop
or
sub
stos
pop
or
stos
jno
or
orl
enter
and
decl
sahf
pop
xor
ret
mov
fnstenv
push
cwtl
mov
je
enter
cmp
fwait
jge
js
add
dec
add
xor
mov
push
into
pop
repnz
inc
jmp
inc
pop
or
push
jle
test
hlt
lahf
cmp
sbbb
lods
and
push
ror
jg
add
test
mov
int3
int3
push
pop
push
or
sub
add
jge
sub
jae
mov
les
loope
xor
cwtl
cmp
jbe
int3
jae
mov
cld
int3
add
inc
fs
add
test
imul
ljmp
decl
or
js
test
cmpsb
imul
add
add
fnstsw
mov
lcall
imul
dec
shll
mov
orps
mov
and
aam
xor
and
outsb
mov
push
or
mov
rcr
into
ret
pop
or
sti
jo
inc
imul
cmpsl
inc
imul
pusha
push
push
jb
mov
mov
das
aam
add
insb
lcall
rcrb
loope
mov
inc
shlb
dec
pop
and
in
xchg
fmuls
insb
addb
es
sbb
dec
mov
jbe
pop
mov
jmp
ss
adc
push
int
mov
iret
xorb
ljmp
loopne
aas
ret
add
jg
sbb
cli
sub
in
cld
pop
mov
add
out
in
dec
imul
imul
adc
push
adcb
loopne
scas
call
mov
dec
xor
sub
loope
push
xor
jg
decl
add
insb
stc
insb
popa
jae
jo,pn
mov
insl
jmp
bound
jb
decl
imul
outsl
outsb
cmp
je
mov
mov
or
outsb
push
jb
inc
fldenv
aaa
inc
int3
cli
imul
inc
test
scas
jbe
inc
and
pop
idiv
inc
imul
and
sar
lcall
decl
imul
outsl
je
and
outsl
lock
mov
push
outsl
imul
or
outsl
push
ljmp
jae
into
xor
jg
shrb
cli
add
sbb
sub
in
lret
outsl
lods
jne
push
jns
popa
jo
jg
jo
popa
cmp
das
js
ja
sub
jne
and
lcall
lcall
lock
mov
arpl
jo
cmp
sub
ljmp
push
push
mov
push
mov
xor
push
add
and
lcall
pop
pop
cmp
je
jo
das
das
add
fnstsw
insl
jne
fs
sub
das
mov
idivl
cmp
bound
and
jb
xor
aaa
imul
push
pop
std
jmp
repz
and
pop
inc
imul
sbb
std
push
hlt
es
outsb
mov
and
into
fdivrs
das
icebp
inc
fldenv
pop
sbb
fsubrl
ljmp
insb
imul
sub
pop
mov
jnp
pushl
popa
fs
add
jmp
ss
mov
rorl
insb
test
into
add
sbb
push
or
loop
gs
push
jo
push
dec
lods
cld
mov
mov
and
xchg
sbb
addr16
mov
std
pop
outsl
mov
bound
insb
or
jbe
pop
shrl
dec
sbb
push
rorl
xchg
out
cmp
xor
xor
or
push
jg
adc
outsl
out
jnp
je
or
push
paddd
mov
or
jne
inc
sub
das
std
in
xor
push
lahf
jg
js
mov
mov
flds
push
das
icebp
jle
sbb
dec
jb
icebp
xor
ror
inc
jb
cld
outsl
cld
aaa
adc
or
js
scas
rol
idivl
jmp
pop
fisubrl
xor
idivb
mov
test
mov
stos
sub
das
icebp
decl
arpl
jb
mov
movsl
in
pop
pop
int
lods
ljmp
stos
aad
mov
mov
xor
sahf
mov
pop
repz
call
pop
outsb
inc
gs
mov
mov
lods
cmp
in
test
mov
lcall
shll
arpl
adc
jecxz
inc
mov
jae
mov
pop
pop
out
sar
fcomip
ja
pop
push
ljmp
scas
cs
pop
bound
ljmp
push
insb
insl
outsb
outsl
jo
decl
ja
jns
or
pushl
xor
inc
inc
js
inc
push
cli
incl
dec
dec
dec
dec
dec
dec
dec
dec
ret
mov
jecxz
lcall
pop
and
and
pop
sub
sub
pop
clc
ljmp
cs
das
jl
jle
pop
insl
fldl
mov
jmp
mov
cld
pop
clc
arpl
es
repnz
leave
int
pcmpgtd
cmp
cmp
mov
bound
or
xor
incl
jae
mov
mov
or
inc
inc
dec
inc
inc
dec
dec
ljmp
push
insl
jg
and
mov
fbstp
cmp
lcall
icebp
mov
cli
enter
mov
leave
mov
mov
addr16
paddw
lea
mov
lret
mov
mov
jmp
data16
mov
ja
gs
push
ds
mov
loope
mov
hlt
repnz
pop
out
movsl
incl
sub
pop
imul
xchg
xchg
xor
pop
inc
or
stc
shrb
hlt
jp
mov
loop
mov
mov
cld
mov
aaa
lcall
adc
jmp
lea
dec
add
add
lea
es
or
cmp
ljmp
push
in
aam
pop
jnp
mov
in
and
bound
int
arpl
dec
or
ljmp
xor
jl
jmp
arpl
test
pop
imul
arpl
sbb
ja
mov
pop
mov
and
add
sub
push
sbbl
int3
cmp
cld
pop
lods
decl
inc
rorl
cs
jns
mov
inc
push
mov
pop
dec
sbb
jle
jno
aas
or
pop
mov
push
outsb
push
add
imul
dec
sbb
jnp
int
xor
jmp
movsl
fidivrs
addb
popf
adc
fadds
call
xor
mov
ja
jae
xor
mov
rolb
jo
mov
inc
sub
push
mov
ss
fnsave
push
sub
push
test
jnp
pop
mov
sar
frstor
jae
fistl
fs
je
mov
mov
inc
dec
gs
mov
jns
rcrl
jg
dec
test
fbstp
pop
cmp
in
inc
jne
xchg
pushf
dec
fs
insl
popf
in
sub
mov
decl
out
dec
jnp
test
push
orb
fstpl
dec
popa
rolb
imul
cwtl
jb
in
xchg
lahf
mov
data16
movsb
fucomip
inc
xor
sarl
std
movsl
and
gs
popa
sub
pop
clc
lcall
insb
dec
mov
mov
jb
mov
push
push
or
mov
fnstsw
movsl
sbb
sub
dec
jge
push
push
mov
sbb
fidivl
lret
push
jns
ljmp
adc
out
das
mov
popf
cwtl
dec
outsl
dec
imul
popa
pop
sub
ja
lock
decl
negb
add
sbb
mov
out
add
add
bound
movsb
popa
flds
pop
imul
mov
incl
dec
bound
and
into
sbb
inc
mov
and
mov
inc
insb
pop
mov
scas
popa
sbb
dec
add
clc
xchg
int
lcall
xor
out
fwait
inc
outsl
fcomps
orl
mov
cmc
sarw
push
inc
imul
gs
es
std
dec
lcall
or
or
invd
ljmp
cld
jmp
push
xor
stc
aaa
popf
popa
jbe
stc
adc
in
or
inc
push
inc
mov
lcall
and
sbb
sbb
clc
fisttps
push
jg
loopne
fildll
push
jae
aad
add
std
insl
insl
outsl
jbe
pop
sbb
mov
xor
inc
pop
stc
sbb
mov
pop
das
cld
incl
inc
pop
or
adc
popf
fsts
sar
ljmp
cmpsb
pop
pop
fistpl
mov
xor
cli
mov
fisubl
mov
xlat
pop
cmp
pop
xlat
jmp
loopne
sbb
dec
or
jnp
push
sub
das
mov
lods
fcmovu
xorb
inc
scas
repnz
decl
mov
xor
data16
in
aad
int
sbb
push
fwait
call
jg
sarb
leave
push
xorps
fnstsw
mov
lcall
push
push
inc
sti
je
dec
int3
or
push
sbb
push
out
and
cli
ljmp
shlb
dec
das
outsl
in
mov
outsl
dec
addr16
adc
fildl
add
gs
test
mov
test
jle
inc
cmp
test
mov
jne
je
std
pop
call
xchg
lea
mov
pop
jae
lahf
in
xchg
fidivl
dec
arpl
mov
push
and
dec
push
mov
mov
mov
popa
gs
mov
adc
sbb
xor
dec
xchg
mov
idiv
add
sub
pop
or
incl
cmp
and
mov
add
pop
or
jg
or
sar
add
push
add
adc
fdiv
into
sub
push
or
imul
or
mov
sti
mov
push
or
or
add
pop
in
or
adc
and
sbb
pushl
imul
or
or
daa
xor
inc
mov
fcmovu
and
pushl
imul
idivb
sbbb
xchg
adc
or
mov
pop
adc
popa
or
sbb
sub
or
mov
pop
mov
sbb
sub
and
adc
or
or
and
sbb
lcall
and
sbb
mov
sub
sbb
sub
decl
dec
push
leave
pusha
and
or
push
adc
or
sbb
xor
cs
fldt
adc
or
add
add
in
inc
mov
or
bound
or
incl
mov
push
or
stc
pop
flds
or
push
pop
dec
pop
ljmp
inc
jg
push
or
or
push
lock
in
mov
adc
pop
push
pop
or
push
or
decl
decl
dec
sbb
push
push
adc
jg
fcmovnu
inc
sbb
mov
sub
or
movq
adc
pop
cmp
sbb
xor
and
fistps
add
push
inc
push
pop
lcall
mov
cmp
jg
mov
cmpsl
or
xor
popa
add
call
adc
js
ret
mov
adc
mov
adc
mov
jnp
lods
pop
mov
or
push
lea
push
and
ljmp
icebp
outsb
add
push
sbb
or
dec
push
add
mov
add
sub
adc
ja
adc
push
sbb
jne
das
lock
jmp
add
outsb
mov
or
call
mov
insb
fwait
pop
jns
push
clc
pushl
cli
xor
rcrl
and
sub
xor
loope
sar
pop
lods
pop
or
xor
pop
xchg
jle
outsl
pop
insl
pop
subb
sbb
lcall
aaa
iret
add
adc
out
add
or
sbb
outsl
adc
pop
add
sbb
sub
pop
sbb
adc
or
mov
adc
sbb
sbb
repz
ss
mov
xor
push
add
rcll
add
or
jg
pop
jge
mov
outsb
ret
add
lcall
rol
jmp
or
pop
adc
fdivrs
lock
push
out
or
adc
loopne
xchg
cli
insb
fldenv
add
mov
xchg
push
xor
pop
push
jge
fildll
shrb
shl
popa
mov
and
rorb
or
lods
inc
test
pushl
jns
hlt
je,pn
js
inc
add
mov
inc
and
jb
sbb
out
sti
mov
or
inc
out
jmp
inc
add
es
fs
mov
inc
jo
push
rorb
pushl
lock
xor
and
sbb
or
mov
sti
mov
add
fcmove
adc
lds
add
test
das
pusha
mov
inc
mov
or
jmp
nop
add
inc
add
jne
mov
addl
add
out
cld
adc
jb
adc
add
in
fistl
rorb
jne
push
jae
xor
je
sub
jb
stos
cmp
in
shrb
mov
das
leave
or
and
adc
mov
sbb
add
cmp
repz
adc
lea
cmp
inc
cld
or
imul
arpl
mov
add
mov
movl
iret
jmp
mov
mov
idivl
sub
cmp
ja
cmpb
jne
inc
sti
jg
pop
add
shr
rol
xchg
sub
sub
add
cmp
lea
add
or
je
mov
lea
lock
push
pop
or
xchg
mov
xchg
dec
or
fmull
xchg
adc
mov
pop
mov
add
jmp
popa
xor
rorl
mov
or
and
ja
ret
mov
mov
jne
add
loop
mov
mov
cmp
jp
or
scas
xchg
inc
jle
mov
or
push
push
call
lea
jg
adc
int
adc
mov
adc
mov
in
sub
push
call
push
sarb
pushf
jmp
incl
mov
or
popf
popa
pop
push
mov
or
jmp
nop
add
xor
sub
mov
fadds
cwtl
das
adc
nop
sbb
xor
ds
add
sub
cmp
mov
pop
pop
or
cmp
mov
adc
adc
jmp
jmp
and
mov
xchg
out
pushf
add
fldenv
lods
out
mov
dec
lcall
push
or
les
adc
add
mov
dec
add
orl
bound
push
or
and
push
dec
inc
dec
insl
or
or
inc
ja
lds
sti
arpl
push
inc
push
push
or
fistpl
lods
and
dec
add
jne
in
aam
cmpb
push
xchg
push
dec
inc
mov
jmp
fs
jae
cmova
mov
sbb
inc
cmp
inc
popl
je
inc
iret
push
mov
je
push
mov
pop
into
into
add
add
sar
aad
add
outsl
mov
add
mov
inc
mov
xor
adc
loopne
add
adc
and
roll
add
mov
in
inc
add
es
sub
and
mov
test
shlb
mov
jmp
imul
test
inc
fistpl
sbb
pop
or
sbb
sub
mov
xchg
xchg
movsl
test
add
push
inc
fwait
cwtl
sbb
mov
ja
and
outsl
jne
lahf
or
dec
repnz
imul
mov
xchg
insb
adc
push
sbb
pusha
es
js
adc
adc
xor
or
add
enter
sbb
fldl
imulb
imul
and
or
and
mov
push
scas
jae
outsl
sbb
add
mov
outsl
retw
cltd
push
mov
gs
inc
inc
push
cli
sbb
inc
sbb
push
push
lea
push
inc
push
mov
lea
mov
push
rcrb
sbb
push
push
adc
jbe
outsl
mov
or
xlat
outsb
addr16
push
sub
mov
mov
inc
or
xlat
outsb
mov
fildl
jbe
popf
test
inc
je
mov
jae
pop
mov
shlb
or
xor
jg
inc
or
aad
stos
into
sub
movsl
cld
imul
dec
gs
ds
out
push
xor
or
outsb
jne
fldenv
or
int3
jne
push
fwait
mov
mov
pushf
loope
movsb
dec
add
cmpsl
fnstcw
test
jnp
sbb
icebp
ja
jo
push
inc
shlb
dec
cmpl
js
xchg
out
add
pusha
adc
flds
or
rolb
addb
xorl
mov
cmp
je,pn
lret
xor
add
mov
and
jb
sbb
iret
mov
popa
loopne
and
add
push
imul
cs
lea
fisubl
rorb
sub
add
and
in
add
fsubl
jns
add
add
add
add
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
nop
nop
nop
add
add
add
pusha
pushf
inc
cld
mov
mov
mov
cmp
jne
jmp
dec
lcall
inc
add
mov
mov
xor
addl
sub
jmp
xor
mov
movb
loop
cmpsb
push
gs
push
cmpsb
push
inc
push
push
mov
add
mov
mov
mov
nop
nop
nop
nop
jmp
