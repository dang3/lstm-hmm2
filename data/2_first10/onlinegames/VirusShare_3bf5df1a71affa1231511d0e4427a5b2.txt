out
call
in
sub
andb
push
push
push
push
xor
pop
lea
fcomi
stos
push
ljmp
pop
xor
jmp
mov
pop
ja
test
add
loop
mov
dec
gs
in
in
dec
mov
xor
cs
jbe
dec
mov
insb
jmp
mov
push
call
pop
mov
jg
mov
push
push
push
push
push
mov
push
push
call
mov
and
adc
clc
lea
push
add
in
and
call
jbe
adc
adc
pop
mov
or
adc
pop
pop
pop
leave
ret
add
aaa
fstpt
push
xor
push
push
push
cmp
test
je
push
jae
adc
xor
mov
add
push
push
push
or
fwait
mov
lock
add
clc
fcomps
push
pop
mov
pop
insl
movzwl
ljmp
addr16
or
or
cmp
xor
cmp
mov
in
je
push
adc
pop
or
xor
cmp
jne
hlt
jmp
push
testb
push
pop
inc
cmp
push
cmpl
sbb
push
push
or
scas
dec
mov
adc
mov
pop
cld
sub
ret
lock
ret
repz
sub
inc
scas
ja
gs
enter
clc
inc
xchg
xor
sbb
sub
cmpl
je
adc
adc
data16
add
or
push
cmp
les
dec
and
lods
jmp
pop
push
fs
popf
insl
ret
insl
negl
test
gs
into
loopne
add
outsb
cmp
daa
push
or
add
jb
jb
sub
outsl
or
addr16
popa
add
insl
cs
lret
in
and
inc
ljmp
jb
pop
in
jae
out
pop
out
inc
lock
lcall
repz
outsb
xor
imulb
cmpsb
imul
pop
push
xor
xchg
fstp
fsubr
xchg
rep
or
push
mov
pop
mov
out
jmp
pushl
adc
adc
push
mov
ror
mov
inc
inc
dec
dec
test
jne
push
pop
jmp
lahf
xor
push
push
push
inc
push
xor
push
add
add
cmpb
subl
rclb
imul
sub
push
cmp
lret
push
jbe
push
cmp
xlat
cmpl
jne
and
fs
mov
mov
push
push
adc
pop
fcmovnbe
xor
or
adc
add
dec
scas
sub
and
jb
aas
jmp
ret
pop
pop
pop
or
mov
inc
xchg
xchg
mov
out
test
push
lea
mov
sti
mov
mov
inc
jns
mov
adc
data16
popf
cs
mov
adc
xchg
adc
xor
mov
and
fcomip
arpl
and
push
call
or
das
cld
incl
push
push
xor
mov
test
je
enter
push
push
add
test
call
imul
adc
andb
xor
sbb
inc
sbbb
cli
mov
push
mov
mov
inc
inc
test
jne
pop
adc
aad
mov
cmp
xor
rcrb
repz
gs
push
add
je
movsl
pop
lcall
fstps
add
mov
or
jne
cmpsb
fwait
lahf
lods
insb
inc
or
test
add
xchg
lret
inc
add
stos
mov
ror
in
test
push
push
test
inc
pop
jecxz
or
pop
fcmovnbe
fsincos
xor
loopne
mov
push
jb
xlat
sbb
add
mov
mov
add
dec
push
mov
in
mov
std
cmp
cmpsb
test
aaa
invd
aaa
sub
data16
xchg
xchg
jb
inc
into
loopne
xchg
jne
xchg
outsb
pushf
pushf
insb
nop
mov
fstpl
pushf
in
loope
or
int3
cld
mov
xchg
or
clc
push
jg
mov
push
push
aas
cld
and
mov
orb
mov
and
insl
adc
nop
scas
jne
push
adc
call
sbb
jae
ret
ss
test
dec
inc
push
push
push
adc
adc
inc
push
ret
dec
cmpl
ss
or
ret
in
pop
xchg
imul
addl
stc
sbb
cmpsl
test
je
les
lcall
jle
stc
loopne
jl
inc
or
xchg
lahf
adcl
pop
jb
cltd
aam
cld
xor
gs
or
pop
inc
mov
sbb
inc
ret
int3
out
lock
and
add
flds
add
or
adc
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
mov
add
addr16
jl
pusha
xor
lcall
pop
pushf
stos
mov
imul
push
pop
jbe
rcrl
xor
dec
adc
xor
jmp
adc
dec
ret
arpl
incb
pop
add
outsl
arpl
push
call
ja
push
xor
inc
bound
push
jb
jbe
insb
fildll
lahf
gs
jae
jae
gs
xor
pop
or
add
std
ljmp
and
jo
push
outsl
imul
and
add
rorb
sub
ficoml
xor
pop
arpl
fs
insb
cmp
sub
push
in
mov
fs
cmp
mov
test
pushf
add
pop
lea
or
xchg
push
jle
nop
add
inc
dec
mov
leave
dec
nop
cmp
dec
inc
dec
mov
inc
nop
push
xchg
dec
adc
dec
push
push
pusha
ljmp
add
add
nop
add
xor
mov
add
mov
add
add
pop
mov
int
mov
jg
push
jb
addr16
insl
and
outsb
outsb
outsl
je
bound
jb
outsb
and
pusha
mov
and
fs
adc
jp
fwait
out
mov
add
jl
push
setb
add
jle
out
add
xor
add
push
sti
mov
cld
daa
mov
mov
pop
jmp
push
stc
or
out
dec
push
imul
mov
push
xchg
incl
dec
loopne
and
add
xchg
xchg
out
into
or
add
add
xchg
add
add
pop
add
add
cmp
jbe
inc
and
xor
pop
jbe
pusha
add
dec
dec
pop
call
pop
mov
xor
enter
in
push
hlt
add
fsubrp
push
bound
pop
sub
xlat
push
inc
ss
add
fs
je
pop
js
xor
mov
jp
loopne
inc
push
push
dec
lcall
jle
imul
jae
xor
shlb
jg
popa
daa
pusha
add
jb
insb
outsl
arpl
sti
xor
push
out
push
push
add
jmp
mov
lcall
add
movsb
dec
xlat
lea
iret
pop
movb
xchg
pusha
dec
shll
jl
insb
and
je
xor
js
xor
shll
mov
aam
xor
gs
add
shll
push
dec
shll
ror
shll
clc
push
mov
cmpsb
imul
jmp
mov
mov
mov
add
cmpsl
pop
pop
lcall
shll
hlt
push
pop
add
xchg
mov
mov
enter
mov
lcall
push
mov
shll
sub
inc
cmpsb
mov
movsb
add
or
cltd
mov
movsb
jns
xchg
sbb
pushf
pusha
call
jnp
pop
cmp
push
addb
stos
add
pop
sub
clc
cmpsb
push
add
xor
add
andl
gs
mov
insl
sbb
push
gs
fs
sub
rcll
outsb
push
jb
inc
adc
std
stc
dec
sub
dec
dec
inc
push
and
and
add
leave
adc
add
fwait
lea
lahf
xchg
add
cmp
adc
sbb
pusha
add
xchg
or
push
enter
pop
add
mov
mov
add
add
fbstp
jmp
add
sbb
inc
ret
pop
add
mov
mov
mov
ja
aas
and
ret
and
test
sub
decl
add
mov
and
pop
pop
sbb
pop
inc
fcmovne
push
xchg
inc
pop
add
cmc
or
push
ret
pop
pop
data16
mov
fwait
xor
pop
fucomip
mov
or
imul
add
cld
ja
add
push
packsswb
je
jne
jb
gs
sbb
pop
inc
or
push
sub
jg
jmp
add
push
inc
jb
push
and
ja
or
fstp
push
jae
and
addr16
xor
push
sbb
incl
adc
adc
add
lea
jmp
neg
push
pusha
ja
pusha
stc
add
call
pop
test
cld
mov
dec
push
push
dec
je
jo
das
push
test
fwait
jno
gs
inc
js
fistpll
push
jo
lret
pop
mov
outsb
xor
outsl
sbbb
add
xchg
jge
inc
mov
jne
add
pop
stc
pop
pop
pop
cs
add
fucomip
aaa
cmp
arpl
popa
insl
ss
dec
inc
push
fstl
inc
pop
dec
imul
cmpsb
outsl
ja
and
pop
inc
fbstp
in
jne
jb
je
xor
pop
dec
mov
ja
shl
inc
popa
jb
pop
gs
insl
sbb
out
inc
ja
gs
mov
test
jle
into
push
stc
dec
and
mov
or
push
mov
call
mov
mov
fcmovnbe
lea
shr
inc
add
inc
sbb
aas
rcrl
call
add
mov
mov
push
aaa
mov
cmpsb
xor
add
call
adc
xchg
push
sbb
insb
jnp
adc
push
into
and
mov
jnp
sub
decb
cwtl
cmp
adc
or
mov
rolb
aaa
nop
aaa
in
sbb
or
adc
outsl
std
push
enter
pop
sub
sti
mov
mov
ss
sti
pusha
jmp
js
js
repz
pop
aad
cmp
sbb
outsl
jne
pop
jne
push
ss
into
jbe
pop
arpl
jae
cs
imul
add
sbb
cmp
or
out
pop
add
mov
stos
pop
push
push
pop
in
and
outsb
inc
sbb
pop
xchg
ficompl
pop
dec
dec
dec
inc
jo
arpl
popa
add
popa
jne
or
mov
aas
aaa
cld
add
ror
in
and
and
es
pushl
ds
inc
popf
mov
pop
sbb
pushf
fstpl
push
add
lahf
jmp
mov
push
or
mov
daa
fs
call
push
mov
andl
add
lea
dec
jge
push
mov
push
mov
xor
lods
sti
testb
inc
add
loopne
push
push
stc
pop
fmull
push
call
dec
in
add
mov
std
jg
sub
sub
mov
movb
inc
or
movb
mov
outsl
ds
push
push
add
divb
jne
inc
push
dec
cld
ljmp
mov
jnp
in
or
mov
xor
push
lock
rcr
or
shrb
aaa
cwtl
add
ss
inc
aam
divb
or
fbstp
test
xchg
and
in
mov
adc
push
call
lcall
push
jae
divl
dec
xor
cs
pop
in
mov
addr16
mov
andb
mov
or
jg
mov
pop
inc
pop
cmp
pop
jl
push
aaa
adc
pop
mov
nop
mov
das
std
mov
add
cmpw
jne
dec
cmp
lret
add
pop
fwait
les
pop
push
inc
jle
inc
adcl
and
add
filds
push
and
adc
add
and
fnstenv
xchg
nop
pushl
and
push
jne
or
pop
pop
jo
push
int
push
push
mov
or
and
call
mov
cmp
jg
add
jge
push
in
loope
sub
sbb
push
movups
push
push
and
mov
xchg
pop
in
pop
sub
dec
push
push
pop
sbb
mov
or
and
in
clc
xor
dec
cmpl
mov
jnp
sbb
movl
push
adc
jge
movsl
add
mov
mov
enter
pop
mov
adc
pop
xchg
fsubp
sbb
push
adc
sbb
or
enter
or
pop
dec
pop
mov
push
jmp
sbb
jge
add
cmp
ja
jmp
das
ds
pop
adc
adc
inc
push
push
cmp
jbe
mov
or
add
push
inc
clc
push
mov
clc
push
sub
or
jb
add
mov
pop
pop
leave
pslld
add
xor
adc
and
imul
andl
mov
das
xchg
or
push
push
push
push
jp
cltd
dec
pop
outsb
iret
push
adc
mov
pop
jmp
push
idivl
mov
cwtl
adc
sbb
lods
pop
fistps
cmp
cmp
mov
add
jle
xor
ljmp
adc
push
mov
cmp
ja
fdivs
jle
jecxz
mov
je
test
cmp
notb
jns
incl
mov
push
in
jne
cmpl
daa
mov
mov
cmp
jne
xor
test
cld
cmp
clc
add
add
jmp
andl
add
cmp
sahf
inc
cmp
mov
out
pop
jmp
leave
cmp
mov
stos
imul
faddl
ja
jne
cmpw
ja
add
loope
and
testb
add
enter
jmp
test
or
notb
mov
ret
add
lock
adc
ficomps
push
je
incb
or
ds
and
pushf
jge
cs
insb
xor
mov
jmp
adc
insl
sti
addl
add
sbb
call
clc
insl
or
xchg
orb
out
sub
pop
inc
idiv
adc
jg
pop
pop
sbb
xor
inc
jmp
andb
mov
jmp
xor
loopne
push
xor
bswap
aam
enter
and
test
push
sub
add
daa
xor
mov
and
enter
in
add
mov
and
push
call
cmp
jmp
add
dec
jl
and
lock
adc
repnz
scas
cmp
adc
cmpb
test
jmp
jne
movb
inc
cmp
jb
mov
inc
mov
shrl
or
andl
xchg
mov
or
inc
sub
and
or
ja
std
and
add
push
xchg
adc
inc
cmp
jecxz
shrl
push
add
cmp
loopne
cmp
jae
jo
in
add
inc
pop
lret
shr
add
imul
insl
jecxz
push
mov
dec
or
stos
or
inc
mov
mov
jne
lock
test
shll
sti
mov
pusha
pop
xchg
rorb
rolb
or
rcll
pop
mov
mov
ret
add
jne
cmp
push
das
sub
push
pop
xchg
dec
fadds
cs
inc
fisubrl
int
bound
push
xchg
pop
jbe
or
cmp
outsl
addr16
not
and
push
jl
and
or
add
call
insl
jmp
pop
js
xlat
sbb
ljmp
jle
sti
mov
add
repnz
not
and
testl
lea
test
or
aaa
mov
mov
push
aam
or
fisubs
test
mov
fimull
add
lea
ljmp
shl
push
pop
inc
sub
mov
and
not
out
pop
sub
inc
fiadds
psllq
std
xor
into
mov
shr
or
add
dec
outsl
fcmovnbe
daa
pop
jg
push
fisttps
jl
fstl
cli
push
lods
loop
mov
push
push
test
fcomip
shlb
push
push
shlb
adcb
sub
xchg
rcr
loope
insl
fnstenv
add
loopne
fiaddl
pop
popa
xlat
or
mov
into
outsl
sub
adc
test
roll
mov
jae
jl
or
lods
sbbb
add
bnd
add
out
xor
add
xchg
xchg
ja
sbb
les
repz
fstpt
subb
addl
repz
add
rcr
das
pusha
sbb
mov
pop
scas
testl
jle
mov
pop
les
subb
jns
sbb
loop
cmovno
fisubl
sub
sub
fdivrs
or
fdivrs
mov
shl
pop
mov
stc
es
les
adc
out
or
xor
or
ret
cmp
or
xchg
jno
std
stos
lods
sub
es
add
and
pop
imul
enter
das
push
imul
repz
cmpsb
pop
mov
xor
nop
fisubl
xchg
or
lods
mov
or
popa
adc
add
or
mov
ljmp
and
aad
in
cmp
aam
pop
bound
sbb
clc
xchg
shlb
clc
jg
outsb
jns
loope
loopne
cmp
inc
rclb
push
push
add
push
and
clc
int
mov
push
pop
pop
es
adc
repnz
sbb
movsb
ss
movsl
and
lock
pop
lret
call
insl
mov
mov
hlt
pop
adc
call
mov
mov
xlat
lods
mov
popf
fistps
shlb
adc
add
out
rorb
in
mov
jns
pop
and
clc
cmp
cltd
jae
pop
jge
cli
fnstcw
icebp
enter
jg
or
add
pop
mov
stos
mov
mov
mov
out
loope
mov
fwait
and
sbb
loopne
ret
inc
xchg
enter
aaa
or
mov
push
fbld
popl
mov
cltd
sub
outsl
xlat
sbb
push
cmp
mov
or
call
mov
adc
inc
loop
shr
or
xlat
ret
fwait
insl
adc
jmp
xorb
push
jmp
into
fwait
aam
mov
daa
in
stos
xor
sub
aad
lcall
adc
sbb
xchg
dec
fisttps
jns
out
sub
xor
data16
mov
hlt
inc
cmp
jmp
add
outsb
mov
xor
mov
jae
lret
repz
cli
cs
in
aaa
ret
lds
popa
popf
insl
adc
inc
sti
xor
mov
repnz
ja
fstpt
cmp
std
mov
mov
xchg
in
inc
inc
ljmp
mov
into
es
mov
fimuls
push
outsb
sub
mov
xchg
mov
int3
pop
pusha
dec
mov
idivb
xchg
rcrb
or
mov
out
xchg
cli
xchg
or
mov
jle
sub
jae
mov
add
sbb
lock
daa
mov
jno
mov
fidivl
cmc
test
shrl
out
sub
xor
aaa
or
mov
in
cmp
or
push
pop
loope
lods
aas
sbb
cmp
rcl
fstps
into
sub
push
in
out
in
jle
ja
idiv
ss
sub
jns
in
clc
jl
pop
je
ret
xlat
insb
cmp
xor
in
jnp
push
lods
les
cli
xchg
subl
jp
fstpt
inc
and
stos
rcrb
sbb
push
or
test
call
jl
inc
int3
or
push
xchg
ljmp
inc
push
or
aaa
es
mov
stos
adc
mov
lock
mov
in
hlt
cmp
adc
xor
aas
xchg
in
cmp
cmp
pop
pop
gs
sbb
jns
sub
rcrl
int3
or
push
or
ja
in
and
jge,pt
out
call
int
mov
unpckhps
sbb
and
test
pop
test
dec
mov
jg
call
outsl
push
mov
fninit
push
jp
sbb
int
das
mov
sbb
out
jecxz
je
mov
cmp
mov
ljmp
fdivl
mov
adc
dec
mov
lds
jp
xlat
sbb
mov
mov
xor
out
loopne
outsl
xchg
sbb
xor
aam
rcl
sub
jb
cmp
pslld
ret
repz
mov
insb
pop
rclb
xor
jmp
xor
out
xlat
pop
add
pop
movsb
push
scas
push
insl
mov
lods
rcr
or
or
pop
or
inc
subl
push
mov
or
dec
cld
cmpb
hlt
fucomip
cmp
jl
js
sub
push
push
push
inc
aaa
adc
inc
or
dec
push
xor
js
xor
xlat
adc
inc
sbb
fisubrl
jle
xchg
insl
dec
mov
lahf
inc
pop
inc
addr16
iret
out
pop
loope
jb
adc
or
stc
mov
push
add
sbb
cmp
jne
in
mov
add
cmp
lea
je
push
inc
lret
stc
sub
dec
jmp
and
fucomi
push
dec
inc
push
fmuls
rorl
push
jl
cltd
mov
sbb
add
repz
add
mov
cmp
sbb
roll
dec
mov
loop
xlat
clc
call
insb
imul
inc
pop
ficoms
push
cld
call
test
sub
fwait
or
lret
or
dec
cmp
out
or
testb
mov
lea
int
mov
inc
lea
clc
pop
adc
xchg
mov
lcall
test
push
loopne
lret
mov
sbbl
add
fsubr
sub
insl
stos
push
out
xchg
push
dec
std
call
mov
in
mov
lahf
fstpl
sub
out
add
idiv
jl
in
gs
das
lock
jo
jo
cltd
out
gs
negl
lds
subb
mov
mov
addb
js
pop
xor
or
inc
dec
cmp
and
ret
push
or
dec
mov
insl
bound
les
cltd
fldenv
fimuls
stc
fadd
push
pop
cmp
sub
call
adcb
adc
lret
insl
sti
jbe
ds
push
push
movb
in
dec
out
mov
out
push
lock
icebp
inc
repnz
mov
pop
pusha
add
push
xor
pop
xor
push
sub
add
aad
push
aam
cs
add
sub
pop
or
mov
hlt
les
push
inc
jae
push
and
or
xor
or
inc
push
and
or
out
jbe
sbb
dec
clc
jge
push
push
push
inc
add
adc
roll
add
mov
cwtl
insb
out
xor
cwtl
int
je
imul
cld
das
sub
jge
push
into
or
adc
push
mov
xchg
pop
push
mov
int3
sub
pushf
lods
jnp
sbb
test
sbbb
or
fmull
pop
mov
jnp
cmp
pop
lock
sbb
fcoms
push
push
push
jl
push
ret
sti
popa
and
xor
mov
shll
sub
cmpsb
jae
add
mov
outsb
movsb
lret
adc
sub
xor
sbb
jbe
fstp
mov
shlb
or
cmp
add
in
sbb
jbe
push
push
mov
call
dec
sbb
push
mov
hlt
lods
inc
inc
inc
inc
add
mov
jb
pop
jmp
cmp
jne
icebp
add
mov
repnz
adc
roll
pop
into
insb
inc
or
push
andw
mov
mov
jge
insl
add
cld
pop
jb
imul
bound
sbb
movsl
adc
cmp
mov
mul
pop
out
subb
cmp
je
dec
dec
cli
lods
jae
pop
cmp
pop
push
arpl
pop
add
cmp
xchg
push
cmpsb
ret
push
imul
dec
push
mov
push
aad
shrl
push
fcmovu
fwait
ljmp
xchg
movl
addl
mov
push
or
add
sahf
sbb
adc
push
andb
ret
sbb
sub
sahf
xchg
push
or
or
lea
cmp
pusha
js
movsl
insb
es
and
das
insb
fistps
adc
adc
clc
inc
push
outsb
lds
cmp
test
or
xor
push
jo
adc
push
dec
rorb
call
cmpb
lods
inc
push
inc
call
sbb
pop
xchg
test
lret
or
push
je
js
insl
js
cmp
dec
xorb
or
inc
add
xchg
xchg
pop
je
cmp
jne
push
lock
xchg
sbb
paddsb
adc
inc
push
pop
jle
add
pop
jbe
pop
mov
enter
iret
ret
sbb
or
adc
push
mov
or
enter
insb
cwtl
loopne
lret
jae
in
fsubrl
cmp
mov
mov
push
fsubl
ret
call
xor
addl
add
fs
test
xchg
in
cmp
shlb
test
inc
ret
test
mov
push
inc
inc
mov
jg
sbb
push
nop
push
inc
aaa
fcoml
cmp
add
sub
lock
push
and
push
int3
push
scas
shlb
dec
mov
add
mov
mov
cmp
mov
push
int
clc
call
dec
mov
test
adc
jge
dec
add
inc
scas
cmpsb
in
cmpl
fucomi
test
add
lahf
lods
mov
xor
inc
jl
sahf
lods
sar
cmp
and
fsubrp
mov
or
pushf
inc
mov
cwtl
decl
int3
cmp
ret
cmpl
cmpl
scas
or
mov
je
jo
neg
pop
sub
xchg
arpl
sbb
jae
and
out
jae
std
adc
pop
adc
jge
sbb
pop
call
add
loopne
or
mov
cmpb
test
inc
je
jmp
cwtl
shrb
push
mov
jmp
dec
mov
les
cmp
ss
mov
test
test
push
into
insl
xchg
std
inc
pop
push
pusha
stos
or
out
inc
push
jo
push
loopne
sbb
jbe
sub
jg
leave
lods
lods
push
xchg
lret
in
insl
mov
mov
mov
mov
in
mov
push
mov
mov
mov
xchg
lret
mov
mov
ss
jmp
fs
push
rcl
js
jb
fdivrl
shlb
insb
aam
aad
data16
and
fcmovu
gs
fsub
dec
test
loop
jecxz
lret
insl
xlat
insb
pop
in
push
out
dec
out
call
jmp
insl
jae
imul
fsubrs
shll
xor
outsb
mov
les
lds
mov
lcall
lret
cmp
scas
imul
xchg
xchg
mov
lcall
pushf
adc
jnp
mov
mov
mov
xchg
inc
mov
cmpsb
xor
mov
fwait
cmpsl
test
push
test
or
xor
clc
ds
hlt
cli
jns
inc
or
xchg
lea
dec
xor
shl
imul
pop
sub
inc
lahf
cltd
pushf
adc
xor
aaa
xor
lret
pop
int
push
in
cmp
jmp
lret
and
loopne
idivb
in
add
dec
lcall
jmp
dec
rcrb
fstps
xchg
fcmovnbe
push
enter
cmc
adc
sbbb
inc
shrl
out
fucomip
jge
shrb
clc
sub
enter
push
inc
jge
sti
or
movsl
adc
adc
pop
cmpsb
jae
fcom
loopne
into
imul
pop
mov
or
ret
and
test
aaa
jmp
push
push
inc
sub
push
mov
aaa
sbb
in
cltd
mov
sbb
jp
jnp
mov
pop
shl
inc
aas
mov
nop
repnz
int3
add
hlt
cld
std
push
hlt
cld
sbb
pop
int
cs
push
mov
cwtl
fwait
adc
std
inc
sub
stc
push
sbb
stos
mov
sbb
test
pop
movsl
es
ds
mov
fadds
pop
mov
shrb
into
insl
sub
cld
fistl
mov
loop
push
inc
fwait
pop
sub
and
and
xchg
in
mov
pop
loop
add
cmp
push
ret
sub
stos
mov
inc
loope
pop
push
test
add
insb
icebp
mov
rcll
or
mov
adc
or
dec
call
pop
adc
lock
std
push
sub
mov
popf
cmpsb
outsl
insl
xchg
pusha
xor
popa
mov
cmpsb
or
sbb
loop
test
cmp
sub
mov
std
pusha
jne
cmp
jl
out
lods
loopne
ret
inc
add
pop
addr16
mov
push
rcll
push
mov
repz
stc
lahf
lock
jg
jne
push
dec
jmp
add
pusha
and
xor
xchg
sub
cmp
sbb
insb
loopne
cmp
mov
jb
and
cmp
add
jbe
inc
mov
mov
bound
call
push
cmp
arpl
jmp
call
cmpb
cmpl
jnp
lods
incl
and
lds
lock
lret
adc
xor
sub
cld
adc
jmp
and
loope
testb
push
add
scas
fs
int3
inc
pop
add
cld
or
inc
call
loope
jmp
mov
call
push
fsubrl
jge
leave
xchg
fldenv
mov
lods
dec
pop
ret
mov
xchg
jbe
xchg
mov
vmread
lcall
iret
imul
dec
push
imul
das
fsubs
ja
fildl
orl
fstp
jae
fbstp
shll
jae
shrl
pop
sub
sti
cld
std
imul
lcall
mov
add
mov
mov
xor
mov
mov
imul
pop
lcall
pop
pop
mov
fsub
in
out
mov
int
call
jmp
roll
jb
icebp
adc
inc
repnz
cmc
mov
cli
mov
add
add
pop
add
enter
test
mov
test
fs
push
hlt
sbb
add
xor
fs
xor
pop
mov
mov
or
gs
add
mov
push
out
cmp
jb
outsb
je
mov
outsb
fs
lret
in
ja
jne
bnd
imul
push
int
dec
push
xchg
push
add
sub
insb
bsf
or
nop
sbb
inc
loopne
jb
rcl
outsb
push
fsubrl
sbb
add
stc
and
add
pop
and
xorb
mov
or
fistl
push
dec
rorb
xor
pushf
es
cmp
inc
mov
cmp
and
sbb
push
add
mov
cmp
pop
in
mov
pushl
movsb
xor
xchg
clc
lock
jge
xorl
and
jl
cmp
fwait
xlat
mov
in
mov
jns
repnz
inc
adc
hlt
in
push
andb
neg
jb
sub
push
pop
push
and
not
adc
dec
in
push
or
popf
test
and
aad
xor
ljmp
and
insl
jmp
es
cmpsl
mov
lcall
cmp
and
mov
mov
insb
lcall
mov
mov
jo
rol
jb
ret
jbe
shll
addr16
cmpsb
fsts
leave
lret
int3
int
xor
mov
das
into
iret
rcl
rcl
je
xlat
rcll
aam
aad
xlat
aaa
inc
xlat
xor
fcomp
fcmovu
ja
mov
fnstenv
ficomps
fnstsw
jae
int
imul
lcall
arpl
jmp
dec
cmpsb
jmp
in
sbb
out
fs
es
jae
repnz
shll
inc
inc
cmp
ds
js
xchg
mov
loopne
push
or
pop
sbb
pop
xor
and
jae
fsubrl
add
cld
or
mov
and
insb
clc
adc
nop
in
mov
inc
call
les
pop
or
mov
jno
pop
xor
sbb
push
loop
xor
lret
scas
imul
inc
sbb
adc
push
cmpsl
sub
mov
jo
add
cmp
push
cli
dec
hlt
or
mov
pushf
movb
fistpll
divl
sub
cwtl
push
daa
test
aam
shr
jg
cmp
sahf
cmp
mov
call
push
lods
andb
or
outsb
outsl
add
and
add
or
and
mov
push
xor
sbb
cmp
add
sub
sub
cmp
jecxz
and
jmp
dec
xor
notb
loop
les
lods
mov
stos
mov
cmp
mov
outsb
jle
lods
test
add
in
jmp
cld
call
inc
sbb
push
jo
xor
ficompl
scas
lea
les
jg
cli
mov
nop
sbb
rep
xadd
pushl
fisubrl
lea
cmp
lods
call
pusha
jmp
push
ds
in
xor
push
sbb
add
bound
call
sbb
iret
or
fs
mov
mov
arpl
mov
mov
push
and
dec
push
cmc
add
pusha
loope
js
imul
iret
jns
dec
ror
mov
mov
data16
aad
push
mov
adc
push
enter
jmp
jmp
je
xor
std
mov
xor
push
pushf
fistps
mov
ss
pop
mov
fists
fldl
or
pop
dec
pop
lret
adc
mov
inc
in
sti
in
push
clc
stc
ror
pop
push
xchg
jbe
out
mov
iret
pushf
test
pusha
inc
stos
test
xchg
adc
std
out
jle
lods
in
push
cwtl
cmc
stc
cwtl
stc
int3
cmp
cmc
pop
xorl
add
mov
sbb
inc
mov
shl
mov
jae
ret
aad
data16
sbb
outsl
fdivrl
mull
and
fists
ss
sub
aam
sbb
cmp
fiadds
jmp
push
or
adc
out
js
movsb
add
push
pusha
dec
rorl
fwait
inc
ror
ss
fcomi
ror
pop
pop
lock
pop
lret
inc
sbb
divb
sbb
and
add
inc
and
addr16
in
mov
clc
test
pushf
mov
fdivrl
push
nop
call
push
or
lods
jg
out
fbld
repnz
mov
or
add
in
lds
push
lret
dec
inc
jl
pop
or
pop
call
stc
sbb
pushf
movzbl
clc
pusha
stc
jg
cli
or
test
or
call
outsl
out
cli
jmp
icebp
movsb
dec
or
push
push
or
add
call
jnp
mov
insl
add
sub
dec
js
lock
mov
cld
dec
mov
sbb
push
sbb
or
sahf
adc
pusha
cld
cld
nop
sti
ds
adc
lds
sbb
cmp
or
xchg
add
inc
xlat
xor
fnstsw
ds
xor
insl
lahf
xchg
pop
cwtl
mov
pop
push
xchg
iret
xchg
test
add
call
out
adc
inc
outsl
xchg
jmp
or
call
out
gs
jne
cmc
sti
sub
sti
xchg
sub
mov
call
mov
jae
int3
call
inc
popa
adc
negl
cmp
ja
das
jge
sub
jp
xchg
push
outsb
cmpsl
pop
mov
add
in
jge
nop
movsb
mov
or
or
push
inc
cwtl
popf
add
and
icebp
andb
xchg
add
add
clc
inc
fimull
jl
pushw
ds
or
sbb
cld
ljmp
je
sbb
testl
mov
inc
adc
rorl
jb
push
sbb
addr16
ljmp
mov
stc
or
mov
sub
push
fldt
imul
mov
sub
mov
push
or
pop
mov
mov
push
pop
pop
mov
jge
rolb
jnp
push
fs
dec
fdivrs
fidivs
dec
push
sbb
call
push
je
add
and
mov
xchg
mov
push
or
je
les
fiaddl
xor
icebp
push
mov
je
sub
loope
cs
adc
xchg
adc
pop
sbb
xor
inc
cs
cmp
add
jo
loop
clc
pop
mov
pop
mov
add
rolb
xchg
gs
fsub
mov
mov
dec
pop
dec
push
mov
int3
inc
fcoms
or
sbb
cmp
mov
pop
fcoms
dec
aad
scas
inc
shr
fldcw
shrb
je
pop
int
push
ficoml
or
jp
mov
dec
data16
into
movsl
call
decb
sahf
mov
adc
inc
lock
test
mov
mov
cli
cltd
mov
mov
jle
sbb
cld
sbb
cmp
and
mov
enter
adc
inc
dec
xchg
mov
and
inc
and
xor
push
movsl
cmp
andb
ffree
push
ret
leave
stos
push
into
adc
or
xchg
push
fwait
add
shlb
hlt
push
xor
push
out
mov
lret
mov
dec
dec
dec
inc
lret
lret
push
cs
insb
aam
xchg
and
test
xor
jb
shll
jb
dec
shll
insb
pop
xchg
pusha
add
fs
xchg
gs
dec
jo
gs
xchg
in
gs
gs
xchg
inc
xchg
xchg
lcall
cltd
lcall
pushf
inc
popf
sahf
lahf
mov
lcall
movsb
js
xor
push
int
cmpsb
inc
dec
je
add
inc
outsb
fs
push
notb
jmp
mov
pop
jno
gs
lret
mov
gs
out
dec
outsb
je
inc
daa
daa
jb
lods
je
mov
lret
inc
outsl
outsb
outsb
gs
lock
je
call
mov
popf
cs
xchg
in
xor
xor
hlt
mov
fsubl
add
inc
push
jg
pop
fimull
cmp
cmp
into
jg
adc
andb
ret
inc
push
js
cmpb
pop
pusha
sub
pop
repz
add
int
outsl
mov
jmp
push
push
mov
push
pop
push
pop
bound
jp
mov
addr16
add
push
mov
dec
lock
je
insb
movsl
sti
leave
push
mov
push
pop
dec
mov
cld
repz
fcmovbe
loopne
mov
add
push
add
or
daa
rclb
add
jmp
inc
cmp
pop
stos
push
pop
mov
in
push
sbbl
rclb
sbb
sbb
or
add
inc
push
mov
sub
movsl
push
and
cmp
cmp
adc
push
jne
mov
push
fists
or
test
pop
mov
and
lock
call
adc
push
jno
fmuls
mov
and
fisttpl
fstpl
cli
mov
push
mov
or
sub
add
loope
sub
mov
mov
dec
sahf
push
xor
fldt
dec
aaa
sti
insl
mov
cs
mov
das
pushf
xor
int3
dec
sbb
jmp
jle
mov
add
fcmovnu
and
subb
jle
mov
add
dec
rdmsr
and
sbb
call
cld
loopne
push
lds
cmp
in
xor
gs
gs
arpl
xor
xchg
repnz
cmpsb
imul
imul
jb
stos
lea
or
or
xchg
sbb
inc
ss
js
pop
insl
call
push
cld
push
mov
xchg
pop
jb
adc
or
dec
pop
iret
pcmpeqd
imul
es
int3
testl
aam
push
mov
pop
inc
mov
fdivs
dec
adc
aaa
add
cltd
mov
xchg
xchg
and
jl
lret
pop
or
sub
dec
push
sub
push
je
xchg
mov
adc
nop
add
je
sbb
xchg
xchg
and
je
or
jle
adc
xchg
push
pop
jg
arpl
sahf
scas
inc
fdivr
call
sub
push
out
and
sbb
sbb
pop
adc
stc
cmp
pop
out
sbb
in
sub
test
in
add
pushf
mov
call
sub
push
cld
popa
je
outsl
fwait
sub
mov
cmp
jbe
mov
insb
cmc
imulb
imull
clc
inc
lcall
or
adcb
mov
inc
ss
or
pop
jne
scas
push
sbb
push
and
imul
xor
jbe
add
and
pop
jae
adc
adc
or
pop
fs
insl
cmpsb
js
add
js,pn
aad
push
or
cld
pop
jbe
in
clc
push
pop
push
pop
push
das
push
mov
sar
insb
orb
dec
add
ret
pop
jge
mov
add
push
test
bsr
mov
and
push
fcomi
mov
int
and
pop
stos
push
mov
mov
and
fcoml
lock
add
iret
sub
mov
push
inc
inc
xlat
inc
adc
movsl
pop
jne
dec
jae
in
pushf
push
pop
or
jmp
mov
jb
in
int3
cli
push
pop
add
jl
sbb
aas
popa
arpl
shlb
bound
dec
rorl
imul
jmp
mov
mov
fs
xchg
arpl
outsb
gs
xchg
in
js
gs
gs
xchg
je
outsl
outsb
es
inc
jne
pop
rcrb
aas
popa
lret
leave
mov
arpl
cmp
fs
loopne
loope
cmpsb
pop
ss
jecxz
in
and
imul
ds
mov
pop
sub
pop
cmpsb
imul
lcall
fidivs
je
add
arpl
and
jbe
sbb
aam
adc
or
xor
std
lods
xchg
push
adc
mov
xor
das
push
pop
and
cmp
adc
push
push
sbb
fwait
add
add
fstpl
fdivrl
fsubr
pop
push
or
lock
jl
decb
add
add
je
call
enter
addr16
and
dec
jo
das
clc
aas
lods
imul
add
pop
ja
jne
cld
js
popa
inc
ret
pop
or
mov
in
and
lcall
mov
mov
xchg
fsubl
or
xchg
fdivl
mov
pop
fcoml
sub
pusha
or
je
mull
sub
sbb
pcmpgtd
incl
lods
sbb
jmp
sub
or
cltd
jle
pop
mov
mov
mov
fsubl
inc
xchg
shlb
leave
adcl
test
jle
lcall
jmp
insb
xchg
call
sbb
push
movl
mov
cmp
fldcw
jl
lock
daa
mov
xchg
ds
sbb
add
loopne
jecxz
ss
sub
aas
xor
push
leave
dec
cmc
or
lret
dec
je
imul
insl
bound
jne
rol
xchg
insl
aad
jbe
dec
ss
push
jo
gs
lds
into
mov
addb
jg
fwait
in
std
cld
in
mov
nop
std
insb
out
jns
lcall
addr16
leave
xchg
arpl
lods
hlt
cmp
mov
mov
dec
mov
loope
push
sbb
mov
insl
and
push
inc
jmp
sbb
mov
popa
movsbl
sub
outsl
add
ljmp
sub
movsb
dec
adc
lret
mov
nop
ja
xor
in
mov
cs
fs
shll
arpl
jb
dec
shll
pop
ror
outsl
insl
jne
aas
dec
out
inc
mov
pop
cmp
or
jp
je
push
push
mov
mov
jbe
lcall
and
arpl
mov
xchg
lds
pusha
cmpb
xor
mov
pop
cmp
sub
jle
sbb
scas
fisubrs
dec
divl
or
adc
aad
add
aaa
sahf
shlb
out
lods
nop
dec
and
push
call
loopne
pop
xchg
pop
pop
jne
in
ret
push
push
push
int3
sbb
and
pop
sub
jl
push
jo
cmp
cltd
add
xchg
xchg
inc
call
push
sbb
enter
shlb
cmp
outsb
mov
or
dec
loopne
adc
mov
or
jb
test
add
or
xor
les
sbb
orl
hlt
repz
test
sub
and
std
and
sbb
xchg
add
nop
add
add
pop
adc
mov
mov
pop
hlt
push
fucom
inc
sub
movzbl
or
enter
cmc
jnp
aas
xor
clc
cmp
or
add
lock
adc
mov
and
cmp
mov
mov
push
lcall
imul
jo
imul
sub
gs
sub
inc
pcmpgtb
dec
shll
gs
jae
outsb
pop
push
shlb
outsl
pop
pop
add
aad
dec
pop
icebp
jne
into
add
xor
inc
push
sbb
xchg
mov
dec
mov
jne
xlat
mov
insl
jnp
dec
enter
push
dec
inc
xchg
xchg
into
xchg
cmp
sbb
das
adc
xchg
dec
mov
mov
xchg
outsb
inc
cmp
add
dec
cmp
test
enter
mov
aas
inc
in
or
jp
add
or
stos
push
das
rcl
fcmovnb
add
mov
push
or
mov
sbb
mov
add
cwtl
jnp
push
cmp
cmp
cmp
sub
push
insb
jbe
or
sbb
xchg
out
cld
mov
xchg
mov
inc
mov
lea
xlat
lea
or
xchg
mov
outsb
sbb
push
xor
incb
in
pop
xor
jp
push
mov
cs
into
iret
jo
cmp
das
shrb
lret
sarl
js
jbe
xlat
out
mov
fnstenv
fidivl
sbb
outsl
xor
cmp
aad
lcall
aaa
cmp
push
stc
das
imul
imul
outsl
lcall
adc
sub
jmp
adc
pop
nop
add
aaa
sbb
add
pop
imul
dec
repnz
mov
dec
pop
jne
mov
mov
cmpl
jno
sahf
adc
push
pop
mov
fstl
lock
mov
or
pusha
push
cmpl
xor
je
add
cmp
sbbl
mov
fcomp
dec
push
and
inc
adc
ja
lea
lea
data16
jo
insl
out
mov
cwtl
adc
lea
mov
add
mov
sbb
mov
shlb
das
daa
outsl
or
in
pop
int3
mov
xchg
ds
shr
adc
xchg
jb
push
push
mov
mov
fisubrs
mov
sbb
idivl
push
mov
mov
mov
push
cmp
push
les
sub
xchg
mov
jg
enter
std
dec
mov
push
jp
cmp
push
push
enter
mov
int3
or
nop
sbb
call
arpl
nop
es
adc
out
or
sub
outsl
mov
out
shlb
int3
xor
lea
pop
inc
clc
cmp
lahf
add
sub
sahf
push
cwtl
fmuls
pop
push
mov
push
adc
dec
loope,pt
jmp
imul
adc
push
movsb
push
cmpsl
ret
adc
bound
add
sub
ja
std
call
or
cmp
push
and
dec
xor
inc
push
repnz
sbb
push
adc
sti
andl
pop
icebp
add
push
mov
ds
cmp
sub
add
or
fadds
push
data16
push
sbb
add
push
ficomps
ror
ja
lcall
repnz
sbb
or
cmp
fld
in
push
test
call
adc
mov
and
pop
ljmp
popa
mov
push
pop
adc
pop
popa
mov
sub
adc
mov
jg
clc
xchg
repz
pop
mov
push
out
jecxz
add
push
popf
std
mov
and
xor
int
push
add
adc
outsb
mov
mov
push
sarb
or
inc
jl
add
jg
mov
cmp
or
adc
jg
inc
inc
aad
fdivp
sbb
call
xor
outsb
jmp
cmpl
jne
add
mov
inc
xchg
mov
push
mov
cwtl
xor
and
in
sbb
sbb
out
ja
shlb
jne
dec
cmpsb
lods
and
loopne
insl
ret
lock
adc
stc
pop
enter
adc
int
inc
sahf
nop
cmp
int3
fsubrp
jns
cmpsb
push
cwtl
cmp
sub
fcompl
adc
add
cmp
sbb
and
or
inc
inc
xchg
add
stos
xor
push
add
push
cmp
jae
xchg
lds
sbb
sub
mov
or
bound
sbb
mov
mov
imul
cltd
inc
nop
mov
add
in
and
nop
test
inc
mov
jno
cmp
mov
sbb
jne
adc
or
mov
pop
in
or
fcompl
out
fldt
pop
fmuls
in
jl
mov
mov
xchg
inc
cmp
in
pusha
sub
int3
and
movsl
sbb
dec
adc
cmp
and
mov
pop
and
or
and
inc
jo
cld
dec
mov
sbb
sti
repnz
jl
repnz
mov
mov
pop
adc
cmp
jge
mov
add
add
popf
mov
lcall
fnstcw
add
stos
dec
cld
inc
cmp
jl
je
cmp
xchg
jb
mov
je
mov
add
cmpl
mov
hlt
test
iret
push
fmull
add
push
fistl
add
add
pop
sub
sbb
sbb
pop
jne
in
mov
test
mov
mov
cmp
dec
or
rcrl
scas
xchg
mov
add
add
jmp
cld
mov
mov
jno
mov
mov
lods
fdivl
jle
mov
add
ds
mov
add
mov
sti
lods
andl
or
jmp
jle
movzwl
mov
jne
pop
jg
out
daa
add
ljmp
cli
sub
fistps
add
adc
add
jmp
cmp
jne
dec
out
ss
or
jne
or
sub
add
ss
adc
addl
lea
mov
cld
inc
inc
cmp
jl
add
jmp
je
std
push
mov
ret
out
add
push
jno
psraw
jle
in
pushf
dec
je
adc
push
xchg
sbb
loop
inc
adc
iret
mov
cld
inc
inc
adc
lea
pop
mov
call
pop
clc
ja
add
push
scas
clc
addb
cmp
hlt
push
andb
mov
or
pop
lret
insb
sub
sbb
xor
andl
jle
sbb
in
pop
enter
call
data16
lahf
inc
aaa
pushl
lcall
aad
stos
push
or
mov
stos
mov
fistpl
push
imul
lcall
jnp
fistps
sbb
push
push
andl
jg
jge
push
adc
mov
fidivrl
xchg
cmp
testb
je
scas
jbe
es
inc
sub
or
and
pop
rclb
test
xchg
mov
pop
cmp
xchg
cmp
jp
imul
push
xchg
mov
movsl
orb
loop
pop
lds
cmp
jge
add
add
push
xlat
mov
cmp
jne
nop
sbb
pop
add
or
adc
adc
in
cmpsb
jmp
xchg
gs
cmpsb
imul
imul
jmp
dec
shll
insb
pushf
insb
inc
xor
xor
js
lds
push
loopne
sub
daa
pop
lock
ljmp
push
or
xlat
cmp
pop
fistl
jae
mov
add
incl
inc
aad
cmpl
je
addl
pop
xchg
adc
test
inc
cmp
mov
add
or
jmp
adc
icebp
inc
and
test
popa
and
cmp
incl
jae
push
inc
popa
leave
orb
aas
inc
pop
dec
hlt
push
ja
or
inc
in
test
loopne
arpl
les
adc
jmp
mov
aam
push
sbb
jl
mov
push
cmp
hlt
push
and
add
pop
sub
xchg
sbb
fsub
push
push
call
insb
arpl
jge
aam
jl
xor
insb
or
jp
and
fisttpll
fwait
stos
or
mov
mov
mov
push
jae
push
call
and
scas
mov
icebp
xchg
sbb
fsubr
xchg
mov
pop
or
fcom
jo
mov
cmp
int3
in
mov
adc
hlt
gs
frstor
pop
adc
jmp
mov
adc
out
or
lea
mov
into
mov
aaa
mov
ret
pop
test
aam
push
lret
lods
iret
mov
paddusb
sbb
mov
sbb
push
stc
push
adc
imul
insl
inc
jg
or
inc
cmp
jl
ficomps
ljmp
or
sub
fcompl
jmp
mov
ljmp
cmp
jns
gs
out
push
orl
mov
mov
fisubl
imul
dec
addr16
in
in
out
pop
push
or
push
out
in
fmull
loopne
jae
std
imul
loop
jcxz
jne
lcall
xchg
in
mov
push
xchg
gs
cs
sub
mov
xor
xor
fwait
sub
popa
jns
cs
sbb
pop
enter
cld
orl
pop
adc
push
fadds
mov
roll
xlat
mov
push
xlat
and
push
xlat
orb
pop
das
adc
js
cmp
es
mov
push
gs
mov
or
xchg
sub
xor
jo
lea
push
mov
jb
push
inc
sti
mov
stos
push
add
push
xor
test
or
movsl
faddl
adc
adc
aad
out
gs
mov
js
insb
outsl
jb
rol
mov
jb
cs
test
xor
jae
add
or
fmuls
xchg
fmull
enterw
pusha
rcrl
aam
fs
sub
roll
xor
mov
std
dec
mov
jbe
mov
sti
ljmp
or
add
pop
pop
xchg
mov
nop
push
lock
idiv
hlt
inc
mov
xchg
mov
int3
mov
ja
aas
rcrb
mov
sbb
movsb
mov
sbb
pop
jae
inc
push
inc
shl
sbbl
nop
aas
dec
fildll
jbe,pt
in
mov
or
inc
push
pop
xchg
dec
mov
xor
cmp
mov
fcom
cmp
cmp
mov
add
inc
inc
xor
dec
xor
xor
das
lea
call
mov
fsubr
fdivs
loopne
shrb
mov
or
add
mov
xchg
pop
test
mov
in
faddl
pop
pushf
jb
or
xchg
lahf
xchg
insb
xchg
xchg
loopne
clc
mov
ss
cmpsl
push
xchg
add
lea
movsb
pop
add
xor
jne
mov
inc
std
cmp
pop
loope
push
jb
arpl
jae
fs
pop
adc
gs
std
mov
insb
push
xor
popa
jo
push
push
imul
idivb
adc
aam
mov
jo
adc
pop
inc
insb
push
cwtl
add
inc
dec
gs
xchg
jo
dec
jae
arpl
add
imul
add
and
sbb
fs
adc
adc
mov
add
fs
imul
jg
pop
sti
ja
xlat
adc
inc
push
mov
outsl
sbb
jns
add
or
test
roll
jb
cmp
aaa
cmp
sub
rorb
aam
sub
lods
xchg
add
std
ja
adc
add
cmp
push
imul
ret
xor
cmp
pop
mov
pop
dec
push
push
je
jb
insb
cmp
fcmovnu
das
push
add
gs
mov
xor
outsb
in
push
imul
add
xor
push
outsl
imul
sbb
out
notb
fisubs
add
jns
mov
ret
adc
jb
fldt
cmp
imul
fwait
push
and
outsl
jo
xchg
fucomip
sahf
shlb
imul
pushf
aaa
imul
jnp
ret
je
outsb
addr16
add
inc
imul
pop
add
sbb
adc
jnp
adc
test
fisubl
and
mov
adc
sub
ret
sbb
xor
inc
inc
mov
in
or
ret
add
arpl
mov
fistl
push
loopne
fmull
inc
push
dec
inc
mov
ret
mov
jo
je
aaa
dec
xchg
mov
push
xchg
pop
ret
add
insb
popa
cwtl
js
lahf
test
outsl
push
jb
fs
xchg
xor
add
cs
ret
std
inc
pop
pop
and
lahf
ss
add
push
shll
fcoml
inc
fiadds
fcmove
mov
mov
dec
adc
jno
subl
popa
in
ss
push
push
mov
iret
dec
outsl
push
or
push
inc
popa
adc
inc
lock
add
or
in
cmpsl
out
mov
sub
jle
insl
mov
sub
pop
and
xchg
mov
and
lea
dec
mov
add
jne
pop
imul
sub
in
enter
push
mov
mov
xor
fstpt
push
jnp
add
js
lea
out
imul
jb
nop
jg
jnp
and
cmovne
insl
push
add
push
inc
push
xchg
mov
mov
pop
cltd
add
insl
pop
call
arpl
dec
lret
jno
cmp
sub
mov
lock
fimuls
mov
pop
cmp
add
pop
adc
movsb
gs
adc
data16
xchg
popa
push
add
cmp
mov
int3
fisttpl
mov
insb
jns
ljmp
inc
mov
xor
mov
mov
lds
mov
mov
push
aas
jecxz
inc
pop
push
add
arpl
mov
psraw
arpl
nopl
outsb
fstpt
xchg
ja
xor
mov
mov
or
sbb
mov
out
mov
or
loope
pop
jbe
fwait
loope
scas
add
mov
mov
cmp
jmp
push
fistl
add
jl
or
sub
mov
es
imul
xor
xchg
sbb
pop
cli
sbb
sbb
mov
out
push
lock
sub
adc
fldenv
pop
inc
fcoml
jbe
aaa
xor
add
rcrl
inc
dec
push
dec
das
sub
add
das
dec
pop
call
stos
jmp
call
stos
and
clc
mov
pushf
cld
jmp
incl
bswap
sub
mov
jmp
ljmp
push
add
push
jmp
mov
jp
jnp
mov
mov
mov
jne
mov
sbb
ja
mov
test
push
cmp
cmp
int3
mov
add
sub
fldt
loope
jb
add
dec
add
and
sbb
add
add
decl
dec
mov
fidivrs
ror
dec
in
lahf
pop
xor
decl
cmp
lcall
mov
cltd
jno
mov
int3
jo
ds
mov
decl
push
lods
mov
nop
les
jbe
in
and
cwtl
in
out
push
inc
adc
in
pop
movsb
arpl
jmp
xchg
ficoml
les
adc
mov
les
loopne
xchg
jmp
out
cmp
xchg
mov
outsl
push
test
std
push
and
sbb
pop
push
je
ljmp
inc
mov
insb
repnz
rorb
arpl
icebp
cmp
js
ss
fwait
sar
mov
lds
std
scas
je
arpl
mov
mov
orb
pusha
mov
add
call
int
sbb
out
or
sbb
adc
add
or
sbb
or
aad
lret
pop
inc
or
mov
ja
or
add
or
jb
push
jge
jg
jne
jmp
inc
mov
add
out
fildl
mov
cmp
pushf
and
sbb
inc
les
add
rorb
sbb
xor
or
stc
testb
and
std
inc
aaa
call
inc
pop
xadd
push
rcll
rcl
or
add
scas
sub
data16
adc
pop
push
push
aaa
push
sbb
sbb
pop
icebp
xor
out
daa
mov
and
sub
xchg
sub
pusha
orb
jl
ficoms
xorb
adc
clc
gs
mov
mov
pushf
ss
jmp
movsl
rclb
stos
lret
push
add
push
add
stos
out
popa
sbb
not
cmp
xchg
adc
repnz
in
add
inc
in
mov
mov
leave
bswap
mov
in
fisttps
out
lds
adc
and
fucomp
cmc
lea
jecxz
xor
dec
sub
mov
in
pusha
clc
lea
shlb
movsl
loope
loopne
jne
cld
jg
mov
mov
sahf
lds
fsubs
leave
pushf
mov
dec
jnp
or
lret
pushf
or
ja
insl
pop
bswap
dec
bts
dec
sbb
add
shrd
cmpsb
ja
add
add
or
outsl
in
test
adc
jmp
mov
or
aaa
adc
mov
rcl
pop
jo
add
in
sub
decb
stc
shrb
jmp
cmovnp
adc
jge
flds
adc
imul
ss
push
jae
push
adc
or
sub
ret
inc
movsl
repnz
sti
cmp
pop
jmp
insl
js
sbb
mov
sub
sbb
shl
pop
mov
neg
hlt
pushf
clc
clc
inc
shl
pushf
mov
or
pushf
jecxz
ret
or
imul
lret
shl
stc
sub
sub
shr
mov
cld
out
or
shr
cmp
mov
pusha
mov
ljmp
push
push
push
insb
sbb
imull
add
xor
ja
ds
push
pop
lock
cmp
stc
or
in
push
inc
lcall
shl
or
mov
insl
sub
jmp
test
pushf
and
pop
mov
ja
pusha
push
push
je
jmp
or
sbb
sbb
into
fists
ds
mov
data16
and
and
int
clc
into
sub
or
pop
ja
sub
sbb
daa
mov
cltd
jo
ss
xlat
pusha
cmc
clc
and
test
call
xor
jns
add
jmp
cwtl
cmp
pop
popa
popl
pop
dec
mov
jg
ret
test
lds
gs
pusha
push
mov
adc
xlat
xchg
dec
push
stos
lret
insb
shlb
ficoms
popf
loope
jp
test
cmp
mov
jbe
push
push
jmp
icebp
mov
sar
testl
fildll
sub
sub
enter
inc
ret
cli
out
mov
jae
or
mov
mov
mov
add
push
fwait
sti
jb
adc
neg
scas
add
jl
filds
push
mov
lea
sbb
dec
test
cli
dec
mov
pushf
mov
std
mov
loope
xchg
xchg
std
iret
ja
push
std
push
mov
xor
mov
decl
push
ja
fstpt
std
call
rcrb
pop
sub
ud0
cmp
jmp
imul
mov
jmp
mov
int3
icebp
cld
cmp
or
shr
push
call
xor
lea
jmp
xor
into
insl
push
adc
jmp
push
mov
lcall
mov
data16
jmp
mov
call
cmpsl
sti
adc
outsb
sbb
sub
cmpl
add
mov
rcrl
and
mov
xchg
xorb
jmp
mov
rcrb
jle
int3
test
pusha
mov
mov
sar
in
call
cmp
lock
jmp
test
pop
mov
and
stc
test
add
jne
push
rolb
mov
stc
pop
mov
xchg
xchg
les
xchg
int3
por
sbb
pusha
rorb
out
sub
scas
adc
push
push
push
test
leave
les
jle
mov
or
and
shr
or
shl
daa
push
sbb
out
leave
inc
mov
in
xor
mov
testb
adc
in
fucomi
out
movl
sbb
sbb
mov
js
loopne
roll
push
lds
aam
pop
jb
int
push
xor
adc
push
jmp
pop
in
jne
data16
sbb
push
aam
adc
aaa
punpckhdq
lea
stc
sub
push
mov
sbb
push
cmp
cmc
lret
push
xor
loopne
insl
push
ret
divl
pop
or
cmpsl
repnz
cs
dec
sub
in
sub
pop
mov
sbb
and
ljmp
lds
push
push
ss
testl
push
and
jmp
js
lock
setl
scas
decl
in
outsb
add
cmp
call
cmp
pop
mov
push
push
cmp
mov
insl
cmp
or
push
testl
xchg
push
rclb
sbb
push
sub
push
stc
or
pop
adc
jno
jbe
shr
stc
jmp
sbb
lret
jmp
aaa
icebp
or
and
test
cmp
adc
lret
aam
sbb
lds
sbb
mov
into
fstl
mov
fcompl
addl
test
sbb
hlt
mov
or
pop
pusha
mov
insl
fmuls
and
call
xchg
stos
das
push
add
jmp
clc
cmc
jno
adcb
ds
or
mov
add
jb
adc
popf
add
notl
outsb
fistpll
sub
aam
int
lea
loopne
or
adc
fildll
xor
clc
iret
ficomps
add
lods
movq
daa
orl
imul
aaa
jg
xchg
push
fidivrs
jmp
fwait
adcl
cmpsl
cld
add
cmpsb
orl
arpl
inc
jmp
and
inc
jmp
inc
out
jmp
insb
inc
leave
rolb
mov
sbb
psubsw
bound
jae
xchg
jmp
mov
pusha
popa
stos
jl
hlt
push
mov
aam
jae
inc
xchg
cmp
sub
dec
push
push
inc
lahf
add
dec
sahf
clc
ja
mov
shr
fldl
mov
or
pop
or
add
test
sbb
ret
cmp
push
jmp
icebp
xor
andl
insl
ds
data16
mov
std
xchg
add
ret
aaa
mov
stc
clc
cmp
hlt
stos
test
adc
push
xlat
fcom
shll
sbb
mov
add
push
xchg
inc
aas
ret
test
jno
push
imul
sub
or
jmp
into
andl
imull
insl
push
enter
jl
adcb
mov
enter
sbb
cmc
out
cld
loope
adcb
pop
scas
xor
sub
or
mov
aas
mov
xor
push
pop
cmp
xor
gs
dec
adc
je
test
xor
adc
mov
arpl
xchg
andl
or
or
sti
push
pushf
sbb
adc
imul
out
scas
les
fwait
call
mov
or
rclb
rorl
jle
les
add
shr
sbbl
dec
cmp
jge
ja
mov
mov
cmpsl
pushf
xchg
jo
mov
addr16
pop
jge
push
sti
aaa
popf
mov
jecxz
sbb
pusha
xor
das
cli
sbb
pop
in
mov
jp
or
inc
xchg
jnp
mov
sbb
fsubs
mov
cli
mov
inc
lea
cmp
loope
add
mov
orl
or
sbb
add
inc
fwait
in
jecxz
push
mov
cmp
mov
mov
cmp
ja
repz
push
dec
sbb
ds
adc
outsl
and
ret
mov
adc
cmpsb
dec
pop
cmp
shlb
jecxz
pusha
es
inc
mov
loopne
std
je
in
shr
aad
ret
or
loope
sete
cmp
jle
adc
sar
pop
mov
loopne
sbb
mov
sub
inc
lock
pop
xchg
shl
dec
aas
sbb
jbe
popf
call
dec
ret
add
test
cli
xor
add
mov
jmp
sub
cli
stos
dec
pop
and
enter
mov
mov
imul
dec
movb
pop
jmp
xchg
iret
fisubs
push
jmp
jmp
xor
lock
adc
in
mov
jmp
or
add
push
pop
cs
lret
cwtl
cmp
js
mov
mov
and
inc
xchg
jb
pop
sub
mov
mov
test
popf
sbb
pop
arpl
iret
nop
mov
xchg
inc
rclb
xchg
outsl
negb
adcl
ja
outsl
call
out
add
pop
adc
gs
sub
and
jg
lock
mov
or
push
jg
pxor
mov
sub
addr16
neg
fwait
cld
iret
cmp
push
shrl
mov
or
cmpb
sbbl
push
jg
std
fidivs
cwtl
sub
loope
pop
in
in
das
pop
inc
sub
mov
dec
outsl
gs
jo
scas
repz
in
mov
pop
lret
outsl
jg
jnp
xor
mov
jg
cwtl
in
mov
push
and
mov
mov
repz
mov
mov
jg
sub
leave
xchg
cmpsl
and
out
lock
pop
pop
mov
mov
mov
ja
icebp
sti
inc
aaa
daa
orl
fidivrs
subl
jg
cmp
aas
xor
in
divb
dec
movsl
imul
ja
jecxz
pop
ret
in
loope
and
test
mov
out
out
mov
jg
pop
shr
jo
xor
push
out
mov
adcl
jnp
out
ret
dec
adc
jnp
lahf
pop
sub
mov
stos
jg
ror
out
inc
cld
pop
pusha
add
lea
call
pop
scas
pop
push
call
sti
call
add
push
test
mov
ret
push
pop
mov
jmp
iret
jmp
push
nop/reserved
cmp
push
push
or
aam
cmp
lahf
jb
shll
repz
rcll
push
call
adc
dec
jns
jnp
mov
mov
sub
call
push
fadds
xchg
mov
imul
sub
cwtl
push
outsl
pop
movsl
sbb
jbe
loop
adc
and
cld
add
loop
inc
sar
mov
clc
ja
pushf
cmp
jae
incl
orl
or
repnz
sub
dec
loopne
jmp
push
icebp
test
mov
pop
inc
addl
xchg
xor
clc
popf
into
mov
movsb
cmp
push
sub
sub
mov
dec
cmp
bound
add
xchg
sar
mov
repnz
sbbl
add
push
mov
mov
les
aam
xchg
clc
aaa
call
ror
test
sub
lea
pmaxsw
push
loopne
xchg
push
xchg
ficoml
outsl
bound
out
push
fists
push
cmp
fmuls
xor
dec
mov
sahf
rclb
fildll
mov
xor
test
push
jne
popl
pusha
dec
rcl
adc
xor
and
call
fwait
push
mov
jle
mov
inc
rol
mov
mov
push
lahf
pop
in
adc
adc
and
ret
or
fsubr
aam
jmp
jne
jp,pt
jle
xchg
jne
cwtl
sbb
xchg
lahf
mov
mov
js
xchg
and
adcl
cmpsl
pushf
jmp
push
pop
mov
cmp
sbb
es
add
adc
sub
mov
or
outsb
dec
cmp
sbb
mov
inc
sbb
bswap
or
dec
jg
cmp
sub
jmp
push
mov
std
es
pop
push
push
ss
loop
adc
add
cmpb
out
sbb
fldcw
test
shrl
mov
adc
in
push
or
push
adc
push
dec
icebp
call
or
cmp
dec
testl
outsl
movsl
scas
or
push
adc
push
cmp
test
cmp
pushf
test
xlat
fs
dec
pop
and
jno
dec
insl
loope
push
call
nop
jecxz
shl
call
xadd
push
xadd
push
rcl
pop
out
mov
add
testl
add
pop
jmp
sbb
in
call
test
test
insl
sub
xor
push
lret
or
jle
pop
cmp
or
and
sti
movsl
cmpsl
ljmp
clc
test
inc
push
jbe
mov
push
cmp
aam
cld
or
popf
repz
ja
jle
or
scas
aam
sbb
mov
push
push
adc
ljmp
fcomip
pusha
and
sar
loope
bound
mov
inc
jge
call
rorl
and
int3
das
xchg
shrl
pop
push
xchg
cmc
clc
push
ja
add
add
scas
pusha
xchg
mov
mov
mov
scas
mov
push
jb
scas
enter
js
loop
pop
out
pusha
stc
rorl
mov
mov
xchg
jmp
add
add
push
or
int
sahf
rcr
mov
hlt
inc
nop
lea
adc
test
movsl
out
add
add
loope
lods
mov
loopne
lret
jmp
pop
mov
sub
test
ret
insb
xchg
add
cwtl
pusha
mov
push
mov
jnp
movsb
push
add
inc
push
jmp
popf
shl
into
aam
scas
or
call
jge
test
add
pushf
and
xchg
xor
int3
jbe
and
insb
cld
mov
adc
add
repnz
xchg
push
daa
mov
add
or
sbb
add
and
movsl
test
fsubs
aaa
dec
inc
nop/reserved
shll
sti
pop
seta
dec
xor
pop
sbbl
mov
jmp
add
xchg
jp
sub
es
aad
scas
xchg
mov
mov
inc
pusha
xchg
pusha
cmp
clc
mov
jbe
add
in
pusha
faddl
add
mov
mov
fmull
mov
jmp
std
mov
jbe
push
jno
xor
or
mov
outsl
stos
xchg
mov
or
repnz
and
mov
inc
aad
mov
shl
inc
adc
sub
sub
pop
addb
pop
add
push
in
pop
add
loop
mov
cwtl
arpl
jle
in
out
test
push
jo
jecxz
push
into
adc
add
out
mov
pop
clc
mov
mov
push
and
out
or
aaa
mov
nop
push
mov
jge
pusha
in
and
loope
jecxz
fs
mov
rclw
je
add
mov
or
mov
or
pop
mov
sahf
xchg
xor
or
aaa
call
push
push
pop
ret
cmp
cmp
pusha
cmp
pop
out
inc
inc
lcall
push
mov
sbb
mov
nop
mov
adc
cltd
icebp
push
jp
add
fcoml
adc
adc
fisttpll
sub
cmp
and
jecxz
stc
cmp
or
dec
call
xor
fadd
call
jo
es
mov
xchg
lcall
push
mov
int
xchg
xorb
mov
or
jae
cmc
aam
cwtl
outsl
mov
clc
jmp
stc
daa
icebp
xchg
add
jno
push
pusha
mov
fisttpll
pop
mov
nop
sub
rorl
mov
repnz
rclb
fildl
jb
mov
add
into
in
inc
add
call
pusha
pop
mov
fs
jle
out
decl
cs
pusha
mov
sarb
incl
mov
lahf
push
or
sub
jg
cwtl
call
xorl
cmp
icebp
push
sbb
dec
aas
push
incl
jecxz
es
pop
pop
sbb
loop
je
inc
insl
xchg
addr16
sbb
mov
out
les
icebp
lods
lret
dec
test
jmp
in
push
jge
pusha
sarl
into
dec
push
stos
mov
or
ds
dec
cmp
cmovg
outsb
test
mov
xchg
fcmovb
pop
pop
xorl
stos
fcom
jb
repnz
pop
add
dec
inc
and
dec
movsb
hlt
call
call
jle
mov
sub
loop
lcall
dec
out
mov
sub
push
out
cli
mov
sub
push
sub
fwait
in
dec
inc
dec
das
sub
xor
push
dec
xchg
das
cmc
ljmp
ja
lcall
rcl
push
loope
push
push
call
addb
pop
je
pushf
out
stos
adc
cwtl
cmp
push
xchg
or
mov
icebp
dec
mov
mov
push
jp
sbb
out
xchg
push
scas
call
das
and
xchg
aas
inc
fsubrl
or
push
test
push
call
aam
mov
je
js
sbb
jmp
shl
xor
mov
xor
les
stc
sarl
out
hlt
imul
test
or
rcrl
popf
negl
push
lahf
pop
sti
push
es
bound
cli
decl
pushf
xchg
scas
outsl
repz
sub
pop
mov
jae
jmp
add
inc
mov
fstpl
mov
jmp
push
stos
loopne
mov
inc
fs
cmp
dec
dec
decl
push
popa
dec
inc
and
call
mov
scas
je
out
lds
mov
pop
iret
or
call
jns
lea
mov
and
outsb
pushf
or
inc
mov
lret
push
push
ret
test
or
sbb
stos
outsb
fdivrs
inc
imul
jmp
loope
pop
lret
decl
in
xlat
mov
mov
xorl
mov
sar
decl
and
sbb
stos
mov
push
mov
inc
mov
lret
or
sub
or
decl
dec
js
loope
xor
pusha
cmc
aad
movsl
jmp
push
sti
hlt
sub
ljmp
std
dec
mov
sti
jbe
arpl
and
dec
mov
mov
push
push
enter
xchg
pushl
mov
and
adc
jo
aam
addl
popa
push
push
ljmp
jb
jb
adc
aaa
jbe
xor
das
movsb
out
xchg
stos
jns,pn
inc
int3
sbb
repz
inc
shl
xorb
lcall
incl
out
push
jb
jp
and
ss
loopne
push
jmp
jo
adc
pop
inc
xchg
mov
les
je
adc
lock
sub
inc
inc
or
pop
mov
mov
mov
lcall
sub
jle
cli
cmc
sbb
push
jle
imul
aaa
inc
insb
mov
and
in
dec
pusha
sbb
jmp
cmpsb
jns
adc
mov
clc
cs
mov
movsb
adc
adc
dec
incl
sbb
push
push
mov
pop
fidivs
das
adc
js
and
cmp
js
push
aas
addb
or
mov
and
movsl
xchg
cmpl
das
lock
cmpsb
jbe
arpl
cmc
adc
cmp
shll
jbe
mov
call
pop
cwtl
out
and
cltd
cmp
xchg
cmpsb
and
icebp
jmp
xor
pop
and
dec
or
incl
imul
and
sti
cmpsl
jae
push
sub
push
inc
outsl
aad
jae
test
int3
inc
mov
jo
call
mov
in
or
pop
out
sbb
in
xlat
decl
dec
pop
xor
pop
mov
and
or
add
nop
cwtl
push
mov
jmp
dec
push
sahf
imul
cld
dec
jle
mov
jo
mov
inc
adc
mov
in
sbb
inc
or
or
cltd
push
decl
cmp
adc
mov
mov
jecxz
incl
lea
add
cmpsl
sbb
aas
inc
repnz
and
xchg
fidivrl
inc
adc
jo
cmp
das
pop
jl
inc
inc
pop
add
aaa
pop
xchg
call
mov
jge
sub
jb
jge
mov
int
lcall
imul
neg
push
dec
cmpsl
inc
lret
pop
cmp
aad
xchg
lcall
daa
ds
cwtl
scas
loope
lret
inc
sti
pop
mov
mov
nop
push
mov
xchg
jg
xchg
or
ret
pop
or
in
sub
and
insb
fidivrs
insb
jmp
imul
aam
adc
es
sahf
decl
cwtl
push
sbb
lret
push
jo
pop
jnp
push
or
jmp
fistps
popf
das
aas
jno
sbb
jge
scas
cmp
and
ds
adc
mov
jp
cmp
mov
out
mov
add
mov
cli
mov
fisttpl
test
int
push
jl
mov
insl
mov
jecxz
test
push
push
add
clc
add
loopne
push
movsl
mov
sub
jp
cmp
cmpsb
incl
add
push
sarl
xor
mov
ss
and
jmp
mov
iret
sub
dec
xor
ja
or
xor
repz
push
test
push
lret
mov
stos
mov
dec
notl
jb
pushl
js
sbb
les
inc
ds
out
jle
call
ffree
add
fidivl
and
in
xrelease
lock
insb
inc
cmc
jg
sti
fabs
aad
xchg
xchg
jno
cmp
cld
mov
cltd
outsb
xchg
inc
insb
fnstsw
ljmp
loopne
arpl
push
adc
mov
inc
lock
rorb
out
fwait
cld
repz
insb
jp
or
outsl
cs
pop
in
push
sub
push
xor
sub
mov
fwait
jmp
cmp
jp
mov
stc
out
je
mov
inc
cs
cwtl
sub
push
sbb
fldl
cmpsl
sub
idiv
pushl
ret
jg
xchg
iret
call
add
sbb
and
mov
pop
incl
ljmp
push
mov
jae
mov
mov
dec
xchg
bound
insb
jle
idiv
or
pusha
push
ljmp
add
popa
mov
pusha
jbe
xor
or
in
sbb
jb
xor
and
pop
icebp
mov
aaa
jno
pop
stos
push
xor
pop
lcall
add
jns
cltd
pushf
cmp
pop
push
sub
mov
in
jb
decl
push
xchg
icebp
pop
bound
pop
mov
sbb
out
movsb
mov
xor
jg
out
inc
add
orl
insl
std
rolb
add
andps
aaa
imulb
pop
fidivrl
loopne
pop
int
and
adc
sti
out
sub
aaa
pop
adc
lret
xchg
lcall
lea
imul
lods
lret
mov
leave
std
or
xchg
popf
add
cld
incl
jge
push
ficomps
fnstcw
sub
jnp
fmull
fildll
das
add
mov
shlb
push
xor
stos
icebp
fcomip
push
sub
sbb
xchg
lret
outsl
lock
mov
dec
sub
mov
mov
push
and
jno
adc
in
xchg
and
push
call
mov
ret
mov
mov
mov
jnp
clc
jg
lret
push
lock
jl
push
add
mov
sbb
nop
loop
mov
add
in
mov
or
pop
inc
outsb
pop
mov
lcall
or
call
pushl
je
daa
add
fcoms
pusha
jp
xchg
in
sub
icebp
loope
mov
stos
pushl
mov
shl
cmc
shr
adc
ja
mov
sbb
incl
test
or
orb
push
and
punpcklwd
loope
add
pushl
xor
xchg
xlat
inc
add
mov
sub
sub
test
jg
leave
mov
int3
xchg
sahf
push
ss
or
inc
in
std
mov
adc
les
jbe
jle
out
push
stos
dec
nop
jge
loopne
lcall
inc
add
imul
in
push
push
in
pop
pop
movsb
adc
push
xor
jmp
mov
pop
inc
mov
loopne
xor
mov
in
call
daa
inc
or
rcr
daa
cmp
clc
subb
ja
pushf
dec
inc
mov
mov
mov
ljmp
cmp
adc
ljmp
mov
mov
pop
cmp
mov
movsb
xchg
and
jb
xor
pop
or
fcmovnbe
mov
sahf
adc
dec
push
or
std
mov
imul
lock
mov
jnp
sahf
int3
inc
fmull
ljmp
ret
dec
mov
xor
leave
pop
sti
pop
adc
adc
cltd
outsb
pop
shr
cmp
pushl
clc
ss
stc
push
or
and
mov
add
push
mov
pop
cli
in
shll
push
inc
mull
cld
mov
push
cmpsb
shrl
daa
movsb
pop
in
xchg
cwtl
sahf
rcr
mov
bound
sbb
mov
ljmp
xchg
fs
jmp
xor
pop
hlt
lcall
lret
cld
cmpsl
dec
stos
mov
sub
dec
mov
gs
mov
mov
orl
jge
repnz
xor
cmpsb
loop
or
ret
std
add
jg
or
jmp
inc
pop
fistps
adc
mov
icebp
add
xor
cltd
xchg
cli
in
bound
fistpll
cmpsb
xchg
and
aad
dec
pop
mov
cli
ljmp
sbb
loope
aam
cwtl
out
sub
mov
sub
sbb
decl
std
das
out
and
outsb
lret
cmp
enter
lods
vdivsd
mov
sarb
popa
outsl
adc
arpl
mov
sub
jns
cmc
incl
pop
dec
inc
sbb
pop
and
mov
clc
or
outsl
sbb
aad
out
sub
cmc
adc
outsl
lock
ljmp
xor
lods
scas
jecxz
mov
xchg
loope
mov
mov
out
or
push
fimuls
jb
mov
jmp
mov
or
jmp
sbb
decl
test
sbbl
data16
lahf
div
icebp
imul
xchg
in
inc
inc
imul
mov
add
mov
cmp
xchg
bound
mov
dec
das
pop
add
lretw
sahf
movsb
add
and
into
mov
aam
inc
dec
dec
xchg
push
mov
mov
dec
shlb
outsb
cmp
push
mov
cmpsb
jmp
mov
movsl
fisttpl
dec
pop
mov
xchg
lcall
outsb
jnp
xchg
mov
call
shl
insl
enter
lcall
std
cli
pcmpgtw
sbb
xor
sarb
nop
cmp
repnz
push
fimull
inc
push
xchg
push
push
sub
push
imul
mov
push
std
jae
dec
push
aaa
sbb
out
bound
mov
push
repnz
inc
pushf
push
dec
lock
mov
xor
fists
dec
gs
add
test
aas
or
jmp
shl
or
jbe
aad
jg
decl
and
lods
cmp
repz
jl
dec
cmp
popa
push
leave
aaa
popf
stos
mov
hlt
dec
mov
jg
fcmovne
xchg
insl
add
daa
mov
dec
pushf
xor
add
in
jo
cmp
pop
jns
and
jb
outsb
mov
sbb
bound
pop
xchg
sub
loop
out
call
xchg
idivl
fsubrs
and
ljmp
andl
test
jge
or
cmp
dec
cmp
adc
sti
and
mov
ljmp
lcall
pop
sbb
lahf
lods
mov
sub
in
cs
sarl
or
aad
mov
sbb
fsubs
ljmp
jmp
dec
pop
adc
adc
lods
ja
jno
xchg
call
jmp
out
shrb
adcb
es
sahf
ljmp
dec
ljmp
ficomps
mov
dec
pop
test
mov
pop
xchg
add
mov
push
and
sbb
push
mov
rclb
mov
addr16
jg
jbe
inc
flds
cmp
ret
pop
jge
scas
dec
xchg
cli
pop
lret
nop
mov
jg
add
push
lock
adc
jb
xor
push
lea
out
sbb
pop
xchg
sub
pop
ja
ljmp
sbb
mov
sub
add
add
add
call
lock
sub
jge
lcall
lcall
jbe
add
out
decl
fst
addr16
popf
ret
frstor
int3
outsb
cmpsl
mov
iret
push
sbb
mov
sub
push
sarl
lock
mov
scas
in
test
inc
insl
test
aas
xchg
jp
ret
push
mov
insl
push
incl
jmp
mov
lret
lahf
out
test
insb
push
rcll
or
rcrb
mov
sub
fcoml
sbb
jg
idiv
jb
shlb
jbe
mov
mov
repz
pushl
cmp
sbb
dec
das
inc
fnstsw
inc
repnz
adc
pop
popa
jbe
pushl
dec
add
cltd
sub
and
aas
jae
subl
ss
aad
lcall
cld
cmp
lea
cmp
mov
test
sti
or
inc
mov
inc
das
push
push
or
pop
mov
cmpsl
pop
or
push
repz
insb
pop
mov
std
call
jae
jnp
push
in
xor
loope
dec
sahf
push
lea
ret
cltd
dec
add
imul
enter
sub
scas
jle
cld
push
pop
push
fwait
dec
mov
sarb
mov
mov
jbe
imul
xchg
jae
cmp
mov
decb
add
mov
mov
pop
inc
inc
xchg
sbb
aaa
dec
pushl
iret
add
lock
xchg
cmp
mov
xchg
or
test
imul
sub
lret
push
sbb
stc
mov
movsb
cmc
adc
aam
mov
testb
push
lods
inc
mov
mov
leave
lcall
arpl
in
testl
xchg
fcomip
cs
xor
mov
mov
fisttps
ss
decl
xlat
sbb
cmpb
mov
imull
jg
ffreep
push
hlt
pop
loope
push
test
gs
outsb
jae
iret
jl
call
mov
testl
jb
and
xchg
mov
mov
cmp
subb
jno
ljmp
inc
push
movsl
cmp
addb
mov
mov
lahf
jecxz
sub
pushl
push
mov
aaa
gs
jmp
mov
sub
mov
xor
test
into
mov
and
mov
dec
cmp
mov
call
lock
roll
jno
daa
jns
movsl
pop
cli
sbbl
sti
outsl
xlat
das
faddl
rol
jne
push
std
dec
mov
mov
jle
inc
stos
jp
out
mov
push
cmp
mov
xor
xor
pop
sbb
pop
js
ljmp
fldcw
call
std
idiv
iret
int3
push
mov
pushf
xchg
mov
xchg
repz
ficomps
pop
inc
mov
and
cmpsl
int3
add
aam
outsl
loop
fbstp
aas
enter
andb
mov
pusha
mov
inc
and
stos
test
das
sbb
mov
pushf
lock
jo
outsl
jmp
pop
pop
add
mov
lods
cli
cmp
add
jmp
jmp
mov
jge
mov
inc
push
or
stos
jg
jmp
push
mov
clc
into
xchg
jne
mov
fistps
xchg
idiv
ljmp
div
test
push
nop
push
sub
jb
pop
sub
jo
xchg
popa
push
mov
lods
mov
cmp
mov
xchg
leave
inc
jno
push
xchg
mov
inc
or
sbb
jg
dec
jge
xor
jns
in
jg
xor
call
in
xor
filds
sub
add
aaa
lea
adc
or
sbb
ret
cmp
cmp
and
sar
lcall
idiv
fildll
loop
jae
sti
ja
push
mov
adc
in
sbb
icebp
push
mov
jmp
lock
out
jbe
jae
push
sub
pop
pusha
stc
mov
shl
mov
jne
fistpll
and
jns
pusha
push
bound
stc
lret
push
push
cmp
in
xor
shll
pushf
and
std
cmp
add
adc
jbe
cmpsb
je
add
das
mov
jo
xor
int3
enter
mov
arpl
stos
or
nop
mov
out
pop
xor
mov
std
clc
mov
jmp
xor
xor
xor
sub
cmp
sbb
neg
insl
out
ds
mov
daa
and
inc
pop
ja
sub
jb
xor
decl
add
mov
int
daa
lea
sarl
xchg
enter
call
lcall
push
inc
mov
repz
insb
push
test
insl
dec
push
sbb
popf
sub
or
mov
mov
add
in
cld
mov
sub
cmp
jg
ljmp
add
sar
mov
ljmp
inc
or
lcall
or
jne
inc
push
pop
shlb
add
xorl
inc
mov
test
and
into
pop
jae
cmc
imul
cltd
int
sarl
adc
cmc
ret
call
adc
add
out
cltd
push
inc
mov
and
pop
test
stc
jo
pusha
or
push
inc
pop
cli
dec
xor
cmp
dec
inc
fisttps
or
aas
imulb
je
adc
dec
in
jns
shl
int3
in
in
mov
enter
jae
inc
xchg
int3
jl
push
andb
fdivl
clc
decl
loope
repz
cmp
push
test
hlt
jno
dec
add
or
test
or
pop
ret
xor
or
cwtl
jmp
xchg
mov
mov
fistpll
jbe
xor
push
outsb
jecxz
sete
dec
lock
je
inc
xor
adc
or
jg
xchg
sete
sbb
out
add
mov
inc
popf
xor
mov
sbb
jmp
sub
iret
inc
sub
push
mov
mov
das
insl
sahf
pop
xor
jg
mov
sar
outsb
ret
inc
mov
mov
add
shll
pop
adc
and
fldl
test
lret
fcmovne
mov
add
pop
xor
sub
gs
leave
lods
dec
rolb
pop
xor
out
mov
mov
xor
mov
lahf
sahf
fwait
ret
loopne
cmp
or
inc
mov
out
lret
aas
pop
pop
xchg
add
fs
sti
pushl
scas
pop
cmp
cli
test
cmp
scas
adc
and
movsb
fstl
mov
call
clc
rcrb
pop
shll
cltd
inc
pop
leave
dec
popa
fidivrs
mov
jnp
popf
mov
xor
int3
shr
movsb
pusha
sub
mov
cli
add
mov
cli
clc
jmp
mov
sub
sbb
test
jg
adc
add
insb
xchg
jns
mov
lcall
xor
xchg
mov
push
mov
sahf
cmp
push
adc
mov
mov
inc
cwtl
hlt
add
mov
adc
push
mov
cmp
add
rclb
sahf
ljmp
rcl
enter
aaa
aad
cwtl
sbb
stos
and
arpl
pop
push
ljmp
filds
dec
adc
inc
add
sahf
icebp
push
jae
inc
jecxz
sbb
testb
into
mov
popf
cld
push
xchg
jae
rorb
mov
pop
mov
pushl
enter
adc
cmp
xor
repnz
jb
cld
das
ret
cmc
xor
jb
arpl
push
clc
or
push
xchg
fwait
xor
sub
fucomip
mov
xor
xor
cmc
arpl
adc
les
cmp
lock
mov
jno
nop
insl
imul
sub
push
out
inc
pushl
in
sbb
ficoms
jne
aas
mov
imul
and
dec
std
decl
xchg
pusha
int
popa
pop
std
ljmp
loop
dec
js
lds
sbb
lret
lcall
sbb
jo
insb
nop
xchg
in
adc
inc
push
jl
fldenv
fbld
inc
or
movsb
scas
icebp
inc
cmp
aaa
mov
xor
pop
xor
jge
push
inc
in
fisubs
inc
jl
xchg
mov
push
ud0
adc
mov
sti
stc
inc
and
add
cmp
xchg
pop
ficoms
lods
scas
out
or
lahf
mov
mov
inc
je
add
push
xor
adc
push
lcall
and
fsts
xor
notl
push
ljmp
jb
shlb
fisubrs
xchg
inc
add
mov
fwait
cltd
ds
lcall
setle
decl
repz
jnp
adc
std
lcall
lock
icebp
out
hlt
cli
push
sub
push
insl
and
int3
push
mov
ljmp
pop
enter
pop
call
andnps
addr16
iret
adc
xor
ds
subb
pop
fsts
clc
push
push
push
jge
icebp
sbb
mov
xchg
cmpsl
lcall
adc
mov
push
in
push
test
cltd
fildl
add
jg
mov
pop
pop
sbb
adc
sbb
pop
xor
ss
insb
shrl
sarl
adc
mov
xchg
shl
pop
jp
dec
push
ficoml
stos
fildll
mov
and
add
dec
add
sub
pop
loop
sub
jnp
and
mov
dec
imul
les
jg
lcall
sbb
aam
cmp
mov
js
test
inc
loope
lcall
push
loope
or
jnp
fidivs
repz
mov
in
jg
cli
std
push
shlb
or
pop
insl
pop
insb
sub
jg
cld
jbe
or
ds
out
test
das
or
ljmp
jp
or
std
fisubl
jne
roll
enter
inc
xchg
clc
sbb
movsb
testl
mov
jne
pushl
jg
add
mov
rcrl
jne
mov
push
insl
lock
cld
ja
roll
nop
cld
clc
in
sti
or
pop
pop
js
daa
gs
sarl
dec
pop
inc
mov
cmp
scas
xchg
push
cmpsb
cmp
ja
sbb
sbb
inc
dec
xorb
push
clc
xor
jge
and
or
pop
lods
sub
and
jae
aam
idivl
mov
inc
in
mov
dec
outsl
gs
push
je
mov
mov
inc
mov
pusha
cmp
pop
push
in
or
push
jmp
mov
loop
sub
out
mov
xchg
lea
and
dec
sub
lcall
or
shr
jnp
push
adc
fildll
mov
mov
das
imul
inc
xor
mov
adcb
fstp
inc
hlt
lds
fisttpl
cwtl
adc
adc
inc
mov
fucomip
inc
out
mov
inc
pop
xchg
mov
adc
imul
ljmp
movsb
mov
or
jae
pushl
in
lcall
cltd
push
sub
test
add
pop
cs
sub
pop
aaa
clc
js
mov
fs
ja
adc
mov
xor
mov
fwait
rcrl
pop
dec
mov
movsb
out
add
clc
sbb
movsb
popa
loop
add
int
ds
mov
lret
jns
stos
pushl
test
fdivs
adc
xchg
add
loopne
cmc
inc
push
stos
cmpsl
or
push
jns
sahf
into
out
add
inc
incl
mov
cmp
repz
cmp
cld
repnz
sub
inc
dec
xchg
in
bnd
addl
and
stos
push
push
push
aam
imul
das
hlt
ljmp
mov
add
pop
jmp
sub
test
push
cld
pop
std
fildll
in
call
push
pop
loop
cli
lock
mov
enter
hlt
nop
lods
add
jae
hlt
jg
out
lea
cmp
in
mov
pop
lret
fsts
jl
sbbb
lcall
lcall
add
scas
in
add
jno
dec
sbb
push
inc
divl
sbb
pushl
hlt
into
pop
add
xor
mov
out
sub
icebp
sahf
int
xorb
push
jp
add
ret
jg
jno
push
dec
ja
insb
imul
outsb
mov
and
movsb
test
lret
ljmp
lock
xchg
enter
xchg
nop
pop
or
jae
push
sub
cmc
and
jmp
mov
xorl
int
rolb
stos
std
inc
loopne
std
das
jl
jg
mov
imul
mov
adc
scas
repnz
ljmp
sub
pop
jge
cmp
lahf
je
outsl
dec
and
scas
jae
sbb
mov
popa
fdivrs
push
in
jnp
pop
fwait
add
lcall
stos
ret
jmp
lahf
mov
test
jge
movsl
mov
jmp
xchg
cmp
dec
sub
sti
imul
lret
pop
cmc
mov
xor
push
cmp
mov
test
outsl
mov
sahf
push
outsb
pop
andl
mov
pop
cmp
xor
movsb
in
mov
ljmp
mov
cmp
mov
in
mov
leave
test
femms
and
imull
test
rcll
cli
call
arpl
add
pop
cld
or
lods
call
hlt
insb
std
lcall
add
scas
sahf
mov
out
fstpl
dec
aaa
test
cld
push
xor
push
mov
outsl
cmc
outsl
or
xchg
notl
int
cmp
icebp
jmp
insl
scas
popa
jne
cld
sbb
out
movsl
inc
mov
scas
rorb
daa
mov
imul
xor
fldcw
leave
incl
jmp
clc
aam
je
mov
mov
cmpxchg
loopne
call
mov
mov
or
or
inc
cli
pop
sub
decb
xchg
push
push
dec
enter
cs
pop
sub
das
cmc
dec
std
sysexit
das
xchg
mov
cld
rcl
jle
sti
mov
cmc
fistpll
xchg
enter
hlt
cmp
pop
test
pop
push
call
and
mov
jne
movsb
cli
call
sahf
dec
jle
cmc
inc
out
mov
xor
leave
outsl
jne
pop
mov
sar
mov
adc
or
dec
ds
loopne
inc
pusha
mov
int3
jmp
jb
div
push
or
incl
or
mov
inc
int
jmp
xor
ljmp
das
int3
add
push
pop
ss
scas
adc
mov
js
cld
outsl
pop
ljmp
jle
aam
mov
xchg
mov
jle
or
ljmp
fwait
iret
jne
pop
subb
xchg
dec
arpl
fmuls
pushl
jmp
jp
mov
add
rclb
in
sub
test
into
loopne
inc
fiaddl
xchg
cmp
test
scas
test
pushl
jbe
xchg
jb
mov
fs
jbe
mov
dec
push
xchg
incl
fnstenv
ja
xchg
mov
mov
sbb
lods
shl
sar
cli
dec
mov
stc
in
or
in
add
es
push
pop
rcrb
jmp
sti
fcom
jp
movsl
push
fwait
pop
adc
shlb
mov
outsl
sbb
pushf
xchg
pop
xor
fs
in
mov
sub
mov
fidivl
xchg
lods
mov
fidivs
shufps
mov
mov
test
sbb
sbb
sahf
les
dec
xchg
int3
or
inc
mov
push
adc
and
outsl
icebp
mov
push
jg
inc
icebp
adc
push
dec
lret
fisubrl
adc
lcall
add
pop
jg
adc
ljmp
push
xchg
outsb
call
cld
lcall
gs
mov
dec
adc
xchg
pop
push
cmp
add
xlat
mov
fucomip
mov
add
inc
pop
aam
idiv
das
hlt
mov
push
push
push
push
mov
xchg
xlat
mov
add
mov
push
rclb
jg
mov
cmpsl
xchg
insb
mov
mov
enter
sub
pushf
lock
ljmp
xchg
cltd
adc
mov
inc
mov
jge
or
add
ljmp
cwtl
arpl
pop
push
ret
add
in
fisubrs
adc
test
test
xchg
add
scas
add
outsl
cmc
call
aad
in
xchg
push
mov
in
shl
add
add
enter
aas
idivb
pop
xchg
popa
push
mov
ret
jle
pop
lahf
lret
lea
push
mov
fadds
xor
pushf
or
jno
dec
ljmp
incl
and
aam
push
into
jecxz
sub
mov
push
fstl
add
aam
inc
jbe
ret
out
xor
add
dec
in
or
mov
pop
loopne
jg
loope
fisttpll
ja
sub
lret
push
jl
les
pushl
es
aaa
shrb
loope
aaa
rcr
and
push
mov
dec
bound
nop
xor
popa
out
jg
fidivrl
movsb
stos
jecxz
dec
stos
and
movl
push
push
sbb
mov
stc
pushl
jle
aad
call
addl
shrb
imul
cld
dec
cmp
mov
xchg
imul
icebp
ret
jp
loopne
ror
in
sub
repnz
mov
ja
adc
pop
jge
leave
in
call
sub
pop
pop
enter
adc
test
fildll
shl
es
incl
xchg
jecxz
adc
mov
dec
mov
fimull
mov
mov
ret
mov
gs
xchg
xor
sub
mov
xor
inc
nop
jae
sbb
jge
imul
jmp
hlt
aam
pop
lret
sub
incl
movl
mov
rcll
xchg
push
pop
xchg
and
cld
lret
bound
sbb
rolb
notl
ret
sbb
in
ja
pop
ds
sar
daa
fs
aaa
pop
cmp
inc
xchg
imulb
sbb
lods
jge
sbb
mov
sub
and
aam
pop
shrl
call
lcall
xchg
shll
inc
add
outsl
push
sbb
das
jg
cmpsl
adc
scas
negl
insl
mov
dec
dec
and
sbb
inc
or
dec
daa
mov
ret
je
cmp
leave
les
dec
push
mov
aas
das
cmpsl
pop
inc
pop
mov
jge
stc
enter
das
pushl
and
aam
pop
leave
jecxz
sub
ja
call
cmp
out
add
xchg
xchg
inc
mov
int3
cmp
repnz
push
nop
xor
mov
insl
or
dec
out
jo
in
ror
or
aad
daa
shlb
sub
dec
in
or
test
cli
push
ret
call
es
test
in
ficoms
cmp
xchg
mov
movsb
add
int3
fsub
and
lock
jmp
or
xor
mov
std
daa
pusha
mov
call
inc
aas
sub
jge
cmp
orl
shll
je
ljmp
testl
jg
xlat
adc
jge
insl
es
mov
cmpsl
jmp
mov
adc
in
sbb
dec
je
mov
lret
mov
jg
sarb
jmp
mov
cld
in
iret
pop
sbb
pop
jbe
cwtl
dec
inc
cmc
and
mov
fsubs
test
xchg
in
lahf
adc
mov
in
jne
shll
data16
cmpsb
inc
or
jnp
xchg
aas
mov
je
cmpsl
push
push
ret
pop
je
sub
aaa
call
js
xchg
test
adc
lret
loope
ds
pusha
push
mov
loop
shll
call
ljmp
xchg
je
or
pop
lret
cmp
jge
xor
jg
call
push
fisttps
push
leave
call
adc
jge,pn
mov
test
mov
outsb
push
leave
push
jp
inc
mov
scas
or
cmpl
incb
inc
jge
call
dec
xchg
jbe
popf
inc
push
inc
fwait
dec
insl
sub
xchg
pop
jl
shrl
mov
aaa
mov
or
lock
jmp
jle
dec
aaa
xchg
fimuls
jg
jb
nop
add
call
imul
idivb
fchs
adc
dec
rol
into
aas
popf
test
out
repnz
lret
add
adcb
jnp
sarl
jl
dec
dec
xor
aam
pop
sarb
and
jg
test
jb
xchg
popa
inc
out
aaa
add
lcall
movsl
daa
jno
push
test
cwtl
test
inc
jg
jg
dec
out
push
jnp
sbb
aam
pop
adc
cld
xor
je
mov
icebp
dec
xor
cwtl
out
mov
jmp
outsb
xor
mov
leave
xchg
jmp
std
test
mov
repnz
sub
into
movsl
fld1
pop
xchg
fstpt
jg
xchg
pop
imull
mov
dec
mov
push
sbb
xor
xchg
es
insl
lds
pop
loopne
aad
decl
and
mov
dec
xchg
jbe
fwait
push
pusha
movsl
insb
sarl
movsb
mov
lret
jns
jno
xor
incl
cmp
xchg
mov
cltd
out
push
repz
sarb
fildll
pusha
cli
cs
je
mov
mov
or
pop
pop
xchg
push
add
sahf
cli
dec
daa
pop
lcall
push
call
cmp
mov
mov
popa
aad
fidivl
mov
cmpsl
jl
loope
div
lcall
mov
testb
nop
pop
das
ds
test
dec
jp
adc
mov
cmp
pop
push
lcall
lret
lret
push
jg
jg
imull
dec
and
outsb
xor
pop
xor
daa
arpl
mov
dec
imul
je
fimull
repz
int3
stc
in
lea
pushl
jns
pusha
movb
aad
fisubrl
nop
cs
jmp
jb
xchg
jle
in
stc
shr
add
pop
sbb
pop
out
mov
or
in
lea
jecxz
xor
ja
arpl
add
jbe
popf
in
arpl
jg
incl
sti
fidivl
movsb
mov
inc
iret
xlat
dec
mov
jo
popf
or
push
pop
mov
cwtl
rcrb
arpl
hlt
jg
push
jge
jns
ss
aad
test
push
fistps
or
repz
jg
pop
clc
xchg
sub
outsb
dec
cmp
aaa
sub
in
xor
sub
xchg
mov
fidivrl
xchg
inc
stos
lods
imull
lahf
xor
xchg
sbb
mov
into
inc
xchg
iret
adcb
sahf
adc
fmuls
cmpsb
fwait
mov
cli
push
fldt
jo
xor
fistpll
mov
sarb
ds
ds
or
adc
sbb
and
std
idiv
aas
sub
xor
cmp
push
aas
pop
aas
mov
aas
lahf
aas
add
fs
jg
xor
cltd
xor
xor
xor
xor
sub
cmp
dec
xor
mov
xor
xor
pushl
repz
xor
xor
xor
push
xor
mov
xor
xor
inc
xor
lock
pushl
bound
imul
xorl
xor
xor
fnstenv
movsb
xor
xor
pop
xor
xor
xor
xor
in
in
xor
add
push
out
xor
sbb
xor
xor
xor
das
inc
hlt
divb
xor
or
mov
mov
xor
or
sub
sub
aaa
jno
or
aaa
stc
lcall
jle
enter
stc
cmp
cmp
cmp
cmp
cmp
inc
cmp
clc
lcall
mov
cmp
pop
cmp
fstpt
xchg
divb
mov
aas
mov
ret
aas
dec
aad
add
pusha
mov
aam
xor
xor
push
or
xchg
xor
fstpt
xor
xor
xor
xor
xor
inc
fbstp
int
push
xchg
xor
xor
xor
xor
pop
pop
sbb
lcall
pop
aas
xor
nop
xor
xor
xor
xor
xor
xor
xor
xor
xor
or
cmp
push
xor
pushl
adc
xor
aas
ss
ss
ss
ss
xorb
cmp
pusha
cmp
pushf
cmp
cmp
cmp
cmp
cmp
cmp
or
cmp
cmp
arpl
xchg
ds
ds
mov
add
and
sub
int
mov
fldenv
jo
les
fucomip
pushl
insb
xor
xor
xor
xor
jns
mov
xchg
xor
xor
mov
dec
xor
les
xor
xor
xor
xor
das
xor
jle
test
xor
xor
sbb
lock
xor
cmc
xorl
aaa
shlb
add
jb
mov
das
cmp
inc
cmp
sbb
pushl
mov
cltd
cmp
cmp
push
je
cmp
cmp
cmp
cmp
cmp
les
ds
ds
sub
fs
call
mov
xchg
ds
leave
sarb
loop
icebp
ds
add
or
jl
aas
inc
aas
mov
int3
aas
stc
ret
xorb
xor
fwait
loope
xor
aam
sbb
outsl
xor
lock
cmpsl
xor
jecxz
clc
add
in
xor
add
xor
xor
xor
xor
ja
ljmp
xor
xor
icebp
in
xor
decl
pushl
or
repz
adc
cld
xor
xchg
inc
ss
ss
ss
mov
mov
xlat
stc
adc
or
outsl
cmp
ss
cmp
cmp
decl
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
ljmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
movsl
cmp
jle
lea
fwait
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
pop
cmp
fbstp
cmp
dec
inc
lea
cmp
cmp
cmp
cmp
cmp
test
cmp
cmp
cmp
cmp
cmp
push
adc
or
jmp
dec
cmp
cmp
scas
cmp
xor
cmp
inc
ds
ds
jno
imul
xchg
nop
ds
outsl
shl
sbb
ds
enter
outsl
mov
loope
jmp
das
push
sbb
and
movsl
push
jp
daa
aas
xor
cmp
and
jg
lcall
pusha
aas
data16
outsb
aas
jae
js
ljmp
pop
clc
fwait
xchg
aas
xchg
aas
mov
aas
les
sarl
fidivs
pop
mov
adc
and
jp
call
push
xorl
cmc
incl
xor
xor
xor
xor
xor
xor
call
push
inc
xor
pusha
mov
outsl
fnstenv
xor
xor
xor
xor
mov
xor
xor
xor
xor
xor
xor
xchg
xor
call
movsl
sub
ss
ss
mov
out
aaa
push
movsl
aaa
jg
pushf
in
call
aaa
and
cmp
je
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
mov
push
cmp
jb
jns
sbb
clc
test
sahf
cmp
cmp
mov
cmp
lock
cmp
xor
inc
cmp
mov
das
sbb
jg
cmp
cmp
cmp
cmp
cmp
cmp
lahf
xchg
ljmp
pop
cmp
jo
jbe
orb
push
cmp
mov
cmp
fwait
loop
pop
add
sub
mov
fildll
add
sbb
xlat
xor
xor
xor
xor
and
add
test
mulb
enter
add
sub
sub
fidivrs
adc
add
pop
out
mov
cmp
rcrl
cltd
cmp
popf
fstps
cltd
cmp
cltd
ds
aas
in
ds
fcoms
dec
adc
xor
xchg
and
and
aad
add
add
andb
inc
daa
pop
and
inc
pop
js
pop
xor
cmp
cmc
sarl
mov
and
push
aaa
mov
je,pn
js
or
subb
nop
jmp
jge
pop
inc
cltd
and
pusha
push
mov
lret
pop
jnp
dec
xchg
lods
pop
or
jb
jb
sub
fwait
cmp
and
cld
push
test
lahf
pusha
and
popf
and
inc
xor
push
add
adc
and
mov
scas
add
mov
sub
push
mov
pusha
std
int3
push
inc
add
adc
push
cmc
adc
dec
sbb
cmp
jl
adc
add
iret
adc
mov
mov
dec
adc
push
push
push
pop
inc
fldl
add
pop
pop
in
sub
push
push
pop
mov
popl
movsl
or
inc
shr
add
mov
addr16
mov
lret
mov
sub
cltd
std
stos
icebp
cwtl
fstps
add
icebp
and
jbe
test
sub
inc
dec
loop
sbbb
inc
mov
push
frstor
pop
xchg
or
test
adc
aam
adc
pop
inc
je
sub
mov
fcoms
or
mov
add
sbb
cmpsb
clc
fsubrs
sub
cmp
arpl
test
fisubrs
xor
lock
divb
mov
add
sbb
shr
mov
dec
pop
pop
push
ds
pop
lock
sbb
es
loopne
sbb
mov
and
in
xor
add
mov
or
test
add
xchg
adc
mov
hlt
and
inc
shll
addb
fildll
mov
shll
mov
add
ret
jbe
pop
es
ds
out
jge
mov
lret
pop
and
fnstcw
and
les
sbb
cmpb
add
imul
push
or
insl
add
divl
pop
cs
lret
clc
xor
cs
fs
insb
cld
lret
inc
add
insl
insl
mov
lds
insb
adc
dec
sbb
xor
dec
inc
jg
repnz
and
or
inc
enter
pop
xchg
test
mov
pop
xchg
gs
dec
inc
nop
cmpsb
jmp
insl
or
add
xor
movsb
push
push
pop
sub
ficompl
add
lds
push
fdivl
xor
mov
aam
lods
je
cmp
jecxz
out
add
aaa
dec
call
add
adc
sub
cmp
fwait
sti
pop
push
sbb
push
or
jb
in
sbb
xor
mov
jns
in
cmp
mov
push
fs
push
push
ret
fs
test
jne
and
or
or
add
mov
and
jecxz
or
out
adc
neg
dec
clc
xchg
adc
adc
push
mov
xchg
mov
in
mov
xor
or
push
ret
xor
pop
add
xor
lret
mov
int3
or
outsl
push
aas
das
or
and
sub
pop
or
loopne
sbb
pop
jae
out
mov
fnstenv
and
pop
in
movntps
out
sub
lods
mov
add
pop
or
ret
aad
mov
xor
ss
sbb
aas
push
adc
mov
mov
or
pushf
mov
mov
std
insb
lds
xchg
ret
lds
inc
cmpb
or
or
push
nop
mov
test
or
out
pop
clc
inc
das
mov
cs
push
push
cmp
or
cmp
movd
push
sbb
sbbb
or
sbb
lods
repz
lods
add
lods
or
sub
shrl
push
and
cmpl
test
mov
lock
pop
xchg
gs
outsl
outsb
gs
xchg
gs
cs
insb
xchg
aam
aad
insb
xlat
popa
gs
push
or
jne
arpl
dec
xchg
push
loope
pop
mov
loop
hlt
cmc
mulb
idiv
fldt
inc
cli
je
sti
xor
call
je
jne
in
call
movsb
or
or
jnp
je
aad
movsl
add
movb
lret
lret
outsb
int3
mov
dec
ja
and
iret
dec
mov
dec
xor
shll
pop
js
roll
cmp
add
dec
mov
imul
cmovl
test
popa
aas
je
fxch
std
enter
test
pop
mov
std
mov
sub
or
into
jns
std
inc
std
js
scas
lods
xor
push
ja
dec
aad
ja
icebp
aam
int3
add
jecxz
add
xor
mov
cmp
int
sub
push
push
inc
push
pop
mov
sub
mov
inc
xlat
push
push
sub
dec
fisttpl
shr
loop
nop
cmp
je
push
mov
nop
xchg
ret
mov
ret
scas
mov
or
dec
xor
push
adc
jmp
sbb
dec
push
decl
ds
shlb
in
outsl
push
add
sub
sbb
je,pt
test
xor
mov
mov
mov
and
mov
mov
inc
push
and
hlt
mov
mov
in
mov
in
fs
mov
sbb
mov
std
mov
or
mov
cmp
mov
push
test
mov
sub
dec
xor
push
mov
sbb
adc
push
in
int
fiaddl
add
imul
add
inc
int3
fs
cs
lret
int
into
popa
iret
shrb
outsb
lcall
nop
jae
cs
mov
shlb
xchg
gs
insb
popa
jne
cmp
outsb
arpl
cs
and
outsl
clc
addr16
shll
sub
cmc
mulb
fldcw
imull
js
add
gs
insb
outsl
jb
pushf
sub
pop
cs
mov
sbb
js
bound
lods
sbb
mov
sub
hlt
xor
adcl
out
ret
fwait
mov
add
adc
in
enter
or
dec
xor
clc
loopne
mov
pop
mov
leave
inc
mov
adc
je
ds
addr16
add
mov
inc
iret
push
shr
cld
into
mov
pop
inc
je
outsb
pop
mov
addr16
push
mov
push
call
jno
mov
jmp
mov
jne
roll
inc
repz
js
mov
mov
jp
or
sbb
hlt
inc
adc
add
int
pop
cwtl
mov
add
fcomps
inc
hlt
clc
push
add
push
mov
insb
data16
xchg
or
rep
fistpl
sbb
add
es
dec
inc
and
mov
imul
jecxz
inc
adc
pop
add
push
mov
cwtl
push
ret
js
mov
insb
mov
mov
pop
test
ret
push
call
xor
cmp
pushf
or
add
mov
sbb
shlb
mov
int3
or
push
sti
lods
push
pop
xor
pop
mov
arpl
inc
add
insb
in
pushf
jae
or
mov
or
jo
add
mov
mov
pop
pop
add
jge
or
or
add
push
xchg
pushf
xor
enter
inc
inc
adc
inc
dec
dec
push
stos
in
inc
mov
pmulhuw
inc
les
add
sarb
mov
inc
sbb
outsl
fs
push
dec
jne
or
pop
xor
sub
jo
and
cmpsb
add
fmul
inc
sahf
and
add
stos
sub
add
aaa
sub
rclb
outsl
jne
mov
jmp
mov
adc
shlb
adc
mov
ljmp
cmp
je
movsbl
add
sub
jne
inc
cmp
jne
cmp
je
mov
inc
sub
test
and
faddl
inc
push
daa
out
pop
inc
cmp
jl
iret
mov
filds
jg
and
or
stc
stc
subl
shll
add
shll
rcrb
mov
andb
xor
cmpb
jmp
add
and
add
mov
lea
adc
jmp
add
arpl
jae
sub
mov
or
loope
inc
mov
mov
int3
cmp
inc
popa
scas
inc
pop
or
cmpsl
add
lcall
sti
add
pop
sbb
add
dec
xor
shll
pusha
je
sahf
imul
xor
mov
inc
dec
inc
cmp
xor
roll
cs
adc
addr16
addr16
push
inc
add
dec
add
or
ljmp
or
dec
dec
cmp
inc
add
cmpsl
push
push
mov
jp
out
js
cwtl
add
test
pop
or
outsl
inc
jne
outsl
andb
popa
jns
jne
jae
push
push
lods
xor
mov
shll
sub
ds
mov
push
aaa
js
jg
outsb
xor
aas
and
outsb
or
js
dec
inc
dec
dec
sub
ss
push
sub
push
push
mov
inc
cwtl
dec
and
ss
les
inc
adc
xchg
insb
xchg
inc
nop
clc
inc
in
add
sub
fldcw
dec
inc
jo
and
xor
fs
push
inc
add
pop
add
and
cmc
and
add
fcoml
and
jbe
and
pop
mov
cmpb
and
subb
aad
packsswb
push
or
mov
jo
mov
inc
or
rorb
and
nop
rcrl
jno
sti
sbb
jge
outsb
jb
or
dec
outsb
outsw
es
pop
fwait
xor
scas
shll
push
stos
sbb
mov
lods
sarb
pushl
jbe
sti
mov
push
outsb
jb
and
sub
inc
outsl
js
or
rcrl
push
dec
adc
jno
add
and
or
jns
dec
adc
xor
nop
and
gs
andb
andb
adc
jge
shrb
insl
insl
dec
jae
lods
lcall
xchg
pusha
addr16
sti
add
cltd
jb
rcrl
pop
js
fs
add
mov
pop
and
sbb
or
jmp
sbbb
cwtl
pop
stos
shll
inc
int3
dec
dec
shll
jo
jmp
mov
pushf
mov
sti
rorl
sbb
dec
pushl
add
jecxz
stos
rcrl
pop
call
arpl
lock
mov
adc
or
sub
je
inc
rclb
outsb
pop
ret
je
rcl
or
adc
sbb
sbb
bound
xor
mov
inc
rdtsc
stos
push
test
jbe
xor
leave
adc
mov
cmpsl
fs
jno
gs
cltd
sbb
lods
push
push
arpl
push
dec
or
shr
and
imul
mov
xorl
cwtl
sub
pop
jns
pop
add
xor
sub
clc
or
xchg
add
lds
adc
outsl
jecxz
in
roll
insl
mov
mov
sbb
addr16
sub
add
fiadds
pop
xchg
add
clc
pusha
push
aas
repz
xor
push
add
pop
pop
xlat
out
movsb
push
or
dec
mov
dec
add
jae
dec
mov
jae
sbb
jo
xchg
shrb
add
sub
dec
sub
pushf
mov
pop
push
gs
lret
outsl
and
mov
jne
lea
jecxz
inc
and
pop
movsb
jmp
xor
jae
and
repz
lcall
inc
add
lea
xor
gs
jmp
xlat
inc
imul
xchg
pop
out
loope
xlat
add
adc
sbb
lds
jb
xchg
jne
xor
xor
xor
add
jmp
outsb
xlat
xor
popf
xchg
pop
dec
or
out
pop
addr16
jo
popf
addr16
mov
adc
xchg
pop
xor
and
out
add
sub
dec
mov
push
sub
or
orl
daa
dec
dec
imul
push
daa
ss
cli
fdivl
mov
pop
and
adc
jne
je
xchg
adc
and
xor
ja
imul
and
add
cmpsl
fs
or
test
lret
decl
lret
or
xor
test
nop
xor
xor
icebp
lcall
jne
xchg
xor
xor
adc
das
adc
call
xor
push
es
xor
xor
xor
xor
jg
loopne
movsl
xor
mov
aaa
pop
aaa
je
mov
or
pushl
aaa
aam
aas
cmp
cmp
sub
pop
cmp
cmp
cmp
cmp
mov
xor
inc
ds
ds
movsl
lret
and
mov
addr16
ja
xchg
sarl
aas
aam
cld
pushl
pop
xor
xor
and
sub
bound
or
or
test
push
and
sarl
mov
push
hlt
jl
xchg
out
popa
adc
fildl
inc
out
flds
cmpb
sbb
divl
incb
out
add
adc
dec
inc
jle
inc
and
and
pop
sub
pop
and
pusha
and
out
test
outsl
add
inc
adc
or
and
add
and
or
out
cmpl
dec
daa
inc
push
dec
push
and
add
xor
add
lcall
add
push
imul
scas
mov
lcall
negl
inc
ret
sbb
in
add
fcoms
imul
dec
xlat
or
sbb
pop
add
inc
rorl
sbb
incl
dec
pop
and
ret
test
dec
lcall
out
and
lahf
outsl
lds
lods
cmp
movsl
ljmp
stos
mov
dec
push
adc
das
cmpb
xchg
push
inc
or
fdivl
and
daa
and
push
add
jb
in
adc
jns
scas
in
or
or
or
jns
or
and
repz
inc
inc
aad
and
add
or
push
pop
cmpb
and
push
enter
sbb
pop
and
repnz
or
or
inc
or
lea
and
call
out
out
sbb
cmp
or
jmp
cld
and
lock
nop
call
or
sahf
loope
add
pop
hlt
lret
mov
add
fsubr
clc
cmp
je
jle
push
push
mov
lea
cmpl
lds
movsb
jne
add
xorl
lea
leave
push
mov
lahf
andb
mov
mov
mov
incl
incb
fs
test
push
in
and
nop
pushf
fs
or
mov
mov
push
imul
dec
es
aas
pop
cmp
mov
ljmp
jnp
ja
add
lea
popf
sbb
je
test
shlb
call
push
or
prefetch
and
pmulhuw
outsb
cmp
push
pusha
mov
cmp
pop
popa
adc
mov
adc
clc
daa
push
adcl
xor
push
inc
cmp
in
adc
jnp
xor
push
cmpsl
inc
pop
and
or
and
cmp
or
or
clc
into
fidivs
lea
rcll
xor
loopne
adcb
enter
aad
pop
cmp
push
fs
inc
mov
mov
pop
jle
inc
add
lea
insl
in
idivb
sbb
lret
es
pushl
sub
pop
mov
or
imul
cmpsb
test
ret
inc
or
pop
das
push
pop
or
aad
push
pop
outsb
sub
xchg
mov
and
mov
sbb
clc
dec
mov
decb
mov
clc
jle
lea
sbb
outsl
jge
cmpl
jle
cmp
jne
mov
inc
jne
mov
nop
add
leave
jecxz
fs
xor
xchg
xor
push
xor
push
jae
adc
lcall
inc
inc
and
sarb
inc
out
jmp
and
and
inc
sub
dec
inc
addr16
cltd
add
call
addb
notb
xor
mov
push
dec
cmpl
and
lods
and
push
sbb
mov
push
das
ss
or
mov
cmp
sbb
add
fcoms
fdivrp
or
jnp
add
ret
lea
pop
mov
repz
mov
jb
dec
xor
aas
pop
das
xchg
mov
add
cmp
or
add
cmp
jl
jmp
push
js
rclb
mov
pop
mov
shlb
lds
shlb
jbe
jecxz
push
adc
daa
mov
mov
add
push
and
fs
or
inc
and
cmp
pop
aad
cwtl
and
push
xchg
out
sbb
pop
mov
cmpl
mov
lea
xchg
cmp
lcall
push
cmp
or
insl
idivl
sbb
pop
les
es
sbb
call
dec
mov
and
int3
pop
push
mov
xchg
insl
push
test
and
add
sub
mov
sahf
and
mov
ljmp
sub
or
adc
xchg
pop
mov
loop
aas
add
cltd
or
clc
adc
mov
negb
inc
test
dec
int
ficomps
dec
lret
iret
nop
insb
push
inc
lahf
add
and
loopne
call
pop
in
mov
lea
lret
rorb
push
fwait
insb
iret
push
jne
imul
or
xor
xor
fcmovnu
fnsave
xor
xor
fnstsw
loope
xor
xor
jecxz
jecxz
mov
mov
fisttpl
orl
insb
pushf
cmp
fdivr
idiv
decl
xor
repz
xor
jo
setne
data16
dec
mull
inc
sub
int
andl
aam
add
and
mov
enter
shrb
idiv
lcall
dec
shlb
and
shlb
lcall
mov
popa
in
pop
adc
xlat
push
cld
out
sbb
dec
mov
pop
stos
sbb
push
push
push
out
nop
fiaddl
and
adcb
insb
fs
add
adc
inc
inc
xor
ss
add
movsl
add
push
and
adc
les
dec
xor
es
xor
and
jbe
mov
xor
int3
outsb
cwtl
add
mov
aaa
adcb
sub
and
add
imul
fwait
clc
setg
sub
bound
add
bound
pop
arpl
add
jo
outsb
ja
inc
outsb
jbe
outsl
outsb
xchg
call
jae
jle
push
dec
add
sub
addb
mov
jg
or
add
cmp
subb
mov
or
add
dec
testl
outsl
jbe
jb
jb
stc
pop
dec
outsb
popf
insl
fcom
das
fisubrl
inc
mov
into
add
je
outsl
insb
jae
dec
inc
adc
jo
and
pop
add
xor
stos
add
sbb
jne
add
and
xor
adc
adc
into
outsb
mov
addr16
fdivl
add
enter
insl
mov
or
out
push
pusha
mov
daa
dec
mov
pop
mov
movb
mov
das
dec
xor
xorb
cltd
mov
clc
cli
xor
xor
or
lcall
xchg
xor
xor
xor
xor
xor
pop
shl
xor
fdivl
jmp
jg
decl
aaa
cmp
dec
in
cmp
mov
cmp
cmp
jle
cld
sbb
cmp
add
cmp
cld
outsl
stc
aad
jecxz
inc
cmp
cmp
cmpl
inc
cmp
dec
cmp
xchg
cmp
or
pop
ja
add
mov
and
pop
mov
add
push
inc
sbb
mov
xor
push
add
jb
adc
push
gs
jne
arpl
sti
mov
xor
je
hlt
xchg
dec
mov
popf
push
add
add
xor
jmp
pop
test
popf
pop
add
inc
mov
mov
add
dec
stos
mov
mov
sbb
lock
mov
aaa
pop
insb
dec
mov
push
shr
sub
add
and
test
sidtl
int
add
and
arpl
adc
mov
into
add
test
mov
add
nop
add
lods
or
mov
lods
mov
or
leave
leave
stos
push
or
lock
orb
jb
add
push
and
xorb
pop
lds
xchg
rclb
push
dec
clc
leave
pop
nop
add
nop
and
add
add
add
incl
add
add
add
add
popa
add
call
int
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
