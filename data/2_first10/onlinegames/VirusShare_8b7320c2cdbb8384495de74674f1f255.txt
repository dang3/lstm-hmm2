mov
add
mov
rorb
add
in
sub
andb
xor
inc
lock
icebp
imul
fwait
in
fisttpl
cmc
popa
pop
divb
cs
stc
insb
out
fildll
cli
insb
lea
push
call
rcrb
or
xchg
je
push
add
sti
out
ss
and
icebp
add
jmp
push
push
adc
fistpll
popa
ss
mov
pop
adc
ja
sbb
clc
mov
and
insb
jbe
mov
inc
push
push
push
sbb
push
pushl
jp
mov
in
sbb
dec
push
inc
add
push
mov
sahf
dec
inc
jne
sub
pop
xor
pop
leave
ret
mov
adc
mov
mov
add
mov
cmp
imul
mov
push
inc
mov
or
pusha
pushf
xchg
insb
popf
popa
mov
lcall
dec
or
cmpb
pop
push
mov
and
gs
mov
fcomi
cmp
and
adc
mov
and
ret
sbb
inc
add
subl
sti
pushl
js
mov
push
loopne
push
in
pushl
xor
jmp
push
call
mov
mov
mov
push
add
mov
fsubrl
loope
orb
add
push
push
push
push
push
sti
mov
push
fcoml
mov
jne
jae
loope
sbb
push
push
push
fcmovnu
call
pop
jmp
push
pop
ret
mov
dec
cld
incl
rorb
clc
addr16
ret
lret
sbb
pushf
inc
lcall
xchg
mov
mov
push
inc
push
enter
jno
dec
test
out
mov
xchg
pop
sub
and
daa
jl
into
arpl
mov
add
sbb
or
xchg
or
incl
add
inc
and
pushl
mov
sti
out
cmpsl
or
dec
ret
adc
jmp
out
fidivrs
rep
data16
aam
data16
ljmp
out
or
push
stos
pusha
incl
xor
stos
lea
jmp
mov
pusha
xchg
mov
cwtl
xor
test
in
decl
call
bt
mov
jnp
repz
xor
aaa
xchg
pop
fstpt
push
add
fs
dec
cmp
cmp
push
adc
inc
int
fnsave
sub
mov
sbb
out
mov
mov
cwtl
jo
dec
ret
or
movsl
pop
mov
jnp
mov
daa
test
or
divl
dec
and
daa
inc
ret
pushf
pop
sti
mov
push
add
mov
xor
lea
pop
cwtl
xchg
outsl
in
push
call
cltd
sbb
popa
movsb
nop
adc
xor
nop
pop
test
popa
sbb
test
pop
je
push
stos
jl
mov
es
push
push
lea
in
jbe
aas
add
test
iret
rorb
shrl
aas
rcl
aad
call
xlat
fdivrs
fisttpl
aas
fimuls
dec
roll
loope
jecxz
in
mov
pop
jmp
add
or
mov
aam
cwtl
popl
mov
push
in
lcall
add
ret
gs
in
in
aas
out
mov
lock
lcall
repz
hlt
cmc
imul
cli
xchg
aas
inc
mov
test
add
mov
mov
push
loop
xchg
ret
and
mov
hlt
xlat
push
pop
pop
or
jmp
subl
add
scas
fistpl
pop
scas
mov
pop
adc
add
add
cwtl
xchg
rclb
cmp
jl
pusha
pop
xor
stc
mov
ret
or
jmp
xor
popf
in
test
sub
add
popf
mov
xor
mov
pop
ja
push
cmp
daa
shl
addr16
sahf
cmp
push
jmp
fmull
jmp
sbb
jo
stos
lods
gs
ja
xor
cmp
loope
shll
test
dec
inc
pop
push
xor
shll
dec
push
inc
cs
testb
pop
inc
mov
lea
jmp
inc
cmpsb
imul
lcall
lret
pop
lcall
les
mov
aas
subl
push
push
push
lahf
xor
cmp
lret
push
mov
lahf
inc
jmp
push
fldt
rclb
xor
nop
dec
sub
inc
cmp
mov
insl
push
cmp
addr16
adc
iret
or
cs
je
adc
push
test
mov
daa
clc
add
mov
jmp
adc
in
xor
xor
sahf
clc
test
popa
sbbl
in
mov
orl
dec
sbb
or
std
mov
mov
or
or
cmp
fs
add
rolb
inc
inc
xor
xor
ret
xchg
jnp
fcmovne
call
cld
mov
jno
mov
movl
or
pop
mulb
mov
and
lea
push
adc
lea
push
or
add
sub
cmp
cmp
je
push
or
out
xchg
or
adc
push
clc
sub
sbb
xchg
je
jmp
mov
in
push
sbb
adc
mov
mov
out
sbb
pusha
push
push
int3
mov
fdivl
jmp
ficomps
mov
iret
or
xor
inc
sub
roll
pop
es
pushf
shlb
sub
rolb
loope
mov
loopne
out
outsb
pop
shll
fcompl
mov
cmp
sti
ja
outsb
fcmovnbe
pop
jmp
cmp
jl
or
pop
sub
push
push
add
int
push
mov
add
aaa
mov
push
cmp
arpl
andb
mov
fidivrs
stos
mov
int3
pop
imul
stos
add
fsubrs
sub
mov
mov
ret
or
clc
add
sub
std
push
add
mov
push
fbld
and
mov
push
mov
pop
add
jle
sbb
dec
daa
mov
inc
dec
sbb
lahf
xor
cltd
mov
je
pop
and
sbb
ret
mov
movb
repz
fldcw
aaa
add
sbb
cltd
inc
ljmp
mov
push
sub
or
sub
movl
jb
sub
aas
pop
xchg
jne
xchg
inc
or
int
xchg
aas
cwtl
cltd
lcall
jl
popf
add
ret
test
lea
push
mov
outsb
mov
cmp
repz
mov
inc
add
lock
loopne
test
push
outsb
jmp
cmp
lcall
out
jmp
test
dec
into
dec
xchg
packsswb
data16
dec
addr16
lea
in
or
clc
add
lea
adc
push
and
or
add
addr16
push
lock
mov
mov
fistpll
and
fisttps
add
ljmp
in
inc
movsb
xor
fldt
adc
xor
lods
scas
scas
mov
mov
dec
shll
mov
mov
shll
mov
dec
mov
ret
les
negb
sahf
into
jecxz
add
and
insb
in
in
in
outsb
push
outsl
jo
imul
into
dec
xchg
xorl
dec
dec
js
jmp
imul
in
add
push
shll
aas
add
xor
fs
mov
xchg
shll
push
mov
lea
sub
clc
lret
jl
xor
fwait
lea
and
adc
push
sbb
pop
popf
sub
and
sbb
push
adc
pop
jl
mov
pushf
stc
jge
sub
call
and
add
xor
mov
test
fdivs
mov
and
fwait
or
add
sub
or
jmp
lods
or
xlat
pushf
mov
inc
mov
lahf
je
adc
lock
jle
cmpl
or
push
ficompl
lock
dec
adc
fadds
jl
leave
mov
pop
jns
inc
repz
or
mov
xchg
xchg
leave
cmp
sbb
inc
loopne
in
nop
adc
sti
cmp
jne
daa
jmp
push
lods
sarb
call
mov
add
enter
popa
shl
jne
or
xor
in
push
push
and
xor
and
add
in
xchg
loop
mov
jbe
fsubrl
pop
xchg
push
fs
or
loopne
push
and
shrb
dec
les
fsubrl
push
add
fstl
std
les
enter
inc
jnp
push
inc
stos
inc
das
mov
and
cld
aad
les
and
add
xor
dec
pop
mov
icebp
sub
aas
push
mov
push
scas
inc
lds
push
mov
test
je
int
cmp
test
push
xor
sbb
add
push
jnp
xor
mov
inc
and
adc
lea
mov
jp
jecxz
sbb
lock
fwait
push
or
cmp
push
or
push
jb
push
inc
mov
fcoms
pop
clc
and
mov
iret
cld
cmp
or
xchg
jle
add
jg
es
mov
insl
sbb
into
outsl
aaa
in
scas
pop
fwait
and
sbbb
mov
mov
arpl
dec
test
xchg
sbb
call
imul
pop
jmp
add
or
nop
mov
decb
dec
andb
push
inc
jp
inc
xor
je
cmova
movsb
push
insb
test
push
mov
pop
ret
je
pop
popf
mov
and
or
rcrb
lock
pop
xor
shrl
pop
and
sbb
and
gs
gs
xchg
test
jo
addr16
gs
xchg
dec
push
cs
pop
push
in
jg
xchg
rolb
push
inc
xchg
fmull
fnsave
push
adc
cmpl
mov
cmovns
out
aas
lret
jb
inc
and
aas
dec
cs
add
cmp
cmp
mov
push
cmp
push
mov
xchg
cld
push
push
cmp
dec
cmp
ss
sbb
sub
xchg
scas
call
scas
fs
sub
jbe
mov
sub
push
sbb
and
sbb
rclb
repnz
sbb
sbb
ss
mov
push
je
adc
sbb
inc
mov
pusha
pushf
lock
inc
cmp
dec
mov
dec
mov
or
lock
ds
inc
outsb
test
icebp
pusha
subb
cltd
in
xor
xor
enter
jl
adc
dec
mov
cmp
sub
push
jl
int3
mov
xchg
enter
cld
cmpsl
sub
mov
or
shlb
rclb
add
clc
mov
or
jg
or
es
mov
jge
dec
sub
ljmp
cmp
add
push
fs
jo
andb
push
push
mov
add
shl
mov
in
mov
sbb
xchg
fstp
int3
sbb
nop
je
adc
lret
sub
xor
jns
sub
xor
popf
loopne
or
adc
mov
fstl
sub
adc
mov
mov
js
movsb
js
sub
sbb
xchg
sub
movsl
lock
movb
pop
sbb
ss
enter
scas
sub
call
addl
xor
test
mov
cwtl
loopne
jb
pop
push
and
icebp
mov
js
das
cmp
xor
subl
scas
add
shll
push
sbb
push
rcrb
mov
sbb
roll
test
push
cmpsb
jnp
pop
enter
add
cld
lods
xor
mov
mov
cmp
push
popa
jl
dec
hlt
cmp
les
xor
xor
repnz
add
dec
dec
pmulhuw
leave
add
xchg
mov
mov
adc
fdivl
out
lods
ficoml
adc
adc
push
jmp
or
pop
loope
ja
xor
rorl
mov
insb
call
test
mov
sti
pop
cmp
lods
xor
ret
cmp
adc
push
into
ffree
pop
jge
xor
and
je
rolb
pushf
sahf
stos
sbbb
jge
mov
lahf
cmp
xor
xor
mov
int
into
inc
iret
dec
mov
dec
data16
rorl
imul
imul
xchg
imul
popa
shll
insl
fldt
push
adc
and
daa
int3
jae
fimull
mov
adc
enter
mov
inc
call
test
mov
mov
enter
movsb
push
or
or
mov
adc
test
test
push
je
bound
fprem1
sub
fadd
dec
sbb
sbb
loope
aas
repz
jmp
adc
pop
sub
cmp
sub
mov
int3
fdivrs
psubw
inc
or
or
pop
or
mov
jo
test
aaa
mov
mov
cmpsb
and
cld
xor
aaa
fs
mov
int3
jno
clc
std
push
fistpl
jbe
cmc
push
adc
xchg
aam
fs
sti
cld
xchg
pushf
mov
or
lods
mov
das
xchg
sahf
or
test
push
inc
mov
mov
popa
mov
push
sbb
negb
loopne
jecxz
cmp
es
enter
sub
adc
in
addl
in
xchg
xchg
call
xchg
xchg
in
aas
aas
push
movsb
pop
push
fsubrl
cs
xchg
cmc
xchg
adc
or
adc
add
cmpl
lea
sbb
and
pusha
pop
xchg
aas
mov
aas
xchg
xchg
gs
test
jne
cmp
nop
aas
jge
adc
mov
and
jecxz
sti
in
pushf
lea
cwtl
push
js
pop
pop
pop
mov
lods
pusha
sti
sub
and
fsub
or
mov
push
cmc
jne,pt
mov
jnp
push
mov
xor
in
testl
adc
andb
in
aam
sub
and
sub
and
mov
lea
add
or
call
adc
ja
shll
hlt
lea
jne
ljmp
sbb
inc
sub
xor
pop
shll
inc
pop
pop
mov
push
and
mov
push
and
and
sub
add
add
clc
inc
push
lcall
imul
fidivl
fsubl
shll
iret
fisubrs
loopne
loop
fst
dec
jecxz
push
in
sub
aam
jo
fwait
mov
xor
sub
push
dec
mov
pop
jge
mov
add
icebp
jle
aad
mov
js
jp
jne
data16
je
push
mov
js
dec
mov
or
mov
pop
cmp
xor
mov
xor
data16
adc
call
leave
cmp
xor
pop
xor
xchg
xor
add
loopne
loope
add
xor
in
psubb
jne
adc
push
test
pop
loopne
xchg
add
sub
mov
xor
mov
or
rol
nop
in
dec
inc
in
pop
mov
loopne
xchg
popf
popa
push
mov
sarb
push
lahf
inc
push
and
orb
push
push
push
push
pop
xchg
and
outsb
push
aaa
push
cmpsb
gs
outsb
mov
xor
pop
lret
fldt
int
into
xor
dec
shlb
shll
insl
xchg
jo
sarl
aam
jp
xor
scas
pop
pop
push
xchg
pusha
test
add
or
pop
sti
addr16
push
pop
and
jae
inc
or
std
inc
mov
andl
jecxz
cld
cmp
les
and
pop
sub
fstps
adc
or
adc
jae
cmp
std
mov
pop
sbb
cmpl
dec
fwait
mov
push
ljmp
mov
jmp
mov
repz
icebp
push
sub
pop
in
repnz
dec
fsubrs
loopne
stos
add
push
addl
lods
testb
test
cmp
adc
pop
xchg
push
or
push
jne
xor
adc
adc
mov
pusha
sub
pusha
push
aad
and
pop
mov
cmpsl
cmp
mov
add
ficoms
in
xchg
add
cwtl
mov
and
or
or
mov
sub
mov
cmp
mov
sbb
dec
mov
jp
jbe
add
or
sbb
mov
and
daa
adc
jmp
sbb
mov
hlt
fsubl
fbstp
insb
adcb
scas
out
or
mov
mov
pushf
push
cmp
xchg
fs
mov
sub
mov
mov
cld
or
or
insb
push
mov
push
xchg
sub
ljmp
stos
pop
outsb
aam
xor
adc
xor
fcoms
test
test
mov
jae
dec
add
pop
inc
cmpsl
test
lock
stc
test
add
stc
sbb
pop
jo
mov
clc
clc
clc
push
mov
sub
push
fimuls
cmp
call
add
sub
cmp
sbb
lods
dec
or
or
ficoms
sub
xorl
rol
insb
ret
stos
clc
and
xlat
inc
pop
enter
xor
add
inc
dec
sub
mov
xor
pusha
cli
sbb
push
mov
or
shl
dec
pop
div
fs
mov
and
pop
mov
pop
int3
add
and
cmp
sbb
orb
sbb
cs
ds
outsl
push
adc
cwtl
imul
rorl
inc
push
lds
cwtl
sub
sub
cmp
or
ja
sbb
mov
add
repnz
push
cmc
cmc
xchg
or
and
pop
leave
cmc
hlt
mov
dec
xor
insl
adc
xor
hlt
adc
xchg
xchg
adc
pop
jae
rorb
xor
rclb
sbb
dec
dec
xor
jl
or
sbb
iret
pop
jmp
js
pop
cmpl
xor
int3
xchg
xor
adc
or
pop
push
cmp
or
xor
out
jl
aam
or
outsl
addl
divl
and
xchg
ljmp
mov
cmp
aaa
mov
stc
outsl
fs
xor
pusha
inc
loopne
sub
adc
jge
subb
stc
fstl
aaa
repz
mov
pushf
pusha
and
cs
out
pushl
inc
and
mov
or
ret
jo
and
xor
movsl
sub
cmp
dec
or
ret
pushf
xchg
mov
rcrb
movzbl
mov
scas
fadd
pop
repnz
cmp
pop
mov
pop
test
insl
sbb
and
or
mov
inc
not
mov
enter
lcall
xor
mov
sub
xor
pop
rcl
shlw
jae
fdecstp
fstpl
call
and
mov
pushf
pop
push
mov
cmpsb
nop
jmp
mov
insl
adc
fwait
sti
push
std
pusha
setb
sub
mov
jge
mov
int3
cmpsb
cmp
or
push
sbb
loope
insl
fldl2t
mov
mov
fidivrl
pushf
mov
fnstsw
cmp
cmp
xchg
bswap
lea
pusha
xchg
lea
imul
call
or
add
push
dec
jbe
fdivrs
cmpsl
jmp
and
xor
mov
sahf
cmp
or
mov
sbb
js
add
cmp
add
cmpsb
cmp
dec
add
rcll
cmp
cli
jmp
or
insl
fdivrs
push
xor
sbb
dec
jl
fistpll
mov
add
inc
cmp
cmp
inc
lahf
and
enter
add
bound
es
mov
push
add
repz
movsl
push
out
and
neg
mov
bts
mov
push
mov
mov
push
add
pusha
sbb
repnz
push
mov
clc
call
sbb
sbb
shr
cmp
fwait
ljmp
add
clc
pop
push
mov
notl
clc
stc
shll
push
dec
fs
push
jmp
xlat
fildll
sub
ret
jle
xor
dec
mov
add
push
roll
xor
dec
push
fmul
or
adc
int3
mov
mov
mov
and
fsubs
lret
ret
pop
loope
outsb
call
jmp
dec
aas
std
inc
xor
adc
lea
inc
push
pop
mov
sbb
xor
sub
divb
andb
xor
or
cmpb
xor
popf
popa
enter
cmp
sbb
xchg
push
pop
cmp
cmpb
pop
mov
push
mov
mov
add
push
cld
rep
sub
imul
pop
push
xchg
adc
aaa
rcll
push
xor
xchg
bound
mov
xorl
adc
aas
leave
jb
jb
addl
jmp
je
push
xchg
mov
es
xor
dec
xor
mov
gs
push
push
shll
mov
mov
and
and
daa
xor
push
sbb
loopne
or
or
adc
ret
jbe
push
add
das
sub
std
shlb
push
inc
mov
jns
lods
jb
subb
inc
cs
shlb
mov
sbb
xchg
test
or
dec
and
pop
dec
ja
mov
das
adc
xor
mov
sbb
and
data16
mov
enter
jo
nop
and
js
cmpsl
push
dec
repnz
xchg
xchg
xor
out
ret
jo
jo
sti
xlat
add
push
mov
adc
ret
fsub
sbb
call
mov
push
ud2
pop
or
xor
loope
icebp
sub
mov
mov
mov
mov
shrb
push
loopne
cli
push
xchg
xor
sar
pusha
dec
adc
divl
int3
fistpl
xor
jae
mov
out
mov
outsb
enter
jns
out
push
or
sbb
in
lret
fdivrs
inc
jb
cli
aam
cli
or
and
enter
pop
push
push
in
add
mov
rclb
faddl
pushf
sub
scas
stos
hlt
mov
push
imulb
jmp
fmul
and
int
bound
push
aaa
lods
add
xchg
aam
lds
popa
add
push
xor
nop
and
inc
pop
fwait
or
dec
jo
jns
mov
or
and
inc
imul
mov
jno
call
sub
lock
adc
or
adc
fstpl
mov
clc
jbe
inc
add
push
or
add
pop
adc
or
pop
push
jl
mov
sbb
sbb
push
add
adc
push
push
and
cwtl
in
push
rorb
sub
inc
sub
leave
enter
or
cmp
sub
int
and
pmulhuw
dec
sub
push
hlt
mov
xor
outsl
xchg
xchg
sub
sbb
mov
adc
jb
push
cmp
push
mov
clc
jbe
inc
sub
pushf
popa
xchg
gs
xchg
insb
pop
inc
outsb
js
hlt
inc
gs
push
inc
cmp
add
into
pop
add
test
jnp
mov
mov
scas
xchg
fs
push
lahf
push
add
cwtl
cmovbe
cmp
push
loopne
and
fldlg2
nop
dec
push
pop
cmp
jle
dec
mov
insb
hlt
out
pop
dec
push
and
sub
lods
test
sub
xor
test
or
xchg
gs
xchg
push
jo
addr16
push
mov
push
cs
fisubrl
jae
or
xlat
adc
sbb
pop
push
mov
popa
add
lds
sbb
rcll
into
mov
mov
push
in
sub
dec
jne
jbe
nop
push
jmp
jbe
in
std
sub
sub
xor
je
stos
push
mov
hlt
xlat
add
pinsrw
cmp
in
adcb
mov
jbe
fidivrl
add
and
sub
ds
pop
bound
sub
cmp
dec
jne
in
xor
xchg
popa
push
or
jmp
sbb
mov
arpl
jmp
push
push
jne
mov
add
or
inc
bound
scas
inc
imul
xor
ds
lcall
cmp
int3
adc
xchg
mov
dec
scas
mov
push
aad
loope
fwait
les
jl
adc
rcrl
adc
mov
xor
dec
faddl
dec
push
xor
mov
aas
pop
fcoml
cmp
jl
cmp
sbb
or
xchg
fstpt
je
inc
add
xor
test
mov
stos
push
xor
dec
xor
mov
push
int3
int
mov
mov
inc
mov
mov
jmp
sub
xor
mov
jp
push
pushf
sbb
fnstenv
les
add
in
aas
les
add
aaa
mov
ret
push
inc
repz
dec
xor
add
mov
addl
inc
pop
dec
fwait
in
sbb
sub
cmp
adc
mov
mov
jl
iret
insb
xchg
or
pop
mov
dec
sti
xor
push
lcall
cmpsb
cmpsl
test
lcall
lods
sub
lcall
add
jae
mov
mov
lock
jge
xchg
inc
es
je
ss
inc
dec
js
jne
xchg
clc
push
mov
sub
cmpsb
and
add
pop
mov
test
sbb
int3
mov
xor
sub
xchg
insb
cmp
and
push
xchg
lods
xchg
sbb
pusha
inc
dec
pushf
fdivl
inc
push
int3
add
add
xchg
movsl
push
add
jle
adc
subl
aas
clc
xchg
dec
mov
aas
test
pop
lea
lcall
cli
xchg
mov
loop
lods
jp
dec
adc
sarl
scas
sbb
sub
adcl
and
aas
cmp
repnz
mov
mov
sbbl
and
in
push
lea
xor
xchg
pop
mov
sbb
pop
dec
imul
call
mov
mov
push
outsb
orb
and
aas
mov
jb
int
test
aas
mov
add
cmp
add
cmp
jmp
imul
jl
aas
adcl
mov
aas
push
or
push
add
inc
lcall
dec
shrl
lea
mov
cmovp
mov
aas
jmp
adc
je
dec
sub
and
pop
jl
inc
inc
inc
aas
mov
test
je
mov
mov
insb
push
fs
push
out
ret
rcrb
xchg
or
dec
or
popf
adcb
sbb
sbb
icebp
sbbl
inc
push
leave
rclb
push
je
inc
rcll
xchg
and
and
xchg
adc
adc
or
push
jne
fs
mov
popa
sti
sub
push
pop
inc
ret
xor
sub
adc
adc
xor
xor
add
jne
push
mov
loopne
roll
xor
xorb
and
rcrb
cmp
pop
call
pop
pusha
xchg
clc
jle
xor
cmp
lock
mov
cmp
int3
sub
repz
lock
cmp
aaa
subb
ss
fimull
and
dec
push
cmp
jb
stc
in
push
movsb
add
inc
rcr
sbb
and
and
dec
shr
add
adc
sbb
pop
push
push
stos
enter
add
add
add
leave
hlt
daa
add
xchg
imul
stos
and
add
hlt
xchg
cmp
adc
call
dec
xor
pop
cmp
sbb
mov
inc
mov
lret
adc
and
pusha
fistpll
add
adc
pop
stc
mov
ret
jo
dec
sub
and
jo
xor
into
pop
xchg
cmp
adc
pop
push
xor
insb
nop
cmc
and
and
xor
push
mov
xchg
loopne
push
faddl
sub
add
pop
test
sub
jl
data16
cmp
or
not
fcoml
loop
dec
lods
add
push
cmp
mov
pop
cmp
aam
stos
mov
or
inc
andb
sub
jbe
clc
dec
push
xor
cmp
fwait
jg
addl
add
sti
in
popf
sub
pop
je
push
push
sbb
inc
pop
and
sahf
rolb
fistpll
cvtps2pi
push
sub
sub
mov
popa
sahf
dec
sub
gs
jns
sub
bnd
iret
sub
add
sahf
dec
push
dec
inc
xor
and
push
data16
dec
mov
iret
and
and
sub
daa
adc
arpl
push
dec
inc
jnp
add
ja
rorb
add
and
insb
lret
dec
jecxz
mov
adc
pusha
lock
mov
or
or
pushf
xor
mov
pusha
push
ret
popa
mov
subl
inc
push
addl
or
mov
mov
mov
hlt
lods
pop
add
cld
stos
push
aad
inc
addr16
stos
icebp
jg
push
aaa
mov
aaa
cmpb
lea
cld
cld
fwait
inc
fwait
mov
divps
push
sahf
das
mov
testb
xor
call
inc
rcrb
jl
xchg
push
cmp
mov
jmp
imulb
pop
push
xor
xor
popf
push
mov
pusha
add
lods
jl
outsl
in
push
jae
arpl
jmp
push
cld
or
gs
mov
push
and
sti
mov
movzbl
mov
adc
push
and
in
mov
add
inc
fistps
cmp
jg
push
and
lea
xchg
mov
mov
outsl
push
cmp
mov
add
inc
xor
pop
frstor
cmp
jb
push
mov
xor
sub
sti
jae
sub
add
shll
enter
mov
add
xor
or
mov
or
pusha
cmp
push
movsb
or
outsb
test
mov
push
cld
cltd
xlat
std
mov
xor
pop
sahf
sub
xor
and
and
hlt
cld
cld
mov
mov
std
daa
int3
into
pop
sbb
push
sbb
pop
xlat
push
in
sub
cwtl
icebp
dec
sub
mov
negb
and
je
sub
mov
ret
and
inc
jl
xchg
addr16
icebp
xor
mov
add
push
mov
adc
adcl
or
test
xor
movsb
mov
push
cmp
cmp
and
adcb
addl
sbb
mov
or
scas
jp
in
cli
cmpsl
jl
nop
pop
enter
add
push
movsl
and
mov
pop
jbe
clc
ljmp
pop
add
pushf
pop
enter
aas
sbbl
and
ficompl
push
lea
lock
cmp
sub
nop
adc
in
add
cwtl
lea
mov
mov
push
lock
faddl
mov
jnp
lea
dec
inc
inc
cmpsb
xchg
aas
aas
aas
call
aam
lea
add
push
pop
pop
and
xor
aas
call
test
xlat
adc
arpl
jmp
dec
dec
dec
push
cmp
xchg
mov
dec
lret
xchg
movsl
pop
mov
jmp
in
in
push
ja
push
or
out
in
pop
pop
pop
pop
iret
add
dec
sti
xor
add
aas
and
adc
addl
add
inc
dec
popa
jb
cs
jb
leave
aas
mov
aas
and
ret
jl
push
or
lea
xchg
pop
cld
push
test
lea
add
adc
add
stos
push
loopne
leave
pop
and
xchg
setp
jne
adcb
addb
lret
repnz
mov
add
xor
adc
lds
ljmp
imul
in
aam
xor
mov
ja
mov
mov
mov
mov
pop
lret
push
out
pop
or
sbb
adc
je
push
popa
push
add
clc
push
jo
inc
cmpsb
jl
sub
xor
pop
fisubl
jne
or
adc
mov
mov
add
add
add
cltd
idiv
mov
fstl
mov
and
adc
les
les
loop
jg
aam
inc
pop
out
js
test
adc
jg
test
decl
dec
jle
push
cltd
pop
idiv
test
jne
mov
cltd
sub
inc
jno
or
push
dec
xor
adc
jle
mov
jle
inc
setl
dec
and
movsbl
or
idiv
ret
lret
adc
mov
mov
jecxz
pushl
lret
add
cmp
in
adc
loope
add
mov
inc
inc
addb
jl
adc
aad
aaa
cmpl
dec
mov
mov
es
jne
mov
movsl
or
cmpsb
mov
pop
movsb
ljmp
jle
lret
dec
or
cmp
hlt
jbe
mov
mov
movsl
icebp
cmp
pop
push
clc
out
ret
adc
mov
es
xor
add
mov
adc
sbb
or
test
pop
adc
jl
lods
loope
push
andb
in
pop
in
or
shll
sbb
xor
mov
inc
decl
adc
insl
sbb
mov
lock
push
pop
roll
aam
outsb
cwtl
rclb
push
push
pop
idiv
lock
outsl
ja
push
or
jb
pop
pushf
push
jns
shlb
fdivs
clc
pusha
jecxz
push
cmp
lock
push
inc
pop
add
pop
pop
lock
pushf
push
mov
sub
sbb
inc
mov
or
andb
mov
lahf
push
adc
pop
aam
loop
add
xor
pop
or
or
jle
pusha
cmp
test
fidivl
push
insl
mov
mov
and
outsl
push
inc
mov
mov
inc
or
mov
and
ljmp
mov
xchg
xlat
adc
inc
pop
repz
frstor
and
adc
add
xlat
addl
inc
fmulp
out
insl
add
xor
xchg
or
jge
loopne
jo
push
lock
xchg
movb
inc
neg
add
sub
decl
jmp
arpl
iret
mov
and
loope
loope
lock
es
mov
lea
inc
sub
jne
mov
leave
bnd
insl
das
out
inc
leave
mov
out
add
loop
jno
div
mov
mov
sidtl
mov
mov
sbb
add
jo
sahf
xchg
fs
lods
pop
notl
loopne
mov
adc
rorb
push
xor
clc
outsl
jl
sub
mov
mulb
mov
jg
add
pop
xor
adc
adc
je
movsl
repnz
loope
sbb
adc
sbb
mov
jne
dec
js
inc
aaa
cmpb
mov
jne
mov
imul
jmp
call
sbb
push
fcoml
inc
roll
popf
and
addl
push
out
push
xchg
jmp
movsl
mov
push
push
dec
cs
dec
add
push
mov
filds
inc
dec
cmp
jl
dec
sub
inc
fbstp
or
add
in
inc
iret
and
add
in
or
stos
push
xor
ljmp
call
jg
leave
sbb
mov
dec
int
and
add
lds
push
cmc
adc
pop
in
in
add
addl
or
js
outsb
add
mov
add
adc
test
inc
es
sub
adc
testl
lahf
ret
jge
test
jmp
jecxz
sub
push
jmp
fildll
push
inc
jp
sti
mov
fcmovb
add
mov
sub
xchg
ret
mov
adc
mov
pop
mov
xchg
js
lods
scas
pop
add
pusha
mov
jne
mov
mov
scas
mov
mov
popf
fisttpl
sub
fwait
pop
mov
mov
mov
popa
jns
jb
clc
sub
jnp
pop
scas
ret
push
dec
ret
and
nop
pop
in
into
cmp
jno
xchg
je
inc
mov
jp
test
mov
mov
ret
pop
mov
push
cmpb
jne
lea
add
leave
fisubs
mov
pusha
mov
fistl
dec
adc
or
dec
add
sbb
ret
cmpw
cwtl
dec
dec
outsl
aam
cmp
lret
push
inc
cmp
mov
inc
orb
jb
inc
or
je
gs
jl
stos
hlt
xlat
je
sbb
adc
pop
cmp
sbbb
push
test
or
jae
js
call
loope
or
dec
jl
sbb
aas
je
cmp
or
insl
sbb
sbb
sub
mov
incl
int3
inc
jmp
push
orb
mov
xor
xor
push
addl
mov
mov
add
ljmp
push
mov
loop
mov
mov
outsb
movsb
psraw
jle
cld
push
iret
hlt
fs
cld
fisubrs
das
xchg
xchg
lea
push
push
mov
push
hlt
mov
and
cmp
fidivs
sbb
pop
sub
push
imul
push
push
fs
sbb
sub
cs
or
add
inc
pop
andb
in
pop
or
loop
sub
repz
popf
outsb
repnz
not
cmc
loopne
and
push
push
mov
dec
aaa
loope
or
mov
loope
xor
sub
adc
mov
sub
add
add
shlb
push
imul
pop
fisttps
loope
loop
pandn
pop
sbb
push
add
xor
or
mov
add
inc
push
lret
jae
sub
bound
pop
push
cmp
mov
hlt
cwtl
addr16
cwtl
mov
mov
jbe
jae
aam
testb
call
test
xor
fldcw
fdivr
mov
mov
xlat
fwait
pop
add
fdivs
arpl
mov
cmp
je
pop
lock
add
sbb
ror
lock
add
sbb
xchg
pop
mov
inc
inc
fs
lahf
cmp
inc
sub
push
mov
cwtl
xchg
mov
lods
aam
adc
clc
mov
test
lret
out
mov
lret
mov
mov
sub
ret
enter
and
add
cmc
mov
in
pop
jmp
dec
test
adc
hlt
push
out
jge
add
bound
pop
insb
adc
add
push
pop
xchg
mov
stos
fstpl
clc
mov
pop
es
mov
imul
in
mov
ret
ret
jae
pushl
mov
cltd
push
pop
hlt
or
lds
es
lea
xchg
and
shrb
outsl
ss
or
add
ss
adc
jmp
cmp
rolb
lods
mov
dec
leave
test
test
in
sbb
sub
jns
or
enter
mov
pushf
cmp
dec
mov
fs
test
mov
enter
dec
call
cmpsb
pusha
call
pop
mov
data16
sbb
or
and
push
nop
cmp
or
dec
push
pop
xorb
fldl
std
pop
mov
dec
add
enter
repz
mov
cmc
adc
push
or
or
mov
cmovs
adc
or
inc
loop
or
mov
adc
add
and
in
pop
sub
int3
cltd
iret
leave
xchg
sar
flds
clc
add
or
js
mov
adc
arpl
test
cmp
je
pushl
pop
aas
decl
pop
add
xchg
ret
test
clc
out
and
add
push
lahf
xchg
clc
popf
mov
push
mov
in
mov
sub
out
xor
roll
jl
sbb
and
inc
cmp
adcb
loopne
or
cmp
sbb
dec
mov
fldcw
lcall
mov
adc
or
sahf
jo
adc
jl
mov
stos
inc
xor
nop
push
adc
adcl
add
sub
mov
loope
cld
adc
mov
cmp
sahf
push
fs
add
incb
call
push
movb
in
out
out
gs
xchg
or
outsl
adc
xchg
fs
mov
pop
leave
push
imul
pop
xor
xor
inc
and
add
insb
mov
aam
clc
or
jmp
ret
xchg
sub
cmp
inc
push
inc
test
xor
inc
addr16
je
jns
popf
leave
dec
mov
xor
xchg
xchg
cmp
pusha
mov
jg
es
add
cs
or
xor
lret
inc
cmp
fadds
mov
loop
out
inc
dec
testb
add
xchg
out
jmp
sub
push
cli
and
movzbl
cmp
mov
mov
mov
fisubs
cmp
and
leave
ja
inc
jg
jo
popa
push
ja
jb
ret
stos
imul
dec
or
jno
sti
push
in
pusha
and
jmp
iret
add
add
lcall
movb
scas
ljmp
icebp
lock
push
or
push
add
mov
sbb
sub
in
cli
in
addr16
jge
lea
clc
imul
inc
pusha
push
and
push
or
jae
cmpsb
xchg
xchg
sub
insl
push
cld
sti
inc
cmp
push
or
aas
adc
rcrl
sub
adc
xor
mov
adc
and
insl
dec
inc
jno
std
add
shll
push
cs
dec
gs
cmpsl
insb
leave
add
in
outsl
insl
ja
add
icebp
push
enter
mov
and
iret
leave
mov
cmp
mov
cmp
adc
rorb
mov
mov
mov
push
push
push
mov
mov
pop
mov
jne
aas
addr16
leave
call
leave
leave
and
pop
and
adc
lods
pop
inc
push
lcall
pop
ja
lret
cmp
sbb
jo
pop
ret
pop
and
mov
dec
hlt
and
imul
xor
inc
cmc
inc
cmp
enter
jns
sbb
lock
cmc
cmp
inc
mov
mov
xlat
and
add
pop
cmp
mulb
add
or
push
sbb
in
push
push
jbe
cltd
test
push
aam
test
mov
daa
mov
std
xor
sub
inc
push
or
or
gs
pop
lcall
sbb
xor
mov
inc
dec
xlat
push
xor
ja
fcomp
push
fisubrl
xor
fsubl
fnsave
pusha
je
or
bound
loopne
jns
roll
and
sub
mov
pop
outsl
or
xor
cmp
nop
pop
mov
mov
jbe
push
dec
cwtl
int3
add
nop
mov
cmp
idivl
or
jae
sub
mov
jb
xchg
mov
lock
add
ret
aas
jl
sbb
je
loopnew
fwait
mov
daa
fs
js
je
dec
in
outsb
cmp
or
je
filds
decl
pop
add
jmp
and
jne
push
and
insb
bound
jne
jmp
andl
in
mov
nop
adc
add
je
insl
adc
arpl
es
ja
and
xor
push
lea
cmp
jb
mov
das
fimuls
js
call
push
ja
jmp
shl
sbb
andl
aad
adc
daa
add
sbb
outsb
stc
fdivrp
fistpll
cmp
je
add
jne
fs
fdivl
ljmp
or
push
out
xorb
sbb
dec
pop
aaa
push
push
and
inc
add
mov
add
and
cmp
je
pop
or
xor
dec
push
mov
lods
cwtl
iret
repnz
jmp
sub
rcrb
daa
scas
pop
add
gs
mov
pop
into
add
pop
lods
cmp
int
or
push
add
pcmpeqw
imul
add
prefetch
add
ret
jne
mov
add
imul
or
adc
adc
jnp
cmp
or
and
daa
or
movsb
sbb
or
mov
add
nopl
das
jmp
and
add
mov
add
xorb
and
add
jnp
out
mov
rdpmc
sbb
sub
xor
push
lods
dec
pmulhuw
data16
push
sbb
cmp
add
jne
jmp
inc
dec
add
sub
das
jne
mov
add
inc
add
jmp
or
add
inc
cmp
inc
mov
add
cmovp
add
sbb
jecxz
sub
mov
add
push
aas
out
add
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
popa
jmp
fs
imul
jo
jb
je
jbe
js
jp
xor
xor
divb
cmp
sub
pop
fiadds
loop
pusha
frstor
pop
daa
add
punpcklbw
pusha
das
mov
add
punpckldq
add
por
pop
add
addr16
sub
mov
add
std
stc
stc
push
pop
js
std
and
and
push
testb
test
das
addr16
dec
jo
add
sub
sbbb
dec
dec
xor
cltd
pop
mov
push
shrb
cmp
stc
addr16
outsb
jb
dec
or
popa
jbe
inc
je
in
out
imul
push
sub
jb
jne
insb
push
ja
mov
arpl
popa
jo
insb
insb
outsl
arpl
je
outsl
cmp
arpl
jae
sbb
gs
jg
rcr
jo
sbb
outsl
imul
inc
fs
insl
ja
jne
je
sbb
imul
outsl
adc
push
outsb
jne
inc
pop
mov
gs
sbb
push
jns
and
inc
gs
xchg
or
jnp
inc
js
pop
outsb
fs
push
outsl
jne
arpl
pop
sbbl
arpl
jnp
push
imul
pop
fwait
mov
mov
punpcklwd
mov
sti
ret
gs
popa
insb
or
mov
std
adc
insl
mov
pop
mov
outsb
je
cmp
inc
or
inc
imul
cmp
arpl
subl
outsb
push
mov
pop
jnp
je
ss
jb
mov
in
idiv
dec
dec
gs
add
push
jne
jns
outsb
outsw
adc
loope
sahf
adc
imul
fcomps
adc
xor
push
pand
int3
subb
mov
aas
inc
cli
pop
pop
xorb
cmp
shrl
ds
test
jo
xor
add
outsl
je
push
sbb
adc
pcmpgtb
bound
dec
gs
pop
and
sub
mov
and
jne
in
into
mov
ret
push
mov
popa
addr16
jbe
or
scas
andb
and
xchg
aas
pop
mov
xor
add
outsb
adc
paddsb
jb
adc
adc
xchg
adc
mov
outsl
ja
inc
cld
test
movsb
add
dec
je
jo
popa
fldenv
inc
cmp
int
mov
xchg
fs
decl
mov
inc
jbe
sub
insl
addr16
loopne
or
xor
test
call
js
filds
outsb
or
in
mov
dec
imul
or
in
popa
and
push
popa
jbe
addr16
shlb
lret
push
mov
mov
mov
add
pop
pop
aaa
in
add
pop
add
dec
out
sub
pop
push
or
fcompp
jae
sbb
pop
aaa
add
pusha
lret
leavew
or
adc
mov
dec
dec
sub
and
inc
inc
pop
pop
outsb
je
insb
insb
or
shrl
lret
outsl
xchg
cmp
and
jo
xor
xchg
gs
jmp
cmp
xor
lods
cltd
ss
adc
inc
inc
pushl
inc
inc
xor
xor
inc
inc
xor
aaa
aaa
inc
xor
inc
add
xor
xor
xor
adc
cmp
sbb
mov
mov
xor
cmp
push
pusha
ja
fsubrl
bound
imul
inc
gs
jo
add
stc
bound
pop
data16
outsl
jae
mov
out
data16
sub
popa
fiadds
mov
addr16
pop
outsl
add
daa
popa
je
push
mov
and
xor
lea
cmp
sub
in
mov
jb
adc
jo
pop
int3
jg
mull
and
gs
or
outsb
gs
int3
fld
arpl
imul
stos
and
cmp
sub
or
gs
faddl
adc
xor
xchg
dec
addb
das
jae
leave
jg
inc
dec
inc
inc
pop
xor
ss
jo
and
add
stos
and
pop
jo
xor
xor
nop
js
xor
sub
arpl
incl
push
dec
dec
inc
jnp
pop
pop
cmp
es
jne
mov
ja
cmp
jbe
mov
insl
popa
outsb
arpl
push
jns
in
push
arpl
dec
inc
xor
xchg
add
xchg
inc
std
mov
jo
jb
jae
pop
jmp
sbb
sbb
ja
aas
jne
je
inc
jns
push
imul
push
dec
xchg
adc
push
mov
dec
inc
jno
gs
inc
fdivp
jmp
bound
push
push
inc
or
xor
sub
jmp
subb
in
sub
push
fidivs
jb
mov
lea
jo
es
adc
mov
sbb
and
jg
fisttpl
outsb
inc
adc
insl
outsl
shll
outsl
jae
insl
bound
rclb
xchg
outsl
in
ja
jmp
mov
cmp
xchg
outsl
gs
ja
mov
push
jae
dec
push
push
ja
or
push
popa
fcoms
adc
add
mov
test
or
aaa
mov
sub
sbb
sub
jbe
aad
jae
sti
imul
fcmovb
fldt
jo,pn
bound
jns
clc
test
inc
or
inc
push
insl
cs
fs
mov
shlb
or
and
adc
and
filds
sub
mov
sub
or
or
adc
add
imul
sub
pop
add
fadd
dec
push
xor
sbb
xor
clc
xchg
or
bound
pop
test
imul
mov
xor
out
ficoms
nop
mov
pcmpeqb
jns
sub
jo
jae
movb
sti
frstor
out
out
vmread
jb
ja
or
frstor
cmp
cmp
rep
or
dec
pop
test
add
popa
add
jmp
ds
adc
push
xchg
xor
or
or
ja
je
xor
pop
adc
xor
mov
stos
addb
adc
add
je
insl
jl
add
aam
sub
dec
push
push
cs
insb
add
es
outsb
cs
inc
inc
xor
dec
adc
push
mov
mov
adc
or
pop
push
dec
dec
push
inc
cs
inc
inc
addb
outsl
dec
push
cmpxchg
insl
pop
addr16
jae
adc
mov
rcrl
inc
adc
xor
and
add
and
adc
jne
repnz
and
dec
inc
push
neg
inc
out
or
mov
and
fistpl
xor
lea
jmp
shlb
ljmp
int3
je
insl
mov
addb
pop
dec
cmpsb
pushf
pusha
pushl
dec
aas
test
mov
or
pushf
in
add
jae
in
jmp
test
add
adc
and
les
call
mov
xchg
mov
pusha
inc
pop
pop
inc
add
xchg
pushf
push
push
push
mov
dec
or
pushf
mov
mov
push
ret
or
and
aam
movsb
fwait
and
mulb
into
pop
add
insl
pop
sti
mov
add
cmpsb
mov
push
jmp
ja
ja
xor
dec
mov
orb
insb
mov
push
jmp
jmp
test
mov
jmp
out
pop
inc
jmp
push
test
bt
stc
pushf
jmp
mov
clc
xorl
adc
pop
or
mov
sti
pop
fisttps
test
or
add
repnz
cmp
cmp
add
nop
les
sahf
les
sbb
incl
maxps
insb
out
pop
popa
call
mov
add
in
cmp
sar
lods
maxps
lahf
push
cwtl
push
setbe
lea
inc
test
divl
add
pusha
inc
sub
jne
mov
pushf
or
and
and
pushf
insl
loopne
xchg
dec
jmp
popf
rolb
cmp
imul
jl
jne
ja
mov
test
aaa
cmpsb
movsl
aas
repz
lahf
lahf
imul
lock
cs
xor
iret
or
call
fnsave
not
dec
mov
mov
out
xchg
rorb
adc
mov
mov
popa
pusha
ja
out
add
pop
add
call
nop
adc
fwait
xchg
adc
adc
bound
iret
std
sbb
and
jmp
bts
mov
or
dec
cmpl
adc
sbb
mov
in
pop
mov
clc
xor
add
push
add
ret
push
pushf
or
data16
dec
add
sub
adc
call
call
push
jecxz
repnz
outsb
rorb
ret
xchg
shr
das
loop
push
mov
add
sbb
mov
ljmp
jbe
pop
xchg
xor
cs
popf
test
mov
mov
jne
add
xor
push
cltd
mov
arpl
ficompl
push
pop
cli
adc
roll
inc
mov
pop
mov
push
iret
push
lcall
fcmovnb
xor
mov
sub
mov
outsb
imul
xor
int
std
mov
aad
fisttpll
jmp
rcrl
xor
sub
scas
enter
iret
mov
lock
arpl
hlt
nop
add
subb
mov
paddusw
in
fdivs
inc
sub
sub
mov
cmp
arpl
and
call
pop
pop
adc
add
add
adc
in
and
xlat
jmp
adc
in
dec
cs
pop
call
mov
mov
je
pop
jp
hlt
jmp
pop
xor
cld
testl
ret
mov
jle
jp
dec
sbb
mov
ror
mov
or
push
stos
andl
stos
push
ds
sub
mov
and
pop
fdivs
xchg
cli
mov
outsl
inc
lahf
shll
pop
cli
dec
pushf
push
jo
xor
push
and
inc
jecxz
mov
fcomi
mov
in
push
push
dec
out
sub
xchg
mov
or
cmp
mov
jmp
dec
fisubl
cmc
xor
add
jp
jb
ds
mov
push
inc
jp
add
cmp
scas
dec
sbb
mov
movsb
dec
lret
push
mov
or
lahf
add
rorb
mov
push
push
dec
sbb
sbb
pop
pop
mov
push
ja
sbb
sti
or
sarb
mov
jg
jmp
jnp
push
test
add
or
sub
mov
pop
push
add
xor
lahf
imul
push
or
inc
add
sub
jg
dec
xchg
and
int
add
adc
mov
jne
jmp
cs
cmp
xor
jge
adc
das
fstpl
mov
push
add
jns
mov
xchg
add
xor
andb
or
push
xor
ror
clc
sub
xchg
push
xchg
push
and
cmp
into
sarl
mov
mov
and
addr16
test
mov
cmp
and
les
test
adc
add
inc
call
dec
adc
sub
xor
jno
adc
xor
mov
cmpb
leave
jo
mov
xchg
push
adc
pop
jmp
shl
inc
pop
test
inc
mov
in
sbb
and
sbb
insl
sete
inc
call
jmp
and
cld
frstor
mov
push
sbb
mov
pop
mov
pop
js
data16
jmp
enter
xchg
insb
inc
jo
jo
js
call
add
rcrb
cmp
jbe
adc
lds
xlat
rol
adc
dec
xor
mov
push
sub
call
mov
push
push
lods
adc
divb
pop
adc
pop
dec
cmc
popf
jge
mov
ds
push
outsb
inc
push
jmp
incb
aaa
sub
sub
or
pushf
pop
mov
loopne
incb
xchg
clc
data16
lods
filds
mov
aaa
sbb
pusha
repnz
shl
lea
adc
pop
fdivl
scas
popa
sbb
ljmp
aad
int
setno
aas
imul
out
jmp
stc
cmc
idivl
orl
ja
pop
mov
or
not
sbb
inc
clc
mov
jl
aas
lea
outsb
cmp
mov
test
jo
jmp
leave
sub
jle
adc
in
push
push
icebp
pop
xor
pop
sar
or
icebp
pop
dec
daa
addr16
sbb
clc
out
push
stos
push
jmp
aaa
adc
mov
xor
jg
dec
loop
call
fs
arpl
cmp
cmp
ja
pop
dec
lret
outsb
and
imul
test
adc
sbb
jnp
jmp
push
je
das
andl
outsb
movsl
mov
sub
lock
filds
loope
lea
call
mov
aad
jbe
idivb
push
pop
sub
jmp
jns
pop
cwtl
icebp
or
add
call
arpl
daa
adc
mov
jmp
icebp
dec
nop
pushf
push
mov
pop
inc
jnp
cmp
xchg
clc
std
and
or
jg
sub
enter
adc
sbb
and
dec
push
movsb
mov
push
fidivrs
sub
jmp
mov
jae
ret
fstl
mov
sub
int3
sub
mov
add
pusha
mov
sbb
sarb
sbb
and
cmp
adc
pop
cmp
push
dec
bound
insb
add
movups
cs
int
pop
mov
js
aas
movsl
fimuls
out
ljmp
lret
mov
xor
jo
mov
push
jne
ret
faddl
mov
mov
cwtl
mov
adc
int3
ljmp
adc
add
loop
pop
push
cmp
cs
pop
push
sub
sub
andl
inc
xor
adc
outsb
xor
rclb
int3
inc
test
cmp
dec
fdivr
negb
jmp
push
fistps
inc
mov
dec
push
push
outsb
sub
dec
push
dec
icebp
push
hlt
inc
jns
add
loopne
inc
pushf
cld
ret
pop
jg
call
jp
cmp
mov
stos
xchg
pop
sbb
pop
inc
rcr
cld
sbb
jp
loopne
loop
pop
adc
movsb
call
cmp
sti
cmc
xorl
cmp
and
or
mov
and
cmp
xchg
pop
xor
icebp
pushf
sti
sub
push
add
test
push
data16
jmp
push
fwait
dec
or
mov
xchg
lea
xchg
loop
aam
push
push
in
inc
xor
sbb
call
les
call
stc
mov
out
adc
mov
mov
out
call
jno
ljmp
mov
inc
push
push
push
call
lock
or
sbb
loop
call
pop
add
sbb
push
psubq
lea
insb
cmc
mov
imul
cld
flds
add
mov
aaa
adc
rorl
fisubrl
insl
mov
inc
mov
lahf
xor
lea
push
bound
xor
jg
daa
pop
mov
sbbb
es
fwait
sub
ss
mov
inc
loope
xor
push
pop
std
loope
jo
inc
mov
call
jge
lret
pushf
lret
shrb
mov
jmp
ja
or
bound
neg
lahf
push
jne
dec
pushf
and
fwait
aaa
mov
imul
jle
jge
std
pop
lea
inc
cmp
mov
add
fwait
lock
pop
xchg
enter
jmp
mov
cmp
ja
jns
sbb
sbb
inc
xor
and
lret
sbbb
push
pushf
inc
in
scas
mov
outsl
test
in
jmp
je
xor
push
enter
mov
fimull
movl
and
jb
insl
pop
mov
add
sub
movsb
jae,pn
pop
icebp
cli
fcomps
daa
push
cmp
ret
jo
jge
cld
f2xm1
sub
push
in
and
sbb
adc
sub
or
add
jnp
lds
pushf
jg
dec
jb
call
mov
aam
push
mov
fidivl
aad
fdivr
sbb
testl
or
in
adc
mov
inc
je
in
pusha
es
outsl
cmp
xchg
or
shll
cmpsb
xchg
jne
addr16
and
pop
sbb
jmp
pop
insb
sbb
add
xchg
inc
movsl
stc
and
stos
dec
stc
push
sub
movsl
scas
pop
pusha
in
or
xchg
and
aas
setp
lea
repz
xchg
adc
adcb
inc
enter
bswap
clc
fwait
jecxz
movzbl
lods
xlat
add
jecxz
fs
fidivs
push
clc
clc
push
push
jl
or
and
sbb
jne
add
sahf
sbb
jle
insb
fdivrl
add
add
sbb
cwtl
jmp
sbb
pushf
es
push
fcoml
das
dec
daa
call
jmp
mov
cmpsl
and
jmp
push
sbb
shll
out
pushf
dec
arpl
call
hlt
mov
jnp
cmc
adc
sbb
shlb
xor
mov
int
push
out
cltd
ss
ret
or
popf
lods
add
pushf
pushf
mov
dec
imul
call
dec
cmpsb
jmp
push
mov
icebp
pop
call
loope
and
iret
xor
inc
push
mov
dec
and
xlat
xchg
cmc
mov
or
or
sub
fcompl
stos
mov
ss
push
cmpl
mov
xor
clc
lods
dec
mov
xchg
push
arpl
js
sub
ret
cmp
paddb
push
or
mov
pop
test
in
fiadds
aad
mov
test
inc
or
ret
push
mov
pop
push
xor
loopne
jmp
hlt
push
and
inc
jno
xorb
xlat
and
fnstcw
call
push
jg
aas
adc
cmpb
outsb
jmp
les
cli
outsl
loopne
fdivs
in
cmc
mov
data16
push
jmp
mov
cmp
lret
mov
jmp
sarl
or
or
cs
pusha
sub
mov
push
test
aas
ja
pop
mov
das
add
adc
fs
sub
add
and
push
mov
cmp
xor
sbb
loope
ret
pop
pop
cmc
subl
int
test
fwait
pop
loopew
jmp
decl
lcall
inc
ljmp
push
xor
push
push
mov
js
fs
in
sub
sub
lret
xlat
imul
mov
fwait
jmp
mov
cmp
rolb
orb
cmp
cmp
rorl
aaa
cmp
gs
icebp
mov
add
xor
imul
jns
dec
jno
adc
jb
or
cmpsb
inc
imul
pop
cli
stos
xlat
adc
fcomps
or
jns
push
sub
or
ds
rorb
jle
gs
sahf
sbb
mov
mov
inc
shll
aam
lahf
push
jmp
adc
sbb
out
inc
add
mov
inc
push
sbb
arpl
loop
gs
push
mov
lods
cmp
pop
mov
inc
jmp
add
sbb
rclb
push
add
mulb
aaa
fistps
loop
xchg
sahf
sbb
lods
sbb
ljmp
aam
lahf
mov
lods
cmp
jmp
lock
adc
cmp
rcrb
fisttpll
adc
jmp
fiadds
pusha
jmp
shl
add
cmp
mov
or
mov
sbb
call
pop
xor
sbb
jmp
clc
cld
mov
lret
cmp
daa
pop
sbb
pop
and
mov
loope
jae
sbb
dec
mov
aaa
sbb
sbb
in
cld
ja
loopne
mov
cmp
xchg
jg
push
pop
or
and
fucomip
cltd
dec
bound
xchg
inc
mov
fisttpl
add
idivl
loop
cmp
jmp
jmp
mov
xor
push
push
js
inc
lahf
pusha
add
fcmovne
dec
das
jmp
mov
andb
divl
outsb
xor
inc
lret
push
sub
pop
dec
cmp
call
inc
scas
mov
call
idivb
push
sub
xlat
xchg
mov
dec
lea
or
xchg
sub
jo
xor
mov
sub
pop
xor
test
ret
ja
pop
inc
into
dec
or
sahf
adc
dec
sub
inc
xor
mov
jo
inc
dec
add
xchg
dec
repnz
adc
jb
xchg
cmp
adc
push
mov
sub
jl
leave
xorl
setl
cs
cmpps
vpandn
and
dec
sub
in
xor
fcomps
xchg
les
mov
cwtl
mov
loopne
push
xor
jg
hlt
inc
lods
sub
ljmp
lea
cli
dec
mov
mov
mov
jbe
call
jmp
sbb
call
push
subl
shr
ss
nop
jp
popf
push
add
push
jae
call
xchg
pushf
jnp
lods
add
subb
loop
aad
lahf
hlt
xor
dec
mov
ja
mov
loope
sub
stos
push
ljmp
push
push
mov
sahf
scas
sub
push
mov
or
rcrb
mov
call
and
dec
fstl
sub
das
lock
fistpl
inc
outsl
push
call
std
clc
push
jge
testl
iret
cld
mov
test
sahf
xlat
add
sti
sub
pop
imull
rol
out
cld
rcll
and
aam
int3
cmpsb
call
shll
mov
je
fsubs
stc
mov
cli
sbb
orl
and
cmpl
aad
mov
jp
adc
mov
lret
push
pushf
mov
pusha
insb
push
call
jne
repz
das
mov
testb
push
inc
stos
cwtl
jle
mov
lahf
in
pop
jo
pop
pop
sbb
je
je
cmp
mov
fs
orl
das
push
into
ficompl
in
subl
and
clc
shl
out
jg
filds
pop
inc
sar
pushf
rcl
xchg
test
cmp
call
pop
push
or
inc
xlat
les
mov
cli
adc
or
adc
xchg
jmp
xchg
nop
push
out
call
ffreep
mov
scas
stos
and
les
aad
sub
pusha
or
xchg
push
hlt
xor
aam
mov
dec
jmp
inc
xor
hlt
and
add
jp
sbb
paddsb
mov
xor
xchg
je
cmp
loop
ljmp
ja
lret
flds
adc
push
aad
daa
xor
insw
mov
jne
sbb
add
shll
pusha
mov
mov
aam
out
shrb
add
add
jg
jecxz
inc
call
add
mov
subb
inc
popf
insl
xchg
and
loopne
jo
jo
cmp
mov
hlt
ffree
es
sbb
pop
pop
pop
mov
jg
mov
neg
sar
sti
loope
test
or
ret
js
faddl
sub
jno
je
flds
push
add
fildl
xor
cmpsb
add
xchg
inc
iret
xor
icebp
jnp
into
add
jns
pusha
inc
mov
stos
stc
push
push
push
xor
or
out
add
add
mov
inc
mov
sarb
sbb
iret
or
cld
ljmp
mov
subb
jp
out
jle
addl
loop
cltd
push
outsb
mov
pop
leave
cmp
fistl
jmp
add
pop
pop
test
and
rorl
xchg
mov
jmp
sbb
mov
fwait
add
jne
gs
std
aaa
jle
push
push
subl
xor
or
lret
stos
add
roll
cmp
and
iret
test
cs
addb
push
sbb
sub
insl
stos
jmp
push
push
sbb
shr
jmp
mov
popf
and
and
push
cmp
add
push
aaa
std
add
dec
int
or
in
fdivrl
sub
fildl
inc
les
adc
jne
xor
cmovl
and
gs
jne
jmp
jne
pop
and
or
dec
sbb
daa
test
aaa
ret
add
pop
xor
testb
js
icebp
or
jmp
clc
lods
loope
shrl
in
loopne
insl
pushf
movsb
push
xchg
push
lock
in
pop
adc
pusha
mov
add
mov
add
mov
rcrb
jne
test
roll
iret
rorb
test
or
pusha
cwtl
adc
adc
scas
mov
lock
push
call
xchg
outsb
hlt
and
imul
insl
or
adcb
test
xchg
loop
sbb
pop
in
rcrb
cmp
xor
test
cwtl
outsb
and
pop
jne,pt
ds
test
aam
popa
xchg
movsb
pop
pushf
call
inc
mov
cmp
scas
ja
xor
adc
cmc
push
sub
mov
jle
call
test
mov
jl
add
push
in
dec
push
cmp
scas
in
push
mov
sub
add
imul
icebp
adc
or
adc
push
dec
inc
mov
push
push
and
cmp
mov
inc
jl,pn
cwtl
clc
popa
shll
cmp
jns
fmull
sbb
jnp
js
add
dec
rolb
and
icebp
ficompl
push
inc
daa
insl
inc
lods
adc
mov
adc
pop
xchg
clc
ret
ljmp
dec
lock
jo
xchg
mov
mov
mov
lock
orl
arpl
jl
es
push
add
push
xor
js
ss
lret
sub
lret
ljmp
pop
inc
clc
in
jne
xchg
fistpl
in
push
xchg
and
xlat
std
mov
sbb
sbb
shrb
mov
call
mov
jnp
stos
push
sahf
lahf
lods
push
mov
xor
aas
jle
pop
pop
or
xchg
xor
test
jle
xor
outsb
aaa
std
lea
add
test
adc
adc
or
cmc
jmp
sahf
push
xchg
ljmp
fnsave
push
xchg
jge
jmp
aaa
xor
arpl
push
jne
sub
in
pusha
icebp
pop
mov
jmp
movsb
mov
xchg
and
jl
mov
inc
adc
aaa
jae
idivb
stos
jmp
shll
lcall
sbb
or
cmp
mov
adc
fstps
sbb
out
dec
jge
addl
faddl
orb
mov
pop
push
js
int
das
xchg
jmp
daa
add
lock
sahf
lds
xchg
lods
outsb
mov
and
decb
sbb
out
shlb
fisttpll
pushf
fimull
xchg
ret
pusha
mov
cs
jmp
fstps
pop
test
lea
das
sti
mov
ja
lods
jb
imul
sahf
ja
test
push
xor
sbb
or
push
hlt
xor
ljmp
mov
push
pusha
cwtl
nop
mov
out
adc
and
jbe
mov
loope
pop
outsl
jmp
sbb
pop
jae
aam
pop
inc
ret
sbb
ror
stc
push
dec
xor
xor
mov
int
push
int
nop
cld
shlb
ss
ja
gs
loopne
jle
jg
push
outsl
adc
push
clc
cmp
xchg
test
call
sub
nop
push
mov
ds
jns
push
jle
or
mov
fs
ffree
cmpsl
jbe
cmp
stos
or
int
ja
orb
pop
sub
setg
push
mov
adc
movsl
adc
mov
jmp
loope
roll
mov
push
add
adc
xor
jo
shld
js
ret
push
jl
or
add
cli
rorb
mov
inc
bound
test
xor
arpl
adc
inc
shl
mov
std
sbb
scas
sbb
int3
push
or
jge
popf
pop
adc
scas
xor
ljmp
mov
lds
insl
ret
mov
adc
roll
loop
mov
hlt
arpl
add
loopne
aaa
mov
pop
cmp
jmp
int3
sbb
dec
loopne
sbb
adc
popf
ljmp
xor
outsb
jp
inc
jl
mov
cmp
cld
add
cmp
test
scas
mov
and
fneni(8087
mov
cli
lcall
mov
fisubl
push
mov
inc
jecxz
dec
lods
pusha
push
fld1
xor
xchg
pop
xchg
or
mov
inc
xchg
mov
test
push
cld
pop
mov
mov
roll
int
cmc
inc
jl
mov
xorl
add
and
xsave
and
jge
imul
aam
cmc
fstl
fstp
movsl
iret
shlb
cli
xchg
cmp
pop
mov
jbe
xchg
xor
cmp
into
push
mov
movsl
sub
push
loop
jne
stc
or
test
and
or
add
mov
sbb
dec
cmpsl
pop
jp
clc
cltd
sub
bound
and
or
shlb
or
fcoml
ljmp
dec
jle
call
jb
call
add
fdivrs
mov
push
rcrb
cmp
or
mov
xchg
stos
call
xor
adc
pop
dec
data16
push
mov
ds
ficoml
andb
xor
mov
rorl
cmpsl
pop
mov
mov
jb
mov
cmp
aad
push
push
add
mov
aad
mov
add
cmpsb
sub
test
xchg
and
adc
les
sarb
mov
push
aad
mov
fs
inc
rep
fildl
loope
lret
jle
add
enter
add
shr
adc
xor
push
out
stc
lods
fucomi
sub
rolb
pop
xor
lahf
cmp
jae
int3
in
add
stc
adc
pop
cmp
xor
add
mov
and
xchg
push
jne
mov
and
clc
pop
mov
sar
pop
call
loop
jmp
pusha
sub
xor
inc
inc
bound
mov
out
call
push
inc
nop
xor
ljmp
es
push
sbb
mov
stos
xchg
ret
shlb
fucomi
xor
sbb
add
outsb
imul
mov
mov
push
cs
pop
scas
icebp
ss
cltd
andl
call
jl
out
arpl
sahf
push
outsl
jno
mov
outsb
fcomip
test
push
gs
mov
push
push
pop
sbb
add
addr16
lret
mov
lock
aam
pop
out
push
xchg
loope
loopne
xor
and
aas
packuswb
loopne
mov
mov
leave
fs
rclb
pop
dec
jne
push
xor
and
andb
cld
fwait
pop
adc
xabort
shr
mov
mov
cmpb
xlat
and
push
rcl
popa
adc
pop
mov
insl
incl
shl
mov
mov
cmp
sub
inc
mov
out
cmp
sbb
out
fbstp
or
sbb
mov
ss
pop
out
push
cld
jmp
stc
mov
xor
push
adc
idivb
call
pop
pushf
push
sub
lock
sbb
cli
mov
inc
mov
or
jmp
or
pushf
es
outsb
push
mov
sbb
mov
push
mov
mov
jl
mov
xor
jle
mov
cmc
aas
jmp
push
popf
not
mov
add
mov
pop
in
cmp
lret
stos
dec
jmp
adc
or
icebp
shl
loopne
notl
subb
shl
cmp
mov
fwait
rcrl
pushf
repnz
js
pop
push
shl
pop
subb
stc
push
mov
xor
stc
clc
xchg
fldt
add
pop
leave
push
icebp
sub
or
rol
pop
xchg
fdivr
call
lods
dec
imul
mov
outsl
in
and
test
dec
out
inc
mov
pop
mov
mov
shll
push
push
mov
enter
push
cltd
dec
mov
push
aas
nop
fwait
sahf
aad
ja
sbb
lea
pop
ds
lcall
mov
into
aaa
or
pop
in
pop
inc
pop
jbe
push
cltd
pushf
test
cmp
xchg
test
hlt
cmp
loop
fisubl
or
cwtl
cmp
pop
adc
ss
icebp
imul
das
push
mov
loop
push
push
and
fucomp
cltd
add
out
and
fldl
imul
adc
cmovbe
imul
dec
or
mov
mov
stos
mov
imul
aas
ret
inc
icebp
cli
jo
xor
push
lods
add
das
xor
dec
clc
or
and
sbb
lds
and
push
xchg
fs
sbb
rclb
xchg
sbb
mov
push
mov
push
mov
push
sar
mov
push
faddp
push
mov
out
ret
jno
mulb
inc
inc
mov
and
cmp
jae
call
aas
mov
xor
sub
test
jg
shl
incb
stc
rol
xchg
rcrl
mov
mov
imul
push
mov
xchg
jo
icebp
faddp
mov
jo
jne
jns
cwtl
adc
pop
scas
pop
jo
push
jecxz
dec
cmp
sbb
sub
icebp
out
add
jp
cmc
or
aad
scas
loope
loopne
push
mov
nop
sbb
in
out
loope
xor
stos
shl
dec
fldl2t
icebp
add
dec
stc
pushf
cmp
xor
arpl
lods
push
inc
lock
mov
ret
cwtl
mov
push
pop
test
sub
push
dec
dec
push
ret
in
add
call
or
mov
ficoml
sbb
inc
adc
out
or
xchg
pop
dec
sub
data16
jl
out
xorb
add
call
lcall
lret
jge
push
lods
call
scas
js
out
add
lret
cmc
adc
fimuls
lret
lds
shlb
inc
sbb
shl
aas
mov
test
push
jmp
jmp
scas
rolb
mov
lods
cmp
das
jmp
cmp
outsb
xor
push
sub
in
xchg
push
jnp
push
sub
cmpsb
add
cmpsl
jmp
jo
cmp
push
pop
clts
fistps
push
add
in
std
adc
pop
mov
jmp
sbb
in
or
movsl
push
jns
mov
add
and
or
push
das
fidivl
and
test
mov
cwtl
mov
stos
xchg
mov
dec
dec
adc
lock
fisttpll
cli
adc
push
pop
insl
adc
push
mov
adc
sbb
loope
push
mov
xorl
hlt
sbb
pushf
aam
sbb
xchg
fldt
addr16
cmc
aaa
sub
shlb
mov
cmp
cs
cmpsb
push
sbb
cs
shufps
cmp
clc
shl
arpl
add
cwtl
lods
fidivrs
push
in
in
add
int3
push
into
call
cmp
popa
hlt
cmpsl
clc
loopne
push
and
cmp
sbb
xor
dec
or
xor
sub
scas
jp
movsl
ficoms
inc
pop
or
mov
xor
ljmp
sbb
add
pop
pusha
jns
in
xor
shr
mov
dec
xchg
push
jmp
cmp
mov
cmova
mov
inc
mov
pushf
pop
aam
les
jg
stos
jnp
push
adc
rcrb
dec
fidivrs
pop
clc
xorl
jb
mov
in
fbld
adc
xor
roll
add
loop
mov
in
fcomip
mov
mov
push
add
lock
sbb
pushf
aad
cltd
cmp
jle
inc
popa
sbb
add
loopne
pop
xor
lcall
xor
mov
ljmp
sbb
adc
test
pop
movsb
jbe
pop
add
int
imul
mov
mov
mov
xor
testb
dec
shl
or
test
pusha
popa
movsl
jle
add
les
xor
mov
mov
imul
adc
rorb
in
xor
loope
gs
lahf
not
nop
sub
inc
add
call
sub
bnd
push
rorb
sub
push
dec
or
in
sbb
mov
mov
repz
jmp
adc
adc
aad
inc
fs
add
push
clc
lcall
mov
mov
push
push
jbe
lods
jmp
stos
cmpl
std
sarb
push
jae
outsb
sbbb
enter
jecxz
imul
and
mov
aam
sbb
sub
test
enter
arpl
mov
andb
shll
dec
push
nop
stc
mov
push
ljmp
outsl
sbb
and
inc
repz
sar
outsb
inc
mov
cmp
call
jns
lods
stc
jg
outsb
add
adc
jae
push
std
ds
call
addb
bound
ja
jbe
pop
mov
decb
pop
inc
imulb
or
sbb
inc
cmp
push
call
cmp
clc
add
mov
cs
pop
add
insl
sbb
daa
lcall
aaa
inc
ja
mov
les
push
popa
arpl
inc
test
jl
cmp
fs
cmpsl
jo
add
jmp
mov
in
inc
aas
out
mov
push
add
cmp
sub
jmp
js
mov
shrb
jo
movb
fcoml
push
out
insl
call
xchg
mov
push
out
jmp
inc
cmp
or
mov
loopne
mov
cmp
jnp
xlat
add
imul
out
dec
pop
fimuls
cmpsl
cwtl
sub
popa
fs
mov
dec
add
loop
cmp
shr
push
out
cmpl
pop
pop
rcll
sub
lcall
xor
movsb
jbe
or
xor
cwtl
lahf
sub
pop
inc
mov
lret
add
pop
mov
dec
pop
jbe
xor
xorb
push
clc
mov
aam
or
idivb
dec
movsl
pop
cmp
and
pop
les
dec
loopne
inc
out
xchg
mov
movsl
loope
rorl
hlt
sahf
pushf
jmp
cs
xlat
shrl
imul
test
sbb
fs
mov
xchg
jb
call
cmp
push
scas
fldl
mov
inc
enter
cmpl
sub
repnz
mov
loopne
test
stc
fldenv
data16
roll
inc
sub
sub
ljmp
mov
cmp
int
mov
xorb
cmpsl
loopne
adc
xchg
cmc
or
pop
inc
push
mov
push
cmpl
cmp
in
bound
sub
mov
js
ss
daa
jp,pn
hlt
mov
mov
jne
stos
call
rcrb
and
mov
jo
xor
in
ret
and
push
mov
lret
push
mov
inc
call
push
adc
add
cwtl
mov
fiadds
sbb
adc
iret
push
dec
je
in
call
inc
cmp
ja
push
movsl
arpl
int3
push
xor
jo
loopne
sbb
subl
lahf
push
push
or
sar
adc
sub
pop
cld
push
add
aad
pop
cld
adc
cs
hlt
stc
aaa
or
adc
sti
push
mov
cmp
idivl
je
inc
push
jmp
bound
hlt
or
xchg
lds
mov
cmpsl
imul
daa
add
vmulpd
xlat
cmpsb
js
mov
mov
test
or
pop
movsb
movsl
mov
sbb
out
leave
orb
jecxz
mov
sbb
and
int
loop
sbbl
hlt
and
into
pop
shl
lods
flds
and
push
mov
sub
mov
dec
mov
pmaddwd
push
push
pusha
cmc
cwtl
add
lods
inc
cmp
mov
ljmp
in
xchg
sbbl
inc
incb
decb
and
int
shl
xor
add
mov
push
inc
mov
sbb
jp
xorl
movsl
add
add
lods
jbe
adc
jb
pusha
pushf
sbb
xor
push
or
sarl
cmp
push
jge
aam
out
jo
pop
jl
test
cwtl
ljmp
aas
rolb
pop
sbb
subl
rorb
or
or
hlt
call
pop
arpl
pop
rcl
stos
call
aas
movsb
pop
fdivrs
fistpll
fmull
fadds
sbb
gs
mov
fdivrp
xlat
jae
arpl
sbb
dec
adc
rorl
out
sub
shl
sbb
inc
icebp
aam
pop
stc
out
test
pusha
cmp
repnz
jg
test
lcall
mov
into
shl
test
inc
sub
pop
ror
mov
imul
or
leave
push
lcall
sahf
push
pop
sbb
pop
call
aas
mov
call
pop
adc
std
push
shrl
in
cmpsl
scas
sub
mov
loope
cld
xchg
cltd
in
andb
and
js
push
test
dec
pop
push
cmc
and
xchg
adc
out
pusha
fdivr
rolb
in
shl
clc
add
scas
add
fwait
pop
je
or
jae
dec
stc
ds
decl
lods
lret
xor
rcl
dec
pop
lock
pop
add
jbe
jno
call
daa
test
js
dec
dec
cmp
inc
push
lahf
std
lods
and
lahf
bound
mov
dec
enter
inc
les
loopne
sbb
mov
jnp
jmp
ss
push
and
not
into
sub
fists
add
inc
sbb
dec
xlat
clc
rep
lea
dec
stos
push
xor
pcmpgtw
xchg
mov
add
adc
out
lds
cmpsb
pop
sbb
adc
push
mov
mull
cmp
call
jge
lea
call
stc
sbbl
pop
or
mov
dec
and
or
dec
inc
cmp
push
pop
push
xor
jge
clc
fiaddl
daa
push
cmp
lock
adc
das
rcll
mov
sbb
push
jno
sub
mull
push
icebp
lret
or
sbb
sub
js
pop
fwait
clc
add
jmp
movsl
lret
sbb
call
fnstsw
cltd
fidivs
iret
or
push
mov
jo
lods
mov
enter
push
sahf
fadd
add
add
mov
out
out
push
pop
and
clc
pop
addr16
mov
jae
loopne
ljmp
pop
setbe
mov
mov
push
mov
add
scas
shr
push
frstor
pop
cmp
sub
in
or
adc
sbb
cmp
jo
lea
je
push
rcl
fdivl
mov
or
xchg
or
testl
push
mov
fs
in
push
push
inc
das
inc
mov
mov
xchg
push
sbb
xchg
div
or
add
jmp
pop
shr
dec
addb
aas
push
xor
cltd
repnz
inc
lock
jmp
sub
inc
std
fldl
mov
cli
adc
cmc
movsl
into
stos
and
je
pop
in
ljmp
or
and
dec
cli
push
stos
int3
cwtl
aad
cmp
mov
sahf
push
inc
lods
clc
pusha
xor
cmpsb
mov
pop
inc
push
movsl
mov
xchg
lds
mov
test
pop
popa
shrb
mov
jmp
and
nop
push
xlat
fists
loop
mov
testl
pop
pop
xchg
fsincos
sbb
push
xchg
pop
insl
xor
popf
iret
adc
pushf
push
add
inc
mov
push
cmp
mov
out
scas
xor
sub
mov
sbb
sar
pop
sub
pop
sahf
inc
cmp
and
xor
imulb
stc
cwtl
push
add
mov
out
sbb
mov
orl
mov
sbb
or
call
int3
fimull
call
sbb
loopne
shl
rcll
jmp
and
cmp
adc
pop
jmp
mov
mov
imul
jne
mov
aam
mov
aaa
fbstp
push
pop
std
push
rorb
push
xchg
rol
adc
dec
jmp
fdivrp
les
stc
jmp
aad
mov
push
stc
dec
lret
inc
sbb
jge
push
jne
inc
add
pop
test
mov
push
jo
rorl
dec
dec
cmp
subl
in
mov
aad
sbb
aad
jmp
sbbb
pop
dec
mov
ret
push
punpcklwd
mov
rolb
in
lock
aaa
jb
pop
call
fwait
push
pusha
stos
out
sbb
mov
push
cmc
jp
mov
jb
pusha
lock
rorl
or
in
rol
popa
xor
incb
sbb
jb
xchg
or
dec
pop
sub
rolb
mov
sbb
pop
mov
mov
out
dec
pop
adc
cwtl
in
sarb
fcompl
push
sbb
lahf
adc
and
pop
test
jo
sbb
icebp
in
pop
shrb
jmp
or
push
push
jmp
cmc
and
pop
and
rcll
push
shlb
dec
add
je
or
add
sarb
pop
test
push
add
popf
xchg
add
aam
in
call
ljmp
data16
je
adc
adc
fdivl
pop
or
outsb
ret
pop
std
and
sub
hlt
leave
mov
aam
scas
lods
test
cmp
dec
pushf
fstl
fcoms
or
insb
rol
aam
adc
rcll
jl
or
addl
mov
add
push
ret
mov
inc
add
in
loope
mov
dec
cwtl
movsl
dec
in
inc
call
pop
add
push
add
je
xchg
into
cli
sbb
les
lcall
sbb
test
add
call
lock
nop
jnp
mov
enter
repz
and
xor
push
test
loopne
inc
icebp
test
stos
cltd
dec
cmp
dec
in
pop
mov
push
add
out
setp
cmp
clc
mov
mov
xlat
es
push
arpl
jg
inc
dec
lahf
jmp
out
popa
dec
xor
shr
xor
jb
push
sbb
cmp
and
push
cmp
and
loope
subb
arpl
stos
icebp
xchg
dec
gs
cmp
sbb
xchg
mov
xor
addb
cmp
adc
decl
inc
or
mov
pusha
adc
adc
lods
xor
or
out
mov
pop
shll
dec
inc
push
and
das
shlb
call
in
sbb
push
xchg
xor
push
mov
ja
push
pushf
xchg
sbb
lahf
hlt
pop
subl
xchg
inc
je
mov
call
ja
or
rorb
and
jno
scas
outsb
hlt
mov
pusha
add
int
mov
jmp
sbb
sbb
mov
fidivl
adc
push
dec
dec
ss
sbb
mov
je
add
ss
mov
xchg
lods
jne
xor
cmpsl
adc
aas
mov
mov
xchg
sub
xorb
and
push
int3
sub
xlat
pop
mov
jmp
fiaddl
loopne
int
jmp
mov
mov
das
js
adc
jmp
pushf
adc
lcall
loope
adc
jb
data16
cmp
mov
mov
bnd
adc
or
inc
call
adcb
loope
call
inc
mov
test
pop
xchg
jmp
icebp
jg
and
test
into
pusha
xchg
loope
sbb
mov
xor
aam
jae
out
addr16
fnstsw
cltd
in
fldl
xlat
or
lret
scas
ja
mov
repnz
sahf
test
or
jg
insl
inc
rcr
pop
push
pop
clc
xchg
shrl
sbb
sti
jge
pushf
inc
pop
mov
jmp
xchg
xlat
xchg
ret
jbe
jp
int
dec
outsl
mov
mov
pop
cmp
xor
jmp
xor
pop
push
push
scas
pushf
pop
hlt
push
xchg
jmp
pusha
push
add
sub
jne
insl
out
sub
sub
rclb
push
xchg
shll
icebp
insl
pop
adc
cmp
cmp
mov
in
push
test
stos
int3
orb
or
adc
repz
enter
loopne
mov
adc
cmp
cld
mov
inc
mov
pusha
inc
push
mov
inc
mov
dec
pushf
mov
adc
jmp
aaa
cmp
cmp
or
clc
mov
hlt
xor
hlt
cmp
test
call
pusha
inc
into
notb
call
jle
loopne
repz
ss
mov
call
daa
lea
lods
aam
aam
xchg
mov
mov
mov
pop
sbb
sbbl
push
outsb
mov
loop
cwtl
call
mov
inc
pusha
sbb
ljmp
lahf
lods
popf
cmp
or
aam
xor
in
ds
and
clc
mov
add
or
ret
call
push
call
mov
pop
inc
in
push
fnsave
gs
scas
inc
sub
std
test
je
jp
xchg
push
cmpsb
pop
out
xorl
cmp
cmp
add
jg
lcall
ljmp
int3
adc
jmp
incl
jb
test
add
mov
loop
cmp
sbb
pusha
pop
and
sbb
pop
scas
or
mov
jl
xor
add
inc
or
pop
dec
mov
insl
fcomps
mov
push
bound
push
dec
ja
cmc
mov
push
xor
aam
pop
je
xlat
mov
push
sbb
xorb
cmc
ret
or
fisubrs
push
sbb
mov
add
pop
and
dec
loopne
jmp
neg
push
cmc
sbbb
pop
shrb
push
fdiv
sar
pop
enter
int3
je
push
ret
test
shll
rol
add
into
inc
push
push
pop
stc
and
mov
test
xchg
push
les
stos
pushf
cltd
in
cwtl
pop
bound
push
xchg
test
das
rcrb
fstps
or
loopne
rep
in
js
lods
iret
push
dec
cmp
shlb
aam
leave
testb
xchg
cltd
inc
hlt
push
test
cs
jp
xor
hlt
pop
mov
push
call
push
sbbl
xchg
loop
call
cmp
pop
int
pop
cwtl
jnp
gs
dec
sub
xchg
jmp
int3
les
mov
call
sbbb
or
sub
adc
and
xor
cmp
sbb
cmp
adc
jmp
or
aaa
add
adc
fwait
mov
daa
cmp
jle
test
aas
insb
mov
mov
in
cmc
jmp
dec
lds
mov
adc
iret
ljmp
mov
sbb
test
pop
pop
in
cmp
mov
mov
cmc
or
out
pop
adc
loopne
inc
mov
dec
xchg
cwtl
sti
pop
cmp
adc
in
js
sarb
push
or
out
jg
or
call
call
stos
or
cwtl
sahf
ljmp
sahf
ljmp
shlb
test
sub
push
adc
sub
mov
pop
jp
add
popf
pop
int3
bound
cmpsl
sbb
add
rolb
loopne
mov
loope
push
or
sbb
popf
cmp
mov
nop
jmp
or
cmp
pop
push
pusha
aaa
push
js
in
or
scas
add
inc
fwait
xor
pushf
not
stos
cmp
stc
cmp
add
cld
or
cli
xor
or
bound
mov
add
mov
out
inc
cmp
add
push
insb
aam
push
cwtl
sub
fxtract
jmp
scas
insl
pop
mov
pop
mov
mov
jecxz
out
mov
cli
loopne
ret
xor
sub
adc
pushf
dec
aas
iret
aaa
cmp
inc
bound
out
insl
sub
mov
mov
jno
insb
xor
xchg
jle
mov
test
leave
cs
xchg
daa
mov
stos
adc
cmp
aad
in
sbb
call
or
mov
sarl
in
fisubs
stc
and
push
pop
andl
js
daa
loop
fwait
xchg
push
popf
fs
adc
sbbb
xchg
repnz
sub
pop
lods
cmpsl
and
mov
and
rorl
bound
adc
out
xchg
ljmp
es
aam
lcall
popf
sahf
pop
push
lods
xor
mov
dec
push
outsl
stos
inc
and
add
push
into
cwtl
lret
lock
mov
pop
mov
jno
in
push
mov
lahf
mov
es
leave
and
push
push
mov
in
adc
shll
adc
push
push
or
sub
push
icebp
sbb
cmp
call
rcll
dec
mov
call
ret
in
push
cltd
jmp
mov
loopne
fisubl
xchg
call
aaa
push
test
push
cmc
and
push
push
sbb
das
and
int
sbb
push
mov
call
jne
and
or
dec
cmp
dec
push
add
push
popf
add
stc
cmp
sub
mov
loopne
xor
in
add
daa
lods
cmc
mov
js
loopne
jle
das
pushf
dec
adc
push
mov
push
xchg
test
sub
inc
sar
mov
mov
lds
mov
fists
aas
xchg
ror
or
cmp
or
push
fmulp
repnz
cmp
jo
push
ret
mov
adc
pop
add
test
decb
in
push
sbb
out
inc
shl
orl
addl
gs
adc
push
loop
pop
out
out
stos
cmp
icebp
test
inc
dec
imul
or
jp
mov
out
loopne
mov
inc
out
sub
jmp
adc
jb
push
jl
data16
push
mov
lahf
jns
daa
gs
lret
gs
int
mov
push
in
cmpsb
jg
cltd
movsb
add
inc
es
add
cs
std
mov
add
cmpb
shll
mov
push
pop
sub
orb
sbb
push
mov
sbbl
lock
mov
loopne
and
sub
test
int
or
les
call
incl
xchg
cmp
mov
and
mov
jmp
pop
lcall
ja
push
mov
dec
jmp
rcrl
add
mov
outsb
jmp
push
incl
bound
in
push
mov
push
std
xlat
push
dec
lret
pop
setle
and
xor
jge
cwtl
add
rol
pusha
imul
push
mov
mov
mov
adc
enter
fstl
int
cmp
fsts
loopne
pop
jbe
jmp
les
call
pop
ficoml
lea
xor
pop
xlat
or
and
aaa
jbe
add
ds
cld
dec
xor
xchg
cmpsb
xchg
push
std
mov
scas
cwtl
adc
or
sub
push
ds
pop
xor
push
inc
xor
sysexit
outsb
in
and
mov
bound
ljmp
mov
lods
cwtl
stc
out
push
pop
lcall
test
jmp
lahf
sahf
aaa
push
out
lea
mov
loopne
call
inc
adc
or
cld
jp
out
xchg
or
ret
icebp
xchg
lret
dec
imulb
pusha
pop
xor
inc
lock
xchg
jo
push
xor
jmp
je
shrl
clc
call
jmp
push
outsl
and
int3
pop
inc
movsb
pop
or
sarb
push
scas
mov
add
mov
ds
cli
vpsubw
inc
add
mov
mov
pop
mov
push
insl
cli
xchg
xchg
cltd
mov
or
mov
mov
push
stc
or
jne
shl
in
loope
push
xchg
jp
rcll
inc
jne
dec
mov
out
mov
mov
mov
das
repnz
mov
cli
out
xor
imul
cltd
jle
orl
mov
push
stos
sarb
pop
ss
push
cmpsl
imul
pushf
mov
call
imul
cmc
jmp
mov
loop
test
imul
movsl
xchg
jb
push
loopne
les
loopne
adc
in
data16
out
jmp
xor
push
imul
push
mov
mov
pop
inc
lahf
sub
jle
ds
shl
mov
ret
xor
fsubl
fidivs
xchg
mov
xchg
push
xor
bound
mov
add
test
mov
mov
jle
popa
mov
mov
push
fnstenv
pop
mov
mov
sbb
scas
rcpps
ret
mov
xorb
sbb
loopne
negl
jnp
lcall
cmc
mov
setl
mov
or
or
test
test
das
xchg
scas
stos
sub
iret
sub
xor
scas
mov
enter
jmp
js
sahf
les
push
inc
cmpsl
jne
push
sub
sbb
cltd
test
jb
sbb
cmp
pop
stos
jmp
xchg
repz
out
nop
pop
imul
sbb
sbb
cwtl
xchg
mov
out
jb
not
adc
sahf
push
jb
cli
mov
xor
cmp
stos
add
shl
mov
sbb
adc
cltd
or
lret
jns
fcomi
sbb
or
addl
xchg
jg
sbb
aaa
fsubs
and
rcl
lcall
lods
adc
int
jecxz
push
xchg
call
cmp
mov
add
jecxz
cmp
movsb
mov
xor
rcr
xchg
adc
sub
cmp
mov
push
pop
testl
mov
fsts
mov
out
pusha
xchg
add
add
push
icebp
or
jnp
fistpl
inc
or
out
cmc
mov
icebp
fisubrs
nop
xchg
in
sbb
repnz
sbb
lods
scas
dec
lea
xchg
and
sahf
push
inc
fcoml
sbb
push
lock
sarl
mov
xor
xchg
jp
pop
addr16
mov
and
inc
call
and
fidivrl
jp
notl
jmp
xor
jmp
mov
sar
aaa
mov
xor
imul
addb
push
cmpsb
cmpsl
xor
xor
pop
mov
push
out
ret
sbb
xor
aam
mov
call
inc
sbb
lret
out
pop
jl
push
dec
mov
les
jo
pusha
add
push
repz
or
add
js
add
add
sub
jb
and
adc
push
push
mov
andb
adc
and
add
pop
inc
inc
add
stos
or
lods
mov
add
pop
add
xchg
mov
data16
je
outsb
addr16
insb
push
inc
outsl
insl
insl
dec
dec
adc
imul
dec
jae
push
push
push
adc
insb
jae
sbb
push
pop
and
mov
jmp
test
cmp
aas
xor
inc
push
inc
fnsave
negl
inc
pop
or
push
jb
add
fsubl
pop
xchg
pop
add
fistpll
insl
arpl
pop
insl
pop
add
lods
mov
rclb
insl
or
mov
data16
mov
fsubl
inc
pop
outsb
das
dec
pop
mov
bound
adc
daa
arpl
iret
fcmove
data16
sub
pop
inc
js
sub
fstpt
je
popa
xor
pop
push
daa
outsl
imul
push
pop
push
flds
insl
jo
or
int
cmp
or
mov
fisttpll
or
add
decl
or
add
push
or
pop
sbb
or
push
or
or
add
adc
sbb
adc
sub
or
push
or
push
in
pushl
adc
sti
add
syscall
syscall
or
add
dec
jg
sub
femms
xchg
prefetch
add
push
pop
or
sti
unpcklps
or
add
mov
add
push
or
add
sbb
jg
insl
outsl
incl
push
or
adc
pop
pop
sbb
std
mov
push
adc
or
push
pcmpeqw
or
adc
push
lods
gs
add
sbb
adc
or
adc
cmp
testl
adc
or
xor
fcomi
and
and
and
or
pop
mov
xchg
sbb
adc
mov
push
or
movsl
inc
or
sbb
icebp
pop
or
mov
adc
ss
or
add
daa
xor
jne
imul
push
sbb
sbb
adc
or
sbb
idivb
lea
or
pop
push
pop
adc
add
imul
pop
or
and
or
mov
adc
adc
mov
negl
add
insl
filds
adc
push
mov
or
pop
jmp
notl
adc
jmp
adc
adc
xor
add
push
invd
or
rcr
fstpt
or
or
or
sysret
int3
lods
cmp
adc
sub
or
push
dec
adc
pop
add
pop
sbb
icebp
adc
jg
sti
adc
and
or
sbb
or
push
pop
pusha
jo
outsl
cld
push
inc
or
and
sub
xchg
out
outsl
out
mov
insl
or
or
mov
fnsave
or
popa
sti
aaa
xor
adc
and
notl
cmp
add
push
outsb
scas
pop
jb
adc
out
test
cmp
or
dec
add
or
adc
push
rcll
lea
adc
mov
rolb
mov
sbb
data16
pop
popa
or
bndldx
scas
fst
adc
cmp
fistps
or
xchg
or
adc
adc
in
mov
xor
push
pop
arpl
pop
lcall
add
ret
or
add
loop
xchg
or
subb
int
pop
push
sub
push
push
and
mov
iret
or
int
mov
add
adc
cmpsb
adc
mov
lods
jnp
lods
and
adc
inc
adc
or
mov
xor
and
mov
or
or
pop
xchg
mov
pop
xor
test
lret
sbb
cli
push
punpckhwd
and
jno
lods
adc
dec
add
push
lods
gs
or
add
pushl
add
lcall
sbb
and
es
repnz
or
or
and
in
fistpll
sbb
jl,pt
sbb
stc
mov
lods
dec
sub
and
pop
xlat
cmp
push
popa
loope
adc
inc
cld
and
sbb
cmp
das
xor
fiadds
in
mov
or
add
sbb
adc
sbb
lods
xchg
push
adc
lea
or
add
fistl
mov
addr16
cmp
scas
and
xchg
mov
adc
or
enter
sbb
push
add
or
fistpll
adc
sbb
or
decl
add
dec
xchg
or
and
push
and
outsl
pop
push
cmp
xor
add
pop
mov
pop
loopne
inc
adc
push
and
sbb
pop
xor
or
ds
addr16
neg
cli
dec
adc
inc
push
pop
and
adc
adc
mov
cld
pop
mov
mov
push
lock
and
push
jge
dec
dec
fcoms
aaa
mov
cmp
cmp
and
adc
sub
dec
or
pop
insb
sub
sub
inc
and
aas
xor
or
sbb
inc
setnp
or
call
sbb
push
lock
sub
inc
adc
and
and
or
ljmp
das
aaa
or
sbb
adc
cmp
and
xor
pop
sbb
adc
and
sub
pop
dec
jge
pop
cmp
adc
pop
and
sbb
xor
pop
das
xor
push
sbb
push
dec
pop
movaps
test
pop
pushl
inc
push
cmp
push
pop
or
inc
xchg
sub
pushf
sub
and
push
xchg
adc
ljmp
std
cwtl
dec
xor
aam
cmp
and
dec
ds
pop
add
lock
sbb
cs
call
or
sbb
orb
push
iret
call
sbb
das
popa
or
adc
and
adc
cmpl
adc
adc
sbb
xor
dec
push
and
mov
dec
sub
cmp
stos
sbb
loopne
mov
incl
dec
adc
push
cmp
push
xor
pop
pop
shlb
sub
and
adc
inc
xor
insb
clc
add
orps
loopne
push
and
adc
rclb
pop
test
add
into
mov
xor
sti
popw
das
add
sub
push
and
fdivs
mov
add
pop
mov
stc
rolb
aam
cmpsl
mov
mov
mov
rol
mov
adc
jge
ljmp
pop
jp
int
dec
cwtl
push
add
inc
cs
frstor
add
stos
add
add
or
push
shrb
sub
inc
rcll
jg
or
inc
add
imul
fs
jge
add
lahf
and
cmp
shll
and
dec
mov
int
ja
ja
sbb
add
loopne
add
add
add
add
add
jne
pusha
mov
lea
push
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
popa
xor
ret
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
