sbbl
mov
iret
incl
xchg
gs
imul
xchg
sbb
in
fcmovnbe
lds
stos
fwait
xorl
lret
mov
pop
dec
aaa
sub
cltd
les
xchg
gs
add
mov
incl
jmp
add
mov
lea
rcrl
js
js
xchg
repnz
stos
mov
out
adc
add
lcall
lea
cwtl
lcall
lcall
mov
imul
xchg
fwait
call
cwtl
xchg
xchg
sahf
xchg
fwait
call
inc
test
cwtl
popf
mov
into
leave
rcrl
cmpsl
lcall
cli
adc
lock
lock
imul
mov
xchg
clc
test
popf
lea
mov
in
add
loope
iret
lret
je
jle
xchg
idivl
inc
lret
fwait
lcall
je
mov
and
add
test
por
scas
lods
cmp
mov
sbb
sahf
aaa
mov
hlt
xor
xchg
cld
xor
xor
xchg
xor
xor
das
hlt
cs
cld
sub
adc
and
mov
les
call
and
and
aam
enter
scas
cld
push
mov
sbb
sbb
and
push
mov
fcoms
mov
enter
or
mov
or
or
pop
or
cld
add
add
xchg
push
xchg
dec
subb
pop
cmp
subl
aaa
out
paddusw
or
add
sub
pop
les
mov
test
je
adc
je
idivl
mov
int3
aas
and
dec
add
jb
addr16
cmp
xlat
stos
scas
test
ljmp
aas
mov
in
ljmp
inc
inc
lret
cmpsb
mov
icebp
repz
out
pop
fsubl
xchg
and
add
xor
cmp
repnz
movsb
ss
jl
jecxz
rorb
insb
ljmp
test
inc
bound
out
repz
notl
je
jbe
stc
pop
cli
adc
ficomps
test
cmp
xchg
stc
orl
xchg
mov
mov
loopne
dec
mov
inc
xor
add
int3
and
or
loop
out
fbld
pop
in
loope
les
pushf
xor
xchg
cld
xchg
movsb
mov
jl
dec
mov
test
jmp
mov
movsb
adc
fdivrs
mov
jge
scas
jg
ret
mov
movsb
pop
das
dec
mov
push
jmp
pushf
mov
repz
dec
dec
lret
xor
in
pop
scas
jae
ds
jae
scas
sub
iret
in
xor
xchg
push
shl
mov
call
bnd
repz
xchg
nop
jp
cmpsl
mov
testl
loopne
or
pop
in
inc
repz
dec
cmp
dec
cmpsl
sti
movsl
iret
and
jmp
jecxz
inc
fwait
lock
pop
mov
fistps
xchg
mov
jl
ss
cmp
mov
out
mov
hlt
negl
jnp
dec
pushl
jmp
pusha
imul
ret
dec
push
inc
and
dec
and
repz
push
jp
repnz
out
mov
in
stos
jmp
outsb
out
stc
jne
sub
mov
mov
cmp
loopne
sbb
cmp
stos
dec
adcl
std
ljmp
iret
jmp
lock
ljmp
loopne
std
fildl
jb
push
stos
in
xchg
add
mov
inc
sub
mov
mov
movsl
in
mov
aad
xlat
inc
int3
fildl
dec
test
dec
inc
aam
pop
or
outsl
ljmp
push
pop
and
cmp
ds
mov
scas
and
mov
lods
cmp
call
test
aam
fildll
sub
stos
fsubs
arpl
sbb
shr
pop
dec
shrb
push
adc
das
test
inc
mov
mov
sti
aas
into
add
and
jb
jae
mov
mov
or
lods
test
jb
dec
dec
sti
jg
pop
out
aas
inc
out
adc
jb
push
repnz
cltd
push
inc
xor
lods
push
xchg
xor
inc
xchg
or
jne
cld
cmp
adc
lret
cmp
jl
dec
mov
andl
test
sub
cmp
and
int
xor
cmpsl
pop
jmp
mov
pop
iret
test
adc
cmpsl
rorl
aad
jnp
das
lds
call
jne
cmpsl
mov
or
xchg
mov
test
cmpsb
push
push
add
leave
mov
cmpsb
repz
cmp
test
and
add
push
and
fimuls
pop
cmpsb
gs
iret
cld
mov
cmpsb
gs
lcall
cmpsb
inc
idiv
mov
xchg
cmc
mov
hlt
inc
hlt
stc
xor
jl
xor
dec
cli
hlt
adc
jb
scas
lods
pushl
cld
ljmp
ss
imul
pop
sbb
scas
or
repz
ljmp
hlt
cmp
mov
shll
sub
stc
adc
jb
stc
xor
xor
shll
pushf
xor
inc
xchg
ja
cs
lods
repnz
dec
repnz
inc
cli
add
mov
inc
addr16
push
xchg
sub
jb
ljmp
test
cld
add
mov
ds
aas
cli
in
inc
lret
cmp
inc
jnp
lea
pushf
cmp
lock
add
add
xor
popf
xor
fmull
pop
add
mov
lret
int3
sub
sub
and
push
sub
xchg
repnz
add
lea
addr16
push
ljmp
cltd
add
push
or
fsubrl
or
outsl
xlat
das
xchg
inc
push
xchg
inc
stc
sub
inc
xor
ss
xchg
dec
test
add
fcoml
hlt
leave
imul
dec
or
xchg
mov
nop
ror
mov
xchg
mov
dec
insl
iret
rolb
inc
stos
mov
xchg
hlt
xchg
push
out
fwait
pushf
or
hlt
dec
ds
leave
popf
rorb
lret
cli
je
add
xchg
arpl
bnd
mov
inc
sarl
add
in
mov
cmp
inc
lahf
push
cmp
xchg
push
jl
aaa
xchg
jae
dec
jmp
stc
push
mov
nop
int3
aaa
cmp
lcall
or
popf
shl
xchg
cld
ret
mov
pop
loopne
cltd
mov
ss
lahf
stc
mov
popf
inc
add
jb
scas
stc
pop
inc
scas
pushf
inc
pop
mov
pop
push
ret
out
mov
lods
fadd
fwait
scas
mov
sbbl
mov
loopne
sbb
push
ds
mov
roll
mov
adc
movhps
ret
inc
jle
in
out
push
or
xchg
pop
int3
cmp
push
out
jmp
inc
add
fdivrp
ret
sub
mov
jmp
je
loopne
hlt
xor
fidivrl
fidivl
xor
hlt
lock
xchg
outsl
out
imul
xorb
jmp
push
hlt
sar
int
and
cmpsl
call
je
repz
je
mov
push
cmp
arpl
fisttps
in
jnp
mov
scas
jp
aam
dec
fwait
ds
mov
mov
xchg
jge
stos
aad
mov
mov
fildll
scas
mov
mov
jmp
call
xchg
out
std
stos
stos
es
incl
fcom
fwait
cld
ljmp
pushl
ja
repz
sti
cld
add
inc
loopne
stc
aas
stc
mov
loopne
icebp
shr
nop
add
dec
divb
fiadds
mov
stos
xchg
xchg
inc
lea
add
sahf
xchg
xchg
nop
mov
popf
lcall
std
mov
nop
fwait
lcall
repnz
fstpt
or
cld
push
pushf
rorb
clc
cmp
data16
dec
and
or
data16
adc
inc
data16
clc
lods
xchg
pushf
xchg
and
out
or
pop
scas
mov
out
dec
inc
adc
jbe
dec
icebp
fdivp
stc
repz
cmovb
out
cld
cli
clc
std
rcll
clc
scas
repz
daa
ds
out
clc
stc
outsl
das
jb
pop
test
mov
fs
loope
leave
or
popf
mov
popf
aas
jg
rcrl
lcall
jmp
pop
cmp
lea
adc
jecxz
les
hlt
hlt
fdivrs
pop
inc
into
cld
jae
sbb
sarl
pop
into
loopne
ror
mov
xchg
cld
push
dec
cmp
adc
mov
daa
std
iret
add
aad
mov
mov
mov
lret
mov
dec
inc
xor
sub
mull
mov
mov
test
fwait
stos
inc
adc
mov
lret
lcall
imul
xchg
jge
scas
movsl
xchg
int
das
cmp
and
hlt
dec
fcmove
fs
mov
clc
int3
movsl
mov
scas
addr16
or
test
and
mov
mov
inc
xlat
jp
mov
imul
data16
out
sbb
fdivrp
in
out
iret
pop
es
sti
shll
mov
jmp
mov
repz
jg
mov
or
inc
arpl
jmp
fs
iret
shl
jmp
out
jmp
repz
sahf
jnp
aam
jecxz
aaa
cld
incb
daa
xor
cmp
cmc
add
cmp
int
test
or
adc
out
ret
mov
ds
lret
mov
out
jne
cmp
out
mov
sbb
pushf
addl
repz
inc
xlat
mov
adc
xchg
loopne
dec
scas
stc
pop
fucomi
fwait
push
sahf
daa
out
mov
sub
adc
loop
aas
sub
add
loop
inc
cmc
fneni(8087
mov
arpl
jg
shr
xchg
sbb
je
outsb
jmp
sub
cmp
push
fbld
jno
ffreep
int3
and
mov
sbb
ss
lret
jg
adc
fwait
nop
lods
pop
pop
aaa
dec
and
daa
xchg
pop
inc
stc
pop
rolb
mov
jmp
xchg
push
clc
pop
pop
dec
xlat
mov
mov
out
fistl
mov
out
mov
sahf
mulb
sarl
jno
jl
mov
lock
fmull
inc
out
idivl
pop
cli
testb
or
divl
ret
inc
cld
mov
insb
xor
xchg
nop
in
xor
pop
cltd
inc
adc
dec
out
je
jns
mov
or
rclb
bound
xchg
xchg
mov
loope
adc
lcall
lods
push
mov
cmp
jnp
addr16
sarb
test
pop
mov
cwtl
mov
ret
ror
sarb
js
sub
adc
pop
jle
pop
test
loope
and
xchg
test
push
sub
inc
aad
add
jbe
testb
sbb
push
or
jne
jb
xor
bound
jp
call
xchg
fs
scas
int3
imul
sti
dec
adc
call
ljmp
mov
dec
in
inc
or
cmpsb
in
add
test
dec
iret
cmc
xlat
mov
notl
xchg
std
pop
stos
adc
or
sub
pop
iret
loop
cmp
pop
cli
push
push
and
loop
fdivr
in
mull
mov
pop
mull
jb
sbb
aaa
lahf
lock
movsl
cli
ds
and
mov
mov
out
out
movsl
pop
in
repz
stc
stos
iret
clc
stos
jl
arpl
mov
das
cmpb
les
les
jmp
ret
addr16
popf
add
lds
lods
pop
ret
in
cmp
leave
mov
out
repnz
leave
dec
fs
sub
xchg
or
cli
shlb
loope
xchg
dec
cmp
outsb
xor
xchg
enter
lahf
xchg
pop
sar
fwait
pop
test
icebp
and
fwait
jbe
clc
sbb
fwait
nop
jbe
lcall
xchg
xchg
lea
cmpsl
imul
lcall
and
inc
xchg
and
in
pop
lret
push
setno
int
outsl
add
adc
dec
sub
aaa
scas
cli
daa
scas
in
icebp
cmp
cmp
jmp
mov
inc
cli
pop
xchg
not
mov
sub
xor
dec
js
clc
xor
lods
lods
cld
orb
mov
jmp
ljmp
jl
divl
pop
mov
cmp
subb
stos
dec
loopne
jl
sub
hlt
push
dec
cmp
fcomi
xchg
mov
repnz
je
cltd
test
dec
sub
and
ret
mulb
test
lret
shl
test
aad
scas
popf
pusha
jbe
mov
and
pop
mov
mov
lock
movsb
inc
mov
mov
jl
sub
dec
cmpl
mov
dec
and
testl
loope
and
add
cld
and
mov
scas
mov
add
mov
aad
xchg
mov
pop
or
repz
in
idiv
jl,pt
std
scas
and
pop
xor
clc
jl
sti
jl
adc
sbb
add
fxch
cmp
mov
mov
jbe
fwait
inc
and
and
jl
jae
repz
cli
je
ja
popa
adc
cmp
jl
out
jno
mov
add
fistpl
adc
adcl
add
fdivr
ds
mov
je
testl
outsb
mov
cltd
out
adc
adc
nop
cmc
cld
mov
imul
hlt
sti
mov
mov
loope
std
mov
sbb
and
int
testb
sbbb
jbe
cld
mov
outsb
cld
mov
push
mov
mov
out
and
mov
addb
scas
mov
stc
mov
mov
stos
lods
mov
cld
sbb
xor
cmp
xchg
cmpsb
out
sbb
je
add
and
jp
push
pop
cld
mov
rcl
fucomi
jmp
add
mov
cmpsb
xrelease
jp
mov
jmp
xchg
mov
int3
je
inc
enter
cltd
jecxz
cmp
push
jmp
cs
movsb
stc
pop
adc
add
xchg
xchg
in
xor
enter
jnp
cli
pop
fwait
xor
pushf
int3
fldcw
arpl
jb
ljmp
bound
dec
pop
xor
xchg
xchg
sti
xchg
lods
enter
sbb
mov
insb
fisubrs
testl
pop
scas
add
fildll
scas
pop
bound
jb
adc
dec
je
jns
je
ret
mov
or
movsb
mov
scas
movsb
and
fsub
adc
xlat
sub
out
inc
iret
je
and
lcall
scas
fldl
mov
mov
aaa
jmp
jmp
mov
inc
pop
mov
pop
cmp
ja
jmp
mov
inc
sbb
out
negl
inc
jecxz
xchg
pop
ret
arpl
mov
pop
daa
mov
cmpsb
adc
not
es
arpl
mov
push
or
test
mov
or
or
pop
push
push
hlt
add
faddl
mov
dec
test
mov
ret
jmp
divb
cmp
mov
je
pushf
dec
mov
jne
repnz
pop
jb
std
incb
adcl
scas
adc
clc
dec
jnp
mov
fnstcw
out
inc
icebp
jp,pn
orb
sti
jb
rclb
js
cli
repz
jmp
out
add
xchg
scas
jge
aaa
daa
fimull
in
adc
cmp
aaa
cli
inc
in
lcall
jge
push
push
ljmp
mov
shl
xchg
push
int3
test
rcl
in
aas
in
mov
repnz
cmpsl
fdiv
fcoms
push
filds
fcomps
movsb
lret
mov
mov
xchg
cmp
cmp
fwait
xchg
lcall
nop
pushf
mov
inc
adc
enter
mov
sahf
fwait
mov
popf
lea
sbb
nop
push
inc
and
mov
mov
lcall
mov
rol
cmpsb
icebp
xchg
psrld
inc
cld
xchg
mov
push
lock
in
xchg
mov
sub
jmp
jnp
test
add
mov
mov
test
xchg
jecxz
lea
nop
fidivs
mov
xchg
mov
cli
stos
dec
lcall
push
aam
lcall
in
cld
scas
mov
dec
xchg
out
pushl
jb
xchg
nop
jns
adc
and
or
test
nop
mov
lret
or
and
and
mov
lock
or
lock
jo
lahf
dec
leave
sub
and
mov
sub
cltd
stc
lcall
and
xchg
xchg
repz
mov
popf
pop
jp
dec
clc
jmp
jo
int
xor
aad
lea
stos
nop
nop
xchg
xchg
data16
out
xchg
sahf
mov
sahf
out
jns
mov
dec
mov
jle
rorb
decl
les
pop
dec
jp
shl
test
mov
lods
mov
aam
ret
roll
std
fmuls
and
lods
in
call
nop
adc
lcall
mov
mov
iret
xchg
jp
jl
dec
lret
mov
pushf
nop
mov
sbbb
stos
mov
cltd
xchg
dec
and
sbb
lods
ljmp
jp
xchg
inc
mov
sub
ljmp
and
filds
xchg
test
cmc
cwtd
dec
outsb
jbe
mov
sub
xchg
xlat
int3
in
data16
cmc
dec
push
dec
add
fsubrs
idivb
std
testb
or
xchg
mov
push
cmp
mov
mov
test
mull
add
add
fwait
into
xchg
into
test
ja
push
arpl
xor
pop
into
add
ljmp
add
add
mov
lahf
int
int
int
int
int
int
int
int3
ljmp
int3
mov
add
add
pusha
int3
push
int3
add
icebp
lret
loopne
lret
jae
gs
push
lret
out
lret
movsl
lret
or
add
adc
sti
leave
out
leave
out
pushf
leave
popa
leave
cmp
sub
adc
pop
cmpsl
leave
jmp
add
add
in
fcmovne
aam
leave
enter
enter
enter
enter
fadd
int
cmpsb
sahf
add
or
xchg
movl
inc
loop
mov
les
les
add
pop
test
ret
rol
ret
xchg
ret
dec
ret
inc
ret
aas
ret
fadd
enter
ret
ja
push
add
ret
imul
ret
push
ret
or
ljmp
pop
push
arpl
cs
or
adc
in
lahf
insl
jb
clc
push
mov
jb
lods
mov
jb
inc
cmp
add
push
jb
fmull
test
push
jb
clc
xchg
sub
jb
shl
mov
clc
sbb
inc
inc
cmp
push
clc
outsl
xor
jg
jg
clc
pop
pop
xchg
sbb
mov
sbb
stos
popf
outsl
mov
mov
test
iret
std
std
clc
mov
sbb
lods
jmp
clc
repnz
neg
jl
aas
add
lahf
sub
aas
sarb
and
fwait
stos
or
cmc
cld
jne
mov
data16
dec
cmp
sub
dec
leave
mov
lret
pop
outsl
xchg
adc
aam
hlt
vmovntps
cld
xchg
gs
cmc
in
fisttpl
daa
push
dec
cli
jl
sbb
cld
in
mov
pop
fwait
mov
dec
and
gs
sub
adc
pop
push
cld
aad
mov
lods
mov
and
pop
push
call
sub
and
add
push
jo
lret
mov
cld
lret
mov
sub
mov
addr16
inc
cmp
mov
pushl
jmp
mov
cld
imul
and
mov
ror
push
or
dec
sub
xor
cmp
lret
mov
imul
mov
das
mov
leave
mov
cmpsl
cld
popf
xchg
lret
mov
lret
mov
popa
pop
sub
mov
dec
inc
cmp
daa
push
lret
mov
adc
insb
mov
xchg
gs
fnstcw
inc
xchg
dec
aas
hlt
imul
dec
xchg
gs
mov
inc
stos
jae
fmul
cmc
andl
sub
roll
mov
fcomps
mov
pop
sti
movsb
mov
fistpll
mov
idivb
scas
mov
xchg
mov
and
in
mov
mov
mov
aad
lods
cltd
sldt
mov
lods
mov
stos
test
lods
mov
inc
xchg
iret
lea
cltd
mov
mov
pop
test
xlat
aas
or
pop
cwtl
int3
cwtl
mov
mov
int
cld
jg
mov
negl
pusha
fsub
adc
cld
out
gs
in
gs
lahf
mov
stc
in
mov
lahf
pop
outsl
mov
mov
cmpsb
fbld
fbld
mov
pop
js
int
call
lods
idiv
dec
cld
jnp
dec
sahf
mov
shl
es
xchg
inc
std
fildll
stc
idiv
notl
cld
add
fstpl
aas
jns
incl
int
or
cld
mov
insb
mov
push
loopne
sahf
dec
es
negl
mov
push
repz
sub
in
jns
dec
clc
fucomip
mov
int
lock
test
xchg
ljmp
inc
push
das
stc
inc
mov
sub
mov
lcall
sar
mov
loopne
aam
loopne
inc
lcall
lea
fbstp
pop
jmp
xchg
test
fimull
mov
lods
stc
in
dec
mov
iret
out
call
dec
aam
js
mov
cmovns
clc
in
loop
pop
jmp
in
insb
movsl
mov
add
inc
out
outsl
mov
mov
lea
stos
xchg
fistl
mov
int
lret
daa
jnp
loope
repz
pop
in
lahf
pop
mov
movsb
jnp
add
mov
dec
leave
jae
shlb
and
mov
dec
xchg
shll
clc
mov
dec
xlat
je
xchg
test
sbb
hlt
rcll
sahf
xchg
clc
aam
cld
idivl
call
or
mov
jl
sti
test
push
popa
jle
jmp
jnp
outsl
add
jno
cli
aam
pop
stc
jae
pop
adcb
pop
imul
scas
scas
lods
in
sti
je
fistl
xchg
repz
xchg
and
ja
outsl
lahf
mull
scas
je
repz
test
push
scas
je
lret
out
mov
mov
jle
stc
adc
shlb
ficomps
mov
sub
rolb
lock
iret
lock
test
repz
jp
inc
mov
add
mov
ret
repz
ret
lret
mov
ret
lods
mov
ret
mov
int3
fmull
fcmovnb
push
jb
fistpl
lods
jp
or
ss
js
jb
xchg
mov
out
lock
cmp
dec
outsl
shrl
notl
shl
mov
fidivs
out
sub
cmpsl
call
loopne
cmpsl
enter
repnz
test
in
jnp
mov
lret
mov
add
in
int
lret
lret
mov
scas
imulb
aad
mov
repnz
push
add
mov
mov
mov
rorb
mov
mov
hlt
pop
cmp
out
or
sbbl
lods
jp
movsb
bound
mov
inc
enter
cwtl
dec
fbld
push
mov
pushf
lds
enter
sti
cld
shlb
sub
add
mov
lods
push
cld
in
call
cmp
mov
jge
out
les
mov
mov
dec
and
mov
mov
hlt
cmp
or
sahf
hlt
jmp
lock
jns
dec
jg
lock
pop
jne
or
mov
pop
hlt
test
dec
sbb
arpl
mov
xlat
mov
repnz
mov
jl
add
notl
xor
jle
das
and
lcall
je
mov
mov
fsub
arpl
icebp
sub
scas
xlat
lcall
lcall
mov
leave
out
xchg
aas
pop
pop
clc
push
idivl
inc
jge
lods
bound
jmp
sbb
rcll
mov
aam
mov
jg
stc
jbe
sbb
test
mov
jb
icebp
push
je
aam
adc
jl,pn
cli
jbe
cmp
repz
fbstp
inc
push
leave
std
push
add
mov
ja
mov
test
mov
into
rcrl
mov
push
xchg
push
enter
cltd
xor
mov
icebp
subl
xor
div
jg
fiadds
out
adc
out
loopne
fsts
sbb
inc
lock
mov
out
shll
jge
lods
loopne
decb
and
or
repnz
iret
loope
in
loopne
stc
and
cmpsb
jl
cmpsb
addl
enter
inc
aad
ss
leave
jg
clc
jecxz
ja
jmp
jmp
aas
ja
pushl
ja
cmp
out
sub
repz
ja
pop
mov
iret
mov
int
ja
jg
sbb
ja
sti
inc
pushl
ja
lret
lret
clc
cwtl
pushl
and
sbb
cmp
lds
push
inc
jae
ret
cld
xor
mov
mov
ss
out
fwait
sub
mov
out
fistpll
scas
loopne
pushf
jb
ljmp
sahf
push
jne
mov
stos
mov
into
add
fcomi
sub
nop
mov
sti
jmp
fstl
mov
jecxz
test
inc
xchg
loopne
mov
xchg
jle
call
sub
daa
test
loopne
clc
popa
pushf
push
dec
push
mov
loopne
add
lock
sub
jb
cmp
jb
cvtps2pd
fs
nop
lcall
xor
inc
pop
cmp
bnd
in
cli
dec
loop
nop
andl
jb
popf
leave
call
cmp
jno
pop
dec
mov
int
daa
inc
dec
repnz
mov
inc
pop
cmp
lock
out
push
stos
test
popf
xor
mov
jp
mov
cmp
pushf
pop
enter
enter
lahf
push
mov
rcll
mov
jns
imul
sub
mov
repz
testl
stos
fsubl
xor
clc
pop
adc
dec
push
dec
xlat
out
mov
test
std
or
movsb
xchg
xchg
jbe
rol
out
cmpsb
lea
jne
cmpb
mov
popf
mov
jno
aaa
push
lock
sub
in
test
jl
dec
loop
jno
ficompl
jecxz
jmp
xchg
mov
adc
test
add
jp
mov
jl
scas
cld
test
aam
jbe
jb
dec
jle
daa
incb
jno
mov
arpl
int3
jmp
lock
cli
add
out
and
adc
enter
lds
jb
xor
fsubp
fiadds
scas
xchg
and
jne
cld
mov
xchg
jbe
pop
out
lea
xchg
pop
push
push
and
repnz
pop
into
sbb
cld
cmp
and
imull
loopne
pop
sbb
idiv
cmp
iret
jne
mov
sbb
xor
xchg
mul
mov
decb
stos
push
xchg
notb
sub
seta
les
cltd
jnp
ss
sbb
jg
or
fidivs
iret
mov
mov
iret
into
aam
cli
or
pop
pushf
mov
outsl
iret
pop
cmc
jl
mov
ret
outsl
cltd
mov
jecxz
jne
arpl
testl
fadds
pop
xlat
cltd
inc
negl
outsb
push
cmp
lds
pop
sub
in
fdivr
xchg
out
mov
mov
cmp
scas
dec
mov
mov
adc
sub
in
pop
js
cmp
pop
outsl
in
or
fildl
jecxz
jmp
and
adc
ja
adc
in
mov
ljmp
in
mov
out
in
jb
arpl
enter
in
add
sar
cwtl
xchg
pop
xchg
xchg
pop
out
js
jecxz
sti
lahf
xchg
shl
std
out
jmp
es
arpl
pop
jo
jne
jmp
jl
adc
add
in
mov
gs
cmpsb
or
mov
nop
stc
push
fldl
movb
mov
hlt
pop
xchg
rclb
inc
aaa
mov
outsl
xor
scas
lahf
fcmovne
iret
lcall
and
ficomps
add
sbb
imul
insb
inc
fcompl
decb
in
dec
or
movsb
push
call
mov
xchg
adc
mov
xchg
jbe
out
mov
les
pop
or
and
jmp
mov
jnp
les
int3
jbe
nop
add
movsb
movsbl
je
fsubrl
xchg
mov
add
xchg
add
je
les
repnz
mov
adc
les
or
call
jl
jecxz
cwtl
andl
test
xlat
cltd
sbb
roll
push
push
fildl
xchg
sbb
hlt
pusha
and
imul
jbe
loope
loopne
mov
daa
pop
jmp
inc
outsl
repz
mov
icebp
cmp
xor
and
cmc
movsl
cmp
jmp
jge
xor
arpl
movsl
cmp
and
xchg
clc
ret
idivb
enter
dec
shl
xchg
out
mov
ljmp
stc
push
or
jg
aas
mov
mov
lea
cmp
aam
into
sti
aas
pop
dec
aas
xchg
pop
sti
mov
arpl
scas
imulb
and
test
data16
mov
stos
hlt
jne
shrb
pop
or
mov
fdivr
mov
std
int
mov
imulb
jg
mov
mov
pop
cmp
sub
cmc
jnp
mov
cld
jno
stos
rcl
pop
fldcw
pop
cmpsl
sub
fldcw
aas
mov
sbb
outsl
ljmp
cmc
jne
movsl
jp
push
push
pop
or
mov
mov
pop
fiadds
aas
sarl
int3
ss
lock
stc
inc
dec
xchg
fldcw
mov
or
lock
mov
push
je
xchg
sub
fdivrl
add
mov
int
fists
xchg
add
out
repz
jle
mov
shll
xchg
jmp
mov
add
ds
ret
jl,pn
rol
mov
add
ds
loop
mov
push
mov
lods
jbe
testl
jne
ja
stc
call
mov
inc
addb
cmpsl
add
sub
cmpl
hlt
sub
add
divl
popf
sti
mov
and
xor
shl
icebp
cmp
leave
mov
movsb
mov
sub
jmp
in
push
push
mov
or
adc
icebp
sub
or
add
out
jb
call
aad
mov
je
ds
adc
sti
cld
cltd
scas
or
mov
or
cld
out
jb
enter
in
adc
sbb
jmp
sub
or
xchg
shl
cmpsb
mov
cli
cmpsb
jmp
jmp
arpl
and
cmpsb
ds
ds
jmp
add
mov
or
sub
mov
fs
or
ror
adc
inc
ds
jge
ds
movsb
sub
adc
hlt
or
or
and
inc
inc
cld
and
in
lock
je
adc
add
stos
push
andl
or
cld
in
and
movsb
stos
in
aad
js
je
and
cmpsl
xor
and
jge
je
jg
sahf
add
movsl
push
sub
and
in
mov
xchg
adc
rcr
faddl
leave
idivl
mov
xor
loope
push
add
or
jp
pop
xchg
push
adc
movsb
pop
pop
repz
into
hlt
fnstcw
or
sahf
xchg
jl,pt
lret
pop
daa
daa
addr16
dec
mov
movsb
adc
jmp
das
xchg
and
xlat
loopne
or
adc
sub
ret
mov
aad
xlat
aas
sti
dec
movsb
add
lock
mov
sar
aad
iret
mull
cli
mov
cmp
cli
inc
sub
mov
hlt
shlb
adc
cmp
xchg
stos
cmp
fucomp
outsl
xchg
adc
xor
aaa
sub
lret
and
sub
and
mov
push
push
cmc
and
in
or
add
pop
inc
dec
pop
sub
mov
js
push
mov
je
ret
int
movsl
das
mov
repz
pop
test
cmp
cmp
shll
sub
sbb
fdivp
dec
mov
cmp
cmp
pop
mov
sub
cmp
je
popf
or
loop
jns
jae
adc
hlt
sub
pop
andb
mov
call
cld
mov
scas
pop
lea
or
movsl
mov
or
mov
push
cmp
aad
fwait
push
cmp
push
in
pop
xchg
adc
dec
mov
movsl
and
cmp
push
or
and
sub
jae
push
sub
js
iret
out
daa
dec
jae
jns
jmp
std
push
je
lahf
jo
das
jo
xor
dec
or
and
jle
pop
daa
sub
icebp
mov
cmpsl
inc
and
and
es
dec
shll
sub
xorb
push
push
dec
push
dec
lret
xchg
and
das
dec
sbb
push
ficoms
divl
dec
outsb
pop
dec
cmp
adc
jo
sub
enter
jo
iret
shll
mov
and
inc
pop
stos
shll
js
sub
sub
nop
pop
push
xor
negl
push
test
es
je
jmp
mov
das
lret
je
and
and
mov
and
push
sbb
xchg
jo
push
mov
dec
lcall
pop
pop
adc
or
adcb
scas
je
test
es
nop
cwtl
lds
icebp
cmp
jl
jo
mov
cmp
aad
movb
xlat
and
adc
sub
das
xchg
mov
lahf
jecxz
xchg
push
movsb
ret
sti
push
add
int3
add
adc
mov
jge
jge
mov
loopne
rol
fstpl
bound
add
mov
or
lret
repz
sbb
fstpt
and
int3
dec
adc
adc
mov
loope
xor
in
push
xor
mov
ljmp
or
sub
cwtl
push
or
loope
call
pop
gs
cmpsb
dec
mov
push
jle
push
loop
dec
jmp
inc
sbb
imul
iret
cmp
inc
jmp
or
cmp
out
wrmsr
xchg
add
cmp
je
and
cli
and
jp
iret
adc
and
sub
dec
mov
jmp
les
pop
jl
cmpsb
inc
ja
adc
adc
sub
shl
push
sysenter
das
mov
xchg
cmp
stos
push
and
inc
or
mov
or
leave
lods
sbb
lcall
loopne
sbb
nop
pop
inc
movsl
cld
in
repz
lcall
xchg
cmc
sbb
in
jae
sub
and
fs
out
mov
in
push
stc
movsb
xchg
xchg
jp
loope
cmp
xchg
int3
jg
call
stc
mov
mov
addr16
sbbl
lock
fsubrl
out
test
xchg
lea
gs
cmp
add
adc
loop
into
push
and
dec
push
sub
shrb
cmp
movsb
lcall
sbb
dec
cs
xorb
repz
sbb
and
sbb
inc
roll
sbb
sahf
mov
add
adc
mov
adc
adc
jb,pn
add
test
push
push
inc
and
mov
stc
test
ljmp
pop
sbb
add
xchg
fisttpl
cmc
test
jle
clc
adc
pop
adc
loopne
out
divl
lods
mov
adc
sub
sub
movsl
test
pop
lret
inc
into
adc
cltd
inc
pop
xchg
daa
pop
and
sub
sub
cmpb
inc
mov
outsb
sub
adc
into
dec
lret
lods
mov
into
movsb
adcb
sub
sub
pop
jbe
outsl
in
xchg
sbb
jno
lret
out
clc
fstpt
dec
negb
stc
je
dec
mov
or
in
jg
cmpsb
les
cmp
xchg
xchg
cmpsl
test
scas
or
loop
stos
in
cltd
dec
les
xchg
mov
cmpsl
and
xchg
jb
xchg
jge
mov
push
mov
mov
scas
sbb
nop
xor
out
icebp
clc
out
mull
inc
std
les
out
jne
aad
dec
test
test
mov
scas
int
pop
out
push
mov
push
mov
daa
lods
pop
inc
mov
out
add
xabort
aam
test
sti
add
in
hlt
mov
movsb
add
jecxz
sbb
xchg
or
pop
ljmp
je
cmpsb
in
iret
ds
xchg
pop
std
mov
mov
out
add
dec
shlb
sub
aas
cmp
jmp
lcall
scas
jmp
add
mov
lret
adcl
sub
aad
icebp
mov
dec
int3
iret
imul
hlt
mov
repnz
or
fidivs
test
loopne
loop
xchg
lods
lods
jmp
pop
jns
out
out
lods
out
cs
loopne
repnz
fcoms
pop
jno
and
imul
das
cltd
dec
das
xchg
inc
xor
push
push
fwait
stos
scas
repnz
sahf
sub
add
cwtl
daa
lcall
push
and
or
lcall
ret
nop
dec
jb
mov
mov
jnp
pop
arpl
jbe
jge
aad
jbe
mov
and
cmpsl
mov
jle
push
pop
push
inc
push
mov
mulb
xchg
xchg
xor
leave
dec
rolb
movsb
xchg
imul
fcoms
cmpsl
jnp
test
mov
sbb
fdivl
iret
call
sbb
dec
pop
xor
cmc
xchg
je
xor
ja
aad
xor
pop
decl
pop
imul
xor
sti
aam
je
lahf
mov
es
jp
or
add
sti
pop
push
adc
notb
jb
add
fstpt
lods
scas
loope
cmc
sbb
pop
cld
scas
jo
daa
jnp
jmp
out
and
mov
stos
bound
inc
mov
jae
xchg
xchg
outsb
pop
ficoms
adc
pop
ss
aas
push
test
cld
test
fildl
out
stc
push
outsb
cld
in
test
int
stc
into
sbb
cmp
pop
adc
dec
add
or
mov
xor
inc
repz
inc
add
sti
cltd
loope
lea
lds
cltd
je
sti
inc
mov
mov
xchg
dec
inc
jns
xchg
adc
sti
push
lock
in
lahf
mov
push
sahf
push
sbb
adc
inc
inc
mov
addr16
outsb
cmp
jl
je
jne
lods
jb
xchg
punpcklbw
popa
test
mov
and
jle
mov
jno
mov
mov
mov
sti
ret
rorb
adc
orl
lock
hlt
ds
xchg
pop
js
pop
mov
pop
mov
fildl
test
cli
cld
push
aaa
out
lea
aas
cmpsl
mov
sub
mov
rcrb
jl
dec
add
mov
add
jmp
and
stos
and
inc
jge
push
js
mov
dec
mov
jge
cmp
daa
enter
jp
jns
jno
rcrl
add
mov
clc
xorb
jecxz
outsl
icebp
mov
and
ss
bound
les
nop
cld
adc
fmulp
out
shll
loop
rcl
mov
jae,pt
ror
in
jge
and
mov
call
pop
pushl
jno
rolb
ds
in
test
cmp
add
jo
xorb
inc
rolb
cmc
xchg
je
adcb
loopne
pushl
dec
cs
sbb
aam
jle
daa
mov
xchg
inc
jecxz
je
arpl
or
jb
cld
arpl
add
add
fimuls
clc
sti
mov
jle
pop
mov
push
ljmp
dec
hlt
outsl
jmp
xchg
movsb
add
shrb
pop
cmp
das
hlt
out
jg
insb
fcmovnu
pop
dec
imul
mov
scas
nop
test
pop
jno
adc
pop
xlat
jecxz
je
das
sub
rclb
pop
mov
push
pop
es
shr
inc
mov
insb
out
test
in
popa
add
mov
cmpsl
cmp
push
jae
inc
cli
sub
mov
cltd
lcall
cmpl
shrl
icebp
xchg
mov
out
lods
mov
iret
dec
loop
lahf
xchg
xor
push
xchg
cld
push
mov
inc
mov
cwtl
dec
test
xor
dec
lds
dec
scas
dec
lea
inc
xchg
inc
mov
inc
hlt
inc
faddl
pushl
inc
fwait
ljmp
lcall
xor
lea
call
and
xor
shll
scas
sahf
xchg
xchg
mov
and
sarl
inc
cli
pop
sarl
xchg
push
adc
adc
femms
or
aas
and
sub
mov
idivb
decl
iret
iret
dec
lcall
mov
stc
mov
mov
push
bound
ja
cli
insl
push
and
in
mov
adc
sub
push
jle
sbb
ljmp
lret
adc
sub
gs
call
and
arpl
out
pop
rcrb
shll
ja
mov
mov
xorb
pop
and
mov
testb
aaa
jne
rorb
dec
test
int
jo
sub
push
dec
sbb
lret
aam
cs
inc
cltd
arpl
mov
mov
sub
mov
inc
repnz
cs
fldt
add
pop
xchg
clc
jp
add
pop
pop
sbb
in
cmpsl
dec
faddl
mov
repz
nop
insb
imul
lahf
enter
push
mov
jnp
mov
cmp
shr
les
inc
stc
sbb
iret
movsl
lret
inc
pop
push
js
push
jge
ds
out
es
divb
sub
scas
data16
or
out
addr16
aam
jns
jo
mov
inc
fcmovnb
out
mov
jmp
clc
popf
dec
data16
cld
daa
jmp
sahf
mov
xlat
icebp
mov
daa
popf
pop
rorl
xchg
rcrb
cmp
daa
mov
ja
aad
jno
or
cmp
jmp
push
es
lods
fsubl
fbstp
das
inc
mov
jp
jge
hlt
shrl
repz
cmp
adc
out
mov
out
sti
adcb
jmp
and
cltd
pop
fs
push
mov
ret
xchg
xlat
ret
pop
jge
aad
fists
adc
je
out
pop
push
shr
adcb
movsl
dec
decb
jmp
dec
mov
sahf
jnp
stos
add
and
clc
xadd
jmp
je
pusha
xchg
lods
testl
add
inc
sar
sub
jl
mull
in
adc
xchg
mov
ret
inc
stc
test
in
lret
cmpsl
ljmp
ljmp
push
mov
pop
or
sbb
xchg
shll
aad
jle
cmpsb
cmp
pop
loope
outsb
add
or
fucomp
or
pop
sub
jnp
pop
push
enter
popf
shl
inc
jg
insb
jmp
inc
dec
mov
cld
out
jl
lret
lahf
fistl
pop
and
cmc
adc
jp
jecxz
sbb
pop
xchg
jge
mov
scas
leave
ds
mov
pop
xor
jb
call
jnp
jp
lahf
inc
pop
gs
std
xor
push
ss
sbb
push
or
pop
loopne
add
and
ss
jmp
sub
pop
add
xchg
in
xchg
add
xor
adc
cld
sbb
fwait
mov
sbb
scas
xchg
fwait
insb
gs
shrb
xchg
imul
pop
adc
add
dec
xor
outsl
mov
adc
jle
out
loope
mov
js
outsb
clc
inc
inc
jg
jns
lcall
mov
mov
adc
lret
cs
adc
mov
push
sahf
dec
lcall
lods
or
sub
mov
pop
adc
daa
pop
in
rcrb
ss
lea
cmp
cltd
aam
xchg
scas
cs
fdivr
popf
setp
lcall
mov
addr16
imul
ds
nop
mov
clc
dec
cmpsb
mov
mov
fstpt
fwait
outsl
mov
gs
stc
out
js
lahf
mov
and
xlat
jmp
in
mov
lret
dec
push
js
scas
add
movb
xchg
jmp
mov
movsl
push
jge
lahf
push
loopne
push
in
xchg
push
in
mov
lock
lods
cli
ljmp
cmp
push
pop
lret
cmp
xchg
shrb
adc
ja
ljmp
popf
dec
dec
fiaddl
out
xlat
in
loop
cmc
inc
cld
push
loopne
daa
dec
hlt
das
mov
imulb
xor
loop
pop
cmp
out
push
lcall
mov
sti
cmc
in
push
xor
mov
cmc
repnz
cmp
jmp
into
mov
xchg
das
js
jbe
mov
loop
fmulp
addl
push
dec
inc
cmp
sub
add
in
jmp
dec
out
arpl
rclb
les
test
ret
pushf
inc
ja
lret
cmc
adc
mov
xchg
cmp
adc
pop
aas
orb
mov
mov
icebp
popf
mov
cmpsb
out
jo
adc
mov
fcomp
mov
test
pop
add
shll
xchg
rcl
sbb
enter
sub
repz
and
add
cmp
jnp
jnp
pop
ljmp
jb
or
mov
dec
xchg
ret
pop
xor
call
dec
xor
negb
or
inc
cmp
cmp
and
xchg
xor
sbb
outsl
dec
adc
aam
sub
add
rcll
paddsw
adcl
lds
repz
add
std
stc
cmp
icebp
lds
sbb
or
and
sahf
mov
mov
cmp
adc
les
mov
cmp
cmpsl
test
clc
icebp
jno
mov
pop
das
or
add
fcomi
sahf
xchg
mov
dec
inc
add
pop
out
pop
add
fsts
inc
push
data16
adc
loopne
lret
sar
adc
pop
mov
push
test
and
call
loop,pt
subps
mov
imul
fsubrs
aaa
mov
shrb
xchg
test
inc
rolb
dec
push
cli
mov
pop
jb
loopne
pop
xchg
push
repnz
and
test
loop
sbb
jmp
scas
fdivr
adc
lahf
push
jnp
jmp
dec
adc
in
aas
mov
jnp
xchg
orl
daa
mov
add
add
sub
lcall
sbb
cld
fisubl
inc
xchg
inc
arpl
clc
popa
in
pusha
pop
hlt
sub
and
pop
in
pop
mov
pop
in
pop
pop
lret
mov
loopne
in
push
push
sub
mov
push
call
mov
dec
rorb
clc
mov
dec
dec
dec
test
inc
cld
mov
lret
inc
mov
xchg
mov
mov
ds
aaa
cmp
cmp
cmp
jg
daa
cmp
push
xor
xor
rolb
push
inc
xor
mov
push
adc
sub
sub
sub
sub
daa
gs
inc
push
es
inc
and
and
inc
pop
adc
and
and
rcrb
f2xm1
lret
mov
repz
xchg
int
fisubl
aad
sub
fchs
adc
gs
xchg
mov
fcoms
in
adc
xchg
pop
push
je
fmuls
or
or
inc
test
mov
fs
jbe
mov
pop
loop
dec
jne
sahf
pop
daa
pop
mov
stos
ja
jecxz
add
lcall
push
sbb
push
jle
movsb
and
hlt
xchg
nop
repz
pop
es
add
inc
sub
fnstsw
mov
test
or
lret
ja
scas
stc
das
loope
shl
cli
dec
xor
scas
in
in
repz
cli
mov
into
jbe
mov
scas
scas
sub
sbb
xlat
jp
jg
sarb
push
lret
mov
pop
lahf
scas
inc
mov
sti
sbb
pop
xchg
jecxz
sub
fsub
out
jnp
sub
cmp
push
sub
adc
pop
push
jb
hlt
std
outsb
divb
fisttps
sub
test
pop
xchg
fdivrl
test
iret
ret
std
fwait
pop
test
sbb
cmpsl
sub
icebp
xchg
stc
mov
jmp
int
movlps
push
xchg
mov
pop
or
test
loop
lods
lods
sbb
mov
add
xchg
cli
test
inc
ljmp
aam
mov
mov
or
orl
mov
je
add
jbe
imul
mov
in
jae
lret
sub
jb
in
test
test
test
cld
popf
test
test
icebp
xchg
lds
lods
clc
push
rol
mov
repnz
cmp
adc
stc
jno
daa
dec
xchg
cmp
jl
cmc
aaa
std
xor
std
sub
and
dec
out
and
pop
pop
sbb
inc
mov
aam
sub
pop
insl
call
or
mov
dec
mov
mov
mov
mov
mov
scas
fwait
scas
pop
add
popw
cmp
popf
out
das
js
outsl
pop
aad
les
mov
test
and
int
and
xchg
pop
enter
add
lahf
bnd
out
cwtl
sbb
dec
sbb
mov
int3
add
xor
push
test
shl
icebp
hlt
addb
mov
or
aad
jmp
mov
js
lock
xchg
mov
int
or
mov
scas
scas
test
fnstsw
lods
arpl
push
mov
call
xor
repz
mov
test
and
stc
lods
mov
gs
xchg
mov
mov
stos
xchg
cld
mov
xchg
add
jne
cwtl
fwait
adc
xchg
push
adc
adc
adc
adc
push
adc
pmulhuw
in
or
mov
pop
xchg
pop
scas
clc
loope
gs
xchg
gs
mov
gs
xchg
mov
xchg
gs
lcall
gs
jle
cmp
pop
xchg
lahf
aaa
mov
lcall
lcall
lock
mov
jne
je
jae
cld
jb
notb
inc
push
jno
jo
outsl
mov
sub
dec
inc
arpl
imul
mov
das
mov
or
lret
loop
stos
gs
mov
mov
jl
mov
push
adc
mov
sbb
sbb
lds
rcrl
mov
mov
xchg
gs
gs
xchg
nop
xchg
xchg
lcall
mov
mov
push
pop
push
hlt
ja
mov
dec
imul
loop
xor
sbb
mov
mov
addb
xchg
mov
adc
and
lds
scas
shll
dec
pop
fidivrl
lock
pop
mov
mov
lret
pop
aaa
and
movsl
lds
jb
out
cmp
shlb
push
ja
mov
rcr
scas
lcall
mov
lods
out
sti
ja
out
xchg
das
sbb
push
mov
xlat
fstpl
cmc
or
data16
mov
jmp
pop
test
out
push
ja
cli
imul
mov
test
pop
shl
mov
clc
push
sahf
cmp
cmp
jle
dec
adc
push
rorb
hlt
je
hlt
add
out
inc
into
pop
or
mov
lods
rcr
cld
jg
std
or
jae
xchg
aas
popf
testb
mov
mov
adc
and
push
jle
sbb
mov
sub
inc
loop
sbb
add
daa
idivb
cli
inc
cli
inc
movsb
arpl
fists
adc
jno
push
lock
add
pop
pop
xchg
gs
jb
int
int3
lret
rorl
mov
mov
pop
daa
cld
pop
lea
mov
fnstsw
adc
or
pop
dec
pop
mov
setns
xchg
mov
adcl
sub
sub
mov
aas
pop
push
pop
in
mov
xchg
ja
jno
aas
aaa
mov
cmp
push
ret
ret
cmp
lret
jne
jbe
jl
or
sub
leave
cmc
dec
fcmovnu
pop
incl
or
add
cmpsb
hlt
repz
cmc
jb
xchg
cmp
sub
xlat
call
cmpsl
inc
adc
or
test
out
clc
pop
arpl
dec
test
adc
icebp
mov
xchg
dec
repnz
cmp
enter
sti
mov
cmpsb
sub
mov
aas
jg
out
pop
popa
xchg
ret
sbb
adc
cmp
cmp
arpl
push
scas
jns
dec
adc
repnz
push
daa
lret
ret
arpl
in
in
dec
cmc
jge
pop
fnstcw
mov
jmp
gs
mov
rorb
add
sbb
lds
ret
mov
fcomps
js
cmp
fidivrs
cli
ret
xlat
iret
enter
mov
mov
or
in
stc
cld
dec
aas
cld
mov
sahf
fwait
outsl
mov
fidivrs
sbb
cli
sbb
pop
fisubrl
lret
cli
sbb
push
mov
out
pop
mov
adc
sub
clc
or
xchg
ljmp
popf
sahf
nop
lahf
mov
les
loop
mov
icebp
js
fistpll
add
negl
fstpl
hlt
ds
mov
hlt
mov
outsl
or
loope
pop
xor
mov
repz
lahf
loopne
jecxz
push
in
xchg
xor
add
addl
ljmp
nop
test
fisubrl
in
fstp
fbld
xchg
shlb
mov
adc
nop
xchg
adc
ds
mov
das
das
lret
push
jecxz
cld
or
or
or
or
or
pop
rolb
cmp
add
cmp
xchg
jnp
insl
or
aas
jae
idivl
or
xor
loop
mov
lea
jns
test
mov
aam
mov
loopne
jnp
pop
rolb
xchg
adc
daa
rcll
jae
out
jmp
mov
jle
pop
pop
scas
pop
jo
mov
cwtl
call
jp
add
sub
and
lret
pop
lds
mov
int3
xchg
inc
bound
int3
jb
subb
push
xchg
das
movsb
cmp
std
negb
call
pop
popa
mov
fwait
dec
mov
fdivp
int
imul
sahf
dec
mov
cmpsl
adc
addr16
addr16
call
shll
in
gs
bound
in
in
pop
xchg
pop
rcrl
in
jns
add
pop
fcomps
pop
mov
adc
xchg
push
fcoms
push
lcall
ret
stos
dec
push
inc
xchg
mov
popf
dec
lds
inc
push
adc
push
inc
lds
roll
mov
inc
lcall
cmp
gs
push
fdivrs
cmp
cmp
jle
popf
xor
mov
sub
mov
int
adc
mov
aam
loopne
cs
pop
xchg
lret
testb
jle
add
ja
jl
cmp
sti
mov
out
movl
repnz
js
dec
pop
nop
std
in
mov
mov
repnz
icebp
outsl
lock
das
adc
dec
adc
int3
adc
xor
xchg
mov
push
mov
push
mov
arpl
sbb
xchg
aam
add
jne
jle
call
repnz
in
mov
gs
out
lcall
repnz
xchg
mov
lea
insl
sub
movl
ret
inc
mov
mull
loop
cld
clc
fcmove
and
pop
push
lret
mov
mov
in
sub
std
loopne
xchg
sti
mov
stos
push
je
iret
inc
mov
lret
out
mov
push
mov
dec
adc
enter
fisubl
jns
pop
js
inc
add
cmp
out
xchg
xchg
cmp
ss
decb
xchg
jnp
xor
sahf
stc
aas
xor
lret
jl
sub
movsl
addr16
pop
sbb
lock
or
scas
push
mov
outsb
adc
in
popf
jle
int3
pop
inc
imul
hlt
mov
mov
fists
adc
sete
mov
sahf
lea
rcrl
ret
or
jae
ja
outsb
mov
lods
mov
adc
outsl
jl
adc
ljmp
idivl
or
mov
pop
decl
testb
das
popf
mov
xchg
stc
adc
and
loop
enter
sahf
jns
in
fld
add
cli
loop
iret
popf
xchg
into
stos
xchg
push
jp
or
jp
ror
jmp
inc
lahf
testl
xchg
movsb
test
out
sti
repz
cli
roll
and
and
push
sti
lahf
inc
loopne
nop
lods
cmp
idivl
mov
test
or
test
jmp
jbe
ljmp
jle
jnp
stc
or
adc
push
lahf
fsubl
imul
and
scas
and
stos
imul
outsl
cltd
xor
cmc
int3
jecxz
jl
ds
mov
cwtl
aas
outsb
mov
pushf
out
pop
sub
jg
je
icebp
out
cmp
add
jb
cmp
mov
sti
xchg
stc
xor
sbb
pop
xchg
jnp
xchg
mov
mov
xchg
jnp
jnp
adc
adc
adc
pop
xchg
jae
es
shll
out
adc
mov
stc
pop
mov
dec
pop
or
mov
bound
hlt
dec
inc
mov
rcll
inc
mov
pushf
adc
stos
and
mov
ret
push
jnp
mov
xchg
sbb
and
mov
lahf
ljmp
jno
js
push
jge
lock
jmp
sub
int3
hlt
ljmp
push
pop
push
push
dec
call
mov
cmp
add
jns,pt
add
jp
cltd
incb
jmp
incb
mov
iret
cmp
std
add
fwait
fwait
jae
mov
mov
imul
scas
cld
xchg
mov
clc
pop
popf
push
add
ror
popf
push
stos
stc
pop
xor
lds
repz
jae
in
ljmp
xchg
dec
repnz
mov
xchg
gs
xchg
pop
out
ror
fistl
imul
dec
insl
ljmp
add
jl
aas
sbb
lcall
pop
shlb
push
loopne
push
adc
cmp
out
icebp
loope
fdivrl
adc
out
in
cmp
js
xchg
pop
fisubs
jmp
out
mov
stos
cmp
jge
pushf
inc
fwait
and
nop
repz
insb
ficompl
jb
lret
cmp
push
scas
jne
add
mov
ja
cli
and
push
and
jl
add
stc
xchg
and
mov
mov
rcrl
pushf
sbb
sbb
xchg
jle
push
jl
xor
adc
stos
scas
stc
pop
adc
mov
mov
pop
int3
aam
cmp
ss
jno
fwait
xchg
vprotq
mov
cmp
push
add
sub
inc
dec
add
daa
aaa
es
dec
dec
cwtl
frstor
and
sbb
add
adc
es
pop
add
push
stc
sbb
les
add
jno
sbb
scas
pop
add
add
and
jg
dec
fcmovnu
repz
in
aas
test
in
iret
lods
fcomp
aam
adc
repz
jo
enter
int3
pop
add
pushf
mov
in
mov
fdiv
jnp
test
lahf
faddl
xor
ss
ficoms
xor
fdivl
lds
test
testl
jp
je
mov
pop
mov
adc
jecxz
ret
add
mov
pop
stos
lahf
in
outsl
outsl
je
mov
dec
sahf
sbb
shr
cmpsl
pop
bswap
push
out
xchg
dec
mov
clc
sahf
je
xchg
orl
jb
cli
push
int3
cs
cmp
mov
lret
fcmovnb
mov
fsubr
inc
jl
popf
jbe
sahf
mov
fchs
adc
fnstenv
jb
ss
test
cmc
dec
aad
inc
sti
cld
mov
mov
cmpsl
sahf
cmp
cs
xor
xchg
jae
mov
mov
ret
adc
add
into
mov
cs
sub
push
mov
je
les
lock
lret
jnp
pop
xchg
jnp
mov
stc
push
in
mul
lock
in
dec
jns
mov
pop
jb
shl
repz
xor
dec
or
rcrl
cmp
pop
mov
test
xchg
xchg
icebp
mov
aaa
jns
mov
mov
stc
mov
out
xchg
stos
repz
xchg
dec
nop
int3
fwait
cmp
cli
or
xchg
or
out
push
lahf
jmp
outsl
in
and
scas
pop
roll
mov
push
mov
out
dec
cmpsb
stc
je
xlat
adc
sbb
lock
repz
xlat
loopne
sar
add
es
pop
in
ljmp
sbb
fiaddl
push
jmp
aas
je
roll
js
call
inc
pop
jbe
sti
jbe
and
add
je
clc
test
cmp
or
das
pop
jecxz
mov
push
mov
aas
call
out
dec
xchg
adc
call
ficomps
mov
inc
lahf
test
jp
scas
test
leave
cmp
daa
fcomip
sbb
dec
inc
pusha
adc
aad
xlat
mov
fisttps
add
sti
mov
pop
repnz
xchg
adc
pop
or
jl
mov
push
loope
inc
sbb
cmpsb
pop
jge
add
ljmp
xlat
pop
sub
sarb
and
sti
mov
nopl
dec
inc
cmp
orl
add
mov
jl
jecxz
jmp
add
pop
push
int3
sbb
mov
mov
out
or
lock
ds
mov
or
cltd
xchg
stc
mov
je
mov
mov
push
stc
push
cmp
scas
xchg
fucomip
out
cwtl
outsl
ds
mov
test
jmp
push
cltd
mov
call
add
les
andl
popa
fdivs
jbe
scas
cli
ficomps
xor
lea
das
sub
mov
mulb
cmp
cmp
arpl
enter
jnp
out
jnp
mov
daa
lahf
jl
jecxz
jae
les
adc
jg
aam
lret
inc
fidivrl
pop
cmp
inc
test
adc
out
or
sahf
loop
movsb
sbb
sub
fadds
ss
and
andl
fcompl
cmp
xchg
sub
pop
push
call
cmp
adc
push
or
clc
repz
or
cmp
repz
call
dec
les
adc
xchg
je
jle
enter
mov
jmp
adc
sar
lock
push
push
in
jbe
xchg
stos
xor
cli
sbb
pop
dec
inc
mov
xchg
inc
push
cmp
mov
test
jmp
cwtl
mov
out
jmp
mov
test
out
jno
pop
scas
js
leave
fs
xchg
cmp
loopne
in
sub
cmp
push
ds
xchg
add
jbe
jmp
cmp
push
sub
jg
add
hlt
repnz
cwtl
jo
inc
pop
xor
test
cld
stc
and
xchg
lahf
sbb
mov
cmpsl
out
mov
lock
in
mov
xchg
out
xchg
fnsave
or
out
out
test
push
adc
dec
cmp
mov
dec
shrb
mov
je
scas
aas
xchg
sti
fcmovb
shr
fstps
cmp
inc
mov
jmp
push
lock
mov
sbb
mov
mov
cli
xchg
cmp
xchg
cmp
icebp
movsb
sbb
lret
ret
in
repz
scas
cli
mov
jp
test
xor
loopne
decl
fsubp
lea
iret
pop
jge
mov
mov
mov
mov
dec
pop
jp
push
jp
stc
movb
scas
cmp
xchg
dec
int
jge
push
xchg
in
test
out
sahf
pop
jmp
or
inc
lods
mov
add
rcrl
ret
cmp
lcall
pop
stos
cld
sub
pop
aaa
jmp
cmp
and
sahf
jmp
mov
vphaddubd
sbb
iret
mov
dec
jecxz
cli
jp
pop
scas
in
cwtl
pushf
clc
cmpsl
iret
cli
adc
out
repz
popf
fidivrs
adc
lock
stc
sbb
sti
fcoml
data16
ja
addb
sbbb
pop
mov
mov
mov
lret
xchg
mov
mov
xchg
ret
push
repnz
aas
mov
arpl
test
mov
mov
cmp
adc
pop
int
clc
xchg
stc
xchg
mull
in
xchg
sahf
das
repnz
mov
adc
icebp
mov
jnp
adc
mov
lret
adcl
pop
dec
enter
push
setnp
clc
xchg
pop
shl
xchg
icebp
lret
mov
or
pop
mov
push
mov
mov
in
dec
movsb
stos
cli
loopw
dec
imulb
in
push
daa
pop
xor
popa
orb
pop
pop
ljmp
pop
dec
xor
mov
rol
fisubl
dec
add
mov
fadd
iret
repz
sub
ss
or
hlt
aad
es
and
cmpsl
hlt
cs
adc
out
nop
jns
mov
inc
and
push
out
pop
and
jbe
psubusw
dec
cs
inc
xchg
and
scas
push
cmpsl
aaa
frstor
imul
cli
pop
leave
jne
lcall
std
dec
push
out
push
into
add
push
add
ret
das
xchg
frstor
and
popa
bound
neg
mov
cmp
mov
adc
out
enter
out
test
xchg
andb
sbb
lods
lret
dec
adc
adc
xchg
push
jecxz
jp
sahf
les
xchg
and
dec
loopne
stos
xchg
jmp
pushf
mov
or
mull
frstor
adc
out
mov
dec
push
les
test
inc
mov
sbb
aas
in
mov
shll
add
mov
aas
mov
lahf
adcl
inc
sarl
mov
pop
cmp
fdivr
fistpl
fucomip
shr
fisubrs
add
mov
add
rcrb
stos
lock
mov
fldl
cmp
jne
lahf
cmp
icebp
xchg
mov
jnp
and
jo
rorb
jg
push
fwait
pop
jae
push
jnp
mov
hlt
gs
adc
push
and
into
scas
mov
sbb
push
out
sub
mov
inc
pop
cli
cli
pop
stos
pop
cmc
cmp
sbb
testl
out
pop
int3
lods
xrelease
jbe
push
out
ljmp
sub
jg
fstl
dec
cmpb
push
iret
cmp
imul
mulb
loop
push
jg
sbb
inc
in
repnz
aaa
mov
add
les
ss
hlt
decb
add
neg
lds
lahf
dec
sbb
daa
cmc
dec
stc
mov
mov
std
jg
mov
hlt
mov
add
jg
mov
adc
adc
jmp
ja
ja
dec
inc
ja,pt
cli
cmp
aad
in
dec
cld
lcall
and
mov
cld
pop
jbe
sti
hlt
out
out
sahf
fwait
int3
cli
jmp
jecxz
frndint
add
jmp
lock
push
popf
adc
adc
push
out
repz
or
pop
xchg
das
ret
pop
fidivs
out
hlt
dec
cwtl
push
daa
imul
movsb
pop
ljmp
data16
jno
jle
cmp
idivl
and
out
jl
mov
jmp
std
int3
test
and
shrl
iret
inc
cmc
out
imul
add
je
and
js
cmp
dec
daa
clc
negl
xchg
dec
jo
jl
and
ss
jae
mov
bound
repnz
iret
and
push
sbb
imul
cmp
mov
sub
out
push
mov
inc
and
pop
les
cli
lahf
pop
fistpl
cli
xchg
movl
pop
xchg
pop
jecxz
jecxz
insb
insb
dec
fsubrl
add
ljmp
cli
mov
pop
iret
hlt
pop
out
jg
pop
sub
cmc
into
and
xchg
lea
out
and
jle
xchg
ljmp
inc
hlt
adc
out
pop
xlat
loopne
or
add
lret
call
or
add
sti
dec
pop
jge
xchg
adc
sub
jae
fcmove
lods
jne
pop
jnp
mov
jle
inc
repnz
imul
push
cmc
cmp
aaa
jbe
jb
movsl
jmp
inc
cmp
nop
mov
in
mov
pop
in
addr16
dec
dec
test
icebp
lahf
subb
xlat
ljmp
and
lods
movq
mov
es
adc
out
pop
call
stc
jl
scas
xchg
sbb
ss
sbb
std
lock
xchg
ss
test
mov
inc
out
mov
adc
push
inc
fcoml
test
iret
xor
or
repnz
pop
push
jp
les
cli
lock
pop
xchg
je
dec
fiaddl
xchg
dec
popf
scas
ret
jae
xchg
xchg
push
jecxz
fs
clc
into
out
int3
sub
or
test
cli
fistpll
into
xchg
fcoms
iret
pop
idiv
jp
std
test
jmp
arpl
into
jae
int
div
jg
aas
iret
jp
mov
iret
pushl
ljmp
mov
notl
outsl
fcmovu
decb
push
test
inc
aad
jae
fwait
lahf
sti
jg
adc
dec
repz
jecxz
test
add
fbld
test
shll
dec
or
into
jns
fildl
jecxz
incl
pop
cmc
push
mov
jp
push
jg
gs
mov
lret
in
sahf
jle
jecxz
mov
jmp
inc
jno
decl
sahf
stc
push
insb
loope
sub
push
repnz
mov
insb
pop
out
jno
xlat
fstps
inc
jne
cli
jp
pop
jmp
push
daa
push
ret
scas
inc
push
add
test
jl
repz
mov
lods
loop
movd
cmc
lret
cmc
sbbl
lret
out
movswl
xchg
jno
sti
mov
xchg
test
pop
mov
xchg
mov
call
jmp
mov
push
dec
sub
filds
aaa
lret
cmpsl
inc
jmp
cmp
iret
push
ret
je
out
fwait
xor
neg
push
lcall
lcall
pop
xor
out
mov
dec
aam
hlt
mov
add
jecxz
mov
fucomp
fcomps
mov
xchg
dec
movsb
sub
cli
jp
add
imul
dec
sti
out
mov
cmp
sti
jp
sbb
testl
xchg
push
or
add
jg
rcl
cs
in
stos
in
scas
jg
lahf
push
in
repz
movsb
adc
loop
adc
jecxz
mov
xchg
fs
fsubl
in
sbb
mov
pop
jb
in
add
adc
fstp
loop
jl
out
xorl
arpl
xchg
imul
mov
subb
jge
cmp
lea
iret
imul
or
fcompl
jg
jne
mov
push
ret
sbb
fldcw
push
xchg
outsl
js
into
int3
and
push
loopne
loop
sbb
adc
ljmp
seta
pop
out
idivb
fnstenv
scas
jno
notl
pop
std
outsl
push
add
add
xlat
in
push
lcall
jle
and
les
adcb
cmp
jg
loop
add
sbb
pop
jnp
dec
jge
sbb
add
add
js
and
scas
sbb
fs
scas
push
ja
outsl
jne
cmp
jns
aam
adc
sub
div
mov
test
mov
fdiv
sti
mov
add
scas
pop
cmp
jp
je
jp
lds
test
sarl
dec
shl
add
adc
cmpsl
mov
aas
aas
arpl
rolb
aas
mov
clc
ss
inc
inc
cmp
test
mov
out
and
ss
daa
xchg
ret
mov
inc
jne
jl
out
testl
jl
aaa
mov
add
xor
cli
and
xor
jnp
loopne
outsb
dec
jae
outsl
lock
pop
cmp
xchg
int
idiv
daa
into
sub
out
jno
int
jecxz
push
push
in
jmp
dec
push
out
rcrw
int
rolb
push
in
aaa
push
lock
movsb
mov
lock
imul
leave
test
add
cld
push
dec
lock
notl
sbb
xchg
cwtl
pop
ljmp
fcoms
in
push
scas
mov
xchg
jmp
jns
lock
in
mov
fcmovnu
add
jle
std
in
cwtl
xor
jl
jns
rcr
call
out
pop
rol
pop
mov
clc
out
cmpsl
sti
cmp
leave
adc
fcomps
push
jne
add
subb
fwait
lcall
lcall
xchg
decl
sahf
shr
fbld
inc
jl
sub
stos
je
dec
sar
scas
mov
mov
pushl
js
loope
and
shrb
and
lods
lcall
shl
lahf
enter
ljmp
aas
out
test
js
movsl
or
js
jnp
std
icebp
mov
cmpsl
sti
jl
subb
xchg
sarl
outsb
faddl
mov
cmp
mov
or
adc
nop
popl
and
scas
xchg
mov
mov
movsl
and
mov
enter
dec
mov
xchg
out
mov
cmp
xchg
dec
lret
inc
pushl
fs
xor
and
xchg
adc
lcall
flds
repnz
mov
enter
cltd
fsubl
movsb
movsl
sub
iret
cmc
cmpsl
mov
lods
stos
xchg
sbb
jle
incl
fisubrs
pop
test
negb
ds
into
jge
rolb
je
decl
pushf
xchg
xchg
call
add
push
lea
and
mov
inc
push
cmp
pop
sahf
cwtl
stos
sub
mov
mov
pop
mov
out
out
mov
lret
lods
out
out
pop
xchg
mov
fidivrs
sahf
push
popf
in
or
push
xchg
jo
out
ficompl
adc
cmp
xlat
fbld
movsb
jb
mov
aas
sub
pop
cwtl
mov
in
incl
std
pop
rorl
pushw
sub
lock
ficomps
jp
mov
cmp
inc
std
imul
nop
call
fiaddl
adc
dec
inc
xchg
push
lret
mov
in
jb
cmp
xchg
xchg
jb
std
cltd
outsb
cmp
jo
js
mov
cmp
test
idivb
ds
xchg
xlat
xchg
xchg
test
ljmp
sub
inc
std
mov
shrb
loop
daa
dec
inc
cmp
mov
mov
movsl
lock
cwtl
jb
and
xor
out
push
lret
xchg
xchg
nop
loope
sbb
xchg
addr16
fisubs
ss
jns
repz
inc
xchg
std
add
add
cmc
mov
std
mov
jg
aas
dec
clc
add
pop
push
icebp
lcall
jnp
add
mov
sub
loopne
test
out
enter
xor
repnz
jb
mov
adc
nop
xor
fsubrp
call
shlb
jmp
mov
jo
jne
mov
lods
sahf
mov
insb
popf
pushf
lret
mov
and
mov
mov
stos
xchg
jb
mov
loop
test
ds
mov
or
aam
dec
ljmp
jmp
jnp
or
and
popf
es
pop
sbbb
push
scas
pop
fwait
mov
jnp
lods
mov
mov
out
hlt
stos
fsubrp
jl
jg
fcmovnbe
cwtl
add
inc
pop
je
roll
rorl
out
rcl
mov
xchg
sarb
rolb
jb
or
rorb
sbb
stc
jmp
iret
into
stos
jge
jg
into
cmpsl
into
aam
into
xchg
jnp
add
addr16
pop
into
push
into
icebp
int
int
add
add
jo
int
int
int3
cltd
int3
popa
int3
cmp
xor
pop
lret
dec
lret
ds
sub
add
add
and
lret
stos
lret
gs
push
lret
or
dec
out
leave
movsb
leave
jbe
jo
add
add
imul
leave
push
leave
inc
leave
xor
and
sbb
or
cld
enter
enter
enter
fcmovnb
add
add
mov
lret
cltd
movb
pop
dec
cmp
daa
push
icebp
add
add
lods
lds
lds
repz
les
insl
les
dec
les
ffreep
int3
ret
add
add
test
sub
ret
mov
ret
das
ret
add
shll
mov
and
or
sti
shl
rol
enter
stos
push
scas
or
in
sub
lds
aas
lds
repnz
add
subb
daa
fcmovnb
rol
lcall
ret
or
ret
lahf
ret
add
popa
ret
or
jmp
rcl
mov
or
rcrl
dec
shlb
add
add
iret
ja
add
test
into
stos
int
int
int
int
int3
mov
int3
add
add
and
push
int3
test
mov
lret
lret
ljmp
lret
fsubl
sti
ds
mov
leave
jl
push
add
add
leave
dec
xor
leave
sbb
enter
enter
enter
enter
add
enter
enter
enter
enter
test
movsb
cltd
ja
push
pop
add
add
movl
int
mov
cwtl
lds
lds
lds
vpinsrw
add
add
jp
je
outsb
les
pop
les
les
les
ret
outsl
ret
pop
or
ret
sub
and
ret
mov
add
add
addb
and
push
ret
clc
shl
in
shl
rol
lret
sarl
lahf
rcrl
cmp
sar
repz
aad
shl
add
subb
out
mov
into
cmp
or
int
int
int
add
add
int
int
int
int
int
int
int
int3
dec
int3
xor
pop
int3
stc
lret
jmp
lret
jno
cmp
es
push
lret
or
test
leave
push
leave
adc
push
leave
cli
enter
add
enter
enter
enter
enter
xlat
pop
push
dec
add
add
movl
sbb
adc
movb
pusha
dec
ds
xor
sub
and
sldt
or
test
leave
vpextrw
lds
lds
les
roll
cmp
ret
cmpsl
ret
push
ret
loope
subl
roll
mov
iret
dec
iret
ds
cmp
das
iret
sub
mov
iret
sbb
or
int3
into
ret
into
dec
into
es
jmp
in
mov
dec
int
int
int3
inc
int3
aaa
int3
xor
sub
cmp
sub
int3
nop/reserved
add
lret
mov
cmpsl
lret
xchg
lret
xchg
lret
mov
or
iret
orb
lret
adc
push
lret
or
leave
mov
mov
add
jnp
jb
sahf
enter
enter
movl
add
add
pop
lds
les
les
inc
pop
pop
inc
in
inc
add
ret
mov
jno
pop
dec
push
xchg
xor
aaa
js
pop
inc
add
iret
inc
iret
aaa
dec
pop
iret
inc
into
push
into
add
rcrl
push
cmp
mov
mov
or
add
xchg
lret
in
ror
mov
add
and
lret
xchg
lret
nop
pop
or
lret
outsb
pop
pop
lret
dec
lret
inc
lret
cmp
xor
xchg
lret
and
sbb
lret
std
lret
lret
aam
add
scas
lret
cwtl
lret
or
lret
push
and
add
inc
and
and
push
lret
stc
leave
in
fxch
lret
leave
testl
lcall
leave
ja
insl
leave
pop
leave
pop
leave
dec
leave
cmp
aaa
ja
add
or
dec
icebp
enter
enter
pop
and
lods
enter
enter
or
jae
push
enter
add
add
enter
ljmp
push
push
dec
movl
add
add
xor
sub
and
sbb
or
add
inc
out
loope
xchg
movb
outsb
add
add
ljmp
xor
and
ffree
xlat
mov
add
mov
scas
cwtl
mov
xchg
add
lds
insb
lds
pop
lds
dec
lds
add
lds
lds
lds
lds
lds
add
push
and
les
stos
les
jne
insb
les
inc
push
add
pop
les
aas
les
les
repz
fcmovb
iret
add
and
ret
dec
mov
inc
sarl
sub
loope
stc
add
roll
dec
rolb
rclb
pop
add
add
adc
lret
iret
iret
pop
iret
js
iret
cmp
xor
into
lods
repnz
push
into
dec
into
xor
leave
int
int
fs
fs
adc
int
sbb
mov
scas
and
inc
aas
les
lods
lret
sahf
lret
mov
push
push
lret
dec
mov
repnz
xor
lret
add
sti
lret
jbe
and
stc
leave
jbe
push
dec
lret
adc
leave
ljmp
leave
mov
jno
push
sbb
fnstsw
stos
enter
enter
enter
add
cmp
mov
jl
inc
jg
dec
xchg
aad
imul
mov
ljmp
call
jge
add
push
ud0
pop
mov
inc
push
adc
xchg
inc
xchg
clc
outsl
inc
test
mov
inc
ljmp
inc
mov
das
push
xlat
inc
jmp
inc
addl
push
pop
mov
lock
cmp
dec
sti
or
ret
out
cmpl
clc
sub
sbb
lahf
fidivrl
in
mov
movsb
fisttps
mov
lahf
iret
cld
pop
decl
fwait
clc
incl
std
call
rcll
repnz
shl
mov
mov
in
mov
clc
insl
std
and
loope
dec
fnsave
jo
into
or
cmp
pop
into
jmp
out
loopne
clc
sub
out
cmp
mov
out
mov
jg
sub
mov
movsl
mov
rorl
jge
pop
cld
mov
lret
mov
dec
mov
fists
sub
and
mov
out
mov
mov
mov
mul
outsb
je
lahf
test
jmp
neg
addl
sbb
clc
jle
fbstp
mov
in
mov
andb
nop
lcall
lahf
mov
add
inc
lock
mov
lcall
jge
mov
pop
fiadds
cmpl
xchg
repz
adc
and
inc
jmp
lock
mov
pop
scas
mov
or
std
inc
out
stos
push
scas
mov
cmc
mov
pop
stos
hlt
mov
out
pushf
xchg
sti
out
repz
scas
push
pop
je
ljmp
cmp
in
incl
push
je
dec
lds
cli
mov
push
fwait
ds
add
ljmp
hlt
sti
pushf
jnp
mov
cmp
mov
mov
ja
push
adc
ljmp
mov
scas
lds
stc
inc
ja
cmp
test
imul
test
mov
int
add
cmpb
lock
or
or
sarb
loope
jnp
jl
test
fistps
out
mov
cmp
cmp
cmp
loope,pt
mov
mov
lods
mov
test
test
pushl
movsb
pop
add
fdiv
out
ss
xchg
mov
cmp
mov
sar
or
xchg
insb
cmc
loope
mull
out
rcl
jg
mov
addl
out
and
cld
sbb
in
ds
jo
mov
mov
xor
adc
dec
mov
pcmpeqw
pop
inc
cmp
mov
out
hlt
pop
dec
das
ja
fisubrs
fistps
pop
notb
loopne
cld
sbb
xlat
jmp
les
jge
dec
push
stos
rclb
loopne
mov
rcrl
addr16
push
in
or
pop
lds
ds
std
scas
jge
imul
or
loopne
dec
mov
jb
dec
dec
aad
jle
jl
sti
ds
jecxz
push
enter
mov
mov
xor
pop
pop
sub
hlt
lds
dec
xchg
fsubrs
xor
sbb
dec
sbb
adc
sti
int3
jb
inc
jge
pop
push
xchg
arpl
jb
scas
push
mov
mov
cli
or
fnstcw
push
mov
pop
cld
in
jne
jmp
pusha
into
cmp
in
ds
daa
add
test
mov
into
into
xchg
jmp
mov
or
rcl
jecxz
add
call
dec
pop
pop
ljmp
aas
sahf
jmp
dec
hlt
pop
fildll
aas
sahf
leave
ljmp
cmp
adc
push
mov
ja
add
jmp
fcomip
inc
sarl
lods
das
mov
inc
pop
mov
nop
icebp
pop
mov
mov
fsubrs
mov
clc
filds
repz
xbegin
scas
mov
mov
jno
mov
out
mov
sbb
in
mov
lcall
psubd
pop
xchg
fwait
aas
jne
lret
ret
repz
mov
cli
stos
in
push
jle
cld
stos
ret
push
inc
stos
shrl
pop
push
cmpsl
push
cmp
xchg
std
cmp
daa
stc
dec
test
hlt
push
dec
mov
std
xor
fstl
dec
orb
sar
inc
inc
movsl
test
mov
test
stc
push
jge
inc
lret
cwtl
push
add
out
clc
dec
stc
dec
add
lea
add
inc
dec
cli
and
cmpsl
and
pop
incl
outsb
out
testl
xchg
sti
jge
pusha
push
stc
push
add
push
add
lahf
mov
shll
inc
pop
pop
pop
daa
xchg
shl
inc
idivb
jge
sahf
ja
or
add
test
faddl
daa
pop
mov
sbb
mov
add
cmp
adc
fildl
jl
cmp
xchg
clc
push
cmp
iret
push
jg
test
cs
ljmp
ss
mov
cld
xor
xor
xor
push
aas
mov
dec
jno
inc
pop
xlat
jg
enter
test
inc
mov
pushf
xchg
gs
push
inc
push
inc
enter
enter
and
mov
loop
mov
and
or
lcall
sbb
sbb
mov
adc
jmp
fadds
jne
rorl
aaa
ficompl
push
sbb
dec
mov
out
cmp
pop
pop
lahf
lock
mov
leave
scas
dec
pop
aas
clc
fdivs
dec
sub
jb
scas
cmc
xchg
fidivs
mov
push
lods
jmp
mov
mov
cli
dec
icebp
cmc
sahf
pop
cmp
or
mov
fnstsw
xchg
mov
std
push
push
mov
mov
jmp
xchg
mov
cli
cld
lea
mov
repnz
incl
cmp
xchg
stc
daa
daa
mov
int3
outsb
outsb
push
xchg
and
call
jno
clc
xchg
out
pop
push
in
shr
cmp
pop
test
pcmpeqd
and
mov
jnp
adc
cmp
std
lods
xor
dec
mov
pop
sub
ljmp
push
clc
stc
jl
push
cmpsl
add
sub
sub
add
int3
mov
mov
sti
inc
mov
and
testb
jbe
sbb
movntq
or
je
cmpsb
mov
sbb
repz
sti
repz
out
push
xchg
shl
jbe
outsb
jae
fldt
fstpl
mull
pop
clc
or
loope
scas
xchg
jmp
adc
pushf
mov
fwait
xchg
xlat
stc
mov
jns
adc
mov
push
iret
in
into
lahf
mov
outsl
sbb
enter
or
fdivs
mov
arpl
popf
in
fbld
insl
lahf
int3
filds
filds
pop
in
ja
cmpsl
in
out
in
into
repz
mov
mov
or
cmpsb
mov
out
loop
scas
sti
out
jne
fdivr
fnstsw
sub
cli
mov
out
ror
mov
imull
aam
filds
in
call
aam
jecxz
stc
adc
sarb
aam
mov
adc
or
inc
fsubrp
pusha
mov
cs
mov
mov
js
jle
roll
xchg
fiadds
cld
jle
mov
mov
xchg
mov
push
mov
push
mov
aam
test
fwait
cli
push
fnstsw
mov
sti
scas
cs
xor
call
int3
inc
ds
div
lahf
mov
daa
sarb
inc
jmp
sarb
fcompl
call
sub
cld
movsb
mov
movsb
add
neg
in
mov
mov
pop
aad
ret
inc
sub
mov
aaa
scas
pop
movsb
adc
mov
jns
cld
xchg
int3
mov
clc
xorb
xlat
das
push
aas
jbe
adc
imul
icebp
dec
xchg
pop
movsl
jbe
or
jl
add
jmp
ljmp
cmc
push
shlb
fistpll
std
daa
cmp
cmp
xor
faddl
and
mov
ds
mov
out
cmc
decb
mov
push
repz
push
out
fwait
adc
and
fwait
in
rorl
movsb
cmp
in
out
adc
jge
mov
xchg
fwait
mov
in
add
mov
jle
jmp
filds
jmp
nop
jge
inc
repnz
cmpsb
sarl
testb
xchg
push
movsl
mov
out
rclb
cmp
addr16
dec
out
nop
out
xchg
mov
in
jg
in
aas
popa
enter
mov
xor
cmp
std
scas
and
shll
cli
inc
cmp
divb
mov
sbb
hlt
incl
adc
ss
mov
nop
and
add
sti
pop
hlt
movsb
sar
mov
push
cwtl
xchg
lret
sub
cwtl
mov
sbb
repnz
pop
shlb
cld
mov
popf
dec
sbb
mov
xor
mov
call
pop
sahf
fdivr
fs
push
mov
cld
lret
sub
xchg
enter
xor
orb
loopne
stos
xlat
ljmp
dec
inc
in
push
mov
push
repnz
mov
into
es
iret
cli
or
fldz
jg
and
int3
movsb
mull
bound
loopne
orb
hlt
cwtl
out
popl
cmp
dec
inc
cwtl
jo
in
xlat
push
mov
xchg
cmc
xlat
mov
stos
sar
fwait
lock
clc
hlt
stc
sarl
mov
shll
sahf
jo,pt
xchg
push
adc
mov
jnp
enter
lock
outsb
out
aas
loopne
jmp
lods
and
loopne
jbe
int
pushf
clc
mov
and
or
sti
call
xchg
test
lcall
xor
dec
sti
incl
push
in
enter
movsb
add
push
or
int
int
int
int
push
sldt
int
int
int
int
int3
mov
int3
lret
mov
mov
add
lret
icebp
lret
xchg
lret
sub
add
fcmovne
cmpsb
leave
fwait
mov
xchg
push
jb
dec
leave
inc
mov
push
enter
jle
mov
std
ljmp
cli
mov
inc
mov
lds
fcoml
sti
inc
out
shl
rcrl
ret
xchg
ret
adc
adc
ret
leave
add
scas
dec
pop
ds
ret
std
shl
testl
shll
rcrl
rorl
push
fnstsw
mov
jbe
cld
out
push
scas
adc
lods
lcall
mov
stos
decb
push
jg
lods
std
fisubl
nop
cltd
lock
inc
sahf
jno
repnz
iret
fmulp
dec
aas
push
iret
dec
mov
test
into
rclb
cli
mov
lahf
mov
iret
jle
dec
icebp
jae
jg
test
fcompl
iret
std
test
xchg
cltd
leave
mul
out
std
xor
ss
sti
ljmp
dec
xchg
lahf
sub
jl
mov
lcall
jle
jl
repnz
int
loope
jae
and
dec
mov
scas
js
sbb
scas
adc
xchg
mov
pop
mov
or
cs
rcrb
jne
fdivrl
dec
dec
repnz
pusha
loop
or
pop
adc
cltd
loop
fcompl
lcall
cli
sub
decb
sti
mov
sub
mov
es
daa
jg
scas
jl
sub
fdivrs
pop
xchg
inc
dec
cmp
cld
sub
fdivr
das
icebp
or
stos
in
idiv
pushl
jmp
add
inc
add
call
int
jmp
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
pusha
mov
mov
xor
mov
inc
cmp
jb
popa
jmp
