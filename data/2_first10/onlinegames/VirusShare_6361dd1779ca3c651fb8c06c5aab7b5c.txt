fnstcw
sti
adc
sub
dec
and
bound
jle
lcall
enter
and
xor
shll
ds
pop
je
xor
roll
cmpsb
pop
ss
into
fidivrl
and
sbb
dec
outsb
fwait
or
and
and
jp
movsb
jmp
cwtl
lahf
mov
sbb
aas
add
ss
aas
dec
gs
gs
xor
cs
insb
add
or
push
push
jae
sbb
inc
bound
push
jb
jbe
mov
sti
imul
jns
je
insl
and
inc
inc
add
jae
add
push
gs
outsl
imul
add
fistpll
add
jbe
xor
cs
jne
arpl
xor
pop
imul
insl
jns
jbe
fs
add
je
pop
outsl
arpl
pop
jnp
bound
xor
xor
cmp
push
sbb
xchg
inc
sbb
aaa
and
in
sub
fnstsw
andb
out
std
rclb
xor
mov
inc
add
add
or
lds
in
mov
popa
enter
push
in
pop
outsb
add
outsl
int3
int
pop
into
push
iret
rorb
shll
xor
shll
aad
xlat
pop
fdivs
mov
mov
fisttpl
push
pop
loope
imul
inc
in
and
add
insl
mov
inc
daa
ljmp
in
pop
in
aaa
lock
repnz
xchg
int
stc
dec
pop
cli
sti
js
je
mov
fidivrs
call
jle
pop
adc
fbld
mov
xor
mov
mov
je
push
push
call
mov
jmp
mov
cmp
jne
xor
jmp
testl
sub
call
sti
test
je
sbb
outsb
imul
lods
pop
adc
jne
push
or
mov
sbb
iret
das
pop
stc
data16
inc
adc
cmp
jne
mov
loope
mov
pop
pop
pop
leave
ret
mov
in
sbb
fs
mov
xchg
adc
push
push
imul
jl
inc
mov
push
push
insl
test
xor
clc
add
pop
jnp
in
push
sbb
js
push
lock
data16
push
pop
insb
pop
push
int3
insl
jl
mov
adc
push
stos
mov
arpl
lock
cmp
je
push
adc
or
adc
clc
cmp
adc
push
push
sub
push
js
jnp
into
mov
push
push
or
movsl
sbb
jecxz
cmp
ss
in
sbb
pop
ret
dec
mov
mov
sbb
pop
fildl
sub
lods
fldenv
pop
jo
push
push
scas
inc
adc
negb
jo
push
adcl
mov
insl
fs
inc
test
mov
cli
daa
adc
push
dec
and
xchg
or
add
sbb
cmpsb
mov
pushl
dec
inc
lods
mov
mov
add
pop
mov
or
out
and
push
testb
je
adc
call
push
loop
addr16
mov
push
aad
and
push
je
xchg
mov
cmp
out
jnp
adc
aas
xchg
inc
cs
sbb
std
pop
jmp
or
cmp
mov
icebp
push
lds
or
lods
loope
bound
call
test
psrld
mov
inc
inc
dec
dec
test
jne
pop
fldenv
push
pop
jmp
lds
shl
or
push
jecxz
insl
mov
add
cmp
xor
sti
decl
test
add
and
aad
pop
clc
inc
and
inc
jnp
sbb
add
jl
jae
mov
adc
daa
push
aaa
in
int3
fistpll
sub
jg
push
bound
or
push
in
les
out
inc
jl
sbb
jbe
push
in
inc
mov
mov
push
pop
or
cmp
cwtl
pop
and
in
or
sub
divl
loope
pop
pop
shlb
add
std
add
leave
sbb
div
fucomp
or
je
repz
lea
inc
jnp
movsl
loopne
add
lea
out
or
mov
loopne
adc
cmp
add
add
xor
test
adc
fidivrs
or
sbb
shl
mov
xchg
fsubr
pop
and
ss
xor
lret
pushf
imul
mov
xlat
inc
xor
mov
std
adc
adc
mov
and
mov
or
pop
pop
negb
cld
pop
jmp
lods
jge
jmp
rcrb
or
imul
xchg
in
xchg
outsb
ljmp
pushl
xchg
imul
pop
imul
sub
jmpw
popw
or
jne
int
jg
insb
inc
or
test
jb
aam
ja
pop
mov
fistpl
in
push
test
add
sbb
xchg
mov
xchg
dec
inc
repz
loop
sbb
je
push
rcrl
data16
adc
pop
imull
shlb
xchg
or
xchg
sarl
sbb
movsb
icebp
les
std
stos
push
std
enter
mov
cld
std
dec
push
mov
iret
outsb
int
aas
cmp
push
pop
sar
fucom
data16
lods
jb
gs
cltd
imul
fldenv
out
imul
iret
push
out
imul
imul
imul
mov
data16
stc
cwtl
mov
lods
out
call
mov
jns
pop
jnp
sub
je
push
push
fwait
cmp
mov
or
mov
xchg
xor
xchg
and
add
and
mov
inc
imul
fs
in
rorl
outsb
ds
je
jae
in
les
pop
sti
bound
push
cmp
pop
xor
and
insb
movsb
cmp
outsb
and
cmp
int
mov
subb
or
fldenv
data16
call
mov
lods
and
jnp
jbe
xchg
push
or
cmp
outsw
dec
repz
or
jmp
addr16
pusha
jbe
cmp
ds
outsl
mov
fsubr
sub
outsl
sar
sahf
sbb
cmp
pop
mov
cmp
jl
call
jbe
adc
push
daa
cmp
sbb
add
imul
insl
nop
gs
out
and
cmp
fistpll
pop
lock
cmp
cmp
test
icebp
stos
idivl
sbb
fnstcw
mov
sbb
xor
lretw
adc
ret
fwait
or
in
insl
enter
enter
cmp
lock
cmpsb
dec
dec
sti
out
mov
push
ret
ljmp
frstor
or
in
lea
vhsubps
loop
dec
push
jb
sub
and
jae
sub
mov
or
loope
xchg
mov
addl
jbe
push
or
and
and
push
mov
add
and
ret
dec
push
dec
inc
dec
dec
inc
pop
ja
stc
add
dec
inc
dec
xchg
inc
push
dec
addb
fisubrl
inc
outsl
and
popa
or
lock
sbb
andl
push
add
add
nop
add
push
pop
ss
mov
inc
lock
pop
mov
int
mov
adc
js
outsl
addr16
insl
and
outsb
outsb
lock
in
ljmp
and
and
outsb
and
inc
dec
push
and
fs
clts
and
outsl
repnz
adc
mov
rolb
stos
jae
mov
push
jae
mov
mov
loope
mov
daa
xrelease
mov
pop
cmp
mov
test
shrb
imul
mov
push
inc
add
in
push
sbb
dec
adc
das
and
ffreep
and
add
js
sbb
add
jnp
int3
ficompl
daa
fnstenv
or
outsl
add
add
inc
dec
push
jbe
mov
push
pop
movsb
push
mov
rorb
add
std
jle
xor
jae
pop
xor
repz
or
nop
push
add
fs
je
mov
in
sbbb
fwait
test
push
pop
sar
out
pop
lret
jb
insb
outsl
arpl
pop
or
shlb
mov
lcall
push
insl
lcall
lock
lcall
fimull
lret
lcall
andb
lods
xchg
lcall
ror
in
xor
mov
add
shll
xchg
cmpsb
dec
shll
cld
mov
sub
test
stos
sbb
xor
xor
shll
pop
insb
adcb
mov
fsub
cmpsb
imul
push
pop
xor
imul
dec
roll
pop
dec
cmp
ja
dec
shll
cld
cmpsl
out
les
xor
jp
inc
sub
xor
scas
add
lcall
in
in
imul
scas
int3
lods
lcall
hlt
adc
cmpsb
jmp
sbb
and
cmp
imul
addr16
jle
scas
subl
add
add
imul
int3
rolb
ucomiss
insl
lcall
addb
pop
mov
xchg
mov
mov
jbe
mov
dec
outsb
je
je
adc
fistpl
insb
sub
sub
push
gs
jg
popa
fs
sub
dec
je
jo
jne
jns
outsw
test
dec
jo
outsb
push
jb
adc
and
mov
add
jl
xchg
and
pop
add
add
or
add
or
lahf
jns
mov
xchg
add
aaa
sbb
sbb
cmpsb
pusha
add
add
mov
pop
add
stos
and
and
popa
sub
pusha
fistps
decl
or
and
testl
das
pop
add
lret
mov
adc
aas
mov
aas
add
pop
or
mov
popa
mov
insb
incl
and
add
sbb
adc
inc
fmul
cmp
xchg
inc
xchg
pop
mov
inc
pop
inc
sub
xor
fistpl
add
stos
nop
mov
stos
adc
cmpsb
fwait
out
insb
pop
das
xor
xchg
xor
adc
cmovb
mov
add
add
ja
scas
stc
out
mov
add
add
gs
sbb
pop
inc
or
push
sub
incl
pop
add
push
inc
jb
push
and
ja
or
mov
jae
pop
and
addr16
xor
inc
xor
jecxz
add
xor
and
test
pop
pop
cs
add
pop
test
imul
insl
xchg
push
dec
call
push
push
inc
push
inc
dec
adc
outsl
data16
imul
dec
push
inc
jne
jb
je
sub
pop
call
ja
jb
inc
popa
jb
push
aas
push
xor
arpl
xor
push
gs
add
jb,pn
sub
sub
sbb
sbb
cmpl
fwait
jae
push
jle
push
push
push
imul
dec
push
push
cmp
mov
jno
add
notl
test
xor
imul
push
jns
jae
loopne
inc
inc
je
pop
xchg
test
outsl
jne
or
test
cmpb
imul
mov
mov
outsl
outsb
cs
xchg
mov
or
mov
sti
fcos
into
mov
stos
mov
into
icebp
testl
arpl
test
gs
adc
jo
ljmp
addr16
popa
insb
imul
scas
stos
mov
mov
test
sbbb
addr16
in
aad
pop
pcmpgtb
out
add
out
push
add
rclb
push
iret
and
xor
aaa
xor
xor
mov
sqrtps
mov
cmp
lea
lret
dec
cs
pusha
jmp
out
mov
mov
mov
mov
pop
sbb
pushf
fstpl
push
add
and
mov
cmpl
inc
movsl
jne
push
push
xor
mov
test
mov
cmp
je
add
inc
cmp
ja
jl
cmp
pop
jae
mov
or
and
mov
ret
and
ret
outsb
sti
aaa
push
push
pop
add
out
inc
je
push
mov
cmpb
push
add
movb
insb
push
cs
push
idiv
fucomip
xchg
outsb
clc
lcall
add
shr
mov
push
shl
push
push
mov
ljmp
add
cmpl
mov
fsubr
gs
call
in
jns
sub
push
lea
out
pop
mov
stc
call
add
mov
mov
inc
pop
mov
lock
int
dec
fiadds
call
into
pop
shrb
xor
call
loopne
inc
cld
push
push
movl
adc
ja
jae
dec
dec
cmp
jne
call
xor
push
push
sub
lcall
adc
xor
insb
arpl
ds
pcmpeqb
mov
repnz
repnz
sbb
and
iret
repnz
and
and
and
ds
ret
test
orl
push
jmp
cmp
pop
into
adc
and
jmp
add
jnp
addr16
pop
jmp
adc
mov
xchg
aaa
stos
pop
push
fwait
lods
lahf
hlt
scas
mov
cmc
adc
loope
ljmp
pop
jl,pt
dec
subb
mov
shrb
mov
sub
in
xorb
mov
xchg
push
push
ret
mov
je
subb
insb
fildll
movsl
aas
decb
fstp
into
sahf
jmp
adc
push
adc
dec
sahf
in
repz
lcall
cld
cmp
fsubs
incl
insl
hlt
push
repnz
popa
je
jmp
or
mov
cmp
pop
push
push
mov
adc
add
sub
out
out
test
cld
add
inc
xor
in
movq
mov
inc
add
add
adc
sub
js
in
add
movb
lret
ret
mov
sub
sub
push
add
push
jmp
mov
inc
add
sti
push
push
inc
call
cmp
mov
add
out
in
mov
ret
mov
mov
jo
push
pop
arpl
xchg
or
jne
xor
push
jns
or
adc
add
mov
pusha
jle
xor
or
mov
lock
mov
cmp
pop
neg
jle
clc
add
mov
andb
mov
or
xor
aas
cwtl
inc
pop
sbb
jl
push
or
insb
aaa
jl
mov
push
xchg
aas
aas
dec
loope
xor
adc
xor
adc
daa
lahf
or
add
les
add
xlat
or
add
int3
adc
and
and
adc
loope
xor
adc
js
cmp
dec
dec
loope
loope
mov
sbb
notl
push
add
insl
xor
and
mov
pop
cmp
push
in
push
mov
xlat
inc
xchg
push
and
jl
sbb
dec
pop
jne
dec
cmp
lret
mov
mov
push
aas
in
inc
cmp
add
adc
add
jo
and
adc
nop
dec
adcl
adc
push
adc
or
and
add
movsl
or
mov
cmp
outsb
pop
mov
iret
je
and
divl
adc
pop
cmp
ja
jge
add
or
jae
lods
repnz
loopne
push
or
or
inc
jmp
cmp
jb
or
fsubrs
sub
decl
jnp
cmp
adc
adc
dec
jmp
lret
pusha
dec
jb
in
or
push
lods
mov
cmp
or
xor
add
add
jge
push
push
push
sbb
sbb
pop
insl
xchg
push
push
push
and
pop
mov
ret
dec
ret
fnstcw
dec
fistpl
in
xor
pop
sbb
orb
push
ret
or
pop
or
enter
mov
movsl
arpl
mov
movsb
or
movsl
movsb
mov
lods
cmp
arpl
lods
into
jle
mov
rep
addb
cmpsl
sbb
or
int3
in
dec
or
mov
mov
pop
dec
pop
mov
mov
pusha
call
shll
push
or
sarl
push
ss
in
mov
mov
add
notb
sbb
flds
pop
or
sbb
push
shrb
call
jmp
nop
sbb
into
insb
jmp
or
adc
jnp
mov
pop
or
sub
mov
add
cmp
or
aad
sbb
or
cmp
jle
lock
push
mov
mov
fucomi
push
pop
call
adc
jmp
shll
mov
inc
inc
inc
jmp
outsl
pop
das
cmp
pop
jb
vmulss
ss
idivb
enter
cld
add
mov
xchg
shrl
fiaddl
add
adc
cmp
and
add
insl
scas
sti
scas
push
mov
jb
inc
adc
pop
es
shrb
or
call
mov
or
ficoml
ss
or
mov
out
or
std
xchg
out
mov
lea
cmp
shll
jne
and
out
mulb
mov
mov
inc
push
pop
cld
call
fldt
call
xor
popf
stc
mov
push
jo
loope
call
jg
call
movl
pushf
je
das
or
clc
out
or
cmpsl
add
lret
add
and
xor
adc
adc
add
xorb
adc
cmpsl
cmp
jl
add
inc
ds
pop
js
add
je
add
add
adc
adc
repnz
pop
and
mov
add
call
pop
fistps
cmp
or
dec
pop
and
xor
mov
mov
mov
or
mov
adc
faddl
xchg
loopne
andl
aas
mov
pop
dec
jg
mov
and
inc
mov
test
in
cmp
jmp
je
cmp
je
adc
call
mov
or
inc
cmp
dec
or
sub
cli
pcmpeqw
ret
daa
adc
dec
leave
or
adc
mov
or
and
inc
test
jne
or
test
je
mov
shr
mov
lods
std
xor
test
mov
es
or
test
je
cs
loopne
sbb
rolb
or
lret
and
xchg
je
test
jne
test
lahf
fstl
pop
sbb
aad
push
cmp
fdivs
jne
or
adc
push
adcb
or
sbb
orl
fdiv
or
sbb
add
fdivrs
dec
or
push
mov
mov
and
lahf
popf
jmp
pop
and
add
je
add
sub
insl
mov
adc
pop
pop
add
mov
and
loope
sbb
inc
jne
or
jl
and
adc
add
enter
adc
adc
add
pop
shlb
shlb
add
aaa
pop
xor
outsl
mov
lds
cmpsb
adc
pop
and
push
in
in
shrl
je
push
jmp
adc
inc
outsl
fistpl
add
xor
pop
push
mov
add
xchg
cld
mov
push
mov
idiv
adc
jg
push
push
mov
lahf
andb
mov
add
mov
in
and
pop
mov
leave
lfs
add
mov
add
dec
and
add
in
iret
and
adc
test
fcoml
add
dec
and
mov
in
inc
and
adc
adc
fstpt
cwtl
pop
sub
or
aaa
in
inc
mov
xchg
in
stos
je
jp
push
clc
or
ja
xor
mov
cmpb
sbb
jo
xchg
jl
inc
test
in
xchg
decb
dec
popa
mov
imul
orl
pusha
add
rorl
inc
sub
and
or
imul
adc
and
ret
lcall
jge
les
push
mov
shl
cmp
and
aaa
fdivrp
aas
cmp
jae
incl
lret
enter
or
leave
imul
mov
mov
dec
push
pop
fsubrl
cld
jne
adc
repz
mov
jo
mov
add
loop
rcll
cli
push
mov
sbb
fdivl
subl
sub
stos
pop
insl
push
mov
mov
or
pop
jbe
or
cmp
pop
sti
sti
not
and
push
jl
and
or
add
lea
pop
lret
mov
shr
mov
mov
push
repnz
not
and
testl
lea
test
sub
or
js
repnz
aam
cs
pop
inc
fisubs
fimull
add
lea
in
and
out
xadd
adc
pop
inc
sub
jmp
lods
cld
mov
and
not
cmp
add
repz
sub
rorl
push
shr
or
add
mov
daa
pop
jg
push
outsb
fisttps
jl
sbb
cli
std
in
les
hlt
mov
not
and
xchg
pop
test
adcb
sub
inc
mov
fidivl
add
aaa
fsubrs
sbbb
or
pop
imul
sbb
inc
xor
scas
roll
mov
test
sbb
pop
int3
xor
add
add
out
ja
bnd
and
cli
sbb
imul
rolb
fcomp
cwtl
subb
jns
out
sbb
add
rcr
mov
pusha
adc
pop
scas
testl
sti
mov
pop
les
subb
add
pop
push
fisubl
push
sub
sub
fcom
add
mov
pop
mov
pop
fyl2xp1
mov
pop
xor
out
mov
or
xor
xchg
out
nop
fmull
or
xchg
jno
std
aas
mov
cmp
push
cld
mov
sub
fidivrs
xchg
pop
imul
das
push
mov
cmpsb
pop
imul
xor
sbb
popa
or
cmp
rclb
clc
lods
mov
add
or
push
mov
mov
mov
push
mov
bound
pop
mov
add
pop
dec
mov
inc
mov
cmp
in
xchg
out
inc
rclb
push
fadds
hlt
push
mov
daa
clc
jb
repz
pop
rcl
fistps
icebp
adc
repnz
rcll
movsb
and
pop
mov
push
stos
mov
in
out
call
lock
imull
mov
pop
lods
hlt
pop
adc
call
adc
mov
lods
mov
jge
repz
push
adc
add
pop
ret
and
in
pop
and
mov
cmp
cmp
jge
cli
fnstcw
out
xchg
pop
jg,pt
or
stos
fisubrs
mov
mov
mov
out
loope
jle
lcall
ret
inc
enter
push
and
mov
xor
fbstp
data16
xor
aad
adc
mov
push
push
mov
gs
out
aaa
or
mov
adc
inc
loop
shr
fwait
insl
adc
fdivs
xor
imul
into
fwait
push
aam
mov
xor
push
and
sub
aad
flds
outsl
adc
dec
int
inc
xchg
dec
fisttps
sbb
lea
or
mov
xor
xor
test
jmp
outsb
mov
test
xor
mov
repz
cmpb
divb
adc
ret
pop
js
lds
popa
popf
insl
jno
and
xor
mov
repnz
jns
and
or
in
mov
inc
ja
xor
mov
into
es
sbb
xchg
mov
fisubrs
sub
loop
fmuls
sub
int3
pop
pusha
dec
mov
jno
cli
xor
negb
mov
jae
clc
xchg
mov
or
mov
jle
sub
repnz
jae
mov
add
sbb
int
xor
imul
out
js
pusha
mov
mov
fidivl
cmc
shrl
xor
aam
xchg
jae
adc
rol
test
xor
in
add
mov
or
xchg
lods
mov
push
aas
sbb
cmp
rcl
fstps
js
jbe
les
in
in
loop
mov
fstpt
out
push
in
clc
jl
pop
je
xlat
insb
cmp
dec
pushl
or
insb
in
jnp
aam
gs
lods
les
subl
stos
popa
fstpt
mov
stos
rcrb
sbb
mov
aad
push
inc
in
sbb
jl
repz
push
xchg
ljmp
inc
push
or
es
mov
jns
and
fwait
xchg
push
hlt
cmp
pusha
fstps
scas
ja
mov
mov
ret
pop
pop
gs
pop
jo
lret
sbb
rcrl
repz
int3
or
push
or
dec
mov
pop
ja
jno
dec
outsb
xor
repz
out
call
unpckhps
sbb
adc
rcrl
test
sub
movsb
or
jg
call
scas
dec
jle
outsl
jecxz
jp
jb
sbb
sbb
int
dec
inc
jb
pop
fistpl
loopne
sub
jecxz
jp
ret
pusha
call
push
adc
add
pop
fdivl
mov
arpl
push
test
imul
sbb
repnz
sub
mov
ret
fisubrs
mov
movswl
in
add
repz
rclb
xor
dec
mov
pop
jge
scas
fcmovnbe
pop
xlat
pop
add
pop
movsb
mov
push
xor
pop
test
mov
push
mov
mov
or
add
cmpb
std
lcall
sarl
pop
sub
push
push
push
adc
aam
idivb
data16
xor
cmp
xchg
and
adc
sub
insl
sbbb
pop
inc
test
nop
iret
pop
pop
mov
mov
jge
or
into
ljmp
add
adc
cmp
jne
xchg
adc
call
les
push
xor
add
jae
dec
je
lea
lcall
xchg
push
cmp
icebp
add
jge
sub
pop
outsl
lcall
je
inc
add
cmp
out
or
testb
add
mov
xchg
push
call
loop
mov
adc
into
inc
add
imul
push
loopne
pop
int3
rolb
aam
pushf
jae
fsubr
inc
cmp
xchg
jmp
sahf
cs
xchg
scas
test
jl
push
or
out
add
in
gs
das
int3
repz
jl
push
jo
hlt
mulb
cmp
negl
divb
mov
ljmp
je
addr16
js
sbb
stos
call
sbb
adc
mov
lods
sbb
fmull
mov
inc
dec
out
mov
outsb
les
xor
in
or
push
push
jge
jae
pop
inc
loopne
ss
fnstsw
fistl
push
ds
push
xchg
pop
test
in
dec
out
push
xchg
mov
out
push
xor
mov
repz
xor
insb
mov
push
push
add
cld
push
xor
mov
push
xor
jns
fldt
pop
int3
add
bound
lcall
subb
bound
inc
pop
shrb
out
or
fldt
push
push
mov
leave
es
mov
sbb
scas
add
xchg
je
pop
lret
imul
jo
or
push
int3
jbe
cmp
pop
sub
lods
adc
out
xchg
pop
fdivrs
pop
push
mov
sub
int
mov
mov
push
dec
je
inc
jmp
mov
adc
push
mov
and
jmp
repz
cmp
je
dec
dec
cmpw
jne
sbb
dec
pop
push
arpl
inc
add
cmp
add
and
push
ljmp
inc
test
gs
mov
push
aad
jae
ret
or
inc
lret
jbe
cmp
add
xchg
movl
out
or
lahf
or
fucomp
insl
in
push
je
xchg
cmp
testb
jae
sti
decl
je
cmp
jne
push
jmp
xor
pop
pop
addps
push
in
or
add
je
rcr
jbe
ja
loopne
daa
inc
enter
adc
fiadds
xlat
pop
xchg
xor
add
push
jae
bndldx
cmp
arpl
pusha
cmp
subb
inc
and
fstl
aad
xor
pop
or
fcomps
es
stos
in
mov
sbb
add
inc
ret
mov
dec
sbb
add
mov
outsl
push
push
push
nop
add
mov
mov
mov
test
ds
and
sub
fisubl
sub
sub
sbb
cmp
and
lods
loope
pop
pushl
mov
lcall
andl
xchg
cmp
mov
out
or
sti
sub
mov
outsb
mov
pop
add
jg
std
and
inc
add
xor
fmul
call
psadbw
and
pushf
insb
iret
std
jbe
mov
inc
push
loopne
outsl
in
decl
int3
cmp
mov
es
jne
cmpl
xlat
or
push
jo
mov
jo
addr16
pop
dec
sarb
arpl
inc
jns
and
std
mov
sbb
sbb
pop
adc
fnstcw
call
call
mov
fcoml
mov
dec
inc
leave
popf
add
shrb
lods
cs
mov
mov
adc
jmp
dec
mov
les
cmp
ss
mov
testl
mov
push
test
in
sbb
sti
mov
jl
inc
push
jo
push
movl
xor
mov
insl
mov
mov
mov
cs
lret
in
cmp
mov
mov
jbe
imul
add
fnstenv
gs
insb
outsl
int
sub
jb
jb
and
fisubrl
fdivs
fadd
dec
test
in
lcall
in
push
out
fldt
je
out
call
imul
push
mov
cmpsb
outsb
je
rol
dec
ret
rol
add
xor
jb
xor
enter
mov
lret
cmp
int3
hlt
xchg
push
xchg
insl
shll
mov
inc
mov
imul
fwait
pushf
adc
mov
fistpl
inc
mov
insb
fwait
insl
movsb
inc
add
test
push
cmpsb
imul
pop
call
hlt
cli
jns
lea
cmp
cmp
je
dec
xor
shlb
inc
or
pop
iret
jl
mov
dec
add
movsb
jbe
aaa
in
les
inc
in
pop
fs
and
int3
jmp
xchg
dec
cs
ds
mov
xchg
dec
scas
dec
mov
mov
dec
rolb
pop
xchg
jae
hlt
cmpsb
cmpsl
test
adc
pop
push
sbbl
jg
jge
shrb
sar
inc
fs
insb
push
inc
jge
sti
push
adc
push
out
mov
mov
imul
inc
push
dec
out
pushf
pop
cli
inc
dec
mov
mov
loopw
test
mov
lds
inc
sub
outsl
scas
nop
jmp
aaa
xor
test
sbb
test
jmp
pop
adc
push
mov
nop
repnz
leave
lea
or
cli
call
inc
jne
movsl
lahf
add
test
xor
cmc
fsubrs
clc
std
stos
cwtl
nop
mov
and
xlat
mov
mov
scas
xchg
loope
xchg
mov
loope
mov
push
dec
int3
or
xchg
imul
mov
sub
aaa
imul
les
mov
adc
adcb
adc
adc
aam
and
push
pop
jb
cmp
scas
mov
sub
jge
pop
aas
or
add
adc
daa
xchg
andl
push
sub
sub
sbb
cmp
inc
mov
out
jae
out
sbb
cmp
leave
mov
jmp
lock
rolb
mov
jecxz
mov
sbb
addr16
ljmp
test
cmp
jl
jns
test
mov
je
mov
cmp
fcomps
jg
add
xchg
cmp
mov
lret
and
mov
nop
nop
hlt
roll
jo
ss
push
ss
push
jl
in
pop
hlt
adc
cmc
lret
cmp
adc
mov
mov
cmp
fcoms
icebp
jae
rclb
mov
test
cmpb
mov
jae
ljmp
mov
add
xor
cld
call
rcrl
pop
fidivrs
adc
add
push
add
push
adc
cld
adc
jno
fsubr
and
push
and
push
test
call
jmp
mov
scas
popa
xor
sub
jb
pusha
sbb
cmpb
inc
mov
lea
scas
pop
or
pop
lahf
ljmp
or
leave
outsb
adc
push
push
ret
xor
or
pusha
mov
push
movsl
cld
cld
bound
add
imul
insb
popa
push
dec
mov
lcall
fs
xor
insl
fidivl
fildl
fstp
jae
shrl
xlat
fbstp
xor
xor
adc
cli
sti
push
std
insl
jmp
lcall
pop
pop
pop
pop
pop
imul
rol
lods
insl
add
xorb
xor
les
leave
pop
pop
lret
sub
mov
popa
js
push
mov
xor
pop
inc
jb
push
repnz
ret
add
or
mov
push
test
push
mov
mov
cmpsl
xchg
pop
jb
pusha
or
push
pop
test
mov
push
cmp
push
cmp
mov
pop
sbb
subb
hlt
dec
subb
mov
in
mov
int
adc
fists
jmp
fsubl
or
clc
and
cmp
std
imul
je
imul
outsl
ja
test
add
sbb
push
push
shll
stc
mov
jo
fimull
fadds
inc
add
cmpsl
push
call
jo
xor
aaa
inc
or
mov
and
ret
or
xor
xchg
shl
jbe
or
inc
push
rorb
out
xor
rorl
dec
mov
or
push
push
push
fiaddl
inc
pusha
push
or
hlt
xchg
cmpl
clc
and
mov
or
jns
rcrl
dec
dec
out
or
mov
lret
pop
or
xchg
repz
les
hlt
in
loopne
push
into
fcomi
sti
adcb
sub
insb
outsl
insl
push
adc
dec
in
push
or
pop
mov
push
jne
xor
and
pop
pop
adc
ljmp
push
popa
out
call
push
test
in
nop
lret
icebp
lock
incb
lea
push
movsl
movsb
xor
jbe
and
adc
stc
insb
loopne
cmp
or
mov
push
adc
mov
dec
sub
push
flds
fs
add
pop
mov
add
xchg
pop
orl
inc
movzbl
out
push
pop
clc
div
bound
push
cmc
inc
aas
lock
roll
loope
pop
sbb
cld
and
mov
or
xchg
roll
loopne
push
mov
dec
jo
or
insb
lock
popa
pop
repnz
xor
xlat
data16
insb
repz
gs
shll
mov
dec
shll
dec
outsb
lea
sub
inc
dec
sub
sbb
pop
cwtl
xchg
push
inc
push
xchg
xchg
xchg
inc
sbb
js
dec
mov
xor
mov
mov
dec
push
dec
inc
orl
xchg
enter
ds
jo
push
into
sbb
scas
das
adc
call
mov
stc
ss
inc
pop
out
outsl
cmp
add
push
xor
sub
adc
sbb
or
inc
dec
mov
in
jbe
push
insb
sbb
add
cmp
cltd
notl
loope
popf
mov
sbb
or
push
insb
push
addr16
cmp
jbe
pop
xor
dec
fsts
and
lock
sbb
int3
push
das
cld
pop
inc
xchg
lods
cltd
cmpsl
xchg
xchg
dec
arpl
imul
lea
or
xchg
mov
ret
jmp
adc
inc
icebp
cmp
mov
imul
inc
aaa
and
jae
xchg
and
push
jle
xor
mov
leave
xchg
mov
and
decl
lcall
mov
jle
mov
push
lret
and
or
push
inc
cmp
mov
add
loop
outsl
mov
mov
mov
pop
and
inc
add
idivl
fs
jl
mov
push
cmpsl
into
mov
pop
jo
inc
lcall
rclb
sbb
int
rcr
sbb
or
int
and
or
fwait
mov
aad
jo
rorb
adc
cli
fadds
push
lret
into
xchg
xor
push
cwtl
push
imul
mov
mov
cmp
xchg
mov
cmp
inc
std
rcrb
lea
mov
add
stc
lcall
movb
in
aad
lods
adc
jno
push
jecxz
add
inc
aad
loopne
mov
notl
mov
jae
cmp
xchg
imul
mov
aad
sbb
mov
and
mov
ret
push
jmp
adc
sahf
lods
movl
outsl
sti
insl
xor
ljmp
inc
lock
fildl
xchg
or
mov
ljmp
cmpl
popf
or
xlat
push
repnz
ss
push
or
inc
clc
je
scas
jmp
push
rorl
jp
sub
cmp
pop
jae
add
das
push
adc
pop
push
sub
test
pop
es
jg
cmp
shrl
mov
jmp
push
adc
fwait
or
pop
dec
lcall
xor
cmp
push
jb
sbb
ret
or
std
in
add
sbb
xchg
or
mov
subb
push
jmp
out
mov
leave
fisttpl
lcall
or
std
stc
push
in
sbb
jp
mov
mov
test
dec
jp
pushf
popf
mov
lahf
xchg
std
std
xlat
aad
or
les
cmpsl
dec
scas
lcall
divl
xadd
orb
roll
sub
sub
sub
mov
mov
scas
cmpsb
push
mov
gs
mov
sub
mov
cmp
jne
cmp
enter
mov
push
rorb
movl
pop
jp
push
push
ret
fnsetpm(287
pop
test
mov
mov
sbb
jl
add
push
adc
jl
xchg
cs
sbb
leave
rorb
les
ljmp
mov
sub
pop
loopne
mov
mov
adc
adc
js
lds
add
or
mov
mov
daa
push
stos
mov
xor
roll
mov
push
fdivrs
arpl
push
push
push
imul
add
push
push
icebp
stc
adc
adc
cmp
or
inc
add
and
sbb
inc
scas
fwait
push
test
mov
jmp
mov
add
and
sub
xchg
jmp
mov
push
sahf
insb
adc
push
hlt
sub
xchg
sbb
mov
stc
xorb
push
lds
dec
pop
cmp
lret
mov
or
add
rcl
fcoms
in
call
add
test
aad
adc
xor
scas
es
negl
es
mov
xor
adc
bound
cld
inc
pushf
clc
call
cmp
je
cmp
ljmp
pop
jb
iret
sbb
pop
jb
dec
imul
stos
push
xor
push
lods
mov
nop
pop
adc
mov
add
in
test
lcall
jle
adc
ret
scas
and
in
xor
fcomps
sub
adc
inc
cmp
ljmp
sbb
inc
adc
fstpt
pop
testl
push
ret
loopne
mov
stos
mov
ss
push
sub
push
js
lret
adc
hlt
push
xor
lret
mov
dec
dec
dec
inc
push
stos
sub
mov
fs
insb
add
add
pop
xchg
fsts
jne
cs
insb
push
call
inc
je
outsb
je
imul
mov
xlat
xor
cmpsb
pop
cmpsl
push
gs
inc
stos
stos
push
lods
lods
xchg
gs
xchg
decb
je
dec
pop
mov
jo
outsb
pop
push
aaa
mov
rcrl
das
roll
aam
mov
insl
lcall
mov
mov
es
shll
xchg
xchg
xchg
shrb
dec
xchg
xchg
inc
push
cwtl
js
lcall
fcmovu
fcompl
fnsave
je
loopne
loope
loop
xor
in
ds
xor
mov
mov
mov
mov
ud1
mov
mov
mov
in
mov
mov
fstps
or
shlb
mov
and
and
mov
lods
fcomp
cmp
and
int3
pop
rorl
jg
loopne
add
cld
lods
cmp
xor
adc
out
push
shll
dec
jl
mov
fildl
jo
xchg
shrb
adc
and
mov
iret
xor
pop
sbb
pop
mov
mov
pop
test
pop
jg
mov
xchg
xchg
das
cs
jl
in
mov
add
mov
enter
shll
inc
and
imul
push
andl
or
or
repz
sbb
or
sbb
fimuls
mov
orb
popa
pusha
cmp
add
shrb
cmp
push
cli
call
mov
call
push
stos
es
and
xchg
mov
aas
adc
lsl
testb
push
xor
bound
push
into
push
jp
mov
jmp
adc
or
cwtl
fcomps
or
mov
insb
mov
cld
push
push
pop
inc
cmp
jb
inc
cwtl
in
add
incl
pop
push
inc
add
hlt
xor
lret
add
mov
in
xor
jecxz
in
in
mov
out
and
insb
mov
cmpsb
jb
arpl
push
pop
data16
jbe
adc
cli
xchg
insw
jne
or
dec
push
movsb
call
inc
push
mov
ljmp
jecxz
adc
push
les
int3
call
lcall
pop
lret
mov
aaa
push
xchg
xchg
and
ret
aam
adc
fstpl
ljmp
and
inc
popa
jmp
rolb
repnz
xchg
sub
sub
icebp
add
add
call
push
jg
cmp
xor
mov
clc
mov
jne
jne
jb
and
inc
cmovne
jmp
push
mov
loopne
adc
add
sahf
jns
add
movsb
aad
mov
jo
mov
aad
nop
loopne
aas
popa
ret
and
cltd
arpl
dec
shll
jae
shll
xor
clc
es
shll
insl
bound
shll
inc
ljmp
andb
pop
cmp
add
stc
mov
nop
std
leave
jo
sbb
pop
push
pop
int3
sbb
popf
leave
iret
std
ret
and
shll
arpl
shll
je
xor
xor
jae
jne
push
pop
nop
cmpsb
sti
cld
lcall
aas
sub
mov
jg
sbb
sbb
incb
adc
in
movsb
add
subb
dec
and
pop
arpl
neg
sbb
add
add
sbb
or
cld
std
and
dec
int
in
push
lock
orl
inc
int
sub
and
pop
aas
roll
mov
insb
or
and
js
and
push
push
push
lcall
je
imul
add
add
pusha
dec
sbb
call
pop
and
lcall
orb
je
cmpl
incb
sbb
mov
jge
das
ja
xchg
enter
loope
sar
hlt
cmp
div
cmpsl
insl
xor
stos
stos
imul
fdivl
mov
jns
push
inc
mov
sbb
insb
inc
lock
pop
xchg
and
xor
xchg
inc
sub
leave
cmpsl
jp
add
dec
inc
add
inc
iret
enter
sbb
repz
das
adc
loopne
pop
and
mov
xadd
pushf
out
cltd
or
rorb
loopne
aam
in
loope
and
or
jne
and
movsl
sub
clc
cmp
push
dec
hlt
daa
dec
push
addb
loopne
popa
mov
loope
cmp
mov
or
test
adc
inc
rorl
xor
xor
subl
lahf
fwait
cmp
inc
fdiv
or
nop
xchg
cld
mov
in
mov
sbb
or
gs
mov
jb
adc
es
mov
jae
call
inc
dec
js
stos
clc
and
hlt
sbb
rcll
jg
std
cwtl
shrl
jmp
shll
lahf
mov
mov
jb
gs
pop
cs
movsl
cmpsb
imul
imul
dec
xlat
insb
xchg
scas
push
mov
mov
bound
xor
mov
mov
sarl
pop
rol
shll
ret
shll
lret
sub
mov
xor
ror
mov
je
lret
shll
je
xor
xor
jns
cmp
fwait
jae
sub
pop
imul
data16
imul
fistl
and
dec
mov
insb
xlat
xchg
clc
adc
dec
or
jmp
push
inc
ds
jmp
mov
or
cwtl
xchg
and
pop
out
dec
jnp
adc
mov
xor
cmp
sbb
mov
call
push
push
lahf
pop
push
xor
xchg
cld
xchg
cld
clc
pop
pushf
addb
cmp
aas
sub
mov
xor
jns
sub
mov
sbb
sub
xchg
cli
les
dec
xchg
in
aas
arpl
cmpsb
loope
pop
cmp
dec
add
jb
mov
shll
add
jb
adc
jne
and
sbbl
shrd
lods
inc
in
jb
adc
notb
lods
insl
enter
cwtl
sbb
xchg
ja
clc
popa
imul
popa
arpl
inc
xor
stc
outsl
popa
jb
es
mov
je
jb
in
mov
xchg
mov
ljmp
je
out
jns
out
sbb
dec
mov
cld
push
dec
adc
lock
mov
imul
lods
push
pop
jmp
and
push
fdivrs
sbb
sub
int3
or
pusha
sbb
push
imul
insl
call
inc
xchg
enter
push
lahf
or
arpl
sbb
sti
test
mov
jecxz
pusha
in
and
push
clc
mov
arpl
or
push
mov
xor
ss
xor
mov
fldt
mov
pusha
or
adcl
shr
insl
add
sarb
jl,pn
add
jl
jg
mov
mov
push
add
push
movl
cli
cmpsl
jge
out
add
dec
push
push
push
push
popa
push
int
xor
dec
test
push
mov
fwait
and
adc
int3
push
and
into
pop
push
sub
xchg
sbb
push
test
jae
in
es
loope
mov
sbb
ljmp
sbb
int3
or
push
in
add
mov
lods
out
push
in
call
add
push
add
jmp
and
arpl
in
in
out
ja
out
jae
ds
sbb
shrb
frstor
je
sahf
sub
fildll
loope
pop
loop
in
xchg
and
cld
in
in
pop
iret
sub
out
stos
stos
xlat
jg
mov
mov
hlt
jmp
out
cmp
add
push
mov
popf
js
fwait
or
dec
repnz
add
outsl
andl
add
sub
and
pop
or
push
stos
pop
add
sbb
mov
add
or
stc
xor
cmp
inc
cmp
xor
pop
jl
dec
and
push
add
pop
dec
inc
cmpsb
mov
jae
xor
shll
popa
outsl
cs
pop
adc
outsl
fs
push
call
out
rolb
sub
jo
call
sub
jno
out
lahf
roll
insb
dec
call
in
in
inc
movsl
mov
push
jp
xor
sti
pop
sub
adc
sarb
out
in
in
xchg
out
and
add
in
sbb
add
mov
shl
jle
or
stc
fwait
lds
lods
inc
enter
fwait
cmpsb
sbb
leave
lret
int3
jae
rcl
into
repnz
lret
jb
add
shr
mov
mov
sbb
add
dec
test
adc
xor
mov
lea
les
scas
add
mov
mov
mov
in
dec
test
call
mov
ja
loopne
or
in
jg
pop
xchg
lea
push
mov
sbb
int3
frstor
adc
insb
pop
pop
xchg
push
mov
pop
shll
fwait
jge
les
mov
pop
movsb
xor
nop
lret
movsl
mov
add
jns
push
hlt
mov
add
clc
cmp
ret
call
mov
jns
aam
or
gs
dec
add
xlat
inc
fcomp
add
fcmovnu
fstpl
xor
enter
mov
mov
xor
mov
mov
xor
mov
clc
mov
ret
add
call
test
pop
jns
cmp
lock
nop
jnp
dec
call
out
inc
sub
adc
mov
out
incb
push
xchg
pop
push
fs
sbb
inc
add
sahf
daa
iret
xor
and
idivl
push
mov
dec
mov
xchg
outsl
test
cmp
and
and
sbb
sbbl
dec
xor
in
or
rclb
movsl
sub
or
add
xchg
push
cmp
and
movlps
pop
sub
push
mov
push
cmp
insb
scas
push
sub
sub
popf
mov
sbb
mov
inc
ja
lahf
push
push
addr16
adc
je
shll
popa
je
pop
in
inc
gs
jo
rcrl
into
xor
sub
rorl
or
fwait
cwtl
sbb
and
cmp
adc
out
or
scas
call
test
iret
call
push
add
les
rolb
fsubr
std
mov
push
push
call
outsl
pop
fisttpl
adc
mov
sbb
pop
test
adc
push
fsubr
xor
xchg
push
push
push
push
sbb
adc
and
ficomps
sub
les
jge
mov
add
cmp
mov
push
arpl
call
fcmovne
call
pusha
or
ret
push
mov
pusha
pusha
leave
sub
cmp
outsb
test
icebp
pop
ljmpw
dec
std
dec
xchg
jne
pop
daa
lods
call
and
mov
pop
cmp
xchg
pop
fsts
jae
fstl
sbb
sub
pop
sbb
jnp
and
mov
xchg
gs
mov
gs
sbb
push
xchg
popa
jb
call
pop
sub
in
gs
sahf
addr16
insl
aaa
inc
fnstsw
ficoms
dec
mov
mov
imul
imul
jae
sti
push
aaa
cwtl
es
jge
push
mov
push
mov
popa
jecxz
add
and
fwait
adc
test
gs
adc
in
mov
pop
fdivrs
and
xor
shlb
int3
ss
or
push
pop
jae
fstps
wbinvd
or
or
or
clc
mov
icebp
nop
add
mov
pcmpgtw
or
and
addr16
and
and
add
and
push
cmp
jmp
sub
add
lahf
add
xchg
pusha
pop
addr16
mov
push
inc
mov
jae
dec
shlb
cmp
mov
lret
mov
cmp
mov
lret
jo
and
lret
mov
cmp
sub
mov
insb
cmp
mov
lret
jns
cmp
lret
mov
insl
cmp
or
mov
bound
ror
es
push
mov
mov
cmp
and
cmp
and
gs
xchg
in
cmp
gs
xchg
push
jae
nop
gs
es
inc
call
jo
sbb
and
sarl
cmp
xor
cmp
or
sbb
leave
js
adc
sub
call
pop
sbb
call
pushf
orb
aad
and
pop
inc
and
addb
xor
mov
jb
cmp
scas
inc
pop
mov
mov
or
push
push
push
call
mov
push
call
fnstenv
xor
or
fadd
lcall
ss
test
adc
add
ret
je
adc
xor
push
push
pop
sbb
push
sbb
in
loopne
test
test
push
hlt
and
daa
jo
adc
push
sbb
insb
popf
dec
and
and
movsl
or
hlt
add
scas
loop
lock
mov
out
add
icebp
xor
and
xchg
ret
mov
dec
sub
and
cwtl
fmuls
inc
outsl
mov
aaa
pop
add
jmp
mov
adc
call
shlb
or
mov
vpmacssww
cmp
sbb
xchg
cli
test
push
push
push
fwait
and
or
cmp
in
add
cmp
in
ljmp
nop
js
add
jo
add
cmpl
loopne
mov
xchg
imul
push
mov
xor
or
sub
fisttps
add
insl
jmp
inc
dec
sbb
cs
push
xchg
sub
adc
pop
pop
sbb
add
cmp
bound
ret
add
cmp
ss
xchg
adc
icebp
adc
mov
pushl
mov
mov
lods
mov
mov
add
jl
fwait
mov
add
insl
push
pop
andl
or
jmp
jle
movzwl
mov
jne
cld
mov
in
movl
pop
js
add
add
movzwl
jge
jne
data16
lock
pop
cmp
sub
add
add
ss
xor
lea
inc
cmp
inc
mov
sbb
sbb
xchg
add
jmp
es
push
loop
push
pop
dec
push
rep
jno
or
pushl
jno
push
cmp
rorl
dec
adc
jbe
pop
or
mov
adc
iret
push
aad
sbb
sbb
lea
pop
mov
pushl
add
push
loopne
cs
clc
add
sub
and
roll
loope
xor
add
stos
xchg
push
jno
fstp
sbb
lea
sbb
pop
lods
push
cmp
ja
mov
call
int3
jbe
lahf
inc
aaa
pushl
lcall
adc
fistl
inc
xchg
inc
mov
push
jne
push
push
pop
add
and
mov
cmp
xorb
inc
mov
lods
push
orl
mov
sbb
xchg
inc
cmp
dec
in
out
testb
je
pop
inc
sub
filds
jmp
and
cltd
or
mov
cwtl
add
inc
and
pop
enter
push
adc
pusha
mov
roll
pop
ret
or
cmpsl
dec
jge
sbb
sub
in
mov
push
out
jne
nop
sbb
lock
lret
add
pop
sbb
jo
mov
jo
jb
mov
leave
push
or
js
lds
addr16
test
mov
push
loopne
push
cmpsb
or
sbb
sub
popf
mov
mov
fs
mov
hlt
mov
je
adc
sbb
loopne
mov
repnz
addl
cmp
and
ltr
add
cwtl
jb
ljmp
inc
adc
divl
pop
mov
push
andl
mov
and
or
xor
pop
outsw
outsb
mov
adc
and
add
cmp
shlb
mov
push
mov
or
xchg
loopne
fiadds
xor
adc
movsb
add
pusha
mov
stos
test
add
mov
es
jnp
add
jae
pop
push
sbb
mov
loope
push
cmp
rorb
and
sbb
sub
push
rorb
pop
dec
call
mov
pop
mov
dec
push
rcl
add
sub
and
xchg
testl
scas
pop
add
ja
sbb
sbb
xchg
add
mov
xor
bound
rol
imulb
scas
xchg
pop
mov
ret
and
pusha
test
pop
cltd
push
jmp
enter
inc
je
push
mov
adc
imul
xor
adc
mov
fisttpll
mov
jle
push
dec
shll
in
mov
mov
pop
pop
stos
push
faddl
inc
jp
mov
adc
loopne
and
iret
jbe
sbb
pop
fmuls
jecxz
mov
jb
cmp
jl
mov
sbb
int
daa
or
adc
call
call
mov
sub
ror
lret
pop
fcomi
inc
ror
les
lds
mov
outsl
outsb
data16
dec
mov
imul
enter
int3
int
lods
adc
pop
std
jmp
add
ret
jnp
out
ret
les
ss
loope
push
imul
sub
xor
gs
adc
cmp
test
je
popa
lcall
js
ret
push
test
pusha
push
pop
rorl
or
icebp
stos
inc
loopne
jo
leave
push
sub
in
dec
push
pop
enter
adc
hlt
mov
jle
jno
push
mov
mov
lock
mov
or
adc
cmp
cltd
mov
jmp
loope
push
mov
int
or
hlt
add
stc
mov
jge
dec
sub
push
and
lea
inc
popa
adc
loop
repz
add
and
je
rcll
push
sbb
mov
pushf
sub
rcll
dec
add
dec
mov
sub
inc
nop
aad
gs
sub
mov
insb
outsl
jb
add
gs
flds
mov
add
js
pusha
mov
sub
lods
pop
lret
rcll
push
cltd
test
mov
in
mov
enter
pop
inc
mov
addl
loopne
add
into
push
mov
fwait
mov
sbb
push
pusha
aaa
pop
xor
pop
push
sub
pop
jmp
jmp
andl
into
jge
add
mov
shlb
in
and
mov
sbb
fisttps
nop
xchg
mov
adc
push
or
iret
mov
or
or
add
and
repnz
sbb
xor
test
add
nop
xchg
add
setl
jbe
push
fists
sbb
jnp
or
add
and
sub
adc
lret
stc
cmp
xor
add
sbb
cmpsb
adc
aam
mov
cs
daa
clc
movsb
push
dec
out
mov
add
dec
push
scas
insb
push
lods
pop
push
cld
adc
add
sub
mov
incl
or
fs
aam
call
outsl
jb
fs
js
gs
std
fstpt
push
les
and
dec
outsb
imul
gs
jb
out
or
push
sub
add
dec
gs
jbe
xor
cmpsl
add
ljmp
push
xor
js
cltd
add
jbe
mov
je
cmp
out
inc
outsl
aas
and
add
mov
popf
insl
data16
fcmovnu
daa
adc
mov
popa
fwait
sub
imul
jb
aas
push
insl
sub
jo
push
outsb
popa
jo
push
out
dec
xchg
push
and
je,pt
xchg
mov
mov
push
popa
or
inc
insb
lock
xchg
jb
stc
pop
outsl
imul
bound
jb
inc
packsswb
add
push
xor
jnp
out
mov
sbb
fs
adc
sub
pop
jns
inc
gs
push
mov
mov
xor
sub
pusha
inc
lods
sub
imul
cs
and
inc
jns
add
or
arpl
imul
add
into
mov
dec
test
rorb
push
pop
mov
stos
sbb
xchg
outsl
nop
jno
push
fisubrs
inc
daa
xlat
outsb
and
push
push
and
fists
insl
aas
xchg
lods
lods
loopne
fwait
popf
int3
dec
sbb
push
or
push
int
pop
test
and
aad
sub
add
jmp
push
push
push
in
inc
mov
cmp
sbb
insl
andb
adc
jno
mov
in
dec
pcmpeqb
and
push
mov
ss
das
jne
mov
imul
add
xadd
mov
stos
fninit
out
xor
lea
push
outsl
imul
loope
aaa
jo
nop
cwtl
add
lret
in
mov
fdivs
sbb
jmp
std
xor
cmpsb
push
push
push
add
xor
mov
inc
inc
outsl
lret
icebp
add
test
cmp
rorb
dec
insb
add
inc
ds
mov
imul
adc
sub
adc
xchg
in
inc
jo
insl
ficompl
add
cwtl
mov
pushf
out
jbe
data16
rcrb
iret
cmp
sbb
inc
fcomps
icebp
xlat
fwait
rcll
push
jg
rclb
push
dec
inc
aam
jbe
shrd
jo
je
inc
push
in
roll
dec
sti
arpl
pop
insb
popa
xchg
push
movsb
push
dec
xor
popa
mov
insb
mov
addr16
fs
push
fldcw
push
daa
add
jno
testl
xchg
add
mov
mov
push
mov
ret
cld
fiadds
jmp
sub
popa
addr16
push
and
push
push
mov
xor
fmull
imul
xchg
add
aad
inc
in
and
jns
add
je
sarl
xchg
push
jb
insl
js
lret
sub
pop
and
dec
call
sub
lea
sbb
inc
inc
dec
mov
push
mov
push
jne
ljmp
lods
jne
add
or
mov
jne
jae
xor
lods
notb
imul
rcrl
mov
jnp
mov
ds
jb
cmp
adc
inc
outsb
jne
inc
add
and
mov
mov
arpl
jo
inc
popa
arpl
push
dec
and
inc
push
shrb
in
mov
cwtl
cmc
mov
mov
or
push
cs
add
insl
mov
sbb
sbb
jno
xor
mov
push
js
xor
xor
add
out
insb
out
add
mov
roll
insb
xor
imul
inc
jbe
movsb
gs
popa
lahf
fisttps
mov
push
out
inc
lds
inc
inc
out
dec
add
add
adc
jns
dec
adc
insl
push
jo
push
and
cmp
mov
dec
das
mov
ret
fs
xor
inc
pop
loopew
into
je
lea
sbb
sbb
xchg
imull
xchg
bound
outsb
cwtl
pop
fcmovnb
fsubrp
or
xchg
or
movsl
leave
dec
add
fildll
push
add
dec
push
push
xlat
dec
adc
adc
pcmpgtw
mov
mov
insl
testb
imul
jno
movhlps
sbb
add
push
push
push
adc
mov
sub
and
add
leave
mov
testb
push
dec
scas
xchg
adc
je
dec
or
lret
xlat
aam
out
adc
or
or
jne
inc
aad
mov
sub
sub
cwtl
xlat
add
pop
push
and
pusha
add
add
mov
add
add
repz
lcall
cmp
or
adc
sbb
and
sub
xor
cmp
inc
ds
ds
call
test
cltd
ds
mov
fistpll
in
jmp
repz
add
push
aas
adc
int
pushl
aas
cmp
dec
aas
insl
aas
mov
mov
xchg
aas
loop
cld
aas
add
pop
pushl
mov
shlb
xor
xor
xor
xor
lods
xor
xor
xor
xor
xor
pushl
out
xor
xor
pop
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
pushl
addr16
mov
shll
ss
cld
add
push
aaa
sbb
pushl
sub
cmp
dec
aaa
push
aaa
popa
aaa
jo
jle
mov
fdivl
icebp
aaa
and
scas
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
push
cmp
jb
cmpl
cmp
cmp
dec
cmp
cmp
cmp
cmp
cld
cmp
jo,pt
jnp
xchg
mov
ds
ds
jmp
cmp
cmp
cmp
push
cmp
repz
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
and
cwtl
cmp
mov
cmp
fs
int
inc
aas
fs
cmpl
xor
andl
mov
call
xor
xor
xor
xor
jns
xchg
xor
xor
cs
xor
jg
pushl
sbb
pop
xor
cltd
xor
jmp
pushl
cmp
inc
ss
ss
ss
ss
mov
xchg
mov
ss
fbstp
lock
pushl
pop
aaa
or
aaa
inc
aaa
push
aaa
data16
imul
aaa
test
mov
xchg
aaa
pushf
aaa
aad
add
pop
cmp
and
cmp
cmp
push
cmp
jb
js
jle
mov
xchg
cmp
cmp
std
cmp
cmp
cmp
cmp
dec
clc
ljmp
jo
jns
mov
mov
xchg
cmp
cmp
cmp
cmp
cmp
cmp
jg
lahf
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
dec
cmp
jb
stos
cmp
pop
cmpsl
ds
aas
sub
xor
aas
mov
andb
dec
ljmp
xor
xor
add
pop
xor
xor
xor
xor
std
jle
mov
xchg
xor
test
fwait
xor
xor
xor
xor
fwait
pushl
stos
xor
adc
xor
xor
xor
xor
xor
xor
xor
xor
xor
pushl
xchg
xor
stos
xor
shlb
or
push
ss
outsl
ss
clc
pushl
xorl
loop
sbb
pop
aaa
shll
jmp
xor
inc
cmp
jns
stos
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmpb
cmp
or
xor
mov
clc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
clc
mov
mov
jmp
ds
adc
and
ds
jge
ds
fnstsw
loop
pop
aas
stos
aas
mov
das
jg
pop
movsl
hlt
mov
xor
xor
xor
mov
sub
xor
xor
xor
xor
xor
xor
divl
xorb
xor
fcomip
pushl
int
fdivl
loop
in
xor
xor
xor
xor
cld
xor
sbb
fcomip
pushl
sub
pop
bound
mov
pushf
rcrb
cmp
push
cmp
cmp
jmp
cmp
ja
mov
mov
fnstcw
in
in
cmp
cmp
cmp
cmp
cmp
sar
mov
and
cmp
jg
mov
xchg
cmp
mov
cmp
sbb
cmp
pop
adc
cmp
jg
hlt
dec
add
dec
jmp
aas
adc
sbb
mov
add
aas
ds
dec
aas
push
aas
push
aas
popa
aas
addr16
insb
aas
js
jle
cmpl
aad
sti
nop
aas
xchg
aas
popf
repz
add
or
jg
xor
xor
push
xor
xor
xor
xor
xor
xor
xor
jg
ja
xor
xor
xor
dec
xor
jns
xorl
xor
ret
xor
sbb
xor
xor
xor
xor
pop
xor
xor
imul
cmc
xor
inc
xor
mov
mov
adc
fdivs
or
adc
sbb
and
daa
ss
cmp
inc
ss
test
ss
mov
ss
fcoml
cli
insl
outsl
fcomip
jg
sub
dec
aaa
gs
push
jge
xchg
aaa
or
push
add
lock
fwait
mov
cmp
cmp
outsb
sub
cmp
cmp
cmp
cmp
sbb
mov
cmp
cmp
cmp
cmp
and
cmp
cmp
mov
cmp
sbb
adc
les
je
movsb
ds
lret
ds
push
aas
push
mov
xor
lcall
xor
test
scas
xor
xor
xor
decl
xor
xor
xor
adc
sbb
and
dec
xor
pop
xor
push
daa
xor
xor
xor
xor
push
xor
xor
pushl
xor
out
push
xor
xor
xor
cwtl
xor
pop
and
xor
xor
xor
xor
xor
xor
xor
add
xor
or
mov
push
xor
or
adcb
and
call
pop
lds
add
mov
shrb
fdivrl
push
sbb
or
mov
mov
mov
mov
pop
cmp
add
mov
inc
or
negl
sub
mov
inc
mull
cmp
pop
fsubrs
inc
aaa
pop
js
add
cld
push
xchg
cld
push
or
and
add
add
popf
add
pop
add
push
push
add
add
jae
add
or
ret
inc
and
nop
and
testl
nop
push
sub
pop
push
xchg
add
enter
sub
cmpsb
call
jbe
fistps
push
js
imul
imul
cmpsb
pop
ss
cmp
adc
xor
mov
clc
cmp
loopne
int
sub
mov
outsl
in
data16
add
or
imul
cmp
xchg
pop
aaa
pop
rcrl
mov
js
dec
shll
dec
scas
mov
loop
gs
xor
dec
dec
inc
and
sbb
mov
push
ss
popa
pop
mov
pop
or
jo
push
pop
mov
clc
outsl
shlb
dec
popa
jns
jne
jae
adc
pop
hlt
cmp
adcb
xor
addb
ja
push
fsubrl
pop
xor
adc
js
jae
inc
mov
inc
push
sub
push
push
inc
and
mov
test
rorb
and
sub
mov
lahf
cmp
cmp
outsl
push
push
pop
mov
and
rep
or
mov
adc
mov
push
ss
add
sub
mov
mov
mov
or
pop
mov
mov
jl
idivl
clc
stos
jbe
jmp
cmp
mov
out
sbb
test
pop
xlat
cmp
arpl
test
lods
jno
inc
lock
inc
sbb
insb
rdpmc
fstpt
je
inc
cwtl
in
cmp
mov
pop
iret
data16
dec
jne
pop
in
jne
pop
add
and
out
testb
push
mov
inc
lock
add
xchg
xor
addr16
cmp
dec
dec
mov
cmpl
testl
mov
test
sub
mov
out
jnp
pop
mov
and
mov
insb
mov
inc
dec
sbb
sbb
int3
adc
es
inc
lods
scas
jnp,pt
lret
pop
and
fsubp
mov
cmp
sub
add
and
repnz
and
add
hlt
imul
gs
insl
add
insb
pop
dec
insl
xor
sub
insl
sbb
mov
adc
dec
add
inc
jg
fmuls
lds
lcall
pop
xor
loopne
pop
xchg
add
insl
insl
fs
xchg
xchg
inc
je
dec
inc
imul
pusha
popa
add
cmp
fsubl
andb
insl
mov
xor
add
push
and
jle
or
loop
cmp
addr16
sub
aaa
dec
call
into
cwtl
sbb
or
jg
std
lods
or
lea
push
addr16
xchg
test
in
out
mov
jmp
and
aaa
add
mov
out
xor
sub
dec
sbb
xchg
add
jne
xlat
test
jns
inc
or
stc
mov
push
push
cmp
mov
jno
push
cld
add
jb
das
mov
pop
and
sbb
or
rcll
inc
inc
cwtl
cmp
in
lcall
adc
add
js
cli
roll
and
ret
ss
lods
mov
pop
mov
dec
jbe
xor
insb
mov
nop
and
push
and
and
fs
inc
ja
std
push
inc
push
in
daa
mov
das
or
sbb
add
je
js
pop
mov
cmp
jl
add
push
adc
ja
out
in
enter
inc
lods
repz
mov
das
or
adc
in
mov
inc
dec
scas
mov
inc
in
fisubs
adc
mov
or
popa
outsl
outsb
lret
mov
daa
gs
cs
or
mov
es
fs
xchg
outsb
arpl
lret
mov
dec
inc
fnstsw
loope
js
lret
mov
arpl
fs
addr16
push
sti
xor
xchg
jne
movsb
aam
daa
adc
adc
nop
sub
orl
pushf
adc
aad
jae
fs
gs
mov
xor
cs
sub
ds
stos
xor
mov
ret
std
incl
popa
xlat
pushf
fdivrl
std
enter
test
std
mov
sub
xor
xlat
pushf
or
inc
std
mov
push
push
ja
out
xchg
dec
cmp
data16
add
xchg
pop
sub
int
mov
pop
push
aaa
jnp
sbb
mov
addr16
push
inc
sub
clc
and
test
push
jnp
insl
push
mov
inc
adc
dec
xlat
push
cmp
je
jp
or
mov
adc
inc
aam
xor
or
pop
and
sarb
fsubl
adc
addl
jne
lock
xchg
cmpsb
mov
and
call
jle
test
dec
xchg
xchg
cmp
mov
and
idivb
test
fs
push
scas
test
data16
mov
xchg
jmp
rcrl
fadds
pop
scas
bound
add
sbb
sbb
add
sbb
imul
test
test
stos
std
imul
mov
mov
or
shll
jb
cs
xor
rcll
mov
cmp
cltd
and
mov
push
sbb
in
adc
and
out
inc
aam
imul
jno
adc
in
lret
mov
lret
mov
mov
outsl
sub
mov
outsb
gs
jae
sub
mov
cs
xchg
add
outsb
insb
popa
gs
xchg
gs
arpl
sub
xchg
jb
js
mov
jno
insb
addr16
gs
mov
imul
inc
pusha
loop
gs
leave
mov
jo
outsl
gs
lret
push
or
gs
mov
sbb
mov
push
ds
je
and
xor
je
add
mov
lea
lods
inc
cs
adc
in
xlat
fsubr
xchg
xchg
dec
xabort
inc
xchg
daa
sub
test
jne
pop
and
fcmovb
pusha
ljmp
inc
aaa
push
lods
push
shll
mov
mov
shll
pop
pop
test
push
repz
inc
fsubl
mov
inc
mull
or
add
repz
call
in
add
stos
adc
jne
shlb
shr
mov
sbb
push
xor
xchg
stos
push
insb
pop
jg
push
sub
jl
add
add
sub
sbb
fsubrl
or
in
shlb
in
xor
call
repnz
andb
mov
add
inc
insw
pop
add
insb
outsl
movsb
in
push
push
rcrb
mov
add
adc
sub
loopne
lea
push
test
xor
std
and
je
add
xchg
sar
mov
pop
xor
pop
mov
pop
cmp
test
movl
or
fstpt
dec
or
jo
add
subl
dec
mov
pop
pop
add
add
or
sbb
push
adc
sbbl
sub
mov
adc
inc
pop
and
and
and
mov
dec
enter
movsb
add
cmp
adcb
pushf
in
and
push
enter
dec
and
add
daa
add
mov
and
add
add
xchg
push
cmp
and
xor
xor
cmp
cmp
sbb
push
xorl
sub
test
std
sbbb
push
jb
jns
and
std
sub
hlt
cld
and
add
sahf
std
cmpsl
in
jb
and
incb
int
in
push
std
xor
enter
nop
add
and
add
nop
cmp
and
cmpsl
in
cmp
and
andb
nop
add
push
and
jb
dec
add
insb
push
sbb
push
add
inc
repnz
mov
xchg
pushf
nop
cld
push
add
lret
ljmp
xor
cmp
fwait
iret
add
xchg
add
and
test
pop
jb
ss
adc
cmp
and
dec
cmp
cmp
push
xor
jae
adc
adc
jo
mov
les
test
sbb
sbb
nop
dec
xchg
cwtl
pushf
inc
xchg
mov
add
imul
add
pop
pop
mov
aaa
dec
scas
adc
inc
mov
cmp
adc
mov
lret
dec
add
pop
sbb
dec
addb
and
pop
int
inc
push
or
add
adc
xor
mov
xchg
mov
xor
sub
and
popa
inc
sub
cmp
sub
inc
xor
out
jns
inc
add
adc
or
mov
sub
xchg
adc
loope
hlt
xorb
fistps
dec
jae
push
mov
push
outsb
jb
cli
sub
aaa
and
js
mov
dec
stos
dec
push
xchg
mov
and
pop
xchg
mov
push
cli
dec
insl
insl
dec
jae
jg
adc
imul
or
inc
dec
adcb
and
pop
sub
add
xor
adcb
inc
lret
sti
daa
add
inc
cmp
push
jbe
push
xchg
int
in
xor
das
sub
xor
mov
add
lds
pop
stos
into
push
cmp
in
inc
cmp
add
xlat
sub
inc
sub
pop
cmpsb
imul
scas
jmp
mov
pop
mov
imul
test
lret
xchg
pop
shll
fucomp
add
leave
add
pop
das
or
or
add
fisttpl
adc
sub
adc
ljmp
xlat
mov
jg
add
popa
push
popa
add
icebp
bound
dec
jb
jne
add
lods
sub
scas
je
mov
aaa
adc
sub
in
cltd
cs
jne
or
push
adc
cmp
adcb
loop
and
xor
xor
push
pop
call
outsl
jns
mov
rorb
jns
pop
mov
sub
gs
les
push
rcl
xchg
adc
sub
aam
imul
decl
ret
outsl
sbb
daa
add
loope
orb
int
pop
add
add
mov
int3
pusha
int3
add
push
insl
sub
xor
loope
fsubrl
push
or
dec
out
jbe
mov
or
add
imul
ja
or
pop
or
add
inc
cmp
mov
push
jae
pop
adcl
cmp
cmp
xor
jne
lea
jecxz
inc
and
pop
movsb
jmp
xor
jae
and
mov
movsl
popa
and
add
mov
sbb
or
fucomp
mov
outsb
es
push
sti
pop
gs
sub
out
add
jb
cmp
mov
pop
xor
xor
add
mov
scas
imul
insb
popf
xchg
pop
dec
or
sbb
jo
popf
addr16
fstpl
rcrb
sub
shlb
add
ss
push
sub
or
mov
push
sub
dec
dec
imul
push
daa
mov
lahf
sbb
mov
mov
outsl
pcmpeqw
jae
mov
or
xor
inc
push
fistpl
mov
sbb
mov
inc
push
mov
push
arpl
mov
xchg
out
add
dec
adc
and
pushf
mov
xor
xor
pop
xor
dec
call
inc
pushl
xor
xchg
mov
aad
pop
xor
xor
xor
xor
xor
mov
sub
sub
mov
mov
mov
cmp
aaa
fnsave
clc
aaa
xor
cli
cmp
sarl
cmp
cmpb
cmp
mov
cmp
cmp
and
xor
cvtdq2ps
loope
in
sbb
jg
xchg
lahf
or
cli
lcall
sarb
pop
add
aas
movsl
aas
mov
fidivrl
aas
stos
clc
mov
bound
jno
jp
mov
fwait
xor
jg
xor
xor
ja
fwait
xor
dec
aaa
xor
dec
xor
mov
pushl
lret
xor
xor
xor
xor
fistl
jne
test
xor
xor
xor
xor
xor
jge
mov
add
jmp
out
pop
sub
arpl
jne
add
ss
sar
pop
mov
fidivl
loopne
out
and
sub
cs
xor
add
adc
es
mov
imul
push
adc
sbb
or
fldcw
cmp
bswap
jo
lock
add
pop
and
mov
adcb
add
adc
add
lods
or
push
and
add
xchg
dec
outsl
jbe
mov
addb
sbb
xchg
sbbb
mov
xchg
and
fnstenv
dec
loop
fldcw
xchg
add
xor
arpl
inc
int
popf
mov
addl
and
push
add
fwait
add
pandn
push
mov
sub
add
mov
lret
add
sbb
sti
fldenv
pmulhuw
add
add
push
and
and
xchg
sbb
mov
push
add
add
and
pop
fsts
nop
mov
or
add
in
pusha
fcmovnu
adc
scas
mov
xor
fstp
in
add
ret
inc
daa
rol
xchg
xor
add
or
jl
add
add
add
add
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
