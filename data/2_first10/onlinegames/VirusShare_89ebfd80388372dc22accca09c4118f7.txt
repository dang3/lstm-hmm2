sbb
add
mov
push
pop
xchg
ret
mov
lret
mov
mov
imul
mov
sti
mov
xchg
inc
add
cmp
insl
dec
test
mov
and
cmp
lds
push
adc
sub
lret
aad
imul
shl
add
rolb
dec
lods
pop
std
ds
inc
jl
outsl
fs
sahf
jb
sbbl
jl
xchg
cmp
repz
fnstcw
adc
dec
mov
rol
sub
aad
add
mov
cmc
mov
imul
je
stc
ret
jno
jl
lret
in
jae
pop
lahf
sub
ljmp
push
inc
xchg
int3
sub
inc
sbb
push
dec
mov
dec
push
push
inc
jns
nop
cmc
or
jmp
push
push
lret
xor
pusha
popa
imul
sahf
xor
rcr
arpl
xor
pop
xchg
int3
scas
lret
jno
push
fcoml
mov
dec
pushf
jno
insl
jne
sbbb
cmp
or
ffree
adc
and
jecxz
jo
mov
rcll
out
loope
sub
clc
fwait
mulb
popf
je
xor
sbbb
xchg
idivb
fsubl
lahf
addl
sahf
mov
test
dec
scas
mov
fwait
push
lret
cmp
fsubl
daa
aaa
test
push
jmp
sahf
dec
scas
mov
lds
sbb
jo
shl
xlat
jo
and
push
ret
ficoms
xor
adc
dec
cmp
jb
out
shl
push
cmpsb
adc
push
dec
fisttps
xchg
test
add
lret
test
or
fwait
mov
push
sub
and
inc
inc
jge
bound
int
cmp
dec
mov
out
pop
leave
popf
ret
aam
pop
or
mov
cmp
pop
sub
jno
lahf
sbb
add
movsl
int3
inc
aad
shrl
fwait
aad
jl
out
flds
push
arpl
xchg
inc
jbe
repz
dec
rcrl
push
fldt
je
adcb
xchg
rdtsc
leave
push
and
mov
sbb
mov
mov
mov
xchg
scas
inc
insb
in
mov
das
loopne
dec
pop
loopne
out
stos
pop
bndldx
or
pusha
sub
or
pop
jnp
lock
jmp
insb
cs
adc
push
cwtl
xorb
mov
hlt
sbb
aas
popa
fxch
add
and
rclb
pop
pop
dec
fldt
shl
enter
in
hlt
mov
cs
cmp
ret
xor
lahf
mov
adc
dec
sub
adc
loop
stos
mov
dec
and
mov
fnsave
adc
xor
mov
inc
cmc
int3
and
cwtl
lret
and
lret
or
rorb
inc
mov
cltd
pop
mov
imul
mov
sub
fnstcw
mov
or
cwtl
and
or
add
insl
xchg
mov
push
stos
into
lret
stos
mov
movsl
xchg
mov
mov
popf
mov
fwait
xchg
inc
cmp
inc
mov
xchg
inc
in
xlat
push
in
out
add
or
adc
push
iret
loopne
or
imul
cmpsl
mov
mov
sub
cmp
js
sub
mov
rcrb
mov
in
sbb
cwtl
cmpsl
dec
xchg
or
inc
sbb
jno
push
inc
mov
outsb
das
pusha
mov
jo
imul
daa
xlat
jge
inc
jmp
sub
test
pop
jp
bound
and
repnz
repnz
bound
repnz
xlat
xchg
bound
mov
xor
push
pop
sbbb
and
je
pop
in
cmc
inc
inc
sbb
into
and
xchg
mov
push
repnz
lcall
movsww
gs
int
inc
mov
imull
xor
and
cmp
fdiv
adc
push
stos
sti
cmp
mov
xchg
ss
js
andl
inc
rcr
cmpsb
and
or
mov
cmp
jp
mov
dec
xor
mov
and
or
pop
push
dec
mov
mov
mov
adc
inc
outsb
xchg
xor
inc
gs
sahf
xor
mov
jge
addl
sbb
jae
ja
popf
lahf
dec
scas
adcb
testl
xchg
ss
cmp
adc
pop
mov
insb
pop
scas
cmpsl
cmp
scas
repnz
and
scas
ret
mov
push
adc
dec
or
pop
dec
je
stos
or
std
je
xor
mov
pop
inc
out
sbb
test
ret
add
rcrl
xchg
sub
arpl
imull
mov
add
lea
in
sbb
mov
or
inc
je
jg
rep
mov
mov
jp
adcb
decb
pop
add
cld
pop
xchg
into
fs
push
mov
cmc
fistpl
cmpsb
push
push
xlat
or
or
or
sub
orb
in
pop
push
int
test
xor
nop
aaa
sbb
mov
and
xor
jae
pop
mov
add
push
scas
nop
mov
mov
push
xchg
stos
hlt
fmull
xchg
ret
outsb
xorb
adc
rcl
adc
sbb
loope
cmp
icebp
imul
jg
pop
jl
adc
mov
dec
cmp
lret
cltd
insb
gs
xlat
add
push
iret
andl
xor
cwtl
dec
sbb
stos
sub
iret
add
and
push
dec
push
adc
push
and
sub
jmp
repnz
jge
stos
sub
adc
loop
jno
xor
xor
mov
lea
sub
ljmp
inc
scas
inc
xchg
dec
insl
pop
and
clc
cmp
add
mov
pop
andnps
push
push
mov
out
cmp
xlat
stos
dec
add
push
inc
addr16
andb
adc
fnstenv
out
cmp
subl
lock
adc
in
sti
fcompl
xrelease
sahf
mov
sub
testb
mov
cmpsl
in
push
mov
add
xchg
pop
mov
imul
pop
pop
and
stc
pop
outsb
mov
aam
in
rcrl
inc
or
mov
xchg
jg
mov
pop
test
mov
ret
cmp
cmp
xor
mov
mov
popa
test
xchg
cltd
xchg
aaa
daa
mov
out
adc
addr16
dec
ret
jmp
mov
lds
sub
lret
mov
dec
inc
cmc
out
mov
sti
stc
cmpsl
cmp
in
sbb
mov
jns
pop
lret
or
push
out
pop
add
mov
inc
int3
insb
xlat
xor
mov
pop
sbb
icebp
insl
movaps
mov
and
loop
aad
mov
fs
idivb
lods
and
jmp
mov
ret
cmp
dec
pop
es
cmp
popf
pushf
hlt
outsl
ficoml
std
xchg
fdivs
ss
pop
je
xchg
pusha
mov
and
movl
ret
dec
jns
and
test
loop
and
add
iret
aaa
adc
lea
sub
sbb
jecxz
sub
push
pop
mov
cltd
dec
add
mov
in
or
mov
and
cmp
xor
and
aas
mov
mov
jmp
or
dec
sti
inc
in
std
push
push
jno
fwait
in
cld
adc
jne
add
mov
add
mov
add
mov
push
jp
adc
cltd
test
add
out
add
sub
cli
lahf
sub
adc
cmp
adc
xor
pusha
fisttps
jne
push
lods
shrb
fcompl
xor
xor
sbb
addb
push
mov
stc
add
add
dec
fsubl
fdivrl
mov
or
scas
jnp
jbe
push
cmp
hlt
scas
add
pusha
jg
cmp
insw
and
or
cmp
out
jns
add
inc
dec
xchg
test
enter
add
out
gs
push
inc
mov
inc
into
adc
repnz
loopne
sbb
xchg
stos
pushf
bound
ror
xchg
sbbl
jno
sbb
out
mov
or
movsb
lock
dec
push
jp
jb
call
aam
inc
xor
push
inc
xor
daa
mov
or
pop
mov
cld
mov
negb
push
add
aaa
mov
jmp
mov
call
das
or
add
arpl
lea
or
insb
clc
fimull
or
jb
xlat
jo
pushf
nop
jo
xchg
and
and
pop
jg
mov
pop
mov
sub
mov
mov
jp
xchg
dec
mov
or
hlt
fistpll
cs
loop
scas
mov
outsb
jg
push
pusha
and
int3
ds
loope
push
cmp
cmp
and
das
xchg
fcomps
or
nop
mov
mov
outsb
outsl
mov
into
pop
mov
jecxz
sub
push
adc
decb
insl
jns
movsl
push
lret
or
scas
iret
cmp
xor
and
or
lcall
loope
add
bound
pop
test
xchg
jno
scas
jmp
xor
cs
in
jb
lcall
out
shlb
mov
dec
sub
sbbl
fs
dec
sub
pop
mov
xchg
sbbb
jp
or
cld
and
mov
cli
jb
fcoms
imul
jmp
fbld
push
or
cmp
lods
inc
pop
xor
mov
xor
sbb
lret
push
int
dec
in
mov
clc
or
jecxz
xchg
fs
pop
lahf
data16
dec
adc
lahf
in
pop
cmp
pop
sub
jns
out
repz
rcr
sbb
adc
test
aaa
scas
pop
test
dec
sub
fs
xor
out
nop
sbb
in
xchg
pop
xchg
fs
mov
jl
lods
pop
cmp
add
rorb
hlt
mov
jb
or
aaa
popa
mov
loop
push
add
adc
xchg
fwait
imul
push
ss
push
call
cmp
les
cmpsl
push
fwait
cwtl
shl
cmpsb
in
cmpl
xor
sbb
movsb
out
cmpsb
cmp
pusha
push
adc
pop
pop
pop
xchg
shrb
scas
ja
xor
cltd
int
add
add
pushf
push
ret
cmp
icebp
mov
dec
inc
or
ret
inc
icebp
adc
add
rcrb
adc
std
pop
add
xchg
add
out
or
es
ljmp
fstpt
and
aad
pop
ror
stos
test
or
gs
dec
xchg
test
xlat
jp
xor
outsl
loop
sub
fdivrs
jnp
xor
adc
mov
test
std
mov
xchg
pop
xor
inc
outsl
pop
xor
mov
cmp
jns
popf
lret
lahf
xchg
or
sar
clc
adcl
ja
mov
faddl
cmp
aaa
fiadds
inc
mov
ja
jno
in
cltd
sahf
cmp
cmp
adc
jb
or
fldt
jnp
lahf
inc
in
mov
pop
sysret
fisttpll
mov
dec
rorl
mov
test
or
dec
insl
adc
mov
xchg
arpl
jnp
test
and
icebp
adc
xchg
mov
cltd
cmpsl
je
clc
push
int3
mov
mov
sbb
aam
ds
popf
adc
pop
adc
mov
clc
pop
nop
mov
lods
fcomp
xchg
xchg
cmp
and
add
mov
cli
sub
pop
in
inc
add
in
add
add
xchg
cmc
dec
jge
std
loop
xchg
mov
cmpsl
jae
push
mov
xlat
or
sbb
jbe
outsl
add
enter
push
inc
mov
push
inc
mov
push
mov
jmp
test
push
dec
das
loop
mov
push
jo
mov
mov
movsb
ds
inc
ret
les
jno
test
adc
inc
inc
jbe
fildl
push
clc
sbb
and
add
popl
push
add
in
test
mov
adcl
int
cs
pop
in
std
jmp
mov
pop
pop
outsb
sub
mov
in
mov
mov
test
mov
ss
adc
jnp
dec
cmc
inc
je
sbbb
jno
shll
mov
mov
sbb
repnz
xor
sub
stos
sbb
xchg
pop
sarb
inc
mov
mov
lcall
add
sub
in
shlb
sar
push
jecxz
mov
pop
adc
lock
les
lret
push
xchg
insl
out
xor
int
psadbw
and
and
into
sub
cwtl
imul
cmp
fwait
add
mov
rcrl
mov
in
mov
lods
xchg
xchg
callw
ffreep
leave
sub
in
xchg
pop
fwait
pop
jae
jg
popf
mov
aas
popf
pop
shlb
pop
push
lods
mov
cli
in
pop
xchg
in
aaa
insb
shll
scas
test
call
fdivrl
fiaddl
push
xor
inc
out
cmp
popf
arpl
xchg
iret
das
cmp
sbbb
shl
add
ret
push
insb
xor
fs
cmp
or
push
push
outsl
ja
aaa
lcall
xor
pushf
lods
pop
push
mov
shrl
mov
inc
sub
imul
scas
xor
bound
popa
inc
jbe
cmp
icebp
xchg
mov
cli
imul
movsl
mov
les
cmpsl
xchg
hlt
in
pop
es
sub
mov
dec
nop
push
in
pop
dec
dec
icebp
lea
in
mov
sub
push
mov
int
lcall
in
fidivl
ja
inc
insl
jae
sbb
jge
rolb
push
imul
cmp
lds
inc
dec
cld
adc
xchg
ret
jecxz
mov
outsb
xor
mov
adc
xchg
cld
enter
mov
jg
cmp
sahf
rcl
fbstp
push
dec
aam
addr16
lret
addr16
sbb
xor
sahf
xchg
shrb
push
rcr
scas
aaa
test
lods
pop
and
in
mov
fisttpl
mov
xor
bnd
or
xchg
test
jne
shl
adc
pop
cmp
cmpb
pop
dec
dec
into
xchg
test
sahf
xchg
lds
test
iret
loope
mov
cmp
jle
gs
sbb
cmp
rorl
mov
push
jg
sbb
jmp
scas
nop
cmp
icebp
mov
cmp
inc
shll
pop
push
pop
mov
mov
mov
xchg
pop
jns
pop
adc
or
ds
into
sub
test
mov
mov
inc
mov
jp
out
nop
scas
sahf
das
dec
push
dec
mov
sbb
icebp
cmpsb
add
mov
jbe
xor
jg
xor
ret
push
add
add
rolb
push
and
incl
dec
enter
mov
mov
movl
cmp
or
pop
jge
inc
mov
xchg
and
out
sbb
movsb
fmull
dec
pop
movsb
in
and
enter
or
mov
pop
cs
rcrb
mov
add
inc
out
out
dec
lret
mov
pop
scas
repz
aaa
je
cmp
xor
adc
in
xchg
popf
test
mov
inc
int3
pop
inc
pop
insl
cwtl
inc
in
sub
scas
enter
scas
or
dec
ficoml
cmp
fsub
and
mov
ss
push
std
dec
sub
mov
or
add
add
xchg
push
insb
rol
push
xlat
jge
push
in
sahf
cmp
enter
rcrb
jb
xor
jle
cltd
test
stos
xor
mov
fs
jmp
iret
icebp
pop
repnz
or
andl
out
lock
dec
js
orl
cwtl
in
fnstsw
mov
xlat
pop
jne
push
aas
and
insl
jns
mov
loop
call
repz
xor
bound
dec
icebp
push
fbstp
ss
fcompl
clc
jb
mov
andb
sub
jp
inc
jge
jecxz
mov
cli
js
jo
add
cmp
popa
mov
pop
mov
mov
fidivs
mov
or
adc
jne
dec
sub
cwtl
ret
test
dec
shll
jg
scas
cmp
push
leave
addr16
push
ja
xor
pop
lock
cmp
inc
mov
pop
imul
std
dec
inc
adc
or
jmp
jmp
inc
push
jmp
mov
xchg
pop
jp
cmp
mov
mov
push
mov
loope
fs
aas
xchg
jle
adc
pop
leave
in
into
sbb
stos
add
pop
and
orb
stos
ja
icebp
inc
dec
pop
int3
subb
pop
add
cmp
test
adc
loopne
pop
mov
mov
sbb
pushf
daa
out
cmp
ret
fisttpll
ds
cli
add
adc
les
int
adc
xchg
movsb
bound
cld
or
aad
jecxz
or
or
pop
lock
cld
push
dec
sahf
inc
or
sbb
cmc
in
es
shlb
cs
clc
ds
sub
xlat
popf
mov
mov
xchg
and
jne
es
cli
les
sub
cmp
sahf
jbe
fdivr
int3
test
push
add
sub
std
pop
jo
add
into
xorb
imul
xchg
add
cs
test
jns
addb
cmpsb
sti
mov
gs
mov
lods
inc
cmp
jmp
test
mov
aam
pop
mov
adc
js
jp
inc
pop
std
in
call
jp
out
bnd
rcrl
pushf
sub
mov
aas
fisttpl
cmp
inc
test
xchg
push
shrl
jns
xor
cmp
xchg
cwtl
clc
xlat
arpl
push
and
sarl
stos
xlat
outsb
jg
sbb
fdecstp
xchg
jae
fsubp
insb
lds
pop
xorl
insb
call
stos
push
lds
adc
stos
cltd
jb
adc
mov
pop
aaa
or
mov
dec
fwait
add
les
xchg
xchg
mov
sti
bnd
xchg
xchg
mov
lds
push
push
jecxz
push
scas
xchg
push
mov
sbb
xor
fisttpll
sub
push
fadds
inc
cltd
dec
mov
fs
orb
push
cmp
sbb
test
ret
mov
inc
ret
jmp
push
or
repnz
aaa
sbb
xchg
xchg
cmp
mov
lock
mov
and
inc
push
mov
int3
aad
xor
jns
and
scas
popa
cmc
cmp
mov
rep
cmpsb
mov
loope
xor
jns
fwait
jle
out
js
push
adc
and
outsb
inc
cmp
xlat
sbb
ja
test
call
cwtl
jno
push
ljmp
sbb
mov
popf
jno
jb
mov
adc
or
cmp
push
jp
pop
in
gs
rcll
clc
testl
push
dec
mulb
fldenv
lahf
and
iret
and
sub
std
sub
push
sub
pop
scas
mov
int3
or
inc
movsl
addb
pop
jne
in
push
push
or
dec
mov
mov
lret
test
inc
cld
lods
fnstcw
fsubrl
repz
pop
les
inc
mov
into
psrad
xlat
subb
popa
xor
jb
adc
shlb
mov
cld
inc
arpl
adc
out
mov
into
sbb
idivb
cmc
into
mov
push
ja
loope
in
mov
popf
dec
add
lods
sub
push
imul
dec
jno
and
loop
lods
mov
call
or
cmpb
bound
cmpsl
mov
jecxz
dec
xor
icebp
adc
aad
jbe
mov
xorb
hlt
sub
dec
push
out
fsubrs
pop
inc
mov
es
xchg
scas
and
sbb
push
cwtl
xchg
jge
js
adcb
loop
jo
inc
int
mov
incb
inc
outsl
mov
inc
inc
xchg
sbb
jl
sub
cmp
cld
or
shrl
pop
jo
rclb
sub
add
aad
sbb
mov
adc
into
out
fldcw
or
shl
xor
pushf
xor
mov
xor
imul
ffreep
push
leave
pushf
inc
pop
lret
cmp
je
insb
lcall
in
loop
cmp
test
pop
testb
jecxz
adc
dec
mov
and
jae
cmpsb
dec
mov
push
testl
push
movsb
outsb
lock
idivb
pop
aaa
imul
dec
or
std
xor
pop
add
jmp
sbb
push
push
mov
adc
inc
inc
xchg
fmuls
fcmovnb
cli
jp
xor
mov
xchg
pop
fsubl
inc
add
fnstsw
das
pusha
cli
aad
dec
sbbb
loopne
filds
xchg
ja
ljmp
shrl
add
lcall
inc
cmp
inc
flds
jnp
cs
push
mov
not
int3
pop
push
aam
push
jecxz
or
or
bnd
sbb
rep
pop
lods
leave
lds
lods
shlb
outsl
lock
jecxz
xchg
jecxz
pop
xchg
popa
cmp
jns
inc
mov
lcall
outsl
xor
push
jmp
mov
mov
inc
and
or
jp
sub
add
popf
subl
push
push
fxch
dec
jnp
pxor
dec
imul
xor
test
and
mov
inc
sub
mov
pop
adc
push
sar
cmp
push
fsubrs
jae
movsb
or
leave
inc
movl
mov
inc
test
push
repnz
lods
adcb
and
sub
push
out
push
insl
daa
orl
jnp
push
dec
dec
add
shr
lret
sub
mov
sub
inc
ja
xchg
test
pop
add
cmp
iret
addr16
test
sarb
lcall
xchg
ror
dec
cmpsl
mov
test
cmp
mov
sbb
jp
les
mov
data16
inc
clc
push
cmp
test
stc
std
sub
push
xchg
jb
lret
cwtl
ffreep
mov
enter
test
and
andb
into
or
movsl
push
adc
pop
ja
mov
sub
int3
jecxz
into
in
sub
cltd
test
mov
out
fildl
inc
jl
sti
sub
jecxz
pop
pop
xchg
stos
fwait
lds
jp,pt
xor
or
out
inc
in
out
pop
pusha
pop
cmp
shrl
dec
mov
fucomip
cltd
add
mov
outsb
ret
push
sti
fnstenv
adc
test
dec
sub
jb
jg
in
dec
das
sbb
sbb
mov
shll
pop
stc
ja
or
sbb
push
bnd
jecxz
hlt
dec
icebp
lret
test
sbb
jecxz
push
addr16
sbb
mov
repnz
leave
xchg
enter
test
push
adc
xor
pop
jle
notb
lahf
push
pop
xor
push
push
pop
fcmovb
push
cmc
push
clc
popf
das
mov
aas
push
sbb
cmp
stc
je
sbb
inc
dec
and
fs
sbb
xor
mov
shll
dec
add
mov
pop
or
stc
push
cmp
inc
fwait
mov
in
cltd
xchg
add
push
ss
jns
or
add
aad
arpl
mov
ja
jle
pop
xchg
aas
rol
adc
pop
push
push
sub
cmpsl
in
scas
lcall
sub
incb
mov
or
mov
mov
les
mov
mov
mov
push
and
push
cmp
sub
mov
insl
and
pop
in
dec
add
inc
and
je
xchg
fsubp
je
xchg
xchg
xchg
mov
push
jecxz
mov
decl
js
ljmp
jo
push
cmp
bound
cwtl
pop
aad
or
lock
insl
mov
dec
cmp
ss
sbb
cli
cli
jl
test
ljmp
pop
pop
jns
gs
xor
mov
decb
sbb
push
mov
mov
and
out
add
pop
xor
aas
jp
add
jmp
jmp
jo
mov
in
hlt
adc
fidivl
sub
adc
es
push
mov
and
jno
lea
stos
pop
mov
mov
sub
cwtl
cmpsb
clc
inc
xchg
jbe
jmp
mov
sub
aam
push
push
insl
add
js
xchg
cs
add
hlt
push
ret
lods
cmc
adc
dec
xchg
lcall
push
xor
mov
cmp
sbb
sub
mov
shll
loopne
xchg
push
outsl
mov
adc
rolb
inc
movsb
push
nop
mov
stc
nop
pusha
dec
sub
inc
pop
int
test
mov
lcall
push
or
pop
cmp
jecxz
test
jbe
out
call
and
test
mov
mov
loop
pop
xlat
int3
sub
test
imul
add
gs
fisubrs
sbb
mov
pop
in
mov
add
adc
adc
insl
loopne
les
pop
imul
mov
pop
jmp
jno
xor
insl
lods
and
clc
push
pop
insb
repz
sub
mov
loope
pushf
fcomps
push
cli
hlt
or
xor
xor
andl
sbb
ret
push
inc
mov
mov
in
mov
xchg
cmp
jno
mov
mov
ret
sub
mov
daa
add
leave
cwtl
lds
outsl
movsl
xchg
inc
aas
jne
and
jbe
mov
dec
sub
jbe
jg
fldt
lods
and
fldenv
and
jnp
mov
addl
std
adc
pop
in
test
add
pop
xchg
add
movsl
test
xlat
stc
cmpl
lods
aad
or
mov
push
adc
out
push
mov
push
imul
push
inc
leave
test
mov
in
enter
aaa
push
add
je
cmp
pop
cld
insl
ret
mov
fwait
aaa
out
hlt
daa
rcll
call
adc
popf
gs
pop
shll
ljmp
sub
cmpsl
fidivrl
lret
enter
push
dec
cmp
fsubs
add
xor
ss
lea
add
jb
mov
and
loopne
loop
lods
and
cmp
dec
push
testb
fbstp
testb
mov
push
pushf
adc
or
xchg
sbb
cmp
movsb
mov
insb
cmp
xor
and
jecxz
xchg
inc
and
cmc
mov
inc
movsb
mov
and
cmpsb
push
xchg
push
or
and
adc
sub
in
push
push
loop
pop
shll
aam
xchg
pop
loop
loope
pop
xchg
inc
lock
outsl
idivb
inc
pop
mov
add
rorl
out
dec
push
mov
xor
pop
das
scas
or
sub
push
sbb
xchg
lcall
mov
out
icebp
xchg
cmc
aaa
movsl
mov
add
xorl
mov
stos
cs
push
sbb
clc
dec
cmp
pop
xor
fcomi
jne
pushl
fcmovu
pop
enter
or
pop
fwait
hlt
jg
scas
dec
outsb
mov
add
sbb
dec
and
mov
int
iret
clc
es
sub
addr16
imul
out
jecxz
mov
xchg
mov
jmp
mov
data16
xchg
into
mov
out
jae
outsl
ja
sbb
xchg
cmc
or
arpl
lds
cmpsb
xchg
cmp
jmp
pop
arpl
mov
mov
inc
xlat
or
mov
test
push
sarl
cmp
je
jl
inc
call
scas
and
dec
fdivrs
ds
pushf
jae
test
inc
test
ret
test
jne
pcmpgtw
mov
jmp
inc
fists
shll
leave
push
and
mov
xor
xchg
cmc
xchg
je
jo
dec
jne
push
add
xchg
out
insl
test
test
or
cmpb
mov
movsbl
push
mov
lret
cmp
or
jns
mulb
sahf
add
int
push
jge
and
out
in
cmpsl
popa
shll
mov
repz
outsb
fildll
in
mov
movsb
xchg
xchg
adc
stos
cmpsl
mov
rcrl
into
out
jns
or
jmp
js
add
fldl
into
icebp
lds
lret
or
in
sar
sahf
mov
mov
cmp
dec
icebp
rcrl
mov
test
sbb
out
jl
sub
dec
movsb
xchg
xor
repnz
pop
xchg
test
sbb
cmpsb
jb
or
mov
xchg
stos
mov
into
aas
pop
stos
lea
xchg
ret
mov
mov
movsb
mov
addr16
mov
adc
mov
dec
loope
je
cs
in
movsb
xchg
rorl
leave
push
xor
pop
cli
xchg
fstpl
sub
sub
jle
lock
pop
sti
push
cmp
fstl
movsb
xchg
lcall
sbb
int
adc
ss
int3
lods
jp
dec
pop
out
add
ss
jnp
lret
scas
dec
fwait
mov
insl
shl
push
out
repnz
lock
cmp
lods
mov
stos
adc
cld
inc
std
push
dec
in
sub
pusha
push
js
jmp
cli
xor
mov
sbb
testb
cmp
test
xchg
inc
fistl
es
rol
lret
fstpt
fldcw
mov
cmpb
sub
mov
push
loope
mov
aas
aas
xchg
mov
lock
inc
mov
lcall
data16
repz
testb
adc
ja
dec
jg
inc
fsubl
jo
mov
test
jmp
inc
das
fwait
jecxz
xor
in
sbb
push
es
stc
jbe
mov
lods
stos
jg
stos
shll
insl
ror
cmp
mov
mov
nop
jg
mov
inc
jge
mov
outsl
mov
loop
jne
jmp
push
scas
xchg
stc
ja
cmpsb
mov
sub
adcb
xchg
mov
cmc
sbb
sub
inc
sub
lret
or
fists
mov
movsb
cmp
xor
roll
aaa
sub
daa
adc
flds
xor
cmpxchg8b
stc
adc
decl
int3
repz
sahf
jmp
cmc
cmp
adc
sbb
stc
outsl
fcomps
mov
jecxz
xor
sbb
loop
sub
mov
jb
aad
jae
sarl
add
imul
push
mov
jo
mov
imul
nop
adc
sub
cmp
and
cmp
mov
pushl
xlat
pop
out
fsubrp
mov
loope
loopne
add
cvtps2pd
call
call
dec
ret
or
jl
cltd
mov
pop
lods
outsb
js
or
jno
push
iret
daa
shrb
data16
inc
mov
ja
mov
cld
test
or
and
test
cltd
popa
fsts
in
lods
dec
jno
inc
fsubs
pushf
or
pop
or
xor
mov
inc
call
in
pop
inc
jg
push
rorb
rorl
shl
xor
frstpm(287
add
cltd
mov
test
jns
icebp
jl
jbe
or
xor
inc
add
out
adc
cmc
fidivl
nop
scas
add
xor
xor
dec
into
pusha
bound
push
nop
sahf
xchg
sahf
test
mov
lea
xor
lahf
jecxz
aad
dec
xchg
stos
jmp
pop
fcomps
out
inc
icebp
pop
fs
popf
fs
popf
inc
jle
pop
lods
cmp
cmpsb
dec
fimuls
inc
int
insb
adc
sub
pop
push
inc
mov
mov
arpl
out
lods
divb
pop
pop
rclb
cwtl
outsl
enter
cli
shr
popf
xchg
jb
add
and
or
cs
inc
call
in
arpl
jg
js
xlat
call
dec
inc
stc
sbb
jge
bound
in
data16
cmpsl
dec
daa
dec
sub
ja
mov
cmp
cmpsl
clc
jge
in
push
mov
stos
lds
iret
sbb
insb
and
aam
mov
cltd
or
inc
push
mov
imul
jle
imull
add
outsl
dec
roll
sub
adc
pop
jg
rcr
ficoml
mov
xor
mov
pop
pop
enter
and
inc
fs
popl
das
loop
add
pushf
lcall
inc
jno
jae
out
imul
pop
sub
stos
jmp
dec
or
mov
inc
lahf
xor
cld
call
or
cmp
call
in
arpl
jae
sub
push
ret
add
call
mov
idivl
add
xor
sbb
jp
ja
repz
lcall
push
clc
dec
cltd
test
adc
xor
repnz
mov
scas
or
add
jp
inc
inc
mov
push
test
pop
lods
dec
lret
in
imulb
cmp
mov
mov
sbb
lds
sbb
mov
fldcw
sub
mov
call
sbb
jp
pmuludq
jno
pushf
int3
mov
test
lods
dec
xor
push
fs
add
stc
dec
add
jge
repz
sub
outsb
stc
jle
pop
lret
jo
or
call
add
fldcw
aaa
repz
mov
push
repnz
scas
push
shll
std
dec
cmp
cmp
ret
pushf
mull
dec
jno
out
das
mov
pop
in
jne
xchg
pop
int
imul
lcall
fisubrs
mov
insb
cli
sti
dec
or
cmpsl
mov
jmp
ja
into
or
imul
dec
jge
clc
sub
outsb
mov
push
mov
inc
pusha
xlat
call
mov
inc
rcll
xchg
cmpsb
push
pushf
ret
icebp
pop
cmpb
pop
outsb
js
int3
xor
daa
cmp
jmp
lock
cmp
mov
push
enter
mov
stc
xchg
fdivp
stos
push
xchg
jecxz
out
stos
mov
std
daa
sbb
sub
mov
add
mov
ret
cmp
dec
fwait
push
push
sbb
daa
movsb
ret
mov
mov
or
in
inc
fcmovnu
adc
sbb
and
inc
dec
mov
mov
xor
jmp
pusha
dec
scas
into
xor
inc
repnz
test
sub
aad
jnp
sbb
cmpl
mov
dec
cmp
jp
arpl
lock
cltd
stc
add
int3
sbb
and
into
pop
roll
ljmp
lret
fadd
popf
add
jmp
sbb
xlat
ljmp
mov
fxam
inc
xchg
out
mov
pop
adc
outsl
jmp
ss
aam
push
dec
inc
imul
das
adc
sub
xchg
andl
int3
ds
jnp
sar
jns
iret
and
xchg
adc
dec
mov
aaa
popf
aad
movsb
sbb
or
add
mov
push
ss
insb
mov
imul
adcb
test
ss
out
sti
add
jae
pusha
jo
jp
mov
stos
int
sub
stc
cs
cs
rol
jecxz
call
mov
pop
xchg
dec
mov
xchg
pop
mov
out
mov
orl
mov
mov
xchg
inc
repz
dec
dec
push
adc
sub
mov
clc
pop
sti
loope
xchg
xor
scas
jns
or
xchg
sbb
xor
mov
cmpsb
fimull
cwtl
jne
jo
mov
std
pop
cmpsb
inc
or
cs
mov
scas
jb
xorb
push
jns
daa
sarb
push
shll
adc
inc
cld
test
stc
xor
mov
nop
inc
lods
cmp
mov
push
testb
repnz
jmp
inc
fstl
lea
or
pop
aam
pop
inc
jae
dec
data16
outsl
sub
shll
cmpb
leave
cmp
loope
sahf
mov
lock
add
imul
int
jl
sub
add
cmp
iret
pop
fmull
sbb
jg
daa
repz
mov
sbb
mov
mov
data16
inc
movsb
movl
aas
mov
addr16
cmc
add
xchg
arpl
or
mov
imul
and
and
lcall
in
xchg
test
shll
mov
lea
cvttps2pi
xor
js
insl
ds
mov
popa
xchg
mov
ror
adc
movsb
push
mov
jl
push
addb
add
in
add
cmp
lea
loop
int
inc
into
popf
test
push
jb
and
cmpsb
push
mov
push
xchg
pop
mov
pusha
and
add
js
out
jb
push
lret
inc
testl
add
jmp
lcall
add
sti
mov
lods
push
nop
mov
test
aas
repnz
sarl
push
mov
push
es
dec
cmp
rcll
pop
cmc
adc
sub
xor
inc
push
addb
or
mov
mov
adc
pusha
pop
sbb
outsb
adc
lods
loopne
fisubl
pop
xchg
mov
popf
inc
int
xlat
jo
mov
sub
dec
insb
inc
lret
pop
rorb
je
orl
or
xchg
jp
in
dec
inc
iret
push
xchg
dec
sbb
and
mov
dec
jg
add
iret
shlb
mov
pop
fistpll
orb
rorl
pusha
mov
sbb
jo
adc
iret
sahf
pop
and
adc
jg
sbb
and
rorb
xor
imul
mov
push
out
inc
jb
repnz
ss
cmc
ljmp
mov
sub
dec
xor
or
and
sahf
call
dec
pop
dec
mov
bnd
xor
std
cmp
inc
push
rol
inc
sub
out
mov
clc
or
cmpsl
outsb
mov
mov
dec
jbe
jbe
lods
stos
jo
gs
jno
dec
sbb
fistps
stc
movsw
or
movsl
mov
stos
cmp
cwtl
lds
mov
lock
inc
aam
pop
pop
out
xchg
ficomps
stos
aaa
hlt
push
addb
fldl
xor
inc
sub
push
xlat
cli
lea
js
pop
or
jns
mov
lahf
mov
jo
cmpsl
xlat
sub
jne
or
adc
cmp
pop
mov
dec
push
xchg
xor
outsl
shll
jno
scas
push
popa
dec
lahf
pop
iret
pop
repz
jo
outsl
sub
out
fstpl
mov
dec
and
xchg
mov
jl
inc
inc
and
dec
sub
rcr
dec
mov
and
dec
sub
shlb
lods
or
cltd
or
cwtl
test
fdivp
cs
jl
cs
sub
ret
lds
and
jle
out
aam
or
add
mov
movl
jmp
inc
fidivrs
mov
pop
dec
ret
leave
inc
and
mov
int
and
shlb
dec
rorb
mov
sahf
mov
aas
sti
mov
sub
data16
xor
jae
or
and
add
sbb
push
pop
popa
mov
icebp
inc
and
cmp
mov
rorb
dec
mov
pop
mov
adc
orb
mov
pop
inc
test
out
xchg
cmp
cmpsl
into
cmpsb
adc
sub
and
rclb
mov
gs
movsb
adc
pop
mov
repz
cltd
xchg
and
push
fwait
jb
mov
adc
sub
xor
push
sti
jl
cli
cmp
loope
dec
pusha
fsubs
sub
movsb
insl
xchg
fdiv
inc
pop
fstpt
dec
lods
mov
xchg
pop
dec
dec
pop
dec
es
lock
out
sub
cmpsb
pop
jecxz
repnz
popa
and
and
iret
ret
jbe
in
add
pop
sub
pusha
pusha
and
jae
popf
inc
sub
sub
lcall
sarl
cmpsl
repz
xchg
and
push
lret
pop
mov
hlt
push
cli
sbb
std
mov
aam
xor
sbb
add
xlat
out
ss
adc
out
pop
xchg
mov
pop
pop
rcll
push
push
mov
sahf
scas
pop
insb
adc
mov
js
lea
aaa
insl
fs
call
mov
xor
pushf
mov
add
xor
and
popa
and
xor
gs
loope
inc
out
mov
ds
fcoms
xor
push
pop
fcomip
pop
xorb
test
pop
mov
mov
pop
or
pusha
fstps
sub
dec
cmpsb
and
mov
fwait
xor
cmp
push
js
outsb
jmp
push
fidivs
adc
push
aas
rorl
mov
inc
scas
bound
imul
xchg
push
lods
adc
jp
mov
inc
fnstsw
mov
pop
dec
fs
jne
adc
js
aaa
sub
adc
jns
sub
cli
jo
fists
das
push
in
imul
rcrb
pushf
add
push
xchg
repz
out
roll
dec
cld
int
ljmp
testl
dec
pop
cld
cld
or
lahf
lcall
cltd
xor
xor
jle
loop
js
pop
push
or
push
or
outsl
test
push
stc
js
imul
lea
push
xor
ja
lods
xchg
jmp
das
jb
divb
cmp
movaps
cmp
push
mov
mov
and
jmp
fcoms
imul
add
aaa
movsl
fs
rorb
ss
testl
jne
push
mov
xor
cmp
int
ss
cmpsl
or
scas
cltd
mov
repnz
adc
ss
mov
adc
xor
ret
jnp
mov
in
lcall
or
js
sub
outsl
cmp
jp
sbb
or
into
pop
or
lds
sbb
and
pushf
lea
arpl
ficompl
out
and
add
and
sbb
cmc
fmuls
pusha
pop
mov
adc
repz
push
mov
pushf
pop
imul
clc
fsubp
mov
loop
inc
sub
push
mov
mov
fdivrl
adcl
ficompl
add
pop
pusha
jae
icebp
pop
add
xchg
int3
dec
cmp
jg
aad
and
outsb
add
mov
mulb
jmp
and
xor
scas
cmp
jle
and
jnp,pt
adc
pop
outsl
ret
into
push
fcmovbe
xchg
add
jbe
ret
pop
jmp
ret
mov
mov
and
jbe
daa
repz
and
pusha
mov
lcall
lds
dec
lods
xchg
and
and
pop
cmp
fstl
insb
xchg
ret
inc
push
and
add
jnp
call
es
mov
mov
loopne
cld
jecxz
aam
jne
rorl
cmp
mov
mov
push
bound
xor
add
aad
aam
lds
in
loope
mov
ja
gs
scas
test
aaa
push
leave
mov
xor
inc
repnz
cmp
jl
mov
inc
jmp
js
aam
cmpsl
cwtl
push
pop
pop
xor
jecxz
push
in
dec
adc
into
xor
mov
mov
fisubs
mov
mul
or
daa
sub
push
adc
ss
dec
mov
jg
pusha
push
mov
ds
cmp
mov
cmp
rcr
xor
es
xor
add
push
subb
xor
test
xchg
repz
mov
pop
cltd
test
push
ret
xor
sub
cmpl
cltd
sbb
std
std
imul
pop
fidivrs
mov
mov
gs
mov
les
jo
push
outsl
push
push
sbb
jmp
push
pusha
test
inc
xchg
cmpl
repz
fwait
add
add
pusha
and
in
ret
inc
dec
and
xchg
sub
decb
xor
xor
imul
cli
push
mov
fstpt
push
sub
dec
addr16
inc
xlat
cli
ljmp
idiv
jb
call
mov
and
sub
daa
scas
push
mov
push
push
ret
xor
and
das
rorl
daa
cmp
data16
fisubrl
mov
push
xchg
xlat
ljmp
push
sar
jecxz
inc
repnz
mov
sti
xchg
mov
and
repz
test
xchg
adc
sbb
cmp
add
jns
mov
ja
iret
sub
mov
xchg
hlt
mov
xchg
mov
xchg
jbe
ret
test
test
scas
sbb
cwtl
mov
cmp
imull
mulb
push
adc
add
pop
mov
sbb
repz
inc
mov
imul
clc
fisubs
aad
mov
lods
pop
inc
clc
lret
pop
inc
sbb
cltd
mov
dec
push
xor
add
adc
pop
shlb
cmc
loope
adc
mul
rorl
adc
stos
pop
fsubr
mov
std
push
push
pop
jns
jecxz
fwait
add
mov
xor
inc
es
mov
loopne
movsl
mov
pop
dec
cltd
fisttpl
or
popf
xchg
dec
rol
test
add
adc
push
mov
clc
push
mov
stos
dec
stos
jmp
sbb
sti
test
arpl
cmpsb
out
pop
icebp
dec
bound
mov
adc
mov
roll
scas
inc
pop
dec
pop
cs
es
xlat
aas
lea
js
mov
fstl
push
fdivrl
sub
popf
fcmovbe
lock
inc
bnd
out
in
outsb
xor
mov
movsb
add
imul
lahf
scas
hlt
pop
imul
shrb
sub
loope
xchg
mov
pop
shrl
in
inc
jg
sub
loope
aad
sarl
sbb
insb
daa
je
out
cmp
mov
dec
dec
jno
add
pop
aas
inc
push
stos
add
outsl
rolb
adc
xchg
jmp
in
push
jns
cwtl
loop
stos
mov
outsb
lret
jns
sbb
mov
cmc
add
pop
xchg
out
dec
shr
mov
fwait
int
inc
rol
mov
imul
mov
cmc
xor
bound
sbb
mov
cmp
aad
divl
ret
and
xor
movsl
in
jl
xchg
aas
or
mov
mov
out
adc
fcmovu
cwtl
mov
and
stos
cs
pop
push
xchg
mov
ljmp
bound
leave
enter
mov
aaa
sub
xchg
dec
fsubr
mov
xor
iret
xchg
dec
jg
outsb
lret
jbe
mov
test
mov
inc
push
rcrl
add
data16
ficompl
in
in
jecxz
pop
mov
inc
cmp
and
push
cltd
mov
ret
lea
aaa
pop
in
sarl
pop
pop
out
inc
je
dec
adc
cmp
xor
outsb
adc
cmp
xchg
popa
lods
in
lret
hlt
loopne
adc
shll
cltd
nop
roll
divb
and
call
jmp
add
aas
push
out
aad
jl
divl
or
imulb
negb
insl
cwtl
ljmp
inc
dec
fadd
xchg
mov
push
pop
pop
fsubr
pusha
je
dec
imul
cmc
xchg
ds
cmpsl
inc
xchg
mov
das
or
lock
xchg
pop
fistps
inc
mov
popa
xchg
daa
aas
push
es
out
int3
arpl
sub
scas
jae
mov
push
jl
jnp
sub
jb
pop
push
sbb
iret
lret
jno
aam
fldcw
movsl
pop
mov
movsb
scas
fwait
not
outsl
sub
add
mov
dec
cmp
push
imul
inc
iret
cltd
push
jns
test
loop
sub
add
push
fcoml
mov
test
sbb
xchg
out
inc
inc
dec
cwtl
mov
inc
aaa
in
ret
test
lcall
ja
roll
mov
cmp
dec
data16
push
mov
push
mov
jmp
lea
cmp
out
test
or
popa
push
std
push
inc
inc
lcall
outsb
je
in
stos
xchg
jmp
pop
sub
xchg
xchg
in
cmp
insl
push
repnz
mov
add
rolb
adc
fs
xchg
mov
adc
imul
jmp
mov
js
push
leave
mov
lods
data16
push
ljmp
mov
add
cmpsl
hlt
in
cmp
pop
dec
cld
xchg
sti
inc
pop
outsb
sbb
mov
es
sub
xchg
test
sub
orb
ret
push
dec
and
push
dec
push
stos
adcb
xor
cmp
ds
in
or
dec
mov
fsubrl
adc
jl
cmp
mov
xor
loop
push
cmp
or
pop
or
in
fcmovnb
scas
bound
lret
cmp
mov
jl,pt
inc
ret
sbb
jmp
push
fadd
jae
push
pusha
ds
insl
nop
pop
jb
dec
cmp
jl
out
daa
mov
fcoms
sbb
in
adcl
dec
jp
mov
xchg
lcall
mov
loop
popa
lret
pop
test
test
mov
and
dec
inc
and
dec
pop
fcomps
mov
xchg
out
sub
xor
aaa
dec
test
sub
mov
mov
xchg
stos
hlt
clc
out
js
or
std
inc
fsubr
test
movl
cli
fiaddl
std
dec
push
jg
notl
add
mov
pop
push
and
ret
jge
lock
loop
mov
addr16
mov
adc
imul
sub
dec
cmp
rol
pop
fisttpl
test
mov
clc
sub
xor
adc
or
pop
movsb
test
ret
out
lcall
cmp
fstpl
add
pop
push
je
xchg
cmp
into
bnd
adc
adc
test
orl
jnp
rcll
enter
shlb
jno
testl
negb
je
mov
mov
and
lret
outsb
xor
lds
dec
mov
mov
inc
hlt
in
shrl
cmp
adc
jne
ret
push
xor
cmc
or
inc
leave
in
rorb
mov
jecxz
cmpsl
mov
das
or
mov
out
mov
dec
sub
sub
inc
lret
mov
mov
mov
push
push
ror
mov
cmpsl
push
mov
stos
fsubrp
out
daa
jns
mov
add
pop
arpl
xchg
xor
outsl
cmp
ja
adc
add
and
insb
xchg
xchg
sbb
push
sbb
fcompl
andb
or
mov
adc
popa
xchg
cmp
push
pop
outsb
dec
fcoms
imulb
push
nop
imul
xchg
lods
cmp
sub
ja
lahf
clc
sub
pop
cmc
jmpw
add
fs
dec
addr16
cmp
push
mov
nop
mov
push
shrl
leave
push
insl
jo
lar
in
gs
adc
jb
sub
mov
int3
insb
xor
mov
out
mov
aad
mov
dec
cmp
push
push
add
xlat
pusha
and
add
xor
rolb
add
shrl
std
sbb
sbb
stos
push
mov
fistl
stos
das
cmp
pop
adc
jmp
pusha
aam
mov
lret
add
xchg
sbb
dec
cmpl
test
jno
xor
xchg
sub
xchg
imul
std
push
out
dec
push
aas
inc
jecxz
lods
cmp
dec
push
jb
addr16
repz
out
iret
shl
pop
sub
cmc
inc
or
fcmovnu
cmp
test
push
inc
cltd
pushf
sti
lret
pop
std
xchg
mov
mov
adcb
aam
cmp
dec
jae
mov
adc
mov
rcl
sbb
insl
inc
lret
mov
out
inc
dec
out
xchg
push
sbbb
mov
jmp
inc
andl
jp
jp
aaa
ljmp
mov
dec
out
sahf
pop
es
fisubrl
push
push
sbb
sti
nop
adcb
pop
inc
or
add
pop
sbb
in
inc
mov
mov
mov
adc
bnd
mov
arpl
push
jecxz
xchg
cmp
in
sub
mov
stos
push
hlt
push
sbb
pusha
aas
test
adc
mov
daa
stc
cld
fs
fldt
sub
nop
inc
fs
dec
push
jo
and
sub
cmp
dec
loope
jmp
mov
mov
push
jae
lret
lret
jmp
or
cmp
lea
cld
pop
stos
xor
clc
int3
jns
mov
jae
adc
dec
or
inc
push
xchg
dec
into
sub
inc
sub
mov
sbb
scas
rcr
push
push
adc
cs
dec
adc
inc
lock
xchg
or
mov
and
xor
sub
inc
les
and
mov
add
and
cs
in
sub
jnp
mov
or
arpl
sbb
shrb
jne
inc
addr16
out
mov
ret
imulb
jge
cmpsb
adc
jne
sub
dec
adc
notb
daa
push
out
sbb
jns
pop
sub
fsubrs
fwait
or
xchg
cmc
repnz
ret
test
lahf
andb
inc
or
mov
mov
push
lods
dec
jbe
push
outsl
das
lea
or
fmul
jmp
cmpsl
cltd
aas
jge
cmpsb
sub
jp
pushf
jo
jno
pop
lods
xor
and
mul
test
lods
inc
loope
cmpsl
xchg
or
int3
movq
jmp
mov
xchg
mov
cmpsl
mov
imul
mov
scas
daa
pusha
inc
andb
in
cmp
adc
cmp
cmc
scas
and
faddl
sub
orb
outsb
xor
int3
imul
and
mov
in
pop
inc
xor
pop
sub
add
fcmovb
test
jg
jo
enter
inc
adc
pop
imul
mov
add
push
ss
push
fstps
aam
test
fstpt
sub
das
ljmp
jne
sahf
fnstcw
dec
jo
js
nop
mov
iret
aad
cwtl
rcrb
mov
dec
aam
lock
imul
pushf
xorb
cmp
sbb
mov
cs
cmp
incb
lods
inc
sub
incl
dec
xchg
and
je
dec
jmp
push
shl
sub
and
and
cli
cmp
test
adc
and
mov
lret
xchg
in
and
lcall
mov
xor
lds
shufps
sbb
sub
push
pop
data16
notb
nop
mov
out
mov
cmpl
push
mov
inc
loope
cwtl
inc
pop
mov
cli
cmp
ja
jns
lret
sub
loop
stc
mov
gs
imul
jecxz
sbb
and
pop
inc
fisubs
xchg
add
adc
out
add
sub
xchg
jp
ret
out
mov
sub
scas
imul
out
rorb
pop
inc
mov
insb
test
push
dec
inc
shll
testl
bound
mov
fmulp
cs
mov
lahf
xchg
in
popa
fsubs
fbld
jge
rorb
fidivs
xchg
mov
das
add
mov
push
ret
stos
out
xor
sub
adc
shll
push
jp
test
es
iret
cmc
sbb
imul
xchg
pop
aas
jno
lahf
mov
rorb
jbe
or
pop
add
jno
into
push
adc
inc
dec
sahf
cmovae
jp
imul
mov
imul
aas
or
jo
inc
jge
cmp
mov
cli
push
cmpsl
jmp
push
outsb
loope
daa
or
scas
fstps
mov
inc
push
loope
loope
test
mov
dec
pop
cmpsb
loop
and
push
imul
ja
jg
dec
or
stc
in
push
or
mov
mov
enter
xchg
cld
stos
and
orl
inc
les
jne
popa
or
sub
pop
ss
rol
dec
pop
add
xchg
inc
loope
testb
mov
fs
adc
out
xchg
or
popf
fnstcw
fistl
sbb
jge
imul
mov
in
sti
mov
push
test
ficompl
sub
leave
bound
xchg
or
sub
push
push
fdivrl
outsl
idivb
jbe
and
adc
neg
decl
and
testl
cmpsb
sbb
aad
stc
fwait
inc
sti
xlat
aas
je
mov
dec
pop
cmp
mov
inc
add
lahf
jbe
rcr
ss
xlat
int
adc
rcl
cld
sti
nop
inc
clc
mov
out
test
mov
jbe
push
cs
ret
mulps
xchg
add
nop
or
xorb
clc
xor
dec
mov
dec
pop
imul
bnd
sub
scas
insl
jbe
sti
addb
jp
and
ljmp
popf
fsub
jno
mov
sub
mov
push
pop
sbb
bswap
sub
imul
decb
out
pop
and
cs
out
lret
std
push
sbb
repz
jbe
inc
fwait
and
mov
aaa
fmuls
sbb
pop
test
xchg
dec
fstl
pop
ja
or
test
ja
mov
lods
scas
jnp
out
lds
push
dec
xchg
lds
movsb
and
push
aad
sub
push
push
xchg
pop
jae
cwtl
cmp
cmc
push
lods
cmp
push
sahf
sub
inc
mov
pop
aad
mov
jle
push
aam
mov
mov
and
shr
lds
push
mov
icebp
push
xchg
daa
jmp
xchg
dec
popa
mov
ljmp
dec
inc
imul
add
js
mov
iret
dec
xor
lea
lret
jle
fwait
mov
ficompl
cli
and
and
push
jl
out
push
jnp
adc
pop
sub
xor
mov
and
dec
pop
jecxz
rcrb
jno
cmp
sbb
in
aad
imull
mov
hlt
add
mov
dec
jl
fnsave
test
jle
dec
punpckhbw
sahf
insb
lea
clc
or
or
fcmovbe
push
mov
lahf
pop
and
stos
pop
dec
stos
sbb
sti
test
call
subb
pushf
jecxz
sub
xchg
xchg
test
jl
dec
faddl
xchg
mov
jnp
or
shl
inc
scas
shrl
xchg
sbb
jp
sbb
fimull
out
into
imul
cmpsb
add
cmp
mov
pop
imul
mov
mov
loope
aad
lods
jge
jmp
push
ljmp
lds
mov
outsb
xchg
xchg
jl
loop
sub
roll
sbb
or
adc
fidivs
sub
xchg
out
xchg
fcmovb
mov
sti
in
into
setnp
pop
mov
xor
jnp
notl
cmpsb
xchg
sbb
jle
mov
outsb
jnp
xlat
cmp
arpl
mov
cmpsl
cmp
jno
mov
inc
cmp
stos
fstpt
fidivrl
sbb
cld
push
int3
xor
out
xchg
andl
leave
outsl
test
in
fldcw
ror
in
out
jge
es
idiv
inc
fldcw
movl
add
cmp
repnz
divl
pop
push
or
xor
jne
xchg
sub
std
dec
xchg
push
es
jno
push
stos
ljmp
sbb
mov
adc
sbb
test
data16
out
add
call
xchg
scas
jecxz
push
cmp
inc
enter
jo
dec
out
cltd
pop
inc
mov
cltd
loop
xorb
out
mov
sbb
push
dec
pop
inc
push
xchg
push
xlat
pop
xor
ss
mov
arpl
test
stos
xchg
sbb
inc
aad
xchg
sub
lock
inc
add
xor
das
mov
mov
xchg
or
rcrl
or
fwait
ss
popa
and
jmp
or
shll
lcall
inc
mov
pop
or
loopne
ja
out
lea
daa
mov
mov
pop
xor
fimull
cld
sbb
mov
stos
jb
mov
mov
adc
push
lret
nop
mov
and
sbb
dec
scas
pop
stc
aam
mov
shlb
dec
xorl
loope
fidivrs
sub
aas
movb
xchg
pop
cld
sbb
ja
stos
lds
push
inc
ret
hlt
sbb
pop
aad
pushf
nop
scas
cmpl
clc
xchg
inc
push
dec
pop
negb
and
cmp
mov
decl
or
push
adc
clc
movsl
push
pop
js
sti
in
dec
add
lahf
add
dec
jo
jecxz
leave
mov
int3
insl
addr16
sbb
bound
ljmp
adc
das
je
mov
adc
sti
bound
mov
popa
repz
push
sub
adc
iret
test
scas
jns
mov
std
test
adc
jbe
rcrl
repz
je
daa
sub
push
lea
orl
or
mov
push
movl
cmp
inc
outsb
in
bound
jecxz
push
adc
and
icebp
add
xor
adc
sti
shll
mov
mov
push
dec
icebp
sti
adc
aas
jecxz
ss
mov
cmp
inc
jecxz
je
mov
sbb
xchg
and
dec
scas
je
or
mov
or
add
adc
mov
lret
shrb
addr16
adc
das
int
mov
xchg
sbb
outsb
adc
sbb
sbb
clc
shll
aaa
and
lret
clc
pop
mov
notb
repnz
std
in
in
in
jecxz
repz
cmovl
push
push
movsb
xor
hlt
adc
fcompl
pop
xchg
mov
sub
es
mov
lahf
jae
fmul
adc
jo
faddl
pushf
pop
stos
pop
test
ja
ret
inc
data16
hlt
outsl
adc
lret
push
insl
pop
sub
lock
arpl
add
push
pop
mov
adc
fisubrs
adc
mov
jmp
add
jmp
testb
cmp
cmpsb
lret
jmp
test
mov
aas
mov
out
mov
mov
inc
xor
mov
push
imul
imul
sbb
lea
int
jmp
jl
lret
sub
mov
lcall
dec
negb
popf
inc
xor
xlat
cli
mov
dec
dec
xchg
push
cmpsl
loop
dec
sub
lods
jmp
ror
aas
mov
in
adc
aam
inc
les
or
pop
subl
sbb
xor
rorb
ss
pop
mov
push
mov
ja
popa
gs
adc
iret
jo
rcll
add
xchg
stos
jbe
jg
lcall
jnp
jge
lods
xor
dec
ja
int3
pop
mov
imull
leave
mov
insl
imul
or
lcall
gs
rorb
or
mov
mov
and
adc
in
sub
jge
pusha
add
mov
loope
xor
add
das
jne
xor
push
es
gs
hlt
cmpl
pop
add
dec
jl
add
and
push
ret
adc
xchg
shrl
sub
inc
cmp
lods
lock
or
dec
pop
adc
fwait
push
or
adc
jl
repz
pop
pop
mov
xchg
es
or
fstpl
shlb
sbb
inc
adc
xchg
adc
xchg
imul
scas
or
pop
imul
xchg
push
fmuls
stos
cmp
or
pop
dec
inc
lds
nop
jp
push
bound
test
cmp
xlat
imul
mov
sti
xchg
fwait
stos
test
xchg
movsb
loope
or
mov
cmc
xor
push
lahf
adc
ret
xor
icebp
add
fidivrs
xchg
scas
repz
push
cld
xor
test
or
aam
mov
orl
cmp
ds
iret
rclb
push
pop
xchg
xchg
xor
xchg
loope
mov
sbb
and
scas
jp
cld
pop
and
arpl
movq
int
mov
aam
pop
adc
mov
cmpsl
inc
lea
inc
xor
cmp
pop
push
inc
dec
out
mov
sbbl
xchg
shl
mov
cmp
lret
insb
fcos
mov
dec
popa
mov
pop
pop
cmp
push
push
mov
sbb
lret
out
dec
imul
into
inc
adc
jnp
push
mov
xchg
cmpsb
stos
jge
xchg
xchg
mov
imul
fisubrl
xor
push
inc
push
loope
les
insl
pop
push
and
and
xlat
cmp
jo
ljmp
aas
pop
inc
aas
inc
sub
fidivrs
jecxz
jo
dec
cmp
sub
pop
adc
push
add
jnp
into
scas
std
push
nop
add
pop
popa
cmp
dec
adc
ret
mov
add
cmp
popa
mov
orb
sti
push
and
adc
sub
inc
xor
or
sbb
jae
cmpsb
cli
fldt
dec
shlb
lcall
push
dec
fidivl
pushf
scas
pop
in
fnsave
or
aam
sbb
repz
aad
scas
icebp
mov
js
test
lods
mov
repnz
jb
inc
push
dec
test
popa
das
mov
push
subl
xchg
or
mov
jp
mov
mov
hlt
aam
dec
cmp
xchg
into
addr16
aam
xchg
mov
test
mov
aam
sbb
fcmovu
test
jmp
stc
sub
int3
dec
pop
jecxz
stos
mov
lods
out
lret
stos
mov
jnp
ret
mov
mov
rorl
jbe
call
mov
inc
or
scas
mov
aaa
rorl
jae
jg
pop
mov
sbb
fidivs
sub
or
mov
jg
xor
pop
push
jg
or
cs
pop
ds
fs
sub
fisubl
bound
cmc
lea
mov
dec
clc
in
jp
ficoms
test
push
push
mov
dec
lret
fmul
pusha
gs
jl
aaa
add
scas
adc
lcall
outsb
cld
das
xchg
sahf
lds
mov
inc
sub
orb
jns
jmp
jne
sub
cli
or
inc
and
testb
data16
push
imul
inc
lcall
cmpb
sti
shl
lods
sub
xchg
adc
lods
aam
movl
les
sbb
test
addr16
rorb
lods
jge
jnp
push
jnp
lds
sti
repz
inc
pop
arpl
push
addr16
jns
daa
int3
xchg
and
mov
mov
xchg
les
mov
fwait
std
add
enter
test
sbb
xchg
in
xlat
cwtl
jae
adc
addr16
cmpsb
sar
es
fdivl
mov
adc
shlb
repnz
mov
mov
shl
dec
inc
das
sub
push
ljmp
jge
mov
inc
adc
inc
cs
jp
jmp
xor
xor
das
rol
lods
lods
pop
jmp
xchg
push
mov
push
sbb
test
das
inc
ss
lret
mov
stc
lret
mov
scas
in
outsl
push
in
sub
push
jb
inc
cmp
dec
mov
add
mov
mov
lcall
int3
jp
adc
stos
dec
sbb
lods
cli
xchg
jl
icebp
push
xor
jo
fistl
repz
dec
rorb
fisubs
inc
sbb
jae
hlt
call
ljmp
pop
jge
fstps
insl
sbb
cs
jg
push
sbb
movsl
xor
cmp
rcll
pop
mov
mov
adc
mov
roll
cmp
test
lahf
mov
or
sti
insl
or
out
adc
push
imul
gs
jbe
mov
lds
daa
add
hlt
sub
mov
data16
ss
repz
add
jmp
lods
mov
mov
popa
cwtl
sub
nop
test
jbe
cs
add
jg
aam
inc
xor
sbb
out
fcmovnb
in
add
add
mov
jo
jnp
or
jp
imul
popa
mov
mov
push
lods
jmp
or
and
lcall
insb
arpl
adcl
mov
subb
sub
pop
push
mov
cmpsl
push
push
fiadds
pop
mov
stos
and
push
adc
sbbl
outsb
or
pop
pop
jge
dec
ljmp
pushf
xor
ss
shll
fbld
dec
and
fisubrl
jge
sti
adc
jo
lods
mov
push
sarl
push
cmp
push
std
fbld
pop
push
dec
sub
les
in
push
stos
xor
in
cwtl
icebp
gs
outsb
inc
adc
jbe
cmpsb
cld
test
std
arpl
and
pop
cmp
insl
lea
xor
aam
xchg
inc
jne
push
sub
add
aam
or
lret
or
sbb
insl
mov
mov
cmp
mov
imul
enter
xchg
or
jb
mov
ret
add
jmp
insl
xor
call
sbb
push
ljmp
loop
mov
xchg
icebp
loope
jo
xor
out
outsb
add
ljmp
mov
sahf
das
inc
scas
xchg
jle
aam
inc
daa
lds
push
sbb
xchg
out
mov
push
and
xchg
movsb
pusha
aad
push
cwtl
cmp
popf
ljmp
lahf
vmovddup
icebp
je
add
test
mov
cltd
gs
jge
in
sar
lea
stos
adc
push
sti
mov
fistl
inc
incl
jb
addr16
leave
loope
pop
mov
push
xor
pop
sub
sub
es
jne
movsl
fidivrs
xor
sti
fs
pop
mov
popa
jne
and
cli
in
or
das
jae
or
imul
dec
movsb
push
das
ficoml
ret
mov
jbe
scas
adc
adc
call
push
dec
es
adc
test
lock
mov
cmp
pop
mov
stos
sub
xor
outsl
adc
push
popa
xchg
pop
clc
inc
jmp
movsl
cs
sbb
and
popa
aaa
xchg
xchg
jo
outsb
mov
cltd
addr16
or
outsb
movsl
mov
pop
ja
mov
out
or
out
ss
cmp
and
mov
pushl
push
fcmovnu
lds
push
pop
orl
stos
shl
mov
jp
mov
pop
in
jb
ds
cmp
and
xor
xchg
fmull
dec
or
ds
mov
pop
pop
adc
mov
mov
cmpsb
jg
insb
cmpsb
jmp
pushf
xchg
mov
scas
push
sbb
les
insl
jb
inc
adc
addl
xor
xchg
and
lock
sahf
or
mov
negl
sbb
fists
imul
mov
push
pop
xchg
mov
in
xor
cs
repz
inc
rcr
cli
aam
xchg
sub
xchg
dec
in
add
or
sbb
sub
jne
jns
frstor
sub
inc
cmp
or
fidivrl
dec
push
fldenv
nop
jae
jo
adc
nop
xchg
call
outsb
lock
push
test
sbb
icebp
jmp
xor
ljmp
pop
addr16
loop
mov
sahf
jbe
inc
fsub
mov
mov
lods
je
add
lahf
lret
jne
mov
lock
fistpl
loopne
jmp
sbb
xor
testl
lcall
xchg
mov
int
jmp
cs
cmp
pop
mov
push
xchg
pop
mov
sub
xchg
dec
lret
xchg
fyl2x
and
leave
dec
cmpsb
inc
subb
cs
mov
adc
or
jb
xchg
rcr
mov
cmp
xorb
jne
cmp
arpl
add
and
mov
lds
pushf
add
add
and
mov
pop
movsl
add
out
fmuls
mov
or
dec
dec
or
inc
mov
hlt
cmpsb
imul
cmovl
ljmp
mov
fsubr
jnp
insb
push
xchg
repz
pushf
loope
and
mov
icebp
loopne
mov
js
and
notl
data16
cltd
mov
out
add
test
mov
dec
sub
out
js
nop
jg
sub
ret
sub
sbb
jbe
and
mov
xor
and
mov
or
push
fs
add
addl
xor
mov
jbe
cmp
inc
stos
call
fwait
pusha
pop
cmpb
push
cmp
jo
jp
outsl
push
out
out
test
mov
mov
push
xchg
mov
adc
mov
cmp
push
aam
out
insl
stc
adc
gs
push
lea
data16
mov
cmp
js
xchg
jmp
imul
ret
jns
sub
std
cmp
repnz
push
mov
es
pop
stos
clc
stos
fisttps
dec
xor
into
xor
and
iret
inc
cmpsb
clc
in
sbb
and
cmp
aad
sti
add
inc
fsts
jecxz
add
sub
pop
testb
xchg
lods
adc
push
sbb
inc
cmp
sub
jl
and
cmpsl
xchg
sub
and
fisttps
add
cmp
neg
mov
leave
xchg
sahf
pop
scas
cltd
cmp
lret
add
aaa
nop
push
xlat
adc
xchg
out
in
pop
mov
lcall
mov
loop
push
or
pop
jae
stos
icebp
xor
js
movsl
fisubs
mov
fists
mov
cmpl
push
sarl
mov
jge
dec
adc
sub
cmc
popf
stos
adc
add
inc
repnz
sub
loope
or
pop
ret
cmp
pop
dec
sbb
sbb
sbb
adc
in
repnz
jl
push
mov
into
push
es
jne
inc
ret
nop
or
sub
js
mov
ljmp
sub
xchg
and
mov
cwtl
jecxz
std
sub
inc
and
cmp
out
and
pop
ja
inc
es
push
mov
incb
pop
mov
movsl
es
adc
pop
sbb
int
mov
pop
xchg
xchg
mov
sarb
decb
dec
gs
repnz
imul
sahf
add
sar
push
hlt
dec
or
lahf
jp
and
xchg
aad
jns
cmp
jb
pop
dec
inc
hlt
int3
sub
aaa
adc
mov
dec
sub
jmp
insb
sarl
jnp
jb
fistpll
dec
push
adc
inc
in
xor
stos
jb
adcb
sub
popa
cmpsl
int3
xchg
repz
rcrl
sub
inc
add
aam
bound
in
mov
test
call
adc
scas
aas
loopne
shlb
inc
and
daa
adcb
mov
mov
push
imul
or
mov
daa
adc
push
out
stc
int3
sub
aas
sbb
aam
lcall
mov
mov
add
pop
inc
pop
inc
stc
in
and
shrb
jne
sahf
lea
es
test
pop
mov
mov
sub
jge
int
fistpl
lods
repnz
pop
adc
xor
jecxz
shlb
push
enter
pop
or
jge
pop
inc
fdivrl
mov
loop
pop
das
and
imul
inc
mov
imul
cwtl
cltd
aas
jle
jge
aam
pusha
sub
mov
mov
mov
xor
sti
test
mov
xor
nop
sub
push
ret
sub
jmp
fldenv
inc
push
pop
popf
or
pop
in
lcall
in
sub
and
incb
inc
pop
aad
pop
pop
jle
ret
push
mov
sub
mov
sbb
sub
fcoms
or
or
mov
push
sahf
mov
out
mov
scas
lock
and
addr16
lds
lahf
and
pusha
cmp
mov
cmpsb
mov
push
outsl
mov
pusha
xor
imul
inc
add
ret
jge
dec
pop
cmp
pop
dec
pop
repz
bound
testb
faddl
lock
jge
sbb
cmp
pop
int
push
or
lods
shrb
loopne
loopne
jmp
mov
xor
ret
imul
aam
xchg
aas
sub
daa
repz
and
or
xlat
push
lahf
ss
test
scas
pop
push
ret
sub
int
jmp
mov
data16
adc
push
or
cmp
adc
pop
push
and
push
mov
addl
push
and
clc
dec
sub
cmp
jno
push
pushf
jno
xchg
sub
xchg
inc
loopne
inc
jbe
mov
jb
in
jg
insl
cmp
adc
lret
out
aas
test
and
sar
fstps
into
rcll
pop
lds
inc
enter
cmc
or
aad
add
mov
mov
sub
sub
enter
out
pop
sub
sbb
mov
add
pop
lahf
lret
addr16
cmp
mov
jns
arpl
cmc
dec
out
xor
sub
xchg
inc
pop
out
push
adc
out
lods
cmp
int3
icebp
jge
adc
fnstcw
xchg
lret
scas
mov
dec
and
pop
test
lret
rcl
outsb
popl
pop
sbb
popa
ja
xchg
lea
mov
dec
lea
aam
cli
popa
testb
xchg
leave
mov
in
repz
jmp
or
mov
adc
imul
int3
shll
adc
daa
pop
lock
jmp
lods
test
dec
in
fcoms
lret
popf
ret
sub
data16
fwait
push
pop
push
inc
dec
rcrb
push
pushf
out
out
lock
pop
sbb
sti
and
xlat
iret
addl
jecxz
and
and
into
or
adc
mov
cmp
clc
inc
imul
cmpsb
ljmp
lcall
cwtl
and
and
int3
push
mov
in
xchg
push
xor
pop
call
sbb
cltd
sbbl
inc
psadbw
xor
and
jp
xchg
dec
and
cmp
js
dec
aas
outsl
or
cs
dec
cltd
push
mov
or
bound
push
hlt
div
aam
lods
arpl
xchg
in
stos
ficompl
aaa
subb
idivb
push
popf
int
cli
cmpsl
pushf
mov
cmpsl
lret
xor
sbb
pop
xchg
mov
lods
in
dec
cld
andb
xchg
jmp
repz
push
sub
cmp
lds
mov
cwtl
cmpsl
pop
cmpsl
aaa
xchg
xor
faddl
ret
push
mov
xchg
add
mov
out
add
jle
xchg
pop
sti
push
movsb
sub
xchg
shlb
lcall
xor
mov
xchg
adc
leave
popa
out
push
test
hlt
cs
xor
bound
not
test
inc
cltd
cli
push
adc
cld
in
xor
xor
loopne
test
ja
dec
mov
cmp
adc
push
movsb
adc
je
mov
fstpl
jns
add
mov
js
int
adc
int
jge
in
and
sbb
cmpsl
dec
lock
mov
jb
ror
fnsave
dec
js
add
imul
jo
push
cmc
das
or
repz
andl
sub
rolb
std
jno
aam
loop
adcb
mov
clc
mov
call
mov
push
pop
jecxz
xor
or
rolb
jno
mov
xchg
rcrb
dec
xchg
cmpsb
imul
sub
mov
imul
sub
scas
dec
mov
je
push
mov
add
lret
mov
sbb
daa
jo
mov
lret
outsb
rorl
pop
add
lcall
nop
jmp
or
pop
xorb
shrl
dec
dec
je
sahf
xchg
mov
lret
outsl
jge,pn
mov
or
addr16
repnz
pop
push
lret
adc
adc
sub
xchg
leave
dec
sbb
dec
or
out
mov
aad
lahf
aas
mov
dec
sub
adc
lea
int3
sbb
aas
js
sub
test
aam
adc
loopne
pop
hlt
mov
or
mov
out
push
dec
imul
or
ja
push
into
inc
popa
popa
push
jecxz
rolb
and
jg
or
inc
cmp
push
inc
mov
push
cmpsb
mov
test
pop
in
add
es
int3
sbb
push
lods
out
loopne
pop
rcl
sarl
mov
pop
fwait
in
decl
lcall
aaa
xor
add
mov
mov
es
xchg
mov
mov
gs
ja
je
imul
fistpl
les
lret
pushf
fistl
insl
dec
stos
xchg
lret
jp
stos
push
jb
pop
cmpsb
fidivrs
nop
push
daa
pushf
icebp
repz
enter
pop
fs
loope
ret
das
in
push
sahf
out
cli
call
cmpsl
and
movsl
dec
push
jmp
inc
dec
sbb
cmp
ret
adc
mov
sti
xor
mov
pop
jge
dec
mov
pop
mov
xchg
les
xchg
bound
cmc
jmp
cmc
popf
popa
jne
rcrb
adc
dec
and
mov
fimuls
mov
imul
repz
ret
ja
push
sbb
inc
xlat
rcll
cmp
movsl
jecxz
fcom
add
dec
sub
popa
dec
incb
imul
sub
mov
out
fs
dec
pop
inc
cli
and
test
into
test
leave
push
mov
sub
in
mov
arpl
and
pop
outsb
and
fwait
scas
pop
mov
imul
xchg
xchg
push
out
cs
repnz
cli
rclb
cli
pop
mov
lea
ret
pop
pop
xchg
xor
jge
call
xchg
es
ret
adc
adc
orl
fisubl
push
mov
mov
mov
lods
arpl
mov
pop
in
mov
add
lods
lret
stos
aam
dec
rcrb
mov
out
cltd
lret
shrl
push
jge
cmc
fdivrs
cmc
in
sub
lea
adc
add
aam
int
lds
ss
or
sub
mov
sti
stos
std
outsl
out
adc
sahf
sub
leave
adc
out
test
fildll
insl
cli
mov
xchg
inc
jle
mov
mov
aad
mov
jmp
rcl
add
inc
jb
dec
push
dec
fcmovbe
lcall
mov
add
cmp
or
xchg
fidivs
mov
fcoms
and
and
in
mov
jae
insl
xor
sub
push
iret
scas
mov
push
inc
mov
push
lret
rorb
dec
roll
and
add
cmpsl
sbb
sub
pop
movsl
cltd
inc
xchg
ds
in
and
adc
fldl
mov
push
out
outsl
into
les
in
out
test
insl
mov
push
stc
xchg
dec
pop
movsl
popa
adc
inc
gs
shll
in
pop
add
and
fs
mov
push
ljmp
insl
pusha
mov
aad
outsb
rol
cltd
adc
jmp
out
inc
stc
jecxz
mov
cli
jecxz
movl
xchg
aas
scas
movsb
add
jo
scas
aas
out
and
stos
mov
lcall
cmpsb
lcall
mov
out
mov
and
mov
jecxz
iret
fbld
mov
dec
cltd
loop
sbb
mov
aaa
icebp
fwait
cmp
rorb
lret
enter
ret
jmp
nop
addr16
in
sbb
xchg
in
cmp
dec
jge
daa
in
fsubs
iret
adc
clc
pop
xchg
pop
fnstsw
negl
xor
xchg
aam
loopne
jnp
jl
aaa
mov
ljmp
mov
push
jne
and
fisttpl
lret
aas
int
loopw
shlb
mov
mov
aaa
shll
mov
add
xor
bound
daa
dec
outsb
mov
jno
in
xor
orl
dec
loope
movsb
jge
fistpll
sub
fstl
imul
dec
pop
push
mov
add
in
loopne
call
fcoml
jbe
aad
push
imul
sbb
jno
adc
and
mov
cmp
sub
cs
out
pop
dec
and
dec
mov
cld
adc
aam
inc
add
sbb
test
int
ret
xor
lcall
frstors
pop
push
or
dec
ret
push
out
mov
rorl
test
ljmp
lock
pop
roll
push
in
subb
fstpt
or
popf
js
inc
sarb
mov
stc
pop
dec
sbb
jae
or
std
repz
popl
and
sub
lret
mov
inc
jbe
fstpl
sets
rcl
jecxz
push
sub
xor
mov
jge
rcll
sbb
int3
les
sbb
adc
shll
ljmp
push
jno
test
pop
sub
lret
shrb
cltd
enter
jae
jne
pusha
jmp
std
sbb
mov
push
jecxz
scas
adc
mov
mov
xorb
add
cwtl
outsb
stos
add
lods
mov
push
dec
sbb
enter
shlb
arpl
sub
or
loopne
daa
jns
mov
xchg
fwait
popf
cmpb
sbb
scas
jmp
push
paddsw
cld
fcmovne
icebp
jne
std
or
orb
stos
rcrl
out
lods
fnstsw
sub
cmp
or
sahf
xor
stos
xchg
sub
dec
and
or
loop
loop
mov
mov
cld
shlb
mov
push
sbb
push
aaa
xchg
jmp
push
cmp
sbb
outsb
pop
sarl
rolb
and
in
push
pop
sub
pop
push
mov
mov
sbb
in
insb
mov
je
shlb
push
in
hlt
and
fiadds
nop
mov
jle
sbb
test
or
js
mov
movsl
sbb
adc
mov
adc
sub
mov
cmp
adc
repnz
push
out
out
test
pop
test
jge
mov
addr16
out
out
mov
scas
loopne
in
jb
sbb
int
shl
mov
mov
insw
shlb
push
pop
push
or
out
dec
sbbb
mov
pop
inc
je
mov
pop
inc
mov
xlat
ret
sub
xchg
fs
lcall
pop
and
fisttpll
outsl
cli
add
mov
fwait
mov
jnp
cmc
fsts
jb
xchg
xor
cld
sbb
xchg
mov
push
dec
push
imul
mov
in
cmp
or
in
xchg
stc
cmp
adc
inc
out
pop
imul
inc
inc
jl
dec
lcall
ss
xor
movsb
inc
push
shlb
xchg
mulb
or
pop
cmp
loopne
mov
xchg
ds
pop
lock
push
jb
fdivrp
sbb
jnp
shrb
mov
or
dec
fst
jns
shr
lock
pop
es
cwtl
gs
mov
fs
in
mov
cltd
jp
adc
lahf
inc
insb
scas
pop
xchg
sub
mov
mov
push
xor
jp
test
sbb
inc
shll
xchg
hlt
outsb
push
aam
sub
xchg
clc
push
or
push
xchg
or
lods
lret
out
pop
jae
icebp
ret
add
cmovp
out
inc
add
arpl
cltd
and
mov
pop
mov
fimull
pop
rolb
in
xchg
jo
sub
or
push
sbb
push
lret
and
inc
and
sub
mov
iret
int
adc
sub
repnz
inc
fdivl
leave
jb
dec
negl
jns
ret
clc
sbb
nop
aaa
mov
je
mov
adcl
aad
push
and
ja
out
sub
mov
push
jae
cmp
cmp
xchg
sbb
dec
jns
and
movsb
push
mov
push
dec
das
mov
jle
lds
jbe
scas
imul
inc
adc
jle
shrb
out
xchg
mov
jae
repnz
call
and
popa
or
adc
decb
addb
inc
mov
lcall
sbb
nop
sbbb
adc
cmp
gs
daa
xor
dec
mov
adc
and
jnp
xchg
loope
push
xor
lahf
pop
mov
inc
icebp
aas
cmc
fistps
xchg
repnz
mov
shl
push
push
sub
int3
nop
cli
subl
js
test
imul
jo
adc
adc
mov
in
fsubrs
nop
cltd
push
clc
cmpsl
icebp
inc
mov
jmp
in
sub
in
inc
or
adc
push
dec
clc
jp
call
dec
pop
sbb
loope
div
mov
jp
repz
adc
xor
dec
mov
push
or
mov
lock
daa
xchg
and
data16
cmp
lret
or
fnsave
xlat
adc
add
inc
lcall
sti
aam
jno
jae
jp
xchg
sbb
fldl
lock
mov
jbe
cmc
mov
pushf
or
fcoml
mov
pop
out
nop
jge
pop
scas
fbld
adc
enter
sbbl
push
call
mov
push
dec
js
mov
pop
jg
out
xor
stc
das
into
lcall
outsl
jge
daa
fsubs
lock
and
sti
and
push
cmp
mov
dec
jmp
push
mov
sbb
push
fsts
sub
popf
stc
outsb
popf
add
add
hlt
stos
stos
sbb
inc
jns
lea
insb
dec
out
inc
mov
pop
add
add
mov
jns
pop
rorb
mov
aam
outsl
cltd
pop
pop
pushf
xor
in
jg
sbb
movsl
jb
inc
stos
gs
push
and
add
add
mov
sahf
jmp
or
cmp
enter
stos
movsl
pop
xchg
cmp
je
imul
mov
add
bound
outsl
xor
jl
mov
pop
daa
jne
xchg
or
pop
sbb
dec
in
hlt
add
mov
leave
pushf
fld
adc
sbb
adc
ret
fisubs
dec
jno
inc
aaa
cltd
cltd
jb
adc
je
lock
sbb
stos
sti
cmp
pop
inc
outsb
daa
out
and
push
aaa
bound
clc
add
shrb
dec
lret
and
sub
mov
cltd
sbb
mov
mov
inc
lcall
sbb
insl
mov
mov
dec
push
cmp
xchg
push
xchg
cld
fdiv
pop
icebp
scas
xchg
add
outsl
jp
mov
pushf
dec
dec
and
fwait
push
das
cmp
insl
sub
popa
cmp
ss
xor
xor
mov
sahf
js
or
push
inc
ret
rcr
mov
icebp
jb
fcoms
cmp
mov
stos
movsb
test
or
lahf
les
test
outsb
dec
xchg
aam
push
daa
pop
imul
mov
xchg
xchg
sub
int3
ljmp
js
pop
addb
mov
fldl
incb
sub
rcrb
jg
mov
es
mov
jg
jmp
popf
ja
adc
sbb
into
clc
das
sub
roll
sub
negb
in
int
xchg
lret
push
rcll
andl
sub
jo
negl
ds
adc
and
rclb
mov
mov
sbb
mov
shll
enter
in
mov
push
pop
es
mov
mov
std
xchg
mov
and
xor
lcall
lea
aas
div
jne
sub
stos
cmpsb
add
outsl
test
xacquire
shrl
inc
shll
sbb
loopne
sbb
jb
push
fmull
out
std
fcomps
mov
gs
mov
xor
mov
lock
jbe
and
mov
enter
subb
pop
xchg
aam
add
mov
stos
xchg
push
push
adc
das
jg
mov
in
clc
mov
repnz
and
lock
or
pextrw
mov
inc
mov
into
adc
cmp
insb
imul
movsl
pop
jo
into
or
aad
push
das
push
push
add
movsl
jmp
lret
nop
push
shrb
sbb
pusha
movsb
cs
loope
jp
cmp
jae
ljmp
daa
out
sbb
jmp
add
in
dec
dec
adc
dec
test
dec
xor
mov
loopne
je
adc
imul
lods
aad
in
jns
mov
mov
stos
mov
stc
es
jbe
xchg
mov
mov
insl
lods
xchg
fsts
pop
jns
mov
fsubrs
mov
or
mov
cmp
cmp
xor
and
pop
cmp
jp
mov
test
add
int3
inc
xchg
or
aaa
mov
cmp
xor
pop
and
cld
cld
lea
pop
into
xlat
cmpsb
mov
xor
imul
jnp
mov
mov
data16
test
out
iret
pusha
mov
mov
lret
cltd
push
add
jge
add
pop
scas
push
fnsave
orb
lods
dec
stc
rcr
sbb
imul
jmp
push
sbb
or
adc
add
insb
icebp
sub
inc
mov
cs
mov
shr
test
pop
roll
push
in
and
addr16
and
js
jg
xchg
xor
imul
outsl
stc
ljmp
mov
push
mov
mov
adc
sbb
loope
ja
stos
outsb
insb
push
into
sub
out
push
push
mov
and
xchg
fiaddl
stos
enter
jmp
addl
push
insl
fcos
fwait
and
mov
sbb
out
adc
cmp
cld
dec
mov
cmc
das
mov
mov
sub
test
mov
push
aam
inc
fcomps
or
push
mov
mov
cmp
pop
cmp
in
xor
aad
inc
int
cmp
xor
in
mov
xor
add
sub
sbb
sub
bound
add
nop
cmp
nop
sbb
push
stos
cs
add
add
test
and
icebp
sbb
out
inc
inc
pusha
sbb
jge
insl
inc
test
dec
add
mov
imul
mov
add
subl
adc
test
push
or
sub
cs
push
aas
xchg
mov
mov
sbb
and
adc
and
sahf
fldcw
mov
pop
mov
rorb
int
cmc
jecxz
shll
add
xor
cltd
sub
jno
add
push
mov
push
and
scas
adc
inc
les
push
push
inc
xor
and
pop
inc
pushf
jo
pop
lea
dec
xor
sahf
jb
fadds
imul
xchg
out
out
mov
mov
in
shrb
rclb
fcompl
int3
int3
mov
jne
bt
jbe
xlat
mov
dec
add
imulb
aam
rolb
adc
push
add
iret
jge
adc
push
sahf
push
adc
inc
jbe
and
mov
jno
jg
pop
enter
mov
mov
and
mov
xor
dec
lcall
jae
sarl
loopne
xchg
test
pop
pop
stos
sub
cmp
push
cmpsl
std
jne
arpl
pop
cmp
loop
add
adc
mov
xor
jmp
sub
xor
pop
sti
and
lods
mov
and
mov
jns
add
pop
or
jge
rcrl
les
insb
test
adc
clc
sub
pop
fstl
xor
fstpt
shrl
fcoms
mov
repz
ds
nop
xor
outsb
add
xor
movsb
xor
sahf
and
mov
or
fnstenv
and
jmp
mull
xchg
pop
fisttpll
lcall
and
cmp
add
jo
in
in
push
pop
or
mov
fs
aad
pop
sub
xor
dec
std
ror
rolb
inc
dec
push
in
pushf
adc
mov
cmc
xchg
lret
je
cmp
jbe
pop
daa
aaa
ficoms
jle
jl
and
xchg
inc
mov
inc
push
push
setne
xchg
int3
xchg
adc
inc
and
and
andl
cld
push
adc
scas
loope
int
mov
testl
test
pop
xchg
ffree
out
and
and
out
imul
adc
std
call
cmp
in
inc
sbb
les
pop
lret
les
shll
aam
out
jnp
movsl
cmc
aad
stos
in
jmp
sub
inc
or
xchg
sbb
jae
mov
push
pop
dec
push
insb
mul
pop
push
mov
adc
std
or
xor
pop
or
dec
loope
int
xor
fnsave
fiadds
xor
ljmp
adc
add
repnz
dec
inc
mov
mov
mov
int3
adc
pop
je
pop
sti
cmp
mov
adc
movsl
incl
xchg
pop
lcall
mov
jmp
inc
xchg
rcrb
ja
add
insb
mov
test
and
or
dec
mov
scas
pop
inc
and
pop
or
inc
sahf
add
push
pop
fstpt
or
mov
daa
jae
sub
iret
pop
popf
add
popw
std
clc
jecxz
mov
xchg
adc
push
sbb
or
cmc
mov
dec
jle
in
int3
sub
or
jbe
and
jb
sbb
ret
shl
adc
add
cmp
xchg
cltd
mov
test
sub
inc
sarl
lods
jl
adc
cltd
pusha
sbb
push
mov
inc
cmp
push
out
popf
add
lea
xor
out
enter
mov
fidivrs
sbb
mov
cwtl
mov
das
aas
in
pushf
js
jle
repz
pop
in
jl
movsb
adc
das
push
out
sahf
loope
test
rcr
mul
ds
add
mov
pop
mov
xlat
pop
decb
inc
mov
lahf
mov
cltd
or
int3
fidivrl
dec
sub
insb
stos
mov
xchg
push
ret
data16
xor
push
xchg
cli
xchg
pop
popa
pop
dec
and
cwtl
pop
xor
sub
and
in
pop
mov
xlat
push
arpl
mov
and
push
sub
daa
push
out
repnz
subl
lea
add
pop
xchg
jo
popa
je
mov
stc
movsl
jge
add
push
mov
jp
lock
dec
cmp
int
push
pop
fstpt
pop
dec
jmp
mov
pop
sub
inc
jbe
popf
stc
mov
fidivl
mov
mov
aaa
out
push
cmpsl
lea
lods
arpl
mov
xor
fimull
cmpsl
aam
or
stc
add
iret
and
mov
sbb
pop
lret
in
xor
aam
cmp
add
dec
mov
xor
js
mov
push
inc
out
sarl
xchg
cmc
int
jne
gs
mov
fimuls
xlat
add
xchg
popf
insb
shrb
push
lcall
test
je
add
outsl
mov
roll
push
pop
loopne
sub
test
pop
cmp
ret
hlt
mov
cmp
and
icebp
pusha
pop
int
mov
test
dec
and
mov
into
xchg
adc
and
sub
ret
insb
test
fisubs
lret
orb
mov
in
scas
xor
dec
andl
adc
out
sbb
and
xor
xchg
pop
popa
sti
fwait
xor
lret
xchg
adc
pop
test
stos
leave
jbe
out
iret
out
rclb
adc
enter
nop
aaa
mov
or
loope
fsts
scas
push
pop
fldl
jbe
movsb
jne
icebp
addr16
movsb
fldcw
cmp
sbb
sahf
arpl
add
leave
cmp
pop
loope
aaa
loop
mov
stos
or
lods
call
or
js
daa
in
clc
cmp
inc
dec
sub
leave
imul
xor
xchg
mov
lea
mov
add
mov
add
xchg
cmp
pop
sti
add
cmp
rorb
and
add
loope
scas
jecxz
mov
out
mov
hlt
dec
xchg
adc
loope
xchg
pop
mov
les
dec
aad
call
pop
data16
test
mov
xchg
adc
or
push
mov
xorl
imul
sbb
and
add
mov
jmp
jp
add
out
mov
cwtl
loopne
pop
iret
mov
push
lods
fdivrp
in
push
out
sbb
push
adc
int
fldcw
adc
cmp
xor
int3
sub
sbb
jo
add
and
adc
daa
cs
loopne
push
mov
shlb
jle
mov
xchg
cmp
jo
jmp
mov
xchg
rcl
fisubrs
xchg
pop
dec
loop
ret
bnd
dec
das
xor
mov
push
adc
add
fstps
cmp
sbb
mov
in
leave
iret
xchg
inc
sub
mov
adc
fcomi
xlat
jmp
xorl
push
movsl
or
mov
push
fdiv
add
sub
outsl
ficoms
cmp
fs
jge
in
cld
cmc
rcll
push
cmp
lcall
arpl
aas
dec
fdivp
lret
pop
xchg
xlat
adc
xor
xchg
data16
add
leave
xchg
jae
mov
dec
inc
push
lret
push
out
pop
cmpsl
lahf
mov
push
jecxz
and
adc
pop
jno
inc
sbb
jle
jns
lds
fisubrs
test
xor
pop
test
sti
jbe
add
xlat
in
rcrl
cmp
push
dec
rcrl
test
cmpsl
mov
jecxz
cmp
cmp
lret
mov
in
mov
add
mov
xchg
lods
out
cmc
jle
movsb
loop
loopne
cmpsb
and
adc
cmp
xlat
divb
sub
fistps
push
lock
and
into
pop
dec
pop
sahf
cmpsb
lock
es
daa
sub
sbb
push
add
ja
inc
dec
jle
pop
xchg
fstpt
jo
mov
and
mov
sbb
cs
repz
xor
jns
stc
test
nop
cmp
test
insl
pop
cmp
sub
dec
test
jb
mov
leave
out
nop
xchg
mov
jg
add
cmpsb
jp
sub
xor
popa
mov
sbb
sbb
mov
xor
mov
int
dec
push
lds
push
mov
std
sbb
jns
ficomps
lahf
lcall
div
test
sbb
jmp
xchg
outsl
cwtl
mov
adc
push
sbb
fwait
mov
bound
pop
xor
mov
out
mov
jns
xchg
xor
outsb
xor
movsl
xchg
js
idivl
mov
fcmovu
clc
and
rcrl
mov
inc
stos
clc
dec
add
mov
mov
mov
stos
stos
cmp
mov
push
mov
out
lcall
popa
out
mov
xchg
fldt
jae
mov
add
xchg
push
roll
pop
lcall
lods
imul
mov
cmp
fiadds
pop
fcoms
shl
lea
fstl
andl
jle
psubsw
insl
cmp
xor
lds
cwtl
sti
fucomi
or
in
cmp
jae
iret
sbb
sbb
test
cmpsb
inc
xor
push
ss
rcl
into
push
into
push
xchg
adc
fcomps
loope
add
dec
outsb
out
shll
dec
mov
adc
jle
pop
rcll
xor
gs
rcl
sti
pop
gs
jmp
scas
xor
pop
test
push
mov
mov
shlb
pop
jmp
clc
iret
fwait
jnp
adc
cli
mov
or
jl
clc
enter
pop
aam
mov
int
popl
add
mov
cmc
enter
out
data16
xor
push
xchg
or
sahf
adc
push
outsb
fwait
or
aas
ret
sbb
mov
push
data16
mov
pusha
mov
cli
mov
lods
mov
sub
pop
imul
add
iret
stc
inc
aaa
test
push
dec
xchg
mov
add
enter
sbb
jno
mov
push
xchg
cmpsl
ret
pusha
xor
repz
sbb
sbb
add
cltd
jecxz
cmc
adc
stc
fiaddl
pop
add
xor
push
aaa
dec
mov
pop
sbb
inc
sbb
jns
aam
andl
sub
fistl
out
lahf
inc
test
sbb
ja
in
les
xor
fucomip
bound
sti
insb
xlat
sbb
lock
mov
fcoms
xchg
mov
pop
mov
or
dec
pop
jmp
aaa
fistpl
inc
sub
subl
lea
mov
inc
addr16
add
das
mov
or
bts
out
jae
loopne
ret
mov
or
pop
mov
or
xchg
insb
int3
pop
push
mov
xchg
test
pop
in
sbb
popf
lea
mov
inc
pop
aad
push
stos
sahf
adc
xor
xor
rorl
and
lahf
out
fistpll
insb
push
adc
es
xor
mov
xchg
or
ljmp
sub
mov
sbb
lret
mul
push
push
adc
xor
icebp
nop
jecxz
sub
call
outsb
in
das
dec
inc
arpl
psubq
or
mov
test
xor
loope
xchg
push
mov
cmp
std
adc
lea
aaa
and
adc
mov
fucom
lods
adc
push
testb
cmp
je
mov
xor
cmpsl
xchg
daa
lds
pusha
or
lods
outsl
push
dec
mov
or
sub
out
scas
dec
lret
adc
out
out
mov
cmp
jge
xor
aaa
inc
sub
xor
lret
or
lcall
imul
outsl
sub
in
leave
in
call
hlt
or
adc
mov
dec
hlt
mov
sbbl
mov
imul
add
xor
xor
or
repz
nop
orb
cmp
sti
js
lock
mov
sub
mov
xchg
pop
dec
pop
out
repz
hlt
cmp
inc
and
mov
repnz
jge
cltd
mov
mov
rol
movsb
outsl
lahf
dec
push
mov
iret
fcompl
or
mov
inc
pop
leave
insb
movsl
lock
mulb
jo
mov
xchg
mov
cli
jp
jle
jne
dec
jb
idivl
push
pop
push
push
add
loop
shl
xchg
dec
nop
insb
sub
cmpsb
or
out
pop
jmp
jge
dec
div
cmp
jmp
sbb
mov
nop
cmp
fsub
leave
inc
sub
pop
jno
jns
dec
inc
push
div
jmp
stos
out
fcomip
mov
jge
fisttpll
movsl
push
fsubrs
fsubl
divl
movsb
mov
movsl
inc
or
pop
xor
ret
jge
out
mov
fsubl
nopl
out
sub
add
push
mov
lods
insl
pop
push
inc
add
rep
and
add
mov
push
aam
fwait
jge
mov
test
push
cli
fs
out
ja
xchg
xor
mov
andb
cmp
in
add
or
dec
sbb
mov
lds
push
push
jo
ljmp
pusha
fisubrs
je
cmpsl
xor
aad
or
push
jg
jecxz
mov
inc
call
movsb
stc
nop
int3
jl
push
adc
jg
cmp
mov
and
inc
push
or
ss
pop
and
test
jle
mov
and
cld
dec
push
adc
or
in
pushf
mov
scas
and
add
xchg
sub
jecxz
jecxz
es
mov
sarl
xchg
adc
popf
sahf
jae
adc
cmpsb
pop
mov
sub
cmp
lds
adc
sub
cmp
int3
mov
hlt
imul
jbe
inc
das
pop
xchg
cmp
sub
les
les
push
jg
sub
inc
sub
adc
and
pop
xchg
inc
fdivrp
decb
popf
or
inc
jae
adc
cltd
addl
jp
and
in
cmpsb
push
xlat
jnp
dec
xchg
cmc
xor
ret
xorb
imul
and
jb
and
jp
mov
cmp
test
pop
lods
mov
stos
dec
pop
hlt
add
into
rorb
sub
ss
in
daa
test
movsb
adc
sub
jae
adcb
ljmp
imul
add
sbb
xchg
fmuls
xchg
ret
jmp
test
sbb
scas
jl
out
xchg
outsb
and
push
push
jle
out
mov
add
call
mov
mov
fistpll
pushf
loope
fisubrl
mov
inc
cmc
sbb
cld
sahf
shl
xor
adc
sub
dec
xchg
or
cld
je
jbe
popa
jb
aas
jo
push
and
cwtl
popa
mov
adc
mov
scas
insb
aam
xor
lea
pmaddwd
lods
mov
fstps
sbb
mov
inc
xchg
cmp
outsl
out
call
stos
and
rcll
xchg
xchg
push
xchg
es
mov
lods
push
sbb
adc
aam
pop
jae
jbe
out
es
cmc
xchg
rorl
mov
lock
jmp
xchg
jnp
or
sbb
mov
test
inc
push
push
xchg
test
dec
xor
insl
addr16
mov
insb
jg
add
push
jl
xor
test
stos
stc
jo
jae
pusha
and
mov
mov
pop
sbb
dec
cltd
push
push
in
mov
cwtl
call
fbld
mov
data16
push
mov
mov
fcomip
into
and
outsl
push
dec
or
adc
push
xchg
cs
push
jns
add
test
inc
test
stc
adc
xchg
dec
pop
ja
adc
pushf
out
insb
xor
stc
push
fildll
cmp
je
xchg
mov
mov
jge
jmp
sbb
sub
or
cmpsb
push
into
andb
lret
mov
cmp
adc
int
lods
xchg
shlb
in
jmp
das
cwtl
inc
push
sbb
sbb
loope
mov
mov
inc
pusha
in
cmp
ss
stos
fs
cmp
mov
or
jns
aam
shrb
movsb
mov
jbe
and
and
inc
mov
cmc
add
mov
ret
daa
data16
push
or
mov
pop
mov
mov
inc
cmp
sub
jecxz
cmpsb
sbbb
and
pop
pushf
mov
mov
dec
add
adc
mov
and
xor
lods
mov
add
aaa
shl
dec
mov
fnstenv
mov
mov
repz
or
nop
and
icebp
dec
ljmp
mov
loopne
xchg
fadds
xor
test
push
es
mov
stos
in
or
shll
adc
fcomip
mov
jmp
xor
inc
xchg
sarb
iret
cmpsl
push
push
lock
sub
adc
int3
dec
daa
adc
sub
cmp
dec
outsl
test
adc
xchg
adc
sub
cmp
cltd
das
xchg
xchg
push
pop
in
cs
jnp
imul
ds
in
and
mov
stos
add
or
sub
fisubs
pop
jecxz
orb
add
in
pop
shl
add
popf
sbbl
dec
dec
jns
dec
cmp
mov
add
andl
out
jae
or
pop
rolb
pop
jmp
push
sarb
adc
mov
mov
mov
and
in
out
xor
cmc
ds
mov
fsub
push
sbb
sub
test
repz
in
test
inc
cmp
std
xchg
and
jno
jecxz
aas
in
sbb
rorb
adc
loope
fisttpl
sbb
inc
or
loope
dec
push
jbe
adc
sub
xlat
call
mov
and
push
xchg
clc
enter
test
loopne
sbb
push
repnz
and
jb
add
and
pusha
pop
adc
scas
mov
rolb
cmp
mov
and
jnp
pop
sbb
jmp
dec
fucomp
nop
ret
xor
call
fcoms
cld
mov
pop
test
cmp
ret
sbb
ror
xor
sbb
stos
cmpsb
mov
in
inc
fcom
dec
push
insb
inc
cmp
in
aas
aaa
mov
mov
fnstenv
in
pop
loopne
mov
cs
imul
sbb
fidivrs
push
in
xchg
fnsave
jno
push
into
ja
push
lock
in
cmp
lds
pop
cmp
enter
rol
lahf
push
cmpsb
aam
sbb
or
cmp
ret
xchg
lahf
scas
das
sbb
imulb
cmpsb
sub
adc
push
push
xchg
dec
dec
jg
scas
sub
add
imul
cmpsl
mov
push
adc
pop
call
xchg
cmp
cmpsb
enter
lret
push
into
shrb
mov
orl
push
pop
leave
hlt
adcb
jp
inc
pop
and
inc
push
cmp
inc
dec
sti
incb
mov
adc
or
sbb
pop
fsubrl
movups
mov
bndstx
cmc
add
test
hlt
cwtl
mov
sbb
pop
cmpsb
fstpl
insb
lock
aad
rcl
stos
movsb
in
arpl
jb
dec
fwait
mov
testb
ds
inc
nop
pop
call
xorb
ret
jge
xchg
cwtl
sti
cmp
adc
lods
jnp
pop
mov
add
fcoms
adc
inc
hlt
std
test
mov
mov
loope
sbb
shll
addr16
fisubs
or
sub
mov
cmp
dec
inc
decl
mov
in
dec
pop
in
adc
xchg
ja
leave
lock
mov
dec
xor
jle
jge
jecxz
xchg
jne
push
mov
repnz
push
jmp
inc
mov
lgs
xor
pushf
jge
lods
fistps
arpl
sub
push
test
imul
jno
inc
rcl
cmp
aam
inc
das
loope
mov
cli
push
es
mov
mov
rcrl
xchg
jecxz
scas
fmull
fstpt
stos
call
xor
bound
lahf
push
add
jbe
sub
xchg
mov
jmp
inc
les
gs
fisubs
add
mov
fdivl
and
lahf
xor
mov
clc
test
outsb
xor
out
pop
lahf
insl
push
pop
lret
and
leave
mov
dec
lds
stc
jmp
test
fadd
xchg
push
pop
loopne
or
push
adc
pop
test
inc
fstpt
cld
shll
xchg
fucomip
loopne
fdivrs
out
mov
pop
out
sbb
iret
lock
sub
add
lods
push
lahf
sbb
push
adc
dec
cmc
jle
fwait
lret
sub
int3
or
sahf
mov
or
sub
sarl
jns
adcb
movsb
popf
hlt
jmp
stc
int
aam
testb
sub
sub
pop
in
ljmp
cmpsb
inc
ror
testl
dec
imul
cwtl
cwtl
and
cmp
outsl
cli
and
dec
jmp
in
fnstenv
scas
sbb
xor
out
and
sbb
jge
shl
xchg
shlb
and
scas
mov
enter
cs
pop
xchg
leave
add
idivl
xchg
fistpl
mov
fs
mov
mov
andl
xchg
jl
ret
outsl
cld
mov
ffreep
jb
mov
jp
cmp
popa
push
lods
jbe
fwait
xchg
mov
jns
data16
dec
mov
ljmp
imul
sub
push
loope
ljmp
sahf
or
cwtl
imul
adc
adc
mov
inc
jne
dec
lcall
and
inc
in
iret
movsb
out
push
dec
xchg
aaa
mov
push
mov
dec
repz
popf
lea
pop
in
lds
mov
repz
xchg
scas
dec
adc
pushf
cmpsl
sbb
stc
jnp
out
pop
and
sbb
jns
cmp
add
aad
mov
int3
xchg
movsl
adc
out
mov
cmp
test
mov
jge
push
or
inc
lods
sub
imul
pop
cld
xchg
xchg
fsub
ja
dec
lret
and
outsb
sub
or
popa
push
scas
test
mov
ret
pop
xchg
js
xor
adc
xor
xchg
xor
scas
js
fsts
dec
ja
cwtl
ja
xchg
inc
add
mov
cltd
xchg
mov
jmp
and
cmp
and
dec
cmpsl
mov
mov
pop
cmp
sub
les
or
lods
jae
cs
arpl
mov
insb
pop
xchg
and
out
jle
pop
mov
jno
icebp
jge
mov
xor
pop
call
push
mov
scas
inc
inc
lods
sti
cwtl
out
das
clc
pop
or
and
ret
cmp
pop
or
sub
mov
mov
push
in
hlt
stos
dec
das
push
roll
jbe
pop
cld
xor
cmp
dec
out
ret
popf
mov
lcall
or
cmp
or
inc
das
in
push
pusha
movsl
test
mov
out
jl
dec
xchg
dec
inc
test
mov
dec
shll
push
fbstp
pop
imul
int
repnz
mov
sbb
sbb
jbe
test
mov
in
bound
inc
jno
push
data16
loopne
je
std
sub
stos
jns
pop
jecxz
leave
cld
jne
jl
loopne
stc
mov
push
or
push
fwait
push
in
mov
add
nop
je
xor
out
or
ds
pop
lea
push
test
add
sbb
dec
shlb
inc
int
movsl
and
xchg
lods
mov
pop
arpl
bound
jmp
lret
jbe
jmp
cltd
ss
inc
ja
push
mov
test
test
arpl
stc
cld
mov
dec
push
adc
jae
adc
or
add
push
sub
mov
shlb
jl
xor
pop
adc
repnz
ljmp
mov
mov
or
mov
inc
test
jmp
rcll
ljmp
mov
jp
in
gs
arpl
mov
in
cmpsb
push
add
test
push
dec
lret
cmpsb
xorb
movsb
push
push
add
mov
lret
fsubrl
les
repz
test
add
inc
xchg
pop
jno
rorl
adc
scas
rol
pop
add
roll
fldt
rcll
dec
push
test
in
mov
sub
or
and
mov
ret
out
aam
mov
adc
cmpsl
repz
in
jo
jg
add
pop
add
xlat
cli
sarb
jne
imul
data16
shll
cmp
stc
les
sub
out
mov
mov
arpl
inc
and
repz
add
xchg
add
add
add
dec
cli
test
fwait
insb
push
out
bound
insl
es
adc
movsl
call
in
fadds
sarl
xchg
xchg
ds
fxam
call
ljmp
adc
cmp
stc
divb
repz
movsb
ret
mov
add
stos
xchg
xor
in
ss
popf
mov
adc
pop
test
sub
lds
add
sub
je
fldenv
mov
aaa
ja
jge
xchg
mov
shll
lret
cwtl
dec
cmpsb
inc
incl
cwtl
and
xlat
loopne
rep
jp
xor
cwtl
mov
dec
and
ret
inc
or
stos
xchg
sub
fwait
incb
jb
outsb
pop
pop
loope
mov
mov
outsl
or
lahf
loope
mov
mov
sarb
push
pop
mov
push
xor
shll
xchg
jae
sub
scas
jne
mov
jno
test
mov
or
ljmp
jae
sub
sub
xor
jo
addl
jle
push
mov
test
xor
pop
je
ljmp
mov
jb
and
push
stc
shll
test
xor
stos
cld
repz
out
jle
adc
mov
or
repnz
mov
adc
fnsave
dec
xchg
cmp
push
sub
pop
outsb
inc
imul
es
mov
and
js
sbb
inc
mov
pop
pop
into
aad
in
insb
je
iret
cli
scas
aam
adc
mov
test
ret
xchg
xor
ds
mov
inc
mov
in
jbe
lcall
jge
or
or
andb
pushf
leave
sbb
cmp
jnp
xchg
insb
daa
xrelease
sbb
inc
shlb
dec
mov
sub
lret
repz
in
imul
inc
test
inc
xchg
jl
or
jle
fucom
aaa
add
aam
xchg
in
xor
aad
jl
lret
dec
mov
lcall
inc
std
fistps
outsb
cmp
pop
ljmp
add
and
mov
mov
repnz
inc
roll
push
sub
imul
imul
mov
adc
adc
scas
lea
sub
in
loop
push
dec
aad
cmp
push
fidivrs
fists
incl
rcrb
aad
js
xchg
xchg
jbe
sahf
pop
cmovns
icebp
jge
dec
sahf
mov
jge
jg
stc
aas
sahf
push
mov
and
rorl
jns
push
push
and
pop
idiv
cmp
pop
iret
push
push
scas
stos
and
in
imul
pop
inc
cmp
loop
jg
in
imul
adc
insl
lods
sbb
add
mov
adcb
dec
sub
fs
movsb
jns
pop
subl
test
sub
sub
mov
sarl
pop
lods
dec
test
mov
stc
gs
insb
mov
aas
adc
push
lret
and
cmpsl
dec
sub
mov
xor
pop
xor
cld
push
mov
inc
mov
test
sbb
aaa
lds
mov
sub
mov
inc
arpl
repz
out
fnstsw
ljmp
insl
push
gs
pop
mov
lcall
hlt
in
pop
pusha
inc
mov
mov
pop
pop
mov
pop
adc
inc
jmp
jns
je
les
sub
sub
cmpsl
adc
add
jo
pop
clc
sub
jmp
pop
scas
push
add
in
mov
outsb
imul
pop
jnp
cmp
rcl
xchg
jns
sarb
in
or
xchg
cmp
xchg
xor
negl
out
icebp
pop
stos
mov
sarl
shlb
adc
loopne
or
inc
jmp
push
push
xchg
rorl
inc
adc
jg
pop
mov
sbb
add
mov
scas
rdmsr
aam
repz
sub
fisubrl
loopne
test
sub
add
dec
dec
nop
gs
enter
popf
adc
jne
int
pop
mov
les
negb
or
cmp
mov
mov
pop
mov
inc
and
xor
xor
xchg
pop
xchg
jne
popa
adc
xor
or
xor
push
or
lret
xlat
cmpsl
xchg
out
mov
dec
lcall
inc
mov
mov
jl
xlat
rorb
inc
xlat
test
fs
fsts
xor
pop
jo
xchg
mov
popa
pushf
fmull
xor
cmpsb
push
dec
mov
jmp
add
mov
push
xchg
pushf
cmpsb
add
jecxz
pop
push
xchg
cwtl
mov
add
jecxz
lret
shr
popa
in
sub
test
mov
leave
pop
fmulp
jmp
adc
aaa
arpl
outsb
in
jno
pop
mov
sbb
and
pop
pop
mov
repz
add
mov
cmp
adc
dec
mov
std
adcb
lcall
adc
into
xor
hlt
jne
cmc
leave
call
lock
stc
lcall
insb
fstp
sbb
pusha
outsl
push
jge
add
or
mov
inc
jae
sbb
jecxz
sarb
rolb
jbe
adc
lods
in
sbb
std
enter
lcall
bound
cs
int3
push
mov
mov
pop
lret
test
mov
xor
mov
testl
daa
pop
sub
sbb
in
out
in
add
and
aas
out
inc
mov
das
pop
call
je
and
push
and
jnp
mov
sbb
pop
mov
enter
fwait
cli
ja
cwtl
adc
ret
rorl
or
pusha
pop
mov
xchg
cs
out
inc
push
sub
sub
mov
mov
shrb
test
xor
pusha
and
aaa
cmpsb
jne
mov
or
hlt
push
lods
lods
rcr
fwait
inc
mov
dec
icebp
xor
enter
mov
sub
push
out
adc
es
aam
fcoms
aas
jmp
dec
pcmpeqd
mov
cmpsb
push
aam
push
mov
mov
dec
dec
add
xchg
outsb
in
je
pop
sahf
into
shll
ds
rol
pop
push
shl
out
sti
sbb
les
sub
imull
jbe
test
jmp
lds
inc
jno
out
out
lods
insb
add
jo
mov
dec
jg
mov
fdivrl
icebp
hlt
cmp
add
gs
out
adcb
gs
into
pop
mov
xor
idivl
mov
mov
sbb
jb
fs
mov
inc
add
pop
outsl
stc
and
xlat
and
inc
fildl
jmp
push
mov
fwait
sub
in
cmpsb
imul
and
jl
pop
jb
adcb
inc
clc
xor
add
mov
lahf
dec
test
movsb
gs
pop
leave
mov
and
xor
lock
repz
in
lods
inc
lret
fldl
outsb
dec
cmpxchg
adc
mov
loop
scas
jle
mov
out
inc
outsb
xchg
push
or
pop
jp
cmpb
fsts
jmp
stos
ss
pop
sbb
dec
push
lods
repnz
in
test
ficoml
pop
pusha
dec
lret
scas
dec
cmpsl
rorl
scas
out
and
or
mov
or
clc
push
xor
mov
sub
call
rolb
fsubrl
imul
jge
aaa
push
sub
dec
mov
mov
jle
inc
test
sub
push
adcl
mov
push
std
movsl
insb
mulb
cmpsl
xor
push
sub
inc
repz
fs
sub
mov
pushf
cmc
dec
mov
xchg
cli
mov
jl
insl
dec
jno
xchg
cmp
mov
std
les
cmp
out
inc
mov
mov
stos
inc
ljmp
sbb
inc
lds
mov
mov
cmpsb
mov
sub
in
movsb
mov
pop
pop
mov
or
call
and
xlat
adc
adc
push
aam
ljmp
ds
shll
cmp
mov
and
jp
loope
cmp
push
pop
mov
mov
push
enter
xchg
push
mov
adcl
test
je
add
clc
dec
popf
push
ror
es
or
push
mov
sub
xor
cmp
cmpb
sbb
add
sbb
lcall
add
dec
pop
leave
ds
dec
arpl
movsl
jo
xor
cmp
add
out
cmp
mov
enter
mov
stc
xor
mov
mov
ss
mov
jae
pop
dec
test
lret
aas
mov
xlat
ror
js
cmc
sub
jb
mov
loope
sahf
int
loope
lock
sbb
jno
stc
dec
int3
icebp
jmp
mov
cli
movsl
sbb
mov
xor
jbe
rolb
loop
sti
out
inc
push
roll
rcl
jmp
pop
cmp
pop
mov
into
imull
pop
xor
movb
fidivrs
and
push
test
jnp
pop
sub
mov
xchg
pop
dec
adc
imul
dec
and
scas
fidivrs
fstpl
push
inc
mov
ret
mov
fs
aam
pop
mov
dec
mov
test
fisubl
jge
aad
mov
addb
ds
fisttpl
fildll
cmpsl
pop
subl
lds
aas
adc
cmc
mov
xchg
repnz
lret
lret
push
mov
pop
mov
mov
lret
and
js
fimull
roll
test
cli
nop
addr16
andb
and
lods
sbb
or
fs
add
push
adc
cmp
cmp
rcl
xchg
inc
test
inc
gs
dec
popa
xchg
dec
xchg
dec
mov
add
jne
mov
inc
stc
enter
fisttps
and
pop
cmp
ret
mov
dec
in
mov
add
xchg
mov
in
insb
mov
mov
lds
imul
sub
jb
xchg
rcrb
push
mov
fwait
loop
addr16
add
outsl
lret
stos
mov
mov
add
cs
dec
xchg
mov
cli
add
loopne
sbb
sbb
push
loopne
xchg
popf
adc
addr16
sbb
and
dec
int
stc
hlt
mov
daa
sub
cmc
ljmp
scas
push
rcr
cs
xchg
data16
fldcw
into
clc
dec
adc
mov
nop
push
xor
dec
lods
sbb
mov
jp
in
xchg
js
mov
sub
push
jg
rcll
mov
add
inc
loopne
mov
stos
lock
stc
hlt
sub
push
ljmp
int3
std
fs
push
xchg
push
pop
lock
fistpl
rcrl
cmp
inc
popf
push
add
sar
adc
mov
sub
sub
aad
and
lret
fs
or
inc
fsts
mov
jg
outsb
rcrl
mov
jg
ljmp
sbb
lret
inc
call
loope
out
lcall
mov
mov
mov
fsubs
cld
pop
push
or
ss
repnz
jmp
pop
sahf
adc
pop
outsl
pop
pop
test
xchg
sub
loopne
sbb
xchg
fisttpll
inc
ja
dec
xor
clc
cmp
cmpl
xor
jb
aad
xlat
inc
and
sub
test
std
or
mov
xorw
push
es
jno
mov
ror
loopne
push
jg
pop
jae
fstpl
lods
xchg
push
adc
das
sub
sbb
jmp
repnz
fs
divl
xchg
imul
out
jmp
aaa
push
inc
mov
je
sbb
cmp
icebp
cmp
fidivl
je
mov
addr16
push
push
scas
stos
cmc
sub
mov
inc
mov
add
icebp
dec
fdivl
mov
in
add
cmp
mov
es
add
add
cmpsb
stc
out
push
shll
push
jne
in
roll
test
jnp
lret
fcomip
in
push
and
in
push
xor
ret
movsb
push
pop
pop
loope
mov
fiadds
in
sub
loopne
add
cld
xchg
lods
cmp
inc
xor
je
fists
inc
jnp
and
scas
xor
mov
mov
movsl
popa
pop
inc
jae
jl
bnd
ja
icebp
sbb
pop
push
int3
add
sub
mov
fcoms
inc
hlt
jmp
repnz
das
push
and
xchg
dec
sub
not
ret
mov
mov
jge
ffree
je
sbbl
jae
iret
jecxz
mov
sbb
inc
test
mov
sbb
aad
push
xor
dec
popa
xchg
adcb
adcl
pop
hlt
cld
jb
cltd
jno
mov
add
jmp
or
mov
pop
mov
sbb
adcl
push
mov
out
repz
loope
mov
in
push
pusha
cmp
push
pushf
mov
mov
xchg
mov
adc
movsl
xchg
scas
cmp
dec
push
iret
dec
cmc
pusha
mov
dec
leavew
out
inc
adc
ds
mov
cmp
dec
xchg
mov
loope
pop
cmpsb
dec
mov
or
aam
jb
mov
leave
fldenv
jecxz
adc
pop
out
xchg
data16
inc
sbb
push
push
leave
jns
mov
loop
pop
clc
popf
enter
dec
outsb
and
outsb
sub
inc
xchg
testb
mov
push
xchg
mov
push
inc
insl
call
push
xchg
xor
divl
pop
inc
sbb
fildll
and
inc
xor
mov
std
notb
mov
jns
pop
insl
into
add
les
push
inc
adc
dec
test
jo
fldenv
lahf
xchg
shl
ljmp
pop
fstpl
call
rcrl
repnz
pop
mov
and
sub
int
xor
inc
lea
pop
xchg
and
jns
stos
test
out
stos
stos
in
out
mov
scas
add
push
stos
jge
inc
adc
shll
jge
push
cmpsb
cmp
jnp
mov
scas
and
mov
stc
sbb
pop
or
movsb
sbb
push
dec
mov
mov
jne
addl
adc
push
out
sub
mov
shr
sub
jnp
aas
loop
loope
pusha
push
out
adc
sti
lret
mov
jp
cwtl
lcall
stc
sbb
adc
das
cwtl
lret
jmp
sbb
or
in
push
jle
jne
sub
loopne
xor
push
dec
lahf
fimuls
test
fildll
shlb
dec
rolb
leave
xchg
js
stos
lock
dec
les
dec
push
and
cmp
lcall
and
jecxz
in
mov
inc
xor
adc
adcb
xchg
jecxz
gs
mov
jb
sbb
and
out
adc
leave
mov
push
loop
mov
inc
fidivl
cld
mov
icebp
repnz
mov
adc
push
cltd
fidivrl
inc
mov
adcb
jo
cmpsb
cmpsb
pop
fcmove
mov
fnstenv
push
hlt
or
mov
mov
pop
pop
dec
ljmp
pop
ja
ljmp
daa
pop
stos
adc
stc
sub
xchg
xchg
xlat
sbb
scas
inc
dec
out
cmpsb
sahf
lock
cltd
ficomps
mov
addr16
push
call
dec
mov
dec
xchg
cmpsl
mov
mov
cwtl
xor
mov
mov
fdivl
sub
insb
dec
popa
cmpl
hlt
loop
sbb
mov
cmp
and
out
pop
outsl
scas
test
divl
xchg
pushf
xchg
cmpsb
addl
xor
and
sbb
push
cmp
adc
out
add
mov
outsl
testb
mov
pop
sahf
outsl
and
mov
adc
loop
es
icebp
dec
test
pop
mov
add
mov
cwtl
cwtl
or
mov
sti
xchg
call
mov
je
lods
repz
or
cmp
cmc
call
test
jno
xchg
pop
test
movsl
adc
cwtl
xchg
dec
pop
xlat
les
jae
jp
dec
test
pop
mov
cmp
dec
mov
data16
filds
push
mov
xchg
dec
mov
mul
mov
push
sub
or
inc
inc
jecxz
ja
jg
push
bndldx
rorb
mulb
sahf
sbb
inc
cmp
ret
fsubl
cli
mov
mov
or
aad
popa
and
test
out
and
sahf
ror
sub
test
or
insl
and
sub
scas
cltd
ja
mov
jns
or
bound
or
into
and
push
xor
hlt
sub
dec
jmp
jnp
inc
jge
mov
dec
shrl
inc
mov
icebp
mov
push
dec
leave
sub
and
ljmp
dec
pop
adc
dec
pop
shll
and
dec
lods
pop
hlt
xor
adcl
pop
xchg
mov
das
jp
sub
lcall
mov
dec
sarb
cld
cs
pop
mov
sub
fdivs
cmp
jle
add
daa
clc
fcmovnu
ljmp
rcl
stos
pop
shrb
add
scas
cmp
sub
jl
adc
cmp
cmc
cli
popa
inc
xlat
lret
sahf
xchg
data16
pushf
xchg
pop
dec
add
jb
push
popa
mov
add
add
mov
and
std
cs
stos
push
cmp
xor
idiv
mov
fsubs
mov
inc
pop
repnz
cli
loop
mov
js
data16
jns
dec
or
popw
ss
or
dec
jg
dec
lcall
repnz
push
push
xchg
fimuls
ds
add
nop
loope
icebp
in
inc
dec
daa
adc
fimull
xchg
cmp
fmull
add
pop
cmpb
loope
in
jne
jle
enter
xchg
pop
pushf
repz
mov
fmuls
nop
mov
jl
pop
dec
mov
mov
push
cmc
in
jnp
jb
sub
mov
cmp
dec
push
addl
fldcw
repnz
mov
jge
jge
dec
sbb
lcall
sub
int
stc
push
xchg
add
aam
jl
or
pop
paddsw
testb
dec
jnp
lahf
rcr
or
cs
cmpsl
insb
rcrl
pop
xchg
ret
pop
lret
jbe
mov
push
repz
ret
fnstcw
xchg
fmuls
push
pusha
stos
pop
cmp
mov
push
jg
lcall
ja
dec
adc
dec
cld
shr
pop
mov
pop
xor
mov
mov
jns
and
cmp
ficompl
in
in
jb
cltd
sti
sbb
xchg
lods
insb
xor
mov
push
int
test
subb
xor
fst
mov
adc
lret
jb
inc
ss
xchg
lea
mov
xor
sti
in
mov
mov
or
add
adc
clc
dec
nop
dec
popf
cwtl
and
pop
decb
xlat
cld
sbb
in
arpl
test
add
push
punpcklbw
xchg
shlb
push
hlt
pop
bound
or
pop
lods
pop
dec
jmp
cmp
lret
push
das
jnp
ror
jmp
enter
outsb
pop
or
pushf
mov
xor
jmp
push
stos
ret
shrb
test
mov
lret
cmp
lahf
mov
push
in
push
push
loop
cli
es
xchg
shlb
dec
push
fcomps
cs
push
dec
imul
mov
lock
fcoml
xor
mov
lret
mov
insl
pop
inc
aad
jb
lock
mov
xor
inc
js
sarb
fnstsw
pop
mov
sub
pop
push
dec
sub
adc
and
ret
cmpl
push
adc
pushf
sti
fwait
pushf
sbb
xor
pop
imul
out
test
fistps
in
jb
jno
std
push
int
sub
orb
push
ss
mov
mov
aad
jno
push
xchg
or
arpl
xchg
jge
outsb
sbb
xchg
push
cs
add
out
sbb
lcall
mov
pop
jno
inc
jecxz
adc
cmpsb
lock
cmp
sbb
cmp
xor
testl
idiv
fldl
aad
insb
lods
insl
stc
sbb
leave
pop
imulb
mov
xor
lret
mov
insb
cmp
cld
mov
stos
pop
cmpsl
leave
lods
enter
xchg
mov
and
cmp
mov
ret
pop
ret
xchg
fldt
cmp
mov
mov
pushf
add
add
dec
fs
out
cmpsb
pusha
fbstp
sbb
je
push
and
gs
jp
mov
mov
pop
cs
rcll
loope
ds
test
mov
out
lcall
and
mov
int
imul
scas
test
lret
les
or
jb
out
ret
aam
fcmovne
icebp
push
shr
and
loope
sub
fwait
and
cmp
cs
cwtl
xchg
imul
fsub
cmp
or
xchg
in
enter
jo
repz
and
pusha
jns
add
mov
sti
test
pop
sarl
repz
inc
sbb
fiaddl
jno
imul
or
fimuls
add
pop
jbe
cmp
in
clc
repnz
pop
inc
shll
pop
mov
popf
lahf
or
mov
imul
lea
incl
sub
mov
in
fiaddl
lret
jp
testb
ljmp
cmp
mov
sahf
int
or
movsl
popa
mov
jecxz
mov
push
jno
popa
out
ret
aad
push
or
adc
cmpsl
mov
add
aam
scas
test
inc
insb
mov
pop
dec
add
jecxz
aam
inc
mov
pushf
ds
sbb
mov
out
mov
cmp
pop
mov
and
iret
fwait
andl
lods
push
xchg
sti
vmovdqu
mov
aaa
xchg
nop
xlat
loope
mov
mov
push
adc
fstps
mov
and
jge
shll
mov
in
adc
push
dec
or
push
xchg
adc
out
rcrl
scas
add
adc
push
dec
sub
mov
adc
mov
fs
mov
lods
idivl
das
mov
int3
xor
lock
xor
fstl
aaa
lods
add
or
mov
dec
xor
mov
test
andb
dec
mov
outsb
cmpsb
mov
cltd
push
popf
sbb
repz
mov
repz
out
dec
mov
pop
insb
lret
enter
mov
pop
cmp
lcall
imul
mov
pop
inc
lods
in
js,pn
arpl
jle
add
pusha
inc
repz
push
mov
mov
adc
aam
outsl
cmp
in
push
xor
lret
pop
push
or
push
cld
jp
lcall
call
mov
jno
cmp
lret
and
adc
ljmp
subl
lods
paddusw
test
lret
lret
shlb
mov
push
je
adc
call
push
subl
std
xchg
mov
xor
aaa
std
pop
outsl
xor
pop
loope
sub
sub
dec
sub
xchg
adc
and
mov
fcmovbe
push
lahf
fimull
inc
mov
lock
imul
out
cmpsb
xchg
sbbb
cmc
movsb
dec
dec
clc
adc
push
daa
test
loopne
add
xor
cmp
sbb
cmp
lods
sbbl
cld
sub
movsb
mov
cld
pop
aaa
mov
pop
shlb
rcll
outsb
push
test
cld
push
fisttpll
rcr
lods
sbb
bound
and
xchg
loop
cwtl
movsb
repz
sbb
and
mov
pop
data16
cmp
test
inc
jp
sub
or
jl
xchg
cltd
pop
inc
xor
sahf
fs
xor
es
xchg
inc
or
sub
adc
xchg
inc
jg
popa
fstl
gs
outsl
fcomps
test
jp
jne
daa
adc
inc
jl
jmp
decb
cmp
cmp
and
mov
or
cltd
xorb
test
data16
arpl
jbe
xor
cmp
hlt
dec
sub
xor
push
dec
lahf
mov
cmp
push
data16
sub
sbb
mull
inc
js
xchg
jbe
inc
hlt
enter
mov
jbe
gs
sarl
fdivr
ftst
fadd
cmpsl
pop
stos
cmp
mov
xor
outsl
push
and
shrb
mov
inc
or
out
sarl
fldl
ror
test
xchg
push
inc
mov
inc
and
popf
jmp
pushf
hlt
shrl
jnp
push
sbb
cmc
pop
out
mov
cmp
gs
outsb
push
cwtl
jp
out
xor
add
insl
inc
xor
roll
in
mov
jnp
outsl
jae
jo
dec
sub
add
in
orl
sbb
xchg
mov
ja
inc
inc
sub
ja
loope
ret
in
add
jbe
bound
mov
mov
ds
aam
aam
dec
aad
sub
repz
scas
test
inc
out
imul
es
mov
aad
cltd
sti
daa
or
jns
jecxz
dec
jmp
mov
jmp
sbb
mov
lcall
xchg
jae
mov
or
rclb
std
mov
repz
xor
out
dec
loopne
ljmp
mov
or
lods
jecxz
nop
mov
jns
sub
mov
dec
or
icebp
or
inc
jae
jno
fldcw
sbb
cmpl
bound
inc
aaa
pop
sbb
fsubs
outsl
sub
loope
push
inc
push
jno
push
ficompl
or
into
sub
inc
xor
test
sbbb
in
repnz
jnp
orl
mov
clc
push
mov
addr16
mov
xor
dec
mov
into
popf
fistpl
int
aad
fnstcw
jmp
mov
std
mov
push
cmpsl
mov
cs
mov
test
push
sub
add
pop
push
push
outsl
push
flds
add
mov
test
les
adc
cmc
leave
test
cwtl
pushf
fs
jns
ret
pop
cmp
push
imulb
push
mov
or
cmpl
test
test
mov
fldt
lahf
rclb
xchg
repz
mov
xchg
pushf
ret
sti
pushf
add
add
jns
jle
inc
imul
mov
arpl
inc
add
stos
pop
jmp
sub
mov
add
add
mov
mov
and
in
fnstenv
mov
scas
adc
mull
je
movsb
rorl
shl
sar
sub
jno
or
push
fwait
int3
movsb
loop
lahf
int3
aam
adcb
mov
inc
cmp
mov
inc
das
sahf
push
ja
xchg
rolb
pop
lods
push
adc
jecxz
mov
shrb
lret
and
cmp
inc
dec
insl
dec
adc
cld
xchg
cwtl
and
in
stc
ja
frstor
push
mov
icebp
js
mov
aad
fwait
int
mov
sbb
or
out
in
mov
cli
mov
mov
pop
fdivl
pop
pop
pop
inc
pop
test
std
xor
jae
mov
jo
inc
jbe
ljmp
sub
out
fisttpll
add
in
gs
mov
sub
js
mov
arpl
jo
int
mov
or
inc
lahf
rcrl
mov
jmp
fwait
clc
call
aaa
pop
bound
std
mov
jecxz
enter
enter
test
or
cmp
ss
cmpsl
pop
negb
loop
scas
dec
pop
mov
xor
lods
pop
add
dec
inc
in
lret
jnp
pop
cwtl
push
jno
int
push
jne
mov
das
mov
ss
sti
aaa
hlt
dec
cmpsl
mov
inc
push
jno
mov
fisubs
cltd
sub
shl
loopne
call
push
mov
xchg
or
cmp
repnz
sub
inc
fwait
movsb
adc
rcrl
and
int3
das
mov
push
or
or
jbe
pop
adc
dec
jns
js
fadds
mov
jmp
insl
push
fmull
lahf
int
sbb
loope
ljmp
cli
repz
xlat
sahf
xchg
fcmovnu
mulb
mov
enter
in
xor
popa
push
mov
xchg
fistl
dec
and
push
ds
cmp
stc
lds
loope
das
xor
out
push
sub
aad
es
cmp
jo
pushf
sbb
and
push
xor
nop
or
adc
cmp
sub
push
add
jb
in
repnz
movsl
jno
or
iret
rol
pop
sub
inc
adcl
sbb
xchg
inc
adc
imul
int
mov
xchg
mov
jb
xchg
or
or
mov
jns
mov
ss
push
es
stc
push
in
pop
hlt
sub
andb
adc
data16
inc
or
dec
in
jo
je
cmp
mov
or
int
ljmp
iret
xor
mov
lods
cmp
cmpsl
scas
mov
stc
das
mov
fadds
rcl
loope
std
test
jno
je
idiv
bnd
adc
hlt
jns
cltd
inc
jmp
in
mov
jnp
push
mov
sub
pop
pop
stos
lcall
or
outsb
test
arpl
and
cmp
mov
test
mov
lcall
in
jle
mov
and
push
fmull
subl
movsl
loop
mov
dec
ret
and
sub
or
pop
fiadds
jb
mov
or
mov
mov
bound
dec
cmpsl
mov
ret
push
mov
fadds
push
sahf
fdivs
pop
lcall
sub
mov
dec
clc
lcall
arpl
or
ljmp
dec
or
xchg
sbb
imul
repz
fstp
hlt
dec
and
das
addb
cmp
pop
dec
lret
mov
sub
dec
inc
pop
push
mov
jno,pn
mov
jo
lret
adc
roll
mov
mov
xor
shll
add
jnp
cmp
lret
mov
xor
jmp
or
lods
adc
es
sub
aam
xchg
in
pop
cwtl
push
outsl
add
and
stos
daa
repz
in
inc
push
jmp
leave
mov
mov
mov
sub
push
fcoms
dec
pop
push
xor
sti
pop
jne
push
insl
aad
enter
pop
pop
addr16
mov
mov
add
jbe
jecxz
stos
movsl
or
adc
and
lret
inc
push
add
cmp
jl
sub
test
mov
cmp
lahf
bound
fdivl
pop
aaa
add
jg
ja
sahf
mov
loope
push
ret
ds
adc
pop
or
divl
pop
sub
iretw
test
insb
xchg
sub
inc
lahf
insb
sbb
lahf
sbb
notb
aaa
jmp
int
aam
mov
xorl
xor
cmpsl
mov
aad
and
sti
inc
add
sarb
in
pop
push
ja
pop
jmp
pop
inc
jl
bound
push
movsb
sbb
xchg
scas
daa
fmuls
rcrl
lock
or
mov
shl
stos
push
inc
mov
sbb
int3
enterw
xor
dec
cmp
in
xor
cmpsl
cmp
test
mov
add
roll
into
mov
sbb
out
dec
movl
in
jae
xor
inc
popf
jg
lahf
in
dec
sub
xor
push
test
adc
or
dec
idivb
enter
mov
jge
jle
xorb
pop
aas
psubsb
inc
pusha
lods
jl
xor
or
pop
dec
jns
out
or
pop
fisubrs
or
mov
cmpl
xchg
jl
ficoml
and
cmp
mov
and
adc
mov
push
test
imul
mov
ja
lea
mov
inc
ljmp
sahf
add
xor
dec
es
cltd
sbb
je
jns
push
mov
cmpsl
in
movsl
scas
adc
int3
pop
gs
push
mov
stos
adc
subl
sti
mov
sahf
shr
or
jns
lods
lea
jb
outsb
ret
mov
jb
adc
mov
loope
pop
sbb
addr16
mov
pushf
ljmp
pop
sti
mov
in
roll
sar
xchg
imul
and
pusha
cmp
pop
adc
cmp
fldl
jl
out
sbb
adc
fildll
outsl
repz
ret
push
subb
sbb
dec
lock
pushf
outsl
orb
dec
and
or
popf
lret
xchg
fwait
mov
sahf
xlat
cmp
daa
icebp
and
pop
cmpsl
inc
sbb
inc
dec
jns
out
sub
jne
mov
xchg
fwait
scas
shll
inc
dec
sbb
add
dec
rolb
mov
jecxz
insb
dec
mov
pusha
or
movsb
cs
arpl
aaa
addr16
rorl
pop
pushf
add
popf
and
add
insl
inc
mov
adc
xor
mov
fisttpll
loopne
cmp
and
scas
or
scas
loope
push
or
jmp
add
rcrl
clc
cmp
fadd
or
outsb
inc
bound
ljmp
sub
pop
lods
push
or
mov
mov
popf
test
test
test
sbb
mov
clc
sbb
aaa
xor
call
pop
sub
ljmp
xlat
xchg
adc
leave
inc
es
adc
aas
loop
mov
dec
je
add
xor
xchg
mov
imul
scas
pop
ljmp
push
andb
flds
enter
sahf
adc
add
pop
das
mov
lcall
clc
ret
setle
mov
lahf
ss
rolb
popf
adc
mov
cmp
ljmp
cmp
dec
fisttps
xchg
loope
pop
jp
mov
xor
icebp
push
dec
aam
and
mov
xchg
mov
jl
lock
pop
push
or
adc
add
es
fs
shlb
sbb
xor
sahf
paddb
rolb
nop
mov
cld
fadd
mov
cmp
pop
pop
push
mov
add
negl
cmp
sbb
mov
cmp
not
sbb
fwait
das
xchg
faddl
fdivrl
xor
mov
lcall
imul
test
inc
or
push
les
clc
icebp
sub
inc
movsb
rclb
repnz
cmp
push
pop
or
es
jae
arpl
dec
push
or
sahf
in
jl
daa
add
or
inc
dec
icebp
push
lret
sbb
jl
sub
adc
scas
push
enter
lea
mov
push
bnd
jo
testb
push
aad
xchg
jmp
mov
push
mov
jp
addr16
pop
dec
mov
int
and
fistpll
pop
push
fcoml
orb
dec
and
imul
and
push
mov
jmp
inc
repz
in
sub
pop
mov
jnp
jg
xor
stos
aad
sbb
cmp
inc
popf
jmp
lahf
repnz
out
lods
sarb
push
mov
adc
mov
mov
sbb
push
push
stos
sbb
in
sub
inc
and
pusha
enter
gs
fmuls
pop
add
ja
aad
lods
in
stc
scas
jb
sub
loopne
dec
mov
or
in
push
pop
ss
cmp
ret
shll
mov
fildll
push
xchg
movsl
lods
rcr
cmpb
fildll
je
fucomp
loop
aaa
loop
call
loopne
lcall
sub
jmp
cwtl
std
fwait
lahf
sbb
in
stc
cmp
pop
pop
lcall
sub
testb
mov
dec
push
pop
inc
mov
lds
cmp
push
adc
mov
test
hlt
cmp
pushl
arpl
xchg
xor
cmp
daa
mov
rcrb
sbb
mov
xlat
inc
test
stos
mov
adc
jae
inc
iret
mov
inc
cwtl
push
js
jno
pop
stos
lea
rcrl
mov
mov
pop
cmp
fwait
pop
andb
mov
pop
jmp
pushf
movsl
mov
pusha
popa
sbb
xchg
dec
insl
imul
inc
adc
sub
lods
add
test
out
ret
cmpsl
pop
pop
sub
cmp
insb
in
pop
pop
dec
mov
cmpsb
adc
cmp
inc
test
fidivrs
aam
mov
push
jno
push
inc
pop
push
or
fisubs
ljmp
pop
rorl
movsl
cmpb
roll
mov
test
dec
hlt
inc
push
sbb
in
aas
mov
enter
lods
or
adc
adc
mov
cmp
ret
cli
cwtl
inc
dec
mov
mov
pop
jecxz
lods
lcall
add
ja
jb
adc
xor
and
pmaxsw
lods
sub
mov
out
and
cmp
roll
imul
lahf
sub
insl
test
pop
mov
movsl
xchg
or
push
imul
mov
aaa
mov
push
add
inc
lea
cs
fdivrs
in
push
aam
movsl
inc
push
jl
xchg
decb
pop
or
adc
adc
ret
push
dec
pusha
or
inc
jge
in
pop
lret
push
dec
xchg
idivl
movsb
dec
xchg
xor
and
dec
dec
popa
pop
add
and
into
out
repz
cmp
mov
test
mov
sbb
xchg
fwait
ret
orb
push
movsl
insb
and
sub
adc
pop
jns
adc
sbb
pop
test
inc
add
pop
jge
cmp
xor
xorb
xchg
fs
mov
repz
dec
mov
in
roll
and
mov
aaa
flds
cld
int
dec
leave
mov
loop
fisttpl
cltd
test
inc
addr16
sub
popa
test
push
bound
aas
xchg
xor
mull
add
dec
mov
hlt
xchg
js
xorb
outsb
cmp
sbb
dec
into
icebp
xor
jmp
mov
pusha
in
aaa
pop
test
jne
or
mov
das
inc
cmp
test
mov
test
inc
inc
movsl
popf
aaa
sbb
testb
pop
outsb
jb
and
xor
sbb
sti
insb
mov
in
mov
pop
pop
mov
xchg
loop
je
ljmp
gs
jnp
mov
adc
cmp
es
lahf
cld
xchg
stos
call
sbb
jo
imul
and
fadds
mov
mov
cld
js
fnsetpm(287
ficompl
sbb
icebp
fdivs
fstl
ret
adc
jb
test
mov
in
stos
cmp
incb
dec
sarl
mov
inc
outsl
daa
push
lods
fldt
loopne
dec
stos
dec
mov
lods
or
int3
dec
shlb
ds
xchg
les
fidivs
and
cli
push
scas
add
loope
int
leave
pop
test
push
fsubs
add
or
xor
sbb
cwtl
rorl
clc
daa
push
into
addr16
adc
lea
sbb
insl
and
lea
pop
jle
inc
sbb
movb
or
lods
push
sbb
cmp
repz
push
or
pop
push
setns
adc
fcmovnu
sbbb
jmp
icebp
xor
lea
or
ror
icebp
icebp
shl
jl
cltd
sarb
cmp
lret
sbb
mov
fdivrs
mov
mov
fistpl
mov
mov
push
dec
int3
bnd
xchg
mov
jg
xchg
dec
movsb
mov
dec
lcall
in
fisubrs
cli
mov
bound
ficomps
xor
adc
lea
clc
cmc
dec
pop
cmpsb
and
inc
daa
test
loop
jo
sub
mov
mov
mov
ja
shll
out
sub
xchg
fcmovu
outsb
push
aaa
inc
xchg
pop
fstps
inc
sti
add
pop
jno
fidivrl
or
packssdw
cmp
add
leave
test
imul
sub
sbb
in
int3
xchg
xor
ret
jo
cmc
xor
lock
stos
xchg
add
jo
lcall
jnp
and
cmpsb
mov
andl
mov
scas
cmpsb
test
pop
stos
nop
cmp
pop
add
aad
or
push
mov
in
cmpsb
sbb
pop
mov
jg
mov
adc
inc
out
mov
cmp
mov
fwait
dec
fdivp
or
es
fimuls
mov
test
dec
cmp
push
jmp
pop
lret
cltd
dec
stc
or
lock
out
mov
pusha
cmp
xor
adc
cmp
add
into
pushf
mov
sub
lock
jb
cmp
pop
shlb
sbb
mov
mov
sbb
fs
or
je
jg
mov
add
das
arpl
mov
cmp
int
cltd
dec
je
mov
sahf
mov
test
mov
adc
je
cmc
test
insb
outsb
mov
jmp
inc
in
cmpsb
cmp
adc
pop
xor
mov
jo
roll
call
cmp
and
jbe
lcall
ljmp
cmc
scas
add
jns
stos
fidivrs
test
cmp
nop
or
nop
inc
arpl
inc
mov
or
add
test
dec
sbb
jne
adc
mov
hlt
jnp
jmp
sub
enter
hlt
mov
rorl
outsl
jnp
test
lods
rol
fsts
mov
xlat
sub
adc
xchg
ja
jecxz
xor
pop
addl
data16
clc
mov
gs
outsb
cmp
mov
lods
pop
rorl
dec
in
call
push
dec
aam
jne
xchg
push
leave
sarl
lret
cs
jl
loop
inc
sbb
mov
mov
int3
mov
inc
inc
cltd
sahf
dec
movsb
xchg
fxch
sbb
mov
mov
ss
test
out
mov
xor
fs
sar
sbb
cmp
cli
sahf
ret
mov
aad
lcall
mov
jle
inc
mov
imul
jae
xchg
outsb
and
in
pop
loop
dec
jno
add
rolb
inc
push
inc
or
jb
jmp
in
lods
lret
sbb
pop
jl
push
lds
jl
push
clc
clc
jb
lret
or
mov
xor
mov
in
dec
cwtl
ret
sahf
fwait
sbb
je
adc
jl
lahf
or
pop
dec
or
mov
arpl
pop
cmpsl
lock
insb
sbb
sub
xchg
test
call
mov
shl
xchg
jecxz
jmp
xchg
ret
mov
je
int3
fldl
jne
mov
mov
xchg
pop
pop
lea
mov
push
stc
rolb
mov
lock
jb
mov
adc
adc
fstpt
in
and
jne
pop
out
insl
es
sub
loope
stos
repz
int3
test
scas
or
das
push
add
out
pop
sub
insb
pop
dec
pop
lock
jns
rcrb
out
jae
call
mov
xor
mov
imul
lret
stos
lcall
int3
int3
add
scas
mov
setbe
cmp
jo
sbb
int
xor
dec
daa
imul
fistps
push
in
cmpl
popa
popa
lods
or
je
dec
and
sub
push
insb
jecxz
mov
sub
xor
pop
cli
sub
mov
mov
jbe
daa
mov
rcl
out
and
or
sub
test
inc
and
inc
xor
outsb
aas
xor
and
push
mov
and
mov
and
push
arpl
fbstp
out
inc
fsubs
cmc
sbb
ret
stos
pop
jae
mov
lds
jo
scas
shrb
daa
mov
xchg
sub
jle
aas
aam
mov
inc
xchg
inc
ljmp
popf
xchg
out
jno
and
in
sbb
stos
mov
pop
aas
cmc
add
cmp
les
out
mov
insl
hlt
sub
adc
dec
jg
xor
or
test
inc
jge
outsb
imul
jle
pop
sub
lods
mov
sbb
jnp
push
idivl
andps
sbb
call
push
dec
test
cmpsl
loopne
xchg
xchg
iret
les
fstl
imul
jecxz
jne
addr16
dec
xor
or
loopne
sarb
xchg
adcl
sti
jg
stos
xor
bound
loope
testl
int3
rcr
in
shll
cs
cmpsb
pop
imul
push
add
gs
out
and
jle
sbb
push
addr16
cmp
mov
push
lea
int
jb
fidivrl
xchg
rol
das
imul
cmp
js
xchg
cmp
fimull
xor
cmpsb
fldcw
xchg
xor
jecxz
fnstenv
cmpsb
lcall
nop
ds
inc
ds
dec
cmpsl
dec
xchg
fwait
pop
aam
xor
ds
loope
loop
jg
insb
ret
lret
xchg
leave
shrb
mov
test
inc
add
cmpsb
adc
push
fstl
in
push
scas
movsl
ss
push
imul
iret
jne
lds
out
and
sti
inc
enter
xchg
inc
std
sbb
xor
push
popf
xrelease
push
in
pushf
loope
or
lods
jb
rcr
in
push
sub
sbb
xor
lods
lds
into
pop
rolb
inc
mov
xor
jae
dec
adc
cmp
adc
fisubl
stos
inc
les
cmp
add
nop
aad
ret
pop
in
test
cwtl
mov
xchg
jge
popf
push
cmpsb
push
fsubl
push
xchg
rcl
sub
out
or
lods
out
push
mov
cmpsl
mov
mov
cmp
jecxz
sarl
mov
mov
adc
cmpl
iret
stos
mov
pop
movsb
mov
mov
inc
cmc
inc
mov
stos
out
mov
imulb
jns
scas
mov
pop
dec
loop
xchg
loope
incl
roll
test
inc
movsl
push
jae
into
push
jmp
sub
ret
sub
daa
test
mov
mov
cld
cli
addl
nop
dec
out
jg
sbb
sub
pop
inc
icebp
jle
push
dec
xchg
jle
add
outsb
jno
sbb
mov
adc
bound
and
push
pusha
out
sub
clc
hlt
aas
pop
pusha
mov
xchg
stos
pushf
mov
adc
adc
and
pushf
clc
xor
call
int
leave
into
or
push
dec
test
mov
cmp
and
mov
jno
stos
fildll
xchg
sbb
scas
push
out
push
jns
popf
cltd
cmp
xchg
sub
outsb
test
test
xor
inc
xchg
fildl
ds
fisubrs
pop
mov
add
dec
inc
inc
cmp
mov
dec
lea
iret
sub
lea
sbb
jbe
ja
mov
fimuls
xchg
in
aaa
dec
fstpt
xchg
scas
and
lea
and
xchg
sbb
and
mov
push
sub
movsl
pusha
roll
fildl
sti
cmc
jbe
cmc
pop
or
leave
sub
es
mov
pop
xchg
fisubrl
jb
jge
push
inc
dec
jl
lahf
adc
test
jge
data16
shr
or
mov
ljmp
jb
ret
push
sbb
mov
iret
gs
pop
sbb
int
imul
mov
xchg
jge
sbb
xchg
stc
cmovge
pop
push
mov
pop
sub
ret
inc
lea
mov
add
jp
jecxz
mov
lock
cmpsb
lock
mov
movsl
aad
pop
imul
sub
sbb
add
clc
jmp
out
dec
incl
sbb
enter
mov
cmpsb
inc
call
insb
sti
dec
fcmovu
adc
scas
sti
jecxz
popl
xchg
adc
push
sahf
mov
push
jmp
sbb
xor
fs
lret
cmpsl
outsb
sti
xchg
sub
fwait
pop
flds
mov
mov
mov
ljmp
out
mov
cmp
movsl
fcomps
cmpsb
std
sbb
inc
sti
lea
cmc
adc
sub
mov
sahf
jae
mov
bound
mov
lock
xorb
pop
mov
or
fcmovnbe
test
enter
out
push
or
js
dec
adc
clc
mov
call
inc
rclb
push
lret
lock
inc
mov
ret
mov
mov
xor
mov
cmp
pop
cmp
push
mov
sarb
mov
pop
movl
cmp
addr16
dec
xor
xchg
mov
in
or
out
lds
ret
inc
adcb
mov
in
cs
push
rolb
cmpsl
sti
cmp
insw
inc
xchg
xor
pop
jno
lahf
dec
fwait
ret
sbb
and
push
or
adc
mov
pop
push
js
xchg
in
lds
test
cld
cmpsb
sub
cs
xlat
outsl
jno
and
mov
or
and
int
cld
mov
ljmp
sbb
out
test
adc
sbbb
pop
popa
fcoms
out
roll
rcll
enter
jecxz
pushf
sbb
test
jmp
dec
jno
jecxz
scas
in
jo
mov
push
jae
mov
scas
adc
hlt
adc
test
stos
inc
inc
outsb
mov
pop
mov
out
pop
xor
stc
jns
int
jge,pt
imul
cmp
or
fcomi
dec
fwait
adc
cmc
repz
es
and
out
loopne
fstpl
cmpsl
jo
xchg
ret
adc
cwtl
inc
divb
lcall
ljmp
inc
aad
push
imul
daa
or
popf
ljmp
int
scas
incl
rol
jmp
clc
jge
pop
or
ret
xor
shrl
inc
aas
mov
or
aad
mov
cltd
or
jle
mov
pop
jnp
nop
and
xchg
rcrl
frstor
xchg
ret
jecxz
mov
mov
pop
out
fisubrl
and
das
jg
mov
sahf
scas
dec
or
punpckhwd
and
mov
ss
nop
repz
into
sahf
push
push
mov
lds
xchg
sub
mov
sub
add
ret
ds
and
lahf
loopne
imul
lret
xchg
lea
addb
call
pop
test
add
dec
adc
dec
jle
xchg
jg
push
loopne
push
je
lahf
dec
scas
mov
jle
jno
imulb
jne
xchg
fs
push
imul
jp
out
enter
fstpt
data16
cmpsl
xchg
mov
jbe
mov
mov
add
xchg
add
inc
push
sarl
xor
idivl
mov
mov
or
out
adc
sti
ds
sbb
jo
lds
bound
out
test
pop
sub
jg
jge
push
xchg
cwtl
scas
inc
adc
cwtl
iret
xor
add
mov
mov
pop
aad
adc
push
cs
mov
or
popf
sub
enter
add
lea
mov
pop
aad
and
adc
and
mov
addr16
jp
push
sahf
divb
insl
lret
adc
cmpsl
mov
and
faddl
lret
push
push
rorb
lahf
xor
adc
js
xchg
fidivs
cmpb
fstpl
into
xor
inc
push
xchg
add
out
push
push
push
pop
aas
fwait
or
lret
test
pop
in
xchg
cmc
std
mov
mov
fbld
sahf
insb
pushf
dec
lock
addr16
data16
jl
inc
dec
out
out
dec
loop
scas
in
jecxz
jp
mov
xchg
and
pusha
sub
or
xchg
xor
cmp
bound
cld
fcoms
jno
xlat
jno
lret
jle
test
aam
test
push
add
test
lods
shlb
fcmovu
push
std
sub
and
pop
add
movsb
sbb
jno
mov
fnstsw
int
lods
sub
insb
ret
scas
int3
and
dec
add
adc
xor
mov
inc
cmp
push
jae
adc
les
fucomip
pop
stc
add
popf
fcoms
inc
sub
in
imul
fxch
xor
shrb
stc
xor
insb
adc
cmp
jbe
mov
jae
add
jmp
sbb
push
jecxz
jae
loop
pop
test
inc
jg
movsl
jbe
out
pop
call
jmp
leave
cmp
arpl
cmp
push
push
mov
neg
loopne
ljmp
cmc
sbb
out
pop
add
jp
insb
inc
adc
in
mov
test
arpl
ss
aaa
push
int
cld
jae
popa
imul
mov
stc
pop
out
adc
mov
dec
ss
mov
hlt
call
xchg
jnp
add
xchg
xor
rcrb
in
imul
fdivrl
sbb
lods
in
mov
push
xor
mov
test
repz
jbe
ret
imul
fbstp
mov
push
clc
scas
pop
mov
sahf
fisubrl
sub
aam
bound
icebp
ja
call
fstpl
test
stos
roll
jg
sub
add
mov
cwtl
dec
stos
out
mov
lods
fs
cmp
test
pop
ljmp
adc
jge
mov
pop
pop
jmp
cmp
mov
je
push
xor
or
je
cmc
cmp
jnp
or
repnz
mov
jne
rcll
cmp
xor
int
and
and
aad
jecxz
aam
out
call
add
dec
jge
ljmp
cmp
push
xlat
inc
std
mov
add
push
pop
les
pop
jle
lret
sbb
jno
insb
push
jnp
flds
fstpl
mov
jle
call
sbbl
testb
add
fsubp
sub
jmp
lds
cmp
jno
mov
loope
imul
stc
jnp
out
repz
mov
ss
push
das
je
out
mov
xchg
xor
jmp
pop
xlat
push
repnz
add
cmp
sbb
movsl
mov
or
jns
aad
push
fstpt
cwtl
fwait
dec
arpl
in
aad
ds
pop
movsl
int3
sbb
les
xchg
mov
in
xor
or
mov
rorl
mov
es
mov
sbb
pusha
add
mov
int
stc
insl
notl
inc
add
inc
outsb
dec
repnz
pop
xchg
mov
ja
out
push
pop
out
mov
jne
inc
adc
push
hlt
loopne
dec
or
xor
fcoms
out
out
mov
adcl
movsb
fs
push
shl
rclb
mov
ljmp
test
test
push
cmpsb
fisttpl
iret
dec
insl
xor
repnz
adc
sub
arpl
test
mov
loopne
dec
lret
sub
out
andl
je
popl
xor
loop
push
loop
mov
fistpll
inc
or
add
scas
mov
mov
lock
adc
pop
mov
jne
or
inc
lret
pushf
sbb
scas
pop
pop
pop
adc
jns
mov
jmp
sbb
loop
mov
test
stc
outsl
ficoms
out
repz
sbb
xchg
jg
dec
iret
aas
or
ja
mov
mov
and
inc
sbb
mov
mov
mov
pop
nop
mov
mov
add
xchg
sahf
movsl
xchg
and
aas
out
loope
cltd
jl
cs
or
push
lret
int3
push
sahf
mov
inc
repz
jp
subb
mov
xchg
pop
push
lahf
add
pop
andb
movsl
inc
pushf
ficoml
xor
ja
das
inc
mov
bound
mov
pop
inc
test
and
mov
icebp
fsubrs
dec
lcall
ficoml
out
fsts
jns
dec
jmp
aaa
add
mov
cmp
adc
fisubrl
repz
sub
fimuls
mov
outsb
add
hlt
pop
je
mov
mov
xor
and
or
aad
mov
out
sub
orb
int
clc
pop
sbb
jno
cld
or
out
adc
stos
cmp
cmpsb
add
pop
data16
test
out
pop
aaa
jle
add
jno
pop
jmp
mov
jle
cmp
push
sbb
arpl
stc
mov
outsb
orb
jmp
les
xchg
jp
cld
adc
push
outsb
movsb
push
push
xor
adc
push
aam
xor
lock
push
dec
push
addb
xor
jns
sti
nop
add
push
addl
sbb
jno
cmpl
movsl
mov
lahf
lret
adc
pop
sbb
and
sbb
adc
push
and
jp
mov
leave
xor
ret
sub
mov
daa
xchg
loope
filds
or
and
pop
push
das
mov
pop
adc
cmpsl
popf
dec
sub
lods
ljmp
ljmp
push
push
mov
mov
lea
aas
xchg
enter
xor
mov
fnstsw
scas
ds
jne
in
pop
add
hlt
shl
test
cmp
push
push
xchg
aaa
xorl
les
enter
ret
mov
sbb
mov
pop
jg
test
pop
mov
mov
jns
loopne
sub
sub
jbe
imul
repnz
out
mov
outsl
add
and
not
adc
stos
jecxz
and
movsb
cwtl
pusha
movsl
enter
addr16
jb
push
notb
subb
dec
xor
xor
nop
or
inc
iret
push
into
in
or
mov
mov
adc
mov
or
cmp
pop
pop
je
fwait
out
xchg
shll
push
test
aam
cmp
pop
add
test
stos
insl
in
test
punpckhbw
outsb
xchg
adc
icebp
adc
mov
sub
imul
mov
hlt
mov
mov
dec
adc
mov
sahf
rclb
aas
or
lret
jge
das
cmp
mov
pop
push
xor
jmp
push
xor
cmp
je
cmpsl
mov
xor
pop
pop
mov
sahf
ds
shr
sbb
cltd
cltd
inc
cmp
fistps
pcmpeqd
shl
clc
push
sub
sbb
push
lea
sub
adc
aad
mov
lmsw
in
push
sub
aas
aas
icebp
stc
mov
jle
mov
and
xlat
out
call
dec
out
ss
in
and
xor
pop
push
jge
sub
inc
push
sub
mov
jo
xor
imul
pop
inc
loopne
jl
sub
ret
test
xchg
sbb
jmp
int
mov
rolb
push
cmp
cwtl
cmpsb
jne
nop
pop
rorl
popf
addr16
aam
push
push
std
sbb
cmp
stc
xor
and
push
pop
mov
enter
mov
ret
jbe
or
cli
ret
xchg
insb
aas
fsubrl
push
cmpsb
and
mov
imul
xlat
aaa
cld
imul
xor
jno
test
inc
outsl
lea
push
mov
nop
fdivs
xor
into
ret
lcall
xchg
push
sub
jle
mov
cwtl
sti
jns
jecxz
xor
mov
mov
or
test
jno
popf
inc
or
lea
pop
pop
push
ficomps
ret
adc
mov
popa
lret
jge
imul
add
xor
test
adc
scas
dec
aam
or
lock
nop
add
mov
inc
push
pop
or
test
mov
xchg
mov
mov
iret
fistpl
push
push
and
cwtl
mov
or
cld
popa
loope
testb
sbb
xorb
nop
xor
es
mov
stos
pop
aam
inc
lods
subb
mov
out
cmp
xchg
lret
out
mov
adc
cmp
rorb
ljmp
cs
add
xchg
rolb
insb
fsubrs
es
adc
cmp
aam
mov
mov
pusha
dec
rclb
cli
bound
pop
stc
push
adc
mov
mov
jno
mov
outsb
imul
in
mov
fadds
pop
push
out
push
or
inc
jne
cli
dec
testb
rcr
aas
cmpsb
xchg
add
test
lret
int3
imul
xor
fistpll
push
in
aas
out
mov
cmpsl
sbb
xchg
sbb
dec
pop
dec
out
insb
loope
mov
pop
test
or
iret
clc
shlb
cmpb
adc
mov
sub
rcr
jno
test
cmp
sti
jmp
adc
mov
repz
test
pushf
cmc
addr16
fisttps
cmp
xor
leave
xchg
outsl
dec
sub
cmp
mov
aaa
fnstsw
push
and
dec
jo
cmp
fisttpll
mov
xlat
popf
icebp
jae
daa
lock
mov
outsl
pop
sti
inc
mov
pop
push
inc
outsb
gs
scas
out
and
sbb
xor
dec
fs
pop
mov
mov
hlt
js
add
idivb
lcall
jg
mov
or
mov
aaa
fstp
in
sub
test
in
repnz
xchg
lock
xchg
out
mov
and
mov
mov
push
sbb
push
dec
jl
or
xchg
negb
sbb
adc
repnz
fs
mov
inc
pop
sub
pop
lea
adcl
xor
push
pop
sub
inc
call
mov
sti
sti
call
test
lock
int3
pop
dec
loopne
popf
insl
in
inc
dec
mov
jns
mov
inc
jae,pt
lret
jl
dec
jns
test
mov
or
pop
sub
xchg
sbb
adc
ds
test
bound
jge
jo
dec
jmp
ja
pusha
hlt
sbb
daa
xchg
mov
xchg
pop
xchg
and
stos
and
mov
stos
sub
mov
push
das
jae
mov
fxch
dec
xchg
cmp
jne
fmul
subb
call
popf
nop
sbb
lahf
ds
imul
adc
add
pop
imul
sbb
leave
push
ljmp
mov
cld
mov
scas
out
and
ret
inc
ljmp
stc
mov
or
mov
repnz
sbb
cltd
cmp
mov
aam
jecxz
divl
hlt
lock
lds
inc
fnstcw
add
pop
and
mov
cmp
pop
push
sub
mov
aam
lret
xchg
mov
push
mov
mov
fstl
pushf
adc
adc
xchg
dec
int
xchg
mov
fcomps
fnstenv
loopne
popf
mov
xchg
fs
jnp
adc
mov
sub
aad
int3
mov
bound
adc
xchg
aaa
inc
ror
call
mov
cltd
jle
iret
jg
idivl
sahf
and
pop
in
sar
or
in
loopne
inc
pinsrw
push
push
xchg
lock
fmull
jnp
sbb
sub
sbb
jp
inc
cmpsl
shl
xchg
lods
adc
int3
push
loop
out
push
aad
je
mov
sub
xor
pop
adc
cli
pop
stos
sbb
fs
ljmp
lret
pop
ljmp
bound
pop
lods
inc
iret
mov
ljmp
jecxz
add
and
out
inc
ret
jnp
jl
sbb
cmp
lock
pop
inc
sub
aaa
icebp
push
in
fistps
outsl
xchg
outsb
gs
hlt
je
mov
cmp
xor
or
lods
mov
repz
mov
add
inc
iret
cwtl
in
mov
sbb
sub
or
movsb
jecxz
in
sbb
xchg
sahf
out
nop
imul
mov
pop
sub
shlb
in
adc
cmp
fistpl
das
jmp
sbb
push
or
add
sbb
ds
aaa
mov
adc
mov
daa
leave
cmp
pop
jecxz
and
cwtl
cld
xchg
sub
or
popa
pop
xor
mov
sbb
insb
dec
cli
pop
fstpl
jg
cwtl
mov
loop
and
ret
fistpll
mov
push
in
adc
cmp
sbb
test
and
jmp
push
mov
sbb
clc
mov
mov
lods
jno
mov
cmp
inc
stos
out
jmp
cmp
push
dec
das
leave
movsb
cli
push
jp
std
mov
jp
cld
adc
repz
out
pushf
inc
xor
mov
adc
sarb
xchg
inc
push
pop
pushf
inc
or
or
ljmp
push
adc
repz
bound
das
daa
cmp
or
mov
sbb
dec
pusha
in
jmp
or
mov
inc
push
in
cld
fsts
fidivs
sub
adc
mov
dec
and
pop
mov
or
loope
mov
divl
add
in
mov
sbb
aad
mov
daa
lods
add
clc
mov
mov
addl
xchg
xchg
fisttpl
xor
lods
cld
mov
int
sbb
popa
add
lcall
repnz
xchg
inc
in
stos
jno
cs
repz
xor
xor
xor
adc
and
cmpsl
jmp
push
mov
add
push
mov
les
push
cs
push
lcall
pop
adc
pop
xchg
cld
divl
mov
dec
jns
pop
lods
mov
lods
mulb
aad
js
test
fs
std
push
xchg
cmp
add
jns
inc
add
inc
push
scas
and
outsb
addr16
outsb
loope
or
adc
sub
in
out
sub
out
loope
or
mov
outsl
bound
scas
sbb
xchg
in
imul
into
or
add
dec
mov
pop
stos
jg
jp
cmpsb
fsubp
lods
push
cmp
mov
mov
repz
lods
mov
dec
pushf
xor
jnp
lea
xchg
adc
rcr
add
lods
push
cmp
cmpsl
pop
lock
rolb
jg
into
adc
jle
mov
xor
xor
leave
lock
cwtl
pop
jnp
push
lea
adc
push
shrl
inc
jae
sti
mov
nop
daa
inc
les
mov
loopne
mov
or
sbb
ds
inc
adc
adc
or
fimuls
ret
push
push
inc
jge
jnp
xchg
iret
outsl
jno
mov
lcall
clc
sti
xor
sub
dec
xchg
inc
cmc
sbb
xor
push
xchg
cmp
sbb
stc
fsubl
sub
cmp
xchg
mov
pop
pusha
mov
out
inc
inc
mov
cmc
mov
inc
pop
mov
mov
add
lods
outsl
mov
jmp
insb
xor
lods
ljmp
cmpsl
jbe
add
push
loop
in
xchg
push
cltd
jb
pop
or
xchg
ret
mov
cltd
ret
xor
nop
js
into
ret
push
gs
inc
fdiv
ljmp
sub
jns
subb
pop
push
andb
fbstp
mov
je
push
mov
repnz
add
inc
outsl
repz
xchg
mov
movsb
sbb
adc
push
cmpsl
outsb
je
and
mov
jle
insb
xchg
sub
nop
test
add
and
xchg
notb
push
pusha
jle
mov
or
inc
sub
dec
test
insb
loop
sub
or
dec
out
je
addr16
mov
test
rcrl
xor
mov
sub
sahf
push
mov
push
mov
mull
repz
mov
push
mov
adc
push
int3
mov
ja
pop
sarl
out
mov
and
movsl
cmp
mov
xlat
add
fsubrs
leave
mov
cmp
movsb
inc
add
out
cmp
push
fwait
adc
flds
or
inc
stos
cmc
pop
push
in
movsl
out
sub
clc
push
pushf
or
xor
sahf
add
dec
repnz
and
adcb
or
push
or
dec
mov
mov
fists
mov
or
es
stos
test
negb
in
push
lret
fidivs
arpl
rorb
lock
cltd
addb
or
movsl
or
cmc
int
mov
loopne
or
daa
mov
push
pop
mov
jg
clc
push
rorl
fidivrl
fiadds
dec
movsl
sub
sbb
fmull
push
push
sarl
sarl
lods
mov
mov
gs
ret
dec
sti
stos
call
push
jecxz
movb
stos
pop
bswap
stc
sub
jecxz
add
push
popf
pop
pop
push
jle
add
xchg
imul
cmp
sahf
jnp
cmp
out
stc
leave
xor
lods
sub
test
fcmovb
scas
push
nop
lcall
mov
mov
iret
push
cmp
push
pop
cs
daa
pop
rcr
dec
add
imull
mov
dec
lock
or
sub
push
push
stos
loope
imul
sbb
mov
push
push
decb
lret
add
imul
ret
in
lds
xor
push
ja
jl
xchg
lcall
lahf
push
cmp
repz
aas
sbb
in
xor
and
sti
call
shlb
adc
aaa
sbb
loopne
mov
xlat
or
sbb
scas
mov
xor
inc
call
dec
add
jo
jae
adc
push
sbb
int
repnz
pop
push
andl
int3
mov
and
sbb
jnp
imull
and
jbe
into
push
cwtl
fldl
mov
mov
loope
mov
mov
scas
daa
pop
call
jbe
imul
xchg
rorl
or
push
jmp
sbb
sub
enter
data16
out
sarb
jnp
sahf
std
cli
loop
nop
jnp
inc
and
adc
outsb
stos
sub
mov
xchg
xlat
notb
outsl
loop
sahf
cmp
mov
outsb
iret
mov
or
rcll
mov
pushf
in
bound
push
rcrb
fwait
inc
imul
ss
and
pop
fildll
int3
and
or
into
in
inc
xchg
mov
jmp
int
ljmp
sarb
xchg
jecxz
out
int3
stc
or
push
shrl
lcall
sub
add
aad
xchg
jnp
jnp
movsb
jae
negb
sti
jo
inc
shlb
cs
cmpsl
xor
in
lds
out
push
mov
outsl
xchg
cmp
mov
push
mov
push
adc
and
lds
cmp
add
cli
dec
jg
xor
cli
or
add
repnz
add
add
fldcw
or
icebp
psraw
pop
enter
repnz
mov
fildll
std
cli
arpl
push
call
sbb
or
jg
dec
jae
pop
repz
popa
mov
std
popf
dec
out
movsb
cmpb
mov
or
add
adc
jle
daa
sahf
push
mov
iret
sbb
outsl
fisubrs
cmpsl
sub
les
xchg
lods
push
xor
std
test
int3
nop
mov
and
sub
orb
add
mulb
mov
mov
out
jl
lods
test
leave
pusha
out
ja
lcall
lret
clc
out
rorl
mov
imulb
mov
xchg
mov
inc
mov
scas
sub
neg
lret
into
xor
or
shlb
andl
jns
repz
in
add
imul
test
pop
inc
fwait
imul
int
inc
out
dec
inc
mov
pusha
push
add
clc
les
push
pop
mov
push
aaa
addb
xor
sub
shll
sbb
pop
or
sarb
mov
ret
daa
dec
pop
str
jge
sub
jno
jae
popf
jl
pop
gs
mov
cltd
xor
repnz
pop
jmp
fildll
inc
cmpl
and
mov
sbb
icebp
jbe
mov
mov
dec
xchg
inc
lods
push
mov
gs
dec
mov
pop
inc
cmp
xor
sbb
nop
ljmp
adc
gs
leave
call
xchg
pop
mov
sub
leave
xchg
arpl
out
fbld
cs
jnp
sub
shll
lahf
in
out
out
mov
xor
movsb
fistpll
xor
or
inc
push
test
xchg
push
mov
pop
sbb
push
fsubs
mov
mov
fbld
sbb
jb
mov
pop
inc
pop
aam
jp
xchg
mov
inc
loope
xor
rcrl
adc
adc
fcoml
fcmovne
cwtl
xchg
stos
dec
stos
pop
or
and
adc
pop
mov
mov
add
jle
cmc
add
std
mov
mov
subl
pop
mov
test
xchg
push
mov
or
pop
movsl
lods
jecxz
lahf
push
jbe
dec
andb
sbb
sbb
das
test
cmp
outsl
mov
shll
xor
or
xchg
add
pusha
dec
sbb
dec
arpl
push
lahf
sbbb
mov
or
xor
stc
nop
add
ja
out
mov
and
mov
jb
push
decb
and
sub
jnp
or
lea
test
mov
xchg
jnp
add
mov
push
or
jne
flds
inc
adc
sub
xor
push
inc
scas
mov
shl
enter
je
push
fimull
mov
cmp
pop
stos
cmpsb
outsb
push
js
jb
push
testb
inc
jecxz
stos
xor
pop
jle
out
inc
fnstcw
jp
data16
cmc
inc
jae
fcompl
aad
sub
mov
fidivrl
sar
xchg
push
std
pop
xor
pusha
and
inc
ret
inc
lcall
fldenv
aad
stos
mov
and
jge
adc
insl
imul
loopne
or
jge
and
pop
popa
adc
push
roll
mov
xor
pop
outsb
ret
pop
lea
repz
add
cld
xor
add
xor
fcmovnu
or
adc
pusha
and
xor
in
int3
add
cmp
aam
pop
movsb
jmp
fwait
loope
je
lcall
dec
nop
out
les
js
daa
das
dec
or
mov
fisubrs
loopne
lods
and
mov
cmp
bound
outsl
lods
lret
add
and
and
ror
mov
push
out
push
loop
int3
fistl
das
adc
inc
inc
mov
ja
sub
pop
fbld
lret
jmp
add
rcrl
aaa
push
dec
test
in
std
cmpsb
pop
cmc
pop
xor
mov
cld
xchg
in
lret
adc
and
leave
pop
jbe
jmp
je
sti
and
hlt
push
imul
sbb
mov
cmp
rolb
jnp
jle
out
fld
mov
adc
cltd
movsb
xchg
push
in
aaa
mov
jnp
scas
add
in
int3
lods
and
mov
cmp
test
test
imul
xchg
xchg
add
xchg
add
mov
iret
sbb
or
or
inc
enter
in
mov
mov
adc
adc
dec
sub
dec
sbb
lahf
inc
out
js
mov
addr16
ficoms
lahf
cltd
pop
mov
in
clc
mov
xor
popf
lret
stos
dec
gs
dec
inc
xchg
movntq
fdivrl
test
mov
dec
dec
mov
rolb
stc
insl
mov
nop
cmp
nop
js
and
mov
nop
mov
mov
ss
xorb
ljmp
out
mov
loop
loope
stos
imul
mov
jge
cld
xor
lcall
and
push
fstl
jne
xchg
ficoml
jbe
movsl
jae
stc
add
stc
or
imul
shlb
hlt
sbb
push
inc
fdivrs
iret
ds
aad
sub
push
mov
sub
arpl
mov
sahf
jecxz
out
and
xor
mov
dec
aaa
add
cmp
push
cmp
into
sub
cmpsb
pop
add
cltd
sbb
repnz
pop
adc
push
inc
cmp
test
and
xor
pushf
insl
mov
and
add
shll
cmc
mov
sbb
test
pop
mov
mov
mov
mov
and
add
xchg
jnp
cwtl
jae
cmc
mov
pop
dec
xor
outsb
adc
mov
pop
dec
loope
mov
aad
mov
dec
inc
adc
cld
sbb
mov
or
mov
in
pop
test
inc
mov
xor
or
sbb
test
aad
pop
mov
movb
dec
fwait
add
push
dec
lcall
lods
add
jg
cmp
fsubrs
pop
sbb
xor
inc
mov
push
pop
pushf
mov
adc
ja
outsl
push
das
pop
aas
les
scas
fidivl
loop
pop
ss
fistps
inc
loop
mov
adc
js
jnp
popf
pop
mov
add
lret
js
mov
movsl
sbb
loop
rcr
jecxz
mov
fs
ljmp
and
adc
fwait
test
in
pop
addr16
shlb
and
push
sbb
push
lds
pop
xor
mov
mov
std
lds
jmp
xchg
das
inc
dec
fs
or
imul
sbb
add
jl
ja
popf
ret
pop
mov
pop
push
je
push
xor
or
add
jns
hlt
and
ret
sarl
adc
jge
leave
push
hlt
jl
fdivrl
ja
sbb
jmp
add
fmull
sbb
addl
or
cmp
int3
add
ror
test
mov
pop
mov
jl
mov
test
add
jp
mov
dec
cmc
std
mov
cli
sarb
pop
cmovle
lods
xchg
test
mov
or
sbb
cmp
sbbb
call
inc
dec
jnp
fsubr
je
dec
cs
cmc
add
dec
test
mov
xlat
xor
pop
rcll
jmp
mov
les
push
test
cmp
out
lret
add
adc
mov
nop
iretw
les
inc
inc
push
cs
test
outsb
jb
stos
rcrl
icebp
jae
cmc
sub
fists
jg
stc
inc
imul
sub
mov
add
ret
pop
insb
les
xchg
push
or
inc
mov
or
sub
rcll
sbb
xchg
inc
inc
dec
cmp
lahf
out
sbb
imul
jle
repnz
add
sbb
sbb
xchg
lods
out
inc
fidivrl
jmp
mov
std
test
loopne
mov
ss
mov
andl
mov
cmp
out
xchg
test
mov
lds
add
into
and
push
addr16
sbbb
adc
mov
inc
dec
negb
dec
xchg
inc
flds
mov
sub
adc
dec
std
mov
push
sti
pop
sarl
inc
test
into
faddl
mov
sbb
pushf
xchg
push
pop
xlat
hlt
mov
pop
mov
push
inc
leave
mov
popa
pop
insb
movsl
inc
int
out
or
arpl
inc
shlb
lahf
cltd
dec
xor
pop
fwait
sbb
pop
int
mov
jns
jne
mov
dec
push
loope
mov
push
mov
cld
movsl
aaa
ljmp
mov
dec
es
and
jne
repz
or
sub
jp
push
mov
jl
pop
movsb
clc
mov
push
fldt
aam
sbb
cwtl
cmp
sarl
in
mov
push
rorl
cmc
sarl
pop
sub
xchg
jle
or
fstpt
fildll
popf
fldl
mov
and
xor
lret
loope
rcrb
jns
cs
jns
es
jl
aaa
je
dec
das
pushf
int3
aaa
lret
jne
sbb
ds
test
aam
daa
xchg
aad
incb
push
adc
aad
shlb
cmpsb
push
jae
pop
inc
out
adc
rclb
cmp
int
and
push
ss
mov
ss
push
or
mov
movsb
rcrl
aad
cmc
inc
adcb
cmp
cmp
pusha
aas
dec
test
push
aaa
jmp
mov
bound
fisttps
add
xchg
repz
mov
fsubrs
popf
cmpsb
push
shlb
xor
mov
xchg
xchg
inc
cli
fxch
gs
fs
xchg
popa
arpl
imul
pop
shl
aam
icebp
divl
mov
sub
sbb
cmp
fsts
dec
push
mov
sbb
je
es
xchg
cmp
lods
lock
cmpb
mov
out
pushf
gs
fstpl
mov
sar
and
jae
cli
in
jge
sub
xor
daa
ret
pop
jge
fdivl
cmp
push
lods
mov
mov
cmp
cwtl
xor
pushf
dec
std
cmp
xchg
dec
xchg
fwait
lea
or
mov
pop
pop
sub
jns
test
mov
inc
sub
sbb
xlat
adc
xchg
fiadds
pop
dec
mull
lcall
sub
fidivs
sbb
sbb
pushf
aam
add
scas
pop
sbb
movsb
or
popf
pop
dec
shr
das
xchg
mov
movsb
in
filds
es
lahf
jg
xlat
test
cmp
inc
jne
fsubs
mov
lea
mov
xor
inc
inc
fisubrs
mov
mov
dec
pop
repz
push
dec
daa
outsb
decb
xchg
test
call
sbb
xor
push
dec
mov
faddl
and
outsl
movsb
xor
ljmp
scas
dec
cmp
in
dec
xor
jp
jnp
mov
aas
enter
leave
pop
scas
mov
or
pop
ss
inc
fadd
hlt
mov
loope
add
or
mov
and
mov
xchg
jmp
cmpsb
mov
or
popf
fistpll
xor
loopne
adc
les
dec
jb
repz
pop
test
xor
push
sarl
inc
ds
mov
les
jnp
test
repz
xrelease
dec
sbb
mov
dec
test
sub
bound
push
shrl
cwtl
fs
push
dec
roll
repz
bnd
xor
inc
mov
call
bound
loopne
or
add
es
int3
cmp
stc
push
repnz
push
jmp
notl
lcall
and
adc
pop
pop
test
ret
jmp
sbb
dec
or
add
and
aas
cmp
push
int
repnz
rcll
gs
dec
adc
inc
sti
das
stos
pop
jns
iret
sbb
addr16
repz
in
push
add
enter
xchg
pop
leave
dec
mov
inc
sbb
mov
mov
lret
add
les
ror
pusha
lods
sub
int
out
adc
or
xchg
xchg
xchg
jmp
mov
fisubrs
sub
or
test
dec
rcrb
clc
mov
push
adc
jmp
jo
cmpsl
insb
lds
fidivrl
sbb
jbe
push
jg
mov
sbb
cmp
cli
push
cmp
out
shrl
sub
add
std
xchg
es
or
xchg
sbb
adc
xor
inc
or
push
loopne
push
lods
in
push
xchg
mov
dec
imul
xor
ret
mov
sbb
inc
dec
lds
cmpsb
les
push
das
inc
jmp
sbb
inc
ret
arpl
xchg
mov
inc
adc
mov
jno
or
pop
pop
sub
negb
loopne
in
mov
adc
push
or
sub
or
cmp
ljmp
inc
sbb
mov
addr16
adc
mov
jo
addb
pop
xor
dec
adc
or
mov
jae
iret
inc
lds
sbbb
int3
jecxz
jmp
hlt
lcall
ds
and
out
lahf
mov
dec
dec
push
sub
mov
jo
stos
test
and
movsb
insl
lret
outsb
stos
insl
jmp
int
lods
mov
sub
cmp
aaa
insb
ja
cwtl
fcomps
addr16
icebp
mov
jmp
pop
xchg
iret
inc
dec
adc
int3
loop
out
jecxz
xor
stc
inc
sub
ds
dec
js
xor
aad
jns
imul
and
call
pop
ljmp
outsb
pop
pop
inc
bnd
mov
pop
and
orps
je
mov
stos
sbb
or
sub
shl
mov
addb
vpunpckhdq
push
lods
je
adc
xchg
mov
mov
out
and
push
lcall
mov
mov
ret
sti
lock
mov
ret
lret
fwait
jbe
xchg
inc
xchg
into
jecxz
in
je
push
fdivl
mov
iret
pop
mov
into
mov
mov
test
movsb
jle
mov
jae
mov
outsb
add
lods
in
mov
addr16
into
or
jp
dec
jnp
push
cmp
inc
call
lahf
push
mov
cs
mov
decb
mov
pop
cmc
mov
mov
sub
popf
adc
enter
je
inc
mov
mov
sbbb
pop
mov
ljmp
cmpsl
pusha
loope
addr16
xor
icebp
les
fimuls
or
or
jno
mov
push
mov
and
lock
mov
rcll
shll
shll
sbb
punpckldq
test
add
leave
stc
dec
xchg
movsl
cmp
ret
sbbb
repnz
adc
mov
rorb
jmp
js
into
cmc
push
sbb
lds
and
xor
lock
xor
and
mov
rcrl
ss
movsl
pop
cmpsl
loope
outsl
jecxz
pop
out
inc
pop
and
adc
dec
cmp
call
daa
pushf
in
pop
sbb
data16
jg
cmpl
test
mov
movsl
xchg
fdivs
imul
cli
cwtl
dec
dec
dec
lret
and
icebp
or
fs
dec
mov
jg
sub
mov
xchg
jmp
setl
in
add
lods
mov
into
xorb
mov
lods
dec
notb
stc
push
shrb
push
sarl
cmp
cmpsl
data16
leave
fst
pop
movsl
or
jle
mov
dec
dec
jge
pop
jb
ja
idivb
das
pop
sub
flds
add
adc
call
mov
xorb
and
mov
adc
mov
xchg
push
fwait
es
bound
fwait
stos
adc
pushf
addr16
in
pusha
leave
loope
inc
int3
pop
jmp
add
das
ret
aad
push
scas
mov
xor
cli
lock
push
bnd
cld
push
jmp
sub
shll
jg
outsb
pop
push
xchg
je
addl
lret
mov
jb
cmpsl
ret
lret
push
dec
xlat
and
repnz
inc
cmp
cmp
xlat
aam
inc
mov
adc
jle
gs
repz
or
push
in
mov
insl
lret
std
mov
jg
mov
stos
push
push
xlat
xchg
into
das
dec
push
lahf
adc
imul
xchg
xchg
mov
imul
and
cmp
int3
das
mov
fldcw
cmp
dec
lods
lret
mov
enter
es
cld
fucomp
pop
jmp
xor
lock
fs
ljmp
dec
into
pusha
push
ja
pop
icebp
cmp
int
das
les
xor
test
push
insb
xchg
ja
sub
test
xchg
xor
lcall
jl
xchg
mov
addb
sbb
sub
int
push
stos
xor
addr16
je
push
les
mov
and
ret
pop
pop
mov
hlt
sti
lahf
sbb
out
icebp
int
fdivrl
cmc
decl
jl
roll
pop
mov
push
das
dec
je
xchg
pusha
sub
popa
push
push
std
pusha
push
add
jns
lods
test
and
mov
xchg
mov
lds
lods
sub
cmc
pop
adc
xchg
cmpb
xchg
sti
dec
mov
inc
loop
pop
cmp
loopne
sub
mov
adc
mov
fstl
pop
mov
filds
sub
jg
repz
orb
jne
nop
ds
movl
push
inc
mov
dec
xchg
or
js
loop
repz
jle
xor
xor
imul
adc
cmp
dec
mov
push
xor
mov
in
jmp
addr16
in
pop
dec
es
inc
ret
aam
mov
jno
mov
jb
sub
and
mov
and
shrb
loope
jbe
ret
fcomps
xchg
lods
loop
jne
xchg
xchg
lcall
out
cmp
js
aas
jb
jbe
mov
hlt
or
and
mov
sbb
cmpsl
pop
aas
nop
pop
pop
out
xchg
pop
ljmp
or
das
mov
push
push
push
jns
xor
les
mov
bound
dec
imul
add
je
and
ret
push
cmc
cmp
and
dec
pop
lahf
pslld
and
fwait
and
insl
sbb
xor
es
in
push
lahf
adc
stos
leave
lods
and
mov
out
stc
into
shll
insb
mov
gs
dec
addr16
push
sbb
push
lret
mov
cmc
rcrl
orl
mov
xor
test
cmp
daa
xlat
aam
and
push
and
lahf
movsb
aam
fidivrs
cmpb
pop
xchg
orl
stc
mov
jb
add
pop
repz
dec
push
push
xor
or
mov
jbe
mov
js
mov
jne
not
out
stos
enter
mov
lret
mov
dec
and
mov
leave
jecxz
mov
cli
xor
push
xchg
xchg
push
rcll
rolb
adc
mov
sub
mov
aas
sub
inc
mov
inc
out
adc
gs
mov
leave
faddl
add
shr
andl
jnp
in
or
cld
push
scas
std
test
fsubr
movsl
add
dec
gs
cmp
push
pop
cmp
inc
jle
mov
int3
xchg
pusha
adc
mov
mov
test
sub
sti
and
xlat
adc
adc
add
jns
enter
bound
add
leave
or
ljmp
adc
fstl
push
rorl
xchg
and
fstp
mov
xchg
push
mov
xchg
fstp
fwait
cli
das
xchg
and
arpl
xor
nop
loopne
xor
scas
mov
inc
sarb
sbb
orl
dec
push
int3
sbb
les
fisttpl
mov
cmc
dec
out
xor
into
pop
add
repnz
loope
outsl
jmp
scas
xchg
ds
fwait
mov
and
push
cwtl
test
and
loop
pop
jecxz
adc
pop
popa
mov
sub
fldl
ret
sub
test
add
dec
xor
mov
jno
fadd
inc
fs
cltd
jae
mov
lds
add
mov
ljmp
cmp
cld
inc
int3
stos
stc
adcb
ret
adc
aas
jae
scas
mov
and
pop
inc
in
rcll
call
dec
push
mov
into
pop
loope
adc
gs
jle
push
mov
mov
push
es
sahf
arpl
lds
cmp
inc
adc
pop
and
pop
out
xor
jnp
inc
repz
fsubrl
lret
mov
stc
dec
xchg
lret
mov
data16
lea
xor
test
movsb
cld
jl
cld
fs
mov
cli
xchg
mov
sbb
inc
imul
jne
jle
inc
lcall
jmp
lods
cmpsl
daa
mov
sub
push
pop
clc
ss
lock
out
out
cmp
rcrl
lods
out
cwtl
lock
mov
and
mov
or
inc
xchg
sbb
mov
jle
rol
bound
xor
jo
dec
icebp
sbb
jae
nop
test
pop
lret
cwtl
aas
dec
std
xor
jecxz
pop
js,pt
into
jge
sahf
insb
loopne
fistl
je
xchg
loopne
pop
outsl
sbb
call
xlat
dec
pop
data16
mov
xor
in
out
mov
mov
mov
mov
fsubrs
and
push
dec
aam
add
jbe
add
lods
insb
pop
and
in
cmpsl
int
jb
dec
cmovbe
insl
dec
xor
add
insl
sarb
or
push
jae
add
mov
das
addb
loop
dec
xor
loope
mov
data16
sahf
dec
xchg
adc
pop
loope
sbb
outsb
rolb
call
cltd
jne
loop
sbb
xchg
jb
mov
gs
imul
jb
jbe
pop
inc
shr
popf
jno
pushf
pop
add
aam
inc
sbbl
hlt
sub
sbb
stos
jp
arpl
jmp
outsb
sarb
mov
imul
push
cmpb
mov
push
mov
dec
fdivrs
std
xchg
pop
xlat
cmp
xor
inc
bound
or
lods
adc
test
dec
in
xchg
sbb
or
insl
pop
and
cs
xor
and
jo
test
sub
clc
push
shrl
mov
jbe
rep
mov
jo
test
pop
mov
lcall
xchg
daa
sub
and
mov
mov
arpl
xchg
loop
xorl
mov
and
push
and
pop
dec
sub
shll
pop
push
imul
mov
jo
cmc
push
dec
int
jnp
push
addr16
mov
jbe
push
push
mov
xchg
mov
pop
mov
jmp
aad
test
push
sub
dec
dec
adc
sbbb
xlat
or
mov
outsb
shll
add
icebp
adc
sbb
dec
or
cmp
idivb
jno
hlt
ljmp
push
aaa
push
pop
cmp
push
and
mov
stos
fwait
and
int3
pop
cmp
add
xlat
push
inc
inc
inc
xchg
adc
sbb
fs
fwait
lods
cmp
xchg
rcll
sti
push
stc
mov
and
bound
enter
or
add
mov
and
cmpsl
adc
pop
jg
out
or
pop
insb
jae
or
shlb
cmp
test
pushf
js
push
bound
shll
fcompl
movsl
and
data16
or
mov
ljmp
add
imul
lret
pop
js
cmp
mov
bound
push
cmc
pop
xchg
lret
push
mov
fdivl
jns
popf
gs
fninit
nop
sbb
incb
jecxz
and
jle
mov
lea
mov
insb
jno
rorl
push
fs
daa
mov
fcomip
xchg
cld
in
push
rorl
addr16
xchg
sub
jg
and
xchg
mov
dec
in
dec
xor
test
or
ficoms
fdivrp
into
jl
outsl
xchg
nop
xor
subl
movsl
stos
jmp
mov
insb
cwtl
or
fldlg2
jl
test
sub
jge
inc
jg
add
mov
cmp
adc
jmp
in
scas
popf
fmull
cmc
jb
ret
decb
xchg
aad
call
pop
int
bnd
loope
enter
cmpsb
outsl
mov
adc
clc
xor
sbb
cwtl
pop
psllq
imul
add
pop
cmp
mov
pop
mov
dec
out
cs
cmp
or
push
mov
pop
mov
int
adc
data16
pop
mov
sub
push
mov
adc
jecxz
pop
aam
mov
xchg
or
mov
nop
sbb
lret
rcll
and
xor
mov
loop
icebp
test
jns
mov
or
pusha
outsl
test
std
add
sub
cli
gs
das
add
cmpsb
in
mov
notb
fdivrl
sub
mov
mov
es
mov
cltd
xor
rcl
or
and
rclb
icebp
hlt
mov
enter
cmp
js
cmp
out
mov
iret
test
jl
jbe
rcrb
adc
mov
cmp
and
or
fmul
push
sbb
pop
jb
sub
test
jecxz
sbb
scas
ja
xchg
in
dec
push
pushf
mov
push
mov
push
or
push
inc
mov
pop
lahf
test
xor
lds
mov
mov
fcomps
shrl
sbb
mov
push
dec
mov
pop
xchg
stos
lea
lods
cmp
pop
xlat
gs
fcoml
mov
xchg
or
dec
jbe
push
int
pcmpeqw
stos
int3
mov
inc
orl
xor
out
jns
and
std
enter
imul
movl
push
inc
push
cmp
sbbb
add
in
jle
pop
iret
aaa
xchg
inc
mov
inc
sub
out
imul
addr16
movsb
sbb
leave
dec
mov
scas
xchg
mov
xchg
dec
sbb
adc
dec
add
mov
push
leave
aam
mov
jmp
inc
arpl
stc
mov
dec
mov
int
inc
dec
jg
imul
fnstcw
scas
or
stos
mov
and
mov
add
mov
and
loop
in
cltd
adc
xchg
jns
push
push
arpl
xchg
push
sub
push
mov
lods
shl
push
cmc
sbb
xchg
shll
xchg
insb
sbb
outsb
mov
insl
pop
mov
jg
dec
shll
jno
push
sub
jge
lret
bnd
pop
iret
fistps
push
popf
int
outsb
sbb
rolb
fdiv
loopne
jge
push
rcr
pushf
pop
jb
jl
imul
les
inc
pop
pop
vmovd
add
int3
xor
out
imul
sysret
daa
cs
in
std
sub
test
inc
lcall
lds
push
mov
sbb
and
lret
shrb
cmp
fwait
jp
mov
sbb
xchg
test
dec
fcom
push
ds
and
fcmovbe
iret
cmpsl
push
mov
aam
xchg
adc
popf
mov
fistpl
sbb
add
mov
sarb
aam
jb
int3
fisttpll
pop
stc
mov
add
add
dec
sbb
icebp
cld
xor
fnstenv
inc
pop
lock
lret
or
jge
repz
mov
and
xchg
es
add
sahf
sbb
ficomps
in
dec
mov
popl
mov
ja
xor
imul
mov
jl
ljmp
xchg
inc
mov
movsl
popa
add
stos
xchg
push
mov
mov
pop
inc
pop
mov
xor
pop
out
mov
jge
pop
or
out
xchg
mov
ja
call
hlt
loope
sbbl
sub
outsb
jl
xchg
and
mov
andb
in
dec
sub
xlat
loop
jp
and
repnz
leave
xor
xchg
xchg
jl
sahf
insb
mov
aad
in
xchg
jmp
nop
cmp
push
mov
xor
cmp
por
xchg
xlat
mov
jae
js
mov
in
mov
lea
jmp
das
adc
push
xchg
lret
filds
cmp
jnp
push
jbe
rorb
mov
mov
adcb
inc
scas
jb
mov
push
or
test
jp
test
or
cwtl
or
lock
and
pop
sbb
cmp
lahf
pop
push
cs
cmp
jecxz
push
in
and
lds
mov
das
jecxz
add
rorl
mov
repnz
push
fdivrs
jle
inc
push
test
push
repnz
ret
or
mov
mov
fsubs
insb
pushf
shlb
cmp
movsl
mov
out
pop
fbstp
mov
enter
mov
stos
xor
mov
jae
mov
inc
rclb
jnp
xchg
sbb
pop
fisttps
int3
popf
xchg
or
sti
int
mov
out
adc
lds
fstpl
orl
sbb
outsb
idivb
scas
inc
jne
and
rcrb
and
inc
pop
arpl
ljmp
pusha
sbb
rclb
add
in
addr16
es
cmc
shll
inc
pop
repnz
xor
sub
or
fdivrl
sub
jo
test
loop
cli
sbb
mov
bound
sti
xlat
xchg
cmp
pop
fists
mov
add
sbb
insb
pop
xchg
xor
sub
cmp
mov
fidivl
aas
pop
pop
rorb
adc
loop
aas
mov
jmp
in
icebp
das
push
stos
jae
cmp
pop
sbb
xor
cld
mov
sbb
out
sbb
js
fstps
push
and
loopne
mov
mov
jae
push
inc
std
jno
dec
dec
mov
jb
xchg
outsl
loop
xchg
sbb
jb
lods
out
cmp
xchg
les
xor
cmc
lea
cwtl
lock
cmp
mov
xor
pusha
fdiv
push
mov
adc
xchg
mov
rcrl
push
movsb
pop
sbb
mov
lret
into
jecxz
cs
pop
in
mov
hlt
pushf
test
stos
movsb
adc
add
cltd
lods
rclb
ljmp
arpl
xchg
sti
pop
shlb
loop
mov
bound
movsb
clc
or
xchg
xchg
scas
inc
scas
clc
test
mov
je
xor
iret
jle
mov
dec
int3
mov
or
adc
mov
jne
inc
cmc
enter
inc
inc
sub
sbb
lret
pop
xchg
rcl
jmp
cli
inc
repnz
and
dec
inc
roll
es
jb
jp
and
mov
stc
mov
cmp
test
scas
js
and
push
mov
stc
cmp
insl
ret
ds
in
in
add
arpl
ds
les
cmp
jmp
add
mov
dec
lods
push
jecxz
pop
dec
mov
shll
jg
fiadds
inc
cltd
sbb
in
add
xchg
mov
dec
mov
stc
mov
je
icebp
subb
movsl
dec
and
push
cs
xor
bndldx
popf
sub
cmpsl
add
sub
push
add
or
cmp
mov
jecxz
pop
jmp
dec
test
cld
idivl
pop
cmpsb
lods
sub
jb
pop
into
cltd
ds
cmp
iret
xlat
je
xchg
sbb
scas
movsb
cmpsb
in
push
icebp
xchg
xor
jmp
xor
popf
leave
adc
xor
cld
pop
call
pop
rorb
mov
or
aam
leave
xor
aaa
clc
popf
fisubrl
push
push
clc
loopne
jne
scas
aas
inc
sahf
mov
jge
xor
mov
daa
addb
scas
add
and
cmp
lods
cmpb
pop
lods
sbb
xchg
rcrb
dec
rorl
inc
or
mov
clc
and
pop
xchg
cmc
lret
dec
sti
icebp
scas
pop
test
int
aas
mov
stos
notl
stc
inc
fildll
shll
add
or
je
subl
cmpl
popa
loopne
outsl
js
inc
in
xlat
cmc
cmp
pop
push
mov
aam
lahf
sbb
sbb
test
dec
fiadds
cwtl
cmp
xorb
ret
pop
in
aas
in
push
ja
cmpsb
scas
das
and
dec
pop
inc
rcrb
in
pop
pop
in
push
jno
jg
and
repz
fdivs
cmp
std
outsl
cltd
xchg
dec
push
cmc
cmp
sbb
pop
jbe
outsb
fisttps
daa
loope
add
sub
fsubr
lods
pop
test
sbb
jb
push
jne
orl
adc
and
jg
push
sti
sti
repz
dec
inc
mov
mov
outsl
inc
and
cmp
imul
movsl
test
dec
ficoml
orl
leave
sbb
in
inc
pop
push
imul
pop
or
push
cs
int
cmp
nop
dec
in
inc
mov
dec
mov
pop
push
push
inc
in
cmpsl
dec
cmpsb
jmp
xor
xchg
fsubl
data16
mov
mov
mov
and
fs
bound
les
lcall
cmp
int
ffreep
addb
iret
cmpsl
pop
xchg
pop
lcall
pop
mov
mull
mov
mov
aaa
cltd
sub
stos
mov
pop
das
push
jp
std
inc
repz
xor
insl
pop
dec
test
shll
repnz
or
stos
js
cmp
xor
jl
stos
loope
dec
lret
mov
push
lcall
jae
inc
mov
push
loopne
fistl
cmp
jp
scas
std
int3
pop
or
jno
add
inc
cmpsb
mov
lods
ljmp
hlt
movsl
in
testb
lahf
arpl
dec
out
mov
mov
push
push
cltd
test
push
pusha
inc
adc
in
push
das
xchg
icebp
xchg
loop
lret
cli
jns
sub
inc
lea
cmp
mov
sub
int3
xchg
cmp
xchg
or
or
rcr
jb
popf
and
cmpsb
imul
fsubrp
js
xor
sub
xor
mov
addl
les
sub
call
jle
pop
add
loope
cmpsl
jg
es
inc
add
iret
cltd
pop
inc
ja
fmull
lea
test
enter
inc
mov
add
dec
jae
fwait
xchg
mov
lds
rcrb
mov
dec
outsb
mov
sbb
sbb
xlat
jb
pop
dec
ror
roll
pop
dec
or
dec
pop
push
ds
icebp
push
fs
mov
mov
add
stc
xor
mov
adc
cmp
dec
nop
fdiv
mov
sub
mov
pushf
shrl
cld
cwtl
mov
mov
push
iret
popf
test
lds
inc
lret
lock
in
inc
outsl
test
jbe
fwait
mov
outsl
sarb
sub
push
out
rolb
xor
jg
out
xchg
jge
and
mov
nop
in
cld
fwait
ss
loop
jae
mov
mov
sti
mov
arpl
aaa
dec
and
sbb
mov
les
add
das
hlt
pop
jo
lods
inc
cmpsb
jle
adc
pop
pop
sub
cmc
test
mov
jl
inc
iret
cmp
mov
xchg
pop
shll
stos
fwait
push
into
ljmp
push
mov
imul
hlt
or
test
stc
cli
loop
xor
js
mov
cld
ljmp
mov
out
inc
pop
pop
arpl
aam
add
pop
sahf
sbb
adc
out
fisttpll
cli
push
jmp
mov
jle
xor
arpl
mov
push
mov
push
fwait
dec
sbb
mov
dec
pop
xchg
loope
or
imul
mov
ljmp
jl
cltd
jnp
cmp
lods
or
mov
rcrb
inc
and
mov
jmp
mov
pop
jg
inc
xchg
mov
push
jge
call
jnp
adc
cmp
mov
addr16
cs
fwait
jmp
fsub
sbb
loop
bndstx
dec
pop
add
pop
adc
mov
adc
mov
cmp
loope
cmp
orb
cmp
lcall
xchg
movsl
mov
inc
or
decl
shlb
pop
daa
notb
cmpl
scas
xor
or
inc
inc
sub
imul
nop
pop
movsl
sbb
cld
movsb
dec
into
mov
push
adc
adc
cmp
add
jae
mov
ret
shrb
mov
jle
pop
jnp
pop
xchg
jnp
scas
arpl
push
mov
push
test
mov
test
shlb
or
mov
movsb
inc
jnp
aaa
repz
out
decb
jmp
lahf
into
pop
in
ret
pop
mov
inc
scas
cmp
adc
mov
xor
mov
shll
sbb
mov
xor
xor
or
cmpsb
outsb
sbb
jmp
jmp
jmp
dec
cmpsl
jae
push
cld
nop
or
popl
pop
dec
popf
mov
es
add
pop
pop
sarl
cmp
jnp
test
test
sarb
out
xlat
push
jp
mov
sub
push
adc
ficoms
xor
mov
leave
leave
jmp
xchg
mov
xor
mov
dec
fidivrl
cmp
mov
in
arpl
xor
cld
cmpsl
inc
mov
or
sbb
stos
pop
pop
cmpsl
or
out
das
and
add
sbb
pop
nop
cmp
cwtl
mov
pop
and
ret
add
jae
lock
adc
in
lea
std
sub
movsl
or
testb
and
pop
sub
sbb
pop
loop
outsl
lods
cwtl
inc
xchg
jb
stc
daa
cmp
clc
push
jg
xlat
loope
dec
fidivs
fstps
dec
cmp
pop
mov
jmp
xlat
mov
dec
daa
sahf
sbb
jmp
fidivs
dec
sbb
sbb
xchg
push
jne
mov
mov
and
aas
lcall
xchg
inc
pusha
fsubl
pop
fwait
sbb
jle
inc
xor
insb
sub
or
pop
xor
sub
mulb
scas
adc
or
ss
sbb
adc
lods
jmp
inc
cli
test
xchg
sbb
sbb
or
push
lret
aas
jae
push
dec
add
lea
mov
cwtl
xor
mov
mov
sbb
lods
pop
inc
mov
pusha
cmpsl
inc
jnp
fs
out
mov
cmpsb
shll
mov
push
cwtl
loope
dec
gs
bound
mov
mov
xchg
push
pop
dec
andl
lret
loope
and
out
rol
pop
add
negl
mov
and
push
jmp
das
test
mov
mov
popa
mov
cmc
inc
outsl
out
push
fstpl
xchg
in
pop
sbb
mov
mov
pop
pop
int3
mov
hlt
xchg
add
mov
lcall
mov
jg
pop
inc
out
push
das
xor
cmpsb
cwtl
sbbb
arpl
js
jne
push
inc
pop
jb
iret
rolb
bound
inc
pop
sbb
jp
hlt
cmp
out
cltd
lcall
mov
sbb
fldt
je
inc
fucom
sbb
fisttps
or
and
pop
outsb
jno
or
aas
orl
nop
pop
js
adc
or
movsb
call
ja
popf
inc
push
fucom
out
push
enter
xchg
lea
xor
fcmovnu
in
or
dec
scas
push
jle
dec
int3
adc
xchg
push
pop
icebp
mov
shll
pop
pop
imul
mov
shll
std
loop
inc
jnp
push
push
cmp
xor
mov
push
ret
rcrb
inc
shrl
jnp
pop
inc
inc
xchg
mov
adc
sub
add
js
sub
xchg
fnstcw
adc
sbb
into
and
out
adc
sub
gs
xchg
pop
pop
sub
int
xor
mov
xchg
fildll
clc
lcall
rcll
pop
popa
pop
nop
mov
adc
cmp
inc
and
lret
sbb
out
adc
les
test
lods
divb
jnp
xchg
out
lret
pop
xor
mov
jecxz
mov
mov
ret
cmc
shlb
sub
aad
or
push
xchg
or
addl
push
loopne
ja
xor
ja
popa
lahf
ja
pop
jns
addr16
aam
jnp
mov
cld
fstps
mov
lds
repnz
insb
scas
xor
rcll
hlt
sub
xchg
stos
enter
mov
jmp
mov
mov
inc
sbb
mull
add
sbb
in
daa
pusha
jl
nop
and
jb
mov
div
pop
bound
mov
inc
add
jb
ret
sub
xor
or
sbb
sub
mulb
mov
fimull
xchg
fbstp
cmp
daa
sub
push
mov
push
sbb
stos
bnd
jle
cmpsl
out
ret
lret
fdivl
or
lods
xor
aam
sub
mov
inc
cmp
and
pop
inc
in
dec
sub
sbb
dec
push
jno
arpl
jb
sbb
sbb
cmpsb
scas
arpl
out
cmp
scas
mov
inc
cmpsl
js
ss
dec
or
lods
jle
fucom
jp
adc
push
pop
repz
mov
mov
sub
jo
pop
mov
std
dec
insb
flds
getsec
mov
daa
fwait
repnz
dec
dec
push
pop
jnp
xchg
jae
cmpsl
stc
insl
pop
shlb
addb
mov
into
sahf
add
and
stc
add
stc
pop
std
aas
mov
addr16
xchg
add
int
fsubrp
inc
ds
push
fisubs
mov
mov
inc
pop
sub
cmp
es
push
repz
dec
push
xor
adc
push
jbe
outsb
dec
lock
push
xchg
int3
jl
testl
stos
inc
push
cltd
cld
pop
push
pop
dec
sahf
bsr
lret
xor
jne
inc
daa
xor
cmp
or
test
jo
or
dec
xchg
inc
shlb
nop
div
mov
cltd
dec
push
fdiv
fnstcw
fisttps
add
clc
icebp
repnz
mov
push
add
sbb
dec
mov
pusha
xchg
inc
inc
xor
inc
pop
push
rorl
nop
fstps
sti
xor
jle
sbb
sub
fldl
faddl
pop
and
xchg
sti
lahf
cmp
inc
les
aaa
push
dec
dec
imull
cmpsl
lcall
out
in
test
inc
subl
das
sar
iret
daa
xchg
mov
clc
ret
in
call
mov
fsubrl
inc
sub
dec
cwtl
mov
mov
or
aad
pop
addb
jmp
scas
inc
nop
cmp
cmp
test
xchg
mov
pop
mov
sbb
or
mov
bound
ficompl
js
int3
and
jmp
or
and
ljmp
rcr
and
aad
data16
aaa
pop
fcmovne
dec
jae
push
test
fwait
jmp
out
mov
std
jp
stos
cltd
push
or
ret
push
mov
sbb
jae
add
xor
lock
ja
xor
jnp
jmp
fadds
insl
dec
push
add
repnz
sub
cli
sub
arpl
das
mov
sbb
adc
test
add
mov
push
loopne
sahf
mov
push
pop
out
rcr
shrl
out
ja
int3
ljmp
push
sbb
idiv
ljmp
and
xor
ja
push
mov
xor
and
int3
in
lahf
xchg
int3
mov
inc
pop
mov
or
addr16
test
inc
rcrl
fidivs
dec
jae
addr16
pusha
pushf
cmp
mov
pop
mov
and
inc
pop
jmp
push
aad
jp
loope
mov
mov
in
jg
sbb
push
mov
lods
lret
stos
push
lds
jo
imul
or
ss
outsb
dec
fs
add
movsb
inc
mov
fstp
leave
mov
mov
or
cs
jo
inc
pop
pushf
nop
xchg
rcrb
mov
push
sub
xor
daa
or
sub
mov
in
sub
push
dec
test
jle
xor
jns
lret
mov
mov
mov
pop
pop
out
call
insl
sub
xchg
sbb
xchg
mov
adc
int
js
leave
add
test
in
add
test
enter
in
inc
mov
sub
pop
xchg
xchg
or
movsb
xor
addb
in
add
or
pop
insb
aaa
mov
add
dec
dec
pop
inc
add
test
and
pop
add
push
push
xchg
cli
adc
pop
fsubrs
cmp
mull
sub
xor
lods
and
inc
cmp
xchg
mov
enter
hlt
jae
mov
cmp
call
push
lret
adc
push
jae
jecxz
adc
push
adc
jl
push
mov
mov
push
lods
fistpl
outsb
pop
ljmp
dec
xchg
rcll
mov
stos
pusha
pop
jle
getsec
repz
scas
cld
adc
add
test
lahf
gs
loop
mov
and
aaa
mov
mov
stc
ret
fwait
jl
in
xchg
push
bound
mov
sarb
pusha
mov
fisubrl
das
ljmp
in
mov
loope,pt
mov
jbe
cmp
jle
inc
mov
clc
adc
mov
nop
lea
sbb
xchg
xor
adcb
mov
ret
les
insb
loope
ret
test
cmp
sbb
in
je
cmp
push
pop
adcb
lods
dec
or
out
jb
lea
mov
inc
shl
ret
jbe
and
and
outsb
fwait
scas
cwtl
fldpi
pop
mov
mov
xor
loop
mov
sahf
ds
mov
cmp
gs
inc
inc
mov
mov
pop
daa
into
mov
push
xlat
dec
inc
nop
rclb
xchg
int
dec
push
adc
mov
cmp
hlt
outsl
imul
xchg
pushf
clc
sbb
or
faddl
addb
xchg
cmc
pop
faddl
aaa
mov
mov
pop
mov
ret
mov
and
jg
in
dec
dec
aam
and
negb
test
arpl
and
dec
ficoml
sub
push
repz
mov
dec
pop
sub
pshufw
out
jle
outsb
push
test
dec
xor
push
cmp
pop
add
mov
mov
cwtl
sub
jo
fwait
les
mov
scas
mov
cmpsl
test
clc
sar
xor
int3
xchg
jecxz
cmp
pop
dec
in
push
ss
lcall
sbb
mov
jbe
jne
data16
fwait
out
push
add
clc
cmp
jnp
inc
dec
dec
mov
add
rol
mov
cltd
or
sub
scas
mov
sahf
xchg
xchg
xlat
or
mov
xchg
adcl
pop
mov
lret
out
sub
das
hlt
push
pop
jb
mov
or
pusha
jno
ss
push
mov
add
pop
cmpsl
cmp
divb
test
jecxz
dec
and
cmpsb
adc
dec
mov
mov
xchg
fcmove
ret
push
xor
mov
sbb
out
orl
sti
out
imul
stos
aam
jo
xchg
imul
stos
fidivs
dec
out
mov
test
jmp
out
cmpsb
cmp
adc
push
add
inc
call
push
sbb
daa
dec
sub
jge
adc
or
or
dec
mov
shll
dec
cwtl
dec
xchg
add
daa
mov
std
outsb
bound
fisubrl
sub
xchg
mov
daa
mov
inc
stos
or
or
lahf
xor
or
jbe
sbb
arpl
sub
add
fdivrs
aad
mov
pop
in
and
mov
mov
in
insb
xchg
andb
out
dec
pop
adc
sbb
push
dec
sbb
pop
leave
pushf
out
or
pop
fstpt
sub
orb
out
dec
mov
arpl
loope
mov
jle
adc
rcl
je
pop
lcall
daa
in
xchg
pushf
and
inc
xchg
loope
cmp
shl
xchg
mov
sbbl
insl
pop
sbb
sbb
mov
xchg
mov
push
and
repz
pusha
pop
mov
outsb
cli
pop
and
jmp
dec
sti
out
pop
andl
sbb
dec
rcrl
loop
push
inc
push
cmp
clc
sbb
popa
out
dec
push
sti
pop
das
std
mov
and
cmp
inc
add
aad
sarl
cmpsb
cli
imul
icebp
sti
frstor
ret
adc
sbb
in
in
sbb
mov
mov
pop
jns
iret
sub
icebp
mov
jle
mov
mov
or
and
lods
mov
shl
into
inc
lahf
push
sub
clc
push
xchg
addr16
mulb
mov
jge
call
addr16
jno
xchg
orb
add
push
cmpsl
xchg
fmuls
out
or
fisttpl
int3
mov
push
fisttpll
cwtl
sbbb
xor
push
inc
xor
rol
stos
mov
divl
fistl
pop
and
notb
sti
and
inc
aaa
sub
mov
inc
push
out
mov
inc
enter
or
jp
inc
add
lods
mov
inc
dec
and
and
jg
cmp
inc
adc
icebp
xor
pop
lea
push
push
mov
mov
cli
push
mov
pop
adc
cmp
mov
pop
lods
scas
add
or
push
movsb
call
xchg
fisubrl
icebp
xor
cmc
jmp
adc
adcb
inc
lahf
ret
cli
add
xor
pop
push
popa
jne
out
xchg
mov
cmc
test
insl
sub
lahf
adc
mov
jbe
add
test
sahf
sahf
test
addl
data16
out
dec
pushf
in
lahf
test
xchg
cmp
mov
dec
mov
xchg
aad
mov
ror
scas
xchg
inc
mov
xchg
jecxz
in
cmpsl
incb
mov
lea
hlt
inc
xchg
jo
jecxz
pop
nop
pop
mov
bnd
inc
loopne
xor
sahf
pushf
shlb
xor
in
imul
inc
ljmp
out
cld
mov
ja
out
pop
test
cmp
sub
notb
stos
das
movsl
fwait
dec
mov
mov
sahf
xor
out
mov
cmp
leave
dec
lcall
add
stos
mov
inc
cmp
sbb
ljmp
mov
mov
les
dec
arpl
ja
bound
mov
cmp
xlat
sub
int3
gs
outsb
out
cli
stos
adc
or
fisttpl
cmp
cmpsl
jns
pop
inc
or
bound
mov
repnz
and
lea
jle
push
shlb
or
stos
dec
aaa
aaa
insl
pop
movsl
je
cmp
gs
je
cmp
loopne
cmc
push
popf
dec
in
adc
rcll
or
stc
ljmp
leave
daa
in
sbb
inc
call
in
xor
adc
xor
jns
jb
jmp
mov
sti
add
xacquire
popf
and
aad
inc
add
jecxz
int3
gs
test
mov
insl
sub
sub
sbb
cmp
push
sbb
and
std
pop
rolb
inc
sahf
aaa
push
adc
pop
adc
push
mov
dec
test
lods
and
add
rolb
stos
sbb
push
add
sub
ss
sti
pop
cmc
std
mov
jns
mov
push
or
mov
sbb
and
pop
xorb
xor
shrl
push
iret
sti
mov
mov
std
mov
les
jmp
xlat
lret
jmp
mov
jns
mov
pusha
stc
lahf
xor
sti
mov
inc
pushf
lahf
ja
lret
jle
fimull
hlt
sub
jae
fistps
nop
add
or
push
stc
cmp
xchg
aad
jmp
sub
dec
addl
xor
mov
or
dec
js
jb
cmpsl
mov
rorb
inc
pop
in
mov
hlt
clc
pushf
loope
into
mov
inc
and
fidivrl
inc
pop
test
add
shlb
outsl
out
jne
sub
sub
dec
cld
test
push
leave
sub
mov
cmc
xchg
mov
es
out
mov
pop
lret
rcr
test
pop
xor
incb
setge
mov
adc
adc
or
jbe
mov
jae
cmp
xor
shrl
pop
flds
insb
aas
sarb
pop
aas
adc
fdivrl
xchg
in
sbb
int3
jle
out
pop
aad
mov
inc
ret
xor
shll
or
les
div
mov
sub
jp
ja
lahf
rolb
mov
xlat
xor
popa
or
cmpsb
push
mov
push
lahf
fsubl
pop
repnz
jmp
jb
pop
aam
sti
inc
scas
sbbb
das
js
enter
orl
sbb
cmp
lods
inc
es
or
jnp
push
add
mov
jp
mov
insl
fimuls
lods
dec
shrl
mov
in
jne
repnz
cltd
outsl
aad
push
stos
enter
enter
xchg
mov
jecxz
sarb
mov
push
pop
jbe
cmp
shr
pop
mov
addr16
es
xchg
rcr
mov
pop
fucom
dec
in
sbb
scas
arpl
gs
inc
xor
pop
jecxz
lods
flds
call
jno
xor
or
fnstsw
iret
pusha
push
ja
mov
test
aad
adc
pop
leave
adc
sar
cltd
cli
pop
and
mov
or
mov
enter
ljmp
lret
push
lret
cs
pusha
subl
or
jns
mov
rcll
imul
jnp
mov
push
iret
sbb
dec
adc
das
sub
lds
or
dec
ffree
xchg
repz
push
call
push
mov
pop
sahf
cld
dec
hlt
sub
fwait
les
jmp
aaa
jnp
clc
adc
outsl
test
xlat
and
add
in
mov
lods
cmp
adc
addr16
cmp
mov
adc
mov
dec
push
cmc
popa
addr16
rorl
sbb
xchg
insb
mov
aad
data16
popf
jmp
cltd
jecxz
sbbl
mov
lahf
mov
outsb
fstl
and
sbb
push
test
loope
lock
ret
arpl
sbb
push
xor
les
mov
les
ds
mov
popl
ret
cmpsl
xor
sub
sub
inc
inc
or
lret
lcall
stos
xor
jns
mov
push
gs
push
adc
nop
jl
orl
cmc
xor
mov
nop
cmpl
fs
aaa
xchg
add
jnp
cli
movsb
lock
test
iret
fcompl
sub
gs
push
lods
sub
pop
adc
jae
ffree
fwait
dec
push
inc
add
scas
into
adc
js
adc
xchg
sahf
push
xchg
inc
xor
movsb
pop
xchg
cbtw
push
add
lret
mov
mov
push
pop
sub
aad
add
scas
popf
xchg
or
dec
lea
pop
popl
inc
jle
and
pop
jp
arpl
xor
push
imul
jecxz
push
in
jbe
fwait
push
inc
jno
mov
jmp
pmaddwd
lret
daa
sbb
push
push
outsb
pop
xor
and
mov
leave
loopne
rcll
cld
jp
in
repnz
mov
fildll
push
xchg
mov
sbb
pop
call
adc
cmp
scas
pop
repz
mov
mov
lret
push
outsb
aaa
push
sub
imul
pop
shlb
xchg
add
adc
add
dec
icebp
insl
dec
shll
cmp
imul
mov
aas
std
mov
sub
js
repz
dec
call
push
fidivs
lock
popf
mov
dec
mov
mov
into
mov
xchg
push
xor
fistpl
and
adc
xchg
mov
mov
xor
test
popf
mov
mov
mov
add
fcomi
xchg
ja
and
dec
pop
and
xor
adc
sub
or
popf
dec
call
fidivl
xlat
or
mov
cmp
cmp
mov
mov
movsb
cltd
shlb
fistpll
insb
in
pop
or
mov
cmc
ficoml
mov
jmp
cwtl
jnp
jnp
scas
adc
std
repnz
andb
cwtl
aam
mov
bound
into
jbe
cmp
push
and
mov
push
mov
cmp
insb
fs
std
add
dec
cmp
test
cmpsb
nop
or
daa
pop
xchg
js
pop
sahf
jb
push
and
test
mov
pushf
aam
es
cmp
fcmove
cmc
pop
xchg
jge
or
leave
ds
out
mov
add
cmp
incb
cmp
sbb
adc
jmp
testl
insb
loope
adc
add
cltd
push
jl
test
cwtl
dec
inc
call
lock
mov
out
xchg
cbtw
enter
ret
pusha
loop
sub
mov
jbe
cmpb
inc
xor
pop
int
je
cmpsl
outsl
push
push
jae
int
push
push
cli
add
pop
xchg
xchg
pop
sti
mov
lcall
dec
loop
dec
xchg
and
and
pushf
aam
inc
add
int
aas
sub
adc
jne
or
clc
pop
xchg
xchg
dec
xor
cmp
xor
int3
sbb
and
mov
pop
clc
dec
cs
push
mov
pop
lock
out
cmp
mov
fcomip
in
mov
mov
mov
outsb
out
xor
adc
lds
xor
icebp
mul
in
mov
cmp
adc
andl
lret
nop
and
pop
push
rcll
jnp
sahf
outsl
ror
out
push
xchg
mov
aaa
mov
scas
jno
dec
lea
outsl
bound
push
imul
or
adc
leave
jmp
insb
test
mov
outsl
dec
test
popa
push
sub
xchg
mov
lahf
dec
out
enter
mov
test
inc
push
dec
push
mov
mov
test
lods
sarb
gs
jg
adc
adc
rolb
add
sbb
sub
mov
js
mov
dec
sbb
sub
or
fbstp
lds
mov
loopne
clc
and
fwait
loope
icebp
shl
push
sub
lahf
xchg
mov
push
call
lret
push
fists
mov
gs
or
push
dec
hlt
mov
rolb
sbb
mov
loope
dec
sahf
in
mov
jmp
pop
jnp
daa
add
loopne
out
dec
sbb
ljmp
xlat
fbstp
and
xlat
inc
ret
std
out
cmc
pop
ret
sub
adcl
and
sbb
scas
and
push
and
insb
mov
sbb
lods
jae
psubb
std
rcr
scas
ffreep
xchg
sub
pop
imul
out
rol
jecxz
jmp
jno
pop
push
pop
roll
popa
jl
mov
pop
add
les
pop
pusha
ljmp
xlat
push
mov
in
mov
out
adc
sub
dec
and
mov
test
sub
push
in
stc
repz
aam
xor
xlat
stc
ljmp
sub
mov
inc
fildl
lcall
test
mov
adc
sub
stos
push
cmp
lds
mov
pop
push
and
sarb
orb
xor
lahf
loope
push
fistpl
mov
jecxz
inc
loopne
bound
jmp
imul
aaa
loop
push
adc
push
shrb
les
inc
pop
ret
inc
pop
cmp
mov
sahf
rol
xorl
repnz
stos
outsb
lods
insl
lret
xchg
mov
fstl
push
bound
pop
or
lock
dec
or
insl
iret
scas
sbb
inc
fs
xchg
sbb
pop
out
push
mov
mov
jl
cmp
xor
cmp
sub
xchg
test
mov
outsb
fdiv
jp
mov
cmp
mov
loopne
xor
push
mov
jle
popa
add
iret
sub
and
pop
ljmp
cmpsl
mov
push
push
loopne
out
int
sti
imull
decl
or
outsl
ja
into
pusha
mov
sarb
packssdw
cmp
rcll
int
out
inc
call
add
dec
mov
fcom
psubq
mov
in
pop
xor
jmp
cmp
in
stos
outsb
inc
inc
xor
into
ror
jbe
or
inc
loop
into
lcall
adc
add
pop
cmp
push
icebp
divb
fiadds
rcrl
ficoml
cmp
jl
push
sub
push
mov
int
mov
jmp
sub
add
xchg
addr16
jns
out
fadd
clc
pop
push
xchg
mov
sbb
pop
mov
push
mov
inc
pop
mov
push
adc
aaa
jo
lret
and
fwait
push
cmp
sahf
jp
repnz
push
mov
imul
daa
xor
int
or
mov
subl
or
pushf
xor
pushf
sub
mov
inc
call
xchg
stos
add
sbb
jp
adc
movsb
pop
pusha
cmc
jp
arpl
and
dec
xchg
les
test
mov
arpl
xchg
xlat
jne
inc
cmpsl
scas
loopne
in
xchg
fwait
mov
cmp
and
mov
sahf
mov
ffree
pop
sbb
add
cltd
add
pop
and
pushl
sbb
cwtl
test
jl
leave
loope
add
adc
pop
or
lret
into
dec
out
and
ja
gs
xchg
dec
push
shlb
ljmp
mov
loope
pop
jecxz
mov
push
xchg
mov
xor
push
inc
int3
xchg
push
mov
mov
loop
push
dec
cmp
dec
add
jno
sub
jns
dec
xor
push
nop
and
or
cmp
ljmp
into
xchg
jo
jbe
mov
out
pop
testl
xchg
mov
mov
lods
xchg
sub
aam
lds
push
sbb
dec
inc
dec
and
int3
divl
xchg
jns
ds
mov
cmp
mov
daa
mov
mov
lahf
push
mov
cwtl
push
leave
lret
inc
push
pop
sub
movsl
push
mov
jb
dec
mov
xor
jae
push
cwtl
mov
sar
out
and
rorb
push
cmpsb
popa
out
dec
aad
std
into
mov
insl
push
inc
mov
xlat
scas
add
xor
fdivl
pop
imul
ret
sbbl
insl
push
fnstenv
or
mov
sbbl
jge
jle
push
in
mov
fbld
add
adc
inc
imul
xorb
fs
mov
lock
ret
cwtl
sbb
les
or
out
xor
call
pusha
mov
sbb
xor
push
or
pop
jnp
out
and
jns
insl
aam
inc
mov
pop
in
mov
sbbb
dec
out
data16
xor
lods
andb
inc
aam
cs
inc
jae
pop
mov
cmp
cmp
nop
daa
mov
mov
outsl
data16
mov
mov
inc
mov
sahf
adc
add
sub
es
or
ret
xchg
hlt
adc
and
sbb
pop
addr16
xor
test
or
addr16
out
fsubs
daa
pop
ds
cmp
mov
or
add
fimuls
pop
imul
lahf
dec
pop
cld
and
std
jo
out
stos
adc
les
imul
hlt
push
mov
mov
xor
out
dec
xor
stos
daa
fidivl
mov
and
scas
push
loopne
nop
xchg
popa
insb
and
ds
sub
movsb
sar
imul
lods
cmp
mov
inc
jno
or
sbb
std
loopne
faddl
jl
out
sbb
gs
lock
mov
das
and
adcb
stos
and
sub
mov
jmp
imul
sbb
mov
daa
mov
and
mov
lcall
push
push
dec
xor
push
and
adc
pop
cmp
cmp
stc
mov
jne
repz
ljmp
cmp
cmpsl
aaa
sbb
in
mov
add
in
and
sar
stos
aaa
mov
xchg
or
xor
mov
push
iret
outsl
ret
fisubrs
mov
in
mov
sub
cmp
jo
add
ss
outsb
shll
mov
jp
mov
mov
popf
ljmp
jg
popa
sbb
mov
lods
lock
pop
sbb
sbb
das
mov
icebp
popf
sub
xchg
mov
jge
fisubrs
je
cwtl
test
dec
and
push
rorb
shlb
pop
test
mov
xor
jno
test
jno
bound
loopne
scas
mov
mov
imul
rcrb
punpckhdq
xchg
sub
pop
out
in
xor
cmpsb
test
inc
dec
std
movsb
mov
aad
cmp
loope
loop
aaa
mov
movsl
xchg
add
cmpsl
xchg
mov
inc
shrb
mov
sbb
out
pop
or
ja
aaa
mov
add
test
mov
push
cwtd
jne
movsl
iret
xor
mov
fcomps
ret
cli
enter
aad
inc
lods
es
fildl
mov
add
add
mov
mov
jns
dec
inc
addr16
dec
dec
fisttps
adc
rorb
or
pop
or
and
add
sbb
iret
fbld
sbb
cmp
jnp
fwait
loop
mov
dec
scas
sbb
adc
dec
bound
addr16
addr16
lcall
je
lock
pop
mov
mov
add
std
adc
inc
out
mov
xlat
pop
or
pop
hlt
not
lret
adc
dec
jno
push
fistps
aam
pop
in
es
inc
cltd
add
std
xor
xchg
fbstp
filds
enter
je
cmp
cmp
aas
adc
loope
dec
lock
xchg
sti
jmp
mov
pop
sbb
lret
mov
loopne
mov
outsl
repnz
mov
int3
or
out
out
push
imul
lds
mov
vprotq
lods
xchg
inc
pop
ljmp
dec
aaa
cmpsb
push
clc
mov
xor
sub
sbb
insl
xlat
mov
mov
mov
cmovns
hlt
shr
dec
aas
out
mov
fdivl
iret
pop
fimuls
out
mov
inc
pushf
divl
ret
sti
cmp
jle
mov
cmp
ds
jl
push
adc
mov
stos
add
cwtl
out
sti
mov
sub
mov
and
inc
sub
rol
rcrl
enter
insb
cwtl
dec
sub
inc
rolb
jnp
pop
xchg
sarl
adc
or
jmp
shll
and
fsubs
leave
xchg
icebp
aam
push
pop
add
inc
adc
into
xor
adc
mov
ljmp
lea
sarl
pop
cmp
adc
jns
push
sbb
out
pop
pop
xchg
mov
and
inc
xchg
ds
lds
push
mov
push
mov
xchg
popa
movsb
xor
std
movsb
xor
jl
dec
push
and
stos
or
aaa
sub
sahf
shr
pop
clc
outsb
add
lahf
xchg
pop
jp
addl
insl
negl
jae
cmc
mov
xchg
ret
add
mov
add
dec
out
ret
das
jo
mov
mov
cs
pop
out
xlat
aaa
cmpl
pop
xchg
loop
lods
and
stos
or
clc
dec
adc
dec
insb
cmpsb
enter
es
pop
sub
or
into
add
jecxz
hlt
or
or
shrb
pop
popf
xor
insl
lods
adc
cmpsb
xor
and
push
pusha
rclb
std
mov
mov
and
leave
rcl
popa
and
fisubl
jl
cli
sbb
inc
shrb
lods
stc
cmp
ss
push
cld
leave
mov
xchg
inc
sub
sub
jo
push
sbb
push
or
dec
or
xor
or
insl
shr
ret
or
adc
adc
filds
push
push
fldcw
sub
cmpsb
push
test
ret
inc
jp
arpl
jno
cmp
sbb
mov
outsl
fidivrl
xchg
xchg
mov
lcall
and
std
stos
cmp
and
lcall
test
mov
inc
scas
hlt
jne
outsb
push
mov
lea
js
xlat
std
cmc
lret
mov
pusha
sub
sub
in
sub
repz
push
cwtl
insl
fwait
lahf
icebp
inc
lret
ljmp
cmp
mov
pop
or
psubusw
sbb
push
ret
movsb
jg
ss
xchg
mov
lea
sarl
add
les
cltd
ja
cmp
mov
cmpsl
inc
xrelease
fwait
jae
outsb
mov
inc
cmp
sub
cmp
jmp
sbb
mov
adc
mov
roll
fisubrl
xchg
mov
cmp
sbb
push
out
leave
outsb
scas
or
cmp
mov
inc
inc
rcrl
push
dec
lock
and
sub
jns
scas
sub
les
xor
cmp
jns
jns
ror
aam
mov
pop
dec
cmc
sub
test
or
ret
fists
insl
dec
jb
loope
fwait
idivl
lock
js,pn
pop
mov
xor
mov
jge
jns
nop
mov
and
jge
add
testb
ds
dec
mov
mov
sub
imul
imul
test
loop
lret
loopne
sub
mov
ja
adc
dec
jbe
xor
jl
sahf
xchg
lret
inc
hlt
repnz
fwait
xor
bt
jge
leave
jae
filds
pop
addb
mov
dec
dec
mov
enter
fbld
in
repz
test
ret
dec
popf
gs
cmp
out
mov
mov
adc
pop
cmpsl
dec
call
stos
pusha
out
fisttpl
aas
mov
stos
and
xchg
lock
sbb
xor
sbbb
pop
mov
xor
aas
orl
adc
adc
adc
or
push
pop
test
mov
and
jle
mov
add
xchg
dec
inc
add
xchg
cmpsl
mov
enter
xor
push
sti
out
dec
inc
and
movsl
and
add
fs
je
mov
addl
jns
movsb
xor
iret
aas
push
test
adc
xchg
lcall
mov
loope
jno
push
std
mov
pop
mov
lds
push
sarb
xchg
xchg
xor
out
arpl
aam
or
and
xor
lret
xchg
adc
arpl
push
jl
mov
rorb
sbb
mov
nop
pop
lods
xor
hlt
test
push
mov
stos
adc
out
xchg
pop
mov
lds
pop
aaa
in
mov
xor
aam
pop
leave
in
jecxz
and
int
mov
ds
insl
mov
inc
lahf
adc
xchg
iret
lcall
xor
or
mov
outsb
and
ja
mov
inc
sarb
pop
mov
dec
mov
andb
adc
and
mov
fisubrs
xor
sub
pusha
xor
fstpt
xchg
std
lods
jge
outsb
mov
inc
xchg
mov
in
mov
outsl
loop
sbb
pop
push
xor
aas
mov
insl
mov
int
xchg
push
shlb
and
aad
fwait
lret
push
or
call
stc
test
inc
cmp
fisubs
dec
mov
lret
adc
in
inc
cltd
ds
pop
push
gs
jl
test
mov
insl
fsubrp
into
dec
add
push
clc
push
aas
addr16
adc
pushf
pop
xor
ja
mov
movsb
inc
push
fwait
jo
mov
lcall
mov
iret
inc
aas
jl
gs
mov
sub
mov
dec
adc
popf
mov
adc
in
in
cmp
lahf
pop
not
cmp
push
push
inc
clc
sahf
mov
adc
mov
mov
fdivrs
xor
dec
out
jae
inc
push
mov
mov
cwtl
cmp
into
xchg
xor
mov
test
fstl
pop
jae
push
xor
enter
jae
push
sbb
cmp
test
push
and
pop
cmp
call
clc
jmp
movsl
xchg
push
inc
stos
aam
jg
pushf
push
pushf
adc
pop
lock
adc
std
mov
inc
jo
data16
xchg
jne
cmc
test
out
clc
inc
fcmovnu
add
leave
xchg
inc
cltd
and
jne
or
dec
fcmovnbe
stos
clc
sbb
xchg
push
loop
sbb
ja
sbb
or
sub
movsl
int
push
in
sub
insl
mov
add
mov
mov
stc
xcrypt-cbc
cmpsl
adc
adc
aaa
adc
addr16
loop
call
sbb
sbb
and
mov
aad
jecxz
dec
cwtl
mov
clc
or
push
xchg
fdivrs
push
cltd
adc
sbb
sbb
mov
loope
sti
nop
xchg
adc
cmc
xlat
negb
add
leave
cmp
xchg
adc
repz
into
push
inc
add
jle
cmp
sbb
pop
sub
mov
mov
call
sub
xor
cmp
push
mov
jle
je
jne
dec
inc
test
stos
dec
es
mov
adc
roll
mov
adc
add
xchg
inc
cwtl
adc
pusha
jge
hlt
add
cwtl
sub
xlat
pop
scas
mul
aad
pop
xor
and
decl
xor
lods
popf
or
push
mov
inc
je
mov
pop
fidivrs
fcom
lret
add
inc
or
ljmp
push
adc
jl
and
outsl
dec
out
mov
jmp
aaa
sub
adc
les
in
enter
arpl
push
pop
ds
ljmp
adc
push
outsl
or
insl
xor
cmp
pop
rorb
cltd
mov
mov
adc
pop
in
das
push
jnp
jmp
cmp
add
mov
bound
jb
cmp
adcb
jle
fstpt
xlat
jb
into
and
movsb
mov
pcmpgtb
shrb
add
xor
xchg
leave
into
in
inc
add
cmp
mov
fiadds
rorl
rcll
lock
popa
ljmp
lods
inc
sti
dec
jns
push
xor
jb
shll
dec
out
push
mov
scas
fildll
aad
jnp
shr
scas
and
mov
mov
test
jnp
pxor
xor
and
inc
cmp
push
jl
inc
repnz
scas
nop
fstl
push
ss
loopne
pusha
test
push
pop
sahf
push
cli
mov
jo
testl
sub
jne
inc
sbb
add
cmp
pushf
subb
out
or
mov
pop
addr16
cwtl
in
mov
mov
clc
jnp
xchg
mov
fistl
hlt
lahf
sub
ret
mov
shlb
fucomip
mov
push
add
push
out
scas
inc
ret
adc
cmp
pop
imul
cwtl
cmp
pop
mov
push
pop
imul
outsl
mov
sbb
ret
test
push
mov
inc
frstor
cli
and
and
shlb
out
jns
adc
push
and
shr
push
jbe
mov
addr16
mov
imul
insl
jle
dec
lret
dec
xor
cmp
imul
jecxz
dec
fidivrl
mov
idiv
push
ret
sbb
add
cmovnp
fisubrs
xor
addr16
rcr
mov
jmp
outsl
sub
jg
fidivrl
ja
xchg
sbb
sbb
push
arpl
ficomps
std
stc
push
repz
cli
pop
aad
fwait
push
inc
pop
sbb
push
gs
jae
and
mov
push
push
jnp
das
sarl
nop
or
inc
mov
inc
jmp
sbb
push
lcall
pop
jbe
pop
out
lods
dec
pop
add
pusha
rcl
inc
mov
mov
add
xchg
std
xlat
add
rclb
sbb
mov
inc
add
imul
and
test
in
mov
stos
insb
mov
jmp
gs
pusha
bswap
outsb
dec
rcr
aas
and
sub
dec
mov
shl
cmp
mov
jns
imul
and
loope
insb
aaa
dec
cmp
inc
ret
jl
jbe
std
pop
shl
lahf
push
jae
aaa
lret
pop
mov
sbb
loopne
dec
ret
incb
mov
mov
fmuls
fcomi
enter
aas
icebp
sbb
and
dec
sbb
in
adc
mov
scas
out
lds
push
xchg
pushf
and
xchg
push
cmp
mov
push
lods
mov
dec
mov
sub
in
imul
push
xchg
insl
movsl
push
push
jnp
hlt
jo
movsl
inc
dec
mov
adc
test
fcoms
shlb
cli
stc
xor
pop
test
cmp
and
sbb
lret
arpl
mov
mov
sub
out
push
clc
jge
mov
mov
icebp
fbld
scas
push
stos
mov
cmp
repnz
mov
call
lahf
jle
xchg
push
pop
xchg
fcos
add
fstpl
jns
push
lahf
mov
mov
int3
xor
popl
mov
jno
xor
bound
int3
mov
cmp
lods
jl
dec
loopne
scas
out
lret
subl
xchg
lret
cwtl
lcall
xor
jl
xchg
mov
mov
sbb
in
ret
add
call
lods
jae
into
mov
add
lcall
lods
movsl
ret
and
lcall
sub
add
popf
sarl
fildll
jmp
bound
sub
xorl
cmpsl
xor
pop
test
inc
cld
mov
cltd
push
cmp
pop
test
cmp
shrb
and
dec
mov
mov
or
mov
in
jge
adc
xor
pop
test
sahf
push
pop
sub
stos
push
mov
ret
sub
hlt
push
xor
jmp
add
fiadds
rcl
inc
xchg
mov
adc
mov
sbb
cmp
lock
imulb
sub
rorb
fadds
push
adc
dec
push
cmpsl
sub
outsl
mov
subl
imul
or
jns
repz
leave
cmp
aaa
pop
in
cs
inc
cltd
arpl
daa
out
aaa
mov
inc
and
popa
mov
lcall
adc
xchg
cwtl
nop
sbb
fisttpl
mov
sub
hlt
das
icebp
dec
push
pop
jnp
test
adc
popa
or
daa
inc
out
and
pop
lock
dec
decl
lcall
cmp
stc
mov
dec
mov
jnp
lods
icebp
inc
sbb
out
or
repz
pop
push
inc
out
orl
and
lods
mov
out
jg
add
test
dec
cld
scas
cltd
js
adc
dec
dec
or
mov
pop
fildl
fiadds
add
ret
cmp
roll
lret
pop
xchg
movsb
or
insl
and
mov
arpl
xor
inc
sub
xchg
out
popa
mov
push
popl
push
in
fcom
or
out
and
add
and
mov
jle
daa
mov
mov
fadd
test
lret
cwtl
cmp
add
mov
daa
xor
push
insb
pop
xor
or
hlt
sub
bound
fdivl
fwait
cwtl
mov
shrl
fbstp
adc
pop
rorl
addl
cmpsl
subl
or
dec
mov
and
sbb
sbb
sbb
sbb
ljmp
inc
cmc
sbbl
adcb
jo
test
ret
hlt
xchg
sub
adc
jmp
and
mov
jb
adc
jbe
cmp
cmp
jnp
pop
mov
push
xlat
in
cltd
hlt
rolb
leave
inc
das
stos
mov
sub
cmp
jno
out
js
idiv
js
dec
out
mov
ror
ds
das
mov
jl
fdivr
adc
jg
cmpsl
mov
imul
nop
inc
pop
or
mov
dec
or
jle
sar
stc
cmpsb
loopne
or
lock
adc
fstpt
fsubrl
mov
sub
mov
adc
xor
mov
xor
arpl
mov
inc
in
idiv
arpl
xchg
xchg
jbe
or
dec
xchg
cmp
std
and
aaa
popf
dec
in
push
pxor
leave
or
jns
inc
nop
fbld
add
push
mov
mov
outsb
lahf
aas
fwait
pushf
jno
add
out
add
jno
in
jne
push
das
lret
add
out
mov
xchg
push
xor
pop
dec
mov
std
es
hlt
fimull
cs
sub
cmp
and
mov
lret
and
hlt
stos
cmpsl
jge
lds
cmp
sbb
adc
mov
inc
adc
cmp
icebp
xor
adc
mov
std
ds
push
int
or
push
sub
negl
dec
mov
jo
ds
xor
add
sbb
xchg
fxtract
xchg
mov
sub
out
and
in
loope
mov
fcoml
jbe
mov
mov
movsb
mov
cmp
push
fwait
jp
addl
leave
jae
add
adc
jns
subb
out
loope
mov
cs
sbb
fcomps
jno
es
mov
xor
in
in
pop
popl
test
pop
cmp
xchg
cmp
lds
dec
in
mov
ret
enter
loop
frstor
insl
enter
adc
roll
and
shrb
push
call
sub
xor
mov
ret
xlat
xchg
sbb
or
mov
lea
dec
js
adc
das
cld
test
push
jb
test
imul
cmp
mov
data16
imul
mov
daa
cmpsl
pop
movsb
addl
fmulp
shlb
and
lds
es
mov
mov
fs
jl
fbstp
adc
or
mov
mov
test
bound
mov
push
loopne
ljmp
dec
and
cmp
lret
jg
jae
xchg
mov
xchg
inc
jbe
and
and
cli
fidivs
xor
mov
xor
out
adc
and
sbb
dec
psubsb
mov
cltd
ja
sub
dec
dec
cmp
mov
push
out
pop
jae
mov
and
fs
insb
mov
xor
arpl
cltd
cmc
cld
cmp
sbb
fistl
das
mov
inc
insl
popf
sub
clc
xchg
push
les
lea
in
in
cmp
dec
mov
adc
std
add
mov
adc
ja
pop
xor
subps
imul
mov
xchg
mov
fdivl
mov
jae
fildll
mov
cld
xor
xor
and
adc
cmovo
adc
stc
cmp
xchg
dec
fidivrs
mov
xlat
std
movsb
xor
mov
jecxz
lods
daa
or
add
pushf
xchg
sub
push
push
gs
mov
lock
dec
inc
ret
cli
lods
jmp
lods
adc
xchg
inc
js
mov
jp
rcrb
insb
sub
test
divb
jb
sub
and
fs
pop
movsl
inc
pop
outsb
roll
push
xor
sub
fidivrs
pop
out
xchg
lret
movsb
bound
jg
sub
cwtl
imul
or
xor
inc
inc
cli
or
cmc
xchg
mov
jo
outsl
mov
mov
mov
lds
xor
or
jb
enter
nop
int
dec
addr16
clc
pop
inc
testl
ljmp
cmpsb
inc
mov
lret
jge
sbb
adc
popf
cwtl
adc
push
mov
out
sub
je
inc
sbb
scas
cmpsb
mov
xor
cld
repz
outsb
outsl
xor
clc
sub
sub
insb
jge
stos
mov
jecxz
std
or
pop
sub
imul
je
sub
hlt
clc
lahf
gs
fnstcw
jno
ss
sbb
mov
add
stos
pusha
and
or
add
and
adc
sbb
pop
push
orl
test
xor
push
out
shlb
ds
icebp
or
inc
adc
dec
and
int3
ss
dec
xchg
imulb
out
push
movsb
jl,pn
das
loopne
push
mov
scas
inc
imul
movsl
mov
adc
adc
je
lret
dec
and
pushf
xlat
gs
fwait
rcl
xor
loopne
xor
adc
rolb
arpl
iret
mov
fwait
mul
or
fs
xlat
inc
stos
push
fs
aaa
in
cwtl
push
dec
out
jle
inc
mov
and
add
dec
hlt
ud1
lods
ret
add
add
je
jmp
aad
cmp
push
sub
inc
pop
lods
es
sub
std
push
outsl
pop
or
cmc
das
xchg
fs
aam
inc
cmpl
subb
gs
xor
fistpll
shr
xlat
clc
or
xchg
push
lea
imul
jl
dec
mov
pop
push
cmp
mov
cltd
mov
xchg
push
shll
pop
lret
cmpsl
adc
fcmovbe
clc
push
xchg
mov
scas
pop
or
sbb
cmp
fs
arpl
sbb
ret
lock
mov
cmc
push
outsl
fimuls
mov
pop
hlt
hlt
adc
sbb
jle
sub
in
push
popf
lret
popf
rclb
in
fstp
movsl
add
jae
rolb
sub
or
push
fldcw
pop
bound
aas
xor
ret
out
insl
inc
cmpsl
jecxz
adc
add
inc
jecxz
lock
xchg
popf
jg
push
fwait
std
push
push
add
xchg
jmp
outsl
mov
add
lds
mov
sub
pop
daa
mov
stc
scas
xchg
cld
xchg
jp
stos
cmp
cld
sub
sarl
fidivrl
jne
jno
push
and
cli
cli
cmp
push
add
pop
iret
jns
and
data16
imul
mov
roll
add
push
pop
mov
outsb
sub
arpl
or
sub
sbb
or
out
inc
fldenv
jmp
fstpt
rclb
bound
and
in
test
sub
out
mov
imul
jo
fsubs
mov
dec
imul
xor
pop
cwtl
stc
mov
cli
jb
adc
in
dec
jbe
or
lret
or
or
divb
stc
jns
xor
inc
xchg
xor
cmp
lea
or
lods
and
push
int
loope
repnz
adc
pop
and
mov
stos
popa
mov
xor
or
aam
loop
lret
mov
jl
adc
ja
popa
cmp
push
and
lea
mov
bnd
inc
jmp
lret
mov
sbb
aad
pusha
mov
fidivl
std
leave
addb
pop
loope
stos
das
hlt
or
lods
mov
mov
rorb
popa
xor
push
xor
sbb
push
cmp
xchg
cwtl
xchg
jno
out
imul
dec
in
add
dec
ja
xor
popf
mov
xchg
test
mov
insb
jb
sub
mov
clc
and
xor
cmpl
add
push
int
inc
pop
leave
js
shlb
shlb
fcomip
repnz
or
dec
jg
mov
lcall
outsb
xor
repz
notb
sarl
pushf
test
hlt
pushf
inc
cld
lret
inc
adc
xchg
ret
sub
es
xchg
iret
imul
mov
roll
ret
sahf
imul
lahf
testb
mov
xlat
jns
mov
xchg
adc
popa
add
jle
sbb
pop
test
stc
mov
xchg
aas
jp
add
into
nop
cmp
dec
jns
fldenv
int
shlb
ljmp
ret
or
or
push
inc
rol
push
sbb
inc
iret
mov
fidivs
scas
cwtl
mov
push
push
jbe
mov
pushf
xor
push
push
fisubrs
incb
mov
push
push
idivb
or
dec
push
adcb
sub
adc
fldl
ret
pop
xlat
repz
int3
sbb
rolb
ffreep
out
push
mov
ja
lods
mov
jl
nop
imul
cmp
fmull
dec
mov
push
mov
repz
ret
push
outsb
inc
inc
out
in
jg
and
jecxz
push
push
cmp
sub
push
and
cvtdq2ps
jmp
cmp
or
aas
push
cmp
test
les
add
adc
test
mov
sub
mov
paddw
add
cmp
mov
icebp
jbe
jle
testb
in
idivl
mov
aas
ds
fisubrs
and
pop
jl
pop
fwait
sbb
or
jecxz
js
adc
mov
pop
or
ret
mov
and
pushf
aas
jne
push
jg
sbb
ret
cmp
xchg
adc
jnp
addr16
mov
cmp
jle
das
leave
adc
xorb
pop
icebp
dec
mov
shr
sub
test
ss
test
dec
inc
mov
lods
popa
sbb
movsl
psraw
popf
sbb
xor
add
cmp
sbb
out
aam
cld
ljmp
outsl
lds
pop
jae
jle
rorl
or
enter
mov
or
mov
sub
fsubrl
int3
movsb
sbb
mov
pop
popf
mov
adc
sbb
xor
or
xchg
mov
mov
shl
out
inc
xor
lods
mov
add
xchg
xchg
or
pop
test
cltd
mov
sbb
and
or
insb
cld
add
mov
insl
jmp
rcll
pusha
dec
xchg
outsl
sub
fisttpll
orl
loopne
lret
sbb
mov
movsl
pop
arpl
jne
xchg
xchg
outsb
bound
es
push
xor
pop
cltd
mov
add
repz
movsb
std
aad
dec
sahf
cltd
insb
fbld
jge
xor
push
sub
cs
mov
aad
xor
xchg
xor
lahf
push
jg
mov
sti
sbb
fnstcw
mov
xchg
xchg
adc
mov
pop
cwtl
scas
cmc
jbe
mov
sub
xchg
loopne
cmp
sarb
push
sahf
pop
cmp
sub
sub
mov
icebp
sahf
mov
sbb
mov
mov
aad
pushf
out
or
test
ror
jecxz
leave
test
sub
mov
adc
outsl
pusha
inc
loope
mov
or
sbb
pop
lods
mov
sbb
pop
aad
add
enter
insl
enter
or
shl
mov
mov
cmp
push
cwtl
pop
popa
pop
xor
jmp
js
lods
mov
cli
test
inc
sub
mov
inc
hlt
add
mov
or
jb
arpl
jb
test
sub
pop
sub
ret
mov
arpl
pop
inc
test
jno
arpl
aaa
push
insb
inc
ret
jne
sbbl
sbb
iret
out
cltd
ficoms
iret
aaa
cmp
fsts
mov
iret
xchg
out
mov
inc
stos
adc
addb
loope
sahf
in
push
mov
add
mov
mov
ja
mov
push
or
mov
sbb
leave
das
xor
mov
jg
je
pop
and
pop
cwtl
frstor
loop
clc
and
shrl
jb
mov
call
mov
or
aad
lcall
dec
shr
movsl
inc
ljmp
dec
or
inc
cltd
cmpsb
xchg
cmp
sbb
ror
pop
rcll
jbe
cmpsl
aaa
stos
fs
jecxz
clc
push
in
sbb
mov
movsl
push
inc
out
ja
mov
inc
sbb
pop
movsl
xchg
push
sbb
outsb
fs
adc
addr16
or
sti
rclb
cwtl
test
imul
cmp
lahf
fdivs
call
pop
lock
cltd
mov
lock
arpl
imul
rcl
and
fsubrp
inc
sbb
jg
and
mov
mov
xor
scas
insb
fistpll
push
xor
lret
mov
icebp
and
sahf
lret
mov
xchg
mov
push
inc
lods
loop
hlt
push
or
test
lahf
dec
fsts
jne
inc
pushf
repz
cmpsb
cltd
ja
add
enter
or
rcrl
arpl
xchg
dec
jne
cmp
ss
clc
pop
sbb
leave
rcr
imul
and
bound
in
sub
sahf
enter
mov
out
insl
jnp
dec
sbb
loope
std
out
cmp
pop
int3
repnz
std
xor
mov
fisubl
jp
and
jo
push
dec
inc
xor
lds
xchg
sub
rcl
xlat
movsb
add
nop
cwtl
adc
and
clc
jae
fildl
ja
lds
cld
inc
loopne
notl
lcall
scas
bound
cmp
jae
cli
gs
jnp
push
mov
lcall
jns
imul
imulb
mov
pop
rcrb
mov
test
mov
jmp
pushf
add
and
cwtl
sbb
sub
or
iret
in
lahf
jae
loopne
cmpsb
dec
test
add
rolb
add
sbbb
sbb
out
loopne
hlt
jl
enter
xlat
jns
and
pop
fadds
imul
jno
ficomps
negl
out
fimull
lock
cmpsl
dec
lock
fs
sahf
subl
sub
stos
aam
lock
lahf
test
push
gs
shrb
out
pop
and
es
pop
xsha1
cmpsb
lret
xchg
push
sub
test
out
cmpsl
pop
jae
xchg
push
push
rcr
add
mov
pop
lret
cli
mov
jl
dec
mov
test
andl
out
mov
je,pt
sub
mov
sub
inc
movsb
lret
jl
adc
mov
add
xchg
mov
je
sub
add
xlat
mov
xchg
leave
and
adc
sbbb
push
ret
inc
lock
ret
hlt
setno
adc
push
pop
pop
push
cmpl
pop
adc
test
ljmp
xor
sbb
jp
mov
and
leave
mov
ljmp
push
add
jg
sbbl
and
xlat
push
mov
mov
in
or
cmp
loop
push
movsl
jmp
dec
and
movsb
mov
mov
clc
adc
fucom
pop
es
push
pusha
mov
cmpsb
inc
lahf
mov
dec
je
icebp
arpl
inc
lea
mov
xchg
in
dec
jnp
hlt
jnp
mov
das
and
adc
mov
dec
add
lahf
mov
fildl
add
adc
bound
and
ret
dec
js
insb
movsl
imul
sahf
cld
push
xchg
mov
mov
stos
shl
add
pop
out
adc
dec
inc
test
xor
fsts
mov
xchg
sbb
ss
lea
push
push
add
xchg
mov
popf
push
in
push
repz
xor
insl
imul
ljmp
mov
std
adc
es
jae
jo
xchg
xchg
dec
in
hlt
xchg
lds
add
clc
adc
sub
mov
jb
sbbb
fdivrp
push
push
sbb
push
gs
mov
sarl
lock
mov
in
pop
sahf
pop
lods
add
jbe
xchg
in
je
and
shlb
mov
into
scas
jecxz
xor
adc
adcb
mov
mov
fistps
xlat
fs
pop
je
mov
cmpl
mov
test
xor
mov
ficoms
out
std
xchg
mov
inc
mulb
mov
jb
ss
rclb
aam
test
pushf
icebp
daa
jecxz
int
xor
test
test
inc
add
cwtl
xchg
jl
lock
cltd
xor
call
xchg
adc
sbb
cld
sarl
ja
mov
jmp
imul
mov
xchg
xchg
movsl
and
lods
xchg
xor
adc
jb
cwtl
push
out
and
xor
leave
jp
cwtl
test
addr16
ss
jbe
outsb
aad
int3
outsb
icebp
and
rolb
adc
sbb
cmpl
out
fcmovne
jl
mov
and
add
push
push
fsubrs
cmp
cltd
notl
mov
rcrb
mov
dec
xlat
xor
cmp
push
pop
pop
and
lods
lds
mov
in
inc
push
scas
or
or
or
out
pop
rolb
stos
pop
mov
lods
xorl
sbb
mov
gs
mov
cld
add
insb
dec
pop
das
sbb
cmpl
enter
pushf
loop
shll
jl
out
add
in
inc
push
xor
or
sub
push
daa
hlt
xchg
lds
inc
pop
les
sti
mov
clc
nop
test
loope
imul
cmp
pop
jle
push
movsb
jmp
out
xchg
int3
jns
xor
xor
xchg
mov
sub
stos
shrb
cmp
sbb
pop
jb
int3
repnz
mov
sbb
sti
inc
jbe
xchg
or
inc
mov
mov
into
fisubrs
loope
inc
push
add
fidivrl
gs
xchg
mov
loope
shlb
xchg
ret
xchg
in
lret
pop
movups
xor
xor
inc
xchg
cld
jo
xchg
mov
push
inc
scas
cmp
sub
mov
ret
mov
rcl
add
push
movsb
jnp
fwait
jnp
or
dec
xor
enter
int
sub
in
push
jmp
xor
test
aam
sub
add
jne
add
adc
add
shl
adc
mov
lds
enter
mov
fldl
dec
sub
sub
sbb
loop
ret
rcr
mov
cmpl
cs
ror
mov
pushf
daa
jle
sub
fs
and
mov
subl
jl
inc
aam
mov
lcall
push
test
xchg
dec
shlb
mov
or
and
jmp
jg
jno
orl
fdivl
jbe
and
push
push
mov
push
mov
out
pop
and
jmp
sti
and
mov
lods
push
mov
scas
ror
dec
repnz
mov
aaa
mov
or
xchg
xchg
add
mov
jbe
and
mov
mov
add
dec
inc
bnd
lcall
lahf
jmp
pop
es
sbb
mov
xchg
in
pushf
movl
lret
or
or
sbb
mov
sub
imul
mov
je
push
mov
dec
insl
aas
fsubs
lahf
and
xor
movsl
out
pop
js
popf
mov
sub
aam
xchg
adc
rorb
enter
pop
jg
push
cmc
pop
stos
in
sub
aaa
mov
leave
sub
div
int3
adc
mov
aaa
mov
add
xor
es
inc
inc
inc
pop
dec
popf
iret
jne
xchg
inc
and
in
jmp
mov
inc
xlat
add
jbe
push
xchg
mov
add
push
add
xor
or
push
rcrb
test
push
xor
icebp
sbb
lds
test
adc
mov
xchg
hlt
fsubp
loop
aad
outsb
pop
and
inc
loopne
and
scas
or
lcall
lret
mov
mov
inc
lock
and
es
push
sub
or
insl
jb
test
ja,pt
ffreep
sbb
aad
sbb
stc
dec
out
adc
lcall
sub
cmpsb
imul
repz
enter
insl
aaa
pusha
jecxz
inc
shll
pushf
pop
addl
leave
inc
jp
pop
ss
and
divb
adc
enter
xor
xchg
cmp
xchg
mov
push
into
or
sbb
mov
mov
fucomp
cmp
sbb
add
xchg
test
into
out
andb
dec
xor
jae
fisttpl
or
dec
cwtl
mov
enter
lahf
js
mov
sub
pushf
mov
xlat
gs
mov
loopne
addb
pusha
sbb
xchg
mov
cwtl
cmp
xor
loope
xor
int3
xchg
xor
mov
jb
shll
in
leave
cs
dec
ja
sub
hlt
mov
jo
in
out
push
inc
xchg
imul
aaa
mov
daa
mov
imul
mov
pop
lds
mov
lods
dec
dec
pop
outsl
into
xchg
mov
xlat
dec
repnz
xchg
mov
mov
mov
sbb
les
mov
fcmovne
mov
gs
jmp
mov
les
add
xchg
outsb
cld
aas
push
inc
inc
jecxz
pop
sbb
xor
cmp
stc
add
rcrb
faddp
fcomi
mov
push
and
nop
nop
pop
or
adc
xlat
clc
pop
ret
mov
sub
dec
fstl
repz
int3
loopne
jecxz
cmp
insl
push
inc
xchg
and
push
mov
loop
inc
xor
dec
sub
sbb
and
pop
imul
call
pop
js
pop
cwtl
addr16
pusha
jo
add
cmc
pop
sahf
in
jno
jo
scas
push
stos
lock
mov
xchg
xor
and
out
cmp
popa
aam
aaa
pusha
ds
pop
daa
aas
pop
gs
movsb
mov
jo
pop
cmp
jmp
mov
aam
pop
ss
xchg
sbb
cs
inc
jbe
mov
xchg
pop
movsb
ljmp
stos
xor
sarl
inc
aaa
dec
inc
jno
into
inc
add
jae
or
add
les
cmp
mov
xchg
sub
scas
push
cmp
jl
lods
lock
adc
inc
sahf
mov
outsl
gs
xchg
pop
sbb
pop
adc
mov
test
icebp
and
xrelease
inc
or
ljmp
sti
pushl
rcl
lret
popf
aaa
mov
dec
sub
dec
mov
lds
jno
xchg
inc
or
sbb
inc
or
xchg
pop
imul
leave
jo
out
inc
inc
cmp
das
cmp
ja
enter
add
sub
cmpb
les
mov
lds
jae
jle
push
mov
xor
jle
cmp
aas
leave
add
mov
adc
rol
mov
sti
in
fistps
call
lods
std
or
push
jno
rclb
lret
cltd
je
add
test
es
es
or
inc
xlat
or
loope
outsl
push
scas
jns
cmpl
or
out
xchg
jge
sub
mov
clc
outsl
xor
into
mov
jmp
dec
rol
out
js
fildl
and
fildll
es
add
xchg
icebp
lods
arpl
inc
pop
jne
lods
mov
ficompl
mov
sahf
sub
insl
jns
mov
xchg
in
adc
push
cmp
add
and
pop
es
push
js
repz
mov
out
cli
pop
mov
push
cmp
adc
fwait
push
jae
jo
xor
and
adcl
and
add
jo
mov
loop
pop
adc
mov
push
inc
pop
jmp
js
mov
or
ret
pushf
pop
aad
jb
cltd
daa
movb
movsl
xchg
push
sub
dec
test
push
mov
pop
hlt
fsubrp
push
mov
call
sub
fwait
loop
xchg
or
imul
jl
xchg
in
mov
sbb
loopne
jl
fwait
mov
ja
sub
mov
loopne
scas
push
das
outsl
bound
jge
imul
sub
mov
xor
inc
xor
jmp
jns
leave
and
sbb
inc
xor
mov
push
movsl
and
jbe
pop
sub
jge
cmc
cli
mov
stos
cmp
jp
xor
xchg
jge
mov
jns
std
fadds
push
mov
add
out
xor
in
xchg
mov
push
imul
or
rcll
add
sub
push
fdivl
lahf
dec
mov
pushf
xor
push
mov
mov
sbbl
jnp
ret
pop
or
sbb
or
stos
lret
addr16
jae
mov
jb
jp
adc
jmp
shl
jae
mov
xchg
aam
fs
push
and
sbbl
lea
je
pop
push
sub
jecxz
push
mov
sbb
lret
xor
cwtl
sub
imul
add
cmp
sbb
lods
js
xor
dec
imul
out
add
ja
aad
cltd
mov
mov
and
call
ficoml
sti
lods
pop
mov
lds
daa
dec
mov
adc
mov
je
add
jno
push
movsl
mov
pushf
xchg
in
mov
arpl
dec
mov
mov
xor
lods
xchg
rorb
lcall
dec
insl
mov
xchg
xchg
xchg
xor
mov
clc
loop
xor
test
sti
ja
addr16
dec
leave
dec
test
inc
jmp
cmc
cmp
jg
out
mov
push
leave
imul
in
pop
sahf
jne
loop
leave
sbb
inc
repz
lret
gs
and
cmpsb
es
jmp
movsl
inc
xor
loope
ja
mov
jg
mov
sti
and
pop
popf
lret
jle
loopne
mov
dec
sbb
mov
adcl
xchg
push
mov
and
cmp
dec
push
and
xor
xor
pop
orl
hlt
pop
fsubs
inc
mov
stos
mov
jecxz
jecxz
scas
ss
and
push
clc
loope
pop
notl
dec
pusha
rcrb
or
fnstsw
push
cld
push
mov
mov
xchg
test
ljmp
mov
lods
cmp
das
push
add
insl
xchg
dec
push
mov
lods
jne
mov
dec
fistpll
mov
test
ja
push
push
and
jl
repz
xchg
jo
dec
orl
adc
jbe
inc
cmp
jb
cwtl
repz
imull
cltd
loope
test
jl
mov
jno
repnz
jb
flds
push
dec
outsb
adc
inc
fcomp
insl
xor
leave
jno
mov
mov
mov
loopne
push
inc
xlat
push
adc
pushf
std
xchg
add
repz
xchg
loopne
and
int3
out
in
hlt
xor
push
xchg
dec
fstpl
dec
enter
test
push
jge
dec
push
and
test
push
mov
mov
ffreep
xor
mov
cli
mov
ret
jmp
leave
fnsave
ds
pushf
mov
nop
loop
mov
out
mov
loopne
lods
mov
out
std
adc
movsl
sahf
lock
aad
adc
adc
adc
dec
loop
sbb
sub
push
sahf
mov
test
les
sub
arpl
insl
mov
pusha
push
sarl
cwtl
jne
xor
fiaddl
shrl
cmp
leave
push
idivb
adc
ret
xor
dec
aas
leave
jns
icebp
ficoms
stos
push
push
jge,pt
jl
mov
icebp
in
fwait
mov
xor
cli
mull
enter
push
lret
outsb
icebp
ljmp
stos
loope
fsubp
or
mov
or
in
andl
cmp
dec
mov
inc
sahf
push
jno
enter
out
jp
shl
and
das
push
pop
enter
dec
flds
shll
insb
xchg
push
shll
adc
sbb
sbb
push
lret
jecxz
and
mov
dec
mov
hlt
fmuls
stc
popl
stos
mov
add
out
mov
mov
into
sub
test
cmp
fmuls
mov
shll
in
xchg
jl
aaa
das
mov
mov
cwtl
stc
or
adc
cmpb
add
roll
push
dec
cmp
pop
pusha
aam
in
inc
imul
jnp
jno
adc
cmp
jne
xor
xchg
popf
cmp
jmp
scas
test
shr
xor
inc
sub
push
pop
sbb
mov
adc
mov
out
das
lcall
nop
mov
hlt
cmp
mov
sub
sbb
repnz
dec
test
ljmp
inc
xor
scas
enter
jecxz
xchg
mov
push
xchg
fwait
cmp
rorb
xchg
adc
mov
pop
stos
fcomi
sub
pushl
and
in
popa
pusha
jge
xchg
push
sub
test
cmpsl
int
stos
add
mov
inc
or
push
andl
loope
bound
xchg
mov
ss
push
repnz
xchg
mov
shl
inc
mov
int
xchg
mov
cli
movsl
rcll
mov
xchg
xor
pop
mul
adcb
andl
or
xor
ljmp
ret
mov
jmp
jp
mov
aas
jle
sub
inc
lret
sub
inc
sbb
lret
movl
mov
mov
mov
js
mov
pop
pop
pop
mov
es
vcvtps2dq
push
std
xchg
insl
xor
outsl
scas
add
jno
mov
mov
cld
mov
movsl
fimuls
jbe
cli
xor
and
xchg
xchg
mov
lea
mov
jb
and
mov
and
stos
sub
nop
lret
mov
data16
arpl
push
add
cmp
pop
cmpsb
and
pop
hlt
insb
cmpsb
xor
imul
mov
aad
cmpb
out
pop
mov
ss
pop
outsb
mov
jp
sbb
and
mov
mov
ret
repz
movsbl
out
int
and
les
inc
push
push
mov
scas
mov
or
std
push
xchg
cmp
mov
popa
pusha
clc
test
jnp
mov
sub
movsb
adc
loop
push
out
xchg
fnstenv
mov
pop
icebp
daa
test
dec
mov
mov
aas
pop
nop
lret
inc
pop
aad
lret
call
xor
cli
jp
cltd
mov
mov
add
int3
mov
pusha
addr16
repnz
inc
add
movsb
or
or
mov
mov
mov
addr16
rcll
adc
push
mov
mov
push
pop
lods
outsl
mov
fisubrl
rcrb
mov
mov
and
sbb
mov
mov
push
ja
rcl
stos
arpl
cmp
xor
mov
jmp
xor
clc
in
out
stos
mov
ljmp
sub
cltd
shll
dec
test
into
clc
push
fldl
fdiv
fstps
sbb
mov
fmuls
sub
sbb
inc
or
in
pop
xchg
movsb
fstpl
dec
fucomip
xlat
dec
or
call
push
loop
sub
popa
bound
xchg
repnz
push
fiadds
sti
hlt
xlat
add
test
push
sbb
xor
fimull
js
jg
dec
push
out
inc
sbb
xor
dec
mov
cmp
and
xchg
mov
or
pusha
int3
cmpsb
loope
mov
mov
daa
jmp
inc
pop
lea
sahf
push
mov
sub
sbb
jge
jb
hlt
lods
out
push
add
aad
outsl
int
loope
or
addr16
enter
push
add
pushf
push
test
inc
int
cmp
mov
clc
lods
shll
rcr
push
mov
dec
cmc
cmpsl
mov
nop
cmpsl
mov
sub
push
inc
in
dec
pushf
cmp
popa
pop
shl
add
int
nop
inc
push
pop
sbb
icebp
rolb
jle
cs
aam
negl
pop
inc
xchg
in
pop
cmp
out
cmp
icebp
hlt
cmp
ja
push
mov
jecxz
lcall
mov
cmp
add
shll
sahf
cmp
shll
mov
sub
in
push
or
xor
jbe
call
mov
mov
push
push
stos
xlat
xchg
or
jge
inc
das
jae
sahf
cwtl
push
pop
arpl
add
pop
push
dec
outsb
sub
ficomps
mov
les
repnz
adc
and
aam
loopne
mov
sbb
movsb
out
or
or
or
lock
addl
mov
out
mov
mov
mov
xor
cmc
icebp
gs
mov
xor
or
mov
or
and
inc
pushl
push
icebp
or
xchg
add
sti
or
mov
maskmovq
testl
call
push
mov
es
adc
sub
adc
xor
xor
mov
jecxz
jo
add
mov
imul
jmp
mov
repz
cmp
shl
mov
fistpl
in
scas
scas
insb
rcrb
mov
ljmp
fwait
bound
mov
out
mov
inc
fwait
mov
dec
js
test
insb
pop
scas
stos
pop
adc
cmp
push
adc
test
push
xchg
outsb
loopne
push
mov
negb
adc
ffreep
outsb
adc
xor
xchg
jno
lock
aam
or
xchg
rcll
cwtl
push
dec
inc
sub
dec
cmpl
adc
xlat
rcll
sti
mov
iret
shl
cmpsl
jp
fidivs
jo
in
mov
cli
jnp
cltd
inc
adc
sbb
cmp
mov
fnstsw
fdivl
cli
in
or
dec
or
mov
pop
push
cmpsb
dec
insl
in
jb
in
mov
call
xorl
popa
inc
cld
xor
pop
sbb
shll
popa
and
incl
int3
arpl
and
pop
or
add
aad
inc
jg
sti
jae
inc
les
mov
leave
xchg
dec
mov
lea
adc
pop
mov
stos
scas
xor
pop
sub
out
shl
arpl
xchg
movsb
mov
sbb
push
or
add
daa
shr
ds
jnp
loop
jno
iret
xor
jp
mov
dec
sub
das
inc
sbb
das
les
iret
xchg
inc
push
dec
sub
add
daa
sbb
mov
mov
mov
dec
inc
adc
push
ret
fcmovb
aaa
out
xchg
lds
fcompl
ret
andl
jecxz
ret
sahf
outsb
mov
mov
andb
mov
out
addl
sahf
loop
and
cmp
xlat
inc
push
adc
and
or
inc
adc
ljmp
dec
test
jmp
ret
cltd
das
bound
scas
test
orb
stos
adc
fildl
lahf
sbb
aaa
cltd
pop
jge
xchg
mov
popa
cmp
inc
or
or
dec
mov
mov
ljmp
dec
or
adc
xor
push
shr
adc
divl
out
push
jp
test
rcll
or
mov
mov
icebp
inc
jb
arpl
addr16
out
mov
pop
jne
mov
push
cwtl
clc
xchg
adc
jb
shlb
inc
fnsaves
sbb
int
or
xlat
cmc
imul
adc
mov
nop
sbb
rcrb
int3
bound
or
xor
pop
test
push
pop
dec
ret
es
adc
pop
mov
jecxz
mov
cli
test
dec
imul
xchg
dec
icebp
push
in
loop
imul
mov
inc
jge
enter
sub
mov
adc
dec
mov
mul
jo
lret
mov
mov
in
pop
push
jg
jmp
lret
xchg
pop
jns
adc
mov
int
jg
movsl
mov
into
daa
cmpsb
jl
sub
xchg
out
adc
rcrl
incb
repnz
push
push
incb
aam
icebp
and
frstor
insl
mov
popf
mov
and
sub
or
pop
repnz
testb
loop
push
cmp
adc
mov
mov
inc
push
arpl
ret
and
lock
mov
jecxz
dec
jno
pop
sbb
out
mov
pop
mov
ljmp
adc
jp
mov
fdivl
mov
jmp
rol
adc
push
pop
xor
out
aam
pop
jne
dec
sub
outsl
mov
lea
addr16
fidivl
sti
push
lahf
outsb
hlt
scas
shlb
xchg
xorb
pop
lret
dec
leave
jmp
in
shl
out
or
cmp
into
fisubrl
imull
push
outsb
movsb
test
icebp
lcall
into
xchg
sub
fisttpll
push
push
xorl
lods
xchg
jmp
popa
or
adc
xchg
nop
imul
sub
jne
mov
repz
dec
mov
dec
mov
leave
add
jg,pn
rcll
out
mov
push
iret
or
adcl
pop
sbb
daa
iret
xor
std
mul
mov
call
mov
or
or
push
sbb
outsl
inc
xchg
orb
jae
arpl
ret
or
adc
dec
fmulp
mov
cmp
lret
dec
cltd
testl
pop
mov
adc
xor
add
imul
mov
and
movl
sbb
adc
ss
outsb
in
dec
adc
dec
cmp
mov
dec
fisttpl
clc
xor
adc
mov
in
imul
cmc
imul
push
pop
sti
push
addl
out
lds
popf
mov
xchg
fwait
or
scas
repz
mov
repnz
div
mov
int3
loope
leave
test
xor
and
mov
inc
lea
or
xchg
jnp
scas
data16
adc
lahf
out
fs
push
lret
inc
scas
cltd
es
popf
mov
addr16
outsl
pop
stc
add
and
xor
mov
fists
pusha
xchg
jae
sbb
dec
dec
push
add
xor
jns
mov
pop
jmp
push
loopne
mov
cmp
push
lds
out
sub
pop
fildl
or
sarl
push
push
insl
sbb
xchg
xor
gs
adc
mov
dec
js
test
xchg
xor
sahf
pop
inc
in
sbbl
rcrl
pop
mov
shl
mov
cmp
mov
add
jl
or
adc
jge
inc
and
outsb
jne
mov
adcl
mov
mov
dec
syscall
imul
dec
push
test
cmpb
fbstp
and
divl
jno
movsb
imul
shl
pop
cwtl
mov
jmp
mov
test
ja
into
mov
scas
xlat
push
push
in
aaa
jne
loope
add
xchg
mov
dec
stc
mov
add
sub
add
loope
xor
pop
in
test
add
mov
mulb
into
in
jbe
sbb
cmp
adc
rorl
or
xchg
ret
sub
jne
pop
aam
cmp
jecxz
notb
or
vmovntpd
pop
sub
add
inc
out
rorb
popf
ret
cmpsl
ret
adc
mov
dec
xor
push
iret
pop
gs
xchg
shl
stos
dec
cmpsb
push
or
cmpsb
cld
lods
dec
jno
mov
mov
sub
mov
inc
sahf
dec
jmp
xlat
sbb
ret
sub
sub
clc
mov
inc
imul
xchg
scas
add
pop
push
inc
pop
gs
gs
cmp
inc
fcoml
fdivrs
movsb
jo
in
in
out
mov
mov
stos
cmpsb
fnstsw
push
imul
xchg
cmc
sub
enter
jg
adcb
jg
into
outsl
cmovo
js
stos
adc
ja
mov
dec
inc
xchg
mov
push
inc
sbb
adc
xorl
pop
pop
std
sarl
inc
out
jecxz
dec
xchg
fdiv
hlt
inc
or
cwtl
divb
or
jne
push
push
in
xchg
and
stos
adcb
cmp
je
cmp
out
arpl
clc
jbe
lds
sahf
pmuludq
sbb
inc
lock
dec
imul
aas
stos
cmp
jnp
mov
sbb
fisttps
cmc
fbstp
iret
rol
push
aaa
aaa
xor
outsb
insl
add
imul
lods
and
sbb
cwtl
loope
int3
xorl
push
out
jnp
in
cmp
xor
out
or
mov
mov
hlt
sahf
bound
fildll
scas
jmp
lahf
cmp
int
iret
jb
jp
mov
arpl
mov
sahf
outsl
push
add
sbb
push
add
test
outsl
icebp
pop
loopne
dec
insl
out
mov
out
sub
jno
sti
ljmp
test
call
or
and
mov
ss
std
movsl
jno
es
aam
mov
jbe
jecxz
mov
pop
mov
dec
sbbb
test
mov
sarb
pop
dec
faddp
mov
aam
fwait
lret
sub
sbb
mov
cwtl
fcompl
pop
lret
loope
sbbb
mov
sub
test
movsb
bound
hlt
fiadds
push
test
repz
dec
leave
and
pop
repz
aad
fxch
xchg
pop
and
cmp
popf
enter
stos
and
out
xor
mov
push
pop
sub
arpl
es
sub
push
add
mov
outsl
pop
arpl
mov
inc
xchg
push
cld
dec
sub
outsb
test
fwait
fwait
or
addl
mov
jb
inc
std
jge
fs
pop
rorb
or
shl
stos
xor
jns
in
dec
xlat
jge
test
and
cwtl
fidivrs
into
xor
sub
dec
xorb
jne
enter
mov
dec
jge
fadds
lods
xor
hlt
push
sbb
lds
in
fs
or
mov
inc
mov
hlt
cmp
cli
lret
sti
mov
das
push
jbe
adc
std
mov
aas
adc
cmc
out
mov
ret
sub
jg
rclb
adc
push
jle
stc
cmp
ja
gs
or
mov
addb
pop
imul
rolb
test
cs
repnz
dec
rcr
loope
jbe
imul
subl
loop
test
xchg
and
sbb
push
repnz
xrelease
sub
aad
loop
leave
insl
jne
pop
cmp
mov
xchg
int3
mov
push
je
ljmp
push
ljmp
jns
les
std
jnp
xor
loop
pop
or
cmp
and
mov
add
aam
mov
lds
out
push
mov
cld
loope
lds
setp
push
lret
push
jo
and
shlb
adc
orb
jno
cmp
mov
sub
icebp
adc
dec
xchg
shlb
sbb
icebp
call
iret
adc
subb
fcmovne
loop
mov
aam
jo
mov
outsl
push
repnz
hlt
pop
fstpt
mov
repz
ljmp
mov
cmp
movsl
jle
daa
int
rcrb
ja
aas
shll
xchg
xchg
fisubrs
jne
es
lcall
mov
lds
push
test
sub
aas
imul
ljmp
daa
add
sub
push
or
lcall
mov
add
cs
pushf
add
cmp
xor
popf
inc
ss
shlb
add
cld
mov
xor
cmp
mov
push
outsb
cltd
scas
lea
cmp
xchg
push
and
push
in
push
jmp
jbe
xor
lcall
aam
js
daa
movsl
fisttps
cld
xor
notl
jge
mov
mov
dec
push
out
repnz
push
ds
sbb
and
popa
in
add
cmp
sahf
setnp
mov
imul
ret
cs
add
inc
out
lds
sub
aaa
adcl
ss
mov
jle
mov
sbb
and
push
inc
pop
aaa
fiadds
orb
leave
jmp
lea
in
and
or
ficomps
and
adc
in
or
out
cmp
nop
pop
dec
xchg
xor
shlb
xor
mov
inc
fstps
mov
fbld
add
lret
out
cs
cs
int
inc
lret
outsb
xchg
inc
sub
test
lods
insb
add
iret
jno
pop
cmpsl
mov
push
fimull
push
mov
lds
lret
in
push
jae
push
and
sbb
stos
pop
in
pusha
push
movzbl
or
ss
or
fnsave
inc
sbb
scas
xchg
and
faddl
cmp
and
ljmp
lea
stos
leave
sub
push
or
xchg
sbb
lock
dec
xor
jae
loope
ffree
iret
mov
ucomiss
add
adc
mov
sub
shlb
jecxz
shrb
in
gs
stc
out
jle
push
test
jmp
pop
pop
sbb
enter
out
into
popa
mov
add
dec
xor
clc
mov
mov
add
dec
and
jno,pn
rcl
mov
jns
stos
pop
mov
into
cmp
call
jle
sbb
jle
xchg
fildl
jmp
movsb
xor
daa
jno
frstor
pop
mov
adc
pop
arpl
mov
or
pushl
mov
sbb
push
jne
nop
sbb
adc
aam
add
xchg
add
clc
add
and
jnp
or
pushf
mov
inc
xchg
inc
scas
std
dec
xor
mov
adc
adc
dec
push
int
push
out
jge
into
divb
mov
and
bsf
jo
inc
sbb
inc
rcrl
and
ljmp
testl
sbb
xchg
adc
stc
das
jmp
jl
mov
sbb
repz
dec
int
je
jp
fadds
dec
fdivs
mov
inc
jb
add
pcmpeqd
aam
out
scas
call
or
push
and
arpl
addr16
mov
lret
jmp
jns
arpl
cmpsb
sbb
xchg
xchg
push
sbb
pop
adc
sahf
int3
mov
cmp
sbb
mov
sbb
add
rcll
scas
mov
loope
and
pop
xchg
cmp
mov
movsb
xchg
mov
lret
sub
push
adc
insb
rol
xchg
dec
into
sbb
mov
cmp
in
push
fcomps
push
mov
pop
jo
jp
add
sbb
xchg
aaa
push
xor
in
mov
enter
or
out
mov
jp
shlb
test
bound
jno
jecxz
push
leave
lcall
xchg
ss
pop
rcll
push
jle
jecxz
cmpl
rorl
sbb
xchg
mov
add
int3
dec
in
movsb
push
sbb
std
cmp
adc
stc
cmc
dec
mov
mov
and
std
aas
dec
jnp
pop
out
cmp
insb
iret
adc
std
sahf
sub
and
orb
mov
cs
ficompl
adc
jnp
mov
mov
inc
sbb
cld
maskmovq
imull
in
test
or
lods
push
repz
sti
or
xchg
mov
in
cmc
mov
xchg
loope
gs
scas
dec
dec
xor
jo
icebp
pop
jl
pop
out
enter
dec
cltd
mov
sub
push
mov
movsb
outsb
das
jl
lds
add
ss
shlb
cld
fwait
adcl
icebp
mov
fwait
dec
jmp
add
push
ja
cwtl
decl
xchg
popa
push
mov
out
cmp
xor
add
cltd
inc
xor
fs
lods
pop
xor
test
in
cmpsb
and
js
xchg
int3
dec
loopne
mov
lret
cltd
mov
test
add
mov
xor
loop
mov
sbb
jo
stos
push
mov
imul
jl
popf
loop
lret
loopne
xor
sbb
icebp
in
pop
push
mov
rorl
addr16
shrb
mov
pop
clc
push
pop
inc
mov
fmuls
repz
fiaddl
out
sarb
sub
das
pop
jmp
sti
xor
inc
or
out
pusha
adc
dec
repnz
mov
cmp
cmc
add
mov
je
mov
mov
mov
out
xchg
adc
xchg
in
xor
ds
mov
sub
mov
push
test
mov
mov
push
sahf
shrb
jl
push
clc
push
mov
repnz
addr16
pop
add
inc
or
mov
popf
add
data16
out
fsubrs
test
ljmp
out
popa
sti
scas
xor
jecxz
orps
jae
fidivrs
lcall
pop
popa
bound
xchg
data16
mov
push
mov
inc
in
mov
mov
inc
hlt
sbb
xchg
scas
imul
shlb
lds
inc
mov
dec
adc
int
adc
cltd
and
aas
test
popa
pop
fiadds
cmp
and
cmp
je
in
lods
mov
lods
scas
into
pop
push
inc
nop
xor
adc
xor
lret
mov
or
mov
add
inc
push
jno
call
bound
add
stc
aaa
sti
mov
jb
lea
in
push
push
int
cmp
xor
mov
adc
push
mov
pop
mov
sub
and
mov
pusha
into
sarb
minps
orl
cs
rcrl
xorl
inc
mov
and
inc
popa
sbb
dec
adc
andl
cld
dec
jmp
lods
inc
mov
gs
xor
movsb
push
xor
imul
xor
mov
or
bound
push
loop
rolb
cmp
mov
shr
scas
pop
out
sub
adc
shl
add
xor
jb
lret
scas
cs
lods
lods
xor
cltd
fisubrs
sti
out
pop
push
mov
clc
or
jmp
inc
test
test
and
rcr
leave
inc
mov
icebp
dec
scas
sub
shll
clc
stos
add
add
jl
jp
mov
sub
cmp
cmpsl
fdivrs
jg
xlat
shll
enter
and
add
xchg
xor
mov
mov
sub
testl
and
mov
dec
xchg
loope
loopne
mov
jge
dec
das
cmpsl
dec
jl
dec
test
and
out
xchg
fsub
add
int
pop
cltd
ret
mov
xor
out
mov
xchg
sub
in
dec
rolb
mov
xchg
push
and
addr16
add
ret
shlb
add
jne
call
mov
loopne
pop
pop
js
out
ficomps
dec
jnp
adc
fwait
xor
repnz
pop
sbb
out
call
adc
or
inc
into
or
or
cltd
mov
cwtl
lods
inc
jne
out
jbe
mov
in
xchg
mov
xchg
mov
repz
shr
jle
ja
mov
cld
mov
rclb
jb
iret
gs
cmp
cmp
cli
pop
dec
mov
lds
out
mov
push
push
movsb
mov
call
push
bound
movntq
out
lahf
sbb
test
popf
and
pop
bound
into
movsb
dec
adc
push
fistps
jns
push
or
sahf
cmp
mov
mov
aam
rol
stc
and
push
push
adc
mov
icebp
out
ret
outsb
add
pop
dec
pusha
xchg
iret
pop
xchg
cmpsb
sub
subl
int3
mov
and
lods
movsl
sub
xor
mov
sbb
test
ret
ja
nop
fs
xor
test
sub
and
movsl
mul
sub
out
xor
loopne
lcall
mov
lea
call
pop
cmp
cmp
add
test
mov
xlat
repnz
addr16
cmp
xadd
in
dec
imul
jno
mov
dec
lods
pop
insb
dec
or
or
mov
sub
sbb
je
jbe
rol
loop
das
inc
rol
cwtl
cs
mov
and
aad
iret
xor
pusha
sbb
sarb
jb
or
loop
nop
mov
std
xchg
daa
cwtl
cmpsb
adc
cmp
fs
andb
add
mov
push
fxch
test
bound
adc
mov
in
int3
ret
scas
mov
dec
mov
scas
inc
sub
enter
sbb
fwait
adc
dec
jne
push
test
sub
xchg
sahf
divl
cmp
pop
pop
and
jge
bound
mov
leave
stos
das
sub
imul
xchg
sbb
push
jmp
pusha
nop
int3
ficoms
mov
jbe
pop
cmp
or
orl
aad
cmp
lret
and
sbb
push
or
arpl
fucomip
xor
xor
adcb
cmp
pushf
test
mov
and
jns
push
sbb
mov
xchg
mov
fcom
cmp
mov
ret
xor
lcall
cmp
sbb
hlt
fcmovnbe
jno
add
or
jg
mov
xchg
flds
push
jecxz
mov
push
outsl
arpl
pop
xor
xlat
nop
leave
dec
test
add
loope
outsl
dec
dec
mov
mov
ret
add
movsl
loopne
loopne
andl
xchg
aad
sti
cmpsb
mov
push
insl
jle
ss
sbb
jne
loop
pushw
or
stc
xor
mov
and
das
movsl
inc
es
das
outsl
mov
lahf
inc
jp
xchg
inc
ja
push
xchg
in
jp
cmp
xchg
sbb
mov
gs
setne
fisubl
dec
enter
fwait
in
sbbb
mov
scas
enter
js
inc
mov
mov
mov
les
jge
movsl
sbb
mov
out
inc
jno
js
rorb
push
sbb
in
xor
mov
push
dec
dec
jo
pop
das
js
pop
or
mov
or
mov
ficompl
adc
mov
lock
push
mov
mov
push
in
loopne
out
loop
lret
pop
test
test
pop
inc
or
mov
cmp
xchg
into
cld
inc
ds
outsb
add
inc
mov
pushf
inc
pop
mov
aas
call
xor
jecxz
andb
je
mov
pop
cmc
mov
and
fcmovbe
inc
imul
cmp
movsb
jle
sbb
or
push
and
pop
push
mov
mov
dec
jbe
cld
rcrl
sahf
add
data16
xchg
scas
adc
insl
mov
jg
and
pop
xchg
hlt
cmp
mov
mov
nop
mov
mov
movsb
mov
jae
push
add
mov
lods
out
pop
je
pop
shrb
loope
jl
imul
pop
adc
cmp
iret
aaa
jns
inc
adcl
adc
mov
fucomip
xchg
adc
and
adc
mov
aam
pop
or
xchg
adc
fwait
inc
scas
call
popf
mov
jge
push
incb
inc
flds
inc
cli
xchg
ja
sub
das
lods
das
sbb
test
aad
lcall
arpl
fidivrs
lcall
or
aaa
push
add
jne
adc
push
ja
addr16
push
fildll
mov
push
lret
lds
sbb
into
and
call
cmp
iret
sub
fstpt
jmp
add
jbe
int3
sbb
push
and
inc
je
mov
ds
int3
stos
lds
inc
fld
push
sarl
fdecstp
inc
imul
fstpl
push
sub
fdivp
scas
adc
lret
adc
adc
jne
insl
rcrb
std
push
incb
xchg
sbb
xchg
clc
mov
jnp
jns
loop
inc
sub
jge
mov
fildll
movsl
stos
mov
mov
movsl
add
adc
xchg
cli
mov
ficompl
jbe
imul
std
push
cmp
dec
cwtl
daa
icebp
or
mov
test
sti
or
cmpb
popa
or
orl
sbb
pushf
cmc
call
inc
roll
mov
stc
add
and
cmp
dec
insl
mov
movsb
jecxz
mulb
decl
inc
pop
adc
pop
hlt
dec
mov
into
dec
insl
mov
push
mov
mov
or
add
mov
shll
lret
scas
dec
mov
mov
aas
pop
in
push
fisubl
out
push
jae
stos
ret
lcall
mov
pop
notb
jle
xchg
ficompl
adcb
mov
mov
mov
mov
fisttps
sbb
test
sbb
cld
pop
jl
insb
scas
and
loop
push
out
cltd
aam
sbb
xlat
ret
sbb
adc
mov
adc
jge
in
cmp
jmp
push
aad
add
add
mov
inc
les
dec
pop
fdivs
and
cli
popa
cmpsb
sets
pop
mov
push
cli
in
pop
xchg
cmp
push
in
and
popa
popf
in
inc
fists
or
cmpsb
data16
pop
jmp
mov
sub
nop
or
in
inc
mov
cmp
and
xchg
mov
fwait
xchg
pop
jecxz
inc
fistps
daa
pop
pop
insb
fcmove
test
mov
stc
pop
xor
inc
imul
popa
std
popf
add
ja
adc
inc
push
cli
addr16
scas
cmpsb
lods
dec
xchg
sub
notl
outsl
bsf
push
pop
fwait
push
aam
mov
aas
daa
pop
add
inc
rolb
and
je
or
adc
push
mov
push
fistpl
lahf
jno
das
movntq
out
es
xor
jmp
mov
mov
int3
jecxz
push
ret
sahf
rcrl
and
sbb
loop
std
jmp
sbb
sti
rcl
pop
call
pushf
mov
iret
xchg
xchg
rclb
jno
jns
loopne
jmp
sbbb
mov
jle
mov
sbb
nop
jg
enter
js
push
in
cmc
mov
popa
jmp
inc
push
add
and
les
jge
pop
jae
pop
addr16
fldz
mov
out
pop
inc
cmp
ljmp
adc
fwait
mov
loopne
ss
mulb
fwait
adc
xchg
xor
mov
and
push
mov
ja
inc
sub
es
adc
and
pop
das
mov
xor
push
testb
jbe
fs
call
mov
sbb
jl
out
and
xor
popf
addl
outsb
jmp
add
adc
pop
imul
or
insb
adc
mov
adc
fldl
out
xorl
cmpl
movsb
mov
xor
jmp
repz
adc
inc
pop
mov
int
xchg
mov
rolb
fildll
dec
jno
addr16
mov
adc
repnz
xchg
rcrl
xchg
cli
sahf
dec
das
out
gs
mov
insb
mov
bnd
pop
push
cmpl
cld
pusha
sti
adc
jecxz
dec
mov
in
outsb
js
dec
add
push
pop
std
sub
dec
ja
cli
cmp
cmp
push
aad
or
bound
inc
push
or
cmp
outsl
mov
pop
mov
cwtl
sarl
cmpb
cmpsl
loop
xchg
add
fsubrl
cmp
sbb
loope
adc
add
leave
lods
mov
fnstenv
mov
out
and
cmc
neg
out
jl
mov
mov
inc
push
jecxz
repnz
dec
sbb
pusha
in
inc
push
stc
pop
jnp
cmp
test
push
xor
dec
stos
hlt
mov
pop
cmp
pop
aas
leave
arpl
sahf
xchg
nop
cmp
in
dec
sub
jl
js
sub
xchg
or
stc
xchg
insb
in
xlat
fcomp
js
cmp
pop
add
lret
mov
fwait
imul
mov
test
loop
push
cmp
stos
mov
arpl
imul
sbb
pop
ret
jl
mov
hlt
xchg
cwtl
enter
jb
xchg
xor
icebp
repnz
mov
idivb
jg
xchg
pusha
jbe
mov
mov
outsl
es
enter
lret
ljmp
or
out
mov
push
push
xor
loop
divl
pop
push
adc
std
stos
mov
adc
loopne
test
and
xchg
mov
das
cmc
enter
gs
fnsave
cmp
test
lods
pushf
mov
arpl
popf
mov
roll
inc
xchg
mov
dec
in
xchg
pcmpeqd
adc
mov
jne
push
fs
cmpsb
sub
adc
out
sub
adc
fadds
out
data16
aas
in
aas
cmpsb
mov
out
enter
dec
push
jbe
frstor
lahf
xchg
mov
push
or
sbb
sbb
imul
mov
pop
insl
movsl
in
sub
outsl
test
clc
push
push
out
popf
lods
mov
dec
adc
xchg
mov
adc
pop
jnp
out
and
ret
movsl
daa
imulb
pop
jmp
xchg
mov
bound
xchg
or
shlb
mov
jmp
jl
cmp
icebp
jp
repnz
fsubr
push
adcl
xchg
inc
aad
loop
in
pusha
and
sub
and
xlat
data16
in
jne
cli
enter
gs
ret
shl
rorb
sub
xor
push
hlt
inc
sbb
out
sahf
adc
jl
sub
inc
aaa
pop
stos
pushf
and
push
scas
lahf
mov
shlb
jo
aad
or
movsb
ficoms
cmpl
add
jmp
jg
inc
dec
enterw
in
push
sub
xor
mov
stos
or
adc
sbb
hlt
int
inc
sbb
lock
jmp
dec
inc
jb
addb
mov
iret
sti
push
dec
nop
jae
aas
loop
mov
call
pop
enter
inc
clc
dec
aad
enter
into
mov
leave
push
je
cmp
mov
insb
xchg
fistps
out
cld
bound
jl
jo
or
aam
not
sbb
popa
ret
add
fadds
inc
test
cmpb
sub
xor
mov
push
int3
pop
subl
int3
fisubrs
lods
cmpsb
bound
test
jb
movsb
mov
cmp
ret
xchg
xor
sti
jmp
mov
cmpsb
imul
sub
hlt
mov
stos
nop
sbb
mov
repz
es
pop
aam
push
mov
rcrb
mov
testb
enter
out
mov
push
adc
add
mov
fnsave
bound
cwtl
es
jl
adc
repnz
pushl
into
dec
test
test
fwait
cwtl
pop
add
ss
sub
mov
inc
cmc
stc
js
lods
dec
popa
imul
or
scas
push
cmc
xlat
sbb
adc
and
arpl
jmp
xrelease
mov
push
mov
inc
iret
adc
xor
xchg
fmuls
pop
sbb
xor
stos
cld
pop
cmp
cmp
xchg
out
lret
cmpsl
subl
and
mov
push
jmp
lcall
ljmp
popa
mov
and
sbb
or
aad
addr16
fiadds
mov
fmull
out
add
add
aaa
mov
movsb
xchg
pop
pop
cmp
aaa
jecxz
sbb
sub
xor
fcoms
mov
jl
push
fisttpl
pop
mov
test
sub
jnp
out
mov
jp
jnp
add
pop
push
loope
addr16
addl
sub
outsb
aaa
sub
out
mov
rcl
sahf
mov
and
xchg
sbbb
xchg
sbb
and
add
xchg
into
or
mov
sbb
cmp
fdivrp
nop
mov
in
cmp
loopne
and
cmp
loopne
jg
mov
add
in
bound
adc
mov
mov
ficoms
addr16
fstpl
out
int
mov
push
in
add
dec
ficoml
jo
in
cmpsb
iret
push
inc
or
pop
rcrl
fucomi
ficoml
in
pop
mov
push
mov
pop
or
cmp
cwtl
push
and
int
cmp
aad
and
xor
clc
test
icebp
inc
loopne
xchg
dec
rcrl
test
js
rcll
dec
pop
inc
shrb
sub
fs
out
and
daa
sbb
inc
orb
xor
inc
scas
shrb
addr16
into
or
fsts
ficoml
popa
icebp
jae
dec
sahf
leave
mov
loope
mov
adc
push
lahf
daa
push
inc
mov
in
jnp
and
repz
mov
cmp
push
loopne
cmp
adc
pop
daa
inc
sbb
movsb
mov
push
sub
xlat
inc
es
cli
dec
ja
cmc
xchg
shlb
and
arpl
xor
imul
daa
or
stos
push
test
push
scas
ret
cmc
ds
adc
and
add
cmpsl
xchg
xor
sbb
dec
mov
mov
nop
imul
je
pop
mov
gs
shlb
sub
lods
add
hlt
jne
and
sub
adc
push
out
rolb
inc
xchg
daa
xchg
sbb
xchg
sbb
adc
fwait
std
fsubr
cmp
or
dec
ljmp
roll
movhps
inc
decb
bound
cli
movsb
inc
mov
xor
fwait
or
lahf
mov
les
dec
jl
repz
mov
into
mov
cli
ljmp
mov
cli
push
jbe
lahf
xchg
and
mov
push
shl
sub
ret
xor
data16
rclb
lods
imul
and
js
dec
jne
stos
data16
sbb
mov
imul
insb
and
movsl
ja
lahf
pop
out
hlt
movsb
mov
mov
inc
xchg
cmp
push
dec
cli
in
insb
imul
lcall
inc
lods
mov
lea
into
jecxz
daa
rorb
inc
mov
lods
ss
pop
push
push
pop
cmp
scas
push
adcb
aam
mov
addr16
lods
les
pushf
xor
sub
add
das
rcll
dec
add
notb
out
push
mov
jns
test
ljmp
adc
mov
adc
dec
gs
dec
mov
xor
inc
shr
out
cltd
xchg
jo
jg
sub
dec
sbb
cld
or
in
jle
js
inc
lods
sub
cmp
in
xor
jmp
dec
shll
test
addr16
xor
pusha
outsl
cmp
je
sub
add
pop
lcall
dec
add
add
insl
xchg
test
mov
scas
pop
lock
loop
test
mov
pop
dec
mov
shrl
cmp
push
mov
out
jo
mov
add
ljmp
jp
or
fcoml
xchg
js
mov
imul
xor
xor
popa
lods
scas
jl
dec
aad
out
dec
mov
movsl
mov
push
push
and
push
adc
mov
adc
test
repz
mov
push
mov
out
gs
mov
dec
mov
aam
loope
jl
add
cmp
popa
enter
pop
xchg
enter
dec
mov
cmpsb
xchg
enter
jb
sub
mov
test
arpl
icebp
mov
pop
push
cmp
aad
sub
movsl
xor
loop
sbb
rcll
insb
mov
sbb
int
insl
mov
add
sbb
jne
adc
outsl
or
adc
movsb
mov
scas
leave
lods
cld
cmpsb
mov
or
xchg
sub
or
lcall
mov
es
in
mov
mov
pop
les
pop
or
in
out
sub
push
cmc
jl
pusha
lcall
jge
push
pop
adc
and
or
data16
dec
loopne
adc
sub
jmp
jp
and
add
mov
mov
repnz
mov
cmp
mov
push
insl
add
push
sub
sub
ret
mov
je
push
mov
cltd
dec
stc
out
sahf
and
shlb
mov
ja
in
clc
in
cmp
fwait
xchg
ds
cli
bound
mov
cmp
in
push
cs
cmc
enter
cmp
rorl
push
and
in
in
xorb
ljmp
add
push
mov
les
mov
pop
cmp
and
ret
sub
clc
push
pop
aam
pop
lret
js
aad
std
cmp
addr16
xor
dec
sbb
push
jle
std
push
jae
fisubrl
cld
lret
sahf
nop
push
sub
je
out
daa
aad
rolb
into
jge
outsb
pop
mul
gs
test
out
inc
clc
les
jb
movsl
in
mov
push
repnz
das
insb
pop
jb
xchg
or
fisubl
jecxz
mov
adcl
dec
xchg
roll
adc
and
and
js
dec
and
adc
rcrl
mov
dec
in
dec
xor
hlt
repz
repnz
and
mov
xchg
pop
pop
mov
push
popf
push
inc
cmpsl
mov
mov
outsl
sbb
dec
lods
ljmp
cwtl
jge
sub
mov
fbld
xchg
repz
iret
aas
mov
repz
mov
dec
jne
mov
lcall
scas
gs
mov
mov
xchg
and
adc
es
cld
pop
imul
pop
sarb
mov
movsl
xor
xchg
andb
loope
cmpl
sbb
mov
pop
loopne
push
popf
mul
fwait
shll
loopne
inc
sub
outsl
mov
nop
sub
cwtl
dec
xor
ret
fisubl
inc
sbb
das
mov
mov
daa
adc
test
push
pop
cmp
sti
icebp
cmc
mov
outsl
mov
jp
clc
cmp
and
lahf
orl
mov
negb
icebp
decb
xchg
fstl
push
or
mov
and
xchg
add
and
push
sub
and
ss
push
mov
arpl
dec
faddp
mov
imul
mov
or
push
jns
out
push
stos
push
ja
push
femms
xchg
lock
pusha
xchg
movsb
rcll
jnp
xor
ja
dec
not
sbb
xorl
mull
or
xchg
push
mov
push
xor
or
out
pop
testl
ret
imul
movsl
pop
mov
pusha
sbb
movsl
cli
scas
sub
repnz
or
fcmovbe
dec
iret
lret
jo
jne
ret
or
adc
or
andl
mov
mov
int3
rclb
xchg
cmp
push
mov
in
dec
sub
cmp
cwtl
cmp
cmp
std
mov
stos
add
shlb
loop
cmpsl
cmp
into
jle
add
inc
stos
in
lea
sbb
mov
popa
dec
push
sub
push
xor
imul
and
cmc
adc
cmp
fcomp
loope
dec
jmp
fsubs
cmp
xchg
dec
mov
shrb
push
sbb
lock
das
jnp
lods
cmp
aas
out
in
add
fsubrl
cmp
idiv
sahf
cmp
enter
xor
or
and
push
and
or
jmp
xchg
aam
pop
inc
inc
cmpsl
in
push
fstp
mov
std
xchg
jmp
xor
sahf
push
loope
int3
enter
mov
outsb
stc
cmc
and
rorl
addr16
dec
daa
inc
rorb
sub
sbb
in
and
and
rolb
leave
mov
stos
push
stos
push
jae
clc
in
sbb
cmp
mov
add
cmpsb
popf
test
cmpsl
leave
sbb
mov
inc
lea
sbb
add
aas
aas
cltd
setl
loopne
sub
stos
add
lock
aaa
and
jbe
ja
or
cmp
outsl
loopne
ljmp
sub
cli
sub
or
inc
push
xchg
cmp
cli
das
xor
jge
ficompl
xorb
jbe
movsl
add
xchg
add
and
sub
aas
stos
and
push
das
mov
rcl
sbb
mov
sub
pop
fwait
orl
fwait
cmp
pcmpeqb
mov
js
icebp
sbbl
or
cld
pop
pop
das
int3
fldcw
mov
push
or
xor
jno
dec
sar
cmp
subl
pop
stc
mov
inc
push
add
sub
pop
sub
jecxz
in
cmc
jo
add
pop
cltd
push
mov
mov
or
scas
and
mov
repnz
pop
insb
push
leave
inc
jl
add
push
mov
xchg
cmp
and
dec
inc
jbe
sub
mov
or
lret
push
add
in
lds
fucomip
mov
mov
jecxz
and
shlb
push
inc
sub
in
jl
ds
int3
inc
and
lods
lahf
in
ja
popa
sub
sbbl
test
cmpb
pusha
outsl
add
adc
dec
xchg
mov
cmp
push
fcos
cmpl
push
rcl
xchg
insb
push
or
sti
and
shll
ljmp
cmc
xchg
out
cmp
fisubrl
scas
sahf
daa
daa
rcll
repz
scas
push
adc
and
or
jecxz
fildl
pusha
pop
mov
pop
aaa
lcall
in
add
xor
inc
fstl
cmc
xchg
adc
sti
jb
xchg
arpl
ds
add
cmp
test
bound
cmp
loope
lock
sbb
popa
jge
neg
les
stc
out
nop
pop
and
jle
mov
lahf
int
subl
imul
mov
aas
push
xchg
fimull
mov
push
jno
mov
pop
out
into
repnz
xor
push
jmp
out
je
jo
dec
bound
lret
xchg
push
add
cmp
mov
test
ret
add
call
aas
or
sub
cli
push
fwait
add
xlat
push
adc
inc
rorb
inc
and
imul
push
mov
andl
pop
arpl
outsl
rclb
and
xor
stos
dec
add
loope
jl
es
push
jecxz
dec
pop
sub
or
sbb
sbb
and
jl
lret
test
mov
push
in
jne
lods
add
add
sbb
repz
outsb
leave
mov
jae
xor
sbb
sub
push
cmpsb
xchg
pop
mov
cmpsb
or
jg
arpl
cmp
mov
add
push
sbb
mov
xor
std
jp
add
sbb
xchg
and
mov
decl
fnsave
push
cmpsb
insl
leave
lcall
shr
mov
mov
add
int
xchg
mov
ljmp
es
fcoml
mov
adc
scas
daa
les
push
xor
ficompl
lret
and
mov
cmp
jbe
add
aam
push
adc
test
adc
pop
lock
inc
mov
mov
shlb
sub
or
mov
mov
icebp
adc
int
loopne
in
int
jmp
cwtl
cmp
jno
in
mov
mov
add
arpl
in
push
bound
fdiv
sbb
test
or
jns
aam
mov
stc
data16
and
mov
or
sti
mov
test
loopne
jbe
or
js,pn
daa
or
outsb
loope
int3
and
pop
cltd
es
out
sub
or
adc
dec
dec
fsubs
mov
sub
xchg
inc
or
int
sub
mov
test
mov
xchg
jbe
mov
jmp
push
inc
xor
mov
or
lret
xor
pop
out
imul
sbb
sahf
mov
push
push
xor
and
add
pop
dec
inc
xor
movsl
add
scas
xor
movl
mov
adc
inc
mov
cwtl
jp
in
push
in
mov
insb
xchg
outsl
les
xlat
adcb
mov
cmp
cmc
fiaddl
sub
out
lret
test
ljmp
fucomi
les
ret
pop
neg
int
mov
jecxz
cmp
sar
bound
popa
mov
xor
lock
and
or
sbb
adc
mov
mov
and
ret
xchg
lds
xlat
lea
mov
push
cmp
xchg
lea
cmp
xor
sbb
dec
mov
pop
jmp
in
and
adc
sub
rep
adc
sti
add
mov
pop
add
movsb
out
pop
jne
cwtl
popf
loope
cmpsl
repz
scas
jo
dec
inc
jp
mov
and
out
psadbw
add
mov
out
loopne
pop
cmp
mov
jno
inc
fwait
int3
push
subb
repz
ds
aas
sbb
add
or
test
cmp
lahf
or
lock
xchg
dec
jae
jle
dec
cltd
es
push
jmp
jb
add
pop
push
call
mov
mov
divb
ljmp
mov
xor
popa
orl
lods
repnz
arpl
adc
leave
fwait
sbbb
sbb
ficoml
mov
fisubrl
adc
sub
js
stc
cmpsb
out
pop
sbbb
mov
fists
sbb
enter
les
jl
fs
outsl
pop
push
and
adc
mov
ja
xor
lret
cmp
loop
lods
cltd
in
sub
stos
bound
sbb
xchg
add
mov
jae
das
pop
adc
xchg
movsb
fs
dec
sbb
das
outsb
push
xor
push
mov
push
test
fisttpll
or
mov
dec
xor
in
xchg
add
scas
or
sbb
call
xchg
fs
dec
out
mov
dec
pop
push
arpl
push
aad
jbe
int3
out
lea
mov
push
shlb
xchg
fcmovb
pop
dec
sub
stos
mov
jl
lahf
cmp
push
push
xor
dec
or
sub
mov
sub
movsb
jg
cmp
out
push
lods
add
adc
daa
jl
adc
fimull
stc
les
ds
sbb
cmpsb
adc
mov
cwtl
dec
icebp
sbb
push
daa
sub
es
test
aaa
xchg
fst
adc
fisubl
das
fs
addr16
cli
inc
je
inc
popf
inc
cld
popf
in
xor
and
push
push
xor
hlt
lahf
inc
call
xchg
cmpsl
repz
fsubrl
out
in
ljmp
mov
leave
mov
push
mov
jb
pop
aad
mov
daa
add
mov
adc
xchg
cld
xor
push
push
pop
push
add
mov
mov
dec
ljmp
addr16
cld
mov
pop
and
and
ss
loope
insb
incl
xor
out
int
in
sbb
cmp
jae
dec
fwait
pop
loopew
in
test
lock
stc
or
out
xchg
gs
mov
or
popa
xchg
lcall
sbb
sub
inc
out
mov
test
dec
xchg
push
js
outsl
inc
dec
je
fmuls
inc
movsl
push
dec
sub
imull
test
cmp
ja
mov
jo
push
clc
xchg
mov
scas
aad
arpl
sub
jge
adcb
cli
xchg
aad
jmp
xchg
imul
rcr
aam
es
loopne
mov
jns
rorl
xchg
jl
or
adc
cmp
popf
jg
movsl
push
dec
fwait
xchg
xchg
mulb
jmp
insb
or
aam
push
jecxz
lahf
mov
inc
outsl
mov
inc
ja
mov
rclb
or
fnstcw
or
and
and
sbb
mov
out
aam
test
and
std
adc
int
pushf
dec
xchg
gs
mov
mov
add
lcall
inc
movsl
adc
and
arpl
insb
push
pop
decb
mov
push
sbb
add
daa
dec
adc
cmp
xor
loope
mov
and
shrb
push
dec
add
mov
mov
xor
hlt
cld
push
fstpt
loopne
mov
movsb
add
mov
xor
sbb
in
popa
fwait
maskmovq
negl
dec
pop
add
mov
aam
mov
or
js
lods
pusha
lret
enter
dec
cld
out
cmp
jmp
dec
push
add
dec
out
sbb
ss
dec
cmp
add
lret
dec
mov
fcoms
dec
xlat
or
push
fdivl
mov
lahf
mov
jecxz
sbb
fstps
out
fdivl
push
adc
pop
add
xchg
stos
xchg
cmp
mov
inc
lods
push
xchg
mov
sahf
shrb
cmpl
sub
xor
mov
sti
cmp
cmp
jb
xchg
ret
and
add
fmulp
push
adc
int3
pop
imul
or
sub
lcall
addr16
scas
mov
cld
dec
xchg
xor
pop
subb
notb
dec
mov
cmpsb
test
nop
icebp
xchg
add
inc
adcl
xor
or
xchg
pop
xchg
lods
outsl
pop
imul
inc
jo
out
loope
xor
jg
sbb
mov
pop
mov
aaa
sbb
cld
jae
xchg
xor
add
inc
mov
cli
adc
sahf
inc
ljmp
mov
xchg
inc
rol
insl
ffree
call
sbb
mov
call
push
aam
mov
iret
sub
jl
lret
adc
imul
xor
jle
push
mov
incb
add
adc
sbb
out
in
movsb
dec
test
iret
scas
fcmovnb
xchg
cld
scas
leave
sahf
fsubs
cmp
in
adc
add
inc
mulb
push
pop
lret
loop
in
xchg
das
jno
dec
pop
test
imul
insl
push
push
xchg
movsb
mov
in
sub
xor
push
push
sub
mov
lcall
imul
sahf
sti
jle
xchg
jae
scas
mov
fs
inc
push
in
cmc
cwtl
les
jp
push
gs
decl
jle
out
xlat
cmp
popa
adc
test
test
ret
push
fdivs
scas
shll
fbld
jne
in
jle
int3
inc
in
or
out
or
lods
adc
lret
hlt
cltd
add
push
int
pop
mov
sbb
pop
mov
fadds
shll
pinsrw
loopne
sub
out
xchg
jnp
fidivl
addr16
jle
fists
xor
outsb
in
or
out
shll
push
popa
test
xchg
pop
or
push
xor
addr16
je
push
inc
mov
fimull
sub
imul
jp
dec
cli
adc
bound
in
add
test
lcall
push
inc
popf
lret
jle
push
xor
dec
stc
and
pop
xor
lea
lock
lock
imul
data16
scas
and
dec
add
or
add
mov
subl
imul
mov
jge
xlat
xchg
jnp
push
ds
sub
jmp
imul
or
leave
inc
aam
jne
lea
movb
sbb
popa
cmp
add
out
mov
mov
arpl
into
pusha
cmp
sbb
lcall
scas
push
lds
mov
xlat
xchg
push
fldcw
inc
push
jb
in
jno
imull
add
and
fcompl
movsb
xchg
cmp
push
sahf
pop
test
pop
push
adc
stos
mov
mov
das
jmp
and
insb
cltd
cmpsl
cltd
je
rcll
cmpsb
test
mov
or
rcrb
mov
mov
int3
cmp
push
loope
adc
aaa
lods
rcrl
popf
pop
add
cmp
add
mov
xor
pop
xor
mov
pop
or
in
pop
imul
int3
scas
aas
and
jb
xchg
jne
xchg
loope
aas
mov
xchg
push
cs
out
xlat
sbb
sub
test
xchg
shrl
sbb
add
and
mov
cli
clc
mov
subl
mov
fadds
xorb
jns
imul
push
xchg
cmp
std
subl
fnsave
mov
pop
mov
lds
sti
dec
test
push
inc
bound
push
push
daa
arpl
ljmp
loop
add
out
cli
mov
clc
push
mov
out
inc
push
jne
imul
sarl
adc
loope
rcll
mov
adc
je
outsb
test
xor
ss
aaa
vsubsd
sub
and
shll
and
inc
mov
test
fsubp
push
in
test
dec
js
pop
inc
mov
test
imul
ljmp
dec
mov
or
scas
mov
sbb
cmc
loop
insb
push
lds
into
xor
inc
sbbl
pusha
repz
sbb
ds
sbb
xchg
cltd
in
cli
add
inc
cmp
pop
dec
fisubl
arpl
jne
mov
addr16
pop
mov
pop
mov
lret
jae
aam
adc
das
push
or
mov
lods
cld
pop
sub
sub
mov
call
dec
dec
mov
scas
and
add
dec
push
jle
ret
lret
pop
pushf
pusha
sub
cmc
inc
lock
pop
pop
or
pusha
or
lock
push
sbb
icebp
push
outsl
aam
pop
pop
imul
inc
jle
mov
pusha
adc
into
test
push
leave
mov
xorb
cltd
push
xlat
jnp
cs
jb
jmp
out
or
xchg
cmp
mull
lcall
ljmp
mov
scas
pushf
sub
loopne,pt
or
ja
cmpsl
imull
pop
loop
jle
mov
push
add
adc
js
xor
cmpsb
insb
and
or
add
arpl
xchg
jmp
bound
push
xor
lods
imul
inc
push
push
xchg
sub
adc
cs
sbb
in
mov
and
mov
inc
daa
or
add
or
pop
dec
stos
push
testb
mov
lret
popa
repnz
rolb
lock
lods
insl
cmp
cs
cmc
or
mov
out
ja
aad
mov
rcll
loopne
ja,pn
xlat
out
shl
sbb
jne
cmpsl
leave
adc
dec
sbb
add
mov
sub
int3
insb
xchg
and
dec
icebp
inc
lea
movsl
mov
sbb
cmp
mov
outsl
xor
movsb
pop
mov
fmull
insb
cmpsl
ffree
jns
stos
mov
jnp
movsb
sbb
je
or
mov
xlat
clc
add
loopne
out
fcomps
xchg
subl
aad
mov
ret
gs
int3
les
add
dec
into
sarb
mov
fnstcw
push
cmp
dec
xchg
sub
lods
cmp
orl
jmp
lds
movsb
clc
inc
mov
xlat
stos
or
mov
aam
jb
or
jmp
pop
fistpll
stos
push
insl
dec
lret
mov
cld
ret
add
jo
or
jnp
xchg
sti
addr16
inc
xchg
mov
sub
gs
jg
jo
inc
aad
inc
dec
mov
xchg
cmp
lea
push
std
jo
stos
out
mov
daa
into
std
sub
xor
test
inc
or
dec
jmp
xchg
push
popf
es
in
push
dec
inc
clc
xor
and
sbb
cmp
sarl
out
stos
adc
push
pop
inc
test
push
fildll
sub
mov
xor
outsl
mov
inc
pop
jns
mov
outsb
inc
adc
mov
call
das
loop
cmc
jmp
xchg
sbb
jae
add
push
dec
fwait
push
pop
fsubrl
mov
loopne
ss
out
sbb
dec
inc
sub
xor
lock
movsl
add
mov
mov
iret
sbb
outsb
pop
and
ficompl
movsl
dec
nop
add
stos
dec
iret
faddp
pop
jg
jns
pop
cmp
es
jmp
mov
dec
inc
inc
loopne
in
dec
aas
jg
lret
int3
stc
cld
pop
mov
scas
jg
loope
pop
mov
adc
aam
and
and
sbb
jns
mov
loopne
fwait
jne
dec
adc
mov
sar
jne
xchg
cmp
das
lret
add
mov
scas
in
xchg
cli
pop
add
push
dec
imull
out
cwtl
fcoms
loopne
cmp
mov
mov
push
lahf
gs
repz
fnstcw
mov
in
xor
add
ja
mov
int
mov
mov
push
mov
popf
adc
fcoms
addl
cld
push
mov
add
divb
cltd
push
sub
inc
cwtl
xchg
pop
add
dec
pusha
jb
arpl
add
sbb
mov
sti
les
cmpsb
lds
outsl
jbe
lret
int
les
jecxz
xchg
xchg
call
clc
es
adcl
bound
or
and
sbb
mov
mov
bound
jg
push
adc
jl
push
je
jne
sub
subl
dec
ret
pushf
pop
adc
xchg
int3
xchg
int3
lods
test
je
mov
out
and
popa
inc
pop
ret
sub
mov
pop
shr
cli
xor
test
xchg
cmp
jo
push
stc
lds
rcll
pop
dec
jns
fsubs
cmpsb
lock
push
xor
or
leave
sbb
and
push
or
orb
push
fidivl
fbld
adc
push
enter
jle
mov
xor
mov
lods
repnz
or
fs
add
sahf
jae
fiadds
pop
cwtl
inc
cmc
in
int
fcoms
ret
push
pushf
and
inc
int3
mov
in
xchg
mov
add
jbe
cmp
inc
idivl
nop
stc
psllw
aad
add
dec
ret
mov
hlt
mov
sbb
mov
cmp
inc
in
test
scas
lret
pop
xchg
add
push
dec
xchg
xchg
outsb
cmp
loope,pt
pop
and
cld
xchg
xor
sbb
pop
mov
mov
sahf
shlb
test
dec
mov
je
push
clc
mov
fwait
das
test
stc
inc
lea
cmp
or
jle
inc
out
shlb
mov
dec
int3
lods
jl
mov
sar
andb
pop
pop
test
adc
jg
xchg
dec
jge
shlb
subb
gs
adc
pop
lods
and
mov
pop
faddl
or
fwait
mov
push
fiaddl
xchg
fwait
shll
aaa
xchg
jl
xor
outsb
adcb
aaa
out
sbbb
dec
push
adc
daa
jecxz
stos
mov
insl
mov
mov
inc
inc
push
push
inc
mov
cwtl
sbb
push
sbb
lea
or
rcll
add
dec
les
jne
lret
pop
sahf
or
out
adc
inc
jge
xor
ljmp
mov
das
jns
dec
push
lahf
cmp
aam
jnp
dec
mov
pop
cmp
cs
sub
lods
sti
popa
mov
cmp
out
mov
sbb
xlat
test
fucomp
ja
sbb
mov
inc
cld
mov
and
mov
xor
xchg
cltd
in
fstpl
inc
xor
dec
mov
in
mov
xchg
mov
sub
hlt
repz
das
out
mov
jle
repnz
push
push
and
push
into
mov
xchg
push
call
mov
int3
cmp
xor
popf
lret
mov
dec
xchg
mov
and
fstps
cmp
cld
test
mov
stos
or
add
into
dec
cld
add
xchg
cmp
inc
mov
mov
dec
lds
outsl
icebp
push
pop
adc
shrb
enter
popa
xchg
movsl
testl
repz
sti
mov
inc
lcall
pop
scas
mov
pop
dec
lods
mov
mov
and
xchg
icebp
xor
in
cmp
data16
push
in
inc
mov
stos
fadds
mov
aaa
jl
dec
insl
inc
mov
and
mov
adc
sarb
pop
enter
cmp
fidivrl
test
pop
enter
stos
inc
add
adc
nop
nop
hlt
pop
cmp
sub
movb
and
xor
cmc
pop
shll
cld
sbb
sub
test
xchg
enter
xchg
jae
xchg
push
jp
enter
test
mov
sub
inc
ljmp
push
sub
sahf
sbb
pop
push
outsb
push
mov
sub
gs
sub
sub
xchg
idiv
xchg
cmp
push
dec
icebp
sbb
sub
cwtl
jecxz
test
repnz
xchg
sbb
jmp
in
imul
jle
sbb
jl
and
and
cmpsb
push
cmpb
mov
jnp
mov
inc
rep
xchg
ds
adc
lcall
loop
in
imul
out
popa
jp
jmp
ljmp
daa
dec
jp
imul
jmp
jecxz
sbb
push
or
lods
movsb
mov
imul
arpl
call
xchg
decb
cwtl
sbb
jmp
fcmovu
insb
test
loopne
mov
push
ret
push
leave
hlt
ljmp
adc
jne
inc
rclb
in
mov
je
add
movsb
jmp
fsub
add
pop
mov
jg
or
xor
or
mov
test
cmp
insb
dec
daa
jle
inc
jl
inc
sub
inc
dec
jl
test
insb
cs
in
int3
popa
sbb
cmp
inc
sbb
mov
sub
mov
outsl
enter
or
in
xchg
stos
xchg
out
int3
xchg
stos
cltd
pop
jo
cli
inc
push
pop
sub
test
repnz
and
or
sti
inc
or
lret
mov
xchg
sub
sbb
sbb
pop
xchg
mov
pusha
aas
inc
test
adc
mov
pop
push
mov
xor
push
jmp
mov
es
aas
xlat
mov
into
xor
mov
push
mov
mov
cwtl
int3
push
add
add
rclb
or
sub
add
xchg
imul
inc
xor
jecxz
inc
ljmp
add
or
arpl
add
aas
int3
fistpll
int3
mov
cmp
test
pop
movsl
mov
roll
mov
pop
jne
cmpsl
sbb
cmp
push
fisttpll
add
push
or
shlb
shrb
xchg
sub
int3
push
sub
jmp
es
and
cltd
and
gs
aam
dec
mov
inc
arpl
cltd
and
jns
fistpl
lods
adc
data16
add
sub
pop
ss
es
mov
pop
xchg
bound
jge
aaa
jmp
mov
pop
or
outsl
movsl
ja
loop
out
jg
inc
jmp
test
jnp
cmp
pop
imul
repnz
sbb
dec
int
jne
sub
bound
in
mov
imul
jno
repnz
adc
jns
sti
movsl
mov
dec
aaa
stc
or
xchg
mov
add
pop
sbb
sub
iret
sbb
in
xlat
aad
or
testb
ljmp
imul
es
lcall
push
sbb
dec
inc
mov
sarl
cmp
sbb
mov
js
std
mov
jne
movsb
ja
push
and
dec
cmp
aad
stos
jecxz
fistpl
xor
jb
into
sti
push
xor
stos
insb
pop
ds
flds
sbb
data16
shlb
sahf
add
add
mov
idivl
mov
pop
lahf
jae
push
dec
lcall
xchg
dec
adc
loope
insb
xchg
aad
es
test
mov
xchg
das
xchg
jnp
movb
fdivrp
mov
and
add
jne
mov
add
dec
sub
or
inc
stos
testb
xchg
push
jl
rolb
loop
cli
insl
adc
cmpl
and
sbb
lods
lock
aas
xlat
jb
rolb
and
dec
scas
cmp
negb
xor
adc
mov
pop
fstp
out
insb
inc
fstpl
lret
daa
or
ret
add
mov
jle
mov
mov
subl
je
pop
mov
cmp
pop
sub
cmp
lea
or
mov
inc
je
mov
jl
mov
shll
xchg
bts
andl
xchg
testb
enter
mov
cs
or
cmp
mov
icebp
inc
sti
adc
lock
in
cli
and
push
add
push
shrb
inc
jbe
in
lods
fldcw
into
push
sbb
movsb
pop
xor
js
push
xchg
fisubrl
cmp
inc
sub
fcomps
adc
daa
pop
xchg
push
insl
cmp
mov
jns
in
mov
out
les
sbb
sbb
lds
popf
clc
imul
sbb
sahf
jp
cmp
jg
jae
or
fmul
sub
jmp
and
shlb
leave
xchg
dec
imull
cltd
daa
inc
ret
xchg
aam
push
mov
enter
lea
sahf
movsb
dec
test
jns
cli
push
mov
int3
xchg
sbb
mov
out
aam
in
cmp
orl
sbb
sub
adc
add
sahf
cwtl
fdivrp
div
rolb
out
push
xor
inc
test
pop
push
cwtl
mov
cmp
fnstsw
sub
cmpb
fs
pop
icebp
int
orb
insl
mov
inc
daa
aaa
and
push
cmp
jmp
add
adc
lods
lret
rcl
push
mov
fucomi
adc
dec
sub
mov
in
xor
jo
aaa
imul
into
mov
daa
gs
lock
pop
pop
jno
shr
out
jne
sub
sub
inc
fs
ret
sbb
pop
aam
jnp
fldenv
add
inc
jmp
cli
add
inc
inc
mov
fimull
shrb
test
push
sar
or
jno
xor
inc
or
into
je
add
rcrb
mov
fisttpll
xor
lahf
das
xor
js
add
lahf
sbb
dec
xchg
je
pop
aam
cltd
cmp
mov
mov
ja
out
dec
adc
dec
pop
sub
shlb
fildl
js
daa
aad
cmp
lahf
jecxz
dec
shl
dec
cmp
sbb
xchg
cwtl
push
paddb
mov
ret
lods
xchg
pushf
adc
mov
xchg
or
call
shr
pop
pop
test
inc
pop
or
repz
adc
xchg
xor
or
enter
es
inc
bound
push
es
inc
lret
ja
jmp
enter
cmpb
mov
xchg
cmpsb
negb
je
jae
cmp
push
push
pop
loope
xor
cmc
sub
sbb
int
out
sbb
aam
jmp
and
in
incl
pop
push
out
add
push
jbe
cmp
test
and
cmpsb
pop
orb
loope
mov
sbb
xor
xchg
and
mov
fwait
add
stos
cmc
inc
mov
mov
outsl
xchg
and
ret
cs
cmp
xchg
push
ja
out
dec
push
pusha
test
test
les
jmp
imul
and
jns
leave
cmp
pop
lock
xorb
je
sub
cmp
mov
cmp
adc
adc
enter
std
enter
push
ljmp
notl
xchg
out
and
xor
or
push
andb
inc
inc
cmpsb
popf
data16
mov
mov
cmpl
lods
and
frstor
popa
test
pop
mov
jo
les
and
int
dec
in
and
xchg
pop
cmc
add
fistpll
test
stos
push
push
arpl
pop
cmp
std
lahf
jle
xor
jns
out
out
sbb
push
push
add
movsb
push
jge
aad
fisubl
mov
mov
aad
xchg
inc
and
mov
call
jno
movsb
aad
lret
and
int3
sub
ret
pop
xor
pop
ficomps
ret
ret
or
sbb
pop
and
mov
icebp
icebp
fucomp
push
into
shll
add
push
adc
xor
mov
rcl
movsb
ja
push
lds
insb
inc
lcall
inc
xor
jl
clc
jecxz
mov
and
adc
aam
jo
add
xlat
aam
pop
sar
push
test
loope
fnstenv
push
sarl
repz
dec
pushf
add
rol
ja
xor
les
scas
inc
cmp
test
cwtl
push
jno
hlt
sbb
mov
in
jae
dec
pop
mov
mov
cmpsb
cs
lret
lcall
jmp
mov
mov
xor
mov
jmp
cmp
inc
adc
aam
or
nop
shr
out
mov
sbb
mov
subl
jno
dec
jae
int
std
mov
push
mov
in
js
testl
es
and
or
add
jnp
ja
rolb
jge
push
mov
nop
pop
pop
xchg
add
cmpb
xchg
sub
push
std
sarl
scas
fmulp
movsl
inc
clc
jg
dec
and
nop
inc
cld
stc
xchg
sbb
mov
jg
push
dec
push
fs
das
cmp
sbb
push
lods
adc
and
mov
cmp
mov
popf
mov
cwtl
dec
movsb
sub
ljmp
int3
pushf
sub
add
lock
es
inc
movsl
rcrb
or
pop
iret
stos
repz
insl
test
add
movsl
cmp
sbb
aas
ret
popa
movsl
imul
jl
loope
repnz
or
cmp
mov
pushf
adc
cs
adc
imul
lret
daa
mov
mov
outsl
fwait
in
sbb
dec
mov
int3
mov
ds
sbb
cmp
repz
lret
and
imul
mov
mov
nop
mov
rclb
mov
cmp
lds
cli
mov
popf
sbbb
cltd
iret
std
mov
jno
cwtl
repnz
addr16
inc
push
pop
xchg
xor
mov
and
mov
xchg
sbb
push
fwait
add
pusha
repnz
ljmp
add
test
xchg
cmpsb
mov
js
add
in
test
dec
cld
lds
mov
and
cmc
bound
rcrl
mov
add
sti
jecxz
in
pusha
ror
jle
cltd
lds
popf
outsl
fidivs
je
js
fs
into
sbb
cmp
js
xor
pusha
or
mov
movsb
aam
cmpsl
mov
cmpl
outsl
and
mov
rep
mov
sub
sbb
push
loopne
mov
dec
or
or
push
stos
iret
jecxz
mov
and
pop
es
inc
sbb
call
cli
mov
orl
xchg
xchg
bound
fistps
sbb
mov
inc
movsl
lahf
test
push
lahf
mov
sbb
jo
or
leave
adc
adc
add
and
pop
pusha
xchg
xchg
push
aaa
jl
pusha
push
rcrl
xor
add
or
cmpsb
jl
mov
push
push
cmpsl
mov
mov
test
shrb
add
mov
mov
xlat
test
movsb
pop
stc
movsl
cld
mov
and
fdivs
sub
cmp
and
inc
push
sbbb
mov
das
sbb
mov
inc
jne
nop
jae
dec
push
dec
push
outsl
bound
pop
jns
or
mov
mov
sahf
out
mov
jmp
loop
push
aam
push
cs
jnp
lock
repnz
popf
call
mov
push
sub
dec
sub
sarb
jge
xorl
inc
mov
movsl
sbb
cmp
pop
scas
scas
pop
mov
jmp
outsb
cs
cwtl
cs
adc
and
adc
adc
xchg
push
xor
pop
inc
int
divl
adc
or
pop
shlb
popa
mov
mov
cmp
mov
fbstp
mov
cli
mov
adc
pop
int
jg
cmp
sti
mov
mov
pop
jle
inc
jnp
adc
push
in
hlt
adc
add
inc
push
fmull
xor
fsubs
adc
dec
xchg
sarl
pop
out
lods
leave
push
inc
std
dec
pop
ds
push
or
dec
clc
aad
push
mov
cmpsb
jl
sbb
ret
aam
aas
jp
mov
pop
pop
mov
out
jmp
shlb
mov
jmp
test
popf
fbld
push
jmp
enter
cltd
dec
sbb
lds
add
mov
mov
repnz
pop
sub
fwait
lcall
pushf
pop
negl
stos
repz
mov
les
andb
or
popf
sti
or
lea
sahf
ljmp
lcall
loop
movsl
lahf
in
cli
inc
pusha
cmp
rcll
mov
or
jecxz
pop
int3
shll
or
popa
adc
jg
imul
loop
jnp
push
sbb
inc
icebp
pop
mov
shufps
inc
xor
inc
fabs
cmp
xchg
stos
fldt
insl
mov
xchg
fnstsw
aam
xchg
push
inc
add
shrl
jnp
pop
mov
fildll
scas
or
hlt
andb
xchg
insb
pop
xor
les
jnp
cmp
jno
gs
cmpb
xchg
loop
sbb
dec
int
lcall
in
leave
sarb
into
pushf
mov
cmp
and
call
xchg
rcrb
or
insl
push
out
sub
mov
jno
mov
dec
inc
or
imul
xor
add
in
or
push
push
stos
aas
cmp
mov
mov
sbb
gs
mov
test
pop
cmp
xlat
inc
aad
bnd
mov
cltd
popa
jge
fldl
ss
data16
into
decb
inc
mov
sbb
hlt
xchg
jae
hlt
into
adc
adc
icebp
incb
jmp
aaa
inc
or
sub
lea
fwait
lret
scas
add
in
clc
daa
xlat
xchg
int3
shll
mov
push
lahf
data16
sub
push
inc
push
dec
mov
or
in
test
sbb
inc
leave
test
sub
dec
js
xor
mov
jle
lods
pop
sbb
fcomps
fsubrs
shlb
xlat
push
or
pop
cmp
inc
adc
pop
and
jecxz
das
add
ret
iret
ret
gs
mov
fcos
sub
mov
clc
aam
loopne
dec
xchg
rcrb
gs
outsl
fcompl
filds
sbb
cmpsb
in
mov
push
loopne
mov
and
fnstcw
cmp
cld
adc
push
aam
lea
test
or
das
fidivrs
mov
hlt
inc
xlat
test
inc
es
xor
mov
push
loopne
nop
sub
call
mov
sbb
cmp
aam
or
out
sub
mov
cmp
adc
in
jbe
popa
adc
stc
nop
mov
push
sub
lret
je
fimuls
sbb
imul
pop
in
rcr
int3
lahf
stos
push
pop
xchg
loop
push
enter
mov
sbb
rolb
add
int
test
pop
rclb
xchg
stos
adc
jne
mov
out
sub
push
mov
sbb
cmp
pop
sub
jp
enter
sub
mov
fs
cmpsb
cmc
call
jo
test
cmp
jnp
fisttpll
in
dec
xchg
and
fmull
inc
loopne
imul
mov
mov
xor
and
jmp
and
sbb
orb
fcomi
sbb
arpl
adc
test
je
jns
jecxz
mov
rol
cwtl
xchg
pop
mov
or
inc
in
jmp
loop
fimuls
addl
jle
test
xchg
shl
mov
shrb
mov
mov
push
add
xchg
pop
test
nop
xlat
xchg
cwtl
mov
int3
insl
mov
mov
mov
lret
adc
in
xchg
orb
stos
daa
pushf
sti
sbb
cli
and
iret
aaa
jle
mov
cld
out
add
or
inc
xchg
frstor
cmc
pop
add
fildl
aaa
div
sar
xchg
dec
sub
xor
and
stos
mov
xor
pop
ja
pop
popa
sahf
shll
mov
rorl
pop
outsb
xchg
adc
fsts
push
push
xchg
xor
sbb
outsb
cmp
fsts
ljmp
mov
out
add
int
mov
pop
js
push
cmovns
and
push
pop
mov
in
jl
lret
fldz
loopne
mov
jle
bound
sahf
xor
push
test
jecxz
cmp
mov
outsb
jne
out
clc
push
add
dec
das
cli
adc
cmp
lret
insl
xchg
jg
test
loopne
sbb
insb
rorb
sub
lcall
xchg
inc
xor
push
insl
movsl
push
fadd
mov
in
push
inc
fcoml
mov
scas
dec
mov
dec
mov
add
push
test
mov
sti
xor
leave
add
pop
and
aam
pop
mov
adc
cltd
jmp
sahf
fimuls
adc
daa
jo
sbb
cld
push
daa
les
imul
sbb
push
mov
mov
mov
sbb
imul
pop
cmp
fwait
and
push
je
pop
sti
jp
str
nop
test
add
lea
pop
inc
dec
fcom
mov
xor
add
mov
inc
int3
fs
fbld
daa
sub
ret
dec
dec
cmp
lcall
into
fsub
loop
xor
inc
addr16
repnz
nop
add
mov
mov
cmp
or
imul
and
mov
xor
sbb
sub
push
mov
mov
lds
and
mov
or
pop
cld
sbb
loop
out
sahf
pop
push
push
or
xor
popf
add
mov
jge
jno
dec
and
xchg
addr16
lds
rcrb
mov
cli
ret
iret
or
cmp
ret
add
arpl
leave
test
sub
out
daa
or
cs
jl
push
inc
sarb
andb
add
push
iret
xlat
clc
andl
jle
mov
xor
into
pop
or
aaa
jno
xor
test
out
test
xorb
or
cmp
mov
mov
push
xchg
enter
aad
outsl
daa
jns
shl
shl
icebp
mov
xchg
nop
pop
mov
inc
mov
into
cmpsl
inc
and
mov
int
jno
ljmp
xor
push
xchg
ficoml
arpl
push
inc
je
pop
sub
in
mov
adc
dec
outsb
sbb
push
sbb
add
loope
mov
xchg
xchg
push
adcb
into
jno
push
fdivs
dec
into
aaa
sbb
pop
xchg
aaa
cli
ja
int3
popf
push
xor
aas
jl
jecxz
inc
pop
add
cmpl
xchg
sbbl
push
sub
lret
add
sub
in
js
or
es
orb
adc
sbb
fldcw
sub
pop
lahf
hlt
test
mov
js
and
dec
or
jne
xchg
add
loopne
das
cli
dec
mov
and
dec
lods
xchg
jp
flds
mov
pop
push
nop
int
pop
adc
add
mov
js
add
pop
jl
pusha
or
jle
pop
cs
lea
jae
andl
jle
mov
icebp
pushf
dec
data16
ss
push
cmp
add
cmpsb
sbb
and
das
adc
int
lahf
fwait
out
orb
push
sub
push
mov
dec
cmp
jno,pt
rolb
push
ss
stos
add
jne
adc
and
mov
add
sub
mov
into
or
leave
adcl
das
cmp
lret
sub
xlat
jno
cmp
outsl
in
test
cli
push
push
in
dec
pop
ret
add
push
push
xchg
inc
int3
sbb
xchg
or
out
xchg
cmp
inc
sahf
push
xchg
mov
mov
bound
inc
push
je
push
js
jmp
and
outsb
jg
push
and
jl
pop
adc
mov
repz
ret
loopne
mov
push
inc
pop
aam
xlat
mov
adc
fadd
ret
lods
xor
cmpsl
aas
cmp
fldl
es
or
inc
mov
pop
cmp
jl
mov
fs
xlat
or
xchg
adc
add
int
nop
cwtl
js
push
int
jecxz
imul
lea
mov
shrl
xchg
and
sbb
dec
mov
rorb
cmp
xchg
xchg
outsb
dec
adc
xchg
mov
jno
movsl
xor
xchg
inc
popf
lock
push
mov
push
pop
loop
aad
jle
jne
jge
mov
cmp
in
rcl
nop
sub
mov
sub
jae
dec
mov
in
add
mov
stos
lods
mov
test
push
jnp
mov
push
es
hlt
iret
jmp
ljmp
aad
adc
jecxz
fimull
in
adc
xor
xor
xor
jo
pop
add
fwait
inc
or
push
mov
cmp
sub
dec
hlt
lahf
and
mov
ja
fadd
xchg
insb
cs
cmp
negb
xchg
or
scas
lcall
cmp
repnz
idivb
push
mov
inc
or
cmp
test
je
push
lock
pushf
fidivrs
lods
sbb
push
sbb
xchg
xor
cmp
enter
pop
std
mov
push
or
pop
lds
pop
sti
sbb
mov
add
add
loopne
xchg
je
mov
and
jnp
push
add
mov
das
int
xchg
jne
dec
aaa
push
fwait
neg
shlb
arpl
or
test
push
in
inc
push
push
adc
pop
ds
cmp
adc
pop
cld
xor
sbb
sbb
popa
sahf
pop
dec
ret
pushf
repz
mov
add
sbb
adc
sarl
add
add
dec
das
in
mov
fmul
test
pushf
arpl
hlt
cmp
jnp
xor
aas
cltd
pop
in
adc
mov
pop
and
lock
or
das
jmp
cmpsl
xor
lret
dec
adc
or
loopne
or
pop
stc
mov
or
adc
lds
mov
fcomps
arpl
jmp
xchg
into
pop
out
dec
xchg
icebp
mov
cmp
ljmp
add
shrb
mov
and
xor
pop
inc
repnz
sbb
mov
inc
jnp
sub
add
mov
inc
and
mov
sahf
jb
arpl
mov
outsb
ljmp
xchg
or
addb
xchg
pop
gs
divb
mov
outsl
icebp
pop
jle
in
scas
out
mov
push
sbb
daa
es
test
push
and
mov
adc
inc
jge
loop
sub
sbb
inc
inc
xor
divb
sub
call
xchg
or
ds
push
insb
xor
adc
inc
ss
jp
iret
or
add
adc
rolb
test
adc
pop
fmuls
pushf
popa
gs
or
xchg
xchg
daa
scas
loop
repz
cmp
adc
loope
sub
xchg
pusha
push
xor
push
adc
js
insl
test
js
pushf
loope
xchg
cmp
mov
pop
xor
cmpsb
mov
sbb
adc
cltd
jl
sub
loopne
push
add
in
xchg
mov
pop
call
cmp
or
mov
aad
and
jns
jbe
aas
imull
sub
cmp
hlt
jmp
or
test
test
shl
mov
and
test
sub
leave
or
push
jae
sbb
adc
scas
xchg
shrl
dec
xor
jnp
in
fbld
cs
push
sbb
fwait
mov
outsb
xor
rcl
je
dec
icebp
jb
xor
and
adc
test
into
dec
xor
gs
ret
push
mov
add
nop
add
in
or
inc
cmpsl
cli
sub
push
jge
adc
pop
jmp
das
ficoml
clc
in
inc
ror
jbe
leave
xor
jns
jl
popa
aad
fildl
push
xchg
jno
imul
fs
and
mov
dec
cmp
ja
cmp
jmp
lds
js
dec
push
lcall
sub
cmp
jo
repnz
dec
jle
xor
pop
jl
ffreep
aaa
mov
test
jnp
scas
fisttps
xchg
stc
push
jl
push
xchg
push
f2xm1
mov
and
sbb
dec
imul
push
sub
jnp
outsb
mov
arpl
jg
loop
fldt
mov
xor
arpl
jbe
mov
sbb
mov
imul
cltd
xchg
sub
sbb
jl
int
cli
push
and
or
xor
pop
divl
dec
cs
push
pusha
pusha
fistps
or
aaa
cld
stos
mov
push
xchg
mov
sti
lods
cmpsb
sbb
sarb
nop
mov
mov
push
xor
mov
jb
movsl
movsl
and
push
sahf
mov
out
jb
mov
push
xor
sti
mov
repz
inc
sbbl
mov
adc
je
stos
push
mov
fstl
aam
mov
jp
sbbb
icebp
push
repz
push
mov
inc
sbb
fimull
cmc
movsl
cld
lea
dec
xchg
pop
cmp
fdivrl
outsb
push
stc
pop
fdivrs
sbb
jae
pushf
nop
jg
mov
jg
ljmp
push
push
inc
je
daa
rcr
pop
add
lea
mov
mov
ficoml
adc
lahf
repnz
mov
andb
sbbb
jb
adc
test
mov
repz
je
adc
push
imul
dec
out
adcl
repz
int3
jge
sub
ja
sub
into
xchg
xor
push
scas
imul
mov
pushf
mov
arpl
add
lods
mov
ljmp
stc
jnp
or
or
push
mov
xchg
add
mov
loop
mov
outsb
repnz
icebp
cmp
or
cmp
lret
hlt
mov
insb
add
adc
cmc
sbb
cmp
imul
push
pop
jmp
sbb
pop
xchg
jb
and
or
faddl
mov
jmp
add
dec
aam
lods
push
in
sarb
dec
mov
repnz
in
adc
rclb
add
xchg
dec
inc
inc
or
js
mov
dec
js
popf
in
add
sbb
pushf
add
hlt
imul
les
xchg
lea
icebp
mov
inc
nop
mov
or
lret
in
out
shll
mov
jae
orb
mov
xchg
cmp
jns
cmp
fadds
hlt
and
mov
adcb
lret
xlat
inc
fchs
jnp
mov
cli
outsb
xchg
aas
cltd
push
stos
mov
mov
adc
add
add
popa
lds
out
sub
mov
mov
mov
jp
lods
dec
xor
out
mov
andl
and
xor
push
xchg
sahf
xlat
fidivrs
ret
loopne
jmp
xor
lahf
add
xchg
dec
cmp
pop
dec
xchg
push
sub
sahf
jne
sub
inc
xchg
incb
repnz
push
cmp
rcl
sbbb
std
bound
and
imul
xor
dec
dec
scas
jp
sub
pop
mov
in
clflush
and
inc
sqrtps
add
cmp
mov
lahf
mov
rorb
push
out
insb
pop
lret
subb
daa
mov
inc
jmp
xor
xchg
bound
mov
push
popf
push
mov
icebp
sub
stos
push
jnp
stc
jle
out
inc
insl
psllq
insb
jp
or
push
out
cmp
fdivrl
enter
clc
sarb
or
fsubs
aas
dec
out
shll
scas
outsb
fcmovnb
test
in
mov
test
push
inc
test
arpl
aad
xor
sbb
fsubrs
popa
rorl
xchg
lahf
or
sbb
push
leave
stos
and
adc
addr16
xchg
sbb
scas
shrl
imul
repnz
scas
bound
gs
mov
mov
outsb
loopne
push
sbb
mov
xchg
add
or
pop
dec
dec
addr16
inc
mov
cwtl
fistpll
jo
and
fistpl
fisubrl
mov
mov
xchg
imul
xchg
in
cmp
lahf
bound
inc
addr16
int3
icebp
test
mov
or
or
xchg
mov
fs
mov
inc
sbb
xor
jo
mov
fldt
jbe
lods
push
or
movsb
iret
in
ret
xor
movsb
pop
fildl
or
test
sbb
sbb
sbb
adc
xor
sub
outsb
sbb
mov
adc
sahf
lea
jg
sahf
and
sarb
test
add
call
out
push
loope
mov
push
cmpsl
and
punpckhbw
adc
inc
inc
scas
jno
jmp
mov
push
cmp
xchg
inc
cltd
mov
adc
sub
repz
cltd
imul
ret
lods
mov
cld
ret
test
add
mov
outsb
jno
scas
lds
jno
clc
sbb
scas
cli
pop
outsb
mov
arpl
rcr
sub
or
clc
hlt
pop
loope
outsb
pop
test
dec
dec
mov
outsl
xlat
sub
pop
xor
pop
pop
mull
jmp
push
sub
sti
fs
adc
sub
iret
fiadds
stos
xlat
loop
cmpsb
jmp
jecxz
sar
push
lods
aaa
movb
xchg
fsub
into
xchg
clc
jge
hlt
outsb
lock
call
cli
push
out
pop
cld
mov
cmc
and
mov
popf
aaa
push
and
push
ss
cli
cmp
mov
insl
nop
inc
inc
daa
div
pop
sbb
push
xlat
daa
dec
xor
xor
push
mov
dec
pop
and
sub
aad
adc
imul
jg
ret
cmpsl
cmp
out
or
cwtl
xchg
jmp
jmp
das
inc
imul
xchg
stos
sbb
bound
outsb
adc
imul
insl
xchg
or
out
scas
inc
insb
not
xchg
sbb
mov
cltd
loopne
into
pop
mov
jecxz
rorl
mov
xor
adcb
jmp
test
mov
mov
cmp
sub
mov
fidivs
negb
cmpsl
test
nop
sub
je
je
mov
into
dec
xor
mov
aaa
fisubs
stc
jge
movsb
pop
ss
lea
sbbb
es
or
sub
repnz
cmp
fildll
lock
xchg
outsl
call
pop
mov
idivl
les
inc
sbb
sarl
decl
leave
xor
xor
movsl
lock
pop
loop
js
and
jecxz
cmp
sahf
xchg
jnp
xchg
repz
sub
sub
imul
push
out
std
shlb
cmp
or
push
mov
pop
fwait
cmc
std
insl
imul
or
scas
mov
pop
negl
std
jae
ja
and
cld
mov
test
outsb
jb
inc
arpl
imulb
lock
lods
lret
adc
movsb
mov
add
jno
and
add
out
pop
incb
pop
or
sbb
and
les
add
in
and
out
xor
aam
ret
mov
cli
lods
out
mov
adc
xor
adc
inc
xor
mov
mov
lods
stos
add
xor
mov
jno
pusha
enter
pop
lds
dec
les
or
jae
lds
addr16
outsl
test
shll
push
call
insb
jg
or
inc
jae
scas
sub
xor
outsl
push
jne
inc
scas
xor
push
pop
test
pop
pop
out
mov
sub
jmp
test
pop
shr
pop
out
emms
rorb
out
in
iret
xchg
in
ficomps
mov
in
mov
mov
jge
push
int
xor
xor
js
mov
or
adc
and
repnz
popf
daa
dec
mov
mov
mov
sbb
mov
mov
fmull
sbbb
sbb
loope
dec
or
mov
jge
or
data16
call
rcrb
dec
jg
sahf
adc
dec
cs
jns
jg
push
test
pop
int
lcall
pushl
js
scas
xor
int3
mov
mov
aad
imul
addr16
jb
or
into
outsb
mov
rclb
add
and
jnp
daa
sbb
in
insb
xchg
inc
push
sbb
jp
inc
call
push
fstpl
daa
mov
jns
xchg
cmpsb
repnz
add
outsl
xchg
pop
lea
fwait
in
hlt
adc
popa
sub
push
mov
and
and
test
fdivs
sbb
xchg
jp
push
pushf
xor
push
sbb
pop
mov
stc
mov
js
test
sbb
xchg
shl
cmp
fnstsw
gs
daa
jae
xchg
jne
ljmp
push
add
jmp
push
inc
adcl
xchg
xchg
dec
mov
popf
pop
fmull
mov
fists
jne
imulb
aas
les
fs
fwait
jmp
sub
mov
xor
je
clc
test
jbe
mov
addb
mov
cmp
pusha
addl
xor
pop
pusha
lods
imul
dec
fnstcw
scas
cli
jge
xor
shl
enter
out
insb
sub
mov
int3
scas
xor
int
sbb
bound
cmp
add
test
mov
roll
insl
jge
push
rcrb
out
push
inc
test
popa
out
add
cwtl
pop
mov
roll
lcall
leave
adc
repz
mov
xlat
and
dec
clc
std
sbb
jnp
leave
popa
jl
mov
cmp
mov
frstor
jo
shrb
dec
lds
mov
orl
mov
dec
sub
aas
aaa
leave
jo
mov
idivl
dec
and
je
movsb
adc
mov
call
int
out
push
xchg
movsl
mov
push
popf
loopne
sbb
and
test
sbb
add
add
push
inc
ficoml
push
add
call
inc
loop
jb
clc
test
loop
fstl
test
and
mov
out
ret
jl
push
dec
sbb
lods
jmp
or
pop
cmpsl
adc
stc
push
sbb
call
hlt
ljmp
fldt
inc
dec
lret
enter
std
ret
cmp
fimull
movsl
jb
jg
push
jle
fdiv
dec
aad
cmp
pop
pop
dec
cmp
nop
test
stc
call
xor
mov
int3
pop
xor
aas
out
push
xchg
sarl
pop
push
sbb
ljmp
lea
dec
sarl
cmpsb
adc
ja
sbb
lret
xor
aas
aam
outsb
int
jbe
loop
out
fwait
ret
sbb
repz
adcb
jae
xchg
inc
hlt
add
mov
adc
dec
test
sub
sbb
jbe
inc
xchg
xor
sbb
int3
in
outsb
gs
adc
inc
mov
and
aas
lret
imul
les
fstpl
outsl
dec
adc
cmpsb
cmp
lds
lahf
repnz
je
out
adc
pop
add
and
daa
or
imul
pop
xor
cs
jecxz
lret
les
jmp
push
lods
imul
mov
sbb
mov
call
les
fsubs
rcll
jnp
pop
ja
mov
jb
fs
lods
insb
pop
leave
cmp
insb
sbb
mov
push
pop
and
arpl
mov
adc
add
aad
aas
nop
add
enter
adc
lock
mov
pop
arpl
test
fstl
sub
jb
and
xchg
add
jle
adc
mov
loop
jp
push
add
ds
dec
dec
cltd
popf
jp
cltd
fmuls
dec
pop
jne
xchg
pop
int3
mov
push
inc
out
pusha
out
xlat
test
and
inc
push
mov
sbb
cld
lret
mov
nop
push
dec
push
dec
iret
in
or
into
mov
in
pop
sysexit
ss
fldl
lahf
and
mov
adc
pop
fsubl
sahf
mov
jns
mov
adc
cmp
bound
lcall
shl
fs
adc
cltd
adc
mov
push
push
mov
das
lea
ja
sbb
scas
es
pop
sub
loopne
jl
aas
push
xchg
cmp
xor
add
sub
stc
es
jg
dec
roll
inc
push
adc
loope
mov
cmp
shrl
or
popa
adc
dec
sbb
xchg
loopne
and
shrb
repz
mov
ret
push
jb
and
jno
jo
shrl
push
adc
test
pop
and
pop
mov
and
pop
sbb
push
out
lock
scas
xchg
push
pusha
jae
jmp
clc
mov
mov
sub
mov
shl
fnsave
inc
int
repnz
pop
pop
push
mov
jb
push
inc
pop
jge
in
pop
repnz
push
mov
jb
xchg
shll
pop
addb
jae
jno
inc
repz
out
mov
loop
repnz
jne
fldenv
sbb
jae
scas
or
sbb
mov
jno
mov
mov
pop
mov
iret
mov
sub
and
mov
inc
pop
in
xchg
and
insl
adc
xor
add
jmp
pop
cli
push
push
xlat
jne
pop
popa
bts
mov
fdivrp
mov
xor
adc
mov
push
aam
ud0
enter
rorl
xchg
adc
add
or
dec
stos
stos
rclb
add
dec
arpl
xchg
or
insl
push
cli
out
jno
mov
loop
push
aas
mov
rclb
sub
mov
or
pop
int
adc
inc
jns
push
sbb
scas
inc
in
push
loope
cwtl
add
mov
repnz
imul
jb
fldenv
test
add
push
addr16
xchg
mov
push
mov
pop
xchg
add
into
lods
test
inc
add
adc
push
mov
scas
pop
dec
mov
jbe
mov
das
inc
adc
loope
add
in
xorb
cmc
cltd
push
sub
push
out
loopne
lret
push
xor
sub
sahf
jle
inc
xchg
or
daa
sbb
mov
lods
adc
call
adc
xor
fistpll
bound
inc
ror
orl
mov
push
daa
push
stc
mov
xchg
xor
inc
inc
cmp
sbb
xor
pushf
sbb
into
inc
aad
push
repz
push
ja
mov
pushf
sbb
pop
dec
popa
mov
adc
inc
cmpsb
test
push
mov
sahf
jns
scas
jmp
and
push
clc
test
dec
cld
push
add
mov
pop
pop
cmp
adc
imul
aas
sti
pop
xchg
insb
push
or
dec
popf
and
iret
pop
or
dec
fldt
cltd
stos
or
dec
mov
call
and
ds
push
nop
out
dec
inc
jno
xlat
sub
add
outsb
pushf
jmp
ficomps
mov
fwait
cmp
jo
or
iret
jae
pop
andps
and
adc
pop
jnp
bound
int3
push
je
xor
xchg
inc
repnz
or
adc
repnz
and
pop
gs
lods
dec
ss
cltd
daa
cmp
addr16
jns
fdivp
push
and
iret
lea
es
dec
jne
mov
add
mov
into
xchg
adcb
mov
shrb
hlt
nop
push
mov
cmp
mov
push
out
mov
sbb
jno
cwtl
cmpsb
js
sbb
push
push
add
sub
dec
loopne
pop
adc
arpl
sub
pop
xchg
arpl
repz
xor
js
fcoml
repz
mov
scas
or
and
lret
nop
cmpsl
jnp
fcompl
dec
into
pop
inc
mov
sti
and
lods
lret
xchg
adc
xor
sub
or
repz
lea
push
hlt
lret
jge
cmpsb
xchg
fcoms
daa
or
daa
cs
xchg
dec
cli
mov
bound
fcomps
inc
addb
int
mov
dec
dec
enter
fsubs
cmovbe
add
sbb
mov
mov
pushf
daa
popf
inc
add
push
jg
pushf
or
data16
jo
mov
jg
jecxz
cmpsl
inc
jle
adc
add
sbb
mov
int3
sti
jno
mov
mov
cmpb
gs
loopne
imul
call
mov
je
mov
cwtl
jecxz
jb
mov
and
adc
mov
jnp
adc
xor
sub
mov
enter
psrld
sub
shrb
dec
jo
andb
adc
lahf
repz
pop
add
push
mov
inc
leave
adc
xchg
mov
sar
mov
cmc
gs
dec
movsb
pop
mov
dec
xchg
xchg
sub
lret
jnp
xchg
push
out
mov
mov
mov
and
montmul
cmpsb
andb
jg
addl
ror
mov
mov
push
shrb
xor
retw
iret
dec
repnz
inc
inc
mov
imul
push
pop
imul
aas
int3
jb
mov
icebp
in
mov
or
xchg
push
lahf
mov
sbb
mov
xchg
mov
shll
pop
push
cs
sub
dec
imul
pop
mov
repnz
fdivl
sub
sub
sti
daa
push
xor
dec
xor
pop
and
mov
out
es
pop
dec
popa
clc
cli
pop
push
jnp
punpcklbw
mov
ret
cwtl
sbb
leave
cmp
or
push
ficoml
mov
testb
lret
sub
mov
sbb
cmp
or
mov
es
aam
push
sbb
pop
flds
sahf
jecxz
sbb
mov
lret
sub
push
pop
adc
push
mov
mov
add
adc
mov
movsl
sbb
movsl
aaa
testl
dec
aas
mov
call
mov
push
dec
jb
dec
inc
jl
aaa
ret
out
pusha
push
data16
jecxz
inc
push
out
ljmp
sar
mov
jae
leave
fmulp
leave
mov
nop
jb
ret
repz
test
fsubrs
jne
push
cmp
loope
mov
mov
mov
rol
into
je
les
jmp
sub
repnz
xchg
jge
push
adc
inc
out
fcmovnb
dec
push
sbb
loop
andb
dec
in
pop
xlat
xchg
lods
sub
push
stc
push
sbb
mov
in
and
bound
or
sbb
add
cli
mov
test
idiv
jae
lds
jmp
mov
cmp
movsl
jp
sbbl
xchg
jmp
xchg
add
ret
sbb
or
cltd
aaa
xchg
cmpsb
add
pop
mov
dec
xor
sbb
push
mov
adc
sub
sbb
dec
jnp
popa
adc
lods
push
adc
xor
pop
dec
js
mov
jmp
cs
pushf
pop
in
jae
fdivp
movsl
push
adc
and
mov
xlat
add
daa
adc
and
sub
mov
sbb
int3
pop
lds
cmp
lds
and
and
dec
aam
sub
push
adc
xchg
test
xchg
lret
ds
lret
jp
fnsave
adc
mov
or
xor
add
mov
add
imul
stos
mov
stc
fsub
cmpsl
adc
push
repz
icebp
jae
mov
dec
pop
out
mov
or
scas
call
lock
dec
aaa
cmp
dec
js
lcall
lods
sahf
pop
pop
movsb
addr16
fistl
std
xchg
inc
mov
shlb
xor
inc
fisubrl
pop
mov
ljmp
inc
sbb
hlt
and
inc
test
sbb
adc
aad
int
xchg
jl
cmp
mov
imul
je
dec
adc
fstps
mov
dec
xchg
or
mov
xchg
movsl
mov
fs
movaps
popf
fcmove
pushl
adc
cmp
incl
pop
dec
mov
mov
loope
xor
imul
lds
test
aam
shrl
xor
inc
mov
pop
adc
mov
sti
mov
xor
jb
dec
pop
mov
lret
push
popf
sub
adc
xor
sub
ds
lret
mov
out
mov
mov
xor
cmpsl
dec
mov
adc
pop
add
and
push
xchg
sub
je
jle,pt
cmpl
aam
xorl
pusha
mov
rclb
or
lcall
jb
mov
cmc
xor
add
hlt
jg
xlat
loopne
fcoms
adc
add
outsb
lcall
aas
sub
ja
sbb
inc
scas
ss
sub
loopne
lods
push
add
hlt
mulb
ss
shrl
push
mov
and
jns
xchg
lods
xchg
imul
cli
push
pop
rcr
loopne
cmc
stos
sub
jge,pt
sbb
pop
test
ss
push
inc
mov
xchg
lahf
bound
imul
pmullw
stos
lret
movsb
rcr
out
repnz
cmp
adc
xchg
cli
jge
cmp
lea
test
mov
mov
jecxz
add
adc
xchg
pop
pushf
jmp
daa
mov
push
add
lods
xor
shll
rcrl
cld
sbb
repz
pop
mov
outsb
mov
cmpsl
mov
cmp
mov
sahf
adc
movsb
enter
shlb
test
aas
test
xor
and
sarb
add
ja
and
xchg
mov
aas
jbe
int3
subb
jne
xchg
sub
cwtl
movsb
ficoml
fists
nop
popa
push
test
ret
test
fsubrs
inc
test
dec
jge
nop
out
in
stc
mov
jne
jb
shl
and
stos
in
ljmp
imul
sub
cmc
lcall
cmpsb
push
sbb
stos
and
push
outsb
ljmp
pop
jecxz
mov
outsb
cmc
in
leave
pop
xor
lods
mov
sub
or
push
mov
mov
inc
in
xchg
int
xor
sti
lock
push
xchg
dec
ja
insb
imul
pop
mov
pop
lds
adc
push
cmp
sbb
cld
jmp
jle
pushf
pop
sbbb
mov
lcall
mov
add
mov
ret
mov
into
or
or
imulb
mov
dec
mov
mov
sub
aam
out
xor
sub
addr16
cmp
in
inc
dec
and
enter
mov
ret
imul
sbb
push
les
in
scas
lods
mov
mov
enter
loopne
jne
lcall
or
aas
mov
sbb
xchg
mov
fstl
ljmp
cmp
ds
fincstp
jns
cmp
stos
or
inc
mulb
mov
sub
nop
sbb
xorl
sub
inc
push
aas
insl
adc
in
xchg
pop
xchg
nop
ja
fstp
adc
add
repz
xor
dec
inc
cmp
mov
adc
das
mov
mov
mov
sarl
jl
dec
mov
loopne
call
jb
aas
test
sub
pop
out
adc
les
jecxz
dec
ljmp
mov
into
and
mov
mov
adc
movsb
mov
das
div
loope
dec
jnp
mov
cld
rcrb
jg
xor
fdivrs
adc
inc
inc
mov
or
push
xor
and
or
dec
aam
push
inc
cmpsl
mov
ret
xor
adc
adc
mov
fidivs
cmpb
test
add
add
addr16
popa
dec
xchg
or
sbb
mov
loop
out
sub
in
test
push
outsl
das
aad
push
pop
repnz
sarl
or
dec
mov
data16
dec
mov
out
dec
mov
mov
push
add
jmp
pop
sub
mov
mov
sub
inc
addb
int
sbb
xor
rorl
pop
push
stc
cli
hlt
jns
sub
xor
jno
inc
pop
mov
dec
mov
inc
je
lock
or
dec
xor
and
ffree
dec
push
adc
xor
inc
das
stos
lods
stos
dec
push
rolb
test
jp
outsb
or
arpl
int3
pop
xchg
andb
lahf
sub
mov
adc
in
cmp
pop
lret
mov
mov
mov
rcll
mov
mov
lret
cld
data16
scas
push
or
mov
cmp
popa
nop
add
fst
dec
adc
pop
mov
sub
cmp
ret
stos
jae
cli
cmp
divb
mov
cmc
sbb
xlat
out
in
pop
shl
cmc
pop
loope
or
ret
icebp
pop
jle
mov
sbb
mov
loopne
int
mov
insb
rol
mov
adc
add
aas
inc
push
mov
xchg
push
in
fadd
jae
call
mov
adc
mov
xor
pop
inc
xchg
enter
push
xchg
sbb
icebp
push
movsl
xor
flds
stc
pop
push
sub
dec
xor
mov
push
fwait
push
call
ljmp
xor
scas
dec
in
mov
lcall
lea
pop
or
je
out
test
dec
ds
icebp
addr16
inc
fs
out
shr
xchg
xchg
sbb
and
xor
add
popf
lcall
popf
mov
adc
std
in
mov
cwtl
inc
push
iret
stc
lcall
int
out
xchg
ss
fs
and
push
pop
into
sahf
data16
xor
cmp
xor
pop
rclb
movsb
cmp
mov
and
mov
add
loopne
out
lock
xchg
clc
incl
sti
shlb
dec
mov
mov
pop
aaa
insb
shlb
arpl
imul
cld
les
and
sub
push
sahf
out
nop
jle
inc
mov
rclb
lcall
mov
out
dec
pushf
mov
ljmp
das
ja
hlt
add
or
and
ret
inc
mov
aas
lock
icebp
adc
jge
icebp
xor
push
out
pushf
popf
popf
jecxz
inc
fcomps
fucomp
sub
lock
inc
or
cmpb
inc
dec
stos
dec
popa
ja
fbstp
std
mov
cli
idivl
xchg
fidivl
out
cmpsb
push
sbb
sbb
jnp
sub
adc
testb
enter
push
adc
enter
in
xor
or
xchg
clc
sub
comiss
ret
pop
mov
out
fwait
lret
movsb
int
push
xchg
lods
and
loope
aaa
sub
cltd
das
imul
add
out
sarl
and
pop
push
sbb
imul
lds
mov
mov
xor
fisubrl
inc
subl
add
xor
adc
lret
pop
dec
xchg
jo
add
int
or
jecxz
pushf
pop
test
lods
scas
lcall
pop
cmp
fisttpl
aas
fcomps
fidivl
fistps
test
div
fnstcw
sbb
stos
sbb
jle
and
rorb
test
pop
inc
test
xor
adcl
mov
adc
lea
adc
xchg
cmp
add
push
pop
stc
in
mov
lcall
push
inc
in
mov
lods
inc
add
icebp
fdivrs
hlt
cmp
sbb
int3
lea
add
clc
adc
subb
js,pn
sbb
pushl
push
xor
sub
push
mov
ds
clc
shll
inc
insl
daa
out
cmp
jmp
push
mov
push
lock
jmp
mov
jae
les
push
push
aaa
mov
dec
push
jnp
jg
cmp
and
fnstenv
mov
push
je
mov
adc
cld
outsb
aad
insb
daa
imul
jmp
jl
xchg
cmpsl
ss
fimuls
cmpsl
iret
jae
mov
stos
xchg
lock
popf
xor
xchg
adc
sbb
push
mov
cld
cli
add
int3
aam
rclb
push
push
lahf
mov
sub
outsl
movsl
fidivl
out
pop
pop
add
outsb
imul
fsub
fidivrl
jns
dec
add
stos
inc
jge
sbb
mov
sbb
sub
test
xchg
cs
std
fcomps
jno
cmpsl
cmp
inc
xor
lea
mov
outsb
sub
xchg
das
mov
inc
inc
cmp
cli
outsb
sbb
or
scas
push
ret
aam
out
or
adc
lahf
sti
and
xchg
cmp
xchg
pop
js
or
das
mov
pop
mov
mov
inc
or
push
movsl
jmp
ret
movsb
add
dec
in
and
or
push
mov
push
jnp
xchg
mov
rcr
mov
loopne
stos
je
insb
mov
mov
jmp
iret
dec
jp
mov
mov
mov
xor
in
in
dec
sets
jmp
les
mov
xor
insl
inc
push
sub
xchg
pushf
xor
adc
imul
xor
sub
or
mov
aas
lret
add
pushf
and
lds
adc
xor
les
jle
sbb
adc
fistps
sbb
lods
sbb
or
push
andb
int3
das
push
shll
out
add
scas
idivb
mov
leave
clc
cmpsl
push
sbb
xor
lret
jecxz
ret
test
int
rorl
hlt
push
xlat
mov
cmp
jb
mov
in
popf
lods
jmp
pop
mov
add
aas
push
addl
sub
inc
push
pusha
and
add
mov
xor
sbb
jno
shrl
mov
pop
stos
xchg
popa
insl
pop
xchg
cli
in
sub
lcall
imul
leave
and
shl
and
std
ja
sbb
push
fwait
dec
aam
or
push
inc
sbb
xor
jle
adcl
xor
rep
fimull
xchg
nop
cli
test
ret
cltd
faddl
leave
xchg
mov
jo
fldt
push
sar
add
addb
movl
lret
mov
popf
lods
int3
rol
stos
jmp
xchg
mov
jp
es
cmp
dec
mov
push
sahf
loope
inc
mov
sti
scas
mov
mov
add
and
cmp
fldl
lret
xchg
rcl
outsb
jb
cmc
les
xchg
jmp
mov
shlb
mov
shll
lods
loopne
es
cltd
lock
sub
xchg
addr16
in
inc
clc
mov
call
fst
dec
test
fcomps
push
gs
icebp
pop
push
adc
fnstsw
mov
add
out
addr16
xor
outsl
aaa
inc
pop
shlb
cmpsb
loop
inc
stos
push
loopne
xor
in
xchg
mov
mov
cld
cltd
xor
jg
xlat
mov
scas
push
xchg
push
sahf
nop
mov
sub
lret
jno
dec
repnz
cli
pop
or
sub
inc
imul
dec
daa
enter
ret
clc
mov
sbb
mov
out
in
dec
loopne
jmp
ljmp
add
xor
sbb
sbb
sub
xchg
xor
inc
pusha
into
jmp
outsb
outsl
stos
lret
into
add
rcr
ret
pop
sub
cmc
mov
push
scas
loope
push
cs
mov
popa
add
cmc
scas
inc
loopne
int3
and
mov
sbbl
mov
add
test
dec
or
rolb
mov
push
cli
insl
loope
mov
fs
out
ss
inc
inc
insl
imul
clc
pop
fmull
popf
jno
movsb
jae
rcrb
or
es
mul
xchg
into
insl
cmp
pop
test
dec
adc
cld
sbb
mov
push
js
and
lea
push
fcomi
lods
push
call
sbb
das
fpatan
cmc
ret
orb
aaa
xor
jecxz
fnstcw
imul
or
into
xlat
and
xchg
shlb
dec
xchg
out
shrb
cmpsl
mov
sbb
inc
jns
shrb
rorl
fildll
test
je
xor
loopne
push
jge
imul
cli
loop
lret
inc
jne
or
pop
ret
dec
test
es
pop
push
add
lods
dec
xor
rcrl
movsb
outsb
add
xor
mov
fldl
mov
dec
fnstsw
out
xchg
and
pop
sbb
ss
dec
js
jg
jnp
roll
adc
xor
lds
mov
adc
sarl
sub
lock
addr16
shlb
sbb
xor
adc
mov
mov
inc
icebp
insl
sahf
adc
push
rcr
push
scas
fcomip
leave
dec
sbb
or
mov
call
stc
sbb
sbb
repnz
clc
sbb
popa
xchg
lret
addr16
inc
add
aad
cmp
test
iret
mov
lcall
push
fdivp
int3
loop
mov
adc
arpl
out
test
or
les
testb
aad
ljmp
movsb
in
shlb
leave
xchg
test
sti
in
adc
dec
iret
sub
jmp
hlt
sbb
and
imul
lret
in
pop
cmp
xor
adc
lret
xchg
in
adc
or
mov
mov
xchg
aad
pop
fstpt
in
fcoms
cmp
adc
lret
cmp
jmp
cmp
cmp
cmpsl
pop
je
arpl
inc
daa
popf
icebp
or
jmp
sbb
inc
hlt
pop
loop
xor
mov
imulb
mov
sbb
adc
sub
pop
cmp
and
xchg
adc
push
and
lret
outsb
shrb
xor
ss
xchg
out
ja
js
inc
gs
sbb
call
sbbl
pop
jmp
dec
loope
inc
mov
xchg
imull
mov
mov
loope
xor
jno
in
sbb
std
call
push
mov
cld
mov
fsts
lods
ficoms
daa
mov
cmpsl
xchg
push
icebp
icebp
sbb
aaa
outsl
push
sbb
inc
sub
cmpl
sbbl
or
popl
jae
loope
xchg
and
ret
mov
lods
aam
cld
cs
lea
mov
call
dec
adc
pop
das
and
inc
and
adc
fs
fadds
lods
pop
pop
enter
lea
imul
jg
ret
jle
pushf
scas
push
ficompl
mov
xlat
andl
xchg
pop
mov
outsb
xchg
xchg
in
lock
scas
push
test
adc
and
shr
faddl
and
pop
nop
data16
inc
pop
sub
arpl
push
cmp
or
mov
fidivrs
xor
cmp
xchg
in
call
nop
icebp
xchg
cwtl
clc
lods
mov
clc
inc
sbb
and
add
test
inc
mov
cltd
into
jl
nop
xorb
rolb
mov
inc
adc
inc
push
pop
cltd
rorl
ret
scas
adc
jae
cmp
dec
xor
mov
add
punpckldq
jb
and
int
xorl
dec
dec
mov
inc
sub
jns
inc
cmp
add
movl
fidivrs
mov
cmc
lock
imul
mov
testl
pop
mov
leave
repz
enter
pop
dec
imul
mov
int3
das
pusha
rorl
lods
decb
cmpb
dec
sbb
sub
adc
sub
push
mov
fsubrs
mov
inc
inc
clc
push
push
adc
cmp
xchg
pop
xor
mov
icebp
ss
xor
mov
movd
loop
push
ret
dec
cmp
int3
inc
jmp
add
jge
xchg
or
inc
pop
movsl
mov
rcr
mov
pop
cli
jle
orl
jae
and
jne
add
jae
cmp
ljmp
icebp
sub
mov
sbb
test
dec
push
clc
push
repz
push
push
sub
jnp
jmp
rorl
test
cld
xchg
or
call
inc
jmp
push
inc
mov
sbb
scas
fsubs
clc
aam
ljmp
and
aad
or
cmpsl
jae
and
add
js
push
out
dec
movsb
stos
jl
pushf
negb
sbb
inc
adc
das
lret
xchg
xor
inc
subl
ds
sbb
xchg
lahf
jno
out
movsl
pop
aas
jnp
movsl
ret
xor
fistl
lods
xor
icebp
jmp
fwait
out
pop
rorl
ret
cmp
rolb
or
and
inc
in
enter
out
inc
sub
and
or
or
sub
and
or
mov
jmp
mov
fbstp
xchg
cmp
fwait
dec
push
out
or
out
outsb
or
ljmp
mov
sbb
out
push
fsubrp
movsb
cmp
lea
popf
fistps
mov
cmp
sbbb
cmc
notb
int
jle
call
stc
pushf
pop
push
mov
popf
iret
pop
ja
mov
inc
sbb
shll
pop
loopne
rorb
mov
stos
pop
adc
push
clc
xchg
xchg
call
mov
repz
out
xchg
push
stc
cld
mov
dec
test
inc
das
inc
inc
xchg
faddp
and
push
cli
inc
pop
jns
ret
gs
xchg
and
jb
or
out
mov
mov
sbb
push
stos
fwait
dec
jo
sub
mov
test
mov
dec
loop
js
cmpsb
and
mov
int3
negl
push
std
sar
mov
mov
jle
in
xchg
jecxz
mov
sarb
or
mov
jno
adc
adcb
cmp
inc
cmp
cmp
or
push
mov
add
into
adc
mov
push
mov
out
std
cmp
sbbb
jmp
mov
jecxz
test
lock
outsl
lds
sbb
sar
cmpsb
jge
jmp
push
mov
pop
cwtl
jecxz
int
add
pop
movsb
fnsave
aad
popa
fdivrl
lds
ljmp
inc
pushf
xchg
mov
loope
jge
sub
inc
rorb
inc
mov
cmpsl
popf
lret
aaa
sti
or
push
add
dec
std
jne
inc
lahf
xor
cwtl
enter
imul
push
jmp
pop
out
push
mov
mov
mov
mov
lahf
inc
fists
loopne
popa
inc
rcrb
cwtl
dec
jecxz
mov
cli
pop
loope
push
jb
inc
xor
negb
addb
push
mov
movsl
sub
add
sahf
jmp
inc
lcall
push
cltd
add
lcall
addr16
cmpsb
sub
add
addr16
or
es
cwtl
jo
mov
mov
push
or
stc
dec
dec
sbb
lock
into
mov
daa
xor
xor
xlat
pop
lds
addb
jge
loop
ljmp
cld
mov
xor
ds
jecxz
sub
pop
mov
and
negl
jl
pop
adc
mov
pop
imul
add
pop
and
mov
mov
icebp
outsl
ljmp
test
or
sbb
mov
pop
jne
inc
cmp
call
icebp
fidivl
jae
mov
dec
cmp
mov
dec
stos
and
mov
inc
adc
xor
arpl
push
lock
shlb
push
lock
icebp
les
mov
lds
stos
add
jl
mov
das
mov
add
js
or
jb
or
cmova
cmp
push
stos
lret
jno
es
push
inc
lods
les
aas
sub
inc
out
aaa
fnsave
jo
shlb
xor
adc
stos
test
ljmp
mov
nop
mov
and
push
notl
stos
xor
out
loope
xor
adc
inc
pop
shl
ljmp
or
fsts
dec
inc
and
fidivs
bound
femms
es
or
xor
hlt
test
sub
addr16
gs
iret
adc
xor
push
dec
pusha
or
repz
cld
push
data16
sahf
add
dec
mov
pop
jns
pop
les
cmpl
push
adc
adc
xor
mov
mov
gs
data16
jge
xchg
arpl
xor
cmc
imul
cmp
stc
mulb
stos
dec
ret
mov
push
lock
dec
and
fistps
and
popf
inc
ret
mov
push
int
mov
adcl
sbb
xchg
cld
and
inc
fsubr
fs
iret
ret
push
pop
adc
xchg
mov
enter
sbb
push
gs
fidivrl
cli
dec
shl
rclb
rcrb
cmp
fdivs
rol
jns
std
push
mov
insl
pcmpgtb
inc
sbb
stc
adc
addr16
cmp
jle
aam
int
and
in
push
ffreep
nop
fstpt
push
mov
ds
push
jecxz
xchg
ja
pop
xor
lea
sbb
lods
xor
scas
jl
fiadds
daa
jb
push
or
je
cmp
push
or
ljmp
lds
inc
insb
sub
inc
in
mov
add
mov
incb
jns
lock
adc
dec
mov
orl
shl
js
notb
xor
xchg
cmp
xchg
xlat
adc
arpl
inc
xor
sahf
loope
mov
cld
cld
clc
test
and
imul
fldenv
cmp
mov
stos
pop
fisttpl
xchg
adc
and
out
adc
bound
jp
push
rolb
test
popf
test
bound
subl
add
dec
jne
ffreep
mov
aam
mov
xor
lret
sub
fildl
rol
xlat
mov
shlb
fwait
xchg
jg
jl
test
adcl
xchg
mov
mov
aas
rorb
add
push
and
jo
repnz
cmp
loope
xchg
inc
xlat
pop
xchg
je
cmc
sub
sbb
jbe
ss
ficompl
in
bswap
push
cmp
mov
pop
xchg
lea
jne
out
ss
and
xchg
test
rorb
stc
clc
cmp
xor
lea
mov
fcom
mov
mov
or
sub
test
fsubp
leave
push
sub
xor
test
cpuid
pop
dec
or
rcll
popa
movsl
cmc
outsb
ja
arpl
push
jne
add
cmc
jno
and
repz
nop
dec
push
jl
dec
pop
cmpsl
push
outsb
cwtl
iret
cmp
cmp
fwait
xor
ja
pop
insl
push
xchg
aad
inc
xor
lcall
pop
jbe
xor
enter
and
jge
jp
insb
push
jmp
cmp
roll
or
xchg
mov
inc
pop
fnstcw
inc
pusha
pushf
inc
repz
stos
add
inc
repz
sarl
xor
shlb
push
xor
dec
cmp
icebp
imul
ret
cmp
ja
xchg
int
jecxz
jle
push
mov
mov
adc
mov
add
mov
mov
insb
inc
cs
sahf
adc
insl
pop
es
adc
pop
repz
lret
shll
push
enter
push
das
xchg
jge
jb
cmp
add
adc
mov
and
cmp
test
mov
lods
inc
sub
or
cmp
pop
mov
repnz
adc
push
or
push
xchg
stc
dec
push
jl
push
icebp
nop
add
lods
movsl
jecxz
push
xor
sbb
sub
mov
mov
mov
sbb
sub
push
jp
add
das
rolb
add
cmpsl
cmpsl
jmp
xor
jno
sbb
pop
cwtl
dec
pusha
dec
mov
inc
xchg
movsb
pop
and
push
fsts
add
xchg
std
inc
test
fcoms
push
and
mov
cmp
andl
outsb
out
popa
xlat
mov
fnstsw
lret
xor
push
or
xor
sbb
rcr
mov
push
js
imul
and
add
sub
pop
xor
xchg
test
aaa
and
les
jbe
into
in
or
es
test
jle
fwait
adc
in
push
fs
push
xchg
outsl
sbb
bound
cwtl
mov
cwtl
lods
dec
cmp
enter
or
mov
cmp
jmp
lds
stos
call
pop
mov
or
loop
mov
ljmp
and
aaa
mov
and
das
cmc
push
test
stc
rdmsr
push
call
and
fldcw
mov
adcb
lea
add
sahf
fidivs
lret
sub
je
dec
jp
mov
je
jo
imul
insb
movsl
testl
pop
ret
sbb
pop
cltd
jmp
dec
orl
out
xor
outsl
scas
jbe
rorb
es
dec
ja
or
in
lret
bound
push
mov
daa
add
inc
jle
sub
inc
push
and
fldenv
xchg
sbb
cmpsl
addr16
sbb
mov
sbbl
icebp
mov
mov
addr16
fisubrs
cmpsl
loopne
in
pop
aam
jae
mov
mov
sbb
push
mov
cmovg
ds
pop
popf
into
and
mov
push
fsubr
mov
loop
aam
in
insb
fwait
bound
adc
add
repnz
fsubr
roll
or
adc
into
sbb
push
shlb
je
mov
sub
dec
fxtract
cmp
push
mov
repz
pop
int
cmp
das
pop
lods
sub
mov
mov
int3
stc
jecxz
sub
mov
dec
mov
add
leave
mov
aas
pop
inc
into
push
bnd
jl
inc
inc
cld
aam
mov
jno
pop
dec
mul
sbb
rcll
mov
pusha
pusha
xor
dec
sub
sub
dec
cli
cmp
sbb
popa
sarb
aad
aas
xor
add
mov
rcl
push
push
xor
lods
push
jns
jecxz
ja
mov
adc
xlat
int3
imul
bound
imul
lret
jnp
test
sahf
data16
inc
pop
fldcw
popa
pop
pop
stos
xor
mov
push
addl
xor
xor
fs
in
outsb
pop
inc
jnp
xchg
pushf
mov
and
dec
sub
popa
lret
ljmp
or
dec
lock
and
push
lock
mov
sub
xchg
cld
scas
add
test
cmpsl
push
mov
jecxz
sub
dec
push
pop
repz
add
adc
call
dec
sub
mov
add
add
insl
outsl
pop
mov
xchg
push
js
jge
cs
cmpsl
nop
jmp
jmp
aas
jae
repnz
nop
and
ret
out
gs
ljmp
jnp
or
xchg
lcall
dec
out
mov
dec
cmpsl
pop
mov
sub
fcompl
mov
xor
bound
mov
addr16
test
sub
sub
shll
or
and
popa
jl
jns
scas
in
mov
fcmovb
insl
pusha
mov
call
stos
test
pop
popl
jns
aad
inc
dec
sbb
jb
mov
cmp
sbb
pop
test
mov
mov
nop
jle
jmp
mov
jle
adc
ret
mov
das
inc
ljmp
sbb
sti
sub
sub
push
add
popf
cltd
outsl
dec
add
cmc
fsubl
sahf
nop
das
mov
add
mov
lret
pop
sbb
adc
je
frstor
add
cltd
mov
lock
fcmove
xchg
mov
movsl
lock
xchg
mov
shr
popf
cs
adc
push
jno
mov
mov
mov
xchg
inc
enter
inc
and
mov
vpshaw
stos
push
mov
pop
dec
xchg
push
xor
lret
cwtl
imul
xor
and
xor
fwait
dec
sbb
es
jmp
ret
mov
clc
fisttpl
lret
or
enter
add
loopne
mov
aad
mov
dec
or
jmp
test
add
pop
or
xchg
and
pop
scas
jnp
push
jmp
cmp
cs
jmp
popf
mov
outsl
sub
cmp
pop
push
add
cmp
mov
mov
into
shll
shlb
mov
scas
fucomip
pop
sbb
adc
xor
std
aad
inc
mulb
and
test
push
loopne
push
fcomp
pop
jg
mov
into
call
sti
cld
js
lcall
jnp
js
mov
sbb
scas
jg
jl
arpl
fidivs
cli
sub
sbb
popf
jne
push
jecxz
jbe
dec
jp
pushf
mov
imul
dec
shlb
xchg
je
in
cli
lock
add
clc
pop
repz
mov
dec
mull
adc
cltd
fs
daa
into
pop
inc
jns
hlt
es
sbb
ret
push
sbb
sbb
jle
ljmp
mov
pop
jb
rcrb
and
rcrl
mov
xor
int
ret
adc
lret
push
in
rcrl
pop
cmpsl
insl
fucom
add
jno
pop
cmp
sub
shl
dec
push
push
out
pop
mov
adc
in
xchg
daa
cmp
repnz
mov
sub
mov
lods
fimull
jle
pop
cmp
pop
push
repnz
fildl
aam
mov
add
dec
push
in
test
mov
fists
and
and
adcb
mov
pop
ficomps
int3
jmp
jb
popl
cmp
sbb
adc
ds
inc
inc
inc
mov
loope
cwtl
in
shl
mov
jp
push
imul
cld
push
les
fdivl
dec
push
push
shrl
lret
lea
imul
mov
mov
sub
xchg
push
mov
pop
inc
jae
clc
or
push
int
dec
shrl
int
or
in
insl
pop
adc
sbb
and
mov
aam
mov
mov
cltd
ret
arpl
and
pop
inc
pop
arpl
pop
cmp
xor
push
xchg
clc
dec
jb
es
add
mov
inc
and
pop
push
ret
inc
mov
dec
push
popf
ret
iret
lcall
cmp
add
scas
cmp
gs
loop
add
mov
rcrl
sar
push
cmp
mov
pop
arpl
loopne
xor
xchg
lods
mov
jl
aad
push
in
lahf
sub
and
mov
adcl
mov
mov
fdivrl
xchg
dec
pop
xor
cmp
mov
sbb
test
pop
adcb
mov
mov
enter
mov
jle
fstps
push
test
popf
mov
iret
add
rcrl
in
xor
ljmp
cmp
daa
adc
in
sub
sbb
stc
pop
movsl
add
pushf
jp
addr16
in
cmp
movd
pop
add
mov
inc
mov
mov
and
in
arpl
mov
dec
or
jg
sbb
inc
jns
test
adc
cmp
pop
hlt
or
std
gs
mov
dec
sub
insb
int3
cltd
repz
loop
cmpsb
xchg
jle
cld
loope
xchg
lods
add
inc
loop
pop
inc
fdivl
xchg
stos
mov
in
jne
in
test
push
cmpsb
scas
or
or
jno
xchg
jmp
dec
mov
xor
mov
xchg
out
dec
dec
and
xchg
mov
mov
sbb
jle
lock
int3
mov
mov
fdivs
into
or
xlat
loop
mov
pop
sub
call
or
imul
ljmp
push
inc
loope
pop
cltd
cmp
jp
int
stos
push
popa
sbb
push
pop
sbb
mov
ret
cmpsl
xor
cltd
and
rcrl
mov
jnp
outsl
jg
hlt
imul
ds
mov
arpl
in
mov
int
push
mov
mov
dec
dec
int3
arpl
pop
lea
pop
inc
sbb
inc
dec
mov
pop
repnz
fsts
cmp
or
inc
mov
dec
popl
roll
arpl
out
pop
lods
outsb
gs
jmp
cmpsl
push
cs
mov
cmp
inc
sub
jb
mov
testb
test
cmpsb
lea
pop
xchg
ss
adc
mov
mov
jmp
sbb
dec
dec
lock
mov
dec
push
add
scas
jle
mov
sbb
and
aam
and
push
je
out
ret
push
clc
pop
icebp
and
fsubrl
sub
sub
repz
cli
out
call
push
addb
xchg
test
ficompl
jbe
sub
sub
insb
stc
sub
pop
pop
out
pop
jne
rcr
orl
pop
mov
ljmp
or
in
jmp
pop
fsts
jl
and
mov
xorb
xchg
mul
sub
ret
xor
push
dec
push
cmp
lods
mov
jno
addr16
roll
xor
daa
or
hlt
lods
xchg
push
fldenv
mov
xor
sbb
sbb
aas
add
shll
mov
jge
fadds
clc
cmp
incl
push
inc
rcll
cs
les
cmp
pop
jg
loopne
push
aaa
xchg
jmp
hlt
and
cs
pushl
sub
fistl
aaa
fisttpl
inc
pop
jmp
data16
adc
mov
fistpl
jp
clc
pop
notl
jo
cmpsl
fimull
xor
xor
jnp
pushf
mov
insl
sub
xchg
es
es
std
pushl
inc
aas
movsb
xchg
scas
fwait
push
loop
in
les
mov
or
mov
sti
loope
or
ljmp
and
ljmp
sbb
jnp
stc
scas
decb
mov
jae
xchg
fistpl
sub
out
pusha
les
jp
sbb
mov
push
xchg
jo
xlat
push
outsb
push
dec
rep
aaa
xchg
aam
xor
pusha
dec
sub
outsl
fbstp
inc
push
push
mov
ds
negl
pop
cmp
xor
shlb
xchg
push
jge
and
add
mov
cmp
stc
push
ljmp
inc
lods
hlt
push
incb
lds
mov
repnz
sti
add
push
xchg
and
push
jnp
popa
xor
pop
cltd
fsub
test
mov
insb
es
xchg
ja
call
bnd
inc
in
ljmp
or
and
and
cmp
inc
leave
pop
mov
sub
loop
sub
add
flds
dec
adc
icebp
push
pushf
in
and
test
push
jl
pop
pushf
xchg
insb
out
jp
cmp
loopne
aas
xchg
ljmp
aaa
movsl
out
bound
enter
push
jae
mov
xchg
sahf
mov
lea
xor
xorb
into
popf
cmp
pop
cmpsb
adc
sub
xor
sbb
and
ljmp
enter
jmp
insb
je
and
sbb
in
push
cmpsb
pop
fsts
xor
adc
jmp
aaa
fs
push
test
inc
fistpll
loope
ror
jnp
pop
mov
cmpsl
std
adc
push
inc
out
inc
mull
add
jne
jns
popf
test
inc
jl
lret
pop
addr16
mov
subl
jbe
push
push
mov
cmp
hlt
repnz
jnp
mov
aad
addl
dec
lret
call
movsl
add
daa
out
xchg
adc
lcall
add
adc
push
pop
push
xchg
lock
or
mov
or
pop
inc
cmp
iret
xor
cmp
jne
mov
out
add
fs
mov
cmp
xchg
push
aam
rcrb
jmp
mov
stos
loope
mov
dec
jecxz
fcompp
inc
movl
outsb
js
cmp
out
pop
and
lcall
adc
test
shlb
fidivrl
sub
xor
ds
rorb
sbb
ret
push
cltd
xchg
addr16
fwait
cmpsb
jmp
push
jno
ja
adc
add
inc
imul
mov
dec
aad
mov
dec
pop
shlb
or
xor
dec
mov
cmp
jno
xchg
and
mov
add
pusha
outsl
das
test
stos
dec
and
xorl
loope
inc
cmp
roll
ficoml
xor
lods
mov
sbb
xchg
sub
out
jmp
iret
dec
sub
pusha
aaa
push
pop
push
push
sub
ret
lahf
sarl
adc
jno
xchg
sub
mov
inc
mov
test
push
pop
push
out
rcll
jge
mov
fsubr
inc
cltd
shrb
imul
add
mov
sub
jp
cmpb
test
xor
in
pop
iret
and
and
mov
cld
mov
ret
lahf
ret
jnp
shr
stos
add
cld
sbb
ljmp
mov
pop
ret
out
jge
or
xchg
insb
loop
pop
cmp
ja
loopne
mov
negb
push
dec
daa
jge
aaa
push
enter
xchg
aas
sbb
negl
out
nop
jge
xchg
lods
stc
sbb
add
clc
out
jmp
mov
sub
fs
xchg
mov
sbb
or
lods
sub
stos
imul
sbb
sarl
aaa
adc
outsl
mov
ds
pop
xlat
jb
daa
mov
in
adcb
dec
push
stos
push
push
cmp
jecxz
cmp
dec
inc
push
std
push
jmp
lcall
mov
mov
fimuls
pop
add
int3
jnp
and
adc
sbb
push
sub
jnp
xchg
in
xor
xor
fmul
jne
pop
push
push
add
adc
out
jns
repz
mov
inc
icebp
fistl
sar
mov
iret
or
lds
mov
hlt
ffreep
loop
test
mov
dec
pop
jmp
lahf
or
sbb
pop
ljmp
mov
outsl
stc
outsl
pop
mov
mov
fistpll
fs
jae
dec
jecxz
out
jno
inc
addr16
jb
xchg
or
push
xor
xor
jns
xlat
mov
lods
mov
mov
inc
mov
outsb
xchg
push
shrb
dec
push
les
test
dec
jns
decl
xor
es
stos
sbb
push
lcall
cmp
test
mov
xchg
sub
mov
into
xor
jns
add
and
push
test
jecxz
xor
das
inc
jp
ljmp
ret
nop
test
mov
loop
data16
jg
push
popa
mov
insb
lret
add
mov
mov
lret
faddl
push
push
out
ja
jbe
dec
insl
mov
jle
stos
out
adc
movsl
sbb
mov
lods
push
and
inc
push
nop
xor
test
mov
dec
fldenv
movsl
and
out
or
jnp
loopne
mov
pop
push
int
andl
jne
ljmp
loope
add
pop
subb
out
pusha
push
fadds
addl
push
nop
stc
aam
inc
sub
sbb
test
push
lock
push
mov
loopne
pop
cmp
ja
imul
mov
sub
sbb
jo
shrl
mov
ret
pop
pusha
sti
int
leave
or
and
xchg
mov
gs
out
aas
add
sbb
and
loopne
cli
fistpl
xchg
mov
cltd
or
iret
cmp
insl
stc
outsl
pop
cltd
cs
mov
jbe
jmp
mov
mov
push
sub
je
or
negb
sub
xor
cmpsl
dec
dec
adc
je
enter
add
hlt
sub
mov
mov
adc
mov
dec
inc
sub
lret
or
je
into
sub
xchg
push
or
out
fs
jae
xlat
into
mov
jle
push
or
mov
xchg
or
in
add
addb
ret
pop
outsl
shll
mov
jecxz
lahf
sbb
stos
cmp
loope
dec
pushf
out
lock
ret
mov
cmpsb
inc
mov
inc
inc
push
movsl
aas
ret
out
dec
addr16
mov
test
dec
repz
pushf
push
mov
mov
ds
gs
imul
ficoml
jne
mov
or
lcall
pop
mov
arpl
jl
pop
xchg
mov
mov
shll
repnz
inc
mov
mov
icebp
call
lods
lret
pop
push
sti
push
dec
test
inc
in
mov
gs
pushf
push
push
test
popf
test
xchg
xchg
imull
pop
adc
in
adcl
ss
xor
sub
jns
cmp
enter
jp
pop
push
ret
cmp
aad
lds
test
add
es
and
xor
loopne
insl
lahf
insb
mov
cmp
add
xlat
fcmovnbe
ss
shl
icebp
gs
aaa
pop
mov
mov
bound
dec
push
mov
push
test
pop
sahf
adc
mov
and
decb
lret
lcallw
scas
jbe
mov
jnp
inc
jg
xor
testb
jl
or
das
sub
mov
and
cs
sbb
repz
ja
jns
sub
flds
xor
add
repz
xchg
cmp
jmp
push
jbe
ljmp
mov
shll
jns
xchg
inc
mov
jnp
lcall
xchg
xchg
shll
xor
pop
sub
and
mov
ds
jbe
pop
outsl
rcrl
nop
inc
sti
in
xor
into
in
sub
inc
mov
or
sbb
sahf
xchg
adc
ds
insl
aam
push
push
push
scas
dec
pop
mov
jno
jo
jo
test
inc
daa
push
pop
movsb
inc
pop
xor
insb
scas
pop
aad
mov
std
out
or
sbb
fcomps
jne
int3
mov
cmpsb
jbe
and
aas
pop
addr16
data16
jo
pusha
call
mov
daa
je
dec
dec
pop
pushf
and
mov
inc
fwait
cmp
int
push
mov
or
jp
push
sahf
dec
sub
int3
pop
out
sbb
aaa
pop
mov
arpl
lahf
jmp
add
jecxz
jno
in
dec
hlt
mov
mov
xchg
xchg
xchg
cmp
enter
je
mov
cmpsb
mov
mov
lahf
jns
test
in
inc
or
inc
push
int
adc
cmp
mov
outsb
aaa
push
and
mov
and
cli
dec
add
int
inc
and
mov
sub
pop
push
lcall
int3
mov
repz
fcomps
jmp
inc
or
sub
out
lret
sub
loop
lods
sub
push
testb
and
aas
mov
mov
add
sarl
mov
or
out
pop
ljmp
jb
push
inc
dec
xlat
mov
fidivrl
or
repz
in
cmc
mov
fdivrl
mov
imul
jle
int3
mov
adcl
in
or
sub
std
jnp
push
and
or
je
stc
or
mov
cmp
jae
cli
jp
flds
add
sbb
rcrl
mov
aad
add
cwtl
sbb
cld
push
icebp
jecxz
mov
dec
repnz
icebp
insb
daa
loope
pop
or
idiv
push
mov
outsb
inc
faddl
int
in
mov
mov
push
fstl
jns
loop
xchg
sub
hlt
xor
mov
sub
adc
repnz
sahf
push
jbe
pop
jecxz
adc
jo
scas
scas
ljmp
push
es
fst
mov
lret
cli
subl
fbld
lods
push
or
mov
rorl
mov
das
mov
test
jnp
test
jge
pop
fcmovnbe
repnz
addb
mov
mov
repz
mov
lcall
stc
lods
jle
jne
push
push
or
and
mov
sub
lods
sbb
out
pop
push
lods
pushf
js
sbb
lret
aad
jmp
in
das
imulb
dec
xchg
cmpsb
jmp
hlt
add
xchg
push
mov
xlat
je
pop
call
in
aam
ljmp
orb
sbb
cltd
dec
test
int3
jge
lods
push
fiadds
sub
xor
adcb
dec
loope
jnp
mov
call
jae
xchg
cmpb
sub
shll
pusha
inc
mov
and
cmpsl
fbld
cmp
rcll
je
negb
xchg
popf
inc
and
aad
in
dec
xchg
push
jne
mov
push
or
jecxz
and
clc
push
call
jns
loop
sub
sub
ds
shlb
jle
mov
adc
push
inc
lock
ret
out
pop
dec
xor
repz
dec
mov
int3
cmp
sbb
inc
adc
bound
xor
stos
xor
rorb
fldenv
in
andl
cmp
cmpsb
fucom
push
sti
out
ret
leave
stos
insl
divl
pop
icebp
mov
xchg
adc
lea
shld
stc
mov
test
fwait
cli
xor
les
rol
addr16
xchg
int
sbb
stos
lea
cmp
xchg
aas
push
adc
scas
sub
dec
xchg
jmp
imul
cmpsb
repz
xchg
ja
sub
mov
xchg
mov
jnp
pop
jmp
scas
jnp
imul
std
aad
scas
mov
xor
mov
pop
fucomp
mov
jno
mov
adcl
cmc
repz
loop
xchg
inc
mov
inc
pushf
xor
mov
fimuls
jge
mov
xchg
sub
leave
sahf
sbb
ficomps
clc
pusha
lea
pop
icebp
xor
and
mov
pop
sub
pop
inc
test
movsl
or
test
add
mov
cmp
je
mov
dec
add
jns
push
sahf
jns
or
mov
xor
mov
and
dec
cltd
lahf
subl
dec
mov
push
jbe
out
cltd
jb
push
mov
fdivrl
push
sub
xchg
imul
xor
cmp
out
and
push
jl
and
arpl
mov
movsb
mov
jb
lock
cmpsb
push
divl
mov
xchg
mov
xor
pusha
cmp
lret
out
cwtl
add
add
loop
insb
inc
lret
fwait
jecxz
outsb
xchg
jae
ss
xchg
iret
inc
xlat
mov
inc
mov
mov
mov
je
mov
gs
pop
mov
xor
mov
pusha
push
rclb
jl
fists
sub
lods
fadds
frstor
movsb
fldl
loope
and
pop
xchg
dec
pop
xor
aaa
and
outsl
mov
mov
sahf
push
mov
or
pop
lea
lods
mov
and
or
rorb
sub
add
push
add
dec
std
into
or
scas
xchg
enter
adc
and
lds
jp
aaa
push
xlat
or
jne
inc
cmp
movsb
push
sub
je
dec
push
cmp
test
cmp
sub
jle
cmp
or
add
es
or
pop
xor
sahf
mov
cmp
mov
lds
clc
mov
out
fsubr
xor
xor
fs
cmp
sub
data16
movsb
sbbl
or
pusha
imul
rorl
in
pop
cmp
stc
cmp
iret
mov
adc
jge
pop
push
lds
dec
aaa
jmp
jg
out
push
and
mov
in
lea
push
pop
mov
cmp
adc
sbb
sub
mov
sub
sub
and
int
in
sub
cmp
mov
xchg
popa
stos
push
pop
xor
cld
sbb
fisubl
pop
mov
int3
mov
call
stos
ljmp
inc
mov
pusha
out
mov
mov
sub
test
hlt
jg
mov
lock
or
pop
ficoms
sbb
testl
xor
inc
lods
jecxz
in
jno
or
in
loopne
add
jge
clc
jge
lret
mov
and
mov
imul
dec
adc
jb
pop
stc
cmp
mov
cmp
and
imul
divl
mov
xor
pop
stos
inc
jo
ret
dec
rclb
and
es
cmp
or
inc
cmpsl
fistps
das
outsb
or
out
jo
mov
jmp
push
stos
mov
js
ficoms
inc
or
mov
cmpsb
or
push
mov
idivb
sbb
ds
stos
out
jge
push
in
pushf
mov
xchg
jecxz
loopne,pt
fwait
out
int
mov
add
push
jo
loope
scas
add
add
or
mov
andb
ja
mov
div
jns
loope
jae
test
shl
aam
mov
mov
and
and
mov
stos
mov
fdivrs
jmp
push
inc
int
call
popf
push
pop
out
pop
scas
cmc
cmpsl
xor
sbb
jp
mov
sub
pushf
sti
push
pop
fcmovnb
imul
mov
iret
dec
in
movsb
pop
sub
mov
fs
xchg
push
fwait
in
fwait
call
lcall
jecxz
fadds
std
xchg
jecxz
xlat
sub
ljmp
inc
push
add
sub
mov
js
rorl
xchg
jno
ret
in
adc
sbb
sbb
dec
and
outsl
cmpsl
into
rol
inc
xchg
inc
sub
mov
mov
jle
dec
push
xor
aaa
loop
leave
inc
insl
pop
pushl
adc
shrl
scas
mov
push
sarl
dec
jg
stos
aam
add
jp
add
call
test
pop
or
sbb
fwait
movsl
pusha
pop
clc
xor
inc
std
int
es
jmp
sarl
outsb
fldt
rcl
xorl
shrl
pop
dec
and
cs
lods
fiaddl
adc
idivb
push
add
addr16
lods
add
loope
mov
mov
xchg
aad
mov
lea
jb
add
int
mov
dec
cwtl
fcoms
iret
shl
lret
into
imul
cmp
fldt
mov
xchg
add
cmpsl
add
stc
stc
sbb
and
mov
icebp
daa
rcrl
pushf
insl
test
arpl
inc
sbb
sbb
xor
dec
js
incb
loopne
imul
pop
mov
je
stos
jae
in
pop
push
lret
sbb
jbe
xchg
sub
gs
xchg
andb
or
adc
daa
scas
xor
adcb
cmp
out
sbb
leave
mov
idiv
fwait
sub
mov
loopne
mov
cmpsl
lds
fists
rcrb
cmp
int
or
or
mov
jo
mov
pop
jmp
xchg
xor
mov
fmulp
rcr
xchg
xchg
scas
sub
pop
pop
add
leave
imull
movb
pop
mov
test
cltd
mov
sbb
test
inc
jp
es
or
ret
roll
inc
insb
test
jecxz
adc
ret
mov
push
xor
mov
pop
mov
test
adcl
inc
out
and
adc
adc
sti
je
in
int
xor
pusha
or
sbb
shr
adc
jl
andl
mov
mov
testl
scas
push
sub
add
push
icebp
dec
gs
popf
arpl
push
sahf
test
cmp
testb
sbb
outsb
adc
addb
lret
jge
dec
test
xor
out
leave
push
fstp
cmp
jo
mov
adc
dec
push
and
test
fsub
xchg
icebp
in
ss
push
ss
jns
enter
rclb
sub
mov
out
insl
mov
clc
jae
lret
imul
add
xor
inc
daa
xchg
lcall
and
push
mov
shll
std
jle
or
addl
pop
mov
clc
ret
out
or
stos
dec
cs
jmp
in
loope
jbe
push
jb
enter
movsb
sbb
jmp
push
repnz
mov
fwait
pop
test
xchg
inc
pushf
dec
iret
test
je
lds
bound
cmpb
int3
lods
cmp
outsb
dec
aam
js
mov
adc
sar
mov
lret
pop
aas
je
sbbb
xor
hlt
mov
lret
lds
xor
mov
sahf
pop
sti
and
lods
outsl
xchg
mov
inc
inc
inc
shlb
mov
sti
pop
push
mov
and
jo
das
mov
movsb
inc
sub
fcomps
sbb
inc
shl
cmp
cs
push
popf
xchg
roll
push
test
gs
add
ret
mov
lret
rorl
int3
hlt
outsl
imul
jns
ljmp
sbb
mov
mov
ffree
sbbl
add
cmp
mov
idivb
add
xchg
arpl
mov
faddp
mov
mov
cmp
jmp
mov
leave
fs
jmp
cmpsb
lret
ss
pop
push
and
add
enter
ss
movsb
pop
iret
orl
fwait
pop
shrb
inc
jg
add
inc
mov
outsb
mov
dec
sub
dec
cmp
mov
or
xlat
outsl
jmp
mov
into
xchg
sbb
add
mov
mov
dec
mov
bound
xchg
mov
pop
adc
pop
adc
popa
faddl
mov
adc
dec
pop
pop
cmp
movsl
mov
and
lret
ltr
or
aas
leave
mov
and
dec
mov
jmp
es
testl
lahf
adc
inc
loopne
into
popf
aaa
test
cmp
jno
sub
or
lods
iret
repz
mov
and
adc
punpckldq
mov
add
fiadds
sbb
into
shrl
add
add
movsl
and
mov
outsl
xchg
cld
mov
mov
fstpl
aas
xchg
repz
xchg
ret
addr16
loope
movsl
pop
sub
add
testl
xchg
pop
fisttpl
lea
in
or
mov
mov
mov
push
in
outsb
mov
inc
leave
repnz
or
subb
jmp
ja
cmp
iret
int
fsts
sbb
lea
cmc
mov
sub
mov
cwtl
jmp
and
dec
fstpt
stos
and
xor
or
jmp
mov
fmul
das
xchg
int
lea
xlat
pusha
pop
outsl
jecxz
mov
push
orl
lcall
out
mov
inc
or
cmp
and
sbb
pop
mov
cmp
dec
xchg
iret
es
xchg
and
pop
notb
aas
in
lea
mull
or
push
mov
cmp
loopne
xor
jbe
dec
mov
int
sbb
xor
inc
scas
jne
call
jno
icebp
iret
xor
xchg
jecxz
sbb
movsl
mov
pop
xor
mov
cmp
subl
jo
adc
outsl
xor
cltd
sub
sub
ljmp
scas
movsl
mov
mov
adc
or
repz
push
sub
mov
mov
sbb
or
xchg
cmp
frstor
dec
mov
mov
pop
adc
dec
ja
jle
sbbl
inc
dec
mov
xchg
insl
test
outsb
pop
dec
mov
inc
add
lods
mov
cli
cwtl
stos
aaa
dec
mov
loop
aam
dec
imul
jae
xor
jnp
fwait
xchg
adc
jns
lret
jb
dec
jns
mov
xor
sbb
imul
jl
mov
subb
and
sub
xchg
out
fcmovb
loop
aad
and
in
adc
xchg
mov
leave
sbb
mov
les
rol
xor
shll
pop
push
pop
call
cwtl
add
sbb
out
push
out
xlat
push
test
or
sti
sbbl
enter
push
popa
inc
test
in
inc
mov
xor
inc
mov
or
sbb
mov
test
xor
xor
divb
or
mov
jnp
xchg
pusha
stc
pop
das
or
scas
arpl
cmpsb
jle
push
roll
mov
je
sarl
cmp
ret
lcall
fmull
sbb
inc
ja
xchg
jns
mov
jge
sub
or
imul
neg
mov
push
notb
mov
aam
inc
iret
pusha
inc
sahf
push
je
push
das
mov
sub
jns
test
inc
mov
das
fidivs
notl
xchg
rorl
inc
scas
add
pop
call
nop
cwtl
xor
subl
out
adc
movq
pusha
das
pop
in
cmpsl
mov
ljmp
lds
sbb
jns
xchg
negb
jbe
imul
jo
adc
push
cmpsb
push
mov
sub
push
outsl
div
jmp
jmp
clc
sub
cmp
xor
push
ss
dec
add
out
xchg
in
rcrl
push
test
das
pop
pop
cwtl
addr16
stos
sub
mul
xchg
test
je
sub
mov
lea
xchg
repz
scas
mov
xchg
popa
mov
or
pushf
test
xor
push
mov
not
cld
rcrl
out
mov
add
mov
xchg
loope
cmp
leave
ds
add
lret
or
popa
aam
rdpmc
sbb
push
sub
jmp
rep
mov
arpl
pop
mov
cmpsl
movsb
fwait
sub
test
mov
push
addl
and
popa
aas
xchg
stc
test
jge
jmp
push
out
loopne
jbe
or
adc
insb
mov
jmp
stc
insl
std
pop
stos
mov
push
loop
jbe
mov
xor
adc
ss
int
sub
mov
loopne
cmc
icebp
mov
push
jne
fwait
or
jnp
movsl
sub
add
pop
pusha
scas
adc
out
orb
jns
jg
and
popf
je
fistl
mov
lods
arpl
pushf
mov
xchg
and
aad
lret
mov
enter
out
or
andb
jo
addb
gs
iret
inc
adc
enter
inc
loope
mov
jmp
mov
sub
outsl
xchg
cmp
movsb
or
add
int3
loopne
xor
cmp
pop
shlb
leave
and
mulb
mov
and
and
leave
in
mov
xchg
mov
lcall
ljmp
xlat
cli
pusha
xchg
sahf
ficomps
inc
xor
cmp
sbb
cmc
test
mov
inc
inc
mov
loop
sar
mov
jns
jns
outsb
adc
push
and
les
jne
dec
sub
xchg
cli
adc
xor
xchg
pushf
push
daa
mov
lcall
arpl
ret
hlt
mov
sub
in
sarb
jp
add
out
negb
sbb
mov
ficoms
jae
sub
jo
dec
inc
push
je
inc
adc
mov
pop
lret
jbe
js
popf
adcl
stc
cmp
pop
les
dec
imul
hlt
dec
dec
mov
push
mov
imul
loop
nop
imul
jmp
xorl
int3
sub
enter
inc
xor
push
mov
cltd
stos
or
xchg
xor
adc
adc
stos
cmpl
xchg
movb
inc
jmp
shrl
imul
sub
push
int
cmp
rcr
imul
cld
imul
fbld
repz
xchg
dec
xor
mov
mov
andb
pop
adc
jns
jg
into
pushf
es
jae
sub
insl
mov
pop
mov
mov
adc
pop
pushf
mov
pusha
loopne
test
jae
xor
test
in
mov
cmp
enter
fs
mov
ljmp
dec
ljmp
jbe
fwait
out
inc
movsl
shrb
push
out
fimull
xor
in
adc
xorb
xorb
jmp
outsl
mov
enter
adc
mov
cmp
mov
cmp
call
jl
lret
inc
sub
and
lds
pop
bound
repz
or
jb
sbb
and
push
ljmp
lahf
clc
add
mov
jb
pop
outsb
add
fistpl
fcoms
jmp
test
aam
or
pop
sub
fwait
lret
je
add
arpl
ljmp
sbb
add
adc
outsl
lea
sub
scas
push
pushf
and
lods
cmp
sbb
jl
pop
add
or
out
cmpsb
push
rorb
push
mov
addr16
and
xorl
jp
mov
add
cltd
cli
std
sbb
add
xchg
mov
xchg
imul
mov
insb
lock
jmp
and
test
sbb
mov
ret
and
notb
add
nop
adc
ds
addb
test
jbe
stc
or
cmp
dec
adc
and
xchg
fdivs
aam
mov
fpatan
sub
xchg
into
stc
adc
cmpsl
mov
sbb
out
push
and
push
shrl
dec
popf
leave
cmpsb
push
add
or
xorb
das
std
sbb
out
and
mov
pop
inc
mov
ret
adc
test
jbe
mov
inc
ljmp
test
loope
pop
out
xchg
cmp
or
out
sub
lods
ljmp
test
pop
mov
ds
jp
dec
sbb
loope
dec
mov
sahf
fwait
jne
imul
inc
push
ja
adc
mov
pop
jns
add
inc
xchg
js
movsl
pop
ds
jge
imul
jae
xor
jns
fcom
adc
mov
mov
cmpsb
and
pop
fisttpll
je
jle
cld
push
imul
scas
lock
lea
jb
xchg
add
sbb
into
jne
daa
dec
pushf
inc
jmp
jp
repnz
cmp
test
mov
stos
ljmp
xchg
out
aaa
xchg
mov
cwtl
jae
cmp
aaa
outsl
scas
movsl
jns
orb
jle
or
and
sub
xabort
sbbb
es
mov
jnp
imul
cmc
cmp
jno
stos
ss
and
sbb
xlat
jp
lret
adc
cmp
or
push
dec
jmp
nop
ret
hlt
mov
cmp
in
xor
and
divl
jae
aas
add
mov
pop
mov
jg
xchg
fdivrs
xor
inc
jnp
popa
leave
stc
sub
addr16
xchg
push
mov
mov
lret
stc
cmp
jnp
loopne
mov
mov
push
dec
and
jnp
jo
push
insb
loope
mov
fistpl
pop
es
push
scas
repz
add
xor
push
shll
dec
or
lahf
inc
and
mov
sbb
ss
sti
dec
setp
insb
fldenv
xchg
dec
loop
repz
addr16
mov
sti
das
pushf
push
movl
jb
cmpsb
imul
in
jne
pop
movsl
fidivs
jge
andl
mov
repz
mov
fxch
pusha
adc
subb
push
fistps
sbbb
xchg
sbb
pop
das
fwait
xchg
cmp
stos
lods
les
sbb
mov
arpl
stc
mov
imul
enter
or
movsl
icebp
or
inc
in
mov
mov
test
cmpsl
mov
dec
in
pop
out
mov
out
push
mov
inc
leave
mov
mov
sti
sub
mov
cmc
cltd
popa
dec
and
add
sub
enter
add
sub
mov
jge
shl
outsl
fidivrl
mov
popf
hlt
fsubr
leave
jo
ret
add
lcall
loope
mov
lods
push
xchg
hlt
cmpsb
mov
mov
arpl
int
mov
xor
or
add
pop
fstpl
inc
jnp
xchg
lcall
add
inc
xor
int3
add
mov
pop
andl
xor
pop
xlat
pop
sub
jmp
fs
mov
jmp
sbb
jae
clc
xor
jecxz
jno
roll
sub
enter
les
xor
int
adc
fisubrl
cmpsl
insb
or
call
mov
stc
mov
sbb
jp
cmc
rclb
out
repnz
push
jl
pop
repz
cmpb
loop
adc
imul
mov
lods
mov
subb
xor
push
cld
mov
xor
cmp
mov
inc
test
movd
xchg
movsb
push
mov
sbb
dec
icebp
popa
mov
mov
mov
lahf
ss
cmp
lret
xlat
inc
insb
loope
jnp
adc
test
and
or
xor
push
add
js
je
xor
cmpsb
scas
popa
jb
call
imul
xorb
in
mov
jae
jge
jbe
stc
loop
aaa
daa
lea
or
pop
or
jns
pop
xor
or
pop
sbb
or
inc
pop
sahf
or
dec
stos
ds
lret
test
ret
jecxz
jne
push
xor
add
dec
icebp
sub
mov
loope
out
je
movsl
xor
shrl
sub
mov
std
fwait
jae
insb
pop
jmp
je
jmp
xor
sti
frstor
pop
and
popf
aad
mov
in
cmp
and
es
fcoms
jge
sub
sti
test
js
cmp
lods
sti
cmpsb
sbb
lcall
mov
cmpsb
adc
cmc
das
sub
jl
cld
fwait
pop
sub
movsw
dec
mov
test
xchg
push
mov
jecxz
add
cmp
jne
push
jbe
movsb
cwtl
pop
cmc
dec
jecxz
and
in
add
clc
cltd
stos
imul
rcrl
clc
shll
adc
in
dec
int
popa
push
pop
lock
push
mov
test
mov
jmp
inc
mov
lock
lcall
sbb
scas
jl
loope
sahf
add
cmp
mov
and
ss
movsl
jg
pop
dec
bound
sti
adc
jge
xchg
pop
fistl
std
popa
vfmsub231ps
push
mov
sarl
es
xchg
mov
or
jo
lods
cmp
mov
mov
inc
jns
mov
popa
rolb
popf
scas
fs
loop
pop
pusha
fidivs
scas
popf
fistpl
adc
sbb
ret
ret
sbb
dec
inc
bound
mov
daa
in
cmp
cmp
lahf
inc
mov
cmpsb
icebp
xchg
fucomp
push
or
adc
loopne
cli
addr16
dec
or
push
outsb
cmpl
je
xor
pop
push
leave
pop
adc
lahf
aas
out
or
into
cmp
add
inc
cltd
jno
test
mov
dec
inc
jle
mov
jg
xor
fidivrs
mov
or
sub
mov
leave
jno
cs
test
fwait
adc
inc
pop
mov
daa
push
cwtl
loop
add
mov
sbb
and
xlat
lods
in
push
arpl
push
xchg
loope
sbb
sub
pop
add
loope
imul
popa
adc
fistps
sub
mov
mov
mov
sti
dec
sbbb
mov
add
cltd
sbb
iret
lods
insl
pop
arpl
or
test
xchg
jne
and
stos
mov
pop
fistps
fstl
mov
hlt
inc
xor
stos
xlat
in
cmc
cmc
push
sbb
aas
push
push
mov
sub
pop
mov
aaa
cmpsb
sbb
cmp
add
inc
fistpl
je
cmp
cwtl
mov
cmp
cmp
cmp
lret
pop
fst
add
adc
outsl
mov
fs
gs
mov
addr16
jb
jb
mov
sub
int3
fdiv
push
jbe
cltd
dec
std
subb
rorb
stos
xor
lahf
or
stc
mov
aas
mov
inc
inc
mov
aaa
sbb
pop
pop
rcll
pminsw
mov
adc
fcoms
push
popa
loop
les
and
lcall
jns
imul
xchg
xchg
xor
mov
fsubr
lret
dec
gs
test
sbb
js
push
add
inc
pop
jl
dec
cmp
lcall
fsubrp
sbb
and
cmp
mov
in
in
sbb
push
xor
dec
orl
in
mov
and
mov
sbb
rorb
movsl
or
fsubr
cmpsl
scas
mov
incl
sbb
xor
push
xchg
in
push
xlat
lahf
or
rorb
sbb
dec
or
or
mov
push
outsl
mov
insl
test
in
ja
ficoms
stc
fldl
add
push
pop
push
hlt
ret
or
loope,pn
cltd
adc
push
push
shrb
div
adc
adc
aas
js
jae
out
pop
lods
fcoml
test
sbb
cmp
int3
adc
icebp
das
mov
mov
loopne
push
push
mov
jl
adc
movsl
je
mov
fnstcw
fdivrs
mov
push
pop
rcrb
aaa
roll
je
sbb
push
jnp
add
and
adc
push
xchg
push
lods
ret
ficompl
push
xor
cs
pop
adc
or
mov
cmp
push
sbb
std
cmp
jb
aaa
ljmp
push
mov
gs
cli
cld
cmpsl
in
lea
pop
mov
fmuls
dec
adc
cmc
xor
outsb
xlat
popa
push
lcall
sbb
movsb
dec
push
dec
fldcw
aas
push
jg
jmp
test
xchg
fsubrs
xor
loopne
mov
add
jae
cwtl
adc
adc
popa
leave
es
cltd
pop
push
mov
jge
push
mov
pop
data16
sarl
sub
fsubrs
clc
cmp
and
xlat
fidivs
adc
mov
mov
inc
cwtl
sub
in
test
xchg
adc
and
jno
and
frstor
fisubrl
imul
xchg
pushf
popl
roll
ds
or
pop
insb
xchg
int3
icebp
ljmp
inc
xor
push
add
testb
ss
lret
shll
inc
xchg
push
mov
and
ljmp
jl
push
sti
cld
mov
push
adc
ljmp
ljmp
mov
add
pop
adc
cs
enter
cmp
add
arpl
push
sub
pop
cmpsb
vxorps
dec
ja
jno
or
js
popl
leave
repnz
cs
jbe
xchg
popa
sub
mov
ljmp
out
out
add
mov
lods
fists
or
andl
cmp
insb
ficomps
push
fs
lea
cmc
mov
jp
xchg
test
mov
dec
xchg
insl
jecxz
rorl
cltd
inc
test
popf
dec
ret
xor
jno
ficompl
fisubs
pop
jne
mov
sbb
inc
xor
sub
mov
lds
mov
mov
xor
sub
cwtl
push
inc
imul
fld1
mov
push
sub
test
loop
pop
mov
xchg
or
add
lods
xor
stc
aas
jmp
je
jo
ret
inc
cs
sbb
and
adc
pushf
cmp
subb
daa
int
int
rorl
ljmp
jbe
bound
mov
jne
cmpsb
pop
mov
mull
jecxz
pop
xchg
nop
jecxz
mov
mov
pop
dec
inc
sbb
shrl
pop
dec
push
sbb
das
movsb
nop
stc
test
cmp
pushf
mov
lcall
aam
sub
push
jg
loopne
sarl
cmpsl
xor
sti
jl
add
jecxz
cmp
jo
push
mov
xchg
stos
outsb
mov
sarl
stos
add
int
out
push
nop
outsl
or
xchg
call
jb
lods
mov
fs
pop
stos
ljmp
push
rcl
adc
call
cvtpi2ps
je
dec
push
pop
xlat
mov
fs
shrl
mov
cmp
pop
jge
and
or
jle
sub
dec
inc
lods
fsubs
pusha
lds
movsb
push
jns
mov
mov
outsl
inc
xchg
jbe
sarb
sub
cmc
pop
js
and
pushf
test
cmp
jl
mov
adc
pop
mov
mov
popa
mov
test
idiv
rcr
dec
lahf
jo
arpl
popf
inc
adc
mov
cmp
cmp
fldl
pop
addr16
jge
mov
rcrl
dec
nop
and
inc
out
inc
rolb
dec
dec
jns
loopne
cltd
shl
mov
lock
scas
mov
sub
aas
xor
das
mov
dec
jle
jne
inc
xchg
lods
insl
and
mov
aas
xchg
fildll
sub
cmp
int3
shlb
push
jecxz
xor
dec
sbb
sub
mov
cmp
call
xor
outsb
xchg
add
mov
stc
jo
dec
cmp
lret
je
int3
ficompl
jno
push
mov
in
dec
mov
mov
jbe
loope
xchg
push
or
xorl
sub
scas
insl
cld
xor
outsl
inc
in
jmp
jae
jno
pusha
movsl
mov
insl
shrl
hlt
mov
pop
dec
or
movsl
jne
mov
sbb
test
insl
mov
push
xchg
and
inc
clc
lahf
cmpl
fwait
cmp
cs
push
aas
push
push
leave
lods
aam
shrb
jg
inc
pushf
cmp
add
cmp
mov
pop
cmp
dec
pushf
push
mov
icebp
outsl
xor
push
push
fidivrl
cmp
jne
mov
push
and
sub
repz
pop
mov
loope
ret
push
lcall
stos
sub
inc
int
mov
jns
xchg
ja
popa
and
in
cmp
push
pop
sub
xor
in
pop
mov
inc
int3
inc
test
inc
test
pop
mov
popf
adc
adc
push
pop
add
insl
aaa
stos
dec
sbb
in
aam
mov
xchg
aam
jl
mov
adc
dec
add
mov
jnp
mov
sbb
popf
mov
sahf
sbb
inc
xor
stos
sub
sbb
dec
outsl
xchg
jns
inc
xchg
in
or
jmp
xchg
adc
cli
mov
and
iret
fwait
push
add
cmp
jnp
lahf
pop
push
lahf
cmpsb
rcll
add
jecxz
mov
test
outsl
in
xorl
ss
movb
popa
dec
inc
in
sti
xchg
jmp
mov
rolb
popa
add
sbb
sub
cmc
inc
inc
cmc
mov
push
cli
xlat
cmp
pop
movsb
pop
mov
or
imul
and
jne
add
inc
push
out
out
adc
push
jge
das
mov
iret
push
aad
dec
push
sbb
frstor
xlat
fcomp
idivl
mov
jae
pop
cld
inc
sbbl
pop
mov
fcoms
pop
push
sbb
popa
pop
outsb
pop
rclb
loopne
sahf
js
and
pusha
rolb
scas
loop
adc
push
xor
js
cmp
aaa
fisttps
mov
sbb
push
or
xor
je
push
xchg
pop
sti
xchg
inc
pop
aad
push
daa
sub
push
out
mov
jne
mov
ja
cmp
clc
loope
xchg
inc
loopne
repz
xchg
jb
mov
sbb
xor
push
icebp
adc
adc
pop
callw
pop
leave
push
cmpsb
repnz
cmp
mov
fdiv
and
cmc
mov
inc
popf
mov
sbb
stos
movsb
dec
push
xor
fldt
cmp
inc
fisttpl
je
sbb
fdivr
stos
push
sub
push
sbbb
cmpsb
or
add
lods
jge
add
loopne
pop
std
pop
and
out
outsb
inc
mov
rcrb
cli
xor
dec
pop
sbb
nop
dec
cmpsb
jns
adc
in
jle
xor
mov
pop
push
leave
sbb
mov
daa
xor
mov
dec
jne
inc
popf
inc
dec
lret
dec
fstpt
scas
test
je
fsubrl
add
xchg
jbe
dec
test
sti
in
pop
and
mov
bound
sti
ljmp
xchg
int3
pop
or
fwait
sub
ss
popa
sbb
insl
pusha
sbb
and
lret
mov
jne
int
shl
fistpl
inc
aas
sbb
hlt
je
gs
xor
aaa
xor
inc
mov
nop
scas
out
jge
add
jmp
mov
jmp
mov
testl
xchg
pushl
enter
mov
sub
test
sub
outsl
int
inc
movl
jmp
pop
mov
mov
bound
movsl
xchg
jmp
dec
xor
pop
pushl
mov
pusha
push
shrb
or
add
rorb
fdivr
das
sub
in
cmp
mov
push
notl
inc
or
mov
mov
pop
mov
addl
jae
inc
cmc
push
ljmp
leave
jl
aam
and
or
mov
mov
in
xchg
mov
dec
and
test
and
lods
int
and
jecxz
or
sahf
rcrb
sub
inc
mov
adc
movsb
xchg
mov
es
mov
jge
add
xor
push
sub
sub
and
stos
mov
out
inc
inc
adc
jge
cltd
stos
jns
mov
bound
sarb
lods
out
ljmp
jb
or
push
dec
fadd
rolb
sbbb
push
push
fisubrl
mov
pop
enter
inc
xor
add
sti
cmp
sub
decb
adc
lcall
mov
stos
decb
pop
adc
shlb
sub
sub
sbb
mov
add
enter
imul
fstps
push
jae
pop
fs
add
pop
rcl
andl
mov
icebp
adc
pop
cmp
hlt
mov
test
pop
sub
test
stos
dec
rcrb
in
add
enter
or
pop
adc
loopne
out
jl
jle
les
mov
push
shr
jbe
std
nop
adc
iret
mov
fcmovb
jbe
inc
jp
ret
mov
repz
sbb
push
sbb
dec
pop
xor
mov
sub
mov
cmc
pop
lods
dec
cmp
mov
adcl
test
cli
add
jno
out
stos
fstps
xor
fwait
jge
lahf
rclb
push
sub
test
shrl
out
jmp
leave
dec
lods
outsb
push
das
daa
insb
insl
fmul
and
sub
jno
cld
inc
mov
lds
jbe
cmp
add
mov
sbb
jp
mov
cmp
mov
js
frstor
and
insl
mov
not
mov
ret
adc
lods
loope
movsl
insl
mov
pop
ror
dec
shrb
ret
sbb
pop
ret
and
mov
fwait
mov
fs
inc
mov
xlat
mov
shlb
inc
les
stos
mov
fisubrl
cmp
fstps
call
push
mov
imul
test
fsubl
jne
dec
ficoms
inc
shll
mov
lds
ljmp
mov
ret
inc
orl
add
in
dec
fstpl
sbb
shl
shrb
cld
out
sub
movsb
lds
int
lcall
push
in
dec
xchg
dec
mov
or
daa
mov
xor
iret
lcall
dec
fcoml
pushf
pop
leave
dec
cwtl
lock
test
loopne
nop
ret
jp
jbe
fcoml
inc
in
jae
push
popa
fcoms
jae
xchg
xlat
imul
cmp
jbe
call
sub
mov
fadds
jecxz
jmp
mov
push
mov
mov
inc
or
jp
jb
repz
or
nop
pop
push
add
cmp
fcomps
push
inc
xchg
je
loope
cmp
cmp
aas
nop
mov
mov
lods
jge
lahf
data16
mov
jge
fisubrs
out
rolb
fldpi
pop
jae
mov
push
fsubr
adc
mov
inc
xchg
sub
push
or
in
mov
hlt
inc
push
push
jae
add
and
popl
lea
mov
sahf
sub
push
pop
test
mov
insl
inc
fcoms
jecxz
add
sub
pop
inc
mov
dec
mov
jb
out
and
mov
inc
aad
scas
movsb
jb
pmullw
test
insl
sub
mov
ljmp
shrb
addl
in
ss
inc
sub
and
mov
mov
aam
mov
push
fsubl
pop
hlt
mov
ds
je
push
jae
popa
cmp
mov
cld
xor
outsb
das
mov
orl
imul
popa
inc
mov
addr16
bound
cmp
aas
mov
dec
popa
loopne
inc
stos
lret
popf
shl
sub
xor
mov
test
push
jb
ret
subb
cld
repz
stc
lds
popa
mov
push
and
push
dec
movsl
mov
out
xchg
mov
xchg
jnp
ficoms
jns
cmp
mov
filds
sub
xlat
mov
sbb
mov
es
repz
cltd
fwait
push
ja
add
aam
jg
dec
rolb
cs
dec
subb
cmp
pop
dec
aaa
lods
int
cld
sub
mov
xor
test
xor
bnd
ss
sbb
gs
imulb
arpl
punpckhbw
push
insb
sub
int3
mov
rorl
mov
pop
push
notl
test
pop
pop
pop
mov
sarb
push
bound
adc
mov
lea
shrb
or
sbb
jp
loopne
scas
mov
add
dec
add
arpl
outsb
pop
pop
aas
rcrl
repnz
mov
subl
sbb
push
xchg
aam
lock
js
stos
xchg
xchg
pop
xchg
stos
cmp
adc
mov
mov
into
in
xchg
mov
test
jmp
repnz
scas
out
loop
lds
xlat
sahf
inc
aad
add
mov
xchg
gs
lock
cmpl
fistpll
rcrb
ret
push
and
mov
cmp
xchg
imul
lcall
jb
movsb
out
sub
jne
popf
inc
inc
mov
mov
flds
cltd
xchg
xchg
cmp
fs
cmove
in
fists
push
pop
and
stos
add
mov
or
and
gs
std
lret
adc
xor
out
out
or
or
jp
ja
push
sub
imul
cltd
int
jmp
or
cmp
fidivl
loop
loopne
push
aam
push
nop
mov
jg
movsl
outsb
dec
sbb
add
in
test
adc
sbb
repnz
and
fldl
adc
add
sbb
cmc
in
xor
pop
lods
mov
add
add
push
dec
xorl
jge
loop
loope
lods
xor
jecxz
and
jnp
out
jae
mov
xlat
sti
stos
push
mov
mov
inc
jno
xchg
mov
adc
enter
out
lcall
and
arpl
in
and
popf
dec
mov
icebp
daa
stc
arpl
pop
lret
sub
out
sbb
jmp
dec
into
cmpsl
push
inc
out
out
adc
mov
xchg
lods
fcmovnu
cmp
js
mov
dec
xchg
pushf
imul
je
outsl
leave
ss
dec
pop
out
push
lcall
inc
outsb
mov
stos
xor
and
pop
sahf
cmp
pop
neg
fidivrl
inc
sbb
mov
mov
fidivrl
cli
pushf
adc
sub
insl
pushf
push
shlb
ret
jo
pop
dec
jae
lcall
add
vmovss
xor
dec
dec
aad
into
lea
inc
out
cli
shll
and
es
addr16
test
stc
mov
leave
cmp
movsl
xor
adc
lahf
add
fwait
and
jl
das
jae
and
push
das
inc
jb
call
std
inc
aas
fldt
pop
fcoms
adc
push
push
out
jo
cmp
rolb
lcall
push
push
imulb
and
inc
xor
pop
or
popa
out
jg
popf
xchg
gs
sbb
dec
and
out
mov
loope
xchg
sbb
inc
loope
nop
mov
int
or
push
out
xor
pop
lods
cmp
popf
jne
mulb
or
pop
stos
in
mov
xor
lods
pop
cmp
and
pop
mov
sub
dec
sub
mov
pop
enter
mov
in
add
insb
push
sub
add
add
scas
rcl
je
call
in
hlt
inc
lret
cwtl
add
jmp
mov
or
mov
jmp
lret
or
decl
or
push
inc
or
mov
sbb
xchg
fcoml
fiaddl
xchg
inc
in
cmpsb
cmp
jae
inc
addr16
dec
xor
fistl
negl
or
cs
out
xchg
insl
add
imul
mov
ja
push
cmpl
mov
add
xor
and
out
test
repnz
sub
arpl
sbb
sbb
in
cmpsl
dec
and
sbb
push
lret
cltd
bound
xor
mov
cmp
jp
rcll
add
push
and
scas
xchg
aam
imul
jp
pop
and
jg
jmp
sub
mov
inc
push
les
push
and
fsubs
push
std
fsubrs
mov
and
out
push
push
xorb
push
enter
xchg
lahf
mov
inc
mov
xchg
mov
sub
lock
sbbl
cmp
jmp
sub
or
pop
pop
mov
in
or
sbb
cli
dec
rolb
xchg
push
push
lcall
dec
cmp
scas
push
rcll
add
xchg
movsb
sahf
xchg
nop
ss
xchg
pusha
dec
xchg
iret
cmpsb
add
push
sahf
sahf
and
mov
daa
jb
les
cwtl
std
add
test
pop
cmpsb
or
sub
jge
mov
jp
cmpsb
stc
mov
cli
arpl
xor
push
je
clc
imul
movsl
aam
and
mov
sahf
les
push
stc
lock
xchg
and
jne
lret
fisttpl
mov
mov
aas
mov
and
shlb
sub
mov
jno
jmp
dec
mov
mov
fst
push
aas
cmp
jle
fbstp
clc
add
sbb
incb
mov
insb
xchg
fprem1
pop
outsl
mov
pop
fisubs
pop
movb
sbb
and
xchg
adc
in
mov
in
xor
push
inc
inc
cld
mov
dec
pushf
ret
xor
lahf
sarl
adc
lods
insl
scas
cs
and
pop
adc
add
test
mov
ja
sbbl
add
loope
adc
and
lods
out
push
test
stos
jmp
inc
inc
jmp
ds
rolb
xchg
cmp
xor
sar
loop
jle
mov
stc
or
mov
test
adc
bound
shlb
mov
test
dec
mov
ret
inc
xorl
xor
mov
adc
ljmp
inc
mov
cs
lods
push
add
aas
cmp
pop
enter
inc
jecxz
rorl
dec
jne
mov
in
movsb
scas
xchg
mov
repnz
les
sbb
das
xchg
out
mov
mov
inc
dec
aas
stos
or
cli
js
jp
sub
lea
pop
sbb
add
aad
inc
sar
cmc
js
xchg
je
imul
lods
rcr
jno
pop
adc
cmpsl
jno
fwait
gs
gs
loope
mov
pop
fistpl
mov
ja
rcrb
adc
inc
mov
icebp
aad
out
loopne
xchg
and
sbb
mov
sti
mov
insl
movsb
pop
int
cmp
into
jle
std
lods
lea
enter
dec
xlat
sbb
mov
push
cmp
js
xchg
dec
dec
cltd
sarl
xchg
jns
push
or
xchg
aas
into
pop
add
call
cwtl
dec
mulb
lods
jae
adc
in
int3
aad
mov
stc
jbe
in
and
bound
leave
stos
or
mov
mov
aad
stos
or
sub
arpl
mov
and
filds
push
mov
cmp
adc
mov
add
and
xchg
fsubs
mov
outsb
lret
dec
mov
xchg
push
dec
adc
xor
mov
add
adc
out
cmc
dec
mov
mov
lret
sar
pushf
insb
or
ljmp
loope
lret
pop
or
xchg
cmp
pusha
in
jno
aad
or
push
testl
jne
aam
xchg
repz
lock
fcomip
sub
cltd
and
scas
xorb
mov
loopne
and
mov
call
push
inc
scas
nop
jl
loop
mov
and
sbb
sahf
sarl
pop
ret
xchg
shlb
pop
jle
enter
clc
push
adc
testl
push
inc
decb
cmp
mov
and
sub
mov
sub
hlt
je
xor
outsl
fstpt
sti
push
sub
add
pop
lcall
sub
scas
pop
xor
jecxz
cmpsl
sbb
iret
es
movsb
jae
popf
sub
dec
pop
mov
add
mov
push
andl
test
test
movsl
inc
xor
and
xor
or
into
popa
cmp
test
push
or
xchg
push
call
leave
inc
fcmovnbe
pop
pop
adc
lret
xor
test
stc
inc
faddl
stos
mov
pushf
push
ror
and
pop
movsb
cld
inc
sub
sbb
adcl
and
fadds
ja
cmpsb
popa
lahf
aam
inc
hlt
xchg
jl
push
nop
xor
rcll
and
pushf
test
sarb
jmp
mov
iret
ljmp
inc
sub
xchg
insb
jmp
inc
adc
js
push
adc
in
jecxz
inc
add
sahf
or
jg
lret
popf
pop
lea
adc
shll
repnz
fwait
xor
ss
addb
jge
pop
jbe
and
into
mull
out
rclb
popf
fimull
out
inc
sahf
push
pop
lea
cmp
xor
outsb
xchg
aam
adc
stos
push
pop
fwait
cmp
or
mov
ret
jo
xor
movsl
pop
cli
leave
std
pushf
jle
std
push
jle
xor
sbb
mov
adc
jae
arpl
xchg
test
sbb
test
clc
add
push
pop
lahf
dec
testl
jg
addb
out
sbb
mov
popf
xor
or
shrb
jmp
test
push
movsl
insb
and
cmp
sub
mov
cld
sbb
cmp
sarb
cld
add
fldt
nop
cmp
test
add
stc
popf
or
push
adc
mov
mov
es
aam
insl
xchg
jnp
je
adc
lods
pop
fisubrl
cwtl
jno
xchg
xchg
mov
test
xchg
lcall
adc
movsl
jnp
pop
sbb
jmp
jle
cli
cmpsl
in
std
push
aas
dec
and
mul
ds
or
adc
cmovbe
pop
adc
mov
mov
mov
or
addr16
aas
aam
cmp
movsl
mov
push
test
call
lahf
pop
xlat
inc
sub
cmp
nop
fadd
dec
mov
inc
push
test
dec
cmp
bound
ret
negl
cmp
lea
push
sub
lods
push
ja
shl
popa
push
orl
movsl
adc
dec
mov
xchg
pop
mov
ds
icebp
add
mov
sub
cmpsl
sub
lods
push
dec
repnz
lock
mov
test
dec
stc
mov
lods
fs
push
adc
aam
cmpl
inc
sbb
test
icebp
in
clc
repz
roll
mov
xor
cmp
push
mov
pop
imul
test
lret
jge
fimuls
test
lcall
jge
mov
or
jecxz
icebp
mov
sub
js
cmpl
iret
jnp
dec
loope
push
cmp
inc
in
mov
mov
lds
and
fidivs
add
push
insl
and
mov
stos
lahf
sbb
testl
and
and
xchg
adc
scas
mov
test
lret
out
xor
int
rcrl
xlat
push
push
cmpsl
out
in
rorb
sbb
int
cld
mov
loopne
cmpsl
sub
pop
in
add
inc
ja
loopne
mov
popa
pushf
sub
xor
inc
pop
xchg
mov
sahf
push
pop
push
sub
nop
ja
jno
daa
jmp
sbb
imul
daa
aaa
jl
es
dec
out
ljmp
loope
cld
sbbb
scas
push
adc
xchg
sbb
inc
js
inc
addl
inc
shll
add
pop
and
adc
jb
or
ljmp
lret
xchg
mov
inc
lcall
inc
sbb
add
enter
ss
xchg
xor
stos
lret
in
jne
aas
icebp
pop
sbbl
pop
bound
imul
sarb
and
xchg
lds
adc
jle
cmc
push
les
pop
loopne
sbb
enter
les
aam
mov
test
cmp
inc
cmp
inc
sti
mov
dec
nop
dec
adc
addr16
cmp
mov
jns
cmp
sub
lods
jecxz
push
and
adc
sarb
test
sbb
inc
addb
bound
inc
add
sub
pop
lret
fwait
call
xchg
dec
mov
mov
xor
ds
dec
sub
pop
jbe
lock
loope
fwait
test
xchg
dec
mov
test
cmpsb
adc
push
adc
push
or
push
mov
outsb
clc
push
or
inc
out
mov
xchg
dec
rol
out
daa
movsl
adc
jg
adc
xchg
ret
or
mov
call
rcrl
pop
movsb
pop
push
adc
sbb
push
mov
dec
cmp
mov
inc
push
xchg
pop
jnp
imul
dec
in
sub
dec
or
xor
mov
adc
sub
cmc
sti
gs
dec
fdiv
stc
and
push
pop
dec
fdivr
mov
lods
loope
mov
and
jmp
adcl
pop
sbb
out
cli
adc
loopne
loop
lods
test
jle
pop
push
adc
adc
mov
test
aaa
jno
leave
mov
sub
cwtl
pop
xchg
push
gs
test
add
imul
sbb
inc
rorb
xchg
sub
mov
aam
test
out
pop
pop
push
sub
mov
lahf
cmp
sub
push
mov
rclb
xchg
test
cmp
push
mov
leave
xchg
les
loopne
leave
xor
in
out
mov
lds
sub
cmp
test
mov
rorb
cmp
shll
scas
mov
dec
lret
mov
in
xchg
push
xchg
dec
popf
sub
bnd
xchg
aas
adcl
out
push
xor
xor
pop
cld
jp
cwtl
bswap
decl
andl
leave
jmp
arpl
imul
test
mov
andb
sti
push
mov
shl
ds
lods
xchg
stc
bnd
add
mov
mov
xor
dec
aad
mov
sbb
pop
cwtl
and
rcrb
data16
aam
or
inc
lret
cli
add
pop
iret
push
xor
ds
repnz
push
push
xchg
add
lods
dec
mov
cli
movsb
pushf
scas
cmp
test
dec
in
sub
mov
aam
push
jns
fcoms
inc
adcb
xchg
inc
outsb
and
xor
cli
aad
add
mov
cmp
into
ret
xchg
fsubrl
inc
sub
insl
aas
jo
adc
in
out
lods
mov
rcl
push
xchg
fmul
push
jp
xchg
mov
xor
sbb
mov
sub
cld
ret
sarb
ficoms
mov
scas
ds
test
pop
jg
les
bound
or
lahf
inc
xchg
test
jmp
jb
lock
insb
dec
or
or
out
pop
imul
fistpll
lods
shl
mov
cmp
mov
dec
test
sbb
mov
mov
sahf
cmpsl
sub
incb
lds
sub
adc
xchg
idivb
idiv
xchg
sub
fcomip
aad
add
xchg
idivl
cmc
pop
sarl
inc
shll
aam
mov
dec
int3
js
je
xlat
test
adc
lahf
scas
ljmp
in
and
loope
in
jge
hlt
out
jge
mov
divl
std
es
lds
xor
mov
mov
cmp
push
lods
loope
push
and
jbe
and
leave
cs
sbb
cmp
adc
or
leave
jmp
stc
mov
cli
add
sub
xchg
xchg
push
repz
subb
jb
add
inc
dec
fld1
jge
test
mov
lret
and
arpl
mov
mov
xor
mov
mov
sbb
xchg
fdivs
jo
pop
push
mov
xor
dec
jecxz
adc
dec
dec
add
sub
and
addb
mov
push
mov
cmpsb
frstor
popa
adc
cmp
mov
sbb
cmp
cli
sbb
sbb
cmp
lret
sahf
pop
fldenv
push
es
sbb
in
jmp
popa
mov
push
sbb
bound
push
cmpsb
add
shll
cmp
in
dec
sub
ficoms
cld
or
stc
jns
loope
mov
mov
jge
jl
aad
daa
sbb
or
fadds
mov
js
or
inc
into
push
push
cs
xchg
cmpl
mov
or
sbb
mov
mov
push
fs
mov
shr
jnp
fsubrs
and
push
pop
imulb
pop
fldcw
loop
daa
inc
les
add
divl
movsb
mov
lret
xor
lret
jmp
sahf
mov
mov
lods
sbb
addr16
dec
cmpl
decb
int
ja
mov
mov
pop
sbb
mov
xlat
adc
mov
cmp
or
shll
add
aas
mov
outsb
push
lret
imul
movsb
inc
sar
out
mov
int
loope
outsb
iret
mov
jle
mov
mov
aad
or
ja
and
clc
dec
enter
push
mov
sar
shll
punpckldq
jle
int3
mov
adc
xchg
cli
adc
and
xchg
xchg
and
fsubs
popa
pop
scas
out
roll
in
stos
cmp
repnz
int
lret
ds
push
inc
in
mov
lods
lods
popl
jo
jp
cli
push
ret
and
sub
mov
rorl
call
sbb
int
in
mov
arpl
adc
pop
repnz
xchg
adc
fimuls
xchg
push
bound
mov
icebp
jmp
cmp
pop
fsubrs
xor
dec
pop
mov
xchg
loope
and
out
bound
hlt
outsb
push
mov
je
adc
test
stos
fbstp
mov
or
mov
push
outsb
scas
dec
std
hlt
outsb
pop
ret
shl
add
and
inc
outsl
pop
lret
xchg
iret
mov
subl
pop
scas
sub
movsb
leave
adc
inc
push
mov
pop
lods
out
push
iret
sub
pop
iret
xor
mov
ljmp
jnp
and
ljmp
lea
clc
mov
jp
xchg
cmpsb
insl
mov
and
jno
jp
push
lds
mov
lcall
test
imul
cmp
shl
aam
ja
push
adc
push
in
in
add
out
mov
push
int3
jge
and
pop
xchg
shll
xchg
call
xor
push
movsl
xchg
scas
dec
mov
cmp
lret
sti
inc
cmp
mov
fcoms
in
dec
jns
dec
sbb
sub
pusha
sub
cs
xchg
pop
test
loop
das
adc
or
mov
fcomp
lods
shll
pop
xchg
push
inc
jnp
lods
hlt
or
xorb
mov
mov
fcmovnb
push
fidivrs
leave
inc
sahf
cmc
mov
leave
mov
xchg
movsb
arpl
sbb
inc
xchg
fwait
les
lcall
cli
cli
mov
jp
nop
int
jo
dec
jb
or
adc
xor
xor
fwait
xlat
cmp
mov
mov
mov
test
test
out
sub
cmp
xor
xor
xchg
push
mov
imul
inc
testb
pop
cs
ljmp
rcrb
lods
mov
popf
rorl
add
mov
xchg
out
aaa
lds
jmp
jnp
call
bnd
sarb
repz
popa
adc
and
lea
sub
icebp
arpl
daa
mov
insb
jmp
addr16
hlt
and
xchg
mov
xor
sub
add
sub
xor
adc
lods
pop
push
movsb
aaa
jecxz
fninit
cwtl
or
add
popa
sbbl
pop
pop
pop
sti
outsl
or
es
and
push
cwtl
cltd
sbb
mov
xchg
jno
ror
shrd
data16
add
adc
test
out
scas
int3
xchg
int3
ret
movsl
dec
sarb
ja
jo
cmp
in
mov
or
push
mov
cmp
cmc
mov
xchg
mov
cmpsb
lods
cmp
or
push
out
pop
imul
push
and
inc
push
out
pushf
sbb
icebp
mov
ljmp
dec
push
and
aam
pop
mov
jo
loopne
icebp
js
imul
mov
movsb
dec
lret
out
push
inc
mov
adc
outsl
mov
or
xchg
fadds
loopne
imul
dec
adc
test
mov
jge
and
inc
in
jno
pop
gs
jne
das
jo
dec
jle
cmpsb
ss
xchg
pop
adc
into
mov
repz
pop
out
jns
pop
dec
or
test
push
idivl
adc
sub
mov
push
in
jle
pushf
lcall
mov
mov
fstpl
sbb
dec
loopne
jle
out
jo
mov
mov
enter
mov
subb
mov
push
out
adc
arpl
sub
push
add
cmp
inc
loope
pop
pop
add
xlat
pop
sbb
aas
adc
movsl
pop
imul
mov
cmp
push
jg
adc
inc
movsb
sub
ds
fcmovnb
adc
cli
mov
outsl
xor
out
or
stc
jns
pop
aaa
xchg
mov
pop
adc
or
js
mov
mov
dec
push
sub
divl
push
clc
xor
in
test
inc
cmp
jl
inc
pop
insl
inc
outsb
xchg
push
scas
addr16
jl
xchg
aad
push
mov
push
adc
or
test
aaa
popf
imul
popa
jecxz
pusha
mov
enter
dec
jp
pop
clc
add
popa
push
shll
mov
cltd
push
xor
insl
jae
mov
loop
mov
lock
aas
cwtl
mov
adc
xor
and
jne
mov
or
in
jp
mov
sti
cmp
inc
cmp
mov
ret
jne
call
xchg
adc
mov
sub
vsubss
out
mov
dec
test
pop
jae
int
push
xchg
sub
adc
pusha
shll
leave
mov
roll
dec
push
sbb
daa
fistps
sub
mov
adc
sti
idivl
std
dec
xor
pop
ret
shrb
inc
push
loopne
jne
scas
pusha
mov
lds
push
xchg
cli
mov
push
or
xchg
dec
stos
xchg
push
dec
cmpsl
dec
in
shr
add
enter
mov
je
push
push
shrl
jp
xchg
ds
cld
jno
insb
inc
pushf
repz
imul
adc
adc
sarb
lret
shlb
fsubs
test
ss
sub
in
stos
cmp
xor
mov
xor
mov
test
adc
je
cmpsl
pop
iret
dec
movsb
xchg
or
adc
enter
sub
imul
inc
jl
mov
mov
and
arpl
sub
mov
bound
ljmp
adc
in
aaa
stos
xchg
push
enter
xor
push
shrl
pminub
jg
and
divl
jns
sub
aaa
fwait
push
dec
push
sarl
lods
and
jmp
xor
scas
je
mov
cwtl
inc
pop
ret
movsl
fstpt
cmc
xchg
cli
mov
jno
add
adc
push
xchg
fstps
adc
mov
cmp
mov
mov
or
fnstcw
pop
scas
jle
or
pop
sub
mov
fisubrs
pop
mov
mov
jg
ljmp
pusha
pop
sbb
and
push
dec
test
pop
pusha
divb
sub
jns
xor
movsl
dec
xchg
adc
mov
lea
mov
pusha
push
aad
jp
push
or
iret
or
movsb
cmp
mov
cwtl
jp
adc
stc
pop
mov
push
add
fisubrs
mov
mov
test
sub
dec
push
mov
enter
rcr
test
scas
repz
sub
pushl
mov
int
cmp
xchg
mov
stc
xor
sarl
and
mov
aad
xchg
das
cmpb
pusha
pop
fidivrl
push
test
shrb
jl
xor
add
nop
addr16
movb
ret
gs
bnd
es
ja
mov
je
js
loopne
add
std
xchg
inc
rolb
xchg
mov
push
insb
mov
mov
les
clc
js
mov
xchg
lahf
cmp
push
xchg
inc
push
shlb
cwtl
je
in
cmp
test
pop
repz
popa
inc
or
push
pop
jo
outsb
inc
dec
sarb
add
dec
das
lods
fwait
mov
pusha
mov
inc
push
gs
in
mov
aam
lods
jns
jl
lcall
add
data16
adc
inc
xlat
pop
jp
loop
lods
insl
or
dec
icebp
std
push
lods
in
insw
inc
scas
mov
out
mov
movb
mov
jecxz
mov
pop
out
lret
fistl
fisubrl
add
lock
aad
cld
xor
sbb
in
mov
adc
xlat
push
dec
push
dec
or
scas
push
sbb
xchg
loope
mov
mov
inc
xor
dec
movhps
out
fcoms
call
lds
popa
inc
sbb
popf
jnp
add
cmpsb
xor
sbb
mov
ja
movsb
add
rcr
subl
lret
inc
inc
rorb
out
scas
mov
mov
push
push
cs
jne
clc
lock
jne
fsubrs
mov
aad
fs
call
aas
inc
movsb
inc
enter
popf
push
add
scas
sub
icebp
xlat
xor
adc
mov
xor
fs
cmpsl
cmp
cmp
je
pop
pop
imul
add
mov
cld
push
hlt
imul
ret
bound
xor
cmp
mov
mov
pop
or
adc
xchg
cmc
inc
ljmp
movsl
add
inc
repnz
ja
jle
rorl
inc
mov
lret
testl
incb
push
add
stos
notb
out
scas
sub
inc
aam
adc
arpl
xchg
jle
out
push
cltd
data16
fbstp
inc
adc
push
loope
add
imul
mov
out
sub
push
out
jl
jge
shl
mov
adc
xchg
test
inc
mov
push
xchg
gs
adc
lds
lret
outsl
icebp
pop
push
jl
lods
dec
dec
mov
and
rcll
bound
xchg
gs
xchg
test
mov
loope
adc
xor
xchg
test
inc
add
call
and
jb
cld
inc
std
jno
push
je
hlt
leave
pop
push
rol
aas
xchg
mov
negb
outsl
add
test
aaa
sbb
gs
add
mov
cmpsl
mov
push
jnp
push
setl
int3
sbb
rcrl
mov
pop
xchg
mov
pop
lea
lea
xchg
mov
daa
daa
cmp
add
inc
fnstsw
stc
scas
cmp
mov
mov
or
sub
pop
imul
leave
sub
dec
dec
xchg
fiaddl
cmp
stos
push
xor
dec
in
sbb
clc
int
insb
lods
and
cltd
dec
sub
push
sub
dec
test
stos
loope
mov
popf
mov
je
popa
jecxz
mov
fstl
pusha
pusha
insb
nop
fcmovne
dec
insb
nop
adc
idiv
lahf
add
mov
movsl
movq
stos
data16
or
dec
xchg
stos
icebp
scas
out
fcoml
mov
xor
xchg
xchg
jbe
sbb
fidivrl
in
mov
fstps
pop
adc
and
xor
sub
cmp
or
mov
int
call
push
nop
jb
mov
insl
sti
fcoml
and
lcall
push
outsl
jmp
sbb
add
stos
jb
mov
shl
fists
mov
mov
mov
orb
adc
pop
sbb
daa
out
push
sub
add
pop
mov
js
cmp
push
xlat
pushf
mov
daa
cmp
je
xorl
pop
mov
push
xor
dec
sub
mov
mov
jne
movhps
sbb
ljmp
scas
ror
int3
dec
daa
xor
fs
scas
mov
sub
push
push
enter
dec
ja
add
lods
sub
cli
mov
sbb
inc
cwtl
push
sub
xchg
mov
ss
iret
lock
out
jecxz
fucom
mov
or
inc
dec
mov
ret
test
inc
sub
enter
in
ja
xchg
daa
push
add
in
in
mov
mov
or
xchg
fisttpl
cmp
cmpsb
fst
cld
xchg
enter
aam
pop
dec
test
stos
rclb
cmp
push
mov
inc
call
sub
ret
inc
sbb
in
leave
or
cltd
ret
xor
test
sbb
push
insb
daa
dec
add
mov
les
mov
in
inc
adc
or
xchg
imul
js
in
dec
repz
jle
sub
stc
sbb
std
fs
jecxz
adc
fcomps
sbb
sub
out
and
inc
loop
pusha
push
ljmp
jmp
cmp
mov
loop
and
mov
fcom
xor
mov
test
push
cmp
lcall
lcallw
aam
ret
cmp
jns
cmpl
dec
or
dec
sbb
fwait
jmp
popa
stos
fistps
je
icebp
pop
jl
jmp
sub
jle
ljmp
adc
in
repnz
pop
jg
sbb
imul
pop
sub
sbb
repz
push
adc
jl,pn
cmpsl
mov
repnz
mov
pop
rcrl
mov
fnstsw
cmpsl
addr16
push
pop
ljmp
enter
movsl
adc
std
cltd
daa
int
aas
pop
mov
xor
repnz
in
cmp
xchg
movsl
insl
stos
je
arpl
test
jnp
orl
xor
lret
lds
and
mov
and
pop
cmp
dec
dec
jnp
pushl
cmp
data16
add
loop
sbb
or
cmp
in
fisubrs
into
mov
mov
pop
jle
mov
in
push
jno
das
mov
mov
popf
mov
enter
sub
iret
or
push
pop
add
in
push
sub
sub
ljmp
out
push
and
in
pop
mov
dec
cmp
int
cmp
aas
scas
lea
jp
pop
ja
das
cmp
fdivs
in
and
dec
out
xchg
loope
popa
cmp
mov
sub
jno
repz
bound
insl
xchg
movb
mov
loopne
push
jmp
add
xor
aad
scas
fldl2e
or
add
or
xchg
or
int
scas
fs
pop
pop
inc
xor
mov
negb
sub
fmull
add
mov
sbb
jmp
call
cmp
xlat
lea
pop
scas
imul
in
dec
jecxz
pop
into
lods
xchg
xchg
jmp
outsb
out
push
cmp
out
inc
stc
push
out
push
pop
inc
fstpl
in
dec
je
aam
idivl
int3
or
arpl
aaa
test
test
mov
icebp
and
leave
xor
sbb
popa
stos
repnz
arpl
lahf
and
dec
leave
jle
mov
leave
fdivrl
or
mov
lret
scas
cltd
arpl
fisttps
add
xor
loope
jo
dec
aam
pop
mov
nop
mov
jp
or
sbb
imul
mov
sbb
stc
je
inc
adc
addr16
repz
in
or
push
pop
js
enter
xlat
mov
out
sahf
pop
cli
sbb
out
stos
jae
popf
and
jl
les
cmp
scas
sub
gs
xor
in
inc
add
inc
jge
dec
aaa
aaa
jne
aam
push
jnp
jg
int3
push
jns
xchg
ds
imul
lock
das
xor
jmp
mov
pop
adc
insb
or
imul
clc
sub
pop
stc
imul
mov
addr16
pop
push
outsb
fcomps
pop
dec
mov
addl
push
sub
mov
dec
dec
nop
adc
push
cmpsl
sbb
push
fadd
sub
lret
iret
movsl
cmp
jo
push
hlt
and
lea
js
enter
sahf
enter
xchg
mov
fprem
mov
push
mov
add
mov
jmp
xchg
xorb
mov
or
movsb
loopne
insl
andl
and
cmpsb
popf
pop
jle
sbb
cmp
out
outsb
testl
pop
adc
push
jbe
jge
mov
in
mov
ljmp
data16
mov
je
jp
mov
movsl
adc
mov
lock
dec
pushf
cmp
ljmp
inc
push
xor
mov
jne
adc
and
ds
stos
inc
jle
xor
test
popa
mov
js
aaa
cld
jbe
loopne
adc
inc
fildl
jb
rcrl
adc
and
and
outsb
leave
dec
add
in
add
inc
scas
mov
xor
dec
cmpb
scas
pavgw
push
pop
clc
pop
pop
fs
fsubrp
adc
hlt
cmp
add
jne
jo
mov
sub
cwtl
xchg
fstps
jge
pop
gs
jnp
cmp
dec
push
jl
sub
inc
ljmp
xchg
adc
and
pop
inc
aad
sub
inc
test
jae
sbbl
and
push
lock
les
dec
sub
inc
andl
inc
fxch
dec
pop
clc
xor
xorl
stc
sub
int3
mov
faddl
lret
stos
add
pop
cmp
dec
imul
jl
mov
fistl
mov
test
xlat
xchg
stos
inc
mov
dec
adc
cmpsb
leave
pop
add
cmp
mov
mov
or
js
dec
xchg
xlat
add
out
sub
shr
pop
lret
mov
test
xchg
ret
ret
or
pop
mov
mov
xchg
cs
ret
push
div
or
pop
jbe
stos
push
nop
outsb
xor
addr16
fwait
test
jl
cmpsb
test
mov
stos
hlt
xchg
mov
clc
inc
scas
push
jmp
out
cs
scas
iret
mov
adc
inc
leave
push
xor
push
lahf
inc
in
mov
push
rorb
ja
aad
ss
adc
movsb
imul
rolb
sub
mov
cli
mov
jp
pop
sbb
mov
push
jp
mov
into
dec
mov
xchg
jl
cld
inc
ljmp
and
sub
push
loope
push
inc
pop
iret
out
jp
adc
mov
push
pop
mov
fs
pop
std
or
or
rol
cltd
mov
mov
mov
repnz
xchg
mov
push
lods
mov
cmc
mov
mov
sarb
cmp
pushf
js
outsb
icebp
icebp
aam
mov
mov
fistl
pop
ficomps
jmp
sub
out
loope
jns
xchg
sub
addb
add
sti
jmp
ficoms
adc
inc
inc
lret
repz
out
inc
imul
lret
test
lahf
mov
sub
lock
push
enter
pop
inc
mov
mov
mov
adc
cwtl
cmp
dec
mov
inc
pushf
das
shll
fwait
loope
mov
decb
mov
dec
add
and
inc
rorl
movsl
in
xor
aam
or
mov
pop
mov
stos
divl
clc
ja
inc
xchg
dec
lods
cmp
test
dec
iret
pop
xlat
add
aas
mov
add
in
shlb
aaa
loope
push
pushf
pop
xor
jmp
pop
leave
andb
subl
sbb
hlt
icebp
xchg
xor
xor
loopne
sub
adc
push
pop
mov
out
inc
xchg
sbb
outsl
fldcw
aaa
adc
cmp
mov
add
popf
jo
sbb
mov
mov
fidivl
loop
dec
push
jb
xor
ljmp
lods
lods
or
std
pop
jns
fwait
nop
loope
test
call
pop
rcr
cmp
cmp
in
sub
inc
scas
xor
ds
mov
rolb
shlb
or
cmp
cld
mov
movsb
lcall
loope
aam
packuswb
int3
or
push
repnz
imulb
or
inc
mov
and
aaa
jge
push
arpl
pop
mov
les
cld
lahf
and
negl
repz
jns
mov
xchg
call
inc
push
mov
out
jnp
inc
push
leave
xchg
cmpsl
mov
lcall
mov
rclb
xor
or
sub
push
fldt
adc
sbb
mov
lcall
mov
mov
jo
aad
push
jne
lock
aad
sbb
insl
adc
jnp
out
das
mov
popa
dec
lret
mov
inc
fbstp
pop
adc
subl
mov
jmp
insb
mov
stos
sbb
shr
adc
xchg
jnp
or
orl
lcall
or
add
mov
lds
xchg
mov
pop
or
mov
jae
xchg
xchg
mulb
jg
add
mov
roll
jmp
or
pop
icebp
and
push
mov
data16
outsl
scas
pusha
xlat
and
insb
lret
pop
xchg
rolb
fildll
sub
xchg
test
mov
mov
mov
popa
std
addr16
fs
test
fidivrl
jp
mov
rorl
inc
std
xor
repz
dec
aaa
mov
hlt
or
outsl
xor
scas
pop
jae
outsb
nop
fadds
out
push
rcr
dec
out
call
imul
mov
jg
lret
dec
jnp
repnz
sbb
stos
xchg
sub
fsts
jmp
pop
jmp
add
in
fbstp
xor
pop
adcl
adc
mov
add
rcr
jecxz
jmp
pushf
pop
scas
mov
cwtl
pop
sbb
inc
jo
jno
cmp
sub
xor
inc
sub
xor
scas
pop
mov
je
call
ss
outsl
ss
je
stos
loop
jae
loope
pushf
sub
addr16
sarl
out
mov
cmpsb
ror
stos
push
lock
cmp
stc
jae
adc
adc
insl
inc
push
aaa
fwait
leave
lret
push
leave
pop
lods
xor
dec
or
xchg
lods
sub
push
pop
cs
add
pusha
or
mov
jns
mov
mov
sti
xor
push
push
add
rclb
and
mov
in
shlb
lahf
aam
cmp
movsl
mov
add
ret
out
and
dec
flds
sub
inc
push
xchg
repz
sbb
dec
sbb
fiaddl
mov
into
stc
mov
insl
imul
add
ret
int3
adc
xor
ljmp
pusha
jmp
cmp
lods
push
add
push
xor
lcall
lds
push
inc
bound
dec
js
adc
sub
call
in
stos
inc
and
insl
dec
dec
jns
aas
fdivs
scas
scas
and
jne
xlat
ljmp
int
or
jp
mov
mov
jbe
jne
pop
xlat
sti
push
pop
dec
sbb
imul
jno
movsb
push
andb
pop
std
dec
mov
in
xchg
pop
adc
enter
popa
jb,pn
movsb
dec
into
jp
into
sar
movsb
scas
cltd
cmp
mov
adc
aas
adc
test
out
sbbl
sbb
popa
sub
cld
pop
repnz
imul
popf
mov
lock
cmc
push
in
pop
jg
rcrb
or
push
int
inc
inc
sub
inc
rorb
push
xchg
jb
fistpll
repz
in
in
sbb
jns
jne
leave
xor
cmp
rcl
mov
fwait
loopne
lods
push
mov
adc
ja
mov
push
leave
push
cmp
mov
mov
cmpsb
sbb
and
or
jnp
and
in
leave
daa
lock
enter
sbb
jnp
push
test
in
mov
inc
mov
hlt
cmpsb
rcll
add
push
adc
sbb
jbe
push
js
cli
sub
stos
lds
lock
dec
mov
mov
loope
fistpll
mov
imul
xor
popf
mov
test
and
add
lret
leave
hlt
mov
in
push
ret
aas
cltd
add
cmp
sub
jo
test
inc
pop
pop
mov
sub
xorb
cmp
push
rcll
ret
jl
pop
lods
lea
pop
test
call
cld
jmp
jb
xor
pop
pop
adc
divl
sub
sti
fimull
jb
xchg
and
jnp
inc
or
jecxz
addr16
cmp
jnp
loopne
xchg
xchg
push
adc
mov
dec
movsl
lret
jnp
push
mov
or
in
scas
fdiv
cld
mov
aam
scas
imul
cmp
enter
mov
repz
out
std
ljmp
test
stos
sbb
and
aas
mov
or
icebp
xchg
and
sub
sbb
or
add
jp
mov
xchg
push
out
xor
sarb
rcll
mov
sbb
jg
fstps
pop
push
inc
fwait
cmp
jge
push
fs
cmp
inc
dec
hlt
fisubl
xchg
lods
cmp
sahf
cmpsl
into
movsl
rolb
adc
or
sub
rcrl
sbb
push
mov
lds
je
pop
ljmp
in
decl
dec
jl
roll
pop
popa
fimull
movl
cmc
adc
sbb
xor
bound
mov
lock
pop
xchg
jns
filds
ficomps
les
jne
jmp
test
push
pushl
movsl
aaa
mov
or
dec
insl
dec
in
push
sub
std
out
stc
mov
add
push
pop
orb
out
cs
divb
fstp
sbb
loop
cld
icebp
push
mov
movsb
es
mov
fwait
lods
adc
lods
dec
push
aad
push
hlt
dec
cmc
aas
push
mov
xchg
dec
insb
and
aam
or
jno
mov
add
scas
out
aam
jno
fnstenv
xchg
in
popa
pop
mov
aam
cmp
aad
mov
lcall
cli
setno
add
aaa
cmp
mov
xlat
js
ja
pop
dec
mov
fidivl
jecxz
lds
int3
incl
imul
inc
enter
sbb
cmpsb
mov
mov
ret
pusha
adc
xchg
adc
push
sub
gs
ja
dec
xchg
push
sub
scas
adc
xchg
imull
ret
hlt
push
mov
pop
inc
adc
mov
js
pop
outsb
movsb
mov
je
jge
lea
ret
dec
insb
dec
inc
je
int
push
mov
rcrb
jb
cmpsb
add
jmp
push
xchg
lahf
jnp
out
and
ds
inc
movsb
out
xchg
or
fwait
fwait
push
cwtl
dec
mov
push
mulb
in
dec
cmpb
push
out
paddsw
in
into
or
xchg
ret
ret
sub
cmp
mov
push
ds
sbb
sbb
ss
cmp
sbb
push
std
lods
pop
ss
repz
sahf
pop
and
out
nop
lcall
int
add
xchg
push
jne
int3
subb
scas
ja
cli
push
rcll
jb
js
push
stc
push
inc
sbb
inc
inc
pop
sub
mov
jb
sbb
fidivrs
inc
add
lods
daa
ljmp
dec
jl
add
in
jbe
ud2
mov
shll
push
orl
inc
ja
and
pop
and
in
and
lret
cmc
sub
pop
fnstcw
insl
adc
test
clc
push
rolb
add
push
add
xor
or
jo
shl
xchg
mov
add
imul
pop
pusha
dec
rcrl
and
imul
pcmpeqw
inc
daa
hlt
insb
jno
xchg
cmp
sub
pushf
push
inc
test
xor
movsl
leave
inc
inc
sbb
ret
dec
inc
test
cmpsb
sub
subl
sub
jecxz
xorb
or
ja
fcomps
test
add
cli
inc
sbb
popf
push
pop
sub
aam
pop
cmp
in
clc
cs
mov
adc
test
mov
mov
je
pop
pop
push
lahf
movsb
jmp
icebp
and
icebp
lea
repnz
daa
dec
xchg
cmp
xor
push
pop
iret
cltd
xorl
sub
shll
or
pop
and
cmpsl
adc
or
mov
mov
pusha
and
mov
push
test
and
sarb
addb
push
sbb
mov
and
cwtl
lahf
inc
shll
add
addr16
popf
je
int3
mov
pop
mov
adc
je,pt
testb
ljmp
jnp
push
movsl
xor
push
push
inc
cltd
inc
mov
adc
add
fs
xchg
int
push
pop
inc
sub
pop
lds
or
fwait
das
and
sub
pop
jg
outsb
sub
sbbl
jo
test
jno
mov
add
mov
js
out
mov
xchg
and
mov
shll
mov
in
dec
dec
daa
pop
loopne
out
rolb
or
mov
test
scas
bnd
out
mov
scas
enter
popf
adc
je
and
cmpl
test
jge
movsb
push
aam
jl
jp
cmp
sub
pop
dec
mov
aas
push
add
lcall
jae
and
mov
addb
push
decb
pop
daa
and
push
mov
and
lret
loope
xor
sbb
sbb
cltd
repnz
outsb
popf
dec
cli
xchg
sbb
jecxz
jge
adc
xor
xchg
fdivrl
pop
lcall
jmp
and
add
pop
sbb
cli
int3
adc
xor
mov
pop
push
add
cmp
mov
dec
out
es
adc
daa
lahf
daa
stos
jb
cmp
popa
aam
in
test
ret
bswap
mov
and
cli
dec
xchg
cmpsb
mov
fidivrs
loopne
and
pop
aaa
insl
addb
mov
xor
mov
lods
mov
repnz
and
mov
fisubl
lcall
ss
inc
cmc
jae
cmp
adc
outsb
jle
sub
dec
mov
pop
fcoml
dec
inc
sbb
jge
xchg
fdivl
insb
lods
aam
rolb
sub
inc
add
mov
out
test
mov
aad
dec
std
add
or
mov
cltd
mov
mov
cmc
pop
das
xor
lcall
jb
adc
xor
sub
mov
sarb
aaa
fidivl
xor
bnd
dec
xchg
mov
lock
cs
out
or
push
xchg
and
jae
popf
inc
cmpsl
mov
dec
dec
jl
mov
test
inc
xchg
mov
cmpsl
aad
dec
cmc
sub
mov
mov
sbb
aam
dec
cmpsb
ret
mov
mov
jmp
dec
pop
imul
jle
shll
xor
inc
cmpsb
mov
mov
cltd
add
sar
ret
movsb
rcrl
jp
mov
ss
fldl
mov
jnp
leave
dec
data16
jmp
adc
flds
push
shl
sub
jg
mov
jmp
mov
cwtl
add
lds
sbb
mov
inc
push
ljmp
cli
xor
push
loope
pop
cmpl
inc
in
fwait
jg
push
int3
movsb
xor
sbb
das
insl
std
lds
jo
dec
push
mov
leave
in
insl
push
xchg
jns
call
fucomip
pop
push
pop
fmuls
pop
nop
adc
scas
xor
xchg
lea
add
dec
enter
push
ficoml
aas
mov
lret
divl
test
sbb
popf
pop
cwtl
and
jnp
lock
pop
aaa
rol
and
mov
mov
mov
inc
jl
add
rorb
pop
lret
icebp
adc
test
dec
xor
mov
cmc
fwait
jne
fcmovnbe
push
sub
test
sbb
into
jae
mov
jg
enter
or
leave
test
mov
out
pusha
jno
jge
test
fwait
cld
jl
lods
call
adc
popa
mov
ret
and
punpcklwd
leave
xor
cwtl
cli
int3
add
cmpsl
sbb
inc
add
outsb
xchg
shlb
fs
jne
jle
or
cmp
push
or
sbb
arpl
int
mov
jp
jb
dec
jne
adc
mov
and
or
jo
stos
into
xor
lock
cvtpi2ps
daa
pop
jmp
cmp
xor
shrb
mov
push
ficoms
fidivrl
sahf
add
inc
pop
mov
dec
mov
sbb
push
sbb
out
mov
mov
cmp
jmp
xor
mov
out
das
shrl
inc
ja
cwtl
daa
int3
scas
pop
sbb
lcall
ror
adcb
sbbl
sub
mov
je
sbbl
stos
das
fstpt
cmp
mov
pushf
sbb
sahf
fdivs
pop
mov
jl
out
inc
mov
push
xor
popl
mov
leave
fwait
mov
ds
lret
mov
push
mov
or
test
dec
inc
jbe
inc
loopne
add
data16
push
add
mov
adcb
ja
mov
or
daa
or
ss
lcall
inc
mov
push
fisubrl
push
rolb
adc
cmp
jle
sbb
sbb
push
hlt
in
cmpb
shll
dec
cmc
inc
pop
mov
mov
jg
mov
mov
ret
movsb
stos
stos
adc
push
jns
sbb
ja
push
stc
pop
fcmovnu
sbb
mov
and
out
aam
mov
lods
jmp
mov
or
call
pop
push
xor
dec
int3
add
inc
ficomps
call
add
je
aad
fdivs
paddb
push
cmp
mov
sbb
push
jne
jbe
fidivl
cwtl
xchg
add
loopne
xor
dec
add
sbb
das
das
sbb
jne
xchg
cmp
add
mul
or
sbb
cmp
dec
jecxz
pop
aaa
cmpsb
jb
jmp
cwtl
jmp
mov
mov
bound
push
loopne,pn
cmp
loope
into
mov
pop
or
pop
jp
and
out
nop
test
cmpsl
inc
ret
mov
and
add
gs
add
cmp
push
xor
inc
or
cmp
or
sub
add
xchg
jb
push
pop
sbb
test
ja
scas
add
push
pop
adc
das
aaa
std
add
mov
mov
pop
repnz
scas
into
sarb
in
inc
dec
or
and
pop
push
fildl
and
call
aas
mov
stos
cmp
mov
cmp
repnz
and
loope
gs
in
jbe
mov
cs
dec
es
inc
mov
jo
sub
hlt
aam
pushf
sbb
out
push
and
repnz
adcb
dec
test
inc
or
ret
cmp
add
test
cmp
cwtl
push
dec
lret
fs
cmc
jns
repz
xor
lahf
mov
add
and
xchg
ljmp
push
jl
loope
pop
lods
cmp
cmc
imul
fistps
rorb
js
cmp
xor
mov
clc
inc
mov
outsl
xor
inc
lea
push
cwtl
rol
xchg
pop
pop
mov
repz
lcall
jbe
mov
repnz
cli
jo,pt
mov
add
mov
pop
cmp
or
das
mov
mov
lods
sahf
or
pop
sarb
xor
out
imul
outsl
pop
and
sbb
xchg
pushf
pop
add
mov
fidivs
addr16
fmul
cwtl
inc
push
into
add
xchg
roll
mov
pop
lds
rcrl
or
arpl
ja
aas
mov
loop
fstl
mov
insb
ss
push
dec
xchg
xlat
cmpsl
mov
mov
mov
cmp
dec
xor
loopew
enter
popa
xchg
and
test
mov
setno
fnstsw
mov
mov
push
es
pop
push
or
aaa
nop
jecxz
int3
fsubr
push
mov
inc
cmpsl
es
inc
and
cmp
out
mov
push
test
dec
mov
stc
jmp
mov
mov
mov
add
popf
xchg
decb
test
movb
pop
hlt
loope
std
test
and
or
sbbl
dec
cld
or
out
pop
jmp
int
inc
sar
std
cmpsb
lock
sarl
or
fiadds
clc
fists
jmp
or
pusha
add
sbbb
das
dec
ds
pop
sbb
insl
or
mov
push
popf
aas
sub
adc
push
lds
shll
movsb
idivb
push
jne
adc
mov
cld
xchg
add
dec
pop
push
xor
adc
cmp
out
daa
mov
fmuls
sahf
dec
mov
sub
xchg
and
call
mov
lahf
sub
cmp
push
mov
xchg
adc
xchg
add
xor
xchg
addr16
stc
cli
jmp
and
jg
popa
inc
negb
sub
repnz
jg
hlt
pop
xor
mov
in
cmp
mov
dec
leave
inc
rcl
mov
mov
mov
shll
scas
cmpsl
and
out
jo
fs
in
cmp
mov
cmp
insb
fcom
js
adc
sti
sbb
mov
clc
lahf
data16
leave
mov
adc
jbe
aad
arpl
jnp
cmpl
or
push
ficomps
out
inc
rorl
orl
jl
lods
pop
sbb
sarb
out
das
xor
pop
cltd
scas
xlat
daa
adcl
sub
inc
shl
fmuls
jno
popf
shrb
out
movsb
jbe
cli
adc
data16
jecxz
pop
cs
fcomi
and
scas
out
sbb
push
cwtl
sbb
ljmp
clc
js
xchg
mov
lock
scas
mov
xchg
ja
mov
imul
and
push
dec
mov
and
mov
cltd
cs
es
jns
dec
fstpt
jns
aam
mov
lret
push
dec
cmp
sti
jl
packuswb
cmc
sarb
and
adc
jo
cmpsb
and
adcl
lahf
icebp
enter
mov
clc
mov
sub
inc
pop
or
hlt
mov
inc
shll
rcll
add
ljmp
out
inc
pop
les
push
pop
pusha
test
rorl
ret
repnz
cmp
dec
mov
jo
lock
mov
mov
xchg
in
xchg
pop
push
jp
call
inc
dec
lods
cltd
mov
and
lahf
jl
cmc
mov
jl
shrb
xor
add
rcll
jecxz
in
iret
dec
and
and
inc
pop
push
cmp
inc
mov
pop
movsb
push
and
pop
xchg
arpl
and
scas
xlat
dec
lcall
and
pop
sub
mov
cmpsl
xchg
cmpsl
mov
fwait
mov
jmp
in
or
push
sbb
mov
repz
cli
lods
and
aad
int
js
sahf
clc
mov
push
out
cli
dec
sbb
or
sbb
lods
mov
push
xor
fisubs
test
push
fildl
inc
pop
in
mov
xor
cmpsb
mov
jo
mov
xchg
scas
aad
fadd
mov
inc
shrb
scas
jge
push
sbb
sub
jbe
mov
mov
sar
fadd
inc
pop
mov
push
sub
out
cli
mov
sub
inc
dec
popa
mov
pop
cmp
imul
push
mov
in
push
push
pop
out
popa
dec
addr16
jo
aas
mov
mov
fadds
pop
pop
cmp
pushf
incb
in
int
cwtl
stc
repnz
in
popf
sbb
addr16
sbb
jge
push
dec
cld
pop
or
jp
ud0
jbe
movq
std
popl
xor
pushf
repz
lods
and
rclb
cwtl
lods
push
shl
jae
mov
sub
jne
dec
mov
fistpl
mov
mov
aas
mov
sarb
mov
ds
jecxz
pop
andl
stos
inc
sub
xchg
lahf
lea
movsb
subb
sbb
rorl
loop
test
push
cmpl
adc
aad
loopne
hlt
and
daa
hlt
lock
sbb
sbb
cmpl
test
imul
and
ficoml
push
fmull
sbb
mov
push
outsb
mov
scas
dec
pop
xor
imul
cli
jle
out
mov
pop
test
pop
shrl
mov
sbb
xchg
jge
jns
cmp
andb
xchg
decb
cmpb
fisttpl
pop
mov
mov
in
inc
dec
cmc
lock
adc
adc
jnp
or
xor
sub
dec
fmuls
jnp
mov
aam
cli
data16
mov
xchg
push
daa
adc
xor
xor
xchg
insl
adc
std
fstpl
push
jle
lock
lock
xchg
mov
jecxz
mov
pop
mov
jb
leave
shl
mov
lahf
repz
mov
aad
adc
xchg
push
pop
mov
push
pop
cmp
lcall
jmp
cmp
das
xchg
fidivrl
js
push
loope
xchg
lds
fisubl
sbb
repz
loope
shrb
or
leave
pop
and
mov
pop
xchg
add
incb
push
insl
std
pop
repnz
and
dec
pop
adc
cs
jmp
loope
lret
pop
sub
data16
push
sbb
inc
jno
xor
xchg
xor
push
pusha
push
inc
mov
xor
fsubs
sarb
stc
jb
inc
test
mov
mov
inc
sbb
push
hlt
mov
ss
scas
pop
mov
repnz
in
hlt
js
xchg
cli
push
cmp
pop
fimull
jl
sbb
in
jb
push
mov
pop
test
cmp
les
add
push
xor
push
xor
pop
les
leave
add
inc
add
add
xchg
xchg
imull
daa
xor
xchg
pop
jp
sub
lret
dec
xchg
rcr
int
insb
test
in
ja
inc
push
mov
or
inc
fadds
sub
stos
sbb
stos
ja
repnz
and
sub
cmp
dec
ror
clc
mov
pop
mov
jge
ljmp
xchg
mov
sbb
jae
mov
add
and
in
mov
jg
and
and
loope
adc
insb
scas
aam
push
or
sahf
addl
xor
out
sub
mov
add
sbb
push
mov
andl
push
sub
push
fsubp
mov
pushf
orb
mov
mulb
cld
xchg
xchg
jb
jp
jle,pn
jl
aas
or
pop
pop
pop
cmc
sub
lahf
je
dec
sub
test
dec
inc
out
cmp
mov
inc
loopne
sub
and
sarb
jo
fstps
out
adcb
and
mov
and
arpl
inc
dec
cld
sbb
fdivrs
shl
mov
push
sub
jp
int3
dec
ljmp
push
cmpsl
aam
pushf
fwait
shrl
mov
xor
aaa
cmp
mov
mov
not
adc
lods
add
mov
imul
mov
adc
bound
or
pop
cltd
sbb
mov
call
scas
popf
or
movsb
ds
imul
push
xchg
pop
and
sbb
or
pop
push
inc
aaa
rcrl
xor
sub
sti
mov
cmp
inc
mov
cmpsl
or
push
add
mov
icebp
jp
jae
adc
and
cmp
or
cmpsb
sub
outsl
and
mov
jbe
mov
lods
push
push
rcrl
outsb
call
cmpl
imul
mov
ret
push
mov
ds
jle
jo
lods
mov
nop
sub
cltd
fdivrl
ljmp
add
cltd
push
and
outsb
dec
add
push
pop
mov
cmp
pushf
xor
sbb
cltd
pop
in
cwtl
notb
adc
jbe
arpl
shrb
insl
imul
xchg
mov
loop
mov
test
and
dec
fs
mov
cmpsb
addr16
xor
push
jp
pop
sub
mov
in
cmp
movsl
cmp
mov
mov
out
inc
loopne
pop
cmp
test
rcrl
das
xor
ret
ret
sub
stos
jne
adc
addr16
sbb
clc
xor
in
mov
mov
jl
mov
mov
sub
or
push
or
mov
jnp
gs
dec
push
jg
mov
and
pop
fiaddl
cmpsb
cmp
push
cmp
ficompl
cltd
mov
stos
rolb
and
push
fsub
pcmpgtb
xchg
mov
xor
lock
add
std
imul
sbb
repz
push
call
xorl
jae
mov
in
das
pop
ret
inc
adc
dec
cmpsl
sbb
jmp
cmp
push
lret
mov
cmp
push
js
hlt
aas
dec
xor
hlt
inc
inc
mov
push
scas
adc
adc
repnz
clc
scas
or
pop
xor
sti
gs
cmp
sbb
mov
mov
aam
aaa
inc
cld
jns
popa
push
and
mov
pop
jb
jl
xor
cmp
aaa
mov
add
xchg
and
or
cwtl
pushf
xor
xchg
je
jp
push
cli
and
scas
sbb
fisubrs
xchg
sar
ret
inc
fucomi
push
insl
les
decl
jmp
dec
dec
mov
sub
inc
test
xchg
add
movsl
lret
out
sub
mov
dec
mov
mov
in
push
in
sbb
mov
pushf
cmpb
gs
sub
xchg
mov
gs
pop
mulb
sbb
jg
out
clc
pushf
lcall
pop
les
sbb
in
into
ja
mov
fwait
pop
dec
mov
xchg
push
add
dec
negb
ds
xor
ss
lcall
clc
out
subb
ret
rcrl
int3
xlat
and
or
mov
bound
adc
lea
iret
fucom
idivb
or
andl
aad
outsb
or
ret
xchg
dec
int3
stc
mov
jo
cli
movsb
js
imul
out
add
ret
mov
add
or
adc
and
jae
push
dec
push
pushf
adc
inc
xchg
sbb
sub
movsl
or
int
adc
lahf
adc
push
call
adc
lods
test
pop
or
clc
dec
inc
jns
add
jbe
xchg
cltd
jmp
sbb
and
repnz
jmp
and
andl
xchg
shl
jo
xor
loope
shlb
dec
xchg
pop
dec
jnp
sbbb
mov
cmpsl
sbb
xchg
mov
or
mov
jbe
or
mov
jl
push
into
or
loopne
hlt
jnp
sub
or
aad
stos
jns
xor
sbb
xchg
mov
in
push
jo
push
pop
inc
in
pop
add
mov
enter
cmpsb
jp
mov
bound
mov
pop
xorb
lea
fiadds
stos
les
scas
lock
shrl
mov
inc
lret
outsb
xor
xchg
scas
cld
in
sub
mov
jno
pop
jecxz
aam
sbb
test
sbb
lcall
xor
jmp
inc
mov
xor
push
pop
rcr
pop
in
mov
sti
add
std
jmp
shll
ficomps
cmc
test
cmpsb
xor
jl
aaa
and
push
mov
pop
mov
fidivl
ret
inc
fisttps
adc
les
mov
or
or
or
dec
call
bound
leave
adc
popf
pop
aas
es
cwtl
inc
outsl
dec
adc
shlb
xor
inc
outsb
in
jl
push
sbb
cmp
movsl
enter
lock
jmp
bound
adcl
push
cltd
adc
or
test
jo
xchg
mov
push
pop
orb
in
dec
mov
mov
repnz
pop
inc
imul
and
xor
mov
ffreep
arpl
das
and
xchg
movsb
sbb
fdiv
cmpsb
mov
pusha
push
outsb
loop
inc
frndint
imul
push
mov
cmpsb
sub
lock
cmp
lret
daa
icebp
adc
clc
orl
dec
test
xor
sbb
ljmp
dec
std
xor
push
mov
js
movsb
sub
popf
pop
jmp
adc
stc
mov
push
mov
pop
clc
andb
mov
xchg
aam
mov
and
fisttpl
mov
or
xchg
sti
lock
mov
xchg
sub
sub
add
stc
and
shr
mov
jle
iret
and
inc
fidivrl
ljmp
cmp
jbe
mov
cli
arpl
adc
inc
xor
jmp
mov
pusha
adc
fidivl
rcrb
push
cli
cld
in
push
xor
lods
pop
sub
pushf
jno
cmp
mov
push
cmp
rep
in
das
mov
mov
jl
pop
lock
insl
in
sbb
add
dec
lods
cwtl
fisttps
dec
arpl
and
int
mov
leave
pop
xchg
mov
cmp
stos
push
push
inc
arpl
mov
fwait
xor
and
movsl
jl
push
nop
fsubrs
je
adc
add
in
pop
int3
adc
mov
sahf
cld
aas
jg
mov
lahf
push
dec
and
xchg
mov
push
test
pop
push
out
mov
sahf
pop
stos
adc
imul
test
popa
and
sbb
adc
push
inc
bound
shr
jecxz
popf
es
clc
sub
shl
js
cmp
popa
cmpl
sbb
mov
and
add
icebp
and
mov
xchg
pushf
mov
adc
add
or
and
lods
pop
sbb
mov
or
sbb
push
lret
or
flds
int3
dec
mov
lret
xchg
cli
fstpt
in
fcoml
insb
mov
adcb
test
xor
dec
in
xchg
or
lods
and
lea
lock
fsubrl
fdiv
scas
xor
mov
das
push
ja
push
xor
and
adc
pop
dec
jecxz
jb
pop
xor
dec
test
xchg
cmp
dec
xchg
sahf
mov
and
pop
pop
xor
insb
popf
pushf
add
mov
xor
push
lds
inc
cmp
lcall
ljmp
jle
push
lcall
dec
subl
jne
sbb
mov
and
cmp
add
xchg
out
sub
addr16
dec
mov
repnz
fndisi(8087
mov
subl
lock
fdivr
cmp
lock
jne
mov
jg
inc
dec
rcr
mov
sbb
xor
mov
sub
and
rcrb
dec
out
fsub
mov
jno
cli
push
negl
cld
fbstp
stc
stos
xor
stos
test
bt
sbb
imul
outsl
add
xor
or
divb
push
push
popf
bnd
or
inc
popa
fisttpl
mov
enter
fbstp
imul
jmp
mov
sbb
mov
push
pop
jmp
jmp
enter
in
mov
mov
out
dec
jmp
adc
aas
jno
pop
popa
fwait
and
notl
lods
push
or
pop
into
test
icebp
sub
setg
test
pop
xchg
mov
sti
dec
inc
aas
adc
add
inc
jmp
dec
pop
jne
add
cmp
or
aad
fstpt
jns
fwait
rcr
jmp
mov
cmpsl
inc
pop
mov
inc
jle
es
inc
cmp
jns
shlb
lret
inc
xor
jge
jo
inc
mov
loopne
lods
sti
enter
xchg
jecxz
pop
cmp
lret
mov
fstpt
sbb
add
mov
movsb
xor
mov
rol
adc
and
jno
pop
jp
xchg
add
push
fwait
out
js
insb
mov
lock
or
xchg
pop
add
dec
xlat
repnz
fnstcw
push
daa
adc
add
xchg
repz
add
mov
jnp
dec
mov
mov
sti
mov
push
mov
mov
and
cmpsl
jp
int3
cmp
dec
faddl
push
loopne
push
dec
imul
or
mov
jp
enter
movsb
push
movsl
insl
push
sahf
inc
adc
inc
sub
sub
jmp
neg
fldcw
fwait
jle
sbb
dec
out
xchg
cld
aad
pop
cmp
or
jp
push
jmp
adc
repz
pop
push
nop
mov
arpl
js
lods
aaa
sub
xchg
mov
mov
cli
dec
out
push
push
pusha
pop
sahf
and
insb
mov
insb
aad
cwtl
rol
cmp
or
mov
jns
loop
fldl
fiaddl
sbb
cli
pop
xchg
cmp
insb
inc
cmc
sub
hlt
clc
out
icebp
arpl
pop
aaa
lcall
inc
xor
scas
pop
fiadds
stos
hlt
sbb
cmp
lods
xor
inc
jmp
in
jmp
adc
inc
pop
mov
jmp
stos
cs
push
xor
fcom
pop
jl
xorl
xchg
jge
adc
sub
nop
lret
rol
ljmp
lcall
jb
cmp
pop
testl
es
adc
mov
adc
popf
in
add
sub
jecxz
sbbl
pop
popa
mov
out
mov
lods
mov
cmp
sarb
psllq
sbbb
dec
test
jecxz
sbb
fiadds
in
test
shll
in
bound
cltd
arpl
testb
dec
lock
or
mov
mov
dec
add
jge
cmp
jg
cli
lea
xchg
add
cltd
pusha
sub
push
cmp
add
push
push
adc
mov
xchg
or
cmpb
jecxz
test
repnz
and
fsubrs
mov
rol
push
aas
push
sub
jcxz
push
rcrl
movb
fwait
aad
push
xchg
fisubs
dec
lea
dec
xlat
push
lods
dec
scas
mov
in
or
xchg
push
pop
sbb
in
sbb
push
jg
rclb
jns
test
xchg
rolb
out
sbb
push
and
jo
jb
add
pop
dec
mov
jbe
outsl
jnp
icebp
call
shr
inc
outsb
mov
aad
clc
jno
push
mov
dec
faddl
push
mov
lea
popf
dec
pop
jno
ss
test
push
inc
sbb
fcomip
push
cmp
cmp
sub
xor
push
fld
roll
cmpl
inc
outsl
andb
adc
mov
dec
push
jmp
dec
out
stos
rdmsr
jge
jbe
and
sbb
adc
or
and
stos
shlb
add
test
sbb
lret
cmpsb
adc
add
aam
jg
add
test
mov
mov
clc
xor
inc
repz
loopw
sahf
jecxz
dec
or
mov
out
mov
int3
imul
in
in
or
int
dec
xor
pop
xchg
out
cwtl
incb
andl
push
test
push
movsb
xchg
push
xchg
pop
popf
mov
and
push
push
dec
push
mov
cmpsl
scas
dec
imul
mov
inc
jle
mov
aaa
inc
enter
pop
aam
cli
fucomip
mov
scas
mov
addr16
aad
imul
out
lods
lock
push
lahf
outsb
mov
inc
mov
hlt
mull
test
inc
xchg
xor
inc
or
repnz
nop
and
insl
xchg
add
aaa
ret
inc
mov
loope
jl
lea
mov
jecxz
pop
push
pop
dec
shlb
mov
pop
cld
mov
push
xor
mov
add
fcmovnu
adc
push
repz
pop
xor
shll
shll
add
scas
push
pop
aas
nop
adc
sbb
pop
dec
ljmp
stc
jno
sbb
fildl
rcll
inc
out
pop
adc
mov
xchg
sti
xchg
inc
out
test
enter
shr
mov
mov
imul
movsb
mov
pop
movsl
leave
fmulp
inc
stc
dec
cmpsb
mov
mov
mov
ss
in
pop
inc
nop
jp,pn
mov
mov
mov
sbb
xchg
stos
kmovw
ret
int3
push
pop
fisttps
sbb
stos
test
push
movsb
mov
mov
ret
bound
lret
clc
jp
cmp
movb
cwtl
mov
aas
add
xor
mov
lret
cwtl
imul
movsl
or
repz
loop
mov
mov
in
outsl
lds
and
out
or
jns
xchg
in
clc
stc
adc
in
decb
jno
cmp
int
mov
sub
mov
dec
pusha
lods
cmp
jp
ja
dec
mov
xor
data16
out
hlt
out
push
jecxz
adc
adc
push
inc
adc
ja
jg
or
adc
xor
cmpsb
subl
dec
notl
mov
nop
push
rol
xchg
out
es
pop
mov
fstpl
fnstcw
lods
in
fwait
in
je
loope
outsb
dec
mov
jge
psrld
or
jns
xchg
xor
divl
ret
mov
xchg
cmp
mov
test
sbb
xchg
stos
dec
or
test
lcall
aam
pop
xor
mov
in
adc
adc
push
insb
lahf
or
jnp
call
fld
mov
loopne
add
xchg
dec
in
xchg
gs
mov
in
adc
or
push
mov
inc
or
outsb
mull
xchg
dec
jae
test
sub
pop
ja
cs
sub
cmp
sbb
jns
in
call
sbb
fs
daa
xchg
and
push
test
push
iret
pop
rcll
sub
sub
push
add
test
or
and
ja
sub
addb
pop
dec
jecxz
adc
imul
out
fldl
imul
test
inc
inc
pop
jns
mov
scas
aad
xchg
push
mov
sahf
negb
dec
inc
bound
jp
pop
das
in
arpl
ss
movsl
mov
js
sbb
cld
jmp
sbb
adc
leave
lahf
sub
dec
mov
movsl
fidivs
ds
jo
ja
rcll
adc
out
adc
test
out
adc
ds
mov
mov
push
aaa
mov
popa
mov
pop
xchg
call
outsl
cmp
mov
ljmp
testb
gs
pop
out
stc
mov
xchg
fnstenv
mov
pop
jle
fbld
adc
mov
sub
rorb
push
mov
int3
jl
dec
sub
scas
jnp
add
sbb
add
ret
int
pop
pop
in
mov
pop
enter
mov
and
es
pop
cmp
out
rorl
shlb
jg
add
lods
int3
pop
inc
hlt
clc
mov
mov
fs
mov
test
movsb
sbb
pop
fdivrs
adc
cmp
movb
cmp
fwait
add
pop
mov
loope
push
fstl
lcall
lea
and
add
adc
ljmp
mov
jecxz
insb
xchg
lcall
test
jl
test
xor
mov
adc
mov
sarl
and
sub
lahf
hlt
sub
stos
cwtl
mov
stc
divb
mov
xchg
xor
pushf
xor
in
inc
cs
or
out
cmp
inc
bound
or
mov
xchg
test
xchg
imul
lcall
and
pop
push
test
ja
xchg
pop
push
jecxz
and
shl
inc
js
daa
fs
adc
jbe
out
call
pop
dec
es
cltd
xchg
add
icebp
mov
and
pop
stc
mov
xchg
mov
pop
sbb
xchg
gs
and
cmp
cmp
cmp
adc
out
mov
lret
das
add
push
imul
pop
xor
repnz
nop
insb
lock
mov
jae
adc
adc
dec
jno
mov
lds
into
jns
mov
stc
ficoml
or
xchg
mov
pop
add
jno
sub
pop
dec
out
subl
aaa
ficomps
stos
inc
rcll
out
out
fldt
cltd
nop
or
pop
in
mov
rclb
lock
sahf
xchg
ja
test
dec
call
sub
or
inc
add
outsl
cltd
out
aam
loopne
and
pop
xchg
jp
daa
arpl
inc
ja
sbb
in
or
sub
leave
imul
xor
and
in
testb
icebp
lret
pop
or
cmp
sub
ljmp
lds
mov
sub
dec
sub
dec
sub
ljmp
sbb
sub
insl
and
push
sbb
je
pop
mov
mov
xchg
test
xchg
sbb
jg
dec
cmp
pop
and
sub
sbb
test
xchg
rcrl
cmp
mov
jp
cmpsl
mov
jbe
mov
in
jmp
push
fwait
push
dec
lcall
mov
std
hlt
addr16
xchg
in
xchg
cmpsb
inc
pop
movl
and
xor
imul
xor
and
enter
sarl
inc
or
pop
xor
js
je
xor
inc
into
subl
fisubrl
aas
insb
mov
jo
and
xchg
pop
in
mov
cmc
sub
loopne
xchg
jbe
mov
cmp
push
mov
sbb
movsl
push
pop
gs
out
sub
outsb
pop
icebp
rclb
inc
inc
inc
in
js
leave
enter
add
push
scas
mov
and
stc
or
cld
sub
jno
sub
sub
lds
mov
mov
mov
in
xchg
shl
les
shll
inc
subl
inc
ljmp
es
pop
xchg
and
sub
pop
dec
jns
into
dec
fucom
arpl
mov
mov
std
push
pop
iret
mov
or
scas
cmp
inc
fsubp
scas
out
adc
and
mov
and
es
loope
lret
mov
or
dec
sub
repnz
lock
out
xchg
out
lock
adc
clc
jae
sbb
push
fisttpl
sub
test
mov
dec
and
mov
int3
hlt
stc
mov
adc
push
test
scas
ret
add
add
fs
xor
fcoms
pop
nop
je
iret
add
ljmp
stos
or
inc
pop
lcall
cmp
test
movsl
inc
cmp
inc
xchg
fsubrs
shll
nop
ja
and
pop
enter
int
push
test
dec
cwtl
and
insb
outsl
outsl
dec
push
inc
fbld
outsl
mov
std
fdivr
mov
push
dec
daa
mov
sbb
push
lods
and
iret
aad
js
xor
stc
inc
and
clc
imul
mov
push
push
and
xor
loopne
push
imul
imul
pop
mov
es
and
nop
insl
mulb
dec
shlb
je
ds
mov
xchg
imul
out
test
push
mov
test
fwait
cli
movsb
add
mov
xlat
and
jns
ret
test
inc
ds
leave
xor
push
inc
outsb
pop
mov
int
adc
out
negl
daa
mov
dec
outsl
add
sti
adc
pop
mov
mov
jnp
push
in
adc
mov
sbbl
jnp
mov
jb
mov
push
out
lea
ffreep
mov
xor
dec
sbb
leave
pushf
lea
cmp
push
cmpl
sub
cmc
mov
dec
push
push
je
push
sbb
add
lea
and
shrl
inc
push
adc
cmpl
fstpl
or
inc
sbb
repnz
push
fcmovnu
mov
subb
faddl
push
movsl
lods
mov
das
or
inc
lock
mov
push
pop
gs
push
mov
and
inc
sub
ret
popf
xchg
and
cmpsl
cmp
mov
nop
sbb
in
loopne
xor
mov
out
cmp
js
in
push
outsl
mov
lret
sub
adc
repz
icebp
jp
ss
dec
bound
pop
add
jns
negl
sub
cmpsb
adc
sub
and
push
fldl
add
insb
push
push
leave
mov
cwtl
call
or
lock
pop
gs
addr16
mov
sbb
ss
xor
jns
dec
jns
xchg
mov
inc
and
mov
dec
fisttps
mov
dec
jb
out
in
inc
pop
and
shll
jno
scas
and
into
mov
inc
sub
add
call
out
inc
addr16
or
aam
into
mov
and
add
in
js
aaa
xchg
dec
pop
outsb
loope
mov
scas
out
xlat
mov
shrl
cli
in
xchg
lret
mov
pop
mov
mov
add
aaa
lods
mov
ret
mov
inc
cmp
xchg
mov
add
lahf
pop
negb
repnz
lcall
push
fs
sbb
popa
jl
jl
insl
pop
mov
dec
cltd
ret
and
mov
push
ljmp
add
jmp
aad
fisubrs
popa
push
rcrl
cmc
lea
dec
out
popa
jecxz
lods
int
push
inc
outsl
push
mov
pusha
call
loopne
aam
jl
mov
pop
lds
adc
adc
mov
test
xor
dec
mov
insb
outsl
cmp
cld
pop
bound
jbe
inc
push
xchg
or
repnz
pop
pop
cmp
jo
xor
add
fstpl
test
mov
in
movsl
jns
sbbl
fdivrp
xchg
in
lods
lock
les
in
xchg
aaa
repz
sahf
pusha
jo
fisttpll
push
into
sbb
inc
jnp
adc
rcll
cs
sbb
in
inc
ljmp
icebp
jl
cmp
adc
xor
icebp
adc
cs
das
pop
xchg
or
not
imul
mov
ret
jne
fld
cvttps2pi
cmp
and
fldt
orb
sub
fsts
lds
mov
push
push
hlt
sti
adc
pop
push
sub
nop
dec
in
lock
add
dec
stc
outsb
xchg
sbbb
lret
sub
cwtl
lahf
shr
insl
bound
dec
sbb
and
mov
sbb
xchg
xchg
mov
popa
out
popa
sbb
pop
shll
pusha
xor
cmp
push
dec
stos
pop
in
sbb
rcll
sub
ja
pop
sub
rorl
pop
lahf
sub
imul
je
xchg
cmp
lret
pop
jp
pop
orl
mov
sub
rcl
lahf
mov
sub
xor
inc
pushf
incb
cmp
pop
lret
mov
negl
mov
dec
sti
sbb
lods
dec
push
lods
xor
xor
popf
xchg
mov
sub
xor
gs
cwtl
cmp
scas
sbb
xor
movsb
mov
iret
ljmp
mov
jmp
out
mov
jl
aaa
inc
loopne
out
xchg
push
int
push
xchg
rclb
sbb
lea
fildll
or
call
or
scas
mov
out
es
shrl
xlat
mov
mov
mov
lods
test
lahf
into
stos
push
call
pushf
ret
dec
mov
fisttps
xchg
rcrl
jo
dec
add
inc
cwtl
mov
shrl
adc
addb
adc
dec
cli
xchg
icebp
gs
sbb
fisubl
push
popf
repnz
shl
xor
mov
mov
or
mov
sti
andb
xchg
push
std
sbb
popf
pop
bound
inc
adc
pushf
push
ljmp
aaa
xchg
cmp
jns
adc
lock
sub
decb
or
pop
sbb
fs
ret
mov
scas
inc
cli
stc
xor
popf
and
in
fsubrp
and
lret
mov
mov
fsub
sarl
push
das
sub
sub
mov
add
lods
jle
push
jle
aam
inc
sub
cmp
jb
inc
inc
inc
sarl
int3
test
test
inc
or
xchg
jb
js
rorb
into
cmc
mov
add
in
cmp
lret
xchg
add
je
ret
push
shlb
imul
push
add
addr16
xchg
jge
sbb
in
pop
cmc
or
xchg
mov
add
pop
out
out
sub
test
call
pop
rcl
sub
cmp
and
fcoml
adc
scas
mov
or
lret
sarl
jle
inc
cmc
sarb
shrb
mov
in
jge
mov
cmp
aas
jne
sbb
adc
or
ljmp
test
dec
in
jle
and
add
xor
nop
dec
rol
dec
dec
jp
push
stos
add
rcrl
std
fsubrs
pop
jns
in
pushl
roll
push
add
mov
popf
outsl
push
outsb
push
or
subb
stc
cli
dec
test
ljmp
lret
hlt
mov
jmp
fdivl
jecxz
iret
nop
adc
adc
subl
cmp
push
rcl
adc
nop
xchg
mov
mov
in
aad
in
jmp
push
or
jle
outsb
dec
out
test
out
sar
xchg
lea
movsl
mov
jno
xchg
repz
imul
mov
mov
sbb
sub
lods
icebp
push
iret
mov
cld
std
sbb
and
push
xchg
xlat
add
cli
popf
stos
xchg
sub
lods
scas
je
dec
sbb
addr16
iret
add
int
sub
movsl
lahf
outsb
or
xlat
dec
add
call
pop
jle
rol
pusha
andb
lods
ss
movsl
mov
mov
js
xlat
cltd
fidivrs
roll
outsb
and
gs
push
pusha
or
xchg
out
mov
rcrb
fwait
sti
or
sub
dec
sub
aam
xor
pop
addr16
mov
mov
das
xor
cltd
dec
push
push
aas
test
mov
cmp
lcall
shl
fnstenv
aas
or
sbb
lock
repnz
sti
add
push
push
sub
jl
adc
inc
sub
add
lea
jle
imul
mov
mov
imul
shl
rcr
idivl
fildll
lret
enter
xchg
lea
dec
mov
or
and
jo
mov
in
cmc
pop
dec
jno
das
mov
add
jle
in
lock
dec
cmp
dec
out
sbb
dec
sbb
mov
outsb
pop
dec
in
fstpt
mov
cwtl
les
dec
je
ret
bound
xchg
or
jle
jmp
and
stos
mov
inc
pop
rcl
xor
movsb
inc
xchg
xor
imul
sub
stos
aas
push
inc
scas
shrl
cld
add
add
push
sub
dec
mov
jns
dec
cmp
movsb
bound
js
imul
and
pushf
jmp
pop
pushf
push
lea
adc
sub
mov
inc
nop
pushf
cmp
or
scas
rorl
inc
mov
mov
test
fisttps
mov
jnp
test
mov
aas
pop
xchg
sbb
popf
sbbl
or
arpl
iret
dec
lcall
pop
push
call
rclb
clc
int3
gs
aaa
cmp
ret
pushf
repnz
jle
int
adc
roll
xchg
lods
add
xchg
inc
rol
loop
loope
cli
int
mov
popa
dec
jg
not
adc
xor
inc
dec
dec
ret
mov
fmuls
enter
mov
sbb
movsl
push
mov
fmuls
xor
and
repz
adc
orl
xchg
dec
mov
in
outsl
xchg
xchg
add
and
lods
jle
add
add
xchg
lahf
inc
jg
ret
lret
sbb
xor
dec
jno
mov
stc
cmp
stos
leave
cmpb
lret
dec
out
jge
out
es
dec
mov
sbb
xchg
or
shl
shlb
sbb
push
jle
cli
notl
sbb
in
sahf
mov
fidivrs
test
or
sub
pop
mov
icebp
jae
mov
pop
js
stc
pop
mov
sbb
cmp
fidivrl
cld
fcomi
pop
xchg
out
mov
popf
in
cmp
sbb
xor
popf
test
movsl
call
lcall
xorb
sti
outsl
xchg
fsubl
cld
inc
xchg
loopne
hlt
mov
xchg
mov
subb
jo
xchg
pop
mov
jmp
or
sub
clc
pop
push
nop
pop
outsl
mov
fmull
fstps
lds
mov
mov
mov
stos
out
mov
fldcw
adc
gs
add
ss
sub
fucomip
aam
sub
xchg
out
jbe
push
xor
mov
xor
ljmp
jmp
cld
dec
push
push
fcmovbe
out
fstp
stos
push
mov
push
cli
mov
les
in
jne
stc
xor
shrb
aaa
sbbl
inc
pop
out
std
call
shll
pop
movsb
cmp
mov
jnp
loop
in
cld
stc
orb
push
popf
add
shl
push
insb
cmp
jae
and
push
sahf
cli
ret
lahf
xor
rcll
mov
and
and
cmp
loop
imul
xchg
mov
std
fsubrs
pushf
lcall
jne
mov
lret
mov
push
and
pushf
sub
jnp
sbb
cld
test
push
lret
sub
cld
inc
stos
outsl
xchg
push
mov
mov
lahf
sbb
fsts
xlat
jb
pop
or
loope
in
imul
sub
cwtl
sub
add
out
push
sub
call
mov
jbe
xchg
mov
outsb
or
pop
inc
jno
xchg
iret
mov
pop
jg
sarl
stos
js
and
adc
push
scas
dec
and
lahf
mov
arpl
ret
mov
sbb
rcr
sub
ret
inc
pop
movsb
out
fisubs
loope
jge
fwait
mov
push
or
addl
fsubr
bound
mov
insl
xchg
lahf
xchg
into
aas
pop
sub
mov
ja
out
daa
bound
inc
mov
mov
pop
xor
into
dec
lds
push
xor
les
fsts
bound
lret
and
mov
enter
loope
ds
add
push
cmp
sahf
add
jns
fcomi
xchg
xor
mov
fs
call
cmpsb
sbb
add
leave
mov
enter
lcall
lock
jp
mov
mov
jo
sbb
mov
int
shrl
mov
inc
int
lret
sub
mov
pop
data16
dec
cmp
ja
mov
rol
fisttpll
lahf
cmpsb
adc
in
mov
scas
popa
mov
adc
or
iret
xchg
notl
aam
push
and
adcb
xor
gs
ds
scas
sbb
mov
mov
mov
imull
loope
enter
repnz
cmpsb
and
jecxz
ret
int3
jns
repz
int3
lods
mov
jecxz
push
js
les
and
or
leave
ljmp
pop
aad
xchg
in
push
rcrl
mov
dec
mov
or
dec
mov
sub
lret
lret
popa
arpl
sahf
js
pop
sbb
rol
mov
lea
pusha
cmp
rolb
dec
outsb
icebp
incb
fistpl
out
inc
or
stc
int3
pop
xlat
inc
push
insb
leave
sub
daa
cmp
push
cmc
iret
push
xchg
mov
and
cld
loope
movsb
stc
dec
test
pop
imul
fs
sub
mov
jp
adc
mov
mov
daa
push
stc
jnp
imul
hlt
andb
rorl
out
and
lods
fadd
shr
push
inc
pushf
pop
jbe
jno
push
push
mov
mov
mov
nop
sub
jae
or
insb
fbstp
fdiv
mov
sub
lcall
stos
mov
dec
dec
test
in
inc
mov
push
daa
ds
js
xchg
faddl
xor
jno
xchg
xor
adc
xchg
cli
jmp
inc
dec
adc
pop
pop
mov
mov
das
hlt
roll
dec
outsl
dec
gs
es
mov
mov
add
adc
bound
mov
xor
add
push
movsl
inc
jge
xchg
xor
jns
jae
and
aaa
xor
pop
mov
adc
add
jg
mov
sub
inc
fdivr
ds
stos
and
cmc
and
xorl
push
xchg
int3
in
jb
dec
jecxz
push
arpl
mov
pop
popf
and
aad
sub
push
fsubl
int
jno
pop
popf
loope
cmpsb
int
hlt
dec
xor
jo
pop
adc
jp
lcallw
xlat
aaa
mov
push
repz
adc
jae
and
cmpsb
in
add
int
sbb
pop
int
or
or
jne
cmc
or
or
popa
sub
add
cli
fmul
popa
and
mov
mov
rclb
fs
sub
sbb
fnstenv
or
test
push
scas
mov
inc
and
out
jl
orl
jle
or
pop
into
pop
cs
sbb
mov
mov
sahf
mov
and
jne
fimull
loope
mov
inc
int
in
sub
inc
sbb
test
xchg
or
pop
mov
mov
mov
dec
mov
push
in
mov
je
and
ret
sbb
and
sub
out
in
fdivrs
jl
cld
sub
sbb
mov
ss
mov
pusha
movsl
jp
pop
sbb
cmp
xchg
inc
lcall
shl
aas
dec
push
mov
pop
leave
out
adc
inc
and
jb
int3
aaa
sub
sbb
psraw
push
push
in
ja
push
aad
in
pop
mov
push
shrl
sbb
mov
pop
fsubl
push
imul
push
stos
cmpb
mov
xchg
push
sti
ds
mov
cwtl
mov
adc
testl
js
jle
movsb
mov
adc
xor
mov
stc
jno
aam
out
sbbb
jmp
leave
cmpsl
cmp
add
push
pop
mov
jb
cmp
pop
push
xchg
sahf
lods
dec
mov
stos
out
stc
xchg
daa
cmp
gs
das
sbb
test
ficoms
stos
popa
fsubrl
cmp
inc
cltd
push
pop
iret
cmpb
mov
or
mov
rol
dec
adcb
sub
push
cli
or
hlt
inc
and
cmp
sub
mov
mov
nop
cltd
sbb
pop
mov
sbb
lock
push
cmp
xor
and
cmp
and
jecxz
gs
clc
add
jnp
inc
jnp
add
pop
pop
jecxz
int
add
ljmp
mov
pop
fcmovu
adc
xor
arpl
loopne
xchg
inc
mov
adc
adc
push
jmp
cmp
notb
cmpsl
pop
jmp
cmpsb
and
mov
in
push
sbb
fsubs
jae
scas
inc
xchg
iret
test
sub
mov
outsl
in
lods
xor
insb
outsl
lea
cmc
cmpsl
int
mov
pop
jle
cwtl
xor
call
sbb
fidivrl
sahf
ja
cmp
inc
jae
popf
loop
and
scas
or
fldcw
mov
mov
adc
mov
push
inc
idivl
sbb
push
popa
int3
in
inc
mov
mov
and
out
lods
mov
pop
jg
mov
dec
xor
mul
jecxz
in
add
mov
test
push
mov
inc
fstps
fists
and
xchg
add
inc
inc
mov
push
hlt
xchg
push
es
mov
testl
cld
movsl
xchg
push
jg
push
add
jno
in
aad
pop
sub
bound
aaa
sub
push
bound
and
mov
jecxz
aaa
mov
ss
stos
orb
loopne
or
mov
mov
sub
jp
mov
cmc
fwait
repnz
das
xchg
push
lcall
or
arpl
push
inc
jge
je
push
mov
dec
xchg
dec
ljmp
jbe
pushl
inc
sub
lret
pop
jno
dec
leave
and
mov
stos
mov
fdivrs
dec
inc
adc
adc
das
fstpl
stos
push
in
lret
adc
shll
mov
mov
adc
push
pop
mov
shll
shrl
pusha
push
sbb
pop
fwait
in
lds
imul
in
jne
mov
cmp
xchg
loope
loopne
push
jmp
push
xor
inc
ljmp
rcll
movsl
in
sbb
rorl
loopne
xchg
out
imul
pop
fildl
xor
mov
neg
and
loop
insb
notb
and
mov
sub
push
or
loope
inc
ss
add
adc
cmpsb
adc
clc
dec
cmp
dec
or
lcall
scas
cmp
insl
out
and
cmpsl
or
sub
ret
fldenv
icebp
mov
xor
aad
leave
jnp
aaa
cmp
adc
add
dec
fildl
inc
jno
lahf
movsl
xchg
mov
mov
mov
nop
repnz
mov
xor
fimuls
pop
shl
mov
jb
jecxz
loopne
xchg
push
insb
cmp
mov
or
and
cmp
cld
mov
jge
dec
mov
xchg
mov
inc
lret
mov
iret
test
jnp
xlat
push
mov
sbb
xchg
pop
sbb
inc
mov
mov
fidivs
xchg
insl
jp
xchg
mov
fcmovnb
pusha
adc
jne
in
and
xchg
xlat
sbb
repz
xchg
out
mov
sarl
jne
xchg
xchg
in
dec
testb
sub
imul
test
test
push
or
mov
js
je
sbb
xor
rcr
int
aaa
cmp
xor
sahf
add
xchg
mov
in
lds
xor
test
fldt
es
jg
push
jg
cs
mov
push
pop
jns
sub
loope
pop
jp
jge
pop
jae
mov
jo
call
cld
rclb
cmp
mov
les
xchg
pop
adc
sti
xor
dec
mov
repnz
repnz
mov
adc
sbb
xchg
mov
mov
cmpsb
test
xchg
ss
fwait
adc
or
jge
fstl
jle
nop
in
test
mov
lods
jo
icebp
push
or
xor
inc
push
stos
int
add
rol
sbb
out
arpl
push
jmp
push
jle
add
cmp
jge
movsl
out
xchg
gs
sbbb
sbb
mov
lret
aaa
out
aam
divl
xor
push
dec
mov
notb
aas
idivb
stos
aad
lret
adc
divb
mov
lods
lds
adc
mov
mov
or
push
fwait
mov
fldenv
std
repnz
mov
add
jb
loop
cs
pop
rcrl
mov
in
inc
lods
or
cmpsl
inc
xchg
stos
sbb
and
sub
hlt
mov
bound
sbb
xor
sbbb
mov
dec
xchg
cs
mov
jnp
jnp
jmp
push
in
adc
loop
out
xchg
adc
aaa
push
inc
xchg
adc
mov
jno
xchg
mov
xlat
enterw
stos
fcomip
jle
pop
jbe
and
pop
fcmovu
dec
lods
sti
mov
add
addl
aad
icebp
cld
mov
inc
cmp
xchg
pop
lea
je,pt
cmp
mov
ss
in
out
insl
push
clc
std
xchg
adc
and
adc
int
dec
inc
mov
fbstp
fildll
fdivp
pop
pushf
or
shll
enter
push
mov
test
xchg
push
push
xchg
lret
mov
dec
xchg
adc
lcall
sbb
cli
lods
lock
lock
data16
dec
cmp
or
cmpl
sbb
bound
sub
lret
roll
idiv
xchg
lds
and
aad
mov
fcomps
repnz
dec
movsl
mov
jecxz
push
lahf
jae
lds
mov
jnp
stos
mov
and
cs
int
out
lds
xchg
pop
jl
push
sti
pop
outsb
ficoml
rcr
std
std
mov
jb
mov
push
add
jmp
push
jle
lret
call
xchg
cltd
push
jmp
shll
add
bound
pop
dec
fcomp
mov
jbe
hlt
stos
dec
sbb
sbbw
mov
mov
pop
push
jnp
jg
add
test
pop
fs
sbb
pop
test
xchg
sub
sbb
or
hlt
fcmove
jne
add
sub
jne
or
add
out
data16
pop
or
fcmovbe
cs
ss
sub
cwtl
mov
mov
jne
lret
mov
xor
pusha
dec
cld
inc
push
cmp
xchg
and
pop
andb
mov
out
in
les
loop
pop
test
or
cmp
fcomi
inc
dec
loopne
jnp
mov
xchg
sub
pop
sbb
fisttpl
cmp
push
sbb
ror
xchg
push
incl
mov
jecxz
cmp
lock
adc
ss
cmc
jp
cmp
dec
pushf
insl
xchg
cld
std
imul
pusha
sbb
adc
mov
mov
sbb
inc
jne
scas
shll
addb
push
mov
cmp
lahf
jae
ret
fadds
movsb
push
sub
sahf
fs
test
fwait
repz
cs
push
loopne
xchg
cltd
or
jecxz
leave
sbb
cmp
and
cmpsb
test
sub
mov
mov
es
fidivrl
xor
push
pop
mov
jno
int
je
sbb
sub
cmp
ret
mov
jecxz
mov
or
jle
sub
push
push
adc
dec
adc
mov
in
cwtl
push
out
imul
sbb
sbb
lds
and
jmp
dec
inc
inc
divl
sub
lret
ret
leave
mov
pop
adc
lret
leave
sub
in
pushf
mov
imul
jp
aad
pop
inc
inc
push
add
test
push
stos
pop
or
jb
sbb
ds
imul
insl
aas
sub
ret
sub
xor
cmc
adc
xor
test
pop
dec
lea
out
bnd
dec
jg
int
and
sbb
sub
dec
adc
out
enter
xor
cs
std
xor
mov
jo
mov
mov
movsl
insb
cld
add
push
add
cmp
xchg
sub
bound
sbb
fwait
js
das
jb
vpunpcklbw
xchg
mov
test
jae
pop
fwait
nop
add
out
cltd
mov
pop
cmpsb
xchg
add
ret
fiadds
cmp
fs
cmpsl
xor
inc
xlat
dec
mov
std
push
adc
frstor
fcmovnb
xchg
outsl
push
jge
out
xchg
iret
dec
mov
mov
out
and
xlat
push
xchg
movsb
mov
push
pop
pop
fistps
push
dec
es
pop
clc
icebp
mov
xchg
lods
insl
test
pop
xor
mov
fwait
shll
iret
popf
xchg
dec
xor
dec
shlb
add
insb
mov
jp
xor
mov
adc
pop
cld
or
jecxz
jae
mov
push
sbb
cmpsl
dec
test
stc
cltd
or
jae
outsl
jl
dec
pop
test
rclb
cli
push
repnz
rolb
gs
mov
movsb
jns
or
shll
cltd
gs
xchg
add
lds
mov
pop
mov
lds
jae
xlat
xchg
insl
mov
test
dec
or
test
inc
push
js
in
stos
leave
out
test
jle
push
pop
bt
jle
iret
fwait
xchg
add
mov
sub
pop
or
inc
add
nop
mov
int3
popf
hlt
fs
dec
jg
add
lret
jp
xor
test
xchg
inc
adc
push
xchg
mov
sub
mov
pushf
enter
or
loopne
push
imul
sahf
cmp
pop
in
xchg
push
mov
dec
es
fs
or
push
lret
repnz
mov
mov
add
ret
add
push
bound
inc
mov
or
ret
lahf
stos
popf
cmp
mov
cmp
scas
dec
jmp
dec
enter
push
arpl
outsb
insl
sub
fstpt
rcr
cmp
outsl
pusha
les
fbld
out
jmp
push
mov
test
mov
sbb
push
jae
xchg
jge
imul
in
adc
shrb
inc
pop
ss
push
and
fs
movsb
xor
push
push
iret
adc
lds
mov
repnz
cmp
push
sub
mov
mov
lods
push
push
punpckhdq
inc
pop
dec
sbb
sti
xchg
daa
push
rcrb
stc
fsubrs
mov
jp
popa
testl
xor
aaa
add
mov
lds
daa
out
fdivrs
and
enter
fistl
stos
call
cmp
xor
mov
add
and
xor
mov
scas
outsl
sbb
mov
jmp
push
jno
cmp
daa
outsl
sbb
out
nop
inc
adc
inc
or
inc
lcall
cmp
insl
push
leave
icebp
in
std
add
popa
lahf
push
in
pop
test
push
loopne
dec
das
icebp
sbb
cmp
push
dec
lds
arpl
and
faddl
inc
mov
dec
inc
xorl
addr16
cltd
sub
hlt
dec
mov
and
xchg
sbb
dec
sbb
add
inc
test
xor
popa
shrb
sub
inc
pop
insl
inc
adc
pop
fwait
jae
push
xchg
insb
cmp
sub
xor
lret
imul
dec
push
jle
sahf
mov
sbb
dec
and
inc
stos
add
sbbl
inc
loope
sbb
xlat
sahf
insl
push
jnp
or
mov
popa
popf
int3
filds
paddw
clc
sahf
add
jle
pop
call
js
ret
cs
cmp
jmp
mov
repnz
cmpsl
or
pusha
test
adc
cmp
mov
or
mov
fimull
daa
jnp
sbb
dec
xor
push
cld
in
fwait
jo
cmp
jnp
insl
and
xchg
dec
xor
adcb
or
mov
push
iret
test
sbb
insl
hlt
mov
push
lret
pusha
xchg
cmp
xor
mov
xchg
xchg
cmpsl
and
pop
add
icebp
xor
mov
filds
movsb
loopne
sbb
jl
test
xchg
inc
cmp
lds
rcrb
jmp
je
add
sub
lahf
pop
outsl
mov
lret
cmp
jmp
fildll
xchg
pop
push
jo
sbb
xchg
push
pop
fcompl
and
lahf
sbb
xchg
stos
sbb
lods
adc
jae
jle
frstor
and
test
scas
imul
stos
and
push
testb
xchg
push
bound
jne
ljmp
shl
and
int3
cmp
lahf
add
and
call
pop
insl
sub
aad
xchg
mov
or
xor
mov
and
insl
out
stos
add
pop
or
adc
or
or
sbb
test
rorl
loop
adc
xor
pop
jge
jmp
inc
cli
jae
lea
cmc
in
loope
in
mov
repnz
subb
movsl
movsb
je
jecxz
sti
loope
cmp
and
arpl
daa
xor
push
push
stos
xor
test
aad
jmp
nop
mov
mov
jge
adc
cmpsl
adc
mov
shl
pop
or
xchg
bound
mov
mov
pop
gs
pop
je
mov
dec
mov
push
sub
stos
pop
adc
pop
dec
xchg
arpl
and
test
test
fstl
adc
inc
test
pop
push
dec
lods
cmc
shl
jge
out
outsb
or
out
xor
stos
adc
mov
pop
arpl
icebp
pop
out
cmpsb
stos
add
daa
pop
mov
jne
mov
adc
fnstcw
adc
inc
xor
test
in
gs
push
scas
mov
js
decl
jnp
je
movsl
lret
jle
xor
sub
int3
cli
in
ds
fstps
jo
mov
pop
scas
jb
sbb
jmp
push
mov
hlt
icebp
movsb
xlat
mov
hlt
sahf
inc
jbe
pop
push
mov
out
sbb
stos
std
or
sub
add
stc
sarl
test
jns
add
sbb
jno
out
pop
movb
or
pusha
push
imul
sahf
loop
jnp
cld
push
mov
or
cli
xor
icebp
mov
jbe
popa
jmp
inc
sbb
pop
mov
pop
push
sbb
in
jp
cmp
test
push
lock
movsl
sbb
inc
test
mov
xor
aad
popa
cli
aam
mov
inc
or
sti
push
mov
mov
lcall
pop
nop
adc
inc
fdivl
xor
fs
jne
in
out
outsl
andl
test
mov
mov
pop
fstpl
pop
mov
xor
repz
mov
mov
xchg
xchg
hlt
push
inc
and
rol
call
jmp
call
sti
xchg
jns
testb
mov
std
fwait
not
fcompl
inc
fcoml
aad
jg
xchg
and
and
add
mov
sbb
test
movsb
xchg
scas
pop
js
shlb
and
mov
gs
mov
imul
jb
popa
xchg
lods
mov
lahf
push
ja
mov
daa
ds
je
nop
dec
pusha
call
fiaddl
cmp
sub
and
or
mov
out
lret
jne
ss
and
scas
adc
sbb
jp
stos
sub
sbb
xlat
xlat
cmc
mov
icebp
movsl
js
push
mov
lea
dec
repz
in
cmp
out
dec
es
incl
imul
in
jmp
xor
dec
shll
shlb
jl
arpl
jmp
or
mov
lods
daa
std
fsubs
xchg
adcl
xchg
sbb
xchg
mov
adc
test
inc
inc
adc
out
or
mov
dec
cmpsl
shl
jp
faddl
fisubs
adc
iret
je
dec
aad
loop
xchg
rcrb
sub
jno
nop
push
inc
mov
push
loopne
adcl
xlat
js
add
mov
stos
mov
mov
dec
stc
hlt
fcompl
add
push
std
pop
shr
push
cmc
scas
inc
addr16
repnz
and
pusha
mov
pop
int3
push
mov
cmp
mov
jno
dec
jmp
outsl
cmp
std
xor
jecxz
wrmsr
sbb
jnp
adc
ret
daa
cmpsl
dec
inc
pop
popa
nop
bound
cmp
xchg
xor
fnstsw
pop
xchg
add
inc
int3
cltd
out
test
dec
mov
sbb
and
test
dec
ret
ffree
mov
lahf
cmpsb
jge
mov
xor
or
xor
or
imul
sbb
mov
ficompl
cmpsb
aad
pop
shl
stos
add
push
insl
mov
and
or
loope
dec
jo
movsb
pop
mov
pusha
ljmp
mov
inc
aaa
sbb
je
mov
imul
movsl
lea
push
mov
inc
std
in
sub
orl
stos
insl
scas
pop
sub
adc
sarl
stos
jo
popa
and
and
dec
mov
out
dec
and
dec
fistl
popf
sub
add
or
stc
jle
add
imul
xor
xor
fidivrl
repnz
adc
adc
aam
and
test
ds
lods
sbb
mov
stos
lcall
insb
mov
inc
add
mov
out
mov
loop
adc
scas
jl
mov
fdivrs
dec
cmc
in
inc
sub
mov
jb
das
stc
mov
ficoml
int3
movsl
shll
jo
rcrl
mov
cld
sbb
push
dec
sbb
sti
jb,pn
and
int3
lret
out
pop
xor
xor
or
and
adc
inc
stos
xor
aas
shrb
or
sub
and
subl
and
push
push
ret
fcomip
sarb
sub
arpl
mov
inc
dec
insl
sbb
clc
xchg
mov
fcompl
leave
jbe
or
or
adc
rclb
insl
push
int3
dec
int
jmp
lods
sub
ret
pop
test
mov
ror
ss
sbb
add
repz
xorb
or
cld
dec
mov
inc
cli
push
add
roll
ja
xchg
xor
hlt
call
adc
inc
jno
adc
mov
js
sub
test
loop
jnp
cmp
outsb
mov
sub
scas
jb
xchg
push
shl
cmp
icebp
sub
cmp
insb
scas
sub
mov
sub
lahf
ds
aaa
movsb
in
add
cli
inc
jns
xor
mov
aam
sbb
jecxz
xor
fsubrp
sbb
dec
decl
mov
jecxz
cmc
sub
rorb
xlat
sbb
push
or
or
mov
enter
loop
sbb
dec
gs
popa
bound
mov
or
add
push
mov
push
pushf
or
insl
addb
fmuls
sub
pop
fists
jno
mov
mov
mov
rorb
jmp
rorb
je
sbb
das
push
cmp
push
jp
mov
cmp
inc
rorb
cwtl
rorb
in
je
jl
xor
sbb
test
cmp
cmp
pusha
loop
lea
or
imul
daa
or
cli
xchg
outsb
or
std
dec
xlat
dec
pusha
imul
iret
push
push
dec
ss
push
jnp
cwtl
out
aad
call
hlt
and
test
inc
pushf
xchg
leave
cli
fdivrs
popa
jbe
stc
stos
out
sbb
push
dec
cli
xor
jno
push
cmp
or
fs
mov
je
cmp
jg
jbe
ja
pop
push
xchg
lock
test
test
cmpb
test
test
aas
xor
inc
imul
xchg
insl
into
jno
daa
jge
lock
pusha
or
mov
inc
pop
nop
sbbb
adc
mov
outsb
mov
mov
bound
adc
mov
pop
push
call
or
pop
mov
xchg
jns
xor
xchg
pop
mov
cmpsb
popf
add
xor
dec
lods
aad
loopne
adc
bound
je
or
mov
dec
jo
adc
lahf
push
rolb
jbe
ror
push
inc
js
pop
jp
outsb
push
jmp
movsb
je
adc
fisubrl
sbb
cmpsl
add
dec
add
mov
cmp
es
xchg
pop
call
push
fcompl
or
mov
push
push
int
mov
and
sbb
shlb
cmp
mov
jns
loopne
mov
dec
pop
scas
xor
push
xchg
lcall
mov
or
icebp
mov
outsb
ljmp
outsl
lock
mov
pop
fwait
stos
lock
arpl
mov
inc
lahf
inc
ret
mov
lahf
mov
jo
cmp
dec
loope
movsl
movb
jo
pop
fsubs
sub
xchg
jmp
pop
cmp
mov
sarl
xor
in
mov
ss
mov
mov
aaa
add
daa
and
dec
dec
mov
dec
and
mov
test
jg
aam
loop,pn
and
pushf
imul
push
add
pop
iret
lods
fisubs
pop
dec
jno
xor
fcom
int3
pop
test
mov
push
adc
sub
add
jnp
dec
pop
mov
cmp
dec
das
ljmp
inc
push
outsb
mov
sarl
cmp
test
mov
jge
xchg
sarl
ss
sbbl
adc
push
les
cmc
sub
popa
cmp
push
xor
push
add
push
dec
div
xchg
andl
jp
sbb
jno
inc
mov
push
xchg
std
leave
dec
inc
fucompp
std
movsl
mov
lods
stos
dec
add
stc
xor
nop
insb
lds
lret
adc
xchg
sti
push
jne
xor
sub
test
call
std
adc
cmpsl
rcll
rcrb
sbb
jge
sbbb
int3
jp
xor
scas
mov
inc
int3
mov
dec
mov
loopne
out
dec
xor
mov
and
dec
or
mov
mov
ja
xor
pop
sub
lds
rclb
sbb
icebp
sub
xchg
dec
adcb
and
cmp
and
pushf
insb
lahf
lods
call
mov
xor
enter
addr16
xor
pushf
push
adcl
inc
inc
pop
push
push
pushf
push
add
iret
clc
rcrl
movsl
pop
fucom
sub
daa
adc
sbb
cltd
xor
jmp
mov
pop
ljmp
lock
fists
mov
mov
lods
jb
dec
shlb
jecxz
sub
pop
lods
pusha
andl
sbb
jp
lods
and
aam
fcoml
jle
push
adc
test
lock
add
shlb
mov
push
add
stos
stc
sbbb
shlb
shlw
add
jo
test
cltd
sub
mov
xor
pop
scas
iret
mov
add
push
mov
and
imul
jb
and
sti
mov
rcrb
mov
jb
xor
int3
ffreep
loope
dec
test
ss
test
mov
inc
enter
mov
inc
push
mov
test
cmp
adc
jg
jmp
pop
cs
dec
mov
sub
mov
adc
lock
mov
or
mov
scas
push
pushf
test
dec
scas
out
mov
push
mov
mov
mov
dec
mov
mov
ret
in
adc
xor
mov
fisttpl
mul
cs
fsubr
sbb
scas
fnsave
cmp
jnp
mov
pop
dec
mov
orb
add
or
mov
daa
push
repz
add
inc
insl
and
push
mov
fildll
xor
out
cmp
lcall
pinsrw
or
mov
leave
xor
fbld
cli
jle
sub
pop
sub
mov
dec
lcall
push
test
jmp
faddl
lcall
mov
xorl
push
popf
jl
rorl
movsb
cmp
and
fmul
mov
jnp
sbb
xchg
mov
lcall
out
or
cmp
mov
outsl
ret
fnstenv
fwait
inc
and
fstpt
push
dec
ret
fcompl
mov
in
mov
mov
mov
dec
addr16
cs
dec
add
cmp
sti
jno
and
ja
mov
lock
mov
test
sub
xor
test
and
clc
shll
nop
mov
dec
into
xor
gs
xorb
jne
and
inc
test
push
adc
cli
and
daa
sbb
mov
popa
sbb
aad
adc
jecxz
pop
mov
addr16
test
mov
pop
jnp
mov
xor
std
xchg
and
sbb
scas
roll
fisttps
push
lret
ret
or
jg
jle
lret
dec
or
inc
adc
xchg
in
adc
in
int3
cmp
xchg
lcall
or
mov
out
fnsave
test
fs
xor
dec
pop
icebp
jp
mov
adc
mov
lods
mov
sbb
add
pop
sbb
dec
aad
std
jmp
or
stos
insb
stos
push
sbbb
sub
push
into
mov
pop
gs
movsb
stos
ja
jns
cld
jmp
jo
push
in
xor
mov
sub
sub
add
mov
std
mov
inc
outsb
xchg
es
sbb
pop
and
pop
shll
enter
pop
ja
xchg
shlb
sub
lahf
es
int
pop
rol
xor
sahf
out
lods
push
xchg
fs
inc
pop
fcmovb
mov
push
mov
push
add
pop
or
sub
addr16
jae
and
scas
xor
movl
popf
mov
pusha
mov
xchg
xchg
mov
jne
cmp
mov
ds
leave
push
push
inc
lds
cmp
mov
cmp
add
mov
out
filds
jl
gs
scas
popa
les
outsb
stos
cs
xchg
outsl
rclb
repz
inc
loope
mov
cli
xor
imul
push
push
adc
insl
fiadds
aam
loopne
and
adc
shr
inc
jne,pt
inc
push
jg
repz
test
add
cwtl
push
cs
loop
jnp
jmp
push
imul
incb
pop
out
inc
and
add
mov
adc
lret
or
add
mov
mov
cltd
cwtl
add
addr16
ret
sub
les
mov
cmp
inc
sbb
js
loopne
dec
jae
lcall
fisttpl
and
push
push
sbb
popa
jb
xor
outsl
imul
clc
cmc
mov
leave
sub
mov
xorb
pushl
mov
pop
and
movsb
mov
lea
fnstcw
cs
inc
mov
stos
stos
mov
sub
cwtl
in
orl
or
mov
or
push
inc
std
sbb
or
pop
int
leave
pop
rcl
divb
cli
cwtl
and
nop
mov
rclb
jg
out
pop
gs
inc
or
sar
inc
mov
xor
sub
cmpsb
adc
inc
pop
cmp
inc
dec
mov
adc
mov
shlb
push
clc
xchg
out
into
pop
adc
push
or
dec
mov
sti
addr16
icebp
enter
jae
mov
fwait
ljmp
and
mov
in
jg
and
mov
mov
fucompp
sub
mov
pop
pushf
and
out
gs
inc
mov
stos
cs
rorl
xchg
rcr
jle
aas
popf
xor
jns
call
dec
out
imul
and
sbb
ja
aam
rclb
imul
inc
and
jns
mov
test
in
mov
xor
fwait
xchg
aaa
jns
mov
adc
in
sbb
pop
adc
rcl
sti
inc
mov
movsb
flds
jo
rcrb
adc
mov
mov
test
xor
mov
adcb
arpl
dec
add
xor
adc
test
dec
sbb
hlt
cs
jg
xor
mov
outsb
pop
inc
movsl
xor
and
mov
adc
add
mov
lret
adc
movsb
call
add
add
popf
aam
mov
sti
out
mov
adc
pusha
cwtl
into
pop
pushf
stc
cmp
icebp
movsb
cmpsl
repnz
movaps
push
push
mov
dec
stc
sbb
iret
xchg
test
roll
std
fbstp
aam
mov
int
inc
sbb
cmp
jns
aam
nop
fsts
sbb
pop
inc
jg
add
popf
aad
ja
inc
repz
stos
dec
fsub
and
gs
aam
dec
and
inc
mov
stos
aam
xchg
pop
adc
mov
sub
inc
movsl
pop
add
mov
pop
sub
nop
aam
outsl
adc
loope
pop
fsubl
ffree
aad
lahf
cmp
inc
or
pop
mov
jbe
dec
mov
movsl
dec
out
scas
lock
sub
fistpl
es
cmpl
inc
clc
jno
lock
ror
sub
popa
xor
ss
rcrb
sbb
push
or
iret
sub
dec
adcb
fmull
and
lods
out
adc
xchg
jl
adc
xor
xlat
cmp
jle
enter
sbb
int3
repnz
mov
or
cmp
xor
adc
stos
daa
imul
in
stos
das
xchg
jmp
sahf
aaa
lods
jg
sbb
and
aaa
push
pop
repnz
pushf
jecxz
xor
sub
repz
popa
ss
fcoms
inc
mov
mov
ss
paddd
sbb
pop
test
cmp
mov
ret
in
std
test
adcb
nop
test
fwait
test
lahf
or
and
rcll
test
dec
mov
pusha
push
in
orl
lret
and
ds
clc
arpl
test
jge
add
clc
sub
cmp
or
push
test
mov
lret
mov
ds
jnp
add
push
jp
jle
sub
fists
test
movzbl
leave
push
pop
dec
xchg
inc
stos
push
pop
fdivrl
lret
rcrb
addr16
jbe
push
pop
xchg
mov
ds
rolb
add
jmp
sbb
mov
sub
out
pop
jb
subb
movsb
stos
idiv
jmp
ljmp
and
shrl
mov
cmp
loopne
movsl
adc
and
mov
inc
jo
int3
int
jae
dec
push
mov
je
daa
or
lock
ja
adc
das
and
ret
push
pop
mov
icebp
shl
filds
test
pop
scas
jmp
stc
inc
shlb
push
repz
mov
fsubs
iret
int
sti
xchg
enter
push
jbe
arpl
adc
lahf
mov
fstps
lahf
sub
sahf
push
adc
or
dec
adc
xor
pusha
push
lcall
sbb
sbb
gs
es
out
insl
mov
xor
adc
fwait
movsl
movl
es
cld
inc
sbb
mov
iret
movsb
aaa
aam
aam
jle
xchg
insb
fbld
add
sbb
add
rcll
cltd
cmp
cmp
adc
std
ret
roll
or
pop
xor
jnp
push
push
es
outsb
xor
punpckhdq
ljmp
jb
push
dec
cmc
cmp
inc
sbb
xor
jnp
movsb
xlat
aaa
int
pop
jo
fcoml
dec
test
jne
mov
andl
push
out
adc
out
in
popf
mov
adc
fsubrs
push
test
imul
rolb
pop
or
xlat
hlt
popa
clc
sub
repnz
pop
dec
ss
fisubrs
push
mov
shr
cltd
dec
stos
fistpl
scas
in
pop
xchg
jecxz
pop
jg
iret
mov
add
push
aaa
sahf
jp
imul
mov
adc
pop
cwtl
push
or
mov
sub
je
mov
add
sti
mov
push
jo
ret
push
ror
xor
in
test
sbb
ds
or
out
dec
push
in
push
sub
out
cs
ja
stos
movsb
jp
push
testb
out
dec
or
xor
dec
xchg
stos
cld
jbe
dec
fidivrl
pop
clc
bound
add
leave
mov
jmp
stos
cmp
les
loopne
add
dec
incb
mov
je
push
xchg
sahf
lock
push
jb
adc
data16
fwait
sbb
xchg
rcpps
in
cmp
jmp
cli
push
das
jge
dec
mov
adc
fistpl
or
imul
add
sbb
dec
cmp
mov
rcr
lods
dec
mov
pop
lcall
mov
roll
or
xor
insl
ljmp
loope
dec
inc
jle
jb
fcoms
add
or
jecxz
andb
mov
lret
stos
xor
iret
push
cmpsb
addb
pop
or
loopne
mov
dec
add
mov
cmp
mov
fcmovnbe
adc
xchg
int3
cltd
xchg
das
adc
test
push
xchg
jmp
cmc
and
jns
jno
cmp
xor
xor
xchg
dec
sbb
mov
fnstsw
push
aad
loop
mov
inc
dec
pop
xorb
mov
stos
cmp
jb
stc
mov
insl
adc
sub
sbb
cmp
and
push
and
test
test
cmpsl
js
scas
loop
jnp
adc
fildll
loop
or
mov
mov
cmovge
in
jecxz
xchg
aad
inc
cltd
sahf
cli
stc
loop
adc
mov
pop
popf
adc
push
fisubl
xchg
adc
cltd
inc
dec
aam
adc
sub
sbb
insl
pushf
stos
aaa
out
lds
jbe
pop
jbe
call
ds
scas
stos
xlat
in
shll
mov
ljmp
imul
daa
outsl
cmp
xlat
inc
add
adc
cli
lods
dec
out
mov
repz
jl
sbb
fcomi
aaa
xchg
dec
jp
jecxz
sbb
or
popf
mov
outsl
add
fisubl
sub
lahf
repnz
data16
les
push
repz
mov
mov
cltd
shlb
divb
lods
pop
sbbl
lret
mov
lock
lahf
jg
sub
adc
lcall
lahf
xchg
adc
cmp
pop
push
stc
gs
aam
insl
mov
mov
adc
cmp
mov
subb
cltd
pop
cmpsl
push
xchg
test
ss
cmc
imul
xchg
mov
dec
sbb
adcb
or
sbbl
or
mov
mov
std
mov
rolb
js
divb
stos
push
sub
push
mov
mov
out
lret
imul
adc
jno
jl
orl
clc
ljmp
ficomps
jg
inc
adc
pushf
test
out
lret
or
cmp
or
push
sahf
jbe
cwtl
xchg
nop
cltd
jne
aam
sbb
scas
lds
out
fmul
push
inc
pop
jnp
fidivrs
jne
pop
mov
movsb
sbb
pminub
and
sbbl
cmp
sub
or
leave
jne
test
pop
and
inc
out
or
je
fstl
out
xchg
push
mov
add
xor
push
jle
inc
pop
jmp
scas
and
xor
jnp
aas
add
xchg
mov
inc
andb
cs
sub
orb
jecxz
imul
pop
dec
push
push
mov
jbe
add
faddp
out
shrb
les
gs
insl
out
mov
cs
call
lahf
mov
or
xchg
xchg
or
int
mov
inc
outsb
lahf
xor
mov
pop
adc
iret
push
fst
shll
inc
loope
cs
nop
push
scas
pop
js
pop
cmp
gs
ret
mov
and
fidivrl
out
fnsave
test
pop
or
lcall
mov
push
push
mov
pop
add
xchg
bound
jo,pn
movsb
daa
and
or
jge
ds
jnp
push
hlt
test
inc
in
fsub
lods
loop
cmpsb
mov
pop
sbb
mov
xchg
mov
in
jge
and
arpl
repz
xor
jmp
ja
push
cmpsb
inc
pop
jp
sub
shr
fstl
ja
cld
adc
xchg
push
xchg
ret
jae
ficomps
out
sbb
jb
mov
nop
adc
rcl
mov
xchg
data16
outsl
xorb
jne
icebp
jne
xchg
insl
lret
cli
ss
adc
cmp
loope
aad
test
mov
fs
das
adc
scas
into
ss
nop
mov
pop
dec
orb
or
test
popa
push
jnp
pop
lea
add
shl
lods
pop
cs
outsl
cmc
and
mov
pop
adc
add
and
ror
sbb
dec
int3
dec
outsb
dec
cltd
flds
cmpsb
and
sbb
push
das
adc
xor
insb
imul
insl
and
js
inc
shl
sbb
push
cltd
mov
int
jb
pop
push
mov
ficompl
lar
inc
inc
imul
fbld
lock
notb
or
lret
inc
mov
mov
es
fidivrs
sub
xlat
and
mov
mov
jg
int3
or
sbb
adc
jge
and
ret
fsubrs
stc
mov
pop
out
adc
mov
in
insb
cmp
dec
movsl
adc
faddl
mov
jmp
sbb
jmp
outsl
dec
daa
jge
in
sub
pop
dec
clc
add
xor
jl
adcb
sbb
or
or
lods
xchg
pop
data16
xor
sbb
sbb
dec
mov
and
xchg
icebp
mov
hlt
mov
test
mov
pushf
mov
cmp
sbb
or
movl
xor
adc
fstpt
cmpsl
aaa
mov
or
fldcw
fs
sbb
roll
and
scas
sbb
mov
lods
mov
test
cltd
jmp
out
lods
popa
lock
mov
inc
xchg
push
leave
leave
xchg
sub
test
outsl
in
push
lret
fldcw
and
pop
xchg
loopne
mov
out
or
xchg
out
inc
mov
rolb
in
imul
hlt
cmp
test
fucom
xchg
int
addr16
rolb
shrl
xchg
stc
aad
mov
cmpb
xchg
stos
iret
jns
mov
xor
lock
dec
jnp
sub
push
out
sub
pop
jl
sbb
std
cmp
add
in
cmp
and
push
dec
out
push
jns
add
leave
sub
cltd
pop
xor
xor
ds
and
cmpsb
imul
shrb
in
mov
les
cs
jl
test
rcll
jns
or
mov
sub
cmp
out
or
mov
inc
dec
movsb
fndisi(8087
push
sbb
sahf
outsb
sti
loop
sub
push
mov
fldenv
stos
adc
add
lahf
pop
js
mov
push
fs
inc
fs
je
pop
cmp
test
dec
iret
jg
into
dec
push
rorb
hlt
movsb
gs
jb
sbbl
fxch
dec
es
vmwrite
cmp
imul
rcrb
orb
arpl
lret
data16
lahf
ret
or
loopne
lret
jo
arpl
lods
jl
int3
mov
add
fsubrs
lret
mov
and
xor
sub
pop
or
out
mov
mov
push
scas
and
repz
pop
jno
lds
jg
inc
xchg
clc
jge
xchg
in
roll
enter
test
mov
imul
lahf
pop
inc
sbb
movsl
aad
and
insl
pop
push
xor
mov
xchg
push
mov
jbe
arpl
scas
or
mov
mov
ret
add
xchg
loope
jno
mov
jp
fsubrp
ret
xchg
cmpsb
jp
xchg
xchg
inc
imull
cmpb
data16
push
mov
adc
fstps
test
cmp
add
xor
dec
inc
inc
int
cmp
imul
popa
mov
xchg
mov
test
adcl
mov
lcall
imul
das
popf
push
in
xchg
pop
mov
xor
ret
lea
add
push
ds
ficomps
aad
xor
mov
stos
cmp
ds
mov
scas
ret
lea
stos
inc
mov
jl
aad
leave
push
mov
add
loope
dec
loopne
lds
pop
add
es
out
iret
cmc
test
ja
leave
mov
dec
adc
sahf
mov
cmp
sbb
pop
ja
lods
mov
add
das
inc
ficoml
cmp
inc
shl
add
cmp
jno
adc
or
mov
loop
xchg
jmp
dec
inc
jo
into
outsl
insl
lret
push
pop
adc
cmp
xor
scas
mov
mov
insl
nop
jnp
sbb
dec
icebp
pop
and
push
repz
push
testb
lea
adc
sub
popf
mov
stc
xchg
jne
xor
xchg
jae
pusha
mov
jne
push
lahf
aad
xorl
cmp
test
push
pushf
push
xor
pop
test
jle
test
mov
xor
in
push
xchg
bound
or
divl
rol
adc
pop
add
testl
ss
nop
inc
ficompl
mov
sub
clc
mov
imul
aas
into
add
jnp
js
outsb
dec
jl
mov
pop
fstl
mov
jp
into
lea
and
or
fcoms
adc
push
mov
iret
scas
int
inc
in
mov
inc
jge
fs
dec
and
mov
leave
push
dec
mov
aaa
adc
shll
mov
addb
roll
sbb
xor
xor
inc
cltd
in
lret
mov
ds
push
enter
loope
sub
std
fs
xchg
push
pop
push
enter
xchg
test
cmp
or
sahf
clc
lcall
out
lret
in
test
sarb
sbb
aad
xchg
ss
push
test
or
jnp
stc
pop
imul
test
ret
leave
jne
pop
stos
xor
cmpsb
add
lea
mov
popf
xchg
fisttpll
mov
xchg
or
scas
jo
call
jmp
push
lods
cmp
js
mov
addr16
addr16
sti
inc
in
inc
mov
les
pop
in
addr16
lods
xor
daa
int3
dec
mov
test
shll
mov
sub
inc
ljmp
sub
mov
iret
push
or
hlt
dec
ja
adc
push
nop
pop
adc
rcrb
push
fucomi
dec
rclb
sub
lods
push
and
sub
or
add
loopne
push
push
jg
es
pop
test
and
sbb
adc
xchg
addl
mov
fwait
popf
mov
sub
xchg
jno
fildll
mov
cmp
cli
mov
mov
popw
andb
lods
sbb
int
or
dec
movsl
push
lret
jp
jl
ss
movzbl
nop
adc
repnz
jmp
sbb
ljmp
stos
sbb
sub
popa
out
mov
xchg
add
outsb
pop
neg
jp
push
dec
negb
dec
jl
sbb
call
loopne
adc
inc
es
aas
out
ds
popa
lcall
out
shrl
cmc
sbb
pop
push
sahf
sub
fstpl
sub
and
xchg
jbe
std
stc
pop
stmxcsr
push
cwtl
and
cmp
push
ljmp
or
lea
cmp
pop
in
jmp
lods
fistl
hlt
jbe
cmp
sbb
mov
mov
insb
ret
scas
in
mov
mov
push
stos
and
shrl
movsb
xor
std
jo
jmp
sub
cmpsb
andl
mov
xchg
insl
iret
or
fsubl
sub
or
xor
sbb
lods
dec
xchg
mov
push
or
cmp
and
mov
dec
add
movsb
dec
mov
sub
xchg
add
cmp
ljmp
and
mov
xchg
lock
push
sti
inc
push
inc
ret
xchg
push
enter
dec
rcrl
hlt
xchg
sub
push
sub
sub
mov
fnstcw
lahf
mov
and
imul
bnd
pop
jae
not
cmpsl
inc
and
jno
push
pop
test
ret
push
pusha
cmp
out
fstps
inc
mov
pop
mov
sbb
push
sub
mov
sar
jbe
es
lods
loope
or
xchg
dec
dec
mov
movsb
scas
dec
rclb
and
push
notl
cmp
test
or
fucomip
xor
mov
call
leave
xchg
sbb
ds
jmp
add
in
jb
scas
les
push
mov
js
fs
fisubl
les
push
imul
into
insl
roll
cmp
and
mov
and
je
sbb
adc
daa
cmpsl
adc
jns
std
pop
fldl2e
mov
jmp
add
ret
fwait
dec
push
pop
sub
je
pop
fs
lcall
outsl
data16
fdivrs
fistps
addr16
mov
fs
cwtl
test
pop
xor
into
push
inc
divb
in
scas
inc
mov
loop
sub
imul
shll
das
sahf
mov
push
inc
fs
xchg
adc
mov
jmp
mov
subl
inc
addr16
push
stos
ds
mov
add
and
shrl
xchg
xor
or
insl
mov
pop
jl
scas
movsb
push
out
les
not
movsb
adc
add
mov
out
mov
and
nop
cmpsl
add
pop
xchg
testb
or
jmp
pop
in
jns
sub
fbstp
push
fistpll
mov
cli
gs
push
sub
imul
bound
inc
xchg
das
dec
jl
sub
addr16
je
pop
je
xor
and
push
jns
pushaw
fcmovne
pop
jge
add
or
icebp
inc
cmp
dec
ret
jb
cmpsb
mov
push
mov
negb
out
jp
in
int
jecxz
movsl
jg
add
rorl
mov
ja
xchg
shr
xchg
fisttpl
fidivrs
imul
jne
cmp
xor
sub
pushf
ljmp
sbb
dec
lea
clc
or
and
rcl
dec
and
cmp
enter
leave
js
out
inc
xchg
inc
shll
fwait
sub
mov
push
lahf
call
popa
pop
imul
cltd
mov
jno
mov
jbe
ljmp
jbe
fidivrs
insl
mov
pop
pop
stos
jo
aad
ret
dec
imul
push
mov
mov
and
repz
adc
iret
jae
lods
aaa
add
iret
fcmovnb
out
ret
leave
lcall
pop
xchg
sub
push
adc
mov
push
sub
pop
stos
leave
jae
aas
pusha
mov
insl
out
sti
adc
and
in
pop
push
fisubl
pop
mov
out
cmc
push
cld
cmp
push
movsb
mov
mov
fnsave
loop
pop
adc
mov
mov
test
mov
test
jge
mov
out
cmp
rorl
jb
mov
mov
inc
inc
add
insb
in
repz
outsb
scas
popf
hlt
sbb
rcrl
fnsave
out
mov
and
pop
loop
adc
sub
rcrb
shl
and
movsl
push
fldt
push
cmpsb
cs
rolb
jg
add
fisubl
jmp
outsl
pop
dec
loopne
movq
mov
fdecstp
dec
leave
rolb
pop
mov
cli
adc
sbb
dec
fnstsw
mov
call
cmp
adc
dec
dec
dec
add
stos
mov
enter
sbb
mov
aaa
stos
in
jbe
xor
add
push
icebp
pop
sub
cs
daa
cmc
test
jne
movsl
in
push
xor
adc
mulb
push
popl
sbb
dec
dec
neg
pusha
fildll
or
or
inc
test
out
adcb
ret
jns
or
in
arpl
aam
mov
lea
loop
aad
add
cmpsb
dec
xchg
int3
push
aaa
xchg
sti
leave
nop
rcll
xchg
scas
xchg
cmp
shll
pusha
sbb
cmc
dec
pop
jge
xor
xchg
in
pop
lds
xchg
outsb
clc
mov
dec
lret
cltd
mov
cmp
xchg
xacquire
inc
or
je
mov
fucomp
cmpsl
jne
ds
fcomps
add
mov
sti
inc
shlb
in
jle
mov
xor
das
inc
out
lret
push
iret
push
mov
lret
cmp
stc
addr16
or
pop
jecxz
test
arpl
pop
out
cmp
ds
inc
test
xchg
sti
xlat
sarb
scas
add
sbb
mov
push
mov
popl
fisubl
mov
ljmp
fsts
shrb
loop
sbb
rolb
lods
xchg
mov
fmuls
int3
dec
mov
dec
sbb
inc
push
std
push
in
cmp
es
out
out
dec
pop
mov
aas
or
push
iret
lret
repz
push
movsb
xchg
adcl
shl
inc
mov
adc
xor
arpl
jp
jmp
pop
ljmp
xor
shlb
clc
cwtl
push
xor
out
and
jne
lods
adc
sub
mov
dec
stos
in
mov
mov
fstps
nop
test
lds
jbe
pop
scas
xor
adc
es
in
pop
and
pop
psubsw
cld
lods
cmpsl
aas
test
mov
lahf
jmp
mov
mov
mov
xlat
shll
aas
sbb
xchg
cmpsb
jb
and
pop
jae
mov
imul
xor
stc
cli
flds
int
mov
sahf
notb
mov
movsl
daa
sti
out
cmp
inc
adc
pop
sbb
sbb
in
push
jno
adc
imul
ret
repnz
stos
js
cmpsl
xor
out
or
pop
push
and
idivb
test
jecxz
out
shll
int3
push
int3
or
divl
imul
loopne
out
jae
ja
xor
aaa
push
add
scas
jb
jnp
call
xchg
mov
lds
fwait
mull
imul
lods
fistl
xlat
pop
xchg
lahf
mov
mull
dec
pop
aam
xor
xor
and
jmp
mov
push
mov
cld
xchg
shll
outsl
ret
gs
js
enter
gs
mov
je
shll
popf
xchg
mov
fadds
out
popf
sub
sahf
imul
test
inc
dec
xchg
xchg
xlat
fucomi
shl
lahf
shrl
inc
lock
sbb
xchg
jbe
pop
xor
and
sbb
scas
sbb
les
or
xchg
out
dec
fmulp
mov
clc
jl
jg
sbbb
mov
cmp
fwait
xchg
scas
mov
rcrb
loopne
inc
pop
sub
mov
sbbl
in
fsubp
mov
lds
xchg
push
aad
cmc
dec
sub
movsl
in
sub
fsub
aas
ss
mov
andl
fwait
push
lahf
sbb
mov
std
jo
xchg
movsb
ret
test
out
jmp
aam
cli
sti
mov
fwait
mov
insb
pop
aam
gs
cli
test
adc
cs
push
pop
dec
adc
lret
push
lea
mov
std
cwtl
xor
pop
and
adc
push
dec
ja
adc
iret
inc
aad
push
shrl
xor
popa
xchg
mov
fdivr
sbb
lea
icebp
mov
ljmp
mov
inc
mov
jb
enter
pop
rcrl
and
cmp
sbb
xor
or
hlt
cmp
fidivrl
add
loopne
adc
pop
mov
sub
inc
rclb
test
leave
out
sub
aas
or
mov
rcrb
sub
or
jp
add
test
sbb
mov
xor
inc
add
jle
movsb
xchg
fldl
fs
int3
xchg
sub
pop
mov
mov
frstor
in
xchg
and
cwtl
je
jge
gs
jo
mov
mov
cs
cwtl
stc
xchg
dec
loope
insb
cli
cld
xlat
mov
vpsrld
in
nop
pop
sbb
pusha
adc
arpl
leave
out
push
sbb
or
popf
or
jl
push
xor
and
and
out
scas
leave
clc
imul
das
add
je
jg
adc
xchg
jmp
mov
mov
add
mov
loopne
mov
mov
and
and
outsl
ja
xchg
test
cmpsb
mov
popa
xlat
icebp
inc
cwtl
jnp
es
dec
movsl
xorb
dec
lods
pop
mov
jge
in
dec
push
in
push
or
mov
xor
add
mov
pop
out
pop
fdivrp
cli
or
popa
xchg
mov
and
enter
mov
mov
js
mov
fstp
cmp
insl
xor
lods
jnp
sub
cli
push
mov
hlt
aam
data16
adc
dec
stos
fildll
or
in
mov
fstpl
repz
and
setne
jp
xchg
cwtl
pop
inc
subl
push
add
out
inc
or
or
jb
or
cltd
xchg
dec
and
les
ret
rolb
iret
inc
mov
push
xor
test
data16
gs
icebp
mov
jo
pushf
add
xchg
rclb
or
pop
cwtl
push
or
and
push
pop
pop
test
pop
daa
scas
pop
test
pop
xor
out
fnstenv
ljmp
loope
cwtl
je
pop
jmp
jne
scas
sar
in
mov
or
inc
inc
xchg
cli
fcoml
mov
scas
cmp
sbb
sbb
or
sub
mov
sbb
mull
jl
adc
add
pop
mov
xorb
inc
push
xchg
xor
insl
dec
mov
jmp
pop
sbb
aas
daa
arpl
popa
and
rcrl
aaa
sbb
pop
or
mov
mov
mov
xor
jmp
push
pop
bound
inc
sbb
mov
pop
std
je
xor
xchg
cmp
jmp
in
xor
fs
mov
push
dec
mov
imul
jnp
xchg
test
push
insl
sbb
popa
jnp
sahf
inc
inc
test
mov
in
movsl
mov
hlt
sub
scas
and
cmp
ret
xchg
int3
clc
imul
and
xchg
push
rcrb
enter
sbb
cmpsb
mov
loop
test
mov
mov
enter
enter
mov
jno
xor
test
sbb
xor
jle
mov
imul
lods
xchg
or
fsubrl
jle
incb
mov
ficoms
test
push
leave
cmpb
jecxz
subb
test
inc
enter
dec
hlt
out
xlat
ret
mov
lret
adc
addl
les
enter
and
ja
pop
in
xor
jnp
sarl
pop
cmp
inc
push
call
mov
and
add
addl
outsl
cmp
arpl
loope
es
je
inc
jp
xchg
and
cmpsl
fbld
dec
cmp
lods
xor
mov
test
and
repnz
xchg
imul
push
pop
hlt
xor
or
dec
shrb
inc
addl
push
cli
std
lcall
mov
and
mov
lahf
adc
xchg
rcr
aad
pop
loop
ret
es
xchg
shlb
sub
cld
roll
les
cmpsl
or
mov
movsl
jmp
push
pop
xchg
sub
push
jbe
lock
jl
adc
xchg
pusha
ret
lret
das
pop
xchg
lret
test
lcall
lcall
jne
dec
xor
int3
xchg
adc
sbb
jo
push
lods
lods
sbb
adc
fiaddl
and
daa
pop
xchg
inc
xchg
loopne
jge
fxch
cltd
mov
jo
lret
xchg
mov
pop
mov
push
test
cmpsb
out
mov
mov
xor
frstor
ljmp
xchg
ret
xor
arpl
cmpsl
and
xchg
les
enter
mov
cwtl
jbe
xchg
adc
cld
xchg
push
ds
movsl
stc
iret
xchg
pop
shrl
sbb
iret
imul
jo
test
mov
mov
and
pushf
outsl
sbb
scas
roll
cmp
pop
stos
push
inc
push
movsb
ljmp
sti
mov
in
xor
cmpl
dec
jns
adc
pop
jns
mov
mov
inc
sub
pushf
adc
sti
inc
xor
jmp
daa
test
stos
testb
leave
sbb
int
cmp
jnp
in
push
loopne
fistpll
repz
jecxz
or
jecxz
sub
adcl
inc
or
cmp
sahf
sbb
cmpsl
mov
pop
out
mov
divb
lods
test
xor
cltd
add
insl
call
fildl
insl
fs
mov
outsb
aas
dec
aas
mov
xor
fstpt
imul
ljmp
sub
lret
cli
in
xchg
xchg
int3
in
je
fldl
outsb
push
sub
pushf
mov
and
mov
mov
cmc
pop
movsb
sub
shll
testb
arpl
inc
in
pop
orl
mov
ret
sub
test
mov
iret
sbb
idivl
mov
dec
jp
stc
xorb
lods
pop
lahf
fildll
in
inc
in
addb
cmp
mov
push
push
xchg
mov
jle
mov
push
mov
adc
cmp
outsb
sbb
lretw
inc
inc
out
xchg
jo
lahf
pop
fdivrp
add
subb
push
xchg
inc
jbe
jp
and
sbb
pop
lods
xor
cmp
insl
or
sbb
cmp
mov
sbbb
ret
sbb
fs
test
mov
lea
inc
dec
fistpl
ss
out
and
mov
fwait
mov
arpl
das
movsl
loope
daa
jecxz
fists
dec
add
cmpsb
jmp
outsl
jmp
incl
mov
lcall
sbb
push
sar
pop
or
or
mov
outsb
or
in
xchg
int
mov
fnsave
frstor
icebp
xor
aad
out
jb
xchg
jge
pop
out
fcmovbe
mov
lahf
cmpsb
arpl
in
inc
and
xchg
out
je
imul
push
hlt
mov
loop
adc
sub
sbb
lcall
inc
fs
rcl
das
call
mov
cli
mov
rcr
and
or
and
xchg
pop
jge
mov
lods
bound
mov
dec
cmp
inc
sbb
push
xor
fdivp
dec
adc
mov
cmp
lods
lahf
fcompl
inc
or
pop
or
lret
push
mov
cmp
lret
mov
mov
fcomps
ror
cmpsl
in
mov
jg
ja
xchg
jecxz
aad
loopne
jge
inc
xor
outsb
push
and
push
mov
mov
mov
mov
mov
inc
and
xorl
mov
shll
mov
dec
mov
xchg
adc
call
cwtl
mov
daa
movsb
mov
sbb
jmp
arpl
jge
in
sub
pop
xor
push
mov
mov
adc
jmp
into
sbb
movsb
cmpsb
lcall
sbb
dec
pop
std
xchg
lret
or
rcll
adc
outsb
lcall
outsl
arpl
ljmp
movsl
pusha
stos
adc
jnp
xchg
imul
int3
sbb
inc
into
cmc
out
add
mov
xor
rcrb
aad
scas
scas
ficompl
fstpl
add
mov
out
ja
test
cmp
cmp
lods
push
jmp
scas
daa
lcall
mov
lds
cmpsb
jle
pop
adcb
leave
mov
xlat
cmp
dec
cmp
daa
xor
inc
in
insb
je
lret
lret
sbb
loop
data16
mov
in
xchg
inc
sub
push
cltd
subb
mov
adc
loope
outsl
and
push
and
inc
inc
mov
cltd
stos
test
sub
jae
jbe
mov
popa
mov
mul
cmpsb
sub
xchg
push
xchg
or
aaa
mov
pusha
xchg
cwtl
xchg
push
lods
pop
xor
dec
xor
push
ja
mov
nop
dec
mov
pop
pop
jg
pusha
jns
scas
loop
push
mov
scas
mov
sub
dec
in
outsb
lock
aas
fs
outsb
push
push
adc
mov
clc
into
lods
vmovups
cmp
addr16
inc
ljmp
or
mov
xchg
cltd
dec
push
in
scas
cmp
xchg
shlb
test
fistps
xchg
outsl
mov
call
xchg
rcl
push
mov
insb
fisttpll
cmp
gs
cli
outsl
lods
les
push
mov
pusha
mov
cmp
fnsave
push
lods
mov
sub
push
sub
nop
xchg
fimuls
loop
mov
sbb
dec
push
inc
jno
es
sub
adc
or
inc
jnp
sbb
lret
mov
pusha
jnp
cmpsb
les
pop
inc
aas
jg
scas
jmp
pop
pop
aad
cmp
push
fdivr
mov
jge
pop
fsubs
xchg
outsb
push
in
xchg
dec
loop
stos
ret
lahf
pop
iret
fs
pop
cmp
leave
leave
addb
les
scas
inc
adc
out
sahf
cmp
cmp
adc
or
xor
movsl
jg
xor
mov
dec
or
scas
je
fisttpll
pop
jno
cwtl
sub
or
dec
mov
add
adc
cltd
inc
lock
scas
jno
sub
mov
aas
imul
dec
mov
dec
pusha
and
test
mov
stos
sti
push
into
add
fwait
sarl
cmp
leave
and
adc
pop
xchg
push
mov
imull
in
xchg
sub
cwtl
jmp
ss
sbb
cmp
xchg
fldenv
jno
dec
inc
xchg
mov
rcl
repz
repz
mov
popf
in
aam
add
jge
push
mov
xor
mov
into
aaa
outsb
not
sbb
sbb
cli
dec
frstor
movsb
movsb
push
in
mov
push
ss
lods
test
dec
int3
pop
data16
pop
inc
rorl
divl
aas
adc
mov
dec
add
mov
add
aad
je
rcl
fisubrl
sub
repnz
out
sarb
loop
in
call
leave
pop
int3
xchg
sbb
ficoms
shrb
out
ret
lea
and
mov
jmp
mov
push
jl
leave
sbb
mov
mov
dec
cli
test
ficomps
aaa
add
xchg
sbb
pop
test
fisttps
jl
pushf
clc
data16
enter
sub
js
pop
and
adc
mov
cmp
ret
notl
mov
hlt
xchg
pusha
jp
jno
cmp
and
cmp
test
lret
ret
mov
fidivl
pop
shlb
jno
popa
add
movsl
stos
test
cmc
mov
movsl
jo
mov
jle
adc
rolb
popf
add
xchg
lods
js
or
xor
xchg
xchg
enter
insb
out
inc
jmp
push
negb
mov
rcrb
divl
incl
daa
rep
inc
repz
mov
or
lahf
mov
adc
pop
sbb
sahf
cmp
decb
sub
sbb
lods
jg
dec
xor
xor
aad
rcrl
rorl
mov
loopne
repnz
jl
or
inc
cmc
es
testl
incb
das
fcmovb
lret
outsb
xor
jo
xchg
push
push
xor
inc
arpl
shrb
imul
daa
subb
inc
lds
push
pop
adc
cmp
pop
inc
mov
sub
test
lock
inc
xor
push
out
sub
pushf
rolb
mov
test
mov
icebp
jge
bound
frstor
xor
adc
and
sqrtps
loopne
imul
cli
push
jmp
lret
out
pop
cmpsl
ret
push
pop
enter
test
pop
mov
sbb
push
jbe
jbe
pop
cmc
xor
dec
cli
aas
test
int3
sub
dec
popf
and
dec
in
or
push
insl
enter
push
cmp
stos
pop
decl
dec
mov
sbb
lretw
mov
cltd
fmulp
imul
add
rorl
or
xor
inc
out
xchg
and
or
jmp
or
jbe
repz
in
add
js
push
loopne
lds
push
test
das
mov
xorb
inc
xor
xchg
cmp
push
cmp
repz
jnp
adc
xchg
dec
sub
outsb
mov
fidivrs
inc
fnstsw
outsb
clc
mov
lods
fidivs
mov
xchg
xchg
pop
pop
test
cmp
dec
lret
test
mov
cs
les
add
xlat
mov
adc
inc
mov
mov
xor
fistpll
les
mov
daa
pop
cmpsl
jo
fs
out
paddsw
mov
dec
dec
sub
jecxz
mov
add
arpl
cmpsl
mov
adc
clc
mov
adc
cmpsb
mov
mov
sub
leave
or
push
arpl
sbb
sahf
repnz
stc
pop
jge
stc
in
push
jo
xchg
jl
jbe
jae
movsl
adc
repz
sti
lret
daa
or
int
sub
psubusb
ds
outsb
add
int
mov
jge
jno
shl
aad
jo
out
cmovne
inc
xor
dec
imul
jne
mov
xchg
dec
and
inc
lea
stc
xor
cld
jno
int
pop
loope
or
mov
fldpi
aaa
insl
stos
nop
mov
push
adc
pop
rorb
rcll
jae
mov
mov
pop
and
shll
adc
gs
in
cwtl
cmp
ficoml
repnz
scas
out
jne
mov
or
dec
mov
inc
push
mov
xchg
in
bound
call
cmpl
cli
repz
test
je
pop
inc
push
pop
sarb
sti
push
frstor
xchg
jne
jb
cld
pop
data16
sar
std
mov
inc
cli
inc
sbb
sbb
movmskps
xchg
xchg
cs
call
jno
dec
sbb
push
lret
in
ljmp
add
jnp
leave
inc
mov
jae
scas
outsl
notb
loopne
call
pusha
mov
adc
popa
fsts
inc
mov
sbb
mov
fildll
sub
adc
shlb
dec
add
repnz
dec
dec
std
out
test
mov
xor
arpl
push
add
out
cmp
add
scas
stos
lret
dec
inc
cltd
adcb
je
jge
dec
cmp
push
aaa
push
mov
ss
mov
lods
std
and
cmp
imul
dec
hlt
sub
cmp
jnp
jl
add
cmp
push
xor
xor
mov
loop
std
mov
call
adc
inc
ss
xchg
cmpsl
and
out
mov
pop
sub
call
es
adc
push
enter
loope
hlt
xor
or
lret
cmp
add
outsl
cmp
mov
aaa
mov
cmp
insl
pop
add
rorb
aaa
push
gs
aas
shrl
incl
fiaddl
js
pop
xchg
cmpsb
bound
jecxz
adc
mov
lods
cwtl
lcall
sub
pushf
push
cmp
push
push
into
lret
addr16
lret
cmp
sbb
xchg
jle
orl
push
int3
inc
imul
cmpsl
xor
outsb
fdiv
fisttpll
fisubl
fwait
mov
dec
lock
out
dec
outsl
cmpsl
sarb
test
fcoml
cmp
push
mov
jne
mov
stos
cli
cmpsl
rcrl
scas
fsubs
push
xchg
cld
test
jp
mov
jns
add
out
xchg
xchg
inc
movsb
fbstp
lret
lahf
push
gs
dec
sub
ss
adc
enter
xlat
push
xchg
js
imul
cmp
enter
xchg
jmp
dec
dec
jg
xchg
add
pop
in
sub
cmc
scas
aaa
jmp
js
or
dec
pusha
xlat
movsb
or
mov
mov
in
shrb
dec
xchg
cs
sub
bound
cmp
shlb
or
popa
in
rorl
nop
aam
sbb
outsl
push
mov
in
mov
mov
pop
les
inc
leave
test
cli
push
jb
mov
outsl
mov
dec
jge
shlb
xchg
pop
pop
addr16
sbb
stos
dec
mov
xchg
enter
sub
jo
rcrb
mov
dec
and
lock
js
cmp
icebp
push
cmp
shrl
mov
fldcw
out
bound
shll
jmp
push
iret
ret
jnp
sbb
pop
cmp
or
mov
push
xor
orl
fidivl
xor
lea
lea
repz
mov
insb
leave
push
pop
sbb
sub
pop
adc
lcall
inc
add
cs
xchg
dec
and
sub
pusha
lock
imul
sbb
ret
jno
outsl
jecxz
xlat
fwait
loopne
test
and
pusha
fwait
rorb
loope
lds
pop
push
inc
mov
inc
fiaddl
test
pop
imul
shll
cmp
inc
jnp
jl
or
cltd
outsl
inc
add
jl
xlat
xor
jg
push
cmc
jmp
pop
push
ja
and
adc
dec
sbb
cmp
cltd
or
lcall
popa
jmp
and
push
mov
sbb
in
cmp
arpl
scas
add
adc
dec
sub
push
lret
test
and
pop
add
xchg
in
stos
or
sbb
push
imul
es
mov
adc
divb
pop
sahf
push
and
pop
dec
jns
cmp
mov
pop
mov
lahf
mov
stos
sbb
xchg
jns
outsb
inc
imul
sbb
push
mov
and
xchg
dec
aam
lea
sarb
push
std
xlat
movsl
sbb
or
dec
jp
cli
in
js
shrl
add
or
xchg
dec
ljmp
fs
mov
outsb
xchg
cmc
ret
je
push
inc
mov
movsl
jmp
mov
adc
aam
das
xor
loopne
add
jo
mov
incl
lcall
ss
repnz
sub
adc
xchg
cmp
test
pop
pop
push
inc
iret
addr16
das
aaa
jbe
mov
mov
dec
jb
leave
div
sub
lcall
hlt
cmp
jne
mov
aaa
pop
fnstsw
mov
iret
add
fisubrs
sahf
lock
aaa
jp
mov
mov
dec
or
arpl
pop
mov
pusha
xchg
ror
mov
pop
mov
movsl
sub
cmpsb
ret
fstpt
std
lcall
arpl
cmp
imul
mov
lcall
fildll
es
stc
sbb
push
inc
lea
mov
xchg
mov
sti
xchg
xor
or
adc
out
lock
cmp
push
jl
mov
or
dec
mov
nop
mov
and
mov
mov
loopne
pop
push
mov
loope
push
mov
ffreep
jmp
add
xchg
repz
inc
xchg
cmp
push
jmp
popa
inc
jmp
jl
jbe
lret
jb
nop
iret
and
add
sbb
dec
pop
call
in
sbb
dec
mov
call
cmpsl
and
sub
push
mov
push
pop
ret
sbb
sub
dec
inc
stos
push
push
aas
push
stos
add
fs
dec
jns
add
jl
add
stos
jne
cmp
mov
decl
jns
mov
popa
lods
out
xchg
jnp
ficoml
mov
and
hlt
adc
cli
sub
sti
cmc
xchg
loop
insl
es
stos
pop
dec
jecxz
mov
movsl
data16
mov
mov
popf
mov
mov
add
pop
pop
iret
sbb
lcall
mov
sub
out
fdivl
dec
pop
jp
aaa
aam
rcll
mov
push
and
iret
daa
clc
inc
ret
cs
push
add
dec
mov
jl
xchg
jnp
leave
gs
lods
in
sub
es
jmp
push
movsb
pop
mov
push
pop
cmp
jle
mov
jp
dec
sbb
mov
int3
lahf
subl
jno
sub
pop
inc
ja
outsl
inc
jmp
mov
push
or
jp
pop
mov
loope
ljmp
scas
inc
or
ficoml
imul
lock
xchg
or
jecxz
inc
jecxz
ret
fbld
pop
add
mov
fldl
push
mov
mov
int3
cld
movsl
fwait
cld
lahf
jae
test
mov
mov
cmc
ljmp
les
mov
js
inc
dec
pop
sbb
xchg
cld
jecxz
imul
rclb
push
sub
ss
mov
mov
shr
in
sub
ret
js
aad
rcrl
xchg
mov
sub
mov
fistps
or
jbe
sbb
testl
aas
sbb
lods
fwait
push
xchg
cld
es
ja
xor
imulb
lock
sti
add
inc
mov
xor
jns
jbe
mov
mov
jae
adc
repnz
mov
mov
cmp
xor
stc
nop
aam
push
mov
pusha
xchg
nop
push
adc
test
xorb
xor
and
mov
imul
lea
test
leave
push
out
push
and
mov
mov
mov
aaa
sub
lea
sub
scas
in
cwtl
inc
push
aam
lcall
lea
sti
sbb
xor
xchg
mov
jb
movsb
ror
or
xchg
out
mov
test
sbb
push
into
pop
sub
pop
jno
pop
push
popa
pop
cmp
in
aas
mov
xor
cmc
lds
xor
adcb
pop
flds
or
shll
leave
psubusb
rcr
imul
xchg
push
mov
sahf
cmp
insl
cmpb
fxch
mov
mov
pop
call
aam
dec
and
iret
adc
push
push
scas
pop
push
cld
and
jle
pop
test
adc
sbb
pop
jle
cmp
dec
mov
fwait
inc
xlat
sti
jecxz
out
pop
outsl
sahf
mov
out
les
loope
std
adc
fmuls
aaa
mov
inc
or
dec
adc
pusha
mov
xorl
pushf
mov
js
movsl
outsb
mov
bnd
shl
mov
push
loope
add
rclb
push
push
and
ja
pop
xchg
xor
xchg
adc
mov
pushf
pop
and
repnz
xchg
test
jle
or
insl
push
mov
leave
xor
adc
leave
inc
xchg
popf
cli
inc
popf
jmp
inc
sub
repz
sbb
aam
cmc
cmpsl
loopne
or
sub
rcrl
ljmp
test
pop
ret
push
mov
scas
mov
mov
arpl
add
test
movsl
lret
jle
adc
insl
leave
mov
xchg
int3
pop
inc
popa
faddl
xchg
mov
mov
lcall
xchg
sbb
mov
aad
fildl
cmpl
or
clc
pop
push
sahf
punpckhwd
pop
lods
insb
adc
out
inc
jne
ljmp
imul
mov
fwait
sub
mov
or
loop
sahf
mov
jge
and
lea
mov
xchg
shll
cs
outsl
jno
sub
sbb
dec
or
enter
jmp
rclb
lret
into
addr16
pop
fcmovbe
mov
stos
sub
adc
cmp
mov
mov
xchg
dec
push
out
mull
mov
push
hlt
xchg
push
push
shlb
ljmp
loope
xor
lahf
sub
cli
or
sbb
aad
xchg
jns
jecxz
cmp
test
jno
out
stc
and
jmp
les
fstp
rolb
stc
mov
pop
cmp
sbb
aad
jge
int
ds
and
dec
jge
mov
pminsw
fdiv
pusha
test
lods
or
pushf
bound
icebp
out
sbb
les
sub
xchg
xchg
xchg
mov
cmp
jg
pop
js
out
fs
fldt
pop
gs
mov
sarb
leave
push
pop
test
mov
leave
cmpsb
mov
scas
pop
and
xchg
xchg
leave
jp
push
sub
or
dec
add
js
scas
call
push
adc
sbbb
mov
test
ret
ljmp
popf
or
push
mov
push
xor
add
cmp
ret
pop
fadds
test
loop
loopne
push
jg
out
scas
ja
dec
cmp
pxor
xchg
stos
enter
xor
dec
inc
or
xchg
fs
scas
iret
out
or
pusha
divl
out
xor
jae
lea
xchg
out
adc
pop
insb
and
cmp
jecxz
decb
push
pop
mov
call
jmp
sub
or
xchg
xchg
addr16
sbbl
xchg
mov
mov
out
pop
sbb
jb
push
mov
cli
or
and
loop
lret
adc
in
ret
imulb
xor
aaa
cwtl
loope
loop
fwait
add
dec
jle
cltd
das
mov
pop
sbb
jmp
sbb
out
dec
pusha
cmp
xchg
repnz
xchg
xchg
ret
pop
das
inc
dec
lret
loop
mov
dec
ljmp
pusha
dec
les
pop
push
orl
sub
aaa
sub
and
mov
xor
xchg
movsl
push
shll
lods
mov
test
inc
push
test
je
icebp
lea
or
adc
inc
add
das
lock
imul
dec
fstps
mov
mov
mov
mov
dec
push
jns
xor
data16
hlt
scas
pop
cltd
call
xchg
out
jbe
loop
mov
cmp
stos
enter
xchg
sub
pop
mov
sbb
xchg
clc
out
jle
mov
or
arpl
xor
dec
das
test
fsubrs
jno
xchg
dec
cmpsl
pop
arpl
loope
cmpsl
mov
popl
mov
sub
sub
mov
shl
test
lds
mov
sub
mov
and
jmp
dec
mov
adcb
stc
mov
xchg
cmc
mov
testl
in
ljmp
loopne
imul
mov
sub
sub
pop
adc
pusha
xlat
fwait
movsb
lahf
js
fucomp
imul
dec
xor
lock
push
push
jecxz
adc
jno
sahf
enter
dec
pop
push
daa
xor
sbb
adc
xor
pop
xchg
lahf
jbe
shlb
pop
sub
in
sarl
std
and
xchg
inc
pop
stc
sbb
cwtl
fbld
xchg
lods
pop
push
jb
xchg
mov
loopne
loop
xchg
ret
pop
mov
xchg
adc
pop
iret
ficoml
popa
push
ljmp
inc
lea
ficomps
mov
xchg
push
movsb
int3
test
jno
mov
or
xchg
mov
push
sub
mov
push
scas
ret
mov
fisttpl
scas
mov
mov
stc
testb
pop
push
mov
push
std
mov
movsl
xchg
mov
inc
mov
and
pop
cmp
pop
xor
cmp
insl
loopne
or
sub
pop
jmp
push
xchg
jb
call
repnz
sti
ljmp
shll
sahf
mov
sar
jecxz
or
sahf
jl
fadd
or
in
out
adc
shlb
xlat
pop
test
xor
aad
fnstsw
inc
fistpl
or
mov
icebp
notb
lea
test
xchg
inc
mov
xchg
aas
sub
leave
jg
popl
cmp
rorl
jle
sub
adcb
mov
jbe
mov
xchg
inc
inc
push
aas
pop
movsb
mov
sub
cli
lcall
xor
pop
sti
mov
dec
out
mov
inc
outsb
testb
jno
lock
and
insl
daa
lds
fisttps
push
out
pop
cs
or
in
daa
sbbb
push
push
mov
sbb
adc
movsb
adc
inc
cmp
int3
fldcw
inc
fisubs
lret
jno
shr
cmp
arpl
mov
jge
enter
lret
cwtl
fsts
dec
addr16
sub
sbb
mov
nop
stos
xchg
out
lret
or
pop
jb
sub
fnsave
fcomps
and
aaa
gs
and
lret
jae
lea
or
mov
aaa
sub
and
testl
sub
mov
push
jecxz
mov
or
repz
loopne
push
bound
and
imul
cld
cmpsl
add
ret
cmp
push
cmp
lea
jae
call
adc
inc
or
popl
flds
ss
push
sub
and
lret
je
cmpb
jnp
xor
in
xor
aas
adc
cmpsb
inc
mov
cmpsb
loopne
xorl
and
subb
mov
inc
movsl
pop
imul
out
fcmovb
sbb
mov
daa
dec
aad
std
sbb
jne
mov
or
shr
mov
arpl
cmc
and
movd
mov
jae
or
pop
jg
lods
shrb
and
mov
or
xlat
mov
mov
hlt
or
pushf
sbb
adc
lea
dec
ret
ds
sbb
jmp
dec
dec
cs
call
jne
sbb
divl
ds
pop
repnz
mov
xorl
jg
pop
popa
dec
lret
in
jns
shrd
lods
cltd
or
insb
test
outsl
insl
xchg
gs
push
bnd
pop
pop
in
sbb
loope
movsl
jne
hlt
pop
arpl
xor
dec
sbb
imul
cmp
push
lret
jp
cmp
jp
cmp
insb
adc
fsubrl
out
or
ds
mov
je
lret
cld
mov
pop
adc
mov
test
loope
xchg
cmp
mov
push
pop
jg
add
xlat
or
inc
mov
adc
adc
in
adc
pop
push
sbb
decl
mov
cwtl
sub
xor
sub
inc
push
imul
fildl
mov
repnz
inc
push
dec
ss
or
xchg
fwait
movsl
mull
cmp
je
or
loop
pushl
jg
loop
add
mov
cmc
sub
shrl
je
insb
cltd
pop
jle
flds
lret
inc
xor
or
mov
imul
add
push
cmpsb
in
inc
pop
ror
xchg
push
sbb
test
ret
insb
xor
in
push
jbe
sbb
inc
pushf
cmpl
push
call
subb
movsl
insl
addr16
fiadds
push
push
jnp
add
mov
lods
shll
pop
pusha
stos
loop
mov
pcmpgtd
lods
pop
sub
and
addr16
out
xchg
fucom
lds
jae
enter
mov
xchg
sbb
adc
mov
scas
scas
add
lods
vmovq
mov
xor
dec
insb
addl
pop
lock
cmc
jae
mov
dec
mov
rcl
cs
cld
imulb
out
xor
dec
mov
sahf
repnz
xor
adc
push
xor
and
fnstenv
or
mov
push
mov
gs
jno
std
sub
jnp
gs
pop
jno
lods
pop
loop
movsb
dec
mov
movhlps
mov
cwtl
mov
xor
xor
mov
mov
hlt
ds
test
jnp
lea
inc
mov
xchg
or
daa
cld
add
fcomps
cld
bswap
pop
ret
xchg
sbb
jmp
mov
lahf
fucom
in
cmp
mov
xchg
ljmp
loopne
adc
loopne
xchg
sbb
or
fidivs
rcll
call
leave
outsl
cmc
cmp
xchg
stc
mov
add
out
push
popf
mov
arpl
dec
pop
mov
jge
jg
jg
in
sub
ffree
pop
loopne
out
in
fnstenv
or
mov
leave
adc
jle
or
les
leave
sub
sti
rol
adc
in
cltd
push
ds
mov
cli
cmp
push
adc
pop
ds
js
mov
jns
ss
inc
xor
sbb
xlat
push
cs
inc
lahf
bound
arpl
loopne
fstpt
lahf
sbb
mov
dec
test
aaa
inc
fiaddl
pop
sub
push
insl
push
mov
xor
or
test
lock
pop
inc
test
data16
cmpsl
xchg
xor
mov
fucomi
jo
hlt
js
cmpsl
cmp
loope
mov
dec
insl
dec
pop
push
adc
movsb
arpl
rcrl
cmc
or
lret
in
adc
adc
sbb
hlt
mov
pop
mov
mov
jbe
sbb
scas
das
inc
imul
test
imul
pop
sub
sub
ja
das
packsswb
sbb
imul
andl
cmpsl
lahf
sar
and
mov
out
xchg
pop
jno
jnp
movsb
lahf
jbe
mov
jbe
pop
ljmp
push
cmc
shrb
add
push
pop
cmc
stos
mov
push
cmp
cmp
push
push
mov
mov
push
add
cmp
and
stos
mov
push
shll
pop
in
incl
add
jg
ja
pop
call
ja
aaa
jnp
inc
mov
into
ret
push
jmp
aas
mov
mov
and
gs
cld
int
push
into
fimuls
std
jno
add
mov
sbb
int
rclb
xorl
pop
popf
jp
imul
jne
and
mov
push
repz
repz
ss
and
cwtl
mov
int3
cmp
dec
in
mov
push
pop
mov
pushf
adc
jno
push
lea
add
mov
es
add
loop
ljmp
ja
jb
shrb
cmp
pushl
jae
lcall
pop
ja
mov
xor
mov
pop
pushf
shrb
xorb
scas
jo
aaa
adc
mov
and
fnstenv
cmp
addb
adc
int3
out
insl
mov
rclb
cmpsb
in
aad
fcoml
cli
lcall
in
jle
jb
imul
jmp
or
rclb
mov
mov
jo
jne
xor
or
stos
cmpsl
popf
enter
mov
jns
xchg
pop
sbb
jmp
mov
out
lock
insl
sbb
mov
cmc
sbb
sub
xchg
mov
ja
movsb
and
push
in
fadds
shrl
jp
cmp
sarb
dec
pop
cmpsb
adc
movsl
jo
add
lds
pop
sbb
sti
lret
dec
lock
xlat
sbb
mov
int3
inc
addl
outsb
outsl
ljmp
push
insl
mov
lahf
jmp
jne
daa
xchg
pop
mov
fldenv
sarl
inc
push
repz
sarl
cli
push
js
dec
clc
mov
dec
xor
fldcw
pusha
imul
mov
jg
add
shll
mov
mov
out
jno
cmc
sbb
out
add
inc
xchg
jg
cmp
cmp
jp
adc
push
int
mov
fnstenv
ret
popf
leave
andl
adc
push
push
sti
xchg
repz
pop
pop
jne
pop
cmp
ret
lret
jp
mov
pop
std
daa
stc
push
mov
roll
mov
sub
cmp
stc
pop
push
lret
mov
xchg
dec
adc
cs
push
xor
jae
or
pop
mov
inc
loope
mov
nop
fstpt
mov
xchg
or
loop
cmp
mov
int
dec
aad
pushf
push
jecxz
jbe
sub
cwtl
cmp
js
pop
sti
push
cltd
call
shlb
pushf
popf
pop
hlt
shrl
int3
frstor
aad
scas
lret
aaa
out
jge
push
sub
jp
inc
fwait
fwait
cmp
jmp
js
pushf
jb
fistl
and
push
cmp
subb
jle
cmp
dec
pushf
xor
sbb
mov
in
push
dec
sub
loop
filds
cmp
stos
lahf
pop
or
and
xchg
push
xchg
adc
mov
mov
cmp
jecxz
add
mov
sbb
psrlw
imul
std
popa
and
adc
mov
dec
sub
aad
adc
int
sub
dec
stos
xor
cmp
cltd
sbbb
jb
and
cmp
sbbl
aam
mov
lret
and
ss
icebp
mov
out
out
push
push
cmpsb
ja
push
out
jae
and
mov
mov
cmpl
xor
jns
pop
aas
add
xor
nop
xchg
dec
shr
int
das
scas
xchg
ret
rclb
and
out
out
mov
push
xchg
push
mov
mov
dec
inc
je
mov
adc
push
xor
push
iret
or
cwtl
fdivs
mulb
lea
jb
jg
movsb
push
in
shrl
fcompl
xor
adc
icebp
in
or
pop
push
dec
push
leave
fstpt
in
push
ja
movsb
adc
sahf
lcall
mov
cmp
pop
pop
cmpsl
mov
fcomps
popf
pop
xchg
mov
fnsave
into
sbbl
lock
sarb
js
into
push
mov
inc
pop
ss
int
sub
pop
in
push
cmp
push
sub
mov
push
push
inc
sub
out
jmp
adcb
jbe
clc
push
pop
into
jecxz
call
pusha
andl
sub
push
push
bound
scas
nop
mov
movsl
xchg
icebp
sbb
jle
dec
loopne
pusha
xor
adc
das
xor
dec
in
hlt
out
data16
jge
mov
cli
stos
add
mov
or
add
adc
or
movsl
dec
mov
dec
fistpl
inc
mov
clc
test
in
cwtl
inc
mov
push
fstl
ret
fiadds
test
jnp
stos
push
push
cmp
mov
xor
cs
cli
pop
fisubrl
mull
movsl
xchg
pushf
mov
cmp
sub
mov
mov
dec
jmp
jb
cmpsb
cmp
push
leave
xor
lea
mov
jno
aaa
mov
pop
push
cmp
mov
xor
and
outsl
jbe
mov
hlt
imul
lds
mov
les
xor
adc
scas
mov
shlb
push
xchg
addr16
push
sbb
sahf
mov
popf
sub
popa
jge
adc
in
xorb
and
mov
xorl
or
sbb
pop
fsub
push
mov
test
nop
push
mov
push
and
andnps
lret
mov
sub
push
mov
sub
mov
jae
adcl
sahf
sub
sbb
dec
mov
add
das
jl
je
inc
and
mov
mov
and
int
std
mov
mov
ret
out
test
hlt
jb
pop
test
fmuls
lock
and
jecxz
enter
fs
mov
mov
fadd
push
sub
xchg
outsl
or
ljmp
lea
push
jp
push
pop
lcall
in
mov
pavgb
xchg
add
add
mov
adc
dec
or
push
add
inc
lcall
out
push
cmovb
pop
loopne
lahf
push
cmp
push
cmp
sbb
das
push
or
mov
mov
shlb
loope
cmp
stos
and
pop
jg
adc
bound
xchg
gs
adc
adc
push
adc
cmp
sbb
xlat
out
push
jbe
jp
int3
adc
xor
lahf
mov
cltd
add
xchg
ds
jbe
rcll
add
add
orl
push
scas
xchg
pusha
addr16
inc
fwait
xchg
mov
push
das
cmc
sub
fsub
push
jbe
cmp
inc
xchg
insb
xor
or
xor
ss
mov
ss
xchg
push
pop
in
iret
sbb
pop
pusha
mov
mov
mov
push
pop
inc
fs
mov
inc
ljmp
xchg
adc
or
jl
daa
imul
xchg
xor
mov
lret
mov
pop
inc
imul
popf
int3
xor
icebp
sub
hlt
fucomip
xchg
adcb
sbb
fiaddl
jl
andl
fildl
shrb
pop
mov
cmp
insl
test
jmp
adc
loope
sbb
or
dec
repz
add
fisttps
ret
pushf
and
call
dec
mov
inc
in
addb
dec
push
mov
push
movb
fucomip
or
mov
mov
sub
jno
inc
fcompl
jne
clc
pop
xchg
mov
inc
adc
mov
lret
out
sub
xchg
cmpsl
add
loope
mov
push
movsb
aaa
leave
mov
addr16
and
shlb
inc
and
and
adc
adc
push
mov
add
jg
cmp
cmc
jecxz
cmpsb
shrb
xchg
jbe
sub
pushf
inc
ret
fstpt
sub
xor
arpl
inc
sbbb
int3
mov
sub
jbe
lret
in
shll
dec
mov
movsl
mov
jbe
push
pop
std
test
lods
pop
mov
adcb
push
jbe
cmc
dec
test
add
or
pusha
fimuls
jae
imul
inc
jle
push
bound
into
shlb
cmp
pop
xor
push
notb
jbe
pop
mov
mov
rol
dec
lock
lcall
jecxz
outsb
insb
lock
jns
lcall
xchg
cmp
pmulhuw
cmp
and
js
fnsave
cwtl
icebp
push
jbe
das
add
cmp
xchg
jmp
inc
rorb
movsb
cld
lret
fwait
dec
sub
rcrb
out
mov
cmp
bound
jnp
lods
lods
fst
push
inc
std
cmp
pop
fidivl
mov
fisttpl
mov
cmp
outsb
mov
and
ret
cld
lret
push
pop
push
std
hlt
mov
mov
cmp
outsl
addr16
stos
jb
jmp
das
lret
fistpll
pop
cmpsl
inc
imul
fidivl
jecxz
mov
mov
or
outsb
push
inc
mov
or
insb
incl
popa
int
rcll
shrl
sub
cmp
ljmp
inc
jns,pn
ljmp
pop
jmp
cmc
pusha
pop
lcall
adc
pushf
popf
push
inc
rolb
adc
imul
insl
push
bound
mov
jno
pusha
fbld
cld
pop
xchg
xchg
repz
sub
shrb
jl
in
jne
fst
mov
popa
stc
imul
jae
lods
js
push
sbb
test
mov
arpl
lods
mov
popa
jl
hlt
cltd
xchg
andb
in
sub
lods
push
test
aam
cmc
es
inc
je
sbbb
sub
mov
mov
test
clc
insl
cwtl
adc
add
icebp
or
dec
in
cltd
add
jl
lock
pusha
xchg
xchg
push
mov
push
dec
outsl
mov
sbb
int
xchg
stos
arpl
iret
in
push
mov
test
aas
sbb
inc
popf
pop
aas
rolb
pop
sahf
aam
add
mov
jg
je
call
and
iret
insl
stos
add
dec
popa
sti
jne
sarl
aaa
or
out
mov
lret
pop
imul
xchg
and
lods
add
fcom
mov
dec
ss
lods
mov
ucomiss
inc
mov
lcall
imul
mov
filds
cmp
push
add
pop
mov
test
clc
dec
inc
pop
add
sbb
sbb
iret
pusha
pop
push
sub
popf
sbb
subb
ljmp
pop
out
dec
mov
fwait
dec
outsl
dec
test
xchg
das
push
mov
cmpsl
in
cli
cmpl
popf
sub
fwait
cmp
dec
xlat
test
cli
ss
scas
xchg
arpl
xorl
mov
sti
lcall
mov
ret
cmp
xor
mov
out
dec
stos
imul
lds
loop
lods
lods
leave
cmp
hlt
pop
mov
jae
adc
push
xor
out
icebp
int
mov
jmp
inc
out
rorl
pop
cmp
int
test
and
jp
sbb
dec
lea
addr16
push
lods
iret
loopne
call
cmp
dec
and
fbstp
insb
and
lods
mov
xorb
call
lock
or
test
in
push
fisubl
imul
imul
gs
push
subb
adcl
bound
movsb
sbb
xor
shlb
push
jle
mov
push
stos
lret
jge
in
or
pop
loop
rcl
mov
sub
mov
fisttps
adcl
lods
pushf
xor
jecxz
jae
iret
orb
test
cmpsb
adc
out
stos
shl
dec
and
fistpll
popa
js
imul
dec
or
pushf
xchg
xorb
cmp
inc
pop
arpl
adc
xchg
jmp
xchg
nop
mov
repnz
pop
sbb
enter
ret
mov
dec
je
roll
and
add
xor
jnp
sub
fistpll
stos
nop
jnp
mov
jbe
add
mov
rdpmc
cmp
std
mov
cltd
enter
jae
pushf
xor
push
imul
jns
loopne
mov
insl
xor
adc
or
cld
push
in
xor
and
mov
rcrl
mov
fistpl
sbb
sub
jge
test
std
fwait
rcll
push
clc
pop
stos
subb
xor
mov
push
and
inc
loope
clc
fldcw
int3
clc
jecxz
in
test
stos
ret
push
mov
mov
push
lock
lahf
loop
cmp
mov
inc
fldcw
insb
cs
sbb
sbb
addr16
fmul
clc
push
jnp
xchg
and
fcompl
test
movb
or
mov
pop
add
pushf
xor
cmp
mov
add
pop
mov
xchg
jbe
test
dec
pop
leave
pop
cmp
dec
insb
or
xor
mov
mov
cmp
mov
int
jle
cmp
outsb
or
xor
rcrl
push
aad
sub
xor
sub
pop
and
fcmovnbe
or
mov
adc
or
repnz
mov
addl
stc
orl
lret
icebp
add
fcoml
rcrl
rolb
test
cli
in
jns
stos
dec
mov
and
lahf
je
cmpsl
mov
movsl
out
sarl
push
sti
mov
mov
stos
cwtl
push
or
mov
push
pop
push
push
arpl
test
fisttps
movsb
mull
gs
mov
out
xor
push
or
aas
xor
je
out
cmpsl
mov
orl
in
push
push
xchg
pop
push
xchg
in
movsl
ret
jnp
mov
sub
rcll
fmuls
out
loopne
inc
test
pusha
mov
lahf
pusha
sbb
cli
hlt
js
jb
out
mov
xor
shl
imul
inc
je
dec
jecxz
int3
arpl
sub
push
inc
mov
inc
xchg
icebp
xchg
and
es
shrl
xor
sbb
or
flds
int3
adc
stc
xlat
jge
into
jg
enter
xchg
stos
sbb
notb
cmpb
pop
stos
jns
lret
cmp
xchg
fdivrs
xchg
es
inc
dec
cmp
xchg
aaa
stc
cmp
ljmp
dec
and
push
dec
lret
pop
xor
sar
stos
inc
icebp
lahf
xchg
inc
dec
mov
out
lret
sbb
dec
xor
repnz
int3
sbb
xchg
dec
lahf
cmp
mov
sub
sbb
push
inc
jge
mov
sub
sub
pusha
sbb
mov
sarb
push
lea
cwtl
and
mov
cmpsl
push
push
jle
adcl
mov
jle
gs
pop
mov
lock
jecxz
fwait
into
xchg
inc
or
cltd
adc
mov
cmp
lea
into
es
xchg
jno
aam
push
xchg
inc
mov
xor
into
bound
xchg
and
in
jne
js
das
mov
pop
cltd
gs
sbb
int3
ret
mov
xor
lods
repnz
ret
sbb
std
fs
dec
pop
xor
xor
loopne
sub
push
out
pop
out
fisttpl
pop
jne
lahf
xor
adc
aaa
mov
hlt
mov
imul
mov
and
or
or
mov
cli
mov
or
insb
andb
rclb
enter
and
push
inc
or
sub
roll
cli
insb
xor
and
xchg
imul
lahf
and
mov
jmp
andb
addr16
mov
addr16
lahf
adcl
mov
sbb
sti
dec
mov
int3
subl
or
rcr
push
jl
mov
and
clc
mov
imul
int
pop
ljmp
mov
inc
adc
mov
je
adcb
in
test
mov
add
cmp
add
std
into
mov
push
mov
sub
and
outsb
stc
pop
fsubl
xchg
cmp
jmp
sub
sbb
ja
sbb
push
in
shll
sub
sub
das
sbb
das
push
call
arpl
shlb
add
daa
and
cmpsb
mov
mov
mov
std
pop
fistpl
roll
ret
gs
iret
shll
inc
dec
xchg
int3
rcrl
lret
popf
push
test
repnz
add
icebp
cltd
lods
cmp
push
in
sub
or
outsl
xor
mov
mov
lods
fwait
cli
adc
fcmovnbe
inc
pop
mov
inc
jle
shlb
mov
nop
repz
in
xchg
lods
jae
add
sahf
fs
push
std
push
aas
movsb
or
xor
int3
mov
push
or
mov
popa
mov
and
popl
xor
push
push
outsl
lock
aam
jnp
aad
int3
pop
sbb
mov
cmc
mov
jbe
mov
jns
cmpsb
test
xor
fdivl
add
bound
mov
xchg
test
jecxz
addr16
dec
adc
jge
cli
add
add
and
test
mov
push
mov
lock
sbb
xchg
pusha
in
rorb
stc
stos
inc
sub
lea
lds
push
jp
hlt
mov
sub
or
addr16
arpl
sbb
cli
int
sub
xor
mov
mov
cmpsb
aam
cli
adc
test
adc
sub
jmp
add
and
xchg
push
aad
pop
psadbw
xchg
andb
push
jp
fisttpl
imul
pop
xor
decl
sub
mov
imul
cmp
xor
fbstp
mov
stos
sbb
mov
stos
jg
frstor
les
bound
adc
mov
stos
sub
or
sub
int3
enter
mov
les
std
cmp
cwtl
aaa
mov
push
add
sbb
enter
data16
dec
mov
pop
push
sub
je
mov
loope
adc
adc
fisubl
push
xchg
out
adc
adc
cmp
shrl
fcomp
sub
or
scas
pop
int3
rol
jle
cmp
sbb
xchg
push
ja
ljmp
pop
lods
or
shlb
lods
jb
push
push
cmpsl
and
cmpsl
pop
sub
lcall
or
xchg
pop
mul
push
jo
jb
ret
lock
ja
shrl
test
jno
icebp
mov
outsb
shrb
pop
mov
in
mov
popf
ficompl
adc
std
mov
push
int3
jns
shrb
push
cwtl
jge
mov
pop
mov
loop
nop
fsubrs
fiadds
mov
test
sub
filds
pop
and
lock
js
psubsw
dec
pusha
xchg
mov
jns
popf
push
mov
je
xlat
dec
loopne
pop
ds
inc
aad
and
sbb
xchg
mov
andl
fbstp
and
sub
push
xchg
inc
jno
pusha
xchg
ljmp
movsb
lds
ret
sub
je
xchg
in
fbstp
mov
sahf
popa
popf
mov
ss
rol
xor
ja
or
push
jb
pop
aad
dec
inc
cld
movsb
fistps
enter
mov
jae
add
loopne
jo
das
sahf
out
repz
movsl
cmc
jecxz
mov
mov
cmp
mov
push
push
pop
push
or
notl
sbb
inc
lahf
into
nop
loopne
push
sub
std
push
dec
ja
dec
or
cs
nop
in
jmp
xabort
out
push
cld
cmpsb
adcb
or
mov
mov
adc
ret
adc
in
lods
scas
js
push
inc
sbb
fs
add
jmp
out
and
cmpsl
leave
mov
adc
push
jb
or
mul
repz
sub
daa
xchg
bound
call
push
or
ljmp
test
mov
shrb
cld
push
orb
add
dec
bound
scas
dec
xchg
jecxz
lret
addl
sbbb
jmp
movsb
adc
pop
dec
sbb
jl
mov
jb
jmp
vhaddpd
pop
add
shll
ret
sub
inc
scas
imul
out
addl
add
jmp
add
cli
pushf
jbe
jg
mov
int3
js
adc
jne
adc
pop
pusha
movsl
adc
push
push
mov
aas
and
icebp
in
cltd
dec
push
int3
cwtl
xchg
dec
cmp
cmc
cltd
lcall
xor
in
xchg
ljmp
clc
jb
insb
mov
mov
shl
or
add
icebp
mov
push
or
scas
mov
sti
jae
mulb
xor
pop
push
mov
repnz
cmp
inc
in
pop
jnp
test
xor
lds
fstp
mov
pop
shll
rcrb
mov
lea
and
mov
mov
sbb
mov
xor
std
or
xchg
rcr
dec
mov
dec
sbb
xchg
sub
sarl
enter
add
loopne
and
jno
pushf
xlat
cwtl
jno
outsb
fucomip
mov
jbe
jp
dec
cmpsl
sbb
rorl
xchg
mov
lods
inc
add
xlat
sti
sahf
push
inc
outsl
cmp
out
adc
fiaddl
cmp
lcall
or
mov
data16
scas
test
mov
pop
pop
xor
addr16
les
push
dec
test
fucom
xor
es
jl
andb
lea
pop
es
int
pusha
xor
popa
into
add
pop
jb
ret
push
mov
clc
mov
push
roll
jl
push
pop
into
lret
cmp
inc
xchg
imul
jae
adc
clc
scas
ror
add
xor
out
test
int3
push
loope
lahf
test
xorl
leave
sbb
adc
bound
sub
dec
mov
inc
push
mov
data16
mov
push
aas
std
jo
fwait
pusha
push
arpl
or
or
gs
cmp
sbb
in
bound
adc
out
stc
sub
insl
and
ja
cmpsb
movsl
mov
push
scas
mov
xchg
roll
mov
push
dec
out
popa
mov
inc
aas
sub
cltd
movsb
fs
in
dec
out
jae
push
cld
mov
mov
mov
push
jmp
sub
sahf
sub
je
dec
negl
andb
rcl
mov
cmp
daa
and
popf
fldcw
cmpl
rcll
popa
cltd
or
sbb
jge
out
out
sbb
lods
cmp
cli
dec
mov
xor
or
lock
cmc
mov
mov
icebp
adc
add
ljmp
divb
sbbl
sbb
movsb
aas
mov
sbb
in
aas
iret
ljmp
pop
lock
add
mov
clc
lock
xor
ja
pusha
rorl
inc
xor
xor
fwait
inc
out
inc
xlat
int
cmp
mov
or
xor
sbb
mov
cmc
test
mov
ret
out
add
xchg
addr16
rcl
jge
adc
cmp
popa
ss
fsubrp
mov
ret
rcrl
daa
push
movsl
in
cmp
or
cld
data16
test
jge
dec
add
aam
mov
test
sub
popf
sbb
cld
add
adcb
pop
repnz
cmp
jle
aaa
dec
jne
cld
pop
add
jae
xor
icebp
jmp
stos
ss
jg
xor
push
xchg
sub
cmp
hlt
sbb
les
add
mov
jge
pop
lea
dec
xchg
xchg
mov
repz
sar
inc
scas
mov
cmp
pop
sbb
lahf
xorb
aas
or
pop
xor
sbb
mov
out
pop
pop
das
push
cld
push
out
lods
mov
fidivs
test
cld
vcmppd
and
mov
stos
rcrb
jle
cli
mov
hlt
nop
dec
in
push
jle
mov
jge
or
sbbl
mov
addl
ret
test
sti
jb
lea
jl
je
pop
dec
adc
lods
mov
pop
adc
pop
fldenv
test
push
xor
out
push
subb
rol
cmp
jmp
inc
push
out
ret
dec
stos
cmp
adc
shrl
js
add
fwait
add
sub
imul
mov
movsb
cmp
mov
int
inc
test
push
sub
out
sahf
movsb
data16
cs
inc
out
pavgb
sbb
movsl
push
inc
or
ds
ja
xlat
mov
leave
xor
and
aas
shll
dec
dec
push
push
add
or
shl
shrb
mov
dec
rcrb
mov
dec
mov
call
xchg
xor
pop
outsl
xorb
cmpsb
and
push
cli
xchg
lds
inc
cmp
push
mov
mov
push
lcall
sub
cmc
inc
cmp
pop
loopne
add
jne
add
or
stos
jmp
mov
into
shl
lock
inc
shll
aad
cmp
push
aaa
dec
jecxz
inc
push
cmove
and
cmpsl
pop
ret
adc
sub
mov
jmp
pushf
mov
outsl
mov
lea
cs
push
repnz
inc
test
and
or
test
or
or
mov
mov
cmpsl
cmp
add
push
jecxz
mov
scas
dec
rorl
jae
cs
pop
sub
in
xor
insl
add
into
pusha
in
lea
pop
cmp
and
push
dec
pop
ss
cmc
cmp
and
adc
push
pop
sahf
cmp
add
addl
push
jo
add
pusha
outsb
inc
out
stos
adc
or
repnz
lcall
mulb
mov
and
int3
hlt
xchg
aam
enter
jns
jne
inc
xchg
inc
rcll
mov
adc
fstpl
xor
cltd
inc
clc
out
icebp
pushf
jae
aas
mov
pop
scas
aas
scas
out
push
adc
push
je
fdivrl
aaa
out
jbe
loop
sub
pop
pop
lds
test
add
inc
mov
pop
push
adc
les
sub
or
lods
es
les
je
or
push
sbb
movsl
xor
jecxz
dec
mov
pop
push
jb
repnz
inc
scas
xor
mov
push
andl
jne
mov
and
and
inc
or
pop
inc
pop
dec
ss
jmp
cmpsb
je
sub
dec
aaa
in
mov
jmp
or
das
push
imul
fisttpll
push
sahf
cmpsb
add
add
xor
and
dec
xor
daa
xchg
int
les
js
mov
call
out
cwtl
sub
cwtl
stos
mov
ds
add
scas
mov
dec
dec
xor
mov
mov
repnz
cmp
mov
xchg
repz
add
jb
fcmovnbe
xchg
jns
mov
fistps
xor
pushf
test
cmc
push
jge
sub
sbb
shll
aad
inc
mov
or
xor
jns
jg
imul
pop
push
and
cmp
push
cs
xchg
and
popa
cwtl
pop
mov
test
out
and
xchg
or
sbb
pop
xlat
lods
fwait
jae
jle
cwtl
loop
mov
shl
notb
test
dec
loopne
sbb
push
in
imul
or
jg
inc
and
bound
sbb
sahf
out
cltd
insl
or
mov
mov
xchg
pop
cmp
dec
mov
clc
clc
fsubs
repnz
dec
stos
mov
ljmp
mov
pop
aas
adc
push
cli
or
add
push
int
repz
call
in
imul
cmp
sub
imul
sti
or
sbb
inc
pop
and
repnz
loop
sub
pop
daa
andl
xchg
adc
stos
jge
scas
imul
jno
mov
lea
and
dec
aam
gs
push
xchg
mov
imulb
xor
cmp
dec
xchg
sarl
add
sahf
jmp
fwait
jle
icebp
test
jmp
gs
hlt
pop
loope
xchg
lahf
pop
push
mov
nop
fbld
js
ret
push
push
sbb
xor
adc
in
add
int3
jp
lahf
pop
adc
adc
addr16
jnp
lds
mov
cmpb
pop
add
pop
dec
rclb
ret
leave
push
jge
lods
lods
xchg
hlt
jne
push
xchg
mov
pop
mov
xchg
push
inc
outsb
dec
sti
push
pop
or
xchg
out
lea
mov
and
cmpb
loop
sbb
sbb
dec
adc
loop
jb
fmuls
push
adc
adc
mov
sub
push
test
lea
adc
cmpsb
jno
pop
push
push
test
daa
push
add
ds
inc
push
sub
or
sbb
pop
cltd
xor
pop
inc
cmpsl
pop
add
push
or
mov
adc
xor
fnstenv
out
in
hlt
or
add
pop
add
ret
add
jge
xchg
xor
nop
cmc
xchg
inc
js
test
and
adc
or
jne
xchg
inc
movl
imul
aas
sub
inc
mov
or
jb
sti
ret
sbb
xchg
sarl
cltd
cli
or
jecxz
sub
pushf
sub
mov
xchg
xor
xor
jmp
xor
jbe
sahf
jbe
add
scas
loopne
cld
outsl
sbb
sbb
or
leave
and
insb
sbb
push
and
sub
nop
ret
jp
lret
imul
xchg
rcl
sar
btr
push
lock
xor
outsl
pop
cmp
mov
push
nop
xor
sbb
ret
add
ljmp
xrelease
pop
outsb
xor
jb
mov
dec
dec
mov
ja
rcl
into
jp
in
jge
hlt
stos
lods
mov
lahf
scas
xor
into
push
xchg
sbb
xlat
aam
sbb
xchg
sub
pop
mov
push
pop
inc
or
sub
xor
fsts
sbb
jnp
aad
call
stc
subb
cli
sub
push
loope
dec
stos
jp
push
inc
sub
push
sub
xlat
jle
fincstp
jnp
clc
test
mov
std
mov
ja
push
lret
mov
icebp
xchg
aas
pop
mov
xor
jo
mov
push
sub
out
adc
add
xor
lods
adcl
popf
fimull
jbe
cwtl
dec
or
dec
mov
cmp
imull
mov
ss
inc
outsl
icebp
jl
out
cmp
xor
arpl
xchg
dec
and
mov
pusha
add
cmp
rol
lret
inc
lret
dec
enter
cmp
js
insb
xchg
pop
dec
orl
les
icebp
sub
cmp
loope
loop
pop
enter
enter
mov
xchg
cltd
adc
pop
arpl
mov
xor
icebp
lods
and
inc
pop
inc
inc
mov
lods
clc
js
cwtl
sbbb
stos
orl
popa
mov
pop
ret
pop
fimull
sbb
out
cmp
sub
outsb
leave
mov
rcr
test
leave
or
into
mov
cmp
and
mov
int3
daa
mov
jge
fcompl
sub
jg
mov
add
je
movsb
sbb
notl
sub
aas
jnp
or
enter
sti
push
inc
movsl
mov
jmp
mov
frstor
or
cli
jmp
scas
and
xchg
mul
xchg
and
out
clc
lcall
sbb
sub
mov
push
xchg
mov
push
dec
inc
pop
lret
and
test
das
or
mov
jo
js
pop
mov
out
pop
shrb
popa
movsl
pop
dec
jb
lds
mov
or
push
das
pop
adc
or
in
cmc
jbe
and
xchg
sbb
pop
or
cmp
pop
and
xchg
jge
pop
imul
in
repnz
sub
push
test
cmp
xor
mov
shl
js
or
hlt
pop
loopne
xchg
or
ljmp
sbb
adc
and
inc
add
das
xchg
lret
cmpsl
mov
mov
add
cmp
call
scas
lcall
mov
cmp
cld
cmp
push
les
movl
jmp
pop
nop
pop
insl
mov
ret
inc
bound
mov
jbe
push
mov
inc
ljmp
repnz
xchg
xor
inc
sub
lds
pushf
sbb
test
in
xchg
push
dec
dec
push
or
leave
sbb
aas
lret
add
cmp
lret
ret
add
mov
xchg
aad
pop
push
dec
mov
and
or
js
push
cmp
jns
ja
mov
add
or
and
jle
arpl
pop
mov
push
mov
in
adc
mov
je
dec
inc
inc
dec
pop
xchg
sti
es
sub
mov
sub
dec
and
mov
dec
mov
mov
mov
jo
cmpsb
sbb
loop
push
ficomps
mov
dec
ljmp
testb
inc
in
test
fldenv
and
dec
enter
fldt
daa
repz
jns
sbbl
aaa
aaa
hlt
mov
jmp
jae
ja
mov
pushf
pop
jbe
add
adc
xlat
fst
shrl
jne
inc
cmp
adc
stos
sub
jbe
jo
and
fldt
roll
test
mov
push
inc
mov
xchg
push
cmp
xchg
jno
xchg
sbb
stos
pushf
shl
jae
jmp
movsl
shlb
lahf
movl
shlb
int3
sub
inc
xchg
push
adc
jle
fcomi
subb
cltd
mov
mov
testb
les
pop
push
bnd
push
sbb
mov
cmp
cmp
pop
xchg
inc
jnp
push
data16
test
testb
xor
jmp
pop
xchg
lahf
mov
jb
stos
jae
scas
mov
dec
and
imul
mov
dec
hlt
ret
test
jge
icebp
jmp
dec
sub
outsl
mov
xchg
adc
dec
xchg
jne
inc
xor
mov
push
cltd
cli
gs
and
insl
rolb
mov
push
cmp
jg
or
sbb
inc
mov
sub
and
cmp
sbb
dec
std
inc
xor
int3
dec
xchg
aas
fistpll
mov
mov
out
pop
lret
mov
push
outsl
int
idivl
pop
sub
nop
xchg
or
jle
or
lcall
mov
aas
add
jb
cmp
out
and
mov
sahf
out
daa
in
or
push
cmp
jl
aaa
das
daa
push
negl
push
in
pop
lret
enter
or
or
mov
icebp
push
in
jne
orl
scas
aad
lods
mov
adc
stos
data16
insl
and
daa
iret
dec
data16
in
sbb
jmp
pop
mov
xor
jno
dec
sar
sbb
lock
and
aas
dec
into
mov
push
pop
inc
jne
sar
xor
ret
ret
dec
mov
and
sub
xor
add
mov
cmpsb
cmc
xor
ljmp
lock
stos
lods
xchg
sbb
loope
sbb
xchg
je
int3
mov
cmp
xor
push
cmp
pop
sbb
mov
into
xchg
or
adc
push
dec
repnz
in
jge
mov
push
push
add
push
das
lods
and
loope
fimuls
xor
jns
ret
popf
xor
xor
jo
mov
clc
testb
repz
jb
lahf
ss
mov
in
stc
pop
cmp
push
xchg
xchg
mov
aas
push
pop
aas
fsubr
cmp
xchg
jg
and
mov
stos
and
sbb
pop
js
or
jne
sub
adc
jns
lods
xchg
ss
xor
lods
das
lods
data16
mov
popa
push
cld
sub
dec
or
imul
xor
sbb
jbe
mov
mov
mov
pusha
pop
loopne
test
hlt
add
lods
mov
mov
mov
cld
mov
sahf
enter
and
push
add
jbe
adc
mov
inc
mov
popf
loope
cmpxchg
inc
jl
cmc
and
pusha
ds
sub
movsb
pop
cmp
xchg
push
roll
push
insl
jp
jmp
xchg
push
pop
push
mov
into
mov
add
sar
xchg
and
and
cs
cmpsb
and
std
aas
sarl
cltd
and
add
or
xchg
mov
push
fstps
pop
loopne
dec
ret
pop
mov
xchg
jno
stos
and
call
pop
push
mov
mov
lock
ljmp
mov
cmpsb
jo
ds
inc
mov
push
sbb
push
push
inc
sbb
jno
add
test
stc
stos
cwtl
push
out
icebp
lods
mov
sbb
pop
test
cmpsb
movsb
faddp
jg
inc
dec
pop
dec
mov
fildl
fcmovnbe
fwait
lods
js
dec
pop
lret
je
jl
rcll
int3
xchg
xor
nop
xor
inc
in
add
fcomip
std
movsb
movsl
loope
in
cmc
cmc
and
lret
clc
dec
mov
fs
xchg
in
sub
loopne
dec
jp
xor
mov
jno
dec
adc
dec
or
xchg
insb
inc
incb
movsl
inc
mov
sbb
pop
sub
inc
stos
test
push
loopne
enter
jno
mov
outsl
fcmovne
mov
adc
jb
js
jae
addr16
and
or
popf
or
repnz
lret
mov
inc
pop
jecxz
pop
xchg
cmp
dec
pusha
dec
sbb
fwait
or
add
cwtl
in
jl
fiadds
mov
test
jmp
fistpll
lret
push
inc
out
xor
mov
lcall
sbb
jg
rolb
call
sbb
repz
sub
stc
jl
loope
cmp
insl
jge
das
sub
push
push
jge
jno
lcall
test
movsb
fwait
jbe
xlat
mov
test
jno
mov
nop
movsb
xor
mov
xchg
sbb
mov
aad
jne
ss
xchg
cs
frstor
into
int
adcl
out
pop
fstps
sbb
push
lods
mov
push
and
daa
jp
fcompl
lret
or
or
lock
rolb
mov
lds
pop
hlt
lods
jne
and
mov
and
mov
daa
pop
mov
lods
cli
xchg
ficoml
xchg
jnp
push
pop
push
in
mov
xor
insl
clc
out
mov
in
nop
icebp
mov
loopnew
sbb
cwtl
jno
std
dec
stos
sub
stos
out
in
push
vpsubb
push
lret
repnz
testl
xchg
cld
out
lahf
xchg
or
loop
add
in
mull
int
jmp
or
lock
jbe
hlt
sbb
sub
hlt
cltd
aad
fiaddl
out
aam
push
pushf
fwait
test
je
lret
dec
push
movsl
ret
stos
jecxz
dec
or
repnz
push
add
xchg
inc
xor
rcll
in
and
lds
xor
sbb
mov
inc
or
pop
mov
xchg
mov
jae
jns
dec
mov
test
arpl
push
push
lahf
fmul
idivl
xor
inc
es
xchg
scas
and
fimull
cld
xchg
jo
jl
ss
inc
in
iret
mov
stc
ja
cmpb
lret
xor
add
pop
push
aad
pop
jmp
xor
xchg
mov
xor
out
loope
icebp
mov
push
enter
sti
bound
inc
pushf
sbb
push
cmp
cmp
mov
sub
lods
gs
pop
dec
or
xchg
xor
xlat
mov
popa
jmp
or
push
out
cmc
dec
addb
incb
sub
das
sbb
bound
or
inc
int3
aas
jb
or
mov
cmpl
push
sahf
push
cwtl
jecxz
shl
jl
adc
or
data16
pop
dec
mov
xchg
cld
adc
xchg
or
loope
or
repz
sub
div
add
stc
in
jbe
cmpsb
cmovae
mov
and
mov
sti
adc
lock
sbb
scas
dec
inc
mov
jg
movsl
mov
cmp
pusha
call
or
mov
es
xchg
filds
scas
inc
inc
add
scas
sub
xchg
sar
mov
loop
loope
adc
or
imul
mov
outsl
mov
adc
cmp
fdivs
sbb
cmp
inc
sti
dec
clc
fistpl
cld
test
inc
add
adc
mov
ja
sbbl
std
push
sub
cmp
mov
jle
out
mov
nop
jb
push
mov
sbb
inc
sti
xlat
cmc
shrb
cwtl
adc
jg
lret
mov
insl
pop
notb
out
jg
test
incb
mov
repz
and
dec
push
xor
pushl
repz
lcall
inc
aam
cld
stc
sub
push
dec
ret
orb
or
ret
das
xlat
das
popf
test
out
lock
jb
rclb
bound
stos
fnsave
sub
pop
mov
xor
in
xchg
cmp
inc
inc
inc
jno
sar
adc
out
shlb
cmp
cmc
inc
inc
es
lret
sahf
out
outsb
test
mov
dec
insb
jle
sbb
ret
hlt
push
in
cmp
sub
mov
jo
mov
mov
lods
ret
test
inc
pop
outsl
sub
sbb
push
les
mov
lock
das
fistpl
shlb
pop
mov
shll
outsb
sub
pop
lcall
mov
repz
and
mov
xchg
cmp
cmpsl
jp
pushf
inc
xchg
and
div
or
and
cmp
jno
gs
and
lret
push
jno
cmp
pop
mov
inc
mov
inc
repz
mov
lea
out
inc
pop
in
mov
imul
cmp
push
jecxz
bound
cmpb
jge
xchg
mov
subl
lock
imulb
push
enter
adc
lahf
pushf
lock
mov
mov
jnp
cmpsb
vpermps
mov
and
sub
insb
aam
inc
test
jmp
mov
test
adc
inc
pop
adc
sub
movsb
jo
sub
pop
pushf
scas
lret
or
imul
cltd
adc
xlat
loopne
out
pop
movsb
sub
lcall
vphaddubd
sub
addr16
sar
mov
adc
stos
sti
xor
xchg
mov
call
icebp
push
jl
aad
mov
lods
stc
jbe
mov
xchg
cmc
add
int
test
insl
mov
cltd
lods
stos
sbb
fstl
jns
jecxz
or
iret
jp
cmp
inc
xor
mov
xor
in
push
test
leave
and
push
setae
fwait
mov
hlt
das
icebp
push
subl
gs
inc
mov
xchg
iret
cmpsl
cmp
mov
push
movsb
orl
ficompl
mov
repz
xchg
lea
addb
insl
sub
popa
xchg
mov
lock
ss
pop
int3
movsb
add
lret
out
les
inc
pop
out
es
or
push
mov
xorl
or
outsb
pop
mov
pop
or
sbb
mov
popa
data16
inc
and
les
cmc
sub
in
into
pop
sbb
jbe
aad
aad
aam
jmp
cs
aaa
out
scas
add
mov
mov
dec
lock
jbe
cmpsb
ret
xor
mov
out
inc
cmp
shlb
xchg
pop
stos
addr16
push
stos
fistpl
leave
jnp
clc
mov
mov
int
ror
pop
add
insl
jmp
jbe
xor
hlt
aad
fs
mov
dec
cwtl
mov
mov
sbb
sbb
mov
pop
cmp
xchg
cmpsb
xchg
movsb
icebp
out
xor
mov
add
test
mov
cmp
popf
and
les
dec
mov
push
iret
xor
iret
mov
test
sarl
leave
cmp
or
xchg
fsubl
cwtl
dec
pop
icebp
push
adc
lock
mov
subl
in
adc
mov
mov
jp
push
rclb
rclb
pushf
hlt
cmp
call
bound
and
ljmp
fidivrs
mov
or
movsb
movsl
cmp
cmpsb
rcrb
aam
push
xor
xchg
mov
mov
leave
pop
dec
insb
gs
sub
loop
cmp
insl
fdivrl
add
pusha
cmpsb
jmp
imul
out
lds
scas
clc
push
jb
jb
or
subb
jbe
mov
decl
xchg
fstps
mov
jle
cld
jecxz
xchg
and
xchg
xor
hlt
pop
imul
ret
sbb
push
aam
inc
add
data16
pop
xor
mov
aad
mov
lahf
fbld
push
inc
dec
ds
repz
mov
push
icebp
jo
mov
in
ss
jg
jl
outsl
lods
push
mov
mov
push
xchg
lret
mov
in
lods
ja
cmpsl
mov
addb
movsl
lcall
jo
mov
push
mov
push
data16
inc
insb
push
shlb
rcll
cvtps2pd
adc
adcl
and
jmp
popa
pop
lock
push
sbb
cmp
jno
test
mov
pop
mov
push
sub
stc
pop
jg
dec
or
cmp
fbld
popl
sub
dec
cmc
sahf
jle
sbb
mov
ret
adc
imul
les
mov
mov
jg
jo
pop
insl
pop
sbb
lds
sbb
hlt
mov
popa
push
inc
mov
insb
inc
jne
test
leave
rorb
in
pop
adc
sub
cwtl
cltd
hlt
mov
cmp
cmp
fwait
inc
jl
call
aas
nop
pushl
jnp
mov
divl
ret
xchg
push
mov
mov
cmp
xor
push
pushf
int
insb
xchg
jae
jne
cli
cmpsl
stos
mov
ret
xor
pop
jbe
or
push
pop
idivl
and
pop
test
shll
sbb
int
testb
xchg
mov
cmp
subl
enter
jo
xor
pusha
xchg
inc
add
push
jne
stos
sub
xchg
loop
dec
std
lcall
mov
je
add
popa
sub
xchg
xchg
out
jns
inc
push
lret
or
push
pop
mov
int3
push
shl
or
jmp
jmp
scas
mov
mov
cmpsb
mov
cmpsl
addr16
sub
test
xorb
insb
jle
mov
lcall
mov
adc
pop
idiv
stc
pcmpeqb
jae
rcl
push
sub
jb
jo
pop
cmp
jge
shlb
sub
fisttps
and
inc
jp
mov
sbb
jl
jns
aad
out
insb
push
lods
sub
lahf
pusha
out
dec
cs
pop
imul
push
mov
jbe
sar
adc
scas
mov
sbb
clc
aas
dec
jmp
mov
jle
sbb
enter
ja
mov
cmpsl
leave
inc
aam
cli
jmp
and
pop
popa
data16
shr
inc
scas
pop
cmp
pop
jmp
pop
dec
in
adc
pop
adc
ret
fisttpl
cmp
sbb
test
xchg
cmpsl
and
mov
inc
pop
sub
aas
jl
lahf
cmc
outsb
sbb
cmp
dec
in
repz
jp
ret
add
pop
fucomp
adc
lds
int3
adc
xchg
sbb
jge
push
jo
jbe
mov
xor
lret
xor
or
jae
hlt
imul
jp
adc
pop
jb
call
popf
xor
daa
ljmp
push
cmpsb
jp
xchg
lret
aam
xor
fildll
bound
ja
scas
imul
pop
xor
pop
sbb
sbb
jp
xchg
cmp
sbb
dec
fwait
iret
xchg
pop
pop
scas
mov
mov
jge
sbb
cmp
mulb
cmc
fcomps
dec
cltd
ja
add
pop
aad
xor
dec
sub
mov
imul
sbb
xlat
cli
lock
jb
fsubs
js
mov
xor
mov
loopne
jno
leave
fucomip
scas
mov
cld
stos
arpl
cmp
js
lea
push
daa
cmp
dec
aaa
testb
pop
lahf
sbb
xor
pushf
rcrb
ret
leave
mov
dec
mov
andps
dec
das
out
cwtl
xor
xor
out
lret
inc
out
daa
in
and
xor
aad
adc
sub
lds
loopne
mov
xchg
xchg
out
or
adc
mov
xchg
push
xchg
mov
stos
mov
mov
fs
sub
mul
sub
imul
jno
pop
mov
incb
dec
xor
bound
fisubl
js
push
push
mov
adc
int3
mov
mov
sub
lret
xchg
cltd
inc
cld
sbb
or
add
cmc
stos
out
mov
ljmp
aad
cli
sbb
lret
cmpsl
insl
cltd
cmp
fs
inc
mov
xor
test
and
mov
shrl
pop
inc
cmp
cmc
out
pop
ret
sub
push
jne
push
stos
insl
iret
jp
adc
sbb
fwait
rcl
lret
adc
imul
xor
je
ljmp
popf
jo
jp
mov
insb
or
dec
xor
insb
sub
cwtl
sbb
fdivrl
mov
frstor
xchg
or
shlb
das
aas
test
rcr
scas
push
or
jo
cmpsl
fildll
push
cmp
add
mov
shrb
dec
sub
movsb
push
sbb
sar
push
es
xchg
cmp
push
push
test
repz
jecxz
xchg
dec
sub
lods
sub
push
fcompl
or
sub
jp
or
imul
rolb
and
into
and
adc
outsb
je
loopne
mov
sbb
xchg
dec
jle
adc
dec
jle
fsubl
cmp
jg
inc
cld
and
or
lret
ljmp
sahf
into
sub
push
stos
pop
dec
js
sub
sub
mov
adc
xchg
nop
jmp
sbb
dec
cmp
gs
imull
fildl
adc
gs
xchg
ljmp
mov
or
rorb
sbb
repnz
enter
int3
cs
mov
mov
sbb
movsl
push
lea
jns
int3
in
or
push
in
adc
and
insb
xchg
imul
inc
pushf
dec
int
mov
fiaddl
cmpsl
pop
pop
xchg
and
ret
mov
popa
xor
mov
xor
leave
fucomp
xor
test
in
cltd
pop
push
outsl
and
rorl
test
insl
sahf
mov
pop
cli
mov
popf
insl
push
lea
cli
js
jnp
fwait
pop
lds
adc
pusha
mov
xchg
xchg
lret
out
xchg
fiadds
cmp
push
lods
jecxz
pop
bound
jp
repz
xor
pop
xchg
inc
std
cmp
nop
pop
add
adc
test
pop
in
jo
mov
stos
repz
pop
daa
dec
mov
popl
push
sar
icebp
inc
push
push
mov
add
add
adc
or
mov
pop
inc
pop
or
test
loop
push
xchg
push
xchg
jp
cmp
bound
loope
or
bound
sti
push
shll
or
push
cmp
pop
xchg
into
lcall
aas
faddp
ljmp
insl
xor
add
mov
and
nop
ret
jno
cwtl
mov
lcall
test
and
and
rorb
mov
icebp
mov
fmull
or
or
data16
push
sub
pop
inc
sbb
jno
pop
ja
fs
jp
jl
scas
mov
pop
subb
aaa
in
mov
jno
add
loopne
and
data16
es
xchg
imul
je
mov
in
mov
aam
xchg
popa
pop
in
addl
ja
mov
in
jmp
jns
mov
sub
fisttps
ja
xor
dec
data16
jae
aad
jno
aam
mov
je
das
push
imul
addr16
sbb
inc
or
popa
pop
dec
sub
mov
aam
loopne
dec
decl
xchg
icebp
aam
xchg
outsl
les
pushf
stc
or
addr16
dec
in
jnp
and
pop
test
inc
clc
push
dec
stc
sub
lret
into
pop
ficompl
sbb
and
and
rcr
in
sub
call
mov
jnp
mov
jo
jo
scas
push
rorl
cltd
fisubs
enter
push
jb
jg
xor
inc
dec
fbld
adc
cmp
je
adc
add
inc
or
out
xor
mov
pop
dec
pop
movsb
jae
dec
inc
leave
and
cmp
test
xor
cwtl
in
addl
xchg
or
cmp
je
movsb
adc
adc
mov
daa
xchg
mov
or
xchg
fs
add
pop
xchg
hlt
ret
jno
out
in
call
loop
add
arpl
aas
enter
cmp
jne
xor
dec
add
mov
imul
loope
jl
dec
jno
les
sub
xchg
jnp
cmp
out
sbb
jne
into
sub
pop
icebp
sbb
xchg
push
mov
iret
lahf
push
nop
aad
adc
imul
sbb
jg
pop
xor
pop
xlat
mov
adc
jmp
xchg
lcall
das
mov
sub
shll
fistpll
in
xchg
mov
inc
jns
and
nop
xchg
cmp
inc
xchg
lahf
xchg
or
jns
sub
int
out
mov
mov
push
mov
add
js
dec
stos
mov
icebp
adc
movsb
pusha
cld
test
pop
mov
jp
jo,pt
and
fnstenv
insb
xchg
dec
mov
dec
push
push
lods
stc
or
mov
xor
test
xor
ret
shl
push
or
fstps
jecxz
mov
add
scas
sub
scas
pop
ffreep
cmp
mov
mov
xchg
push
sub
data16
out
lock
sub
mov
lods
mov
test
add
jno
fidivrs
lahf
mov
in
imul
mov
std
outsl
test
test
pop
xor
push
pop
ss
mov
fisttps
add
inc
push
cmpsl
jp
ja
aaa
das
subb
notb
icebp
jmp
in
mov
repz
cmpsl
mov
jo
mov
rcl
or
or
xchg
dec
std
movsb
mov
into
and
lock
lret
cmpsb
or
push
cltd
in
mov
mov
and
fcomps
icebp
inc
adc
push
sbb
sbbl
pusha
and
popa
in
les
push
loope
adc
sub
call
xchg
je
add
pop
repz
xchg
adc
dec
sarb
xchg
mov
inc
in
fbstp
ficoml
into
sub
out
cwtl
dec
int3
pop
lods
sub
inc
xchg
test
je
adc
mov
mov
jle
cmp
out
lea
cmc
pop
sub
cmp
bound
jae
fbstp
jno
mov
mov
pop
inc
in
hlt
cmpsl
push
insb
xor
inc
fs
inc
mov
sbb
mov
int3
mov
pop
jmp
pop
roll
ret
rcll
out
clc
cmpsl
mov
mov
jno
movsb
lret
test
jns
push
rcll
test
les
dec
cmp
and
xlat
push
pop
imul
dec
les
adc
fdivs
mov
ret
mov
push
fidivl
mov
aas
mov
inc
inc
les
inc
test
sub
loope
or
testb
cmc
addr16
scas
fs
push
add
mov
std
das
cwtl
imul
mov
sbb
cli
adc
ret
addb
fiadds
loope
cmp
inc
jo
mov
lods
movsl
cmp
or
das
or
scas
adc
push
mov
cs
outsl
fmull
push
mov
mov
movsl
nop
in
xor
sub
add
and
and
aad
or
stos
arpl
test
mov
movsl
mov
in
inc
inc
sahf
imul
adc
or
je
push
cmpb
dec
int
mov
andl
jecxz
mull
dec
shlb
xchg
sub
cmpsl
pushf
pop
outsl
push
and
lcall
jne
andb
or
sbb
loope
pop
fdivs
out
imul
and
pop
sbb
and
js
stc
inc
outsl
rcr
and
leave
lods
dec
call
push
lcall
push
jns
mov
sub
cmp
inc
sbb
jmp
in
test
adc
mov
js
xchg
call
cmp
out
xchg
cmp
insb
mov
push
cli
dec
cmp
and
rcr
loop
ja
rolb
cmpsl
mov
inc
clc
aam
push
mov
ret
sbb
gs
clc
push
pop
cld
scas
jno
jo
pop
aam
adc
inc
add
out
mov
jnp
xchg
popa
xchg
pop
xor
cld
fdivrp
jnp
pop
lret
lcall
mov
sbb
push
rcrl
dec
xchg
rcll
pop
imul
mov
addl
xor
or
sahf
mov
call
adcb
out
sti
dec
stos
push
mov
xor
shrb
sub
les
push
jnp
inc
pop
rcr
aam
div
jle
jecxz
lret
mov
pop
in
loop
sarl
mov
jle
je
lcall
mov
inc
into
clc
inc
inc
addl
push
in
push
cs
xchg
or
pusha
jns
rcrb
xchg
pop
or
fimuls
bound
sub
push
push
sbb
stos
andl
xchg
mov
outsb
jns
test
mov
jle
or
pop
mov
mov
call
addr16
lcall
out
cmp
setae
inc
xchg
and
jmp
cs
imul
out
pop
sub
data16
loopne
cmp
xchg
push
es
jo
repnz
jno
or
push
adc
cmpl
jg
or
jo
adc
js
lea
adc
pop
into
mov
lods
push
push
gs
imul
dec
iret
mov
dec
xchg
jp
lcall
pushf
inc
mov
fidivrl
int3
enter
inc
push
push
jg
test
mov
stc
pop
lret
call
rcl
imul
cmp
iret
xor
xchg
cmp
faddl
sar
mov
adc
inc
mov
mov
jb
and
ret
jno
lret
cmc
popa
add
sub
jp
xchg
mov
cmp
in
mov
mov
leave
cmc
push
add
sub
xor
mov
leave
pop
imul
sbb
push
and
mov
scas
lret
mov
subb
aaa
pop
push
popf
imul
jge
hlt
mov
pop
mov
dec
cmpl
std
loopne
and
jl
xor
filds
loop
ljmp
xor
ficomps
shll
mov
sarl
push
mov
ja
cmp
test
ret
push
push
xchg
lods
jp
int
jnp
and
cld
pop
cli
shll
mov
mov
inc
xor
rclb
shlb
mov
test
cmp
push
outsb
or
movsl
push
mov
sbb
mov
ss
rcll
sbb
jp
push
xchg
mov
or
lcall
and
sbb
pop
pop
lcall
xchg
movsb
push
cmp
addr16
jb
sbbb
add
fdiv
dec
fidivl
stos
push
adc
ds
xorl
dec
xchg
add
lods
mov
std
sbb
cmp
arpl
adc
jecxz
fadd
xchg
maskmovq
sub
and
cmp
xlat
ljmp
mov
xchg
inc
test
jmp
lcall
pop
jmp
xor
pop
subl
nop
jg
cmp
xor
icebp
cmpsl
bound
sbb
nop
xchg
sub
enter
jl
sbb
aaa
cltd
mov
jle
test
cmp
jo
xchg
insb
jno
loop
mov
mov
icebp
inc
mov
and
dec
mov
pop
add
jmp
loop
sub
dec
adc
aam
and
xor
mov
xor
mov
sub
inc
push
jbe
cmp
inc
pop
sbb
dec
fnsave
in
mov
insl
imul
fadds
jnp
arpl
sarb
movsb
ret
xchg
outsb
shlb
cli
pop
lds
push
push
push
mov
sbb
mov
jmp
push
ljmp
pop
add
xchg
jecxz
lahf
inc
rcrl
aad
jo
shll
mov
iret
and
xor
lods
sbb
loope
js
mov
adc
outsb
sahf
sti
fwait
ret
or
pop
inc
hlt
add
inc
dec
xor
cmp
cmpl
in
andb
inc
insl
call
cld
jae
mov
cmp
enter
pusha
xchg
montmul
cmpsb
add
mov
mov
jl
sbb
movsl
add
aas
pop
arpl
mov
adc
adcl
pop
mov
and
add
out
mov
addr16
pushf
cmp
inc
in
inc
fdivl
jnp
pop
xlat
aas
xor
cmpsb
popf
mov
les
sarb
scas
sbbl
ljmp
ret
or
pushf
pop
fbstp
loope
mov
ret
jecxz
out
rolb
inc
test
xchg
aaa
addr16
push
sbb
and
mov
int3
jg
popf
insl
mov
mov
jno
pop
xchg
cld
scas
cmp
stc
and
xlat
ja
lcall
mov
and
cmp
ret
mulb
test
lret
mov
adc
sub
push
ret
jns
push
jle
mov
bound
lret
bound
loopne
sub
cltd
fistpll
mov
cltd
add
mov
fldl
rcrl
ds
lds
cmp
fisttpl
add
out
cmp
adc
addr16
cld
cwtl
test
or
inc
rcr
js
lods
pop
subb
cld
das
int3
in
mov
out
ja
xchg
hlt
mov
pusha
jg
out
push
mov
sub
sub
rcll
pop
inc
mov
cltd
repz
icebp
or
jmp
mov
hlt
inc
test
negl
dec
push
loopne
out
sub
push
sub
iret
pop
lea
jecxz
mov
inc
sub
stos
jmp
push
aaa
xchg
leave
xor
orb
arpl
mov
mov
loope
cld
mov
and
test
dec
inc
addl
ss
popa
dec
addr16
out
inc
xchg
icebp
mov
jecxz
sbb
push
cmp
mov
fs
out
pop
mov
bound
fdivrl
jbe
jne
inc
fnstcw
xchg
adc
test
andl
mov
ret
sbb
mov
dec
mov
out
movsl
push
push
jne
pop
lcall
jmp
pop
or
rorb
push
sahf
outsl
jno
inc
sub
push
cltd
aam
outsb
popl
xchg
dec
push
in
pop
mov
fwait
lahf
scas
mov
lods
adc
push
cmp
loopne
repz
jb
pop
mov
ret
pop
in
pop
pop
aad
push
pop
imul
shlb
mov
stos
adc
push
jp
xchg
lds
dec
and
pop
rol
leave
jle
out
scas
jp
mov
lds
dec
pop
push
xlat
outsb
xchg
or
inc
std
in
dec
xlat
and
adc
sbb
shll
dec
imul
push
jb
cmp
ret
lods
xchg
dec
repnz
mov
clc
dec
pop
fidivs
xlat
jno
xchg
mov
adc
loopne
cli
neg
int
lahf
inc
loop
cmpsw
push
clc
cmpsb
jbe
pop
mov
daa
jl
sbb
xor
bound
fs
arpl
je
jmp
arpl
adc
test
out
xor
pop
add
cmpsb
insb
xlat
loopne
adc
mov
rclb
scas
aaa
popa
iret
ja
jle
idivb
dec
int
jp
or
fmuls
jge
into
aam
mov
bound
movsl
sti
stos
in
adc
sahf
push
cli
cwtl
lods
in
js
les
cs
pop
movl
xor
xchg
rcll
jmp
je
test
mov
outsb
xlat
mov
or
dec
pop
dec
pushf
lret
mov
gs
jnp
jne
adc
ficoms
xchg
pop
movsb
mov
stos
sarb
jne
jae
or
pusha
and
in
scas
arpl
xchg
xor
fistl
xor
sub
jp
push
lahf
add
dec
add
pop
sahf
cmp
dec
insb
mov
or
rol
mov
or
mov
ficoml
cmp
lret
mov
mov
adc
outsl
pusha
push
and
lret
cltd
lock
or
or
stc
mov
les
jne
mov
fwait
cmpsb
in
push
loope
mov
daa
cld
jge
inc
sbb
stos
jmp
test
or
cmp
lret
addl
loop
lods
sbb
divl
lahf
inc
push
xchg
add
imul
inc
imul
dec
jae
push
mov
cmp
add
outsl
rcrl
mov
push
nop
push
push
in
out
mov
xchg
and
push
insb
daa
and
sub
jmp
orb
jb
push
and
push
push
pop
leave
adc
xchg
std
mov
mov
sbb
mov
loop
xchg
popa
cmp
das
ss
push
stos
ret
dec
jnp
sub
pop
cmp
xor
sar
inc
push
push
out
jmp
mulb
lahf
jl
fmul
mov
je
ret
nop
mov
and
xchg
fcompl
cmpl
int
pop
pop
adc
lods
jg
jecxz
leave
or
aam
in
cmp
fs
jne
loop
xor
add
es
push
rolb
or
cmp
xor
pop
andb
cmp
or
aam
dec
stos
aas
testb
jp
negl
fstpl
fsubs
test
stc
mov
mov
out
call
xchg
mov
sbb
xchg
scas
jecxz
mov
mov
mov
xor
mov
jecxz
push
push
lea
inc
test
repnz
push
into
pop
pop
jb
cmp
push
ret
pop
dec
mov
shll
in
adc
scas
testb
cmp
xchg
dec
and
cmp
out
scas
aas
adcl
test
out
xchg
popf
xor
les
test
outsl
sbb
ret
aad
mov
fsubrl
inc
popa
fimull
fstl
cmp
xlat
sbb
cwtl
dec
xor
push
aad
sbb
mov
cmpsb
in
mov
clc
push
call
and
sbb
mov
inc
fisttpl
xchg
mov
orl
sub
mov
addl
sar
dec
lods
insb
cmp
add
inc
pop
push
jo
int
cmp
dec
ja
cmc
icebp
cltd
hlt
xchg
pop
loope
mov
sahf
and
add
cmc
jae
inc
sbb
or
and
push
fimull
gs
mov
lds
pop
mov
je
xlat
in
rolb
push
or
mov
shrb
test
pop
mov
ret
lahf
xchg
gs
mov
pop
push
jle
arpl
pusha
cmp
cld
pop
repz
pop
push
loopne
inc
jbe
mov
xchg
gs
arpl
fmull
fwait
into
mov
push
add
xor
mov
int3
inc
push
scas
mov
and
outsb
shrl
out
and
cli
push
ds
call
mov
mov
pop
test
mov
stos
inc
cltd
dec
sub
cltd
sbb
pop
cmp
sub
pop
outsb
into
dec
mov
ret
fbld
jmp
xchg
into
xchg
or
outsl
test
pop
ja
cltd
fisubl
lahf
pop
ss
or
test
paddd
adc
mov
mov
scas
es
lcall
iret
inc
inc
fwait
insl
pop
ljmp
push
int3
mov
fldcw
pop
arpl
cli
aad
add
sbb
mov
lahf
outsl
testl
mov
rcll
fildll
mov
adc
xchg
mov
jno
push
rcrl
push
stos
jle
mov
pop
imul
mov
jne
fnstsw
adc
negb
pop
je
and
jno
lret
xchg
xor
push
dec
push
mov
sbb
xor
sahf
and
push
add
out
ss
into
call
test
nop
cwtl
ret
xor
jmp
jbe
ss
popf
cltd
pop
and
leave
movsb
mov
lret
jno
aas
push
and
push
divl
cli
adcl
inc
cmpsl
sahf
outsb
dec
adc
movsl
cmp
inc
incl
xchg
sbb
adc
cmp
das
movsl
push
jne
and
xchg
sbb
dec
pop
sub
stos
sbb
sbb
inc
push
aaa
sbbb
sub
std
rcrl
sbb
jmp
jge
test
pop
icebp
mov
xor
aas
rcrl
mov
xchg
mov
jp
cmp
movsb
xor
or
adc
jns
push
pop
sahf
ror
mov
mov
popa
push
fdivrl
mov
sbb
mov
push
sub
mov
aas
dec
mov
sahf
push
lahf
inc
sti
xchg
movsl
sbb
mov
xor
jbe
pop
ret
mov
xchg
mov
out
push
negb
pop
rolb
adc
adc
add
hlt
out
mov
sarb
push
dec
test
dec
sub
mov
scas
add
out
or
cmp
pop
pop
iret
jne
xlat
shlb
or
jl
cmc
xchg
aam
mov
sahf
lahf
jp
enter
add
and
jae
jae
push
arpl
xlat
stos
lods
insb
icebp
bnd
add
mov
xlat
daa
push
inc
dec
add
loop
push
icebp
rorl
fcompl
jne
out
xchg
mov
ss
mov
adc
jae
push
js
jne
dec
mov
jnp
xor
pop
mov
cmp
imul
inc
cmp
frstor
aas
in
add
into
mov
sbb
ffree
testl
add
mov
jmp
add
arpl
xlat
das
lea
add
data16
cmp
sbbl
es
sbb
mov
sub
clc
icebp
rorl
and
push
mov
daa
add
sbb
movsb
popa
dec
sbb
xchg
inc
sub
pop
dec
pop
insb
xchg
cld
jae
js
mov
mov
pop
sub
or
aaa
test
sbb
ds
int3
fisubrs
mov
and
xchg
fildll
testl
mov
inc
mov
out
sti
sbb
negl
pop
jg
das
popa
cwtl
filds
mov
stos
inc
and
and
push
cmp
loop
lock
shrl
bound
push
and
ja
inc
out
cmp
xor
mov
jae
mov
or
jbe
and
in
ja
out
cmp
cvtps2pi
out
fsubrs
dec
fstpt
inc
rcrl
mov
fwait
bnd
fdiv
outsl
cltd
loop
push
lret
and
add
and
rcrb
xor
stc
dec
cli
loop
xchg
or
fwait
das
out
jl
das
xchg
fisttps
ret
cmpb
aaa
aam
stos
lods
out
dec
inc
pop
shlb
xchg
jl
cmp
outsb
in
sub
adc
push
push
int
lcall
lea
sbb
cmp
push
shll
cmc
rcl
test
roll
push
testb
stc
test
dec
cmp
pop
mov
gs
ret
mov
js
adc
sarl
cmp
ret
fs
cmp
test
addr16
lahf
mov
fiaddl
imul
les
inc
xor
scas
mov
xor
sbb
sti
pop
test
aaa
ss
movsl
add
sub
mov
or
jne
sti
push
mov
pushf
ret
inc
stos
shl
fsts
ret
xchg
and
cld
popl
push
test
or
ffreep
pop
xchg
cmc
xchg
daa
cli
push
lret
aaa
xlat
inc
ljmp
mov
jns
mov
dec
pop
jae
ljmp
mov
xchg
mov
aaa
clc
ret
sub
std
jp
fmulp
adc
cmpsl
cmp
popa
stc
pusha
leave
shlb
fidivs
xchg
xor
xor
fisubl
push
aas
fwait
inc
mov
and
add
aam
pusha
clc
pop
mov
cmp
jno
dec
jb
jbe
imul
imul
gs
dec
loopne
lcall
cmp
add
cmp
jl
mov
test
and
xchg
call
insb
inc
mov
movsb
rcrl
cmp
je
pop
cmp
add
cmp
in
popf
jecxz
sar
push
dec
xor
icebp
addr16
xlat
mov
dec
addr16
enter
popa
jp
repz
stos
xor
fs
mov
clc
lret
or
test
fidivs
xor
add
stos
xchg
pop
inc
in
enter
in
shll
inc
inc
xchg
add
or
movsl
xor
hlt
mov
jae
test
sub
push
gs
push
cmp
pop
aaa
sbbl
imul
inc
push
js
and
icebp
stos
cltd
mov
scas
int
je
adc
or
cmc
call
sbb
out
inc
rcr
xor
xchg
mov
sbb
sub
dec
pop
adc
cli
xchg
stos
fadds
lds
data16
mov
xlat
sbb
xor
jae
ds
enter
outsb
mov
xchg
jle
add
sbb
or
jo
stos
lds
out
aam
push
pop
adc
inc
push
pop
nop
xorb
inc
mov
cwtl
movsb
sbb
inc
xlat
xor
adc
fwait
cmp
icebp
mov
mov
jo
pop
jo
mov
aaa
jmp
outsb
ret
mov
les
fisubl
xchg
out
or
lods
push
bound
mov
mov
jge
sub
sarl
mov
lcall
in
jle
pop
fwait
pushf
shlb
mov
push
adc
sbb
lcall
mov
xor
jne
fcmovu
cmp
out
scas
es
stos
mov
adcb
and
imul
cmc
pop
pop
xor
or
bound
outsb
das
xor
ret
pop
sub
outsb
cli
pusha
aas
dec
fs
ja
in
inc
mov
cmp
jnp
aad
shrb
sbb
adc
pusha
mov
call
mov
iret
dec
enter
in
nop
inc
xor
push
and
and
jmp
divb
pop
push
shrb
ss
lods
inc
xchg
gs
mov
push
pusha
repz
aad
call
sbb
inc
dec
rcr
jge
mov
ja
inc
mov
dec
fists
ret
jne
inc
mov
stos
imul
xor
imul
loop
out
add
push
shlb
or
enter
push
sub
mov
pop
mov
imul
inc
xchg
adc
push
es
xchg
jnp
fsubl
mov
lahf
sub
sub
xorb
or
out
jne
pop
call
mov
aad
insl
out
test
xor
push
inc
movsb
ss
push
pop
lcall
adc
popf
xchg
cmp
insl
push
sbbb
insb
mov
mov
les
pop
mov
shl
mov
lods
sub
mov
mov
pushf
and
or
dec
jp
mov
lret
push
decl
sahf
mov
loopne
mov
sbb
xchg
jl
aad
xor
cmp
push
loope
into
pop
mov
pop
add
std
popa
js
shrl
int3
add
pop
lcall
sti
push
lods
imul
pop
or
pop
test
stos
in
inc
in
sub
sbb
pusha
and
lock
xor
fucomi
xlat
faddl
sub
into
outsb
into
ljmp
aad
or
enter
pushl
das
pop
test
fadds
or
push
add
pusha
loope
jne
cmp
cmp
ret
mov
dec
frstor
push
sub
arpl
mov
xorb
mov
test
aaa
lahf
test
mov
or
in
push
das
or
pop
lds
loop
lds
movsb
mov
add
ljmp
icebp
int
test
add
adc
mov
mov
pop
jo
dec
adc
loopne
mov
ljmp
xchg
adc
cld
cmp
and
inc
and
mov
daa
popa
fsubl
xchg
adc
out
and
dec
and
push
loopne
dec
cld
out
dec
push
xorl
imul
in
xchg
sbbl
loope
aas
cwtl
push
adc
mov
sub
call
jbe
add
jg
sub
add
sub
aas
sbb
pop
xor
sbb
mov
lahf
fcmovnb
inc
xchg
inc
aad
leave
jb
mov
sub
test
mov
fdivrs
xlat
stos
int3
jg
shll
fisttps
ds
icebp
cmp
rol
movsl
pusha
jge
or
movsb
ret
mov
sbb
outsb
push
ja
fsubp
into
or
aad
pop
cmp
mov
pop
jmp
movsl
or
cltd
jb
push
inc
lahf
pop
jp
xchg
cmpsl
jno
lock
sub
lcall
ja
das
jno
inc
jmp
jns
scas
aas
cltd
in
inc
mov
pop
cmp
mov
popf
ds
pop
xchg
xchg
pushf
cmp
or
hlt
ljmp
jb
fs
movsb
mov
addr16
jno
mov
adc
add
push
dec
or
xchg
cmp
test
jmp
mov
lods
lods
or
lods
iret
pop
sbb
lcall
lcall
pushf
andl
incb
lret
push
sbb
lods
hlt
xor
jns
jmp
jae
cli
sti
aam
xor
xlat
xchg
imulb
jbe
test
mov
ret
xor
or
repz
or
lods
adcl
add
push
cwtl
das
aad
test
jg
rcll
push
sub
mov
adc
movsl
pop
nop
push
and
or
nop
fadds
std
testl
sub
push
xor
push
dec
pusha
jne
dec
outsb
push
arpl
pop
add
js
mov
lcall
add
jge
push
push
pop
or
sbb
sahf
pop
sti
inc
rcl
loop
addl
mov
dec
scas
pop
add
out
fcomip
inc
repnz
mov
jge
leave
in
les
and
fidivrs
arpl
push
mov
add
inc
cmp
jecxz
mov
pop
insl
mov
dec
dec
out
subl
push
jnp
xor
adc
cmpsb
xchg
pop
sti
cmp
inc
pmuludq
pusha
and
sbb
pop
jge
sub
push
fwait
dec
push
lock
sahf
push
test
push
out
push
bnd
cmp
pop
mov
test
cltd
push
lcall
mov
pop
shlb
xor
mov
mov
pushf
and
push
push
sahf
fimull
push
jbe
pusha
popf
inc
lahf
mov
sti
xor
bnd
movsb
mov
jbe
pop
jmp
scas
adc
fistpll
nop
daa
sub
inc
fdivl
int3
xlat
push
gs
mov
jl
pop
movsb
cmp
cltd
icebp
jnp
rclb
lcall
or
pushl
imul
pop
and
lret
lods
jge
push
lret
jmp
aaa
jnp
push
sbb
sub
enter
sub
pop
and
fistl
add
movsb
outsb
mov
dec
pop
test
mov
jl
pop
pop
jp
fdivs
jecxz
sbb
push
stos
lock
bound
insl
and
sub
cmp
inc
subb
pop
outsl
leave
in
push
pop
adc
sahf
xor
push
orl
js
cmp
dec
pusha
xchg
bound
mov
mov
aam
cmc
jmp
andl
mov
push
dec
dec
rcrb
cltd
das
lret
ja
in
cs
bound
mov
lock
repz
cmp
daa
pusha
mov
fbld
andb
adc
popf
js
ss
or
out
push
outsb
cmp
push
push
andl
xrelease
in
jns
sbb
faddl
and
rcrb
inc
mov
cmp
test
cltd
push
outsl
and
je
loop
das
stos
test
jecxz
leave
add
mov
inc
daa
dec
xor
push
cmc
pop
lods
int3
stos
sbb
or
data16
xchg
mov
rcll
roll
out
cmp
test
adc
pop
cmc
mov
sub
push
mov
in
cs
std
pop
fdivl
or
sbb
xchg
adc
sub
in
push
push
ss
fdivl
sub
mov
vpextrq
lret
dec
xchg
cmp
ret
aad
xchg
jns
jp
lods
push
sbb
fmuls
ret
les
mov
adc
negl
cmc
lods
outsb
js
movsb
ds
outsl
jmp
xchg
adc
addr16
dec
pop
cmp
cmp
outsb
jmp
js
pushf
out
jo
cmc
adc
cmpsl
nop
add
or
jnp
rorb
or
insb
xchg
mov
aas
sub
jl
and
push
movsl
cmp
sahf
andl
sbb
jmp
xchg
mov
lahf
rcr
aam
loope
dec
test
mov
jne
jnp
insl
or
xor
cmp
xor
icebp
in
outsl
cmpsb
adc
or
lcall
out
jb
lret
repz
add
push
add
adc
push
pop
xlat
rcrl
cmp
std
in
movsb
and
imul
iret
mov
dec
push
filds
mov
inc
add
andl
pop
jo
add
imul
cld
jp
lret
push
sub
or
mov
outsl
test
push
in
enter
adc
nop
loopne
xchg
lret
pop
ds
and
push
fstl
adc
mov
inc
test
adcb
outsl
mov
or
je
pop
or
fidivl
dec
dec
aad
jg
inc
pop
add
add
es
rcll
xorl
jl
jo
sub
pop
aaa
lds
and
mov
push
js
sub
xor
lcall
sub
mov
lahf
mov
test
inc
pusha
insb
rcrl
jmp
cwtl
cmp
xchg
and
sbb
pop
pusha
adc
sub
scas
mov
adc
cmp
mov
mov
arpl
in
jo
icebp
fistps
inc
clc
outsb
scas
dec
add
testb
inc
xor
popf
xchg
push
add
or
scas
cli
dec
jo
sub
int3
sub
mov
test
std
aaa
cmp
rorl
lods
push
insl
sbbb
jb
mov
push
xchg
push
pop
or
add
mov
int
lds
std
imul
jge
andb
ljmp
inc
call
fbld
out
xor
adc
out
mov
pop
mov
into
mov
outsb
inc
fldl
lret
stos
lret
xchg
fidivl
lock
out
dec
and
jb
xchg
les
jg
out
lret
psubw
cmp
movsb
imul
out
pop
jae
lret
push
in
aaa
jbe
add
dec
lcall
adc
dec
pop
testl
imull
pop
std
dec
or
and
jle
bound
fisubrl
mull
rcrl
repz
pop
xor
push
jg
popf
pop
sbb
jmp
js
xchg
jp
dec
shll
std
sub
pop
daa
sbb
push
sbb
into
lret
fwait
or
or
cltd
mov
aaa
cmp
adc
xchg
mov
mov
popa
ds
push
rcrb
popf
cmpsb
sub
hlt
jmp
adc
out
ds
outsb
pop
push
sahf
sbb
pop
xchg
push
in
mov
and
cld
jp
sarb
insl
rorb
lret
xchg
mov
lds
sbb
repnz
jle
adc
mov
andb
sahf
sub
dec
add
hlt
lock
and
test
scas
sbb
test
loope
stc
lods
sub
pop
add
dec
pop
push
enter
scas
jg
jo
jmp
lods
jg
adc
mov
call
sub
jbe
xchg
mov
arpl
fstp
pop
jb
inc
dec
add
call
jecxz
ficoms
or
sub
push
sbb
sub
add
mov
inc
rcl
add
hlt
cwtl
in
pop
cltd
je
xchg
sbb
test
lods
sub
jae
dec
mov
ss
aaa
add
adc
pop
dec
mov
push
scas
xchg
loop
jg
push
ret
push
aaa
cwtl
stos
fidivs
in
and
sub
mov
xchg
or
out
push
iret
jp
mov
movsb
push
out
sbb
imul
popa
pop
cld
ss
enter
lock
inc
xchg
xor
push
xor
pop
sti
ja
movsl
pop
xlat
mov
rcll
cwtl
je
or
inc
adc
loop
loope
push
mov
lea
and
adc
xchg
out
xchg
push
inc
xchg
cmc
outsb
mov
cmpsl
dec
dec
cmp
cwtl
lds
cmp
sbbb
imul
push
push
jne,pt
pusha
pop
dec
les
fsts
outsl
test
pop
adc
imul
sahf
mov
inc
sub
adc
pushf
out
xchg
andb
icebp
popf
push
push
xchg
sub
jge
jg
std
dec
xchg
jmp
xchg
call
fdivs
mov
or
add
cli
inc
xchg
fnstsw
cld
add
insl
mov
cmp
in
sahf
push
jl
aad
inc
or
push
cmc
stos
mov
dec
lahf
ret
sub
add
jmp
jmp
stos
sbb
jae
aaa
sahf
cmp
es
mov
imul
andb
shl
mov
and
les
xchg
pop
mov
negb
outsb
push
cmp
mov
mov
repz
lahf
and
push
inc
or
mov
sahf
and
or
xor
add
jae
mov
stc
xchg
xor
in
sub
mov
cmp
xchg
and
mov
cmp
cmp
leave
and
dec
sub
dec
rclb
repnz
call
aaa
rolb
jo
fmul
fcmovne
adc
pushf
lea
insl
int
pop
popf
jg
lods
sbb
in
shlb
mov
test
push
mov
icebp
mov
dec
int
popa
pop
call
arpl
das
ss
addb
call
jne
imul
in
pop
add
loope
mov
psrlq
fs
mov
sbb
adc
test
sub
sub
and
push
nop
add
ds
xor
dec
movsb
cwtl
xchg
mov
inc
mov
push
adc
push
fwait
adc
mov
and
lret
mov
movsl
dec
scas
cmp
nop
insl
subl
jae
test
and
out
mov
add
aam
ret
out
popa
cwtl
out
insb
movsb
repnz
pop
test
das
cmpsl
mov
ja
mov
jge
fs
push
sbb
scas
xchg
add
pop
sbb
mov
lds
mov
push
mov
jge
lcall
scas
push
les
flds
mov
sbb
xor
cmp
loopne
icebp
int
lret
data16
fistpll
faddl
and
fsts
test
and
test
jb
sbb
cmp
arpl
stos
aam
in
dec
je
or
fnsave
push
add
cmp
cmp
push
testb
dec
mov
cltd
cmp
inc
lahf
and
arpl
mov
shlb
push
icebp
js
ss
xchg
push
pop
mov
lods
jae
push
in
xchg
test
pop
into
imul
hlt
ud2
js
mov
rcr
push
jno
jle
notl
mov
adcb
cmpsb
jp
pop
ret
dec
inc
xor
push
data16
inc
inc
lret
and
mov
cld
rcrl
mov
adc
test
ljmp
inc
jmp
mov
lods
test
pop
pop
sub
orl
jp
mov
adc
lret
lahf
mov
jae
ret
bnd
lods
mov
call
fistpl
es
loope
jo
xor
and
push
lods
jecxz
push
pcmpeqd
js
inc
and
mov
add
mov
push
xchg
imul
mov
ret
ror
dec
imul
in
push
daa
imul
in
lea
sbb
shll
add
or
push
add
xchg
movb
xor
scas
or
sbb
push
mov
fstps
cmp
mov
ret
fsubl
jno
sub
push
xchg
mov
call
stos
ret
fldcw
cmc
mov
and
xor
loope
jae
fimull
pop
andl
mov
pop
push
push
pop
mov
push
xchg
fwait
daa
stos
pop
ja
scas
xchg
mov
xor
test
sbb
add
and
or
or
adc
pop
mov
sbb
stos
inc
push
inc
mov
out
addb
sahf
push
fmul
push
imul
mov
fisttps
inc
mov
dec
mov
negl
push
or
add
sub
leave
cmp
loopne
dec
addr16
jmp
ret
loope
sub
cmc
lods
fiaddl
jb
lcall
jp
fs
aam
add
loope
nop
gs
mov
lret
jle
and
fdivrs
dec
mov
inc
cmp
dec
xlat
fcmovbe
mov
lea
fs
hlt
inc
sub
int
mov
xor
sub
movb
sub
imul
mov
jp
sbb
pop
sub
adc
or
mov
or
cmp
push
pop
mov
xchg
mov
sti
je
push
jp
mov
jo
sti
xor
pop
orb
xchg
and
adc
addl
dec
repz
andb
negl
out
add
pop
ljmp
js
xchg
outsl
jbe
mov
sbb
bnd
fs
das
loop
dec
sub
xor
xor
pop
xor
and
sahf
sbb
andb
push
mov
push
mov
mov
pushf
pop
mov
lds
lret
imul
jmp
addb
out
mov
mov
imul
mov
mov
es
and
xor
subb
or
cmp
mov
or
cli
mov
mov
pop
jae
pop
imul
jae
fstpt
xor
rorb
add
inc
sub
inc
push
mov
iret
xchg
add
jno
xor
adc
das
mov
cmp
sbb
adc
sbb
push
cs
iret
or
sub
adcl
adc
add
in
xchg
mov
lds
mov
lds
neg
cmp
pop
adc
adc
mov
insl
push
ret
jbe
shlb
push
outsb
sub
insl
add
pop
cmpsl
je
clc
fistpll
lea
or
adc
insb
sbb
xor
add
hlt
je
mov
add
jno
cmp
repz
scas
sub
jge
lret
sahf
inc
repnz
dec
dec
lods
rcrb
mov
sarl
mov
ret
xchg
and
lahf
aad
lock
or
or
lret
sahf
pop
fmuls
or
shrl
divl
bound
dec
fistpl
je
dec
inc
mov
or
push
out
test
pop
push
push
cmp
rcrl
arpl
jno
mov
lock
sbb
stos
mov
mov
cwtl
imul
lret
enter
cli
or
fstp
inc
push
movsb
xchg
mov
xchg
xchg
inc
inc
imul
jg
testb
dec
xchg
mov
xor
mov
mov
call
insl
insb
adc
push
dec
enter
hlt
ja
lret
scas
test
push
lds
push
mov
lret
sbb
mov
lcall
cmc
insl
add
js
mov
push
es
sbb
fmuls
fnstcw
lods
jnp
xchg
cwtl
or
xor
or
in
call
add
repz
xchg
jne
lods
add
sbb
mov
mov
and
inc
xor
sbb
pop
push
xchg
push
and
ret
pop
xchg
xchg
lahf
in
add
adc
xchg
pusha
imul
mov
stos
fidivrl
adc
cmp
rolb
popl
fs
outsb
lea
and
icebp
and
les
scas
xor
lods
xor
xchg
jmp
fsubrl
sahf
push
call
jo
popa
and
in
pop
js
repnz
pop
push
mov
popa
mov
scas
leave
jnp
sbb
insb
test
nop
push
cmpl
xor
jno
jle
verw
dec
into
inc
dec
subl
pop
mov
repz
pop
cmpsb
mov
fiadds
je
shlb
mov
xorb
outsl
mov
std
stos
sub
shlb
pop
daa
mov
mov
gs
pop
cld
in
xchg
fnsave
lret
inc
loop
sbbb
cmp
punpckldq
fldenv
shrl
xor
js
les
mov
or
fxch
push
sbb
mov
cmp
dec
sbb
add
pop
or
inc
or
mov
aam
push
jg
daa
inc
cmp
jb
xor
push
das
repz
mov
movsl
rclb
daa
int3
jge
cmpsb
pusha
add
inc
push
pop
fisubrl
fstl
aad
je
shr
inc
rolb
add
stos
stos
sti
cli
push
out
inc
loop
sbb
dec
push
mov
hlt
inc
iret
inc
xchg
fwait
cld
mov
into
les
xchg
pop
mov
lods
fstpl
xchg
push
inc
add
jecxz
dec
je
scas
and
xchg
inc
pop
mov
cmp
add
pop
sub
or
cmp
mov
outsl
mov
std
dec
pop
cli
dec
and
mul
loop
or
mov
repnz
and
shll
aad
sub
outsb
lds
fidivs
sbb
fldt
cmp
inc
ds
bound
push
jbe
mov
pop
sar
xchg
mov
mov
or
clc
into
sbb
adc
xor
imul
sub
xor
pop
jo
outsb
movb
sub
mov
push
insb
cmpsl
mov
int
and
sub
sub
sbb
int3
dec
cmpsl
fldcw
dec
push
cmc
aam
push
rcl
movsb
in
pop
add
push
mov
sub
xchg
xor
push
scas
cwtl
inc
mov
or
cmp
jae
add
ljmp
inc
fildl
loop
pop
sbb
pop
push
insl
sub
hlt
bnd
call
je
das
insl
insl
inc
push
sub
daa
ret
jne
jecxz
add
dec
add
data16
fsts
jns
jno
lea
add
pop
cmp
insb
jbe
jne
lcall
fdivrl
cmp
add
adc
mov
daa
std
pop
jp
std
or
pusha
mov
movsb
repz
push
cmpsb
enter
push
aas
test
js
push
inc
cltd
lea
push
xchg
out
es
in
lods
mov
or
les
sbb
stos
ret
faddp
xor
outsl
in
xor
inc
dec
xchg
movsl
stos
std
xor
dec
sti
xor
dec
xorl
mov
or
pop
enter
xor
xchg
gs
loop
sub
out
shlb
mov
mov
pop
fs
add
xchg
das
push
jbe
dec
xchg
adc
sub
nop
enter
cltd
test
aas
aad
xor
andl
fwait
nop
xlat
outsl
inc
imul
adc
push
pop
cmp
mov
test
jg
mov
popa
test
daa
or
int3
lahf
inc
loope
cmp
and
sub
inc
xor
jae
and
std
push
mov
mov
lock
pop
cltd
loope
sub
call
mov
xchg
pop
sub
mov
jno
mov
notl
mov
mov
daa
mov
add
dec
pop
mov
fwait
xchg
or
pop
push
mov
in
jmp
and
push
jp
pop
pop
cld
loop
filds
dec
test
and
add
or
mov
fldenv
vxorpd
stos
mov
sbb
jecxz
mov
inc
pusha
iret
or
push
cmpl
sbb
out
inc
imul
push
pop
add
adc
push
data16
ss
push
push
pop
mov
lock
outsl
scas
or
mov
cld
iret
sub
int
movsl
push
mov
nop
mov
scas
cmp
sbb
test
pusha
xor
jecxz
pusha
je
lds
xchg
in
inc
xor
out
xor
jmp
xor
add
fdivrl
jae
cmc
scas
shrl
push
mov
ljmp
sbb
rolb
mov
out
rcll
dec
push
outsl
adc
sti
and
mov
fucom
mov
jge
mov
lock
pop
leave
pop
daa
fmull
mov
pop
stos
fnstenv
jl
xor
mov
sub
ja
sub
pop
xchg
add
mov
lods
sbb
mov
or
add
xor
mov
out
stos
ror
and
out
and
fistps
lahf
loopne
lods
mov
dec
xchg
in
and
rolb
inc
pop
adc
insb
push
aas
push
cmp
mov
das
addr16
inc
sub
lahf
jmp
test
cmp
jl
xor
mov
add
mov
jnp
sbb
in
cmpsb
mov
and
add
sub
mov
aas
scas
push
push
repz
outsb
shlb
ret
sti
inc
fadds
out
loopne
jno
cmpsb
adc
xor
into
mov
or
mov
mov
test
clc
scas
test
mov
mov
jl
sti
xor
movsb
xor
shr
fisttps
mov
stc
sbb
pop
xchg
xorl
movb
shrl
adc
mov
in
popf
sub
adc
inc
clc
adc
aaa
cmc
xchg
sub
popf
push
in
gs
mov
mov
dec
pop
and
imulb
xor
push
stos
mov
pop
ror
outsl
cmp
cmpl
fwait
pusha
insl
ret
dec
lret
clc
mov
add
fsubrl
lahf
add
loopne
ror
in
fbstp
cmp
dec
fisubs
dec
aaa
lahf
mov
dec
dec
arpl
ficoms
loop
add
pop
shlb
and
dec
lods
scas
mov
xchg
sbb
out
pop
cmp
andl
out
daa
lret
ja
ret
cmc
subb
movsl
decb
mov
cmp
xor
test
cmp
mov
div
sub
xor
xchg
hlt
mov
fisubl
sbb
lret
push
sub
ficomps
push
sar
call
mov
cmp
mov
adc
cmpsl
pop
rcrb
cmpsl
lock
ljmp
icebp
idiv
mov
mov
adc
addr16
xor
stc
push
pop
cmp
jb
ret
cltd
int
out
mulb
out
lock
jge
push
je
gs
icebp
mov
adc
mov
cmp
mov
test
push
mov
into
adc
mov
xor
in
xchg
lods
adc
lahf
popa
out
rorl
pop
lret
pop
xchg
mov
mov
outsb
xor
leave
pop
cld
or
stos
adc
sbb
lcall
mov
in
dec
or
push
xor
mov
lret
jmp
mov
xor
stos
leave
loope
cmp
lret
and
movsb
add
jp
fsubrl
jge
or
pop
ret
stos
mov
les
rol
jns
cmp
xor
xor
nop
xor
imul
push
test
jmp
mov
fdivrs
std
repnz
imul
rcrb
imul
scas
imul
lret
cltd
add
inc
pusha
pusha
pop
sbb
cmp
arpl
xchg
mov
fdivl
sub
inc
sbb
xchg
xchg
mov
cmp
or
add
cmpsl
stc
and
shrl
xor
pop
push
packssdw
out
hlt
xor
push
mov
fucomp
push
jae
and
pop
mov
xchg
gs
divb
push
pop
adc
cmp
push
gs
mov
std
adc
dec
das
out
lret
cmp
pop
jae
xor
pop
and
mov
arpl
xor
push
sub
movsb
orl
inc
sub
jge
insb
jno
mull
sbb
mov
mov
sbbb
mov
pop
fs
shll
les
inc
xor
cwtl
sbb
ljmp
inc
in
fucom
mov
out
cltd
insl
jnp
mov
add
repz
cmpsl
inc
mov
dec
movsl
mov
movsl
dec
or
mov
test
mov
lahf
inc
jno
es
dec
mov
mov
xor
lds
push
pop
js
lret
lahf
push
lea
push
je
xor
cwtl
add
dec
mov
mov
xchg
scas
push
mov
aaa
mov
mov
aas
mov
or
js
or
cmp
sub
jmp
dec
jp
adc
lea
xchg
xchg
roll
mov
push
into
in
icebp
sti
xor
cmp
lea
jecxz
mov
add
mov
push
adc
xlat
xor
sub
test
sbb
mov
sub
roll
xor
arpl
xor
push
xor
xor
mov
fidivrs
arpl
dec
pusha
jg
jmp
std
rol
fstps
mov
fists
into
sub
add
sbb
sbb
lretw
mov
lods
push
bound
xor
cmpsb
jo
fisubs
sbb
push
rcrl
mov
jmp
insb
call
scas
cmp
mov
or
xor
subb
lret
mov
in
push
cmp
out
sbb
dec
pop
inc
pop
push
out
loopne
pop
mov
sbb
fs
adc
jge
je
sbb
ja
pop
dec
push
jle
lret
sbbl
test
pop
sbb
push
pop
adc
pushf
add
mov
mov
out
jo
pop
div
xchg
mov
movsb
ljmp
push
stos
lret
or
or
stos
je
pop
push
pop
mov
adc
pop
mov
repz
cmp
pop
cmp
test
aad
cs
ss
sbb
adc
xchg
fisubs
push
adc
mov
loope
popa
cltd
jmp
xchg
adc
in
je
jp
xor
sub
sbb
jno
lds
mov
add
push
ja
arpl
and
fiadds
sbb
notl
data16
fsubrp
shlb
mov
mov
mov
imul
inc
fistl
add
mov
sahf
push
push
repz
int3
xchg
cli
add
into
orl
test
out
roll
dec
stos
sub
jns
xor
pop
jno
push
add
punpckldq
mov
adc
andb
loop
in
les
popa
inc
or
ja
cltd
cmp
xchg
push
sahf
pop
pop
imull
mov
sbb
stc
mov
adc
test
pop
xchg
cmpb
adc
mov
rclb
dec
xchg
mov
pusha
push
mov
xor
iret
jo,pn
or
add
xchg
leave
dec
mov
and
xrelease
xchg
and
je
mov
mov
jle
cltd
and
sbb
aaa
rorb
and
sbb
test
jne
sub
lcall
jmp
xchg
in
mov
xchg
enter
xchg
mov
mov
repz
jnp
fimull
ss
jl
ds
inc
sub
xor
insl
dec
pop
and
cmp
jbe
ljmp
daa
inc
xor
ljmp
aaa
cmpsb
jle
push
and
movsb
or
mov
jp
and
xlat
inc
int
mov
jecxz
ficomps
push
jmp
mov
push
cli
mulb
or
jg
out
adcl
fmuls
aaa
loopne
inc
jae
dec
cmpsl
shlb
pop
push
aad
repz
xchg
adc
jnp
repnz
repnz
fwait
jp
push
inc
push
lods
in
out
std
lcall
movsb
adc
imul
add
fucomp
push
xor
cmp
mov
xor
or
mov
testb
std
xchg
hlt
mov
add
cmc
xor
fwait
outsb
lock
fstpt
std
lcall
push
xchg
pop
push
imul
push
sti
fiaddl
xor
add
mov
fwait
pop
outsb
jnp
mov
aam
xchg
jmp
add
insb
insl
subb
imul
xor
ja
and
call
stos
sub
pushf
insl
movsl
lds
add
jne
dec
sbb
cmp
sbb
xchg
int
out
pop
out
jno
into
pop
out
pop
dec
lods
negl
arpl
sub
dec
loopne
sti
mov
cmpb
mov
push
adc
xchg
ret
subl
loope
lods
loop
lods
or
lret
fwait
mov
xchg
rcr
fcmovu
fisubs
call
hlt
sbb
aaa
nop
test
mov
mov
dec
mov
mov
sub
pop
sub
inc
testb
cmp
repnz
gs
imul
sbb
sub
ret
or
and
or
pop
clc
iret
mov
mov
pop
cmp
out
fidivl
adc
push
fwait
aaa
adc
decb
fcompl
add
imul
imul
and
push
loopne
jmp
pop
pop
lahf
testb
scas
mov
mov
mov
fcom
cmp
or
movl
outsb
jb
push
jl
add
out
jp
imul
call
pop
mov
xchg
inc
imull
leave
cwtl
or
push
cmp
popf
sub
and
pushl
pop
pop
mov
xchg
cmpsl
cmp
mov
sub
xchg
pop
adc
mov
mov
jo
mov
cmp
jmp
pop
push
les
mov
sbb
sbb
or
sahf
sub
cmp
out
sbb
or
jg
pop
xorb
decl
xorb
cmp
and
pop
and
and
adc
dec
push
or
test
in
fldenv
jge
cld
sub
push
xchg
rorl
inc
pop
or
jno
sub
pop
mov
divl
mov
lea
iret
mov
jecxz
mov
cmpsl
ret
sbb
cld
cmp
jbe
sbb
jp
xor
fistpl
jge
adc
cmp
mov
jmp
xor
xchg
jge
loopne
xor
aam
sarb
cli
arpl
scas
lock
fsubl
xchg
imul
or
pop
movsw
sbb
adc
mov
test
lret
popa
and
pop
cli
dec
cmp
jle
xchg
push
push
pop
mov
divb
jp
bound
or
jl
popf
clc
rcll
mov
push
jg
faddp
sub
insl
pusha
mov
enter
sub
dec
xchg
jne
aam
and
dec
sub
fwait
pop
xchg
sbb
inc
cs
pop
pop
addb
jnp
and
dec
repz
sti
shll
jb
push
fstpt
pop
hlt
mov
daa
lahf
cmp
xorb
mov
jl
pop
add
out
sbb
frstor
xchg
sti
rorl
daa
adc
jl
fldcw
push
xchg
aas
test
insl
xchg
aad
sbb
imul
loope
push
add
sbb
shlb
inc
xor
data16
jns
sbb
int3
dec
push
and
dec
or
popa
daa
jecxz
insl
incl
adc
jmp
test
fdivrs
jg
pop
xlat
punpckhwd
shll
pop
pop
xor
sub
shll
scas
add
into
pop
pop
das
xor
popf
lahf
jecxz
ss
ljmp
pusha
mov
dec
stos
sbb
popa
mov
out
push
add
scas
sbb
sbb
mov
repz
mov
fwait
cmp
mov
add
mov
ret
pop
insb
out
rorl
enter
push
fisttps
sbb
jns
or
ljmp
push
fstpl
adc
cli
movsl
dec
push
mov
mov
icebp
mov
lds
jne
adc
mov
and
test
jb
nop
mov
add
dec
fimuls
pop
out
or
mov
icebp
dec
mov
pop
sbb
andl
mov
mov
dec
clc
imul
and
fistps
add
sti
int3
fisubs
pop
cs
push
mov
mov
pushf
adcw
dec
or
jnp
icebp
out
aad
add
fisttpl
roll
rcrb
in
jo
cwtl
mov
test
push
and
mov
js
add
test
cmp
jl
push
and
sbb
jne
add
sub
jge
sti
jno
sahf
push
std
cmp
xor
aas
movsl
push
or
and
cmp
and
mov
sbb
outsl
and
add
fldenv
push
push
push
mov
inc
les
push
in
sahf
mov
pop
bound
mov
mov
jg
test
pop
push
mov
xchg
fsubr
add
jno
shrb
sbb
sbb
call
pop
mov
and
add
negl
adc
jp
in
inc
pop
pop
sti
pop
pusha
mov
cmc
adc
mulb
and
outsl
orl
cmp
sbb
sbb
gs
sbb
sahf
sbb
sub
lret
fxch
adc
cmp
test
fmull
into
jg
or
fcmovne
mov
jge
adc
or
shlb
in
sub
xchg
loope
xlat
sbb
sbb
addr16
sbb
in
xchg
rcrb
sbb
shll
mov
adc
sub
fistl
jg
sbb
data16
test
pop
lock
xor
cmp
sbb
pop
and
mov
push
in
repnz
mov
xor
rclb
scas
adc
cs
xchg
or
sbb
inc
adc
es
sub
das
pop
jl
fisubs
hlt
push
xchg
xchg
add
jg
scas
int3
outsb
enter
lcall
pop
lods
push
inc
scas
xor
dec
rcl
jle
clc
loopne
adc
aam
fisttpl
out
push
or
cs
mov
sbb
adc
int
out
mov
pop
cmp
dec
and
insl
sub
in
loop
leave
adc
jmp
sbb
inc
jns
mov
pop
xchg
lcall
idiv
ret
cmp
in
into
pop
push
or
lea
lahf
fwait
outsb
insb
and
sub
cli
ret
xor
push
lea
inc
imul
pop
stos
in
pop
cli
lcall
sub
je
shrl
or
mov
repz
enter
cmp
pop
xor
mov
sbb
rcrl
dec
movsb
xchg
inc
jge
out
aad
rcl
rorb
mov
ljmp
or
cmc
xor
shlb
pushw
push
mov
sbb
insl
imul
addr16
cld
popa
in
jle
cltd
hlt
fwait
or
leave
mov
pop
pop
cmp
dec
dec
es
pop
int
out
mov
das
imul
mov
inc
shrl
test
or
pop
xor
add
lahf
xor
dec
stos
inc
mov
test
das
aam
inc
xchg
lock
inc
push
and
fdivrl
cmc
insl
dec
movsb
cmp
lea
push
loope
xchg
in
jl
pop
shr
call
scas
in
push
inc
clc
flds
ds
pop
or
xchg
push
enter
sbb
mov
xchg
jmp
xor
nop
roll
in
testl
jmp
loop
movsl
sub
push
sahf
arpl
mov
sarb
or
inc
mov
mov
xchg
sbb
orl
ss
out
mov
fs
xor
xcrypt-cfb
cmpsl
out
fidivrl
xlat
xchg
clc
adc
hlt
aaa
mov
arpl
stos
jecxz
dec
aas
cmpsl
pop
popa
push
js
xchg
rcll
or
bound
xchg
lret
hlt
ffreep
andl
xor
or
hlt
ret
cmc
sub
jle
pop
mov
mov
lods
aad
insb
sbb
mov
xor
std
add
aaa
shl
mov
scas
inc
jns
lret
cmp
js
pop
call
test
jmp
push
imul
fbstp
xor
aam
ja
adc
aas
adc
shrl
xor
fisttps
fisttpl
mov
clc
out
jl
push
push
or
jbe
xchg
outsl
sbb
cmp
ja
inc
cltd
popl
mov
cmp
sub
fs
add
add
sbb
inc
clc
pop
sub
ljmp
jb
cmpsl
test
andl
adc
mov
or
iret
sahf
inc
js
xchg
or
icebp
inc
inc
mov
jle
push
dec
xor
insl
fadds
vmwrite
and
mov
inc
mov
mov
adc
pop
mov
fbstp
into
shrb
mov
addb
xor
lcall
arpl
push
jmp
bound
push
cmpsb
in
loop
mov
shr
insl
lds
push
jno
jb
enter
lock
sbb
add
ljmp
out
iret
pop
movsb
in
ds
xchg
add
fstpl
das
mov
imull
cmp
dec
loope
mov
test
fsubr
outsl
cmp
pop
sbb
fcomip
or
loope
hlt
pushf
aad
mov
add
and
cli
shlb
jae
rol
push
dec
push
add
push
pusha
pop
mov
and
adc
test
lcall
lahf
repz
jno
out
js
sbb
sub
fwait
sub
ror
popa
test
cmpsb
insb
pop
arpl
arpl
lods
push
outsb
push
idivl
push
fwait
sbb
sti
dec
cmp
mov
mov
je
arpl
mov
dec
xor
dec
add
fmull
pop
repnz
out
incb
pop
leave
pusha
mov
mov
mov
loopne
outsl
jnp
imul
fists
push
jne
jno
jp
and
fisubrl
pop
xor
inc
aas
or
xchg
jno
jns
cwtl
sub
pand
ds
idivb
cmpb
inc
or
mov
sbb
testb
hlt
or
inc
xor
inc
loop
cmp
inc
fiaddl
xchg
sbb
ds
jno
fildl
fwait
mov
dec
sbb
nop
cmpsl
mov
xchg
mov
jmp
xchg
dec
mov
dec
sti
jp
decb
dec
sbb
jmp
jnp
inc
or
push
inc
mov
push
nop
sti
mov
movsl
mov
shl
repnz
popa
add
add
jnp
or
cltd
xchg
cmp
xchg
imul
sub
mov
xchg
ret
pusha
cmpsl
daa
xlat
mov
push
push
jmp
jecxz
popa
or
adc
push
jns
xchg
xchg
wbinvd
cmpsl
jle
cld
les
addb
decl
fiadds
pop
push
sbb
jb
nop
call
and
sub
jp
pop
cld
adc
lds
int3
cmpsl
lcall
mov
test
xchg
mov
hlt
pop
cmp
lahf
imul
pop
mov
aam
rcrl
cltd
and
mov
jle
cli
fwait
push
movsb
cmpsl
ret
lods
ret
aad
xchg
pop
sbb
pop
icebp
add
inc
dec
sub
lods
xlat
xchg
add
cli
dec
xor
inc
loopne
ljmp
fsubr
mov
mov
in
gs
hlt
std
das
cmp
ss
ja
daa
push
sarl
mov
mov
mov
pop
or
mov
mov
stos
xlat
mov
cmp
call
add
dec
sub
daa
dec
lret
pop
push
nop
std
fisubl
lds
sbb
sysenter
pop
adc
leave
cmpsl
cmp
out
add
pop
xchg
pop
jl
sahf
xchg
sbb
dec
cmpsb
xor
movsl
aam
xchg
sbb
mov
push
repz
aaa
add
lock
and
out
xorps
mov
or
mov
mov
cli
subl
aad
lret
jle
cmp
xor
add
jb
cmp
jl
cmp
lods
pop
cltd
and
popa
dec
mov
pop
aam
xchg
imul
ss
sub
mov
mov
dec
aad
adc
cmpsl
imul
int3
es
or
adc
mov
aam
inc
fcmovbe
aad
stos
lcall
mov
adc
pusha
lcall
mov
stc
neg
mov
stos
dec
mov
cmp
test
mov
out
in
data16
test
jb
push
stc
hlt
daa
mov
xchg
pop
push
jno
aam
sbb
stc
add
mov
daa
dec
shll
adc
and
dec
adc
or
push
and
fiaddl
aaa
andb
push
or
push
adc
stc
hlt
push
sub
inc
cmp
inc
add
inc
xchg
leave
cmpsl
notb
lret
lcall
hlt
jne
fwait
jno
xchg
jmp
jmp
fsubl
fmuls
not
pop
sbb
bound
mov
repz
cmp
in
mov
cmp
pmovmskb
arpl
lret
lock
pop
push
and
rol
inc
cwtl
mov
jne
inc
or
loop
pop
add
jecxz
inc
adc
sahf
lds
or
push
mov
pop
aam
aas
enter
adc
lret
mov
inc
loope
out
sub
sahf
adc
andb
sbb
dec
notb
insb
outsl
jae
pop
pop
cmpl
jp
movsb
sti
loop
mov
dec
testb
in
loop
jnp
sarb
sbb
and
jmp
imul
aas
push
data16
shrb
jne
jmp
adc
rorl
cld
add
enter
dec
ret
sbb
shlb
das
sub
pusha
and
add
pop
or
hlt
mov
jg
or
jecxz
or
les
movl
push
cwtl
cmp
xlat
sbb
fld
push
idivb
jle
fimull
scas
aas
fwait
repnz
gs
out
ljmp
out
xchg
pusha
leave
jno
jmp
rorb
cmp
push
jae
mov
push
movhps
out
nop
fcmovnu
addl
jae
mov
and
sub
js
fbld
inc
cwtl
ficompl
clc
mov
fmull
dec
xchg
pop
inc
mov
add
xchg
not
lret
mov
cwtl
cmp
sub
adc
mov
cmp
mov
xchg
fwait
js
xchg
cli
cltd
mov
inc
cmpsl
fwait
mov
imul
movsb
stc
add
iret
xor
pop
fsubrs
addb
push
lret
sbb
inc
inc
imul
lret
mov
inc
lahf
jne
push
loope
mov
outsb
xor
in
sbb
scas
cs
mov
lock
cmpl
enter
mul
mov
ss
in
push
imul
inc
arpl
repnz
jle
pop
push
incb
cmpsb
push
push
je
repnz
pop
ja
pop
cmc
push
xchg
inc
jo
ds
jecxz
jbe
mov
mov
mov
adc
jle
cmc
add
xor
pop
cwtl
test
sub
popa
aas
rcll
test
sahf
mov
xor
jmp
fs
testl
push
add
dec
sbb
xsaveopt
data16
popl
mov
and
dec
xchg
rorl
cmp
dec
lods
mov
jb
add
cmp
cltd
popa
into
jb
push
cmp
popa
sbb
sbb
adc
xchg
ljmp
push
jno
mov
std
stc
push
mov
or
hlt
pop
inc
mov
dec
mov
adc
filds
cmp
popa
pop
jnp
shlb
pop
je
inc
sahf
movsb
scas
les
ss
add
das
or
xchg
or
ja
call
orl
and
add
addr16
mov
mov
jae
imul
fmul
sub
mov
mov
rol
cmp
sahf
testl
cmp
sub
test
push
push
push
hlt
xchg
pop
add
jo
fstl
xchg
cmc
or
push
inc
xchg
arpl
cmc
adcl
ret
stos
xlat
xchg
jno
fiadds
mov
jle
jo
push
rorl
out
test
out
ss
mov
mov
mov
pop
fisubrs
pushf
iret
mov
movsb
loopne
inc
into
es
push
xorb
aas
aas
adc
and
repnz
cmp
pop
cmp
inc
ljmp
dec
ljmp
cmp
sub
shlb
loopne
arpl
mov
or
xchg
mov
cmp
inc
jge
sbb
sbb
and
inc
fdivl
adc
test
scas
clc
adc
fisttpl
adc
shl
jnp
sbb
adc
mov
and
bound
insl
or
jne
or
or
inc
dec
inc
sahf
push
loope
inc
imul
int3
les
les
jl
push
test
sbb
ljmp
mov
in
icebp
jecxz
ret
inc
jl
iret
mov
or
add
inc
or
outsb
lret
sti
push
sbb
adc
pushf
divl
jge
dec
nop
pop
dec
mov
xchg
popf
popa
sbb
icebp
int
xchg
sbb
cld
adc
and
ret
mov
loope
xchg
ss
mov
pop
adc
and
fbstp
inc
fadd
imul
fcomip
out
cltd
mov
jo
stos
adc
add
pop
jle
imul
push
insb
sub
add
js
xor
insl
fdivs
dec
aad
push
jb
pop
imul
cmp
or
mov
and
pushf
jne
arpl
adc
mov
pop
mov
ret
je
mov
lock
fsubrl
data16
adc
movsl
filds
outsl
mov
cmp
mov
cld
push
aas
ret
dec
add
in
xor
std
inc
push
insl
loope
add
int3
mov
mov
dec
push
pushl
lods
dec
in
cmpsb
imulb
add
call
pop
pop
rcrb
or
mov
into
sti
jb
out
popa
pop
imul
push
pop
push
outsb
int
jl
outsb
jle
imul
xor
call
push
test
sbb
lcall
bound
cmp
fisubrl
xlat
sbb
fs
je
xchg
ficoml
jg
int
int
dec
cmp
dec
rcll
sub
sub
inc
roll
xorb
mov
scas
or
aam
xlat
mov
or
xchg
pop
push
ficoms
dec
insl
cmp
cmp
repnz
push
mov
mov
sub
add
addl
int3
cmpb
mov
shll
fildl
ret
idivb
es
fldcw
mov
adc
rclb
jb,pn
vmptrld
jmp
add
push
pop
jmp
lea
push
push
add
jnp
xchg
sbbb
cmp
push
dec
cmpsl
test
cld
xor
lods
addr16
lods
clc
int3
sbb
jl
pop
sub
add
mov
pop
push
adc
jnp
data16
icebp
sti
subl
push
pop
cmpsl
jle
and
ss
or
cmp
inc
test
lock
cmp
lock
dec
or
dec
std
xor
popf
test
shrl
push
xchg
xlat
bound
daa
adc
dec
cli
or
pusha
push
cmp
mov
push
mov
dec
cmp
sub
sub
mov
pusha
mov
fidivrs
mov
cmc
inc
adcl
ficoml
lcall
in
movsb
adc
sti
sti
stos
inc
mov
xor
scas
insb
sub
push
ss
arpl
sub
pop
mov
fs
jne
test
cmpsl
ret
cli
cmp
jp
or
xchg
and
or
xorl
xchg
stos
add
fdivrl
testl
stos
imul
cs
ljmp
mov
hlt
pop
ljmp
out
pop
addr16
sub
cmp
cmpsl
push
int
mov
repz
fmull
xlat
shr
and
push
popf
or
out
push
inc
adc
div
fwait
das
out
cltd
fdivs
lods
mov
or
xor
sahf
inc
adc
test
inc
movsl
jg
popf
pop
or
dec
xchg
pop
ffree
test
mov
mov
ret
jmp
pushf
sbb
ds
xrelease
cli
pop
and
int
mov
popf
adc
mov
mov
sub
mov
inc
popw
mov
aad
xlat
push
sub
pop
clc
push
fstps
inc
pusha
sub
test
into
pop
dec
xchg
movsb
and
push
stos
jl
cltd
or
lret
or
ds
cmp
test
adc
insl
outsl
adc
es
jo
aad
stos
ljmp
xchg
and
mov
fnstcw
cmp
in
enter
jae
fcompl
xchg
jp
or
pushf
sub
mov
push
cwtl
xchg
push
xor
adc
pop
rcl
enter
fwait
sbbb
mov
lcall
test
adc
add
pop
mov
out
pop
rcrb
scas
cld
call
aad
mov
out
push
adc
mov
test
subb
in
test
pop
loopne
inc
sub
xchg
sub
add
cld
out
scas
ss
mov
imul
gs
cmp
mov
sub
aas
inc
push
adc
movb
imull
add
add
cmp
jb
cwtl
pop
mov
les
mov
in
ljmp
movsb
testb
leave
xchg
push
les
into
pop
nop
stos
cmp
popa
lahf
jae
mov
sbbl
xor
pushf
push
mov
push
pop
and
mov
and
into
out
mov
lahf
mov
push
test
inc
enter
dec
adc
dec
popa
pop
sub
iret
mov
cmp
test
mov
mov
jbe
lcall
iret
les
inc
jnp
pop
in
mov
cmp
jp
push
clc
pop
xlat
scas
jmp
dec
adc
add
xor
and
fwait
ja
subb
mov
jl
jmp
je
ljmp
and
lds
sub
lods
test
sub
mov
xchg
das
sbb
mov
mov
push
jge
std
xor
js
mov
xchg
xor
movlhps
push
or
xchg
outsb
pushf
adc
out
ficomps
or
cmpsb
xor
scas
push
ja
jmp
xchg
jecxz
sub
pop
cmp
mov
lcall
adc
jp
aam
lcall
and
pop
jb
bound
adc
jl
aaa
cwtl
mov
mov
mov
mov
xchg
inc
cmpsb
stc
daa
adc
loope
jle
enter
sbbb
ja
mov
out
cmpsb
in
movsl
mov
clc
lods
dec
jp
pop
stos
jo
loop
or
out
stc
daa
xor
mov
test
jle
inc
ret
out
stos
sti
dec
mov
das
mov
jne
sub
notb
leave
aam
std
sbb
mov
jmp
and
cltd
mov
adc
icebp
lock
rolb
popa
adc
out
call
in
mov
and
js
or
push
imul
iret
and
and
lret
decl
rclb
in
jge
sub
adc
scas
cltd
repnz
mov
sub
mov
test
or
xor
adcl
cmc
push
dec
aad
push
rclb
fcmovbe
add
jg
flds
iret
jp
mov
push
outsl
nop
fdivs
cmpsb
int3
or
dec
mov
push
fstps
cli
inc
cwtl
pushf
adc
mov
sub
sub
movsl
out
addb
jg
sbb
jp
or
pop
sti
les
or
cmpsl
pop
pop
lea
popa
cmpsb
push
fdivl
scas
sbb
cs
loop
popa
pop
add
fnstsw
and
fnstsw
mov
jo
jecxz
rcr
and
and
mov
xor
orl
inc
shlb
movsl
sbb
in
jae
cltd
sub
mov
mov
into
icebp
push
cmp
subl
pop
arpl
call
inc
and
pop
sarl
cmc
dec
aas
mov
or
repnz
adc
cmp
cmpsb
fmulp
and
push
or
aad
inc
jnp
pusha
jns
jmp
adc
movsl
lods
out
push
fisttps
and
test
cmc
mov
mov
aaa
sbb
add
cmp
scas
jmp
repnz
add
rcll
ja
les
mov
dec
mov
jae
mov
pop
sub
dec
add
dec
dec
repnz
jo
xor
jp
stos
xchg
aad
jae
and
inc
outsb
jb
test
cmpb
ret
add
jno
sub
lods
or
cltd
push
mov
orb
std
lret
push
popf
xchg
adc
fisttpll
adc
fstpt
sub
jnp
pop
xchg
outsl
fistps
cmpsl
loop
mov
int3
add
pop
xchg
addr16
sub
enter
pop
xor
mov
and
ret
leave
movsl
push
aam
orb
popa
sbb
mov
addr16
addb
test
pop
fcmovnu
sub
xor
sub
add
aad
mov
sahf
stc
dec
rcrb
rcrl
inc
xchg
mov
mov
cmp
jmp
movsl
sbb
test
adc
shr
cmpsb
xlat
lret
mov
push
outsb
ja
cld
pop
dec
loopne
js
fisttps
sbb
mov
outsl
dec
jmp
test
cmp
adc
push
cmpsl
xchg
in
mov
jb
les
ljmp
dec
in
aam
cmp
jae
movsb
xchg
pop
loopne
rcrb
xchg
sub
insl
stc
sbb
mov
aad
pushf
mov
rol
js
jo
mov
loop
loopne
ss
dec
dec
inc
aaa
add
adc
js
add
pop
inc
dec
mov
pop
add
cmp
cmp
mov
test
in
fs
xorb
add
pop
dec
fadds
dec
inc
loope
lods
jnp
cmp
dec
cmpsl
test
and
jo
aaa
cmp
xlat
jl
push
dec
dec
cs
aad
repz
int3
data16
mov
rorb
out
jnp
cmpsl
cmpl
pop
adc
call
inc
negl
sbb
cs
sub
hlt
sarb
das
or
xor
sub
aad
add
xchg
roll
repnz
enter
xor
out
pop
or
jb
jle
xor
lea
xor
cmpsl
push
mov
leave
insl
test
stos
lods
sbb
dec
shr
jl
cli
arpl
dec
push
mov
pop
test
mov
cmp
lods
insl
push
push
push
and
aas
mov
outsb
clc
aas
xchg
ds
cmp
out
mov
mov
lret
inc
in
aaa
or
mov
rolb
jle
int3
addr16
cmp
mov
int
xchg
adc
out
cmc
out
lret
hlt
push
rcl
orb
sub
dec
fmul
sahf
shrl
xor
xor
in
imul
adc
cli
jne
incb
sub
jns
cmp
fidivl
jg
gs
sub
je
mov
and
inc
jb
sbb
fcmovnb
stos
pushf
sbb
or
stc
pop
repz
jl
push
faddp
cmc
mov
dec
cli
faddl
jge
imul
adc
jle
arpl
cltd
adc
dec
pushf
mov
stc
sti
mov
jns
imul
mov
sahf
test
ret
adc
dec
aam
dec
fs
lods
sbb
sub
jb
aas
into
daa
mov
xor
daa
xor
idivb
iret
ret
data16
cmp
in
stos
pop
inc
mov
ljmp
push
mov
mov
push
add
jecxz
xchg
outsl
aas
jae
mov
lods
lea
adc
notb
push
insl
fcoms
or
dec
icebp
mov
pop
cwtl
jbe
lcall
xchg
cmp
or
dec
mov
cs
test
adc
sub
out
out
adc
movsl
mov
test
dec
ds
out
inc
outsl
mov
mov
data16
fdivl
add
inc
cmc
dec
iret
push
shlb
and
fwait
mov
cld
mov
in
mov
fimull
mov
jmp
aad
aam
out
push
std
pop
add
xchg
mov
sbb
inc
mov
push
movsl
add
add
inc
cs
dec
mov
outsw
rorl
mov
mov
mov
xor
and
xchg
xchg
les
sbb
enter
icebp
add
lods
lcall
inc
mov
cmp
popf
out
mov
daa
mov
sub
xor
mov
out
and
cmpsl
es
mov
mov
enter
cmp
jge
inc
addb
and
push
in
scas
sbb
cmp
mov
add
jnp
mov
add
scas
call
jp
add
push
cld
mov
jp
into
inc
jo
fdivrl
clc
ja
mov
sarl
sub
movsl
sbb
xchg
xchg
xlat
and
imul
nop
sub
jno
imul
sub
test
insb
je
lea
loop
mov
icebp
inc
push
mov
xor
mov
popa
adcb
call
adc
cs
popf
sub
dec
add
push
dec
mov
sub
loop
aas
stc
shlb
orb
xchg
xchg
sub
les
adc
push
test
cwtl
in
ljmp
shrb
mov
push
iret
inc
ret
inc
fwait
mov
add
xor
mov
loopne
outsb
mov
fadds
pushf
and
dec
shr
mov
and
mov
or
seto
out
pop
sbb
fcompl
in
sarb
daa
imul
out
les
cmp
lods
xchg
out
adc
jne
das
dec
jne
jle
fisubrs
stc
pop
call
decl
pusha
dec
das
or
cli
mov
xorb
lods
pop
push
adc
in
ret
ljmp
mov
scas
or
push
jl
movsl
cmp
inc
xlat
xor
int
jge
ret
leave
jb
cwtl
cltd
add
fiadds
ret
sarb
jle
roll
or
lds
jns
mov
clc
arpl
push
mov
int
test
sarl
mov
dec
pop
es
popa
sarl
and
xchg
mov
sub
adc
xchg
pushf
test
xchg
jnp
xchg
jne
lcall
jbe
lea
outsb
pop
imul
mov
faddl
outsb
dec
leave
or
inc
aaa
movsl
fsubrp
data16
lahf
aas
test
push
dec
inc
ss
pusha
loop
rorl
xor
daa
xchg
loope
xchg
test
test
jle
jecxz
inc
test
rcll
push
insl
and
push
jno,pt
push
xor
fs
push
sub
stos
adc
push
test
jmp
sbb
mov
push
lahf
repnz
stos
std
dec
add
xchg
fmuls
lret
xchg
inc
movsb
pop
movsb
scas
sbb
in
push
sbb
and
adc
cmpsl
and
xor
aas
fadds
add
mov
lds
mov
xor
fildll
cmp
mov
lahf
out
or
hlt
enter
jno
daa
cmp
pop
add
je
jnp
fistpl
aam
pop
jbe
pop
jnp
mov
add
mov
jne
sub
jle
cli
ficomps
testl
mov
add
je
jo
push
sbb
subl
sbb
adc
std
xor
pop
xchg
mov
pmulhuw
sub
sahf
and
aas
xchg
inc
insb
push
fwait
test
roll
xchg
arpl
dec
push
cmpl
lods
and
sti
int3
jl
inc
xchg
jl
pop
cld
ja
xor
aam
ret
inc
bound
lret
sbb
mov
adc
fsts
ret
adc
ss
out
add
aas
lret
clc
outsl
loop
inc
dec
pop
mov
ss
icebp
es
gs
mov
je
movsb
fmuls
push
cli
dec
jne
fwait
dec
mov
and
inc
pop
xor
stos
fmuls
rcrl
out
das
daa
sbb
sar
xor
xor
and
stc
cmp
push
clc
sub
xchg
test
mov
shrl
jl
loope
mov
pop
xor
bound
hlt
pop
cwtl
adc
fwait
xchg
mov
cmpsl
test
dec
sub
insl
js
filds
inc
or
jmp
es
pop
xor
subl
scas
xchg
nop
mov
and
push
rorl
sbb
push
mov
xchg
push
mov
rcrb
pop
test
mov
ljmp
fisttpll
shll
ss
cli
lods
mov
ljmp
sbb
mov
dec
in
ja
or
adc
adc
rcll
loopne
rolb
cmc
fwait
fwait
jns
inc
js
jle
jo
sbb
mov
pop
mov
pop
into
dec
out
mov
sti
jo
and
loop
push
in
push
mov
rcrl
incb
dec
pop
dec
push
insl
bound
push
cmpsb
pop
test
roll
pop
pop
dec
mov
mov
xor
push
jbe
adc
call
or
push
push
xchg
mov
cmp
aas
and
loope
bound
inc
jmp
leave
push
popf
pop
mov
mov
pop
adc
pop
sbb
push
sbb
and
jns
lods
pop
sahf
cmp
pushf
jbe
out
outsl
ss
fcomps
jl
or
xlat
jg
outsl
idivl
test
add
xchg
lret
dec
call
jp
cmpsl
cwtl
aam
add
pop
insl
repz
xlat
dec
xchg
fcomps
adc
hlt
or
push
aad
mov
inc
sar
adc
adc
aaa
mov
fs
sti
cmpsl
ja
out
and
push
push
pop
mov
inc
cmpsb
pop
pop
pop
fwait
cmp
into
out
push
out
in
and
push
jno
xchg
div
movsb
or
enter
sub
ss
mov
out
push
or
dec
fmuls
cmp
adc
faddp
scas
hlt
pop
push
or
sub
mov
outsb
mov
mov
adc
adc
stc
jmp
insl
xchg
stos
mov
rep
sti
call
repnz
fdivrp
stc
push
popf
mov
cmpsb
mov
mov
mov
cmp
mov
call
pop
out
and
out
fmul
faddl
ljmp
and
mov
push
adc
jmp
sub
fimull
imul
clc
les
fs
test
pop
cltd
nop
xor
or
cmp
pop
adc
xchg
mov
daa
mov
icebp
shll
addr16
jmp
mov
mov
xchg
cld
in
movsl
dec
bound
mov
outsl
std
sbb
add
inc
jg
dec
rolb
scas
or
pop
add
daa
test
movsl
mov
jb
cltd
imul
dec
outsl
and
in
jne
mov
xchg
hlt
frstor
pushf
jmp
das
jmp
mov
jne
lret
push
mov
imul
ret
daa
inc
push
sti
scas
mov
es
sub
les
fisttpl
mov
popl
mov
mov
xor
xor
dec
inc
addr16
push
cmpsl
jecxz
sub
sub
add
mov
das
jl
adc
ljmp
addr16
cli
inc
stc
push
pusha
xor
xchg
push
jl
scas
adc
lds
xorb
pop
pop
imul
ret
xlat
iret
push
pop
ret
lods
mov
movsl
sbb
ficomps
xchg
jnp
test
xor
inc
sbb
sbb
fdivrl
movb
jle
aad
sub
jle
pop
add
dec
inc
xchg
call
lcall
dec
pop
adc
mov
lock
mov
push
fldenv
rorb
dec
addl
dec
negl
or
rolb
rcrl
lock
lret
dec
sbb
insb
cmp
cwtl
and
dec
mulb
roll
out
ret
lahf
xchg
movsl
pushf
inc
testb
mov
dec
xchg
xchg
lahf
xchg
mov
push
ja
ds
jae
xchg
push
inc
pop
push
sub
lahf
pop
inc
icebp
adcb
bound
lods
xor
jnp
mov
in
add
and
sub
mov
dec
push
adc
pop
xchg
and
xchg
out
mov
cmc
xchg
jo
hlt
xor
data16
push
leave
and
shr
mov
aaa
stos
pop
rclb
mov
cmp
jb
std
js
mov
jecxz
fs
pusha
fildll
jp
jns
jns
inc
mov
in
sbbb
mov
pushf
test
stc
sbb
sahf
mov
mov
xorb
cli
pop
xchg
or
and
dec
mulb
test
dec
jge
rcl
int
and
jge
jecxz
cmpsl
add
adc
aam
jge
mov
jo
sti
or
aaa
scas
add
ss
outsb
sub
jbe
sbb
lret
mov
pushf
add
pop
dec
addr16
push
dec
cmp
int
push
mov
daa
in
push
push
xor
mov
adc
call
xchg
shrb
pop
jae
insl
mov
mov
lods
pop
or
adc
pop
bound
fs
pop
lahf
clc
xchg
fiaddl
and
pop
mov
out
mov
imul
ja
mov
inc
xor
fldcw
push
pop
shrl
roll
stos
pushf
xchg
add
and
sub
cltd
repz
xchg
mov
call
mov
cmp
mov
xchg
inc
mov
lds
in
sub
push
popf
cmp
lret
lcall
xchg
jnp
mov
inc
lret
insb
lahf
out
jo
mov
mov
aam
test
cmc
ja
loopne
add
loopne
sarb
jmp
adc
mov
mov
ljmp
xor
mov
jle
call
stos
or
iret
scas
lods
outsl
fisttpll
mov
mov
and
xor
xchg
sbb
xlat
out
test
inc
xchg
dec
dec
cmp
sub
arpl
movsb
jecxz
jnp
scas
iret
dec
jns
das
push
aam
jnp
cmpsl
pop
outsl
jmp
ja
sub
addb
inc
shrb
mov
popa
dec
dec
out
cmpsl
mov
decl
outsb
xor
fs
mov
jg
sti
cltd
push
or
jne
mov
aam
cwtl
das
mov
adc
mov
xor
sahf
test
pop
adc
adc
leave
xor
xor
push
sub
mov
or
jle
rclb
xchg
loop
adc
push
jecxz
mov
js
cmc
mov
cmp
pop
cmc
hlt
in
jo
rol
and
pop
scas
jnp
mov
popf
or
and
or
stc
setbe
or
je
imul
jle
int3
je
nop
loopne
or
xor
mov
movsl
push
pop
xor
enter
sub
sub
mov
leave
mov
xchg
data16
jno
stos
cmc
hlt
and
out
add
cltd
sti
jl
insl
sbb
mov
fiaddl
jo
cmp
scas
fistl
mov
dec
pop
and
add
xorb
test
push
sbb
add
pop
shrl
enter
addb
int
bound
retw
push
push
jns
adc
push
lds
sbb
mov
pop
fldenv
gs
pop
sub
repnz
cmp
adc
aaa
test
inc
jmp
es
or
jae
jl
bound
inc
sar
mov
ja
movsl
test
add
adc
jg
adc
btr
inc
cs
jge
push
push
dec
cld
mov
adc
adc
jl
dec
pop
sbb
fdivr
scas
add
mov
inc
in
dec
sti
nop
dec
adc
mov
xchg
int
sub
jns
bound
add
dec
xor
push
xchg
loope
arpl
inc
or
pushf
cmpsl
aas
lea
rolb
pop
xor
subb
rcl
ficoms
adc
lcall
test
or
sti
pop
mov
push
xchg
sub
pop
add
insb
sub
adc
pop
loop
inc
add
cmpsb
fs
xor
push
out
lret
pop
pop
and
adc
mov
sbb
fadds
imul
das
outsl
fmull
clc
push
popa
adc
pop
inc
inc
add
gs
pop
popf
popf
int3
roll
xchg
outsb
cmpsb
lret
jnp
stos
std
or
dec
aas
lcall
push
jne
mov
pop
pop
hlt
dec
cld
stos
inc
cmpl
inc
adc
xchg
test
and
cmp
or
xor
push
shll
mov
pop
pop
or
int3
aaa
mov
clc
push
cld
xchg
test
adc
mov
mov
xor
mov
loopne
in
push
pmuludq
jnp
ds
cmp
ja
test
imul
add
sti
shlb
jecxz
add
ret
fidivl
lock
mov
into
cld
jnp
and
cltd
inc
inc
nop
cwtl
and
ljmp
dec
adc
dec
adc
mov
mov
push
jmp
mov
xchg
or
out
scas
cmp
test
lods
jg
push
test
daa
cmpsb
xchg
add
mov
add
and
inc
mov
jecxz
xor
aas
iret
jecxz
and
sarl
jne
dec
inc
jae
rol
lds
addr16
jnp
xchg
test
iret
jns
sub
mov
fwait
test
js
shlb
jg
mov
pop
or
lahf
push
or
lahf
xchg
js
repnz
shll
add
lcall
jecxz
mov
andb
cmp
xchg
imul
adc
fwait
sti
adc
add
cld
sub
jecxz
add
cmpsl
sub
mov
cmp
push
pop
jbe
leave
cmp
nop
cmpsb
scas
ds
insl
iret
pop
mov
xchg
add
ds
test
mov
mov
imul
ret
xor
and
sbb
jns
pop
int
data16
incl
jb
cltd
pop
cmp
clc
lcall
test
jecxz
jg
xchg
push
cmc
or
fs
cltd
add
pop
icebp
and
fisubrl
add
push
cmp
cmp
pop
or
mov
les
pop
loop
sub
or
lret
mov
scas
mov
pop
jns
jmp
or
push
out
push
jle
std
dec
push
popa
sub
and
push
dec
inc
sub
jmp
popf
movsl
orb
pop
xor
sbb
mov
dec
mov
adc
int3
clc
mov
test
jp
mov
shl
pop
jmp
fwait
and
xchg
dec
mov
add
loopne
xchg
fdivrs
ret
aas
cwtl
xchg
adc
jle
dec
shrb
std
mov
xchg
push
fidivl
jno
adc
sub
mov
cmp
jnp
push
cmp
leave
es
mov
sbb
subb
or
pop
andl
cs
mov
xor
sarb
xchg
out
mov
cltd
hlt
ja
ja
jo
dec
cmp
add
jge
adc
rcrb
repz
shll
sub
xchg
and
sbb
add
mov
stos
out
add
stos
mov
xorb
cmc
dec
mov
jecxz
stos
mov
and
cmp
out
testb
or
sub
mov
mov
or
xor
cwtl
jg
jns
and
pop
dec
aam
pop
insb
dec
addb
and
push
sub
xor
addr16
js
add
mov
into
sub
or
pusha
xchg
mov
push
pop
jno
lock
into
xchg
pop
arpl
jle
int3
lret
repnz
dec
outsl
mov
mov
into
bound
push
insl
jne
adc
pop
dec
dec
lea
ja
mov
lods
jp
cmpl
push
dec
sbb
jmp
mov
inc
and
pushf
pop
jge
cmp
pop
mov
stc
pop
ds
fisttpl
rolb
cmp
xchg
popa
add
mov
and
adc
mov
inc
sbb
xchg
int
sbb
xchg
cmpsb
out
adc
pop
push
jbe
std
xor
mov
out
mov
add
aad
repnz
sbb
imul
hlt
inc
xchg
push
pop
push
xor
jbe
andb
fsubs
jns
xor
inc
mov
inc
xchg
xchg
test
xor
push
sarl
xchg
sbb
psrlw
dec
std
sbb
mov
mov
cltd
out
test
pop
push
and
sbb
inc
nop
testb
insb
fst
sbb
mov
roll
subb
bound
pusha
sub
cmp
jp
inc
sbb
lea
sub
hlt
adc
test
mov
mov
iret
ficoml
sbb
pop
inc
test
mov
sub
sbb
mov
sub
dec
xchg
scas
push
xchg
pop
adc
lahf
js
lods
mov
cmpsl
sbb
cmp
aad
rdmsr
call
jl
mov
xchg
mov
inc
jno
popf
inc
jo
jne
cmp
popf
dec
ds
js
lock
out
inc
sbbl
pop
jl
sbb
lock
sahf
in
jno
sbb
in
jbe
ja
mov
sbb
inc
out
das
daa
outsl
sbb
pop
add
lahf
cld
adc
adc
pop
mov
fsubrs
dec
inc
xchg
xor
inc
mov
inc
jno
xchg
imul
fucomip
jb
or
stc
sbb
int
xorb
scas
sbb
out
pop
shrb
stos
dec
xchg
xchg
jo
inc
xor
or
dec
and
pop
lock
jbe
daa
negl
addr16
test
mov
pop
or
xchg
outsb
loopne
or
fcmovb
pushf
fadds
arpl
aad
call
leave
inc
jle
in
dec
cmpsl
test
fwait
mov
cmpsl
loopne
mov
cmp
shll
mov
jge
add
cmp
push
push
test
mov
sbb
mov
xchg
cmpsl
dec
lods
in
inc
sbb
cmpsl
cmp
cmpsb
push
loopne
and
lock
mov
or
push
pop
xchg
int
fadds
std
pop
lea
in
outsl
mov
and
insl
stos
adc
jnp
call
arpl
test
jae
in
stc
dec
js
adc
daa
pop
cmp
xchg
xor
pop
mov
bound
push
mulb
fnstenv
int
scas
jp
int3
or
out
cltd
push
push
mov
mov
iret
xchg
mov
push
inc
push
loop
sub
ljmp
or
loop
or
add
pusha
xor
cmp
sbb
repz
dec
cmp
ja
and
stos
xchg
inc
ret
mov
jae
xor
sbb
gs
lock
mov
lds
lea
rorl
or
mov
fstps
rcll
mov
xor
sbb
mov
std
imul
push
imul
jmp
add
jbe
lret
push
mov
push
clc
jge
jl
sub
mov
sbb
xchg
cmp
mov
ret
and
xchg
push
int
dec
cld
jnp
sti
and
lret
push
sbb
dec
or
dec
jle
jg
mov
loope
and
cmp
popa
popa
push
inc
xchg
mov
push
add
aaa
inc
mov
xchg
test
jmp
mov
into
shlb
loope
test
xor
cmp
cmpsb
lock
js
outsl
int3
sub
fcoml
mov
in
cmpsb
mov
jo
or
add
push
ss
fistl
xor
xor
mov
mov
push
sbb
js
repnz
jp
clc
jae
push
add
ficompl
mov
xchg
mov
mov
in
jp
dec
adc
push
push
mov
shrb
pop
js
fildl
sub
xlat
cmpsb
inc
or
aam
lods
inc
daa
data16
or
loopne
pop
jno
xor
popf
fnstsw
inc
out
scas
jle
test
in
xorb
push
arpl
sete
xchg
test
inc
dec
xor
fsubs
mov
cmp
test
rcr
cli
hlt
shl
lret
inc
and
adc
cmpsb
dec
adc
out
sbb
aaa
test
dec
dec
mov
out
add
out
inc
into
or
idivb
adc
pop
pop
add
int
rorb
in
push
je
iret
ret
adc
out
xlat
push
dec
insb
sub
mov
rorl
movsl
movsb
pop
sub
out
stos
lds
jl
mov
push
pop
popf
repnz
into
mov
or
pop
sub
adc
xchg
cmpsb
jl
out
lcall
lods
lea
test
scas
inc
sbb
enter
sub
sub
int3
mov
pusha
jb
inc
and
fnstcw
cmp
sbb
pop
dec
insl
sub
in
dec
test
pop
cs
xchg
daa
or
push
inc
sub
aad
and
push
or
push
sub
ja
jne
shll
js
push
leave
push
xor
jno
enter
stos
ret
inc
fists
pop
loop
jno
cmp
lahf
hlt
inc
cmp
dec
mov
es
and
add
adc
cmp
ret
xor
hlt
dec
sbb
sti
je
xor
lcall
sbb
inc
jb
cltd
test
popa
test
aas
mov
ljmp
mov
sti
and
dec
push
add
lods
mov
inc
dec
inc
jb
mov
add
and
out
sub
push
or
add
leave
cmp
push
xchg
dec
notl
push
ja
adc
scas
jl
dec
das
les
call
push
sbb
fs
inc
or
mov
movsl
push
mov
fmul
cli
or
ret
mov
popa
mov
adc
mov
call
int3
psubusb
inc
jl
push
in
sub
add
lret
xchg
and
orl
adc
repnz
mov
test
mov
jne
jae
aaa
lock
push
add
cwtl
loop
adc
scas
or
inc
jbe
sarb
xor
xorl
sub
push
xor
flds
and
jb
mov
lret
lcall
ljmp
pop
pop
xchg
add
test
cmc
test
clc
ret
inc
outsb
int3
mov
pop
in
lds
cmpsl
and
cmpsb
fdivp
xor
mov
inc
aaa
sub
popa
mov
adc
fidivrl
jecxz
rol
adcb
test
shrl
push
das
xor
xchg
gs
sbb
divl
aad
shrl
sbb
movapd
or
movsl
push
inc
cmp
call
movsl
jp
ficoms
ror
xchg
and
mov
xor
hlt
jmp
cmpsb
negb
dec
test
sub
mov
xor
and
rorb
jecxz
push
sub
lock
test
jno
xchg
ja
lcall
adc
xchg
push
bound
mov
out
gs
or
rcrb
xchg
add
jnp
mov
jae
ja
lret
ret
inc
push
sbb
addr16
pop
cmp
inc
repz
in
xlat
ja
loopne
jl
in
and
aaa
sbb
je
das
aad
mov
stc
jo
jno
js
je
std
push
xor
push
call
ja
mov
and
popf
mov
je
nop
add
push
shrb
stc
out
sub
pop
add
jnp
pcmpeqb
jl
cmp
add
repnz
ror
pop
jle
sti
out
mov
xchg
inc
sub
mov
xor
pushf
sub
clc
into
xor
sub
push
mov
loop
sbb
lea
and
jnp
mov
dec
and
lods
mov
sub
cmovle
mov
ja
jae
iret
mov
fnstsw
call
mov
dec
lcall
jbe
mov
call
xor
pop
xor
sub
sti
mov
mov
lret
test
mov
es
add
or
imul
and
into
nop
push
xorb
lods
inc
clc
sub
insb
dec
and
jecxz
sbb
ror
mov
mov
aaa
inc
and
and
xchg
inc
lds
clc
inc
xchg
or
push
lds
sbb
loop
and
test
shlb
shr
in
pop
sub
xchg
or
jns
adc
xchg
mov
add
insl
insb
xchg
fimuls
cld
in
subb
inc
pop
pop
ret
mov
inc
test
ret
ljmp
xchg
pop
ret
adc
aam
pop
lcall
ds
in
xchg
cmp
lcall
shl
add
pop
addr16
pop
imul
lds
out
xchg
xchg
ss
or
into
data16
jp
rolb
insb
data16
inc
push
in
int3
iret
daa
nop
rclb
lods
xchg
mov
and
mov
jns
sbb
sub
jecxz
cltd
jns
pop
icebp
sub
lock
lret
clc
jbe
jl
fwait
loop
pop
mov
int
mov
push
xor
sahf
sbb
add
mov
movq
mov
xchg
ds
aaa
daa
in
testl
movsb
pop
lock
ss
jle
outsb
ds
call
sbbb
test
xor
pop
sti
cltd
xchg
pop
scas
cs
addr16
adc
mov
and
js
jmp
xchg
and
lock
mov
out
sbb
mov
push
jnp
push
and
pop
add
out
or
sbb
lds
stc
push
xlat
out
mov
subl
cmp
ds
int
inc
rcl
add
xor
add
in
hlt
test
cmc
mov
in
orl
cwtl
mov
test
and
jb
in
dec
and
test
imul
mov
mov
adc
dec
or
cmpsb
mov
push
out
pop
or
dec
push
push
jb
cmpsl
fs
je
cmpsb
jno
fwait
sbb
out
adc
push
xchg
cmpsl
lret
jns
aam
ljmp
ljmp
lret
and
sahf
jae
outsb
add
push
test
mov
fnsave
adc
xlat
mov
mov
mov
or
mov
sets
aam
cmpsb
ficoms
insb
push
addr16
aaa
push
repnz
insl
out
xchg
push
nop
push
cs
sbb
xchg
fisttps
js
inc
jp
mov
movsb
scas
aas
cmc
test
std
mov
push
into
adc
pop
cmpsb
cwtl
or
dec
lods
cmp
ja
stos
loopne
adc
int3
loope
insl
ret
pop
push
add
mov
push
ret
fidivrl
pusha
mov
pop
daa
push
xchg
out
std
push
sbb
push
es
incl
scas
inc
cmp
dec
ret
aas
rcrb
adc
cmp
or
xor
inc
jbe
loop
loopne
insb
test
jmp
enter
sbb
data16
mov
push
cmp
aaa
nop
mov
in
popf
stos
enter
out
arpl
mov
rorl
fidivrs
inc
mov
int3
jbe
jp
push
mov
inc
xchg
pop
cmpsb
cmp
cld
or
cld
jmp
cwtl
mov
in
xor
pop
clc
cmp
sbb
fisttps
int3
stc
xor
fadds
into
xchg
mov
xor
mov
das
inc
push
in
dec
fimuls
adc
fimull
mov
idivl
push
jnp
mov
orb
seto
insl
outsb
xchg
adc
ja
xchg
cwtl
lcall
xor
lods
leave
rcrl
mov
mov
cwtl
dec
call
mov
repnz
inc
inc
es
dec
pop
cld
push
mov
xchg
cmpsb
ja
push
sub
xchg
sahf
icebp
fildl
sbb
push
push
mov
cmpl
ljmp
and
dec
mov
sbb
pop
dec
bnd
incl
dec
add
icebp
pop
sub
cli
add
sar
jmp
mov
inc
mov
sub
fs
int3
repnz
arpl
lcall
push
mov
xchg
add
sub
sub
pop
notl
mov
cltd
mov
pop
push
push
sub
lahf
dec
lea
mov
or
repz
inc
lods
inc
jge
xor
cld
inc
adc
enter
or
imul
push
inc
adc
sbb
jmp
ss
cli
loope
cmc
mov
hlt
xchg
jns
add
adc
dec
cld
xchg
out
pop
fistps
lret
data16
daa
pop
and
pushf
pop
fcmovnu
loope
pop
jbe
push
dec
jbe
sbb
repz
dec
mov
push
mov
lods
and
dec
imul
sbb
push
test
push
jge
mov
mov
fstpl
into
in
lret
pop
push
sbb
inc
xor
jge
in
cmpsl
inc
or
add
aaa
mov
dec
and
lods
cmp
or
lds
dec
mov
pop
lahf
or
mov
scas
dec
jnp
aam
pop
xor
lcall
dec
out
insb
jae
jo
ss
enter
inc
lock
ljmp
das
sbb
xor
ffree
clc
pusha
mov
int3
outsl
ljmp
imul
mov
xchg
jno
xchg
jnp
jbe
xorl
ljmp
sbb
cmpsl
and
xchg
and
aad
mov
mov
mov
test
inc
repz
repnz
test
mov
inc
mov
lods
dec
movsb
sbb
test
push
cmp
jns
cld
ljmp
jb
cmp
add
xor
mov
inc
ja
cmp
lods
push
adc
mov
mov
push
or
xchg
jb
mov
stos
mov
mov
cmpsl
sarl
out
aas
dec
stos
jecxz
or
xor
sub
insb
mov
push
dec
out
mov
mov
movb
aaa
sub
test
inc
stos
add
fadd
xchg
je
or
mov
clc
mov
repz
xor
arpl
sbb
daa
pop
or
add
dec
insl
inc
or
into
nop
mov
ret
and
sbb
dec
cwtl
dec
push
gs
push
xchg
insb
cmp
sub
cmp
ljmp
ret
out
cmp
dec
or
sub
rolb
es
cmp
push
mov
test
xchg
sbb
ljmp
mov
push
add
or
add
or
xor
dec
mov
jo
mov
iret
xor
adc
xor
fs
insl
repz
sub
push
lcall
inc
xchg
mov
aam
sub
mov
or
push
jbe
ret
scas
or
cmc
lret
mov
movsb
testl
mov
sbb
iret
loope
addr16
fcoms
adc
bts
mov
cmovs
leave
clc
pop
rorl
mov
jnp
jg
pop
mov
fincstp
test
lcall
or
push
pop
pop
or
lret
ror
ret
adc
fistpll
push
ret
orb
inc
xchg
adc
fsubl
test
mov
inc
int3
dec
mov
adc
sbbl
mov
cwtl
sar
mov
pushf
sub
add
lret
xchg
push
arpl
sti
pop
or
call
push
imul
js
cmc
lea
out
std
xchg
sbb
pop
mov
jb
sub
xor
ret
cmp
xchg
stos
dec
in
mov
or
cmp
orb
jmp
rcrl
mov
jae
inc
adc
cltd
sub
push
mov
dec
sar
fbstp
mov
dec
cmc
test
ret
pop
or
sub
adc
es
xchg
cmp
dec
movsl
and
lret
mov
pop
testb
out
xchg
xor
in
insb
and
sbb
mov
enter
outsl
into
scas
imul
sub
sub
roll
push
lods
in
aaa
push
stc
mov
push
ficompl
jg
call
dec
fsubrs
imul
pop
adc
jl
or
xchg
int3
xor
mov
push
cmp
mov
dec
inc
pop
jle
cs
push
mov
repz
lea
and
cld
jbe
int3
xorl
jns
jp
adc
mov
sbb
into
ss
mov
cwtl
test
mov
in
and
mov
mov
scas
ret
pop
movsl
into
test
pop
dec
les
repnz
dec
lods
in
aad
dec
mov
ljmp
scas
mov
jge
dec
xor
inc
call
fucomi
dec
mov
lret
out
mov
rorb
xorb
cld
outsb
xchg
test
insb
mov
cli
shll
cmp
cmpsl
adcb
lds
mov
enter
std
mov
cmp
mov
test
ja
aam
jb
imul
int
pop
push
loopne
adc
popl
fsubrs
mov
mov
sub
or
cmp
cmp
or
insb
shll
sahf
mov
into
mov
sub
aad
ficompl
jae
aad
insl
inc
inc
mov
fcoms
aas
adc
je
cwtl
mov
bt
jne
inc
and
cmp
shll
or
popf
mov
imul
fs
cmp
xchg
movsb
daa
fsubl
rorb
pop
cwtl
cmp
mov
mov
stos
loope
sub
fstps
mov
and
and
pop
hlt
adc
test
and
cmp
loopne
andl
add
ret
bound
sub
lret
push
cltd
adc
mov
divl
movsb
outsl
int
sbb
fsubrs
outsl
and
jmp
fcomps
mov
push
sahf
stos
shlb
into
in
push
jmp
fsubrs
mov
mov
fxch
inc
orb
shl
pop
repnz
data16
add
stos
out
pop
out
mov
bound
mov
cmp
stos
ret
lahf
cmp
ss
inc
fiaddl
rcll
out
fcoms
xchg
idivb
fimuls
int
adc
push
sbb
pop
andb
jnp
add
cmp
js
clc
adc
aaa
fcmovnb
cld
arpl
mov
mov
mov
add
out
in
sbb
adc
and
adc
fidivrl
pop
mov
outsb
je
popf
ja
lcall
inc
jns
stos
fsubs
lds
leave
scas
jl
xchg
add
insl
lock
xchg
mov
xchg
xchg
xchg
adc
test
fidivrs
ret
sti
pop
jecxz
pop
ja
push
pop
stc
jg
push
or
ret
xchg
cmp
dec
and
das
dec
push
clc
pop
jp
imul
and
xchg
sbb
push
pop
or
adc
mov
mov
jl
out
dec
fs
push
fsubs
repnz
test
popa
jb
sub
xor
aad
mov
xchg
push
sbb
or
jnp
lcall
rolb
pop
jae
sahf
sbb
cmpb
stos
jnp
jae
xlat
repz
jo
push
mov
std
sbb
repz
sub
in
pop
test
aas
mov
sahf
mov
dec
nop
xor
cld
sub
pop
xchg
mov
and
es
adc
dec
clc
sub
jl
into
xor
mov
mov
mov
push
xchg
pop
in
test
or
inc
push
imul
lcall
addr16
fidivrl
aad
in
jae
loope
dec
xchg
dec
mov
js
rorl
xchg
out
into
insl
rcrl
out
and
mov
pop
sbb
data16
pop
ss
dec
jo
jnp
aaa
movb
sub
push
mov
cwtl
pop
test
mov
repz
and
dec
mov
or
leave
adc
add
lock
mov
adc
dec
les
inc
sar
push
fadd
pushf
dec
sub
or
inc
sahf
daa
movsb
stos
ficomps
mov
inc
sbb
test
stos
iret
adc
dec
lods
rolb
mov
cltd
js
adc
pop
mov
nop
clc
ljmp
adc
sub
jge
or
rol
sti
adc
xor
add
lods
leave
lea
out
out
movsl
add
or
fidivs
mov
mov
lret
lods
pop
push
xor
movsl
jmp
rcr
push
mull
mov
divb
imul
mov
ja
sahf
insb
xchg
pop
and
sbb
cs
call
push
in
into
aad
faddp
sbb
test
sbb
add
mov
orb
push
faddl
adc
dec
jae
addl
mov
or
adc
fimuls
xchg
insl
scas
fdivr
pop
lret
mov
inc
aam
xchg
pop
fucomi
aaa
cmp
ret
mov
std
cmp
int3
mov
lahf
outsb
pop
mov
bound
mov
mov
xor
and
or
and
sub
fisubrs
setg
repnz
cmp
push
jge
test
in
sbb
subl
xchg
jecxz
cltd
imulb
je
pop
and
es
xor
mov
jmp
popf
xchg
inc
cmp
adc
dec
loop
ss
cmp
movsb
lret
dec
cmpsl
jg
pop
je
inc
cld
xchg
lods
shl
dec
stc
sbb
pop
push
dec
mov
imul
adc
in
and
mov
xor
lds
je
in
mov
add
add
ret
pop
or
rcll
mov
mov
xor
insb
adc
and
xlat
pusha
cmpsb
cmc
dec
je
rorb
int3
jns
movsl
add
pop
mov
sbb
cmpsb
in
outsb
xchg
mov
jg
movsb
jo
mov
nop
add
push
cmp
mov
loopne
cmp
or
push
mov
mov
imul
mov
sarl
cld
loopne
loope
ret
inc
sbb
jl
sub
push
add
mov
fcomp
or
ds
and
arpl
in
mov
pop
xor
pop
imul
or
jp
gs
mov
and
movsb
jnp
jae
shr
mov
adc
inc
and
mov
sub
repnz
scas
and
add
mov
inc
ret
movsb
jo
bound
mov
or
or
mov
pop
sarb
jo
sub
push
xchg
cmp
cmp
xor
and
lret
pcmpeqd
mov
sub
push
cltd
icebp
mov
mov
mov
cmp
rdpmc
and
mov
and
sbb
pop
and
lcall
fimull
and
mov
jae
call
icebp
outsl
push
insl
movsl
les
mov
add
in
cs
pushf
shrb
sbb
pop
lds
xor
push
movl
mov
cmp
inc
xchg
pop
stos
mov
dec
dec
frstor
ret
or
or
stc
mov
lods
inc
adc
cmpb
sub
cld
and
cmp
cmpsb
lcall
xchg
gs
add
jl
sahf
push
jmp
in
lret
xorb
xlat
or
sbb
testb
repz
in
inc
jae,pt
or
sub
xchg
sbb
stos
push
mov
adcl
pop
xor
jle
mov
push
clc
lahf
scas
xchg
or
rolb
ss
sub
fnstcw
mov
orl
dec
loopne
cmpsl
xchg
push
cmp
scas
lahf
sbb
mov
sbb
cmpsb
and
stos
dec
enter
mov
adc
hlt
mov
data16
stos
or
hlt
loop
pusha
addr16
or
shrb
jnp
cld
adc
jp
add
push
push
test
jmp
jno
fldcw
ficoms
push
std
aas
andl
jle
bound
inc
gs
ret
fdivrp
scas
xorl
and
mov
gs
cmp
loopne
push
cmpsl
cmp
and
pop
dec
mov
and
or
push
imul
inc
test
aam
jecxz
jb
add
pop
popf
insb
pushf
pop
mov
mov
loop
xlat
mov
lds
nop
inc
hlt
out
scas
push
clc
cmc
stc
sbb
ja
outsb
bound
repz
adc
popa
ss
push
pop
and
and
lret
ret
jb
call
add
aam
sub
ret
pop
leave
and
xor
cmc
adc
stos
push
xor
mov
and
out
sbbb
int
adc
jle
sub
inc
sarl
and
leave
in
xor
lods
add
outsl
push
add
cmp
mov
lret
pop
add
adc
push
decl
mov
xor
stos
mov
adc
mov
insb
xchg
fistpl
mov
rclb
repz
sub
sbb
adc
push
sbb
cmp
push
cwtl
sbb
sub
cmp
xchg
mov
inc
sahf
fmuls
fs
fs
mov
cmp
inc
add
sbb
mov
jo
jae
jle
into
and
adc
mov
das
xchg
pop
dec
cs
in
cld
iret
nop
push
fidivl
jecxz
test
or
dec
adc
jne
pop
mov
lods
pop
inc
js
pop
dec
jle
je
nop
out
sub
int
jo
mulb
aaa
or
sbb
mov
outsb
dec
jb
xor
iret
mov
lcall
enter
ja
inc
scas
mov
xchg
jecxz
sti
les
pop
pop
insb
cmove
jns
lcall
cmp
push
mov
scas
out
stos
or
fidivs
sbb
jmp
sub
lods
xor
pop
mov
jmp
popa
jp
jo
imul
jmp
mov
sbb
mov
loope
fdivrl
fcomps
dec
rcr
push
ficoms
loopne
repnz
lcall
mov
xor
mov
js
fs
movsl
mov
test
testl
loop
mov
jnp
jge
push
iret
sbb
inc
xchg
iret
cli
jecxz
jb,pt
cmp
inc
jmp
int
sub
test
push
out
push
dec
sar
inc
popf
icebp
fstps
popa
pop
jno
mov
out
sub
inc
les
stc
adc
insl
mov
loope
les
pop
xchg
insl
fisubrl
out
popa
lahf
aas
cwtl
ja
and
jg
adc
cmp
arpl
ja
dec
lahf
sbb
push
lret
jo
add
sbb
xchg
shrl
and
mov
and
pop
out
sbb
ret
push
and
imulb
sub
imul
adc
adc
xchg
inc
mov
xchg
sbb
dec
push
fisubl
xchg
mov
pop
rorb
das
push
push
push
mov
xchg
in
cmp
lcall
std
insb
inc
cmp
xchg
sbb
dec
repz
in
push
cs
sbb
cmp
mov
addl
lock
popf
pop
lods
into
loope
or
dec
in
mov
stos
decl
or
dec
mov
jnp
iret
xor
inc
mull
jmp
xchg
sbb
or
or
mov
out
into
nop
loop,pt
mov
imul
dec
jo
pop
xchg
sub
ret
push
mov
lods
mov
inc
xchg
pop
adc
mov
inc
inc
fcoml
stos
fistpll
sbb
insl
adc
out
mov
pop
adc
call
js
lods
cwtl
dec
lods
push
mov
or
lods
push
jmp
xchg
sub
pushf
adc
fwait
ret
xor
mov
movsb
pop
popf
dec
adc
sbb
adc
pop
ljmp
sbb
add
push
mov
addr16
lret
cwtl
mov
test
and
stos
mov
mov
incl
jbe
dec
sbbb
or
lret
je
mov
lods
adc
mov
mov
data16
outsl
nop
lock
inc
popf
dec
mov
fstpt
call
mov
xor
insb
bound
dec
mov
dec
adc
jg
imulb
popf
sbb
pusha
push
mov
arpl
scas
adc
mov
jp
inc
pushf
outsl
add
jno
scas
jno
aas
xor
mov
fwait
xor
xor
cmc
lds
stc
lock
gs
jne
in
mov
data16
int
push
mov
mov
inc
daa
in
shlb
pop
xchg
imul
inc
mov
pushl
adc
stos
lds
daa
xor
outsl
or
fwait
jns
call
fsubrs
sbb
jle
cmp
ret
in
or
xor
xchg
les
pushf
orl
inc
imul
xchg
or
or
popf
orb
jecxz
ja
outsb
xor
fisubrs
out
dec
pop
pop
pop
outsl
lods
daa
roll
inc
out
jnp
mov
lea
out
adc
add
mov
fistpl
cmp
call
jb
test
jo
adc
inc
fldenv
addl
imul
imul
and
leave
dec
mov
cmp
cltd
add
sbb
enter
sbb
lret
add
jl
repnz
dec
jb
popa
sbb
pop
enter
and
jg
repz
in
inc
lds
cmc
adc
or
sbb
xchg
or
icebp
notb
sub
push
push
stc
inc
sub
loope
xlat
or
inc
repnz
gs
loop
lret
sbb
pushf
inc
insb
dec
adc
fldcw
pop
orl
mov
out
repz
sbb
aad
lahf
les
ja
loopne
pop
adcb
xor
mov
cmc
inc
inc
cmp
sub
xlat
mov
push
pop
dec
sbb
addl
add
in
inc
inc
int
mov
mov
jecxz
push
xor
pushf
movsl
data16
loop
push
jbe
arpl
xor
inc
and
movzwl
xor
inc
scas
imul
orb
fdivl
mov
mov
andl
sbb
pop
lcall
js
aad
mov
repz
inc
out
inc
sub
popf
pop
pushf
insb
mov
es
mov
adc
sub
insl
mov
fs
add
nop
cmp
into
or
or
mov
and
mov
enter
jle
mov
jo
rolb
stos
add
and
jo
test
xchg
jbe
push
xchg
sub
cwtl
ljmp
mov
call
mov
xchg
fisubrl
inc
cltd
and
daa
dec
pop
fwait
test
jo
push
out
sahf
and
mov
sub
stos
fwait
add
mov
dec
xchg
out
cmp
jecxz
addr16
addr16
arpl
stos
lahf
push
and
mov
imul
cmpsb
add
es
jno
jp
mov
aas
xchg
cmp
add
adc
and
mov
out
out
xchg
mov
inc
iret
sbb
jg
pop
test
aam
popa
loop
lods
xor
adc
jno
lret
xor
mov
ret
dec
rorb
push
adc
cmpsb
ss
adc
push
pop
std
push
mov
imul
test
jge
les
or
and
test
test
icebp
frstor
jmp
sahf
push
loop
sub
fcoms
pop
adc
cwtl
pop
mov
inc
mov
jmp
jb
test
hlt
loope
adc
jge
xchg
xor
jecxz
mov
in
sahf
pop
sbb
cmp
rep
in
sub
push
mov
xor
std
jp
ljmp
je
push
inc
out
pop
enter
mov
shlb
cltd
inc
add
movsb
xchg
xor
inc
inc
rcll
fnstsw
push
or
pop
or
and
xchg
movsb
and
shlb
adc
sbb
mov
insb
cltd
ret
das
jno
addb
mov
scas
inc
cmp
pusha
in
mov
mov
movsb
xlat
push
push
rcrb
jne
jge
incb
fistl
mov
or
mov
fsubrs
sub
adc
cmp
ja
imul
dec
adc
push
xor
sub
pop
xchg
add
icebp
pop
scas
rcll
out
push
inc
dec
jp
adc
pop
ss
mov
mov
push
push
and
add
mov
pop
xchg
cmp
sbb
test
xor
or
mov
cmp
pop
and
dec
jo
push
daa
mov
loope
mov
cld
jg
lock
cld
jg
mov
mov
repz
test
and
outsl
push
mov
push
test
pop
iret
and
mov
fcoml
mov
adc
enter
inc
aad
movsl
lcall
pop
outsb
pop
leave
jp
jo
and
mov
pop
mov
push
push
rcll
jge
add
add
mov
xchg
cmp
adc
scas
cltd
ljmp
dec
loop
jmp
xchg
in
mov
setno
cmp
test
or
insl
test
and
lahf
inc
xchg
fcoml
jbe
inc
pop
xchg
aas
lahf
or
repnz
cmc
movsl
xor
repz
mov
jno
xor
push
sbb
negl
sbb
xchg
pop
push
sti
leave
inc
adc
inc
out
stos
cmp
dec
cmp
mov
shl
pop
mov
lds
test
pop
dec
or
aad
mov
mov
xchg
ret
rcr
jae
or
outsl
push
jnp
mov
imul
pop
fdivrl
fs
test
out
jno
sbb
adc
aad
mov
fs
popa
xor
movsl
jnp
xchg
fsub
or
inc
shlb
movsb
out
fdiv
cltd
or
pop
call
mov
add
mov
ret
hlt
mov
rcr
popa
sahf
cmp
or
fcomip
fisubs
sarb
ss
rclb
andb
add
fcomps
aam
sub
dec
cmc
rorb
and
or
fisttpll
mov
xchg
add
sbb
or
mov
xchg
adc
sub
in
ljmp
inc
xor
push
add
aas
jnp
icebp
mov
mov
cmp
inc
inc
pusha
cmp
outsl
mov
in
test
aam
outsb
adc
rolb
fmuls
and
mulb
mov
in
lods
sbb
xchg
jp
pop
stc
dec
outsb
mov
popf
add
lds
stos
ss
insb
and
adc
or
nop
sbb
jnp
jne
cmpsb
jnp
mov
or
stos
adc
sbb
int
fildl
push
fcoml
xchg
aam
ret
repnz
xchg
fs
aaa
or
lods
xor
xor
adc
dec
add
aaa
int3
inc
inc
cwtl
cmp
hlt
jge
push
push
ss
xor
lcall
popa
mov
jmp
jmp
xchg
test
stos
test
and
imul
inc
cmp
and
xor
jmp
fldenv
nop
jmp
push
test
lret
loopne
stos
pop
sub
dec
xor
insl
add
jmp
stos
xor
push
jbe
in
aaa
and
or
mov
imul
dec
dec
cli
and
ret
mov
bound
test
xor
imul
adc
rorl
cmp
dec
inc
or
cmp
inc
and
pop
sarl
ficoms
mov
mov
sub
push
test
shl
jl
cmpb
sahf
xchg
push
pop
xchg
jb
adc
outsl
clc
jnp
stc
lcall
pop
dec
dec
cld
push
lods
sub
loopnew
daa
movsl
xor
leave
mov
cmp
hlt
movsl
or
xor
jns
or
cmp
shlb
loopne
js
pop
sbb
hlt
dec
aaa
sbb
adc
xor
in
lods
flds
out
in
out
push
sub
xor
pop
jae
xor
shll
lds
mov
adc
mov
mov
popf
out
sbb
and
mov
and
les
in
jecxz
jg
out
push
mov
push
push
xorb
xchg
in
icebp
nop
push
scas
xlat
jns
in
imul
bound
in
dec
jo
fcoms
in
push
xor
dec
or
sbb
or
dec
push
pop
xor
test
lahf
xlat
and
and
stos
pop
lret
stos
inc
mov
or
push
insb
xchg
pop
mov
out
movsl
jns
cmp
mov
outsl
add
push
cmpsl
inc
sbb
mov
rcrl
sub
and
test
dec
popa
mov
scas
sahf
add
ss
inc
sub
push
out
clc
jae
aad
in
xor
das
mov
idiv
fwait
cmp
rcrl
push
mov
push
pop
dec
pop
mov
fcoml
cmp
inc
push
push
xor
jg
mov
and
js
mov
lret
lds
es
mov
sub
lea
loope
sar
add
negl
jle
sti
aam
xlat
call
cmpb
dec
repnz
mov
pop
xor
fistpll
rorb
test
pop
add
push
arpl
negb
int
push
push
inc
xor
mov
xor
pushl
sub
ja
pop
les
neg
mov
mov
jmp
int
push
inc
rcrb
inc
pusha
adc
repz
addr16
jmp
dec
mov
or
pop
in
mov
and
loop
cli
sub
jmp
popf
sub
mov
or
jmp
nop
repnz
add
sbbb
imul
pop
mov
mov
and
in
sbb
inc
push
mov
cmp
test
aaa
insb
hlt
daa
movsb
movsl
shl
inc
sahf
stos
push
dec
jmp
popf
inc
lcall
push
mov
movsl
push
and
sub
ss
int3
mov
jle
mov
inc
cmp
out
push
xor
push
insl
add
adc
nop
scas
push
or
adc
sub
push
mov
cli
cmpsb
fisubs
jmp
cmc
imul
int3
push
xchg
mov
pop
in
fstpt
das
fnstenv
mov
and
scas
shlb
lods
pusha
outsb
dec
fstp
push
add
scas
lret
imul
lret
imul
rorb
outsb
mov
pop
fnstenv
and
push
shl
push
les
clc
imull
rorl
stos
popa
push
mov
in
in
aaa
popa
mov
popa
mov
daa
mov
jo
insb
flds
nop
pop
stos
jae
cmc
mov
xchg
push
testb
cltd
ja
fstpl
cld
sbb
or
or
jmp
iret
cmp
in
pop
mov
dec
inc
test
sub
cs
lret
sub
outsb
and
fsubrp
dec
aam
cmp
adc
push
lret
cmp
and
pop
rclb
xlat
pushf
add
jnp
pusha
ljmp
adc
ja
dec
mov
cli
imul
pop
adc
adc
test
push
jecxz
ja,pn
mov
out
loope
jae
mov
cmp
sbb
add
inc
sbb
outsb
jge
adc
insb
and
mov
es
push
add
icebp
loopne
add
addr16
loope
and
std
jmp
leave
inc
aad
sbb
je
adc
jl
int3
movsb
and
adc
mov
mov
push
ud2
jge
mov
pop
pop
neg
mov
or
inc
jns
xor
shrl
cmp
adc
lods
enter
pushf
call
fcoms
rcl
add
scas
lahf
std
mov
push
aas
fsubp
es
pop
inc
out
cmp
jmp
stos
lock
imul
cmpsb
xor
sbb
and
xor
loop
or
sub
lahf
xchg
insb
in
xlat
int
mov
nop
dec
mov
push
push
pop
xchg
negb
imul
mov
fisubrs
and
int
cli
jb
call
and
fwait
cmc
lahf
shlb
aas
xchg
lret
pop
pop
icebp
and
dec
test
lret
pop
clc
push
out
mov
mov
shl
inc
sbb
jp
mov
gs
std
mov
sub
and
push
cld
in
aad
dec
sti
jp
fiadds
lret
add
sbb
imul
cmp
pop
movsb
repnz
out
adc
mov
cmp
mov
ret
scas
adc
rcr
gs
aas
fists
cmp
cwtl
out
repz
or
sti
add
out
addr16
jns
or
pop
dec
dec
adc
and
mov
or
jecxz
xchg
dec
gs
sbb
mov
sub
lds
push
jno
test
movsb
or
mov
jb
ss
loope
add
rcl
xchg
sub
addb
pop
cmpsl
mov
movsb
mov
jecxz
sti
cmpsl
inc
int
pop
aas
mov
je
adc
and
in
lret
add
jnp
lcall
scas
andb
sbb
lea
aad
in
lret
pushf
push
std
int
repnz
push
sbb
push
stos
lret
sub
push
dec
mov
xor
pop
lods
xchg
mov
jno
out
mov
mov
jecxz
imul
addr16
aam
rcll
pusha
xchg
jo
in
icebp
call
in
mov
and
decl
cmc
jo
dec
adc
ret
test
lcall
faddl
cmp
push
xlat
dec
js
push
js
fimuls
or
and
mov
loope
jp
cmp
dec
pop
popa
sbb
repnz
mov
test
cmp
pop
sub
mov
iret
cmp
out
mov
fildl
push
dec
jl
push
cli
enter
mov
adc
sti
fcompl
and
sub
enter
push
add
pop
repnz
push
in
inc
shlb
fcompl
pop
cwtl
jp
lods
push
mov
icebp
xchg
sbb
aad
repnz
lret
fmull
out
jl
mov
daa
mov
push
lret
andb
push
push
rolb
int
xchg
adc
mov
mov
lds
xchg
and
jnp
cmpsl
incb
add
dec
js
and
add
mov
and
lret
mov
mov
enter
jbe
adc
adc
push
xchg
xchg
jl
xor
ja
adc
or
sub
adc
lahf
xchg
inc
push
push
je
and
clc
add
fcmovnb
js
inc
and
and
mov
addr16
in
jg
and
test
xlat
cwtl
or
stos
and
fwait
adc
adc
push
shl
sub
shr
push
mov
adc
add
mov
mov
jno
push
mov
aam
jno
pop
jb
dec
fwait
dec
lods
jo
dec
rcrl
cmp
jo
pop
push
js
pop
loopne
push
movsl
jge
mov
mov
or
pop
stos
cmp
jae
aad
push
pushw
mov
sbb
inc
daa
lods
movsb
push
cld
xor
xor
jo
inc
stos
dec
into
push
xchg
fisubs
pushf
fdivrl
push
cmc
nop
shr
xor
adc
mov
ja
add
xor
add
outsl
xor
fsub
test
xchg
mov
pushf
mov
and
pop
push
cmpb
push
cmp
push
mov
push
loopne
in
xchg
pusha
aaa
fildll
pop
popf
jmp
into
inc
out
nop
imul
sbb
lcall
add
xor
dec
imul
test
popa
jl
bound
pop
sarb
dec
imul
jge
fldt
stc
xor
ret
fstpl
enter
or
vandnps
pop
push
push
adc
fcmovnbe
jmp
pop
cmpsb
imul
push
out
sbb
xchg
jmp
xor
dec
inc
push
cmp
pop
nop
inc
lcall
cmp
mov
cwtl
jg
lahf
movd
mov
mov
popf
inc
std
inc
scas
sbb
subl
mull
testb
jp
mov
popa
sbb
xchg
inc
push
insb
mov
bound
imul
scas
andl
add
xchg
adc
dec
jl
sub
inc
test
andl
out
dec
mov
push
dec
loop
lock
inc
lcall
push
ss
rcrb
cmp
cmp
sbbb
mov
pop
mov
mov
icebp
fidivrl
mov
mov
imul
push
mov
pop
lods
xchg
mov
es
mov
jno
fiaddl
pushf
mov
nop
mov
push
pop
add
sbb
fs
adc
mov
movntps
inc
sub
add
pop
inc
adc
std
cmpsl
mov
outsl
adc
loop
and
mov
jge
stc
out
mov
sub
popf
cwtl
jmp
fisubl
inc
js
ss
test
xchg
jo
ss
faddl
or
mov
mov
xor
stc
sub
cmpsb
ja
ja
movsl
cmp
into
in
mov
ror
xor
jae
cmp
lock
add
daa
xchg
ds
pop
pop
xchg
add
mov
pop
sbb
sub
jo
inc
xchg
popf
cwtl
loop
aad
sti
fistpll
iret
dec
dec
clc
xchg
adc
sbbl
add
inc
and
inc
dec
addl
adc
mov
mov
es
test
fwait
mov
imul
ljmp
xchg
enter
jb
jae
jmp
inc
jmp
push
dec
adc
daa
or
add
into
pusha
flds
sub
mov
and
cmp
test
or
loope
jl
cli
add
xchg
pop
ss
and
mov
lea
fidivrs
dec
jne
loope
lgs
mov
push
dec
repz
jp
imul
pop
adc
dec
pushf
xchg
lock
dec
repz
push
aas
sbb
jno
cmp
pop
hlt
out
mov
jp
into
dec
adc
neg
inc
daa
out
xor
mov
lods
int3
xor
cli
jne
das
enter
outsb
mov
sbb
sysexit
mov
or
test
int
push
stos
dec
and
mov
pop
pop
mov
std
mov
or
mov
in
mov
xor
mov
repnz
mov
repnz
test
outsb
dec
pop
mov
movsb
xchg
cmp
cmp
add
mov
add
ret
fucomp
add
imul
push
dec
mov
popa
fwait
cmpsb
das
cmp
inc
xchg
loope
cmpsl
sub
fiaddl
mov
insb
push
insl
icebp
sbb
mov
sarl
push
iret
outsl
mov
and
adc
leave
jno
or
int3
xchg
jb
sub
sbb
in
sbb
jg
jl
pusha
inc
dec
lds
lcall
mov
movsb
out
and
xor
mov
mov
and
movsb
das
cmp
jecxz
loope
fwait
sub
jle
jnp
pop
adc
push
mov
sbb
inc
fwait
jle
pop
sahf
dec
inc
jmp
push
fstpl
mov
inc
xor
lcall
mov
pop
faddl
jns
ljmp
dec
pop
mov
or
test
je
sbb
ret
push
in
jge
add
out
adc
cmc
jecxz
subl
dec
and
arpl
mov
inc
mov
jo
loop
and
rcrl
xor
lods
xchg
mulb
hlt
mov
jmp
orb
pop
and
sub
and
jmp
and
lcall
add
mov
inc
cmpsb
movsl
sub
pop
int
inc
inc
mov
cmpsl
add
repz
dec
adc
loop
mov
div
push
push
hlt
adc
jno
or
jp
jno
or
ret
xlat
das
clc
sbb
nop
xor
mov
jns
les
andl
out
cmp
gs
push
ss
mov
sbb
xchg
in
or
leave
aam
xchg
dec
ljmp
cli
xrelease
in
imul
xchg
insb
test
enter
jno
pusha
mov
pushf
cwtl
aad
das
es
jo
or
ljmp
negb
xchg
pop
loope
lret
push
sbb
or
mov
pop
out
cmc
push
loop
jg
xlat
add
repnz
inc
jno
push
out
test
mov
add
mov
lahf
sbb
mov
nop
jg
push
stc
sbb
jmp
sbb
sub
stos
xchg
or
les
fnsave
test
xchg
xchg
xorb
push
xor
and
lcall
outsl
ss
adc
std
inc
aaa
xchg
rolb
mov
mov
push
dec
sti
xor
stc
cs
xchg
xchg
enter
test
insb
js
mov
gs
mov
xchg
xchg
jns
sbb
in
loop
sbb
jb
shlb
sbb
jb
mov
cli
movlhps
pop
add
push
leave
loopne
push
push
and
jmp
dec
insl
push
jbe
enter
mov
mov
push
decb
outsl
popf
insl
jnp
rolb
push
jecxz
out
jae
imul
sbb
movsl
cmp
push
push
jb
sarl
jno
enter
sub
ljmp
mov
pop
aaa
cwtl
das
mov
add
push
pop
dec
jne
dec
in
pop
sbb
mulb
cmc
dec
cmc
call
pushf
stos
push
inc
and
test
jecxz
dec
stos
rclb
scas
stos
xor
adc
pop
ds
movsl
icebp
imul
icebp
aas
sbb
movsl
dec
xchg
push
sbb
mov
clc
loop
sub
ja
dec
dec
sub
pop
push
jb
sti
mov
mov
aaa
movsb
jmp
mov
inc
imull
jl
and
jge
jne
push
scas
jns
push
add
les
add
mov
lds
sti
inc
mov
int3
addl
movaps
mov
adc
mov
cmpb
ret
xlat
test
mov
adc
push
insb
int3
out
mov
shrb
mov
fsubs
push
pushf
popf
daa
mov
jno
and
sub
cmc
add
cmp
ret
mov
mov
xor
inc
lcall
fcompl
incl
xor
push
and
sub
inc
adcb
and
sbb
dec
call
sub
loope
into
cmpsl
inc
or
jae
xlat
mov
jae
fidivs
mov
cmc
aas
sbb
cli
sbb
test
pushf
das
sti
sbb
pop
cmp
mov
pop
lock
in
pop
sub
sbb
fldenv
test
ljmp
aaa
cmpsb
jno
pushf
inc
xor
xor
inc
inc
out
and
shrl
sarb
mov
cmp
cs
cmc
mov
mov
bound
idivb
xchg
jge
mov
push
xchg
popa
loop
ror
dec
ret
inc
aad
or
out
je
shll
and
push
sbb
adc
mov
or
rcrb
notb
mov
scas
repz
in
mov
loope
rorl
pop
nop
push
in
pop
icebp
cld
xor
stos
into
pop
jmp
arpl
jp
and
xor
xor
pop
add
mov
lret
cmc
test
jp
lods
dec
test
sahf
js
push
nop
ljmp
mov
adc
out
dec
pop
movsl
lock
push
aad
std
xor
add
icebp
push
cmp
xor
dec
dec
inc
mov
imul
je
pop
pop
and
sub
cmp
outsl
in
adcb
enter
xchg
dec
mov
or
adc
xchg
cli
sbb
int3
lahf
in
icebp
or
jo
into
pop
cmpl
ret
mov
cmp
inc
sbb
jno
cmpsl
imul
fists
xchg
pop
mov
das
xlat
pop
testl
or
fs
js
loop,pn
push
sti
aad
jo
jp
dec
shl
push
xchg
mov
pop
push
pop
adc
add
popl
add
push
inc
rolb
data16
jmp
push
xchg
mov
add
ja
lea
jnp
sub
push
pop
push
adc
dec
pushf
in
fistps
cwtl
mov
xor
jmp
outsb
jmp
stos
test
sahf
sti
mov
or
repnz
loopne
test
xchg
sbb
pop
sbb
push
and
cmp
or
push
or
mov
xchg
or
adc
pop
test
pop
pop
jmp
cli
pop
cmp
xlat
jns
sbb
dec
pushf
jl
lock
fisttpll
push
or
mov
mov
int3
rclb
jno
xchg
shll
push
mov
sub
xchg
hlt
shl
mov
addl
test
mov
lods
add
mov
lret
dec
lods
xchg
push
or
pop
arpl
test
pop
orl
lahf
pop
shrb
imul
loopne
cmc
adc
inc
jb
inc
loop
and
pop
mov
mov
mov
pop
xchg
fcoml
mov
out
xchg
lcall
mov
jmp
jge
cmp
lahf
jecxz
pop
cmp
rclb
sbb
add
negb
pop
rcll
lret
in
or
xchg
sub
jl
push
sbbb
push
repz
lret
push
push
test
jae
imul
or
push
xor
lods
cmpsb
mov
xorl
jno
shr
lea
lret
loopne
cld
or
ja
addr16
adc
cmc
pop
pushf
jmp
lret
dec
xchg
das
rorl
mov
add
dec
mov
arpl
push
jmp
jl
in
int3
pop
push
push
jnp
pop
clc
xchg
sub
or
jne
cmp
popf
out
outsl
cmp
jbe
loope
mov
jg
sbb
push
jnp
daa
das
jle
sub
pop
adc
add
jae
fisubs
test
push
imul
jecxz
rcrb
out
loop
or
mov
ret
and
test
cs
mov
aam
std
xchg
popf
mov
outsl
cmovge
out
int3
scas
inc
xor
mov
cmp
add
jo
pusha
aad
push
enter
jb
push
jge
sub
imul
and
xchg
cmp
xchg
cltd
inc
add
addl
adc
xor
add
das
daa
mov
pop
sbb
dec
mov
sarl
sahf
push
into
movsl
xchg
stc
cmp
jo
xchg
call
adc
cwtl
imul
xor
scas
mov
loope
out
dec
push
je
jb
add
outsl
jnp
jle
cmp
xlat
push
outsb
push
lret
push
sbb
subb
or
xchg
cld
sti
arpl
lods
sub
fs
cmp
rclb
enter
push
add
xchg
ret
enter
dec
sbb
push
pop
lock
mov
sub
mov
cld
insl
inc
jle
sahf
xor
or
jo
dec
lahf
nop
imul
xor
or
enter
pop
nop
or
xorb
dec
sbbb
fbld
mov
fidivs
and
mov
dec
inc
into
adc
push
jne
aaa
hlt
int
lret
pop
test
push
dec
adc
mov
jecxz
or
jmp
xchg
adc
adc
insb
test
xchg
out
insl
fnsave
and
es
cs
test
jle
rcrb
cmp
push
push
fbstp
jb
sub
repz
cs
inc
cltd
add
xchg
jns
mov
pop
je
jns
dec
call
mov
pop
inc
xchg
jp
fldcw
fucomip
sub
aam
mov
push
sarb
neg
jne
loop
sbb
xchg
sbb
outsl
cmp
fstps
inc
outsl
in
scas
xchg
mov
adc
jecxz
xchg
popa
jno
add
test
xchg
sbb
mov
add
push
or
mov
ficompl
clc
aam
dec
hlt
add
aas
xor
adc
mov
rorb
mov
lods
jle
mov
lret
lahf
or
out
push
lgdtl
or
int
xchg
in
sub
xchg
mov
iret
push
jbe
dec
and
cmp
jle
xchg
scas
imul
dec
adc
int3
pop
sub
xor
mov
sbb
shll
pop
ss
add
inc
stc
jecxz
in
adc
mov
fwait
push
aas
iret
lret
jbe
stos
dec
pop
sbb
push
sbb
xorb
jmp
or
loopne
fwait
pop
pop
dec
mov
fdivl
out
push
lock
sub
add
cmp
and
addl
sti
ljmp
emms
xchg
or
xchg
aam
mov
sub
xor
or
fnstenv
inc
adc
dec
dec
dec
sub
cli
rorl
inc
xor
fimuls
add
xlat
inc
jl
addl
xchg
push
pop
iret
jp,pt
push
or
andl
mov
and
shrl
jo
jne
in
cwtl
jl
xor
repz
enter
jmp
xchg
pop
push
imul
iret
into
push
je
cmp
xor
test
xor
dec
sub
xchg
imul
push
les
cmp
inc
inc
inc
or
fsubl
ss
inc
push
rcrl
cmp
es
mov
stc
inc
fisubs
outsb
mov
sbb
sub
iret
movsw
pop
jmp
sub
pop
dec
insl
mov
hlt
outsl
fldenv
mov
pop
js
mov
shlb
inc
outsb
dec
add
mov
popf
loope
jl
or
dec
xlat
xchg
xor
imul
pop
shll
mov
cmp
pop
int
lret
sti
push
mov
cmp
movsb
fisttpll
sti
dec
inc
popa
jmp
into
lret
cmpsb
mov
pop
sub
push
cmpsl
or
or
sbbb
pop
popf
cmp
sub
cmpsl
xchg
imul
movsl
jecxz
push
pop
insl
add
push
mov
push
lods
sub
icebp
mov
pushf
rolb
clc
ret
push
jecxz
dec
or
imul
and
pusha
mov
xor
cwtl
mov
mov
xor
rcrw
jo
xor
push
or
or
push
mov
mov
nop
jg
cs
dec
lods
sub
lret
xor
icebp
mov
xchg
scas
es
fisubrl
ficomps
mov
imul
stos
lret
int
mul
cmp
sbb
js
arpl
adc
jmp
loop
pop
ret
mov
xchg
dec
and
mov
sub
shrd
pushf
or
out
dec
addr16
pop
mov
mov
dec
repnz
inc
mov
cwtl
nop
cmp
mov
add
push
xlat
jnp
or
jo
loope
lds
mov
mov
jmp
int
pop
dec
in
dec
movsl
ret
movsl
stos
fldt
mov
outsl
push
sahf
outsb
mov
in
ds
icebp
in
jo
or
jg
popf
push
les
pop
int3
sbb
aad
xor
loopne
or
mov
push
pusha
xchg
flds
and
pop
jbe
pusha
mov
shl
sbb
xlat
mov
stc
into
mov
or
push
imul
js,pn
or
and
mov
fidivs
mov
dec
scas
push
lock
cmp
jle
mov
push
push
aad
insb
push
xor
xor
out
sti
mov
xor
imul
inc
jmp
mov
testb
or
ret
notb
cs
adc
jbe
outsl
je
cld
mov
mov
aam
lods
push
loopne
mov
inc
fisubs
and
cld
mov
add
push
call
cmp
jnp
xorl
stos
mov
out
call
or
pop
mov
push
dec
rcll
or
lock
test
mov
lods
outsb
repnz
lfs
test
sub
aaa
or
shlb
adc
adc
sbb
push
clc
data16
mov
test
jmp
jp
mov
insl
dec
rolb
ds
cmp
pop
sub
ds
pop
sbb
adc
into
jge
ja
call
leave
mov
nop
push
fst
mov
pshufw
sbb
pop
iret
mov
std
push
ja
pop
sub
mov
sub
xchg
inc
clc
test
daa
insl
jmp
icebp
xor
aad
mov
mov
mov
adc
jno
dec
fsubl
mov
jnp
jge
or
clc
sbb
shlb
adc
mov
add
arpl
das
or
dec
sub
pop
rcl
inc
call
push
pop
in
jecxz
cmp
pop
pushf
push
test
add
in
push
gs
xchg
cwtl
jmp
xchg
mov
push
inc
cmc
aas
sti
mov
dec
int3
loope
sti
xchg
lods
mov
test
arpl
jge
jmp
push
inc
xchg
and
cltd
mov
sbb
or
popf
push
xchg
mov
xor
push
es
add
ds
dec
cltd
test
lcall
popa
lcall
mov
inc
dec
aad
mov
cmc
pop
pushf
int3
pop
mov
rcr
test
sub
andb
icebp
into
or
sbb
lret
xchg
addr16
sub
jp
das
in
adc
mov
in
out
insb
out
mov
xlat
inc
loop
cmpsl
data16
lds
rcr
or
icebp
mov
xor
movsl
popf
scas
adc
cmpl
pop
push
xchg
push
jnp
mov
pop
jb
in
mov
stos
mov
sub
lds
mov
not
mov
sbb
inc
fldcw
jg
int
scas
and
add
pcmpgtb
mov
std
dec
or
add
notb
add
test
sbb
out
xchg
dec
nop
fisubrs
stos
mov
jb
pop
pop
push
pop
mov
or
jno
orb
in
fisttpll
out
arpl
mov
adcb
mov
icebp
std
mov
jbe
ss
push
out
outsl
dec
xor
or
scas
mov
cmp
mov
mov
mov
js
inc
mov
es
leave
mov
push
cmpsb
xor
hlt
pop
mov
add
incb
mov
lods
xchg
stos
dec
lods
push
mov
or
mov
movb
jl
mov
mov
lret
hlt
mov
pop
sub
cld
push
daa
dec
pop
sub
and
jae
dec
mov
call
mov
icebp
pop
fsubrl
adc
sub
stc
pop
jb
inc
das
leave
cmpsl
test
xorb
bt
or
push
xor
mov
jp
push
clc
push
adc
mov
jne
clc
mov
mov
sbb
and
int
xchg
inc
stos
adc
sub
jbe
sbb
dec
push
pop
mov
cli
and
xchg
lock
stos
icebp
mov
sub
inc
push
dec
lea
in
xor
movsl
inc
test
outsb
nop
mov
mov
or
mov
popa
out
out
xchg
inc
inc
dec
aad
bound
mov
and
mov
xor
cmpsb
mov
addb
dec
xchg
or
loop
fidivl
leave
idivb
push
sub
and
sbb
in
out
ret
fimuls
or
xlat
mov
sti
mov
cmp
popa
mov
jns
in
mov
push
pop
mov
cmp
mov
jbe
orb
call
test
hlt
and
xchg
es
outsb
or
xor
xor
pop
adc
mov
sbb
pop
ficomps
or
sub
sub
or
add
xor
shrb
lahf
sbb
adc
push
loope
mov
xlat
mov
ds
orl
and
add
mov
stc
iret
jne
add
mov
dec
in
incl
test
div
jnp
push
movsl
ret
cmpsl
rorb
mov
sub
sarb
addb
inc
jne
sub
jb
fldt
xor
mov
into
lods
ret
shl
imull
xor
hlt
lea
insl
les
xchg
repz
jmp
push
pmuludq
and
adc
jge
mov
and
xor
shl
pop
fisubrl
jmp
mov
ret
mov
lahf
cltd
loope
daa
mov
mov
add
pop
mov
xor
jb
lcall
and
xchg
and
xchg
loopne
out
insl
sub
mov
mull
in
sub
inc
loope
adc
insl
xchg
ljmp
adc
or
out
repz
jae
xor
enter
bound
arpl
popf
jg
loop
fwait
testb
je
xor
pop
mov
aas
xorl
pop
mov
add
or
xchg
scas
icebp
cmc
dec
scas
inc
mov
add
pop
mov
jo
nop
enter
pop
jns
stos
inc
scas
mov
sti
into
dec
dec
jbe
dec
pop
inc
aad
xchg
mov
dec
adc
push
dec
lcall
imul
jno
jp
cltd
and
loopne
sahf
push
insl
dec
inc
xchg
pop
lcall
fmull
outsl
lahf
mov
popa
mov
xor
jbe
daa
ljmp
jne
lock
push
data16
adc
cli
mov
lret
mov
fs
push
sbb
and
push
lods
cmp
iret
xor
push
shr
dec
aam
pop
or
das
cmp
enter
mov
je
mov
xor
aaa
lea
and
lock
and
jecxz
negb
jbe
pop
les
dec
cmc
lcall
cli
xor
sub
insb
xchg
fs
xor
cmp
aad
mov
out
out
mov
and
js
mov
adc
pop
push
idivb
pop
push
in
arpl
repz
scas
out
lret
les
lods
jne
mov
inc
cs
push
and
sub
insl
push
inc
sahf
push
insb
out
lock
xchg
cmpsb
mov
dec
or
mov
stos
cmpsb
call
aad
dec
jmp
inc
jp
fisubrs
fs
add
loope
add
mov
aaa
lods
mov
arpl
mov
test
add
push
cmp
sub
xor
lcall
mov
pop
push
dec
xchg
xchg
pop
decl
and
mov
mov
cmp
mov
mov
es
lds
test
sbb
call
mov
loope
add
mov
dec
and
stos
pushl
imul
into
adc
ficomps
add
xchg
in
xchg
lods
pop
scas
ds
addl
or
in
push
add
ficomps
shll
add
push
sub
push
loopne
orl
push
shll
pop
gs
icebp
xor
call
stos
xor
pop
mov
into
pop
stos
inc
leave
out
daa
lods
hlt
subl
mov
adc
es
aaa
out
ds
call
stos
push
cwtl
mov
or
aas
ficompl
push
inc
mov
xchg
shl
daa
xchg
xor
xor
movsl
and
cli
mov
fwait
or
jecxz
test
pushf
inc
popf
out
pop
jo
scas
adc
jbe
enter
xchg
lahf
invd
mov
xor
cmp
cmp
pop
mov
repnz
mov
fs
mov
jo
sub
pop
push
mov
mov
push
xor
add
or
outsl
inc
sbb
dec
mov
or
in
aaa
mov
lods
sbb
sub
pop
lahf
pop
lret
mov
repz
and
xchg
jo
jns
xchg
repnz
js
cli
in
sbb
cli
lds
mov
shrl
jle
aad
cmp
iret
call
inc
mov
lods
ret
and
sarb
and
push
cmp
mov
outsl
sub
dec
push
add
hlt
sub
shlb
cld
jo
fisubrs
pop
cmpsl
enter
rcl
cmp
fistpl
and
jl
lock
push
and
sti
jmp
mov
clc
iret
and
push
mov
inc
test
cmp
sbb
mov
adc
out
pop
lods
pushf
and
mov
into
mov
les
and
sub
add
daa
sub
push
pop
and
aam
push
push
push
mov
sbb
ret
push
cmpsb
icebp
sbb
sbb
jl
inc
scas
sub
fwait
and
into
sbb
sub
jno
jns
mov
loope
clc
aaa
fdivl
and
nop
iret
sti
fldl
test
mov
add
inc
dec
adc
and
push
dec
bound
cmp
shrl
adcb
nop
add
pop
xor
or
dec
lods
mov
pushf
insl
fnsave
add
jp
ss
mov
data16
shlb
mov
xchg
push
xor
mov
adc
enter
push
mov
in
in
xchg
shrb
sbb
mov
push
xor
ffreep
movsl
cmc
out
out
and
mov
push
scas
in
lock
push
inc
inc
mov
dec
mov
lahf
in
push
and
pop
orl
test
and
stos
cmpl
imul
insl
nop
andb
xor
test
mov
in
dec
sub
loop
ret
fsubr
loopne
sub
mov
sub
shll
out
sbb
loopne
sub
jmp
mov
test
mov
mov
jg
out
js
scas
cli
xor
xor
jl
adc
lahf
mov
aad
jecxz
in
xchg
rcl
jmp
cmp
xorl
pop
test
test
adc
stos
imul
lds
pusha
movsl
add
scas
test
jmp
sbb
sub
insl
cmpsl
ljmp
jl
inc
pop
int3
sub
push
jle
dec
fistpl
sub
xor
cltd
xor
add
ret
dec
scas
xchg
inc
repnz
cli
xchg
or
sbb
jge
dec
xor
stos
lea
imul
lock
rclb
enter
push
test
dec
and
or
pop
pop
mov
jg
test
es
xor
int
test
mov
mov
fnstenv
es
adc
cmpsl
inc
inc
push
mov
add
add
cwtl
jl
jmp
cmp
mov
mov
xchg
std
aad
add
xchg
dec
outsb
mov
jbe
je
fwait
jnp
out
mov
cltd
mov
add
jns
and
lea
ljmp
fadds
push
mov
jbe
aam
lods
cmc
add
ljmp
and
mov
fimull
pop
mov
adc
xchg
xcrypt-ecb
cmpsl
ud2
sub
mov
cmp
sbb
mov
ds
int
repz
jbe
xchg
daa
js
mov
mov
sbb
inc
mov
lock
xchg
inc
imul
cmp
mov
push
pop
aaa
jl
mov
add
mov
cld
pop
test
cmp
btc
cmp
add
push
and
mov
mov
subl
xchg
inc
xchg
ja
pop
popf
incb
cmp
mov
std
pusha
cltd
fs
xor
pop
mov
sub
jg
es
inc
mov
cmp
dec
lods
and
pop
inc
jl
clc
test
popf
int
loope
or
xor
sti
imul
or
or
movsb
mov
add
aam
je
mov
fimull
xor
sub
mov
lods
je
in
cmp
pop
mov
xor
rcrb
subb
mov
mov
cmpsb
daa
or
add
pusha
fildl
int
jbe
imul
loope
lods
rcr
pop
xchg
cmp
or
mov
cmp
push
shlb
scas
jne
clc
in
stos
pop
inc
addb
sbb
jmp
fisttpl
mov
pop
jb
test
jno
jmp
addr16
repz
daa
xor
xchg
test
arpl
sbb
cmp
ror
outsl
std
push
out
inc
loopne
xchg
pop
fcompl
es
testb
cmc
inc
pushf
jecxz
push
or
jp
fsts
adc
mov
xchg
cli
add
movsl
sbb
mov
xor
mov
jmp
or
add
jg
add
dec
shrl
popa
out
cli
xchg
dec
inc
add
rorb
mov
push
inc
sbb
clc
test
insb
int
and
and
fbstp
adc
dec
push
jns
pop
mov
jo
mov
ss
mov
lret
push
or
les
and
or
mov
xor
int
xor
inc
adc
or
jge
mov
jo
cwtl
dec
hlt
pop
dec
push
sbb
xor
dec
mov
adc
stos
and
sbb
jo
lahf
xchg
sbb
xchg
jle
loop
test
and
dec
add
sar
call
push
loope
data16
mov
enter
push
stos
insb
dec
mov
divb
fmuls
push
outsl
lods
es
push
cltd
test
ret
test
shlb
stos
fidivrs
xor
fdivr
stc
jae
dec
popa
pop
mov
dec
mov
incb
add
push
add
add
and
aad
dec
jae
add
cld
and
lds
mov
or
sub
mov
dec
std
inc
mov
ljmp
or
cmpsl
jecxz
jne
std
sub
inc
jo
xchg
adc
push
sbb
hlt
popf
sbb
loopne
jl
pushf
fists
mov
inc
add
push
mov
aas
pop
pushf
stos
push
mov
add
jecxz
cmp
xor
sbb
sbb
std
adc
jmp
mov
mov
mov
sbb
ljmp
or
cltd
or
popf
fdivrl
testl
int3
out
push
test
lahf
shll
cli
mov
mov
pushf
push
jmp
mov
inc
jge
jbe
cmp
adc
roll
pop
fsubrs
les
dec
loope
jae
sbb
cli
fbstp
sub
sbbl
dec
add
mov
icebp
rcrl
ret
fldt
mov
ret
loope
cmpsl
lahf
inc
std
mov
dec
add
xchg
addl
mov
lods
cmpsl
sti
pop
sub
les
push
cli
pusha
mull
push
daa
and
cmc
scas
mov
cmp
mov
gs
mov
or
xchg
shl
xchg
inc
ljmp
insb
jmp
jo
fucom
stos
ret
aas
rep
mov
mov
add
leave
imul
sti
xor
inc
andb
in
cmpsl
clc
pushf
add
stc
bound
clc
pushf
stc
jp
push
ljmp
pop
push
mov
cmpsb
lahf
mov
scas
xchg
and
ljmp
cs
stos
jb
vdivpd
dec
arpl
out
lods
lret
adc
add
daa
mov
das
dec
xchg
loop
scas
sbb
call
inc
lods
aad
in
sbb
and
pop
adc
in
push
lods
leave
dec
dec
cmp
dec
xchg
shll
test
inc
xor
loopne
stos
int
cmpb
lock
mov
xlat
push
mov
push
jbe
jo
cwtl
mov
mov
pop
addr16
inc
movb
popa
push
test
mov
mov
xchg
sub
out
rorl
in
cmp
mov
mov
aas
int
rolb
dec
int
std
nop
mov
push
popa
scas
dec
adc
xchg
mov
scas
inc
inc
push
push
sbb
cld
sbbb
test
sbb
sbb
xor
mov
enter
dec
pop
mov
push
mov
rol
fildl
sbb
cmp
mov
lret
adc
movsl
mov
icebp
inc
lock
bound
mov
lock
jae
in
mov
add
jns
shrl
scas
js
cmp
cs
jmp
add
sarb
fdiv
out
sbb
nop
sbb
adc
push
outsb
sahf
je
fcompl
xlat
mov
lcall
aas
ss
mov
aas
adcb
incl
fsub
sti
cmp
sbb
scas
mov
jge
inc
xchg
xchg
and
xor
xor
xchg
movsl
jbe
aam
inc
mov
aad
rorl
xchg
shrb
test
adc
aad
jecxz
and
adc
jo
mov
sub
xor
aam
shll
xchg
push
rorl
negl
fwait
pusha
out
inc
jne
push
nop
inc
popa
cmp
pushf
mov
out
add
push
outsb
jmp
loope
mov
call
scas
mov
mov
jno
adc
xor
pop
shl
and
icebp
jbe
out
sbb
sbb
sbb
das
in
daa
and
dec
clc
or
pop
mov
mov
dec
outsb
dec
fwait
or
push
and
out
jne
mov
mov
or
cmp
fsub
mov
iret
movsb
push
stc
xor
int
stos
mov
jmp
icebp
out
push
inc
jae
push
lds
push
push
jne
out
cs
sbb
scas
movsl
addr16
test
sbb
mov
repz
lret
mov
mov
rcrb
mov
shlb
add
xchg
push
add
test
jg
add
incl
xchg
es
divb
push
jle
and
inc
sub
loop
out
push
inc
and
push
add
cmp
push
add
insb
cmp
jle
pop
out
inc
lods
inc
push
sbb
lods
pop
or
add
fwait
mov
scas
jecxz
fwait
push
scas
jnp
shufps
sahf
cmp
push
sbb
xor
jle
mov
sahf
fldt
jae
push
cmp
mov
xchg
fwait
xchg
xor
pushf
arpl
or
jnp
xor
or
push
sub
fstpt
mov
or
shrb
in
mov
or
pop
add
imul
mov
jmp
shr
movsb
out
jmp
daa
add
sbb
pop
sbb
or
pop
aam
jl
mov
push
jbe
pushf
cmp
lods
pand
lcall
jp
mov
clc
jl
mov
sbb
sbb
jae
sub
mov
sbb
out
xor
orb
rclb
jge
imul
pop
add
lods
push
clc
out
sbb
or
adcb
jl
or
loopne
cwtl
lcall
mov
fwait
aaa
subb
and
mov
mov
or
test
outsl
jg
push
or
or
sub
loope
mov
mov
dec
xchg
mov
and
adc
fwait
test
push
or
jmp
idivb
jmp
jb
pop
scas
shlb
fimull
pop
add
push
or
xor
mov
leave
sbb
mov
jae
scas
add
rcr
cmp
jbe
jbe
fdivrs
pop
das
insb
mov
sub
ret
sub
movsl
jnp
stos
sti
lret
ret
xchg
jns
data16
cmp
jge
movzbl
shlb
pusha
mov
pop
push
mov
sub
ficoml
outsl
mov
dec
in
mov
std
inc
int
mov
bnd
outsb
jge
adc
jae
inc
or
int3
cwtd
and
ret
jno
xchg
andl
fwait
mov
sbb
movsb
sub
rcrl
test
int
cmpsl
lea
xor
nop
inc
mov
popa
mov
mov
mov
std
sbb
and
cltd
xor
lods
push
xor
dec
aas
jo
push
mov
clc
adc
push
stos
add
dec
or
inc
sub
fimuls
aaa
or
cmp
mov
subl
addr16
aas
push
int3
aam
jbe
das
data16
cmp
sbb
fstp
ret
fsubs
jle
clc
pop
jecxz
test
andb
sub
xchg
dec
aas
nop
pushf
jbe
ret
insl
inc
dec
push
movsl
push
jb
pusha
test
sar
push
stos
in
inc
xlat
push
fcmovne
sbb
sti
data16
scas
fs
push
push
mov
jbe
into
pop
imul
incb
or
jnp
xor
mov
andb
ds
cmp
sti
mov
mov
aad
aas
xor
es
pop
not
push
cmp
into
jnp
cmp
sbb
cmpb
xchg
and
and
je
or
in
sbb
jne
ficompl
adc
xor
stos
sbb
cmp
clc
sbb
mov
xor
jge
xor
test
stos
lock
jnp
mov
push
out
ja
xorl
lret
add
jle
bound
fwait
jp
fwait
jnp
mov
mov
jecxz
push
out
xchg
jnp
sbb
loope
call
inc
mov
mov
mull
int
cmp
or
enter
ficompl
jo
xchg
and
inc
lds
lahf
add
cmp
loope
mov
les
jne
repnz
xor
xor
jge
lods
pushf
jp
pushl
jnp
addl
fistl
xchg
aas
and
push
into
push
rcrb
ret
ja
push
sti
sbb
outsl
jle
add
sti
jns
pop
roll
pop
pop
pop
clc
mov
mov
jg
movsb
xchg
pop
pop
addb
dec
push
jg
xor
xor
mov
xorb
dec
cmp
pop
jb
pop
xor
dec
pop
xchg
pop
pop
xchg
jnp
dec
or
imul
mov
les
js
scas
inc
dec
in
xchg
fnstsw
mov
push
std
adc
dec
loopne
inc
jb
in
adc
cmp
fld1
lret
nop
push
int
test
mov
gs
adc
jb
rcrb
out
insl
dec
add
je
xchg
add
and
cmp
mov
jnp
pop
dec
dec
in
divl
ja
xchg
je
mov
adc
icebp
jmp
mov
fnstenv
daa
pop
push
sbb
sarl
adc
xor
xlat
jae
or
push
dec
sbb
jp
xchg
sub
in
stos
inc
add
push
sbb
dec
scas
lahf
mov
icebp
mov
inc
in
sbb
clc
imul
sbb
jno
inc
rorl
push
je
lahf
cmc
repnz
inc
adcb
mov
pop
std
aad
pop
add
rcrl
data16
sub
scas
sbb
sbb
push
sub
loop
es
sub
xchg
mov
stos
pop
fisubrl
movsb
data16
andb
and
cmpb
mov
andl
mov
or
adc
inc
cmpl
out
test
dec
mov
sub
sbb
cmc
decl
xlat
lret
and
cmpsb
inc
mov
sbb
clc
rcrl
xchg
mov
mov
subb
lock
mov
mov
push
shl
xchg
vpaddd
and
jge
cmp
leave
adc
push
mov
xor
xchg
movsb
mov
sti
or
sbb
and
lock
pusha
int
outsb
mov
xor
addr16
sub
mov
add
cltd
dec
icebp
jnp
movsb
mov
pop
sub
ret
cmp
stos
fdivr
into
inc
cld
sbb
test
bndstx
nop
adc
inc
cmp
xchg
lea
shll
inc
jl
sbb
aad
pop
mov
dec
lahf
or
jae
push
fcomip
push
aad
inc
cs
and
das
sarb
stos
sbb
in
outsb
push
add
mov
repz
out
xor
test
and
inc
push
pop
nop
loope
stos
outsb
lea
pop
rcrl
adcl
push
ljmp
into
add
or
mov
cmpsb
inc
inc
dec
jnp
jns
dec
addr16
xlat
in
sub
call
enter
add
scas
mov
icebp
dec
and
inc
jle
jecxz
es
and
std
push
imul
mov
xchg
inc
into
imul
insb
xor
lods
mov
cmp
push
daa
cmpsl
pusha
push
mov
scas
bound
push
inc
jb
lods
dec
adc
test
movsb
pop
push
push
aaa
insb
inc
sahf
bound
sahf
cli
jg
mov
test
rorb
xor
roll
int
lds
cmc
mov
or
xchg
fsubrs
loopne
scas
aaa
mov
inc
lret
hlt
dec
dec
shlb
sbb
data16
inc
or
rorb
add
pop
sub
loopne
lcall
cwtl
sub
push
pop
push
ret
cmpsl
sarl
scas
pop
pusha
lret
sub
fnstenv
mov
mov
fs
mov
filds
fwait
shlb
push
inc
lds
addb
cmc
iret
movsb
mov
lods
dec
cmp
push
xchg
sahf
ficoms
xchg
pop
pusha
xor
movsb
movsl
pop
adc
inc
fadds
test
adc
outsb
fnstcw
sbb
sbb
pop
imul
sahf
ror
bound
fnstsw
sub
pop
addr16
aad
cmpsl
aad
stos
dec
sub
mov
add
icebp
fldl
cmpsb
dec
jae
jo
in
rclb
xchg
mov
in
rclb
mov
pop
jge
jb
or
aaa
adc
push
outsl
shll
lcall
lcall
sub
or
cmp
popa
or
pop
and
les
adc
jne
aaa
add
or
jmp
dec
inc
fisubrs
sbb
jg
jnp
mov
and
enter
push
adc
jmp
mov
push
dec
and
pop
adc
jle
mov
lock
inc
lahf
out
and
imul
xchg
and
mov
jp
jno
enter
movsl
lahf
adc
or
jmp
pop
adc
jo
mov
sub
insl
adc
xorb
inc
js
jb
mov
or
jae
ds
scas
imul
add
test
and
movsw
inc
push
mov
les
fwait
push
xor
pop
in
add
popl
notb
dec
xchg
lock
pushf
or
in
testl
xchg
shl
sahf
movsl
arpl
loopne
aam
int3
js
add
xor
fs
dec
cmp
inc
xor
mov
push
daa
scas
or
push
sub
sub
jnp
fcmovnu
sub
jae
sarb
push
jmp
dec
ret
aas
push
clc
loope
insl
aam
fcom
and
cld
js
dec
fs
sbb
and
pop
xchg
in
mov
movsb
mov
lds
or
xchg
mov
push
fildl
sub
pop
and
frstor
cmp
cmp
xchg
cltd
adc
mov
pop
and
or
test
lcall
and
movsl
loope
jle
push
push
xor
imul
inc
insb
ret
clc
fistl
leave
in
jl
mov
mov
test
and
adc
mull
sbb
mov
push
pushf
dec
inc
pop
insb
inc
or
sahf
dec
ds
sbbb
mov
int
xchg
rorb
movsb
xchg
adc
xchg
mov
xchg
lcall
sub
adc
pop
cmp
scas
fs
pushf
mov
cmp
mov
dec
data16
in
xchg
cmp
sarl
loope
cmpsb
fsubl
mull
push
xchg
push
dec
mov
pop
std
icebp
sub
lret
and
rolb
aas
mov
push
pop
not
add
cltd
push
push
xchg
inc
add
jno
dec
push
popf
adc
jp
mov
add
lods
add
pop
lret
mov
mov
or
cmp
out
cwtl
mov
pop
in
jp
test
lahf
jp
cmp
lods
push
outsb
rep
cltd
in
ss
adc
sbb
mov
clc
outsl
arpl
adc
decl
in
out
sbb
jmp
movsl
dec
sarl
lods
es
push
sub
ja
mov
mov
sbbb
cltd
cltd
or
enter
sbb
loopne
xor
mov
adc
cmp
scas
cmpl
add
inc
xor
and
mov
shl
jnp
ret
push
pop
inc
pop
cmp
sbb
mov
sti
hlt
sub
sub
add
pop
into
jp
dec
jno
mov
pop
repnz
lock
mov
xchg
mov
and
inc
movsb
sub
aaa
cli
out
fdivl
fadd
mov
sahf
mov
lcall
mov
jle
outsl
sbb
sbb
sub
push
testl
sub
ret
lret
adc
xchg
out
clc
inc
cld
arpl
int3
clc
inc
add
ret
xor
hlt
test
ja
jne
setnp
mov
push
pop
mov
call
popf
push
cmc
das
jne
pop
sub
sbb
addr16
ljmp
test
push
stos
and
test
movsb
xchg
xlat
ja
and
lea
in
roll
stos
and
mov
xchg
shlb
jo
fbstp
sti
cmpsb
pop
pop
push
out
gs
inc
add
loope
mov
out
inc
cmp
insb
sbbl
insl
push
lods
cmpl
mov
lds
add
inc
inc
bound
inc
dec
sbb
sbb
mov
mov
inc
cmp
mov
dec
dec
repz
add
fwait
push
xlat
xchg
std
sbb
mov
out
loope
jg
mov
mov
and
jge
scas
push
rcrb
call
lret
jae
sbb
scas
xchg
ljmp
mov
mov
leave
addb
pop
mov
push
lret
mov
sbb
jo
je
xchg
comiss
aam
stos
adc
outsb
sbb
or
xor
loop
mov
cli
mov
xchg
jb
push
inc
mov
sub
and
repnz
sbb
dec
push
mov
xchg
cmp
aas
subl
sub
enter
mov
out
add
sarl
je
hlt
sbb
jb
cmp
shr
movsl
push
xchg
dec
out
mov
and
mov
inc
xchg
lcall
xor
in
addb
outsl
sub
mov
adc
fcomip
adc
rcrl
mov
arpl
imul
pop
jle
and
push
or
fwait
push
fcmovb
dec
int
nop
insb
test
cld
mov
add
int3
lds
mov
mov
cmp
stc
fdivl
fwait
sti
xor
arpl
and
add
gs
aam
movsl
stc
stos
mov
mov
xchg
out
xchg
subl
outsb
sbb
dec
jmp
add
sub
lret
dec
call
out
lahf
jbe
scas
sub
lret
mov
push
jne
mov
int
jmp
pusha
add
loopne
popa
cmpsb
xchg
and
cli
adc
pop
mov
pusha
mov
imul
js
sar
dec
mov
mov
je
jno
vshufps
xor
rcl
je
notl
xor
xchg
cmpsb
mov
leave
stos
fcmovu
gs
jae
add
and
add
cmpl
popf
mov
fs
cwtl
hlt
aas
stos
data16
arpl
rcll
jg
mov
mov
push
insb
mov
adc
fwait
mov
push
pop
gs
fcmovne
jl
aas
cmp
lods
cmp
cmp
and
mov
pushf
xor
inc
mov
dec
jns
out
shlb
daa
xchg
in
mov
xchg
push
or
out
scas
jle
sub
mov
mov
dec
jns
ljmp
subw
xlat
fwait
repz
in
aam
mov
in
cwtl
imul
cmp
xor
shlb
or
icebp
xchg
aas
mov
mov
in
pop
pop
idivb
fbld
cs
or
mov
into
mov
pop
xor
inc
and
leave
mov
lret
imul
fsubs
testb
xchg
cmp
or
mov
jbe
sub
int
gs
inc
mov
in
mov
mov
mov
adc
inc
sbb
cmpsb
sahf
inc
push
std
jecxz
pop
andb
mov
sbb
inc
cwtl
add
sbb
push
subl
adc
adc
arpl
hlt
out
pop
lret
pop
shl
lods
neg
loope
add
outsb
test
pop
xorl
pop
inc
xchg
mov
aas
pop
aam
adc
out
int
lcall
xchg
push
lret
xchg
adc
aaa
mov
sub
aam
mov
push
ss
cmp
ud1
pop
out
cmp
in
cli
leave
les
add
jns
or
add
stos
and
cmc
fsubp
pop
push
shrb
fwait
sti
xchg
cmp
ja
push
and
mov
or
add
test
add
push
js
sbb
sub
mov
mov
mov
cwtl
ss
addr16
jg
ret
pop
inc
jmp
mov
inc
mov
cmp
jnp
gs
mov
in
int
sbb
mov
jg
push
iret
push
mov
in
loop
orb
mov
cmp
cmp
stos
test
daa
js
pop
sub
nop
push
xor
add
cmc
or
adc
dec
and
xorl
inc
in
shrl
push
jnp
dec
adc
cmc
test
int
mov
add
and
les
pop
in
loop
mov
call
leave
mov
mov
jecxz
xchg
cmp
inc
fstps
pop
push
sbb
outsl
aam
xor
ds
xchg
or
dec
or
and
adc
test
leave
std
sub
and
shlb
icebp
dec
fildll
sbb
pusha
xor
xchg
xrelease
outsb
ret
fildl
xchg
push
xchg
cmpsb
jb
lock
dec
add
sti
hlt
popa
adc
inc
push
inc
inc
lahf
push
mov
cld
nop
xlat
lock
jmp
aas
and
push
notl
clc
sub
lock
in
sub
imul
stos
push
adc
sbb
mov
dec
enter
lea
dec
xchg
add
pop
lret
lahf
jns
ret
leave
inc
addl
adc
cmp
aad
pop
inc
aam
ficomps
inc
push
jnp
mov
push
roll
cmc
aaa
cld
add
xor
fs
out
dec
mov
xchg
leave
repnz
push
sbb
mov
and
pop
das
out
mov
xor
fisttpll
adc
dec
pop
stos
xor
imul
mov
mov
test
out
pop
or
les
mov
cmp
jle
pop
xor
or
shrl
call
mov
jl
mov
movsb
fisttpl
scas
aaa
inc
test
and
fmulp
jp
test
fbld
dec
push
mov
ljmp
jo
sub
inc
add
pop
sub
loopne
js
mov
repnz
test
and
pop
sub
cmp
sub
xor
push
jb
in
test
mov
cli
sub
into
dec
dec
lock
ret
fidivs
xchg
gs
pop
push
mov
cs
cmp
push
xchg
in
aas
dec
add
or
jecxz
adc
cmpsb
xchg
mov
jns
fnsave
sub
cmp
mov
push
cmp
rcll
push
or
and
cmp
or
stos
jle
cmp
jmp
cli
push
pop
popa
cmp
rolb
out
and
das
pop
jecxz
mov
data16
sbb
add
or
or
xor
out
sbb
adc
loop
andb
out
mov
addr16
mov
jecxz
jmp
fwait
xor
sahf
lret
test
sub
fs
pop
pop
shr
jmp
mov
ror
jp
jae
cmp
inc
stos
xchg
arpl
arpl
out
stc
icebp
cmpsl
mov
xchg
mov
ss
je
int
test
sbb
inc
xor
shrb
mov
lods
pop
loope
cs
sbb
adc
mov
pop
push
cltd
rclb
and
das
dec
cmpl
push
add
mov
aam
sbb
daa
jnp
icebp
mov
movsb
or
mov
lret
out
mov
mov
push
cs
outsl
icebp
push
mov
or
pop
shl
scas
cld
add
pop
add
sbb
jae
push
mov
mov
or
pop
fdivrs
in
pop
ss
push
sub
fldt
enter
ficoml
out
aam
ret
add
repz
fimull
pop
xor
insb
roll
cmp
loopne
mov
sub
jle
sub
ja
add
cltd
mov
xchg
pop
mov
xchg
insl
je
pop
mov
sti
dec
stc
or
jno
cmp
movsb
pop
or
call
xor
push
movsl
ss
outsb
mov
into
fisubrl
cli
inc
pop
test
movsb
aad
nop
movsb
in
jns
cmp
roll
sub
cmp
iret
pop
inc
roll
jns
orl
add
jne
sub
mov
in
or
or
into
cmpl
insb
leave
lahf
loope
dec
dec
push
mov
rol
sub
adc
into
shr
mov
aad
sub
clc
sub
dec
add
push
aas
mov
sub
lods
das
ret
jecxz
mov
mov
push
add
pushf
aad
jnp
int3
loope
pop
testl
or
jne
cmc
inc
into
sub
or
cmpsb
mov
sti
lahf
cmp
or
add
outsl
jmp
xchg
push
xor
push
es
mov
inc
ljmp
inc
adc
lcall
jbe
dec
mov
jg
add
andl
cmc
insb
out
or
xchg
ret
adc
ret
cmp
fisttpll
lret
adc
popf
gs
pop
pop
stc
add
mov
leave
jecxz
aaa
xor
aaa
push
xchg
je
mov
mov
mov
pop
add
cli
js
pop
pop
cmp
cmp
ret
push
jnp
cmc
dec
test
aaa
pusha
push
jo
imul
adc
fld
ljmp
les
dec
mov
sarb
sub
arpl
sub
jne
mov
xor
sbb
out
repz
jle
xchg
aaa
mov
xchg
leave
pop
xchg
pop
sub
js
add
out
lods
push
jecxz
fsubrl
int
mov
je,pt
xchg
jne
sbb
pushf
xlat
cmp
mov
jne
in
inc
lcall
pop
inc
mov
jno
push
pop
aad
scas
daa
xor
ret
adc
in
dec
xor
xlat
stos
cmp
and
ficomps
xor
jmp
loop
cmc
clc
test
xor
call
jl
mov
xchg
mov
or
sbb
ja
xor
cld
jp
lock
cmpsb
mov
mov
pop
add
push
daa
mov
pop
push
sub
loopne
or
cmovs
dec
fnstsw
add
mov
insl
adc
sbb
rolb
xchg
insb
pop
ja
insl
mov
xor
sbb
inc
jl
xchg
mov
cmp
cmp
cmp
loopne
push
add
gs
fldl
jl
sahf
dec
sbb
dec
test
pop
cmc
fsubs
mov
loope
sub
mov
lods
test
adcl
lock
mov
jns
sub
dec
push
cwtl
push
aaa
ljmp
mov
inc
mov
cmp
rorl
jns
pop
xchg
xor
push
in
lea
push
adc
sbb
daa
or
mov
push
mov
iret
lds
push
jmp
jbe
call
mov
jns
js
rcll
mov
jl
loope
push
in
and
addb
and
xor
add
stc
jnp
push
rorl
sbb
xchg
push
stos
cltd
fimuls
and
rolb
jae
mov
or
imul
in
cmp
mov
bound
push
push
push
adc
mov
stos
push
shlb
and
out
outsl
mov
cld
dec
xchg
mov
sbb
jnp
out
lods
push
dec
sbb
push
xchg
and
mov
jmp
push
mov
lret
insl
int3
fucom
mov
or
push
dec
fstpt
add
lret
or
jae
push
aaa
pop
xchg
cli
in
dec
jno
push
mov
insb
inc
add
rclb
sti
xchg
leave
adcb
inc
jp
or
dec
out
fistpl
dec
jns
lods
and
cld
popf
jge
inc
or
mov
dec
leave
push
pop
enter
test
sub
sub
repz
pushf
popa
fimull
sbb
lods
pop
clc
cmp
sub
cli
jnp
mov
iret
and
adc
int
subl
mov
jmp
sarl
mov
inc
xor
inc
pop
shlb
xchg
sbb
cmc
adc
outsb
addr16
popa
in
xor
dec
sub
push
rcrb
ds
sbb
daa
mov
push
dec
in
in
mov
cwtl
and
jmp
fidivl
lea
fimuls
les
insb
mov
pop
jo
mov
push
mov
das
inc
sub
jb
outsl
psrlq
inc
jmp
sub
sbbb
test
xor
push
mov
jo
pop
push
dec
adc
ret
dec
push
push
scas
cld
add
packssdw
std
shll
pop
or
and
addb
mov
enter
jo
push
aas
cmpsb
jle
adc
xor
sbb
pop
test
jo
imul
outsl
jge
push
cmp
stc
mov
fsubp
add
jp
and
cli
sbb
lock
rcrb
shlb
ja
xchg
mov
cwtl
jmp
orb
insl
je
les
lret
fprem
push
gs
stos
dec
fdivrl
jle
jp
gs
lahf
push
or
int
daa
je
jp,pn
loope
leave
or
jle
xchg
std
nop
or
ficompl
loopne
add
enter
ficompl
into
sbb
test
cmpsb
jle
addl
fstl
or
adc
dec
iret
push
popa
push
imul
test
push
cmp
sbb
pusha
cmp
mov
mov
add
stc
shrb
test
cmp
add
sbb
push
sar
lcall
push
and
push
ffree
inc
cmpsl
repz
stos
sbb
mov
js
xchg
jge
add
xchg
sbb
aaa
andl
xor
sbb
lret
inc
jmp
cmp
in
ds
jns
jle
in
push
lret
mov
or
mov
sarb
enter
ret
fists
lcall
or
popa
jns
in
add
mov
dec
stc
sub
test
mov
repnz
and
in
ljmp
je
jp
in
lret
xchg
mov
xor
outsl
std
pop
rorb
stos
stos
jo
sar
xor
lret
in
cmp
lret
dec
js
sahf
getsec
sub
outsl
je
push
imul
push
jb
or
sub
or
push
ret
mov
sahf
or
cmpsb
or
push
fstpl
mov
mov
je
inc
insb
cmp
call
mov
jae
out
pop
inc
mov
test
aas
and
push
inc
ja
mov
out
push
mov
jp
sub
dec
scas
sub
pushf
icebp
sbb
xor
cmp
repnz
icebp
shll
adc
mov
push
xor
mov
in
lahf
outsl
sub
aaa
movsb
mov
dec
in
jns
jl
mov
hlt
in
xor
pop
or
popf
sub
dec
sub
je
out
pop
sbb
lea
movsl
pushf
xor
pop
sbbl
fcoms
andb
inc
sub
push
dec
notb
xor
cmpsb
movsb
xor
sbb
and
mov
mov
rorl
mov
pop
stos
jmp
xor
cmp
xchg
push
imulb
js
sbb
pop
mov
std
xor
xor
daa
aad
fcom
push
cmp
mov
imul
enter
scas
fdivrs
jge
outsb
mov
cwtl
outsb
mov
adc
data16
test
mov
pop
mov
mov
push
popf
jne
pop
jnp
inc
loopne
xor
addr16
insb
pop
loope
cmp
push
movsb
mov
push
out
or
sbb
test
dec
jbe
int3
cltd
xor
ds
mov
lcall
fdivl
stos
aaa
or
mov
and
test
inc
fadd
cld
push
sarb
stc
pop
and
outsb
jb
jne
cltd
push
fcoms
aam
ror
imul
jae
ficoml
mov
movsl
fisubs
cmp
mov
xor
test
and
loopne
xor
pop
shll
dec
mov
xchg
cmpsl
push
mov
mov
sub
push
test
clc
and
jnp
mov
sbb
ja
movsb
std
or
mov
jno
out
scas
dec
pop
dec
mov
mov
shll
out
leave
dec
inc
dec
popf
push
fwait
sbb
jne
xchg
sub
gs
adc
fnstenv
xchg
fld
shr
inc
fstpt
mov
data16
pop
sbb
sub
aam
xchg
dec
movsb
fwait
adc
scas
into
mov
rol
cmp
dec
imul
loop
imul
push
push
and
mov
ficoms
or
dec
jmp
push
clc
div
add
xor
xchg
xor
push
out
rol
pop
jo
mov
lds
out
insl
lahf
call
leave
mov
lcall
and
and
stc
jno
test
repz
jne
mov
and
je
cs
movsb
pop
push
cmp
jns
inc
test
pop
adc
xor
lcall
fsubrp
fs
push
fxch
aam
fst
xor
ds
imul
jecxz
xor
or
xor
mov
inc
clc
mov
xor
cmp
fnstcw
sbb
dec
cli
inc
add
mov
stos
in
out
mov
adc
das
pop
imul
sbb
mov
mov
sti
push
or
adc
add
scas
shlb
mov
in
mov
adc
mov
dec
push
push
sub
test
inc
mov
pop
xchg
divl
mov
les
cmp
add
pop
xchg
jne
ret
adc
dec
repz
cmc
imul
sub
popa
sahf
fisubs
jl
je
fimuls
arpl
jg
sub
sbb
adc
imul
and
add
roll
sub
movsb
jg
negb
not
imul
cmc
push
sbb
repnz
dec
dec
out
add
out
jae
jge
sub
enter
in
into
pop
bound
and
dec
stos
mov
clc
adc
psubq
lock
movb
outsl
sbb
mul
pop
xchg
popf
cmpsb
inc
gs
mov
pop
add
or
dec
mov
add
push
and
sub
pop
cmpsb
lock
inc
or
pop
dec
out
popa
in
sub
and
out
mov
movsl
or
and
dec
aaa
adc
shll
inc
das
inc
mov
sti
test
adc
and
out
loopne
lds
add
scas
push
test
fnstenv
lret
call
dec
cmp
cli
mov
mov
pusha
shrb
sbb
dec
jecxz
sbb
iret
pop
cmpsl
aad
mov
pop
loopne
jne
daa
lods
arpl
bound
ss
mov
sub
and
jbe
push
or
mov
fimuls
mov
inc
ja
popa
or
mulb
mov
mov
rolb
int
or
ret
test
mov
push
push
jo
jae
sbb
jp
sub
sti
sarb
imul
or
xor
sub
xor
insb
jge
fsts
inc
ret
and
jecxz
cmc
shlb
pop
arpl
jo
sti
hlt
imul
fsubrs
cmpsl
mov
sub
cs
icebp
frstor
adc
push
sbb
pop
mov
push
cwtl
shlb
mov
icebp
gs
jecxz
jge
cwtl
sub
pop
not
mov
lret
sub
cmp
pop
je
jo
fisubrl
stc
das
je
jecxz
sub
pop
nop
sub
cmp
cltd
push
outsb
test
pop
je
aam
xor
mov
aas
or
sub
arpl
stos
ucomiss
jae
int3
add
or
es
gs
jp
cmp
push
arpl
jecxz
ljmp
movsl
outsl
lret
adc
test
cmp
push
test
out
or
push
xchg
or
push
jg
mov
inc
push
mov
pop
pop
lret
xor
or
mov
popa
push
xor
aam
pop
dec
mov
xchg
or
jle
jge
xchg
mov
xor
out
imul
add
out
loopne
sub
add
or
jmp
cmp
sbb
ljmp
imul
xchg
dec
out
je
jge
icebp
pop
push
jbe
dec
stc
pop
cltd
jbe
sbb
sub
pop
cwtl
je
repz
into
shr
mov
test
gs
add
add
jg
dec
add
clc
lock
pop
ret
push
xchg
ret
lcall
add
aad
lahf
push
jl
push
jle
dec
cmp
add
dec
pop
or
arpl
jne
pop
mov
jo
int3
loop
cmp
fldcw
fwait
cmpsl
push
ret
das
jmp
or
sbb
cmp
aas
cmc
mov
test
mov
loopne
test
jle
mov
stc
sbb
lock
movsb
mov
out
insl
pcmpgtw
mov
add
mov
fwait
inc
dec
xchg
nop
aas
notl
outsl
pop
int3
sub
int3
jnp
jmp
or
jne
lret
push
sub
and
mov
inc
outsl
lret
in
cmc
pop
xchg
jbe
and
dec
mov
mulb
adc
mov
push
ljmp
and
sbb
cld
jp
js
jne
hlt
push
mov
test
daa
nop
sub
mul
dec
loop
inc
mov
jecxz
push
or
add
in
mov
push
mov
mov
push
js
mov
sub
insb
push
mov
aam
js
pop
jecxz
inc
insl
adcl
jp
clc
mov
bnd
mov
lock
adc
xchg
or
jge
imulb
adc
cs
lods
sarl
xor
daa
bound
sub
adc
sahf
shrl
stos
sahf
faddl
lds
push
fs
adcb
sbb
dec
cs
cmp
jb
push
fwait
cmpsb
ret
mov
cmpsl
repnz
or
xchg
xor
lock
gs
mov
lock
aad
movsl
push
adc
ret
add
xor
pop
or
or
sub
movsl
cmp
cli
mov
jecxz
out
cld
add
loop
lret
push
out
fucomi
repnz
fldpi
xor
xchg
push
insb
lahf
shlb
addr16
xadd
test
jge
aam
aaa
inc
ss
outsb
sbb
nop
dec
and
jb
nop
ljmp
out
jl
cmp
clc
fisttpl
sti
fwait
pop
adcl
shll
outsb
fdiv
int
jb
je
cmpsb
pop
adc
test
sub
cltd
pop
fbstp
hlt
sti
sub
jecxz
scas
pop
imull
pop
rorb
cwtl
cwtl
mov
push
lea
xchg
mov
inc
mov
fsubrs
notl
shrb
add
int3
add
xchg
xchg
mov
push
mov
sar
lcall
fs
sub
stc
xchg
mov
rorl
jno
adc
fs
push
xor
jl
inc
sub
aam
pop
fiaddl
movsl
test
scas
jle
add
scas
sbb
jns
dec
xchg
push
enter
cmpsb
sub
fs
fisubl
popf
add
lock
sbb
inc
sarb
ret
rol
test
inc
enter
mov
add
hlt
or
dec
cmpsl
data16
jbe
pop
add
xchg
mov
fdivl
mov
cs
fs
stos
stos
fnstsw
addl
mov
out
mov
rcll
xchg
cwtl
xchg
sarl
push
sub
mov
adc
stos
add
seto
jae
sbb
daa
adc
ss
pop
inc
not
std
jb
inc
xor
outsl
jle
or
das
push
xchg
sub
sub
cs
sbb
scas
cld
inc
aaa
adc
sarl
mov
pop
cmc
dec
inc
push
stc
push
jo
lret
xor
in
call
and
jecxz
or
cmp
aad
cmp
lods
and
cld
sbb
xor
lds
mov
sub
inc
mov
or
jp
inc
clc
and
mov
mov
mov
cmp
add
pop
dec
jno
in
in
pusha
sbb
stos
cmp
out
std
mov
pop
in
mov
das
test
adc
mov
add
xchg
xlat
add
inc
faddl
ja
mov
repz
ret
cmpl
test
insl
sub
jle
cmp
adc
mov
push
scas
cmp
fcoms
dec
pushf
mov
xchg
aaa
pop
mov
cmp
cmp
scas
ds
jmp
adc
mov
pushf
xor
dec
and
or
cwtl
cli
xor
jbe
and
aam
mov
test
stos
nop
je
scas
jns
jl
inc
or
out
popf
dec
jg
daa
enter
and
aad
dec
xchg
jno
adc
pop
popa
ret
sarb
add
mov
pusha
adc
cmp
cmpb
push
jae
or
mov
rclb
sbb
jbe
sbb
std
xchg
sahf
dec
xor
sar
mulb
mov
imul
cmp
aad
hlt
push
sbb
ret
mov
adc
js
lahf
loop
xor
push
divb
lret
lds
or
inc
jl
cmp
or
outsb
inc
in
adc
lret
pop
pop
js
inc
mov
int
cltd
dec
pop
push
adc
xor
jge
rorl
call
sbb
cmp
pop
out
std
pop
mov
pop
inc
popa
adc
aaa
mov
fwait
cltd
xchg
inc
clc
xchg
mov
jns
xchg
stc
dec
popf
xchg
dec
js
xor
icebp
jmp
cmpsb
cwtl
inc
lea
iret
add
add
cmc
mov
mov
jmp
imul
and
and
and
jae
pop
push
fcmovnu
sub
jecxz
sti
adc
jg
lahf
adcb
loopne
jp
add
in
mov
cs
xchg
cld
ffreep
loop
das
mov
mov
mov
pusha
lods
pop
movsb
stos
sub
gs
inc
icebp
mov
xlat
xchg
in
adc
push
xorl
aaa
add
jno
cmp
mov
inc
inc
xchg
xlat
cs
sbb
dec
lods
adc
fst
or
mov
loopne
xchg
adc
dec
mov
rcrl
test
mov
jg
jo
imul
mov
mul
inc
xchg
fstps
jnp
cmpsb
fldl
xlat
inc
xor
int
lret
mov
cmp
mov
pop
cmp
inc
sarl
add
or
mov
ret
aas
and
call
andl
pop
jnp
push
stos
insb
adc
xor
adc
cli
adc
jle
pop
aaa
js
imul
ret
jns
pop
pop
popf
rcrl
sbb
sub
xchg
divb
stc
lods
cmp
lcall
inc
jl
adc
fwait
adc
jmp
into
push
das
jmp
mov
sbb
pop
jo
test
jg
popf
sbb
fldl
lods
ds
inc
ljmp
movsb
loop
or
sti
sub
or
andl
mov
enter
ja
outsl
cmp
pop
xchg
pop
addr16
sub
es
dec
push
adc
jb
mov
das
sub
push
adc
mov
jno
jecxz
sub
and
adc
pop
add
aad
pop
cmp
mov
faddl
mov
inc
sahf
sbbl
lret
xor
popa
sbb
imul
mov
and
jecxz
fsub
sub
sarb
xchg
lahf
xchg
mov
xchg
ds
and
dec
sbb
adc
jns
xor
mov
jmp
mov
rcr
shrb
jge
test
fdivs
lods
out
push
mov
inc
test
cs
sti
movsb
xchg
sbb
mov
rcrb
dec
fcomi
fbstp
or
hlt
adc
inc
sub
dec
pop
mov
inc
sub
mov
sbb
movsb
mov
mov
push
daa
icebp
or
mov
leave
enter
lahf
ds
cld
or
inc
pop
cmc
mov
out
mov
inc
leave
pop
or
or
pop
dec
inc
lahf
lods
push
cld
or
test
inc
outsl
mov
mov
test
sub
or
imul
xchg
push
push
push
out
mov
fcomps
dec
dec
ja
repnz
imul
pop
sbb
or
sarb
ficoml
xor
shrb
mov
push
popf
jecxz
mov
cltd
cmp
popf
cmpsb
test
shll
xchg
push
or
sub
mov
ljmp
xor
idivb
push
and
stos
push
mov
jb
int3
imul
jnp
sub
lds
push
xchg
test
xor
clc
mov
enter
fcompl
in
in
inc
push
inc
ss
mov
or
or
inc
mov
shlb
mov
push
iret
mov
sub
jle
xlat
mov
ret
insl
sbb
mov
cli
and
adc
nop
mov
push
inc
stos
and
pusha
cli
jle
test
push
loopne
pushf
push
js
les
icebp
jge
xor
sahf
imul
loope
mov
inc
insl
fiaddl
cli
sbb
dec
notl
mov
push
mov
fcoml
dec
pop
xchg
inc
jg
add
mov
cmp
push
shll
xlat
cli
push
iret
mov
add
pop
repnz
xchg
test
or
mov
js
lahf
mov
add
std
push
jecxz
mov
jge
fmuls
adc
or
fsubl
divl
into
pushw
push
adc
xchg
fcmovb
mov
mov
into
enter
pop
lock
sub
dec
or
aam
mov
mov
dec
imul
mov
jb
pop
xor
mov
stos
insb
xchg
jle
mov
and
pop
mov
ret
xchg
sbbb
inc
sbb
je
hlt
inc
add
and
dec
fstps
sbb
xchg
scas
and
add
mov
out
push
push
mov
inc
xchg
cmp
jno
jmp
fcmove
int3
jae
or
inc
aaa
or
insl
inc
mov
nop
adc
push
add
popf
jae
xor
push
into
loopne
enter
mov
aam
pop
mov
loop
sub
jmp
sti
shll
sbb
xchg
push
nop
sbb
shll
xchg
outsb
adc
cmp
scas
mov
jmp
unpckhps
cmp
xor
jp
mov
cmp
mov
dec
mov
das
aas
adc
push
into
ficomps
dec
inc
cmpsl
out
cs
inc
movsb
mov
je
repz
enter
mov
pop
ds
push
pusha
jno
aad
xorb
leave
dec
sbb
mov
das
jo
adc
filds
adc
aaa
loop
aas
subl
shrb
adc
or
xlat
stos
mov
imul
jnp
movsb
adc
popf
enter
icebp
adc
movb
jg
pop
add
add
mov
jecxz
or
into
xchg
pushf
repnz
mov
xchg
adc
insb
pop
std
sarl
adc
lahf
sbb
lods
inc
inc
sub
repnz
ds
dec
push
sbb
or
mov
cmp
mov
push
adc
jne
dec
cmp
je
cmp
fwait
push
sub
xchg
dec
inc
push
scas
popf
rcll
into
mov
add
insl
ds
int3
push
sub
pop
push
lods
cs
in
scas
cltd
outsb
mov
xchg
cld
pop
pop
stc
in
arpl
sub
pushf
sub
popf
ret
lds
mov
repz
fidivs
fwait
mov
or
push
fs
nop
pop
icebp
and
or
adc
lds
jb
pop
ja
fldenv
lcall
ds
add
int
in
test
cmpsb
call
daa
push
inc
fs
pop
xor
out
mov
ret
add
enter
fisubrs
fs
mov
sub
inc
mov
pop
jle
jle
inc
sub
mov
add
bound
arpl
imull
adc
push
loope
pushl
sub
repnz
mov
out
inc
fistps
xlat
sub
out
mov
lret
sub
push
ja
das
push
and
push
mov
push
loopne
push
icebp
sbb
or
pop
cld
dec
jne
mov
jne
mov
pop
fs
dec
clc
lods
ja
lods
and
nop
mov
bound
int3
sub
sbb
xchg
dec
stos
jg
xchg
pusha
or
xor
jbe
mov
ficoml
mov
rcrb
cmp
xchg
inc
or
mov
dec
test
jns
inc
adc
sbb
xor
rcll
sbb
push
cmpsl
mov
sbb
movsl
cli
xor
cmp
jae
test
sti
xor
outsb
fsubl
jmp
adc
rolb
lods
xor
add
imul
dec
notb
cmp
or
lods
lock
jne
movsb
ret
pop
xchg
jle
cmp
add
pop
push
push
inc
imul
fstps
inc
xchg
movsb
daa
push
outsb
clc
inc
pop
jmp
sbb
fcoms
push
jp
mov
lcall
cmp
sub
ss
mov
push
call
adc
lea
and
ljmp
xor
push
es
sahf
adcl
testl
jg
add
mov
leave
out
jb
out
dec
in
pop
in
mov
xchg
les
mulb
mov
pop
mov
inc
add
fcoml
stos
daa
test
adc
push
sbb
mov
cltd
or
cmp
es
sbb
dec
or
outsb
push
shrl
loope
jecxz
dec
frstor
xchg
cltd
push
frstor
out
scas
loope
out
mov
and
imul
or
mov
adc
sbb
insl
jg
push
addr16
push
jecxz
dec
xchg
popa
adc
stc
sbb
sarl
mov
xchg
push
fldl
jb
push
sbb
fidivs
in
push
sar
mov
jge
aas
aam
pop
ss
sbb
lcall
adcb
pop
pop
insb
or
lret
sbb
xor
cmp
mov
icebp
mov
mov
add
lods
jge
add
insl
mov
sbb
fildll
call
call
xchg
add
out
movb
in
mov
lret
cmpsb
icebp
fwait
es
xchg
push
sub
jns
push
push
push
fmul
xchg
sub
pop
lods
fincstp
fsubr
lock
fs
adc
jl
sub
jae
cwtl
mov
cmpsb
je
sub
mov
fcompl
frstor
in
arpl
xchg
int
jnp
and
bound
lret
sbb
cmp
les
add
sbb
hlt
sbbb
int3
addr16
enter
xchg
repnz
pop
fs
or
sar
pop
lret
outsl
subb
mov
mov
dec
pop
push
jmp
add
cmpsl
and
test
push
inc
nop
cld
mov
je
stos
rorl
ror
lds
push
or
pop
pop
push
push
lahf
dec
xor
jp
sbb
lret
movsl
jno
icebp
sub
cwtl
fldl
sti
inc
pop
test
xor
xlat
lock
adc
mov
aam
xchg
jle
xchg
jb
sbb
dec
mov
mov
add
movsb
repz
idivb
jnp
xchg
sbb
jp
sbb
lcall
fsubr
mov
lods
xor
mov
xor
int
mov
xchg
pop
outsw
mov
mov
test
xchg
les
cmc
repz
movsl
mov
pop
dec
fcoml
cmp
scas
roll
push
mov
mov
clc
mov
sub
jns
push
nop
or
fists
mov
inc
mov
notb
push
mov
dec
mov
iret
das
dec
fcoml
mov
icebp
test
leave
test
xor
mov
fdivl
push
or
into
jo
mov
cmp
scas
sub
cmpsl
sahf
cmp
dec
stc
or
insb
cmpsl
repz
push
pop
je
lods
jge
dec
nop
ds
arpl
lret
jp
xor
test
pop
xor
ljmp
mov
jb
jp
bound
dec
mov
sub
xor
aaa
pop
rorl
xchg
mov
rorl
testl
sbb
aas
push
sbb
int3
sub
jae
mov
nop
std
jns
lret
push
pop
stc
int3
or
repz
push
stos
nop
jbe
data16
and
lret
mov
xchg
adc
push
dec
arpl
pop
xor
pop
sub
or
adc
sbbl
mov
jge
cmp
pop
shr
cli
dec
push
lds
cwtl
movsb
add
int
mov
shrl
xchg
cltd
adc
xor
or
iret
nop
adc
lret
shrb
sub
mov
popf
push
pop
sbb
lds
mov
paddd
fs
push
sub
gs
cmp
xor
test
lahf
cld
and
addr16
into
sbb
cmc
adc
lods
jp
orl
dec
leave
push
jl
call
xorl
dec
movsl
cld
cmp
jge
cmp
sbb
stc
out
adc
outsb
jp
loope
cmp
not
icebp
push
sub
popf
add
pop
xor
dec
dec
jae
or
jmp
outsl
mov
rcll
mov
nop
xor
inc
or
cmp
mov
push
adc
ja
jge
jo
cs
push
pushf
repz
aad
sub
in
and
loop
inc
cld
sahf
inc
sbb
lods
popa
xchg
cld
testl
adcb
adcl
jp
repnz
mov
pop
outsb
adc
out
movlps
adc
mov
cmp
lds
push
fwait
aad
scas
inc
lret
mov
add
pop
mov
xorps
lahf
out
adc
es
sbb
xchg
imul
xlat
into
popa
cmp
fdiv
ret
inc
mov
push
ljmp
clc
push
dec
rclb
ret
lds
fistl
ja
sub
fidivs
mov
sbb
int3
insl
inc
data16
jnp
movsl
in
sbb
pop
lods
dec
cwtl
dec
cmp
daa
roll
test
jle
sbb
push
push
jmp
mov
push
sbb
push
push
sbb
sub
mov
xchg
mov
and
xchg
push
xchg
mov
popf
fidivs
aad
les
or
sahf
jne
movsl
int
adc
lret
loopne
enter
idivb
mov
fldenv
sbb
cmp
arpl
jge
lret
aas
mov
movsl
sub
mov
pop
sub
mov
cmp
pop
adc
test
pop
popf
insl
in
jne
ss
mov
push
jle
adc
push
lahf
push
xchg
jp
mov
movsl
pop
dec
sbb
ficomps
cmp
ljmp
cmc
push
jmp
or
loope
mov
inc
xor
cltd
and
clc
shlb
into
or
stos
push
push
lahf
enter
jecxz
add
sbb
jmp
jne
lds
jg
adc
testb
shrl
pop
xchg
add
mov
adc
mov
or
sub
loope
aaa
or
push
daa
outsl
mov
int3
sub
jnp
sub
add
lahf
push
xchg
stos
cmp
mov
jo
sub
mov
in
or
imul
clc
iret
cli
dec
stc
pop
test
mov
test
xor
inc
nop
leave
imul
inc
cmp
xlat
mov
mov
lods
enter
fisubrl
js
mov
enter
dec
fisubl
add
xchg
clc
aas
pop
jbe
cmp
pop
push
xchg
in
jecxz
fnstenv
repz
xor
loope
aas
cli
icebp
pop
mov
and
mov
inc
stos
lds
sbb
ss
lock
add
lret
ja
mov
inc
mov
ret
popa
fnstcw
cli
shlb
icebp
lock
roll
sti
imul
mov
out
mov
add
xor
out
dec
stc
dec
or
and
ljmp
cmc
xor
je
xor
arpl
fbld
test
mov
nop
imul
nop
push
dec
push
fiaddl
aaa
clc
cmp
mov
lcall
dec
adc
jnp
sbb
idivw
xchg
xchg
faddl
push
mov
mov
push
arpl
outsb
scas
cwtl
sub
test
mov
decb
aaa
lock
jmp
ds
pop
inc
out
fldl
mov
mov
repz
movsb
adc
jp
shrb
iret
pusha
into
cs
int3
dec
cmp
mov
push
fsubrs
inc
sbb
and
dec
jle
lds
push
cwtl
mov
outsb
xchg
test
cmp
stos
push
stc
adc
shrl
mov
cmp
pop
adc
loope
sbb
iret
dec
push
xchg
jmp
mov
bound
mov
je
dec
in
lcall
xlat
ds
mov
lret
mov
mov
mov
xor
out
scas
inc
bound
lds
in
sbb
pop
mov
xchg
movsb
repnz
and
push
add
mov
clc
out
shlb
jg
dec
jo
add
sets
into
movsl
dec
pop
lret
fists
out
jae
fnstsw
sbb
pop
rol
daa
adc
lcall
and
aaa
and
and
push
out
test
pop
je
add
fsubl
sar
adcl
fnstenv
addr16
or
rcrl
cwtl
push
negl
pop
push
into
imul
movl
push
fldl
inc
xchg
pop
clc
adc
lcall
mov
lods
jns
popa
adc
in
inc
test
cmp
stc
fcomi
mov
adc
fsubs
push
mov
shl
sarl
dec
push
sub
mov
out
in
popf
push
int
imul
cwtl
imul
hlt
into
mov
fiaddl
mov
lret
ds
iret
xchg
mov
xchg
ss
lds
mov
bound
pop
pop
sti
mov
dec
dec
sbb
lods
mov
fistpl
or
mov
out
insl
in
or
mov
and
dec
mov
enter
pop
sarl
sub
lock
jbe
jle
shrl
inc
cmp
xchg
inc
push
mov
mov
dec
imul
push
loopne
pusha
mov
mov
mov
clc
popa
leave
adc
out
push
add
pushf
push
mov
addr16
mov
xchg
aam
cmp
hlt
sub
sbb
ud1
pop
xor
rolb
pop
leave
mov
jge
roll
add
jecxz
cmp
sub
repnz
loope
fistpll
lret
outsl
insb
xorb
rcrb
pop
mov
repnz
lea
in
lahf
shlb
jbe
hlt
sbb
adc
clc
clflush
adc
add
inc
fs
movsl
xor
push
push
je
pop
add
mov
jnp
lods
test
lds
xor
mov
pop
jecxz
jecxz
mov
movsb
insb
orb
pop
dec
add
rcrb
or
aam
imul
movsb
pop
jp
push
fnstcw
sub
addr16
sbb
jb
mov
aam
mov
int3
jge
mov
adc
lret
pop
ja
cmp
push
or
dec
and
pop
popf
jne
es
test
out
xchg
cmp
or
pop
popf
xor
fdivs
push
adc
mov
sbb
xchg
imul
and
aad
add
sub
cwtl
xchg
add
dec
aas
scas
adc
sbb
popa
loopne
mov
mov
es
jne
rorl
roll
adc
shlb
frstor
push
pusha
mov
xchg
cmp
sub
push
pop
fists
cmp
add
in
out
mov
mov
push
repz
pop
pushf
xchg
jg
iret
sahf
mov
adc
dec
jge
loop
sub
es
bswap
repnz
adc
call
and
jp
sub
xor
add
add
inc
pop
sub
adc
shlw
je
pop
cli
ret
fistpll
push
push
rol
and
inc
movsl
push
fs
lret
shr
adc
mov
adc
lahf
outsl
cmp
pop
testb
pop
mov
pusha
aaa
xor
push
dec
rcrl
call
cmp
adc
or
insl
test
loopne
popf
and
lahf
sub
cwtl
pop
fs
lods
dec
sarb
jge
jmp
hlt
jno
popa
out
xchg
clc
insb
xor
and
sbb
rcl
out
add
stos
xor
mov
out
push
iret
arpl
shlb
inc
cmp
flds
or
insb
sub
jl
and
mov
mov
out
xchg
lds
pop
cwtl
iret
inc
adc
sti
mov
sub
popf
and
sub
out
inc
inc
out
cld
loop
mov
xchg
cmp
dec
xchg
sbb
into
sub
jge
mov
xchg
and
shll
or
aas
adc
cmc
pop
xchg
imul
pop
bound
aad
push
andl
push
test
lret
dec
arpl
jp
or
movsl
jmp
repz
nop
xchg
stos
sahf
fstpl
mov
mov
add
xchg
rol
and
pop
imul
push
add
xchg
pop
and
jg
ja
cmp
mov
lock
xor
and
add
dec
mov
xorb
mov
add
in
adc
push
or
dec
les
sub
pop
push
mov
or
push
loopne
lea
ret
aad
es
mov
shrb
aam
xor
sbb
test
icebp
adc
scas
pop
fimuls
cmp
imul
pop
faddl
cwtl
mov
divl
call
xchg
cli
aas
pop
push
ret
pusha
and
jne
mov
push
std
lea
mov
frndint
inc
roll
cmp
je
in
ret
pushf
lcall
add
fidivl
std
pushf
loope
fstl
clc
jle
or
cltd
pop
movsb
fstps
leave
insb
daa
shrl
push
xlat
push
jl
fwait
lds
dec
mov
test
pop
int
idivl
add
and
jmp
imul
in
mov
mov
clc
das
dec
das
add
aaa
inc
scas
lcall
icebp
out
cmp
arpl
out
and
lretw
test
mov
jae
xor
add
xchg
pop
sbb
mov
inc
mov
inc
movsb
cmp
out
lahf
pop
repz
adc
mov
inc
lods
cltd
dec
dec
sqrtps
imul
movsl
jge
movsb
xchg
popw
sbb
xchg
xchg
aas
leave
lcall
dec
sub
pop
xor
imull
ret
add
lock
test
inc
push
popl
push
push
ljmp
jae
lock
popf
lret
mov
fnstcw
in
test
xchg
inc
pop
test
mov
aad
sbb
clc
pop
pop
lret
mov
and
das
cmp
fcom
std
pop
inc
or
ds
pop
push
ficoms
iret
bound
lock
daa
add
ffreep
cmp
push
sub
cmp
stc
cmp
mov
sub
xor
enter
add
fbstp
push
push
dec
mov
nop
stc
xchg
sar
cmp
jo
sahf
in
push
ficompl
out
jg
xor
xor
mov
xchg
addb
xchg
into
shl
cwtl
mov
ss
sub
add
push
sbb
mov
mov
pop
xchg
orl
repnz
repnz
or
push
sub
add
push
push
ljmp
and
jnp
js
push
mov
mov
push
xor
rorl
adc
pop
dec
pop
xchg
lock
add
sub
faddl
push
add
into
cmpsl
aam
jge
mov
mov
je
repz
pop
pop
in
mov
xchg
xor
mov
loopne
mov
jmp
mov
sahf
mov
int3
sub
mov
stos
mov
adc
stos
fstl
movsl
xor
mov
pop
faddl
aaa
out
shll
icebp
mov
data16
sub
xor
icebp
pop
std
lock
xchg
cmpsl
mov
popf
jge
or
pop
add
adc
xor
and
stos
fisttpll
mov
lock
or
icebp
xchg
enter
xchg
fdivs
pop
fs
pop
cwtl
fisttpl
out
push
fmuls
cmp
pushf
scas
out
cmp
mov
push
mov
and
pop
pop
adc
push
sbb
jmp
xchg
push
cli
in
leave
test
mov
cmp
test
push
inc
push
out
fcoml
repnz
mov
insl
cs
push
add
xor
cwtl
cmpsb
lea
daa
mov
xor
xlat
mov
arpl
insb
dec
inc
mov
adc
test
or
xchg
cltd
pop
adc
popa
nop
jae
imul
or
push
push
popf
hlt
gs
cmp
adc
test
mov
jl
mov
fstpt
push
mov
adc
out
lret
insl
ficomps
shl
dec
es
xchg
into
mov
xchg
adc
ficompl
sub
cmp
adc
mov
or
sub
cmc
decl
cwtl
les
dec
mov
push
dec
jno
fiaddl
addr16
inc
mov
fcoml
jnp
int3
insl
push
xchg
loop
int3
in
mov
in
adc
cmp
add
mov
lahf
dec
dec
jo
dec
pop
int
adc
ss
mov
repnz
fs
aas
push
mov
or
scas
loopne
js
pop
daa
shl
push
int
fucom
push
mov
sti
aam
clc
pop
jns
cmpsb
add
mov
pop
jns
shlb
popf
incl
pop
filds
pushf
notb
cs
mov
inc
test
jge
call
inc
cmp
out
loop
addl
int
jp
inc
jl
aas
loop
jo
faddp
and
and
outsl
pop
mov
out
push
and
dec
xchg
jno
fmull
adc
out
cmp
inc
sahf
dec
addr16
test
rsm
sbb
fdivl
andl
mov
xchg
xor
push
lods
mov
cli
cmp
mov
dec
jmp
add
or
decb
movb
and
in
push
int
push
out
das
jns
into
sbb
repz
adc
mov
inc
mov
mov
and
les
xor
xchg
add
out
loop
fbstp
fldl
inc
inc
neg
jne
sahf
sahf
fs
sub
push
int3
aas
sub
mov
mov
cmp
mov
mov
out
pop
sub
fbld
mov
fadds
and
mov
xor
mov
stos
clc
outsl
popa
mov
pop
mov
cs
dec
icebp
movsl
or
sahf
ljmp
aas
and
out
pushf
sub
mov
jne
lock
sbb
enter
out
mov
jne
jecxz
dec
fcom
lret
add
bound
cli
movsl
enter
mul
and
mov
jbe
inc
cmpsl
push
sub
test
ret
dec
ja
std
mov
push
push
sti
sbb
enter
mov
adc
loop
popf
xor
loope
inc
adc
shll
in
jbe
shl
into
pop
mov
push
subl
incb
add
and
test
in
cmp
rcl
and
jmp
ss
jo
sub
mov
int
jno
repz
arpl
std
ss
and
xchg
xor
lret
lcall
adc
test
add
lahf
mov
ljmp
call
dec
ret
rolb
scas
push
sub
jb
mov
addr16
push
mov
shrl
fwait
mov
arpl
arpl
loopne
stc
dec
add
mov
loopne
in
dec
mov
test
cmc
xchg
or
jnp
loopne
adc
aas
sbb
pop
cmp
mov
mov
sbb
xor
pop
fstl
xor
ss
sub
jns
gs
xchg
mov
jne
push
sbb
xchg
jecxz
cmp
nop
inc
mov
jle
push
js
and
push
push
out
xchg
mov
outsl
or
ret
xor
cmp
fsubs
sbbb
fidivrl
xchg
pop
ss
loop
shrl
dec
nop
mov
aaa
jecxz
mov
neg
pop
addr16
and
add
xor
out
fucom
pop
iret
cmp
je
xor
add
adc
std
pop
shr
pop
loop
js
push
mov
or
fcmovnu
aam
push
lods
xchg
lret
push
sbb
mov
xchg
fsts
loopne
push
sbb
or
mov
lock
adc
insl
push
pusha
and
rcr
xor
mov
rcrb
sbb
fcompl
outsb
pushf
lods
xchg
aam
addr16
mov
popf
sti
lds
int
sbb
data16
mov
push
aad
ja
push
js
pop
rcr
push
mov
inc
cmc
mov
insl
movsl
push
ds
mov
fadds
repnz
hlt
and
cli
movsb
adc
cmpb
ret
mov
sub
inc
pop
add
xor
xchg
jae
pop
or
in
ficoms
add
mov
mov
or
fldenv
xlat
lret
xchg
jae
dec
icebp
inc
js
ss
pop
sbb
or
push
xor
jo
jp
jns
mov
mov
inc
push
inc
in
sub
sbb
or
cli
add
xchg
cmp
pop
cmova
les
sub
and
sahf
stc
mov
dec
icebp
mov
movsb
push
nop
xchg
cld
xchg
jbe
mov
pop
jnp
cmpsb
sbb
add
xchg
inc
imul
push
and
jg
stos
popa
fldenv
or
mov
es
sar
xchg
inc
jl
pusha
incl
scas
mov
or
and
xchg
test
mov
mov
pop
iret
jmp
and
sbb
sub
fdivs
inc
movsl
rorl
push
jne
sarl
lcall
cltd
push
add
enter
pop
into
push
adcl
scas
lods
lods
test
idivl
pop
out
push
mov
cmp
xorl
aad
jmp
clc
mov
into
jle
lods
dec
and
mov
fwait
popa
xor
pop
mov
sbb
jnp
out
push
dec
repnz
fiaddl
jg
sbb
ljmp
push
cli
gs
cli
sar
je
ss
lds
dec
nop
add
popa
ss
xor
add
ja
jp
outsb
pop
mov
adc
xlat
mov
cmpps
push
sti
add
sub
outsb
mov
cmp
dec
ret
mov
mov
aaa
jg
jae
mov
test
add
stc
hlt
js
out
dec
adc
loop
pop
dec
sbb
in
add
sahf
pop
daa
sub
fcoml
mov
fidivrs
add
imul
fildll
ret
leave
jp
lods
push
rcl
aaa
dec
movsl
test
xor
jo
cwtl
stos
mov
in
cltd
push
test
add
in
stos
mov
ficoml
fucomi
push
sbb
sub
jne
jmp
pop
js
mov
xor
mov
jg
push
inc
mov
jns
roll
arpl
mov
cmpsb
sub
aaa
add
pushf
or
js
shll
push
mov
fstl
adc
cli
stc
xchg
xchg
jle
sub
cmp
xor
stos
push
mov
mov
adc
out
stos
inc
rclb
pop
add
lret
ja
push
jg
and
xchg
hlt
cli
mov
ja
dec
imul
jnp
adc
push
sub
adc
in
int3
dec
repnz
int
cmp
jno
negb
stc
in
push
dec
aas
mov
add
push
ret
bound
mov
pusha
add
stos
mov
stos
adc
fwait
mov
arpl
or
rorb
js
clc
leave
cs
in
lock
out
lods
cwtl
mov
xchg
cmc
rclb
stos
jl
fidivrs
repz
movsb
outsb
pusha
popa
jnp
cmpsb
stos
cld
inc
mov
push
jle
sbb
ja
push
scas
xor
cmp
ja
fsts
cmp
imull
or
fs
lcall
mov
inc
xchg
arpl
or
pop
ror
hlt
jnp
iret
in
jo
jmp
test
movsl
int
test
mov
imul
enter
outsb
fcomps
inc
test
jbe
fistl
or
jl
ds
rol
mov
mov
loopne
stos
mov
mov
inc
xchg
add
arpl
scas
shrb
sub
mov
push
xchg
inc
outsl
sub
pop
inc
popf
dec
add
insb
in
cmp
mov
fbstp
loope
pop
and
mov
es
or
adc
std
dec
xchg
pop
loop
pop
rclb
in
fstpt
in
mov
xchg
rcr
imul
jl
pushf
add
out
in
outsl
inc
xchg
sahf
add
cmp
jecxz
sarl
js
mov
mov
popf
icebp
jbe
xor
push
xor
andl
add
outsb
xchg
in
cmp
rolb
cmpsb
ljmp
mov
mov
int
cld
cmc
addr16
xchg
aam
lods
out
loope
addr16
cwtl
lret
sub
dec
int
jnp
popa
xchg
aas
mov
test
and
cwtl
jo
inc
rcr
xchg
mov
insb
int3
out
lcall
adc
orb
cmp
pusha
inc
xchg
dec
lods
rep
rcrb
icebp
insb
cltd
ss
mov
mov
xor
fldenv
or
cmp
jno
xlat
loopne
pop
or
add
arpl
ja
stos
push
sbb
or
dec
xor
aad
mov
into
dec
mov
and
jnp
bswap
xchg
loope
fdivr
pop
movsb
pusha
jge
test
rorl
rorb
call
addl
xchg
push
ss
sarl
add
loopnew
das
nop
add
and
inc
fcmovb
jge
jmp
dec
push
enter
aad
mov
nop
inc
jge
mov
jg
push
movsb
pop
inc
fs
shlb
jecxz
in
sub
into
bnd
inc
imul
shrb
into
push
mov
lea
mov
sub
adc
sbb
cld
xor
and
daa
shrb
mov
fcompl
leave
scas
sbb
xor
or
lock
jp
xor
jmp
push
in
mov
xor
xchg
mov
hlt
push
and
jl
jle
push
out
mov
pop
cmp
pop
mov
mov
sub
rcrl
icebp
call
divb
mull
pop
in
mov
loop
les
stos
mov
aaa
js
shrb
ret
push
push
xor
fidivrs
loop
dec
insb
and
sbbl
and
or
mov
push
xchg
int3
popf
mov
movsl
dec
mov
adc
loope
add
std
insb
push
jno
mov
std
stos
jmp
push
xchg
rolb
or
mov
cmpsb
mov
jns
pusha
cli
xor
fildl
leave
jb
pop
push
and
subb
push
push
es
jecxz
jo
pop
xor
mov
mov
push
lret
add
ret
or
std
mov
mov
les
push
call
inc
add
sbb
adc
pusha
inc
mov
movsl
divb
pop
add
add
test
mov
push
in
inc
in
les
out
js
push
insl
add
pop
fistpll
shrl
sbbb
cmp
out
fucom
jbe
out
rorl
cmovb
xchg
xchg
xor
mov
movsb
fwait
sub
mov
cmp
xor
mov
mov
icebp
mov
mov
xchg
adc
shrb
mov
lret
inc
jae
data16
lds
push
mov
jecxz
jmp
jge
call
or
or
and
jmp
and
or
std
cmc
repz
outsl
int3
mov
mov
fiaddl
pop
loop,pn
movsb
repnz
push
xchg
sbb
stos
mov
mov
cmp
or
xor
dec
lret
jne
inc
mov
jg
pop
or
mov
mov
shr
jge
stos
xchg
lods
and
and
pop
test
xor
push
cltd
pop
sbbl
or
push
push
cmc
push
in
pop
sub
or
fnstcw
pop
jmp
pop
je
lods
shll
ds
jo
fisubs
mov
aaa
push
sbb
outsb
mov
es
xchg
cmc
arpl
xchg
lcall
inc
ljmp
arpl
js
sarl
sub
jp
jg
insb
xchg
in
sub
jg
fbld
mov
push
xchg
sbb
dec
jno
cmc
adc
addb
lea
pop
mov
loopne
mov
sbb
loop
push
or
adc
cld
inc
jl
xchg
mov
bound
xchg
sub
arpl
or
dec
cmp
push
cwtl
or
lock
test
jo
bound
pop
add
rcrl
leave
nop
das
mov
rclb
pop
sbb
cmp
icebp
mov
add
or
mov
cmc
movb
xorb
fcmovb
movsl
das
cltd
xchg
incb
mov
cmp
push
fistl
pop
inc
jnp
mov
bound
or
aas
cmp
les
mov
cmp
jp
mov
dec
xor
movl
std
jecxz
rcll
inc
movsb
ja
inc
js
sub
or
or
imul
nop
fstpt
icebp
jns
test
fwait
mov
test
test
jb
adc
jns
sub
decl
dec
mov
fldl
aam
testl
pushf
loopne
in
lcall
ss
scas
ret
icebp
mov
sahf
mov
pop
mov
pop
push
jmp
inc
pushf
xor
insl
hlt
xor
loop
daa
sub
mov
mov
or
mov
sti
js
fbld
mov
mov
in
jmp
int
sub
xchg
xchg
in
repnz
inc
adc
dec
div
in
mov
les
dec
test
es
jbe
mov
mov
lahf
mov
jne
insb
sub
lahf
push
inc
fiaddl
xchg
push
sahf
and
pop
pop
test
push
lea
nop
cmp
mov
pop
inc
adc
bts
iret
push
daa
cmp
hlt
mov
stc
inc
mov
sbb
fldcw
test
dec
sarb
fstpt
test
ss
idivl
out
jae
xor
fnstenv
insb
scas
in
and
stos
insl
sbb
xor
jmp
inc
ljmp
or
stos
xchg
aam
shr
repz
hlt
mov
mov
mov
sub
test
dec
or
in
out
adc
in
ficoml
rclb
jb
cwtl
out
fdivl
xchg
rcll
addr16
sbb
xor
add
testb
mov
in
hlt
inc
stos
loop
fstpt
lahf
ljmp
dec
cltd
filds
cwtl
mov
jae
sbb
xor
jecxz
cli
clc
or
cmp
mov
ret
dec
and
popf
adc
push
push
inc
add
shrl
cli
adc
mov
adc
cli
sbb
jmp
dec
xchg
jmp
add
call
dec
xchg
pop
fcoml
out
jl
cmp
or
xchg
add
mov
or
add
sub
xchg
repnz
sub
push
mov
xor
push
jae
mov
xchg
imul
shl
and
cltd
fsubrl
mov
sbb
mov
pop
mov
clc
call
xchg
shll
addb
fildl
push
jge
mov
pop
inc
and
lahf
xor
fmull
dec
in
aad
imul
push
mov
mov
dec
xor
stos
inc
xchg
jno
sub
mov
subl
data16
rclb
out
sub
lahf
sbb
dec
lea
xchg
js
shl
hlt
imul
test
mov
or
jmp
inc
xchg
jecxz
jno
adc
mov
push
push
outsb
xchg
in
sbb
xchg
js
js
mov
dec
out
pop
or
loope
js
lods
xchg
adc
arpl
shll
ds
movsb
mov
mov
add
cmpb
dec
bound
pop
push
sbb
pop
aad
dec
leave
sbb
pop
outsl
stc
pop
dec
sbb
and
or
or
das
ret
jae
addl
pop
ror
push
jns
dec
out
adc
lret
mov
cmp
or
fisttps
xchg
int
jge
lret
aad
sub
outsl
add
xorl
or
adc
dec
inc
xchg
insb
xchg
add
movsb
jnp
nop
and
push
and
repnz
sub
out
aas
shlb
inc
pop
xor
jl
sbb
mov
dec
mov
pop
adc
lret
dec
imul
jl
lea
sub
xor
push
push
mov
outsl
dec
cmp
cs
sbb
mov
adc
or
ret
xchg
test
adcl
and
add
ss
push
mov
daa
xorb
sbb
mov
jo
mov
or
movsb
outsb
cmpb
jl
cmp
jns
sub
pop
mov
andl
lea
scas
mov
and
dec
lahf
repz
loopne
or
cs
xchg
movsl
popa
mov
xor
fdivrs
pusha
std
fwait
xor
mov
leave
aam
out
test
push
mov
sub
pop
add
mov
cmp
mov
dec
cmp
add
mov
fsubrs
lods
and
pop
adc
add
popf
cmc
mov
pushf
xor
mov
dec
and
mov
mov
fwait
xchg
xchg
movsl
imul
mov
jmp
clc
xor
out
jno
xchg
pusha
sub
xchg
jo
aas
xchg
and
xchg
daa
mov
jl
pop
dec
je
inc
testb
daa
loope
aaa
dec
mov
lret
leave
test
or
loopne
int3
arpl
aas
nop
lret
scas
das
int3
dec
call
outsb
rolb
jae
push
mov
hlt
and
lret
xchg
arpl
scas
sbb
lret
cld
cwtl
mov
movlps
leave
stc
add
jae
and
push
fnsave
sbb
loopne
stos
xchg
sub
lcall
inc
push
jl
mov
sti
cmp
mov
sub
inc
subl
pop
pop
mov
pop
and
call
sbb
adc
stos
subb
xor
pop
in
js
jl
cmp
sahf
cmp
ds
cmp
scas
mov
aaa
loop
dec
add
hlt
push
or
into
test
and
je
xchg
ret
leave
xor
and
add
lcall
sbb
and
movsl
sbb
jmp
xchg
mulb
mov
repz
mov
stos
shrb
mov
inc
mov
rorl
pop
mov
push
push
out
mov
push
push
dec
push
dec
test
push
inc
xchg
pop
jl
icebp
mov
or
lret
jge
aaa
or
sub
into
data16
dec
test
stos
xchg
adc
enter
xchg
mov
xchg
mov
sbb
gs
loop
cmp
addb
and
push
into
mov
xchg
xor
sbb
fidivl
pop
fcom
call
adc
mov
jecxz
sbbb
add
fxch
cbtw
clc
insb
push
mov
lret
bound
aas
or
or
lcall
jae
xchg
lcall
stc
adc
pusha
sbb
jnp
stos
out
int3
mov
call
int3
dec
mov
pop
or
pusha
cmp
les
shr
out
xchg
popf
mov
sbb
stc
fwait
add
and
pop
std
movsl
mov
or
sbb
mov
pushf
cmc
nop
loopne
stc
iret
movsb
sbb
dec
cmp
push
ret
in
popa
mov
add
sbb
gs
push
and
xorl
jnp
or
jo
cmp
test
mov
adc
adc
insl
pop
out
and
negb
sbb
sti
dec
jmp
out
xor
popf
and
test
mov
lcall
sub
stc
mov
nop
sar
add
in
ja
or
mov
das
mov
cmc
or
jp
pop
push
or
lahf
adc
cmpsb
shrl
lock
pop
cltd
mov
stos
in
cs
pop
sub
inc
cmpsb
dec
mov
push
dec
imul
push
out
cmp
shrb
loope
cmc
and
mov
inc
mov
add
mov
daa
lahf
inc
aam
xchg
cmpsl
push
cmc
in
or
icebp
je
inc
loop
lret
dec
push
inc
mov
inc
adc
ds
test
faddp
cmp
push
and
and
fldl
mov
movl
in
adc
xchg
out
hlt
mov
inc
or
inc
flds
xor
mov
dec
mov
sarl
gs
xchg
iret
sbb
push
aam
out
xchg
mov
stos
sub
popf
and
inc
jo
jge
jne
xchg
aam
shll
jae
jno
mov
pop
push
pop
cld
mov
repnz
push
or
ret
jno
push
ret
mov
mov
scas
cld
fwait
sub
minps
notb
out
mov
pop
aam
mov
add
mov
mov
into
jle
mov
or
mov
inc
adc
pop
fisubs
test
sub
sub
pop
mov
stos
loope
lods
pop
std
popf
pop
sub
jne
and
popf
mov
fildll
loope
cmp
cwtl
mov
out
mov
pop
sbb
roll
test
mov
inc
popa
or
dec
cli
repz
mov
mov
shll
inc
jbe
test
out
mov
enter
jns
adc
ss
ficomps
mov
movsl
test
jno
jle
mov
mov
fwait
stc
inc
lds
mov
mov
fs
mov
xor
add
mov
sub
aas
mov
nop
xor
push
sub
jbe
mov
cmp
scas
pop
iret
mov
loope
adc
fwait
jo
sarb
out
xchg
cmp
xchg
pop
hlt
adc
xchg
pop
xchg
xlat
mov
je
repnz
std
sub
or
xchg
mov
test
adc
inc
push
leave
sbb
pop
sbb
pop
repz
pop
xchg
in
loope
push
and
pushf
xchg
mov
test
stc
es
insl
jecxz
pop
xor
add
pop
sbb
mov
test
int3
push
mov
pop
adc
adc
imul
inc
lods
mov
ja
cmp
cmc
or
lahf
mov
aas
mov
xchg
jge
xor
xchg
xor
test
sbb
mov
push
out
jg
aas
loop
outsl
xchg
jecxz
dec
xor
dec
rcll
cwtl
pop
dec
lahf
add
rcll
cs
sbb
xor
mov
adc
cmp
aaa
mov
in
mov
mov
shl
mov
mov
enter
lret
pop
add
pop
popa
lcall
add
lcall
adc
adc
mov
fldenv
xchg
aas
dec
and
mov
lret
dec
pop
lret
or
sub
repz
ds
mov
lods
ljmp
inc
cld
stc
xchg
jnp
pop
hlt
ja
repz
lret
jb
movsl
data16
push
mov
jp
out
fnstcw
push
scas
push
cmp
pop
or
aad
in
lahf
shlb
dec
pop
push
mov
int
dec
out
pop
add
adc
imul
scas
jnp
cmpsl
sub
out
pop
add
xlat
out
xor
xor
fs
in
sub
sbb
adc
or
mov
lret
or
cs
arpl
push
pop
dec
lcall
adc
sbb
push
les
cmp
dec
mov
xchg
or
fs
inc
push
push
or
lret
loope
mov
jmp
or
cwtl
cmp
jns
xchg
lock
jne
sub
sub
arpl
mov
lret
sbb
lock
std
aad
adc
jns
stos
out
push
mov
cld
addl
mov
jmp
outsl
in
cld
cmp
and
xor
xchg
mov
mov
sub
orb
in
test
mov
fcoml
xchg
imul
pop
je
hlt
push
mov
es
or
arpl
fstpt
xchg
or
jnp
pop
and
mov
cld
and
int
cmp
jg
stos
dec
mov
mov
shll
popa
adcl
out
insb
in
cs
cld
rcrl
leave
fmul
shll
ljmp
dec
add
ljmp
insb
xor
jo
scas
mov
insl
in
test
cmpsb
idivb
sub
sub
add
sbb
inc
adc
adc
jmp
insl
dec
cmp
inc
fst
adc
imul
dec
adc
mov
add
adc
rorb
fistpll
rol
jp
jg
fdivrl
lret
test
out
sub
pop
mov
repz
push
add
fimull
add
add
mov
pop
pop
dec
mov
xlat
xchg
adc
push
mov
jo
jmp
lcall
lahf
dec
cmp
mov
jnp
and
sahf
out
sarl
out
mov
mov
daa
ret
cmc
popf
add
gs
and
pop
jle
jg
insl
adc
stos
js
in
jl
ret
rcll
cmp
ljmp
sub
call
pop
ret
sbbl
pop
fwait
push
ffree
push
aad
jp
add
dec
xor
mov
jb
jae
addb
loop
das
ror
jae
std
out
loope
mov
aad
gs
xchg
adc
pop
es
pop
shll
lret
push
mov
and
lret
sti
ret
fcompl
inc
es
test
cli
inc
cmpsl
aad
pushf
cmc
nop
sbb
jge
pop
push
rclb
lcall
jl
mov
popf
and
jmp
ret
jg
mov
pop
add
scas
mov
push
xor
jge
push
mov
xor
ds
sbb
push
mov
andb
and
sub
jo
sahf
cmpb
test
pop
mov
pop
cmpxchg
mov
insl
push
xchg
jmp
jae
pop
stos
dec
mov
addr16
ror
aam
cmp
mov
push
pop
fcompl
jp
jns
ljmp
push
and
in
repz
js
dec
pop
xor
pop
mov
jno
mov
jbe
push
jecxz
fwait
xor
mov
xchg
cmp
mov
pop
fidivl
scas
xlat
xchg
and
shlb
push
sbb
fwait
jmp
jp
sub
subb
movsb
movsb
xor
inc
cld
pop
adc
pop
jge
sub
outsl
pop
push
cmp
popf
ss
stos
push
sub
push
add
add
sub
add
hlt
cli
adc
sub
cmpsb
jg
outsl
fwait
ret
sar
xlat
enter
cmpsl
pushf
test
and
cltd
sbb
pusha
or
leave
stc
sub
mov
push
lock
xchg
cwtl
xor
js
pop
cmc
adc
psubd
lods
jns
mov
jp
jnp
sub
stos
jnp
sbb
aam
or
push
dec
xchg
dec
insl
and
push
cltd
add
fcmovnu
fsts
push
xor
xchg
cmp
jecxz
adc
or
aaa
fstl
and
fdivl
cli
ds
jecxz
das
ljmp
push
xor
xor
pop
loopne
pop
popa
and
xchg
ret
les
movsb
push
xchg
ljmp
fldl
push
out
cmp
push
sbb
outsb
incl
fcoml
mov
daa
scas
data16
sbb
pop
int3
cwtl
nop
push
mov
cmp
aas
mov
jno
sahf
add
imul
pusha
add
jnp
shr
sarb
sbb
xor
cwtl
mov
pop
cmc
mov
cmp
aas
fimuls
sub
xlat
shlb
dec
lods
pusha
cli
sahf
movsl
mov
xchg
mov
iret
mov
in
inc
addr16
in
rcrl
bound
lods
add
ljmp
cld
scas
inc
mov
pop
mov
sbb
dec
mov
adc
pop
push
imul
pop
cmpl
pop
mov
scas
lret
adc
mov
adc
xchg
dec
ja
sar
push
test
pushf
add
clc
cmp
mov
cmc
lret
jmp
jge
in
dec
repnz
leave
push
imul
adc
push
xorb
xor
sbb
lcall
mov
push
dec
je
inc
pop
pop
in
pop
push
or
jno
ja
and
xlat
js
jg
pop
sub
xor
test
and
add
fbstp
data16
das
imul
add
arpl
ljmp
dec
xchg
data16
xor
mov
jle
js
dec
dec
xchg
popf
stc
push
gs
sub
pop
orl
sbb
aaa
pop
sub
xor
clc
in
push
mov
dec
cmp
sbb
mov
stos
clc
xor
sub
sbb
ret
xchg
sbb
stc
ficoml
and
jo
xor
movsb
pop
push
stc
jnp
pushf
mov
mov
popf
pop
sub
mov
or
lret
sbb
call
sbb
dec
lcall
sub
in
add
jne
dec
jp
mov
lds
repz
repnz
test
movb
mov
push
jg
mov
xchg
adc
cmp
sti
jae
fidivl
bound
cmp
clc
add
ret
cmp
sub
xlat
fucomip
jl
xchg
push
js
rdmsr
mov
push
imul
dec
adc
test
sub
sbb
mov
bound
mov
fcmovbe
nop
cmc
clc
bound
push
inc
sub
rsm
inc
notl
adc
mov
jns
mov
xchg
inc
decb
subb
adc
jnp
xlat
mov
out
ss
push
repnz
jns
jnp
insl
fcmovnbe
lret
in
push
fisubrs
mov
mov
dec
aaa
cmp
mov
xchg
insl
rol
cwtl
mov
xchg
mov
sub
movsl
bound
mov
mov
push
pop
push
pusha
xchg
push
hlt
sbb
lret
push
ss
fisttpll
add
int3
insb
arpl
mov
je
mov
or
add
movsb
sbb
testb
jne
xlat
xchg
jbe
jne
adc
fsubr
cmc
adc
adc
dec
shrb
ljmp
ret
jo
dec
stc
push
adc
jg
push
je
icebp
sub
inc
push
gs
lret
stos
xor
insb
inc
aad
sbb
mov
mov
pop
daa
dec
add
pop
lds
xchg
push
sbb
sbb
dec
mov
dec
loop
out
jb
adc
push
repz
insb
dec
dec
pop
jo
push
xchg
movsb
jmp
std
into
push
iret
add
and
push
fadd
xor
xchg
gs
xchg
cmpsl
mov
jle
or
or
jae
pop
push
lds
xor
lret
adc
pop
clc
jge
dec
cltd
adc
xor
out
sub
cs
jle
push
std
mov
jno
out
xchg
pop
pop
cmpsb
std
clc
and
xor
cwtl
rcr
fsubs
ds
xchg
sub
sub
jb
mov
pop
mov
fbld
sbb
aaa
cmpsl
ljmp
lcall
sub
push
je
push
adc
insl
sti
jnp
jg
jns
cmp
fiaddl
jg,pn
test
jge
ret
leave
int
popa
cmc
cmp
pusha
rolb
sub
imul
sbb
mov
in
cld
adc
mov
push
scas
sahf
or
fucomi
lret
mov
xchg
std
fisttps
push
in
jbe
add
addr16
push
outsb
push
dec
push
out
sub
push
adc
divb
pop
dec
jecxz
sbb
jl
mov
lret
dec
shlb
data16
push
push
push
fisttps
sub
cmp
adc
jl
mov
fdivl
insl
cmp
sub
push
sarl
mov
sbb
cltd
jg
jmp
mov
adc
insl
jmp
pop
push
lock
das
in
scas
mov
jns
xchg
daa
adc
dec
sahf
rorb
xor
or
xchg
pop
jae
add
and
shlb
movsb
loopne
test
pusha
lahf
andb
xchg
dec
insl
xor
movsb
sub
inc
je
pop
mov
bound
arpl
cmp
pop
pop
in
std
out
insb
aam
dec
hlt
push
and
fwait
add
add
mov
inc
in
fwait
push
fwait
in
add
jbe
ret
inc
stos
sub
or
fdivl
add
adc
jg
fcoml
sti
rcrl
inc
mov
insl
lahf
subl
mov
xor
repnz
sahf
je
fnstcw
test
and
and
sub
les
fidivs
in
ret
cwtl
xor
aas
cmp
cmpsl
aas
aas
inc
mov
cmp
outsb
pop
add
mov
fwait
psubd
dec
pop
test
push
jg
std
inc
addl
nop
call
mov
outsl
ss
mov
pushf
adc
dec
imul
divl
flds
mov
pop
lcall
rcl
insb
das
cwtl
out
or
int3
ja
sub
sub
inc
insl
arpl
pushf
xchg
mov
std
xchg
and
jl
mov
mov
repz
sti
cmp
jnp
sbb
inc
add
jl
cltd
rcrb
shrl
insb
lock
call
in
orl
inc
fdiv
jg
xlat
lahf
repz
outsl
mov
orb
cmpsb
insl
cmpb
xor
and
jmp
int
fisubl
inc
les
add
incb
leave
ficoms
ficomps
mov
mov
cmp
repz
lret
fstpt
ret
mov
stc
bound
jecxz
xor
scas
adc
in
imul
ljmp
outsl
cwtl
mov
les
movl
addr16
cld
push
push
and
xor
filds
mov
addr16
jae
pop
cmp
stc
xor
sbb
test
loope
sub
xor
pop
sub
and
xor
lds
aaa
lret
xor
dec
cmp
stc
and
sbb
lcall
sub
outsb
pop
jbe
jge
repnz
es
mov
in
inc
out
xorb
push
jo
sbbl
cmp
out
pushf
dec
cmp
adc
shlb
cmp
in
mov
fadds
sbb
dec
mov
pop
cli
mov
inc
aad
cmpl
or
cmp
dec
inc
das
inc
cmpsl
pop
dec
pop
out
movsb
xor
fcoms
and
dec
in
jno
sub
inc
add
mov
or
addr16
pop
jl
test
int3
enter
addr16
movsb
xor
js
call
shlb
ret
and
inc
push
andl
adc
jnp
mov
cmc
inc
test
jns
loopne
push
mov
into
xchg
or
lods
ljmp
push
ljmp
sub
nop
jg
mov
inc
mov
mov
push
iret
je
ret
xor
cmp
and
mov
in
and
mov
mov
mov
push
or
loope
mulb
jo
cltd
sub
sbb
fisubrl
add
arpl
or
rclb
sub
jmp
inc
orl
sarl
stc
lds
push
sub
fcompl
in
shl
push
rolb
pop
mov
jp
xor
dec
inc
jg
xchg
and
fsubrl
jg
in
mov
push
outsl
sub
das
jp
lahf
jne
aad
push
pop
mov
sub
and
jno
cmp
scas
cwtl
mov
sub
and
pop
out
ds
sti
sbb
pop
mov
sahf
pop
test
lcall
mov
les
cltd
jno
lcall
sbbl
cmc
stos
lods
dec
jbe
shl
mov
arpl
xchg
ret
cmc
mov
push
rcll
xorb
push
repz
ret
adc
nop
mov
int
lcall
test
xchg
xor
mov
pop
ficoml
aaa
insb
jo
jno
push
out
jnp
in
push
and
sbb
mov
out
mov
sbb
adc
fnsave
fisubrl
adc
daa
push
xor
mov
pushf
jge
out
testb
inc
or
scas
push
out
aad
pusha
add
dec
lock
sbb
push
pop
outsl
shll
sub
xchg
insb
repz
in
insb
add
push
test
inc
fcoml
xlat
pop
mov
fldcw
fbld
xor
or
mov
inc
mov
outsl
into
mov
xchg
jae
std
inc
push
add
sti
loop
cwtl
repz
mov
subl
scas
clc
sbb
fwait
inc
rcl
and
jl
movsl
jbe
xchg
clc
and
dec
popf
stc
push
les
pop
adc
andb
push
adc
daa
fnstcw
lret
pop
popa
movsl
adc
jle
movsb
xor
or
mov
and
push
in
fs
jmp
sbb
xlat
scas
mov
sub
add
mov
sti
lea
or
xor
or
out
es
dec
xchg
sub
nop
mov
je
sub
cmp
push
and
icebp
mov
and
mov
push
and
mov
in
inc
ja
ret
lock
adc
mov
sarb
pop
mov
dec
scas
enter
add
inc
cmp
call
xchg
lock
aam
push
cmp
addr16
imul
repnz
push
test
jecxz
mov
mov
pop
stc
enter
cmpsb
sbb
xchg
jo
cwtl
pop
mov
inc
cltd
clc
dec
ja
lods
fldcw
icebp
loope
fmul
jns
out
popf
jnp
jnp
xchg
or
addr16
fistpl
loopne
lock
cli
push
lret
jl
lods
shrb
xchg
or
mov
pushf
fucom
xor
sbb
icebp
sbb
std
or
push
int3
mov
add
and
shrb
adc
ja
jge
dec
es
and
loopne
fisubs
lcall
cmp
nop
jmp
push
pop
iret
xor
push
mov
jb
pop
dec
aam
jno
loopne
push
jns
mov
in
sub
cmovnp
fs
dec
mov
jne
pushf
lss
leave
popl
cmpsl
or
jb
pop
pop
push
in
push
mov
test
ret
dec
in
repnz
loope
imul
test
std
or
jmp
or
jne
imul
enter
bnd
mov
mov
or
xlat
mov
js
jmp
scas
nop
out
fsubl
jo
sbb
loopne
testb
lock
movsb
jl
outsb
pop
jae
and
shlb
jl
pop
fucomi
in
mov
sbb
or
adc
or
mov
in
pop
ds
add
push
in
dec
and
add
pushf
pop
stos
dec
sbb
cmp
mov
xchg
imul
in
dec
sbb
mov
adc
insb
stos
pusha
outsb
iret
pop
push
sarb
out
xchg
shl
mov
fmuls
mov
clc
xchg
mov
into
or
dec
ds
inc
cmp
and
push
mov
adc
mov
test
dec
sbb
insb
mull
int3
mov
cmpb
movsl
cmp
push
out
rol
cbtw
mov
fldt
sbb
aaa
push
ss
add
mov
adc
repz
aam
mov
lret
mov
jnp
add
loop
adc
jno
jne
dec
sbb
xor
dec
cmpsb
dec
push
fnsave
test
pushw
pop
mov
jg
add
sbb
adc
add
and
mov
dec
fdivl
xor
and
adc
add
jg
clc
jno
xchg
fninit
nop
in
mov
aad
push
out
push
mov
sub
cltd
xor
mov
int
adc
test
sbb
jl
add
addr16
jb
xchg
es
jp
dec
and
arpl
aad
lock
in
pushl
lret
negl
in
mov
mov
in
ss
hlt
pop
xchg
inc
clc
jns
cmp
adc
sti
insb
int
popf
push
inc
mov
mov
js
addr16
mov
xchg
xlat
adc
push
xchg
icebp
or
popf
mov
jne
cmp
mov
mov
add
sbb
ret
clc
int3
clc
pop
add
das
outsl
jp
fdivl
cmp
push
xor
mov
icebp
aaa
mov
cmp
adc
fmuls
push
mov
out
in
mov
add
repz
sub
mov
fstpl
push
xor
aas
inc
in
loop
push
stos
sbb
mov
or
push
pushf
dec
cmp
push
sahf
das
popa
fmull
add
jb
sub
push
lea
xchg
sbb
aad
mov
sbb
dec
inc
rorb
jmp
mov
mov
imul
dec
pop
ficoml
out
xchg
push
pop
pop
add
ljmp
aas
mov
sbb
jmp
repnz
lods
daa
pop
dec
and
in
jne
out
push
sbb
pop
pop
arpl
cwtl
dec
popf
cmp
imul
sub
inc
aad
xlat
and
or
in
pop
dec
out
add
add
push
add
xor
jecxz
inc
jmp
cmp
add
lock
roll
pop
iret
jo
fidivrl
ret
clc
inc
popf
in
jp
inc
xor
jae
mov
cltd
rcll
loope
add
or
or
jmp
jp
mov
dec
nop
clc
fsubr
add
loope
push
and
out
xchg
leave
dec
pop
sti
test
fcmove
pop
xchg
ret
mov
fsubl
and
mov
pop
xchg
test
in
not
xchg
loop
fsubs
cs
call
arpl
mov
jp
cli
push
dec
enter
pop
in
stc
add
cmpb
jmp
pop
stc
pusha
push
and
or
les
cmp
enter
test
mov
mov
js
or
sub
cmp
in
aaa
movsl
xlat
pop
es
add
addr16
add
push
sbb
cmc
cmp
imulb
mov
and
outsb
and
movsl
push
aas
movd
addr16
fstps
pop
into
int3
roll
cmp
das
orl
ljmp
xchg
add
push
mov
mov
sbb
push
fs
push
xchg
rorb
xor
iret
and
cmp
mov
adc
sub
call
cmp
lods
pop
pop
mov
xor
push
outsb
mov
cld
cmpsl
push
adc
jnp
outsb
push
lods
push
dec
loopne
mov
push
idivb
rorb
mov
mov
pop
scas
pushf
rorb
push
sub
imul
jecxz
or
out
mov
ficomps
and
fiaddl
add
dec
push
xor
aam
stc
int
imul
fbstp
shrl
cli
mov
pop
outsl
out
and
inc
mov
mov
imul
pop
cmpsb
fstps
aas
orb
repnz
popa
dec
rorl
je
std
add
xchg
es
popf
xchg
jg
fldl
aas
popa
add
je
cmp
aad
leave
inc
dec
pop
mov
sub
lret
inc
gs
clc
pop
cltd
icebp
popf
add
dec
scas
fiaddl
mov
ret
je
test
mov
aaa
mov
push
or
xchg
aas
cmpsl
xor
mov
pop
ret
imul
pusha
je
cld
adcl
in
cwtl
stc
shll
jae
mov
loop
inc
adc
sarl
jbe
cmpsl
sub
and
jns
mov
not
jne
or
loope
les
lods
iret
xor
or
sbb
mov
test
xchg
push
mov
mov
hlt
cmp
and
mov
mov
inc
scas
sti
mov
jl
shl
sub
mov
and
andl
jle
outsb
int3
cmp
pop
cmp
add
xor
adc
addl
insb
inc
sub
pop
cmpsl
push
adc
jno
inc
pop
dec
in
ss
cmp
cmp
mov
mov
jo
and
pop
and
and
rol
mov
jo
inc
dec
mov
je
inc
adc
inc
xlat
and
adc
inc
aaa
push
rcrl
dec
addr16
mov
sbb
mov
mov
cmpl
xor
push
enter
xor
stc
out
movsl
std
xchg
add
aam
xchg
or
sbb
mov
jae
pop
sub
add
pop
add
test
xchg
ljmp
fists
pop
mov
pusha
xchg
pushf
daa
mov
jmp
add
in
cmpsb
pop
and
fwait
jnp
add
mov
pop
in
sub
push
pushf
pop
sbb
ds
ficompl
in
lods
xlat
pop
sub
pop
push
fwait
xchg
push
cmpsl
jl
jmp
or
popf
dec
outsb
jl
jge
mov
and
aas
xchg
lcall
jmp
jmp
dec
mov
xor
mov
arpl
jmp
movsl
xor
adc
cmp
xchg
insl
pop
lcall
cmp
das
push
push
push
dec
lock
dec
test
lret
pop
mov
cmc
ja
sbb
xor
xchg
je
cmp
in
mov
add
js
mov
hlt
out
xchg
mov
fistps
sub
in
fcmovb
int
mov
sub
in
aam
filds
in
insl
jmp
mov
push
fcoml
sbb
push
mov
xchg
rorl
aas
push
push
ret
mov
in
sub
or
dec
or
sub
xchg
sbb
leave
push
pop
sub
outsl
jae
sub
inc
or
jg
xchg
jno
push
sub
mov
mov
xchg
aad
mov
aad
in
add
jno
clc
or
add
ret
ljmp
jns
inc
inc
and
pop
es
lret
add
xchg
mov
inc
cmp
pop
push
mov
sahf
sub
add
inc
subb
stos
call
inc
inc
pop
sbb
push
dec
lcall
mov
aam
dec
out
divb
or
roll
movsl
mov
xorb
test
cld
push
in
pop
scas
imul
adc
jae
or
xchg
dec
outsb
inc
iret
dec
daa
pop
mov
push
and
out
addr16
sub
ja
xchg
ficompl
int3
adc
aad
outsb
pop
stos
sbb
in
dec
jae
not
xchg
mov
cld
sbb
mov
fistpll
aaa
adc
sub
andl
mov
adc
scas
ja
xor
jo
nop
push
fcoml
test
pop
out
jge
ds
fs
pop
or
sbb
shl
jne
ret
or
xchg
loop
in
pop
xchg
jmp
lock
xor
mov
or
push
xchg
lock
jg
in
jecxz
or
jle
dec
int3
sbb
add
xchg
xchg
mov
jecxz
xlat
test
div
loop
addr16
pop
jmp
inc
add
mov
sbb
jecxz
mov
xlat
in
in
push
mov
lods
cltd
and
aam
cli
sub
sub
dec
pop
inc
out
dec
into
int
aam
out
jmp
into
sub
icebp
cmp
xlat
mov
push
or
and
inc
std
faddl
negl
cmp
inc
jmp
cwtl
cli
or
loope
in
out
aaa
out
ror
xor
loope
mov
push
insl
std
and
jno
xor
ficoml
int
cmc
mov
cmpsb
sti
jmp
xchg
sub
cmp
mov
xor
imul
pop
leave
rcrb
lcall
mov
xor
jle
sub
adc
fbld
xor
out
and
out
pop
fldl
in
push
pop
cs
es
sbb
fcmove
and
lea
pop
xchg
push
in
xchg
decl
les
and
pushf
mov
mov
push
loopne
inc
xchg
daa
lret
ret
sbb
mov
mov
mov
fcmovnb
insb
push
mov
inc
lods
cmp
pop
mov
jg
inc
aad
test
lds
mov
push
adc
cmpsb
loope
dec
div
aad
movsb
and
cmp
mov
jecxz
sarl
sahf
shll
jb
mov
mov
pop
cmp
stos
es
mov
outsb
xor
jg
dec
iret
leave
xor
push
pushf
mov
xchg
sar
dec
jnp
fdiv
clc
aam
orl
in
les
mov
cld
cmp
pusha
pop
sub
pop
fsubrs
rorb
jbe
inc
loop
jge
mov
insb
sbb
jb
and
inc
out
loopne
dec
cmp
sbb
inc
mov
insl
jecxz
jle
enter
outsb
fidivl
outsb
mov
nop
pop
hlt
push
mov
lret
in
repnz
jecxz
jp
jae
ficomps
sbb
xor
mov
push
call
das
lret
loop
clc
xor
fwait
jp
ds
mov
xchg
stos
mov
in
scas
dec
pop
iret
cmpsw
mov
lahf
repnz
adc
adc
jbe
inc
push
lcall
in
inc
jbe
repnz
jge
lock
cmpl
bnd
pop
arpl
hlt
sbb
jecxz
dec
enter
inc
loopne
or
pop
jno
into
push
arpl
out
aas
dec
in
pop
mov
push
and
ds
stos
pop
in
scas
push
movsl
inc
imul
cmp
fldl
pusha
adc
pusha
jnp
jl
lahf
mov
mov
xor
lahf
add
xchg
add
jmp
adc
xlat
lock
int
jmp
jmp
adcb
ret
fisubrs
jne
movsb
out
dec
pusha
popa
das
out
mov
imul
push
sarb
push
sbb
mov
mov
movl
mov
setnp
xor
add
lea
test
fisubrl
mov
xchg
dec
dec
push
adc
lock
fwait
push
xorl
push
mov
sub
add
cmpb
pop
mov
push
pop
jmp
adc
push
test
push
je
stos
aaa
inc
cmp
dec
lret
loope
mov
adc
pop
inc
lock
add
ficompl
xor
push
imul
cmpl
push
push
sub
mov
push
mov
sub
or
mov
inc
rcrl
inc
lret
stos
or
cmp
adc
repz
xor
repnz
sbb
add
insb
inc
aad
sbb
dec
mov
repz
pop
in
cmp
test
popf
pop
sbb
pusha
inc
pop
dec
sub
push
cmpb
hlt
stos
mov
sti
lods
pop
insb
lea
add
jb
int3
out
mov
lods
mov
in
sub
inc
xchg
test
xor
js
mov
sahf
and
out
testl
adc
jl
loope
cmp
aaa
sub
aam
stc
sub
lods
xor
je
add
pop
in
dec
mov
sub
mov
out
dec
stos
sti
cli
pop
mov
mov
jle
aad
inc
inc
lahf
jle
mov
jp
xchg
jnp
pusha
and
or
jle
and
and
mov
cli
and
jl
add
fsubs
imul
mov
test
pop
or
inc
into
xchg
xchg
fidivrl
sti
and
push
inc
push
clc
out
cmp
rcll
mov
cmp
bnd
pop
arpl
jp
pop
cmpsl
mov
fisttpll
xchg
jg
int
dec
cmp
sub
scas
inc
inc
out
push
inc
mov
scas
loopne
ljmp
fcmovne
or
pop
mov
movsl
pusha
cmp
daa
test
inc
jae
mov
lea
jle
sbb
cld
add
fstps
xor
leave
mov
fistpl
pushf
cli
inc
outsl
lods
outsb
mov
scas
pop
ljmp
push
lahf
mov
inc
push
dec
das
sti
je
mov
and
cltd
leave
imul
cmp
movsb
sbbl
addr16
arpl
fsubrs
pop
ret
lods
dec
jbe
pop
jbe
and
popf
inc
mov
aas
sub
arpl
push
or
pop
daa
mov
sub
ror
jns
mov
shll
inc
xor
shl
outsb
lea
jmp
call
mov
mov
inc
push
loope
xchg
pop
inc
mov
shll
xchg
aam
aas
inc
push
rcr
nop
cmc
insl
lret
repz
adc
shrb
xchg
adc
les
xorb
xchg
popw
sti
popf
cli
add
stc
xor
sub
test
clc
das
push
add
bound
sub
xorb
into
mov
or
cmp
mov
and
out
inc
cmc
lret
or
outsl
xor
add
xor
insb
sub
inc
ss
and
pop
outsb
insb
mov
mov
push
data16
and
push
lret
mov
pop
vhsubps
shr
pushf
repnz
and
push
push
or
and
xlat
push
sbb
outsb
std
pop
add
dec
and
fdivl
into
js
pop
imul
call
cmp
in
nop
sub
jb
loope
add
insl
push
xchg
cmp
add
stos
mov
sub
push
jns
aad
push
cmp
test
mov
jne
scas
loopne
pop
xor
pop
adc
inc
adc
bound
cltd
add
fnstenv
les
roll
mov
jmp
sti
sti
sub
data16
pop
call
cmp
mov
test
adc
push
add
add
xchg
cs
adcb
data16
stc
xchg
mov
adc
popa
mov
inc
fstps
jns
mov
xor
popa
push
pop
rorb
add
mov
test
loop
sub
fistpll
adc
add
or
stos
xchg
xor
mov
lret
lods
and
push
mov
idiv
loope
dec
out
repz
push
test
fimull
and
inc
adc
jae
fnstsw
es
ss
lahf
cmp
xchg
test
sbb
stos
jg
sub
inc
push
fidivs
decl
mov
pop
stos
xor
xchg
mov
mov
jnp
add
cltd
incl
ds
add
aam
pop
push
mov
inc
sahf
adc
out
xchg
inc
outsl
lret
mov
mov
popf
test
je
cmc
add
popa
fidivs
frstor
dec
stc
jb
int3
mov
push
dec
inc
inc
rcl
jg
sbbl
gs
fs
sar
inc
call
and
sub
dec
decl
adc
rcrl
jge
in
xor
int
hlt
xor
loopne
xor
insb
idiv
fwait
jp
mov
sbb
lods
adc
subb
sub
push
shll
scas
test
aad
dec
mov
insb
inc
adc
rcl
repnz
push
test
jno
mov
test
jg
std
pop
ljmp
mov
das
sbb
aad
int
sub
ret
pop
fs
out
mov
and
sub
adc
call
xchg
inc
xchg
inc
jo
je
in
data16
nop
or
insb
das
into
ja
clc
dec
ljmp
fisttps
cli
insl
shll
decb
aaa
push
movsl
aad
hlt
push
inc
icebp
mov
dec
xchg
xchg
and
outsb
in
sub
rorl
scas
and
rcll
push
mov
adc
int3
out
test
addb
int3
jns
xor
add
push
pop
imul
xor
xor
xor
pop
push
pushf
ds
mov
ds
repz
jle
lds
mov
clc
lahf
xlat
or
ja
int3
movl
dec
push
and
ret
lcall
sbb
dec
fidivs
scas
sub
nop
test
js
jmp
js
outsb
pop
shrb
sbb
sub
fmuls
pushf
pop
hlt
lcall
jecxz
out
pop
test
lds
addr16
mov
pop
jnp
sbb
test
pop
sti
push
pop
adc
lret
cwtl
hlt
jb
loope
fcom
add
xor
or
test
pop
mov
mov
leave
pop
iret
push
mov
cmp
and
icebp
sub
dec
adc
cli
scas
xor
or
int3
mov
hlt
xchg
stos
jns
jb
shl
and
add
in
ret
push
sar
add
dec
pop
jge
dec
mov
push
mov
cmp
and
jge
cmpsl
adc
in
lea
jg
sbb
pushf
mov
ret
jmp
add
pop
cmp
and
aaa
pop
push
repnz
rorb
mov
adc
mov
push
insb
arpl
pop
jbe
fmul
enter
and
shl
push
mov
inc
inc
fdivrl
ljmp
inc
or
pop
adc
mov
mov
xor
sub
inc
adc
sbb
in
movsb
nop
call
popa
push
mov
aad
mov
in
cmp
dec
je
jge
sub
dec
jb
or
addr16
cmp
lock
or
cli
in
push
sbb
lret
adc
jbe
jo
or
out
scas
in
pusha
jne
test
inc
lods
imul
inc
jl
mov
outsb
jmp
jl
cmpsb
test
pusha
enter
iret
jle
pop
orl
push
push
scas
mov
inc
shll
or
stc
mov
movl
movsb
pop
mov
sbb
push
ret
cmp
lahf
push
loopne
das
pop
jnp
add
adc
pop
or
fmull
pushl
jg
fcomps
out
jecxz
fisubs
mov
inc
int
add
cmp
out
inc
arpl
push
ficoml
xor
mov
mov
xchg
ds
out
mov
adc
sbb
je
mov
scas
pop
arpl
xorb
push
inc
iret
ja
sbb
mov
pop
cmp
xor
mov
es
mov
xor
leave
loop
outsl
push
call
fmull
popf
add
mov
notb
lods
in
das
adc
push
or
jmp
in
mov
lods
inc
ja
imul
adc
dec
je
andb
mov
push
out
xchg
dec
dec
mul
leave
jge
and
imul
push
push
sbb
xlat
in
cmpsl
mov
sbb
and
fmuls
adc
adc
sbb
loopne
xor
in
call
je
jmp
xor
push
or
lods
imul
pop
pop
test
stc
push
int3
outsb
jecxz
push
repnz
lds
jno
idiv
jle
add
sti
pop
aaa
sbb
ret
sub
mov
inc
jns
xchg
outsb
mov
cld
mov
lret
xor
mov
add
cmp
jge
in
push
addb
sub
add
andl
mov
repz
xlat
sub
dec
mov
xchg
pop
sub
pop
in
sti
and
or
mov
mov
cmp
sbb
jecxz
inc
push
mov
and
add
or
fldt
sub
mov
clc
push
idivb
sbb
outsl
sti
test
dec
hlt
mov
adc
inc
lret
ret
ret
and
push
mov
mov
data16
or
cli
cmp
add
leave
push
push
mov
fmuls
push
and
repz
mov
pusha
aaa
xchg
aam
adc
xchg
shlb
cld
mov
and
mov
cmp
dec
pop
out
adc
jnp
inc
mov
xor
dec
inc
pop
inc
lret
lods
mov
fwait
out
lods
popa
adc
call
repnz
mov
scas
popf
movsb
cmp
and
clc
outsl
pop
lahf
lret
enter
std
loope
int
cld
xchg
mov
aaa
ficomps
sbb
in
jmp
mov
inc
mov
outsb
data16
mov
xchg
xchg
fistpll
fwait
mov
fistps
jp
jne
pop
in
mov
adc
pop
cli
arpl
setae
fdivrl
mov
aam
fsubrs
adc
mov
test
sbb
xor
nop
in
outsl
mov
pop
add
es
outsl
mov
dec
pop
lods
sbb
ja
and
add
sbb
sub
and
pop
jae
icebp
pop
aaa
jae
jae
push
jge
addr16
addr16
mov
pop
test
mov
icebp
xchg
mov
cmc
cmp
xor
aam
rorb
pop
lahf
lret
xor
cli
pop
mov
xchg
call
mov
rclb
scas
rcrb
test
jb
pop
and
jo
pusha
fbstp
fsubs
in
iret
or
jae
pop
mov
push
je
push
gs
insb
fmull
les
jge
pop
iret
jg
insl
and
jae
jge
pop
call
gs
mov
mov
and
in
jno
pop
pop
cld
pop
xchg
mov
sub
pop
mov
pusha
aaa
and
mov
cmp
fldenv
and
mov
orb
iret
pop
subb
gs
test
cmp
sub
cld
mov
mov
adc
mov
sbb
and
es
mov
mov
arpl
mov
sub
aad
repz
pop
ret
xor
popf
inc
pop
loope
jl
jle
jae
stos
sub
adc
ss
mov
sahf
sub
leave
mov
data16
xchg
out
pslld
rcrl
and
xchg
mov
jmp
jns
sub
arpl
and
imul
inc
adc
imul
inc
fs
xor
loope
push
mov
push
or
ljmp
aad
xor
repnz
dec
cwtl
enter
jl
pop
mov
lods
mov
fsts
xchg
call
mov
dec
jbe
insb
ja
mov
lock
lods
sbb
and
ds
hlt
add
inc
mul
insb
xchg
int
xlat
test
je
mov
cld
and
in
adc
inc
ret
fwait
cmc
int
adc
insb
leave
lock
ja
mov
push
nop
icebp
std
sbb
pop
test
scas
sbb
cmpsl
dec
jae
add
vxorps
cmpl
es
and
nop
cli
xor
jl
data16
loop
jnp
inc
mov
sahf
test
sti
and
enter
jb
mov
aad
adc
dec
dec
mov
and
add
sub
outsb
jmp
add
mov
in
mov
add
lcall
test
fmul
js
push
fimull
push
rcrb
dec
test
sbb
mov
jmp
lret
sub
sarl
push
mul
push
fsubs
movsb
dec
pop
sub
and
lock
iret
pop
sbb
mov
adc
cwtl
test
arpl
out
je
pop
lock
ret
pop
lahf
xchg
jp
cmpsl
rcr
pop
sub
test
mov
ret
cli
push
test
or
and
dec
iret
mov
scas
mov
xor
sub
xchg
add
jmp
fmull
inc
lret
and
push
inc
xor
shr
sahf
or
aam
and
stos
xchg
or
cld
inc
or
push
and
push
addb
lea
add
mov
sub
rorl
iret
and
and
mov
std
clc
aam
out
psllq
push
out
push
jne
mov
mov
sub
pop
popf
and
mov
movsb
xchg
aam
xchg
pushf
stc
jge
xchg
out
add
and
adc
sahf
xor
push
test
dec
mov
data16
or
int
add
adc
pushf
int
cmp
in
dec
jae
mov
cmpsl
lret
jmp
jae
test
imul
mov
xlat
mov
std
jo
mov
fs
shr
enter
clc
inc
push
add
orl
mov
and
aas
inc
das
xchg
mov
jne
and
pop
cld
aam
xchg
imul
add
ss
ficomps
movsb
mov
aaa
or
cmp
xchg
gs
idivb
fnsave
jmp
cli
in
cmpsl
jnp
push
out
push
mov
mov
and
mov
or
cwtl
and
rcrl
mov
jp
jb
mov
mov
mov
sahf
lea
loop
push
or
dec
pop
adc
test
int3
jnp
sti
xlat
pop
xor
or
out
repz
mov
add
or
mov
lahf
aas
cmp
repz
mov
or
xchg
sub
iret
dec
push
mov
adc
mov
mov
stos
into
sub
insl
and
push
clc
pop
lea
repnz
ja
cmpsl
sbb
jecxz
arpl
ds
iret
out
cmpsb
or
fsubr
mov
js
testb
imul
sub
in
mov
inc
mov
or
jbe
ds
clc
push
mov
popf
rep
daa
xchg
popa
les
shll
imul
in
iret
adc
adc
stos
and
mov
xchg
sti
fwait
imul
mov
mov
insl
inc
rol
jbe
mov
xchg
or
mov
xchg
push
repnz
test
jnp
mov
adc
sbb
xchg
adc
fwait
or
into
mov
in
aam
test
jb
dec
jne
inc
fsubrs
gs
mov
fsubp
mov
mov
test
loopne
pop
push
sub
rolb
jbe
movsb
xor
in
int
jno
ljmp
sbb
in
ljmp
pop
mov
or
imul
int
xor
flds
xor
fisubs
adc
imul
pop
xchg
mov
std
sbb
dec
aam
mov
test
cmp
xchg
sbb
imul
out
xor
scas
fsubr
xlat
mov
or
sbb
xorl
mov
dec
xor
adc
mov
sti
lods
pop
fmuls
push
stos
stos
mov
mov
in
dec
or
mov
insl
xor
adc
xchg
cmc
mov
data16
bound
mov
test
fcomps
lahf
xchg
or
cmpsb
add
hlt
xchg
cmp
mov
fnstsw
cmp
lods
jp
jo
push
ficompl
xchg
jns
dec
icebp
in
fs
xchg
ss
or
cltd
loop
data16
loopne
shll
cmpsb
les
lods
mov
into
cmp
dec
lock
out
fisttps
pop
or
ror
mov
int
cli
and
adc
roll
cmc
push
or
or
xor
mov
xchg
fwait
clc
sahf
pop
mov
mov
fildll
push
fsub
cmp
imul
adc
adc
mov
xchg
push
mov
push
pop
and
sub
das
jp
repz
divl
or
in
cs
dec
inc
enter
cmp
jae
add
sbb
push
xchg
pop
or
cmp
cltd
cmp
adc
popl
insl
mov
mov
sbb
jle
movsl
pop
lcall
inc
loopne
xchg
and
fcoml
xor
mov
jle
cmp
and
xchg
xchg
and
inc
or
inc
outsl
std
and
inc
movsl
daa
push
adc
ds
push
test
cmp
mov
std
mov
es
add
pop
mov
clc
jno
inc
dec
idiv
in
out
cmp
addl
xor
or
lds
hlt
dec
xchg
dec
fldenv
push
insl
std
insb
sarb
push
ficoml
xchg
and
sbb
xchg
dec
mov
or
or
lcall
and
mov
jo
and
and
push
push
ficoml
or
lock
lds
or
idivl
pop
mov
shlb
inc
lea
xor
inc
pop
or
sub
sbb
inc
leave
das
pusha
lea
outsl
jecxz
shrl
adc
fstpl
xchg
cs
insl
cmpsb
mov
push
mov
sub
push
arpl
sub
add
mov
push
nop
push
jne
test
call
pop
or
ja
xlat
loopne
ljmp
stos
jg
sub
sbbl
shll
add
or
mov
and
pushf
or
mov
mov
mov
push
sub
arpl
cs
aas
jo
ret
sbb
repnz
pop
cmp
cmp
ds
shrb
pop
fcompl
add
repnz
mov
ret
ljmp
xchg
mov
push
add
lcall
hlt
aas
ljmp
test
inc
sti
jne
cwtl
flds
es
cmp
fstpl
xlat
mov
mov
add
adc
out
das
xor
jb
push
subl
jns
and
clc
sub
sub
push
sub
es
pop
ljmp
or
cwtl
fidivl
sbb
push
adc
test
xchg
sbb
movsl
adc
xchg
mov
lods
stc
lods
stc
int3
xchg
push
cltd
cltd
shlb
jno
sarb
lods
ss
rolb
gs
loopne
or
jg
leave
or
hlt
aam
repnz
in
in
lcall
cmp
mov
jns
sbb
movsl
daa
sub
dec
cwtl
cs
mov
pusha
jge
out
mov
lods
add
add
mov
add
cmp
aas
insl
adc
rcrb
inc
add
xchg
sub
insb
mov
dec
sar
nop
jp
sub
das
push
lods
pushf
xchg
stos
stos
lret
cmpsl
or
outsl
movsl
es
cmp
sbbl
out
fcmovbe
mov
js
pop
sub
call
out
fistl
js
loop
add
adc
shll
std
out
hlt
add
mov
into
add
add
cmp
sbb
fidivs
xor
fimull
xor
leave
sti
fldenv
and
jo
mov
jbe
aas
cmp
pop
or
add
mov
push
popa
jo
add
cmp
mov
bound
xchg
daa
int3
in
and
test
add
jb
int3
or
sub
jae
loop
dec
movsl
hlt
test
aaa
jne
cmp
ret
pusha
popa
push
aas
fst
or
mov
lcall
imul
sbb
dec
fs
jl
sub
cmp
cmp
pop
pop
imul
data16
and
dec
jmp
sub
stos
shrl
lahf
or
mov
jne
xor
std
stos
push
adc
adc
arpl
xlat
int
mov
mov
imul
sub
mov
mov
mov
aad
push
rol
dec
push
movsb
or
out
hlt
out
mov
adc
ss
cmp
sub
and
out
mov
daa
mov
mov
cld
sbb
fisubrs
in
pop
push
add
arpl
xor
scas
mov
adc
add
cmpsl
into
xchg
mov
or
and
jmp
jno,pn
lret
fcomps
fprem1
pusha
fstps
ljmp
pop
dec
arpl
daa
add
out
cmp
das
call
xor
dec
mov
push
jge
fldl
test
push
iret
push
or
into
rolb
or
xor
out
cmp
jecxz
cltd
xlat
inc
clc
and
imul
cltd
dec
xor
adc
adc
xchg
push
shrl
mov
add
jl
cld
push
sbb
or
sub
test
cltd
int
aas
leave
hlt
call
mov
adc
test
mov
xor
pop
jne
in
adc
lea
fcompl
inc
dec
leave
xor
fcomip
pop
fwait
rcrb
ret
icebp
mov
jne
in
out
inc
add
ja
push
shrl
cmp
sbb
cli
pop
jle
scas
add
sub
jl
push
sub
add
ja
movb
dec
xor
fs
sub
xchg
inc
jl
fs
mov
add
add
std
inc
add
insl
jmp
jg
jge
in
gs
bound
ja
es
xor
into
sub
adc
adc
test
cmpsb
sub
je
out
mov
nop
pop
inc
push
mov
mov
xchg
test
xchg
add
add
dec
jnp
jns
pop
loopne
jmp
ja
das
cmp
xchg
inc
lret
inc
imul
cwtl
adc
rcrl
jle
leave
scas
and
cld
adc
mov
testb
cmp
push
lods
ljmp
push
mov
add
jl
dec
loop
popf
jns
jbe
cmpsl
aam
cmp
out
sbb
adc
jmp
mov
jecxz
stc
push
cli
cmp
test
aas
enter
insl
pop
xor
scas
fdivs
mov
mov
iret
fucomi
sbb
xchg
je
je
sub
sub
adc
pop
iret
inc
adcl
jecxz
dec
les
cmpsl
sub
cmp
in
fmuls
pop
stos
push
in
shr
repnz
movb
dec
push
clc
adc
lea
rcrb
push
pop
jmp
xchg
xchg
lea
mov
xchg
adc
push
mov
cltd
cmpsb
inc
dec
outsb
test
out
fstpl
sbb
fmulp
incb
int
daa
ljmp
adc
insb
push
divl
mov
test
xchg
mov
adc
adc
outsb
in
pop
xor
pop
mov
mov
mov
xor
adc
stc
jge
int3
xchg
dec
rcll
into
int
movnti
sbb
into
mov
adc
into
out
repz
and
lods
mov
mov
push
fsub
mov
stos
cmpsb
dec
jl
int3
sub
and
mov
cmp
cld
or
das
xor
pop
xor
ss
test
ret
add
push
in
shll
inc
jg
or
gs
rorb
fnstsw
sbb
inc
push
sbb
inc
test
mov
inc
test
mov
lods
adc
inc
mov
mov
fs
xor
aas
in
dec
xlat
stos
dec
fdiv
pop
inc
aaa
fstl
int
lods
or
xchg
addb
cwtl
hlt
imul
mov
add
popa
xchg
sbb
aam
adc
stc
pop
addb
mov
rcl
and
mov
stos
ja
cmp
nop
nop
inc
aaa
or
fwait
xchg
bound
mov
aaa
imul
bound
or
rcrl
imul
inc
push
pushf
pop
add
mov
jg
dec
ja
mov
aaa
sbb
nop
inc
out
cld
sti
shl
aas
cmpsl
push
clc
mov
xor
in
stc
shll
dec
push
out
int
jbe
jae
jl
aam
cmp
cmpsl
mov
dec
in
xchg
pop
inc
subb
outsl
mov
ja
pop
cmp
dec
ljmp
inc
jo
fsubr
inc
jg
mov
mov
insl
std
cmpsl
cmp
test
aam
mov
xor
ss
push
mov
out
mov
dec
dec
pop
cmp
mov
hlt
in
bound
mov
mov
xor
jle
outsb
cltd
mov
in
add
inc
mov
or
xchg
cld
mov
sbb
subb
rcrb
ret
mov
andl
xchg
aad
ss
fstp
dec
sbb
aaa
rcr
popa
int3
adc
or
out
int3
movsl
adc
add
jne
sahf
jle
push
pop
inc
inc
leave
mov
pop
mov
adc
cs
fnstsw
xor
and
testb
idivb
fsubrl
mov
xchg
inc
iret
pop
jl
fstpl
pop
or
mov
push
lret
fs
cwtl
mov
and
dec
test
movsl
je
mov
jae
in
aad
push
js
pop
and
adc
into
or
mov
pop
das
xchg
rorl
scas
add
mov
orb
cwtl
pop
mov
jbe
jb
mov
leave
insb
jp
jg
jecxz
jge
and
dec
xchg
fnstcw
nop
push
decl
orb
outsb
inc
cmc
cmp
sub
sub
aas
push
or
mov
push
add
movsl
test
gs
cmp
jno
into
das
fistps
jecxz
mov
adc
mov
sbb
hlt
xlat
lcall
mov
je
jecxz
mov
rorl
outsb
cwtl
cmp
mov
or
push
ret
div
mov
js
mov
outsl
xchg
jns
add
fucomi
stos
or
outsl
test
test
sti
push
fs
jmp
loope
sub
call
lods
jge
mov
and
nop
cmpl
shlb
or
mov
pop
push
scas
gs
les
out
loope
and
jge
mov
pop
cmpb
inc
dec
mov
lahf
xor
movsb
cmc
fildll
cmc
xchg
mov
fmull
adc
nop
mov
mov
lds
test
xchg
xchg
jo
jnp
cmpsb
lds
cmpb
adc
jge
cwtl
and
jp
mov
cmp
rsqrtps
mov
jb
aad
jne
iret
push
inc
push
push
xchg
sub
push
out
sahf
and
pop
out
out
rcrb
or
rorl
test
sub
sbb
mov
sbb
and
sbb
loopne
inc
lods
ss
popf
pop
xor
jecxz
dec
pop
mov
es
mov
mov
dec
push
mov
stos
leave
xorl
leave
mov
sbb
test
movsb
xchg
aaa
sbb
sub
scas
addl
or
bound
out
shlb
cmp
subl
xchg
repnz
pop
push
dec
xchg
push
xchg
outsl
jns
mov
jae
dec
testl
cld
sbb
fistpl
pop
out
pop
add
or
mov
adc
mov
mov
push
xor
stos
xor
sub
ja
mov
stos
jmp
ret
das
xor
jp
test
pusha
pop
and
pop
les
xor
mov
jp
sbb
pop
jno
jns
xor
cmp
in
or
mov
jne
dec
aaa
movsl
mov
xchg
or
fisubrs
lods
dec
pop
inc
xchg
fisubl
xchg
xchg
adc
push
and
in
add
fists
inc
xor
sbb
sarl
sbb
in
test
out
push
cli
ret
or
shlb
add
iret
mov
in
sbb
into
cmp
les
or
adc
push
int
dec
jo
jl
cld
adc
xchg
les
repnz
push
cmpl
jg
lods
push
nop
mov
int
pop
xchg
repnz
int
mov
in
xor
divl
pushl
in
pop
pop
mov
insl
arpl
adc
shlb
pushf
das
sub
pop
adc
push
lods
push
subl
rcl
leave
adc
inc
sbb
js
lods
sti
xchg
je
ficoms
jmp
xchg
sti
mov
cltd
jns
adc
fidivs
xchg
sbb
clc
inc
rorb
addr16
hlt
mov
xor
or
pop
pop
in
inc
push
xor
mov
es
mov
test
lahf
in
int
lock
mov
cwtl
or
xchg
insb
andl
pop
cli
dec
dec
popa
outsb
mov
inc
inc
into
xor
cmp
cs
cs
je
fisttpl
repnz
sbb
adc
xorl
mov
stc
add
fcomip
mull
jl
sub
inc
icebp
aaa
lret
popl
adc
es
jno
push
cwtl
adc
push
aaa
xlat
out
inc
jo
adc
loopne
leave
sub
sahf
mov
add
xchg
inc
daa
nop
es
push
out
sub
pop
xchg
jl
rorb
add
cmpxchg
test
mov
mov
shrb
mov
fidivrs
lds
adc
jne
xchg
lock
int3
in
sti
cs
mov
xor
push
aam
push
js
inc
orl
fwait
sub
popa
int
or
rcr
sbb
lea
jg
setle
cmpsl
push
dec
lea
mov
or
iret
lock
mov
mov
mov
in
xor
sub
jge
jmp
xchg
in
mov
mov
ret
fistps
sub
mov
lret
loopne
adc
bnd
mov
je
inc
mov
pop
sbb
mov
jg
inc
out
and
xor
sub
mov
scas
or
or
inc
repnz
cmp
movsb
dec
data16
int3
and
xchg
fisubrs
mov
xchg
xchg
test
lea
mov
jg
jnp
jecxz
out
nop
bound
iret
cmp
pusha
loope
movsb
jle
sub
mov
jge
fnstenv
xchg
mov
repz
jmp
nop
popf
dec
lret
sbb
inc
fdivrs
adc
and
mov
jle
out
add
cltd
or
fiadds
and
outsl
sarl
push
jp
mov
push
mov
xor
xor
inc
mov
pop
xor
adc
in
or
sbb
stos
stos
push
loop
adc
scas
rorb
lahf
sbb
stos
in
mov
and
dec
shll
xchg
jbe
ljmp
add
cmpsb
cld
sub
scas
inc
add
into
fistps
ss
add
int3
jecxz
sbb
mov
outsl
pop
fldt
ret
add
push
repnz
xchg
xchg
and
in
mov
rsm
pop
mov
lods
add
jo
mov
lods
mov
add
stos
sub
in
dec
jp
enter
outsl
push
test
pop
lds
dec
aaa
push
mov
sbb
loopne
xor
out
xor
xor
leave
and
daa
sub
inc
mov
pusha
push
mov
adc
inc
inc
pushf
in
out
loope
stos
inc
xor
lcall
scas
sbb
inc
xchg
xchg
notb
pop
sbb
mov
dec
pop
rcl
pop
scas
add
xchg
test
cmpsl
imul
sub
xchg
shl
sub
xlat
push
out
cmpsb
popf
jle
pop
sbb
pop
inc
jge
mov
scas
jecxz
fsubs
jle
dec
mov
stc
inc
mov
add
shlb
push
xchg
xchg
enter
add
icebp
loopne
out
pop
outsb
dec
jb
xor
movsb
or
outsl
adc
sub
or
leave
dec
xchg
test
and
cmpsb
outsl
in
xor
and
xor
mov
lcall
mov
mov
cmc
into
fnsave
inc
insl
test
out
pop
dec
insb
enter
cmp
pop
adc
inc
cmp
push
cmp
test
orps
pushf
sub
sarb
mov
inc
lahf
sub
test
jb
scas
sti
imul
out
and
lea
mov
pop
add
stos
dec
dec
outsb
sbb
sub
arpl
and
mov
inc
shr
xchg
and
xchg
or
inc
scas
es
movsb
lcall
ret
movsb
cld
xor
sbb
fisubl
pop
stos
or
dec
popa
loopne
ja
mov
lea
adc
adc
clc
cmpsl
incb
cmp
sub
pop
ret
ss
leave
sbb
jl
inc
xor
sub
mov
cmpl
jne
xor
cmp
mov
push
int
sbb
loop
in
and
or
jno
dec
mov
rcr
xchg
fnsave
cmp
shl
sbb
jp
pushf
outsb
cmpsl
jg
popf
add
into
pop
sbb
push
push
jp
adc
mov
subl
test
and
or
movsb
js
roll
sbb
test
sbb
or
inc
sub
imul
in
mov
mov
bound
mov
aaa
mov
xlat
lods
adc
jecxz
negb
addr16
imul
push
orl
in
and
cld
xor
mov
movsl
testl
or
imul
adc
cmp
pop
push
mov
jle
outsb
adc
cli
mov
roll
jmp
pop
cmpsb
push
adc
pop
mov
aad
sbb
inc
jne
rorb
test
jle
mov
shr
inc
inc
push
xor
repnz
cld
movsb
inc
xchg
pop
push
pop
inc
xor
daa
mov
or
fstl
push
subl
into
rcll
icebp
pop
sbbl
add
out
lock
mov
int3
xchg
cmp
mov
mov
lods
je
in
not
jge
or
dec
lret
pushw
outsb
lods
mov
pop
lcall
stos
pushf
xchg
or
sub
push
add
jns
mov
jae
pop
testb
mov
dec
inc
mov
clc
fcmovu
sub
in
pop
mov
setle
xchg
mov
sahf
mov
aad
sbb
inc
or
pop
rorl
addr16
pop
fcompl
mov
mov
mov
cmpsl
cli
or
add
jmp
scas
adc
xchg
mov
add
push
mov
aad
imul
addr16
mov
inc
aam
int
loop
dec
sub
mov
sbb
cmp
into
outsb
popf
dec
aam
add
sbb
add
xchg
pop
add
sub
mov
insl
test
sub
pop
mov
lds
stos
jp
shl
nop
shlb
mov
dec
pop
pop
dec
jmp
fisttpll
xor
mov
dec
and
iret
cmp
clc
sub
jmp
mov
scas
jno
shlb
fwait
aaa
mov
rol
in
push
or
shlb
and
aad
adc
enter
lock
in
xchg
xchg
adc
popa
adc
add
out
sbb
in
test
ss
dec
inc
lret
xchg
sarl
mov
mov
push
and
mov
lock
adc
sbb
pop
stos
sbb
stos
jge
mov
rorb
jbe
mov
je
mov
mov
dec
xchg
and
push
scas
lods
sbb
inc
int
push
mov
test
cli
fnstsw
cmp
mov
add
jmp
xor
sbb
test
and
mov
jg
clc
repnz
sbb
sbb
test
add
incl
popf
push
pop
and
js
pop
cmp
jns
movsl
fbld
add
or
and
jg
lret
sahf
sarl
aas
jge
cld
jl
sub
mov
ljmp
cmp
add
std
or
lcall
popa
add
or
mov
insl
outsb
addl
sbb
pop
pop
mov
mov
and
push
movsb
adc
nop
lods
cwtl
mov
jnp
mov
cmpsl
adc
mov
mov
stc
or
pop
sbb
ss
pop
mov
mov
and
pop
xchg
push
xchg
jnp
imul
ret
sbb
pop
pushf
cmp
out
lds
mov
push
fs
cmpsb
mov
insb
and
jp
enter
jno
mov
jne
fnstenv
testb
and
pop
daa
aas
aaa
fldl
aad
enter
inc
xor
repnz
jae
mov
gs
clc
fisubrl
or
mov
pop
mov
outsl
sub
mov
std
neg
lcall
mov
add
cmp
xor
pop
in
lock
or
shrb
xchg
call
mulb
test
insb
xchg
cmp
jmp
imul
lea
in
adc
cli
rcll
cmpsl
jmp
into
or
jbe
stos
rolb
iret
bound
stos
push
xchg
and
fdivr
test
repnz
out
es
decb
test
jb
xor
outsb
jmp
mov
mov
sbb
les
xor
sahf
aas
sahf
inc
int3
inc
bound
mov
fprem1
mov
pushf
sub
xor
std
es
xchg
mov
adcl
cmp
mov
xor
jle
jns
les
cmp
adc
sub
clc
fld
cmp
mov
jg
in
pusha
inc
xchg
incb
or
push
push
pushf
aas
insb
cmp
pop
lods
mov
rcrl
jge
mov
sti
scas
addl
fsts
movsl
and
jl
leave
inc
stos
push
fwait
sub
cmpsl
subb
loopne
es
push
popa
jge
pop
je
data16
popf
in
adc
std
ja
inc
fisubl
mov
mov
add
in
jae
fdivrl
out
xchg
pop
mov
bound
xchg
mov
stos
lock
aam
add
scas
into
ds
inc
test
inc
xchg
mov
fisttpll
xchg
roll
icebp
or
pusha
adc
scas
push
jo
mov
lcall
cmpsl
out
fmuls
test
push
pusha
fadds
cs
add
sbb
in
pop
mov
sub
pop
dec
sti
dec
mov
and
jecxz
mov
pusha
cmpsl
shll
out
movsl
jecxz
or
js
iret
or
xchg
pop
hlt
pop
add
test
movsl
lcall
lcall
sbb
or
xchg
push
cmp
xor
outsl
int
stc
stos
mov
mov
mov
jmp
pop
push
ja
or
mov
movsl
jo
iret
roll
dec
adc
stos
mov
cli
add
pop
push
repnz
popa
lahf
lea
dec
aad
in
les
pop
cltd
jns
push
stc
pusha
lock
outsb
movb
bt
push
add
fcom
push
jecxz
out
cmp
ret
daa
add
jmp
andl
jle
cltd
cli
push
sub
sub
mov
rorl
xor
mov
xchg
push
shll
jmp
imul
rorl
adc
push
xchg
push
xchg
jb
fsubl
and
jbe
lods
data16
inc
mov
iret
xchg
loopne
and
lods
and
or
sub
fdivs
cmp
cmpsb
add
orl
mov
xchg
andl
fs
stos
mov
mov
push
jo
imul
or
in
mov
sub
pusha
sbb
ret
shr
roll
rolb
addb
cmpsb
lods
fs
cmp
and
adc
leave
mov
xor
clc
pop
popa
ffreep
dec
xchg
push
mov
arpl
or
xchg
sbb
pop
mov
add
or
subl
push
pusha
fs
xchg
push
int
xor
movsl
bound
and
jle
mov
pop
dec
cmpsl
popf
push
notl
mov
popa
xchg
ljmp
adcb
and
push
pop
push
sahf
loope
xchg
mov
mov
jge
dec
sbb
loopne
loop
ja
mov
call
mov
daa
xor
push
and
dec
mov
mov
cmpsb
out
pop
testl
in
loop
inc
mov
icebp
xchg
sub
lret
mov
repz
aaa
clc
icebp
xor
mov
daa
pop
out
and
jg
fisttps
and
es
and
sbb
sub
mov
ljmp
call
and
mov
call
inc
cmp
mov
mov
sar
shrl
xchg
imul
and
add
mov
pushl
arpl
pusha
dec
mov
arpl
adc
aas
movsl
adc
xchg
fwait
iret
ja
sbb
add
lcall
jae
and
and
push
orl
adc
xchg
xor
mov
sub
mul
xchg
in
add
out
repnz
test
mov
inc
je
add
mov
lahf
lahf
jmp
or
inc
push
sbb
movsl
in
sbb
daa
xchg
pop
mov
add
add
adc
daa
cmpsb
and
addb
add
xor
adc
in
mov
icebp
add
jns
outsb
inc
sti
repz
lcall
ljmp
xlat
lds
pop
push
movsb
xor
mov
cmpsb
rcr
fldt
sbbl
lock
adc
rcrb
push
out
ss
inc
rcl
lcall
jmp
xor
in
aaa
and
out
mov
nop
adc
pop
or
loope
fwait
nop
adc
jg
repz
stos
mov
les
jmp
push
repz
jne
xlat
adcb
pushf
jge
xor
and
loop
sub
lods
cli
rcll
js
push
xchg
push
jl
addr16
outsl
adc
adc
dec
mov
jg
cmp
push
enter
mov
int3
dec
sbb
jae
mov
sbb
mov
mov
fildll
add
push
ficomps
mov
test
dec
inc
adc
dec
xor
movsb
add
rorl
mov
aad
testb
or
push
andb
sarb
sub
mov
mov
out
xchg
andb
add
scas
xchg
xor
mov
sbb
and
icebp
gs
in
or
repnz
mov
or
mov
sbb
ja
mov
push
push
mov
pop
mov
sbb
es
lods
int3
mov
push
insb
fisubl
mov
push
add
into
xor
lahf
aas
ret
call
cmc
add
mov
inc
push
xchg
jbe
sbb
mov
dec
mov
and
xchg
ss
cmpsl
cwtl
jbe
ret
stos
inc
mov
xlat
mov
pop
adc
mov
cld
mov
lock
test
in
cld
insb
lods
mov
pushf
mov
test
push
shlb
push
roll
dec
rorl
hlt
lret
sub
sti
movsl
mov
adc
andb
jge
mov
std
push
jp
mov
js
clc
in
pop
rclb
daa
xchg
pop
stc
xor
pushf
dec
arpl
std
cmp
dec
cmpsl
incl
mov
mov
and
and
pop
jmp
or
ds
call
dec
adc
test
push
jp
jno
dec
cmp
fst
adc
leave
xchg
shrl
outsl
fs
adc
pop
pop
sbb
int3
je
xchg
in
shl
aas
adc
orb
xchg
leave
clc
not
lds
or
add
add
cmp
push
mov
push
insb
inc
adc
incb
mov
imul
movsl
data16
inc
aas
std
ret
fistpll
mov
xchg
inc
pop
xor
dec
adc
mov
push
mov
aam
hlt
mov
jmp
dec
int
adc
rorb
inc
lea
sub
mov
cmpsb
mov
ror
hlt
xor
xchg
mov
cmpsb
mov
cmp
fcoms
lods
mov
inc
gs
xchg
pop
out
push
stos
gs
pop
lret
pop
cmp
jno
mov
push
jae
cld
sarl
outsb
mov
mov
ss
sbb
adc
xor
fisttpll
mov
pushf
icebp
jb
cld
and
add
pushl
dec
xchg
fisubrl
mov
in
andl
lret
nop
mov
int3
je
dec
mov
add
and
subb
fiadds
or
inc
and
imul
mov
or
inc
dec
or
sbb
insl
mov
push
xchg
clc
dec
aad
sbb
ds
lahf
mov
and
imul
ljmp
adc
cmpsl
iret
leave
mov
faddl
pop
les
sbb
jecxz
or
dec
cs
lock
or
mov
sbb
lret
add
imul
sbb
jg
dec
push
and
daa
add
aaa
mov
sbb
ss
mov
adc
add
inc
and
push
mov
sbbl
xchg
mov
jae
clc
pop
xchg
mov
mov
sub
push
int3
push
push
cld
mov
in
pushf
out
cmpsl
jnp
fnsave
add
lea
inc
push
mov
cwtl
lcall
loope
push
inc
fxch
push
fwait
sbb
enter
or
gs
sbb
pushf
inc
fsub
add
or
and
hlt
mov
test
daa
rcll
bound
iret
in
or
movsb
iret
outsb
int
sub
push
hlt
pop
mov
mov
mov
bound
sbbb
cli
daa
outsb
inc
xor
hlt
pop
and
xor
fsubrp
out
mov
cmp
mov
bound
push
pop
and
enter
mov
xchg
les
out
call
fs
cmc
cmpsb
out
mov
cmp
stos
repnz
push
shlb
mov
push
loope
dec
push
inc
rcl
movsb
sti
ror
and
push
xor
add
imulb
out
adc
xor
les
outsl
enter
fnstenv
sbb
movsl
xlat
pop
aaa
mov
mov
pusha
jae
mov
sbb
mov
imul
js
nop
shlb
mov
sub
or
repz
push
movsb
xlat
dec
pop
and
sbb
pushl
lea
push
xchg
add
inc
mov
cmp
test
enter
stc
and
inc
adc
repz
stc
cltd
ss
icebp
imul
dec
jo
inc
push
jge
or
sar
push
lods
cs
adc
mov
jno
push
mov
scas
xlat
xlat
inc
mov
jle
mov
out
ljmp
add
loopne
shrb
rcll
push
push
jl
jb
or
fcmovne
loopne
dec
sub
mov
jno
adc
and
shl
add
pop
rcrl
hlt
dec
lds
bnd
fcmovb
leave
scas
adc
cmpsl
sub
outsl
mov
mov
scas
popw
xchg
and
imull
loop
push
clc
subl
mov
jno
cmp
cmpsb
in
add
js
xchg
push
outsb
fbstp
fimuls
xchg
jnp
insb
xchg
mov
stos
xchg
in
jp
add
push
and
ficoms
shll
pop
and
inc
fistl
inc
xchg
js
repz
ds
rcr
cmp
rclb
inc
add
gs
cmp
push
pop
popa
xchg
dec
sub
xchg
fmuls
aad
and
fisubs
insl
mov
pop
sub
roll
sub
test
rcrl
int3
pop
lock
addr16
hlt
pop
enter
mov
and
popf
jmp
mov
or
xchg
adc
outsb
mov
or
sub
insb
xchg
hlt
inc
xor
mov
jecxz
jno
test
ret
xor
int
or
enter
ret
scas
jge
ljmp
add
test
test
lock
lcall
ficoms
push
jmp
mov
mov
pop
xchg
mov
das
xlat
mov
fsts
clc
into
daa
cmpsb
adc
gs
movsb
mov
lret
vmread
xchg
xchg
shrb
push
fnstcw
add
sub
inc
shlb
push
push
push
push
pop
dec
test
aam
mov
cwtl
fistpl
xlat
les
xorl
or
and
dec
nop
xchg
aaa
mov
dec
and
call
xchg
fldcw
add
ret
in
sub
popf
inc
jbe
lret
push
cmpl
push
push
pand
leave
fiadds
jmp
in
jb
dec
enter
out
ds
pop
adc
push
mov
mov
idiv
je
movsb
and
pop
push
push
fstl
cwtl
push
sbb
mov
cmp
stos
push
insl
jp
imul
xor
adc
push
out
sbb
dec
cmp
sbb
sub
das
or
mov
inc
mov
xor
aad
in
mov
rol
rorl
push
ja
dec
xchg
gs
jno
pop
rcll
pushf
lret
call
xchg
xor
test
pop
adc
mov
and
js
push
xor
stc
sub
dec
int
ja
xchg
gs
adc
and
popa
cmpsb
stc
into
mov
dec
add
xlat
xchg
adcl
push
push
dec
loopne
addr16
mov
push
jb
sub
or
sti
xchg
jns
pmullw
push
dec
imul
sub
je
xor
jbe
into
xchg
jo
out
lret
dec
push
lods
inc
sbb
mov
xchg
push
mov
jge
pop
mov
int
pop
mov
jl
pushf
data16
inc
enter
call
lods
ret
xchg
inc
sub
in
pop
pop
or
push
mov
cmc
mov
and
adc
dec
jo
push
xor
mov
mov
mov
lea
loop
cs
jnp
mov
addr16
jo
test
hlt
mov
je
jns
jbe
mov
hlt
xlat
ja
pop
cmpsl
fwait
jae
in
jmp
push
dec
dec
sbb
add
test
lods
or
adc
inc
addb
cltd
add
pushf
add
gs
icebp
inc
push
adc
pop
pop
rorl
jb
in
sbb
lahf
rolb
mov
jl
iret
pushf
stc
push
stc
dec
fisttpll
xor
hlt
sub
pop
iret
or
xor
xor
sub
xor
jge
aam
sub
mov
sub
xchg
test
ds
push
fmul
popf
xchg
pushf
int3
je
lahf
sbb
sbb
sbb
dec
jp
or
mov
inc
movsl
in
inc
xchg
push
push
and
mov
jnp
std
xor
jg
xor
sbb
push
fdivs
push
xchg
lods
mov
and
push
imul
lcall
popa
mov
mov
sbb
lock
addl
xor
subb
dec
inc
dec
pushf
ret
scas
add
or
int
dec
addr16
cltd
sti
add
shll
push
push
pushl
rclb
popf
popf
inc
stos
fisubl
imul
xchg
pop
jmp
fisubrl
and
push
dec
sbb
sbb
pusha
nop
pop
jnp
das
fdivs
jno
imul
fadds
mov
mov
sbbl
andb
inc
mov
jb
sahf
je
cltd
enter
andb
lods
lods
nop
bound
imul
mov
lahf
lods
rorl
mov
and
aaa
insl
or
cmc
or
jle
test
push
and
test
pusha
scas
pop
lcall
movsl
mov
je
aas
mov
fsubr
ret
xor
pop
stos
and
sub
pop
push
aam
lods
sbb
addr16
pushf
mov
jecxz
jae
fisubl
pop
mov
push
les
mov
out
les
lock
fidivs
in
in
pop
ret
repnz
sub
and
add
adc
and
sbb
and
jle
xchg
lock
sahf
icebp
pop
cli
cmpsb
mov
jns
cmp
xchg
mov
sub
out
aad
inc
das
xchg
xorl
mov
rclb
and
or
mull
or
rcrl
lock
add
movsb
jecxz
push
dec
addr16
fcom
scas
lret
into
clc
arpl
push
jmp
hlt
lods
cmp
movl
ret
xor
ss
pop
xchg
mov
out
cmp
movsl
dec
out
jae
mov
vmovapd
sbb
jno
push
inc
stos
sbb
subl
xchg
sub
int3
loopne
ficompl
xchg
pop
into
fiaddl
xor
scas
add
or
dec
imul
mov
clc
les
mov
jns
sub
inc
rorb
in
cmp
cmp
mov
push
mov
loopne
inc
xchg
mov
aad
test
enter
jb
in
cmp
fistpl
xor
fnstenv
adc
ja
nop
mov
fsubrl
aam
cltd
or
test
lock
movsl
pop
inc
jb
dec
out
icebp
and
mov
inc
out
pop
push
jb
jbe
iret
mov
movsl
ds
mov
xor
test
sub
mov
jmp
mov
cli
rcrl
movsl
lahf
xlat
jae
jg
stos
sbb
shll
push
in
mov
arpl
insl
mov
cmp
jl
mov
push
mov
pop
pop
call
cmp
xor
pop
mov
mov
inc
or
fwait
call
jb
pop
imul
jbe
mov
cmp
and
mov
shll
pusha
out
pop
mov
inc
push
ds
rcrb
mov
push
mov
or
in
sub
mov
jp
insb
mov
shlb
xchg
inc
in
jns
aam
aas
xchg
or
push
sarb
adc
dec
mov
xchg
push
adc
mov
test
sbb
jb
pop
xchg
and
lock
mov
xlat
dec
nop
xor
out
xor
adc
jo
push
lock
mov
sbb
xchg
ds
mov
cmp
xorl
xor
xlat
fstps
int
push
jne
cmp
xchg
pop
movl
cwtl
int
and
cmc
mov
in
daa
mov
xlat
cmp
push
mov
fmulp
scas
inc
xor
xor
lret
push
insl
lea
lds
ja
pop
dec
inc
add
inc
add
ss
dec
mov
adc
lods
in
sub
or
rcl
xchg
sarb
loop
sub
data16
push
nop
dec
xor
adc
repz
aaa
xchg
cmc
dec
cwtl
sbb
mov
shr
fdivrl
pop
pop
push
mov
jns
push
leave
inc
inc
mov
add
mov
cli
xchg
in
mull
cmp
in
mov
add
addr16
fmull
test
xchg
decb
mov
pop
dec
in
mov
add
cmp
lahf
push
jno
inc
dec
pop
xchg
sarl
mov
aaa
mov
xchg
pop
call
add
insb
adc
jbe
mov
or
xchg
aaa
pop
jo
jp
push
push
mov
aas
pop
mov
cmp
ret
xlat
mov
lcall
addl
outsb
mov
loopne
shll
js
lcall
imul
push
in
out
in
icebp
fs
arpl
pop
leave
push
pop
js
imul
sbb
sub
jg
jmp
pop
fadd
test
stos
sub
ja
orl
out
movsl
inc
in
xor
jg
mov
mov
icebp
cmp
outsb
enter
adc
popf
mov
fs
mov
cmp
mov
or
pop
rorl
and
adc
xchg
xor
dec
lcall
stos
or
mov
jne
iret
mov
imul
lock
mov
mov
dec
fiadds
mov
adc
lret
aam
cmc
xor
gs
pop
insl
xchg
xor
int3
dec
push
outsl
test
fldl
lock
ds
mov
movsl
xor
cmp
cltd
in
insl
repz
xchg
and
xor
jnp
push
sbb
cmp
inc
sbb
add
fstl
push
push
push
dec
mov
mov
and
in
jecxz
ja
sub
xchg
inc
push
jnp
movsw
movsl
aas
pop
sub
test
add
lcall
fistps
fmul
jae
hlt
xlat
loopne
mov
int
adc
leave
enter
and
pop
sbbb
pop
pushl
test
bound
or
jne
shr
xor
sbb
mov
sub
je
ljmp
push
lcall
mov
jno
jg
rol
and
in
or
ljmp
cmc
pop
xchg
out
xor
leave
xchg
scas
lea
dec
jns
inc
popa
mov
push
sahf
dec
fs
push
ret
mov
out
gs
dec
xchg
jge
dec
lret
jb
cmp
xor
in
leave
push
ret
popf
pop
rcrl
push
pop
push
and
pop
push
sbb
cmp
pop
push
sbb
fdivs
add
shrb
hlt
cmpsb
jno
lret
mov
inc
loopne
fmuls
cs
mov
adc
sub
les
push
std
imul
cli
out
sbb
inc
sbb
adc
leave
jo
inc
adc
hlt
add
sbb
mov
and
mov
or
lock
cmpsl
dec
es
sub
push
push
ds
jnp
scas
push
in
shl
ret
xchg
test
or
shrb
call
jns
insl
push
jnp
dec
and
push
loop
or
sbbb
adc
aam
sbb
fiaddl
jae
cmp
and
push
mov
cmp
sarl
mov
mov
scas
and
test
add
cmp
push
addr16
xor
push
daa
sbb
sub
loope
sbb
pop
xor
jo
bts
sti
mov
cld
mov
mov
cmp
pop
jb
push
movsb
adc
cli
push
out
out
int
or
andl
or
cmp
jns
mov
sub
sbb
popa
add
xchg
ja
movsl
mov
imull
dec
fimuls
dec
lock
push
add
bt
bound
or
imul
adc
iret
pop
pop
roll
lods
enter
add
cmpsl
mov
fldenv
adc
fwait
dec
pop
jb
and
cmp
sbb
jmp
pop
loop
xchg
insl
cmpsl
push
or
inc
scas
out
imul
fistl
lds
inc
shl
adc
ds
lret
cmc
xor
push
adc
nop
pop
mov
dec
leave
iret
jmp
cs
push
and
nop
jne
dec
cli
push
int3
lds
shl
cmp
cmp
inc
xchg
mov
mov
fdivs
test
xchg
insl
xor
mov
adc
fistl
sbb
lret
outsb
push
sti
iret
pop
xorl
sbb
jb
push
cwtl
outsb
adcl
dec
inc
mov
test
int
mov
ss
repnz
and
das
xchg
sbb
fistps
lods
jp
call
mov
nop
imul
insb
mov
sbb
sbb
lahf
cwtl
and
vmovups
jecxz
fdivrs
jecxz
and
push
aad
mov
outsl
in
into
add
insl
stos
lcall
adc
jnp
jecxz
std
aam
add
in
std
cmp
shlb
imul
lds
vpsrld
in
clc
clc
mov
fcmove
movsb
lahf
mov
xlat
mov
lods
ret
xchg
out
ds
pushf
test
test
fistl
dec
pop
adc
lock
xchg
mov
dec
iret
xchg
xchg
and
jae
xor
sub
stos
addb
xchg
push
pop
rol
push
outsb
mov
out
lods
and
dec
adc
cld
fnsetpm(287
push
mov
cmpsb
sub
pushf
cwtl
rcl
ss
mov
cmpsl
lock
dec
xchg
adc
inc
negl
stc
inc
xchg
jmp
cs
pushf
push
mov
sub
pop
lods
dec
outsl
dec
les
out
mov
fistpll
movsl
test
lods
mov
lcall
cmp
sub
pop
mov
test
xchg
sbbl
adc
cmp
pop
std
cmp
dec
and
cmc
add
xchg
sarb
adc
test
mov
push
mov
inc
or
insl
cmc
mov
ja
adc
test
xchg
rorl
and
mov
jmp
and
cmpb
jbe
mov
mov
xor
pop
scas
sbb
lret
mov
push
mov
inc
inc
mov
dec
addr16
movsl
mov
fsts
pop
adc
or
pop
add
sub
rcrl
push
mov
leave
push
push
std
call
pop
aaa
mov
xlat
fdivr
dec
xor
into
aaa
loopne
out
push
sub
testb
cmp
pop
jae
outsb
mov
aam
lahf
xor
stos
std
scas
mov
jb
popf
or
xor
add
push
loop
push
push
xchg
mov
mov
stc
jo
add
mulb
cltd
test
rep
sub
jno
jecxz
sahf
or
sbb
jbe
ds
arpl
push
lds
popf
insb
add
test
rolb
jnp
dec
add
jno
mov
mov
xor
mov
mov
ret
mov
mov
in
adc
adc
mov
clc
mov
xchg
mov
inc
fisubrl
xlat
jno
cli
mov
and
scas
push
mov
adc
inc
stos
xor
lret
mov
push
xchg
xchg
jmp
xchg
sub
loop
mov
mov
sbb
pop
mov
lea
call
mov
pop
mov
xchg
hlt
stos
adc
lcall
popf
test
fadds
cli
sub
dec
mov
loopne
lahf
push
lcall
sub
les
pop
iret
notl
mov
dec
hlt
jno
mov
jecxz
lret
sub
mov
push
dec
or
daa
stc
mov
pop
push
xlat
mov
push
push
lret
pop
lret
and
xchg
insb
addr16
lods
push
mov
cmp
movsl
pop
sub
push
push
enter
push
dec
scas
pushf
sub
mov
mov
cmpsb
lds
fs
call
fisubl
daa
push
int
pop
or
fidivrs
aam
or
push
cltd
int3
push
or
lods
cmp
or
mov
mov
mov
xchg
sbb
mov
add
jae
jmp
cmp
popa
mov
sbb
jg
fisttpl
push
sub
cmc
push
inc
inc
inc
movsb
pop
les
mov
shrb
jecxz
call
pusha
or
cmp
fnstsw
addr16
cli
loop
dec
ss
lret
inc
sahf
mov
sbb
jo
and
orb
inc
pushf
imul
dec
loop
mov
jns
cmp
in
pop
jp
test
out
jmp
mov
fidivrl
mov
push
pop
test
xor
push
popa
dec
icebp
les
movsb
pop
xlat
push
shrl
mov
inc
mov
jle
in
mov
adc
cld
or
lds
sbb
repnz
mov
daa
mov
loopne
mov
xor
rcll
shll
adc
dec
mov
rorl
stos
sbb
enter
and
push
pop
js
sti
xchg
sub
jo
push
mov
iret
xor
sub
inc
test
movb
push
mov
nop
popa
repz
imul
jmp
loope
icebp
in
or
rolb
jmp
pop
pop
or
enter
lock
stos
xchg
cwtl
sub
ret
loopne
mov
mov
xchg
mov
addl
int
rolb
and
mov
lahf
stos
or
data16
cltd
xchg
push
bound
dec
lods
or
inc
mov
xchg
jb
adc
inc
push
dec
add
idivl
xor
fldenv
mov
test
loop
data16
out
stc
pop
cs
push
pop
adc
inc
mov
imul
rcrb
loop
dec
adc
mov
dec
sbb
fildll
inc
js
xchg
jg
push
pop
lods
arpl
or
sub
mov
and
mov
jmp
lds
pop
jg
jge
stos
jo
lahf
aam
push
aaa
insb
mov
cmp
jecxz
stos
ror
ja
int
clc
fwait
ret
cli
lret
dec
out
or
int
mov
aas
aaa
mov
mov
inc
add
pop
fwait
fwait
jbe
sti
and
mov
out
xor
fistps
jg
faddl
clc
in
xchg
scas
iret
ret
movsb
adc
fidivrl
push
jbe
pop
cmp
ljmp
mov
aam
mov
sbb
jecxz
lret
repnz
popf
iret
cld
mov
pushf
add
mov
sbb
stos
sbb
jge
xchg
stos
repnz
or
inc
mov
inc
xchg
out
lret
sbb
loopne
cmp
sar
jle
and
or
adc
ja
cmp
jo
ret
pop
sbb
cli
mov
aas
pop
shr
adc
jmp
cmp
add
lock
inc
fs
cltd
and
flds
jo
lret
xor
jmp
hlt
leave
or
and
adc
pop
sbb
and
push
xchg
fmulp
gs
xchg
xorl
pop
or
divl
pushf
fwait
cld
inc
xchg
nop
outsb
orl
cltd
cmpl
int
clc
inc
mov
adc
push
cwtl
les
inc
inc
daa
icebp
push
cmp
and
fwait
adc
and
repnz
aas
or
clc
divl
push
insl
repnz
mov
mov
insl
clc
xor
sbb
sub
ret
lods
aad
ljmp
mov
rorl
push
sbb
lret
in
mov
dec
addb
xor
pop
popf
cmp
ret
aaa
xchg
cmp
mov
pop
xor
xor
fmuls
in
daa
mov
jnp
sti
adc
cs
call
pushf
xchg
out
xchg
out
pop
sbb
jbe
movl
xlat
lods
insl
mov
or
add
jno
repnz
adc
push
mov
push
jp
sub
pop
xchg
push
sbb
push
sub
push
push
mov
fdivr
das
jae
enter
adc
xor
and
adc
in
mov
push
xchg
dec
and
sub
les
dec
lock
jl
jae
jb
test
test
push
shll
stos
jge
add
mull
xchg
arpl
jo
iret
push
jo
push
xchg
cmp
mov
icebp
sbb
dec
ret
mov
mov
scas
sub
cbtw
je
adc
push
rcrl
add
dec
sbb
mov
fadds
mov
pop
sbb
adc
sub
in
sarl
pop
cmp
push
js
xchg
scas
dec
pop
ja
push
cmpsb
std
cs
cs
shr
rcrl
mov
out
jae
pop
xchg
sub
fstpt
in
mov
mov
xchg
addr16
dec
push
mov
xchg
ljmp
and
and
mov
add
shlb
fs
pop
pop
pop
fbstp
ret
icebp
into
push
arpl
push
aad
into
pop
arpl
sar
and
clc
jg
imul
out
addr16
sbb
test
dec
inc
and
movsb
movsl
adc
and
clc
cmp
mov
dec
scas
mov
es
inc
ja
imul
push
je
cmp
stc
in
imul
xor
cmp
pop
inc
jmp
push
subb
inc
and
js
insl
out
ret
fisubl
mov
mov
repnz
push
aas
fidivrl
mov
icebp
dec
ss
jns
loopne
notl
stos
mov
pop
movsb
repnz
hlt
in
sub
idiv
into
lret
push
bound
scas
popf
aam
mov
xchg
add
repz
scas
cmc
inc
cltd
xchg
gs
dec
lahf
push
loopne
loopne
data16
dec
shr
mov
xor
push
inc
fwait
or
mov
fucomi
jb
out
adc
cmc
pop
dec
or
jp
jnp
mov
int
test
cmpsb
xchg
ret
dec
inc
push
xor
pop
and
push
dec
fcompl
hlt
addl
arpl
xchg
cmp
shrl
mov
mov
xrelease
and
inc
inc
dec
icebp
xchg
sub
cmp
les
pop
pop
sbb
pusha
sub
std
loop
imul
pushf
pushf
add
in
push
lcall
push
jbe
addr16
sub
std
sbb
mov
or
icebp
push
push
mov
or
psrlq
je
or
sub
push
inc
cmp
xor
in
fstpl
sub
cmpsl
pushl
jmp
adc
jmp
cmp
inc
pop
aad
inc
cmpsl
mov
xlat
test
shll
in
xor
xor
sbb
imul
cmp
sub
dec
mov
hlt
xorl
aam
inc
test
dec
mov
leave
mov
push
xorl
jae
jbe
loop
aaa
xlat
jg
fsubs
in
data16
mov
jbe
mov
mov
or
cmpl
sbb
xchg
sbb
mov
cmp
movsb
ficoms
repz
dec
rol
mov
jl
out
das
test
xchg
xor
shll
jp
adc
add
mov
mov
xchg
and
ret
imull
cmp
aad
sbb
sbb
mov
dec
cmp
sahf
shlb
xor
mov
mov
adc
cmp
lea
and
xlat
pop
in
add
mov
stos
test
cld
addr16
push
mov
pop
movsl
pop
pop
adc
push
stos
mov
or
ja
xchg
mov
pop
jp
lret
nop
lfs
in
or
jno
sbb
repz
ror
gs
and
imul
ljmp
dec
pop
movsl
dec
lods
sbbl
push
fidivl
sub
cmp
push
loopne
lahf
cmp
add
mov
mov
pop
ja
add
push
and
int
fdivr
lds
rolb
fcomip
jb
pusha
je
inc
xor
xor
movsl
sbb
iret
call
push
rcrb
jne
jg
rol
fisubs
mov
cli
std
and
test
call
fwait
jno
mov
mov
and
xor
inc
and
mov
repnz
push
shr
mov
push
in
js
dec
out
adc
sub
leave
mov
sub
int3
outsl
test
mov
das
push
push
xchg
pop
pop
jno
mov
js
js
mov
xlat
lret
mov
xchg
lahf
les
xchg
int
mov
inc
popa
cmp
dec
leave
dec
aam
rcl
in
jmp
test
insl
inc
iret
aaa
notb
sbb
dec
daa
shrl
in
mov
shll
inc
mul
std
pop
lahf
mov
out
fimuls
pushf
arpl
rcrl
out
outsb
push
outsb
push
xchg
jnp
cmpsb
jle
or
rolb
ret
inc
inc
push
jo
imul
in
xchg
jg
mov
dec
sub
mov
jnp
inc
movsb
mov
adc
popa
mov
rcrl
lods
mov
mov
xor
cmp
ja,pn
xchg
sub
cld
dec
inc
mov
scas
out
out
data16
ja
fdivs
push
add
xchg
shlb
ljmp
dec
ljmp
sarb
cmp
jb
lock
jae
pop
fs
out
ret
mov
xchg
pop
push
xor
add
xchg
or
loope
stos
inc
lahf
arpl
iret
addr16
je
repnz
mov
xor
jmp
pcmpeqd
enter
add
sti
push
mov
mov
mov
push
punpckhbw
or
xor
andl
add
xchg
test
sbb
sahf
lods
scas
shl
clc
mov
addr16
mov
insl
push
push
push
mov
ja
sahf
stos
stc
inc
cmp
insl
sub
fidivrl
and
push
fists
cmp
gs
jle
cpuid
adc
xchg
mov
stc
rcrl
lods
inc
hlt
scas
test
inc
pop
jo
scas
loopne
jns
shl
ret
fistpll
fwait
test
and
inc
sub
out
movsb
lods
arpl
sub
pop
lcall
es
or
les
inc
jo
cmpsl
xchg
sbb
mov
mov
lahf
lods
add
pop
imul
std
add
clc
sub
insl
lods
jbe
clc
outsl
pop
xlat
filds
test
jle
xchg
inc
lds
push
mov
adc
jb
push
lds
lret
loopne
mov
mov
cmpsb
cwtl
xlat
ljmp
mov
xchg
jecxz
jno
sarl
loop
cmp
add
rolb
mov
sahf
scas
sahf
push
jbe
jne
andl
stos
jg
pop
in
pop
xor
sar
or
pop
mov
mov
xchg
into
xor
and
or
cwtl
cld
in
and
cmc
cmp
dec
xchg
imul
scas
pusha
fidivs
inc
inc
cmpl
dec
push
andb
jbe
roll
jbe
popa
sub
mov
repz
dec
jle
test
xlat
or
lods
test
lcall
cmp
or
lds
mov
cmpsb
and
aad
xchg
or
outsb
or
ret
not
popf
idiv
mov
pop
push
lea
xchg
cmp
push
and
and
and
push
mov
lods
inc
xor
sbb
mov
cmpsl
push
repnz
divl
mov
push
in
cltd
xchg
cli
push
push
ljmp
fiaddl
lcall
sbb
js
cmp
nop
mov
loopne
jmp
xchg
call
das
push
out
mov
lcall
push
push
push
jl
enter
aas
cltd
xchg
fwait
adcb
fistpl
loope
add
rcrl
and
adc
xor
pop
rcrl
int
add
je
jl
mov
or
push
outsl
dec
cltd
cltd
jge
mov
popf
arpl
mov
jne
lea
xor
pop
jg
sub
cmp
jae,pt
sbb
in
repnz
xor
addr16
fwait
xor
cmp
or
mov
fistl
mov
mov
inc
mov
rorl
mov
xorl
sahf
pop
fists
iret
pop
shll
arpl
icebp
jbe
scas
mov
jl
test
loop
rcrb
xchg
mov
jle
popa
cmp
popa
dec
cltd
loop
and
xchg
pop
imul
insl
scas
mov
mov
mov
sbb
sbb
sbb
dec
xchg
inc
adc
test
fs
mov
addl
lea
scas
scas
enter
dec
jo
or
push
in
fcoms
insl
xchg
orb
adc
cltd
ret
xchg
jg
scas
dec
sub
mov
and
sbb
outsl
and
enter
push
and
and
add
imul
mov
mov
js
xchg
outsl
cmpsl
mov
cmp
mov
jecxz
data16
sbb
call
aam
or
fwait
lock
sbb
add
mov
nop
popa
inc
cli
push
test
scas
jb
pushf
mov
orl
mov
out
xor
data16
inc
and
push
jg
and
je
sbbb
sub
test
push
insl
pop
mov
pop
lds
sbb
shl
add
xchg
mov
push
lret
jecxz
push
ret
insl
loopne
pop
cmp
pushf
test
aam
mov
add
js
cmp
cli
shrb
cmp
add
shl
pop
scas
fisubrl
nop
dec
fiadds
out
xor
in
push
sbb
sbb
mov
cmpsb
nop
shrb
inc
add
loop
movsb
lods
mov
xchg
ficoml
or
cmpsl
mov
or
jae
test
adc
sub
hlt
dec
mov
sub
imul
mov
jb
xor
add
adc
mov
es
shll
mov
inc
sbb
js
inc
cmp
cwtl
fwait
push
adc
mov
mov
imul
xchg
stc
loopne
sub
inc
xorl
mov
out
mov
sti
lock
cmpsl
das
jo
jmp
test
scas
in
adc
mov
lock
iret
push
out
xor
in
mov
sbb
faddl
push
pop
mov
mov
cmp
sbb
pop
leave
pop
xor
hlt
daa
in
rcr
mov
shl
or
mov
xchg
scas
pop
jne
ss
or
out
mov
movsl
mov
inc
or
dec
add
fs
in
shll
out
add
xchg
xchg
mov
xor
fs
push
into
mov
lock
pushf
pushf
dec
xor
xchg
xor
call
mov
xchg
inc
ss
fldt
jne
outsb
add
mov
and
dec
sarl
sbb
push
int3
pushw
cld
cmc
fadd
icebp
pop
imulb
pop
pop
dec
rclb
rcl
mov
arpl
mov
lods
push
sub
stc
fucom
iret
int3
mov
mov
fcomps
mov
cmpsb
mov
dec
leave
in
inc
dec
mov
fadds
out
subb
loope
daa
mov
xchg
ss
lret
mov
inc
bound
jmp
scas
xchg
or
or
push
cmp
lcall
cmp
xchg
push
pop
cmp
inc
mov
mov
mov
inc
xor
xchg
jp
call
fdivrl
sbb
sbb
pop
pop
sub
out
shlb
je
into
jo
inc
popf
clc
jecxz
repz
sahf
jne
mov
dec
push
inc
icebp
lea
scas
jno
sub
aaa
add
sbbb
test
stos
shlb
insb
aas
sbb
andb
pop
mov
lods
xor
jb
in
add
mov
sarl
dec
sub
cmp
ret
orb
jl
hlt
inc
lahf
cmp
test
jo
neg
fnstcw
jl
dec
fstl
lods
test
pop
sbb
jo
loop
jmp
dec
add
pushf
pop
imul
in
push
jg
aam
cmp
mov
loop
inc
cmc
dec
and
pop
xor
sbb
or
adc
mov
arpl
jge
lret
addr16
xor
pushf
inc
inc
icebp
mov
inc
mov
sub
mov
fdivs
adc
dec
mov
das
cld
dec
pop
lcall
aad
cmpsb
shlb
icebp
hlt
push
pop
adc
loope
int3
ret
mov
jno
or
int
lds
fcmovu
pop
test
leave
scas
and
insl
mov
inc
push
pop
mov
das
jne
das
sub
mov
sub
push
in
out
push
xchg
imul
xchg
adc
xor
stos
mov
leave
or
lds
xchg
sub
xchg
imull
outsl
pop
mov
jo
int3
xor
repnz
cld
sahf
in
mov
and
jae
push
mov
cmp
leave
push
cmp
test
jg
ds
movsb
out
adc
or
insl
adc
sbb
inc
and
les
xor
loop
jnp
and
std
stc
or
pushf
stc
or
adc
or
pop
fwait
sub
push
add
imul
add
or
out
sub
push
stc
pop
sub
push
dec
test
into
mov
sti
stos
iret
sbb
push
push
dec
mov
adc
clc
jle
xlat
xchg
push
jo
xor
pop
sub
fwait
sahf
mov
pop
mov
ja
pop
in
int
std
or
push
scas
das
aas
arpl
pusha
int
xor
imul
filds
rclb
pop
stos
scas
loope
jne
shlb
adc
push
and
pushf
leave
les
sbb
decb
fs
or
mov
data16
or
and
jg
daa
call
pop
dec
mov
dec
push
imul
arpl
rorl
mov
xchg
adc
push
push
aas
jno
mov
loopne
addr16
std
xor
cltd
and
pushf
popf
mov
sub
dec
lea
ds
mov
mov
fs
out
push
push
fmul
adc
sbb
jge
mov
test
cmp
pop
hlt
dec
xchg
loopne
out
pop
xchg
add
pop
daa
mov
in
cmp
lods
cltd
xor
mov
xchg
call
stos
dec
sbbb
cmp
fsts
mov
std
adc
pop
dec
sub
stos
incl
jg
or
fs
shl
push
jne
jns
loope
addb
jl
adcb
mov
leave
ljmp
leave
pop
shll
adc
push
cmp
shr
adc
dec
in
pop
iret
cmp
inc
adc
jge
inc
jl
sbb
ror
int3
dec
jmp
xchg
mov
mov
je
adc
leave
and
mov
jp
xor
mov
and
and
out
gs
mov
lds
sub
dec
loope
iret
clc
movsl
ds
xor
pop
out
aad
dec
iret
inc
jmp
imulb
fs
pusha
or
mov
jbe
lock
and
ret
sahf
inc
xchg
dec
mov
pop
cmp
push
mov
sub
mov
test
lret
add
ss
pop
sti
pop
popf
ja
adc
add
test
test
cwtl
mov
jbe
cmc
or
cmpsb
or
icebp
scas
mov
mov
in
stc
imul
cmp
je
inc
push
mov
cmp
xor
mov
mov
push
cmp
aas
hlt
arpl
loope
mov
inc
lea
in
out
push
hlt
lcall
pusha
test
loopne
jp
out
add
popf
shrl
aas
fcompl
jno
adc
dec
arpl
sub
es
pop
push
insl
xor
imul
adc
jbe
inc
fcmovnb
enter
cmp
ja
push
jb
push
sub
shlb
testb
pop
jns
int3
nop
int
and
or
jnp
cwtl
nop
imul
das
ret
mov
push
cmp
popa
in
in
dec
inc
mov
jb
mov
stos
jns
sub
dec
or
bswap
dec
popa
and
cli
mov
mov
mov
adc
push
pop
out
cmp
cltd
xchg
fbld
push
jmp
xor
xchg
sbb
sbb
sub
and
mov
int3
dec
lret
sar
mov
rclb
test
sub
data16
out
xchg
orb
loop
and
and
ror
cwtl
push
rcll
outsl
mov
mov
xchg
dec
shr
mov
into
std
out
daa
insb
jno
test
jo
xor
cmpsb
je
mov
std
push
test
lahf
leave
xchg
push
jbe
push
subb
jg
or
inc
xchg
stc
cli
push
test
nop
int
adc
jmp
add
js
push
jecxz
xchg
insl
mul
pop
outsb
jecxz
pop
add
mul
sub
adc
mov
sti
mov
xchg
mov
push
aad
add
in
adc
mov
out
sub
daa
push
sbb
pop
cmp
fstpl
mov
sub
fildll
jecxz
or
movsl
mov
jg
lret
jbe
xlat
pop
stos
cmpsl
cmpsl
xor
lods
add
lret
fsubrl
cwtl
dec
sbb
lock
xor
adc
mov
das
cs
cld
push
mov
or
xchg
adc
insb
insl
push
add
jb
je
jae
dec
mov
arpl
and
mov
sbb
pop
lahf
cmp
cmp
pop
aas
mov
or
js
dec
cmc
mov
stc
cmc
inc
or
push
mov
and
aam
mov
orb
xor
or
jne
nop
mov
enter
out
xor
nop
adc
push
in
jno
loopne
lret
inc
pop
div
push
or
add
jne
or
add
inc
jbe
jns
push
push
les
clc
data16
shll
mov
mov
adc
sbb
or
lahf
mov
cltd
xchg
mov
mov
jp
dec
test
push
repnz
push
movsl
loope
sbb
imul
xor
jle
inc
mov
fwait
push
xchg
xchg
push
cmp
dec
xchg
jnp
jnp
inc
imul
mov
sub
add
xor
lcallw
xor
lock
ds
jb
pop
jo
in
push
jae
addr16
inc
dec
ja
xchg
in
loop
or
std
push
xchg
push
fmuls
mov
popf
add
push
push
jno
and
dec
ret
pop
adcb
les
lea
jne
out
push
sbb
add
push
jge
sub
xchg
sbb
lods
rcll
ror
lahf
sub
lcall
into
fimuls
std
insl
and
dec
mov
dec
sub
or
cld
xchg
adc
sub
push
push
daa
mov
aaa
xchg
sbb
outsl
lods
outsb
jae
mov
rcrl
mov
sub
dec
hlt
in
cmp
arpl
sub
cmc
add
jge
mov
jecxz
mov
dec
sub
js
movl
sbb
xchg
int3
cmp
testl
lcall
xor
mov
xchg
and
jb
stos
inc
xorb
bound
and
push
stos
add
imul
filds
call
dec
pop
pop
jmp
aam
std
mov
lcall
sbb
jecxz
in
ficoml
dec
lea
pop
push
ss
add
notb
repz
stos
mov
inc
test
jne
dec
mov
xor
fs
or
sbb
inc
xchg
mov
out
xchg
shl
dec
cmp
xlat
push
cmpb
negl
jmp
rcrl
push
xchg
pop
fwait
rolb
push
cmc
scas
jg
dec
sbb
cld
test
inc
gs
adc
addb
mov
inc
mov
cmp
lods
aam
sub
in
sbb
sub
and
cmp
jb
lods
test
out
mov
mov
cmp
mov
stos
cmpsl
xor
call
les
lahf
cld
cmp
movsl
dec
rorl
and
cmp
pop
int3
adc
xor
lds
addr16
xor
pushl
add
xor
movsb
bound
inc
sbb
xchg
insl
dec
or
enter
push
rcll
fisubl
push
aas
mov
mov
xchg
adc
jbe
divl
adc
insb
lahf
xor
mov
sarb
push
or
mov
movsb
jle
adc
mov
insl
mov
sbb
in
mov
xorb
movsl
inc
mov
ret
push
cwtl
add
andb
pop
test
or
sbb
pop
adc
addb
xchg
sarb
jbe
mov
rcll
xchg
push
add
shlb
xchg
fdivrs
and
xor
and
gs
push
jecxz
pop
popf
mov
xor
xor
leave
mov
das
out
pop
pusha
cmpsb
sub
enter
xor
ljmp
aas
add
push
jp
inc
ds
in
imul
je
mov
push
push
inc
sub
mov
dec
inc
jle
iret
aaa
cmpsb
pop
pop
mov
or
notl
xchg
cmp
ds
enter
lea
aam
ds
inc
movsl
je
lock
int
iret
imull
scas
inc
aas
add
mov
pop
nop
repz
pop
out
or
inc
inc
sub
push
dec
sub
or
adc
movsl
xchg
mov
cli
cmp
push
cltd
cmpb
rclb
xchg
mov
mov
gs
dec
adc
and
add
sarb
pop
fmul
ja
call
pop
xchg
sahf
or
add
jo
enter
jl
leave
and
push
and
js
cmp
shlb
and
xor
dec
xchg
pop
inc
aam
dec
and
rorb
push
jb
xor
nop
sub
fisubrs
stos
int3
icebp
jnp
mov
xor
adc
dec
pusha
add
jle
ljmp
adc
inc
lret
sbb
lea
push
jp
xchg
in
sbb
cltd
or
mov
out
sub
arpl
lea
adc
jo
mov
cs
sbbl
pop
cltd
dec
mov
idivb
and
jecxz
jbe
test
jns
jle
or
xor
sbb
popa
xchg
cs
rcrl
cmp
cld
pop
push
or
movsl
xchg
xor
push
shll
mov
lret
mov
jmp
mov
adc
mov
cli
dec
xor
adc
leave
cmp
insl
mov
mov
lock
sub
cld
test
jo
sub
ret
mov
push
gs
repz
push
jl
scas
mov
or
fcmovnbe
pop
jg
sbb
sti
lea
push
sarl
nop
negl
mov
in
cmp
icebp
xchg
sahf
test
xor
or
fstpl
outsb
pop
data16
dec
loope
lea
or
lcall
cmp
popa
loope
push
mov
mov
cmpsl
mov
xchg
bound
xor
mov
xchg
mov
inc
mov
mov
mov
in
ja
sub
je
inc
shl
sub
mov
mov
cltd
outsl
popf
adc
push
incb
push
fbld
jp
jne
push
clc
cmpsb
stos
dec
push
movsb
push
outsb
lcall
add
and
lret
test
inc
icebp
and
test
lock
mov
ds
adcb
bound
stos
aaa
xchg
and
cmpsb
stos
pop
data16
test
adcb
fdivrp
mov
lock
push
add
adc
popa
jnp
fists
in
rcrb
mull
sub
pop
lods
cli
enter
mov
out
mov
pop
add
sub
es
adc
outsl
lea
loopne
insl
ds
int
cmp
push
test
stos
dec
or
xor
lea
lods
xorb
bound
xchg
je
das
and
icebp
push
out
pop
xchg
out
cmp
xor
or
add
jmp
cmp
movsb
jo
xor
add
rcrb
cltd
test
xor
xchg
mov
scas
call
cmpsl
insl
movsl
mov
stc
cli
not
adc
sahf
imul
sbb
and
inc
movb
sbb
fwait
pop
xchg
xchg
add
or
repz
inc
and
into
and
push
shrb
or
lds
arpl
ret
mov
xchg
push
xchg
xchg
sub
jge
hlt
sti
mov
jp
aaa
outsl
mov
dec
rcll
pushf
int3
sbb
inc
and
pusha
and
dec
stc
clc
pushf
ficoms
test
push
icebp
add
lret
ss
dec
mov
loopne
and
mov
shll
icebp
lret
ret
rol
shll
cmp
dec
imul
mov
rorb
repz
or
fildl
jno
sub
push
and
push
sub
xor
notb
je
testb
sbb
lds
sbb
addr16
arpl
jp
or
fcoml
and
mov
lahf
mov
mov
rorl
xor
jecxz
stc
inc
add
jno
pop
and
imul
sbb
cltd
movaps
jo
and
adc
xor
sti
icebp
mov
mov
ss
cltd
push
fwait
shl
mov
xchg
fxtract
dec
sub
and
mov
insl
cmp
aas
imul
inc
sbb
jo
in
and
pusha
mov
fnsave
into
dec
pop
cmp
or
sbb
pop
dec
jne
pushf
mov
jae
cmp
outsb
aam
stos
js
vpsllw
cmpsl
push
jge
repnz
lods
sub
cmp
dec
or
cld
add
sub
add
stos
movl
jl
xor
outsl
jno
push
or
dec
mov
inc
mov
pop
daa
icebp
inc
cmp
lods
imul
xchg
pop
adc
sbb
scas
sub
or
xchg
das
imul
xor
js
xchg
test
inc
daa
pop
mov
in
sub
mov
aam
xchg
lret
push
imul
vmovsldup
push
mov
xlat
aas
in
in
sbb
xchg
jge
nop
test
das
in
es
mov
jecxz
push
xchg
sbb
call
sbb
aam
js
pop
aad
xchg
int
ds
mov
enter
lea
adc
imul
sub
mov
dec
bound
lds
mov
sbb
ror
push
xchg
jne
lret
mov
pop
daa
inc
adc
aad
leave
sahf
and
pushf
je
cltd
mov
sbb
mov
sbb
pop
outsl
ljmp
test
fsts
inc
clc
and
outsl
aas
or
xchg
jge
inc
outsb
xor
pop
xchg
mov
rcrb
inc
int3
inc
rcr
cmp
pusha
ficoml
out
pop
xchg
xchg
inc
scas
cmp
mov
ret
xchg
sbb
lods
cmpsb
loop
lcall
jge
add
inc
or
xchg
push
mov
lock
jb
mov
lret
test
lcall
push
mov
mov
rcll
rcll
jg
inc
shll
sub
js
mov
inc
cltd
xchg
push
xor
cld
rcrl
sub
out
fsubs
pop
sahf
inc
sahf
or
and
xchg
gs
xchg
push
sbb
pusha
mov
mov
in
popa
push
cmp
inc
and
sahf
or
in
fadds
mov
jne
xchg
jmp
pop
imul
data16
test
sahf
jle
shrb
jg
mov
lods
test
pop
inc
int
adc
mov
setb
or
pop
and
inc
add
lret
dec
fs
sub
aam
jne
sub
dec
scas
dec
xchg
xchg
xor
scas
and
cmp
or
add
dec
and
popf
cmp
push
mov
iret
es
jg
imul
lea
cmp
mov
inc
cmp
add
or
xlat
mov
cmpsb
fscale
dec
xchg
mov
sbb
hlt
pop
scas
dec
aad
push
pop
jl
testl
lods
aam
call
cmc
stos
addr16
jbe
je
cltd
sub
mov
sti
mov
pop
inc
jbe
int3
ljmp
mov
addr16
jge
sbb
xor
xchg
and
aas
sbb
mov
ret
outsb
sbb
push
or
adc
rorl
xchg
dec
sub
int3
fmull
les
inc
sti
mov
xor
movsb
aad
or
pop
andl
adc
inc
aam
sahf
and
xchg
ljmp
in
mov
mov
jle
mov
push
and
adc
lock
jbe
stos
push
or
jg
push
in
mov
push
rorb
lret
and
jp
test
mov
mov
cmp
xor
sub
lds
call
adc
hlt
add
aam
jmp
lcall
inc
adc
sbb
or
mov
movl
notl
xchg
adc
jg
mov
lock
inc
mov
add
ret
cltd
sub
incb
sbb
pop
je
pop
pop
xchg
loope
aaa
out
and
dec
jle
jne
fs
xor
cmpl
stos
and
lock
dec
push
and
fstpt
sub
push
lahf
dec
ds
lea
xchg
mov
ja
sti
mov
rol
dec
xlat
adc
xor
xchg
gs
lods
dec
mov
mov
jp
xchg
test
in
rcrb
cld
fs
or
xchg
jmp
hlt
jle
sub
imul
sbb
dec
aaa
jne
outsb
popf
jecxz
ficompl
push
je
cmc
les
adc
vperm2i128
sub
scas
arpl
stos
push
jb
fwait
faddl
mov
jp
addr16
push
ja
pop
hlt
adc
jecxz
or
cltd
pop
jle
rolb
push
daa
dec
dec
lea
xchg
stc
fs
clc
lret
jo
push
and
cmp
fst
in
es
inc
push
loope
cld
sbb
lcall
repnz
or
jne
enter
inc
add
or
sub
adc
fbld
xchg
in
divb
or
lcall
jmp
dec
or
fsin
ss
aam
sub
arpl
sub
enter
leave
or
les
xor
push
pop
test
test
cmp
sub
lods
hlt
ja
lret
pop
mov
sub
jno
out
je
loop
pop
mov
xchg
sub
xchg
loope
or
scas
xchg
sarl
clc
inc
jb
mov
push
pop
and
in
and
and
xchg
mov
pop
push
lds
pushf
jge
fistl
daa
jb
mov
push
push
out
sbb
insb
push
sub
out
sub
rcrb
popf
xchg
sahf
popa
insl
lret
xor
push
add
add
mov
xchg
sti
pop
mov
jb
icebp
mov
or
in
and
call
sub
outsb
xchg
stc
addr16
push
jp
mov
mov
adc
mov
pop
icebp
outsb
jge
enter
cmp
push
xchg
jne
dec
lea
mov
shll
ret
mov
jne
and
loope
mov
sub
cmpsl
out
sub
arpl
dec
lret
outsb
ss
inc
add
xor
test
dec
cmp
roll
add
dec
arpl
lret
mov
add
std
out
sbb
fsubrl
rcrl
inc
push
adc
je
mov
in
sarb
outsb
mov
adc
push
jl
mov
inc
shrl
jp
addr16
lds
aaa
daa
dec
ljmp
cmpsl
mov
pop
or
loope
pusha
movsl
pusha
cmpsb
dec
or
inc
ret
sub
cli
stc
in
lock
sbb
and
mov
push
mov
clc
adc
popf
test
repz
adc
sub
xchg
xchg
and
jo
xlat
sub
xchg
arpl
mov
call
cltd
insb
shr
in
xchg
mov
pop
jne
dec
add
pop
pop
test
int
addr16
arpl
stos
das
dec
lcall
mov
push
sbb
xor
les
arpl
out
loopne
sub
jmp
lods
dec
mov
adc
lea
mov
arpl
loop
lods
movsb
sub
mov
ss
jbe
xchg
addl
insl
or
int
cmpsl
imul
pop
pop
cs
lods
jmp
mov
nop
cmc
jge
dec
fucomi
stc
ret
mov
push
lea
and
sti
cmp
pusha
jno
xor
pop
push
lods
fwait
loope
and
mov
add
jge
ss
cmpsb
pop
inc
add
jns
shlb
mov
dec
ljmp
nop
cmc
out
aaa
mov
mov
adc
loope
lods
or
mov
mov
cmp
pusha
mov
sub
jns
jae
adc
inc
notb
cmc
inc
movsb
leave
or
inc
adcl
movsb
nop
js
lods
xlat
add
mov
shll
or
push
xchg
shlb
fsubr
cmp
add
cmpsb
popf
jae
mov
sbb
xlat
pop
sti
pop
dec
inc
addb
and
and
loope
and
dec
adc
xchg
and
mov
jle
jecxz
mov
sub
cmp
sbb
push
mov
cmpsb
decb
mov
dec
inc
mov
push
sbbb
dec
mov
sarl
ss
pop
dec
enter
push
mov
inc
repnz
inc
xlat
stc
and
adc
popf
dec
or
push
dec
sti
cmc
mov
ljmp
iret
mov
ret
and
out
imul
mov
daa
fstl
push
dec
fbld
jo
adc
ljmp
pop
xchg
xor
lahf
fsubr
in
leave
sub
fdivl
push
leave
mov
insl
mov
sbb
sbb
inc
nop
call
cmpsl
in
jge
inc
mov
push
mov
mov
js
jecxz
or
fxch
daa
cs
push
xchg
inc
test
sub
dec
jmp
je
push
mov
mov
mov
dec
add
call
in
add
ret
xor
cmpb
fisttpll
pusha
inc
insb
mov
outsb
dec
stc
fnsave
aas
sbb
cwtl
std
mov
xlat
idivb
cmp
cmp
mov
dec
pop
xchg
jb
sub
jge
jge
jno
scas
pop
pop
xor
inc
jno
mov
stos
out
repnz
das
and
xor
mov
jae
movsl
iret
fmulp
xchg
out
out
push
lods
aad
fmul
jle
jae
mov
popl
sbb
pminub
loop
add
push
pop
dec
mov
mov
xor
loope
out
cmp
hlt
sub
jae
sbb
dec
sub
scas
dec
inc
push
and
stc
sub
and
js
mov
mov
hlt
repz
or
loop
pop
movsb
ss
mov
or
xor
hlt
sub
and
roll
call
pop
xchg
lcall
mov
lea
pusha
and
adc
xor
xor
mov
lods
xlat
jecxz
mov
shrb
pop
popf
sub
jae
xor
and
pop
lcall
mov
sbb
push
jp
mov
iret
test
add
jmp
and
jns
mov
es
mov
mov
mov
push
mov
ss
mov
jbe
mov
sbb
adc
push
and
jg
or
sbb
mov
ret
cmp
insb
xorb
in
cmp
dec
mov
stos
push
neg
jl
cmp
mov
dec
cltd
xor
mov
fnstsw
xlat
and
mov
fsts
aaa
xchg
pop
rcl
fcomps
loopne
je
add
out
jne
rorl
push
and
push
bound
popa
lods
aad
pop
sub
incl
sti
mov
inc
jnp
sub
add
pop
lcall
add
and
cli
testl
lret
sahf
sahf
xchg
in
pop
cmp
into
addr16
leave
mov
ljmp
pop
push
jno
call
mov
jmp
cmp
jmp
mov
mov
jne
or
jno
call
leave
xlat
xchg
jmp
mov
mov
cmp
jp
subb
arpl
cmp
add
aad
ret
stos
loop
lret
add
ret
xlat
add
add
aad
pushf
cmp
sub
mov
mov
xchg
lret
lea
setl
test
add
mov
add
mov
faddp
lahf
andb
pop
xor
shll
mov
insl
cmc
jg
mov
push
xchg
cld
jne
inc
cmpsb
scas
inc
dec
test
push
adc
inc
push
mov
int
repnz
inc
add
or
test
push
xor
pop
push
sbb
icebp
ficoms
or
movsb
jge
xchg
xchg
repnz
subb
mov
xchg
mov
idivl
pop
xchg
stc
mov
mov
ss
inc
sbb
outsl
sbb
jne
pusha
jmp
loop
clc
jecxz
hlt
xchg
outsl
call
ja
adc
and
inc
out
sahf
adc
cmpsb
std
movsl
push
jae
push
dec
dec
inc
mov
out
mulb
outsb
out
or
out
xchg
sub
adc
inc
push
inc
imul
mov
in
push
cmp
cli
sub
nop
xchg
imulb
xor
xchg
aad
xor
adc
lods
scas
push
jns
cmpsl
and
jb
xor
hlt
outsl
sbb
adc
or
leave
add
mov
lea
mov
dec
xor
pop
pop
jge
xchg
scas
ret
adc
or
cld
jle
repnz
and
jbe
lret
adc
cmc
inc
jle
iret
mov
and
stos
movsb
jne
or
test
or
hlt
jp
subl
jge
dec
lret
dec
ds
into
xor
add
adc
dec
out
movsl
loope
das
sarl
sbb
jno
dec
pop
xchg
jb
cmp
lea
pop
sbb
mov
stos
lods
push
addr16
aas
sbb
enter
xor
mov
adc
xchg
mov
andl
shl
ja
lret
xor
ds
or
idivb
insb
cmp
add
inc
cmp
inc
or
jl
mov
xchg
cmp
aam
jle
mov
push
xchg
mov
xchg
cmpsl
leave
daa
lea
fcomps
bound
icebp
sbb
scas
xchg
mov
test
pushf
fwait
and
cwtl
inc
jb
in
stos
arpl
addr16
mov
aam
iret
pop
incb
push
fdiv
cmpsb
stos
mov
mov
xchg
movsl
cltd
sahf
adcb
and
es
stos
stc
xchg
add
stc
sbb
lds
aad
testl
push
push
dec
sub
pop
dec
scas
push
pop
psrlq
jb
or
dec
pop
fsubrs
out
push
aaa
or
gs
and
popf
pop
xor
call
and
leave
mov
inc
int
jbe
sar
and
xor
or
lret
je
call
test
rol
add
outsl
pop
test
sti
data16
test
je
rclb
push
out
jne
repz
fld
mov
inc
iret
cmp
sarb
inc
lahf
out
fwait
sbb
mov
hlt
inc
xchg
mov
dec
sti
test
inc
fstpt
scas
dec
or
fdivrp
cwtl
pop
push
mov
push
test
ss
ret
xchg
jo
push
test
pop
int3
popa
scas
mov
jg
fsubrp
pop
mov
test
mov
scas
push
mov
jbe
cltd
pop
and
pusha
pop
pop
or
jp
cmpl
rcrl
inc
sbb
fstl
out
adc
fistpl
and
jns
fisubl
inc
jne
jno
and
pop
nop
jb
push
pop
jo
scas
xlat
fld
scas
insl
repnz
xchg
dec
movsb
sub
or
jmp
test
cmpsl
jae
xchg
dec
pop
int
sti
sbb
xchg
sarl
and
movsl
xor
jg
movsb
cld
mov
fsubrl
dec
push
dec
fiadds
in
push
cmp
xchg
sub
cmc
out
into
mov
into
inc
pop
je
jmp
cmp
mov
and
and
cmp
adc
aas
lea
mov
in
scas
push
cmc
repnz
mov
mov
rcrb
push
inc
cwtl
cmpsb
fldenv
xor
stc
jo
mov
out
fadd
gs
push
aas
pop
inc
add
lcall
loopne
into
push
xor
dec
hlt
inc
shll
inc
fsts
xor
dec
stos
es
mov
xor
pop
in
insb
mov
inc
lock
das
mov
sub
add
xlat
dec
call
repnz
cmp
pop
xor
les
sub
into
push
arpl
pop
std
mov
and
nop
cmp
push
mov
jge
lret
sahf
adc
ja
sbb
xor
sub
fadd
jns
sub
loopne
add
stos
push
popf
enter
int3
jle
mov
lock
sbb
ss
add
das
pop
push
lret
jb
out
scas
mov
out
dec
mov
aam
sbb
out
cltd
jl
and
out
pop
pop
fldl
sti
mov
cmc
lret
inc
xchg
and
push
add
out
mov
insb
in
pop
pop
jb
aad
scas
scas
ja
sub
insb
aas
jo
leave
pop
js
and
shrl
roll
ror
push
shl
jbe
mov
inc
nop
xor
addl
das
lea
repz
das
mov
je
arpl
mov
sbb
mov
cmpsb
addr16
test
aad
pop
ss
push
inc
es
mov
sub
add
ret
test
cmpsb
push
adc
or
aaa
inc
jno
pop
je
mov
xchg
mov
adc
ds
scas
testb
clc
jle
in
mov
mov
sahf
pop
in
ret
mov
loopne
popf
lods
cwtl
mov
push
xchg
loopne
jle
cmc
jb
sbb
sahf
dec
les
jge
jno
inc
or
mov
outsb
mov
push
xchg
add
push
push
dec
outsb
arpl
loopne
xchg
sbbl
int
sti
data16
rorl
lods
dec
and
outsl
jae
add
repnz
lds
jecxz
xor
inc
lods
jnp
mov
arpl
dec
bound
out
push
fldlg2
push
push
pop
add
data16
push
pushf
and
jmp
sub
mov
scas
cwtl
xchg
mov
xchg
cmp
jns
cmp
mov
push
loop
jbe
rcrb
je
cmp
fs
or
jmp
dec
or
cmpsl
mov
div
xchg
stos
fwait
lods
stos
clc
xchg
js
leave
je
jg
sti
popf
iret
test
pop
loope
sbb
cltd
push
fistl
mov
xchg
fwait
sub
mov
divb
and
adc
jne
push
and
jne
hlt
arpl
aas
insb
mov
inc
daa
das
mov
push
adc
clc
cmpsl
adc
adc
test
cmp
jle
lds
jmp
xchg
push
mov
outsb
bswap
iret
adc
cmp
push
pusha
insl
dec
jno
adc
xchg
xor
jno
pushl
push
xchg
inc
dec
jp
fildll
xor
mov
jns
dec
in
push
jg
inc
jle
aam
xlat
cltd
dec
adc
cmp
fiadds
scas
inc
imul
imul
pop
aaa
test
bswap
sub
aaa
cltd
movsl
fsts
mov
jno
rolb
push
mov
pop
ret
lcall
popf
push
testl
or
mov
call
cmc
dec
xor
ret
adc
mov
lods
add
popf
in
pop
cltd
adc
or
faddp
xor
sbbl
or
pop
add
repz
sbb
push
push
vrcpps
bnd
adc
pop
les
movsb
mov
xorb
cmp
adc
lock
cmpsb
mov
inc
jge
movsb
mov
cmp
movsl
out
mov
mov
inc
lock
cmp
dec
in
dec
daa
popa
pop
std
inc
sub
fstpl
mov
jg
xchg
adc
xchg
bnd
cli
inc
sbb
popa
and
popf
nop
adc
and
out
pop
fs
mov
jbe
popf
sbb
int3
test
inc
push
or
adcb
sarl
jp
dec
in
dec
cmp
out
lcall
mov
mov
add
sbb
pop
cli
arpl
aaa
into
enter
xchg
test
sub
test
mulb
ljmp
jbe
outsl
repz
xchg
icebp
nop
notb
jmp
xor
nop
pop
push
dec
cli
dec
out
gs
int3
push
jb
cld
xchg
fwait
mov
test
mov
cmp
jae
fcomps
jp
loope
push
mov
or
in
arpl
mov
add
fbstp
insb
aas
int
push
loopne
and
fbstp
je
jns
scas
andl
bound
xor
pop
ja
pop
lret
scas
jg
sub
inc
in
test
xchg
out
add
punpcklbw
cld
cli
jge
enter
xchg
mov
stos
test
jns
ss
lret
xor
inc
mov
std
stos
lret
sub
push
aad
adcl
popf
mov
arpl
mov
jmp
mov
aas
jno
or
pop
push
loope
out
push
xchg
push
cmp
fucomi
jb
cli
and
cmp
nop
and
in
cmp
mov
adc
mov
jge
jl
out
aas
cmpsb
fistps
sbb
push
sub
mov
xchg
jb
stos
cltd
orl
aam
push
mov
popf
loopne
or
aaa
jle
sbb
mov
add
fwait
repnz
test
loope
dec
fdivl
or
imul
repz
mov
xorl
dec
pop
jp
mov
add
and
mov
and
pusha
xor
mov
rcl
xchg
lret
ds
add
andl
sub
les
stos
sub
sbb
mov
leave
sbb
push
movsl
mov
or
mov
icebp
and
jns
loope
sub
push
loopne
xchg
push
and
or
push
sbb
xchg
xchg
sbb
pop
lcall
subl
sbb
jno
int3
xchg
fsubrl
xchg
out
divb
push
sub
dec
mov
jl
imul
xor
add
xchg
adc
push
scas
mov
fldt
test
xor
int3
xchg
scas
in
ss
mov
sbb
aaa
in
lods
das
daa
pop
test
adc
in
and
lods
imul
mov
aam
and
pop
xor
mov
dec
xor
ret
popf
loop
int
add
sbb
insb
xor
mov
fistl
shlb
mov
test
insl
push
and
adcl
cmp
xchg
sbb
popa
pop
imul
sbb
lret
xor
push
cmc
push
mov
out
test
dec
add
fcoms
ficomps
imul
cmc
and
mov
loop
sub
jecxz
cmp
sahf
enter
mov
loopne
mov
dec
mov
pusha
mov
xchg
mov
ret
pusha
xchg
lds
ss
cmp
and
daa
add
xor
or
and
jae
sbb
loopne
sub
fdiv
inc
jns
into
shlb
cwtl
mov
jg
xchg
js
cmp
cmc
mov
std
xor
sahf
mov
dec
add
inc
push
cmp
imul
test
movsb
add
mov
inc
leave
adc
push
test
mov
mov
sbb
mov
mov
addr16
sub
test
movd
repz
aad
mov
hlt
fs
je
mov
test
fnstsw
icebp
mov
mov
mov
repnz
mov
repnz
push
xchg
sbb
push
mov
xor
mov
ja
jne
mov
lahf
rcrb
test
or
and
add
aaa
mov
cmp
adc
and
pusha
pusha
pop
leave
lods
pop
mov
or
inc
clc
xor
jae
cs
sub
mov
rcrl
les
cmp
ret
mov
aam
ss
xor
dec
ficoms
fists
ljmp
lcall
nop
xchg
popf
rclb
pop
and
lea
subb
jnp
out
stos
jge
dec
pop
rep
and
std
cmpsl
mov
lret
sub
sahf
testl
mov
popf
push
outsb
sub
repnz
pop
xchg
shll
jp
rcll
push
adc
arpl
xchg
flds
xor
mov
pop
jb
shrb
mov
mov
push
pusha
je
adc
andb
int
orl
jns
nop
out
icebp
lcall
xchg
loopne
ds
mov
imul
cmp
ljmp
test
or
sub
jge
push
mov
jb
sarl
flds
mov
movsl
inc
pushf
arpl
xlat
mov
repz
inc
lahf
push
cwtl
mov
sbb
inc
daa
loop
jne
pop
arpl
push
or
push
push
push
cmp
aad
data16
out
sub
rorl
leave
pop
test
shrl
loope
pop
xchg
es
or
and
or
fs
movsl
cmp
sahf
sbb
lods
jp
shll
std
push
call
jmp
sar
jne
push
xor
movsl
ds
scas
in
daa
or
lods
cmp
sbb
lahf
lret
dec
or
mov
movsb
scas
test
cld
sbb
add
fs
icebp
jne
test
jl
movsb
dec
in
jb
pop
push
rcrb
xchg
pop
sbb
test
test
sti
or
dec
in
add
jp
clc
push
sbb
xchg
mov
cmp
scas
pop
iret
mov
and
cmpsl
push
les
adc
and
cwtl
inc
repz
pop
es
sbb
adc
dec
scas
in
and
mulb
sub
pop
sbb
mov
rol
adc
xor
imul
cld
sbb
mov
fldl
cmc
mov
frstor
les
pushf
adc
iret
mov
sti
or
nop
pop
pop
rclb
test
cmp
test
ljmp
shll
and
test
xchg
dec
adc
fisubl
adc
fwait
push
pop
pop
jb
into
adc
adc
test
add
cld
cmp
or
inc
fsubl
sub
insl
imul
lods
pop
add
inc
push
int
add
sbb
in
cmp
and
test
push
hlt
lods
xchg
fimuls
push
cmpsl
xchg
cmp
lds
add
mov
jae
cmp
mov
mov
cmp
cmpsb
popa
mov
data16
lret
xchg
and
int
inc
and
incb
mov
inc
arpl
cmp
aad
sbb
cld
push
xchg
popf
or
or
push
fistpl
jle
lods
pop
ret
rcrl
pop
stc
mov
cmpsb
dec
mov
and
hlt
add
jmp
or
push
cmp
add
daa
out
sbb
and
add
imull
pushf
testl
std
arpl
mov
and
mov
cmp
je
fisttpll
inc
out
pop
es
jg
mov
in
sarl
jns
mov
popa
or
xchg
add
pushf
dec
aad
loopne
push
gs
adc
lods
sbb
inc
mov
flds
dec
pop
or
in
stos
sub
insl
or
push
cli
pop
cwtl
pop
push
pop
jge
lods
jnp
add
loope
bound
dec
xchg
xor
and
sbb
fstl
fiaddl
lods
dec
add
test
and
add
xchg
mov
jl
add
insb
mov
and
out
lock
repnz
lcall
sbb
xchg
mov
nop
or
in
mov
mov
ss
pop
cmpsb
sbb
aaa
jbe
mov
dec
push
popa
pop
repnz
sub
add
adcl
sbb
insl
push
sbb
xchg
enter
jg
in
mov
add
popf
shl
or
xchg
lock
std
out
and
out
cmp
push
inc
jle
cmp
outsl
mov
sbb
xor
std
subb
scas
nop
rolb
lock
sbb
lods
in
mov
andl
popa
jmp
inc
popf
jl
andl
mov
aas
mov
and
xor
fs
mov
push
enter
lcall
scas
mov
or
pushf
pop
fldl
in
dec
mov
fistl
into
ret
flds
sbb
mov
mov
int3
mov
and
pop
push
movsb
out
call
lcall
adcb
xchg
lahf
das
jmp
mov
out
pop
xchg
pop
push
dec
add
adc
dec
call
pushf
rcll
mov
add
bound
mov
mov
xlat
cmp
fwait
out
int
mov
stos
dec
fwait
imull
aas
push
adc
scas
adc
sub
pop
stos
mov
mov
dec
jo
insb
ss
push
cltd
cmp
jo
dec
movl
fldenv
cltd
cld
lahf
add
daa
leave
add
add
out
ja
rorl
adc
lock
jae
sub
inc
sub
aam
mov
push
rorl
insl
not
add
ljmp
inc
xor
xor
and
sbb
cwtl
sahf
inc
nop
push
mov
push
xor
jo
mov
jne
ljmp
icebp
jae
out
insb
add
test
inc
mov
sbb
std
and
jns
fisttps
xor
or
js
in
mov
daa
inc
cmpsb
ja
mov
cmpsb
fucomi
mov
cmp
in
loop
stos
lret
dec
loope
inc
mov
loope
xor
push
dec
and
mov
add
filds
sbb
lret
lds
daa
dec
popf
sbb
sbb
stos
cli
mov
int
cmpsb
xchg
mov
loopne
pop
lahf
inc
xor
arpl
mov
push
push
ljmp
pop
push
dec
cmpsb
and
out
jae
scas
les
sbb
jp
or
add
cmp
xchg
or
scas
ret
rcll
and
lods
xchg
or
int3
pop
pop
mov
and
insb
jmp
or
jl
sbb
in
cmp
inc
ss
jmp
xor
mov
dec
or
std
repnz
jno
or
lea
xor
loope
scas
fcmovbe
mov
mov
xor
shl
fsubrl
mov
xlat
push
mov
icebp
in
out
icebp
cmp
loop
insl
es
clc
popa
or
cmp
cwtl
rclb
dec
repnz
lea
and
insb
cltd
in
lods
or
addl
pushf
out
mov
es
test
jle
cmpl
out
sub
popa
mov
inc
and
add
rolb
rcl
add
cltd
cmp
xor
outsl
rcl
hlt
add
push
fdivs
dec
push
jle
lret
xor
decb
cli
stc
pop
push
adc
mov
and
lods
mov
add
shll
adc
adcl
inc
mov
dec
mov
pop
pop
cmp
jecxz
call
rol
fcoms
scas
cmc
fisubl
hlt
pop
je
mov
cld
push
daa
cwtl
sub
aas
inc
sarl
cmp
ss
insl
test
test
xor
lret
das
xor
fs
and
cltd
les
add
push
hlt
int
pop
pop
notb
dec
pop
and
and
pop
push
push
sub
mov
xchg
rcrl
repz
or
mov
add
sub
or
jmp
xor
fdivrl
pop
jl
xor
cmp
enter
xchg
dec
addl
push
and
fcomip
popa
pushf
repz
xchg
fimull
xchg
and
push
jle
cmpsb
dec
pop
inc
ja
mov
js
lods
ljmp
dec
pop
stos
mov
push
xchg
fidivs
mov
cs
leave
jo
jecxz
mov
fsts
cltd
mov
orl
mov
insb
push
sub
jl
mov
cli
pop
daa
lahf
shlb
xlat
repnz
dec
clc
cmp
addr16
enter
push
cwtl
idivl
decb
movsb
cmp
mov
push
and
sbb
xchg
lcall
jg
jl
aaa
loopne
mov
loopne
je
xchg
cwtl
add
fcomip
mov
popa
or
sbb
fs
xchg
mov
into
dec
ss
fwait
sub
pop
sbb
out
mov
sbb
cli
fldenv
clc
and
adc
xlat
sbb
jl
push
popf
pusha
jb
jnp
cmp
jns
mov
shlb
jb
pop
xchg
aad
xchg
inc
mov
enter
in
mov
into
lods
sbb
add
ljmp
mov
cmp
push
outsb
or
repz
fwait
xchg
push
lahf
test
mov
mov
pushf
inc
jne
lcall
lods
add
adcb
sub
add
aad
add
aam
pop
push
pusha
sbb
daa
jge
repz
or
sbb
data16
icebp
jno
andl
fs
mov
ljmp
jno
daa
sub
outsb
and
sbb
gs
ret
out
sbb
idivl
je
and
sub
rorb
addb
jge
out
inc
mov
pop
roll
leave
xor
jmp
xor
test
push
scas
into
mov
idivl
mov
mov
divb
sbb
jns
repz
sbb
insb
mov
or
mov
mov
scas
adc
xchg
xchg
loope
icebp
sub
sub
aaa
cld
sub
shll
frstor
mov
dec
cmc
pop
pop
fwait
jge
popa
fwait
repnz
mov
dec
leave
push
mov
mov
xor
sbb
clc
jg
jae
sub
ret
inc
pop
mov
pop
mov
sub
jnp
insb
mov
xchg
scas
aaa
int3
sub
inc
jbe
popf
and
dec
mov
rcrb
sbb
inc
rcrl
jo
jns
sahf
imul
mov
lods
test
mov
or
fxam
andb
jns
lcall
stos
stos
fcoml
inc
fldcw
dec
jno
movsl
sub
mov
pop
gs
fidivs
fistpll
push
mov
in
jbe
inc
xchg
cmc
push
stc
xchg
dec
je
shrb
inc
cmp
inc
pop
mov
movsl
push
fcomps
or
addr16
sub
and
mov
dec
jne
xor
aaa
push
add
jnp
ret
sbb
scas
popa
cli
test
repz
pusha
push
pusha
test
or
and
mov
cs
mov
pop
lock
lea
test
mov
int3
mov
pop
push
out
int
xor
test
xchg
test
movsl
push
add
ljmp
dec
int3
xor
dec
mov
into
repnz
sbb
insl
andl
adcl
jecxz
mov
dec
jb
dec
js
pop
js
jmp
sbbl
es
push
scas
sub
sbb
test
jnp
pop
decb
hlt
loop
lods
sti
pop
rolb
sub
cmc
iret
pop
sbb
sbb
pusha
enter
xchg
stos
jge
and
mov
sbb
stc
stos
fld
test
sahf
fs
int3
xchg
jns
lret
lret
adc
mov
xchg
jmp
and
add
mov
lahf
sahf
mov
adc
dec
gs
cmp
leave
xor
leave
movsl
ret
addr16
repz
and
pop
push
xor
ss
dec
addr16
adc
inc
cli
aaa
in
stc
jne
lods
xor
test
mov
insb
and
xor
jmp
je
daa
xchg
pop
dec
fsub
inc
pop
jnp
stos
repz
mov
iret
cmpsl
push
divb
add
dec
mov
outsl
xor
insb
push
adcb
lds
or
jmp
xchg
in
stos
mov
mov
arpl
aas
cwtl
mov
aam
ljmp
pop
lock
sub
cwtl
aas
push
xchg
insl
pop
sub
sub
lds
pop
cmpsl
iret
dec
in
xor
rol
cmpsb
scas
or
mov
inc
mov
popa
add
and
mov
fldcw
bnd
fstps
cmpsb
jnp
fidivrl
xorb
add
jbe
aad
outsb
fimuls
ja
imul
aad
in
push
push
ret
adc
push
notb
mov
sub
stos
leave
xchg
cmp
mov
sub
push
sub
mov
inc
sub
insb
adc
sbb
sti
jno
cwtl
stos
jp
test
cmp
pusha
inc
mov
adc
cmp
push
jp
mov
dec
cmc
xchg
inc
sysret
xchg
and
jnp
aaa
xchg
rcrl
clc
mov
jns
sbb
ret
or
push
aaa
jne
pop
outsb
or
add
fwait
pop
fmulp
or
pop
jae
fldz
pop
ja
mov
lcall
js
test
pop
leave
and
pushf
out
cmp
push
loop
adc
in
bound
xor
xchg
mov
fnsave
jns
sti
test
stos
dec
outsb
dec
jg
call
xchg
xchg
in
dec
fisubrl
popf
inc
mov
lods
cwtl
push
inc
test
inc
ljmp
jecxz
loopne
popa
and
pop
cmpsl
lea
dec
mov
cwtl
cmp
pop
pop
roll
xlat
shrb
mov
and
out
xor
pop
fs
cmp
shrb
push
fld
and
lds
sti
testb
sti
nop
pusha
dec
lcall
aam
pop
fcomp
inc
das
inc
enter
and
lret
popa
jo
add
inc
dec
adc
aam
sbb
movsl
lret
call
fbld
cmp
xchg
inc
adc
faddl
sti
dec
add
stos
and
dec
cli
inc
in
xchg
pop
cmp
movsb
or
lahf
cmpsl
jbe
loope
pop
inc
pushf
test
pop
cmp
and
icebp
ret
push
ret
lcall
dec
repz
and
sbb
out
add
ficoml
lret
and
scas
fmull
or
xchg
icebp
js
push
inc
inc
mov
outsl
inc
add
andl
add
imull
in
sbb
sub
lds
jecxz
in
cmpsl
jne
mov
in
sub
xchg
xchg
mov
repz
aam
cli
cmpb
push
push
jb
mov
in
cmp
insl
sahf
lock
aam
lock
aam
ljmp
sub
int
mov
jmp
add
imul
imul
add
xor
push
sbb
pop
inc
int3
and
push
add
lret
dec
jg
sub
icebp
into
andb
adcl
inc
mov
inc
lock
and
and
sub
orb
sbb
rcl
add
mov
jmp
push
pop
lds
cmp
and
aas
fstpt
stos
test
push
push
inc
ret
sbb
push
lock
nop
jmp
sub
and
xor
xchg
out
adc
test
rorb
call
push
pop
aam
lcall
or
or
test
ret
mov
inc
mov
sti
cwtl
out
sbb
and
jno
or
xchg
lock
sbb
pop
das
gs
mov
hlt
lock
movsl
es
dec
divb
fisubrl
test
ds
out
int
mov
add
test
sbb
faddp
inc
out
mov
out
int
mov
imul
std
push
xchg
mov
mov
jns
fsubr
into
dec
imul
adc
movsl
add
mov
stos
mov
mov
insl
add
jg
push
xor
xchg
rcrl
ret
lcall
aaa
or
and
push
push
pop
push
pop
add
dec
pop
cwtl
pop
popf
arpl
mov
rorl
adc
cmpsb
mov
xorl
out
lock
mov
xchg
enter
push
jge
lea
aam
pop
jb
rcrb
or
push
in
loopne
cmp
out
ror
outsb
cmpsb
mov
fs
mov
clc
xor
inc
xchg
cld
inc
add
and
gs
int3
xor
lods
stos
add
and
jle
loope
sub
jbe
repz
outsb
repnz
sbb
mov
fistps
hlt
cmpsb
jo
add
sti
or
stos
adcb
test
filds
pop
jb
cmpl
test
mov
mull
sti
iret
and
push
xor
inc
test
xchg
subb
out
movsl
or
out
aaa
mov
adc
cmp
push
ds
add
or
jmp
testl
rol
mov
mov
cmp
in
loopne
call
add
stos
xchg
push
xlat
arpl
scas
add
mov
test
push
js
adc
inc
dec
mov
es
aad
and
fnstcw
jae
adc
data16
mov
outsl
sbb
ror
test
daa
insl
mov
mov
aas
and
add
add
adc
xchg
fdiv
xor
fmul
or
push
adc
pop
push
jns
gs
fistpl
lret
scas
daa
lock
mov
test
aas
dec
icebp
adc
ror
xor
rorl
into
ljmp
mov
xor
mov
fsts
xchg
inc
inc
psubsb
sub
sub
fbstp
sbb
inc
jmp
and
movsb
sti
popf
in
pushf
cmpsl
push
hlt
movsl
mov
loopne
stos
in
inc
cld
jne
xchg
js
dec
mov
mov
nop
out
leave
pop
xor
leave
rorl
push
mov
push
lods
inc
loopne
jb
push
fnsave
add
or
scas
lock
ss
data16
ja
mov
dec
mov
jecxz
sahf
mov
push
xorps
xlat
pop
add
inc
sbb
cwtl
push
push
arpl
pop
scas
out
test
lods
mov
jns
test
mov
fdivs
push
rcl
dec
push
push
out
xchg
call
jle
inc
or
test
rclb
dec
fmuls
je
or
jbe
addl
fwait
fwait
jecxz
lds
fcomp
sub
clc
pop
notl
shrb
test
rorl
enter
adc
pusha
lock
sub
mov
hlt
sbb
rcrb
add
xchg
sahf
or
mov
gs
fimull
xchg
pop
sbb
fimull
add
pop
repz
mov
icebp
jmp
loop
xchg
jge
and
adcl
dec
inc
mov
in
ja
dec
rolb
inc
mov
out
sbb
cmp
sub
pop
pop
cmp
in
out
shll
outsl
data16
cmp
loope
daa
sub
push
mov
popa
ss
call
in
mov
push
push
xor
lahf
mov
inc
in
mov
sub
in
add
or
aaa
ds
ret
ret
mov
or
cmpsb
or
insb
add
cwtl
mov
mov
fbstp
xor
test
cmp
jge
cmpsb
push
mov
or
push
lock
int3
mov
pushf
fwait
sbb
pusha
test
mov
pminub
ret
in
push
dec
push
and
sub
aas
mov
int3
les
jge
aaa
or
insl
cmp
push
int
mov
jnp
mov
mov
dec
sub
sbb
nop
int3
or
sub
inc
sub
fidivs
lea
push
cmpsb
inc
cld
outsb
push
insb
add
xchg
xchg
lcall
inc
sti
lret
aaa
xlat
mov
std
jl
or
das
xchg
iret
mov
or
sbb
ret
sbb
sub
mov
mov
cmp
sub
nop
out
cmp
dec
mov
je
stos
in
xor
shll
outsl
mov
fnstsw
xchg
call
mov
aam
mov
in
mov
fsubr
test
enter
jmp
sarl
adc
and
fstps
incl
movsb
cltd
mov
fcoms
pop
test
add
inc
xchg
push
loop
dec
vpshaq
lcall
fsubrs
mov
negb
dec
inc
jp
imul
addl
sti
adc
inc
add
fbstp
cld
add
push
adc
mov
lea
and
and
pop
jl
and
daa
mov
cmpsb
jae
mov
hlt
fsubs
int3
dec
jns
scas
fs
or
mov
fwait
imul
pop
add
into
xchg
add
jns
inc
mov
add
js
xchg
or
inc
lock
sbb
jmp
push
jne
mov
lret
mov
pop
rcll
pop
sub
mov
dec
inc
fs
loop
or
or
lret
lahf
cltd
jmp
and
pop
push
mov
or
or
or
xor
inc
outsl
lods
sbbl
sub
mov
imul
lock
into
and
xchg
push
in
aad
dec
jecxz
mov
ss
cwtl
inc
dec
lret
int
fildl
out
pop
dec
or
dec
jae
lods
jnp,pt
cmp
enter
push
in
jecxz
mov
jns
push
cli
ret
xor
adc
outsb
les
xor
outsl
pop
and
and
dec
add
mov
push
mov
int3
jmp
jg
aas
mov
dec
inc
decl
add
inc
inc
adc
cli
dec
out
loopne
scas
cltd
repz
xchg
test
addb
and
sub
or
sbb
adc
xchg
std
aad
in
fsubrl
js
or
imul
sub
loope
dec
sti
cmp
add
jg
data16
sub
xchg
mov
shrl
pusha
mov
pop
pushf
imul
popa
daa
dec
movups
js
jecxz
push
sub
test
lea
jnp
mov
test
gs
sbb
sti
in
jmp
push
add
add
pop
mov
mov
stos
data16
addr16
pushf
sbb
jmp
adc
mov
in
adc
test
sbb
lock
and
cmp
test
cmc
call
std
pushf
pop
data16
aas
sbb
inc
scas
and
pusha
add
ss
popf
sbb
or
fnstsw
pop
pop
add
xor
les
cmp
mov
pop
ljmp
cmp
pop
jnp
orl
pop
mov
loopne
inc
inc
sub
xlat
and
push
sbb
ret
xchg
hlt
out
mov
iret
aam
dec
dec
pop
xchg
pop
pusha
push
jge
sbb
xlat
mov
lahf
inc
mov
in
jae
push
lds
popa
push
jbe
mov
sub
pop
inc
inc
pop
pop
neg
add
shlb
cld
daa
fmull
andl
ret
mov
bound
cltd
mov
scas
ud1
mov
stos
xor
jp
aad
lret
push
sti
add
xor
push
pushf
pushf
fldcw
push
push
bound
popa
sub
or
cwtl
int3
inc
notl
add
jp
or
mov
sub
push
iret
stos
push
pop
cmp
xor
mov
add
je
movsl
mov
xchg
mov
decl
dec
and
pop
ret
mov
mov
mov
test
adc
popa
insb
movsb
mov
pusha
push
movsb
dec
xor
sub
aad
cmp
or
pop
push
mov
xor
mov
test
cmp
xor
adc
push
pop
mov
mov
and
dec
clc
mov
insb
cmp
add
xor
ret
stc
into
mov
or
ss
xor
stos
scas
push
jbe
xchg
lods
cmp
inc
mov
sbb
pop
push
cmc
jl
mov
aaa
dec
xchg
rorl
scas
out
mov
mov
sbb
loope
pop
xor
out
jmp
xchg
mov
fstpt
stos
sbb
data16
jbe
sbb
lahf
cmp
xor
scas
fisubrl
repz
xchg
aaa
pop
and
adc
mov
clc
cli
mov
pop
mov
cmc
sub
scas
mov
prefetchw
mov
testl
jl
pop
push
fs
js,pt
or
nop
popa
mov
pusha
test
add
sarb
mov
cmp
jl
daa
xlat
inc
inc
add
xor
sahf
and
mov
mov
out
in
fcompl
mov
sarl
pop
imul
rorb
push
xor
pop
mov
lds
std
lret
fnstcw
das
sub
insb
mov
cmp
xchg
gs
xor
sbb
loope
pop
dec
pop
mov
add
clc
lcall
or
xor
in
imull
data16
mov
pop
sub
or
sub
inc
cli
push
mov
lods
cmc
filds
mov
push
sbb
sbb
int
jmp
rcrl
stc
or
push
aas
sub
cwtl
or
push
clc
inc
dec
mov
lods
clc
pop
addb
inc
dec
inc
popf
test
in
mov
ret
sbb
sbb
lret
mov
push
sbb
int
imul
mov
xorl
lea
jg
loop
sbb
pop
inc
mov
test
mov
idivl
imul
inc
jbe
cltd
rcrl
mov
sub
cmp
lds
xchg
mov
ss
bound
movsb
jns
xor
xlat
out
xchg
rorb
shll
les
hlt
fcmovnb
dec
jmp
incb
outsb
scas
scas
rclb
jbe
mov
enter
mov
mov
dec
nop
jg
mov
movsb
push
cwtl
xor
stos
fcomi
aad
push
jnp
scas
sbb
mov
add
sti
mov
lcall
in
mov
mov
aam
movsb
loop
mov
imul
mov
xchg
cwtl
pusha
ret
xor
inc
adc
add
sbb
mov
loopne
sub
int
scas
mov
addr16
icebp
or
adc
shrb
pop
lods
xor
mov
add
loopne
cmp
mov
loop
loopne
xor
add
dec
scas
sub
sub
sub
and
jno
aam
xchg
jmp
dec
cld
jo
sbb
push
mov
cmpsl
jp
fwait
leave
shll
and
add
ja
xchg
mov
or
dec
add
adcl
lods
sub
sbb
inc
push
inc
sar
mov
mov
jge
shll
fbld
js
adc
inc
or
dec
or
mov
mov
add
add
xchg
sbb
sbb
mov
sub
sbbl
cmp
push
lcall
and
fwait
rorb
pusha
out
push
lret
add
outsb
lock
jns
in
dec
out
dec
push
in
leave
mull
clflush
cmp
or
cwtl
sbb
ja
mov
lds
fsubl
push
cmp
rclb
das
repz
fiadds
mov
and
sbb
mov
pushf
cmp
mov
das
jecxz
aas
hlt
mov
imul
mov
cli
int
push
je
mov
lds
movb
mov
push
mov
stos
loopne
xchg
jmp
mov
leave
loopne
cmp
and
dec
mov
or
add
inc
mov
sbb
sbb
push
stos
daa
and
dec
jns
je
sub
bound
and
mov
jle
jo
dec
mov
add
fwait
lds
xlat
insl
test
jo
pop
cld
arpl
mov
fwait
addr16
xchg
xlat
mov
cmp
add
adc
lea
shlb
es
cmp
sbb
repz
push
mov
jo
push
dec
dec
and
fwait
xorb
aad
jb
lods
stos
lock
stos
scas
out
cmpl
cmp
cmp
mov
orl
xchg
lret
mov
push
jp
jmp
push
mov
pop
jns
push
ret
sarl
sarb
aad
or
inc
shll
test
pop
mov
inc
jmp
add
dec
xchg
in
loop
ret
ret
mov
dec
inc
mov
repz
loop
push
fstp
dec
repz
repz
out
cmp
ficompl
shrl
addr16
cmp
xor
mov
nop
lods
jbe
leave
add
sbb
sub
push
inc
out
mov
jl
pop
and
xchg
mov
test
dec
sbb
repnz
mov
mov
add
pop
adc
inc
repz
dec
lods
sbb
int3
jno
movsl
stos
imul
out
dec
pop
add
scas
out
fildll
mov
testl
mov
ljmp
mov
push
or
fldt
je
lcall
outsl
sub
xchg
push
inc
addr16
pop
aad
cld
cwtl
fcom
outsb
xchg
insb
decl
jl
dec
loop
sbb
iret
clc
mov
mov
sub
enter
mov
movups
cli
rcrl
sbb
push
push
pushl
test
call
xor
das
jg
dec
xchg
and
fcompl
mov
es
ja
mov
cld
ljmp
and
xor
cmc
fs
sub
repz
cmp
int
jbe
lret
call
loopne
mov
and
in
mov
cmp
imul
or
xlat
push
inc
out
xchg
jmp
ljmp
mov
ss
js
ljmp
and
lods
pusha
push
aaa
pop
leave
xchg
inc
inc
push
fwait
or
xchg
cmp
rcrl
jb
cmp
js
jo
sbb
sub
push
adc
mov
fwait
pushf
jns
pop
cwtl
xchg
adc
xor
cmp
xor
fwait
dec
scas
hlt
xor
test
bound
psrlw
lock
subl
inc
pop
jae
jns
mov
fimuls
out
popf
jecxz
adc
je
xchg
or
cmc
lea
jecxz
jl
outsb
mov
jno
pop
cmp
testb
clc
xlat
insb
movsl
test
lret
ljmp
cmp
dec
mov
xchg
dec
addr16
cmp
sbb
or
add
sahf
sti
repnz
mov
mov
pop
inc
jmp
jns
incb
das
xchg
xchg
mov
addb
rcrb
rcr
jg
push
leave
jl
out
je
xchg
jae
cmp
and
mov
nop
shrl
imul
nop
dec
mov
jns
xor
and
xchg
sbb
int
and
jg
jle
or
daa
lret
movsl
iret
pop
in
add
lea
inc
and
sti
aas
rorb
and
mov
lcall
test
sbb
dec
in
cs
xchg
jle
pop
int3
xchg
xchg
push
sbbl
mov
jl
fs
and
dec
sar
mov
add
jl
idivl
mov
out
mov
cmp
fsubrl
cltd
icebp
leave
sbb
xchg
sub
sti
cmpsl
aam
xor
repz
mov
aas
mov
sti
sbb
ficoml
xchg
ljmp
mov
mov
pop
dec
fidivrl
sbb
stos
pop
mov
jae
pop
dec
lods
cld
jbe
data16
add
mov
dec
xor
aaa
mov
xchg
mov
popa
mov
xor
rcr
ret
insl
xlat
pushf
loopne
sbbb
xor
xchg
les
in
clc
es
insl
in
iret
insl
mov
sbb
in
jae
gs
mov
pusha
mov
call
js
xor
pop
jg
push
std
faddl
push
xchg
scas
rorb
pop
sub
or
mov
adc
add
push
inc
push
fcmove
imul
pop
js
or
add
into
and
repnz
push
sti
mov
inc
shl
mov
fidivl
clc
out
cmc
cld
ffreep
jge
rolb
xchg
data16
mov
mov
ds
dec
push
mov
iret
mov
adc
jg
and
mov
sbb
or
inc
ljmp
xchg
xor
cltd
mov
sub
sbb
imul
pop
inc
sbbl
pop
call
test
add
fiaddl
clc
inc
fildl
int3
inc
std
lock
or
out
and
inc
xchg
pop
stos
pushf
out
xchg
pop
or
jecxz
cmp
js
mov
or
pop
addl
jno
loopne
add
cmp
xchg
mov
add
lea
lods
sbb
add
aad
iret
jns
mov
ficoml
pop
scas
fcoml
int3
div
sar
pop
xlat
out
push
xchg
lcall
out
int3
push
cltd
push
add
inc
and
es
add
out
test
stos
mov
int
in
jmp
in
in
push
pop
xchg
leave
mov
lds
imul
std
movsl
adc
sub
sbb
inc
cltd
out
nop
imul
into
mov
sti
fstpt
dec
or
in
adc
adc
inc
adc
outsl
lods
mov
stos
jge
mov
hlt
mov
mull
in
xchg
pushf
mov
pop
ss
aaa
dec
shrl
push
inc
push
or
mov
push
jne
sub
jge
mov
jg
in
mov
push
pop
subb
es
or
push
into
pop
adc
mov
cmpb
inc
out
push
fwait
inc
pop
xchg
int3
popa
hlt
lret
jmp
jo
icebp
push
repz
idivb
pop
pop
push
popf
aam
lea
push
xchg
daa
loope
ja
je
ficoms
and
cltd
sub
xchg
mov
addr16
jbe
hlt
shll
adc
pop
in
sbb
xchg
fimuls
cmp
sub
xchg
je
push
xor
xchg
sbb
fisubrl
add
mov
add
push
inc
push
push
dec
idivb
sbb
cltd
xchg
daa
sub
lahf
jb
ss
sub
xlat
mov
lcall
xchg
stos
or
add
into
xchg
mov
out
loope
pop
add
add
repz
ja
mov
push
out
mov
test
mov
mov
push
mov
lret
adc
loope
add
push
sbb
hlt
lea
jne
rcll
stos
test
mov
outsl
fcmovnbe
call
fnstcw
and
shl
adc
jg
repnz
lcall
mov
in
xorb
inc
jnp
imul
pop
rcrb
adc
cs
dec
in
mov
sub
jecxz
out
inc
fstpl
sub
ja
mov
cmp
sbb
mov
imul
scas
and
or
mov
stos
int3
dec
or
popf
cs
outsb
lahf
lock
xchg
mov
mov
sbb
int3
pusha
adc
adc
bound
push
les
sbb
hlt
mov
add
mov
mov
fcmovne
jnp
cmp
lahf
rcll
cwtl
and
dec
sbb
push
lcall
test
fistl
ja
popa
mov
xor
mov
out
pop
push
add
data16
inc
jb
jle
fisttps
add
pushf
lods
cmpb
lea
sti
sub
add
andb
out
loopne
cli
sub
jecxz
loop
sbb
jo
mov
mov
shlb
cmpsl
fbld
aam
mov
cs
call
inc
pop
notb
mov
inc
das
pop
add
pop
cld
popa
lock
push
out
stos
sub
ljmp
mov
jae
stc
mov
in
xchg
push
pop
sbb
or
jne
jne
out
icebp
ja
aam
add
inc
adc
pop
inc
mov
cltd
xchg
leave
sbb
jns
pushf
xchg
cmp
shll
cltd
out
pop
jecxz
in
stc
ss
mov
xchg
jnp
inc
mov
stc
dec
add
xchg
push
clc
xchg
cmc
push
aas
stc
jns
lods
cmp
jecxz
das
push
cld
fsubl
inc
inc
std
jecxz
or
sbb
push
stc
inc
and
mov
adc
mov
add
loop
dec
test
insb
aam
pushf
jnp
pop
xchg
iret
push
int
or
icebp
mov
or
push
icebp
xchg
pop
sub
xor
dec
mov
icebp
dec
xor
sbb
ficomps
enter
setle
mov
out
adc
mov
xchg
xor
mov
sbb
adc
mov
fisubrs
sub
mov
sub
test
pop
fisubrs
aam
push
mov
lret
lcall
aas
mov
lock
mov
aam
cmp
shlb
and
and
shll
sti
and
push
in
xlat
mov
fidivrs
insl
push
push
js
je
adc
dec
je
xor
mov
add
cli
aas
mov
mov
inc
roll
aaa
in
fidivs
xor
int
rorl
fwait
dec
cmp
lret
and
rcrb
jg
and
lds
xchg
mov
adc
cmp
jl
notl
ret
mov
pushl
out
push
xor
or
mov
mov
insl
cld
xchg
stos
pop
xchg
push
scas
mov
mov
fildll
aam
add
or
jl
shll
pop
xchg
jecxz
pop
pop
add
fs
lods
add
mov
ret
out
xchg
aad
and
fucomi
fwait
jmp
xchg
int
out
dec
adc
lods
insl
outsl
mov
repnz
cmpsb
mov
dec
sub
call
cmp
mov
in
cmp
xchg
inc
popa
fisttpll
push
addl
push
jae
mov
or
lahf
int
mov
mov
dec
popf
pop
dec
xor
xor
inc
inc
testb
int3
cmp
mov
out
andl
repz
insl
cli
movsb
mov
popf
mov
pusha
push
sbb
repz
std
adc
push
jae
xchg
clc
pop
xor
lods
push
sbb
fisubrs
ret
ja
mov
xchg
in
sub
lcall
mov
lds
mov
stos
mov
dec
lret
out
popa
bnd
or
xchg
stos
rcrl
jbe
xchg
pop
fistps
out
je
push
inc
or
xlat
push
dec
mov
mov
loope
aas
out
pop
push
mov
mov
mov
sub
js
jae
lods
cmp
cltd
push
int
outsb
inc
sbb
ret
shll
and
add
popf
cmpsl
inc
fcmovbe
and
fisttpll
add
pop
in
rcll
loop
popf
inc
addr16
jge
repnz
push
xor
mov
inc
inc
jp
pop
dec
movsb
dec
inc
mov
mov
push
outsl
cmp
mov
icebp
icebp
sub
and
mov
or
in
push
add
out
mov
and
mov
xchg
jle
daa
inc
cli
loope
cmpsb
mov
push
inc
or
jg
in
shlb
mov
idiv
int
je
fldl
int
fnsave
in
and
push
sub
mov
mov
inc
sbb
jo
test
sub
pop
sub
mov
test
and
movb
and
pop
add
jb
mov
pop
imulb
sbb
add
jecxz
popa
call
xchg
mov
pop
stos
testl
and
dec
sbb
data16
int
push
lea
repnz
outsl
lahf
dec
out
pop
mov
lods
dec
push
jmp
add
stc
pop
push
mov
inc
cmp
arpl
xchg
nop
mov
mov
xchg
sbb
mov
into
sbb
xor
das
cmp
and
dec
cwtl
adc
mov
cs
lcall
sbb
lods
push
and
jmp
repnz
test
lahf
je
jne
mov
push
mov
sub
cmpsb
pop
add
dec
outsb
jl
pop
xchg
sti
adc
mov
mov
inc
cmp
xor
daa
cmpl
or
jmp
mov
in
shlb
mov
sbb
fsubrl
or
and
daa
cld
je
lcall
sub
std
adc
dec
lret
add
repnz
cmp
cmpsl
mov
ds
mov
push
jecxz
test
out
lods
adc
es
mov
leave
push
xlat
dec
push
and
cmp
xor
movsb
std
in
cmp
pmaddwd
lock
fisttpll
cmpsl
pop
add
jle
inc
pop
leave
lock
jnp
dec
lods
test
push
sbb
push
inc
jne
pusha
cmp
stc
sti
lods
sub
mov
jnp
or
repnz
fdivs
ss
push
xchg
jnp
jl
sbb
mov
mov
inc
pop
shlb
loopne
sub
ja
pop
jmp
pop
or
xlat
loope
stc
add
mov
push
jns
rep
clc
movsl
nop
and
mov
shlb
mov
cli
cs
sbbl
out
dec
cli
cmp
lcall
stos
sub
xor
repnz
inc
dec
rorl
xlat
fnstsw
mov
clc
rcrb
aad
sbb
cmp
test
jl
lods
out
inc
jb
jl
pop
ret
loope
imul
mov
and
jnp
lock
js
cmp
jle
insb
adc
inc
dec
pop
inc
jbe
ret
mov
sub
or
jae
push
push
addl
mov
orl
and
xchg
arpl
inc
push
lret
adcb
mov
sub
push
jecxz
xchg
pop
lret
add
fwait
xlat
popf
and
cmc
popa
or
sbb
xchg
sub
mov
push
or
mov
mov
cmp
lea
and
divb
mov
in
xchg
movsb
int
test
or
inc
pusha
stos
outsl
sub
jno
mov
mov
testb
sub
clc
push
mov
ficoms
mov
or
add
cmp
call
cmpsl
lret
mov
sarl
mov
loop
ficoms
cwtl
out
mov
clc
aad
mov
pop
push
adc
mov
and
ljmp
pop
ljmp
test
out
test
add
mov
insb
jmp
sub
aad
in
dec
jbe
pop
lcall
in
imul
fiadds
out
xor
and
dec
xorl
mov
std
lods
mov
mov
les
aas
std
jge
adc
push
cwtl
dec
add
in
sbb
push
outsl
mov
sub
pop
push
icebp
nop
jmp
aad
push
mov
stos
mov
pusha
jns
es
cmpsb
sahf
subb
arpl
lds
rorl
add
test
movsl
ror
mov
push
lock
mov
mov
lahf
in
xchg
push
push
mov
xor
dec
inc
inc
jae
jmp
mov
out
mov
addr16
into
in
aam
je
cs
inc
jae
mov
ror
xchg
mov
xor
outsb
fmul
sbb
rcl
and
pop
and
sbb
jb
pmuludq
jge
cmp
mov
sbb
cli
ror
loope
call
xor
pop
aaa
leave
mov
pop
mov
dec
inc
xorb
xor
data16
lcall
filds
pushf
adc
cmpsb
pmulhuw
shlb
inc
and
adcl
jle
jne,pt
jo
xlat
xchg
cmc
push
clc
xor
std
inc
xor
mov
lods
leave
mov
pop
out
sub
rcrl
sbb
shll
or
in
std
pop
movsb
call
mov
in
hlt
mov
outsb
push
js
dec
aad
ficoms
pop
ss
fcomp
xor
stos
jge
dec
pop
mov
out
std
fisttpl
inc
sbb
xchg
test
iret
call
xor
pop
sahf
mov
jo
mov
mov
push
mov
into
jmp
jle
fildll
loope
sub
es
mov
sub
les
loop
mov
pushf
aaa
cld
add
cmp
cmp
cli
fsts
into
shlb
jbe
dec
bound
cmpsl
fsubs
dec
adc
mov
add
pop
hlt
jo
push
pop
shll
sub
inc
push
in
test
push
mov
shrl
aam
xchg
outsb
leave
mov
sahf
jo
or
lret
cwtl
fwait
xor
das
jmp
mov
lock
lods
mov
pop
mov
jle
xor
dec
mov
jae
cltd
jb
rcll
stos
cs
jecxz
orb
fwait
jne
dec
test
jg
cmp
jno
and
mov
add
add
xor
push
loopne
insl
call
dec
push
ds
jge
cmp
and
xlat
icebp
inc
xchg
dec
rorl
push
sbbb
mov
repnz
adc
mov
xor
cmp
je
mov
mov
push
sub
and
mov
cwtl
fwait
adc
icebp
mov
push
cli
outsl
mov
mov
mov
test
hlt
mov
out
mov
and
call
jnp
sub
sarb
adc
mov
js
call
jb
hlt
mov
xchg
popa
out
push
mov
xor
rorb
or
arpl
sbb
xchg
mov
mov
xor
enter
enter
ret
in
test
ficoml
fiaddl
mov
aaa
mov
cmp
loopne
mov
jl
test
loopne
pushf
dec
jmp
xor
sti
daa
push
mov
insl
push
pop
jg
inc
add
fistpl
rcll
ljmp
pop
cmp
imul
in
xor
inc
or
xchg
and
add
mov
cmpb
or
push
mov
xchg
push
pushf
lock
scas
in
sub
cmp
add
pop
insl
repz
cmpb
inc
adcl
xor
mov
cmc
jne
fisttps
adc
xchg
add
push
sarb
or
sub
dec
loopne
jmp
subb
add
and
sub
push
popf
rcrb
mov
cmp
repz
xor
in
mov
in
sbb
push
dec
unpcklps
icebp
sbb
lcall
jbe
xchg
imul
cs
mov
push
iret
dec
shl
pushf
daa
or
push
fsubrl
pop
stos
in
mov
popa
imul
pop
mov
test
hlt
xchg
mov
jnp
test
or
adc
out
out
repnz
clc
fnstcw
sub
lret
sub
mov
popf
mov
es
and
sbb
jl
in
xor
dec
aaa
in
stc
jg
cld
xor
xchg
clc
pop
pop
call
cli
ficoms
test
mov
mov
push
dec
inc
pop
test
cld
inc
enter
cld
mov
mov
mov
jo
out
andb
stos
or
mov
pop
jle
aaa
add
orb
ret
cmpsl
push
inc
cmp
jbe
adc
pop
insb
mov
setge
adc
rcrb
into
pop
movb
inc
and
test
add
jecxz
xchg
dec
dec
in
sbb
push
push
push
mov
mov
mov
pusha
rorb
gs
js
mov
cmc
pop
fildll
out
ds
aas
adc
jmp
push
sub
jne
xor
sub
pop
dec
inc
aaa
push
movsl
sub
pop
dec
pushf
cmpsl
cwtl
out
decl
push
mov
sahf
imul
cmpl
ja
loopne
sub
xorl
test
popa
lods
clc
jno
in
cmp
mov
inc
mov
pop
push
xchg
jns
mov
adc
push
test
lea
movsl
and
in
pushf
jecxz
outsl
cmp
loope,pt
cmp
mov
pop
xor
cwtl
bound
insb
push
cmc
inc
in
push
popa
fidivl
jecxz
mov
loope
sub
ds
and
subl
pop
sbb
push
cmp
mov
push
dec
les
cltd
add
adc
out
jmp
or
or
out
mov
cmp
pop
jnp
nop
cmc
addr16
lret
arpl
cmpsb
repnz
test
pop
jmp
dec
je
xor
test
call
lds
or
divb
sarb
nop
adc
dec
sbb
or
insb
iret
test
xor
inc
les
das
bound
sub
xor
test
outsb
inc
fucomip
scas
fs
aad
insl
leave
popf
test
fimuls
jbe
lcall
add
loopne
pop
push
insb
cmp
pop
xchg
jle,pn
mov
ljmp
push
popf
scas
decl
sub
int
imul
int3
xlat
dec
imul
test
xor
or
push
fisubl
popf
jecxz
imul
xchg
add
xchg
cmp
popl
dec
test
push
push
pop
push
icebp
mov
fnclex
lahf
out
adc
push
push
inc
lds
dec
sbb
pusha
and
pushf
fsubr
pusha
adc
xor
mov
mov
xlat
xlat
cmp
sub
bound
cmp
mov
mov
push
ret
adc
xchg
es
or
mov
outsl
and
or
mov
jbe
pop
and
and
push
or
lds
in
cmp
dec
hlt
sub
int
sbb
fsts
sub
xchg
popa
out
fisttpl
jno
lea
loope
pop
ret
aam
sbb
pop
jo
hlt
xchg
les
lock
jl
jle
out
inc
inc
cmp
rcll
insb
jmp
pop
bound
cmp
xchg
jne,pt
iret
sbb
mov
ja
repz
loop
faddl
ret
int3
jl
leave
lret
or
and
mov
adc
xor
and
xlat
cmp
ds
xchg
mov
mov
adc
fistps
icebp
xlat
mov
add
imul
jne
mov
lret
sbb
and
ret
sti
repnz
inc
inc
xchg
ja
mov
fwait
lcall
inc
adc
pop
push
and
lret
js
outsb
std
jno
cmp
js
out
dec
xor
int3
cmp
shl
add
shlb
push
in
pop
push
and
add
int3
aaa
pop
dec
out
mov
sbb
xor
jge
pushf
sahf
mov
and
pop
cmp
popa
scas
test
cltd
loop
ja
mov
mov
test
lahf
int
les
push
test
cwtl
adc
push
push
jae
inc
fs
inc
and
xor
jge
stos
fldcw
mov
aad
gs
add
lahf
out
cmpsl
cwtl
push
mov
aad
pop
xchg
outsb
test
add
lcall
dec
mov
outsb
cmpsl
mov
inc
lcall
icebp
loop
inc
push
clc
xchg
xor
aad
jecxz
or
stc
mov
jb
rclb
int3
push
lahf
sub
sbb
dec
fs
rorl
mov
inc
fldlg2
lea
push
sub
xchg
pop
out
dec
mov
out
cwtl
pop
in
and
daa
lea
stos
add
jno
xor
add
adc
pusha
sub
rcr
fcompl
add
and
pop
filds
sti
enter
push
repz
mov
add
mov
stc
dec
xor
lea
push
aas
mov
icebp
sbb
mov
daa
int
or
mov
ds
lock
inc
push
and
inc
mov
ret
jae
in
push
sahf
fimuls
adc
sbb
jno
mov
imul
jle
or
add
aaa
sti
sti
cld
mov
dec
ss
mov
enter
lret
mov
sbb
jbe
xchg
inc
mov
popf
sub
loop
mov
js
push
pop
out
je
mov
jbe
aaa
cmc
pop
into
or
push
fistps
mov
fnstsw
xchg
mov
xor
roll
xlat
pop
iret
dec
aas
ret
jmp
mov
cmpsl
ja
lock
daa
call
imul
push
mov
inc
jno,pn
xor
int
sub
je
xchg
test
sti
mov
rorl
insl
cmp
test
daa
mov
mov
cmp
mov
loop
scas
dec
push
pop
lcall
adc
pop
lret
adc
mov
inc
dec
lret
cs
ret
in
jmp
out
add
inc
jo
aad
into
cmp
into
dec
test
cmp
mov
pop
cmpsb
xor
sub
adc
xorl
add
in
inc
mov
dec
lock
out
flds
adc
and
sub
imul
and
insl
mov
jp
fsubl
mov
inc
std
outsb
mov
mov
jmp
push
add
out
call
sbb
or
repz
lods
mov
cmpsb
cwtl
stc
shrl
fstpl
pop
mov
jns
clc
scas
jns
icebp
jg
cmpsb
ja
dec
mov
add
mov
inc
inc
push
xchg
xchg
cmp
inc
shrl
inc
mov
fisubl
mov
and
addr16
sub
sahf
cmp
fnstenv
sbb
xor
insl
xor
in
clc
and
dec
mov
adc
lahf
ret
lods
ja
shl
add
lock
aam
sub
jno
lahf
stos
mov
jae
cltd
test
mov
push
sbb
ret
or
enter
push
and
push
addr16
scas
call
xchg
stos
pushf
push
dec
pavgb
add
lea
mov
pop
repz
aam
ljmp
mov
lret
push
cld
mov
mov
push
test
xchg
sbb
into
add
jb
cmc
sbb
xor
jp
or
stos
xlat
push
mov
and
test
mov
shll
mov
inc
jne
cmp
add
out
lock
pop
dec
mov
daa
adc
std
pop
aaa
cmp
cltd
js
add
add
gs
dec
inc
xchg
mov
mov
out
mov
xor
mov
mov
inc
cli
xchg
xchg
ret
sbb
lcall
icebp
jno
scas
sbb
lods
sub
jo
and
push
mov
dec
dec
and
shrb
out
aas
dec
aas
pop
sbb
es
sub
jmp
lds
imul
mov
xor
mov
lcall
imul
cmp
add
mov
pusha
adc
push
outsb
ljmp
arpl
jb
ljmp
mov
insl
std
call
repz
mov
dec
leave
sub
xchg
and
jnp
ja
roll
xchg
jg
testb
loop
sarl
sub
cwtl
add
mov
xor
popa
sub
insb
jp
roll
fs
cmp
repz
and
gs
shlb
stos
sbbb
cltd
iret
addl
sbb
pop
scas
shrb
add
jne
xor
inc
repz
roll
decl
mov
out
repnz
ja
push
movsb
lea
inc
sub
loopne
lcall
das
cltd
inc
dec
lahf
pop
jnp
jecxz
lods
sbb
jp
repz
ret
les
sahf
jae
dec
inc
lret
cmp
aam
icebp
sbb
jmp
adcb
negb
mov
mov
js
mov
fdiv
jmp
pop
std
sbb
ss
inc
jg
pop
clc
inc
stos
add
arpl
mov
mov
scas
and
imul
les
xchg
aad
imul
test
jb
push
adc
std
aas
and
jge
xor
lea
xor
sbb
fstpt
lods
inc
jae
in
push
call
fstpt
push
or
fdivrs
in
and
xorb
jne
shlb
bound
fcomps
lret
and
push
not
out
sarl
jge
sbb
mov
adc
pop
pop
xor
mov
xor
inc
jmp
mov
xor
or
xor
ret
je
or
sahf
mov
mov
adc
ret
out
pop
in
sbb
cmpsb
adc
dec
std
inc
mov
cmc
movsb
push
lods
mov
fnsetpm(287
push
jo
loop
mov
push
push
pop
cwtl
jl
xchg
or
xchg
pushf
shrl
int
aad
fwait
lods
and
icebp
test
sub
adc
in
inc
das
pop
lcall
mov
mov
mov
aam
dec
mov
add
xchg
pushf
xchg
cmc
clc
insb
cmp
in
in
cli
popa
mov
fisubs
mov
inc
inc
packsswb
pop
sbb
push
lds
pop
ror
pop
inc
inc
xchg
add
mov
or
mov
lea
aaa
push
xchg
jge
xchg
mov
xchg
xor
cmp
call
add
or
aad
push
dec
gs
sahf
push
pusha
in
cs
adc
inc
sub
push
aaa
xor
out
fwait
cwtl
add
mov
repz
jo
popa
push
out
and
xor
xlat
jnp
cmpsb
xor
inc
mov
in
fldl
or
sahf
shl
popa
das
sub
sbb
push
lahf
mov
jge
sub
sar
in
mov
add
cltd
push
or
lods
int
fildll
leave
pop
mov
pusha
cltd
lea
out
movsl
push
push
mov
jp
pop
pop
aas
shrl
inc
lret
jecxz
cwtl
test
lahf
popf
sbb
shlb
cmp
mov
in
bnd
cvtps2pd
pop
loop
mov
push
mov
pop
aas
xor
aaa
mov
shll
hlt
int3
inc
in
jbe
mov
lods
mov
loop
mov
dec
pop
outsb
aam
gs
mov
xor
insb
ret
jo
scas
pop
sti
pop
outsb
ss
inc
sub
cwtl
dec
and
sub
push
sbb
inc
mov
dec
rolb
mov
mov
lods
lea
pusha
sbb
test
sub
ljmp
packsswb
aas
data16
cmp
loopne
add
cwtl
fsubrs
lret
test
test
test
data16
ret
push
cmp
lahf
xor
out
and
jecxz
mov
repz
xor
imul
test
clc
mov
rorl
push
push
fucomp
pushf
inc
push
fbstp
push
cmp
mov
popl
dec
fmull
dec
jg
add
fsubrs
dec
mov
negb
fwait
repnz
jae
add
push
sub
stos
inc
fbstp
dec
aam
dec
mov
xchg
nop
movsb
hlt
mov
inc
pop
cmc
pop
dec
loope
lds
mov
int
clc
cwtl
sbb
push
mov
pop
mov
sub
pop
dec
jno
jne
sub
xor
mov
sbb
sub
repz
push
shlb
lea
add
fsubl
sti
and
cmpsb
jp
nop
push
adc
xor
inc
notl
out
jnp
je
mov
fs
inc
mov
sub
out
or
cmpsl
mov
pop
cwtl
lahf
imul
xor
jl
leave
push
jmp
sub
inc
cmpsl
adc
mov
mov
and
in
xor
sub
int3
sub
in
cmp
enter
pop
push
movsl
pop
push
test
add
adc
movb
push
hlt
mov
maskmovq
mull
and
xlat
and
pop
xlat
std
push
dec
stc
push
adc
mov
popf
adc
ret
movsb
loop
inc
pop
jp
roll
lods
out
and
sub
and
aas
sub
xorl
jl
imul
iret
in
data16
into
test
add
push
cmp
pop
fmull
in
pop
sbb
fs
jp
daa
xlat
movsb
sub
mov
or
rorb
pop
std
mov
fmulp
mov
sub
inc
pop
cmp
rcl
scas
cmp
sbb
rcll
push
push
push
add
jecxz
xor
or
push
mov
lret
dec
lea
dec
ror
roll
inc
push
gs
repz
pushf
fcmovu
les
movsl
les
dec
fimuls
add
add
stos
jno
push
and
pop
cltd
ror
xchg
lret
mov
imul
aaa
insl
lods
out
sub
xchg
nop
xchg
shr
jb
cmp
stc
sub
lock
mov
adc
add
pop
mov
notb
data16
lret
and
pop
movl
mov
xchg
mov
xchg
inc
sub
fnstsw
cmp
mov
push
and
out
filds
lret
push
lea
xchg
mov
rcll
add
add
dec
loop
std
pushf
and
lods
in
mov
call
aam
fildll
ror
xchg
ficomps
dec
iret
aam
xchg
stos
inc
mov
addr16
cmp
imul
mov
mov
xor
push
inc
pop
and
insb
add
insb
enter
push
lds
or
imul
in
negb
sbb
push
dec
or
mov
ret
hlt
mov
xchg
xlat
loopne
pusha
pop
add
sti
and
xchg
loope
inc
pop
daa
jecxz
mov
clc
notb
lcall
into
jge
sbb
hlt
mov
adc
shrl
movsl
movsl
lods
sub
and
movsb
cmp
xchg
pop
stos
js
cld
in
arpl
push
mov
fidivs
sbb
cmp
movsl
orb
aaa
insb
jbe
add
xchg
gs
popa
push
test
out
jmp
movsb
xchg
enter
dec
out
or
stc
nop
adc
add
mov
mov
inc
inc
pusha
das
mov
insb
dec
mov
push
in
in
call
jnp
adc
ss
out
lds
dec
aas
xchg
in
and
xchg
push
gs
out
pop
xor
aam
scas
hlt
mov
leave
sub
ds
cmp
gs
jb
lock
in
jno
cltd
and
sarb
outsb
mov
out
jecxz
mul
xchg
jmp
jno
fsub
pop
cltd
gs
mov
cwtl
push
std
inc
pushf
iret
inc
push
push
jmp
stc
maxps
mov
mov
xchg
xlat
push
pop
dec
in
or
pop
int
lds
or
xchg
data16
jne,pt
or
pinsrw
pop
cmp
mov
sbb
xchg
into
insl
outsl
sbb
push
xchg
inc
daa
scas
push
repz
adc
and
lret
stc
push
insl
lods
ss
rcr
fs
jnp
sbb
mov
cltd
shr
sbb
es
fcompl
push
subl
jp
fstpl
repnz
mov
fs
rep
mov
mov
cmp
inc
jge
rcll
and
out
push
js
inc
adc
rcrb
jbe
sti
mov
lods
cmp
sub
adc
mov
daa
inc
sub
mov
lcall
sbb
or
push
loopne
cmp
outsl
scas
ret
jecxz
fadd
push
xor
ja
push
mov
mov
dec
add
mov
cmp
dec
roll
push
fsts
mov
mov
add
aas
push
xchg
lods
dec
movsb
out
in
ljmp
sbb
rcl
movb
cltd
xchg
iret
push
add
xchg
push
into
insl
dec
sbb
or
jl
xlat
aad
test
sbb
orb
or
mov
xor
jne
arpl
and
popa
movsl
fistps
in
pop
jmp
jl
loopne
pop
arpl
ficoms
out
mov
aas
sub
ja
mov
jmp
mov
and
push
add
adcl
sbb
mov
mov
fistps
ja
andb
or
sub
aam
pop
outsb
imul
ss
test
aaa
mov
outsb
xchg
ret
sarb
sbb
inc
push
mov
pop
and
dec
subl
shll
or
lds
and
cs
ds
inc
mov
outsl
sbb
es
js
sbb
fldt
push
inc
lock
xor
pop
mov
add
out
movsl
in
jmp
gs
adc
ljmp
loopne
cmp
mov
inc
call
jnp
cld
es
mov
jo
mov
inc
loop
in
jle
mov
dec
dec
adc
fidivrl
sub
sub
cmp
add
into
fsubl
sbb
pop
daa
jnp
adcl
pop
push
cmp
jl
xchg
test
fcomp
push
fisubrl
push
popa
jmp
xchg
jl
dec
data16
pop
jnp
xlat
fsubs
addl
loop
test
into
jp
sbb
idivl
scas
sbb
aaa
aad
test
gs
sti
std
jl
test
lcall
sbb
fwait
xor
aaa
or
inc
int
cmp
dec
out
ljmp
adc
mov
jg
adc
aam
imul
pop
mov
dec
lret
arpl
mov
pop
mov
hlt
mov
lret
pop
adc
imul
cs
xchg
sub
adc
enter
scas
iret
loope
dec
xchg
data16
aam
adc
mov
mov
or
mov
dec
cmp
sqrtps
call
jmp
pop
or
mov
nop
sbb
movsb
pop
ss
das
pcmpgtb
int3
jne
imul
iret
in
loop
sub
dec
cmp
dec
add
push
sub
inc
or
add
fidivrs
sbb
sbb
outsl
dec
mov
stos
les
shlb
cmp
fwait
aad
mov
push
ljmp
int
cmp
mov
shlb
cmp
fsubrl
inc
imul
mov
adc
or
imul
mov
data16
push
push
cmp
mov
lahf
adc
jae
xchg
xor
imul
mov
fimull
aad
push
mov
jnp
jl
sbbb
cli
push
icebp
hlt
fs
xchg
aam
push
decb
push
jle
jo
bound
sbb
pop
test
jbe
sbb
dec
popf
aad
lahf
sub
sub
idivb
adc
pop
sbb
mov
aas
mov
or
dec
bound
lret
dec
xchg
add
roll
js
mov
inc
mull
subl
out
push
ret
clc
dec
dec
int3
loop
mov
inc
inc
mov
and
adc
lds
mul
xchg
lods
jg
inc
popa
cltd
and
inc
xchg
and
mov
orb
outsb
cmp
inc
mov
sbb
sbb
adc
and
into
mov
aam
test
fisubl
fwait
dec
and
mov
xor
dec
data16
adc
lcall
xchg
jp
add
add
mov
push
and
mov
popa
fmuls
cli
cmpl
inc
inc
jno
mov
or
push
sub
mov
rcll
xchg
aas
push
sbb
in
pop
push
and
push
lahf
push
fcoms
aad
or
loope
adc
pop
jne
stos
sbb
dec
out
std
sub
sti
out
lea
leave
push
lcall
movsl
mov
xlat
popf
pop
pusha
ret
adc
dec
push
cli
movsl
adc
mov
jns
scas
lret
push
lds
dec
arpl
mov
push
add
push
in
mov
xchg
mov
cmp
dec
lds
cmpsl
pop
clc
mov
arpl
pop
dec
and
jp
rorb
icebp
pop
pop
std
lds
in
sbbb
test
movsb
pop
addr16
int3
das
pop
cmp
and
cli
popa
push
imul
pop
push
gs
cmc
mov
cmp
rcll
orl
jae
jno
dec
stos
xlat
adc
pop
mov
xorb
jg
jo
xchg
xlat
stc
push
mov
fs
nop
ljmp
cmpsl
xchg
jl
loopne
mov
je
pop
test
fsubrs
pop
iret
pop
xchg
dec
push
cmp
mov
ja
xchg
movsl
out
mov
inc
pusha
push
data16
cmpsb
mov
andl
add
cwtl
adc
sti
testb
inc
fldenv
add
xorb
fcmove
stos
mov
jo
mov
addr16
cmp
inc
sbb
add
rorl
insb
aam
pop
daa
push
out
mov
js
lahf
mov
xchg
les
cmp
pop
dec
pop
out
add
lahf
je
divb
inc
and
inc
repnz
mov
iret
jge
and
or
adc
repz
inc
rcr
lret
adc
mov
nop
pop
inc
or
xor
ja
ret
xchg
xor
pusha
roll
das
fsubrs
mov
ret
pop
cmp
mov
cmp
jecxz
ds
out
jge
lds
ja
xchg
mov
fnclex
and
inc
push
aad
cmpsb
adc
and
sbb
cmpsb
clc
pop
or
xchg
jo
rcrb
fs
push
push
cmp
jbe
mov
test
fidivl
adc
mov
ss
xchg
imul
pushf
pop
add
mov
incl
jnp
lcall
jno
lcall
adc
xchg
pushf
adc
inc
mov
or
cmovno
js
and
cmp
adc
ss
out
or
pusha
inc
aas
mov
cld
jno
mov
mov
pop
inc
pop
test
xor
push
add
xchg
pop
and
idivl
or
or
jg
adc
lcall
out
call
clc
cvtdq2ps
call
mov
mov
or
adc
mov
out
idivb
scas
and
mov
push
loopne
push
jae
sub
push
inc
jle
jae
push
jle
jmp
push
repz
out
or
imul
cwtl
in
mov
add
cli
lret
pusha
roll
sbb
adc
xchg
movsb
and
or
loopne
aam
sub
fiaddl
or
mov
jns
mov
xchg
data16
mov
and
cs
xor
mov
sbb
sbb
test
sbb
mov
loopne
gs
xchg
outsl
push
rolb
jnp
or
repz
daa
or
cmp
adcb
jb
stc
adc
shrl
sarb
sub
push
mov
int
adc
and
jmp
mov
enter
xor
add
cmp
iret
fwait
inc
aas
rcll
popf
xchg
and
daa
mov
push
pop
xor
adc
lods
pop
jbe
jp
sbb
xor
hlt
add
xchg
cmp
cmp
mov
data16
mov
adc
jg
ljmp
pushf
mov
ja
push
fs
call
arpl
filds
lock
ret
mov
adc
mov
inc
sub
xor
lds
int
pop
leave
lahf
sub
sahf
pop
addr16
jmp
sti
lods
jmp
cs
es
sub
divb
pop
cmp
test
push
outsl
sbb
sti
sbb
adc
add
mov
lcall
xchg
add
je
aam
inc
repz
sbb
xchg
iret
dec
push
adcl
sbb
mov
ljmp
sti
imul
sarl
adc
ds
dec
js
shrl
insb
lock
std
fiaddl
xchg
sub
cmp
mov
add
sbb
into
lcall
and
jl
jbe
dec
and
push
out
jg
shlb
sub
mov
add
dec
xchg
iret
in
jmp
xor
jge
adc
int
movsl
rol
or
lock
inc
push
out
repnz
daa
inc
lret
push
xor
fsub
in
jnp,pn
push
mov
sub
fs
into
add
xor
insb
aam
or
test
call
mov
inc
pop
mov
sbb
cmpsb
jb
fcomi
pop
pop
pop
add
test
ret
rorl
jp
je
hlt
push
xlat
jp
test
rcr
dec
jb,pt
lea
xchg
out
subl
mov
clc
fisubl
lods
popf
pop
loope
clc
cmp
jg
mov
fldcw
sbb
aam
lods
sbb
repnz
sbb
jno
out
ficomps
testb
cltd
les
shlb
les
out
sbb
out
les
inc
fcompl
dec
push
xorl
add
add
lahf
popf
js
loope
jns
push
call
and
push
mov
sbb
dec
bound
or
xchg
jp
sub
lret
xchg
and
mov
cmpsb
jmp
nop
jbe
pop
andb
std
adc
pop
ja
ret
mov
lret
test
adc
sti
ss
mov
push
and
mov
mov
xor
iret
adc
ja
jmp
xchg
fnstenv
sbb
subl
in
cmp
xchg
mov
mov
and
movsl
sub
fsubrl
sbb
push
repnz
push
stos
xchg
mov
mov
scas
idivb
nop
leave
cld
popf
sbb
and
xchg
into
sub
lock
push
inc
or
imul
mov
inc
daa
adc
sbb
ds
popf
pop
aaa
mov
js
not
push
mov
loop
addl
leave
sbbb
and
mov
das
fidivs
add
or
lahf
daa
pushf
rol
inc
lods
jg
rcrb
xchg
sbbl
std
inc
and
sub
lret
je
pop
dec
and
and
or
jmp
inc
xor
lea
test
xchg
fisubrs
in
xchg
inc
push
dec
or
sub
adc
mov
ret
int
jecxz
jmp
xchg
mov
std
pop
int3
sub
lods
xor
pop
push
lods
add
xor
push
pop
rcll
jmp
fisubrs
adc
mov
xor
pop
inc
and
inc
sbb
push
mov
cmp
test
jmp
ja
out
pop
mul
cmp
jmp
inc
mov
mov
shlb
xor
mov
mov
gs
cmc
gs
hlt
adc
popa
jle
fwait
push
sub
divl
rclb
pop
jae
add
scas
or
mov
inc
add
adc
push
sub
cmp
and
mov
or
push
aad
inc
in
and
icebp
sub
or
adc
push
cld
js
loopne
xor
repnz
cmpsb
mov
mov
stos
rol
inc
out
adc
or
sar
popa
shl
or
shrl
cmp
mov
lcall
enter
dec
lds
mov
cld
movsb
cltd
leave
add
sahf
mov
pop
fdivrs
je
in
sbb
outsl
or
mov
inc
pop
pop
add
xchg
lods
lock
in
shrl
mov
insb
push
mov
out
roll
popf
jno
mov
aam
lea
dec
jne
int
lods
xchg
shrl
cmpb
xchg
ds
jo
andps
mov
out
call
out
int
movsl
rcrl
arpl
mov
add
sbb
mov
sub
adcl
sarb
orl
mov
or
ret
sbb
xchg
in
inc
sub
dec
cmp
xor
ds
push
test
xchg
xor
pop
fisubl
or
lods
xor
sub
push
sarb
fstpt
mov
ret
das
fidivs
cmpsb
imul
push
mov
dec
inc
inc
add
rolb
mov
jae
in
and
out
cmp
lock
dec
adc
fstl
jge
int3
ffreep
xor
insb
je
xchg
xchg
sub
ljmp
out
test
xor
jmp
mov
lcall
adcb
adc
xchg
lods
test
or
xchg
aad
sub
jl
inc
push
sbb
mov
jl
pop
sbb
popa
mov
popf
and
jg
lea
mov
cltd
sbb
mov
shrb
cmp
dec
or
repz
mov
cmp
lahf
lods
lods
mov
shlb
in
mov
cmp
aas
movsb
push
fs
push
jge
inc
testb
cwtl
xchg
jecxz
aam
pop
loope
push
sub
lock
sub
jg
fwait
push
movsl
cs
sub
pop
cmpb
inc
ret
push
lock
je
dec
sbb
cli
pop
pop
ror
lret
xchg
push
fwait
xchg
inc
cmp
lods
das
popf
mov
data16
jne
repnz
loope
adc
stos
xchg
mov
adc
push
pusha
add
inc
lock
jl
add
in
jle
bound
cmp
aad
mov
arpl
xchg
cli
sbb
xchg
aaa
mov
pop
lahf
jo
adc
pop
and
pop
insl
inc
out
fcmovne
pushf
mov
sub
insl
xchg
pop
push
pop
sbb
lods
out
sub
shl
out
xchg
xchg
sahf
mov
jecxz
and
std
cmp
aaa
aad
out
rcr
mov
sahf
das
inc
adc
mov
push
xchg
sbb
int
cs
loope
cwtl
cli
jmp
ljmp
pop
sbb
out
in
push
mov
out
movsl
push
icebp
push
jne
inc
aam
xor
sub
outsb
out
mov
sbbl
cmp
inc
jmp
mov
notb
idivl
xor
add
test
es
or
stc
xchg
mov
pop
in
push
fidivs
cltd
in
push
jbe
push
or
aas
or
inc
aaa
roll
loopne
lock
xlat
not
xor
lds
mov
inc
mov
ds
aad
mov
cmp
adc
adc
stos
push
stc
mov
fldl
test
jo
mov
and
out
push
out
lds
fisubrs
out
and
rol
cltd
and
lds
add
or
cs
stos
mov
pop
aaa
imul
stos
jo
add
mov
lcall
sub
pop
sub
mov
pop
push
xchg
fistpl
mov
daa
sub
jmp
jecxz
mov
aaa
roll
xchg
popf
push
out
les
adc
ficomps
push
out
int3
or
roll
fistpll
pop
pusha
mov
adc
add
lea
sub
mov
pop
lret
popa
xchg
jp
xchg
sbb
push
in
jbe
fldcw
lock
jbe
movsl
out
ret
sahf
fs
push
out
fbstp
and
mov
insl
push
inc
iret
pop
mov
push
add
mov
adc
xchg
jbe
fcoms
pop
jns
in
int3
sbb
iret
or
lret
lods
sbb
push
rcpps
xchg
and
inc
hlt
jp
mov
dec
cmpsb
scas
aas
jbe
mov
lea
retw
push
call
and
jae
outsl
mov
mov
mov
mov
bnd
xchg
jb
xchg
fcompl
dec
sahf
push
or
outsl
mov
sbb
sahf
push
sbb
inc
fistl
cmp
jmp
mov
add
jns
pop
mov
in
push
scas
xchg
mov
pop
sahf
inc
pop
sub
ja
dec
adc
sbb
rclb
pop
cs
xor
add
and
mov
dec
sbb
jl
xchg
adc
mov
add
fstps
bound
scas
int
mov
mov
mov
std
push
pop
inc
leave
add
xlat
jmp
adc
std
shll
dec
inc
repz
lcall
ja
imull
fdivrs
xor
pop
push
jl
jnp
arpl
fimuls
inc
dec
je
dec
push
dec
push
ret
push
mov
inc
shrl
xchg
inc
js
inc
sub
mov
fxch
sub
out
into
addr16
mov
and
pop
jp
stos
mov
lret
fistl
cmp
pop
inc
mov
cltd
aad
jmp
out
mov
rorl
clc
adc
std
mov
and
push
mov
rorl
or
test
movsl
cmp
jg
fists
out
stos
xlat
xor
push
insl
jmp
lea
andb
cwtl
pop
xchg
aam
push
stos
dec
or
push
sbb
push
sbb
ljmp
ljmp
sarb
mov
gs
jne
mul
pop
pop
cmpb
inc
mov
jle
dec
sbbl
incl
popf
out
xchg
out
sub
xor
sub
sbb
clc
out
mov
mov
jnp
or
inc
adc
mov
cli
scas
out
xchg
test
lahf
push
pusha
and
aas
outsb
or
jno
pusha
je
cmpsl
push
test
shll
in
jbe
pop
addb
cmp
mov
dec
and
lea
call
imull
loop
mov
mov
cmp
sbb
inc
inc
loop
pop
lods
lret
in
pop
cmp
adc
mov
inc
test
sbb
xlat
pusha
mov
push
in
or
fwait
cmp
aam
inc
js
xchg
mov
orb
int
mov
adc
clc
mov
mov
jle
inc
mov
mov
mov
outsb
aas
scas
mov
pop
mov
push
ljmp
cmpsb
jno
dec
and
scas
fsub
dec
es
pop
lods
or
inc
adc
xchg
dec
pusha
jp
js
xchg
mov
lods
inc
lahf
mov
mov
sub
jae
aam
push
xchg
out
xlat
xor
fisttpl
fsubp
iretw
enter
nop
les
xor
rcrb
arpl
sbb
out
inc
xor
mov
loopne
test
sub
imul
push
push
push
mov
jnp
andl
dec
sbb
das
sbb
test
and
lret
movsl
mov
jecxz
or
sbb
leave
ds
xor
adc
lret
xlat
lea
imul
or
jl
add
lock
or
mov
cmp
mov
and
xor
cld
pop
aad
roll
in
mov
xchg
pop
mov
mov
cld
loop
inc
cmpsb
push
pop
push
jne
xchg
lcall
ret
push
xorb
pop
cmp
inc
lock
pop
push
addb
shrb
sbb
jnp
mov
int
jl
fstpt
ljmp
jne
pop
sbb
mov
das
xchg
incl
mov
push
imul
sbb
test
push
ud0
xchg
hlt
out
loopne
or
jb
rcl
les
repz
push
pop
bound
dec
repz
jb
mov
push
call
mov
dec
xchg
xor
jnp
mov
sti
jb
dec
rcl
inc
in
push
imul
test
xchg
call
in
loopne
aaa
sub
iret
push
pop
pop
or
xchg
in
jmp
xor
mov
mov
cltd
call
lret
and
fstp
mov
xchg
jge
or
adc
testb
fisttpl
in
nop
repnz
int
xorb
mov
test
and
lret
mov
ret
jl
aad
mov
daa
imul
and
inc
inc
imul
aaa
push
icebp
subl
mov
adc
adc
sbb
inc
in
inc
sbb
mov
or
out
sbb
gs
push
adc
push
lcall
enter
in
cmpsl
add
fisubrs
push
cmp
sbb
scas
ja
jmp
into
push
outsb
mov
mov
add
xchg
jae
pushf
cmp
ljmp
add
fcmovbe
sbb
add
bound
adc
jle
sbb
mov
roll
or
jne
mov
xor
jb,pt
cwtl
push
nop
in
lcall
sbb
mov
pushf
mov
sbb
daa
add
movsl
xchg
jge
outsl
gs
shlb
mov
mov
pop
clc
sub
sahf
imul
call
in
xorl
lcall
adc
shrl
add
in
inc
mov
cltd
mov
jge
mov
lods
or
jmp
repz
imul
aaa
mov
stos
into
or
icebp
mov
roll
sbb
push
inc
dec
mov
lahf
cmpps
push
jge
lods
std
fsubrs
cld
and
gs
mov
insl
and
xor
xchg
dec
and
dec
mov
dec
aad
inc
jmp
pusha
xchg
addb
repz
add
adc
bound
lods
jnp
xchg
mov
push
loope
out
mov
bnd
stos
movsl
mov
outsl
push
dec
pop
mov
mov
std
dec
fistpl
sub
sbb
mov
jle
mov
addl
jns
roll
sbb
imul
aaa
dec
daa
mov
mov
xor
sbb
jnp
mov
clc
insb
js
mov
lods
xchg
jp
fs
popf
adcb
call
ss
pop
push
loop
sbb
addl
sub
gs
mov
and
testb
adc
sbb
xchg
mov
pop
notb
cmp
es
push
sbb
insl
stos
add
cltd
mov
xchg
and
pop
push
scas
jnp
arpl
push
and
and
jae
clc
push
or
call
fdivrs
andb
sti
stos
inc
push
aas
adc
jle
movsl
ss
dec
xor
std
cs
dec
out
sbb
fnstcw
and
daa
lret
jmp
push
cmpsb
stc
adc
aaa
int3
ljmp
loope
and
dec
pop
negb
pop
pop
scas
cld
lock
adc
int3
xor
out
xchg
sbb
cmp
cmp
xchg
fcmovnbe
cmp
fld
push
out
fwait
mov
pop
test
push
push
mov
ja
mov
or
jns
es
in
xchg
dec
sub
mov
pop
mov
gs
lods
sbb
leave
jl
fldenv
test
shl
push
aam
cmpsb
aas
jae
out
lea
push
divl
sub
sahf
mov
ljmp
fsubs
xor
mov
push
push
fwait
sub
jp
lcall
loop
dec
dec
mov
mov
test
sbb
jae
inc
aas
out
jnp
pusha
out
lods
push
dec
popf
xor
xor
add
loop
es
sub
and
mov
daa
mov
mov
sub
or
inc
push
mov
adc
fwait
iret
in
jmp
adcb
sbb
cmp
popf
les
in
add
movsl
mov
ret
push
rcrl
rcll
jne
fstps
dec
mov
and
scas
sub
and
es
das
push
xchg
in
pop
ret
leave
jmp
clc
cwtl
nop
sbb
push
push
add
adc
jb
bound
add
cmp
add
in
aad
pop
jnp
lcall
jno
cmp
pop
sub
pop
pop
mov
adc
add
rorb
ljmp
mov
add
dec
mov
xor
cmp
stos
mov
jns
cli
pop
sbb
push
ret
js
mov
cld
push
push
arpl
out
xor
decb
inc
lods
and
sbb
in
out
pop
aaa
ficompl
in
mov
in
mov
xchg
pop
mov
mov
aas
adc
xor
adc
add
cmp
scas
test
fstps
sti
jnp
adc
dec
sub
repnz
adc
xor
imul
imul
daa
mov
and
es
sub
mov
loope
rol
iret
sub
mov
mov
out
call
push
rorl
and
decl
ss
jge
adc
mov
mov
cmpsb
sbb
push
cltd
dec
push
jl
push
insl
add
das
loopne
pop
xchg
sbb
xor
outsb
cld
stos
mov
mov
decb
mov
mov
xchg
aam
xor
sti
gs
inc
jl
mov
cld
inc
adc
popa
mov
mov
mov
xchg
dec
mov
mov
jo
xchg
cltd
enter
testb
xchg
mov
jo
push
xor
pusha
fcoml
dec
arpl
arpl
ss
mov
lea
aad
mov
jge
xor
cmc
aam
push
cli
in
out
add
ss
lods
clc
jnp
aad
loope
push
lods
sbb
popf
xor
inc
push
movb
in
loopne
add
xchg
cli
push
or
mov
test
push
mov
pop
push
mov
or
xchg
jmp
mov
sub
mov
sbb
idiv
lock
add
cmp
sbb
pop
sbb
lods
in
ret
sbb
call
inc
pop
jle
sti
pop
xchg
sub
adc
and
pop
jns
sub
enter
lcall
rolb
jno
sarb
cld
jnp
lahf
dec
and
je
pop
dec
test
into
sub
cwtl
pop
fld
mov
out
sub
fistps
inc
std
mov
lds
and
mov
aas
icebp
cld
add
push
fimull
jb
mov
mov
xchg
ds
pushf
shrb
cmp
enter
inc
xor
ss
repnz
cmp
fdivl
and
and
add
add
into
xchg
cmp
inc
wbinvd
mov
or
or
pop
sbb
cld
xchg
xchg
adc
loop
sub
sub
jg
sarb
loopne
lret
add
sub
jne
sbb
jo
pop
jo
and
jp
std
icebp
std
mov
xor
mov
push
outsb
or
cmp
dec
fmulp
addr16
int
lods
ret
jno
push
sub
xor
cmp
je
jl
cld
rol
sub
xchg
pop
lods
push
cmc
push
push
xor
pushl
add
add
push
adc
cmc
push
out
test
and
fnstcw
mov
aaa
xlat
icebp
xor
mov
fldcw
add
js
jo
dec
out
dec
mov
out
or
out
in
lock
push
add
ror
sub
jmp
and
faddl
aaa
lock
cmp
insl
add
xchg
dec
ret
mulb
mov
call
cmpsl
aam
int
xor
arpl
negl
push
or
and
inc
jp
sub
cmpsb
adc
sbb
mov
pop
sbb
sub
aad
cmc
lret
add
test
mov
insb
lock
xchg
leave
add
jns
cmp
jne
cld
sub
fisttpll
push
test
adc
adc
lcall
xchg
push
getsec
mov
pop
ret
jl
xchg
pop
test
pusha
xchg
lea
mov
sbb
bound
push
movsb
divl
mov
jbe
outsl
in
cmp
outsl
rolb
arpl
xor
in
lods
xchg
jns
mov
es
test
rcrl
aaa
mov
and
mov
pop
cmp
test
cmp
sarb
pop
sar
insl
adc
mov
sub
jae
xchg
mov
xchg
and
mov
stc
or
or
cmp
fimuls
mov
mov
or
aas
sub
dec
outsl
movsl
mov
pop
dec
mov
push
or
xor
bound
ljmp
fistpl
push
popa
inc
sahf
cmpb
lahf
jle
inc
jns
push
mov
setns
or
mov
xor
mov
mov
push
ficomps
xchg
jle
pop
popf
mov
pop
jle
pushf
outsl
outsb
or
push
xor
movsl
popa
stc
or
jl
addr16
pop
dec
mov
push
shl
flds
sbb
mov
mull
and
std
cs
inc
sti
inc
js
inc
dec
rolb
jbe
push
ss
push
mov
jmp
xchg
add
pop
lret
icebp
imul
dec
sarb
dec
fdiv
hlt
das
pop
fwait
push
out
xchg
je
mov
icebp
inc
mov
fs
jne
xor
xlat
and
inc
xchg
push
push
fildl
lcall
xchg
fsubrp
mov
xor
cmpsb
mov
jns
mov
sti
inc
fcmovnb
sbb
aas
mov
in
loopne
shl
fiaddl
les
int
lock
or
out
out
xchg
push
xchg
mov
aad
dec
cld
add
sets
mov
cltd
mov
jo
sahf
fdivp
and
arpl
push
dec
cli
add
or
inc
shlb
lahf
iret
shll
xchg
adc
test
repz
addr16
xchg
sahf
popa
mov
push
mov
dec
dec
outsb
mov
mov
jne
ds
cmpsl
fdivrp
fnsave
sbb
push
xchg
divl
pop
loop
lret
lds
aam
cmp
fwait
sub
pop
jl
or
xchg
add
pop
mov
mov
inc
mov
popl
andb
faddl
jmp
xchg
xchg
sahf
add
fwait
orb
jae
jge
mov
sub
pushf
loop
mov
mov
out
inc
ja
jle
subb
fmulp
mov
dec
mov
adc
and
pusha
lea
push
imul
jo
les
mulps
loopne
fiadds
adc
push
push
lds
inc
xchg
outsl
or
pop
jle
or
jbe
rclb
jecxz
scas
jmp
mov
pop
int
aad
mov
idivb
and
dec
popa
test
inc
fsubl
push
push
or
sub
jno
add
sub
xchg
xchg
jns
fisubrs
loop
loope
bound
push
sbb
nop
mov
sub
mov
xchg
adc
adc
lea
pusha
push
aad
cmp
inc
outsb
cmp
cmp
mov
xchg
and
xor
cmp
xchg
nop
and
jno
sub
insb
add
xor
cltd
dec
push
cmc
int
cwtl
cmp
ds
call
sub
adc
pushf
pop
xchg
sub
arpl
int
ljmp
pushf
mov
movsl
add
xchg
xor
mov
test
or
jb
aas
push
adc
or
shl
cmpsl
loopne
or
xchg
pop
mov
push
loop
out
sub
inc
into
test
icebp
rorl
inc
movsb
stos
push
mov
xlat
jecxz
test
mov
cmp
and
pop
jo
test
inc
cwtl
jg
loopne
imul
arpl
ss
out
or
push
pop
mov
lcall
xchg
divb
insl
repnz
sarl
inc
aaa
mov
repz
mov
jecxz
out
outsl
adc
leave
jp,pt
fmull
clc
fmulp
call
push
push
cmp
mov
test
pop
stos
loop
jbe
lds
arpl
js
imul
imul
pusha
cltd
jae
sub
xchg
jg
data16
push
in
mov
loope
xor
mov
call
mov
xor
enter
inc
and
lret
sbb
pushf
test
push
and
arpl
scas
jge
xchg
ficoml
ret
fsubs
sbb
dec
dec
insl
shll
adc
xor
movsb
push
xchg
xor
push
add
stc
cmpl
or
nop
int
mov
rorl
sub
aaa
shlb
sub
pop
sub
fwait
mov
pop
xchg
addps
js
imul
and
imul
mov
xor
icebp
lods
pop
fimull
cld
inc
movsl
sub
sbb
in
in
ja
push
mov
rclb
sbb
scas
stos
test
mov
cmp
and
arpl
jbe
call
push
jne
jge
loop
ss
dec
mov
mov
jnp
int3
push
pop
outsl
aas
iret
and
sbb
xchg
or
cwtl
add
or
iret
adc
xchg
fdivrs
ss
ficomps
cmpb
add
xchg
lahf
push
dec
cmc
je
fiaddl
jp
test
sbb
mov
inc
int
pand
jle
adcb
sub
lock
out
add
push
int
fidivs
shl
int
fxch
or
jo
ret
aas
test
jno
mov
popa
mov
cld
popa
inc
xlat
imul
les
in
mov
imul
sbb
mov
sti
xchg
iret
mov
cmc
leave
out
and
push
mov
sbb
adc
sub
fnstcw
test
jmp
pop
mov
fucomi
pop
sbb
rclb
sub
mov
pop
xor
mov
lea
dec
add
lods
pop
xchg
jp
in
xor
mov
imul
jge
mov
pusha
clc
xchg
insb
inc
xor
loopne
testl
dec
inc
add
mov
dec
adc
adc
cli
repz
mov
ss
stos
mov
sti
shl
fwait
dec
adc
popa
jns
and
xorl
or
sbb
push
call
push
lds
aas
dec
xchg
mov
outsb
dec
daa
dec
dec
xor
sbb
shlb
dec
test
je
insl
dec
js
cmp
jecxz
push
orb
ja
xchg
aaa
or
push
das
push
add
imul
mov
jnp
inc
pusha
xchg
in
cli
push
xchg
push
addr16
adc
fcoms
add
and
das
loop
and
je
ljmp
pop
sbb
das
mov
sub
sub
test
adc
pop
cmp
jo
repz
cmp
ror
xor
xchg
stos
mov
push
xor
xchg
leave
sbb
fwait
cmpsb
jecxz
lret
rolb
push
xor
pop
mov
mov
lods
negb
loope
pop
in
mov
inc
hlt
xchg
pop
lret
mov
sbb
lods
mov
pop
jmp
pop
decb
pushf
xchg
out
stos
aam
enter
jge
ret
cmpl
pop
pusha
cmp
jp
mov
xlat
rcrl
cmp
and
ret
scas
jns
rclb
sbb
pop
push
xor
cmp
lret
rcrb
adc
xlat
cmpsl
mov
sahf
movsl
push
push
push
add
inc
cmp
adc
jno
inc
and
jge
in
shll
lea
jge
or
lcall
int3
nop
roll
and
add
mov
fists
cld
sub
inc
sub
and
shl
pop
or
test
pop
jl
or
sub
in
jle
iret
nop
cmp
mov
fsubp
imulb
jmp
xor
mov
icebp
dec
lock
xchg
sub
mov
lds
mov
rorb
fwait
cmc
mov
mov
daa
popa
sbb
sbb
add
jns
nop
sbb
pushl
lods
int
addr16
stc
sbb
pushf
clc
or
add
jge
mov
gs
xchg
jmp
or
xchg
inc
dec
sub
ret
imul
mov
cmp
dec
jo
ss
sti
cmovnp
or
mov
dec
mov
jg
jp
or
cwtl
ret
and
cwtl
ret
xor
push
lods
add
popf
push
test
mov
test
sbb
leave
mov
lods
mov
mov
lret
cmp
mov
dec
jno
push
push
cmp
mov
push
push
xor
les
cmp
movsb
out
stos
pop
test
xor
in
je
sti
xchg
repnz
add
cmpsl
add
inc
test
test
es
cs
ret
lock
jmp
mov
cli
xchg
sti
adc
call
rol
aam
fucomi
bound
movsl
pop
aaa
popa
daa
mov
xchg
add
add
xor
pushf
xchg
int
or
popa
xorb
pop
push
scas
mov
adc
iret
mov
inc
shrl
fmulp
push
inc
fildl
sbb
movb
cli
lods
lret
xchg
js
enter
mov
inc
sbb
dec
sbb
fistpll
adc
loopne
jno
mov
xchg
push
sub
mov
rol
je
das
xchg
nop
psllq
dec
js
lods
and
scas
sahf
outsb
call
rol
sub
shlw
pop
inc
aaa
and
push
sbb
sbb
lret
mov
cltd
cmpsb
iret
adc
pop
stos
sub
aaa
in
dec
divb
jbe
fcompl
pop
pusha
lahf
fwait
mov
fdivrl
test
std
inc
mov
pop
mov
push
dec
lcall
cmp
insl
add
sub
jnp
sub
push
dec
fucomip
movsl
aaa
mov
xchg
loopne
pusha
fstpt
mov
dec
dec
mov
add
push
jnp
ljmp
inc
pop
jns
sti
xchg
jae
inc
pusha
lods
push
popa
mov
sbb
mov
push
test
adc
cmp
scas
cld
cmp
out
jp
pop
out
in
lret
and
dec
iret
lret
fwait
pop
or
fs
outsb
lock
mov
enter
loop
vpunpckhbw
and
js
cmpsl
mov
push
movsl
xchg
enter
and
xchg
and
mov
mov
fsubrs
stc
jmp
or
sbb
pop
cmpsl
fisttps
icebp
scas
leave
inc
add
nop
jecxz
push
test
aam
push
gs
xchg
add
out
mov
lock
adc
shlb
sbbl
and
xor
add
std
mov
cmp
call
scas
pop
mov
sbb
sti
mov
adc
cmc
ficomps
loop
dec
adc
sbb
jg
js
xchg
mov
insb
xlat
lea
pop
mov
mov
add
lret
cli
pusha
cmpl
pop
inc
movsl
mov
mov
into
inc
out
fsts
cmp
cmp
fidivl
mov
sub
imul
mov
dec
scas
xchg
inc
and
xor
lods
sub
jb
mov
outsl
iret
or
scas
dec
push
and
cs
pop
push
add
inc
pop
and
stc
fidivl
dec
dec
inc
sub
fxch
sahf
cs
push
insl
xchg
in
fs
ds
cmpsb
sbb
movsb
mov
jmp
xor
cs
insl
bound
jg
cmp
test
and
clc
lds
je
jmp
filds
pop
add
adc
push
jle
push
sub
sub
dec
xchg
popf
stc
mov
add
dec
daa
mov
call
sub
mov
dec
fwait
mov
clc
add
or
dec
sbb
mov
cmp
inc
mov
push
in
cld
loope
das
push
sahf
inc
lea
in
mov
adc
sub
mov
sbbb
or
and
xchg
pop
pusha
andl
lahf
inc
repnz
icebp
fwait
rcll
or
call
cmpsb
mov
ja
xor
inc
xchg
ljmp
insl
aaa
adc
arpl
mov
sbb
popa
cld
cmp
inc
faddl
movsb
mov
int
and
jl
jmp
clc
pop
sub
push
xchg
sbb
xchg
cmc
incb
inc
outsb
add
pop
stos
adc
lock
iret
movsb
out
sbb
and
cmpsb
dec
dec
add
push
pusha
jle
dec
call
push
mov
lahf
dec
pop
xor
orl
pop
push
stc
sbbb
push
daa
jnp
jo
pop
jle
mov
pop
mov
or
rcr
and
inc
mov
and
fdivrs
jb
jl
out
call
aad
cltd
pop
jge
mov
push
xchg
mov
subb
pop
or
dec
sub
pop
xor
insl
adc
call
xor
sbb
in
xchg
sbb
cmpsl
cli
js
lcall
dec
mov
imul
adc
xchg
fcmovbe
subb
sbb
cld
cmp
push
or
mov
xchg
jae
or
shrl
test
sbb
mov
push
popf
dec
dec
xchg
addr16
mov
popa
push
cmpsl
jns
outsl
jge,pn
clc
mov
imulb
mov
aas
ret
int
jne
daa
fnstsw
test
out
xchg
fists
cmp
mov
mov
fnsave
movsl
movb
mov
push
mov
pop
and
push
iret
loope
in
in
mov
sub
arpl
sbb
fistpl
pop
push
fbstp
iret
popf
pop
lock
cld
push
mov
fucomp
ds
mov
test
loop
cmpsb
cli
sti
arpl
fstps
les
lcall
jl
mov
jo
pop
inc
sub
pop
outsl
pop
shrb
jmp
lods
pop
out
dec
mov
mov
popa
push
inc
ljmp
xor
push
in
jbe
gs
dec
mov
cmc
out
movsl
syscall
inc
jecxz
sbb
xor
ljmp
aad
mov
dec
push
popl
sub
test
inc
es
or
fnstcw
sub
repz
nop
pop
xchg
xor
out
mov
jle
cwtl
stos
inc
test
mov
add
cmp
jl
jl
int3
je
push
or
test
add
movsl
je
out
dec
loope
out
push
fnstenv
in
xor
push
out
xor
jb
mov
mov
cmp
inc
push
mov
fnstenv
out
negb
aad
sub
std
mov
repnz
into
push
scas
test
nop
les
fmull
pop
or
mov
push
lods
and
repnz
lret
inc
insl
outsl
ljmp
inc
icebp
jge
fdivl
sub
sub
aam
mov
mov
inc
xchg
push
inc
jge
out
iret
scas
fdivl
mov
cmp
mov
les
xchg
addr16
fistpl
pop
or
call
popf
jns
ror
sbb
pop
addr16
sub
insl
push
mov
insb
bound
pop
pop
dec
jnp
loop
std
mov
adc
pushf
push
push
mov
dec
mov
xchg
in
ret
dec
gs
fldcw
jle
mov
insl
cmp
lahf
jnp
push
subl
sbb
pop
insb
xchg
pop
in
cmp
cltd
xchg
sti
outsl
sub
dec
in
pop
pushf
je
jmp
rcl
xchg
in
mov
lret
adc
xchg
fildl
les
mov
out
aam
cmp
gs
outsl
enter
daa
cld
aas
and
push
iret
int
xchg
lcall
popf
mov
aad
addr16
cmpsl
push
out
lahf
inc
dec
testb
daa
add
xchg
xchg
loopne
cmpb
push
lret
stos
xor
inc
sti
sbb
loopne
fisttpll
jle
pushf
pop
xchg
cwtl
aam
clc
xchg
outsb
mov
int
stos
fldl
xor
xchg
insl
mov
shll
lods
mov
fadd
mov
std
sub
sub
je
imul
jmp
xlat
jecxz
cltd
fisubs
fldt
xchg
lods
ljmp
mov
clc
xor
fst
cmp
push
adc
mov
xchg
cli
xor
and
rclb
sub
sti
mov
fimuls
xchg
xchg
push
adc
sar
mov
daa
sbb
int3
dec
push
sbb
add
repnz
pop
or
pushfw
loop
xchg
and
cld
adc
lock
push
std
aas
sarl
sub
mov
push
jb
aad
stc
push
add
mov
push
dec
inc
iret
xor
or
ror
es
pop
add
adc
dec
sarl
aam
cmp
dec
jmp
je
fucomp
je
cltd
mov
ds
test
cmp
icebp
sbbl
lret
mov
test
jo
cmp
or
push
cmp
cmc
inc
enter
scas
je
bound
shl
stc
inc
es
mov
xor
clc
mov
int3
inc
xchg
pusha
or
sub
or
xchg
inc
cltd
sub
outsl
cmc
into
outsb
jne
aaa
inc
sub
mov
xchg
cli
sub
push
fnstenv
pop
and
pop
dec
out
jmp
xchg
xor
push
in
cmpsb
xchg
int
cmp
sub
push
test
aam
jp
mov
jb
inc
push
adc
jg
jge
test
xchg
pop
ss
mov
push
jo
fdivrs
inc
imul
inc
in
cs
sub
xor
inc
insb
sbb
leave
jg
inc
repnz
clc
inc
push
adc
mov
mov
shlb
mov
cmpsb
icebp
js
jmp
pusha
mov
rcrb
or
add
dec
cmp
loopne
dec
xor
cmp
adc
call
xor
sbb
cmc
jl
cld
inc
add
addr16
jae
pop
mov
js
mov
dec
cmp
xchg
hlt
cmpsb
mov
add
dec
aaa
cmp
stos
adc
mov
and
add
add
add
mov
es
outsl
sub
push
cld
std
adc
sbb
lds
out
imul
cmp
mov
mov
dec
fimuls
mov
rcll
mov
stc
enter
shr
adc
nop
jg
lock
lcall
cmp
pop
std
mov
mov
fistps
sahf
push
mov
pop
pop
and
push
test
repnz
sbb
dec
adc
xor
rorb
inc
dec
insl
or
mov
sub
icebp
or
nop
cmp
out
cli
push
jae
int3
add
jbe
add
inc
fbstp
mov
ds
add
stos
xor
aam
pusha
lcall
jmp
incl
pop
fwait
xchg
add
test
and
cmc
ror
loope
popf
mov
or
dec
daa
sbb
adc
nop
subl
inc
sbb
sbb
iret
inc
stc
roll
or
cmpsb
mov
popa
xor
mov
cmpsl
sub
divl
jo
lcall
mov
fdivp
push
inc
movsb
xor
and
in
test
int3
pushf
add
mov
pusha
fstps
pop
sbb
int3
or
or
sub
sti
jmp
movsl
ficoml
fsub
cmp
pop
lds
inc
repnz
pop
into
cmp
xor
mov
sbb
push
mov
sbb
sub
sbb
jnp
cs
lods
test
lds
mov
vmovddup
sarl
and
ljmp
xchg
mulb
lret
enter
push
xchg
roll
ret
movsb
fisubs
lahf
fstpt
mov
pop
jle
jae
push
dec
movsl
movsb
testb
pop
popa
jl
movsb
outsb
fxch
les
xchg
insb
pop
xor
out
or
cwtl
adc
lods
in
add
shlb
push
sub
dec
cltd
orb
mov
cld
sbb
idivl
push
mov
jne
loope
mov
and
or
cli
sbb
cmp
or
mov
shrb
cmpsl
pop
movsl
out
into
in
or
add
int3
int3
mov
aam
mov
clc
cmc
mov
insb
adc
xchg
inc
add
and
lods
fsts
out
sbb
inc
or
lcall
inc
sub
dec
lret
jle
pusha
lds
jg
pop
lcall
cmpsl
mov
dec
xchg
dec
jg
and
sub
inc
xor
sub
add
scas
repz
and
mov
outsl
aam
lods
stc
or
adc
adc
sub
xchg
xor
into
cmc
aas
inc
sti
test
cld
rcrb
imul
xchg
xor
sub
or
mov
loopne
push
stos
adc
mov
mov
push
adc
cmp
inc
mov
lcall
pop
lods
cmp
arpl
and
sbb
fmull
mov
scas
xlat
scas
xchg
mov
test
pop
outsb
push
dec
loopne
mov
dec
xor
push
out
push
push
sahf
dec
ret
mov
inc
stos
jge
adcl
mov
pop
call
sbb
repz
outsl
int3
hlt
popa
lret
popa
stos
aam
lret
jge
inc
dec
in
push
faddl
add
stos
enter
das
mov
jo
stos
fsubrl
subb
xchg
sbb
mov
xor
jne
jl
sbb
out
pop
push
notl
fildl
and
dec
scas
mov
js
dec
inc
and
scas
push
mov
dec
sub
pusha
xchg
cmp
mov
notl
inc
xor
and
dec
in
pop
mov
std
jae
movsl
mov
or
call
push
sub
testl
push
and
dec
mov
outsb
sbb
scas
xchg
jns
not
push
incl
pop
cld
ja
mov
in
xchg
jmp
sbb
ficoml
xor
adc
jecxz
xchg
js
jg
scas
out
mov
ljmp
call
dec
cmpl
or
les
rcrb
mov
inc
ret
fistpll
testl
jb
mov
lret
jge
inc
xor
cmp
ret
ja
mov
cmpsb
cwtl
jp
push
push
repnz
cmp
mov
mov
jne
dec
mov
lret
or
or
shlb
ret
jge
sbb
xor
pop
fwait
ja
nop
add
dec
ds
push
sbb
push
rorl
add
sti
int3
lret
and
insl
sbb
jns
fs
inc
xchg
and
or
add
dec
xchg
loop
scas
push
es
or
imul
pop
jbe
in
pop
mov
ficoml
popa
fwait
inc
push
pop
test
test
mov
jb
jg
push
dec
mov
jmp
cmp
in
and
xchg
insb
jg
daa
xchg
imul
mov
out
push
out
ja
popa
xor
shrb
scas
outsl
add
std
ret
call
or
mov
incl
fbstp
mov
sub
or
adc
lahf
ljmp
pop
orb
aad
pop
repnz
add
cmp
xchg
scas
into
notb
int
fxch
inc
inc
iret
and
stos
lds
insl
mov
mov
pop
call
xor
sahf
lret
pop
in
test
push
lret
in
xchg
fiadds
adc
int
push
cmp
add
add
sti
mov
xchg
lahf
adc
add
inc
add
fldcw
pop
jmp
in
or
mov
xlat
sbb
lods
add
push
ljmp
add
mov
xchg
sbb
outsb
jo
lds
mov
dec
ja
or
mov
mov
sti
nop
lock
cmp
sub
cmp
or
aam
jbe
and
xchg
aad
xchg
pop
lahf
in
pop
and
bound
lret
or
pop
sub
pusha
push
or
daa
pop
daa
pusha
inc
loopne
mov
dec
enter
nop
pop
jnp
cmp
cmp
repnz
std
cmp
sub
sbbl
mov
inc
adc
mov
test
cmp
cmp
in
cmp
pop
bndldx
mov
sub
adc
push
cmpsl
dec
rcr
inc
mov
dec
das
inc
ss
push
repnz
sbb
fisttpll
xor
inc
dec
xchg
xchg
cmp
in
xchg
fs
shr
movsb
mov
or
push
jns
xchg
lahf
popa
push
leave
aad
popa
lret
sub
shl
cs
les
pusha
pop
dec
andb
sub
jmp
stos
cmpl
push
cmpsl
jae
int3
pop
xor
arpl
stos
xor
push
icebp
mov
int
xchg
jmp
xor
das
rorb
jne
test
xchg
popf
lods
xchg
ljmp
mov
mov
out
mov
mov
lea
subb
addr16
or
sub
dec
jae
pop
insl
pop
dec
leave
imul
adc
ret
scas
ret
mov
in
pop
mov
adc
fbstp
adc
movsl
push
add
out
add
and
jp
ret
call
inc
xchg
dec
mov
movsl
pop
lret
xchg
out
cmp
popa
xchg
mov
gs
or
sub
ss
loopne
push
lock
sbb
mov
xor
adc
mov
pop
aas
daa
sbbl
jp
xlat
cmp
fsubs
sbb
xor
pop
outsb
jnp
mov
jbe
rclb
xlat
adc
xchg
mov
mov
jne
mov
je
test
lcall
popa
fdivrl
movsl
call
test
inc
in
adc
loopne
jl
shr
js
int3
xchg
add
std
aaa
movsb
sub
xor
adc
cli
xlat
push
mov
clc
inc
fnstenv
adc
ret
mov
jns
pop
in
jecxz
les
adc
roll
insb
sbb
cwtl
mov
dec
add
test
mov
xchg
into
push
mov
adc
inc
lret
push
push
cmpl
cmp
and
inc
lret
push
fbld
xor
shll
push
add
mov
cmpsb
push
fldl
jmp
pop
jb
inc
and
mov
addb
xchg
adc
popa
shrl
movsb
or
loop
fwait
pusha
aaa
sbb
mov
je
stos
jl
repz
inc
fmuls
cltd
inc
push
fisttpll
aas
sarb
xor
out
into
sbb
add
xorb
and
mov
mul
out
mov
imulb
adc
shlb
mov
adc
lock
icebp
inc
and
nop
pop
pop
push
jbe
mov
scas
jb
sub
jnp
loope
rorb
pushf
out
pop
dec
iret
jae
in
pusha
into
dec
stos
pop
testb
bound
bound
ror
out
in
mov
push
fwait
dec
scas
imulb
dec
daa
mov
sub
adc
or
inc
jmp
pop
cmp
xor
or
xchg
and
xchg
aas
test
lahf
lret
test
cltd
xor
aaa
scas
xchg
enter
test
pop
push
movsl
xlat
sar
xchg
adc
rorb
sub
enter
or
test
and
movsl
call
mov
cmp
in
mov
outsb
bound
fistpl
out
and
sub
arpl
mov
cmp
or
add
mov
dec
insb
and
adc
in
sub
mov
cmp
dec
adc
dec
pop
fsubrs
jecxz
push
mov
sbb
sub
jo
hlt
inc
xor
mov
xorl
popf
pop
xchg
repz
mov
xor
mov
inc
jmp
outsl
jp
add
add
js
aad
xor
addb
and
sub
dec
insb
pop
mov
iret
mov
jg
cmp
shr
adc
jo
push
stos
cmpsb
lret
cli
lret
je
inc
in
mov
dec
fwait
outsl
push
lods
pop
sti
mov
pop
push
xor
mov
repz
leave
xchg
int
movsb
daa
hlt
popa
data16
stos
sub
arpl
adc
fidivrs
pop
xchg
jbe
scas
pop
xchg
test
pop
sbb
xchg
rolb
push
in
test
pop
imul
loope
push
and
lock
xchg
lret
fs
int
sbb
cmp
xchg
mov
mov
adc
int3
pop
push
rorb
sub
sub
xchg
add
cli
mov
add
test
cs
sub
test
dec
mov
xor
cmc
aad
lcall
xlat
popa
lods
inc
mov
lea
add
ficomps
and
cmpsl
pop
scas
jl
ja
mov
cmp
cwtl
cltd
pushf
xor
pushf
enter
sub
mov
xchg
or
addr16
jle
call
and
inc
enter
out
mov
jp
xor
jnp
cmp
cmpl
mov
xchg
ret
xchg
pushf
or
sbb
inc
xor
jae
pop
dec
cmp
add
imul
xor
mov
jp
subb
mov
or
test
jg
out
es
rorb
loopne
das
adc
mov
fistl
insb
jo
out
xor
xor
divb
dec
xor
hlt
das
scas
xchg
push
arpl
adc
into
int
dec
jb
imul
push
and
push
pop
and
lret
push
mov
scas
pop
xor
push
cmc
cli
sbb
repz
mov
ljmp
ss
dec
fimuls
fnstenv
pop
push
outsl
call
cmp
in
popl
sub
push
insb
and
rcrb
mov
std
mov
push
out
mov
aaa
lods
adc
jb
cmpsb
mov
imul
sub
xor
addr16
out
and
push
dec
addr16
add
xchg
mov
imul
adc
mov
jbe
cmpsb
mov
cltd
es
lock
add
dec
ror
icebp
hlt
hlt
imul
int3
xor
sub
sub
fmull
inc
xor
xchg
hlt
sub
sbb
pop
imul
movd
push
jb
mov
xor
outsl
mov
scas
ret
adc
jns
adc
ja
imul
js
or
outsb
movsb
insl
lock
in
insb
xchg
add
sub
aad
jge
shlb
cltd
into
push
pop
pop
arpl
scas
push
push
lret
jle
add
dec
and
stos
cmp
push
cmc
outsl
psubsw
pushl
ss
addr16
call
pop
add
mov
pop
push
sub
dec
sub
lods
cwtl
out
adc
sub
imul
loope
sub
mov
cmp
jl
xchg
or
push
adc
jnp
mov
fxch
js
jmp
add
cli
push
cwtl
jbe
nop
fsubr
dec
pop
daa
scas
adc
rorb
rorl
mov
mov
inc
xchg
or
cmpsb
xor
outsl
jle
mov
xor
popa
mov
jmp
js
jbe
stc
pop
pop
mov
sarl
sub
out
sbb
sar
test
cld
les
push
je
pusha
sahf
outsb
test
iret
scas
out
adc
fs
cmp
daa
fmuls
push
push
insl
pop
lret
inc
or
pop
cmpl
fcmove
xor
jne
mov
push
push
lcall
mov
dec
sbb
add
mov
roll
bound
adc
dec
shrb
and
jo
jmp
pop
mov
or
push
sbb
movsb
pop
insb
je
add
dec
fisttpll
out
inc
dec
iret
adc
sbb
adc
push
icebp
push
pushf
or
ficoml
test
ret
jae
inc
sub
mov
push
push
or
adcl
and
leave
or
ja
or
mov
cltd
fcmovbe
jecxz
dec
dec
push
mov
jno
xlat
stos
adc
mov
aaa
fwait
jg
enter
dec
and
lret
sub
nop
cmc
mov
sbb
xchg
push
pop
mov
xlat
lock
inc
mov
dec
xchg
cs
scas
pop
sub
ret
repz
add
pop
fsubrs
pop
imul
cmp
cmpsl
clc
xorb
cmpsb
mov
fwait
repnz
xor
outsb
jge
outsl
xlat
xor
xchg
jge
fnstsw
xchg
mov
fstps
je
jno
addr16
sbb
xchg
lea
orb
stos
sbb
lret
clc
sbb
jp
add
ret
ja
dec
push
adc
cmpsl
dec
push
insl
adc
les
adc
lret
in
insb
jmp
dec
xchg
je
js
sahf
fistl
test
mov
pop
mov
adc
jge
testl
mov
dec
inc
mov
or
jl
mov
mov
push
gs
sahf
fildll
pop
loopne
enter
aam
jge
xor
pop
dec
int3
test
mov
cmp
or
and
sbb
stc
and
addr16
sub
mov
cmp
or
mov
or
mov
sbbb
jl
sti
testb
andl
adc
sahf
cmp
jbe
add
cmp
push
cmp
mov
pusha
enter
fdiv
jg
ja
mov
cltd
jnp
mov
inc
pop
jl
adc
adc
cmp
inc
cmpsl
push
or
xchg
xchg
bound
push
arpl
or
jg
dec
iret
sub
add
sbb
adc
sbb
sub
sub
mov
jno
call
pop
ja
adc
lds
cld
xchg
mov
out
imul
dec
pop
cmpsb
mov
in
and
jo
pushl
aad
idivl
add
aad
addr16
vandps
xor
or
test
xchg
sub
int
jns
or
pop
inc
inc
jmp
inc
loopne
mov
fcompl
xor
outsb
call
test
test
mov
pop
xor
stos
je
sbb
sub
jo
iret
bound
and
adc
jl
jp
lahf
sbb
or
call
mov
loop
xor
lds
fs
inc
pusha
pop
mov
xchg
bound
mov
aam
cmp
sarb
dec
pop
lods
jnp
loopne
and
data16
inc
xchg
scas
push
mov
sub
mov
ljmp
mov
cld
mov
xor
pop
add
in
scas
in
call
inc
fcomp
jnp
test
or
pop
cmp
out
mov
shrl
adc
xchg
add
jbe
pop
adc
popa
dec
pop
mov
pop
sub
imul
or
add
popf
jbe
xchg
adc
sarl
ret
notb
jle
jecxz
push
ss
add
and
sbb
fsubrl
mov
mov
clc
jmp
mov
pop
sbb
ret
icebp
dec
jge
test
mov
add
xchg
in
cmp
and
imul
fnstcw
xchg
jmp
repz
add
push
xchg
xchg
inc
and
fisubs
js
add
pop
xor
sbb
cld
adc
out
outsb
cs
aad
mov
xchg
pop
insl
or
je
sub
mov
fdivp
mov
fldl
pusha
ja
jmp
stos
inc
lahf
mov
sahf
push
mov
pusha
mov
int3
fadd
mov
jg
popa
cmpsb
scas
jnp
cmp
inc
ret
loop
inc
fcoms
push
push
mov
cmpsb
lahf
pushf
dec
xor
enter
push
rolb
xor
xorl
push
adc
leave
into
mov
mov
adc
gs
xchg
inc
xor
pushf
lcall
push
stc
lret
mov
sbb
aad
push
mov
test
mov
cmpsb
and
lods
out
add
push
aaa
insb
mov
stos
loopne
cmp
mov
push
pop
xchg
aas
fiaddl
stos
jbe
jne
hlt
roll
cmc
stos
xchg
or
adc
pushf
dec
testb
jge
lcall
cmpsl
cmpsb
add
pushf
rep
mov
hlt
stos
js
mov
inc
leave
jl
ret
outsl
into
cmpb
imul
and
dec
adc
dec
pop
test
and
and
pop
push
push
sbb
repnz
into
mov
xor
jnp
push
rcrb
int
rcrl
cmp
sub
lret
roll
mov
mov
jg
cltd
fldenv
outsb
push
shrl
mov
mov
loopne
sub
fwait
mov
imul
or
lahf
fwait
test
in
or
add
xchg
test
dec
mov
jnp
add
pop
sti
xor
jne
lret
out
gs
add
mov
xor
mov
and
and
pop
les
lock
aaa
or
jno
imul
ja
xchg
addr16
fwait
shrb
stc
rclb
int
stos
fs
int
sub
jmp
test
jmp
push
pop
stos
cwtl
andb
ret
call
jp
cmp
cs
pusha
sub
lret
icebp
jae
and
add
cmp
pop
or
mov
inc
ret
lea
sbb
daa
in
push
jno
fsub
dec
movsb
dec
mov
mov
xchg
jnp
cmp
or
repnz
lahf
xchg
int
test
inc
loop
jns
xchg
out
mov
jo
adc
repnz
xchg
xlat
sbb
push
fsub
lock
cmp
fmull
mov
mov
aam
stos
xlat
mov
jns
adc
push
icebp
pop
jbe
and
cs
jae
xchg
rorb
pop
dec
fwait
xchg
jnp
clc
imul
pop
pop
jbe
and
fistpl
inc
cmp
out
mov
lds
lods
stos
dec
test
xchg
pop
mov
adc
add
xlat
jne
lcall
add
mov
jg
mov
in
push
mov
fistl
int3
insl
cmp
std
pop
sub
inc
shlb
jmp
dec
mov
insb
adc
sub
fsubrs
lcall
aas
fmuls
sar
add
ljmp
mov
jnp
push
push
push
fmuls
jno
outsb
sub
in
lds
or
scas
rcll
or
fcmovbe
cmpl
adc
in
std
fcompl
rcll
and
cmp
add
mov
sbb
jns
or
hlt
test
mov
shl
xchg
xor
push
xor
fbstp
addb
out
jmp
adc
adc
pusha
mov
lds
or
es
sbb
jecxz
jo
cmpsl
or
mov
pop
add
xor
jge
xchg
out
adc
xchg
push
inc
rolb
stos
xor
adc
fldenv
mov
rcrb
mov
out
sub
adc
inc
dec
lea
ljmp
mov
pop
ja
out
icebp
mov
cmp
fistpll
test
movsb
es
out
push
std
pop
xchg
cli
mov
inc
insl
ja
and
dec
lods
sarb
sbb
jmp
xor
inc
mov
add
out
sbb
loopne
pop
pop
cmp
jge
sub
pusha
sbbl
movsb
xor
push
and
cld
sti
test
xchg
jmp
pusha
jo
push
or
xor
xor
incb
dec
or
pop
pop
or
adc
jne
pop
pop
ret
cltd
sbb
insl
pop
adc
out
push
lret
movsb
push
inc
push
lret
lods
popa
pop
inc
mov
mov
and
jno
xchg
outsb
pusha
pop
mov
aam
adc
sub
cld
lods
dec
in
or
testb
push
cmp
imulb
inc
and
adc
push
loope
jl
fildll
add
add
add
ficoml
inc
push
adc
xor
jo
or
and
adc
push
xor
sbb
and
mov
test
push
pusha
xchg
pop
scas
and
sbb
jnp
adc
int
ror
shlb
pop
test
jl
gs
adc
imul
out
lods
ficoms
leave
pop
and
pop
xchg
int3
add
xor
ljmp
dec
jo
jbe
mov
dec
or
fcompl
out
jne
andb
and
in
dec
jmp
push
and
adc
int
sub
decb
sbbl
push
loop
push
dec
andl
lock
jmp
mov
and
adcb
fisubl
hlt
stos
mov
xor
adcl
jecxz
subl
movsl
outsb
push
pusha
pop
out
mov
push
jmp
mov
sbb
add
and
in
pop
fisubrl
and
inc
and
mov
outsb
push
xchg
push
xor
aad
nop
jmp
xor
adc
sbb
aad
mov
in
jae
popa
cmp
push
je
out
adc
dec
les
sub
popl
bound
shlb
out
adc
xchg
sub
or
mov
xchg
xor
inc
pop
push
jg
out
mov
fdivs
mov
xor
xchg
xorb
dec
mov
pop
mov
insb
mov
pop
and
mov
mov
xchg
dec
test
mov
ds
jns
cld
lret
push
ljmp
scas
rclb
xchg
xchg
leave
scas
or
xchg
push
xchg
orl
insb
xchg
sub
out
sub
adc
mov
icebp
lods
add
gs
popa
and
je
fwait
sub
cli
pop
and
mov
insl
jmp
jp
add
cmp
xchg
ds
fs
add
mov
dec
fs
cs
decl
fildl
push
lahf
add
cmp
nop
sbb
arpl
xchg
enter
scas
fmuls
inc
in
rol
popf
cwtl
mov
or
outsb
mov
pop
mov
pop
je
adc
adc
daa
int3
pop
adc
outsb
addr16
scas
in
int
test
fst
jmp
dec
sbb
and
inc
push
movsl
push
loope
cmpsb
xor
or
fdivs
daa
xor
fldenv
cmpsl
fidivl
jno
das
jno
ret
jle
mov
jp
push
sub
scas
cmp
je,pt
mulb
ja
scas
sub
pop
jne
pop
xor
add
xor
xchg
hlt
shl
xor
lahf
lcall
movsl
out
insb
lock
push
mov
lret
or
fildl
cmp
jg
loop
shrl
xchg
mov
jae
inc
sub
orb
xchg
push
movsl
adc
pop
mov
movl
outsb
cmc
bound
jg
pop
pop
je
mov
int3
or
icebp
xchg
int
cltd
or
push
loopne
gs
inc
fbstp
dec
jmp
data16
cmpsb
mov
loop
push
xchg
std
pop
out
jecxz
rorb
mov
pop
inc
inc
adc
jge
sub
xchg
cli
sub
mov
out
fs
mov
mov
insl
mov
push
test
rcrl
lock
pop
or
jae
cmp
xchg
dec
jecxz
fidivs
dec
and
fwait
push
fs
mov
mov
mov
mov
pop
fnsave
mov
sbb
out
cwtl
sub
sbb
push
push
add
mov
jo
pop
xor
pop
xor
nop
cmc
inc
insb
nop
pop
test
fmul
mov
mov
das
fnstenv
cmc
rcrb
jb
and
push
and
out
adc
cmp
sub
aas
out
adc
push
inc
cmp
js
push
hlt
pop
push
call
add
cltd
mov
out
repz
sahf
adc
push
adc
and
push
ja
pop
mov
sub
inc
pushw
fidivrl
imul
fnop
xchg
and
into
aas
jp
cmc
push
or
mov
insb
push
sbb
pop
xor
dec
mov
sbb
mull
jo
inc
xorb
test
or
cwtl
inc
and
popf
das
jae
mov
xor
popa
aad
popf
bound
gs
cmpsb
adc
into
inc
clc
jecxz
mov
cmp
shll
stos
lahf
stc
xor
cmpsl
inc
mov
cmc
dec
pushf
les
std
mov
xchg
bnd
xchg
cwtl
sub
push
pop
cltd
jmp
rcrb
jo
enter
sti
or
aas
ret
ja
popa
pop
inc
inc
mov
iret
popa
lods
loop
xchg
add
cwtl
mov
es
and
cli
pop
scas
cltd
dec
hlt
and
xchg
sub
xchg
push
add
orb
jl
mov
hlt
cmp
lods
fistps
jp
fisubrs
adc
adc
lahf
test
aad
je
push
xor
mov
rol
push
pop
jns
xor
inc
mov
addr16
pop
andl
sub
test
xchg
aas
rclb
and
dec
lea
push
inc
lret
push
stc
push
cmc
or
adc
pop
int3
jmp
mov
xchg
out
je
inc
and
outsb
sub
cmpsb
add
lahf
into
out
jne
daa
jle
dec
pusha
gs
and
jne
les
jge
lahf
data16
cmp
push
adc
sbb
cmp
adc
mov
mov
mov
enter
ja
rcr
jp
push
loop
xchg
adc
cmp
or
sub
mov
sub
test
or
scas
push
out
mov
xchg
add
lcall
adc
scas
dec
popa
jns
xor
shlb
jp
inc
mov
inc
int
sbb
pusha
mov
cmc
sbb
cmp
mov
cs
jns
xchg
sti
cmc
sub
in
cmpsl
cmp
popf
inc
add
mov
add
insb
imul
imulb
cwtl
std
add
xor
push
or
cmp
sbb
mov
popf
dec
add
mov
fwait
sbbl
in
sbbl
sub
test
jmp
inc
pop
cli
jle
ret
mov
iret
das
push
clc
push
mov
xlat
mov
mov
popl
adc
and
add
ret
push
push
repnz
fiaddl
cld
test
add
add
or
test
in
jne
push
xor
push
xchg
inc
nop
ret
in
mov
fldt
mov
xchg
add
push
daa
mov
das
imul
int3
stos
add
shlb
inc
dec
imul
jnp
and
jp
lahf
fidivl
xchg
mov
push
jnp
ret
lea
popa
out
push
adc
or
pushf
add
fwait
or
loop
inc
cmp
sbb
and
in
sti
imul
leave
aad
iret
sub
stc
mov
sbb
out
lock
arpl
stc
dec
es
int3
cltd
pop
mov
leave
ret
je
xor
jno
mov
pop
dec
dec
in
xor
dec
sub
adc
ret
mov
add
dec
dec
sbb
fsubs
daa
jp
sbb
insb
mov
jmp
in
pop
in
or
xchg
dec
add
jle
mov
call
lret
es
add
add
lret
aad
cmc
mov
fisttpll
pop
xor
shrl
ret
xor
mov
pop
mov
xchg
int
je
pop
lret
fisttps
test
lds
adc
insb
out
inc
fwait
lret
mov
fcomps
adc
xchg
inc
stc
mov
xor
cmp
js
lea
aam
stos
dec
mov
mov
pop
shll
movsl
in
add
lods
gs
in
shrb
add
insb
cmp
xchg
dec
arpl
mov
cmp
pop
jne
bound
call
js
cmpsl
jg
mov
mov
inc
pop
push
mov
and
rorl
pop
mov
test
cld
xor
xchg
jne
scas
lret
fldenv
aam
or
call
jl
lahf
loopne
or
std
repnz
mov
jb
push
mov
outsb
loop
stos
inc
sbb
std
pushf
jnp
cltd
jg
iret
js
out
loopne
mov
mov
push
js
pop
aam
outsb
xor
insb
loop
or
and
cs
repnz
and
jb
jns
aas
sbb
xchg
stos
popl
and
icebp
sub
adc
cld
jns
adc
popa
fstps
and
inc
in
sti
jle
inc
mov
xor
lds
imul
add
pushf
mov
sub
pop
jge
movsl
add
mov
jb
fnop
and
inc
jmp
ljmp
xchg
add
push
ljmp
rclb
dec
movsl
mov
imul
paddsb
std
lret
and
scas
mov
xlat
inc
jno
lock
repnz
inc
vcvttsd2si
and
xchg
adc
bound
in
pop
ja
sbb
mov
lea
xchg
jbe
push
stos
sub
lods
lret
std
or
into
sub
sbb
inc
xchg
lret
cmp
js
or
lds
mov
xchg
shrw
jecxz
nop
cld
test
outsl
mov
mov
mov
dec
pop
fldenv
cmpsl
mov
data16
shl
repz
push
lock
pop
mov
lock
aad
xchg
fildll
jb
fistl
sbb
xor
pop
dec
mov
fsubr
out
or
pinsrw
aaa
enter
js
mov
out
lcall
out
cli
pusha
sbb
mov
fbld
jle
cmp
cmp
arpl
sbb
mov
test
push
lahf
sbb
dec
std
pop
minps
fsubrs
es
mov
inc
std
call
sbb
jno
jae
xor
lret
rcll
lcall
lock
push
movsb
rorl
sbb
lods
pcmpgtw
mov
orl
mov
pop
aad
mov
int
jno
fiaddl
jg
sub
jae
xor
adc
mov
rcr
pop
jnp
or
int3
xor
test
or
and
popa
mov
push
lock
shlb
push
or
cld
popa
dec
dec
lock
push
or
push
xor
adc
adc
cmp
jl
push
push
mov
inc
add
push
push
dec
push
xchg
sbb
inc
pop
push
lods
imull
xor
push
inc
cmc
icebp
inc
xchg
push
mov
sbb
loop
adc
mov
sbb
pop
fstps
pop
push
pop
inc
scas
xorb
shl
int
mov
xchg
inc
mov
or
or
daa
xor
sbb
or
or
push
sbb
sub
out
cmp
cs
lret
xor
popa
addr16
js
mov
cmp
divl
je
into
fdivrs
lods
jle
push
xor
rolb
jmp
mov
cltd
int
pop
test
and
insb
test
inc
ja
jbe
movsl
mov
scas
std
cmp
pop
sub
call
pop
adc
rol
cltd
imul
sbb
xchg
sahf
xchg
imul
jg
mov
push
mov
clc
push
xor
cmpsl
inc
clc
clc
push
out
fisttpll
push
loope
pusha
cli
sub
fwait
jp
and
xor
push
repnz
je
jns
xor
dec
jp
lcall
mov
adc
or
movsl
test
hlt
cwtl
stos
and
cmp
insb
sub
repnz
lcall
xchg
popa
imul
mov
popf
mov
aaa
xchg
cli
hlt
cmpsl
mov
pop
xor
xor
fs
fst
inc
pop
dec
cmp
xchg
or
repnz
sarl
dec
cli
les
icebp
stos
push
cmpl
aas
inc
loop
push
iret
adc
test
xchg
adc
shrl
cli
xchg
movsb
add
ljmp
lock
sti
inc
stos
ja
sub
jg
push
pop
cmpsb
xchg
dec
je
mov
jecxz
and
and
out
or
jno
jnp
mov
xor
jle
or
js
xchg
in
push
lahf
call
call
mov
sahf
or
mov
adc
cmc
fistpll
adc
mov
push
fcmovu
cltd
xchg
addl
mov
in
repz
push
es
mov
adc
shr
jecxz
mov
les
lahf
xchg
push
jnp
sbb
in
fwait
mov
outsb
clc
fiaddl
sti
das
sbb
cmp
sahf
mov
cltd
lret
add
cld
cmc
mov
aaa
mov
fdivrs
lds
ds
push
in
leave
inc
inc
mov
add
jmp
lock
add
sbb
xchg
jp
ds
adc
adc
lea
xchg
push
mov
mov
sbb
mov
in
or
rclb
repnz
sbb
push
mov
adc
test
das
adc
mov
inc
movsl
add
xchg
dec
sahf
push
fs
js
sbb
xor
cmp
pop
push
lahf
mov
into
push
addr16
jns
and
insl
xor
mov
jmp
clc
movsb
fldenv
mov
jns
ja
pushf
addl
xchg
mov
mov
faddl
shr
in
imul
push
pop
lds
negl
imul
xchg
pop
pop
xchg
repnz
std
push
pop
insl
cli
fdiv
out
lds
push
xlat
dec
mov
push
pop
fidivrs
and
pop
ret
or
std
das
daa
lock
and
adc
xchg
sbb
into
data16
and
jmp
fildl
mulb
jge
fwait
dec
xor
lods
shl
aaa
adc
push
imul
mov
mov
mov
mov
cmc
cmp
jmp
lock
mov
push
ljmp
pop
divb
pop
mov
lahf
add
std
stos
les
les
mov
test
mov
cltd
jl
jle
mov
pop
sti
repz
dec
inc
or
push
fsubrl
testl
mov
aas
test
mov
push
enter
add
popf
jp
push
push
dec
xchg
insb
sbb
sbb
mov
or
pop
std
pop
inc
repnz
xchg
in
pop
cmpsb
in
jp
test
adc
sbb
test
std
lea
cmpsl
testl
loope
mov
jno
mov
movsb
sub
xchg
jp
push
loope
or
sub
xor
ret
adc
pop
add
xlat
inc
mov
js
xor
add
cmp
jns
lods
adc
push
mov
fldt
in
jns
loope
out
pcmpeqb
pop
adcl
jg
add
sub
push
iret
add
inc
test
fidivs
out
or
or
inc
adc
aam
adc
data16
test
punpckhwd
dec
jno
lock
jg
stos
add
cltd
lods
sahf
scas
imul
xchg
js
adc
add
jno
fwait
mov
cmp
adc
or
cwtl
in
sub
pop
mov
les
jl,pt
aas
xchg
inc
mov
testb
jns
adc
dec
or
inc
js
pusha
mov
pop
negl
inc
or
pop
mov
push
dec
pop
imul
push
enter
out
fcmovnu
adc
and
ja
loop
inc
xchg
aad
push
fs
ss
push
lret
xor
or
push
jle
aas
popfw
jecxz
test
xor
adc
jmp
loop
adc
xchg
in
lea
or
sub
test
xchg
push
sbb
cmpsb
pop
cmp
sti
and
aas
sarl
add
inc
add
aad
sub
push
test
add
xlat
int3
sbb
pop
call
pop
push
push
daa
sbb
test
jmp
imul
inc
pop
popa
or
fisubl
call
cmp
mov
fcompl
xlat
pop
insb
sbb
pop
loope
rcr
out
sbb
insl
cmp
jne
lock
stos
bound
aas
mov
push
sub
mov
pop
das
pushf
dec
fdivr
mov
mov
shll
cwtl
jecxz
adc
mov
push
mov
dec
jae
test
push
jbe
rcrb
jl
mov
lcall
cmp
addb
push
dec
cs
pxor
out
mov
adc
mov
fists
subl
insb
xchg
outsb
out
adc
scas
sar
insl
xor
jmp
cmpsb
mov
cld
mov
hlt
sar
ja
push
dec
jne
cmp
fs
shlb
xor
jl
push
stc
jns
xor
daa
pop
lods
cs
add
mov
pop
ja
out
inc
xchg
int3
sti
push
inc
icebp
dec
add
mov
mov
jbe
ret
cmp
mov
cs
ret
cs
cmpsl
xchg
fcompl
imul
sti
test
adc
push
mov
push
insl
push
sub
mov
ret
pushf
xchg
std
outsl
outsb
mov
mov
lock
es
pop
and
insl
cwtl
nop
loopne
sub
lahf
push
fidivl
push
enter
mov
xchg
or
mov
cmpl
push
or
or
scas
fcomp
sbb
push
sbb
pop
xor
mov
cmp
mov
or
scas
mov
stc
xor
and
stos
and
pop
sub
mov
lea
jg
into
daa
inc
lcall
inc
push
cmp
and
pop
push
xchg
out
lret
ror
fnstcw
xor
fsubrs
pop
cmp
ja
insb
sub
rcr
adc
xchg
adc
jp
in
int3
out
mov
mov
data16
mov
adc
or
xor
jno
pop
mov
push
or
flds
fmuls
rolb
cld
test
je
cmp
movl
aad
inc
pop
ds
sbb
jmp
fisttpll
scas
sar
insl
sub
fcmovnu
adc
cmp
sub
cltd
jae
xchg
dec
imul
mov
dec
xchg
mov
addr16
stos
sbb
xchg
cmpb
test
lds
or
adc
jl
mov
stc
mov
sub
imul
or
rcl
mov
jp
cli
rorl
sbb
das
xor
out
push
sbb
fmull
movsb
pop
dec
arpl
arpl
lret
dec
insb
pop
les
xchg
cld
mov
int3
xchg
pop
fisttpl
sbb
push
clc
arpl
xchg
shlb
mov
iret
jb
das
mov
pushf
cmp
dec
out
pop
aaa
hlt
or
lahf
rol
call
fidivl
faddl
into
adc
adc
fadds
jb
pop
roll
divb
jns
stos
stc
decl
cmp
mov
mov
fdivp
cmp
inc
jle
mov
or
xor
ja
xor
loope
xor
xorl
add
mov
mov
cwtl
jb
iret
shll
dec
shl
push
loop
jae
add
add
dec
inc
imul
xchg
jge
and
mov
cmp
inc
inc
imul
or
mov
or
in
shrb
call
sbb
cmp
push
mov
test
repz
push
cmpsl
cmpb
movb
ss
adc
push
repnz
mov
ja
fucomp
sub
adc
cmp
out
xchg
faddl
lret
inc
fisubl
push
dec
jp
sbb
or
mov
inc
lods
negb
xchg
inc
stos
out
test
sahf
mov
js
cmp
jno
sub
and
add
xchg
push
pop
mov
mov
out
inc
adc
leave
call
jmp
adc
sub
inc
dec
mov
pop
fwait
out
in
push
iret
xchg
fsubrs
shll
gs
jecxz
push
fs
and
aaa
xchg
lds
dec
pop
clc
lahf
and
jmp
rcr
shrb
mov
mov
lods
mov
xor
and
mov
iret
rcrb
jns
xchg
fdivl
sub
adc
or
out
cmp
jp
or
pop
out
and
jno
add
lods
aaa
sti
popa
xchg
je
push
jae
jle
mov
push
xlat
push
jp
rcrl
pop
rep
cmpsb
push
add
and
iret
push
pop
hlt
push
or
jne
xchg
push
sub
out
lcall
bound
xor
add
rcll
mov
xor
mov
and
add
jbe
aad
divb
pop
dec
xchg
fcmovnbe
mov
mov
cmp
lahf
sub
pop
push
or
xor
push
xor
pop
and
xchg
pop
int3
mov
push
cs
clc
repnz
adc
mov
or
ja
adc
push
xchg
mov
out
push
decb
jp
mov
enter
aas
bound
mov
mov
mov
push
adc
pop
pop
push
mov
out
pop
inc
xchg
sarb
mov
pop
xchg
fnstenv
xlat
or
push
pushl
divb
or
fstp
js
cmpsb
sub
or
or
sahf
dec
or
push
movb
xchg
jp
in
sub
pop
sub
fsts
repz
in
sti
mov
in
ret
adc
imul
xor
sahf
lock
cmp
mov
dec
sbbb
jle
scas
sbb
mov
mov
push
lds
nop
add
cwtl
cmp
test
mov
ljmp
arpl
stc
sbb
xchg
fdivrs
mov
les
mov
adc
data16
int
inc
push
shl
xchg
mull
jae
out
sub
jnp
andl
sbb
dec
lea
mov
and
adc
or
in
arpl
lret
fstp
sti
dec
sbb
hlt
inc
ret
mull
ret
mov
movsl
xor
pop
in
jne
ror
loopne
sbb
xor
dec
std
mov
popa
icebp
xchg
imul
or
pop
and
faddp
mov
mov
nop
mov
out
and
aam
push
and
xchg
mov
push
aad
je
add
lods
lock
mov
add
out
fs
mov
inc
push
dec
dec
jp
dec
scas
sti
cld
push
dec
test
mov
pop
or
sbb
sbb
mov
push
mov
loop
test
push
push
mov
fnstenv
mov
cwtl
mov
inc
sub
and
xor
push
push
lea
adc
jnp
sahf
dec
inc
stos
rcrb
lock
int
mov
cwtl
jge
test
jmp
cld
xchg
sub
xchg
pop
sub
bound
cltd
shrl
into
or
rcrb
hlt
xchg
cmp
inc
in
adc
push
cld
push
mov
ljmp
add
add
dec
add
lret
cmp
lcall
shlb
dec
popf
out
pop
inc
idiv
dec
cmp
mov
lahf
jno
inc
push
jb
fbld
or
xchg
imul
sahf
jg
std
jo,pn
sbb
gs
and
aaa
push
sbb
scas
mov
and
sub
sub
xor
sub
popa
lods
sub
jb
call
addb
push
push
outsb
outsb
mov
repz
xor
out
mov
xor
sahf
into
hlt
mov
popa
mov
mov
shlb
add
inc
mov
cmp
jmp
sbb
gs
je
test
jb
adc
and
lock
and
fildll
pop
lea
fnstcw
mov
xchg
jo
adc
ret
or
sarb
cmp
jecxz
mov
loope
repz
xchg
push
lret
js
mov
nop
shl
add
mov
loope
xchg
lods
insl
lea
lods
sub
jns
roll
add
out
inc
sbb
pop
fisubl
mov
inc
sub
pop
push
jg
xlat
cmpsl
aam
out
xor
xchg
data16
push
pop
sar
cmp
in
hlt
pop
jo
sub
sub
in
push
push
mov
movsb
mov
jo
and
dec
inc
lahf
shlb
add
push
mov
pop
test
fsts
jg
sar
dec
mov
dec
mov
enter
add
scas
dec
dec
adc
add
inc
mov
roll
cmp
mov
xchg
test
mov
data16
int3
xor
cltd
mov
stc
movsb
adc
push
push
out
dec
and
popa
sbb
mov
cmp
rorb
sbb
pop
mov
cld
out
cmp
push
xor
jns
mov
and
cmp
int
fs
mov
les
xor
jo
mov
nop
std
sbbb
xchg
mov
imul
xor
jae
mov
mov
jmp
inc
mov
pushf
cmp
ds
ret
and
pop
sub
ljmp
out
fwait
sbb
push
in
inc
gs
dec
popa
int3
popa
jmp
or
rorl
ja
push
rorb
test
out
lods
mov
test
iret
ret
cld
mov
loope
mov
push
cmpsl
sahf
push
in
pop
push
paddw
pusha
es
mov
cs
dec
sahf
and
mov
push
push
xchg
ds
pop
and
pop
iret
or
adc
cli
mov
xchg
and
and
fstpl
jae
rcr
dec
cmp
dec
shrl
sahf
cmp
popa
sub
xor
cmp
das
notl
cld
pop
and
lret
xor
mov
mov
xor
pop
es
push
lcall
out
sahf
jl
mov
mov
dec
xchg
cld
loopne
sbb
arpl
cmc
xchg
mov
xor
push
dec
scas
test
arpl
adc
in
push
sbb
icebp
cwtl
pop
in
imul
mov
xchg
push
hlt
inc
dec
jecxz
push
push
push
sub
add
cmp
out
jns
lock
cmp
push
movsb
xor
push
mov
dec
xchg
cmp
sbb
mov
xor
dec
data16
je
adc
ret
jb
das
pop
xor
mov
test
stc
imul
in
in
daa
mov
push
rep
jp
je
fnstenv
sbb
and
hlt
test
mov
pop
mov
icebp
std
push
inc
and
arpl
sarl
jg
push
stos
in
add
out
xlat
jb
jge
push
pop
add
test
rcr
inc
cmp
lds
sbb
mov
shl
ret
and
imul
jbe
push
push
or
sahf
inc
pop
cmpsb
pop
add
mov
pop
mov
push
fbld
add
mov
add
mov
popa
push
pop
int
fnstenv
and
add
out
add
stos
cmpsb
inc
das
mov
or
inc
jnp
and
jge
add
fdivrp
insb
lds
daa
adc
insl
iret
adc
fmul
push
scas
dec
sub
rcl
add
icebp
sbb
arpl
inc
mov
faddl
adc
add
pop
add
cmp
in
scas
push
pop
jo
sti
pop
enter
or
inc
test
mov
scas
mov
mov
sbb
adc
mov
rclb
mov
dec
pop
int
and
mov
push
mov
pop
stc
lahf
out
push
mov
sbb
mulb
ret
jge
or
jb
pop
lret
mov
lret
or
cmp
or
inc
icebp
mov
int3
or
jge
cmpl
jnp
repnz
mov
xchg
mov
mov
inc
scas
or
push
in
cwtl
pop
sbb
pop
cltd
xchg
fnsave
test
jno
faddl
dec
ret
jae
push
jbe
shlb
mov
loopne
cmp
pop
arpl
test
xchg
xor
call
mov
repz
add
sub
das
ret
paddusb
cmpsl
insl
xor
inc
inc
sbb
lds
jl
dec
mov
mov
cwtl
lret
push
inc
sbbb
and
mov
lea
mov
mov
sahf
mov
insl
push
mov
sti
fwait
and
or
popf
outsb
lcall
inc
cld
mov
lds
inc
hlt
mov
lret
xchg
and
pop
or
repnz
ret
and
jbe
xchg
aad
cltd
les
shlb
lcall
outsl
adc
pop
fwait
sti
not
in
sarl
xchg
stc
sbb
jp
xchg
clc
insb
or
lcall
aaa
jp
sbb
or
sbb
roll
jb
mov
ds
jge
fcoml
inc
ja
xchg
in
lock
test
ja
pop
shll
stos
xchg
push
sub
fwait
popa
cs
repz
xchg
das
mov
ret
ret
push
xchg
add
data16
int
mov
lea
test
or
push
inc
imulb
dec
shlb
add
ret
adc
or
xchg
aad
out
fcmove
sub
sbb
fildll
fildll
mov
incl
insl
dec
push
or
popa
inc
cmc
jg
mov
inc
jo
popf
in
cmp
xchg
jns
lret
sbb
mov
stc
aaa
outsb
inc
aam
or
icebp
xor
aad
mov
andl
fistpl
xorl
cmp
sbb
dec
and
mov
pop
jnp
lods
sub
dec
dec
fldcw
sahf
stc
leave
push
es
sub
adc
jno
aas
outsl
das
adc
push
hlt
ds
movl
dec
xor
sbb
lds
fisubrl
jns
adc
push
add
inc
loope
sub
mov
pop
popa
sub
inc
es
ficoml
adc
into
cmpl
fnstsw
popa
pop
and
or
xor
stc
jg
mov
test
jge
aam
adc
cmp
insl
ds
mov
popf
movsl
test
fistpll
mov
add
lahf
push
jecxz
cli
push
jns
in
movsb
push
sbb
sub
adc
cltd
fimull
pop
movsl
ret
xchg
add
test
or
xchg
roll
pushf
sbb
mov
pop
out
sub
mov
push
jge
mov
test
mov
in
dec
cmc
fbstp
mov
jecxz
es
addr16
jno
xchg
sysret
adc
filds
pop
mov
pop
mov
paddw
divb
fmulp
hlt
or
enter
push
push
add
sbb
adc
push
adc
js
dec
sub
pop
lret
add
add
sub
aam
mov
js
adc
js
ss
push
sahf
or
xchg
mov
mov
inc
inc
mov
cmp
into
push
pop
xor
mov
cmp
inc
push
jmp
dec
enter
and
cmpb
mov
sub
mov
inc
loope
jae
jo
mov
enter
inc
pusha
cmp
inc
insb
shll
cmp
mov
cmp
repnz
out
scas
loopne
aas
dec
pop
mov
jle
int
repnz
mov
mov
movsb
xorb
mov
push
dec
mov
jecxz
mov
js
enter
add
sub
outsb
jno
mov
lods
stos
ret
test
insl
int
arpl
out
movsb
add
xor
dec
xor
pop
mov
hlt
jns
fldl
fldenv
inc
mov
cmpsl
jg
push
fidivrl
jbe
sti
call
mov
outsl
outsl
lock
xchg
dec
mov
lret
bound
jp
dec
jg
shr
or
push
mov
mov
mov
mov
adc
mov
or
sbb
in
dec
jae
pop
mov
mov
dec
xchg
int
mov
or
jl
lods
mov
lock
loop
fcmovb
dec
cmp
xchg
jne
jmp
outsb
aaa
in
pop
mov
adc
andb
cmp
stos
daa
and
cwtl
adc
js
xchg
bound
lret
sbb
sub
xchg
xchg
notl
movsl
jge
iret
xor
hlt
xor
lret
lods
imul
mov
or
pop
xchg
xchg
scas
push
jmp
ficoms
sti
ss
xchg
xlat
ljmp
xor
out
xchg
in
loopne
scas
dec
jae
loope
xor
inc
jne
dec
scas
inc
popf
cmp
fwait
lods
inc
add
xchg
sub
jbe
pop
mov
mov
adc
bound
in
aad
mov
adc
flds
push
in
into
add
or
scas
inc
add
clc
xor
or
leave
or
jmp
movsb
bound
jmp
and
sbb
mov
arpl
out
jnp
xchg
nop
dec
or
xor
lods
in
mov
rcrb
mov
ret
orb
jne
loopne
cwtl
inc
shlb
nop
outsb
inc
and
push
rorb
enter
pop
mov
xchg
lea
mov
mov
insb
xor
daa
sbb
aaa
cmp
cltd
int3
add
enter
mov
iret
ret
and
sub
movsb
push
xor
testb
xor
sbb
subl
mov
mov
push
push
fistpl
bound
cld
repnz
jmp
cwtl
add
push
jo
loope
outsb
inc
out
nop
orb
pop
testb
cli
fidivl
push
mov
pop
sub
pop
movsl
pusha
mulb
cmpb
gs
xchg
repz
outsl
jmp
in
in
lods
sub
mov
nop
sti
push
jmp
xchg
mov
xor
jnp
adcb
mov
repz
push
and
notb
ret
pop
cmp
sub
in
or
cmp
mov
hlt
push
repz
das
sub
loop
push
les
mov
ja
orl
adc
mov
push
icebp
xchg
inc
popf
in
test
pop
les
xchg
lock
mov
push
dec
push
push
adc
jmp
test
addl
cmc
in
repz
sbb
popf
aam
add
sub
xor
shrl
ffree
and
xor
mov
shrb
xlat
clc
jnp
inc
and
inc
xor
or
mov
out
in
dec
shll
imul
fisubrl
rorb
cs
xor
fidivs
loopne
add
mov
les
jge
jecxz
test
lock
scas
xchg
and
xor
or
cltd
daa
movsl
stos
push
xchg
jo
repnz
xor
into
into
sahf
jae
pop
fistpl
inc
movsb
adc
xor
push
out
add
aas
jo
movsb
fistl
rcrb
mov
xor
int
pop
popa
mov
pop
xchg
les
and
xchg
fwait
lds
sbb
jno
pop
or
pop
jl
or
sbbb
cmc
or
pop
ss
lret
insb
sub
mov
pop
xlat
jge
jle
mov
call
cmp
mov
xor
lcall
cmpsl
aaa
les
mov
push
or
sti
xchg
aad
js
loop
int
mov
push
aas
xchg
loop
stc
sbb
loop
mov
adc
sub
mov
jns
adc
pop
adc
sbb
jl
fstpt
cmpsl
cmpsl
mov
dec
jg
mov
push
sbb
mov
hlt
in
fdivp
icebp
jmp
push
push
fidivrl
mov
push
push
scas
ljmp
lds
ret
popa
in
push
mov
xlat
xchg
sar
sar
stos
stos
push
cltd
fs
xchg
sbb
add
stos
mov
sub
jge
jg
int3
add
xchg
movsb
dec
lods
fs
jnp
fs
xchg
cmp
or
les
ds
xchg
push
test
in
test
loope
xchg
jo
int
dec
mov
jle
jecxz
pop
fidivrs
ja
idiv
mov
mov
xchg
xchg
iret
les
popa
cmp
xchg
dec
jo
mov
clc
mov
decb
inc
rclb
jecxz
outsl
in
mov
in
jno
lret
pop
jg
mov
test
sub
jne
cmp
jp
hlt
outsb
cmp
in
dec
addr16
inc
and
or
cmp
fwait
popf
xchg
mov
fs
div
shlb
sbb
mov
lods
xchg
movsb
fnstcw
repnz
pop
pop
loop
stos
cmp
int3
jns
lock
dec
pop
mov
pop
jle
ja
inc
outsl
and
xchg
push
xchg
adc
mov
test
lods
jno
inc
mov
scas
arpl
mov
stos
cmpsb
sbbl
aad
orb
push
dec
inc
aad
jle
insl
push
push
cmpsb
insb
and
lea
inc
cltd
scas
cmp
insl
cwtl
fxtract
stos
pop
into
mov
jb
adc
mov
jnp
divb
and
movsl
je
or
imul
jb
xchg
test
negb
imul
xor
mov
push
stc
push
icebp
or
addl
push
cld
ret
mov
ret
cmp
or
stc
pop
add
dec
rclb
in
mov
add
cld
pop
or
xchg
ja
sti
mov
adc
adc
cli
mov
mov
lock
mov
inc
xor
and
cld
add
iret
stc
frstpm(287
notb
iret
shlb
pop
int3
sti
ret
stc
pop
push
or
fistpll
jp
daa
cmp
jns
out
scas
jmp
ret
imul
loop
in
ret
aad
lea
call
dec
cwtl
push
sbb
add
xchg
movsl
mov
arpl
clc
stc
or
inc
lods
jg
int
add
in
sti
cmp
cld
arpl
sti
or
sub
in
out
add
aas
sar
xor
leave
xor
out
jae
lds
int3
rcrb
into
adc
mulb
cli
bound
lods
inc
ds
xchg
mov
lret
movsb
icebp
add
icebp
es
daa
mov
pop
sbb
sub
sbb
ret
dec
xchg
cmp
les
xor
lds
push
mov
dec
mov
arpl
je
mov
add
mov
loope
and
lcall
sbb
jecxz
xor
xchg
jno
pop
push
js
add
jle
mov
fldenv
xchg
rolb
clc
jo
cld
int
cmpsb
inc
pop
je
adc
mov
arpl
fcmove
scas
out
sarb
out
cmp
fcmovnu
ljmp
lcall
add
cmpl
cmc
xlat
js
xor
xchg
test
push
sar
pusha
dec
pop
xor
dec
cmp
or
adc
jb
sahf
pmaxsw
loope
jecxz
cmpl
insb
cltd
mov
movsb
rorb
pusha
addr16
shll
fistpl
cld
mov
sbb
adc
das
jo
mov
mov
imulb
add
mov
push
sbb
outsl
cmpsl
dec
rcrl
mov
sub
out
outsb
movl
aam
add
in
push
or
cmpl
loopnew
fld
lods
pop
pushf
int
cltd
pusha
lods
pop
test
fwait
pop
rcrl
and
addl
mov
pop
lcall
dec
pop
adc
popf
jno
and
ret
stos
leave
dec
pop
aas
fs
sub
push
push
or
pop
test
mov
pop
enter
fcmovu
test
sbb
cmc
cmp
loope
test
stc
std
or
mov
push
fmull
xchg
pop
sub
fwait
mov
sub
int
adc
test
call
les
push
jae
je
sub
inc
and
xchg
jp
lcall
xor
pushf
cltd
fstl
ret
mov
and
xchg
in
hlt
adc
jecxz
ret
dec
jns
adc
push
or
mov
pop
mov
xchg
cmpsb
shl
adc
pop
test
arpl
mov
mov
pop
inc
mov
jns
pop
not
loope
gs
enter
mov
sbbb
jne
mov
mov
mov
imull
call
and
pop
es
jae
rclb
pop
call
inc
arpl
push
add
and
orb
jnp
jnp
shll
push
test
inc
nop
mov
adc
push
and
push
push
shll
sub
testb
fnstsw
bound
and
xchg
mov
lods
xchg
aas
test
add
mov
pop
lret
push
ljmp
and
sub
sarl
mov
testb
or
insl
push
fnstsw
pop
mov
ret
test
ds
hlt
test
out
int3
nop
into
dec
mov
sub
std
loope
push
xadd
rcr
push
pop
stc
lock
int3
fldenv
idivl
mov
iret
dec
push
add
mov
notb
push
inc
mov
std
ret
aaa
fisttpll
add
xchg
push
sub
ljmp
cmp
pop
or
leave
sub
pop
std
pop
jno
lret
jne
jb
fldenv
mov
xchg
loope
addr16
sbb
mov
adc
cmp
xchg
call
inc
dec
jmp
cmc
push
xor
jp
lahf
lahf
pop
jbe
mov
ds
cmp
jmp
or
bound
movsl
in
lahf
add
fidivrs
ds
pop
pop
mov
popf
jge
int3
nop
cmp
repnz
push
test
and
xchg
dec
mov
sbb
gs
or
test
cmpl
les
shlb
xchg
add
mov
dec
pop
ret
mov
add
sbb
add
out
mov
jmp
cmovns
inc
jp
fwait
xor
or
sub
dec
push
aas
or
scas
clc
push
mov
imulb
jecxz
ficoms
xchg
xchg
cmpb
test
repz
jmp
and
jne
js
pusha
adcl
scas
pushf
mov
pop
ret
mov
jno
leave
fcomp
fsincos
adc
inc
lret
add
mull
lcall
in
into
pop
pop
and
daa
repz
rdpmc
pop
sbb
test
negb
mov
sahf
insl
lret
shlb
aaa
addr16
mov
shl
lahf
mov
es
inc
in
enter
mov
mov
push
rolb
pop
aas
adc
loop
jb
in
negb
cmp
cmp
sbb
mov
movl
jno
ret
stos
xchg
mov
pop
jge
mov
rcl
subl
das
xor
xchg
ljmp
dec
xchg
push
cmp
test
inc
or
jp
test
add
andl
sbb
leave
xchg
jno
cwtl
or
fidivs
stc
subb
test
xlat
mov
push
push
xchg
adc
cmp
test
or
fadds
inc
inc
pop
cmc
int3
mov
mov
iret
mov
stos
xor
xor
add
xor
cli
iret
aad
in
scas
and
sahf
cmp
hlt
fwait
shr
outsl
inc
and
sub
adc
xchg
adc
pop
dec
cli
xchg
push
shlb
in
clc
adc
push
orl
sti
pop
sub
mov
popa
fisttpll
inc
or
sub
sub
sbb
popa
dec
fsts
sbb
out
sar
jmp
mov
or
lods
jmp
loopne
daa
jl
mov
in
mov
sub
hlt
pop
jg
push
out
orl
ljmp
and
aas
lret
aam
cmpsb
loope
jb
xor
and
sub
mov
in
or
nop
pop
aad
test
outsb
cmp
fnsave
jp
out
dec
sub
movsb
out
or
xor
dec
jne
cmp
mov
fwait
jns
addr16
gs
sub
test
ficoml
pop
xor
pop
mov
fptan
fcmovnb
addr16
daa
push
sub
fmul
cmp
adc
lods
push
mov
mov
adc
es
imul
lcall
push
lret
adc
xor
sub
rcrb
fisubrl
pop
insb
ds
xchg
sbb
insb
xor
sub
mov
sahf
push
push
movsb
inc
mov
pop
adc
pop
lcall
cmp
xchg
jle
cmp
out
sbb
sub
xor
lock
stc
cltd
aam
push
cld
imul
xchg
pushf
jbe
jle
lods
mov
sarb
movsb
adc
xlat
out
iret
push
ja
inc
fbld
xor
iret
jne
dec
cltd
mov
test
lcall
xlat
arpl
fwait
dec
jns
into
iret
in
adc
jnp
pop
mov
push
dec
lcall
loop
gs
fs
sahf
push
imul
sar
add
pop
xlat
jno
cmpsb
jmp
mov
or
fs
inc
xchg
mov
les
xor
lods
jle
mov
loopne
outsl
push
cmp
xchg
out
popa
mov
pop
pop
test
pop
sub
clc
and
lcall
fsubr
sti
rcl
dec
in
jl
leave
sbb
xor
or
jg
mov
mov
mov
dec
lret
adc
adc
popf
outsl
dec
jl
and
in
insl
cmp
daa
dec
faddl
adc
loop
sub
and
and
and
xchg
rorl
and
xor
out
dec
sub
shlb
add
loop
lret
sbb
pop
insb
and
fidivl
add
xchg
jnp
nop
jle
push
popf
in
shll
mov
ret
dec
out
push
jb
push
fwait
mov
fmuls
or
or
mov
push
or
add
int
inc
nop
fs
jl
sahf
xor
xor
pop
add
push
or
xor
xor
mov
or
jecxz
cmpsb
das
out
lret
out
movsl
into
ja
adc
sub
into
xchg
out
inc
iret
in
or
mov
pop
jecxz
cmc
das
repnz
fdivs
cmp
movsb
lcall
inc
adc
mov
jge
cmp
ds
bound
add
nop
cltd
bound
bound
loope
aaa
scas
sbb
inc
mov
in
dec
adc
lods
call
lcall
iret
jp
movsb
imul
mov
hlt
push
ds
push
and
insb
fs
ret
mov
pop
push
push
lods
add
mov
popf
test
xchg
call
icebp
pusha
outsl
aas
dec
cmp
or
inc
add
movsl
lcall
stos
sbb
lret
int
stos
sbb
add
dec
repz
adc
dec
iret
sbb
pop
lcall
out
movsl
push
jno
movsl
jbe
imull
outsb
subb
xchg
or
cmpl
or
sbbl
cmpsb
and
jge
dec
dec
pop
mov
mov
test
movsl
jno
push
popa
dec
sti
adc
dec
mov
movsb
push
sub
dec
xor
add
inc
rcrb
add
push
rcr
mov
xchg
inc
mov
lods
mov
pop
push
jnp
pop
inc
dec
xchg
inc
push
pop
daa
cmp
add
add
pusha
xor
and
jnp
andb
lret
pushf
push
outsb
out
jmp
pop
test
jmp
add
fistl
pop
int3
fdivs
mov
rcl
mov
cltd
addb
pushf
add
cs
ljmp
fisttpll
cltd
mov
and
imul
add
add
or
sub
inc
push
sub
fwait
mov
sahf
push
cmp
fsts
lods
imul
add
mov
icebp
jecxz
pop
xbegin
and
pop
call
pop
cs
ret
ljmp
fstl
mulb
add
rcrl
enter
add
mov
add
lret
std
gs
mov
mov
movsl
push
repnz
mov
dec
mov
hlt
loop
dec
inc
aaa
mov
mov
aaa
jo
dec
dec
lods
add
popa
fsubrl
cltd
cmp
cmp
out
inc
insl
xor
call
mov
aam
add
scas
mov
xorb
xchg
mov
mov
and
bound
pop
pop
jne
mov
jmp
or
in
mov
sub
dec
rorb
pushf
sub
add
sahf
sbbb
fbld
xor
pop
stos
insl
adc
dec
or
out
jle
in
lea
arpl
cs
aas
sub
idivb
repz
mov
inc
inc
push
mov
push
out
pop
sbb
dec
cmc
fsubr
iret
das
jle
jge
pop
cmp
or
mov
setno
sbb
inc
sbb
pop
mov
in
aam
push
pop
cs
jle
imul
sub
jge
insb
pop
cmp
insl
fistpl
inc
out
cs
dec
cmp
pop
out
mov
pop
shl
cmc
adcb
test
jle
xchg
xchg
inc
scas
outsb
in
pushf
jecxz
mov
jg
insl
daa
int
insb
push
mov
jecxz
subl
push
fsub
stc
aam
movsb
push
lods
inc
sub
pusha
jg
inc
cmpsl
mov
aas
dec
cmp
mov
loope
dec
xor
dec
std
inc
inc
adc
dec
pop
dec
aam
and
xchg
cmp
fdivl
cmc
cmp
cmp
divb
loopne
test
call
xchg
mov
popa
or
mov
iret
int
xchg
loop
out
fs
mov
xor
lods
fidivrs
cmp
xchg
sti
scas
mov
inc
push
repnz
or
adc
inc
cmc
jmp
mov
adc
movsb
sub
negl
in
mov
sbb
xchg
test
dec
cmpsl
mov
loop
push
mov
and
xor
sub
jecxz
adc
add
daa
mov
dec
ljmp
sti
cli
add
adc
stc
cld
pop
sbb
jo
adc
push
mov
stos
lods
mov
push
pop
enter
ds
pop
mov
push
cwtl
dec
pop
cmp
mov
inc
lock
or
sbb
rolb
cli
cmpsl
pusha
push
hlt
subl
into
inc
jmp
lock
pusha
cmp
dec
cmp
pop
lahf
in
pop
stos
imul
ss
mov
mov
push
mov
sub
mov
xchg
add
lret
inc
out
movsl
xchg
loopne
push
inc
enter
aam
idivb
push
push
in
sbb
and
mov
arpl
lcall
jb
stos
fadds
ljmp
fcom
mov
shl
jns
sbb
mov
adc
adcb
fwait
jo
or
arpl
pushf
addr16
xchg
push
mov
gs
gs
ljmp
lcall
mov
mov
repnz
data16
gs
in
pop
cs
add
mov
scas
pop
xchg
push
out
cs
fwait
aad
mov
iret
pushf
mov
sbb
adc
push
cmp
cmp
adc
fcmovbe
icebp
int
mov
shr
filds
test
xchg
enter
add
std
sbb
sbb
mov
mov
lds
movsb
cmp
xor
sbb
jp
rcrb
ret
adc
jns
in
fucomip
mov
lea
sbb
lahf
push
or
inc
insb
and
jge
test
in
adc
mov
ret
gs
dec
les
out
jl
jge
cmpsl
pop
jmp
in
fimull
ss
mov
dec
mov
push
inc
pop
addb
and
test
mov
scas
cmp
mov
and
jle
cli
ja
and
pop
mov
adc
insb
prefetch
mov
mov
cs
dec
enter
ret
adc
aaa
testb
jb
xor
loopne
imull
pop
cli
popl
in
repz
data16
ret
jmp
hlt
popf
pop
aam
add
aas
mov
or
push
ljmp
in
sbb
sub
lret
jle
and
xor
mov
mov
in
fstpt
sbb
stos
sti
insl
mov
xor
lahf
lea
cltd
jg
in
in
repnz
outsl
fwait
cmp
and
orl
gs
loop
ljmp
pop
int3
dec
adcl
mov
repz
or
popa
arpl
test
xor
mull
mov
xchg
cmp
and
mov
pop
mov
pop
dec
sbb
rcl
xchg
jo
lahf
lods
lahf
mov
jne
push
mov
sbb
sub
mov
dec
add
jnp
lret
xchg
fwait
add
jo
mov
cmp
jmp
inc
push
outsb
dec
lahf
leave
outsl
setle
scas
imul
pop
nop
and
ja
loopne
push
inc
mov
loope
mov
mov
sub
inc
loope
test
inc
pop
out
inc
adc
aam
cs
xchg
sub
popf
pop
stos
outsl
sbb
bound
andl
popf
popf
out
mov
xor
or
je
mov
mov
aaa
shlb
push
movsl
les
in
cwtl
dec
leave
call
xchg
jle
test
bound
pop
addr16
adc
and
xchg
adcl
lock
jbe
add
loope
test
lds
cwtl
pop
xlat
icebp
scas
mov
pop
add
repnz
imull
sbb
push
cmp
xchg
repnz
aam
aam
imul
mov
lahf
repnz
push
sub
adc
rolb
fwait
sub
movsl
sbb
mov
adc
push
shll
rcrl
xchg
enter
inc
jge
sar
hlt
fldcw
jl
je
test
fildll
and
xchg
rolb
inc
aad
sub
jo
repnz
hlt
pop
mov
ja
loopne
mov
insl
jmp
and
ss
movsl
pop
mov
outsl
cmpsb
xchg
in
shll
rclb
add
jno
loopne
xchg
push
shlb
push
push
adc
stc
lods
mov
in
sub
ja
in
je
add
js
out
mov
popa
dec
cmp
jg
jp
popf
aad
cwtl
or
xor
xchg
xchg
jp
add
je
aam
cli
aas
jmp
movsl
add
lahf
and
outsb
mov
loop
jbe
clc
in
xor
pop
daa
decb
lcall
rcr
fldl
les
dec
fidivrs
push
push
ficoms
pop
popa
xor
ret
jno
btsl
mov
fildl
xor
int3
pop
sub
inc
xchg
mov
sbb
adc
pop
sub
popf
mov
data16
scas
repnz
mov
outsl
je
cs
jg
fsubs
mov
notb
in
jg
aam
push
sub
mov
ret
adc
ret
xchg
inc
mov
stc
insl
inc
pop
push
inc
sbb
dec
sbb
cs
ja
sbb
out
cwtl
xor
mov
sahf
or
pop
mov
inc
lcall
fists
inc
pop
ret
mov
in
pusha
jge
movsb
into
les
fdivrl
mov
dec
inc
mov
or
aam
mov
jge
popa
dec
xchg
pop
sbb
cs
inc
call
fcomps
and
pop
movsb
mov
adc
ljmp
clc
sarb
push
adc
inc
push
inc
insb
enter
je
scas
pop
sbb
rol
loopne
repz
ds
pusha
push
ficoms
jg
ljmp
xor
jbe
mov
push
pop
mov
adc
mov
jle
mov
mov
scas
int
test
das
stos
xlat
adc
shl
loop
xchg
les
push
in
sub
pop
push
sub
dec
imul
fxtract
xchg
push
xor
mov
dec
clc
enter
cmp
ror
outsl
es
cmp
call
jo
jns
xor
int3
orl
repnz
addr16
and
dec
das
xchg
sarb
sbb
xor
cmpsb
scas
mov
and
or
pop
jl
jo
and
shrl
movsl
mov
insb
testb
xchg
xor
imul
mov
lcall
outsb
adc
in
jo
sub
mov
sbb
leave
aam
xchg
push
into
xor
jno
cmp
icebp
sbb
xchg
std
emms
xchg
in
jbe
in
ljmp
cmc
dec
pop
int
dec
fisubrl
sub
enter
add
xor
push
mov
dec
cmc
addr16
mov
cmc
aam
pop
es
stos
fs
cmp
loopne
loop
call
std
int
pop
imul
scas
cmp
ret
xchg
push
mov
push
mov
sbb
rcr
imul
mov
cmpsb
jnp
fsub
jecxz
push
dec
adc
movsl
subb
js
inc
mov
mov
arpl
lods
dec
bound
jl
sarl
jecxz
lahf
xchg
out
clc
aam
in
mov
jmp
xor
movsb
shrl
mov
mov
repz
mov
or
sbb
cld
dec
cli
repz
call
and
gs
or
pop
cmpsl
jg
mov
fistpl
int
or
mov
mov
and
fcmovbe
jg
dec
insb
and
add
adc
addl
or
xchg
pop
sbb
inc
hlt
movsl
adc
in
insb
cmp
in
push
int
dec
es
xchg
or
aad
outsl
gs
mov
cmovl
cld
mov
insb
jno
inc
mov
sbb
lods
adcl
scas
push
and
mov
loopne
fisttpl
outsb
mov
xchg
inc
pop
xlat
mov
lods
xchg
push
cmpsb
and
push
pusha
or
dec
repz
repnz
push
sahf
push
sbb
movsl
and
sbb
push
mov
jo
inc
mov
ret
mov
mov
loop
fcomi
out
jnp
or
adc
movsl
xchg
addl
sbb
adc
pop
test
cmpsl
push
adc
mov
fstl
sub
test
dec
bound
lcall
ljmp
outsl
popf
jno
lret
out
ljmp
nop
lods
gs
icebp
test
stos
call
leave
sub
adc
fidivrs
or
aam
in
mov
test
inc
lods
add
out
inc
jmp
or
movsl
in
jo
jle
test
aad
inc
data16
or
mov
xchg
out
xchg
je
inc
movl
popf
cmp
nop
aas
dec
and
insb
fcoms
movsl
mov
test
mov
cmc
daa
mov
ret
leave
pop
push
mov
imulb
jno
lods
leave
lea
cmp
sub
xor
xchg
leave
data16
out
or
xchg
cmp
nop
mov
in
xchg
movsb
repz
popa
stc
add
dec
mov
mov
insl
test
js
cmpb
fildl
cmp
sbb
xchg
mov
cltd
push
push
inc
push
ficompl
push
push
adc
jo
push
roll
sbb
mov
xor
cwtl
imul
xor
xchg
adc
mov
iret
jmp
mov
sbb
adc
xchg
out
scas
adc
je
mov
xchg
adc
xor
xchg
mov
pop
shlb
inc
data16
shl
lea
inc
mov
xchg
add
sarb
in
sarl
or
mov
inc
jg
add
xor
pusha
das
jge
insb
cli
lcall
decl
in
je
int
clc
mov
ss
cmp
push
push
inc
icebp
lcall
sub
and
mov
and
ds
jmp
repnz
or
or
popf
stos
push
push
sub
mov
pop
xchg
lahf
fsubs
xor
repnz
cmp
scas
and
dec
sub
adc
ja
adc
call
jg
shll
add
test
dec
xorb
dec
fsubrp
dec
or
int3
out
movsb
cmc
cmc
xor
sbb
add
and
clc
xlat
ja
xchg
ja
aas
std
sub
add
cli
mov
lock
push
mov
ss
ss
jle
scas
or
push
xchg
mov
cmp
cmp
adc
mov
rcl
adc
push
push
xchg
das
sub
data16
sbb
int
ljmp
out
pop
push
fisubs
aas
mov
scas
sub
shrl
sti
jne
xor
mov
fwait
jecxz
add
sahf
loopne
cmpsl
fmul
pop
outsl
lds
insb
adc
cmpsl
out
loopne
data16
subl
push
push
scas
insl
loopne
aam
mov
les
mov
es
and
and
pop
clc
cmp
dec
leave
das
sbb
push
push
xor
insb
sbb
pop
lret
das
sub
and
pushf
jnp
repnz
xor
cmp
test
or
xor
enter
and
out
hlt
mov
js
das
iret
sub
and
jmp
dec
mov
sub
push
sub
push
imul
pop
sahf
push
add
ljmp
loop
xlat
mov
and
je
adc
data16
ja
dec
call
sub
or
sbb
pop
add
test
xchg
or
mov
aas
test
dec
and
mov
push
icebp
inc
jge
sub
push
es
mov
adc
cmp
push
sub
pop
faddl
push
jno
adc
inc
or
shr
ljmp
inc
cmp
and
fldl
jns
jae
xchg
adc
or
test
add
mov
pop
adc
aad
cli
scas
call
sbb
or
jmp
int3
xchg
das
aas
aad
fsts
clc
or
loop
jb
in
ja
in
fldenv
test
pop
xchg
push
sub
dec
xchg
sbb
or
cmp
mov
jmp
int3
imul
or
mov
mov
pop
daa
jmp
mov
lods
outsb
dec
xor
or
aam
mov
adc
xchg
insl
std
xor
cmc
push
xor
jae
add
shl
sub
je
lahf
mov
xor
or
pop
adc
jl
and
and
xor
out
mov
lods
inc
incl
arpl
cld
loopne
out
movsl
aaa
pop
int
and
mov
pop
fmul
incl
mov
jns
pop
das
lahf
xchg
gs
cmp
lods
jmp
push
jb
add
pop
stos
sarb
add
fs
movsb
xchg
inc
insb
sub
mov
idivb
or
cld
enter
sbb
mov
mulb
and
lcall
mov
lds
andb
sahf
cmp
add
stc
or
lock
dec
cmpb
push
gs
mov
sbb
inc
cli
mov
adc
lcall
mov
mov
std
lods
ret
fnstcw
xchg
out
mov
mov
sub
fldlg2
jb
lods
mov
cmp
in
mov
test
inc
xchg
pop
ret
add
inc
jmp
adc
adc
fidivrs
stos
sti
push
dec
shrb
pop
roll
or
jg
inc
and
push
mov
addr16
std
sub
add
mov
fdivr
inc
adc
imul
insl
pushf
call
fstpt
jp
clc
stos
in
dec
call
jg
inc
pop
test
mov
cmp
mov
das
roll
pop
cmp
or
inc
or
jl
je
shrb
cs
add
ret
out
and
pop
in
cmp
xchg
ret
push
ret
or
loope
jno
daa
sub
jnp
push
ja
stos
mov
test
subb
rorl
popa
lea
pop
data16
mov
xor
lea
cmp
les
and
dec
rorb
cmc
xor
and
inc
mov
mov
jns
fcomi
mov
push
sti
enter
mov
pop
int3
adc
popf
jge
mov
mov
inc
aam
push
out
push
cmpsl
pop
enter
fs
ljmp
repz
xor
into
data16
xor
jp
inc
and
push
or
cmp
sub
idiv
pop
xchg
and
mov
xchg
cmc
in
xorl
int
insl
mov
rcrb
pop
mov
mov
sbb
test
sbb
xor
dec
repz
sub
dec
push
inc
stos
pop
mov
fsubrl
lcall
adc
mull
rorl
ret
icebp
jns
test
dec
mov
jmp
sbb
sbb
testb
xchg
notb
out
dec
pop
mov
and
stos
jecxz
cltd
filds
outsl
js
mov
popf
fdivs
pushf
inc
les
jnp
in
ret
sub
xchg
aaa
call
xchg
inc
mov
hlt
rcr
mov
cmpsl
sahf
jp
int
jo
out
mov
mov
adcl
mov
rolb
or
sub
pop
adcl
lret
cwtl
cld
jo
fs
iret
sub
push
insb
pop
xor
push
mov
push
add
repz
add
lea
xorb
les
scas
pop
rol
test
adc
jae
xchg
add
push
es
les
ljmp
mov
lret
sar
xor
mov
mov
jno
daa
por
fs
adcb
sahf
or
jl,pt
orb
addb
xchg
mov
adc
pop
jl
cli
mov
cvtps2pi
data16
mov
movsl
mov
sbb
add
ss
sub
icebp
cmp
das
mov
cmp
adc
movsb
das
sub
add
push
and
jbe
mov
dec
idivb
mov
aam
and
xor
and
push
mov
push
add
ja
or
push
xlat
shl
sub
xchg
inc
xor
cltd
add
and
mov
adc
cwtl
pop
push
mov
cs
jno
lret
sti
stc
push
or
insl
cs
sub
lods
inc
inc
sub
jge
sub
fsubrs
test
push
push
out
aaa
data16
jae
xor
mov
jmp
sbbb
mov
int3
loopne
push
repnz
mov
loope
jbe
or
les
xor
into
sub
inc
xor
ftst
scas
mov
or
popl
push
ficompl
add
fmul
jnp
data16
push
ret
jge
test
add
and
or
sub
in
and
xchg
cmp
add
lds
push
pop
lock
pushf
ret
adc
pop
xor
or
sbb
dec
mov
inc
fsubrl
lret
or
subl
ljmp
outsl
adc
stos
out
rcll
push
mov
push
repnz
and
adc
jp
inc
sar
mov
xchg
ja
mov
jecxz
dec
mov
decb
pop
pop
dec
div
fsubl
mov
inc
mov
jb
push
dec
scas
mov
jbe
enter
add
shrb
adc
xchg
or
or
repz
and
dec
gs
jecxz
jge
mov
movsl
pop
outsl
hlt
mov
testl
mov
dec
jle
pushf
sub
xor
and
nop
ja
inc
sahf
inc
push
fisubs
xor
icebp
and
mov
xor
imull
adc
lods
inc
xchg
sbb
imul
jmp
pop
jmp
fmull
push
xchg
fdivp
pop
lds
mov
adc
inc
jnp
inc
inc
mov
rolb
push
fistpll
dec
sarl
shrl
pop
mov
and
push
xchg
adc
and
cmp
icebp
mov
xor
lret
push
xchg
fimull
stc
fs
arpl
jmp
int
adc
or
sbb
je
les
sbb
fstl
or
cltd
mov
jo
cmp
sub
sub
dec
lahf
fisttpll
pop
fcmovne
xor
pop
mov
pop
xor
push
inc
lds
aaa
pop
je
notb
arpl
adc
push
in
sahf
in
in
js
add
int
mov
or
dec
fbstp
push
out
xchg
repz
outsb
test
pop
add
dec
pop
xchg
repnz
das
mov
mov
cli
sar
inc
in
ret
mov
jbe
pop
push
jne
outsl
mov
test
mov
or
or
cmp
mov
popa
fdivrl
dec
fsts
cmpsb
xor
jns
movsl
sar
lret
jb
inc
addl
push
cli
arpl
outsb
pushl
gs
adcl
mov
pusha
mov
xchg
mov
pop
pop
inc
mov
imul
int
inc
data16
inc
mov
ror
cmp
pop
out
int
scas
sbb
fimuls
mov
mov
imul
loope
incb
loop
jp
mov
popf
test
pushl
adc
mov
gs
adc
sarb
pusha
mov
shll
push
pop
dec
addb
shll
outsb
test
jle
dec
jo
xorb
iret
test
fidivl
int3
data16
pop
rcl
mov
push
loopne
popa
movsl
aas
out
fsubrs
das
push
es
sti
inc
xchg
xchg
std
mov
sahf
push
es
mov
mov
mov
or
sub
int3
jge,pn
mov
push
push
test
dec
jl
xchg
pop
lret
jnp
clc
inc
mov
addr16
jl
pop
cmp
push
repz
int
pop
outsb
orb
push
insl
fdivrs
adc
mov
rorb
mov
icebp
dec
outsl
and
push
push
cmp
loop
cmp
jno
inc
inc
cs
and
gs
into
insb
leave
sub
imul
into
xchg
push
icebp
mov
lahf
rorb
push
pop
inc
in
push
je
lock
pop
cmp
or
fmuls
fistl
cmc
cmp
lods
add
jns
ljmp
out
cmp
cmpsl
ret
cmp
pop
xchg
int
mov
xor
or
int
pop
js
adc
out
sar
xchg
sub
fdivrl
insl
pop
mov
jge
dec
cmpsb
add
dec
movsb
aad
addr16
mov
cmpsb
lock
sub
movsb
in
into
and
cmpsb
add
data16
mov
mov
sub
sbb
cli
sarl
fstpt
jo
lock
pop
sub
xchg
dec
in
push
test
sbb
test
aaa
or
stos
xor
fstpl
aad
xchg
fmuls
dec
push
ret
xor
mov
xlat
shl
loope
sahf
lock
enter
xchg
cltd
pop
cmp
test
imul
outsl
lcall
hlt
add
daa
mov
push
mov
lcall
mov
sarl
jae
mov
dec
out
cmp
bound
xchg
rclb
push
loopne
icebp
stos
andb
dec
xchg
add
popf
cmp
xchg
iret
pop
imul
jge
jae
rcl
scas
sti
jno
push
js
mul
xchg
in
mov
jb
inc
clc
or
pop
pop
dec
mov
inc
dec
imul
loope
aas
out
jbe
mov
lret
and
stos
sub
rcrl
insb
pop
xchg
cmpsb
out
rcrl
push
lcall
mov
fldcw
fnstcw
xchg
jg
in
cmp
xchg
imul
and
xchg
scas
xchg
mov
ja
shll
stc
ficoms
sbbl
push
cmp
in
js
lcall
jnp
les
pop
or
cmp
leave
in
add
jb
out
cli
pop
fidivl
test
cwtl
mov
mov
sbb
loope
xor
adc
sub
xlat
fstp
adc
push
push
cmpsl
push
or
xchg
and
adc
xchg
es
sub
lea
outsb
js
in
dec
jmp
stos
sbb
dec
cmpsl
sti
push
add
xchg
adc
sub
lret
mov
push
movsl
nop
xor
shr
loope
add
push
pop
ss
mov
subb
add
fdiv
mov
clc
sub
mov
test
leave
pop
lds
fcmove
sub
mov
push
repz
jno
add
ret
xchg
les
bound
inc
repz
and
fwait
std
mov
push
gs
and
into
nop
pop
dec
or
cmp
out
pop
jne
rcrb
jne
mov
fucomp
fmuls
add
sbb
sub
jp
ljmp
and
jp
add
adc
cltd
clc
push
leave
mov
enter
sbbb
mov
loop
out
cmp
mov
adc
test
call
adc
shlb
adc
cmp
addl
adc
pushf
dec
adc
xchg
lods
push
adc
pop
cs
jno
jg
pop
add
loopew
lahf
jbe
out
adc
mov
mov
mov
leave
in
mov
or
jge
dec
add
js
test
fs
ljmp
stc
sub
out
jnp
mov
nop
pop
stos
cli
pop
sbb
bound
repz
sbb
fdiv
pop
les
unpcklps
js
fldt
ja
fmul
xor
test
xor
mov
das
repnz
pop
cs
je
test
es
or
push
fcmovne
dec
pop
and
in
sbb
addr16
push
pop
cmp
leave
nop
sbb
cmp
mov
pop
dec
jb
mov
mov
scas
push
add
in
and
mov
outsl
sarl
jmp
mov
fimuls
pop
mov
dec
mov
cmpsb
jne
cmp
mov
dec
test
or
xchg
in
push
inc
idivl
stc
cwtl
push
mov
int
push
dec
cmp
or
jno
aad
mov
pop
mov
add
dec
leave
lea
xchg
adc
fs
fwait
mov
stos
cmp
dec
gs
and
icebp
inc
fdiv
or
or
push
xor
les
fsubrp
mov
xchg
enter
dec
popa
gs
sbbb
add
xchg
jno
xchg
sub
cmpsb
lods
xchg
enter
ror
ret
or
int3
lcall
adc
jl
in
inc
gs
mov
xor
ljmp
xchg
xor
jb
push
imul
iret
bound
xchg
mov
pop
sbb
mov
and
xor
mov
scas
cmpsb
inc
xor
or
call
mov
sbbb
xchg
les
lods
pushf
xor
mov
lea
lcall
jl
std
negb
loope
xchg
call
gs
adc
cmp
xchg
and
sbb
inc
push
ss
daa
sub
shrl
push
aas
out
lds
mov
test
mov
scas
imul
lods
rolb
orl
lahf
es
lods
je
pop
adc
ret
out
dec
out
mov
cli
data16
out
inc
sub
jmp
js
sub
pop
test
xchg
and
mov
xor
inc
push
bound
push
xchg
imul
xchg
push
dec
xor
shr
aad
out
cwtl
xor
fisubs
rcll
in
pop
xchg
mov
push
nop
lock
xor
cs
dec
fwait
mov
and
mov
hlt
lcall
mov
mov
sbb
mov
sub
cli
jg
or
stos
mov
jge
aaa
iret
pop
jb
pop
xchg
test
out
mov
pop
pop
add
scas
scas
dec
or
in
or
mov
js
xchg
mov
sti
mov
mov
or
adc
clc
icebp
inc
negb
push
je
sti
mov
mov
cltd
xchg
mov
and
inc
xchg
pop
jle
call
aaa
bound
dec
or
ficoms
push
call
insl
enter
imul
ja
xchg
mov
sbb
ror
jg
ficompl
jmp
aam
idivl
or
mov
int
daa
das
mov
stc
cmp
sbb
pop
jns
lahf
push
adc
inc
popf
mov
add
pop
push
xor
inc
das
cmp
not
les
push
mov
sbb
in
xchg
popa
pop
mov
pusha
push
cmpsl
outsl
bound
test
lahf
inc
mov
cmp
cmp
mull
dec
pushf
sbbl
rcrb
push
int
inc
xchg
aam
or
push
jmp
loopne
jb
and
and
scas
jg
test
cltd
fwait
xchg
add
and
cld
out
ljmp
addr16
mov
adc
or
dec
dec
test
nop
cs
addl
andb
add
lret
cmpsl
fildl
out
xchg
test
les
cmpsl
jne
shrl
adc
adc
pushf
pushf
or
pop
stc
clc
ds
dec
out
push
jno
and
imul
fnstsw
pop
add
pusha
mov
lea
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
