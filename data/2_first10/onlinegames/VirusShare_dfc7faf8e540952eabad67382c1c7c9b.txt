call
in
push
push
push
jmp
cmp
jb
push
add
adc
xor
push
std
mov
call
test
jle
xorb
push
inc
or
clc
jl
pop
mov
pop
pop
pop
ret
call
cmp
jmp
out
or
lods
shll
cltd
clc
movb
imull
pop
andl
jle
cld
add
add
cltd
inc
lcall
call
in
jg
mov
call
pop
je
lea
push
push
pop
les
outsl
xor
jne
push
add
insb
and
xor
fldcw
push
push
push
nop
push
mov
push
fcmovu
xchg
je
sbb
je
cmp
jl
mov
push
xor
cmp
je
mov
dec
incl
add
jne
mov
add
test
je
adc
sti
in
mov
je
lea
cld
mov
shr
jbe
pop
pop
pop
pop
aad
lock
mov
call
sbb
xchg
jbe
test
imul
movsb
or
add
lea
xlat
mov
stos
inc
iret
pop
mov
aas
add
mul
sti
movl
jge
call
add
andb
data16
mov
jne
aas
clc
push
lea
adc
inc
hlt
push
mov
sbb
cmp
push
clc
pop
inc
int3
jge
test
jne
cmp
jbe
mov
sti
popa
notl
rolb
or
test
or
mov
fadd
sbb
xor
push
xlat
sub
pop
mov
or
jo
das
sub
jmp
leave
or
jnp
inc
mov
mov
pusha
andb
mov
inc
in
mov
mov
and
test
xchg
pop
clc
testb
inc
or
cmp
jl
inc
pop
push
jl
test
inc
adc
dec
std
fstps
daa
xchg
or
mov
int
adc
xor
decl
rorl
xlat
repz
fdiv
movzwl
and
or
dec
lock
or
mov
insb
imul
idivb
fstpt
repz
push
push
push
add
inc
sbb
clc
cmp
je
testb
mov
inc
xchg
adc
mov
jmp
push
js
nop
aaa
lahf
loope
in
add
xchg
or
std
mov
ret
push
cld
jecxz
pop
aaa
push
pop
dec
std
or
push
loope
mov
insl
dec
xor
ficoms
dec
cmp
or
mov
mov
cld
xor
sbb
in
mov
fadds
push
ret
flds
or
cld
sti
xchg
cs
push
xor
incl
movsl
pusha
push
adc
cmc
xchg
ret
int
loope
js
and
mov
lret
test
xchg
adc
mov
test
arpl
out
push
cmpl
cmp
dec
or
pop
arpl
das
xchg
es
ret
mov
je
dec
repnz
call
adc
leave
addr16
mov
es
sub
js
jb
sub
cli
fistl
dec
cs
jb
or
out
or
divl
inc
mov
and
test
pop
cld
jne
or
loope
jne
pop
aam
ret
fcoms
inc
fwait
mov
lret
add
sub
lods
insl
or
or
inc
add
into
xor
or
shlb
add
stos
cmp
mov
cmp
cld
sbb
sbb
mov
outsl
cld
mov
fcmovnb
push
add
pushl
addr16
jne
push
out
insb
add
iret
cmp
stc
push
jecxz
movl
pop
adc
jmp
adc
push
mov
fldenv
sti
mov
cmp
out
pop
xor
fcmovu
mov
orl
dec
xlat
add
push
push
xor
cmp
aam
sbb
jb
mov
pusha
inc
mov
xchg
outsb
loope
push
push
cmp
fcmovne
faddp
add
or
mov
push
ret
lock
test
push
xchg
pushf
sbb
xor
fs
lea
jmp
cmp
jne
andb
dec
dec
popf
in
insb
adc
adc
lods
fwait
cmp
cmp
push
add
and
push
mov
sub
dec
adc
bswap
mov
inc
loope
lea
fisubl
fs
add
pop
or
adc
mulb
push
dec
ljmp
push
cmp
and
jb
sub
fildll
jae
sub
mov
or
loope
insl
sbb
add
ret
int3
jmp
mov
out
int
sti
movsl
nop
sbb
mov
and
jecxz
in
push
or
jne
insl
jbe
lret
js
incl
jl
jae
test
or
nop
sbb
or
or
icebp
addr16
push
xor
push
in
popf
cwtl
sbb
xor
mov
jg
inc
xchg
lea
push
cli
push
rcl
insb
add
xor
out
lea
sub
mov
jne
cmpb
jne
mov
fnstsw
inc
or
add
or
mov
mov
repnz
dec
movsb
sbb
outsl
and
add
aam
sub
jbe
or
pop
add
mov
adc
add
test
mov
dec
or
mov
test
pop
pop
ret
mov
mov
and
dec
add
and
xchg
fcmovb
ret
mov
sub
push
incl
sbb
or
sbb
jg
incl
test
rol
test
test
popf
in
rorl
lret
test
mov
ror
mov
rolb
lret
sub
xorb
leave
mov
jmp
ja
mov
ror
out
int3
add
lret
imul
jecxz
daa
push
repnz
loopne
call
lret
stc
test
icebp
stc
out
xlat
xlat
lcall
divb
repz
int3
lret
push
in
aad
lret
int3
imull
loope
jmp
pop
cwtl
mov
scas
jo
cmp
push
mov
adc
das
call
add
dec
add
inc
pop
nop
add
push
add
mov
add
add
pop
mov
int
mov
call
jae
jo
outsl
addr16
insl
and
outsb
outsb
outsl
je
bound
jb
outsb
and
incb
push
and
fs
xorl
mov
sti
ret
add
pop
stos
push
stc
mov
testl
notb
cmpsl
push
loopne
shl
clc
cs
pop
push
imul
dec
add
int
andb
or
ja
adc
xor
das
call
adc
or
add
es
mov
pop
add
sub
es
testb
push
adc
push
xor
addb
rolb
in
or
std
je,pn
js
jmp
nop
out
jge
fldt
and
jb
popa
je
loopne
inc
lahf
sbb
inc
cs
push
daa
push
rorb
iret
mulb
outsl
arpl
mov
adc
inc
mov
or
sbb
xchg
pop
aad
or
push
jmp
cmc
sbb
push
cmc
incl
fs
ret
js
lcall
pop
rolb
inc
add
jg
cmp
push
sbbb
pop
je
pop
lcall
push
call
dec
xor
insb
push
test
clc
add
cmp
xor
mov
push
jle
add
push
and
inc
inc
cmp
mov
fstpt
jl
cld
call
frstor
divl
push
adc
cwtl
push
dec
cmp
lods
jnp
call
jae
lods
sti
das
je
add
push
sub
ss
notb
add
mov
add
lods
sbb
ljmp
push
xor
sbb
push
sahf
std
int
in
xchg
fisubrs
or
dec
je
dec
jne
fisttpl
push
add
lock
jl
popf
in
test
pop
lock
mov
push
push
dec
mov
jne
jmp
insl
mov
clc
jmp
xor
xchg
in
mov
sub
mov
dec
sbb
mov
mov
add
xor
shrl
adc
call
sbb
jmp
movsb
xchg
arpl
push
shl
push
mov
jmp
call
xor
in
movsl
pop
shlb
mov
insb
call
mov
ret
stc
add
pop
sbb
rcll
adc
pop
clc
incl
subb
xchg
xchg
jne
cmp
aad
rolb
inc
xchg
push
testl
imul
or
jnp
mov
fiadds
and
or
inc
adc
ret
push
or
lret
shl
je
psubw
sbb
mov
aad
pop
mov
and
add
add
or
rcrl
adc
ret
int3
nop
std
call
mov
cs
rorl
add
outsl
sbb
into
sbb
test
addr16
decl
fldenvs
push
xor
flds
xor
cld
mov
ret
xor
xor
scas
or
xor
idivl
sbb
icebp
ret
pusha
mov
or
insl
jnp
and
hlt
push
pop
pop
dec
pop
std
mov
jmp
mov
lea
push
push
call
iret
divb
or
xchg
pop
and
mov
xchg
in
mov
mov
push
push
pop
stos
or
stos
mov
cmp
mov
add
lods
icebp
jnp
mov
pushl
or
mov
dec
and
insl
mov
and
xor
movsl
ffreep
jnp
and
lcall
mov
push
push
inc
push
push
push
call
xchg
add
inc
add
add
cmp
out
fldt
and
pop
add
push
or
shrl
sbb
cmp
call
cltd
int
lea
cltd
movl
das
mov
pop
add
mov
fcmovne
xor
cmp
fldenv
sub
lock
rcll
inc
rcl
dec
push
cmpl
js
jbe
push
call
sub
inc
add
sbb
add
mov
jns
andb
adc
sbb
or
push
and
or
jl
push
inc
cmpb
jne
ja
jg
add
inc
add
movzwl
push
add
lea
je
xor
jmp
cmp
test
adc
mov
call
cld
mov
imul
nop
cmpsl
je
cld
jmp
cmp
jb
cmp
ja
andw
outsl
add
xlat
lea
mov
add
pop
add
or
movzbl
fcmovbe
push
add
or
lea
xchg
fcmovu
pop
cmp
cld
push
call
and
xchg
jbe
pop
push
cmp
push
mov
add
mov
aaa
mov
into
push
fcmovbe
push
scas
mov
or
orb
push
sbb
out
push
je
or
loopne
andb
xor
int3
adc
ds
imull
std
movsb
inc
and
and
add
pusha
fwait
mov
daa
outsl
rcrl
push
push
push
mov
pop
div
in
pop
jae
ds
add
rclb
sub
ja
xor
mov
adc
mov
call
cmp
shll
add
fsubrl
das
inc
orl
xchg
scas
jne
mov
push
outsb
dec
sub
hlt
push
inc
cmp
xor
sti
mov
fnstenv
add
adc
push
fidivs
dec
popa
dec
movb
insb
mov
xchg
shll
push
mov
push
pop
push
in
inc
jmp
and
imul
or
and
ja
mov
add
pop
orl
cmpsl
xchg
fcmovnb
inc
rolb
cmpsl
xor
les
adc
and
sbb
pop
sbbl
jbe
clc
sbb
and
clc
call
loopne
ficoms
or
mov
call
and
push
mov
sbb
call
and
ror
enter
push
mov
cmpsl
enter
dec
xchg
dec
mov
enter
jp
outsl
enter
inc
pop
pop
push
enter
inc
inc
fs
enter
cmp
insb
sbb
enter
or
stc
enter
xor
stc
mov
push
shl
cmp
adc
sub
sbb
inc
pusha
dec
add
pop
ret
insb
push
pop
dec
pop
jge
ret
je
jns
push
push
outsl
jno
adc
subl
cmp
movw
xor
das
cmp
mov
push
loope
cld
push
sbb
pop
clc
sub
add
jmp
andps
push
adc
test
mov
mov
call
movl
ret
push
mov
pop
call
pop
push
adc
sbb
cs
rcl
sub
fwait
decb
ja
push
andb
fisubrl
cmp
cmp
incl
add
cs
iret
mov
shrl
pop
add
push
arpl
out
neg
movsb
pop
mov
stc
dec
cltd
push
in
call
adc
shlb
sbb
mov
push
movsb
xor
jno
cmp
adc
cmp
dec
inc
push
ljmp
inc
call
mov
xlat
bound
aaa
cltd
divb
cmpsl
add
add
inc
mov
fdiv
cwtl
mov
lods
pop
adc
aaa
push
fdivs
sti
cmc
add
add
mov
jle
xor
call
jl
nop
or
jl
sub
ret
std
pusha
jnp
adc
rolb
mov
pusha
pop
mov
or
pop
cmpsb
push
mov
xchg
aas
dec
jae
mov
mov
movb
lods
sti
insb
call
jge
sub
js
or
outsb
loopne
pop
cmp
mov
add
inc
push
mov
mov
add
sti
nop
outsb
ja
scas
push
fs
testl
outsl
mov
pop
mov
adc
cltd
cmp
pop
sbb
int
test
sbbl
lahf
or
mov
in
testb
test
cmp
push
les
jnp
out
vandps
lea
push
cmp
cs
in
fcomip
or
xchg
std
hlt
add
mov
xor
jnp,pt
push
sub
and
sbb
cmpb
hlt
sbb
or
call
shl
test
add
arpl
and
sub
xchg
mov
sbb
in
into
test
loope
call
mov
pop
ljmp
mov
sbb
xor
xor
xchg
cmpsl
les
clc
mov
mov
insb
cs
aaa
push
cmp
sbb
pop
ds
fstp
cs
stos
ja
pop
movsb
fistpl
insb
in
mov
repz
ficoms
outsl
jae
add
repz
subb
js
data16
pop
push
sub
outsb
cmpl
mov
cmc
push
add
add
sbb
dec
insb
cmp
dec
les
or
aaa
push
mov
sti
getsec
and
jnp
fwait
es
xor
gs
data16
dec
dec
addr16
mov
push
xor
or
mov
cmp
pop
mov
inc
mov
fwait
push
add
movsb
push
out
fildl
xchg
adc
orb
fmul
and
fs
add
shlb
call
or
addr16
sub
jb
or
je
insl
insb
add
or
cmp
sub
or
iret
push
adc
andb
xor
cmp
pop
cmp
cld
cmp
or
movb
jle
test
xchg
ljmp
mov
iret
jle
loopne
pop
and
dec
insb
std
or
and
insl
xor
mov
dec
fcomip
icebp
or
fsubrs
add
add
arpl
pop
shl
dec
sbb
gs
or
std
pushl
leave
mov
push
into
shr
mov
neg
shl
lea
add
mov
pop
lahf
mov
adc
enter
pop
pop
addl
add
xchg
pusha
pop
sbb
xchg
mov
inc
sbb
jno
or
push
xchg
inc
stos
ret
andb
and
or
push
jnp
cmc
mov
js
outsl
push
cmp
loop
jl
add
push
mov
add
aad
sub
cwtl
mov
inc
cld
cmp
jl
push
jne
sti
fnstenv
notb
mov
mov
dec
xor
inc
and
inc
jl
fmuls
jl
das
cmp
dec
hlt
jne
mov
pop
mov
rolb
imul
clc
add
dec
pushf
sbb
mov
iret
out
outsb
sbb
mov
add
cld
sub
std
in
jl
push
stos
sbb
jmp
push
lods
jo
mov
jae
mov
push
or
shr
push
cmc
adc
mov
movsb
jmp
faddl
adc
cwtl
leave
xor
out
mov
xchg
lcall
je
mov
fdivrl
dec
xchg
or
lret
jmp
add
pop
mov
sbb
jo
xchg
or
mov
arpl
das
jne
lea
mov
imul
xchg
rcrb
xor
dec
loopne
or
push
fwait
pop
inc
ds
call
mov
inc
cmp
sub
js
mov
pop
mov
inc
cmpb
stc
popa
or
push
jo
push
adc
aam
jmp
or
sbb
mov
fcomi
lret
jne
jo
jg
sub
sbb
and
sbb
pop
sub
pop
call
or
insl
sbb
pop
in
adc
popf
inc
push
jb
pop
add
mov
push
add
pusha
inc
xchg
inc
loopne
sub
push
and
inc
mulps
loopne
pop
sti
mov
mov
sbb
fisubl
lret
adc
out
into
mov
clc
or
jl
out
adc
shr
rcrb
dec
lods
call
dec
push
jo
ss
addl
or
push
xor
and
pop
adc
gs
jmp
dec
in
push
enter
pop
fs
push
fs
and
jl
jb
in
movsl
pop
test
sbb
xor
fcoml
ja
pop
cmp
jle
lret
les
add
fimull
push
push
jge
aas
cmp
cmpsb
jle
mov
sbb
loop
sub
mov
jge
int3
enter
popa
push
xchg
push
lahf
xchg
rcll
addb
cmp
sub
cmp
jo
mov
push
ret
cmp
fnstenv
insb
cmp
push
mov
mov
inc
into
add
adc
jmp
or
in
test
decb
jb
and
cmp
push
pop
scas
or
mov
and
push
sub
mov
sub
sub
ljmp
inc
pcmpeqw
mov
je
in
jl
sub
mov
sti
int
fs
jmp
ja
es
out
dec
inc
mov
test
add
sub
push
sbb
push
fs
nop
stc
addr16
jb
arpl
cwtl
and
jb
and
mov
repnz
std
je
ja
or
clc
or
outsb
add
jno
adc
inc
push
push
sbb
outsl
or
sahf
inc
enter
sbbl
jl
push
movsl
fs
leave
mov
pop
movsb
fs
inc
movsb
outsl
mov
sub
stc
push
and
in
call
fwait
fwait
xor
icebp
fmuls
pushf
mov
int
push
mov
mov
pop
ss
mov
int3
gs
pop
outsl
push
mov
shrl
inc
add
gs
mov
sti
add
adc
inc
icebp
push
sbb
push
inc
loopne
mov
sub
add
das
mov
pop
mulb
add
sbb
flds
js
xchg
js
pop
push
loop
inc
lds
mov
dec
cs
mov
ss
dec
pop
cmp
cmp
out
xor
cmp
adc
push
cmp
pop
fldcw
popf
cs
movl
or
cmpsb
clc
sti
stc
insb
ds
sbb
fsubr
xchg
xchg
clc
sti
jo
sti
add
jno
call
and
adc
outsb
or
push
sbb
in
dec
xor
mov
cld
sub
or
push
inc
cld
add
roll
jne
data16
fiaddl
push
or
and
xor
ss
sbb
and
ret
daa
dec
xor
cmp
out
push
pop
jmp
sbb
pop
pushf
int3
sub
loope
lods
decb
sbb
popf
movaps
out
sbb
fdivl
das
mov
sub
and
out
inc
pop
and
inc
sub
xor
xor
sub
add
sbb
pushf
in
push
adc
ss
mov
jmp
lods
popf
sub
ret
dec
jl
std
hlt
cmc
add
mov
out
out
iret
sub
jbe
stos
bound
dec
test
push
sahf
fs
in
cmp
inc
js
mov
ret
sbb
out
clc
push
adc
and
cld
push
pop
inc
iret
and
dec
ret
pop
sub
mov
jmp
in
out
inc
cmp
sub
add
mov
in
in
test
in
xchg
in
or
je
push
push
je
push
mov
sahf
or
aam
insb
js
int
icebp
movsl
mov
outsl
push
clc
mov
fnstcw
cmp
movsbl
push
inc
jl
dec
jg
push
int3
inc
dec
inc
lea
mov
cmpsl
sti
fisubrs
inc
jl
or
and
movb
sti
or
shl
sub
mov
cli
dec
and
dec
sub
pop
sbbb
enter
std
or
sbb
imul
sti
cld
in
xchg
inc
cld
cld
sub
xor
xor
int
aam
add
pop
xor
or
cmp
or
add
imul
sbb
sbb
add
sbb
sbb
enter
fwait
or
decl
jp
jo
loop
add
or
pop
loopne
sub
mov
testl
and
mov
sbb
mov
push
push
lods
mov
arpl
es
mov
and
jno
cmp
jb
mov
test
je
call
je
xchg
mov
pop
dec
ljmp
stc
mov
es
adc
push
addr16
cmpl
es
je
add
and
iret
or
rorb
or
sub
adc
xor
pop
sub
mov
not
fsubl
icebp
testb
es
mov
test
add
and
jmp
xchg
cmp
add
pop
pushf
dec
pop
int3
add
add
or
add
push
and
mov
lcall
les
mov
shll
sub
jne
mov
add
inc
push
xor
xlat
xor
ficoml
push
pop
xchg
add
xor
mov
xor
shll
inc
cmp
sub
dec
xlat
and
or
inc
pop
je
fldcw
cmovp
outsb
ja
iret
fneni(8087
inc
lock
inc
and
pusha
adc
pop
push
ret
mov
pop
push
lcall
call
pop
xor
cs
insb
add
aas
aas
xor
inc
pop
push
inc
stc
xchg
pop
add
add
jb
arpl
add
add
lds
jg
jae
dec
add
insb
outsl
jae
pop
jb
popa
fs
std
add
adc
xor
jmp
pop
dec
dec
and
bound
pop
gs
mov
pop
outsl
jo
outsb
add
dec
pop
rolb
je
mov
dec
data16
imul
push
out
sub
popa
je
imul
xchg
sbb
push
inc
push
push
mov
testl
insl
add
loopne
insb
xchg
popf
add
push
jae
pop
data16
in
in
imul
outsl
fs
gs
imul
fst
push
das
jmp
jb
gs
dec
int
mov
les
push
imul
fcmovnu
out
arpl
aas
testl
je
mov
clc
adc
stc
add
ja
lret
sbb
push
sub
pop
repz
outsb
add
in
or
call
mov
imul
outsl
dec
cmpsb
and
fnstsw
mov
cmp
push
push
pop
ds
inc
fs
fistpll
inc
aam
ret
outsl
outsl
dec
imul
inc
push
es
dec
popa
outsb
and
and
or
dec
mov
lret
cmpb
jbe
bswap
popa
divl
push
push
addr16
jnp
or
addl
inc
testl
inc
push
dec
inc
dec
adc
loope
pop
ret
xchg
jecxz
cmp
imul
je
add
adc
jb
inc
adc
rorb
push
and
sti
and
xchg
cli
xchg
xchg
lret
rol
rorl
add
neg
in
dec
lret
lret
rcl
push
adc
lret
lret
rol
mov
sti
ja
lret
roll
in
or
adc
movzbl
jg
testl
rcl
aad
ret
jbe
out
fisttps
fmul
enter
roll
stc
shlb
add
fiadds
rol
stc
out
fisubs
jg
push
rcll
mov
lret
int3
add
loop
lret
out
pop
lret
popf
jecxz
out
xchg
xchg
mov
enter
decb
loop
mov
incl
xor
push
loop
cs
shrb
xchg
adc
nop
pop
std
mov
call
add
push
mov
adc
and
pop
cmp
notl
cmp
dec
cmp
push
add
mov
in
xchg
orb
mov
insl
inc
stc
xchg
dec
addr16
or
pop
aas
dec
cmc
lods
push
push
push
fnstenv
cltd
outsb
flds
add
add
rorl
pushl
test
fsubs
mov
icebp
inc
dec
jmp
cltd
jae
mov
sub
jmp
cltd
push
cs
daa
xor
aaa
sub
dec
testb
dec
xchg
ljmp
scas
repnz
or
bound
cmp
push
icebp
mov
enter
cli
cmp
decl
push
hlt
filds
xchg
or
add
xchg
adc
push
sahf
jmp
call
sbb
cmp
lock
mov
mov
pop
lahf
fldenv
pushl
add
sub
mov
sbb
ret
inc
lret
xchg
dec
dec
arpl
popa
sbb
sar
dec
jmp
sbb
jge
sub
je
bound
imul
push
jnp
pop
jmp
xchg
mov
in
inc
sbb
mov
jno
fcompl
xchg
mov
daa
inc
jl
in
jg
mov
sarl
mov
or
mov
pop
shl
or
lock
popa
arpl
jne
lcall
push
pusha
test
push
mov
leave
inc
mov
daa
fldenv
in
pop
sahf
mov
lock
fcompl
test
mov
inc
jo
mov
lods
and
sub
mov
imull
lds
repz
lcall
jmp
popf
cmpb
scas
outsb
cmp
ljmp
sub
les
mov
lcall
aad
sub
cmp
loope
daa
bnd
push
outsb
repnz
mov
jae
fidivl
mov
push
enter
rorl
push
stos
negb
jne
cld
cmp
dec
xchg
pop
sti
push
sub
lods
sub
daa
cmpsb
mov
fs
mov
jnp
inc
jb
popf
movsb
les
call
cmp
sub
push
test
shlb
push
dec
stos
cmp
mov
lcall
and
pop
cmp
jo
push
sbb
mov
xlat
icebp
mov
scas
inc
call
lcall
cmp
inc
pop
add
jnp,pt
hlt
dec
js
mov
loope
hlt
div
xor
sub
ds
decl
andb
sarl
aad
pop
aaa
inc
orl
mov
mov
xor
jle
or
sub
out
mov
fstpl
insl
xchg
es
cltd
das
lret
pcmpgtw
jg
ja
fsubl
and
sub
lret
xchg
lea
mov
ljmp
xchg
repnz
imul
sbbl
lods
push
ljmp
outsb
cmp
leave
out
jae
jl
push
ss
push
add
and
popa
ljmp
inc
pop
push
xor
push
je
dec
scas
pop
mov
leave
xor
lcall
scas
mov
adc
cmp
jo
xchg
jb
sub
lret
and
inc
lods
fiadds
sti
in
in
push
in
xor
pop
clc
adc
mov
cmp
in
pushl
inc
jnp
stos
clc
dec
lea
sub
mov
inc
andb
add
call
jne
movsl
push
push
pop
loopne
sub
sahf
mov
fadds
sarl
inc
push
rorl
jp
mov
mov
xor
inc
repnz
adc
cmp
rclb
lahf
inc
pop
loop
icebp
test
icebp
cmc
mov
jmp
scas
lock
in
and
adc
fwait
imul
or
or
pop
cmp
inc
add
or
add
mov
into
enter
mov
jle
push
jle
js
adc
aad
xchg
add
add
xchg
xchg
enter
aas
orl
cltd
ret
lret
sti
or
jle
cwtl
mul
loope
dec
cltd
mov
pushl
push
repz
pop
sbb
out
stos
popf
jmp
dec
mov
dec
jmp
sub
adc
mov
aaa
fsubr
pop
inc
jl
adc
int
das
lock
jnp
and
xor
mov
fsts
xor
lcall
mov
cli
or
mov
fst
cmpsb
inc
adc
or
and
mov
add
lcall
cmp
into
and
or
pop
mov
add
ja
xor
shll
mov
add
andl
rcl
mov
lret
jo
push
outsl
out
jecxz
leave
lahf
or
jg
addl
xchg
mov
xlat
popa
mov
push
imul
ljmp
or
or
add
rcll
xchg
dec
jns
xor
movsl
out
call
and
sub
add
je
frstor
fsubs
or
mov
call
filds
add
inc
adc
mov
arpl
sti
add
pop
xchg
inc
lret
jmp
bound
dec
sub
aad
ret
sbb
mov
cmp
add
aad
mov
ljmp
xor
outsl
xor
xor
xor
xor
xor
xor
xor
xor
pop
xor
hlt
jmp
ja
jge
test
xchg
xor
xor
into
xor
incl
pushl
add
push
xor
xor
push
jnp
xchg
xor
xor
or
incl
fs
xor
xor
xor
xor
xor
ljmp
sbb
dec
xor
arpl
mov
pushl
push
ss
ss
mov
aaa
or
sbb
and
sub
ss
cmp
inc
aaa
dec
pushl
push
aaa
data16
insb
aaa
xorl
xchg
aaa
movsl
aaa
mov
aaa
aad
fidivl
pushl
or
sub
cmp
dec
cmp
mov
cwtl
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
pushl
push
cmp
jno
cmpl
cmp
cmp
cmp
sbb
cmp
cmp
cmp
cmpb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
call
cmp
cmp
cmp
cmp
outsl
cmp
mov
inc
cmp
cli
cmp
pop
ds
fnstsw
jmp
ds
ds
aas
decl
aas
inc
aas
dec
aas
pop
aas
pop
aas
insl
aas
jbe
jge
cmpl
aas
xchg
aas
test
scas
aas
iret
aas
xchg
dec
ret
call
aas
fnstsw
in
jmp
hlt
aas
lahf
and
ljmp
xor
mov
enter
fidivs
out
jmp
icebp
xor
xor
xor
xor
xor
jmp
xor
xor
xor
xor
xor
xor
jns
xorb
xor
pushl
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
dec
xor
xor
xor
xor
dec
xor
test
xor
lcall
and
xor
cmp
dec
ss
ss
jnp
nop
mov
ss
repnz
aaa
pop
aaa
cmp
jl
jnp
aaa
repnz
add
push
cmp
push
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
je
mov
lds
fnstcw
out
cli
cmp
cmp
push
cmp
imul
cwtl
cmp
cmp
cmp
cmp
jge
cmpl
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
pop
cmp
cmp
nop
cmp
stos
ds
sarb
fdivrs
fidivrs
in
ljmp
decl
aas
and
sub
cmp
add
aas
push
aas
popa
aas
imul
add
loope
aas
mov
dec
or
add
ds
adc
add
mov
nop
adc
jle
cli
dec
adc
popa
cmpsb
jo
outsb
outsw
push
sbb
add
add
std
dec
popa
jo
rcll
outsl
pusha
push
and
mov
ss
jb
outsl
jb
push
imul
xchg
sub
push
inc
inc
js
sub
loopne
arpl
dec
push
stos
in
mov
stos
push
cmc
insl
inc
imul
rolb
fs
pop
outsl
jne
xor
push
or
call
jp
outsl
bswap
mov
sbbb
mov
cmp
add
bound
and
jnp
outsl
or
imul
gs
mov
sub
popf
add
cmp
jns
mov
push
push
jne
jns
popa
insb
push
adc
and
out
mulb
stos
sbbb
outsb
imul
gs
jo
pop
push
aaa
mov
adc
setl
jns
setns
sbb
pop
data16
or
int3
mov
fisubrl
in
ret
mov
add
xchg
push
jb
jae
or
outsb
outsb
or
push
pop
arpl
cmp
xchg
adc
add
mov
mov
scas
push
add
rorb
sbb
and
jl
sbb
sahf
pop
lgdtl
mov
fstps
jnp
and
dec
mov
jo
call
int3
and
scas
adc
adc
add
dec
adc
pop
dec
and
arpl
jae
add
in
add
adc
addb
or
or
lods
mov
add
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
