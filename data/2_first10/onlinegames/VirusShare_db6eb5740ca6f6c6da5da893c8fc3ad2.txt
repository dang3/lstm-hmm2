sbbl
mov
iret
incl
xchg
gs
imul
xchg
sbb
in
fcmovnbe
lds
stos
fwait
xorl
lret
mov
pop
dec
aaa
sub
cltd
les
xchg
gs
add
mov
incl
jmp
add
mov
lea
rcrl
js
js
xchg
repnz
stos
mov
out
adc
add
lcall
lea
cwtl
lcall
lcall
mov
imul
xchg
fwait
call
cwtl
xchg
xchg
sahf
xchg
fwait
call
inc
test
cwtl
popf
mov
into
into
rcrl
cmpsl
lcall
cli
adc
lock
lock
imul
mov
xchg
clc
test
popf
lea
mov
in
add
loope
iret
lret
je
jle
xchg
idivl
inc
lret
fwait
lcall
je
mov
and
add
test
por
scas
lods
cmp
mov
sbb
sahf
aaa
mov
hlt
xor
xchg
cld
xor
xor
xchg
xor
xor
das
hlt
cs
cld
sub
adc
and
mov
les
call
and
and
aam
enter
scas
cld
push
mov
sbb
sbb
and
push
mov
fcoms
mov
enter
or
mov
or
or
pop
or
cld
add
add
xchg
push
xchg
dec
subb
pop
cmp
subl
aaa
out
paddusw
or
add
sub
pop
les
mov
test
je
adc
je
idivl
mov
int3
aas
and
dec
add
jb
addr16
cmp
xlat
stos
scas
test
ljmp
aas
mov
in
ljmp
inc
inc
lret
cmpsb
mov
icebp
repz
out
pop
fsubl
xchg
and
add
xor
cmp
repnz
movsb
ss
jl
jecxz
rorb
insb
ljmp
test
inc
bound
out
repz
notl
je
jbe
stc
pop
cli
adc
ficomps
test
cmp
xchg
stc
orl
xchg
mov
mov
loopne
dec
mov
inc
xor
add
int3
and
or
loop
out
fbld
pop
in
loope
les
pushf
xor
xchg
cld
xchg
movsb
mov
jl
dec
mov
test
jmp
mov
movsb
adc
fdivrs
mov
jge
scas
jg
ret
mov
movsb
pop
das
dec
mov
push
jmp
pushf
mov
repz
dec
dec
lret
xor
in
pop
scas
jae
ds
jae
scas
sub
iret
in
xor
xchg
push
shl
mov
call
bnd
repz
xchg
nop
jp
cmpsl
mov
testl
loopne
or
pop
in
inc
repz
dec
cmp
dec
cmpsl
sti
movsl
iret
and
jmp
jecxz
inc
fwait
lock
pop
mov
fistps
xchg
mov
jl
ss
cmp
mov
out
mov
hlt
negl
jnp
dec
pushl
jmp
pusha
imul
ret
dec
push
inc
and
dec
and
repz
push
jp
repnz
out
mov
in
stos
jmp
outsb
out
stc
jne
sub
mov
mov
cmp
loopne
sbb
cmp
stos
dec
adcl
std
ljmp
iret
jmp
lock
ljmp
loopne
std
fildl
jb
push
stos
in
xchg
add
mov
inc
sub
mov
mov
movsl
in
mov
aad
xlat
inc
int3
fildl
dec
test
dec
inc
aam
pop
or
outsl
ljmp
push
pop
and
cmp
ds
mov
scas
and
mov
lods
cmp
call
test
aam
fildll
sub
stos
fsubs
arpl
sbb
shr
pop
dec
shrb
push
adc
das
test
inc
mov
mov
sti
aas
into
add
and
jb
jae
mov
mov
or
lods
test
jb
dec
dec
sti
jg
pop
out
aas
inc
out
adc
jb
push
repnz
cltd
push
inc
xor
lods
push
xchg
xor
inc
xchg
or
jne
cld
cmp
adc
lret
cmp
jl
dec
mov
andl
test
sub
cmp
and
int
xor
cmpsl
pop
jmp
mov
pop
iret
test
adc
cmpsl
rorl
aad
jnp
das
lds
call
jne
cmpsl
mov
or
xchg
mov
test
cmpsb
push
push
add
leave
mov
cmpsb
repz
cmp
test
and
add
push
and
fimuls
pop
cmpsb
gs
iret
cld
mov
cmpsb
gs
lcall
cmpsb
inc
idiv
mov
xchg
cmc
mov
hlt
inc
hlt
stc
xor
jl
xor
dec
cli
hlt
adc
jb
scas
lods
pushl
cld
ljmp
ss
imul
pop
sbb
scas
or
repz
ljmp
hlt
cmp
mov
shll
sub
stc
adc
jb
stc
xor
xor
shll
pushf
xor
inc
xchg
ja
cs
lods
repnz
dec
repnz
inc
cli
add
mov
inc
addr16
push
xchg
sub
jb
ljmp
test
cld
add
mov
ds
aas
cli
in
inc
lret
cmp
inc
jnp
lea
pushf
cmp
lock
add
add
xor
popf
xor
fmull
pop
add
mov
lret
int3
sub
sub
and
push
sub
xchg
repnz
add
lea
addr16
push
ljmp
cltd
add
push
or
fsubrl
or
outsl
xlat
das
xchg
inc
push
xchg
inc
stc
sub
inc
xor
ss
xchg
dec
test
add
fcoml
hlt
leave
imul
dec
or
xchg
mov
nop
ror
mov
xchg
mov
dec
insl
iret
rolb
inc
stos
mov
xchg
hlt
xchg
push
out
fwait
pushf
or
hlt
dec
ds
leave
popf
rorb
lret
cli
je
add
xchg
arpl
bnd
mov
inc
sarl
add
in
mov
cmp
inc
lahf
push
cmp
xchg
push
jl
aaa
xchg
jae
dec
jmp
stc
push
mov
nop
int3
aaa
cmp
lcall
or
popf
shl
xchg
cld
ret
mov
pop
loopne
cltd
mov
ss
lahf
stc
mov
popf
inc
add
jb
scas
stc
pop
inc
scas
pushf
inc
pop
mov
pop
push
ret
out
mov
lods
fadd
fwait
scas
mov
sbbl
mov
loopne
sbb
push
ds
mov
roll
mov
adc
movhps
ret
inc
jle
in
out
push
or
xchg
pop
int3
cmp
push
out
jmp
inc
add
fdivrp
ret
sub
mov
jmp
je
loopne
hlt
xor
fidivrl
fidivl
xor
hlt
lock
xchg
outsl
out
imul
xorb
jmp
push
hlt
sar
int
and
cmpsl
call
je
repz
je
mov
push
cmp
arpl
fisttps
in
jnp
mov
scas
jp
aam
dec
fwait
ds
mov
mov
xchg
jge
stos
aad
mov
mov
fildll
scas
mov
mov
jmp
call
xchg
out
std
stos
stos
es
incl
fcom
fwait
cld
ljmp
pushl
ja
repz
sti
cld
add
inc
loopne
stc
aas
stc
mov
loopne
icebp
shr
nop
add
dec
divb
fiadds
mov
stos
xchg
xchg
inc
lea
add
sahf
xchg
xchg
nop
mov
popf
lcall
std
mov
nop
fwait
lcall
repnz
fstpt
or
cld
push
pushf
rorb
clc
cmp
data16
dec
and
or
data16
adc
inc
data16
clc
lods
xchg
pushf
xchg
and
out
or
pop
scas
mov
out
dec
inc
adc
jbe
dec
icebp
fdivp
stc
repz
cmovb
out
cld
cli
clc
std
rcll
clc
scas
repz
daa
ds
out
clc
stc
outsl
das
jb
pop
test
mov
fs
loope
leave
or
popf
mov
popf
aas
jg
rcrl
lcall
jmp
pop
cmp
lea
adc
jecxz
les
hlt
hlt
fdivrs
pop
inc
into
cld
jae
sbb
leave
jge
add
loopne
ror
mov
xchg
cld
push
dec
cmp
adc
mov
daa
std
iret
add
aad
mov
mov
mov
lret
mov
dec
inc
xor
sub
mull
mov
mov
test
fwait
stos
inc
adc
mov
lret
lcall
imul
xchg
jge
scas
movsl
xchg
jmp
mov
and
jge
dec
cltd
movsb
outsl
add
iret
int
aad
int3
sub
mov
and
ret
mov
in
insb
shll
scas
popl
inc
xlat
jle
xlat
jp
sub
xchg
out
repz
xchg
out
test
data16
lret
push
shl
in
out
repz
leave
sti
sti
shll
insb
cli
jmp
aam
jmp
outsb
jmp
cmpb
in
sbb
cld
jmp
repz
mov
bnd
sbb
jmp
cld
jmp
out
daa
aam
jecxz
mov
pop
and
daa
xor
dec
mov
cmc
add
ficoml
int
test
or
test
xor
ret
mov
jl
out
jne
cmp
stc
mov
test
scas
cmp
sub
lock
inc
add
rcl
cmp
stos
pushf
and
in
lahf
dec
scas
stc
pop
fucomi
xchg
out
jnp
mov
sub
inc
lahf
js
aas
sub
mov
rorb
mov
pop
sbb
in
gs
xor
sbb
pop
add
lret
sbb
push
fbld
repz
int3
and
mov
fwait
fwait
dec
imul
lret
jg
les
out
lods
pop
pop
aaa
dec
and
in
inc
stc
pop
rolb
mov
jmp
add
dec
xlat
mov
loop
sti
notb
mov
out
mov
mov
scas
outsb
sbb
lahf
jnp
mov
lock
faddl
inc
ret
inc
out
idivl
pop
cli
testb
or
cmp
cld
mov
insb
int3
jne
in
test
add
adc
cwtl
dec
out
je
jns
mov
inc
mov
pop
fwait
rclb
bound
xchg
xchg
mov
loope
adc
lcall
inc
out
cli
sbb
test
dec
pop
fidivrs
test
push
lods
adc
mov
ret
mov
hlt
cs
inc
jbe
add
int3
inc
sub
hlt
jle
pop
test
js
dec
lock
test
adc
push
xchg
aad
add
jbe
mulb
cmp
and
push
or
mov
shrb
scas
add
cltd
iret
scas
int3
imul
sti
dec
adc
cmp
mov
cmp
fstpt
push
in
inc
or
cmpsb
in
add
test
lret
shl
cmc
xlat
mov
mull
xchg
std
pop
stos
adc
ret
sub
pop
iret
loop
dec
pop
js
cli
push
push
bound
loop
fdivr
in
cmc
mov
and
mull
fcompl
sbb
inc
dec
and
lahf
lock
movsl
cli
dec
rorl
mov
mov
mov
in
repz
ljmp
cwtl
loopne
lcall
cmp
icebp
dec
repz
ret
addr16
pusha
jno
cli
lds
lods
pop
ret
in
cmp
sub
test
out
repnz
mov
cltd
push
sub
inc
adc
mov
cmp
imul
lahf
xchg
pop
sar
fwait
pop
test
cmp
loope
jbe
clc
sbb
fwait
nop
cmpsb
imul
mov
imul
rcll
imul
lcall
lret
and
inc
xchg
and
cwtl
cld
and
and
pop
lret
push
inc
in
pop
sbb
outsl
add
add
xchg
push
ret
divl
scas
cli
daa
scas
in
jl
mov
jl
jmp
lds
and
cli
pop
xchg
imulb
scas
lahf
push
shr
sub
xor
pop
sbb
clc
xor
lods
lods
cld
mov
cmp
adc
aad
push
out
mov
jns
lahf
out
jge
jae
pop
mov
cmp
subb
ljmp
sub
aam
sti
cmp
fcomi
xchg
shlb
dec
mov
mov
or
cltd
jle
and
ret
fldcw
mov
shl
mov
popf
pusha
jbe
and
or
mov
mov
lock
sub
out
xorb
or
adc
mov
mov
adc
testl
loope
xchg
and
and
cld
and
mov
scas
mov
bound
cld
in
aad
xchg
mov
roll
cld
sahf
in
idiv
jl,pt
std
scas
and
pop
int
push
loopne
clc
jl
sti
jl
adc
sbb
dec
jbe
cmp
mov
mov
jbe
adc
dec
fwait
push
mov
repz
cli
je
ja
pop
inc
cmp
jl
out
jno
mov
adcl
nop
lock
stc
je
mov
ds
mov
je
and
and
imul
out
cltd
outsb
mov
cltd
out
test
and
pmaddwd
mov
imul
hlt
sti
mov
mov
loope
std
mov
sbb
leave
lret
imul
testb
xchg
mov
mov
cld
mov
test
xchg
mov
jnp
mov
and
cld
or
add
dec
push
cmp
mov
dec
inc
hlt
add
mov
and
hlt
in
out
sbb
je
add
push
cld
cmp
push
pop
cld
mov
rcl
fstpt
and
jecxz
push
cmpsb
xrelease
xchg
push
scas
jbe
mov
mov
xchg
mov
int3
je
adc
repz
jecxz
cmp
push
jp
or
and
shr
xchg
in
xor
enter
jnp
mov
pushf
jae
sub
cmp
lods
arpl
fmull
ljmp
fmuls
xchg
xchg
sti
xchg
lods
xor
lock
sbb
mov
insb
fiadds
into
cmp
cmc
notl
scas
add
imul
ja
add
daa
fcmovnb
cmp
loop
fnstenv
mov
or
movsb
mov
sub
mov
in
lock
iret
je
dec
dec
mov
cld
pop
jmp
cltd
xchg
fldl
mov
loop
aaa
jmp
jmp
das
enter
inc
pop
mov
pop
cmp
sarb
jge
mov
inc
loopne
scas
sti
negl
inc
mov
arpl
mov
or
test
test
jg
xlat
lcallw
xchg
sub
mov
clc
pop
push
push
hlt
cli
cltd
cpuid
add
mov
notl
mov
orl
jmp
imulb
aaa
bound
je
pushf
dec
iret
mov
fdivr
repnz
pop
dec
mov
sbb
mov
jle
xor
rcrl
jmp
scas
pop
out
push
mov
or
inc
sti
js
cli
repz
cli
lods
mov
ficoml
or
cli
mov
cmp
cmp
cmp
aaa
cli
inc
in
push
dec
pop
jle
push
aas
fstpt
dec
push
mov
xor
in
int3
test
rcl
in
dec
xor
in
in
mov
cld
leave
jmp
in
push
filds
jbe
cld
movsb
lret
mov
mov
inc
mov
xchg
fwait
xchg
lcall
nop
pushf
mov
nop
add
repnz
fwait
mov
popf
lea
sbb
nop
aas
or
mov
lcall
mov
rol
cmpsb
in
je
icebp
sahf
mov
fldl
xchg
mov
xchg
lock
in
xchg
mov
sub
hlt
cld
loop
jnp
test
add
rcrl
test
xchg
jecxz
lea
cwtl
fidivs
mov
xchg
mov
cli
xchg
es
adc
push
aam
lcall
in
cld
scas
mov
xchg
xchg
out
pushl
jb
xchg
nop
inc
adc
jns
mov
testl
mov
adc
mov
cmp
push
xchg
dec
sahf
dec
mov
mov
lock
or
lock
jo
out
jb
shlb
sub
das
inc
ljmp
vfrczss
lods
cmp
xchg
xchg
repz
mov
popf
push
loop
ds
jmp
jo
int
xor
jmp
les
shrb
out
xchg
sahf
mov
out
fsubrp
mov
adc
adc
or
les
xchg
push
inc
pushf
shl
test
mov
lods
mov
cmc
hlt
lock
inc
push
std
fmuls
and
cltd
cmp
lods
in
call
inc
mov
xchg
lcall
mov
mov
and
jp
lahf
movsb
ror
mov
pushf
nop
mov
es
push
sahf
sbbb
stos
mov
cltd
xchg
adc
dec
xchg
pop
lods
ljmp
sbb
xchg
inc
mov
sahf
pushf
jne
call
ljmp
push
lcall
in
les
std
jp
pop
out
outsb
jbe
and
xchg
iretw
mov
in
data16
mov
xchg
lock
fsubrs
idivb
std
testb
mov
mov
into
lret
test
fdivs
mov
ljmp
add
test
ja
push
arpl
xor
pop
into
add
ljmp
add
add
int
int
int
int
int
int
int3
ljmp
int3
add
add
mov
pusha
int3
push
int3
add
icebp
lret
loopne
lret
jae
gs
push
lret
out
lret
movsl
lret
jp
add
or
lret
sti
leave
out
leave
out
pushf
leave
popa
leave
cmp
sub
adc
pop
cmpsl
add
add
leave
jmp
in
fcmovne
aam
leave
enter
enter
enter
enter
fadd
int
cmpsb
add
add
sahf
xchg
movl
inc
loop
mov
les
add
add
test
ret
rol
ret
xchg
ret
dec
ret
inc
ret
aas
ret
fadd
enter
ret
push
add
ret
jno
imul
ret
push
ret
or
jp
add
subb
and
nop
or
inc
shr
insl
jb
clc
push
mov
jb
lods
mov
jb
adc
inc
dec
push
jb
fmull
test
push
jb
clc
movsl
or
push
popl
jb
or
shl
and
cmpsl
or
aas
into
xchg
std
push
clc
outsl
xor
call
clc
pop
and
mov
add
fcmovne
jecxz
mov
mov
aas
lcall
clc
cltd
fdivrs
jl
popf
jle
jb
clc
es
insb
lahf
jl
aas
add
xor
test
mull
cmc
stos
mov
ror
mov
adc
outsl
adcl
filds
add
mov
pop
xchg
gs
xchg
dec
xor
sub
popa
fcoml
pop
push
leave
mov
lret
cmp
xchg
gs
cmpsb
loope
mov
xchg
pop
xchg
gs
mov
push
inc
lds
xor
or
rcll
mov
xchg
gs
test
dec
aas
stc
dec
xchg
gs
sbb
cld
fcmovne
mov
pop
xchg
jae
push
dec
cmp
gs
sub
test
xor
xlat
jmp
cld
gs
xchg
gs
xchg
cwtl
gs
xchg
test
bound
adc
dec
mov
loopne
mov
mov
mov
cld
pop
dec
xchg
gs
cmpsb
stc
out
in
rcrl
gs
mov
mov
lea
xchg
gs
xchg
push
inc
cmp
cmp
xor
in
jo
in
lods
std
jns
xchg
gs
icebp
aad
jmp
push
cld
shrl
and
test
aas
cmovge
pop
inc
jns
dec
je
nop
push
mov
in
lahf
cmpsl
mov
dec
cmpb
jmp
push
imul
mov
add
cld
in
out
test
mov
mov
movsl
or
cltd
pushf
mov
xor
mov
mov
cwtl
aas
dec
lea
cltd
mov
mov
xlat
test
jecxz
cli
daa
pop
cwtl
pushf
xor
repz
scas
mov
std
mov
insl
cld
xor
daa
jmp
pushl
ds
cld
out
xor
cmp
decb
jns
cld
mov
cmpsl
xlat
fwait
mov
pop
std
fists
dec
and
cmpsl
and
or
fidivrs
std
shr
cld
decl
cmp
sahf
fcoml
mov
std
fildll
push
clc
notl
cld
add
fst
dec
sahf
clc
incl
mov
adc
cld
mov
insb
mov
aam
mov
mov
cmpsb
mov
incl
jne
imul
hlt
jg
sar
in
sti
dec
int
fucomip
mov
int
lock
test
xchg
push
outsb
nop
decl
dec
xchg
jbe
pushf
decl
lock
loop
mov
testb
lcall
rolb
mov
mov
mov
cwtl
hlt
mov
test
fimull
shll
xchg
or
iret
div
in
stc
daa
and
iret
int
cld
push
aas
add
dec
mov
call
leave
test
in
jmp
ficompl
mov
imulb
mov
and
mov
xchg
mov
sarb
cld
shl
inc
pop
xchg
mov
cld
mov
stos
les
xchg
xchg
mov
sbb
xchg
push
mov
mov
movups
cld
nop
mov
lcall
mov
into
dec
mov
add
xchg
mov
pop
sahf
mov
mov
lahf
lcall
popf
sahf
xchg
fmul
xchg
cld
movsb
call
rcr
xchg
lds
clc
movsl
cmpsl
pushf
dec
nop
fbld
pushf
repz
xchg
cwtl
rorl
decl
dec
add
out
dec
sub
add
push
cmp
hlt
dec
or
pop
jo
adc
xlat
xchg
lcall
xchg
sarb
mov
and
mov
push
dec
call
fucomp
cmp
outsb
rcr
add
stos
sti
les
xor
inc
push
mov
int3
in
iret
inc
adc
sub
xchg
mov
hlt
xchg
mov
sahf
lock
rolb
pushf
lock
jl
dec
and
lock
pop
hlt
push
add
and
cld
dec
sbb
arpl
mov
adc
mov
mov
popf
stc
dec
iret
ret
jp
mov
repnz
xchg
lahf
or
adc
cwtl
add
jmp
ds
mov
sbb
int3
out
aas
mov
push
jb
mov
cmpsl
cmp
cltd
jp
cltd
dec
sti
jmp
mov
inc
leave
xchg
ss
sbb
mov
out
jmp
add
out
dec
and
cmpsb
cmpsb
movsl
sbb
sti
ja
decl
test
or
dec
xor
jl
sti
mov
add
hlt
mov
mov
je
push
jbe
fnsave
and
jl
add
fidivrl
je
add
stc
xchg
inc
aas
repnz
add
sti
call
inc
mov
ret
jmp
jmp
aas
mov
stos
dec
jge
xchg
ljmp
aam
roll
and
test
add
adc
and
lods
ds
std
test
jbe
dec
jb
test
insb
pop
push
subb
inc
inc
incb
je
pop
dec
jge
test
push
addb
clc
fdivr
aam
scas
jb
loopne
adc
ja
adc
cmp
push
jbe
push
mov
mov
jbe
dec
sbbb
repz
pop
inc
mov
pop
mov
jmp
and
mov
xor
adc
rcrb
pop
icebp
in
push
inc
jns
cmp
mov
and
pop
int3
add
ss
push
add
jmp
ret
jp
cmp
inc
out
ss
dec
out
leave
mov
clc
xchg
lock
mov
nop
in
lock
mov
lock
lock
repnz
cli
jl
or
jp
push
mov
jbe
xchg
cld
adc
movb
xor
out
adc
sti
arpl
repnz
jne
dec
push
mov
fs
scas
inc
into
dec
stos
pusha
pop
jb
stos
push
cmp
xchg
repnz
in
inc
test
cmpsl
mov
ss
flds
test
and
mov
imul
sub
fbld
test
fcmovnb
les
scas
test
je
dec
cli
inc
mov
imul
or
sar
add
out
mov
adc
adc
out
or
sahf
les
out
add
add
mov
test
test
loopne
adc
push
push
notb
mov
pop
test
cmp
rol
cmp
mov
pop
jnp
divl
fbstp
sbb
shlb
loop
lahf
sub
mov
sahf
xchg
lcall
inc
stos
movsl
rcrb
xor
popf
sahf
mov
jb
popl
add
cmp
push
je
aam
jl
cmp
mov
inc
cli
jl
repnz
xchg
outsl
xchg
jb
mov
pop
bound
test
out
cmc
rcrl
in
fdivr
jl
xchg
push
enter
test
mov
mov
add
notl
and
fiadds
out
jge
iret
xchg
fldt
add
xchg
inc
lock
mov
cli
fisttpll
repz
loopne
inc
mov
or
mov
jne
jg
icebp
pushl
repnz
loope
cmp
mov
cmpsb
addl
and
je
lods
jmp
mov
std
lds
sahf
xchg
in
sbb
mov
iret
clc
rcr
jo
sahf
out
out
out
adc
in
scas
sahf
in
pop
shr
in
das
sahf
iret
mov
or
cli
pop
cmp
sahf
cmc
or
fistl
inc
adc
jle
lcall
cld
xor
cld
in
das
mov
int3
mov
iret
imul
out
cmpsl
das
pop
fistl
aad
pop
cmp
addr16
mov
mov
mov
cwtl
adc
les
mov
in
jmp
movsb
and
sbb
jne
inc
cmc
sbb
jne
and
add
out
sbb
jmp
icebp
shl
mov
jl
lods
pop
dec
cmp
sahf
jns
aas
cmp
adc
test
dec
fisubrs
dec
idiv
push
jp
data16
movsb
mov
lea
xchg
push
pop
fldt
pop
nop
ja
inc
incb
fstl
pusha
mov
push
loope
icebp
sub
and
mov
divl
sub
xchg
xchg
dec
mov
loopne
clc
mov
movsb
sub
or
xchg
cmp
mov
out
lds
nop
xchg
data16
cvtps2pd
cltd
pop
inc
pop
repz
daa
aaa
xor
inc
das
pop
out
inc
and
push
cmp
inc
or
jg
jecxz
push
cmp
dec
dec
dec
jo
sldt
inc
sbb
pop
mov
lock
mov
sub
icebp
call
sub
ja
stc
pop
jmp
in
mov
pop
pop
mov
loop
aad
jns,pn
mov
dec
aas
imul
add
cltd
je
repz
les
mov
call
mov
xchg
xor
mov
adc
out
and
inc
mov
and
std
or
mov
and
lds
rol
out
cmpsb
lea
inc
pslld
sub
mov
je
cld
jno,pt
out
fs
mov
testl
test
jl
mov
adc
adc
xchg
std
test
add
jge,pt
js
ljmp
iret
movsb
test
aas
pop
dec
jecxz
xor
mov
in
int3
mov
xor
add
mov
repz
lds
rorb
cmp
fiadds
sbb
inc
loop
dec
in
imul
loopne
sbb
add
lret
repnz
pop
into
pop
clc
inc
nop
sbb
cld
cmp
movsb
mov
adc
pop
or
pop
repnz
cld
cmp
mov
jne
movsb
test
les
sbb
imul
mov
push
aas
dec
xor
sub
fdiv
setae
stos
hlt
aam
pushl
ja
jnp
jg
jnp
fcmovnbe
into
or
sbb
into
insl
call
cmpsl
into
pop
jl
dec
cld
outsl
iret
fcoms
out
iret
pop
push
movsl
stos
pop
movsl
push
in
mov
cld
imul
fs
out
aad
xor
xchg
movsl
outsb
hlt
out
aad
mov
hlt
fldt
xchg
pop
in
scas
push
imulb
test
scas
cwtl
sbb
jg
cwtd
pop
jno
stos
ret
pop
sbb
dec
jmp
fidivs
std
mov
xchg
rorl
ljmp
fsubp
out
cmp
je
ljmp
ret
call
and
adc
bound
xor
mov
in
jno
push
add
inc
jnp
testb
mov
das
pop
inc
call
or
and
dec
xchg
sar
cwtl
test
xlat
out
xchg
xor
jmp
adc
std
pop
lock
xchg
out
stos
cmp
jne
inc
lahf
loop
and
jg
pop
pushf
out
shl
imul
cltd
or
push
xchg
pushf
or
in
das
es
fldl
ja
fdivs
xchg
adcl
mov
add
mov
out
jns
xor
or
iret
mov
jmp
fxch
xchg
add
or
aaa
icebp
jbe
cli
push
in
cli
mov
lahf
insl
mov
jl
dec
out
fildl
notb
sahf
sbb
xchg
test
inc
or
jmp
je
pop
add
and
or
adc
or
inc
cmp
pusha
lds
inc
lds
leave
ljmp
out
jne
jg
mov
idiv
adc
jl
lock
add
mov
hlt
sti
jb
enter
hlt
aas
push
cli
add
inc
out
out
cmp
mov
hlt
cmp
cmp
out
aaa
ds
testl
fisttps
cmp
int3
sub
hlt
je
pushf
add
jp
mov
je
add
movsb
sbb
aas
mov
xor
and
dec
sub
out
mov
push
out
mov
jnp
clc
hlt
wrmsr
adc
les
mov
les
push
das
movsl
and
cli
mov
repz
idiv
xchg
or
inc
mov
jl
std
push
fistps
mov
jne
fdivrl
cmp
test
dec
mov
idivb
out
hlt
pusha
repnz
hlt
leave
sub
push
std
pusha
faddl
and
lock
mov
aam
je
xchg
scas
push
aam
sub
xchg
inc
sub
cld
das
idiv
sub
cltd
mov
jbe
idiv
cmp
ror
out
repz
out
cmp
xchg
add
shl
jne
ret
mulb
aas
enter
in
nop
ret
jmp
nop
shll
out
mov
jecxz
xlat
pop
ljmp
stc
adc
in
sbb
cmp
aam
into
sti
pushf
push
dec
aas
pop
sti
and
and
and
ja
sub
data16
mov
sub
pop
adcb
mov
fdivr
dec
mov
add
aas
mov
fsubrp
cli
in
lahf
pushf
mov
aaa
dec
cs
cmp
cli
mov
jbe
xor
jnp
mov
insl
ja
pop
test
mov
fldlg2
aas
lcall
or
cld
mov
in
out
movsl
repnz
jbe
pop
stos
in
push
lods
fistpl
mov
mov
mov
test
add
enter
ss
lock
into
fnstcw
sti
into
cmpl
lea
adc
adc
adcl
fdivrl
jbe
imul
adc
adc
fucomip
repz
inc
inc
std
fidivrl
mov
jmp
cmpsl
shll
mov
icebp
je
ds
add
gs
jl,pn
rol
mov
add
aaa
inc
sub
loop
mov
push
fidivrs
shll
cmp
mov
stc
call
mov
add
cmpsl
add
jne
aas
sti
ds
xchg
ds
mov
stc
dec
in
jb
lret
sub
xlat
cmp
cmp
xor
outsb
mov
movsl
je
out
cmpsb
mov
lock
pop
je
or
faddl
icebp
sub
or
add
add
dec
call
je
ds
out
push
sti
cld
cltd
scas
add
nop
inc
or
hlt
or
cld
out
jb
enter
je
cmp
adc
pusha
inc
inc
adc
add
mull
hlt
inc
add
jb
les
cmpsb
ds
ds
add
inc
out
jmp
pcmpeqb
fmull
or
mov
push
mov
pop
ror
adc
inc
inc
adc
xor
hlt
or
or
and
mov
and
in
lock
and
sahf
je
adc
add
stos
mov
je
and
sub
aas
fisubl
in
stos
in
aad
js
je
and
and
out
sub
adcl
sub
and
dec
or
aam
in
mov
sarb
rcr
and
add
push
cmpb
xor
loope
push
add
jp
ljmp
jge
jmp
sbb
add
jp
xchg
jp
fnstcw
jl,pt
lret
push
xchg
xor
daa
addr16
adc
jmp
cmpsl
das
and
mov
loopne
or
push
adcl
dec
add
je
pop
mov
ret
xchg
and
movsb
stos
mov
xchg
adc
cld
aad
daa
stc
in
jns
sub
cli
inc
sub
dec
mull
mov
adc
enter
stos
cmp
fucomp
outsl
xchg
fidivs
sub
and
sub
and
add
jecxz
ficoms
cld
stos
add
jge
xchg
fiadds
and
pop
mov
mov
cld
clc
xlat
arpl
jno
xchg
mov
je
ret
int
mov
movsl
sahf
aam
fcomi
js
nop
adc
lahf
sub
cmp
jmp
std
fdivp
jp
inc
aas
dec
mov
ds
dec
adc
and
in
cmp
fsubl
sub
stos
mov
call
adc
in
cli
hlt
out
std
push
sub
andb
mov
call
das
movsl
int3
inc
cld
or
mov
dec
lea
or
mov
mov
ds
and
adc
sti
push
cmp
dec
scas
dec
sub
fcoml
pop
dec
mov
jb
xchg
cmp
push
or
out
shrb
pop
jae
push
sub
jae
dec
push
je
daa
dec
jae
or
loope
jns
jmp
std
lahf
jo
das
jo
movsb
add
stos
fisubl
jle
pop
daa
sub
gs
icebp
pop
jp
and
fsubl
es
dec
shll
sub
mov
jo
dec
fsubs
xor
bound
and
das
dec
sbb
test
ficoms
outsb
pop
dec
cmp
sahf
popf
aaa
jo
clc
enter
popf
xchg
cmp
jo
in
cmp
ljmp
decw
xchg
js
sub
sub
icebp
repz
jo
fsubl
es
mov
adc
movsl
mov
je
shl
mov
mov
and
xchg
aam
push
push
sbb
xchg
jo
dec
cmovle
ror
pop
pop
adc
fcomi
pop
add
jo
or
je
xor
push
out
std
nop
cwtl
sub
icebp
inc
push
mov
cmp
mov
ret
je
jne
aad
jae
dec
sub
int3
sub
das
out
push
mov
mov
sti
push
add
mov
add
jle
mov
xchg
and
hlt
jge
shl
or
rol
fstpl
xchg
mov
add
mov
ret
pop
mov
sbb
fildl
pop
enter
or
dec
adc
sarl
sbb
add
xor
mov
lea
movsl
pop
push
or
or
loope
les
lea
call
pop
mov
add
lods
dec
pushf
es
jmp
inc
sbb
xchg
push
repnz
jno
iret
cmp
jo
in
sbb
cld
cmp
imul
pop
adc
enter
cwtl
int3
and
movsb
movsb
pop
jp
adc
and
sbb
inc
iret
and
and
push
xchg
scas
dec
cmp
cmpsb
inc
ja
adc
jb
sub
shl
mov
xchg
push
cmc
xchg
cmp
mov
data16
inc
or
xor
add
lods
sbb
push
mov
cld
in
jp
jns
repz
lcall
pop
scas
dec
sbb
ss
dec
xor
out
mov
dec
xchg
push
das
in
push
stc
hlt
loope
stc
dec
jp
cmp
xchg
int3
jg
dec
ss
aad
bnd
jb
pop
inc
lock
imul
sbb
imul
xchg
leave
cmpl
lea
insb
add
adc
xchg
push
out
loop
into
push
push
sub
push
bound
shrb
cmp
movsb
lcall
sbb
subb
repnz
insl
xor
jo
mov
cmp
popf
lret
sub
mov
mov
shrl
adc
orb
add
mov
or
cmc
xchg
loope
loop
out
adc
mov
in
sbb
adc
mov
push
adc
in
adcl
cs
or
int3
lea
mov
out
sbb
add
cmc
test
cmp
loope
mov
pop
adc
loopne
out
divl
std
inc
jge
lods
push
sub
sbb
bound
stos
cmp
or
daa
pop
lret
imul
pop
daa
pop
and
jp
int3
cmp
aad
xchg
jnp
dec
lock
dec
mov
outsb
sub
adc
into
lods
mov
shlb
adc
mov
pop
dec
mov
xchg
jbe
je
stos
je
repz
repz
lahf
mov
mov
xchg
lahf
adc
nop
aaa
das
mov
jg
cmpsb
les
cmp
xchg
mov
ja
in
scas
or
lods
lret
psllw
repnz
xchg
mov
cmpsl
and
xchg
jb
xchg
jge
mov
xchg
push
push
xchg
outsl
xor
scas
imul
out
icebp
clc
out
das
fimuls
mov
out
jne
pop
jb
test
jmp
in
mov
scas
int
pop
jae
decl
mov
inc
lods
and
stos
nop
icebp
xabort
aam
test
stc
ret
aad
orb
push
add
adc
xchg
or
pop
ljmp
lret
je
cmpsb
pop
fsts
in
push
pop
jge
mov
mov
movsb
int
add
sub
aas
xor
mov
mov
mov
add
dec
cmpsb
ljmp
pop
out
inc
gs
add
xchg
cmc
xchg
stos
jne
ret
cmp
out
ror
mov
adc
jmp
repnz
adc
xchg
mov
mov
jle
cmp
adc
jmp
fimuls
fisubrs
lods
out
push
dec
adc
or
mov
adc
test
das
cltd
dec
das
xchg
and
stos
scas
repnz
push
add
sahf
sub
and
and
stos
sbb
or
push
movsb
ret
inc
mov
and
idivb
xlat
sti
push
nop
fisubl
divb
mov
rolb
adc
mov
scas
idivl
push
lret
inc
xor
addr16
cmovns
mov
leave
movsb
xchg
imul
dec
jmp
test
mov
push
pop
imul
iret
ljmp
xchg
and
mov
sub
xchg
je
xor
out
cld
pop
push
xor
pop
jl
jmp
iret
in
jns
out
pop
cmp
sub
cmp
mov
or
mov
shlb
notb
jmp
cli
dec
mov
loope
dec
out
lret
scas
mov
outsb
aad
cmpsb
mov
inc
mov
jae
or
jp
mov
pop
and
xchg
test
cld
test
fldcw
bsf
sub
test
pop
sbb
and
addr16
mov
add
adc
xor
inc
sti
cltd
loope
lea
lds
add
pushf
cltd
je
sti
cltd
ret
mov
cli
fmul
sub
ficoml
in
fsubl
lock
cmp
and
test
sub
cmc
clc
mov
and
cmpsb
mov
mov
mov
ret
clc
xchg
lods
pusha
inc
jb
xchg
inc
and
test
mov
mov
addl
and
or
std
ret
mov
mov
xchg
adc
jno
push
js
lock
test
xor
adc
xchg
sbb
scas
inc
dec
stos
push
insb
fsubrp
or
sub
jg
aaa
jbe
or
dec
and
mov
movsb
scas
inc
cmpsb
jmp
ret
stos
and
aam
mov
adc
hlt
pop
movsb
fcmovnu
jge
sahf
in
in
xchg
std
jp
jns
cmc
in
dec
dec
dec
xchg
adc
dec
and
adc
nop
xchg
jecxz
outsl
icebp
push
jns
imul
in
aad
inc
pop
inc
xlat
test
lahf
ds
fistpll
push
jbe
imul
adc
leave
in
in
fdivs
fisubl
es
movb
add
inc
dec
pop
xchg
lret
jno
rolb
mov
stc
mov
dec
lahf
in
daa
xor
add
dec
inc
rclb
and
pop
adcb
loopne
or
iret
and
call
xchg
xchg
sysret
outsl
jge
test
inc
jecxz
je
arpl
mov
xorl
nop
mov
or
dec
fimuls
aaa
jmp
call
inc
pop
pop
rclb
xchg
enter
hlt
outsl
pop
cmp
leave
shrb
stc
call
es
out
fstl
dec
and
imul
pop
dec
jb
testb
adc
pop
xlat
div
xor
jge
idiv
dec
inc
ret
fidivrs
inc
add
cltd
call
jmp
dec
adc
mov
test
lods
jae
inc
out
jl
leave
xchg
filds
jecxz
or
stc
inc
dec
addl
and
lods
add
in
test
xchg
dec
mov
pop
daa
aas
aas
cltd
sub
xchg
xor
mov
xchg
cld
push
mov
xchg
dec
cwtl
push
test
dec
mov
mov
lcall
mov
inc
hlt
inc
faddl
cld
inc
xchg
ja
mov
in
ljmp
xor
xchg
nop
lea
rcrl
xor
sar
shlb
xor
rcll
xlat
mov
dec
aad
aad
xchg
inc
xchg
div
adc
adc
femms
xchg
mov
or
aas
sarb
sub
mov
mov
cmp
lcall
iret
iret
ficompl
mov
cmpsb
imul
inc
das
bound
push
call
bound
xchg
scas
das
cmpsb
mov
in
bound
int
out
mov
cwtl
ljmp
jg
imul
adc
pinsrw
test
arpl
cmp
rcrb
shll
or
lcall
in
iret
es
pop
and
mov
aad
push
dec
mov
jne
cmp
ljmp
jl
pop
pop
and
or
lock
dec
sbb
jb
aam
cs
sub
cli
jg
mov
xor
mov
cs
sub
cs
fldt
add
sbb
add
mov
test
push
fsubl
jnp
inc
cmp
movsb
mov
lahf
enter
out
mov
aaa
popa
cmp
pop
adc
jecxz
lret
sub
push
les
inc
stc
fldcw
rcrb
iret
push
js
fcos
mov
fistpl
ss
sbb
add
icebp
divl
pushf
clc
pop
lret
inc
stos
ret
out
mov
les
daa
xlat
cmp
xchg
lret
add
pop
icebp
in
scas
pop
xor
dec
cmp
jnp
aaa
pop
rorl
shr
dec
xchg
xchg
rorb
ja
mov
and
into
aaa
leave
mov
subb
cmp
jo
idiv
dec
hlt
sub
repnz
repnz
pop
pop
inc
jge
adc
inc
push
push
repz
adc
sbb
aad
add
cmp
sbb
cltd
mov
std
test
cli
dec
inc
inc
xor
incl
cmpsb
jmp
cmp
test
xchg
cmpsl
ret
xlat
hlt
xor
xchg
mov
sub
cmpl
adcl
jl
jmp
aad
scas
inc
dec
xchg
movsb
fwait
xor
lret
mov
xchg
gs
xchg
fnstsw
cli
in
mov
and
xchg
icebp
xchg
and
pop
mov
adc
push
inc
loopne
jl
jnp
cli
inc
inc
out
rcll
pop
insl
pop
or
in
mov
push
pop
loop
pop
ljmp
out
fwait
adc
add
fs
mov
fists
out
mov
push
pop
mov
popf
jnp
pop
push
scas
jg
ds
mov
sub
movsb
sbb
jl
roll
out
mov
dec
pop
incb
js
xor
sbbl
test
out
jle
in
leave
daa
call
inc
or
out
insb
out
mov
mov
and
in
or
adc
fsts
pop
in
lahf
cmc
icebp
jp
fsubrl
iret
ljmp
out
loopne
cmp
jge
dec
je
jae
jae
test
jl
add
push
jno
notl
idivl
fisttps
cmc
mov
lea
mov
std
dec
adc
push
ret
pop
xor
aad
or
or
or
xor
sarl
mov
std
pop
ret
clc
jge
jbe
xchg
addr16
cmp
hlt
jg
cmc
in
cld
dec
lock
mov
fwait
sbb
cltd
scas
xchg
fwait
dec
xchg
imul
js
imul
xor
dec
mov
push
loope
scas
clc
pop
or
out
fwait
outsl
or
movl
jg
repnz
neg
xchg
mov
adc
pop
cld
adc
or
push
adc
cs
adc
jge
in
mov
hlt
push
sahf
leave
cmp
outsl
or
fnstenv
mov
lcall
in
dec
push
rcrb
in
dec
jbe
movsb
pop
das
push
cltd
loopne
aas
out
nop
mov
aas
mov
push
loope
ss
inc
clc
addr16
outsl
mov
stc
nop
dec
out
adc
pop
nop
mov
iret
aaa
inc
cmpsb
mov
mov
aaa
fistpll
js
js
jl
int
js
out
jo
rcll
cmp
js
into
jmp
in
cmpsl
pushf
fndisi(8087
jle
js
pop
add
repnz
loope
ret
push
pop
lahf
fists
add
imul
jmp
xor
in
xchg
fwait
xor
push
shll
sbb
in
pop
xchg
mov
jno
ja
pop
cmp
jl
xchg
inc
orl
xchg
shrb
loop
mov
mov
dec
mov
dec
jmp
mov
ja
xlat
in
loop
repnz
lods
das
adc
fwait
loopne
xchg
and
xchg
mov
jb
imul
scas
adc
push
in
pushf
scas
sub
div
sub
dec
out
xchg
jp
cmp
or
push
gs
ja
or
out
popf
pop
data16
mov
in
shrl
arpl
ja
popf
fsubs
cwtl
incl
idivl
adc
dec
and
and
xchg
mov
out
test
out
inc
add
scas
jg
jg
mov
inc
xor
in
jb
mov
push
xchg
or
cli
sbb
in
fs
mov
popa
mov
pop
sahf
cmp
xchg
ja
mov
in
mov
fwait
cmpsb
orl
stc
push
pusha
inc
or
mov
icebp
dec
shll
xchg
mov
aad
out
js
sbb
lods
or
out
pop
negl
div
mov
push
shrb
push
out
pop
je
fs
mov
imul
orl
stc
adc
pop
push
inc
sub
hlt
testb
test
sbb
sub
incb
and
add
fbld
pop
jno
clc
scas
and
xor
mov
int3
aas
pop
mov
fimull
arpl
pop
in
lods
pop
lahf
jl
test
mov
adc
mov
add
scas
icebp
jae
cli
test
popf
jae
mov
aam
pop
mov
sbb
test
add
orl
sahf
adc
loope
mov
imul
bound
pop
dec
cli
out
testb
mov
decb
cli
sub
in
test
inc
in
test
adc
xchg
push
cld
push
imul
ret
and
std
out
mov
loop
inc
js
lods
stc
shrb
xlat
js
cmc
aaa
std
xor
lahf
cmpsb
dec
std
sub
and
std
rorl
pop
jno
push
mov
fucom
out
and
iret
jnp
push
ds
xor
cli
and
jb
dec
mov
fstpt
imul
lret
icebp
mov
pop
xchg
in
cmp
pushf
cmp
out
add
jg
enter
stos
addl
and
mov
in
push
mov
out
lods
js
push
into
inc
xlat
xor
pop
sbb
je
or
test
shlb
mov
or
jmp
jmp
mov
and
lock
xchg
mov
int
cld
add
pop
push
cmpsb
mov
scas
scas
test
test
lods
in
outsl
cmp
arpl
cmpsb
mov
pop
mov
xchg
ds
sub
test
and
stc
pop
int3
mov
mov
dec
shrl
push
mov
xchg
push
push
pop
rcll
sub
sti
jg
adc
adc
das
mov
fwait
xchg
rcrl
adc
out
sub
clc
and
bound
dec
pusha
mov
pop
lock
hlt
pop
in
pop
js
dec
mov
cmpsl
pop
lock
call
xchg
aas
dec
adc
push
scas
push
lcall
dec
mov
adc
jg
dec
arpl
xor
mov
cmp
icebp
jne
xchg
mov
jae
jb
jno
mov
inc
outsl
mov
gs
inc
inc
arpl
imul
mov
jge
push
imul
data16
lcall
mov
stos
and
and
mov
sbb
sbb
xor
cli
mov
mov
mov
xor
rcrl
dec
shll
lcall
inc
mov
int
idivb
daa
addr16
ja
ja
int
int
daa
outsl
dec
mov
lods
jb
xchg
loop
rol
xchg
xor
divb
jl
add
add
std
pusha
fcmovb
popa
into
jb
out
xchg
lds
lods
inc
sub
aas
repz
int3
ljmp
pop
cmpsl
lret
ret
pop
pcmpeqd
or
lock
out
adc
loope
mull
cmp
out
mov
cmp
add
sti
btc
push
sbb
test
mov
jle
stc
into
push
repz
aas
sub
bound
test
loop
push
ja
cli
in
and
sub
ljmp
sahf
popf
les
repz
add
popa
int
aam
ret
fsts
adc
iret
xor
je
jle
cs
fiadds
jae
or
in
iret
adc
and
scas
jg
sar
lods
dec
fldl
bound
lods
stos
popf
testb
xchg
pop
mov
jo
adc
daa
cltd
xchg
pop
sti
dec
sbb
roll
test
xchg
dec
idivb
sub
sub
sti
pandn
sbbl
adc
cmp
js
loope
das
pop
mov
mov
xchg
gs
int3
int
sbb
mov
push
cld
pop
lea
xchg
add
adc
xchg
sub
negl
clc
jns
jnp
xchg
mov
push
and
gs
xor
add
inc
iret
pop
arpl
mov
xor
testl
pop
sub
rdpmc
daa
pop
mov
push
enter
in
pop
loop
lret
xor
jp
mov
mov
or
stc
mov
clc
mov
add
cmpsb
lds
sub
mov
dec
int3
ljmp
ret
jmp
mov
inc
shrl
mov
bound
sbb
cmp
xor
mov
dec
dec
lea
jl
test
loop
lods
mov
sbb
scas
mov
and
add
stc
fwait
pop
aas
negl
dec
cmpsl
mov
fidivrl
lods
mov
std
mov
pop
bound
adc
adc
and
lock
loopne
xchg
push
mov
xor
mov
fsts
mov
xchg
add
sub
sbb
jg
inc
leave
mov
mov
ffreep
mov
add
dec
out
hlt
jge
mov
mov
mov
add
ja
push
popf
xchg
clc
fldl
out
dec
add
clc
nop
cmpb
aas
sbb
cmp
stos
pushf
adc
sbbb
mov
into
enter
inc
pop
cmp
inc
mov
sub
loopne
mov
ljmp
jl
or
jg
in
mov
xor
clc
lds
test
cli
inc
fistpl
sbb
int3
popa
mov
mov
mov
int3
inc
inc
add
xchg
and
xor
inc
jbe
add
shlb
pop
sub
jecxz
clc
int
and
aaa
jp
inc
inc
ret
sbb
je
sub
cld
or
ljmp
rorb
jns
adc
adc
or
sub
adc
add
mov
xchg
add
dec
loopne
aaa
ficoml
gs
jnp
das
arpl
pop
pop
pop
dec
popa
das
pusha
aas
pop
das
pop
adc
adc
pop
mov
mov
mov
xchg
jecxz
xchg
xchg
lcall
push
rclb
mov
cmp
mov
mov
lret
sahf
pushf
mov
sub
ret
aas
gs
push
adc
ds
cmp
cmp
popf
aaa
shlb
push
xor
push
das
fisubl
popf
sub
sub
int
scas
and
lahf
sub
loopne
cs
pop
xchg
dec
xchg
jnp
in
fadds
mov
pop
lods
mov
aam
mov
mov
lret
mov
sahf
mov
jl
adc
stos
lods
inc
test
sbb
mov
fimull
xchg
mov
mov
std
in
mov
mov
dec
pop
lcall
mov
loopne
adc
dec
adc
addr16
outsl
pop
ds
lock
dec
out
dec
or
jb
xchg
xchg
push
out
xchg
inc
dec
iret
loop
pop
std
jmp
cmp
cli
push
xbegin
int
adc
add
cli
pop
aas
loop
jl
das
xchg
das
clc
pop
lea
jmp
enter
xchg
dec
ds
jg
incl
scas
addr16
mov
lret
fidivrl
mov
je
mov
xor
inc
int3
xor
xor
inc
mov
xchg
stc
out
shrl
loop
lock
push
out
mov
in
push
sbb
rolb
into
push
mov
add
add
hlt
sub
fwait
iret
data16
loopw
mov
popf
cmp
mov
clc
fildll
pop
or
in
or
pushf
and
pop
xchg
int
nop
sahf
lea
push
pop
xchg
mov
sub
sbb
xchg
fwait
lcall
sbb
pop
sti
std
mov
adc
addr16
mov
popf
or
movsl
bndldx
sti
data16
icebp
pop
scas
push
lcall
fisubrs
lret
jne
into
cmp
inc
stc
xchg
add
loop
mov
iret
jmp
lods
leave
xchg
sub
mov
in
fwait
push
lock
repz
sub
mov
in
int
sub
lret
addr16
je
hlt
daa
cmp
stc
lds
pop
xchg
push
mov
pop
mov
ret
repz
dec
movsl
inc
xchg
lret
lahf
testl
and
lods
jl
sti
repz
cli
roll
inc
cli
adc
adcl
sti
fwait
imul
orl
pop
scas
les
sbb
jmp
fwait
lock
aas
clc
pop
pop
or
ljmp
cmpl
cmp
pop
and
and
inc
mov
int3
xor
xor
dec
xor
aaa
cli
dec
iret
mov
leave
dec
repnz
jmp
cli
mov
jecxz
or
test
jno
scas
cld
int
lods
jl
mov
insl
stos
fisubrl
test
xchg
jg
mov
leave
lods
nop
cltd
pop
xchg
gs
mov
cmp
inc
and
call
call
jmp
mov
sbb
mov
sbb
pop
mov
loopne
lret
out
xchg
xchg
insb
xchg
pop
and
imulb
pop
adc
mov
or
cmpsb
ds
or
inc
push
movsb
lods
add
add
add
lods
mov
test
mov
dec
pop
dec
add
mov
sahf
dec
cmc
xchg
cmpsl
in
rol
stos
dec
ficoml
popf
call
or
shlb
inc
adc
sbb
jb
jge
lods
scas
inc
and
dec
fbld
dec
and
cld
call
int3
mov
in
loope
jp
mov
xor
mov
adc
aas
dec
sub
dec
lret
dec
mov
sarb
fdivr
push
aaa
inc
add
sti
in
mov
leave
in
mov
aaa
push
pop
mov
cmp
adc
sahf
sbb
inc
add
mov
sarb
out
int
sub
mov
in
sub
mov
mov
xchg
stc
sbb
mov
mov
sub
sub
je
push
and
imull
adc
adc
xchg
int3
and
adc
lock
rorl
jb
pop
lahf
pushf
stos
scas
stc
jl
mov
xor
cmp
notl
mov
mov
out
rcrl
mov
rcrl
adc
clc
aas
fprem1
add
jmp
sbb
xchg
sbb
fistpl
aad
js
fbstp
in
inc
jg
je
lahf
jecxz
call
test
mov
hlt
ljmp
movsb
pop
fistpll
div
outsb
mov
jne
jmp
cmpb
imull
or
sub
jmp
xor
int
pop
cmc
std
add
outsb
outsb
into
push
mov
rep
outsb
mov
xlat
pop
adc
push
pop
mov
in
xchg
fstps
adcl
add
sub
aaa
in
fimuls
repz
stc
push
cli
lahf
mov
shll
dec
es
in
out
mov
aas
fistl
sarl
sub
iret
out
pop
clc
icebp
sbb
mov
cld
cwtl
or
lcall
adc
je
loop
push
push
xchg
scas
repnz
jg
daa
pop
arpl
fistl
adc
aaa
xchg
fcomip
xchg
xchg
adc
cwtl
ds
mov
cli
in
arpl
pushf
fsubrl
daa
shll
repz
add
jbe
xchg
lods
adc
inc
loope
roll
fisubs
add
pop
popf
sahf
mov
lret
push
mov
mov
xchg
xchg
imul
push
shrl
fwait
imul
sbb
mov
ret
daa
enter
scas
stc
pop
sub
xor
aam
arpl
insb
insb
insb
insb
cmp
insb
insb
rcrl
adc
xchg
adc
add
xor
mov
popa
jb
adc
frstor
and
cmpsl
and
cwtl
xor
icebp
pop
add
push
stc
sbb
mov
add
scas
lea
es
sbb
scas
pop
add
add
xchg
adcl
jl
push
add
repz
cmp
repnz
xchg
mov
iret
lods
jnp
cmp
push
mov
incb
mov
in
int3
out
repnz
pop
add
cli
adc
fucomip
push
mov
imul
loope
das
xchg
in
or
xor
xor
in
ss
rorb
loopne
outsb
cwtl
rcrb
icebp
test
add
subb
stc
push
jp
je
mov
pop
mov
jns
xor
add
stos
add
pop
adc
or
rorl
cmpsl
pop
bswap
push
jbe
xchg
dec
mov
clc
sahf
je
lahf
orb
jb
cli
push
int3
cs
cmp
jae
xchg
or
lret
fcmovnb
mov
fsubr
jbe
mov
mov
add
mov
loopne
adc
and
cli
test
cmpb
cld
xcrypt-ctr
cmpsl
sahf
cmp
and
jmp
xor
xchg
jae
mov
mov
ret
lock
push
ret
mov
cs
sub
jbe
mov
repz
push
scas
in
iret
std
jnp
clc
les
mov
cld
out
rorl
pop
pop
mov
aaa
jns
mov
xor
inc
pop
jb
mov
pop
into
aas
adc
mov
in
dec
ds
cmpsb
test
xchg
xchg
adc
jns
mov
cmpsl
jnp
push
sbb
mov
in
daa
in
add
cs
dec
inc
int
lret
jmp
mov
cmpsb
mov
rcrl
xchg
lret
out
xor
iret
push
mov
push
std
test
out
dec
cmpsb
stc
je
xlat
fimull
add
test
adc
je
repz
xlat
loopne
sarl
add
xchg
pop
lahf
test
dec
jo
movsb
xor
xchg
jecxz
pop
dec
xlat
cmpsl
and
cmpsb
je
xchg
adc
js
call
inc
pop
jbe
sti
jbe
je
out
and
pop
scas
je
je
clc
test
cmp
sbb
inc
rcr
mov
push
mov
outsb
stc
inc
out
mov
cmp
enter
cmp
in
lret
test
stos
shr
scas
mov
call
cmp
mov
cltd
cmc
sub
dec
shrb
jge
mov
xlat
mov
jecxz
xlat
jecxz
negl
sub
mov
mov
and
addr16
mov
and
xlat
pop
pop
movsb
inc
sbb
jne
sti
mov
setb
orl
out
pop
xchg
jl
jecxz
jmp
jae
or
add
pop
xchg
cmpsl
cmp
mov
or
jmp
mov
push
ds
andb
or
xchg
stc
mov
test
add
stc
push
mov
xor
fcomip
dec
lret
out
mov
divl
ffreep
jl
jmp
push
out
jg
mov
adc
iret
call
andl
popa
fdivs
and
mov
jbe
scas
cli
push
jecxz
outsl
mov
sub
mov
int
idivb
and
cmp
inc
arpl
enter
lds
xor
jnp
mov
aaa
jecxz
pop
adc
cmp
or
sub
test
ja
jl
cmp
or
fimull
or
jmp
mov
ds
scas
sub
cltd
fdivrs
add
and
xor
hlt
pusha
andl
mov
jmp
in
enter
cmp
adc
test
push
shlb
out
or
cmp
fildl
mov
pop
dec
shl
pusha
xor
pop
fmull
cmp
mov
push
cs
ljmp
incb
push
push
jnp
movsl
lods
jbe
jmp
stos
mov
add
fdivrs
test
jmp
cwtl
mov
pop
xchg
jmp
mov
push
call
adc
cwtl
mov
dec
cs
cmp
leave
push
jb
dec
and
add
jmp
cmp
int3
inc
sbb
sub
cmp
mov
cwtl
dec
jmpw
movsb
loop
lret
inc
sub
lahf
sbb
mov
pop
dec
nop
jecxz
in
and
and
adc
jecxz
fisttpl
mov
xchg
out
test
xchg
xlat
mov
add
cs
xchg
xlat
push
jge
hlt
call
mov
je
cmp
rol
mov
mov
xchg
mov
mov
in
cwtl
push
dec
mov
mov
outsl
add
into
out
cmp
jmp
xchg
jne
mov
pop
mov
pop
sub
add
fs
jo
mov
xchg
decl
fsubp
cmc
fcom
repz
jge
jecxz
insb
sti
mov
in
int3
inc
nop
addr16
ds
dec
pop
and
fadd
jp
push
add
scas
js
pop
das
cmp
xchg
add
xchg
popa
mov
pop
sbb
mov
xor
xchg
adc
mov
fildll
push
cmp
ficoms
sahf
jmp
mov
cmp
sbb
popf
test
cltd
aaa
push
lods
aad
jecxz
adc
fs
in
mov
mov
out
lods
adc
call
movb
sti
jne
inc
and
repz
iret
sub
movb
pop
dec
push
cmpsb
or
xchg
or
xchg
dec
cmc
iret
sahf
or
out
ret
add
out
add
add
add
inc
ror
popf
and
aas
aas
mov
cld
shr
add
pop
and
push
clc
fists
add
sub
mov
leave
test
lahf
orl
clc
ljmp
in
lods
sub
std
outsb
dec
inc
notl
pop
cs
mov
pop
jb
imul
std
aaa
mov
pop
gs
sarl
hlt
push
jmp
push
std
adc
pop
mov
and
and
lcall
mov
popf
lcall
mov
add
cld
cmp
cld
out
jmp
xchg
out
xor
adc
call
xor
das
gs
dec
in
dec
xchg
ret
sub
sub
je
jp
pop
dec
dec
jp
ret
mull
imul
mov
fucomi
xchg
jno
xchg
hlt
cld
adc
dec
pop
add
lea
pop
lahf
mov
inc
xchg
in
cmpsb
imul
xchg
xchg
dec
mov
aas
jbe
scas
push
cmp
pop
mov
sub
push
push
std
pop
iret
das
push
les
xchg
fldcw
lret
mov
push
fwait
cli
xchg
mov
out
xor
push
jmp
fs
repz
and
fistpl
fwait
pop
fucomip
pop
xchg
mov
xlat
repz
push
jno
testl
ja
jg
adc
sbb
adc
cld
xchg
in
daa
sbb
xlat
rcrl
stos
dec
fwait
mov
icebp
or
jp
cmpsb
scas
pop
imulb
out
lret
or
xorb
or
pop
negb
pop
add
xchg
shrl
jecxz
push
jns
shrb
xchg
inc
test
cli
inc
push
cmp
in
jne
push
mov
test
gs
fwait
xchg
add
loop
cli
mov
das
idivl
sub
sti
sub
fists
sbb
out
outsb
cmpsb
add
sub
mov
sub
std
pop
xor
xor
jo
inc
stc
xchg
js
fistl
xchg
pop
ljmp
pop
cmc
xorb
lahf
cmp
xchg
jl
pop
icebp
cwtl
xchg
or
xchg
movsb
inc
out
xchg
loopne
mov
iret
dec
jo
stc
cmp
fsubrp
xchg
dec
aaa
ret
pop
test
loop
ljmp
daa
aas
ret
sar
test
xlat
jl
jg
inc
xor
stc
xchg
mov
cld
cmp
mov
mov
out
call
jecxz
loope
add
xor
pop
xchg
ja
pushf
cmpsl
xor
sbbl
ja
push
ljmp
hlt
fisttpll
rorl
and
or
pop
repnz
cli
sbb
lea
xchg
gs
pop
xchg
sahf
xchg
lcall
pop
xchg
nop
xchg
cmp
fldenv
shrl
pop
xor
xchg
gs
xchg
daa
fstps
push
pushf
sahf
mov
in
add
and
xor
cltd
scas
mov
test
pop
cwtl
lock
jg
add
enter
jl
out
push
dec
es
jl
push
cmpsl
in
ret
movsl
stc
testl
jecxz
loopne
or
sbb
lods
in
loopne
add
xchg
mov
or
mov
adc
push
xor
pushf
mov
push
lret
jl
inc
xchg
fidivs
pop
insb
pop
enter
dec
repz
test
xchg
mov
pop
adc
pop
mov
xchg
xchg
jmp
stc
lock
icebp
jl
adc
pusha
shr
in
cmpsl
shl
hlt
xchg
icebp
and
or
push
fisubs
adc
sahf
dec
xchg
cli
inc
in
dec
hlt
dec
in
dec
test
xchg
inc
dec
in
inc
inc
inc
inc
cmpb
inc
inc
in
inc
inc
inc
aas
adc
xchg
inc
ds
cmp
push
xchg
xchg
inc
cmp
cmp
pop
ss
xor
dec
xor
xor
xor
xchg
xor
das
loopne
in
sub
sub
sub
popf
xlat
jle
test
leave
mov
in
pop
push
fnstenv
aad
inc
mov
test
sub
sbb
sbb
push
mov
mov
in
xchg
in
mov
mov
cmp
in
pop
daa
inc
in
mov
in
pop
adc
repnz
xchg
cmp
inc
lock
xor
push
daa
mov
jecxz
ret
jecxz
ds
fs
ss
dec
addl
dec
adc
cmp
cmp
out
inc
ss
mov
xor
dec
pop
imulb
fstps
outsl
clc
add
aaa
mov
and
ret
push
loope
outsl
inc
repnz
stos
fisubrs
adc
add
sub
pop
push
dec
add
jae
loope
pop
pop
sti
lds
sbb
cwtl
loopne
pop
sbb
push
xchg
pop
fsubs
das
out
loopne
scas
flds
sahf
repz
push
add
dec
fiaddl
mov
leave
inc
lret
popf
out
stos
push
jmp
out
or
cli
push
scas
or
ret
lods
scas
enter
ljmp
lock
xchg
cmc
xchg
in
arpl
hlt
pop
leave
iret
pop
leave
repnz
add
fsubr
cmpsl
in
add
lahf
jmp
xchg
cld
sbb
sbb
scas
lret
js
filds
test
movsl
add
mov
xchg
jmp
fsubl
cmp
out
out
and
sub
cmc
and
xor
mov
repz
call
sbb
and
pop
divl
mul
into
pushl
push
xchg
fdiv
sub
inc
jmp
cmp
or
out
fldcw
sub
mov
js
into
daa
fldcw
cltd
clc
sub
sub
mov
movb
sub
out
sub
add
js
iret
dec
or
ljmp
out
repz
ljmp
insb
test
cmp
notrack
fildll
xchg
jp
add
inc
mov
js
push
cli
inc
ffreep
lret
fs
xchg
dec
mov
fistps
cmp
push
repnz
pop
out
jno
mov
fldenv
cmpsb
sub
dec
inc
stos
inc
cli
ss
fstps
mov
sti
push
jecxz
iret
mov
adc
in
lret
cmc
sbbl
loope
jmp
std
sar
xchg
sbb
arpl
mov
insb
dec
jle
movb
sbb
mov
jbe
push
pop
xchg
dec
adc
das
aas
lret
in
fsubs
mov
pop
jno
xchg
mov
out
inc
test
pop
testb
mov
mov
fistpl
mov
repnz
add
out
ret
adc
icebp
pop
mov
mov
in
lcall
out
xchg
dec
movsb
sub
fs
clc
fwait
enter
stos
mov
mov
push
jg
jecxz
mov
shrl
cld
inc
cld
fistl
js
into
outsb
cld
push
mov
nop
roll
xchg
sub
pop
rclb
stos
daa
sbb
mov
stos
in
scas
sub
rcr
movsb
adc
mov
xorl
repnz
jp
mull
iret
fcomip
mov
pop
jbe
fldl
jno
jl
and
call
pop
mov
pop
add
xchg
aas
adc
faddl
jecxz
scas
repnz
mov
mov
sub
lcall
ljmp
xchg
rol
cmp
xlat
iret
dec
mov
into
dec
jne
mov
push
fsubrs
lret
mov
fisubl
fsubs
into
int3
and
inc
dec
stc
push
loope
pop
sbb
test
jle
clc
sbb
idiv
scas
je
idivb
js
jg
out
iret
std
lcall
sub
daa
aam
and
xor
mov
jle
aas
xor
sbb
cmp
pop
out
mov
inc
cmp
in
sbb
sarb
add
lret
dec
jb
sub
jecxz
call
pextrw
and
xchg
shll
fsubl
jbe
test
push
ljmp
jg
cmpl
pop
fsts
mov
pop
mov
inc
cmp
jp
je
jp
jae
mov
das
cli
mov
dec
aaa
jge
mov
data16
aas
out
xchg
dec
mov
xchg
cli
dec
mov
add
fidivrl
pop
cltd
fwait
sbb
pop
into
push
push
dec
fistps
dec
in
inc
fs
aam
inc
or
adc
arpl
iret
int
sar
fwait
fwait
fwait
fwait
sti
mov
fwait
mov
pop
gs
push
decl
sbb
push
inc
push
in
dec
call
lcall
pop
in
dec
movsb
sti
sbb
sub
fsubr
loop
dec
sbb
dec
dec
std
cmpsl
dec
shlb
in
cld
sub
fwait
pop
in
popa
stc
xchg
jae
dec
cmpsl
pop
in
leave
fildll
int
test
mov
sbb
lcall
dec
sub
cli
movd
hlt
stos
sbb
mov
lods
roll
dec
and
scas
std
mov
sahf
mov
mov
mov
pushf
call
out
jle
pop
push
rcr
std
mov
jl
adcb
lcall
sub
mov
iret
jne
ss
push
sahf
xchg
mov
add
out
mul
jns
sarl
out
pop
sub
sub
mov
leave
sub
clc
fucomip
out
jle
push
enter
adc
fcomps
mov
sahf
out
cvtps2pi
imul
xchg
xchg
push
xchg
fwait
xchg
xchg
lcall
or
mov
hlt
jmp
lahf
into
shr
jmp
sub
imul
mov
pop
pushl
js
shrb
stos
out
fs
dec
out
cli
mov
mov
dec
mov
mov
xchg
jp
mov
stc
sar
in
cld
in
and
cmp
scas
nop
xchg
icebp
out
ss
icebp
jmp
fidivrs
jno
stos
jbe
ret
push
jns
sub
idivl
push
mov
dec
testl
and
xor
mov
mov
mov
mov
mov
xchg
aam
adcb
insb
fstps
xchg
cmp
lock
mov
mov
cltd
hlt
mov
in
push
aam
loopne
jg
dec
repnz
xchg
iret
lcall
jg
add
sub
mov
popf
out
cmc
setnp
js
jns
mov
repz
jb
lahf
out
lods
js
ljmp
mov
push
mov
fstpl
dec
ficompl
test
adc
cmpsb
pop
pop
cwtl
xchg
sub
adc
mov
mov
hlt
xchg
out
gs
inc
das
ror
mov
lods
out
push
out
jnp
out
xor
xor
sub
sahf
or
aad
mov
pop
sbb
and
call
jb
mov
jmp
test
ds
mov
mov
dec
int
xchg
push
jp
fucomip
jns
mov
mov
out
mov
repnz
lock
repnz
jae
in
pop
pop
jg
jmp
jb
out
inc
lret
or
test
mov
mov
in
xchg
enter
inc
outsb
mov
pushf
mov
add
pushf
mov
test
idivb
ds
cs
jp
xchg
xlat
xchg
xchg
mov
jle
in
xchg
repnz
mov
mov
dec
inc
cmp
adc
mov
movsl
lock
cwtl
mov
lock
out
out
add
dec
xchg
push
lret
hlt
sbb
xchg
addr16
xchg
pushf
adc
idivb
mov
jns
cmovns
cwtl
std
add
pminub
std
clc
lods
test
lods
decb
push
in
clc
sti
jg
icebp
jmp
push
cmp
lods
or
lcall
add
ljmp
push
dec
into
lock
mov
and
jnp
pushf
nop
sbb
fistpll
jne
jno
in
inc
ja
jmp
add
sahf
mov
inc
mov
popf
call
jb
mov
stos
mov
lcall
xchg
test
cwtl
lock
pop
mov
cld
inc
idiv
hlt
push
test
dec
dec
push
icebp
stc
mov
xchg
shll
ja
jae
outsl
sub
jb
cmp
shrl
in
in
mov
push
pop
sahf
decl
out
push
push
out
jl
hlt
jg
in
iret
jp
add
add
rcrl
xchg
jnp
ja
imul
rcrl
rorl
shl
add
shrb
push
rolb
xor
add
add
int3
icebp
iret
in
fxch
ror
lret
iret
mov
iret
mov
iret
jae
iret
inc
add
add
iret
es
and
sbb
int
mov
cwtl
into
clc
int
int
int
int
int
int
int
int
int3
fsub
out
add
int3
lret
int3
int3
xchg
int3
mov
or
lret
rol
add
add
lret
push
lret
or
push
lret
sbb
pop
lret
ror
cltd
leave
mov
jg
js
dec
leave
xor
add
add
and
leave
imul
ljmp
mov
xchg
movl
pop
dec
xor
add
push
xor
lds
lds
add
inc
add
pushl
les
sub
ret
xlat
ret
mov
ret
jg
add
add
das
ret
ffreep
int
mov
ret
fwait
ret
add
ret
in
rol
shll
stos
and
inc
or
shl
inc
iret
xor
inc
and
iret
and
hlt
into
out
and
into
jb
insl
into
dec
les
add
add
ret
out
fld
int3
ret
and
repnz
sahf
rcll
pop
mov
rol
lahf
rorb
shlb
shlb
rolb
fstpl
lods
iret
cmpsl
iret
pushf
iret
xchg
iret
arpl
add
jns
pop
iret
loopne
fcmovne
cmp
or
fcmovne
mov
int
int3
mov
lret
sarb
out
lret
cmp
xor
enter
sbb
in
ror
imul
leave
dec
leave
inc
fsubrl
enter
enter
push
and
fmulp
mov
fs
push
dec
movl
inc
sub
and
sbb
or
hlt
ljmp
mov
mov
pop
dec
movb
add
xor
and
or
lds
add
add
lds
lds
push
lds
cmp
lds
int3
les
add
les
ret
or
push
ret
add
ljmp
ret
push
ret
add
adc
sub
sbb
rcrl
rcll
shl
out
shl
enter
aas
pop
push
add
pop
rolb
ljmp
mov
in
iret
into
iret
mov
cwtl
iret
xchg
iret
xchg
hlt
and
into
jge
aaa
into
add
add
add
stos
int
int
int
int3
mov
cmpsb
lret
lcall
lret
xor
and
adc
add
loope
add
add
inc
lret
jnp
je
imul
leave
call
leave
int
mov
leave
add
pop
leave
adc
or
cli
enter
enter
jbe
add
add
ja
outsb
enter
enter
enter
insl
stos
das
movl
sbb
xchg
jle
jno
pop
push
call
lret
lds
lds
addr16
ret
jnp
jno
cmp
add
insb
ret
lock
ljmp
mov
ret
dec
stos
shll
add
test
pop
add
icebp
rcr
fcmovb
pop
test
jl
jae
insl
shlb
push
aas
sti
lock
inc
shlb
sbb
add
jg
mov
iret
jmp
iret
mov
mov
iret
insb
into
cs
adc
fmul
int
int
int
add
add
int
int3
dec
int3
xor
lret
popf
lret
xchg
mov
lret
stos
leave
movsl
leave
cmp
enter
push
cmp
movl
sbb
add
add
fcmovb
aam
mov
xchg
nop
mov
repz
inc
stos
int
and
les
jge
push
inc
inc
cmp
rolb
outsw
hlt
xchg
pop
les
mov
dec
lret
into
mov
int
call
mov
dec
int3
cmp
outsl
and
add
jb
adc
push
int3
or
std
lret
idivl
in
popa
lret
push
lret
dec
lret
cmp
xor
add
add
sub
out
lret
int3
dec
cwtl
lret
mov
jge
jne
pop
lret
aas
lret
mov
lret
or
add
add
or
jmp
enter
enter
adc
sbb
adc
inc
stc
in
dec
push
add
jno
dec
push
lds
lds
lds
lds
lds
add
lcall
les
repz
stos
inc
cmpps
out
aam
sldt
rol
lods
rcll
hlt
shr
rol
mov
rolb
pop
mov
iret
jecxz
fmul
outsl
iret
add
add
iret
sbb
cld
into
hlt
jno
pop
into
dec
into
cmp
mov
jle
pop
insl
int
int
jb
int3
out
fdivrs
sarb
int3
das
int3
sub
adc
add
nop
ds
cld
lret
icebp
lret
out
xlat
lret
mov
lret
cwtl
lret
xchg
lret
sub
das
push
adcb
ror
enter
jl
inc
lret
or
lret
ds
leave
cmpsl
leave
mov
leave
xchg
xchg
add
or
leave
sub
sub
lods
sti
mov
lcall
and
sbb
mov
lea
add
incl
shrb
mov
xchg
inc
xchg
clc
outsl
inc
adc
add
test
mov
inc
ljmp
push
xlat
inc
movsb
adc
fs
inc
addl
lock
dec
jl
ds
or
imul
aaa
ret
repz
ljmp
lahf
mov
hlt
stos
cld
mov
rcrl
lahf
iret
cld
pop
es
mul
decl
loope
imul
clc
std
cmp
lods
jmp
cli
lock
pop
xchg
dec
mov
out
loop
clc
insl
std
and
loope
test
bound
out
pop
into
or
cmp
pop
into
jmp
out
loopne
clc
inc
in
jge
adc
in
jge
push
jl
cld
jg
gs
xchg
xchg
movsl
mov
ror
and
mov
pop
cld
push
out
mov
lret
dec
mov
mov
xchg
xchg
cld
test
cltd
xor
mov
fisttps
idivl
mov
cmc
mov
jl
cmp
mov
testl
mov
xchg
jecxz
std
das
in
mov
or
push
nop
lcall
mov
mov
dec
hlt
mov
mov
add
fildll
jl
out
inc
jmp
shrb
sub
cmpsb
inc
mov
adc
push
push
xchg
repz
repz
inc
call
jg
lock
push
std
arpl
out
push
push
cmpl
push
lahf
sti
jge
or
hlt
push
fists
lock
std
idiv
jmp
cmc
out
jmp
mov
cs
daa
rcll
inc
movsb
push
fldl
in
and
shll
rol
push
cmpsl
pop
fisttps
cmp
jp
stc
insb
push
sbb
add
or
dec
sarb
stos
cmp
fwait
addr16
mov
mov
out
push
inc
shrl
jecxz
add
jge
add
mov
bound
or
push
xchg
imul
and
inc
push
mov
mov
int
orb
sarb
inc
or
in
flds
mov
test
out
mov
outsb
lods
test
ljmp
ret
subb
jnp
stc
mov
repnz
pop
xchg
adc
add
movsb
insb
loop
ret
cmc
fdiv
xchg
mov
aas
insl
ja
cmp
xchg
icebp
push
out
xchg
aas
cld
or
cmp
xchg
scas
mov
test
rcl
jmp
stc
mov
sbb
loopne
mov
cmp
and
jne
inc
imull
fstps
push
repz
das
ja
out
lea
fistps
pop
lahf
dec
aad
mov
sbb
movsb
cmc
pop
xchg
inc
mov
mov
pop
and
mov
rclb
loopne
mov
sahf
xchg
fwait
in
jne
xchg
fstpl
pop
ljmp
lock
je
pop
jns
mov
cs
jmp
lods
call
insb
les
xchg
push
fdivr
ret
sti
mov
mov
jmp
lods
movsb
mov
push
je
mov
sbb
push
movsb
cwtl
or
sub
ja
jecxz
mov
jb
shll
xchg
pop
push
aam
xor
jb
jne
inc
scas
inc
jg
jmp
mov
jle
jnp
lahf
insl
jg
push
pop
jmp
ficomps
mov
xchg
xlat
fidivs
mov
in
xchg
stos
int
test
mov
fcomi
fcomps
jns
jg
jmp
pop
pop
or
jnp
mov
lods
mov
mov
dec
cmpsl
scas
cmc
jmp
test
es
hlt
xor
rcr
sbb
jmp
dec
pusha
sbb
mov
dec
lahf
mov
add
jne
mov
mull
scas
jmp
push
clc
stos
jl
xor
icebp
push
ja
ljmp
fucom
mov
lcall
test
repz
fistps
mov
ret
scas
pop
std
sbb
es
call
rcl
insl
jae
in
inc
push
mov
pushl
je
psubd
scas
inc
cld
mov
clc
ret
pop
cli
out
sub
inc
cld
stos
inc
stos
shrl
daa
loope
cmpsl
inc
add
stc
dec
bound
sub
sti
imul
xchg
dec
fisttpll
inc
out
imul
inc
cld
inc
repnz
test
mov
push
cwtl
push
add
mov
add
dec
add
add
jnp
adc
inc
dec
lods
push
cmpsl
iret
jecxz
std
and
add
test
push
aaa
leave
in
ds
push
push
ds
stc
out
jae
test
push
add
aaa
push
dec
dec
lcall
mov
daa
xchg
mull
fsubl
lcall
sbb
pop
jle
xlat
xchg
mov
inc
mov
mov
inc
imull
fcom
dec
rcll
fildl
and
lods
hlt
cmp
pop
cmp
popa
cld
scas
aas
cli
or
fwait
mov
lods
cmp
jbe
xchg
out
xor
out
inc
mov
jno
jno
mov
jg
enter
mov
inc
adc
inc
lock
fadds
mov
inc
enter
xor
cmp
xchg
cld
icebp
inc
out
or
push
test
faddl
aam
xchg
stc
cmp
lcall
adc
ljmp
pop
divl
pushf
dec
iret
fadds
dec
out
jle
pop
rcll
or
mov
scas
fsubrl
jnp
clc
clc
hlt
mov
mov
rcll
insb
cmpb
jmp
mov
xchg
scas
cmc
xchg
mov
ja
jmp
in
cmp
push
xor
sahf
pop
lret
flds
or
test
push
fnstsw
jle
dec
ficoms
jmp
in
scas
xor
sbb
mov
mov
repnz
sub
sarb
scas
add
gs
outsb
xchg
stc
mov
jb
daa
daa
cmpsl
or
imul
jbe
ljmp
sub
in
push
in
cmp
mov
jbe
loopnew
or
enter
in
mov
leave
out
fidivs
idivb
std
mov
inc
stos
fidivs
mov
pop
ficoms
push
out
push
iret
mov
iret
hlt
cmpsl
add
push
xlat
add
sti
lock
test
add
mov
mov
enter
div
dec
mov
jbe
pop
cmp
negb
out
or
je
cmpsb
mov
cli
divl
push
aad
imul
xchg
sarl
jae
mov
fmull
adc
jg
jae
lcall
jne
loope
imul
int
mov
fwait
popf
fistpll
popf
xlat
push
rcrb
jg
inc
sti
mov
push
iret
cld
sub
push
fcom
cld
mov
jmp
sti
fdivs
in
ja
fcomps
cld
sub
test
inc
jle
lcall
fistps
jmp
je
pop
fcmovnbe
mov
imul
fsubp
push
mov
cmp
lock
and
mov
out
cmp
dec
mov
pop
rcl
movsb
es
cs
in
call
jle
jecxz
lea
jo
mov
outsl
mov
sub
icebp
je
stos
xchg
inc
out
cwtl
out
lret
xchg
out
jle
fsubr
push
mov
and
fbld
popa
ljmp
mov
mov
pushl
xchg
ja
mov
push
mov
mov
call
and
lahf
mov
fstpt
out
not
xlat
in
jl
dec
fwait
push
adc
xchg
dec
outsb
jge
mov
cld
div
loop
xchg
inc
lahf
cld
inc
daa
sarb
inc
cli
xchg
mov
cld
sarb
cmpsl
sub
fmul
call
sub
cld
ss
mov
movsb
add
negl
mov
pop
aad
ret
inc
sub
mov
aaa
scas
pop
movsb
adc
repz
cld
xchg
or
clc
xorb
xor
scas
pop
scas
jle
scas
adc
repnz
dec
cs
or
stc
enter
data16
ljmp
push
shlb
ja
fnstcw
call
hlt
fsubr
jne
leave
mov
ds
mov
xchg
mov
insl
ja
lods
mov
cmp
adc
test
fwait
in
rorl
outsb
ret
or
sahf
jb
fnsave
mov
imul
dec
scas
ds
test
mov
mov
jle
leave
iret
lods
xchg
jmp
nop
mov
xchg
dec
cltd
out
cmc
mov
vmaxss
push
inc
addr16
ljmp
cmp
xchg
xchg
jle
cmc
dec
out
nop
out
xchg
mov
in
jg
in
aas
popa
enter
mov
xor
cmp
std
scas
and
shll
cli
inc
cmp
divb
mov
sbb
hlt
incl
adc
out
push
in
mov
nop
and
add
sti
pop
hlt
movsb
sar
imul
sub
xchg
push
cwtl
mov
sbb
repnz
cmp
faddl
cld
inc
xchg
or
sbb
mov
fs
lcall
adc
lock
lcall
dec
enter
xchg
cwtl
mov
push
adc
orb
mov
popf
insb
loopne
stos
xlat
ljmp
ficomps
hlt
mov
mov
into
es
iret
cli
adc
jg
and
int3
dec
out
dec
xchg
xchg
push
loopne
add
mov
cmp
repnz
mov
in
xlat
push
dec
inc
xchg
xchg
int
cmc
xlat
mov
stos
sar
fwait
lock
clc
hlt
repnz
mov
xchg
cmpsb
dec
cmp
jo
xchg
push
daa
scas
fmuls
mov
fwait
notl
lock
jg
fneni(8087
lret
mov
loopne
jbe
lcall
inc
fiaddl
adc
push
xchg
test
lcall
xor
dec
sti
decl
cmpsb
lret
aas
into
xor
shrb
int
int
int
push
and
add
push
int
int
int
int3
mov
int3
les
lret
and
pop
cli
aad
icebp
lret
xchg
pusha
add
subb
lret
fcmovne
cmpsb
jp
leave
ja
jb
dec
leave
add
jle
enter
enter
enter
mov
cli
aad
gs
sub
adc
add
ja
add
sub
and
push
lds
mov
ret
adc
lret
loop
iret
ret
sbb
pop
ret
std
shl
mov
fcmovb
rcrl
rorl
ljmp
push
push
mov
cld
out
daa
push
popf
call
lea
aas
mov
inc
std
dec
mov
nop
cltd
lock
repnz
sbb
not
pop
pop
push
pop
jg
pusha
cmc
inc
insl
std
repnz
pop
mov
cld
mov
negb
dec
lahf
sti
sti
pop
in
add
js
incb
out
pop
cltd
aas
jg
pop
leave
sar
divl
xchg
fisubrl
push
stc
jl
stc
outsl
pop
sahf
push
pop
in
pop
dec
repnz
imul
adc
decl
jnp
dec
lds
cmp
popl
and
out
mov
push
add
call
pop
mov
jg
test
adc
clc
lock
pop
adc
hlt
add
mov
loope
decb
xchg
or
sarl
push
loope
cltd
dec
pop
test
out
stc
push
jg
jl
hlt
gs
ds
fdivrs
pop
cmpsb
sub
cli
cmp
cld
sub
fsubrs
icebp
mov
in
idiv
pushl
jmp
add
inc
add
call
int
jmp
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
pusha
mov
mov
xor
mov
inc
cmp
jb
popa
jmp
