pop
pop
add
push
inc
bound
add
push
push
push
push
push
jo
add
add
fcomps
fistpl
dec
or
push
push
add
push
or
push
pushl
call
mov
test
add
cmp
mov
je
jl
add
push
call
lea
push
push
xor
mov
push
push
push
mov
mov
cmc
lods
jno
mov
cld
test
adc
xlat
cld
cmp
jbe
ret
divb
add
cmpsb
test
neg
push
jo
daa
xchg
cld
add
add
dec
pusha
pop
clc
cmp
pop
clc
je
jo
sbb
lea
add
push
leave
inc
hlt
sub
inc
mov
mov
xor
push
icebp
test
jle
shrl
lock
sbb
hlt
out
jb
adc
add
add
pop
inc
pop
rolb
cmp
jl
xor
not
add
fmull
mov
push
cmp
or
adcl
orb
or
movsl
xchg
jp
push
and
push
push
push
aad
in
insb
mov
loopne
add
adc
lret
mov
jne
jmp
test
dec
fistpl
or
fdivl
div
push
mov
or
lods
shlb
leave
adc
ret
int3
lock
ret
mov
add
leave
mov
inc
push
das
sbb
movsl
add
add
cmp
mov
or
cmpsl
pop
pushf
or
mov
pop
pop
leave
ret
and
sarl
push
test
mov
mov
sub
inc
pop
jl
cld
enter
mov
mov
ret
add
push
int
loope
cmp
jb
je
jne
popa
shrb
xchg
rcll
jb
outsl
je
lods
jo
xlat
fsubs
je
notl
xorb
push
mov
xor
cmp
lea
push
div
aam
push
sub
daa
sahf
test
add
add
movb
mov
sub
sub
mov
movb
test
add
popa
add
sti
push
push
bound
jns
sbb
jne
inc
inc
cmp
decl
loope
lcall
leave
and
pop
ret
xorb
and
xor
inc
nop
xor
or
push
ja
sbb
pusha
subb
jno
pop
lret
add
in
push
jmp
xchg
sub
cltd
mov
fmuls
test
repnz
inc
loope
push
call
push
push
xlat
xchg
push
mov
or
push
lret
jge
add
bound
push
aad
cld
xlat
jbe
lea
hlt
hlt
sbb
test
popa
daa
adc
pop
lcall
imul
adc
push
push
fs
pop
push
addr16
pop
sbb
imul
dec
push
aam
rclb
test
sbb
pop
fimull
pop
xor
popa
or
xorb
inc
push
clc
or
adc
fimuls
stos
stos
stos
aaa
nop
jb
push
push
push
sub
fprem1
mov
loope
mulb
insl
clc
push
push
xchg
sti
gs
js
pop
dec
sbb
gs
test
push
std
and
and
cld
lea
push
adc
jne
pop
jne
fistps
fisubrs
xor
js
mov
ss
sbb
ret
ret
out
cs
fwait
cmp
js
repz
and
and
sbb
jmp
mov
inc
or
and
pusha
pop
adc
jne
push
mov
mov
add
adc
aam
dec
mov
mov
mov
inc
testb
sub
push
jmp
insb
loope
mov
mov
pushl
mov
xor
mov
push
inc
inc
outsl
insl
jo
arpl
mov
popf
or
add
add
adc
mov
fadds
xchg
mov
stos
mov
mov
xchg
cmp
push
push
outsl
inc
adc
inc
repz
repz
imul
inc
jns
imul
mov
pop
inc
sub
and
pop
cmp
idiv
mov
cli
and
push
push
adc
inc
cli
push
cld
fildl
js
adc
fidivs
sarl
push
pop
push
ds
icebp
pusha
or
faddl
fwait
out
std
les
inc
lds
gs
popa
jo
sbb
enter
lret
outsl
int3
outsl
les
ret
loope
insb
into
push
rep
jo
xor
repz
outsb
popa
jo
xchg
loope
fisubrl
je
push
loope
jo
sbb
loop
jecxz
in
in
out
push
xchg
loope
xor
xor
inc
ljmp
jb
jae
je
push
icebp
jb
push
xchg
repnz
repz
gs
jae
loope
cmp
jae
xor
xor
dec
cli
gs
or
lea
loop
push
dec
dec
pushf
rcl
pop
mov
repnz
ja
push
add
je
and
adc
addr16
add
lods
dec
dec
xchg
push
imul
and
mov
push
js
xchg
and
ficompl
mov
adc
lret
add
jo
sbb
lock
icebp
fs
popa
cmp
ret
loope
jo
imul
loope
cs
fs
insb
sti
insb
xchg
movsl
aaa
icebp
cld
clc
loope
sbb
fmull
jo
fildll
iret
mov
sub
leave
rep
in
pop
mov
mov
mov
mov
jo
sbb
imul
jb
push
xchg
mov
imul
addr16
popa
es
xchg
insb
ret
les
ret
loope
lds
push
cmp
fwait
jne
jae
je
push
lahf
outsl
push
xchg
loope
imul
loope
cmp
jb
imul
ret
test
gs
bound
adc
mov
mov
je
sbb
test
and
inc
nop
enter
test
inc
je
add
cmp
jne
sahf
out
push
outsb
je
jb
mov
jns
arpl
shrb
mov
xchg
push
push
adc
jo
rcll
pop
in
push
pop
jl
push
mov
add
or
aam
sbb
incl
je
neg
sbb
push
and
push
mov
push
push
or
cmp
sub
test
stc
mov
aad
pop
cmp
push
adcb
inc
test
jne
ret
cmpw
jne
cwtl
loopne
add
cmpl
mov
jecxz
dec
aam
cmp
or
ret
pusha
iret
je
mov
cmp
je
adc
add
je
cmp
ja
mov
in
cmp
or
fneni(8087
mov
mov
cmp
pop
sbbb
jmp
cmp
jb
sbb
mov
add
add
dec
sbb
inc
in
adc
jmp
mov
or
pushf
or
jmp
popa
and
hlt
ds
jo
f2xm1
mov
jne
cmp
orl
mov
add
loopne
shll
adc
insl
fdivrl
inc
inc
js
push
adc
push
fsubrl
xchg
daa
push
mov
js
rorb
sub
mov
or
xor
incl
sbb
xor
mov
inc
mov
les
cwtl
or
pop
ret
push
nop
cmp
push
push
xchg
loope
dec
testb
clc
dec
loope
cmp
inc
cli
push
sti
cs
fs
insb
sbb
jmp
loope
stc
cmp
repz
outsb
je
jb
dec
div
outsb
in
dec
in
cwtl
out
gs
outsb
lock
xchg
rorb
ret
fidivl
fwait
inc
je
jo
ret
cmp
outsb
push
push
cmpsl
mov
insb
rcl
dec
repz
fwait
sbb
je
push
push
inc
jbe
fisubl
ret
loope
cmp
jns
dec
fisubrs
data16
loope
ljmp
outsb
cmp
scas
scas
gs
mov
mov
xchg
icebp
mov
mov
mov
mov
out
cmp
fs
cmpsl
jns
mov
mov
cltd
outsb
push
xchg
loope
je
pushf
sbb
out
popf
sahf
lahf
mov
loope
cmp
movsl
dec
cmpsb
popa
jno
sahf
mov
stos
inc
cmp
jge
andb
pushf
outsb
mov
sbb
nop
add
cwtl
sub
roll
pusha
add
popa
push
std
sarb
and
jl
jmp
sahf
les
push
jge
ja
fildl
and
xor
pop
and
jmp
push
cs
xchg
ret
mov
sbb
pop
fsubr
sbb
xor
push
mov
dec
inc
ss
push
xorl
jb
adc
imul
jno
add
mov
push
mov
lret
add
push
jmp
out
ret
pop
testl
xor
mov
iret
push
nop
pushf
and
sbb
mov
adc
inc
call
jne
lret
pop
call
in
bound
ret
js
pushf
and
push
cmpsb
popa
mov
dec
lock
out
xor
cwtl
or
mov
or
dec
and
je
dec
jmp
add
in
pop
pop
or
shl
shlb
ret
test
je
mov
je
jno
inc
inc
jmp
andb
xchg
and
lea
je
or
lock
addl
in
xor
movzbl
inc
jno
add
push
inc
cmp
xorb
jo
pop
lock
adc
lds
fmul
cltd
imul
pop
xchg
lock
pop
cmp
dec
testb
aaa
mov
xor
cmp
andl
jl
scas
add
outsl
jbe
sub
mov
cmp
sub
dec
and
cmp
jmp
rolb
mov
mov
into
or
test
mov
les
cmp
add
push
mov
mov
inc
inc
test
jne
pop
inc
jo
jb
mov
ret
int3
cmp
inc
and
xor
sbb
xor
fnsave
movaps
lret
mov
add
jne
mov
sub
push
cmpb
lcall
add
or
inc
jmp
mov
add
in
cmp
mov
and
xor
dec
or
adc
repnz
push
cmp
xchg
inc
in
out
out
call
inc
jmp
jae
or
jecxz
in
inc
out
imul
lods
repz
adc
inc
outsb
fs
cmp
inc
insb
outsl
shrb
cld
gs
aam
xor
xor
pusha
movsb
pop
push
fsubl
int3
inc
fsubs
xchg
pop
pop
test
incl
fmuls
cmp
pop
push
jns
shl
cmp
je
insl
inc
loope
cmp
jb
gs
arpl
je
das
mov
sti
cld
jb
incb
call
mov
rclb
test
adc
test
add
hlt
push
dec
xchg
xor
loope
fstpt
sti
lret
add
mov
add
mov
mov
cmpsl
pop
enter
cmp
jae
mov
adc
sarl
ret
dec
pop
jae
push
jb
test
mov
iret
cmp
leave
mov
mov
and
andb
iret
add
adc
jns
adc
add
inc
add
add
jb
jmp
mov
lea
movzwl
add
mov
add
or
add
cmp
jae
cmp
jb
popa
inc
lcall
inc
add
mov
repnz
in
adc
mov
ljmp
inc
test
jg
push
out
jnp
hlt
cs
rcr
movsb
cmp
push
mov
cmpsb
inc
push
sub
inc
mov
mov
adc
fcoml
orb
push
xor
mov
inc
dec
cmp
mov
push
sbb
xchg
popf
clc
push
rol
in
mov
mov
mov
adc
fisubl
xchg
loop
pop
adc
incl
or
call
jo
sub
jne
mov
add
push
mov
adc
sub
adc
pop
popa
mov
dec
clc
jne
or
in
movsb
in
leave
pop
jp
in
cltd
push
jmp
in
sub
psubusw
movsl
es
movsl
mov
movsl
mov
popf
test
push
faddl
pop
mov
movsb
mov
lea
mov
inc
xor
dec
je
lods
inc
and
jb
rolb
inc
mov
or
mov
add
sbb
jne
clc
push
push
shlb
pushf
mov
les
jmp
or
inc
mov
aaa
jo
jmp
in
repnz
in
outsb
fnsave
mov
clc
into
in
lock
ret
jmp
inc
out
or
daa
or
outsb
and
pushf
sbb
movsb
xorl
lcall
and
pop
xor
or
cmp
in
sbb
dec
cltd
out
bound
push
jns
cs
mov
cld
xor
jmp
ja
push
addr16
popf
or
stc
mov
pop
sbb
mov
clc
adc
call
mov
add
jmp
mov
dec
loop
repnz
es
loope
pusha
daa
loopne
loope
loop
sbb
xchg
jecxz
in
in
out
out
xor
out
imul
insb
lea
cmp
ret
lods
test
sbb
fdivp
jae
data16
pop
sub
addr16
jae
xchg
sbb
dec
push
aas
incb
stos
addr16
adc
dec
fwait
jno
xor
add
push
push
rcrb
hlt
cmpsb
and
lock
add
push
or
jno
sub
add
pop
pusha
pop
mov
je
xor
mov
iret
test
push
xchg
icebp
mov
mov
mov
mov
loope
cmp
outsl
mov
inc
mov
ret
mov
arpl
cmp
outsl
shll
or
ret
les
mov
outsl
rcrb
push
jecxz
stc
insb
adc
mov
mulb
mov
mov
std
xchg
std
jns
out
inc
insb
insb
inc
popa
arpl
cmpsb
xchg
in
pop
mov
popa
insb
and
repz
sti
adcl
mov
mov
cld
nop
cld
in
and
cli
jp
mov
int
pop
or
stos
stos
push
adc
adc
push
loopne
mov
cmpsb
pop
in
or
subb
pop
idiv
add
cmp
add
dec
out
pop
cmp
dec
cwtl
mov
aad
out
mul
mov
loop
mov
les
push
cmp
sub
ds
jge
aad
popf
push
inc
xlat
push
jne
adc
push
sahf
mov
in
out
xchg
push
mov
fs
pop
jns
out
inc
outsl
jo
inc
imul
rcrl
aam
fdivp
jecxz
jbe
push
xchg
out
fcmovu
fcompl
js
fbld
testl
cmp
pop
mov
push
test
inc
jl
xor
jo
enter
mov
xchg
enter
gs
imul
pushf
cmc
pop
mov
or
ror
xor
nop
mov
jnp
sbb
arpl
push
enter
pop
mov
aam
sub
add
add
out
hlt
lods
popf
mov
xchg
and
pop
mov
or
dec
xchg
mov
inc
pop
dec
orb
jne
popa
or
and
cmp
in
push
in
dec
sbb
jp
add
icebp
je
jnp
call
out
mull
sti
adc
call
push
icebp
cmpl
mov
fmuls
imul
ret
mov
aaa
arpl
mov
pop
push
je
mov
mov
in
mov
aaa
fs
mov
and
push
fstl
cmp
rolb
mov
cmpsb
pop
mov
rolb
jge
in
add
jns
dec
jne
shrb
gs
xchg
ds
jecxz
sarb
xrelease
in
orl
rolb
sbb
xchg
ret
jo
inc
lds
test
je
dec
enter
sbb
popa
lret
ljmp
incb
sbb
push
int3
int3
and
daa
mov
xchg
mov
cmp
cmc
cmp
test
out
push
je
lods
scas
or
inc
repz
cmp
arpl
jb
mov
jp
xor
out
mov
or
addb
jmp
lea
push
cld
imulb
or
std
pop
mov
push
mov
call
cmp
lea
pushl
incb
jae
or
jo
shrb
dec
cmp
jmp
mov
imul
add
sub
imul
movsl
mov
rorl
push
jne
push
xchg
arpl
inc
clc
add
orl
or
mov
mov
es
push
test
jae
and
cmp
sbb
cmc
idivb
repz
outsb
je
imul
outsl
ja
hlt
sbb
je
imul
mov
ror
sbb
addl
mov
jo
daa
nop
mov
dec
push
xchg
loope
push
mov
inc
shlb
adc
pop
ret
sbb
sbb
inc
bound
adc
push
mov
jmp
out
sbb
das
sbb
repz
shrb
mov
jne
pushf
cmpl
stos
pop
mov
cmp
jno
push
mov
adc
push
push
mov
sub
push
subb
out
call
lock
loopne
and
shr
pop
adc
icebp
or
add
cld
out
leave
cmp
xchg
mov
xor
imul
cmp
into
pop
insb
jae
je
iret
rep
fisttps
ret
shrb
push
jge
and
inc
imul
test
jae
cmp
jne
repz
js
xor
inc
mov
jl
loope
jns
insl
jle
cwtl
dec
les
push
ret
loope
outsl
subl
loope
dec
test
dec
xchg
sbb
outsb
mov
hlt
mov
jbe
adc
lea
popa
cmp
xchg
dec
xchg
insl
xchg
xchg
loope
popa
xchg
addr16
gs
push
lcall
inc
pushf
imul
cmp
mov
push
repz
enter
lret
repnz
xor
shlb
loopw
mov
repz
mov
inc
mov
scas
mov
jns
stos
mov
lcall
jne
xor
pop
xor
repz
jmp
and
mov
fsubs
push
push
in
mov
jp
arpl
data16
imul
adc
adc
add
call
addr16
gs
into
mov
bound
xor
rolw
scas
push
sbb
jno
lea
xor
loopne
and
adc
test
mov
mov
inc
sbb
or
nop
outsb
stc
xor
mov
xor
adc
rcrb
push
mov
addr16
dec
incb
scas
and
adc
insb
mov
or
in
pusha
repz
rcrb
daa
les
cmp
jg
sub
lss
ljmp
and
mov
jmp
add
pop
adc
push
inc
push
repz
push
mov
inc
inc
inc
pushf
inc
pop
cmp
cmp
ljmp
pop
inc
push
imull
fstl
pop
addr16
inc
jne
outsl
push
xor
out
imul
cld
xchg
pop
xchg
pop
std
dec
sahf
cmc
sub
arpl
jns
push
xlat
fldenv
fistpl
or
popa
fidivs
jns
pop
arpl
jb
addr16
mov
mov
sub
add
adcb
mov
sahf
sub
xchg
add
pop
aam
sub
xchg
inc
ja
add
xor
fxam
aad
fstpt
test
pop
sub
lock
xchg
iret
cmp
jecxz
xor
xchg
pop
rcr
pop
push
cmpl
dec
sub
sbb
subl
push
cmp
ja
rcrl
and
cmpsl
aaa
sub
push
arpl
pop
call
push
and
sbb
adc
push
push
ret
xchg
pop
pop
int3
lcall
fwait
add
clc
sti
pop
mov
mov
js
push
shl
or
mov
lods
mov
outsb
push
mov
aad
xchg
ret
mov
push
clc
xor
and
add
dec
push
push
push
lods
jae
cltd
aad
push
in
mov
jbe
push
ret
pop
xor
and
bound
loopne
enter
cmp
je
or
add
orb
inc
jl
mov
jo
test
fwait
popa
aam
pop
mov
push
mov
int3
jmp
jle
jo
test
jns
out
xchg
mov
jnp
scas
mov
mov
inc
and
push
fimuls
sti
xor
loopne
inc
repz
cld
movsl
add
jmp
leave
rclb
repz
sbb
arpl
aas
add
outsl
cmp
loop
add
xor
ljmp
adc
pop
add
int3
pop
mov
in
cmp
sti
in
call
push
jae
mov
aad
fs
inc
scas
rcll
rcrb
and
aad
dec
popa
lcall
xor
iret
imul
dec
inc
add
repz
inc
pop
inc
mov
mov
aaa
daa
into
fs
jb
push
mov
xchg
sub
adc
filds
cmp
push
out
jo
adcb
push
sbb
or
sub
adc
sahf
add
push
push
push
loope
cmp
in
test
dec
out
pop
inc
cmp
xchg
icebp
pop
sbb
mov
dec
addl
mov
out
cmp
loopne
cmp
out
loop
jecxz
in
add
mov
jne
fmull
repnz
cmp
hlt
mov
xor
notl
clc
stc
lock
adc
decl
push
ds
or
mov
icebp
dec
jae
sbb
xlat
mov
test
rol
or
mov
clc
jnp
outsl
ds
loopne
loop
in
rcl
jns
out
cmp
scas
dec
mov
sbb
into
sub
leave
cmp
mov
je
rorb
dec
pop
iret
repz
mov
jo
cmp
mov
jge
or
ret
mov
mov
mov
popa
xor
inc
mov
and
mov
cwtl
push
mov
sbb
pop
repz
loopne
loop
ss
in
lret
test
call
out
scas
jbe
sub
shrb
loope
cmp
xor
fcmovnb
mov
or
ret
mov
into
xor
pop
xchg
mov
int3
loope
jl
int3
cmp
ret
into
mov
add
test
shr
cwtl
mov
mov
xor
testb
cmc
push
push
das
mov
sbb
repnz
lock
push
push
inc
mov
daa
and
scas
mov
and
dec
cld
jne
ret
popf
adc
mov
pusha
and
in
xchg
ret
pusha
cmpsb
add
inc
and
push
ss
and
les
xor
repz
pop
add
mov
add
sbb
popa
jmp
mov
cmp
std
je
adc
stos
cmpsb
jmp
hlt
push
jb
testl
shll
mov
dec
insl
pop
sbb
cmp
jno
jae
popa
mov
bound
outsl
outsb
cmp
jae
jns
outsl
arpl
jns
out
es
and
xchg
dec
les
cmc
iret
lcall
cvttps2pi
hlt
pop
sub
mov
or
lcall
lea
jne
aam
stos
int
movsb
or
bound
add
push
fs
test
pop
xchg
mov
sbb
dec
adc
ret
add
ret
add
jp
sti
pop
push
sub
sub
and
inc
sbb
cmpsb
daa
mov
outsb
add
repnz
xchg
sbb
movsb
mov
and
sbb
xchg
addr16
je
xchg
lea
jo
sbb
lock
icebp
je
push
repz
cltd
lret
mov
jo
sbb
divl
jae
dec
cli
rep
inc
cwtl
sti
adc
fimull
lea
or
xchg
loope
xor
cmp
repnz
dec
or
and
fwait
dec
and
scas
mov
push
xchg
mov
push
dec
cmc
dec
jmp
scas
ss
shrb
les
dec
outsb
ljmp
ljmp
in
in
outsl
inc
in
outsl
cld
or
jae
addr16
out
jns
jo
es
lret
jp
cld
jae
jecxz
je
lret
jns
push
sub
dec
mov
mov
lds
cmp
add
insb
lret
andb
aad
push
in
pop
pop
inc
int
inc
cmp
fistps
mov
cwtl
sbb
mov
hlt
sbb
leave
mov
int3
or
push
sub
add
cmp
jl
cmp
mov
rolb
inc
jl
dec
jg
inc
inc
sarb
mov
adc
mov
mov
sbbl
mov
xchg
cmp
jae
lea
mov
enter
xor
sbb
mov
rcrl
pop
imul
mov
mov
adc
add
mov
xchg
sbb
call
test
cltd
movsb
and
xchg
js
sbb
sbb
dec
xchg
popa
push
dec
sub
in
xchg
sbb
std
call
call
out
cmp
jl
cld
mov
iret
jae
push
ds
cmc
sti
xchg
stos
out
hlt
sti
sub
test
in
push
mov
test
mov
jge
cwtl
mov
orl
loop
inc
cmp
or
ror
rorl
lea
mov
xchg
inc
mov
pop
popf
push
dec
push
jmp
mov
jae
rolb
dec
mov
mov
fs
fcmovb
mov
pushf
cmp
sbb
std
ja
sbb
addb
arpl
out
decb
lea
movl
fmuls
adc
mov
loope
hlt
mov
cmp
push
xchg
shlb
sub
loope
cmp
les
repz
xchg
xor
cmp
es
and
jae
sarb
shl
cmp
repz
xlat
fdivs
sbb
xchg
fnstenv
fidivrl
push
loope
cmp
fisubs
loopne
jo
dec
pop
in
in
xor
ret
aaa
out
iret
repz
es
xlat
cmp
xchg
cmp
mov
lret
mov
fs
mov
xor
popf
sbb
movsl
sti
cmp
in
add
push
mov
testb
xchg
push
mov
mov
aam
cs
lods
mov
cmp
cmp
mov
and
inc
mov
push
add
mov
lcall
jo
mov
imul
mov
test
leave
mov
push
pop
dec
mov
mov
iret
jae
frstor
cmp
outsl
test
cmp
jb
lret
jae
test
int
into
jne
cmp
mov
add
pop
shll
sbb
push
mov
cwtl
mov
mov
shlb
test
mov
getsec
outsb
in
lods
aam
iret
stos
cmpsl
xlat
in
cmpsl
xchg
xchg
mov
mov
std
jb
jmp
jge
addr16
in
daa
ljmp
cli
cmp
xchg
in
sbb
repnz
inc
mov
mov
enter
into
pop
xor
inc
dec
ljmp
jmp
dec
out
scas
mov
js
pop
enter
sbb
mov
adc
jb
mov
jmp
lea
mov
mov
cmp
mov
fildll
loope
xor
gs
cld
xchg
popa
rcl
dec
jge
fs
push
out
icebp
sub
or
pusha
jo
xlat
dec
adc
fdivr
and
mov
stos
and
jmp
aas
or
inc
icebp
pop
or
int3
sbb
add
insl
or
aad
data16
in
icebp
lahf
test
aam
mov
push
out
push
repz
in
mov
loope
movntq
arpl
je
in
test
add
bnd
repz
fwait
adc
repz
es
and
cld
cmp
lds
jae
inc
int3
xchg
and
inc
sub
roll
inc
add
cs
and
pop
push
mov
inc
dec
mov
push
sub
fimuls
leave
mov
xor
idivb
sub
repz
ljmp
lahf
pop
dec
sub
and
xchg
mov
insb
xchg
push
cli
and
iret
cmp
jecxz
sbb
inc
mov
dec
push
incl
fsts
sub
mov
flds
cmpb
adc
push
push
xchg
or
aad
push
dec
mov
mov
mov
jne
cmp
xor
mov
icebp
mov
push
push
pop
push
insb
adc
movsb
adc
sbb
movsb
incl
ror
cmp
sbb
push
lock
pop
and
cmpb
dec
dec
cld
push
fwait
push
jl
mov
cmp
mov
push
sbb
outsl
pop
ljmp
test
into
jecxz
mov
push
pop
data16
imul
shll
push
outsb
ja
mov
outsl
cmp
mov
push
inc
push
jb
clc
clc
clc
gs
aaa
ds
outsb
adc
mov
out
mov
jo
mov
out
add
les
loop
push
mov
enter
int3
dec
push
cmp
xchg
push
imul
inc
jo
jns
or
mov
aad
jmp
leave
xchg
xchg
nop
les
cmp
lods
xchg
loope
inc
lods
data16
js
cmp
adc
das
sbb
xchg
mov
adc
in
in
inc
out
inc
popf
push
cmp
cmp
repnz
loop
je
dec
dec
dec
or
test
push
lret
clc
push
push
ss
out
push
push
outsl
push
fcomps
cmp
insb
push
push
arpl
mov
cli
inc
pop
imul
cmp
mov
jecxz
xor
jae
daa
es
bound
popf
fs
lods
jl
sub
sbb
jle
mov
sbb
andl
xorl
xor
xchg
push
pop
mov
xchg
popf
jb
outsl
lahf
arpl
cmp
xor
adc
test
bound
test
int
cmp
jge
out
inc
test
loop
loope
cmp
ret
loope
cmp
push
nop
imul
outsl
xchg
ja
push
xchg
adc
loope
gs
js
je
inc
mov
dec
or
jns
xor
fs
sbb
leave
loope
sub
or
cmp
hlt
jecxz
jb
js
movsb
ret
ret
subb
ret
loop
or
je
push
cld
inc
sbb
repz
ss
xchg
push
push
hlt
xchg
pusha
testb
lods
xor
stos
loop
or
mov
pop
mov
push
sub
jmp
std
inc
fcmove
sbb
adc
push
push
cmp
insl
pop
lds
cmp
jmp
cmc
pusha
cwtl
pop
push
ret
test
mov
aam
cmp
fisubrs
rcl
push
push
in
sbb
mov
add
std
mov
inc
mov
adc
or
xchg
scas
or
and
jne
inc
dec
insb
lret
inc
leave
cmc
and
scas
inc
lret
sahf
call
adc
lods
cmp
test
test
push
mov
pop
sahf
movsb
inc
pop
hlt
in
fisubl
inc
stos
push
insb
adc
mov
lods
sti
pop
inc
adc
test
shrl
mov
or
jge
xorl
add
xor
adc
sub
sbb
push
xor
aad
mov
push
out
loop
adc
test
dec
xchg
jmp
cmpl
jne
cwtl
dec
pop
mov
add
shlb
add
movsb
push
arpl
mov
and
test
cmp
jnp
push
loop
loopne
mov
xchg
or
mov
stos
cmp
cmp
je
cmp
jb
dec
dec
cmpw
jne
mov
out
mov
xchg
in
add
pop
jne
xor
or
inc
je
push
push
clc
push
mov
mov
push
pusha
leave
inc
in
jae
add
jb
popa
xor
nop
xlat
into
mov
stos
lods
jne
sarl
sub
push
inc
push
or
fists
test
push
push
xchg
xor
out
lcall
mov
push
push
and
repz
jb
xor
ficoms
and
insb
cli
xor
jns
inc
gs
push
stos
jl
and
jb
lsl
nop
push
outsb
xchg
mov
push
test
out
or
mov
pusha
xchg
sub
mov
and
mov
add
lea
adc
mov
out
sti
xor
scas
push
jne
mov
leave
adc
sbb
xor
mov
testb
mov
or
into
cs
movsb
cmp
mov
push
xor
paddb
push
sbb
je
add
or
gs
icebp
stc
pop
sbb
lock
sti
mov
or
pushf
mov
push
test
cld
inc
popf
shlb
mov
std
clc
std
icebp
sti
lock
mov
clc
mov
jp
inc
andl
ficoml
cld
cmpsl
stc
cmp
cmp
notb
inc
push
ret
add
sti
cs
xor
xchg
and
or
pop
mov
daa
fcoms
push
jmp
mov
roll
jo
push
cmp
adc
push
mov
js
test
xchg
xlat
xchg
test
js
lds
or
push
adc
es
and
mov
sub
inc
mov
adc
jl
xchg
adc
mov
lock
and
sbb
or
or
xchg
dec
mov
pushf
add
ja
push
sbb
lods
clc
pop
push
jb
xchg
lret
add
xchg
popl
xor
push
es
mov
or
je
iret
repz
jb
gs
and
iret
repz
gs
lret
cltd
insb
mov
je
fnsave
cmp
jns
punpcklwd
aaa
push
sahf
out
jne
popa
pushf
jecxz
je
mov
mov
pop
push
outsb
cmp
sarl
jno
and
repz
jae
jp
xchg
les
movsb
fidivrs
jns
scas
fs
xchg
out
mov
jne
lret
cmc
pushf
mov
out
loop
cli
dec
dec
leave
xor
xchg
xchg
lret
rcl
jb
ret
xchg
gs
data16
push
inc
js
outsb
xor
js
aad
fdivrs
xchg
pop
cld
call
mov
cmp
fdiv
shlb
enter
jmp
repz
in
mov
leave
enter
sub
and
sub
popa
mov
cmp
fsub
call
pop
call
movsb
lea
and
adc
xorl
inc
or
scas
dec
sahf
lea
add
xchg
inc
dec
push
sub
jne
aam
push
cmp
cmc
cmpsl
inc
mov
imul
push
cmp
inc
hlt
sub
mov
xor
mov
and
pop
rclb
pop
push
icebp
mov
scas
loopne
mov
xor
cltd
add
ret
test
stc
jle
lock
dec
cld
or
and
imul
add
cmp
lds
xlat
and
add
stc
sub
jge
dec
fisttpl
jle
loop
push
out
dec
shlb
push
andb
jo
mov
xor
push
cmpl
push
imul
inc
int3
sbb
mov
mov
jae
fimuls
mov
lea
xchg
push
inc
insb
incl
iret
pop
xor
andb
xchg
ret
jl
sbb
sub
inc
or
push
push
and
and
xorb
fiaddl
sub
mov
xchg
testb
fiadds
test
sbb
ljmp
pop
aaa
push
aad
pop
push
cmp
rcrl
pop
pop
mov
mov
addb
pop
mov
xor
dec
rorl
popa
clc
inc
jnp
insl
cmp
dec
movsb
dec
movsl
outsl
cmpsb
pushf
dec
xchg
sbb
cmp
inc
arpl
scas
imul
imul
popa
push
test
loopne
lods
push
xor
ss
jp
out
gs
inc
jb
aad
iret
pusha
ljmp
js
mov
jns
push
out
pop
inc
jb
sbb
push
mov
ret
loope
cmp
pop
nop
pop
xchg
push
cmp
xchg
jb
popa
xchg
sbb
insl
xchg
gs
push
cmp
repz
fs
pop
xor
mov
int3
repz
sub
jns
mov
adc
mov
and
je
and
scas
dec
addr16
int
jne
idivb
iret
push
imul
mov
clc
sub
or
lret
push
mov
and
and
jmp
mov
sbb
xchg
movsb
jae
movsb
push
popf
je
and
pop
mov
mov
jno
and
dec
cmpsl
sbb
lea
test
sub
dec
cmpsl
mov
jmp
mov
dec
jns
xor
add
push
push
mov
mov
fsubl
push
sub
mov
mov
mov
push
or
adc
and
or
jbe
sbb
repz
adc
sbb
fsubs
mov
clc
rcll
add
fcoms
mov
repz
pusha
push
jns
imul
addr16
repz
jo
jae
jne
sbb
cmp
and
mov
push
and
mov
shll
inc
test
ss
icebp
push
repz
mov
inc
dec
enter
inc
adc
dec
push
push
xchg
mov
fcoml
out
or
add
add
jmp
or
mov
xor
dec
add
sub
or
add
dec
adc
sub
lock
jl
add
pusha
push
xchg
mov
jne
mov
push
or
pushf
jns
leave
inc
adc
and
add
cs
pop
pop
add
inc
xchg
or
int3
mov
fstps
adc
mov
out
add
stc
adc
mov
loope
xchg
push
pop
push
fcompl
loopne
cmp
fsubl
imul
pop
aad
xchg
inc
or
jb
pop
out
jo
add
jecxz
mov
adc
adc
int3
add
jno
cmp
mov
ja
jl
adc
jbe
xchg
loope
jbe
jbe
jbe
ja
ja
push
pop
push
ja,pt
ja
jbe
ret
loope
mov
clc
jne
jne
jne
sbb
xchg
jne
jne
jne
jne
repz
repz
inc
cmp
jo
iret
and
clc
je
je
je
push
xchg
cwtl
je
je
je
je
or
jns
in
mov
loope
pop
je
jae
dec
je
iret
repz
xor
and
push
cmp
repz
jae
jae
cmp
repz
mov
jecxz
cmp
lcall
iret
repz
push
jns
iret
and
mov
jecxz
jbe
jbe
jbe
jbe
add
mov
jb
roll
je
dec
push
pop
add
jo
add
jae
je
popa
out
xor
push
insb
insb
outsl
arpl
add
js
gs
loop
push
pop
push
gs
ret
fs
lea
arpl
pusha
pop
push
cmpsl
outsb
roll
je
filds
outsl
ja
loope
pop
jbe
testl
data16
add
jmp
ret
shrb
pop
mov
test
inc
pop
inc
pop
push
inc
pop
jb
add
loope
ja
jae
insl
cmovnp
sahf
fnstenv
dec
dec
in
sbb
arpl
jle
jae
dec
mov
aaa
je
movl
add
aaa
lea
push
pusha
and
outsl
push
je
shlb
sbbl
out
jecxz
call
pop
bound
add
sahf
add
aam
rcll
dec
dec
add
fs
add
int3
or
int
pop
add
sub
push
inc
imul
and
or
popa
fs
adc
push
add
outsl
call
inc
add
js
sub
imul
scas
shrb
add
inc
xchg
sub
dec
lcall
mov
andb
jne
das
xor
jle
push
imul
lock
outsl
dec
ds
add
jns
lods
in
cld
push
or
cltd
cwtl
iret
gs
insb
in
ss
jmp
out
sbb
add
pushf
loope
icebp
lea
negb
ss
dec
jae
inc
fwait
pop
dec
popa
insl
ss
int
xchg
int3
enter
lret
leave
jb
ja
inc
jae
mov
inc
jne
outsb
sbb
push
fadds
push
fiadds
add
into
add
jg
jb
addl
int3
or
repnz
in
lret
je
loope
aam
jne
push
mov
iret
push
fisttpl
xor
lret
xchg
push
je
in
js
push
jne
inc
js
notl
dec
popa
arpl
sub
inc
dec
xor
sbb
sbb
or
cmpsb
je
outsl
outsl
imul
jle
mov
push
cmp
pushf
test
stc
scas
add
push
ficomps
mov
or
inc
push
jg
xor
pop
inc
fwait
arpl
data16
add
add
sbb
mov
lahf
push
push
jp
mov
mov
add
pop
inc
ret
data16
cs
insb
push
fstps
cmp
push
sub
outsl
pop
and
inc
sub
sahf
in
insl
sub
sub
imul
sbbl
cs
adc
inc
dec
inc
into
mov
imul
jne
loope
dec
les
ja
or
mov
cmp
pop
lahf
inc
inc
dec
inc
cs
pop
inc
pop
jne
movsb
jp
mov
shlb
icebp
or
dec
outsb
or
and
inc
lea
aam
pop
mov
leave
fs
dec
loop
enter
outsl
mov
inc
jno
sbb
sbb
jo
dec
mov
add
xor
xor
xchg
add
cmp
push
out
lods
out
bound
in
jmp
test
mov
mov
add
jo
enter
mov
rol
into
divl
data16
test
lret
fimuls
in
sahf
sbb
dec
gs
pushf
movsl
iret
insb
xchg
loope
popa
inc
subb
sub
xchg
pop
imul
loope
cmp
or
jae
push
sub
mov
mov
dec
cs
sarl
sub
and
fimuls
mov
dec
mov
cli
dec
in
xorl
loopne
adc
sub
inc
jb
mov
and
inc
jb
or
mov
and
xchg
or
add
sub
mov
push
sbb
jge
or
js
add
and
pop
stc
sub
mov
or
cs
popa
pop
repnz
and
push
es
rcll
pop
sub
shll
mov
dec
inc
mov
and
js
pusha
add
add
add
data16
add
cmp
or
imul
sub
lret
mov
cltd
mov
mov
push
adc
roll
inc
out
fldt
add
daa
sub
jns
cmc
gs
dec
dec
jae
mov
lds
cmc
inc
adc
xchg
xchg
add
stc
add
mov
cmpl
das
ret
daa
enter
fidivl
or
and
leave
bound
push
push
lcall
icebp
mov
pop
sbb
test
shl
adc
mov
pop
es
movsb
push
sub
movsl
lret
add
jae
inc
or
add
push
jne
dec
pop
call
shrl
or
mov
push
add
mov
pop
push
lret
push
or
in
adc
adc
fisubrs
adc
jbe
lds
fs
in
mov
and
inc
jle
adc
sbb
add
mov
or
daa
xor
pop
lretw
outsl
push
or
cwtl
ret
repnz
outsl
cmp
out
mov
sub
xchg
jecxz
es
or
and
mov
sbb
mov
popf
repnz
push
lret
mov
out
push
outsb
sbb
in
add
or
dec
je
or
pop
xchg
push
push
add
or
pop
sub
mov
adc
and
fld
cs
and
add
adc
mov
pushf
mov
mov
cmp
inc
add
sbb
add
js
js
gs
cmp
add
lahf
adc
mov
lods
push
sbb
je
es
rcr
xor
insl
ds
aaa
adc
lret
mov
push
sbb
mov
iret
push
std
sub
lret
xchg
add
mov
fwait
mov
jl
aas
fsts
sub
shrb
ja
cs
lret
jle
arpl
sub
jno
mov
mov
add
add
adc
lahf
dec
xor
add
xor
iret
lea
dec
add
add
mov
add
add
add
add
add
add
add
xor
add
xor
add
inc
mov
add
add
dec
adc
add
adc
add
outsb
arpl
inc
insb
insb
add
fs
insb
insb
mov
add
mov
add
add
xor
add
add
add
push
mov
add
add
add
add
add
add
test
add
pusha
mov
add
add
add
push
mov
add
add
je
add
add
add
incl
add
add
add
add
add
lcall
add
add
add
js
add
test
add
imul
gs
xor
cs
insb
add
add
add
dec
outsl
popa
fs
imul
add
add
inc
gs
jb
arpl
fs
jae
add
add
add
push
imul
insb
insb
outsl
arpl
add
add
jb
jne
insb
inc
jb
add
add
push
inc
push
push
cs
insb
add
add
pop
jae
jb
arpl
add
push
push
inc
push
xor
cs
insb
add
add
inc
gs
imul
add
add
dec
xor
cs
insb
add
add
add
gs
inc
inc
add
movsb
fnclex
aam
push
jb
lahf
sarl
jns
push
pop
negb
loopne
lock
mov
add
add
add
sbb
pusha
mov
mov
cld
lods
xor
test
je
loopne
sbb
xor
lea
movsb
mov
call
cmp
jae
push
or
xor
inc
xor
mov
lea
mov
mov
call
sub
lea
add
mov
call
pop
sub
jae
and
call
mov
call
jne
pop
cmpsb
sub
inc
mov
sub
add
fcos
cmp
sub
add
movsb
pop
inc
inc
jmp
add
jne
xchg
lods
xchg
inc
ret
add
flds
in
call
leave
call
out
jb
ret
sub
sbb
ret
add
sub
sub
adc
adc
sbb
inc
add
jo
fdivr
mov
outsl
les
cwtl
jno
ds
mov
call
imul
mov
mov
add
outsl
hlt
dec
add
push
push
add
adc
pop
ret
xorb
xor
pop
fcomps
mov
out
inc
mov
sarb
or
add
adc
cmp
mov
add
cld
mov
mov
mov
add
lea
pop
rclb
das
pop
lods
stos
nop
das
xor
add
adc
divb
and
jecxz
adc
mov
adc
js
sbb
das
add
or
lcall
push
call
sub
mov
mov
xchg
push
lahf
test
pop
cld
push
or
testb
sbb
jne
je
push
add
ss
push
xor
leave
je
bound
push
inc
push
sbb
xchg
stos
sbb
fisubs
lea
mov
jmp
test
je
push
and
arpl
test
push
aas
pop
push
mov
js
sbbb
stos
mov
push
xor
test
aas
imul
sbb
cmp
andb
inc
or
dec
inc
mov
add
movb
add
mov
xor
mov
aam
xor
push
call
pop
push
mov
bound
pop
inc
or
pop
pop
pop
ret
jl
pop
add
in
add
lock
mov
sub
push
xchg
cmp
lret
push
call
adc
push
add
jle
add
xor
add
loope
mov
mov
add
jne
push
dec
add
xor
jmp
add
jne
imul
iret
mov
mov
add
pop
inc
pop
or
ret
je
mov
jo
add
push
add
mov
sub
mov
lods
mov
add
lods
add
mov
sub
je
movw
add
lods
cmpw
add
ret
xchg
and
inc
psubq
call
add
add
mov
add
dec
shr
mov
jns
jp
arpl
mov
or
xor
pop
add
or
hlt
inc
sbb
aad
in
js
lret
push
movsl
pushf
cmpsb
pop
push
xchg
xor
sbb
inc
int
orb
adc
and
ret
xchg
add
cmp
dec
cld
pop
adc
cmp
xor
push
inc
movzbl
add
sub
inc
sub
dec
mov
jne
cmp
fwait
add
jne
or
rclb
out
cmpxchg
add
ljmp
add
pop
pop
inc
adc
xor
inc
je
notl
scas
xor
jmp
dec
jo
pop
push
add
fisttpll
sub
pushw
push
push
call
sbb
dec
pop
push
ret
dec
outsb
sbb
and
mov
enter
test
inc
je
cwtl
push
fstl
jge
cmpsb
add
imul
rep
add
std
imul
mov
stos
cli
call
stos
add
stos
sub
cmp
and
mov
insl
push
jne
jecxz
sub
roll
lock
fs
push
adc
nop
aad
mov
jge
sbb
xor
enter
movsb
pop
mov
jl
add
inc
cs
pop
pushf
mov
push
out
push
inc
or
dec
mov
push
inc
mov
or
test
in
call
les
roll
adc
pop
je
or
or
lret
cmp
cli
cmp
jne
push
adc
movl
roll
mov
insb
jne
add
dec
pop
mov
rcrl
dec
pop
aam
fistl
add
add
add
xchg
or
rorl
jle
and
push
push
push
call
in
inc
dec
xchg
imul
rclb
lds
imul
jbe
jbe
sbb
addb
addl
sbb
scas
testb
xchg
out
loope
insb
es
call
insb
sub
es
dec
rorl
lock
jne
fstpt
jne
adc
push
xor
add
dec
repnz
lds
mov
inc
xor
flds
in
stos
orl
sub
pop
pop
subb
test
add
cmpsl
leave
jp
jo
jmp
insb
sub
lods
daa
nop
dec
and
sub
mov
jns
adcl
movsb
repz
in
dec
ss
sub
sbb
add
cmp
inc
cmp
adc
jl
sbb
shr
das
lock
loope
push
lea
into
mov
push
add
cmc
or
sti
push
mov
test
sub
mov
pop
pop
jae
mov
js
fstpl
lock
das
xchg
inc
cmp
sbb
or
jge
enter
les
mov
add
mov
sarb
insb
imul
outsb
and
jb
jb
arpl
jne
je
add
and
or
add
fs
and
add
and
je
bound
and
and
xor
test
pop
test
shlb
pop
repnz
sub
push
pop
cmpsl
inc
jae
push
add
fcmovb
jne
xor
add
jae
popa
addr16
outsl
js
test
cmp
add
je
pop
mov
xchg
imul
jns
aaa
rolb
imul
inc
dec
popa
sbb
pop
add
insb
add
outsb
inc
mov
mov
mov
je
push
mov
addr16
je
repz
movsl
lcall
jno
jns
lret
insl
shr
push
and
dec
jp
cmp
pushf
movsl
sbb
mov
je
and
jl
sub
lods
xor
test
je
xor
lea
movsb
mov
call
jae
cmp
jae
push
push
push
xor
inc
xor
mov
lea
mov
mov
call
jae
lea
add
mov
call
jae
pop
pop
pop
sub
jae
mov
call
jmp
mov
call
adc
dec
jne
inc
call
mov
cmp
sbb
cmp
sbb
push
mov
sub
rep
pop
inc
inc
jmp
add
jne
xchg
lods
xchg
add
inc
ret
xor
inc
call
adc
call
jb
ret
sub
mov
popa
ret
add
mov
add
mov
add
add
mov
add
insb
mov
add
add
adc
add
fs
add
lea
mov
mov
mov
movb
add
sub
mov
xor
ret
mov
popl
add
push
push
push
push
push
push
lea
mov
push
mov
push
push
pushl
push
mov
add
mov
call
pop
mov
push
push
mov
mov
add
mov
mov
mov
add
mov
mov
add
mov
add
lea
push
push
push
call
pop
pop
add
mov
push
mov
mov
add
sub
mov
mov
mov
call
mov
mov
mov
pop
jmp
add
push
push
push
call
mov
pop
pop
pop
pop
pop
pop
jmp
