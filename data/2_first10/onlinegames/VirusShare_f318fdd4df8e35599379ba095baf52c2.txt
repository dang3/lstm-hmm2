fidivs
add
pop
add
mov
sub
push
push
lea
push
xor
push
mov
clc
cmp
addr16
xchg
loope
imul
jne
jae
cmp
out
cs
insb
repnz
mov
call
or
add
mov
cmp
je
shlb
nop
rolb
sarl
adc
ret
les
xchg
loope
gs
je
dec
enter
jo
scas
adc
lret
gs
inc
int
push
xchg
loope
arpl
outsl
shlb
dec
cmp
sbb
jb
jae
call
dec
sub
ret
pop
mov
cmp
mov
movsb
movsl
cmpsb
repz
repz
test
stos
stos
iret
repz
lods
lods
scas
scas
mov
iret
repz
mov
mov
mov
jecxz
repnz
push
mov
push
mov
cmp
adc
xor
push
dec
jmp
add
clc
push
cld
push
call
pushl
jo
add
mov
push
mov
je
int3
test
rolb
nop
push
cmp
lea
pushl
sub
adc
test
pop
je
inc
add
cmp
out
adc
add
lea
movsl
test
add
mov
aad
es
or
inc
inc
pop
pop
pop
leave
ret
sub
scas
jo
pop
iret
add
movl
popf
dec
dec
iret
repz
cmp
iret
repz
jb
xor
hlt
cmc
test
pop
xor
push
loope
loop
cmp
xchg
outsb
in
in
out
out
ret
outsb
call
ja
jo
sbb
je
lea
mov
inc
cmp
jne
jmp
cmp
push
push
cmp
or
mov
push
mov
inc
ret
je
fld
sbb
pop
push
inc
xchg
cmp
or
shr
mov
jb
out
or
add
call
jne
sub
add
or
js
cmpb
fs
fs
sub
jnp
jo
push
add
adc
xlat
shlb
je
mov
mov
mov
and
pop
push
shrl
mov
sahf
add
push
lock
xchg
adc
addr16
imul
fsubrs
fidivl
push
xchg
fldt
fsubl
fisubs
shl
add
mov
mov
test
pop
subb
jb
repz
jne
repz
gs
js
push
mov
je
jp
bound
inc
jnp
sbb
jge
jle
xor
lcall
xchg
loope
outsl
subl
test
jo
sbb
dec
xchg
mov
push
dec
sbb
ds
xor
fisttpll
mov
xchg
jbe
push
xchg
xchg
gs
dec
xchg
insl
xchg
popa
ret
loope
cmp
push
lcall
xchg
out
popf
lahf
cwtl
test
cmp
mov
push
xchg
icebp
enter
lret
push
loope
cmp
je
popa
into
jb
je
jne
mov
shll
dec
jbe
iret
les
mov
mov
movsl
imul
jae
mov
out
mov
psrad
jne
fwait
fs
and
rorb
out
cmp
push
mov
aam
insb
sbb
adc
add
arpl
in
pop
pop
push
data16
popf
dec
jp
imul
or
cmp
pop
addr16
cmp
gs
das
pusha
cmp
fs
scas
pop
xor
inc
push
xor
xchg
or
mov
xor
dec
push
or
test
std
mov
xorl
adc
rep
dec
sub
andb
sbb
out
jmp
in
or
push
mov
shlb
jns
dec
ja
test
fcomip
call
insb
xor
sub
sbb
push
mov
jno
insb
sbb
inc
adc
jg
or
invd
pop
mov
jmp
add
int3
push
push
sbbl
pusha
imul
mov
adc
rolb
test
rorb
jno
sti
stos
stos
sub
in
or
mov
cmp
sti
xchg
jp
dec
leave
and
jl
jno
ja
adc
add
mov
or
mov
arpl
xor
test
xchg
push
push
push
int
cmp
lock
jne
int3
nop
mov
inc
mov
lret
in
dec
cmp
test
jne
cld
xchg
inc
pop
clc
jae
adc
mov
cmp
cld
adc
inc
jne
pop
inc
and
push
lea
push
or
sti
add
call
add
cmp
add
add
sub
call
repz
gs
es
push
std
incb
dec
cmp
mov
adc
sub
je
call
ret
enter
cld
push
sbb
pusha
mov
xor
sub
mov
add
push
mov
xor
pop
je
cmp
je
inc
shr
jne
add
add
test
jne
add
dec
popa
cld
pop
rcrl
fistl
inc
add
adc
or
jae
xor
sbb
or
mov
jbe
mov
test
adc
fdivs
mov
shlb
or
cltd
fadds
xor
push
pop
sbb
dec
mov
inc
shlb
mov
pop
ljmp
cmp
arpl
sbb
push
in
push
sbb
cmp
inc
fldenv
je
loope
cmp
inc
fsubrl
jb
fbld
sub
xchg
jb
loop
rcr
jae
xchg
add
loopne
adc
sbb
aam
lods
add
xor
push
aam
sbb
data16
push
jmp
push
jae
cmp
jo
jne
add
sub
push
sub
call
adc
xor
adc
lcall
push
jne
mov
jle
cld
inc
push
mov
lds
jbe
sbb
mov
push
lcall
push
loope
cmp
pop
mov
and
jge
lret
sahf
popa
add
xchg
scas
xchg
inc
mov
mov
jne
add
push
inc
ret
popa
push
jno
sbb
pop
mov
cwtl
sub
push
sbb
or
ret
or
or
clc
sbb
sbb
and
mov
pop
xor
out
lods
ret
mov
loopne
cmp
cmp
je
push
rcll
mov
ficoms
lds
add
sbb
xor
rcrb
in
inc
or
subl
jge
xchg
adc
adc
stos
les
mov
cwtl
push
mov
push
addl
fs
xor
sahf
sbb
push
aas
jb
aad
aam
adc
ret
inc
ret
cmp
mov
push
xchg
push
add
hlt
sbb
ret
loope
es
fs
lret
pop
sbb
lret
jae
es
xor
jns
iret
rcl
rcl
iret
repz
aam
aad
xlat
fcomps
fidivrl
fcmovnu
fisttpll
xchg
jns
fnstsw
xor
xor
cmp
jecxz
in
in
out
out
sbb
xchg
call
and
jo
in
es
fs
xor
jp
icebp
jae
jno
scas
jnp
div
fs
cmp
out
cli
xor
xor
cmp
jo
jae
push
loope
bound
clc
adc
fnstsw
xor
jmp
out
and
xchg
ds
imul
mov
jg
std
js
imul
test
mov
add
test
cmpsl
sbb
inc
js
and
mov
fs
and
arpl
xchg
push
lea
mov
mov
sbb
rcrl
nop
arpl
jmp
xchg
xchg
outsb
sbb
loope
cmp
je
loope
cmp
outsl
pushf
arpl
xchg
and
pop
in
xchg
push
lock
jecxz
test
lods
mov
orb
loop
rorb
lock
add
mov
push
mov
mov
enter
insb
mov
sahf
out
std
mov
loop
enter
jmp
mov
jp
cmp
inc
push
inc
outsl
add
dec
ret
dec
lea
push
stc
pcmpgtd
movsb
movsl
js
mov
cmpsb
cmpsl
inc
test
test
ret
loope
lods
outsb
lods
je
push
loope
cmp
jb
outsl
mov
mov
mov
xor
xchg
mov
mov
mov
mov
dec
int
mov
movsl
in
stc
movsl
lret
xor
adcl
jb
arpl
jae
jae
hlt
push
gs
jns
dec
insl
imul
popa
shll
aad
aas
sbb
xchg
jb
outsl
fsubs
or
stc
jae
addl
int3
pop
out
pushf
nop
mov
mov
sub
jne
leave
mov
loope
push
mov
push
ret
jb
sbb
xchg
outsl
lds
gs
shrb
enter
cmp
enter
push
jo
mov
add
sahf
push
mov
push
popa
mov
hlt
or
out
mul
xlat
cmp
sub
adc
mov
repz
xchg
cmp
repz
data16
cmp
and
xor
pop
or
testb
ret
jno
in
gs
popa
out
jae
mov
xchg
lret
mov
pusha
fwait
adc
add
xchg
data16
out
lret
insl
mov
aaa
sbb
fcomps
rolb
adc
xchg
leave
pusha
xchg
les
insl
push
mov
imul
fs
test
inc
mov
mov
roll
loop
nop
mov
xchg
xchg
push
add
fstpt
add
and
push
dec
clc
sbb
mov
iret
jnp
ret
mov
xchg
inc
out
call
ror
jle
hlt
jne
cmpl
shrb
inc
or
mov
mov
push
faddl
shl
pop
shrb
rclb
mov
test
leave
repz
sub
pop
push
popa
aam
insb
jns
pushf
adc
data16
pop
les
lods
jne
mov
loope
test
add
xchg
xor
and
repz
daa
mov
adc
in
mov
mov
lret
sbb
in
push
in
mov
jo
loope
dec
out
or
sbb
push
icebp
adc
orl
lods
push
popa
ret
lods
lods
push
scas
and
inc
imul
mov
mov
mov
mov
push
jecxz
mov
xchg
cmp
loopne
push
hlt
cmc
inc
neg
xor
js
testl
pushf
pushf
mov
mov
clc
stos
inc
jno
mov
cli
xor
sub
inc
or
movsl
fnsave
cmp
push
xchg
pusha
fsubrl
fdivl
fldl
sbb
ficoms
filds
loopne
lcall
jecxz
cli
call
mov
inc
das
push
inc
inc
jno
xlat
rorl
fs
cmp
push
filds
xchg
mov
fmull
inc
not
and
lcall
loope
adc
cmp
mov
cmpsb
add
jl
pop
add
bound
jmp
mov
mov
xchg
mov
inc
mov
mov
pop
ja
xchg
in
pop
popf
jge
pop
pushf
pop
mov
ds
cmp
inc
je
xchg
test
mov
cs
test
cli
jo
inc
enter
in
jecxz
movsb
mov
test
bound
mov
pop
ret
pusha
mov
add
lea
push
inc
daa
inc
jo,pn
in
loopne
inc
lods
sbb
clc
popa
and
add
add
add
jmp
sbb
mov
pop
add
xor
add
inc
add
cmp
jbe
xor
test
jbe
loopne
mov
adc
clc
mov
adc
xchg
fs
xlat
pop
add
outsl
push
decl
cmp
jb
loopne
shlb
popa
jmp
enter
adc
daa
pop
test
add
test
inc
popf
fmuls
sub
sbb
cmp
fs
enter
push
push
int3
loope
dec
cmc
sar
add
and
cld
mov
jge
or
dec
fadds
adc
mov
cli
add
inc
jno
push
les
push
sub
sub
cltd
daa
mov
insb
mov
add
sub
lock
mov
rorb
pop
fstpl
js
faddl
push
mov
fwait
push
pop
int
popf
jo
push
push
mov
mov
push
pop
or
push
iret
popa
pusha
push
pop
in
rol
cmp
andb
test
decb
test
push
and
jecxz
cmp
dec
cmp
addr16
ja,pt
sub
jns
cmp
dec
jno
inc
push
inc
mov
jbe
sub
cmpsb
xchg
inc
inc
jns
jns
push
dec
outsb
dec
fs
lret
dec
cmp
add
pop
test
rep
inc
mov
and
icebp
mov
mov
cmp
dec
popa
pushf
int3
inc
xor
int
into
iret
popa
sahf
lea
je
xor
sarb
repz
xchg
out
jmp
push
mov
xchg
loope
js
cmp
jo
sbb
cmpsl
xor
cmp
mov
ret
pop
push
and
adc
adc
dec
and
adc
and
es
daa
pop
mov
mov
int
sub
sub
sub
sub
cs
das
xor
sbb
xor
xor
cmp
xor
dec
cmpsb
addb
push
dec
js
push
insb
mov
add
insl
mov
insb
sbb
push
out
mov
push
or
arpl
outsl
or
insb
cmpsl
mov
sub
femms
and
jns
adc
adc
data16
outsl
adc
pushf
cs
daa
push
pop
int3
les
jae
sbb
loope
orl
push
jns
movl
xor
inc
mov
jb
int3
dec
sarb
push
cmp
xor
mov
mov
push
xchg
jb
outsl
xchg
arpl
xchg
jae
jae
xor
xor
loope
gs
pushf
jnp
or
popf
call
cmc
inc
cld
and
push
sti
clc
cmp
in
nop
test
inc
cmp
push
push
push
and
sub
popa
bound
loop
jne
fs
nop
addr16
pop
packsswb
cmp
pop
xor
js
jecxz
loop
insl
push
mov
fcoms
jae
jo
sbb
xor
xor
cs
shrb
loop
sbb
ja
rolb
rol
jo
ret
outsb
les
cmp
outsl
arpl
gs
and
xchg
jno
lret
out
in
adc
jne
insb
push
jecxz
mov
jne
jns
scas
cmp
js
sahf
pop
lahf
div
dec
dec
cmp
xor
dec
dec
stos
fcomps
dec
push
leave
adc
xor
push
fcomps
lods
push
push
ficoms
pop
rcrl
pop
pop
les
sbb
lock
or
rcl
clc
cmp
and
inc
je
dec
sahf
mov
mov
outsl
int3
and
fsts
movsb
dec
cld
je
daa
dec
or
and
pop
pop
pop
ftst
movsl
test
hlt
push
or
jne
sbb
xchg
stos
or
icebp
call
xchg
jmp
mov
jne
test
ret
or
in
xchg
push
scas
jne
push
orl
movsl
jo
adc
jno
sbb
jo
mov
jmp
ss
sub
sar
push
lock
cs
push
movsl
ss
iret
rolb
push
mov
mov
mov
xor
push
jno
xor
push
xchg
setb
bound
jne
pop
inc
movsb
addr16
add
sub
mov
call
mov
dec
cmp
inc
sub
push
mov
sub
in
cmp
mov
notb
and
adc
mov
sti
movsl
rolb
lock
shlb
les
movsb
jno
inc
inc
pushl
pop
nopl
mov
lods
pop
test
popf
pop
adc
adc
shrl
mov
xor
push
mov
hlt
test
sbb
mov
ja
cmpl
pusha
cmp
lds
add
in
xchg
push
enter
mov
loopne
shll
mov
daa
idiv
push
add
and
pop
je
cmp
jb
dec
dec
cmpw
jne
pusha
xchg
sarl
mov
pop
jne
sub
add
pusha
je
push
pop
ss
or
xor
push
adc
sbb
push
mov
into
pop
sbb
movl
push
sbb
es
daa
je
clc
pop
cmpsl
lock
or
and
fists
add
push
mov
dec
and
out
shl
inc
repnz
push
sbb
jb
pop
mov
jns
idivb
hlt
or
jns
adc
je
pop
inc
sahf
inc
outsl
gs
cmp
repz
jne
sbb
xor
outsb
fs
mov
outsl
out
cmpsl
inc
push
hlt
pop
rorb
cmp
cld
mov
inc
test
mov
daa
cltd
sarb
inc
push
jb
or
jno
cmp
jno
outsb
arpl
jmp
or
push
int
pop
out
add
mov
je
lcall
sbb
xor
or
mov
mov
adc
sbbl
rcr
pop
mov
enter
cmc
hlt
dec
dec
mov
mov
popf
test
mov
push
xorl
xor
pop
jne
pop
mov
or
add
shlb
jno
mov
jg
inc
xchg
mov
lock
in
imul
inc
int3
inc
fwait
jae
nop
std
arpl
clc
call
cld
lock
jge
in
sti
in
sti
xor
stos
mov
lcall
pop
testb
mov
jp
or
push
data16
sub
cmp
jl
sahf
fwait
aad
pop
or
mov
push
repz
popa
adc
imul
and
sub
and
mov
iret
adc
dec
jno
push
loope
in
in
in
out
sbb
xchg
out
call
outsb
pop
and
xchg
repz
loopne
xlat
cmp
js
push
mov
xor
xchg
push
xor
outsl
movsb
mov
inc
add
inc
sub
arpl
je
push
loopne
or
push
mov
pop
add
pusha
push
push
das
xor
adc
cmpsl
hlt
out
push
mov
add
loopne
mov
adc
cmp
cmp
push
std
std
and
loope
mov
cmp
arpl
repz
bound
inc
subb
mov
pushf
add
ja
aaa
ja
mov
xor
ret
popf
adc
sbb
fcomi
push
cmc
dec
idivb
sbb
sub
dec
clc
dec
stc
fwait
mov
int
push
sahf
out
dec
cld
std
dec
popf
pop
decl
push
pop
test
outsb
sahf
out
cmp
jb
gs
out
je
jb
je
dec
jp
out
imul
inc
iret
jl
sbb
adc
jbe
loope
xlat
outsb
fcoms
repz
jno
frstor
mov
mov
je
loope
cmp
xchg
jo
push
cltd
gs
fs
push
popf
gs
jno
loope
cmp
jae
je
inc
dec
sub
xchg
jns
inc
enter
jmp
pop
imul
xchg
shr
jno
jne
gs
cmp
je
repz
xchg
out
jb
aas
iret
repz
inc
outsl
outsb
outsb
or
inc
pusha
int3
mov
stos
cltd
mov
cmp
jne
aam
in
mov
mov
mov
jecxz
cmp
aas
lds
mov
test
shlb
sub
enter
cmp
in
xorb
sbb
mov
cmp
stos
push
sahf
xlat
fs
cwtl
test
in
pop
push
push
inc
shll
rolb
push
hlt
int3
or
insb
orl
pop
hlt
shlb
mov
inc
mov
loopne
jo
flds
sbb
inc
repz
add
pop
imul
inc
jmp
push
icebp
shl
add
nop
inc
push
scas
pushf
nop
popf
cmp
pop
push
push
stos
jns
dec
or
ret
push
xor
cltd
mov
idiv
jle
inc
ja
sar
cmp
je
fbld
mov
mov
sub
pop
inc
inc
cmp
jl
and
je
mov
nop
sub
lea
push
cmp
outsb
insl
rol
mov
mov
mov
inc
adc
addr16
push
in
sub
es
push
cmpl
push
sub
add
fstpt
sub
jae
xchg
mov
pusha
enter
push
int3
test
rolb
mov
and
test
ret
pop
sub
push
push
andb
out
lcall
or
addb
test
jns
push
push
jno
testb
cmp
movsb
push
scas
dec
jo,pn
and
fstenv
hlt
adc
hlt
pushf
mov
cmp
push
into
inc
addb
jbe
jns
dec
out
jle
inc
jb
pop
jp,pn
insl
gs
xchg
cmpsl
imul
popa
push
xchg
loope
push
lods
dec
lods
push
scas
imul
outsb
mov
mov
mov
mov
and
xchg
mov
mov
mov
mov
loop
mov
sbb
ss
jecxz
iret
jle
push
in
in
inc
push
shl
cmp
popa
insl
sub
popa
sarb
cmp
scas
push
idivl
pop
inc
jb
cmpsl
mov
fimuls
lea
pop
pop
nop
pop
xchg
push
sbb
xchg
xchg
push
xchg
inc
xchg
jb
popa
jns
sub
xchg
insl
push
outsb
out
sahf
out
pop
pop
xor
fdivrs
push
mov
inc
mull
mov
mov
movsl
notl
fdivrl
sahf
out
outsl
jb
jb
out
stc
jne
push
imul
outsl
into
mov
daa
out
xor
add
addb
lahf
fsubs
sbb
arpl
jnp
stc
dec
dec
pop
or
sub
cmp
dec
jge
rclb
and
xchg
add
test
push
insl
enter
pop
sub
and
or
je
adc
test
adc
and
push
add
clc
nop
fsubrl
adc
xchg
add
orb
sub
push
push
fiaddl
mov
adc
jno
push
fmuls
push
mov
mov
pop
or
and
mov
inc
xor
out
cwtl
inc
inc
add
cmp
lea
push
jge
cmc
aam
sti
bound
xor
inc
loop
dec
lea
jns
mov
mov
and
mov
adc
jo
flds
push
or
js
xor
cmp
mov
rorl
push
daa
push
pushf
lods
addr16
xchg
into
add
lret
xchg
nop
dec
int
sbb
dec
jno
dec
repz
cmp
push
aam
scas
mov
xor
mov
arpl
repz
outsb
cmp
repz
mov
es
imul
mov
aad
out
sub
dec
sbb
xor
mov
mov
xchg
push
push
cwtl
push
fcomp
sbb
sbb
inc
mov
int
push
jge
cmp
popa
pop
dec
jo
pop
lret
sbb
inc
clc
push
xchg
hlt
hlt
dec
cmc
jo
gs
jb
lahf
rcll
arpl
mulb
push
jo
sbb
loope
loop
jecxz
in
in
mov
out
test
ja
push
jmp
in
arpl
jbe
out
adc
lret
pusha
outsb
and
pop
dec
lret
fs
repnz
stos
bound
jo
pop
aam
aad
push
xlat
cmp
fsubrs
sub
mov
clc
sarl
imul
push
xchg
pop
mov
xor
ljmp
push
add
add
ret
ja
xor
mov
cmp
and
popa
jl
jp
or
jl
cmp
or
cmp
jb
pop
ret
sub
sbb
pusha
mov
pushf
jo
adc
xor
and
rcl
pop
sbb
push
xor
orl
sbb
jne
nop
dec
sub
pop
push
aam
pop
out
les
mov
or
pop
lea
shl
lea
cmp
adc
cmc
and
pop
or
cvtpi2ps
cmp
add
stc
add
sbb
or
adcb
pop
lods
incl
cld
pmaddwd
pop
jae
push
jo
les
cmpl
insb
outsl
imul
cmp
insl
popa
jne
or
js
es
mov
orb
addr16
dec
xor
bound
je
in
insb
inc
mov
push
loopne
es
or
addr16
adc
sub
or
outsb
jne
stc
or
add
cmp
mov
pop
push
das
sub
sysret
jno
push
test
mov
xor
pop
jns
xor
push
push
push
sub
adc
mov
rcrb
xchg
popa
sbb
add
pop
mov
sub
inc
xchg
stos
xchg
lahf
xchg
test
dec
push
test
pop
jbe
cmp
ja
lea
push
mov
push
or
mov
bound
stos
imul
sbb
jl
sbb
sbb
add
push
push
xor
xchg
sbb
push
pop
or
xor
or
fadd
mov
push
js
inc
pop
adc
push
bound
xor
or
and
push
cmp
push
jmp
and
mov
cmpsb
je
cmp
xchg
cmp
mov
add
or
aas
cmp
jbe
mov
shlb
push
sub
jecxz
pop
xor
ret
stc
iret
movsb
std
enter
imul
inc
jne
pop
xchg
mov
aas
adc
pop
inc
pop
in
je
clc
inc
dec
dec
xchg
or
and
adc
vaddpd
stos
mov
xor
repnz
jbe
cs
pop
sti
in
mov
roll
sbb
pop
mov
push
pop
ja
in
xor
add
jecxz
inc
jbe
xor
push
sarl
movsb
mov
dec
and
adc
dec
sbb
jb
hlt
fstps
xor
and
mov
push
xor
negb
mov
test
fcoml
xchg
mov
pop
filds
push
cld
int3
xor
mov
mov
add
cmp
xchg
fidivs
clc
pop
hlt
add
mov
xlat
cmp
push
jno
add
fsts
in
mov
loope
mov
sbb
das
inc
fildl
or
aaa
push
lahf
test
clc
push
inc
and
mov
jb
cmp
ja
push
xor
icebp
and
sbb
hlt
lock
cld
inc
xor
int3
xor
or
inc
cmc
fmuls
mov
clc
jl
fmuls
popa
push
fisttpll
lock
cmp
adc
lock
mov
pop
cld
push
xor
bound
insb
into
into
test
rorl
mov
lret
mov
punpckldq
pop
push
fwait
pop
hlt
div
xor
jo
push
mov
or
mov
out
and
ljmp
push
arpl
jge
and
leave
cltd
add
adc
rep
into
subb
add
add
cmp
fisttpll
outsb
mov
inc
in
lods
pop
adcb
cltd
nop
out
pop
insb
cli
add
pop
lds
sub
adc
and
pusha
fmull
imul
push
jb
gs
inc
cmp
add
in
enter
and
sbb
cwtl
cli
or
push
push
stc
dec
cmp
pop
mov
push
jo
js
pop
mov
mov
add
lea
add
ret
sub
mov
movb
sub
add
sti
push
push
movsb
arpl
mov
enter
push
sar
in
push
sub
ret
pop
ret
leave
cltd
xor
rclb
repz
xchg
ret
dec
lret
jecxz
fisubs
ret
and
pop
cmp
shrl
push
ljmp
lahf
sahf
cmp
xchg
scas
xor
adc
jmp
push
push
imul
shr
ret
push
mov
add
je
push
xor
jbe
and
icebp
pop
hlt
jge
lea
or
dec
pop
data16
mov
xchg
idivl
add
xchg
cmpsl
or
lret
cld
xchg
push
jmp
fimull
sbb
push
dec
push
rolb
and
fnstcw
dec
mov
push
aam
jg
subl
call
sub
in
pusha
mov
movsb
pushf
push
push
push
xchg
xor
imulw
inc
xor
outsl
stc
outsb
das
pop
or
push
or
js
insb
push
fwait
outsl
xor
hlt
inc
popa
rolb
cmc
push
call
insb
jmp
in
sbb
jo
in
popa
out
jns
mov
clc
gs
mov
dec
add
push
pop
jmp
xor
jo
aad
add
sbb
sub
orl
lret
xchg
test
mov
or
mov
movsl
nop
sub
xorb
inc
mov
js
aam
test
ljmp
lahf
cmp
test
iret
call
mov
lock
mov
cmp
mov
scas
mov
push
add
cmp
jne
in
adc
andl
fbstp
push
jecxz
add
int
mov
push
push
test
add
jecxz
je
into
xlat
and
imul
jp
movsb
lret
fnsave
push
pop
or
ljmp
push
jno
mov
push
or
xor
adc
mov
pop
push
rcrl
mov
pop
roll
add
hlt
in
out
jmp
jle
std
les
xchg
sbb
inc
gs
push
cmp
pop
lret
outsl
int3
outsl
int
into
push
jo
shrb
shlb
shll
jb
sbb
aam
aad
xlat
cmp
xlat
fdivs
push
mov
push
je
repz
cmp
inc
cmp
mov
jae
je
jns
out
icebp
repnz
loop
sahf
out
div
clc
stc
dec
lret
add
rcr
lea
dec
insb
xchg
cmp
sarl
std
mov
add
and
and
dec
pop
mov
xchg
js
lret
mov
sub
cmc
cmp
lret
xchg
or
ficoml
mov
add
movsb
xchg
xorl
movsb
iret
rcr
push
inc
fs
repz
popa
jo
xor
in
mov
dec
arpl
cld
adc
rcrb
rorl
cmc
mov
outsb
fimuls
imul
fsubrl
mov
jns
imul
out
sub
imul
mov
pop
mov
popa
sub
xchg
shrl
les
arpl
cmp
fwait
jne
jae
xchg
loope
je
push
lahf
outsl
mov
sbb
mov
repnz
jbe
and
mov
lods
push
and
pop
dec
daa
push
mov
out
mov
mov
std
and
jns
push
inc
enter
sbb
out
jb
sti
dec
rep
push
fs
jns
jb
arpl
fldenv
mov
push
push
sub
fdivs
and
in
outsb
cmp
add
push
mov
mov
mov
je
cmp
rclb
add
nop
ss
push
push
hlt
add
mov
nop
mov
dec
push
sahf
scas
add
outsb
push
mov
inc
mov
add
add
cmpw
jne
mov
add
cmpl
movsb
fisttpll
cmp
inc
mov
adc
cmp
push
or
or
movsb
add
adc
pop
cmp
ja
mov
popf
inc
pop
or
in
xor
insl
loopne
push
or
or
cs
inc
jmp
cmp
jb
sbb
inc
sub
addl
or
dec
sbb
inc
or
or
jmp
mov
or
add
adc
add
dec
jbe
mov
daa
pop
test
idivb
lret
cmp
loopne
add
shll
adc
pop
fdivrl
or
wrmsr
push
adc
push
fsubl
add
sub
inc
adc
dec
jmp
inc
xchg
pop
push
push
in
loop
call
inc
repz
and
scas
dec
jo
pop
addr16
icebp
rorb
mov
aam
lds
sahf
out
jo
and
push
ret
sub
sbb
in
or
jl
mov
and
outsb
testw
mov
scas
cs
addr16
mov
out
aas
test
mov
fs
mov
push
in
pop
push
movsb
push
cwtl
dec
cmp
repz
outsb
gs
arpl
repz
insb
loope
sbb
mov
movsl
dec
cmpsb
popa
stos
mov
test
and
sbb
imul
lea
into
jb
aam
push
jbe
fldcw
cltd
dec
int
push
pushf
rorb
sub
push
cwtl
gs
mov
push
jnp
cmpsl
jae
and
cmp
fldt
in
pop
gs
inc
or
insl
dec
jbe
jge
popa
cs
in
les
ret
ret
inc
insl
gs
or
int3
inc
xchg
push
add
or
jb
movsbl
cmp
je
dec
jmp
popf
popf
or
or
mov
adc
add
mov
mov
test
je
mov
inc
inc
jmp
andb
pop
seto
mov
loopne
inc
test
mov
test
add
loopne
mov
inc
mov
mov
mov
jno
push
inc
cmp
or
je
inc
ret
enter
jno
and
sub
jmp
mov
adc
popf
outsl
xchg
pop
or
cmp
dec
xchg
mov
clc
andl
sbb
or
adc
jbe
sub
mov
cmp
aam
movsb
dec
and
sub
jmp
xor
mov
inc
shlb
leave
mov
je
add
cmp
inc
jmp
push
mov
mov
inc
inc
test
jne
pop
js
push
xchg
mov
xor
push
sbbb
jnp
xchg
andb
adc
ret
loope
enter
imul
push
or
imul
je
imul
iret
call
cmp
out
add
ljmp
fmuls
jp
add
inc
push
out
push
add
call
pop
mov
mov
mov
adc
js
xor
in
dec
repnz
push
jns
sbb
jae
insl
cmc
inc
testb
jb
gs
arpl
je
cmp
sti
outsl
cld
jb
jns
inc
jb
mov
and
sub
test
push
push
jb
loope
pusha
cmc
or
and
stos
shlb
fldt
xchg
mov
fbld
mov
mov
clc
orl
or
push
sub
mov
add
adc
add
cmp
jae
dec
jb
inc
mov
push
mov
add
iret
cmp
jbe
mov
cld
sub
adc
or
lea
lea
aas
push
cwtl
cmp
jb
jmp
mov
mov
dec
movzwl
sbb
adc
inc
orl
fdivs
cmp
jb
es
imul
repz
popa
inc
cwtl
je
cmp
shll
repnz
cmc
push
inc
xor
sub
jg
seto
xor
dec
cwtl
sbb
cmp
stos
sahf
sbb
inc
push
enter
mov
ret
fsubl
xlat
jg
fmuls
rorb
push
xor
mov
inc
dec
lret
adc
inc
or
mov
fld1
into
pop
mov
push
or
pop
or
dec
xchg
xchg
mov
mov
mov
xor
shll
xchg
pushl
fldlg2
xchg
cltd
mov
call
add
or
xchg
mov
hlt
movsb
adc
outsb
pusha
popa
mov
shr
repz
enter
repz
pop
es
rolb
push
push
and
in
pop
ja
mov
fcoms
add
in
inc
decl
jne
push
jmp
stos
xorb
out
and
xchg
bnd
adc
addr16
jnp
mov
test
aam
repnz
push
ja
movsl
cmc
push
xchg
aad
add
push
cmp
aaa
push
pop
rolb
and
mov
je
je
cmpl
inc
cmpsb
shr
imul
push
cmpsl
mov
cld
pop
add
inc
push
add
clc
push
je
mov
fldt
mov
mov
or
lcall
mov
sahf
mov
inc
cmp
add
out
jl
mov
in
popf
fucomp
lock
jmp
mov
das
sbb
or
sub
ss
je
lock
imul
push
outsb
xchg
pop
lea
push
or
pusha
add
int3
mov
push
inc
adc
popa
cs
out
pusha
popa
jo
pusha
push
mov
or
mov
stc
clc
out
gs
mov
clc
mov
cmp
out
jnp
mov
mov
pushf
xchg
in
mov
loopne
sub
pushf
dec
ljmp
inc
bound
push
daa
mov
mov
jns
imul
cmp
aas
insb
mov
outsl
push
hlt
jae
cwtd
mov
sbb
arpl
pop
jae
jp
dec
sub
and
push
inc
mov
push
cmpsb
push
adc
inc
popf
and
or
push
push
pop
xchg
and
xor
or
jne
gs
dec
jmp
add
push
sbb
dec
adc
push
jp
popf
addr16
cmp
repz
mov
push
mov
push
xchg
loope
outsb
mov
mov
mov
sbb
jae
inc
mov
out
mov
inc
dec
call
icebp
pop
mov
sahf
pop
add
test
mov
cmp
cltd
cwtl
arpl
cmp
mov
mov
xchg
std
cmpsl
mov
inc
sahf
out
sahf
insb
insb
inc
popa
arpl
jl
push
mov
popa
lret
push
bound
adc
lea
inc
jl
dec
mov
jne
pop
enter
xchg
mov
pop
sarb
stos
stos
cli
pop
mov
adc
pop
push
lock
sbb
ret
andb
pushf
inc
cmp
jl
sub
scas
orl
jb
jp
dec
cmp
enter
imull
ds
sbb
dec
mov
jb
les
xchg
adc
mov
in
insl
push
roll
jb
jnp
xchg
adc
sbb
test
xor
ret
inc
inc
mov
loope
das
leave
out
jns
inc
fiadds
test
icebp
imul
arpl
aam
repz
jbe
nop
out
fcmovnu
out
loop
push
fnstsw
push
cmpsl
lea
inc
aam
dec
scas
sbb
dec
repz
xor
fldenv
sahf
inc
enter
cmp
inc
xchg
out
xor
gs
cmp
push
inc
imul
rcrl
inc
jmp
rclb
leave
sarb
push
stc
mov
mov
push
xor
in
mov
sahf
stc
and
ljmp
rep
add
dec
xchg
add
loop
out
sahf
daa
rclb
es
jp
ja
jbe
or
inc
repnz
movl
adc
stos
mov
sbb
cwtl
push
out
xchg
sub
movl
or
mov
adc
lret
jb
add
pop
fidivl
push
add
mov
mov
loopne
jae
push
sub
js
pop
mov
gs
movsb
add
push
cmp
lret
dec
push
pop
mov
pop
jmp
sub
pop
movsl
fmuls
test
flds
mov
cmp
loopne
lret
jmp
push
xchg
mov
in
pushl
add
xor
test
popa
and
stos
pop
mov
xchg
loopne
mov
push
pop
sub
push
adc
inc
into
imul
mov
jo
sbbb
sti
sub
add
jne
testb
jo
and
xor
clc
andb
adc
jge
in
adc
daa
mov
and
xor
xor
outsl
inc
push
and
mov
stc
or
aam
add
adc
hlt
dec
xor
sub
push
daa
mov
fiadds
mov
xchg
mov
dec
ja
movsb
sub
mov
ds
mov
in
sbb
pop
adc
jne
add
bound
stos
jne
xchg
stos
mov
pushf
aaa
repz
adc
repnz
xchg
and
add
and
leave
ret
jp
sbb
or
nop
push
jge
mov
lods
hlt
sub
mov
clc
jecxz
in
int3
mov
xchg
adcb
stc
push
push
insl
dec
fdivrs
and
stc
inc
mov
sbb
mov
iret
push
xor
and
inc
int
xchg
leave
mov
imul
test
add
retw
gs
dec
inc
mov
fwait
rol
push
push
and
lret
pop
pop
jo
mov
add
push
mov
jb
adc
cmpl
mov
sub
mov
fsts
mov
pop
sbb
repnz
sbb
insl
pop
mov
es
jg
inc
jg
sub
mov
mov
jb
bound
jnp
outsl
loopne
lret
leave
iret
aam
or
fimull
mov
mov
ror
jge
inc
mov
mov
clc
enter
dec
test
pop
cmpb
test
cmc
out
jne
jle
dec
imulb
add
out
and
xor
push
andb
mov
inc
addr16
sbb
loopne
cmp
dec
mov
mov
or
popf
xchg
pushf
sub
pop
imul
and
jmp
aaa
lcall
inc
out
ret
jge
jo
dec
push
std
or
sbb
or
cs
adc
sub
and
and
mov
movsl
mov
pop
push
mov
push
std
mov
xchg
sub
movsb
add
xor
jp
scas
jg
lock
sub
push
in
repz
mov
dec
add
enter
pop
call
movsl
adc
jno
xor
adc
xchg
call
outsl
mov
dec
gs
in
insb
outsl
arpl
lea
movsb
lds
xchg
dec
roll
dec
xor
adc
push
adc
and
test
or
jge
mov
inc
mov
and
hlt
je
inc
mov
inc
scas
fmul
pushf
and
fistl
in
add
hlt
mov
xor
lcall
mov
popf
jp
push
jo
ret
mull
cmp
push
mull
in
mov
aam
rcrl
sbb
sbb
sub
mov
loop
insl
add
push
int3
jmp
test
push
int
pop
int3
lock
sbb
das
cmp
cmp
mov
nop
xchg
dec
mov
dec
xchg
sub
call
jno
jno
xchg
sbb
pop
jno
jno
jle
mov
mov
sub
je
test
add
mov
pop
pop
mov
fsub
shlb
dec
stos
dec
sbb
dec
push
dec
test
push
mov
ret
or
pushf
lahf
test
pop
jnp
bound
add
sub
add
dec
ja
popf
cmpsl
pop
and
mov
fiadds
lock
jmp
cmp
movsl
out
or
clc
rol
or
jbe
cmp
xchg
ja
ja
push
and
jae
js
jl
sbb
jno
jne
xchg
loope
jne
jne
jbe
jbe
jbe
push
pop
push
inc
jbe
jne
jbe
jbe
loope
cmp
jbe
jbe
ja
jbe
jbe
sbb
xchg
data16
jbe
ja
mov
loope
ja
ja
ja
ja
idivl
sbb
ja
ja
cmp
add
xchg
dec
ret
loop
jne
jne
jo
sbb
data16
jne
jne
jne
pop
loope
jne
jne
es
leave
cmpsl
jne
cmp
adc
jne
je
out
sahf
out
loopne
ror
sahf
out
sahf
mov
jns
out
mov
fs
push
jecxz
sahf
out
inc
xor
test
xchg
jmp
jl
inc
js
js
cmp
mov
ja
ja
ja
xchg
loope
ja
js
js
add
or
repz
pop
jae
xor
dec
fistpll
popa
add
xor
inc
pop
push
inc
pop
mov
xchg
loope
ja
jae
insl
psubusw
mov
sub
inc
dec
add
insb
outsl
jae
fs
add
sbb
insb
insb
add
imul
xor
andb
outsb
add
je
nop
sub
sub
or
mov
lret
gs
cmpsb
add
popa
outsb
fs
repz
sub
outsb
je
add
gs
arpl
cltd
lret
ja
sub
adc
in
arpl
pop
pop
mov
daa
jb
mov
je
mov
loopne
add
and
pop
mov
add
xchg
out
int
out
mov
jnp
mov
outsb
mov
inc
mul
cmp
sarl
mov
and
ret
dec
out
inc
outsl
add
push
aam
aad
outsl
arpl
sub
divb
sub
imul
push
mov
dec
sbb
pop
inc
js
inc
insb
ret
in
dec
add
xor
mov
loope
pop
jno
jae
jbe
cmpsl
bound
sbb
xchg
vpacksswb
imul
or
jbe
imul
cs
cmp
xor
dec
adc
mov
xorb
pop
push
dec
bound
arpl
jl
adc
mov
pop
insb
push
add
push
fstps
adc
mov
jp
add
pop
mov
push
fldcw
sbb
jb
inc
jbe
push
in
sub
in
sbb
ret
fadds
inc
inc
dec
lock
hlt
xor
or
lods
shlb
add
fs
mov
inc
pop
rolb
jb
adc
les
out
dec
add
mov
daa
gs
out
push
adc
lds
push
or
sbb
addr16
jne
outsl
fs
mov
pop
mov
pop
enter
pop
jbe
jg
pop
les
je
sub
jae
jle
enter
push
imul
outsl
dec
inc
jns
sbb
insb
add
or
pop
mov
aam
imul
js
jmp
push
xchg
inc
outsl
and
xchg
dec
jo
cld
outsl
testb
dec
aad
ficompl
push
add
add
int3
or
pop
jbe
lret
loop
or
dec
inc
push
dec
inc
dec
add
pushl
divb
push
cmp
sub
pushf
jg
loop
insl
or
insl
addr16
jb
xchg
inc
fsubs
xchg
mov
std
add
popa
dec
xor
sbb
push
pop
push
dec
cmpsl
fcoml
orl
imul
aam
scas
add
push
add
std
sbb
jle
enter
lret
jne
pop
xchg
sub
mov
push
aam
fidivrs
test
mov
and
ret
mov
ret
ljmp
pop
out
out
out
fcmovnu
in
pop
ds
xorb
lock
fwait
xchg
aam
loope
sub
xchg
pusha
jecxz
repz
in
pop
dec
push
fwait
roll
pop
sub
add
add
pop
orb
adc
mov
jno
cld
imul
inc
das
jbe
fldl
jecxz
mov
insl
push
dec
jbe
sub
fucom
fwait
xchg
mov
popa
test
mov
ljmp
push
loopne
mov
shll
jmp
mov
dec
daa
loop
cmp
js
sub
loope
push
ds
jb
shll
andl
mov
repz
fcompl
js
inc
ljmp
repz
pop
cmp
adc
add
cmp
addr16
insl
in
jl
adc
add
std
stc
add
fwait
xchg
fs
out
fwait
push
pop
fistl
mov
pop
xor
mov
add
stc
lret
out
orl
shlb
lret
add
idiv
jnp
pop
mov
stos
xchg
mov
xchg
mov
in
pop
mov
add
push
cmpsl
vpextrw
lds
out
inc
mov
outsl
or
push
emms
testl
dec
jge
mov
push
jno
fwait
xchg
pop
xchg
jns
inc
popf
insl
add
cmp
xchg
push
bound
out
jnp
dec
sub
mov
popf
popf
cmp
mov
outsl
test
push
add
int
xchg
mov
std
mov
das
add
inc
inc
decl
xor
inc
dec
mov
pop
xor
mov
mov
cmc
or
inc
lret
leave
jnp
jge
pop
and
dec
jno
or
mov
sub
ss
lahf
xchg
mov
loop
xchg
in
sti
xor
fwait
out
xor
in
sti
xor
cmp
xor
insb
movl
int3
xor
xor
mull
xchg
cmp
fninit
ss
cmp
bound
cmp
pushl
fbld
testl
rcrl
sbb
sbb
add
push
pop
mov
pop
and
xchg
xchg
shr
in
sub
popa
bound
mov
rolb
out
scas
mov
sub
or
dec
push
movsl
bound
insb
inc
mov
jo
mov
rcl
add
jbe
imul
pop
jns
mov
imul
inc
xor
ljmp
aas
fistps
hlt
sub
dec
les
and
out
xor
and
xchg
pop
add
ds
jl
xchg
pop
je
cmp
cmp
mov
mov
mov
cmp
cli
mov
sti
std
push
jo
das
cmp
inc
enter
testb
jge
or
jge
icebp
out
cs
loopne
mov
sar
mull
jnp
repz
xchg
fstpt
popf
daa
push
je
aas
lahf
adc
pop
jno
cmpsl
mov
sbb
or
lea
pop
push
test
xchg
ds
js
lahf
mov
leave
in
jmp
sub
test
in
xchg
loope
outsb
mov
add
addb
loop
add
sbb
sar
cmp
mov
out
popf
and
dec
jb
stos
inc
je
sbb
popa
add
mov
gs
js
xor
add
jae
popa
arpl
add
lret
cmp
outsl
data16
adc
loopne
pop
rol
iret
mov
mov
into
icebp
movb
jo
enter
dec
divl
adc
jmp
inc
in
cs
xor
xor
cmp
repnz
jmp
xor
out
sbb
gs
loope
xchg
xchg
and
fisubs
outsl
jne
fs
mov
gs
adc
mov
adc
xchg
adc
xor
psubsw
adc
push
xor
je
jno
insl
dec
push
push
push
lds
dec
xor
sbb
je
inc
outsl
pop
adc
clc
lea
fs
pop
lods
nop
add
inc
add
jp
pop
subb
das
xor
xor
pusha
aaa
inc
arpl
fidivrs
cmpsb
mov
and
mov
push
dec
addr16
andb
jne
push
movsb
rcr
imul
imul
or
mov
jb
add
cltd
pop
jo
insb
imul
das
jbe
adc
jae
mov
push
pushl
mov
xor
mov
push
inc
inc
outsl
insl
jo
arpl
push
push
cli
inc
xor
inc
inc
cmp
std
les
add
imul
pushf
insl
xor
movsb
jge
push
pusha
xchg
add
add
add
add
add
add
inc
popl
pop
les
int3
push
add
int3
push
add
stos
add
sbb
xchg
mov
mov
jne
lds
sub
aam
syscall
cmp
cmp
cmp
push
repnz
push
lret
lret
xor
xchg
aad
push
push
xchg
lret
ret
push
jl
gs
loop
int
adc
lds
stc
xchg
sub
leave
adc
lahf
movsl
in
pop
aaa
sbb
xchg
inc
or
hlt
gs
add
test
and
and
add
add
jbe
shrl
xchg
adc
leave
js
push
or
or
pop
xor
repz
xor
cld
pop
movsb
sub
mov
pop
or
pushf
cmpsb
pop
cmp
out
lods
or
mov
aaa
adc
mov
scas
push
push
fwait
in
or
or
arpl
and
inc
add
in
push
jne
stos
js
fldenv
adc
adc
jecxz
lock
mov
dec
xor
xor
dec
pop
adc
pushf
push
jb
xor
movsb
sbb
xchg
outsb
sbb
and
xchg
loopne
inc
cmpsb
lret
scas
adc
mov
xor
ja
aaa
sbb
sti
cltd
aad
or
in
push
or
xor
mov
in
addr16
add
enter
movsb
xor
out
or
adc
mov
dec
push
cs
cmp
dec
inc
jne
add
jb
push
or
xchg
mov
sub
in
adc
cmp
mov
or
push
push
mov
lods
pop
push
push
cli
mov
pop
adc
fnstcw
dec
xor
ja
sbb
add
lret
insb
jno
sub
out
mov
jne
movsl
pop
jbe
push
xor
dec
push
je
arpl
mov
pop
mov
daa
out
jae
inc
inc
xor
fsubl
insb
stos
push
dec
mov
xor
cmp
fldt
pop
push
sub
sbb
xor
or
lahf
xor
mov
sti
push
mov
mov
outsb
scas
shl
adc
sub
jnp
cmp
or
push
std
jge
mov
push
mov
or
push
cmp
pop
adc
jl
in
pop
pop
sbb
sub
pushf
add
jge
cmpb
int
pop
outsb
dec
out
xchg
aas
fdivl
je
add
sub
push
adc
rcrb
aam
icebp
pop
push
aas
cmp
adc
lock
dec
add
add
int3
js
add
add
add
add
add
add
add
push
add
add
add
add
inc
add
dec
add
stc
dec
add
fimuls
add
outsb
arpl
inc
insb
insb
add
fs
insb
insb
add
add
push
add
push
add
add
add
add
add
add
add
xchg
add
add
add
mov
push
add
push
add
decl
push
add
add
add
add
jmp
push
add
add
add
add
jl
push
add
add
decl
add
mov
push
add
jmp
push
add
jb
gs
xor
cs
insb
add
add
add
dec
outsl
popa
fs
imul
add
add
inc
gs
jb
arpl
fs
jae
add
add
add
push
imul
insb
insb
outsl
arpl
add
add
jb
jne
insb
inc
jb
add
add
push
inc
push
push
cs
insb
add
add
pop
jbe
outsb
jo
imul
add
dec
inc
dec
xor
cs
insb
add
dec
xor
cs
insb
add
add
add
gs
dec
bound
arpl
push
push
inc
push
xor
cs
insb
add
add
push
outsb
push
imul
outsl
outsl
imul
add
aad
ja
jb
dec
jno
jbe
jo
mov
sub
popa
xor
pusha
fstl
add
mov
add
sbb
pusha
mov
mov
cld
lods
xor
test
je
loopne
sbb
xor
lea
movsb
mov
call
cmp
jae
push
or
xor
inc
xor
mov
lea
mov
mov
call
sub
lea
add
mov
call
pop
sub
jae
and
call
mov
call
jne
pop
cmpsb
sub
inc
mov
sub
add
fcos
cmp
sub
add
movsb
pop
inc
inc
jmp
add
jne
xchg
lods
xchg
inc
ret
add
flds
in
call
leave
call
out
jb
ret
sub
sbb
ret
add
sub
sub
adc
dec
add
add
push
jae
fiadds
les
shlb
pop
int
pop
add
xchg
add
sbb
aas
add
lea
add
mov
das
aad
or
jne
pushf
jo
push
or
or
ret
fidivs
push
fildll
pop
push
aam
cmp
add
xorb
call
adc
bound
lea
add
add
fimuls
sbb
repnz
or
lods
stos
nop
cmpl
je
add
jae
test
je
mov
add
mov
add
add
outsl
add
lea
andb
inc
nop
nop
pop
rolb
sub
push
push
call
aaa
mov
add
lgs
push
jne
cmpsb
inc
push
add
mov
mov
test
je
adc
push
inc
push
int3
or
jnp
xchg
stos
sbb
scas
jne
sbb
xchg
cmp
sub
sbb
je
push
and
pop
cmp
aas
pop
mov
add
cmp
push
lret
mov
mov
push
stos
decb
dec
push
gs
call
in
xchg
fisubrs
inc
or
dec
inc
mov
add
movb
add
jb
cltd
mov
in
add
nop
mov
sahf
adc
pop
push
call
in
nop
xchg
pushf
cltd
mov
add
ret
js
inc
or
pop
pop
pop
ret
push
mov
in
cli
adc
les
adc
lret
push
ds
and
xchg
mov
and
roll
sti
xor
add
je
push
or
cld
or
jne
xor
pop
add
jmp
add
jne
dec
cmp
leave
add
mov
out
add
pop
or
ret
je
mov
xchg
add
shrl
fmuls
fadds
fisubrl
aas
mov
sub
je
movw
add
cmpl
add
sbb
pushf
data16
xadd
shr
clc
add
lods
xchg
add
mov
add
dec
shr
mov
leave
lret
aad
sbb
add
dec
push
or
orb
pop
add
or
hlt
push
lret
nop
mov
scas
push
push
pop
push
sub
xor
xchg
xor
cmp
or
cld
fsubp
popf
push
jmp
mov
push
add
movzwl
test
pop
xchg
outsl
xor
lock
pop
adc
aam
cmp
jge
mov
inc
movzbl
add
sub
add
add
mov
jne
cmp
jne
mov
rol
xchg
popa
cs
adc
add
push
mov
add
and
inc
adc
xor
or
push
testl
std
loopne
movb
push
and
ror
ret
add
jbe
push
push
call
lahf
pop
sbb
mov
shl
cmpsb
roll
pop
ret
andl
test
dec
sub
dec
jae
imul
gs
sahf
rol
add
movsl
add
lahf
xchg
add
lock
push
ret
stos
add
stos
pop
fsub
cmp
mov
sbb
jne
frstor
push
inc
jecxz
movb
add
push
push
push
dec
xchg
adc
pop
cmp
pop
xor
lcall
inc
adc
iret
pop
add
sub
repnz
lds
scas
inc
gs
dec
cmp
dec
ret
inc
pop
call
mov
je
adc
push
daa
je
xorb
jmp
pop
mov
arpl
cli
cmp
jne
mov
mov
movl
fstps
pop
enter
arpl
mov
push
testl
movsb
mov
mov
pop
cmp
mov
cmp
je
adcb
inc
dec
ss
jge
frstor
pop
add
and
push
push
call
rolb
pop
cltd
cmpsb
in
rcrb
insl
jae
bound
mov
sbb
into
and
xor
jno
testb
xchg
out
adc
leave
data16
call
ret
popa
xchg
out
xor
inc
pop
pop
int3
add
mov
push
and
push
mov
mov
imul
dec
cmp
pop
inc
push
test
or
jmp
mov
insl
inc
inc
push
mov
enter
inc
inc
inc
mov
test
clc
mov
mov
push
pop
jbe
jmp
stos
mov
mov
cmpsb
push
jp
inc
fstp
jae
jmp
mov
cltd
xchg
sbb
add
dec
or
sub
repz
jns
mov
sbb
sub
mov
adc
jl
sbb
shr
cli
add
loope
push
lea
add
insb
sbb
sti
push
or
loopne
pop
test
sub
mov
pop
fnsave
daa
rcrl
or
stc
bound
mov
cmpsl
or
sbb
iret
aad
test
add
lea
add
mov
pop
add
insb
imul
pop
add
and
jb
jb
arpl
jne
je
add
and
gs
mov
sub
jb
jae
insb
fs
mov
je
bound
loop,pn
and
inc
dec
sub
push
pop
dec
sahf
test
fs
insb
fsubs
das
sub
push
in
jne
xor
push
jne
add
add
jae
popa
addr16
outsl
js
add
pop
fmuls
add
gs
xchg
cmpsl
jno
inc
js
je
add
stc
add
popa
outsb
fs
mov
jo
outsb
inc
gs
inc
mov
outsl
add
sti
push
imul
popf
arpl
ja
jbe
iret
jae
lcall
pop
insl
sahf
out
jmp
pop
bnd
cmp
jp
mov
adc
loopne
mov
mov
cld
lods
xor
test
je
xor
lea
movsb
mov
call
jae
cmp
jae
push
push
push
xor
inc
xor
mov
lea
mov
mov
call
jae
lea
add
mov
call
jae
pop
pop
pop
sub
jae
mov
call
jmp
mov
call
adc
dec
jne
inc
call
mov
cmp
sbb
cmp
sbb
push
mov
sub
rep
pop
inc
inc
jmp
add
jne
xchg
lods
xchg
add
inc
ret
xor
inc
call
adc
call
jb
ret
sub
mov
popa
ret
add
add
mov
add
add
or
push
add
add
add
pusha
add
add
mov
lea
mov
mov
mov
movb
add
sub
mov
xor
ret
mov
popl
add
push
push
push
push
push
push
lea
mov
push
mov
push
push
pushl
push
mov
add
mov
call
pop
mov
push
push
mov
mov
add
mov
mov
mov
add
mov
mov
add
mov
add
lea
push
push
push
call
pop
pop
add
mov
push
mov
mov
add
sub
mov
mov
mov
call
mov
mov
mov
pop
jmp
add
push
push
push
call
mov
pop
pop
pop
pop
pop
pop
jmp
