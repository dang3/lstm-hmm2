out
call
in
sub
andb
push
push
push
push
xor
pop
lea
fcomi
stos
push
ljmp
pop
xor
jmp
mov
pop
ja
test
add
loop
mov
dec
gs
in
in
dec
mov
xor
cs
jbe
dec
mov
insb
jmp
mov
push
call
pop
mov
jg
mov
push
push
push
push
push
mov
push
push
call
mov
and
adc
clc
lea
push
add
in
and
call
jbe
adc
adc
pop
movsl
loope
fists
pop
pop
pop
leave
ret
add
andb
sub
add
jae
popa
xchg
lret
insl
mov
idiv
imul
sti
insb
das
fldcw
cld
insb
dec
sub
lock
fcoml
mov
inc
frstor
je
dec
xlat
insb
fwait
in
outsl
loope
jne
jecxz
sbb
inc
dec
out
psubsb
dec
bound
jmp
paddsb
inc
pop
out
js
in
int
out
inc
and
mov
mov
imul
out
mov
fwait
sbb
jnp
adc
add
mov
push
push
adc
repz
xchg
call
add
add
int3
pop
imul
jb
lea
xor
adc
incb
cs
fsubrs
or
cmp
je
mov
push
pop
mov
pop
je
adc
jp
neg
lret
dec
add
cmp
nop
outsl
inc
fwait
std
push
pop
jmp
push
or
cltd
cli
mov
sti
mov
notb
push
xor
lds
and
push
fadd
add
es
mov
inc
addr16
outsl
int
std
push
movsb
pop
adc
jne
pushl
mov
adc
or
add
pop
jns
mov
pop
inc
push
inc
scas
jmp
push
mov
inc
daa
sbb
cld
lea
adc
cmp
mov
insb
dec
aaa
push
repnz
or
mov
call
cmp
in
push
mov
push
jl
or
add
lock
add
clc
fnstenv
mov
pop
sbb
inc
adc
xor
movsb
push
mov
test
je
push
adc
or
and
mov
dec
clc
cmp
sbb
push
push
xchg
gs
add
push
mov
je
lea
or
scas
jl
or
pop
out
inc
ret
jle
es
xor
inc
dec
rclb
or
xchg
mov
mov
mov
lods
jo
push
push
scas
cmp
pop
or
sahf
inc
adcl
mov
insb
lea
mov
dec
call
adcl
xor
adc
push
xlat
inc
xor
inc
mov
or
jno
out
out
xor
mov
add
pop
dec
mov
and
mov
push
repz
adc
into
push
sub
out
icebp
pop
loop
sub
xor
or
ffree
inc
jbe
inc
mov
or
adc
xor
je
jb
dec
sbb
decl
cmc
iret
orb
push
mov
loope
mov
rcrb
cwtl
sub
jno
mov
pushl
adc
test
je
mov
mov
ror
mov
inc
inc
dec
dec
enter
test
jne
push
pop
jmp
lds
rolb
cmp
push
jno
insl
and
cmp
xor
sti
incl
mov
sub
cld
aad
cmp
scas
icebp
inc
and
ljmp
and
cmp
add
daa
push
mov
push
adc
pcmpgtd
adc
subl
out
leave
jp
cmp
lock
sub
inc
mov
outsb
pop
sub
and
or
iret
jne
push
daa
cwtl
pop
adc
push
inc
mov
nop
repnz
pop
jo
add
add
xor
arpl
stc
mov
mov
sub
ds
rolb
mov
clc
loope
xchg
jnp
fbstp
repz
mov
pop
add
xor
cmp
push
ret
push
cmp
push
sahf
mov
sti
push
shl
les
or
sub
dec
lock
dec
aad
xlat
push
xor
fstps
xor
xlat
dec
test
adc
or
pop
sbb
pop
pop
lcall
and
cmpb
inc
add
adc
ds
sub
dec
push
dec
cmpsb
dec
lret
inc
push
sub
lea
mov
push
xor
js
sub
mov
inc
sub
sub
andb
xor
call
add
push
jne
mov
mov
mov
inc
inc
test
jne
lret
neg
negb
rorb
js
dec
cmp
insl
mull
je
or
jle
shl
ficompl
shl
shlb
ret
add
adc
lods
adc
iret
mov
mov
push
std
imul
xor
jb
pushl
add
xor
xor
pop
add
add
sub
popw
or
pop
mov
push
jne
insb
inc
or
jmp
lock
add
stos
jae
test
mov
test
test
push
data16
jns
cmpsb
pop
dec
push
add
fldl
adc
adc
or
and
jo
data16
enter
dec
repz
adc
xor
das
mov
int
add
dec
push
mov
cmp
cld
pop
mov
sub
sar
pop
int3
inc
enter
and
sti
daa
pushf
mov
fstps
int
pop
iret
je
jb
clc
rcl
push
rolb
daa
addr16
aam
inc
inc
cmp
or
pop
paddsb
mov
push
mov
push
sbb
inc
shrb
jne
loope
in
ret
mov
subb
and
push
or
adc
mov
sbb
pop
lcall
je
jae
es
cli
pop
sti
std
adc
pop
jg
cmp
xchg
out
or
sbb
xchg
sbbl
mov
xlat
xor
sub
adc
ret
dec
push
data16
mov
sti
lods
add
xchg
lret
sbb
fldt
int
and
ljmp
push
imul
in
mov
push
xor
mov
push
jl
sti
or
cmpsl
addr16
jl
jle
or
cmp
push
jp
xchg
dec
mov
adc
push
daa
inc
test
aam
dec
pop
push
jmp
sbb
jb
movsb
imul
pop
pop
lock
add
cmc
shll
cmp
test
or
test
mov
xor
jecxz
sub
rcrb
xor
inc
outsl
cwtl
in
dec
jbe
sub
addl
cmp
mov
js
adc
dec
and
fwait
sti
int3
jmp
cmp
int3
add
or
inc
push
and
sub
adc
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
inc
fldcw
add
iret
xor
ds
add
xor
sub
dec
shll
push
fs
shll
loopne
imul
cmpsb
imul
insb
sbbb
daa
mov
xor
mov
xor
out
int3
mov
mov
mov
add
sbb
outsl
arpl
std
lahf
movl
addr16
cmp
xor
or
je
idiv
pop
gs
gs
outsb
je
cs
bound
push
jb
jbe
sbb
gs
jae
jae
and
xor
dec
inc
inc
idiv
out
adc
pushw
gs
outsl
imul
fs
insl
pop
rolb
adc
punpckhbw
in
int
jp
gs
and
imul
pop
jo
insl
fs
cmpsl
cmp
or
imul
xor
cmp
call
mov
add
adc
stos
nop
add
dec
inc
dec
dec
pop
jl
insb
push
push
gs
push
push
dec
inc
dec
adc
add
mov
inc
mov
add
inc
xchg
or
add
push
add
add
nop
inc
add
pushl
add
enter
add
js
jg
pop
mov
int
mov
imul
insl
and
outsb
outsb
outsl
je
bound
jb
outsb
and
inc
dec
push
in
aas
fdivr
and
fs
in
cmp
and
aas
test
shlb
and
and
mov
movsb
inc
and
mov
pop
dec
movsb
pop
and
mov
repnz
mov
inc
dec
add
ja
in
mov
adc
lds
or
push
or
add
fwait
mov
mov
add
mov
or
and
fcomps
pop
push
test
cmp
pop
enter
sbb
stc
adcl
les
xor
sti
adc
bound
pop
xor
xlat
andb
add
sbb
in
pushf
dec
clc
leave
sbb
loopne
inc
push
push
pop
outsl
sub
shlb
add
dec
shll
xor
mov
pop
pusha
jb
insb
outsl
arpl
sti
push
and
test
xchg
jge
add
repz
and
movw
dec
shll
es
cli
shll
imul
add
push
bound
jl
shll
add
test
shll
decb
lcall
push
bound
mov
stos
pop
mov
hlt
or
add
and
inc
dec
pop
jb
imul
jae
cmpsb
loop
or
aas
add
mov
pusha
outsb
jp
mov
xor
add
roll
insl
lcall
out
enter
pop
mov
sbb
pop
ror
aam
xor
shl
in
sbb
adc
cwtl
add
ja
lcall
add
dec
shll
sub
cmp
fdivs
jb
enter
sub
movb
add
scas
imul
in
into
mov
scas
cmpsb
repz
jmp
jmp
in
pop
jne
push
add
shll
pop
dec
cs
or
enter
jecxz
cli
fistl
dec
sbb
je
aad
lods
insl
mov
dec
or
push
gs
fidivs
daa
dec
je
jo
jne
jns
outsw
inc
ret
lret
aaa
dec
jo
push
jb
adc
cld
xchg
inc
xchg
dec
dec
dec
dec
inc
push
and
jl
and
data16
fildl
mov
inc
push
push
inc
push
inc
pop
dec
adc
outsl
imull
sti
data16
push
imul
jb
mov
pop
jae
outsl
outsb
sbb
imul
push
inc
pop
ss
or
inc
add
pop
push
or
lahf
xchg
xor
mov
add
aaa
sbb
pusha
add
add
inc
add
test
push
pop
pop
add
sbb
or
add
or
xchg
add
fistps
or
sbb
and
nop
jno
sub
add
and
cmp
pop
ss
add
ret
xchg
aas
mov
xor
or
shll
fsubs
incl
xchg
or
ljmp
cmp
adc
cltd
inc
xchg
ss
inc
xchg
pop
push
mov
inc
fisttpl
decl
fsts
pop
and
int
das
xor
mov
pusha
adc
ud2
push
add
mov
add
ja
jae
push
packsswb
je
mov
xchg
jb
punpcklwd
cmp
js
push
sub
add
lcall
sarb
push
inc
jb
push
and
ja
or
push
mov
jg
das
jae
pop
and
addr16
xor
iret
rorw
dec
loopne
jb
inc
test
inc
outsl
insl
insl
scas
mov
pop
cmp
xor
iret
push
mov
cmp
arpl
data16
add
mov
adc
sbb
stc
roll
xor
push
push
adc
inc
iret
mov
dec
push
pop
dec
push
push
roll
sbb
pop
jno
out
fldt
xor
outsl
je
mov
push
jns
jae
je
aaa
ror
in
addr16
add
sub
in
jae
inc
inc
or
sub
movsb
gs
dec
packuswb
dec
aad
outsb
imul
insb
stos
dec
imul
ja
in
jno
jae
jbe
pop
sarb
in
clc
ret
psubq
mov
xlat
movsl
mov
or
inc
mov
push
test
outsb
dec
and
lea
shll
mov
xor
test
push
or
push
ja
cld
push
add
push
dec
cmp
mov
das
dec
mov
inc
cld
int
fists
mov
add
or
push
push
lea
mov
push
xor
push
mov
add
incl
imul
add
aas
sarb
adc
sbb
rorb
int
or
push
shrl
add
and
ret
or
sbb
and
cmpsl
xor
clc
inc
pop
pushl
xor
decl
inc
shrl
std
outsl
push
xorl
call
rorl
pop
fdivrp
push
mov
jecxz
dec
pop
pushf
push
out
pop
inc
add
or
pusha
mov
pushf
push
dec
sub
out
out
jmp
sbb
push
pushf
pusha
pushf
sub
push
dec
sub
mov
mov
jmp
cmp
sub
jmp
fxtract
xor
inc
inc
inc
push
dec
inc
popa
push
ljmp
rorl
rcr
xor
push
jbe
add
testl
imul
rolb
outsl
jne
pop
push
mov
and
push
arpl
into
mov
stos
pop
inc
add
cmp
aas
xchg
xor
sub
lahf
xor
add
cmp
dec
mov
cmp
cmp
xor
xor
jle
aas
xor
xor
aaa
xor
xor
mov
stos
xor
add
fs
lods
repz
xor
or
test
leave
add
pop
inc
fs
mov
xor
das
aas
dec
mov
shl
dec
inc
fwait
sub
sub
mov
push
popa
dec
cs
mov
arpl
in
xchg
lret
cmpsb
sahf
stos
sahf
mov
jg
mov
mov
pop
sbb
pushf
fstpl
push
add
out
push
mov
push
cs
scas
fsubs
mov
mov
adc
std
mov
call
inc
loopne
push
mov
push
mov
in
mov
mov
call
lea
adc
dec
data16
push
push
adc
in
push
push
call
jecxz
in
in
add
mov
ljmp
scas
outsl
mov
or
or
movb
sti
push
push
aaa
fildl
xor
pushl
inc
pop
jnp
lods
jne
dec
sbb
in
or
mov
fnstenv
push
lock
add
push
mov
cwtl
push
call
or
add
or
mov
mov
test
push
call
fbstp
mov
movzbl
sarl
adc
adc
fisttpl
mov
andb
mov
or
push
aas
test
mov
aaa
inc
pop
cmp
pop
jl
push
aaa
pop
pop
mov
nop
xor
add
or
and
adc
dec
mov
mov
add
or
dec
mov
add
inc
adc
adc
das
in
mov
add
or
dec
ds
adc
add
pop
imul
mov
rol
xor
and
and
sub
and
ds
jl
mov
add
fwait
jns
add
cmpl
pushl
repnz
add
add
jmp
push
or
data16
jle
push
inc
add
pop
addb
mov
ret
and
push
xor
mov
imul
movl
mov
jge
dec
pop
jne
dec
cmp
lret
adc
jl
pop
jne
mov
push
stc
xchg
inc
mov
inc
add
sbb
sub
sub
mov
int
enter
push
pop
mov
inc
jne
or
incl
cmp
je
mov
cmp
je
mov
mov
je
adc
pop
cmp
ja
jge
add
ffreep
fimuls
in
xor
mov
adc
adc
mov
mov
ljmp
jb
sub
sub
add
pop
test
add
dec
sbb
inc
mov
stos
or
pushl
cld
jmp
aas
push
inc
xor
or
adc
rorb
outsl
add
mov
scas
les
fadds
add
jge
push
push
mov
mov
sbb
sub
insl
push
push
push
and
aas
insb
sarl
pop
mov
dec
roll
mov
jo
loop
sbb
call
push
or
shll
pop
sahf
pusha
sub
xchg
xchg
cmp
out
or
movsw
mov
movsb
sbb
into
fdivrs
insb
sbb
push
jle
mov
lock
movsl
lods
je
cmp
imul
les
mov
orl
mov
push
mull
arpl
mov
mov
xor
add
cmp
sarl
push
mov
call
ret
xor
xor
inc
cmp
or
jl
push
mov
push
push
sub
cmp
mov
movsl
ja
inc
arpl
or
fdivrs
adc
adc
call
jbe
aaa
pop
pop
pop
test
adc
popf
sbb
push
sub
xor
mov
pop
jb
pop
pop
pop
jb
xchg
pop
mov
jae
addl
adc
add
inc
push
adc
add
xchg
jl
xorb
adc
adc
add
or
mov
je
and
in
repnz
jo
and
sub
and
mov
and
push
ficoml
add
int3
cld
xchg
pop
popa
mov
ljmp
xchg
test
add
mov
push
enter
scas
xchg
or
fwait
pop
sbb
mov
xchg
int
jb
popf
jne
pop
jmp
adc
xlat
mov
lea
rorl
sbbb
ds
cld
icebp
std
lock
sbb
std
pushf
lock
sbb
push
cmp
xor
mov
push
push
loopne
into
mov
fisubrs
xor
mov
aam
test
je
clc
popf
sub
xor
add
ds
jns
and
push
jae
lcall
arpl
pop
mov
outsl
and
cli
push
cs
lcall
std
out
mov
enter
sbb
or
xorl
xchg
adc
ja
cli
ret
xor
aaa
in
sti
push
pop
dec
mov
mov
and
or
dec
or
clc
jle
cld
fisttps
push
cmp
jle
pop
jmp
sbb
in
ja
jle
add
sbb
cmp
outsl
cmp
je
test
das
mov
inc
cmp
movsb
mov
incl
mov
test
in
jne
cmpl
daa
incl
mov
cmp
jne
xor
shlb
inc
push
inc
clc
xor
pushl
add
popa
hlt
add
rcrl
adc
sti
jl
inc
cmp
mov
scas
fstpl
cmp
testb
test
cli
clc
sbb
mov
fldcw
movd
ja
xor
adc
ja
imul
jae
pusha
xchg
mov
cmpsb
mov
inc
add
sub
pop
xchg
pop
add
add
or
shlb
aaa
ret
add
push
scas
std
xlat
fwait
in
je
mov
push
pop
lcall
cwtl
mov
std
inc
into
fidivs
push
jmp
adc
xor
lds
fdivr
or
or
call
push
sub
pop
mov
idiv
adc
jg
sbb
jmp
addb
daa
add
jb
sbb
push
enter
xor
adc
or
mov
adc
adc
out
loopne
cmp
adc
mov
es
das
test
and
sub
or
sub
and
loopne
add
push
push
cwtl
into
frstor
fistpl
adc
jmp
fisubs
mov
stos
lea
sar
and
push
jo
fs
ja
xor
mov
cld
das
std
jbe
cmpb
and
add
jl
cmp
jb
in
sar
aas
cmp
rorb
add
andl
fldt
inc
sub
and
outsb
sti
rcll
or
imul
adc
and
sub
jno
push
add
mov
adc
movsl
push
mov
rcll
stos
loopne
fstpt
aas
cmp
jae
incl
lret
shr
add
or
xchg
inc
push
mov
dec
or
push
outsl
add
or
adc
or
repz
jg
lods
mov
mov
add
loop
or
adc
inc
jecxz
or
jne
xor
cmp
fwait
push
in
mov
int
pop
cmp
adc
xchg
negb
jno
cwtl
cmp
mov
not
and
push
xchg
clc
divb
or
add
lea
std
xchg
sbb
mov
add
push
std
in
outsl
mov
and
testl
mov
imul
ret
test
push
js
add
push
outsb
not
mov
or
fisubs
fimull
add
repnz
lea
shr
shl
push
pop
inc
mov
pop
sub
mov
and
not
cmp
add
int
psllq
mov
mov
jmp
shr
or
add
dec
daa
pop
jg
push
fildll
xchg
sbb
mov
push
lods
loop
mov
das
cli
mov
push
push
jns
fcomip
shlb
push
mov
shlb
mov
jg
sub
xchg
rcr
mov
roll
lret
fiaddl
push
js
or
mov
adc
test
xor
add
jge
inc
pop
or
pop
sti
test
xor
add
add
bnd
out
xor
add
sbb
xchg
ja
and
les
repz
fdivrs
fstpt
sbb
add
mov
ret
insb
rcr
das
pusha
adc
sbb
mov
inc
mov
iret
xlat
jle
pop
les
subb
add
addr16
cmpsb
pop
push
loop
movups
add
push
fcom
add
or
fdivrs
mov
xlat
mov
mov
nop
imul
xchg
out
nop
out
fmull
or
mov
cmp
jno
std
stos
lods
es
lods
sub
push
cld
and
fidivrs
cmp
enter
das
push
mov
cmpsb
subl
cmp
sub
sub
and
xchg
or
and
jg
out
or
popa
adc
add
or
mov
ljmp
and
aad
aam
pop
sti
mov
imul
sbb
cmp
lock
and
jg
mov
mov
inc
mov
rclb
push
mov
or
fadds
hlt
push
and
clc
data16
fisubrs
pop
pop
es
adc
mov
or
dec
jl
push
and
stos
mov
pusha
ss
lret
and
call
mov
mov
adc
divb
shl
xlat
lods
mov
sbb
adc
add
sbb
mov
and
fisttpl
out
fcoms
push
cltd
jae
mov
cmp
mov
fxch
repnz
fstpt
out
adc
pop
mov
fisubrl
mov
mov
mov
fwait
aaa
out
loope
out
sbb
loopne
ret
fistl
add
pop
aaa
or
mov
xchg
mov
inc
fimuls
fcomps
aad
adc
mov
rcl
cmp
gs
out
aaa
or
mov
adc
inc
loop
shr
fwait
insl
adc
fdivs
xor
imul
into
fwait
push
aam
mov
xor
push
and
sub
aad
flds
outsl
adc
dec
int
inc
xchg
dec
fisttps
sbb
lea
or
mov
xor
xor
test
jbe
int
pusha
sbb
test
xor
mov
call
divb
adc
push
fadd
jbe
lret
repz
insl
adc
inc
sti
xor
mov
repz
repnz
or
in
mov
push
fcomip
xor
mov
xchg
nopl
xchg
mov
push
adc
cltd
jb
das
lods
fdiv
fmuls
pusha
dec
insl
pop
mov
jno
cli
xor
rcrb
mov
or
out
or
mov
sbb
imul
jle
sub
jae
mov
into
fwait
test
add
sbb
lock
lock
hlt
out
dec
fimuls
imul
aam
xchg
jae
orl
cmpsb
adc
fidivs
test
or
sbb
das
pop
imul
push
aas
sbb
cmp
rcrb
fstps
push
lret
test
mov
repz
xor
jp
jl
pop
fnstenv
mov
jecxz
pushl
xchg
gs
lods
les
arpl
jne
cli
mov
mov
mov
add
sub
cmc
ret
push
or
in
sbb
jl
repz
push
xchg
ljmp
inc
push
or
es
mov
jns
and
fwait
xchg
push
hlt
cmp
pusha
fstps
scas
ja
mov
mov
ret
pop
pop
gs
pop
jo
lret
sbb
rcrl
repz
int3
or
push
or
dec
mov
pop
ja
jno
dec
outsb
xor
repz
out
call
unpckhps
sbb
adc
rcrl
test
sub
movsb
or
jg
call
scas
dec
jle
outsl
jecxz
jp
jb
sbb
sbb
int
dec
inc
jb
pop
fistpl
loopne
sub
jecxz
jp
ret
pusha
call
push
adc
add
pop
fdivl
mov
arpl
push
test
imul
sbb
repnz
sub
mov
ret
fisubrs
mov
movswl
in
add
repz
rclb
xor
dec
mov
pop
jge
lods
fcmovbe
pop
xlat
pop
add
pop
movsb
mov
pop
push
dec
or
or
xchg
sbbl
and
cli
push
mov
mov
jg
cld
hlt
lcall
xor
jl
push
pop
sub
push
push
push
jb
ljmp
nop
mov
insb
js
adc
xlat
adc
inc
pop
fisubrl
jle
sbb
push
lahf
inc
pop
inc
test
nop
iret
pop
pop
mov
mov
into
ljmp
add
ja
stc
pop
sbb
cmp
jne
pop
popa
add
jp
add
add
test
repnz
jne
shr
cmp
je
sbb
outsl
cmp
mov
cmp
je
movsbl
add
sub
jne
inc
cmp
jne
inc
stos
pop
mov
dec
add
sub
aad
sub
dec
mov
sbb
fcmovnu
test
inc
jl
pop
jg
shlb
or
cmp
shll
add
je
decb
loopne
test
pop
mov
andb
flds
cmp
or
mov
aas
sub
fmuls
popf
shl
aaa
jl
outsl
sti
das
fnsave
lock
leave
lret
add
stos
pop
pop
push
mov
into
ret
arpl
dec
sub
mov
mov
lea
adc
add
dec
ret
jne
or
sbb
lods
fmuls
cld
negb
clc
call
adc
int
xor
fcoml
push
cld
call
mov
pop
jbe
lea
pushl
nop
lods
imulb
dec
aad
or
dec
cmp
out
or
testb
mov
push
call
mov
inc
lea
clc
pop
adc
push
mov
pop
pop
outsb
int
jnp
int3
push
loopne
pop
int3
rolb
xorb
aam
call
shlb
mov
loopne
sub
jl
push
repz
in
out
or
call
gs
iret
out
das
lock
jo
hlt
gs
rolb
shll
into
pushf
mov
mov
fisttps
mov
addb
js
neg
pop
push
call
sbb
add
inc
mov
lods
mov
fmull
mov
lods
cltd
into
add
les
mov
jo
ss
or
pop
ficoms
aam
ds
shl
call
in
or
data16
push
ds
push
jb
mov
out
add
dec
out
push
loopne
lret
in
push
lock
icebp
inc
repnz
mov
lahf
bound
xor
icebp
xor
pop
jae
inc
xor
push
es
add
mov
sbb
xchg
sbb
insl
inc
cwtl
bound
insl
add
push
and
push
lea
in
xchg
mov
inc
decb
cmp
mov
sbb
xor
icebp
mov
pop
jns
test
add
clc
mov
sarb
ret
xchg
je
es
xor
data16
xor
mov
sub
push
pop
loope
push
adc
push
jnp
fs
jle
movhps
cwtl
pop
fcoms
mov
mov
je
push
dec
fmuls
jns
cli
adc
divb
adc
adcb
popa
pop
or
push
and
lea
mov
inc
lcall
mov
mov
pop
cmp
inc
sbb
jbe
adc
sbb
aad
out
dec
clc
add
jle
add
outsb
sub
add
push
shlb
mov
fldt
pop
call
cmp
jmp
inc
mov
insl
roll
mov
sbb
jb
das
shll
fdivrs
enter
add
or
sahf
outsb
mov
repnz
idivb
dec
int
or
push
andw
mov
pusha
popf
in
insl
add
mov
pop
jb
bound
push
push
pop
adc
repz
js
xrelease
subb
lock
add
dec
dec
pop
cmp
pop
lret
or
mov
add
cmp
das
fmull
sbb
cwtl
aam
cmp
pop
add
jl
or
push
aad
sbb
push
in
dec
rorl
cwtl
cmp
inc
adcl
mov
or
mov
pop
xchg
inc
add
fldcw
jb
pop
adc
push
add
sub
aaa
pushf
inc
jo
sahf
xchg
sti
loope
lock
cmp
call
ret
adcl
add
adc
clc
inc
push
pop
cld
call
cmp
sub
dec
sub
xor
mov
roll
pop
shrb
sar
shlb
mov
push
call
outsb
sub
add
or
pop
test
pop
js
push
cld
or
or
inc
add
mov
push
cmp
test
movsb
push
mov
xchg
int3
int
call
filds
daa
pop
clc
stos
les
jbe
pop
stos
int3
enter
into
enter
daa
inc
adc
jae
xchg
pusha
arpl
cwtl
loopne
cmp
mov
jae
data16
fdiv
push
sub
das
cmp
fsubr
cmp
rcr
mov
mov
xor
jmp
xor
insb
test
xchg
pop
pop
pusha
imul
mov
scas
jl
and
mov
fdivs
shl
shrb
push
push
nop
fldt
fwait
ljmp
mov
in
push
rolb
mov
jl
cltd
pop
cwtl
and
jl
test
mov
jl
fisubrs
daa
mov
xchg
sbb
sub
push
xor
add
push
je
dec
add
add
lcall
cmp
pop
and
xor
sub
mov
sbb
pop
jbe
lods
push
enter
or
test
lahf
lods
mov
xor
pop
jl
sahf
lods
aam
cmp
and
fsubrp
mov
or
pushf
inc
add
out
ja
mov
and
cmpl
cmpl
scas
or
push
jo
mov
in
sti
je
jo
push
push
pop
dec
fstps
jo
data16
and
into
lea
std
push
xchg
dec
hlt
in
sbb
pop
adc
pop
pop
call
push
sub
pop
mov
addb
add
mov
pop
int3
sbb
lea
jmp
pop
dec
mov
cld
xchg
adc
inc
insb
sarb
pop
dec
mov
inc
mov
and
mov
test
subb
push
fstpt
pusha
stos
or
sti
cmp
jo
push
jge
sbb
jg
lret
in
mov
leave
lods
lods
push
insl
mov
pop
cs
addr16
mov
mov
mov
xchg
lret
in
mov
mov
mov
mov
insl
xlat
sub
mov
mov
mov
fs
push
rcl
js
shlb
lcall
aad
xlat
pop
fdivs
int
fsubrs
and
fcmovu
gs
in
lcall
loop
jecxz
sub
pop
mov
in
push
out
dec
out
call
jmp
insl
jae
cmpsb
imul
mov
rol
repnz
xor
add
xor
mov
shll
leave
lret
cmp
int3
je
mov
hlt
xchg
push
xchg
xchg
mov
insl
rcrl
pushf
adc
scas
sahf
mov
mov
insb
fwait
insl
mov
movsb
inc
add
imul
cmc
negb
cmpsb
idiv
ds
hlt
cli
jns
lea
bound
mov
pop
mov
in
stos
test
push
pop
or
dec
pop
xor
add
adc
mov
add
xor
lret
inc
jno
addr16
lods
int3
jb
jb
pop
lods
add
loopne
idivb
xchg
mov
pop
xchg
fisttpl
jmp
dec
shlb
adc
xchg
xor
cmp
inc
enter
cmp
stos
sti
cli
mov
jg
lea
add
std
push
inc
shlb
jge
sti
inc
ds
push
test
push
xor
dec
out
mov
and
imul
mov
inc
push
xor
ret
insl
dec
mov
sbb
xchg
outsb
lds
inc
sub
pop
sub
aaa
sbb
fnstenv
adc
sbb
hlt
adc
ret
jmp
in
aas
mov
nop
repnz
pop
xor
rcl
or
jge
divb
pop
andb
outsb
adc
push
and
movsl
aaa
pop
daa
mov
mov
adc
jb
fadds
fistl
fadd
sbb
out
xchg
or
mulb
inc
jle
daa
lock
nop
ss
fmul
jb
push
pop
adc
sbb
cmp
dec
les
call
je
test
mov
lods
bswap
pop
xorl
leave
or
in
and
xor
adc
addr16
xchg
jp
or
fs
add
scas
add
clc
pop
fwait
xorl
data16
mov
daa
mov
lock
adc
adc
into
jl
push
pop
arpl
inc
out
and
pop
lods
pop
rorb
jne
jl
aam
add
mov
jl
dec
add
push
push
xchg
sarb
or
or
push
out
pop
sahf
cmpl
xor
fldenv
fs
jmp
lahf
adc
mov
adc
iret
push
in
loopne
hlt
les
call
inc
outsb
mov
push
pop
cmp
xchg
sbb
pusha
psrld
mov
jl
cmp
sti
mov
cmpb
add
ficomps
mov
dec
cmpb
cs
push
push
xor
out
popa
add
incl
fcomp
sub
jle
xchg
insl
iret
sbb
add
imul
and
addb
and
xlat
jmp
pop
loope
add
outsl
scas
fs
inc
xchg
inc
cld
call
jo
jle
in
andl
inc
or
call
fwait
rcr
fsubrl
loopne
filds
mov
mov
daa
icebp
pop
sbb
mov
xchg
mov
sub
out
and
lret
and
es
dec
int
dec
pop
ss
jp
imul
shll
dec
push
imul
fidivl
fildl
push
data16
fidivs
fbstp
cmpsb
imul
pusha
pop
iret
cli
sti
cld
std
insl
xlat
insb
int
mov
lcall
mov
add
xor
mov
mov
cmpsb
imul
roll
push
outsb
popa
fs
pop
mov
xorb
enter
pop
mov
pop
lret
popa
js
mov
lret
je
outsl
outsb
xor
pop
inc
jb
icebp
add
push
jb
inc
cwtl
mov
pop
popa
push
js
scas
mov
pusha
and
mov
cmpsb
push
push
cmp
movsb
test
mov
mov
pop
push
imul
pop
movsl
pop
push
hlt
add
xor
xor
fmuls
adcl
push
out
add
imull
xchg
daa
test
cmp
lcall
lret
test
call
shrl
ja
jne
bnd
fwait
cmpsb
imul
insb
je
adc
loopne
lods
cmpsl
stos
add
xchg
push
sbb
and
fistpl
xor
or
shrb
inc
loopne
jb
push
fsubrl
push
shl
sbb
inc
sub
pop
in
mov
push
add
je
andb
adc
sbb
adc
or
jae
das
cmp
call
mov
add
cmpsb
call
add
gs
in
mov
stos
test
hlt
xchg
clc
data16
sbb
push
and
cmp
and
fldl
or
lret
or
fwait
xlat
mov
repnz
int
sbb
hlt
dec
mov
enter
movsl
push
dec
lock
adc
sub
push
xor
fmuls
push
mov
es
ljmp
xor
popa
out
test
push
or
dec
sub
movsb
or
sbb
lahf
leave
adc
pop
idivb
je
dec
pushf
testb
cld
jmp
push
mov
pop
adc
enter
test
or
push
repnz
ss
xorl
mov
leave
adc
or
push
les
sarb
xchg
jo
sti
push
les
dec
inc
or
dec
pop
call
adc
push
xchg
sbb
add
test
int
jae
adc
test
push
jnp
cmc
and
pop
sub
loopne
and
call
mov
add
addr16
rcrb
call
and
rorl
mov
jbe
lahf
mov
insl
mov
inc
and
add
leave
lret
mov
dec
pop
pushf
data16
pop
mov
inc
aam
xor
scas
lahf
dec
mov
ss
and
pop
adc
lcall
push
sub
mov
ret
mov
stc
mov
dec
pop
divl
ja
cmp
or
sahf
cld
call
enter
sbb
in
or
add
orl
cld
iret
hlt
or
test
orl
add
rorl
fldl
cli
call
cmpb
out
ss
insb
outsb
ja
or
xor
fs
add
lods
lahf
and
bound
dec
mov
mulb
or
sbb
imul
je
pushf
pop
cli
push
lods
aas
sub
adc
movsl
add
shrb
pop
inc
incl
fnstenv
and
cli
adc
ret
mov
sbb
push
sbb
popa
or
jns
or
leave
mov
push
fcomi
sub
dec
or
stc
cmp
int3
jae
add
mov
jbe
and
out
ret
and
inc
popf
popa
cld
pusha
add
push
cmpsl
push
mulb
cmp
insb
shrb
ret
jne
lcall
adc
jmp
shlb
mov
lcall
bound
cmpsb
imul
cmp
jmp
test
mov
push
adc
cmpsb
incb
mov
inc
std
jb
std
add
movzbl
mov
loop
call
sti
add
push
cmp
mov
clc
stc
mov
std
lahf
push
mov
cld
push
call
js
rcl
jecxz
decb
shl
test
not
test
imul
pusha
arpl
jmp
xor
leave
mov
stos
and
js
js
sub
pushf
pop
or
add
fwait
mov
push
jmp
cmp
neg
test
jg
push
sub
stc
jl
incb
call
mov
fcomp
jne
mov
sub
or
out
pusha
fs
fstpl
lret
pusha
push
sbb
call
out
leave
pushf
call
mov
jbe
mov
add
das
xchg
sbb
fbstp
xor
push
sub
push
cmpsl
arpl
adc
pop
imull
and
pop
xchg
mov
push
data16
outsb
pusha
fstpt
jle
aam
imul
and
out
mov
insb
mov
sti
push
cmpsb
cmp
lret
mov
gs
mov
lcall
into
aad
gs
mov
pop
dec
cmp
lds
fisttpll
dec
fs
xor
mov
icebp
dec
ret
and
mov
jecxz
int3
mov
mov
lret
es
push
adc
cmp
jmp
or
js
roll
fldt
mov
inc
pop
mov
repnz
inc
jp
popf
push
push
push
pop
sti
push
insb
inc
incl
pop
loope
cmp
adc
and
rorb
jp
mov
mov
push
push
mulb
mov
or
jmp
and
loopne
loope
and
int3
xchg
sbb
and
inc
push
in
enter
cwtl
lret
push
mov
xor
push
sub
add
or
mov
clc
mov
mov
or
ljmp
por
sti
cld
and
sbb
ret
mov
push
cmp
jmp
mov
dec
lret
mov
pop
js
dec
aam
loopne
rcrb
outsl
rol
sub
inc
push
cmpsb
mov
add
push
and
fldz
outsb
mov
add
ds
or
sahf
or
inc
cmp
insb
or
jo
and
xchg
xor
lods
les
sahf
push
mov
jnp
push
push
enter
test
rcrb
push
inc
aad
jno
sahf
jecxz
cld
push
xchg
sbb
mov
cmp
jne
adc
pop
cmp
xor
sbb
cmc
inc
pop
mov
repz
sahf
mov
testb
jmp
adc
and
mov
or
push
dec
outsb
cmpl
fidivs
xchg
mov
push
aaa
push
stos
sbb
loope
out
xchg
add
or
xchg
mov
enter
hlt
into
cmpl
popf
pop
lock
imul
mov
aas
inc
add
insb
inc
clc
outsb
mov
sub
push
adc
les
loopne
or
nop
into
mov
or
daa
pop
in
fstl
inc
and
cmp
or
xchg
aaa
std
sbb
sub
mov
ret
dec
stos
lret
or
lahf
inc
add
pusha
and
rcrl
mov
mov
or
sub
movsb
mov
call
mov
adc
into
fidivrs
aam
push
addb
adcl
les
ja
or
mov
sbb
add
pop
adc
std
ja
xchg
pop
sar
lods
pop
sbb
jnp
mov
cwtl
aas
xor
cs
cmpsb
leave
mov
xchg
pop
pop
jle
adc
add
and
into
jle
out
mov
push
cld
inc
mov
mov
mov
fldcw
movmskps
clc
int
and
inc
test
loop
pop
dec
sbb
mov
mov
add
mov
cmpsl
rep
jmp
push
data16
pop
and
and
push
mov
or
xor
push
add
jge
divl
xor
push
push
lock
sbb
rcrb
jmp
clc
pop
jle
daa
push
cmp
xor
pop
lock
outsb
jnp
ds
cmpsb
or
xor
nop
mov
test
mov
rol
outsw
outsb
mov
mov
je
pop
test
xchg
fsubrl
cmp
adcb
outsl
sub
mov
or
sbb
jnp
sub
jne
adc
xor
dec
jo
aaa
cvttps2pi
cli
mov
and
call
mov
jg
dec
enter
outsl
outsb
insl
cltd
iret
out
addr16
xor
xor
mov
dec
repz
decl
cltd
dec
js
pushl
stc
xor
fs
lret
rolb
pop
xchg
or
inc
pop
or
inc
stc
jns
fildl
adc
add
cmp
lret
je
add
jmp
push
sbb
mov
aad
jne
dec
rsm
pop
pop
ret
adcb
add
call
and
shll
or
adc
fadd
xor
or
sub
sbb
faddp
mov
jno
mov
stc
mov
stc
scas
scas
sti
mov
sub
outsb
es
push
cmp
out
and
nop
push
inc
sbb
sub
fwait
sub
cmp
je
pop
dec
ror
lcall
add
enter
test
and
pop
push
push
push
dec
push
in
psubusb
fidivs
push
push
jle
push
scas
push
push
stc
mov
cmp
mov
cmp
je
xchg
pop
call
sbb
insl
adc
adc
jnp
popf
push
dec
data16
mov
push
add
add
push
add
fsubl
cmp
lods
add
lock
in
and
loope
mov
jno
cmp
dec
mov
lds
add
stos
or
mov
fcmovne
add
rcl
fcomp
mov
mov
dec
sbb
fsubl
sub
push
mov
lock
outsb
sbb
push
inc
or
cmp
mov
cmc
push
cwtl
adc
cmp
xor
scas
daa
outsb
test
int3
xor
leave
test
gs
pop
jb
dec
stos
inc
xchg
mov
test
cmp
nop
pop
adc
jo
jnp
mov
lock
jne
cltd
mov
idiv
jle
or
cmp
lods
loope
scas
and
in
xor
mov
sub
adc
inc
stc
xlat
inc
dec
lds
and
xor
mov
test
pop
negl
push
ret
movsb
mov
or
pop
shr
sub
dec
js
xchg
gs
pop
push
xor
push
int
dec
dec
cmpsb
imul
inc
push
adc
fs
insb
sbb
leave
mov
addr16
insb
sub
mov
jne
cs
subb
insb
mov
sub
cmpsb
dec
outsb
je
push
lret
scas
imul
adc
xor
test
test
fnstenv
lods
xor
je
jo
jo
xchg
push
push
gs
andb
repz
shrb
fldt
roll
aam
mov
mov
mov
nop
inc
xchg
gs
dec
xchg
xchg
xchg
xchg
xchg
inc
int
fistl
cltd
lcall
je
jo
lret
mov
jne
outsb
fs
imul
in
imul
fdivs
mov
jb
mov
or
scas
imul
arpl
inc
shrl
mov
enter
mov
or
enter
fdivs
inc
jne
adc
mov
je
pushf
and
push
adc
inc
xor
cmp
ret
adc
and
sub
jne
outsb
push
sub
push
mov
mov
pop
repz
mov
push
push
mov
pop
inc
dec
pusha
push
xor
xchg
das
in
pop
outsl
loopne
or
je
push
adc
es
notl
push
mov
sub
shlb
imul
sub
sahf
xchg
imul
push
pop
shlb
or
sub
lock
test
jne
ret
or
xor
popa
or
add
mov
rcrb
cmp
mov
cmp
cmp
push
clc
ljmp
lock
stos
ja
cmp
out
in
cmp
lret
lsl
sub
aad
push
and
or
bound
inc
jne
cmp
push
jbe
mov
cli
cmp
or
sbb
inc
cmp
jb
je
sarl
xchg
insl
cmp
jns
jae
xlat
lds
add
call
pop
adc
lods
inc
cmp
add
aam
inc
or
sahf
leave
lret
xor
jns
iret
push
dec
mov
shlb
fiaddl
dec
xor
or
je
shll
icebp
clc
jle
xorl
leave
and
mov
jmp
call
ljmp
push
aad
data16
push
push
or
fsubl
daa
sbb
mov
orl
push
mov
mov
jp
push
inc
out
call
mov
push
es
mov
test
or
repz
xor
shll
jae
add
xor
jne
and
inc
lea
cmp
das
or
cmp
push
loope
data16
nop
pcmpgtd
and
xchg
ret
fiadds
pop
jb
adc
or
jbe
cltd
std
mov
pop
mov
jp
fcomps
incl
movsb
xchg
add
add
pop
popa
fldt
mov
pop
jb
daa
fidivl
jmp
pop
xchg
cmp
repnz
sub
add
fs
jb
je
jl
add
je
mov
je
xchg
adc
or
jle
arpl
mov
pop
jg
fs
jl
loop
call
aaa
xor
repz
fadd
mov
dec
add
enter
sbbb
add
sti
jo
dec
push
in
adc
fisubrl
xchg
cmpl
arpl
gs
imul
gs
jae
insb
outsl
arpl
jne
pop
adc
cmp
or
std
push
pop
jne
scas
push
scas
ret
test
or
mov
jbe
add
ds
adc
sbb
fs
addb
mov
cwtl
sbbb
mov
pop
clc
push
pop
push
loopne
fisttpll
push
dec
enter
dec
add
xor
mov
shlb
mov
pop
mov
test
adc
mov
pop
ljmp
stos
pop
loop
daa
push
mov
hlt
int
push
sub
fsubr
and
pop
mov
push
push
mov
movb
cmp
cmpxchg
adc
dec
push
xchg
jp
aaa
adc
jb
and
add
or
test
push
rclb
fwait
sbb
and
and
cmpsb
mov
mov
outsb
cmp
xchg
bound
popa
jmp
cmpsb
imul
imul
add
aas
pop
mov
rol
ret
les
lds
insl
xlat
insb
pop
mov
enter
lret
cmpsb
imul
iret
flds
lcall
lcall
shrb
lcall
jae
imul
push
adc
call
inc
pop
mov
ret
shll
or
jb
push
outsb
xchg
mov
dec
je
add
inc
push
insb
add
jmp
or
jmp
jae
sbb
mov
movsb
std
mov
push
adc
jmp
xor
pop
loop
adc
inc
mov
in
das
test
repz
cli
popf
fdivl
sub
add
test
inc
push
push
mov
cmpsb
xor
mov
ljmp
push
sbb
stos
addr16
shll
movsb
jb
clc
stc
lock
negb
cmp
pop
pop
clc
outsl
push
scas
ja
sbb
pushf
mov
in
and
lcall
mov
push
xor
popa
xchg
xchg
dec
or
xchg
fdivl
mov
das
fcoml
sub
pusha
or
je
idivb
sub
jle
mov
push
into
sbbl
lods
pushf
push
jno
jle
jmp
js
call
jle
or
sbb
mov
push
pusha
insb
sbb
daa
call
popa
dec
adcl
mov
mov
jl,pn
icebp
jmp
inc
pop
sub
sub
mov
push
movl
jge
push
inc
orb
sub
mov
cs
pop
and
inc
loope
fwait
es
loopne
sub
aas
cmp
push
in
mov
arpl
cmpsb
imul
je
lcall
cmp
addl
in
cwtl
popf
insb
cs
push
jo
cmc
xor
push
push
cmp
pushf
mov
std
in
fisubs
cld
in
mov
dec
xchg
insb
out
cmpsb
imul
imul
sub
fimull
cmc
stos
jnp
out
mov
int3
rol
out
js
lock
in
push
push
call
pop
int3
jbe
mov
push
inc
aaa
push
push
mov
xor
jb
andb
clc
push
xor
retw
adc
imul
sub
cmpsb
pop
jecxz
out
fsubrs
int
out
call
imul
call
outsw
insl
jne
lret
adc
mov
mov
mov
fsubl
sbb
push
ja
jl
loopne
mov
lcall
movsl
aaa
test
mov
mov
push
out
xchg
cmpb
adc
cmp
shlb
add
loopne
adc
dec
es
lods
cld
std
ljmp
cmp
nop
xor
faddl
faddl
sbb
loopne
mov
xchg
pop
nop
loope
pop
xchg
pop
js
jne
push
push
push
fmuls
cltd
fnstcw
push
enter
add
pushf
sbb
pop
inc
jno
mov
mov
shlb
shlb
xorl
mov
loopne
rorb
jb
loopne
aam
inc
call
add
and
xchg
iret
addl
mov
add
push
shll
push
dec
jo
jo
cs
shll
insb
fcmove
mov
lret
inc
fs
jo
shll
dec
outsb
add
inc
outsl
add
add
dec
pop
and
movzbl
into
xor
cwtl
xchg
xchg
lcall
dec
xor
outsl
jne
mov
xor
enter
push
dec
inc
xchg
xchg
xor
ljmp
lods
sub
xchg
adc
push
shlb
je
imul
xlat
push
add
hlt
orb
xor
je
bound
fcomps
and
push
xchg
fs
cmp
call
mov
adc
cmp
mov
pop
daa
mov
xchg
test
sahf
out
cs
call
ljmp
inc
lods
xchg
inc
jns
mov
mov
ret
je
cmp
add
or
xor
jo
das
enter
insl
dec
xchg
and
sbb
call
or
scas
mov
mov
push
jns
pop
mov
test
inc
xlat
adc
testl
push
outsl
xorl
jb
dec
shll
push
xor
shll
outsl
pop
pop
mov
lret
data16
push
fs
fidivl
pop
push
xor
xor
push
shll
insl
pop
dec
shll
dec
out
dec
inc
popa
orb
arpl
add
fdivl
jo
add
mov
jns
subl
std
stc
je
or
or
jb
inc
scas
ljmp
mov
pusha
in
js
adc
dec
call
add
adc
mov
add
jl
mov
fistpl
popf
inc
enter
dec
in
lods
es
ss
push
int3
pop
mov
lods
mov
mov
adc
mov
movsb
mov
out
push
cmp
daa
mov
dec
mov
outsl
imul
or
lea
push
add
ret
mov
in
jl
dec
and
out
insb
ljmp
pop
add
add
jmp
inc
cmp
add
inc
je
cmp
inc
adc
dec
clc
inc
inc
push
or
and
push
rep
mov
adc
push
sbb
or
adc
or
mov
push
movsl
mov
fldt
pushf
sbb
mov
jge
movsb
aaa
xchg
mov
fnstcw
fmuls
lcall
push
pop
lcall
fistpll
pop
lcall
and
jae,pt
in
inc
pushf
movsl
cmp
out
call
push
popa
cmpsb
adc
cmp
and
arpl
pop
jmp
insb
dec
aam
pop
push
xor
sub
cmp
push
sub
arpl
xchg
sub
inc
sub
jae
das
or
cmp
xor
push
xor
fcoml
movsl
cmp
int3
xorb
jns
cmp
xchg
jp
push
data16
inc
push
pop
lcall
fwait
add
inc
ror
popa
mov
xor
lret
ja
leave
fxch
jbe
int
arpl
ss
leave
rcl
lcall
mov
je
sbb
sbb
xchg
and
sbb
sbb
cs
shrb
int
fs
push
sub
shrb
insl
push
imul
jb
outsb
fstp
leave
rclb
outsl
jo
jno
jns
pushf
pushf
sub
jae
pop
mov
cmpsl
jne
jbe
adc
xor
ret
sbb
mov
addr16
mov
fdivrs
and
shll
daa
daa
ret
sub
call
jmpw
or
or
or
cltd
ja
sbb
push
movsb
addr16
sbb
pop
jmp
cmp
pop
lcall
pop
mov
jmp
popa
sbb
cmp
pop
bound
fs
cmp
fnstsw
and
dec
ja
jb
pop
scas
popa
inc
mov
cs
jae
je
mov
xorb
cmp
insb
lea
cwtl
mov
push
sub
call
jb
call
pop
and
stos
jo
testl
mov
lds
aam
mov
lods
mov
in
and
push
dec
jmp
xlat
push
les
mov
insl
pop
add
or
cmp
pop
lock
aaa
fbld
enter
cwtl
add
aad
dec
lcall
or
and
stc
sahf
jmp
add
push
fs
arpl
lret
fsubrl
shlb
movsb
imul
dec
stos
jmp
jmp
pushf
pushf
pushf
in
in
out
lock
lods
sbb
ds
xchg
dec
shrb
push
addr16
je
sahf
sub
xchg
outsl
xchg
xchg
stc
pop
xchg
stc
in
xchg
and
stc
and
sub
fwait
stc
ss
negl
sti
pop
loopne
sti
xchg
clc
fsubl
jo
cwtl
sti
or
adc
mov
cmpb
sbb
push
jb
xchg
cld
daa
jns
dec
xchg
cli
xchg
cli
fdivr
aaa
push
and
lea
popf
fmul
and
add
xor
and
sub
lcall
xor
in
cmp
imul
inc
push
xor
lahf
insb
mulb
inc
mov
outsb
or
xchg
out
jo
insb
jno
jb
cmp
fstps
je
push
jbe
jb
movsl
pop
lcall
xchg
xchg
xchg
jp
jl
test
mov
pop
insl
popf
sub
movsb
imulb
pushf
pushf
dec
arpl
fxch
rorb
push
aad
fsts
push
dec
push
pop
push
dec
enter
push
pop
pop
pop
popf
sub
flds
sub
inc
rcrb
sbb
dec
push
jo
leave
leave
leave
dec
dec
dec
dec
out
adc
dec
fwait
mov
push
fdivrs
movsl
in
and
fdivr
xchg
xchg
cli
jg
fbstp
push
fmuls
and
xor
je
pop
insb
pop
jo
add
push
sbb
inc
cmp
sub
pop
adc
pop
mov
in
cmp
hlt
push
stc
repz
xchg
mov
repz
cmp
push
mov
adc
fldcw
popa
rorb
push
push
sub
jae
loop
mov
in
sbb
into
cmp
lods
push
pop
xor
stc
sbb
fs
lcall
push
dec
pop
pop
jp
imull
and
pop
rclb
add
sbb
xchg
gs
aas
gs
push
andb
imul
cmp
inc
xchg
gs
insb
gs
jb
adc
xchg
lock
dec
add
orl
adc
cld
in
loop
and
in
push
jae
xchg
gs
aas
popa
arpl
pop
xchg
outsl
outsb
cmp
pop
xchg
insb
imul
inc
or
lods
sbb
pop
jbe
mov
xor
test
xchg
dec
imul
mov
pop
nop
add
out
or
test
in
pop
jb
nop
mov
mov
dec
cs
jne
mov
icebp
rclb
fisubl
or
rorb
fcoml
cmp
xor
stc
or
mov
push
sub
xor
mov
loop
cmp
adc
int
push
jmp
les
dec
ds
dec
adc
pushf
call
int
outsl
inc
xor
push
mov
int
xchg
ds
push
incb
sub
cwtl
out
sbb
dec
aas
sti
jne
mov
out
xchg
push
mov
push
cmp
mov
mov
in
out
rcrl
mov
rcrb
xor
or
in
in
mov
clc
cvtps2pi
jge
enter
int3
mov
add
xor
mov
xchg
dec
cmpl
sbb
clc
add
add
out
mov
add
lock
mov
adcb
sahf
ret
adc
in
shll
jge
shlb
addb
push
push
cltd
repz
inc
mov
push
jb
cltd
outsl
fildl
das
es
pop
push
push
pop
fucomip
xchg
int
or
sbb
dec
sub
mov
out
push
mov
adc
mov
dec
mov
loopne
mov
scas
enter
repnz
int3
mov
lock
cwtl
adc
and
push
cmc
mov
fwait
mov
call
stos
jp
cwtl
test
add
mov
mov
je
sbb
dec
stos
sub
mov
jmp
andl
mov
push
call
mov
dec
jb
push
push
jp
outsb
xor
and
mov
test
mov
adc
inc
mov
clc
ja
mov
aas
and
das
in
push
hlt
inc
adc
scas
adc
add
push
mov
ficoml
jno
sbb
enter
inc
hlt
adc
decb
add
adc
pop
xor
std
jne
and
cmp
ret
xchg
add
nop
mov
scas
outsl
pusha
icebp
lock
jno
cmp
push
mov
mov
fimull
call
cmpsl
mov
adcl
lcall
mov
push
cmp
jmp
pop
and
sbb
cmp
mov
arpl
add
clc
sbb
flds
add
push
pushf
pop
js
mov
aam
shlb
out
pop
mov
mov
pop
hlt
push
mov
sti
std
xor
cmp
repz
and
mov
xchg
add
xchg
dec
pusha
lea
cmp
ds
sub
sub
mov
outsb
es
add
cmp
out
push
fildll
out
adc
pop
mov
mov
pushf
pushl
pushl
call
mov
popf
nop
ret
repz
mov
push
cmpsb
cmc
insb
jae
popl
or
loope
loopne
sub
add
add
notl
push
hlt
lahf
push
ret
jmp
jb
mov
xchg
lock
cwtl
aas
adc
mov
enter
mov
and
iret
sbb
call
pushf
cli
adc
hlt
adc
mov
je
xor
fnstcw
cld
fwait
in
add
mov
and
inc
push
icebp
call
cmpl
and
adc
sbb
sbb
mov
loope
and
xchg
adc
push
lea
push
insb
lea
pop
adc
rcrl
xchg
int
inc
aas
cmp
mov
or
xchg
add
clc
clc
std
adc
sub
sub
nop
adc
mov
sbbl
lds
xchg
insl
inc
or
shrb
lea
pop
or
push
icebp
jecxz
loop
push
shl
insl
aaa
pop
test
aam
movb
mov
add
int
mov
cmp
loope
vphsubwd
push
adc
push
sub
shrl
stos
stos
push
lock
add
inc
sbb
inc
pop
movsb
adc
ds
mov
and
xor
int
adc
add
adc
lret
inc
pushf
xorb
rcr
jg
sbb
mov
cmp
jl
add
jg
sbb
add
xor
aaa
jg
inc
inc
movsb
mov
in
je
fisubs
push
push
icebp
or
cmp
clc
mov
ja
add
add
scas
fbstp
shl
add
lods
adc
andb
aad
cmp
adc
lock
or
repz
mov
push
out
bound
pusha
fcmove
pop
push
add
in
pop
test
xchg
xchg
mov
xor
hlt
xchg
gs
xchg
sub
inc
popa
outsl
pop
xchg
gs
pop
push
popa
bound
pop
xchg
gs
jae
gs
gs
mov
sub
mov
mov
roll
rorb
inc
popa
sub
mov
outsl
pop
inc
arpl
lret
mov
jbe
je
aam
lret
outsb
dec
call
xor
shll
imul
rcrl
ds
jne
idivb
outsb
xchg
clc
stc
cli
inc
sti
xchg
sub
jp
gs
lret
inc
mov
bound
mov
pop
add
lret
mov
lret
push
push
bound
sub
imul
lahf
jp
xor
mov
mov
mov
dec
mov
cs
and
rolb
adc
jne
iret
pop
pop
mov
mov
outsl
aam
jo
pop
dec
cli
inc
test
xor
cwtl
push
jmp
mov
rcrl
stos
pop
adc
xchg
call
rolb
int
pop
into
mov
shl
mov
aaa
adc
mov
xor
and
lock
movsb
cmp
pop
add
popf
je
mov
pusha
movsb
or
add
std
adc
xor
push
jb
shlb
icebp
or
int
rcl
jg
std
scas
cmpw
cmp
cmp
mov
rclb
add
inc
push
lret
hlt
pop
sbb
cmp
cmp
cmp
sbb
jb
mov
add
jge
jo
add
cmpl
mov
xor
cmc
and
push
mov
mov
mov
or
fisttps
push
inc
iret
mov
and
sub
cwtl
je
adc
sbb
mov
inc
add
xchg
call
add
jmp
mov
sub
std
stos
adc
jne
mov
sub
outsb
imul
cmpl
arpl
xor
cmpl
mov
hlt
sbb
outsl
mov
shr
jle
movzwl
mov
jne
daa
add
lcall
inc
addl
test
je
cmp
jne
imul
or
xor
jmp
lar
data16
pop
mov
add
push
sub
jne
inc
adc
add
xlat
pop
mov
outsb
adc
mov
subb
cmp
jl
add
jmp
sbb
out
mov
cmp
add
xchg
lock
jno
push
pop
enter
mov
dec
je
adc
loop
lret
mov
adc
iret
jp
sbb
incl
lea
pop
mov
pushl
add
push
scas
push
xor
inc
push
cmp
sbb
inc
dec
xor
add
jle
sub
xor
mov
add
adc
dec
push
mov
call
mov
inc
aaa
pushl
lcall
xor
dec
mov
push
push
and
je
sub
inc
mov
daa
sub
lret
bswap
cmp
ljmp
aam
mov
inc
and
data16
test
push
fwait
rol
ja
inc
dec
dec
nop
or
fwait
sti
lea
testb
je
pop
inc
sub
jmp
shr
or
xchg
into
aad
inc
xor
sbb
pop
mov
cli
add
inc
stos
adc
fdivrl
enter
data16
imul
mov
push
pop
imul
or
adc
or
fisttpll
sub
push
sub
mov
inc
sbb
cmp
out
and
jae
andl
fs
mov
xorl
jo
sub
jb
sub
add
leave
js,pn
add
push
bound
mov
inc
loope
into
push
xchg
mov
or
inc
loopne
dec
test
mov
or
adc
sub
std
fimull
addl
push
sub
mov
push
sub
mov
cmc
rclb
imul
in
push
xor
or
or
test
mov
mov
insl
cmp
push
testb
xorl
xchg
cmp
icebp
ja
push
sbb
jmp
test
adc
fisttps
cltd
pop
test
push
pushl
pop
push
sbb
jl
jecxz
xor
add
lds
add
mov
mov
daa
push
in
mov
stos
in
mov
test
lahf
mov
call
or
ds
push
xchg
or
pop
movsb
add
cmp
sbb
cmpsb
pusha
mov
inc
mov
imul
popa
call
mov
iret
pop
mov
sub
jb,pt
pop
dec
push
dec
je
cmp
rolb
movsl
xchg
outsb
neg
push
mov
daa
xor
mov
mov
and
fisttpll
push
sub
ret
jle
pop
mov
and
add
mov
call
push
rcl
fmull
add
and
inc
sar
cmp
sbb
jg
mov
lods
outsb
add
mov
push
push
push
xor
and
sbbl
xchg
aad
and
sbb
icebp
out
js
push
adc
rcr
in
push
arpl
mov
push
jmp
push
mov
and
cli
and
inc
add
cmc
insb
mov
inc
pop
xor
mov
push
arpl
enter
lret
mov
lret
int3
int
adc
add
fs
pop
xor
or
cmp
and
pop
sub
lret
mov
mov
jae
into
mov
popa
gs
or
shl
push
lret
mov
pop
je
jb
jns
leave
mov
cs
loop
add
fcmove
nop
rcr
test
repnz
lea
adc
loopne
mov
mov
adc
xlat
add
clc
cmp
pop
roll
adc
aas
push
mov
mov
and
add
adc
cmp
mov
es
pop
dec
or
mov
int
or
idivb
xor
mov
call
inc
daa
mov
ss
mull
push
mov
pop
add
xchg
clc
mov
push
push
jno
pop
jg
push
dec
mov
push
xor
movsl
mov
add
mov
push
shll
gs
mov
lret
jo
outsl
jb
jb
int3
mov
cs
in
push
and
inc
xchg
popf
pop
jae
nop
daa
js
or
adc
mov
into
inc
aad
lock
add
jmp
adc
rcll
sahf
mov
cmp
cwtl
cmp
xor
and
mov
cmc
xor
js
push
aam
dec
and
mov
jge
push
pop
jecxz,pt
fwait
mov
es
jae
or
adc
push
gs
lods
inc
mov
cltd
mov
push
mov
shl
add
pop
test
and
xlat
out
pop
inc
push
inc
dec
push
xchg
inc
addb
pop
push
jne
dec
sbb
lods
cmp
dec
push
jl,pt
aam
popf
or
jl
enter
inc
fisttpll
lahf
int3
jmp
mov
out
xor
sbb
and
je
js
xor
mov
cld
clc
jl
lahf
arpl
inc
adc
or
shl
stc
sbb
or
add
enter
xchg
push
add
in
jns
xor
adc
mov
enter
sub
jl
into
mov
mov
dec
dec
cmp
rcll
leave
clc
andb
sbb
sub
ret
add
inc
and
jnp
ljmp
add
arpl
push
mov
jb
arpl
jae
fs
lcall
fwait
pop
adc
gs
outsl
outsl
insb
push
xor
popa
jo
fdivr
divb
outsl
je
xchg
push
imul
and
outsb
mov
jo
adc
popa
dec
adc
pop
inc
insb
andb
inc
fs
jle
dec
adc
outsl
dec
imul
push
add
rorl
add
mov
mov
je
gs
xchg
cmovbe
fldl
jmp
imul
push
stos
adc
dec
outsl
fs
neg
jne
adc
insl
adc
jg
imull
movsb
add
imul
pop
sti
imul
and
imul
ret
pop
mov
or
and
imul
inc
jg
inc
push
bound
mov
add
nop
gs
cmp
outsl
jb
outsb
and
push
push
mov
gs
outsl
pop
push
pop
rorl
push
sbb
test
dec
push
int
loopne
fucomi
push
push
jo
inc
push
xlat
into
addb
imul
ret
jb
cmpsl
push
mov
in
jmp
je
out
and
test
das
clc
add
add
sub
sub
sbb
push
gs
je
dec
fldcw
bound
jae
sub
and
push
adc
gs
sbbl
in
jae
fchs
push
imul
insl
adc
pop
jnp
outsl
dec
xor
ret
mov
sub
and
cmp
gs
outsl
std
jge
add
jns
sub
imul
and
sbb
or
dec
xchg
data16
pusha
js
add
add
popa
mov
fstps
push
lahf
insl
sbb
adc
jecxz
test
fcmovnb
testb
ret
add
arpl
imul
jg
push
outsb
push
cld
cmpl
test
dec
inc
fstpt
push
enter
jo
fistpl
mov
data16
push
aas
leave
add
insb
popa
xchg
push
add
jmp
push
ss
ret
addr16
fs
xchg
push
imul
inc
std
mov
pop
and
dec
jae
rcr
pushw
shll
fiadds
dec
fstl
mov
gs
sbb
outsb
mov
push
push
push
mov
push
movsb
leave
out
xor
push
dec
pop
pop
sub
adc
inc
in
movl
arpl
aad
push
sub
and
jb
insl
push
mulb
mov
jbe
repnz
or
sbb
jbe
pusha
outsl
lea
dec
mov
add
push
mov
add
lods
adc
mov
and
insl
sub
jne
pusha
adc
jne
jecxz
mov
pop
sub
imul
neg
dec
mov
and
inc
mov
bswap
inc
adc
push
outsb
mov
inc
outsb
jne
push
movsl
jmp
fsub
jne
mov
arpl
jo
pop
sub
lahf
adc
push
inc
inc
pusha
push
xor
push
inc
push
int3
fistps
pop
js
add
insl
xchg
cmp
test
movsl
lret
js
icebp
mov
jb
xchg
add
iret
push
sbb
mov
pop
addr16
shll
xlat
aaa
pop
adc
pop
xchg
xchg
int
add
dec
xchg
popa
mov
or
mov
jbe
cmp
jns
int
lods
xor
jo
sub
push
push
in
cmp
mov
out
insb
movsl
mov
fisttpl
xchg
aas
aas
xor
inc
pop
lret
into
je
xchg
loope
jae
nopl
sbb
mov
bound
jnp
in
mov
or
lds
adc
outsb
sub
or
loope
pop
jbe
sub
shll
ret
xchg
dec
add
adc
insb
ja
dec
push
push
es
push
dec
in
adc
pop
fs
dec
insl
ljmp
mov
lret
jae
nop
rclb
sbb
cltd
or
push
push
sarb
sub
xor
inc
fcoml
jbe
mov
or
cmp
mov
repz
xchg
adc
je
dec
sub
or
bts
sbb
ss
pushf
imul
mov
mov
inc
mov
push
call
adc
sahf
mov
pushf
push
xor
mov
fistl
jg
rolb
push
xor
adc
sbb
sbb
pusha
push
addr16
aaa
and
pop
subps
pusha
add
sub
insl
mov
add
bound
dec
jb
aas
add
add
daa
dec
and
push
inc
push
adc
test
or
inc
add
xor
jmp
sarl
adc
in
pop
mov
sub
sbb
sbb
jg
mov
call
and
loop
dec
or
adc
jo
mov
test
test
mov
jmp
push
outsb
aam
mov
stc
xor
ds
lock
pop
rclb
cmpl
jmp
gs
push
jmp
adc
or
add
insb
or
icebp
push
pushl
jae
xchg
loope
push
jp
cli
shl
jmp
in
pop
mov
psrlq
clc
or
ret
sbb
jmp
add
outsl
inc
std
dec
std
pop
jge
fnstcw
cld
popf
cwtl
cmp
push
bound
jmp
shlb
fisttpll
or
add
push
xorl
test
or
mov
call
mov
or
mov
jp
lahf
in
push
test
and
jns
insb
cli
pop
fstl
lcall
cmpl
pop
lods
call
inc
cli
test
push
aad
andl
bts
not
rol
pusha
cwtd
mov
cmp
mov
sub
daa
xor
jp
pushf
std
mov
pop
mov
mov
mov
mov
inc
mov
test
lods
jo
and
in
out
pushf
pop
cmp
inc
or
enter
out
rorb
push
cmc
or
add
jns
ficoms
sbb
call
cmp
inc
or
fdiv
call
adc
popf
push
push
and
sub
fsubrl
push
mov
nop
adc
or
sbb
mov
in
jns
je
ror
or
ret
jns
ret
lret
mov
push
cmp
xadd
or
pop
testl
bnd
or
sarb
push
popa
adc
sbb
test
mov
pushf
mov
test
adc
mov
mov
ljmp
xor
call
sbb
psubsb
or
push
rcr
mov
fisubs
fmuls
lret
stc
sub
sbb
ror
pop
stos
out
fildll
cli
not
not
ror
or
clc
sub
pushf
pushf
or
fcmove
ret
jg
mov
push
xchg
loop
mov
or
jecxz
call
rolb
mov
scas
sub
and
in
or
jmp
sti
outsb
xchg
adc
shr
mov
mov
jmp
loopne
roll
xor
test
jmp
fisttpll
sub
rorb
data16
ljmp
sub
inc
add
xor
stos
mov
pushf
lcall
pushf
jo
jmp
adcb
jmp
cmpsb
mov
dec
data16
push
gs
mov
or
cmp
xchg
push
sub
jmp
aam
mov
or
pushf
sbb
leave
xorl
xbegin
and
xor
cmp
xchg
xor
loopne
iret
pop
inc
jmp
ret
ret
inc
ret
mov
jns
cld
clc
and
in
or
add
js
cld
lahf
pop
mov
shl
mov
jmp
dec
xor
cmp
neg
push
dec
ror
rcl
not
ror
inc
jmp
fidivl
sar
sbb
cmp
mov
nop
and
cmp
hlt
cwtl
btr
sbb
inc
rcl
mov
cmc
cmp
js
andl
test
ret
aaa
xchg
aas
xor
daa
or
and
xchg
ss
pop
push
fsincos
mov
adc
out
cltd
jo
inc
xchg
mov
sub
mov
mov
lcall
jmp
jl
cmp
mov
xor
sub
ja
fisttpll
mov
into
repnz
into
inc
xchg
sti
int
adc
fld1
fadds
jae
sbb
ret
jno
mov
adc
mov
jg
push
test
sbb
cmc
sub
jmp
push
push
mov
int
pop
sub
push
xor
das
or
xor
mov
aas
sub
push
inc
pushf
push
in
pop
cmp
jge
stc
js
sbb
jbe
or
push
out
addr16
jmp
sbb
rolb
add
xor
mov
fwait
jbe
rcl
popa
pusha
push
in
push
jp
xor
cmp
clc
hlt
pop
cmpsb
clc
movsl
sub
loopne
cmp
stc
jmp
mov
add
enter
mov
data16
xchg
push
stos
mov
ja
jge
mov
dec
ret
or
jmp
call
mov
aam
push
push
jge
and
add
xor
shll
pop
xchg
insl
sbb
mov
shufps
sub
mov
cld
outsb
dec
sbb
rol
sub
into
cli
ret
cmc
int
fstpl
xchg
push
rol
add
mov
mov
repz
lods
mov
je
inc
and
out
aaa
pusha
outsb
and
je
popa
out
addr16
mov
mov
xchg
jmp
mov
push
xchg
js
jno
jl
orl
adc
inc
add
mov
aaa
jne
flds
dec
jno
sub
sbb
cmp
inc
jmp
cld
mov
call
or
lock
notb
js
insl
pop
add
cmpsl
fildll
pusha
nop
incl
test
sbb
jg
loop
loopne
repnz
jo
push
mov
sub
pop
inc
jmp
jmp
faddp
or
mov
push
pop
sbb
fstpt
in
cmc
push
or
push
sbb
in
call
push
add
stc
push
rorl
sbb
pop
ret
ret
das
pushl
jmp
add
sub
jg
add
sub
mov
std
fldt
sbb
shll
push
mov
and
ja
in
clc
sbb
insl
sbb
ss
pop
cmp
test
push
fistpl
xor
sbb
call
test
sbb
icebp
insl
or
les
sbb
stos
std
out
jle
pop
fwait
dec
dec
ret
cmp
push
jecxz
xor
scas
bound
out
out
cmp
mov
push
sub
shll
lea
call
cmp
mov
call
call
xor
loope
clc
stc
xchg
fs
popa
call
or
pop
lret
mov
bound
ljmp
ds
push
xchg
inc
out
mov
xlat
mov
sub
push
imul
ljmp
scas
into
pop
sub
out
pop
mov
pushf
mov
imul
push
jmp
out
dec
das
sbb
xorps
sub
mov
shrl
adc
jmp
loope
push
dec
lds
ret
add
add
add
aam
divl
xchg
xor
mov
dec
dec
psubb
mov
fsubs
pop
clc
cmpsl
imul
aaa
jb
ficoml
fildll
cmp
fbstp
mov
fstpl
inc
push
jmp
or
lcall
int
push
imul
ja
sbb
aaa
push
adc
cmpb
xor
lods
mov
mov
xchg
push
call
jl
adc
or
js
bswap
fmuls
sidtl
add
jmp
mov
leave
xchg
not
fs
lea
out
add
xor
xlat
not
mov
cmp
lods
cmp
sbb
bswap
xlat
lea
into
pop
insl
out
ret
lret
inc
xchg
or
xchg
fiadds
call
sti
cmpsb
push
push
aad
into
les
imul
fdivrp
sbb
sbb
stos
jmp
mov
loope
mov
dec
out
lds
ret
sbb
pop
aam
ret
mov
aaa
cli
cmp
leave
lret
pushf
orl
popf
js
sbb
out
cld
jbe
out
pop
adc
pop
pop
mov
and
cmc
fdivl
je
or
push
jb
lret
lods
push
dec
std
ss
out
sbb
add
cs
lret
in
loopne
call
and
xchg
jg
pop
adc
mov
sub
in
xchg
frstpm(287
fabs
in
and
mov
mov
dec
fidivrs
sbb
aaa
sti
cltd
in
inc
lock
add
mov
neg
in
cld
aas
mov
das
bound
in
repnz
jg
rcr
aaa
sti
mov
push
ja
aas
cmpsl
leave
in
gs
icebp
out
add
ljmp
mov
mov
mov
lock
fwait
in
mov
pop
xchg
aas
fwait
idivb
div
repz
or
xchg
push
aas
daa
pop
neg
fwait
in
das
idivb
fwait
sub
mov
call
aaa
sti
mov
sbb
or
mov
pop
jnp
ret
jnp
mov
pop
aas
jnp
mov
aas
dec
adc
loope
ret
jnp
lahf
adc
add
loope
fld
inc
or
dec
jle
and
in
fincstp
fidivrs
fwait
push
mov
mov
dec
xchg
aaa
aas
mov
imul
lcall
sbb
dec
pop
aas
push
or
jnp
mull
pop
xchg
imul
mov
ret
popl
xchg
jmp
jl
and
scas
mov
add
stos
lock
addr16
cmpsl
dec
imul
mov
pop
daa
adc
out
icebp
fiadds
fidivrs
mov
add
ret
arpl
xchg
scas
cmpl
adc
aas
mov
ficomps
aaa
sbbb
ret
pop
inc
mov
mov
addr16
insl
scas
dec
neg
popa
push
xor
adc
jmp
add
jmp
add
or
mov
call
mov
and
inc
aas
outsl
cmp
pop
or
lock
jl
std
lret
inc
ror
jb
cli
add
dec
insl
icebp
pusha
inc
push
jl
add
mov
push
out
cli
in
push
xchg
cli
lods
ds
cmp
iret
adc
ja
fdiv
call
stc
jmp
sbb
mov
shl
imull
cmc
adcl
push
pop
movsb
clc
adc
jle
ja
or
call
call
mov
cmc
leave
dec
add
shl
ljmp
stc
gs
call
test
and
push
sub
cld
jmp
xor
clc
cwtl
mov
into
clc
lock
pusha
sbb
fnsave
test
dec
sar
lea
jb
cmp
push
dec
cmp
addr16
out
xchg
mov
xor
setp
add
sar
dec
pop
loop
lea
mov
lock
sub
lahf
outsl
mov
adc
data16
and
insl
mov
rol
sub
pushf
pop
jmp
add
jle
pop
sbb
inc
clc
sbb
jmp
mov
test
cld
cmp
jmp
std
dec
jge
js
les
pop
out
cmpsl
stos
call
add
mov
add
xchg
inc
sbb
repnz
lea
call
mov
test
subb
test
std
dec
clc
pushf
cwtl
push
lock
ljmp
ja
orb
cmpb
cmc
fisubrl
lods
push
flds
add
loope
mov
repnz
bound
in
decl
sbb
inc
mov
mov
inc
inc
int3
out
sbb
std
push
jecxz
lds
sti
das
ss
cmp
loopne
mov
sar
jnp
sar
daa
fcoml
pop
and
mov
jmp
fadd
jecxz
sbb
clc
xchg
or
rol
add
lock
cmp
push
mov
mov
xchg
and
stc
and
je
push
or
ss
insl
xchg
pop
xchg
not
rcl
shl
pushf
cmp
jno
xchg
loopne
sub
fyl2xp1
cmp
add
ror
ret
pop
xor
sub
jle
imul
mov
or
idivb
jne
push
inc
ss
call
or
push
xchg
push
aaa
addr16
mov
push
jl
add
push
add
fldt
xor
jne
mov
ficoml
cmc
and
sub
dec
dec
movsb
mov
aaa
push
fmull
pusha
push
cmp
stc
ficompl
push
cs
cmpsb
xor
xchg
stc
stos
inc
icebp
add
das
cmp
add
jmp
pop
inc
mov
pushf
push
add
pop
pop
addr16
mov
sbb
cld
gs
fs
xchg
or
outsl
data16
outsb
add
or
cmp
notl
push
jmp
cmpsl
sahf
aas
pusha
lods
or
sub
sbb
icebp
pop
pusha
adc
pop
mov
mov
jge
int
push
call
mov
and
xchg
sbb
call
sbb
push
dec
pop
out
jo
xlat
shlb
dec
aas
jns
out
mov
orb
out
aas
mov
or
xor
jmp
pusha
mov
or
in
fsubs
cmc
ror
cmc
clc
popa
add
cmpsl
clc
xor
or
aad
adc
pop
ret
jmp
cmp
jmp
insl
mov
sub
cmp
jecxz
dec
adc
stc
push
pushw
or
jo
xchg
jne
pop
sub
test
cmp
insl
sbb
incl
xor
push
jmp
fdivl
das
and
cmp
push
mov
pop
call
add
gs
subl
mov
pop
push
mov
push
mov
jmp
mov
faddl
mov
les
adc
fcos
fwait
out
add
jbe
jmp
lods
mov
jge
dec
iret
sub
aad
aaa
sbbb
lods
sarb
dec
push
std
ret
add
mov
jecxz
sbb
call
les
call
ja
popf
imul
cld
pusha
pushf
test
inc
jmp
pop
in
jmp
adc
leave
lds
lcall
cmp
ret
inc
add
mov
fisubrs
adc
test
jge
shr
jo
test
add
call
or
in
daa
jg
stc
decl
cld
pop
stc
test
aas
mov
rcl
rorl
loop
push
pop
call
xchg
mov
jecxz
xchg
in
push
mov
adc
cmovno
test
sbbl
shrb
inc
xchg
cmp
stos
push
mov
push
cmpsl
sub
clc
xor
push
xchg
dec
aad
xchg
dec
inc
mov
jns
aaa
xor
or
in
jle
shrb
pop
das
shl
or
cmpsb
sbb
clc
adc
jl
testl
movsl
test
xor
test
push
mov
fstl
push
mov
cli
loope
mov
pusha
push
cmp
es
jecxz
lahf
cmp
push
clc
xchg
outsl
push
jb
lcall
and
xor
push
lcall
mov
int3
add
shlb
xchg
fmull
jl
cmp
bound
adc
fsubrp
cmp
pop
jmp
js
xchg
in
shrd
or
and
sbb
push
mov
mov
call
mov
aam
lods
aam
sbb
inc
adc
sti
mov
xor
stos
sbb
or
xchg
in
inc
ret
push
mov
mov
mov
sub
mov
xor
or
mov
jge
sub
push
inc
mov
and
or
and
mov
cmp
cmp
pop
mov
out
test
cmc
jl
aam
stc
test
outsl
ss
outsl
push
subb
cmp
jnp
xlat
imul
outsl
mov
mov
nop
adc
xchg
xchg
testb
aaa
loope
andl
clc
vpsubb
enter
jmp
sbb
lds
pop
fwait
sbb
clc
shld
jecxz
jmp
pop
add
adc
mov
mov
shll
es
bound
sub
sbb
mov
push
or
and
sbb
cmc
add
popf
mov
jmp
and
mov
or
or
icebp
call
ret
add
sbb
adc
clc
dec
rol
cmp
out
xchg
jmp
enter
arpl
cmpsl
sub
roll
cmpsb
cmp
xchg
push
jmp
fidivl
adc
push
mov
enter
incl
ja
xor
cmpsl
push
xchg
adc
sahf
dec
xchg
rorb
adc
adc
setl
not
cmc
or
incl
adc
sahf
cmpsb
cmp
fldt
popf
cmc
xchg
imulb
sub
dec
mov
cmp
call
addl
jae
faddp
jl
int3
or
loope
popf
xlat
add
dec
pushl
int3
dec
ret
gs
cmp
out
mov
les
cmpl
call
std
xchg
out
repnz
sub
mov
xor
stc
daa
xchg
test
dec
xchg
cli
test
push
inc
and
jbe
push
dec
xor
sbb
out
sub
push
enter
mov
mov
sbb
out
cmc
gs
push
int3
jmp
pop
movsl
push
sbb
jmp
inc
fdivs
dec
dec
out
test
jno
push
dec
jl
jbe
ficoml
xchg
fldl
out
push
scas
neg
cld
test
inc
and
mov
lea
fsubs
dec
ja
loopne
sbb
or
mov
rol
push
iret
mov
neg
mov
test
dec
add
lock
mov
dec
add
repnz
idivb
jne
rcll
ljmp
or
aad
xchg
sarl
inc
outsl
je
or
das
leave
shl
test
jge
jle
mov
xchg
rorl
pop
sub
test
inc
in
dec
cld
or
jge
and
scas
push
not
pusha
adc
daa
les
daa
mov
mov
clc
mov
pop
cmc
arpl
out
jbe
pushf
cmpsl
mov
cmp
pop
icebp
jno
fs
frstor
add
xchg
lea
push
faddl
aam
pop
adc
stc
pop
cld
loop
adc
ficoms
lahf
dec
xor
xchg
je,pt
test
leave
in
xor
adc
ljmp
push
xchg
outsl
cmp
loopne
dec
push
xor
push
clc
push
pushf
lret
xchg
cmp
and
sbb
loope
incb
ret
jg
cmp
bound
shr
sbbb
adc
jo
rcrl
ret
ja
sub
adc
jns
sub
sbb
fmuls
or
test
cmp
push
fs
push
xchg
jecxz
push
fisubs
loop
pusha
int3
push
fstl
scas
mov
cmc
inc
pop
inc
jmp
pushf
and
lea
in
pop
lret
das
sbb
mov
dec
cltd
mov
lret
lea
or
dec
dec
or
insb
dec
and
cmp
int
ljmp
push
adc
fsubrp
jae
and
inc
add
jae
dec
inc
test
jb
mov
cwtl
popf
cwtl
push
shrb
add
push
xchg
xchg
xchg
xor
mov
push
pusha
push
adc
push
xchg
mov
push
push
leave
sub
insl
rcll
adc
cmp
pop
jecxz
sub
push
out
adc
outsl
aad
insl
cmc
xchg
cld
out
in
jno
shl
inc
fs
lea
js
mov
mov
stc
cmp
mov
xchg
fsubrl
xor
push
call
aad
jne
pusha
inc
mov
lock
pusha
enter
jae
mov
pusha
or
insb
fwait
outsl
pusha
clc
lret
mov
xchg
dec
xor
xchg
xor
push
lock
iret
inc
mov
mov
ret
sbb
fidivl
aaa
xor
or
in
mov
push
lcall
loope
jmp
aaa
or
loope
fstps
sub
and
ficompl
pop
call
xor
lds
stos
mov
aas
push
dec
add
jge
and
inc
fsubr
mov
setno
push
daa
push
sub
jge
idivl
sti
test
push
cli
jns
xchg
fmuls
popa
cmc
add
cmp
pusha
mov
and
push
arpl
cs
xchg
cmp
jp
jne
pop
sbb
xlat
add
lods
push
hlt
test
cwtl
js
sub
out
pop
mov
pushf
push
sub
or
ret
xchg
loop
dec
loopne
or
icebp
mov
sahf
or
fidivl
and
inc
stos
xchg
cmp
xor
push
fucomp
jl
jle
leave
cmp
pop
scas
adc
xchg
mov
jae
pop
push
hlt
push
inc
lock
push
outsb
cmpsb
mov
jle
and
push
popa
pop
jb
xor
pop
pop
cmpl
out
mov
adcb
mov
jg
outsb
or
mov
mov
cwtl
mov
jg
dec
mov
xor
fisubrl
rcl
jo
push
cmc
shrl
fidivrl
push
lods
sbb
or
inc
jg
push
cmp
clc
lret
mov
sub
pushf
mov
jl
cltd
or
add
out
leave
cmp
push
lea
jmp
jno
mov
cmp
sbb
inc
fsubr
shl
data16
lret
sub
sbb
ffree
aas
mov
push
mov
filds
xor
ja
mov
cli
jmp
pushl
mov
outsl
add
xchg
pop
lret
insl
mov
push
sbb
call
int3
push
std
dec
pop
mov
jo
inc
in
stos
ljmp
mov
into
fcompl
mov
mov
fwait
cmp
xchg
add
out
xor
call
cmpl
dec
xor
stos
and
pop
inc
push
dec
xor
aas
icebp
adc
ret
jl
pop
push
cmp
sbb
and
je
loopne
test
js
jg
inc
push
out
sbb
call
add
push
xchg
push
push
test
pushl
and
inc
cmc
popl
shrb
and
cmp
repz
ljmp
std
xor
lahf
movsl
jnp
mov
push
lret
addr16
mov
stc
fcmovnbe
mov
and
mov
iret
inc
pushl
sahf
les
mov
jecxz
and
or
inc
pop
or
das
and
cli
and
int3
ret
jmp
rclb
jb
icebp
test
xchg
add
inc
nop
push
imul
and
jmp
sub
sbb
or
lods
push
mov
mov
xor
and
std
decl
sbb
js
adc
push
push
jl
push
das
and
sub
push
fisttpl
sbb
inc
sub
cwtl
test
sbb
cmp
lahf
pop
xor
cmpsb
mov
and
test
pusha
push
sbb
cltd
test
lock
or
loope
xlat
sbb
popl
ret
jne
jg
out
xor
pop
popf
fistps
in
inc
mov
pop
lret
mov
mov
xchg
lods
pop
cmp
cmp
mov
icebp
push
mov
jmp
ficoms
sub
loope
mov
cmp
stc
adc
std
sbb
jecxz
xor
cmp
xor
xor
mov
xchg
or
popa
add
mov
ds
in
cwtl
jp
sahf
pusha
clc
lahf
mov
faddl
test
add
inc
adc
sbb
stos
rorl
lock
in
cmpsb
sbb
cmp
xchg
inc
call
pop
xchg
js
jnp
icebp
popf
xor
sub
sub
daa
sbb
dec
xchg
mov
sbb
and
pop
cmpsl
lds
rcrb
pop
cmp
jmp
and
sahf
iret
mov
pop
lret
sahf
dec
cmp
imul
cmp
addb
pusha
mov
xchg
cmpsl
cwtl
sahf
and
sub
fsubrs
addb
aaa
sub
jmp
mov
hlt
mov
lahf
fildl
mov
pop
mov
jg
stc
jae
sub
xor
pop
jns
xor
xorl
xor
cli
mov
or
cmpsl
sbb
inc
ret
cmp
xor
mov
cmc
std
mov
decl
or
push
and
addr16
shrl
outsl
addr16
push
ror
outsl
dec
push
xchg
test
dec
inc
fisttps
cli
incl
daa
pop
mov
push
xor
popa
push
fdiv
and
ljmp
cmpl
jo
mov
test
xor
cmp
repz
jp
pop
push
xor
imul
lods
hlt
into
push
or
out
adc
push
cmp
pop
out
adc
adc
sub
ljmp
ja
sbb
aam
fdivrl
pop
dec
ss
or
decl
mov
ljmp
jnp
lahf
aad
loopne
test
imul
lock
or
jno
lea
scas
pushf
push
scas
cld
lea
mov
rcll
daa
mov
pop
add
xor
adc
sub
jno
shrl
cmp
repnz
fldl2t
mov
push
jge
xchg
dec
shlb
pusha
mov
aaa
xor
jecxz
repnz
or
mov
jg
mov
filds
push
cmc
xchg
repz
jne
dec
and
jb
jl
sar
jg
call
cmc
mov
imul
dec
inc
bound
xor
cmp
inc
cli
lock
int3
adc
hlt
scas
sub
mov
mov
xchg
leave
dec
lods
pop
fwait
adc
incl
lcall
ljmp
inc
mov
add
data16
call
push
js
enter
jg
push
mov
insl
iret
push
inc
jno
dec
or
cmc
stos
movsl
std
ja
dec
and
push
pop
lahf
jnp
stos
jb
sub
aad
popa
daa
sbb
fisubrs
sti
push
push
outsl
lea
or
pop
cmp
xlat
int
cmp
add
bound
or
mov
mov
fnstsw
mov
or
dec
xchg
xor
popf
mov
lea
cld
add
sub
push
add
rcr
mov
in
das
mov
decl
xor
lds
dec
adc
cmp
xchg
int3
mov
pushl
out
pop
cmpsb
and
inc
insl
repz
inc
push
push
repnz
test
cs
test
mov
mov
punpckhdq
test
fimuls
sbb
bound
dec
mov
mov
aam
xchg
repz
fistpll
lcall
push
movaps
or
inc
mov
add
ja
fdivs
shrl
incb
call
scas
ljmp
mov
pop
fldenv
dec
in
in
and
ss
mov
shll
std
cwtl
lcall
das
cld
incl
pushf
mov
loop
fiadds
push
sub
lods
mov
or
mov
add
mov
jle
stos
arpl
inc
inc
int3
or
inc
or
popf
dec
aad
shlb
jno
pinsrw
mov
mov
in
addr16
dec
fsubr
rcrl
sub
jmp
xor
scas
leave
inc
testl
xchg
call
out
or
cmp
aas
jnp
cmp
sub
insb
outsl
sub
jbe
sbb
push
adc
sti
rorl
or
inc
shll
lcall
dec
jbe
cmpb
fidivrl
or
nop
adc
pushl
fisubl
mov
fwait
mov
jbe
push
push
push
fwait
pop
arpl
pushl
mov
rcl
mov
cmp
xorl
lret
test
fimuls
int3
mov
xor
es
je
pop
sti
cmp
sub
xchg
push
cmp
pop
xchg
xor
and
push
xchg
cs
fs
icebp
call
call
sahf
rcll
in
sbb
cmpsl
adc
cmc
dec
ret
xchg
sub
aaa
adc
test
jmp
ja
push
cmp
push
call
fstps
xor
rorl
sub
cmp
fbld
rcl
test
arpl
movsl
mov
cli
and
mov
imul
mov
ds
popf
or
mov
sub
dec
jb
movsb
inc
sub
clc
loop
jle
out
ret
das
out
mov
fstpt
ljmp
fwait
cmp
stos
call
inc
dec
dec
jnp
and
mov
jae
js
popf
pop
adc
clc
fildll
iret
push
decl
sarl
popl
mov
fdivl
mov
fimull
lcall
sub
xchg
push
clc
adc
dec
adc
add
into
ljmp
fnop
lret
or
in
out
lods
dec
push
cld
adc
mov
add
or
xor
loopne
enter
cltd
enter
fsubr
add
shl
dec
xor
ds
rcrb
adcl
adc
fwait
pop
xchg
inc
sub
jae
mov
sti
pushf
mov
and
xchg
and
xchg
mov
and
inc
jbe
test
jmp
pushf
pop
push
aaa
mov
push
out
test
jmp
ret
call
mov
adc
mov
pusha
out
roll
jge
in
dec
inc
pop
std
cmp
out
sub
mov
out
xchg
jno
mov
je
mov
push
sti
movlps
mov
mov
pushl
pop
sar
cmp
pop
js
cwtl
jl
outsl
cmp
lcall
push
dec
aaa
lea
mov
lahf
out
mov
xchg
scas
fdivrl
cmp
and
mov
das
in
addl
mov
aaa
test
push
add
or
das
cld
ret
imul
gs
sub
adc
cmp
mov
das
icebp
pushl
ret
das
int
out
sub
stc
pop
icebp
jnp
add
mov
lcall
hlt
xchg
lods
lods
fldln2
stc
fstl
je
leave
aam
mov
mov
ljmp
jg
rcr
xchg
xor
notb
jb
and
jmp
mov
inc
mov
dec
imul
fcomi
mov
cmovp
pop
cld
mov
xchg
lock
inc
sbb
int
push
mov
stc
incb
push
mov
lcall
stos
inc
mov
popf
add
inc
movsb
call
add
test
add
call
mov
int3
outsb
sbb
sahf
xchg
bound
adc
cmp
dec
mov
faddl
and
adc
sub
mulb
sub
lock
decl
out
jnp
enter
pushf
je
mov
aad
and
imul
xchg
push
mov
jns
jecxz
cld
enter
ljmp
jg
and
xchg
scas
adc
mov
ljmp
cmc
pushl
stos
mov
and
sub
decb
ljmp
push
gs
ljmp
adc
jp
add
cmp
fists
lret
cld
hlt
je
sarl
nop
inc
call
pop
test
fldcw
xlat
sbb
dec
pop
test
mov
lret
std
sub
push
lock
pop
add
scas
jl
xor
sub
rclb
cmc
cld
xchg
insl
insb
pushf
jno
test
mov
cli
decl
jge
add
imul
sbb
pop
jns
in
jl
adc
cltd
push
and
and
push
add
pushl
imul
iret
cltd
push
mov
pop
push
pop
xchg
or
mov
adc
popa
add
mov
inc
outsl
fwait
xchg
xchg
call
xchg
aas
sbb
rolb
sub
mov
mov
fwait
jp
pop
ja
cs
push
call
mov
lods
lea
xlat
xor
xor
rcrb
sub
add
sub
cmp
cwtl
add
ljmp
fisubrs
in
test
outsb
jge
lcall
sub
std
leave
mov
pushl
cmpsl
xor
pop
lods
call
push
xchg
jg
je
cmp
push
in
int3
dec
cmpsb
add
mov
out
xor
pop
jg
jo
test
movsl
add
pop
inc
jp
fistl
clc
xchg
mov
in
xor
mov
or
xor
cmpsl
xorl
inc
insl
loope
dec
mov
ds
lock
mov
loopne
leave
xchg
ljmp
das
sbb
inc
imul
mov
lock
mov
mov
and
fcmovbe
dec
push
push
inc
leave
xor
or
fs
call
inc
int
jmp
mov
stos
push
cltd
adc
ljmp
popf
dec
insb
out
fisubs
lock
aam
jmp
leave
loopne
in
ljmp
xor
mov
and
pop
imul
jge
stc
pop
dec
daa
shll
insb
call
jmp
ss
and
mov
push
pop
mov
mov
fcoms
icebp
mov
sarl
mov
sahf
lock
mov
clc
ljmp
mov
pop
popf
mov
xchg
mov
out
jecxz
inc
addr16
mov
push
mov
mov
cltd
push
test
pop
pop
es
sbb
ljmp
lds
mov
xchg
xchg
mov
test
ja
ret
loop
adc
arpl
mov
mov
xchg
icebp
xchg
fsubrs
aad
aam
ds
or
jmp
sbb
neg
jp
das
loope
cmc
pop
mov
es
xchg
adc
jmp
cmpsl
popfw
mov
mov
sbb
call
hlt
icebp
das
pushl
dec
push
xchg
adc
mov
xor
test
loope
xor
stos
call
mov
push
fstps
call
mov
mov
jbe
mov
mov
daa
ficomps
xlat
mov
frndint
pop
repz
inc
and
xchg
inc
inc
ss
lcall
sbb
dec
arpl
mov
test
addr16
arpl
jmp
scas
pop
jb
test
shlb
and
pop
mov
pop
mov
das
add
xchg
xor
xor
cmp
sbb
call
enter
mov
dec
aam
aas
cmp
sahf
movsb
or
xchg
cli
jg
sub
sub
adcb
icebp
jae
out
mov
pushl
adc
jecxz
jmp
ja
mov
sub
or
aaa
ja
mov
jmp
sbb
sub
or
lcall
call
wrmsr
or
inc
adc
test
rclb
hlt
dec
sub
in
in
jns
mov
out
aaa
sub
mov
push
arpl
pop
or
mov
decl
mov
adc
add
and
sbb
es
lcall
sbb
sbb
loope
xchg
jl
xchg
dec
pop
stos
repnz
das
adc
idiv
rcl
movb
sar
mov
pushf
and
pop
andl
push
push
call
mov
mov
movsb
loopne
outsb
test
cmp
mov
dec
push
call
dec
nop
repnz
cwtl
mov
pushl
add
outsb
mov
outsl
stc
mov
pop
pop
fwait
or
scas
mov
movsl
daa
sub
repz
inc
jge
mov
movsb
lcall
ljmp
add
jno
in
notb
sahf
ror
ljmp
jmp
test
mov
lock
out
inc
popf
xchg
add
push
pop
into
decl
cld
call
add
inc
mov
iret
subl
inc
mov
cld
std
inc
mov
bound
in
and
cmp
test
pop
inc
or
dec
and
add
shl
pop
loope
xchg
cmpsl
push
xchg
mov
dec
sbb
pop
cmp
and
xor
repnz
mov
nop
and
dec
mov
jne
jg
ja
cld
pushw
push
test
pop
adc
xor
loop
insl
inc
and
ret
add
jle
and
hlt
mov
pusha
add
rep
cmpsl
and
insl
jae
sub
ljmp
jge
sbb
adc
in
mov
scas
sar
rclb
inc
fucomi
lret
bound
int3
cli
xchg
enter
enter
lcall
int3
in
xchg
stc
maskmovq
decl
jmp
andb
fdivs
mov
sbb
adc
xchg
daa
mov
push
adc
pop
sub
push
cmp
inc
stc
lea
xor
jecxz
lahf
jg
mov
pusha
mov
sub
push
jle
jo
shrl
fsubs
pusha
in
and
aam
mov
push
aad
pop
jg
js
pusha
push
mov
cmp
push
dec
pop
inc
jns
in
or
clc
push
adcb
mov
sbbl
in
mov
xchg
hlt
push
loope
mov
pop
and
mov
mov
jo
inc
xchg
int3
sahf
mov
imul
sub
stos
mov
xchg
pushl
clc
sbb
mov
pop
testb
dec
or
bound
filds
and
sbb
add
xchg
sar
add
movsl
lods
outsl
out
xchg
in
test
inc
sbb
incl
in
lock
outsb
clc
mov
mov
sbb
push
outsl
aam
jp
and
pop
cs
fwait
add
cmpsb
push
pop
mov
aas
sbb
push
and
jle
inc
push
mov
fnstsw
test
hlt
mov
xchg
mov
or
or
cmp
sahf
jo
jle
or
nop
inc
fcoml
aaa
jb
test
enter
pusha
push
cmp
cmp
ljmp
mov
cmc
daa
sub
and
push
ja
loope
mov
incb
add
mov
or
test
inc
jo
je
loopne
shrl
cltd
inc
mov
mov
aad
xor
sbb
cmpsl
push
inc
jmp
int
xchg
lods
in
into
inc
sbb
notb
in
std
out
subb
aaa
sbb
std
xor
xor
std
pushl
mov
xchg
cld
mov
aad
xor
sahf
test
je
push
xor
jo
mul
ret
imul
rcll
push
cmpsl
pop
in
mov
ljmp
mov
cmp
cmp
sbb
mov
ret
dec
insl
rolb
mov
inc
push
jae
call
pop
xor
push
aaa
mov
iret
scas
incb
dec
mov
fstpt
icebp
mov
pop
xor
push
je
mov
adc
push
xchg
pop
xor
xor
xchg
lahf
in
out
js
pushf
jmp
arpl
jns
lods
dec
andl
dec
inc
decl
jle
and
lea
jns
sub
or
mov
ja
out
mov
cmc
and
addb
loopne
push
jb
xor
pop
int
jg
fdivl
cmc
repnz
lock
push
cmp
mov
pop
push
mov
dec
xor
jmp
dec
jnp
ljmp
sub
scas
lock
js
incb
repz
dec
mov
stos
push
aam
sti
decl
mov
frstor
mov
mov
enter
jbe
outsb
inc
lods
flds
mov
jmp
das
ret
test
int3
dec
add
push
outsl
jo
jno
inc
ljmp
jl
mov
mov
bound
or
xor
adc
cli
cmp
inc
sub
das
lds
decl
pop
jns
arpl
cmp
pop
cli
mov
jp
cs
push
cmp
fnsave
fdiv
sbb
das
scas
nop
adc
xchg
in
pop
xor
lcall
incl
sbb
jge
lcall
pop
mov
fsts
std
fbstp
decl
pusha
stos
iret
in
movsl
icebp
push
sbb
pop
inc
shr
jle
incl
leave
icebp
adc
mov
mov
xchg
xor
in
cld
outsl
sub
ljmp
fabs
or
pop
decl
sbb
aad
aaa
pop
test
movsl
xlat
pusha
int3
push
cmpsb
nop
js
shlb
faddl
shrl
call
call
out
mov
jmp
out
and
int3
mov
movsb
push
cmpsb
cld
and
movsl
nop
xlat
xchg
lea
psadbw
loope
in
lods
shlb
in
add
dec
mov
dec
or
movsl
xor
pop
sub
rep
test
in
push
push
ss
das
hlt
lods
icebp
push
sti
add
hlt
fwait
sub
xchg
incl
jg
pop
jne
xchg
faddp
popa
xor
push
add
push
sub
shrl
cmc
incl
jge
add
xor
sbb
push
push
sbb
jae
jo
repnz
jg
fildll
mov
cwtl
dec
arpl
mov
cmc
cmpsl
aas
or
dec
std
cmp
js
test
arpl
xor
cmp
ljmp
mov
inc
pop
push
rclb
out
mov
pop
adc
js
call
lret
outsb
jecxz
loope
xor
frstor
dec
jbe
xchg
leave
popa
inc
imul
aas
movsb
jmp
ljmp
in
iret
daa
cld
imul
mov
mov
ss
cmp
or
push
ljmp
mov
call
cs
inc
out
fisttps
pop
std
std
xchg
xchg
addr16
and
adc
pushl
push
pushf
mov
pop
inc
ss
scas
lods
or
pop
mov
dec
fcmovne
aam
push
lds
aaa
clc
jg
es
test
jge
jno
outsb
das
add
aad
in
jmp
in
xchg
push
xchg
lock
leave
mov
jmp
adc
jg
loop
mov
arpl
jo
dec
or
das
imul
pop
notl
pop
daa
pusha
xchg
sub
rcrl
dec
mov
in
aam
pop
out
clc
xchg
out
test
or
pushf
jno
out
sbb
pushl
incl
in
hlt
inc
inc
xchg
ret
mov
lret
add
xchg
adc
mov
roll
mov
mov
ret
jb
test
lret
lahf
repz
lret
repnz
and
add
pop
jmp
mov
mov
xchg
dec
dec
dec
sti
and
aam
pop
ret
fucomi
fisubrl
adc
test
out
pop
and
scas
add
inc
jbe
add
movsl
mov
insb
mov
mov
in
cmp
dec
sbb
inc
adcb
imul
ret
jge
or
int
aas
or
inc
pop
imul
pop
call
in
mov
aam
push
int
jmp
shll
adc
test
or
xchg
add
in
lods
subl
cmc
push
adc
mull
rorl
scas
push
rclb
ret
xchg
mov
aas
scas
cmpsb
mull
cwtl
adc
lret
cmp
cmp
mov
popa
popf
stos
bound
movsb
stos
in
shlb
pop
loope
scas
xorl
inc
and
jo
into
out
aad
cld
push
sbb
fdivrl
lret
xor
incl
jmp
mov
ret
jne
mov
lret
into
scas
lea
arpl
xlat
pop
inc
std
pop
pop
incb
aam
or
dec
in
dec
dec
fbld
aam
pop
enter
mov
lcall
outsb
decl
ljmp
out
movsb
in
lds
adc
int3
cmp
pushl
outsb
adc
dec
cwtl
mov
xchg
push
push
and
fcmovne
into
sar
addr16
jg
sub
pop
sub
lods
lods
jge
in
mov
call
int3
in
and
lcall
ret
adc
adc
imulb
inc
xchg
xor
test
cmp
repnz
or
rorl
fprem
mov
ret
jo
je
ret
shrl
or
mov
sbb
jge
popa
fsubrs
and
cmp
fisubrs
adc
test
icebp
scas
ja
outsl
std
std
push
add
inc
xchg
jecxz
cmpsb
hlt
push
data16
xchg
mov
adc
fildl
fprem
fbstp
inc
pop
iret
sarb
arpl
cwtl
or
pop
pop
push
xchg
and
fdivrl
jle
sub
and
mov
pop
pop
lds
loop
sub
lcall
scas
add
movsb
adc
shll
fadds
iret
push
cmp
jmp
mov
mov
ret
jnp
mov
sub
inc
pop
sbb
mov
repnz
movsl
sbb
dec
xor
aam
push
roll
fisubl
mov
dec
in
xchg
rol
test
sti
xor
fidivl
gs
pop
movsl
jb
or
fcmovbe
decl
push
push
leave
pop
jbe
pop
mov
scas
mov
jmp
mov
int
into
xor
jno
stos
and
dec
xor
std
pushl
movsl
insb
inc
fidivl
stos
addr16
lcall
xorb
add
sub
push
sarl
cmc
dec
call
leave
xchg
aad
test
and
inc
push
sub
std
jmp
dec
aaa
out
imul
leave
in
jnp
sub
adc
in
outsl
xchg
cmp
jg
xchg
jb
push
mov
dec
adc
enter
push
imul
iret
jmp
cmp
pop
mov
iret
push
mov
out
cmp
mov
idiv
iret
call
into
movsl
leave
call
adcl
test
jns
ss
jmp
decl
mov
push
les
mov
dec
inc
push
xchg
dec
cs
out
pushl
pop
outsb
cltd
cmp
jle
mov
clc
jbe
xchg
cli
outsb
in
mov
out
dec
stos
sbb
mov
sbb
ud1
xchg
rorb
incl
nop
push
outsl
push
fsubp
cmp
jle
and
ss
decl
ret
fsubr
or
addr16
imul
sarb
or
push
mov
into
mov
push
xchg
test
jl
jge
xchg
dec
jae
enter
and
aam
push
ljmp
adc
mov
xchg
rcrl
xchg
adc
pushf
clc
pop
push
sbb
pop
pop
jbe
jbe
sbb
adc
mov
clc
mov
mov
insb
adc
xchg
iret
rolb
xchg
aam
mov
pop
jb
mov
das
cmp
pop
or
push
es
outsb
xchg
xor
ret
mov
sub
mov
mov
cmp
ja
jne
loop
pop
cltd
into
imull
jno
lret
mov
xchg
add
hlt
xor
mov
push
adc
out
push
out
rol
dec
repz
lcall
cmpsl
leave
cmpsb
ror
jmp
push
enter
xlat
in
jg
shrl
sbb
outsb
sbb
jo
imul
mov
sub
cmp
cli
fidivrl
movsb
lods
jmp
cli
aas
repnz
xchg
mov
aam
xor
mov
ret
cs
movsl
stc
call
rcrb
cs
movsl
push
fcompp
dec
mov
jo
fldl
je
add
xchg
rcrb
mov
addb
loope
in
sbb
pop
mov
insl
orl
insl
in
jg
movsb
out
lods
dec
inc
stos
pushf
dec
jb
jg
mov
fiaddl
ljmp
push
test
push
stos
dec
dec
adc
xor
mov
sub
add
mov
leave
outsb
in
imul
dec
mov
cmp
into
outsb
add
loope
cmp
and
aaa
icebp
outsl
adc
cmp
nop
cmc
gs
out
lcall
int3
daa
pushf
cltd
pop
add
dec
mov
dec
or
hlt
loopne
cld
jg
repnz
pop
mov
cs
rcrb
repnz
pop
dec
pop
sahf
push
jg
push
lahf
push
ret
aad
jmp
fstpt
mov
jp
frstor
popa
xchg
lret
or
jbe
cltd
mov
pop
scas
loopne
dec
fists
sbb
mov
pop
dec
cmp
xchg
add
dec
lcall
pop
into
xor
fcmovu
xorl
cs
jmp
insl
inc
or
fists
ds
js,pt
xchg
ds
int3
ds
aas
add
sbb
dec
in
xor
or
adc
sbb
ja
xor
cmp
ljmp
incl
xor
xor
xor
enter
jb
xchg
xor
pushl
or
xor
mov
xor
xor
xor
xor
xor
xor
push
dec
movsl
mov
stos
nop
bound
call
fbstp
or
aaa
and
aaa
push
aaa
pusha
aaa
imul
aaa
xchg
xchg
aaa
movsl
aaa
mov
cmp
cltd
cmp
cmp
cmp
cmp
cmp
cmp
inc
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
push
cmp
je
cmpb
cmp
cmp
idiv
xchg
pushf
loop
out
cmp
cmp
cmp
cmp
cmp
cmp
cmp
neg
loop
mov
test
cmp
add
fcoml
jmp
add
cmp
xchg
cmp
mov
dec
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
test
fdiv
jg
mov
cmp
ds
ds
ds
ds
sub
mov
sub
imul
incl
xor
inc
jae
js
lods
xor
call
xor
xor
xor
push
xor
xor
mov
movsl
xor
xor
fidivs
pop
ds
ss
ss
ss
aaa
push
aaa
sub
cmp
aaa
mov
hlt
call
mov
cmp
iret
cmp
cmp
sbb
daa
loopne
hlt
mov
push
cmp
jno
add
cmp
lcall
fistpll
in
out
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sahf
cmp
leave
cmp
cmp
cmp
sbb
push
cmp
xchg
cmp
cmp
jl
adc
cmp
cmp
cmp
fisttps
xor
inc
mov
cmpsl
ds
sarb
out
icebp
adc
sbb
fildll
aas
inc
aas
dec
aas
push
aas
pusha
aas
mov
sbb
and
sub
lcall
xor
mov
xor
xor
xor
xor
xor
sbb
rcr
aaa
inc
aaa
push
aaa
pop
aaa
xchg
aaa
popf
aaa
movsb
aaa
iret
clc
lcall
cmp
xchg
cmp
cmp
cmp
mov
cmp
cmp
cmp
mov
pushf
cmp
lods
push
cmp
cmp
lods
cmp
cmp
cmp
cmp
jg
adc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
loopne
cmp
cmp
jecxz
ljmp
ds
ds
aas
push
aas
pop
aas
mov
pop
cmp
aas
lods
aas
lds
in
add
decb
aad
jmp
pushl
and
xor
mov
xor
xor
xor
add
xor
xor
scas
xor
xor
xor
pop
call
xor
xor
xor
xor
xor
xor
jg
xor
cld
xor
sbb
je
add
and
dec
cmp
mov
cmp
cmp
cmp
cmp
jg
icebp
jmp
cmp
cmp
fistpll
mov
cmp
cmpl
fcomip
fisttps
xlat
fnstsw
jecxz
jmp
aas
adc
xor
dec
aas
push
aas
popa
test
out
aas
jo
js
jg
mov
ret
aas
mov
decb
ljmp
xchg
cs
mov
xor
pop
xor
jecxz
out
xor
lret
push
xor
xor
xor
xor
decl
bound
ja
mov
mov
mov
xor
xor
xor
inc
xor
xor
pushl
xor
xor
xor
dec
mov
xor
xor
xor
xor
clc
dec
cld
mov
add
xor
movsb
or
jmp
aaa
inc
in
cmp
cmp
fucomip
clc
xchg
lahf
cmp
cmp
insl
jb,pt
mov
ljmp
pop
fstpt
rep
mov
pop
xor
xor
xor
push
pushl
xor
xor
xor
xor
sti
xor
shlb
std
out
push
jmp
and
cmp
inc
aaa
dec
aaa
push
aaa
bound
jne
add
push
aaa
jmp
pushl
std
aaa
rorb
mov
cmp
push
cmp
jbe
jle
mov
and
cli
jg
sahf
and
cmp
cmp
cmp
cmp
arpl
jbe
cmpl
fdivrs
fisubs
and
popa
cmpl
stos
cmp
clc
enter
aam
cmp
cmp
cmp
cmp
inc
cmp
pop
cmp
lods
jmp
cmp
cmp
cmp
cmp
pop
cmp
cmp
pop
or
mov
ss
cmp
popf
mov
cmp
dec
cmp
cmp
cmp
cmp
dec
cmp
jno
jle
mov
mov
clc
out
popa
add
ja
pushf
ds
ds
shl
fdivr
data16
popf
add
dec
xor
or
out
xor
xor
leave
pop
push
xor
jne
jle
in
mov
xor
xor
xor
xor
lea
mov
xor
push
xor
jae
aam
loopne
out
push
ss
mov
stos
ss
ss
ss
aaa
xorl
pop
aas
and
inc
inc
je
loopne
xchg
pop
cmp
cmp
cmp
cmp
pop
lcall
outsl
xor
test
stc
xchg
sub
cmp
cmp
icebp
cmp
cmp
cmp
cmp
cmp
cmp
mov
mov
push
cmp
lock
imul
lahf
cmp
add
outsl
xchg
cmp
or
push
cmp
cmp
cmp
cmp
test
pushl
lock
ss
inc
ds
ds
bound
push
jp,pt
loopne
cmpb
ds
ds
sbb
stos
jno
ds
add
add
cmpsb
data16
arpl
jb
add
inc
testl
and
pop
sub
pop
inc
addb
push
add
fdivrs
mov
cltd
add
mov
cltd
aas
pop
pop
popf
rcrl
pmulhuw
cltd
cmp
popf
fstps
cltd
cmp
adc
ds
aas
cmp
adc
cwtl
in
lret
xchg
sbb
or
add
add
enter
andb
insl
mov
pop
and
pop
js
pop
pop
lods
test
cmp
cmp
push
addb
sub
pop
testb
add
and
add
pcmpgtb
add
push
mov
cmp
jnp
leave
mov
and
jb
arpl
repz
daa
cmp
xor
insb
adc
and
fsubrs
daa
inc
add
adc
dec
dec
adcb
and
xchg
inc
test
add
jl
add
push
add
push
enter
inc
lock
pop
push
add
stos
sbb
inc
mov
push
repnz
add
lea
sub
pop
xchg
pop
pop
xchg
notb
insb
dec
push
and
pop
imul
or
xchg
leave
inc
ss
je
push
cmp
add
inc
test
inc
test
dec
ds
adc
add
cwtl
adc
jo
notb
and
jl
mov
and
aas
repnz
xchg
mov
and
in
inc
adc
add
adc
push
call
bnd
xchg
rclb
add
sarl
insl
push
data16
insb
sub
xor
adc
sti
or
mov
push
cmp
test
xor
repnz
add
add
xor
inc
inc
movsb
inc
xor
inc
and
in
xor
xor
add
mov
inc
xor
xchg
adc
mov
sbb
xchg
mov
xchg
mov
push
aaa
and
add
and
jl
pop
stc
fistl
add
and
mov
and
xchg
jl
addl
add
and
push
and
stc
ficoml
add
addb
sahf
cmp
inc
pop
inc
mov
iret
sub
push
addb
mov
inc
and
rep
or
adc
mov
inc
push
shl
mov
pusha
insb
das
mov
scas
and
int3
or
adc
jo
or
mov
and
add
mov
adc
mov
fcoms
je
mov
cmp
add
popf
mov
jl
cmp
negl
test
push
inc
data16
fisttpll
adc
add
fistpl
jne
sbb
shr
cmp
addr16
ja
pop
push
mov
stc
fidivs
sbb
pusha
or
or
scas
repz
adc
mov
jno
inc
cmp
xor
add
push
jno
pop
mov
sub
xor
mov
in
int
hlt
and
sub
or
sub
adc
mov
jge
sbb
shll
pop
push
fwait
xchg
sbb
ficomps
xorl
test
stos
xor
in
out
inc
pop
and
mov
les
add
adc
sbb
add
mov
dec
add
cmp
mov
xor
dec
insl
insl
jae
ljmp
fldenv
dec
dec
inc
jg
arpl
or
rolb
and
cmpsb
inc
cwtl
gs
inc
inc
imul
dec
popa
insl
push
fwait
sbbb
faddl
dec
xchg
shl
pop
inc
xor
cmp
cmc
dec
cld
cmova
cmp
out
add
lock
add
aaa
dec
call
or
sub
je
cmp
push
divl
dec
lea
push
push
adc
out
sbb
in
enter
and
or
div
sahf
push
add
lea
xor
cmp
xor
nop
out
mov
or
sub
rclb
or
dec
inc
insb
push
xchg
cmc
out
or
and
bound
clc
lods
xchg
sub
dec
pop
inc
call
inc
inc
out
cmp
lcall
adc
add
push
mov
jne
and
xor
call
sub
jp
dec
xor
jmp
fs
test
sbb
pop
or
xor
enter
inc
jne
or
icebp
push
std
push
xchg
sbb
pminsw
lret
dec
xor
mov
jl
and
push
push
cmp
jecxz
push
xchg
loope
inc
add
cmp
jl
push
roll
xchg
call
adc
add
lods
repz
lods
sub
add
lock
push
lods
jg
mov
imul
mov
or
dec
xor
jb
sub
popa
outsl
outsb
gs
mov
lret
jae
cs
fldcw
es
aad
insb
xlat
popa
lret
mov
inc
shlb
arpl
and
pop
xchg
gs
loopne
loop
arpl
dec
xchg
bound
fs
sti
xor
call
dec
or
lahf
addr16
movb
mov
test
dec
sub
mov
icebp
daa
dec
mov
gs
jno
inc
daa
lret
nop
int3
adc
jb
push
addr16
into
jp
rolb
rcl
cmp
mov
add
pop
push
cmp
dec
or
cmp
and
std
aas
push
dec
xchg
add
sbb
popa
xchg
xchg
xchg
xchg
jb
inc
js
inc
in
nop
push
aam
int3
add
add
xchg
xchg
lret
ret
addb
leave
out
mov
pop
push
push
mov
insb
ret
inc
sub
lods
and
inc
xlat
push
jp
cwtl
dec
fisttpl
shr
push
loop
mov
sbb
mov
nop
xchg
inc
sbb
rorb
pop
int3
adc
push
push
adc
jmp
sbb
dec
push
repnz
jne
mov
adc
call
xchg
xchg
add
and
test
inc
in
stos
test
xchg
js
lds
sub
xor
xor
popa
nop
xchg
xchg
xchg
xor
xchg
xchg
xchg
xchg
daa
daa
daa
mov
loopne
into
fwait
popa
pop
xchg
push
inc
cs
and
std
lea
mov
in
mov
nop
push
xchg
std
pop
xchg
std
mov
jb
std
xchg
std
xchg
std
xchg
std
mov
lahf
lret
mov
inc
js
xchg
gs
jo
outsl
jb
dec
shll
mov
stos
push
addl
or
inc
and
or
sbb
xor
and
xor
call
shrl
push
insl
test
stc
jns
sti
les
xor
in
lcall
push
out
jne
or
rep
aaa
dec
rcrl
hlt
cmc
div
call
cs
push
movsl
inc
js
mov
mov
adc
lock
lea
dec
sub
pop
xchg
lea
xorb
outsl
add
lods
leave
jae
jns,pn
push
inc
dec
mov
sub
mov
insb
popa
jne
arpl
or
mov
mov
jno
imul
dec
pop
cs
int
mov
lret
imul
imul
test
mov
xor
pop
cs
out
out
call
mov
std
push
xchg
push
add
pop
add
inc
movntps
aam
xchg
inc
ss
add
xchg
dec
lret
call
popf
mov
push
scas
jne
rolb
adc
arpl
mov
sbb
xchg
push
out
pusha
ss
inc
mov
andl
dec
xlat
fsubr
or
xchg
shrb
stos
mov
repnz
push
push
or
cmc
iret
jge
jbe
pop
repnz
sub
mov
adc
or
jns
pop
popf
rcr
dec
leave
or
sbb
add
sbb
jg
inc
sub
push
or
add
fmuls
idivb
in
les
in
ret
sbb
add
xlat
out
hlt
es
enter
mov
shlb
inc
adc
pop
add
insb
outsl
test
push
push
les
ret
js
mov
sbb
push
inc
dec
mov
and
repz
dec
add
in
shlb
sbb
pushf
sub
push
sete
fsubrs
stos
cmp
xor
pop
mov
push
movl
or
dec
or
jo
add
outsl
adc
xchg
mov
pop
pop
or
inc
sbb
add
out
pop
push
pushf
inc
aad
cmp
add
sahf
mov
in
xchg
push
sbb
inc
adc
xchg
adc
and
inc
mov
mov
fs
inc
inc
dec
add
sub
and
push
pop
sbb
in
cmp
add
cli
movsb
hlt
cmpsb
jb
xchg
sbb
adcb
inc
and
jns
pop
mov
add
lods
mov
mov
pushf
int3
add
adc
cmp
or
jae
outsl
test
mov
or
loope
mov
push
pop
xchg
push
rclb
sub
inc
cwtl
inc
repz
or
pop
sbb
in
pop
push
inc
and
xor
roll
ss
push
pusha
insb
dec
shll
ret
shll
out
inc
fmulp
imul
addr16
cmpsb
xorb
jae
xchg
shll
jbe
dec
jne
xor
xchg
dec
stos
pop
xor
add
pop
test
xchg
int3
ds
jb
aaa
xor
xor
add
inc
dec
pop
adc
xor
pop
adc
inc
add
xchg
fdiv
in
pusha
push
outsl
insb
push
outsl
pop
or
outsb
inc
xor
outsl
push
add
mov
outsl
jne
and
xor
jge
mov
adc
popa
dec
push
push
js
imul
jp
js
or
idiv
push
dec
push
dec
jae
push
sub
push
push
dec
sub
dec
orb
pop
rorb
add
fdiv
mov
inc
inc
inc
adc
data16
inc
rolb
xchg
sbb
xchg
movsb
gs
out
inc
enter
mov
test
rorl
adc
add
sub
sub
or
mov
ret
add
mov
xchg
push
inc
and
xchg
pop
packsswb
add
or
add
inc
rorl
xor
or
adc
xor
add
sbbl
es
jno
movsl
sbb
push
or
inc
adc
fwait
xor
mov
shll
addr16
pushf
sub
mov
je
pop
add
jae
push
sbb
jle
add
jb
and
mov
outsl
js
dec
sbb
push
sbbl
inc
and
mov
testl
adc
add
aad
sub
or
cmp
xchg
inc
inc
movsl
push
nop
or
das
push
mov
or
mov
add
adc
dec
jae
mov
jp
dec
test
add
inc
inc
je
pusha
add
or
pusha
add
popa
add
jns
mov
movsb
testl
mov
ja
sbb
aaa
pop
xchg
mov
add
mov
pop
cld
add
dec
sbb
shll
shll
or
mov
imul
pop
jge
add
add
add
mov
push
addl
rcrl
adc
add
scas
or
sbb
sbb
out
ret
dec
scas
pop
adc
and
jb
jne
mov
adc
and
pop
mov
sub
mov
jecxz
jp
xchg
push
in
adc
jne
sbb
jae
or
add
shlb
pop
lock
jnp
dec
or
mov
int3
inc
jnp
addr16
fmuls
jns
jae
insl
pusha
cmpsb
fdivs
xchg
outsl
pop
mov
insb
pop
push
xor
adc
data16
loop
add
xor
push
adc
stc
pavgw
shrb
imul
data16
inc
or
flds
add
mov
loopne
incb
add
mov
lcall
push
pop
pop
int
push
fistpl
xor
scas
sub
test
inc
cmovns
inc
or
add
imul
mov
add
xlat
or
add
lcall
dec
pop
fstl
or
mov
cmp
xor
fucom
mov
and
xor
jae
repz
add
movsl
popa
sbb
jnp
jae
add
addr16
gs
imul
jnp
inc
push
enter
loope
adc
or
xor
or
jb
cmp
fldenv
jne
xor
mov
xchg
insb
popf
mov
adc
dec
or
lds
push
fsub
mov
adc
xchg
pop
xor
xor
out
mov
sub
sub
rorl
insl
or
daa
dec
insb
mov
pusha
dec
imul
push
daa
jbe
mov
and
outsl
pcmpgtw
inc
inc
jne
je
and
jne
sub
inc
push
cltd
mov
pop
imul
and
mov
insb
cmpsl
xchg
or
dec
cmp
mov
lock
or
sub
xor
fs
mov
xor
mov
shlb
inc
push
xor
jle
inc
add
xor
xor
xchg
jns
mov
fwait
pushl
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
outsl
inc
outsl
inc
aaa
dec
xor
xchg
std
pushl
dec
ss
jg
mov
fwait
ss
aaa
xorb
aaa
pushf
aaa
mov
cmp
mov
xchg
mov
cmp
cmp
cmp
cmp
outsl
das
inc
mov
cmp
lods
cmp
cmp
cmp
movsl
push
out
cmp
pop
jmp
fisttpll
jmp
cmp
jne
clc
jo
cmp
dec
xor
jp
xchg
das
inc
pushl
xchg
xor
xor
xor
or
test
mov
lahf
xor
jg
xor
xor
xchg
sub
int
fnstenv
add
ss
ss
xor
divb
and
jge
fstpt
cmp
cmp
cmp
cmp
cmp
enter
push
mov
hlt
add
or
add
push
adc
mov
mov
add
loopne
push
add
mov
add
ficompl
mov
out
sub
nop
adcb
dec
push
mov
cmp
imul
jae
jne
push
orb
outsl
data16
cmp
add
push
xchg
add
push
or
xchg
add
add
push
lea
adc
mov
add
jbe
ds
mov
setb
or
or
outsl
test
or
or
add
add
add
or
add
jo
add
mov
add
out
pushf
je
add
add
xorb
cwtl
add
inc
xorl
xchg
pop
cmp
movsl
push
sub
push
pop
xchg
and
or
les
add
and
cmp
inc
add
add
lahf
inc
cmp
inc
jo
mov
jns
or
and
mov
dec
push
adc
dec
add
sbb
leave
mov
popa
adc
push
add
orb
dec
add
and
add
add
add
inc
add
add
add
add
popa
add
call
int
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
