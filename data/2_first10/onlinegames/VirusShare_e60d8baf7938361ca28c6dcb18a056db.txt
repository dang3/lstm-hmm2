push
call
in
push
push
push
jmp
push
dec
int3
call
sbb
add
or
and
jmp
lcall
add
call
test
jle
xorb
push
inc
cmp
jl
pop
mov
pop
in
pop
in
pop
pop
ret
cmp
adc
int3
jle
in
out
mov
push
call
pop
pop
je
inc
push
sti
xchg
std
fimuls
adc
jmp
sub
dec
fstpt
fldcw
add
push
call
push
fdivr
mov
pop
xor
mov
sbb
aam
dec
mov
push
call
pushl
fcmovnu
fldcw
cld
sbb
int3
push
push
mov
or
adc
loopne
push
add
je
es
fldt
pop
pop
push
push
push
push
imul
aam
mov
push
decl
cmp
outsl
lods
std
inc
push
call
pushl
mov
jae
inc
or
int3
std
je
cmp
jl
adc
enter
jg
sub
adc
stc
and
sub
adc
sub
jg
std
mov
test
je
adc
je
lea
jmp
xor
jmp
scas
test
fstpl
pop
mov
mov
jge
and
scas
add
out
lods
and
or
stos
inc
lea
pop
mov
or
add
sti
push
movl
insl
fwait
sti
jge
call
add
mov
pop
inc
jmp
rcrb
aas
clc
push
daa
pop
push
inc
hlt
push
mov
sbb
inc
call
cmp
mov
daa
add
pop
fwait
bswap
fdivl
pop
cmp
jbe
mov
pop
fimull
pop
movsb
add
je
cmp
mov
sbb
sub
xlat
sub
pop
in
imul
xor
push
dec
jg
jne
or
cmpl
jle
lea
cmpl
jge
andb
mov
inc
mov
pop
jle
mov
test
push
jne
jne
or
fsts
cltd
add
push
mov
add
pop
push
and
push
popa
inc
adc
cmpsl
cld
jbe
ror
add
inc
push
nop
adc
or
movl
jecxz
aas
call
sub
inc
ds
ds
or
inc
lock
or
mov
dec
push
adc
push
ret
push
cli
xor
cmp
je
push
push
add
or
sub
inc
sbb
clc
cmp
je
inc
pop
ficoml
mov
jmp
pop
adc
ficomps
leave
add
divl
xor
pop
pop
std
or
sub
jne
loope
sahf
inc
xor
sarl
mov
fidivs
ja
sti
xor
push
hlt
mov
jge
sub
adc
or
je
mov
sarl
inc
pop
or
cmp
decb
lods
pusha
push
inc
out
test
push
movsb
mov
xchg
jnp
jb
mov
xor
out
mov
out
mov
cmpsl
push
shr
adc
popa
ljmpw
dec
pop
addr16
cmp
jmp
test
adc
adc
dec
cltd
ss
sahf
insb
jbe
adc
jnp
mov
xor
sub
out
inc
es
sub
int3
gs
or
lcall
jecxz
xor
jo
in
push
das
test
or
out
in
adc
add
retw
sbb
mov
in
inc
add
sub
cmp
lcall
xchg
adc
pusha
cmp
scas
sbb
cld
pop
sbb
pusha
mov
lock
ja
cmp
loope
inc
leave
push
ficoms
pop
ljmp
push
push
jmp
pop
add
fildl
xor
fninit
jg
pop
push
jmp
clc
pop
jle
lea
je
int
rclb
out
push
and
xchg
std
fdivrs
cmp
out
pop
sub
out
fidivs
leave
cmp
shll
dec
jmp
push
mov
sub
cmp
fcoml
sub
cld
mov
or
clc
push
loope
push
push
inc
mov
insl
dec
movl
push
push
mov
test
lock
mov
leave
leave
and
ja
jbe
xlat
or
sub
sub
add
cmpb
jne
dec
dec
fcmovnu
mov
push
and
sbb
adc
aaa
jae
cmp
icebp
addb
jb
xor
adc
xor
call
fstpt
pop
adc
inc
jo
push
xadd
add
fisubl
fs
add
pop
adc
fldt
ret
xor
dec
pop
mov
pop
ljmp
add
add
in
idiv
or
jb
sub
add
mov
in
sub
mov
or
loope
mov
push
ret
inc
shlb
mov
clc
jnp
pop
mov
and
insl
movsl
outsl
in
lea
pop
cld
mov
xchg
test
or
insb
js
pop
jae
cwtl
or
pushf
pusha
clc
mov
and
jo
or
sbb
cmp
inc
insb
dec
movsb
sbb
or
mov
iret
jbe
or
daa
mov
lea
push
lcall
pushf
push
add
sbb
add
add
and
mov
xor
and
inc
or
add
add
mov
or
jbe
aam
mov
movsb
adc
inc
rolb
je
cmp
repz
jmp
sub
jbe
jmp
jae
or
stos
inc
adc
sbb
dec
sbb
fistl
out
dec
or
mov
push
test
pop
pop
ret
mov
into
lock
ds
mov
add
add
sub
fs
ret
mov
arpl
addr16
js
jl
push
add
inc
push
fwait
popf
sbb
jno
mov
pop
adc
fsubrl
test
add
rorl
lret
test
repz
and
xchg
mov
into
mov
ffree
adc
int
ror
ror
call
mul
add
lret
ljmp
stc
call
lret
stc
repnz
dec
lret
ror
test
icebp
stc
out
xlat
xlat
ror
repz
int3
lret
mov
in
aad
lret
int3
sar
loope
jmp
xchg
or
add
mov
test
add
add
dec
add
inc
mov
sbb
pop
nop
add
push
fisttps
add
pop
mov
pop
mov
int
mov
imul
jb
insl
and
outsb
outsb
outsl
je
fdivr
outsl
jmp
and
outsb
and
inc
dec
push
and
fs
mov
pusha
popf
fdivr
add
mov
sbbb
push
out
push
jnp
stc
mov
testl
loopne
mov
xchg
xchg
clc
push
imul
outsl
push
inc
mov
add
jns
jnp
push
and
mov
loopne
add
xor
adc
jns
movups
adc
pop
or
add
sub
add
outsl
flds
push
cmpl
sbb
dec
add
dec
mov
je
js
insb
mov
je
sbb
and
adc
jb
popa
je
loopne
xor
dec
add
es
ss
inc
rorb
jb
gs
outsl
arpl
jl
daa
push
orb
cmpsb
inc
push
add
lea
or
push
fcomip
or
dec
call
pusha
dec
je
dec
wbinvd
sar
test
push
push
mov
insl
xor
negb
cmpsl
sbb
add
push
sahf
inc
je
push
js
and
outsb
and
mov
sbb
lcall
jnp
aad
jo
mov
inc
test
and
in
aas
add
sub
mov
enter
mov
loopne
stc
pop
sub
jge
xor
lods
insl
add
sbb
adc
ror
pop
pop
and
jmp
movsb
movsb
ljmp
pop
add
push
test
mov
adc
mov
insl
push
inc
add
sub
call
mov
xor
test
cmp
push
popa
mov
mov
int
xchg
adc
or
aad
cld
out
lds
jne
push
and
call
and
or
inc
test
repz
ret
push
or
mov
clc
and
icebp
mov
pop
in
outsl
mov
and
add
add
or
mov
sbb
or
nop
mov
push
mov
test
je
mov
xor
mov
outsl
jg
testb
repz
pusha
mov
add
and
fsubrs
xor
jo
add
ja
fdivr
popa
sub
rol
daa
push
and
sub
xchg
in
cmp
and
rcrb
outsb
add
fisttps
and
dec
add
sbb
push
adc
arpl
adc
cmp
jle
pop
and
jns
loope
push
adc
sub
fwait
jecxz
sub
push
jae
push
push
testl
cwtl
inc
dec
fidivl
jnp
cmp
add
inc
mov
pop
mov
mov
incb
add
loope
push
mov
mov
add
xor
cmpl
push
mov
test
jbe
ja
fadds
test
mov
push
mov
jl
mov
ljmp
sbb
sub
jmp
fnsave
inc
mov
inc
add
cmp
jl
pop
cmp
jmp
cmp
mov
push
jle
jb
add
ja
mov
and
cli
push
std
or
push
xor
sar
add
push
cltd
push
lods
xrstors
fisttpl
clc
or
out
jmp
shlb
mov
push
cmpb
add
inc
push
inc
jmp
fnstsw
leave
xor
mov
inc
add
push
cmp
cld
add
aaa
jg
mov
mov
imul
sub
sbb
in
mov
cmp
or
push
inc
add
adc
adc
cmpxchg
mov
push
dec
ret
mov
repz
enter
lahf
mov
fadds
pop
pop
ds
push
fcoms
cmpl
out
dec
in
stos
orl
lock
in
popf
repz
adcl
imulb
mov
stc
mov
call
out
sub
stos
or
cmp
rcrl
das
adcb
mov
dec
push
adc
addr16
aas
adc
xchg
cmpl
pusha
push
movb
out
or
incb
mov
cmpw
aaa
in
adc
lahf
push
push
pop
ficoms
xor
int3
dec
roll
jmp
ds
mov
xchg
sbb
in
jecxz
add
js
aad
mov
inc
sub
or
mov
xchg
fildl
add
in
in
inc
mov
adc
inc
xor
push
insb
pop
imul
adc
mov
lahf
push
dec
and
inc
sbb
out
or
add
aaa
jmp
xor
mov
pop
pop
ret
or
scas
sarl
and
cmp
jo
aaa
mov
call
ss
pop
mov
add
cmp
jno
clc
std
out
xor
mov
pusha
mov
adc
jge
cmp
ja
sbb
clc
add
and
clc
call
pusha
mov
push
mov
in
or
mov
imull
cmc
push
mov
sbb
flds
mov
test
cmp
andb
iret
jl
pop
jp
fs
js
fs
fs
push
je
insb
inc
fs
push
nop
xor
fs
push
insb
adc
jge
jo
stc
adc
pop
xor
add
add
cmp
add
dec
pop
pop
dec
mov
cmp
fimull
stc
mov
xorl
frstor
pop
sub
movl
imul
or
and
add
hlt
lea
jne
mov
mov
add
jmp
mov
jnp
mov
push
sub
push
pop
loopne
fdivp
movl
mov
xor
jl
out
mov
and
andl
insb
jo
popa
clc
movsl
jle
mov
out
clc
sbb
ja
push
andb
stos
outsl
pop
sti
insl
cmp
incl
add
jl,pn
push
les
push
or
mov
enter
jmp
ss
sbbb
in
sahf
test
ss
mov
jne
outsb
lea
push
movsb
call
fistl
jl
cmp
dec
js
cld
outsb
xor
inc
cmp
jne
cmp
ret
bound
pop
pusha
mov
daa
movsl
divb
scas
adc
icebp
push
xchg
int
repz
xor
je
mov
aaa
mov
sub
dec
mov
dec
cmp
jle
xor
add
jl
popf
in
cltd
mov
or
mov
not
ret
clc
lcall
mov
outsl
push
lds
dec
mov
mov
jmp
aaa
iret
data16
aad
enter
mov
mov
lock
or
in
loop
clc
movb
mov
cmp
cmpsb
jge
dec
pop
stc
add
sti
lods
mov
std
nop
call
outsb
and
jbe
inc
inc
or
rcrb
cmp
outsl
out
push
and
xchg
fdivrs
es
inc
jle
cmp
loopne
xchg
xor
or
inc
inc
call
xchg
ja
cmp
add
push
sbb
push
test
add
or
pop
mov
loope
mov
in
adcb
inc
sarb
paddsb
push
sbb
jae
insl
add
loopne
sbb
fdivrl
pop
lods
jne
loopne
leave
in
andb
and
mov
adc
bound
push
jo
sbb
stc
je
and
push
mov
mov
jle
adc
cli
or
sahf
lea
mov
pop
or
xorb
imul
insl
lods
int3
mov
cli
fildl
sub
push
xchg
sbb
test
gs
sbb
in
xchg
sbb
fsts
or
and
ficoml
pushf
lock
adc
int3
adc
leave
xor
sub
in
xchg
movsb
out
movl
push
pop
xchg
paddd
in
stos
stos
push
inc
in
push
arpl
rcll
hlt
in
xor
pop
test
push
jne
mov
aam
cmpsl
mov
call
sbb
xchg
ret
sub
lock
pop
and
inc
sub
fs
lods
or
mov
aas
xor
lock
incl
aam
add
test
jmp
fdivs
lahf
adc
dec
ja
sahf
test
pop
pop
imul
lods
inc
mov
push
mov
clc
xor
jg
inc
subl
mov
inc
mov
dec
add
cmp
jl
xchg
notb
std
repz
decl
mov
add
add
inc
movzbl
mov
mov
ja
mov
jl
das
cmp
dec
hlt
jne
pop
mov
fildl
sub
mov
mov
test
clc
add
adc
lea
test
add
push
lock
add
mov
add
stc
inc
jo
ljmp
add
lahf
lods
jo
mov
lcall
push
rep
test
jmp
mov
xchg
outsb
insb
mov
out
in
pusha
push
daa
ret
dec
pop
and
push
pop
call
inc
das
je
mov
lea
or
lret
jmp
cmp
jge
mov
aam
enter
or
fimuls
fadds
xchg
jecxz
adc
je
hlt
clc
dec
loopne
dec
jl
stc
fs
xchg
or
negb
mov
fcmovnu
and
sub
js
mov
sarb
mov
xorb
lock
data16
sbb
test
sahf
pop
xchg
dec
xor
pop
fmuls
adc
call
aaa
jae
aas
or
inc
mov
repz
sub
cmp
pop
movb
add
mov
jbe
mov
or
js
das
rolb
aam
push
inc
cs
mov
or
sub
sbb
lret
xlat
push
adc
cmc
adc
push
lea
and
hlt
pop
cld
movsl
xchg
cmc
imul
push
cmp
cmp
scas
adc
or
add
pop
lods
push
adc
sub
fs
push
jmp
fimuls
push
sti
cmc
popa
or
jo
xchg
adc
mov
sahf
xor
pop
adc
sbb
xor
iret
hlt
inc
xor
and
mov
mov
orb
xchg
icebp
and
push
js
push
adc
pop
cmp
jle
add
xchg
int3
cmp
pushl
mov
inc
cmp
jl
sbb
shl
in
fldcw
xor
movsl
pop
xor
cwtl
popa
test
adc
xchg
in
add
ret
or
and
fs
call
test
adc
and
mov
jbe
cmp
pop
in
nop
insl
dec
clc
mov
inc
xchg
sub
ret
xchg
lods
and
cmp
int3
dec
ds
and
inc
mov
or
adc
inc
inc
add
push
cld
inc
outsl
neg
in
push
sub
jne
pop
enter
adc
push
push
and
xchg
sbb
loope
fwait
or
out
sub
stc
xchg
and
in
add
fs
xor
cltd
xchg
adc
lahf
nop
pop
scas
nop
inc
inc
inc
mov
or
cmp
push
nop
xchg
or
cmp
das
pop
mov
pop
out
repz
ficoml
pop
clc
insl
out
inc
adc
adc
push
pop
mov
js
cmp
hlt
add
push
sub
mov
xor
insb
mov
outsl
and
add
imul
das
adcb
pop
pop
cmpsl
ret
add
xlat
jb
mov
cmp
push
orl
hlt
es
inc
bnd
lock
xchg
mov
inc
and
mov
ja
sbb
insb
adc
pop
adc
push
mov
daa
js
dec
int
jmp
mov
adc
dec
and
sbb
add
scas
in
xor
add
inc
and
or
jmp
mov
xchg
scas
adc
sub
lret
enter
adc
sub
jl
jmp
mov
ret
jmp
adc
add
xor
adc
mov
mov
sti
mov
pop
pop
adc
mov
jo
fildll
cmpb
mov
subl
sub
dec
push
out
pop
test
adc
shlb
popa
lock
call
popa
ds
jne
push
lea
and
testb
adcl
in
ljmp
cmp
or
fnstsw
loope
ljmp
ret
sbb
jbe
pop
add
fsubr
mov
scas
sub
dec
repnz
lds
jb
jo
mov
mov
xchg
pop
orb
xor
popa
fnstenv
testb
push
ljmp
push
imul
inc
sub
mov
sub
loopne
mov
jmp
pop
sti
or
or
fs
push
jmp
lock
shll
jmp
and
leave
pop
jmp
xor
xorl
or
and
add
rorl
mov
inc
push
enter
out
out
std
dec
ds
and
inc
sarl
cmp
call
push
enter
add
add
mov
bound
cmp
in
xor
call
nop
push
out
jne
lods
shlb
in
inc
lahf
jb
arpl
cmp
and
add
sbb
clc
jle
iret
pop
std
push
mov
leave
sbb
or
push
jl
fs
xlat
std
inc
jg
sbbb
or
inc
adc
fcoms
and
lock
das
dec
push
push
cwtl
push
xchg
lods
test
addl
punpckhwd
xchg
mov
popa
push
lret
rorl
add
fwait
add
mov
cs
or
sbb
or
bound
inc
ds
out
sbb
cmp
cmp
and
mov
dec
inc
inc
add
mov
das
mov
push
mov
mov
es
lcall
pop
xor
push
lea
cmp
jb
mov
test
sub
call
push
sub
ljmp
jg
adc
pop
pop
xchg
pop
push
push
cld
push
pop
mov
dec
mov
mov
cmpl
add
outsl
mov
or
cmp
dec
or
adc
mov
ljmp
or
aaa
out
scas
mov
testb
es
push
in
enter
and
sarl
cmp
add
or
push
jecxz
dec
cwtl
sbb
divb
insb
xchg
dec
mov
fcmove
sbb
or
xor
xor
mov
mov
shll
pop
das
inc
xor
push
scas
fstps
fdivs
add
in
pop
dec
xlat
sub
testb
mov
cmpsb
pushf
xor
mov
dec
shll
push
inc
cmp
idivl
push
sub
or
stos
out
xchg
addr16
xor
lods
xor
pop
dec
xor
dec
or
sarb
xor
add
je
imul
pop
sub
inc
adc
inc
push
inc
outsb
jne
pop
fs
inc
push
jae
rorb
sti
incl
jbe
xor
gs
fs
jb
arpl
jae
sub
jbe
in
add
inc
insb
popa
or
dec
push
push
inc
push
xor
mov
adc
cs
insb
in
aas
xor
inc
pop
push
add
std
cmp
insb
rdmsr
push
dec
setns
pop
mov
outsl
add
pop
pop
add
in
lods
lock
lahf
pop
arpl
stc
or
call
jl
jb
je
outsl
jo
outsb
add
add
jb
addr16
imul
insl
jo
xchg
aaa
lahf
in
arpl
and
outsl
imul
dec
push
push
lret
in
inc
push
push
xchg
pop
pop
push
lidtl
outsb
incb
insl
add
popf
add
pop
mov
cmp
imul
dec
popa
outsl
jb
add
jb
jne
sbb
je
arpl
divl
popa
gs
mov
add
adc
cwtl
sti
loope
stc
add
jns
add
pop
xor
pop
jo
or
insb
outsb
fistl
xor
xorl
rorb
cmovp
inc
sub
pop
or
mulb
dec
outsl
fs
inc
imul
mov
ds
inc
fs
aaa
sub
pop
and
ret
outsl
cmp
mov
mull
popa
jb
xchg
sub
push
mov
lret
insl
and
fnstenv
jge
icebp
imul
mov
icebp
ret
push
mov
fstpl
cs
xor
je
add
adc
jb
add
mov
aaa
inc
add
cli
xchg
xchg
aas
fstps
or
lret
rol
rorl
add
leave
lret
out
inc
lret
rcl
push
adc
lret
lret
rol
ror
insl
fistpll
in
or
adc
maskmovq
imull
pop
rol
xlat
rcl
aad
cmp
mov
mov
dec
rol
fmul
enter
roll
adc
cmp
sbb
ljmp
ror
fneni(8087
popf
jecxz
mov
out
xchg
out
adc
aad
inc
idiv
psubd
loopne
nop
test
icebp
icebp
cmc
mov
sbb
mov
xlat
mov
pop
mov
test
xchg
rcll
in
gs
pop
imul
lcall
pop
mov
add
into
mov
cwtl
xchg
and
push
js
and
cwtl
aad
xchg
pop
xchg
cmpl
pop
enter
xchg
pop
sub
ds
ret
iret
roll
mul
mov
push
cltd
mov
movsl
sbb
pushf
cmp
incl
inc
xchg
js
mov
popa
mov
and
je
lods
aaa
fdivr
in
pop
inc
jl
adc
int
jnp
and
xor
mov
fcos
call
shlb
inc
jle
adc
mov
cli
or
mov
fst
cmpsb
inc
adc
jl
mov
test
sub
imul
jne
lcall
and
or
xchg
or
leave
ja
insl
cmp
xor
add
mov
ret
push
in
or
add
cld
sti
pushl
int
xadd
mov
jo
mov
sub
sahf
push
pop
testb
or
mov
jg
sub
stos
hlt
sar
insl
jo
jns
xor
movsl
out
push
and
sub
add
xor
fistl
cmp
mov
fsubs
or
mov
movsb
add
inc
adc
sbb
movl
iretw
sti
add
pop
xchg
inc
lret
mov
dec
sub
aad
ret
inc
adc
mov
xor
test
mov
adc
dec
mov
das
xor
cmp
push
xor
pop
xor
outsl
xor
test
mov
xchg
xor
xor
xor
xor
xor
xor
push
xor
xchg
xor
or
xor
pushl
fidivs
ljmp
xor
xor
xor
inc
xor
mov
xor
pushl
icebp
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
pushl
jbe
mov
movsb
xor
xor
cli
xor
and
dec
ss
cmp
inc
ss
ss
ss
jns
xorl
mov
push
ss
sbb
cmp
inc
aaa
push
aaa
pop
aaa
insb
aaa
jbe
mov
xchg
aaa
movsb
aaa
scas
aaa
shlb
aaa
fdivl
jmp
aaa
clc
aaa
add
adc
push
cmp
cmp
cmp
cmp
mov
movsl
cmp
cmp
cmp
cmp
cmp
decl
cmp
cmp
pushf
cmp
cmp
cmp
cmp
cmp
cmp
call
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
decl
cmpsl
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
lcall
imul
cmp
fidivrs
clc
cmp
and
cmpl
lock
aam
fnstsw
aas
xchg
and
aas
decl
xor
xor
insl
xor
xor
xor
xor
pushl
jecxz
or
sbb
xor
imul
movsb
xor
cmc
xor
xor
pushl
pop
xor
mov
lahf
xor
xor
xor
xor
xor
xor
jmp
xor
inc
xor
insl
xor
xchg
xor
or
xor
xor
jmp
cmp
dec
lods
xor
xor
xor
xor
xor
xor
imul
xor
mov
sahf
xor
shll
xor
out
jo
cld
xor
stos
xor
outsb
ss
cld
decl
mov
aaa
or
mov
pushl
mov
nop
aaa
xchg
aaa
lods
aaa
int3
aaa
cld
aaa
push
cmp
cmp
cmp
cmp
arpl
imul
sar
cmp
cmp
cmp
cmp
cmp
test
xchg
cmp
cmp
cmp
push
cmp
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
or
adc
cmp
sti
jg
cmp
cmp
pop
sarl
cmp
cmp
cmp
inc
adc
add
ret
xor
mov
adc
push
je
lcall
outsb
outsw
inc
add
test
scas
ljmp
push
leave
decb
jo
imul
mov
das
inc
jb
outsl
jb
push
imul
xchg
jnp
sub
add
fmul
stos
jle
js
arpl
je
in
fldcw
push
je
ljmp
arpl
inc
push
mov
pop
outsl
jne
xor
push
or
jp
xorb
mov
add
mov
out
bnd
inc
in
stos
jb
or
add
xor
dec
or
push
jbe
sbb
mov
dec
jo
mov
pop
mov
sub
insl
jmp
outsl
outsl
insb
push
push
cmp
push
loopne
fcomp
jb
gs
sub
lods
addl
xchg
add
gs
or
or
adc
pop
insb
fsubs
push
rorb
mov
mov
cmpsl
mov
outsl
outsb
imul
mov
pop
push
pop
das
pcmpeqw
xchg
pop
je
dec
wbinvd
pop
data16
adc
cmp
xor
in
aaa
push
orb
add
rorb
and
sbb
sbb
jecxz
es
jae
push
outsb
outsb
or
mov
pop
arpl
loopne
xchg
adc
add
or
int
pop
mov
mov
push
pop
xchg
lgdtl
nop
adc
and
pusha
in
enter
push
fisttpll
nop
call
aam
push
or
jb
mov
sub
push
xchg
je
mov
sbb
jae
add
lods
in
push
jo
lock
add
mov
add
add
add
add
add
add
add
add
call
int
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
