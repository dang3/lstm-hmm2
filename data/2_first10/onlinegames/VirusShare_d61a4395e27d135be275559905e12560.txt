sbbl
cmpsl
cld
mov
gs
xchg
gs
pop
dec
cmp
sbb
repz
mov
lret
mov
lret
fwait
mov
push
sub
mov
dec
cmp
sbb
mov
lahf
cld
scas
ror
gs
add
jns
insl
cld
arpl
incl
out
jmp
add
mov
lea
rcrl
js
js
xchg
repnz
stos
mov
out
adc
add
lcall
lea
cwtl
lcall
lcall
mov
fimull
xchg
lcall
xchg
xchg
sahf
adc
dec
adc
out
lcall
daa
mov
int
rcrl
cmpsl
lcall
ret
jmp
lock
fwait
fwait
shlb
testl
popf
adc
hlt
mov
in
add
and
lret
je
jle
xchg
idivl
jg
add
adc
pop
test
mov
test
por
scas
lods
cmp
mov
lcall
aaa
mov
hlt
xor
mov
dec
xor
xchg
xor
sbb
cld
sub
mov
sub
call
aam
mov
dec
adc
and
pop
scas
cld
push
mov
push
inc
push
and
sbb
mov
dec
push
mov
fcoms
call
inc
pop
femms
lock
pop
adc
or
or
or
pop
push
mov
add
call
mov
sub
and
cld
pop
cmp
mov
lods
call
aaa
out
push
test
fwait
paddusw
or
pop
add
add
les
mov
test
je
adc
je
idivl
mov
int3
aas
adc
jb
addr16
add
xchg
cmp
xlat
stos
scas
test
ljmp
dec
fs
inc
ljmp
jmp
and
test
add
out
pop
rolb
mov
cmpsb
mov
je
aas
repnz
nop
pop
xorl
movsb
ss
jl
jecxz
insb
ljmp
add
sti
xchg
mov
orl
repz
test
cmp
pop
cli
adc
int3
dec
push
inc
loop
add
testl
fwait
cld
xchg
mov
dec
mov
leave
icebp
test
inc
int3
and
or
loop
sub
test
repz
and
jo
pop
les
cld
xchg
movsb
and
imul
jl
mov
jb
inc
xchg
sbb
jmp
sbb
or
xchg
movsb
adc
fdivrs
mov
xchg
nop
pusha
xchg
call
mov
in
in
sahf
xchg
push
jmp
bound
test
fcomps
pop
scas
jae
sub
rorl
iret
in
xor
rorl
mov
xlat
bnd
repz
inc
cmpsl
mov
cmpsl
dec
adc
aaa
testl
or
mov
in
repz
cmp
dec
or
mov
xor
dec
inc
cwtl
add
dec
mov
lahf
jmp
mov
fistps
in
mov
ret
pop
test
jecxz
mov
mov
hlt
idiv
mov
mov
cld
add
cli
out
addr16
push
adc
and
push
xchg
sti
cmp
fcomip
je
push
test
xchg
cmpsb
sub
in
or
inc
or
jne
jne
sub
mov
mov
jmp
loopne
sbb
sarl
aas
cmp
scas
cmovnp
std
ljmp
iret
jmp
lock
ljmp
or
std
fildl
jb
push
stos
pop
mov
dec
cli
inc
sub
xor
and
cli
movsl
in
mov
aad
adc
mov
inc
adc
inc
jns
pop
enter
add
outsl
ljmp
movsb
pop
and
cmp
ds
mov
shlb
hlt
lods
cmp
inc
test
cli
and
mov
mov
je
xor
movsl
pop
out
test
pop
dec
shrb
mov
movsb
cmpsb
das
test
add
sbb
sub
jl
add
orb
push
or
lods
test
jb
jmp
and
jg
pop
out
aas
inc
out
push
adc
push
repnz
cltd
push
inc
xor
lods
push
jo
xchg
inc
xchg
or
movsb
jne
cld
clc
adc
push
ljmp
xlat
dec
mov
add
jecxz
ds
pop
and
cmp
sub
loope
mov
ljmp
cli
sub
repz
adc
xlat
cli
je
ljmp
cwtl
inc
out
cmp
dec
call
lods
or
or
push
test
cmpsb
push
push
add
int3
sub
daa
repz
cmp
test
add
gs
xchg
add
lret
mov
mov
mov
sahf
std
iret
dec
lret
mov
cld
mov
dec
lret
mov
stc
cltd
clc
idiv
or
mov
notb
hlt
stc
xchg
jns
xor
jl
dec
inc
mov
jbe
dec
cli
hlt
adc
call
xor
ljmp
ss
imul
in
jecxz
mov
scas
or
jns
sahf
inc
sti
pop
sbb
loop
hlt
or
cmpsl
jle
mov
shll
bound
inc
aaa
cli
mov
adc
dec
xor
xor
xor
shll
enter
pushf
xor
pop
ljmp
mov
inc
add
add
push
and
in
xchg
sub
jb
ljmp
in
fildll
add
mov
xchg
sub
outsb
ds
aas
cli
mov
jl
dec
clc
cmp
inc
jnp
lea
pushf
cmp
lock
jnp
add
xor
popf
xor
stc
sbb
add
cltd
xchg
imul
sub
and
inc
out
push
sub
xchg
repnz
ds
lea
addr16
push
ljmp
cltd
add
push
or
and
xlat
das
xchg
inc
push
sub
cmc
inc
dec
xlat
inc
and
shll
testl
dec
out
fcompl
add
leave
jb
adc
fcomi
dec
or
and
nop
nop
xchg
jle
pop
xchg
mov
xor
stos
mov
mov
hlt
xchg
push
sbb
imul
mov
sub
jg
arpl
dec
lahf
cmp
jmp
jns
adc
daa
add
in
mov
push
xchg
cmpsl
jle
cmp
xchg
jl
aaa
xchg
jae
cmp
sub
mov
add
sbb
stc
lcall
jns
add
pop
mov
popf
shl
xchg
cld
ret
sbb
popf
subl
fsubrl
scas
stc
aam
daa
jmp
add
jb
scas
stc
pop
inc
scas
xchg
xchg
dec
or
adcl
leave
adc
xchg
pop
loope
sbbl
push
pop
pop
jno
sbb
push
adc
hlt
adc
dec
and
fcoml
js
movhps
ret
inc
jle
testl
icebp
shll
rcll
pop
dec
cmpsl
push
out
aas
std
mov
fmuls
sub
call
jmp
hlt
xor
js
lahf
and
ja
xor
out
jae
mov
es
fisubrl
imul
scas
ret
rol
mov
jmp
push
hlt
sar
xchg
cli
mov
aaa
je
repz
je
inc
cli
imul
arpl
std
js
int
mov
cmpsl
fidivrs
jecxz
jl
cmpl
mov
push
lods
jle
lcall
and
mov
scas
mov
mov
jle
cmp
mov
std
mov
mov
stos
pushl
movsl
outsl
repz
sti
cld
dec
daa
dec
add
inc
loopne
mov
pop
cld
icebp
loopne
icebp
decl
xor
inc
mov
stos
xchg
xchg
add
adcb
nop
cwtl
lea
xchg
xchg
nop
mov
popf
lcall
shlb
nop
std
mov
nop
fwait
lcall
xchg
imul
adc
dec
data16
push
push
inc
data16
cmp
add
adc
dec
data16
adc
jo
or
inc
data16
clc
lods
xchg
pushf
xchg
enter
add
push
out
jbe
dec
icebp
fdivp
stc
cli
adc
sar
out
cld
movsb
or
cli
clc
std
call
aas
icebp
mov
out
clc
jnp
shll
stc
incl
test
mov
mov
mov
fildll
rcrl
fwait
pushf
mov
cwtl
inc
mov
sahf
mov
call
mov
pop
rorl
testl
jecxz
fadd
jne
inc
mov
gs
out
or
das
sbb
jmp
arpl
hlt
fs
push
xor
adc
iret
gs
push
repz
aad
mov
xchg
xchg
xorl
pop
xchg
gs
dec
inc
xor
push
inc
mull
mov
xchg
gs
xchg
jno
test
fwait
stos
mov
lret
lcall
imul
sub
xchg
jge
or
cmpsb
das
fdivrp
dec
fcmove
int
aad
xchg
hlt
clc
int3
sub
fstpl
movsb
das
mov
in
xchg
sub
inc
xlat
jle
xlat
jp
movsl
inc
repz
repnz
idivw
jg
and
in
out
jg
xor
shll
xchg
int
jmp
mov
mov
mov
arpl
jmp
and
and
inc
shl
jmp
aas
jg
mov
lahf
jmp
xor
out
jecxz
scas
pop
mov
cmc
daa
xor
ljmp
lcall
sti
int
test
or
loope
sahf
sub
xor
ret
mov
lahf
lock
jl
out
jne
cmp
cmp
mov
sub
shlb
addl
sahf
cmp
inc
xlat
faddl
mov
loopne
xchg
fs
lahf
dec
scas
stc
pop
fucomi
fwait
lahf
repnz
mov
sub
cmpsl
call
scas
dec
cmpsl
shlb
es
mov
fneni(8087
mov
jnp
stos
inc
pop
shr
sbb
jmp
dec
cltd
xlat
cmp
fbld
mov
push
int3
and
mov
out
fsubrl
mov
jg
nop
pushf
cwtl
and
lods
pop
pop
aaa
dec
and
ljmp
test
mov
iret
jmp
pop
dec
mov
mov
dec
cmp
fists
mov
out
mov
repz
in
scas
jnp
lea
loopne
mov
lock
fsubrl
outsb
inc
dec
clc
inc
out
idivl
pop
cli
testb
or
mov
cld
mov
insb
xchg
mov
xor
pop
cwtl
enter
dec
out
je
jns
mov
inc
hlt
cmp
cmpsl
pop
fwait
rclb
bound
inc
pop
cld
mov
loope
adc
setnp
push
inc
or
cmp
lock
sarb
mov
imull
jne
push
imul
ret
mov
ficoms
inc
jbe
add
fisubrl
jle
pop
test
xchg
or
into
mov
aad
leave
and
insl
cmp
add
and
jg
clc
push
or
jne
es
or
mov
call
lock
xchg
int3
imul
sti
dec
adc
call
inc
testl
iret
jnp
nop
or
cmpsb
in
add
test
xlat
mov
notl
pop
xchg
les
adc
pop
rorl
outsl
daa
pop
iret
loop
cli
inc
cmp
push
push
and
loop
mov
in
fists
je
xlat
mull
bound
mull
adc
sbb
lahf
cmp
aaa
jp
movsl
cli
mov
inc
and
xlat
mov
iret
mov
out
in
repz
xchg
js
stos
clc
stos
jl
and
shll
mov
das
cmpb
jmp
les
mov
lds
popf
add
lret
add
pop
ret
in
cmp
test
out
fs
mov
dec
push
sub
loope
dec
lods
std
xchg
cmpsb
scas
dec
xchg
xchg
or
shlb
movsb
sub
xchg
cmp
outsb
xor
jle
test
enter
sti
fwait
pop
test
jbe
clc
push
enter
lret
fwait
nop
jbe
pop
insb
lcall
xchg
imul
es
mov
mov
sub
lcall
cld
fs
adc
and
and
pop
lret
push
sbb
xchg
xchg
int
outsl
add
push
ret
adc
scas
cli
daa
scas
in
inc
jg
cmp
jmp
sbb
cli
pop
xchg
not
jmp
mov
xor
cmp
out
lods
lods
cld
cmpb
mov
mov
jmp
std
ljmp
jl
jae
pop
mov
les
lock
subb
jl
inc
stos
dec
mov
sub
je
cmp
xchg
mov
aad
pop
je
cltd
jle
jb
inc
dec
and
ret
testb
addr16
scas
mov
pusha
jbe
pop
mov
mov
and
mov
lock
or
xchg
mov
jl
jl
lea
mov
jp
mov
add
aam
loope
cmc
cld
and
and
cld
mov
scas
mov
add
cld
in
repz
mov
ficompl
in
idiv
jl,pt
std
scas
and
pop
jl
sti
fnstenv
adc
sbb
and
add
cmp
mov
mov
jbe
fwait
push
mov
and
push
repz
cli
je
ja
push
and
xor
jno
mov
adc
add
mov
cs
adcl
ds
pop
cld
pop
sub
incb
out
cltd
nop
inc
nop
hlt
outsb
mov
cltd
out
adc
cmc
cld
mov
mov
push
mov
jmp
leave
mov
hlt
pop
std
mov
sbb
dec
inc
and
testb
jbe
jle
sbb
cld
mov
outsb
cld
mov
push
xchg
mov
out
mov
xchg
and
mov
or
add
mov
ljmp
lods
add
and
jmp
xor
out
cmpb
sbb
je
add
push
call
cld
mov
rcl
fcmovnb
xlat
add
jmp
cmpsb
xrelease
fucomip
dec
add
push
jmp
int3
je
jl
hlt
inc
inc
enter
sti
out
pop
mov
jmp
cs
adc
in
mov
add
add
jns
scas
cmc
mov
cwtl
mov
leave
cmp
lods
arpl
pop
in
outsl
cmp
cmp
cs
xchg
xchg
sti
xchg
lods
sbb
mov
insb
fisubrs
out
add
cmc
notl
scas
add
mov
sbbb
cmp
movl
idivl
je
ret
mov
or
movsb
mov
pop
dec
dec
mov
in
out
test
je
dec
inc
lret
lcall
pop
mov
adc
aaa
jmp
jmp
jnp
push
testb
or
cmp
out
test
jmp
addr16
add
jnp
negl
inc
ret
jge
aas
arpl
mov
mov
pusha
test
not
dec
scas
cmp
xlat
lcallw
xchg
inc
push
push
adc
or
or
pop
push
push
hlt
add
faddl
mov
lahf
or
mov
test
shr
add
notb
divb
jns
adc
je
pushf
dec
mov
jne
repnz
pop
in
cli
std
xchg
sbb
dec
add
xor
cltd
idivb
lahf
dec
outsl
mov
scas
pop
out
mov
pop
hlt
mov
sti
in
movsl
sub
and
shll
fs
add
xchg
scas
data16
dec
cli
mov
xlat
leave
leave
sub
repnz
cli
inc
in
xchg
pop
shll
mov
iret
neg
cltd
int3
test
shl
in
in
jb
clc
push
mov
divl
push
in
push
fbld
mov
mov
xchg
fwait
xchg
lcall
nop
push
mov
mov
fwait
mov
add
xchg
popf
lea
sbb
nop
fwait
mov
mov
mov
ljmp
popf
dec
or
rol
cmpsb
icebp
sahf
mov
adc
cld
xchg
mov
call
xchg
mov
sub
inc
add
xlat
jnp
test
xchg
mov
add
add
outsl
cld
test
xchg
jecxz
lea
xchg
lcall
dec
xchg
mov
cli
stos
xchg
repz
les
stc
movsb
dec
push
aam
lcall
sahf
jns
scas
mov
pushl
push
inc
and
jb
xchg
nop
jns
mov
testl
ss
nop
mov
xchg
xchg
cmp
cmp
dec
mov
mov
mov
mov
dec
mov
and
repz
sub
add
xchg
and
lcall
hlt
lahf
movsb
and
xchg
xchg
repz
mov
popf
pop
push
psllw
jmp
jo
int
xor
loopne
je
aad
lea
outsl
adc
dec
xchg
data16
out
xchg
sahf
mov
cmp
jmp
jle
rorb
decl
les
sar
dec
pmaddwd
icebp
mov
lods
mov
xchg
jp
js
push
std
fmuls
xchg
in
call
cmp
pusha
xchg
lcall
cmp
ds
xchg
mov
out
in
mov
mov
dec
sarb
nop
mov
and
fsubrs
mov
cltd
xchg
mov
lods
ljmp
inc
add
popl
sahf
pushf
jne
mov
ljmp
cs
mov
jae
out
bnd
std
dec
dec
mov
jns
leave
xchg
mov
xlat
int3
in
data16
add
lret
inc
fsubrs
fs
std
testb
and
rcrl
mov
into
fcomp
gs
das
mov
mov
into
pop
cmc
neg
sbbb
add
into
ja
push
arpl
xor
pop
into
add
ljmp
mov
add
add
lahf
int
int
int
int
int
int
int
int3
ljmp
int3
mov
pusha
int3
push
int3
add
add
add
icebp
lret
loopne
lret
jae
gs
push
lret
out
lret
movsl
lret
or
lret
sti
add
leave
out
pushf
leave
popa
leave
cmp
sub
adc
pop
cmpsl
leave
jmp
in
fcmovne
add
add
aam
leave
enter
enter
enter
enter
fadd
int
cmpsb
sahf
xchg
movl
mov
loop
mov
les
les
test
add
add
rol
ret
xchg
ret
dec
ret
inc
ret
aas
ret
fadd
enter
ret
ja
jno
imul
fwait
sub
gs
push
ret
or
push
mov
inc
aad
icebp
arpl
cs
or
insl
and
clc
push
mov
push
lods
mov
push
dec
push
push
orl
pushf
fmull
sbb
push
clc
popl
push
test
jo
push
shl
mov
lock
fs
cld
jmp
test
push
fbld
int
pop
push
jl
jae
dec
sar
aaa
dec
push
in
iret
cmp
lock
in
fistps
ljmp
sub
lock
leave
daa
pop
add
jl
enter
push
cld
mov
cli
outsl
stos
enter
mov
clc
cld
xlat
jmp
daa
or
pop
jmp
dec
mov
fwait
arpl
adc
addr16
gs
xchg
frndint
mov
pop
cltd
xchg
dec
xor
xchg
gs
data16
mov
lret
rol
mov
lea
mov
ja
push
dec
cmp
das
and
add
gs
mov
mov
lret
mov
lret
mov
jnp
push
xor
pop
or
cmp
cld
fcmovne
lret
mov
xor
cld
dec
push
sub
mov
imul
lret
mov
fcomip
add
cld
sub
mov
lret
inc
pop
jnp
xchg
pop
pop
mov
jno
adc
clc
pop
inc
jns
adc
sti
hlt
xchg
clc
popa
rclb
xchg
gs
xchg
cmp
and
and
mov
loope
sub
mov
int
mov
adc
jmp
clc
aas
hlt
xchg
xor
push
cwtl
inc
lahf
cld
cmp
jg
xor
cld
dec
jg
and
adc
imul
scas
mov
orb
xchg
adcb
in
out
test
mov
jg
xchg
mov
stc
loopne
cltd
pushf
mov
lods
mov
stos
test
lods
mov
mov
nop
cltd
mov
add
mov
mov
xchg
inc
xchg
xor
out
cwtl
nop
dec
fimull
mov
imul
filds
clc
idiv
ds
leave
std
pusha
idiv
cld
xchg
inc
int3
jge
rcr
lahf
pop
dec
push
mov
out
dec
mov
sti
sti
jmp
not
sahf
fdivr
and
cmpsl
and
cld
ficomps
scas
or
ror
dec
xchg
call
imul
loopne
mov
xchg
dec
outsl
loop
fildll
dec
stc
notl
mov
jmp
cmc
mov
add
mov
mov
insb
mov
aas
mov
in
jmp
pop
aad
scas
add
fnstsw
cmpb
jns
sub
incl
andb
cwtl
test
int
cld
psubb
and
fcomp
jl
mov
sbb
and
mov
shlb
shrl
dec
or
jp
mov
mov
lea
and
cld
mov
mov
sub
mov
mov
stos
pusha
pushf
mov
dec
mov
xchg
jne
lahf
aam
mov
mov
or
dec
inc
int
nop
mov
lcall
into
dec
mov
das
fwait
add
push
in
ja
in
and
popf
sahf
xchg
in
stc
dec
outsb
cld
xchg
cld
jle
clc
push
les
rorl
jle
xchg
push
inc
out
dec
push
lods
je
jns
rcr
test
push
adc
adc
stc
add
add
rorb
xchg
xchg
pushf
gs
add
pop
fdiv
or
inc
dec
sbb
cmp
add
xchg
or
movsb
fdivl
dec
sub
or
out
ds
cld
cltd
shlb
rol
mov
mov
sahf
mov
ds
lcall
mov
es
dec
fmul
push
sbb
adc
and
out
out
ljmp
aas
adc
dec
test
mov
hlt
scas
insb
lock
push
idivl
push
and
or
int3
sub
dec
inc
loope
into
mov
xor
add
mov
orl
mov
addb
push
jbe
fnstsw
adc
int3
aas
cmp
out
repnz
or
stos
xchg
xchg
xchg
stc
xchg
xor
stos
sti
call
and
out
jg
ja
jmp
jmp
das
dec
inc
decl
sahf
ljmp
mov
inc
test
inc
dec
mov
pop
add
adc
dec
or
pop
std
test
jbe
dec
jb
std
lahf
pop
insb
pop
std
or
jl
fimuls
test
daa
pop
xor
inc
add
mov
xor
enter
scas
jb
out
adc
cli
scas
cmp
push
jbe
push
pop
push
loop
dec
or
loop
add
jg
sbb
dec
fistpl
sub
in
cld
pop
cmpsb
jg
jne
mov
push
mov
lods
popf
mov
cmc
dec
add
and
scas
cmp
in
adc
mov
mov
add
sub
pop
int3
add
fildll
cmp
out
jb
adc
ret
jp
sbb
ss
dec
out
in
fsubl
movb
lock
and
lock
mov
lock
adc
clc
f2xm1
repnz
cli
rorl
jl
push
mov
mov
adc
movb
xor
out
adc
sti
arpl
repnz
ja
dec
push
mov
fs
mov
not
cmp
dec
jg
pop
ja
ret
lods
jp
pop
out
pop
repnz
sahf
div
loope
aam
inc
movsb
scas
pop
addr16
lods
and
paddq
out
add
cld
cmp
je
insl
sub
scas
test
ret
aam
mov
xor
std
ljmp
std
lock
xor
adc
out
call
fisttpll
cwtl
out
or
add
adc
out
fldl
ljmp
std
and
mov
inc
notb
mov
xor
push
or
imulb
hlt
leave
outsl
ret
jnp
insb
xlat
add
cli
clc
cmp
xchg
mov
pop
pop
lahf
push
je
out
lahf
sub
mov
pop
in
repz
idiv
cmpb
jmp
pop
or
sti
cmp
jp
enter
sub
jl,pn
cmp
mov
dec
and
pop
repnz
adcb
jmp
incb
test
mov
in
sbb
xchg
fdivr
jl
xchg
push
enter
test
mov
repnz
lods
hlt
idivl
out
lds
xchg
fiadds
out
jge
mov
fistpl
adc
adc
repz
inc
lock
mov
jb
dec
repz
pop
jmp
mov
jne
jg
icebp
pushl
repnz
vpcomq
aad
mov
addl
xor
cmp
jmp
mov
into
xlat
cmp
cmpsl
mov
out
out
sub
sti
pop
mov
pop
mov
iret
mov
in
jg
jg
pop
sbb
mov
mov
pushl
mov
ljmp
fistl
xor
jle
mov
xchg
ret
cld
xor
in
sti
pop
scas
imul
aaa
xor
add
sti
stc
lret
push
in
fildl
lds
ljmp
inc
jp
aad
test
scas
cs
add
fisttpl
mov
incb
fstl
mov
pop
xchg
mov
loope
icebp
icebp
xchg
loopne
mov
neg
jb
leave
mov
imul
xor
cmp
popa
movsl
icebp
and
sbb
loopne
add
add
adc
inc
xchg
cmc
jb
cvtps2pd
cltd
pop
inc
stos
repz
inc
out
pop
pop
inc
mov
mov
in
xorl
jecxz
pop
lock
jg
dec
outsb
icebp
mov
repnz
cmpsl
cmp
lods
inc
icebp
inc
adc
pop
mov
lock
fucomip
idivb
enter
push
gs
pop
repz
mov
dec
fistpll
incl
iret
mov
insb
mov
stos
iret
outsl
mov
ror
aam
jle
xchg
iret
ror
push
out
test
pop
pop
ja
lods
jp
pop
in
out
test
dec
pop
jnp
shlb
pop
mov
hlt
fwait
mov
test
dec
xchg
stc
cltd
mov
fsub
imul
fidivrs
in
stc
mov
ljmp
adc
jmp
ljmp
in
or
out
mov
into
inc
imul
dec
data16
mov
xchg
rcl
jmp
icebp
push
stos
jecxz
flds
inc
sahf
mov
sti
incl
das
sti
adc
or
or
ljmp
fsubp
sub
mov
fsub
jmp
cwtl
mov
adc
adc
mov
cli
in
jno
pxor
push
add
add
add
or
push
xchg
sub
jp
icebp
push
out
xchg
nop
ficoms
sar
cwtl
xchg
arpl
xchg
xchg
jmp
pusha
std
cli
andb
outsl
cmp
sahf
cmp
ret
xchg
popa
aad
pop
shll
or
mov
or
push
or
xor
incl
cmp
xor
scas
ret
scas
xchg
sti
sbb
fidivrs
dec
sti
fwait
add
sahf
add
add
mov
sbb
jg
imul
xchg
mov
addb
dec
std
inc
sysret
orl
mov
scas
sbb
add
les
pop
jne
in
jle
test
jmp
mov
jnp
les
jb
cmp
pop
xchg
mov
scas
adc
pop
das
and
je
les
jecxz
lret
and
jbe
pop
je
les
test
or
mov
xlat
cltd
pop
or
xorl
les
sub
push
jae
fildl
mov
test
ljmp
or
xchg
jmp
ret
push
jbe
cmp
mov
add
or
inc
sub
mov
les
adc
mov
mov
ljmp
xor
mov
into
notl
adc
or
push
jmp
mov
hlt
sti
and
loopne
jb
leave
and
cli
push
out
cmp
sub
add
mov
hlt
cmp
cmp
out
aaa
ds
idivl
fisttps
cmp
and
add
int3
sub
hlt
cmp
roll
enter
imul
nop
out
jle
and
mov
xor
jns
out
mov
push
out
mov
ljmp
jl
clc
jecxz
sub
jmp
cli
mov
repz
idiv
push
sbbb
ljmp
jl
inc
cld
or
std
push
fistps
fdivrl
cmp
in
and
test
ds
jl
stc
out
hlt
or
sub
mov
pop
push
std
pusha
mov
adc
fdiv
sti
mov
aam
mov
mov
xchg
inc
jns,pn
jne
fcmovu
cld
das
lahf
cld
sub
cltd
scas
jl
xchg
mov
cmp
out
pop
fistpll
in
mov
push
or
out
jne
ret
mulb
and
cmp
iret
mov
jmp
test
nop
je
add
xchg
movb
mov
or
cli
cmp
aam
into
sti
aas
pop
sti
rorb
mov
scas
mov
clc
sarl
and
or
ljmp
jp
jmp
pusha
jg
decl
std
pop
cli
mov
test
loop
cli
test
sub
test
cmc
test
lods
test
aaa
cli
mov
lock
test
fidivrs
test
jmp
arpl
test
test
adc
in
out
movsl
cmp
test
mov
mov
test
pop
dec
fiadds
cmpsb
mov
int3
ss
nop
xchg
add
fnstcw
mov
lea
adc
pushf
cs
sub
add
cwtl
jl
pop
gs
mov
push
dec
jmp
repz
dec
in
std
fidivrl
mov
jmp
jo
int3
cmc
mov
icebp
add
pusha
jb
sbb
rol
mov
add
mov
loop
mov
push
mov
lods
jbe
repz
lret
movsb
pop
mov
call
jb
movsb
add
jb
or
cmpsl
add
push
movsb
add
cmpl
sub
add
jbe
or
mov
lret
pop
aaa
das
sub
jmp
push
movsb
mov
aas
mov
cmpsb
mov
mov
cmp
or
faddl
icebp
cmc
addb
out
fmull
add
out
jb
call
add
add
sub
adc
cmpl
add
hlt
or
enter
cld
out
jb
enter
aas
or
adc
sbb
jmp
test
mull
mov
cli
cmpsb
jmp
and
add
inc
inc
cmpsb
ds
ds
jmp
pcmpeqb
fmull
or
mov
pop
rclb
inc
rolb
xor
hlt
or
or
add
mov
addb
jb
in
and
or
orl
je
adc
add
cli
inc
jmp
stos
inc
andl
movsb
xchg
push
das
aas
fiaddl
in
stos
in
adc
push
add
cmp
je
and
cmpsl
out
sub
xor
and
movsb
sahf
sub
and
movsl
push
mov
mov
xchg
sub
fisubl
mov
jecxz
mov
sub
add
or
push
adc
jp
pop
scas
sbb
add
pop
pop
jl
hlt
fnstcw
jl,pt
or
sahf
aas
lret
pop
daa
daa
addr16
adc
ds
mov
jmp
das
and
hlt
lahf
jg
xlat
loopne
or
inc
xchg
adc
push
add
je
pop
mov
ret
mov
dec
movsb
stos
mov
lock
lock
sar
aad
daa
push
push
iret
idiv
sub
mov
inc
sub
or
faddl
sub
out
fucomp
outsl
xchg
adc
sub
enter
and
sub
and
clc
lcall
pop
cmc
and
cld
stos
add
add
sub
inc
dec
pop
mov
arpl
mov
mov
je
ret
int
test
repz
test
inc
pop
shrl
sahf
jmp
rorl
movsb
sbb
fdivp
dec
mov
ds
dec
adc
cmp
sub
daa
sub
hlt
movsb
add
stos
je
popf
or
loop
jns
pushf
mov
clts
faddl
andb
mov
call
xchg
stc
dec
daa
cld
or
adcl
lea
or
movsl
mov
cmpsl
mov
ds
and
fcompl
pop
xchg
in
xchg
fcoml
pop
dec
mov
sub
push
or
out
shrb
pop
jae
push
sub
jns
xchg
lock
dec
jae
jns
mov
mov
das
jo
inc
inc
dec
push
fisubl
jle
pop
daa
sub
mov
pop
jp
xorb
in
fsubl
es
dec
shll
sub
adcb
dec
push
and
movsb
dec
and
das
dec
sbb
push
ficoms
cmp
pop
dec
cmp
jbe
aaa
jo
clc
enter
imul
and
scas
aad
ja
xchg
js
sub
bound
push
sub
icebp
sub
negl
jo
fsubl
es
je
jmp
mov
dec
sbb
and
mov
mov
and
push
sbb
xchg
jo
and
sbb
dec
lcall
pop
pop
adc
or
mov
or
or
std
nop
cwtl
sub
icebp
cmp
sub
cmp
aad
pop
xchg
jo
jae
mov
or
sub
das
out
push
mov
dec
xchg
push
jecxz
sti
push
add
int3
add
xchg
pop
jp
jle
mov
jge
out
push
gs
shl
xchg
dec
andl
rcr
bound
add
enter
mov
mov
sbb
push
xchg
jo
fildl
and
int3
dec
adc
cmp
repnz
push
mov
je
loope
xor
in
push
xor
xchg
lcall
sbb
test
xor
lahf
mov
or
es
mov
add
xchg
sub
popl
inc
inc
cmp
cmpsl
dec
sbb
sub
mov
cmp
sbb
cmp
cmp
xchg
add
hlt
pop
daa
sbb
cwtl
int3
jmp
int3
or
iret
adc
and
mov
jmp
pusha
icebp
roll
cli
loop
sti
xchg
fsubrl
adc
rolb
movsb
jecxz
mov
xchg
push
call
stos
push
and
mov
or
sbb
add
lods
imul
pop
sbb
mov
adc
loop
cld
in
repz
imul
cmp
cmc
sbb
xlat
insb
jae
sub
nop
int
pop
out
mov
in
pop
dec
ljmp
cmp
xchg
mov
jg
dec
stc
mov
mov
bnd
push
cmp
fsubrl
out
test
in
jae
xchg
lea
int3
loopne
pop
insb
add
adc
loop
into
cwtl
popf
and
push
push
sub
shrb
lcall
lcall
cmp
mov
sub
xorb
xor
xrelease
cmp
mov
les
jp
mov
roll
js
dec
lcall
out
jp
mov
pop
out
sbb
jl
enter
mov
push
test
inc
in
adcl
mov
add
int3
mov
out
sbb
inc
outsb
and
and
cmc
test
loopne
pop
adc
pop
adc
inc
jle
loopne
out
divl
nop
inc
jge
lods
push
sub
sbb
sub
sub
adc
lret
inc
into
adc
jns
lcall
int3
cmp
sub
aad
lock
or
mov
inc
das
sbb
mov
into
movsb
orb
mov
pop
jbe
je
sub
push
and
repz
das
ror
adc
stc
je
dec
cld
pop
lahf
test
add
or
in
cmpsb
les
cmp
xchg
xchg
add
pop
scas
enter
call
mov
xchg
out
jne
mov
xchg
ljmp
jb
xchg
movsb
push
mov
jge
mov
outsl
inc
nop
jp
xor
scas
xor
out
and
and
clc
out
les
ja
in
or
push
xor
addr16
cmp
add
scas
fwait
xchg
out
or
cmc
ficomps
jg
or
lock
loopne
mov
imul
inc
mov
xchg
lods
bnd
bound
cmp
decb
or
dec
jae
movsl
loope
adc
aam
mov
std
lret
cmpsb
jg
dec
aad
dec
shlb
ljmp
jnp
jno
arpl
jae
jl
fldcw
dec
fdivrp
leave
fadd
mov
lock
dec
inc
in
scas
in
ret
shr
repz
pusha
adc
adc
xor
xchg
aad
out
out
ja
imul
outsl
dec
sarl
loopne
add
iret
roll
xchg
mov
jmp
pop
pop
adc
mov
in
or
pop
lds
imul
add
orl
into
stos
mov
jg
mov
mov
xchg
jge
push
test
cmp
in
out
bound
dec
cmpsb
and
inc
xchg
sti
jmp
loopne
jl
imul
out
sbb
mov
jnp
adc
daa
dec
stc
push
inc
add
jb
xchg
rcrb
ds
ja
or
or
test
xchg
aaa
scas
ds
lret
mov
push
stos
cli
int3
mov
mov
scas
adc
sbb
repnz
call
xchg
fwait
loopne
test
ljmp
jb
ds
jl
int
pop
or
or
xorb
xchg
scas
jle
scas
and
or
xor
mov
cmp
fstpt
mov
cld
adc
test
mov
lods
adc
dec
pop
adc
xor
adc
push
sahf
sarl
push
fwait
cltd
xchg
cmpsb
imul
mov
xor
insb
insb
mov
ja
popf
nop
lcall
jmp
inc
xchg
lret
into
ss
data16
addr16
fistpll
push
cmp
repz
pop
nop
mov
and
mov
mov
mov
js
out
outsl
js
js
cmp
outsl
jecxz
and
loopne
shl
pop
xor
in
stos
jo
lock
loopne
mov
loopne
std
loope
sub
mov
cltd
shrb
lods
and
stos
pushf
out
ss
aad
sahf
jmp
outsb
sbb
cmp
sub
lret
adcl
xchg
shrb
xchg
out
loop
mov
mov
ljmp
fs
jb
pcmpgtd
loop
push
mov
adcl
dec
shlb
add
scas
inc
jno
push
mov
cmp
adc
out
xor
test
mov
xchg
push
sti
icebp
xor
jge
jecxz
jle
cli
cmp
sti
adc
push
incl
popa
rorb
std
adc
and
mov
sti
nop
scas
mov
call
loop
adc
mov
xorb
adc
nop
imul
aaa
mov
int3
out
int
shrl
cmpsl
and
hlt
xchg
ja
lahf
cmc
adc
xchg
loopne
lea
loopne
push
les
sar
mov
inc
mov
jns
clc
and
and
pop
mov
iret
ret
pop
mov
sti
or
pop
es
in
add
imul
sar
sbb
push
jmp
pop
aad
jl
add
cmp
nop
and
popf
pop
stc
sarb
rolb
pop
insl
jb
test
jno
stc
test
push
adc
scas
fdivr
adc
adc
in
sbb
pop
jnp
negb
push
mov
pop
xchg
adc
jnp
cltd
lock
stos
cld
sub
into
mov
je
mov
sarl
xchg
sub
push
addr16
retw
fisubl
shrb
arpl
clc
popa
in
pusha
pop
gs
and
hlt
pop
in
pop
mov
pop
in
pop
pop
gs
push
xchg
pop
pop
notl
push
push
xchg
inc
push
xchg
push
push
clc
push
call
inc
push
dec
lock
call
dec
push
inc
gs
dec
dec
dec
fwait
inc
in
inc
imul
in
inc
xchg
inc
popf
inc
xchg
fs
push
call
xchg
cld
cmp
leave
mov
in
cmp
cmp
mov
xor
lahf
and
dec
shll
ret
shll
mov
popf
mov
popf
ret
flds
jle
inc
and
and
dec
xchg
pop
rcrb
flds
xchg
xchg
sub
mov
int
fimull
push
adc
adc
adc
in
inc
pop
adc
test
in
mov
fmuls
or
or
xor
xor
mov
ret
mov
push
arpl
lahf
stos
xchg
out
rorl
add
xchg
or
mov
lock
cltd
xchg
push
and
in
hlt
cwtl
pop
mov
les
test
daa
fcom
mov
aam
into
adc
cltd
repz
lret
sbb
cmp
mov
outsl
xchg
test
loop
xor
scas
repz
cmp
mov
cmp
mov
scas
scas
ss
fisttpll
xchg
xor
enter
mov
lahf
mov
ja
icebp
arpl
cmpsl
stc
mov
jg
outsl
or
cmp
loopne
jbe
pop
push
movsb
jb
idivb
call
xlat
test
mov
lds
mov
clc
and
jae
std
testl
out
push
out
inc
stc
push
lods
dec
mov
cmc
xlat
das
adc
inc
jecxz
dec
hlt
xchg
pop
xchg
leave
out
mov
xchg
sbbl
xor
cli
test
shrl
scas
enter
aam
mov
cwtl
and
repz
test
inc
scas
shll
jbe
imul
bound
out
imul
in
scas
add
js
jb
in
test
push
in
test
cld
fisttpll
and
pop
jl
retw
loope
jbe
sar
cmp
cmp
and
stc
xchg
mov
xchg
and
xlat
js
cmc
aaa
std
xor
sub
and
pop
pop
popf
push
psrld
adc
cmpsl
stos
ss
and
xchg
mov
lods
and
out
jae
add
xchg
or
fisttps
ret
add
sub
mov
jmp
aam
jl
jb
out
mov
jle
pop
inc
imul
mov
xor
xor
cmp
jmp
jmp
xor
outsl
cwtl
lock
jae
xchg
iret
mov
jg
nop
mov
data16
or
test
shl
js
inc
or
mov
or
rcrl
sarb
mov
lock
xchg
mov
int
rclb
mov
ljmp
leave
jecxz
lods
in
outsl
cmp
in
jmp
popa
call
adc
repz
mov
cltd
xchg
sub
orb
int
das
stc
mov
mov
mov
mov
pop
int
add
movsl
xchg
pop
cwtl
fwait
xchg
sub
in
sub
mov
pmulhuw
in
or
movsl
mov
inc
int
in
mov
lret
mov
xchg
mov
sub
lcall
mov
mov
mov
movsb
lcall
mov
aas
xor
lcall
lcall
jl
mov
mov
jne
je
jae
cld
jb
cli
adc
jno
jo
outsl
mov
mov
arpl
imul
fldcw
imul
pop
lret
mov
bound
mov
xor
jl
fwait
lods
lcall
sbb
sbb
icebp
inc
sbb
sbb
xchg
gs
lcall
xchg
gs
pushf
loope
bound
pop
in
dec
loopne
daa
sub
ja
outsb
outsb
outsb
jg
outsl
dec
cmp
sti
nop
ljmp
jecxz
push
mov
add
pop
ret
ss
sub
daa
cmp
pop
push
and
shll
pop
inc
lods
inc
sbb
pop
xchg
lods
addr16
xchg
mov
or
lret
pop
push
aaa
mov
or
lock
out
push
push
lock
je
ja
pop
scas
cmpsl
cld
lods
je,pt
dec
scas
lcall
dec
cwtl
lods
out
sti
ud0
xchg
movsl
and
adc
mov
pop
sarb
jnp
repz
sti
mov
test
loop
push
ja
cli
in
idivb
push
mov
test
jg
mull
loopne
sahf
inc
scas
cli
cld
add
jg
mov
mov
xchg
xchg
adc
iret
aam
hlt
je
mov
push
inc
sysenter
cmc
repz
das
aad
shll
scas
jns
sarb
cld
aas
jg
dec
or
outsb
testl
ja
popf
divb
adc
add
sub
mov
mov
psubq
stc
mov
inc
test
dec
mov
iret
add
dec
idivb
cli
loopw
cmpsl
gs
or
fiadds
or
gs
pushf
mov
mov
mov
int3
jb
dec
pop
dec
testl
lea
xchg
add
adc
int
mov
mov
lcall
mov
or
shlb
add
mov
mov
mov
stos
je
sub
cmp
inc
enter
dec
iret
pop
pop
loop
lret
inc
jbe
jl
setg
or
sub
leave
cmc
dec
fcmovnu
clc
shrl
add
cmpsb
imul
gs
decl
xchg
gs
mov
lret
and
push
pop
in
push
mov
sub
out
clc
pop
cmp
push
cmpsb
add
cmc
lea
aam
xor
mov
sbb
cli
mov
cmp
fucom
lods
dec
hlt
out
inc
jecxz
pop
rcl
mov
decb
and
jl
out
sti
mov
sbb
pop
inc
add
sahf
sti
fs
push
ja
pop
fisttpll
cmpsb
xbegin
aas
jecxz
cmpsl
dec
fldt
shll
repz
das
lods
mov
inc
pop
mov
inc
out
iret
push
sti
jl
mov
imul
mov
aas
inc
xor
cmp
in
pop
cmp
mov
sti
ret
xor
lock
out
xor
xor
icebp
inc
jnp
int3
cmp
mov
inc
jge
les
xor
inc
jbe
add
int
les
shlb
xor
jb
inc
arpl
fdivrp
and
cmpl
jb
mov
fbld
sub
inc
lea
lcall
mov
pop
mov
cwtl
ljmp
clc
cld
xchg
test
stos
pop
fadds
pop
mov
div
xchg
xchg
xor
lock
add
mov
popf
push
shlb
xchg
popa
call
pusha
mov
pop
or
mov
jbe
bound
pop
xchg
pop
xchg
fnstcw
sahf
cmpsb
imul
mov
dec
mov
dec
lds
mov
lds
roll
mov
inc
push
aas
loopne
hlt
cmp
sbb
cmp
cmp
and
aas
mov
push
push
imul
mov
sub
sub
daa
es
inc
push
adc
test
and
and
pop
xchg
ret
stos
imul
cmp
xchg
sbb
int3
adc
mov
adc
jg
mov
push
or
pop
push
lds
ret
push
leave
mov
ja
push
movsb
std
in
mov
mov
sbb
lahf
inc
das
adc
icebp
das
adc
clc
clc
clc
or
js
scas
dec
ja,pt
shr
lock
sarb
aaa
push
mov
add
hlt
dec
mov
aas
cmp
inc
into
adc
cli
pop
shlb
cld
loope
cmp
jns
out
xchg
xchg
cmp
pop
jg
xchg
das
clc
mov
das
into
enter
imul
lods
aas
stc
mov
cld
jns
decl
cmp
sub
sti
fildll
gs
sub
jns
sub
xor
xor
sub
sahf
mov
repz
js
mov
loop
sub
jp
cli
fsubr
mov
sbb
lock
jnp
add
push
mov
mov
or
xchg
and
loop
inc
xchg
test
pusha
inc
or
or
push
addr16
or
pop
xchg
mov
lahf
xchg
int
nop
sahf
lea
pushf
lea
lret
xor
fwait
lcall
in
or
pop
sti
inc
cmpsb
repz
cld
cltd
pop
xchg
fcmovnb
and
jns
mov
fnstcw
cmpsb
leave
sub
sub
mov
scas
lret
mov
sti
jne
iret
cmp
add
loop
neg
lret
dec
jg
xchg
in
xchg
lds
xchg
lahf
adcb
ljmp
push
cmp
cmc
adc
mov
cmp
pop
ret
sub
jmp
hlt
daa
cmp
stc
jg
mov
adcb
ljmp
pop
sub
pop
in
sbb
into
cmp
or
and
lret
ljmp
add
or
push
cwtl
jl
sti
repz
cli
rcll
in
cmc
pop
wbinvd
stc
in
mov
inc
loopne
out
lods
cmp
notl
icebp
subb
dec
sti
fldenv
pop
sbb
cmp
popf
loop
out
leave
aaa
enter
cmpsb
mov
and
nop
negl
and
ja
pop
and
jecxz
shrl
xchg
sub
rorl
inc
icebp
cmc
and
mov
xchg
xchg
in
jns
cmc
cmp
mov
aaa
adc
push
adc
scas
cld
je
cmp
out
pop
and
push
mov
mov
gs
xchg
gs
nop
cltd
mov
sahf
lea
sahf
in
xchg
push
and
aam
push
sbb
mov
sbb
inc
sbb
pop
mov
loopne
xchg
in
repnz
sub
decb
fmuls
dec
adc
or
stos
xor
mov
aam
mov
incb
mov
fisttps
popf
mov
adc
jne
fisttpl
add
daa
jb
cmc
xchg
iret
rorb
out
xor
pop
insl
loopne
call
inc
scas
loope
in
movl
add
xor
jmp
cld
call
xchg
mov
imul
mov
pop
jle
xor
lock
stos
inc
dec
cwtl
outsb
adc
jmp
add
ret
xchg
pushf
test
rcrb
push
loop
leave
aam
push
in
js
repz
es
out
jmp
mov
pop
test
dec
sub
cmp
push
rolb
std
adc
jecxz
cmp
jle
out
dec
cmp
icebp
cli
and
testb
sbb
pop
in
and
stc
pop
mov
outsb
jne
pop
adc
jne
jmp
stc
xchg
int3
and
adc
pop
out
loope
rorl
jb
mov
cmp
stc
loopne
stc
lock
xor
je
mov
stos
adc
hlt
ja
test
into
jo
push
pop
xor
mov
cld
xchg
sbb
sub
cmp
stos
sub
pop
out
test
add
ret
inc
ret
jge
fldcw
out
int3
hlt
ljmp
ja
mov
in
cli
outsl
leave
and
insl
mov
sti
in
mov
sub
pop
jmp
incb
mov
fwait
std
add
pop
pop
int
mov
outsb
xchg
xchg
mov
repz
outsb
outsb
repnz
adc
xchg
clc
jg
jmp
js
clc
pop
add
add
in
xchg
jecxz
cli
gs
repz
push
scas
jecxz
fucom
leave
and
movsb
in
mov
mov
addr16
add
fistl
jne
cmpsl
lods
jbe
inc
imul
iret
pop
loope
shl
pop
mov
push
rorb
add
and
pop
mov
mov
in
push
xchg
xlat
mov
js
out
push
sub
fsubr
popa
sub
dec
lahf
mov
fidivrs
jle
fs
popa
cmpsb
out
dec
outsb
cmc
daa
mov
push
repz
mov
rcll
into
cmp
pop
mov
mov
add
dec
mov
sub
stc
sub
lea
push
and
mov
add
stc
dec
lret
fdivs
rcrl
shrb
stc
xchg
mov
add
icebp
leave
leave
negl
pop
fcomp
out
dec
pushf
nop
xchg
fcomp
fcomp
lea
fwait
xchg
mov
es
nop
push
xchg
adc
xchg
push
jg
add
pop
in
sub
daa
ret
sub
frstor
and
cmpsl
and
xor
loop
add
push
stc
sbb
inc
sbb
push
sbb
jle
scas
lea
daa
dec
sbb
sbb
scas
pop
add
add
mul
adc
daa
add
clc
mov
repz
mov
xchg
cli
in
push
divb
jne
inc
push
sbb
add
sub
or
outsl
add
add
jg
int3
jnp
iret
and
xchg
xor
ss
enter
pavgb
imul
or
icebp
test
testl
jp
je
mov
pop
mov
and
out
sahf
push
mov
mov
add
test
je
mov
shr
cmpsl
pop
push
dec
pop
bswap
push
out
add
ret
mov
stc
je
dec
cli
push
enter
int3
cs
cmp
add
fcmovnb
mov
fidivrs
mov
sti
sahf
mov
inc
pop
decb
jb
sub
or
fldl
or
and
xcrypt-ctr
cmpsl
sahf
cmp
cs
xor
xchg
jae
mov
pop
shl
mov
ret
lock
mov
clc
pop
or
dec
stos
push
add
cmp
mov
repz
jnp
sti
xchg
sar
xchg
xchg
mov
in
sarl
xor
inc
pop
jb
jmp
mov
dec
into
sti
cmp
incl
push
dec
pop
test
xchg
in
jp
xchg
call
mov
inc
je
test
pop
test
out
clc
stos
and
lcall
sub
nop
mov
lret
jmp
xor
lret
mov
dec
je
in
xor
iret
push
mov
cmp
xorb
je
xlat
fimull
add
je
inc
xor
xlat
loopne
sarl
mov
ja
sbb
lea
adc
pop
dec
jmp
js
xchg
add
sbbb
cmpsl
stc
inc
pop
jbe
sti
jbe
and
add
scas
je
je
clc
test
cmp
or
das
pop
fidivl
je
jp
in
pushf
and
out
dec
xchg
orb
enter
mov
ds
jg
in
ret
mov
mov
sbb
negb
shrb
xchg
push
data16
out
out
xlat
mov
jecxz
imull
out
ret
repnz
into
push
xlat
adc
jl
push
inc
jp
std
add
xor
cmpsb
aaa
add
jecxz
jmp
xchg
xlat
pop
inc
out
push
dec
test
dec
cmp
mov
xchg
fs
cmp
orl
inc
cmp
jl
jecxz
jmp
add
pop
sbb
cmp
mov
or
lea
jb
out
or
lock
ds
adc
push
int3
adc
je
cltd
xchg
stc
mov
movsl
add
pop
je
push
stc
push
cmp
mov
pop
lock
out
out
int
sub
mov
test
jmp
push
xchg
xchg
jg
mov
andb
xorb
mov
repz
mov
jbe
scas
lea
daa
cmp
aaa
push
xor
xchg
fdivrs
sub
mov
movsb
cmp
lods
cmp
cmp
fstpt
arpl
enter
or
out
jnp
mov
aaa
jg
test
or
and
fidivrl
jecxz
movsb
inc
daa
cmp
cmc
scas
mov
aas
dec
out
mov
or
sbb
fs
sub
push
in
roll
popa
xlat
mov
nop
enter
cmp
or
mov
push
push
sar
repz
or
sub
out
sarb
mov
in
out
jle
fnstcw
mov
xor
aaa
pop
fwait
aas
sub
je
cltd
add
cmp
ds
sub
adc
aas
push
push
jne
out
dec
dec
jbe
jge
lods
movsb
dec
mov
mov
sub
cld
cmp
mov
test
jmp
cwtl
mov
fs
jmp
mov
dec
stos
cmc
repz
push
jmp
fdivrp
psrlq
mov
xchg
pop
iret
lds
daa
imul
in
dec
mov
ret
jbe
jmp
cmp
push
mov
ds
in
add
fs
hlt
cwtl
mov
adc
mov
stc
lahf
sbb
mov
and
cmpsl
in
and
decl
in
repz
xchg
inc
pop
lds
daa
or
sahf
addr16
test
das
xchg
mov
add
lahf
out
xlat
mov
mov
std
xchg
xchg
shll
shr
neg
shll
inc
mov
into
mov
mov
dec
jb
adc
mov
stos
leave
fistpl
idiv
cmp
jmp
daa
lret
ret
scas
inc
imul
mov
bswap
jge
test
loopne
jp
dec
jl
xchg
fsubp
pop
mov
pop
cmp
jge
mov
lea
sbb
mov
arpl
xor
pop
dec
pop
jp
push
add
test
cmp
mov
dec
push
xchg
jns
jmp
repz
pop
sbb
xchg
jl
lods
mov
xor
testb
ret
cmp
lcall
pop
stos
cld
lret
push
out
lcall
fisubs
mov
rclb
cli
xchg
pop
push
into
pop
aaa
aas
icebp
mov
pop
mov
jmp
cwtl
pushf
in
pop
mov
out
pop
xchg
jnp
push
fisttpll
je
xchg
mov
les
popl
addr16
ret
jmp
lret
cmpsb
pop
pop
leave
mov
adc
cmp
je
shrl
adc
mov
sahf
ljmp
mov
mov
push
fstl
call
lods
insb
xor
in
inc
repnz
dec
or
rclb
lock
rcr
pop
lock
push
xchg
ret
loopne
hlt
sbb
xchg
lods
add
jp
push
sbb
dec
es
pop
loop
mov
pusha
scas
jbe
pop
push
cmp
jnp
mov
aaa
push
inc
push
adc
arpl
xchg
dec
outsl
mov
pop
lock
inc
jmp
cmc
fdivrl
mov
mov
cmp
adc
jmp
in
dec
jbe
mov
jecxz
dec
inc
fstpt
xchg
jmp
mov
cltd
jmp
sbb
xchg
jp
scas
mov
lcall
push
and
cmpsb
cmp
mov
daa
push
jl
mov
xchg
pmaxsw
call
cmp
ds
fcmovu
pop
and
jp
push
jbe
mov
fstpl
xor
add
test
stc
std
pop
sub
pop
xor
and
xchg
pop
lods
jg
js
sub
inc
bound
aaa
mov
leave
out
hlt
icebp
sub
jl
sti
imul
pop
or
xor
inc
lahf
ja
loop
mov
test
inc
addr16
jl
cs
das
repz
mov
roll
enter
xchg
push
mov
xor
loop
stc
les
leave
les
pop
into
inc
jo
sub
mov
pop
inc
pop
cmp
and
jo
call
push
add
ds
sub
mov
inc
out
test
lds
jp
and
and
repz
insl
outsb
mov
mov
cmpl
mov
inc
subb
outsl
outsb
insb
popw
pop
push
jmp
fwait
sbb
inc
jne,pt
shll
cs
cmpsl
cmp
push
cs
movsl
imul
push
xchg
sub
sub
nop
int
xchg
clc
ja
or
addl
loop
add
scas
inc
sahf
pop
in
xchg
fildll
ljmp
xchg
cmpsl
mov
lods
xchg
mov
xchg
pop
rcl
cltd
out
movsb
mov
adc
xchg
sbb
sbb
pop
in
les
inc
adc
adc
daa
jne
jmp
cmp
inc
or
or
or
pop
sub
xchg
cmp
mov
stc
stos
int3
pop
jl
dec
adc
in
push
mov
mov
in
idivl
dec
lret
neg
stos
adc
adc
jge
mov
in
sti
add
adc
jmp
scas
xchg
mov
pop
stos
hlt
popf
aad
aad
dec
push
mov
idivl
popf
mov
pop
xor
fidivrs
or
call
test
int
flds
mov
fstpt
lahf
jb
aam
stc
fnstenv
cmp
jg
cmp
les
in
ja
xor
xchg
out
jmp
inc
insb
fadds
add
mov
into
in
stos
or
mov
inc
outsl
iret
xor
idivl
iret
mov
lret
clc
popa
xlat
sbb
arpl
push
iret
pop
push
sbbb
ljmp
mov
sbb
add
pop
sarb
mov
scas
pop
sub
stos
ss
push
xchg
sbb
ret
outsb
jbe
je
imul
mov
fisubrs
xlat
iret
ljmp
mov
xchg
pop
pop
fisubrs
ljmp
scas
pushf
clc
std
mov
lahf
gs
fdivrp
mov
das
stos
add
adc
jmp
stos
cli
inc
mov
into
mov
add
xchg
dec
scas
inc
gs
repnz
loope
cmp
pop
sar
int3
jg
mov
shlb
arpl
int3
stc
push
in
out
mov
xchg
sub
sbb
dec
jmp
push
lods
loop
cmc
lret
cmc
sbbl
loope
scas
fidivs
jge
es
in
std
xchg
mov
lds
test
pushf
out
pop
imul
int
stos
mov
adc
das
jg
jg
clc
cmpsb
fdivrs
push
mov
lret
jbe
idiv
adc
push
cwtl
into
sbb
mov
pop
repnz
mov
mov
pop
xor
xor
xchg
jbe
jmp
scas
iret
test
out
aaa
pop
xor
xorl
adc
dec
dec
movsb
sub
adc
pop
test
cmp
icebp
mov
mov
movsb
je
stos
ds
fsubrl
js
mov
fwait
cld
lods
cld
pop
icebp
fistl
iret
ror
pop
repnz
mov
stos
jne
movsl
and
fisubrs
ret
cwtl
add
mov
cld
loopne
popf
mov
pop
rolb
ljmp
pop
dec
or
xchg
or
cmp
adc
add
cmp
push
dec
mov
jmp
ja
inc
sub
movsb
xor
adc
mov
jl
out
lcall
cld
xchg
iret
dec
jecxz
std
lods
insl
into
data16
lret
jl
xor
in
fdivp
mov
scas
into
int3
dec
sbb
stc
xor
rol
mov
loopne
xchg
adc
out
test
adc
sub
xchg
mov
mov
sub
repnz
cmc
or
es
int
leave
and
fisubs
shlb
lcall
stos
sbb
inc
cmp
cmpl
sub
aad
int
mov
rolb
aaa
add
loopne
add
push
int3
add
mov
mov
mov
xchg
and
scas
jns
dec
mov
add
imull
out
mov
cld
cmc
test
mov
jbe
std
jbe
cmp
dec
pop
cmpsl
jp
sti
add
les
xor
das
pop
pop
out
cli
cmpsl
mov
inc
aaa
daa
js
test
cld
cli
jmp
xor
push
iret
dec
xchg
into
xchg
in
iret
jge
scas
in
xchg
aaa
daa
stos
testl
dec
dec
shl
daa
lock
inc
fcoml
imul
lods
test
jbe
mov
and
inc
jne
lcall
rol
stc
jnp,pn
int3
adc
push
adc
jge
mov
xchg
fs
xchg
inc
dec
in
sub
stos
cmpsb
mov
movsb
scas
or
hlt
adc
test
fdivr
push
dec
adc
pushf
cmc
lods
shrl
and
lcall
add
jae
imull
lods
sub
fisttpll
mov
push
add
mov
in
out
sahf
xchg
mov
test
mov
rcrl
out
pop
lods
inc
scas
sub
mov
jl
std
clc
aam
mov
xor
std
adc
mov
pop
out
fs
pop
icebp
and
out
dec
dec
xchg
fwait
xchg
xchg
lcall
inc
stos
mov
std
hlt
jmp
lret
jne
cmp
mov
xchg
mov
out
and
pushl
js
shrb
stos
out
adc
jno
mov
mov
cmp
nop
mov
pop
lock
push
cmpsl
scas
mov
aas
jne
in
scas
nop
xchg
lret
popa
icebp
fdivr
push
outsl
ljmp
mov
xchg
mov
aam
in
xchg
jne
xor
mov
mov
xchg
mov
aad
in
xchg
add
push
dec
dec
push
jne
outsl
mov
insb
mov
xchg
mov
sbb
lock
sti
leave
jnp
push
loop
adc
dec
dec
xchg
xchg
xchg
add
daa
jnp
aam
repnz
push
or
out
enter
cltd
enter
mov
lea
mov
sbb
pop
in
movsb
push
jmp
adc
ja
mov
outsb
popa
mov
sahf
cwtl
cld
sub
mov
repz
idivb
stc
stos
in
movsb
incb
cwtl
ja
lcall
xlat
push
int
bound
adcb
in
fucomip
jns
jmp
jp
data16
fisubrs
lock
push
sti
sahf
mov
push
insl
mov
cli
iret
test
ljmp
or
mov
pop
int
mov
arpl
xchg
xor
xlat
mov
std
cltd
scas
xor
mov
add
or
xchg
loope
std
xchg
jns
dec
dec
cmpsb
vpmacssdqh
cld
call
ret
pushf
rorb
mov
add
int3
aas
mov
movsl
sub
out
test
lock
fisubs
and
push
mov
inc
sarb
mov
or
lea
jl
sub
cld
jmp
push
not
jle
push
push
sti
jmp
cmp
fucom
mov
fwait
addl
dec
push
out
in
mov
jnp
cmp
aam
popa
inc
sub
cld
scas
sbbl
clc
inc
divb
lea
push
sbb
jmp
mov
out
addr16
fwait
idiv
iret
mov
ja
push
ret
stos
movb
add
ret
cmp
aaa
ret
push
ret
loope
aam
leave
rol
mov
shll
rcll
arpl
push
shll
push
rcll
or
mov
add
and
call
iret
lods
iret
add
add
mov
jno
push
iret
repz
in
into
int3
into
mov
into
jns
jb
iret
int
int
int
int
int
sbbb
mov
cmp
or
test
mov
mov
lret
outsl
sub
lret
adc
add
lret
jne
push
lret
das
lret
adc
add
leave
int
add
xchg
je
imul
leave
dec
leave
cmp
sub
adc
add
add
hlt
enter
enter
enter
enter
enter
pop
push
cld
cmc
jecxz
add
add
fadd
lret
mov
dec
aaa
adc
push
pop
lds
cli
fcmovb
mov
clc
sahf
pop
adc
ret
mov
jle
push
testb
sub
and
or
add
stc
jecxz
push
mov
lcall
and
lret
lds
add
add
lds
lds
jb
imul
lds
lds
lds
add
jns
in
ffree
vprotq
ret
or
call
ret
ret
xchg
ret
insl
ret
lcall
cmpb
push
rorl
sarl
enter
movsb
jle
jo
pusha
rorb
lock
lahf
std
or
into
xorb
add
and
int
int
int
int
int
int
int
int3
ror
ficomps
str
leave
lret
mov
lret
jg
insb
scas
pop
sahf
lret
lods
lret
add
mov
leave
mov
test
pushf
enter
enter
enter
enter
int3
enter
mov
jbe
insl
hlt
ljmp
mov
and
mov
and
push
or
cld
adc
mov
lds
adc
add
add
lds
push
lds
cmp
push
hlt
les
les
push
les
cmp
das
les
in
add
les
ret
lcall
ret
arpl
pop
ret
push
ret
ds
adc
rol
add
adc
shll
shll
ffree
mov
jg
subb
add
rorb
add
sub
and
sbb
stc
add
loop
into
fmul
ror
int
enter
data16
pop
into
push
into
dec
into
inc
into
ds
cmp
xor
sbbb
into
sub
adc
or
stc
int
int
mov
int
int
int
int
int
add
add
imul
int
int
int3
lock
lret
lret
lcall
lret
lret
cmpb
lret
test
jb
imul
test
jg
jp
call
lds
add
add
sbb
mov
les
cmpb
and
pop
enter
sbb
lods
ret
xchg
mov
jg
lock
push
aas
add
iret
cs
pop
iret
push
iret
cmp
adc
int
int
aas
add
lahf
int3
cwtl
int3
nop
int3
test
jg
jns
outsl
int3
push
or
inc
scas
cmp
das
int3
adc
or
add
stc
lret
out
fmul
sar
add
lret
cmpsb
lret
pushf
lret
js
fs
push
lret
dec
lret
inc
lret
cmp
sub
pop
nop
fimuls
lret
add
in
lret
fldcw
lret
call
push
lret
or
add
leave
ror
leave
mov
leave
movsl
leave
jl
or
mov
inc
leave
cs
sbb
add
in
stos
dec
cmp
ffreep
into
dec
movb
incl
add
lds
inc
les
les
ljmp
add
add
mov
rol
int3
ret
dec
ret
cmp
xor
add
lods
rorl
dec
dec
lret
shlb
or
add
leave
mov
jo
arpl
aaa
add
nop
add
xor
add
rcrl
into
mov
into
or
into
outsl
into
fs
pop
add
sub
into
push
into
pushf
int
int
int
in
cmpl
outsl
cmp
int
int
xchg
sarl
add
add
xchg
int3
mov
test
jae
insl
int3
pop
int3
push
int3
push
int3
dec
inc
dec
sub
into
icebp
lret
jmp
cmpsl
dec
inc
push
xor
std
lahf
jmp
sahf
add
add
pop
mov
daa
enter
inc
xchg
clc
outsl
inc
test
mov
inc
ljmp
inc
mov
das
push
xlat
inc
jmp
inc
addl
out
es
shl
mov
mov
dec
addr16
ret
push
jg
repz
incl
mul
jg
lahf
ljmp
and
movsb
fisttps
roll
push
dec
repnz
iret
cld
pop
dec
push
dec
mov
ret
mov
roll
std
jmp
out
add
test
pushf
cmp
dec
ds
mov
xchg
mov
add
and
mov
pop
fwait
loope
stos
jp
stos
jle
cmc
sub
mov
cld
and
mov
loopne
clc
adc
mov
inc
push
jl
cld
jg
xor
mov
cld
movsl
mov
ror
enter
sti
imull
jge
xchg
mov
daa
enter
xchg
mov
mov
dec
into
loopne
mov
mov
scas
cli
lods
mov
movsb
into
jl
out
imul
nop
jecxz
add
iret
fbstp
mov
scas
dec
add
adcb
nop
lcall
push
fistps
ljmp
add
cli
xchg
lcall
mov
jmp
jl
jge
mov
stc
cmpsb
inc
out
xchg
inc
jle
adcb
or
repz
lds
addl
lock
inc
stos
jl
pop
mov
jg
mov
push
mov
or
aas
out
movsb
inc
dec
cli
shl
mov
cmc
mov
pop
out
pop
pop
cli
mov
cmp
xchg
dec
xlat
mov
xchg
jmp
mov
in
xchg
lret
jmp
stc
push
pop
aas
lahf
pusha
xlat
loope
popf
mov
std
cmp
adc
dec
pushl
cmp
fwait
addr16
ret
frstor
jge
mov
cmc
roll
fninit
in
pop
mov
lods
mov
rcrl
push
stc
push
popa
xchg
and
lcall
sub
adc
mov
adc
add
mov
int
orb
lock
or
xchg
out
inc
jne
add
jl
test
and
inc
dec
loop
test
mov
stc
lahf
lock
dec
subb
pop
ds
mov
lahf
mov
shll
movsb
mov
xchg
or
add
fdiv
xchg
mov
scas
xor
insl
cmp
movsb
mov
or
sahf
sbb
out
xchg
lea
xchg
mov
popf
ficomps
push
add
std
pop
jmp
mov
loopne
imul
pop
mov
hlt
pop
adc
pushf
cld
adc
adc
popf
shld
mov
fldcw
sti
dec
das
ja
pop
push
adc
mov
sbb
cmp
arpl
fidivrl
adc
adc
aad
leave
dec
addr16
daa
mov
fbld
mov
xchg
mov
add
cmp
ret
push
pop
dec
jge
jl,pt
sti
mov
enter
xchg
mov
xor
pop
pop
sub
hlt
lds
dec
xchg
idiv
xchg
mov
fwait
jge
adc
ja
adc
jle
icebp
int3
jb
pop
mov
aad
xchg
icebp
cld
adc
cmp
cmpsb
sti
filds
out
outsl
pop
mov
cmp
jnp
cmc
xchg
pushl
lock
fidivs
xlat
fisubrs
divl
in
lds
dec
ja
pop
mov
pop
test
stos
pop
cmc
repnz
mov
push
jbe
jae
jb,pt
pop
or
lock
ds
ljmp
cmpsb
cld
pop
dec
cmpsl
cmc
jmp
push
dec
fcoms
es
xor
xlat
aaa
stos
add
sbb
mov
add
mov
shll
add
addl
scas
into
xor
scas
push
clc
add
push
popf
icebp
les
pop
movsl
mov
lods
or
out
repz
mov
repz
icebp
mov
mov
mov
insb
loop
stc
out
mov
aaa
in
pusha
insl
xor
lahf
push
cli
pop
pop
dec
mov
pop
xchg
mov
mov
ret
pop
cli
imul
repnz
stos
inc
push
mov
and
stos
inc
stos
shrl
push
adc
inc
shl
aas
cmpsl
jmp
stc
dec
lea
ljmp
aas
cmpsl
rorb
dec
xor
jmp
inc
inc
xchg
nop
push
jge
inc
repnz
mov
test
stc
mov
cwtl
push
add
std
clc
dec
stc
dec
add
mov
add
inc
mov
fcoms
xlat
repz
add
mov
push
bound
jb
iret
push
imul
cmp
bound
dec
stos
dec
cltd
cmpsb
imul
xor
xchg
out
xchg
lea
out
fsubl
lcall
sbb
test
iret
lret
movsb
xlat
xchg
in
scas
stc
daa
pop
mov
push
in
movsb
or
ljmp
and
sub
and
pop
pop
cmp
iret
je
les
mov
cmp
aaa
jns
mov
xor
out
pop
std
sub
xchg
push
gs
dec
enter
adc
inc
cmp
dec
pushf
xchg
iret
test
push
adc
inc
enter
enter
mov
cld
dec
xchg
pop
mov
jmp
jl
and
dec
adc
add
add
cmp
lock
cmpsb
cs
in
out
cld
dec
fcomp
fistpll
popf
inc
dec
dec
pop
mov
push
out
or
std
push
dec
jnp
jge
movsb
out
cmp
lock
jmp
rcll
sti
pop
aas
jb
dec
sar
sub
jb
scas
ja
fdiv
xchg
mov
push
lods
das
iret
in
cmp
out
xor
sahf
adc
jg
cli
loopne
sbb
incb
and
in
in
imul
xchg
xor
sbb
mov
mov
repnz
sub
outsl
and
cmp
or
jge
sub
jp
daa
daa
out
mov
imul
jbe
out
ja
jle
mov
jne
xchg
jbe
cmp
mov
fcompp
pcmpeqd
mov
in
mov
leave
out
ja
idivb
push
mov
stos
ficomps
mov
lret
test
sub
pop
pop
pop
mov
mov
add
xor
sbb
lock
test
call
negl
mov
pop
add
cmc
div
dec
mov
jbe
ret
rolb
pop
or
je
cmpsb
mov
xchg
jl
sti
repz
stc
fwait
aas
fstl
fwait
mov
pop
fwait
out
dec
pop
vpsubsb
iret
clc
std
or
loope
jmp
pop
call
push
mov
fistpll
repz
repz
xchg
cmpsb
ljmp
inc
push
iret
in
outsl
dec
aad
dec
sbb
or
in
sti
fdivs
out
pop
in
in
fbld
inc
mov
mov
lahf
filds
clc
out
repnz
in
cmpsb
cmpsl
mov
out
insl
aad
add
fstp
stos
or
loop
mov
outsb
mov
jge
std
dec
mov
mov
sub
cli
nop
repz
shrl
jmp
in
test
and
xchg
enter
sahf
mov
dec
adc
gs
aam
mov
icebp
je
stos
xchg
out
xchg
lahf
inc
in
in
stc
push
mov
idivb
jmp
cmp
mov
popf
pop
ljmp
xchg
mov
out
dec
stos
pushl
mov
fucomi
ds
mov
fs
out
out
ja
pushf
ljmp
std
cmpsl
fadds
fucomi
pusha
in
shl
mov
pop
fildll
adc
int3
dec
fs
in
jmp
cld
inc
daa
shrb
fdivrs
inc
cld
rcrb
xor
lret
repnz
clc
test
sub
mov
in
shld
dec
jmp
cld
idivl
lret
mov
lret
dec
ret
inc
aaa
scas
sub
mov
pop
movsb
adc
repz
cld
xchg
hlt
into
clc
addb
push
stc
cli
in
jbe
adc
in
in
ds
icebp
sahf
stc
pop
jmp
or
in
jmp
ljmp
push
shlb
xchg
jl
mov
enter
dec
xor
jnp
jb
mov
ds
mov
mov
popf
out
dec
jmp
mov
push
out
fwait
adc
test
fwait
in
rorl
xor
cmc
in
sahf
jb
je
cmpsb
adc
dec
adc
popa
add
mov
xchg
in
jle
into
jmp
iret
popf
dec
jle
mov
es
inc
lods
fdiv
sub
pushf
mov
pop
xchg
mov
movsl
shl
cltd
clc
daa
in
ljmp
sbb
push
mov
cmp
test
cltd
xchg
incl
je
jge
in
jg
dec
pop
outsb
call
mov
push
jns
mov
cmp
pop
jo
dec
std
scas
in
push
test
mov
divb
inc
push
mov
hlt
incl
adc
xchg
aas
stc
je
decb
nop
sti
pop
hlt
movsb
and
std
fidivl
lret
gs
cwtl
mov
sbb
repnz
dec
sub
mov
sbb
inc
push
fs
lret
popf
dec
sbb
mov
inc
xchg
lcall
movsb
cmp
arpl
fcoml
mov
cld
cmpsl
sub
lret
mov
mov
cmp
xchg
insb
loopne
stos
xlat
ljmp
leave
ljmp
test
adc
es
iret
cli
add
insb
idivl
and
int3
sar
push
in
push
sbb
sub
mov
cwtl
out
popl
popf
cld
daa
and
in
xlat
push
shlb
movsb
int
cmc
xlat
mov
stos
sar
fwait
lock
clc
hlt
jl
jmp
mov
xchg
imul
xchg
push
mov
mov
pushf
fcomps
pushf
out
aas
fnstcw
mov
loopne
inc
dec
outsb
lret
and
loopne
jbe
pushf
clc
jmp
inc
repnz
ficompl
mov
fisubs
test
lcall
ds
outsb
push
enter
sbb
repz
int
int
add
add
shrb
push
int
int
int
int3
mov
int3
lret
mov
push
pop
mov
mov
xchg
lret
cmpb
sub
add
fcmovne
cmpsb
leave
fwait
leave
xchg
leave
ja
dec
leave
enter
add
enter
enter
enter
xchg
add
add
adc
add
lds
lds
lds
lds
lds
mov
jge
add
ret
out
ret
iret
ret
popl
pop
mov
shl
mov
mov
rcrl
rcll
push
xlat
mov
ljmp
cld
int3
in
xchg
mov
orl
inc
dec
adc
std
dec
xchg
cld
dec
nop
cltd
lock
repnz
pop
stc
outsl
push
push
fistl
fistl
out
repnz
jge
jmp
jl
test
test
shll
cltd
leave
stc
lret
paddd
sti
idivb
out
jge
aas
inc
mov
pop
dec
push
lcall
repz
repnz
loope
dec
mov
jnp
aaa
incb
daa
repz
incb
popl
nop
xchg
mov
fcomip
adc
rcrb
ds
xlat
imul
ja
pop
lock
ljmp
cltd
loop
mov
mov
xchg
jmp
jle
out
sbb
fists
push
loope
test
ljmp
daa
stos
iret
sub
fdivrs
inc
dec
lahf
cli
pop
cmp
div
and
sub
jecxz
std
pslld
xchg
cld
incl
jmp
add
inc
add
call
int
jmp
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
pusha
mov
mov
xor
mov
inc
cmp
jb
popa
jmp
