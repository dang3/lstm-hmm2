insb
aas
mov
out
and
add
and
and
dec
shll
xchg
test
in
add
sbb
cmp
imul
xor
cmpsb
mov
clc
and
data16
and
sbbl
xorl
jbe
fwait
mov
cmpsl
addb
aas
add
ret
pushl
gs
xor
cs
insb
add
or
ficoml
sbb
push
gs
bound
push
jb
jbe
insb
gs
fcomi
jg
pop
jae
jae
gs
and
inc
inc
add
filds
jo
push
gs
outsl
imul
add
adc
adc
bound
xor
cs
jnp
out
jg
xor
pop
imul
insl
fs
aas
fisttpll
add
je
pop
outsl
arpl
bound
sbb
xor
cmp
push
sbb
xor
daa
push
mov
sub
dec
ja
andl
faddl
out
std
rclb
xor
jl
inc
add
add
or
lds
mov
or
popa
enter
insl
xchg
fcmovne
push
add
outsl
int3
int
pop
into
push
iret
rorb
shll
xor
shll
jbe
jb
aam
aad
xlat
pop
fdivs
mov
fidivl
fisttpl
push
pop
loope
lcall
inc
in
and
add
fwait
scas
out
call
imul
in
pop
in
aaa
lock
repnz
div
clc
gs
stc
dec
pop
cli
sti
js
je
mov
out
ficoms
xlat
sub
mov
pop
adc
aaa
sbb
dec
mov
xor
mov
ljmp
je
push
push
call
mov
jmp
mov
cmp
jne
xor
jmp
popa
insb
sti
arpl
movl
fsin
dec
test
je
sbb
fstpt
imul
jne
push
or
mov
sbb
iret
das
inc
mov
adc
cmp
jne
outsl
clc
fwait
out
mov
or
pop
pop
leave
ret
mov
in
sbb
fnstcw
imul
push
push
imul
pop
cmp
hlt
push
push
pop
loope
xor
clc
add
and
push
push
sbb
js
push
lock
cltd
add
add
push
pop
insb
pop
push
jae
pop
movzwl
push
push
stos
mov
fdivr
lock
cmp
je
push
adc
or
test
sbb
clc
cmp
adc
push
push
sub
lret
insl
add
inc
cmp
je
pop
mov
outsl
loope
sbb
movsl
sbb
ss
mov
jecxz
pop
in
sbb
pop
ret
xchg
sub
xor
inc
mov
ss
xchg
xor
mov
lods
jo
push
push
scas
inc
adc
mov
jge
or
push
adcl
mov
sbb
sbb
mov
cmp
adcl
push
dec
dec
ja
inc
addb
push
sbb
jmp
push
jno
dec
inc
imul
xor
xor
jge
add
mov
mov
and
jo
sub
lods
fnstsw
dec
test
je
adc
call
rorl
icebp
pop
loop
out
negb
dec
in
adc
mov
pop
and
push
add
cs
cmp
cwtl
fstps
adc
aas
jnp
lret
enter
ja
jmp
sbb
icebp
push
cmp
fcom
lds
jno
popa
mov
std
adc
push
fdivr
call
adc
mov
psrld
mov
inc
inc
dec
dec
test
jne
push
in
cmp
pop
jmp
lds
shlb
and
push
jecxz
shl
mov
mov
add
inc
cmpb
inc
fadds
test
add
mov
mov
cld
aad
pop
clc
inc
and
aaa
outsb
push
rcl
jl
sub
pop
adc
daa
push
mov
stc
push
dec
sub
outsl
push
add
adc
xabort
in
les
out
inc
js
lock
mov
ret
in
inc
mov
cmp
subb
pop
or
mov
cwtl
pop
adc
call
rcrl
pop
pop
nop
scas
mov
jp
std
add
xor
arpl
stc
je
or
out
mov
repz
lea
andb
push
pop
lea
jcxz
stos
stos
mov
loopne
adc
idivb
movl
adc
mov
or
fdivrp
maxps
pop
push
sahf
mov
pop
call
mov
cmp
push
xor
lret
cwtl
xor
adc
ficoml
xor
mov
std
adc
int
test
adc
or
pop
mov
pop
pop
pop
pop
mul
fldt
pop
push
cld
pop
jmp
in
in
cmp
or
inc
fisttpll
xor
push
push
std
imul
jb
insb
push
add
je
popa
mov
dec
mov
xor
pop
add
mov
dec
inc
add
pop
pop
mov
daa
or
jne
insb
inc
or
xchg
or
clc
test
ja
mov
mov
int
sahf
in
push
test
add
add
scas
ret
adc
xchg
add
inc
sbb
je
push
hlt
lret
ja
add
in
pop
testl
dec
xchg
leave
pusha
ficomps
mov
icebp
stos
push
xor
add
std
enter
imul
push
mov
iret
cmp
sahf
cld
les
fnstenvs
lods
jb
rclb
outsb
in
pop
fldenv
pop
int
ja
xor
into
iret
push
rorb
mov
insb
rcl
or
mov
xor
cs
xor
dec
mov
js
mov
filds
mov
adc
clc
js
mov
push
add
scas
mov
loope
or
cltd
int
iret
mov
pushl
js
mov
jae
xchg
mov
and
mov
fucompp
mov
fs
outsl
lret
in
mov
stc
jae
pop
sti
insl
jbe
add
xor
cmp
or
clc
cmc
sub
shrb
pop
mov
fsts
insb
icebp
xlat
xor
in
data16
push
movsl
fcomps
in
adc
data16
call
mov
das
and
das
sbb
cld
into
push
dec
sar
or
adc
dec
or
pop
cmp
xor
sub
push
call
mov
sar
fistpll
sbb
int3
push
push
jbe
fldt
stos
jl
call
mov
daa
cmp
shrl
push
loope
out
js
shll
outsl
je
ss
out
and
and
lock
xchg
cmp
and
inc
or
test
xlat
vdivsd
jo
fs
not
insb
cwtl
sub
or
pop
outsl
or
mov
and
aaa
scas
je
adc
xchg
or
fs
mov
jnp
jmp
jne
int3
add
xchg
add
cwtl
pushf
pop
push
cmp
lds
sub
dec
mov
in
sub
mov
or
loope
push
inc
and
add
ret
dec
movsb
inc
in
xchg
sbb
adc
and
and
scas
xchg
loop
adc
adc
and
rorw
dec
inc
dec
dec
and
ja
stc
add
dec
inc
dec
jb
push
dec
addb
fisubrl
inc
outsl
add
push
adc
sbb
addl
adc
dec
add
dec
pop
nop
add
push
pop
ss
mov
inc
call
push
add
dec
ljmp
adc
js
outsl
addr16
insl
and
outsb
outsb
lock
in
ljmp
and
and
outsb
and
inc
dec
push
and
fs
clts
ss
pushf
icebp
outsl
repnz
xor
mov
lock
mov
test
jb
cld
test
xchg
jo
test
daa
repz
testb
jo
test
enter
testb
push
stc
push
inc
add
in
daa
or
adc
xchg
out
into
mov
push
or
add
and
xchg
lods
add
aaa
loope
xchg
add
cltd
dec
ss
add
or
xor
pop
push
rol
dec
dec
pop
stc
addl
and
cmp
adc
and
push
pop
fcomps
sti
bound
lcall
xlat
and
sahf
cs
je
push
sbb
in
xchg
or
in
movsl
inc
cs
push
push
pop
sub
daa
add
sti
jb
insb
outsl
arpl
xchg
push
daa
and
inc
call
mov
cli
mov
imul
dec
sarl
inc
pop
add
pop
dec
cs
dec
shll
adc
clc
mov
ret
add
clc
or
lcall
push
pop
outsb
imul
jae
cmpsb
loopne
or
cmpsb
imul
cmpsb
imul
clc
add
push
es
shll
outsb
mov
mov
imul
insb
lcall
in
cmp
insb
enter
rclb
imul
lcall
sub
fdivl
mov
mov
ret
call
dec
cld
push
rclb
and
mov
lcall
je
sarl
ja
js
push
xor
shll
inc
into
sbb
call
mov
add
shll
inc
ret
jae
adcb
outsl
je
xor
xor
add
cmp
and
xchg
test
mov
jle
je
dec
sub
sub
mov
push
gs
fs
sub
dec
je
jo
dec
fidivs
outsw
inc
aaa
dec
jo
outsb
push
jb
push
out
adc
push
dec
dec
add
in
mov
jl
outsl
pop
jnp
and
pop
and
sub
fisubrs
add
into
add
aaa
sbb
pusha
add
add
inc
mov
pop
add
or
xor
and
or
jmp
enter
add
add
adc
shlb
ja
popa
add
dec
aas
mov
sbb
or
shll
incl
leave
test
pop
and
add
xchg
popf
inc
inc
sbb
enter
inc
xchg
sbb
jecxz
xchg
pop
sub
sub
xchg
incl
test
ret
mov
loope
ja
pop
inc
outsb
lcall
and
bound
xor
or
imul
add
ja
lods
stc
out
sbb
packsswb
je
jne
jb
gs
sbb
fwait
or
push
gs
pop
mov
gs
add
push
inc
jb
push
and
ja
fisttps
ja
push
mov
jae
pop
and
stos
pop
mov
pop
xor
push
sbb
sbb
sbb
pop
add
add
pop
pop
cs
add
inc
test
jno
arpl
popa
insl
mov
push
dec
inc
push
push
inc
push
inc
dec
adc
outsl
data16
imul
ja
and
inc
jne
jb
je
mov
jae
outsl
outsb
dec
mov
inc
popa
jb
push
aas
mov
inc
pop
pop
xor
and
aas
xor
hlt
or
inc
and
mov
insl
rcrb
push
je
insb
out
lea
mov
pop
cwtl
jns
outsl
shlb
jmp
dec
popa
jns
jne
jae
adc
pop
mov
push
push
sbb
call
push
jae
ret
mov
xchg
push
cwtl
push
mov
jge
pop
adc
xchg
mov
je
mov
xchg
sub
mov
jnp
loopne
rcl
mov
inc
cmp
in
mov
and
out
loope
mov
xor
ljmp
mov
sub
mov
mov
lea
into
shl
fld
or
mov
subl
adc
mov
shl
add
push
xlat
adc
adc
loope
fs
dec
or
mov
jb
mov
aaa
movl
inc
and
add
mov
aam
fsts
fildll
inc
mov
or
and
mov
push
lea
push
push
push
jb
cmp
nop
out
or
mov
push
rclb
push
adc
xchg
or
or
fildl
and
test
rclb
ret
inc
mov
pop
out
out
out
fcmovnu
mov
mov
daa
sub
addl
in
cmpsb
stc
add
imul
push
repz
push
fwait
cmp
insl
ja
fwait
cmpsl
mov
adc
repnz
insl
daa
adc
mov
pusha
sub
jbe
or
cmp
frstor
fucom
adc
mov
repnz
insl
insl
sub
rcr
cmp
es
adc
out
popf
and
outsb
sahf
inc
clc
addr16
mov
roll
mov
leave
mov
daa
jo
mov
repnz
jne
std
loope
mov
and
push
mov
or
mov
mov
xor
mov
cwtl
mov
cmp
mov
repz
insb
ja
addr16
pop
filds
int
adc
mov
sbb
add
daa
fs
enter
out
fistl
outsb
dec
mov
sub
mov
arpl
in
dec
add
jnp
pop
sbb
stos
add
movsb
loope
add
mov
xchg
outsb
cmp
mov
ja
pop
adc
mov
cmp
ja
add
dec
inc
mov
mov
dec
jge
mov
mov
mov
inc
movl
repz
hlt
dec
sbb
div
push
stc
jg
mov
mov
sbb
mov
lods
popf
popf
cmp
and
mov
jmp
pop
mov
xchg
cmpsb
sbb
jg
xor
in
add
idivl
push
add
mov
mov
adc
mov
or
orb
arpl
pop
dec
ja
sbb
ret
inc
fnsetpm(287
or
lds
pop
pop
out
xchg
push
sbb
or
lods
sti
daa
xor
mov
sbb
es
cmp
mull
pop
in
fists
arpl
fildll
aaa
add
getsec
ja
jmp
jecxz
ss
repnz
cmp
loope
xorl
mov
repz
lahf
xor
xor
shrl
pop
arpl
mov
and
add
stos
push
pop
mov
jmp
add
dec
and
sub
sub
in
aaa
hlt
jmp
out
scas
push
lods
mov
and
push
add
push
push
imul
add
jo
jo
out
lahf
xorl
pop
xchg
scas
iretw
daa
es
and
sti
std
ljmp
pop
fistps
lahf
lret
and
fisttpll
out
sub
and
rolb
lcall
add
cmp
cmpsl
std
dec
cmp
xor
lds
pop
mov
fstpt
fldl
sub
mov
out
sbb
testl
add
loope
add
cmp
jp
sbb
fisubrl
adc
adc
in
neg
add
loopne
addr16
loope
repz
popf
inc
aas
sarl
add
jge
jb
xchg
sbb
lods
mov
sbb
fstpt
iret
jle
mov
leave
in
push
jmp
mov
push
repz
test
aam
mov
ret
cld
in
mov
xlat
cmp
and
lret
fbld
sub
mov
mov
into
and
mov
stos
adc
jg
fcomip
xor
xor
sbb
repnz
xor
ret
jmp
and
xor
in
sti
stc
mov
jmp
test
inc
add
es
or
addb
add
repz
or
addr16
arpl
xor
fs
aas
clc
sahf
push
add
adcl
test
mov
and
std
call
cmp
xor
xor
sub
mov
addl
mov
test
push
lods
add
shll
mov
and
gs
popf
xchg
lret
dec
cmp
ret
mov
add
cli
sub
mov
add
xor
scas
push
nop
inc
sbb
push
sub
mov
rolb
gs
add
or
push
dec
shr
cmp
jae
mov
shll
xorb
push
adc
mov
sbb
in
push
push
call
jg
mov
movb
mov
scas
sub
mov
add
push
or
mov
inc
add
dec
insl
mov
push
inc
inc
call
add
imul
pop
orl
in
or
test
mov
xor
push
lock
jo
push
push
push
daa
ds
mov
or
add
or
adc
push
mov
outsb
ss
insb
and
lcall
push
movzbl
ljmp
je
pushf
adc
clc
imul
cmp
fstpt
mov
andb
inc
or
sti
and
pop
inc
pop
call
pop
jl
push
aaa
js
andb
dec
aas
mov
xor
adc
and
lahf
or
adc
or
add
enter
int3
and
xlat
adc
or
dec
add
and
and
add
and
xor
and
aas
and
inc
or
push
push
inc
jo
dec
sbb
or
lods
imul
adc
cmp
pop
lret
mov
in
mov
cmpl
dec
cmp
lret
add
leave
inc
push
pop
jecxz
pop
repnz
xor
adc
and
mov
shlb
popf
adc
and
and
mov
adc
pusha
jne
or
fsubrl
push
add
neg
push
xchg
add
mov
add
jge
push
push
push
sbb
out
ds
jnp
push
push
push
and
pop
mov
jo
xchg
sub
or
sub
insb
dec
mov
fisubl
pop
sbb
aad
adc
scas
xor
sbb
aaa
xor
fsubrl
loope
mov
movsl
fcomps
movsl
mov
movsb
mov
jmp
loopne
mov
mov
mov
adc
dec
jecxz
dec
pop
ror
lea
mov
mov
sub
mov
addb
mov
xor
add
cmp
in
or
sarl
push
mov
add
mulb
xor
inc
mov
pop
or
sbb
mov
or
call
add
jecxz
fbld
cmp
cli
test
test
enter
loopne
scas
push
clc
call
out
test
mov
jbe
pop
outsb
js
mov
inc
decb
mov
jne
out
add
jne
sub
sub
in
push
fsub
jbe
push
or
jmp
pop
call
lret
in
adc
lock
mov
mov
add
inc
inc
cmp
sbb
sbb
hlt
pop
jb
sbb
pop
cmp
xor
insl
fisttpl
rorl
adc
push
out
ficoml
adc
andw
aaa
addr16
lods
popf
push
cld
subl
mov
mov
jb
jns
sbb
push
lods
clc
push
push
push
push
imul
mov
std
push
cmp
movsl
adc
mov
data16
jg
std
xchg
popa
fsin
out
out
mov
lea
cmp
jne
and
xlat
rcl
mulb
mov
jle
adc
cmp
in
push
inc
push
pop
cld
call
addr16
out
call
jl
lcall
push
jo
loope
fdivs
or
adc
or
movl
push
inc
call
out
sub
movsb
outsb
or
inc
ds
adc
adc
sub
add
xor
adc
in
mov
and
cmp
and
aas
test
and
xorb
adc
and
scas
inc
jle
adc
adc
movsb
xorb
aas
repnz
pop
repnz
xor
adc
ret
faddl
adc
or
sbb
mov
jae
fs
adcl
sub
cmp
jne
push
pop
jmp
into
sbb
cmp
rorl
scas
pushf
loopne
cmpb
insb
inc
cmp
push
cld
add
jle
xor
cmp
ljmp
push
mov
cmp
ja
cmpl
adc
je
test
mulb
push
mov
inc
hlt
mov
std
dec
insl
call
jne
cmpl
daa
dec
mov
cmp
jne
in
mov
inc
clc
xchg
cmp
cmpsl
rcrb
jmp
andl
fdivrl
sbb
addr16
inc
cmp
mov
stos
pusha
inc
or
sbb
notb
fcoms
add
push
jnp
lds
add
add
fwait
shlb
aaa
ret
add
dec
outsl
xor
bound
push
insb
mov
in
xor
addb
cmc
enter
rcrb
jmp
adc
mov
enter
pop
sub
xor
or
or
stc
mov
negl
pop
nop
sub
pop
inc
idiv
adc
std
push
mov
inc
jmp
orb
add
add
sarb
enter
pop
push
js
xor
adc
add
dec
out
jmp
cmp
adc
xor
adc
adc
adc
popa
adc
js
in
popf
pop
lock
adc
sbb
js
inc
mov
add
mov
xlat
test
clc
fs
ja
xor
mov
jo
movb
inc
movsb
jb
jg
pusha
in
xor
shrl
or
subl
ljmp
inc
sub
and
outsb
sti
rcll
or
imul
adc
and
or
imul
dec
adc
inc
jge
ljmp
mov
roll
cmp
push
pop
jge
aas
cmp
jae
incl
lret
shr
add
sub
clc
das
stos
leave
je
inc
push
mov
push
sbb
call
dec
mov
dec
push
pop
jne
adc
lea
sbb
rorb
fildl
mov
add
loop
or
adc
or
add
jne
xor
or
outsb
clc
inc
pop
call
pushf
stos
pop
cs
inc
mov
bound
add
jno
cwtl
jg
mov
sti
not
and
push
jl
and
or
add
mov
lea
xor
aam
shr
mov
add
sti
fucomi
push
repnz
not
and
testl
mov
mov
test
push
js
outsb
jnp
enter
mov
or
fisubs
fidivrl
outsl
mov
add
lea
shr
shl
sub
lods
jne
pop
inc
sub
mov
and
not
cmp
out
pop
inc
fiadds
psllq
mov
lods
or
repz
dec
daa
decl
lods
pop
jg
push
lea
imul
lods
loop
mov
push
mov
jle,pn
not
and
shlb
adcb
sub
xchg
rcr
js
pop
mov
jecxz
sbbb
xlat
loopne
fisubrl
aaa
sbbb
or
mov
repz
sub
adc
test
roll
mov
fisubl
fistps
sbbl
test
push
add
bnd
add
out
xor
add
xchg
xchg
ja
sbb
les
repz
fstpt
subb
addl
repz
add
rcr
das
pusha
sbb
mov
pop
scas
testl
jle
mov
pop
les
subb
jns
cmpsb
or
loop
cmovno
fisubl
sub
sub
fdivrs
or
fdivrs
mov
shl
pop
mov
stc
es
les
adc
out
or
xor
or
ret
cmp
or
xchg
jno
std
stos
lods
sub
es
add
and
pop
imul
enter
das
push
imul
repz
cmpsb
pop
mov
xor
cmpb
jnp
xchg
or
popa
adc
add
insb
jmp
or
mov
ret
out
push
and
aad
aam
pop
bound
mov
out
sbb
shl
add
fsubp
shlb
clc
jg
rorl
loopne
lret
repz
mov
rclb
push
fadds
hlt
fldl
int
and
clc
jb
repz
pusha
push
es
adc
repnz
sub
and
xchg
cld
stos
mov
add
out
call
lock
imull
mov
mov
hlt
pop
adc
call
shrl
xlat
lods
mov
fdivr
shlb
adc
add
lods
loope
and
in
pop
adcl
fcoms
push
clc
cmp
popf
cmp
jge
cli
fnstcw
out
enter
adc
push
outsl
mov
jmp
fidivl
and
sbb
loopne
ret
inc
enter
das
add
pop
aaa
or
mov
push
fisttps
xlat
mov
inc
fimuls
sahf
sbb
push
subl
or
call
mov
adc
inc
loop
shr
or
lock
add
pusha
int
imul
jp
repz
clc
mov
sti
push
loope
push
and
sub
aad
data16
sbb
add
adc
movl
xchg
dec
fisttps
in
mov
adc
or
xor
pop
push
fisubrs
inc
cmp
jmp
add
fldt
test
xor
mov
int
cld
cmp
or
jns,pn
lock
js
lds
popa
popf
insl
adc
pusha
adc
xor
mov
repnz
jbe
or
in
mov
repnz
shlb
mov
in
mov
leave
add
mov
fimuls
xchg
pop
jb
repz
sub
int3
pop
pusha
dec
mov
scas
sub
xchg
rcrb
mov
mov
out
sub
xlat
mov
jle
sub
jo
mov
testl
cwtl
fidivrs
imul
out
ja
pop
cs
fimuls
test
imul
adc
fidivs
shll
js
pop
out
in
fs
cmp
or
push
push
clc
imul
sarb
cmp
aam
cltd
js
movsl
jae
out
jbe
les
in
mov
divl
idiv
ss
rclb
jp
jl
pop
je
lock
xor
fiadds
push
lods
les
cli
fs
imul
jge
stos
pop
fdivs
fisubs
stos
rcrb
sbb
push
or
loope
ss
jl
inc
int3
or
push
xchg
ljmp
inc
push
or
lea
test
stos
shrb
and
adc
lock
pop
jns
push
hlt
cmp
adc
xor
fs
clc
into
aas
cmp
pop
pop
gs
sbb
fisubrs
outsb
rcrl
int3
or
lcall
ja
jns
mov
jno
dec
jge,pt
out
call
repz
unpckhps
sbb
je
jns
pop
test
dec
out
loopne
cmp
jg
call
outsl
sub
ss
jp
sbb
int
dec
scas
xorb
fistpl
loopne
sub
or
dec
outsb
jecxz
jp
ret
mov
ljmp
fdivl
out
stc
pop
mov
cmpb
arpl
test
sbb
in
dec
mov
xor
out
loopne
in
cmpsb
fsubs
ret
rorb
adc
repnz
repz
aaa
pop
pop
rclb
xor
lret
mov
jge
xlat
pop
add
pop
xchg
stos
push
pop
movsb
mov
mov
decb
or
pop
inc
call
pusha
mov
push
mov
mov
xchg
repnz
cmpb
mov
pop
cmp
jl
js
sub
push
push
push
mov
add
jmp
and
cmp
push
insb
js
and
xchg
adc
mov
xchg
outsb
lea
mov
jmp
sbbb
nop
jge
or
iret
pop
pop
mov
mov
into
ljmp
jae
mov
add
sbb
cmp
jne
sbb
adc
mov
push
xor
push
insl
rcll
out
sub
or
cld
call
mov
pop
jbe
lea
aaa
push
push
push
lahf
adc
je
inc
add
cmp
out
or
testb
jmp
repz
jp
call
mov
pop
adc
outsl
mov
in
add
test
push
loopne
pop
int3
cmp
pop
mov
add
fsubr
sbb
xchg
jno
or
add
in
push
sbb
jecxz
lahf
iret
out
into
cmp
call
gs
jl
out
das
lock
jo
hlt
gs
clc
int3
imul
imull
lock
loope
insl
addr16
mov
js
dec
adc
pushf
fisttps
mov
idivl
js
rep
call
sbb
les
in
inc
mov
roll
insl
lods
mov
je
push
outsb
les
fimuls
fmull
inc
push
pop
inc
pop
stc
lret
pop
sbb
call
lds
push
push
push
ds
push
in
stos
inc
nop
inc
add
dec
gs
mov
push
movsb
dec
inc
shll
cmc
pop
mov
jge
xor
jl
push
push
jbe
cmp
cmp
xchg
insl
mov
fisttpll
cmp
push
sbb
inc
outsb
mov
int3
add
and
sub
jae
or
sbbl
jne
call
xor
out
sbb
push
push
sub
inc
mov
dec
enter
add
incb
fsubs
mov
clc
jno
insb
cmpb
divb
sub
repnz
mov
fcmovnb
icebp
sub
or
xor
cmp
xor
test
push
out
insl
lods
adc
pop
mov
mov
leave
daa
je
push
dec
add
mov
les
or
call
add
rclb
pop
push
push
sti
rep
mov
xrelease
jmp
mov
cmp
je
dec
dec
cmpw
jne
pop
push
arpl
shrl
inc
add
cmp
add
scas
loope
cmp
add
rdpmc
je
xchg
jl
gs
mov
mov
cltd
push
aad
sbb
cmp
lret
jbe
cmp
inc
popw
mov
pop
fwait
ret
push
insl
in
push
mov
pop
xchg
cmp
push
dec
orb
inc
add
je
cmp
jne
push
jae
je
in
xchg
seto
mov
mov
push
outsl
lods
sbb
or
and
jbe
ja
loopne
mov
and
imul
push
push
enter
mov
loopne
cmp
bndldx
subb
adc
idivl
pusha
cmp
subb
inc
push
ja
inc
adc
shrb
xorb
insb
test
stos
in
jno
xchg
mov
push
and
mov
aaa
push
sbb
push
nop
mov
insl
mov
mov
pusha
sahf
pop
pop
mov
and
mov
and
call
inc
sub
mov
jne
mov
jmp
pop
cmpsl
jo
insb
or
sub
cmp
and
pop
sarb
sysenter
pop
mov
adc
int
xor
sub
mov
add
jno
adc
jg
std
and
hlt
sbb
lods
and
enter
add
cmp
and
pushf
push
mov
or
rcrl
mov
cmp
mov
mov
imul
or
push
jo
insl
lods
std
jae
cmp
je
jo
push
push
pop
dec
sti
mov
sbb
mov
bound
in
sbb
pop
adc
pop
pop
call
call
jne
pop
mov
cmpb
dec
inc
icebp
dec
je
jmp
leave
adc
cs
mov
outsb
cld
xchg
adc
jmp
dec
arpl
push
mov
cmp
jle
jb
add
push
dec
add
mov
push
push
nop
adc
pusha
sti
orb
decl
jae
insb
push
fdivrs
sbb
jg
mov
insl
mov
mov
mov
pop
cs
ja
cmp
xor
gs
mov
and
fs
xchg
gs
mov
gs
insb
outsl
fsts
jb
and
mov
fdivl
int
loop
jecxz
pop
in
push
mov
xchg
je
out
call
xor
shll
jae
popa
imul
xlat
in
lcall
ret
les
lcall
enter
fldt
cmp
hlt
xchg
push
xchg
mov
mov
push
cwtl
cltd
lcall
fwait
pushf
adc
mov
insl
lahf
sub
mov
mov
mov
inc
add
test
shll
hlt
cmc
div
push
je,pn
clc
ds
hlt
cli
jns
lea
adc
pcmpeqb
cwtl
ss
shlb
dec
or
pop
addr16
inc
lret
aaa
adc
push
fcoml
bound
inc
in
pop
pushf
lret
out
pop
int3
jmp
rorl
gs
clc
ds
imul
sub
test
daa
pop
mov
dec
rolb
pop
mov
cmp
or
rcll
adc
sti
inc
pop
pushf
in
sbbl
jg
out
jmp
test
sar
arpl
and
sti
pusha
xchg
or
loopne
mov
ljmp
cli
into
dec
jbe
shl
pushf
pop
cli
inc
ret
mov
test
popa
dec
lds
inc
sub
nop
jmp
aaa
xor
dec
cwtl
inc
les
inc
fmuls
ret
jmp
adc
push
mov
nop
repnz
lahf
fsubrl
hlt
cli
call
sbb
mov
push
stc
adc
sub
sub
std
das
mov
imul
mov
mov
mov
push
es
or
mov
push
repz
push
xor
data16
imul
icebp
lock
sub
mov
mov
rcr
sti
and
adc
inc
in
push
lret
and
sbb
dec
and
sub
stos
mov
or
popf
push
push
bound
xor
sbb
sub
sbb
xor
iret
add
inc
adc
lods
pusha
add
jl
add
iret
ret
jmp
lock
dec
je
mov
inc
adc
and
and
mov
mov
negl
sbbb
cmp
jl
jns
jbe
dec
cmp
imul
fidivrs
xor
push
cltd
ffreep
mov
push
push
push
push
aad
aam
mov
nop
lret
cmpl
ss
push
iretw
ss
in
pop
hlt
adc
cmc
ja
xchg
jmp
xchg
pusha
and
cmp
dec
lret
xchg
jbe
xbegin
mov
bound
call
push
cmp
jae
insl
js
mov
jmp
and
cs
cmpsb
mov
cld
and
mov
sbb
sbb
mov
jno
fsts
lods
or
cmpsl
or
data16
adc
adc
xor
and
sub
inc
push
and
xlat
jmp
jg
xlat
or
or
addb
xchg
loope
cmpb
inc
mov
mov
andl
xor
cld
call
xor
pop
or
pop
leave
add
inc
nop
insl
lods
jo
ret
cmp
xchg
sub
out
cld
cld
adc
mov
jp
cmpsl
insb
insb
xor
shll
push
dec
push
imul
fsubs
ja
fildl
shll
fstp
jae
imul
xchg
sbb
cli
sti
cld
xor
insl
icebp
lcall
mov
pop
ss
roll
mov
mov
imul
shll
xor
push
outsb
fs
in
mov
pop
enter
sub
push
mov
lret
popa
js
sub
mov
push
dec
shll
inc
jb
loopne
add
lods
fdiv
xor
mov
adc
mov
add
pop
push
inc
mov
cli
adc
popf
xlat
pop
push
fildl
pop
push
hlt
add
js
and
xor
sbb
mov
imul
int
in
clc
adc
jmp
loop
andb
and
aam
xchg
jae
cmp
outsb
shlb
push
imul
outsl
ja
scas
in
xor
mov
shl
sbb
cmp
xchg
test
push
in
fmul
insl
add
sub
insb
and
push
fs
cs
or
loope
add
add
jl
fadds
bound
adc
ds
xor
cmpsl
sbb
out
outsl
or
add
adc
call
pusha
pop
jbe
dec
rorl
mov
mov
fwait
call
insb
xchg
clc
lock
jge
lds
and
dec
loopne
jg
xlat
or
sub
rcrl
xchg
fwait
or
push
stc
inc
in
les
or
adc
adcb
push
pop
push
adc
push
insb
outsl
sub
push
or
jne
fcompl
sbb
and
pop
pop
adc
or
test
aaa
in
out
mov
hlt
push
mov
sbb
gs
loop
cltd
icebp
lock
out
decb
movsl
movsb
cmp
hlt
loopne
pop
and
subl
rcrl
add
sub
jecxz
mov
add
fs
out
push
push
add
pop
push
loop
ja
add
pop
add
fsubl
movzbl
nop
inc
push
sbb
div
mov
aas
sub
add
mov
xorl
and
push
clc
add
add
out
push
dec
jo
fldt
push
icebp
popa
pop
repnz
fcomi
imul
div
insb
scas
lcall
inc
test
stos
imul
imul
xchg
xor
sub
cmpsb
dec
sub
add
xorl
xchg
sbb
xor
outsl
testb
test
pop
dec
push
dec
or
enter
xchg
xchg
test
push
sbb
or
mov
adc
orb
sbb
mov
xchg
ss
inc
cmp
add
inc
push
mov
sub
addr16
inc
in
sub
xor
ss
in
jl
stos
mov
dec
clc
outsb
cmp
icebp
sub
in
push
pop
popf
inc
dec
xchg
jo
mov
in
lds
test
push
jae
shr
aaa
sbb
pop
repz
pop
fwait
popf
insb
arpl
sub
sbb
sbb
cld
pop
cmpsl
mov
mov
jne
jl
mov
push
xlat
lea
or
mov
out
ljmp
add
rcll
mov
cwtl
push
jns
or
pop
and
jae
idivb
addl
divb
sbb
jno
push
pop
push
iret
repnz
and
and
mov
addr16
lds
test
adc
shrl
aas
insb
pop
das
pusha
mov
mov
pop
pop
mov
or
inc
jg
cmp
lahf
mov
or
push
inc
mov
or
cmc
cmp
mov
and
loopne
or
call
adc
call
repz
add
std
push
xchg
repnz
xchg
std
xchg
sti
aas
xchg
sti
and
xchg
scas
mov
sub
fimuls
cltd
xchg
pop
mov
mov
movsb
or
pushf
mov
int3
push
ficoml
mov
pop
push
daa
add
mov
adc
fmull
sbb
pop
sbb
loop
movsb
fwait
or
mov
adc
mov
out
fmuls
or
out
sub
and
ficompl
mov
cs
pop
lcall
shll
mov
imul
stos
xorl
cmp
cmpsb
mov
and
cmpsb
imul
lcall
lcall
and
add
sbb
enter
lcall
into
inc
scas
imul
lcall
pop
xlat
aaa
fcomp
shll
imul
outsb
or
and
shll
and
xor
arpl
jo
shll
lcall
cmp
xor
shll
inc
inc
cmp
inc
jae
hlt
call
or
xchg
incb
mov
sub
dec
and
adc
push
or
add
push
push
fildl
xchg
push
push
rorb
push
sub
sbbl
jge
mov
ja
push
rolb
nop
fistpl
arpl
lea
js
xor
sbb
jo
je
sub
mov
in
mov
dec
pop
into
leave
push
cltd
jbe
pop
xor
movsb
hlt
divl
jge
xchg
pop
call
push
add
xchg
int
xor
or
loop
push
cmp
mov
out
cmp
rcrb
push
shll
loope
pop
mov
mov
sub
adcl
inc
and
mov
je
mov
jle
je
test
jp
or
and
fistpll
or
pushl
add
and
or
mov
sahf
add
jmp
adc
dec
les
popf
mov
mov
in
jmp
or
cli
in
push
iret
lea
xchg
ljmp
enter
add
fcomi
xlat
int3
fnstcw
sahf
movl
dec
je
add
pop
inc
mov
cmp
mov
stos
push
adc
xchg
insb
fwait
mov
jne
inc
mov
sbb
aad
inc
sub
sub
push
mov
mull
mov
adc
test
fs
sbb
adc
push
std
test
xlat
cmpsl
arpl
lds
shlb
jl
adc
or
in
ud2
sub
push
push
test
or
bound
sub
mov
inc
clc
std
rorl
pop
stc
xchg
pop
enter
cmpl
lods
std
cmp
or
fnstcw
shl
adc
xor
jecxz
scas
mov
cmp
push
xchg
mov
and
xor
dec
call
in
push
adc
jo
push
dec
ljmp
stos
jg
shl
inc
mov
cwtl
push
add
insb
scas
shr
adc
les
pop
cmp
fdivrl
rol
inc
jno
jecxz
cmc
lcall
jecxz
outsl
sbb
in
push
push
dec
push
mov
ss
sub
pop
gs
outsl
movl
cmp
and
dec
lret
push
mov
or
pop
push
cmp
xlat
imulb
rep
or
add
add
movsb
xchg
mov
call
mov
push
loope
repnz
je
sbb
add
adc
aam
xchg
mov
leave
push
push
jo
leave
cmp
addr16
add
aam
sti
into
push
adc
cs
sbb
fldl
lods
pop
add
insb
xor
adc
add
mov
jne
cwtl
in
fs
into
out
out
pop
pop
push
and
jp
cld
sbb
fists
lock
sbb
add
neg
sub
jmp
enter
add
sbb
addr16
and
mov
sub
sub
mov
or
and
mov
cmc
pusha
orl
inc
sbb
es
lods
xor
push
es
jnp,pt
negl
rorb
and
and
in
mov
les
sbb
add
add
add
sub
push
push
daa
insl
insl
cs
sti
insb
cld
insb
dec
es
movsb
imul
pusha
nop
je
out
dec
adc
pop
dec
inc
shll
rorb
enter
xchg
xchg
gs
insl
insl
inc
je
cmpsb
mov
insb
cwtl
add
gs
das
push
or
or
mov
je
shl
dec
mov
fwait
inc
lahf
cmc
mov
lea
cs
in
nop
xchg
sahf
cmpsl
aaa
dec
mov
jecxz
sbb
sahf
jne
out
inc
fdivrl
jg
pop
lea
push
addr16
in
in
pop
insl
loopne
out
fimuls
outsb
sbb
jb
pop
sbb
adc
push
push
jne
dec
fs
mov
test
dec
outsb
jmp
inc
push
xchg
test
sub
iret
sub
incb
sbb
sbb
gs
fcoms
xchg
nop
fwait
pop
sar
stc
mov
stc
mov
mov
mov
xchg
jmp
sub
adc
push
lds
push
sbb
stos
jnp
nop
mov
pop
push
pushf
jne
add
push
push
pop
cld
pop
int
mov
mov
test
mov
or
pop
insb
push
push
fdivrs
fidivs
push
push
push
loopne
fwait
imul
adc
inc
lock
in
fnstsw
shrl
sub
inc
jmp
sbb
mov
cmovo
add
sub
and
popf
push
mov
test
sbb
mov
jl
jge
jns
je
xor
xlat
cmp
inc
adc
jae
sbb
xor
jge
cmp
enter
int
sub
popf
les
mov
dec
sar
sub
mov
lret
int3
rcl
fcomp
in
subb
call
dec
add
enter
aad
xor
std
sbb
and
pop
cmp
mov
mov
jp
and
clc
data16
jmp
pop
jno
insb
mov
xor
add
lods
pop
push
mov
in
pop
jb
dec
test
dec
xlat
les
xor
or
adc
inc
outsl
fsubrs
jnp
mov
cltd
mov
pop
aam
into
idiv
jle
pop
hlt
cmp
pop
mov
ret
and
in
xor
outsb
mov
sub
mov
outsl
ret
and
xor
add
dec
lock
push
lods
jnp
push
ret
push
aad
inc
adc
inc
cmp
lock
xchg
inc
js
hlt
push
xor
or
dec
dec
gs
xchg
gs
dec
inc
push
cs
pop
xchg
fs
insb
test
fs
les
jo
insb
jne
sub
mov
cs
insb
push
mov
jg,pn
pop
sub
mov
lret
dec
outsb
je
push
jb
mov
lcall
push
movsl
cmpsb
roll
jne
cmpsl
push
pop
test
xchg
pop
stos
push
lods
lods
rorb
add
jo
dec
jo
xchg
gs
outsb
push
gs
jbe
gs
das
roll
aam
imul
popa
xlat
xor
mov
es
popa
sbb
ss
rcll
cwtl
js
insb
inc
mov
lcall
leave
je
push
fists
dec
shll
jae
lcall
mov
xlat
xor
jb
mov
or
gs
mov
push
mov
xor
jge
sbb
push
or
lods
fdivrs
adc
clc
add
add
sub
jg
std
int
adc
cld
sti
adc
sbb
lds
inc
add
push
jge
loop
pop
outsb
insb
dec
push
clc
int3
lods
xor
dec
cmp
pop
pop
aam
pop
mov
test
std
push
jmp
push
pop
dec
xchg
das
jmp
or
sti
je
push
adc
in
jecxz
lock
imul
rorl
mov
lods
imul
xor
jp
fisttps
movsb
or
cwtl
xchg
shl
push
sbb
or
test
push
push
out
and
ds
add
pop
add
jne
fisubrs
call
cli
and
stos
cli
ja
cmpsb
orb
out
das
negb
aas
out
cmpxchg
clc
pop
add
sub
jp
stos
add
scas
inc
movsb
pop
bound
pop
sahf
pop
add
fildl
lock
call
rcr
hlt
push
add
cmp
loope
mov
cwtl
push
pop
out
out
in
fadds
sbb
inc
incl
les
add
ljmp
lock
xchg
gs
xchg
ja
xor
xor
lret
lods
cs
fs
pop
push
dec
shll
jbe
jb
add
arpl
mov
rcll
jbe
pusha
push
jnp
pop
inc
aaa
js
pop
mov
enter
sbb
push
mov
push
popa
sarl
stc
es
lcall
xchg
mov
shlb
fimuls
nop
fs
pusha
cmpb
dec
or
and
add
icebp
stos
pop
mov
loope
or
lret
adc
sub
sub
pushf
sub
jg
lock
call
fdivl
jbe
mov
lock
call
jne
cmp
and
push
push
sub
sub
sbb
and
add
jb
cmp
popa
loope
sahf
jns
inc
in
xlat
insb
jge
dec
xor
inc
dec
push
loopne
pop
xchg
lea
jae
arpl
xchg
gs
outsl
outsb
cmp
addr16
outsl
jae
add
adc
lcall
aad
in
sbb
jae
negl
dec
or
sti
pop
cmp
andb
pop
dec
sub
loopne
sub
and
neg
sbb
add
xor
adc
pop
rclb
add
rol
push
cmp
movsl
dec
xor
mov
cmp
icebp
int
pop
push
lock
and
loope
add
sub
es
sbb
je
cmp
je
outsl
arpl
pusha
lcall
inc
call
shrl
rclb
loopne
int3
loop
aas
enter
push
cmpl
sbb
xor
lahf
lret
inc
das
ja
xchg
andb
push
inc
movsl
in
in
pop
adc
lea
jg
stos
stos
imul
pop
jb
mov
loopne
push
addr16
sbb
inc
pop
cmp
orb
inc
sub
jl
push
cmp
inc
inc
add
mov
inc
mov
mov
insl
pop
adcb
push
xadd
adc
out
sbb
loopne
xchg
clc
sahf
or
and
insb
mov
push
pop
rcrb
push
jl
enter
add
loopne
jo
sub
adc
das
xor
lods
or
test
jb
test
dec
xor
nop
mov
shll
mov
mov
jo
cmc
cld
cmp
fs
or
mov
sbb
adc
xchg
cld
outsb
xor
adc
cmp
jae,pn
in
pop
adc
adc
or
or
cmp
jae
std
cwtl
inc
cwtl
and
pop
sub
popa
arpl
mov
imul
lret
mov
gs
imul
lret
imul
xchg
cmpsb
scas
scas
push
mov
imul
mov
lcall
js
shlb
ret
ret
lds
inc
fwait
mov
sbb
loopne
test
or
sub
cmp
popa
arpl
outsb
imul
imul
test
pop
sub
add
ret
lds
cmpsb
imul
or
dec
mov
push
lods
outsl
add
dec
jne
out
in
and
fcoms
aas
sub
shr
sbb
xlat
cmpl
ds
seto
pusha
test
push
pop
push
faddp
xor
sbb
call
sbb
call
push
xor
jbe
out
xchg
cld
mov
push
add
push
mov
dec
movsb
mov
js
xchg
mov
and
les
add
jae
arpl
leave
mov
imul
pushf
je
jo
outsl
andl
pop
fiaddl
xlat
jne
leave
bnd
sbbl
sarb
in
scas
sub
divb
cltd
popa
cwtl
or
sbb
ja
clc
popa
xor
shll
je
jb
or
pop
shll
xor
outsl
popa
sub
push
shll
je
jb
pop
cmpsb
fwait
sub
push
mov
and
jmp
repnz
jns
sbb
insl
push
out
fisubrl
cmp
mov
pop
inc
mov
lock
mov
push
jmp
fs
pop
and
push
xor
and
cld
xor
push
mov
imul
sbb
fistpl
xchg
in
xchg
lret
jns
je
insl
call
adc
rolb
arpl
sbb
je
loopne
add
mov
mov
push
or
and
int
dec
and
jne
mov
arpl
and
fmull
adc
psubsb
popa
adc
push
rcr
adc
sarb
jl,pn
outsb
mull
call
add
add
cmp
adc
add
mov
test
dec
dec
cltd
fisttps
jo
push
push
pop
cltd
xchg
jle
or
mov
stos
dec
addr16
push
jo
cmp
and
jge
pop
or
or
inc
or
mov
je
mov
ss
jne
or
pushl
lea
or
fcomp
enter
iret
xchg
and
test
jmp
fsubl
fstp
dec
imul
jmpw
arpl
jecxz
jbe
jno
dec
xchg
cs
xor
jne
sti
xor
push
push
dec
mov
andb
jp
popf
dec
pop
pop
sbb
adc
push
std
jns
adc
aaa
sbb
adc
enter
pop
popf
mov
adc
cld
adc
mov
lret
outsb
test
jge
mov
in
fadds
sub
fldenv
insl
adc
gs
shrb
push
fnsave
shrb
loopne
sub
fxch
loope
and
jae,pt
int
rcrb
out
into
rcrb
arpl
mov
jmp
adc
int
insb
pop
jg
sub
arpl
sub
sub
jae
das
or
sahf
xor
push
xor
sahf
int
enter
cmpb
outsb
leave
rcrb
data16
aad
int
gs
pop
jg
mov
add
dec
insl
lret
jo
pushf
pushf
popf
insb
and
into
pop
iret
rclb
out
pushf
shl
shrl
in
push
lcall
enter
aas
sbb
sbb
sbb
mov
push
jl
mov
sub
rorb
shrb
insb
jb
sub
leave
insl
outsb
adc
outsl
jo
leave
rcrb
jb
cmp
leave
leave
je
jbe
push
adc
inc
cmp
mov
in
in
in
mov
mov
in
mov
jecxz
out
ret
push
add
cmp
fisttps
jmp
ss
jecxz
jo
in
or
and
or
arpl
std
pushf
pop
jb
enter
lcall
in
jae
aaa
pop
adc
lcall
cmpsl
dec
xchg
out
insb
pusha
inc
popa
cmp
arpl
into
jne
gs
andb
jge
adc
gs
xchg
gs
jb
popa
mov
je
movsl
mov
or
inc
jo
cmp
ss
or
mov
bnd
add
lea
pop
arpl
jns
in
fsubrl
orl
mov
inc
push
lds
add
push
hlt
fstpl
inc
pusha
cmp
jb
scas
cs
in
cmp
dec
jmp
and
add
lcall
dec
adcb
mov
fiadds
jp
add
cmp
adc
xchg
outsb
shrl
sub
aad
xchg
mov
rclb
xor
push
mov
clc
sub
div
andl
mov
mov
sbb
sub
push
fcomp
jg
push
sub
insl
test
jl
push
push
jmp
aad
or
mov
xor
xchg
inc
adc
and
push
xchg
pop
sbb
mov
or
cmp
sbb
sbb
addr16
outsb
imul
arpl
cs
rcrl
es
cld
jae
inc
dec
cld
add
cwtl
rcrl
pusha
jo
jae
sub
add
xor
iret
iret
push
mov
mov
arpl
js
jns
push
mov
jnp
sub
sub
dec
js
cmp
xchg
gs
xchg
inc
out
loop
xchg
cmpsb
imul
cltd
xchg
shlb
cmc
sbb
inc
mov
jecxz
push
sarl
xlat
or
icebp
mull
rcpps
xor
out
je
xor
xor
shrl
cmc
div
clc
shll
cld
std
lret
push
int3
dec
call
inc
xchg
inc
xchg
lock
lock
rorl
cmp
and
ds
outsl
push
ss
adc
push
mov
inc
inc
push
add
adc
sub
cmc
mov
out
push
cmp
mov
bound
cmp
or
loopne
cmp
outsb
loope
arpl
js
adc
fstp
stos
call
dec
dec
mov
jne
xchg
lods
flds
call
mov
xchg
xchg
movsl
insb
jmp
in
jae
mov
ds
cmp
cmp
cmp
cmp
outsl
outsl
insb
cs
cmp
gs
out
xchg
js
inc
int
call
out
pop
cmp
popf
cld
je
call
cltd
push
out
call
cwtl
sbb
mov
inc
movsb
cwtl
add
jecxz
adc
cld
adc
scas
mov
clc
jmp
mov
rolb
adc
sub
into
std
sub
mov
xor
push
jo
mov
pop
rolb
testl
in
je
xlat
push
popa
mov
imul
mov
stos
std
or
ds
in
add
lods
mov
push
jo
pop
cmpsb
out
cmp
js
adc
pop
imul
add
push
mov
pusha
sbb
dec
xor
mov
stc
jo
push
mov
ss
adc
cmpl
mov
je
fucomp
int
sub
addb
sub
push
pop
mov
faddp
mov
xchg
jg
adc
add
mov
lret
sbb
jge
inc
movsb
sbb
es
insb
mov
xchg
push
lods
and
push
or
cmpsl
dec
mov
out
jns
cmp
cmpsb
pop
mov
mov
mov
aas
cmp
stos
lea
lods
sub
jb
push
ret
and
lcall
jl
leave
sahf
xor
add
subb
jmp
shlb
pop
xor
lret
cmpsb
pop
stos
jmp
mov
mov
and
mov
inc
mov
cmp
pop
mov
sbbb
or
push
xor
pop
loope
and
or
lea
repnz
icebp
pushl
and
push
and
jae
imul
sbb
cmp
rolb
jnp
shrb
imul
ja
push
orb
lods
push
pop
sarb
push
push
in
adc
add
mov
sub
fldcw
cmp
cmpsb
add
push
andb
or
cmp
test
jbe
and
mov
mov
cmp
jl
add
jg
inc
cmp
jb
cmp
sub
std
jl
das
popa
adc
test
or
add
mov
or
cs
mov
mov
fisubl
or
or
and
mov
mov
mov
or
ficoml
or
push
rorb
xchg
jo
ljmp
mov
daa
repnz
rorb
mov
fisttpl
inc
mov
inc
data16
or
inc
shll
or
pop
cmpsl
adc
push
mov
fnstcw
pop
call
mov
std
aas
testb
push
mov
push
sub
mov
mov
shl
push
push
cld
ret
sub
std
push
or
fwait
inc
int
adc
sub
cli
inc
jo
popa
in
add
xorb
push
mov
in
ss
lock
mov
in
cmp
sti
adc
and
push
sbb
push
mov
jns
push
pop
push
or
xor
push
mov
fdiv
xor
lea
insb
out
adc
jmp
add
sbb
bnd
sti
pop
push
ja
xor
cmp
jne
mov
push
sbb
mov
adc
push
add
inc
pop
jle
out
cmp
jmp
add
mov
fimuls
pushf
pusha
ss
cmpsb
int
ret
add
or
mov
das
les
call
jne
lods
and
jl
push
loopne
sbb
stos
lea
adc
push
jne
and
addps
add
mov
jp
sbb
add
jg
lcall
inc
or
int
mov
or
xchg
or
insb
add
ja
ret
xchg
lea
inc
mov
ret
fcoml
lods
cmp
sub
ret
loopne
adc
fmuls
or
enter
cmpb
mov
ja
mov
jne
cwtl
std
dec
jbe
mov
mov
std
fidivl
cmp
jne
sahf
mov
mov
mov
imul
jg
push
mov
pop
cmp
push
scas
aam
clc
add
sbb
cmp
xor
jne
xor
mov
int3
mov
jecxz
xor
data16
cwtl
jg
je
push
loopne
bound
int3
jmp
outsl
bound
inc
push
mov
jl
xor
add
enter
add
scas
or
jmp
push
bound
dec
jle
jae
push
jge
roll
sahf
pop
mov
out
adc
xchg
dec
add
mov
sqrtps
cmp
jo
int
mov
movsb
mov
loopne,pt
ret
orb
and
adc
push
jne
mov
adcb
xchg
or
imul
sub
mov
add
mov
daa
subb
arpl
jmp
sbb
mov
loop
roll
stos
add
fsubr
fcmovne
scas
subl
cmp
xlat
push
sgdtl
lock
mov
and
mov
or
mov
jmp
or
add
or
inc
fmuls
std
lret
imull
jmp
cmp
add
cmp
cmp
pop
shlb
jg
jle
cmp
jl
cmp
jg
push
inc
call
pop
jb
dec
pop
sbb
ret
dec
xchg
jb
cmp
inc
dec
cmpsb
add
cmp
adc
sub
in
push
out
dec
test
and
lcall
add
sub
or
andl
mov
or
clc
dec
js
dec
pop
fadds
add
sbb
and
xchg
or
pop
loopne
int3
sarb
std
xor
dec
cmp
cmp
mov
add
mov
adc
sbbb
cmpl
cmp
incl
pop
fidivs
jb
sub
jo
add
cmp
mov
mov
cmp
iret
push
stc
push
adc
adc
or
pusha
push
jge
add
mov
add
push
mov
sbb
push
add
into
inc
lock
je
and
sub
dec
or
shll
and
adc
js
jmp
and
adc
jne
mov
sub
mov
lods
sub
cmp
mov
add
mov
cmpl
mov
in
fistpll
andl
or
jmp
jle
movzwl
mov
jne
push
and
add
add
xchg
cmp
or
loop
cmp
sbb
cmova
mov
out
push
data16
lock
and
dec
sub
jo
insb
sub
jge
out
sbbb
int3
or
push
icebp
inc
mov
jl
xchg
jb
xchg
add
jmp
xor
clc
push
pushw
mov
sub
add
cmp
push
jno
push
add
add
mov
adc
loop
inc
adc
jle
scas
iret
lahf
inc
xor
je
and
cs
sbb
mov
pushl
add
push
scas
clc
add
and
aas
sub
sbb
inc
push
mov
insb
cmp
push
mov
sbb
add
add
and
addb
call
mov
push
xchg
adc
xor
aaa
pushl
lcall
shll
fistl
and
push
addr16
mov
pop
jae
adcl
and
add
adc
sub
push
cltd
cld
inc
jmp
in
lods
mov
mov
leave
push
aas
push
mov
jge
pop
mov
clc
adc
and
cmp
mov
inc
pop
and
inc
sub
lds
jmp
loop
imul
add
pop
or
jmp
mov
out
mov
inc
subb
enter
jb
scas
push
adc
mov
or
mov
shrb
xor
mov
push
sub
xor
cmp
test
or
xor
or
or
inc
mov
lock
out
sub
gs
dec
dec
xchg
jo
jb
inc
push
cmp
pop
js,pn
fisttpll
lds
stos
mov
in
cmp
addl
push
or
mov
or
xor
call
shll
movsl
std
sbb
cltd
mov
or
lret
fldcw
inc
sub
je
repz
or
add
imulb
jl
and
js
pop
adc
scas
jbe
pop
xchg
aaa
lock
shl
mov
call
enter
test
pop
outsw
outsb
je
adc
push
mov
cltd
push
pop
mov
xor
mov
cmp
in
or
cld
lret
addr16
movsb
add
xor
stos
inc
xchg
mov
icebp
mov
es
aam
addb
xchg
or
push
inc
arpl
or
fdivrs
cmp
adc
daa
ffree
and
jo
stos
pop
cmp
in
and
push
push
call
sbb
cmp
jl
or
loop
mov
pop
sbb
or
push
or
mov
jo
scas
sub
ja
jle
sbb
jae
stc
mov
bound
call
mov
iret
pop
mov
cld
scas
call
sub
movsb
sbbb
fcom
jo
mov
cmp
in
mov
add
push
mov
std
mov
frstor
in
add
and
fisttpll
push
das
pop
adc
loopne
mov
fwait
mov
mov
cs
or
adc
and
inc
mov
lods
and
jecxz
int
cmpb
sbb
xorl
loope
adc
inc
push
movl
push
or
ret
call
movsl
jae
push
adc
movsb
add
sub
lea
inc
hlt
lds
outsl
mov
rol
lock
call
push
and
adc
and
and
and
int3
int
repnz
xor
xchg
movsl
sbb
sar
ret
ret
mov
jne
vpxor
pop
xchg
lods
ret
mov
gs
jae
data16
sub
xchg
in
lret
popa
jns
dec
xchg
gs
leave
inc
sub
enter
out
and
or
or
or
jne
jb
or
movsb
xor
mov
lock
cmp
fs
pop
push
cmp
push
add
push
xor
add
ret
int3
pop
adc
lock
es
mov
int
enter
test
les
pop
ss
addr16
xor
scas
sub
ljmp
lea
pop
call
je
sub
fisttpll
icebp
call
cld
add
push
pop
dec
inc
add
das
mov
aas
loopne
inc
inc
xchg
aam
pop
jne
or
adc
xchg
add
insb
xchg
gs
xchg
outsl
jb
jb
gs
mov
in
sbbb
xchg
jo
cmc
hlt
out
mov
adc
add
popf
int3
aam
inc
lods
mov
pop
jb
pushf
nop
enter
add
mov
xor
push
sub
addl
jno
push
mov
xchg
int
or
push
mov
push
xlat
pop
sti
hlt
jmp
jbe
mov
test
sbb
add
cmp
cmp
pop
leave
inc
or
rcrb
jmp
mov
lret
or
adc
sub
mov
repnz
xorb
mov
xchg
aas
cmovo
adc
das
insb
xor
jbe
aas
pop
inc
js
xchg
mov
mov
sub
sub
xchg
sbb
and
fists
dec
xor
pop
cmp
ds
xor
enter
mov
or
in
mov
mov
movsb
daa
jp
out
mov
xor
mov
push
dec
inc
test
fs
out
and
mov
mov
xor
add
adc
outsb
imul
sti
imul
or
arpl
and
push
add
jbe
xchg
cmp
fdivs
sbb
jae
inc
add
lods
sub
inc
push
jb
arpl
mov
add
jae
fs
ss
decl
outsl
outsl
insb
shlb
xor
popa
jo
xlat
in
push
add
jb
jne
and
ss
adc
jo
lcall
insb
and
aad
test
jb
sbb
mov
bound
jb
inc
packsswb
shlb
push
fiadds
fidivrs
or
sbb
sbb
fs
adc
xor
adc
jg
or
insb
jae
jb
add
xor
push
or
pop
or
xor
cs
jg
dec
and
inc
jns
add
arpl
imul
push
and
mov
mov
popa
je
add
dec
aas
adc
lods
jae
add
stos
sub
xchg
gs
js
jno
fucomi
gs
inc
outsl
jb
outsb
and
push
lods
jmp
fsubrs
push
gs
outsl
push
adc
int3
dec
sbb
roll
push
orb
sbb
jecxz
aad
mov
sub
push
push
push
imul
inc
cmp
lods
mov
in
pop
ret
andb
arpl
divb
jno
dec
pcmpeqb
and
pusha
xchg
push
das
or
xorl
push
push
fadds
insl
inc
fwait
mov
lahf
shlb
mov
outsl
imul
jg
movsl
cmp
pop
lods
hlt
dec
xchg
add
or
test
inc
xchg
push
out
jo
imul
sbb
inc
add
into
fiadds
outsl
jo
movsl
mov
test
outsl
sbb
fisttps
xor
outsb
push
ret
loope
into
mov
inc
imul
cmp
push
mov
xadd
add
jnp
cmp
jbe
rorw
adc
inc
sti
dec
test
cs
mov
enter
add
push
outsb
push
leave
fs
jo
fisubs
icebp
punpckhbw
push
dec
inc
xor
fldt
lods
add
jo
je
push
push
or
add
add
insb
popa
cmpsb
inc
push
pop
ret
sbb
gs
fs
popa
xor
cmp
lods
jnp
xchg
inc
pop
pop
and
push
rcll
jae
add
dec
aad
jno
mov
xchg
jb
movsl
jae
add
sbb
add
xchg
popa
test
outsl
mov
scas
pop
sub
xchg
mov
push
movsl
aad
mov
fmull
push
push
or
mov
push
jle
fimuls
or
cmp
movl
insb
arpl
push
scas
out
mov
or
enter
xor
xchg
mov
sbb
mov
mov
and
lea
dec
mov
pop
pop
pop
add
push
mov
imul
cmp
push
es
jo
out
jne
add
xor
mov
fisubrs
add
jbe
add
xor
jmp
mov
adc
iret
mov
and
and
addr16
outsb
jne
jno
test
movsl
add
jne
cmpsb
mov
arpl
jo
inc
popa
arpl
mov
sub
pop
inc
inc
add
mov
pop
xlat
int3
addl
je
add
or
shll
sahf
imul
adc
jecxz
jo
cltd
add
insl
loop
xchg
fsubrs
or
lret
lock
testb
xor
jb
dec
xor
fimull
pop
mov
add
pop
data16
imul
inc
in
rorb
xchg
popa
mov
jne
jnp
insb
jecxz
push
out
inc
lds
xor
jae
mov
cmp
push
push
jns
lahf
adc
rcr
jo
push
aas
add
aam
pop
das
mov
ret
aas
xor
fistpl
inc
pop
push
add
loopew
jmp
testl
jge
out
bound
outsb
cwtl
in
lcall
leave
jbe
xchg
pusha
ficomps
add
fildll
jg
mov
xchg
and
push
push
adc
inc
add
pusha
ret
adc
pop
lods
and
dec
insl
cmp
sbb
mov
xchg
pushf
fistpl
pop
add
fiadds
add
push
mov
or
mov
inc
faddl
out
push
adcb
es
mov
inc
or
cmp
dec
push
dec
xchg
insl
popfw
jmp
pop
je
in
pcmpgtd
mov
jmp
jns
pusha
and
xchg
pop
sub
rorl
imul
cld
pop
pop
inc
shll
or
and
push
push
mov
add
add
stos
lods
cmp
in
jg
repz
cmp
push
jo,pt
mov
test
les
loopne
cld
add
lcall
aaa
cwtl
aaa
movsb
aaa
test
mov
mov
aaa
aam
fdivs
in
call
incl
cmp
cmp
cmp
dec
cmp
cmp
cmp
jno
jp
push
cmp
insb
cmp
cmp
dec
cmp
cmp
cmp
cmp
cmp
cmp
jl
mov
nop
cmp
cmp
cmp
pushl
jbe
cmpl
sahf
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
xchg
cmp
incl
sub
dec
aas
push
aas
outsl
aas
xchg
pushf
aas
scas
aas
mov
aas
aad
out
clc
aas
mov
dec
adc
xor
xor
xor
fidivl
xorb
xor
xor
nop
xor
xor
xor
rdpmc
xor
xor
push
xor
mov
pushl
cmp
adc
inc
aas
inc
aas
into
aas
aam
in
aas
cld
dec
pusha
inc
lcall
xor
xor
xor
xchg
mov
repnz
xor
inc
xor
jno
pushl
jbe
lahf
xor
or
daa
xor
aaa
xor
jo
jne
repz
xor
add
xor
nop
adc
xor
xor
imul
pushl
inc
aaa
pop
aaa
mov
cmp
cmp
sarl
fidivrl
lock
cmp
cmp
cmp
cmp
cmp
cmp
jge
lcall
cmp
cmp
cmp
in
fbstp
or
adc
push
cmp
pop
cmp
jae
test
fwait
cmp
call
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
inc
pushl
cmp
cmp
cmp
cmp
cmp
push
cmp
cmp
dec
xchg
pop
push
ds
aas
sub
add
gs
mov
clc
loope
call
dec
cld
or
adc
and
ljmp
sub
das
xor
xor
xor
xor
xor
xor
xor
xor
xor
inc
xor
decl
push
xor
mov
mov
mov
xor
inc
xor
in
or
jg
ljmp
xor
inc
sbb
cmp
xor
jmp
jb
enter
sub
jbe
xor
movsb
xor
into
xor
mov
ss
jp
test
xchg
mov
cmp
cmp
cmp
loope
clc
sbb
cmp
xlat
cmp
cmp
cmp
outsb
clc
pop
js
cmpl
cmp
cmp
add
arpl
cmp
data16
lcall
cmp
cmp
cmp
cmp
cmp
std
sbb
jb
cmp
cltd
cmp
or
and
ss
add
cs
aaa
aaa
lret
inc
mov
xor
xor
xor
pushl
cmc
or
add
xor
xor
xor
xor
pushl
adc
sub
dec
xor
xor
xor
cltd
xor
dec
pushl
xor
xor
xor
xor
xor
jl
mov
xchg
ss
out
hlt
ss
push
aaa
xor
aaa
dec
aaa
push
aaa
xorb
adc
cmp
aas
cmp
push
cmp
lcall
jb
jl
cmpb
cmp
pop
cmp
cmp
cmp
cmp
pop
cmp
insl
cmp
mov
movsl
incl
cmp
or
cmp
cmp
movsl
cmp
aas
jg
cmp
cmp
add
cmp
pop
cmp
or
cmp
adc
and
das
icebp
icebp
push
ds
ds
jae,pt
dec
sar
jge
xchg
ds
jns
jle
mov
lea
xchg
pushl
pushf
xor
xor
xor
xor
xor
ret
xor
xor
lcall
xor
xor
xor
xor
jne
jge
xchg
mov
xchg
xor
sar
xor
xor
xor
ja
adc
xor
xor
pushl
xor
xor
xor
xor
pop
xor
xorb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
pop
cmp
cwtl
cmp
lcall
cmp
xor
cmp
cmp
cmp
cli
jg
cmp
cmp
pop
cmp
fwait
ds
ds
aas
bound
jne
out
pop
lea
xchg
aas
fwait
aas
mov
aas
mov
aas
lret
loope
movsl
xchg
fnstsw
loop
ljmp
jmp
add
inc
decl
xor
xor
xor
xor
xor
xor
xor
call
push
xor
cmpl
jno
js
mov
nop
xor
shll
mov
out
in
sbb
outsl
dec
mov
xor
pop
cmp
xor
xchg
xor
das
xor
xor
movsb
sub
lods
mov
jge
mov
xor
xor
xor
jo
pushl
stc
xor
xor
xor
xor
xor
xor
xor
pop
xor
dec
and
xchg
fwait
xor
xor
sbb
fbstp
sub
xor
xor
xor
xor
xor
xor
icebp
sbb
pushl
xor
xor
xor
cmp
outsl
xor
mov
xor
hlt
xor
or
adc
cmp
ss
ss
cmp
pushl
nop
ss
mov
ss
ss
out
divb
pushl
inc
aaa
push
aaa
data16
imul
dec
pushl
jg
nop
aaa
lcall
aaa
cli
aaa
add
cmp
mov
jg
cmc
cmp
cmp
mov
cmp
cmp
inc
cmp
push
cmp
cli
scas
inc
cmp
or
cmpsl
cmp
xchg
loop
repz
lea
cmp
decl
in
cmp
cmp
hlt
cmp
fidivrl
xchg
sahf
ds
fdivrl
dec
aas
pop
aas
outsl
push
pop
clc
je
jnp
ficompl
xor
xor
pushl
xor
push
xor
stc
xor
outsl
xor
jnp
cli
inc
xor
xor
jae
jp
cmc
aaa
cld
xor
pop
lods
xor
cli
xor
jg
ret
xor
inc
xor
pop
xor
xor
xor
xor
outsl
mov
xor
xor
xchg
dec
xor
dec
mov
push
ljmp
xor
xor
sbb
jb
js
ljmp
xor
xchg
scas
mov
xor
sbb
or
xor
inc
inc
and
stos
or
test
adc
scas
dec
push
dec
jmp
push
aam
testl
push
pop
nop
test
frstor
jno
mov
je
dec
pop
sarb
xchg
out
fdivrl
jle
adc
push
cmp
adc
wbinvd
mull
or
add
lahf
cld
pop
sub
divl
add
and
sbb
popa
shlb
push
mov
add
and
aaa
push
and
and
push
jno
add
cmp
add
mov
and
push
add
pusha
jg
push
divl
jb
add
and
xor
inc
and
testl
ja
daa
and
or
pop
ss
ret
add
xor
or
sbb
dec
ljmp
mov
divl
add
adc
rolb
lcall
add
cmpsb
imul
fldenv
mov
add
pop
ss
roll
ror
mov
push
sbb
addr16
add
pop
mov
add
sti
jae
adc
or
add
mov
inc
dec
sub
xchg
add
inc
adc
js
cmpsb
pushl
adc
inc
push
sub
push
push
mov
and
add
adc
add
dec
repnz
enter
and
fsubs
add
add
add
and
and
or
add
and
mov
add
and
and
dec
or
add
and
xchg
pop
nop
inc
jmp
add
add
or
outsb
ds
push
push
cwtl
lods
mov
and
pop
and
ss
jns
and
mov
sbb
inc
sbb
xor
inc
cs
pop
repnz
dec
sbb
sub
and
xor
inc
repz
in
and
fldenv
push
adc
push
push
add
xor
xor
xchg
call
pop
add
lds
inc
aam
adc
inc
push
inc
inc
cs
sub
mov
ret
fcoml
add
mov
and
in
mov
fisttpll
xorl
mov
inc
xor
cltd
int
lods
pop
dec
mov
pavgw
mov
pop
lods
dec
sub
push
cmp
pop
loop
leave
pop
and
or
inc
and
add
and
pusha
and
pop
leave
cmpl
push
and
inc
inc
dec
sub
xlat
pushf
stos
jo
inc
xor
pop
pop
leave
xchg
leave
mov
adc
adc
or
xor
dec
in
jne
repnz
jo
add
push
xchg
dec
jbe
test
or
das
or
xor
test
and
cmp
pop
inc
incl
idivl
fisttps
mov
add
fidivrs
mov
gs
xor
lret
repz
lods
or
add
pop
roll
pop
jg
and
mov
fs
jb
out
js
push
xchg
or
pop
xchg
xorl
xchg
in
outsb
gs
cs
adc
push
rorb
inc
leave
mov
lret
jne
arpl
pop
xchg
lea
gs
xchg
gs
arpl
test
push
sti
xor
mov
jne
movsb
aam
inc
cmp
hlt
je
sub
mov
dec
gs
push
aam
jnp
adc
fcomi
cmp
out
insb
xor
xor
cs
test
xor
rcl
push
or
stos
test
xchg
sub
dec
mov
les
add
std
out
std
aas
enter
or
mov
bound
jns
lea
icebp
push
arpl
repz
cwtl
int3
add
xchg
add
cmp
xlat
mov
fstps
adc
sub
into
push
lds
push
inc
sub
xchg
add
push
int
and
lods
jmp
push
insl
mov
inc
in
add
imul
sbb
mov
outsl
enter
ret
sub
pop
add
cwtl
fldl
int
or
pop
cmp
outsb
orl
cmpsb
push
sbb
lock
pop
mov
mov
test
sbb
sbb
lea
sbb
sbb
inc
and
mov
mov
pop
sbb
add
or
loopne
add
movsb
sbb
arpl
jmp
test
sbb
stos
std
stos
std
lods
std
lods
xor
in
hlt
or
jo
sub
shrl
gs
adc
pop
add
cmp
cwtl
movsl
mov
add
mov
sub
push
jae
mov
scas
decl
call
mov
mov
fadds
pop
xchg
gs
fs
addr16
xchg
outsl
outsb
outsb
gs
fmuls
je
xchg
push
xchg
popa
jne
sub
dec
mov
push
xchg
gs
sub
adc
dec
shll
gs
fldenv
cmp
pop
xchg
js
insb
outsl
gs
mov
cmpsb
cs
jmp
gs
js
bound
outsb
in
push
xor
in
adc
je
push
adc
cli
sbb
xchg
adc
in
xchg
int3
kmovw
lea
dec
cs
movups
mov
cltd
es
insb
fcompl
sub
pop
je
cs
push
stos
sbb
negl
or
cmc
mov
push
add
sub
sbb
pop
adc
jne
push
jns
jp
or
or
sbb
fnstenv
sub
dec
fildl
jg
push
movsl
and
stc
aam
add
fcomps
adc
mov
movsb
mov
sub
sbb
cmp
fimuls
jbe
clc
insb
and
mov
aam
lock
add
fistpl
or
push
sbb
xor
mov
mov
push
adcb
dec
outsb
loopne
rcrb
xor
cmp
mov
xorb
inc
dec
sete
mov
mov
push
pop
xor
pop
mov
pop
fstpt
test
outsb
or
or
inc
popa
jp
add
or
adc
pop
pop
add
dec
add
add
or
sahf
in
cmp
and
adc
add
jb
adc
add
sti
or
add
xor
add
xor
in
sbb
add
insb
add
bound
out
mov
test
das
movsl
dec
and
enter
and
rorb
sbb
cmpl
fisttpl
mov
sub
adc
inc
or
shll
inc
cmp
hlt
jl
jl
lcall
or
data16
push
push
rolb
pop
and
pusha
dec
add
inc
pusha
or
and
add
sub
add
or
stos
test
dec
add
lods
aaa
loope
xchg
add
inc
sub
test
push
lret
add
add
imul
add
cmp
pop
mov
add
jae
push
mov
in
push
testb
outsb
jb
and
addr16
outsl
js
add
or
and
pop
add
notl
dec
insl
insl
dec
jae
pop
ror
iret
dec
adc
mov
test
sbb
mov
add
pop
push
sar
test
cmp
in
arpl
aaa
push
add
ss
sahf
insb
lcall
inc
mov
jae
push
xor
int
push
es
insb
push
sbb
inc
pop
and
shll
dec
pop
dec
shll
adcb
scas
imul
lcall
lods
mov
push
lahf
leave
add
or
movsl
add
ja
inc
pop
sbbb
in
adc
lea
add
dec
pusha
test
dec
inc
and
cwtl
push
insl
and
add
jae
ret
or
dec
gs
push
jne
mov
or
fisubs
push
inc
aad
adc
popa
cmp
pop
call
xchg
fisubs
jno
and
sbb
pop
ret
push
sub
xchg
adcb
mov
adc
add
and
imul
pop
or
out
adc
or
pop
jns
pop
add
xor
pop
lods
add
je
hlt
in
popa
fdiv
pop
xor
adc
xchg
mov
inc
imul
dec
outsl
sbb
xlat
add
sub
sbb
push
or
stos
in
add
dec
aam
cmp
push
jb
add
dec
push
outsb
ret
insl
adc
add
jne
jecxz
add
cmovns
gs
mov
jae
inc
mov
add
add
mov
dec
mov
push
jae
jmp
vpsubsw
jo
sbb
cmp
lea
jecxz
inc
movsb
jmp
xlat
and
xor
jae
and
jmp
pop
jo
popa
jns
popa
and
repz
add
addr16
sub
lea
inc
imul
mov
gs
sub
fsubl
xchg
lds
pop
out
push
jb
cmp
fnstenv
or
add
aaa
neg
je
outsb
xchg
insb
popf
xchg
lds
or
lds
add
ds
addr16
sbb
mov
xchg
pop
xor
xor
outsb
jae
inc
inc
push
sub
in
mov
insl
or
daa
dec
dec
fs
int
imul
push
daa
jbe
mov
imul
pop
outsl
pcmpeqw
fwait
adc
dec
je
and
scas
cmp
xor
pop
fmulp
test
push
mov
and
xlat
popf
jmp
xchg
inc
orb
mov
repnz
loopne
inc
test
xor
xor
fldl
push
inc
inc
xor
xchg
xor
cmp
inc
xor
scas
jecxz
xor
test
hlt
xor
xor
xor
mov
mov
divb
or
inc
ss
mov
test
lods
shlb
ljmp
mov
xor
aaa
icebp
aaa
pop
cmp
lock
cmp
mov
lahf
cmp
cmp
add
push
cmp
cmp
shrb
cmp
push
sarl
fidivrl
lock
aas
cmpb
pushf
cs
iret
mov
mov
aad
add
adc
imul
lcall
shll
or
dec
xor
test
add
xor
adc
push
inc
add
nop
mov
add
add
push
adc
sbb
and
test
xchg
fistl
in
adc
xchg
getsec
int3
add
or
subb
lcall
or
inc
or
dec
test
addb
test
rolb
add
adc
dec
outsl
jbe
mov
xor
or
jl
add
enter
dec
dec
inc
xchg
femms
mov
sub
in
cs
push
rcrb
sbb
add
jne
or
add
and
add
xor
add
or
imul
add
add
lock
pop
insb
pandn
insb
dec
or
jmp
sbb
sub
cmpsl
lods
fisttpl
in
xor
add
vmfunc
or
and
ficompl
incb
xor
mov
insb
xchg
add
and
pop
and
fs
orl
push
mov
xchg
add
into
and
sbb
shlb
rol
daa
loop
loopne
fstl
and
or
add
add
add
nop
add
add
add
inc
add
call
int
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
