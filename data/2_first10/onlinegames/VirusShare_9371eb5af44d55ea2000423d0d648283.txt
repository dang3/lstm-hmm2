sbbl
mov
iret
incl
xchg
gs
imul
xchg
sbb
in
fcmovnbe
lds
stos
fwait
xorl
lret
mov
pop
dec
aaa
sub
cltd
les
xchg
gs
add
mov
incl
jmp
add
mov
lea
rcrl
js
js
xchg
repnz
stos
mov
out
adc
add
lcall
lea
cwtl
lcall
lcall
mov
imul
xchg
fwait
call
cwtl
xchg
xchg
sahf
xchg
fwait
call
inc
test
cwtl
popf
mov
iret
int3
rcrl
cmpsl
lcall
cli
adc
lock
lock
imul
mov
xchg
clc
test
popf
lea
mov
in
add
loope
iret
lret
je
jle
xchg
idivl
inc
lret
fwait
lcall
je
mov
and
add
test
por
scas
lods
cmp
mov
sbb
sahf
aaa
mov
hlt
xor
xchg
cld
xor
xor
xchg
xor
xor
das
hlt
cs
cld
sub
adc
and
mov
les
call
and
and
aam
enter
scas
cld
push
mov
sbb
sbb
and
push
mov
fcoms
mov
enter
or
mov
or
or
pop
or
cld
add
add
xchg
push
xchg
dec
subb
pop
cmp
subl
aaa
out
paddusw
or
add
sub
pop
les
mov
test
je
adc
je
idivl
mov
int3
aas
and
dec
add
jb
addr16
cmp
xlat
stos
scas
test
ljmp
aas
mov
in
ljmp
inc
inc
lret
cmpsb
mov
icebp
repz
out
pop
fsubl
xchg
and
add
xor
cmp
repnz
movsb
ss
jl
jecxz
rorb
insb
ljmp
test
inc
bound
out
repz
notl
je
jbe
stc
pop
cli
adc
ficomps
test
cmp
xchg
stc
orl
xchg
mov
mov
loopne
dec
mov
inc
xor
add
int3
and
or
loop
out
fbld
pop
in
loope
les
pushf
xor
xchg
cld
xchg
movsb
mov
jl
dec
mov
test
jmp
mov
movsb
adc
fdivrs
mov
jge
scas
jg
ret
mov
movsb
pop
das
dec
mov
push
jmp
pushf
mov
repz
dec
dec
lret
xor
in
pop
scas
jae
ds
jae
scas
sub
iret
in
xor
xchg
push
shl
mov
call
bnd
repz
xchg
nop
jp
cmpsl
mov
testl
loopne
or
pop
in
inc
repz
dec
cmp
dec
cmpsl
sti
movsl
iret
and
jmp
jecxz
inc
fwait
lock
pop
mov
fistps
xchg
mov
jl
ss
cmp
mov
out
mov
hlt
negl
jnp
dec
pushl
jmp
pusha
imul
ret
dec
push
inc
and
dec
and
repz
push
jp
repnz
out
mov
in
stos
jmp
outsb
out
stc
jne
sub
mov
mov
cmp
loopne
sbb
cmp
stos
dec
adcl
std
ljmp
iret
jmp
lock
ljmp
loopne
std
fildl
jb
push
stos
in
xchg
add
mov
inc
sub
mov
mov
movsl
in
mov
aad
xlat
inc
int3
fildl
dec
test
dec
inc
aam
pop
or
outsl
ljmp
push
pop
and
cmp
ds
mov
scas
and
mov
lods
cmp
call
test
aam
fildll
sub
stos
fsubs
arpl
sbb
shr
pop
dec
shrb
push
adc
das
test
inc
mov
mov
sti
aas
into
add
and
jb
jae
mov
mov
or
lods
test
jb
dec
dec
sti
jg
pop
out
aas
inc
out
adc
jb
push
repnz
cltd
push
inc
xor
lods
push
xchg
xor
inc
xchg
or
jne
cld
cmp
adc
lret
cmp
jl
dec
mov
andl
test
sub
cmp
and
int
xor
cmpsl
pop
jmp
mov
pop
iret
test
adc
cmpsl
rorl
aad
jnp
das
lds
call
jne
cmpsl
mov
or
xchg
mov
test
cmpsb
push
push
add
leave
mov
cmpsb
repz
cmp
test
and
add
push
and
fimuls
pop
cmpsb
gs
iret
cld
mov
cmpsb
gs
lcall
cmpsb
inc
idiv
mov
xchg
cmc
mov
hlt
inc
hlt
stc
xor
jl
xor
dec
cli
hlt
adc
jb
scas
lods
pushl
cld
ljmp
ss
imul
pop
sbb
scas
or
repz
ljmp
hlt
cmp
mov
shll
sub
stc
adc
jb
stc
xor
xor
shll
pushf
xor
inc
xchg
ja
cs
lods
repnz
dec
repnz
inc
cli
add
mov
inc
addr16
push
xchg
sub
jb
ljmp
test
cld
add
mov
ds
aas
cli
in
inc
lret
cmp
inc
jnp
lea
pushf
cmp
lock
add
add
xor
popf
xor
fmull
pop
add
mov
lret
int3
sub
sub
and
push
sub
xchg
repnz
add
lea
addr16
push
ljmp
cltd
add
push
or
fsubrl
or
outsl
xlat
das
xchg
inc
push
xchg
inc
stc
sub
inc
xor
ss
xchg
dec
test
add
fcoml
hlt
leave
imul
dec
or
xchg
mov
nop
ror
mov
xchg
mov
dec
insl
iret
rolb
inc
stos
mov
xchg
hlt
xchg
push
out
fwait
pushf
or
hlt
dec
ds
leave
popf
rorb
lret
cli
je
add
xchg
arpl
bnd
mov
inc
sarl
add
in
mov
cmp
inc
lahf
push
cmp
xchg
push
jl
aaa
xchg
jae
dec
jmp
stc
push
mov
nop
int3
aaa
cmp
lcall
or
popf
shl
xchg
cld
ret
mov
pop
loopne
cltd
mov
ss
lahf
stc
mov
popf
inc
add
jb
scas
stc
pop
inc
scas
pushf
inc
pop
mov
pop
push
ret
out
mov
lods
fadd
fwait
scas
mov
sbbl
mov
loopne
sbb
push
ds
mov
roll
mov
adc
movhps
ret
inc
jle
in
out
push
or
xchg
pop
int3
cmp
push
out
jmp
inc
add
fdivrp
ret
sub
mov
jmp
je
loopne
hlt
xor
fidivrl
fidivl
xor
hlt
lock
xchg
outsl
out
imul
xorb
jmp
push
hlt
sar
int
and
cmpsl
call
je
repz
je
mov
push
cmp
arpl
fisttps
in
jnp
mov
scas
jp
aam
dec
fwait
ds
mov
mov
xchg
jge
stos
aad
mov
mov
fildll
scas
mov
mov
jmp
call
xchg
out
std
stos
stos
es
incl
fcom
fwait
cld
ljmp
pushl
ja
repz
sti
cld
add
inc
loopne
stc
aas
stc
mov
loopne
icebp
shr
nop
add
dec
divb
fiadds
mov
stos
xchg
xchg
inc
lea
add
sahf
xchg
xchg
nop
mov
popf
lcall
std
mov
nop
fwait
lcall
repnz
fstpt
or
cld
push
pushf
rorb
clc
cmp
data16
dec
and
or
data16
adc
inc
data16
clc
lods
xchg
pushf
xchg
and
out
or
pop
scas
mov
out
dec
inc
adc
jbe
dec
icebp
fdivp
stc
repz
cmovb
out
cld
cli
clc
std
rcll
clc
scas
repz
daa
ds
out
clc
stc
outsl
das
jb
pop
test
mov
fs
loope
leave
or
popf
mov
popf
aas
jg
rcrl
lcall
jmp
pop
cmp
lea
adc
jecxz
les
hlt
hlt
fdivrs
pop
inc
into
cld
jae
sbb
leave
jge
add
loopne
ror
mov
xchg
cld
push
dec
cmp
adc
mov
daa
std
iret
add
aad
mov
mov
mov
lret
mov
dec
inc
xor
sub
mull
mov
mov
test
fwait
stos
inc
adc
mov
lret
lcall
imul
xchg
jge
scas
movsl
xchg
jmp
mov
and
jge
dec
cltd
movsb
outsl
add
iret
int
aad
int3
sub
mov
and
ret
mov
in
insb
shll
scas
popl
inc
xlat
jle
xlat
jp
sub
xchg
out
repz
xchg
out
test
data16
lret
push
shl
in
out
repz
leave
sti
sti
shll
insb
cli
jmp
aam
jmp
outsb
jmp
cmpb
in
sbb
cld
jmp
repz
mov
bnd
sbb
jmp
cld
jmp
out
daa
aam
jecxz
mov
pop
and
daa
xor
dec
mov
cmc
add
ficoml
int
test
or
test
xor
ret
mov
jl
out
jne
cmp
stc
mov
test
scas
cmp
sub
lock
inc
add
rcl
cmp
stos
pushf
and
in
lahf
dec
scas
stc
pop
fucomi
xchg
out
jnp
mov
sub
inc
lahf
js
aas
sub
mov
rorb
mov
pop
sbb
in
gs
xor
sbb
pop
add
lret
sbb
push
fbld
repz
int3
and
mov
fwait
fwait
dec
imul
lret
jg
les
out
lods
pop
pop
aaa
dec
and
in
inc
stc
pop
rolb
mov
jmp
add
dec
xlat
mov
loop
sti
notb
mov
out
mov
mov
scas
outsb
sbb
lahf
jnp
mov
lock
faddl
inc
ret
inc
out
idivl
pop
cli
testb
or
cmp
cld
mov
insb
int3
jne
in
test
add
adc
cwtl
dec
out
je
jns
mov
inc
mov
pop
fwait
rclb
bound
xchg
xchg
mov
loope
adc
lcall
inc
out
cli
sbb
test
dec
pop
fidivrs
test
push
lods
adc
mov
ret
mov
hlt
cs
inc
jbe
add
int3
inc
sub
hlt
jle
pop
test
js
dec
lock
test
adc
push
xchg
aad
add
jbe
mulb
cmp
and
push
or
mov
shrb
scas
add
cltd
iret
scas
int3
imul
sti
dec
adc
cmp
mov
cmp
fstpt
push
in
inc
or
cmpsb
in
add
test
lret
shl
cmc
xlat
mov
mull
xchg
std
pop
stos
adc
ret
sub
pop
iret
loop
dec
pop
js
cli
push
push
bound
loop
fdivr
in
cmc
mov
and
mull
fcompl
sbb
inc
dec
and
lahf
lock
movsl
cli
dec
rorl
mov
mov
mov
in
repz
ljmp
cwtl
loopne
lcall
cmp
icebp
dec
repz
ret
addr16
pusha
jno
cli
lds
lods
pop
ret
in
cmp
sub
test
out
repnz
mov
cltd
push
sub
inc
adc
mov
cmp
imul
lahf
xchg
pop
sar
fwait
pop
test
cmp
loope
jbe
clc
sbb
fwait
nop
cmpsb
imul
mov
imul
rcll
imul
lcall
lret
and
inc
xchg
and
cwtl
cld
and
and
pop
lret
push
inc
in
pop
sbb
outsl
add
add
xchg
push
ret
divl
scas
cli
daa
scas
in
jl
mov
jl
jmp
lds
and
cli
pop
xchg
imulb
scas
lahf
push
shr
sub
xor
pop
sbb
clc
xor
lods
lods
cld
mov
cmp
adc
aad
push
out
mov
jns
lahf
out
jge
jae
pop
mov
cmp
subb
ljmp
sub
aam
sti
cmp
fcomi
xchg
shlb
dec
mov
mov
or
cltd
jle
and
ret
fldcw
mov
shl
mov
popf
pusha
jbe
and
or
mov
mov
lock
sub
out
xorb
or
adc
mov
mov
adc
testl
loope
xchg
and
and
cld
and
mov
scas
mov
bound
cld
in
aad
xchg
mov
roll
cld
sahf
in
idiv
jl,pt
std
scas
and
pop
int
push
loopne
clc
jl
sti
jl
adc
sbb
dec
jbe
cmp
mov
mov
jbe
adc
dec
fwait
push
mov
repz
cli
je
ja
pop
inc
cmp
jl
out
jno
mov
adcl
nop
lock
stc
je
mov
ds
mov
je
and
and
imul
out
cltd
outsb
mov
cltd
out
test
and
pmaddwd
mov
imul
hlt
sti
mov
mov
loope
std
mov
sbb
leave
lret
imul
testb
xchg
mov
mov
cld
mov
test
xchg
mov
jnp
mov
and
cld
or
add
dec
push
cmp
mov
dec
inc
hlt
add
mov
and
hlt
in
out
sbb
je
add
push
cld
cmp
push
pop
cld
mov
rcl
fstpt
and
jecxz
push
cmpsb
xrelease
xchg
push
scas
jbe
mov
mov
xchg
mov
int3
je
adc
repz
jecxz
cmp
push
jp
or
and
shr
xchg
in
xor
enter
jnp
mov
pushf
jae
sub
cmp
lods
arpl
fmull
ljmp
fmuls
xchg
xchg
sti
xchg
lods
xor
lock
sbb
mov
insb
fiadds
into
cmp
cmc
notl
scas
add
imul
ja
add
daa
fcmovnb
cmp
loop
fnstenv
mov
or
movsb
mov
sub
mov
in
lock
iret
je
dec
dec
mov
cld
pop
jmp
cltd
xchg
fldl
mov
loop
aaa
jmp
jmp
das
enter
inc
pop
mov
pop
cmp
sarb
jge
mov
inc
loopne
scas
sti
negl
inc
mov
arpl
mov
or
test
test
jg
xlat
lcallw
xchg
sub
mov
clc
pop
push
push
hlt
cli
cltd
cpuid
add
mov
notl
mov
orl
jmp
imulb
aaa
bound
je
pushf
dec
iret
mov
fdivr
repnz
pop
dec
mov
sbb
mov
jle
xor
rcrl
jmp
scas
pop
out
push
mov
or
inc
sti
js
cli
repz
cli
lods
mov
ficoml
or
cli
mov
cmp
cmp
cmp
aaa
cli
inc
in
push
dec
pop
jle
push
aas
fstpt
dec
push
mov
xor
in
int3
test
rcl
in
dec
xor
in
in
mov
cld
leave
jmp
in
push
filds
jbe
cld
movsb
lret
mov
mov
inc
mov
xchg
fwait
xchg
lcall
nop
pushf
mov
nop
add
repnz
fwait
mov
popf
lea
sbb
nop
aas
or
mov
lcall
mov
rol
cmpsb
in
je
icebp
sahf
mov
fldl
xchg
mov
xchg
lock
in
xchg
mov
sub
hlt
cld
loop
jnp
test
add
rcrl
test
xchg
jecxz
lea
cwtl
fidivs
mov
xchg
mov
cli
xchg
es
adc
push
aam
lcall
in
cld
scas
mov
xchg
xchg
out
pushl
jb
xchg
nop
inc
adc
jns
mov
testl
mov
adc
mov
cmp
push
xchg
dec
sahf
dec
mov
mov
lock
or
lock
jo
out
jb
shlb
sub
das
inc
ljmp
vfrczss
lods
cmp
xchg
xchg
repz
mov
popf
push
loop
ds
jmp
jo
int
xor
jmp
les
shrb
out
xchg
sahf
mov
out
fsubrp
mov
adc
adc
or
les
xchg
push
inc
pushf
shl
test
mov
lods
mov
cmc
hlt
lock
inc
push
std
fmuls
and
cltd
cmp
lods
in
call
inc
mov
xchg
lcall
mov
mov
and
jp
lahf
movsb
ror
mov
pushf
nop
mov
es
push
sahf
sbbb
stos
mov
cltd
xchg
adc
dec
xchg
pop
lods
ljmp
sbb
xchg
inc
mov
sahf
pushf
jne
call
ljmp
push
lcall
in
les
std
jp
pop
out
outsb
jbe
and
xchg
iretw
mov
in
data16
mov
xchg
lock
fsubrs
idivb
std
testb
mov
mov
into
lret
test
fdivs
mov
ljmp
add
test
ja
push
arpl
xor
pop
into
add
ljmp
add
add
int
int
int
int
int
int
int3
ljmp
int3
add
add
mov
pusha
int3
push
int3
add
icebp
lret
loopne
lret
jae
gs
push
lret
out
lret
movsl
lret
jp
add
or
lret
sti
leave
out
leave
out
pushf
leave
popa
leave
cmp
sub
adc
pop
cmpsl
add
add
leave
jmp
in
fcmovne
aam
leave
enter
enter
enter
enter
fadd
int
cmpsb
add
add
sahf
xchg
movl
inc
loop
mov
les
add
add
test
ret
rol
ret
xchg
ret
dec
ret
inc
ret
aas
ret
fadd
enter
ret
push
add
ret
jno
imul
ret
push
ret
or
jp
add
subb
test
cld
push
sbb
lahf
insl
cli
das
clc
push
mov
cli
sub
adc
inc
dec
push
cli
and
or
sbb
movsl
or
push
popl
cli
adc
cli
sub
cmpsb
or
ds
std
push
lock
testb
xchg
fcomip
clc
adc
aaa
pandn
jl
adc
mov
stc
aaa
iret
enter
aaa
lods
cmpsb
lock
fucomip
cmpsl
or
inc
jne
pushl
neg
je
aas
filds
outsl
fsubs
ds
aas
enter
std
aaa
push
adc
loope
insl
enter
arpl
insb
imul
mov
lret
scas
mov
mov
cmp
cmp
lret
addr16
cmp
and
pushl
mov
sub
mov
pop
inc
cmp
pop
gs
es
add
dec
aad
mov
gs
xchg
test
pop
xchg
gs
push
inc
sub
push
and
dec
cld
ret
mov
gs
xchg
mov
pop
xchg
gs
inc
xor
sub
xor
dec
out
lods
lahf
xchg
lret
mov
lret
xorl
inc
pop
test
fsts
divl
dec
sbb
dec
pop
jae
shrb
cmpsl
jmp
inc
clc
rcll
inc
lcall
clc
mov
inc
pop
cmpsl
mov
jmp
cmc
cld
add
sbb
add
sub
in
lret
mov
lret
sarl
lret
mov
xchg
lea
lret
mov
pop
push
inc
cmp
lret
sub
adc
insl
xchg
mov
inc
hlt
leave
push
icebp
cld
add
mov
mov
mov
sbb
jne
lret
cld
in
push
lahf
sub
mov
dec
cld
xor
bound
fwait
mov
sti
lahf
test
fistpll
dec
orb
leave
test
decl
mov
orb
and
cld
and
stos
mov
pushl
xchg
add
mov
mov
jg
lods
cltd
pushf
mov
lods
mov
aas
dec
repnz
mov
nop
cltd
mov
push
fbstp
test
mov
pop
cwtl
lods
ja
jecxz
inc
scas
mov
pop
mov
hlt
cmpsl
pop
loopne
sti
lahf
fdivl
xchg
pusha
idiv
cld
out
push
push
rcrl
mov
cld
mov
xchg
mov
sti
sti
std
fbld
cld
and
cmpsl
scas
mov
and
cld
neg
sbb
or
shr
jp
out
test
inc
dec
mul
imul
xor
std
xchg
dec
outsl
test
idiv
testl
xchg
daa
hlt
incl
lcall
cld
int
mov
mov
repnz
mov
imul
pop
aad
add
jg
add
call
dec
clc
je
stc
in
in
mov
inc
scas
lret
add
jle
decl
sub
lock
pop
decl
repnz
sub
loopne
aam
loopne
adc
sarb
test
fbstp
hlt
mov
shlb
or
leave
and
mov
clc
jg
decb
iret
int
cld
popa
aam
add
mov
clc
loop
pop
jb
jmp
int3
mov
insl
outsb
call
mov
mov
lea
sar
cmpsl
cmpsb
int
int
test
cs
clc
mov
stos
shl
sub
mov
xchg
dec
mov
mov
lock
nop
mov
lcall
mov
call
xchg
sahf
xchg
lock
pop
leave
jmp
add
sub
rorl
je
and
aam
ds
add
jbe
pcmpeqd
ds
sti
je
repz
jo
in
fidivrs
pop
idiv
cmp
add
scas
pop
out
jle
lods
jg
divl
jne
fstl
add
jae
daa
stc
jne
mulb
cmp
mov
finit
jbe
es
and
pop
and
je
shlb
push
outsl
in
jecxz
xsaveopt
scas
test
fucomip
lock
inc
jmp
cmc
jns
cltd
imull
push
jle
notl
push
stc
insl
xor
in
sarl
cltd
or
leave
cmp
or
cmp
nop
in
loopne
adc
sub
inc
out
add
repnz
jl
jle
adc
and
xor
hlt
in
jo
xor
in
into
mov
xchg
js
add
sbb
dec
inc
pushf
and
xchg
fcomps
popf
fs
inc
inc
les
loop
in
popf
in
dec
incb
xchg
in
jmp
inc
dec
push
xchg
in
mov
je
in
sbb
frstor
sbb
stc
push
mov
stos
stos
xchg
xchg
xlat
mov
and
and
in
out
dec
adcl
cmp
cmp
inc
adc
inc
ss
fsubr
repz
in
fdivrs
inc
ret
in
mov
stc
test
pop
add
and
in
mov
jle
lcall
in
or
test
idiv
sahf
xchg
lods
test
xchg
in
inc
into
call
les
int3
dec
dec
cmp
cwtl
fmuls
and
xor
add
and
and
add
push
in
fwait
jbe
sbb
and
adc
outsb
add
dec
dec
jl
outsb
xchg
aaa
inc
cld
in
lods
je
in
mov
adc
cld
fistps
movsl
in
sbb
and
push
ljmp
test
mov
stos
pop
inc
insb
pop
stc
les
call
in
test
inc
flds
in
mov
cld
dec
jns
inc
les
add
adc
dec
lret
incl
xchg
fs
push
scas
loopne
cmp
cmp
icebp
in
mov
nop
stos
pop
bsr
or
add
and
or
dec
mov
lods
jo
dec
mov
push
inc
inc
dec
call
bound
in
mov
inc
stc
test
mov
jmp
in
fcoms
mov
inc
jl
lods
scas
je
xor
leave
les
adc
jo
inc
shlb
inc
in
cmpsb
pusha
inc
in
out
cmp
in
sbb
mov
dec
mov
mov
lret
or
mov
push
jl
and
mov
out
movsl
bnd
cmpsb
bnd
lock
add
add
bound
jo
into
fsubs
int3
icebp
inc
fstps
es
or
inc
fcomip
sub
pushf
int
call
ss
lock
fs
and
leave
mov
xchg
and
in
push
mov
enter
add
sbb
pusha
mov
sub
cwtl
mov
adc
dec
fisubrs
sbb
call
in
fidivl
push
movsb
dec
xchg
and
fdivl
jnp
in
aad
idivb
or
sbb
push
stc
jnp
sahf
and
ljmp
test
and
adc
clc
aas
add
jl
mov
push
cmp
popf
or
in
add
jle
cmp
xlat
push
and
xor
ds
fdivr
cmp
aam
jle
adc
fucomip
js
js
mov
fsubs
rcll
pop
add
ret
mov
fmuls
dec
inc
shr
and
mov
and
adc
dec
add
shlb
aas
cmpl
rcl
dec
mov
shll
add
xchg
xchg
add
mov
and
mov
cli
add
test
inc
lahf
js
cld
inc
or
mov
cmp
bound
cmp
hlt
cli
xchg
and
iret
fimuls
inc
in
in
daa
jo
je
in
shll
xor
mov
sbb
je
add
pop
adc
or
add
and
inc
or
sub
cmp
sub
ret
add
add
rcrb
or
dec
xor
sub
fbstp
add
in
into
int
lret
lret
or
iret
cmp
in
or
add
into
iret
lret
inc
push
inc
and
add
cmp
mov
xlat
mov
scas
iret
mov
jl
pop
outsl
int3
mov
gs
fiadds
inc
sti
mov
jmp
enter
and
addr16
enter
iret
sbb
dec
mov
xchg
shr
dec
mov
lock
lcall
adc
cwtl
lock
and
mov
hlt
mov
hlt
test
pop
js
inc
dec
sbb
arpl
mov
loope
stos
jmp
fdivrs
testl
inc
xchg
scas
int
scas
pop
jnp
in
mov
sbb
dec
into
jmp
jp
mov
in
hlt
ljmp
lcall
lcall
adcb
leave
xchg
mov
in
fdivs
add
xchg
cmpsb
cmpsb
movsl
xor
mov
fbstp
push
mov
jecxz
pop
in
test
push
sti
xchg
push
je
ret
sbb
and
cli
scas
xchg
xchg
repnz
pop
mov
test
lcall
sbb
cmp
push
je
aam
jl
cli
jbe
cmp
repz
repz
jl
repnz
xchg
outsl
xchg
jb
mov
pop
mov
pop
test
ljmp
sbb
pop
out
dec
cmpsl
xchg
push
mov
addr16
jo
xor
clc
icebp
xchg
mov
mull
ljmp
and
and
pop
setl
repz
inc
lock
mov
xor
sbb
mov
sbbb
icebp
jne
jg
icebp
cmp
repnz
iret
loope
pop
loopne
cmpsb
xor
mov
addl
test
mov
pop
daa
mov
cmpsb
mov
dec
jge
jecxz
clc
or
jge
xchg
or
mov
aam
or
pop
push
or
loop
push
fisttps
push
jg
xchg
xchg
dec
jge
lds
mov
arpl
mov
pop
enter
cmp
jle
add
adc
add
movb
mov
std
in
iret
fistpll
rep
ret
jecxz
fistpll
in
fcmovnb
sti
stc
lret
iret
fistpll
add
xchg
cmp
lds
hlt
pushf
sti
sbb
xchg
fwait
jecxz
ficoms
into
add
fildl
fcompl
incb
fstl
adc
jecxz
repz
sbb
and
dec
mov
not
and
xchg
mov
std
mov
popa
pop
jb
cmp
add
lock
or
jb
sbb
jb
cvtps2pd
nop
cmp
cltd
pop
inc
das
repz
inc
aas
pop
loop
es
out
push
inc
in
cli
mov
andl
leave
sub
fidivrl
xor
pushf
loopne
pop
dec
mov
add
daa
lahf
dec
repnz
mov
pop
gs
xor
icebp
out
aas
stos
test
pop
rcrb
mov
jp
dec
mov
sub
ficompl
pop
push
mov
xchg
sbb
hlt
mov
jns
adc
inc
sub
sbb
repz
testl
or
insl
cmpsb
mov
dec
shlb
ret
fists
clc
pop
adc
out
fiaddl
mov
test
std
or
mov
movsb
xchg
add
rol
out
cmpsb
lea
push
cmpsb
aaa
les
mov
cld
ds
popf
mov
sub
jno
and
cld
in
test
jl
mov
jle
sub
add
jl
std
test
lds
lds
add
movsb
ljmp
jl
scas
cld
mov
jno
adc
add
adc
in
int3
jmp
sbb
or
cli
add
dec
xorb
enter
lds
pusha
movsb
pop
pop
add
in
ficomps
inc
mov
jne
cld
mov
mov
loopne
lea
movsb
sub
lock
into
sbb
adc
jb
cld
cmp
xchg
ljmp
push
or
mov
idiv
cmp
jne
lea
pop
movsb
test
sbb
jmp
lods
outsl
pushf
dec
testb
mov
les
hlt
pop
int
sub
fildll
sbb
jnp
fistpll
fistps
js
dec
add
or
hlt
push
insl
lock
fisttps
push
mov
fildll
mov
int
jo
iret
pop
jmp
dec
shl
adc
iret
fucomip
out
dec
sub
in
cmp
iret
push
mov
aas
xchg
mov
addr16
dec
xor
lcall
outsb
push
mov
das
rcl
fwait
jge
cs
imul
loope
out
sti
xchg
pop
iret
mov
mov
lret
push
mov
ljmp
fsubp
js
pop
ss
lock
movsb
jmp
adc
and
adc
xchg
adc
insb
ja
adc
in
jno
cmp
add
or
and
out
arpl
mov
stos
pop
push
repz
dec
add
cwtl
xchg
out
xchg
jne
fiadds
dec
sbb
dec
std
out
sahf
int3
stos
pushf
call
and
cmp
shrl
cli
jb
add
or
mov
xor
or
aam
nop
stc
push
fldl
sbb
inc
jb
or
xchg
and
in
pop
and
mov
xor
or
xlat
iret
in
mov
pop
fxch
in
mov
ficomps
add
push
mov
icebp
push
add
mov
push
mov
jp
cli
int
std
pop
orl
add
adc
out
mov
les
pop
dec
cmp
sub
or
jmp
mov
jnp
les
and
jb
jbe
sarl
scas
adc
sub
mov
add
je
les
mov
sbb
lods
mov
jmp
cmpl
mov
popf
fsts
mov
xchg
outsb
inc
insb
pop
pop
adc
ret
dec
push
fildl
daa
aam
pop
aaa
mov
fsts
mull
xchg
or
ret
mul
aas
mov
iret
sbb
adc
cmpsl
dec
test
nop
je
aad
daa
gs
xchg
out
mov
lcall
in
inc
xchg
subb
cmp
aam
into
sti
aas
pop
sti
jns
hlt
in
hlt
add
scas
and
add
cmp
mov
data16
mov
stos
hlt
pop
cmpb
mov
fdivr
mov
jb
std
int
mov
jg
stc
pop
pop
sub
movsl
in
cmp
ljmp
fistps
in
outsl
jne
sub
ljmp
cmpsl
ljmp
insb
jne
aas
lcall
in
push
push
scas
mov
jmp
movsl
mov
adc
mov
inc
repz
shufps
in
rcll
fwait
cmpsb
mov
int3
ss
lock
jl
daa
fsts
cmp
into
cmpl
js
adc
xchg
sub
fdivrl
add
out
mov
int
fisttps
repz
jle
mov
jp
inc
lret
mov
cmpl
icebp
je
ds
jb
and
rol
mov
add
ds
loop
mov
jmp
add
push
mov
mov
and
and
mov
ja
stc
call
mov
in
mov
out
or
jb
and
aas
sti
ds
add
push
sub
sti
mov
and
imul
pop
icebp
cmp
sub
outsb
mov
dec
je
jge
mov
mov
add
sub
add
sub
or
add
inc
scas
pop
nop
out
jb
call
je
ds
out
dec
sti
cld
cltd
addb
scas
or
hlt
or
cld
out
jb
enter
pop
inc
psubsw
or
adc
nop
xchg
test
add
mull
nop
add
dec
hlt
cli
cmpsb
jmp
and
cmpsb
ds
sbb
adc
sbb
jmp
pcmpeqb
fmull
or
mov
and
lock
ror
adc
inc
inc
adc
ds
jge
ds
hlt
or
or
and
insl
inc
cld
and
in
lock
and
sahf
je
adc
add
stos
jp
and
sub
ficoml
and
stos
in
aad
js
je
and
dec
sbb
jmp
jge
je
sub
nop
push
jg
sahf
sub
and
pushf
sbb
in
mov
shl
movsb
fisubl
or
movsb
add
jecxz
mov
push
add
cmc
lcall
scas
cli
cwtl
xlat
and
cld
add
hlt
movsb
and
hlt
fnstcw
jl,pt
lret
pop
movsb
es
daa
addr16
adc
jmp
dec
das
and
js
and
xlat
loopne
or
push
add
and
nop
pop
mov
xchg
dec
push
aas
sti
dec
movsb
stos
mov
daa
and
aad
daa
stc
enter
sub
cli
inc
sub
jbe
sbb
faddl
movsl
iret
stos
cmp
fucomp
outsl
xchg
mov
imull
lret
and
inc
cmpsb
inc
repz
and
add
icebp
mov
pushf
ds
pop
mov
sarb
clc
gs
jno
xchg
pop
inc
and
movsb
je
ret
int
mov
push
dec
dec
fcomi
js
add
enter
hlt
cmp
jmp
std
fdivp
dec
mov
cmp
dec
pop
dec
adc
cmpb
inc
sub
daa
sub
stos
je
popf
or
and
in
cli
hlt
sub
pop
js
xor
andb
mov
adc
mov
jmp
fsubl
inc
jp
fadds
lea
or
movsl
mov
ds
shl
or
cmc
sub
adc
fcoml
dec
mov
rcr
adc
dec
dec
dec
lret
jmp
dec
push
xchg
mov
jae
iret
and
push
je
daa
dec
jae
test
aas
jns
jmp
std
lahf
jo
nop
adc
and
jo
fisubl
jle
xchg
imul
in
icebp
pop
jp
adc
daa
es
dec
shll
aam
sbb
sub
xorb
and
sub
and
das
xchg
lcall
ficoms
outsb
pop
dec
cmp
dec
popf
aaa
jo
sub
enter
jp
xchg
dec
jo
in
cmp
mov
ja
xchg
mov
repnz
sub
icebp
pusha
idivl
and
and
pop
je
xlat
movsb
or
jmp
mov
je
and
sub
andb
cli
push
sbb
jg
lcall
dec
adc
mov
pop
pop
adc
pop
mov
je
cltd
push
add
std
nop
cwtl
sub
icebp
stc
dec
mov
mov
mov
scas
dec
cmp
mov
jb
jae
sbb
mov
das
out
push
mov
das
xor
add
icebp
dec
and
jp
jle
mov
jecxz
and
jge
jge
shl
cmpsl
inc
adc
rol
fstpl
out
in
mov
mov
int3
lret
dec
cmp
mov
sbb
fildl
and
or
or
dec
adc
mov
mov
and
push
xor
mov
lea
or
or
loope
dec
xchg
pop
mov
or
mov
cmp
repz
popl
inc
adc
cld
inc
sbb
sub
iret
cmp
sbb
mov
out
wrmsr
xchg
jp
adc
sbb
out
push
jns
cwtl
int3
and
iret
adc
lcall
sbb
and
push
xchg
cmpsb
inc
out
xor
loop
sti
adc
push
dec
sub
shl
mov
hlt
xor
mov
stos
push
pop
loope
data16
inc
or
das
inc
add
lods
sbb
mov
mov
in
repz
mov
ret
lcall
mov
xchg
jmp
adc
jb
out
or
pop
out
mov
cmc
call
push
stc
hlt
loope
cmp
aas
dec
das
out
int3
jg
dec
stc
into
cmpsb
loope
mov
mov
sahf
mov
lock
fsubrl
jb
cmp
out
test
xchg
lea
adc
pop
insb
add
adc
loop
dec
xchg
lret
push
push
sub
dec
ret
shrb
cmp
movsb
lcall
jo
sub
sub
xorb
insl
xor
jo
mov
cmp
add
mov
roll
dec
loop
mov
or
loop
pop
xor
out
adc
mov
push
mov
mov
push
test
test
nop
mov
stc
test
lret
movsl
test
mov
sub
mov
out
sbb
add
cmc
test
lock
loope
mov
and
std
and
pop
out
divl
mov
push
sub
sbb
pop
dec
inc
cmp
or
daa
pop
lret
inc
into
mov
adc
daa
pop
and
lea
cmp
aad
lock
lahf
cmpb
dec
mov
outsb
sub
adc
into
lods
mov
into
rolb
lcall
cld
scas
sti
mov
sub
xlat
stos
jmp
lret
jno
add
mov
stc
je
enter
or
les
xchg
sbb
add
aam
test
xchg
xchg
scas
or
ret
cltd
xchg
pop
mov
xchg
sub
add
test
cmpsl
and
mov
xchg
pop
jge
mov
or
nop
outsl
xor
scas
xor
les
and
icebp
clc
out
les
icebp
pop
and
out
cmpsl
xor
arpl
int
pop
sbb
out
pop
cmpsb
lods
sub
pop
cmp
call
clc
mov
jb
dec
enter
cwtl
cmp
push
mov
mov
jecxz
sbb
xchg
jle
and
or
pop
ljmp
mov
bound
pop
cmpsb
in
mov
pop
std
or
adc
das
outsl
lods
stos
add
das
mov
imul
cmp
mov
push
mov
scas
leave
mov
push
cmpsb
ljmp
lret
pop
jmp
stos
aas
gs
add
xchg
cmc
movsb
mov
in
sbb
testb
testb
mov
repnz
or
jge
fnclex
jle
test
loopne
loop
xchg
lods
lods
jmp
pop
jns
cli
dec
jo
out
fs
adc
mov
or
fcoms
call
sub
das
cltd
dec
das
xchg
add
adc
sub
sahf
xor
or
sub
and
pusha
pop
lcall
and
or
ret
inc
mov
repnz
and
mov
xlat
add
jnp
nop
divb
mov
inc
or
cmc
pop
inc
mov
jle
xchg
push
imull
imull
mov
and
xchg
xchg
xor
leave
xchg
movsb
xchg
dec
jmp
mov
push
mov
mov
push
pop
adc
dec
adc
adc
lret
iret
jl
lret
sub
cmpsl
paddsw
xchg
je
xor
sbb
bound
mov
pop
mov
cmp
cld
ret
out
jb
lret
mov
or
add
lods
xorb
jb
notb
sti
lcall
scas
test
decl
cmp
jnp
mov
push
mov
inc
mov
jae
xchg
fcompl
ss
call
test
hlt
mov
insb
fldt
cmp
test
das
jg
movsl
pop
adc
loop
les
mov
xor
add
push
inc
out
cltd
loope
lea
lds
mov
and
sti
cltd
ret
mov
cli
xchg
pop
lds
jns
adc
out
aaa
sbb
aas
pop
daa
xor
movsb
pop
and
test
clc
dec
lret
sbb
mov
daa
mov
mov
pop
mov
clc
jne
lods
pusha
and
and
inc
and
test
mov
or
inc
and
cmc
mov
mov
sti
ret
rorb
pusha
pop
adc
xor
jmp
iret
fcoms
aam
add
push
sahf
cli
xor
fildl
push
stos
mov
aaa
out
lea
ja
push
mov
clc
jg
aaa
rcrb
jl
cli
push
hlt
mov
add
jmp
add
mov
stos
and
aam
mov
adc
outsl
xchg
outsb
stos
addr16
xchg
dec
nop
rorl
std
jp
jns
cld
sub
dec
sbb
repz
add
out
mov
fwait
xchg
jecxz
outsl
les
jae
shlb
dec
bound
scas
inc
pop
jns
inc
xlat
test
or
lock
repnz
repnz
pop
mov
mov
ror
testl
fdivs
fisubl
mov
sti
and
pop
inc
lret
jno
rolb
mov
iret
out
test
je
insb
cli
in
cmp
iret
cmp
or
add
dec
inc
rclb
and
cmp
loopne
into
sub
daa
push
jg
xor
dec
xchg
sysret
outsl
mov
inc
jecxz
je
arpl
popa
add
jns
repz
arpl
mov
xor
dec
fimuls
jle
aas
adc
sti
mov
pop
push
frstor
push
hlt
outsl
mov
shr
mov
stc
out
icebp
test
mov
push
out
popa
mov
xchg
fstl
dec
pop
xor
arpl
mov
testb
adc
pop
xlat
je
das
jecxz
sub
jnp
lahf
ret
nop
mov
pop
notb
inc
add
ds
inc
shrl
iret
popa
mov
je
pop
jb
out
lods
jae
or
filds
jecxz
out
hlt
pop
ficomps
inc
dec
cmpl
mov
in
test
xchg
jnp
lods
mov
out
dec
loop
lahf
xchg
xor
push
xchg
cld
push
mov
inc
mov
cwtl
dec
test
xor
dec
lds
dec
scas
dec
lea
inc
xchg
inc
mov
inc
hlt
inc
faddl
lahf
jbe
xchg
cld
inc
xchg
ja
inc
lcall
xchg
imul
jmp
lcall
lcall
lahf
movsb
imul
imul
xchg
jg
in
xchg
and
mov
or
and
dec
inc
aas
sarb
sub
jg
idivb
push
cmp
cmp
sahf
iret
iret
dec
shll
mov
xor
mov
adc
jne
pop
push
bound
push
sarb
push
and
hlt
mov
push
jbe
cmpsl
fldl
jbe
loopne
push
int
out
ljmp
hlt
cmpsb
enter
sub
jnp
gs
dec
call
leave
push
arpl
sbb
rcrb
shll
mov
out
stos
add
mov
ret
sub
aaa
xor
or
sub
test
int
jo
test
sbb
jb
aam
cs
pusha
pop
xchg
cmp
scas
mov
loopne
dec
cmp
mov
sarl
dec
pop
fldt
add
and
add
insl
shlb
subb
lds
cmp
mov
push
push
adc
enter
xor
inc
cmpsb
pop
adc
jecxz
jnp
mov
les
pop
xchg
pop
outsb
inc
stc
sbb
iret
push
js
movsl
lret
inc
repz
sbb
fdivrs
fbstp
nop
out
or
ja
std
ljmp
pop
xchg
sahf
add
ret
fucomip
mov
movsb
repnz
mov
daa
testl
scas
shlb
inc
pop
ror
jge
je
xchg
rolb
push
scas
scas
jno
fstp
das
and
cmp
mov
ja
xchg
or
movsb
and
mov
jge
cmp
mov
repz
repz
stos
push
pop
ja
cmpsb
inc
mov
jno
push
dec
aad
sbb
stos
dec
rclb
cltd
inc
fs
inc
inc
subl
incl
cmpsb
jmp
ja
sub
mov
lea
negb
mov
les
jns
cld
movsl
jnp
add
inc
mov
dec
xchg
in
cmp
inc
lret
jmp
ljmp
icebp
and
in
mov
xchg
jne
adc
mov
sbb
jle
mov
and
push
cld
dec
outsl
cli
mov
inc
and
insl
pop
or
in
mov
pop
ljmp
mov
mov
adc
mov
jl
push
in
or
fists
pop
mov
mov
cmp
vmwrite
push
and
sbb
cli
xchg
or
rcrl
cmpb
mov
in
pop
flds
repz
icebp
std
pop
scas
test
adc
mov
repz
in
mov
push
pop
rolb
xor
insb
adcl
imul
xchg
sarl
test
test
sti
cld
add
lock
addr16
js
in
sahf
mov
dec
adc
fidivl
notl
mov
cmc
mov
adc
inc
pop
arpl
std
pushf
mov
inc
addr16
push
xchg
test
pop
pop
loopne
add
jg
ss
icebp
std
dec
fsubr
outsl
ret
rcll
jecxz
incb
sub
mov
cld
inc
scas
xchg
lods
add
test
fistl
xchg
pop
mov
call
dec
ljmp
int
fbld
scas
clc
pop
or
or
or
xchg
xchg
jle
jecxz
std
jne
in
loope
shl
in
mov
psubq
jg
pop
cld
jbe
pop
lahf
adc
add
shll
pop
adc
adc
in
cmp
adc
pmuludq
sahf
jb
fs
popf
imul
cmpsb
inc
fnsave
mov
pop
in
rcrb
sbb
push
daa
mov
push
sti
arpl
jne
mov
mov
lock
ss
data16
addr16
imul
adc
add
dec
dec
adc
and
fstpt
fwait
outsl
ds
js
fldenv
stc
js
rcrl
mov
jecxz
test
gs
jb
xchg
aam
js
sbb
mov
in
std
loope
ret
cmp
jle
std
das
gs
sti
ret
mov
shlb
xchg
sti
push
jbe
out
push
sti
inc
lahf
je
divl
xchg
test
and
loope
cmp
xor
xchg
xchg
ret
cmpsb
shrb
jne
xor
into
dec
mov
lods
xchg
mov
jmp
in
loop
sub
add
xchg
and
icebp
jb
imul
scas
lcall
sub
imull
out
sbb
dec
out
cmp
adc
dec
push
sarb
lock
aas
icebp
ljmp
movsb
and
pop
ja
lahf
jle
mov
leave
fcmovnu
ds
mov
mov
inc
jp
adc
adc
and
mov
aas
mov
sti
in
xchg
call
mov
fwait
push
leave
inc
test
jp
cmpsl
xor
add
repz
sbb
addr16
sbb
dec
mov
jge
add
hlt
inc
in
icebp
icebp
in
xchg
loopne
push
daa
add
jg
les
clc
inc
push
test
decb
xchg
mov
xchg
adc
leave
mov
pcmpgtb
dec
add
pop
out
pop
or
fsts
into
cmc
lahf
adc
lea
lret
ror
sbb
je
inc
jecxz
adc
ss
test
aas
and
mov
pop
stc
jl
xchg
push
mov
xchg
stos
mov
push
imul
push
jmp
imul
in
out
int3
ds
pop
jb
push
das
movsb
sbb
push
bnd
das
add
repz
test
scas
and
jecxz
repz
pusha
adc
xor
test
repnz
jnp
loop
jle
lret
mov
push
sarl
add
adc
fwait
mov
lods
retw
lea
fisubl
fldenv
popa
xchg
inc
push
push
in
pusha
pop
hlt
pop
in
pop
mov
pop
mov
mov
in
pop
pop
pop
pop
jne
sub
mov
in
push
push
push
push
clc
push
call
push
push
dec
lock
call
lret
mov
dec
dec
sbb
mov
mov
and
xchg
popf
call
mov
in
cmp
mov
cmp
lds
ret
xor
rclb
inc
push
xor
mov
inc
sub
sub
sub
sub
sub
daa
stc
inc
push
xchg
es
inc
and
push
push
inc
and
push
fnstenv
xchg
xchg
int
fcmove
cmc
sub
mov
or
adc
adc
adc
test
push
adc
pop
in
or
in
adc
pop
adc
push
sbb
mov
cmp
dec
push
jbe
dec
pop
and
mov
push
cli
lods
iret
add
add
subb
rol
and
in
hlt
popf
sub
sub
repz
add
inc
add
xchg
mov
popa
pop
bound
pop
lret
ja
scas
dec
lock
stc
das
outsl
out
dec
xor
jb
jo
scas
repz
cli
mov
or
xchg
aam
stc
mov
scas
scas
mov
stc
jg
fcmovnbe
mov
cmpsl
cmp
add
mov
mov
xor
fdivrl
jo
stc
sbb
push
sub
or
notl
pop
push
mov
idivb
xlat
loope
adc
fs
add
xchg
xchg
clc
jnp
xor
int3
aas
lds
mov
ds
mov
xlat
test
test
cmp
fwait
lods
xchg
mov
cld
movb
lods
xchg
cli
test
dec
jbe
push
sbb
outsb
pop
clc
pop
scas
sbb
push
test
repz
add
or
je
add
imull
mov
je
nop
je
ljmp
lods
push
add
test
jns
test
xor
inc
adc
in
test
cld
iret
icebp
mov
cmp
jnp
sarb
pop
outsl
push
jg
test
mov
and
and
jl
cmc
aaa
cmpsb
dec
jmp
std
sub
fiadds
popf
and
pop
pop
jmp
jle
mov
jns
shlb
sub
icebp
pop
out
mov
aad
dec
mov
mov
xlat
andl
lret
push
mov
mov
mov
mov
cmp
mov
jo
ljmp
lea
pop
outsl
lret
das
xchg
adc
sub
aam
cmpsb
jge
repz
out
xchg
cmp
cmc
call
add
hlt
data16
or
cmpsl
pop
incb
adc
push
fistl
or
aad
jmp
dec
stos
movsb
sarb
add
mov
int
dec
ficoms
xrstor
lods
repnz
fimuls
push
xchg
jmp
cmp
pop
push
mov
add
test
and
xchg
gs
push
stc
mov
mov
mov
lcall
add
add
pop
inc
fnstcw
adc
inc
in
adc
rorl
in
in
mov
rorl
inc
int
xchg
jmp
xchg
mov
xchg
gs
gs
xchg
lea
daa
gs
xchg
xchg
lcall
pop
xchg
mov
gs
xchg
gs
lcall
pop
xchg
mov
dec
mov
nop
ja
jbe
jne
inc
xchg
sub
je
jae
cld
jb
jno
jo
dec
out
push
outsl
mov
arpl
insl
mov
imul
mov
mov
cs
lds
adc
gs
mov
jl
lods
lcall
sbb
sbb
sbb
xchg
lds
xchg
mov
xchg
xchg
lcall
pop
xchg
xchg
lcall
mov
daa
jae
ljmp
sbb
jae
daa
outsl
dec
ljmp
loop
xor
xor
addb
add
mov
or
fcmovne
mov
xchg
pop
pop
inc
out
ret
sub
fistpl
xchg
test
lds
add
mov
mov
or
lock
out
inc
decl
pop
daa
push
ja
dec
scas
cmpsl
mov
lods
scas
lcall
jnp
lods
out
sti
mov
movsb
pop
outsl
das
imul
mov
adc
pop
int3
rorb
cmc
mov
or
lret
sti
popa
pop
test
or
in
mov
test
rorl
aas
lcall
cmp
icebp
cld
add
cmc
adcl
iret
enter
push
push
add
aaa
aas
out
pop
or
xchg
std
shrb
jecxz
addr16
daa
aaa
pop
or
fucomip
idivb
popf
testb
test
or
test
adc
rclb
stc
xchg
test
cmp
lea
iret
add
dec
idivb
cli
addr16
loope
jmp
adc
pop
enter
cmp
or
pushf
pop
mov
int
int3
mov
cltd
dec
jno
dec
pop
mov
loop
jg
cld
pop
lea
xchg
add
fisttps
into
inc
pop
xchg
sub
adc
cltd
dec
xchg
mov
and
gs
xor
add
add
pop
arpl
mov
pusha
test
xchg
out
or
jg
adc
pop
sub
repz
ret
int3
out
fwait
adc
cli
and
ret
inc
les
cmc
dec
fcmovnu
clc
rcrl
jmp
test
fmul
addr16
dec
xlat
and
xlat
mov
gs
cmp
pop
mov
mov
mov
inc
clc
lea
psllw
adc
mov
test
loop
sti
cmc
inc
jne
adc
insl
push
mov
daa
pop
add
fwait
pop
popa
add
fisubrs
adc
ja
ja
iret
mov
xchg
movl
pop
repz
adc
in
xchg
rcll
in
xchg
lock
ret
iret
bnd
arpl
in
mov
cmp
in
sbb
rorb
rcll
js
mov
pop
int3
or
jecxz
and
popf
nop
fidivrs
cli
ret
xlat
iret
in
fcoms
repz
pop
loope
pop
or
movsb
lcall
mov
dec
sbb
ret
xchg
jg
jl
sahf
mov
mov
loop
cmp
push
xchg
clc
in
add
sbbb
stos
pop
mov
or
stos
jb
push
out
adc
push
push
inc
mov
push
test
xchg
dec
jbe
inc
lret
jne
sar
das
mov
int3
xor
push
loopne
adc
mov
fucomi
mov
aas
mov
jle
jg
in
mov
in
adc
xor
fistpl
call
std
int3
pop
mov
xor
inc
inc
les
mov
inc
and
inc
lock
jge
inc
jbe
add
shlb
daa
sub
clc
int
jb
inc
and
jp
jecxz
inc
inc
jb
cmpl
mov
sti
cmp
fwait
aad
lcall
ja
inc
out
inc
adc
or
lods
pop
in
shl
jecxz
mov
cmc
xchg
pop
mov
cmp
addr16
mov
rcrl
push
pop
xchg
gs
arpl
popa
clc
pop
pop
push
pop
pusha
adc
clc
pop
sbb
adc
jmp
hlt
pop
fcomps
mov
xchg
xchg
xchg
lcall
ret
scas
adc
lcall
inc
popf
push
adc
pop
inc
inc
lds
roll
inc
flds
mov
ds
cmp
xchg
cmp
cmp
cmp
popf
pop
jns
pop
aaa
test
dec
repz
sub
mov
sub
sub
daa
es
mov
movsl
and
and
and
and
cmp
daa
loopne
xchg
xchg
ds
jmp
aam
mov
sbb
cltd
lods
lahf
cli
cmp
mov
dec
leave
mov
test
mov
std
in
mov
mov
pop
push
shrl
adc
icebp
das
adc
dec
adc
pop
jl
mov
dec
cld
xor
jg
pop
movsb
or
outsb
sub
push
out
shl
xchg
jae
cmp
aas
cmp
cli
pop
fldl
popf
or
into
add
pop
cmp
fimull
out
mov
xchg
das
clc
mov
popa
fxch
pop
pop
popf
mov
les
out
xchg
imul
in
jle
jle
mov
gs
lcall
lods
lcall
mov
xor
das
repz
mov
adc
sahf
lods
mov
loop
sub
fdivr
lock
cmpl
xchg
jle
dec
push
adc
push
mov
sbb
aaa
aad
or
repnz
iret
data16
loopw
repz
scas
rolb
and
mov
addr16
in
or
pop
xchg
int
nop
sahf
repz
xchg
lea
push
and
sbb
xchg
fwait
lcall
loop
adc
adc
pop
sti
inc
cmpsb
dec
xchg
mov
and
int
clc
enter
sub
shll
cmp
movsl
scas
lret
or
cmp
jmp
fucomi
xchg
pop
xchg
jae
loope
movsl
mov
pop
xchg
ljmp
scas
xchg
fwait
push
xchg
pop
lock
mov
mov
mov
addb
xchg
incb
ja
hlt
fxch
addr16
daa
cmp
stc
je
lds
push
mov
pop
inc
pop
stc
dec
out
into
adc
xchg
in
aaa
lock
xchg
lahf
testl
inc
or
cli
roll
pop
add
loop
loop
fwait
mov
lods
cmp
mul
dec
cmp
stos
pop
aas
xchg
cmp
push
xchg
mov
sbb
popa
lock
shlb
aam
jbe
ljmp
jnp
jmp
mov
and
in
addl
mov
cmp
pop
fiadds
shlb
mov
xchg
and
sub
dec
inc
shlb
cli
pop
jmp
setge
inc
jbe
fsubrs
shlb
mov
jne
rolb
dec
jg
mov
leave
lods
mov
lret
mov
cltd
mov
sub
lcall
inc
icebp
jge
call
jmp
enter
sbb
notl
lds
pop
sbb
pop
mov
jae
inc
shl
adc
xchg
ss
aas
jnp
xchg
mov
push
and
or
test
xchg
dec
ja
xchg
loop
mov
mov
in
jl
mov
or
data16
fwait
outsl
pop
scas
mov
jb
mov
sub
dec
movl
jp
xchg
mov
cltd
add
cmp
call
or
jno
xchg
mov
sti
inc
sbb
mov
inc
in
cmp
add
inc
dec
ret
fistpll
call
into
mov
cmp
mov
xor
loope
lcall
es
cmc
dec
add
rdtsc
lret
add
lock
cmpsb
hlt
cmp
aaa
xchg
mov
dec
dec
xchg
pop
push
jnp
es
inc
inc
lods
mov
add
xchg
sti
mov
cmp
jle
inc
adc
das
jl
mov
cmp
out
pop
out
cmp
scas
in
stc
sub
arpl
pop
sbb
pop
mov
push
adc
sub
adc
xchg
int3
and
adc
div
dec
rorl
mov
stc
pop
mov
aas
adc
lret
add
lahf
bound
hlt
sbb
jo
push
lock
lcall
xchg
sbb
sub
loop
mov
test
jg
push
loope
add
divb
hlt
cs
int3
jae
and
pop
loop
ja
sarb
sub
std
sub
aad
xchg
cmpsl
imull
inc
pop
out
test
insl
jmp
incb
cmp
decl
std
add
push
push
int
mov
outsb
xchg
xchg
mov
repz
outsb
dec
sub
jge
sbb
xchg
clc
jg
jmp
adc
stc
pop
push
cmp
add
popa
fistpll
repz
test
bnd
in
test
inc
push
jbe
out
sbb
mov
fistpll
ljmp
pop
mov
testb
mov
add
or
lcall
cmpsl
or
lods
repz
mov
cmp
add
mov
shrb
inc
cmp
idiv
mov
lahf
pushf
pop
sbb
out
xchg
jnp
dec
mov
mov
inc
mov
repz
fldenv
add
xchg
ret
into
cmp
pop
pop
mov
mov
fistps
repz
fsub
cli
filds
and
outsb
rcll
add
xchg
xor
mov
shll
sub
mov
ret
add
sbb
mov
clc
add
stos
adc
push
jae
ds
aam
jbe
lea
lcall
fwait
xchg
bound
xchg
nop
push
xchg
adc
jmp
add
inc
dec
pushf
ret
sub
daa
dec
dec
cwtl
bound
frstor
loope
sbb
and
add
daa
mov
stc
sbb
push
sbb
push
sbb
jle
scas
mov
fstpl
add
jae
aas
ficoms
test
mov
add
repz
or
test
mov
iret
fcmovnbe
in
aas
lods
icebp
push
mov
add
sub
mov
cli
fstpt
jle
call
jp
lea
fsubl
cld
repnz
popf
cld
xor
mov
pushf
push
imul
or
testl
in
cmpb
push
mov
pop
mov
add
loopne
aaa
push
mov
pop
test
je
mov
xchg
arpl
push
out
cmpsl
pop
bswap
push
outsb
mov
dec
xchg
out
adc
je
enter
je
cmp
cld
cmp
test
add
fcmovnb
mov
faddl
cmp
jbe
sahf
mov
or
xchg
dec
fchs
cmpsb
out
dec
gs
test
pop
lahf
fdivp
adc
or
xcrypt-ctr
cmpsl
sahf
cmp
cs
xor
xchg
jae
mov
mov
add
xor
pop
xor
ljmp
push
sub
pop
jmp
add
push
cmp
je
les
lahf
clc
mov
xchg
xchg
out
lahf
jne
mov
rorl
in
jns
mov
js
aas
maxps
mov
jo
into
add
rcll
pushf
test
xchg
xchg
and
aas
lret
aaa
jns
mov
inc
je
test
mov
jnp
stos
icebp
xchg
and
dec
dec
repz
dec
lret
or
into
daa
jmp
or
sbb
movsb
xor
iret
push
in
and
mov
out
dec
cmpsb
stc
je
xlat
fimull
test
adc
add
je
repz
xlat
loopne
sarl
mov
in
ljmp
shll
xor
ds
mov
cmpsl
or
test
ljmp
inc
pop
jbe
sti
jbe
je
out
je
je
clc
test
je
mov
int3
das
pop
rcr
mov
jae
mov
push
mov
outsb
mov
or
cld
mov
jecxz
scas
lahf
imul
in
jno
cmpb
cmpsl
cmp
jp
test
in
fstps
inc
inc
xor
rcll
call
dec
out
cmpsb
xlat
mov
clc
jecxz
negl
das
sti
cmpsb
push
cwtl
pop
fidivrl
cltd
mov
add
pop
ljmp
xlat
pop
std
dec
test
cmpb
mov
sbb
mov
rcrl
mov
push
out
out
pop
sub
cmpsb
jl
and
add
stos
jmp
add
pop
cmp
repnz
mov
or
mov
mov
add
push
lock
ds
xor
int3
adc
inc
andb
stc
mov
je
push
movsl
lea
xor
or
out
sarb
push
jmp
push
jmp
jg
and
fs
aas
in
call
and
dec
adc
fdivs
jbe
scas
cli
push
icebp
out
ljmp
outsl
mov
mov
cmp
cmp
les
int
fstpt
arpl
enter
lcall
daa
adc
push
andl
aaa
jecxz
cmp
or
test
push
test
jg
fidivrl
cld
jne
inc
out
xchg
adc
or
dec
out
or
sbb
and
out
scas
sub
add
hlt
pusha
pop
cltd
and
andl
popa
xlat
and
mov
enter
cmp
push
jmp
orl
mov
mov
repz
mov
idivl
mov
and
inc
call
test
int3
out
pusha
pusha
outsl
nop
and
mov
je
cltd
add
clc
ds
sub
sti
aas
mov
call
pop
jbe
movsb
lret
add
mov
mov
aam
adc
cld
test
jmp
cwtl
mov
mov
mov
lds
sbbb
gs
sti
xchg
daa
cltd
dec
cmp
loopne
leave
and
add
jmp
sub
aam
scas
cmpsl
call
xchg
fldenv
in
add
inc
das
mov
cwtl
inc
into
adc
lods
loope
inc
in
and
sbb
pop
mov
cmpsl
in
and
lock
in
repz
xchg
pop
iret
scas
and
or
dec
cli
cmp
mov
mov
notl
mov
je
hlt
pop
jg
dec
ret
cmp
mov
jbe
mov
lret
movsb
xlat
and
mov
in
das
jg
adc
outsb
mov
mov
mov
xchg
lret
ret
scas
mov
iret
mov
insl
je
pop
cmpsl
stos
call
mov
xchg
cmp
xchg
fsubp
pop
fdivrs
jge
mov
xchg
sbb
mov
ds
cltd
pop
dec
pop
jp
push
add
cmp
das
js
shr
push
xchg
xchg
test
out
sahf
es
lods
mov
aam
daa
bound
xchg
lcall
pop
stos
rcrl
cmp
lcall
fisubs
xchg
jmp
mov
pop
ss
iret
hlt
fidivrl
sub
inc
jne
scas
lods
sub
cwtl
pushf
clc
mov
pop
lock
jmp
lods
cld
jecxz
cltd
adc
test
mov
fdivrl
call
add
inc
frstor
cli
and
pop
in
mov
hlt
icebp
sti
mov
dec
ret
jle
imul
dec
fcomp
clc
rcll
jne
push
out
stos
inc
mov
mov
jl
pop
pop
and
ret
out
adcl
call
in
inc
cld
cmp
ret
repz
mov
or
cmpsl
mov
outsb
nop
pop
out
mov
sbb
pop
ret
out
repz
pop
mov
mov
mov
scas
clc
pop
rolb
add
sub
jle
inc
sahf
xor
pop
mov
into
mov
std
arpl
insb
and
push
in
or
popa
in
mov
ret
add
fadds
add
clc
xchg
dec
pusha
in
push
test
mov
push
pop
sbb
mov
jnp
mov
jb
or
inc
out
loope
xchg
mov
gs
test
dec
in
pop
and
stos
pop
es
adc
daa
in
push
popa
pop
in
psllw
pushf
stos
mov
in
lock
js
mov
jo
xchg
ret
in
pop
cmp
fidivrl
test
aad
sti
shll
sub
cmc
clc
adc
testb
cmp
shll
fs
stos
cwtl
je
in
dec
jo
mov
fcoml
mov
hlt
xchg
iret
shrl
mov
shl
sti
lret
scas
push
in
imul
insb
gs
cld
dec
pop
and
imul
mov
jg
vsubpd
pushl
fsubrs
sbb
insl
pop
jb
jmp
push
adc
leave
mov
fwait
lret
push
and
adc
and
cli
in
jne
cli
das
jg
iret
and
movb
std
mov
lea
push
and
adc
fstl
xchg
cmc
rcrl
pop
jp
stos
les
fiadds
gs
pop
imul
inc
dec
cmp
jl
mov
mov
ja
and
fbld
ret
or
mov
into
and
hlt
jb
loop
xchg
pop
or
daa
popf
out
fdivrs
nop
bound
cmpsl
sahf
jg
add
ds
addr16
jo
stc
pop
inc
jns
inc
mov
repz
loope
rolb
leave
stos
js
inc
mov
cmpsb
addr16
out
rcl
adc
insb
call
xchg
pop
and
sub
fisubl
mov
or
mov
cs
mov
stos
aam
inc
jae
dec
adc
scas
jge
cwtl
stos
add
xchg
xor
mov
dec
add
pop
std
mov
test
dec
lcall
inc
scas
aam
mov
push
call
pop
test
sbb
cmp
xchg
loop
mov
inc
imul
out
mov
jnp
daa
xchg
xchg
loop
mov
push
sarb
sahf
and
push
push
sub
lahf
push
and
iret
lods
jg
rclb
loop
adc
push
jl
mov
and
xchg
mov
jg
add
jg
ja
xchg
das
cli
pop
lock
imul
add
or
pmuludq
jp
ja
ret
mov
lahf
leave
lcall
cltd
add
jg
lock
jmp
lods
scas
lods
pop
imull
bound
shl
cmpsl
cmc
fisttps
sti
xchg
adc
out
add
pop
in
imul
fistpll
xor
std
mov
pop
push
mov
in
cli
notb
cli
and
out
push
cld
pop
test
jne
or
daa
hlt
loopne
mov
popa
rolb
jmp
pop
ret
inc
mov
adc
loope
jnp
repz
inc
adc
push
lods
push
mov
daa
shlb
dec
dec
push
dec
mov
repnz
mov
repnz
mov
jmp
jmp
fwait
xor
mov
addr16
push
pusha
repnz
cwtl
inc
add
mov
test
jae
clc
dec
xchg
out
push
mov
xchg
arpl
lcall
xor
inc
adc
pushw
and
and
notl
lock
je
mov
xchg
push
pop
int3
xchg
adc
mov
hlt
add
out
jns
cmp
loop
dec
int3
scas
lret
xchg
and
imul
jno
mov
decb
xchg
xchg
pop
adc
pop
mov
pop
out
mov
pop
pop
lahf
pop
dec
in
sub
cmpsb
sti
cmpl
jbe
call
jmp
fdivp
sub
xchg
pop
mov
and
xlat
ljmp
mov
jno
call
jb
adcl
push
mov
push
mov
lock
in
mov
hlt
into
jmp
leave
push
cmp
stos
stos
cmp
dec
pmulhuw
inc
jnp
inc
into
mov
dec
pop
jle
sbb
dec
sub
in
stc
jp
xchg
loopne
dec
in
loope
ljmp
and
das
cld
orb
jge
xchg
std
xorb
jg
inc
xor
out
int3
sub
notl
daa
push
push
push
mov
push
pop
jl
loope
cmpsl
scas
icebp
pop
ret
mov
icebp
je
gs
les
dec
repnz
xor
adc
hlt
jmp
mov
mov
push
jp
add
jmp
jg
mov
and
stos
not
rolb
adc
leave
xor
mov
jecxz
std
pop
lahf
xchg
insl
mov
fildll
mov
jg
or
inc
dec
mulb
fnstenv
cwtl
inc
cmc
aaa
ds
sti
das
pushl
or
test
sbb
fwait
jmp
jle
mov
das
push
cmp
lock
mov
jecxz
orl
fs
fstpl
sti
out
icebp
stc
mov
and
xor
ret
stos
out
pop
ror
fistps
ret
scas
lcall
cmc
sbb
imull
jmp
into
fisttps
mov
jbe
lahf
jge
pop
jp
nop
lahf
pop
sbb
jg
lods
mov
sarb
cmp
aad
std
pop
aaa
or
sbb
mov
into
filds
fcmovnu
sti
repz
add
push
repz
fst
pop
and
repz
mov
mov
pop
shl
mov
pop
imul
jmp
aaa
mov
dec
lock
loopne
mov
mov
negb
mov
push
sti
cmp
mov
pushl
cmp
lret
jmp
pop
scas
ficomps
sub
mov
dec
dec
int
inc
jecxz
mov
out
pop
scas
inc
jmp
push
repnz
pop
jnp
mov
mov
cmpsb
cli
push
cmpsb
or
push
jmp
push
test
fstps
cld
pop
xchg
cli
sbb
push
mov
cmc
lock
xchg
clc
sbb
ret
div
iret
fsubs
mov
std
mov
mov
lret
clc
jae
cs
push
scas
fdivl
jg
hlt
lahf
adc
das
mov
fdivrs
jl
cmpsl
inc
pop
mov
jbe
test
mul
stc
pop
mov
xchg
push
leave
pop
outsl
sbb
mov
xor
xchg
jmp
gs
pop
cmc
popa
add
ds
push
lahf
out
gs
add
daa
mov
in
and
mov
xchg
dec
push
das
ds
sub
add
repz
daa
inc
jb
jp
scas
push
imull
push
movsb
je
fidivrs
fsubp
fistpll
fucomip
mov
call
mov
sti
pop
mov
decl
pop
je
inc
mov
lods
in
lods
add
stc
cld
loopne
and
push
mov
stc
jge
out
xchg
scas
sti
pop
popa
movsl
sbbb
mov
push
sarb
movsb
out
lcall
bnd
movsb
add
adc
lods
jmp
pushl
jmp
sub
lods
xor
data16
jge
repz
loopne
fcompl
xor
shl
jb
xchg
xchg
jb
fcmovu
push
mul
dec
fbstp
arpl
shll
and
xchg
sub
cmp
jge
dec
lds
add
fcompl
xor
call
jmp
scas
xchg
pop
icebp
fdivrp
lods
dec
sub
std
or
sub
sub
imul
shl
jnp
and
cli
jnp
add
incl
test
pop
pop
imul
in
xchg
or
insl
xorl
ss
add
xchg
push
int3
add
ret
mov
cmp
adc
ljmp
cmpsb
hlt
or
test
lahf
enter
out
mov
scas
insb
pop
cs
mov
bnd
jbe
cmp
cli
sti
jp
enter
rcrl
ds
das
pop
pop
out
and
std
sti
loop
mov
std
fidivl
iret
cli
and
imul
loopne
jg
cmpsl
pop
repnz
lock
in
pop
rclb
xchg
filds
std
mov
sbb
mov
or
cmpxchg8b
int
outsb
outsb
outsb
ret
lret
mov
fs
fwait
push
mov
stos
lods
icebp
push
dec
in
movsl
dec
push
push
cltd
pushf
add
fmuls
in
fisubs
inc
cld
sub
sbb
dec
cld
sub
mov
cltd
aas
gs
pop
imul
push
push
xchg
aas
mov
ret
in
mov
xchg
int
lock
stos
aas
jl
std
mov
inc
negb
jne
scas
std
mov
sahf
mov
xor
mov
mov
push
data16
ljmp
mov
pushf
out
pop
inc
xchg
adc
dec
ret
mov
xor
clc
cld
jge
cli
sub
cltd
xor
std
adc
dec
fists
fcomps
idiv
jge
cmp
dec
imul
fwait
out
lcall
xchg
add
std
hlt
jmp
repz
xchg
mov
stos
mov
mov
pop
icebp
cmp
js
shrb
stos
out
lods
lcall
arpl
mov
out
ljmp
inc
fdiv
jge
nop
jl
mov
fisubrs
cld
stc
sti
sbb
xchg
fstpt
xchg
inc
jl
hlt
fimuls
mov
dec
mov
stos
and
mov
pop
fcomi
and
je
bound
nop
popl
jg
dec
dec
mov
in
data16
xchg
je
outsb
in
xchg
out
mov
and
xchg
dec
mov
mov
xchg
mov
in
jns
in
cltd
add
lret
in
daa
iret
loopne
loopne
sti
adc
xchg
xchg
fistpl
mov
out
dec
add
dec
and
test
fwait
mov
mov
cltd
mov
push
sahf
mov
dec
filds
in
sub
xor
lods
je
decl
aas
sub
xchg
mov
dec
adc
mov
ficompl
into
jge
test
xchg
jb
dec
out
or
sti
xorl
sahf
cwtl
subb
fnstsw
addr16
fistps
scas
mov
mov
incl
hlt
push
out
mov
cmp
lods
out
mov
adc
mov
hlt
popf
in
xchg
inc
aad
inc
rcrb
sti
mov
clc
call
jb
mov
mov
mov
pop
cwtl
jns
lcall
repnz
adcb
std
fs
fucomip
jns
mov
lock
cwtl
out
add
in
daa
mov
enter
push
cmp
in
fst
dec
cmc
imull
insl
out
ds
fistpll
pop
add
repnz
into
xchg
test
mov
sub
push
xchg
in
mov
mov
je
and
mov
test
idiv
jae
popf
mov
inc
ds
xchg
xlat
xchg
xchg
mov
jle
enter
imulb
mov
inc
daa
sub
pop
rclb
in
mov
movsl
lock
cwtl
inc
xor
int
mov
insb
or
lret
hlt
sbb
xchg
cmpsl
and
and
idivb
mov
jns
pop
xchg
ficomps
mov
pop
std
clc
out
fs
test
aas
push
xchg
imul
xchg
dec
std
pushf
icebp
mov
hlt
sti
incl
int3
lahf
mov
push
jp
dec
into
lock
and
mov
in
aam
nop
out
fsubrp
in
fistpll
dec
out
mov
and
int
pop
loopne
loope
scas
xchg
shrb
cmp
aam
or
sahf
mov
mov
mov
jo
and
nop
std
loop
test
sarb
cs
ljmp
divb
loope
idiv
test
fists
pop
pushl
lock
pop
xor
pop
pop
push
push
clc
dec
mov
enter
push
jg
in
add
fiadds
incl
fucomip
mov
fdiv
mov
add
orb
xor
rol
mov
fwait
sarl
roll
sar
cli
cmc
inc
stc
xor
jmp
add
add
xchg
enter
enter
enter
enter
enter
enter
jb
popa
xor
add
movl
dec
sub
repnz
rcll
iret
les
les
dec
les
add
add
mov
popf
ret
pop
add
ret
pop
ret
add
cld
ret
loop
aam
incl
and
add
ret
outsl
ret
dec
ret
shrl
test
sarb
add
inc
shrb
adc
add
scas
add
subb
iret
fcmovne
leave
iret
mov
iret
inc
iret
cmp
dec
out
into
fldl
cli
add
into
into
xchg
into
inc
into
test
int
int
int
mov
mov
int
add
add
int
int3
push
int3
inc
int3
cmp
ljmp
lret
sbb
in
lret
lret
stos
call
lret
push
gs
lahf
mov
movsl
iret
add
cli
into
ror
into
lods
into
sbb
add
inc
repnz
xchg
int
int
int
int
int
int3
enter
test
jnp
pop
add
inc
mov
int3
sbb
pop
int3
ret
lret
movsb
lret
lahf
lret
xchg
lret
lret
pop
lret
push
add
add
lret
fmul
ror
xor
add
lock
ror
mov
or
leave
mov
enter
ffreep
movl
add
xor
sub
adc
ffree
leave
lds
pop
lds
aas
lds
les
cmp
les
faddp
ret
pushf
ret
xchg
ret
imul
inc
ret
cmp
ret
and
sbb
adc
add
in
ret
lret
ret
add
inc
push
cwtl
ret
push
ret
inc
ret
sbb
ret
fadds
add
shlb
mov
roll
pop
rcll
rorl
shll
add
and
sbb
test
mov
sarb
mov
xor
pop
add
add
into
clc
into
repnz
fmul
mov
into
gs
inc
into
daa
into
push
into
bswap
scas
add
add
int
int
int3
in
fmul
ror
mov
stos
int3
cmpsb
int3
mov
int3
jge
add
js
imul
push
int3
test
mov
lods
loop
push
loop
add
into
leave
mov
mov
leave
push
leave
rep
test
insl
enter
add
test
enter
faddp
mov
jecxz
mov
addr16
xor
sldt
ljmp
lds
ret
mov
ret
pusha
ret
push
ret
inc
push
add
cli
ret
movsb
ret
and
sbb
push
ret
inc
add
in
jmp
sarl
and
or
add
add
add
hlt
shr
in
rol
mov
rorb
shlb
sbb
add
dec
add
das
mov
sub
push
iret
pop
iret
movsl
into
lcall
les
jb
into
imul
into
push
into
dec
into
clc
iret
int
int
int
cmpsb
xchg
int
add
add
int
int
int
lret
jne
imul
lret
pop
lret
push
lret
dec
lret
dec
lret
aaa
adc
mov
lret
mov
lret
stos
dec
or
inc
leave
cmp
sbb
sti
enter
enter
imul
jle
jbe
test
push
enter
add
inc
enter
enter
jecxz
fld
leave
mov
scas
mov
pop
push
data16
sub
push
inc
rol
mov
lds
kxnorw
xchg
add
cmc
ret
mov
ret
int
ss
xor
repnz
jle
xor
in
lock
add
fs
push
iret
inc
iret
cmp
push
iret
cld
into
hlt
into
in
into
out
loope
aam
ret
sub
into
popf
lret
cs
int3
in
add
call
int3
ror
leave
mov
leave
leavew
dec
leave
inc
leave
jb
add
mov
aaa
mov
xlat
rol
enter
mov
lahf
adc
adc
jo
push
movb
fs
sbb
adc
std
repz
add
rol
lret
mov
lods
lds
lds
add
lds
jp
je
outsb
lds
lds
push
lds
cmp
lds
sldt
sbb
pextrw
or
add
std
lock
aam
leave
cli
nop
stos
scas
icebp
clc
mov
lods
add
add
les
imul
pop
les
push
les
ljmp
ret
mov
jp
push
ret
dec
ret
ds
cmp
daa
ret
sbb
movnti
and
stc
ret
mov
ret
xchg
jge
pop
add
ret
cmp
sub
and
sbb
or
jmp
shr
into
add
add
shrb
shrl
rcrl
adc
or
fiadds
add
nop
mov
mov
rcrb
jo
rcrb
and
add
pop
xchg
iret
jecxz
fcmove
int3
inc
push
adc
iret
mov
iret
jge
jne
dec
iret
ds
xor
add
in
sub
sbb
or
add
sbb
iret
into
mov
jl
push
mov
dec
into
add
into
and
adc
int
int
int
int
pop
add
or
push
int
int
int3
out
int3
fcmove
lret
int3
int3
mov
dec
mov
int3
and
lret
fcmove
aas
lret
push
cwtl
repz
fldl
add
add
ror
leave
push
leave
and
sbb
enter
enter
enter
enter
enter
add
movl
or
mov
insb
loopne
popf
lds
aas
or
lds
cmp
push
lds
vpinsrw
stc
add
pop
pop
les
dec
mov
and
pop
inc
clc
cmp
push
jge
ffree
jae
insb
ret
pop
ret
dec
test
ret
adc
inc
cmc
adcl
imul
pop
mov
inc
ret
xor
icebp
nop
ljmp
rcl
lret
jbe
je
shrl
cmpsl
mov
scas
push
cmp
int
push
push
mul
stos
stos
mov
pop
add
shrb
mov
xchg
inc
xchg
clc
outsl
inc
adc
add
test
mov
inc
ljmp
push
xlat
inc
movsb
adc
fs
inc
addl
lock
dec
jl
cmp
add
push
imul
aaa
ret
repz
ljmp
fistpll
pop
jge
pop
mull
psrlw
push
popf
jg
sub
outsb
loop
aaa
lcall
mov
jmp
ljmp
in
call
cmp
fsub
mov
mov
es
std
and
loope
scas
fidivrs
pop
int3
or
cmp
jl
adc
loopne
clc
adc
cmp
inc
push
lret
mov
std
jl
cld
jg
movsl
pop
dec
mov
mov
ror
enter
test
cld
push
dec
mov
sub
inc
clc
xchg
adc
dec
aad
in
into
loopne
jg
and
mov
mov
test
incl
cmc
jne
mov
jne
jmp
mov
test
sahf
xchg
in
nop
ljmp
nop
lcall
mov
clc
dec
cmc
mov
mov
and
xchg
lcall
mov
lahf
ljmp
xchg
incb
pop
mov
or
jno
mov
jns
movsl
out
dec
lock
push
rcrb
sbb
pop
or
ljmp
push
jmp
jecxz
mov
xor
dec
cmpsb
mov
dec
cli
imul
insl
jge
std
xchg
pop
testl
xchg
dec
mov
xchg
fisubs
in
movsb
lds
jp
stc
test
xchg
aas
cmp
daa
xchg
jge
scas
hlt
pop
xchg
mov
mov
cmp
fwait
addr16
ret
mov
in
dec
push
adc
or
xchg
shrb
je
aas
push
jge
std
push
or
inc
jmp
sub
cmp
movsb
push
push
mov
orb
add
jl
paddd
jns
or
movsl
push
jne
add
inc
jnp
rcr
jl
test
aas
dec
inc
dec
insb
out
stos
loop
clc
mov
dec
in
stc
subb
lahf
out
mov
dec
out
jmp
test
xor
fs
movsb
pop
add
fdiv
xchg
decb
fwait
insb
mov
cmp
push
mov
jmp
pop
sbb
out
xchg
ds
jo
mov
jbe
push
cmp
add
scas
inc
jb
sbb
loopne
xchg
push
pop
popf
mov
daa
mov
scas
lret
notb
outsb
cld
ja
aad
adc
adc
lret
mov
mov
popf
ljmp
ja,pt
pop
mov
lahf
push
loopne
cld
sbb
mov
mov
mov
dec
adc
scas
sbb
adc
adc
mov
xchg
push
addr16
std
jmp
testl
sbb
mov
ret
mov
pop
test
stos
jo
add
add
jl
sti
icebp
pop
add
pop
jmp
sti
ffreep
jmp
adc
xor
hlt
lds
pusha
outsb
jb
dec
xchg
movsb
cwtl
movsl
in
fwait
mov
popf
dec
adc
ja
sbb
jb
adc
idivl
outsl
sub
jb
fisubrs
je
mov
mov
push
cmp
jl
xchg
jnp
into
mov
mov
pop
js
or
jge
ficoms
xchg
xlat
fidivs
stc
aas
mov
in
add
mov
pop
test
mov
sub
sti
into
into
jge
jmp
jo
pop
pop
or
lahf
push
jecxz
sub
cmp
cmpsl
push
jge
jns
cmc
jmp
adc
xor
jg
dec
in
cltd
mov
sbb
aas
in
jmp
mov
add
sbb
hlt
pop
pop
ja
add
mov
jb
stos
clc
in
sub
es
scas
push
clc
sti
jmp
mov
mov
lods
or
stos
ret
ss
mov
aaa
push
ret
scas
mov
int
mov
dec
fsubr
mov
out
mov
inc
in
lods
lea
call
loopne
psubd
push
fwait
aas
jge
lret
ret
repz
mov
cli
stos
mov
cld
jo
mov
shrl
pop
fstl
jne
aad
xchg
stc
dec
push
dec
cmp
jae
dec
out
jne
into
jg
dec
fisttpll
xchg
mov
stc
inc
inc
sub
cmpsl
stos
cld
inc
repnz
mov
test
stc
cmp
xor
push
add
clc
dec
stc
dec
add
fdivrl
dec
repnz
jb
dec
inc
dec
mov
fsubl
dec
add
push
fcoml
push
dec
outsb
aad
push
xor
popf
adc
push
add
sub
dec
arpl
sti
inc
dec
popa
xchg
jle
xchg
stos
adc
and
test
and
jge
sbb
xlat
xchg
stc
daa
pop
test
pop
push
rorl
in
cli
and
adc
pop
ja
sub
andl
pop
lahf
int3
cmp
pop
cmp
xor
shrb
dec
sti
fwait
lods
flds
pop
cmp
jns
out
icebp
gs
inc
xor
out
insb
outsb
out
inc
xor
jno
xlat
sub
jg
enter
fisttpll
mov
pushf
xchg
mov
mov
aas
enter
adc
sahf
xchg
mov
mov
and
rcr
add
add
xchg
clc
sbb
sbb
inc
int3
adc
hlt
insb
fcomip
dec
fadds
mov
pop
sbb
out
rcll
or
out
inc
fwait
sbb
dec
mov
mov
dec
lock
mov
stc
jg
pop
aas
pop
into
mov
clc
sub
jb
scas
cmc
mov
pop
xchg
jmp
mov
pushl
in
cmp
push
add
sahf
pop
or
mov
neg
jg
jg
out
clc
dec
lret
jge
xor
scas
shlb
dec
xchg
iret
repnz
sub
sarb
scas
add
gs
outsb
xchg
stc
mov
daa
notl
fstpl
xchg
imul
jbe
push
fucomip
mov
aas
cli
movsb
push
lock
lret
in
cmp
jbe
addr16
mov
mov
cltd
mov
jle
xchg
loope
cli
fs
idivb
sub
inc
stos
ja
imul
sub
push
mov
out
jb
push
or
jecxz
mov
daa
nop
cwtl
mov
mov
mov
add
gs
cmc
div
dec
mov
jbe
js
in
cli
cli
out
or
cwtl
jl
je
cmpsb
mov
sti
cmpsl
jmp
mov
imul
xchg
repz
jg
shl
jae
mov
jae
out
pop
fnsave
dec
pop
clc
std
out
mov
fsubrp
jle
outsl
jmp
icebp
cmp
jg
fisttps
xchg
fwait
fwait
adc
jmp
adc
inc
xor
xchg
aas
sti
mov
push
iret
in
pop
xchg
gs
sbb
inc
inc
push
or
fdivs
xchg
arpl
popf
in
fbld
outsl
sti
incb
filds
stos
enter
cmpsl
in
idiv
lahf
mov
jge
std
mov
pop
add
scas
mov
negl
outsl
push
jg
loop
negl
push
decl
sub
jge
mov
mov
jg
aad
mov
jmp
rcl
xor
arpl
call
adc
lcall
sub
aam
adc
outsl
mov
icebp
je
stos
xchg
fcoml
push
and
mov
stos
mov
aad
mov
pop
push
sub
ljmp
mov
cmpsb
stos
cmpsl
mov
xchg
xchg
mov
mov
push
mov
mov
fisubrs
call
jo
jae
out
pop
fdivl
sti
ficompl
call
jb
loop
int3
cwtl
jmp
sub
lock
cld
inc
daa
sarb
mov
xchg
sarb
inc
test
int
dec
ds
push
inc
adc
in
shld
mull
push
jmp
aad
ret
xchg
gs
xchg
inc
aaa
scas
pop
movsb
sub
fs
adc
repz
hlt
and
clc
xorb
xor
mov
scas
adc
repnz
and
mov
lret
or
add
jmp
ljmp
cmc
push
shlb
and
test
daa
lcall
jns
dec
hlt
fcompl
lcall
sti
xor
out
mov
insl
out
jbe
pop
mov
push
push
out
push
adc
test
fwait
in
rorl
faddl
in
stos
mov
fistps
in
repnz
cwtl
mov
jne
stos
dec
xchg
jmp
and
cltd
jns
mov
pop
mov
cmp
repnz
pop
lret
test
push
iret
adc
xchg
ljmp
mov
push
mov
sarb
push
mov
out
xchg
call
in
mov
add
jg
enter
scas
repnz
mov
stc
loopne
lcall
push
test
push
mov
mov
mov
lock
mov
stos
add
adc
idiv
mov
mov
lret
sti
pop
hlt
ljmp
fidivl
xlat
push
pop
cwtl
mov
dec
sbb
jb
or
mov
jo
movsb
adc
inc
cld
lret
popf
dec
inc
push
adc
sbb
mov
rolb
dec
cmpsb
dec
mov
lcall
xchg
fdivr
mov
mov
cld
lret
mov
xchg
enter
xchg
insb
loopne
dec
inc
inc
lcall
in
push
mov
ljmp
sub
es
iret
cli
jg
cmp
fs
int3
xchg
push
hlt
js
loopne
hlt
cwtl
out
or
cmp
mov
in
sbb
call
push
int
incb
add
cmc
xlat
mov
mov
xchg
clc
hlt
xchg
shll
lahf
js
mov
xchg
jo
jb
fcmovb
xchg
push
fsts
mov
loopne
daa
jnp
sbb
call
fneni(8087
mov
in
std
lret
and
aas
popf
mov
pushf
mov
xchg
test
fstpt
ds
xchg
test
lcall
xchg
sbb
call
aas
into
xor
repz
add
dec
add
int
push
push
int
int
int
int3
mov
int3
lret
add
lret
sub
and
icebp
lret
xchg
lret
push
cmpb
cmpsb
leave
fwait
leave
xchg
leave
ja
jb
add
mov
enter
enter
enter
mov
xchg
xor
sub
adc
add
lds
mov
sub
and
push
and
ret
mov
ret
adc
pop
enter
iret
ret
pop
mov
pop
ret
add
and
test
shll
pop
rcrl
rorl
movsb
mov
mov
int3
stos
scas
fdivrl
push
add
repnz
fistps
in
imul
cltd
in
jg
lock
test
cli
cld
cmpsl
aas
incb
lcall
jp,pt
inc
incb
stc
sti
out
in
mov
dec
dec
dec
aad
cmpsl
cli
int
push
pop
aas
in
in
hlt
dec
dec
cmc
out
cltd
push
aas
cli
leave
xchg
stos
outsl
pop
jge
dec
ds
jnp
aas
stc
jmp
jl
ja
hlt
pop
inc
mov
repnz
or
aas
adc
decl
jnp
repz
cmp
daa
int3
pop
repz
cmp
jg,pt
sbb
cs
stos
cmovne
pop
mov
cmp
dec
lret
lahf
mov
aam
pop
icebp
neg
cltd
loop
pop
push
loope
sarb
or
std
push
push
in
rorl
mov
test
aaa
cltd
pop
out
decl
stc
push
test
sub
fdivs
aam
aas
pop
cmp
mov
fdivr
repnz
ljmp
icebp
stos
mov
incl
jmp
add
inc
add
call
int
jmp
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
pusha
mov
mov
xor
mov
inc
cmp
jb
popa
jmp
