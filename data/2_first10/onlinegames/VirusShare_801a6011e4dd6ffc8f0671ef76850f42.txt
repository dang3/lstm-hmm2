xor
sub
sbb
cwtl
lds
and
mov
in
push
pop
cmpsb
or
pop
pop
mov
pop
mov
pop
mov
jmp
pop
testl
cmpsl
jle
sarb
test
inc
jnp
cmp
call
inc
std
iret
cmp
pushf
repz
push
dec
movsl
in
inc
lret
lods
fs
shll
addr16
inc
repz
out
mov
dec
mov
xchg
and
jmp
or
dec
incb
dec
cmp
xchg
push
lods
xchg
add
popf
and
repz
and
adc
push
out
adc
insb
stos
out
popf
std
in
jmp
adcl
lock
pusha
dec
mov
lahf
leave
mov
fbld
lcall
mov
push
fldcw
outsl
mov
ret
cmp
mov
push
das
push
inc
add
pop
inc
scas
push
rolb
rcrb
ficoml
xchg
xchg
mov
ljmp
or
mov
jle
jmp
dec
pop
push
lahf
add
loop
xchg
cmp
and
outsl
mov
cmp
mov
lret
xchg
xor
mov
iret
jge
dec
add
mov
out
adcb
loope
shlb
cmp
or
leave
rol
pushf
mov
in
cmpsl
stos
xchg
mov
push
lret
sub
popa
pop
insl
xchg
popf
jecxz
mov
je
sti
inc
mov
adc
aam
add
inc
icebp
mov
xchg
pop
push
sub
orb
bound
or
int3
cmc
sub
cmp
pop
das
iret
dec
jno
push
dec
push
add
sub
lahf
mov
imul
and
xchg
shrb
adc
cmpl
dec
mov
xchg
negb
xchg
jp
xor
mov
mov
sbb
mov
leave
rcr
lods
mov
adc
jbe
movsb
mov
jmp
push
cmc
mov
aas
movsb
push
aas
in
adc
js
testw
sbb
mov
rcl
xchg
outsl
adc
xchg
popa
jno
enter
iret
daa
js
and
dec
push
stc
pop
xor
add
adc
push
push
mov
xchg
aaa
cmp
sahf
and
fdivrs
xchg
js
fidivrl
jb
pop
xchg
cmpsl
imul
mov
mov
out
jg
mov
adc
push
aas
push
popa
push
fistps
vcvtss2si
push
jmp
test
xchg
mov
mov
mov
int
mov
out
pusha
pushf
xchg
or
adc
into
lret
stos
cwtl
sub
movsb
or
sub
push
sub
jg
mov
xor
push
lret
jnp
sub
pop
xchg
shll
jb
push
loope
jae
mov
fdivrp
adcb
clc
and
into
sbb
or
jno
pop
dec
mov
xchg
and
sub
push
imul
jne
jo
xchg
repz
mov
rolb
mov
wrmsr
pop
insb
mov
ret
and
enter
sbb
mov
out
cmpsb
outsb
popa
cmp
pop
and
inc
add
fucomip
add
js
mov
iret
test
jmp
nop
inc
jge
sbb
jns
jmp
mov
fs
add
or
imul
mov
add
mov
out
stos
mov
cmp
cmp
fldl2e
jg
pushf
jmp
stos
cld
xor
xchg
insb
mov
int
push
xchg
jle
imul
sub
sub
inc
sbb
out
or
mov
inc
jmp
or
into
push
ja
lret
mov
fisttps
out
bnd
adc
jns
mov
in
sub
popf
testl
cli
sbb
cmp
jge
mov
push
inc
xor
in
popf
mov
mov
daa
scas
fwait
inc
aaa
jnp
sbbl
xor
sarl
pop
adc
mov
daa
pmulhw
xchg
mov
add
cs
adc
scas
cwtl
and
add
dec
insl
xchg
insb
inc
lock
mov
sub
pop
dec
scas
sub
mov
xor
loopne
mov
dec
or
jae
mov
aad
mov
mov
cmpsl
add
dec
xchg
mov
ljmp
xor
xor
push
jo
or
shll
dec
adc
arpl
repz
sahf
mov
in
cmp
sti
and
call
push
shl
inc
mov
jno
adc
adcb
lcall
jb
pusha
les
mov
repnz
mov
or
jg
cmpsb
fisubrl
in
push
ja
nop
mov
dec
pop
cmpsl
sbb
cwtl
sbb
dec
or
xor
xchg
jno
push
std
adc
sbb
adc
enter
pop
push
inc
push
jg,pn
stos
inc
dec
sub
lret
jecxz
mull
push
test
nop
adc
cld
in
movsl
push
mov
aad
les
inc
cltd
xchg
movl
sbb
pusha
testl
and
cmc
sbb
sub
test
add
add
dec
adc
iret
nop
pop
cltd
sbb
mov
dec
mov
sahf
pop
repz
xor
loop
je
and
dec
lahf
push
sbbb
fcoml
repnz
pop
jge
addl
cli
pop
decb
xchg
clc
inc
jmp
mov
scas
in
test
pop
addr16
or
inc
and
xor
bound
mov
ljmp
shl
mov
sbb
pop
xchg
lds
mov
adc
xlat
and
mov
pop
dec
sbb
xchg
enter
aas
rcrb
in
mov
mov
push
push
mov
test
push
ja
push
pop
dec
outsb
xchg
scas
popa
rclb
xchg
stos
lock
lret
or
out
cmp
imul
repz
mov
fldenv
out
les
jbe
xor
ds
jecxz
lret
cltd
lret
sahf
mov
addr16
mov
inc
addr16
fcomi
lahf
aam
mov
dec
push
lret
and
in
add
in
bound
and
je
inc
inc
push
xor
and
les
xchg
call
sub
lods
mov
jmp
mov
mov
xchg
neg
mov
fmuls
or
add
or
nop
gs
out
std
sub
jmp
push
ss
push
fsubrs
clc
xor
nop
mov
in
pop
dec
enter
xchg
fstps
clc
jecxz
mov
movsl
cmp
dec
lds
fmul
jo
and
xchg
cmpsl
das
sbb
adc
sbb
test
stc
aas
pop
fstpt
push
pop
mov
lods
fmull
mov
call
cmc
lods
lds
lods
movsl
mov
repz
mov
std
fcmovnb
mov
fiaddl
cmp
out
mov
mov
cmp
pop
push
mov
fs
rorl
mov
into
sub
and
stos
out
out
repz
imull
cmc
roll
adcl
mov
pusha
inc
mov
icebp
stos
mov
pushf
mov
sub
adcl
aam
loopne
inc
push
pop
addr16
mov
cmp
inc
xchg
gs
das
lcall
daa
jecxz
rcr
jae
fcom
inc
jae
shlb
adc
ds
add
inc
fdivrl
adc
pop
lock
rorb
and
mov
mov
daa
sbbl
je
dec
sahf
movsl
into
out
rclb
add
add
or
add
test
mov
mov
idivl
ffree
mov
pop
sti
loopne
fwait
lods
mov
mov
out
insl
fstpt
imul
adc
rcrl
cld
jl
les
pop
jmp
clc
data16
adcb
jae
push
mov
and
mov
ja
jle
jmp
jo
or
inc
aas
sbb
mov
push
arpl
xchg
or
std
push
test
dec
inc
imul
cmp
sub
sbb
cltd
adc
sbb
pop
mov
es
add
sub
adc
cmp
roll
sahf
pop
repz
jl
jmp
inc
pop
imul
call
or
or
adc
and
call
mov
mov
arpl
aad
dec
push
fistpl
lods
push
pop
mov
pop
jl
pop
sub
or
dec
push
loopne
fsub
inc
sbb
push
xchg
pop
lds
dec
loope
xor
push
jle
das
dec
lods
jb
or
cwtl
sub
mov
mov
mov
test
xchg
add
jnp
cmp
gs
leave
mov
mov
sahf
insb
xchg
outsl
dec
repnz
sbb
test
lret
leave
or
fldenv
pop
fldcw
cli
jl
jb
mov
ret
and
jbe
repz
lcall
ficomps
lea
xchg
push
add
shl
sbb
int
shll
pop
mov
lcall
pop
and
or
in
outsb
in
and
ja
sub
push
jp
cwtl
call
outsl
mov
fucomip
inc
sub
sub
imul
sbb
lret
test
adc
in
jae
cmp
test
mov
and
testb
xchg
push
repz
fcoml
jno
outsb
jge
lods
xor
popa
xchg
xchg
xchg
pop
cmovbe
mov
stc
xchg
orl
mov
jb
jnp
fiadds
jg
push
mov
or
add
push
mov
add
xchg
jnp
mov
mov
xchg
add
enter
std
sbb
and
arpl
mov
sbb
movsl
outsb
jmp
cmc
pop
pop
lret
inc
dec
stos
std
and
stc
scas
mov
sub
and
push
cmpsl
dec
cli
jae
test
movsb
cmp
add
jbe
test
clc
push
aas
push
dec
fisttpll
xchg
lcall
nop
jecxz
xlat
clc
sub
xor
xor
jmp
pop
cmp
aam
shlb
mov
sub
push
test
pop
cwtl
mov
and
nop
cmp
imul
ret
mov
imul
mov
push
test
test
push
push
add
cmp
cmc
cld
mov
pop
mov
xlat
jb
bound
stos
mov
sub
pop
or
inc
lahf
xchg
pop
xchg
or
outsl
shrl
sarb
mov
js
dec
jne
inc
xor
jecxz
mov
lock
outsb
mov
jecxz
outsb
aas
push
mov
mov
mov
not
mov
insb
or
cmp
nop
pop
insl
mov
xor
shrb
fdivs
and
push
popa
imul
inc
jns
fisttps
adc
imul
jnp,pn
xor
jle
test
push
loope
push
notb
cmp
ja
std
fimuls
movsl
mov
lret
iret
or
mov
dec
imul
cmp
xchg
cmp
fwait
adc
cmp
fcmovb
lahf
sub
cmpsb
pop
jnp
xor
cmp
add
popl
cmpsb
rcll
push
jae
xor
imul
xchg
mov
out
daa
xlat
fneni(8087
mov
mov
dec
rcr
cwtl
in
sub
movsl
addr16
loope
push
mov
or
jecxz
fisubl
inc
in
adc
xchg
and
fnsave
sub
push
aam
inc
lock
ret
imull
cmpb
push
sub
popa
and
cmp
js
jnp
sub
jl
pop
inc
sbb
push
insb
mov
mov
cwtl
int3
pop
rcrl
and
push
jmp
ret
fdivl
mov
xor
mov
and
fsts
roll
in
gs
hlt
push
pushf
push
dec
das
inc
testb
jmp
pop
in
or
mov
mov
inc
push
hlt
push
enter
mov
mov
outsb
jg
stos
dec
scas
pop
jl
push
imul
and
idivl
daa
xor
mov
jge
xchg
pop
mov
xor
push
outsl
mov
and
aas
insb
movsl
dec
js
mov
je
je
repnz
cmp
lods
jnp
popa
pushf
lods
mov
in
ret
iret
fldenv
jecxz
or
mov
lahf
call
loopne
and
mov
out
rcr
ret
ja
je
fst
xchg
ja
mov
sub
ja
fmul
jp
hlt
sub
leave
in
sahf
leave
dec
mov
repnz
push
lea
jnp
cmp
push
pushf
outsb
push
or
and
pusha
push
and
pusha
pop
int
and
adc
jp
add
inc
push
aad
or
push
js
cs
aas
jae
inc
add
sbb
stos
or
sub
test
or
flds
scas
sbb
mov
shr
cs
jo
mov
paddb
stc
push
push
xor
lret
fcoms
jmp
bound
inc
cmpsb
push
movsl
sbb
loope
divb
push
test
xchg
bound
lret
ret
dec
pop
aad
pop
xchg
pop
cli
or
out
fists
flds
jo
xor
frstor
in
xchg
pushf
in
jbe
sub
outsl
mov
dec
lea
insb
xlat
mov
test
xor
jmp
out
sbb
cltd
movsl
dec
and
jo
testl
imul
lahf
mov
push
mov
add
out
dec
push
xchg
xor
lods
mov
cwtl
cli
js
add
dec
add
push
sub
xchg
mov
stos
jae
mov
adc
fstpl
repnz
push
jg
xchg
repz
aam
fbstp
cmpsb
nop
imul
mov
jmp
cmp
incb
mov
xchg
cmc
aaa
cmp
mov
lods
add
divb
sbb
out
ror
je
xchg
out
cmpl
jg
and
sbb
xor
sub
stos
in
lods
pop
and
jle
cmp
addl
sbbl
pop
cli
jg
es
add
out
mov
nopl
add
in
dec
push
xor
arpl
mov
push
dec
popl
fisubrs
lods
jle
adc
movsb
fdivp
pop
xchg
jmp
jl
cmp
inc
cmpsb
add
jge
jge
jo
cmc
in
dec
shll
pop
enter
fs
out
std
jle
sbb
push
cmp
imul
add
hlt
pop
mov
push
mov
mov
adc
pop
fcmovnbe
mov
inc
fldt
ljmp
pop
arpl
int
test
cmp
pop
add
popa
mov
or
repz
xor
pop
pop
pop
fisubrs
and
scas
jmp
adc
aad
lods
xor
out
stos
lods
xchg
mov
std
push
add
or
lock
jg
sbb
cmovb
js
stos
inc
ss
lahf
cmp
pop
pop
repz
shlb
xor
pushf
nop
ds
fdivrl
lea
and
jo
or
mov
fchs
add
xchg
xchg
jns
push
rorb
rcr
stos
enter
jle
ja
dec
mov
dec
rorb
insb
movsl
adc
sub
roll
test
das
jecxz
loope
mov
iret
jle
mov
dec
ljmp
xor
ds
push
or
jo
out
mov
stos
hlt
mov
cmp
jecxz
push
add
sbbb
add
scas
sti
push
xchg
dec
xor
mov
bound
or
pop
inc
and
sbb
sub
push
mov
mov
inc
testl
ds
fisttpl
scas
mov
mov
shr
imul
sarb
jge
sub
dec
cltd
add
outsl
cmp
adcb
movsl
mov
sahf
fmuls
add
ds
mov
lret
test
mov
stos
sub
decl
mov
adc
sbb
jmp
je
or
mov
mov
stc
sub
cmc
xor
jbe
fmull
ror
cmp
adc
cld
fdivr
notl
xor
repnz
inc
dec
jns
movsb
inc
add
xchg
push
add
pop
ficompl
cmp
lock
adc
in
sub
sub
imul
or
lds
push
inc
dec
cltd
shl
push
jmp
sub
or
add
jl
lods
mov
dec
add
je
cld
mov
aam
mov
or
out
or
dec
xor
jecxz
mov
and
icebp
sbb
inc
add
repnz
xchg
pop
push
aam
xor
subb
mov
inc
cld
and
pusha
mov
cmpsb
xchg
cmp
inc
pop
adc
jmp
loop
add
or
ret
in
inc
add
js
sbb
outsl
adc
pushf
lods
test
push
and
aaa
push
cmp
bound
icebp
cld
mull
add
stc
shl
dec
ljmp
pop
mov
sarb
fcom
cwtl
xchg
xchg
inc
rcl
add
jg,pn
fstp
jb
mov
pusha
repnz
int
dec
adc
arpl
dec
int3
mov
cmp
aam
cmp
jecxz
jl
push
subl
lret
mov
adcl
xchg
cmp
aam
movsb
jge
mov
cltd
jo
mov
push
lock
and
push
pop
cmp
push
adc
push
xchg
ficoms
mov
push
mov
and
rclb
mov
add
sub
and
cli
push
outsb
sub
ficompl
sbb
jae
popf
out
loopne
in
fcompl
fidivrl
inc
sti
cld
sbbl
out
lods
shrb
dec
mov
sub
jbe
xor
sub
lods
int
pop
pop
jl
pushf
pop
ja
andb
xchg
nop
lods
addr16
mov
inc
or
inc
pop
in
add
cwtl
jp
cli
jmp
mov
pop
xchg
aam
jge
mov
cmp
xor
adc
lahf
adc
jmp
add
cmpsl
sub
lods
jl
mov
mov
imul
ljmp
pop
dec
lahf
adc
cmp
fistpll
mov
or
cmpsl
outsl
push
cli
jnp
inc
stos
and
aaa
adc
pmulhw
or
sub
pop
pop
jecxz
sub
lret
fidivrs
pusha
inc
rep
stos
mov
cmp
jno
xor
jecxz
std
pop
xchg
mov
sbb
mov
mov
cmp
mov
mov
adc
lds
cmpsl
loope
pop
mov
cli
in
fsts
mov
stos
lret
cmp
loope
add
or
pop
inc
and
dec
iret
arpl
mov
cltd
jnp
sub
sub
loopne
fwait
or
lcall
cltd
push
fstpl
or
iret
test
xor
mov
andl
sbb
rcrb
daa
pop
add
mov
in
mov
lds
outsb
in
jmp
dec
ss
aas
sbb
test
test
mov
repnz
xchg
in
inc
fmull
in
adc
xchg
add
push
repnz
pop
std
xchg
sub
jno
sbb
jo
jns
xchg
push
fdecstp
movsl
into
xchg
xchg
out
mov
addr16
jns
xor
jo
aaa
cs
leave
in
cmp
out
hlt
repnz
or
fnstenv
push
aaa
out
outsb
cltd
jns
out
xor
sti
jb
cltd
add
ja
ret
repz
dec
mulb
cmp
inc
sti
negl
push
xor
push
repnz
bound
je
bswap
inc
lea
or
jmp
aam
arpl
repnz
push
fdivs
push
jmp
inc
mov
fs
xlat
popa
inc
cld
push
pop
push
shrl
rolb
mov
dec
xor
mov
aad
or
fistl
pop
fdivp
negl
loopne
push
adc
icebp
addb
cli
cvtps2pd
cli
arpl
add
or
adc
mov
test
fidivrl
loop
mov
js
hlt
mov
shll
or
inc
add
add
loop
and
jg
or
insl
sbb
dec
scas
mov
sub
cmpsl
sbb
iret
mov
adc
push
cli
and
push
sbbl
pop
outsb
jno
loop
xchg
cwtl
mov
jmp
add
mov
aaa
mov
gs
outsb
xor
call
pop
setle
push
rcr
call
inc
dec
fmull
icebp
imul
and
fiadds
dec
mov
mov
fldl
addb
int3
jne
or
mov
xchg
ss
out
push
repz
inc
popa
mov
dec
sub
enter
cmpsb
cmp
push
add
xchg
push
out
leave
push
mov
repz
aad
mov
cwtl
js
fistpl
sub
and
fs
push
pshufw
cwtl
mov
and
mov
mov
popf
adc
lock
imul
int
or
adc
jecxz
cmp
sub
mov
xchg
push
dec
push
stos
adc
sub
lret
pop
lcall
in
and
fwait
ss
loop
add
arpl
cli
test
cmp
pop
sti
and
mov
mov
xchg
mov
mov
fisubs
adc
repnz
inc
repz
jg
jl
xchg
roll
mov
loop
inc
dec
jle
aam
stos
mov
or
jb
lahf
adc
daa
lea
enter
sbb
in
test
in
ljmp
fildll
pop
cli
xor
add
sub
add
pusha
push
mov
sub
and
add
scas
fwait
mov
adc
dec
gs
clc
mov
xchg
rcll
or
ficomps
mov
in
jecxz
xchg
xchg
sub
subl
in
xchg
fists
sbb
push
nop
inc
adc
ss
add
mov
push
gs
ret
mov
aas
dec
out
add
pop
cli
clc
add
pushf
jmp
mov
movsb
ror
out
shrl
xor
lds
xor
gs
clc
cmpsl
xchg
sbb
aad
inc
fisttps
sbb
sub
imulb
insl
mov
lret
inc
xlat
loop
popa
addr16
inc
xor
enter
mov
pop
insl
xchg
pop
mov
add
bound
mov
inc
sub
jp
add
inc
pop
jns
mov
mov
scas
stos
pop
insl
add
and
jg
inc
es
mov
stc
pop
or
jae
stos
jge
call
icebp
and
cli
std
js
loope
leave
jbe
stos
xor
cs
call
pop
out
mov
mov
fwait
popf
dec
cmp
adc
adc
stc
ljmp
cmp
aaa
hlt
and
clc
lcall
dec
aad
jb
adc
in
mov
cli
mov
ljmp
andl
movsb
jo
push
imul
nop
inc
call
cmpb
and
adc
add
adc
add
iret
sub
xchg
out
lock
ret
rcrb
inc
mov
or
inc
dec
dec
test
inc
push
dec
hlt
dec
pop
into
imul
js
xor
out
dec
out
shlb
sbb
test
fisubs
push
flds
mov
hlt
lods
xchg
pop
adcl
int3
ret
pusha
ficoml
adc
ss
sub
mov
push
inc
lahf
push
mov
popf
lock
nop
test
subl
dec
push
fidivrl
les
fistpl
out
add
xor
xor
outsl
into
adc
mov
jp
aas
fldt
dec
or
cmp
pop
lods
xor
adc
adc
enter
pop
cmpsl
in
dec
mov
sahf
add
shlb
adc
lds
popa
cs
pop
in
lahf
in
ret
aad
movsl
ret
pop
test
jns
fisubrs
divps
test
xor
lahf
test
test
imul
sub
sbb
mov
pop
mov
cli
jecxz
inc
push
arpl
push
cmpb
dec
clc
outsb
sub
inc
cmp
js
pop
test
aas
cmpsb
cmp
mov
mov
sub
pop
adc
adc
shrl
insb
das
sub
jle
pusha
push
test
xor
cmp
xchg
mov
fildll
pop
xchg
ljmp
dec
dec
cmc
or
push
sahf
rol
stc
sub
jne
dec
adc
jmp
test
jb
add
add
hlt
ret
inc
test
daa
call
dec
mov
loope
sbb
pop
push
das
scas
repnz
and
and
imul
scas
outsl
pop
pop
shr
int
scas
mov
xor
mov
jg
test
mov
and
scas
test
mov
cld
inc
fwait
sub
mov
cld
cmp
jo
mov
stc
xor
loop
ss
nop
mov
ret
fidivrl
sahf
jecxz
sbb
inc
and
adc
pushf
cmp
jne
bound
cmp
loopne
pcmpgtd
pop
xchg
fcomp
es
or
lods
popf
inc
xor
scas
xor
or
fistpl
sar
cld
pop
jmp
rcrl
int
lea
pusha
cmp
movsl
adc
cs
jo
cmpsb
divb
repnz
addb
lods
clc
jns
jmp
js
dec
movsl
mov
jbe
stc
jae
andb
dec
aad
dec
mov
fwait
jo
mov
mov
sub
add
ja
and
jne
add
mov
mov
stos
js
cmp
out
add
movsb
mov
cmpsl
jg
mov
loop
xor
nop
sub
repnz
adc
sub
jl
mov
lds
or
cltd
pop
inc
and
pop
js
dec
push
out
popa
inc
pop
sti
lahf
aam
pop
rcrb
test
sbb
cmpsb
pop
mov
fldl
dec
mov
lret
stc
clc
sbb
and
mov
int3
fwait
out
sbb
out
adc
mov
sahf
cmp
inc
hlt
adc
mov
jp
pusha
filds
bound
jb
int3
jne
xchg
rolb
lds
clc
stos
das
pop
mov
and
mov
push
dec
push
aad
test
mov
push
test
scas
xchg
imull
push
adc
mov
cwtl
mov
dec
mov
sub
bound
loope
add
add
lahf
xchg
outsb
cld
jnp
mov
ds
aam
popa
jmp
fisttpll
dec
dec
call
xchg
push
push
call
mov
xor
push
jns
out
leave
jo
mov
mov
push
fcmovnb
cld
out
mov
bound
and
pusha
lods
inc
jmp
cmp
sub
xchg
sbb
sub
adc
ret
scas
push
inc
fidivrs
int
inc
and
js
shr
addl
cmpsb
mov
dec
ss
mov
cmp
adc
jae
lret
pop
pop
push
jne
ss
nop
xor
xchg
movsb
jne
test
jb
imul
inc
jge
adc
ljmp
sti
pop
jmp
out
mov
or
cmp
push
scas
jb
aad
jmp
scas
inc
sahf
sub
loopne
dec
cmp
imul
sti
inc
outsb
mov
in
ret
xchg
push
jmp
bound
lock
mov
loope
enter
cmp
insb
and
push
inc
inc
in
arpl
mov
mov
loop
push
pop
sbb
mov
or
negb
or
sbb
xchg
iret
cmpsl
nop
push
sbb
rclb
stos
outsb
fildl
or
enter
push
js
pop
adcl
mov
mov
les
xor
in
in
mov
add
xchg
mov
xor
mov
jae
test
xrelease
fsincos
outsl
sbb
aad
xor
scas
mov
sbb
lcall
jo,pt
shl
addb
jno
and
sahf
inc
mov
gs
out
pop
cmp
or
mov
push
icebp
std
mov
inc
xchg
enter
pop
mov
aaa
pop
mov
filds
add
xor
inc
mov
in
je
jmp
insb
daa
mov
push
lea
cltd
std
fs
xor
xchg
int
dec
stc
cmp
sub
lock
icebp
pop
shll
mov
add
gs
mov
std
cmp
cwtl
mov
xor
xor
push
or
mov
dec
aam
cmp
mov
and
jo
xchg
ret
jle
and
adc
xchg
pushf
jno
arpl
in
cmc
mov
xchg
push
jnp
jmp
insb
je
test
sub
sbb
popf
xchg
inc
mov
mov
mov
pushf
jne
into
push
or
and
pop
lcall
add
jae
cmpsb
fsubr
push
fwait
js
pop
mov
and
or
je
cmc
sub
or
jecxz
cmp
iret
ret
xor
fdivr
sbb
cmp
mov
xor
add
adc
push
push
shll
and
popa
inc
dec
mov
pop
pop
mov
popa
sbb
and
jne
mov
sti
cltd
add
arpl
or
lods
xadd
xchg
pop
mov
imul
or
xchg
lcall
jmp
paddsb
mov
dec
dec
adc
jbe
adc
and
fldl
js
sbb
and
xor
push
xor
lea
popa
sbb
xchg
lcall
add
jp
and
jnp
in
test
inc
outsb
push
cmpsb
cli
loopne
and
in
inc
mov
inc
push
jbe
cwtl
mov
imul
das
pop
in
and
adc
movsb
or
mov
and
push
push
mov
andl
dec
jl
ret
pusha
pop
rcrl
jnp
mov
add
xchg
in
leave
sbb
rcll
push
xchg
push
ja
ret
jle
std
jp
or
cmc
mov
pop
push
inc
mov
push
sbb
out
scas
test
xor
jb
pushf
adcb
jg
out
inc
movsb
bound
inc
je
cmp
push
sbb
xchg
faddl
rcr
popa
pop
lcall
cmp
rcrb
push
or
insb
dec
sub
ret
jnp
aad
dec
sbb
outsb
jmp
jne
or
push
push
aas
cmpsl
out
addr16
stc
sub
dec
jae
test
push
movsl
push
sbb
xchg
subl
mov
jmp
cmp
push
call
movsb
fstpt
mov
push
jp
or
push
pop
lock
ljmp
mov
repnz
mov
mov
mov
int
adc
sbb
push
adc
dec
xchg
aas
cmc
lret
les
shrb
sbb
imul
and
repz
pushf
insb
sbb
and
xlat
dec
shr
lret
mov
mov
das
and
xchg
loopne
fsubrs
movsl
ds
shrl
add
push
inc
or
inc
aad
jg
cmp
mov
adc
aas
dec
das
jb
test
inc
pop
jecxz
xchg
aad
and
dec
push
push
roll
add
and
mov
mov
adc
xchg
sub
stc
sub
ret
mov
mov
mov
rcrl
fwait
mov
jl
imul
or
sti
inc
insl
dec
ja
jne
and
xchg
mov
jg
iret
addr16
xchg
sarl
adc
xor
out
push
je
mov
fmuls
sahf
adc
aad
xchg
fcmovu
mov
dec
fdivrl
out
les
inc
cmp
je
divb
rol
cmp
mov
test
adc
in
jmp
daa
and
shr
jp
sbb
insl
enter
cmpsl
repnz
ja
cmp
xchg
in
je
cmp
xchg
dec
and
aad
stc
mov
rcll
inc
loope
jmp
mov
jle
dec
jne
mov
scas
dec
loope
pop
pop
or
pusha
pop
mov
mov
int
test
mov
mov
iret
inc
mov
push
lret
mov
push
loop
rcrl
outsl
mov
sbb
xor
fs
mov
add
lea
stc
inc
mov
cmp
mulb
mov
sbb
xchg
cmp
jne
imul
leave
push
xor
ret
sarb
shl
cmc
cmpsl
mov
popf
pop
out
sbb
je
stos
sete
std
out
push
es
pop
push
sbb
inc
push
bound
mov
mov
cmpl
xor
orb
adc
dec
and
inc
pop
lcall
jno
gs
mov
or
adc
mov
js
lock
mov
xor
fisubl
pop
js
lret
pop
dec
push
cmp
je
push
je
imull
popa
mov
aad
into
mov
fildll
mov
hlt
cmp
neg
mov
out
in
lret
inc
into
adc
iret
leave
movsl
xlat
dec
sub
movsl
fwait
pop
adc
and
mov
aad
ja
xor
stc
push
popa
fsts
xchg
cwtl
fistps
aas
flds
ja
cmpsl
inc
cmpl
daa
push
xor
jnp
sahf
pusha
push
aaa
mov
mov
and
rcl
mov
outsl
lcall
adc
mov
sub
adc
mov
mul
fcoml
cmpsb
outsl
jo
or
lods
lock
arpl
pop
pop
mov
mov
mov
xchg
sbb
mov
shl
mov
mov
adc
cmp
dec
loope
sar
sbb
xchg
imul
xor
xchg
lds
push
mov
jnp
xor
add
shll
jmp
mov
jno
cmc
sar
pop
fwait
jle
adc
and
sbb
aam
inc
into
inc
xor
test
popl
and
push
repz
push
lret
cs
jmp
or
test
fwait
popf
dec
data16
xor
pop
outsl
mov
mov
adc
inc
out
xchg
lret
int3
lahf
inc
fisubrs
push
int
jge
fs
jg
add
xor
scas
or
lahf
and
mov
call
cmp
fcompl
loope
push
add
mov
movsb
repnz
fwait
push
push
aas
fwait
inc
jb
fdivrl
jnp
cltd
and
cmp
adc
mov
fucom
mov
outsl
test
insl
cwtl
add
pop
leave
sub
or
mov
mov
lcall
shlb
jmp
pop
pushf
push
jmp
add
ret
sti
flds
dec
cli
mov
shrb
daa
hlt
daa
and
and
addr16
add
dec
push
mov
xor
push
imul
in
dec
imul
test
sub
lcall
pop
repnz
jp
mov
daa
out
jmp
adc
outsl
pop
sub
nop
in
es
lods
dec
adc
insl
iret
pop
in
sub
call
pop
and
sbb
mov
pop
inc
sbb
add
dec
aad
aad
stos
call
cmp
into
aad
decb
pop
std
xor
popf
sbb
int3
jns
out
xchg
push
lods
xchg
movsb
xchg
lods
fnstcw
cltd
aas
cld
pop
mov
mov
test
scas
faddl
cld
popf
js
stos
popa
hlt
xor
in
sbb
adc
mov
scas
xor
push
jmp
add
sub
int3
enter
jne
xor
lret
rcr
xor
ja
data16
sub
subl
into
outsl
push
pop
sbb
dec
pop
mov
adc
shl
pop
cmp
aas
xor
dec
popa
lods
or
test
adc
movsl
in
out
adc
out
xchg
leave
lea
jb
mov
xor
les
push
fisubrs
lods
add
cmc
mov
mov
mov
das
lahf
fsubrs
and
add
pop
aad
rol
subb
popf
inc
mov
xchg
mov
xor
leave
mov
sub
mov
and
push
inc
popf
out
fwait
and
cmp
aaa
mov
push
add
fld
fst
cmp
cmp
cmc
push
sbb
mov
pop
ret
fimull
pushf
xchg
sti
mov
mov
fcmove
cmp
cmpsl
sub
je
push
inc
jl
sub
xor
sub
dec
in
jnp
lcall
pop
inc
ss
mov
or
popf
out
lcall
loop
out
xor
pop
mull
jno
dec
xlat
dec
fsubp
xor
mov
repz
int
mov
cld
mov
or
sti
or
call
xor
test
insb
hlt
or
pop
sbb
inc
in
adc
int3
jb
inc
fmull
repnz
stos
pop
dec
sbb
in
sub
fs
mov
xchg
lret
int3
pand
scas
push
ret
addr16
out
repz
shll
popf
jnp
int
pop
leave
test
sub
pop
loop
cmp
xor
mov
sti
scas
addr16
or
das
fmuls
sbb
out
cwtl
rcrb
pop
jns
fs
out
or
lock
mov
sbb
and
push
mov
repz
xchg
inc
das
sbb
imul
sbb
je
popf
leave
enter
test
add
push
imul
in
add
sbb
xchg
cwtl
and
xchg
out
sbb
xchg
inc
jmp
cmp
orb
daa
mov
mov
repz
dec
icebp
into
imul
popf
or
test
adcb
sahf
loop
shr
sahf
addr16
mov
mov
out
insb
cmp
sar
dec
sub
sub
or
test
pop
cld
xor
aaa
pop
dec
out
xchg
add
inc
sub
jle
cmp
dec
xchg
fisubrs
xor
pop
addr16
es
push
pop
cmp
cld
repnz
jg
lret
test
mov
cmp
jne
cmpsb
mov
adc
outsl
ret
das
sub
in
inc
mov
in
push
addl
cmc
popf
call
repnz
or
cmp
je
stos
dec
lret
std
cld
scas
mov
mov
fdivs
mov
pop
adc
into
dec
jb
xchg
scas
ja
xchg
aam
mov
push
test
imul
scas
jnp
pop
or
mov
es
mov
enter
xor
gs
decb
push
lock
sbb
sbb
addb
inc
xchg
mov
pop
mov
lods
fcmovnb
xchg
xchg
push
loope
pop
sub
sub
push
adc
jg
ficomps
jae
fwait
mov
jecxz
sarl
sbb
je
sbb
pop
insb
mov
lock
mov
add
ss
sbb
push
popa
mov
lcall
and
mov
fidivl
mov
push
inc
xrelease
sbb
xchg
mov
insl
sub
ror
lcall
push
mov
mov
jmp
jl
repz
aas
and
not
mul
mov
sti
sti
std
in
push
xchg
das
js
jne
xchg
adc
imulb
xor
sbb
mov
nop
mov
aas
push
pop
and
jae
or
imul
popa
push
xor
pop
sbb
sarl
popa
push
mov
xor
rol
inc
movl
enter
xchg
hlt
jno
mov
outsb
insl
mov
jno
mov
add
sub
cmp
call
push
enter
mov
shll
cmp
push
mov
imul
fidivrl
in
repnz
loope
repz
pop
dec
xor
adcl
into
nop
sub
lock
fildll
mulb
and
or
push
lods
imul
xor
adc
test
sbb
xlat
push
pop
pusha
outsb
sub
mov
ja
and
xor
push
push
jp
push
inc
out
fidivrl
jo
test
roll
add
in
mov
fdivr
cmp
inc
jns
clc
mov
enter
sti
stos
dec
lock
jle
iret
sti
xor
mov
lods
cmpsl
out
daa
jns
icebp
adcb
xorb
push
add
add
fdivs
or
or
adc
insb
push
xchg
pusha
jnp
rol
jne
loope
dec
xlat
lods
mov
test
xchg
out
cmp
daa
push
mov
bound
xor
lea
pop
cmp
xchg
sub
loop
imul
movsb
ja
in
cmp
dec
in
cmp
dec
add
sub
lcall
addr16
inc
popa
push
mov
scas
gs
int3
daa
xchg
cmpsb
cmp
loope
jae
push
scas
int
mov
sbb
ljmp
jle
movsl
movsl
xor
sti
mov
movsl
enter
mov
jp
mov
mov
pop
int
cmpsb
sbb
aas
and
sub
pop
cmp
dec
mov
cmp
sub
add
push
jl
and
mov
sbb
mov
push
imul
add
inc
clc
jmp
pop
xchg
test
jp
int
jns
or
jmp
stos
fcmove
xchg
mov
push
inc
push
add
mov
cmp
sbb
mov
lods
and
xlat
dec
jg
movsb
pop
push
adc
loop
mov
mov
inc
ret
mov
lock
in
pop
sub
add
out
rol
sbb
inc
lock
mov
vsubsd
fwait
loopne
lods
mul
jae
aaa
xchg
sbb
movsb
and
xchg
pop
fnstsw
scas
mov
push
lret
dec
cli
xor
andl
int
dec
pushf
in
add
lcall
outsb
and
leave
pop
insl
xor
pop
or
sub
stos
sti
inc
jb
push
loop
sbb
rol
pop
icebp
js
in
xchg
push
dec
cltd
jecxz
jmp
adc
loop
inc
in
bound
mov
loope
nop
pop
not
jmp
adc
or
xor
and
mov
js
or
cmp
movsl
mov
sub
or
fnstsw
int3
inc
push
pop
or
push
xchg
leave
and
cmpsl
push
mov
movsb
inc
inc
xor
jl
test
out
daa
add
out
lcall
int
inc
stos
addl
das
mov
lahf
push
rol
lock
jmp
scas
and
lcall
cwtl
out
adc
iret
lods
out
aaa
or
pop
ret
push
xchg
stc
inc
jle
fisubrl
adc
dec
rorb
jg
mov
mov
sbb
mov
scas
loopne
testb
add
adc
dec
pop
pushf
rolb
pop
outsb
rcll
xchg
aaa
insl
add
sbb
sbb
jno
rcl
fxam
jmp
inc
sahf
push
cmp
and
ficomps
ss
fsubrl
subl
in
stc
rol
leave
fwait
test
leave
enter
out
xor
mov
inc
pushf
testb
ds
sahf
pop
inc
add
sbb
and
arpl
and
das
and
adc
mov
cmp
pop
sbb
push
orb
scas
cmp
mov
push
dec
add
inc
xor
adc
cmpsb
xchg
mov
jae
inc
xor
xlat
ss
mov
push
xchg
jbe
sbb
aam
jo
pop
stc
mov
cmp
jmp
and
call
sub
push
jmp
push
dec
fsubrs
out
inc
dec
add
mov
jecxz
pop
imull
test
dec
lods
cmpsl
sbb
js
add
xchg
or
pushf
add
fucom
outsb
jo
in
sbb
roll
enter
dec
mov
js
pop
lea
mov
fcomp
call
push
movsb
add
mov
out
aam
mov
std
roll
pushf
aaa
test
popf
xor
xchg
push
pop
sti
pop
sbb
sub
or
stos
fldlg2
neg
cmp
xor
pop
pop
jle
mov
mov
xchg
lret
shl
and
xchg
gs
mov
dec
mov
hlt
or
adc
hlt
or
jg
or
pop
bound
pushf
mov
sub
test
lds
push
ret
sahf
jge
shll
ss
es
or
aaa
adc
adc
adc
sbb
aas
lods
test
sub
and
rol
mov
push
push
subb
push
out
movsl
fwait
push
or
xlat
inc
test
ret
loopne
mov
loope
stos
ja
adc
cmp
pop
fcmovnu
out
mov
outsb
adc
outsb
add
aaa
out
pop
leave
outsb
stos
jmp
jecxz
daa
push
mov
mov
pop
push
and
pusha
xor
xchg
cmc
pop
gs
sub
arpl
stos
lock
xchg
push
push
sbb
rorl
test
shr
rorl
cmpsb
lea
addr16
out
pop
sub
push
rcrb
and
outsl
scas
push
insl
lock
xor
shl
mov
imul
iret
cmp
adc
insb
test
fdivrs
cmpsb
xchg
mov
and
jle
cmp
stos
cmp
stos
enter
clc
and
mov
cmc
mulb
xor
cmp
incl
out
xor
sbbl
lods
cmpsl
insb
push
mov
jge
add
mov
pop
push
scas
xchg
jmp
jnp
fwait
nop
xor
mov
pop
xlat
int3
sbb
xor
icebp
adc
and
mov
fldt
xor
in
imul
int
mov
xchg
cli
fwait
dec
sahf
ss
addb
call
int3
xchg
arpl
les
jge
sti
aaa
push
sbb
aam
inc
jb
dec
and
std
decb
pushf
push
mov
das
mov
mov
inc
mov
xchg
mov
fmuls
pop
movl
aas
push
scas
ret
cmpsb
movsb
shrb
sub
popa
mov
dec
shrl
out
push
test
sbb
aas
fs
out
es
cmp
jp
and
pop
or
pushf
dec
into
xchg
dec
outsl
fcoml
inc
mov
jne
ja
std
push
mov
daa
push
fwait
pop
adc
sbb
add
int3
jg
push
shlb
ficompl
and
fs
jl
mov
push
dec
xchg
xchg
loope
pop
xchg
popf
loope
cmpsl
sbb
aam
pop
and
repnz
pop
dec
aaa
stos
aad
push
repz
aaa
xchg
or
xchg
mov
lods
imul
sub
dec
add
into
mov
jnp
mov
push
test
cmc
fmul
pop
das
int3
andb
pop
das
mov
out
mov
or
std
popf
cmp
jge
stc
enter
test
inc
mov
jp
into
push
out
sub
push
xchg
xor
or
jecxz
sbb
inc
mov
in
xorl
cld
and
adc
std
mov
push
call
adc
add
outsl
push
and
insb
adc
cltd
jmp
dec
cmpsl
lods
loopne
mov
data16
cmp
outsb
ret
sub
pop
cs
movsb
icebp
jo
arpl
lret
out
subl
fwait
push
mov
pop
out
jge
cld
cmp
stc
pop
int3
jg
cld
ja
gs
pop
dec
or
insl
clc
jl
inc
bound
add
dec
test
jmp
mov
jns
lds
cld
xchg
cmc
cmpb
inc
out
cmpsl
add
mov
sti
imul
ljmp
mov
scas
add
jp
movsb
push
mov
out
inc
stos
mov
mov
jge
xchg
rcrl
sti
cltd
and
bound
outsl
sbb
xor
pop
clc
lods
inc
gs
mov
lds
jg
sub
int
test
in
out
int
mov
pop
scas
mov
imul
lcall
sub
sbb
sarb
jmp
std
dec
jle
mov
mov
inc
leave
fisubs
inc
mov
jmp
nop
pusha
call
jmp
push
ret
call
jmp
mov
add
sub
cmpl
mov
jne
lea
push
call
mov
mov
lea
push
push
call
stos
mov
scas
jne
cmp
jne
lea
jmp
push
imul
insb
insb
outsl
arpl
push
imul
jb
add
jb
jne
insb
push
jb
je
arpl
mov
or
je
mov
xchg
mov
lea
cmpl
je
push
push
push
push
call
mov
mov
add
je
push
push
push
push
call
mov
push
mov
add
pushl
pushl
push
push
call
mov
cmp
jne
incb
push
push
push
push
mov
sub
mov
xor
or
je
js
lods
cmp
je
jmp
cmp
je
inc
dec
jmp
mov
jmp
cmpb
jne
and
rol
sub
mov
add
add
sub
jmp
pop
pop
pop
pop
jmp
mov
mov
add
mov
sar
rep
mov
and
rep
pop
push
push
pushl
call
add
cmpl
jne
push
push
pushl
call
mov
or
je
mov
xchg
mov
mov
sub
je
mov
shr
xor
mov
add
cmpl
je
mov
sub
shr
mov
add
add
mov
shr
cmp
je
cmp
je
cmp
je
jmp
mov
and
add
jmp
mov
and
add
jmp
mov
and
add
jmp
orw
add
loop
jmp
mov
mov
or
je
add
lods
or
je
add
mov
lods
stos
jmp
mov
mov
add
mov
test
je
add
mov
push
call
test
jne
push
call
mov
movl
mov
mov
test
jne
mov
add
add
mov
mov
add
add
test
je
test
jne
add
inc
inc
push
and
push
pushl
call
test
pop
jne
test
jne
push
mov
add
push
push
lea
push
push
jmp
and
mov
cmp
jne
push
mov
dec
shl
mov
mov
mov
add
mov
add
pop
jmp
push
mov
add
push
push
lea
push
push
jmp
mov
addl
jmp
mov
mov
mov
add
mov
jmp
mov
mov
add
push
push
push
push
push
pushl
push
call
pushl
push
movzwl
movzwl
lea
lea
lods
test
je
add
cmp
loopne
jne
inc
push
push
push
testb
je
shll
testb
je
shll
testb
je
shll
pushl
add
push
call
pop
lods
lods
mov
loop
call
pop
mov
push
add
pop
or
mov
popa
jne
mov
ret
push
ret
mov
lea
push
push
call
mov
lea
push
call
mov
lea
push
push
call
mov
mov
lea
push
push
call
call
add
pop
push
lea
push
push
push
call
push
call
imul
gs
xor
cs
insb
add
imul
jae
jne
gs
xor
fs
insb
add
jae
popa
addr16
outsl
js
add
jo
imul
dec
inc
inc
inc
push
and
push
dec
push
add
and
outsl
arpl
jne
and
je
jns
jo
imul
arpl
insb
and
je
bound
insb
outsl
arpl
gs
and
and
popa
insl
imul
and
jb
jb
and
and
imul
and
jne
and
je
bound
insb
outsl
arpl
gs
and
and
popa
insl
imul
and
jb
jb
and
mov
pushf
lods
or
je
xor
mov
shr
jae
xor
dec
jne
jmp
xchg
pop
ret
add
inc
add
adc
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
nop
push
add
jo
add
inc
add
rolb
add
add
add
pusha
add
loopne
inc
add
add
add
pusha
add
loopne
pusha
add
repnz
incl
add
mov
sub
lea
push
call
mov
mov
push
push
lea
call
test
jne
or
add
ret
mov
lea
push
push
lea
call
test
jne
or
add
ret
mov
add
ret
add
add
add
push
pop
or
or
adc
sbb
sub
cmp
pusha
jo
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
or
or
or
or
or
or
movups
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
push
mov
push
mov
push
cmp
jb
push
mov
mov
mov
inc
mov
mov
mov
mov
shl
and
or
mov
add
mov
mov
mov
cmp
jae
pop
mov
mov
mov
sub
shr
mov
sub
and
shr
add
pop
mov
pop
pop
ret
mov
mov
mov
mov
lea
mov
add
ret
sub
push
push
push
mov
push
mov
mov
xor
lea
xor
rep
mov
cmp
mov
jbe
xor
mov
mov
lea
inc
inc
cmp
mov
jb
mov
mov
mov
mov
mov
xor
mov
movl
mov
lea
mov
mov
shl
add
cmp
mov
ja
mov
mov
mov
add
cmp
mov
mov
jl
mov
mov
mov
mov
shr
mov
and
sub
add
mov
mov
mov
mov
mov
mov
shl
mov
shr
rep
mov
mov
and
rep
mov
mov
mov
add
inc
dec
add
cmp
mov
mov
mov
jge
cmp
je
pop
pop
pop
xor
pop
add
ret
mov
xor
test
jbe
mov
mov
test
je
mov
and
mov
mov
xor
mov
mov
lea
inc
mov
mov
inc
cmp
jb
pop
pop
pop
mov
pop
add
ret
push
push
push
mov
push
mov
cmpl
jb
mov
mov
inc
mov
mov
mov
mov
shl
and
or
mov
add
mov
mov
mov
cmp
jae
mov
mov
mov
sub
shr
mov
and
cmp
jae
mov
mov
shr
xor
mov
mov
jmp
cmp
jae
cmp
sbb
add
jmp
cmp
jae
mov
jmp
cmp
jae
mov
jmp
cmp
jae
mov
jmp
cmp
sbb
add
mov
mov
add
mov
mov
mov
sub
sub
pop
shr
mov
add
mov
pop
pop
mov
pop
ret
push
push
push
mov
xor
xor
lea
mov
push
call
mov
pop
mov
add
shl
add
inc
cmp
jb
mov
lea
push
push
call
push
push
lea
call
push
push
lea
call
push
push
lea
call
mov
pop
pop
add
pop
ret
mov
mov
mov
push
mov
lea
mov
movl
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
rep
mov
stos
call
pop
ret
sub
push
mov
push
push
lea
push
push
mov
call
test
jne
mov
mov
rep
stos
xor
push
mov
call
mov
inc
cmp
jb
lea
lea
push
mov
call
test
jne
pop
pop
pop
pop
add
ret
xor
mov
call
cmp
jae
mov
mov
add
and
mov
inc
jmp
jne
push
mov
call
add
test
jle
cmp
jge
mov
dec
mov
inc
test
jg
jmp
cmp
jne
push
mov
call
add
jmp
push
mov
call
add
test
jle
cmp
jge
movb
inc
dec
test
jg
cmp
jl
lea
lea
push
call
test
jne
pop
pop
pop
pop
add
ret
lea
lea
push
call
test
jne
pop
pop
pop
pop
add
ret
lea
push
lea
call
test
jne
pop
pop
pop
pop
add
ret
movb
xor
cmpb
jne
inc
cmp
jb
jmp
movb
mov
lea
mov
rep
pop
pop
pop
mov
pop
add
ret
call
nop
pop
sub
ret
sub
mov
push
push
push
movl
mov
push
xor
test
mov
mov
jbe
lea
call
cmp
jae
mov
mov
mov
inc
inc
mov
mov
jmp
cmp
jae
add
mov
and
shr
lea
cmp
mov
jne
lea
call
mov
xor
push
call
mov
pop
cmp
jb
mov
mov
inc
mov
mov
mov
mov
shl
and
or
mov
add
mov
mov
mov
cmp
jae
mov
mov
mov
sub
add
shr
mov
mov
sub
and
shr
xor
push
call
mov
pop
mov
add
add
mov
mov
mov
xor
push
call
mov
pop
test
mov
je
cmp
jb
mov
lea
cmp
jb
mov
mov
shl
mov
inc
mov
mov
mov
mov
and
add
or
mov
cmp
mov
mov
jae
mov
mov
mov
sub
add
shr
mov
mov
sub
and
shr
lea
call
add
lea
jmp
cmpl
jb
mov
mov
shl
mov
inc
mov
mov
mov
mov
and
add
or
mov
cmp
mov
mov
jae
mov
mov
mov
sub
add
shr
mov
mov
sub
and
shr
add
cmp
jae
mov
test
je
mov
mov
jmp
mov
mov
lea
mov
mov
mov
mov
mov
inc
lea
cmp
mov
jae
mov
sub
inc
mov
mov
mov
cmp
jb
mov
add
mov
mov
jmp
mov
call
test
je
cmp
jb
mov
mov
pop
pop
pop
mov
pop
add
ret
pop
pop
pop
xor
pop
add
ret
or
add
aad
add
out
add
stc
jg
add
add
add
jb
gs
xor
cs
insb
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
jg
add
add
add
add
add
add
add
xchg
addb
addb
add
gs
xor
fs
insb
add
jbe
jb
cs
insb
add
jbe
jo
xor
cs
insb
add
add
add
add
add
add
add
add
jo
imul
add
je
imul
push
gs
insb
outsl
jae
dec
gs
