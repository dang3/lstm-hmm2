out
call
in
sub
andb
push
push
push
push
xor
pop
lea
fcomi
stos
push
ljmp
pop
xor
jmp
mov
pop
ja
test
add
loop
mov
dec
gs
in
in
dec
mov
xor
cs
jbe
dec
mov
insb
jmp
mov
push
call
pop
mov
jg
mov
push
push
push
push
push
mov
push
push
call
mov
and
adc
clc
lea
push
add
in
and
call
jbe
adc
adc
pop
movsl
loope
fists
pop
pop
pop
leave
ret
add
andb
sub
add
jae
popa
xchg
lret
insl
mov
idiv
imul
sti
insb
das
fldcw
cld
insb
dec
sub
lock
fcoml
mov
inc
frstor
je
dec
xlat
insb
fwait
in
outsl
loope
jne
jecxz
sbb
inc
dec
out
psubsb
dec
bound
jmp
paddsb
inc
pop
out
js
in
int
out
inc
and
mov
mov
imul
out
mov
fwait
sbb
jnp
adc
add
mov
push
push
adc
repz
xchg
call
add
add
int3
pop
imul
jb
lea
jns
inc
outsb
rorl
cld
nop
or
in
fsubrs
or
cmp
je
mov
push
pop
mov
pop
je
adc
ret
pop
neg
lret
dec
add
cmp
nop
outsl
inc
fwait
std
push
pop
jmp
push
or
cltd
cli
mov
sti
mov
notb
push
xor
lds
and
push
fadd
add
es
or
push
inc
jcxz
data16
push
mov
and
mov
daa
fstpt
movups
or
add
cmp
fldlg2
pop
pop
inc
push
inc
imul
mov
mov
mov
lea
adc
add
push
jns
adc
xor
pop
sbb
push
mov
push
jl
or
jae
test
push
lock
add
cld
insb
cwtl
pop
sbb
inc
adc
ret
hlt
movsb
push
mov
inc
shll
dec
jae
or
adc
push
dec
clc
cmp
sbb
push
push
enter
add
push
mov
in
sbb
sbb
scas
jl
xchg
out
inc
ret
jle
sub
xchg
pop
inc
dec
rclb
test
ss
xchg
mov
in
pop
imul
ret
mov
mov
pop
jo
inc
adcl
fadds
inc
push
mov
daa
je
pusha
inc
jae
jmp
clc
push
xlat
inc
xor
and
pusha
loope
or
jno
div
cltd
int
inc
cmp
jge
add
pop
dec
mov
and
pop
jecxz
fdivl
sub
test
adc
adcl
pop
loop
insb
inc
cmp
cld
or
insb
pop
ret
or
frstor
mov
leave
cmp
jmp
clc
mov
sbb
decl
mull
or
mov
mov
incl
push
adc
push
mov
ror
mov
inc
inc
dec
dec
test
jne
sub
jae
pop
jmp
mov
fdivs
lods
nop
sarb
jmp
add
add
in
xor
adc
jge
jne
fwait
xchg
push
mov
or
ud2
inc
sbb
add
cld
inc
data16
clc
into
lea
idiv
loope
mov
xlat
cmpl
jne
and
fs
dec
sub
push
push
adc
xlat
mov
or
adc
add
cmp
adc
jb
nopl
into
cltd
inc
mov
lods
xchg
shlb
lock
jbe
lea
stc
cmc
jle
movsl
orps
xchg
or
pushf
mov
in
fxch
jl
cs
mov
pushf
dec
test
and
imul
por
mov
xor
mov
or
in
add
cmp
mov
inc
test
push
cmp
xchg
inc
push
adc
mov
or
push
push
xor
or
lock
inc
inc
pop
int3
icebp
outsl
sub
andb
xor
cmp
mov
push
inc
push
jne
mov
mov
mov
inc
inc
test
jne
fists
rorb
js
dec
cmp
fucomi
dec
xor
or
jne
jle
shl
ficompl
shl
shlb
push
lods
out
ret
push
out
mov
cmp
lods
fidivrl
mov
mov
push
std
imul
xor
jb
pushl
add
xor
xor
pop
add
add
sub
popw
or
pop
mov
push
jne
insb
inc
or
jmp
cmp
stos
jae
test
mov
test
test
push
data16
es
push
push
push
dec
js
push
dec
sbb
je
push
mov
dec
adc
pop
push
or
enter
lahf
push
or
test
jecxz
std
js
jb
loop
push
add
dec
push
mov
repz
test
dec
test
cld
cld
cmp
inc
mov
sar
pop
int3
inc
into
fsubl
adc
rcll
cmp
fldenv
pop
mov
adc
iret
inc
rcl
push
cmp
cmp
aad
pop
mov
js
jp
js
jb
stc
sub
and
nop
js
mov
push
pop
out
nop
or
in
add
adc
ret
mov
push
or
js
test
in
les
mov
frstor
mov
aam
push
je
and
pop
sti
inc
fldcw
pop
xor
bswap
xchg
je
or
sbb
ret
or
lea
xor
jmp
push
push
mov
mov
adc
pop
imul
fcomp
xchg
or
lock
xchg
ljmp
xor
sbb
imul
push
imul
addr16
push
push
xor
jl
push
jl
sti
cmp
pop
testb
xor
popa
or
push
jp
xchg
dec
int
push
xor
adc
cmpsl
ds
repnz
test
dec
inc
lods
js
outsl
jb
dec
shll
jmp
lock
add
lret
or
jecxz
cmc
pop
test
or
cltd
movsl
inc
icebp
inc
mov
popa
mov
xor
sub
mov
cmc
xor
les
and
dec
mov
je
adc
sbb
push
jp
ret
scas
sbb
fsubl
cmp
add
insb
shld
adc
test
inc
add
mov
mov
add
fs
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
and
and
or
add
xor
sub
inc
lcall
adcb
scas
rcr
add
xor
xor
adc
shll
xchg
cmpsb
mov
shll
xor
loop
fwait
cmpsb
imul
mov
dec
shll
jb
jle
repnz
iret
arpl
xor
outsl
arpl
je
insw
out
addr16
aaa
xor
cmp
pop
fs
je
pop
gs
gs
outsb
je
cs
add
inc
bound
push
jb
jbe
sbb
daa
jae
jae
ja
and
xor
pop
push
dec
adc
pushw
add
ljmp
popa
outsl
imul
fs
adc
adc
punpckhbw
jp
gs
pusha
ss
js
pop
jo
mov
sbb
insl
fs
cmpsl
cmp
aaa
mov
xor
scas
add
jmp
nop
sub
adc
xchg
sub
lock
pop
inc
test
adc
lods
dec
dec
push
js
insb
inc
stos
add
cld
push
push
dec
inc
dec
jo
and
add
adc
pop
and
mov
or
inc
adc
add
add
mov
int3
pop
nop
inc
add
mov
inc
lock
pop
mov
jg
js
int
mov
imul
jmp
arpl
outsb
outsl
je
bound
jb
outsb
and
inc
dec
push
and
fs
fmuls
and
push
sbb
cmpsb
adc
cmc
add
add
mov
div
adc
lcall
in
mov
jae
test
sbb
xchg
cmc
mov
mov
popf
cmc
push
pop
xchg
cmc
adc
imul
mov
inc
dec
add
dec
adc
popa
imul
loopne
and
add
or
js
add
and
add
fxch
fiadds
pop
or
and
mov
add
or
and
mov
pop
fcomps
mov
mov
and
int3
push
nop
mov
add
sti
add
or
bound
out
jbe
nop
and
fadds
or
subl
xchg
popf
test
inc
push
push
pop
xor
fnsave
daa
dec
arpl
xor
fnstsw
daa
pop
dec
pusha
fnstenv
jb
insb
outsl
arpl
sti
mov
or
add
or
dec
mov
cwtl
and
add
push
lods
xor
roll
adc
jb
and
add
mov
dec
test
sbb
roll
jle
lcall
shl
cld
or
sbb
inc
push
insb
jle
imul
insb
fwait
scas
dec
aaa
cli
adc
add
ss
shll
jp
xor
shll
mov
aam
sarl
or
fildl
ss
shll
pushf
test
dec
shll
push
sbb
fs
ret
out
popf
add
inc
and
clc
xor
and
add
sbb
pop
ss
rcrl
mov
and
cmpsb
jmp
cmpsb
out
add
push
add
lcall
ds
push
imul
outsb
jns
xchg
and
dec
xor
cmpsb
imul
outsl
cmovb
aam
cmpsl
jmp
rcl
out
or
pop
or
add
jge
lret
add
dec
sarl
jecxz
rcr
push
dec
sbb
je
aad
std
fs
orl
sbb
push
gs
fs
mov
bswap
sub
dec
jo
push
jb
inc
adc
mov
dec
dec
dec
dec
inc
push
and
xor
arpl
sar
popa
bound
dec
inc
push
push
inc
push
inc
pop
dec
add
std
sbb
outsl
data16
push
imul
pop
inc
jne
jb
mov
pop
jae
outsl
outsb
sbb
fiaddl
int
inc
jbe
add
xchg
pop
or
add
rep
add
aaa
sbb
pusha
add
xor
add
and
jnp
push
pop
pop
add
add
rolb
and
filds
ret
sbb
and
lret
add
or
push
and
add
mov
xchg
int
add
xor
pop
and
xchg
mov
add
pop
rcr
adc
in
data16
and
add
lret
mov
dec
es
xchg
lea
pop
xchg
mov
xchg
pop
inc
fildl
or
add
and
and
mov
inc
stos
stos
pop
enter
das
xor
xor
and
pop
xor
ud2
push
fstpl
rolb
imul
ja
jae
push
mov
arpl
je
jne
jb
gs
sbb
cmpsb
jmp
js
push
sub
add
fdivr
jg
push
inc
jb
push
and
ja
or
push
mov
jae
pop
and
addr16
xor
push
mov
daa
sub
mov
shld
data16
decl
lods
cli
push
ror
setl
mov
push
cmc
cmc
add
pusha
movb
jmp
call
arpl
push
add
mov
inc
nop
jb,pn
jb
arpl
mov
fs
sub
inc
cmp
fistpll
push
mov
dec
dec
mov
jge
mov
gs
rcrl
add
insb
ja
jns
jae
jo
ss
je
inc
push
imul
sti
pop
add
imul
jl
or
js
add
add
adc
jae
and
pop
in
xor
lahf
pop
cs
push
add
imulb
fwait
sbbl
and
sbb
ja
jb
inc
popa
jb
pop
mov
insl
test
cmp
jecxz
lock
dec
mov
or
xchg
inc
mov
retw
test
incb
adc
lret
fnsetpm(287
sub
add
leave
jg
fnstcw
sub
call
or
aas
enter
popf
and
or
jmp
push
in
aaa
push
fildl
sahf
push
or
inc
push
and
shrl
xchg
mov
xor
std
dec
rorl
out
test
mov
pusha
fdivr
sub
imul
jmp
xchg
sbb
je
dec
gs
xor
fcompl
in
or
inc
cmpsb
outsl
jne
push
arpl
push
arpl
inc
lret
outsb
jecxz
das
sar
das
adc
inc
fs
dec
jne
xor
sub
fistpl
pop
push
jae
pop
jne
inc
outsl
insl
insl
lds
inc
and
mov
xor
js
pop
sub
add
cmp
sbb
ss
push
and
pop
push
and
inc
das
dec
dec
dec
inc
fwait
or
arpl
psrlw
cs
and
and
ret
fdiv
xchg
cld
add
outsl
or
psubb
ja
and
in
sbb
pushf
fstpl
push
add
cmpsl
fisttps
lock
cmp
mov
test
pop
sub
push
push
push
mov
andl
lea
mov
call
inc
mov
push
mov
push
mov
rorl
jg
insb
fstl
sbb
in
push
push
call
dec
fimuls
cmp
add
mov
sub
sub
mov
movb
ja
outsb
out
std
sub
sub
inc
add
sti
push
push
add
xor
les
imul
into
std
pop
jmp
dec
jmp
push
pop
ret
mov
rclb
or
mov
test
cwtl
insl
jae
mov
mov
jne
or
ror
cld
or
outsl
adc
mov
out
fildl
adc
push
call
xor
sbb
push
psubusb
dec
divl
mov
cs
pop
fistl
clc
add
mov
andb
inc
or
jmp
push
aas
fadds
cmp
pop
jl
push
aaa
fs
add
outsb
pop
mov
nop
inc
ds
add
xchg
and
add
dec
mov
inc
adc
pop
repnz
and
pslld
stc
add
mov
adc
stc
and
nop
add
adc
add
adc
add
adc
add
xchg
jns
jae
mov
loope
xor
jl
sub
inc
xor
in
xor
add
repnz
inc
lret
jne
add
in
test
add
add
cwtl
fisttpll
push
mov
add
jle
push
addb
ret
adc
and
push
mov
fcmovne
pop
xorl
cs
rcrl
aaa
movl
mov
lods
test
jne
ret
hlt
cmp
jne
dec
cmp
lret
subb
cmp
mov
and
nop
and
add
ret
inc
cmp
add
sbb
and
mov
mov
push
loope
in
enter
or
jnp
notl
add
loope
fdivrp
in
jg
xlat
mov
cmp
jg
add
jge
push
push
push
sbb
mov
adc
push
push
push
and
pop
sti
mov
mov
xor
xorl
push
or
cwtl
sub
sub
dec
mov
ljmp
lock
add
repnz
movsl
mov
movsb
mov
jnp
push
jo
mov
sti
rep
jb
insl
lea
int
dec
inc
rolb
jp
sahf
or
xchg
mov
sbb
mov
jg
jae
dec
and
xor
subb
pop
not
jle
push
mov
add
not
xor
xor
inc
cmp
or
in
pop
outsl
fdivrs
jecxz
push
push
popa
jge
clc
clc
pop
mov
adc
xchg
inc
inc
lock
mov
adc
adc
xchg
adc
mov
or
mov
pop
out
dec
xchg
mov
mov
dec
inc
cmp
jb
pop
pop
pop
test
add
push
or
shlb
adc
seto
jo
and
int
add
enter
mov
and
inc
add
nop
repnz
pop
rolb
nop
and
and
and
xor
inc
jle
nop
and
push
fiaddl
andl
or
mov
cld
or
and
add
pop
fstl
outsb
and
sbb
aaa
xor
js
xchg
or
sbb
mov
les
mov
fcmovne
jne
pop
jmp
adc
mov
push
out
rcll
mov
in
cld
pop
nop
iret
or
std
lock
mov
xchg
std
movsb
lock
xor
cmp
xchg
ds
pop
mov
sub
mov
rcr
jnp
inc
push
push
nop
push
push
add
mov
push
and
popf
bound
add
rdmsr
adc
jns
and
mov
hlt
movsl
pop
lcall
arpl
pop
clc
outsl
and
lcall
sti
fs
insb
mov
cmp
or
hlt
dec
push
sarl
jl,pn
shlb
mov
adc
ja
cli
arpl
inc
in
sti
push
pop
mov
fldl
rorb
arpl
iret
cmp
jge
add
pop
js
jle
push
cmp
jle
pop
jmp
sbb
jno
cmp
ja
push
call
cmp
je
decb
insl
addl
hlt
mov
jg
fbld
push
in
jne
cmpl
daa
incl
mov
cmp
jne
xor
ljmp
addl
andl
inc
andl
in
rcrl
jl
inc
cmp
mov
mov
idivb
mov
and
es
lcall
jo
sbb
xor
fildl
ja
jne
data16
or
or
push
or
mov
and
jae
or
add
cmp
jbe
shlb
add
pop
push
aaa
mov
push
je
jns
push
pop
stos
add
and
sub
sbb
testl
incb
xor
sbb
popf
or
call
jbe
std
negl
cltd
pop
inc
idiv
adc
jg
add
fistps
inc
inc
jmp
andb
mov
jmp
xor
mov
inc
pop
nop
and
test
add
adc
xchg
add
nop
and
les
repnz
enter
sub
test
out
call
cld
xchg
aaa
mov
push
nop
and
pop
xchg
stc
xor
lods
and
pop
jo
test
pop
ja
xor
mov
lea
cmp
es
movb
inc
cmp
jb
call
cmp
or
andl
push
test
or
inc
sub
mulb
or
imul
adc
and
fadd
jbe
push
add
aaa
inc
std
jbe
cmp
jecxz
push
add
cmp
dec
mov
aas
cmp
jae
incl
lret
shr
add
ss
add
inc
push
mov
dec
or
ret
push
clc
fbld
dec
push
pop
jne
shll
sbb
rorb
jo
mov
add
loop
or
adc
or
aaa
fildl
jne
cmp
cs
dec
xchg
pop
decl
xor
pop
pop
inc
add
push
dec
xchg
pop
jbe
or
cmp
outsl
in
aaa
jg
sti
not
and
push
jl
and
or
add
fildll
pop
js
xlat
sbb
ljmp
out
or
mov
add
repnz
not
and
call
jg
testl
mov
test
or
mov
ja
js
add
push
aam
or
xchg
pushl
fisubs
fimull
add
lea
shr
fistps
xadd
adc
pop
inc
sub
mov
and
not
outsl
scas
mov
add
repz
pop
neg
fidivrl
shr
or
add
dec
daa
pop
in
pushl
adc
xchg
sbb
aad
mov
push
lods
loop
mov
push
push
push
call
fcomip
shlb
push
imul
lods
in
push
hlt
adc
movb
sbb
xchg
jecxz
sbbb
xlat
loopne
fiaddl
pop
popa
xlat
or
mov
jo
cld
sbb
inc
xor
fisubl
ficoml
xor
out
sbbl
mov
fcomps
push
add
add
das
sub
stos
out
xor
add
jbe
jns
sbb
les
repz
xchg
mov
mov
imul
repz
int3
xchg
not
fisubrs
pusha
adc
mov
or
pop
scas
testl
jl
out
cmpsb
pop
les
subb
xchg
pop
mov
add
idiv
loop
movups
mov
push
fcom
int
in
add
xlat
pop
mov
adc
push
pop
mov
fwait
outsl
xor
les
adc
push
jns
xor
or
or
mov
jno
std
stos
lods
es
add
cld
fisubrs
fidivrs
pop
aaa
das
xor
mov
cmpsb
pop
mov
xor
dec
lret
and
xchg
mov
scas
and
or
popa
adc
add
or
mov
shl
ljmp
cmp
and
aad
aam
pop
bound
cs
sbb
shl
add
and
jns
loope
jg
jge
dec
cmp
inc
rclb
sbb
outsb
or
fadds
hlt
push
and
repnz
fdiv
push
pop
pop
es
adc
repnz
shll
and
push
ss
lret
and
call
mov
mov
adc
divb
shl
xlat
lods
mov
sbb
adc
add
sbb
mov
and
fisttpl
out
fcoms
push
cltd
jae
mov
cmp
mov
fxch
repnz
fstpt
out
adc
pop
mov
fisubrl
mov
mov
mov
fwait
aaa
out
loope
out
sbb
loopne
ret
fistl
add
pop
aaa
or
mov
xchg
mov
inc
fimuls
fcomps
aad
adc
mov
rcl
cmp
gs
out
aaa
or
mov
adc
inc
loop
shr
fwait
insl
adc
fdivs
xor
imul
into
fwait
push
aam
mov
xor
push
and
sub
aad
flds
outsl
adc
dec
int
inc
xchg
dec
fisttps
sbb
lea
or
bound
shrb
jbe
int
pusha
sbb
test
xor
mov
call
divb
adc
push
fadd
jbe
lret
repz
insl
adc
inc
sti
xor
mov
repz
repnz
or
in
mov
push
fcomip
xor
mov
xchg
nopl
xchg
mov
push
adc
cltd
jb
das
lods
fdiv
fmuls
pusha
dec
insl
pop
mov
jno
cli
xor
rcrb
mov
or
out
or
mov
in
repnz
jle
sub
testl
int
xor
imul
out
js
pusha
mov
mov
fidivl
cmc
shrl
xor
aam
xchg
jae
adc
rol
test
xor
in
add
mov
or
xchg
lods
mov
push
aas
sbb
cmp
rcl
fstps
js
jbe
les
in
in
loop
jle
ja
idiv
fstpt
out
push
in
clc
jl
pop
je
xlat
insb
cmp
dec
pushl
or
insb
in
jnp
aam
gs
lods
les
subl
stos
popa
fstpt
mov
stos
rcrb
sbb
pop
fucomi
jp
or
in
sbb
jl
inc
xchg
in
test
or
inc
push
or
es
jle
mov
mov
xchg
stos
adc
lock
in
inc
push
hlt
cmp
fistl
mov
xor
in
cmp
aas
cmp
pop
pop
gs
sbb
rcrl
xchg
in
xchg
int3
or
push
or
ja
and
rorb
hlt
out
incl
cltd
in
unpckhps
sbb
out
in
rcrl
test
sub
out
xor
call
mov
jecxz
jp
sbb
das
mov
dec
fistpl
loopne
je
mov
or
ret
or
aas
xor
add
mov
ja
mov
cmpb
push
test
sbb
ja
mov
xor
out
xchg
sbb
fiaddl
jb
cmp
mov
pslld
ret
mov
insb
xor
pop
rclb
xor
pop
jecxz
dec
mov
pop
jge
xlat
pop
add
add
movsb
mov
ficoml
or
or
pop
std
inc
adcl
mov
mov
mov
arpl
xor
call
sarl
sub
push
push
push
jb
adc
inc
or
xor
push
insb
js
inc
outsb
dec
xlat
adc
sbb
pop
fisubrl
jle
fistl
inc
pop
inc
addr16
iret
sti
push
clc
inc
jb
adc
or
mov
pop
sbb
cmp
movsb
mov
pop
jp
scas
add
pop
fidivs
cmc
push
cmp
mov
jmp
cmp
je
in
jg
jne
adc
mov
cmp
je
movsbl
add
idiv
fldt
sti
jne
inc
cmp
jne
cmp
push
add
pop
sub
add
adcl
cmp
pop
outsb
outsl
aam
inc
fildl
or
jg
shlb
jge
outsl
adc
inc
cmp
shll
add
xor
mov
je
roll
insl
mov
mov
addb
xchg
jmp
cmpsl
or
aas
sub
rcr
clc
movsb
fmuls
jl
mov
adc
jmp
and
repz
pop
stos
stos
orps
fistpll
sub
jne
push
lea
adc
add
dec
mov
in
ret
dec
mov
push
test
mov
aad
call
faddl
pop
pop
pop
fcoml
push
cld
call
imul
jbe
lea
pushl
ds
mov
dec
cmp
out
or
testb
insb
lea
or
lea
clc
pop
es
loope
mov
mov
imul
loopne
pop
pushf
jnp
xchg
int3
rolb
aam
call
lods
or
xchg
push
push
addl
in
add
imul
jbe
mov
add
repz
in
gs
das
lock
jo
hlt
loopne
addr16
gs
cmp
lods
pushf
mov
ficomps
or
inc
add
jnp
js
call
sbb
xlat
cmovl
insb
mov
cmpsb
fcmovnb
mov
lods
outsb
les
xor
mov
or
repnz
push
pop
sbb
or
push
insl
jecxz
mov
push
mov
in
push
lret
lret
in
imul
in
dec
out
push
out
push
lock
das
xchg
dec
icebp
inc
repnz
mov
mov
outsl
rorb
scas
xor
pushf
push
push
popa
and
pop
es
add
or
aam
dec
mov
xchg
xor
push
sbb
cmp
and
mov
imul
and
and
cltd
loopne
inc
je
sbb
mov
std
dec
xor
or
sub
add
frstor
enter
cmp
xchg
setae
ret
test
repnz
adc
popf
lock
das
pop
and
pop
push
xor
cmp
icebp
add
bound
push
xchg
sub
push
neg
push
movhps
mov
or
sbb
pushf
lods
in
test
fisubs
mov
les
notb
adc
xor
pop
sbbl
test
or
inc
lea
xchg
adc
imul
xchg
xchg
and
sbb
inc
out
xchg
push
out
dec
clc
add
jle
add
outsb
sub
add
push
shlb
mov
fldt
pop
call
cmp
jmp
inc
mov
sub
mov
jb
das
aad
xlat
pop
add
enter
add
pop
rcrl
repnz
idivb
dec
int
or
push
andw
mov
insb
popf
xchg
subl
sub
xchg
dec
cld
pop
jb
bound
popf
push
push
pop
adc
repz
js
xrelease
subb
jo
add
dec
dec
pop
cmp
pop
lret
or
mov
add
cmp
das
faddl
mov
daa
xor
xchg
scas
test
jl
push
nop
lods
pop
jo
ljmp
mov
sarb
jbe
cmp
jns
xchg
movl
mov
sub
cli
inc
mov
pop
pop
xchg
inc
add
sahf
sbb
mov
sbb
adc
pusha
ss
push
orb
sub
loope
cmp
or
lea
cmp
clc
add
push
call
testb
adc
cmp
adc
pop
lret
clc
inc
push
pop
icebp
call
lcall
mov
xor
adc
xor
flds
push
orb
call
inc
inc
cli
shlb
mov
jge
inc
call
outsb
push
push
push
jb
xchg
or
mov
js
push
clc
sbb
outsb
testb
mov
cmp
mov
push
jns
je
xchg
seto
out
cltd
int
call
stos
or
jo
les
jbe
pop
stos
int3
jb
loopne
pop
ret
or
mov
adc
fcomp
sub
jae
push
or
enter
loop
and
data16
or
fsubrl
cmp
fdivl
add
mov
and
ret
inc
add
jae
inc
jmp
enter
mov
ficompl
fwait
test
xchg
in
mov
rcrb
scas
scas
mov
add
jl
xchg
cmp
enter
push
nop
pop
pop
int3
loopne
aad
fldt
test
adc
mov
or
mov
in
cwtl
and
ss
sbb
or
in
xchg
or
add
mov
into
push
xchg
pusha
cmp
mov
shrb
jnp
cmp
dec
mov
cld
std
sub
mov
adc
out
sti
sub
mov
in
je
add
lods
std
or
cmc
push
mov
pushf
xor
mov
jl
cmp
fstpt
sbb
mov
or
in
mov
push
sar
out
add
cmp
mov
jb
add
mov
jne
or
imul
push
jo
mov
jo
push
push
cmp
int3
data16
int3
jae
and
std
mov
aaa
pop
add
pop
adc
pop
pop
call
cmpsl
mov
add
mov
mov
mov
sti
add
pop
jno
jmp
pusha
lods
cs
cmpsl
idiv
add
inc
ficoml
pop
dec
mov
xchg
xor
push
xor
mov
aaa
and
push
mov
test
push
or
lahf
push
push
out
push
push
pusha
stos
mov
in
or
decl
leave
push
sbb
jg
leave
lods
lods
push
pop
outsb
or
push
mov
cs
lret
in
cmp
mov
mov
jbe
imul
add
fsts
shrb
lret
insl
sarl
shlb
insb
aam
aad
mov
rcl
xlat
pop
fsubrs
and
fisubrl
mov
gs
cmovge
xlat
loop
jecxz
pop
in
push
out
pop
dec
out
call
jle
shll
imul
sub
fldt
ret
les
lds
mov
leave
lret
mov
sbb
cmp
int3
hlt
xchg
push
xchg
xchg
insb
fwait
cmpsb
jmp
xchg
push
cwtl
cltd
lcall
xlat
pushf
adc
sub
in
mov
mov
insb
cmpsb
xor
test
push
test
dec
shl
div
clc
ds
hlt
orl
inc
cli
jns
lea
dec
xor
shl
sbb
imul
sbb
mov
fcoms
xor
inc
add
cmp
lret
out
adc
jmp
out
fwait
gs
idivb
in
repz
outsb
sub
sbb
lcall
jmp
dec
rcrb
pop
cs
xchg
xchg
fs
mull
orl
jg
shrb
clc
sbbl
xor
jge
sti
inc
push
ljmp
mov
cmp
loopne
into
imul
xchg
add
pop
cli
inc
xchg
in
lret
sbb
movsb
fwait
jne
daa
push
lds
inc
sub
mov
fldt
sbb
les
sbb
sbb
test
jmp
or
aas
mov
nop
repnz
roll
rcl
or
jge
pop
andb
mov
and
addl
daa
mov
hlt
data16
mov
mov
fadds
push
push
xlat
cmp
fimuls
inc
pop
mov
push
daa
lock
jmp
jge
lea
mov
aaa
mov
dec
pushf
mov
push
fildl
sbb
les
pop
mov
ret
addr16
xor
or
fsubr
mov
sub
aam
or
jno
popa
fists
subl
loopne
add
jb,pn
stos
sub
mov
pop
adc
incl
inc
mov
pop
lock
fisttpll
or
push
push
mov
xor
mov
xor
push
stc
lock
stc
push
xor
pushf
dec
not
shrb
and
fsubrs
push
sbb
mov
inc
adc
push
xchg
cmc
sub
sub
lock
faddl
mov
dec
in
cmpl
sbb
push
push
mov
jmp
imul
pusha
adc
ja
pop
testb
std
push
aad
xchg
in
push
xchg
and
insb
xchg
push
lea
loopne
cmp
cmp
cld
mov
mov
mov
je
mov
mov
andl
push
mov
jb
daa
rcr
fs
push
push
push
and
incl
add
inc
mov
pop
mov
cmp
add
pop
enter
ret
jno
cmpsb
loop
and
rolb
push
and
xlat
jmp
inc
sbb
xlat
outsl
scas
fs
sbb
call
mull
and
fisttps
push
lret
push
mov
sub
loopne
enter
pop
mov
ret
mov
jb
out
pop
xchg
fisubs
ret
inc
lock
adc
pop
loop
push
int3
dec
int
jp
dec
rol
iret
imul
fcompl
imul
insl
mov
fidivl
fildl
fst
sub
fcomp
jae
fbstp
xor
xorl
fdivs
insl
mov
imul
mov
add
cmpsb
mov
xor
mov
outsb
movsb
imul
pop
pop
pop
enter
pop
lret
dec
popa
js
push
outsl
outsb
xor
pop
inc
inc
roll
repnz
adc
aad
mov
jnp
push
ja
jae
or
pop
xchg
add
rcl
shrb
cld
mov
mov
fs
hlt
sbb
dec
mov
in
add
push
lock
test
jmp
rol
add
sub
out
dec
cli
sbb
mov
sub
lret
cmp
lcall
push
cs
lcall
outsl
out
ja
dec
mov
lock
bnd
outsl
lcall
insb
je
push
cli
add
sbb
mov
popf
test
popf
imul
in
mov
sub
sub
push
push
cmp
out
fsubrl
sbb
push
xor
and
loope
cmp
idiv
mov
dec
inc
add
sbb
push
push
mov
sarb
xor
pusha
mov
es
inc
mov
and
in
add
hlt
popa
cmp
or
call
add
inc
fsubr
mov
idivb
inc
in
xchg
push
leave
insb
incl
cmp
and
in
adc
jl
push
lret
mov
xchg
repnz
or
mov
in
or
fiaddl
mov
mov
pop
fistpl
push
adc
dec
in
push
or
bound
xor
and
les
ljmp
inc
xchg
call
push
pop
xor
push
xchg
mov
sub
pop
shll
mov
mov
ss
shll
mov
lcall
jo
insl
shll
ret
mov
addr16
shrl
lret
int3
int
lcall
iret
rcl
shrb
scas
imul
aam
aad
xlat
aaa
mov
mov
insb
mov
fnstsw
jae
data16
xor
out
mov
lcall
jmp
cmpsb
arpl
jne
in
sbb
out
fs
cmpsb
jmp
outsb
repnz
lcall
rolb
mov
divb
sub
mov
sbb
sub
pop
and
push
aaa
fwait
scas
push
aad
cld
or
mov
loopne
and
clc
dec
jb
cmp
lods
fcoml
adc
les
jo
or
out
mov
jno
pop
xor
sbb
push
loop
dec
mov
mov
aad
scas
cmp
inc
add
inc
sbb
mov
mov
jmp
in
rcl
adc
mov
inc
jmp
pusha
movw
sub
push
pushf
data16
call
lea
xor
movsb
adc
pushf
popl
rorb
call
nop
fdiv
ret
jmp
jge
and
add
or
and
rcll
fisubrl
jbe
loopne
mov
popf
add
mov
mov
aad
jmp
push
pop
scas
stos
jbe
ja
mov
jge
ds
movsbw
add
rcrb
stc
mov
outsb
xor
outsl
adc
add
xor
push
cld
call
xor
call
pop
shrl
adc
je
push
les
inc
out
inc
xor
sti
scas
ljmp
cmp
xor
xchg
addr16
dec
add
sti
lods
call
pushf
pusha
test
cmc
jmp
dec
les
cmp
sti
inc
xchg
push
int
push
stos
push
xchg
sbb
sahf
inc
cmpsl
fs
inc
dec
aad
rclb
xor
repnz
out
push
push
cmp
dec
les
xchg
movsb
cmp
or
lea
pushf
imul
popf
into
xchg
pop
dec
sub
mov
xor
pop
lcall
andb
jmp
jmp
ret
add
xor
call
cmp
sbb
mov
xchg
push
data16
js
push
enter
pop
or
add
xchg
sub
faddl
test
xchg
ficompl
sub
or
mov
loopne,pn
call
out
cmp
mov
cli
mov
neg
out
in
outsl
or
repnz
shld
pop
lret
shrd
clc
pop
mov
inc
jbe
imul
cmp
cmp
mov
jg
sti
in
int
pop
int
not
cmc
lea
mov
mov
push
stos
repz
and
mov
jge
cmc
and
sbb
mov
jmp
mov
fsubl
mov
push
pushf
pop
jmp
sti
jo
lock
xor
imull
add
or
xor
ret
outsl
pop
ficomps
adc
test
jae
aad
shr
jle
in
pop
call
imul
shl
enter
cmpsb
adc
add
les
aam
jmp
cmpsl
lahf
das
das
bswap
cmp
clc
aad
jmp
xor
adc
jno
pop
fwait
nop
cmp
outsl
js
sbb
cltd
ljmp
aaa
ret
mov
or
and
pusha
push
shl
mov
dec
je
mov
pmaddwd
cs
out
inc
rcrl
mov
inc
daa
mov
push
lods
mov
cmpsl
push
cld
sbb
sub
in
cli
adc
fs
and
test
lods
out
lods
cltd
adc
int3
dec
in
xchg
in
xlat
sbb
sbb
pop
add
sub
repz
hlt
cli
sub
pop
std
or
inc
in
call
pop
adc
stc
popf
add
jmp
inc
testl
sti
sub
or
in
sti
leave
xchg
movsl
or
add
jae
outsb
and
and
adc
and
inc
out
sub
rolb
inc
cmp
mov
xor
add
fbld
int3
into
insl
or
add
and
xchg
jg
add
fwait
movq
inc
clc
or
mov
cmp
into
jmp
scas
add
in
adc
inc
mov
lret
repz
or
xchg
push
js
cmp
pop
lock
inc
push
movsb
roll
ret
roll
and
add
adc
fldz
ss
lds
ds
or
sahf
or
ret
int3
out
or
adc
sbb
xchg
fadds
add
rclb
dec
push
ja
sub
xchg
movsl
ret
adc
arpl
add
push
fldl
lds
adcl
xlat
data16
pop
xchg
jne
adc
hlt
call
sbb
and
sub
les
adc
mov
or
mov
xchg
hlt
sub
mov
xor
add
xor
sti
mov
stos
sbb
adc
pop
add
or
push
js
call
lock
hlt
hlt
je
lock
xor
inc
cwtl
popf
rorb
inc
add
push
aas
inc
clc
outsb
mov
es
sbb
sbb
and
fistl
or
into
dec
rorl
rcrl
and
xor
gs
xchg
sbb
adc
adc
dec
sbb
stos
cltd
and
add
push
mov
movsb
mov
inc
dec
adcb
mov
and
mulb
nop
jl
adc
rorb
in
adc
add
push
mov
sbb
mov
or
lret
mov
movsl
xor
xchg
mov
adc
std
jns
daa
int
stos
mov
pushf
add
idivb
and
adc
leave
and
into
les
ljmp
in
and
xchg
inc
sbb
fildll
call
movsb
fisttpll
lds
test
fidivrs
fistps
mov
cmpsl
push
data16
jmp
sbb
or
insb
out
mov
in
xor
outsb
cltd
mov
ds
test
clc
sbb
xor
push
cmp
lcall
or
add
mov
mov
pop
xor
jne
push
xlat
aam
sbb
lcall
jmp
cmpsb
or
xor
test
mov
shll
lret
je
pop
test
je
lods
hlt
and
adc
or
jnp
sub
jne
adc
mov
and
aaa
inc
gs
mov
and
call
rcl
cmpsl
cmp
fs
outsl
outsb
insl
int3
out
fs
xor
xor
pop
lcall
jmp
mov
movsl
js
pushl
cld
cwtl
sbb
rolb
sbb
or
aam
jbe
rcrb
adc
call
in
mov
adc
je
mov
push
loope
jne
jmp
push
into
cwtl
and
mov
push
dec
rsm
pop
pop
ret
lar
cmp
mov
leave
lcall
and
in
mov
adc
call
fnsave
xchg
and
ret
subb
testb
jp
sub
mov
scas
or
shll
add
push
cltd
test
test
nop
push
mov
sbb
imul
je
pop
mov
push
cmp
hlt
test
sbb
pop
jecxz
mov
cmp
es
fidivs
dec
push
arpl
cmp
push
test
mov
and
and
xor
mov
or
mov
inc
or
jg
or
je
scas
inc
nop
push
add
push
cmp
xor
add
popa
cmp
xor
inc
xchg
push
iret
dec
loopne
add
adc
sbb
mov
or
flds
lds
les
mov
pop
cmc
shrl
stos
or
xchg
insl
enter
aam
bound
xchg
fsub
call
pop
add
and
lret
test
adc
inc
inc
inc
sbb
jo
xchg
and
pop
mov
call
inc
xchg
push
cmp
test
adc
nop
xchg
xchg
rcll
lahf
aaa
lahf
lret
mov
test
pop
les
cmp
std
inc
lock
adc
inc
lock
pop
aaa
fwait
jnp
mov
mov
div
inc
jne
push
jle
fdiv
cmp
sbb
and
mov
imul
adc
inc
call
xlat
inc
and
xor
sbb
mov
ret
or
pop
adc
inc
fwait
adc
sub
ja
xor
pop
push
loop
or
fistl
push
dec
lcall
dec
inc
push
popa
lcall
inc
pushf
sub
test
sub
mov
insb
jne
cs
inc
xor
insb
insb
mov
movsl
sub
dec
outsb
je
in
mov
jb
mov
push
pop
jbe
mov
cmpsb
pop
cmpsl
push
gs
mov
stos
push
lods
lods
lret
gs
xchg
gs
je
jo
xchg
gs
xchg
jo
outsb
push
gs
frstor
gs
roll
aam
lcall
mov
jne
mov
lea
xchg
gs
sbb
sbb
dec
shll
xchg
xchg
xchg
inc
push
cwtl
js
dec
shrl
lcall
mov
inc
fs
gs
dec
push
gs
in
or
in
ds
mov
imul
jb
mov
or
les
das
mov
fnstenv
mov
mov
push
arpl
in
inc
inc
inc
inc
mov
fdiv
test
pop
inc
mov
lock
mov
into
dec
clc
lret
enter
std
clc
adc
push
add
adc
mov
jo
mov
adc
and
imul
push
mov
push
aam
rep
shrd
test
movsl
adc
das
xlat
mov
in
je
push
adc
lock
imul
pusha
adc
sub
leave
mov
push
leave
sub
or
movsb
sbb
dec
mov
cld
repz
adc
jnp
pusha
or
sbb
das
xchg
adc
cmp
and
or
loopne
xchg
jge
add
xchg
mov
jne
push
jmp
pusha
subl
sbb
dec
xchg
lret
inc
out
adc
sbb
sbb
push
cltd
out
sub
add
decb
add
xlat
or
bound
aas
push
jle
lock
and
fsubs
scas
sarb
cli
jne
call
sbb
inc
mov
jne
cld
jp
or
sahf
and
jp
addr16
mov
je
xchg
pop
movsb
and
inc
fstpl
mov
call
push
lahf
loopne
imul
adc
push
cwtl
call
jecxz
sbb
aad
sub
mov
fdivp
ss
cmp
incl
jnp
js
dec
std
clc
push
cmp
das
pushf
xor
jmp
jle
and
add
in
push
scas
cmp
xor
cltd
in
push
popf
jmp
jecxz
lds
fldt
mov
push
push
stos
or
mov
je
adc
and
mov
sbb
or
sub
and
sub
je
insl
jne
sub
daa
sbb
pop
fiadds
jl
push
jle
adc
adc
push
push
mov
pop
cmp
sub
add
aas
adc
mov
cmp
scas
sbb
les
fs
lods
in
mov
mov
cmpl
cltd
in
popa
je
sub
mov
outsl
outsb
cmp
mov
je
outsl
arpl
mov
mov
jne
outsb
adc
xor
sbb
jp
ds
addb
mov
dec
mov
push
js
dec
xchg
push
and
arpl
sub
jne
scas
push
dec
push
lds
mov
xor
daa
sub
pop
push
ficoml
shll
aam
adc
or
xor
add
movsb
sbb
or
ret
andl
cld
pop
clc
push
pop
pop
mov
sub
pop
add
or
add
imul
xchg
mov
fisttpll
bsr
addb
fwait
push
sub
mov
push
push
js
lock
push
mov
stos
cmc
push
mov
and
pop
mov
push
iret
mov
movb
mov
adc
dec
dec
int3
xlat
hlt
xchg
outsl
add
adc
add
outsl
imul
mov
xchg
push
daa
sub
mov
or
xor
sub
pop
inc
lcall
xor
adc
aas
popa
arpl
push
shll
outsb
cmp
lret
mov
gs
or
xor
shll
outsb
gs
add
and
xchg
stc
aas
popa
arpl
pop
xchg
imul
pop
xchg
arpl
je
outsl
fstl
jne
ror
mov
add
lret
mov
sub
outsb
cmp
in
es
loopne
loope
jns
cmpsb
imul
imul
aaa
insb
je
ret
outsb
imul
cmp
jp
xor
shll
es
xor
jae
dec
je
add
mov
dec
jmp
aam
adc
repnz
in
xchg
add
xchg
fisubl
loopne
fisubs
push
push
pop
je
jne
jne
call
mov
xlat
fnstsw
sarb
fsubl
push
jne
xchg
pop
jl
in
xchg
pop
das
mov
cmpsb
mov
xor
and
je
jb
lcall
or
mov
sti
cld
negb
cmp
enter
aam
add
jl
cmc
into
pop
or
fdivr
xchg
mov
mov
pop
sub
lret
fs
or
xlat
or
xchg
fdivl
fcoml
arpl
ds
je
mov
mov
add
mov
push
int3
insl
or
aam
push
incl
lods
sbb
jmp
inc
pop
add
ss
rcl
sub
push
mov
fdivl
fdivr
shlb
leave
adcl
push
sbb
add
jmp
out
mov
jle
push
sbb
cmp
add
or
sbbb
outsl
push
pop
and
xor
mov
andl
sbb
cmp
sbb
add
jg
inc
xchg
dec
push
cld
in
std
jb
adc
imul
jo
popa
jns
dec
shll
cmp
outsb
flds
push
mov
xchg
adc
push
xchg
pop
add
push
test
xchg
and
mov
cs
cmpb
ss
out
xor
pop
mov
jne
push
js
sub
jge
call
jo
jge
sbb
pushf
add
add
xchg
or
mov
jbe
iret
sub
test
ja
add
cmc
add
int3
sub
pop
sub
adc
mov
jmp
enter
jne
push
and
xor
add
adc
imul
pop
pop
add
jle
enter
sub
sub
xor
xchg
xor
sbb
iret
jo
pop
test
or
clc
push
pop
inc
movsl
stc
mov
fcoms
xor
adc
mov
and
stos
dec
lds
dec
and
xor
xlat
std
xor
fisttpll
pop
mov
inc
inc
xchg
clc
cmc
or
cmp
adc
push
icebp
inc
idivl
push
pop
sbb
xchg
sub
jo
outsl
fsubs
xor
movl
dec
stc
sahf
stos
or
rclb
nop
les
adc
jmp
dec
xchg
dec
ret
or
push
fcmovnb
or
movhlps
outsb
sub
xchg
orb
cmp
pop
or
push
addl
stos
adc
ljmp
in
leave
jle
mov
sbb
shl
add
pop
mov
ja
cmpl
into
cld
sub
mov
and
jg
lea
and
sbb
das
xor
pushf
insb
mov
and
sbb
and
cmp
xor
mov
mov
clc
add
cli
lods
jo
dec
jb
push
hlt
gs
cmp
pop
cli
mov
cs
sbb
push
in
js
clc
fdivr
add
int3
inc
sub
andb
daa
ljmp
mov
decb
stc
add
les
sbb
nop
and
xchg
clc
pushl
ret
push
cmp
fs
pop
add
jmp
jb
dec
xor
loope
scas
fs
push
jnp
out
insl
imul
sbb
add
mov
pop
dec
mov
or
push
push
mov
lahf
sti
push
adc
pop
rcrb
and
pop
std
scas
popf
sub
sbb
sub
adc
xlat
dec
mov
pop
divb
or
pop
add
pop
xor
insb
cmp
outsb
data16
or
add
sub
pop
inc
cmp
jb
jmp
add
movsb
jb
notl
sahf
shll
leave
pop
lods
ja
and
and
dec
push
mov
insl
or
sbbl
add
pop
or
or
repnz
jbe
pop
arpl
pop
fdiv
sbb
cmp
or
and
ja
int3
jp
pusha
mov
xor
fcomps
rclb
cmpsb
pop
loope
aas
outsb
cmc
mov
div
push
pop
movl
jnp
cmp
enter
cmp
subl
cli
jmp
cmp
mov
jbe
xor
push
in
les
fwait
mov
push
mov
cmpsb
pop
pushl
das
imul
outsb
or
jmp
jae
roll
push
push
aaa
fwait
mov
hlt
ret
inc
pop
pop
jbe
mov
pop
push
mov
or
jne
fidivrl
push
out
fadds
sbb
pop
aam
add
loop
dec
and
ljmp
hlt
jecxz
push
push
ja
xor
lcall
fs
insb
mov
jb
cli
arpl
xor
jae
jbe
arpl
jo
dec
outsw
insl
jne
in
mov
or
inc
mov
scas
fisubs
jo
mov
push
push
inc
cs
pop
stos
mov
lahf
cmp
mov
shlb
pop
xor
sbb
outsb
and
cmpb
and
enter
xor
icebp
push
pop
lock
sti
out
xor
dec
andb
orb
lods
xchg
add
xor
es
or
sbb
hlt
adcl
inc
nop
xchg
xor
nop
dec
and
fsubl
inc
push
xor
pop
iret
xchg
pop
js
jne
push
push
push
cwtl
mov
push
repnz
orb
test
iret
fmull
mov
hlt
ds
addr16
movsl
movsb
out
div
call
pop
sub
push
push
test
mov
adcb
dec
add
pop
mov
mov
out
push
ret
ds
fistl
inc
movzbl
stos
jg
pop
clc
notl
push
sbb
cmc
push
push
lahf
and
xorl
mov
popl
push
aad
push
mov
sbb
imul
imul
cmpsb
imul
cs
fs
jo
imul
mov
cmpsb
outsw
push
loope
dec
xor
icebp
jne
or
mov
pop
cwtl
xchg
xor
and
hlt
push
pop
dec
dec
adc
jne
fists
dec
push
dec
inc
xchg
fs
inc
xchg
push
xchg
or
and
push
adc
xor
dec
faddl
add
add
je
icebp
mov
test
adc
in
out
mov
sbb
add
or
dec
push
in
push
add
inc
fildl
mov
adc
imul
sub
int3
cmp
dec
mov
mov
fsts
or
push
insb
jbe
sbb
inc
lea
lret
jno
ficoms
decl
push
lea
jmp
xlat
lea
mov
inc
je
cmpsb
push
lods
fcoml
xlat
nop
std
add
or
in
nop
ljmp
or
push
test
iret
push
outsl
lretw
leave
inc
sub
cmpsb
ja
gs
mov
pop
dec
imul
outsl
outsl
mov
mov
pop
push
fs
mov
lret
outsl
ja
pop
push
in
add
insb
dec
or
leave
mov
outsl
push
popa
mov
lret
mov
pop
dec
push
dec
inc
adc
lret
mov
arpl
loop
xor
push
add
js
fsts
daa
and
jne
push
je
jne
pushf
fs
lcall
mov
sbb
dec
mov
cmp
mov
jecxz
mov
adc
and
fwait
sbb
mov
and
mov
dec
enter
clc
js
js
outsb
int3
fdivrl
inc
cmp
mov
dec
or
xchg
in
mov
hlt
mov
push
adc
sub
or
mov
out
push
push
ds
enter
mov
dec
ret
repz
inc
dec
pop
ror
push
cltd
or
pop
ret
ret
mov
stos
sarb
adc
rclb
ror
push
shrl
subl
add
pop
ljmp
sbbl
sub
lods
or
test
sub
test
mov
mov
or
std
aad
test
arpl
inc
shrb
dec
mov
xor
xor
jne
and
or
leave
jmp
enter
in
in
out
inc
sbb
sub
ds
bound
nop
xchg
jae
xchg
addr16
jnp
xor
je
outsl
xchg
xchg
stc
pop
and
sbb
stc
xchg
stc
cwtl
stc
cltd
cmp
enter
stc
push
fwait
stc
stos
or
jnp
lods
cwtl
sti
pop
loopne
sti
mov
pop
lds
xchg
outsb
xchg
fsts
lcall
inc
sahf
push
sbb
leave
inc
mov
fdivr
xchg
cmp
and
cli
xchg
cli
fdivs
xor
nop
sti
push
outsb
sbb
shll
xor
mov
push
adc
outsl
jae
negb
sbb
add
mov
pop
jae
test
push
imul
outsl
imul
and
mov
daa
outsb
or
insb
cmp
jno
jb
je
rcrb
inc
jb
popa
leave
leave
shrb
ja
jp
enter
jl
pop
mov
rcrb
insl
pop
pushf
popf
sub
pusha
lods
gs
bound
lea
push
leave
shrb
imul
push
or
push
dec
push
pop
push
dec
push
fxch
leave
leave
pop
pop
pop
inc
mov
sub
inc
or
popf
sbb
dec
push
jo
int3
leave
leave
leave
dec
dec
dec
dec
pusha
lahf
pop
adc
mov
cmp
in
mov
adc
enter
cli
out
mov
sti
sahf
pop
bnd
mov
push
enter
mov
mov
enter
popa
push
shrb
sub
mov
mov
pop
out
pop
js
vsqrtss
or
clc
fdiv
ljmp
mov
aad
lcall
imul
add
xchg
jmp
call
add
in
add
stc
or
push
push
add
jmp
inc
cltd
sub
sbbb
push
lret
mov
cmpsb
imul
push
lcall
push
imul
imul
cmpsb
imul
cmpsb
imul
cmpsb
imul
imul
outsl
lcall
and
ja
sbb
fcos
rcl
leave
dec
shll
das
das
xor
shll
js
jae
xorl
xor
jae
xor
xor
arpl
shll
cmp
adc
shlb
jae
mov
lret
mov
imul
outsb
aad
incb
xor
and
lret
mov
shlb
call
sti
cld
and
filds
push
push
or
jo
enter
xchg
repnz
rcrl
int
imul
imul
imul
cmpsb
imul
movsb
imul
leave
or
popf
or
cmp
mov
inc
int
and
hlt
xor
in
inc
mov
adc
rolb
or
test
stos
je
mov
push
pop
add
mov
in
in
enter
jae
adc
js
mov
cs
scas
add
jp
pop
push
mov
jne
mov
pop
xorb
cmp
xlat
bound
sbb
fcoms
jl
mov
push
lea
or
neg
imul
add
rolb
and
insl
std
mov
add
cli
sub
and
pushl
test
dec
xor
mov
or
aas
je
lock
or
push
mov
sbb
or
mov
mov
outsb
jle
push
and
cwtl
inc
or
repz
pop
mov
push
out
jae
mov
dec
mov
loopne
xor
pop
sbbb
jns
pop
adcl
xor
adc
pop
js
ja
iret
mov
push
or
out
jae
push
xor
sbbb
loopne
fmul
inc
cmp
ftst
lods
or
xchg
mov
or
in
jle
jp
outsl
cmp
add
dec
jne
mov
inc
pop
nop
xor
cmp
push
pop
testl
push
lahf
hlt
xor
dec
xlat
jge
loopne
cmp
adc
imul
push
sbb
loope
into
pushf
lahf
cmp
cld
int3
or
cwtl
add
imul
shrl
lret
or
push
cmpsl
add
mov
xchg
call
lock
lock
mov
adc
push
in
sahf
aas
mov
add
add
inc
push
inc
jecxz
test
sub
sub
stos
cmc
mov
imul
pop
inc
mov
call
imulb
sahf
test
mov
je
add
add
aam
add
aas
and
lds
add
mov
hlt
dec
notb
push
push
sub
mov
xchg
lret
test
or
lret
cmp
add
and
xchg
push
cmpsb
mov
push
roll
pop
lahf
js
jne
pop
addb
and
ds
mov
jno
push
dec
faddl
xchg
pushf
lahf
and
js
jb
mov
test
cmp
fbld
jmp
mov
fisttpl
jbe
dec
mov
cmp
das
stc
sub
je
push
call
pop
jbe
int3
adc
insl
mov
xchg
cmp
sbb
lods
jne
mov
mov
std
xchg
sbb
jecxz
mov
add
cld
or
sbb
push
or
iret
movsb
inc
das
dec
icebp
pushl
push
sbb
ret
lods
xor
int3
inc
mov
xor
mov
lods
sbb
cld
or
jne
cmpsb
xor
fwait
cltd
cmpsl
and
ss
and
lahf
mov
adc
add
popf
cmp
mov
subb
cmp
cmc
mov
push
inc
xor
and
pop
mov
mov
andb
push
mov
clc
and
scas
popa
daa
sti
jne
and
cmp
ret
ret
mov
cmp
inc
dec
mov
adc
add
lret
lods
lods
mov
add
cmp
mov
iret
or
insb
rorl
adc
mov
lods
int
mov
das
jmp
cmp
push
sti
jecxz,pt
sub
andb
push
dec
imul
push
jbe
inc
cltd
add
scas
int
cmpl
push
dec
cmp
cmp
or
push
adc
and
sbb
cmp
fildl
fnstcw
je
inc
cmp
lcall
cmpb
js
add
jo
add
mov
call
jb
dec
gs
je
add
push
jle
mov
add
or
pop
push
out
or
fisttps
subb
push
inc
dec
sbb
cmpsb
add
add
insl
je
and
inc
sbb
add
in
add
pop
call
add
movl
add
adc
jne
cld
fcomp
or
lods
mov
aad
push
mov
add
aaa
mov
add
in
mov
pusha
lea
shr
jle
movzwl
mov
jne
daa
pop
push
mov
test
push
cmp
xchg
sub
test
xchg
adc
add
inc
lar
data16
lock
jne
add
xchg
into
or
sub
inc
mov
add
fimull
cmpsb
iret
mov
xchg
xor
das
xor
out
adc
mov
add
cmp
aad
lcall
jl
add
jmp
dec
add
push
pop
push
mov
pushl
cmp
aas
outsb
jno
push
aad
nop
dec
je
adc
push
fbstp
loop
inc
adc
iret
mov
xchg
xor
test
lea
pop
sub
sbb
mov
pushl
add
clc
add
cltd
lods
xor
dec
and
sub
cmp
push
mov
pushf
mov
pop
es
leave
inc
xor
andl
jle
sbb
daa
sbb
pop
lods
push
mov
call
sub
insb
lahf
inc
aaa
pushl
lcall
bound
mov
add
pop
jae
dec
lcall
inc
cmp
cltd
mov
orb
testb
mov
xorl
jge
push
pop
mov
imul
xchg
inc
cmp
testb
je
pop
inc
sub
mov
inc
shr
or
popf
inc
pop
gs
pop
push
cltd
stos
int
sti
mov
push
shll
sub
cmp
push
push
push
mov
push
adc
mov
sub
or
inc
adc
pop
mov
mov
push
sarl
add
sbb
push
sti
fdiv
into
or
adc
sub
mov
dec
addr16
insb
outsl
leave
push
sub
mov
push
cs
inc
test
mov
pushf
jns
pop
or
fcompl
pop
or
or
lods
cltd
sbb
mov
stc
or
sti
inc
rcrl
je
addl
sub
pop
movsb
or
cmp
ds
push
mov
pop
imul
inc
xchg
dec
or
add
mov
add
sarb
dec
dec
jbe
lods
cmp
int3
mov
pusha
andl
and
jbe
push
ja
aas
popl
jbe
sbb
aaa
sbb
jne
shlb
sub
mov
mov
push
sbb
fstpl
or
push
cmp
add
js
adc
inc
lock
pop
sub
cs
adc
sbb
push
or
jno
fcom
or
sbb
and
and
lods
stos
loope
dec
push
fs
jl
in
lock
cmp
add
scas
sbb
add
inc
xchg
dec
and
xor
adc
loop
fisubrl
pop
dec
outsb
das
mov
call
paddusb
loope
and
cmp
scas
or
xor
das
cmp
daa
movsl
adc
jmp
mov
cmp
in
ret
jle
xchg
subl
pusha
enter
nop
cmp
int
mov
mov
add
xchg
push
xlat
lcall
add
les
adc
cmpb
jle
int3
aaa
and
xor
and
xor
stos
mov
loop
or
fwait
adc
fistl
add
sub
jne
jmp
push
sub
mov
inc
or
int3
and
add
pop
arpl
sbb
sbb
imul
sbb
gs
out
inc
ret
orb
rcrb
lret
jae
loope
ficomps
jecxz
in
jne
popf
in
int
pusha
sarb
and
ret
popa
xchg
mov
or
js
xor
xor
add
fisubrl
repz
in
dec
cmp
mov
mov
cld
mov
enter
push
in
pushf
data16
cmp
or
cmp
pusha
push
dec
push
mov
add
test
les
rcrl
shll
push
adc
cmp
push
mov
cmp
and
adc
pop
pop
xor
jb
and
xor
xor
sarb
and
adc
iret
es
lahf
test
push
sub
imul
pop
imul
pushf
inc
jo
jp
xchg
and
cmpxchg
ds
or
lret
js
sbb
mov
pop
loopne
loope
jne
lcall
push
or
sbb
or
pop
out
mov
mov
xor
aaa
lret
sbb
notb
dec
mov
mov
loope
enter
sbb
daa
mov
hlt
rorb
pop
popa
xchg
sti
and
int3
xor
shll
lahf
popf
test
xchg
aas
std
shlb
sub
sbb
rcr
xchg
push
jp
or
sbb
cmp
inc
push
adc
fistl
and
inc
mov
xor
test
and
lcall
sbb
filds
jge
scas
sub
dec
enter
or
hlt
xchg
mov
or
and
jmp
nop
pop
repz
push
je
js
add
fs
sbb
test
mov
mov
pop
fists
add
and
xchg
inc
sbb
jl
lahf
xchg
sbb
adc
fcomps
and
add
and
fwait
lds
insb
sbb
js
les
sub
push
and
mov
mov
add
les
and
cmp
sbb
xor
pushf
push
xorb
fmull
mov
xchg
or
mov
pop
clc
pop
mov
add
add
and
dec
iret
cmp
in
mov
jae
dec
add
adc
gs
call
insb
push
xor
popa
jo
push
add
jb
jne
insb
in
sbb
inc
cmp
fildll
dec
ss
adc
pop
inc
insb
jae
lods
add
jb
sbb
push
add
fs
imul
push
add
rcrl
iret
add
mov
mov
je
gs
xchg
cmovbe
fstl
outsl
arpl
push
imul
push
stos
adc
dec
outsl
fs
add
jne
adc
popa
jg
xchg
adc
push
jb
add
or
gs
push
je
inc
jns
imul
sbb
jne
or
and
into
lods
adc
inc
pop
or
or
test
rcr
inc
xchg
gs
js
gs
inc
outsl
jb
cmp
and
push
push
push
fnstcw
pop
push
out
and
or
sub
pop
test
int
push
push
or
jne
jo
inc
push
cmp
dec
or
cmp
ret
jmp
popa
cmpsl
push
aaa
jno
rolb
ret
and
fwait
insl
punpcklbw
mov
loopne
or
imul
add
das
push
sbb
push
gs
je
cmpsb
in
xor
pop
sub
adc
push
sarl
add
jae
ret
xchg
fchs
push
imul
insl
push
or
xor
cld
and
push
jne
jb
sub
inc
inc
data16
ss
imul
xor
inc
add
jns
fbld
mov
mov
xchg
mov
out
xor
xchg
imul
xchg
imul
push
lahf
insl
sbb
pop
dec
lods
fcoms
jns
add
pop
push
mov
adc
outsl
pushf
xor
mov
xor
dec
jae
ret
add
arpl
clc
sbb
push
outsb
push
adc
xor
loop
dec
dec
inc
push
dec
inc
cli
xor
cmp
aaa
push
push
andl
cwtl
dec
push
pop
mov
fistpl
outsl
push
jb
fs
popa
xor
jge
pop
notl
push
inc
pop
std
inc
pop
pop
and
push
pop
xchg
add
push
shll
mov
aaa
repnz
ljmp
jecxz
addr16
aad
push
push
push
jae
push
imul
adc
shlb
add
push
enter
inc
inc
in
movl
adc
jo
cmc
cmp
push
sub
ljmp
sbb
loope
pop
and
jae
sub
aaa
aaa
sbb
pop
add
push
mov
imul
jecxz
or
sub
jne
outsb
popa
xchg
jo
movsb
jne
cmc
in
sub
imul
sbbb
jnp
mov
xor
jb
cltd
loope
out
cmp
adc
push
stc
jae
inc
outsb
jne
push
sub
inc
push
inc
push
mov
or
test
cltd
add
insl
jp
push
jmp
arpl
stos
lret
xor
xor
jb
adc
js
add
mov
pop
je
add
pop
adc
jae
jb
adc
data16
xlat
xor
popa
xorl
insl
test
outsb
bound
notb
xor
test
in
mov
and
mov
or
or
aas
xor
pop
push
lea
outsb
add
mov
arpl
sti
cmp
sbb
sbb
xchg
ja
xor
outsl
push
and
jae
in
jge
out
mov
idivb
in
or
loope
pop
jbe
mov
push
mov
ficomps
xor
add
imul
dec
xchg
add
sbb
push
adc
sqrtps
arpl
imul
outsl
or
mov
fstpt
pop
push
cmp
add
push
mov
pop
or
jae
or
inc
arpl
enter
jbe
push
data16
mov
jmp
ret
es
inc
dec
push
dec
sub
pop
pop
je
inc
dec
cmovne
stos
mul
inc
mov
mov
inc
fstps
mov
das
les
mov
mov
inc
mov
add
lds
lea
push
insb
xchg
notl
lcall
sbb
movsl
mov
sbb
pop
pusha
adc
bound
pop
aaa
js
jl
addb
adc
mov
enter
out
add
mov
sub
cmp
aas
stos
sub
ja
and
into
pop
cmpsl
call
lods
push
and
mov
and
imul
js
hlt
push
jg
mov
mov
sti
aas
pop
and
sbb
inc
cwtl
push
nop
nop
rorl
fidivrl
test
jns
fsubr
inc
pop
loope
push
lret
inc
xor
rorb
xchg
mov
pop
xchg
cmc
cmp
inc
xchg
lret
cmpsb
sbb
dec
movsb
push
sbb
lahf
and
mov
pusha
push
mov
dec
cld
pop
in
fadd
jmp
cmp
sbb
sub
cwtl
dec
lea
push
adc
jno
and
cmp
mov
movsl
aaa
incl
sub
inc
pop
sbb
sbb
mov
adcb
jl
sbb
decl
add
jne
ds
cmp
sbb
icebp
cmpsb
jl
adc
dec
movsb
dec
test
adc
mov
xor
dec
fstpl
dec
scas
movsb
push
frstor
test
mov
cld
mov
lea
push
call
stos
push
xchg
pusha
mov
call
dec
icebp
inc
mov
mov
sub
jb
adc
sbb
outsl
add
dec
add
adc
push
fisttpl
pop
shrd
xadd
add
mov
cmc
sar
shl
mov
push
clc
pop
mov
outsl
cmp
stc
pushl
clc
or
add
push
fs
mov
bswap
lahf
xor
jmp
xchg
push
mov
xor
sti
decl
push
not
repz
jmp
push
jmp
dec
pushf
lds
pop
add
popf
in
xchg
andl
mulb
fs
insl
or
je
mov
mull
dec
lds
movsb
rcl
bswap
dec
cli
out
pop
mov
mov
xor
sarl
or
lahf
loope
sub
jnp
jg
enter
cmp
jmp
rorb
push
or
aas
in
sahf
stc
push
pop
push
mov
add
adc
out
jg
inc
call
inc
adc
call
enter
adc
js
jmp
jg
mov
rol
cli
rcl
out
add
cmc
call
dec
push
sarl
add
in
ret
xor
inc
mov
ror
inc
mov
push
je
pusha
test
add
jb
xor
add
call
leave
pop
cmc
pusha
adc
ret
inc
shr
call
dec
ja
ret
ret
add
gs
inc
aad
pusha
push
xchg
xor
fsts
add
or
mov
addr16
shrd
jnp
add
adc
loopne
mov
sub
vpshlw
pusha
push
and
mov
push
fucomip
mov
out
jo
mov
sbb
insb
lea
out
dec
bound
out
imul
lea
jno
xchg
cmp
jns
adc
aas
cmp
adc
ret
cmpsl
sbb
push
mov
sbb
stos
inc
or
mov
pusha
pop
or
in
lcall
cld
test
or
fdiv
les
xchg
cmovle
fwait
mov
adc
cmp
add
sar
call
xor
sub
into
push
ror
xchg
cmc
pushl
inc
xchg
push
xchg
xchg
add
or
xor
stos
mov
xor
outsb
fistpl
std
mov
sahf
xchg
sbb
fildll
cmpsl
and
adc
shl
and
fsubrp
ja
faddl
loop
stc
jge
clc
pushf
sar
mov
mov
pusha
jmp
fbstp
add
adc
push
outsb
lods
mov
push
mov
add
aad
call
fnsave
filds
clc
add
push
call
pop
xchg
add
outsb
xchg
outsl
insl
dec
or
stos
jmp
ret
lods
mov
or
imul
adc
xor
jecxz
and
jmp
lret
dec
push
mov
jb
pop
mov
or
call
ficoms
and
mov
out
fstp
lock
or
ljmp
mov
cmp
insb
mov
imul
insl
dec
adc
inc
adc
sub
adc
sbb
seto
mov
mov
insl
insl
shlb
test
pushf
test
jle
jp
jmp
jg
bts
add
add
not
sub
and
sbb
cmc
jae
subl
aam
shld
mov
imul
rcl
lock
add
divl
jnp
inc
push
cld
cmp
mov
aad
rcrl
push
fistpl
jge
stc
xor
or
pushf
push
rcl
testb
in
or
cld
enter
int
ljmp
or
push
mov
pop
js
mov
hlt
mov
enter
icebp
hlt
and
jae,pt
push
or
and
rcrb
mov
fisubs
jmp
scas
cmp
icebp
or
pop
sbb
mov
cmp
shr
rcll
xor
adcl
mov
std
push
je
cmp
call
and
lods
sbb
jmp
push
mov
cmp
xor
stc
add
out
adc
push
mov
xlat
or
adc
adc
push
call
ret
sub
cmc
adc
dec
lahf
sub
dec
les
xor
call
and
push
jmp
loopne
idivb
rcl
es
lea
test
adc
push
mov
pop
pop
jae
add
outsl
cmp
push
ss
push
out
push
jmp
loope
push
daa
fcoms
add
cmc
pushf
std
add
punpckhwd
jbe
jne
ret
jmp
cmp
cmp
add
mov
add
filds
mov
mov
mov
ljmp
out
fisubrl
out
sbb
rcrl
test
push
mov
call
xchg
or
shrl
inc
cmp
add
fists
sub
decl
push
into
lock
mov
ret
loop
fdivr
dec
mov
lcall
inc
mov
aaa
xor
jns
push
pusha
sahf
rcr
mov
mov
cmp
xchg
das
xchg
add
stos
sbbb
push
cwtl
adc
clc
scas
inc
dec
mov
stc
mov
loope
sub
mov
fcoms
push
inc
bound
clc
xor
fs
mov
jmp
incb
mov
jp
push
push
mov
or
cmp
mov
iret
insl
jo
js
loopne
mov
jmp
mov
std
mov
adc
arpl
cmp
mov
xadd
add
sub
clc
call
mov
scas
iret
cs
rcll
jmp
push
hlt
test
icebp
leave
cmp
xor
or
or
add
es
jnp
loope
inc
jmp
loop
loope
sub
inc
xor
pop
xorb
push
adc
mov
xchg
fucomp
test
adc
scas
pusha
sub
jmp
shlb
in
push
xor
inc
test
mov
sub
mov
stos
leave
or
cmovge
inc
mov
push
loop
push
lock
mov
dec
imul
std
pop
shlb
adc
decb
repz
sti
push
pop
arpl
jmp
jbe
inc
lea
test
or
mov
pop
outsl
notl
lea
cmc
dec
jno
cmc
jae
icebp
push
pop
jl
jne
rcr
rorb
push
or
jmp
and
enter
stc
pop
dec
sbb
mov
xor
daa
push
add
aas
idivl
sub
sub
cmp
jb
not
sub
jle
jno
outsb
fnsave
cmp
fcmove
andb
cmc
pop
or
push
fwait
push
xchg
je
adc
aam
or
popf
pop
in
push
fldl
gs
pop
push
das
mov
lock
sbb
ret
ret
xchg
rolb
loopne
testb
mov
test
adc
sub
mov
faddl
pop
decl
and
sub
mov
movsb
loopne
dec
jmp
inc
clc
push
mov
andb
ret
push
mov
scas
mov
sub
xor
push
adc
scas
pusha
pop
stc
jo
or
mov
fists
ja
call
push
stc
pop
inc
fwait
std
pop
lret
inc
push
test
push
mov
xor
pop
or
cmpl
xor
lock
idivl
sti
mov
mov
cli
or
loope
test
cmc
sub
clc
lcall
pop
jmp
cltd
or
cmp
sbb
roll
call
addr16
push
jmp
scas
mov
call
jle
sbb
inc
loop
mov
divl
push
cmc
imul
push
xchg
call
sub
lds
cwtl
sub
repnz
sub
test
inc
hlt
mov
sub
dec
outsb
test
sbb
add
cmp
test
ret
int
sbb
dec
mov
pusha
cltd
xchg
or
and
cmpl
inc
dec
jmp
test
and
fistps
push
push
mov
sbb
dec
in
sbb
xchg
add
call
xlat
fmul
jmp
mov
sbb
pusha
push
sub
mov
mov
sbb
ret
std
jae
or
stos
cmp
xor
fs
hlt
movb
call
repnz
out
sub
pusha
mov
and
ret
fildll
int
ja
call
or
xor
fisubs
pop
pop
mov
cld
sub
lret
sar
test
or
call
mov
ret
roll
dec
pushf
lcall
lea
mov
jae
xchg
lret
data16
cmp
push
outsb
mov
gs
xchg
pop
mov
lahf
je
aad
mov
mul
shll
adc
ja
daa
mov
fcomps
add
sub
insb
cli
mov
bound
imul
cmp
js
ljmp
pop
cmp
push
inc
addr16
jle
fwait
in
insl
add
rcr
int
aaa
xor
arpl
fisubrs
leave
cltd
gs
and
outsl
fdivrl
lahf
inc
lret
out
or
int
lock
xor
js
aas
cmp
out
int
sub
jnp
mov
jmp
add
cld
mov
jp
ja
js
in
ret
fwait
std
psllw
pop
sbb
insl
inc
mov
inc
popa
ret
testl
mov
das
push
pop
pandn
imulb
orl
mov
scas
neg
and
shlb
daa
add
adc
cmp
mov
push
imul
push
ret
xchg
and
addl
loope
ret
sbb
pop
mov
neg
iret
stos
dec
or
jnp
mov
add
jmp
fidivrs
jnp
or
das
sbb
fisttps
pushf
and
ret
icebp
fidivrs
scas
jae
dec
sub
mov
loope
and
jns
iret
mov
xor
mov
cmp
fwait
aas
jecxz
neg
add
aaa
push
imul
sbb
sbb
xchg
xchg
icebp
aaa
mov
icebp
fidivrs
addr16
jnp
sbb
out
inc
sbb
out
sbb
dec
pop
ret
jnp
mov
add
pop
sbb
mov
pusha
clc
inc
je
aam
push
test
pop
pushf
scas
cmp
lods
aas
mov
inc
inc
cmp
add
cmp
insb
adc
clc
add
add
clc
pop
call
push
je
sbb
jo
xor
sbb
jp
ljmp
pop
cli
stos
xchg
mov
lock
mov
pushf
test
or
sbb
stc
cmp
push
jmp
pop
push
xor
cmp
push
clc
add
fmull
jno
adc
and
jge
rcrl
test
negl
add
xchg
test
int3
push
push
pusha
jmp
add
cmpsl
mov
and
sub
imul
jbe
pushf
dec
pushf
idivl
pushfw
inc
call
notl
leave
lret
jo
xchg
rcrl
sbb
out
test
les
loopne
pop
rep
int
call
sti
lahf
scas
lock
call
ja
sub
clc
sub
stc
cwtl
jmp
fisubrs
ret
adc
pop
test
or
mov
cmp
xchg
cmp
pop
mov
dec
inc
cmp
jmp
rcrl
mov
out
insl
hlt
mov
cwtl
add
mov
or
mov
or
subl
insb
add
push
xchg
movsl
jbe
rol
push
sbbb
adc
test
hlt
mov
mov
pop
mov
leave
pusha
push
mov
movsb
mov
xchg
scas
test
nop
arpl
pop
cmp
jge
push
stos
inc
jl
scas
icebp
les
jbe
pop
ror
call
test
push
mov
sbb
mov
ljmp
shlb
or
sbb
in
jae
inc
pop
stc
push
stc
es
jge
stc
mov
add
pop
pusha
xchg
mov
aas
and
fldt
popf
aam
inc
int
adc
add
int3
or
shr
cld
test
or
test
ficoml
insb
pushf
add
lock
clc
dec
jns
cmc
pop
gs
pop
lea
inc
out
or
rorl
fcompl
rorb
pop
ljmp
hlt
xlat
cli
repnz
jge
sbb
ficoms
dec
push
mov
push
mov
addl
push
fstpl
jmp
sbb
jmp
or
jmp
ret
outsb
jg
sbb
not
add
test
inc
ror
pop
push
decl
imul
lret
sub
adc
add
stos
outsl
fistpl
enter
adc
fsubrp
repnz
and
cmc
add
inc
jns
mov
pusha
aaa
test
fsubl
push
xchg
scas
pop
push
cs
push
mov
push
add
leave
lock
jmp
mov
adc
daa
jge
sbb
movsb
gs
insl
mov
inc
out
jnp
or
adcb
not
les
jle
xlat
imul
fcomip
test
lods
test
out
fiaddl
out
mov
or
movl
or
sbb
enter
push
lea
loope
add
jnp
call
adc
stc
jns
jge
pop
clc
iret
jmp
add
pop
push
mov
inc
ja
mov
push
adc
int
push
inc
call
out
jo
fisubs
notb
lret
cmp
fwait
dec
movsl
mov
clc
mov
popa
pushf
mov
adc
xor
xchg
push
pusha
icebp
adc
and
sub
js
insl
cld
push
shlb
pop
add
iret
jle
das
push
test
mov
test
in
rorl
cs
pop
ljmp
lods
ja
sbb
cmp
out
pop
shrl
push
jmp
pop
add
clc
lods
clc
or
pop
sbb
dec
xchg
and
rcl
data16
xchg
loop
movsl
jmp
aaa
jae
mov
rol
sub
mov
call
jp
jbe
push
bound
sahf
or
das
aaa
push
mov
jl
aaa
ss
lcall
jecxz
cld
test
pop
rcrl
ficompl
std
or
push
pop
lahf
sub
scas
fucomip
pop
std
push
icebp
mov
adc
dec
push
aaa
adc
bound
push
add
jl
push
rclb
or
pop
leave
mov
xor
mov
mov
xor
daa
jbe
jbe
or
pop
and
outsl
loopne
cmp
cmp
cmp
pusha
push
testb
dec
dec
pop
fcomps
lea
mov
sbb
or
roll
outsb
jmp
fbld
shl
test
rclb
pop
pop
call
cmovle
int3
push
rolb
add
stos
icebp
cmp
xchg
jp
ja
sti
ret
insl
sub
out
add
es
sub
push
cmp
roll
fildll
lods
xchg
jmp
int
aaa
pop
jno
ret
stos
aad
sti
push
ja
jo
mov
jb
lcall
adc
cwtl
push
jmp
andl
ret
jb
stc
cmp
lea
or
jmp
loopne
push
js
aad
pop
or
push
pop
aam
sbb
mov
ror
push
mov
decl
add
jb
lock
cmc
jecxz
jg
in
clc
dec
and
fdivr
int3
bswap
test
push
push
adc
or
add
fsubrs
cmp
jb
fstpl
mov
mov
pop
outsb
negl
popa
repnz
jl
dec
mov
sub
and
sub
test
jle
fldl
xor
ljmp
fcoml
xor
loope
xchg
pusha
inc
fiaddl
cltd
xor
adc
ljmp
aam
cmpsb
push
fidivrs
push
and
fldenv
je
mov
lcall
push
es
add
call
add
add
mov
mov
sbb
dec
loope
mov
outsl
inc
add
sub
inc
out
pop
out
sahf
mov
rcl
pusha
push
jge
xor
call
jecxz
addl
jle
add
mov
lahf
leave
in
sub
inc
out
lea
mov
cmc
std
jmp
fdivs
jge
pop
mul
xchg
mov
dec
pushf
inc
insb
fsubs
cmp
hlt
and
cwtl
loope
sbb
loopne
insb
les
cwtl
cmp
popa
movaps
je
loope
call
mov
xor
ficoml
cmp
xorl
lea
jmp
hlt
cmc
sub
rcr
mov
add
lea
call
push
and
arpl
push
shrl
adc
adc
lcall
stos
sbb
jb
repnz
shl
enter
or
arpl
push
cmpsb
out
pop
test
jg
lcall
push
push
mov
mov
andb
inc
int3
out
in
add
fbld
loopne
pop
call
jo
mov
lcall
mov
scas
push
xchg
sub
in
clc
lock
int
pushf
adc
pushl
pop
mov
push
sahf
adc
int
aad
cmp
cwtl
and
lcall
or
cli
pusha
mov
or
out
inc
cmp
add
loop
mov
cld
pushl
jbe
testl
xchg
les
pop
mov
cmp
insb
mov
sti
mov
cmp
mov
call
lds
mov
add
mov
sbbb
in
icebp
jg
ljmp
sub
inc
xchg
cmp
add
dec
push
mov
or
mov
xor
mov
sbb
aaa
and
xchg
dec
cmp
push
movl
ds
adc
arpl
jns
call
jae
jge
jp
lcall
repz
pop
mov
inc
js
pop
push
test
cs
xchg
ljmp
push
jnp
push
inc
in
out
cmpsl
push
fwait
sahf
inc
loop
inc
enter
insl
lret
call
in
pusha
push
testl
push
or
sbbb
sub
pop
in
dec
out
fisttpl
icebp
jmp
xor
jns
int
mov
inc
mov
sahf
rcrb
or
push
add
jns
pop
adc
inc
js
in
divl
icebp
jmp
cld
push
sbb
pop
add
mov
xor
cli
jmp
call
cmp
aad
push
push
jge
je
dec
addr16
jmp
loope
ljmp
cmc
jle
es
aam
adc
xor
push
ds
xchg
sbb
mov
and
clc
mov
pusha
adc
pop
or
sbb
pop
add
and
negl
mov
or
mov
fs
jae
mov
or
fs
loop
push
push
loope
dec
dec
sub
popf
outsl
shlb
mov
js
push
les
cmp
adc
test
mov
es
in
fdivr
xchg
push
cmp
fucomip
mov
leave
add
pop
xchg
rcll
cmp
xor
push
shrb
stos
shlb
stos
loope
pop
lock
push
stc
pushf
xchg
push
test
outsl
mov
push
mov
jmp
sti
fucomp
mov
in
adcl
jge
lods
jge
xchg
jg
ds
jbe
xor
adc
sbb
cmp
cmp
lods
and
jo
cmp
dec
sub
lods
pop
pop
into
leave
outsl
out
aad
inc
jl
add
decl
repz
fidivrs
fmuls
imulb
mov
jno
into
outsl
mov
mov
sar
call
dec
test
mov
mov
cmp
pop
cs
stos
test
ret
mov
sub
jo
ror
pushl
mov
sub
jns
dec
ljmp
or
jge
cmpsb
mov
cmp
dec
xchg
dec
xor
mov
aaa
sub
lret
add
cmp
or
das
adc
lods
mov
bnd
fsubs
inc
pop
mov
clc
jg
out
ljmp
lds
pusha
push
and
jl
aad
roll
std
jg
sub
and
cmp
xchg
sbb
ret
dec
push
jo
out
ljmp
daa
push
add
mov
daa
jne
or
pop
iret
or
mov
outsl
lock
std
or
lock
mov
mov
imul
dec
jo
and
insb
sbb
stos
pop
push
mov
mov
adc
jg
stos
pushl
iret
jns
pop
jecxz
aad
jne
aas
cmp
stos
loope
or
out
out
dec
pushl
decl
imul
sub
mov
inc
aaa
sbb
jmp
fdivrs
pusha
pop
push
fidivl
pusha
repnz
inc
inc
inc
add
mov
cmpsl
inc
push
sub
cli
mov
inc
xchg
push
jp
int
lahf
add
xchg
fildll
jg
inc
cs
ljmpw
dec
lock
add
push
sub
and
cld
lea
sbb
daa
mov
xor
sbb
imul
adc
push
add
sub
call
in
loopne
pop
cmp
incb
or
lods
test
daa
push
xor
dec
outsl
jmp
push
push
push
fists
jmp
mov
lret
xchg
pop
mov
mov
pop
cltd
add
shl
out
fsubrl
push
cwtl
sahf
xchg
mov
adc
fs
add
ret
jg
xchg
jl
call
lcall
mov
mov
test
push
jecxz
daa
pop
sub
and
loop
mov
jge
jmp
test
inc
repnz
xor
jge
push
arpl
js
fcmovnu
js
ret
sbb
jg
pusha
adc
jnp
jmp
inc
cli
loop
jle
inc
popf
xor
movl
cmp
cwtl
or
aas
push
jno
int3
lock
sub
mov
movsb
add
or
nop
mov
add
mov
mov
sahf
stos
xor
cmpsb
call
pop
sti
inc
pushl
jle
cmpsb
test
push
sti
and
dec
fs
fs
imul
je
pusha
hlt
aaa
add
push
test
js
and
push
fldz
sub
jp
inc
jae
xor
push
push
cmpsb
lea
push
ret
add
ja
ss
jmp
xchg
add
mov
lds
in
xchg
dec
sti
mov
lods
lea
lcall
jae
fbld
rclb
out
pop
pop
dec
and
jecxz
jl
lcall
lret
dec
inc
cld
pop
lock
and
lea
xor
sub
mov
mov
cmp
cmc
jns
in
scas
push
das
decl
cld
add
mov
inc
cmp
es
shlb
fbstp
cmc
inc
inc
data16
lahf
test
and
sbb
push
inc
mov
cwtl
mov
mov
xchg
mov
inc
sti
icebp
int
hlt
pop
jg
int
dec
in
push
ljmp
xor
add
pushf
pop
push
mov
out
pop
idivb
in
jg
mov
pop
ss
lret
pushl
daa
bound
pop
aas
lahf
inc
fsubrp
inc
sub
shr
imul
cmpsb
outsl
repz
jae
movsb
cld
or
cmp
pop
lret
mov
mull
lret
inc
sbb
pop
cmc
inc
or
cmp
inc
mov
and
cmc
ret
jp
ljmp
test
aad
jbe
mov
xchg
xchg
adc
sub
sub
les
push
xchg
test
insb
cmp
pop
inc
bound
daa
arpl
test
ficomps
loopne
mov
xorb
decl
loop
mov
cmpsb
sbb
add
loopne
insl
rcll
stc
lret
ljmp
outsl
decl
das
xor
dec
les
insl
jne
fistpll
jnp
lds
repz
jmp
cmpsb
pop
push
adc
cmp
adcl
imul
ljmp
pop
xchg
lock
xor
lods
adc
push
cmp
push
xchg
xchg
clc
test
test
test
push
pop
sub
and
clc
std
out
dec
xchg
shll
movl
out
jae
cmp
mov
mov
cmpsl
cwtl
into
rcll
xorl
arpl
pop
decb
jecxz
out
ja
push
negl
lret
pop
adc
ljmp
mov
sbb
or
mov
xchg
das
lock
rcll
call
inc
inc
inc
loopne
lea
push
mov
les
jl
xor
ror
lcall
mov
ret
pop
mov
and
jge
and
push
int
adc
mov
pop
clc
call
jecxz
bsr
sbb
iret
inc
inc
pop
push
jmp
dec
bound
lea
movd
hlt
inc
mov
mov
mov
in
push
call
mov
lods
lods
and
fidivs
aas
dec
repnz
pop
sub
xchg
cmpsb
add
sti
pushl
push
lahf
push
cmp
popf
out
or
sbb
mov
jg
push
mov
push
xor
daa
inc
fimull
aaa
mov
outsl
mov
cmp
out
popa
mov
idiv
mov
mov
nop
push
in
fcoms
icebp
loopne
ret
in
jbe
xorb
movsl
in
fistpll
fsubl
jne
loopne
cmp
cmp
push
lcall
fwait
icebp
insl
cmp
mov
jle
push
aam
mov
out
jecxz
std
mov
out
je
jg
aam
mov
cltd
push
loopne
mov
jg
ljmp
repz
lds
jbe
pop
lds
fs
rclb
lds
std
jmp
addr16
cli
movsb
jg
fcom
bound
das
ss
jecxz
icebp
out
mov
lds
adc
or
mov
movsb
outsl
lock
call
insl
mov
adc
std
mov
push
pop
nop
jns
sub
ss
cs
shlb
push
mov
mov
mov
scas
mov
sbb
xor
cmp
inc
decb
pop
cmp
xchg
lea
dec
loopne
pop
out
ljmp
addr16
jle
push
or
stos
test
or
xor
pop
loopne
mov
sub
popa
iret
fsubrs
cwtl
stos
insb
out
out
jg
lock
fidivrs
jl
cld
xchg
sub
sbb
push
das
xchg
inc
enter
pop
popa
jmp
push
aam
std
in
dec
hlt
push
fdivs
loope
sub
out
outsb
jle
sbb
cmp
jecxz
aaa
lahf
jg
dec
std
adc
inc
add
loopne
fcos
ljmp
mov
testl
adc
daa
ljmp
mov
fisttpll
ret
xchg
aam
jg
in
lahf
cli
jecxz
mov
adc
mov
stc
push
call
incl
aas
jne
xchg
or
xchg
inc
out
mov
lcall
fimuls
dec
das
dec
and
scas
dec
in
mov
mov
jmp
fldl
scas
cmpb
jle
fcomp
push
shl
jno
loop
jg
jbe
leave
sbb
jb
mov
mov
sbb
xchg
push
mov
fidivrl
dec
lret
pop
dec
inc
shlb
out
lret
xchg
mov
in
mov
or
cmp
dec
jnp
sbb
push
incl
mov
pop
fdivr
dec
movsb
add
xchg
adc
dec
fs
je
add
add
cmp
fcomip
adc
js
cmpsl
ljmp
sbbl
jbe
bound
mov
jg
incl
iret
gs
xor
stos
mov
cs
cli
test
decl
lret
cmpsb
mov
insb
shrb
xor
jo
add
add
jg
mov
sub
mov
and
or
into
bound
fildl
fdivl
stos
test
test
iret
cmp
scas
shll
dec
push
cmp
aaa
jno
jg
dec
push
and
ret
adc
push
arpl
mov
out
incl
mov
mov
push
test
pop
or
jmp
out
decl
sbb
push
mov
icebp
xor
movsb
dec
aaa
push
das
pop
stos
es
sar
inc
cmp
cmp
mov
jb
mov
stc
lcall
cld
mov
loope
sbb
jg
or
hlt
ja
ss
scas
fldt
mov
inc
jae
shrl
pusha
stc
xchg
pop
out
jmp
lds
or
clc
inc
ret
lcall
mov
and
stc
pop
movl
movsl
inc
fists
inc
addr16
outsl
cmpl
fnsave
rolb
inc
hlt
imul
pusha
ror
insl
jnp
dec
popf
jp
ljmp
mov
dec
lahf
cmpsb
sbb
mov
ljmp
roll
stc
mov
pushl
cmpsl
out
stos
mov
jae
outsb
jne
jmp
jae
sbb
not
idiv
pushl
xor
vmaxsd
insl
inc
cli
icebp
repnz
dec
sbb
mov
mov
clc
pop
jge
mov
push
js
ret
push
cmp
pushf
push
fidivl
ret
inc
add
idiv
loope
aam
mov
loopne
js
in
outsb
fdivp
fildl
repz
mov
incl
fnsetpm(287
xorb
mov
inc
sbb
jnp
cli
jp
jecxz
push
into
push
out
std
inc
jmp
adc
cwtl
and
mov
js
xchg
aas
fbld
mov
fnstsw
push
hlt
cmp
lret
cmp
add
pusha
stos
out
dec
pop
cli
repnz
fdiv
inc
dec
out
inc
movsl
mov
mov
mov
cmp
lods
sbb
icebp
cmp
call
insb
ljmp
cmc
cmc
sub
dec
hlt
fldl
loop
into
xor
sbb
add
mov
test
in
lock
lods
or
pop
ljmp
cmpsb
clc
jle
stc
inc
fimull
dec
mov
sti
stos
xor
lcall
dec
shlb
iret
dec
cli
inc
push
insl
outsl
jl
outsl
int3
jnp
nop
push
sub
pop
jmp
inc
pushf
jmp
jg
mov
adc
fucom
fs
test
sub
lcall
cld
daa
mov
cmp
ret
in
mov
xchg
mov
inc
pop
inc
test
cmp
push
sbb
fucomip
test
je
dec
sub
jg
in
mov
xchg
pop
addb
jp
mov
jg,pn
jmp
hlt
mov
mov
sbb
sahf
int3
jge
icebp
sar
test
xor
in
jne
mov
test
ljmp
std
mov
loope
stc
scas
ds
enter
jbe
sub
scas
mov
mov
add
das
and
fwait
or
mov
push
test
lods
xchg
movsl
call
lcall
aas
add
xchg
xchg
sub
sbb
push
jnp
mov
mov
mov
lock
mov
xor
pushl
xchg
cmpb
andb
push
cltd
pushf
call
decl
adc
call
test
loopne
push
ret
inc
mov
fs
clc
or
int3
jmp
je
pusha
push
push
xor
inc
xor
fbstp
and
jbe
sub
fchs
mov
mov
aad
pop
movsb
stos
pusha
push
push
pop
ds
into
adc
test
jmp
push
into
mov
lret
outsl
dec
lret
scas
fsts
inc
jmp
jno
insl
popa
mov
leave
push
adc
lret
fmull
sub
mov
mov
in
dec
hlt
pop
inc
lods
and
into
ds
test
add
xor
std
add
pop
ds
or
daa
push
cmp
das
push
xor
xor
outsl
lahf
loop
add
xor
andl
scas
or
lret
outsl
hlt
pop
fnstenv
inc
imul
test
cmp
inc
pushf
mov
incl
incl
cmpsl
fcomps
or
lock
minps
clc
mov
lock
jns
sbb
outsb
int
push
jae
out
dec
call
dec
roll
stos
mov
xchg
or
mov
mov
into
pop
mov
ds
sub
dec
dec
cmp
sub
popf
sub
ss
fistpll
pop
inc
hlt
orl
stc
cld
pop
shr
mov
vphaddubd
inc
or
lret
xchg
lcall
cmp
mov
fistps
pop
fldenv
jmp
cmp
adc
popl
cmpsb
daa
jecxz
ret
pop
rcr
pop
int
insl
lea
in
pop
iret
decl
or
xchg
aaa
xchg
sbb
sti
cmp
pop
jbe
inc
fs
cld
decl
pop
mov
test
inc
jle
cmp
mov
rorl
sub
arpl
pop
call
lahf
adc
or
xor
cmc
adc
inc
lcall
leave
mov
jl
pop
push
loopne
ss
mov
aam
jge
das
repz
cld
mov
fcomip
mov
fsubrl
incb
decl
dec
shll
aas
fildl
fisttpll
adc
ret
loop
jbe
lcall
call
and
dec
shlb
mov
pop
xor
div
aaa
call
push
mov
jl
push
fldenv
dec
pop
out
lock
or
insl
ljmp
cmc
decl
push
lods
mov
push
incb
mulb
mov
and
sbb
mov
inc
push
dec
rcl
ds
add
sub
fists
jno
xor
or
pop
shll
iret
stc
dec
pushf
mov
jmp
clc
jg
xchg
jg
lret
cmc
lock
cmp
daa
xor
pop
push
xchg
sbb
push
imulb
leave
les
cmp
push
sti
aaa
sbb
jg
and
test
sti
test
jg
push
jge
adcl
jbe
dec
mov
outsl
xchg
arpl
cmp
push
jg
cmpsb
cltd
or
aam
inc
adc
adc
sahf
and
les
ss
cltd
xorb
cmpsb
xchg
mov
in
or
or
mov
aad
mov
sbb
or
lock
incb
inc
mov
lcall
fs
xchg
xchg
bswap
mov
scas
scas
cmp
xchg
xor
and
inc
mov
das
inc
pop
dec
nop
decb
push
sub
jbe
xchg
and
xchg
dec
mov
loop
inc
pushl
jecxz
lods
or
jbe
mov
or
xchg
scas
in
sbb
jae
inc
jbe
shll
pop
bnd
adc
push
inc
cmp
pop
imul
xchg
cltd
mov
movsb
fisttpll
dec
cmpsb
pop
mov
push
add
enter
ret
mov
xor
mov
dec
pusha
add
pop
cmp
pop
mov
pop
call
fistps
mov
pop
addr16
fdivp
out
jns
call
cli
add
adcl
mov
movsl
addr16
cltd
adc
call
fs
push
iret
aam
fldenv
add
ja
outsb
enter
fistpll
jg
test
sbb
inc
mov
outsl
lock
mov
stos
jbe
xchg
push
fsubr
push
xor
mov
je
push
divl
cmp
push
or
popf
sarb
push
sbb
mov
mov
insb
mov
and
pusha
enter
dec
lcall
dec
in
jno
mov
movl
dec
out
inc
inc
xchg
or
sar
mov
push
cmpsl
mov
mov
fisubrl
mov
add
push
push
test
mov
mov
adc
mov
or
jnp
add
inc
repz
frstor
xchg
mov
bnd
insl
xchg
adc
das
mov
jnp
mov
insl
sbb
sbb
aad
subb
ret
adc
push
bound
leave
sbb
aaa
pop
mov
pushl
mov
cmp
ss
je
mov
xor
aaa
js
dec
add
aam
xchg
nop
push
loop
jno
xchg
ss
push
fs
ljmp
cmp
sub
pop
mov
test
xorb
mov
pushl
mov
lock
push
mov
mov
cmpl
dec
inc
imull
adc
outsl
nop
jmp
mov
ljmp
div
je
ret
arpl
popa
cli
or
outsb
xor
sar
incl
mov
fucom
adc
mov
test
add
mov
mov
or
push
imul
addr16
jg
arpl
shl
push
fucomip
pop
loopne
aad
incl
icebp
jno
and
enter
mov
pushl
pusha
adcb
xchg
in
andnps
inc
nop
enter
sbb
ljmp
stc
shl
and
and
pop
push
movsl
xchg
mov
ljmp
jge
pop
imul
lcall
in
lret
imul
loopne
add
aam
jp
jl
je
aas
incl
push
sub
xchg
adc
pop
mov
lret
dec
push
pusha
std
loopne
fisubrs
lret
nop
fsubl
ret
dec
sti
sub
inc
bound
decl
jle
xor
lret
push
in
push
leave
mov
mov
mov
sarl
mov
leave
andl
cld
jo
cmp
inc
popf
fldl
nop
cmp
xor
ja
jnp
cmpsb
mov
or
xchg
loope
pop
int3
pushl
adc
out
repnz
push
mov
mov
sar
pop
clc
pushf
fdivs
icebp
or
add
dec
ja
fists
adc
popf
inc
xor
mov
decl
or
sub
push
adc
lods
and
sbb
aad
sub
cs
das
aad
and
bound
test
lds
mov
rcr
aam
push
sub
test
sbb
jmp
ficomps
ljmp
hlt
idivl
sahf
mov
adc
mov
jle
movsl
repz
std
pop
mov
sbb
dec
data16
testl
ljmp
addr16
mov
es
push
pop
cs
js
and
cmp
outsl
std
ljmp
movsl
push
lahf
lret
sbb
hlt
lods
pop
inc
out
test
xchg
aad
loope
insl
fnstsw
imul
adc
cmp
lock
dec
mov
testl
jg
fadd
jmp
sbb
mov
adc
mov
push
mov
mov
mov
lock
mov
pop
test
mov
inc
mov
mov
or
outsl
shl
insb
addr16
cmpsl
mov
and
and
cmpsl
dec
lcall
xor
sbb
aam
in
imul
call
std
push
in
dec
jne
call
xchg
int3
xlat
mov
sbb
xor
xchg
and
cmp
mov
and
in
sbb
imull
cmp
inc
lcall
std
jnp
cmpsb
xor
movsl
xchg
shld
adc
fcmovu
or
in
xor
mov
jg
lea
scas
and
cli
push
int3
pusha
aam
decl
pusha
mov
pop
pop
add
stos
outsl
inc
push
mov
push
fcomip
inc
jle
ss
pop
ja
sahf
mov
cli
mov
adc
or
loope
aad
aaa
jg
mov
mov
stos
lcall
and
jg
mov
loopne
addr16
jae
push
cltd
and
xchg
adc
notb
cltd
mov
sar
pushf
lcall
dec
notl
call
jecxz
add
mov
mov
ret
cmpsb
jge
mov
mov
cmp
out
add
pop
shrb
push
je
ret
pushl
mov
aas
and
adc
mov
jmp
dec
add
xor
mov
pushl
push
push
test
leave
jle,pt
inc
adc
mov
sahf
xchg
aaa
cmp
push
repz
or
icebp
stos
dec
es
pop
push
dec
int
adc
add
mov
ds
mov
fsubl
std
sub
inc
lcall
aas
dec
add
xor
cmpl
addl
fimull
repnz
fcomps
inc
lock
addl
dec
mov
xor
fpatan
jmp
ds
lcall
push
fdiv
jecxz
sbb
scas
icebp
mov
jae
test
push
fisubrs
cli
inc
arpl
call
push
mov
mov
add
pop
movsb
out
push
mov
dec
pop
arpl
add
sbb
fsubrl
imul
mov
inc
outsl
lret
popa
sbb
push
test
pusha
sub
jno
pop
jno
idivl
pop
pop
shll
decl
dec
pop
cmp
fldpi
and
xchg
aaa
mov
xor
out
and
xchg
aam
dec
sbb
out
cmp
loopne
cli
push
mov
sbb
icebp
inc
jns
iret
jae
data16
fcompl
in
xlat
inc
add
scas
sub
outsl
dec
ss
call
jmp
adcl
jge
outsb
ja
ljmp
daa
cmp
divb
jp
mov
scas
iret
pop
shlb
cmp
lcall
daa
fwait
stos
or
sahf
push
test
dec
xlat
sahf
jecxz
test
stos
ss
call
add
outsb
out
es
nop
scas
xchg
outsb
pusha
popa
in
inc
dec
cld
jae
divb
jbe
ficompl
ja
jae
inc
rorb
and
mov
std
sbb
jle
fldt
ljmp
das
mov
jns
loopne
hlt
mov
mov
call
or
js
adc
and
sub
or
sti
or
test
sbb
fmulp
out
sub
push
out
pop
mov
jl
rcrb
std
mov
dec
into
xchg
xor
jb
std
xchg
dec
pop
ret
rcrb
sti
sub
cmp
ja
mov
test
mov
cmpl
cmc
rolb
daa
mov
test
inc
inc
sbb
in
icebp
sbb
leave
pop
incl
aam
sti
arpl
mov
fsubrl
adc
inc
imull
dec
sti
sbb
ss
ljmp
mov
sarb
dec
cld
jmp
movsb
arpl
fnsaves
fsub
jg
inc
inc
dec
mov
dec
in
insb
push
pop
fs
lods
in
outsl
or
mov
jl
ja
ds
test
fisttpl
testb
sub
adc
ja
pop
xor
mov
push
mov
lea
rcr
pop
sarb
inc
movb
divl
push
out
scas
xor
in
jge
aas
es
push
mov
cmp
mov
fcmovnu
inc
sub
push
inc
jle
shlb
rclb
mov
push
lock
ficoml
sarl
cmp
inc
iret
ficompl
movsl
dec
outsb
mov
fstl
inc
cmpsl
mov
pop
insb
and
adc
ret
push
push
shll
aam
mov
mov
cmp
xor
mov
cmp
jle
adc
lcall
jg
movsb
ss
dec
push
cmc
pop
into
or
jns
cwtl
push
push
fs
sti
inc
inc
jg
jg
incl
jecxz
pop
faddl
jmp
call
sub
mov
das
ljmp
xchg
pop
js
ja
add
sbb
add
or
mov
loope
inc
test
cltd
sbb
jo
imul
and
jge
aam
int3
aad
add
std
call
iret
cld
ja
xor
and
xchg
push
cmp
into
add
call
mov
fmul
ret
lret
loopne
inc
push
loopne
push
push
pop
clc
or
arpl
adc
xchg
incl
jno
lock
inc
ret
neg
fcmovnu
ss
fmull
cmpsb
push
and
in
outsl
lcall
cld
mov
xchg
xorb
rolb
xlat
mov
cld
in
test
mov
icebp
movsb
cmp
stos
add
scas
imul
jmp
add
arpl
push
les
pop
cli
call
cmp
xchg
ljmp
sarb
push
xor
sti
int3
int
pop
jne
or
and
pop
lret
mov
sbb
fistpl
and
gs
clc
push
in
aam
adc
mov
fbld
pusha
loopne
out
sub
std
pushl
dec
roll
inc
leave
fnsave
pop
push
fidivl
pop
js
push
jnp
loop
add
add
das
pop
cld
jo
push
fdiv
pop
sbb
fcoms
ffree
std
jb
ljmp
pop
pop
cs
mov
insl
dec
inc
sar
sub
lods
jae
sbb
hlt
lahf
cmp
lods
mov
pop
push
aas
cmpsb
push
cmp
pop
ljmp
out
out
push
bound
mov
jg,pn
sbb
pusha
rol
fistps
std
std
mov
xchg
ljmp
mov
ret
jnp
gs
lret
sar
and
pushf
mov
pop
or
sar
dec
mov
xor
jge
in
cwtl
dec
inc
and
adc
jg
int3
add
out
fsubs
adc
test
inc
pop
cwtl
xchg
popa
pop
cmp
mov
les
xchg
shr
fdivr
mov
mov
sbb
push
roll
jmp
adc
inc
insl
movsl
stc
decl
mov
ret
js
das
xchg
iret
insl
sub
or
jmp
pop
pop
inc
xor
dec
in
enter
and
aam
pop
int
stc
mov
push
addr16
insl
cmp
sbb
cmp
repnz
ss
mov
mov
movsb
sub
fadds
xchg
lcall
mov
mov
push
js
in
sbb
sub
push
call
mov
pusha
sub
cmp
sbb
popa
sub
jne
mov
pop
call
in
aad
ss
testw
xor
addb
sub
push
movsb
movsb
movsl
rolb
daa
das
lcall
test
sbb
push
loopne
sbb
pop
xchg
push
mov
ret
lret
idiv
inc
jae
and
int3
jge
popa
inc
insl
push
xchg
fiaddl
in
repnz
in
mov
adc
aaa
frstor
inc
test
in
cmp
xor
lea
movsb
inc
lretw
addl
sahf
jo
call
mov
dec
fs
xor
fisttpl
xchg
loope
incl
adc
push
dec
fisttps
addr16
mov
jmp
add
test
add
das
sub
jge
leave
in
jmp
repnz
mov
in
fisubs
adc
test
insl
xchg
icebp
jno
stc
lcall
sbb
cmpsl
fs
daa
sub
rorb
cmp
pop
mov
fldl
cmpsl
in
xor
jg
mov
in
xchg
outsl
pop
daa
push
dec
loopne
sti
fwait
decl
sbb
mov
dec
dec
xor
aam
push
out
daa
adc
out
outsl
jl
and
xchg
add
cwtl
add
in
push
xor
insl
push
cmpsl
and
jg
int
sbb
sbb
into
fdivrs
dec
fildl
mov
pop
jmp
ret
jl
cmp
enter
sub
add
ja
fsubrs
jo
lahf
insb
jne
clc
dec
dec
sar
mov
ret
and
call
inc
jb
lcall
and
mov
mov
or
fwait
repnz
mov
in
adc
inc
push
sub
dec
cmpsl
jle
aad
mov
data16
jmp
sub
cmpsl
leave
outsb
and
loope
cmp
frstor
bound
mov
dec
inc
jbe
xchg
imulb
insl
test
fidivl
movsb
cmpsb
loopne
inc
stos
cmp
idivl
rol
add
jg
xchg
cmp
pop
pop
push
push
rorl
mov
call
sbb
mov
mov
xlat
mov
mov
mov
mov
ret
stc
jmp
shlb
mov
into
fisttps
jne
out
jmp
scas
jl
jge
mov
vaddps
je
call
jb
aad
push
xchg
test
xchg
lods
nop
inc
mov
lcall
xchg
jbe
test
fidivrl
mov
mov
or
xchg
gs
push
push
inc
and
shr
and
cwtl
add
stc
out
pop
lcall
sub
cmp
lock
das
das
mov
insl
pop
sub
dec
stc
mov
add
int3
cmpsl
mov
mov
enter
cmc
jmp
xchg
pop
roll
out
push
enter
and
push
dec
or
push
cmc
sub
adc
outsb
ss
jg
cmp
fldl
aad
jmp
arpl
aaa
movsb
scas
in
dec
stos
cli
fcomip
enter
dec
inc
out
fimull
xchg
adc
push
shlb
ud0
cld
test
call
xor
cs
fildl
sahf
cmp
jmp
into
push
ret
pop
jge
adc
test
inc
nop
mov
jno
cld
das
lret
xor
xor
xchg
jge
lds
cmp
mov
pop
dec
stos
adc
sbb
jb
jg
mov
mov
push
push
and
fdivl
and
out
xor
rcrl
pusha
fldt
pop
loopne
sahf
fnsave
cli
jg
pop
mov
pop
out
push
ret
data16
iret
clc
jg
jmp
mov
in
and
enter
loope
aas
push
outsl
std
call
jbe
xchg
mov
lds
fidivrl
dec
stos
sub
pop
mov
fbstp
call
xor
cmpsb
shlb
decb
ds
call
aas
cli
xorl
mov
push
out
fisubrs
mov
pop
push
mov
bound
push
pop
pusha
jns
test
cmp
lret
outsb
push
cmc
loope
cmp
dec
addr16
mov
xchg
arpl
push
seta
sbb
dec
stos
pop
mov
iret
decl
xor
xchg
in
or
mov
subl
adc
fcomp
push
repz
imul
inc
imull
push
jle
jg
xchg
ljmp
outsl
es
jg
aaa
lret
jo
cltd
frstor
arpl
aaa
dec
push
mov
les
shrb
int
sub
lcall
lret
or
push
xor
addb
jl
imul
mov
in
call
lcall
test
pop
cltd
mov
rorl
aad
bnd
mov
or
pop
jb
mov
psrld
out
sbb
cmp
jge
test
xor
lret
pusha
push
mov
fcompl
cli
mov
jb
xor
mov
push
leave
test
loope
sbb
aaa
sahf
mov
mov
clc
lea
and
dec
xchg
rcrb
imul
xchg
jg
jmp
lea
mov
ret
jno
adc
rol
jg
movsl
jmp
or
pop
xlat
rcrb
mov
jg
jp
in
dec
shlb
aam
pop
ret
ljmp
dec
lods
lods
popf
shll
add
adc
or
jg
pop
stos
movsb
cmc
and
into
test
sub
sub
dec
push
fidivs
push
push
int3
push
jo
sub
subl
mov
xor
push
fs
mov
pushl
xchg
sub
arpl
xor
scas
out
or
jne
inc
fsubrl
mov
pushl
pop
loop
movsl
mov
mov
call
in
cs
xbegin
pop
fnstcw
inc
pop
ds
enter
lock
data16
insb
ds
xchg
fldl
cld
das
dec
cmp
frstor
popa
cmp
data16
xchg
hlt
pusha
mov
mov
mov
cmp
pop
dec
sbb
movsb
mov
decl
mov
jo
popa
outsb
push
xor
sub
mov
fcompl
cmpsl
ficomps
or
repnz
das
lock
js
adc
pop
adc
mov
dec
mov
das
push
mov
dec
int
add
sbb
cmp
jmp
fildll
aaa
fsubrl
out
imul
sbb
lds
das
stos
push
cld
in
pop
stos
aad
call
push
fwait
dec
push
dec
or
les
repnz
mov
cmp
pop
je,pt
nop
lods
les
hlt
aas
clc
aas
add
add
enter
xor
sbb
and
sub
xor
cmp
inc
xor
data16
mov
test
scas
xor
jno
test
xor
popf
xor
xor
xor
xor
test
call
add
xor
mov
xor
xor
xor
xor
xor
xor
xor
xor
dec
xor
ja
test
outsl
icebp
pushl
daa
ss
jle
lds
pop
jecxz
shlb
sbb
aaa
cmp
push
aaa
xchg
aaa
mov
mov
cld
aaa
add
push
cmp
insl
cmp
mov
cwtl
cmp
cmp
cmp
clc
cmp
cmp
cmp
cmp
ss
mov
xchg
cmp
push
or
dec
cmp
pop
cmp
adc
cmp
cmp
cmp
sub
cmp
mov
fwait
cmp
cmp
cmp
cmp
mov
cmp
mov
mov
cmp
cmp
cmp
cmp
outsl
clc
dec
cmp
cmp
daa
ds
aaa
sub
repz
ds
xchg
das
add
adc
fists
jle
or
sbb
sbb
xor
pop
xor
xor
mov
and
xor
xor
lock
xor
xor
int
mov
xchg
ss
mov
aaa
sbb
and
xor
inc
aaa
push
aaa
arpl
outsb
aaa
jg
xchg
aaa
pushf
aaa
lret
aaa
shll
aaa
loopne
cmc
aaa
cli
aaa
add
cmp
cmp
cmp
jmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
mov
fbstp
inc
icebp
cmp
cmp
cmp
cmp
fnstsw
hlt
cmp
cmp
icebp
call
sbb
and
cmp
cmp
cmp
add
cmp
sti
idiv
jecxz
add
push
cmp
add
push
cmp
aas
cmp
sarb
insb
aas
sarl
rol
jno
js
jle
xchg
fildl
xor
xor
xor
xor
test
mov
adc
jb
jle
add
xor
js
add
or
adc
inc
mov
std
pushl
fnstenv
divl
pop
cmp
jge
lds
stos
add
dec
cmp
cmp
decb
cmp
and
in
lret
cmpsb
cmp
cmp
cmp
cmp
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
out
cmpsl
pop
cmp
cmp
fnstcw
mov
fcoms
call
pusha
aas
xchg
aas
stos
aas
mov
or
ret
loopne
add
repz
xor
jmp
xor
xor
xor
test
fwait
xor
xor
xor
xor
jge
test
hlt
decl
xor
xor
xchg
xor
xor
xor
xor
sub
aaa
mov
mov
aaa
xchg
aaa
lods
aaa
mov
fucomp
aaa
decl
cmp
cmp
cmp
cmp
sbb
push
cmp
xlat
cmp
cmp
jo
cmp
ret
test
cmp
cmp
das
cld
incl
cmp
cmp
cmp
cmp
cmp
cmp
cmp
push
pushl
mov
cmp
repz
pop
xor
inc
ds
fwait
pop
imul
movsb
ds
out
jg
mov
aas
incb
add
fisttps
add
xor
push
xor
xchg
cli
jmp
push
jae
xchg
xchg
xor
aam
jne
jnp
xchg
xor
xor
xor
arpl
jb
jl
xchg
xor
aam
fbstp
jmp
push
xchg
divb
sub
xor
xor
outsl
add
movsb
xor
xor
xor
xor
xor
sysenter
pop
pop
xor
dec
pushl
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
jecxz
pushl
dec
xor
jne
xorl
xor
divb
or
or
ss
fidivs
icebp
incb
cld
and
dec
aaa
push
aaa
pop
aaa
jle
movsl
aaa
fidivs
lock
test
mov
insl
sbb
cld
lcall
cmp
cmp
push
shll
pushl
or
or
insl
cmp
stos
dec
leave
xchg
cmp
cmp
cmp
cmp
cmp
add
push
cmp
clc
jmp
mov
ss
ss
lea
ja
pop
shlb
push
call
ss
pop
das
mov
aas
gs
imul
jg
out
nop
aaa
popf
test
aaa
shlb
in
aaa
clc
aaa
pushl
push
arpl
cmp
dec
icebp
cmp
pusha
mov
cmp
cmp
cmp
cmp
cmp
inc
cmp
lahf
je
jns
xchg
fmul
inc
out
mov
adc
sbb
cmp
pop
cmp
out
cli
das
lock
xchg
sarb
scas
cmp
cmp
jg
cmp
cmp
and
sub
xor
popa
cmp
jo
mov
xor
add
clc
mov
cld
cmp
and
jo
jmp
cmp
rol
sarb
insl
aas
nop
aas
xchg
aas
test
mov
test
lods
adc
fcomps
mov
xor
xor
xor
outsl
cmc
xchg
xchg
jge
test
or
xor
pop
xor
icebp
pushl
test
jecxz
hlt
xor
push
xor
xor
xor
xor
xor
xor
das
hlt
pushl
xor
xor
xor
xor
xor
add
or
adc
cli
jmp
cmp
inc
ss
ss
ss
ss
dec
std
sub
xchg
mov
fcmovnb
cmpsb
pop
xor
ss
ss
ficoml
add
pop
aaa
sbb
scas
jg
dec
movsbl
stos
shlb
out
out
aaa
stc
cmpsl
ret
pop
pushl
cmp
push
cmpl
cmp
cmp
scas
outsl
hlt
jg
cmp
jb
js
jle
test
pop
adc
incl
sarb
cmp
cmp
cmp
jp
jne
or
sub
sbb
or
sarb
cmp
xlat
aaa
fildl
jo
adc
and
add
mov
jns
mov
idivb
mov
pop
jl
fmuls
rcrl
cltd
cmp
enter
popf
fstps
cltd
cmp
cltd
andb
out
aas
sub
sub
mov
enter
and
and
insl
and
xor
add
inc
daa
pop
movsl
push
or
pop
js
pop
mov
add
mov
and
cmp
or
fnstenv
inc
aaa
loopne
pop
in
jb
lock
sub
nop
jmp
rcrb
and
jg
pcmpgtb
and
add
cmp
mov
add
jnp
or
and
in
loope
jb
jb
inc
add
jae
add
daa
inc
out
dec
adc
insb
adc
aam
daa
adc
ret
add
enter
mov
inc
and
nop
fdivrl
and
add
pop
add
jl
and
push
add
pop
enter
inc
and
fwait
xchg
cmpsl
nop
sbb
xchg
adc
nop
pop
nop
daa
mov
mov
and
and
add
lea
sub
pop
xchg
pop
pop
mov
adc
ss
pop
imul
or
mov
data16
je
sub
xor
add
and
cmp
mov
inc
xor
inc
sahf
add
and
inc
jle
stos
adc
add
inc
push
repnz
in
sub
jl,pn
and
and
dec
mov
inc
and
adc
add
adc
push
call
repnz
jle
adc
add
xor
adc
data16
push
pop
or
xor
adc
and
pop
add
mov
enter
xor
add
stc
jns
dec
add
xor
inc
inc
and
inc
and
xor
cmp
adc
fs
repnz
cmp
adc
enter
xchg
adc
adc
repz
mov
aaa
and
mov
das
add
and
fistl
add
or
jae
and
mov
and
test
xor
xor
das
or
and
ficoml
add
and
xchg
jl
inc
and
inc
and
cmp
inc
and
jecxz
push
pop
push
pop
mov
mov
rep
or
jp
push
xchg
out
pushl
ret
mov
pusha
fstps
inc
adc
js
or
adc
rorl
mov
adc
mov
xchg
leave
or
les
pop
jae
movsl
fdivrl
ja
mov
fcoms
cmp
cmp
sub
ja
dec
mov
mov
in
fiadds
sub
inc
cwtl
flds
jp
je
int3
insl
jnp
push
sbb
shr
cmp
lahf
int
ficomps
push
jne
ret
out
sbb
pusha
or
push
add
stos
inc
cmp
push
popf
hlt
xor
add
push
jno
push
xchg
xor
mov
or
xor
sub
hlt
and
mov
or
les
mov
sbb
fwait
or
and
xchg
sbb
pop
push
inc
ficomps
andl
bound
pop
in
out
pop
and
decb
dec
dec
ss
les
xchg
repnz
mov
hlt
imul
xor
sub
fmuls
pop
mov
divb
mov
insb
sahf
insb
dec
addr16
gs
inc
jg
mov
sbb
or
rorb
jb
loopne
loop
cmpsb
jmp
gs
dec
imul
imul
pop
faddl
pop
out
aad
push
mov
shl
pop
inc
jae
and
add
inc
xor
cmp
jge
dec
sub
jae
jbe
cld
aaa
dec
call
sbb
clc
call
or
jg
popa
jae
mov
push
push
mulb
out
sbb
xchg
xor
in
or
testb
stc
lea
xchg
insl
jno
dec
sbb
jne
nop
dec
inc
mov
fcompl
or
negb
pop
icebp
mov
pop
dec
xor
mov
sbb
cmp
sahf
rcrb
pop
inc
fmull
inc
or
dec
or
xor
sbb
ret
fsubl
sbb
inc
inc
mov
test
push
test
nop
inc
jmp
xchg
jmp
in
test
pop
or
mov
mov
inc
push
icebp
repnz
push
ljmp
lret
and
cmp
fwait
pop
push
jecxz
inc
add
cmp
jl
adc
lock
jne
lds
add
mov
and
or
stc
adc
mov
sub
mov
mov
push
idivl
push
jb
mov
lret
popa
outsl
outsb
gs
mov
lret
jae
cs
fldcw
es
aad
insb
xlat
popa
lret
mov
inc
outsl
jne
arpl
cmpsb
fwait
sub
cmp
loopne
pop
mov
sbb
fisttps
bound
fs
sti
xor
call
dec
or
lahf
addr16
movb
mov
test
dec
sub
mov
jb
je
enter
lret
daa
je
nop
int3
adc
push
daa
daa
addr16
jp
rcl
and
daa
daa
rcl
daa
add
sar
in
adc
jne
movb
popa
aas
std
enter
int
xor
std
mov
shlb
or
test
int
std
js
ja
fsubp
aad
jne
cwtl
add
lcall
pushf
cli
xchg
lahf
xchg
mov
pop
mov
sbb
push
push
inc
sub
das
mov
xor
push
jp
fisubl
mov
push
jge
inc
mov
outsl
ret
cmp
je
jns
jne
mov
push
sbb
sarb
xchg
inc
pop
jbe
mov
push
adc
int3
jge
lcall
decl
push
decl
jne
in
sub
incl
dec
add
adc
sub
add
dec
push
call
push
repnz
inc
inc
and
jmp
sub
add
pushf
xchg
xchg
xchg
push
or
xchg
xchg
xchg
xchg
xchg
xchg
xchg
sbb
addl
ficompl
sbb
enter
push
mov
rorl
jnp
mov
nop
push
xchg
std
pop
xchg
std
xchg
and
xchg
std
xchg
std
xchg
std
inc
push
in
xchg
std
lret
mov
or
sub
js
insb
outsl
jb
imul
mov
icebp
add
or
xor
pop
push
mov
addl
addl
mov
mov
in
sbb
xchg
or
lods
insl
imul
cld
lcall
jns
xor
add
out
outsb
mov
shll
repz
hlt
xor
imul
add
fldenv
mov
push
jmp
xor
into
lea
dec
sub
pop
xchg
lea
mov
outsl
add
add
jns
add
mov
sub
mov
insb
popa
jne
arpl
or
mov
mov
jno
imul
xchg
sbb
fbstp
gs
outsl
cmpsb
fwait
sub
jb
cs
xchg
and
fdivl
pop
cs
out
out
call
push
inc
push
xchg
push
add
xchg
pop
add
movsb
add
and
aam
add
les
xchg
xor
lret
call
xchg
mov
push
jo
adc
or
fwait
je
push
mov
daa
dec
xchg
mov
jge
ja
jo
call
jp
push
inc
mov
pop
xor
arpl
or
mov
out
sbb
pop
fdivl
mov
repnz
push
or
cmc
in
repnz
jl
or
sub
mov
jne
adc
cltd
mov
mov
add
cmpsb
sbb
cmpb
xchg
inc
aad
mov
add
es
sahf
pop
push
add
pop
ss
adc
call
add
es
enter
mov
rclb
mov
cltd
in
lea
push
sbb
pop
mov
or
js
mov
rcrb
test
mov
push
aaa
dec
mov
mov
stc
out
int3
push
insb
xchg
adc
cmp
push
inc
mov
inc
into
jle
push
js
xor
pop
mov
push
out
add
stos
js
or
mov
or
jo
add
adc
repz
mov
pop
pop
mov
or
add
push
repnz
add
xchg
pop
inc
and
add
jo
aaa
loopne
adc
repnz
cltd
adc
mov
sub
pop
inc
push
add
and
dec
xchg
in
in
push
add
sub
repnz
xchg
pusha
inc
and
add
add
mov
enter
cmpsb
sbb
inc
cs
push
sbb
stos
push
adc
adc
sbb
or
and
lods
sbb
sbb
jnp
push
popf
push
cmp
adc
jmp
out
sub
jae
sub
mov
or
loope
xor
sub
pop
cwtl
inc
and
add
add
add
xor
mov
inc
mov
insb
add
mov
add
xor
ss
push
pusha
insb
je
dec
shll
cwtl
lods
ret
xchg
dec
rcl
out
inc
fmulp
cmpsb
imul
insl
lcall
xchg
add
xor
mov
cmp
xlat
or
xchg
dec
stos
pop
add
dec
push
xor
add
movsb
mov
xchg
sub
inc
cmp
inc
dec
dec
jo
or
dec
adc
inc
sub
aam
cmp
pop
or
mov
sbb
outsl
mov
mov
popa
jns
jne
jae
xor
lods
or
jge
popa
dec
insl
push
iret
fcoms
js
inc
aaa
stc
sbb
lods
js
push
dec
push
dec
mov
pushl
jae
sub
push
push
dec
sub
pop
xor
jg
dec
and
mov
inc
fdivrs
gs
divb
adc
rolb
jae
sbb
xchg
movsb
inc
inc
gs
out
and
and
mov
pop
dec
adc
adc
lds
lds
push
add
and
xchg
push
inc
negl
add
mov
inc
mov
sbb
pusha
push
add
enter
adc
or
pop
adc
popf
xor
or
jno
pop
lcall
or
jp
outsw
es
mov
repnz
adc
push
mov
addr16
pusha
ja
inc
rol
add
inc
jae
push
mov
push
outsb
jb
loopne
sub
and
js
inc
ret
sub
adc
mov
test
add
enter
mov
and
or
leave
mov
test
jns
sub
lea
popf
cld
inc
add
insl
dec
jae
mov
or
jg
push
push
xor
add
inc
xlat
or
add
punpcklbw
in
add
add
es
inc
lcall
xor
sbb
cld
aaa
pop
xchg
or
fsubs
test
mov
shrl
out
lock
cld
add
dec
sbb
sub
ss
shll
pop
out
clc
or
imul
xor
jge
add
mov
add
push
push
xchg
inc
arpl
mov
mov
add
fwait
xor
dec
ss
inc
push
push
add
pop
adc
inc
jl
loope
pop
lea
jne
add
or
orb
mov
push
sarl
xchg
pop
adc
ss
ret
xchg
clc
push
in
adc
out
cmp
jne
or
inc
mov
pop
lock
adcb
xchg
cwtl
lea
mov
add
outsl
jns
rorb
xor
cmpsl
popa
mov
pop
push
xor
or
les
xchg
inc
add
xor
adc
stc
in
movsl
fcmovnbe
cmovno
imul
and
add
fs
rorl
add
add
add
and
xor
lret
add
push
lcall
add
xor
or
std
jae
dec
add
add
decb
sbb
fnstenv
xchg
scas
sbb
sub
add
adc
jmp
push
or
mov
cmp
xor
int
fnstsw
jecxz
inc
and
xor
add
mov
and
popa
int3
cmp
mov
jae
add
addr16
fnsave
or
jo
imul
xchg
pop
add
loope
adc
gs
sbb
cmp
sub
xor
add
leave
xchg
insb
popf
mov
imul
pop
dec
or
or
iret
jge
jo
popf
addr16
pop
jae
sbb
adc
xchg
pop
xor
fsubl
outsb
xor
inc
push
sub
pop
fs
or
daa
fs
es
dec
imul
push
daa
jbe
ret
jl
inc
test
test
dec
je
and
push
ret
xor
scas
jmp
gs
imul
and
mov
outsb
push
insb
cmpsl
xchg
and
add
jg
out
sbb
rolb
push
xor
xor
ljmp
inc
aad
xor
mov
shlb
xor
xor
pusha
xor
std
mov
xor
xor
pop
jns
mov
fwait
xor
pop
sarb
addr16
xor
cmp
xor
xor
xor
and
cs
xorb
xor
aas
ss
jg
push
mov
mov
aaa
xchg
and
mov
cmp
push
cmp
cmp
cmp
cmp
into
cmp
cmp
sbbl
push
cmp
lods
cmp
repz
lret
pop
mov
out
cmp
cmp
out
cld
cmp
adc
clc
jo
cmp
mov
xor
xchg
xor
xor
xor
sti
filds
xor
mov
lahf
xor
xor
xor
xchg
pop
mov
xor
in
xor
sub
push
jp
fisubl
ss
in
mov
aaa
xor
fwait
jmp
sub
xor
mov
lret
cmp
cmp
int
cmp
cmp
adc
or
add
or
mov
addb
and
xchg
and
xchg
add
add
mov
add
ficompl
xchg
enter
push
mov
inc
xor
xor
dec
or
mov
pop
sti
add
cmp
jae
jne
push
add
fbstp
sldt
or
mov
cmp
mov
ja
add
add
lret
lret
jae
ret
add
mov
sbb
add
jbe
ret
sbb
movsb
pusha
shrb
push
nop
mov
and
and
inc
or
sub
movsb
add
int
mov
add
or
add
add
adc
xor
dec
stos
pushf
je
fs
adc
or
or
sub
adc
push
sub
add
sidtl
les
mov
popl
aaa
or
nop
int
inc
add
pop
add
dec
and
nop
mov
loope
leave
stos
and
and
adc
add
adc
jnp
inc
adc
pop
and
add
dec
mov
adc
sub
daa
dec
add
add
rorl
add
add
add
add
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
