sbbl
mov
iret
incl
xchg
gs
imul
xchg
sbb
in
fcmovnbe
lds
stos
fwait
xorl
lret
mov
pop
dec
aaa
sub
cltd
les
xchg
gs
add
mov
incl
jmp
add
mov
lea
rcrl
js
js
xchg
repnz
stos
mov
out
adc
add
lcall
lea
cwtl
lcall
lcall
mov
imul
xchg
fwait
call
cwtl
xchg
xchg
sahf
xchg
fwait
call
inc
test
cwtl
popf
mov
into
int3
rcrl
cmpsl
lcall
cli
adc
lock
lock
imul
mov
xchg
clc
test
popf
lea
mov
in
add
loope
iret
lret
je
jle
xchg
idivl
inc
lret
fwait
lcall
je
mov
and
add
test
por
scas
lods
cmp
mov
sbb
sahf
aaa
mov
hlt
xor
xchg
cld
xor
xor
xchg
xor
xor
das
hlt
cs
cld
sub
adc
and
mov
les
call
and
and
aam
enter
scas
cld
push
mov
sbb
sbb
and
push
mov
fcoms
mov
enter
or
mov
or
or
pop
or
cld
add
add
xchg
push
xchg
dec
subb
pop
cmp
subl
aaa
out
paddusw
or
add
sub
pop
les
mov
test
je
adc
je
idivl
mov
int3
aas
and
dec
add
jb
addr16
cmp
xlat
stos
scas
test
ljmp
aas
mov
in
ljmp
inc
inc
lret
cmpsb
mov
icebp
repz
out
pop
fsubl
xchg
and
add
xor
cmp
repnz
movsb
ss
jl
jecxz
rorb
insb
ljmp
test
inc
bound
out
repz
notl
je
jbe
stc
pop
cli
adc
ficomps
test
cmp
xchg
stc
orl
xchg
mov
mov
loopne
dec
mov
inc
xor
add
int3
and
or
loop
out
fbld
pop
in
loope
les
pushf
xor
xchg
cld
xchg
movsb
mov
jl
dec
mov
test
jmp
mov
movsb
adc
fdivrs
mov
jge
scas
jg
ret
mov
movsb
pop
das
dec
mov
push
jmp
pushf
mov
repz
dec
dec
lret
xor
in
pop
scas
jae
ds
jae
scas
sub
iret
in
xor
xchg
push
shl
mov
call
bnd
repz
xchg
nop
jp
cmpsl
mov
testl
loopne
or
pop
in
inc
repz
dec
cmp
dec
cmpsl
sti
movsl
iret
and
jmp
jecxz
inc
fwait
lock
pop
mov
fistps
xchg
mov
jl
ss
cmp
mov
out
mov
hlt
negl
jnp
dec
pushl
jmp
pusha
imul
ret
dec
push
inc
and
dec
and
repz
push
jp
repnz
out
mov
in
stos
jmp
outsb
out
stc
jne
sub
mov
mov
cmp
loopne
sbb
cmp
stos
dec
adcl
std
ljmp
iret
jmp
lock
ljmp
loopne
std
fildl
jb
push
stos
in
xchg
add
mov
inc
sub
mov
mov
movsl
in
mov
aad
xlat
inc
int3
fildl
dec
test
dec
inc
aam
pop
or
outsl
ljmp
push
pop
and
cmp
ds
mov
scas
and
mov
lods
cmp
call
test
aam
fildll
sub
stos
fsubs
arpl
sbb
shr
pop
dec
shrb
push
adc
das
test
inc
mov
mov
sti
aas
into
add
and
jb
jae
mov
mov
or
lods
test
jb
dec
dec
sti
jg
pop
out
aas
inc
out
adc
jb
push
repnz
cltd
push
inc
xor
lods
push
xchg
xor
inc
xchg
or
jne
cld
cmp
adc
lret
cmp
jl
dec
mov
andl
test
sub
cmp
and
int
xor
cmpsl
pop
jmp
mov
pop
iret
test
adc
cmpsl
rorl
aad
jnp
das
lds
call
jne
cmpsl
mov
or
xchg
mov
test
cmpsb
push
push
add
leave
mov
cmpsb
repz
cmp
test
and
add
push
and
fimuls
pop
cmpsb
gs
iret
cld
mov
cmpsb
gs
lcall
cmpsb
inc
idiv
mov
xchg
cmc
mov
hlt
inc
hlt
stc
xor
jl
xor
dec
cli
hlt
adc
jb
scas
lods
pushl
cld
ljmp
ss
imul
pop
sbb
scas
or
repz
ljmp
hlt
cmp
mov
shll
sub
stc
adc
jb
stc
xor
xor
shll
pushf
xor
inc
xchg
ja
cs
lods
repnz
dec
repnz
inc
cli
add
mov
inc
addr16
push
xchg
sub
jb
ljmp
test
cld
add
mov
ds
aas
cli
in
inc
lret
cmp
inc
jnp
lea
pushf
cmp
lock
add
add
xor
popf
xor
fmull
pop
add
mov
lret
int3
sub
sub
and
push
sub
xchg
repnz
add
lea
addr16
push
ljmp
cltd
add
push
or
fsubrl
or
outsl
xlat
das
xchg
inc
push
xchg
inc
stc
sub
inc
xor
ss
xchg
dec
test
add
fcoml
hlt
leave
imul
dec
or
xchg
mov
nop
ror
mov
xchg
mov
dec
insl
iret
rolb
inc
stos
mov
xchg
hlt
xchg
push
out
fwait
pushf
or
hlt
dec
ds
leave
popf
rorb
lret
cli
je
add
xchg
arpl
bnd
mov
inc
sarl
add
in
mov
cmp
inc
lahf
push
cmp
xchg
push
jl
aaa
xchg
jae
dec
jmp
stc
push
mov
nop
int3
aaa
cmp
lcall
or
popf
shl
xchg
cld
ret
mov
pop
loopne
cltd
mov
ss
lahf
stc
mov
popf
inc
add
jb
scas
stc
pop
inc
scas
pushf
inc
pop
mov
pop
push
ret
out
mov
lods
fadd
fwait
scas
mov
sbbl
mov
loopne
sbb
push
ds
mov
roll
mov
adc
movhps
ret
inc
jle
in
out
push
or
xchg
pop
int3
cmp
push
out
jmp
inc
add
fdivrp
ret
sub
mov
jmp
je
loopne
hlt
xor
fidivrl
fidivl
xor
hlt
lock
xchg
outsl
out
imul
xorb
jmp
push
hlt
sar
int
and
cmpsl
call
je
repz
je
mov
push
cmp
arpl
fisttps
in
jnp
mov
scas
jp
aam
dec
fwait
ds
mov
mov
xchg
jge
stos
aad
mov
mov
fildll
scas
mov
mov
jmp
call
xchg
out
std
stos
stos
es
incl
fcom
fwait
cld
ljmp
pushl
ja
repz
sti
cld
add
inc
loopne
stc
aas
stc
mov
loopne
icebp
shr
nop
add
dec
divb
fiadds
mov
stos
xchg
xchg
inc
lea
add
sahf
xchg
xchg
nop
mov
popf
lcall
std
mov
nop
fwait
lcall
repnz
fstpt
or
cld
push
pushf
rorb
clc
cmp
data16
dec
and
or
data16
adc
inc
data16
clc
lods
xchg
pushf
xchg
and
out
or
pop
scas
mov
out
dec
inc
adc
jbe
dec
icebp
fdivp
stc
repz
cmovb
out
cld
cli
clc
std
rcll
clc
scas
repz
daa
ds
out
clc
stc
outsl
das
jb
pop
test
mov
fs
loope
leave
or
popf
mov
popf
aas
jg
rcrl
lcall
jmp
pop
cmp
lea
adc
jecxz
les
hlt
hlt
fdivrs
pop
inc
into
cld
jae
sbb
leave
jge
add
loopne
ror
mov
xchg
cld
push
dec
cmp
adc
mov
daa
std
iret
add
aad
mov
mov
mov
lret
mov
dec
inc
xor
sub
mull
mov
mov
test
fwait
stos
inc
adc
mov
lret
lcall
imul
xchg
jge
scas
movsl
xchg
jmp
mov
and
jge
dec
cltd
movsb
outsl
add
iret
int
aad
int3
sub
mov
and
ret
mov
in
insb
shll
scas
popl
inc
xlat
jle
xlat
jp
sub
xchg
out
repz
xchg
out
test
data16
lret
push
shl
in
out
repz
leave
sti
sti
shll
insb
cli
jmp
aam
jmp
outsb
jmp
cmpb
in
sbb
cld
jmp
repz
mov
bnd
sbb
jmp
cld
jmp
out
daa
aam
jecxz
mov
pop
and
daa
xor
dec
mov
cmc
add
ficoml
int
test
or
test
xor
ret
mov
jl
out
jne
cmp
stc
mov
test
scas
cmp
sub
lock
inc
add
rcl
cmp
stos
pushf
and
in
lahf
dec
scas
stc
pop
fucomi
xchg
out
jnp
mov
sub
inc
lahf
js
aas
sub
mov
rorb
mov
pop
sbb
in
gs
xor
sbb
pop
add
lret
sbb
push
fbld
repz
int3
and
mov
fwait
fwait
dec
imul
lret
jg
les
out
lods
pop
pop
aaa
dec
and
in
inc
stc
pop
rolb
mov
jmp
add
dec
xlat
mov
loop
sti
notb
mov
out
mov
mov
scas
outsb
sbb
lahf
jnp
mov
lock
faddl
inc
ret
inc
out
idivl
pop
cli
testb
or
cmp
cld
mov
insb
int3
jne
in
test
add
adc
cwtl
dec
out
je
jns
mov
inc
mov
pop
fwait
rclb
bound
xchg
xchg
mov
loope
adc
lcall
inc
out
cli
sbb
test
dec
pop
fidivrs
test
push
lods
adc
mov
ret
mov
hlt
cs
inc
jbe
add
int3
inc
sub
hlt
jle
pop
test
js
dec
lock
test
adc
push
xchg
aad
add
jbe
mulb
cmp
and
push
or
mov
shrb
scas
add
cltd
iret
scas
int3
imul
sti
dec
adc
cmp
mov
cmp
fstpt
push
in
inc
or
cmpsb
in
add
test
lret
shl
cmc
xlat
mov
mull
xchg
std
pop
stos
adc
ret
sub
pop
iret
loop
dec
pop
js
cli
push
push
bound
loop
fdivr
in
cmc
mov
and
mull
fcompl
sbb
inc
dec
and
lahf
lock
movsl
cli
dec
rorl
mov
mov
mov
in
repz
ljmp
cwtl
loopne
lcall
cmp
icebp
dec
repz
ret
addr16
pusha
jno
cli
lds
lods
pop
ret
in
cmp
sub
test
out
repnz
mov
cltd
push
sub
inc
adc
mov
cmp
imul
lahf
xchg
pop
sar
fwait
pop
test
cmp
loope
jbe
clc
sbb
fwait
nop
cmpsb
imul
mov
imul
rcll
imul
lcall
lret
and
inc
xchg
and
cwtl
cld
and
and
pop
lret
push
inc
in
pop
sbb
outsl
add
add
xchg
push
ret
divl
scas
cli
daa
scas
in
jl
mov
jl
jmp
lds
and
cli
pop
xchg
imulb
scas
lahf
push
shr
sub
xor
pop
sbb
clc
xor
lods
lods
cld
mov
cmp
adc
aad
push
out
mov
jns
lahf
out
jge
jae
pop
mov
cmp
subb
ljmp
sub
aam
sti
cmp
fcomi
xchg
shlb
dec
mov
mov
or
cltd
jle
and
ret
fldcw
mov
shl
mov
popf
pusha
jbe
and
or
mov
mov
lock
sub
out
xorb
or
adc
mov
mov
adc
testl
loope
xchg
and
and
cld
and
mov
scas
mov
bound
cld
in
aad
xchg
mov
roll
cld
sahf
in
idiv
jl,pt
std
scas
and
pop
int
push
loopne
clc
jl
sti
jl
adc
sbb
dec
jbe
cmp
mov
mov
jbe
adc
dec
fwait
push
mov
repz
cli
je
ja
pop
inc
cmp
jl
out
jno
mov
adcl
nop
lock
stc
je
mov
ds
mov
je
and
and
imul
out
cltd
outsb
mov
cltd
out
test
and
pmaddwd
mov
imul
hlt
sti
mov
mov
loope
std
mov
sbb
leave
lret
imul
testb
xchg
mov
mov
cld
mov
test
xchg
mov
jnp
mov
and
cld
or
add
dec
push
cmp
mov
dec
inc
hlt
add
mov
and
hlt
in
out
sbb
je
add
push
cld
cmp
push
pop
cld
mov
rcl
fstpt
and
jecxz
push
cmpsb
xrelease
xchg
push
scas
jbe
mov
mov
xchg
mov
int3
je
adc
repz
jecxz
cmp
push
jp
or
and
shr
xchg
in
xor
enter
jnp
mov
pushf
jae
sub
cmp
lods
arpl
fmull
ljmp
fmuls
xchg
xchg
sti
xchg
lods
xor
lock
sbb
mov
insb
fiadds
into
cmp
cmc
notl
scas
add
imul
ja
add
daa
fcmovnb
cmp
loop
fnstenv
mov
or
movsb
mov
sub
mov
in
lock
iret
je
dec
dec
mov
cld
pop
jmp
cltd
xchg
fldl
mov
loop
aaa
jmp
jmp
das
enter
inc
pop
mov
pop
cmp
sarb
jge
mov
inc
loopne
scas
sti
negl
inc
mov
arpl
mov
or
test
test
jg
xlat
lcallw
xchg
sub
mov
clc
pop
push
push
hlt
cli
cltd
cpuid
add
mov
notl
mov
orl
jmp
imulb
aaa
bound
je
pushf
dec
iret
mov
fdivr
repnz
pop
dec
mov
sbb
mov
jle
xor
rcrl
jmp
scas
pop
out
push
mov
or
inc
sti
js
cli
repz
cli
lods
mov
ficoml
or
cli
mov
cmp
cmp
cmp
aaa
cli
inc
in
push
dec
pop
jle
push
aas
fstpt
dec
push
mov
xor
in
int3
test
rcl
in
dec
xor
in
in
mov
cld
leave
jmp
in
push
filds
jbe
cld
movsb
lret
mov
mov
inc
mov
xchg
fwait
xchg
lcall
nop
pushf
mov
nop
add
repnz
fwait
mov
popf
lea
sbb
nop
aas
or
mov
lcall
mov
rol
cmpsb
in
je
icebp
sahf
mov
fldl
xchg
mov
xchg
lock
in
xchg
mov
sub
hlt
cld
loop
jnp
test
add
rcrl
test
xchg
jecxz
lea
cwtl
fidivs
mov
xchg
mov
cli
xchg
es
adc
push
aam
lcall
in
cld
scas
mov
xchg
xchg
out
pushl
jb
xchg
nop
inc
adc
jns
mov
testl
mov
adc
mov
cmp
push
xchg
dec
sahf
dec
mov
mov
lock
or
lock
jo
out
jb
shlb
sub
das
inc
ljmp
vfrczss
lods
cmp
xchg
xchg
repz
mov
popf
push
loop
ds
jmp
jo
int
xor
jmp
les
shrb
out
xchg
sahf
mov
out
fsubrp
mov
adc
adc
or
les
xchg
push
inc
pushf
shl
test
mov
lods
mov
cmc
hlt
lock
inc
push
std
fmuls
and
cltd
cmp
lods
in
call
inc
mov
xchg
lcall
mov
mov
and
jp
lahf
movsb
ror
mov
pushf
nop
mov
es
push
sahf
sbbb
stos
mov
cltd
xchg
adc
dec
xchg
pop
lods
ljmp
sbb
xchg
inc
mov
sahf
pushf
jne
call
ljmp
push
lcall
in
les
std
jp
pop
out
outsb
jbe
and
xchg
iretw
mov
in
data16
mov
xchg
lock
fsubrs
idivb
std
testb
mov
mov
into
lret
test
fdivs
mov
ljmp
add
test
ja
push
arpl
xor
pop
into
add
ljmp
add
add
int
int
int
int
int
int
int3
ljmp
int3
add
add
mov
pusha
int3
push
int3
add
icebp
lret
loopne
lret
jae
gs
push
lret
out
lret
movsl
lret
jp
add
or
lret
sti
leave
out
leave
out
pushf
leave
popa
leave
cmp
sub
adc
pop
cmpsl
add
add
leave
jmp
in
fcmovne
aam
leave
enter
enter
enter
enter
fadd
int
cmpsb
add
add
sahf
xchg
movl
inc
loop
mov
les
add
add
test
ret
rol
ret
xchg
ret
dec
ret
inc
ret
aas
ret
fadd
enter
ret
push
add
ret
jno
imul
ret
push
ret
or
jp
add
subb
or
nop
or
inc
shr
insl
pop
das
clc
push
mov
pop
sub
adc
inc
dec
push
pop
and
or
sbb
pop
sub
movsl
or
push
popl
pop
adc
pop
sub
cmpsl
or
aas
pop
xchg
std
push
clc
insl
cld
jecxz
outsl
hlt
dec
push
pop
clc
pop
rclb
and
cmovnp
dec
jl
dec
mov
std
cmp
aas
push
fldcw
dec
sbb
decb
jp
hlt
push
aad
sbb
in
jl
aas
add
dec
xchg
xor
mulb
cmc
cld
jae
push
in
pop
dec
call
pop
pop
stc
or
sbb
xchg
gs
outsl
push
stos
dec
add
gs
adc
out
cld
and
mov
test
or
xchg
gs
int3
mov
xlat
leave
mov
pop
xchg
gs
xchg
jg
pop
inc
xor
xchg
gs
push
fxch
mov
lret
leave
mov
lret
mov
outsl
pop
dec
inc
xor
daa
sbb
stc
push
in
pop
xchg
gs
mov
lea
outsl
pop
dec
aas
and
aas
pop
add
fildl
xchg
gs
scas
fwait
and
xor
inc
dec
popa
jae
das
xchg
gs
movsl
mov
jecxz
add
mov
popa
cld
pop
dec
aam
inc
and
cmp
das
cld
daa
pop
sub
arpl
outsl
cld
jg
mov
lret
mov
push
dec
aas
sub
mov
or
cld
out
mov
lret
fst
leave
mov
sub
mov
xchg
dec
inc
in
std
jg
sub
cld
imul
sbb
imul
sub
mov
lods
jge
cvtdq2ps
fwait
mov
test
pop
hlt
mov
test
mov
dec
stos
shll
and
jl
ret
outsl
sti
out
in
xchg
mov
mov
xchg
mov
enter
mov
mov
out
test
mov
mov
mov
lods
cltd
pushf
mov
cmp
popf
cmpsb
lods
mov
stos
test
lods
mov
out
xchg
lea
cltd
mov
mov
jecxz
test
xor
scas
jg
test
scas
aaa
xor
mov
fucomip
fwait
jg
loopne
ffreep
pop
testl
sub
out
repz
inc
lahf
push
lahf
mov
mov
lahf
jl
mov
aas
fimuls
std
fistps
cld
and
mov
cmpsl
and
js
dec
or
sarb
mov
mov
dec
cld
mov
cmp
inc
jl
adc
div
outsl
into
lahf
clc
notl
faddl
scas
scas
lea
xlat
add
cld
mov
insb
mov
cmp
dec
jmp
loopne
fidivrs
incl
loop
cmp
jg
iret
stos
stc
sub
push
fimull
fucomip
mov
int
lock
test
xchg
inc
push
aam
mov
sub
lock
mov
lcall
loop
mov
loopne
aam
clc
dec
push
lcall
lea
fbstp
je
sbb
je
or
enter
cwtl
lock
aas
add
cmpsl
cld
fdivr
and
ficoml
rorl
xchg
dec
cs
clc
in
jmp
neg
pop
mov
mov
mov
inc
add
xchg
mov
sar
lcall
stc
cld
mov
stos
dec
scas
xchg
cmp
mov
dec
rclb
push
mov
mov
mov
nop
mov
pop
or
mov
fidivl
mov
adc
inc
jb
xchg
jg
xchg
cli
add
sahf
lock
sahf
aad
sarl
clc
movsb
pop
leave
jmp
mov
add
cmp
cli
inc
pop
jp
lock
mov
sti
out
scas
call
aaa
add
loop
jl
clc
ds
mov
xchg
add
pop
mov
in
je
or
sub
cmp
je
je
push
daa
pop
xchg
ret
je
dec
int3
rorl
pop
in
jb
or
jp
jmp
aaa
jne
mov
repz
mov
and
xor
lods
scas
xchg
divb
out
aaa
stc
and
enter
inc
aas
scas
jb
jmp
push
je
and
sub
inc
call
in
test
mov
cmp
xchg
or
sbb
jg
test
out
inc
sar
dec
in
das
mov
adc
mov
jp
test
int3
jnp
mov
lret
mov
daa
mov
jecxz
push
hlt
xchg
movsl
ds
mov
jg
sub
nop
mov
fdivp
mov
mov
repnz
into
rcrl
push
ljmp
cli
inc
ficoms
sub
xlat
inc
lahf
push
addr16
pop
sbb
pushl
clc
push
fstpl
or
or
lock
hlt
rolb
outsb
mov
push
lahf
lock
push
lock
xchg
out
inc
inc
es
je
in
ret
cld
dec
sbb
and
sarb
scas
cli
sbb
loop
test
pusha
scas
xor
ret
notl
pop
movsb
mov
mov
dec
ja
add
out
fimull
int3
out
mov
adc
jb
mov
jmp
jne
icebp
cwtl
push
shll
xchg
pop
jne
out
mov
xor
add
mov
cmpsb
movsl
test
iret
popa
add
lret
je
out
jl
lret
shlb
shl
jle
ret
aaa
lahf
add
mov
jg
ljmp
lds
arpl
cs
dec
movsb
cld
mov
mov
mov
sub
jecxz
aaa
sub
push
cmc
test
sub
cs
xchg
pop
or
dec
sub
test
jb
cli
scas
xchg
or
ljmp
mov
add
and
sbb
cmp
push
je
aam
jl
cli
jbe
cmp
and
and
mov
pop
repnz
xchg
outsl
xchg
jb
in
jne
mov
lock
xlat
scas
push
cmpsl
stc
pop
mov
jl
rcrl
movsb
in
out
xchg
push
enter
shll
call
fs
xchg
hlt
mull
mov
fiadds
out
jmp
filds
add
repz
inc
lock
mov
adc
push
xchg
out
shl
loopne
inc
adc
decb
lcall
mulb
inc
iret
loope
in
cmpsb
jl
out
cmpsb
addl
enter
pop
iret
jg
lods
adc
xchg
cmp
xlat
aaa
incl
jmp
xchg
mov
out
mov
in
pop
incl
out
iret
cld
pop
iret
fwait
adcb
jmp
ss
imul
incb
inc
xor
and
cmp
je
mov
mov
cld
xor
repz
and
mov
inc
sbb
ja
pop
mov
sub
fcomi
push
mov
iret
es
stc
fwait
mov
ljmp
jo
cmp
xchg
test
xchg
fwait
jecxz
add
fisttpl
aad
sub
jmp
xchg
jle
pop
fstl
popf
or
lahf
and
loope
icebp
mov
sbb
cmp
xchg
mov
jecxz
daa
test
loopne
clc
popa
pushf
push
dec
push
xchg
icebp
loopne
add
lock
pop
push
jb
pop
cmc
jb
cvtps2pd
fs
nop
lcall
xor
inc
cmp
mov
repnz
inc
in
cli
dec
loop
nop
andl
jb
popf
leave
call
cmp
jno
pop
dec
mov
int
daa
inc
dec
repnz
mov
inc
pop
cmp
lock
out
inc
stos
test
popf
xor
mov
jp
mov
jmp
pop
enter
roll
pop
in
push
pop
mov
insb
mov
jns
cmp
inc
sub
xchg
mov
repz
testl
or
in
mov
dec
shlb
cmp
adc
clc
pop
adc
out
fiaddl
mov
test
std
or
mov
movsb
xchg
add
rol
out
cmpsb
lea
dec
ja
cmpb
add
mov
sub
jno
and
cld
in
test
jl
mov
jl
movsb
jecxz
jmp
xchg
std
test
lds
lds
add
movsb
ljmp
jl
scas
cld
mov
cmp
incb
jno
arpl
movsb
iret
shr
jmp
jecxz
lahf
xchg
mov
xlat
cli
add
popf
add
adc
enter
lds
jnp
inc
cli
icebp
fsubp
fiadds
mov
les
jne
cld
mov
sbb
pop
push
cltd
lea
movsb
sub
fsubrs
into
sbb
adc
jb
cld
cmp
ljmp
adcb
clc
idiv
cmp
jne
and
lea
test
sbb
rcrl
pop
xchg
notl
mov
xor
inc
push
cmc
imul
xchg
hlt
lods
sbb
les
fcomip
outsl
call
xchg
xlat
into
or
icebp
aaa
testb
call
iret
mov
fimull
fistpll
cmp
in
jge
mov
call
or
cmp
mov
ljmp
pop
iret
pop
mov
shlb
addr16
pop
fdivrs
negl
hlt
mov
scas
daa
add
pop
lock
push
cmpsb
pop
imul
loope
out
sti
fidivs
in
adc
jns
mov
mov
ljmp
dec
in
call
fcomp
mulb
push
and
adc
ja
sbb
in
jno
push
add
test
add
shr
arpl
xchg
stos
stos
out
or
dec
xchg
sar
cwtl
xchg
jecxz
repz
pop
xchg
adc
call
out
fs
cld
call
rorl
and
cld
xchg
jae
add
xchg
dec
mov
or
xchg
mov
stc
push
fldl
xchg
add
xchg
rcrl
xor
aas
sbb
add
aaa
mov
xor
mov
pop
fxam
pop
xchg
mov
sbb
mov
icebp
push
gs
pop
in
mov
leave
mov
shrb
push
int
std
pop
orl
xor
je
or
mov
mov
mov
lret
or
jmp
mov
jnp
cmpb
les
int3
jbe
sarl
add
fsubrl
xchg
je
les
cmp
mov
jmp
std
fdivrs
js
and
mov
cwtl
andl
test
loopne
outsb
pop
or
dec
push
mov
add
sbb
cmpsl
mov
jnp
out
movsb
outsl
xchg
nop
enter
ret
mul
aas
mov
iret
test
mov
sbb
je
aad
xchg
mov
adc
imul
lret
je
stc
adc
in
nop
and
sbb
cli
cmp
aam
into
sti
aas
pop
sti
sahf
adc
mov
scas
and
add
dec
ja
mov
data16
mov
stos
hlt
add
clc
out
mov
cli
lret
add
int
mov
sub
bound
movsl
pop
icebp
aam
iret
aaa
das
pop
cmp
sahf
cli
ret
js
sbb
pop
xchg
dec
jg
les
push
cmc
lea
aas
lcall
pop
in
out
cli
mov
xchg
add
xchg
pop
push
mov
fisubrs
pop
nop
pop
dec
fiadds
cmpsb
mov
int3
repnz
into
fsts
cmp
into
cmpl
lea
adc
xchg
sub
fdivrl
cwtl
jl
jg
imul
mov
int
or
dec
fucomip
repz
jle
sbb
out
std
mov
cmpl
icebp
je
ds
add
inc
sub
add
rol
mov
add
ds
loop
mov
push
mov
mov
mov
adcb
divb
stc
call
xchg
jmp
jb
in
mov
out
or
jne
jne
aas
sti
ds
add
ja
enter
mov
lret
aaa
ljmp
popf
hlt
sub
push
movsb
sbb
pop
sub
jge
mov
pop
mov
faddl
icebp
sub
in
add
cld
out
jb
call
or
ds
sti
cld
cltd
dec
inc
add
or
hlt
or
cld
out
jb
inc
hlt
nop
push
enter
invd
adc
sbb
fiaddl
test
mull
add
fsubl
jmp
arpl
and
cmpsb
add
ds
jmp
pcmpeqb
fmull
or
mov
mov
pop
rclb
movsb
add
adc
inc
ds
jge
ds
hlt
or
or
dec
push
mov
inc
cld
and
in
lock
je
adc
add
add
mov
fsubrl
lret
pop
cld
in
stos
in
aad
js
je
adc
adc
and
cmpsl
out
sub
je
push
nop
jg
sahf
sub
and
adcl
shrb
inc
jp
and
dec
dec
push
idivl
mov
push
add
or
push
adc
sbb
add
dec
push
scas
into
hlt
fnstcw
jl,pt
push
xchg
pop
daa
daa
addr16
adc
adc
das
and
inc
xchg
jg
xlat
loopne
or
push
push
add
leave
add
je
pop
mov
mov
popa
xlat
aas
sti
dec
movsb
stos
mov
subb
sar
aad
daa
stc
cmp
out
mov
cli
jp
pop
test
mov
adc
fstps
and
stos
cmp
fucomp
outsl
xchg
sbb
popf
jae
imull
lret
and
fs
repz
and
add
int
push
push
inc
cld
cmpsl
jp
stos
add
add
sub
add
das
and
gs
jno
xchg
xchg
rorl
cmp
je
ret
int
mov
aam
rol
fcomi
js
adcb
cmp
jmp
std
fdivp
dec
mov
mov
imul
adc
and
xchg
sub
daa
sub
stos
je
popf
or
sahf
xchg
adc
in
cli
hlt
sub
mov
cmp
pop
andb
mov
popl
mov
jmp
fmull
xchg
pop
dec
fadds
lea
or
movsl
mov
lret
xor
icebp
or
jge
pop
and
scas
dec
test
rcr
adc
push
xchg
jb
dec
mov
inc
dec
lcall
out
shrb
pop
jae
jae
dec
xchg
push
sub
js
dec
jae
loope
out
jns
jmp
std
lahf
jo
add
or
das
jo
fisubl
sbb
jle
pop
daa
sub
icebp
pop
jp
dec
inc
int
jno
fsubl
es
dec
sub
add
sbb
dec
mov
mov
mov
das
movsb
es
xor
ficoms
outsb
pop
dec
cmp
dec
popf
aaa
jo
sub
enter
cmp
in
cmp
aad
imul
xchg
js
sub
sub
icebp
pusha
sahf
dec
dec
lods
negl
es
je
xor
movsl
mov
je
adc
jb
andb
cli
push
sbb
lahf
movsb
es
xchg
jo
dec
cmovle
int3
pop
pop
adc
xlat
and
aaa
or
je
cmpsb
inc
inc
or
test
es
nop
cwtl
sub
icebp
ds
bound
sub
imul
pop
cmp
aad
jae
inc
inc
orl
mov
dec
xor
add
cmp
dec
mov
add
jle
mov
mov
hlt
jge
shl
imul
rcr
bound
sbb
stc
mov
int3
lret
adc
jns
repz
sbb
fildl
movl
dec
adc
cltd
into
xor
loope
xchg
pop
or
xor
in
push
xor
mov
lea
or
or
loope
and
push
inc
or
mov
dec
into
repz
popl
xor
aas
inc
inc
inc
sbb
sub
iret
cmp
sbb
or
cmp
pop
jmp
mov
adc
mov
int3
and
iret
adc
and
sbb
sub
jp
and
push
xchg
cmpsb
jnp
loop
inc
ja
adc
xchg
xchg
sub
shl
mov
mov
xchg
cmp
rolb
inc
loope
data16
inc
or
mov
leave
lods
sbb
mov
sbb
cld
in
repz
add
mov
ret
repnz
dec
mov
mov
dec
sub
out
mov
cmp
in
stc
hlt
loope
cmp
dec
ror
out
int3
jg
dec
stc
mov
js
mov
mov
scas
xchg
sbbl
push
pop
jae
ret
lock
lea
les
pop
insb
add
adc
loop
movsb
xor
ljmp
xchg
jo
mov
sub
cmp
movsb
lcall
pop
scas
sub
sub
orb
nop
mov
insl
xor
jo
mov
cmp
inc
out
pop
inc
mov
mov
roll
js
lock
or
scas
aam
dec
loop
out
adc
mov
pop
out
sbb
adc
mov
push
adc
cs
test
push
nop
mov
push
inc
and
test
push
sub
mov
out
sbb
add
cmc
test
jns
nop
lahf
jle
loope
mov
loopne
out
mull
rorl
mov
subl
sub
sub
daa
pop
xchg
movsl
test
or
adc
daa
pop
or
inc
pop
and
sub
aad
cmpsl
iret
xor
lock
dec
pop
movsb
inc
dec
mov
je
lods
add
shll
adc
mov
sbb
cli
xlat
stos
cs
xchg
jmp
clc
das
ror
add
je
je
dec
negb
xorb
in
cmpsb
les
cmp
int
aaa
test
xchg
orl
scas
or
lds
les
jnp
cmpsb
xchg
pop
js
jmp
cmpsl
and
dec
jb
xchg
jge
mov
dec
stos
push
xchg
outsl
xor
scas
ds
andb
adc
out
icebp
clc
out
pop
out
inc
mov
scas
mov
and
out
mov
test
leave
out
pop
arpl
xchg
ja
divb
and
mov
mov
icebp
xabort
aam
test
jge
dec
enter
movsb
add
mov
mov
jecxz
sbb
xchg
or
pop
rol
pop
outsb
lret
je
mov
and
cmpsb
in
pop
std
pop
adc
lods
and
data16
inc
sub
aas
lcall
mov
sarl
mov
mov
lret
push
out
shlb
xchg
cmc
leave
xchg
mov
sete
sti
pop
jne
icebp
testb
mov
repnz
jns
in
ja
and
jmp
call
jo
out
mov
in
mov
or
xchg
mov
pop
add
xchg
cltd
dec
das
xchg
inc
push
lds
fwait
stos
scas
repnz
inc
cli
sub
and
or
xchg
and
stos
ds
inc
test
pop
nop
ret
inc
mov
or
idivb
xlat
push
pop
movsb
cld
add
jbe
mov
hlt
rcrl
jle
out
roll
inc
sbb
mov
dec
adc
cmc
leave
movsb
xchg
imul
dec
jmp
test
mov
push
pusha
mov
pop
ja
pop
idiv
iret
ljmp
shl
lret
sub
xchg
je
xor
out
cld
cmp
add
pop
mov
pop
imul
cld
lahf
les
jb
lret
hlt
addr16
add
jb
notb
call
add
fstpt
std
inc
lahf
or
leave
fimuls
scas
lahf
jmp
mov
push
mov
inc
mov
int
jp
in
bound
adc
ds
les
aas
mov
sarl
jg
fs
test
into
sbb
push
cmpsl
mov
and
out
xor
or
mov
xor
add
push
inc
sti
cltd
loope
lea
lds
add
icebp
pushf
cltd
je
sti
cltd
ret
mov
cli
fmull
xchg
sub
xchg
das
in
push
out
aaa
sub
xor
cmp
xor
movsb
pop
and
test
enter
mov
addr16
adc
sub
mov
clc
dec
repnz
jne
lods
pusha
inc
and
test
mov
mov
mov
jno
mov
mov
mov
std
ret
mov
mov
xchg
pop
mov
adc
jae
lock
fstp
pop
lcall
pop
xor
fildl
push
xor
mov
jmp
out
ljmp
pop
pop
mov
aaa
rcrb
jl
das
inc
jg
mov
add
sub
jmp
jmp
ret
stos
and
aam
mov
jmp
sub
add
std
dec
xchg
std
jp
iret
mov
dec
xchg
ret
push
repz
add
loop
mov
clc
lea
jno
int
icebp
xchg
ss
bound
rolb
in
les
test
add
mov
push
aam
loope
jae,pt
rcll
adc
in
in
fdivs
fisubl
cmp
xchg
push
pop
les
dec
pop
or
std
in
das
inc
pop
std
into
cmpsb
dec
es
in
aas
mov
inc
mov
iret
add
dec
inc
rclb
xchg
loopne
adcb
lcall
cwtl
iret
hlt
inc
loopne
daa
xor
adc
sysret
jl
movsb
jbe
outsl
filds
push
je
mov
icebp
jb
cld
arpl
push
inc
adc
mov
xor
dec
fisubs
and
mov
jl
pop
clc
sti
mov
pop
lret
out
arpl
std
fisttpll
and
inc
sub
stc
loop
and
das
push
ret
fs
out
fstl
dec
fs
sti
pushf
sub
dec
push
mov
mov
pop
jno
adc
pop
xlat
push
pop
pop
push
sub
aas
jmp
fdivrs
das
push
mov
add
push
jg
dec
shr
inc
cmp
out
test
adc
mov
aam
leave
je
lods
jae
and
dec
leave
xchg
filds
jecxz
nop
test
inc
dec
cmpl
and
lods
add
add
and
shll
hlt
shrl
loop
lahf
lahf
iret
xchg
xor
push
inc
mov
push
mov
xchg
dec
cwtl
dec
test
dec
mov
mov
xchg
inc
mov
mov
inc
hlt
jbe
xchg
inc
inc
faddl
cld
inc
xchg
ja
cmpsb
imul
xchg
xchg
nop
lea
imul
and
cmpsb
jmp
sahf
xchg
movsb
imul
imul
adc
mov
adc
femms
or
inc
xchg
or
aas
sarb
sub
cmpsl
mov
aas
push
and
cmp
lret
sahf
iret
shll
iret
aas
dec
mov
pop
adc
dec
mov
bound
lea
mov
lods
mov
cmpsl
ljmp
sbb
cmpsb
xchg
cmpsb
dec
ror
mull
out
int
out
ljmp
ret
hlt
cmpsb
enter
aas
sarl
xchg
sbb
call
and
arpl
sbb
rcrb
mov
adc
icebp
in
stos
add
ss
lock
and
mov
arpl
shll
jne
sbbb
pop
jl
pop
int
jo
dec
movsb
or
adc
shll
ds
pusha
scas
fsts
cwtl
mov
cwtl
jb
in
sub
mov
dec
sahf
rcrb
pop
fldt
add
lea
fbld
xchg
icebp
sbb
dec
test
in
jg
cmp
lock
push
adc
enter
out
scas
dec
loope
pop
sahf
shrb
adc
jecxz
inc
movsb
xchg
pop
lock
les
inc
stc
sbb
iret
jmp
js
mov
dec
repz
sub
or
jge
stc
push
or
daa
jle
push
pop
lret
xchg
sahf
add
ret
out
mov
movsb
repnz
data16
cmc
push
pop
test
jo
sub
pop
shrl
lcall
inc
fidivrs
jno
mov
into
lock
fistpll
ja
pop
or
mov
jge
add
std
mov
aaa
repz
adc
pop
fldcw
cmpsb
inc
push
dec
adc
in
fs
sbb
cltd
aam
mov
inc
push
call
inc
subl
add
jmp
call
lahf
out
add
daa
in
cmc
lcall
jno
icebp
pop
cld
movsl
inc
mov
dec
scas
mov
jecxz
popa
and
lret
mov
xor
dec
cmp
in
mov
lcall
sbb
jle
mov
and
hlt
out
push
pop
pushl
and
pop
insl
pop
or
in
mov
sbb
ljmp
or
cmpsl
adc
jns
jl
fisttpl
inc
dec
mov
xchg
fists
pop
mov
test
mov
nop
addr16
push
and
xorb
movsl
test
jmp
xchg
jmp
add
pop
flds
repz
sar
shrl
in
mov
cli
in
lahf
push
cli
push
xchg
out
add
add
idivb
insb
stc
pop
xor
jns
out
fs
push
fsts
or
movsb
sub
sbb
lret
sti
cld
add
jnp
pop
addb
lock
js
fistpll
adc
fidivl
notl
mov
cmc
mov
adc
cwtl
jp
lahf
inc
pop
arpl
std
pushf
mov
inc
arpl
push
xchg
test
pop
pop
loopne
add
push
mov
sub
idivl
pop
addr16
xchg
jae
jl
mov
lahf
jnp
push
cld
clc
mov
add
fistl
in
jg
jb
imul
dec
inc
out
dec
ljmp
stc
push
inc
add
mov
or
fimuls
mov
mov
push
in
pop
fstpt
mov
cld
adc
add
xchg
push
adc
rclb
jns
gs
pop
adc
adc
pmuludq
sahf
jbe
fldpi
ljmp
dec
or
scas
imul
in
ja
sub
push
rcrb
mov
insb
lea
mov
arpl
outsl
lss
aaa
ror
ss
data16
jl
int
addr16
xor
imul
nop
mov
or
and
out
in
fstpt
js
out
outsl
mov
xchg
jecxz
and
fstpt
mov
fmull
test
lock
sbb
daa
shrb
in
in
std
loope
ret
cmp
cld
div
std
das
xchg
jb
shlb
imull
push
ds
mov
aas
test
xchg
test
cmc
and
jno
lea
jl
jle
and
out
adcl
ja
xor
ret
mov
mov
dec
mov
pop
jmp
mov
jno
xlat
in
loop
repnz
lods
sub
add
repnz
mov
jb
imul
scas
adc
push
in
pushf
scas
sub
div
sub
dec
out
enter
cmp
mov
enter
fwait
lock
call
lods
ljmp
add
cmpsb
pop
ja
pop
int3
leave
dec
jg
ja
in
lods
cmp
mov
dec
jmp
jbe
mov
mov
mov
jbe
adc
incl
xor
out
or
mov
inc
ljmp
paddb
or
or
inc
es
nop
cld
mov
sbb
ret
push
cli
push
dec
push
sahf
ret
or
adc
addr16
in
and
sahf
cmp
les
mov
xchg
ja
and
and
jle
jg
les
cli
loopne
out
enter
decb
push
mov
xchg
adc
push
stos
cld
mov
mov
mov
pop
dec
hlt
flds
loop
jmp
sti
imul
stc
push
out
inc
mov
movsb
shrb
lahf
xor
jmp
rolb
fldenv
repnz
cld
outsb
clc
pop
dec
xchg
mov
pop
stc
xchg
mov
and
scas
es
and
or
mov
es
movsb
inc
and
push
jmp
push
negb
loope
add
out
repnz
jnp
lcall
das
aad
dec
ljmp
insl
sub
dec
xchg
ss
frstor
cld
ficompl
imul
clc
popa
in
pusha
mov
adc
hlt
pop
in
pop
mov
pop
in
pop
pop
mov
sub
pop
pop
movsl
push
in
push
push
lret
mov
clc
push
call
mov
call
dec
mov
dec
dec
inc
in
inc
push
xchg
sub
inc
push
inc
in
inc
xchg
popf
stos
sub
call
daa
lret
mov
data16
cmp
cmp
mov
xchg
ret
inc
pop
int3
in
xor
xor
inc
pop
das
mov
hlt
inc
pop
adc
sub
sub
sub
daa
es
pop
adc
and
and
int3
notl
and
rcrb
fnstenv
mov
int
fimull
cmp
adc
jle
xchg
inc
adc
adc
test
in
cmp
inc
push
or
in
stc
in
loope
in
inc
push
dec
sahf
test
inc
add
pop
sbb
lahf
lret
sbb
stos
push
push
adc
push
dec
btr
mov
and
dec
mov
insb
repz
add
adc
push
mov
sti
cltd
fneni(8087
mov
sbbb
push
outsl
xchg
test
pop
dec
xor
scas
repz
cmp
mov
cmp
mov
scas
scas
ss
fisttpll
xchg
adc
nop
cld
or
lods
addl
jae
mov
imul
dec
pop
and
fisttpll
adcl
cmp
lods
pop
in
call
test
orl
ljmp
add
jecxz
xor
scas
inc
in
in
clc
pop
sti
jbe
int3
inc
stc
mov
adc
bswap
ds
inc
out
cmp
lods
insb
incb
les
lock
pushf
xchg
mov
loop
lock
xchg
cli
test
sub
mov
aam
push
adc
ja
cmp
cmpl
dec
dec
in
cmp
repnz
daa
dec
test
imul
je
cmc
repz
jmp
inc
leave
cmp
jl
arpl
lods
data16
lock
fs
jne
shlb
ret
fmul
aaa
testb
fdivrp
push
into
lods
and
loop
stc
inc
cmp
js
cmc
aaa
std
dec
xchg
rcrb
daa
mov
mov
pop
pop
mov
cld
and
repz
imul
and
out
inc
mov
fisttps
push
out
aam
enter
scas
mov
mov
lret
cmp
add
jg
int
cmp
dec
adc
loope
jg
mov
out
lret
jae
pop
jnp
pop
and
push
mov
jp
shll
lret
out
xchg
imul
adc
ss
push
test
sarb
cmp
mov
and
into
aad
jmp
mov
mov
lock
xchg
mov
int
or
mov
xrstor
or
jecxz
lods
in
outsl
cmp
fs
or
imul
jmp
gs
sbb
test
and
stc
mov
pop
xchg
mov
mov
mov
add
mov
adc
pop
adc
adc
adc
adc
roll
inc
push
pmulhuw
in
or
pop
push
inc
int
in
mov
xchg
gs
xchg
mov
xchg
gs
gs
xchg
lcall
pop
xchg
lahf
push
inc
mov
mov
in
xorb
dec
lcall
lcall
cld
dec
mov
sub
cld
je
jae
cld
jb
inc
push
adc
jno
jo
outsl
mov
and
adc
scas
insl
mov
imul
mov
lds
addr16
das
xchg
inc
data16
add
mov
mov
int3
mov
mov
sbb
pop
adc
sbb
sbb
xchg
mov
xchg
gs
xchg
mov
dec
das
pop
pushf
mov
pop
imul
pop
hlt
int
int
ja
daa
outsl
repz
jb
dec
ljmp
dec
jmp
pop
mov
sar
add
add
repz
loopne
adc
int
jge
lret
loop
das
dec
pop
icebp
scas
mov
xlat
data16
add
mov
lods
inc
aaa
lret
push
push
xchg
lds
in
or
jo
hlt
mov
jb
out
sub
loope
loopne
in
imulb
lcall
and
fistpll
sub
movsl
pop
ret
and
sbb
int
lcall
pop
mov
idivl
lods
in
clc
or
test
addr16
ja
cli
in
mov
test
inc
mov
mov
in
sahf
jmp
jle
inc
scas
cli
cld
add
mov
negl
jb
rclb
into
cltd
hlt
xchg
mov
add
aaa
jb
fcomps
std
lods
shrb
mov
jl
xchg
cmp
mov
cli
inc
in
inc
fcomp
push
adc
dec
cmp
movsb
cld
sbb
rcrl
fmuls
cli
dec
idivb
cli
addr16
decb
loope
jmp
loope
js
push
push
das
pop
mov
xchg
gs
mov
mov
loop
rorl
mov
cld
pop
lea
insb
xlat
fsts
testl
setns
mov
clc
dec
fisubl
xor
add
add
pop
arpl
mov
mov
xchg
nop
xchg
xor
mov
and
pop
push
movsb
ja
enter
mov
fwait
adc
mov
jg
or
clc
rcrl
jns
mov
cmp
fwait
xlat
and
ret
lods
shlb
push
shrb
mov
in
test
out
aaa
das
push
xchg
pop
cmp
sub
mov
cmp
enter
xor
mov
adc
scas
into
fisttps
jg
gs
mov
popa
add
xchg
xlat
xchg
jp
pop
fidivl
je
jp
jg
jmp
in
pop
icebp
shlb
pop
repnz
adc
cli
mov
paddq
loopne
adc
push
or
or
adc
or
or
sub
xchg
loopne
call
aas
ds
mov
aas
test
cmp
sub
fiaddl
fcomp
std
sub
pop
ret
sbb
bound
movsl
outsb
ss
xor
xor
shl
adc
nop
push
js
rclb
lret
xor
xchg
cmp
ret
pop
mov
lcall
adc
mov
sub
xchg
dec
inc
sbb
sarb
loope
lret
mov
into
or
pop
movsl
and
add
test
divl
pop
cli
ret
xlat
adc
shl
pop
shlb
dec
clc
in
push
adc
mov
daa
in
cld
mov
push
or
xchg
neg
inc
cmp
mov
mov
mov
test
inc
inc
mov
pusha
incb
sbb
push
ja
pop
aam
add
out
nop
cmpb
aas
shlb
pushl
stos
pushf
outsb
repz
add
xchg
filds
and
cmp
xchg
sar
xchg
cs
int
loopne
jl
mov
aas
data16
repnz
push
jle
jg
in
and
jbe
pop
xchg
fbstp
ss
push
jb
notb
push
ss
js
mov
xor
dec
repnz
inc
inc
and
xor
lock
jbe
add
shlb
mov
sub
inc
outsl
insb
fcompl
and
and
xor
mov
dec
ret
and
sub
fs
ljmp
mov
adc
or
add
dec
test
fbstp
xchg
mov
divl
sbb
addr16
ficoml
sub
mov
xor
arpl
popa
clc
pusha
adc
clc
sub
pop
pop
pop
xchg
pop
pop
xchg
xchg
sub
pop
fcomps
fcoms
gs
lcall
imul
sub
mov
inc
popf
inc
inc
lds
mov
inc
mov
mov
hlt
cmp
cmp
iret
mov
aaa
aad
fidivrl
popf
sub
gs
xchg
sub
daa
inc
push
jl
es
movsb
and
and
and
ds
adc
and
and
pop
xchg
jmp
fdivr
pop
mov
aam
mov
sbb
cltd
lods
adc
xchg
shrb
aam
leave
mov
std
in
mov
mov
aaa
clc
dec
xchg
push
adc
icebp
das
adc
ds
loopne
adc
addr16
daa
jl
jge,pn
lock
aaa
push
pop
jge
dec
xchg
out
ja
enter
lret
lea
add
add
insb
mov
sbb
mov
cmc
jnp
sbb
out
leave
mov
lcall
pop
xchg
xchg
xchg
add
add
fldt
mov
add
repz
inc
pop
movsb
fwait
push
xchg
mov
pop
hlt
sar
icebp
mov
or
and
sub
mov
in
sub
daa
xchg
lods
mov
add
jmp
das
clc
aad
mov
sbb
iret
jns
out
jb
lods
jg
xlat
dec
cmp
jnp
jns
mov
xchg
in
cmp
cmp
stos
xchg
in
ss
cmpsb
sub
sub
cwtl
jne
repz
sub
data16
dec
repnz
testl
cltd
int3
sbb
fcompl
mov
push
dec
cwtl
mov
and
sbb
cli
add
repnz
scas
jg
sub
or
xchg
sub
in
or
pop
xchg
int
gs
xchg
stc
sahf
lea
mov
ja
sbb
fucomi
and
or
push
sarl
dec
mov
adc
mov
jno
dec
repz
cmp
xchg
mov
mov
jnp
icebp
xor
stc
jno
adc
neg
cmc
lahf
xchg
icebp
in
je
into
testl
je
sub
stc
jmp
jmp
pop
push
xchg
shll
int3
xchg
ljmp
sti
imul
push
loop
sub
add
pop
or
sub
jmp
cmp
cmp
stc
in
lds
xchg
inc
pop
in
mov
xor
jmp
mov
leave
in
push
xor
lock
jo
dec
mov
inc
add
out
jl
sub
and
repz
cli
roll
or
jno
fwait
mov
lods
cmp
divl
pop
stc
pop
subb
mov
cli
pop
sbb
mov
lock
or
lret
mov
andb
fsubrl
pop
and
and
mov
inc
cmp
xchg
pushf
cli
xchg
icebp
cmc
cs
imul
and
sbb
push
mov
pop
sahf
movsb
fwait
fs
jecxz
fidivrs
leave
cli
aaa
jecxz
insb
mov
iret
jno
pop
lods
bound
je
mov
in
sbb
pop
or
sub
call
jbe
aas
leave
lods
mov
lret
mov
cltd
mov
sub
lcall
inc
icebp
jge
call
das
out
adc
enter
sbb
notl
lds
pop
sbb
pop
mov
push
mov
shl
adc
fldenv
xchg
cmp
gs
xchg
nop
sahf
xchg
mov
pop
stos
or
add
jne
sub
add
add
mov
fstpl
xchg
push
mov
dec
push
dec
mov
jb
cmc
xchg
mov
out
std
into
add
and
pop
fdivr
call
xchg
rcrl
aaa
sbb
mov
xor
mov
dec
ret
mov
cmp
call
jo
inc
jo
cmp
in
pop
xor
lcall
inc
stos
popf
dec
xor
fsubs
add
aaa
lock
out
rorb
push
and
popf
in
xlat
xchg
je
in
mov
es
mov
inc
lods
adc
mov
insl
mov
pop
cmp
push
shlb
jnp
in
scas
std
shrl
push
stc
out
cmp
cmp
stc
xor
pop
lahf
sbb
stc
pop
xchg
jae
xchg
mov
stc
adc
adc
adc
xchg
jnp
adc
dec
rorl
mov
mov
xchg
jle
imul
test
pushf
pcmpeqb
lahf
bound
hlt
pop
clc
idivl
popf
jno
jo
push
xor
inc
fprem1
add
jmp
int3
ficompl
xlat
inc
hlt
cmp
adc
xchg
std
imul
test
jg
inc
sbb
in
inc
faddl
sub
sbb
ljmp
pop
pop
pop
les
imul
and
mov
mov
pop
icebp
pop
jmp
incb
mov
jmp
mov
mov
mov
push
pop
push
int
adcl
lcall
addr16
fsubrp
loop
inc
push
lcall
cmp
pop
jmp
icebp
mov
lock
and
into
inc
orl
repz
pop
dec
aas
icebp
hlt
sub
jno
ljmp
clc
mov
je
bound
add
jb,pt
xor
inc
loop
cmp
push
xchg
mov
hlt
inc
dec
out
enter
cmp
dec
scas
mov
xchg
fcomip
xchg
dec
lahf
incl
jge
jle
fs
push
cmpsb
out
dec
dec
aad
mov
push
repz
mov
ror
sub
stos
nop
hlt
cmp
push
mov
out
jne
jecxz
pop
add
fsubl
and
and
xchg
gs
cmpsb
and
mov
ror
pop
cmpsb
sbb
test
inc
sub
xchg
xchg
sbb
mov
cmc
or
decb
mov
dec
sbb
pushf
nop
mov
mov
xchg
lea
mov
fwait
xchg
lods
test
xchg
nop
sub
adc
mov
fsubrs
add
sub
mov
adc
daa
aaa
frstor
fdivrl
popa
repnz
add
and
stc
sbb
push
sbb
push
sbb
pop
lea
es
add
scas
pop
add
sti
icebp
push
add
ficoml
daa
add
repz
jge
stc
sub
dec
decl
lods
insl
inc
aas
add
enter
cld
lea
cli
stc
imul
push
movsl
inc
daa
frstor
cmp
pusha
xor
imul
push
ss
dec
in
rorb
imul
cmpsb
test
je
test
negl
add
push
jp
je
mov
pop
mov
inc
cmp
jecxz
mov
mov
pop
sbb
add
or
shr
cmpsl
pop
rorb
push
jae
aam
jl
and
loope
clc
sahf
je
je
jne
push
int3
cs
cmp
daa
pop
lret
loopne
lret
fcmovnb
mov
fdiv
inc
jmp
jmp
jl
incb
loopne
out
dec
pop
cli
test
stos
dec
stos
jle
inc
adc
and
cld
xcrypt-ctr
cmpsl
sahf
cmp
cs
xor
xchg
jae
mov
mov
or
into
mov
cs
sub
ja
aad
inc
cmpsl
mov
repz
pop
std
jnp
dec
xchg
imul
mov
pop
imul
movsl
adc
and
xchg
mov
cmp
sahf
xchg
xchg
shlb
into
push
cmp
xchg
push
pop
in
xchg
lods
test
xchg
xchg
adc
pop
in
movsb
aaa
jns
mov
inc
je
test
pop
lods
in
out
jl
dec
stos
push
pop
test
int
in
dec
repz
dec
lret
jmp
xchg
push
push
ficoms
mov
dec
push
mov
out
out
add
dec
cmpsb
stc
je
xlat
fimull
add
je
repz
or
fcom
mov
jbe
mov
xchg
iret
test
inc
add
popf
xor
push
xchg
jecxz
dec
jmp
test
add
das
add
xchg
stc
inc
pop
jbe
sti
jbe
je
out
je
je
or
je
mov
int3
das
pop
xlat
fisubl
and
movsl
mov
push
mov
outsb
mov
aas
call
jecxz
stc
lahf
xchg
mov
sbbb
inc
imul
scas
test
in
and
daa
fcomip
cmc
cmp
xor
rcll
cmc
out
repnz
xlat
mov
jecxz
xlat
jecxz
negl
aas
mov
daa
and
incb
inc
cwtl
pop
sarb
pop
xchg
in
xchg
pop
mov
pop
ljmp
xchg
jmp
xchg
xlat
pop
dec
out
jbe
sti
mov
js
push
aaa
cmp
aam
and
mov
push
mov
mov
mov
stos
jmp
add
jns
cmp
mov
and
or
jb
mov
push
lock
ds
scas
push
int3
adc
add
xchg
stc
mov
je
mov
lods
xchg
push
stc
push
cmp
test
xchg
out
out
pusha
mov
jmp
xchg
repz
outsl
push
xor
mov
mov
les
adc
andl
popa
fdivs
jbe
scas
cli
js
inc
jne
je
xor
mov
mov
sub
cmp
jge
nop
out
fstpt
arpl
enter
insl
and
enter
daa
andl
aaa
jecxz
cmp
or
inc
cmpsl
scas
js
mov
xchg
fidivrl
mov
mov
dec
or
test
dec
out
or
sbb
xchg
ds
scas
sub
add
orl
andl
popa
cs
cli
jb
mov
enter
cmp
stc
cmc
cltd
add
xchg
pop
sub
repz
dec
xor
adc
nop
call
pop
xchg
jns
fsubl
fs
xchg
arpl
inc
xchg
je
sahf
mov
mov
ljmp
sti
push
add
sbb
push
push
mov
dec
roll
xchg
cmp
adc
fs
cld
test
jmp
cwtl
mov
jne
jne
mov
test
clc
push
loope
mov
and
jmp
loopne
leave
mov
js
push
pop
jmp
nop
pop
add
jmp
cmp
mov
lret
or
add
shlb
icebp
scas
cwtl
mov
mov
inc
in
xchg
and
sub
jecxz
in
and
shrb
repz
sub
xchg
pop
pop
adc
mov
std
out
test
cmp
pop
push
adc
mov
pop
cli
dec
nop
scas
push
add
scas
aas
ror
ret
cmp
fstps
cmp
xchg
mov
shr
and
mov
ss
push
mov
leave
ror
out
cmp
outsl
cmp
lret
ret
call
scas
ljmp
je
test
jo
push
mov
xchg
decl
fcom
repz
pop
jge
xchg
outsb
and
mov
cltd
and
mov
ds
dec
pop
inc
mov
push
add
scas
inc
mov
out
dec
je
add
push
xchg
js
jnp
repz
dec
jmp
inc
iret
pusha
ds
lods
mov
push
inc
jnp
mov
cld
add
lods
xchg
out
pop
out
pop
stos
cld
mov
not
sbb
push
jmp
cmp
mov
fisubs
inc
jnp
movsl
aas
jo
mov
je
jnp
std
ja
aaa
into
icebp
clc
js
imul
sub
pushf
clc
mov
les
lock
jmp
pop
mov
test
in
mov
inc
mov
add
adc
out
adc
inc
popf
sti
pop
in
jle
sbb
clc
hlt
cld
xor
mov
push
dec
mov
out
loop
repnz
jge
out
popf
inc
outsl
icebp
jl
ds
inc
dec
out
and
aas
jecxz
push
rolb
cmpsl
pop
ds
xchg
call
loope
sbb
push
and
jle
in
pop
push
jmp
ret
iret
jb
movl
cli
dec
pop
aaa
in
cld
cmp
icebp
jbe
inc
cli
dec
push
dec
xchg
mov
testl
push
popf
out
xor
cmpsb
jae
hlt
aaa
pop
jecxz
ret
or
clc
xor
fiadds
stos
rcr
nop
cwtl
ljmp
daa
pop
repz
push
mov
mov
pop
sub
cld
sbb
xchg
mov
ret
push
push
in
cld
add
je
dec
xchg
jl
or
push
jmp
dec
add
enter
fisubs
inc
cld
add
mov
mov
ljmp
in
loop
inc
and
pop
movsb
dec
enter
stc
xchg
and
push
lods
cli
or
icebp
sbb
cmp
cwtl
or
xchg
fs
xorb
ljmp
adcl
fbstp
xchg
push
arpl
aad
leave
dec
mov
scas
scas
loopne
cmpb
push
push
jnp
repz
nop
or
dec
mov
fisubrs
pop
stos
mov
out
cmc
jmp
xor
cmc
xchg
imul
mov
xchg
pop
and
lahf
mov
outsb
push
ja
js
and
jge
push
aaa
cli
sarb
inc
imul
gs
fs
inc
imul
push
pop
lea
xchg
push
ficoms
mov
ja
popa
mov
gs
mov
mov
jnp
ljmp
push
pop
out
movsb
xlat
cli
xchg
fwait
int
js
jecxz
movd
jnp
jl
ret
sbb
fwait
mov
stc
out
mov
mov
mov
out
adc
cli
arpl
sahf
shll
add
out
jo
shlb
insl
jmp
mulb
out
outsl
out
lock
sub
out
in
loopne
cmpsl
aaa
daa
in
xchg
leave
pop
sar
push
out
jnp
call
rclb
cmp
jmp
sbb
xchg
imull
jo
repz
inc
stos
mov
movsb
out
xchg
xlat
fcoms
addr16
rcll
mov
lahf
xor
lods
jb
jmp
imul
in
xchg
das
xchg
inc
jecxz
mov
clc
in
jg
test
pushf
dec
and
push
push
popf
setl
inc
mov
sub
xlat
or
js
or
fbld
mov
pop
imul
cli
adc
and
call
stos
push
jge
in
and
mov
jmp
jg
mov
and
test
adc
xorl
xor
mov
adc
xor
inc
ss
jnp
testb
lods
or
mov
fwait
mov
out
icebp
adc
call
call
mov
jle
ret
icebp
sar
xchg
scas
fmull
mov
fstpl
mov
mov
adc
add
add
scas
xchg
lahf
jecxz
or
mov
ljmp
scas
sub
cmp
dec
pop
addr16
dec
jae
mov
cmpsl
xlat
push
cmp
jmp
outsl
je
sbb
out
inc
mov
sarl
in
jno
adc
fmul
or
es
ret
xlat
jmp
lret
stc
out
xchg
es
leave
sbb
mov
xor
daa
loope
les
in
das
pop
lock
ja
pushf
fwait
mov
pop
mov
jb
xor
jmp
shr
test
in
jg
cmpsl
scas
mov
sbb
in
cmp
xchg
in
adc
jmp
xchg
test
call
add
leave
sub
pop
fwait
inc
cmp
idiv
xchg
sub
movsl
dec
ret
add
scas
scas
inc
fwait
scas
xchg
mov
xchg
sbb
xchg
roll
nop
mov
fisttpl
add
aas
xchg
repz
out
mov
mov
std
call
insb
pop
mov
loopne
aad
pop
ret
addr16
je
bound
call
sti
mov
sbb
fsubl
fadds
std
outsb
gs
lahf
ret
popa
mov
lods
ret
gs
xchg
psllw
pop
fcomps
xor
push
pop
mov
mov
sti
test
and
shlb
pop
or
into
ror
inc
outsl
in
stos
daa
iret
mov
jle
idiv
jecxz
ss
cmp
sahf
out
pop
aas
iret
outsl
cld
aaa
hlt
daa
iret
cmp
pushl
adc
loope
jmp
sbb
push
clc
fcmovne
aaa
sar
add
pop
push
test
mov
mov
mov
pop
inc
jg
or
cld
lcall
cmp
xlat
iret
dec
or
std
pop
fistpll
lahf
pop
test
outsb
push
out
add
mov
jmp
mov
stos
xor
push
mov
cmp
fsts
ret
pop
sbb
out
out
inc
call
fisubl
insb
pop
out
hlt
xchg
jl
jno
cli
adc
idivl
push
inc
mov
add
fnstcw
xchg
cli
movsl
pop
test
in
movsb
cmpsl
mov
lret
iret
push
inc
cmc
sbbl
loope
fimuls
in
std
push
pop
sbb
xchg
mov
mov
out
hlt
mov
outsl
lock
nop
adc
das
mull
fcomp
xchg
pop
popl
jecxz
in
jae
in
sar
iret
mov
mov
stc
cmpsb
mov
mov
mov
xor
xor
mov
dec
out
daa
stos
repz
add
dec
lock
fucomp
and
pushf
or
mov
xchg
dec
movsb
sub
cmpsb
sahf
ficoms
imul
stos
mov
out
add
sti
xchg
sbb
sti
and
cli
cmc
fistpll
in
popa
pop
rclb
stos
pop
sbb
hlt
mov
lcall
pop
add
rorl
enter
stos
cmp
lahf
fdiv
sub
and
inc
cmpsl
mov
out
in
push
loopne
ja
notb
nop
fmuls
int3
pop
in
add
cmc
sarb
jp
out
xorl
jecxz
sub
pushl
mov
enter
out
lcall
or
xlat
iret
lcall
clc
outsl
iret
mov
cli
sti
pop
jmp
test
lret
fisubs
pop
cmp
xor
aaa
mov
into
int3
and
mov
lahf
mov
ficoms
mov
xchg
rcrl
inc
out
mov
scas
jge
sbb
test
std
inc
out
inc
sub
sub
lahf
cmpsb
leave
jge
lcall
fs
aas
sti
leave
fs
pop
adc
sbb
inc
cmp
jmp
loop
add
and
pop
in
mov
jp
aaa
add
xchg
mov
ss
dec
jb
sub
hlt
aad
adc
scas
push
dec
push
movsl
xchg
divl
cmp
jmp
add
test
jge
mov
mov
hlt
lret
jbe
xor
add
sti
jp
sub
mov
mov
xor
adc
inc
cmpsl
clc
lods
mov
test
roll
mov
cmp
adc
xchg
lahf
mov
sarl
inc
out
testl
jecxz
adcl
into
int
int
outsl
imul
jl
int3
pop
xor
fs
jnp
jecxz
lock
mov
out
adc
pop
iret
int
outsb
outsb
outsb
lret
rol
dec
xlat
jmp
decl
scas
push
pop
adc
decl
push
in
jns
dec
xchg
je
iret
fdivrs
in
mov
lahf
fdivrl
dec
loop
into
idivl
or
pop
aaa
fcompl
in
iret
xchg
stc
xchg
sbb
push
lcall
in
aaa
fcmovne
in
mov
mov
jle
std
push
mov
stos
fistps
push
adc
scas
std
mov
sahf
mov
mov
mov
mov
fucomip
outsl
out
call
mov
jns
call
ficomps
pop
movsb
ret
mov
pop
mov
clc
out
idiv
mov
movsb
leave
adc
fcomps
push
jne
out
push
leave
fsubrp
imul
fwait
out
push
xchg
xchg
xchg
lcall
in
jg
shlb
mov
hlt
jmp
pop
inc
sub
stos
jg
jp
loope
mov
jo
pop
ss
pushl
mov
and
lods
pushf
xchg
fadds
lods
lcall
enter
mov
scas
aas
out
shll
xchg
out
and
mov
jnp
mov
dec
in
scas
nop
xchg
inc
out
int
aam
rclb
cmp
mov
pop
shld
mov
inc
dec
in
popa
scas
inc
mov
test
xchg
xchg
xchg
mov
in
data16
pop
scas
mov
hlt
inc
and
out
mov
lea
push
xchg
dec
arpl
push
mov
in
cltd
add
dec
sahf
lret
lret
lret
loop
and
fchs
ljmp
mull
mov
sti
fs
sbb
jg
nop
inc
out
enter
cltd
mov
cld
mov
aad
dec
push
lods
test
aas
sub
sub
lcall
lahf
mov
decl
mov
lcall
xchg
ficompl
pop
test
repz
or
cmc
adc
xchg
sub
ljmp
pop
jl
scas
mov
call
out
sarb
mov
out
out
dec
dec
ljmp
popf
in
xor
pop
aad
cmpsb
ficompl
adc
jge
dec
in
mov
jecxz
push
cld
movsb
xor
mov
addb
int
jp
xor
adc
fimuls
roll
out
sbb
cmp
ret
inc
pop
cmp
cmc
or
ret
ljmp
lcall
stc
adc
mov
in
and
enter
bound
mov
mov
and
pushf
mov
test
invd
repnz
pusha
ds
xchg
xlat
xchg
xchg
mov
movsl
pop
mov
jle
imulb
fdivrp
ret
xchg
rorb
and
inc
cmp
jno
or
dec
and
scas
std
mov
jb
out
adc
int
mov
insb
push
lret
andb
loope
sbb
xchg
addr16
jl
jge
xchg
push
ss
jns
std
inc
sti
mull
add
std
leave
sub
out
mov
lret
out
filds
lahf
call
fdiv
jecxz
outsb
sti
call
in
mov
mov
lock
adc
inc
lret
pushf
nop
jge
jne
std
imul
xlat
sbb
arpl
sub
cltd
shrb
mov
jb
mov
and
adc
mov
mov
nop
std
loop
pop
inc
lret
mov
jp
sahf
xchg
cs
ljmp
testb
cld
fisttpll
push
fs
cmc
out
jecxz
fistps
js
push
adc
clc
pusha
jb
ja
in
lea
fildl
cmc
jbe
loopne
mov
out
jl
scas
cmpsb
push
dec
add
jo
enter
roll
rorl
repz
mov
add
rolb
fwait
iret
xchg
add
add
iret
mov
xchg
jnp
ja
imul
iret
pop
iret
push
iret
dec
iret
inc
iret
loope
int3
into
jb
popa
into
or
fistl
lods
int
int
int
int
int
loopne
int3
inc
add
add
int3
cmp
arpl
pop
lret
inc
lret
xor
cs
std
lret
ret
lret
outsb
lret
pop
lret
adc
lret
clc
leave
lods
leave
jg
jns
je
addr16
pop
leave
dec
leave
cmp
sub
and
adc
add
call
xlat
enter
enter
mov
rol
ss
mov
add
add
jp
jno
popa
push
movb
pop
cli
lds
lds
dec
lds
lds
les
pop
les
inc
les
les
les
les
les
ret
cmpl
ret
mov
mov
rcll
shrl
and
add
sti
shl
fisttpll
add
jg
int3
mov
lds
push
lds
add
add
cmp
and
les
push
les
ret
pop
push
ret
inc
ret
cld
ret
rol
add
add
int
movsb
ret
xchg
ret
cmp
sbb
pop
ret
pop
ret
into
rcll
shrl
xchg
push
mov
pop
xchg
clc
add
add
stos
iret
aaa
iret
sub
icebp
into
int
int
int
int3
lock
lods
int3
mov
inc
out
mov
int3
fcmovne
aam
mov
lret
sbb
lret
addl
push
lret
cmp
xor
adc
or
leave
ret
leave
mov
scas
leave
mov
leave
mov
out
and
leave
js
fs
inc
lcall
adc
or
lret
enter
enter
enter
enter
enter
aam
str
sbb
stc
jecxz
aam
jmp
mov
lods
mov
dec
movl
ss
adc
in
mov
or
lds
jo
push
push
lds
pop
sub
inc
fnsave
push
add
xchg
daa
les
ret
cmpsl
lock
dec
ret
inc
ret
add
nop
pop
cmp
xor
push
call
out
cwtl
ret
pop
ret
inc
popa
push
sldt
aaa
ret
jbe
pop
rorb
clc
lods
dec
add
nop
jmp
stos
cmp
xor
sbb
bswap
or
into
cmpsl
into
mov
jno
add
mov
int
int
int
int
add
in
int3
cmpsl
int3
xchg
int3
or
mov
cmp
mov
jg
jae
addr16
bswap
or
jmp
fxch
mov
leave
add
inc
add
leave
dec
leave
inc
push
ror
enter
enter
push
add
add
rorl
adc
jns
fs
push
movl
cs
sbb
psadbw
mov
hlt
mov
std
repnz
das
push
jmp
jns
addr16
les
les
les
les
les
out
ds
cwtl
xchg
pop
ret
push
ret
dec
ret
xor
ret
or
dec
rorl
sarl
xor
or
int
rorb
add
out
xchg
push
jg
in
iret
loopne
mov
add
into
pop
into
push
into
ss
adc
add
add
int
int
int
int
int
int
int
nop
fiaddl
add
insl
int
int
int
int
int
int
int
int3
repz
jecxz
aad
cmp
enter
js
outsb
int3
or
lret
sub
sbb
in
lret
pop
lret
sbb
inc
lahf
pop
add
pusha
leave
dec
leave
xor
jmp
or
sub
add
rcrb
stos
cmpsb
adc
pop
pop
les
cmp
das
les
lock
call
nop
pop
add
ret
aad
enter
mov
sub
ret
hlt
ret
dec
ret
out
dec
push
add
loopne
fld
mov
and
jge
dec
mov
ror
xchg
into
jle
imul
dec
xchg
into
cmp
bound
sub
add
movsb
hlt
test
lret
inc
lret
mov
lret
xchg
lret
dec
lret
inc
lret
das
lret
push
add
add
lret
adc
lret
aad
leave
lret
mov
cmpsl
lret
test
jge
outsl
inc
inc
push
add
lret
inc
lret
sub
es
adc
add
in
leave
out
add
nop
xor
leave
ror
leave
mov
cmpsl
leave
sahf
leave
cwtl
leave
mov
test
jle
jno
das
leave
and
adc
hlt
mov
cmc
enter
enter
add
enter
enter
enter
enter
enter
enter
enter
jno
push
std
out
fadd
xlat
rol
int3
push
mov
stos
mov
lahf
pop
jns
push
outsb
addr16
pop
loop
dec
cmp
add
xor
es
jmp
in
jne
outsl
gs
pop
pop
dec
movb
sub
inc
shufps
ret
movb
cld
loop
fadd
aam
push
add
vpextrw
lds
lds
lds
add
pop
lds
push
lds
cmp
xor
daa
lds
lds
lds
pop
add
stc
out
ljmp
iret
xor
add
add
ret
les
les
les
jge
jo
imul
jns
push
push
adc
ret
xlat
ret
iret
ret
scas
add
xchg
ret
xchg
ret
cmp
xor
sub
adc
ret
iret
ret
add
add
scas
ret
mov
and
rolb
mov
rolb
pop
cmp
cmc
mov
iret
mov
iret
pop
iret
add
lock
stos
into
movsl
into
sahf
into
aaa
into
daa
into
and
mov
orb
mov
int
int
int
jl
int3
pushf
add
xchg
lret
lahf
lret
fs
dec
lret
cmp
sub
sbb
or
sahf
jle
cmpsl
xchg
sub
lret
inc
and
lret
das
lret
or
lock
call
leave
in
push
push
pop
bound
aaa
cmp
sti
es
inc
adc
add
enter
enter
enter
mov
push
add
pop
add
ja
aaa
sub
sbb
adc
inc
or
add
test
ljmp
sti
cmc
add
inc
adc
stos
test
in
in
pop
mov
xchg
inc
xchg
add
inc
in
clc
outsl
inc
test
mov
inc
ljmp
fs
das
push
xlat
inc
jmp
inc
addl
stc
cmc
frstor
testl
push
scas
sets
clc
lahf
movsb
push
cld
outsl
lcall
inc
movsb
fldcw
lahf
iret
cld
mul
lahf
pop
decl
repz
jmp
in
mov
push
std
fdivl
lods
jmp
jl
mov
fsub
fadd
out
mov
clc
insl
std
and
lods
int
fsub
sub
aad
clc
pop
into
or
push
and
daa
call
clc
adc
mov
cli
mov
sub
fdivr
jl
cld
jg
fildll
lret
mov
mov
shrl
jmp
jge
pop
cld
push
cli
cs
mov
mov
fsts
adcb
test
seto
in
into
loopne
mov
mov
filds
out
je
cli
mov
mov
daa
test
xor
aas
sbbb
fbstp
mov
in
mov
xchg
xchg
test
stos
lods
fdivl
out
loopne
rorb
cmp
lods
mov
in
mov
mov
fildll
jl
loopne
mov
popf
stos
fs
mov
stc
cmpsb
inc
mov
sbb
xchg
repz
repz
inc
jmp
ds
jmp
xchg
lock
hlt
jmp
movsl
mov
or
std
leave
jge
push
les
sub
sti
fdivr
orb
scas
ja
dec
mov
xchg
pop
pushf
mov
mov
dec
aad
into
mov
xchg
jmp
in
movsb
lds
jp
stc
test
inc
ja
xchg
aas
add
je
adc
scas
jmp
jmp
mov
mov
jp
ret
mov
aam
push
out
adc
jne
fninit
in
push
pop
cld
rorl
loopne
push
and
adc
int3
imul
sub
push
mov
add
icebp
lret
int
orb
lock
or
xchg
out
adc
mov
add
fdivrs
and
test
int3
and
inc
dec
loop
test
jecxz
popf
inc
jb
push
dec
cld
stc
subb
lahf
out
mov
repnz
inc
je
cmp
movsb
pop
add
fdiv
xchg
rcr
es
mov
cmp
jge
cli
dec
mov
jmp
or
out
inc
pop
divl
cmpsl
std
xchg
popf
pop
lahf
jle
add
jmp
sbb
loopne
xchg
stc
jge
rorl
mov
cld
adc
adc
pop
into
push
mov
cmp
stc
les
ja
pop
dec
adc
jle
lahf
push
loopne
cld
sbb
mov
cli
cmp
push
movsb
stc
mov
scas
lret
and
mov
sahf
xchg
push
addr16
xchg
sahf
fsubl
ja
mov
or
mov
std
mov
jp
in
inc
call
aad
les
fsubr
ret
jl
sti
sbb
cmc
repz
jmp
out
mov
sub
xorb
in
mov
sbb
aaa
sti
es
ja
adc
std
inc
jecxz
jb
ljmp
test
sbb
scas
insl
dec
mov
inc
mov
mul
incb
cli
add
jge
jg
lods
cmp
sbb
pop
test
lret
ficomps
mov
jae
lahf
in
xchg
ljmp
test
mov
cs
sti
into
into
pop
inc
scas
xchg
and
pop
or
jne
jecxz
sub
lods
negb
dec
fidivrs
ja
cmpsb
cmc
jmp
std
xor
push
fidivrs
icebp
dec
imulb
mov
sbb
aaa
scas
push
jmp
sbb
add
dec
lahf
insl
mov
push
or
sbb
clc
lods
icebp
push
mov
fcomp
loope
jne
or
ljmp
icebp
sbb
mov
scas
mov
std
mov
mov
out
jae
int
mov
repz
mov
push
cli
stos
inc
jne
mov
xchg
lret
out
lret
ret
mov
cli
stos
jmp
inc
cld
stos
inc
loope,pn
js
shrl
xchg
pushf
das
jmp
cmp
xchg
stc
dec
idiv
fsubr
popa
dec
push
dec
out
idiv
cwtl
faddl
jge
and
add
inc
xchg
push
inc
into
cld
inc
repnz
mov
fistpl
push
cwtl
mov
jb
push
add
adc
dec
stc
dec
add
jge
jb
dec
add
inc
dec
push
std
xchg
shrl
add
dec
add
aaa
out
ss
push
loop
leave
stc
cmp
push
add
pushf
out
jae
push
ss
dec
std
sub
iret
dec
dec
sub
imul
pop
mov
and
shll
and
push
mov
cmp
xchg
mov
cld
xchg
mov
lea
adc
fisttpl
push
popf
andl
pop
icebp
leave
cmp
pop
cmp
mov
sti
fwait
ja
fnstcw
flds
gs
jns
out
xor
gs
xorl
jno
jp
mov
cmc
sub
enter
lcall
xchg
sub
inc
enter
frstor
mov
cld
es
pop
mov
incl
and
std
cmp
aam
lcall
sbb
sbb
idivb
sub
in
push
dec
fadds
out
scas
into
dec
pop
rcrl
out
or
cmp
inc
jns
dec
dec
std
lods
out
cmp
push
mov
mov
mov
ljmp
fildll
insb
cmp
jb
scas
cmc
xchg
mov
mov
push
inc
or
mov
out
xchg
jge
cmc
sahf
pop
lock
mov
neg
jg
xchg
test
dec
in
in
mov
imul
xchg
hlt
jmp
out
mov
sbb
mov
repnz
xchg
add
das
sub
add
gs
outsb
jb
dec
scas
xchg
stc
daa
daa
mov
pop
movsl
scas
cltd
sbb
ja
scas
adc
jbe
jle
mov
hlt
mov
sahf
in
cmp
jbe
jmp
mov
mov
push
cmp
xchg
sti
push
xchg
loope
mov
cmc
xchg
stos
ficoms
je
lret
test
mov
jmp
push
inc
and
repz
add
mov
or
stos
push
test
jbe
pushf
push
aaa
mov
iret
loop
incl
xchg
cmc
div
dec
mov
jbe
ljmp
pop
or
je
cmpsb
mov
cwtl
mov
sti
repz
jg
out
xchg
sarl
repz
out
jmp
pop
imul
fstpl
iret
inc
outsl
clc
mov
lcall
cmp
out
add
push
xchg
jg
into
outsl
pop
out
cld
mov
pop
adc
mov
push
iret
xchg
gs
outsl
sbb
fdivl
or
fadds
xchg
inc
mov
ja
fcomps
xchg
and
fucomip
jne
outsl
test
push
cmpsl
in
dec
ja
out
aam
jne
scas
jnp
mov
or
iret
ja
jmp
mov
jg
sti
sbb
insb
xchg
rol
mov
mov
cmc
popf
je
mov
pinsrw
push
xchg
jbe
pop
or
call
adc
jecxz
lea
push
lods
mov
aam
mov
aas
adcl
inc
repz
mov
imul
in
sbb
mov
test
out
xor
mov
ljmp
rcrb
mov
mov
xchg
jge
cmp
mov
push
mov
fucomip
mov
push
mov
mov
insl
mov
mov
cmpsb
in
bnd
daa
mov
sbb
sbb
cld
div
icebp
mov
mov
sarb
jge
fadds
sarb
push
xchg
cmp
lret
clc
test
fistpll
sub
cld
ss
pop
adc
in
shld
testl
cld
pop
aad
ret
gs
xchg
gs
aaa
scas
pop
movsb
adc
repz
cld
and
inc
xchg
hlt
into
clc
xorb
xor
lret
aad
ss
adc
jge
ret
repnz
leave
mov
or
pop
mov
cld
ljmp
cmc
push
shlb
ja
fnstcw
call
hlt
fmul
jne
leave
mov
ds
mov
xchg
mov
insl
ja
cmp
icebp
cmp
adc
test
fwait
in
rorl
outsb
ret
or
sahf
jb
fldl
insb
jge
scas
lret
mov
in
in
add
mov
xchg
movsb
fstpl
out
inc
repnz
mov
cmp
repnz
lds
shl
jns
movsl
mov
xchg
mov
push
mov
cmp
test
cltd
xchg
incl
je
jge
in
jg
dec
pop
outsb
call
mov
push
jns
mov
cmp
jne
dec
dec
std
scas
in
push
test
test
cli
lret
lods
divb
inc
push
mov
hlt
incl
adc
xchg
aas
stc
jbe
decb
nop
sti
pop
hlt
movsb
scas
aad
mov
std
fidivl
mov
pop
cwtl
mov
sbb
xchg
xor
or
mov
sbb
xor
push
dec
inc
cld
lret
popf
dec
sbb
mov
xchg
lcall
dec
or
xchg
fsts
xchg
cwtl
mov
cld
lret
mov
mov
xchg
insb
loopne
stos
xlat
ljmp
add
in
push
mov
ljmp
into
dec
mov
push
iret
cli
jg
std
sub
and
int3
xchg
push
adc
js
loopne
hlt
cwtl
out
adc
mov
cwtl
jo
in
call
push
int
cmc
xchg
mov
or
mov
lock
je
inc
xchg
clc
hlt
xchg
fdivs
mov
jo
xchg
push
dec
scas
fmuls
mov
daa
decl
lock
pushf
decl
adc
and
loopne
daa
daa
jle
jbe
mov
add
ficompl
and
lcall
push
stc
mov
fcmovbe
sarl
xor
int
int
int
int
add
test
int
int
int
int3
mov
int3
lret
mov
mov
icebp
lret
add
push
add
push
lret
cmpsb
jle
leave
ja
jb
dec
stc
push
in
leave
lds
ja
stos
xchg
out
add
cs
cmpsb
xchg
jmp
add
adc
add
lds
lds
out
add
inc
call
rol
ret
fwait
ret
xchg
ret
adc
ret
shrl
popl
add
mov
pop
ret
std
shl
mov
rcrl
rcll
rcll
negl
lcall
fnstenv
cld
out
sar
dec
cld
add
out
dec
stos
hlt
inc
shl
out
enter
push
lcall
in
pop
sbb
in
mov
out
cld
call
sti
ljmp
out
iret
std
stc
fistpl
push
in
imull
mov
mov
icebp
ficomps
decb
out
pop
cltd
jg
hlt
aas
leave
cmp
jnp
add
sub
stc
mov
clc
push
jg
insb
lcall
test
mov
loope
pop
sub
dec
mov
cmpsl
stos
jno
popl
inc
cmpsb
cmp
mov
cs
rcrb
cmpsl
in
std
sti
call
stc
hlt
dec
add
es
mov
adc
mov
loop
pop
mov
ret
dec
lods
mov
icebp
sub
fsubrp
repz
out
mov
incl
out
ljmp
leave
lahf
jl
sub
fcoms
pop
cmp
cld
jle
xor
mov
call
sti
jg
jmp
add
inc
add
call
int
jmp
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
pusha
mov
mov
xor
mov
inc
cmp
jb
popa
jmp
