insb
aas
mov
out
and
add
and
and
dec
shll
xchg
test
in
add
sbb
cmp
imul
xor
cmpsb
mov
clc
and
data16
and
sbbl
xorl
jbe
fwait
mov
cmpsl
addb
aas
add
ret
pushl
gs
xor
cs
insb
add
or
ficoml
sbb
push
gs
bound
push
jb
jbe
insb
gs
fcomi
jg
pop
jae
jae
gs
and
inc
inc
add
filds
jo
push
gs
outsl
imul
add
adc
adc
bound
xor
cs
jnp
out
jg
xor
pop
imul
insl
fs
aas
fisttpll
add
je
pop
outsl
arpl
bound
in
pusha
outsl
cmp
xor
sbb
or
xchg
shlb
daa
push
mov
sub
jg
mov
faddl
out
std
rclb
xor
insl
outsl
incl
lea
push
mov
push
or
lds
lret
in
gs
popa
enter
push
lret
insl
mov
add
outsl
int3
int
pop
into
push
xor
shlb
cmp
xor
push
aad
xlat
pop
fdivs
data16
aaa
fisttpl
push
pop
loope
xlat
insb
mov
inc
in
and
add
int
jmp
jmp
xor
shll
in
aaa
lock
repnz
idiv
imull
fwait
insl
stc
dec
pop
cli
sti
js
je
mov
mov
sub
mov
pop
adc
fnstsw
adc
and
mulb
jg
cmp
je
push
push
call
mov
jmp
mov
cmp
jne
xor
jmp
lea
cwtl
decb
movl
testb
dec
jne
adc
adc
jne
push
or
mov
sbb
iret
das
aas
repnz
inc
adc
cmp
jne
mov
jnp
fbstp
mov
pop
pop
pop
leave
ret
mov
in
sbb
xchg
leave
mulb
adc
push
push
imul
stc
ret
hlt
push
push
jbe
or
push
clc
add
mov
push
sbb
js
push
lock
notb
push
pop
insb
pop
push
cltd
movzwl
push
push
stos
mov
addr16
xor
cmp
je
push
adc
or
sub
iret
and
cmp
adc
push
push
sub
sbb
outsb
push
je
loope
mov
lea
or
movsl
sbb
jecxz
jns
insl
jns
in
sbb
pop
ret
cltd
rorl
mov
mov
clc
inc
xchg
xor
int
mov
mov
push
scas
inc
adc
mov
in
pop
or
push
adcl
mov
fcmovne
fldenv
cmp
in
lods
jnp
adc
clc
push
dec
inc
mov
push
push
sbb
dec
ja
loope
push
jno
dec
inc
pop
jae
lahf
cmp
jge
add
lods
mov
and
jo
sub
dec
push
divb
or
call
or
loop
cld
xor
imull
sbb
in
adc
and
push
add
leave
jnp
mov
cmp
adc
int3
out
cmp
aas
jnp
pop
inc
cs
ja
jmp
sbb
icebp
push
mov
push
and
jno
fimuls
sbb
pop
adc
test
call
mov
ror
mov
inc
inc
dec
dec
test
jne
push
pop
and
fldenv
in
xor
mov
push
jecxz
mov
xchg
inc
cmpb
pop
fadds
test
add
aad
pop
clc
inc
and
loope
jno
jnp
mov
movsb
sub
cltd
jae
push
daa
push
mov
in
int3
sbb
sub
outsl
push
mov
adc
xor
adc
out
inc
js
lock
push
mov
in
inc
mov
and
jno
insb
push
pop
or
daa
fsubrl
adc
call
or
pop
negl
pop
rolb
add
std
add
in
leave
sbb
je
or
je
div
fucomp
repz
lea
andb
faddl
mov
loope
rep
stos
jle
sbb
adc
loopne
int
add
add
xor
test
dec
xchg
or
ficomps
jg
or
mov
pop
call
popf
xchg
cmp
push
xor
lret
push
pushf
lock
mov
jp
fldlg2
sub
sub
push
in
imul
mov
aas
sub
pop
mov
pop
pop
pop
pop
testb
push
xor
cld
pop
jmp
pop
outsb
outsl
jmp
rcrb
or
fstl
lcall
outsb
ljmp
xchg
fildl
add
je
popa
lcall
pop
add
pop
lcall
popw
fstps
jne
insb
inc
or
xor
cld
mov
inc
ja
addr16
jge
pop
mov
outsb
imulb
push
add
add
sbb
add
fwait
cmp
in
adc
adc
add
in
pop
testl
dec
xchg
leave
sbb
pop
repz
mov
icebp
stos
push
cmpsl
stc
add
std
enter
cld
dec
fistl
pop
adc
cld
fwait
mov
push
pop
sar
fxch
scas
mov
inc
rclb
pop
jo
addr16
fldenv
pop
int
mov
iret
push
rcrb
xchg
movsl
insb
rcl
or
lcall
cwtl
stc
pop
lcall
jb
cmp
mov
adc
mov
mov
mov
jns
add
jne
cmp
rorb
push
loop
cli
int
out
jl
add
pushl
js
mov
sahf
sbb
mov
fimull
lods
flds
fs
outsl
outsb
pop
cs
or
clc
je
jae
pop
sti
insb
mov
adc
xor
out
pop
in
jg
or
clc
scas
addr16
lods
clc
mov
ds
icebp
xlat
xor
push
int
or
rcr
data16
data16
call
xchg
das
push
ficoms
sti
mov
adc
dec
or
cmp
sub
push
call
insb
mulb
push
sar
stc
fcompp
iret
int3
push
push
jbe
fsubrs
stos
jl
call
call
daa
cmp
lcall
push
js
inc
lcall
js
imul
out
and
lock
xchg
cmp
and
sbb
inc
nop
cmc
xlat
vdivsd
and
in
xchg
retw
insb
xchg
and
cmc
fs
sbb
js
pop
mov
or
je
adc
cmp
enter
aad
sti
push
bswap
lods
mov
jnp
jmp
and
xchg
add
inc
pushf
pop
push
cmp
fdivp
sub
jmp
pop
loop
pop
jae
sub
mov
or
loope
push
inc
adc
jmp
cs
dec
movsb
inc
cmpsl
in
adc
and
and
jb
loop
mov
adc
or
dec
inc
dec
dec
and
mov
push
dec
inc
dec
jb
push
dec
cs
adc
or
outsl
add
push
hlt
sbb
cld
or
addb
decl
add
add
nop
add
xor
mov
cwtl
add
mov
add
add
pop
mov
int
mov
test
js
outsl
addr16
insl
and
outsb
outsb
outsl
je
cmp
jmp
and
outsb
and
inc
dec
push
and
fs
jg
ss
ja
push
aam
repnz
add
sbb
int
pop
scas
or
inc
rcll
cld
inc
mov
loope
fdivp
frstor
daa
repz
gs
inc
roll
cmp
stc
inc
out
push
jbe
cmp
push
imul
pop
repnz
dec
add
jge
cld
dec
push
and
add
addb
pop
lds
ret
pop
add
hlt
add
outsl
ss
xor
pop
mov
imull
mov
add
pop
leave
mov
test
push
xor
xor
bound
xchg
or
std
pop
les
nop
push
add
xorl
mov
lahf
mov
loopne
inc
push
push
pop
sar
pop
lret
daa
dec
jb
insb
outsl
arpl
movsb
jmp
or
inc
andb
dec
shll
mov
push
iret
ss
roll
sub
lods
das
cld
lods
xor
shrl
mov
jmp
lods
data16
jl
shll
shr
xor
add
shll
test
mov
lcall
and
inc
imul
imul
jae
lock
jnp
cs
pop
xor
mov
pop
test
cmp
sbb
je
rorl
clc
cmpsl
jnp
mov
mov
aam
pop
add
ss
scas
out
xor
adc
xor
inc
lcall
push
sbb
and
lcall
data16
imul
imul
mov
out
add
cli
stos
ljmp
pop
adc
cmpsb
xchg
xchg
les
adc
addb
cmpsl
in
insl
mov
pop
jl
mov
scas
adcl
outsb
je
je
xor
dec
sub
sub
push
gs
fs
sub
dec
je
divb
jne
jns
outsw
inc
aaa
dec
jo
outsb
push
fcmovnu
ret
insb
adc
adc
dec
add
xchg
adc
gs
nop
add
leave
adc
lea
lahf
xchg
add
cmp
adc
sbb
pusha
add
xchg
or
inc
enter
pop
add
scas
inc
test
add
or
add
mov
mov
sbb
and
or
xchg
ret
pop
add
mov
mov
mov
ja
aas
and
ret
and
test
sub
decl
add
mov
and
pop
pop
sbb
pop
inc
fcmovne
push
xchg
inc
pop
add
aad
or
inc
mov
sbb
cmpsb
pop
fmul
dec
jae
xor
hlt
pop
in
xor
ud2
push
add
outsb
ja
mov
add
adc
je
mov
add
gs
sbb
pop
add
mov
gs
add
fstp
jg
push
inc
jb
push
and
ja
or
push
mov
jae
add
and
addr16
xor
push
add
mov
pop
add
aas
push
pop
pop
cs
push
call
imul
gs
popa
insl
xchg
push
dec
inc
push
push
inc
push
inc
dec
adc
das
hlt
or
outsl
data16
imul
dec
push
inc
jne
jb
hlt
fildl
jae
outsl
outsb
dec
fwait
ja
jb
aad
sti
imul
fs
aas
add
pop
fmull
jae,pn
sub
xor
sbb
mov
rorl
and
lods
mov
inc
call
inc
push
je
or
mov
pop
mov
out
frstor
pusha
and
outsl
jne
jae
adc
jmp
push
lahf
popa
dec
push
push
sbb
mov
jg
push
push
addr16
push
jnp
insl
push
movsl
push
inc
js
pop
in
pop
lret
adc
loopne
je
push
jns
faddl
jo
outsl
je
lahf
jne
scas
lret
popa
je
sbb
outsb
or
xlat
lcall
insb
imul
adc
movmskps
fnsave
add
push
mov
call
mov
jae
outsl
lock
loop
shr
inc
add
push
push
sti
inc
mov
add
mov
mov
push
mov
push
push
push
call
sub
xor
addr16
lcall
into
and
pushw
add
aad
xchg
inc
push
pop
daa
adc
inc
dec
sbb
xor
sbb
outsl
or
xor
lods
nop
ds
shrb
movl
inc
and
out
jne
pop
fadd
fcomp
pop
arpl
jae
cs
cmp
inc
repz
sbb
cmp
add
add
add
pop
xchg
add
dec
popf
add
and
sbb
pop
jae
popl
adc
pusha
add
dec
dec
outsb
jnp
rcl
fadds
faddl
jns
in
lidtl
pop
push
pop
xchg
pop
pop
jb
pop
xchg
lea
and
mov
in
add
lcall
dec
cli
sub
mov
add
sbb
push
adc
mov
sub
mov
andl
stos
push
jl
mov
mov
xor
scas
jmp
test
lea
adc
push
decl
inc
in
push
push
call
in
add
movb
idiv
mov
sub
sub
mov
movb
inc
or
movb
insl
push
mov
mov
inc
inc
call
jg
push
imul
dec
cld
dec
fisttpll
or
smsw
insb
rclb
or
es
lds
jb
mov
or
inc
push
jmp
mov
pop
adc
and
mov
mov
xor
pushf
jmp
push
movzbl
rcll
enter
addr16
mov
andb
insb
outsl
sti
add
xor
aas
jle
pop
cmp
sbb
int
pop
jl
push
aaa
je
jle
test
xor
adc
adc
add
adc
cmp
adc
adc
mov
add
int3
adc
add
inc
push
xor
add
jo
fildll
ds
add
aas
or
push
addr16
add
push
dec
and
or
adc
or
ja
or
mov
and
outsl
incl
cmpw
jne
dec
cmp
add
cmp
lret
test
repnz
ds
lea
add
sbb
add
add
adc
stc
adc
lea
xor
adc
xor
adc
mov
lock
push
sub
cmp
fimuls
xchg
jbe
inc
add
add
jge
push
push
cmp
call
pop
pop
mov
push
push
and
pop
mov
sub
xor
sub
insb
dec
xor
sub
push
in
sbb
aad
adc
outsb
xlat
cwtl
sub
push
mov
or
movsw
mov
mulb
movsl
movsb
mov
nop
arpl
sbb
mov
js
sbb
insl
dec
lret
cmp
rcrb
or
pusha
and
mov
sar
movsb
pop
dec
pop
mov
in
sub
shll
push
or
sarl
push
mov
pop
cli
mov
add
mulb
xor
inc
cmp
or
sbb
pop
add
add
lds
jecxz
fildll
lret
cli
test
lret
push
enter
mov
or
test
sbbl
mov
bswap
add
test
fucomi
pop
push
mov
jne
sub
mov
push
jne
hlt
dec
out
xor
or
jmp
pop
call
fidivl
fisubs
lock
add
inc
inc
jmp
mov
jb
sbb
pop
cmp
xor
add
mov
add
pop
or
gs
mov
sbb
andw
mov
push
adcb
add
cld
pop
jb
jne
pop
es
clc
mov
sbb
push
push
push
push
imul
sbb
int3
divb
jne
xor
xor
xchg
out
mov
xchg
aaa
lea
cmp
jne
and
cli
popf
sti
pop
cmp
mulb
mov
cmp
pushf
jns
pusha
in
push
inc
push
pop
cld
call
mov
out
call
xor
mov
add
push
jo
inc
loope
call
cmp
add
cmpb
pop
jbe
dec
inc
jg
or
clc
add
cmp
out
or
dec
outsl
js
add
je
add
cld
dec
sbbl
adc
stc
xchg
mov
add
cmp
enter
test
add
xorb
scas
test
jl
add
scas
nop
pop
dec
add
xor
adc
sub
or
xchg
cld
xchg
xor
adc
jb
jmp
cld
adc
nop
add
fwait
aas
cmp
jecxz
sbb
xor
and
inc
push
push
mov
add
in
pop
jmp
adc
adc
loopne
xorb
adc
clc
jle
fistps
pushl
fstpt
pop
adc
push
mov
cmp
ja
clc
fwait
sbb
lods
call
adc
je
test
adc
push
mov
inc
hlt
mov
shl
outsl
and
jne
cmpl
daa
xchg
mov
cmp
out
mov
xor
inc
clc
xchg
cmp
std
test
loopne
add
popa
shr
das
test
cmp
sahf
inc
cmp
mov
jbe
ror
sbb
notb
fcoms
add
xor
pop
jl
addb
cmp
fwait
mov
jmp
aaa
ret
add
into
bound
in
je
mov
push
and
add
rorb
push
jmp
adc
xor
mov
shr
lret
or
imul
nop
sub
pop
inc
idiv
cli
pop
mov
adc
jg
sbb
jmp
andb
add
xchg
lock
add
sarb
enter
pop
add
jo
test
add
dec
dec
xchg
adc
adc
add
leave
lahf
inc
fcoml
add
aam
lock
adc
jle
test
adc
adc
enter
jmp
mov
mov
out
xchg
gs
js
clc
fs
ja
xor
cli
sub
cmpb
loope
add
jl
aas
cmp
fsubl
mov
imul
cmc
call
or
andl
xor
adc
ljmp
xor
imul
adc
and
add
dec
adc
mov
addl
roll
sti
das
jne
cmp
loopne
cmp
jae
incl
lret
shr
or
pop
faddl
dec
or
push
mov
push
jecxz
imul
or
ds
sub
repz
in
xchg
je
mov
mov
add
loop
or
adc
or
outsl
sbb
adc
add
jne
xor
aad
outsb
push
fwait
rolb
pushf
stos
pop
cs
aam
mov
add
lods
std
cmpsb
in
jno
cwtl
cmp
and
push
jl
and
repz
add
lea
mov
shr
mov
add
outsl
mov
and
not
and
testl
lea
test
push
mov
enter
mov
or
mov
and
or
lea
cld
mov
std
shr
shl
push
pop
inc
sub
mov
and
not
fwait
jmp
lods
cmp
add
repz
mov
out
into
mov
roll
add
dec
aaa
shll
jg
push
xchg
lods
lea
sbb
cli
mov
adc
push
jle,pn
not
and
mov
and
adc
movb
mov
fidivl
add
adc
mov
sbbb
or
mov
xchg
adc
sbb
inc
xor
pop
je
mov
or
pop
mov
sbbl
int3
xor
add
lret
push
push
xor
pop
ficomps
lret
sbb
les
rep
repz
pop
rolb
fcomp
cwtl
subb
orl
in
or
and
not
fisubrs
in
cld
ret
adc
pop
scas
testl
sti
mov
pop
les
subb
cltd
ss
add
pop
push
loop
pop
push
sub
sub
fsubs
push
push
add
mov
pop
mov
pop
mov
test
les
adc
xor
or
xor
out
mov
or
xchg
jno
std
stos
mov
fmuls
lods
es
add
and
lods
fnsave
cmp
pop
aaa
mov
push
mov
cmpsb
pop
mov
xor
dec
mov
mov
pop
or
popa
adc
mov
outsl
jecxz
and
mov
mov
shl
ljmp
push
push
and
aad
aam
in
ret
pop
bound
sbb
jp
outsl
lock
and
jg
rcr
sub
inc
mov
rclb
push
fadds
hlt
or
daa
clc
jb
mov
push
pop
pop
es
adc
repnz
adc
and
mov
pop
mov
mov
add
mov
shll
imull
aaa
outsl
mov
mov
adc
call
insb
int
add
fdivs
push
shlb
adc
add
rorb
in
pop
sahf
pop
and
clc
cmp
sbb
pop
jge
cli
fnstcw
ds
jg
or
fnstcw
fbstp
xor
loope
out
sbb
loopne
ret
fstpt
add
pop
aaa
or
mov
xor
fbstp
data16
xor
aad
adc
mov
push
inc
test
fsubp
fwait
aaa
or
mov
adc
inc
loop
shr
fwait
insl
adc
fdivs
xor
imul
into
fwait
push
aam
mov
xor
push
and
sub
aad
flds
outsl
adc
dec
int
inc
xchg
dec
fisttps
sbb
lea
or
mov
xor
xor
test
jmp
outsb
mov
test
xor
mov
repz
cmpb
divb
adc
ret
pop
js
lds
popa
popf
insl
jno
and
xor
mov
repnz
jns
and
or
in
mov
inc
ja
xor
mov
into
es
sbb
xchg
mov
fisubrs
sub
loop
fmuls
sub
int3
pop
pusha
dec
mov
jno
cli
xor
negb
mov
jae
clc
xchg
mov
or
mov
jle
sub
repnz
jae
mov
add
sbb
int
xor
imul
out
js
pusha
mov
mov
fidivl
cmc
shrl
xor
aam
xchg
jae
adc
rol
test
xor
in
add
mov
or
xchg
lods
mov
push
aas
sbb
cmp
rcl
fstps
js
jbe
les
in
in
loop
mov
fstpt
out
push
in
clc
jl
pop
je
xlat
insb
cmp
dec
pushl
or
insb
in
jnp
aam
gs
lods
les
subl
stos
popa
fstpt
mov
stos
rcrb
sbb
pop
fucomi
jp
or
in
sbb
jl
inc
xchg
in
test
or
inc
push
or
es
jle
mov
mov
xchg
stos
adc
lock
in
inc
push
hlt
cmp
fistl
mov
xor
in
cmp
aas
cmp
pop
pop
gs
sbb
rcrl
xchg
in
xchg
int3
or
push
or
ja
and
rorb
hlt
out
incl
cltd
in
unpckhps
sbb
out
in
rcrl
test
sub
out
xor
call
mov
jecxz
jp
sbb
das
mov
dec
fistpl
loopne
je
mov
or
ret
or
aas
xor
add
mov
ja
mov
cmpb
push
test
sbb
ja
mov
xor
out
xchg
sbb
fiaddl
jb
cmp
mov
pslld
ret
mov
insb
xor
pop
rclb
xor
pop
jecxz
dec
mov
pop
jge
xlat
pop
add
add
movsb
mov
ficoml
or
or
pop
std
inc
adcl
mov
mov
jp
or
mov
xor
ljmp
mov
push
push
push
jo
xor
incl
cmp
push
insb
mov
adc
xchg
mov
outsb
lea
lods
fldt
pop
inc
test
sub
fldt
iret
pop
pop
mov
mov
into
ljmp
testb
push
add
sbb
cmp
mov
fistl
adc
pop
push
fistps
xor
mov
insb
pop
or
push
or
cld
call
adc
pop
jbe
lea
aaa
fstpt
jl
push
jo
or
dec
cmp
fcoml
lods
jmp
jmp
imul
add
lea
mov
popf
lea
mov
adc
lahf
mov
xchg
add
pop
jnp
int3
push
loopne
out
mov
pop
int3
rolb
aam
call
or
jmp
adc
in
add
adc
into
inc
jmp
out
add
jl
lahf
addr16
gs
das
lock
jo
sub
int3
repz
gs
divl
lock
pushf
mov
fistps
or
jge
dec
inc
js
rep
call
dec
adc
sbb
adc
in
rcrb
mov
lods
mov
orl
outsb
les
jmp
in
or
jae
addr16
push
pop
into
push
pop
rclb
jge
call
test
fistl
push
ds
push
nop
inc
subl
dec
out
push
out
push
movsb
add
xchg
gs
inc
pop
mov
mov
in
mov
fcomps
push
addr16
inc
jbe
cld
push
cmp
ss
xor
fisttpll
cmp
push
mov
shll
int3
add
push
and
or
or
addb
jne
call
pushf
add
or
dec
movsb
xor
push
push
push
inc
jnp
add
fs
sar
cmp
cmp
add
xchg
je
in
xchg
push
popf
inc
jge
f2xm1
cld
das
sub
push
pop
xor
mov
int3
or
add
mov
push
movhps
mov
push
daa
je
push
or
jmp
lock
xchg
inc
xchg
and
jmp
adc
cmpl
mov
or
adc
adc
pushl
mov
cmp
je
dec
dec
cmpw
pushl
cmp
pop
push
arpl
inc
add
cmp
add
mov
push
scas
loope
jmp
pop
andps
gs
mov
push
aad
out
xchg
sbb
aad
jbe
cmp
mov
addl
pop
push
mov
fwait
ret
push
or
fucomp
insl
in
push
je
xchg
cmp
testb
jae
sti
decl
je
cmp
jne
push
in
mov
punpckhbw
push
outsl
jne
pop
in
testb
lret
or
jbe
ja
jge
jmp
imul
xlat
pop
xchg
xor
add
loopne,pt
cmp
inc
icebp
das
sub
outsl
fdivrl
adc
dec
outsl
inc
test
push
faddl
aam
inc
adc
rolb
jmp
loopne
mov
test
stos
in
push
mov
cmp
mov
dec
int3
enter
sbb
push
nop
jns
xchg
fsubp
add
jne
mov
push
mov
and
call
ret
mov
jne
mov
mov
jo
cmpl
mov
call
leave
int
int
mov
add
sub
adc
fisttps
sti
sub
mov
fsubl
lds
add
jg
std
and
mov
inc
loop
lods
jle
ret
xor
dec
add
cmp
imulb
and
pushf
insb
iret
std
jbe
mov
inc
push
out
mov
je
cmp
mov
ret
jne
cmpl
lods
std
fstl
jae
cmp
je
jo
push
push
mov
dec
sarb
mov
and
std
jp
jg
bound
pop
adc
pop
pop
call
outsl
jmp
add
mov
cmpb
sub
mov
std
je
jmp
pop
mov
idiv
xchg
adc
jmp
les
mov
dec
mov
jle
jb
cmp
push
mov
mov
or
adc
pusha
sti
dec
inc
push
jo
or
push
cmp
xor
push
insl
mov
cs
lret
in
push
mov
mov
mov
mov
in
mov
gs
mov
and
mov
xor
jo
mov
lret
insb
outsl
jb
jb
stos
insl
shrl
fcmovu
gs
insb
mov
test
loop
jecxz
pop
in
lret
insl
xlat
in
out
dec
out
call
cmp
sub
xchg
insl
jae
insb
cmpsb
imul
mov
pusha
dec
ret
dec
mov
jbe
les
lds
mov
mov
xlat
xor
lret
cmp
int3
hlt
xchg
push
xor
xlat
sub
xchg
mov
mov
mov
pushf
adc
mov
mov
mov
mov
inc
sub
movsb
inc
add
lcall
test
pop
mov
ds
hlt
cli
jns
lea
cmp
cmp
dec
sbb
je
shlb
inc
or
int3
mov
aaa
add
push
mov
fadd
sub
in
inc
int
pushf
pop
je
jmp
jbe
loopne
clc
ds
dec
and
sub
outsb
or
or
pop
dec
rolb
pop
xchg
jae
je
mov
hlt
roll
div
adc
lods
in
cmpl
pop
pop
xor
out
shrb
rcr
xor
push
inc
jge
sti
call
adc
fsubs
push
loopne
push
shl
and
and
cmpsb
jae
cli
out
pushf
pop
fsts
ret
sbb
daa
xor
push
push
inc
and
outsl
xchg
sub
xor
test
movsl
test
sbb
mov
adc
cmp
jmp
mov
nop
leave
lea
xchg
repnz
hlt
cli
mov
inc
and
sbb
std
insl
hlt
cld
mov
mov
pop
in
sub
std
sbb
fwait
mov
movsl
or
out
mov
xchg
mov
insl
es
push
fdiv
mov
sti
inc
xor
insb
icebp
inc
bound
inc
out
sub
cld
sti
and
adcb
outsl
fs
js
and
mov
jo
inc
cmp
sub
or
push
push
bound
out
adc
test
sbb
xor
sbb
inc
and
inc
shrl
stos
mov
sahf
test
pop
inc
adc
test
lds
inc
adc
and
ret
sbb
mov
outsl
mov
and
pop
lods
inc
cmp
fidivl
xor
jl
jns
xchg
leave
ret
pop
imul
adc
mov
push
cmp
add
fmull
push
aam
dec
gs
adc
testl
loopne
push
push
jl
leave
insl
imul
in
pop
hlt
adc
cmpsb
aas
lods
adc
cmp
inc
push
push
dec
dec
cltd
in
xchg
cmp
push
shr
sbb
xchg
xchg
mov
xor
fucomp
mov
cmpb
or
das
pusha
out
jae
shll
aas
and
cs
push
jge
pop
push
jo
clc
hlt
in
sbb
lock
xorb
into
and
outsb
adc
or
aam
cmp
cmpsl
sub
adc
mov
cmp
adc
sbb
and
sbb
cmp
push
and
xlat
jmp
push
js
push
mov
scas
fs
or
cmpb
stos
and
sarl
push
cmp
xchg
scas
pop
add
out
or
call
loope
sub
pop
or
in
mov
mov
subb
cmp
push
cmp
pusha
mov
xor
cld
cld
lcall
insb
insb
cmpsb
imul
sub
outsb
das
fsubs
ja
fildl
or
fidivs
fbstp
and
xor
xor
dec
mov
pop
xor
sti
cld
std
insl
scas
fstps
sbb
lcall
mov
xor
lcall
fs
pop
insl
xlat
add
bswap
pop
pop
gs
mov
lret
popa
js
gs
xchg
je
outsl
outsb
xor
je
lcall
add
jo
in
xchg
mov
pop
insb
lock
sbb
sbb
pop
pop
push
or
in
sbb
xlat
mov
out
pop
push
fldenv
or
pop
push
pop
push
hlt
push
nop
add
xor
arpl
pop
in
xor
int
pusha
adcl
in
pusha
test
daa
clc
jmp
loop
andb
push
rolb
jae
dec
ret
jb
jne
outsb
shlb
dec
shll
outsb
outsl
ja
inc
pop
mov
leave
or
cmp
loope
pushf
mov
and
fsubl
shl
outsb
outsb
sub
int
rcrl
rcll
ljmp
xor
xorl
aaa
movsb
mov
jo
subl
pushf
lcall
cmpsb
sub
cmpsl
sbb
or
cmp
or
call
add
jbe
ret
dec
rorl
cli
fdivr
xchg
clc
mov
mov
jge
lds
and
loopne
xlat
or
mov
dec
rcrl
xchg
repz
stc
inc
in
cltd
push
nop
in
lret
or
sub
outsl
insl
sti
sub
pop
push
adc
dec
in
push
sbb
push
insb
or
jne
xor
fcompl
and
popa
out
pop
pop
or
test
aaa
in
out
adc
mov
mov
sbb
xchg
icebp
aas
dec
mov
cmp
lea
push
test
cmp
movsl
movsb
cmp
hlt
pushf
or
and
sub
lahf
lock
mov
inc
adc
inc
adc
int
cmpsl
and
push
mov
pop
and
movsl
cwtl
fs
shlb
push
loop
adc
and
roll
pop
jl
jb
movzbl
xor
and
jo
or
cmp
and
push
and
dec
idiv
and
lods
add
clc
add
add
out
push
dec
jo
fwait
in
push
icebp
popa
pop
repnz
in
fcomi
imul
div
insb
push
shll
inc
je
dec
shrl
jbe
shll
outsb
data16
adc
ret
sub
push
jne
add
out
adc
cwtl
xchg
xchg
jecxz
inc
push
xchg
xchg
jae
mov
outsl
jne
in
mov
inc
push
pop
dec
inc
xchg
xchg
sahf
jo
push
ret
test
mov
adc
and
fcomps
call
xchg
ss
inc
cmp
add
push
inc
aas
push
add
sub
or
jecxz
jno
inc
in
sub
in
mov
sbb
clc
iret
inc
cmpsb
mov
lcall
pop
popf
mov
hlt
imul
jle
aad
mov
push
push
aaa
push
pop
int3
cmp
dec
mov
mov
fsts
adc
push
int3
push
xor
fistps
cmpsl
xchg
xchg
dec
repnz
mov
push
mov
xlat
xor
lea
lret
mov
ret
jmp
add
add
push
push
aas
ds
mov
cmp
xor
inc
and
mov
xchg
and
push
mov
fdiv
mov
leave
xchg
lret
iret
xchg
sti
push
xchg
pop
push
in
fs
jg
dec
insb
cmp
mov
lea
fnstsw
ss
ss
aam
push
adc
adc
adc
movsb
sbb
push
in
pop
pop
mov
movl
mov
and
mov
pop
imulb
xchg
bound
push
clc
xor
cmc
cmp
nop
sbb
jecxz
fucomp
nop
loopne
adc
shlb
jmp
iret
adc
add
std
sub
xchg
std
xchg
sti
aas
rcll
xchg
sub
aas
shrd
sub
mov
decb
mov
popa
push
add
sbb
fisttpl
in
imul
pop
push
pushl
or
outsb
mov
sar
pop
sbb
mov
mov
cmc
fisttps
add
dec
cld
sub
and
outsb
lret
push
xchg
fidivl
popa
cmp
mov
jae
es
sahf
adc
mov
movsb
imul
mov
les
jae
lret
mov
lret
cmp
cmp
dec
and
shll
jns
xor
shll
aam
dec
sarl
shrl
pop
das
das
enter
pop
xlat
xor
lret
int3
int
inc
iret
jae
jne
shll
rcl
adc
or
shll
aaa
fcomp
ficompl
jo
imul
imul
lcall
es
jo
and
fs
push
sbb
test
cmp
sbb
test
call
and
dec
xor
mov
int
cmp
bound
mov
pop
xchg
adc
pushf
sub
xor
sti
push
push
jns
push
mov
push
sub
xor
add
or
gs
les
rolb
nop
insb
jnp
jge
mov
or
push
or
adc
insb
fs
jo
je
sub
push
dec
pop
into
leave
push
data16
jl
movhlps
cs
pop
or
pop
sub
sbb
lds
cmp
fcomp
mov
cmp
out
call
add
push
mov
pop
xchg
inc
dec
push
xchg
push
inc
notb
roll
sbb
insl
mov
cltd
insl
sub
adc
inc
cmp
xorl
inc
mov
push
push
pushl
pop
xor
sbb
add
and
lret
adc
xor
and
adc
jmp
or
and
push
iret
lea
mov
aam
mov
cwtl
fidivrl
add
fstpt
sahf
movl
push
iret
add
inc
push
pop
xchg
mov
rcl
or
je
mov
insl
mov
pop
insb
or
push
mov
or
adc
adc
loop
or
mov
xchg
divl
sbb
testl
pop
sub
adc
dec
inc
adc
aaa
std
aam
add
push
sbb
xor
popa
inc
ss
in
sbb
pop
sub
mov
je
pop
mov
or
rcl
sub
push
xor
mov
pop
mov
movsb
cmpl
das
adc
xchg
xchg
mov
xorb
mov
sbb
adc
and
adc
aas
test
ljmp
add
call
call
jo
mov
pop
inc
jo
cmp
idiv
jo
dec
hlt
inc
mov
mov
push
mov
and
mov
jb
das
aaa
cmp
inc
or
cmp
adc
push
ret
fcmovu
js
movsl
sbb
adc
fucomip
push
push
int
mov
and
mov
pop
mov
sbb
push
clc
call
pop
jge
fs
pop
mov
aas
out
jge
push
rep
or
cld
mov
pop
rolb
repz
test
or
lock
je
lods
loope
mov
xorl
mov
mov
or
dec
jnp
push
push
jo
fdivrs
lods
adc
xor
add
aam
sti
into
push
adc
cs
sbb
fldl
lods
push
adc
insb
xor
adc
add
mov
jne
cwtl
in
fs
ss
push
cmp
in
mov
gs
push
jge
xchg
sub
jo
mov
jae
insb
scas
jmp
and
mov
lock
fstps
imul
xchg
sub
dec
scas
loopne
pop
mov
cwtl
scas
pop
and
into
jge
bound
push
mov
dec
xlat
orl
out
push
or
jnp,pt
fistpll
rcrl
ret
nop
insb
mov
or
fmuls
sbb
sbb
add
or
or
pusha
push
pop
mov
push
ss
insl
imul
fs
insb
cld
insb
dec
lcall
jne
pop
xchg
addb
insb
dec
dec
pop
cltd
gs
inc
rclb
call
mov
loopne
mov
pop
dec
xchg
gs
insl
inc
je
lcall
cwtl
gs
add
insl
gs
mov
mov
shlb
push
add
roll
aam
add
cli
pop
shlb
stos
popf
cmp
lea
dec
iret
mov
add
aaa
dec
mov
xor
dec
jecxz
sbb
es
cmp
addr16
jae
lea
push
addr16
insl
cld
xor
mov
int3
outsb
in
inc
out
inc
daa
pop
movsb
mov
sub
sbb
fcmovnu
iret
aas
imul
push
jne
mov
jl
cmc
and
jle
inc
push
xchg
test
xor
push
std
repnz
mov
sub
adc
int
lret
js
and
push
ljmp
call
aaa
jo
shrl
push
cmpsl
cld
pop
xchg
rclb
mov
push
sbb
nop
mov
rcrb
mov
push
pop
aad
shrl
sub
or
dec
push
push
fs
push
fdivrs
fidivs
push
push
lcall
mov
pop
bound
dec
test
out
adc
cmp
add
fisttpll
and
or
mov
pshufw
inc
mov
stc
fimuls
xor
test
les
jge
jns
jo
sub
xlat
cmp
add
push
punpckhdq
lahf
push
hlt
sub
jge
cmp
shrl
jbe
int
xor
popf
les
mov
dec
sar
sub
mov
lret
int3
rcl
fcomp
in
subb
call
dec
add
enter
rcrl
mov
sbb
and
adc
pop
stos
add
or
sub
clc
sbbb
dec
scas
adc
ja
mov
xchg
push
sti
inc
andb
pop
dec
mov
jge
sbb
cwtl
and
orl
xorl
inc
mov
repz
mov
cltd
mov
idiv
jle
push
or
fs
cmp
and
imul
loope
xor
add
inc
adc
outsb
je
aam
mov
mov
dec
lock
push
ss
sub
mov
ret
adc
and
push
xor
pop
add
adc
sub
xchg
push
and
xchg
gs
ss
dec
dec
dec
dec
pop
xchg
gs
inc
push
cs
xorl
insb
movsb
addr16
mov
adc
insb
jne
cs
insb
insb
jnp
sbb
push
stos
pop
and
imul
mov
xlat
xor
movsb
push
movsl
cmpsb
pop
cmpsl
pcmpeqd
pop
test
test
lods
gs
xchg
add
je
gs
push
pusha
jo
dec
jo
xchg
gs
xchg
outsb
push
gs
gs
inc
aam
mov
cmpsb
imul
pop
xlat
mov
es
shrl
js
xchg
xchg
xchg
xchg
int
xchg
inc
push
cwtl
js
lcall
je
inc
xor
in
es
fists
gs
and
jne
jae
out
cmpsb
imul
mov
jb
pop
xlat
insb
lgs
inc
mov
sub
mov
arpl
mov
enter
adc
lods
aaa
into
enter
mov
mov
jb
cmp
sahf
adc
cmp
cld
mull
and
cli
test
mov
add
cmpsl
cmovo
mov
push
sub
push
mov
pop
lahf
sub
push
push
mov
lahf
cli
aas
mov
test
push
pop
push
rorl
xchg
add
int3
je
xlat
pusha
mov
inc
imul
das
ljmp
xor
mov
fisttps
adc
dec
movsb
or
repz
sbb
jnp
rorl
sbb
rcl
mov
or
enter
das
popa
add
loopne
pop
mov
add
xor
sbb
ret
call
xchg
mov
stos
cli
xorb
cmpsl
cmp
stc
mov
test
lods
lsl
adc
or
push
and
bound
pop
frstor
lock
call
mov
jne
pop
or
mov
jge
mov
push
mov
cmp
mov
in
incl
les
leave
shr
hlt
or
push
scas
ja
fs
xchg
jae
pop
xor
and
call
gs
add
arpl
jb
sbb
lret
arpl
les
jne
subl
ret
inc
sbb
shll
fildll
and
fisubrl
mov
jl
jp
popa
cmp
pop
repz
mov
xchg
out
add
pusha
cmpb
mov
and
pop
inc
mov
jmp
and
pushw
sub
addr16
loope
out
dec
push
in
std
jecxz
icebp
and
jbe
xor
mov
cld
pop
call
push
jne
jb
push
movsb
sti
xchg
pop
aaa
mov
sbb
sbb
add
incb
cmp
loope
call
bound
or
pop
mov
xchg
jmp
and
mov
dec
loopne
aas
popa
xchg
push
cltd
arpl
lcall
outsl
jae
cmpsb
imul
imul
cmpsb
imul
call
and
repnz
std
repnz
out
leave
incb
cltd
sbb
cmp
fs
aas
xor
popf
arpl
je
outsb
lret
mov
dec
adc
and
mov
outsl
jae
jne
adc
sub
lcall
ret
push
sbb
int
fisttpll
adc
sbb
andb
sbb
mov
rolb
ret
xchg
neg
sbb
add
xchg
cld
std
testb
cmp
push
cmpsb
loopne
test
lret
dec
xor
shll
adc
addr16
pop
aas
pusha
and
lods
add
cmp
xchg
push
sub
dec
and
jae
je
xor
shll
arpl
jne
orb
mov
rcrb
inc
dec
lcall
mov
std
je
cmpl
incb
pop
loope
jo
lcall
sub
scas
dec
adc
addr16
jbe
in
in
in
dec
and
lea
jg
stos
stos
imul
mov
enter
aad
sub
cmp
ss
sub
pop
pop
xchg
and
xor
xchg
inc
sub
repnz
add
es
add
mov
and
mov
adc
loopne
pop
or
pop
xadd
out
cltd
or
shr
or
clc
mov
loope
and
inc
mov
lods
je
push
and
mov
stc
xor
or
orb
loopne
loope
pop
loope
cmp
loope
sub
jne
inc
cmp
mov
adc
dec
xor
mov
in
mov
lock
sub
cmc
cld
sbb
pop
xor
test
ja
dec
mov
xlat
lret
and
fidivs
adc
cmp
adc
and
inc
jl
cld
stos
mov
or
mov
ret
cltd
std
cwtl
mov
inc
cwtl
and
gs
xchg
aas
popa
arpl
pop
xchg
gs
outsb
cmp
pop
xchg
gs
imul
xor
xchg
gs
lods
scas
scas
xor
mov
push
mov
bound
sarl
mov
mov
mov
rol
ret
push
es
jne
mov
jne
int3
xlat
sub
mov
aas
popa
arpl
sub
mov
outsb
cmp
sub
jae
jb
jns
test
lret
jne
fwait
mov
mov
ret
lds
jb
jp
outsb
mov
std
and
dec
mov
mov
dec
jne
or
in
fucomi
jmp
push
shr
sbb
jmp
jmp
xchg
or
seto
out
and
or
insb
xor
pusha
loop
mov
pop
out
loopne
sbb
call
xchg
arpl
pop
add
xor
jbe
mov
xchg
cld
clc
int3
cmpb
aas
pusha
lret
sub
mov
test
cwtl
iret
inc
sbbl
les
sub
jae
pop
dec
xchg
in
je
outsb
cmp
addr16
jo
outsl
sub
test
es
dec
jl
or
cmp
leave
roll
cmp
xor
sarb
lods
inc
in
and
mov
scas
sub
divb
sbb
mov
popa
cwtl
sbb
dec
shll
arpl
pop
shll
arpl
stc
outsl
lret
add
or
jb
je
pop
cmpsb
fwait
sub
sub
push
and
ljmp
mov
out
sbb
pop
xchg
fcoms
cmp
push
and
in
outsl
imul
idivb
mov
jmp
and
push
xor
and
cld
xor
sub
xor
sub
cmpsl
xor
imul
jns
je
insl
call
adc
addl
sub
mov
sub
outsb
mov
adc
or
and
aas
dec
or
and
jne
sbbb
out
mov
jo
sub
ss
movzwl
push
outsl
fistl
shl
push
adcl
or
cmp
jl,pn
add
jl
mov
std
sar
push
add
push
movl
int
jge
dec
mov
mov
push
pop
xor
or
pushf
adc
sbb
push
das
call
adc
lods
call
hlt
xor
sbb
cmp
or
add
add
test
mov
fidivl
js
ljmp
cwtl
loope
arpl
inc
mov
call
add
insl
out
adc
xchg
call
je
jmp
mov
fmul
enter
out
ds
fstpt
lock
sbb
xchg
jae
fisttpll
xor
fidivs
outsl
loopne
enter
cld
pop
loop
jecxz
loopne
cmp
cld
in
out
mov
out
sub
lea
mov
jo
aaa
pop
das
addb
push
cmp
push
mov
cmpsl
push
pop
and
cmpsb
in
dec
iret
jo
sub
or
fdivr
in
or
and
push
or
mov
pop
call
loope
into
mov
rorb
jmp
xor
dec
add
out
call
scas
aaa
xchg
push
call
ds
mov
rorl
push
add
rcl
add
je
sbb
add
xlat
push
lea
in
bound
mov
and
fwait
cwtl
and
xor
gs
cli
frstor
xor
add
out
mov
js
add
lea
mov
add
mov
sbb
mov
mov
inc
xor
or
mov
call
inc
shr
xchg
adc
pop
push
push
loopne
call
add
push
std
outsb
mov
push
sub
push
mov
mov
cmp
xchg
xchg
add
not
push
fcoms
std
mov
pusha
inc
fs
std
dec
mov
jge
enter
dec
adc
xchg
push
shlb
sbb
cmp
mov
xchg
sbb
call
mov
xchg
es
adc
mov
mov
mov
xor
mov
insb
lock
adc
pop
clc
sub
adc
push
add
aad
push
out
pop
push
mov
mov
adc
ds
adc
lods
and
aad
mov
test
cld
jne
inc
int
cmp
paddusb
add
pusha
mov
out
pushf
sbb
cmp
inc
mov
inc
sbb
dec
sbb
push
cmp
and
push
add
sub
stos
loope
jg
jne
popa
mov
mov
and
sarb
push
pusha
dec
jmp
adc
fsubrl
cli
push
enter
std
push
ret
ret
add
pop
int3
cmp
sub
insb
bnd
pop
push
adc
sbb
adc
inc
pop
fsqrt
cmp
xor
insb
sub
mov
pop
sahf
sbb
jnp
fcoms
xor
mulb
sbb
jmp
pop
adc
pop
popa
mov
sub
subb
addb
pop
mov
mov
icebp
dec
flds
sahf
jo
push
fs
pop
ds
mov
inc
mov
into
pop
call
jmp
call
dec
mov
pop
flds
mov
les
add
mov
mov
mov
cmp
jl
add
jg
mov
cmp
jl
cmp
inc
inc
testl
ret
sub
outsb
inc
jno
mov
dec
cmp
xor
jne
sahf
sub
imul
leave
pusha
dec
pop
dec
push
iret
test
out
cmpl
scas
fdivl
arpl
in
clc
ja,pt
aaa
nop
int
ds
pop
leave
nop
dec
js
mov
adc
and
in
and
sub
mov
jnp
dec
adc
lds
jnp
push
iret
dec
sub
and
sub
es
mov
and
sbb
movsb
ret
ret
pop
jl
mov
inc
jmp
ss
xchg
adc
adc
inc
jne
shll
hlt
filds
ja
pop
leave
scas
call
pusha
mov
add
pop
fisttpl
lret
sub
and
xchg
shlb
push
jl
loopne
mov
dec
ret
mov
pop
mov
hlt
in
jbe
jne
adc
int
fistps
outsb
sbb
mov
das
stc
mov
adc
and
pop
jno
mov
push
sbb
jbe
jecxz
repz
jo
mov
out
data16
clc
sub
and
push
mov
je
js
hlt
jne
sbbl
clc
mov
cmp
and
jp
popf
data16
dec
mov
ds
mov
adc
push
les
dec
int
dec
push
and
sub
cmpw
cmp
cmp
pop
inc
nop
mov
roll
roll
mov
adc
inc
cmp
jl
je
cmp
cli
call
pop
jb,pn
add
jo
add
cmpl
lock
or
imul
push
add
inc
add
sti
push
mov
push
or
add
mov
adc
dec
jmp
inc
dec
sbb
mov
add
test
popf
test
add
or
sub
clc
mov
add
add
jmp
outsl
add
sbb
arpl
jne
mov
sub
mov
lods
scas
mov
in
hlt
jno
add
dec
ja
cmp
mov
adc
sti
lea
shr
jle
movzwl
mov
jne
daa
add
aaa
pop
and
add
shlb
cli
sbb
pop
andl
adc
add
jmp
cmp
jmp
push
data16
or
jne
or
sub
jne
inc
adc
inc
mov
ss
rcl
mov
outsb
adc
mov
outsl
rcrb
cld
inc
inc
les
dec
add
insl
pop
inc
xor
mov
mov
adc
jae
out
add
fdivrl
test
jbe
jno
push
in
enter
jbe
dec
je
adc
xor
loop
inc
adc
iret
mov
ret
das
je
and
mov
pushl
add
push
scas
push
pushf
clc
add
sub
cmp
fwait
and
inc
push
jle
pop
rorl
call
sub
push
popf
mov
xor
adc
out
or
and
mov
and
inc
aaa
pushl
push
inc
xor
add
aad
or
inc
cmp
int
add
ss
fistl
push
cmpsl
or
rolb
jo
adc
cmp
push
cltd
jno
js
cld
mov
cltd
fwait
adc
push
orl
ficompl
ret
inc
inc
adc
or
mov
cmp
testb
je
pop
inc
sub
addl
mov
or
xor
pop
nop
mov
mov
push
add
cli
fisttpll
enter
addr16
data16
adc
mov
add
sbb
mov
pop
mov
push
adcb
cmp
cmpb
sbb
rorb
mov
adc
loope
cmc
hlt
addr16
gs
leave
mov
js
insb
jb
pushf
insb
aam
push
js,pn
or
call
cs
mov
je
push
icebp
popa
daa
dec
sbb
test
or
or
pop
psubsb
inc
out
push
add
pusha
sub
repz
add
add
lret
data16
sub
lock
xor
sub
ud1
jg
js
push
lahf
adc
call
mov
xchg
mov
icebp
add
xor
or
or
test
mov
push
xchg
hlt
addr16
les
je
pop
jnp
bound
insl
xor
or
cmp
or
cltd
dec
adc
scas
pop
cwtl
hlt
loope
or
and
sub
movsb
add
es
stos
lods
stos
add
push
cmp
or
test
fucomp
pop
push
sbb
jl
jecxz
mov
in
xchg
push
adc
mov
dec
add
xor
pop
push
push
adc
cs
sub
xchg
fistpll
aam
adc
or
pop
jnp
stos
loope
and
add
insb
or
scas
fmul
popf
test
mov
sbb
or
daa
nop
adc
jb
cltd
bound
sbb
int3
and
scas
xchg
pop
aad
sub
push
mov
stos
fadd
jge
cmp
sbb
or
push
pop
sbb
adc
push
mov
ror
xor
mov
and
fisttpll
popf
inc
pop
sbb
add
sub
movsl
push
adc
jae
mov
sub
fisttps
xor
in
push
js
insl
outsb
enter
cmovl
mov
ljmp
push
stc
push
adc
imul
mov
jl
mov
push
mov
es
sub
popf
call
pop
sbb
jg
mov
add
xorb
add
movsl
iret
imul
imul
adc
xchg
imul
xchg
xchg
xchg
lret
int3
int
aas
mov
pop
std
rolb
pop
sar
or
outsb
int
jne
ss
and
and
jge
ss
gs
xchg
xor
data16
andb
repz
xchg
in
out
jb
jns
dec
xchg
gs
and
lret
pushf
enter
sub
or
or
enter
rorl
sbb
pop
lods
adc
scas
pop
pop
hlt
cmp
and
mov
adcl
xor
push
pop
add
push
sbb
fistl
xor
push
cmc
test
es
mov
int
cmc
sahf
cmp
add
inc
mov
loop
xchg
sub
mov
lea
mov
lahf
adc
mov
jge
add
loope
add
bound
pop
sbb
push
push
dec
cltd
inc
enter
or
xor
and
add
mov
add
sub
js
insb
outsl
jb
xor
mov
jb
gs
lods
or
mov
jno
orb
aad
imul
add
lea
jb
in
dec
mov
inc
nop
xchg
fcoml
push
mov
jno
adc
sbb
add
push
mov
in
icebp
clc
fstl
add
or
jbe
dec
push
xchg
adc
pop
push
pop
stos
cmp
mov
push
js,pt
movsl
inc
incl
add
gs
test
rcrb
jmp
jmp
dec
mov
inc
push
inc
flds
cmp
rol
pusha
push
and
dec
rcr
dec
push
cltd
nop
xchg
mov
pop
adc
pop
lds
mov
or
sbb
xor
cwtl
xchg
xchg
out
xor
dec
adc
mov
nop
push
dec
mov
aas
push
xor
add
and
sub
out
fs
xor
sbb
mov
mov
push
xor
imul
xor
cmp
hlt
add
lret
dec
jbe
js
pop
scas
inc
inc
cmpsl
subb
adc
xor
jb
sbb
cltd
aaa
idiv
popl
imul
inc
jb
incb
pop
arpl
push
arpl
add
jbe
test
lret
add
inc
mov
add
inc
add
lcall
outsl
arpl
jae
fs
aad
cmp
xchg
jo
xor
popa
jo
xlat
jle
jae
outsl
je
add
jb
jne
je,pn
mov
pop
or
inc
cmp
ss
push
std
sbb
shlb
sbb
and
jg
dec
dec
imul
packsswb
lods
subl
jnp
pushl
sbb
fs
adc
inc
mov
sub
jae
jb
les
cwtl
loope
mov
adc
push
outsb
test
imul
pop
fimull
sbb
sbb
jne
or
mov
mov
and
mov
push
mov
fcmove
add
dec
aas
pop
or
mov
add
stos
sbb
xchg
add
gs
inc
outsl
jb
outsb
and
push
lods
jmp
fsubrs
push
gs
outsl
push
adc
int3
dec
sbb
roll
push
orb
ja
subl
repz
aam
mov
push
sub
push
push
push
mov
cmp
pop
xlat
pop
fcmovnu
ret
andb
arpl
adc
dec
pcmpeqb
and
sbb
data16
xchg
push
das
dec
or
add
fadds
stc
inc
fwait
mov
daa
mov
imul
ret
push
outsl
imul
add
push
sub
sub
jge
stos
movsb
filds
mov
xchg
push
inc
sbb
out
jo
dec
shll
inc
outsl
mov
jo
fiaddl
in
movsl
mov
or
in
add
xor
rcr
adc
push
ret
loope
imul
pop
cmpsl
arpl
pop
add
fsubl
xor
arpl
add
pushf
jmp
imul
dec
adc
mov
cmp
jg
push
adc
mov
fs
pop
sub
popa
push
lock
push
dec
inc
enter
loope
add
jo
je
inc
push
std
lock
jge
out
add
insb
popa
xchg
xor
ja
imul
hlt
fs
popa
xor
sub
lods
jnp
xchg
inc
pop
pop
and
push
rcll
jae
sbb
add
stos
into
insl
xchg
movsl
jae
sub
outsl
adc
dec
lods
mov
les
pop
mov
leave
xchg
add
jno
inc
es
push
popa
addr16
aad
test
sub
push
push
push
add
lcall
or
test
inc
push
inc
xor
inc
outsl
sbb
add
je
das
negl
adc
hlt
push
ret
dec
fsts
mov
scas
mov
inc
and
fisubrl
inc
dec
mov
add
push
mov
push
popf
mov
imul
sub
jne
push
add
sub
lret
push
fldt
push
and
movsb
mov
push
add
sbb
ds
roll
jb
cmp
adc
wrmsr
and
outsb
jne
fsubrl
or
outsb
cmpsl
push
or
arpl
jo
or
out
es
popa
arpl
add
les
inc
push
inc
push
out
dec
loopne
add
add
insl
dec
or
push
jns
scas
insl
pop
cltd
add
or
sbb
lea
lret
ficompl
aas
push
adc
pop
cmpsb
scas
sbb
imul
xchg
popa
pushf
xchg
fbstp
arpl
jecxz
int
mov
push
out
inc
lds
or
or
mov
pop
dec
adc
jns
int
lods
xor
jo
push
mov
fimull
dec
mov
aad
mov
xor
pop
fs
loope
nopl
outsb
fstpt
xchg
xchg
bound
imull
outsb
cwtl
in
or
fcmovne
jbe
xchg
dec
add
lods
fwait
insb
sub
pop
jmp
sub
dec
push
push
xor
or
add
mov
xchg
dec
insl
and
dec
pusha
into
aam
jae
pop
mov
mov
add
push
push
insl
inc
and
mov
jo
xor
push
adc
pop
push
adc
mov
sub
sub
and
dec
push
dec
xchg
cmp
popf
je
lds
lgs
adc
dec
or
or
add
inc
test
dec
pop
jb
lret
mov
add
sahf
daa
pop
and
cmc
jb
sub
mov
stc
add
lcall
ds
ds
ds
ds
aas
les
aas
enter
fdivrs
in
call
aas
sub
mov
adc
sbb
xor
xor
js
jg
and
inc
xor
mov
xor
decl
xor
xor
xor
xor
pop
xor
lahf
xor
out
xor
incl
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
pushl
xor
xor
xchg
ss
aaa
jns
test
lahf
aaa
mov
int3
aaa
fidivs
out
divl
incl
cmp
pop
cmp
repnz
cmp
cmp
cmp
repz
dec
cmp
cmp
and
cmp
cmp
cmp
pushl
cmpsl
xor
jb
ja
aaa
add
sbb
cmp
push
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
pop
cmp
insb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
shl
cmp
jbe
mov
sarb
frstor
xor
jg
xor
xor
xor
xor
xor
shll
xor
xor
xor
mov
xor
xor
xor
xor
xor
xor
and
sub
xor
dec
xor
call
xor
mov
cwtl
xor
xor
xor
xor
xor
xor
xor
decl
xor
xor
xor
xor
xor
xor
xor
inc
out
repnz
xor
xor
pushl
cmp
inc
xor
popa
xor
jbe
jle
ss
ss
clc
incl
aaa
inc
aaa
pop
aaa
outsl
aaa
xchg
xchg
aaa
out
add
cmp
cmp
fidivrs
inc
decl
pop
cmp
je
aad
cmc
cmp
cmp
cmp
push
cmp
cmp
jns
cmpl
cmp
cmp
cmp
cmp
cld
jg
cmp
aad
hlt
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
decl
fs
mov
fdivrl
pop
ds
adc
sbb
jle
test
lods
ds
ds
cli
mov
jg
les
aam
sbb
pop
xor
xor
arpl
les
push
xor
jg
es
xor
mov
mov
ret
xor
xor
xor
xor
xor
jg
pushl
xor
xor
xor
xor
inc
pushl
xor
xor
jb
pushl
mov
xor
inc
ss
ss
test
fnstenv
divl
or
call
jle
aaa
in
aaa
hlt
or
lea
stos
cmp
cmp
cmp
cmp
pop
cmp
jp
repz
pushf
cmp
cmp
cmp
pop
cmp
cmp
push
les
je
jg
cmp
cmp
cmp
cmp
cmpl
cmpsl
cmp
cmp
cmp
cmp
jle
ds
ret
sarl
sbb
and
das
aas
add
jo
xchg
mov
mov
adc
lcall
imul
mov
xchg
xor
xor
xor
pop
xor
xor
decl
xor
xor
xor
xor
xor
xor
xor
dec
xor
ljmp
stc
xor
xor
xor
xor
dec
push
xchg
loope
xor
jecxz
mov
bound
imul
incl
stos
ss
and
xor
aas
aaa
inc
aaa
dec
aaa
popa
aaa
outsb
aaa
jge
xorl
aaa
mov
push
mov
cwtl
cmp
cmp
cmp
cmp
cmp
mov
cmp
cmp
cmp
cmp
jmp
adc
cmp
or
cmp
cmp
cmp
cmp
cmp
jecxz
cmp
cmp
cmp
cmp
cmp
cmp
cmp
das
cmp
dec
cmp
mov
int3
ds
add
sar
aas
sbb
jno
jnp
mov
ret
pop
jecxz
icebp
aas
std
or
mov
daa
dec
sub
jg
dec
lea
xchg
xor
ret
xor
xor
xor
xor
xor
xchg
cld
xor
xor
adc
inc
xor
cmp
dec
and
lcall
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
sub
ljmp
mov
xor
xor
mov
cltd
xor
xor
xor
xor
pushl
fdivs
fnsave
hlt
xor
xor
xor
xor
xor
decl
xor
xor
je
xorb
popa
sub
xor
xor
xor
mov
call
pop
xor
xor
xor
xor
xor
xor
xor
jno
xor
xor
inc
mov
xor
xor
xor
jnp
xor
jge
xor
adc
sub
dec
xor
cmp
insb
jp
test
xchg
xor
lcall
xor
les
ljmp
push
ss
ss
add
mov
sahf
ss
shll
ffreep
or
push
aaa
and
sub
xor
inc
aaa
dec
aaa
push
aaa
push
aaa
pop
xlat
data16
add
aaa
imul
aaa
xorl
mov
add
fwait
mov
int
cmp
cmp
cmp
cmp
cmp
ja
xchg
in
cmc
cmp
cmp
xlat
jnp
mov
out
cmp
cmp
cmp
test
scas
cmp
ds
clc
loopne
jnp,pt
mov
popf
ds
stc
mov
call
adc
inc
xor
pop
xor
fbstp
xor
xor
xor
xor
xor
xor
xor
lea
sub
xor
xor
xor
xchg
xor
mov
mov
xor
xchg
lea
mov
xor
aaa
xor
dec
xor
xchg
fwait
xor
inc
xor
jg
dec
xor
jnp
lcall
xor
xor
xor
loope
lcall
add
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
cltd
add
or
inc
dec
pop
pop
xor
popa
call
sbb
adc
mov
mov
jnp
adc
fdivs
jno
mov
je
dec
pop
shlb
cmp
fildll
sti
mov
mov
add
adc
incl
nop
inc
push
lcall
push
add
iret
cld
addr16
cmp
jb
jo
and
cmp
ret
push
mov
add
and
pusha
push
stos
mov
aaa
cmp
add
adc
movsl
clc
add
push
jb
jb
adc
pusha
addr16
inc
and
mov
aaa
fisttpl
pusha
insb
daa
push
jmp
xchg
and
inc
cmpsb
imul
mov
out
jle
pop
add
lcall
adc
xor
mov
das
ljmp
cmp
inc
xor
xor
inc
imul
es
pop
jmp
pop
or
arpl
es
cmpsb
sarb
cmpsb
sub
pop
jae
roll
popa
adc
outsl
push
mov
sub
and
out
mov
outsb
inc
js,pn
dec
dec
cltd
cld
ljmp
outsb
gs
sub
push
push
inc
and
sub
mov
add
in
xchg
and
and
and
and
adc
sub
or
shlb
enter
and
xchg
and
add
push
and
inc
or
mov
push
and
and
inc
jb
xchg
or
add
pushf
test
and
sub
mov
leave
sub
push
and
push
and
nop
mov
adc
nop
lret
xor
pop
negb
aas
push
and
in
sbb
call
push
xor
fwait
mov
and
imul
push
xor
lock
push
call
cmp
pop
jno
test
xlat
cmovb
inc
pop
mov
jno
sub
fcoms
add
or
mov
lahf
in
sub
xor
int
cmovge
xlat
adc
adc
jb
mov
and
call
addr16
adc
push
inc
aad
adc
add
pop
ret
mov
inc
or
dec
leave
add
and
push
and
and
inc
inc
and
test
or
inc
xchg
or
mov
dec
pop
jecxz
adc
lds
xchg
cmp
push
push
jo
xor
jb
mov
mov
dec
das
or
add
dec
xor
rclb
cmp
add
cmp
jl
inc
inc
mov
add
call
add
test
iret
icebp
addr16
mov
filds
dec
jne
and
mov
pop
push
push
mov
and
and
and
mov
mov
and
and
mov
mov
and
arpl
mov
pop
xor
inc
in
pop
mov
sbb
lods
movl
arpl
push
scas
gs
mov
in
mov
pop
mov
mov
mov
and
or
push
insb
lcall
sub
sub
je
fs
mov
mov
push
push
stc
cmp
aam
mov
in
inc
cmp
adc
cli
js
push
or
push
add
push
insl
xor
adcb
popa
sub
mov
inc
outsl
outsb
outsb
fwait
sub
mov
jae
cs
lret
mov
mov
les
sub
mov
popa
jne
arpl
es
mov
jb
aaa
sarl
jno
adc
imul
cmpl
insb
outsl
jb
pop
cmp
sbb
enter
adc
xchg
xchg
hlt
xchg
inc
mov
cmp
jns
pavgb
or
push
lods
stos
das
outsb
jae
inc
adc
call
xor
dec
and
push
xchg
pop
push
andl
in
mov
xbegin
push
daa
adc
mov
jne
inc
scas
lret
jns
lds
mov
add
adc
cld
gs
inc
scas
inc
push
or
mov
fdivs
mov
out
push
mov
loopne
fisttpll
addl
das
outsl
mov
lock
aam
or
add
in
lea
push
js
lcall
push
pop
mov
adcb
dec
sahf
pop
sbb
mov
adc
cmp
test
movsb
cwtl
das
push
fildl
sete
jle
or
and
push
pop
xor
pop
mov
into
sbb
add
outsb
or
lret
neg
or
lods
dec
or
jo
add
xor
add
or
cmp
addr16
dec
pop
add
sub
adc
jns
sbb
mov
adc
inc
add
jns
and
in
dec
and
push
enter
push
add
mov
shll
cmp
inc
inc
jl
das
adc
cmp
das
daa
cmp
faddl
sub
cmpsb
sbb
add
fimull
sbb
and
add
push
movsb
xchg
mov
adc
dec
sub
arpl
test
adc
push
sub
mov
sbb
adc
popa
gs
adc
adc
mov
add
repz
out
cmp
fistps
clc
pop
lcall
mov
push
outsb
sub
aaa
mov
and
mov
mov
inc
outsl
js
test
icebp
sub
and
mov
stos
jb
lcall
aas
and
scas
icebp
xor
push
add
insl
mov
sub
dec
jae
cmp
and
bound
gs
stc
or
and
repz
les
out
add
and
mov
pop
mov
insb
push
add
insb
xchg
arpl
adc
pop
sub
insl
sub
sbb
and
mov
adc
push
addl
jb
xor
stos
ss
pop
inc
scas
jmp
pop
or
jo
mov
jle
add
scas
imul
leave
ss
or
add
and
repnz
mov
adc
add
or
or
lds
es
xor
mov
or
pop
lds
sbb
rcll
pop
or
jae
adc
xchg
inc
stos
pusha
and
jbe
xor
ljmp
adc
jno
loope
sbb
jnp
sbb
adc
imul
in
xchg
adcb
mov
jnp
imul
insb
sub
or
bound
outsl
pop
jns
loope
ret
jp
adc
or
rorb
je
mulb
add
rclb
sub
jecxz
stc
jbe
mov
imul
inc
fsub
data16
add
mov
hlt
inc
sub
iret
pop
roll
movsb
mov
scas
push
jb
and
pusha
int3
add
add
aam
sbb
aad
add
movsb
push
or
dec
mov
dec
add
inc
or
add
imul
inc
pop
aas
jg
cmpsl
int3
add
cmp
sub
addr16
cmp
dec
pop
push
gs
outsb
outsl
and
mov
pop
neg
jecxz
inc
and
xor
mov
pop
and
popa
xor
popa
and
add
fstpl
or
jg
inc
imul
pop
mov
push
sub
adc
mull
inc
push
jb
add
imul
add
adc
scas
imul
insb
popf
xchg
pop
dec
or
sbb
jo
popf
addr16
fstpl
rorb
sub
outsb
jae
add
sub
cmpsb
fcmovnu
push
sub
or
shll
sub
dec
dec
imul
push
daa
pop
jge
jbe
mov
test
pcmpeqw
jae
ret
and
xor
inc
push
imul
and
arpl
cmpsl
dec
fidivl
add
jmp
addb
int
pushl
or
adc
outsl
jne
xor
xor
das
divb
daa
xor
or
dec
les
fistpl
xor
pop
movl
ss
ss
lea
mov
cmp
inc
ljmp
adc
aaa
mov
scas
aaa
mov
aaa
or
pop
cmp
jg
icebp
cmp
cmp
cmp
outsl
cmp
cmpl
das
jmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
imul
cmp
stc
cmp
cmp
inc
ds
mov
or
lds
and
add
add
pop
fstpt
and
or
icebp
mov
push
outsl
cmovs
xchg
add
dec
je
lods
add
add
rclb
sbb
push
inc
fiadds
faddl
push
or
test
adc
xor
jae
inc
xorb
outsl
jbe
mov
insb
popa
add
add
fdivrs
andb
sub
and
andb
cs
or
pop
push
or
add
popf
add
add
push
stos
mov
add
jne
lea
insb
dec
int
pop
nop
mov
lods
inc
leave
or
inc
jns
pop
push
incb
add
test
xchg
inc
enter
add
inc
mov
lods
add
and
mov
mov
fs
push
adc
push
mov
sub
mov
mov
rorb
dec
ret
inc
daa
mov
dec
add
or
add
add
add
addb
add
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
