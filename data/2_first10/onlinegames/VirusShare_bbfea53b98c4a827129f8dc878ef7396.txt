out
call
in
sub
andb
push
push
push
push
xor
pop
lea
fcomi
stos
push
ljmp
pop
xor
jmp
mov
pop
ja
test
add
loop
mov
dec
gs
in
in
dec
mov
xor
cs
jbe
dec
mov
insb
jmp
mov
push
call
pop
mov
jg
mov
push
push
push
push
push
mov
push
push
call
mov
and
adc
clc
lea
push
add
in
and
call
jbe
adc
adc
pop
mov
or
adc
pop
pop
pop
leave
ret
add
aaa
fstpt
push
xor
push
push
push
cmp
test
je
push
jae
adc
xor
mov
add
push
push
push
or
fwait
mov
lock
add
clc
fcomps
push
pop
mov
pop
insl
movzwl
ljmp
addr16
or
or
cmp
xor
cmp
mov
in
je
push
adc
pop
or
xor
cmp
jne
hlt
jmp
push
testb
push
pop
inc
cmp
push
cmpl
sbb
push
push
or
scas
dec
mov
adc
mov
pop
cld
sub
ret
lock
ret
repz
sub
inc
scas
ja
gs
enter
clc
inc
xchg
xor
sbb
sub
cmpl
je
adc
adc
data16
add
or
push
cmp
les
dec
and
lods
jmp
pop
push
fs
popf
insl
ret
insl
negl
test
gs
into
loopne
add
outsb
cmp
daa
push
or
add
jb
jb
sub
outsl
or
addr16
popa
add
insl
cs
lret
in
and
inc
ljmp
jb
pop
in
jae
out
pop
out
inc
lock
lcall
repz
outsb
xor
imulb
cmpsb
imul
pop
push
xor
xchg
fstp
fsubr
xchg
rep
or
push
mov
pop
mov
out
jmp
pushl
adc
adc
push
mov
ror
mov
inc
inc
dec
dec
test
jne
push
pop
jmp
lahf
xor
push
push
push
inc
push
xor
push
add
add
cmpb
subl
rclb
imul
sub
push
cmp
lret
push
jbe
push
cmp
xlat
cmpl
jne
and
fs
mov
mov
push
push
adc
pop
fcmovnbe
xor
or
adc
add
dec
scas
sub
and
jb
aas
jmp
ret
pop
pop
pop
or
mov
inc
xchg
xchg
mov
out
test
push
lea
mov
sti
mov
mov
inc
jns
mov
adc
data16
popf
cs
mov
adc
xchg
adc
xor
mov
and
fcomip
arpl
and
push
call
or
das
cld
incl
push
push
xor
mov
test
je
enter
push
push
add
test
call
imul
adc
andb
xor
sbb
inc
sbbb
cli
mov
push
mov
mov
inc
inc
test
jne
pop
adc
aad
mov
cmp
xor
rcrb
repz
gs
push
add
je
movsl
pop
lcall
fstps
add
mov
or
jne
cmpsb
fwait
lahf
lods
insb
inc
or
test
add
xchg
lret
inc
add
stos
mov
ror
in
test
push
push
test
inc
pop
jecxz
or
pop
fcmovnbe
fsincos
xor
loopne
mov
push
jb
xlat
sbb
add
mov
mov
add
dec
push
mov
in
mov
std
cmp
cmpsb
test
aaa
invd
aaa
sub
data16
xchg
xchg
jb
inc
into
loopne
xchg
jne
xchg
outsb
pushf
pushf
insb
nop
mov
fstpl
pushf
in
loope
or
int3
cld
mov
xchg
or
clc
push
jg
mov
push
push
aas
cld
and
mov
orb
mov
and
insl
adc
nop
scas
jne
push
adc
call
sbb
jae
ret
ss
test
dec
inc
push
push
push
adc
adc
inc
push
ret
dec
cmpl
ss
or
ret
in
pop
xchg
imul
addl
stc
sbb
cmpsl
test
je
les
lcall
jle
stc
loopne
jl
inc
or
xchg
lahf
adcl
pop
jb
cltd
aam
cld
xor
gs
or
pop
inc
mov
sbb
inc
ret
int3
out
lock
and
add
flds
add
or
adc
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
mov
add
addr16
jl
pusha
xor
lcall
pop
pushf
stos
mov
imul
push
pop
jbe
rcrl
xor
dec
adc
xor
jmp
adc
dec
ret
arpl
incb
pop
add
outsl
arpl
push
call
ja
push
xor
inc
bound
push
jb
jbe
insb
fildll
lahf
gs
jae
jae
gs
xor
pop
or
add
std
ljmp
and
jo
push
outsl
imul
and
add
rorb
sub
ficoml
xor
pop
arpl
fs
insb
cmp
sub
push
in
mov
fs
cmp
mov
test
pushf
add
pop
lea
or
xchg
push
jle
nop
add
inc
dec
mov
leave
dec
nop
cmp
dec
inc
dec
mov
inc
nop
push
xchg
dec
adc
dec
push
push
pusha
ljmp
add
add
nop
add
xor
mov
add
mov
add
add
pop
mov
int
mov
jg
push
jb
addr16
insl
and
outsb
outsb
outsl
je
bound
jb
outsb
and
pusha
mov
and
fs
adc
jp
fwait
out
mov
add
jl
push
setb
in
push
sub
jle
out
in
push
shlb
xor
in
pop
sub
in
push
sti
mov
cli
daa
mov
mov
pop
jmp
push
shlb
out
dec
push
imul
cmp
stos
add
dec
loopne
and
add
in
mov
or
add
and
pop
jmp
dec
clc
fiadds
pop
into
pop
xchg
fisttpll
and
xor
mov
push
mov
dec
dec
pop
mov
sub
fldl
sub
ss
xor
add
popa
out
imull
bound
pop
adc
xlat
jp
mov
ss
cs
je
cld
lret
in
int3
adc
push
sbb
cs
push
push
pop
repz
in
in
and
shlb
shrb
jae
xor
imul
sti
mov
gs
outsl
arpl
sti
orb
dec
sbb
add
sub
test
stc
jecxz
add
clc
loopne
xor
int3
mov
add
mov
and
adc
jae
imul
cmc
dec
shll
data16
dec
shll
xchg
mov
movsl
hlt
cmc
clc
shll
and
dec
dec
shll
cwtl
mov
dec
shll
ljmp
imul
movsb
shll
push
ds
repz
add
imull
mov
and
out
mov
cmp
ss
movsb
sti
inc
dec
add
xlat
xor
push
jb
lcall
add
stc
cmp
cmpsb
imul
imul
cmpsb
imul
stc
xor
xlat
popf
xchg
shl
add
mov
rcrl
ja
std
insb
imull
jmp
sub
rcrb
pcmpgtw
cltd
fistl
add
push
sti
cltd
cmpsb
jmp
mov
clc
pop
xor
outsb
or
outsb
gs
mov
dec
in
pusha
out
daa
imul
push
gs
fs
sub
or
outsb
push
jb
inc
adc
jmp
dec
dec
dec
inc
push
and
add
inc
addb
rolb
or
popf
mov
add
shlb
pusha
add
push
flds
add
push
or
add
xchg
int
add
out
add
add
leave
and
sbb
sbb
pop
jmp
add
das
pop
pop
and
cmp
shlb
ja
aas
xor
or
add
mov
or
sarl
incl
and
add
cltd
sub
test
add
xchg
adc
xchg
inc
xchg
ret
pop
test
mov
fistpl
test
mov
ret
push
inc
cmpsb
imul
xor
sbb
adc
or
push
add
mov
lcall
add
push
packsswb
je
jne
jb
gs
cmpsb
jmp
lds
push
jg
jmp
sub
add
push
inc
jb
push
fstp
jmp
dec
pop
ja
or
push
mov
jae
pop
and
addr16
add
or
sbb
lcall
mov
rorb
decl
bt
test
sub
mov
stc
push
pushl
pop
pop
shl
call
call
outsb
dec
xchg
aas
hlt
bound
dec
je
jo
incb
jne
jae
inc
js
xor
fistpll
roll
xor
outsl
je
gs
jns
in
pop
mov
outsb
push
cmp
shlb
add
pop
push
je
jo
jne
add
mov
pop
cs
add
inc
mov
gs
popa
insl
ds
dec
inc
push
push
inc
push
out
mov
imul
scas
outsl
ja
and
pop
inc
jne
jb
mov
outsb
test
push
xor
pop
dec
les
jb
inc
popa
jb
sub
popa
jae
je
outsl
cs
ds
stc
lea
pusha
add
push
jge
mov
dec
mov
test
push
mov
adc
push
push
mov
mov
inc
cmpsb
sti
out
rcrb
and
aas
ret
movb
add
sahf
shlb
pushf
and
or
mov
mov
call
cmpl
sub
call
add
add
mov
adc
add
and
adc
sbb
inc
rorb
or
jbe
and
lock
add
cmp
sub
adc
sbb
inc
or
mov
insb
xor
mov
xor
test
pop
push
add
pop
xor
repnz
inc
cmp
aaa
inc
inc
add
xor
add
xor
ss
mov
xor
add
inc
cmp
inc
lcall
inc
inc
pop
outsb
xor
xor
xor
xor
in
mov
mov
xor
aaa
inc
add
cmpsb
imul
out
pop
inc
orl
in
mov
add
xor
xor
sbb
xchg
scas
jnp
adc
or
jae
fnsave
cmp
inc
add
xor
adc
inc
out
outsb
imul
movzbl
xor
cwtl
scas
jnp
mov
dec
adc
movd
insl
in
aaa
xor
xor
xlat
inc
xor
mov
pop
inc
xor
add
ss
fnstcw
jae
inc
xor
xor
cmp
xor
xchg
insl
xor
cmp
xor
push
cmp
fistpl
cs
pop
xor
jae
jmp
in
sub
cmp
jmp
int
repnz
xor
inc
or
lcall
adc
aaa
xor
add
add
addl
gs
dec
inc
xor
xor
wrmsr
icebp
inc
xor
xor
mov
ss
or
ss
add
lcall
inc
add
inc
inc
sbb
lcall
aaa
inc
aaa
pop
mov
mov
aaa
cmp
aaa
and
pop
shll
inc
inc
or
add
pop
xchg
and
adc
xor
rorl
inc
adc
out
cmc
push
outsb
jae
cmp
shlb
xor
add
popf
xor
ljmp
and
int
pop
or
cwtl
inc
scas
dec
or
inc
cmp
rcll
inc
inc
sub
cmp
push
jnp
cwtl
sar
iret
xor
push
jmp
xchg
orl
xor
inc
xchg
mov
fisubrs
in
sarl
sbb
fistpl
add
imul
aaa
enter
and
subb
xor
xlat
or
xor
xor
inc
pushf
pop
cmp
ffree
mov
pop
jle
xor
insl
xor
imul
out
inc
xor
mov
popf
mov
cmp
xor
xor
das
shll
and
shll
xor
sarl
cmp
inc
inc
inc
xor
dec
roll
or
xor
xor
dec
xlat
cmp
inc
inc
inc
inc
inc
test
lcall
add
adc
xor
ret
sarb
in
mov
mov
aaa
xor
push
xchg
xor
sti
push
in
xor
sbb
ja
cmp
xlat
jmp
dec
xchg
incl
xor
xor
or
lods
std
ss
xor
sbb
std
sub
adc
lods
cltd
dec
adc
cmp
cmp
xchg
inc
sti
xor
xor
adc
add
xor
lods
in
jmp
test
or
pop
cmp
dec
xchg
lcall
mov
pop
and
mov
jmp
popf
dec
mov
jp
inc
out
test
dec
xlat
xor
xorl
dec
shll
and
inc
rorl
xor
inc
inc
xor
xor
xor
aaa
pop
cmp
test
cmpsb
aaa
icebp
xor
xchg
adc
sbb
dec
add
mov
inc
pop
out
inc
arpl
pop
popa
xchg
cmp
xor
inc
xor
cmpsl
fiaddl
leave
add
push
and
pop
mov
daa
ss
out
xor
test
mov
imul
push
sbb
jl
pop
scas
xor
mov
pop
push
or
lods
xor
xor
gs
xor
cmp
cmp
inc
decb
into
sbb
pop
inc
push
stos
imul
jb
filds
pop
rcl
xor
inc
sub
mov
stc
add
adc
xor
pop
scas
push
mov
cmp
adc
inc
psubsw
imul
jb
adc
fistl
add
or
mov
test
sbb
push
add
sbb
aad
sbb
and
sbb
sbb
pushl
xor
dec
leave
adc
mov
adc
por
xor
sbb
add
gs
xor
cmpsb
dec
fisubl
nop
inc
inc
iret
push
add
jnp
sub
or
jecxz
es
arpl
xor
ds
xor
or
sub
cmpsl
stos
push
inc
aaa
adc
inc
cmp
mov
xor
xor
cmpsl
push
cmp
inc
mov
and
adcb
dec
adc
pop
sub
xlat
imul
xor
mov
inc
adc
xor
mov
cltd
sahf
inc
popf
adc
lret
sub
roll
lret
fisttpl
fcmove
test
fwait
lds
jmpw
adc
xchg
adc
ss
lcall
jmp
inc
dec
rol
imul
rcl
and
xor
xor
lcall
or
xor
inc
decl
incl
lock
out
fnsave
pop
addb
adc
xor
push
in
mov
dec
std
imul
mov
mov
pop
cwtl
and
mov
push
push
leave
xor
xor
sbb
cmp
movsl
jbe
repz
and
xor
fld
pop
mov
xor
nop
popf
adc
cmp
xor
lock
sti
add
sbb
mov
ss
and
push
add
in
repz
es
es
xlat
or
aaa
inc
jge
pop
xchg
stc
sub
sti
sub
xor
xchg
xor
out
ss
lcall
inc
inc
inc
cltd
cmpsb
test
inc
xor
xor
xor
mov
inc
inc
movsb
dec
xchg
imul
mov
and
add
xor
lret
inc
iret
lahf
xor
xchg
enter
xchg
imul
shll
xor
push
leavew
btr
mov
mov
and
pop
dec
jmp
dec
es
and
inc
xor
and
bound
stc
ret
adcl
stc
or
xchg
jmp
or
xchg
lret
je
movsl
jno
xchg
xor
stos
fnstenv
add
xchg
or
int
mov
jmp
push
xchg
shl
or
jecxz
inc
adcb
or
and
inc
adc
or
pop
leave
adc
pushf
imul
xchg
jecxz
ljmp
sahf
cwtl
in
out
jl
stos
aam
shll
loope
xor
or
movsb
int3
xchg
ret
xor
dec
dec
mov
xor
cmp
xor
into
loope
add
xor
jno
fnsave
rcrl
int3
xor
dec
jne
cmp
dec
shrl
xor
ss
fnstcw
cmp
jg
into
cltd
data16
pop
add
cmp
jge
mov
xlat
mov
dec
loope
pop
xor
cmp
js
fwait
inc
xor
jmp
sub
push
adc
pushf
xorl
pop
xchg
ss
xor
into
je
data16
and
pop
imul
pop
dec
xor
add
xor
cmpsb
jae
dec
ss
and
xchg
imul
xor
pop
mov
inc
or
push
cmp
hlt
inc
cmp
inc
or
xor
add
cmpsl
jbe
mov
dec
imul
push
or
inc
mov
test
pusha
rcrl
inc
xor
and
xor
cmp
adc
jmp
cmpsb
lret
xor
adc
mov
movsl
rcll
xor
inc
test
sub
xor
test
adc
inc
and
je
xchg
movsl
in
inc
cmp
das
inc
sub
jmp
and
inc
and
and
adc
mov
stos
inc
orb
push
mov
add
adc
pop
push
or
push
in
xor
inc
xor
cmpsl
pop
cltd
js
xor
cs
xor
dec
cmp
cmc
push
inc
pop
xor
repz
xchg
mov
stc
xchg
xchg
inc
cmc
xor
sub
rcl
pop
cmp
movsl
jo
lcall
es
and
mov
into
jecxz
push
mov
jmp
or
cmpsb
rolb
imull
popf
lods
push
or
ret
bound
lcall
mov
sub
or
cmp
jno
cmpsl
iret
add
or
sub
jae
daa
inc
add
cmp
pop
sbb
call
lcall
inc
insl
inc
ljmp
and
xor
lret
mov
imul
jae
pop
mov
xor
fstps
push
mov
and
xor
cmpsb
dec
jmp
pop
stos
into
inc
fcompl
lcall
sbb
scas
int3
xor
xor
adc
xchg
mov
and
cmp
jo
pop
sub
mov
das
sbb
sub
and
sub
and
sub
and
incl
test
xor
inc
lods
jno
aaa
inc
push
sbb
int3
push
ret
repz
dec
xlat
insb
and
mov
xlat
in
int
sbb
inc
sbb
aad
inc
push
and
addr16
xor
cwtl
in
pop
and
pop
push
sub
sar
icebp
and
pop
xor
dec
mov
shufps
mov
xlat
std
arpl
push
inc
rorl
inc
cs
mov
lret
cltd
xor
and
pop
fnsave
inc
cs
sub
gs
jae
scas
popf
aaa
mov
cmp
add
inc
xor
xor
sub
xor
and
ljmp
adc
and
inc
aaa
inc
cmc
js
xor
xchg
lret
pusha
ret
int3
or
push
test
xor
lods
sbb
cmp
xor
sbb
cmpsb
imul
stos
push
call
xor
cwtl
inc
push
xor
dec
aaa
cmp
and
dec
lea
ja
cmp
adc
pop
adc
sub
xor
dec
xor
cmp
inc
insb
lds
cmp
inc
and
mov
ret
or
mov
rclb
or
xor
xor
xrelease
das
inc
add
movsb
jmp
xchg
cmpsb
and
stc
aad
daa
or
fstl
stc
xor
cmpsb
push
xor
cmp
enter
add
call
cmp
or
scas
mov
or
cmp
decl
push
shll
mov
sub
inc
stc
and
inc
and
and
adc
adc
inc
mov
sub
pop
push
push
pop
mov
sar
movsb
push
xor
lret
xchg
cmpsl
and
xchg
sbb
repnz
outsb
aaa
adc
inc
cmp
inc
push
jmp
repz
lock
cmp
inc
inc
xchg
dec
cltd
and
xchg
mov
inc
mov
cmp
cld
test
mov
aam
in
add
mov
cmpsb
aad
add
xor
push
xorl
rcr
sub
push
pushf
adc
adcb
mov
fildl
xor
popa
push
push
jb
in
cmp
fsts
out
cmp
xor
inc
push
mov
call
pop
aaa
movsl
cmp
and
aaa
and
adcb
adcb
call
and
ret
xor
jmp
push
loopne
stc
imul
out
add
xor
stos
mov
inc
and
sub
movsb
adc
in
pop
sti
sub
sarl
inc
inc
xor
mov
xor
push
fidivl
das
adc
inc
hlt
aaa
pop
pop
push
imul
inc
icebp
or
xor
ja
fidivrl
inc
sub
jecxz
aad
pop
jae
fscale
xor
inc
test
pop
cs
lds
lret
xor
push
mov
dec
push
mov
mov
leave
or
ret
xor
lods
mov
mull
xor
inc
lds
xchg
data16
inc
stos
testl
add
scas
jo
aas
dec
shlb
inc
push
adc
sbb
add
inc
or
lcall
and
or
add
jne
inc
roll
incl
adc
cmp
sti
lcall
xor
push
das
add
xchg
xor
pop
mov
xor
hlt
add
mov
popf
sub
fsubl
push
jmp
lret
xor
cmp
rcr
jmp
xlat
shlb
xor
sub
xor
fwait
sub
cs
xor
out
cmp
stc
inc
stos
push
mov
aad
adc
in
std
inc
lret
jge
inc
out
mov
jne
out
sbb
and
sub
xlat
repz
imul
inc
inc
lcallw
xor
xor
mov
ret
inc
inc
lcallw
inc
inc
inc
adc
lcall
fstps
xor
rorl
adc
mov
pushl
sub
and
jnp
test
push
fisttps
arpl
rol
dec
icebp
adc
xor
shll
cs
inc
mov
sub
mov
inc
ret
test
xchg
mov
or
or
push
push
out
push
cmp
sub
mov
xchg
sarl
sub
pop
scas
bound
add
sbb
inc
sub
xor
movsb
pop
pushf
lret
test
cltd
inc
add
test
movsl
scas
inc
lods
aad
or
mov
cmc
inc
cmp
xor
push
sub
out
mov
push
sub
je
pop
push
cpuid
add
scas
add
pusha
out
scas
call
or
aad
xchg
or
and
int
adc
mov
xor
push
mov
inc
jns
mov
pop
sahf
cmp
mov
push
stos
and
or
and
and
and
test
push
pop
incl
jb
or
xor
and
rcr
fists
inc
xor
adc
ss
nop
mov
mov
mov
adc
and
es
adc
icebp
xor
mov
xchg
inc
sbb
notl
aas
xchg
mov
out
iret
stos
sbb
sbb
fwait
xor
xchg
adc
sbb
cmpsl
cmp
arpl
jae
cltd
xchg
stos
movsl
mov
std
xor
push
loope
push
inc
sbb
push
lods
popf
icebp
mov
pop
rorl
adc
and
je
xor
int3
scas
mov
xor
pushf
leave
mov
and
mov
or
xor
mov
dec
adc
xor
call
push
cmp
push
jmp
mov
sub
call
mov
loop
stc
inc
jb
jne
pop
outsl
outsb
gs
sbb
or
imul
cmp
pop
pop
cmp
sub
add
into
mov
stos
mov
in
outsl
test
testl
cmp
popa
jb
gs
std
idiv
insb
popa
arpl
insb
addr16
push
popa
insb
imul
jne
push
push
cmp
popa
pop
test
mov
gs
add
fcmovnu
mov
out
and
pop
into
lret
inc
jae
push
popa
outsl
and
mov
mov
jbe
cmp
cs
stos
out
cmp
add
cmp
in
mov
or
mov
pop
sbb
pushf
fstpl
push
add
ljmp
add
or
jne
mov
push
xor
mov
mov
cmp
je
add
inc
cmp
cmp
pop
jae
mov
sti
jg
xchg
push
mov
jmp
xor
ret
and
push
sbbl
fdivrp
shll
add
push
adc
mov
ja
mov
jne
push
add
insb
movb
pop
push
cs
jne
push
call
xchg
outsb
clc
lcall
add
shr
mov
push
shl
push
push
mov
pop
xchg
call
cmpl
mov
fsubr
mov
xchg
lea
divl
sub
push
lea
push
adc
mov
call
divl
movsl
and
ret
add
adc
jle
pop
mov
pop
pop
leave
ret
dec
pushl
add
pop
pop
mov
stos
sub
sbb
xchg
sbb
loopne
inc
cld
push
push
movl
mov
ffree
mov
dec
hlt
xor
in
jne
out
sbb
jne
xor
push
push
clc
lea
lcall
adc
xor
insb
arpl
ds
pcmpeqb
mov
repnz
repnz
sbb
and
iret
repnz
and
and
and
ds
ret
test
orl
push
jmp
cmp
pop
into
adc
and
jmp
add
jnp
addr16
pop
jmp
adc
mov
xchg
lret
push
fwait
push
ret
xor
pop
imul
add
cmc
adc
and
insl
test
call
pop
sub
jl
dec
mov
xor
scas
fs
notb
shlb
adc
ret
xor
ret
xchg
push
push
xor
mov
dec
je
add
aas
popf
in
in
leave
por
iret
push
in
jle
adc
repz
lcall
mov
test
cld
and
add
jo
mov
je
jmp
data16
movsb
or
cmp
dec
cmp
push
push
nop
mov
fisubl
pop
sub
mov
gs
std
rcrl
mov
xor
mov
call
lea
adc
push
mov
sub
add
scas
fs
or
dec
in
add
movb
sub
sub
push
add
push
fildll
test
add
inc
add
sti
push
push
jbe
lea
call
mov
inc
pop
orl
in
insl
and
ret
mov
imul
mov
or
aaa
mov
out
inc
dec
pop
xchg
or
imul
decl
orl
idivb
sub
mov
or
std
jbe
in
sbb
push
movzbl
shll
mov
cmp
add
clc
add
mov
fdivp
fists
andb
mov
or
push
aas
fisubl
testb
pop
jl
push
aaa
dec
pop
pop
jmp
mov
push
mov
test
jne
mov
cmpl
dec
cmp
lret
add
es
push
pop
repnz
jno
xor
adc
xor
and
loopne
adc
jl
sub
sbb
and
mov
imul
push
push
loopne
addr16
jne
or
fldl
int
push
icebp
lcall
and
in
mov
push
call
mov
add
push
push
fucom
xor
push
sbb
int3
aas
pop
push
push
push
and
pop
mov
xchg
or
jbe
dec
mov
pop
sbb
call
push
cwtl
sub
or
and
inc
sub
clc
dec
cmpl
fnstcw
xchg
fsubs
jo
lea
movsl
add
mov
mov
enter
mov
adc
pop
fsubp
jle
xchg
lods
dec
dec
mov
or
or
enter
mov
push
out
inc
pop
dec
pop
mov
ret
movsl
sbb
jmp
dec
add
jmp
ret
andb
das
pop
adc
sbb
push
cmp
jbe
ds
xchg
rolb
push
ja
xchg
out
clc
push
sub
inc
cmp
jb
pop
pop
leave
and
add
xor
adc
and
sbb
and
or
insb
jle
inc
add
or
add
or
mov
orl
test
fildl
mov
mov
dec
push
adc
add
shl
push
cwtl
adc
cmp
dec
cmp
and
push
fidivrl
imul
pop
or
jle
xor
cmp
jle
clc
in
mov
mov
cmp
ja
fsubr
mov
or
adc
je
test
cmp
cmpsl
add
hlt
mov
push
in
jne
cmpl
daa
mov
mov
cmp
jne
xor
cld
cmp
cmpsl
int3
clc
add
add
popa
hlt
imul
adc
addr16
inc
cmp
and
out
pop
jmp
and
bound
lock
and
pop
ja
jne
cmpw
ja
add
push
or
inc
push
push
call
fwait
or
and
inc
mov
outsl
or
test
jne
cmp
insb
mov
je
cmp
je
adc
aas
pop
adc
inc
sti
jne
or
mov
add
sub
bswap
adc
dec
leave
out
inc
clc
or
or
jmp
decl
lds
leave
jne
or
test
je
mov
shr
xor
test
pushl
insl
add
and
and
icebp
or
test
je
mov
mov
sub
pop
shrb
mov
shl
or
mov
and
xchg
fstl
cmp
add
jp
loope
mov
loop
sbb
aad
push
cmp
push
stc
add
adc
fmuls
push
dec
adc
push
sti
imull
test
bound
jg
fildll
add
test
or
rorb
or
cmpsl
cltd
test
fistl
and
add
je
add
sub
mov
pop
pop
sub
or
mov
add
cmpb
inc
jne
or
mov
add
pop
ret
jmp
sarl
rol
mov
cmp
ds
outsb
dec
shlb
aaa
ret
add
push
push
pop
xor
jbe
mov
mov
test
ds
pop
and
outsl
lahf
pop
mov
aaa
push
jmp
adc
movb
jmp
add
sbb
call
pop
movsb
or
xchg
js
jbe
jge
pop
sub
pop
inc
idiv
adc
jg
pop
pop
sub
inc
jmp
andb
mov
add
test
inc
add
jne
inc
and
enter
adc
sbb
nop
adc
add
mov
repnz
in
and
enter
lods
cmp
fcoml
push
push
pop
pop
and
cmp
ljmp
add
jl
and
add
and
or
fsubrl
imul
ja
xor
dec
jbe
cmpb
xor
cmp
jb
push
or
or
xchg
sub
sbb
pusha
pop
lret
or
ffree
call
inc
sub
and
or
imul
out
mov
adc
and
push
add
in
mov
push
icebp
inc
cmp
jecxz
outsl
jno
lea
add
adc
fidivrs
stc
jae
incl
lret
jbe
add
fldt
mov
inc
push
mov
push
inc
and
mov
loope
inc
mov
mov
jne
shrl
out
mov
fcomps
jge
add
jle
add
loop
rcll
cli
or
scas
and
jne
cmp
push
cs
popa
test
pop
xchg
dec
mov
pop
cli
xchg
inc
mov
insl
mov
pop
jbe
or
cmp
mov
sti
sti
not
and
push
jl
and
or
add
lea
sbb
sbb
shr
shl
mov
sarl
mov
add
repnz
not
and
idiv
and
or
adc
lods
test
or
insl
outsl
out
push
js
add
push
aam
or
das
in
neg
and
or
lea
shr
in
mov
shl
push
pop
inc
sub
mov
and
not
fistps
cmp
add
repz
mov
rorl
push
shr
or
add
dec
daa
pop
jle
insl
fstpt
push
fisttps
cmc
fstl
cli
push
lods
loop
mov
push
push
push
jle
not
and
sar
lods
push
and
adc
movb
xchg
lods
fidivl
add
loopne
ficompl
int
sbbb
or
mov
adc
sbb
inc
xor
rcll
fisubl
fisttps
sbbl
popa
imul
xchg
inc
std
sbb
mov
stos
out
xor
add
in
popf
mov
jne
les
repz
out
fcmovb
add
fcomp
cwtl
subb
addl
repz
xor
and
not
fisubrs
pusha
into
das
insb
adc
pop
scas
testl
fcmovnbe
mov
pop
les
subb
faddl
rolb
jmp
add
pop
adc
sub
fsubrs
addr16
add
xlat
pop
mov
cmp
pop
mov
dec
pop
xor
les
adc
stc
push
or
xor
or
lock
fwait
in
fcoml
or
in
lods
es
add
and
fisubrl
aad
cmp
pop
aaa
das
lcall
jns
pop
mov
xor
dec
push
and
xchg
or
mov
ret
popa
adc
mov
and
mov
jo
loopne
ljmp
jbe
and
aad
aam
pop
bound
push
imul
sbb
shl
test
jecxz
cmpsl
and
jg
jge
dec
jo
in
cmp
inc
rclb
push
fadds
hlt
outsb
mov
daa
clc
jb
repz
notl
pop
es
adc
repnz
xchg
xorb
movsb
and
stos
mov
lock
call
pop
or
imull
mov
repz
pop
adc
call
xlat
lods
arpl
fcmovb
mov
pusha
mov
push
adc
add
insl
sbb
and
pop
and
lcall
jge
outsl
addr16
mov
fnstcw
out
shrb
lret
adc
scas
add
fstp
mov
mov
out
loope
out
sbb
loopne
jle
lcall
jmp
fldt
pop
aaa
or
mov
push
fbstp
inc
fimuls
data16
sbb
push
cmp
popa
nop
lods
popf
gs
call
mov
loop
shr
or
xlat
push
fisubrs
fdivs
test
lods
pop
add
pop
das
jbe
clc
mov
daa
outsl
pop
lods
cmp
daa
sub
aad
flds
into
shrl
outsl
adc
out
js
push
dec
fisttps
sub
adc
or
xor
test
hlt
inc
cmp
jmp
add
pop
jb
lods
test
xor
mov
xor
sahf
xchg
sub
mov
and
insl
adc
fwait
fisttpl
mov
repnz
or
mov
std
mov
mov
pop
fcompl
inc
inc
ljmp
test
mov
fimuls
cltd
mov
sub
loop
fmuls
pushf
push
int3
pop
pusha
dec
mov
mov
mov
cli
xor
push
jo
gs
mov
out
or
divl
mov
jle
sub
or
ret
lock
sub
ljmp
js
loope
fidivl
cmc
test
xchg
pop
cmpsb
dec
mov
out
sub
xor
pop
or
cmp
dec
xchg
pop
or
push
aas
sbb
mov
test
cmp
aam
cltd
js
jbe
mov
push
les
in
jle
ja
popf
imul
in
clc
in
insb
out
mov
out
or
or
aam
gs
lods
les
cli
cmp
cli
mov
mov
dec
push
mov
xor
sub
rcrb
sbb
push
repnz
inc
ret
sbb
jl
inc
int3
or
cwtl
sub
sub
or
mov
jns
and
fs
jb
hlt
andl
cld
cltd
or
lcall
lea
cmp
pop
pop
gs
sbb
ror
fwait
rcrl
or
push
inc
jae
sub
fbstp
jno
iret
das
xor
dec
jge,pt
out
call
movq
mov
adc
rcrl
test
xchg
cs
sub
out
jl
jg
call
outsl
jo
mov
dec
sbb
int
jle
push
xor
sbb
out
jecxz
andl
mov
push
adc
add
mov
ficomps
cmpb
lds
imul
xlat
sbb
insb
lods
mov
xor
out
loopne
jns
mov
ret
rcl
sub
pslld
ret
repz
pop
pop
cld
data16
xor
mov
dec
jg
sbb
out
xlat
pop
add
pop
movsb
mov
mov
mov
xor
xchg
and
and
pusha
mov
ds
mov
dec
cld
cmpb
sarl
sbb
js
sub
push
push
push
or
data16
xor
cmp
inc
xchg
adc
insb
xlat
pop
sbb
lea
xchg
lahf
push
pop
inc
addr16
iret
jge
or
jb
adc
or
jae
mov
add
sbb
cmp
jne
push
sbb
inc
add
add
or
stc
sub
dec
dec
adc
adc
and
mov
sub
insl
mov
rorl
push
jl
jg
mov
cltd
adc
jmp
and
rep
inc
daa
mov
sbb
mov
push
ret
les
clc
call
push
xor
ficoms
and
push
call
push
cmp
jbe
lea
pushl
mov
lret
mov
dec
cmp
sub
imul
lea
mov
mov
icebp
xorb
mov
dec
cmp
int3
push
divl
pop
int3
rolb
aam
call
aad
lcall
pop
cmc
adc
data16
add
jne
test
or
call
repz
push
jo
lahf
jns
and
gs
negl
lds
out
xchg
mov
mov
mov
adc
idivl
lods
push
add
and
ret
loopne
xchg
mov
mov
inc
insl
adc
lods
outsb
andb
jmp
or
jl
sub
mov
call
mov
adc
movsl
dec
je
lcall
mov
dec
out
push
out
push
lock
sbb
in
inc
repnz
mov
mov
mov
and
add
or
jae
jmp
pop
add
repz
inc
aam
sub
push
int
adc
hlt
or
push
js
imul
mov
jnp
sbb
xchg
or
mov
bound
push
push
js
fistl
add
or
daa
stc
decb
xchg
or
xor
mov
out
ss
xchg
je
jnp
pushf
add
repnz
mov
pop
scas
xor
or
xor
or
adc
adc
adc
sub
push
lods
jnp
mov
je
push
dec
enter
xor
fmull
inc
pop
int
divb
pop
add
mov
pop
test
dec
jne
adc
push
push
ret
jl
jae
xor
mov
aaa
lock
es
test
or
adc
inc
lcall
mov
mov
sbb
sub
sbb
xchg
mov
sbb
insl
fstl
cmp
add
push
shlb
push
fucomi
push
pop
call
dec
sarb
mov
sbb
and
inc
inc
inc
cmpsl
mov
sub
cmp
pop
jb
outsb
mov
mov
enter
add
mov
lds
sahf
repnz
pop
int3
idivb
sbb
adc
andl
mov
loope
cmc
subl
dec
cld
pop
jb
pusha
cmp
bound
cld
mov
scas
sarl
mov
jg
repz
subb
cmp
je
dec
dec
std
mov
jne
pop
push
arpl
pop
jbe
sub
cmc
cmp
stc
cmp
pop
cmpsb
ret
mov
clc
cmp
mov
repz
push
mov
push
push
sbb
ret
je
loopne
ficompl
cwtl
cmp
fs
movl
daa
js
cld
into
dec
rorb
cmp
sbb
fcoms
fwait
jne
cwtl
int
setbe
test
pop
clc
sbb
xchg
lea
cmp
clc
add
push
call
pop
mov
mov
cmp
adc
clc
inc
push
lds
xlat
jb
mov
cmp
test
or
xor
push
jo
sbbb
iret
push
dec
cmp
call
xorb
dec
out
pop
push
inc
call
xor
pop
xchg
or
xchg
xchg
pop
js
fcomi
ret
push
dec
xorb
or
inc
add
js
ud0
das
jne
push
fstl
cs
sbb
or
lock
dec
jo
push
fildll
mov
mov
pop
stos
int3
inc
mov
daa
xchg
nop
adc
ret
clc
jae
push
or
mov
aam
mov
aaa
sub
jl
mov
adc
inc
mov
push
fsubl
ret
xchg
push
ja
jae
inc
jmp
push
sbb
outsb
andb
es
xchg
in
mov
sbb
scas
mov
test
mov
dec
jns
xor
fistpl
push
nop
mov
ret
insl
xchg
add
sub
push
and
push
add
or
adc
jne
mov
mov
xchg
dec
cmp
mov
call
lcall
add
decb
add
xchg
jnp
jae
or
sti
sub
mov
inc
xor
test
or
not
inc
xor
icebp
mov
lods
mov
jl
cmp
and
pushf
in
mov
lea
imull
je
cmp
mov
push
loop
mov
fistpll
cmp
jae
cmp
je
jo
mov
sub
cwtl
sbb
jae
and
divb
push
popf
std
mov
pop
adc
jne
aad
pop
pop
call
call
sub
cmp
lods
jp
inc
fimull
mov
add
imul
dec
lret
mov
cmp
add
mov
out
test
andb
push
push
insl
adc
pusha
stos
jecxz
adc
pop
dec
push
jo
push
push
dec
sbb
mov
xor
leave
lods
lods
push
mov
or
push
mov
xchg
lret
in
mov
mov
mov
mov
mov
pop
mov
cs
mov
das
mov
add
fsts
rclb
js
shlb
insb
aam
aad
fldt
fsubrs
and
fidivl
gs
loopne
test
loop
mov
popa
pop
in
push
out
dec
out
rol
mov
call
jle
dec
shll
outsb
je
lds
sub
xor
mov
mov
ret
les
lds
mov
enter
lret
cmp
int3
hlt
xchg
push
xchg
xchg
mov
push
cwtl
cltd
lcall
pop
xlat
adc
sub
mov
inc
add
mov
pop
cmpsl
test
push
test
jne
shl
idiv
ds
hlt
cli
loopne
mov
dec
negl
ficoml
mov
hlt
roll
inc
popf
pusha
or
pop
mov
cmp
jo
jo
aaa
xor
lret
outsb
jae
addr16
sbb
jmp
mov
idivb
in
lds
xchg
fisttpl
pop
dec
rcrb
adc
xchg
cmp
enter
cmp
or
jg
lea
mov
lcall
push
inc
jge
sti
xor
jne
lcall
negb
and
loopne
into
imul
enter
xor
dec
jbe
xchg
ret
sbb
daa
inc
inc
lds
inc
sub
nop
jmp
aaa
sbb
loop
sbb
sbb
ret
ret
jmp
test
aas
mov
nop
adc
or
inc
jbe
pop
cld
std
inc
inc
xor
push
hlt
cld
adc
push
out
cmp
push
adc
std
inc
push
xor
sub
stc
push
sbb
inc
sub
jle
push
test
cld
fists
sti
pop
mov
sbb
aaa
adc
adcl
push
sub
lock
push
outsl
shr
cld
xchg
jnp
fistl
jg
inc
add
mov
sub
cmpsl
adc
xchg
in
add
ret
push
add
pop
nop
add
xchg
shlb
insb
icebp
mov
push
mov
adc
pop
jp
push
je
push
add
inc
sbb
sub
std
arpl
mov
stos
call
insl
faddl
test
xchg
cmpsb
xchg
adc
xchg
test
je
adc
mov
std
incb
push
and
js
out
push
inc
add
addr16
test
int
add
mov
movsb
ret
sti
cmp
or
repz
jne
push
add
xchg
dec
jmp
add
pusha
adc
sbb
repz
dec
adc
call
push
xchg
add
mov
jo
leave
rclb
mov
test
push
push
add
mov
andl
lock
cs
push
push
jnp
rclb
pushf
cmp
incl
fcoms
xchg
stos
mov
adc
fwait
add
js
mov
mov
cmp
mov
cwtl
jo
stc
jmp
and
push
inc
sub
pop
sti
call
jmp
push
add
scas
fs
or
mov
and
in
andl
fwait
or
call
add
sbb
sub
loopne
mov
mov
into
loop
ss
mov
xchg
or
inc
mov
cld
test
jb
pop
mov
into
xor
adc
insb
insb
popa
xor
rcll
push
imul
fsubs
ja
fildl
mov
fstp
jae
fbstp
sbb
jae
shll
cld
std
insl
shll
lcall
mov
add
mov
mov
xor
imul
shll
outsb
mov
mov
mov
leave
pop
pop
lret
fdivl
in
cmp
js
out
call
jmpw
jmp
cs
inc
mov
xchg
icebp
repnz
push
mov
jo
mov
cmp
cmp
xlat
addr16
xorb
ficomps
in
test
mov
imul
push
bound
add
push
hlt
mov
and
dec
mov
in
movb
xor
int
lock
push
inc
jmp
lea
andb
cli
sub
push
mov
push
dec
shll
push
imul
call
pusha
insb
lcall
jb
jne
xor
xor
fs
insb
je
daa
loopne
xor
mov
lods
mov
cwtl
lods
xchg
push
add
sub
or
shlb
mov
loopne
jb
push
dec
cmp
out
fsubrl
sbb
sub
fldenv
jge
test
adc
rcrb
dec
dec
les
dec
sub
sub
dec
rorb
ss
es
cmp
adc
push
and
or
addb
inc
or
fadds
cs
xchg
cmp
jge
nop
int3
notb
cmp
and
dec
dec
out
or
lret
mov
xchg
repnz
lds
hlt
in
xchg
loopne
push
neg
jb
and
sub
pop
dec
mov
mov
adc
dec
in
push
or
and
jne
xor
and
and
or
jmp
es
int3
xor
shll
add
je
and
jae
mov
mov
mov
lcall
jae
mov
mov
pop
mov
mov
adc
mov
lcall
enter
pop
ss
lret
int3
int
das
cmpsb
imul
cmpsb
jmp
rcll
aam
aad
xlat
aaa
fdivrs
mov
mov
xor
cmpsb
imul
fnstsw
jae
loop
mov
shl
in
xor
out
xlat
insb
fwait
cmpsb
call
jmp
daa
imul
out
out
fs
es
jae
repnz
lcall
sarb
cmp
cltd
mov
idivb
mov
pop
push
iret
mov
daa
jae
jecxz
shl
add
cld
or
mov
clc
sbb
cmp
nop
inc
and
push
adc
cs
iret
or
adc
pop
loopne
mov
xor
cmp
out
loop
cmp
pop
call
jo
mov
outsb
es
push
add
inc
sbb
ffreep
es
jmp
sar
mov
mov
mov
jmp
and
es
push
scas
jg
add
outsl
test
sub
pop
sub
and
mov
fdivl
jl
inc
push
sbb
scas
sub
jnp
shlb
insb
outsb
mov
and
add
mov
add
and
add
or
and
xchg
stos
fimull
call
sbb
popf
leave
mov
sbb
call
inc
cmp
frstor
mov
lods
mov
push
lods
mov
icebp
ja
mov
mov
cltd
idiv
mov
outsb
mov
divl
adc
add
xor
xor
mov
push
cld
call
shrl
sbb
jb
adc
dec
into
scas
push
inc
xor
cmp
mov
inc
test
lret
lea
stc
push
sbbb
mov
loopne
rolb
xor
fdivl
jecxz
jmp
xchg
sub
fldl
lods
pusha
adc
jp
sub
and
pop
inc
pop
cmp
out
daa
inc
mov
mov
cmp
mov
sbbb
mov
cs
push
push
push
and
stos
jge
movsb
lret
mov
mov
lods
stos
push
aad
xor
test
pop
ret
jmp
test
adc
mov
scas
mov
push
outsl
mov
ret
push
sti
push
jns
push
stc
in
mov
fldt
mov
pushf
push
lea
jmp
mov
popa
repnz
add
clc
xor
cmc
not
call
out
fisttps
inc
and
call
gs
pop
inc
in
jge
or
lahf
xor
xlat
stc
mov
xor
into
add
sub
ss
sbb
in
cwtl
mov
rol
rcr
pushl
setge
mov
jne
arpl
and
and
outsl
out
outsb
sbb
or
insl
lds
and
fcmovnb
push
push
movsl
decl
mov
js
pop
adc
lea
sub
outsb
sti
mov
shrd
fsin
push
push
cmp
setne
cltd
mov
insl
mov
inc
call
out
sbb
mov
pusha
stc
add
mov
idiv
mov
mov
push
push
dec
push
mov
pop
sub
neg
sbb
mov
loope
adc
push
out
sbbl
daa
pop
or
pushf
sub
jge
pushl
add
int
incb
sbb
jmp
pop
out
fdivrl
gs
mov
fistpll
pop
cmp
mov
pop
push
pusha
cmpb
push
aad
js
js
sub
stc
imul
pusha
in
add
dec
sti
pop
mov
mov
jmp
pushf
dec
xchg
fbstp
jo
ret
sbb
pushf
pushf
sti
push
loope
jg
jmp
clc
stc
cwtl
lea
loop
pushf
cmp
cmc
ja
fstl
xchg
out
call
pop
jbe
in
sbb
sbb
pop
insl
and
sbb
jns
test
cld
cld
inc
out
sti
je
aas
cmc
cli
adc
push
scas
loopne
popf
stos
inc
outsl
pop
jb
push
test
inc
lret
mov
ds
xor
mov
sbb
push
out
repnz
add
sbb
and
shl
pop
sti
dec
add
xchg
add
adc
jne
cmc
sti
sub
sti
divb
mov
call
roll
or
adc
emms
or
pusha
or
sub
stc
xor
cmp
adc
and
xor
mov
adc
push
rolb
nop
into
insl
idivb
movsb
mov
or
or
add
int3
clc
and
jg
cmp
mov
movsb
lods
or
and
inc
push
add
mov
mov
loope
into
ret
jmp
dec
aad
faddl
mov
mov
idiv
pop
cmp
stos
adc
in
out
add
call
repz
fiaddl
pop
jnp
push
popf
or
addr16
ljmp
mov
stc
or
xlat
sub
push
pop
add
pop
out
imul
data16
data16
push
pop
mov
push
or
push
pop
pop
mov
roll
shrb
dec
mov
cmp
cmp
je
push
dec
push
arpl
cmp
je
add
sbb
data16
mov
or
add
xchg
mov
pop
push
je
rorb
jb
les
or
mov
leave
icebp
push
mov
mov
xor
mov
jae
pop
outsl
out
nopl
clc
xor
daa
cmp
add
ret
and
fnstenv
enter
hlt
gs
xchg
aam
fsub
call
loopne
sbb
dec
push
or
mov
sbb
pop
sbb
mov
mov
call
inc
shrl
dec
scas
adc
aad
and
je
test
jp
ficoml
fcomip
sbbl
in
cmp
inc
jl
push
mov
lcall
jl
push
xor
push
jnp
mov
sub
mov
pop
mov
xchg
hlt
cmp
or
mov
mov
adc
lods
add
subb
xor
sub
ljmp
cs
ss
push
ret
sub
hlt
inc
adc
rclb
pop
jo
mov
adc
push
jl
push
xor
push
out
dec
dec
mov
lret
mov
dec
inc
push
cs
mov
insb
mov
push
sub
xor
rcl
stos
gs
jb
gs
xor
rcll
imul
imul
test
je
jo
dec
xchg
gs
jo
push
gs
xchg
gs
gs
fwait
cmpsb
jmp
xchg
xchg
xchg
cwtl
push
je
shrl
lcall
xor
rcrl
lcall
js
movsl
cmpsb
inc
dec
imul
insl
mov
push
xlat
jmp
sub
mov
mov
and
je
out
cmp
pop
xchg
dec
outsb
je
gs
xchg
and
outsb
xchg
gs
xchg
outsb
arpl
xchg
out
inc
xchg
xchg
xchg
xchg
xchg
xchg
in
hlt
popa
loopne
pushf
mov
shlb
push
out
add
jg
lods
jo
sub
fisubrs
mov
data16
inc
das
cmp
imul
adc
in
xor
pushf
add
mov
fld1
push
push
cmp
sbb
btc
xchg
sub
call
jmp
push
pop
push
pop
bound
add
fwait
stos
sti
je
mov
mov
jns
shlb
pop
adc
sub
jle
movsl
sti
je
inc
lods
cmpsl
ftst
shrb
cld
repz
pop
shlb
inc
mov
and
ja
push
push
jne
cs
lock
daa
mov
xchg
pop
rolb
leave
clc
aad
and
stos
push
clc
call
enter
mov
idivb
xchg
push
sbb
sbb
push
lsl
sub
outsl
dec
dec
std
rcl
adc
pop
or
sub
inc
outsb
ja
movsl
push
daa
push
je
call
and
cs
lea
or
or
je
pop
mov
mov
icebp
shl
mov
lock
push
jp
mov
jno
in
pop
mov
mov
push
and
popf
fstps
adc
inc
out
shll
fisubs
rcll
mov
fldt
mov
push
xor
sub
jnp
incl
dec
aaa
jle,pn
int
sub
mov
das
pushf
xor
jmp
sbb
ret
jle
mov
adc
add
test
pop
xor
subb
jle
dec
hlt
imul
dec
sbb
roll
movsb
call
cmp
pop
loopne
out
gs
inc
ret
in
xor
pop
stos
dec
sarb
gs
arpl
ss
xchg
je
repnz
lcall
push
cmpsb
imul
jmp
lea
sbbb
or
xchg
sbb
xchg
or
insl
cli
mov
push
and
pop
jb
adc
mov
pcmpeqd
imul
sub
or
add
sbb
jae
sbb
in
dec
mov
dec
add
std
fists
call
mov
sub
popa
je
sub
mov
outsl
outsb
cmp
mov
pop
hlt
insb
cmc
imulb
imull
cmpsb
imul
sti
cld
add
leave
dec
in
in
mov
popa
and
in
rorb
fdivr
adc
gs
xchg
sub
orb
add
cmp
imul
into
or
or
imul
cmc
mov
adc
mov
in
add
rep
or
add
addr16
leave
pop
jge
mov
in
bswap
int
gs
sub
sub
mov
or
lcall
shrb
mov
adc
push
mov
in
data16
int
pop
fcompl
push
xor
push
nop
xchg
add
imul
and
dec
sub
adc
mov
rcl
and
sbb
stos
fldcw
mov
mov
into
cld
or
pop
je
int3
inc
mov
lds
pop
xchg
out
pop
or
sub
push
mov
cwtl
outsl
add
mov
je
das
das
das
das
sbb
je
or
jle
cwtl
add
push
pop
jg
movsb
jmp
push
push
cmp
outsl
popa
sahf
out
and
sbb
popa
aas
adc
add
mov
movsb
bound
sti
das
mov
in
pop
seto
push
pop
adc
adc
cld
sti
enter
push
js
jne
scas
push
push
fnstcw
out
cmp
xor
orl
add
and
ret
jle
or
pusha
fs
push
in
cmp
daa
cs
or
ret
ret
imul
pop
xchg
pop
add
add
push
das
adc
adc
mov
enter
mov
add
nop
or
mov
jl
jge
fmuls
sbb
add
adc
adc
inc
es
jae
call
in
jmp
inc
push
push
xchg
pop
add
and
and
push
sbbb
arpl
cmpsb
test
outsb
cmp
bound
imul
inc
outsb
je
mov
sbb
xor
mov
lret
mov
aas
popa
arpl
sub
lret
outsl
outsb
gs
lret
mov
lret
gs
imul
es
rclb
aas
popa
arpl
gs
dec
outsb
cmp
pop
jbe
loopne
loope
jns
in
dec
shll
mov
mov
and
sub
sahf
data16
shlb
cli
notb
je
add
mov
inc
jmp
aam
adc
jmp
movsb
jne
and
movsb
std
int3
push
adc
inc
repz
popl
scas
sahf
and
push
push
pop
jbe
roll
dec
scas
in
jnp
fstpl
mov
fstp
xor
or
lcall
in
pop
jl
jl
or
pop
pop
and
fdivr
stos
and
dec
xor
das
lods
imul
pop
ja
sbb
sbb
outsl
test
inc
inc
cld
repnz
in
and
js
fldt
cmc
stos
add
shlb
and
cmp
and
xlat
fs
mov
or
xor
fcoml
or
fistps
inc
jle
mov
fldenv
or
and
incl
lods
sbb
jmp
mov
xor
jle
lea
jnp
iret
insl
sbb
pusha
call
popa
dec
adcl
aam
out
push
fstpt
add
jmp
in
add
sbb
push
insb
scas
jle
add
jge
cmp
adc
push
sbb
and
or
push
lods
add
sbb
ljmp
add
loopne
and
mov
sub
aas
fucom
dec
into
add
imul
outsl
jae
pop
xchg
gs
bound
jne
nop
push
scas
insl
aad
mov
jbe
cs
push
jo
and
cs
inc
js
cmp
mov
push
mov
pop
add
xor
and
popa
into
cmp
push
lcall
outsl
fisubrs
insb
nop
push
imul
or
push
mov
fldl
pop
inc
subb
iret
jns
inc
inc
mov
std
aam
xchg
inc
cld
in
lcall
leave
popa
imul
inc
lcall
pop
rcrl
mov
mov
jle
jl
sarb
pop
mov
xor
inc
add
sbb
push
inc
xor
jmp
in
rcll
add
frstor
jge
ljmp
cwtl
movsl
xchg
mov
gs
xchg
ja
xor
cmpsb
fldt
cs
fs
cmpsb
imul
jb
outsb
push
imul
inc
push
mov
call
xor
pop
push
or
mov
sbb
imul
cmp
mov
mov
jmp
adcl
cli
mov
sti
and
xor
outsb
dec
jb
inc
pusha
cmpb
push
dec
and
mov
sbb
lods
add
adc
ficomps
les
push
sub
inc
and
cmp
fisttps
sbb
add
movsb
pop
push
loopne
pop
adc
pop
ds
pop
js
jne
push
push
push
cltd
cmpl
and
xor
popa
push
bound
nop
mov
jo
cmp
xor
mov
in
rol
mov
enter
jnp
push
mov
loopne
rclb
lret
adc
add
test
sahf
test
add
mov
jge
pop
movsl
movsb
adc
int3
inc
imul
and
std
dec
and
adc
js
add
add
test
rol
xchg
je
xor
jo
fs
push
or
in
dec
push
jmp
mov
stc
adc
clc
negl
fs
inc
div
hlt
inc
filds
sti
andb
int
push
xor
shll
add
jne
add
push
push
mov
pop
shll
or
insb
lock
popa
lcall
imul
sbb
inc
je
nop
push
push
xor
inc
aas
jo
cmpsb
imul
outsb
mov
mov
mov
cmp
aad
dec
pop
icebp
jne
and
repnz
cwtl
orl
xchg
xchg
xchg
xchg
adc
dec
fldcw
pop
scas
inc
mov
dec
nop
inc
xchg
mov
dec
inc
xchg
xchg
pushf
xchg
pop
xchg
xchg
adc
cmpsb
mov
push
scas
add
outsb
inc
cmp
push
jo
test
xchg
mov
lds
pusha
insl
pushf
ss
in
or
jp
push
rorb
adc
sbb
in
push
mov
jg
clc
add
hlt
ds
fsubrs
lds
mov
int
push
jne
xchg
pop
xor
jne
dec
cmp
xchg
insl
mov
lock
add
sbb
inc
lods
mov
popa
das
push
mov
lea
arpl
lea
xchg
or
mov
pop
insb
cmp
test
push
mov
or
sti
in
pop
stc
xor
cmp
inc
cmp
jl
and
int3
xorb
mov
push
lret
gs
into
iret
jo
cmp
das
sarb
push
jno
popa
xchg
lret
in
xlat
jp
jae
xor
xor
shll
xor
shll
xor
push
xor
outsl
insl
cmp
lret
leave
mov
xor
push
mov
cmc
push
divb
dec
rol
divl
ds
jae
call
xchg
ds
fnstenv
rcr
test
rolb
dec
shll
push
xor
sarl
xor
dec
xor
xor
shll
shlb
xor
shll
outsb
das
jmp
das
sar
fs
xchg
cmpsb
cld
std
adc
gs
gs
je
jns
std
cmp
lock
add
cs
sbb
pop
fwait
jp
or
or
add
pushf
popa
inc
jae
je
shll
outsl
insl
jne
outsb
aam
inc
pusha
jne
call
lods
push
icebp
pop
mov
sbb
or
mov
ljmp
pop
iret
mov
push
push
int
fucomp
ss
push
push
fistpll
ss
xor
mov
add
out
or
idivb
cmp
out
cmp
inc
add
cmp
idivl
rorb
sub
rcr
fildl
rolb
clc
add
jg
sub
pop
pop
jns
add
sar
add
mov
mov
mov
aaa
js
add
or
pusha
or
add
mov
clc
and
mov
or
fincstp
outsb
sbb
mov
add
adc
jnp
mov
into
inc
pop
adc
mov
and
les
or
aam
inc
or
jae
and
stos
push
xor
ret
mov
or
fdivp
mov
dec
repnz
mov
xchg
mov
jg
push
inc
imul
lahf
addr16
nop
or
push
push
sahf
xor
or
loopne
popf
cmp
sbb
in
lods
add
adc
jl
jl
xchg
push
fldcw
jbe
bnd
push
mov
in
in
jns
mov
jecxz
aad
dec
test
mov
das
incb
cmp
jl
popa
mov
in
div
in
mov
std
cmp
mov
cmp
stos
lock
or
call
or
mov
loop,pn
xchg
sti
in
loopne
cwtl
rolb
cmp
mov
inc
and
rclb
push
imul
movsb
imul
mov
dec
mov
bound
das
xor
sbbb
and
ja
jle
cld
jge
mov
inc
push
add
cmp
call
fsubrs
inc
pushl
fwait
jnp
mov
mov
int
fucomip
push
pop
push
ss
fs
push
das
mov
je
clc
push
std
adc
fsubs
stos
pushf
push
outsb
outsb
negl
push
push
pop
and
add
mov
push
mov
movl
mov
movsl
push
fwait
les
add
xchg
loopne
adc
push
js
cmp
cltd
adc
fcmovu
testb
mov
mov
outsb
sbb
enter
push
push
and
or
push
dec
jno
xchg
out
add
or
lret
loopne
push
adc
and
loop
notl
adc
daa
push
nop
xchg
push
out
call
fistl
das
push
lock
ja
lock
ds
pusha
pushf
mov
inc
call
mov
or
mov
pushf
cmp
inc
mov
add
add
mov
jl
jg
movsbl
push
decl
push
cmp
jl
cmp
adc
push
mov
fs
adc
xor
fs
fildl
jo
dec
mov
dec
mov
or
sarl
inc
je
fiaddl
or
mov
or
repz
add
leave
insl
fcomps
add
arpl
in
ljmp
cli
inc
fstpt
dec
jle
mov
or
push
inc
dec
adc
inc
push
pop
pusha
or
or
jecxz
pop
xchg
pop
sbb
shrb
or
ds
and
adc
aaa
pusha
push
sub
mov
jne
jne
fmul
jmp
ret
push
push
push
nop
add
add
or
mov
pushf
lcall
scas
arpl
in
or
popa
jb
lcall
dec
rcl
inc
popf
cmc
movsl
outsl
insb
push
add
xor
pop
imul
push
ds
mov
jb
sbb
adc
mov
push
cmc
jecxz
or
or
mov
nop
clc
je
xchg
mov
cmp
inc
mov
xor
pop
test
or
push
pop
jae
jae
insb
out
outsl
daa
mov
push
push
mov
jno
sub
or
repz
xor
imul
les
or
dec
jecxz
mov
aam
mov
jnp
idivl
xchg
decb
mov
mov
jmp
lock
ret
adc
pop
jne
clc
or
inc
sbb
enter
pop
sarb
lea
mov
int3
adc
aaa
dec
shll
insb
ja
or
or
shlb
or
arpl
lock
jae
inc
mov
in
test
mov
jbe
jne
pusha
nop
and
sub
sbbl
out
inc
xor
les
movq
xchg
mov
or
push
cltd
mov
xchg
sbb
loop
add
repnz
or
xchg
and
decb
cmpl
cmp
mov
add
push
inc
inc
test
sub
imul
je
cmp
mov
pop
or
cmpb
cmpsb
js
dec
jge
or
push
pop
jb
dec
or
adc
sbb
imul
push
out
inc
inc
adc
in
push
push
lret
fdivl
fisttps
push
inc
dec
sbb
or
inc
iret
add
add
je
and
add
dec
jo
or
mov
add
movl
mov
jne
mov
sub
mov
fs
cmpl
lahf
mov
fwait
mov
add
insl
push
pop
andl
or
jmp
jle
movzwl
mov
jne
fildll
shr
add
push
cmp
pop
test
mov
addr16
out
fildl
add
data16
lock
pop
insb
fisttpl
or
sub
add
or
clc
mov
lea
stos
scas
adc
mov
adc
add
jmp
mov
push
jae
or
repz
add
loope
jno
push
push
mov
out
adc
push
push
aad
loop
inc
adc
das
je
mov
aaa
sbb
je
and
ret
js
pop
mov
pushl
add
push
scas
clc
sub
mov
fsubrl
test
add
arpl
or
rolb
sub
push
std
scas
xor
andl
jle
sbb
pop
lods
or
mov
push
call
insb
aaa
fwait
lahf
inc
aaa
pushl
lcall
mov
les
or
push
jl
mov
out
mov
mov
push
jp
jno
orl
and
mov
mov
nop
or
and
inc
cmp
testb
je
pop
inc
sub
inc
shr
or
rorb
gs
xor
stos
int
adc
test
sarb
mov
das
data16
mov
mov
inc
pop
cmp
mov
and
and
out
push
cltd
shll
mov
sub
adc
fsub
and
jmp
and
faddl
in
in
pop
xchg
add
gs
insb
cmp
outsl
jb
jb
flds
jb
lcall
insb
xor
sbbb
je
push
sub
mov
ss
in
push
or
lods
pusha
or
or
lea
loop
mov
hlt
mov
lcall
pop
popa
imul
jge
add
add
mov
add
push
lcall
int3
jmp
movsl
aaa
add
pop
push
inc
and
mov
lock
or
daa
out
push
popa
popa
xchg
cmp
jecxz
push
xchg
push
ss
loopne
andl
dec
pusha
add
lods
push
test
addr16
push
push
mov
and
adc
test
jne
jmp
pop
push
stos
push
sbb
sbb
jmp
mov
hlt
add
push
adc
loop
jb
push
pop
sub
lret
mov
sub
in
jge
mov
insb
test
or
sub
or
and
popa
adc
arpl
fs
xor
push
scas
and
inc
aas
push
andb
adcb
test
xchg
pop
dec
xlat
aam
loop
dec
push
jge
or
scas
pop
test
cltd
fmul
inc
inc
pusha
push
xor
je
cmp
push
dec
aaa
jnp
push
mov
daa
push
mov
fsts
and
fisttpll
push
inc
adc
cmp
pop
in
mov
push
mov
and
cmpb
outsb
push
pop
stos
push
push
sbb
int3
lar
jmp
jnp
ss
and
insb
xchg
and
pop
or
sub
adc
xor
dec
std
inc
cmp
jl
fstps
ficoml
mov
jmp
add
jmp
jns
lds
sbb
stos
add
sbb
out
mov
arpl
in
je
movb
mov
imul
and
jmp
sub
and
in
out
fmull
out
push
pop
loopne
xchg
outsb
in
jae
std
loop
jcxz
push
imul
cmp
ret
mov
pop
xchg
in
gs
mov
xchg
js
xor
xor
mov
je
popa
jns
xchg
stos
cmpsb
fwait
cs
dec
push
push
cld
popa
adc
pop
mov
add
pop
and
add
cli
mov
shlb
or
pop
xlat
and
inc
mov
adc
cmp
cmp
xchg
adc
dec
or
mov
push
xlat
add
aam
add
call
sub
sub
inc
dec
pusha
xor
pop
test
mov
ljmp
inc
sti
jle
pop
aas
inc
bound
out
ds
mov
inc
test
push
jecxz
nop
xchg
mov
inc
andb
pop
adc
mov
lret
insb
outsl
jb
jb
xor
rcrl
gs
je
out
push
test
jnp
dec
xor
xchg
imul
enterw
inc
pop
leave
std
mov
les
push
in
adc
sbb
fcoms
int3
mov
mov
jns
xor
or
out
lcall
arpl
fbld
mov
xchg
mov
rcrb
sbb
cmp
pop
lcall
jmp
inc
mov
xchg
dec
rol
add
aam
ljmp
pop
push
int3
xchg
out
xchg
jl
pusha
add
iret
xchg
xchg
pop
xor
and
and
push
xorb
xor
stc
sbb
inc
call
add
xchg
xchg
out
cld
or
clc
hlt
stc
ret
or
mov
and
push
mull
add
mov
clc
test
mov
pop
fstps
xor
addr16
shlb
xor
repnz
cmp
repz
scas
sbb
sti
lea
fstl
dec
mov
test
enter
lcall
inc
fs
arpl
gs
js
gs
orb
jb
and
dec
outsb
mov
adc
imul
or
pop
dec
and
push
add
jbe
mov
inc
jge
or
arpl
bound
push
push
arpl
xor
dec
gs
sysenter
add
mov
cmpb
inc
outsl
aas
add
lret
xlat
add
mov
sub
xor
jnp
and
push
jb
mov
popa
imul
jb
je
jb
aas
push
outsl
outsl
insb
push
fldt
push
outsb
popa
jo
push
push
and
pusha
addr16
je,pt
push
mov
fisttpl
jo
adc
pop
inc
insb
ss
mov
and
lar
fstpl
aas
arpl
sbb
cmp
sub
jg
adc
jge
dec
outsl
fs
adc
scas
das
xchg
inc
aas
dec
outsl
lods
dec
imul
popa
jb
movq
sub
imul
imul
cs
inc
jns
add
or
and
mov
sbb
pop
mov
dec
outsl
add
or
sbb
movl
jo
mov
imul
push
xor
cmp
pop
dec
pcmpeqb
xor
mov
push
das
push
mov
cs
inc
arpl
xor
aaa
stc
jae
outsl
adc
mov
push
imul
icebp
clc
cmp
or
imul
incb
insb
pop
jb
jo
outsb
cmp
pusha
popf
dec
xchg
jae
add
notb
jns,pn
xchg
adcl
insl
jnp
cmp
or
test
insl
add
lahf
fcomip
mov
test
outsb
lds
lods
sbb
xchg
sahf
loopew
add
inc
imul
pop
insl
xorl
sub
xchg
inc
test
push
add
in
test
xor
jbe
popa
jnp
sbb
aas
roll
outsl
stc
test
jo
dec
fneni(8087
xchg
adc
push
outsb
push
push
push
cmp
inc
push
dec
inc
pop
lods
add
icebp
mov
jae
arpl
push
xchg
jle
andb
mov
lock
mov
sbb
addr16
fs
mov
or
fstpl
std
inc
pop
pop
and
ss
xchg
add
push
shll
pop
sbb
mov
jno
outsb
mov
andl
push
push
mov
int3
hlt
data16
xor
adc
cli
dec
bound
adc
inc
jo
out
in
movl
pop
sub
fnstcw
and
jb
sub
sub
sub
pop
and
mov
inc
and
insl
pusha
mov
lea
dec
mov
sbb
inc
shrb
mov
imul
lods
jno
subl
mov
push
movsb
jne
cmc
inc
movsb
notb
or
pop
add
js
mov
jnp
mov
ds
roll
jb
cmp
adc
std
and
cmovne
insl
inc
inc
push
inc
push
xchg
or
mov
insl
test
pop
call
mov
xchg
lret
pop
push
jb
mov
lods
es
cmp
or
insb
xchg
xor
pop
and
roll
icebp
out
adc
adc
pushw
lret
mov
xchg
xchg
popa
inc
mov
push
push
mov
inc
xor
outsb
insb
jns
xlat
fsubrl
ficoms
or
mov
insl
movsl
jbe
cmp
mov
mov
xor
inc
pop
push
add
arpl
arpl
nopl
outsb
fstpt
xchg
ja
xor
mov
mov
or
sbb
mov
out
mov
or
loope
pop
jbe
fwait
loope
scas
add
mov
in
fcomp
sbb
cmp
ret
sti
insb
ja
mov
add
push
aam
push
jmp
icebp
imul
add
add
into
in
inc
lock
fucomp
out
mov
push
add
fldenv
test
push
xor
rorb
adc
or
mov
mov
mov
dec
and
imul
jle
push
fwait
bts
mov
mov
xchg
mov
mov
pusha
push
lret
mov
mov
bswap
jge
gs
mov
dec
fstl
mov
pusha
push
pop
notb
pop
mov
loopne
cmpb
inc
clc
jbe
nop
push
and
add
sbb
data16
mov
jnp
add
sbb
loop
inc
xlat
or
faddl
loopne
pop
int3
and
imul
sub
jne
dec
mov
adcb
add
xchg
add
jmp
shlb
cmp
pusha
sbb
mov
ljmp
pop
jnp
xor
loopne
ds
pmuludq
mov
push
sarl
push
je
cmp
call
xchg
test
test
cwtl
jno
push
mov
mov
xor
inc
sbb
decl
cmc
mov
fxch
mov
nop
sbb
insb
xor
imull
aaa
dec
jecxz
jp
jmp
loop
sub
xchg
adc
xchg
or
lea
push
cmp
fbld
adc
xchg
jmp
fcmovnu
mov
jae
xor
repnz
icebp
ffree
or
incb
ret
decl
lods
fsubl
call
fs
out
mov
pop
mov
xor
mov
push
or
jle
jecxz
adc
push
push
test
nop
fiaddl
add
pop
test
insb
pmaxub
mov
adc
jmp
hlt
xor
roll
dec
out
jl
mov
jbe
lock
mov
cmc
xchg
pushf
inc
lods
adc
xor
mov
add
loop
stos
or
jno
jmp
jg
pop
jbe
push
pushf
add
jne
sbb
add
and
xchg
sbb
inc
test
and
fnstsw
ds
cmc
push
loope
xor
daa
bt
adc
outsb
popf
add
arpl
add
sub
test
push
call
and
push
mov
sub
pushf
std
into
mov
dec
mov
xor
inc
mov
push
stos
lret
inc
xor
push
jp
loopne
aad
mov
enter
cmp
adc
test
clc
xor
and
in
jmp
mov
dec
stc
mov
and
jne
insl
add
cmc
cmp
jne
out
clc
decl
rcr
mov
add
pushf
jmp
rolb
loop
pusha
mov
and
in
not
neg
sub
neg
in
jg
bswap
pop
pop
cli
xchg
xchg
mov
push
stc
sub
outsb
xchg
mov
push
add
sbb
out
nop
push
push
pusha
dec
adc
or
inc
ret
jmp
fnstsw
dec
call
and
and
test
xchg
inc
pushf
push
push
jp
pop
push
out
dec
push
jmp
jae
cmc
scas
jae
mov
cmp
add
mov
adc
out
pop
push
jnp
sub
jmp
jge
cli
or
dec
lret
clc
orps
call
shll
aaa
sbb
jne
pop
pop
mov
jg
fbld
xchg
movsb
insb
inc
inc
test
add
enter
aad
push
loope
outsl
add
inc
fdivr
mov
jmp
mov
push
call
add
fisubrs
pop
and
push
pusha
mov
inc
call
push
inc
aam
and
lahf
push
clc
xchg
mov
add
loopne
out
sbb
aas
or
cld
pushf
inc
xor
idivb
mov
jp
stc
and
call
mov
mov
xchg
in
sbb
jbe
prefetch
or
int
test
pop
lea
sub
repz
shl
push
pushf
inc
pusha
fs
sbb
test
or
test
sbb
xor
push
mov
xor
mov
cs
fmuls
outsl
push
push
xor
cmp
jbe
sti
test
or
ds
bound
jae
inc
not
ja
in
fiadds
shr
insb
pop
stc
push
into
pushl
jns
clc
pusha
inc
mov
lcall
aaa
push
sarl
div
adc
lea
or
jg
clc
jnp
jmp
mov
mov
xchg
dec
jmp
jl
push
sub
jnp
stos
ljmp
sub
adc
insl
ret
loope
loope
mov
jmp
dec
fisttpll
inc
sub
call
jmp
mov
out
dec
ret
xor
inc
and
or
aaa
mov
dec
mov
inc
pushf
imul
fwait
mov
dec
mov
jl
ficompl
aam
adcl
in
sbb
mov
add
push
cld
movsb
je
lahf
sti
std
add
in
pushf
xchg
lods
sbb
iret
cltd
aas
adc
pop
sbb
lea
loope
ja
and
sub
xor
inc
inc
push
pusha
xor
je
sbbb
xchg
xchg
pop
loope
jbe
shl
in
aaa
xor
jnp
mov
repnz
xor
xor
fistpll
rorb
dec
rol
ror
jmp
ja
aas
jmp
and
addr16
jbe
sbb
test
inc
cmpsb
xor
fcomip
jb
sbbb
sbb
xor
lds
shll
ror
jmp
fildll
daa
or
sub
mov
add
mov
inc
shl
sub
xor
aas
testb
orb
rcrb
repnz
or
jae
jne
xchg
rcr
or
or
scas
dec
jmp
push
mov
xor
andl
add
out
mov
fwait
mov
loopne
add
jg
into
ds
cmp
cmp
xlat
sub
fistps
add
sti
das
pop
xor
and
xchg
call
outsb
mov
in
jmp
or
leave
cli
cmp
and
push
mov
cmc
call
outsl
push
add
sub
push
or
pop
push
in
andl
adc
ficompl
push
add
into
mov
ss
push
jae
mov
xor
icebp
clc
push
sub
or
mov
add
xor
push
outsb
sbb
rol
push
xchg
cmc
pop
push
or
sbbb
add
mov
or
pop
sub
iret
xchg
into
mov
loopne
mov
cmp
jle
mov
jmp
mov
sbb
jecxz
and
jmp
jge
mov
mov
outsl
cmp
pusha
rcl
xor
mov
insb
arpl
or
or
fucomip
push
mov
mov
xchg
aas
lea
mov
cmp
sub
pop
cmp
add
shr
imul
fcompl
or
fists
lea
rolb
pop
sbb
or
in
pop
push
js
cli
jge
pop
add
push
or
xchg
push
pop
fcmovne
jno
pop
mov
js
jb
outsb
pop
xchg
leave
adc
fldenv
subl
mov
iret
push
neg
ds
fildl
leave
inc
iret
xor
aas
fldenv
adc
loope
add
or
dec
das
dec
cmpsb
or
sbb
clc
jo
scas
jg
mov
jno
pushf
ss
push
pushf
lcall
dec
and
push
add
sub
xor
jge
pop
loopne
mov
add
sbb
int3
mov
inc
mov
inc
cli
adc
sbb
imul
xchg
push
stos
mov
mov
jnp
std
mov
call
xchg
pop
iret
sub
scas
jg
mov
mov
inc
add
xlat
movsl
and
push
add
test
movsb
outsl
mov
sarl
jecxz
add
roll
adc
add
lods
in
or
push
pushf
inc
adc
into
pop
sti
sub
mov
in
jecxz
clc
pushf
in
add
push
fldt
dec
int
inc
roll
pop
xchg
xor
stos
jecxz
cmc
jmp
call
shlb
xlat
or
idivl
loopne
enter
mov
call
pusha
popa
push
lret
sti
xlat
push
in
dec
outsb
add
data16
jmp
iret
sub
pushf
clc
ss
shr
sbb
add
add
ret
push
sub
ret
notl
movsb
sub
cmp
dec
cli
repz
jne
inc
mov
sub
mov
in
out
cwtl
adc
outsl
clc
mov
jae
cmp
xor
jmp
xor
sub
fdiv
push
xchg
ljmp
cmp
and
and
scas
std
inc
mov
pop
mov
lret
push
cmp
dec
mov
push
mov
leave
xchg
lcall
daa
or
xor
test
loop
xor
mov
pushf
cmpsb
add
sarb
mov
mov
stc
stc
xchg
mov
pop
incl
mov
and
push
jmp
or
add
jbe
arpl
mov
and
mov
xor
subb
xchg
clc
aad
sbb
ficoms
push
jmp
pop
call
ds
loope
leave
push
rcr
dec
or
js
xor
lcall
jg
popf
adc
leave
pushf
xor
mov
nop
pop
pop
sub
or
rcr
test
push
cmp
lock
xchg
push
clc
shl
cmp
pop
mov
outsb
jmp
jb
std
push
rcll
mov
mov
sub
inc
mov
mov
fisubrl
fsubrs
in
lret
scas
scas
cmpsl
leave
movsl
or
in
sub
outsb
pop
das
fldt
fisttpl
mov
pop
cmp
mov
pop
insl
mov
aas
lock
and
sub
mov
inc
mov
mov
lock
pop
xchg
sbb
lahf
dec
aas
jg
jnp
div
xchg
jecxz
scas
scas
pop
aaa
fnstcw
sub
addr16
subl
fstp
mov
pop
test
aas
mov
outsl
and
cmp
pop
or
aaa
fstl
iret
add
jg
sarl
xchg
lock
daa
fnstsw
fstps
iret
pop
adc
mov
pop
mov
ja
out
fcomi
and
or
mov
lods
mov
arpl
xchg
fadd
or
mov
xchg
icebp
es
jle
fidivrs
ret
out
dec
loope
push
out
pop
or
cmp
arpl
push
out
sbb
inc
push
mov
repz
and
jnp
sbb
rcrl
idivb
add
and
loope
popa
pop
dec
psubq
pop
mov
fiadds
jnp
mov
addr16
imul
gs
push
iret
addr16
mov
dec
iret
adc
neg
loope
out
maskmovq
testl
fwait
cmpsl
daa
jnp
stos
and
push
out
mov
repz
mov
pusha
adcb
insl
push
and
pop
push
pop
outsb
push
pop
jns
leave
aad
lahf
call
sub
fiaddl
lahf
dec
rcr
je
cltd
mov
mov
mov
cmp
inc
jmp
push
dec
xor
ret
aaa
adc
cmp
rolb
fdivrs
cld
js
push
and
cld
cmp
setle
lahf
stc
mov
cltd
out
cli
or
cmp
call
repnz
or
pop
adc
lret
pusha
add
or
stos
add
rcr
test
rolb
scas
cld
hlt
fs
jmp
sbb
pusha
adc
orl
das
sub
or
ljmp
add
clc
neg
mov
loopne
push
iret
and
jb,pn
xor
inc
stos
cmp
xor
out
loope
std
mov
sbb
inc
xchg
push
push
js
sbb
mov
orb
pusha
setg
pop
repnz
stos
bnd
test
call
and
jl
cmp
sar
out
or
xlat
push
sbb
call
and
adc
aam
in
inc
dec
cmc
sub
add
int
aas
ficoml
push
or
out
push
xor
sub
mov
jge
mov
mov
clc
push
inc
sub
mov
js
fdivrl
pushf
adc
fadds
mov
or
mov
sbb
loop
sarl
dec
fisttpll
loope
jmp
inc
imul
out
cmc
cmp
mov
repz
rcl
mov
or
dec
ret
lea
call
and
fsubr
outsb
hlt
dec
cld
test
aaa
icebp
xor
incl
mov
call
lea
jle
push
bound
loop
faddl
das
and
cmc
pop
jecxz
adc
popf
pop
inc
push
sbb
ret
push
push
test
addr16
outsl
cmp
xor
test
xor
repz
jg
repz
push
xor
call
mov
push
sbb
adc
cmpsl
cmp
cmp
cmp
stos
loopne
aad
sbb
lea
push
sti
mov
adc
add
adc
pushf
sbb
jne
and
or
add
or
mov
call
test
sbb
lea
outsl
push
jmp
sub
mov
mov
xor
push
into
cmp
lret
jne
or
or
and
jp
or
xor
jmp
adc
mov
loope
pushf
sub
lock
call
sbb
aam
mov
jo
jb
dec
and
mov
mov
pushf
pop
or
icebp
push
pop
jl
pusha
scas
outsb
in
mov
out
adc
daa
pop
pop
clc
add
dec
xor
mov
dec
adc
jmp
xlat
std
popa
mov
imulb
push
xchg
or
insb
add
mov
cmp
scas
pop
test
sub
into
jno
ficoml
sbb
inc
inc
loop
cmpsl
hlt
push
add
scas
fistpll
push
cmpsb
ljmp
mov
push
sub
stos
lea
lea
jl
clc
mov
loope
jle
les
fidivl
inc
dec
leave
mov
icebp
push
jbe
test
scas
jmp
fcompl
testb
out
lret
ror
std
jno
testl
fildl
das
push
in
adc
enter
add
enter
call
pop
out
pop
inc
push
call
int3
mov
insb
in
jecxz
popf
insw
clc
pop
ja
or
sti
jb
mov
push
xor
xchg
call
xchg
xchg
sub
cmp
pop
loope
pop
jge
mov
mov
shr
pop
push
clc
lock
mov
rol
shl
stc
jnp
pop
rcl
test
lods
incl
sbb
int3
sbb
lods
bound
loopne
test
das
insl
lea
lods
ljmp
fldl
cmp
push
cmp
xchg
sbb
imul
std
adc
jae
lds
orl
iret
imul
pop
add
bound
stos
mov
jo
add
adc
call
sub
je
rcr
lahf
shll
adc
adc
pop
cltd
xor
ljmp
fistps
sbb
add
xchg
jno
insb
test
cmc
or
jmp
jecxz
and
dec
cs
stos
addl
xchg
cli
jge
and
push
mov
clc
fs
push
lea
jbe
add
and
cli
jb
pcmpeqb
or
int3
pop
aad
pop
stos
sub
jecxz
lods
loop
jle
mov
iret
shld
pop
stc
clc
js
in
sbb
or
movsb
cmc
jb
dec
jno
pushf
pop
popa
test
xchg
jmp
jno
popa
ret
aas
add
into
mov
push
negb
into
push
leave
stos
jp
adc
fiaddl
in
mov
call
dec
mov
cmpsb
ret
sbb
inc
mov
mov
push
shll
sub
sbb
mov
ds
sbb
pusha
rol
std
enter
push
call
fdivl
inc
gs
nop
mov
add
pushf
add
unpcklps
jbe
test
mov
push
testl
hlt
dec
push
fdiv
pushf
movsb
jnp
cs
in
js
into
imul
push
cmp
push
cmpl
jns
push
outsl
pop
pop
loopne
adc
xor
bswap
inc
rcl
shrb
btc
mov
jecxz
test
iret
cmp
adc
mov
jo
inc
sub
pushf
cmc
rcrl
lods
scas
cs
jmp
mov
push
test
fldenv
jg
jne
sbb
mov
sahf
insb
cmp
sahf
loop
or
call
push
bound
out
cmc
push
testl
ret
jns
jmp
daa
mov
push
fdiv
clc
pusha
dec
and
add
jne
fdiv
stc
dec
out
fs
pop
add
and
pop
or
inc
ret
sub
or
cli
push
push
cli
pop
cmp
cld
mov
cld
pushf
cmp
adc
xorl
testb
mov
ja
pop
dec
ja
xor
sbb
jp
mov
jge
and
xchg
cwtl
jg
cmp
mov
and
pop
test
sbb
movsl
stc
or
mov
sarb
sahf
aam
and
hlt
loope
push
js
xchg
clc
xlat
pop
sbb
jg
fdiv
pop
dec
dec
loop
call
lret
call
mov
or
sub
lock
xor
inc
sti
sub
jo
ljmp
imulb
clc
pushf
xor
stc
push
push
sti
push
inc
cmp
adc
sbb
stc
lret
shrl
ljmp
adcl
jle
sub
push
outsb
pop
mov
push
rep
cmpsl
fisttps
addl
mov
outsl
cmpsl
clc
out
fsubrp
sub
aad
setl
out
test
mov
push
add
push
cmpsl
andl
push
ss
test
xlat
inc
cmpsb
mov
mov
or
jmp
cmp
outsb
mov
clc
jp
fs
jg
call
fnstsw
xor
mov
add
jl
or
inc
scas
sub
incl
sbb
xchg
xchg
call
jmp
adc
jp
pushf
ds
jmp
scas
call
add
mov
repnz
adc
insl
pusha
jecxz
pop
or
stc
nop
pop
sub
mov
shrb
sahf
push
clc
loope
mov
dec
mov
lahf
push
aad
jbe,pt
call
sbb
pop
call
inc
xchg
ja
cmp
push
cmp
je
and
mov
insb
rclb
addl
aas
stc
pushf
in
and
cs
and
movsl
push
cwtl
sub
stos
push
jmp
add
push
mov
adc
arpl
mov
cmc
mov
and
sbb
push
inc
mov
sub
in
out
sbb
add
push
lret
push
cltd
sub
stc
and
shrd
pminub
jmp
xor
sbb
imul
aad
mov
add
pop
clc
cmc
icebp
idivb
mov
push
imul
jge
push
out
stos
cmp
sbb
dec
sahf
call
cmc
pop
mov
fs
icebp
stc
push
xchg
push
cs
out
int
push
dec
mov
out
mov
insl
loope
inc
pop
xchg
in
mov
shlb
ja
add
rcrl
mov
or
inc
sar
mov
in
call
dec
std
mov
dec
xor
scas
insb
sbb
arpl
out
mov
pop
repz
add
sbb
sbb
pusha
inc
test
rcrl
stc
and
mov
fsts
add
cmc
test
jmp
loopne
enter
jbe
jb
push
push
out
roll
add
inc
iret
cmp
in
adc
in
cmp
inc
in
cmpl
push
loopne
rcl
bound
fmull
sti
mull
insb
iret
cmpsb
lods
push
lods
outsl
xchg
pop
in
bound
cwtl
push
jl
mov
je
pusha
sub
insb
push
jne
and
sbb
imul
push
sbb
or
add
mov
lcall
mov
je
stos
xchg
or
fstpl
jmp
jp
lock
pop
pushf
push
pop
aas
imul
mov
sub
imul
mov
femms
mov
jmp
setbe
lea
ja
cs
mov
idivl
arpl
int
inc
push
js
sub
ljmp
jp
mov
pop
dec
fstpl
jo
xchg
pop
cwtl
lret
xchg
int
loope
pop
add
test
mov
scas
jns
stos
loop
js
push
ja
adc
cmp
outsl
pushf
shrb
jle
jo
rorb
adc
addr16
mov
xchg
mov
cmc
in
out
bound
jecxz
in
pop
push
push
sub
pop
shll
pop
jns
lcall
aaa
sahf
mov
dec
ret
cmc
cmp
das
adc
lock
dec
decl
jge
insb
das
scas
push
cwtl
and
mov
pop
lret
je
inc
dec
and
insl
inc
stos
int3
decl
out
fs
loope
push
sbb
xchg
or
pop
ljmp
cld
cmp
mov
rcll
xchg
xchg
xorb
mov
call
dec
jg
add
fwait
dec
lcall
fistl
and
mov
sbb
jmp
fildll
aam
outsb
jno
enter
dec
push
out
loopne
mov
or
lcall
pop
ror
negb
pop
scas
xchg
cltd
lret
mov
decl
sbb
decl
mov
mov
je
push
mov
pop
loop
xchg
in
jnp
and
pop
ljmp
pushl
loopne
adc
sub
xor
aad
out
lret
or
stc
jg
jmp
and
push
dec
mov
in
mov
and
sub
jbe
lret
pushl
mov
sbb
xor
xchg
scas
fisubrl
cmp
ds
insb
filds
outsb
loop
notb
rolb
stos
or
push
inc
imul
mov
lret
or
sbbb
std
mov
xchg
pop
andl
clc
pop
pop
mov
scas
mov
sahf
dec
push
xor
push
daa
jmp
xchg
in
inc
lcall
xchg
mov
mov
imul
pop
sar
inc
mov
xchg
out
arpl
add
push
ljmp
fldenv
sbb
lds
lods
fistpl
jmp
push
fsubl
push
mov
sbb
add
sub
out
into
or
test
lcall
or
imul
imul
fwait
inc
fs
jbe
movsl
popf
mov
jmp
mov
mov
push
imul
adc
mov
inc
gs
push
test
xchg
insb
ftst
stos
int
dec
sub
hlt
mov
enter
divb
xchg
pop
fidivrl
outsl
ss
xchg
or
ud0
pop
clc
cmp
and
pop
jnp
push
jns
outsl
scas
js
jae
jnp
pop
xor
loopne
cmp
xchg
adc
push
negl
mov
mov
les
icebp
mov
mov
movsb
fnstcw
sbb
js
mov
mov
test
mov
cwtl
lods
ret
mov
fwait
rcrb
add
movsl
hlt
jno
in
adc
hlt
push
mov
dec
lahf
daa
iret
leave
or
lods
dec
mov
aas
fcomps
adc
arpl
jmp
imul
decl
std
adc
push
mov
rcl
sub
js
dec
out
pop
cmp
mov
inc
jmp
les
lock
dec
stos
xchg
push
inc
in
call
test
loopne
cld
insb
fists
cld
pop
mov
nop
es
outsl
jmp
or
popa
andl
mov
xchg
sahf
aas
mov
cmp
ret
jg
mov
rclb
adc
jbe
js
movsl
add
or
mov
testb
fwait
movsb
sbb
test
mov
fnsave
std
jg
fidivs
inc
pop
out
lret
loop
hlt
or
stc
push
aam
adc
fbstp
lock
gs
aad
inc
lods
add
jg
fnstsw
hlt
cmp
adc
mov
ja
lcall
ja
jb
push
in
data16
xor
lret
xor
les
movl
mov
pop
xchg
push
cwtl
icebp
outsl
jp
cmp
lods
sar
pushl
add
mov
jae
lock
test
add
rcrl
dec
cltd
adc
vpaddw
fcomi
aaa
mov
std
xchg
pop
pushf
push
push
push
jns
pusha
push
rcr
add
mov
or
jmp
testb
jne
xchg
xchg
mov
gs
adc
in
in
jp
mov
call
cs
jne
cmp
inc
dec
pop
out
and
add
outsl
fcmovnbe
push
sbb
jnp
jmp
pop
pusha
jg
call
into
xchg
mov
jmp
repnz
xor
and
push
les
cli
insl
and
ret
xor
std
rorb
adc
mov
mov
mov
das
inc
orl
inc
nop
loopne
lret
lcall
fwait
popa
push
add
pushl
sbb
test
inc
popa
mov
xor
lods
xlat
cmc
pop
mov
push
call
scas
mov
ds
jecxz
mov
add
and
mull
push
xchg
or
xchg
push
mov
pop
pop
adc
fcmovbe
mulb
lcall
call
loop
pop
rorl
or
cmp
fimuls
imul
lea
mov
inc
mov
jbe
es
fidivrl
dec
int3
inc
repz
addr16
hlt
dec
lret
inc
mov
cs
inc
cmpsl
fwait
mov
repz
cld
incl
xlat
addr16
in
push
or
pusha
daa
push
mov
mov
idiv
movb
lret
sub
push
mov
add
pusha
and
mov
les
mov
xchg
in
push
bextr
fsubrs
sub
dec
sub
cld
dec
insl
popf
push
or
fildll
push
les
dec
inc
shrl
or
cmpsb
inc
or
cli
sub
jmp
or
sti
push
addr16
and
gs
out
bound
mov
fstpt
orb
cmpsl
in
rclb
test
adc
dec
ja
xor
pop
nop
inc
mov
mov
xchg
cmp
adc
dec
stos
pop
mov
adc
leave
cmp
inc
and
in
movl
inc
cld
mov
adc
lds
sarl
mov
xor
xchg
out
popa
decl
outsl
stos
bound
lea
leave
insl
inc
hlt
or
sbb
mov
cmp
aad
dec
xchg
out
test
sub
inc
sub
mov
call
movsb
dec
xor
sub
jnp
push
inc
mov
and
mov
bswap
js
shll
jg
daa
push
push
mov
and
insb
xchg
out
test
xlat
jb
imull
leave
cmp
stos
enter
jno
cli
je
ja
push
jne
adc
ja
shlb
jae
call
clc
xchg
test
data16
mov
cmpsl
xlat
inc
fisubrl
adc
idiv
incl
push
ret
gs
std
or
out
scas
lret
mov
jne
adc
and
add
xchg
aad
push
outsb
popf
push
cmp
xor
mov
fdivr
jmp
das
test
pop
int
ret
ret
xchg
cmpsb
and
js
negb
sub
decl
sarl
gs
in
iret
mov
subb
sub
repz
inc
sub
aaa
xchg
push
xchg
int
add
outsb
jns
fisttpl
repz
ds
rol
int3
ret
jle
cld
ljmp
pop
cmp
loop
push
ret
mov
loopne
lret
xor
cld
lcall
adc
pusha
icebp
fistpl
sub
mov
idiv
adc
ss
out
nop
xor
mov
icebp
in
sbb
xchg
pop
fs
xchg
fucomip
outsl
cmp
arpl
dec
xor
push
fmull
mov
lcall
or
popf
mov
repnz
mov
jno
out
sub
sti
insl
mov
dec
xor
lret
ja
pushf
sbbl
loope
xchg
jmp
jo
pop
xorb
int
sbb
jg
pop
pop
out
sub
pop
sub
xchg
ds
stos
mov
fildll
xor
jp
cwtl
mov
lcall
mov
adc
pop
sahf
outsb
es
pop
mov
clc
pop
jp
adc
mov
jg
push
jnp
in
cmpsl
sbb
enter
and
mov
icebp
jmp
push
and
ret
mov
add
stc
xlat
cs
jae
or
das
addr16
sarl
pusha
sub
push
ret
mov
dec
test
mov
and
jg
and
test
clc
sbb
sti
jl
sub
or
test
push
mov
scas
daa
in
mov
xor
leave
test
push
cltd
and
mov
repnz
fadds
xchg
rolb
cmp
mov
push
fcoms
aad
pushf
gs
cli
push
inc
and
flds
and
ficoms
push
flds
sbb
pop
or
inc
push
push
hlt
fadds
mov
jae
loopne
pop
pop
mov
or
push
pop
movsl
mov
out
pop
lret
and
ficoml
push
loopne
or
mov
sbb
cmp
imul
jae
mov
jb
lds
das
adc
push
int
mov
ffreep
ficoms
iret
pop
mov
lds
push
stos
pushl
xchg
mov
xor
adc
sbb
pop
add
pop
push
push
jg
jo
push
dec
loope
jb
dec
test
jnp
divl
out
dec
outsb
push
sub
sar
std
pushf
js
pop
clc
sar
push
arpl
mov
pusha
out
sbb
cmpsb
jle
sti
push
mov
jbe
les
xchg
call
outsb
cli
lret
aam
jno
popf
xor
jnp
adc
and
ljmp
pop
and
and
push
xlat
mov
incb
gs
insb
xor
cmp
adc
pop
ljmp
mov
sub
cmpsb
mov
ret
inc
inc
in
sbb
inc
push
in
popf
pop
sbb
incl
sti
fildll
mov
hlt
les
stos
arpl
xchg
jns
into
in
inc
xchg
xchg
xor
loope
cld
incl
and
push
cmp
add
aaa
imul
jo
es
pop
jns
ljmp
decl
repz
sub
getsec
cmc
push
jns
cs
repz
inc
xchg
or
ljmp
mov
pop
enter
jge
insb
push
cmp
and
iret
dec
stc
dec
mov
aam
rorb
and
stc
data16
test
inc
lcall
lods
iret
xor
fwait
mov
out
fcoml
fmul
ljmp
decl
pop
imul
sbb
sub
incl
cli
mov
in
les
adc
adc
and
movsl
inc
add
fs
jo
pushl
fdivp
outsb
cmp
dec
mov
push
push
and
lcall
push
lds
or
pop
jge
adcb
popf
dec
cs
inc
rcr
loopne
fisttpll
sti
fisubrs
stos
mov
ds
or
popa
leave
nop
cli
dec
dec
pop
or
mov
das
decl
jg
int3
sahf
push
ret
or
cltd
sbb
inc
dec
enter
negb
stos
lods
or
shll
hlt
cmpsb
in
push
daa
cmp
inc
dec
xchg
dec
mov
cmpsl
cltd
or
insl
in
in
sub
inc
js
jg
jg
je
xchg
sub
ficoml
adc
cmp
test
gs
clc
cmp
push
mov
jo
jl
stc
pop
adc
cld
nop
sti
call
outsb
cmp
test
sbb
scas
scas
cld
fistpll
lods
adc
cmpsb
add
sarl
into
mov
mov
scas
pop
pop
push
mov
pop
jb
cmpsb
sbb
cwtl
cmp
movsb
incl
lock
jb
sbb
mov
jns
ja
sbb
cmp
mov
jmp
rolb
inc
mov
outsl
pop
loopne
jecxz
insl
pop
sbb
mov
pop
lea
loope
jle
into
push
je
ret
icebp
mov
lahf
nop
push
mov
pop
jp
mov
sbb
and
sub
lds
inc
arpl
jno
xlat
mov
js
stc
pop
add
mov
cmp
addl
test
ss
jle
sub
jmp
mov
bswap
pop
sbbb
jbe
sti
dec
inc
lahf
push
jg
pop
xor
mov
xchg
fcmove
fisttps
addb
mov
sti
mov
xlat
jnp
fstps
push
loope
and
mov
sub
addb
mov
pop
ret
jae
dec
notl
imul
lods
xor
push
cltd
dec
pop
arpl
out
js
xor
call
fsubp
lock
lcall
test
fwait
or
pop
pop
and
movsl
mov
cmpb
imul
mov
lea
xor
cmp
call
je
sub
inc
outsl
daa
xchg
hlt
aas
add
ja
add
out
xchg
xchg
popf
jno
outsb
div
cli
pushl
mov
gs
push
xchg
mov
sbb
call
pushl
outsb
shlb
sbb
fmulp
jle
xchg
mov
jle
jmp
pop
loop
pushl
stc
jno
popf
mov
stos
and
mov
cmp
dec
pop
insl
outsb
mov
mov
call
mov
in
stos
or
jmp
fnsave
pop
and
cmc
stos
mov
mov
data16
sbb
and
ret
cmpsl
jnp
xchg
iret
fcompl
cmp
test
insl
popl
aam
sbb
call
add
call
mov
clc
lods
shr
mov
push
push
cmp
mov
or
adc
jne
mov
inc
cmc
rcrb
leave
and
mov
shll
cmp
data16
lods
sti
movsl
out
and
repnz
jmp
andb
fs
clc
pcmpeqw
xor
mov
sub
rclb
movsl
pop
sub
in
test
inc
pop
in
add
jge
test
frstor
int
aad
into
add
cld
fcomps
cmp
js
mov
sub
in
cld
call
fs
out
insb
sbb
lock
xchg
test
add
cwtl
imul
cmp
ljmp
js
aad
popf
push
push
leave
xor
shr
iret
or
xchg
and
subl
xchg
int3
adc
pop
clc
incl
and
cmp
push
in
cmpsl
imul
pushl
inc
cmc
sbb
pop
stc
adc
sbb
data16
pop
or
rcrb
ljmp
or
cmp
scas
fdivrl
dec
decl
pushf
xor
mov
cmp
iret
dec
and
mov
inc
cmc
xchg
dec
rcll
add
xchg
cmp
mov
decl
or
ret
inc
scas
pop
addr16
sbb
adc
stc
xlat
enter
xrelease
jmp
test
push
lret
inc
imul
sub
mov
rcll
addr16
push
rolb
cmp
cmp
imul
add
or
lea
ljmp
and
test
push
and
jg
leave
enter
cs
outsb
dec
cld
pop
insb
icebp
stos
inc
inc
pop
loop
mov
incl
add
cld
cmp
or
jecxz
jo
popa
repz
pop
insb
mov
pop
mov
and
fimuls
pushf
or
add
pop
fisttps
jbe
jle
movsl
push
pop
sbb
icebp
jp
push
mov
ja
pop
lock
pop
cs
jo
mov
pop
inc
lds
mull
xchg
mov
cmc
jnp
cmp
shlb
or
das
mov
pop
sbb
fmuls
hlt
push
call
mov
add
call
scas
insl
clc
mov
popf
or
cli
push
jmp
arpl
jb
pushf
mov
sbb
js
cmp
ljmp
hlt
leave
pop
pop
jmp
xchg
mov
push
cmp
fisubrs
mov
sarl
rorb
jb
lahf
les
loope
mov
stos
ret
jb
push
ljmp
or
repnz
je
in
dec
lahf
mov
hlt
dec
jecxz
lcall
incl
dec
and
add
and
mov
jle
sahf
lcall
ss
mov
mov
fucomip
jmp
mov
mov
rcl
add
ds
mov
xchg
scas
dec
pushf
and
mov
mov
push
dec
pop
ror
ds
rcrb
jg
pop
loop
sub
xor
iret
xchg
lret
div
push
test
xchg
enter
nop
mov
adc
out
pop
cli
pop
jg
ret
daa
aad
adc
and
inc
lods
mov
out
idiv
insb
loope
stos
hlt
push
orb
je
loop
jge
jle
icebp
mov
lods
pop
stos
ret
jns
divl
rorl
dec
push
or
scas
sub
push
inc
fsub
notl
aas
in
into
shll
mov
adc
jg
sbb
insl
mov
sub
nop
int3
fldt
nop
insb
aad
rclb
loopne
in
pop
inc
mov
rolb
push
pushf
mov
push
mov
ds
scas
xlat
loop
outsb
in
adc
fwait
mov
popa
outsl
das
lock
add
inc
js
clc
lock
lret
das
push
mov
sahf
mov
fidivrl
xchg
xchg
ljmp
inc
push
sahf
or
bound
or
dec
jno
incl
out
sti
push
movsl
test
jl
int3
aaa
cs
jae
jl
mov
sbb
mov
dec
sar
incl
mov
bound
loope
out
or
mov
xor
aas
push
hlt
lcall
mov
daa
out
mov
loope
imul
cmpsb
sbb
sub
dec
pop
int3
fiaddl
idivb
or
push
imul
sbb
mov
or
addr16
subb
sar
movsb
pushf
or
rclb
test
mov
fcoml
jmp
add
jne
shll
sub
pop
orb
in
in
mov
or
insb
push
fs
mov
data16
clc
loopne
cmpsb
cmp
dec
xchg
icebp
popa
popa
imul
sub
out
rcl
cld
or
lds
dec
mov
stos
sbb
aas
in
lods
insl
outsl
ja
lcall
das
mov
add
idiv
jg
scas
nop
aam
insl
mov
sysexit
push
jg
lods
test
loop
ljmp
cmpsb
mov
and
call
mov
orl
jns
mov
sbb
cld
std
add
jnp
aas
fcompl
sub
jmp
outsb
call
sahf
repz
ja
aam
add
sbb
cmp
push
inc
and
mov
lods
clc
scas
ficoml
mov
xchg
aaa
int3
in
push
sub
enter
adc
jns
fdivrp
fists
xorb
adc
sbb
pop
jp
cmp
inc
aad
dec
lods
xlat
mov
insb
int
ja
or
int3
jp
push
or
jmp
ljmp
mov
sub
out
mov
cltd
cmp
add
addr16
jg
call
fwait
int
icebp
cmp
xor
ss
mov
inc
mov
insb
sarl
call
pop
jle
pop
pop
mov
ret
xorl
mov
inc
sbb
negl
mov
cmp
dec
fucomp
fcomps
cltd
xchg
leave
das
mov
mov
push
mov
addr16
mov
lea
cmp
mov
push
lcall
cld
cmp
adc
loope
xor
push
decl
add
iret
pop
or
jne
fsubrl
push
pop
clc
dec
std
jno
inc
dec
stos
scas
in
test
sahf
push
gs
clc
decl
test
shrb
aam
fwait
jno
std
call
lret
in
adc
incl
dec
into
mov
in
inc
pop
push
imul
pop
je
xchg
addr16
pop
sarl
in
push
xchg
fsubrl
repnz
mov
cltd
in
cli
jnp
and
sbb
stos
ds
bound
pop
xchg
xchg
add
mov
int3
mov
fdivrs
add
rolb
out
sub
or
jae
sbb
mov
sti
icebp
insl
cmp
jle
lds
movsl
enter
hlt
xchg
push
mov
jb
test
jb
enter
sahf
ljmp
incl
cmpsb
int
jmp
lea
jl
mov
mov
cmp
mov
jg
ljmp
mov
outsl
repz
add
fnstcw
pop
cli
call
clc
punpckhdq
imul
sti
fcoms
shl
pop
lret
lcall
push
out
pop
sub
fcoml
dec
mov
push
adc
mov
loop
shlb
mov
xor
sbb
mov
mov
mov
xor
call
xor
sub
test
inc
push
lock
jmp
rol
incl
adc
int3
push
pop
lea
cmp
xor
xchg
cmp
dec
cli
jge
rcr
push
jg
outsb
in
das
push
ret
les
fcomps
ljmp
lock
jmp
mov
rorb
cwtl
repnz
adc
fisttpll
mov
pop
ja
addb
lds
pop
cld
push
cli
or
adc
push
push
popf
dec
shrl
and
jg
xchg
jb
loop
stos
aaa
cmp
call
lahf
call
push
and
js
mov
adc
popa
xchg
outsl
lock
cltd
ret
inc
or
andl
scas
gs
mov
pop
cmpsl
mov
jo
mov
adc
decl
cmp
call
push
int3
in
cmp
inc
jp
dec
lock
dec
jle
inc
xor
push
add
hlt
jg
or
int3
cld
je
mov
ljmp
push
pusha
dec
sarl
push
jmp
adc
negl
inc
mov
sub
mov
dec
xlat
js
push
sub
mov
or
push
ja
mov
cld
push
pop
jb
mulb
pop
lea
imul
sub
xchg
into
outsl
loop
pop
ficoml
std
push
pushl
orb
mov
xor
popa
or
incl
dec
push
xchg
mov
sub
mov
ficomps
mov
push
lcall
push
push
dec
push
into
pop
add
fistps
mov
incl
xchg
cmp
fadds
sub
xchg
mov
sahf
out
and
push
dec
sbb
xchg
mov
pop
sbb
mov
das
and
loopne
aaa
das
fcoms
cs
mov
mov
adc
mov
decl
jb
fistpl
fs
popa
mov
push
xor
out
jmp
flds
hlt
inc
pop
mov
pushf
cli
mov
imul
ficompl
sub
clc
inc
loop
fldl
or
jb
jns
add
add
test
jmp
jne
outsl
stos
cmp
rcrl
mov
adc
not
or
push
adc
test
mov
add
mov
sub
inc
add
cmp
adc
pop
jb
into
mov
pop
mov
sbb
outsb
fldl
mov
and
stos
push
out
or
mov
adc
dec
and
decl
mov
sarb
xchg
out
inc
mov
inc
dec
stos
mov
popf
int
ljmp
icebp
lcall
sbb
fldcw
out
lret
xor
or
fnstenv
fcoml
call
fcoml
mov
ret
push
subl
cmp
jg
push
lock
enter
sarl
pushl
mov
aam
cmp
rorb
mov
xchg
push
movsb
pop
out
loopne
pop
jns
adc
popf
ret
fldt
mov
pop
call
fadd
call
outsl
mov
push
incl
cmp
arpl
and
cmc
fadds
and
fwait
mov
enter
xchg
sahf
dec
aaa
xor
or
cld
sub
pop
jecxz
pop
ret
dec
jbe
sub
cs
aam
mov
cld
insb
adc
cmpsl
cwtl
push
cmp
dec
push
ret
push
inc
pop
pusha
in
clc
in
iret
xor
sbb
mov
std
imul
int3
xchg
inc
addr16
call
cmc
fisttpl
fcoml
jo
loop
mov
jns
je
outsl
pop
add
movsb
jl
loopne
push
pusha
mov
mov
aad
loopne
dec
aas
dec
mov
dec
mov
mov
jecxz
mov
push
out
push
or
xorb
aad
xor
mov
push
sbb
out
les
loope
jae
sar
fidivs
push
ficompl
cmpsl
pusha
or
outsl
add
test
push
rorb
dec
push
js
cmc
mov
fwait
push
xor
ret
xchg
jb
lock
std
outsl
fcmove
mov
repz
push
fcom
lea
sub
loop
mov
outsb
icebp
fists
das
jp
add
sbb
stos
movl
inc
dec
mov
stos
mov
dec
ret
cmp
ret
jg
lcall
sub
shlb
sub
push
push
aas
icebp
inc
cmp
jae
shll
jo
add
movsl
inc
fistl
pop
mov
jl
clc
shrl
ljmp
lret
jae
subb
jo
out
rcrb
dec
cmp
adc
aas
jmp
pop
push
push
int
push
adc
leave
shlb
xor
jbe
dec
adcl
mov
add
inc
daa
mov
pop
into
loope
daa
cwtl
loope
jle
cs
pop
in
outsl
insl
fsub
pop
inc
test
call
test
daa
fsubrl
loope
dec
jne
mov
jae
nop
mov
adc
stos
cmp
pushf
cmp
popa
ret
lods
fistpll
lods
imul
mov
call
dec
sub
push
scas
lret
mov
in
pop
mov
mov
xor
inc
div
adc
sbb
mov
xlat
ja
fisubl
popf
adc
cmp
add
insb
sub
jge
and
pop
mov
adc
xchg
mov
xchg
xorl
outsl
jg
mov
pop
mov
jne
ret
dec
lret
xchg
rcll
lret
es
dec
imul
or
add
pop
sbb
ja
hlt
repz
hlt
sbb
movsb
or
ret
stc
xor
mov
dec
pop
mov
adc
ljmp
push
sar
fnstenv
fmull
or
xor
jb
xchg
test
ljmp
ljmp
jmp
fcmovb
sub
pop
sbb
cmp
ja
idiv
in
pushl
push
xchg
add
stos
subl
ret
gs
movsb
cli
movsb
scas
sub
xchg
cli
dec
add
add
xor
test
pop
rep
fidivl
sub
sahf
mov
movsl
call
pushl
aad
stos
pushf
leave
lret
add
stos
lahf
nop
pop
scas
call
incl
adc
es
fsubrs
jae
pop
mov
push
shr
xchg
xchg
xchg
jne
push
push
jno
aas
dec
and
mov
jo
push
cli
or
push
aaa
mov
ljmp
add
outsb
mov
inc
cld
mov
ljmp
adc
ss
subl
sbb
push
cli
sub
pop
add
mov
pushl
stos
ljmp
xchg
adc
pop
outsl
aad
popa
aad
pop
add
add
add
mov
jge
clc
icebp
ja
mov
add
xlat
js
imul
or
ret
decl
xorl
mov
inc
mov
sti
bound
push
shll
stc
sub
movsb
pop
call
mov
into
aaa
inc
cld
lods
mov
pop
sti
push
ds
int3
inc
icebp
and
sti
in
rclb
pusha
push
push
scas
mov
mov
jno
sti
mov
repnz
call
cmpsb
mov
lea
push
js
xor
call
enter
sbb
dec
mov
or
lret
addb
call
adc
push
push
sub
cmp
stos
int3
push
sar
incl
imul
inc
ljmp
fnstenv
ljmp
xchg
stos
fldcw
xor
outsb
sub
paddq
movsb
mov
popf
addl
lock
lods
ljmp
incl
pushf
ror
les
data16
dec
bound
ljmp
call
push
icebp
mov
rolb
dec
sahf
pusha
and
repz
inc
mov
call
cmp
nop
mov
sub
ret
sbb
mov
mov
lcall
ljmp
insb
lret
or
xchg
push
push
aad
jno
out
movsb
in
imul
outsl
push
aad
xchg
dec
out
or
push
ss
sbb
test
jmp
cmp
xchg
add
jl
xchg
or
fdivs
vpsravq
pushl
std
xor
jnp
fsubrs
je
jne
or
call
mov
cmc
lcall
je
and
jp
ret
lcall
pop
pop
jmp
decl
ror
adc
sub
pop
pop
push
ret
lea
pushl
or
fisttpll
xchg
mov
scas
push
xchg
mov
add
sub
icebp
cmp
add
das
mov
xchg
cli
and
or
cmp
repnz
out
push
and
and
push
pusha
xchg
pop
loopne
les
pop
call
lea
mov
lock
std
std
pushf
xchg
outsb
clc
mov
mov
dec
cmp
ljmp
cld
enter
in
add
pop
aam
xor
pop
scas
fdivrl
js
in
sbb
movsb
in
aam
pop
enter
mov
mov
inc
mov
add
shll
cmc
pushl
pop
in
mov
cmp
jmp
sbb
inc
insl
mov
xchg
out
stc
jmp
dec
xchg
leave
dec
sub
or
pop
fisubrl
xchg
jmp
jge
jno
in
call
loop
int3
in
and
cld
call
test
hlt
cmp
lock
lods
add
data16
mov
fcomps
iret
cmp
xlat
inc
fisttpl
jmp
mov
ret
jne
mov
jge
popa
inc
pop
pop
and
stc
push
xor
iret
fcompl
and
pop
push
loop
sub
pushl
test
adc
add
mov
out
jae
mov
mov
incb
push
rcrb
inc
dec
pusha
push
mov
ret
sti
call
out
lret
iret
int
fs
ja
pop
mov
pusha
cmp
dec
lods
jge
test
inc
movsl
and
aam
push
pop
mov
cmpsb
movl
push
repnz
mov
cmc
xchg
in
cwtl
int
or
adc
dec
xchg
lcall
test
xchg
gs
sarb
push
insl
das
addr16
xchg
out
pop
pop
rcr
pop
mov
jge
sub
dec
inc
out
and
aam
pop
ret
cld
ljmp
out
es
test
loopne
popf
shl
mov
inc
movb
es
fs
and
pop
ljmp
inc
mov
push
mov
dec
xor
mov
enter
and
pop
jns
and
xor
sbb
stc
in
mov
dec
dec
jmp
pop
call
xchg
negb
lcall
out
incl
ficomps
cmpsb
pop
mov
push
ret
rcrb
shrb
mov
mov
call
pop
push
mov
dec
mov
inc
xor
std
daa
imul
xchg
daa
pop
inc
aaa
loopne
outsl
sub
in
or
out
fildl
insl
in
shrb
adc
test
int
xchg
jno
icebp
repnz
incl
mov
adc
ss
ret
out
inc
movsl
pop
mov
test
mov
xor
cld
push
roll
cmc
mov
ret
mov
scas
adc
int
in
sub
xchg
push
notl
in
xlat
inc
aaa
pushl
jg
adc
push
aam
pop
out
aad
imul
call
test
fimuls
dec
frstpm(287
inc
js
scas
jecxz
movsb
aad
sbb
test
push
jg
ljmp
dec
lcall
push
int
jne
clc
je
and
ud0
loopne
decl
pop
mov
pop
les
cmp
jno
ret
insl
push
mov
dec
push
jbe
pushf
loopne
dec
std
jmp
mov
fwait
leave
addr16
rclb
mov
mov
shll
pop
test
pop
fstpl
and
shll
lret
add
or
and
mov
cmc
decl
or
pop
jb
cli
mov
jmp
sub
lret
xor
jnp
pop
outsl
int
decl
mov
cmpsl
lcall
movsb
mov
ror
pop
in
pop
inc
daa
lcall
popf
mov
bound
ss
jbe
fsubl
gs
pop
jp
out
jg
subl
sbb
sahf
push
dec
dec
pop
jnp
dec
mov
pop
cld
lret
das
pop
adc
cmp
jl
lock
call
decb
mov
dec
jno
sti
in
in
aam
cmp
in
pop
mov
out
jb
pop
test
xor
movb
push
and
xchg
fistpl
inc
jno,pn
fsubrs
mov
out
bound
decl
mov
ret
jno
es
ret
mov
push
pop
data16
lret
jg
lock
pop
mov
arpl
aam
push
lret
pop
lcall
cs
add
fbstp
and
pop
movsl
push
inc
inc
lock
cmp
pop
jl,pt
lock
roll
inc
ja
test
or
dec
int
popa
mov
iret
mov
out
sub
adc
ret
outsb
mov
loope
aas
mov
mov
dec
cli
jbe
add
pop
fidivrl
movsb
lods
out
inc
stos
mov
lods
fchs
icebp
scas
push
cmpl
mov
mov
push
imull
jle
stc
sub
mov
fldcw
mov
idivb
jb
pop
push
push
faddl
jae
push
mov
out
arpl
adc
outsb
std
outsl
pop
ljmp
loope
cmp
frstor
cmpb
gs
insb
int
aas
jle
jb
push
shlb
imul
arpl
int3
add
in
call
pop
xor
scas
outsb
lds
xchg
aam
pop
cs
data16
clc
sahf
fimuls
inc
ds
iret
pop
ja
cmp
jl
jmp
jmp
adc
shrl
cmp
and
mov
mov
xchg
pusha
fs
insb
pop
fidivrl
movsb
test
ret
out
mov
ja
mov
jmp
ss
es
out
pop
jo
jnp
push
push
jb
cmp
cmp
cli
addl
cs
pop
rorl
cmpsl
xchg
popa
lods
xchg
ljmp
add
xlat
mov
inc
push
inc
lret
popf
and
icebp
out
outsb
lock
cmpsl
mov
pop
in
fnsave
inc
inc
ljmp
mov
pop
pop
into
imul
push
test
pop
xchg
mov
das
jl
stc
mov
jo
inc
jle
sti
lods
hlt
push
iret
xchg
incb
mov
rorl
daa
xchg
imul
rcrb
loopne
in
push
ja
push
or
outsb
jae
jmp
pop
sbb
mov
push
lcall
fcomip
out
cli
dec
stos
dec
iret
xchg
cmpsl
adc
roll
sbb
mov
jo
jb
jle
imul
or
sub
out
fnsave
shll
add
jg
inc
push
jg
mov
or
repnz
push
push
aaa
lds
xor
jns
sub
clc
sbb
or
push
popa
loope
push
arpl
icebp
pop
imul
loope
out
mov
pop
call
popf
stos
or
add
fimuls
lahf
in
push
inc
inc
enter
sbb
lea
repnz
ljmp
sar
or
rclb
push
aas
in
icebp
or
fcoms
mov
test
cmp
iret
jb
push
mov
xchg
std
jb
mov
bound
ljmp
in
pushl
lea
setne
lcall
xor
xchg
xchg
fsub
mov
cs
test
push
jmp
push
ret
pop
jno
lods
scas
ss
out
cwtl
adc
in
mov
xor
frstor
imul
push
dec
int3
jbe
xchg
add
pusha
add
cmp
outsl
pop
jmp
out
iret
pop
in
mov
out
aaa
lea
pushl
push
push
pusha
push
out
outsb
outsb
and
mov
loopne
shrb
sarb
add
cmp
xor
call
cmp
and
inc
ds
js,pt
add
dec
movsl
mov
dec
out
mov
xchg
aaa
cwtl
fwait
aaa
test
mov
mov
aaa
or
push
cmp
cmp
cmp
cmp
dec
cmp
pop
cmp
outsb
cmp
cmp
jg
pushf
sarl
int
jmp
cmp
pop
cmp
pop
cmp
cmp
push
mov
cmp
cmp
cmp
cmp
xchg
lea
xor
decl
xchg
cmp
cmp
cmp
cmp
aaa
cmp
mov
cmp
ljmp
out
cmp
sbb
es
inc
adc
ds
ds
ds
mov
mov
add
mov
nop
stos
sub
xor
mov
test
out
cli
xor
xor
xor
xor
fwait
gs
jg
xor
mov
lea
mov
in
xor
lcall
push
xor
xor
xor
xor
xor
jle
scas
xor
fists
fnsave
bnd
shlb
icebp
xor
pushl
pop
xor
das
xor
xchg
xor
outsl
xor
xor
xor
xor
xor
xor
xor
xor
mov
xlat
pop
ss
ss
call
add
sbb
cmp
cmp
cmp
imul
shlb
cmp
cmp
cmp
push
cmp
cmpb
cmp
cmp
dec
cmp
cmp
repz
cmp
mov
movsb
cmp
cmp
stc
cmp
sub
xor
popa
ds
std
ljmp
mov
nop
ds
ds
sar
aas
sub
inc
aas
push
adc
aas
jge
test
nop
aas
xchg
aas
sahf
aas
movsl
aas
lods
aas
fdivl
div
xor
xor
jo
xchg
sahf
xor
xor
insb
xor
mov
xchg
xor
xor
xor
xlat
dec
aad
outsl
xor
lcall
xor
pop
clc
dec
xor
xor
xor
xor
pop
xor
mov
adc
sbb
aaa
xchg
mov
mov
cmc
xchg
cmp
jmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
decl
leave
out
or
sbb
das
bound
xchg
ds
fistpll
out
pushl
lret
idivl
stc
ds
stos
ror
xor
xor
xor
lock
pushl
sub
xor
dec
xor
xchg
xor
jg
mov
jle
xorl
xor
xor
or
pop
loop
xlat
xor
ss
xchg
ss
out
imulb
hlt
mov
mov
in
divl
adc
clc
sbb
jecxz
ret
cmp
inc
decl
in
cmp
cmp
cmp
and
das
cmp
push
pop
ja
fnstsw
mov
bound
cmp
cmp
cmp
cmp
cmp
adc
sbb
pop
sub
cmp
pop
jo,pt
jns
mov
cwtl
mov
ds
mov
dec
das
aas
jae
mov
add
pushl
hlt
xor
xor
xor
xor
xor
xor
xor
pop
xor
jge
in
xor
xor
outsl
push
cmc
xor
xor
or
xor
dec
xor
aad
rorb
xor
xor
ljmp
dec
xor
pushf
xor
xor
xor
xor
lcall
pop
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
mov
pop
xor
mov
test
enter
pushl
int
shll
jmp
aaa
ds
pusha
aaa
jle
sahf
aaa
cmpsl
test
fbstp
cmp
cmp
cmp
cmp
cmp
hlt
ljmp
or
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
lock
aam
cmp
cmp
cmp
cmp
cmp
cmp
cmp
pop
mov
mov
decl
int
xlat
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sbb
hlt
cmp
add
dec
cmp
cmp
jb
js
outsl
cltd
incl
cmp
mov
fildll
ds
cmp
xor
je
jge
mov
ds
out
clc
sbb
fistl
pop
aas
arpl
imul
aas
stos
aas
jae
cli
mov
aas
iret
aas
loop
call
xor
inc
and
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
repz
xor
and
xchg
xor
pop
xor
ja
test
xor
ret
xor
xor
xor
and
insl
pusha
xor
xor
xor
xor
or
mov
pop
xor
icebp
aaa
and
aaa
ret
incl
pop
aaa
jns
xorb
aaa
sbb
imul
dec
cmp
cmp
decb
sbb
inc
cmp
call
jno
cmpl
add
cmp
push
cmp
insl
cmp
jo
inc
xlat
cmp
adc
xchg
adc
lcall
outsb
pop
mov
push
cmp
mov
fwait
cmp
mov
cmp
aam
add
inc
adc
sbb
daa
lods
sbb
aaa
sbb
push
ds
cmp
mov
pop
aas
ja
xchg
aas
scas
aas
aas
out
mov
das
xor
sub
xor
xor
decl
xor
xor
jo
mov
xchg
aaa
clc
jg
xor
xor
add
data16
or
sub
inc
xor
xchg
xchg
xor
xor
out
cmp
cmp
cmp
jge
jge
cmp
inc
daa
sub
xor
xor
add
xor
repz
cmp
cmp
cmp
add
push
imul
popa
xchg
add
add
adc
and
mov
jns
mov
add
sti
out
movsbl
pop
popf
rcrl
stc
out
out
paddd
popf
fstps
cltd
cmp
add
push
cltd
ds
wbinvd
add
aas
out
adc
cld
cmp
and
aad
add
jns
mov
andb
insl
mov
jo
daa
pop
and
in
or
add
push
xchg
in
addb
cs
add
nop
xorb
imul
add
and
or
pusha
push
xor
pop
jnp
or
jb
jb
inc
add
add
arpl
daa
inc
in
in
or
insb
lahf
pusha
and
lea
adc
stos
mov
rcrb
add
stc
mov
or
push
push
mov
inc
mov
push
sbb
mov
push
jl
adc
and
shll
faddl
mov
push
push
push
pop
inc
fidivl
fnsave
cli
xchg
mov
pop
push
push
pop
mov
aas
sub
push
rep
or
inc
mov
mov
adc
push
fsubl
and
mov
popa
data16
mov
lds
sbb
test
push
sub
cmp
add
add
mov
xchg
or
test
adc
aam
cmp
sub
fcoms
or
mov
test
enter
push
sub
lea
sbbb
lods
jnp
fldcw
pop
lods
int3
xor
ret
int3
push
lods
lock
add
outsb
sbb
shr
cmp
sti
insb
out
negb
push
jne
sbb
ss
fldenv
or
aaa
pmuludq
mov
xor
add
xchg
and
lds
xchg
xor
div
add
xchg
adc
and
leave
inc
or
inc
adc
jle
sbb
mov
or
and
xchg
sbb
mov
jbe
pop
imull
mov
lret
pop
fs
dec
mov
dec
shlb
les
data16
repnz
and
imul
cmc
insl
add
divl
push
test
xor
fs
and
dec
insl
insl
je
adc
insb
lret
mov
push
and
and
xor
repnz
and
mov
loopne
or
inc
loopne
gs
xchg
movsl
mov
scas
fs
xchg
je
dec
inc
dec
add
popa
insl
xor
mov
and
shl
movsb
or
addb
test
pop
pop
inc
xor
es
inc
je
jle
lea
dec
sub
jecxz
out
add
aaa
dec
sub
ret
call
je
dec
ret
sub
or
jg
insb
out
adc
mov
pop
push
sub
test
out
sbb
in
inc
jmp
mov
repnz
jns
cmp
stc
lea
in
xor
dec
sbb
jne
cmovo
or
decb
mov
scas
xor
mov
mov
adc
xor
hlt
clc
xchg
adc
testl
testb
int3
push
or
push
jmp
ljmp
xor
in
clts
push
pop
and
outsl
push
sbb
nop
inc
add
xchg
fs
repnz
clc
pop
lock
rcrl
xor
out
adc
sub
adc
cmp
mov
xor
sub
push
inc
push
sbb
aas
fisttpll
mov
mov
add
push
clc
cwtl
loope
nop
std
xchg
ret
xor
xchg
mov
fstps
xor
or
dec
ss
adc
fldl
movsb
lods
std
push
repz
setge
dec
push
dec
enter
or
push
cmp
or
cmp
jl
data16
cmp
push
adc
inc
xor
add
cmp
repz
lods
add
or
in
mov
mov
push
sub
mov
gs
push
and
pop
dec
xchg
outsl
outsb
gs
in
pop
xchg
cs
aam
and
insb
xlat
popa
in
xchg
gs
xchg
jne
arpl
orl
loope
and
push
bound
rcr
mov
fs
sti
xor
call
mov
jle
call
xchg
adc
hlt
pop
movups
fcom
test
cmp
inc
lock
enter
test
xchg
movsl
fsts
outsb
int3
lcall
into
xor
xor
movsl
pop
shrb
shll
roll
cmp
and
dec
rcr
cmp
outsb
lret
enter
movb
std
movsl
imul
enter
test
into
into
lcall
or
imul
inc
std
js
js
popf
push
push
ja
dec
aad
adc
or
out
pusha
lods
leave
mov
sti
cmp
outsb
sub
push
push
inc
mov
xchg
insl
sub
je
subl
push
push
sub
ret
push
jge
inc
rcll
push
out
nop
cmp
je
push
mov
xchg
pop
jge
cmc
or
and
adc
mov
imul
or
outsb
orl
cmpsb
enter
in
outsl
push
add
fs
je,pt
test
movsl
popa
mov
mov
mov
and
mov
data16
pop
scas
sbb
adc
ret
pop
adc
addr16
dec
je
mov
aaa
jb
enter
std
mov
xlat
inc
xchg
mov
adc
mov
pushf
test
mov
mov
cmp
call
push
xchg
call
daa
push
fiaddl
add
imul
add
inc
int3
fs
into
popa
mov
iret
shrb
outsb
rcl
xor
rcl
gs
jae
cs
adc
outsb
sub
mov
insb
popa
jne
arpl
jb
aaa
leave
gs
leave
inc
inc
adc
outsl
es
inc
add
shll
gs
lret
mov
imul
xor
outsl
jb
cs
add
pop
gs
js
mov
popa
mov
mov
mov
call
push
add
pop
mov
insb
xchg
jbe
mov
adc
mov
in
or
fxtract
add
jno
xchg
inc
push
leave
ja
adc
test
inc
addr16
ss
cmp
addr16
sti
jl
mov
testl
je
jae
repnz
push
push
mov
push
call
out
mov
xchg
adcl
mov
jne
push
cltd
push
or
cwtl
push
fisttpl
ret
es
xchg
pop
call
add
mov
or
aam
add
fdivr
push
jnp
mov
mov
sbb
insb
xchg
or
pop
imul
add
es
dec
inc
and
mov
nop
data16
add
aaa
add
push
bound
fs
ret
js
pop
xor
pushf
test
test
dec
mov
call
sbb
or
push
std
push
les
cpuid
pop
lahf
xlat
pop
xor
pop
out
lock
add
jae
loope
sti
outsl
or
mov
or
jo
add
nop
sbb
pop
pop
add
or
jnp
sbb
push
mov
pusha
inc
inc
jb
push
test
inc
push
push
dec
inc
daa
xor
into
add
les
addb
mov
addl
test
inc
jnp,pn
dec
jne
popa
push
push
add
push
inc
and
jo
and
sbb
in
inc
cmpsb
add
fcoml
repnz
mov
lret
xor
push
cmp
idiv
mov
shr
mov
cmp
je
sbb
ficoms
nop
mov
cmp
xlat
mov
sub
jne
inc
cmp
jne
cmp
je
mov
inc
jmp
jne
test
fbld
pop
push
mov
std
add
inc
cmp
jl
sahf
outsl
or
add
cmp
push
fcmovnu
jge
and
cmp
je
rcrl
insb
jbe
pop
mov
andb
xor
cmpb
jmp
add
inc
jl
int3
add
jle
mov
push
lea
adc
jmp
add
jae
sub
mov
or
loope
inc
mov
jnp
ret
int3
cmp
inc
popa
pop
orl
inc
cmpsl
add
lcall
jns
pop
inc
pop
sbb
add
dec
imul
sub
cmpsb
mov
out
inc
imul
dec
ret
inc
dec
inc
cmp
lods
imul
lcall
dec
add
add
out
testb
adc
adc
add
sbb
sbb
fs
out
push
mov
add
test
push
pop
mov
or
outsl
inc
les
pop
and
outsl
jne
jae
push
push
lods
xor
mov
shlb
iret
sub
push
vmread
jg
outsb
iret
stos
mov
xor
or
js
dec
inc
push
dec
inc
push
sub
push
push
mov
adc
pop
sbbb
sub
int
fwait
in
inc
nop
clc
inc
in
add
dec
ss
sbb
int
fs
test
add
cmp
into
addb
or
sub
jnp
add
cmpsb
repz
cmpl
pop
mov
or
mov
out
jge
sub
xor
mov
or
popf
or
inc
cltd
addb
pop
push
add
jae
mov
jno
sti
sbb
inc
or
in
pop
jmp
outsb
outsw
es
loop
fstp
mov
int3
sub
adc
inc
jae
xchg
jge
loopne
mov
outsl
test
pushl
add
jb
addr16
mov
and
test
outsl
js
xchg
or
jge
cs
dec
mov
add
or
dec
and
xchg
inc
inc
adc
push
nop
add
inc
and
andb
lds
push
add
mov
jmp
cltd
insl
insl
dec
jae
mov
aad
add
sbb
add
cwtl
or
in
xchg
jmp
dec
pop
js
sbb
bnd
mov
jne
and
sbb
cmp
add
adc
pop
mov
cwtl
pop
stos
ss
mov
inc
int3
dec
pop
or
cmpsb
imul
mov
pushf
lcall
rorl
mov
dec
or
add
push
cli
add
jecxz
pop
pushl
arpl
adc
ja
add
mov
clc
je
push
rclb
test
outsb
pop
ret
rcl
or
sbb
sbb
adc
push
inc
lods
mov
jbe
leave
xor
adc
jecxz
cmpsl
fs
jno
fldcw
jnp
sbb
adc
imul
fisubl
push
dec
enter
or
in
mov
jne
xor
outsl
jns
jae
cwtl
sub
outsl
pop
out
xor
testl
flds
js
pop
lds
pop
out
xchg
stc
insl
mov
imul
stos
sub
data16
add
mov
fs
pop
xchg
add
add
clc
pusha
insl
and
lds
mov
push
add
push
or
dec
stc
out
scas
mov
dec
add
add
and
mov
imul
aaa
and
add
pop
or
mov
push
pop
add
jb
into
shrb
addr16
pop
push
gs
lret
outsl
and
mov
mov
jecxz
inc
and
add
jne
xor
jae
and
in
jne
add
movsl
popa
and
add
mov
gs
jne
jmp
imul
xchg
pop
outsb
jae
jo
xlat
add
adc
push
in
add
push
jb
cmp
lret
mov
xor
mov
xchg
insb
lods
jmp
xchg
popf
xchg
pop
dec
or
pop
out
jae
lds
popf
addr16
mov
fstpl
rclb
xchg
pop
xor
fsubl
outsb
xor
inc
push
sub
pop
fs
or
daa
fs
es
dec
imul
push
daa
jbe
or
imul
mov
fs
fwait
adc
mov
je
and
cmp
sub
test
mov
xorb
arpl
outsb
push
insb
cmpsl
xchg
and
add
jg
data16
adc
pushf
or
xor
incl
adc
xor
test
jne
xchg
xor
xor
call
xor
ljmp
add
xor
xor
xor
xor
xor
xor
xor
adc
xchg
ss
pushl
dec
aaa
pop
aaa
je
mov
aaa
aam
aas
cmp
cmp
cmp
cmp
cmp
cld
lcall
cmc
test
mov
mov
cmp
pop
loop
mov
ds
movsl
ds
ds
xor
aas
arpl
cld
or
aas
aas
aam
fwait
dec
mov
icebp
pushl
pop
xor
xor
and
sub
bound
and
mov
jg
ljmp
test
jb
add
hlt
jl
xchg
ja
out
popa
pop
inc
out
flds
insl
idivl
xorb
lea
add
popl
add
into
or
or
add
push
lds
enter
inc
xchg
ljmp
add
xchg
iret
addl
and
dec
cmpb
and
or
hlt
push
out
adc
cmp
inc
mov
mov
push
mov
jg
pop
add
and
bound
xor
jb
movhps
add
push
shll
or
scas
mov
out
lods
popa
xchg
cs
sub
dec
xor
xlat
mov
add
fcoms
lcall
data16
xor
sbb
pop
add
inc
push
xor
sbb
lcall
inc
or
adc
shl
test
dec
lcall
clc
or
pop
out
and
in
push
xor
adc
push
pop
mov
ljmp
imul
and
jp
push
mov
out
in
sbb
movsb
sti
stc
inc
in
mov
daa
and
push
add
adc
pop
adc
and
jns
xchg
jmp
enter
and
xchg
cmp
mov
add
mov
and
and
and
in
pushf
push
and
inc
dec
sbb
dec
sbb
nop
pop
add
pop
and
cmp
or
inc
or
ljmp
inc
dec
and
out
mov
push
sti
out
sbb
fsubr
push
int
push
sar
and
pop
xor
jb
cmp
xchg
insl
sub
pop
in
add
call
clc
mov
lret
sbb
rcrb
bnd
pop
pop
cmpl
adc
movsb
jne
add
add
xchg
and
leave
push
pop
add
in
mov
std
mov
mov
mov
incl
incb
fs
test
push
in
and
nop
pushf
fs
or
mov
add
adc
call
es
aas
pop
cmp
mov
loopne
cmp
int
jno
orl
sbb
jge
int3
xor
push
call
sarb
or
dec
xchg
loope
in
outsb
cmp
pusha
adc
mov
cmp
pop
popa
push
push
fidivrl
adc
clc
daa
push
adcl
xor
push
inc
cmp
in
adc
jnp
xor
inc
add
es
and
cmp
or
or
clc
into
fidivs
lea
rcll
xor
loopne
adcb
int
lods
push
scas
push
fistl
mov
adc
sbb
std
xchg
inc
add
lea
jecxz
cld
mov
mov
lret
es
pushl
sub
popf
hlt
inc
add
imul
dec
inc
orb
popa
add
pop
adc
mov
in
mov
loope
pop
and
mov
enter
dec
mov
aaa
jle
movsl
sarb
mov
jle
lea
jge
subl
idivb
add
cmp
jne
mov
inc
nop
add
sbb
fidivrl
lods
jecxz
xor
sbb
xchg
xor
je
out
imul
sub
lcall
mov
imull
mov
inc
push
mov
inc
and
xor
nop
sub
push
or
mov
cltd
adc
add
call
and
shlb
xor
push
adc
push
pop
jecxz
pushw
dec
cmpl
lcall
or
int
push
das
mov
or
in
out
mov
cmp
or
xchg
fwait
lea
mov
jnp
add
push
cmpsl
in
out
lea
pop
mov
rep
mov
outsl
imulb
xchg
mov
add
push
and
xchg
cmp
je
inc
add
cmp
jl
push
test
in
jmp
push
js
rclb
lret
in
bound
shlb
jge
out
dec
adc
or
ja
daa
mov
jl
out
je
sbb
sbb
and
inc
and
cmp
and
aaa
jl
mov
xchg
mov
orl
pop
fdivrl
jne
lea
fbstp
jo
xchg
cmp
pop
mov
push
cmp
out
push
xor
mov
loop
sbb
sbb
call
dec
inc
lcall
and
aad
cmpl
add
sub
xor
and
jo
sbb
aad
sub
push
aas
inc
cmc
mov
push
push
call
in
aas
add
in
clc
ss
xor
and
add
sbb
cmp
sbb
or
aad
lret
inc
lahf
add
mov
enter
int3
int
mov
jnp
push
xchg
loopne
and
fstps
adc
stos
adc
in
fs
fs
loop
sbb
fs
aam
sbb
sbb
xlat
fcomp
sbb
sbb
fcmovu
sbb
sbb
loopne
cmp
sbb
fsub
fsubs
decl
int3
xor
ror
data16
adc
sub
sub
or
dec
andl
aam
sahf
xchg
inc
and
loopne
rolb
idiv
call
inc
xor
in
and
addr16
dec
pop
push
push
lods
inc
popa
in
push
cld
push
les
sbb
sbb
out
add
mov
mov
jmp
enter
adc
push
pusha
das
fs
in
sub
add
cwtl
inc
push
and
outsb
dec
or
adc
les
lcall
add
xor
xor
dec
xor
mov
dec
mov
mov
adc
inc
pusha
aaa
jmp
rcl
xchg
setg
lds
sub
decl
mov
push
push
pop
mov
js
testb
lahf
outsl
outsb
xchg
sub
sub
jae
jle
cltd
xor
jb
mov
push
push
lret
and
push
dec
mov
rorb
jg
or
cmp
xchg
cmp
in
and
nop
mov
mov
inc
xlat
jo
cmp
jbe
jb
jb
stc
pop
flds
das
fisubrl
inc
jnp
sbb
jns
je
outsl
insb
jae
inc
mov
addr16
into
and
stos
add
xor
stos
add
sbb
lods
subb
jl
xor
add
sbb
das
fdivl
add
enter
jmp
rolb
fdivs
out
add
dec
mov
lret
xorb
inc
sub
xchg
lret
dec
xor
xorb
xor
and
call
xor
cmp
xor
xor
add
xor
xor
in
mov
pop
clc
decl
aaa
mov
xchg
aaa
stos
aaa
cmp
dec
in
cmp
push
cld
cmp
cmp
cmp
jle
or
jl
mov
xchg
add
cmp
cmp
cmp
cmp
cmp
cmp
in
or
bound
dec
cmp
pusha
adc
mov
inc
inc
imul
add
ret
add
sbb
push
add
push
add
test
mov
pop
sbb
or
push
jo
aaa
or
jne
arpl
sti
sub
xor
aaa
in
sub
mov
xor
add
adc
es
sbb
mov
jb
adc
xor
adc
push
xor
decb
push
add
lcall
pusha
add
jo
add
add
fwait
lock
insb
dec
adc
je
jb
inc
push
hlt
subl
sahf
pop
sidtl
int
add
and
push
push
mov
push
leave
and
or
xor
xor
cmpsb
add
adc
add
jl
popf
dec
dec
pop
push
or
lock
sbb
add
push
sbb
rclb
add
fmull
push
test
rorb
inc
add
and
add
add
add
add
add
add
add
call
int
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
