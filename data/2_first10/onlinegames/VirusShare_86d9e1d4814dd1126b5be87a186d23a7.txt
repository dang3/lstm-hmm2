sbb
add
xchg
loop
and
cwtl
cwtl
inc
add
mov
mov
movsw
std
cli
push
ljmp
add
mov
das
jp
and
sub
mov
dec
add
mov
mov
pop
aad
sub
loope
push
arpl
mov
mov
or
inc
loope
xchg
int3
es
fadds
add
mov
lret
stos
cld
lods
icebp
in
adc
in
stc
sbb
scas
jnp
mov
rolb
call
and
daa
pop
and
das
xchg
add
leave
pop
stos
cmp
fcomip
push
sub
xchg
push
mov
pushf
imul
repnz
stos
add
mov
aaa
imul
popa
rol
mov
xor
inc
and
ljmp
test
or
xchg
and
jg
lods
jb
mov
add
jbe
movsl
sbb
mov
mov
mov
cmp
pop
dec
loopne
pusha
add
xchg
push
pop
jb
leave
scas
push
adc
call
sub
and
or
push
das
ljmp
cmc
pop
add
mov
std
stos
xchg
shr
mov
ja
cmp
pop
pop
mov
xor
add
jno
add
cmpsl
out
std
bnd
sbb
fcmovnb
inc
outsl
sub
cmp
lcall
insl
or
inc
push
adcb
xor
and
mov
mov
push
cwtl
sub
test
int
daa
sbb
xchg
sarl
fwait
push
push
mov
cmp
add
sub
jb
mov
cmpsb
shrl
nop
popf
into
mov
push
cmpsl
dec
and
inc
push
adc
adc
cmp
jns
mov
push
stc
xchg
cwtl
ficompl
jecxz
out
icebp
or
add
xchg
testb
xchg
imul
popa
clc
xlat
adc
cltd
xchg
add
scas
jle
lahf
decl
mov
jle
xchg
mov
imul
xor
mov
jne
adc
imul
sub
mov
shrb
int
cmpsl
mov
test
into
adc
cmp
pop
inc
movsb
mov
inc
ds
adc
sarl
rorl
fidivl
test
into
inc
adc
insb
hlt
dec
xchg
fs
andb
jnp
mov
mov
inc
jge
mov
cmpsl
xlat
stc
mov
mov
sub
add
fiadds
pop
ja
stos
adc
mov
movsb
cltd
cmc
jecxz
lahf
in
out
scas
subb
sub
test
outsl
xchg
cmpsl
aas
lcall
popf
mov
pop
sub
dec
mov
pusha
popf
arpl
xor
and
imul
aaa
aam
mov
xchg
dec
movsl
xchg
nop
jmp
mov
out
out
mov
mov
outsb
ret
push
sti
jbe
or
pop
push
inc
fildl
xor
jg
mov
fildll
movsb
loopne
sbb
inc
ja
mov
or
mov
adc
movsl
or
xor
push
mov
mov
bound
adc
pop
pop
fimuls
jge
sbb
mov
popf
pop
fsubs
lds
xchg
xchg
add
push
jmp
shll
in
inc
push
pusha
or
cld
aaa
mov
xchg
inc
jge
mov
dec
mov
cmp
push
or
loope
shrl
ss
jp
movsl
mov
mov
fisubrs
sbb
push
in
js
lret
sahf
jb
arpl
mov
jns
movsl
mul
sub
pop
outsl
and
orb
push
outsl
xor
fsts
xor
out
outsb
cmp
push
pop
test
or
xor
fsub
shlb
mov
lahf
shrl
mov
incl
push
xchg
inc
push
or
xchg
push
repnz
outsl
add
sbb
adc
clc
lcall
sub
inc
xor
hlt
add
and
outsl
scas
sbb
repz
out
mov
mov
and
inc
adc
sub
adc
lods
cmp
xchg
mov
rorl
push
pop
das
iret
push
daa
adc
add
mov
clc
popa
imul
out
inc
ret
fisttpll
pop
sub
cltd
pop
repnz
add
cmp
mov
mov
and
mov
sbb
test
shrl
out
cmp
add
mov
imul
pop
cmpsl
add
add
mov
jno
lods
jo
out
test
and
clc
cmp
loope
scas
jns
leave
push
stos
inc
scas
and
or
mov
mov
or
jne
pusha
arpl
mov
stos
fistl
pop
xor
cmpsl
test
mov
fsubrl
xchg
pop
bound
mov
mov
jno
rcll
fldcw
aas
sbb
add
mov
idivb
rorl
les
cmp
das
adc
pushf
fnstcw
push
sbb
pop
jp
fwait
jp
in
je
cmp
push
movsb
xchg
aam
cli
sub
add
jge
xchg
lahf
call
into
xchg
cmp
es
popf
addr16
add
hlt
sbb
sbb
dec
adc
enter
jl
sub
xor
icebp
mov
dec
enter
adc
push
aaa
mov
xor
mov
ljmp
jbe
sahf
mov
xchg
adc
into
push
data16
das
sar
push
adc
lods
es
ret
mov
inc
fldl
lods
jb
je
cmp
sti
mov
lock
add
and
jecxz
sarb
adc
push
das
mov
or
scas
mov
pop
fdivr
pop
cmpsl
adc
adc
mov
pop
pop
scas
adc
bound
inc
mov
cmp
push
cmp
jns
scas
sbb
jno
in
lea
ret
mov
insb
mov
ret
xchg
jbe
lcall
insb
xor
clc
pop
hlt
pushf
movsl
cmp
mov
adc
cmpsb
push
inc
pop
scas
add
mov
stc
or
push
insl
xchg
push
jle
mov
inc
repnz
or
xlat
fiaddl
mov
insl
jge
xor
fldcw
inc
incl
imul
sub
cmp
sbb
push
aad
iret
add
out
push
sbb
xor
loopne
xor
mov
fidivrs
lods
dec
or
mov
sbb
xor
mov
shlb
mov
mov
ss
dec
mov
add
mov
sti
jbe
fistpll
aas
pushf
add
mov
sbbl
jb
aam
sahf
imul
push
pop
bound
mov
mov
adc
sub
aam
mov
mov
ret
mov
cmp
cld
mov
or
aaa
dec
xor
and
dec
ljmp
mov
mov
in
lahf
mov
lahf
sbb
jae
dec
lds
dec
mov
lahf
lcall
popf
es
push
push
fwait
in
sub
pop
in
push
pop
dec
jno
xchg
fstpt
cmp
inc
popa
xchg
pop
dec
xchg
push
fldlg2
push
mov
fisubrs
jmp
iret
dec
pop
xor
mov
nop
nop
rolb
or
adc
movsb
pusha
dec
dec
push
and
push
push
push
or
into
jo
fdivrp
popf
inc
jae
mov
dec
sbb
jne
push
jo
cld
test
jge
sub
mov
pop
mov
lods
stc
femms
pusha
push
lcall
out
aaa
push
imul
loope
jns
mov
jle
sub
add
sbb
int3
push
push
mov
push
add
pop
mov
adc
dec
dec
stc
jg
adc
enter
rcll
clc
stos
pop
call
xlat
mov
lods
fwait
mov
ret
sbb
cld
cli
xlat
mov
stos
cmc
iret
adc
je
arpl
push
lock
stos
sub
mov
arpl
cmp
jl
dec
sbb
pusha
push
mov
push
jno
mov
or
xor
xchg
pop
stos
push
adc
pop
les
test
ljmp
add
mov
jp
std
jno
loopne
int
lock
jno
mov
push
cmp
cmpsl
cli
add
imul
sar
icebp
add
push
mov
and
mov
mov
mov
add
pop
dec
aaa
sub
lret
and
mov
aad
sbb
inc
fimull
cmp
pop
das
mov
jbe
popa
sbb
daa
imul
xchg
in
andl
shrl
mov
mov
ljmp
xchg
xor
loop
imul
inc
sar
push
lods
xor
or
movsl
xchg
out
nop
and
push
into
pop
jo
jo
aas
xchg
pop
mov
cmp
sub
inc
je
and
mov
mov
out
sti
dec
inc
add
jp
mov
pop
inc
dec
jmp
pop
mov
fistps
loope
pop
subb
ss
jo
mov
setb
jb
mov
mov
jl
push
pop
xor
xchg
repz
test
out
adc
roll
ficoms
cmp
in
pop
or
or
shlb
loop
rcrb
push
mov
je
adc
inc
mov
testb
imul
pop
mov
cltd
push
jno
xchg
aad
inc
orb
addr16
cltd
icebp
dec
sub
movsl
dec
add
mov
pushf
cmc
mov
mov
test
sbb
add
adc
sti
adc
mov
dec
or
xor
aad
enter
add
xchg
pop
out
mov
and
fnstcw
add
mov
jne
arpl
repz
mov
lds
mov
sbb
call
xchg
sub
leave
sub
pop
and
mov
pushf
pop
adc
pop
mov
add
mov
lds
int
iret
mov
jne
mov
push
int
jge
cltd
sbb
jl
aaa
jno
push
inc
mov
mov
pushw
mov
push
lret
push
andl
test
popa
add
ret
sbb
mov
lock
and
call
pop
push
mov
pop
jae
clc
ds
inc
and
ja
test
arpl
jl
cmpsb
lret
xor
out
js
mov
and
sub
mov
ja
mov
fdivrl
dec
mov
mov
ds
bound
push
mov
mov
test
push
mov
cmpsb
jae
jle
push
into
or
or
mov
sub
pop
add
out
shlb
lcall
jb
mov
fs
sbb
ss
pushf
mov
cmc
mov
frstpm(287
fsts
or
xchg
sti
loop
xchg
push
insb
pushl
bound
dec
mov
dec
enter
repnz
scas
mov
out
movsl
jg
inc
push
popf
push
fnstenv
ret
mov
into
push
cmp
or
or
jl
repnz
mov
cld
pop
dec
push
push
jp
lret
ret
cmp
push
or
mov
or
test
sbb
icebp
loop
stos
or
mov
jmp
add
mov
and
test
push
out
cmp
clc
mov
lods
daa
xchg
jl
mov
fsubs
push
push
sbb
cmp
or
dec
ret
xor
clc
or
int3
cmp
cmp
cmp
aad
xor
popf
adc
xor
xchg
adcb
push
lret
bound
call
lcall
divb
rorl
les
jne
mov
int
fs
test
aas
jnp
sbb
jno
add
mov
outsb
pop
aam
scas
movsl
ror
inc
or
cmp
sub
mov
inc
loope
outsl
popf
and
xchg
xchg
jge
add
repnz
mov
jmp
enter
ds
cltd
mov
dec
dec
mov
fildll
or
sub
mov
dec
mov
mov
icebp
cmp
imul
push
mov
pushw
adc
ds
fs
xchg
cmp
cltd
inc
mov
sub
movsb
enter
mov
jg
jbe
stos
jns
imul
ds
sub
inc
inc
xchg
pop
fidivl
fiadds
adcl
int3
call
or
das
mov
dec
mov
and
in
dec
aam
and
pop
fdivrl
das
cmp
stos
and
mov
lahf
mov
sarl
cmp
or
outsl
outsl
fstps
out
scas
push
jg
in
mov
mov
dec
repz
cmp
jnp
cmp
filds
push
pop
les
ds
mov
and
mov
mov
stos
push
sti
jo
mov
pop
popf
cwtl
xchg
mov
es
push
or
and
mov
add
mov
jo
cmpsb
sub
cmpsl
repnz
popa
mov
imul
lret
hlt
movsl
ss
fldenv
addr16
test
je
test
push
mov
iret
dec
cld
push
cmpl
repnz
push
push
popf
xchg
mov
ret
or
jae
add
inc
fwait
lods
insb
mov
xor
xchg
daa
repnz
stos
push
aam
adc
jg
inc
pop
ljmp
fisubs
adc
out
xlat
stos
das
xchg
xor
jne
aaa
sub
add
adc
add
jnp
xchg
sub
dec
mov
fldt
call
mov
cmp
shlb
dec
add
in
push
insl
jecxz
and
jne
sub
lea
cmpl
cmpsl
xchg
push
aam
sbb
mov
push
pop
cld
ljmp
inc
stc
add
arpl
scas
out
jnp
loop
jo
test
insb
push
dec
rclb
in
and
push
pop
pop
xchg
aaa
xchg
add
mov
fst
mov
loop
cmp
fwait
jp
rcrb
cmp
nop
out
outsb
xor
scas
xchg
dec
xchg
push
movsb
push
pop
nop
enter
jg
xchg
pushf
adc
xchg
jmp
ss
stos
movsl
xchg
inc
call
lahf
and
or
iret
divb
icebp
sbb
adc
push
rorb
mov
js
and
jo
xchg
dec
and
adc
cmp
inc
xchg
test
shl
test
dec
sub
jp
sub
xor
add
lods
sub
dec
xor
jb
cmp
imul
icebp
outsb
pop
fisttpl
repnz
mov
fidivrs
or
cmpsb
adc
push
adc
mov
movsl
imul
cltd
in
xor
sahf
push
pop
sbb
mov
inc
push
mov
add
in
inc
mov
in
sahf
loopne
adc
lods
pop
repnz
mov
mov
mov
in
jb
xchg
icebp
add
pop
pop
pop
aad
add
push
fnstenv
idivl
pop
ds
ds
loope
into
repnz
sbb
sbb
xor
push
xchg
mov
dec
fcmovne
dec
int3
add
pop
xchg
sub
sti
push
inc
stc
push
jo
inc
adc
jno
mov
xor
rcrb
jne
and
sbb
imul
lret
icebp
pop
dec
mov
push
stos
xchg
mov
mov
jmp
stc
mov
mov
shrb
pminub
xor
and
jbe
arpl
cmpsb
fwait
into
sbb
fwait
inc
pop
add
mov
cmpsl
in
pop
push
pushf
lods
gs
cltd
flds
mov
das
xor
pop
jg
loopne
sub
std
xchg
aad
pusha
mov
popa
std
mov
ljmp
pop
flds
jno
mov
daa
mov
push
inc
xor
jo
jmp
cmp
adc
inc
out
jb
mov
and
dec
adc
sbb
fsubp
gs
aam
sub
enterw
fld
xchg
jg
aam
ss
add
lock
add
jmp
push
and
sbb
push
push
xchg
add
out
pop
in
adc
xchg
icebp
test
jne
leave
repz
xchg
cmp
cmp
xchg
xor
mov
push
adc
sbb
mov
add
mov
adc
and
jae
jne
stos
stc
or
movsb
cmpsl
mov
push
dec
xor
or
lds
daa
aaa
aad
adc
aas
aaa
loope
stos
sbb
add
and
movsb
fadd
lret
sbb
jns
xor
sub
mov
mov
icebp
jnp
mov
dec
fbstp
add
lret
add
xor
and
flds
lret
push
push
outsl
movntq
fisubl
popf
insb
decl
icebp
jno
cmp
mov
cs
loopne
push
dec
jnp
cs
add
pop
xchg
insb
push
lahf
dec
ljmp
fists
pop
popa
mov
repnz
add
in
sbb
push
je
pop
mov
xor
test
pop
in
jle
outsl
bound
rol
xor
cmc
pop
dec
es
add
filds
aam
add
bound
fsubrs
mov
xchg
pop
rorl
mov
repz
inc
inc
dec
inc
cli
xor
or
push
xchg
dec
cmp
sbb
or
dec
mov
or
xchg
push
int
popf
imul
pop
shll
sahf
sub
addr16
fcomi
sub
or
popa
imul
jl
sbb
testl
jne
push
jo
mov
vmread
add
es
jnp
jmp
pop
popf
je
push
stos
cmpsl
mov
call
incb
and
push
rolb
sbb
mov
ss
push
push
mov
xchg
out
ds
jge
cmpsb
clc
adc
cmp
out
leave
fcmove
inc
and
jl
push
fs
iret
aam
in
lret
push
add
xor
sbb
jno
mov
xor
mov
sbb
testb
dec
mov
cmp
xlat
add
xor
mov
arpl
sub
jo
test
sub
cmp
add
clc
sbb
push
and
bnd
fstpl
adc
sub
cltd
inc
jp
loopne
repz
jns
mov
xor
adc
mov
movd
mov
xchg
inc
fcomi
and
aas
popf
cs
cmp
roll
in
sub
stc
fdivrs
popf
pop
shlb
and
pop
ds
stos
rcll
or
in
xchg
cmp
ret
test
mov
mov
into
insl
jns
pop
xor
out
sahf
cwtl
cmp
jbe
aam
cwtl
in
push
iret
sbbb
repnz
mov
sbb
into
mov
push
pcmpgtb
push
cmpsb
pushf
or
pop
jno
mov
and
push
fidivl
pop
ret
mov
mov
cmp
xchg
sbb
xor
rcrl
cmp
into
stc
jp
aam
shll
xor
lret
ret
pop
insl
sahf
lea
jl
inc
pop
sbb
xchg
outsl
or
mov
ss
shr
cmpsb
mov
addr16
jp
push
xchg
pop
or
sti
xor
dec
xchg
mov
xor
dec
sti
or
movl
insl
sbb
imul
sub
push
rolb
hlt
loopne
adc
loop
adc
mov
fsubrl
popa
ljmp
or
lods
fbld
push
cs
cmpsb
inc
outsb
adc
rolb
and
dec
sub
cmp
test
popa
shl
into
pop
js
das
sub
push
cld
pop
pop
sbb
sub
mov
fidivl
leave
and
flds
sahf
pop
or
push
ds
subl
clc
mov
ret
aad
dec
scas
daa
push
movsl
xchg
les
clc
arpl
test
test
sahf
cmp
xchg
push
jno
lds
dec
mov
pop
cmp
inc
in
jle
addb
xchg
stos
sbb
leave
or
cs
push
adc
outsl
fs
out
sahf
pop
or
sbb
xor
clc
jmp
fs
pop
pop
aad
cmp
add
jmp
mov
loop
out
jp
ret
rclb
cmp
xorb
outsl
in
test
loopne
fidivrl
pop
jcxz
pop
jmp
ds
inc
loop
mov
sub
je
out
jp
xor
out
test
lods
orl
adc
mov
sub
fildll
cltd
jge
inc
mov
push
or
pop
cld
xor
inc
sbb
popl
scas
into
stos
mov
lret
mov
loopne
sbb
sbb
scas
mov
pop
fistps
shrl
out
push
fnclex
jbe
mov
push
call
xor
adc
lods
mov
cmpsl
ja
movl
aam
arpl
icebp
cwtl
adc
scas
ss
mov
inc
inc
std
jnp
xchg
iret
mov
fs
push
adc
add
and
xchg
mov
adc
jo
ja
cmc
or
fcomps
push
mov
lods
stos
cmp
in
out
dec
imul
sarb
pusha
aad
popa
push
sbb
icebp
lods
push
out
mov
add
push
pop
sbb
int3
mov
sub
push
pop
andb
sti
jo
xor
mov
inc
pop
jg
mov
or
add
pop
xor
inc
popf
mov
outsb
repz
jo
mov
int
lret
call
pop
insb
push
push
stos
outsl
daa
pop
inc
iret
or
lret
inc
push
call
xchg
add
dec
rcll
outsl
add
push
dec
sub
push
add
outsl
lret
xor
ja
out
xor
adc
sub
push
push
or
mov
lods
inc
push
or
in
adc
xchg
xor
dec
inc
sub
sti
cmpsl
ljmp
add
mov
rcrl
cmc
gs
pop
mov
sahf
dec
jl
adc
mov
fists
and
movsl
icebp
in
dec
xchg
fsts
in
add
mov
xchg
jl
inc
ret
lds
into
adc
ljmp
shl
cld
cmp
pop
dec
cmp
mov
mov
js
push
cwtl
push
or
or
lods
out
hlt
add
pop
test
jne
inc
dec
jns
sbb
push
jl
iret
mov
xor
sarb
xchg
sub
pop
and
jmp
adcb
scas
xor
jnp
mov
daa
insb
add
mov
in
dec
add
sub
adc
pop
sbb
loopne
mov
mov
mov
pop
jle
fildll
and
aaa
in
std
or
jne
stc
add
or
mov
jge
imul
loopne
divl
push
jb
je
movsb
dec
add
leave
inc
lds
mov
gs
mov
jns
lcall
sbb
push
out
push
sbb
addl
out
test
jne
pextrw
push
xchg
mov
sbb
inc
cli
sub
push
cli
xchg
and
orb
jecxz
pop
mull
mov
bound
aaa
inc
out
dec
jne
popf
mov
or
cmp
std
inc
loope
mov
mov
mov
fsts
jnp
lahf
das
lahf
mov
mov
pushw
ljmp
clc
jno
mov
adc
add
arpl
cs
aad
repnz
sti
lods
mov
add
lea
mov
ss
lods
test
or
daa
int3
in
stc
test
push
and
inc
popf
inc
ljmp
add
mov
push
lahf
xchg
fisttpll
adc
or
mov
mov
push
push
xor
sub
rolb
addr16
inc
in
mov
jb
mov
ds
xchg
push
sub
frstor
mov
push
int3
repnz
dec
xlat
push
fcoml
cmp
sbb
out
lea
jns
cmp
jno
mov
jb
aad
sbb
or
notl
mov
mov
loopne
arpl
push
xorb
ja
in
adc
stos
cmp
cmp
fdivrs
out
mov
test
clc
fstpt
loope
sub
jae
xor
mov
aam
das
add
sbb
aam
mov
push
out
enter
rcrl
push
push
lock
in
or
pushl
mov
repnz
dec
sub
cld
xor
stos
mov
ss
ja
movsb
mov
push
out
adc
inc
inc
and
or
daa
mov
or
gs
push
lods
adc
pusha
addr16
out
rorb
out
loopne
or
sysret
xchg
dec
mov
jmp
dec
addl
adc
dec
sub
xor
sti
add
dec
pand
ja
jnp
out
sub
dec
or
out
cmp
outsl
ror
pop
fcmovnb
hlt
cli
mov
push
scas
push
inc
loopne
pusha
fisubl
call
rorl
jb
dec
adc
data16
lods
aaa
sub
cld
inc
add
xor
inc
fdivs
sub
push
ret
icebp
xor
scas
sahf
and
pop
pusha
popf
xchg
jge
push
pushf
imul
push
aad
loop
xchg
int3
out
inc
stos
mov
sbb
mov
arpl
jg
inc
cmp
jno
icebp
popf
jecxz
ss
ret
mov
dec
fwait
aaa
pop
or
sub
pushf
inc
out
cmp
jle
push
inc
xorb
dec
daa
rol
or
imul
xor
ret
jb
mov
pop
jl
sub
out
pop
enter
sub
test
cwtl
sarb
and
cmpsl
dec
loop
loopne
icebp
frstor
icebp
jg
lahf
mov
lock
cld
mov
inc
test
rcl
loop
sbb
and
dec
jne
jno
popf
sbb
mov
fdivrs
cltd
pop
xchg
test
and
mov
sub
and
nop
mov
daa
adc
cltd
mov
scas
out
xlat
rol
and
enter
mov
xchg
sbb
addr16
cmp
aad
div
movsl
cmpsb
popf
push
xchg
pop
or
pop
jns
jbe
sbb
aaa
add
fcmove
rcrl
mov
mov
das
dec
leave
jns
orl
adc
cmp
mov
xor
push
ret
sbb
sbb
lahf
sti
and
mov
dec
push
es
push
sbbb
mov
jnp
pop
mov
mov
and
push
jecxz
cmp
add
enter
mov
int
mov
pslld
ds
adc
stos
outsl
jp
sbb
push
call
popa
pop
and
jmp
mov
sbb
incl
cmp
sbb
jno
aam
and
insl
divb
filds
xchg
je
dec
ret
clc
in
out
cmp
repnz
jmp
sbb
push
mov
sbb
rcr
out
push
outsl
stos
dec
je
sbb
stos
push
sub
lcall
cmpsb
stc
mov
ror
xor
lods
je
push
pop
xor
xchg
movsb
sbb
aaa
sti
out
mov
popf
or
cli
push
pusha
mov
mov
loope
decb
pop
and
jnp
into
loopne
dec
xor
xchg
daa
xchg
das
add
dec
sbb
scas
inc
xchg
inc
out
inc
mov
loope
or
sbbl
mov
xlat
rorb
pushf
fsubrl
scas
popf
insb
scas
mov
pushf
punpckldq
and
bound
stc
inc
lret
fisttpll
push
mov
cmp
cmp
out
pop
xlat
or
or
movsb
mov
jl
push
cmp
dec
push
icebp
push
push
in
pop
sbbb
cmp
dec
shl
aas
pop
lea
inc
out
and
or
sbb
repz
mov
pushf
test
fnstcw
mov
cmp
scas
push
hlt
add
push
xchg
pop
jl
add
jb
faddl
jb
sahf
mov
lods
sbb
and
push
jge
xchg
loopne
in
or
sub
fdivrl
sbb
call
mov
clc
or
fidivrl
add
push
fadd
mov
xlat
mov
sbb
pop
mov
rclb
mov
fmull
lret
mov
in
out
mov
dec
xchg
add
xchg
adc
shll
lcall
jl
cmpl
shlb
mov
adc
mov
inc
mov
dec
mov
push
sub
push
insl
cmp
add
xchg
dec
enter
mov
jnp
jnp
fstp
subl
sbb
and
push
adc
inc
movsl
pop
into
mov
mov
and
push
mov
imul
mov
mov
dec
imul
xorb
data16
test
mov
ds
cmp
add
inc
ret
jecxz
and
bswap
mov
sub
iret
repz
push
stc
divl
and
out
xor
cmp
add
jb
icebp
mov
and
pop
mov
jl
and
jae
enter
sub
add
ja
pop
add
inc
vpsubw
sub
push
xchg
stos
inc
push
fsubrl
stc
xor
icebp
mov
arpl
xchg
fstps
into
push
mov
mov
in
mov
fistl
imul
rcrl
lret
jecxz
imul
cld
in
cmc
mov
jb
call
inc
jnp
mov
les
mov
push
mov
push
test
mov
mov
inc
cmp
mov
notl
icebp
jnp
sub
push
dec
outsl
xchg
mov
mov
lods
ss
imul
popa
dec
mov
mov
xchg
inc
add
sarl
in
jp
jns
sub
mov
shlb
repnz
inc
xor
shrb
mov
push
pop
xchg
xchg
dec
enter
adc
decb
fimuls
sbb
mov
mov
notb
pop
and
mov
adc
jl
dec
movsb
enter
fists
pushf
cmp
sti
adc
shlb
in
stc
aaa
mov
stc
sbb
cli
and
ficoml
mov
out
out
mov
jb
jno
mov
mov
xor
cmp
leave
mov
xchg
or
addb
shrl
or
sub
and
stos
mov
mull
jg
dec
xchg
pop
mov
jnp
push
ror
xor
jmp
or
dec
jl
dec
movsl
test
dec
pop
lock
dec
xchg
adc
push
adc
iret
insb
call
jnp
push
mov
push
cltd
movsl
test
lcall
popf
imul
filds
outsl
je
outsl
insl
cmp
movsb
and
add
dec
mov
pop
pop
xchg
mull
fsubl
add
dec
stos
lret
ja
daa
bound
out
lcall
icebp
jge
testb
dec
scas
cmp
cli
inc
jg
push
loop
bound
adc
jl
jbe
cmc
adc
xchg
and
sub
push
xchg
inc
or
insl
pop
push
out
inc
xchg
sbb
jge
and
push
or
jb
fstpt
jo
sub
jle
jo
sub
mov
movb
jle
pop
testb
lret
push
loop
loopne
mov
push
inc
mov
cltd
les
sub
sub
nop
add
and
leave
int3
inc
adc
fmuls
or
add
aaa
rorb
inc
xchg
fldcw
adc
adc
divb
leave
mov
sbb
aaa
rcl
inc
into
cmp
or
enter
ljmp
mov
push
push
xor
aam
mov
push
mov
ficoml
lcall
dec
add
lahf
fadd
cmp
pop
jbe
sub
mov
and
pop
cld
mov
push
cmp
lahf
mov
or
int
lret
jo
cmp
addr16
hlt
jge
cmp
fcompl
xorb
and
pop
mov
push
pop
pop
sub
sub
stos
popf
or
pop
addr16
movsl
add
or
pop
aad
or
rcl
pop
ljmp
jl
push
in
aad
fnstcw
pop
mov
mov
mov
pop
andl
movsl
lea
sub
xor
cmc
xor
sbb
sbbb
arpl
mov
jmp
in
out
add
dec
cs
imul
pop
outsl
xor
xchg
ja
pushf
out
int
jae
ror
pop
dec
add
mov
pop
xor
icebp
pushf
cmpl
inc
repnz
jmp
and
bound
ret
inc
cmp
sub
out
repnz
jnp
stos
xchg
mov
mov
xor
inc
mov
scas
add
fmull
mov
inc
rcrl
imul
mov
adc
je
mov
pushf
in
cmc
enter
xchg
push
dec
cmc
inc
insb
repnz
es
ficoml
or
mov
or
imul
rcrb
jle
or
adc
inc
mov
stc
lods
data16
jnp
push
adcl
dec
adc
pushf
jmp
jns
pop
lahf
adc
xchg
scas
test
fldcw
in
mov
inc
lock
scas
lcall
stc
inc
nop
xchg
sbb
xchg
mov
aad
out
mov
mov
into
jmp
cmp
mov
xor
and
mov
xchg
push
sahf
mov
add
cwtl
ljmp
jns
fistps
xor
scas
test
lods
adc
jnp
fwait
movsl
dec
insb
pop
pusha
cwtl
fcmovnbe
pushf
mov
mov
jb
cmp
push
insb
pop
xor
mov
ss
push
push
mov
push
push
in
xchg
or
mov
mov
push
inc
xchg
test
lods
cwtl
fs
inc
cmp
daa
shll
mov
jns
mov
aas
in
jg
or
repz
movlps
leave
jge
mov
lcall
loope
push
es
adc
lods
xor
dec
repnz
arpl
cli
cmp
fisubl
test
dec
and
xchg
jbe
stos
mov
ds
lods
mov
xchg
rol
stos
and
iret
xor
push
in
sahf
jno
ret
out
js
push
ds
lea
out
in
lods
fwait
mov
cmpl
mov
sub
dec
jne
shlb
test
ret
xor
mov
inc
xor
loopne
add
movsb
push
gs
fcomps
pop
dec
repz
cltd
xchg
xor
cmp
mov
cltd
popf
push
xor
js
jae
xor
jbe
fstpl
pop
jne
sub
scas
sub
and
lcall
mov
rcrl
insl
pop
jle
hlt
stc
aad
inc
lea
ret
sahf
je
outsb
movsl
adc
imul
cwtl
notb
jnp
lods
lods
cwtl
mov
xor
xchg
cmpsl
add
insl
daa
ret
imul
lea
xchg
cmc
or
pop
add
xchg
pushl
in
lea
cmc
imul
in
lret
lds
call
fdivr
leave
fcoms
jne
mov
pushf
pop
sbb
insb
cmp
push
push
hlt
push
pusha
imul
scas
popf
cmp
inc
sub
mov
and
jle
popf
pop
and
negl
mov
jmp
pop
cmp
in
sti
jmp
loope
in
testb
xchg
test
pop
loop
aam
std
pop
movsl
jg
pop
shl
xchg
jne
mov
and
lret
pop
mov
testb
mov
inc
cs
data16
push
or
cmpsb
cmp
cli
add
lcall
dec
push
mov
call
clc
cwtl
lret
push
hlt
push
jle
jp
inc
cltd
push
or
mov
out
push
push
outsl
or
flds
xchg
cmp
mov
pop
xchg
mov
inc
inc
pop
test
scas
inc
stc
mov
nop
sub
or
lods
push
fiadds
add
jecxz
into
sub
pop
popa
mov
mov
jnp
jb
dec
mov
sub
movsb
mov
xchg
addr16
xchg
dec
daa
jmp
idivl
rcrl
mov
test
pop
addl
add
mov
roll
adcb
ds
out
les
lret
outsl
in
jae
jns
pop
lds
push
mov
mov
sahf
cmp
mov
imul
jmp
fwait
sub
notb
jae
cmpsb
loop
jecxz
idivb
jns
xor
jb
pop
or
ja
adc
push
cmpsl
les
push
js
xchg
or
mov
xor
int
mov
mov
nop
xchg
cld
xchg
outsl
fiadds
sbb
lds
pop
roll
cmp
jle
adc
push
adc
bound
iret
cmp
or
sbb
outsl
or
mov
out
sbb
outsl
mov
enter
loope
mov
mov
lret
inc
fwait
aad
out
sahf
push
push
mov
jmp
fimull
cs
rorl
out
and
cltd
incl
arpl
and
lcall
dec
les
cltd
sub
inc
inc
push
inc
or
jecxz
mov
subl
add
jle
out
push
xor
fs
mov
clc
inc
call
inc
jns
inc
cmp
cmp
adc
push
movsb
fbld
lods
cmp
dec
or
out
push
bound
mov
mov
mov
int3
or
int
push
cs
jge
dec
add
addl
push
push
xor
inc
and
lods
xorb
sti
iret
pop
popf
cwtl
pop
sahf
loope
xor
sub
or
mov
add
fwait
stc
sub
and
add
std
imul
cs
dec
movsl
mov
stc
fsubl
cltd
enter
cwtl
mov
aas
and
and
subb
mov
mov
addb
in
mov
rol
sbb
testl
and
add
mov
insl
mov
xor
mov
negl
aam
enter
addr16
imul
pop
je
jne
mov
sbb
push
inc
addr16
orl
adc
jo
pop
aas
addb
mov
lahf
xor
mov
int3
mov
dec
sub
dec
and
jecxz
xor
and
adc
test
push
aad
mov
scas
aam
clc
dec
or
aad
pop
lcall
inc
xor
ljmp
inc
rcrb
cbtw
lds
adc
aaa
jl
push
mov
movsl
cmpsb
xor
and
hlt
test
adc
out
cs
movsb
xchg
scas
mov
mov
daa
mov
and
pop
sub
jae
iret
fisubl
dec
insl
cmp
rcr
xchg
pop
push
sarl
sub
mov
mov
jmp
and
int3
fmul
pop
rcr
scas
or
jmp
inc
add
jl
cmpb
shrb
iret
sub
stos
in
test
mov
push
sbb
popa
pop
mov
lcall
leave
mov
out
or
pop
divb
clc
repz
inc
inc
cmp
add
stos
or
sbb
jbe
sub
lea
push
mov
fists
pop
outsl
imul
xlat
imulb
roll
dec
dec
or
add
js
and
fs
push
outsl
insl
add
jge
xor
sub
cld
loope
jb
loop
inc
out
shr
sub
and
xchg
xchg
add
mov
xchg
adc
inc
cmpsl
sbb
sbb
mov
jp
mov
sub
cld
jo
push
sbb
jmp
lea
lahf
mov
mov
sub
dec
sub
idivl
out
call
dec
ds
lods
mov
mov
adc
xor
dec
xor
mov
inc
js
push
and
and
xchg
and
iret
push
cli
lds
push
xchg
jecxz
add
xchg
jne
out
test
stos
enter
into
jno
fisubrs
shl
push
cmp
daa
scas
hlt
fldenv
mov
add
or
les
stc
arpl
fcmovb
pusha
push
or
lods
nop
and
xchg
fmull
add
push
push
xchg
push
cltd
ljmp
sub
dec
dec
mov
jo
dec
fldcw
mov
add
mov
daa
outsl
loope
or
loopne
push
test
scas
and
jne
stos
nop
call
or
xchg
bound
sbb
jp
mov
or
xor
test
mov
popfw
and
mov
gs
dec
jo
xchg
sub
call
in
adc
push
pop
rorb
fs
rcll
cli
or
shrb
insb
cmp
adc
sub
push
push
lahf
lods
mov
pop
sbb
and
jne
call
addl
pop
rorl
stc
or
push
lahf
flds
outsb
cmpl
adc
sbb
xor
jnp
cmpsl
mov
jae
sbbb
lods
mov
aaa
sarl
adc
xor
test
adc
out
jb,pn
decb
inc
aas
out
add
test
add
pop
jo
scas
inc
sbb
add
testb
mov
pop
pushf
gs
loop
icebp
out
pop
push
rorl
xor
sbb
adc
xlat
insb
notb
add
adc
inc
mov
cmp
mov
int3
jmp
pusha
xchg
lock
incb
pop
dec
loopne
les
test
cld
xchg
adc
js
out
cmpsl
push
stos
mov
xchg
add
add
add
in
pushf
and
sar
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
