mov
mov
push
push
push
mov
mov
pop
push
push
mov
add
sbb
push
push
push
mov
xor
mov
mov
incl
pop
mov
xor
lea
stos
stos
sbb
outsb
xchg
or
or
jmp
mov
out
pop
jmp
pop
cld
call
out
jbe
mov
add
lea
test
shll
pop
movd
stos
inc
daa
loopne
idiv
fisttpl
mov
push
push
jp
sub
ja
lea
and
sbb
adc
push
incl
push
out
inc
sbb
sbb
fwait
adc
sbb
popf
fcompl
mov
mov
mov
dec
lahf
mov
jmp
test
ret
mov
adc
mov
sbb
or
ret
aas
sub
in
ficomps
mov
mov
add
faddl
out
insl
fcmovnu
pop
std
fwait
les
or
pop
cs
lret
lds
gs
popa
enter
cs
in
lret
lret
outsl
int3
int
into
push
iret
pop
rorb
shll
shlb
shll
mov
inc
aad
add
cmp
pop
fdivs
pop
xlat
insl
add
sub
aaa
fisttpl
push
add
jne
mov
pop
loop
jecxz
add
inc
in
out
mov
xlat
add
inc
call
imul
daa
in
pop
in
aaa
lock
pslld
pop
xlat
xor
sbb
add
aaa
clc
pushl
add
pop
sti
js
cld
je
mov
jo
xor
sub
mov
and
push
mov
mov
jmp
and
adc
or
add
fcmovnb
das
cld
rorb
lods
cmp
je
jg
push
mov
add
mov
in
ret
shrl
adc
mov
pop
push
out
neg
in
pop
je
cs
adc
or
nop
mov
xor
les
add
into
cmp
or
loope
sarl
outsl
jl
jae
out
cmp
jne
stos
or
add
daa
xor
pop
push
mov
sbb
cmpl
jl
jb
sbb
xor
push
push
push
inc
push
adc
mov
push
nop
nop
mov
xor
sub
cmp
repnz
or
sarl
push
mov
add
mul
sbb
fsqrt
mov
fildl
pop
or
sbb
nop
add
outsb
add
push
mov
sbb
mov
mov
push
push
daa
mov
or
push
je
mov
push
xor
mov
test
je
mov
sub
inc
inc
mov
test
mov
jne
andb
jmp
sbb
ss
xor
movzbl
inc
or
jg
clc
inc
jl
clc
pop
jg
add
adc
inc
cmp
insl
in
out
shll
add
shll
cmp
sub
add
pop
adcb
pop
dec
insl
lock
or
or
lahf
inc
clc
add
sub
shl
fiadds
stos
shlb
rcrl
clc
or
in
inc
andl
mov
sbb
mov
push
push
imul
jge
add
or
cmpl
push
mov
inc
sub
fisubrl
inc
sbb
xchg
mov
inc
nop
lock
add
clc
fistps
icebp
jae
dec
sbb
cmpb
jbe
mov
cmp
lea
mov
add
scas
lahf
mov
pop
jecxz
insl
cmp
cmp
jl
jae
adc
dec
popa
pop
jbe
pop
sub
shl
dec
jbe
push
sbb
clc
jmp
jne
push
jnp
adc
lods
ficoms
push
mov
xor
cmp
jbe
test
adc
ret
mov
jge
fists
lret
mov
push
or
shl
nop
mov
mov
insl
lea
sahf
sbb
insl
ret
pop
push
adc
xchg
sub
lret
cmpsb
mov
add
sbb
jle
hlt
lret
fmull
frstor
inc
or
fidivrs
fists
gs
mov
push
add
out
faddl
xor
cs
insb
add
dec
cmpsb
outsl
cmpsb
imul
imul
and
pop
mov
jne
xlat
insl
add
and
dec
ret
imul
lds
push
xlat
dec
sbb
enter
push
insb
fildl
cltd
lock
mov
inc
and
dec
pushl
or
clc
mov
movb
add
jmp
sti
cmpsl
add
cmp
call
clc
pop
mov
lret
insl
cld
or
ljmp
jmp
mov
push
mov
sbb
test
test
add
inc
lods
mov
add
push
test
jp
jae
xchg
or
rcr
sbb
imull
mov
popa
adc
push
push
mov
repnz
movsl
popa
pop
adc
idivb
push
mov
push
js
push
das
cld
adc
jns
inc
js
iret
jmp
fdivrl
pop
sti
sub
jne
push
rclb
mov
insl
mov
scas
push
xchg
cmp
and
je
adc
movl
fdivrs
fisubs
in
push
pop
jne
or
movsb
jb
add
or
fcoml
sub
jmp
pop
in
push
inc
je
decl
addl
sub
sti
cmp
aaa
clc
mov
xor
cmp
shl
lahf
push
into
in
movsl
ret
mov
cmp
sbb
movsb
inc
ds
pop
test
cld
ret
insl
aas
or
fsubs
jmp
mov
pop
dec
movb
jne
add
inc
sar
mov
xor
lcall
mov
lcall
cmp
adcb
sar
rol
sub
lea
in
and
dec
insl
adc
imul
test
push
insb
call
add
inc
int3
jmp
dec
add
mov
jb
gs
pop
push
inc
sarb
jmp
xor
icebp
mov
pop
push
push
xlat
pop
rorb
loope
add
inc
shll
popa
call
jne
pop
lods
pop
scas
adc
xlat
jne
xlat
and
pop
mov
mov
jb
pop
pop
mov
mov
fbstp
mov
mov
adc
rclb
movsl
push
adcl
movsl
sub
ret
repnz
push
and
pop
test
mov
lock
mov
jge
xchg
cs
mov
inc
dec
repnz
outsl
or
push
and
clc
idiv
and
mov
movl
pop
dec
xor
mov
ljmp
inc
cmp
pop
ret
mov
movl
mov
inc
mov
jns
sahf
aam
push
inc
push
push
loope
add
sub
jp
stos
push
das
loop
dec
fnsave
sahf
cmpsl
push
popa
xor
pop
pushf
push
pop
sahf
xor
pop
adc
call
or
movsb
jmp
sub
int
icebp
pop
jns
push
outsl
xorl
push
cmp
inc
ret
test
xchg
hlt
push
lcall
pop
jnp
lret
fcoms
mov
sbbl
daa
popf
xchg
insl
popa
add
push
jne
mov
lock
and
rcrw
push
inc
cmp
das
ret
inc
stos
inc
cmp
xor
mov
rol
jbe
popf
cmp
je
push
dec
je
adc
jo
mov
roll
jmp
out
mov
xchg
in
pop
out
pxor
pop
imul
je
imul
into
mov
lods
jmp
cltd
subb
mov
pop
add
mov
mov
pop
std
adc
imul
add
adc
int3
sub
or
loop
xor
adc
lods
iret
es
inc
inc
ret
fcomps
mov
push
cmc
in
enter
push
mov
outsl
pop
adc
test
repz
into
xor
fadds
pop
adc
je
adc
adc
lods
roll
out
cmc
aam
rcrl
jne
or
sbb
add
add
sbbl
pop
je
daa
rclb
or
mov
ret
fcoml
fmuls
adc
or
add
loopne
xor
cld
jp
loope
jg
movsl
movsw
movsb
push
inc
pop
ljmp
daa
movsl
ret
sbb
jbe
cwtl
jne
sarl
testl
fst
popa
and
xchg
push
inc
call
push
jg
pop
imul
and
shll
xchg
pusha
push
and
mov
pop
inc
mov
xchg
inc
fwait
push
sbb
jecxz
cmp
mov
jge
jl
data16
pop
arpl
fisubrl
and
add
shll
ficomps
sub
cltd
pop
idiv
jg
jns
cmp
jle
add
jl
popa
jle
jp
add
fbld
cs
jl
pop
add
popa
lret
push
imull
out
pop
mov
or
pushf
lret
cli
xor
or
mov
enterw
nop
stc
adc
stc
movsb
out
jl
movsl
cwtl
sti
cltd
sti
inc
mov
enter
cld
je
loope
push
or
push
add
adc
loop
adc
push
mov
fisubrl
stos
cmovne
test
xor
inc
sbb
sarb
test
jecxz
mov
in
out
out
pusha
insb
fwait
sub
inc
loopne
sbb
push
or
dec
mov
daa
inc
test
sbb
adc
pop
pushf
inc
push
dec
and
les
pusha
js
das
filds
xor
test
mov
push
aas
cwtl
sti
ljmp
lea
test
sbb
inc
inc
add
sub
testb
int
sub
shll
or
sbb
lock
inc
repnz
cmc
scas
divb
insb
inc
clc
lret
shll
gs
push
insb
gs
adc
outsl
jo
dec
shll
fcmovnu
fst
xor
adc
inc
outsl
jo
xor
imul
mov
bound
ljmp
jbe
dec
xlat
adc
int
jne
jne
push
cmp
inc
shrb
roll
or
inc
aam
mov
mov
adc
sub
push
enter
lock
and
daa
aas
push
negl
adcb
inc
aad
mov
push
xor
jbe
xchg
lret
sti
cmp
je
add
xor
cmp
adc
or
adc
or
xlat
pusha
or
mov
sub
sbb
cmp
adc
or
xor
push
and
cmpsb
jbe
mov
incl
push
icebp
int
mov
pop
out
inc
inc
add
adc
push
adc
lret
push
lea
push
ret
dec
int3
cwtl
and
inc
xor
test
bound
in
inc
movsl
adc
inc
int3
push
call
loope
add
fdivs
xor
mov
idivb
movsb
jl
leave
sbb
es
adc
repnz
sbb
push
jl
jle
add
or
adc
mov
pop
pop
in
ret
adc
xchg
loope
add
popf
jl
xchg
jge
popa
mov
adc
mov
mov
sub
or
sub
or
mov
cld
andb
add
push
jg
sub
outsb
sub
add
les
jne
mov
inc
mov
jae
call
add
in
or
push
movsb
push
xor
lret
add
mov
je
inc
mov
out
addl
adc
ja
jnp
addr16
unpcklps
mov
and
or
lea
sub
dec
push
adc
jb
mov
call
orl
xchg
xor
dec
push
lret
xchg
movsl
sarb
inc
jle
fiaddl
lods
adc
mov
jmp
push
lret
sbb
pop
or
push
cmpsl
loope
insl
testb
or
sbb
divl
out
pop
dec
push
stos
rorl
hlt
fiaddl
cmc
sbb
xor
out
or
sar
jns
cmp
sbb
push
adc
std
push
or
pop
ret
in
add
stos
or
test
mov
in
test
mov
and
cmp
shrb
popa
mov
mov
or
or
cs
adc
adc
cmp
or
jne
lahf
xlat
and
pop
and
pop
out
hlt
pop
adc
push
sti
hlt
popf
xor
mov
mov
add
adc
push
push
jbe
or
mov
sbb
mov
jne
je
cmp
popf
push
test
jae
in
mov
pop
jb
pop
icebp
test
push
inc
add
mov
mov
mov
push
push
and
pop
push
add
pop
gs
fldt
dec
invd
fiadds
ret
inc
ja
hlt
sarl
mov
xor
sbb
sub
mov
test
dec
insl
add
leave
push
cmp
pop
fildl
and
xor
and
push
pop
sbb
push
cwtl
fdivr
ds
jb
add
adc
enter
pop
imul
stc
jmp
adc
mov
adc
sbb
sub
clc
inc
int3
xchg
mov
jge
lods
adc
push
pushf
out
jbe
adc
mov
ljmp
fmuls
bound
and
mov
sbb
out
shll
xor
es
std
adc
shll
inc
pop
or
pop
dec
adc
push
call
jmp
add
jne
in
xor
xor
xor
ss
in
pop
sub
push
or
insb
add
ljmp
rcr
jp
leave
inc
pop
push
xor
fcmovb
jae
xchg
aaa
les
int
sub
add
dec
xor
cmp
sbb
pop
add
std
mov
imul
pusha
or
fwait
aam
push
sub
das
xor
dec
mov
leave
push
js
data16
sbb
pop
sti
jne
stos
jmp
jb
fsub
sbb
mov
add
push
sbb
push
jne
mov
call
repnz
add
call
div
clc
stc
adc
shll
ljmp
je
jecxz
in
in
out
shll
jecxz
jmp
dec
inc
mov
add
mov
and
fucomip
add
mov
push
ja
push
fldenv
scas
jb
ret
adc
orl
inc
jmp
mov
push
std
xor
ljmp
dec
mov
mov
pop
pop
shrl
xor
or
ja
jbe
sbb
xchg
or
cmc
mov
xor
jo
inc
cmp
add
shl
imul
pop
inc
ret
jbe
sbb
into
inc
rol
adc
and
int3
add
inc
mov
push
cmp
jb
sub
out
sub
jae
sub
mov
or
loope
or
cmp
push
ret
int3
cmp
add
movsb
test
mov
fs
mov
fs
enter
adc
sbb
fsubrl
icebp
adc
xor
push
call
cmove
inc
neg
sbb
dec
enter
adc
inc
add
adc
add
mov
or
dec
push
je
cmp
push
or
fwait
sti
jmp
fadds
or
add
lock
jge
sbb
das
mov
clc
mov
cli
adc
or
clc
std
or
push
hlt
mov
into
xchg
mov
xor
jmp
add
xchg
xor
jg
jnp
mov
jne
cmpb
jne
inc
or
add
fildl
repnz
or
jbe
aam
mov
movsb
jl
mul
add
mov
insl
in
push
iret
jmp
sub
int3
addb
int3
inc
mov
js
inc
xchg
cwtl
xor
stos
out
aaa
jl
in
out
mov
push
push
test
mov
add
mov
mov
loopne
xchg
mov
cmpsl
fadds
adc
movups
fldenv
insl
ret
mov
add
cmpsb
adc
xchg
lcall
aam
repnz
mov
add
and
shll
adcb
sub
loopne
lcall
xor
push
je
mov
insb
int3
aaa
dec
xor
push
mov
cld
xor
push
ss
shrl
sbb
shll
pop
fs
shll
lods
mov
dec
shll
int3
aam
out
shll
cli
push
jg
add
cmp
shll
dec
fdivs
add
add
pop
movsb
add
lea
loope
loop
aas
gs
sub
sub
fwait
sbb
int3
cs
loopne
inc
gs
test
mov
mov
xor
xchg
mov
xchg
xor
inc
add
dec
inc
dec
incl
sti
pushl
xor
fs
insb
add
push
inc
push
dec
or
xor
gs
mov
ljmp
xchg
das
push
leave
sbb
add
lods
mov
popf
xlat
ljmp
cli
ljmp
jo
jo
fld
repz
int
sbb
mov
mov
inc
std
mov
pop
dec
push
into
push
test
mov
push
xor
add
adc
fldcw
inc
sbb
pop
pop
add
and
and
pop
add
pop
andb
outsb
gs
test
xor
mov
daa
jae
cmpb
dec
scas
shl
lsl
mov
pusha
pushf
call
mov
lea
jge
rcll
je
lea
mov
adc
out
adc
jnp
add
add
push
push
push
push
push
idivb
cmpb
add
popf
popa
jmp
jle
inc
pop
pop
pop
adc
into
scas
loope
repz
mov
fldcw
xor
cmc
lret
call
mov
je
ret
mov
mov
aas
mov
pop
in
in
mov
and
pop
neg
and
inc
outsl
insl
arpl
inc
jae
arpl
jae
std
dec
or
cmpsl
mov
pop
into
les
mov
int3
out
add
mov
mov
sub
out
or
mov
mov
inc
dec
dec
inc
inc
inc
dec
inc
pop
inc
fistps
add
pop
daa
aam
jnp
out
lods
lret
rol
mov
mov
mov
aas
jno
lea
xchg
mov
cmp
popa
arpl
and
shlb
aaa
in
fstl
mov
mov
add
mulb
clc
pop
aad
enter
insl
outsl
fs
aam
dec
xor
cmp
jmp
xchg
imul
imull
jne
push
sub
clc
pusha
cld
insl
jae
je
insb
jo
outsw
outsb
mov
ss
mov
mov
jmp
fwait
cli
out
mov
cmp
outsb
popa
push
push
jb
arpl
in
fbld
sbb
outsl
jo
aaa
fs
mov
outsl
je
push
je
jns
or
add
scas
lock
js
push
and
add
mov
data16
and
inc
mov
bound
inc
dec
push
push
push
inc
push
inc
mov
cmp
pop
dec
dec
inc
push
dec
mov
fildl
imul
pop
xchg
lcall
shlb
adc
or
mov
add
jg
mov
dec
add
out
or
add
mov
incb
mov
mov
mov
int
mov
push
jb
addr16
pushl
insl
and
outsb
outsb
outsl
je
bound
jb
outsb
and
inc
dec
push
and
pop
sti
sbb
cs
idivb
addr16
fistpll
add
les
mov
mov
ffree
insb
dec
mov
neg
aaa
xor
imul
pop
arpl
repz
jno
cmp
cmp
or
out
push
dec
cmc
xchg
jnp
imul
dec
add
add
cmp
and
adc
jbe
jmp
jne
jle
mov
add
add
insb
adc
add
add
pop
add
add
clc
add
add
add
pop
or
dec
ss
add
inc
dec
mov
mov
enter
andb
jg
je
js
jmp
nop
jbe
lock
shrl
jb,pn
popa
je
popa
frstor
sti
or
or
jp
into
jle
arpl
inc
cs
add
inc
sub
add
push
js
or
in
in
add
daa
pusha
ja
jbe
insl
add
jnp
daa
or
incb
jb
insb
outsl
arpl
and
mov
insb
xlat
xor
push
sub
rclb
push
mov
pop
cmp
sbb
pusha
adc
or
push
pop
sub
or
mov
sub
mov
movsl
scas
mov
dec
lds
les
mov
pop
dec
pop
pop
push
or
decl
pop
rolb
mov
cmc
stc
cmp
stc
xor
call
aaa
scas
bt
sub
pushf
mov
call
mov
call
sbb
cmpsb
arpl
leave
outsl
adcl
mov
push
test
test
mov
mov
imul
imul
call
xor
sub
mov
push
add
mov
or
call
pop
ja
push
lods
loop
or
push
mov
jne
lock
mov
in
or
cmp
sub
into
mov
or
and
int
jo
mov
lea
jmp
notl
lea
inc
push
repnz
lcall
sbb
lea
mov
bswap
not
pushl
pusha
cmp
inc
lds
and
and
xor
out
or
into
pop
xchg
neg
or
clc
shl
sub
pusha
xor
sub
mov
pop
lea
pushl
mov
dec
jmp
xchg
cmp
sti
push
push
xchg
out
pop
sub
test
call
mov
sbb
push
sbb
or
roll
pop
pop
pop
repnz
loope
add
sbb
test
in
add
or
xor
test
jle
cmp
xor
rclb
je
jne
mov
inc
mov
mov
inc
push
push
jmp
sti
divb
popa
add
add
cmc
nop
mov
add
leave
pusha
jmp
cmp
outsb
rorb
and
sar
xlat
scas
adc
push
mov
ljmp
fistpl
push
int3
sub
in
lods
lock
add
push
call
repz
call
mov
xor
bound
add
adc
mov
and
add
mov
xchg
adc
dec
jmp
clc
xorb
jmp
inc
push
inc
mov
icebp
sbb
push
shl
lea
push
inc
mov
push
incl
add
cmp
outsl
and
jmp
pop
push
push
inc
loopne
xchg
push
test
push
mov
lcall
movsbl
cmpsb
mov
mov
outsl
out
sub
stc
jmp
jae
lea
adc
push
mov
add
pusha
pushf
std
xchg
test
dec
ret
cmp
push
call
cld
add
inc
sub
add
cs
clc
jno
mov
je
fdivs
inc
add
sbb
mov
out
loope
idivl
add
push
fwait
or
stos
outsl
pop
std
mov
xor
cmp
or
loope
mov
inc
adc
arpl
outsl
cmp
jbe
lea
mov
sub
rorl
sbb
lods
adc
mov
inc
push
push
movsl
add
fcomip
pop
mov
xor
jp
mov
pop
test
or
push
adc
pop
xchg
xlat
dec
pop
mov
daa
mov
dec
add
push
jmp
mov
lock
add
add
cli
mov
pop
cwtl
jge
xor
popf
popa
movsl
xchg
fildll
dec
mov
inc
jecxz
mov
pop
jb
mov
outsl
mov
decl
sub
cmc
pushf
stc
add
cmp
mov
mov
sub
dec
call
xor
xor
stos
mov
cltd
aad
aam
pop
dec
cmp
pop
jge
mov
ret
imul
sar
test
mov
stos
mov
and
xor
xor
add
fmull
outsb
adc
push
cmp
dec
in
lcall
lds
pop
aaa
sub
imul
leave
ret
loopne
xor
loope
and
mulps
jmp
lea
jnp
popf
add
popf
js
jo
add
scas
or
cmpsb
addl
call
mov
clc
push
shrb
xlat
mov
in
lret
loopne
arpl
popf
mov
cltd
pushf
pushf
sub
andl
adc
nop
fstps
add
push
ljmp
ja
cld
or
cmpsb
fwait
shlb
movb
mov
push
sbb
cs
cmp
icebp
scas
xor
fdivrl
push
push
out
fldl
or
sbb
subl
add
push
aas
insb
sbb
add
push
sub
mov
sbb
mov
es
pushl
outsb
fsubs
lods
jecxz
fldt
jbe
ds
pop
or
inc
sbb
push
push
pop
xchg
add
xlat
lock
sbb
stos
insl
add
sub
outsb
mov
cmp
arpl
jge
sbbb
or
jne
adc
int3
add
mov
or
sarb
fs
cwtl
ljmp
mov
pop
sbb
lds
daa
test
mov
push
push
lea
imul
fwait
ret
sbb
arpl
and
cmpsb
push
call
xchg
loopne
loopne
xchg
dec
push
into
std
and
sbb
or
cmp
add
in
loopne
dec
lods
and
outsb
ret
push
lea
pop
cmp
ret
shr
fdivrp
repnz
adc
pop
cmp
or
add
movsb
mov
loope
and
out
std
movsbl
loopne
fisttps
stc
inc
sti
and
mov
push
adc
div
add
push
pop
icebp
mov
mov
xchg
lds
test
mov
push
pushf
call
pushf
mov
inc
jmp
sbb
pop
loop
add
push
popa
dec
mov
mov
add
pop
lcall
inc
insl
mov
mov
aam
popf
enter
mov
add
xor
add
mov
mov
or
in
js
subb
gs
xchg
roll
xor
mov
sub
outsb
push
sub
js
push
push
push
fwait
cmp
imul
push
xor
mov
pop
ja
sbb
js
sbb
faddp
sahf
and
call
xlat
push
cmp
sbb
add
fsubr
inc
dec
rolb
and
mov
push
inc
cmp
fcmovnb
hlt
jae
mov
dec
xchg
jg
cmp
sti
xchg
lock
xchg
or
and
push
cwtl
insl
xchg
mov
call
mov
push
adc
aad
shlb
in
push
subl
xor
sub
js
faddl
add
add
iret
cmp
lcall
pop
and
incl
mov
push
mov
cld
jno
inc
mov
into
mov
mull
sbb
lea
push
jge
push
sahf
cmc
mov
mov
cwtl
adc
mov
pusha
push
push
pop
hlt
in
sbb
xor
adc
push
repz
push
pop
pop
mov
jle
xlat
gs
andb
mov
rol
xor
andl
enter
mov
bound
in
ret
mov
iret
ss
rorl
push
xlat
and
pop
sarl
mov
add
int
mov
scas
sub
mov
xchg
mov
mov
insl
pop
push
test
xor
daa
rcll
xchg
movsl
movsb
lcall
pop
fnstsw
mov
xchg
sahf
mov
sarl
in
lock
stos
dec
mov
mov
mov
out
mov
or
loopne
in
lods
loope
rcr
push
lds
mov
xlat
mov
rcrl
mov
insl
mov
pop
mov
roll
mov
cmp
sti
jne
push
call
enter
cmp
xorl
pushf
cmp
pop
sbbb
mov
call
or
jmp
ja
jne
arpl
and
sbb
stc
add
xchg
lret
cs
arpl
and
and
in
cltd
insl
cs
jle
jb
loopne
movb
inc
sub
xor
mov
jbe
cwtl
push
inc
or
fildl
mov
fnstenv
test
in
mov
test
pop
sbb
inc
or
adc
push
jp
bswap
adc
loop
rcr
out
sub
into
pop
dec
lcall
jmp
mov
mov
adc
lret
sub
mov
icebp
rcll
xchg
pop
faddl
mov
cmp
mov
dec
pop
ss
mov
icebp
clc
ret
test
icebp
movsl
push
ja
mov
in
or
and
or
xchg
or
ss
leave
les
dec
jge
inc
das
push
mov
and
negb
bound
push
cmp
fwait
sti
fadds
xor
sub
xor
and
xor
mov
jae
out
xor
out
inc
xor
sbb
pop
mov
mov
popa
pop
inc
loopne
push
andb
shlb
test
add
sbb
or
addr16
loopne
add
arpl
inc
mov
mov
adc
add
test
xor
stos
test
mov
dec
mov
icebp
push
repnz
or
push
pop
andb
pop
pop
pop
xlat
xchg
je
mov
mov
mov
mov
imul
pushf
imul
add
mov
shll
jns
stos
test
into
xor
lods
loopne
mov
adc
pop
jp
mov
cld
mov
scas
scas
xor
mov
cmp
fiadds
scas
sub
div
push
xlat
add
xchg
out
push
pop
jbe
call
mov
and
push
or
int
jne
dec
pop
call
adc
mov
dec
adc
jl
pop
aaa
fisttpl
aaa
adc
imul
std
inc
subb
dec
sbb
repz
adc
ud2
fldl
call
mov
clc
or
push
mov
jae
dec
mov
out
and
adc
dec
mov
mov
sbbb
xor
cmp
adc
cmc
mov
mov
adc
cmp
addr16
mov
sti
lods
fildl
mov
nop
sub
and
mov
sbb
dec
pop
lret
mov
loope
lcall
je
mov
cmpsb
lcall
jp
sub
fistps
push
paddb
call
xchg
xchg
daa
add
mov
sbb
push
and
dec
xor
xor
mov
es
adc
xor
jne
or
and
mov
adc
cmp
out
clc
mov
lcall
mov
call
in
test
xor
xchg
xchg
jmp
jg
call
loope
push
or
pop
outsl
pop
push
mov
cli
sbb
call
push
loop
dec
push
in
jb
jmp
jge
ret
cpuid
or
in
xor
insl
sbbl
cld
or
shl
add
pop
or
push
add
lods
push
cmc
test
cmp
stc
rolb
cltd
divb
push
jns
lock
out
pusha
pushf
icebp
popf
add
mov
ds
cmc
mov
imulb
in
xchg
mov
mov
pop
mov
add
setns
or
or
scas
les
add
sub
jb
inc
xor
aam
xchg
shll
adc
adc
push
or
fadds
lea
add
lret
inc
lock
repnz
out
or
shll
imul
adc
sub
add
popf
scas
jmp
in
not
jne
xchg
subb
fdivrl
mov
inc
int
or
lods
add
xchg
andl
xchg
mov
scas
ds
cmpb
roll
xchg
rcrb
add
roll
call
nop
add
push
sbb
push
mulb
sbb
in
in
roll
mov
push
pop
rolb
xor
pop
add
xchg
nop
xchg
adcb
testb
inc
ftst
jp
jo
lret
add
or
out
ss
xor
shlb
sbbl
sbb
pop
and
inc
les
mov
ss
sbb
sbb
xchg
pop
push
or
mov
inc
pop
cmp
insb
insb
test
movsb
mov
rorb
dec
mov
adc
jae
sub
adc
xchg
sub
push
jecxz
sbb
inc
xlat
mov
mov
add
loope
jno
icebp
push
and
xor
cmpsb
test
pop
inc
push
stc
sub
gs
xlat
rcl
xor
fmuls
int
xlat
xor
into
iret
rcl
pop
shr
pusha
xlat
shlb
ret
xchg
lds
daa
movl
add
subl
inc
in
out
out
xchg
orl
xor
pop
push
push
orl
adc
or
ret
xor
aam
pop
add
push
pop
adc
js
add
out
mov
push
insb
and
cmp
jnp
loope
inc
test
cmp
iret
fdivs
int3
mov
cmpb
in
dec
loope
xor
mov
push
fsubl
cmpsb
dec
rcll
sub
mov
inc
lods
jnp
ret
sub
or
call
iret
jno
into
ficoml
and
sbb
shlb
out
jge
sahf
nop
push
and
int
inc
outsb
rcrl
add
or
ret
sbb
jg
xor
add
pop
or
cli
sub
push
xchg
call
sbb
pop
int
into
iret
pop
rcrb
daa
mov
roll
aam
push
inc
test
sub
scas
jmp
jmp
fnstenv
ficoml
or
aad
cwtl
xlat
call
js
adc
cmp
je
mov
gs
ljmp
je
sub
xor
add
mov
dec
mov
stc
lock
and
inc
cmp
test
xchg
xlat
jne
loope
loop
jecxz
fidivl
or
out
call
loopne
test
in
xchg
jb
inc
push
add
icebp
sbb
mov
repz
jmp
imulb
testl
mov
xorb
scas
mov
inc
push
cmovno
rorb
xor
xor
loopne
xchg
push
mov
pop
adc
mov
xchg
or
stos
sub
js
mov
lods
cs
mov
pop
xor
inc
push
shrb
mov
leave
jne
inc
lret
adc
cs
jbe
or
jp
psllw
fisubs
out
xor
sub
mov
push
push
inc
inc
cmp
jge
out
xor
pop
and
pop
push
out
in
push
movl
adc
das
and
adc
fstpl
pop
mull
sbb
ret
sub
dec
mov
add
in
cmpsl
aad
pop
inc
test
sub
adc
pop
mov
nop
mov
pop
lods
jno
push
mov
lods
jg
ss
daa
popf
adc
iret
add
sub
loop
add
mov
lea
pop
push
push
fwait
cmp
test
mov
jmp
ja
shrl
fld
roll
rcrl
add
push
popf
xlat
fstpt
pusha
mov
jmp
fwait
clc
mov
pushf
pusha
sar
and
shl
shl
orb
push
outsl
das
aam
clc
loopne
loop
movsl
call
cmp
lock
sti
insl
push
inc
or
inc
jle
mov
and
lahf
aam
das
shlb
add
push
je
or
in
fstpt
mov
ret
pop
pop
jae
or
add
pop
loopne
call
decl
add
cmp
jg
cmp
jl
push
inc
xor
mov
out
jb
push
push
hlt
aam
inc
sbb
push
push
orb
xor
sub
or
inc
and
push
add
loopne
aad
loope
out
not
outsb
push
xchg
jmp
or
sbb
jmp
push
movsl
and
jg
call
push
adc
jne
add
pop
inc
test
sbbl
adc
push
pushf
push
push
mov
scas
inc
pop
inc
test
insl
mov
roll
mov
jne
ret
imul
jmp
and
add
sub
lds
std
mov
add
and
call
dec
sar
lcall
lods
xor
add
push
ret
loop
mov
xorb
stos
pop
xor
jnp
mov
or
xchg
rolb
jg
inc
dec
inc
mov
or
push
add
popf
lea
pop
sbbb
aad
dec
or
int3
les
adc
mov
cmp
test
xchg
rcll
jmp
in
aaa
push
sub
jg
inc
subl
clc
adc
sub
push
les
sbb
pushf
popf
aad
sbb
jp
popf
repz
push
jno
xchg
push
pop
dec
or
aam
orb
mov
mov
sbb
push
xor
sub
push
cmp
mov
jmp
push
pusha
mov
clc
mov
sti
or
pop
jp
push
lods
adc
loop
fbld
xchg
add
cmp
sarl
jbe
dec
adc
dec
loopne
fistpll
mov
dec
sbb
push
push
daa
divb
add
jne
inc
lahf
clc
insl
lock
cld
js
adc
cmp
dec
rolb
cmpl
mov
mov
jne,pt
add
pop
insb
push
testb
call
mov
decl
push
cs
push
outsb
or
imul
push
xor
and
adc
insl
jle
fnstenv
fwait
xor
push
sti
imul
es
push
xor
sbb
adc
call
testb
or
and
pusha
xchg
add
js
dec
and
jo
scas
jae
mov
cmp
cltd
push
push
xchg
or
shr
add
rcr
lahf
lea
pushf
cmp
mov
xlat
aaa
in
add
mov
in
add
or
dec
push
or
xor
pusha
mov
or
in
push
dec
insb
ret
jg
les
xor
inc
fmull
fsubp
call
mov
inc
mov
shlb
jo
cmp
mov
jo
ret
add
sub
mov
and
add
or
insl
or
call
pop
push
notb
test
jmp
ds
add
add
loopne
inc
call
movsb
std
cmc
fs
cld
loopne
mov
xor
adc
jne
push
dec
lods
push
pop
ss
andl
adc
sbb
hlt
add
in
adc
mov
pop
addb
or
add
enter
pop
addb
mov
add
js
push
mov
mov
pop
sahf
out
push
rorb
fisttpl
and
call
jbe
ljmp
inc
or
cltd
idiv
imul
mov
xor
ss
fmuls
cld
das
clc
lcall
cmpsb
xchg
stos
inc
mov
stos
shl
mov
pusha
sub
cmc
cmc
lea
cld
rcr
add
neg
call
add
push
call
fildl
cmc
pushf
cs
pusha
daa
dec
pushf
ss
add
loope
mov
fisttps
shrb
inc
stc
jmp
jecxz
add
lds
cmc
test
not
loopne
rolb
ficoml
pushf
mov
inc
aam
fdivr
adc
jo
sbb
inc
or
inc
push
pop
push
inc
dec
out
rcr
adc
movsl
loopne
cmc
pop
ror
xor
loopne
jmp
pushf
sbbl
or
xchg
fadd
sar
or
add
jl
sbb
mov
jmp
dec
cmpsb
mov
adc
and
mov
mov
outsl
add
inc
add
ljmp
cmp
xchg
out
add
sti
sbb
pop
xchg
clc
mov
and
cmp
ret
pop
push
jmp
add
sub
add
adcb
fucom
scas
pop
jmp
pusha
mov
pop
insb
cmp
call
sbb
sti
push
fisubrs
js
mov
inc
add
call
inc
push
andb
test
dec
dec
mov
or
cmp
cmpsb
mov
cwtl
mov
adc
rolb
jl
push
pop
rcl
add
repnz
clc
push
sub
push
xchg
pop
xor
jmp
mov
dec
in
cld
mov
lock
test
call
push
add
aaa
add
push
push
call
lea
add
sub
push
push
lock
mov
inc
scas
xchg
or
jp
pop
movsb
stos
das
push
dec
push
mov
mov
dec
xor
aas
add
sub
jmp
ret
cwtl
pop
push
jae
jno
add
xchg
sub
cmpsl
or
inc
xor
cmpsb
mov
cltd
xchg
lds
sahf
sbb
ja
mov
mov
ljmp
push
xor
mov
shll
and
or
xor
movb
xor
clc
shlb
pushf
xor
or
xchg
iret
repz
xor
push
and
add
pusha
push
and
adc
out
dec
or
fstpt
movl
rcrb
jle
mov
cmp
das
add
sub
inc
push
jl
sbb
movsb
fimull
inc
ret
or
dec
mov
cmp
mov
add
push
inc
jl
mov
icebp
adc
in
call
sub
mov
inc
mov
push
lahf
dec
rcrl
insl
aad
mov
outsb
jo
stos
scas
push
push
push
loope
std
jle
mov
pop
inc
insb
call
sarb
add
cld
enter
lret
cmp
sahf
ret
adc
mov
icebp
call
mov
mov
adc
inc
xchg
inc
add
mov
push
mov
jmp
les
mov
out
or
mov
call
mov
push
mov
push
mov
mov
mov
ja
xchg
sub
sti
add
pop
loopne
je
hlt
fwait
test
je
add
lock
shr
add
out
inc
mov
std
incl
add
jge
xor
lea
add
rorl
lods
gs
mov
sbb
push
xchg
cmp
cmc
outsl
aam
ret
xchg
or
mov
mov
in
or
in
sbb
aam
jns
std
push
mov
mov
cmp
dec
arpl
or
stos
jne
orb
loope
mov
adc
jp
pop
adc
bound
movsl
inc
adc
ret
mov
mov
mov
push
mov
mov
cld
test
mov
insl
fsubs
and
pop
out
mov
insb
sbb
cld
sbb
adc
or
jle
pop
sbb
mov
cmp
leave
ret
pop
lods
pop
add
jecxz
cmpl
push
std
in
push
push
mov
mov
fdivs
ja
jnp
outsb
mov
add
sbb
cld
pop
sub
mov
jne
mov
pop
and
mov
mov
or
jmp
mov
mov
jno
add
push
ret
add
cmp
cmp
sbb
or
ljmp
push
xor
push
arpl
mov
aaa
jno
lods
mov
cmp
mov
mov
jne
xor
lock
or
je
jmp
leave
adc
rolb
in
or
cmp
push
ljmp
stos
jno
out
sub
cmpsl
add
add
shl
cmp
jmp
mov
push
rorl
xor
or
and
mov
movsl
sti
dec
add
jns
es
push
mov
cmp
add
pop
sub
cmp
mov
insl
push
adc
adc
push
add
xor
xor
push
lock
aas
jno
mov
add
jno
or
out
pop
addl
jne
push
pop
outsl
decl
jmp
mov
mov
jmp
fimull
dec
lcall
xor
jp
and
pcmpeqw
dec
or
pop
or
jmp
testb
fnstenv
mov
mov
jp
js
jno
jo
mov
pop
jle
std
sahf
in
jne
jbe
push
sub
and
sbb
xchg
push
int3
add
stc
jne
rcrl
mov
je
scas
sub
jge
pop
sub
xor
loop
lock
push
idivl
push
or
pop
adc
pop
push
jns
fs
sti
test
pushf
in
insb
mov
inc
add
jp
fs
insb
mov
pop
mov
jo
mov
sbbl
push
inc
or
sub
add
sbb
sbb
fnstcw
and
stos
dec
jp
or
out
mov
pop
xchg
imul
pop
jmp
cmp
je
dec
dec
fnstsw
in
push
call
sub
lock
jne
pop
and
sub
pushl
inc
cmc
jp
pop
stos
add
mov
movl
in
mov
xchg
into
cmp
inc
mov
insl
mov
sbb
pop
mov
add
int
call
or
xor
pop
das
fcmovnbe
or
mov
testb
push
xor
or
pop
pop
push
subb
js
mov
mov
fdivrs
jae
test
test
jb
lea
ss
out
mov
out
xchg
bound
bound
xor
mov
ds
sqrtps
or
add
jbe
movsl
sbb
inc
adc
lea
lock
sub
mov
call
jmp
sub
ret
je,pn
cmp
je
pop
push
push
push
roll
pop
cld
outsb
popa
and
xchg
cmc
adc
adc
xchg
pop
lds
fcoms
clc
das
mov
addr16
jbe
lea
pushl
decb
mov
scas
dec
inc
pop
or
dec
cmp
fistps
jb
jmp
imul
add
lea
movsl
add
jnp
mov
lea
clc
pop
adc
cmp
adc
test
mov
dec
int3
movl
xor
pop
lret
enter
push
or
std
mull
pop
int3
sbb
pusha
cmp
insb
scas
mov
push
push
mov
mov
pop
adc
push
push
hlt
lods
call
enter
or
adc
int3
add
pop
cmp
xor
push
push
push
add
test
add
das
mov
mov
lock
lock
mov
hlt
fstpl
nop
jbe
mov
imul
ds
insl
aam
fsubs
das
jae
out
fsubrl
jo
gs
push
test
in
push
xor
lret
mov
rcll
push
jecxz
or
daa
push
movsb
callw
add
push
or
xchg
jo
inc
or
sbb
stos
xchg
in
lock
pop
jl
sub
sbb
push
hlt
and
or
adcl
enter
or
lods
lcall
test
pop
mov
xchg
iret
mull
aaa
sbb
fldl
inc
test
fstps
xor
ret
mov
inc
lock
shll
nop
loop
cmp
ret
pop
sbb
add
sbbb
xchg
mov
cmp
fsubrl
std
xor
in
push
jno
cld
loope
cld
das
outsl
out
inc
sar
or
sbb
jle
jb
push
push
push
push
insb
imul
sub
movsl
push
push
xor
add
jnp
sub
pop
or
mov
pop
xor
pop
addb
jmp
mov
pop
andb
test
xchg
and
mov
inc
mov
ds
mov
pop
pop
mov
dec
shll
cs
insb
sbb
sbb
mov
je
dec
dec
sbbl
push
jo
cmpsl
mov
cmp
outsl
jne
push
cmp
mov
inc
sbb
and
shrd
sub
lock
stos
mov
jo
andl
aad
or
fcoms
pop
pop
jb
mov
pop
sub
ja
loop
out
mov
movsl
aas
sbb
pop
in
scas
mov
fisubrs
in
push
test
cmpb
pushl
xchg
sbbb
inc
add
in
inc
icebp
inc
mov
jne
and
xchg
sahf
outsl
mov
lea
cmp
add
loope
repnz
xorl
shll
inc
push
lds
pop
sbb
and
in
mov
sahf
cmp
std
sbb
pop
xlat
mov
adc
dec
mov
sbb
dec
sbb
hlt
pop
test
outsb
inc
xchg
lock
ficompl
inc
or
repnz
inc
icebp
mov
jmp
divl
mov
or
adc
insb
int
inc
sub
subl
add
fisttpl
xchg
outsl
mov
fldt
mov
lea
mov
jbe
xlat
aad
in
xchg
push
cmp
fisubrl
xchg
aaa
xchg
je
scas
imul
popf
bound
mov
inc
mov
inc
movsb
movsl
inc
jo
mov
add
pop
test
sub
sub
push
rolb
dec
iret
pop
ja
xor
mov
aam
dec
aam
mov
sbb
sub
inc
dec
lcall
sub
mov
loop
lgs
push
and
pop
mov
mov
ret
push
adc
mov
push
test
dec
sbb
push
popf
inc
xor
mov
test
adc
adc
fsubl
mov
and
pop
push
and
push
mov
cwtl
shlb
pusha
xlat
faddp
fadd
ja
push
mov
in
bound
movsl
lret
fidivrl
xchg
dec
and
push
push
cmp
sub
adc
les
xlat
jle
mov
ret
mov
sbb
push
ljmp
cli
add
push
inc
mov
dec
pop
or
push
outsl
xchg
sar
and
fcmovne
inc
cmp
jbe
adc
test
or
sbbb
mov
add
pop
mov
push
push
inc
std
mov
cmc
sub
cmpl
cmpl
mov
or
pop
push
mov
dec
and
jbe
jge
jae
stos
xor
icebp
sbb
inc
push
sub
dec
je
sub
clc
xor
mov
call
test
adc
pop
adc
inc
adc
pop
pop
negl
call
in
push
inc
mov
inc
mov
loopne
mov
int
orl
ss
mov
xchg
cmc
push
adc
or
push
sbb
and
je
add
mov
cld
adc
std
push
pop
fisttpll
scas
movsb
adc
insl
out
in
je
xchg
sbb
je
push
into
xor
dec
xchg
xor
jge
pop
mov
insl
ljmp
push
or
push
ja
inc
push
lcall
imul
into
xchg
imul
adc
xchg
jmpw
pusha
push
push
popa
outsb
int
fldt
xlat
arpl
dec
shll
insb
outsl
inc
stos
mov
stos
pop
lods
sahf
lods
or
xor
sbb
push
mov
dec
popa
imul
push
push
fmuls
jo
fisubrl
cmpsb
imul
imul
inc
xor
sarl
xor
scas
imul
or
cmp
out
jne
inc
test
fwait
jmp
nop
push
pusha
test
movsl
cmp
test
push
popa
movsl
cmp
cmp
cmp
push
movsl
cmp
cmp
cmp
test
aas
sub
jns
mov
mov
test
push
inc
xor
dec
cmp
clc
inc
mov
inc
popf
pop
js
sub
sub
arpl
popf
popa
dec
test
into
into
dec
mull
and
arpl
in
in
insb
push
push
imul
in
insl
push
inc
outsb
and
jo
jno
jb
andl
jb
mov
dec
cltd
lds
or
fwait
pushf
popf
dec
add
inc
and
or
je
fisubs
scas
imul
lret
int3
pop
cmpsb
addl
int
into
in
out
lcall
jne
insb
imul
dec
add
test
test
mov
or
in
push
les
sbb
jne
jbe
adc
jmp
jns
je
lea
inc
test
jl
addr16
popa
jge
jle
jg
push
dec
les
xorb
push
pop
inc
add
insl
lods
and
mov
cs
sub
adc
loopne
jo
xchg
add
cmc
pusha
in
fiaddl
xorl
mov
pop
imul
lea
push
lock
and
push
bound
roll
add
lods
mov
sub
sub
repnz
mov
jbe
hlt
xchg
mov
add
int3
adc
aas
loopne
in
inc
repnz
xor
xchg
xor
fimull
push
lods
scas
shll
add
divl
jg
idivl
orb
add
and
mov
shlb
cmp
mov
enter
stc
aad
stos
mov
negb
cwtl
je
popw
mov
add
in
push
mov
lea
sbb
xor
lahf
sbb
in
jmp
sub
mov
inc
or
add
cmpsb
cmp
xor
xchg
dec
push
push
je
mov
mov
stos
inc
cmp
mov
pop
jmp
adc
dec
ret
ljmp
sub
add
outsb
mov
xlat
jns
aaa
mov
push
aad
xor
idiv
jns
mov
xlat
jbe
add
sbb
xor
xchg
jp
jno
insl
or
mov
adc
jnp
mov
sbb
push
and
jl
sbb
fisubrs
test
mov
adc
dec
bound
mov
and
inc
and
movb
repz
adc
push
add
adc
andb
outsb
shl
stos
pop
hlt
std
ja
xchg
nop
add
add
aad
call
pushf
jle
adc
sbb
pop
jle
bound
cmpl
mov
jne
andl
sub
xor
mov
add
sti
cld
arpl
mov
pop
add
sarb
leave
xor
adc
ds
ljmp
dec
out
mov
aas
mov
push
sub
ds
je
and
push
pop
xchg
gs
push
rclb
push
jmp
xchg
or
cmp
push
rolb
or
or
push
mov
or
cmp
or
les
test
dec
std
or
ficoml
add
scas
push
adc
ret
inc
xor
fdivs
inc
mov
add
mov
push
jmp
push
push
decb
mov
sbb
adc
lods
repnz
inc
in
mov
xor
lods
adc
js
push
inc
pop
incb
and
sahf
sub
dec
gs
mov
fldt
fmul
pop
fisubs
cmpsb
imul
loop
jne
jecxz
in
pop
mov
insb
aam
out
call
push
jmp
sbb
shll
aad
test
add
fld
adc
mov
lds
mov
cld
inc
pusha
sbbl
shll
shr
add
mov
sbb
inc
call
jge
adc
jmp
adcb
xlat
pusha
shrd
push
aad
sub
push
ja
xchg
inc
sbb
mov
pusha
arpl
pop
mov
sbb
in
aad
sbb
mov
jo
mov
cmp
mov
sbbl
push
push
cmp
add
adc
push
in
std
pop
push
push
and
pop
xor
addr16
fnstenv
mov
mov
pusha
lret
push
sub
aaa
mov
ljmp
jne,pn
cmp
and
or
xor
cmp
mov
or
jmp
jle
movb
adc
and
pusha
jo
loopne
adc
nop
jecxz
ret
lods
adc
push
xchg
mov
inc
out
or
mov
mov
inc
test
and
movsb
mov
cmp
pop
rcrl
loopne
xor
push
push
inc
lods
mov
add
xorl
and
adc
fisttpl
sbb
lods
mov
test
xor
xchg
imul
inc
xchg
cs
mov
pop
sbbb
mov
aam
mov
push
in
sbb
mov
je
jns
in
je
xchg
push
inc
pop
rcll
cwtl
enter
gs
adc
pop
add
add
push
push
aad
adc
gs
les
fiaddl
sarb
jb
cmpsl
add
xor
xlat
es
es
leave
leave
leave
push
gs
popf
jl
jmp
je
dec
xor
fildll
jne
push
xor
mov
mov
adc
in
jae
mov
and
sub
aad
adc
cmp
addb
in
mov
andl
ficoml
icebp
add
add
loopne
faddl
call
push
leave
push
cmpb
adc
mov
cmp
in
loope
pop
xlat
add
movsb
jmp
push
mov
cmp
cli
jmp
mov
mov
cmp
cld
dec
cmp
adc
dec
je
cmp
out
out
enter
neg
push
daa
scas
add
adc
insb
call
je
jbe
loopne
or
pop
lret
sar
xchg
cmp
clc
add
jmp
xor
iret
jl
icebp
mov
aas
pop
lock
push
ss
or
out
sub
xor
aaa
xor
jge
in
xchg
mov
mov
or
add
push
mov
shll
sti
ret
fstpl
cmp
pop
mov
mov
jmp
div
jmp
ret
dec
jae
fwait
sub
aam
aam
mov
mov
xchg
jne
notb
in
pop
jmp
mov
loopne
sahf
mov
xchg
jnp
pop
or
inc
inc
or
cmp
scas
or
xor
cwtl
pop
lods
sub
mov
call
ret
sbb
orl
jae
pop
rep
mov
add
incb
subb
xor
and
fcoms
push
xor
orl
hlt
sub
outsb
adc
jl
addb
not
lea
adc
inc
movsb
push
push
cmpb
jne
sbbl
pop
push
inc
xor
ljmp
dec
loopne
cmp
add
mov
sub
sub
mov
movb
mov
jne
push
inc
or
ret
dec
cli
mov
jo
rcrb
push
xor
mov
and
les
in
ss
gs
or
shlb
test
sbb
mov
sub
leave
add
insl
loopne
lods
dec
subl
cmp
testb
sar
inc
cmp
popa
pop
jnp
jmp
inc
sti
ret
sbb
add
out
mov
mov
sbb
lret
adc
adc
inc
loopne
jge
lea
xchg
inc
push
popf
pop
sub
sub
mov
add
inc
add
test
mov
pop
dec
rclb
in
adc
shrl
test
dec
aad
sub
mov
setp
mov
test
not
setl
setb
xor
decl
xchg
pushf
dec
cmp
xor
and
adc
mov
ljmp
mov
fsubl
clc
push
fnsetpm(287
mov
mov
outsl
adc
and
scas
mov
out
and
and
lock
lea
pusha
jmp
add
inc
popa
push
push
pusha
xchg
lea
lahf
std
lods
stc
aam
mov
ljmp
mull
js
mov
rcr
aaa
mov
rol
pop
pop
lods
leave
push
pop
cmp
pop
aas
jmp
repz
fucomp
mov
mov
daa
jns
and
mov
push
mov
lock
mov
pop
stos
jg
call
mov
dec
lret
lea
sbb
add
cmp
push
pop
aad
sub
and
pop
add
int
je
sbb
insb
jae
sti
mov
test
add
nop
xchg
cwtl
fwait
mov
add
test
cmpb
xor
adc
xor
xor
cmp
stos
mov
and
xchg
inc
push
inc
xor
or
jg
jge
mov
push
bnd
mov
rorl
or
push
call
push
add
adc
lds
xchg
imul
mov
cmp
insb
mov
neg
adc
jmp
push
push
call
shll
cmp
push
mov
add
ret
lds
or
dec
stos
gs
andb
jo
push
inc
mov
xchg
mov
push
ja
clc
sub
int
pop
aad
mov
enter
sbb
cmpl
jle
mov
add
in
add
pop
or
std
xor
add
into
bound
jge
push
xlat
dec
lea
sbb
shl
adc
jne
orl
outsb
xchg
mov
stos
inc
pop
mov
cmp
push
adc
fnsave
sbb
pop
mov
and
fs
ss
pop
or
xchg
incl
stos
leave
sar
pop
push
sbb
and
pop
sbb
ja
add
roll
inc
fdivrl
jl
inc
mov
add
mov
bound
jne
push
cmc
mov
xchg
push
pop
xchg
outsb
jl
shlb
enter
cmp
xor
loope
sub
xor
mov
in
add
addr16
cmpb
js
mov
jno
pop
xchg
push
stos
mov
andl
cmc
mov
sub
push
pushl
push
call
jmp
rcrl
data16
cmp
bound
sarb
js
lock
movsl
test
aaa
movsw
je
or
sbb
add
push
jge
sbb
shll
add
ficomps
testb
das
push
mov
push
stos
andl
cmpsl
outsb
sbb
and
sub
add
in
push
pop
push
fildl
xchg
call
sbb
dec
int3
and
cmp
add
add
pop
pop
sbb
xchg
and
addb
or
or
lods
fildll
sbb
test
sub
xor
ja
cmpsb
xchg
sbb
adc
je
hlt
or
call
push
inc
std
add
cmp
insb
xchg
xor
inc
insl
iret
adc
addr16
and
adc
push
pop
fdiv
adc
add
mov
push
jo
or
xchg
insl
or
mov
rorb
push
push
dec
push
ficompl
into
add
push
fstpt
mov
jl
imul
adc
or
aam
push
push
call
inc
sub
mov
cmp
push
or
lods
rol
sbb
push
fisttpl
insb
or
inc
ret
ret
pop
les
push
jbe
lds
test
sbb
dec
cmp
dec
xchg
add
or
rcll
pop
fiaddl
mov
inc
sbb
ss
sub
test
frstor
jb
xchg
and
mov
xchg
pusha
inc
mov
fistpll
sub
fidivs
push
pop
not
mov
fiadds
lret
lret
inc
push
or
jno
push
cs
or
mov
int
mov
sar
aam
sbb
mov
add
enter
test
test
jnp
push
sbb
pop
jmp
std
pusha
les
or
pop
push
xchg
gs
xchg
aas
popa
cmp
dec
aaa
mov
adc
or
adc
fldl
je
inc
adc
push
shll
test
rsm
xlat
xor
lods
lods
scas
pop
scas
pop
insl
xlat
xor
btr
mov
xchg
orb
fisttpll
xchg
adc
mov
es
adc
or
sbb
pusha
mov
pop
les
outsb
mov
enter
test
lret
pop
int3
scas
jmp
cmpsb
int
iret
sub
inc
rcll
mov
shrl
pop
aad
or
in
lcall
pop
fcmovu
aaa
fsubl
cmpsb
fwait
pushf
add
imul
mov
in
out
imul
mov
jo
daa
out
add
lock
push
repnz
push
mov
negb
idiv
bswap
xor
mov
sub
pop
push
mov
test
push
arpl
in
ficompl
popa
fmuls
decl
sbb
sub
push
fistpl
arpl
or
or
sbb
sbb
add
mov
popf
push
inc
decl
or
pop
xchg
add
xchg
push
push
xchg
or
inc
pop
jl
fistpl
pusha
bound
cmp
push
cmp
adc
add
add
aam
clc
adc
pop
mov
fs
sbb
add
pop
lret
jle
sbb
pop
jmp
inc
cwtl
mov
adc
mov
mov
add
sbb
call
mov
jbe
shlb
add
mov
mov
out
dec
mov
cltd
pop
inc
stos
mov
ret
decl
add
dec
jne
inc
mov
jmp
mov
xor
mov
mov
pusha
dec
or
or
subl
pop
push
cli
pop
jbe
push
xor
addb
sbb
clc
jo
pusha
dec
jbe
lods
push
sbb
or
aam
push
push
add
xchg
icebp
sbb
xor
orb
movsb
out
sbb
add
out
sbb
ja
js
add
test
add
enter
and
leave
jge
pop
xor
add
xorl
jge
call
add
jo
and
sub
int3
orb
add
loop
jbe
ret
andl
push
clc
insl
pusha
mov
scas
mov
test
jne
cld
inc
lds
cmp
xchg
dec
cmp
lret
cmpsl
orb
jl
add
add
loopne
xchg
mov
clc
pop
jne
je
mov
mov
ror
cmc
dec
dec
ds
push
adcb
cmp
jmp
repnz
add
and
xchg
out
push
outsl
xor
or
adc
iret
je
jne
outsl
mov
je
adc
pop
cmp
ja
lcall
or
jae
out
loopne
in
fbld
mov
cmp
pushf
inc
jmp
cmp
jb
sub
je
mov
pop
mov
add
or
dec
sbb
mov
jmp
mov
or
push
adc
sbb
sarb
add
aad
dec
and
sbb
add
in
or
pop
shrb
cmp
jae
mov
rcrb
and
lahf
cmp
sbb
lret
in
sub
inc
js
xor
mov
ficomps
xchg
loopne
shll
int3
mov
mov
push
push
pop
push
lods
je
mov
fdivs
dec
shll
xchg
xchg
xor
shll
mov
mov
xor
xchg
fdivrs
shll
mov
xchg
cmpsl
cltd
mov
lods
ss
lock
mov
test
xorb
movsb
lcall
mov
sbb
jne
clc
aam
aad
xchg
jecxz
jne
test
mov
je
fdivl
push
rolb
pop
filds
dec
roll
pop
loope
loop
stos
mov
test
shll
mov
adc
xor
orl
nop
push
stos
popf
lcall
lea
xchg
lods
addl
mov
pusha
sbbb
je
mov
or
cld
add
mov
mov
stc
add
in
push
jecxz
les
les
sub
sbb
in
loop
mov
fs
rcl
fdivrl
in
lods
aam
pop
mov
icebp
mov
jle
loopne
pusha
pop
aam
mov
call
stos
mov
dec
push
push
dec
dec
adc
push
sbb
push
ds
push
pop
mov
push
push
mov
mov
adc
adc
scas
pop
sub
inc
xchg
mov
cmp
inc
lds
pop
je
inc
ret
mov
mov
pushf
pusha
jmp
mov
add
sbb
mov
xchg
in
mov
push
sbb
sar
clc
cmc
and
jle
out
add
mov
call
mov
test
push
mov
inc
dec
sub
dec
outsb
mov
jo
popf
adc
js
jne
mov
push
lcall
js
sub
imul
mov
out
in
lcall
add
mov
jp
rcrb
test
ljmp
and
ja
lcall
adc
inc
push
inc
mov
call
pop
jb
insl
dec
fcomi
pop
adc
push
cmp
cld
jle
ljmp
jnp
push
push
or
lret
lret
out
add
pop
xchg
frstor
xchg
or
daa
cld
subl
sub
pop
cmp
jb
dec
pop
pop
inc
adc
mov
ja
lds
mov
sbb
mov
adc
bound
adc
jb
out
dec
mov
sbb
adc
xchg
jmp
push
mov
lea
mov
cmp
jne
xchg
loopne
jbe
inc
popa
adc
and
out
pop
add
xchg
clc
out
fstpl
or
out
xor
push
xor
lsl
scas
cmp
fcmovu
call
add
add
andb
add
repz
jecxz
pop
or
fdiv
cmp
push
pop
jecxz
adc
mov
lret
sub
in
inc
sub
loopne
loopne
mov
jmp
loopne
sub
or
xchg
test
nop
pushf
clc
push
lods
fmull
loop
cwtl
orb
aaa
out
dec
mov
mov
xor
pop
or
test
push
xchg
and
jne
push
or
rolb
adc
lods
fwait
sub
sahf
add
lahf
or
sbb
pop
mov
loope
andb
clc
jle
outsl
sub
or
ret
pop
insb
sub
dec
adc
mov
fimuls
loop
mov
sbb
fs
jp
or
outsb
or
ficomps
lods
jg
inc
pushf
int
fcmovb
js
and
aas
inc
hlt
xor
and
sbb
pop
call
mov
addb
dec
dec
in
into
in
scas
scas
xor
dec
stos
imull
icebp
pop
add
cs
insl
sbb
or
and
inc
aas
cmc
cmpsb
imul
movsb
dec
outsb
lcall
outsb
gs
movsb
mov
push
push
fstl
pop
test
jo
jbe
lods
gs
mov
dec
mov
sbbl
jae
enter
push
outsb
push
movsb
mov
mov
jae
add
das
roll
fidivrs
mov
xchg
aam
in
mov
movsb
fidivl
inc
mov
pop
xchg
adc
pop
nop
push
jne
push
into
inc
jno
xchg
or
cmp
das
xchg
inc
xchg
js
ss
jmp
scas
fcomps
fisttpl
push
mov
inc
loopne
loope
loop
adc
inc
push
imul
jne
or
or
or
sub
mov
mov
pop
mov
dec
dec
inc
shlb
std
aam
inc
inc
jle
mov
fdivrs
mov
mov
push
orl
dec
cmp
xor
clc
outsl
adc
fldt
int3
clc
mov
xchg
sbbb
push
push
inc
pop
call
aad
and
pop
xchg
push
dec
dec
in
or
je
lcall
sbb
xlat
add
movd
sbbl
bound
scas
sbb
push
inc
adc
orb
sbb
adc
add
adc
mov
dec
jae
adc
xor
inc
push
and
pop
call
into
idiv
lcall
mov
mov
push
imul
popa
xor
add
inc
adc
and
outsl
je
xor
loopne
in
sub
ss
fcomps
scas
jne
cltd
jle
xchg
popf
cmp
loop
ret
stos
push
pop
pop
loope
adc
jae
clc
xor
shl
subb
adc
xchg
push
ret
call
jne
and
outsl
adc
js
pop
int
push
push
faddl
cwtl
push
call
cltd
call
bound
adc
push
pop
add
push
xchg
sbbl
xor
les
sbb
or
adc
cmovbe
mov
test
sbb
adc
adc
xor
or
sbb
sbb
pushf
add
sbb
jns
rorb
cmp
lcall
push
and
push
je
push
sbb
add
repnz
cmp
push
cs
popf
or
pop
add
and
js
clc
adc
add
leave
sub
pusha
shll
inc
icebp
sub
addr16
loop
sub
pop
dec
inc
jo
test
dec
mov
pop
and
mov
dec
repz
inc
popf
cmp
sbb
stos
and
call
sbb
add
inc
mov
push
dec
outsb
adc
or
sub
or
stos
push
mov
mov
jl
mov
or
adc
adc
pop
or
pop
insl
sbb
pop
pop
or
sbb
mov
push
data16
adc
sbb
jne
mov
addr16
cmp
sub
ret
orb
or
adcl
mov
inc
int
lods
call
or
fwait
push
aam
adc
fimull
test
push
or
loopne
mov
cmp
sbb
rcl
sub
shrb
aam
aam
sub
rcl
aad
int
pop
fwait
jecxz
jp
fdivs
lcall
xor
pop
lcall
xchg
xchg
xchg
loope
mov
dec
xchg
loop
jecxz
in
pop
adc
ja
push
or
addl
xchg
jo
lcall
xor
shll
lret
sbbl
xor
out
call
dec
mov
movsb
mov
stos
test
lods
loope
rol
add
hlt
mov
xor
loop
dec
adc
mov
and
inc
dec
or
hlt
loope
fdecstp
lcall
adc
fstl
jb
jne
fxsave
call
sub
js
jo
mov
mov
or
hlt
repz
mov
arpl
adc
jmp
push
jbe
aaa
pop
imul
pop
jmp
lea
ss
or
bswap
inc
and
scas
int3
sbb
pusha
or
or
fnsave
pop
lea
jno
push
push
add
sbb
pop
mov
cli
or
push
xchg
daa
pop
inc
hlt
cmp
popa
add
aam
mov
cmp
out
aad
into
and
adc
xor
fsubrs
loope
movsb
cs
pop
sbb
cmp
popa
outsl
dec
jbe
or
add
into
in
push
ror
std
repnz
adc
push
sahf
inc
loope
adc
and
imul
inc
popa
arpl
adc
sub
loopne
loope
imul
jne
and
jae
xor
pop
jmp
cli
sub
aas
sbb
pop
fisttpll
lock
icebp
pop
repnz
inc
lcall
and
cmpsb
imul
stos
pop
sbb
icebp
xor
xor
xor
pop
jo
es
inc
add
ds
mov
xorb
sub
out
pushf
pushf
pushf
mov
pushf
pushf
pushf
mov
daa
popf
pushf
rol
ret
leave
leave
leave
ret
je
leave
enter
lret
popf
popf
lret
adc
dec
int
into
push
int
pop
mov
fiaddl
ljmp
push
jo
add
in
push
mov
cld
ficoms
js
mov
or
les
repz
jmp
repz
loopne
addr16
adc
and
negb
mov
insb
nop
add
out
rcll
jno
mov
sbb
pop
mov
aam
cmp
jae
imul
arpl
imul
cmp
lcall
popa
fdivs
test
daa
xor
and
stos
adc
mov
sub
imul
dec
fnstsw
loope
shll
out
addr16
xlat
pop
cwtl
cmpsb
imul
inc
test
out
pop
out
inc
cmpsb
imul
jbe
sti
cmp
cmp
in
lret
aaa
clc
pop
and
lret
mov
mov
or
push
loope
mov
rcrb
mov
inc
pop
cmp
inc
inc
clc
pushf
push
push
push
cmp
add
xchg
fmuls
call
or
mov
out
push
data16
movsb
sbb
inc
dec
stos
dec
les
cmp
xor
dec
xor
dec
adc
das
push
and
scas
add
shrb
loope
xchg
not
mov
xor
jle
pop
or
clc
and
or
addr16
lea
das
imul
or
aad
imul
fs
adc
mov
add
dec
inc
push
cld
call
inc
mov
jmp
aaa
adc
inc
xchg
mov
and
jb
push
nop
sub
test
add
aad
add
dec
push
dec
add
add
cmp
add
lds
jns
xlat
sub
roll
xchg
or
mov
and
das
mov
jo
add
in
pop
add
add
add
es
or
mov
xor
push
icebp
nop
mov
push
sub
aaa
ret
add
dec
dec
gs
cmp
aas
push
xchg
sbb
mov
in
inc
jl
loopne
gs
add
int
fsubr
jmp
adc
je
lods
add
or
inc
and
and
sbb
aam
jno
cmp
fisttpll
or
push
push
je
jae
pop
int
push
add
pushf
jmp
push
xchg
icebp
test
inc
pop
lds
call
pop
mov
out
inc
add
das
xor
add
xchg
loop
cli
in
shll
lock
or
sbb
inc
icebp
push
lea
inc
jno
pop
psubsb
dec
lock
mov
mov
in
cmpsl
std
push
mov
test
mov
arpl
mov
jmp
pop
les
or
add
mov
sahf
stc
pushl
mov
dec
inc
inc
mov
xor
and
add
mov
mov
inc
push
add
adcb
lea
fs
in
mov
add
or
push
lock
int3
cmp
movsl
pop
ja
shl
retw
push
or
mov
popa
test
arpl
add
and
fcomp
loopne
sub
sub
add
inc
cld
mov
and
decl
les
cmp
mov
aas
js
sbb
cmpl
inc
jg
scas
das
orw
or
cltd
sub
mov
pop
mov
fcoms
insl
cmp
pushl
and
jno
cmp
sub
dec
pop
cmp
out
addl
ljmp
fisubrl
pop
adc
mov
inc
mov
std
idiv
or
add
es
je
add
jne
mov
pushf
or
inc
shrl
adc
mov
comiss
repz
jbe
cwtl
dec
pop
aaa
push
clc
call
testb
es
sbb
and
push
sub
adc
pop
jb,pn
cmp
test
dec
in
push
hlt
add
mov
nop
sbb
and
adc
and
pop
push
fcmovne
jmp
pop
mov
and
or
ret
dec
sbb
cmp
add
popf
jne
sbb
pop
mov
push
or
add
adc
sub
and
lods
andl
jle
xor
pop
cmpxchg
jmp
mov
mov
cld
nop
push
popa
js
inc
pop
jg
mov
nop
scas
hlt
or
shr
mov
and
int3
mov
jmp
adc
les
adc
test
shr
sti
int
rclb
inc
fnstcw
iret
jecxz
push
cld
incl
add
lcall
xor
jo
jl
imul
add
mov
rcl
ljmp
lcall
xlat
mov
sbb
xor
lcall
jne
shll
add
adc
add
fnstenv
xlat
xor
jbe
add
mov
mov
xor
call
je
push
addr16
push
sub
xor
cmp
push
pusha
mov
xlat
je
movsb
xchg
das
mov
cmpb
dec
shll
inc
cmp
cmp
xor
pop
cwtl
test
clc
imul
in
into
ret
cmpsb
jmp
pop
pop
inc
add
sub
pop
imul
movl
lock
lcall
xchg
mov
xchg
mov
jo
cltd
scas
incl
pop
xor
sbb
add
rorl
xlat
add
fldenv
push
lock
pop
rcrl
pop
movzbl
or
or
xchg
fnstsw
add
pop
add
divps
bound
in
pop
jbe
jne
icebp
add
js
inc
into
sahf
fisttpll
jl
xor
pop
push
icebp
out
fwait
je
add
cmp
add
outsl
push
inc
mov
and
or
add
mov
enter
sbb
xchg
or
loope
mov
adc
lret
pop
mov
adc
xchg
mov
cmpl
sub
pop
xlat
or
mov
cld
dec
push
pusha
aaa
or
lcall
add
mov
cmpsb
add
sub
rorb
lahf
ja
cmpb
add
gs
push
push
push
fs
jo
jg
inc
gs
outsl
fs
dec
add
xchg
popa
outsb
fs
imul
add
mov
xor
dec
jae
ss
cmp
jb
xor
dec
inc
fs
mov
push
add
dec
imul
pushf
cmp
add
and
jb
imul
cmp
addr16
push
or
jae
aaa
mov
imul
jne
adc
pop
pop
inc
cmpsl
adc
daa
imul
jae
pusha
filds
jno
dec
popa
jae
inc
cmp
pusha
jmp
dec
jne
push
test
gs
pop
mov
inc
pop
dec
jbe
sti
ret
popa
insl
add
push
mov
inc
inc
imul
fldln2
popa
outsb
ret
gs
and
int
sub
jp
inc
das
fadd
xchg
jecxz
mov
xorb
insl
jo
mov
cmp
push
outsl
andl
mov
insb
aaa
inc
jns
flds
jle
filds
insl
xor
aad
push
or
ret
jge
fstpt
test
jp
lds
pop
stc
mov
or
add
outsb
push
inc
insb
mov
cmp
push
adc
mov
inc
outsl
jne
std
or
inc
mov
leave
push
or
addr16
clc
packssdw
push
dec
inc
dec
ja
pop
xor
cmp
arpl
lods
inc
jnp
xchg
add
arpl
xchg
or
jo
mov
mov
lds
push
add
add
outsl
imul
imul
out
ja
jae
pop
in
or
jmp
cmp
jmp
insl
xor
push
fstpt
aas
xor
inc
pop
push
add
shrd
push
dec
cmovns
mov
inc
js
frstor
push
pop
pop
add
mov
sti
in
add
mov
ja
mov
jnp
mov
add
pop
or
or
xor
cmp
data16
push
cmp
lock
push
mov
xchg
pop
fcmovnu
mov
bound
outsl
push
or
adc
rol
loope
jbe
dec
pop
test
add
jo
dec
rorl
jmp
pop
xor
insl
cmpsl
xor
js
add
dec
cmpsl
add
jo
test
aad
jno
mov
xchg
punpckhwd
inc
popf
and
push
xchg
jmp
sbb
pop
jo
aaa
cs
dec
xchg
enter
xorl
mov
les
sbb
popf
xchg
pop
sbb
push
popa
jbe
adc
sbb
out
adcl
jb
insl
dec
inc
dec
push
dec
mov
add
insl
insl
imul
bswap
mov
gs
lods
pop
fldt
inc
inc
pop
or
push
imul
ja
add
insb
or
add
adc
or
push
sub
inc
cmp
pusha
aaa
popf
bound
sbb
idiv
inc
pop
imul
jbe
pop
mov
mov
and
lcall
mov
loope
inc
dec
enter
imul
cwtl
movsb
sbb
outsl
cmpsb
mov
push
fwait
jns
ret
xchg
sub
int
sub
call
in
inc
hlt
add
aaa
inc
je
roll
imul
aas
aam
dec
jle
jp
pop
dec
sbb
les
lds
in
rcl
dec
cmpb
adc
mov
push
inc
js
fucomp
daa
xor
inc
dec
cmpsl
push
fadds
ljmp
push
add
push
dec
ja
pop
mov
adc
sub
std
iret
test
mov
aad
lock
sub
leave
loope
sub
fs
adc
push
jne
sub
mov
lret
pop
xchg
out
or
xor
xchg
fidivs
fsubl
mov
sub
push
sbb
mov
mov
mov
ljmp
push
push
xchg
or
xorps
push
lds
mov
gs
fistpl
pushl
and
stos
mov
sbb
jg
test
push
xchg
iret
ja
daa
mov
cld
lcall
cmp
mov
mov
mov
and
insb
out
incl
mov
pop
fbstp
xor
js
sub
sub
mov
pop
lea
or
aad
cmp
sbb
lahf
imul
repz
mov
sti
jmp
jg
nop
es
xor
jnp
stos
pop
xchg
outsl
enter
mov
addl
pushl
jl
je
sub
dec
jp
mov
inc
mov
inc
in
add
std
fdivrp
inc
push
inc
push
fistps
js
cmp
cmp
call
cld
jmp
dec
imul
dec
lds
inc
repz
movsb
out
push
clc
shlb
adcl
lahf
mov
gs
mov
fbld
pop
push
enter
mov
cs
inc
or
scas
scas
test
jge
pop
add
inc
mov
lock
add
scas
inc
inc
rorb
sub
outsb
in
xor
sbb
push
cmp
test
sbb
arpl
test
mov
not
jl
call
incb
hlt
xorl
cmc
enter
daa
pop
in
or
scas
orl
dec
inc
cs
aaa
ljmp
and
xchg
lret
gs
dec
cmp
icebp
xchg
out
fldcw
jp
std
push
push
and
adc
decb
fs
aaa
add
jbe
inc
lods
mov
aas
fnstcw
add
lcall
or
sbb
push
aaa
dec
sub
scas
loop
xor
xor
xchg
add
pop
daa
pusha
push
add
pop
add
add
sti
sbb
sbb
adc
pop
jg
or
jg
mov
or
ja
xor
call
add
or
mov
dec
adc
push
push
sub
imul
sbb
mov
lret
pop
dec
ljmpw
xor
or
pushf
jl
ljmp
outsb
leave
and
insl
cld
mov
mov
sub
adc
pop
repnz
bound
dec
push
mov
mov
jne
jg
mov
push
pop
cmpsb
mov
or
std
jle
jo
sub
fists
lcall
fildll
jns
aam
adcb
push
push
mov
arpl
negb
pop
push
push
out
cmpsb
or
clc
jne
jl
push
ret
lock
pop
cmpsb
outsb
mov
insb
sbb
mov
call
mov
inc
xchg
fisttpll
test
ljmp
sbb
mov
inc
jge
lock
arpl
sub
je
sbb
sti
cwtl
in
inc
arpl
sub
jmp
andb
repz
pop
fsubrl
lea
jg
mov
adc
add
jnp
in
out
decl
push
shr
sbb
mov
rorl
sbb
stc
imulb
pop
in
call
cmp
insl
ret
mov
xor
jo
fdivrs
cli
lcall
cmp
filds
sbb
out
leave
repnz
xor
lock
add
add
fucomip
aas
movsb
lcall
lea
movsl
push
test
sub
pop
test
iret
sub
and
and
cmp
enter
xor
xor
aaa
fisttpll
xor
add
aaa
xor
cmp
dec
out
mov
sti
push
dec
daa
mov
les
mov
mov
in
out
cmp
sub
and
and
and
fnsave
jl
jnp
mov
pop
sub
sub
aas
fwait
push
dec
in
adc
fists
js
adc
adc
addr16
and
or
pusha
adc
aas
clc
mov
js
mov
jl
cld
push
hlt
add
push
inc
add
adc
nop
daa
xor
sbb
aas
cmp
inc
add
pusha
sti
or
adc
shlb
in
hlt
xor
sbb
mov
xor
or
add
pop
add
add
jbe
mov
lahf
and
inc
or
and
pusha
adc
xchg
xor
inc
and
inc
add
add
lahf
dec
and
lahf
jnp
shrl
mov
jl
xor
adc
cmp
scas
sbb
and
enter
lahf
push
add
cmp
and
or
xchg
add
pop
jmp
jno
add
pushf
nop
xchg
or
xchg
xchg
adc
and
or
movsl
cmp
push
fwait
les
push
or
dec
movsl
addl
jnp
rolb
dec
cmp
lods
ljmp
mov
mov
call
scas
out
xor
mov
sub
or
fmuls
das
mov
in
insb
inc
add
sbb
push
in
test
cmp
push
mov
jnp
pop
fstpt
sub
ret
fstpl
je
inc
push
mov
popaw
int3
adc
and
subb
scas
inc
cwtl
leave
jle
call
inc
xchg
fidivrl
pop
jae
or
and
inc
jbe
push
mov
je
push
lds
xchg
sti
xchg
call
sbb
and
adcl
mov
stos
sub
enter
or
push
jp
mov
ss
jge
dec
mov
push
je
mov
push
push
ltr
daa
fmuls
mov
adc
mov
cmp
adc
mov
sbb
fstpt
gs
mov
push
rcrl
out
je
inc
fildl
and
ret
add
sub
mov
add
les
fbld
rol
and
mov
push
push
push
xchg
pusha
cmp
jbe
push
bound
xor
xchg
add
and
mov
jmp
ret
dec
adc
loope
pop
mov
pop
cmp
sub
ret
int
adc
out
push
rcrb
leave
inc
lds
jbe
mov
sbb
cmpsb
test
gs
mov
inc
sbb
ret
xor
out
push
pop
sub
jne
jne
add
adcl
mov
add
xchg
loopne
aad
sub
or
mov
adcb
push
push
push
rcrl
pop
pop
pop
sahf
mov
sub
add
dec
inc
inc
test
or
mov
or
jmp
add
fiadds
sbb
call
push
jbe
or
sub
test
test
mov
clc
adc
adc
pusha
out
mov
xor
cmp
pop
mov
call
cs
pop
and
mov
lret
mov
push
inc
add
lea
loope
jecxz
xchg
insb
xor
xchg
lret
xor
nop
adc
stos
clc
xor
push
cmp
or
mov
add
sub
mov
adc
pop
call
and
andl
test
jg
xchg
cmp
ja
sbb
pop
rorl
das
sub
jbe
test
sbb
mov
inc
add
add
push
test
mov
int
cmp
iret
push
into
cld
into
sti
fistl
push
mov
stc
js
shrb
pop
aaa
fsubs
sub
mov
jmp
push
push
adc
scas
pop
shlb
add
mov
adc
cmp
test
je
mov
jnp
clc
jnp
add
jmp
sbb
push
add
cmc
pop
jmp
movsb
jecxz
jbe
sbb
inc
mov
ja
push
push
test
inc
cmp
sbb
xor
push
fidivs
add
pop
and
jno
outsb
sbb
dec
add
lahf
pop
adc
cmp
fsubrl
cmp
jmp
add
adc
mov
orb
out
testl
test
call
movsb
add
je
inc
inc
scas
xor
lock
jg
mov
ret
pusha
jne
inc
sub
push
je
mov
out
inc
je
xor
fidivs
cwtl
or
cmp
aaa
outsb
adc
add
push
mov
shl
mov
add
sarl
or
mov
or
xor
sbb
jae
orb
mov
add
in
cmpl
mov
xchg
in
ficoms
jmp
inc
jmp
jmp
or
dec
mov
jne
mov
push
popf
lods
in
mov
orl
and
sbb
enter
mov
xlat
jmp
inc
roll
mov
jne
adc
clc
inc
xchg
add
mov
sbb
push
mov
clc
repz
fcoms
rcr
scas
sub
mov
mov
dec
clc
jle
xchg
xchg
push
cld
adc
push
lds
lea
testb
fistpl
cmp
filds
xor
xor
cmp
mov
imul
jmp
fcomp
mov
cmp
out
pop
movsb
add
test
mov
sbb
scas
and
mov
cli
mov
xchg
mov
sub
repnz
repz
negb
add
mov
and
sub
lret
inc
icebp
fsubrl
push
adc
dec
shll
xor
pop
shll
pop
imul
call
inc
je
decb
sub
fldenv
addb
sbb
mov
out
in
cs
xchg
mov
mov
in
xchg
mov
iret
mov
push
nop
mov
adc
xor
mov
mov
clc
inc
dec
add
aaa
fstps
mov
adc
or
push
adc
addb
insb
cvttps2pi
adc
or
add
or
push
add
addb
jbe
adc
jmp
xchg
dec
mov
sub
imul
add
or
push
xor
push
mov
rolb
hlt
mov
test
ror
std
movb
xor
mov
mov
mov
sahf
mov
add
mov
inc
popf
in
inc
push
mov
rorb
push
mov
push
mov
mov
pop
insb
mov
jl
adcb
in
xchg
mov
inc
rcrb
mov
and
adc
popa
jno
sbb
or
dec
mov
aam
cmp
testb
movsb
insb
xor
out
push
jne
push
push
push
insb
push
push
xor
jnp
mov
cmp
add
pop
xlat
cmp
push
insl
cmp
mov
sbb
aad
sbb
inc
and
xor
loopne
mov
xor
enter
and
jmp
xchg
mov
xor
cli
mov
pop
push
or
jne
push
mov
jmp
mov
mov
call
sbb
subl
jle
shl
pusha
int3
and
xchg
inc
les
repz
inc
adc
orl
or
dec
cld
cmp
fldl
inc
roll
rorb
add
jmp
out
and
add
shl
add
mov
add
xchg
jbe
and
dec
xlat
popf
xor
pop
add
cmp
dec
xlat
dec
add
mov
int3
aam
cli
cmpsb
imul
cmpsb
imul
cmpsb
imul
scas
cmpsb
imul
les
movl
jmp
xchg
and
jo
faddl
movsb
jmp
jbe
insb
adc
add
xchg
jmp
xchg
pop
addb
mov
pop
inc
sub
sbb
xchg
and
dec
and
or
add
sbb
mov
pop
adc
add
adc
mov
pop
dec
adc
add
stos
pop
xchg
ret
scas
out
notb
cmp
dec
outsb
jo
add
mov
dec
gs
je
add
add
or
cmp
rolb
dec
stos
inc
adc
push
add
les
popa
bound
inc
adc
pop
js
repz
and
add
inc
leave
je
xchg
fstps
push
sbb
imul
ret
fisubrs
add
sbb
jo
xchg
mov
pop
jae
je
je
loopne
cs
scas
test
or
jae
push
lret
fdivs
cmpsl
setb
adc
imul
in
inc
orb
pusha
les
cltd
cmp
arpl
stos
add
mov
ljmp
fsubs
mov
popa
je
sub
add
and
add
add
int
sub
inc
dec
add
addb
jns
jl
cmpsl
rcll
jg
mov
addr16
lods
fdivrl
adc
leave
push
aad
out
add
xor
pop
adc
sar
ror
outsl
mov
jmp
dec
rcpps
sbb
jne
daa
cmp
mov
sbb
cmovb
mov
pusha
or
push
add
xchg
nop
subb
mov
jmp
mov
icebp
jle
or
sbb
nop
xchg
add
cltd
idivb
mov
mov
cmp
xlat
ja
mov
jg
sub
mov
jecxz
fdivs
mov
sbbl
dec
mov
in
je
in
sbb
std
decl
cld
mov
ljmp
cmp
mov
xchg
mov
dec
push
push
add
mov
leave
int3
lahf
loopne
ja
pusha
into
push
into
pop
xor
cmp
mov
cmc
mov
jno
xor
push
inc
movsb
imul
sub
sarb
xchg
enter
cmp
mov
shll
push
stos
add
pushl
inc
loopne
and
push
outsb
test
stos
mov
and
xchg
pushf
or
pop
or
aaa
inc
imul
std
in
dec
inc
dec
dec
dec
push
dec
add
dec
inc
push
inc
push
inc
sete
out
test
xchg
scas
pop
sbb
clc
idivl
jg
cli
add
xor
xchg
pop
push
jnp
decl
dec
cld
mov
fistl
ss
jmp
movsl
or
loopne
pop
es
incl
adc
cltd
loopne
dec
mov
out
jne
orl
pushl
call
push
das
xchg
out
loop
jp
push
mov
adc
sbb
xchg
cmp
lcall
xor
sbb
mov
out
cltd
push
fmul
jmp
xor
xor
out
and
clc
and
incl
repz
adcl
faddp
in
shrl
bound
jle
ljmp
aad
and
ja
adc
mov
lods
test
push
pop
push
xlat
cmpsb
repz
stos
inc
call
xchg
xlat
push
icebp
push
lock
std
std
mov
xor
inc
into
add
lret
bswap
inc
and
mov
pop
gs
repnz
sbb
jge
dec
in
push
dec
inc
cli
and
aam
pop
enter
shlb
fwait
xchg
lcall
dec
add
adc
in
xchg
push
jbe
test
xbegin
jmp
jl
faddl
pop
push
adc
outsl
ljmp
push
ret
mov
stos
lcall
and
and
mov
pushf
xor
adc
or
mov
sub
or
inc
pop
add
xchg
fwait
aaa
js
stos
mov
cmp
shlb
mov
pushl
fwait
cmp
jp
stc
mov
les
cld
push
and
mul
mov
sub
xchg
dec
movsb
dec
lock
ljmp
fistpll
lock
mov
call
fildl
call
and
cmp
cld
jno
adc
mov
adc
inc
aaa
cmp
inc
sub
in
imul
movsb
and
jmp
push
in
aaa
xchg
pop
cmp
sub
ljmp
sub
push
aad
add
mov
das
adc
pop
movsl
mov
mov
pop
ret
sub
dec
test
cmpsl
into
xchg
into
adc
cmp
imul
mov
leave
cmp
mov
pop
lea
jecxz
pushf
adc
scas
jb
adc
mov
lret
jg
out
add
hlt
dec
inc
mov
inc
or
xchg
and
iret
into
fs
jg
cmp
call
insb
sub
cmp
push
hlt
adc
sbb
cwtl
leave
lret
stos
nop
imul
sub
stos
sub
outsl
cmp
mov
jecxz
sahf
into
outsl
add
xor
jg
insb
lods
repnz
idiv
arpl
mov
rcl
sbb
test
inc
mov
lcall
test
pop
stos
jecxz
mov
mov
xchg
cmc
jmp
test
jnp
adc
les
push
rol
sub
or
shrl
jge
xchg
push
jo
in
dec
in
jno
pop
push
shr
das
adc
test
and
xchg
add
lahf
add
or
mov
xchg
cs
mov
loop
jo
sbb
inc
insl
mov
ja
xchg
jle
jmp
jge
insl
xor
xchg
clc
test
in
lods
jge
sbb
dec
aaa
or
incb
and
aam
pop
insl
ljmp
lods
incl
and
cli
add
xor
push
bound
test
lock
mov
scas
mov
inc
insl
sub
inc
in
xchg
ljmp
xchg
and
jl
cmp
clc
inc
lcall
mov
xlat
jge
jns
cltd
pop
movsl
cmc
push
int3
cmp
sub
sbb
jg
cmp
call
inc
test
fidivl
mov
addl
ud1
cld
ss
insl
pop
stos
insb
mov
jg
mov
insb
das
ss
xor
mov
out
jns
pop
leave
aas
aad
jg
mov
test
mov
lret
push
movsl
fisubrs
add
jae
scas
enter
sar
jg
lea
stos
mov
arpl
adc
fbld
xchg
aad
ffreep
das
lret
and
mov
out
mov
jl
ja
incl
push
mov
loope
and
sarl
test
fwait
pop
decb
js
insb
or
dec
mov
xor
and
mov
adc
push
sub
out
clc
mov
adc
test
jns
orb
jg
and
push
cmc
ror
lret
in
add
into
imul
pop
pop
adc
decl
aas
cmp
icebp
xor
dec
ja
into
jb
xor
xchg
outsl
pop
jecxz
mov
push
rcll
sti
lret
and
push
ret
pushl
mov
push
aaa
loop
xchg
das
inc
sub
or
adc
das
outsl
xchg
lods
scas
das
stc
mov
mov
into
movsb
mov
loope
aam
into
ret
mov
call
ret
jg
and
decl
jns
or
mov
xor
pusha
hlt
pop
mov
outsl
cld
mov
inc
push
and
aam
pop
ret
or
adc
test
lcall
movsl
add
shl
inc
out
repz
mov
scas
lret
xchg
cmp
loop
gs
lret
mov
dec
insl
xchg
mov
ret
js
pop
lret
decl
add
iret
dec
std
and
vmwrite
mov
aas
dec
int3
cmp
mov
and
push
aam
push
lret
insl
out
sub
sub
push
or
dec
add
sub
inc
push
mov
xchg
scas
adc
jb
into
jp
ret
push
adc
scas
aas
jl
sbb
dec
stos
dec
int3
inc
ljmp
mov
dec
mov
jo
sub
sbb
jmp
push
daa
or
sub
xchg
adc
add
test
jecxz
jne
mov
sbb
pushl
and
xchg
xchg
stos
std
out
sbb
test
aas
cmp
and
pop
add
repz
iret
arpl
das
cmpb
call
dec
and
mov
pop
adc
mov
fcomip
dec
outsl
aam
ret
stos
aaa
outsb
out
in
repz
clc
test
sbb
inc
jmp
xorb
jmp
pop
push
push
mov
jle
jbe
mov
ret
jns
bnd
mov
xchg
push
into
mov
jb
dec
mov
loopne
ljmp
ret
addr16
movsl
add
add
out
xchg
adc
iret
daa
das
cmc
das
pop
ret
dec
es
pop
jne
mov
add
mov
fcomi
movsl
cmp
cmp
repz
into
fidivrs
mov
adc
divb
xor
into
push
mov
outsl
lcall
or
test
jg
rcll
into
and
iret
push
pop
pop
jle
fwait
mov
ds
xchg
test
push
xchg
popf
xchg
stos
mov
pusha
stc
push
sub
fstps
ret
into
fidivrs
lcall
cmp
movsl
and
mov
cli
lods
inc
std
push
enter
dec
mov
call
jl
cmp
aad
dec
mov
xlat
jb
pop
mov
sub
movsl
cmp
sub
xor
cs
es
mov
inc
test
or
or
xchg
dec
jne
outsl
mov
inc
mov
fwait
mov
popf
popa
ret
push
pop
mov
and
push
mov
popf
cli
pop
lods
lcall
jp
cmpsb
jne
lahf
std
mov
adc
fsubrs
ljmp
mov
pop
xchg
in
xor
mov
push
sbb
cs
into
or
fisubs
sbb
mov
lods
push
pop
scas
addl
mov
add
fidivrl
xchg
arpl
mov
ret
mov
jg
and
std
and
ret
cmpsl
loopne
mov
clc
decl
ret
in
call
insl
aam
push
int3
fisubrs
adc
test
xchg
push
xchg
cltd
popa
or
push
data16
dec
scas
xor
loop
aam
mov
js
add
jge
adc
dec
pusha
dec
cmp
adc
aad
add
jnp
and
xchg
aas
adc
out
movsl
inc
jmp
int3
gs
cmp
cmpl
mov
push
sbb
cmp
adc
and
mulb
ljmp
psubusb
adc
stos
and
jne
or
add
jbe
adc
ljmp
or
cs
push
or
push
adc
adc
and
and
add
into
pop
jne
out
cli
incl
jne
rorb
jo
ror
test
pop
mov
or
jno
xchg
stos
xor
imul
sub
push
sahf
inc
incl
mov
leave
test
fcompl
inc
adc
icebp
mov
ret
ret
icebp
mov
adc
mov
ret
ja
mov
ret
rcrb
sub
loope
pop
xor
and
in
jne
in
sub
shlb
cld
lret
push
adc
les
cmp
out
incl
js
add
push
in
push
mov
stos
lods
add
incb
lock
pop
adc
les
jp
xlat
sahf
in
call
ret
jns
rolb
lret
lret
and
push
mov
push
rolb
pop
in
js
dec
cltd
and
aam
push
leave
call
enter
test
int
and
dec
clc
add
add
lcall
movsl
hlt
jne
mov
call
add
jg
adc
inc
pushf
test
cmc
idiv
stc
sub
push
cmovo
jge
pusha
jmp
outsl
lock
xchg
pop
ret
jne
or
aas
loopne
in
sub
lods
shl
pusha
push
jg
ds
dec
cmovnp
cmpb
lock
xchg
push
icebp
outsb
push
add
imul
mov
sub
aas
and
shlb
sub
insl
in
roll
add
pushf
rclb
les
mov
outsl
sahf
fidivrs
sbb
mov
cmp
xchg
fnstcw
mulb
sub
std
mov
outsb
add
dec
mov
and
mov
lea
iret
mov
inc
in
xchg
mov
inc
incl
test
adc
sbb
call
iret
push
xor
pop
clc
shll
popa
mov
mov
pop
nop
pop
jo
ffreep
decl
jmp
mov
lcall
add
xchg
mov
pop
sub
bound
jle
aad
test
popa
aaa
int3
fistpll
mov
pusha
xchg
je
pushl
call
popa
fstp
mov
mov
mov
ret
inc
js
pushl
outsl
ffree
lret
and
push
pop
pop
ret
ret
dec
push
jo
jno
add
and
aam
jmp
in
mov
ss
test
fstpl
add
dec
je
aam
xchg
stos
push
outsb
test
shl
mov
mov
push
inc
add
sbb
xor
xor
xor
xor
add
mov
xor
xor
xor
xor
xor
mov
call
xor
add
xor
pop
int3
xor
ss
ss
ss
ss
imul
test
jge
test
mov
popf
mov
into
ss
add
decl
push
aaa
pop
aaa
insb
aaa
jb
jp
xchg
aaa
popf
aaa
mov
aaa
mov
aaa
shll
fdivl
call
incb
cmp
cmp
cmp
cmp
cmp
ja
jle
mov
lret
cmp
cmp
cmp
cmp
cmp
cmp
cmp
dec
cmp
aad
fnstsw
jecxz
jmp
cmp
cmp
cmp
cmp
dec
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
adc
cmp
xor
cmp
pop
outsl
hlt
cmp
js
jle
test
cmpsl
cmp
cmp
incl
fistpll
cld
cmp
pop
ds
gs
mov
ds
scas
ds
ds
push
xor
add
flds
push
or
cmp
or
sub
cmc
pop
inc
jae
dec
gs
pop
mov
fs
inc
into
pushl
lret
fisttpll
iret
rcl
mov
mov
movsb
shll
jbe
ret
inc
add
pop
or
inc
add
add
or
add
sbb
and
pusha
mov
lods
imul
sbb
inc
pop
inc
add
add
or
add
pop
addl
and
and
lret
add
or
push
and
add
mov
ror
push
add
add
test
rolb
and
cld
add
add
pop
or
add
add
jmp
incl
xor
mov
add
and
push
xchg
inc
xchg
insb
test
flds
daa
pop
inc
or
add
ja
pop
stos
ret
xor
and
or
das
add
xor
add
lcall
jns
add
mov
jg
push
xorl
inc
jb
push
and
ja
or
stos
jp
mov
cs
or
cli
incl
fwait
jbe
jmp
jne
loope
cmpsl
cltd
fdivrs
aam
movsl
xorb
inc
inc
daa
push
cld
lcall
sbb
popf
mov
xor
mov
aad
cltd
pop
adc
mov
rolb
ret
jo
jmp
in
scas
pusha
outsb
push
and
pop
js
ja
aas
add
xchg
cmp
test
sbb
cmp
cmpsl
dec
daa
inc
into
fdivrp
mov
or
mov
sbbb
cltd
and
rclb
jmp
mov
aas
mov
jae
inc
lods
call
fdivp
sti
testb
dec
mov
stc
jmp
cmp
sub
jbe
decl
jge
and
dec
lock
push
sbb
movsl
jo
push
fistpll
lret
mov
xor
pop
pop
push
dec
push
push
pop
dec
lcall
and
inc
dec
inc
pop
inc
inc
dec
pop
and
outsb
xlat
in
xchg
out
push
xchg
in
and
dec
add
inc
push
pop
clc
or
in
enter
negl
xor
add
sbb
adc
decl
inc
add
fdivs
mov
xorl
nop
shrb
dec
adc
add
repz
movzbl
xchg
lea
setae
dec
and
inc
inc
lahf
lock
adc
or
notb
sbb
and
dec
inc
cld
push
das
pop
inc
stc
clc
je
idiv
push
mov
test
or
or
cmp
push
ljmp
ror
mov
stc
mov
shl
add
rcr
cmc
neg
stos
jg
call
cli
or
pusha
adc
outsb
xchg
xchg
ret
sti
in
fildll
pop
ror
cmc
xor
sub
ret
dec
adc
jbe
ja
pop
and
mov
lret
test
or
add
call
add
dec
and
aaa
xor
inc
mov
lea
inc
test
xor
cmpb
idivb
inc
jne
lahf
adc
stos
add
dec
jbe
jmp
sbb
ljmp
testl
lcall
mov
adc
mov
push
or
pushf
incb
incl
pop
test
xchg
inc
add
call
inc
pop
add
stc
mov
pop
clc
sub
cmp
jp
and
stc
neg
pushf
aaa
in
adc
mov
mov
fildll
xor
cmp
subb
add
mov
xchg
jmp
test
in
das
sar
mov
inc
or
ja
mov
cmp
clc
pusha
cs
shr
std
add
nop
loope
jp
aad
xchg
add
jb
pusha
jmp
mov
or
cli
mov
cmc
pushf
pushf
xor
fimull
push
mov
push
mov
pusha
pushf
jmp
xchg
jg
lock
xchg
nop
or
adc
mul
add
mov
call
orl
cld
inc
mov
mov
stos
aaa
mov
dec
inc
adc
test
lock
xchg
jmp
imul
pushf
jmp
les
in
cmpl
jmp
add
push
pushf
mov
cmp
push
out
sbb
adc
dec
push
mov
std
daa
xor
mov
es
pop
rclb
dec
jmp
xor
inc
pop
dec
test
jp
jmp
std
mov
add
xchg
add
orb
mov
mov
das
mov
add
pushf
jae
cmpb
sbb
add
filds
fcoms
jmp
jmp
fdivrp
inc
adc
lock
jmp
push
and
icebp
cmpsl
and
or
push
lea
pop
imull
adc
sbb
fistpl
jb
inc
and
out
mov
or
pop
pop
popfw
pusha
arpl
and
pop
enter
rolb
pop
push
lea
addb
lods
loope
sbb
xchg
xor
loopne
xor
shll
movsb
mov
push
xchg
loopne
push
lock
sar
icebp
or
testl
mov
cmpb
fnstsw
bswap
in
out
mov
clc
and
add
push
repnz
mov
rcll
mov
std
loope
sbb
pop
loope
push
dec
int3
fucomp
nop
push
or
cmp
sub
test
fisttpll
xchg
pushf
rorl
and
mov
xlat
arpl
loopne
scas
andl
rolb
add
movsb
test
mov
or
mov
pop
dec
sar
mov
mov
dec
lea
popa
sub
clc
jecxz
mov
pop
push
pop
fstpl
jl
test
leave
cmp
aas
jno
jmp
add
out
pusha
cmp
test
adc
jp
and
in
or
mov
jmp
mov
jae
inc
call
mov
add
shl
cmp
jg
pop
add
jmp
pop
das
pop
das
sub
cmp
cmc
pop
cltd
popf
lahf
cwtl
incb
mov
cwtl
mov
sub
sbb
push
mov
push
aaa
incl
cmp
ret
mov
jl
push
sbb
leave
cmp
lds
mov
test
add
stc
test
test
clc
jne
cmpsl
push
mov
aas
mov
pusha
and
rcll
push
pop
jmp
jo
aad
mov
std
or
xor
imul
mov
pop
or
jmp
cmc
or
adc
mov
jae
xor
push
cmp
negb
jbe
out
sub
stos
sub
out
and
fidivl
int
jmp
aas
lods
popa
loopne
mov
lds
sahf
lcall
adc
lock
notl
into
push
enter
add
cmpl
sti
jbe
cli
push
lahf
sub
idivb
pusha
test
add
and
fwait
loope
and
scas
lock
xlat
sbb
mov
shll
cs
mov
push
loope
jmp
add
jb
call
int
mov
inc
add
ljmp
movsl
inc
jg
xor
dec
mov
mov
lcall
and
pop
xlat
out
fwait
in
dec
pop
jbe
lret
fwait
adc
pop
lret
add
ljmp
push
push
cwtl
cwtl
push
or
scas
ja
cli
adc
lret
aaa
fcmovnb
mov
jmp
mov
jnp
rorl
mov
scas
rcr
xor
incl
mov
in
nop
mov
test
call
fdivrl
fs
call
inc
jmp
sahf
adc
push
scas
ljmp
xor
cli
call
cmc
jecxz,pt
jmp
push
pop
inc
xchg
push
mov
and
and
push
call
jbe
and
and
sahf
fnsave
jno
rorl
push
mov
sbb
cld
popa
pushl
test
mov
adc
lret
cmp
mov
iret
inc
icebp
adc
iret
pushf
adc
aas
loopne
and
push
push
arpl
stos
mov
push
mov
dec
mov
lahf
sar
jg
bswap
cmp
clc
adc
xor
clc
jmp
lea
outsb
push
mov
bound
lcall
sbb
sahf
mov
or
sub
call
dec
clc
push
call
call
outsb
dec
test
stc
push
cwtl
call
stos
sbb
sub
adc
add
xor
push
cld
push
outsb
pop
add
lds
and
mov
xchg
bound
movsl
jo
cltd
cli
mov
lock
and
adc
pop
std
jbe
adc
imulb
sarl
test
cmc
insl
mov
lods
and
xlat
adc
add
fistpl
adc
icebp
mov
sub
fildll
or
adcl
push
lea
les
popa
jg
or
sbb
pushl
loope
inc
push
xor
xor
inc
lcall
push
pop
subb
xchg
stos
fisttps
loopne
in
fcoms
mov
or
incb
arpl
xor
add
adc
or
push
jne
jnp
lods
aas
cmp
add
fsubl
call
inc
inc
fs
out
fsubl
test
and
sub
fisttpll
or
mov
pop
mov
dec
out
aaa
rcr
shr
inc
sub
cmc
sbb
int
mov
xchg
or
into
mov
cmp
push
sbb
call
fwait
mov
test
addr16
xor
inc
mov
bound
stos
push
push
sbb
shlb
addb
adcl
cwtl
loopne
test
pop
adc
stos
cmp
lea
ds
add
rcll
cmp
inc
ret
test
dec
push
fmull
add
and
dec
ljmp
stc
or
or
mov
jmp
sar
sbb
lea
adc
imul
mov
jmp
add
inc
add
add
pop
push
push
fimuls
lcall
les
or
or
sti
adc
ja
adc
lea
pop
pusha
ret
sub
addr16
lea
rclb
mov
shld
mov
xor
pop
add
call
imul
or
mov
mov
or
adc
mov
insl
movsl
add
mov
arpl
or
push
dec
aaa
and
orl
fimull
sub
mov
push
jmp
mov
out
ret
nop
aam
lock
xchg
neg
sar
xchg
lods
mov
cmp
call
ljmp
add
jmp
lds
mov
movsb
sub
imul
cmp
jle
jmp
jo
xorl
popf
pushf
in
pop
inc
mov
orb
dec
inc
rolb
cmc
xchg
sbb
mov
sarb
or
call
mov
mov
cltd
call
lahf
add
push
push
push
std
cld
push
lret
fiaddl
sub
pop
nop
push
aaa
pushf
testb
xchg
movsb
xchg
ljmp
popf
xchg
jp
inc
aas
outsb
and
movl
lods
jb
inc
push
test
xchg
push
ds
mov
jle
ljmp
clc
cmp
insl
fdivl
cmp
roll
iret
insb
test
lahf
int3
lea
pushf
push
push
arpl
inc
push
mov
pop
push
pusha
cmc
test
icebp
lock
filds
aad
push
sub
jg
leave
lcall
xadd
cmp
or
into
adc
ret
push
mov
cmp
pusha
call
xor
sbb
and
fsts
or
mov
testl
mov
pusha
and
fidivs
aaa
lods
pusha
and
xchg
insl
data16
cmp
xor
jg
mov
add
inc
cmp
das
test
shll
call
or
xchg
loop
xchg
stc
cmc
add
enter
cld
loope
cmp
inc
iret
xor
push
cld
mov
mov
xor
in
push
icebp
and
mov
js
call
mov
jb
lods
aaa
sar
pop
rclb
xorl
add
push
pop
jp
and
dec
jbe
adc
and
pusha
sbb
xchg
das
jg
sbb
lds
cmpl
jmp
insl
push
pop
js
lcall
outsl
jmp
sub
xor
stos
sub
mov
stc
cmpsl
push
loope
cwtl
clc
cmp
cwtl
negb
mov
icebp
in
cmp
add
push
xlat
outsl
cltd
dec
fisubs
push
fidivrl
jbe
push
lds
dec
mov
ror
cmc
stc
cmp
jmp
int
or
popf
repz
fisttps
push
xor
push
and
push
pop
sub
in
mov
ffree
in
sbb
add
leave
push
enter
hlt
aas
scas
rcr
test
ror
jnp
jmp
mov
xor
sbb
inc
cmp
mov
pop
cmp
rcrl
pushf
test
pusha
add
or
add
loope
push
xchg
cmp
pusha
jmp
cmp
fucom
in
jmp
dec
xchg
loope
inc
das
dec
and
pop
nop
out
sbb
enter
into
adc
mov
adc
push
adc
sub
cmp
mov
fstpl
iret
add
fsubr
or
adc
pop
push
push
jo
cli
sarb
adc
das
lock
xchg
cmp
cmp
mov
adc
test
rcrl
shr
xor
js
rolb
in
or
mov
or
xor
adc
test
mov
and
jmp
mov
inc
adcl
pop
inc
xorb
push
xor
subb
fsubp
dec
aam
lock
xchg
pushf
mov
call
jmp
call
fadds
pop
cmp
std
shrb
cltd
sbb
pop
aaa
loope
clc
push
pop
push
icebp
add
and
mov
shld
jno
jbe
and
jae
push
frstor
dec
fistpll
mov
push
mov
push
js
push
lret
fisttpl
mov
das
xor
mov
out
movsb
inc
or
mov
inc
nop
rcl
jg
push
hlt
pusha
pop
insb
fldl
std
sbb
out
adc
out
shlb
andb
pop
movsl
jmp
dec
mov
fucomp
imul
hlt
xor
mov
sub
pusha
mov
ret
jl
xchg
std
or
mov
outsb
lds
call
sti
inc
fstl
movsl
pop
pop
cmp
roll
mov
arpl
fsubrs
xor
mov
fdivr
jle
or
fistpl
jecxz
idivl
pushf
fldt
add
popf
loopne
inc
pushf
in
ffree
fisttpll
add
stc
fdivrl
dec
pop
pop
cmp
inc
or
call
ja
sub
and
push
test
pop
xchg
add
inc
fwait
mov
jecxz
pop
int
xchg
mov
ss
dec
stos
sbb
xor
cmp
sub
fsts
enter
das
lahf
test
stc
call
jne
ljmp
das
pop
mov
mov
aaa
dec
les
mov
insb
outsb
inc
mov
test
xlat
movsl
dec
je
push
push
leave
adc
xor
stos
stos
in
in
repnz
mov
rorb
pop
push
sub
push
ds
out
inc
mov
jg
or
outsb
subl
in
xor
je
fcompl
sub
xor
into
cli
loop
sbb
mov
push
xchg
mov
cmp
mov
lea
mov
pop
call
xor
call
and
ss
sbb
jb
sahf
ret
jp
inc
loope
pop
mov
call
aad
movd
ret
lds
adc
pop
jp
push
int3
insb
out
ret
or
mov
fldl
shr
cmpsl
cmc
xlat
xor
cmpsl
cltd
and
js
fdivl
mov
mov
scas
mov
push
or
pusha
xchg
test
mov
push
cmc
call
dec
sbb
xor
lret
pop
inc
shrb
rolb
aaa
cmp
pop
jmp
jo
or
jg
mov
inc
outsl
pushf
jnp
jmp
mov
outsb
aad
imul
int3
xlat
cmp
imul
lea
out
or
mov
dec
in
mov
push
mov
test
sbb
mov
mov
mov
pop
clc
mov
mov
xor
cli
jb
push
jbe
cmp
push
push
scas
loope
orb
dec
add
add
xor
pop
ret
xchg
mov
inc
sub
popf
or
and
xor
push
movl
push
lea
test
push
mov
aam
sbb
mov
push
sub
or
movsl
fcomp
popf
icebp
fisttps
loope
cli
inc
ljmp
sarb
xor
fldt
push
in
and
rorl
movb
and
pop
adc
sahf
mov
jle
inc
pop
enter
nop
or
xor
cmpsb
mov
sub
inc
bnd
pop
mov
push
sahf
and
add
rolb
pusha
nop
cwtl
lods
arpl
jnp
mov
inc
cmp
cmpsb
sbb
pop
add
mov
sbb
xor
cmp
loop
rcll
aad
jo
cld
jne
rcl
lock
mov
xchg
cmp
mov
pop
insl
inc
pop
out
fbld
fcoml
push
jge
add
xchg
and
dec
out
push
mov
jns
fistps
rclb
lea
xchg
lods
cmpsb
cmp
fsubs
fisubl
shl
pusha
std
shl
mov
or
cmp
cmp
mov
fldl
sbb
scas
rorb
orb
push
push
iret
add
mov
repnz
incl
dec
loopne
sbb
rcr
add
jne
ja
xchg
and
popf
jno
dec
cmc
enter
or
fcmovnu
inc
xchg
sbb
xor
outsl
loopne
loop
roll
lea
mov
jmp
data16
add
pop
mov
xorl
cld
in
mov
push
movsl
enter
pushf
test
pushl
push
mov
jmp
cli
pop
cmp
mov
sbb
sub
push
not
mov
sarb
popa
sub
xlat
movsb
jecxz
arpl
clc
mov
int
not
push
enter
popa
jo
mov
pop
stos
or
dec
sbb
dec
jecxz
pop
adc
push
loop
cmpsb
inc
stc
call
push
add
cs
xchg
sbb
add
mov
outsl
push
pop
mov
out
test
loop
adc
xor
jle
push
lds
loope
outsl
aad
cmpsb
cmp
and
ljmp
mov
add
push
das
sub
cmc
filds
fdivrp
pushl
xchg
or
hlt
inc
sub
jle
aam
and
mov
js
add
push
xchg
lret
loopne
or
pusha
jne
out
dec
es
clc
cmpsb
aam
mov
stos
jge
and
rcrb
jmp
jge
cwtl
dec
jmp
fistps
gs
adc
mov
test
mov
and
mov
cs
pop
dec
xor
add
outsb
sbb
adc
ret
loopne
scas
cmp
adc
movsl
xor
aas
and
inc
lret
jle
fistl
add
sub
cmp
iret
jle
dec
push
pop
in
sub
into
cmp
xor
aaa
jnp
sub
adc
das
pop
dec
cmp
and
sahf
sub
idivl
mov
daa
pop
fs
std
fimuls
cwtl
sub
dec
add
jle
mov
adc
xchg
cmp
dec
jp
mov
pop
add
cmp
lds
or
adc
sub
jnp
mov
sbb
pop
pop
mov
rdrand
add
das
adc
fwait
std
xchg
or
jg
pop
movnti
out
scas
pxor
inc
or
daa
inc
adc
fnstenv
daa
arpl
push
sub
mov
or
movlhps
lret
jle
or
psubw
add
paddw
jae
xor
dec
imul
pop
mov
popa
emms
fimuls
in
sub
or
bswap
adc
incb
add
add
ud2
sti
nop
dec
sahf
cmp
add
cmp
push
pop
pop
out
fsubrp
ja
std
sub
xor
pop
xchg
das
adc
das
mov
shll
sbb
lret
clc
int
mov
add
add
mov
mov
mov
aas
mov
ficomps
neg
or
mov
push
inc
loopne
cvtdq2ps
es
cwtl
sub
adc
mull
mull
das
adc
adc
stos
negl
mov
aas
ret
or
dec
sub
repz
cmp
pop
push
sbb
stc
pop
pop
enter
stc
ret
cs
cmp
shrd
icebp
mov
push
push
inc
push
mov
in
and
mov
jl
jmp
mov
or
xor
sbb
and
enter
pusha
mov
mov
push
mov
jl
cmp
ss
push
orb
cmpsb
mov
or
and
cmpsb
mov
clc
cmc
or
pusha
cmp
test
sub
aad
push
sub
insl
cli
xor
xchg
js
mov
out
loopne
inc
sub
pushf
sahf
sbb
mov
lret
add
arpl
rcll
and
jle
mov
mov
xchg
cmpsb
sub
inc
orb
loop
mov
das
xchg
popa
xchg
incl
xchg
fwait
add
mov
mov
xchg
les
jo
jmp
fistl
add
add
je
mov
std
dec
bound
stc
mov
push
out
push
insb
jmp
mov
inc
scas
std
inc
mov
fcmovbe
add
fdivrp
push
test
jmp
das
cli
push
mov
pushf
jmp
iret
loop
dec
jge
jmp
mov
cmp
stos
mov
pop
and
cmp
sbb
pop
push
push
pushf
cli
pop
lds
call
fadds
sahf
aam
loopne
jo
pop
out
in
xor
test
outsb
jmp
daa
pop
inc
push
jg
sub
mov
jnp
jle
adc
push
pop
loopne
movsl
inc
pushf
lret
inc
xchg
dec
loop
mov
ret
cmp
mov
shlb
daa
mov
repnz
add
stc
xor
sbb
adcl
outsl
icebp
insl
cwtl
and
or
aaa
incb
jl
push
inc
out
mov
xor
push
inc
pop
pop
xor
pop
mov
jmp
xchg
mov
clc
sub
ljmp
leave
dec
mov
into
add
or
push
sub
jle
leave
cli
sub
shl
cmp
ja
out
add
lea
jl
push
mov
add
cmp
lret
cmp
jl
add
mov
out
call
mov
add
dec
cmp
stos
sbb
ret
repnz
fistpll
dec
cmp
jmp
faddl
call
decb
lret
repnz
aad
mov
add
xchg
or
fs
sbb
js
pmuludq
mov
mov
mov
adc
popf
adc
pusha
repz
cltd
mov
pop
jp
add
sub
mov
sub
mov
adc
das
push
mov
push
fidivrl
push
mov
push
std
jmp
insl
mov
fdivs
dec
loope
in
aad
loope
hlt
mov
insl
jne
in
les
sub
add
ljmp
xchg
shlb
mov
jne
mov
or
out
inc
mov
sbb
ja
xor
dec
xlat
sub
ret
call
test
and
add
ret
fnsave
scas
inc
mov
inc
mov
fsubl
cmp
and
pop
icebp
mov
pop
jmp
jo
outsb
cwtl
loopne
add
je
nop
repnz
xor
pushf
xchg
dec
ret
sub
sub
inc
mov
sbb
shll
adc
fimull
call
cmp
out
sub
sub
sub
pop
sbb
push
and
popa
ja
insl
push
mov
adc
pushl
adc
loope
rdtsc
add
jmp
roll
pop
pop
inc
jmp
mov
inc
xor
cmp
jecxz
inc
add
pop
and
sub
imul
jmp
dec
inc
dec
shr
rclb
adc
adc
cmc
subb
mov
popf
mov
inc
jmp
pop
inc
pop
jnp
pop
mov
mov
call
ja
xor
push
cwtl
push
pushf
ret
ror
aad
and
std
cmpsb
mov
jecxz
mov
sbb
add
int
jbe
mov
call
loop
sbb
into
cwtl
mov
adc
pusha
jl
push
mov
cli
mov
std
or
incl
xor
push
cmp
test
pop
dec
inc
add
sub
and
or
and
push
mov
sub
mov
push
clc
movsl
mov
sub
call
jecxz
mov
cmp
add
mov
punpckhdq
jmp
dec
mov
js
pop
lea
or
mov
loope
jbe
push
or
in
pop
pop
aas
push
mov
push
repz
aam
mov
enter
lahf
xchg
cmp
xchg
mov
sub
fs
sub
mov
test
imul
outsb
lahf
cmp
lock
insb
cmp
cmp
outsl
shr
jmp
adc
or
pushf
setns
lods
sbb
cmp
cmp
jl
lock
cs
xchg
aam
iret
jmp
adc
fimull
bound
xor
push
icebp
adc
dec
mov
xlat
not
push
add
scas
pusha
test
call
bound
into
pop
mov
mov
add
xchg
test
hlt
dec
cmp
pusha
popa
call
jne
mov
ret
mov
xor
in
mov
push
mov
or
inc
inc
mov
cld
outsb
fnsave
sbb
dec
das
sub
out
xchg
pop
jb
outsl
sahf
ja
add
repz
pop
sbb
loopne
stos
xchg
push
aam
jbe
call
pushf
sbb
mov
mov
cmc
sbb
add
mov
clc
daa
jno
fsubl
imul
adc
jle
test
lock
aam
push
call
sub
lahf
mov
sub
clc
push
xchg
adc
dec
or
pop
adc
xor
cmp
cwtl
xchg
mov
push
call
push
mov
jmp
sbb
pop
xor
shrb
nop
or
add
les
clc
pop
pop
dec
ljmp
xchg
mov
out
xor
sti
lock
sub
arpl
mov
pop
int3
into
cmc
icebp
cmpsb
movl
push
mov
push
dec
jp
addr16
mov
movsb
inc
lock
adc
in
stos
mov
inc
sar
mov
dec
sbb
xor
aaa
mov
push
adc
clc
xchg
call
addb
cmp
mov
mov
test
adcb
sbbl
shr
jae
cli
sub
mov
iret
mov
or
call
jmp
fcomp
push
sub
roll
mov
jns
mov
stc
sub
nop
loopne
dec
push
jno
int
and
sbb
cmp
outsb
shrb
xor
xchg
mov
in
pop
lcall
das
add
shl
mov
mov
jno
pop
cmp
fnstsw
push
push
lods
push
and
add
int
inc
cmp
lcall
sbb
inc
psllq
leave
je
add
inc
enter
cmp
adc
sti
push
mov
lods
decl
fwait
fs
pop
int3
sub
test
rcll
ror
stc
shl
ret
call
add
ds
xor
jo
jl
or
mov
loopne
push
lret
pushl
insl
mov
dec
cmp
mov
cmp
push
jl
jmp
xor
lahf
jle
sub
sub
xchg
pop
jmp
mov
mov
inc
and
inc
cmpsl
push
mov
sbb
lahf
adc
int3
cmp
ljmp
outsl
pop
fsubs
stc
addl
pop
push
xor
jp
mov
in
xor
sti
outsb
mov
pop
push
or
cmp
ds
pop
add
sti
addr16
inc
clc
call
fdivr
pop
pop
pop
pusha
imul
shld
cmp
addr16
pusha
push
cmp
jne
inc
xchg
shll
sti
call
das
add
lods
test
in
loop
sar
ljmp
pop
lahf
lods
jbe
outsl
sti
and
lock
cmpl
out
ret
adc
push
xchg
shl
in
cwtl
sub
decl
or
mov
cli
out
gs
outsb
cmp
sub
in
cmp
push
inc
mov
cmp
loopne
and
stos
xor
ljmp
add
sub
dec
and
sub
sub
push
add
insl
push
js
jmp
sbb
mov
dec
push
nop
jnp
mov
es
cmp
lcall
mov
fs
call
decb
loope
push
pusha
add
test
xor
mov
push
je
xorl
hlt
mov
add
testb
xlat
setp
jge
mov
mov
call
or
or
mov
test
sbb
pushf
adc
push
xchg
xchg
add
mov
dec
add
jmp
adc
mov
out
cmp
push
setb
jg
sbb
pop
inc
or
fadds
mov
sub
mov
push
or
aad
call
cmc
cmp
out
add
mov
aam
sbb
daa
jne
jl
out
xlat
mov
mov
cld
jb
stos
icebp
std
and
or
jbe
popa
push
popa
testl
fdivrl
inc
ret
mov
mov
push
or
sub
xchg
test
pop
cld
mov
inc
pop
lods
mov
ret
ret
pop
pop
sbb
add
jmp
jmp
test
sub
lea
test
add
cmpsb
pop
cld
push
jmp
pop
fists
push
jge
clc
out
call
push
scas
push
sarb
mov
xchg
adc
out
push
inc
inc
sbb
sti
idivl
call
icebp
adc
sbb
call
jp
cmc
stc
or
push
dec
xor
adc
pop
shlb
sub
shlb
test
lock
ret
pop
dec
dec
fistl
mov
seta
jmp
xor
sub
fnsave
ret
int
jl
lret
cmpl
arpl
jno
test
jmp
repnz
and
loope
push
in
movsb
push
add
ja
loopne
nop
or
or
inc
jmp
sbb
cli
pop
dec
fistpl
cmp
sub
pop
std
inc
lock
in
cltd
das
in
push
or
jmp
add
movsl
rorl
or
push
inc
push
jmp
jnp
shrb
dec
push
cmp
divl
pop
dec
lcall
into
iret
pushf
xchg
mov
cld
jnp
cmp
dec
cmp
not
stc
roll
clc
mov
lds
inc
shl
cmpsl
or
push
mov
ds
inc
les
enter
dec
fildll
cmpsb
cmp
pusha
ret
pop
in
gs
sbb
sbb
push
mov
ljmp
and
add
cld
sti
inc
sbb
or
add
cmp
icebp
dec
jbe
fadds
addr16
test
jle
divb
inc
test
iret
sub
movsl
xor
jno
sub
lahf
mov
imul
call
pop
icebp
stc
xor
dec
loopne
jl
adc
out
cwtl
and
and
adc
cmc
pop
out
into
push
mov
das
push
mov
sahf
fiadds
pop
pop
faddl
testl
mov
cmp
loopne
lea
lret
enter
dec
shlb
jmp
lds
pop
jo
jne
inc
jns
decl
pop
mov
jb
out
cmp
mulb
pop
mov
sub
inc
xlat
cmp
adc
ljmp
xchg
icebp
or
and
imul
mov
fsubl
sbb
ljmp
cmp
xor
js
sbb
outsb
pusha
data16
cmc
mov
les
ss
sbb
loopne
mov
push
outsl
fcmovbe
lcall
subl
cmp
sub
adc
sub
dec
test
imul
mov
mov
xor
xor
pop
mov
out
repz
mov
test
jns
pop
rcrl
aam
mov
ud0
test
lea
lahf
call
outsb
orb
mov
shlb
ja
adc
adc
leave
sub
and
push
sbbl
in
jne
push
xor
dec
popf
out
jmp
in
or
pop
sbb
ds
mov
test
dec
or
adc
add
jno
call
icebp
arpl
push
push
call
dec
cld
xchg
outsl
jmp
push
inc
jecxz
int3
push
ss
xchg
fsubr
ljmp
outsl
adc
cmp
int
cmp
xorl
jp
add
mov
dec
shrb
dec
imul
shr
cmp
xor
mov
cwtl
push
sbb
jbe
cmp
and
push
sbb
cmc
fwait
jle
xchg
outsl
call
iret
repz
cmp
lcall
mov
mov
pop
adc
fstl
xor
cmc
dec
lods
std
cli
pop
hlt
sub
ja
movsl
add
mov
xor
adc
ret
movl
fstpl
jne
inc
icebp
push
add
lret
jle
neg
je
ret
xor
bound
add
jo
jmp
mov
inc
aaa
stos
stc
sbb
test
je
pusha
mov
sub
push
jnp
pop
jle
outsb
sub
outsl
xchg
jmp
mov
mov
or
xchg
mov
mov
dec
push
mov
movsl
outsb
and
pop
cltd
mov
add
mulb
and
insl
movsl
add
push
inc
or
xchg
mov
out
or
sub
pushf
jge
xor
or
lock
shl
sub
inc
aad
xor
mov
rolb
xlat
jle
sub
jle
xchg
xchg
push
push
sub
sbb
push
xor
jg
jmp
sbb
xlat
sbb
jne
or
and
je
test
mov
adc
cli
test
mov
xor
mov
and
mov
sub
pop
inc
in
adc
mov
shl
ljmp
andb
mov
mov
add
lret
sar
pop
je
sbb
adc
or
ret
pushf
cmp
xor
mulb
inc
xor
lret
insb
add
in
pop
mov
add
jle
les
divl
cmp
push
clc
test
cmp
sti
les
arpl
jb
stc
pushf
sbb
mov
or
mov
or
sahf
sbb
das
adc
lds
dec
cmp
call
sub
jg
testl
adc
push
mov
sbb
loop
repz
jge
clc
sbb
cmpb
mov
pop
push
or
mov
andb
cmp
pop
not
rcl
bswap
pop
xchg
and
test
or
and
ja
hlt
es
out
inc
clc
lea
lods
cmp
iret
or
mov
outsl
sub
lock
sbb
stc
add
xchg
inc
inc
push
fadd
jg
fs
test
mov
rcr
jle
data16
fadds
push
mov
adc
mov
popf
sti
nop
fnstenv
push
fwait
jg
adc
cmp
add
cmpb
jns
inc
pushf
subl
inc
cld
std
je
ret
and
cmp
int3
inc
jl
adc
fcoml
in
fadds
add
mov
jge
hlt
or
loopne
orb
push
sbb
cmp
jno
insl
je
mov
pop
ret
movsl
lret
pop
or
jo
jmp
inc
lock
pop
ds
int
dec
xor
and
mov
test
pop
das
jecxz
mov
shll
clc
or
shll
sub
cmp
and
fucomp
adc
mov
sbb
pop
jno
mov
fisttpl
clc
or
add
call
add
loopne
cli
dec
push
je
aaa
pop
push
mov
ja
mov
mov
roll
fiaddl
push
lods
sbb
xchg
lahf
stc
push
in
shll
push
test
adc
cmp
xor
shr
cmpsl
outsb
js
leave
out
mov
fs
dec
sarl
aaa
sub
sbb
loopne
shll
jge
sub
cmc
add
or
test
adc
and
mov
aam
xchg
call
fistl
mov
nop
loopne
push
or
pop
decl
or
jb
mov
outsl
push
jmp
jns
sub
xchg
xchg
arpl
pusha
loope
test
add
test
jp
pop
out
fdivs
mov
dec
in
add
hlt
pop
psubq
push
loopne
orps
inc
adcl
aad
rcrl
pushf
xchg
push
in
mov
icebp
pop
fwait
call
mov
mov
pop
in
xchg
xbegin
movsb
sub
mov
jg
sbb
call
ja
in
call
dec
fimull
lds
loop
inc
imul
push
pop
dec
mov
arpl
lds
pushf
std
and
arpl
cwtl
push
push
sbb
and
pusha
test
xchg
rcr
hlt
add
jmp
mov
pop
std
aad
inc
jge
sbb
add
add
jno
add
lret
adc
scas
test
jg
in
xchg
sbb
mov
push
adcb
sahf
shlb
mov
sub
push
jmp
mov
insb
bound
adc
mov
xchg
lcall
out
pop
lcall
testb
push
push
in
je
xchg
and
sbb
xor
ficomps
call
les
orb
arpl
and
inc
push
sub
nop
insb
jg
inc
mov
enter
stos
push
mov
ljmp
sbb
inc
mov
and
jmp
cmp
jl
push
test
or
mov
mov
lods
stc
and
dec
mov
dec
jmp
push
sbb
adc
xor
cmp
adc
push
lods
sar
dec
shrl
pop
cmpb
push
nop
rcll
ret
mov
mov
aad
loope
cli
stc
push
pop
xchg
leave
divb
jno
js
pusha
push
les
pop
adcb
sub
mov
orb
test
pop
jb
ret
dec
ljmp
pusha
sub
mov
ss
insb
enter
test
mov
jo
iret
push
call
aas
mov
loop
and
jmp
lcall
xchg
movl
inc
or
mov
outsb
fdivrs
fists
cmp
push
pop
dec
shr
push
pusha
rorl
std
xchg
pop
mov
jo
outsb
inc
ljmp
pop
inc
pop
push
sbb
pop
dec
jmp
cs
add
bswap
mov
mov
dec
or
or
cmpsl
xchg
or
and
cmp
movsl
push
mov
incl
sbb
lea
dec
push
push
push
fidivrl
shll
and
icebp
add
into
xlat
pop
mov
push
stos
and
into
dec
ret
clc
adc
and
dec
aaa
mov
in
jge
repnz
mov
iret
sbb
adc
setg
xchg
inc
test
push
adcb
adc
sbb
inc
pop
idiv
popa
xchg
adc
xchg
add
dec
or
sub
cmp
decb
mov
sub
inc
xlat
notb
pop
dec
std
shlb
int
push
pushf
and
ret
xor
xor
inc
iret
pmaddwd
stos
xchg
into
jo
mov
ficomps
inc
and
outsb
jne
repnz
iret
or
xchg
add
xor
pop
sti
push
rcrl
test
add
sub
xor
mov
arpl
shr
negl
sub
cli
adc
ret
aaa
rorl
ficomps
mov
jo
mov
fxtract
jno
mov
jl
sbb
sbbl
clc
adc
out
popa
jmp
negl
jno
hlt
mov
mov
pop
add
clc
aaa
inc
shrl
sahf
cmp
test
pop
adc
cs
mov
dec
jno
pushf
push
cmp
inc
xor
mov
xor
sbb
call
decb
or
out
fdivs
sbb
bound
shll
adc
dec
stc
mov
cli
push
mov
mov
fisttpll
and
lea
clc
add
cmpsl
add
cld
adc
cwtl
icebp
mov
push
xchg
clc
inc
sbb
inc
call
sbb
mov
mov
mov
cmp
mov
sbb
mov
or
repz
das
sti
js
inc
pop
mov
and
mov
or
icebp
sub
jmp
add
push
daa
outsb
mov
sbb
mov
aam
inc
je
xchg
push
nop
push
sub
pushf
movsb
push
push
int
pop
divb
je
add
ret
jg,pn
fadds
shll
sbb
fucomip
addb
ja
and
pushf
mov
fwait
mov
fucompp
cwtl
sbb
pop
or
inc
mov
add
add
sti
dec
out
mov
or
push
xchg
clc
or
cmp
sbb
sbb
loop
pusha
inc
negb
popl
pop
pushf
push
push
pop
ret
cmp
mov
out
test
bound
loope
sub
jmp
jo
cmc
sbb
mov
pushf
pushf
int3
jbe
adc
sbb
stc
call
adc
mov
es
adc
jg
ja
out
je
cwtl
imul
lods
outsl
icebp
adc
mov
and
in
mov
outsl
lcall
scas
xor
xchg
call
pop
gs
xchg
jmp
jecxz
mov
rorb
or
pop
aaa
pusha
lods
fwait
add
movsb
clc
les
mov
cltd
dec
mov
add
fstpt
mov
fnstcw
fsub
psubd
ja
push
mov
cs
or
inc
xor
inc
addr16
jno
test
test
lds
pop
push
clc
ret
mov
jo,pt
push
add
add
lds
call
ljmp
sbb
xor
aad
lcall
mov
jmp
mov
mov
mov
cmp
cmp
add
cmc
clc
sub
cmc
test
cmp
js,pt
cmp
cmc
call
push
mov
test
or
repnz
outsl
fs
call
pop
out
cltd
imull
cmp
sub
pop
jnp
inc
jae
daa
push
cmp
das
jmp
cltd
std
pop
inc
dec
repz
pop
mov
das
jg
mov
cli
push
in
add
mov
subl
loope
rcl
es
sub
adc
pop
iret
dec
rcrb
adc
das
jmp
push
cs
aam
mov
mov
ss
aad
mov
jns
in
adc
xor
outsb
mov
lock
shlb
fdivs
js
cmc
sub
and
rorl
jo
push
add
ss
push
xor
cmc
lods
cli
push
incb
pop
jmp
out
xor
jno
movsl
in
mov
gs
call
fsubr
and
loopne
add
daa
lock
sbb
sub
or
int3
push
shr
mov
sub
lret
loop
stc
push
jge
push
xor
je
or
jo
xchg
pop
inc
aas
add
sub
pop
jecxz
aad
mov
cmp
jb
stos
cmp
addl
pop
shrl
dec
in
scas
stc
and
pop
jne
bound
test
and
scas
adc
pushf
add
add
shlb
rorb
push
or
xchg
stc
int
and
add
jmp
rclb
pusha
outsb
adc
insb
nop
in
js
fstpl
cmpsb
loopne
dec
or
pushf
mov
inc
sub
cmpsb
in
cwtl
push
subl
decb
mov
dec
divps
push
ljmp
out
xor
sub
or
call
int
aad
icebp
cmpsb
or
push
adc
pusha
mov
cmp
jmp
pop
shrb
inc
lret
sti
stos
fnstenv
jno
outsl
jle
mov
push
imul
mov
add
sar
push
stc
jmp
sub
jmp
test
or
jle
enter
in
push
jnp
ja
fdivs
pushf
cwtl
scas
sub
mov
arpl
gs
test
and
fucom
pop
push
enter
movsb
in
push
sub
xchg
imull
push
push
push
push
shrl
jmpw
popf
pop
stos
ret
jbe
sub
adc
mov
mov
cmp
push
adcl
mov
enter
leave
mov
mov
or
mov
and
adc
push
call
sub
movl
or
addl
imul
cmp
ljmp
push
mov
icebp
fs
shl
xchg
mov
data16
fistl
mov
loop
cmc
cmp
js
shrb
stc
sbb
sbb
lock
sub
and
lahf
mov
ljmp
cld
sub
aas
call
add
pushf
dec
mov
cmp
mov
popf
fwait
in
jmp
fidivl
mov
cld
mov
pop
aad
fnstcw
test
filds
out
popa
add
in
jo
in
inc
sbb
pop
mov
fcomps
in
push
adc
movl
pop
cmpl
and
lea
add
mov
incl
out
clc
mov
out
pop
pop
jae
dec
cmpsb
push
test
decl
outsl
fdivrs
fst
loope,pt
sbb
and
movsb
into
in
inc
inc
out
jmp
inc
popf
cmc
pop
int3
jo,pt
mov
mov
xor
lods
pop
pop
enter
je
jp
dec
sarl
das
stc
fadd
push
test
pushf
bnd
mov
lret
mov
insb
movl
test
pop
inc
sbb
or
cli
lods
push
dec
or
push
xor
cmp
test
xor
stos
mov
bound
fisubrs
and
fsubl
mov
sbb
mov
dec
mov
xchg
in
pop
shll
je
cli
xor
cmp
outsl
cli
and
call
movsl
sbb
cmpsb
push
dec
adc
addr16
aaa
xlat
imul
fistl
psllq
shrb
mov
add
arpl
les
fadd
icebp
out
and
push
cmova
mov
in
rcrl
ja
xchg
mov
shl
test
xchg
push
call
dec
aad
push
jmp
dec
xor
fadd
add
loope
subb
cmp
sbb
cli
mov
dec
dec
shl
sar
imul
rcrl
rorl
sete
test
pop
jmp
cmc
repz
adc
outsl
pop
inc
inc
add
sub
aaa
jo
push
outsb
aam
inc
shl
push
adc
sub
or
pop
fistpll
jmp
sbb
cmp
pop
ds
loopne
mov
mov
nop
ss
pushf
cs
xor
ljmp
push
aam
sarb
sbb
mov
pushf
stc
inc
dec
fistps
in
clc
cmc
jo
mov
loopne
xor
outsb
push
movsl
xchg
rcl
in
cld
pop
or
jb
pop
cmp
ljmp
jg
inc
cli
cmp
cmp
pop
aad
jle
ljmp
xor
cmpl
xor
push
loope
andb
xor
bound
ljmp
test
lds
sub
loope
icebp
jbe
data16
sbb
in
mov
and
xchg
js
push
add
call
add
add
push
fnsetpm(287
sub
rorb
daa
mov
mulb
cmp
push
pop
cmp
jmp
fistps
test
and
mov
sti
xchg
ret
int
js
dec
loope
inc
inc
stos
xchg
xchg
ds
push
xor
les
and
andb
call
pop
aas
shl
push
and
lahf
shrl
hlt
jle
fs
mov
in
mov
loop
ficoms
jmp
fimull
push
dec
pop
add
stos
movsl
add
jmp
ljmp
push
mov
call
clc
push
test
lahf
fistps
mov
or
or
add
and
dec
shll
or
pop
std
enter
inc
push
movsl
insl
lods
out
bound
mov
push
scas
adc
adc
adc
pop
adc
mov
adc
pusha
mov
insb
hlt
mov
push
ret
adc
movsb
pushf
pushf
pusha
cs
out
hlt
mov
push
inc
pusha
push
push
mov
imul
rolb
jbe
lock
sub
sbb
aas
add
shll
lahf
add
pop
or
sbb
ljmp
nop
ret
dec
mov
test
inc
popf
mov
icebp
sbb
push
rep
jmp
push
orb
xor
stos
or
loope
std
movsb
adc
test
ret
or
call
int
add
inc
and
xor
sbb
sbb
stos
pop
imul
jp
xchg
jo
jbe
xchg
addr16
addb
testb
sub
xor
orl
adcb
mov
xchg
stos
xchg
sbb
out
cs
inc
in
push
push
lcall
mov
xor
ficoml
fsubrs
push
sarb
std
cmp
std
iret
cld
stc
sub
push
call
lcall
insb
and
sbb
cmp
push
stos
cs
push
mov
dec
stos
dec
and
pop
fs
mov
cmp
iret
xlat
out
and
mov
rcll
out
cltd
xor
ljmp
or
dec
test
out
add
cltd
push
loopne
adc
or
fbstp
xor
cs
or
addr16
pusha
lahf
push
add
les
das
jo
hlt
ss
mov
aad
popa
rorl
loop
jmp
xchg
sbbl
lea
inc
jmp
push
es
sub
ret
daa
imul
mov
and
rolb
addr16
xlat
mov
sbb
pushf
cmp
fldl
aam
mov
ss
pushf
clc
cmp
push
jno
loope
call
mov
mov
call
cmc
xor
pushf
push
dec
mov
iret
sbb
pop
cmp
push
push
pop
shll
sbbb
jmp
cmp
push
adc
lret
sbb
jle
jnp
aad
mov
push
sbb
push
rorb
add
cmp
shld
int3
pop
sar
sbb
addr16
pop
push
sbb
lods
pushf
lock
add
adc
repnz
push
push
sti
insb
mov
jne
lahf
jmp
or
pop
loopne
mov
aad
mov
out
in
sub
orl
adc
jmp
adc
dec
call
std
imul
ss
roll
push
mov
inc
std
fmull
mov
xadd
movsl
mov
fmul
fmull
clc
mov
mov
jno
ss
mov
sub
push
push
jmp
mov
movsb
mov
xor
adc
leave
inc
pushf
popl
mov
call
insl
add
lcall
test
mov
out
jo
clc
inc
pop
addr16
hlt
ret
sbb
je
stc
ljmp
adc
enter
pop
push
rorb
xchg
push
inc
adc
adc
or
cmp
call
mov
cmpsl
mov
sub
push
leave
inc
cmp
out
stos
popa
mov
and
ljmp
sub
mov
jl
push
sbb
cmp
test
insl
adc
mov
add
sbb
and
clc
int
sahf
adc
jmp
or
jg
nop
push
or
push
dec
imul
stc
mov
test
cmp
push
andl
or
jmp
add
inc
push
adc
xchg
mov
arpl
mov
shl
sub
movl
in
jp
iret
push
mov
adc
sbb
xor
cmp
adc
add
add
inc
aad
mov
push
nop
jge
ficomps
add
sbb
jmp
rcll
in
sbb
push
sbb
xor
pop
adc
je
inc
je
dec
loopne
adc
popa
jmp
outsl
pop
or
push
repnz
insl
aad
mov
roll
xchg
mov
xchg
dec
xchg
movsb
push
nop
push
pop
mov
pop
pcmpgtb
outsb
and
xchg
jbe
push
push
xchg
cli
push
cmp
cltd
gs
sub
sbb
cli
push
adc
jb
jo
xchg
cmp
pusha
dec
cs
sbbl
into
ficompl
pop
push
or
push
lahf
jmp
pop
and
call
add
mov
test
inc
pop
call
and
or
dec
ja
pop
add
jecxz
call
stos
lock
dec
fsubrl
jle
imulb
invd
std
loop
cmp
cmp
cmpl
adc
jmp
call
mov
popa
xchg
test
inc
int
mov
xor
arpl
inc
dec
addb
aad
js
setne
add
in
pop
adc
leave
shlb
fmuls
andl
xchg
icebp
clc
test
sub
lea
mov
dec
out
push
sbb
cwtl
push
add
pusha
lret
subl
cmp
loop
not
cld
push
mulps
cmp
mov
fwait
rorl
in
test
push
push
adc
mov
loop
xlat
jecxz
dec
movsl
and
xor
call
push
inc
mov
fs
frstor
push
xor
mov
out
cld
push
sbb
adc
push
pop
stc
int3
stc
adc
mov
or
addr16
stc
ret
cmpsl
mov
add
ret
mov
push
xor
mov
data16
pop
mov
mov
movsb
mov
jb
insl
add
jnp
mov
js
xchg
jmp
sbb
push
cmpl
xchg
divl
and
sbbl
mov
inc
repnz
je
lahf
cwtl
push
add
add
dec
inc
jecxz
adc
xchg
mov
pop
hlt
insl
add
loopne
add
jecxz
pop
jl
adc
and
sub
gs
insl
hlt
call
jo
les
and
sub
xor
jbe
push
mov
shlb
pop
das
sbb
stc
call
jmpw
sbb
clc
sbb
and
xchg
dec
or
call
test
pusha
add
mov
clc
into
sti
mov
pop
dec
xchg
decl
adc
lods
or
out
cmp
outsb
mov
sub
into
add
or
popa
test
aas
cwtl
inc
ja
fstpl
dec
jmp
xchg
enter
jmp
xor
xchg
outsl
iret
test
cld
add
int3
lret
push
cwtl
mov
hlt
rcrb
lea
movsb
and
rolb
sub
mov
es
lea
aad
xchg
cmp
push
lods
je,pn
sub
mov
out
sub
lea
ljmp
fidivl
xor
sub
mov
loope
xchg
add
jmp
leave
push
dec
jle
popf
sti
add
pop
mov
jbe
pop
or
dec
mov
add
add
pushf
push
rolb
inc
loopne
inc
ja
outsl
in
ficompl
mov
or
adc
push
cmpsl
int3
scas
aad
sbb
xor
cmp
mov
mov
pop
arpl
push
leave
and
inc
fists
sahf
int3
sub
fisttps
int3
stos
outsl
mov
sahf
pop
xchg
push
call
cmpl
sbbb
sbb
mov
fildll
daa
sahf
hlt
xlat
test
push
cmp
push
push
sub
filds
sar
mov
push
int3
addb
inc
loopne
aad
inc
jle
xchg
mov
jmp
lret
adc
sub
add
mov
adc
icebp
pop
ljmp
fisttps
lock
sub
dec
das
xor
xor
in
xchg
jmp
jge
add
jle
pop
or
dec
stos
int3
test
sub
ret
pushl
sub
add
cmc
jmp
fs
outsl
scas
rclb
or
xchg
jp
roll
js
sub
ds
pop
shrl
pushf
pusha
pusha
cli
add
xlat
ret
inc
clc
ret
andl
clc
push
push
nop
cmpsl
ret
test
add
jb
ss
jmp
fiadds
repz
incb
inc
nop
pusha
push
mov
sbb
cmp
mov
pusha
fldl
faddl
outsb
adc
int3
ret
jmp
push
rorb
xchg
push
push
push
and
lds
cwtl
jnp
movsl
mov
hlt
shlb
cmp
add
add
cmp
jno
out
pop
add
jmp
push
clc
mov
loopne
and
jmp
arpl
stc
sub
dec
popf
lock
scas
mov
insl
or
add
dec
jmp
rep
bound
sahf
lret
ficompl
lcall
test
mov
mov
add
mov
sub
call
mov
dec
pop
ret
out
xchg
bndldx
cmp
xor
lea
ss
mov
jmp
pop
movsl
mov
xchg
dec
sahf
push
mov
insb
mov
loopne
mov
testb
pop
les
mov
fwait
pop
pusha
mov
lock
add
push
push
pushf
bound
aaa
lock
jp
enter
xor
clc
cmp
push
push
lahf
fdivs
and
add
out
mov
adc
dec
loopne
xorb
jl
fdivrs
inc
and
hlt
mov
add
push
add
inc
mov
or
pushf
cmc
xchg
cmp
dec
insb
sub
sbb
add
push
sub
fdivrs
fsubr
or
sub
cmp
add
cltd
notb
int3
mov
lahf
sub
rolb
push
push
add
xchg
push
pusha
mov
inc
nop
jns
rorb
and
lea
rorl
xchg
cmp
pop
and
cwtl
fsts
sbb
or
popa
fbld
and
mov
push
call
clc
add
xchg
mov
lret
in
xchg
and
mov
mov
sub
cs
sub
stc
xor
outsl
test
lea
icebp
jmp
dec
lock
idiv
sbb
push
jmp
push
cwtl
push
addr16
pop
sbb
cs
inc
insl
and
jnp
lret
mov
xchg
mov
push
mov
pop
scas
mov
loopne
lcall
bsr
into
sub
iret
jg
mov
loopne
pusha
or
addr16
inc
sbb
stos
out
shll
inc
in
dec
sbb
test
or
or
dec
cmp
test
sbb
mov
dec
inc
jns
add
push
loopne
sbb
inc
and
fisttps
call
fs
jecxz
test
jecxz
out
xchg
jg
fistl
aam
cmc
aad
test
xchg
cmp
addr16
adc
std
adc
call
fmul
and
clc
pop
mov
cwtl
cli
ds
jmp
adc
lock
loopne
not
sahf
push
push
xadd
pop
notl
pop
aad
aaa
xchg
inc
jmp
push
ret
or
and
jno
pop
pop
js
sbb
into
gs
shrl
shrl
xor
daa
adc
inc
aas
push
mov
push
push
inc
sbb
lock
inc
popa
or
clc
cmp
insl
test
stc
xchg
loope
push
add
cmc
test
mov
addr16
shr
cmp
push
mov
stos
imul
lahf
orl
subl
add
dec
push
adc
push
aaa
inc
test
jle
xchg
sahf
sub
call
pop
and
or
push
icebp
cmpsl
ret
test
pushf
pushf
jp
fs
testl
sbb
cli
into
fwait
sub
popa
je,pt
out
gs
pushf
test
xchg
andl
loopne
out
mov
stos
jne
loopne
dec
hlt
sub
add
in
xor
add
jae
jle
cmp
push
push
shrb
js
sub
ret
mov
call
js
push
mov
and
mov
jbe
test
cmp
shr
repnz
call
out
sbb
mov
into
jo
dec
sub
push
loop
adc
push
loopne
testb
aas
or
or
push
fimuls
xchg
sub
loope
dec
xor
sub
call
fldl
ljmp
ret
push
or
push
pop
in
adc
ret
pop
jle
pop
pusha
xor
shl
pop
mov
adc
mov
push
dec
shll
xchg
adc
fists
add
clc
sbbb
mov
andl
shrb
fmull
ds
pusha
cmp
pusha
clc
sti
cmp
cmp
and
mov
orb
popf
inc
push
stc
push
pop
inc
cmpsl
cmp
xor
cmp
dec
mov
lea
mov
rol
lret
jge
mov
shlb
dec
push
push
lcall
imul
sub
jg
ljmp
or
pop
inc
jmp
sub
adc
dec
insl
push
sbb
stc
movsb
xchg
sti
mov
ds
fcmovbe
fadds
add
rcrl
mov
pop
jmp
add
aas
data16
outsl
xchg
dec
into
dec
shlb
out
out
stc
rcrl
push
sub
imul
out
imul
or
loop
mov
cld
movsl
lds
lret
int
and
ljmp
out
out
push
xchg
mov
jmp
cli
add
sbb
fstl
fsubrp
sub
ret
out
pop
xorl
out
adc
or
leave
push
add
test
fsubrs
orl
call
insb
test
daa
sbb
and
fistpll
pop
clc
sbb
or
add
mov
inc
je
mov
rclb
loope
roll
push
xor
and
sub
cmpsb
mov
and
xchg
and
sbb
inc
int3
loop
xchg
repz
dec
dec
fists
jge
add
xlat
push
jecxz,pt
lea
cmp
mov
pusha
popa
stos
addr16
aam
xchg
or
cmpb
and
es
shr
aad
mov
xlat
leave
lcall
inc
lahf
imul
sarb
mov
xchg
push
mov
sahf
xor
sub
adc
sub
je
cmp
sub
pop
cld
lcall
xlat
pop
movl
loope
ss
mov
lcall
mov
cmc
push
mov
loope
cmpsb
loop
out
jae
dec
mov
xchg
lock
cmc
push
movsl
add
adc
scas
cltd
test
mov
iret
xor
outsb
or
mov
subl
call
seto
setge
mov
fisttpl
jge
pop
inc
lock
shl
loopne
insb
mov
cmp
and
test
cmp
in
mov
jmp
ja
pop
add
jno
ljmp
std
add
add
or
push
mov
sbb
js
jo
sbb
mov
mov
jmp
add
xor
lret
jmp
add
rep
pushf
ljmp
add
mov
pop
sbb
xor
and
or
mov
mov
cs
mov
cwtl
popa
sti
loope
jbe
cltd
sarb
adc
and
pusha
jge
add
jb
in
cmp
.byte
mov
mov
push
push
push
mov
mov
pop
push
push
mov
add
sbb
push
push
push
mov
xor
mov
mov
incl
pop
mov
xor
lea
stos
stos
sbb
outsb
xchg
or
or
jmp
mov
out
pop
jmp
pop
cld
call
out
jbe
mov
add
lea
test
shll
pop
movd
stos
inc
daa
loopne
idiv
fisttpl
mov
push
push
jp
sub
ja
lea
and
sbb
adc
push
incl
push
out
inc
sbb
sbb
fwait
adc
sbb
popf
fcompl
mov
mov
mov
dec
lahf
mov
jmp
test
ret
mov
adc
mov
sbb
or
ret
aas
sub
in
ficomps
mov
mov
add
faddl
out
insl
fcmovnu
pop
std
fwait
les
or
pop
cs
lret
lds
gs
popa
enter
cs
in
lret
lret
outsl
int3
int
into
push
iret
pop
rorb
shll
shlb
shll
mov
inc
aad
add
cmp
pop
fdivs
pop
xlat
insl
add
sub
aaa
fisttpl
push
add
jne
mov
pop
loop
jecxz
add
inc
in
out
mov
xlat
add
inc
call
imul
daa
in
pop
in
aaa
lock
pslld
pop
xlat
xor
sbb
add
aaa
clc
pushl
add
pop
sti
js
cld
je
mov
jo
xor
sub
mov
and
push
mov
mov
jmp
and
adc
or
add
fcmovnb
das
cld
rorb
lods
cmp
je
jg
push
mov
add
mov
in
ret
shrl
adc
mov
pop
push
out
neg
in
pop
je
cs
adc
or
nop
mov
xor
les
add
into
cmp
or
loope
sarl
outsl
jl
jae
out
cmp
jne
stos
or
add
daa
xor
pop
push
mov
sbb
cmpl
jl
jb
sbb
xor
push
push
push
inc
push
adc
mov
push
nop
nop
mov
xor
sub
cmp
repnz
or
sarl
push
mov
add
mul
sbb
fsqrt
mov
fildl
pop
or
sbb
nop
add
outsb
add
push
mov
sbb
mov
mov
push
push
daa
mov
or
push
je
mov
push
xor
mov
test
je
mov
sub
inc
inc
mov
test
mov
jne
andb
jmp
sbb
ss
xor
movzbl
inc
or
jg
clc
inc
jl
clc
pop
jg
add
adc
inc
cmp
insl
in
out
shll
add
shll
cmp
sub
add
pop
adcb
pop
dec
insl
lock
or
or
lahf
inc
clc
add
sub
shl
fiadds
stos
shlb
rcrl
clc
or
in
inc
andl
mov
sbb
mov
push
push
imul
jge
add
or
cmpl
push
mov
inc
sub
fisubrl
inc
sbb
xchg
mov
inc
nop
lock
add
clc
fistps
icebp
jae
dec
sbb
cmpb
jbe
mov
cmp
lea
mov
add
scas
lahf
mov
pop
jecxz
insl
cmp
cmp
jl
jae
adc
dec
popa
pop
jbe
pop
sub
shl
dec
jbe
push
sbb
clc
jmp
jne
push
jnp
adc
lods
ficoms
push
mov
xor
cmp
jbe
test
adc
ret
mov
jge
fists
lret
mov
push
or
shl
nop
mov
mov
insl
lea
sahf
sbb
insl
ret
pop
push
adc
xchg
sub
lret
cmpsb
mov
add
sbb
jle
hlt
lret
fmull
frstor
inc
or
fidivrs
fists
gs
mov
push
add
out
faddl
xor
cs
insb
add
dec
cmpsb
outsl
cmpsb
imul
imul
and
pop
mov
jne
xlat
insl
add
and
dec
ret
imul
lds
push
xlat
dec
sbb
enter
push
insb
fildl
cltd
lock
mov
inc
and
dec
pushl
or
clc
mov
movb
add
jmp
sti
cmpsl
add
cmp
call
clc
pop
mov
lret
insl
cld
or
ljmp
jmp
mov
push
mov
sbb
test
test
add
inc
lods
mov
add
push
test
jp
jae
xchg
or
rcr
sbb
imull
mov
popa
adc
push
push
mov
repnz
movsl
popa
pop
adc
idivb
push
mov
push
js
push
das
cld
adc
jns
inc
js
iret
jmp
fdivrl
pop
sti
sub
jne
push
rclb
mov
insl
mov
scas
push
xchg
cmp
and
je
adc
movl
fdivrs
fisubs
in
push
pop
jne
or
movsb
jb
add
or
fcoml
sub
jmp
pop
in
push
inc
je
decl
addl
sub
sti
cmp
aaa
clc
mov
xor
cmp
shl
lahf
push
into
in
movsl
ret
mov
cmp
sbb
movsb
inc
ds
pop
test
cld
ret
insl
aas
or
fsubs
jmp
mov
pop
dec
movb
jne
add
inc
sar
mov
xor
lcall
mov
lcall
cmp
adcb
sar
rol
sub
lea
in
and
dec
insl
adc
imul
test
push
insb
call
add
inc
int3
jmp
dec
add
mov
jb
gs
pop
push
inc
sarb
jmp
xor
icebp
mov
pop
push
push
xlat
pop
rorb
loope
add
inc
shll
popa
call
jne
pop
lods
pop
scas
adc
xlat
jne
xlat
and
pop
mov
mov
jb
pop
pop
mov
mov
fbstp
mov
mov
adc
rclb
movsl
push
adcl
movsl
sub
ret
repnz
push
and
pop
test
mov
lock
mov
jge
xchg
cs
mov
inc
dec
repnz
outsl
or
push
and
clc
idiv
and
mov
movl
pop
dec
xor
mov
ljmp
inc
cmp
pop
ret
mov
movl
mov
inc
mov
jns
sahf
aam
push
inc
push
push
loope
add
sub
jp
stos
push
das
loop
dec
fnsave
sahf
cmpsl
push
popa
xor
pop
pushf
push
pop
sahf
xor
pop
adc
call
or
movsb
jmp
sub
int
icebp
pop
jns
push
outsl
xorl
push
cmp
inc
ret
test
xchg
hlt
push
lcall
pop
jnp
lret
fcoms
mov
sbbl
daa
popf
xchg
insl
popa
add
push
jne
mov
lock
and
rcrw
push
inc
cmp
das
ret
inc
stos
inc
cmp
xor
mov
rol
jbe
popf
cmp
je
push
dec
je
adc
jo
mov
roll
jmp
out
mov
xchg
in
pop
out
pxor
pop
imul
je
imul
into
mov
lods
jmp
cltd
subb
mov
pop
add
mov
mov
pop
std
adc
imul
add
adc
int3
sub
or
loop
xor
adc
lods
iret
es
inc
inc
ret
fcomps
mov
push
cmc
in
enter
push
mov
outsl
pop
adc
test
repz
into
xor
fadds
pop
adc
je
adc
adc
lods
roll
out
cmc
aam
rcrl
jne
or
sbb
add
add
sbbl
pop
je
daa
rclb
or
mov
ret
fcoml
fmuls
adc
or
add
loopne
xor
cld
jp
loope
jg
movsl
movsw
movsb
push
inc
pop
ljmp
daa
movsl
ret
sbb
jbe
cwtl
jne
sarl
testl
fst
popa
and
xchg
push
inc
call
push
jg
pop
imul
and
shll
xchg
pusha
push
and
mov
pop
inc
mov
xchg
inc
fwait
push
sbb
jecxz
cmp
mov
jge
jl
data16
pop
arpl
fisubrl
and
add
shll
ficomps
sub
cltd
pop
idiv
jg
jns
cmp
jle
add
jl
popa
jle
jp
add
fbld
cs
jl
pop
add
popa
lret
push
imull
out
pop
mov
or
pushf
lret
cli
xor
or
mov
enterw
nop
stc
adc
stc
movsb
out
jl
movsl
cwtl
sti
cltd
sti
inc
mov
enter
cld
je
loope
push
or
push
add
adc
loop
adc
push
mov
fisubrl
stos
cmovne
test
xor
inc
sbb
sarb
test
jecxz
mov
in
out
out
pusha
insb
fwait
sub
inc
loopne
sbb
push
or
dec
mov
daa
inc
test
sbb
adc
pop
pushf
inc
push
dec
and
les
pusha
js
das
filds
xor
test
mov
push
aas
cwtl
sti
ljmp
lea
test
sbb
inc
inc
add
sub
testb
int
sub
shll
or
sbb
lock
inc
repnz
cmc
scas
divb
insb
inc
clc
lret
shll
gs
push
insb
gs
adc
outsl
jo
dec
shll
fcmovnu
fst
xor
adc
inc
outsl
jo
xor
imul
mov
bound
ljmp
jbe
dec
xlat
adc
int
jne
jne
push
cmp
inc
shrb
roll
or
inc
aam
mov
mov
adc
sub
push
enter
lock
and
daa
aas
push
negl
adcb
inc
aad
mov
push
xor
jbe
xchg
lret
sti
cmp
je
add
xor
cmp
adc
or
adc
or
xlat
pusha
or
mov
sub
sbb
cmp
adc
or
xor
push
and
cmpsb
jbe
mov
incl
push
icebp
int
mov
pop
out
inc
inc
add
adc
push
adc
lret
push
lea
push
ret
dec
int3
cwtl
and
inc
xor
test
bound
in
inc
movsl
adc
inc
int3
push
call
loope
add
fdivs
xor
mov
idivb
movsb
jl
leave
sbb
es
adc
repnz
sbb
push
jl
jle
add
or
adc
mov
pop
pop
in
ret
adc
xchg
loope
add
popf
jl
xchg
jge
popa
mov
adc
mov
mov
sub
or
sub
or
mov
cld
andb
add
push
jg
sub
outsb
sub
add
les
jne
mov
inc
mov
jae
call
add
in
or
push
movsb
push
xor
lret
add
mov
je
inc
mov
out
addl
adc
ja
jnp
addr16
unpcklps
mov
and
or
lea
sub
dec
push
adc
jb
mov
call
orl
xchg
xor
dec
push
lret
xchg
movsl
sarb
inc
jle
fiaddl
lods
adc
mov
jmp
push
lret
sbb
pop
or
push
cmpsl
loope
insl
testb
or
sbb
divl
out
pop
dec
push
stos
rorl
hlt
fiaddl
cmc
sbb
xor
out
or
sar
jns
cmp
sbb
push
adc
std
push
or
pop
ret
in
add
stos
or
test
mov
in
test
mov
and
cmp
shrb
popa
mov
mov
or
or
cs
adc
adc
cmp
or
jne
lahf
xlat
and
pop
and
pop
out
hlt
pop
adc
push
sti
hlt
popf
xor
mov
mov
add
adc
push
push
jbe
or
mov
sbb
mov
jne
je
cmp
popf
push
test
jae
in
mov
pop
jb
pop
icebp
test
push
inc
add
mov
mov
mov
push
push
and
pop
push
add
pop
gs
fldt
dec
invd
fiadds
ret
inc
ja
hlt
sarl
mov
xor
sbb
sub
mov
test
dec
insl
add
leave
push
cmp
pop
fildl
and
xor
and
push
pop
sbb
push
cwtl
fdivr
ds
jb
add
adc
enter
pop
imul
stc
jmp
adc
mov
adc
sbb
sub
clc
inc
int3
xchg
mov
jge
lods
adc
push
pushf
out
jbe
adc
mov
ljmp
fmuls
bound
and
mov
sbb
out
shll
xor
es
std
adc
shll
inc
pop
or
pop
dec
adc
push
call
jmp
add
jne
in
xor
xor
xor
ss
in
pop
sub
push
or
insb
add
ljmp
rcr
jp
leave
inc
pop
push
xor
fcmovb
jae
xchg
aaa
les
int
sub
add
dec
xor
cmp
sbb
pop
add
std
mov
imul
pusha
or
fwait
aam
push
sub
das
xor
dec
mov
leave
push
js
data16
sbb
pop
sti
jne
stos
jmp
jb
fsub
sbb
mov
add
push
sbb
push
jne
mov
call
repnz
add
call
div
clc
stc
adc
shll
ljmp
je
jecxz
in
in
out
shll
jecxz
jmp
dec
inc
mov
add
mov
and
fucomip
add
mov
push
ja
push
fldenv
scas
jb
ret
adc
orl
inc
jmp
mov
push
std
xor
ljmp
dec
mov
mov
pop
pop
shrl
xor
or
ja
jbe
sbb
xchg
or
cmc
mov
xor
jo
inc
cmp
add
shl
imul
pop
inc
ret
jbe
sbb
into
inc
rol
adc
and
int3
add
inc
mov
push
cmp
jb
sub
out
sub
jae
sub
mov
or
loope
or
cmp
push
ret
int3
cmp
add
movsb
test
mov
fs
mov
fs
enter
adc
sbb
fsubrl
icebp
adc
xor
push
call
cmove
inc
neg
sbb
dec
enter
adc
inc
add
adc
add
mov
or
dec
push
je
cmp
push
or
fwait
sti
jmp
fadds
or
add
lock
jge
sbb
das
mov
clc
mov
cli
adc
or
clc
std
or
push
hlt
mov
into
xchg
mov
xor
jmp
add
xchg
xor
jg
jnp
mov
jne
cmpb
jne
inc
or
add
fildl
repnz
or
jbe
aam
mov
movsb
jl
mul
add
mov
insl
in
push
iret
jmp
sub
int3
addb
int3
inc
mov
js
inc
xchg
cwtl
xor
stos
out
aaa
jl
in
out
mov
push
push
test
mov
add
mov
mov
loopne
xchg
mov
cmpsl
fadds
adc
movups
fldenv
insl
ret
mov
add
cmpsb
adc
xchg
lcall
aam
repnz
mov
add
and
shll
adcb
sub
loopne
lcall
xor
push
je
mov
insb
int3
aaa
dec
xor
push
mov
cld
xor
push
ss
shrl
sbb
shll
pop
fs
shll
lods
mov
dec
shll
int3
aam
out
shll
cli
push
jg
add
cmp
shll
dec
fdivs
add
add
pop
movsb
add
lea
loope
loop
aas
gs
sub
sub
fwait
sbb
int3
cs
loopne
inc
gs
test
mov
mov
xor
xchg
mov
xchg
xor
inc
add
dec
inc
dec
incl
sti
pushl
xor
fs
insb
add
push
inc
push
dec
or
xor
gs
mov
ljmp
xchg
das
push
leave
sbb
add
lods
mov
popf
xlat
ljmp
cli
ljmp
jo
jo
fld
repz
int
sbb
mov
mov
inc
std
mov
pop
dec
push
into
push
test
mov
push
xor
add
adc
fldcw
inc
sbb
pop
pop
add
and
and
pop
add
pop
andb
outsb
gs
test
xor
mov
daa
jae
cmpb
dec
scas
shl
lsl
mov
pusha
pushf
call
mov
lea
jge
rcll
je
lea
mov
adc
out
adc
jnp
add
add
push
push
push
push
push
idivb
cmpb
add
popf
popa
jmp
jle
inc
pop
pop
pop
adc
into
scas
loope
repz
mov
fldcw
xor
cmc
lret
call
mov
je
ret
mov
mov
aas
mov
pop
in
in
mov
and
pop
neg
and
inc
outsl
insl
arpl
inc
jae
arpl
jae
std
dec
or
cmpsl
mov
pop
into
les
mov
int3
out
add
mov
mov
sub
out
or
mov
mov
inc
dec
dec
inc
inc
inc
dec
inc
pop
inc
fistps
add
pop
daa
aam
jnp
out
lods
lret
rol
mov
mov
mov
aas
jno
lea
xchg
mov
cmp
popa
arpl
and
shlb
aaa
in
fstl
mov
mov
add
mulb
clc
pop
aad
enter
insl
outsl
fs
aam
dec
xor
cmp
jmp
xchg
imul
imull
jne
push
sub
clc
pusha
cld
insl
jae
je
insb
jo
outsw
outsb
mov
ss
mov
mov
jmp
fwait
cli
out
mov
cmp
outsb
popa
push
push
jb
arpl
in
fbld
sbb
outsl
jo
aaa
fs
mov
outsl
je
push
je
jns
or
add
scas
lock
js
push
and
add
mov
data16
and
inc
mov
bound
inc
dec
push
push
push
inc
push
inc
mov
cmp
pop
dec
dec
inc
push
dec
mov
fildl
imul
pop
xchg
lcall
shlb
adc
or
mov
add
jg
mov
dec
add
out
or
add
mov
incb
mov
mov
mov
int
mov
push
jb
addr16
pushl
insl
and
outsb
outsb
outsl
je
bound
jb
outsb
and
inc
dec
push
and
pop
sti
sbb
cs
idivb
addr16
fistpll
add
les
mov
mov
ffree
insb
dec
mov
neg
aaa
xor
imul
pop
arpl
repz
jno
cmp
cmp
or
out
push
dec
cmc
xchg
jnp
imul
dec
add
add
cmp
and
adc
jbe
jmp
jne
jle
mov
add
add
insb
adc
add
add
pop
add
add
clc
add
add
add
pop
or
dec
ss
add
inc
dec
mov
mov
enter
andb
jg
je
js
jmp
nop
jbe
lock
shrl
jb,pn
popa
je
popa
frstor
sti
or
or
jp
into
jle
arpl
inc
cs
add
inc
sub
add
push
js
or
in
in
add
daa
pusha
ja
jbe
insl
add
jnp
daa
or
incb
jb
insb
outsl
arpl
and
mov
insb
xlat
xor
push
sub
rclb
push
mov
pop
cmp
sbb
pusha
adc
or
push
pop
sub
or
mov
sub
mov
movsl
scas
mov
dec
lds
les
mov
pop
dec
pop
pop
push
or
decl
pop
rolb
mov
cmc
stc
cmp
stc
xor
call
aaa
scas
bt
sub
pushf
mov
call
mov
call
sbb
cmpsb
arpl
leave
outsl
adcl
mov
push
test
test
mov
mov
imul
imul
call
xor
sub
mov
push
add
mov
or
call
pop
ja
push
lods
loop
or
push
mov
jne
lock
mov
in
or
cmp
sub
into
mov
or
and
int
jo
mov
lea
jmp
notl
lea
inc
push
repnz
lcall
sbb
lea
mov
bswap
not
pushl
pusha
cmp
inc
lds
and
and
xor
out
or
into
pop
xchg
neg
or
clc
shl
sub
pusha
xor
sub
mov
pop
lea
pushl
mov
dec
jmp
xchg
cmp
sti
push
push
xchg
out
pop
sub
test
call
mov
sbb
push
sbb
or
roll
pop
pop
pop
repnz
loope
add
sbb
test
in
add
or
xor
test
jle
cmp
xor
rclb
je
jne
mov
inc
mov
mov
inc
push
push
jmp
sti
divb
popa
add
add
cmc
nop
mov
add
leave
pusha
jmp
cmp
outsb
rorb
and
sar
xlat
scas
adc
push
mov
ljmp
fistpl
push
int3
sub
in
lods
lock
add
push
call
repz
call
mov
xor
bound
add
adc
mov
and
add
mov
xchg
adc
dec
jmp
clc
xorb
jmp
inc
push
inc
mov
icebp
sbb
push
shl
lea
push
inc
mov
push
incl
add
cmp
outsl
and
jmp
pop
push
push
inc
loopne
xchg
push
test
push
mov
lcall
movsbl
cmpsb
mov
mov
outsl
out
sub
stc
jmp
jae
lea
adc
push
mov
add
pusha
pushf
std
xchg
test
dec
ret
cmp
push
call
cld
add
inc
sub
add
cs
clc
jno
mov
je
fdivs
inc
add
sbb
mov
out
loope
idivl
add
push
fwait
or
stos
outsl
pop
std
mov
xor
cmp
or
loope
mov
inc
adc
arpl
outsl
cmp
jbe
lea
mov
sub
rorl
sbb
lods
adc
mov
inc
push
push
movsl
add
fcomip
pop
mov
xor
jp
mov
pop
test
or
push
adc
pop
xchg
xlat
dec
pop
mov
daa
mov
dec
add
push
jmp
mov
lock
add
add
cli
mov
pop
cwtl
jge
xor
popf
popa
movsl
xchg
fildll
dec
mov
inc
jecxz
mov
pop
jb
mov
outsl
mov
decl
sub
cmc
pushf
stc
add
cmp
mov
mov
sub
dec
call
xor
xor
stos
mov
cltd
aad
aam
pop
dec
cmp
pop
jge
mov
ret
imul
sar
test
mov
stos
mov
and
xor
xor
add
fmull
outsb
adc
push
cmp
dec
in
lcall
lds
pop
aaa
sub
imul
leave
ret
loopne
xor
loope
and
mulps
jmp
lea
jnp
popf
add
popf
js
jo
add
scas
or
cmpsb
addl
call
mov
clc
push
shrb
xlat
mov
in
lret
loopne
arpl
popf
mov
cltd
pushf
pushf
sub
andl
adc
nop
fstps
add
push
ljmp
ja
cld
or
cmpsb
fwait
shlb
movb
mov
push
sbb
cs
cmp
icebp
scas
xor
fdivrl
push
push
out
fldl
or
sbb
subl
add
push
aas
insb
sbb
add
push
sub
mov
sbb
mov
es
pushl
outsb
fsubs
lods
jecxz
fldt
jbe
ds
pop
or
inc
sbb
push
push
pop
xchg
add
xlat
lock
sbb
stos
insl
add
sub
outsb
mov
cmp
arpl
jge
sbbb
or
jne
adc
int3
add
mov
or
sarb
fs
cwtl
ljmp
mov
pop
sbb
lds
daa
test
mov
push
push
lea
imul
fwait
ret
sbb
arpl
and
cmpsb
push
call
xchg
loopne
loopne
xchg
dec
push
into
std
and
sbb
or
cmp
add
in
loopne
dec
lods
and
outsb
ret
push
lea
pop
cmp
ret
shr
fdivrp
repnz
adc
pop
cmp
or
add
movsb
mov
loope
and
out
std
movsbl
loopne
fisttps
stc
inc
sti
and
mov
push
adc
div
add
push
pop
icebp
mov
mov
xchg
lds
test
mov
push
pushf
call
pushf
mov
inc
jmp
sbb
pop
loop
add
push
popa
dec
mov
mov
add
pop
lcall
inc
insl
mov
mov
aam
popf
enter
mov
add
xor
add
mov
mov
or
in
js
subb
gs
xchg
roll
xor
mov
sub
outsb
push
sub
js
push
push
push
fwait
cmp
imul
push
xor
mov
pop
ja
sbb
js
sbb
faddp
sahf
and
call
xlat
push
cmp
sbb
add
fsubr
inc
dec
rolb
and
mov
push
inc
cmp
fcmovnb
hlt
jae
mov
dec
xchg
jg
cmp
sti
xchg
lock
xchg
or
and
push
cwtl
insl
xchg
mov
call
mov
push
adc
aad
shlb
in
push
subl
xor
sub
js
faddl
add
add
iret
cmp
lcall
pop
and
incl
mov
push
mov
cld
jno
inc
mov
into
mov
mull
sbb
lea
push
jge
push
sahf
cmc
mov
mov
cwtl
adc
mov
pusha
push
push
pop
hlt
in
sbb
xor
adc
push
repz
push
pop
pop
mov
jle
xlat
gs
andb
mov
rol
xor
andl
enter
mov
bound
in
ret
mov
iret
ss
rorl
push
xlat
and
pop
sarl
mov
add
int
mov
scas
sub
mov
xchg
mov
mov
insl
pop
push
test
xor
daa
rcll
xchg
movsl
movsb
lcall
pop
fnstsw
mov
xchg
sahf
mov
sarl
in
lock
stos
dec
mov
mov
mov
out
mov
or
loopne
in
lods
loope
rcr
push
lds
mov
xlat
mov
rcrl
mov
insl
mov
pop
mov
roll
mov
cmp
sti
jne
push
call
enter
cmp
xorl
pushf
cmp
pop
sbbb
mov
call
or
jmp
ja
jne
arpl
and
sbb
stc
add
xchg
lret
cs
arpl
and
and
in
cltd
insl
cs
jle
jb
loopne
movb
inc
sub
xor
mov
jbe
cwtl
push
inc
or
fildl
mov
fnstenv
test
in
mov
test
pop
sbb
inc
or
adc
push
jp
bswap
adc
loop
rcr
out
sub
into
pop
dec
lcall
jmp
mov
mov
adc
lret
sub
mov
icebp
rcll
xchg
pop
faddl
mov
cmp
mov
dec
pop
ss
mov
icebp
clc
ret
test
icebp
movsl
push
ja
mov
in
or
and
or
xchg
or
ss
leave
les
dec
jge
inc
das
push
mov
and
negb
bound
push
cmp
fwait
sti
fadds
xor
sub
xor
and
xor
mov
jae
out
xor
out
inc
xor
sbb
pop
mov
mov
popa
pop
inc
loopne
push
andb
shlb
test
add
sbb
or
addr16
loopne
add
arpl
inc
mov
mov
adc
add
test
xor
stos
test
mov
dec
mov
icebp
push
repnz
or
push
pop
andb
pop
pop
pop
xlat
xchg
je
mov
mov
mov
mov
imul
pushf
imul
add
mov
shll
jns
stos
test
into
xor
lods
loopne
mov
adc
pop
jp
mov
cld
mov
scas
scas
xor
mov
cmp
fiadds
scas
sub
div
push
xlat
add
xchg
out
push
pop
jbe
call
mov
and
push
or
int
jne
dec
pop
call
adc
mov
dec
adc
jl
pop
aaa
fisttpl
aaa
adc
imul
std
inc
subb
dec
sbb
repz
adc
ud2
fldl
call
mov
clc
or
push
mov
jae
dec
mov
out
and
adc
dec
mov
mov
sbbb
xor
cmp
adc
cmc
mov
mov
adc
cmp
addr16
mov
sti
lods
fildl
mov
nop
sub
and
mov
sbb
dec
pop
lret
mov
loope
lcall
je
mov
cmpsb
lcall
jp
sub
fistps
push
paddb
call
xchg
xchg
daa
add
mov
sbb
push
and
dec
xor
xor
mov
es
adc
xor
jne
or
and
mov
adc
cmp
out
clc
mov
lcall
mov
call
in
test
xor
xchg
xchg
jmp
jg
call
loope
push
or
pop
outsl
pop
push
mov
cli
sbb
call
push
loop
dec
push
in
jb
jmp
jge
ret
cpuid
or
in
xor
insl
sbbl
cld
or
shl
add
pop
or
push
add
lods
push
cmc
test
cmp
stc
rolb
cltd
divb
push
jns
lock
out
pusha
pushf
icebp
popf
add
mov
ds
cmc
mov
imulb
in
xchg
mov
mov
pop
mov
add
setns
or
or
scas
les
add
sub
jb
inc
xor
aam
xchg
shll
adc
adc
push
or
fadds
lea
add
lret
inc
lock
repnz
out
or
shll
imul
adc
sub
add
popf
scas
jmp
in
not
jne
xchg
subb
fdivrl
mov
inc
int
or
lods
add
xchg
andl
xchg
mov
scas
ds
cmpb
roll
xchg
rcrb
add
roll
call
nop
add
push
sbb
push
mulb
sbb
in
in
roll
mov
push
pop
rolb
xor
pop
add
xchg
nop
xchg
adcb
testb
inc
ftst
jp
jo
lret
add
or
out
ss
xor
shlb
sbbl
sbb
pop
and
inc
les
mov
ss
sbb
sbb
xchg
pop
push
or
mov
inc
pop
cmp
insb
insb
test
movsb
mov
rorb
dec
mov
adc
jae
sub
adc
xchg
sub
push
jecxz
sbb
inc
xlat
mov
mov
add
loope
jno
icebp
push
and
xor
cmpsb
test
pop
inc
push
stc
sub
gs
xlat
rcl
xor
fmuls
int
xlat
xor
into
iret
rcl
pop
shr
pusha
xlat
shlb
ret
xchg
lds
daa
movl
add
subl
inc
in
out
out
xchg
orl
xor
pop
push
push
orl
adc
or
ret
xor
aam
pop
add
push
pop
adc
js
add
out
mov
push
insb
and
cmp
jnp
loope
inc
test
cmp
iret
fdivs
int3
mov
cmpb
in
dec
loope
xor
mov
push
fsubl
cmpsb
dec
rcll
sub
mov
inc
lods
jnp
ret
sub
or
call
iret
jno
into
ficoml
and
sbb
shlb
out
jge
sahf
nop
push
and
int
inc
outsb
rcrl
add
or
ret
sbb
jg
xor
add
pop
or
cli
sub
push
xchg
call
sbb
pop
int
into
iret
pop
rcrb
daa
mov
roll
aam
push
inc
test
sub
scas
jmp
jmp
fnstenv
ficoml
or
aad
cwtl
xlat
call
js
adc
cmp
je
mov
gs
ljmp
je
sub
xor
add
mov
dec
mov
stc
lock
and
inc
cmp
test
xchg
xlat
jne
loope
loop
jecxz
fidivl
or
out
call
loopne
test
in
xchg
jb
inc
push
add
icebp
sbb
mov
repz
jmp
imulb
testl
mov
xorb
scas
mov
inc
push
cmovno
rorb
xor
xor
loopne
xchg
push
mov
pop
adc
mov
xchg
or
stos
sub
js
mov
lods
cs
mov
pop
xor
inc
push
shrb
mov
leave
jne
inc
lret
adc
cs
jbe
or
jp
psllw
fisubs
out
xor
sub
mov
push
push
inc
inc
cmp
jge
out
xor
pop
and
pop
push
out
in
push
movl
adc
das
and
adc
fstpl
pop
mull
sbb
ret
sub
dec
mov
add
in
cmpsl
aad
pop
inc
test
sub
adc
pop
mov
nop
mov
pop
lods
jno
push
mov
lods
jg
ss
daa
popf
adc
iret
add
sub
loop
add
mov
lea
pop
push
push
fwait
cmp
test
mov
jmp
ja
shrl
fld
roll
rcrl
add
push
popf
xlat
fstpt
pusha
mov
jmp
fwait
clc
mov
pushf
pusha
sar
and
shl
shl
orb
push
outsl
das
aam
clc
loopne
loop
movsl
call
cmp
lock
sti
insl
push
inc
or
inc
jle
mov
and
lahf
aam
das
shlb
add
push
je
or
in
fstpt
mov
ret
pop
pop
jae
or
add
pop
loopne
call
decl
add
cmp
jg
cmp
jl
push
inc
xor
mov
out
jb
push
push
hlt
aam
inc
sbb
push
push
orb
xor
sub
or
inc
and
push
add
loopne
aad
loope
out
not
outsb
push
xchg
jmp
or
sbb
jmp
push
movsl
and
jg
call
push
adc
jne
add
pop
inc
test
sbbl
adc
push
pushf
push
push
mov
scas
inc
pop
inc
test
insl
mov
roll
mov
jne
ret
imul
jmp
and
add
sub
lds
std
mov
add
and
call
dec
sar
lcall
lods
xor
add
push
ret
loop
mov
xorb
stos
pop
xor
jnp
mov
or
xchg
rolb
jg
inc
dec
inc
mov
or
push
add
popf
lea
pop
sbbb
aad
dec
or
int3
les
adc
mov
cmp
test
xchg
rcll
jmp
in
aaa
push
sub
jg
inc
subl
clc
adc
sub
push
les
sbb
pushf
popf
aad
sbb
jp
popf
repz
push
jno
xchg
push
pop
dec
or
aam
orb
mov
mov
sbb
push
xor
sub
push
cmp
mov
jmp
push
pusha
mov
clc
mov
sti
or
pop
jp
push
lods
adc
loop
fbld
xchg
add
cmp
sarl
jbe
dec
adc
dec
loopne
fistpll
mov
dec
sbb
push
push
daa
divb
add
jne
inc
lahf
clc
insl
lock
cld
js
adc
cmp
dec
rolb
cmpl
mov
mov
jne,pt
add
pop
insb
push
testb
call
mov
decl
push
cs
push
outsb
or
imul
push
xor
and
adc
insl
jle
fnstenv
fwait
xor
push
sti
imul
es
push
xor
sbb
adc
call
testb
or
and
pusha
xchg
add
js
dec
and
jo
scas
jae
mov
cmp
cltd
push
push
xchg
or
shr
add
rcr
lahf
lea
pushf
cmp
mov
xlat
aaa
in
add
mov
in
add
or
dec
push
or
xor
pusha
mov
or
in
push
dec
insb
ret
jg
les
xor
inc
fmull
fsubp
call
mov
inc
mov
shlb
jo
cmp
mov
jo
ret
add
sub
mov
and
add
or
insl
or
call
pop
push
notb
test
jmp
ds
add
add
loopne
inc
call
movsb
std
cmc
fs
cld
loopne
mov
xor
adc
jne
push
dec
lods
push
pop
ss
andl
adc
sbb
hlt
add
in
adc
mov
pop
addb
or
add
enter
pop
addb
mov
add
js
push
mov
mov
pop
sahf
out
push
rorb
fisttpl
and
call
jbe
ljmp
inc
or
cltd
idiv
imul
mov
xor
ss
fmuls
cld
das
clc
lcall
cmpsb
xchg
stos
inc
mov
stos
shl
mov
pusha
sub
cmc
cmc
lea
cld
rcr
add
neg
call
add
push
call
fildl
cmc
pushf
cs
pusha
daa
dec
pushf
ss
add
loope
mov
fisttps
shrb
inc
stc
jmp
jecxz
add
lds
cmc
test
not
loopne
rolb
ficoml
pushf
mov
inc
aam
fdivr
adc
jo
sbb
inc
or
inc
push
pop
push
inc
dec
out
rcr
adc
movsl
loopne
cmc
pop
ror
xor
loopne
jmp
pushf
sbbl
or
xchg
fadd
sar
or
add
jl
sbb
mov
jmp
dec
cmpsb
mov
adc
and
mov
mov
outsl
add
inc
add
ljmp
cmp
xchg
out
add
sti
sbb
pop
xchg
clc
mov
and
cmp
ret
pop
push
jmp
add
sub
add
adcb
fucom
scas
pop
jmp
pusha
mov
pop
insb
cmp
call
sbb
sti
push
fisubrs
js
mov
inc
add
call
inc
push
andb
test
dec
dec
mov
or
cmp
cmpsb
mov
cwtl
mov
adc
rolb
jl
push
pop
rcl
add
repnz
clc
push
sub
push
xchg
pop
xor
jmp
mov
dec
in
cld
mov
lock
test
call
push
add
aaa
add
push
push
call
lea
add
sub
push
push
lock
mov
inc
scas
xchg
or
jp
pop
movsb
stos
das
push
dec
push
mov
mov
dec
xor
aas
add
sub
jmp
ret
cwtl
pop
push
jae
jno
add
xchg
sub
cmpsl
or
inc
xor
cmpsb
mov
cltd
xchg
lds
sahf
sbb
ja
mov
mov
ljmp
push
xor
mov
shll
and
or
xor
movb
xor
clc
shlb
pushf
xor
or
xchg
iret
repz
xor
push
and
add
pusha
push
and
adc
out
dec
or
fstpt
movl
rcrb
jle
mov
cmp
das
add
sub
inc
push
jl
sbb
movsb
fimull
inc
ret
or
dec
mov
cmp
mov
add
push
inc
jl
mov
icebp
adc
in
call
sub
mov
inc
mov
push
lahf
dec
rcrl
insl
aad
mov
outsb
jo
stos
scas
push
push
push
loope
std
jle
mov
pop
inc
insb
call
sarb
add
cld
enter
lret
cmp
sahf
ret
adc
mov
icebp
call
mov
mov
adc
inc
xchg
inc
add
mov
push
mov
jmp
les
mov
out
or
mov
call
mov
push
mov
push
mov
mov
mov
ja
xchg
sub
sti
add
pop
loopne
je
hlt
fwait
test
je
add
lock
shr
add
out
inc
mov
std
incl
add
jge
xor
lea
add
rorl
lods
gs
mov
sbb
push
xchg
cmp
cmc
outsl
aam
ret
xchg
or
mov
mov
in
or
in
sbb
aam
jns
std
push
mov
mov
cmp
dec
arpl
or
stos
jne
orb
loope
mov
adc
jp
pop
adc
bound
movsl
inc
adc
ret
mov
mov
mov
push
mov
mov
cld
test
mov
insl
fsubs
and
pop
out
mov
insb
sbb
cld
sbb
adc
or
jle
pop
sbb
mov
cmp
leave
ret
pop
lods
pop
add
jecxz
cmpl
push
std
in
push
push
mov
mov
fdivs
ja
jnp
outsb
mov
add
sbb
cld
pop
sub
mov
jne
mov
pop
and
mov
mov
or
jmp
mov
mov
jno
add
push
ret
add
cmp
cmp
sbb
or
ljmp
push
xor
push
arpl
mov
aaa
jno
lods
mov
cmp
mov
mov
jne
xor
lock
or
je
jmp
leave
adc
rolb
in
or
cmp
push
ljmp
stos
jno
out
sub
cmpsl
add
add
shl
cmp
jmp
mov
push
rorl
xor
or
and
mov
movsl
sti
dec
add
jns
es
push
mov
cmp
add
pop
sub
cmp
mov
insl
push
adc
adc
push
add
xor
xor
push
lock
aas
jno
mov
add
jno
or
out
pop
addl
jne
push
pop
outsl
decl
jmp
mov
mov
jmp
fimull
dec
lcall
xor
jp
and
pcmpeqw
dec
or
pop
or
jmp
testb
fnstenv
mov
mov
jp
js
jno
jo
mov
pop
jle
std
sahf
in
jne
jbe
push
sub
and
sbb
xchg
push
int3
add
stc
jne
rcrl
mov
je
scas
sub
jge
pop
sub
xor
loop
lock
push
idivl
push
or
pop
adc
pop
push
jns
fs
sti
test
pushf
in
insb
mov
inc
add
jp
fs
insb
mov
pop
mov
jo
mov
sbbl
push
inc
or
sub
add
sbb
sbb
fnstcw
and
stos
dec
jp
or
out
mov
pop
xchg
imul
pop
jmp
cmp
je
dec
dec
fnstsw
in
push
call
sub
lock
jne
pop
and
sub
pushl
inc
cmc
jp
pop
stos
add
mov
movl
in
mov
xchg
into
cmp
inc
mov
insl
mov
sbb
pop
mov
add
int
call
or
xor
pop
das
fcmovnbe
or
mov
testb
push
xor
or
pop
pop
push
subb
js
mov
mov
fdivrs
jae
test
test
jb
lea
ss
out
mov
out
xchg
bound
bound
xor
mov
ds
sqrtps
or
add
jbe
movsl
sbb
inc
adc
lea
lock
sub
mov
call
jmp
sub
ret
je,pn
cmp
je
pop
push
push
push
roll
pop
cld
outsb
popa
and
xchg
cmc
adc
adc
xchg
pop
lds
fcoms
clc
das
mov
addr16
jbe
lea
pushl
decb
mov
scas
dec
inc
pop
or
dec
cmp
fistps
jb
jmp
imul
add
lea
movsl
add
jnp
mov
lea
clc
pop
adc
cmp
adc
test
mov
dec
int3
movl
xor
pop
lret
enter
push
or
std
mull
pop
int3
sbb
pusha
cmp
insb
scas
mov
push
push
mov
mov
pop
adc
push
push
hlt
lods
call
enter
or
adc
int3
add
pop
cmp
xor
push
push
push
add
test
add
das
mov
mov
lock
lock
mov
hlt
fstpl
nop
jbe
mov
imul
ds
insl
aam
fsubs
das
jae
out
fsubrl
jo
gs
push
test
in
push
xor
lret
mov
rcll
push
jecxz
or
daa
push
movsb
callw
add
push
or
xchg
jo
inc
or
sbb
stos
xchg
in
lock
pop
jl
sub
sbb
push
hlt
and
or
adcl
enter
or
lods
lcall
test
pop
mov
xchg
iret
mull
aaa
sbb
fldl
inc
test
fstps
xor
ret
mov
inc
lock
shll
nop
loop
cmp
ret
pop
sbb
add
sbbb
xchg
mov
cmp
fsubrl
std
xor
in
push
jno
cld
loope
cld
das
outsl
out
inc
sar
or
sbb
jle
jb
push
push
push
push
insb
imul
sub
movsl
push
push
xor
add
jnp
sub
pop
or
mov
pop
xor
pop
addb
jmp
mov
pop
andb
test
xchg
and
mov
inc
mov
ds
mov
pop
pop
mov
dec
shll
cs
insb
sbb
sbb
mov
je
dec
dec
sbbl
push
jo
cmpsl
mov
cmp
outsl
jne
push
cmp
mov
inc
sbb
and
shrd
sub
lock
stos
mov
jo
andl
aad
or
fcoms
pop
pop
jb
mov
pop
sub
ja
loop
out
mov
movsl
aas
sbb
pop
in
scas
mov
fisubrs
in
push
test
cmpb
pushl
xchg
sbbb
inc
add
in
inc
icebp
inc
mov
jne
and
xchg
sahf
outsl
mov
lea
cmp
add
loope
repnz
xorl
shll
inc
push
lds
pop
sbb
and
in
mov
sahf
cmp
std
sbb
pop
xlat
mov
adc
dec
mov
sbb
dec
sbb
hlt
pop
test
outsb
inc
xchg
lock
ficompl
inc
or
repnz
inc
icebp
mov
jmp
divl
mov
or
adc
insb
int
inc
sub
subl
add
fisttpl
xchg
outsl
mov
fldt
mov
lea
mov
jbe
xlat
aad
in
xchg
push
cmp
fisubrl
xchg
aaa
xchg
je
scas
imul
popf
bound
mov
inc
mov
inc
movsb
movsl
inc
jo
mov
add
pop
test
sub
sub
push
rolb
dec
iret
pop
ja
xor
mov
aam
dec
aam
mov
sbb
sub
inc
dec
lcall
sub
mov
loop
lgs
push
and
pop
mov
mov
ret
push
adc
mov
push
test
dec
sbb
push
popf
inc
xor
mov
test
adc
adc
fsubl
mov
and
pop
push
and
push
mov
cwtl
shlb
pusha
xlat
faddp
fadd
ja
push
mov
in
bound
movsl
lret
fidivrl
xchg
dec
and
push
push
cmp
sub
adc
les
xlat
jle
mov
ret
mov
sbb
push
ljmp
cli
add
push
inc
mov
dec
pop
or
push
outsl
xchg
sar
and
fcmovne
inc
cmp
jbe
adc
test
or
sbbb
mov
add
pop
mov
push
push
inc
std
mov
cmc
sub
cmpl
cmpl
mov
or
pop
push
mov
dec
and
jbe
jge
jae
stos
xor
icebp
sbb
inc
push
sub
dec
je
sub
clc
xor
mov
call
test
adc
pop
adc
inc
adc
pop
pop
negl
call
in
push
inc
mov
inc
mov
loopne
mov
int
orl
ss
mov
xchg
cmc
push
adc
or
push
sbb
and
je
add
mov
cld
adc
std
push
pop
fisttpll
scas
movsb
adc
insl
out
in
je
xchg
sbb
je
push
into
xor
dec
xchg
xor
jge
pop
mov
insl
ljmp
push
or
push
ja
inc
push
lcall
imul
into
xchg
imul
adc
xchg
jmpw
pusha
push
push
popa
outsb
int
fldt
xlat
arpl
dec
shll
insb
outsl
inc
stos
mov
stos
pop
lods
sahf
lods
or
xor
sbb
push
mov
dec
popa
imul
push
push
fmuls
jo
fisubrl
cmpsb
imul
imul
inc
xor
sarl
xor
scas
imul
or
cmp
out
jne
inc
test
fwait
jmp
nop
push
pusha
test
movsl
cmp
test
push
popa
movsl
cmp
cmp
cmp
push
movsl
cmp
cmp
cmp
test
aas
sub
jns
mov
mov
test
push
inc
xor
dec
cmp
clc
inc
mov
inc
popf
pop
js
sub
sub
arpl
popf
popa
dec
test
into
into
dec
mull
and
arpl
in
in
insb
push
push
imul
in
insl
push
inc
outsb
and
jo
jno
jb
andl
jb
mov
dec
cltd
lds
or
fwait
pushf
popf
dec
add
inc
and
or
je
fisubs
scas
imul
lret
int3
pop
cmpsb
addl
int
into
in
out
lcall
jne
insb
imul
dec
add
test
test
mov
or
in
push
les
sbb
jne
jbe
adc
jmp
jns
je
lea
inc
test
jl
addr16
popa
jge
jle
jg
push
dec
les
xorb
push
pop
inc
add
insl
lods
and
mov
cs
sub
adc
loopne
jo
xchg
add
cmc
pusha
in
fiaddl
xorl
mov
pop
imul
lea
push
lock
and
push
bound
roll
add
lods
mov
sub
sub
repnz
mov
jbe
hlt
xchg
mov
add
int3
adc
aas
loopne
in
inc
repnz
xor
xchg
xor
fimull
push
lods
scas
shll
add
divl
jg
idivl
orb
add
and
mov
shlb
cmp
mov
enter
stc
aad
stos
mov
negb
cwtl
je
popw
mov
add
in
push
mov
lea
sbb
xor
lahf
sbb
in
jmp
sub
mov
inc
or
add
cmpsb
cmp
xor
xchg
dec
push
push
je
mov
mov
stos
inc
cmp
mov
pop
jmp
adc
dec
ret
ljmp
sub
add
outsb
mov
xlat
jns
aaa
mov
push
aad
xor
idiv
jns
mov
xlat
jbe
add
sbb
xor
xchg
jp
jno
insl
or
mov
adc
jnp
mov
sbb
push
and
jl
sbb
fisubrs
test
mov
adc
dec
bound
mov
and
inc
and
movb
repz
adc
push
add
adc
andb
outsb
shl
stos
pop
hlt
std
ja
xchg
nop
add
add
aad
call
pushf
jle
adc
sbb
pop
jle
bound
cmpl
mov
jne
andl
sub
xor
mov
add
sti
cld
arpl
mov
pop
add
sarb
leave
xor
adc
ds
ljmp
dec
out
mov
aas
mov
push
sub
ds
je
and
push
pop
xchg
gs
push
rclb
push
jmp
xchg
or
cmp
push
rolb
or
or
push
mov
or
cmp
or
les
test
dec
std
or
ficoml
add
scas
push
adc
ret
inc
xor
fdivs
inc
mov
add
mov
push
jmp
push
push
decb
mov
sbb
adc
lods
repnz
inc
in
mov
xor
lods
adc
js
push
inc
pop
incb
and
sahf
sub
dec
gs
mov
fldt
fmul
pop
fisubs
cmpsb
imul
loop
jne
jecxz
in
pop
mov
insb
aam
out
call
push
jmp
sbb
shll
aad
test
add
fld
adc
mov
lds
mov
cld
inc
pusha
sbbl
shll
shr
add
mov
sbb
inc
call
jge
adc
jmp
adcb
xlat
pusha
shrd
push
aad
sub
push
ja
xchg
inc
sbb
mov
pusha
arpl
pop
mov
sbb
in
aad
sbb
mov
jo
mov
cmp
mov
sbbl
push
push
cmp
add
adc
push
in
std
pop
push
push
and
pop
xor
addr16
fnstenv
mov
mov
pusha
lret
push
sub
aaa
mov
ljmp
jne,pn
cmp
and
or
xor
cmp
mov
or
jmp
jle
movb
adc
and
pusha
jo
loopne
adc
nop
jecxz
ret
lods
adc
push
xchg
mov
inc
out
or
mov
mov
inc
test
and
movsb
mov
cmp
pop
rcrl
loopne
xor
push
push
inc
lods
mov
add
xorl
and
adc
fisttpl
sbb
lods
mov
test
xor
xchg
imul
inc
xchg
cs
mov
pop
sbbb
mov
aam
mov
push
in
sbb
mov
je
jns
in
je
xchg
push
inc
pop
rcll
cwtl
enter
gs
adc
pop
add
add
push
push
aad
adc
gs
les
fiaddl
sarb
jb
cmpsl
add
xor
xlat
es
es
leave
leave
leave
push
gs
popf
jl
jmp
je
dec
xor
fildll
jne
push
xor
mov
mov
adc
in
jae
mov
and
sub
aad
adc
cmp
addb
in
mov
andl
ficoml
icebp
add
add
loopne
faddl
call
push
leave
push
cmpb
adc
mov
cmp
in
loope
pop
xlat
add
movsb
jmp
push
mov
cmp
cli
jmp
mov
mov
cmp
cld
dec
cmp
adc
dec
je
cmp
out
out
enter
neg
push
daa
scas
add
adc
insb
call
je
jbe
loopne
or
pop
lret
sar
xchg
cmp
clc
add
jmp
xor
iret
jl
icebp
mov
aas
pop
lock
push
ss
or
out
sub
xor
aaa
xor
jge
in
xchg
mov
mov
or
add
push
mov
shll
sti
ret
fstpl
cmp
pop
mov
mov
jmp
div
jmp
ret
dec
jae
fwait
sub
aam
aam
mov
mov
xchg
jne
notb
in
pop
jmp
mov
loopne
sahf
mov
xchg
jnp
pop
or
inc
inc
or
cmp
scas
or
xor
cwtl
pop
lods
sub
mov
call
ret
sbb
orl
jae
pop
rep
mov
add
incb
subb
xor
and
fcoms
push
xor
orl
hlt
sub
outsb
adc
jl
addb
not
lea
adc
inc
movsb
push
push
cmpb
jne
sbbl
pop
push
inc
xor
ljmp
dec
loopne
cmp
add
mov
sub
sub
mov
movb
mov
jne
push
inc
or
ret
dec
cli
mov
jo
rcrb
push
xor
mov
and
les
in
ss
gs
or
shlb
test
sbb
mov
sub
leave
add
insl
loopne
lods
dec
subl
cmp
testb
sar
inc
cmp
popa
pop
jnp
jmp
inc
sti
ret
sbb
add
out
mov
mov
sbb
lret
adc
adc
inc
loopne
jge
lea
xchg
inc
push
popf
pop
sub
sub
mov
add
inc
add
test
mov
pop
dec
rclb
in
adc
shrl
test
dec
aad
sub
mov
setp
mov
test
not
setl
setb
xor
decl
xchg
pushf
dec
cmp
xor
and
adc
mov
ljmp
mov
fsubl
clc
push
fnsetpm(287
mov
mov
outsl
adc
and
scas
mov
out
and
and
lock
lea
pusha
jmp
add
inc
popa
push
push
pusha
xchg
lea
lahf
std
lods
stc
aam
mov
ljmp
mull
js
mov
rcr
aaa
mov
rol
pop
pop
lods
leave
push
pop
cmp
pop
aas
jmp
repz
fucomp
mov
mov
daa
jns
and
mov
push
mov
lock
mov
pop
stos
jg
call
mov
dec
lret
lea
sbb
add
cmp
push
pop
aad
sub
and
pop
add
int
je
sbb
insb
jae
sti
mov
test
add
nop
xchg
cwtl
fwait
mov
add
test
cmpb
xor
adc
xor
xor
cmp
stos
mov
and
xchg
inc
push
inc
xor
or
jg
jge
mov
push
bnd
mov
rorl
or
push
call
push
add
adc
lds
xchg
imul
mov
cmp
insb
mov
neg
adc
jmp
push
push
call
shll
cmp
push
mov
add
ret
lds
or
dec
stos
gs
andb
jo
push
inc
mov
xchg
mov
push
ja
clc
sub
int
pop
aad
mov
enter
sbb
cmpl
jle
mov
add
in
add
pop
or
std
xor
add
into
bound
jge
push
xlat
dec
lea
sbb
shl
adc
jne
orl
outsb
xchg
mov
stos
inc
pop
mov
cmp
push
adc
fnsave
sbb
pop
mov
and
fs
ss
pop
or
xchg
incl
stos
leave
sar
pop
push
sbb
and
pop
sbb
ja
add
roll
inc
fdivrl
jl
inc
mov
add
mov
bound
jne
push
cmc
mov
xchg
push
pop
xchg
outsb
jl
shlb
enter
cmp
xor
loope
sub
xor
mov
in
add
addr16
cmpb
js
mov
jno
pop
xchg
push
stos
mov
andl
cmc
mov
sub
push
pushl
push
call
jmp
rcrl
data16
cmp
bound
sarb
js
lock
movsl
test
aaa
movsw
je
or
sbb
add
push
jge
sbb
shll
add
ficomps
testb
das
push
mov
push
stos
andl
cmpsl
outsb
sbb
and
sub
add
in
push
pop
push
fildl
xchg
call
sbb
dec
int3
and
cmp
add
add
pop
pop
sbb
xchg
and
addb
or
or
lods
fildll
sbb
test
sub
xor
ja
cmpsb
xchg
sbb
adc
je
hlt
or
call
push
inc
std
add
cmp
insb
xchg
xor
inc
insl
iret
adc
addr16
and
adc
push
pop
fdiv
adc
add
mov
push
jo
or
xchg
insl
or
mov
rorb
push
push
dec
push
ficompl
into
add
push
fstpt
mov
jl
imul
adc
or
aam
push
push
call
inc
sub
mov
cmp
push
or
lods
rol
sbb
push
fisttpl
insb
or
inc
ret
ret
pop
les
push
jbe
lds
test
sbb
dec
cmp
dec
xchg
add
or
rcll
pop
fiaddl
mov
inc
sbb
ss
sub
test
frstor
jb
xchg
and
mov
xchg
pusha
inc
mov
fistpll
sub
fidivs
push
pop
not
mov
fiadds
lret
lret
inc
push
or
jno
push
cs
or
mov
int
mov
sar
aam
sbb
mov
add
enter
test
test
jnp
push
sbb
pop
jmp
std
pusha
les
or
pop
push
xchg
gs
xchg
aas
popa
cmp
dec
aaa
mov
adc
or
adc
fldl
je
inc
adc
push
shll
test
rsm
xlat
xor
lods
lods
scas
pop
scas
pop
insl
xlat
xor
btr
mov
xchg
orb
fisttpll
xchg
adc
mov
es
adc
or
sbb
pusha
mov
pop
les
outsb
mov
enter
test
lret
pop
int3
scas
jmp
cmpsb
int
iret
sub
inc
rcll
mov
shrl
pop
aad
or
in
lcall
pop
fcmovu
aaa
fsubl
cmpsb
fwait
pushf
add
imul
mov
in
out
imul
mov
jo
daa
out
add
lock
push
repnz
push
mov
negb
idiv
bswap
xor
mov
sub
pop
push
mov
test
push
arpl
in
ficompl
popa
fmuls
decl
sbb
sub
push
fistpl
arpl
or
or
sbb
sbb
add
mov
popf
push
inc
decl
or
pop
xchg
add
xchg
push
push
xchg
or
inc
pop
jl
fistpl
pusha
bound
cmp
push
cmp
adc
add
add
aam
clc
adc
pop
mov
fs
sbb
add
pop
lret
jle
sbb
pop
jmp
inc
cwtl
mov
adc
mov
mov
add
sbb
call
mov
jbe
shlb
add
mov
mov
out
dec
mov
cltd
pop
inc
stos
mov
ret
decl
add
dec
jne
inc
mov
jmp
mov
xor
mov
mov
pusha
dec
or
or
subl
pop
push
cli
pop
jbe
push
xor
addb
sbb
clc
jo
pusha
dec
jbe
lods
push
sbb
or
aam
push
push
add
xchg
icebp
sbb
xor
orb
movsb
out
sbb
add
out
sbb
ja
js
add
test
add
enter
and
leave
jge
pop
xor
add
xorl
jge
call
add
jo
and
sub
int3
orb
add
loop
jbe
ret
andl
push
clc
insl
pusha
mov
scas
mov
test
jne
cld
inc
lds
cmp
xchg
dec
cmp
lret
cmpsl
orb
jl
add
add
loopne
xchg
mov
clc
pop
jne
je
mov
mov
ror
cmc
dec
dec
ds
push
adcb
cmp
jmp
repnz
add
and
xchg
out
push
outsl
xor
or
adc
iret
je
jne
outsl
mov
je
adc
pop
cmp
ja
lcall
or
jae
out
loopne
in
fbld
mov
cmp
pushf
inc
jmp
cmp
jb
sub
je
mov
pop
mov
add
or
dec
sbb
mov
jmp
mov
or
push
adc
sbb
sarb
add
aad
dec
and
sbb
add
in
or
pop
shrb
cmp
jae
mov
rcrb
and
lahf
cmp
sbb
lret
in
sub
inc
js
xor
mov
ficomps
xchg
loopne
shll
int3
mov
mov
push
push
pop
push
lods
je
mov
fdivs
dec
shll
xchg
xchg
xor
shll
mov
mov
xor
xchg
fdivrs
shll
mov
xchg
cmpsl
cltd
mov
lods
ss
lock
mov
test
xorb
movsb
lcall
mov
sbb
jne
clc
aam
aad
xchg
jecxz
jne
test
mov
je
fdivl
push
rolb
pop
filds
dec
roll
pop
loope
loop
stos
mov
test
shll
mov
adc
xor
orl
nop
push
stos
popf
lcall
lea
xchg
lods
addl
mov
pusha
sbbb
je
mov
or
cld
add
mov
mov
stc
add
in
push
jecxz
les
les
sub
sbb
in
loop
mov
fs
rcl
fdivrl
in
lods
aam
pop
mov
icebp
mov
jle
loopne
pusha
pop
aam
mov
call
stos
mov
dec
push
push
dec
dec
adc
push
sbb
push
ds
push
pop
mov
push
push
mov
mov
adc
adc
scas
pop
sub
inc
xchg
mov
cmp
inc
lds
pop
je
inc
ret
mov
mov
pushf
pusha
jmp
mov
add
sbb
mov
xchg
in
mov
push
sbb
sar
clc
cmc
and
jle
out
add
mov
call
mov
test
push
mov
inc
dec
sub
dec
outsb
mov
jo
popf
adc
js
jne
mov
push
lcall
js
sub
imul
mov
out
in
lcall
add
mov
jp
rcrb
test
ljmp
and
ja
lcall
adc
inc
push
inc
mov
call
pop
jb
insl
dec
fcomi
pop
adc
push
cmp
cld
jle
ljmp
jnp
push
push
or
lret
lret
out
add
pop
xchg
frstor
xchg
or
daa
cld
subl
sub
pop
cmp
jb
dec
pop
pop
inc
adc
mov
ja
lds
mov
sbb
mov
adc
bound
adc
jb
out
dec
mov
sbb
adc
xchg
jmp
push
mov
lea
mov
cmp
jne
xchg
loopne
jbe
inc
popa
adc
and
out
pop
add
xchg
clc
out
fstpl
or
out
xor
push
xor
lsl
scas
cmp
fcmovu
call
add
add
andb
add
repz
jecxz
pop
or
fdiv
cmp
push
pop
jecxz
adc
mov
lret
sub
in
inc
sub
loopne
loopne
mov
jmp
loopne
sub
or
xchg
test
nop
pushf
clc
push
lods
fmull
loop
cwtl
orb
aaa
out
dec
mov
mov
xor
pop
or
test
push
xchg
and
jne
push
or
rolb
adc
lods
fwait
sub
sahf
add
lahf
or
sbb
pop
mov
loope
andb
clc
jle
outsl
sub
or
ret
pop
insb
sub
dec
adc
mov
fimuls
loop
mov
sbb
fs
jp
or
outsb
or
ficomps
lods
jg
inc
pushf
int
fcmovb
js
and
aas
inc
hlt
xor
and
sbb
pop
call
mov
addb
dec
dec
in
into
in
scas
scas
xor
dec
stos
imull
icebp
pop
add
cs
insl
sbb
or
and
inc
aas
cmc
cmpsb
imul
movsb
dec
outsb
lcall
outsb
gs
movsb
mov
push
push
fstl
pop
test
jo
jbe
lods
gs
mov
dec
mov
sbbl
jae
enter
push
outsb
push
movsb
mov
mov
jae
add
das
roll
fidivrs
mov
xchg
aam
in
mov
movsb
fidivl
inc
mov
pop
xchg
adc
pop
nop
push
jne
push
into
inc
jno
xchg
or
cmp
das
xchg
inc
xchg
js
ss
jmp
scas
fcomps
fisttpl
push
mov
inc
loopne
loope
loop
adc
inc
push
imul
jne
or
or
or
sub
mov
mov
pop
mov
dec
dec
inc
shlb
std
aam
inc
inc
jle
mov
fdivrs
mov
mov
push
orl
dec
cmp
xor
clc
outsl
adc
fldt
int3
clc
mov
xchg
sbbb
push
push
inc
pop
call
aad
and
pop
xchg
push
dec
dec
in
or
je
lcall
sbb
xlat
add
movd
sbbl
bound
scas
sbb
push
inc
adc
orb
sbb
adc
add
adc
mov
dec
jae
adc
xor
inc
push
and
pop
call
into
idiv
lcall
mov
mov
push
imul
popa
xor
add
inc
adc
and
outsl
je
xor
loopne
in
sub
ss
fcomps
scas
jne
cltd
jle
xchg
popf
cmp
loop
ret
stos
push
pop
pop
loope
adc
jae
clc
xor
shl
subb
adc
xchg
push
ret
call
jne
and
outsl
adc
js
pop
int
push
push
faddl
cwtl
push
call
cltd
call
bound
adc
push
pop
add
push
xchg
sbbl
xor
les
sbb
or
adc
cmovbe
mov
test
sbb
adc
adc
xor
or
sbb
sbb
pushf
add
sbb
jns
rorb
cmp
lcall
push
and
push
je
push
sbb
add
repnz
cmp
push
cs
popf
or
pop
add
and
js
clc
adc
add
leave
sub
pusha
shll
inc
icebp
sub
addr16
loop
sub
pop
dec
inc
jo
test
dec
mov
pop
and
mov
dec
repz
inc
popf
cmp
sbb
stos
and
call
sbb
add
inc
mov
push
dec
outsb
adc
or
sub
or
stos
push
mov
mov
jl
mov
or
adc
adc
pop
or
pop
insl
sbb
pop
pop
or
sbb
mov
push
data16
adc
sbb
jne
mov
addr16
cmp
sub
ret
orb
or
adcl
mov
inc
int
lods
call
or
fwait
push
aam
adc
fimull
test
push
or
loopne
mov
cmp
sbb
rcl
sub
shrb
aam
aam
sub
rcl
aad
int
pop
fwait
jecxz
jp
fdivs
lcall
xor
pop
lcall
xchg
xchg
xchg
loope
mov
dec
xchg
loop
jecxz
in
pop
adc
ja
push
or
addl
xchg
jo
lcall
xor
shll
lret
sbbl
xor
out
call
dec
mov
movsb
mov
stos
test
lods
loope
rol
add
hlt
mov
xor
loop
dec
adc
mov
and
inc
dec
or
hlt
loope
fdecstp
lcall
adc
fstl
jb
jne
fxsave
call
sub
js
jo
mov
mov
or
hlt
repz
mov
arpl
adc
jmp
push
jbe
aaa
pop
imul
pop
jmp
lea
ss
or
bswap
inc
and
scas
int3
sbb
pusha
or
or
fnsave
pop
lea
jno
push
push
add
sbb
pop
mov
cli
or
push
xchg
daa
pop
inc
hlt
cmp
popa
add
aam
mov
cmp
out
aad
into
and
adc
xor
fsubrs
loope
movsb
cs
pop
sbb
cmp
popa
outsl
dec
jbe
or
add
into
in
push
ror
std
repnz
adc
push
sahf
inc
loope
adc
and
imul
inc
popa
arpl
adc
sub
loopne
loope
imul
jne
and
jae
xor
pop
jmp
cli
sub
aas
sbb
pop
fisttpll
lock
icebp
pop
repnz
inc
lcall
and
cmpsb
imul
stos
pop
sbb
icebp
xor
xor
xor
pop
jo
es
inc
add
ds
mov
xorb
sub
out
pushf
pushf
pushf
mov
pushf
pushf
pushf
mov
daa
popf
pushf
rol
ret
leave
leave
leave
ret
je
leave
enter
lret
popf
popf
lret
adc
dec
int
into
push
int
pop
mov
fiaddl
ljmp
push
jo
add
in
push
mov
cld
ficoms
js
mov
or
les
repz
jmp
repz
loopne
addr16
adc
and
negb
mov
insb
nop
add
out
rcll
jno
mov
sbb
pop
mov
aam
cmp
jae
imul
arpl
imul
cmp
lcall
popa
fdivs
test
daa
xor
and
stos
adc
mov
sub
imul
dec
fnstsw
loope
shll
out
addr16
xlat
pop
cwtl
cmpsb
imul
inc
test
out
pop
out
inc
cmpsb
imul
jbe
sti
cmp
cmp
in
lret
aaa
clc
pop
and
lret
mov
mov
or
push
loope
mov
rcrb
mov
inc
pop
cmp
inc
inc
clc
pushf
push
push
push
cmp
add
xchg
fmuls
call
or
mov
out
push
data16
movsb
sbb
inc
dec
stos
dec
les
cmp
xor
dec
xor
dec
adc
das
push
and
scas
add
shrb
loope
xchg
not
mov
xor
jle
pop
or
clc
and
or
addr16
lea
das
imul
or
aad
imul
fs
adc
mov
add
dec
inc
push
cld
call
inc
mov
jmp
aaa
adc
inc
xchg
mov
and
jb
push
nop
sub
test
add
aad
add
dec
push
dec
add
add
cmp
add
lds
jns
xlat
sub
roll
xchg
or
mov
and
das
mov
jo
add
in
pop
add
add
add
es
or
mov
xor
push
icebp
nop
mov
push
sub
aaa
ret
add
dec
dec
gs
cmp
aas
push
xchg
sbb
mov
in
inc
jl
loopne
gs
add
int
fsubr
jmp
adc
je
lods
add
or
inc
and
and
sbb
aam
jno
cmp
fisttpll
or
push
push
je
jae
pop
int
push
add
pushf
jmp
push
xchg
icebp
test
inc
pop
lds
call
pop
mov
out
inc
add
das
xor
add
xchg
loop
cli
in
shll
lock
or
sbb
inc
icebp
push
lea
inc
jno
pop
psubsb
dec
lock
mov
mov
in
cmpsl
std
push
mov
test
mov
arpl
mov
jmp
pop
les
or
add
mov
sahf
stc
pushl
mov
dec
inc
inc
mov
xor
and
add
mov
mov
inc
push
add
adcb
lea
fs
in
mov
add
or
push
lock
int3
cmp
movsl
pop
ja
shl
retw
push
or
mov
popa
test
arpl
add
and
fcomp
loopne
sub
sub
add
inc
cld
mov
and
decl
les
cmp
mov
aas
js
sbb
cmpl
inc
jg
scas
das
orw
or
cltd
sub
mov
pop
mov
fcoms
insl
cmp
pushl
and
jno
cmp
sub
dec
pop
cmp
out
addl
ljmp
fisubrl
pop
adc
mov
inc
mov
std
idiv
or
add
es
je
add
jne
mov
pushf
or
inc
shrl
adc
mov
comiss
repz
jbe
cwtl
dec
pop
aaa
push
clc
call
testb
es
sbb
and
push
sub
adc
pop
jb,pn
cmp
test
dec
in
push
hlt
add
mov
nop
sbb
and
adc
and
pop
push
fcmovne
jmp
pop
mov
and
or
ret
dec
sbb
cmp
add
popf
jne
sbb
pop
mov
push
or
add
adc
sub
and
lods
andl
jle
xor
pop
cmpxchg
jmp
mov
mov
cld
nop
push
popa
js
inc
pop
jg
mov
nop
scas
hlt
or
shr
mov
and
int3
mov
jmp
adc
les
adc
test
shr
sti
int
rclb
inc
fnstcw
iret
jecxz
push
cld
incl
add
lcall
xor
jo
jl
imul
add
mov
rcl
ljmp
lcall
xlat
mov
sbb
xor
lcall
jne
shll
add
adc
add
fnstenv
xlat
xor
jbe
add
mov
mov
xor
call
je
push
addr16
push
sub
xor
cmp
push
pusha
mov
xlat
je
movsb
xchg
das
mov
cmpb
dec
shll
inc
cmp
cmp
xor
pop
cwtl
test
clc
imul
in
into
ret
cmpsb
jmp
pop
pop
inc
add
sub
pop
imul
movl
lock
lcall
xchg
mov
xchg
mov
jo
cltd
scas
incl
pop
xor
sbb
add
rorl
xlat
add
fldenv
push
lock
pop
rcrl
pop
movzbl
or
or
xchg
fnstsw
add
pop
add
divps
bound
in
pop
jbe
jne
icebp
add
js
inc
into
sahf
fisttpll
jl
xor
pop
push
icebp
out
fwait
je
add
cmp
add
outsl
push
inc
mov
and
or
add
mov
enter
sbb
xchg
or
loope
mov
adc
lret
pop
mov
adc
xchg
mov
cmpl
sub
pop
xlat
or
mov
cld
dec
push
pusha
aaa
or
lcall
add
mov
cmpsb
add
sub
rorb
lahf
ja
cmpb
add
gs
push
push
push
fs
jo
jg
inc
gs
outsl
fs
dec
add
xchg
popa
outsb
fs
imul
add
mov
xor
dec
jae
ss
cmp
jb
xor
dec
inc
fs
mov
push
add
dec
imul
pushf
cmp
add
and
jb
imul
cmp
addr16
push
or
jae
aaa
mov
imul
jne
adc
pop
pop
inc
cmpsl
adc
daa
imul
jae
pusha
filds
jno
dec
popa
jae
inc
cmp
pusha
jmp
dec
jne
push
test
gs
pop
mov
inc
pop
dec
jbe
sti
ret
popa
insl
add
push
mov
inc
inc
imul
fldln2
popa
outsb
ret
gs
and
int
sub
jp
inc
das
fadd
xchg
jecxz
mov
xorb
insl
jo
mov
cmp
push
outsl
andl
mov
insb
aaa
inc
jns
flds
jle
filds
insl
xor
aad
push
or
ret
jge
fstpt
test
jp
lds
pop
stc
mov
or
add
outsb
push
inc
insb
mov
cmp
push
adc
mov
inc
outsl
jne
std
or
inc
mov
leave
push
or
addr16
clc
packssdw
push
dec
inc
dec
ja
pop
xor
cmp
arpl
lods
inc
jnp
xchg
add
arpl
xchg
or
jo
mov
mov
lds
push
add
add
outsl
imul
imul
out
ja
jae
pop
in
or
jmp
cmp
jmp
insl
xor
push
fstpt
aas
xor
inc
pop
push
add
shrd
push
dec
cmovns
mov
inc
js
frstor
push
pop
pop
add
mov
sti
in
add
mov
ja
mov
jnp
mov
add
pop
or
or
xor
cmp
data16
push
cmp
lock
push
mov
xchg
pop
fcmovnu
mov
bound
outsl
push
or
adc
rol
loope
jbe
dec
pop
test
add
jo
dec
rorl
jmp
pop
xor
insl
cmpsl
xor
js
add
dec
cmpsl
add
jo
test
aad
jno
mov
xchg
punpckhwd
inc
popf
and
push
xchg
jmp
sbb
pop
jo
aaa
cs
dec
xchg
enter
xorl
mov
les
sbb
popf
xchg
pop
sbb
push
popa
jbe
adc
sbb
out
adcl
jb
insl
dec
inc
dec
push
dec
mov
add
insl
insl
imul
bswap
mov
gs
lods
pop
fldt
inc
inc
pop
or
push
imul
ja
add
insb
or
add
adc
or
push
sub
inc
cmp
pusha
aaa
popf
bound
sbb
idiv
inc
pop
imul
jbe
pop
mov
mov
and
lcall
mov
loope
inc
dec
enter
imul
cwtl
movsb
sbb
outsl
cmpsb
mov
push
fwait
jns
ret
xchg
sub
int
sub
call
in
inc
hlt
add
aaa
inc
je
roll
imul
aas
aam
dec
jle
jp
pop
dec
sbb
les
lds
in
rcl
dec
cmpb
adc
mov
push
inc
js
fucomp
daa
xor
inc
dec
cmpsl
push
fadds
ljmp
push
add
push
dec
ja
pop
mov
adc
sub
std
iret
test
mov
aad
lock
sub
leave
loope
sub
fs
adc
push
jne
sub
mov
lret
pop
xchg
out
or
xor
xchg
fidivs
fsubl
mov
sub
push
sbb
mov
mov
mov
ljmp
push
push
xchg
or
xorps
push
lds
mov
gs
fistpl
pushl
and
stos
mov
sbb
jg
test
push
xchg
iret
ja
daa
mov
cld
lcall
cmp
mov
mov
mov
and
insb
out
incl
mov
pop
fbstp
xor
js
sub
sub
mov
pop
lea
or
aad
cmp
sbb
lahf
imul
repz
mov
sti
jmp
jg
nop
es
xor
jnp
stos
pop
xchg
outsl
enter
mov
addl
pushl
jl
je
sub
dec
jp
mov
inc
mov
inc
in
add
std
fdivrp
inc
push
inc
push
fistps
js
cmp
cmp
call
cld
jmp
dec
imul
dec
lds
inc
repz
movsb
out
push
clc
shlb
adcl
lahf
mov
gs
mov
fbld
pop
push
enter
mov
cs
inc
or
scas
scas
test
jge
pop
add
inc
mov
lock
add
scas
inc
inc
rorb
sub
outsb
in
xor
sbb
push
cmp
test
sbb
arpl
test
mov
not
jl
call
incb
hlt
xorl
cmc
enter
daa
pop
in
or
scas
orl
dec
inc
cs
aaa
ljmp
and
xchg
lret
gs
dec
cmp
icebp
xchg
out
fldcw
jp
std
push
push
and
adc
decb
fs
aaa
add
jbe
inc
lods
mov
aas
fnstcw
add
lcall
or
sbb
push
aaa
dec
sub
scas
loop
xor
xor
xchg
add
pop
daa
pusha
push
add
pop
add
add
sti
sbb
sbb
adc
pop
jg
or
jg
mov
or
ja
xor
call
add
or
mov
dec
adc
push
push
sub
imul
sbb
mov
lret
pop
dec
ljmpw
xor
or
pushf
jl
ljmp
outsb
leave
and
insl
cld
mov
mov
sub
adc
pop
repnz
bound
dec
push
mov
mov
jne
jg
mov
push
pop
cmpsb
mov
or
std
jle
jo
sub
fists
lcall
fildll
jns
aam
adcb
push
push
mov
arpl
negb
pop
push
push
out
cmpsb
or
clc
jne
jl
push
ret
lock
pop
cmpsb
outsb
mov
insb
sbb
mov
call
mov
inc
xchg
fisttpll
test
ljmp
sbb
mov
inc
jge
lock
arpl
sub
je
sbb
sti
cwtl
in
inc
arpl
sub
jmp
andb
repz
pop
fsubrl
lea
jg
mov
adc
add
jnp
in
out
decl
push
shr
sbb
mov
rorl
sbb
stc
imulb
pop
in
call
cmp
insl
ret
mov
xor
jo
fdivrs
cli
lcall
cmp
filds
sbb
out
leave
repnz
xor
lock
add
add
fucomip
aas
movsb
lcall
lea
movsl
push
test
sub
pop
test
iret
sub
and
and
cmp
enter
xor
xor
aaa
fisttpll
xor
add
aaa
xor
cmp
dec
out
mov
sti
push
dec
daa
mov
les
mov
mov
in
out
cmp
sub
and
and
and
fnsave
jl
jnp
mov
pop
sub
sub
aas
fwait
push
dec
in
adc
fists
js
adc
adc
addr16
and
or
pusha
adc
aas
clc
mov
js
mov
jl
cld
push
hlt
add
push
inc
add
adc
nop
daa
xor
sbb
aas
cmp
inc
add
pusha
sti
or
adc
shlb
in
hlt
xor
sbb
mov
xor
or
add
pop
add
add
jbe
mov
lahf
and
inc
or
and
pusha
adc
xchg
xor
inc
and
inc
add
add
lahf
dec
and
lahf
jnp
shrl
mov
jl
xor
adc
cmp
scas
sbb
and
enter
lahf
push
add
cmp
and
or
xchg
add
pop
jmp
jno
add
pushf
nop
xchg
or
xchg
xchg
adc
and
or
movsl
cmp
push
fwait
les
push
or
dec
movsl
addl
jnp
rolb
dec
cmp
lods
ljmp
mov
mov
call
scas
out
xor
mov
sub
or
fmuls
das
mov
in
insb
inc
add
sbb
push
in
test
cmp
push
mov
jnp
pop
fstpt
sub
ret
fstpl
je
inc
push
mov
popaw
int3
adc
and
subb
scas
inc
cwtl
leave
jle
call
inc
xchg
fidivrl
pop
jae
or
and
inc
jbe
push
mov
je
push
lds
xchg
sti
xchg
call
sbb
and
adcl
mov
stos
sub
enter
or
push
jp
mov
ss
jge
dec
mov
push
je
mov
push
push
ltr
daa
fmuls
mov
adc
mov
cmp
adc
mov
sbb
fstpt
gs
mov
push
rcrl
out
je
inc
fildl
and
ret
add
sub
mov
add
les
fbld
rol
and
mov
push
push
push
xchg
pusha
cmp
jbe
push
bound
xor
xchg
add
and
mov
jmp
ret
dec
adc
loope
pop
mov
pop
cmp
sub
ret
int
adc
out
push
rcrb
leave
inc
lds
jbe
mov
sbb
cmpsb
test
gs
mov
inc
sbb
ret
xor
out
push
pop
sub
jne
jne
add
adcl
mov
add
xchg
loopne
aad
sub
or
mov
adcb
push
push
push
rcrl
pop
pop
pop
sahf
mov
sub
add
dec
inc
inc
test
or
mov
or
jmp
add
fiadds
sbb
call
push
jbe
or
sub
test
test
mov
clc
adc
adc
pusha
out
mov
xor
cmp
pop
mov
call
cs
pop
and
mov
lret
mov
push
inc
add
lea
loope
jecxz
xchg
insb
xor
xchg
lret
xor
nop
adc
stos
clc
xor
push
cmp
or
mov
add
sub
mov
adc
pop
call
and
andl
test
jg
xchg
cmp
ja
sbb
pop
rorl
das
sub
jbe
test
sbb
mov
inc
add
add
push
test
mov
int
cmp
iret
push
into
cld
into
sti
fistl
push
mov
stc
js
shrb
pop
aaa
fsubs
sub
mov
jmp
push
push
adc
scas
pop
shlb
add
mov
adc
cmp
test
je
mov
jnp
clc
jnp
add
jmp
sbb
push
add
cmc
pop
jmp
movsb
jecxz
jbe
sbb
inc
mov
ja
push
push
test
inc
cmp
sbb
xor
push
fidivs
add
pop
and
jno
outsb
sbb
dec
add
lahf
pop
adc
cmp
fsubrl
cmp
jmp
add
adc
mov
orb
out
testl
test
call
movsb
add
je
inc
inc
scas
xor
lock
jg
mov
ret
pusha
jne
inc
sub
push
je
mov
out
inc
je
xor
fidivs
cwtl
or
cmp
aaa
outsb
adc
add
push
mov
shl
mov
add
sarl
or
mov
or
xor
sbb
jae
orb
mov
add
in
cmpl
mov
xchg
in
ficoms
jmp
inc
jmp
jmp
or
dec
mov
jne
mov
push
popf
lods
in
mov
orl
and
sbb
enter
mov
xlat
jmp
inc
roll
mov
jne
adc
clc
inc
xchg
add
mov
sbb
push
mov
clc
repz
fcoms
rcr
scas
sub
mov
mov
dec
clc
jle
xchg
xchg
push
cld
adc
push
lds
lea
testb
fistpl
cmp
filds
xor
xor
cmp
mov
imul
jmp
fcomp
mov
cmp
out
pop
movsb
add
test
mov
sbb
scas
and
mov
cli
mov
xchg
mov
sub
repnz
repz
negb
add
mov
and
sub
lret
inc
icebp
fsubrl
push
adc
dec
shll
xor
pop
shll
pop
imul
call
inc
je
decb
sub
fldenv
addb
sbb
mov
out
in
cs
xchg
mov
mov
in
xchg
mov
iret
mov
push
nop
mov
adc
xor
mov
mov
clc
inc
dec
add
aaa
fstps
mov
adc
or
push
adc
addb
insb
cvttps2pi
adc
or
add
or
push
add
addb
jbe
adc
jmp
xchg
dec
mov
sub
imul
add
or
push
xor
push
mov
rolb
hlt
mov
test
ror
std
movb
xor
mov
mov
mov
sahf
mov
add
mov
inc
popf
in
inc
push
mov
rorb
push
mov
push
mov
mov
pop
insb
mov
jl
adcb
in
xchg
mov
inc
rcrb
mov
and
adc
popa
jno
sbb
or
dec
mov
aam
cmp
testb
movsb
insb
xor
out
push
jne
push
push
push
insb
push
push
xor
jnp
mov
cmp
add
pop
xlat
cmp
push
insl
cmp
mov
sbb
aad
sbb
inc
and
xor
loopne
mov
xor
enter
and
jmp
xchg
mov
xor
cli
mov
pop
push
or
jne
push
mov
jmp
mov
mov
call
sbb
subl
jle
shl
pusha
int3
and
xchg
inc
les
repz
inc
adc
orl
or
dec
cld
cmp
fldl
inc
roll
rorb
add
jmp
out
and
add
shl
add
mov
add
xchg
jbe
and
dec
xlat
popf
xor
pop
add
cmp
dec
xlat
dec
add
mov
int3
aam
cli
cmpsb
imul
cmpsb
imul
cmpsb
imul
scas
cmpsb
imul
les
movl
jmp
xchg
and
jo
faddl
movsb
jmp
jbe
insb
adc
add
xchg
jmp
xchg
pop
addb
mov
pop
inc
sub
sbb
xchg
and
dec
and
or
add
sbb
mov
pop
adc
add
adc
mov
pop
dec
adc
add
stos
pop
xchg
ret
scas
out
notb
cmp
dec
outsb
jo
add
mov
dec
gs
je
add
add
or
cmp
rolb
dec
stos
inc
adc
push
add
les
popa
bound
inc
adc
pop
js
repz
and
add
inc
leave
je
xchg
fstps
push
sbb
imul
ret
fisubrs
add
sbb
jo
xchg
mov
pop
jae
je
je
loopne
cs
scas
test
or
jae
push
lret
fdivs
cmpsl
setb
adc
imul
in
inc
orb
pusha
les
cltd
cmp
arpl
stos
add
mov
ljmp
fsubs
mov
popa
je
sub
add
and
add
add
int
sub
inc
dec
add
addb
jns
jl
cmpsl
rcll
jg
mov
addr16
lods
fdivrl
adc
leave
push
aad
out
add
xor
pop
adc
sar
ror
outsl
mov
jmp
dec
rcpps
sbb
jne
daa
cmp
mov
sbb
cmovb
mov
pusha
or
push
add
xchg
nop
subb
mov
jmp
mov
icebp
jle
or
sbb
nop
xchg
add
cltd
idivb
mov
mov
cmp
xlat
ja
mov
jg
sub
mov
jecxz
fdivs
mov
sbbl
dec
mov
in
je
in
sbb
std
decl
cld
mov
ljmp
cmp
mov
xchg
mov
dec
push
push
add
mov
leave
int3
lahf
loopne
ja
pusha
into
push
into
pop
xor
cmp
mov
cmc
mov
jno
xor
push
inc
movsb
imul
sub
sarb
xchg
enter
cmp
mov
shll
push
stos
add
pushl
inc
loopne
and
push
outsb
test
stos
mov
and
xchg
pushf
or
pop
or
aaa
inc
imul
std
in
dec
inc
dec
dec
dec
push
dec
add
dec
inc
push
inc
push
inc
sete
out
test
xchg
scas
pop
sbb
clc
idivl
jg
cli
add
xor
xchg
pop
push
jnp
decl
dec
cld
mov
fistl
ss
jmp
movsl
or
loopne
pop
es
incl
adc
cltd
loopne
dec
mov
out
jne
orl
pushl
call
push
das
xchg
out
loop
jp
push
mov
adc
sbb
xchg
cmp
lcall
xor
sbb
mov
out
cltd
push
fmul
jmp
xor
xor
out
and
clc
and
incl
repz
adcl
faddp
in
shrl
bound
jle
ljmp
aad
and
ja
adc
mov
lods
test
push
pop
push
xlat
cmpsb
repz
stos
inc
call
xchg
xlat
push
icebp
push
lock
std
std
mov
xor
inc
into
add
lret
bswap
inc
and
mov
pop
gs
repnz
sbb
jge
dec
in
push
dec
inc
cli
and
aam
pop
enter
shlb
fwait
xchg
lcall
dec
add
adc
in
xchg
push
jbe
test
xbegin
jmp
jl
faddl
pop
push
adc
outsl
ljmp
push
ret
mov
stos
lcall
and
and
mov
pushf
xor
adc
or
mov
sub
or
inc
pop
add
xchg
fwait
aaa
js
stos
mov
cmp
shlb
mov
pushl
fwait
cmp
jp
stc
mov
les
cld
push
and
mul
mov
sub
xchg
dec
movsb
dec
lock
ljmp
fistpll
lock
mov
call
fildl
call
and
cmp
cld
jno
adc
mov
adc
inc
aaa
cmp
inc
sub
in
imul
movsb
and
jmp
push
in
aaa
xchg
pop
cmp
sub
ljmp
sub
push
aad
add
mov
das
adc
pop
movsl
mov
mov
pop
ret
sub
dec
test
cmpsl
into
xchg
into
adc
cmp
imul
mov
leave
cmp
mov
pop
lea
jecxz
pushf
adc
scas
jb
adc
mov
lret
jg
out
add
hlt
dec
inc
mov
inc
or
xchg
and
iret
into
fs
jg
cmp
call
insb
sub
cmp
push
hlt
adc
sbb
cwtl
leave
lret
stos
nop
imul
sub
stos
sub
outsl
cmp
mov
jecxz
sahf
into
outsl
add
xor
jg
insb
lods
repnz
idiv
arpl
mov
rcl
sbb
test
inc
mov
lcall
test
pop
stos
jecxz
mov
mov
xchg
cmc
jmp
test
jnp
adc
les
push
rol
sub
or
shrl
jge
xchg
push
jo
in
dec
in
jno
pop
push
shr
das
adc
test
and
xchg
add
lahf
add
or
mov
xchg
cs
mov
loop
jo
sbb
inc
insl
mov
ja
xchg
jle
jmp
jge
insl
xor
xchg
clc
test
in
lods
jge
sbb
dec
aaa
or
incb
and
aam
pop
insl
ljmp
lods
incl
and
cli
add
xor
push
bound
test
lock
mov
scas
mov
inc
insl
sub
inc
in
xchg
ljmp
xchg
and
jl
cmp
clc
inc
lcall
mov
xlat
jge
jns
cltd
pop
movsl
cmc
push
int3
cmp
sub
sbb
jg
cmp
call
inc
test
fidivl
mov
addl
ud1
cld
ss
insl
pop
stos
insb
mov
jg
mov
insb
das
ss
xor
mov
out
jns
pop
leave
aas
aad
jg
mov
test
mov
lret
push
movsl
fisubrs
add
jae
scas
enter
sar
jg
lea
stos
mov
arpl
adc
fbld
xchg
aad
ffreep
das
lret
and
mov
out
mov
jl
ja
incl
push
mov
loope
and
sarl
test
fwait
pop
decb
js
insb
or
dec
mov
xor
and
mov
adc
push
sub
out
clc
mov
adc
test
jns
orb
jg
and
push
cmc
ror
lret
in
add
into
imul
pop
pop
adc
decl
aas
cmp
icebp
xor
dec
ja
into
jb
xor
xchg
outsl
pop
jecxz
mov
push
rcll
sti
lret
and
push
ret
pushl
mov
push
aaa
loop
xchg
das
inc
sub
or
adc
das
outsl
xchg
lods
scas
das
stc
mov
mov
into
movsb
mov
loope
aam
into
ret
mov
call
ret
jg
and
decl
jns
or
mov
xor
pusha
hlt
pop
mov
outsl
cld
mov
inc
push
and
aam
pop
ret
or
adc
test
lcall
movsl
add
shl
inc
out
repz
mov
scas
lret
xchg
cmp
loop
gs
lret
mov
dec
insl
xchg
mov
ret
js
pop
lret
decl
add
iret
dec
std
and
vmwrite
mov
aas
dec
int3
cmp
mov
and
push
aam
push
lret
insl
out
sub
sub
push
or
dec
add
sub
inc
push
mov
xchg
scas
adc
jb
into
jp
ret
push
adc
scas
aas
jl
sbb
dec
stos
dec
int3
inc
ljmp
mov
dec
mov
jo
sub
sbb
jmp
push
daa
or
sub
xchg
adc
add
test
jecxz
jne
mov
sbb
pushl
and
xchg
xchg
stos
std
out
sbb
test
aas
cmp
and
pop
add
repz
iret
arpl
das
cmpb
call
dec
and
mov
pop
adc
mov
fcomip
dec
outsl
aam
ret
stos
aaa
outsb
out
in
repz
clc
test
sbb
inc
jmp
xorb
jmp
pop
push
push
mov
jle
jbe
mov
ret
jns
bnd
mov
xchg
push
into
mov
jb
dec
mov
loopne
ljmp
ret
addr16
movsl
add
add
out
xchg
adc
iret
daa
das
cmc
das
pop
ret
dec
es
pop
jne
mov
add
mov
fcomi
movsl
cmp
cmp
repz
into
fidivrs
mov
adc
divb
xor
into
push
mov
outsl
lcall
or
test
jg
rcll
into
and
iret
push
pop
pop
jle
fwait
mov
ds
xchg
test
push
xchg
popf
xchg
stos
mov
pusha
stc
push
sub
fstps
ret
into
fidivrs
lcall
cmp
movsl
and
mov
cli
lods
inc
std
push
enter
dec
mov
call
jl
cmp
aad
dec
mov
xlat
jb
pop
mov
sub
movsl
cmp
sub
xor
cs
es
mov
inc
test
or
or
xchg
dec
jne
outsl
mov
inc
mov
fwait
mov
popf
popa
ret
push
pop
mov
and
push
mov
popf
cli
pop
lods
lcall
jp
cmpsb
jne
lahf
std
mov
adc
fsubrs
ljmp
mov
pop
xchg
in
xor
mov
push
sbb
cs
into
or
fisubs
sbb
mov
lods
push
pop
scas
addl
mov
add
fidivrl
xchg
arpl
mov
ret
mov
jg
and
std
and
ret
cmpsl
loopne
mov
clc
decl
ret
in
call
insl
aam
push
int3
fisubrs
adc
test
xchg
push
xchg
cltd
popa
or
push
data16
dec
scas
xor
loop
aam
mov
js
add
jge
adc
dec
pusha
dec
cmp
adc
aad
add
jnp
and
xchg
aas
adc
out
movsl
inc
jmp
int3
gs
cmp
cmpl
mov
push
sbb
cmp
adc
and
mulb
ljmp
psubusb
adc
stos
and
jne
or
add
jbe
adc
ljmp
or
cs
push
or
push
adc
adc
and
and
add
into
pop
jne
out
cli
incl
jne
rorb
jo
ror
test
pop
mov
or
jno
xchg
stos
xor
imul
sub
push
sahf
inc
incl
mov
leave
test
fcompl
inc
adc
icebp
mov
ret
ret
icebp
mov
adc
mov
ret
ja
mov
ret
rcrb
sub
loope
pop
xor
and
in
jne
in
sub
shlb
cld
lret
push
adc
les
cmp
out
incl
js
add
push
in
push
mov
stos
lods
add
incb
lock
pop
adc
les
jp
xlat
sahf
in
call
ret
jns
rolb
lret
lret
and
push
mov
push
rolb
pop
in
js
dec
cltd
and
aam
push
leave
call
enter
test
int
and
dec
clc
add
add
lcall
movsl
hlt
jne
mov
call
add
jg
adc
inc
pushf
test
cmc
idiv
stc
sub
push
cmovo
jge
pusha
jmp
outsl
lock
xchg
pop
ret
jne
or
aas
loopne
in
sub
lods
shl
pusha
push
jg
ds
dec
cmovnp
cmpb
lock
xchg
push
icebp
outsb
push
add
imul
mov
sub
aas
and
shlb
sub
insl
in
roll
add
pushf
rclb
les
mov
outsl
sahf
fidivrs
sbb
mov
cmp
xchg
fnstcw
mulb
sub
std
mov
outsb
add
dec
mov
and
mov
lea
iret
mov
inc
in
xchg
mov
inc
incl
test
adc
sbb
call
iret
push
xor
pop
clc
shll
popa
mov
mov
pop
nop
pop
jo
ffreep
decl
jmp
mov
lcall
add
xchg
mov
pop
sub
bound
jle
aad
test
popa
aaa
int3
fistpll
mov
pusha
xchg
je
pushl
call
popa
fstp
mov
mov
mov
ret
inc
js
pushl
outsl
ffree
lret
and
push
pop
pop
ret
ret
dec
push
jo
jno
add
and
aam
jmp
in
mov
ss
test
fstpl
add
dec
je
aam
xchg
stos
push
outsb
test
shl
mov
mov
push
inc
add
sbb
xor
xor
xor
xor
add
mov
xor
xor
xor
xor
xor
mov
call
xor
add
xor
pop
int3
xor
ss
ss
ss
ss
imul
test
jge
test
mov
popf
mov
into
ss
add
decl
push
aaa
pop
aaa
insb
aaa
jb
jp
xchg
aaa
popf
aaa
mov
aaa
mov
aaa
shll
fdivl
call
incb
cmp
cmp
cmp
cmp
cmp
ja
jle
mov
lret
cmp
cmp
cmp
cmp
cmp
cmp
cmp
dec
cmp
aad
fnstsw
jecxz
jmp
cmp
cmp
cmp
cmp
dec
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
adc
cmp
xor
cmp
pop
outsl
hlt
cmp
js
jle
test
cmpsl
cmp
cmp
incl
fistpll
cld
cmp
pop
ds
gs
mov
ds
scas
ds
ds
push
xor
add
flds
push
or
cmp
or
sub
cmc
pop
inc
jae
dec
gs
pop
mov
fs
inc
into
pushl
lret
fisttpll
iret
rcl
mov
mov
movsb
shll
jbe
ret
inc
add
pop
or
inc
add
add
or
add
sbb
and
pusha
mov
lods
imul
sbb
inc
pop
inc
add
add
or
add
pop
addl
and
and
lret
add
or
push
and
add
mov
ror
push
add
add
test
rolb
and
cld
add
add
pop
or
add
add
jmp
incl
xor
mov
add
and
push
xchg
inc
xchg
insb
test
flds
daa
pop
inc
or
add
ja
pop
stos
ret
xor
and
or
das
add
xor
add
lcall
jns
add
mov
jg
push
xorl
inc
jb
push
and
ja
or
stos
jp
mov
cs
or
cli
incl
fwait
jbe
jmp
jne
loope
cmpsl
cltd
fdivrs
aam
movsl
xorb
inc
inc
daa
push
cld
lcall
sbb
popf
mov
xor
mov
aad
cltd
pop
adc
mov
rolb
ret
jo
jmp
in
scas
pusha
outsb
push
and
pop
js
ja
aas
add
xchg
cmp
test
sbb
cmp
cmpsl
dec
daa
inc
into
fdivrp
mov
or
mov
sbbb
cltd
and
rclb
jmp
mov
aas
mov
jae
inc
lods
call
fdivp
sti
testb
dec
mov
stc
jmp
cmp
sub
jbe
decl
jge
and
dec
lock
push
sbb
movsl
jo
push
fistpll
lret
mov
xor
pop
pop
push
dec
push
push
pop
dec
lcall
and
inc
dec
inc
pop
inc
inc
dec
pop
and
outsb
xlat
in
xchg
out
push
xchg
in
and
dec
add
inc
push
pop
clc
or
in
enter
negl
xor
add
sbb
adc
decl
inc
add
fdivs
mov
xorl
nop
shrb
dec
adc
add
repz
movzbl
xchg
lea
setae
dec
and
inc
inc
lahf
lock
adc
or
notb
sbb
and
dec
inc
cld
push
das
pop
inc
stc
clc
je
idiv
push
mov
test
or
or
cmp
push
ljmp
ror
mov
stc
mov
shl
add
rcr
cmc
neg
stos
jg
call
cli
or
pusha
adc
outsb
xchg
xchg
ret
sti
in
fildll
pop
ror
cmc
xor
sub
ret
dec
adc
jbe
ja
pop
and
mov
lret
test
or
add
call
add
dec
and
aaa
xor
inc
mov
lea
inc
test
xor
cmpb
idivb
inc
jne
lahf
adc
stos
add
dec
jbe
jmp
sbb
ljmp
testl
lcall
mov
adc
mov
push
or
pushf
incb
incl
pop
test
xchg
inc
add
call
inc
pop
add
stc
mov
pop
clc
sub
cmp
jp
and
stc
neg
pushf
aaa
in
adc
mov
mov
fildll
xor
cmp
subb
add
mov
xchg
jmp
test
in
das
sar
mov
inc
or
ja
mov
cmp
clc
pusha
cs
shr
std
add
nop
loope
jp
aad
xchg
add
jb
pusha
jmp
mov
or
cli
mov
cmc
pushf
pushf
xor
fimull
push
mov
push
mov
pusha
pushf
jmp
xchg
jg
lock
xchg
nop
or
adc
mul
add
mov
call
orl
cld
inc
mov
mov
stos
aaa
mov
dec
inc
adc
test
lock
xchg
jmp
imul
pushf
jmp
les
in
cmpl
jmp
add
push
pushf
mov
cmp
push
out
sbb
adc
dec
push
mov
std
daa
xor
mov
es
pop
rclb
dec
jmp
xor
inc
pop
dec
test
jp
jmp
std
mov
add
xchg
add
orb
mov
mov
das
mov
add
pushf
jae
cmpb
sbb
add
filds
fcoms
jmp
jmp
fdivrp
inc
adc
lock
jmp
push
and
icebp
cmpsl
and
or
push
lea
pop
imull
adc
sbb
fistpl
jb
inc
and
out
mov
or
pop
pop
popfw
pusha
arpl
and
pop
enter
rolb
pop
push
lea
addb
lods
loope
sbb
xchg
xor
loopne
xor
shll
movsb
mov
push
xchg
loopne
push
lock
sar
icebp
or
testl
mov
cmpb
fnstsw
bswap
in
out
mov
clc
and
add
push
repnz
mov
rcll
mov
std
loope
sbb
pop
loope
push
dec
int3
fucomp
nop
push
or
cmp
sub
test
fisttpll
xchg
pushf
rorl
and
mov
xlat
arpl
loopne
scas
andl
rolb
add
movsb
test
mov
or
mov
pop
dec
sar
mov
mov
dec
lea
popa
sub
clc
jecxz
mov
pop
push
pop
fstpl
jl
test
leave
cmp
aas
jno
jmp
add
out
pusha
cmp
test
adc
jp
and
in
or
mov
jmp
mov
jae
inc
call
mov
add
shl
cmp
jg
pop
add
jmp
pop
das
pop
das
sub
cmp
cmc
pop
cltd
popf
lahf
cwtl
incb
mov
cwtl
mov
sub
sbb
push
mov
push
aaa
incl
cmp
ret
mov
jl
push
sbb
leave
cmp
lds
mov
test
add
stc
test
test
clc
jne
cmpsl
push
mov
aas
mov
pusha
and
rcll
push
pop
jmp
jo
aad
mov
std
or
xor
imul
mov
pop
or
jmp
cmc
or
adc
mov
jae
xor
push
cmp
negb
jbe
out
sub
stos
sub
out
and
fidivl
int
jmp
aas
lods
popa
loopne
mov
lds
sahf
lcall
adc
lock
notl
into
push
enter
add
cmpl
sti
jbe
cli
push
lahf
sub
idivb
pusha
test
add
and
fwait
loope
and
scas
lock
xlat
sbb
mov
shll
cs
mov
push
loope
jmp
add
jb
call
int
mov
inc
add
ljmp
movsl
inc
jg
xor
dec
mov
mov
lcall
and
pop
xlat
out
fwait
in
dec
pop
jbe
lret
fwait
adc
pop
lret
add
ljmp
push
push
cwtl
cwtl
push
or
scas
ja
cli
adc
lret
aaa
fcmovnb
mov
jmp
mov
jnp
rorl
mov
scas
rcr
xor
incl
mov
in
nop
mov
test
call
fdivrl
fs
call
inc
jmp
sahf
adc
push
scas
ljmp
xor
cli
call
cmc
jecxz,pt
jmp
push
pop
inc
xchg
push
mov
and
and
push
call
jbe
and
and
sahf
fnsave
jno
rorl
push
mov
sbb
cld
popa
pushl
test
mov
adc
lret
cmp
mov
iret
inc
icebp
adc
iret
pushf
adc
aas
loopne
and
push
push
arpl
stos
mov
push
mov
dec
mov
lahf
sar
jg
bswap
cmp
clc
adc
xor
clc
jmp
lea
outsb
push
mov
bound
lcall
sbb
sahf
mov
or
sub
call
dec
clc
push
call
call
outsb
dec
test
stc
push
cwtl
call
stos
sbb
sub
adc
add
xor
push
cld
push
outsb
pop
add
lds
and
mov
xchg
bound
movsl
jo
cltd
cli
mov
lock
and
adc
pop
std
jbe
adc
imulb
sarl
test
cmc
insl
mov
lods
and
xlat
adc
add
fistpl
adc
icebp
mov
sub
fildll
or
adcl
push
lea
les
popa
jg
or
sbb
pushl
loope
inc
push
xor
xor
inc
lcall
push
pop
subb
xchg
stos
fisttps
loopne
in
fcoms
mov
or
incb
arpl
xor
add
adc
or
push
jne
jnp
lods
aas
cmp
add
fsubl
call
inc
inc
fs
out
fsubl
test
and
sub
fisttpll
or
mov
pop
mov
dec
out
aaa
rcr
shr
inc
sub
cmc
sbb
int
mov
xchg
or
into
mov
cmp
push
sbb
call
fwait
mov
test
addr16
xor
inc
mov
bound
stos
push
push
sbb
shlb
addb
adcl
cwtl
loopne
test
pop
adc
stos
cmp
lea
ds
add
rcll
cmp
inc
ret
test
dec
push
fmull
add
and
dec
ljmp
stc
or
or
mov
jmp
sar
sbb
lea
adc
imul
mov
jmp
add
inc
add
add
pop
push
push
fimuls
lcall
les
or
or
sti
adc
ja
adc
lea
pop
pusha
ret
sub
addr16
lea
rclb
mov
shld
mov
xor
pop
add
call
imul
or
mov
mov
or
adc
mov
insl
movsl
add
mov
arpl
or
push
dec
aaa
and
orl
fimull
sub
mov
push
jmp
mov
out
ret
nop
aam
lock
xchg
neg
sar
xchg
lods
mov
cmp
call
ljmp
add
jmp
lds
mov
movsb
sub
imul
cmp
jle
jmp
jo
xorl
popf
pushf
in
pop
inc
mov
orb
dec
inc
rolb
cmc
xchg
sbb
mov
sarb
or
call
mov
mov
cltd
call
lahf
add
push
push
push
std
cld
push
lret
fiaddl
sub
pop
nop
push
aaa
pushf
testb
xchg
movsb
xchg
ljmp
popf
xchg
jp
inc
aas
outsb
and
movl
lods
jb
inc
push
test
xchg
push
ds
mov
jle
ljmp
clc
cmp
insl
fdivl
cmp
roll
iret
insb
test
lahf
int3
lea
pushf
push
push
arpl
inc
push
mov
pop
push
pusha
cmc
test
icebp
lock
filds
aad
push
sub
jg
leave
lcall
xadd
cmp
or
into
adc
ret
push
mov
cmp
pusha
call
xor
sbb
and
fsts
or
mov
testl
mov
pusha
and
fidivs
aaa
lods
pusha
and
xchg
insl
data16
cmp
xor
jg
mov
add
inc
cmp
das
test
shll
call
or
xchg
loop
xchg
stc
cmc
add
enter
cld
loope
cmp
inc
iret
xor
push
cld
mov
mov
xor
in
push
icebp
and
mov
js
call
mov
jb
lods
aaa
sar
pop
rclb
xorl
add
push
pop
jp
and
dec
jbe
adc
and
pusha
sbb
xchg
das
jg
sbb
lds
cmpl
jmp
insl
push
pop
js
lcall
outsl
jmp
sub
xor
stos
sub
mov
stc
cmpsl
push
loope
cwtl
clc
cmp
cwtl
negb
mov
icebp
in
cmp
add
push
xlat
outsl
cltd
dec
fisubs
push
fidivrl
jbe
push
lds
dec
mov
ror
cmc
stc
cmp
jmp
int
or
popf
repz
fisttps
push
xor
push
and
push
pop
sub
in
mov
ffree
in
sbb
add
leave
push
enter
hlt
aas
scas
rcr
test
ror
jnp
jmp
mov
xor
sbb
inc
cmp
mov
pop
cmp
rcrl
pushf
test
pusha
add
or
add
loope
push
xchg
cmp
pusha
jmp
cmp
fucom
in
jmp
dec
xchg
loope
inc
das
dec
and
pop
nop
out
sbb
enter
into
adc
mov
adc
push
adc
sub
cmp
mov
fstpl
iret
add
fsubr
or
adc
pop
push
push
jo
cli
sarb
adc
das
lock
xchg
cmp
cmp
mov
adc
test
rcrl
shr
xor
js
rolb
in
or
mov
or
xor
adc
test
mov
and
jmp
mov
inc
adcl
pop
inc
xorb
push
xor
subb
fsubp
dec
aam
lock
xchg
pushf
mov
call
jmp
call
fadds
pop
cmp
std
shrb
cltd
sbb
pop
aaa
loope
clc
push
pop
push
icebp
add
and
mov
shld
jno
jbe
and
jae
push
frstor
dec
fistpll
mov
push
mov
push
js
push
lret
fisttpl
mov
das
xor
mov
out
movsb
inc
or
mov
inc
nop
rcl
jg
push
hlt
pusha
pop
insb
fldl
std
sbb
out
adc
out
shlb
andb
pop
movsl
jmp
dec
mov
fucomp
imul
hlt
xor
mov
sub
pusha
mov
ret
jl
xchg
std
or
mov
outsb
lds
call
sti
inc
fstl
movsl
pop
pop
cmp
roll
mov
arpl
fsubrs
xor
mov
fdivr
jle
or
fistpl
jecxz
idivl
pushf
fldt
add
popf
loopne
inc
pushf
in
ffree
fisttpll
add
stc
fdivrl
dec
pop
pop
cmp
inc
or
call
ja
sub
and
push
test
pop
xchg
add
inc
fwait
mov
jecxz
pop
int
xchg
mov
ss
dec
stos
sbb
xor
cmp
sub
fsts
enter
das
lahf
test
stc
call
jne
ljmp
das
pop
mov
mov
aaa
dec
les
mov
insb
outsb
inc
mov
test
xlat
movsl
dec
je
push
push
leave
adc
xor
stos
stos
in
in
repnz
mov
rorb
pop
push
sub
push
ds
out
inc
mov
jg
or
outsb
subl
in
xor
je
fcompl
sub
xor
into
cli
loop
sbb
mov
push
xchg
mov
cmp
mov
lea
mov
pop
call
xor
call
and
ss
sbb
jb
sahf
ret
jp
inc
loope
pop
mov
call
aad
movd
ret
lds
adc
pop
jp
push
int3
insb
out
ret
or
mov
fldl
shr
cmpsl
cmc
xlat
xor
cmpsl
cltd
and
js
fdivl
mov
mov
scas
mov
push
or
pusha
xchg
test
mov
push
cmc
call
dec
sbb
xor
lret
pop
inc
shrb
rolb
aaa
cmp
pop
jmp
jo
or
jg
mov
inc
outsl
pushf
jnp
jmp
mov
outsb
aad
imul
int3
xlat
cmp
imul
lea
out
or
mov
dec
in
mov
push
mov
test
sbb
mov
mov
mov
pop
clc
mov
mov
xor
cli
jb
push
jbe
cmp
push
push
scas
loope
orb
dec
add
add
xor
pop
ret
xchg
mov
inc
sub
popf
or
and
xor
push
movl
push
lea
test
push
mov
aam
sbb
mov
push
sub
or
movsl
fcomp
popf
icebp
fisttps
loope
cli
inc
ljmp
sarb
xor
fldt
push
in
and
rorl
movb
and
pop
adc
sahf
mov
jle
inc
pop
enter
nop
or
xor
cmpsb
mov
sub
inc
bnd
pop
mov
push
sahf
and
add
rolb
pusha
nop
cwtl
lods
arpl
jnp
mov
inc
cmp
cmpsb
sbb
pop
add
mov
sbb
xor
cmp
loop
rcll
aad
jo
cld
jne
rcl
lock
mov
xchg
cmp
mov
pop
insl
inc
pop
out
fbld
fcoml
push
jge
add
xchg
and
dec
out
push
mov
jns
fistps
rclb
lea
xchg
lods
cmpsb
cmp
fsubs
fisubl
shl
pusha
std
shl
mov
or
cmp
cmp
mov
fldl
sbb
scas
rorb
orb
push
push
iret
add
mov
repnz
incl
dec
loopne
sbb
rcr
add
jne
ja
xchg
and
popf
jno
dec
cmc
enter
or
fcmovnu
inc
xchg
sbb
xor
outsl
loopne
loop
roll
lea
mov
jmp
data16
add
pop
mov
xorl
cld
in
mov
push
movsl
enter
pushf
test
pushl
push
mov
jmp
cli
pop
cmp
mov
sbb
sub
push
not
mov
sarb
popa
sub
xlat
movsb
jecxz
arpl
clc
mov
int
not
push
enter
popa
jo
mov
pop
stos
or
dec
sbb
dec
jecxz
pop
adc
push
loop
cmpsb
inc
stc
call
push
add
cs
xchg
sbb
add
mov
outsl
push
pop
mov
out
test
loop
adc
xor
jle
push
lds
loope
outsl
aad
cmpsb
cmp
and
ljmp
mov
add
push
das
sub
cmc
filds
fdivrp
pushl
xchg
or
hlt
inc
sub
jle
aam
and
mov
js
add
push
xchg
lret
loopne
or
pusha
jne
out
dec
es
clc
cmpsb
aam
mov
stos
jge
and
rcrb
jmp
jge
cwtl
dec
jmp
fistps
gs
adc
mov
test
mov
and
mov
cs
pop
dec
xor
add
outsb
sbb
adc
ret
loopne
scas
cmp
adc
movsl
xor
aas
and
inc
lret
jle
fistl
add
sub
cmp
iret
jle
dec
push
pop
in
sub
into
cmp
xor
aaa
jnp
sub
adc
das
pop
dec
cmp
and
sahf
sub
idivl
mov
daa
pop
fs
std
fimuls
cwtl
sub
dec
add
jle
mov
adc
xchg
cmp
dec
jp
mov
pop
add
cmp
lds
or
adc
sub
jnp
mov
sbb
pop
pop
mov
rdrand
add
das
adc
fwait
std
xchg
or
jg
pop
movnti
out
scas
pxor
inc
or
daa
inc
adc
fnstenv
daa
arpl
push
sub
mov
or
movlhps
lret
jle
or
psubw
add
paddw
jae
xor
dec
imul
pop
mov
popa
emms
fimuls
in
sub
or
bswap
adc
incb
add
add
ud2
sti
nop
dec
sahf
cmp
add
cmp
push
pop
pop
out
fsubrp
ja
std
sub
xor
pop
xchg
das
adc
das
mov
shll
sbb
lret
clc
int
mov
add
add
mov
mov
mov
aas
mov
ficomps
neg
or
mov
push
inc
loopne
cvtdq2ps
es
cwtl
sub
adc
mull
mull
das
adc
adc
stos
negl
mov
aas
ret
or
dec
sub
repz
cmp
pop
push
sbb
stc
pop
pop
enter
stc
ret
cs
cmp
shrd
icebp
mov
push
push
inc
push
mov
in
and
mov
jl
jmp
mov
or
xor
sbb
and
enter
pusha
mov
mov
push
mov
jl
cmp
ss
push
orb
cmpsb
mov
or
and
cmpsb
mov
clc
cmc
or
pusha
cmp
test
sub
aad
push
sub
insl
cli
xor
xchg
js
mov
out
loopne
inc
sub
pushf
sahf
sbb
mov
lret
add
arpl
rcll
and
jle
mov
mov
xchg
cmpsb
sub
inc
orb
loop
mov
das
xchg
popa
xchg
incl
xchg
fwait
add
mov
mov
xchg
les
jo
jmp
fistl
add
add
je
mov
std
dec
bound
stc
mov
push
out
push
insb
jmp
mov
inc
scas
std
inc
mov
fcmovbe
add
fdivrp
push
test
jmp
das
cli
push
mov
pushf
jmp
iret
loop
dec
jge
jmp
mov
cmp
stos
mov
pop
and
cmp
sbb
pop
push
push
pushf
cli
pop
lds
call
fadds
sahf
aam
loopne
jo
pop
out
in
xor
test
outsb
jmp
daa
pop
inc
push
jg
sub
mov
jnp
jle
adc
push
pop
loopne
movsl
inc
pushf
lret
inc
xchg
dec
loop
mov
ret
cmp
mov
shlb
daa
mov
repnz
add
stc
xor
sbb
adcl
outsl
icebp
insl
cwtl
and
or
aaa
incb
jl
push
inc
out
mov
xor
push
inc
pop
pop
xor
pop
mov
jmp
xchg
mov
clc
sub
ljmp
leave
dec
mov
into
add
or
push
sub
jle
leave
cli
sub
shl
cmp
ja
out
add
lea
jl
push
mov
add
cmp
lret
cmp
jl
add
mov
out
call
mov
add
dec
cmp
stos
sbb
ret
repnz
fistpll
dec
cmp
jmp
faddl
call
decb
lret
repnz
aad
mov
add
xchg
or
fs
sbb
js
pmuludq
mov
mov
mov
adc
popf
adc
pusha
repz
cltd
mov
pop
jp
add
sub
mov
sub
mov
adc
das
push
mov
push
fidivrl
push
mov
push
std
jmp
insl
mov
fdivs
dec
loope
in
aad
loope
hlt
mov
insl
jne
in
les
sub
add
ljmp
xchg
shlb
mov
jne
mov
or
out
inc
mov
sbb
ja
xor
dec
xlat
sub
ret
call
test
and
add
ret
fnsave
scas
inc
mov
inc
mov
fsubl
cmp
and
pop
icebp
mov
pop
jmp
jo
outsb
cwtl
loopne
add
je
nop
repnz
xor
pushf
xchg
dec
ret
sub
sub
inc
mov
sbb
shll
adc
fimull
call
cmp
out
sub
sub
sub
pop
sbb
push
and
popa
ja
insl
push
mov
adc
pushl
adc
loope
rdtsc
add
jmp
roll
pop
pop
inc
jmp
mov
inc
xor
cmp
jecxz
inc
add
pop
and
sub
imul
jmp
dec
inc
dec
shr
rclb
adc
adc
cmc
subb
mov
popf
mov
inc
jmp
pop
inc
pop
jnp
pop
mov
mov
call
ja
xor
push
cwtl
push
pushf
ret
ror
aad
and
std
cmpsb
mov
jecxz
mov
sbb
add
int
jbe
mov
call
loop
sbb
into
cwtl
mov
adc
pusha
jl
push
mov
cli
mov
std
or
incl
xor
push
cmp
test
pop
dec
inc
add
sub
and
or
and
push
mov
sub
mov
push
clc
movsl
mov
sub
call
jecxz
mov
cmp
add
mov
punpckhdq
jmp
dec
mov
js
pop
lea
or
mov
loope
jbe
push
or
in
pop
pop
aas
push
mov
push
repz
aam
mov
enter
lahf
xchg
cmp
xchg
mov
sub
fs
sub
mov
test
imul
outsb
lahf
cmp
lock
insb
cmp
cmp
outsl
shr
jmp
adc
or
pushf
setns
lods
sbb
cmp
cmp
jl
lock
cs
xchg
aam
iret
jmp
adc
fimull
bound
xor
push
icebp
adc
dec
mov
xlat
not
push
add
scas
pusha
test
call
bound
into
pop
mov
mov
add
xchg
test
hlt
dec
cmp
pusha
popa
call
jne
mov
ret
mov
xor
in
mov
push
mov
or
inc
inc
mov
cld
outsb
fnsave
sbb
dec
das
sub
out
xchg
pop
jb
outsl
sahf
ja
add
repz
pop
sbb
loopne
stos
xchg
push
aam
jbe
call
pushf
sbb
mov
mov
cmc
sbb
add
mov
clc
daa
jno
fsubl
imul
adc
jle
test
lock
aam
push
call
sub
lahf
mov
sub
clc
push
xchg
adc
dec
or
pop
adc
xor
cmp
cwtl
xchg
mov
push
call
push
mov
jmp
sbb
pop
xor
shrb
nop
or
add
les
clc
pop
pop
dec
ljmp
xchg
mov
out
xor
sti
lock
sub
arpl
mov
pop
int3
into
cmc
icebp
cmpsb
movl
push
mov
push
dec
jp
addr16
mov
movsb
inc
lock
adc
in
stos
mov
inc
sar
mov
dec
sbb
xor
aaa
mov
push
adc
clc
xchg
call
addb
cmp
mov
mov
test
adcb
sbbl
shr
jae
cli
sub
mov
iret
mov
or
call
jmp
fcomp
push
sub
roll
mov
jns
mov
stc
sub
nop
loopne
dec
push
jno
int
and
sbb
cmp
outsb
shrb
xor
xchg
mov
in
pop
lcall
das
add
shl
mov
mov
jno
pop
cmp
fnstsw
push
push
lods
push
and
add
int
inc
cmp
lcall
sbb
inc
psllq
leave
je
add
inc
enter
cmp
adc
sti
push
mov
lods
decl
fwait
fs
pop
int3
sub
test
rcll
ror
stc
shl
ret
call
add
ds
xor
jo
jl
or
mov
loopne
push
lret
pushl
insl
mov
dec
cmp
mov
cmp
push
jl
jmp
xor
lahf
jle
sub
sub
xchg
pop
jmp
mov
mov
inc
and
inc
cmpsl
push
mov
sbb
lahf
adc
int3
cmp
ljmp
outsl
pop
fsubs
stc
addl
pop
push
xor
jp
mov
in
xor
sti
outsb
mov
pop
push
or
cmp
ds
pop
add
sti
addr16
inc
clc
call
fdivr
pop
pop
pop
pusha
imul
shld
cmp
addr16
pusha
push
cmp
jne
inc
xchg
shll
sti
call
das
add
lods
test
in
loop
sar
ljmp
pop
lahf
lods
jbe
outsl
sti
and
lock
cmpl
out
ret
adc
push
xchg
shl
in
cwtl
sub
decl
or
mov
cli
out
gs
outsb
cmp
sub
in
cmp
push
inc
mov
cmp
loopne
and
stos
xor
ljmp
add
sub
dec
and
sub
sub
push
add
insl
push
js
jmp
sbb
mov
dec
push
nop
jnp
mov
es
cmp
lcall
mov
fs
call
decb
loope
push
pusha
add
test
xor
mov
push
je
xorl
hlt
mov
add
testb
xlat
setp
jge
mov
mov
call
or
or
mov
test
sbb
pushf
adc
push
xchg
xchg
add
mov
dec
add
jmp
adc
mov
out
cmp
push
setb
jg
sbb
pop
inc
or
fadds
mov
sub
mov
push
or
aad
call
cmc
cmp
out
add
mov
aam
sbb
daa
jne
jl
out
xlat
mov
mov
cld
jb
stos
icebp
std
and
or
jbe
popa
push
popa
testl
fdivrl
inc
ret
mov
mov
push
or
sub
xchg
test
pop
cld
mov
inc
pop
lods
mov
ret
ret
pop
pop
sbb
add
jmp
jmp
test
sub
lea
test
add
cmpsb
pop
cld
push
jmp
pop
fists
push
jge
clc
out
call
push
scas
push
sarb
mov
xchg
adc
out
push
inc
inc
sbb
sti
idivl
call
icebp
adc
sbb
call
jp
cmc
stc
or
push
dec
xor
adc
pop
shlb
sub
shlb
test
lock
ret
pop
dec
dec
fistl
mov
seta
jmp
xor
sub
fnsave
ret
int
jl
lret
cmpl
arpl
jno
test
jmp
repnz
and
loope
push
in
movsb
push
add
ja
loopne
nop
or
or
inc
jmp
sbb
cli
pop
dec
fistpl
cmp
sub
pop
std
inc
lock
in
cltd
das
in
push
or
jmp
add
movsl
rorl
or
push
inc
push
jmp
jnp
shrb
dec
push
cmp
divl
pop
dec
lcall
into
iret
pushf
xchg
mov
cld
jnp
cmp
dec
cmp
not
stc
roll
clc
mov
lds
inc
shl
cmpsl
or
push
mov
ds
inc
les
enter
dec
fildll
cmpsb
cmp
pusha
ret
pop
in
gs
sbb
sbb
push
mov
ljmp
and
add
cld
sti
inc
sbb
or
add
cmp
icebp
dec
jbe
fadds
addr16
test
jle
divb
inc
test
iret
sub
movsl
xor
jno
sub
lahf
mov
imul
call
pop
icebp
stc
xor
dec
loopne
jl
adc
out
cwtl
and
and
adc
cmc
pop
out
into
push
mov
das
push
mov
sahf
fiadds
pop
pop
faddl
testl
mov
cmp
loopne
lea
lret
enter
dec
shlb
jmp
lds
pop
jo
jne
inc
jns
decl
pop
mov
jb
out
cmp
mulb
pop
mov
sub
inc
xlat
cmp
adc
ljmp
xchg
icebp
or
and
imul
mov
fsubl
sbb
ljmp
cmp
xor
js
sbb
outsb
pusha
data16
cmc
mov
les
ss
sbb
loopne
mov
push
outsl
fcmovbe
lcall
subl
cmp
sub
adc
sub
dec
test
imul
mov
mov
xor
xor
pop
mov
out
repz
mov
test
jns
pop
rcrl
aam
mov
ud0
test
lea
lahf
call
outsb
orb
mov
shlb
ja
adc
adc
leave
sub
and
push
sbbl
in
jne
push
xor
dec
popf
out
jmp
in
or
pop
sbb
ds
mov
test
dec
or
adc
add
jno
call
icebp
arpl
push
push
call
dec
cld
xchg
outsl
jmp
push
inc
jecxz
int3
push
ss
xchg
fsubr
ljmp
outsl
adc
cmp
int
cmp
xorl
jp
add
mov
dec
shrb
dec
imul
shr
cmp
xor
mov
cwtl
push
sbb
jbe
cmp
and
push
sbb
cmc
fwait
jle
xchg
outsl
call
iret
repz
cmp
lcall
mov
mov
pop
adc
fstl
xor
cmc
dec
lods
std
cli
pop
hlt
sub
ja
movsl
add
mov
xor
adc
ret
movl
fstpl
jne
inc
icebp
push
add
lret
jle
neg
je
ret
xor
bound
add
jo
jmp
mov
inc
aaa
stos
stc
sbb
test
je
pusha
mov
sub
push
jnp
pop
jle
outsb
sub
outsl
xchg
jmp
mov
mov
or
xchg
mov
mov
dec
push
mov
movsl
outsb
and
pop
cltd
mov
add
mulb
and
insl
movsl
add
push
inc
or
xchg
mov
out
or
sub
pushf
jge
xor
or
lock
shl
sub
inc
aad
xor
mov
rolb
xlat
jle
sub
jle
xchg
xchg
push
push
sub
sbb
push
xor
jg
jmp
sbb
xlat
sbb
jne
or
and
je
test
mov
adc
cli
test
mov
xor
mov
and
mov
sub
pop
inc
in
adc
mov
shl
ljmp
andb
mov
mov
add
lret
sar
pop
je
sbb
adc
or
ret
pushf
cmp
xor
mulb
inc
xor
lret
insb
add
in
pop
mov
add
jle
les
divl
cmp
push
clc
test
cmp
sti
les
arpl
jb
stc
pushf
sbb
mov
or
mov
or
sahf
sbb
das
adc
lds
dec
cmp
call
sub
jg
testl
adc
push
mov
sbb
loop
repz
jge
clc
sbb
cmpb
mov
pop
push
or
mov
andb
cmp
pop
not
rcl
bswap
pop
xchg
and
test
or
and
ja
hlt
es
out
inc
clc
lea
lods
cmp
iret
or
mov
outsl
sub
lock
sbb
stc
add
xchg
inc
inc
push
fadd
jg
fs
test
mov
rcr
jle
data16
fadds
push
mov
adc
mov
popf
sti
nop
fnstenv
push
fwait
jg
adc
cmp
add
cmpb
jns
inc
pushf
subl
inc
cld
std
je
ret
and
cmp
int3
inc
jl
adc
fcoml
in
fadds
add
mov
jge
hlt
or
loopne
orb
push
sbb
cmp
jno
insl
je
mov
pop
ret
movsl
lret
pop
or
jo
jmp
inc
lock
pop
ds
int
dec
xor
and
mov
test
pop
das
jecxz
mov
shll
clc
or
shll
sub
cmp
and
fucomp
adc
mov
sbb
pop
jno
mov
fisttpl
clc
or
add
call
add
loopne
cli
dec
push
je
aaa
pop
push
mov
ja
mov
mov
roll
fiaddl
push
lods
sbb
xchg
lahf
stc
push
in
shll
push
test
adc
cmp
xor
shr
cmpsl
outsb
js
leave
out
mov
fs
dec
sarl
aaa
sub
sbb
loopne
shll
jge
sub
cmc
add
or
test
adc
and
mov
aam
xchg
call
fistl
mov
nop
loopne
push
or
pop
decl
or
jb
mov
outsl
push
jmp
jns
sub
xchg
xchg
arpl
pusha
loope
test
add
test
jp
pop
out
fdivs
mov
dec
in
add
hlt
pop
psubq
push
loopne
orps
inc
adcl
aad
rcrl
pushf
xchg
push
in
mov
icebp
pop
fwait
call
mov
mov
pop
in
xchg
xbegin
movsb
sub
mov
jg
sbb
call
ja
in
call
dec
fimull
lds
loop
inc
imul
push
pop
dec
mov
arpl
lds
pushf
std
and
arpl
cwtl
push
push
sbb
and
pusha
test
xchg
rcr
hlt
add
jmp
mov
pop
std
aad
inc
jge
sbb
add
add
jno
add
lret
adc
scas
test
jg
in
xchg
sbb
mov
push
adcb
sahf
shlb
mov
sub
push
jmp
mov
insb
bound
adc
mov
xchg
lcall
out
pop
lcall
testb
push
push
in
je
xchg
and
sbb
xor
ficomps
call
les
orb
arpl
and
inc
push
sub
nop
insb
jg
inc
mov
enter
stos
push
mov
ljmp
sbb
inc
mov
and
jmp
cmp
jl
push
test
or
mov
mov
lods
stc
and
dec
mov
dec
jmp
push
sbb
adc
xor
cmp
adc
push
lods
sar
dec
shrl
pop
cmpb
push
nop
rcll
ret
mov
mov
aad
loope
cli
stc
push
pop
xchg
leave
divb
jno
js
pusha
push
les
pop
adcb
sub
mov
orb
test
pop
jb
ret
dec
ljmp
pusha
sub
mov
ss
insb
enter
test
mov
jo
iret
push
call
aas
mov
loop
and
jmp
lcall
xchg
movl
inc
or
mov
outsb
fdivrs
fists
cmp
push
pop
dec
shr
push
pusha
rorl
std
xchg
pop
mov
jo
outsb
inc
ljmp
pop
inc
pop
push
sbb
pop
dec
jmp
cs
add
bswap
mov
mov
dec
or
or
cmpsl
xchg
or
and
cmp
movsl
push
mov
incl
sbb
lea
dec
push
push
push
fidivrl
shll
and
icebp
add
into
xlat
pop
mov
push
stos
and
into
dec
ret
clc
adc
and
dec
aaa
mov
in
jge
repnz
mov
iret
sbb
adc
setg
xchg
inc
test
push
adcb
adc
sbb
inc
pop
idiv
popa
xchg
adc
xchg
add
dec
or
sub
cmp
decb
mov
sub
inc
xlat
notb
pop
dec
std
shlb
int
push
pushf
and
ret
xor
xor
inc
iret
pmaddwd
stos
xchg
into
jo
mov
ficomps
inc
and
outsb
jne
repnz
iret
or
xchg
add
xor
pop
sti
push
rcrl
test
add
sub
xor
mov
arpl
shr
negl
sub
cli
adc
ret
aaa
rorl
ficomps
mov
jo
mov
fxtract
jno
mov
jl
sbb
sbbl
clc
adc
out
popa
jmp
negl
jno
hlt
mov
mov
pop
add
clc
aaa
inc
shrl
sahf
cmp
test
pop
adc
cs
mov
dec
jno
pushf
push
cmp
inc
xor
mov
xor
sbb
call
decb
or
out
fdivs
sbb
bound
shll
adc
dec
stc
mov
cli
push
mov
mov
fisttpll
and
lea
clc
add
cmpsl
add
cld
adc
cwtl
icebp
mov
push
xchg
clc
inc
sbb
inc
call
sbb
mov
mov
mov
cmp
mov
sbb
mov
or
repz
das
sti
js
inc
pop
mov
and
mov
or
icebp
sub
jmp
add
push
daa
outsb
mov
sbb
mov
aam
inc
je
xchg
push
nop
push
sub
pushf
movsb
push
push
int
pop
divb
je
add
ret
jg,pn
fadds
shll
sbb
fucomip
addb
ja
and
pushf
mov
fwait
mov
fucompp
cwtl
sbb
pop
or
inc
mov
add
add
sti
dec
out
mov
or
push
xchg
clc
or
cmp
sbb
sbb
loop
pusha
inc
negb
popl
pop
pushf
push
push
pop
ret
cmp
mov
out
test
bound
loope
sub
jmp
jo
cmc
sbb
mov
pushf
pushf
int3
jbe
adc
sbb
stc
call
adc
mov
es
adc
jg
ja
out
je
cwtl
imul
lods
outsl
icebp
adc
mov
and
in
mov
outsl
lcall
scas
xor
xchg
call
pop
gs
xchg
jmp
jecxz
mov
rorb
or
pop
aaa
pusha
lods
fwait
add
movsb
clc
les
mov
cltd
dec
mov
add
fstpt
mov
fnstcw
fsub
psubd
ja
push
mov
cs
or
inc
xor
inc
addr16
jno
test
test
lds
pop
push
clc
ret
mov
jo,pt
push
add
add
lds
call
ljmp
sbb
xor
aad
lcall
mov
jmp
mov
mov
mov
cmp
cmp
add
cmc
clc
sub
cmc
test
cmp
js,pt
cmp
cmc
call
push
mov
test
or
repnz
outsl
fs
call
pop
out
cltd
imull
cmp
sub
pop
jnp
inc
jae
daa
push
cmp
das
jmp
cltd
std
pop
inc
dec
repz
pop
mov
das
jg
mov
cli
push
in
add
mov
subl
loope
rcl
es
sub
adc
pop
iret
dec
rcrb
adc
das
jmp
push
cs
aam
mov
mov
ss
aad
mov
jns
in
adc
xor
outsb
mov
lock
shlb
fdivs
js
cmc
sub
and
rorl
jo
push
add
ss
push
xor
cmc
lods
cli
push
incb
pop
jmp
out
xor
jno
movsl
in
mov
gs
call
fsubr
and
loopne
add
daa
lock
sbb
sub
or
int3
push
shr
mov
sub
lret
loop
stc
push
jge
push
xor
je
or
jo
xchg
pop
inc
aas
add
sub
pop
jecxz
aad
mov
cmp
jb
stos
cmp
addl
pop
shrl
dec
in
scas
stc
and
pop
jne
bound
test
and
scas
adc
pushf
add
add
shlb
rorb
push
or
xchg
stc
int
and
add
jmp
rclb
pusha
outsb
adc
insb
nop
in
js
fstpl
cmpsb
loopne
dec
or
pushf
mov
inc
sub
cmpsb
in
cwtl
push
subl
decb
mov
dec
divps
push
ljmp
out
xor
sub
or
call
int
aad
icebp
cmpsb
or
push
adc
pusha
mov
cmp
jmp
pop
shrb
inc
lret
sti
stos
fnstenv
jno
outsl
jle
mov
push
imul
mov
add
sar
push
stc
jmp
sub
jmp
test
or
jle
enter
in
push
jnp
ja
fdivs
pushf
cwtl
scas
sub
mov
arpl
gs
test
and
fucom
pop
push
enter
movsb
in
push
sub
xchg
imull
push
push
push
push
shrl
jmpw
popf
pop
stos
ret
jbe
sub
adc
mov
mov
cmp
push
adcl
mov
enter
leave
mov
mov
or
mov
and
adc
push
call
sub
movl
or
addl
imul
cmp
ljmp
push
mov
icebp
fs
shl
xchg
mov
data16
fistl
mov
loop
cmc
cmp
js
shrb
stc
sbb
sbb
lock
sub
and
lahf
mov
ljmp
cld
sub
aas
call
add
pushf
dec
mov
cmp
mov
popf
fwait
in
jmp
fidivl
mov
cld
mov
pop
aad
fnstcw
test
filds
out
popa
add
in
jo
in
inc
sbb
pop
mov
fcomps
in
push
adc
movl
pop
cmpl
and
lea
add
mov
incl
out
clc
mov
out
pop
pop
jae
dec
cmpsb
push
test
decl
outsl
fdivrs
fst
loope,pt
sbb
and
movsb
into
in
inc
inc
out
jmp
inc
popf
cmc
pop
int3
jo,pt
mov
mov
xor
lods
pop
pop
enter
je
jp
dec
sarl
das
stc
fadd
push
test
pushf
bnd
mov
lret
mov
insb
movl
test
pop
inc
sbb
or
cli
lods
push
dec
or
push
xor
cmp
test
xor
stos
mov
bound
fisubrs
and
fsubl
mov
sbb
mov
dec
mov
xchg
in
pop
shll
je
cli
xor
cmp
outsl
cli
and
call
movsl
sbb
cmpsb
push
dec
adc
addr16
aaa
xlat
imul
fistl
psllq
shrb
mov
add
arpl
les
fadd
icebp
out
and
push
cmova
mov
in
rcrl
ja
xchg
mov
shl
test
xchg
push
call
dec
aad
push
jmp
dec
xor
fadd
add
loope
subb
cmp
sbb
cli
mov
dec
dec
shl
sar
imul
rcrl
rorl
sete
test
pop
jmp
cmc
repz
adc
outsl
pop
inc
inc
add
sub
aaa
jo
push
outsb
aam
inc
shl
push
adc
sub
or
pop
fistpll
jmp
sbb
cmp
pop
ds
loopne
mov
mov
nop
ss
pushf
cs
xor
ljmp
push
aam
sarb
sbb
mov
pushf
stc
inc
dec
fistps
in
clc
cmc
jo
mov
loopne
xor
outsb
push
movsl
xchg
rcl
in
cld
pop
or
jb
pop
cmp
ljmp
jg
inc
cli
cmp
cmp
pop
aad
jle
ljmp
xor
cmpl
xor
push
loope
andb
xor
bound
ljmp
test
lds
sub
loope
icebp
jbe
data16
sbb
in
mov
and
xchg
js
push
add
call
add
add
push
fnsetpm(287
sub
rorb
daa
mov
mulb
cmp
push
pop
cmp
jmp
fistps
test
and
mov
sti
xchg
ret
int
js
dec
loope
inc
inc
stos
xchg
xchg
ds
push
xor
les
and
andb
call
pop
aas
shl
push
and
lahf
shrl
hlt
jle
fs
mov
in
mov
loop
ficoms
jmp
fimull
push
dec
pop
add
stos
movsl
add
jmp
ljmp
push
mov
call
clc
push
test
lahf
fistps
mov
or
or
add
and
dec
shll
or
pop
std
enter
inc
push
movsl
insl
lods
out
bound
mov
push
scas
adc
adc
adc
pop
adc
mov
adc
pusha
mov
insb
hlt
mov
push
ret
adc
movsb
pushf
pushf
pusha
cs
out
hlt
mov
push
inc
pusha
push
push
mov
imul
rolb
jbe
lock
sub
sbb
aas
add
shll
lahf
add
pop
or
sbb
ljmp
nop
ret
dec
mov
test
inc
popf
mov
icebp
sbb
push
rep
jmp
push
orb
xor
stos
or
loope
std
movsb
adc
test
ret
or
call
int
add
inc
and
xor
sbb
sbb
stos
pop
imul
jp
xchg
jo
jbe
xchg
addr16
addb
testb
sub
xor
orl
adcb
mov
xchg
stos
xchg
sbb
out
cs
inc
in
push
push
lcall
mov
xor
ficoml
fsubrs
push
sarb
std
cmp
std
iret
cld
stc
sub
push
call
lcall
insb
and
sbb
cmp
push
stos
cs
push
mov
dec
stos
dec
and
pop
fs
mov
cmp
iret
xlat
out
and
mov
rcll
out
cltd
xor
ljmp
or
dec
test
out
add
cltd
push
loopne
adc
or
fbstp
xor
cs
or
addr16
pusha
lahf
push
add
les
das
jo
hlt
ss
mov
aad
popa
rorl
loop
jmp
xchg
sbbl
lea
inc
jmp
push
es
sub
ret
daa
imul
mov
and
rolb
addr16
xlat
mov
sbb
pushf
cmp
fldl
aam
mov
ss
pushf
clc
cmp
push
jno
loope
call
mov
mov
call
cmc
xor
pushf
push
dec
mov
iret
sbb
pop
cmp
push
push
pop
shll
sbbb
jmp
cmp
push
adc
lret
sbb
jle
jnp
aad
mov
push
sbb
push
rorb
add
cmp
shld
int3
pop
sar
sbb
addr16
pop
push
sbb
lods
pushf
lock
add
adc
repnz
push
push
sti
insb
mov
jne
lahf
jmp
or
pop
loopne
mov
aad
mov
out
in
sub
orl
adc
jmp
adc
dec
call
std
imul
ss
roll
push
mov
inc
std
fmull
mov
xadd
movsl
mov
fmul
fmull
clc
mov
mov
jno
ss
mov
sub
push
push
jmp
mov
movsb
mov
xor
adc
leave
inc
pushf
popl
mov
call
insl
add
lcall
test
mov
out
jo
clc
inc
pop
addr16
hlt
ret
sbb
je
stc
ljmp
adc
enter
pop
push
rorb
xchg
push
inc
adc
adc
or
cmp
call
mov
cmpsl
mov
sub
push
leave
inc
cmp
out
stos
popa
mov
and
ljmp
sub
mov
jl
push
sbb
cmp
test
insl
adc
mov
add
sbb
and
clc
int
sahf
adc
jmp
or
jg
nop
push
or
push
dec
imul
stc
mov
test
cmp
push
andl
or
jmp
add
inc
push
adc
xchg
mov
arpl
mov
shl
sub
movl
in
jp
iret
push
mov
adc
sbb
xor
cmp
adc
add
add
inc
aad
mov
push
nop
jge
ficomps
add
sbb
jmp
rcll
in
sbb
push
sbb
xor
pop
adc
je
inc
je
dec
loopne
adc
popa
jmp
outsl
pop
or
push
repnz
insl
aad
mov
roll
xchg
mov
xchg
dec
xchg
movsb
push
nop
push
pop
mov
pop
pcmpgtb
outsb
and
xchg
jbe
push
push
xchg
cli
push
cmp
cltd
gs
sub
sbb
cli
push
adc
jb
jo
xchg
cmp
pusha
dec
cs
sbbl
into
ficompl
pop
push
or
push
lahf
jmp
pop
and
call
add
mov
test
inc
pop
call
and
or
dec
ja
pop
add
jecxz
call
stos
lock
dec
fsubrl
jle
imulb
invd
std
loop
cmp
cmp
cmpl
adc
jmp
call
mov
popa
xchg
test
inc
int
mov
xor
arpl
inc
dec
addb
aad
js
setne
add
in
pop
adc
leave
shlb
fmuls
andl
xchg
icebp
clc
test
sub
lea
mov
dec
out
push
sbb
cwtl
push
add
pusha
lret
subl
cmp
loop
not
cld
push
mulps
cmp
mov
fwait
rorl
in
test
push
push
adc
mov
loop
xlat
jecxz
dec
movsl
and
xor
call
push
inc
mov
fs
frstor
push
xor
mov
out
cld
push
sbb
adc
push
pop
stc
int3
stc
adc
mov
or
addr16
stc
ret
cmpsl
mov
add
ret
mov
push
xor
mov
data16
pop
mov
mov
movsb
mov
jb
insl
add
jnp
mov
js
xchg
jmp
sbb
push
cmpl
xchg
divl
and
sbbl
mov
inc
repnz
je
lahf
cwtl
push
add
add
dec
inc
jecxz
adc
xchg
mov
pop
hlt
insl
add
loopne
add
jecxz
pop
jl
adc
and
sub
gs
insl
hlt
call
jo
les
and
sub
xor
jbe
push
mov
shlb
pop
das
sbb
stc
call
jmpw
sbb
clc
sbb
and
xchg
dec
or
call
test
pusha
add
mov
clc
into
sti
mov
pop
dec
xchg
decl
adc
lods
or
out
cmp
outsb
mov
sub
into
add
or
popa
test
aas
cwtl
inc
ja
fstpl
dec
jmp
xchg
enter
jmp
xor
xchg
outsl
iret
test
cld
add
int3
lret
push
cwtl
mov
hlt
rcrb
lea
movsb
and
rolb
sub
mov
es
lea
aad
xchg
cmp
push
lods
je,pn
sub
mov
out
sub
lea
ljmp
fidivl
xor
sub
mov
loope
xchg
add
jmp
leave
push
dec
jle
popf
sti
add
pop
mov
jbe
pop
or
dec
mov
add
add
pushf
push
rolb
inc
loopne
inc
ja
outsl
in
ficompl
mov
or
adc
push
cmpsl
int3
scas
aad
sbb
xor
cmp
mov
mov
pop
arpl
push
leave
and
inc
fists
sahf
int3
sub
fisttps
int3
stos
outsl
mov
sahf
pop
xchg
push
call
cmpl
sbbb
sbb
mov
fildll
daa
sahf
hlt
xlat
test
push
cmp
push
push
sub
filds
sar
mov
push
int3
addb
inc
loopne
aad
inc
jle
xchg
mov
jmp
lret
adc
sub
add
mov
adc
icebp
pop
ljmp
fisttps
lock
sub
dec
das
xor
xor
in
xchg
jmp
jge
add
jle
pop
or
dec
stos
int3
test
sub
ret
pushl
sub
add
cmc
jmp
fs
outsl
scas
rclb
or
xchg
jp
roll
js
sub
ds
pop
shrl
pushf
pusha
pusha
cli
add
xlat
ret
inc
clc
ret
andl
clc
push
push
nop
cmpsl
ret
test
add
jb
ss
jmp
fiadds
repz
incb
inc
nop
pusha
push
mov
sbb
cmp
mov
pusha
fldl
faddl
outsb
adc
int3
ret
jmp
push
rorb
xchg
push
push
push
and
lds
cwtl
jnp
movsl
mov
hlt
shlb
cmp
add
add
cmp
jno
out
pop
add
jmp
push
clc
mov
loopne
and
jmp
arpl
stc
sub
dec
popf
lock
scas
mov
insl
or
add
dec
jmp
rep
bound
sahf
lret
ficompl
lcall
test
mov
mov
add
mov
sub
call
mov
dec
pop
ret
out
xchg
bndldx
cmp
xor
lea
ss
mov
jmp
pop
movsl
mov
xchg
dec
sahf
push
mov
insb
mov
loopne
mov
testb
pop
les
mov
fwait
pop
pusha
mov
lock
add
push
push
pushf
bound
aaa
lock
jp
enter
xor
clc
cmp
push
push
lahf
fdivs
and
add
out
mov
adc
dec
loopne
xorb
jl
fdivrs
inc
and
hlt
mov
add
push
add
inc
mov
or
pushf
cmc
xchg
cmp
dec
insb
sub
sbb
add
push
sub
fdivrs
fsubr
or
sub
cmp
add
cltd
notb
int3
mov
lahf
sub
rolb
push
push
add
xchg
push
pusha
mov
inc
nop
jns
rorb
and
lea
rorl
xchg
cmp
pop
and
cwtl
fsts
sbb
or
popa
fbld
and
mov
push
call
clc
add
xchg
mov
lret
in
xchg
and
mov
mov
sub
cs
sub
stc
xor
outsl
test
lea
icebp
jmp
dec
lock
idiv
sbb
push
jmp
push
cwtl
push
addr16
pop
sbb
cs
inc
insl
and
jnp
lret
mov
xchg
mov
push
mov
pop
scas
mov
loopne
lcall
bsr
into
sub
iret
jg
mov
loopne
pusha
or
addr16
inc
sbb
stos
out
shll
inc
in
dec
sbb
test
or
or
dec
cmp
test
sbb
mov
dec
inc
jns
add
push
loopne
sbb
inc
and
fisttps
call
fs
jecxz
test
jecxz
out
xchg
jg
fistl
aam
cmc
aad
test
xchg
cmp
addr16
adc
std
adc
call
fmul
and
clc
pop
mov
cwtl
cli
ds
jmp
adc
lock
loopne
not
sahf
push
push
xadd
pop
notl
pop
aad
aaa
xchg
inc
jmp
push
ret
or
and
jno
pop
pop
js
sbb
into
gs
shrl
shrl
xor
daa
adc
inc
aas
push
mov
push
push
inc
sbb
lock
inc
popa
or
clc
cmp
insl
test
stc
xchg
loope
push
add
cmc
test
mov
addr16
shr
cmp
push
mov
stos
imul
lahf
orl
subl
add
dec
push
adc
push
aaa
inc
test
jle
xchg
sahf
sub
call
pop
and
or
push
icebp
cmpsl
ret
test
pushf
pushf
jp
fs
testl
sbb
cli
into
fwait
sub
popa
je,pt
out
gs
pushf
test
xchg
andl
loopne
out
mov
stos
jne
loopne
dec
hlt
sub
add
in
xor
add
jae
jle
cmp
push
push
shrb
js
sub
ret
mov
call
js
push
mov
and
mov
jbe
test
cmp
shr
repnz
call
out
sbb
mov
into
jo
dec
sub
push
loop
adc
push
loopne
testb
aas
or
or
push
fimuls
xchg
sub
loope
dec
xor
sub
call
fldl
ljmp
ret
push
or
push
pop
in
adc
ret
pop
jle
pop
pusha
xor
shl
pop
mov
adc
mov
push
dec
shll
xchg
adc
fists
add
clc
sbbb
mov
andl
shrb
fmull
ds
pusha
cmp
pusha
clc
sti
cmp
cmp
and
mov
orb
popf
inc
push
stc
push
pop
inc
cmpsl
cmp
xor
cmp
dec
mov
lea
mov
rol
lret
jge
mov
shlb
dec
push
push
lcall
imul
sub
jg
ljmp
or
pop
inc
jmp
sub
adc
dec
insl
push
sbb
stc
movsb
xchg
sti
mov
ds
fcmovbe
fadds
add
rcrl
mov
pop
jmp
add
aas
data16
outsl
xchg
dec
into
dec
shlb
out
out
stc
rcrl
push
sub
imul
out
imul
or
loop
mov
cld
movsl
lds
lret
int
and
ljmp
out
out
push
xchg
mov
jmp
cli
add
sbb
fstl
fsubrp
sub
ret
out
pop
xorl
out
adc
or
leave
push
add
test
fsubrs
orl
call
insb
test
daa
sbb
and
fistpll
pop
clc
sbb
or
add
mov
inc
je
mov
rclb
loope
roll
push
xor
and
sub
cmpsb
mov
and
xchg
and
sbb
inc
int3
loop
xchg
repz
dec
dec
fists
jge
add
xlat
push
jecxz,pt
lea
cmp
mov
pusha
popa
stos
addr16
aam
xchg
or
cmpb
and
es
shr
aad
mov
xlat
leave
lcall
inc
lahf
imul
sarb
mov
xchg
push
mov
sahf
xor
sub
adc
sub
je
cmp
sub
pop
cld
lcall
xlat
pop
movl
loope
ss
mov
lcall
mov
cmc
push
mov
loope
cmpsb
loop
out
jae
dec
mov
xchg
lock
cmc
push
movsl
add
adc
scas
cltd
test
mov
iret
xor
outsb
or
mov
subl
call
seto
setge
mov
fisttpl
jge
pop
inc
lock
shl
loopne
insb
mov
cmp
and
test
cmp
in
mov
jmp
ja
pop
add
jno
ljmp
std
add
add
or
push
mov
sbb
js
jo
sbb
mov
mov
jmp
add
xor
lret
jmp
add
rep
pushf
ljmp
add
mov
pop
sbb
xor
and
or
mov
mov
cs
mov
cwtl
popa
sti
loope
jbe
cltd
sarb
adc
and
pusha
jge
add
jb
in
cmp
lret
hlt
incl
ds
cwtl
dec
sahf
push
push
and
push
lret
cmp
lds
push
subb
test
adc
jmp
pop
cmp
fists
cli
movb
and
xor
mov
mov
test
or
leave
inc
mov
int
add
mov
call
adcb
or
pop
je
inc
mov
mov
mov
or
call
xor
test
sbb
ret
add
mov
sub
cmp
mov
inc
push
add
lret
sbb
adc
xor
push
add
ret
push
add
div
notb
xchg
sbb
pop
mov
sbb
mov
enter
add
cmp
push
sbb
aad
sbb
xchg
loopne
sub
aas
and
xchg
xchg
pusha
mov
lds
fmuls
mov
inc
scas
arpl
adc
enter
push
sub
dec
xlat
aam
inc
fcompl
int
add
decl
nop
dec
ljmp
rcl
shl
mov
stc
add
xorl
push
jle
or
pop
mov
add
lcall
movsl
ss
int3
pop
xchg
call
jg
dec
lret
jg
fidivs
inc
mov
jle
mov
lret
mov
fwait
sub
in
shl
dec
out
popf
xlat
inc
hlt
repz
jnp
decl
mov
shlb
scas
mov
and
decl
hlt
push
mov
insb
pop
push
mov
fistpl
aad
in
ret
fists
fnstsw
sub
mov
pop
mov
xor
call
adc
sub
or
and
lret
shlb
ja
sbb
sbb
test
stc
adc
xor
sbb
jmp
inc
imul
sbb
jo
icebp
mov
add
mov
fucomp
int3
clc
aas
lret
ljmp
repnz
rcl
popa
shrb
clc
outsl
cmp
icebp
and
jnp
xchg
xchg
mov
incl
mov
adc
lods
mov
aas
dec
lret
xor
pusha
inc
stc
jmp
xlat
popf
add
cmp
ljmp
push
lds
shll
pause
loopne
clc
adc
sbb
and
pushf
addb
lock
push
adc
jbe
dec
rclb
jmp
inc
add
ljmp
push
mov
mov
xchg
mov
sub
cmp
aad
cmp
cmp
call
mov
rorl
xlat
neg
mov
neg
jne
sbb
filds
mov
fisttpll
xchg
shr
aas
test
add
insl
adc
cwtl
jne
mov
add
mov
shl
scas
xor
filds
inc
xchg
leave
adc
loope
mov
imul
jmp
in
sbb
std
lcall
sbb
sbb
lods
cmp
dec
jmp
mov
sub
cmp
fisttps
popa
inc
je
ret
add
jle
lds
loopne
imul
add
push
pushf
jb
xchg
js
insl
push
xchg
shlb
add
test
xchg
push
pop
jecxz
or
add
pop
repnz
xchg
loopne
ja
xchg
adc
cmp
orb
mov
jg
or
cmp
inc
jmp
sub
jg
and
cmp
test
push
mov
das
icebp
outsl
hlt
sub
push
add
push
iret
mov
in
aam
inc
in
dec
cmp
fcomp
enter
icebp
push
hlt
dec
scas
sbb
jl
cli
mov
ljmp
mov
mov
or
xchg
mov
sbb
lods
lret
shl
cmc
dec
insb
stos
dec
int3
jb
lock
xchg
add
scas
inc
jmp
push
push
or
js
cwtl
dec
icebp
loope
push
mov
mov
not
std
loop
test
sbb
add
pusha
jb
and
aas
cld
mov
jmp
xor
roll
rcll
jl
incb
push
xor
pusha
enter
lods
pusha
pop
push
fildll
enter
notl
pop
sub
fcompl
mov
mov
cmp
pop
add
jbe
mov
inc
pop
add
leave
rcrl
insl
mov
cmpsb
cwtl
mov
push
dec
add
shr
mov
or
repz
mov
push
pusha
push
ffreep
adc
xor
pusha
not
push
rol
stc
cmp
and
xor
call
xchg
mov
pop
test
mov
add
test
outsl
clc
addb
mov
aaa
cmc
out
dec
mov
jmp
in
adc
push
mov
call
test
cmpsb
or
add
or
adc
mov
call
pop
push
pusha
lret
pop
push
shr
push
jge
int
into
int3
push
mov
sbb
loopne
xchg
sbb
cmpl
push
cmp
je
aaa
adc
xchg
add
sbb
xchg
loopne
mul
add
mov
int
fwait
push
add
xchg
inc
mov
dec
push
cmpsl
push
xchg
jle
mov
loope
adc
notl
ss
pop
xlat
shr
push
aad
sub
cs
in
sbb
jmp
mov
leave
push
imul
sub
rcrb
sbb
daa
cmp
inc
cmp
jmp
sub
and
push
xchg
pop
push
mov
inc
inc
cmp
inc
pushf
adc
mov
sbb
mov
es
adc
dec
addb
sub
push
aas
mov
cltd
les
addr16
add
push
or
add
fmuls
mov
addr16
adc
ja
mov
cmp
mov
xor
or
call
mov
shrl
dec
jg
dec
sbb
mov
out
adc
lock
push
cmp
lea
sub
sub
fsubrs
pop
xchg
outsb
inc
or
decb
imull
mov
jae
fimuls
sub
into
jmp
cmpsb
jbe
dec
push
and
rcrl
push
lea
fadds
pop
andnps
push
adc
push
in
xorl
xor
and
syscall
push
je
mov
daa
add
test
scas
push
mov
cmp
add
push
loopne
lods
aaa
jl
jmp
xor
cltd
repz
aam
incl
sbb
int
outsl
or
mov
cmp
xor
cmp
sub
stc
fstpt
push
insl
loope
imul
loope
test
outsl
mov
dec
mov
fcoml
inc
outsl
pop
aad
cmpsb
cld
adc
sub
lock
push
mov
sub
xor
jg
sub
mov
push
adc
push
mov
xor
push
scas
and
push
pop
jg
mov
adc
jmp
sti
dec
lods
aaa
nop
hlt
jle
fdivs
sub
fnstcw
notb
stos
adc
das
hlt
mov
xor
sti
test
dec
in
fcompl
xchg
mov
pop
pop
std
or
and
insl
cmp
out
lcall
cmp
push
cmp
xor
mov
jg
in
jecxz
sbb
lcall
loopne
mov
fwait
repnz
lret
cs
pop
ss
jne
mov
add
inc
ret
mov
test
out
push
sub
push
pextrw
mov
pop
push
call
mov
cmp
arpl
xchg
and
stc
loopne
push
clc
lea
add
insb
add
pop
ret
pop
mov
push
adc
in
inc
fadd
in
out
test
mov
push
call
mov
mov
jle
and
cmp
rorl
and
in
mov
adcl
pusha
pushf
pop
gs
push
lea
fwait
stos
mov
cmp
ljmp
mov
pop
dec
xor
scas
inc
adc
mov
test
jg
lds
adc
lahf
jbe
add
mov
mov
or
popf
out
mov
mov
call
sbb
and
pop
ss
push
int3
jns,pn
push
push
inc
ret
and
adc
pusha
ret
rorl
push
mov
add
mov
dec
cmpsl
add
push
loopne
aas
popf
xor
sub
mov
scas
add
mov
pushf
push
xor
fsts
or
add
and
inc
lock
out
xlat
mov
jo
cmp
mov
push
xor
push
and
xor
div
adc
adc
mov
sbb
xor
pop
cwtl
repz
jb
decl
cmc
pop
push
orb
push
bound
out
and
cmp
stc
pop
loop
xchg
adc
cld
fldcw
dec
es
in
das
inc
xchg
add
cmp
sub
cmpsb
bound
jmp
cmp
or
nop
inc
or
faddl
inc
or
rclb
ja
rcrb
pop
les
sbb
pop
stos
pop
icebp
in
inc
xchg
and
mov
cmc
andb
xor
or
mov
or
add
adc
fyl2x
incb
or
pop
jno
mov
loop
jbe
sbb
pop
call
lods
or
in
mov
xor
inc
sub
test
or
mov
sbb
ljmp
add
clc
jl
mov
push
ds
jmp
rep
ss
in
rolb
push
nop
in
sub
xor
stc
test
addb
pop
cmpsl
pusha
xor
outsl
test
adcl
mov
sbb
xchg
aaa
sbb
inc
subl
pusha
and
repnz
adc
mov
movsl
adc
xor
mov
inc
cmp
sbb
es
pop
loope
mov
lods
cld
call
mov
test
ja
mov
push
sbb
mov
dec
ja
jmp
stos
call
lcall
clc
lock
outsb
aam
or
mov
pop
or
add
add
cmp
orl
fnsave
jo
mov
rolb
outsb
mov
nop
call
sub
adc
push
pop
push
cmp
add
shll
rcl
and
imul
adc
xchg
push
add
and
addr16
roll
or
out
dec
shrb
pop
mov
push
pop
pop
test
call
movsl
pop
andb
xor
adc
in
dec
cmc
sar
pop
mov
cmpsb
fstpl
mov
push
std
mov
dec
sub
inc
insl
out
ret
loopne
inc
mov
pop
xor
es
pop
mov
dec
mov
stos
add
add
adc
pop
add
mov
push
xor
cld
ja
xlat
dec
lock
shlb
nop
jb
jl
addl
push
pop
lahf
fwait
sub
call
nop
cmpl
sbb
mov
iret
jmp
jle
outsb
sbb
push
inc
xchg
dec
les
lret
out
mov
rolb
sub
and
lcall
stc
leave
loop
orl
mov
or
fld1
dec
sti
daa
dec
das
mov
jle
mov
inc
push
sub
sahf
sbb
outsl
add
arpl
pop
aam
pusha
adc
sbb
lahf
jb
sbb
sub
push
insl
sahf
mov
fs
cmc
andb
ljmp
mov
xchg
lcall
cmp
std
lods
jge
sub
mov
xorl
subb
ljmp
jne
xor
jne
cli
jbe
icebp
jae
scas
out
or
pop
mov
xchg
add
loopne
jns
jae
out
pop
shrb
jmp
ret
push
cmpb
jg
inc
push
add
lock
jge
xchg
rolb
mov
mov
stc
in
cmc
scas
icebp
or
stc
ficoms
orb
test
imul
pop
pushf
ret
mov
mov
push
sub
sbb
xor
or
push
sub
pushf
hlt
xor
data16
mov
aam
mov
jg
mov
loop
pop
jge
adc
add
js
inc
das
mov
fadds
mov
call
sub
leave
mul
fsts
or
or
movsb
ljmp
dec
scas
enter
addb
mov
or
aas
clc
inc
cmpsb
mov
loopne
rcrl
jo
xchg
jmp
mov
and
iret
inc
pusha
push
nop
mov
adcl
inc
je
add
push
punpcklbw
jmp
aad
int
sbb
sbb
xchg
loop
hlt
pushf
push
sbb
sub
sbbb
js
std
cmc
pusha
mov
pusha
repnz
cmp
dec
hlt
push
insb
cld
xor
jb
repnz
daa
add
or
ljmp
push
and
bound
aaa
and
movsl
aad
les
sbb
sub
aam
pop
mov
xchg
sbb
ficoml
xor
jb
sarb
pop
cld
in
inc
insl
or
push
xor
in
scas
loopne
pushl
stos
mov
cli
jle
iret
les
sahf
rclb
pop
stos
xor
mov
dec
sar
in
aaa
xchg
mov
negb
pop
lret
dec
mov
dec
mov
push
inc
pop
ljmp
popa
out
lods
ret
add
adc
jg
clc
test
push
rcrl
jno
in
jp
dec
roll
dec
sbb
mov
and
in
adc
roll
sbb
pusha
add
add
mov
push
and
adc
shr
inc
mov
in
jmp
xchg
notl
loopne
or
les
test
pop
scas
sub
outsb
push
aam
mov
or
push
pop
push
push
clc
mov
je
fs
scas
push
push
addb
pop
cmpl
push
adc
jp
popf
push
inc
lahf
mov
xchg
adc
clc
mov
mov
sbb
jle
pop
iret
xor
jmp
addb
xchg
mov
mov
xchg
push
daa
push
adc
push
adcb
sarl
push
sbb
pusha
lret
push
or
pop
inc
repnz
not
xlat
push
add
rcl
das
mov
sbb
pop
cmp
imul
push
stos
sbb
into
pusha
jae
gs
cli
out
cmp
adc
mov
cmpsb
mov
push
xchg
push
add
jle
sub
nop
stos
adc
repnz
and
std
jb
ret
xor
insl
add
jne
add
shl
sbb
jno
dec
sbb
pop
push
call
sub
rsm
push
jmp
lods
add
mov
push
out
or
rorb
pop
fisubrl
shll
lods
es
call
add
pop
jno
or
add
pop
and
inc
xor
mov
add
and
popf
pop
push
loope
jo
shlb
mov
js
sbb
mov
push
and
aad
lcall
minps
popf
add
adc
cmpsb
hlt
xchg
mov
shrl
lods
lock
mov
cmp
sti
adc
orl
iret
sbb
push
aam
push
push
cwtl
mov
test
sahf
or
mov
pop
mov
add
xor
add
test
adc
pusha
lods
aaa
rclb
inc
fisttpll
mov
aam
rorl
roll
sbb
push
div
cmp
test
stos
shl
movsl
icebp
mov
xchg
cltd
xor
inc
inc
subl
fsubrs
lret
shlb
xor
push
jmp
fadds
outsl
inc
adcl
sbb
jb
push
not
or
sub
fidivrl
shr
rcrl
sub
xchg
rcrl
movsl
aas
call
mov
mov
sti
fwait
jns
mov
pop
adc
cmp
pop
loopne
je
pushf
lods
inc
mov
cmpsb
aas
cmp
mov
rcl
out
loopne
cmc
adc
sbb
inc
mov
or
mov
dec
sarb
mov
icebp
mov
subb
push
mov
mov
adc
or
daa
ds
or
nop
push
pusha
sub
dec
pop
popa
call
test
push
mov
or
loopne
add
and
rorl
ja
nop
dec
lock
pop
jecxz
xchg
shrb
mov
push
mov
pop
das
jbe
or
push
movb
add
mov
adc
cmp
pop
loopne
lds
enter
test
jbe
repnz
cmc
add
aaa
add
sbb
jno
mov
pop
loop
jmp
adc
outsl
shrb
mov
into
pop
stos
or
jo
mov
push
and
scas
cmpsb
clc
test
test
out
pop
adc
xchg
in
aam
jo
jecxz
or
rcr
push
inc
cld
push
pusha
ret
xor
lcall
add
pusha
clc
mov
arpl
or
jno
aaa
mov
cld
cmp
pop
stos
cli
mov
mov
add
mov
push
loopne
mov
xchg
pusha
lcall
pusha
and
xlat
call
add
sub
test
and
cmp
xchg
push
test
sbbb
std
clc
add
fiadds
mov
adc
cmpsb
and
xchg
call
cli
pop
sti
pop
or
push
xor
inc
xchg
mov
sbb
add
mov
movsl
enter
push
mov
adc
pushf
setl
mov
xor
pop
inc
ret
add
inc
xlat
and
xchg
rcrl
pop
cmp
ret
lds
adc
mov
add
push
sbb
imul
push
inc
cmp
cmp
ret
test
fistl
scas
or
mov
mov
dec
stos
adc
jl
fimull
in
jbe
aam
imul
or
push
mov
shlb
iret
clc
into
or
adc
pop
jo
rolb
inc
xor
lods
dec
lds
xor
add
push
cmpsb
jmp
subb
cmp
jno
mov
lods
insl
daa
cmp
sarl
sub
mov
xchg
mov
aaa
in
or
roll
aas
ror
adc
ljmp
cwtl
pop
mov
add
cwtl
lahf
roll
out
adc
jmp
dec
aam
cmp
or
add
call
clc
pop
loopne
pop
lahf
add
jmp
or
mov
in
jmp
hlt
fisttps
sbb
add
fadds
or
mov
loopne
sarl
add
loopne
adc
dec
loop
pop
mov
fdivrp
pop
out
mov
test
ljmp
shlb
call
mov
in
mov
inc
inc
pop
mov
mov
daa
and
mov
adc
cmp
aaa
push
nop
push
cltd
adc
pusha
adc
xchg
cwtl
mov
mov
ret
loop
enter
loop
pop
cwtl
hlt
popa
jmp
icebp
sub
mov
push
and
mov
pop
push
aad
inc
std
loopne
mov
bound
je
roll
or
addr16
jp
addb
xchg
jmp
faddl
adc
xchg
outsb
mov
ret
adc
in
out
adc
mov
cmc
movsl
and
aas
fbstp
fs
inc
cwtl
andb
enter
xlat
dec
or
fildll
cwtl
jae
mov
mov
push
mov
cli
dec
in
xchg
aaa
add
mov
cmp
sti
add
mov
pop
mov
xor
lea
sbb
cmpsb
xorb
mov
insb
fucomi
mov
ds
add
nop
push
movsl
fadd
inc
shrb
or
jg
add
aad
xchg
cmp
repnz
les
loop
mov
push
pop
enter
loope
dec
jge
cltd
les
inc
ljmp
lods
xchg
pushf
sbbl
dec
jns
inc
stos
data16
stos
mov
clc
inc
out
inc
sbb
sbb
xor
push
negl
scas
jmp
xor
push
das
or
daa
inc
fcoms
std
jmp
or
mov
dec
sbb
jmp
push
and
fadds
mov
pushf
sahf
mov
dec
inc
leave
sub
test
mov
push
jmp
ret
movsb
ss
inc
imul
scas
std
lods
outsb
loopne
js
cmp
call
aas
add
insb
and
mov
das
xchg
push
les
and
in
pop
in
push
cmp
push
push
sub
out
or
stos
push
dec
add
inc
mov
xor
cli
call
sbb
and
or
xor
cmpsb
rcll
sbb
mov
fbstp
or
dec
add
xor
popa
add
push
in
call
xor
mov
mov
push
out
jmp
pushl
sbb
add
lahf
jmp
mov
arpl
fiaddl
aad
mov
push
fmul
mov
nop
test
jge
inc
call
test
mov
push
outsb
in
push
push
clc
negb
sahf
add
sbb
rclb
mov
sbb
stos
mov
and
inc
andl
daa
shll
push
outsb
sbb
js
mov
loope
add
in
push
mov
neg
jmp
mov
les
and
mov
mov
adc
sub
mov
xchg
push
stc
cmc
mov
adc
sbb
sbb
pop
mov
stos
dec
cmpsb
inc
fdivrs
pop
mov
in
cmp
sbbb
fldt
inc
jo
jo
cmpl
add
sub
addb
sti
jmp
and
pusha
or
dec
loopne
xchg
insb
leave
xor
dec
mov
jmp
sbb
mov
orl
push
sbb
adc
andl
test
ss
cli
or
push
cmpsl
movsb
in
loope
jnp
push
in
sub
lret
fldcw
sbb
rcrl
in
pop
sub
pop
adc
call
dec
pusha
test
mov
cmpb
mov
dec
mov
push
cmp
lock
pop
sub
pusha
push
int
shlb
add
ljmp
fimuls
stos
and
mov
pop
fnstsw
test
shr
shr
jmp
jmp
bound
int
pop
loopne
data16
popf
mov
sbb
fadds
int3
xchg
lods
clc
push
rorb
cmp
sbb
cwtl
pushf
cwtl
clc
sub
cmpsl
icebp
clc
shrl
sub
fistps
ror
and
add
inc
scas
out
pop
sbb
xchg
sbb
ret
mov
xor
mov
nop
pop
std
or
pop
sbb
sbb
cmp
add
fldenv
add
cmc
pop
cmp
add
rol
mov
popa
or
es
dec
test
xchg
mov
jl
and
movsb
scas
insb
pop
call
loop
add
or
push
std
ja
mov
lea
mov
in
outsb
or
pop
inc
out
add
sarl
sbbb
js
popf
mov
push
dec
clc
mov
cmp
jae
stos
loop
ja
sub
push
cmpsb
xchg
call
lds
lcall
stos
inc
mov
inc
push
xchg
clc
add
push
inc
insb
mov
sbb
pop
push
daa
adc
pop
ficomps
aaa
mov
shr
lea
sbb
scas
push
rcr
fsubs
adc
cmp
adc
aad
add
add
inc
std
enter
xchg
push
call
mov
push
stos
or
sub
sub
in
into
inc
lods
mov
clc
clc
jmp
sbb
adc
xlat
sub
add
ss
jnp
dec
sbb
mov
or
pop
inc
add
mov
shll
stos
shll
lea
lods
into
out
push
aaa
add
stos
sti
scas
test
call
or
push
fildll
cltd
cld
jp
subl
mov
xchg
xor
cwtl
xor
mov
xor
das
pop
add
jmp
mov
push
lods
add
clc
and
jb
ud1
adc
mov
jp
fisttpll
lds
and
adc
mov
push
mov
shll
ljmp
fstps
imul
loopne
call
call
xlat
mov
inc
xor
push
lods
into
xor
cld
push
inc
push
cmp
sub
pushf
add
pop
mov
xor
loope
shrl
cld
stos
ss
call
incb
mov
stc
jmp
pop
adc
push
jmp
or
into
call
push
sub
outsb
in
xor
push
jbe
or
jmp
sub
and
cli
jne
xchg
mov
sub
mov
push
jb
fistpl
in
push
into
lret
pop
xor
cwtl
outsb
sbb
jbe
sahf
test
add
xor
jmp
mov
push
mov
adcb
jg
bound
orl
mov
mov
sub
adc
pop
xor
mov
cmp
push
add
scas
fwait
pop
into
shll
dec
std
inc
mull
cwtd
sar
rcr
xchg
loop
sub
jmp
incl
ljmp
ljmp
add
ffreep
test
xchg
iret
rorl
and
inc
pushf
mov
clc
cltd
adc
pop
xchg
mull
jge
sbb
jmp
call
dec
dec
jno
aas
aam
pop
lds
in
cs
mov
test
ljmp
incl
lock
inc
push
add
ss
adc
lods
mov
and
mov
jmp
sbb
inc
adc
insl
hlt
pushl
ret
mov
push
dec
ret
int
cmp
iret
mov
or
xchg
xor
fsubrl
dec
dec
fisttpl
and
pop
pop
into
adc
sub
cltd
std
push
push
xchg
test
nop
adc
addl
jbe
mov
stos
mov
or
jg
mov
sub
push
inc
lods
sbb
inc
mov
pusha
inc
in
call
xorb
ja
and
sub
insl
jmp
pop
hlt
jg
pop
nop
jge
inc
cld
pushl
in
clc
dec
dec
cmp
lret
ljmp
cltd
push
inc
test
aaa
sub
adc
jnp
xor
and
fstpt
push
jge
lret
push
insl
cmp
rorl
xchg
ret
inc
in
rol
cmp
lcall
adc
or
rcl
jg
or
aaa
clc
in
or
mov
aam
pop
push
mov
push
fcoms
lea
or
fistl
je
adc
incl
mov
enter
push
loope
dec
pop
clc
pop
insl
test
push
mov
ret
mov
cmp
ret
push
sti
mov
pop
push
mov
das
fcompl
jg
rorb
cmp
pop
push
lret
insl
out
and
test
cltd
std
xchg
sar
out
adc
outsb
add
or
inc
mov
arpl
ss
leave
js
inc
lds
dec
sbb
dec
js
jg
mov
ret
jae
pop
dec
ror
frstor
popa
popa
insl
xchg
pop
sub
inc
testl
jge
insl
call
inc
fsubrl
aam
sub
push
or
movl
mov
das
cmc
ja
adc
mov
sub
out
or
in
inc
mov
insl
dec
pop
mov
bound
ror
neg
cs
jl
pop
dec
std
and
daa
jo
test
pop
mov
xchg
jne
add
enter
movsb
filds
push
ret
loop
adc
test
std
xchg
add
jns
out
lcall
mov
cmp
sub
xor
adc
xchg
xchg
push
ret
insl
test
add
xor
into
or
pop
insb
jno
lahf
mov
sub
jns
loope
ret
mov
xchg
pop
insl
out
sub
jmp
push
int
loope
adc
les
shll
les
xchg
call
and
incl
mov
ret
jp
repnz
iret
jg
and
lcall
mov
and
dec
pop
lods
pop
jge
icebp
pop
inc
fdiv
dec
dec
inc
mov
pop
push
int
xlat
dec
add
lea
and
loopne
lock
add
mov
mov
lcall
pop
arpl
sub
jl
xlat
dec
ljmp
outsl
xchg
gs
mov
ret
jns
jno
rol
adc
jg
fldcw
push
and
fistps
xchg
mov
dec
sub
aam
push
loopne
es
fwait
popf
cwtl
xchg
jg
std
xchg
fdivrp
add
fnsave
cld
jae
mov
cwtl
fdivr
mov
outsl
sbb
dec
ja
mov
jecxz
shll
fwait
shl
andb
incl
hlt
or
push
sub
xor
repnz
dec
and
sbb
testl
lcall
test
outsl
sub
jp
dec
jae
xor
mov
mov
add
jge
mov
jns
jmp
test
inc
jno
fcompl
imul
push
popa
mov
out
sub
pushl
mov
ljmp
mov
testb
mov
out
mov
push
in
hlt
out
push
mov
push
cmp
pusha
sti
cmp
ljmp
xor
push
and
sub
push
sbb
neg
mov
test
std
mov
repz
push
stc
push
jnp
out
or
sbb
clc
cmp
fsts
jg
jg
inc
inc
add
cmc
mov
mov
cmc
mov
fidivs
scas
cmp
sbbl
in
bswap
pop
loop
fwait
imul
xchg
insl
adcb
lds
jmp
jb
jns
fisubl
popf
add
decl
pop
incl
jecxz
cmp
push
mov
stos
cmp
outsl
xchg
call
push
xchg
mov
mov
aas
repnz
insl
fcmovne
jo
fidivl
push
mov
cs
clc
pop
shll
lret
sub
fcompl
push
jg
movsl
outsb
jno
inc
dec
mov
or
xor
decl
cmp
add
or
add
cmp
outsl
je
sub
sbb
loop
fwait
outsl
test
rcll
adcl
adcb
cvtps2pi
lret
jg
jp
or
or
or
inc
js
sbb
out
xchg
inc
and
mov
push
sub
jnp
xchg
mov
or
shrl
jg
mov
lea
arpl
rcr
sub
mov
pop
stc
cli
sarb
xor
dec
xor
lret
push
clc
repz
fcomps
ret
sub
pop
arpl
inc
push
rclb
push
push
pop
repz
lcall
std
push
je
loop
jle
push
pop
sbb
mov
fwait
addr16
push
outsl
test
addr16
jg
sbb
das
lods
int
jne
mov
sub
int
mov
incl
push
cld
inc
jge
mov
ds
pop
lds
int
decl
jmp
rorb
fcoms
cmp
push
mov
std
pop
xchg
push
les
mov
dec
lds
mov
cmp
or
out
pop
std
es
fistpl
mov
cmp
or
push
inc
jb
or
das
push
cmc
scas
stos
sub
sbb
rol
scas
pop
cld
adc
push
hlt
cmp
decl
in
jl
in
mov
popa
test
xchg
data16
add
lock
adc
push
lret
jp
lds
jbe
clc
cmp
inc
jb
or
jmp
and
lds
stc
fists
jl
sbb
xchg
sub
andb
movsb
call
bound
pop
inc
push
mov
mov
test
call
mov
clc
fcmovb
in
mov
xchg
stc
fistpll
decb
repnz
not
add
or
jg
inc
inc
pop
lret
add
cvtps2pd
jp
int
scas
pusha
mov
cltd
hlt
decl
xor
dec
inc
sub
insb
ja
aas
jg
inc
loop
mov
mov
in
cmp
addr16
inc
nop
jg
gs
mov
imul
or
push
decb
cmp
push
mov
mov
pop
lret
dec
lcall
scas
xchg
mov
mov
dec
mov
mov
loope
outsl
xchg
arpl
sbb
cli
fcmovbe
mov
scas
mov
fistpl
aas
mov
lock
lds
mov
inc
jmp
or
mov
pop
dec
xor
lcall
into
aad
pop
or
fistpll
pop
jp
cltd
add
pop
dec
scas
cmp
cs
pop
mov
test
cli
jl
gs
dec
loop
lcall
cmp
inc
sbbl
cmp
mov
iret
lea
and
notb
cmp
mov
lds
push
cli
movsl
mov
hlt
inc
jle
js
pop
mov
cld
jg
decl
cli
daa
mov
xchg
mov
mov
xor
mov
sbb
pop
mov
pusha
fcompl
mov
lods
sbb
mov
cltd
push
xor
mov
and
jle
and
sbb
dec
popa
push
dec
sbb
bound
int3
push
pop
lret
mov
push
push
mov
scas
jg,pt
test
je
jmp
jo
mov
mov
fwait
push
test
insb
insl
mov
jg
sbb
jge
mov
loope
xorl
imul
cmp
aaa
mov
je
jg
loop
stos
lds
pop
adc
push
cmp
dec
mov
xor
xchg
mov
fs
xchg
sub
fdivs
daa
imul
lds
jecxz
repnz
mov
cld
out
sbb
sbb
idivl
adc
push
dec
inc
or
test
push
lcall
inc
jp
adc
scas
das
rclb
pop
pop
pop
icebp
ljmp
loope
ja
cli
iret
push
mov
test
add
cltd
push
pop
and
lods
jle
push
outsb
mov
mov
leave
ja
dec
vmovd
subl
inc
sub
ret
cmp
jns
mov
jmp
mov
in
mov
push
sbb
jmp
mov
push
cmp
sti
mov
dec
mov
gs
addr16
push
in
mov
fsubl
or
shrb
adc
pop
push
or
push
imul
mov
inc
mov
out
mov
lret
stos
cwtl
cld
push
push
cmp
push
jp
out
push
push
outsb
scas
jae
cmp
cmp
fisttps
les
or
mov
das
mov
push
mov
lds
outsl
mov
stc
fists
push
fsub
adc
and
sub
and
push
mov
and
fcomps
cmc
mov
cmp
pop
mov
dec
pop
cli
lds
icebp
sub
and
pop
das
aaa
mov
mov
popa
imul
push
or
int
mov
movl
dec
les
push
inc
pushl
push
xor
lock
xor
and
mov
nop
xor
xor
xor
xor
push
xor
ljmp
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
shll
mov
aaa
mov
fidivs
jmp
cmp
incl
adc
xchg
cmp
cmp
cmp
cmp
cmp
aaa
clc
cmp
cmp
imul
out
cmp
cmp
cmp
loop
incl
cmp
cmp
ja
cwtl
cmp
and
fistps
cmp
cmp
cmp
sarb
rcrb
cmpl
sbb
aas
sbb
daa
aas
mov
and
and
adc
mov
xor
fdivs
fbstp
in
repnz
xor
movsl
xor
mov
aaa
lea
or
push
cmp
cmp
cmp
cmp
cmp
jmp
out
cmp
cmp
cmp
cmp
cmp
movsb
cmp
mov
fistpll
jmp
jg
incl
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
mov
cmp
sti
cmp
cltd
xchg
mov
ds
aas
inc
aas
dec
aas
pop
aas
jl
pop
mov
aas
xchg
aas
fwait
aas
test
lahf
sbb
push
xor
xor
xor
xor
xor
push
xor
xor
xor
and
inc
imul
mov
mov
or
xor
mov
inc
xor
xorl
xor
xor
xor
xor
jg
mov
xchg
movsb
ss
ret
ss
ss
ss
incl
aaa
movsl
aaa
mov
aaa
les
jecxz
pop
cmp
cmp
lock
cmp
cmp
cmp
cmp
cmp
dec
cmp
mov
test
cli
incl
sti
outsl
movsl
cmp
cmp
cmp
cmp
sub
pusha
movsb
fidivrs
adc
fidivrl
repnz
inc
imul
icebp
outsl
or
xor
fxch
xor
ljmp
icebp
pushl
or
push
xor
enter
testb
xor
xor
decl
ss
aaa
shll
add
cmp
xchg
mov
cmp
cmp
cld
ds
fildll
lods
je
or
adc
cmpsl
xor
jne
popa
or
mov
mov
inc
xor
outsl
xor
dec
ss
shll
sti
adc
sbb
sbb
leave
pop
cmp
in
sbb
dec
sub
fsubp
cmp
cmp
cmp
outsl
push
cmp
lea
cmp
cmp
cmp
fdivrl
sti
cmp
aas
push
aas
xchg
aas
xchg
stos
aas
mov
sarb
out
jg
mov
inc
fs
lea
xor
sar
pushl
call
xor
xor
xor
adcl
add
sub
aaa
inc
aaa
dec
int
insb
int
aaa
xchg
mov
cmp
clc
mov
xlat
and
sub
pop
cmp
cmp
sbb
cmp
xlat
jo
inc
xor
xor
xor
xor
xor
xchg
mov
clc
sbb
xor
test
and
or
loopne
xor
xor
xor
mov
iret
xor
xor
xor
dec
aaa
cmp
das
sub
fstpt
jno
mov
hlt
mov
stc
cmp
sarb
pop
mov
aas
jmp
cli
jae
push
adc
sbbb
leave
push
xor
arpl
imul
scas
mov
mov
mov
cmp
push
xchg
fstpt
les
sub
xor
xor
out
sbb
mov
decl
dec
xor
pop
xor
outsl
xor
jnp
mov
xor
xor
xor
xor
xor
xor
das
movsb
xor
icebp
pushl
push
xor
pop
xor
insb
xor
cwtl
xor
fidivs
cmp
fbstp
xor
aad
xor
xor
xor
cmp
jne
xor
cmp
xor
xor
xor
xor
cli
lcall
push
pop
or
and
inc
xor
mov
pop
jg
mull
mov
xor
imull
int
mov
mov
lock
mov
add
add
xor
and
and
insl
xor
inc
out
clc
xor
je
xorb
xor
in
xor
push
dec
xchg
mov
mov
or
dec
dec
jg
outsb
sti
or
push
sbb
sub
cmp
xor
and
add
jbe
mov
xor
fnstenv
ljmp
push
xor
xor
ss
cmp
aas
ds
push
fdivrp
sbb
aas
push
aas
or
cwtd
xor
push
into
xor
pop
xor
inc
aaa
mov
cmp
pop
mov
cmp
div
lcall
cmp
into
add
or
inc
add
movsl
cmp
add
cmp
movsl
xor
xor
icebp
dec
add
test
xchg
repz
cmp
add
cmp
cmp
mov
scas
inc
add
inc
push
jo
test
dec
and
aas
push
cmpl
int3
xor
xor
hlt
mov
cmp
mov
arpl
cmp
cmp
shl
insl
loop
aas
lds
out
pop
add
jg
cmp
xor
jl
mov
loop
call
xor
and
jle
mov
mov
cmp
les
fucomip
jg
cmp
cmp
test
cmp
ds
mov
push
jmp
test
mov
les
rcrb
arpl
ret
push
mov
xor
xor
jecxz
xor
xor
xor
xor
xor
adc
out
xor
adc
cmp
xorl
add
xchg
outsl
cmp
cmp
cmp
in
mov
cmp
cmp
mov
sarb
aas
ja
cmpb
mov
and
aad
push
leave
rcr
xor
xor
xchg
test
loop
arpl
mov
js
pop
aaa
pop
aaa
jle
and
dec
cmp
sub
cmp
cmp
jmp
cmp
cmp
cmp
cmp
cmp
cmp
dec
ds
ds
ds
pop
inc
cmpsb
and
nop
pop
dec
push
test
push
nop
scas
shrb
mov
sub
xorb
jmp
push
inc
dec
cmp
cmp
add
daa
insl
cmp
nop
ds
and
jge
mov
dec
and
mov
sub
ljmp
xchg
test
loopne
fdivr
popa
mov
fiadds
hlt
ja
fdivrp
pop
jle
mov
xchg
adc
ds
and
mov
je
test
cmp
mov
cld
fdivs
adc
inc
mov
testl
mov
add
subl
rolb
pusha
std
and
add
shrb
mov
nop
mov
iret
add
inc
and
sub
mov
mov
fadds
push
nop
xor
mov
inc
push
aaa
ljmp
sti
mov
or
fildl
or
sarb
jae
arpl
rorb
add
daa
jbe
jo
pusha
pop
ja
push
stos
lahf
adc
push
or
adc
add
nop
add
orb
ja
xchg
daa
leave
and
dec
loopne
aas
stos
nop
pop
incb
xor
loope
mov
out
add
mov
insb
jg
sbb
adc
subl
inc
gs
xor
addr16
ljmp
dec
idiv
incl
sahf
push
sbb
pop
jmp
dec
xchg
outsb
stos
pop
imul
push
cmp
pop
leave
xchg
or
ljmp
hlt
test
xchg
sbb
mov
push
or
ret
add
and
adc
add
pop
incl
jmp
add
not
je
int3
push
loope
pop
stos
aam
xorb
dec
sar
xchg
cli
imul
mov
fs
pop
bound
push
pop
mov
inc
outsb
mov
cmp
mov
push
movntq
aas
insl
jns
jle
lcall
push
test
xor
idiv
decl
ss
shlb
sti
xchg
sbb
stos
push
in
adc
cmp
aaa
mov
push
je
test
into
nop
je
sub
cltd
movsb
and
pop
dec
jmp
xlat
iret
iret
fimull
testb
in
icebp
icebp
pop
push
mov
xor
test
pushl
adc
pop
aas
xchg
sahf
and
add
popa
pop
mov
xor
pop
loop
pop
mov
and
mov
ja
fs
arpl
xor
inc
movsb
stos
jmp
movsl
or
cmc
cmp
mov
jns
push
out
addb
loop
sbb
pop
adc
push
mov
out
stos
and
mov
hlt
lods
nop
dec
inc
adc
decl
add
and
dec
aas
jb
aad
cmp
loop
push
lds
decl
inc
lea
and
enter
xor
pusha
loopne
dec
and
and
inc
cmp
push
lods
inc
shrb
test
inc
jmp
jo
sub
test
jge
iret
pop
arpl
daa
mov
dec
mov
inc
jp
and
lds
fists
or
fldenv
cmp
mov
decl
repz
dec
push
test
adc
faddl
scas
mov
mov
arpl
mov
adc
dec
sbb
ret
enter
decl
xorl
mov
xor
repnz
dec
addb
mov
mov
cmpsb
popf
and
mov
cmc
data16
pop
clc
cmp
jnp
aam
lret
sbb
aaa
mov
ja
loop
dec
data16
jg
call
fstpt
cwtl
push
insb
mov
movsl
pop
xchg
arpl
mov
in
lea
pop
lcall
lea
fidivs
addl
cmp
incl
leave
jb
loopne
in
sbb
jp
sub
sahf
and
sbb
pop
jmp
cli
cmc
mov
shll
add
push
sbb
sub
mov
lods
cmpsl
dec
sbb
rorb
adcl
push
mov
pusha
lcall
pop
je
inc
and
push
mov
xchg
adc
ja
in
decl
test
bound
xchg
sbb
or
rolb
push
jge
lods
or
cwtl
les
sbb
ljmp
and
jmp
and
push
mov
xor
in
mov
cwtl
mov
dec
popa
mov
decl
fbld
pop
mov
xor
jo
mov
incl
or
bound
arpl
pusha
repnz
test
push
call
lods
adc
sarl
inc
cmp
sbb
fimuls
repz
push
jno
xchg
and
dec
cwtl
addr16
fwait
mov
jno
sbb
mov
lea
mov
incl
mov
imul
adc
or
fs
fiaddl
scas
inc
popf
mov
mov
arpl
decl
incl
ljmp
dec
shlb
push
sub
lock
mov
pop
ds
call
insl
bound
sahf
popa
and
xlat
xor
adc
push
daa
les
jg
scas
cltd
aaa
movsb
loopne
aam
stc
nop
jo
scas
test
mov
cmp
outsl
cld
add
sub
rcrl
cmpsb
clc
add
lcall
rcl
push
fisubrs
shll
gs
mov
movsb
jl
push
jne
mov
mov
pop
mov
add
lcall
dec
xor
adc
repz
jnp
lret
or
push
decl
cld
lea
cmc
ja
mov
inc
lds
jo
leave
lea
stc
mov
inc
jne
jns
and
addr16
popa
xchg
pushl
cwtl
pusha
sbb
aam
add
lds
divb
sti
adc
jg
ret
cmp
decl
addr16
inc
or
push
pop
pop
inc
mov
cmpsb
cwtl
or
andl
xchg
out
lcall
addr16
lds
pop
je
mov
fildl
test
mov
cmp
or
add
adc
aam
fwait
sbb
lcall
call
orl
and
xchg
xchg
mov
call
mov
outsl
std
ljmp
test
jp
cmp
adc
mov
popf
ds
and
movl
and
sbb
in
daa
in
scas
or
pop
std
push
andb
add
push
jecxz
fwait
mov
lcall
dec
fadd
mov
insb
das
icebp
out
pop
cltd
repnz
inc
adc
cmp
clc
icebp
add
mov
adc
inc
add
fdivl
mov
cltd
and
and
mov
hlt
in
iret
test
daa
mov
jne
dec
ud0
ljmp
and
inc
stos
scas
mov
ljmp
lds
xchg
lret
movsb
clc
sbb
push
cltd
sarl
scas
pushf
xchg
push
das
test
cmp
sub
mov
or
mov
sbb
pop
or
andl
sub
mov
test
sub
decl
out
dec
push
sub
lds
repnz
pop
sub
test
in
dec
pop
cmp
pop
sbb
mov
mov
dec
stos
bound
call
rcrl
cmp
jo
cmp
aad
imul
push
dec
xor
xchg
decl
imul
lds
mov
in
cmpsb
fadds
loope
inc
jecxz
xorb
stos
sbb
sbb
push
mov
push
pop
pushf
inc
xor
mov
fnstenv
adc
jmp
sti
sub
cld
ret
sub
mov
roll
scas
mov
repnz
jae
incl
movsb
adc
fsubrs
cs
fimuls
call
jle
or
lea
mov
jbe
mov
inc
sbb
fisttps
loop
add
mov
rol
mov
incl
into
dec
outsb
and
in
ds
mov
fcoml
push
mov
sbb
fucomip
jno
adcl
adc
in
pop
clc
jmp
jge
and
les
mov
jbe
pop
aam
fwait
cmp
mov
shrl
int3
jb,pt
out
mov
test
js
popa
call
and
pop
xor
les
and
ds
mov
add
movd
jne
push
hlt
rcll
fucomip
jl
into
dec
cmpsl
ljmp
cmp
cli
lock
loope
and
jg
iret
int
ror
enter
cmpsl
xor
xlat
sub
loop
sbb
jg
jmp
inc
jecxz
sub
sbb
bound
pusha
and
push
xor
sub
ja
ljmp
clc
mov
mov
jmp
dec
push
pop
cwtl
sbb
xor
jg
ljmp
std
inc
mov
mov
mov
icebp
xor
insl
jmp
push
mov
mov
leave
rcll
jg
lahf
dec
mov
dec
andl
jmp
data16
push
mov
pop
jecxz
sub
out
stos
inc
jecxz
call
lret
or
cld
jno
dec
out
xchg
pop
mov
mov
call
test
jae
leave
cmp
repnz
movsl
nop
pop
mov
dec
adc
mov
mov
jp
xchg
fdivr
call
mov
jb
pop
cmpsb
lock
pop
div
std
lcall
inc
in
nop
in
clc
pop
out
scas
scas
test
insl
dec
lcall
cmp
push
lea
cmovbe
sub
cmc
lea
aaa
clc
in
aas
sbb
out
lds
sti
mov
sarb
jmp
push
xor
lcall
pop
pushf
or
lea
out
xor
dec
aad
mov
cmpsb
pop
loopne
in
enter
ja
cmpsl
push
dec
dec
lods
je
push
sbb
or
and
xorb
test
mov
lret
dec
test
and
fs
jl
jecxz
sub
mov
das
cmc
mov
popf
adc
imul
test
cmp
mov
call
mov
lea
enter
xchg
and
pop
pop
fists
call
mov
imul
mov
cld
aam
mov
cmp
pushl
dec
inc
daa
xchg
mov
in
dec
fnstsw
xchg
pop
clc
into
int3
mov
xadd
out
pop
pusha
jnp
lcall
sbb
mov
popa
das
mov
lock
in
mov
and
stos
pop
imul
insb
pop
ffreep
test
add
sbb
push
or
jle
xlat
xchg
ss
ljmp
shll
jecxz
icebp
in
scas
cmp
mov
jmp
scas
dec
or
loopne
movsb
mov
dec
test
insl
mov
sub
stos
xor
lret
mov
ljmp
mov
xchg
scas
push
or
mov
mov
sti
jmp
call
jmp
or
data16
pop
nop
push
cli
add
xor
pop
dec
add
adc
inc
add
js
nop
cmp
loopne
mov
add
sbb
sub
imul
test
jg
mov
sub
xor
jp
jmp
ljmp
movsb
in
lock
mov
loope
cwtl
jno
subl
pushl
ficoms
les
mov
clc
dec
lahf
mov
lcall
es
test
xor
xchg
in
stos
dec
mov
incl
adc
cli
test
xor
repnz
dec
pop
arpl
push
mov
sbb
out
xchg
pop
mov
pop
stos
push
movsl
decb
jnp
or
xchg
fdivs
cmp
aaa
and
incb
mov
adc
mov
mov
bound
fisubrl
xchg
ret
inc
out
pop
mov
icebp
jg
pushl
loopne
hlt
cs
js
or
ljmp
loop
xchg
incb
lds
pop
inc
scas
sbb
cmpsb
sbb
les
fcos
call
aaa
in
adc
fisubrs
aad
pop
test
lahf
sub
pushl
hlt
push
push
or
mov
js
out
and
sub
fs
test
ja
scas
inc
pushf
push
jle
pop
out
add
sub
scas
dec
fildl
ljmp
cmc
mov
mov
ret
fiaddl
ds
ds
mov
push
test
mov
test
mov
outsl
into
out
test
notl
xchg
xor
incl
popf
sub
add
xchg
repnz
cmc
pop
rorb
mov
stos
sub
ds
pushl
fdivrp
stos
fwait
cwtl
push
mov
arpl
inc
std
mov
movsb
sub
in
adc
cli
cli
inc
sub
filds
push
xor
sub
je
xchg
int
pop
jb
das
lock
mov
or
push
inc
lret
jae
xor
pop
xchg
repz
cli
mov
sub
bound
dec
push
stc
pusha
push
jl
rcrl
push
sbb
hlt
pop
cli
je
out
popf
or
sbb
inc
lcall
dec
lea
das
cmp
call
stos
lds
lods
dec
lods
ret
shr
mov
std
pushl
xchg
xor
das
inc
pop
inc
add
cmp
mov
ja
or
mov
sub
pushl
cltd
mov
fs
out
mov
mov
cmp
faddl
cli
mov
adc
sar
incl
dec
enter
jns
push
push
inc
jg
lcall
mov
mov
mov
movsb
mov
xchg
or
dec
mov
push
cmp
call
xchg
mov
lods
mov
lahf
lcall
or
jmp
cmp
add
stos
imul
popa
jns
scas
add
lea
sbb
outsl
hlt
xor
mov
add
or
dec
jmp
jl
ljmp
xlat
ss
int
std
cld
out
nop
mov
je
or
std
push
and
roll
ds
popf
pop
scas
or
lea
mov
adc
jno
mov
rorb
jbe
push
aad
jbe
push
pop
push
movq
lea
pushl
lock
sti
je
cld
lret
push
dec
mov
dec
mov
imul
push
adc
addr16
clc
xchg
jo
pop
jnp
in
js
push
clc
cld
jecxz
daa
loop
ljmp
lock
sti
sbb
jns
jl
cmp
inc
inc
aam
das
mov
xor
jns
inc
lahf
ds
ja
lcall
add
pop
jb
movsb
lods
test
jbe
ret
mov
cld
jg
inc
push
jecxz
xchg
cmp
sbb
adc
sub
decl
in
inc
inc
mov
std
int
inc
pop
sub
gs
les
jg
fcmovbe
iret
dec
pop
fs
xor
popa
or
push
fldl
clc
xchg
mov
mov
fisttpl
jecxz
ds
sti
xchg
adc
jmp
lcall
add
fldt
lods
mov
popf
inc
mov
dec
std
outsl
and
jno
pop
mov
into
out
lret
push
mov
jg
adc
enter
push
roll
mov
test
pushf
mov
incl
mov
or
jo
cld
adc
je
out
aad
sahf
fbld
xchg
cwtl
decl
repnz
or
ljmp
sti
into
jne
insb
mov
sahf
fwait
dec
into
imul
test
mov
out
pusha
add
pop
mov
mov
leave
dec
sarl
and
sahf
push
sub
fists
fcoms
jns
std
push
adc
dec
jmp
mov
rorl
jl
decl
jmp
mov
fcmovu
dec
mov
call
cmpsl
psadbw
outsb
leave
or
ljmp
jmp
mov
jmp
inc
jne
fbld
add
outsb
mov
scas
call
xchg
aas
xchg
push
pop
add
enter
pmaxub
loop
sahf
test
loop
mov
inc
jle
cmpsb
pop
aas
loope
es
arpl
xor
push
or
and
ljmp
add
mov
mov
cmp
int
loope
cld
mov
jg
call
add
mov
call
aas
sbb
push
jmp
or
call
icebp
ficomps
cmpsb
jl
xchg
add
sti
jmp
sbb
hlt
dec
and
add
sbbb
pushl
cli
inc
push
nop
sbb
inc
adc
lds
scas
call
clc
ljmp
out
xchg
mov
ret
xchg
xor
aas
repnz
push
pop
outsb
lock
add
and
fidivrl
call
mov
cmp
icebp
sbb
xchg
cli
ficoml
jp
pop
call
hlt
mov
push
in
mov
insb
call
dec
mov
jecxz
es
xlat
movsb
sub
imul
or
push
negl
int3
test
lcall
inc
lods
fnstsw
mov
imul
xor
add
addl
push
pop
pop
pop
decl
inc
je
mov
movsl
cmc
nop
movsl
insb
mov
add
push
xor
add
mov
xchg
std
aaa
clc
cmp
dec
push
aaa
sbb
mov
xor
xor
add
lods
jg
fidivs
jge
aaa
shlb
cld
or
loopne
test
testb
pop
repnz
jno
cmovp
imul
std
push
int3
lods
adc
call
outsb
ds
int3
mov
inc
popf
aas
push
jne
mov
ret
inc
decl
mov
sbb
addr16
addr16
xor
sti
lcall
test
or
out
scas
stos
ret
dec
dec
push
fwait
inc
mov
subb
lahf
inc
lock
decl
xchg
adc
cmp
mov
lcall
ljmp
repnz
hlt
testl
jecxz
scas
lock
mov
cwtl
fsubrs
and
icebp
call
sub
cmp
fstpl
das
lock
aas
dec
mov
lret
shrb
leave
xchg
insl
ss
push
xchg
add
leave
push
inc
cs
xorl
cli
xchg
sub
mov
out
in
xchg
inc
push
inc
arpl
out
inc
ljmp
iret
test
add
inc
fisubrl
pushl
cmpsl
cwtl
mov
dec
sbb
scas
dec
sbb
stos
push
mov
mov
fcmovbe
rolb
in
mov
cmpsb
sub
sub
adc
repnz
cmpsb
xchg
push
lcall
fnstenv
mov
mov
es
cmp
pop
addr16
sbb
mov
dec
xor
daa
insb
dec
mov
dec
xor
mov
rorl
je
push
inc
fidivrs
mov
mov
mov
push
jl
inc
ss
leave
pushl
pop
lods
aam
stos
mov
aas
clc
ret
adc
and
mov
fs
pop
out
push
xor
incl
adc
and
cmpsl
dec
and
adc
into
test
fs
fistpl
sub
pop
lcall
push
push
inc
add
out
iret
sbb
mov
in
add
lret
cltd
fwait
push
mov
or
pop
mov
push
mov
push
jg
call
lods
sti
push
adc
push
aaa
cmp
and
sbb
aaa
mov
dec
push
xlat
mov
pushl
mov
fs
cs
xchg
div
mov
out
mov
and
imul
decl
sarb
inc
jno
push
mov
in
punpckhdq
jnp
shlb
push
push
mov
xchg
fdivr
xchg
cli
pushl
repnz
repnz
fwait
bound
sahf
cmp
mov
jnp
aaa
lea
jecxz
ja
aas
inc
pop
mov
xlat
movsl
pushl
fcmovu
nop
leave
clc
mov
divl
aaa
lock
out
xor
lcall
push
jo
xor
mov
jns
fdivrs
inc
sub
out
jae
jle
push
icebp
incl
ss
es
shl
int3
cwtl
in
in
and
inc
fucomp
mov
sub
pushl
mov
js
add
sti
shll
and
pop
imul
push
lcall
jp
inc
sahf
mov
sub
int
pop
dec
repnz
xor
lcall
std
call
stos
inc
mov
push
pop
pop
stos
hlt
dec
jne
lcall
hlt
bound
jns
repnz
xchg
aam
add
dec
dec
or
add
int
inc
dec
pop
push
push
lock
and
add
outsl
hlt
outsl
in
dec
pop
call
mov
leave
imull
ljmp
std
test
loop
int
orl
lock
jge
jnp
mov
decl
icebp
ret
push
in
inc
test
sbbl
add
sbb
lods
fdiv
cmpsb
subb
lds
mov
call
mov
insb
jbe
pcmpeqw
subl
pushl
and
sahf
xchg
test
aam
in
jae
bound
cli
push
je
jbe
jecxz
in
mov
call
jg
and
insb
pop
mov
loopne
xchg
or
jne
aas
dec
jmp
in
jbe
fmul
ja
sub
cmp
fs
jb
call
mov
mov
fnstcw
stos
jb
sub
push
mov
xor
stos
incl
subl
ret
pop
push
sbb
outsl
add
sbb
jg
mov
pop
std
jge
popa
jecxz
fs
dec
imul
mov
inc
or
add
lret
inc
add
sbb
mov
dec
and
cltd
fisubs
call
in
imul
aad
mov
xchg
push
fisttpl
sbb
add
outsl
call
push
jb
lret
mov
sub
shrl
inc
movsb
lea
jmp
mov
mov
mov
leave
loopne
inc
shlb
arpl
das
push
clc
fbld
jg
push
xchg
jmp
dec
sub
dec
popf
mov
jmp
push
xchg
insb
lea
int3
mov
loop
mov
push
js
lcall
decl
pop
ljmp
rcll
xchg
lods
test
cmp
sub
push
adc
adc
push
loope
ds
ja
xchg
xchg
stos
sbb
xor
inc
lods
scas
mov
das
jmp
bound
mov
insl
inc
cmp
inc
mov
mov
ja
mov
clc
decl
sub
fistl
stos
leave
int
loopne
call
fdivl
push
mov
clc
xchg
jbe
out
stos
in
pop
mov
shll
xchg
inc
pop
lcall
cmc
adc
mov
loop
mov
xchg
outsb
cmp
xchg
scas
xor
in
cmp
xor
ljmp
lea
push
jns
xchg
in
int
inc
xchg
outsb
sbb
out
ljmp
push
aam
cmp
outsl
outsl
cmpsb
adc
push
js
or
adc
pop
cmp
call
sub
push
xor
dec
enter
jecxz
jl
jge
or
dec
adc
sbb
jmp
adc
dec
add
mov
add
mov
mov
int
mov
arpl
ficompl
xor
sub
push
ljmp
wrmsr
xlat
scas
pop
pop
in
mov
pop
sarb
roll
cmp
lods
into
push
insl
inc
adc
mov
aas
data16
and
mov
call
cli
decl
jb
in
dec
cmp
add
movb
lods
ds
call
xor
psubd
xlat
imul
lret
xchg
stos
xchg
pop
das
cld
jmp
les
xchg
imul
test
filds
les
add
jns
pop
mov
stos
add
fs
in
pop
jmp
xchg
push
enter
or
stc
fwait
lcall
test
add
ljmp
lahf
mov
xor
mov
ljmp
sub
push
sub
xor
out
pushf
jae
cltd
pop
dec
hlt
loop
xchg
cmp
int
jmp
lcall
inc
jbe
pop
bsr
jecxz
adc
lcall
movsl
xor
outsb
cld
add
fstps
decl
pop
mov
pop
test
addr16
daa
call
decb
xor
jbe
pop
daa
pop
jne
sbb
cmp
cmp
insb
scas
mov
cli
push
adc
xor
add
jbe
icebp
movsl
sbb
jmp
jns
sub
jp
adc
sbbb
pop
loopne
lret
push
mov
xor
mov
cmp
rcrl
sbb
jmp
es
daa
lods
inc
jne
add
and
pop
push
into
add
mov
mov
jmp
push
jl
xchg
mov
icebp
lcall
or
add
loop
pop
shr
xor
les
insb
fiadds
mov
dec
lret
adc
mov
loopne
ja
shrl
addb
sahf
lods
xchg
dec
inc
scas
pop
ljmp
cmc
cwtl
inc
je
pop
add
iret
addr16
xlat
popa
mov
sti
jge
icebp
or
and
incl
iret
stos
sub
inc
push
adc
movsb
outsl
sbb
jbe
adc
sub
add
pop
xchg
idiv
clc
mov
ljmp
out
mov
mov
mov
xor
inc
fldl
cwtl
call
fwait
cld
cmpsb
pusha
aam
aas
add
adc
sbb
cwtl
xchg
into
adc
aaa
scas
pop
std
out
cli
fists
mov
mov
xchg
pop
pop
out
mov
pop
mov
jg
or
fcoml
imul
fs
jl
lahf
leave
icebp
outsl
sar
mov
bound
es
out
sbb
lahf
cmpsb
push
mov
lahf
aam
leave
mov
inc
aaa
mov
cmp
shlb
jl
or
out
roll
sub
jecxz
aaa
inc
mov
adc
cmpsb
dec
fwait
mov
outsl
pop
repz
decl
adc
and
stos
in
arpl
aam
inc
adc
sbb
dec
hlt
sbbb
cld
pop
clc
pop
mov
sbb
xor
adcb
xchg
dec
movl
cmp
and
and
aad
jg
adc
fs
mov
shll
or
cmp
out
pop
fisubl
xchg
mov
mov
jne
lret
push
das
cld
jg
iret
and
push
xchg
imul
outsl
push
xchg
dec
mov
ljmp
stos
call
mov
mov
cltd
mov
push
mov
clc
test
mov
and
shrl
lds
pop
adc
cmc
ret
test
adc
movsb
arpl
call
fstps
xchg
test
loop
xor
stc
jge
lcall
decl
sti
and
int
add
icebp
fcmovnb
clc
scas
sar
lock
push
xchg
cmp
push
js
inc
pushl
dec
mov
push
inc
and
pop
push
es
nop
add
jg
divb
sti
xor
xor
jecxz
ljmp
jg
fstps
sar
ret
cs
mov
inc
sub
sbb
jmp
fwait
push
lahf
add
sub
ffreep
and
ss
and
xchg
call
fwait
cmp
inc
mov
jle
jp
les
cwtl
mov
xor
add
cld
xor
enter
mov
xor
sbb
dec
and
push
ljmp
shrb
cmp
stos
xchg
rolb
clc
push
sbb
int3
jecxz
call
mov
or
mov
pop
mov
add
dec
repz
aad
decl
mov
cld
inc
stos
mov
arpl
das
cld
pop
cmpl
mov
jmp
call
neg
imul
std
sbb
push
test
sub
mov
aad
insl
jg
mov
sub
movsb
pop
shl
xchg
xchg
inc
arpl
sarb
in
sbb
roll
cmp
mov
mov
inc
jmp
ss
pop
mov
push
pop
dec
mov
xor
dec
pop
nop
hlt
ljmp
push
xor
adc
sbb
mov
xchg
sub
mov
jge
ljmp
bound
push
repz
or
rcrl
jecxz
mov
jmp
insb
cli
sub
stc
lcall
addb
mov
xchg
and
or
mov
movsb
add
jle
inc
or
push
sar
cmpsb
xor
lds
ds
push
clc
ljmp
add
mov
or
sbb
mov
call
xor
xor
or
sbb
decl
aam
mov
es
mov
dec
adc
in
stos
cmp
popa
push
cli
out
inc
sahf
fwait
imul
mov
or
xchg
mov
ds
xchg
clc
jg
dec
repnz
clc
push
and
andl
dec
in
dec
fidivrl
pushl
mov
or
gs
gs
call
aas
das
and
ljmp
jno
mul
leave
push
jg
lock
xchg
popf
pop
data16
mov
insb
add
inc
or
xchg
movhlps
std
ror
dec
les
and
add
pushf
inc
xchg
push
hlt
jmp
push
push
bound
pushf
hlt
xchg
in
scas
mov
fstp
ret
jg
ljmp
and
outsb
inc
xor
aad
mov
push
scas
incl
xchg
xlat
pmulhw
pop
cmpsl
lds
cmp
lret
xor
scas
incl
fistl
subb
enter
fldt
sbb
shr
and
sahf
inc
jg
jmp
pusha
dec
xchg
faddl
icebp
loop
jecxz
xlat
gs
push
loopne
add
sti
hlt
daa
add
jg
xor
fdivs
pop
ljmp
push
cmp
lcall
jecxz
dec
jno
xor
xor
in
push
aad
ret
lret
inc
aas
xor
incl
jmp
gs
jle
int
inc
jb
and
leave
adc
orl
mov
jb
push
out
daa
inc
in
pop
ljmp
or
xchg
ret
rcrb
fcomp
ret
mov
xchg
push
idivb
or
imul
or
pop
int3
mov
jbe
push
inc
les
sbb
inc
cmpsb
std
push
outsl
je
aad
add
fucomip
jg
jmp
xor
popa
jle
and
negl
std
mov
add
jbe
push
stos
adc
and
jo
inc
or
shl
rol
jmp
das
in
dec
sbb
or
cli
js
bound
dec
cmp
aaa
cli
call
mov
insl
and
xlat
test
jmp
out
test
sar
jmp
mov
loop
imull
clc
pop
inc
mov
sub
xor
jg
push
jmp
lahf
adc
outsb
sbb
fsts
ja
movsb
ljmp
cmc
jo
stos
scas
fildll
mov
aad
mov
ds
xor
test
mov
sub
aam
cld
pop
mov
ja
lcall
fdivl
push
shr
adc
cmpsl
push
mov
pop
jl
rorb
insb
inc
int3
mov
cmp
popf
xor
pop
push
dec
mov
outsb
jecxz
mov
int3
jp
rcr
xor
jle
lea
pushl
into
pop
xchg
sub
jns
stos
pushf
mov
mov
fildl
dec
push
call
cmp
test
bound
push
xchg
or
pusha
xor
jnp
mov
jmp
fadds
and
and
decl
xchg
ja
sub
add
adc
fs
mov
je
sub
and
or
adc
sahf
cmc
sub
xchg
popf
stos
fwait
mov
or
js
sbb
cmc
iret
iret
movsl
test
push
insl
pushf
nop
mov
lods
jp
lock
lcall
adc
pusha
xorb
inc
iret
or
cs
in
pop
test
lcall
cltd
and
dec
jl
or
jae
rclb
test
and
cmc
decl
test
insb
pop
xor
jno
and
out
sahf
and
data16
lds
cmpsl
in
insl
sbb
scas
add
out
sub
mov
shll
cmpsb
xchg
cmp
adc
call
pop
push
lods
scas
lcall
imul
decl
icebp
push
stos
cmp
cmp
push
push
movsb
inc
in
sahf
or
fmuls
xor
cmc
jg
sti
xchg
pop
roll
insb
lret
cli
mov
push
dec
into
pop
and
shlb
rol
pop
cwtl
push
das
lock
xchg
xchg
mov
incl
insb
insl
loope
movsl
das
mov
sahf
ficoms
lret
pop
mov
loop
movsl
icebp
dec
ret
lahf
popf
addl
inc
loop
insb
cmp
loop
les
inc
vunpckhps
daa
fimuls
xor
mov
fisttps
inc
outsl
in
in
repz
into
xorb
push
ljmp
call
clc
das
dec
out
scas
pushf
jp
cmp
or
or
fs
lcall
jge
add
push
dec
into
mov
inc
or
lcall
push
insb
mov
shrb
cmpsl
mov
jg
push
je
inc
lds
das
outsl
iret
movsb
adc
nop
cltd
push
push
jb
fnstsw
jg
mov
cld
testb
xor
ret
push
mov
mov
call
shl
les
sahf
mov
js
jp
xchg
mov
pop
push
sbb
xchg
mov
inc
orl
sbb
out
xchg
push
clc
dec
mov
jg
jg
cmp
mov
sahf
push
ret
and
push
arpl
test
decl
or
xchg
dec
lds
xchg
pop
inc
mov
insl
lea
rol
jmp
sti
scas
out
jbe
jmp
shrb
fbld
clc
mov
push
jg
mov
sub
mov
adc
sahf
decl
std
jmp
mov
dec
inc
add
pop
jno
sbb
and
cmp
lcall
adc
cmpsb
shlb
and
mov
jmp
mov
jg
xchg
adc
mov
in
cmp
ret
push
sbb
outsl
aaa
outsl
pop
clc
pushl
xor
cmp
jle
imul
push
mov
icebp
ljmp
test
daa
jns
fnsave
insb
mov
or
sbb
push
lret
push
int
push
lods
pop
mov
ljmp
out
pop
popf
out
adc
dec
cmpsb
stc
mov
and
bound
mov
mov
xor
mov
cmpsb
aaa
pop
push
ljmp
cmpl
stos
lock
repnz
mov
fmuls
xchg
imul
insl
and
mov
stos
cwtl
cmp
outsl
ja
or
jne
idivl
sbb
fidivrl
adc
jg
or
xor
icebp
pop
xor
sbb
pop
push
push
mov
in
jg
decl
or
mov
mov
stos
leave
jnp
nop
aaa
out
sarl
fiadds
mov
mov
scas
inc
adc
jns
mov
clc
call
adc
cld
mov
imul
out
sub
aam
bound
xor
rcrl
repz
jg
jmp
or
shlb
mov
pop
jmp
xorb
rcr
pop
in
leave
jbe
adc
negl
pop
mov
dec
cmp
sbb
loope
fdivrl
dec
add
iret
sub
cmp
mov
pop
lock
lock
xchg
xor
sbb
popf
add
ljmp
sbb
leave
jno
mov
popf
push
jle
pop
sbb
pop
mov
lock
jg
inc
adc
sbb
push
loope
jge
dec
test
mov
hlt
sbbb
nop
cmc
hlt
or
xchg
xchg
xchg
addr16
push
movsl
sub
mov
pop
clc
mov
jmp
cs
sub
out
dec
ljmp
mov
sub
push
aam
sbb
aad
incb
adc
ljmp
ljmp
fnstcw
lcall
cmc
mov
or
sar
add
mov
ficomps
mov
xor
imul
pushl
push
cmpsb
mov
pop
lock
sbb
pop
cmc
out
call
pop
aad
cwtl
mov
mov
sub
es
stc
fdivr
in
adc
imul
in
mov
clc
xchg
pop
in
icebp
dec
cli
ficoml
dec
cld
aam
inc
ficoml
adc
sahf
adc
pop
iret
ja
test
mov
cmp
movsl
and
jno
and
icebp
sub
repnz
sub
ljmp
and
push
fadds
xor
xchg
xor
jne
mov
mov
test
xlat
xchg
xchg
outsl
scas
inc
adc
sbb
xor
out
sub
or
inc
in
mov
mov
xor
mov
dec
push
mov
stos
inc
stos
mov
popa
cmpsb
sbbl
loop
jmp
xlat
popf
mov
cmc
out
cmp
xchg
push
mov
hlt
jg
decl
mov
outsb
lods
cltd
clc
sub
xchg
or
pushf
ss
insb
xchg
or
iret
lds
dec
mov
clc
fdivr
fisttps
loopne
mov
mov
and
aaa
hlt
xchg
clc
das
dec
daa
test
xchg
add
jl
xchg
mov
pop
call
je
jle
pop
add
arpl
mov
cmp
lea
sbb
mov
and
in
xor
fwait
test
dec
mov
push
incl
dec
mov
outsb
je
je
stos
mov
push
mov
cmp
sbb
mov
movsb
lcall
jge
sbb
aaa
out
lods
xchg
sub
add
rclb
scas
pop
adc
mov
repnz
dec
andb
mov
sbb
xor
pop
and
push
mov
pushf
insl
loop
jo
ljmp
enter
or
in
jae
pop
leave
mov
mov
fbld
lock
mov
sbb
push
ljmp
daa
cmpsb
decb
out
and
stc
icebp
add
rcrb
pop
data16
adcl
test
pop
jmp
movsl
mov
fiadds
lds
fstps
ret
xchg
cmp
test
add
cld
jmp
cmp
lods
fcmovb
inc
in
adcl
mov
hlt
mov
in
aaa
aad
adc
push
fbstp
mov
mov
cs
imul
mov
pop
mov
jb
pop
cmp
dec
adc
jmp
repz
cli
mov
out
adc
loopne
outsb
cmc
into
jns
bound
push
fs
call
sbb
xchg
sbb
std
push
mov
ljmp
add
pushl
cwtl
icebp
cmp
adc
cltd
push
inc
insb
shll
out
pushl
push
mov
sub
ds
orl
cmp
mov
cmp
icebp
mov
cltd
lcall
jmp
cmpsl
dec
xchg
sbb
call
xchg
cmpl
out
lods
sub
pushl
sub
nop
jae
into
hlt
test
cwtl
rcll
inc
mov
mov
incl
cs
adc
icebp
lcall
mov
pop
mov
pusha
ljmp
or
pop
and
sbb
popf
jge
lcall
xor
rcrl
ret
fcmovu
or
repz
mov
cmp
rclb
push
mov
ljmp
js
adc
jns
mov
add
pop
out
push
fs
mov
jg
idivb
jo
int3
inc
jmp
sub
inc
std
call
idiv
decl
es
jbe
insl
or
mov
sub
inc
fcoml
cld
mov
sbbb
mov
push
out
hlt
decl
push
sbb
imul
pushf
fmull
fldl
roll
fdivp
and
mov
push
cmp
stos
cmp
inc
xor
dec
aam
add
or
call
pop
cld
add
aaa
mov
mov
sub
lret
incl
dec
popa
les
out
test
or
mov
mov
cmp
jbe
mov
ffreep
cmp
sti
push
out
sbbb
jg
fmul
movsl
rcrl
aam
aas
int3
pop
ja
xchg
nop
test
int
movaps
push
cmp
mov
sbb
inc
mov
cmp
mul
notb
js
dec
xor
fisttps
ja
dec
ds
popa
add
in
js
pop
fisttpll
rclb
fistps
mov
push
cmpsb
push
lahf
loop
stc
inc
std
or
fxch
int3
pop
data16
jg
incl
decb
push
mov
lret
or
xlat
jp
repnz
rcrb
adc
fs
jg
call
addl
je
push
mov
movsb
std
dec
inc
add
xchg
pop
mov
call
mov
pop
dec
or
fimuls
test
add
shll
mov
jmp
xchg
mov
dec
imul
loope
sub
xor
enter
cwtl
scas
push
mov
aaa
clc
ljmp
add
sbb
pop
mov
jle
repz
jae
into
xorl
call
mov
ret
xchg
in
add
stc
call
xor
jg
jg
into
in
xchg
data16
mov
mov
addr16
cld
incl
nop
dec
mov
cs
cmpsl
cmp
movsb
fdiv
jle
out
std
decl
cld
call
lods
pop
idiv
jp
sub
xchg
movsl
xor
push
inc
pop
cmpsl
lret
sub
dec
inc
push
out
jle
mov
jle
out
cmp
daa
scas
push
cmpsb
lea
add
jnp
sti
jno
cmp
call
jmp
clc
aas
outsb
orl
xorl
lret
lea
aas
adc
decl
jle
mov
sub
sbb
adc
pop
rolb
xchg
mov
ss
mov
aam
inc
int3
icebp
out
pop
popf
cmp
pop
loope
add
outsl
xor
push
decl
xchg
jge
add
lods
sbb
rorb
arpl
push
enter
out
fiadds
pop
dec
imul
inc
push
push
fwait
ret
cs
cmp
scas
out
cli
cli
jg
loopne
scas
ret
enter
sub
jl
push
adc
push
orb
js
scas
insl
fbld
xor
lods
lret
stos
sbb
sub
inc
inc
jg
cmp
inc
mov
fnstsw
outsl
or
call
scas
inc
adc
mov
decl
jp
sbb
fsts
mov
cs
sbb
sub
jmp
mov
ss
push
sub
mov
div
or
pop
cltd
imul
mov
fwait
mov
shl
addr16
mov
or
insl
jno
jmp
mov
stc
xchg
scas
subb
test
call
addb
ret
jl
push
repnz
mov
pop
imul
lcall
hlt
gs
xchg
stos
mov
cmp
mov
jno
loop
cli
decl
fistpl
nop
push
pop
xor
outsl
insl
ja
into
outsl
cmc
fisttps
jg
popf
repz
jg
pop
jnp
loopne
jmp
xchg
cmpsl
adc
repnz
icebp
mov
stc
mov
xor
daa
mov
dec
nop
insb
adc
stos
add
dec
dec
filds
mov
hlt
decl
hlt
ret
bnd
ss
rclb
icebp
imul
es
iret
std
add
ljmp
mov
cli
xor
loop
xchg
xlat
jno
jmp
pushl
inc
jnp
add
addr16
lahf
call
popa
adc
mov
movsb
cs
mov
les
fs
aas
loope
cmpsb
adc
popa
mov
mov
call
mov
je
mov
mov
ficompl
pop
sti
cli
aas
test
and
pushl
push
mov
mov
es
dec
dec
sub
sbb
pushl
mov
daa
fidivrs
jb
ljmp
insb
scas
out
out
cli
jg
jo
stos
pop
ss
mov
outsb
xchg
divb
xchg
xorl
dec
jno
aaa
pushl
push
mov
jne
sbbl
das
cmc
fs
pop
int3
mov
lods
ds
push
test
dec
sub
sarl
test
jmp
movl
pop
dec
decb
fwait
push
xor
jg
testl
ja
xlat
jmp
cmp
xor
pop
repnz
lcall
sarl
outsl
lock
xchg
sub
adc
sbb
xor
js
push
js
sbb
and
mov
data16
and
push
push
pop
inc
sub
push
push
cld
inc
lcall
addl
dec
sub
ja
sbb
sub
xor
cmp
pushf
dec
or
cmp
mov
incl
and
ficoml
cwtl
test
dec
jp
sbb
mov
call
mov
pop
xchg
xchg
pushf
iret
adc
repnz
hlt
mov
repnz
std
loope
mov
mov
fbld
repnz
jne
or
xchg
mov
dec
cld
pushl
jbe
dec
inc
stc
and
pop
lds
push
xor
inc
loop
ljmp
outsl
nop
push
pop
cmpsl
pop
jecxz
jo
out
sahf
xor
pop
dec
xchg
sub
pop
test
mov
mov
push
test
loope
lods
or
mov
hlt
pop
or
out
sysexit
cmp
nopl
add
push
mov
movsb
movsb
xchg
daa
sbb
adc
jg
xchg
pmovmskb
adc
xchg
loopne
mov
pop
addr16
outsl
std
mov
ret
mov
bound
mov
and
mov
push
or
jbe
inc
mov
imul
sti
negb
mov
cmp
lcall
pop
jbe
pop
jne
mov
pop
cmp
push
jo
add
dec
adc
pop
mov
fadds
mov
xchg
or
jge
fwait
das
push
mov
sub
lcall
lahf
cs
adc
mov
mov
lock
lret
or
xchg
xchg
leave
xor
jmp
in
mov
cmp
adc
jae
xchg
jbe
stos
mov
mov
jns
enter
ljmp
cld
add
xlat
and
insb
push
pushf
pop
stc
lret
jl
push
std
ljmp
fcompl
cmpb
push
jl
pop
pop
fwait
leave
imul
xor
aas
adc
push
cmp
imul
fs
loope
in
ss
jl
shll
out
enter
addb
mov
xlat
jmp
jmp
pushl
pop
daa
dec
sti
outsl
sub
scas
adc
ss
loopne
cmp
test
das
mov
adc
mov
jge
ljmp
sbb
dec
lret
mov
mov
fbld
in
insb
in
ficoml
or
js
pop
xor
inc
xchg
mov
enter
pushl
mov
aad
xor
imul
mov
cmovb
cli
inc
int
in
sbb
mov
mov
jl
outsb
repnz
sbb
and
push
push
setb
sbb
push
sub
ficomps
dec
push
xor
ficomps
out
jg
das
hlt
jge
jecxz
mov
dec
lds
xchg
cmp
cmp
int3
faddp
xlat
sbb
jne
fdivr
insl
test
mov
jg
decl
pusha
adc
fisubl
ljmp
inc
pop
mov
lcall
jl
adc
push
mov
adc
out
insb
ret
daa
lods
add
jg
in
cmp
mov
ss
mov
cmpsb
push
jbe
or
pop
xor
aad
and
mov
out
decl
push
mov
scas
cmc
leave
ficoms
fsub
mov
ja
popf
push
lcall
call
aam
mov
into
lea
aaa
xlat
les
or
ja
idiv
call
inc
fs
out
pop
idivl
xor
rcll
jl
fcoml
and
decl
popa
les
add
mov
es
lds
hlt
xchg
mov
call
mov
fdivl
adc
push
add
mov
aas
pop
cli
incl
fsubs
xor
xchg
loope
mov
dec
lahf
gs
rorb
call
pop
sbb
sbb
gs
add
dec
add
sbb
lret
sub
xlat
mov
mov
cmp
pop
inc
add
pop
mov
jmp
mov
ja
dec
mov
gs
std
xor
cmpsb
mov
mov
or
loope
les
in
mov
push
lcall
pushl
pop
dec
jns
addr16
dec
and
sarl
loop
mov
push
arpl
push
mov
ficoml
push
inc
sub
cwtl
in
shl
push
es
movb
pop
mov
call
and
pushl
les
inc
into
xor
mov
enter
cmp
cmc
aaa
ss
mov
push
out
insb
jmp
xor
push
xchg
jle
xchg
mov
out
cs
scas
jg
incl
pushl
stos
mov
adc
incl
ja
add
push
out
add
push
push
or
cmp
incl
testl
ja
test
push
pop
fucomip
cmpsb
in
es
ljmp
stc
xlat
mull
fwait
mov
mov
mov
jne
cltd
xlat
movsb
outsl
std
lcall
adc
arpl
aas
icebp
int3
mov
outsl
pushf
mov
mov
call
call
jb
mov
jns
cs
int
or
fidivs
shll
add
pop
repnz
movsl
and
jecxz
mov
cmp
sbb
add
ret
lcall
mov
dec
sub
jnp
xchg
in
push
test
loopne
out
mov
cmp
shrl
pop
incl
xabort
push
test
shlb
jns
mov
popa
push
mov
jmp
mov
imul
nop
cmp
mov
lcall
data16
outsl
idiv
xor
imul
xlat
jmp
mov
push
cs
push
and
fs
incl
jge
or
or
pop
out
stos
adc
addr16
jns
in
lcall
mov
or
cmpb
cld
jle
ret
pop
pop
fucomp
cld
and
aaa
test
incl
jbe
jge
or
loope
xor
or
mov
dec
xchg
mov
insb
pop
imul
cmp
pop
xchg
push
pop
loopne
cli
ljmp
inc
cmp
ret
mov
mov
and
jg
movsb
mov
jno
jp
insb
mov
xchg
xor
adc
les
cli
jecxz
into
bound
xor
ljmp
into
addr16
cmc
push
mov
jg
or
call
add
int
je
add
rcrb
adc
movsb
test
or
mov
das
js
jae
push
mov
insb
addb
jb
sahf
and
sti
mov
mov
sub
in
add
mov
iret
jle
dec
pop
ss
dec
hlt
loop
aad
push
or
bound
pop
scas
pusha
out
xchg
dec
xlat
mov
test
out
xor
sub
decl
jae
data16
or
ljmp
add
sub
sti
insb
movsb
lods
clc
das
lock
or
dec
or
jns
mov
das
std
fbstp
mov
push
outsb
jmp
rcr
sub
rcl
rorb
jnp
inc
out
das
icebp
decl
bound
pusha
xchg
mov
roll
fisubrs
incl
call
jns
lret
mov
int3
leave
or
fldt
aaa
mov
jecxz
cmpsb
pushl
add
push
addr16
out
pusha
fisubrs
dec
out
dec
dec
and
insb
cmp
testl
push
jns
ss
loop
inc
pop
mov
or
sarb
decl
cmp
adc
test
jo
xor
in
jle
add
es
fwait
arpl
imul
enter
fdivp
mov
vpcmpgtd
sub
dec
pop
test
ja
lods
mov
repnz
sarl
incl
lcall
jno
pop
mov
sub
push
shl
icebp
aam
imul
daa
pushl
sub
inc
jle
imul
clc
mov
fsub
or
testl
lods
pop
psllw
cltd
jmp
je
jmp
ljmp
add
cli
popf
mov
shrl
and
pushf
inc
sub
add
clc
jg
scas
cmp
addr16
pop
mov
add
push
int
push
xchg
pop
fbstp
add
mov
hlt
jb
inc
pop
fsubrs
mov
xor
incl
sbb
jecxz
adc
jmp
xor
in
ljmp
fnstcw
and
add
jo
loope
int3
xchg
scas
fnsave
pop
jle
call
cmp
adc
xor
add
loope
pop
rorl
mov
fwait
cltd
incl
mov
pusha
cmpsb
sub
scas
aas
lea
push
xchg
xorl
decl
inc
popa
adc
es
and
adc
test
push
xchg
int
mov
mov
push
fdivr
ljmp
jmp
xchg
cmp
aad
repnz
popf
pop
loopne
mov
out
call
inc
ret
fdivp
cmpsb
pop
test
inc
test
rorb
pusha
in
sbb
pop
lret
ljmp
outsl
ss
into
push
pop
mov
dec
jbe
fisttpll
jne
out
add
or
addr16
pushl
inc
jmp
fisttps
cltd
push
and
out
repnz
test
cmp
fwait
xchg
lock
js
cmp
jb
mov
dec
xchg
sub
lahf
aam
arpl
iret
xchg
test
push
sub
jp
jecxz
add
notrack
push
fstpt
push
mov
inc
and
jnp
sbb
adc
jmp
push
or
and
xchg
fldt
repnz
scas
gs
push
aas
lds
mov
sbb
mov
and
jne
add
adc
fdiv
in
pop
xor
mov
push
jl
outsl
sbb
rcrb
out
jae
dec
xchg
cs
lea
fcom
loope
cmp
xor
out
lret
jns
sbb
adc
xchg
cmpsb
out
mov
fbld
dec
pslld
jmp
push
mov
xchg
loopne
fldenv
outsl
cmpsb
ljmp
adc
inc
ffreep
dec
or
or
rcl
data16
mov
sub
call
mov
ja
pop
movsl
in
daa
or
sub
jb
mov
cmp
add
push
sbb
cmp
std
repz
jge
add
dec
add
and
mov
lock
inc
aas
lret
fwait
sahf
sub
cmp
hlt
inc
push
and
fnstcw
mov
repnz
jmp
mov
insb
jns
inc
sahf
sbb
cmp
in
out
hlt
xchg
xchg
mov
rclb
mov
cmp
imul
mov
pushl
test
clc
scas
stos
mov
mov
fisttpll
jno
cmp
sbbb
call
call
popa
xor
sbb
xchg
dec
mov
sbb
pop
sbb
xchg
mov
les
and
mov
jne
mov
push
push
mov
notl
ljmp
ljmp
mov
adc
sub
arpl
mov
jecxz
push
cld
dec
adc
dec
sbb
push
lds
lahf
les
sarb
das
cld
daa
push
pushf
test
ss
dec
aam
inc
cmp
pushl
jl
lret
jge
mov
sub
xchg
psrlw
push
sar
lcall
push
cld
pushf
xor
hlt
mov
xor
aas
jb
in
imul
adc
ja
push
idivb
and
test
std
shlb
dec
fildl
cmp
push
jmp
mov
mov
pop
cmc
push
icebp
scas
mov
repz
cmp
or
in
mov
test
push
in
bnd
cltd
mov
mov
lock
in
fs
jp
pop
add
lea
xor
mov
push
push
jmp
popf
in
mov
xor
mov
mov
cmpsl
or
ret
or
sahf
sbb
ret
and
call
negb
pop
fwait
inc
stc
xor
arpl
jle
jno
lahf
push
push
fisubl
mov
dec
lods
ja
inc
jmp
sub
decl
fsts
dec
cli
leave
in
cmpsb
adc
sarl
call
jge
xor
push
add
daa
loopne
dec
mov
pop
scas
ja
stc
cwtl
jno
addl
sub
inc
pop
fldt
push
dec
jo
pop
inc
bound
cmp
lret
shrb
iret
inc
orl
scas
sar
call
pushl
repz
mov
cltd
xchg
sub
xchg
xor
aaa
test
add
int3
inc
stc
popl
adc
push
repz
mov
decl
mov
mov
xor
out
or
jmp
jge
inc
push
out
mov
scas
decl
aas
bound
rorb
inc
adc
pushl
jo
lock
sub
gs
int
inc
adc
rcrb
lcall
or
in
inc
add
lea
mov
lahf
das
aaa
jo
and
sbb
stc
stos
mov
int
cmc
addr16
int
faddp
fbld
hlt
adc
jg
daa
ret
pop
popa
jo
andl
jae
or
repnz
or
mov
aaa
xchg
inc
pop
sub
in
movsb
fld
add
jge
fst
ljmp
jp
push
sbb
fisttpll
adc
repz
push
or
push
xchg
lock
ljmp
pop
clc
dec
js
mov
mov
pop
gs
jo
mov
loopne
push
repz
jbe
sub
lret
adc
push
adc
mov
call
int3
inc
xchg
cmp
and
cmc
repz
negb
and
call
cli
push
outsl
ja
cs
and
add
subb
pop
mov
cltd
push
mov
cmpsb
add
jmp
sbb
jle
jmp
fsubrl
pop
jg
and
das
add
inc
inc
jno
call
fdivs
jg
decl
enter
test
sub
inc
adc
je
mov
cli
adc
jmp
lock
jg
jnp
cmp
xchg
xchg
clc
scas
cmpsb
je,pn
imul
int
das
sbb
shrb
push
ficomps
sub
decl
mov
pop
and
stc
sub
mov
jmp
enter
popa
outsl
pop
loopne
cmp
ret
ret
stos
stos
jnp
test
sahf
pushl
add
imul
lret
or
mov
add
or
jo
loope
sub
lock
decl
mov
xor
sbb
hlt
cmp
clc
xor
data16
mov
das
xchg
inc
psadbw
mov
out
lods
or
shrb
sahf
jae
jle
sub
fbld
aam
mov
sti
scas
dec
push
and
mov
fildl
incl
in
or
cmp
mov
add
add
es
test
in
js
sahf
sti
mov
xchg
push
je
cmpsl
pop
pop
sbb
das
shl
lods
insb
stc
ret
xchg
std
sub
mov
cltd
adc
mov
outsl
ljmp
push
and
and
data16
movsb
mov
mov
mov
into
or
xlat
in
pushf
mov
ljmp
mov
jne
mov
fdivs
out
popf
sbb
mov
cmp
xchg
sbb
pushf
ja
sbb
outsl
push
dec
dec
sub
lcall
popl
sub
and
je
push
movsb
loopne
cli
jp
loop
scas
enter
cmp
sub
dec
sbb
lcall
testl
out
enter
sbb
test
call
fwait
jne
lcall
mov
stos
daa
push
daa
dec
hlt
pop
loopne
jb
xchg
mov
scas
or
bound
jg
jb
adc
mov
fwait
dec
mov
mov
and
xor
outsl
push
stc
ljmp
int
sahf
mov
sarl
jae
iret
cld
xchg
cli
lcall
mov
cmp
inc
loop
les
je
rcr
outsl
lock
jmp
pop
cmp
or
fistl
mov
pushl
sarb
into
enter
nop
mov
jns
cltd
jge
loopne
scas
addr16
dec
test
pop
sbb
jmp
pop
xor
es
fdivrp
xchg
push
lcall
sub
mov
lcall
cmp
outsb
das
es
xchg
aad
push
mov
push
jl
xchg
mov
movsb
xchg
mov
test
pop
loop
dec
xchg
sti
dec
xor
mov
sti
and
cmp
out
repz
roll
lds
les
adc
cmp
push
push
or
lds
incl
test
xorb
pop
leave
pop
mulb
movsl
repnz
fs
jnp
mov
push
push
icebp
mov
lcall
fstl
lock
mov
imul
mov
std
sub
pushl
hlt
idivl
ljmp
mov
add
xchg
ljmp
cmc
xor
pop
cmp
cmp
shll
repz
aad
dec
fsts
pop
int
hlt
push
push
pop
pop
and
jne
div
jecxz
mov
or
aam
incl
mov
xchg
inc
fmul
ss
or
push
add
clc
add
movsb
inc
jno
mov
inc
cmpsb
mov
addr16
pushl
or
aad
imul
ljmp
cmpsb
call
sbb
fstpl
fwait
jge
sbb
in
test
lods
call
loop
fistpll
leave
or
mov
loop
aas
push
sub
sbb
incl
roll
into
and
flds
loope
in
xchg
mov
cmp
into
and
xorb
inc
mov
dec
push
cli
mov
jl
inc
or
cmpsl
mov
ljmp
sub
enter
push
out
popa
ret
nop
pop
sahf
sbb
sub
xor
and
jge
xchg
pop
jp
lcall
fdivrl
cli
ljmp
decl
sbb
xchg
push
pop
adc
xorl
mov
insb
lret
or
and
xlat
push
clc
test
in
cmp
pop
or
mov
sbb
and
mov
mov
repnz
clc
pop
jb
fstps
mov
pop
cld
js
loopne
aam
inc
dec
in
add
sub
jns
mov
rolb
sub
sub
push
add
andb
bound
test
imul
add
and
call
loopne
jg
xor
add
adc
aas
ss
scas
ljmp
cmp
mov
push
mov
scas
push
mov
repnz
mov
and
sbb
xlat
sti
scas
xchg
adc
ljmp
incl
shl
push
cmp
mov
rorb
pop
add
mov
pushl
cli
ljmp
dec
cli
and
paddw
sbb
inc
jae
push
or
lcall
push
jmp
ds
jb
or
movsb
pop
incl
sahf
inc
loope
popf
push
mov
push
adc
cmp
pushl
dec
or
fildll
aad
rorb
fdivrs
sbb
cld
insl
subl
xchg
add
jmp
cmp
add
mov
jg
and
iret
movsb
pop
data16
jg
lret
int3
pop
cmc
mov
outsl
hlt
cltd
lock
ja
aad
andb
sbb
mov
xor
cld
decl
mov
wrmsr
fidivs
test
inc
sbbb
incl
lcall
or
mov
loop
ret
xor
dec
sysret
lcall
jmp
fildl
test
out
add
cmp
aam
negl
sbb
jle
pushl
xchg
sti
dec
mov
in
dec
inc
cmp
add
mov
xchg
cltd
dec
ljmp
lret
or
out
insl
rclb
icebp
ja
dec
adc
jle
clc
jmp
and
inc
into
dec
xor
ret
imul
decl
adc
dec
movsb
je
mov
out
mov
jle
cmp
xchg
xor
dec
pop
jne
pop
les
mov
stc
jle
and
mov
call
subl
ljmp
inc
mov
lret
inc
test
inc
xchg
xchg
jmp
pop
clc
mov
mov
mov
mov
jmp
incl
jae
xor
fnstsw
inc
jg
ds
inc
pop
mulb
mov
mov
clc
pop
loop
dec
in
adc
push
mov
pop
call
adc
gs
and
loop
ljmp
decl
jns
insl
push
add
call
adc
cltd
aaa
enter
mov
jge
andb
ljmp
rolb
xchg
ds
fimuls
push
lcall
and
pushl
mov
cltd
sub
iret
cmc
mov
jbe
repz
in
das
xchg
add
mov
xor
dec
xor
call
sbb
lds
insl
mov
push
sbb
jl
mov
and
jl
call
cmpsb
xchg
mov
mov
mov
ret
lock
jmp
sub
shrb
enter
fbld
dec
mov
aaa
cmp
mov
push
jmp
aas
mov
inc
int
jbe
inc
cmp
fistpl
fcmove
rorl
jno
lret
cmp
jmp
mov
push
inc
imul
add
and
mov
std
or
cwtl
lahf
aaa
push
gs
orl
rolb
cld
test
sar
lcall
ret
out
mov
push
jmp
cmc
sbb
loopne
mov
aaa
sub
adc
mov
xchg
ret
pusha
push
mov
outsl
iret
mov
push
lock
bound
in
sbb
dec
cwtl
imul
aaa
cmpsb
jae
adc
push
push
repz
sti
fnsave
dec
xor
mov
roll
sub
shrb
pop
jle
out
sar
popf
add
ljmp
mov
sub
sub
push
pop
test
aam
movsb
cmpsb
es
pop
jnp
jbe
mov
in
test
xor
stc
cmp
in
ljmp
ljmp
pop
divb
add
pushf
daa
add
decl
cmp
dec
xor
imul
pop
pusha
jp
fs
or
cld
stos
inc
ret
imulb
incb
jle
adc
mov
decl
and
decl
out
push
add
jp,pn
rcl
push
push
jmp
mov
int
std
jbe
lods
out
cmp
and
out
jnp
leave
xchg
call
push
adc
decl
xchg
scas
les
pcmpgtb
jg
cmp
adc
push
test
pop
out
xlat
jge
fnstsw
pop
cld
ficoml
shrd
ret
std
push
pushl
shl
jae
mov
sub
pusha
mov
aaa
aam
mov
sub
xor
jno
xchg
jmp
xor
iret
inc
pop
outsb
xchg
sbb
in
pop
sbb
popf
aaa
out
jbe
xor
call
and
inc
jns
sti
popf
xchg
rclw
inc
sub
aas
fcmovnu
out
push
inc
test
fs
pusha
jb
add
ss
clc
aas
push
pop
xor
in
aas
jge
add
in
rorb
add
pop
repnz
mov
xor
cmp
dec
mov
xor
loop
xor
out
stos
mov
div
jge
xchg
clc
lcall
lahf
adc
repnz
push
in
pop
add
call
xchg
mov
fwait
out
and
add
in
nop
sub
xchg
pusha
add
dec
decl
xchg
dec
or
xchg
mov
sbb
decl
pop
jae
jp
sbb
adc
cmp
add
push
and
push
adc
ss
or
enter
jo
pushf
inc
lcall
adc
xchg
out
jae
add
xchg
adcb
jl
jmp
mov
dec
mov
dec
es
dec
in
andb
mov
push
ljmp
movsl
inc
xchg
xor
lds
xchg
mov
fsubs
lcall
push
arpl
jne
daa
icebp
mov
pop
or
pop
popf
mov
pushl
cmp
loop
dec
and
idivl
arpl
or
decl
addr16
mov
aaa
cmp
mov
addr16
mov
xchg
xchg
inc
xchg
pop
xor
movsl
pop
jg
es
jecxz
mov
insl
out
dec
mov
push
dec
fucomip
pop
clc
in
loop
int3
jns
and
cmp
cmc
mov
inc
push
dec
add
cmp
stos
enter
call
sub
push
sbb
sarb
jmp
jg
std
scas
roll
inc
mov
cmp
inc
test
movsl
pop
js
push
iret
movsl
out
jmp
jns
mov
and
js
rcrl
adc
shrb
clc
lcall
inc
mov
mov
sbb
mov
call
inc
daa
in
insb
mov
aaa
mov
sub
out
xor
xchg
adc
pop
jg
pushl
dec
out
fcmovu
jnp
fdiv
mov
xor
cmpsb
push
add
inc
pop
jb
stos
push
jb
adc
pop
ljmp
jl
in
mov
lea
jnp
push
jo
stos
iret
push
out
repnz
in
and
call
daa
xor
xor
and
push
daa
pop
jmp
push
movsl
call
int3
movsb
aaa
and
mov
orl
lcall
xlat
bound
jecxz
les
lock
or
incl
mov
sbb
xchg
sbbl
addr16
arpl
fdivrp
call
xor
pop
mov
pop
inc
test
iret
add
int
jge
mov
outsb
push
shl
and
sti
cltd
lea
mov
ljmp
mov
pop
push
or
pop
sbb
inc
insb
xor
cmc
mov
test
pop
fdivr
ret
cmp
fcmovnb
into
ljmp
cmp
cmpsl
dec
aaa
jb
incl
cli
stos
cmp
mov
jne
lock
ljmp
pushf
pushl
aam
cmp
sbbb
mov
sti
cmp
icebp
lcall
xor
cld
enter
cmpsl
cmpsb
bnd
lds
insb
mov
in
mov
loop
movsb
xlat
mov
mov
loop
iret
outsb
icebp
jg
xchg
jmp
cmp
clc
cli
cli
adc
mov
scas
pop
mov
cmp
push
mov
dec
cltd
mov
jg
jns
mov
sarl
scas
push
outsb
es
sarl
jae
inc
or
call
push
out
fs
fs
int
mov
pop
xchg
mov
test
xchg
aaa
and
push
jb
adc
jae
mov
idiv
mov
jo
iret
popa
pusha
jle
lods
or
cmpsb
sub
cmp
leave
sbb
call
xchg
repz
into
pop
fsub
pushl
nop
inc
bound
call
xlat
lret
in
sbb
hlt
nop
in
push
ret
sub
push
je
ret
leave
mov
adc
jns
sarl
rcrl
arpl
push
dec
shr
in
xor
push
pop
filds
mov
scas
ret
fistps
sub
out
add
jg
sbb
sbb
xor
xor
dec
std
jg
iret
lea
cwtl
sub
cli
in
rorl
jns
mov
and
bound
int
push
hlt
jmp
cmp
xchg
xchg
dec
adc
es
nop
mov
add
in
dec
dec
decl
test
icebp
mov
xchg
inc
mov
push
mov
fists
mov
test
mov
cmp
mov
lods
and
js
test
arpl
push
rorb
ljmp
ds
cmpsl
push
cs
addb
aad
pop
test
mov
push
xor
pop
call
les
push
into
loopne
lea
jbe
call
sbb
ljmp
hlt
les
fcomps
adc
icebp
ljmp
jl
mov
cmpsb
fs
xchg
xlat
cmp
jmp
out
frstor
in
cmp
pusha
push
inc
sti
lcall
test
inc
xchg
push
pusha
movsb
das
mov
mov
and
outsl
push
mov
sub
and
arpl
insl
fdivrs
sahf
int
push
pop
nop
sar
pop
cli
sbb
adcb
out
aas
mov
pushl
push
xchg
rcrb
or
fmull
push
imul
pop
xor
cmpsb
sbb
cmp
or
ljmp
iret
adc
xor
mov
lea
call
and
pop
xchg
shrl
jmp
inc
movb
popa
lcall
lcall
sti
decl
std
ljmp
ss
dec
ljmp
repz
repz
outsl
std
call
aad
sub
mov
adc
pushf
cmpsb
and
jg
pop
loope
test
icebp
jg
incl
out
or
push
jmp
out
lds
into
cmp
jecxz
std
jmp
mov
in
arpl
xchg
into
sbbl
jg
cmp
mov
fsub
fsubrp
mov
dec
rorb
mov
lcall
dec
sbbb
mov
push
pop
pop
cmp
and
xor
push
fisubs
stos
in
push
cmp
call
mov
and
loop
add
mov
rcll
and
cmp
pushl
test
pop
aam
ret
loope
shlb
jl
jo
loop
mov
push
outsl
lock
or
push
hlt
int3
mov
test
pop
cli
loop
scas
adc
clc
leave
ss
into
cli
mov
cli
mov
lret
std
sbb
mov
lret
add
jmp
mov
imul
jge
push
mov
cld
decl
mov
pushf
adc
addl
lcall
push
pop
jo
or
jle
dec
shlb
add
adc
lcall
inc
lret
repz
sbb
inc
pop
sti
pop
or
out
call
andb
outsl
std
movsl
test
jecxz
lret
dec
lock
jecxz
ljmp
mov
clc
sbb
push
push
xchg
and
mov
pop
lea
outsl
enter
pop
aad
stos
jl
or
cmp
xchg
inc
cmpsl
enter
sub
loopne
pusha
mov
xchg
jg
cli
xor
cmp
cmp
mov
adc
jle
lcall
decl
repnz
out
inc
pop
add
pop
ds
in
fisttpl
lea
jno
fucomip
dec
insb
push
mov
xor
push
stos
cld
pop
mov
mov
loop
push
pushl
mov
xchg
dec
das
xor
xchg
push
mov
call
iret
aam
cld
imul
jecxz
in
call
cmp
addr16
adc
push
jp
ror
subl
hlt
loopne
xchg
sub
xor
xchg
stc
mov
xor
les
call
pop
out
ficoms
subb
mov
mov
xchg
cmp
in
push
dec
movsb
mov
jb
or
push
xor
inc
lock
out
ficoms
in
cmp
push
decl
fcoml
inc
push
not
mov
dec
gs
dec
lcall
incl
mov
xor
loope
iret
add
dec
icebp
cmpsb
bound
mov
xchg
add
repnz
fdivrl
aas
lods
enter
movsb
jg
cld
inc
ret
mov
push
adc
sub
out
dec
mov
adc
inc
add
cld
call
mov
mov
in
outsb
in
pop
jg
mov
test
les
sub
call
xlat
insb
jb
std
push
jg
ljmp
cmc
push
fmull
jmp
popf
sbb
add
or
inc
hlt
lds
ret
mov
pop
insb
add
sbb
xchg
xchg
mov
xor
in
jg
clc
pop
cmp
mov
fdivs
cmp
add
jae
adc
push
pushf
call
and
xchg
ds
negb
jecxz
pop
lcall
std
and
add
dec
in
or
lret
push
mov
sub
into
int
call
ret
jecxz
fisubrl
push
je
cmp
ret
fcmovnb
loope
jge
data16
imul
loop
aam
call
mov
test
sbb
addl
les
cmp
fisttpll
rorb
adc
test
pop
mov
or
adc
daa
push
jns
gs
fsubrl
out
jg
test
cld
push
int
inc
mov
mov
repz
cli
rorl
dec
ja
adc
or
dec
repz
imul
or
fdivl
cmp
fists
fimuls
pusha
divb
sti
arpl
mov
test
sbb
pop
lahf
outsl
adc
decl
mov
dec
mov
popa
push
jnp
or
ljmp
gs
fwait
inc
xlat
int3
out
test
lods
mov
test
jg
push
mov
sub
xchg
shr
cwtl
jno
jno
sbb
adc
fwait
mov
decl
subl
fs
pop
jge
mov
loop
push
fists
clc
ret
rcrl
cld
rcrb
dec
dec
dec
std
sub
outsl
mov
fdivs
xchg
ja
mov
ja
leave
dec
jp
adc
mov
pushl
shlb
cmp
data16
shrb
outsb
xchg
inc
mov
cmp
sti
push
aas
fdivr
or
rep
lcall
mov
std
clc
xchg
and
lock
adc
std
sbb
mov
cmp
xor
shl
test
push
sub
or
loope
test
stc
ss
sbb
insl
not
push
call
movsb
push
mov
xchg
xchg
push
mov
jbe
xor
cmc
pop
daa
mov
mov
es
hlt
shll
or
out
mov
jecxz
push
sbb
sbb
mov
aad
ss
dec
adc
sahf
loope
mov
or
add
jle
add
push
dec
pop
stos
sbb
dec
insb
mov
xchg
mov
lcall
push
dec
test
test
neg
jp
push
xor
mov
xor
fxch
sbbb
inc
andl
pop
mov
cltd
in
push
push
rcl
gs
rorb
inc
or
jmp
test
jno
jecxz
shrb
movsl
xor
es
lcall
sub
and
aaa
aad
jno
in
aaa
pushf
stos
or
xchg
test
pushf
ret
push
and
add
call
pop
test
mov
les
stos
int
adcb
jg
push
mov
dec
aad
adc
ja
cld
not
ja
cmp
add
add
fstpl
scas
out
out
or
mov
xor
sub
jp
lret
jae
gs
shll
mov
outsl
jno
fadds
repz
fldt
ret
ljmp
and
dec
jmp
cli
cmpsl
push
mov
je
mov
xchg
aam
mov
insl
push
into
ret
mov
sub
sub
movsb
dec
lods
int
xchg
repnz
xchg
lods
jnp
adc
js
push
outsl
icebp
cmp
jo
mov
push
sbb
mov
xchg
addb
pop
cli
enter
xor
add
sub
fcmovnb
and
adc
adc
dec
sbb
pop
cld
dec
outsl
jbe
dec
pushf
push
inc
cld
outsl
pop
xor
loopne
loop
pop
fidivs
insb
cmc
adc
sahf
stos
cmp
mov
rcll
xchg
inc
out
inc
inc
and
ja
xchg
lret
inc
fdivrp
ljmp
jnp
and
ja
sub
pop
ret
mov
jge
ljmp
movsl
frstor
insl
pusha
xchg
xchg
stos
jb,pt
push
sub
xchg
xor
pop
repnz
decl
pop
es
adc
xorb
gs
or
repz
scas
sbb
cmc
in
ret
inc
or
lods
sub
cmp
ret
incl
ljmp
xchg
bound
mov
mov
loop
push
fdivrl
dec
outsb
inc
pop
aad
or
ret
stos
jnp
repz
call
sbb
pop
mov
rcr
movsl
push
inc
jns
push
leave
mov
hlt
cmpsl
call
sarb
push
jnp
xchg
mov
cmp
insb
fs
mov
mov
mov
stos
out
inc
jl
lods
or
rcll
inc
adc
int
mov
leave
incl
lcall
les
inc
popf
push
cmp
repnz
out
xchg
fidivrs
lea
sbbl
test
cmp
or
sub
inc
pop
mov
cmc
mov
jmp
xor
ja
xchg
outsl
pop
cmpsb
and
es
dec
add
out
adc
xor
adc
pop
jecxz
ret
loopne
popa
sar
adc
fsubr
mov
dec
adc
aad
adc
sbb
dec
stos
push
insb
fbld
inc
pop
or
mov
xchg
cld
lcall
cmp
inc
test
movsl
push
test
or
ret
mov
je
loopne
js
jne
in
mov
push
pop
aam
mov
mov
adc
sub
jo
dec
insb
dec
lret
jnp
sti
jge
and
mov
jb
test
pop
pop
mov
jb
adc
push
push
int
mov
in
jo
ror
xchg
jmp
dec
pop
sbb
loope
punpckldq
lock
lcall
in
sbb
or
sub
cmp
in
ret
js
sub
je
hlt
repnz
out
mulb
cmpsl
mov
in
mov
dec
or
dec
pusha
dec
icebp
incl
cmpsl
daa
mov
or
mov
mov
insl
adc
leave
inc
insl
dec
jl
sub
popa
add
jo
cwtl
scas
loopne
mov
jb
fstpl
sbb
incl
cwtl
jecxz
rcl
arpl
inc
scas
sbb
data16
popa
out
sbb
mov
sti
inc
xchg
mov
out
sub
subb
xor
sub
dec
xchg
fsubs
lds
jmp
push
dec
push
imul
aas
lods
xchg
adc
push
xor
outsb
ficomps
mov
jmp
or
jge
dec
jp
sub
int
fucomi
inc
pop
jl
xchg
icebp
outsb
pop
jge
jmp
adc
xchg
sub
scas
ss
shl
bound
repz
imul
das
jno
out
mov
add
inc
mov
nop
dec
es
fidivrs
mov
negl
cmpsl
mov
decl
mov
clc
mov
scas
stos
xchg
ja
lcall
push
push
dec
mov
push
adc
loopne
xorb
mov
push
in
ljmp
roll
fists
dec
call
xchg
or
cmp
mov
jb
dec
sbb
js
dec
in
jbe
in
pop
fcomi
mov
scas
and
mov
setne
xchg
inc
pop
inc
sub
shl
das
test
mov
dec
out
sbb
pop
aaa
popa
hlt
test
push
jmp
pop
pop
push
call
gs
pop
xor
jg
add
push
test
jmp
rcll
adc
add
mov
cltd
add
mov
test
inc
and
mov
cmp
sbb
incl
mov
enter
call
ret
idivl
or
std
jg
ss
movsb
or
jle
je
icebp
jg
popf
inc
mov
loop
fisttps
mull
scas
lcall
decl
xchg
mov
fbld
loope
mov
loop
std
mov
push
sahf
mov
cmp
pusha
mov
loopne
test
push
sub
mov
cmp
ljmp
cld
test
adcl
add
pop
cwtl
data16
fidivl
jmp
push
mov
or
jnp
repnz
and
pop
inc
jg
aam
mov
filds
test
in
outsl
out
xor
mov
push
ss
sub
mov
mov
rorb
sti
in
mov
xor
add
and
int3
push
in
jae
lcall
call
mov
mulb
lcall
call
mov
xchg
push
add
clc
push
sub
cs
out
js
lahf
lcall
mov
jb
pop
xrelease
mov
mov
sti
mov
cmc
push
sbb
pop
mov
mov
leave
cmc
test
jno
out
sbb
pop
ljmp
push
loopne
test
sbb
les
incl
push
dec
jmp
out
xor
mov
sti
mov
inc
and
jbe
stos
enter
call
inc
xchg
fcomi
sbb
cmp
or
ds
cltd
push
mov
mov
lcall
dec
ret
inc
testl
push
sarb
cli
addr16
imul
sbb
incl
or
nop
jle
ds
pop
enter
cs
mov
or
ss
jp
pop
pop
aas
lds
mov
add
clc
jbe
outsb
insb
jecxz
adc
daa
lock
sub
test
push
sti
dec
lcall
incb
adc
pusha
arpl
shll
pop
clc
call
jbe
outsl
dec
ret
testl
mov
sub
popf
adc
test
jbe
movsl
incl
fisttps
fiaddl
mov
jp
fxam
ljmp
pop
insb
loopne
roll
repz
les
mov
shll
int3
orb
adc
idiv
push
inc
mov
test
xor
xchg
lock
xor
daa
xchg
das
jno
shlb
nop
loop
sti
xor
ljmp
daa
mov
adc
and
mov
or
ljmp
push
push
xchg
lcall
push
rorb
cld
fsubs
ljmp
dec
adc
dec
add
fcomi
cmp
stos
pop
xor
inc
inc
mov
dec
push
lods
xchg
inc
mov
iret
cmp
rcr
test
jmp
fldl2t
ret
or
xchg
push
pop
lret
mov
out
cmp
test
ja
push
adc
inc
dec
rep
decl
ljmp
ljmp
outsl
sbb
jle
jae
ljmp
sub
mov
mov
xor
pop
or
lret
movsb
push
call
jg
repnz
dec
adc
loope
adc
xchg
ja
ret
and
ljmp
lea
xor
pop
lahf
mov
sbb
sub
stc
jnp
sti
add
subb
aaa
mov
add
inc
push
dec
ret
add
or
push
mov
sti
jmp
xlat
sub
adc
mov
data16
ljmp
repnz
pop
fdivrl
cmp
dec
ja
fsubr
jecxz
cmp
lcall
push
scas
scas
mov
shlb
or
and
cwtl
movsl
mov
in
mov
outsb
mov
push
test
pop
dec
loop
popf
ds
ret
call
pushl
clc
jae
dec
xor
or
fxch
das
aas
mov
out
add
sub
pop
ljmp
test
out
div
js
cs
fisttps
lahf
int
insl
scas
push
mov
dec
es
dec
pop
sub
out
out
je
clc
call
popf
push
mov
xlat
aaa
mov
fidivrl
push
cld
sti
jne
lods
fs
cli
stc
inc
add
cmc
call
cmp
jno,pt
out
fldt
dec
aaa
movsb
dec
fwait
and
das
cmp
sbb
lahf
dec
mov
int3
xlat
pop
orl
into
add
loope
adc
xor
add
jno
jg
incl
xor
dec
and
in
mov
pop
pop
fwait
xchg
hlt
insl
and
ljmp
xor
mov
daa
adc
shl
cli
mov
mov
inc
xor
sub
mov
mov
and
jnp
inc
shll
pop
cmp
pop
cli
incl
or
pop
stc
ljmp
cs
cmpsb
xor
cmp
leave
repz
aam
call
dec
jle
add
push
mov
jae
std
rorl
cli
mov
call
aaa
pop
sub
adc
push
dec
lret
sbb
call
adc
mov
roll
lret
test
cld
adc
cs
aaa
cli
xchg
icebp
xchg
sbb
and
dec
or
loope
mov
mov
negl
push
sub
repz
jg
and
adc
push
and
jge
aaa
daa
inc
out
inc
fisubs
std
pop
or
arpl
aam
mov
mov
decl
sub
fdivp
aam
cld
jbe
loop
pop
sti
cmpsb
ljmp
aas
scas
fstpt
dec
inc
mov
inc
mov
jmp
imul
inc
imul
mov
jnp
test
jg
jo
jns
mov
push
je
cld
lock
dec
inc
pop
dec
std
mov
mov
cmp
pop
xor
push
lret
or
mov
ljmp
popf
pop
cmpsb
fdivrl
mov
fldcw
jmp
int
test
xchg
decl
cld
xor
scas
cmp
mov
push
fisttps
cmpl
cmp
scas
cmp
sub
incl
xor
fsubrs
xor
adc
ja
mov
xlat
stos
lea
xchg
mov
fucomip
jmp
adc
std
mov
inc
aam
or
pop
aam
dec
aam
sbb
je
pop
aad
dec
mov
dec
and
addr16
push
outsb
xchg
pop
inc
cld
mov
ret
scas
loope
mov
mov
push
mov
les
and
sbb
push
repz
and
mov
call
cmpsl
xchg
mov
mov
mov
incl
inc
hlt
inc
comiss
adc
std
lock
jno
test
int
push
popf
cli
lods
daa
rcr
mov
faddl
cmp
mov
add
lea
sahf
mov
or
lret
orl
mov
aas
sahf
cmpsb
aaa
xchg
loope
fs
mov
into
lret
xchg
and
int3
call
sub
fidivrs
jp
jg
ljmp
test
outsb
popf
add
les
mov
call
or
jecxz
cmpsb
lea
mov
adc
xor
rol
jmp
adc
cwtl
mov
add
sub
lret
push
or
xlat
push
inc
inc
and
lcall
std
pusha
cmp
mov
repnz
sub
lcall
adc
adc
sub
jb
sub
pop
in
js
push
xchg
add
cmpsb
icebp
xor
or
out
js
ja
jo
pop
cltd
xchg
add
jg
cmp
nop
pop
or
arpl
adc
mov
xor
fcmove
pop
dec
lret
mov
loopne
mov
mov
cs
xor
pop
cli
push
jle
mov
jb
cmp
add
aam
aaa
or
xchg
repz
inc
hlt
ja
out
fs
cmpsb
or
lcall
clc
or
imul
dec
jg
loopne
jmp
sbb
mov
cmp
subl
sbb
xor
test
mov
dec
das
mov
aad
cmp
mov
mov
fistpll
je
lahf
add
pushl
sbb
sub
imul
mov
dec
fwait
push
outsl
jecxz
sub
cmc
shll
mov
aad
or
pop
dec
and
rep
fdivrp
mov
pop
scas
aaa
xor
mov
add
pop
leave
and
mov
fcompl
inc
decl
mov
js
mov
ljmp
sbb
jg
mov
sbb
and
mov
or
inc
mov
mov
cmp
jecxz
lcall
ret
int
cmp
enter
push
mov
mov
ljmp
rcl
dec
idivb
mov
mov
aam
call
push
xchg
inc
push
pop
dec
cwtl
pop
push
jne
dec
jle
jbe
inc
gs
and
test
pushl
aam
inc
jne
lds
cmp
push
mov
mov
shll
ljmp
icebp
fadds
xorl
xchg
test
jge
jo
dec
mov
cmc
pushl
clc
mov
cld
shrb
dec
aaa
mov
push
mov
xchg
gs
push
xor
add
shlb
jg
popf
dec
sbb
cld
sti
shlb
dec
inc
outsl
icebp
repz
mov
dec
sbb
pusha
jg
call
lret
sub
and
xchg
clc
stc
enter
or
mov
push
mov
stos
xchg
and
gs
mov
loope
inc
cmc
jle
lcall
mov
cmp
mov
das
in
rclb
jbe
out
lea
cli
data16
movsl
cld
pop
mov
lods
dec
pushl
sub
ds
or
cltd
add
aaa
sbb
pop
loop
and
mov
into
psrad
mov
push
xchg
or
sbb
lock
sub
hlt
lcall
xor
and
xlat
inc
fnstcw
or
aam
sub
mov
mov
cmp
cmp
fidivrl
jg
ljmp
scas
adc
cltd
push
mov
shlb
push
test
jno
pop
push
popf
hlt
lcall
mov
push
imul
fldt
ret
cwtl
push
add
imul
hlt
sub
das
ret
ljmp
std
pushl
jmp
inc
pop
mov
aaa
lahf
inc
and
scas
dec
jno
stos
iret
shl
jg
enter
push
adc
repnz
enter
adc
xchg
jns
ljmp
jb
jnp
out
stc
cmp
mov
xor
cwtl
enter
pop
ljmp
mov
inc
orl
jmp
inc
je
mov
test
fwait
push
push
dec
xchg
mov
push
push
and
pop
ljmp
sub
xchg
aad
ljmp
std
int3
imul
cmpsl
loop
arpl
pop
cmp
int
adc
fsubrl
mov
cmc
cmp
add
inc
mov
and
cmc
pop
std
fistpl
clc
pop
jge
ss
mov
xchg
stc
and
lods
das
sbb
or
inc
sub
dec
icebp
pop
ljmp
push
ja
loope
cld
in
cmp
clc
jmp
daa
popf
or
dec
dec
xchg
inc
push
mov
popa
add
sahf
jmp
mov
inc
test
dec
sar
jmp
cmp
popf
inc
adc
and
sub
bound
mov
dec
dec
jae
insb
ljmp
cmpsb
cld
adcl
mov
jns
mov
push
out
adc
addr16
adc
mov
inc
jbe
push
xor
inc
dec
lock
lods
cmc
enter
incl
cld
xchg
imul
dec
icebp
sub
test
jmp
int
xorl
ret
jp
pop
jg
inc
mov
lret
add
rcrl
aaa
clc
mov
adc
pop
nop
mov
cmp
adc
and
sub
std
ja
push
cmp
jnp
fists
outsb
call
in
stos
cmp
sub
repnz
hlt
ret
lcall
ds
ds
push
rcll
sub
imul
loop
jmp
pop
clc
lcall
repnz
sbb
shlb
fxtract
loope
shr
and
push
stos
jecxz
jmp
repnz
dec
xchg
sbb
adc
adcb
imul
sbb
aaa
aam
lods
push
sub
adc
jmp
rep
js
ja
xchg
mov
popf
lea
inc
pushf
mov
js
xor
test
jo
inc
dec
adc
sbb
and
xor
fs
call
jne
dec
lock
push
mov
lcall
lods
outsb
jb
and
pop
add
inc
fcmovnb
je
pop
pushf
jg
sub
pop
jne
loopne
js
std
cmpsb
cmp
ret
stc
add
add
dec
out
sub
push
roll
lea
ljmp
arpl
xchg
or
xor
lret
mov
stc
adc
cwtl
jne
mov
xor
pop
mov
add
outsl
fnstsw
mov
rclb
scas
jns
xor
push
lock
test
incl
test
jmp
icebp
leave
jge
in
and
inc
icebp
ljmp
imul
mov
add
ljmp
outsl
int3
or
addl
pushf
gs
in
pop
jmp
adc
lcall
jno
iret
xor
cmp
fwait
sub
std
mov
dec
mov
mov
inc
push
mov
loopne
mov
mov
psubsw
pop
nop
mov
pop
dec
nop
cmp
lcall
cld
call
add
mov
and
fwait
dec
cmp
xchg
arpl
mov
lds
mov
ret
clc
lea
lock
cmp
or
test
mov
xor
div
jmp
les
xchg
aas
dec
pop
xchg
ds
popa
jl
cmp
push
push
fsubs
outsl
jmp
loop
pushl
xor
aaa
or
gs
xchg
arpl
dec
inc
divl
lcall
cld
xchg
shr
and
scas
in
sub
lock
std
and
sbb
cli
incl
xchg
jnp
and
jne
sahf
mov
mov
call
sti
jg
cmp
aam
addl
sub
mov
inc
ffree
pop
mov
gs
popa
mov
lock
aad
inc
pop
lcall
hlt
aaa
cli
arpl
adc
ret
jecxz
jecxz
pop
ret
shl
scas
push
pop
loop
es
sti
mov
mov
sbb
test
sbb
jg
xchg
test
xchg
pop
xorl
lcall
fwait
outsl
scas
in
mov
mov
pusha
add
jl
decl
clc
lcall
jns
sbbl
mov
cmp
es
incl
dec
mov
enter
push
jle
ljmp
loope
or
mov
sarb
jl
inc
or
jbe
sub
bnd
jg
xchg
xchg
push
pop
pop
dec
xchg
mov
mov
jbe
jbe,pn
std
leave
test
std
decl
in
and
test
inc
jo
out
pop
clc
fdivrp
decl
xchg
or
mov
lock
sbb
add
jmp
stos
add
in
test
mov
pusha
mov
push
jle
push
jae
lods
mov
incl
xor
jnp
pop
popf
std
cmp
or
cs
mov
jg
xchg
call
mov
sbb
aad
mov
mov
xchg
push
cli
int
pop
clc
pop
cld
insb
pop
shrb
jle
fmulp
sti
mov
mov
cltd
mov
jns
add
pushf
lods
or
jo
lcall
mov
jle
xchg
orb
jmp
and
pushl
sti
rcl
cli
ficompl
xor
push
out
inc
sub
incl
xor
xchg
sbb
pop
sub
sbb
xlat
hlt
jns
and
inc
cltd
aas
out
and
dec
pushl
sub
fdiv
mov
and
sbb
aad
xor
cld
mov
cmp
rcrl
xor
adc
arpl
push
insb
mov
push
cmp
fisubrl
cmpsb
mov
test
mov
ret
and
cli
jmp
test
push
lods
sbb
popa
pop
pop
push
cmp
mov
lea
jae
sbb
aaa
sar
cmp
mull
jb
ss
or
lcall
arpl
mov
test
jo
and
inc
jno
sbb
fwait
jnp
mov
jg
sub
push
mov
jl
leave
imul
cmpsl
ja
pushf
xor
shrl
cmp
mov
aad
lcall
pop
and
pop
pop
push
imul
pop
sub
call
dec
sub
fldenv
mov
outsb
call
xchg
add
sbb
lret
cli
push
bnd
sar
mov
jne
das
push
or
cmc
pop
mov
loope
lcall
ret
xchg
pop
adc
sar
or
dec
popa
rcl
pop
mov
popf
leave
jbe
lock
push
sti
clc
xor
ljmp
dec
inc
mov
out
out
jmp
ljmp
push
mov
add
call
rorl
jb
push
mov
call
xlat
lods
inc
xchg
sbb
jmp
jmp
sahf
mov
cmp
cmp
pop
pop
cmpsl
dec
pop
incl
lcall
pop
xlat
pop
dec
cli
mov
push
mov
aam
insl
lods
cltd
xor
inc
xchg
or
mov
and
sub
pop
fidivl
loope
ret
sbb
jg
mov
dec
mov
pop
incb
cli
ljmp
xor
stc
sahf
cli
sub
jbe
xor
push
andl
leave
add
mov
mov
add
ja
dec
ficoms
lcall
jg
xorb
fwait
ja
int3
pop
aad
push
shlb
mov
ljmp
xor
in
les
das
aam
out
popf
pop
leave
rcll
sub
cmp
pusha
mov
shl
rorb
xor
ss
mov
xchg
pop
clc
ljmp
iret
jge
icebp
xorl
insb
hlt
adc
in
pusha
ds
loope
into
inc
mov
daa
aad
subb
lahf
test
pop
mov
jp
rep
lcall
cld
jmp
imul
xchg
pushf
clc
sbb
dec
jmp
pop
pop
jns
jle
dec
je
jl,pt
mov
jae
pop
sbb
lret
push
frstor
pop
adc
test
push
pop
sub
push
mov
mov
repnz
mov
mov
sub
loop
push
out
dec
out
pop
push
cs
xchg
adc
fucomip
insl
cmpsb
or
gs
int
scas
push
fucomip
out
decb
fadds
outsb
dec
mov
jmp
arpl
cmpsb
xor
push
lods
loop
pop
aad
aas
dec
jmp
insl
xchg
mov
inc
mov
jb
sbb
jge
incl
mov
ret
test
and
sbb
sti
mov
inc
imul
mov
mov
mov
loopne
int3
mov
mov
mov
aaa
das
cld
mov
push
or
stos
outsl
jns
pushf
xor
dec
mov
test
sar
int3
shll
cmp
sahf
xor
in
das
cld
jg
sub
jmp
fs
mov
addb
cmp
jg
add
adc
dec
in
insb
mov
andb
stos
ss
cs
mov
icebp
stc
dec
xchg
test
mov
incl
inc
test
push
cwtl
xchg
test
mov
xor
adcb
add
rol
xchg
sbb
cmpsl
push
aaa
popa
xchg
mov
mov
outsl
jbe
inc
mov
ret
sub
test
fwait
aam
or
pop
mov
cli
fildll
adc
js
push
mov
adc
or
sbb
in
decl
ficomps
sub
sub
fbld
xchg
inc
sar
das
sub
xchg
out
pushf
jecxz
loop
cli
decl
insl
jnp
push
push
test
jbe
inc
out
dec
xlat
daa
scas
push
mov
enter
pop
jb
ret
xor
iret
push
mov
popa
sub
in
in
xchg
lods
icebp
push
ljmp
push
ljmp
and
loope
jmp
popf
pushf
pop
call
pop
mov
pop
imul
data16
mov
or
mov
jno
into
sub
hlt
mov
bound
loop
adc
cld
fldl
rorl
xor
mov
fdivrl
add
pop
xorb
pop
popf
mov
pop
pop
jle
enter
pushl
jno
lret
jne
add
xchg
das
xchg
rclb
enter
jge
jg
xor
scas
sub
push
int
in
insb
outsl
cmc
incl
jle
dec
sarl
and
sbb
in
fcomi
jmp
scas
jnp
cmp
mov
in
jne
sub
jmp
decb
xchg
sub
sbbl
push
mov
cmpb
stos
shufps
ljmp
lods
xor
xor
dec
movsb
pop
pusha
sub
je
mov
mov
fisubrs
inc
daa
and
stos
outsb
loope
sub
and
jmp
dec
push
cmpsl
xor
or
decl
or
into
adc
xor
pop
sahf
sbb
dec
into
pushf
xchg
mov
jg
aaa
es
mov
repnz
lcall
pushl
sbb
out
icebp
push
shrb
ret
out
mov
out
jle
ljmp
clc
pop
sbbl
enter
aad
lahf
cmp
and
mov
cmp
lock
mov
dec
inc
in
mov
xchg
ljmp
push
dec
or
lcall
stos
jo
mov
les
popf
push
mov
clc
leave
push
or
pushl
in
ljmp
mov
xor
xchg
lock
mov
std
pop
cs
loope
xchg
mov
test
xchg
cmc
fbld
sbb
xlat
sbb
leave
jle
inc
push
fidivs
daa
outsb
lock
jge
mov
inc
jle
or
pop
popf
lret
xlat
push
push
cmp
cmp
das
hlt
incl
dec
stc
jmp
scas
push
shlb
push
loopne
xor
int
repz
ljmp
adc
daa
mov
lret
inc
xor
push
dec
inc
cli
add
xor
jb
cli
inc
or
nop
inc
mov
cmpsb
jnp
lods
mov
addr16
fidivl
fisttpl
jp
daa
shrl
in
fnstcw
jb
sub
ss
adc
dec
lahf
addr16
int
outsl
lret
pop
call
dec
dec
inc
push
imul
xchg
xchg
mov
gs
jae
adc
mov
incl
cmp
pusha
sbb
cmpsb
pop
jge
inc
lods
ds
push
aaa
lds
mov
popf
sbb
sti
std
or
aas
aam
inc
movsb
sti
into
mov
clc
ljmp
movsb
lds
or
jno
adc
mov
or
call
repz
jne
ss
dec
and
mov
dec
cli
jmp
test
xor
mov
icebp
xchg
ja
in
movsl
leave
push
fidivrl
mov
pop
clc
or
adc
xor
cmp
cmc
jmp
test
stc
mov
outsl
scas
out
inc
js
lcall
xchg
pop
push
lea
sbb
sbbb
pop
out
push
adc
xor
add
jg
cmpsl
testb
test
lcall
sub
cmp
notb
mov
shrb
push
mov
int3
xchg
and
out
call
ret
fcomp
sub
andb
shll
mov
sar
pop
cli
cmpsb
cli
lods
das
sbb
fistl
mov
in
les
scas
lcall
cmp
dec
jmp
insb
cmp
lods
popa
in
sub
out
into
pop
cmp
fildll
std
idiv
mov
adc
shl
mov
ds
repnz
push
ljmp
xchg
jp
ret
sahf
rorl
cwtl
imulb
and
mov
jmp
or
xchg
decl
mov
cmp
fildll
mov
mov
mov
fsubrs
xchg
adc
ret
cld
call
subl
rcll
sahf
pop
adc
fdivl
mov
add
jae
sahf
aas
sub
inc
cmp
ljmp
pop
ja
stc
xchg
jnp
je
ss
push
pop
dec
out
dec
pop
cwtl
shll
jmp
fadd
in
push
ret
loop
jg
xchg
das
aam
mov
cli
sbb
mov
out
dec
pushl
outsb
mov
cmp
and
push
les
sbb
call
lds
ficomps
mov
mov
cmp
push
pop
cld
xchg
sbb
clc
add
lret
addr16
pop
mov
push
je
add
call
pushl
add
fwait
test
add
or
sub
pop
mov
movsb
popf
mov
ljmp
dec
fwait
dec
stos
std
jae
gs
adc
mov
dec
arpl
scas
xchg
or
and
xchg
lahf
and
adc
add
xor
lock
jg
pop
or
xchg
mov
lret
adc
lods
out
lcall
das
inc
mov
jno
mov
mov
mov
pop
ret
negl
push
rcll
xor
xor
fildl
js
shll
mov
xlat
cmp
out
add
jecxz
push
or
and
test
pop
cmp
adc
adc
or
imul
adc
pop
inc
cmc
mov
push
push
add
pop
clc
fcmovne
iret
insl
mov
lods
insl
sahf
fstps
cmp
cli
sbb
xchg
leave
mov
jns
cmp
mov
lcall
dec
mov
mov
fstl
inc
sbb
movsb
jg
call
sti
jae
stc
dec
inc
fsubs
cld
sub
cwtl
and
or
mov
lahf
das
popf
cs
xor
mov
cltd
xlat
arpl
fmuls
or
incl
pushl
mov
jne
adc
sub
xchg
mov
in
das
lock
hlt
outsl
mov
jmp
push
or
imul
enter
pop
movsb
pop
iretw
fstp
push
sub
insl
jg
in
movsb
sub
mov
mov
and
add
call
and
hlt
add
enter
iret
ds
fwait
jo
into
jle
push
push
dec
hlt
cmpsl
int
filds
cmpb
inc
loop
lods
mov
sbb
jmp
xchg
cmp
out
push
leave
jae
in
lcall
pushf
adc
jmp
out
push
sarl
push
inc
push
fwait
jne
fmuls
mov
in
add
inc
pop
or
push
aas
scas
fwait
mov
dec
mov
stc
mov
sub
jmp
shlb
mov
les
pop
movb
pushl
cmp
pop
cmc
add
push
loope
stos
outsl
ret
pop
mov
sbb
call
mov
cmpsl
xorb
jns
data16
rcrl
or
or
lret
add
jmp
xlat
jb
xchg
mov
dec
cmc
rol
mov
pop
push
gs
sbb
mov
loop
bnd
sti
cmp
mov
std
jl
mov
and
stos
mov
mov
xchg
std
outsb
or
std
decl
je
xchg
jo
sahf
jbe
xchg
mov
addb
ljmp
cmc
dec
test
sbb
jecxz
dec
loope
jmp
inc
pop
mov
outsl
out
jmp
xchg
mov
outsl
and
mov
call
mov
out
xchg
or
sahf
sqrtps
jae
xor
mov
filds
mov
mov
fnstsw
cmp
scas
mov
xchg
out
and
lods
add
push
test
aad
sub
xor
test
or
sbb
pop
shr
test
pushl
sahf
jb
repnz
or
enter
or
fidivrs
iret
inc
xor
stos
dec
stos
push
xlat
sub
sarb
mov
clc
fdivs
jnp
sbb
sbb
push
stos
jl
ljmp
sub
mov
repz
ds
pop
mov
xchg
mov
mov
mov
inc
push
pop
rcll
xchg
push
das
cld
adcl
ret
in
cmp
aaa
sub
outsl
test
mov
mov
sub
jmp
jo
mov
sbb
out
insl
mov
aam
cmp
inc
es
dec
add
lcall
in
call
xor
inc
cmp
mov
jbe
cmp
mov
xor
jle
es
pop
fs
or
leave
mov
cmpsl
outsl
push
mov
lcall
into
xor
nop
es
shll
sbb
popf
mov
cmpsb
add
fdivr
pop
js
mov
ljmp
mov
lock
xlat
fs
jg
mov
loop
dec
lar
inc
or
mov
inc
mov
aam
scas
xlat
aas
mov
lcall
add
jl
inc
ljmp
lods
mov
mov
repnz
dec
mov
jnp
xor
mov
push
js
xchg
cmp
adc
lcall
aam
loop
lods
mov
pop
cmp
ds
call
divl
addr16
ror
ret
and
icebp
sbb
dec
outsb
aaa
push
out
inc
test
pop
push
dec
std
call
xor
jns
sbb
mov
int3
mov
outsl
lock
stos
pop
mov
jmp
and
xchg
pop
into
jns
cli
sbb
jns
jae
mov
xchg
xor
push
cs
ljmp
je
insl
stc
shlb
neg
cmpsb
cmp
cmp
dec
shlb
scas
ja
addr16
mov
mov
imul
adc
orl
cli
inc
mov
inc
sarb
pop
jmp
popa
xchg
cs
shlb
cli
fstpt
cs
inc
insb
les
jno
ret
sti
sahf
aad
jae
or
mov
xlat
cmp
ffreep
mov
sub
loopne
aas
add
mov
jg
cld
sub
out
ret
aad
xchg
inc
sbb
push
call
movsl
and
or
mov
das
dec
sbb
jae
inc
sbb
data16
jmp
cmp
mov
stos
jb
inc
adc
lcall
mov
je
call
xchg
sbb
scas
fsubrs
popf
in
pushl
inc
jg
mov
test
mov
mov
movsl
pushf
rorb
xor
pushl
je
mov
insl
sub
push
jnp
inc
aaa
fstl
xor
push
sti
inc
hlt
out
sbb
test
mov
pop
dec
push
pop
iret
jmp
addr16
mov
inc
and
stos
rorl
in
xchg
jg
push
adc
shrb
ljmp
xchg
mov
lcall
push
sbb
push
adc
xchg
incb
adc
mov
xchg
mov
jg
outsl
out
imul
andl
adc
mov
cli
icebp
mov
repnz
je
or
hlt
lods
fs
jo
mov
sbb
sub
lcall
int
filds
dec
lret
jle
mov
xchg
cmp
test
das
jmp
dec
ljmp
push
fnstsw
or
call
pop
mov
mov
or
jecxz
je
mov
push
lds
xchg
push
inc
jecxz
or
cmc
push
adc
rcl
pop
fisttps
gs
je
cmp
lea
imul
jns
ret
andb
movsl
sub
mov
out
sub
cltd
sbb
mov
decl
push
lret
inc
fidivrl
adc
fsubrs
cli
sbb
lcall
push
jb
ljmp
stos
push
lret
icebp
icebp
dec
adc
xchg
outsl
test
loop
xor
test
adc
js
std
mov
les
push
or
out
push
ss
lcall
push
sbb
movsl
call
sbb
mov
inc
ret
popa
sbb
push
mov
mov
repnz
dec
fs
adc
jecxz
leave
leave
pop
addr16
jp
or
lcall
in
dec
mov
jle
ss
es
mov
lcall
fisubl
clc
mov
inc
dec
pusha
mov
notb
jno
call
test
loopne
fidivs
punpcklbw
dec
inc
mov
gs
popf
jl
lret
mov
fs
pop
mov
jmp
daa
scas
lock
pop
rcrb
addr16
adcb
loopne
cld
jmp
cmp
push
ret
imul
out
mov
sahf
repnz
push
outsl
sub
xchg
iret
das
push
hlt
imul
fcoml
call
dec
es
mov
inc
stc
cli
fwait
dec
push
sar
and
cmpsb
out
adc
jb
mov
jo
or
je
lea
fbld
xchg
adc
addr16
ficomps
sub
add
fimull
sub
inc
hlt
loopne
fsubp
scas
ja
pushf
mov
jmp
xchg
sub
data16
adc
xor
xor
jg
xor
gs
or
iret
mov
jno
fs
xchg
push
dec
aaa
sbb
cs
inc
incl
or
ret
repz
shlb
imul
stos
pop
jmp
mov
push
filds
sar
pop
loope
sbb
call
mov
into
or
aaa
add
pusha
inc
inc
fdivrp
lea
repnz
push
sbb
movsl
adc
rclb
call
dec
jmp
and
aas
xchg
xorb
test
mov
lods
push
mov
leave
ror
jle
jae
cld
out
jg
jg
lret
daa
dec
imul
sbb
shll
mov
push
in
jg
mov
stos
js
inc
jl
push
incl
push
in
jl
lock
fcompl
mov
rol
xchg
push
pop
add
mov
dec
mov
dec
sub
sbb
shl
pop
xchg
in
pop
rcll
push
jg
cmpsl
push
aad
pop
out
iret
out
and
cmp
out
fnstsw
std
js
mov
fwait
cmp
adc
fwait
mov
and
cmpsl
inc
fildl
xchg
xchg
push
dec
mov
add
mov
fcmovbe
ret
push
cmp
mov
out
mov
pop
ljmp
add
data16
mov
gs
ret
mov
mov
or
stc
scas
xor
cmpl
ja
lcall
jb
sub
fwait
cltd
jno
inc
popf
inc
ror
xchg
cmp
dec
pop
aas
iret
imull
decl
jge
movl
xor
arpl
mov
xor
or
adc
push
decl
push
mov
fdivr
jns
or
and
imul
cmpsl
or
push
sti
sbb
pushf
fdivl
mov
sar
xchg
dec
aas
xchg
jmp
roll
jmp
incl
leave
sahf
mov
pop
jb
inc
cwtl
pmaxub
clc
test
mov
inc
dec
inc
inc
outsl
arpl
decl
shll
stos
loop
and
lahf
pusha
fidivs
xchg
outsl
pop
or
sar
incl
fildl
aad
xlat
mov
repnz
add
add
stc
jbe
aaa
cli
call
shll
ss
push
clc
mov
fstl
pushl
int3
mov
push
mov
add
xchg
mov
rorb
jmp
js
jg
jl
pop
jns
movsl
stos
mov
sub
enter
rcrb
fdivs
loopne
ds
or
sbb
pushf
das
push
push
xchg
andl
clc
shlb
xchg
data16
inc
les
out
in
jns
and
std
ljmp
cmp
xchg
mov
and
test
int3
dec
adc
mull
sub
jp
jmp
cmp
call
mov
stc
or
xor
jge
mov
stos
adc
add
popf
push
push
fucomip
jmp
popa
or
das
int3
ret
call
sub
stos
rcr
ljmp
inc
out
jg
dec
jbe
movsl
xor
inc
mov
mov
int3
jmp
fmulp
movsl
mov
pop
and
jg
xchg
pushf
enter
int
dec
xchg
jp
jno
ljmp
test
loop
mov
mov
inc
pop
fldl
in
int
xchg
into
ret
push
push
mov
or
dec
jle
leave
mov
lds
push
cmp
cli
movsb
out
cwtl
cmp
call
lcall
xchg
bnd
xor
and
shrl
data16
push
sub
shl
stc
call
mov
fwait
arpl
xchg
or
out
or
je
pop
inc
stc
nop
mov
ljmp
sar
pop
pop
xor
xchg
push
out
fdiv
jbe
iret
clc
jg
ljmp
das
mov
push
add
jl
dec
inc
in
push
pop
loopne
fists
pop
pop
out
lret
lcall
mov
into
mov
xor
subb
sbb
repnz
cli
imul
cmp
cli
lcall
pop
les
jmp
and
jne
pop
dec
ljmp
incl
lock
pop
cmp
cmp
scas
shll
xor
loopne
xchg
adc
dec
decl
or
and
sub
jnp
mov
jg
jne
cmp
pop
scas
adc
fucomip
pushl
mov
sbb
out
pop
push
into
push
gs
jmp
mov
push
xchg
pushf
xor
test
out
mov
stos
icebp
sbb
ds
fldenv
or
push
mov
inc
inc
sti
and
mov
pushw
loopne
sbb
pop
call
fiaddl
cltd
mov
clc
dec
shrl
lcall
imul
adc
sbb
jge
pop
or
add
imul
mov
movsb
add
fwait
stos
incl
jo
inc
inc
xor
inc
or
pop
out
adc
es
adc
popl
lock
mov
cmp
jecxz
out
fidivrl
js
outsl
xlat
loopne
imul
jne
out
adc
incl
imul
jo
setae
inc
jae
jb
cli
jg
in
cmpsb
fld
mov
xchg
pushf
mov
sub
pop
cmp
loopne
cmp
decl
pop
xchg
push
scas
repz
cmpsb
rcrl
ljmp
outsb
lods
inc
and
cwtl
xor
jns
idivl
pop
leave
mov
jl
inc
xor
pop
pushf
xchg
mov
aaa
sbb
jg
test
mov
adc
sti
shll
mov
out
adc
cmpl
ljmp
and
cld
mov
scas
push
imul
sar
add
ljmp
xchg
push
mov
aaa
and
jbe
adc
xchg
push
ljmp
aaa
aad
bound
cmp
cmc
dec
cld
fwait
scas
popf
mov
pushl
repz
int
testl
mov
out
cmp
sbb
call
incl
jae
ljmp
xor
pop
xor
dec
pushf
lods
lds
loop
ljmp
sbb
sub
pop
aam
mov
sub
fnstenv
addl
cmp
fists
mov
mov
jb
imul
add
fsubs
aas
pop
mov
xor
fiadds
or
cmpsl
hlt
adc
xor
and
sbb
lcall
fnsave
mov
lret
ljmp
jmp
and
hlt
jns
je
inc
stc
jne
pop
out
mov
nop
test
pop
cmc
sbb
dec
xchg
fildll
adc
sub
jne
pop
adc
mov
cld
xor
jnp
jg
push
das
pop
xor
les
inc
in
jmp
pop
jg
addr16
adc
xchg
inc
jns
pop
in
sbbl
out
sbb
push
lea
xchg
out
inc
inc
or
lea
mov
nop
pop
jne
decl
std
pushf
sub
push
jo
cmpsb
pushf
stc
fucomip
repnz
push
jmp
les
bound
or
sti
lahf
sbb
repnz
loop
lahf
inc
std
inc
sti
mov
adc
push
mov
cmp
pop
ret
cli
repnz
pop
rolb
es
mov
fbld
sbb
jmp
leave
mov
ret
scas
ljmp
rclb
int
dec
inc
out
mov
rcll
decl
xorb
adc
mov
push
cmp
insb
scas
xchg
inc
pop
xchg
sbb
outsb
push
cld
ljmp
pop
shll
cmp
lahf
cmp
xchg
flds
test
mov
or
pop
add
push
aaa
out
sub
push
cmp
add
lea
call
enter
cmp
aam
call
call
xor
pop
pop
add
adc
ja
jmp
jo
or
mov
lret
insl
xor
sub
jge
fdivl
movsb
cli
add
icebp
incl
and
daa
xorl
ja
aas
js
das
fs
fists
incl
sub
adc
rol
pop
pop
adc
ja
unpckhps
adc
ret
push
rcll
mov
mov
out
lret
cmp
stos
orl
push
in
pop
pop
sarb
je
dec
xor
jns
fistpl
test
pop
mov
jg
pushl
icebp
subl
cwtl
mov
loopne
lret
iret
mov
mov
gs
jne
adc
cld
mov
mov
lods
rcl
in
mov
jl
idiv
push
jb
aam
in
cld
sub
add
mov
pop
subb
or
cmpsl
jbe
outsl
in
mov
ljmp
mov
cmp
fwait
and
cmp
xchg
ja
adc
incl
mov
fnstcw
js
roll
add
pushl
fnstcw
out
sbb
mov
daa
mov
aad
jo
call
decl
and
stc
ret
movsb
lret
cs
dec
and
mov
inc
roll
mov
inc
sti
call
arpl
mov
xchg
or
test
mov
sub
xchg
cmp
sti
cmpsl
dec
dec
or
inc
mov
lahf
jmp
xor
xchg
dec
nop
mulb
mov
add
and
popf
idiv
xchg
inc
push
xor
call
ljmp
ret
mov
xor
adc
sar
addb
sbb
mov
push
and
insb
cmp
ljmp
mov
std
decl
inc
loop
aad
int3
lods
leave
les
fimull
jb
call
xor
js
push
and
dec
cmp
aas
jmp
ret
fwait
cmc
push
leave
adc
or
decl
jno
jg
jnp
loop
xchg
sarl
cmpsl
sub
pop
ljmp
rcrl
pusha
ljmp
jmp
pushl
aas
imul
or
mov
lahf
xlat
add
mov
das
cwtl
popf
mov
lcall
not
lret
dec
add
in
xor
js
xor
push
mov
inc
push
pop
sti
icebp
mov
push
pop
ljmp
call
daa
rcrb
jg
add
aam
imul
jmp
and
and
mov
imul
push
fcmovbe
inc
fs
sbb
cli
gs
dec
lock
push
lahf
arpl
push
pop
and
sub
and
cmpsl
sbbb
outsl
lcall
jae
cld
mov
and
lea
leave
insl
in
sar
cld
pop
xlat
std
out
inc
mov
xchg
xor
sub
aaa
cld
xchg
cltd
jmp
call
mov
push
cmp
xor
mov
xor
sub
cltd
pop
lret
mov
adc
out
push
in
in
iret
adc
hlt
dec
mov
mov
and
xchg
adc
xchg
inc
push
cmpsb
pop
int
aas
test
hlt
mov
aas
roll
jne
and
xchg
enter
push
incl
cmp
scas
mov
ja
jno
loop
mov
scas
mov
mov
hlt
dec
pop
pop
mov
into
fdivs
enter
xchg
cmpsb
xchg
iret
push
mov
incl
adc
lcall
dec
jge
jmp
pushl
outsl
icebp
pop
lea
js
adc
jg
pop
outsb
fldcw
pop
in
decl
cld
jmp
pop
xchg
cmpsl
mov
repnz
pop
arpl
cmp
pop
jg
loopne
fnstsw
inc
push
loopne
jl
and
inc
adc
mov
test
jg
add
push
icebp
mov
mov
inc
fnstenv
cltd
inc
pop
daa
es
mov
out
lods
mov
mov
sub
popa
loope
push
mov
or
jns
push
dec
and
adc
fs
int3
inc
cmpsb
sub
fisubs
add
sbb
pop
jno
in
mov
test
or
dec
pop
adc
in
adc
aas
adc
mov
sahf
fidivl
mov
ljmp
icebp
fdivrp
jbe
jbe
mov
pop
or
adc
jmp
loope
decl
mov
sbb
adc
or
jo
mov
inc
jge
sti
adc
mov
roll
in
cmp
mov
xchg
mov
jnp
push
push
pop
ja
jns
gs
dec
testl
jmp
xor
xchg
mov
lea
out
cmp
call
incl
push
add
and
mov
xor
call
lcall
jge
sbb
je
loope
fsubrl
add
sub
call
daa
test
add
sub
sub
addl
push
ja
inc
aad
pop
cmc
mov
outsl
cmpsl
ficoms
or
push
and
out
add
in
push
sahf
ret
rcr
lret
das
test
xorb
lea
gs
decl
cld
in
push
aad
in
xchg
hlt
ficomps
mov
dec
and
ljmp
leave
push
repnz
sbb
and
xchg
inc
sub
fs
jmp
leave
or
sub
or
mov
in
add
jg
fidivl
imul
and
adc
mov
and
mov
fs
fucomi
das
std
decl
icebp
mov
dec
loop
mov
shll
ljmp
adc
mov
cmc
mov
xor
ja
fwait
movsb
jecxz
push
inc
mov
mov
cs
call
cli
test
cs
rcll
out
std
fistl
iret
adc
mov
pop
mov
in
stc
mov
mov
cmp
out
pop
sub
jl
jbe
aam
call
lcall
adc
mov
push
adc
outsl
lock
sahf
cs
push
inc
pop
add
outsl
jns
mov
push
push
mov
dec
fs
mov
cmp
lock
insl
adc
push
sti
jne
lds
adc
jmp
clc
inc
call
pop
stos
adc
fldl
sbb
sbb
mov
in
call
inc
popa
push
cmpsl
push
push
mov
scas
mov
lods
mov
mov
or
inc
aam
xorb
sub
jle
sub
inc
jle
pop
pushl
mov
loopne
fists
mov
sbb
push
xor
xor
loopne
mov
mov
mov
scas
mov
mov
ds
mov
mov
dec
in
dec
mov
push
in
pushf
pushf
mov
or
pushl
outsl
int3
mov
mov
ret
mov
dec
mov
sub
push
lcall
pop
xor
adc
push
pop
test
sbb
adc
ds
loope
insl
inc
mov
push
push
jne
jle
into
or
sbb
inc
mov
cmc
test
mov
insw
push
xchg
outsb
xor
adc
cmp
dec
pop
aad
iret
xchg
decl
daa
sar
inc
dec
push
aad
gs
and
lea
lods
adc
das
popa
lret
mov
adc
ljmp
add
jle
sbb
jb
pop
jge
mov
in
call
fwait
xchg
jge
lods
rcrb
or
add
mov
adc
add
insb
jae
out
cli
dec
inc
jge,pn
jno
arpl
push
js
jmp
loopne
scas
les
or
sbb
push
mov
ret
jo
mov
adc
call
sub
ret
xor
out
pop
pop
and
sbb
jb
out
push
adc
push
cmp
sub
lcall
in
jl
cmpsb
jp
mov
gs
mov
cmp
sbbl
jae
mov
and
push
cmp
hlt
inc
adc
add
inc
push
fs
decl
push
int
mov
fchs
adc
iret
mov
lahf
pusha
jle
ljmp
push
test
mov
push
push
loope
dec
stos
addr16
out
jb
outsb
and
loop
test
leave
jno
sbb
sbb
xlat
lock
decl
mov
pusha
hlt
or
jl
leave
out
imull
jge
or
lret
jmp
push
push
sub
lret
movsl
int
xchg
pop
fs
lock
shll
pop
outsl
sub
mov
aam
test
ljmp
jl
pop
cmpsb
mov
insl
and
mov
subb
aaa
cli
out
sub
imul
mov
add
or
and
inc
data16
in
cmp
inc
ja
xchg
inc
xor
dec
pop
test
pop
jne
mov
cld
lcall
sub
adc
and
repnz
inc
decb
fists
inc
xchg
jecxz
call
addb
enter
stos
sarb
pop
jae
fcmovu
lahf
mov
cli
lcall
sti
fs
enter
ret
mov
jg
jno
call
xor
imul
sub
or
xchg
cs
inc
jg
ljmp
mov
sub
test
jne
leave
push
adc
cli
and
sub
or
int
in
xchg
inc
pop
iret
int3
push
push
mov
jge
cmp
inc
hlt
fiadds
int3
pop
insb
aad
cmp
out
pop
loopne
mov
cltd
mov
ret
mov
mov
adc
addr16
fsubrp
ret
fistpl
leave
push
jg
adc
xor
inc
hlt
test
out
inc
mov
popa
xchg
mov
push
mov
sti
cltd
mov
pop
and
scas
push
out
xor
or
jle
and
bound
push
scas
test
stos
pop
fstps
addr16
outsl
cmpsb
and
push
sahf
fildl
arpl
call
insl
adc
pop
imul
pop
push
adc
push
testb
cmp
imul
aam
add
push
sbbl
mov
mov
jb
push
or
std
jg
call
out
fcoms
fcompl
inc
daa
clc
mov
fisubrl
rorb
sbb
and
adc
cmp
div
push
push
mov
mov
lcall
sti
xor
shll
insl
mov
bound
fistpll
sbb
push
xor
pusha
outsl
jg
cwtl
inc
cmp
sub
pop
shl
mov
ss
xchg
sbb
pop
cli
sti
lods
insb
mov
stos
lcall
mov
mov
call
cmp
stos
in
fxch
xor
and
lds
sub
add
dec
cmpl
stc
jge
adc
xor
push
into
xchg
mov
xchg
and
push
mov
ljmp
call
es
add
cwtl
inc
lock
insl
js
mov
std
mov
cmc
das
hlt
mov
push
pop
jo
enter
call
loop
popa
popa
out
pandn
dec
jnp
dec
std
movsb
and
imul
xchg
sub
sbb
push
sbb
mov
lea
std
idivb
or
dec
sbb
clc
adc
mov
outsl
ljmp
ljmp
mov
cmp
fildll
fldt
pop
pop
addr16
ljmp
es
mov
sub
and
push
dec
std
dec
loope
sarb
and
ja
xlat
mov
mov
fcmovnu
dec
ljmp
add
cmp
test
inc
jg
cs
pop
xchg
push
mov
scas
mov
push
js
inc
sbb
fildl
sbb
js
in
lods
jns
pushf
inc
mov
out
fstl
imul
out
aas
ret
out
adc
outsl
scas
lcall
lret
shlb
jg
scas
dec
call
jmp
out
add
or
mov
push
lret
mov
aaa
cli
xchg
mov
mov
ja
fiaddl
idivb
push
inc
test
sbb
jo
in
int
test
leave
sahf
xorw
incl
cmc
lock
jge
mov
cli
bound
dec
mov
push
dec
ds
lcall
sub
jne
mov
mov
stos
pop
push
xchg
adc
and
fxch
jns
fxch
outsb
cmp
pop
pop
clc
lret
dec
aad
sbb
test
faddl
mov
loope
hlt
decl
inc
inc
add
jmp
fists
fistps
sbb
dec
mov
popa
div
cld
lahf
jp
aas
pop
push
dec
jae
stc
outsl
inc
mov
jne
jb
sbb
and
push
in
outsb
mov
hlt
ret
inc
movsl
pop
decl
pop
xor
dec
mov
dec
lret
popa
bound
shll
mov
ljmp
aaa
dec
cmp
push
repz
mov
repnz
xor
test
mov
ja
push
jge
cwtl
push
shll
pushl
lock
in
lret
stos
inc
push
jne
bnd
gs
jno
lret
movsb
mov
cld
pushl
push
movsl
mov
mov
sti
dec
mov
mov
xchg
mov
mov
push
sbb
mov
push
sbb
ss
sbb
jae
sti
mov
lcall
out
sbb
in
jns
lahf
inc
mov
cmp
shr
pop
clc
outsl
clc
popa
shrb
mov
in
ljmp
add
push
dec
mov
sub
inc
or
jbe
xchg
xchg
in
pushf
jae
pushl
sbb
daa
sbb
ja
mov
jae
out
in
cmpb
sarl
inc
push
stc
sahf
movsl
push
and
stos
inc
cs
sub
mov
mov
sahf
sahf
xchg
xchg
mov
fwait
call
mov
mov
push
jge
out
xor
negb
lock
sti
jb
in
call
shrb
iret
adc
out
fs
add
test
jne
lcall
in
iret
repnz
imul
xor
mov
fs
fnstsw
jb
enter
ret
cmp
call
aaa
inc
add
aaa
test
repz
repnz
xlat
incl
stc
mov
lods
into
inc
icebp
push
adcb
out
adc
cmp
mov
lret
cmp
decl
cmc
sub
sbb
dec
lret
or
test
aam
inc
mov
mov
jns
fisubrl
aaa
cs
lahf
dec
movsl
dec
movsb
rcrb
jp
push
repz
test
das
mov
clc
int
xchg
int3
sub
jmp
mov
movsl
imul
aad
push
xchg
push
ror
ret
mov
fsubrl
or
arpl
idivb
imul
jo
scas
sti
lcall
data16
dec
xchg
fs
addr16
cmp
mov
jg
andb
clc
xchg
leave
xor
mov
call
jne
movsl
popa
fs
testb
xchg
test
cmpsb
sti
arpl
fnsave
cmpsb
xor
adc
into
aaa
gs
pushl
roll
mov
scas
dec
sub
rorl
je
sub
cmp
pop
call
ficoml
xlat
lret
iret
mov
aaa
into
idiv
fidivrs
lret
int
sbb
fcmovnbe
jp
lock
fbstp
sbb
aam
and
or
in
pop
sub
mov
call
pop
arpl
dec
or
pop
insl
push
sahf
adc
das
test
fisubs
sub
jg
pop
mov
test
imul
pop
mov
xchg
ljmp
cmp
out
popa
pop
pop
repnz
jno
push
int
in
sub
pusha
mov
les
in
pop
cmp
pop
lds
cmp
das
lock
sub
call
inc
sub
adc
cmpsb
leave
mov
repz
ljmp
fdivrs
enter
imul
in
sbb
test
pop
xor
pop
insb
int3
xchg
push
incb
push
test
and
out
pop
push
and
cmp
sub
ret
aad
aad
out
mov
pop
jg
jl
jne
mov
lret
in
sbb
jae
xchg
pop
dec
pop
nop
jns
jmp
shll
xchg
enter
pop
ret
addl
aas
mov
out
std
ljmp
cmp
jbe
aaa
mov
nop
xchg
adc
xchg
cli
hlt
mov
adc
scas
lcall
fucomp
scas
ss
inc
push
mov
push
xor
in
pop
and
dec
inc
push
popf
push
pushw
sbb
dec
out
pushl
clc
jbe
xchg
jne
mov
adc
std
push
scas
das
cld
call
cmp
out
movsb
movsb
dec
das
enter
in
test
data16
scas
stos
xchg
mov
pushf
jnp
test
xchg
and
test
xchg
push
decl
push
and
add
decl
sub
sbb
and
push
or
inc
sbb
lcall
inc
pop
rorl
out
fiadds
push
lea
mov
mov
subl
cli
pop
cmpsb
aam
mov
sahf
xchg
mov
dec
data16
daa
test
pusha
mov
mov
xor
sub
sub
jle
push
push
jecxz
ljmp
icebp
mov
into
xchg
lock
dec
lahf
fldlg2
xchg
clc
int3
jecxz
mov
fistps
and
fcmovbe
inc
repz
rcr
push
inc
ljmp
in
stos
pop
ljmp
jg
and
push
cmpsl
jns
dec
imul
jecxz
cmp
xorb
fsub
dec
push
stos
imul
mov
mov
or
jg
inc
jmp
sbb
pop
leave
inc
add
pushf
popa
push
cld
or
sahf
cli
decl
and
daa
loopne
sub
rclb
ficoms
call
mov
test
cmp
stc
cmc
mov
pop
xor
fistpll
mov
in
pop
imul
xchg
jg
dec
mov
fsts
cmpsl
arpl
cmp
ljmp
dec
and
lret
pop
xor
push
add
inc
adc
shl
pusha
aad
mov
xor
mov
mov
mov
add
ljmp
loop
xchg
test
sub
pop
stos
lock
lret
cmp
hlt
or
mov
xor
xor
nop
fsubrl
repnz
sbb
lea
clc
pop
inc
ljmp
sti
xchg
pop
ljmp
jp
loope
jmp
aam
jno
jno
sbb
add
inc
mov
xchg
pop
sbb
lcall
ja,pn
xor
pop
popf
out
les
sub
mov
jae
jg
xchg
int3
add
sahf
jecxz
pop
scas
jns
pop
mov
in
jl
lods
pop
pushf
and
mov
mov
test
push
sti
add
cld
mov
xor
jle
insl
call
testl
xlat
cmp
add
loop
cltd
loope
lods
push
jmp
jmp
out
jmp
iret
test
shll
outsl
rorl
xor
lea
mov
pop
push
ljmp
loop
rorb
mov
ljmp
nop
jnp
cmp
pop
cmpsb
xchg
sbb
incl
sahf
pop
fildl
out
aas
fwait
stos
sbb
adc
movsl
stc
sub
call
sbb
sahf
push
mov
ja
std
sub
outsl
add
mov
cmp
loopne
dec
stc
adc
out
stos
imul
daa
xchg
movsb
hlt
sbb
add
call
add
mov
stos
adc
pushl
sub
out
lcall
cmp
mov
dec
sbb
hlt
ljmp
lret
mov
lock
cs
add
scas
pusha
sbb
push
sahf
arpl
lock
jnp
cmp
sub
cwtl
insb
and
rcr
cmp
std
outsl
cmpsb
hlt
in
sub
mov
and
pop
dec
sub
lods
cli
sti
outsl
std
pushl
stos
fnsave
inc
in
int3
loope
lahf
iret
pop
lret
or
pop
jl
pop
iret
add
dec
cltd
mov
or
xor
cmpsl
cwtl
inc
push
jno
and
outsl
add
test
movsl
ja
sub
out
in
cltd
notl
jns
ljmp
movsb
xor
mov
pop
ljmp
mov
imul
decl
jbe
lcall
mov
test
aaa
cld
aaa
idivl
push
mov
add
cmc
enter
push
scas
pop
sbb
insb
adc
aam
sbb
out
pop
loopne
adc
push
shll
in
xor
rorl
pop
and
divl
inc
lock
lods
pushf
mov
jae
lcall
lcall
fsubl
sbb
cmp
sbb
mov
and
data16
mov
sar
aad
mov
and
add
div
xchg
add
push
lahf
addr16
or
push
ret
mov
lods
popf
cmp
jne
test
dec
mov
mov
inc
cmc
lcall
roll
and
or
out
fstps
cld
lcall
movsl
mov
lea
shrl
sub
adc
mov
ljmp
icebp
outsl
pop
imul
fsubrs
push
jge
cmp
or
sar
lcall
data16
ss
push
ds
repnz
mov
push
xlat
add
mov
sub
out
test
js
dec
jmp
iret
push
in
xlat
adc
repnz
loopne
call
pop
call
push
mov
lods
mov
incl
hlt
out
cmp
lea
mov
inc
incl
sti
mov
insb
int
mov
sbb
pusha
pop
jp
ljmp
pop
ss
inc
insl
repz
mov
ljmp
ret
out
iret
inc
inc
xchg
mov
mov
jns
mov
incl
outsb
lea
mov
data16
pop
mov
xchg
xor
mov
cmp
fidivrl
lret
pop
dec
jns,pn
ljmp
or
mov
xor
pop
lea
cmp
mov
jg
jne
xor
adc
mov
push
sahf
jl
iret
fdiv
pop
push
ret
addr16
pushl
aad
adc
mov
imul
xchg
sbb
insb
or
testb
ljmp
cmpb
mov
outsb
push
sub
js
lahf
sbb
pop
xor
fbld
sti
and
addr16
icebp
mov
sub
mov
clc
push
push
sbb
push
pushf
push
xchg
insl
lahf
mov
sti
pop
test
rcrb
sub
ljmp
mov
loop
sahf
jb
push
fnstcw
pushl
adc
sub
jne
cwtl
lock
inc
test
ss
pop
cmp
mov
mov
xchg
jg
fidivrs
jg
jmp
xchg
xor
in
xchg
lds
inc
mov
clc
pop
mov
mov
mov
ret
push
cmc
pop
jp
pop
loope
jg
lcall
call
add
sbb
push
pusha
aam
mov
mov
mov
and
push
and
jg
rorl
clc
popa
push
ss
cli
aad
inc
push
testl
push
fbld
xchg
dec
in
xchg
mov
or
jmp
lea
sahf
idivl
dec
je
movsb
rcll
daa
popf
mov
outsl
jb
fnsave
mov
fxch
jmp
pop
cltd
fidivrl
lcall
ds
ss
icebp
call
lds
pop
lret
cmp
and
push
pop
cli
ljmp
mov
mov
mov
dec
and
mov
lock
in
das
int3
ss
clc
cmp
and
and
lcall
mov
addr16
in
jo
cmp
in
push
cmp
sbb
pop
cmp
and
aad
push
ja
jp
or
cmc
jp
pop
lods
jl
dec
in
inc
adc
sub
pop
popl
ja
nop
bound
inc
out
fistps
or
xor
push
call
stos
mov
in
stos
fbstp
aam
or
call
jp
fdiv
pusha
fbstp
inc
pushf
mov
mov
leave
hlt
cmp
xlat
sbb
les
add
xor
cld
repnz
pop
lret
push
stos
mov
mov
loope
pop
xchg
or
pop
dec
adc
cld
inc
test
mov
in
cmp
js
mov
jb
pusha
jns
insb
mov
dec
adc
dec
cltd
das
mov
push
xor
cmp
fadd
pop
or
inc
inc
and
iret
inc
sbb
xor
jmp
mov
dec
loop
cmp
fcomps
leave
pop
bnd
fdivs
das
decl
pushl
mov
adc
or
insb
ss
sarb
mov
fsubrs
mov
outsb
jb
or
outsl
adc
jo
inc
push
iret
out
jmp
or
filds
sub
or
lret
call
and
mov
xchg
or
repnz
dec
lods
cmc
ljmp
stc
mov
adc
lcall
fldl
popf
lds
cmp
pushf
call
dec
sbbb
jmp
pop
loope
mov
iret
aas
sbb
call
sbb
jne
adc
rcrl
in
out
xor
push
lcall
and
ror
sbb
xchg
pop
mov
test
xchg
push
mov
jne
clc
or
jmp
mov
jmp
xor
outsl
cmpsl
sbb
push
mov
add
out
mov
scas
adc
int3
mov
inc
call
mov
push
rcll
and
and
jmp
pop
push
lock
dec
adc
cmc
ds
mov
mov
xorl
outsl
sub
enter
jae
sub
jbe
push
mov
mov
insb
mov
mov
cmpsb
lcall
cmc
leave
ljmp
test
mov
cmp
push
into
sahf
ljmp
push
scas
mov
mov
cs
fldt
jne
xchg
cmpsb
test
lcall
xchg
jecxz
add
xor
push
xchg
push
daa
inc
scas
dec
jmp
or
and
outsb
mov
outsb
ljmp
mov
xor
icebp
jg
decl
push
or
mov
xchg
cmp
movsb
fwait
sarl
xchg
fadds
das
cwtl
fidivl
jae
hlt
repz
dec
mov
fstl
and
mov
adc
pop
inc
mov
add
add
inc
lods
in
mulb
or
push
jg
adc
add
inc
xor
xchg
jmp
jo
inc
mov
and
mov
sar
push
push
add
pop
bound
push
test
sbb
sub
inc
inc
shlb
mov
mov
push
movsl
lds
pop
adc
movsl
loopne
mov
testl
shl
mov
out
lock
ret
mov
mov
mov
sub
aaa
in
enter
lock
push
int
insl
mov
dec
sub
mov
jge
lds
dec
inc
test
jnp
js
push
cli
outsl
inc
mov
lret
out
jecxz
jge
jg
lds
mov
sub
loop
int3
iret
jp
dec
cld
bound
sbb
shlb
sub
jl
mov
daa
daa
sub
inc
mov
data16
lcall
or
pop
add
dec
repnz
insl
xor
int
arpl
hlt
decl
pop
inc
cmp
adc
push
adc
pop
ljmp
add
xchg
out
mov
test
or
cmc
sbb
outsl
mov
lcall
cld
call
mov
add
movsl
inc
in
es
pop
int
mov
insb
push
jae
mov
xor
clc
fcomp
fnsave
incl
cmp
jle
mov
std
popf
addr16
push
mov
call
das
lods
cs
test
inc
and
pop
xchg
mov
les
inc
push
xchg
loop
mov
jo
xchg
outsb
pop
sub
imul
mov
sub
xchg
or
mov
push
add
mov
add
mov
insl
test
rcrl
pop
jg
jmp
cwtl
push
dec
pop
cltd
call
push
mov
push
jae
lock
jns
fistl
pusha
shr
mov
mov
add
loopne
incl
push
push
sbb
loope
insb
fmuls
xor
adc
xor
lahf
cmpb
mov
pop
ja
incl
xor
fwait
jle
std
pop
jmp
out
test
cmp
mov
mov
into
mov
xor
rcrb
xor
lods
push
icebp
xchg
pop
lea
jmp
pop
or
pop
mov
push
test
pushl
int3
fbstp
inc
mov
adc
cmp
inc
lods
jge
push
mov
sti
mov
xchg
mov
or
pushl
gs
jg
out
lcall
pop
je
xor
jnp
repnz
stos
test
push
out
ficoms
adc
mov
cmc
dec
xor
fnstsw
mov
cmp
mov
lds
cmpl
cld
lods
mov
movsl
push
mov
fildll
repz
stos
stc
pop
repnz
scas
dec
cmp
jg
jmp
or
jmp
fwait
xor
mov
ds
jmp
pop
movsl
sub
test
stos
cli
scas
cli
fmull
cmp
sub
lea
mov
outsl
in
jae
insb
stos
mov
pushf
repnz
mov
jae
dec
xchg
xor
mov
imul
das
cwtl
imul
pop
clc
adc
jae
je
ss
pop
stos
adcb
call
test
insb
jmp
out
mov
shll
xchg
mov
xorb
add
ljmp
xor
push
jns
xor
cltd
out
jmp
sbb
repnz
dec
jmp
pop
leave
ja
xlat
jg
pushl
or
fmuls
in
push
das
adc
xchg
jne
nop
scas
out
sbb
or
and
cmp
lods
or
aas
es
xchg
pop
aas
jb
ljmp
je
and
pop
mov
jo
jne
pop
sub
sbb
xor
jg
or
dec
imul
nop
cmp
mov
inc
outsb
inc
mov
mov
addl
cld
ljmp
or
lahf
dec
test
mov
lret
xlat
and
mov
outsb
adc
sub
pop
sub
ret
aaa
incb
sub
pop
sub
shlb
dec
inc
jg
call
popf
sbb
mov
sbb
cmp
mov
ljmp
dec
xorb
jbe
mull
sbb
stos
jnp
out
cmp
inc
adc
mov
mov
ljmp
sbb
sub
inc
push
sti
int3
sbb
daa
call
aas
xchg
inc
cmpsw
clc
arpl
cmp
mov
movsl
shr
fistps
jnp
cmp
mov
fs
adc
mov
stos
add
sub
sarb
sub
mov
rorb
repz
cli
sbbb
aaa
decb
cmp
leave
out
jno
adc
hlt
inc
aas
push
pop
fnstenv
jle
ret
cli
xchg
in
push
push
incl
and
loope
inc
mov
movsl
sbb
dec
mov
xchg
sar
ljmp
fisttpl
push
pop
inc
test
ret
mov
repz
cmp
push
ss
pusha
sbb
xchg
lret
jmp
push
psubd
adc
roll
daa
and
mov
ljmp
rcrb
imul
lret
les
std
ljmp
call
mov
adc
xor
mov
push
shll
push
pop
lods
adc
bnd
incl
ss
or
pop
ss
dec
dec
into
mov
mov
pop
fistps
sbb
dec
dec
fcompl
and
pop
fbstp
dec
pop
das
imul
scas
cltd
stos
aam
dec
int
aaa
cmp
push
pop
mov
fucomip
jbe
ja
out
add
cld
adc
mov
sub
lcall
cs
in
pop
aad
pop
and
pushf
mov
xor
neg
mov
sarb
cmp
ret
icebp
or
push
jo
ljmp
push
jp
cmp
jae
jb
lahf
xchg
les
stos
data16
add
ljmp
or
loope
dec
out
icebp
and
lcall
fsubs
idiv
pop
mov
xor
lret
cmp
ljmp
xchg
jmp
cmp
cmp
scas
cs
movl
lods
mov
mov
pop
mov
scas
gs
mov
fnstsw
xchg
push
add
pushl
mov
scas
jb
jmp
call
mov
lods
push
and
mov
rcll
sbb
lods
pop
pop
cmp
push
xchg
bnd
mov
data16
test
dec
cmp
fdiv
into
mov
add
test
cmp
inc
jo
xchg
dec
push
call
stc
shr
mov
pop
xor
in
cmp
sti
jl
or
fisttps
cmpsl
cmp
mov
push
cli
out
adc
jo
sbb
adcl
shrl
mov
push
adc
cmc
or
adc
fisttps
out
pop
scas
outsl
sub
cld
mov
mov
pop
sbb
push
pop
push
inc
sub
movsl
fldln2
fmull
push
lret
mov
jg
pop
call
pop
inc
mov
clc
movsl
xor
xchg
mov
mov
add
cwtl
pop
aam
pop
push
jmp
cmp
cmp
loope
inc
addb
jg
popa
pop
sub
es
cmc
mov
xchg
leave
cltd
rcrb
sub
mov
jp
outsl
arpl
and
and
mov
out
inc
cmpsb
push
mov
decl
out
xchg
and
pop
aam
sbb
testb
inc
add
mov
loope
sar
test
pop
ss
sar
dec
aam
dec
dec
cmc
es
lds
pop
call
xorb
popa
in
cs
pushl
mov
push
out
dec
push
inc
jbe
cmpsl
inc
stos
std
add
jle
lret
cmc
jmp
adc
movsb
aam
js
or
fildll
jbe
shll
es
xor
dec
jo
sbb
repz
mov
or
insl
pop
xchg
sar
mov
loopne
subb
jns,pt
xor
push
stc
mov
outsl
call
cmc
or
and
pop
popa
dec
push
mov
or
mov
stc
mov
arpl
mov
mov
loopne
cmc
push
insl
outsb
xchg
cmpsb
lea
mov
iret
lret
gs
pushf
in
fsubl
lret
es
nop
cmp
jns
addl
movsl
call
icebp
pushf
mov
cmp
mov
popa
outsl
cld
mov
push
sub
sbb
sub
stc
dec
or
ljmp
hlt
hlt
nop
inc
pop
pop
das
inc
fisubs
cmp
cld
decl
inc
ljmp
mov
mov
subb
mov
push
dec
mov
lahf
or
mov
cld
or
mov
push
and
icebp
das
mov
incl
iret
fcompl
imul
fstp
sub
jo
pop
clc
rorb
xchg
enter
nop
ss
mov
jl
adc
mov
decl
push
stc
lahf
jle
scas
inc
addr16
mov
out
aad
mov
call
jg
ljmp
jmp
scas
test
mov
and
repz
cli
push
mov
hlt
pushf
out
xor
sub
mov
outsb
out
xchg
repnz
call
mov
dec
repnz
lods
emms
addb
movsl
std
jne
stos
in
mov
decl
orb
iret
std
push
arpl
ret
push
add
sahf
movsb
sbb
jg
or
jge
xorl
testl
jmp
clc
xchg
data16
pop
push
pop
push
xor
sbb
adc
xor
jg
ljmp
mov
pop
aas
jge
shrl
push
lds
pop
stc
adc
mov
jge
add
rclb
test
movsb
dec
sti
mov
pop
jns
inc
add
fidivrs
inc
aas
out
sub
daa
test
std
hlt
leave
inc
sub
pop
ljmp
mov
xorb
fcoml
mov
into
bound
xchg
push
cs
je
pusha
out
hlt
incl
mov
sbb
rcrb
mov
cmc
sub
push
sbb
popa
popf
jg
ljmp
push
inc
mov
in
cmp
push
mov
enter
mov
lcall
in
loopne
push
andl
sub
jmp
cli
lods
repz
mov
mov
mov
mul
and
add
sbbl
incl
push
rcrl
inc
mov
in
lods
push
fwait
andl
jnp
jno
lods
jle
nop
stos
ja
gs
in
push
pop
test
loop
and
mov
das
push
mov
cmp
in
cmp
sub
pushl
js
jg
or
mov
dec
cwtl
mov
lret
fxam
popf
adc
incl
mov
adc
jecxz
pop
in
leave
sub
jae
and
pop
movsb
fmuls
mov
jne
fwait
cli
jns
lods
ljmp
sbb
cmp
sarb
sub
sub
mov
sub
ret
filds
xchg
pop
rcl
outsl
mov
cmpsb
mov
lcall
out
lds
mov
pusha
adc
add
sub
dec
or
cmp
pusha
jmp
jle
jmp
icebp
inc
dec
data16
and
shll
or
aaa
out
fucomip
mov
pop
dec
ljmp
pop
dec
adc
subl
dec
mov
cli
inc
inc
adc
xor
jg
dec
fdivrl
mov
unpckhps
jmp
pop
and
dec
mulb
std
decl
nop
and
cltd
push
roll
cmp
lret
mov
pushl
scas
movsl
pushf
xor
scas
sub
gs
lahf
xor
cs
push
pop
mov
insl
jae
xor
mov
stc
popa
lahf
das
push
enter
in
inc
nop
push
jl
sbb
call
pop
movsb
iret
push
in
lahf
imul
mov
scas
pusha
lahf
gs
rcll
test
fistps
subl
jle
test
imul
ljmp
incl
in
adc
cmpsb
mov
aaa
cmp
sahf
sbb
inc
pop
cli
incl
sti
popa
and
inc
sub
fidivs
lcall
jmp
loope
push
lock
xchg
fcomp
out
inc
mov
out
ljmp
lret
popa
pop
fldenv
in
rorl
lcall
mov
cmc
decl
mov
push
scas
test
jns
cld
xor
mov
pop
test
outsl
enter
ret
and
test
icebp
inc
pushl
cli
call
cld
leave
stos
icebp
imul
and
adc
inc
in
fcoms
rolb
hlt
clc
dec
in
fwait
jp
popa
add
sub
pop
xchg
sbb
into
dec
clc
xor
fmulp
test
leave
in
sub
sub
xchg
ljmp
roll
add
add
add
ljmp
rcrb
mov
repnz
in
inc
mov
or
mov
fwait
orl
jbe
int
and
daa
int3
ljmp
mov
jmp
sbb
aam
iret
and
daa
or
cltd
test
aaa
or
mov
fidivs
dec
je
xor
jmp
sub
stc
sub
sub
lods
push
sub
jmp
cld
stc
rorl
hlt
fs
mov
sbb
cmc
dec
lcall
xchg
mov
pop
pop
mov
idiv
ljmp
or
rcrb
adc
inc
shrl
push
lcall
xchg
adc
pop
ljmp
mov
sti
inc
insl
mov
je
leave
dec
enter
divl
lret
xor
jg
or
imul
xor
iret
sub
dec
fs
lds
dec
lcall
and
aad
lret
fwait
bound
cltd
data16
sub
sarl
fsubrl
icebp
adc
add
pop
sub
lea
loop
jmp
arpl
lock
or
and
xor
fistpl
pop
pushl
mov
inc
sbb
lods
dec
mov
mov
test
push
push
imull
cmc
insl
sub
or
ss
fisubl
pop
call
aam
lock
sbb
call
sub
sub
xor
lea
pop
jo
loope
popa
xchg
xor
aam
int3
mov
add
pushl
rorl
loop
in
andb
jp
jns
popf
mov
inc
inc
das
fdivl
loopne
in
inc
mov
and
and
movsl
clc
outsb
pushl
fidivl
pop
dec
dec
cmp
jge
stc
xor
imul
call
xor
sbb
xrelease
pop
jmp
scas
icebp
jae
shlb
sub
adc
pop
dec
cli
icebp
in
dec
mov
incl
jb
iret
filds
pop
mov
pop
mov
loopne
push
jg
cmp
mov
in
dec
loope
loope
mov
push
cmp
bswap
addb
cmp
popf
enter
mov
xchg
dec
fbstp
mov
cmc
lock
mov
ds
fnsave
mov
adc
xchg
call
out
sbb
je
mov
adc
aad
mov
jmp
call
pop
pop
repz
ss
out
add
cmp
pop
lcall
dec
mov
stos
call
in
adc
lahf
and
loope
dec
in
gs
jg
adc
mov
ljmp
push
xlat
xor
pushl
insb
mov
mov
adc
loop
fistps
test
fnstsw
std
call
xor
in
xlat
pop
test
sub
iret
jecxz
cmpsl
lods
xlat
andl
mov
sbb
or
test
xchg
jns
inc
pop
jmp
fnstsw
loope
jmp
and
mov
jne
xlat
mov
xor
ljmp
mov
repz
scas
jae
or
push
fcom
pushl
decl
or
jmp
insl
pop
push
out
push
mov
in
rclb
das
adc
mov
xor
fldenv
mov
and
pop
add
mov
xor
in
xor
inc
pop
movsl
fisubl
jbe
lea
xor
mov
and
ljmp
sbb
aas
cmp
sub
and
in
stos
sar
call
adc
std
clc
addr16
rol
std
cmp
addr16
imul
mov
or
addr16
fstp
inc
push
leave
das
test
pop
xchg
and
or
decl
cld
jg
push
jnp
ret
pop
push
mov
mov
jo
mov
pop
loopne
cli
inc
xor
or
push
div
dec
and
mov
and
inc
jbe
push
fmul
adc
call
out
fisttpll
inc
pop
xor
in
fsubs
int
movaps
cli
add
push
dec
loopne
aas
xchg
mov
mov
inc
addr16
lcall
imul
or
sub
mov
adc
sbb
dec
pop
sub
test
adc
pop
pop
pop
push
sub
in
ljmp
int3
stos
xor
shl
pop
sub
sti
gs
je
movsl
pop
loop
jecxz
pop
jp
pminub
clc
int
inc
mov
sub
push
cmpsb
push
add
ss
sub
and
add
push
inc
decl
fbstp
jge
jg
imul
outsl
mov
out
jno
push
mov
leave
ljmp
mov
push
inc
jmp
pop
sub
stos
mov
mov
out
inc
xchg
nop
fdivr
or
add
ja
inc
jb
sub
add
mov
lcall
or
sub
jnp
stos
xchg
clc
sti
cmp
xor
push
or
stos
dec
jg
or
inc
jecxz
icebp
adc
cmp
xor
pop
cmpsb
cmp
sbb
adc
jmp
sub
pushf
popa
mov
ret
dec
int
sub
call
or
pop
sti
jnp
scas
push
pop
orl
ljmp
call
jns
sub
pop
sbb
decb
sahf
ja
mov
iret
aas
lahf
into
lock
ljmp
jne
jmp
shl
jecxz
xor
and
and
aas
out
scas
es
fisttpl
ss
pushl
pop
add
popa
das
imulb
mov
adc
out
lock
mov
sbb
imul
fmulp
jbe
out
std
jp
nop
imul
incl
fsubrl
sbb
pop
mov
and
ds
jl
lcall
mov
sbb
mov
mov
pop
shrb
insl
inc
aaa
cli
call
cwtl
xchg
pop
dec
dec
xchg
std
xchg
addr16
scas
sarb
xor
loopne
push
or
lret
sbb
rcr
jne
jbe
pop
in
shl
sbb
das
out
xchg
jno
lret
cld
inc
call
inc
fists
stc
cmp
call
fildll
pushf
les
cs
xor
ret
lods
xor
gs
nop
int3
incl
rcrb
insl
xor
sub
lods
adc
out
les
xorb
call
dec
or
jb
lahf
stc
icebp
xor
std
es
neg
mov
std
inc
scas
aaa
push
pop
push
test
xchg
pop
inc
sarb
dec
or
fimuls
dec
xlat
iret
mov
jge
cmp
jbe
xor
inc
subb
jmp
in
lret
sti
pop
int
push
or
inc
ret
sub
cmpsb
inc
enter
mov
sbb
ljmp
sub
sub
je
sti
pop
lods
pop
dec
xlat
pop
ja
pushl
mov
sbb
pushf
inc
sahf
mov
xorl
or
inc
popa
decl
scas
pop
gs
repz
rcll
dec
es
or
dec
mov
out
out
mov
loopne
fs
repz
jns
nop
loopne
je
test
push
push
and
mov
dec
pop
stos
jg
jle
xchg
mov
aas
fcoms
mov
fdivrp
decl
repz
out
mov
push
push
add
and
vunpckhps
ljmp
lock
xchg
mov
xchg
pusha
lret
xor
out
cwtl
or
xchg
dec
jle
xor
call
adc
mov
mov
xchg
and
into
dec
gs
sub
lcall
xor
add
dec
inc
in
arpl
outsl
sub
inc
mov
sti
xor
xor
call
mov
mov
add
add
aaa
cli
jg
xlat
push
pop
cmpsl
jno
pop
icebp
test
lds
mov
jmp
add
mov
mov
lcall
aaa
dec
test
ja
lahf
sbb
loopne
mov
popa
imul
std
inc
mov
les
pop
mov
sbb
mov
fs
push
sahf
mov
or
fdivrp
mov
rcrl
add
call
push
out
lret
incb
ret
rcrl
and
pop
je
mov
sarl
mov
sub
jmp
outsl
insl
mov
or
xchg
or
cld
ljmp
push
sbb
jg
jmp
imul
ss
lcall
lods
and
jmp
out
rol
ret
lods
jae
psllw
dec
lcall
jle
and
cmpl
inc
shrl
sub
inc
subb
insl
lods
xchg
lcall
scas
pop
data16
sti
cmc
push
popf
and
test
add
pop
jp
adc
pop
jg
xchg
aas
clc
mov
push
pop
inc
int
sarb
push
imul
nop
decl
dec
and
gs
repz
data16
mov
test
pop
mov
repnz
mull
sub
dec
sub
push
popf
and
incl
divl
cwtl
or
test
outsb
fstpt
iret
mov
add
xchg
mov
jg
add
testl
adc
ror
inc
pop
jecxz
mov
sbb
lcall
out
scas
outsb
cmp
bound
inc
mov
mov
mov
pushl
pop
mov
es
mov
das
jge
jmp
movsl
mov
add
cmpl
bnd
fldl
movsb
mov
xor
or
mov
cld
ljmp
clc
mov
in
jecxz
int3
ficoml
or
pushf
sarb
arpl
dec
pop
ljmp
pop
clc
aas
pop
out
add
movsl
mov
lcall
xor
test
mov
sub
mov
mov
outsl
std
rorl
call
dec
xchg
inc
movsb
sti
lcall
hlt
incl
icebp
mov
rorb
or
push
in
dec
mov
call
aas
inc
jae
or
sahf
test
sbb
fucomi
xchg
cmp
jg
incl
sbb
pop
daa
pop
push
stos
insb
outsb
lcall
xor
cmp
fs
mov
jmp
test
in
sub
pop
in
in
xchg
gs
ss
int
rcll
sti
mov
inc
outsl
lahf
call
ljmp
movsb
jg
xchg
sahf
movlps
loope
loope
mov
or
lods
test
pop
jb
xchg
std
add
jg
mov
dec
aad
ds
adc
rorb
mov
jmp
movsb
adc
ljmp
dec
xchg
in
pop
add
jge
out
outsb
cmp
jo
fcoms
inc
rcr
push
imul
loopne
mov
enter
fldcw
loopne
imul
jne
jmp
mov
pop
and
cwtl
sbbb
mov
jg
incl
lods
cld
icebp
pusha
add
dec
and
ja
dec
ljmp
jae
subl
sub
hlt
cli
ljmp
xchg
xchg
mov
das
mov
pop
in
push
popf
insb
sub
call
pop
mov
fidivl
inc
bound
loopne
mov
inc
push
enter
leave
iret
xchg
and
and
inc
scas
call
hlt
jmp
jno
xlat
aam
cmc
pushf
pop
inc
xor
scas
in
stc
jge
push
dec
test
decl
jmp
into
mov
jl
icebp
loopne
xor
xchg
cmpsl
idiv
and
jae
and
imul
jnp
mov
enter
ljmp
mov
mov
inc
lock
das
clc
inc
jns
pop
out
js
xor
incl
or
ljmp
pop
int3
jne
jbe
scas
ja
fdivr
lret
cmp
jnp
lock
incl
fldl
stc
sahf
subl
sub
jg
incl
or
call
imul
lods
popf
xor
imul
xchg
movsb
xchg
out
jns
xorb
fwait
xchg
push
rep
cmpsb
jnp
jg
ljmp
lret
and
jge
fdivp
adc
cmp
mov
fbld
jl
pop
or
js
push
idivb
in
jle
inc
adc
jb
movsl
or
mov
sub
or
xor
aam
add
jno
out
outsl
jl
test
mov
push
add
jge
xor
clc
cli
imul
loopne
pop
aad
popa
or
xor
pop
movsl
mov
mov
dec
xchg
rcr
mov
mov
mov
push
xchg
mov
mov
lret
pop
fwait
jno
push
int
cmp
dec
decl
mov
popf
cwtl
pushf
inc
jecxz
sub
cli
pop
jbe
iret
jae
sub
push
cld
lea
pop
imul
loope
mov
jns
jp
icebp
pushl
and
adcb
sahf
not
stos
fisttps
or
jmp
sbb
cmc
stc
enter
xlat
adc
data16
sti
fisubl
mov
xchg
repz
rcll
jbe
jne
push
adc
js
sbb
dec
jge
push
les
fstl
inc
jne
aaa
inc
icebp
ja
call
fisubs
sub
or
into
adc
ss
movsl
adc
pushf
ret
lcall
lock
movsl
mov
mov
jb
sbb
push
mov
clc
jg
cli
pop
xchg
and
fisubrs
test
or
call
fldl
stos
cmp
arpl
fsubrs
push
jmp
popa
xchg
clc
jg
push
cs
dec
jns
mov
mov
daa
dec
sbb
aad
cmpsl
add
fwait
aaa
js
sti
ljmp
fstpl
adc
stc
fwait
or
mov
fistpl
cmpsb
mov
pushl
adc
xchg
sub
sub
fistps
xchg
mov
and
mov
add
movsb
lea
sbb
test
lcall
pushf
in
int
sbb
scas
jb
xchg
push
lock
add
jnp
mov
lcall
ret
pushl
lods
repz
sub
mov
das
icebp
cmpps
sub
lods
cltd
inc
sbbb
testl
jp
xchg
aas
jmp
sub
jl
in
lcall
and
ljmpw
hlt
jg
xor
lret
push
fimuls
mov
ret
jb
stos
hlt
leave
push
stc
clc
fucomip
dec
push
sarl
insl
inc
loope
xor
orb
data16
pop
outsb
je
or
xchg
sub
lcall
jecxz
inc
lods
inc
js
test
or
dec
dec
inc
cmpsb
in
dec
roll
pop
pusha
inc
jne
movsl
lcall
enter
inc
ja
pop
in
clc
ljmp
pop
mov
imul
and
scas
push
mov
stos
insl
push
cmp
pop
clc
inc
jle
cmpsb
aad
stc
adcl
loope
sti
cmp
adc
dec
call
cmc
cmp
jno
call
std
or
aam
rcrl
sahf
cmpsl
dec
data16
fucomip
ret
fists
cmp
inc
out
mov
icebp
pushl
popa
push
idivl
dec
xchg
icebp
fnstenv
xor
add
dec
clc
cmp
cli
pop
add
dec
insb
and
pop
jae
movsb
jmp
push
loope
jg
mov
mov
test
pop
or
fsubrs
pop
and
bound
add
lcall
and
jl
push
add
incb
pop
lahf
inc
mov
add
lods
sar
popf
incl
pop
or
lret
out
andb
mov
mov
aam
mov
xchg
lret
aam
jp
call
out
sti
xlat
adc
push
mov
repz
in
ret
lds
and
lods
fisttpll
scas
cmpsl
sub
imul
jb
sub
fnstsw
loope
xchg
sub
xor
adc
mov
add
fidivl
roll
das
cmc
loope
xchg
scas
ja
and
sbb
mov
roll
mov
movl
push
jne
repnz
pop
ljmp
repnz
jmp
daa
cltd
pop
rcrl
lock
xor
adc
add
js
roll
pushl
jle
insl
dec
sbb
dec
lds
ja
xchg
movsl
pushl
js
call
adc
mov
mov
fwait
cli
lcall
adc
and
ret
pusha
jp
mov
jg
gs
sbb
lcall
pop
or
push
dec
out
lods
mov
dec
inc
std
jmp
or
cmp
lcall
fcomip
adc
mov
fimull
repz
jl
ret
xor
add
mov
fnstsw
notb
std
adc
cmp
sub
lcall
and
clc
lock
out
dec
sub
loopne
stos
cli
dec
fmuls
cmp
push
icebp
sbb
sbb
dec
clc
jns
inc
sbb
shll
clc
incl
push
test
stos
into
push
arpl
aaa
xchg
pop
inc
mov
out
pop
push
mov
dec
xchg
mov
cmpl
adc
dec
jge
lods
adc
sbb
inc
cltd
pop
loopne
pop
cmc
scas
cmp
dec
add
pop
call
gs
push
pop
popf
cmp
loopne
loope
sub
pop
inc
push
das
incl
cmp
jo
mov
sub
pop
cltd
jb
repz
and
adc
pop
test
mov
icebp
jno
mov
repz
mov
push
fdivrs
inc
jp
icebp
jg
adc
xchg
add
fmul
sub
out
cmp
cmp
int
arpl
pop
inc
aam
testl
inc
mov
incl
push
mov
dec
fs
and
dec
fs
adc
outsb
dec
lret
or
cli
inc
je
in
hlt
gs
ret
insl
sbb
test
pop
ljmp
mov
push
sub
add
mov
pop
pop
lods
scas
test
rcrl
inc
adc
mov
add
je
mov
mov
hlt
sub
jge
sbb
inc
mov
push
or
popf
mov
out
adcl
dec
movsl
lods
fcmovnb
fistps
sbb
jb
outsl
and
cmp
vmovapd
lcall
sbb
cmp
pop
mov
aaa
ja
clc
mov
inc
mov
xor
and
adc
mov
push
pusha
mov
push
ffree
cmc
jno
inc
xchg
andb
les
incl
addr16
rcr
adc
lret
push
lret
mul
cwtl
jge
dec
jle
mov
ret
pop
movl
sbb
cli
inc
jo
mov
add
xor
call
fs
and
nop
dec
mov
inc
sub
xchg
mov
pop
xorb
lea
sbb
call
mov
mov
icebp
cmp
or
xchg
out
lahf
cmp
out
or
js
call
pushl
jg
out
js
adc
decl
or
inc
cltd
adcb
pop
mov
lahf
cmpsl
push
pop
xchg
inc
decl
insl
lock
lock
fcomps
pushl
xchg
mov
sub
push
jl
xchg
aad
call
mov
aas
ja
mov
call
aaa
cli
mov
cmpsb
outsb
lods
mov
mov
in
add
lret
data16
daa
adc
mov
xchg
fistpll
out
mov
neg
or
sbb
jmp
sbb
jns
push
mov
out
pushl
adc
cmc
insl
fiadds
repz
adc
cs
movntps
mov
lods
push
xlat
mov
testl
call
dec
push
dec
mov
icebp
push
xor
xor
shlb
pushl
jp
jb
popf
rcrl
adc
xchg
pop
aas
icebp
add
lcall
pop
movsb
pop
in
jg
xor
pushl
mov
nop
or
fstp
xchg
fisubrl
movsl
mov
mov
pop
or
rcll
outsb
jmp
xor
dec
jmp
cld
pop
hlt
call
sti
lret
dec
jg
daa
mov
ds
and
mov
div
lea
call
mov
stos
data16
xchg
sbb
pushl
pusha
and
mov
mov
jo
fadds
outsl
jle
jbe
repnz
call
xlat
dec
cmp
orb
scas
popa
pop
int
ret
cwtl
daa
popf
out
adc
cltd
mov
aaa
lock
jmp
pop
repnz
cmc
push
clc
sbb
adc
dec
decl
divb
pop
mov
fdivrl
std
ljmp
push
in
jbe
cld
mov
sub
decl
aad
xchg
imul
outsl
adc
adcl
dec
and
pop
mov
pushl
loop
mov
aas
in
fmull
fdivrp
xor
and
fldl
fldl
push
adc
outsl
sahf
xchg
sbbb
std
push
sbb
and
mov
dec
cmp
cmp
mov
or
call
das
cmc
aas
insl
bound
shlb
cmc
stos
jecxz
add
fcomps
jb
jns
bound
dec
jl
cmp
xchg
aam
pop
in
jge
cmp
sbb
mov
lcall
mov
jo
or
adc
fcmovb
in
sahf
decl
lock
push
xor
ror
add
xchg
dec
je
inc
mov
add
mov
mov
mov
sub
mov
fmuls
push
mull
scas
arpl
mov
lcall
push
testb
imulb
jns
or
test
das
lock
mov
cmp
sbb
outsl
pop
xlat
in
pop
mov
xchg
jge
test
mov
mov
inc
jae
dec
ljmp
out
scas
push
pushw
sub
dec
ret
cmp
icebp
das
out
xor
push
je
call
mov
add
push
lock
les
inc
cmp
mov
cli
mov
decl
jbe
inc
or
aaa
xchg
lods
jae
pop
mov
loope
fcompl
pop
sub
stos
mov
jg
mov
inc
lcall
outsb
jno
es
call
or
adc
adc
or
inc
fdivrl
xor
outsl
mov
mov
lret
ret
add
shl
stos
rclb
addl
mov
dec
fucomip
sub
neg
or
sub
cmpsl
inc
ljmp
int
jl
fwait
stc
pop
dec
and
jge
stc
jns
mov
lcall
aam
mov
mov
rorb
add
mov
jnp
sbb
jmp
jb
inc
sbb
imul
aad
fiadds
je
sti
stc
cld
pop
or
or
andl
jmp
pop
mov
mov
push
lea
jmp
pop
dec
jb
push
dec
lcall
lret
loope
jns
arpl
shlb
es
ljmp
xor
inc
sub
mov
ljmp
or
sbb
mov
mov
pop
leave
arpl
dec
push
xchg
clc
jg
jg
inc
sahf
jo
adc
out
jge
ljmp
adc
xchg
imul
dec
dec
or
fs
dec
bt
sub
in
ficoms
inc
mov
pusha
ljmp
rorl
notl
icebp
lds
and
outsb
cmpsl
clc
call
ss
imul
mov
lock
gs
pop
clc
call
xor
into
mov
inc
push
fcmovu
lods
mov
inc
push
and
sub
push
fwait
rcrl
addr16
dec
aad
pushl
daa
and
cltd
fdivs
shr
adc
enter
stc
decl
sub
xchg
ds
push
popa
shll
into
push
dec
pop
stos
idivb
shrb
fs
insb
pop
and
incl
test
fdivrl
push
pop
dec
dec
imul
cli
call
popf
mov
or
sbbb
jle
push
or
daa
mov
xchg
icebp
mov
cwtl
or
cmp
pop
add
lds
jp
aam
pop
fucomip
cs
popf
inc
lcall
das
icebp
add
out
pushf
popl
lret
outsl
inc
cmc
xchg
aad
stos
mov
movsl
fisttps
and
sub
pop
cmp
fnsave
enter
xchg
sbb
jb
icebp
xor
lcall
clc
ja
jne
add
jae
mov
gs
xor
pop
loop
lcall
xchg
and
and
in
cmc
or
popf
test
xor
jle
test
lea
jecxz
test
adc
test
fistps
xor
xor
sub
mov
call
jnp
dec
fcoml
in
fcoml
lret
mov
cli
fsts
xchg
cmp
incl
adc
fimuls
xor
xchg
inc
or
decl
std
jp
xor
xchg
cmp
mov
sub
lods
mov
das
push
cvtps2pi
jae
test
outsb
inc
int3
mov
decl
cmp
mov
jae
stos
mov
rcr
iret
cwtl
cmp
cmc
xchg
mov
pushl
push
mov
in
cmp
mov
test
imul
mov
add
xor
je
aad
jmp
rorl
mov
in
push
fstps
popf
xor
test
dec
cmp
jle
mov
adc
aad
mov
lods
test
lcall
pushl
push
call
or
xchg
iret
xchg
or
sbbb
pop
pop
push
cmp
and
jg
sbb
dec
andb
je
in
into
repnz
in
inc
lods
insb
fs
stos
lods
ljmp
jbe
dec
add
out
addr16
shll
popa
loope,pn
adc
aaa
pop
js
or
dec
lret
inc
test
mov
dec
fstps
push
adc
inc
jmp
divb
outsb
scas
mov
data16
inc
fnstenv
adc
xchg
ds
pmaxsw
or
clc
clc
fnstcw
insb
cmpsl
pop
mov
mov
arpl
mov
jge
call
inc
cmpsb
mov
mov
mov
pop
cmp
inc
cli
ljmp
add
fdiv
jl
pusha
out
test
fcoms
pushl
sub
sbb
pop
fsubrs
popa
stc
shlb
or
aad
mov
sbb
push
cmp
dec
inc
lret
repnz
pop
sarb
rolb
scas
out
std
decl
out
enter
jp
int3
cwtl
outsl
add
je
mov
fcomip
stos
pushf
mov
stc
fbstp
pushl
sbb
fsts
inc
lcall
std
loopne
push
mov
add
pop
js
jmp
mov
xchg
mov
sub
jp
shl
andb
lret
iret
mov
jmp
or
adc
xor
adc
inc
sub
cmp
or
inc
outsl
jne
lea
dec
cmpsb
repz
dec
dec
sbb
dec
push
incl
adc
dec
sbb
adc
fisttpl
testl
fstp
out
inc
push
test
jge
xorl
shrl
jnp
mov
cld
mov
clc
pop
fs
clc
repz
repz
push
push
ljmp
mov
cmp
add
lret
jecxz
xchg
sar
sti
hlt
outsl
pop
cmp
imul
std
pop
ljmp
sub
stc
das
mov
fcoms
decl
sbb
sbb
jnp
pop
xor
or
add
filds
cmovo
and
jae
xor
shll
fcompl
xchg
jmp
call
cwtl
or
xchg
cwtl
loopne
sub
xchg
int
lods
and
aaa
insb
pop
icebp
adcb
incl
push
adc
outsl
test
cwtl
mov
and
int3
sti
incl
cmp
mov
fucomi
inc
das
push
sahf
dec
fwait
jp
push
inc
addb
pop
hlt
xchg
ja
lahf
mov
jns
cwtl
cld
ja
aaa
clc
call
xchg
hlt
ljmp
sub
or
mov
hlt
fistl
das
icebp
inc
cs
pop
movsl
arpl
dec
pop
adc
jl
dec
bound
mov
aam
mov
mov
int3
frstor
or
cltd
ret
mov
fdivrl
aas
ljmp
add
sahf
mov
sub
lahf
ss
repz
cmc
pop
adc
clc
mov
or
and
shlb
decl
test
pop
xor
push
cmpsb
mov
pop
out
jmp
cmp
sbb
and
xor
jnp,pt
xchg
and
inc
pop
mov
inc
inc
pop
inc
into
subl
decl
mov
daa
jae
mov
mov
cmpsb
xor
shll
dec
push
mov
out
push
bts
clc
std
cmp
test
and
sbb
or
jl
ljmp
xchg
dec
jne
mov
enter
fwait
push
fildll
jmp
cmp
insb
xchg
push
adc
fcmovne
pushf
rclb
cmp
dec
lcall
push
movb
scas
sbb
dec
mov
loop
jne
repz
sar
mov
xor
shr
jo
xor
jmp
out
inc
movsl
mov
addl
lret
adc
and
dec
outsl
inc
sar
sbb
mov
mov
ljmp
pop
loopne
and
test
popf
ret
mov
in
or
mov
decl
sti
pop
inc
or
bound
lret
daa
in
jp
out
daa
cmp
dec
cwtl
xlat
or
jnp
sbb
xor
fidivl
aaa
clc
incl
shll
sub
mov
jp
cld
inc
repnz
imul
cwtl
cmp
cmp
stos
call
rclb
push
stos
es
push
adc
push
sbb
lcall
inc
dec
imul
stc
dec
push
inc
push
popa
outsb
cs
dec
cmp
repnz
mov
mov
icebp
xchg
dec
jo
jo
dec
sbb
or
jnp
mov
call
ret
loop
mov
mov
xlat
adc
mov
inc
pop
xchg
dec
int
insl
mov
sar
mov
dec
outsl
adcb
sbbl
pop
xlat
mov
movsl
out
movsl
outsl
lock
incl
ret
mov
movsl
jmp
ja
mov
inc
push
es
clc
mov
dec
jmp
jg
subb
jno
std
push
adc
lcall
orps
sbb
push
outsb
pop
aam
add
jmp
cs
xor
sub
pushf
add
push
out
testl
cmp
fsub
enter
fisubrl
cli
pushl
jl
movsl
int
sbbb
gs
mov
add
pushl
add
mov
jg
cmp
jg
mov
stos
inc
stos
gs
xchg
rclb
dec
lahf
int
sahf
xchg
and
lcall
dec
pop
sbb
xchg
shll
sub
in
out
std
mov
cld
add
and
and
out
jbe,pt
rolb
cmpsl
sub
mov
and
icebp
inc
dec
mov
in
sub
add
cmpsb
out
and
and
loop
cmc
int
lods
adc
in
test
mov
cld
add
mov
jg
jle
test
popf
scas
and
bnd
loopne
and
lods
aaa
mov
adc
rolb
add
sbb
xor
lret
jg
insl
cmc
mov
fdivl
xchg
scas
outsb
ja
mov
cmpsl
or
shll
sbb
or
and
jle
push
outsl
hlt
jmp
test
fimuls
out
jl
fdivrl
or
pusha
cmp
cmp
mov
or
pop
loopne
dec
mov
inc
rol
addr16
push
mov
call
das
ja
push
pop
cmpsb
into
testb
imul
push
fs
jb
js
aas
pop
cmp
xor
push
icebp
cmp
pop
ljmp
pop
xlat
repnz
ss
aaa
fnstsw
ljmp
fcmovne
out
out
cmp
dec
repz
out
inc
repz
out
decl
xchg
or
pop
in
xchg
mov
inc
jp
dec
inc
inc
bound
sub
pop
loop
cmpl
push
push
and
repz
lcall
pop
ljmp
pop
xchg
dec
pop
dec
xorl
lret
lcall
call
push
push
jo
js
ret
sbb
inc
push
cmp
sub
addr16
jae
add
and
jbe
pop
mov
mov
decl
cmpsb
mov
push
mov
mov
cwtl
and
xor
decl
aaa
jne
rol
jmp
xchg
loopne
cmp
cmpsb
push
ljmp
int3
xor
andl
add
int
xor
or
cmpsl
cmp
add
inc
pusha
fdivrl
jb
ficoml
outsb
lcall
clc
sub
xchg
inc
cmpsl
mov
fistpl
and
mov
xchg
xor
cmp
jns
sub
add
aad
sti
call
nop
scas
daa
pusha
push
nop
incl
jg
push
flds
les
jnp
pop
mov
pop
inc
out
ror
mov
dec
ror
adc
loope
mov
aad
test
stos
xor
mov
xlat
mov
push
lahf
sbb
mov
push
aam
xor
sub
sub
adc
or
adc
mov
jp
mov
icebp
or
decl
or
punpckhwd
mov
push
cmp
pusha
fwait
mov
jp
insb
das
cld
jmp
mov
test
dec
mov
mov
ficompl
outsb
cmp
incl
decl
push
into
roll
push
push
in
mov
fdivr
lods
incl
aam
and
xchg
fwait
sbb
xor
jmp
pop
xor
call
outsl
clc
add
pop
and
pop
mov
bound
pushl
fdivs
mov
pop
xchg
in
arpl
sub
inc
pop
sbb
mov
or
orl
call
repnz
or
lahf
xchg
jno
aad
fistps
dec
scas
pop
jmp
ret
mov
mov
adc
cmp
jae
outsl
fildl
add
mov
jnp
cmp
add
lods
sub
ficoml
xchg
dec
pushf
ja
pop
data16
jmp
repnz
rclb
xor
mov
ret
push
jno
fld
les
lods
loop
push
push
repz
incl
insl
push
pop
cmc
xchg
xchg
cwtl
movsb
ds
xlat
inc
ret
sub
aam
data16
xor
ret
dec
call
loop
call
sti
cmc
sbb
out
sub
pushf
cmpsb
mov
xor
cltd
lea
xchg
and
incl
fistpll
add
jg
pusha
lahf
insl
enter
jge
push
fdivs
call
inc
js
mov
cmp
sub
sub
ficoml
sbb
movsl
fwait
inc
add
movsb
push
lahf
and
loope
xorl
outsl
incl
jo
jbe
ja
ds
pop
mov
aas
inc
ret
pushf
rclb
xor
jp
sbbb
ret
sub
pop
loopne
in
adc
pop
mov
push
das
icebp
jmp
xchg
pop
sub
xchg
das
std
pop
mov
ss
or
rclb
sub
xor
fld
mov
dec
lret
inc
mov
hlt
insl
sub
inc
xchg
call
shll
jg
mov
push
fnstcw
mov
jg
and
sub
or
push
int3
xlat
xor
mov
lock
std
pushf
sahf
or
cmp
call
xchg
pop
jno
and
fistpll
cmp
jmp
cmc
mov
arpl
mov
mov
sub
pop
cmp
outsl
lock
push
mov
push
stos
test
repz
mov
pop
mov
bound
mov
shll
dec
outsb
cmpsl
mov
repz
sbb
imul
mov
inc
into
les
or
pushl
mov
sbb
push
push
decb
fsubs
push
decl
adc
and
aad
stos
out
add
imul
rclb
jne
and
std
movsl
xchg
cwtl
jae
pop
cmp
or
mov
inc
cld
pushfw
ljmp
cmc
xor
or
pop
xor
mov
fcmovnb
adc
aaa
cltd
xor
dec
cmpsl
ljmp
cmpsl
loope
and
mov
xchg
mov
cwtl
and
mov
test
stc
mov
imul
jl
out
stc
push
sub
in
lea
inc
loop
push
cmpsl
leave
add
mov
mov
out
mov
pushf
dec
popa
int3
pop
test
repnz
ljmp
std
ljmp
leave
cmp
adc
xor
scas
out
ret
inc
popf
push
inc
aaa
dec
incl
fmuls
addr16
repnz
mov
enter
sub
adc
incl
fisubl
fisttpll
jnp
pop
sub
shll
daa
push
push
enter
or
mov
jl
add
push
sub
scas
repz
mov
es
cs
loopne
add
dec
pop
scas
repz
std
js
sbb
sub
out
ja
jns
xor
push
lahf
xchg
nop
out
sbb
addr16
stc
mov
cwtl
sub
fnsave
and
cmpsb
loope
push
stc
les
cli
movsb
rorl
mov
lcall
loop
sub
into
in
aas
lea
inc
pop
xor
pop
test
dec
lahf
xchg
into
into
cltd
mov
pop
scas
sbb
mov
push
jb
bound
test
jg
add
mov
mov
xchg
lret
jnp
lcall
dec
insb
lcall
es
aam
mov
adc
jbe
dec
mov
or
inc
pusha
movb
decl
scas
adc
mov
sub
cld
pop
orl
in
dec
jno
lcall
ljmp
bound
xor
pop
stos
or
sahf
adc
loopne
or
mov
lret
dec
cld
call
sti
insl
pusha
stos
lods
cmc
mov
inc
and
add
lcall
std
das
xor
mov
dec
fdivrs
pop
push
call
sub
aam
xor
sub
das
mov
fdivr
decl
xchg
ljmp
dec
mov
ret
ljmp
das
icebp
ljmp
jb
mov
cmp
pop
rep
pop
sahf
jnp
pop
dec
lock
mov
pop
mov
cli
mov
pop
ljmp
addl
cmp
push
mov
xor
repz
sub
clc
je
jns
jg
out
rolb
subl
mov
sub
pop
scas
add
test
pop
iret
xchg
jge
cmp
shr
icebp
mov
dec
lods
jg
lcall
jp
stos
lods
push
in
ljmp
mov
js
jne
push
nop
lods
mov
incl
mov
or
cwtl
lret
sahf
push
sbb
inc
push
das
mov
je
mov
mov
sbb
decl
mov
lods
mov
cmpb
insb
push
pushf
cmp
loope
test
jg
adc
jae
or
and
xchg
insl
push
bound
jg
push
outsb
aad
lods
popf
xlat
adc
push
push
dec
loop
xor
mov
and
aas
or
pop
mov
out
lea
insl
gs
dec
call
lods
dec
icebp
lods
ss
jne
and
cmpsb
push
ret
pushl
cli
adc
mov
gs
push
cmp
jno
lret
cmpsl
call
decl
fidivs
icebp
int
orl
jbe
in
inc
fldt
in
xchg
xor
fildl
shr
mov
cltd
les
ss
mov
or
mov
scas
fs
xchg
imul
inc
ss
mov
das
cld
movsl
int
or
inc
nop
xlat
pop
and
xchg
jmp
jb
pop
popf
cmp
dec
enter
ljmp
nop
dec
lea
mov
sbb
mov
mov
call
pop
jg
mov
mov
stos
mov
popa
test
std
fisttps
leave
lea
add
sahf
std
ret
stos
test
outsl
lret
mov
push
pushl
fdivr
imul
xchg
popa
out
push
dec
adc
adc
shlb
es
cld
out
or
cmp
icebp
jl
fimuls
ret
and
inc
cld
push
sub
cmpsb
pop
js
xorl
test
jp
mov
sub
pusha
test
outsl
insl
sub
inc
subb
std
dec
add
mov
fisubrl
push
jne
cmp
mov
mov
mov
aaa
cli
decl
ret
or
popf
cmp
mov
cmp
xlat
decl
aam
dec
pushl
loopne
adc
hlt
sbb
test
imul
and
aaa
clc
pushl
push
cmp
pcmpgtd
int3
loopne
fcmovnu
loop
das
mov
and
or
fsubrl
adc
cmp
in
mov
mov
dec
loopne
call
clc
mov
sahf
mov
in
fsubr
push
sub
cmc
addl
cmp
popf
test
jle
aas
fildll
iret
sub
mov
cmp
cmp
and
xchg
inc
je
xchg
inc
incl
push
repz
mov
and
xlat
mov
aaa
push
insb
cmpsl
cli
lcall
lret
pop
movsb
ss
add
mov
push
mov
js
out
sahf
jmp
test
addb
jge
lahf
mov
int
lcall
das
jnp
fdivr
add
das
shll
loope
cli
flds
lods
add
add
mov
out
push
jmp
push
ret
or
or
pop
mov
jmp
jbe
or
cmpl
push
jne
add
xchg
subb
jno
test
outsl
mov
cmp
push
adc
inc
aam
jne
cmp
jne
lea
mov
or
adc
test
mov
das
jl
xchg
lea
add
mov
inc
sbb
mov
test
movsb
arpl
mov
insb
jle
lea
push
test
fldt
add
and
outsb
add
pushl
sbb
push
call
pop
mov
add
incb
cmp
test
add
push
push
push
mov
roll
xor
fisttpl
leave
je
js
lods
cmp
xchg
or
fisttpl
cmp
je
inc
dec
jmp
cmp
repz
rol
aaa
and
ret
add
or
ret
into
pop
pop
pop
pop
jmp
pop
aas
mov
adc
add
sar
pause
stos
ljmp
movsb
pop
xchg
mov
or
mov
clc
out
das
mov
inc
es
xor
or
out
fmuls
or
shlb
ret
jp
lods
add
add
stos
mulb
dec
cwtl
or
jmp
xor
data16
in
in
shr
sti
add
je
add
sub
mov
add
sti
cmpsb
dec
add
jmp
push
adc
mov
jnp
or
test
loop
jmp
mov
adc
lcall
lods
or
das
add
mov
lods
stos
jmp
mov
add
or
int
mov
fadds
add
fsts
lods
dec
popf
add
movl
push
jge
adc
sbb
scas
insl
pop
mov
mov
cli
rorl
cmpsb
mov
add
inc
inc
push
xor
out
add
inc
dec
cwtl
shrl
adc
mov
fcompl
push
mov
jge
add
push
fistpl
jecxz
xchg
cmp
and
decl
mov
loop
xchg
mov
mov
add
mov
adc
and
push
sub
loope
cmpsl
sarl
xorl
mov
add
pop
rclb
addr16
jae
mov
jle
mov
cmp
push
push
add
ljmp
push
pop
sbb
push
movzwl
add
ljmp
cmp
jl
lock
sub
inc
or
clc
jne
nop
out
decl
testb
je
shll
or
and
cltd
fdecstp
imul
push
pop
lods
lods
mov
loop
or
sbb
in
jl
or
or
cmp
or
addb
or
push
dec
sub
add
es
cmp
mov
sbb
movsl
add
jmp
add
adc
xor
test
ret
sub
xchg
mov
cmpsb
sub
shrl
or
nop
test
jne
push
xchg
movsb
repz
inc
adc
adc
testb
dec
dec
inc
inc
inc
push
and
push
dec
push
sbb
sbb
and
fs
or
jbe
or
jb
movq
inc
aam
and
arpl
insb
and
stos
in
lcall
mov
jmp
je
fs
popa
insl
imul
mov
jae
outsl
jb
nop
insl
insb
push
jne
push
mov
mov
lods
or
xor
jg
rcl
mov
fadds
xor
dec
jne
jmp
xchg
lock
ret
lea
pop
and
adc
cs
xlat
and
dec
inc
ja
fadds
mov
cmp
das
nop
pop
mov
mov
sahf
inc
test
or
and
inc
loopne
in
push
pushf
out
out
mov
mov
push
xchg
and
add
fstl
sbb
or
add
mov
imull
ret
es
aaa
daa
push
jb
push
and
add
fdivl
push
add
add
or
or
adc
ret
aad
and
inc
push
pusha
jo
mov
rorl
add
add
pop
adc
push
inc
inc
or
jg
or
or
or
or
movups
adc
inc
rdmsr
adc
rcll
push
push
cmp
jb
add
cli
xor
das
add
mov
mov
xchg
inc
adc
or
loopne
and
jmp
or
mov
decb
adc
aaa
mov
aad
sub
adc
into
shr
mov
fisubrl
iret
push
add
or
mov
add
mov
mov
out
xlat
addl
push
pop
ret
inc
inc
and
fst
adc
loope
mov
mov
pusha
xor
repz
mov
and
adc
out
mov
jbe
xor
mov
out
call
pop
mov
pop
add
cmp
mov
jb
mov
inc
add
push
addb
or
push
adc
xor
xor
add
shl
add
inc
sbb
mov
xchg
jp
insl
jge
pop
xor
cmp
add
add
jl
mov
mov
pop
dec
mov
into
and
cmp
fdivrs
out
in
subb
pop
cmp
or
jmp
daa
mov
stos
sub
subl
ss
dec
faddl
mov
or
cld
add
jnp
call
inc
mov
sbb
or
test
cmp
mov
push
je
xchg
push
mov
test
or
cmp
jo
inc
add
mov
cmp
jb
push
adcb
loop
add
or
add
xor
mov
xchg
or
loope
imull
mov
push
scas
ret
pop
lret
stc
or
adc
mov
xchg
cs
test
clc
andb
sub
scas
fnstsw
or
inc
mov
out
jmp
cmp
push
in
in
sub
or
sbb
dec
ljmp
xor
jge
jae
mov
xor
adc
lret
shrl
or
mov
cmp
in
mov
cli
mov
sbb
outsb
ret
jb
push
outsb
pop
jae
xchg
inc
add
mov
sbbl
sarb
mov
mov
clc
push
push
call
xor
mov
and
or
adc
cmp
clc
cmp
xchg
lea
and
push
push
lret
sbb
std
or
sbb
mov
or
lret
dec
jae
add
rcrb
je
fsubl
jge
pusha
xor
add
adc
repnz
jle,pt
rclb
lea
or
inc
add
addb
notb
call
add
jo
aaa
jbe
mov
push
add
mov
cmp
inc
stos
call
xor
xchg
cmp
add
xor
rclb
mov
or
xor
pop
xchg
outsl
add
sbb
enter
jge
inc
cmp
jb
lea
mov
and
or
scas
popa
stos
adc
ret
xor
pop
sub
xor
dec
shll
adc
mov
add
and
sbb
inc
jmp
jne
push
pop
mov
and
jg
inc
shr
jle
cmp
dec
xor
dec
mov
test
adc
inc
adc
jmp
daa
push
sbb
js
cmp
pop
jl
pop
stos
mov
in
adc
mov
and
inc
repnz
push
adc
push
lea
aad
stos
mov
sub
orps
mov
mov
lods
and
pop
mov
insl
cmpb
mov
jmp
sbb
test
lea
insl
imul
jecxz
pop
sub
fsubrl
ss
adc
sbb
push
jmp
fwait
mov
xchg
mov
pop
dec
dec
jne
sbb
push
adc
mov
inc
neg
std
xchg
cmpsl
push
and
sub
cmp
add
and
shr
inc
shrb
es
or
addl
movb
mov
dec
or
insl
sub
and
fwait
push
jmp
aam
jmp
or
out
cmp
push
or
aad
or
jmp
rclb
iret
loopne
and
ljmp
mov
ljmp
imul
inc
mov
pop
mov
hlt
mov
xchg
xor
sarb
je
cmp
jb
fnsave
push
xchg
push
outsl
std
push
inc
add
or
push
mov
sub
fcmovne
mov
dec
aad
pop
dec
adc
or
sub
or
mov
mov
shr
inc
int
out
das
pusha
inc
sub
icebp
sbb
lea
dec
jb
in
jmp
add
and
or
test
mov
loop
or
pusha
xlat
in
sub
rcll
mov
sbb
sahf
lds
xchg
or
sbb
iret
xchg
adc
cwtl
popf
xchg
out
fcoms
std
mov
loope
xchg
in
mov
push
pop
jg
push
adc
lea
cmp
scas
jae
push
test
shrb
roll
adc
mov
cld
mov
enter
push
jae
enter
jl
shlb
adc
or
jmp
adc
sub
or
aad
sub
jne
lret
stc
and
add
dec
add
add
push
push
addl
xor
enter
outsb
inc
jne
insb
mov
sbb
setbe
orb
pop
pusha
mov
shlb
pop
insl
jae
arpl
or
add
stos
pusha
mov
pop
adc
add
cmp
push
push
fistpl
add
push
mov
add
std
jg
pop
hlt
pop
ret
into
cld
cli
pop
clc
add
jle
stos
ljmp
in
imul
or
xor
dec
sub
mov
mov
mov
fidivrl
sub
mov
mov
fcomip
fs
pop
rcll
push
mov
xchg
adc
outsb
call
mov
xchg
push
jo
push
bound
mov
negl
int3
jle
add
fsubs
push
add
dec
pop
adc
insl
adc
fwait
mov
lcall
pop
mov
inc
and
in
jo
inc
mov
sub
aas
adc
icebp
clc
jl
mov
je
cwtl
push
adc
inc
and
lock
dec
out
shrb
repz
movsb
push
jmp
fs
xchg
cmpxchg
mov
xchg
or
sub
popl
mov
jmp
fdivrl
repz
call
add
pop
inc
pusha
and
stos
clc
sub
fimull
pop
std
mov
les
push
call
insb
fsubrp
jmp
nop
sti
sbb
or
jne
clc
or
xchg
push
and
lods
and
push
fcoms
push
shll
sbb
xorb
dec
popa
sbb
inc
fucomi
sbb
aas
and
inc
pop
add
stos
mov
or
adc
and
jmp
scas
test
adc
jmp
and
jmp
xchg
xchg
andb
add
cwtl
fucomip
or
mov
mov
ret
add
loope
pushf
jmp
or
mov
lods
mov
push
adc
push
inc
add
pop
jbe
orb
stos
sbb
mov
pop
mov
and
mov
subb
push
lahf
pusha
stos
popa
adc
jmp
fidivrs
adc
inc
adc
sub
outsl
mov
call
sub
in
pusha
and
notl
test
and
insl
and
add
adc
outsb
push
push
jmp
xorb
pushf
dec
clc
fists
cld
push
push
push
insb
daa
sub
add
or
rorl
jae
inc
push
inc
mov
stos
push
stos
dec
jmp
push
mov
or
xor
call
sub
and
xor
test
push
notb
adc
sub
jo
pop
mov
std
mov
arpl
or
xor
mov
push
adc
mov
sti
push
jns
rorl
sbb
pusha
adc
xchg
test
add
push
add
push
dec
aad
mov
nop
xor
mov
jmp
inc
adc
jmp
pusha
mov
lods
lahf
sub
emms
call
jmp
xchg
sti
fld1
jnp
add
lea
clc
add
adc
sbb
inc
pop
shll
movsl
xchg
sbb
sub
or
jmp
mov
bound
push
mov
cmpb
and
pushf
sahf
test
mov
and
test
std
adc
stos
add
ja
data16
call
fwait
sarb
add
mull
loope
movsb
and
test
jl
push
mov
or
pop
pusha
pop
addr16
out
jmp
call
call
sar
sub
and
xchg
roll
xrelease
adc
divb
aas
mov
shlw
dec
mov
sub
add
inc
pop
mov
inc
add
fsubr
jge
or
popa
sub
push
and
aam
push
stos
inc
add
inc
loope
and
clc
pushl
in
xchg
inc
cmp
movsb
inc
jge
jmp
or
movsb
hlt
lds
ret
xor
repnz
sti
push
adc
dec
insl
xor
lcall
mov
ret
jno
aaa
adc
lds
sub
mov
into
cld
icebp
inc
and
std
mov
in
dec
dec
inc
sbb
insl
in
fisubl
adc
test
mov
and
inc
jbe
cmp
mov
mov
gs
add
int
inc
adc
xorb
loopne
add
mov
mov
repnz
push
jecxz
cli
push
and
incl
jmp
jecxz
aam
add
cmp
lea
pushl
push
xchg
pop
cli
mov
fistps
adc
addb
mov
lret
lea
fadds
mov
into
jg
jle
in
jo
mov
loopne
jae
xchg
cmpsl
or
mov
dec
fstl
push
jb
cmp
rorb
aaa
add
push
mov
jl
call
int3
decl
or
mov
push
adc
loopne
imul
adc
mov
imul
add
clc
pop
fidivrs
xchg
push
add
jmp
mov
ret
js
or
and
and
pop
ret
mov
lea
cmc
mov
test
inc
push
dec
aam
pop
lcall
and
and
test
std
sahf
popa
xchg
push
pusha
add
jecxz
fists
out
scas
aam
lock
lret
and
mov
push
add
adc
inc
insl
adcl
mov
ret
jo
testb
dec
fisttpll
shrl
call
push
add
in
insl
daa
mov
jge
int
lea
fmuls
push
and
aam
pop
loopne
mov
sahf
xchg
xchg
test
sub
jno
cs
add
jmp
push
cmpsl
adc
fistl
pop
add
pushf
repnz
add
mov
gs
aas
fs
push
ret
jl
insl
dec
mov
inc
insl
add
aas
sub
pop
jge
inc
movsl
pop
int3
dec
jge
imul
dec
inc
mov
rcrl
aad
aad
aaa
clc
lcall
push
pop
test
loope
sahf
push
and
cmc
push
inc
fists
push
cmp
stos
xchg
inc
xchg
sub
test
add
cs
inc
loopne
adc
test
sub
decl
mov
inc
or
int3
or
inc
jp
mov
incl
iret
int3
pop
fcmovne
in
cmp
and
dec
dec
adc
outsb
pop
insl
jmp
xchg
cmpsb
addr16
int
jp
icebp
fwait
push
sarl
mov
jae
std
jmp
push
hlt
jne
mov
and
iret
call
insl
pop
fcos
jg
subb
xchg
imul
jns
xor
aam
sub
int
dec
in
lcall
idivb
adc
shlb
fcomi
inc
ret
insl
sbb
mov
cs
add
idiv
imul
popa
sbbl
cmpsb
mov
lock
repz
repnz
ret
push
adc
mov
icebp
ret
jle
mull
inc
inc
out
dec
or
clc
or
mov
scas
sbb
das
mov
sbb
or
out
add
daa
adc
test
call
jle
add
adc
add
jmp
lods
push
lds
jbe
test
mov
inc
jge
ljmp
jg
aas
inc
xchg
gs
mov
cmp
jp
gs
insl
and
in
mov
subb
jo
sub
jg
or
notb
xor
add
fildll
xchg
icebp
ljmp
ljmp
jle
add
and
jmp
cmp
test
inc
popa
xchg
ds
inc
ja
mov
repz
jl
pop
hlt
add
mov
pop
repnz
mov
push
movsl
decl
cwtl
jp
mov
and
lret
adc
jp
into
repz
push
scas
jp
adc
sti
inc
sar
les
ljmp
ljmp
imul
cmp
insb
mov
dec
sbb
repnz
repnz
xchg
gs
pushw
orl
incl
insl
cmp
call
cli
mov
sbb
mov
push
xchg
mov
imul
sbb
movb
pop
ficompl
push
cli
cmp
aam
push
imul
push
inc
call
ret
jb
je
ret
ret
das
arpl
add
lcall
jecxz
xorps
jg
int
jbe
in
enter
and
hlt
pop
adc
das
adc
mov
or
aad
sarl
push
stc
xlat
sbb
aas
mov
movsb
sbb
iret
andb
into
sti
mov
movl
stc
inc
js
xor
out
pop
stc
leave
jecxz
dec
and
shl
cmp
andb
inc
fisubrl
cmovp
repnz
mov
repz
pusha
dec
mov
arpl
sbb
out
pshufw
out
push
in
loop
fwait
insl
mov
addr16
movsb
cmp
bound
adc
add
and
das
loopne
or
cmpsb
cld
and
or
jp
jns
xchg
mov
mov
out
and
fcompl
add
xor
fcom
lret
lea
insb
pop
mov
mov
je
addl
aaa
aam
jmp
pop
mov
notb
sbb
rcrl
lds
clc
adc
lods
stc
mov
xor
adc
sbb
dec
gs
ljmp
ror
subl
scas
mov
hlt
aas
pushf
fs
jmp
aas
adc
loop
fwait
arpl
pushf
push
pop
pop
cmp
sarb
adc
xor
fnstsw
sub
pop
sub
lcall
shlb
insb
jae
fdivr
jg
sti
cmp
daa
mov
mov
pop
push
jmp
jae
sub
mov
idiv
ret
stc
dec
mov
xor
cmpsb
jbe
sbb
lcall
enter
shr
push
mov
cmc
je
call
pop
negl
fisubrs
lock
out
cmp
mov
pop
dec
test
mov
aad
lret
pop
sub
push
lock
scas
jle
push
mov
xchg
mov
mov
jmp
das
jg
mov
nop
pop
pop
imul
incl
sbb
sti
mov
lds
sbb
add
or
das
cld
and
dec
pop
mov
cwtl
cmp
inc
mov
mov
add
addl
lcall
and
fwait
jnp
mov
xchg
fcmovnu
pusha
lcall
cmpsb
lds
xchg
dec
nop
jnp
mov
lds
mov
stc
sbb
pop
adc
pop
cmc
out
jle
addb
xchg
xor
jmp
inc
out
pop
inc
inc
or
mov
jp
stos
and
incb
scas
add
mov
stc
jb
fistps
cmpsl
dec
dec
outsb
lds
pop
push
hlt
pop
adc
jne
js
mov
push
jnp
sub
xchg
jg
jns
int
push
cmc
dec
loope
mov
push
add
push
sbb
stos
sti
mov
mov
mov
xor
push
mov
data16
dec
cli
jg
cmp
fnstenv
xor
mov
fwait
insl
jecxz
mov
jnp
scas
fwait
and
push
inc
and
gs
dec
adc
popf
inc
inc
add
mov
jecxz
and
repz
lcall
arpl
inc
add
mov
js
mov
movsl
or
in
fists
stos
subl
outsb
cld
in
pop
mov
cmp
push
sub
mov
and
adc
mov
sbb
and
clc
inc
jmp
cmpl
cmpsl
mov
cld
inc
inc
orb
pushf
fstpt
test
jbe
decl
push
xor
mov
mov
or
aas
negb
jge
mov
rol
mov
clc
aas
fnstsw
mov
loopne
imulb
sub
pop
repz
jp
call
add
scas
lds
or
cmc
punpckhdq
jp
dec
arpl
mov
mov
jg
xor
in
jmp
loop
ljmp
test
xor
push
pop
xor
insl
mov
mov
pop
adc
cmp
vpsubusw
mov
jo
mov
adc
mov
stc
cmp
xchg
mov
in
int3
push
adc
sub
je
je
mov
adc
fldl
inc
xor
stos
into
cmp
mov
inc
je
aaa
je
sbb
push
lahf
xor
pop
fdivr
out
clc
out
into
sti
and
fstps
xchg
pop
push
icebp
push
inc
iret
fcmovb
dec
inc
or
clc
outsl
push
mov
jp
imulb
xor
mov
pop
scas
push
push
or
loopne
jp
outsl
out
sbb
loop
dec
repnz
pop
movsl
andl
pop
fsubrs
pop
push
sti
push
lea
push
mov
lds
xchg
or
jle
add
inc
and
test
push
in
mov
out
mov
int3
incl
int3
das
ds
ja
or
mov
ja
cli
lea
mov
arpl
lret
fiaddl
mov
ljmp
out
lea
lds
hlt
gs
push
loop
rol
ljmp
dec
fldl
fisttps
iret
cmc
scas
lret
jg
dec
push
test
mov
enter
xchg
mov
js
pop
scas
lret
loop
fwait
data16
arpl
pop
pop
aas
cmp
addr16
jg
sbb
inc
jge
jbe
cld
xor
rcr
pushf
mov
and
shrl
pop
adc
mov
mov
sub
push
out
mov
pop
ljmp
jg
in
rcll
xchg
enter
in
lcall
fldenv
stos
mov
add
add
add
mov
loop
sbb
add
add
out
sbb
shrl
add
lcall
arpl
sub
add
in
inc
outsl
data16
mov
add
cli
out
xchg
gs
push
inc
add
adc
fstpl
aas
or
inc
aad
ds
daa
and
cmp
fcomp
sub
push
imul
adc
ret
sbb
test
dec
mov
and
sbb
shrb
fnstenv
inc
je
repnz
jae
adc
push
mov
outsl
outsl
jo
insl
push
rcr
or
mov
inc
outsb
jbe
outsl
push
in
insl
fcmovnbe
fcoms
imul
inc
sbb
add
dec
outsb
outsw
adc
and
js
and
add
mov
add
add
mov
nop
adc
cmp
push
xor
mov
imul
add
xchg
and
jo
add
sbb
or
popa
mov
adc
add
or
cmpb
insb
mov
inc
cld
cmp
outsb
inc
push
dec
adc
add
fisubl
or
pop
and
popa
adc
xor
clc
inc
aad
stos
xchg
pop
jb
jae
into
sub
lds
push
jae
dec
sbb
or
jb
add
pop
hlt
pop
jo
arpl
and
pop
fisubrl
cmp
pop
je
jle
fidivrs
outsb
test
insb
data16
fstps
orb
popa
cmpsb
mov
xchg
push
or
roll
push
jmp
mov
or
push
xor
sbb
test
lock
xchg
and
add
mov
inc
lods
pop
and
xor
les
xorb
push
xorb
nop
data16
sub
sub
cmp
and
push
mulb
pop
nop
and
addb
sti
or
add
xchg
or
arpl
or
dec
sub
andb
daa
test
sbb
jmp
or
sbb
dec
jp
adc
pop
xlat
add
and
pop
cwtl
add
mov
adc
rorl
adc
add
incl
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
