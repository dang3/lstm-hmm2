sbbl
mov
iret
jns
cld
imul
aas
sub
fs
mov
lret
fwait
test
cmp
cld
addr16
mov
pop
dec
aaa
sub
cltd
fsubrl
xchg
gs
add
mov
incl
jmp
add
mov
lea
rcrl
js
js
xchg
repnz
stos
mov
out
adc
add
lcall
lea
cwtl
lcall
lcall
mov
imul
xchg
fwait
call
cwtl
xchg
xchg
sahf
xchg
fwait
call
inc
test
cwtl
popf
mov
iret
leave
rcrl
cmpsl
lcall
cli
adc
lock
lock
imul
mov
xchg
clc
test
popf
lea
mov
in
add
loope
iret
lret
je
jle
xchg
idivl
inc
lret
fwait
lcall
je
mov
and
add
test
por
scas
lods
cmp
mov
sbb
sahf
aaa
mov
hlt
xor
xchg
cld
xor
xor
xchg
xor
xor
das
hlt
cs
cld
sub
adc
and
mov
les
call
and
and
aam
enter
scas
cld
push
mov
sbb
sbb
and
push
mov
fcoms
mov
enter
or
mov
or
or
pop
or
cld
add
add
xchg
push
xchg
dec
subb
pop
cmp
subl
aaa
out
paddusw
or
add
sub
pop
les
mov
test
je
adc
je
idivl
mov
int3
aas
and
dec
add
jb
addr16
cmp
xlat
stos
scas
test
ljmp
aas
mov
in
ljmp
inc
inc
lret
cmpsb
mov
icebp
repz
out
pop
fsubl
xchg
and
add
xor
cmp
repnz
movsb
ss
jl
jecxz
rorb
insb
ljmp
test
inc
bound
out
repz
notl
je
jbe
stc
pop
cli
adc
ficomps
test
cmp
xchg
stc
orl
xchg
mov
mov
loopne
dec
mov
inc
xor
add
int3
and
or
loop
out
fbld
pop
in
loope
les
pushf
xor
xchg
cld
xchg
movsb
mov
jl
dec
mov
test
jmp
mov
movsb
adc
fdivrs
mov
jge
scas
jg
mov
idivl
das
dec
mov
push
jmp
pushf
mov
repz
dec
dec
lret
xor
in
pop
scas
jae
ds
jae
scas
sub
iret
in
xor
xchg
push
shl
mov
call
bnd
repz
xchg
nop
jp
cmpsl
mov
testl
loopne
or
pop
in
inc
repz
dec
cmp
dec
cmpsl
sti
movsl
iret
and
jmp
jecxz
inc
fwait
lock
pop
mov
fistps
xchg
mov
jl
ss
cmp
mov
out
mov
hlt
negl
jnp
dec
pushl
jmp
pusha
imul
ret
dec
push
inc
and
dec
and
repz
push
jp
repnz
out
mov
in
stos
jmp
outsb
out
stc
jne
sub
mov
mov
cmp
loopne
sbb
cmp
stos
dec
adcl
std
ljmp
iret
jmp
lock
ljmp
loopne
std
fildl
jb
push
stos
in
xchg
add
mov
inc
sub
mov
mov
movsl
in
mov
aad
xlat
inc
int3
fildl
dec
test
dec
inc
aam
pop
or
outsl
ljmp
push
pop
and
cmp
ds
mov
scas
and
mov
lods
cmp
call
test
aam
fildll
sub
stos
fsubs
arpl
sbb
shr
pop
dec
shrb
push
adc
das
test
inc
mov
mov
sti
aas
into
add
and
jb
jae
mov
mov
or
lods
test
jb
dec
dec
sti
jg
pop
out
aas
inc
out
adc
jb
push
repnz
cltd
push
inc
xor
lods
push
xchg
xor
inc
xchg
or
jne
cld
cmp
adc
lret
cmp
jl
dec
mov
andl
test
sub
cmp
and
int
xor
cmpsl
pop
jmp
mov
pop
iret
test
adc
cmpsl
rorl
aad
jnp
das
lds
call
jne
cmpsl
mov
or
xchg
mov
test
cmpsb
push
push
add
leave
mov
cmpsb
repz
cmp
test
and
add
push
and
fimuls
pop
cmpsb
gs
iret
cld
mov
cmpsb
gs
lcall
cmpsb
inc
idiv
mov
xchg
cmc
mov
hlt
inc
hlt
stc
xor
jl
xor
dec
cli
hlt
adc
jb
scas
lods
pushl
cld
ljmp
ss
imul
pop
sbb
scas
or
repz
ljmp
hlt
cmp
mov
shll
sub
stc
adc
jb
stc
xor
xor
shll
pushf
xor
inc
xchg
ja
cs
lods
repnz
dec
repnz
inc
cli
add
mov
inc
addr16
push
xchg
sub
jb
ljmp
test
cld
add
mov
ds
aas
cli
in
inc
lret
cmp
inc
jnp
lea
pushf
cmp
lock
add
add
xor
popf
xor
fmull
pop
add
mov
lret
int3
sub
sub
and
push
sub
xchg
repnz
add
lea
addr16
push
ljmp
cltd
add
push
or
fsubrl
or
outsl
xlat
das
xchg
inc
push
xchg
inc
stc
sub
inc
xor
ss
xchg
dec
test
add
fcoml
hlt
leave
imul
dec
or
xchg
mov
nop
ror
mov
xchg
mov
dec
insl
iret
rolb
inc
stos
mov
xchg
hlt
xchg
push
out
fwait
pushf
or
hlt
dec
ds
leave
popf
rorb
lret
cli
je
add
xchg
arpl
bnd
mov
inc
sarl
add
in
mov
cmp
inc
lahf
push
cmp
xchg
push
jl
aaa
xchg
jae
dec
jmp
stc
push
mov
nop
int3
aaa
cmp
lcall
or
popf
shl
xchg
cld
ret
mov
pop
loopne
cltd
mov
ss
lahf
stc
mov
popf
inc
add
jb
scas
stc
pop
inc
scas
pushf
inc
pop
mov
pop
push
ret
out
mov
lods
fadd
fwait
scas
mov
sbbl
mov
loopne
sbb
push
ds
mov
roll
mov
adc
movhps
ret
inc
jle
in
out
push
or
xchg
pop
int3
cmp
push
out
jmp
inc
add
fdivrp
ret
sub
mov
jmp
je
loopne
hlt
xor
fidivrl
fidivl
xor
hlt
lock
xchg
outsl
out
imul
xorb
jmp
push
hlt
sar
int
and
cmpsl
call
je
repz
je
mov
push
cmp
arpl
fisttps
in
jnp
mov
scas
jp
aam
dec
fwait
ds
mov
mov
xchg
jge
stos
aad
mov
mov
fildll
scas
mov
mov
jmp
call
xchg
out
std
stos
stos
es
incl
fcom
fwait
cld
ljmp
pushl
ja
repz
sti
cld
add
inc
loopne
stc
aas
stc
mov
loopne
icebp
shr
nop
add
dec
divb
fiadds
mov
stos
xchg
xchg
inc
lea
add
sahf
xchg
xchg
nop
mov
popf
lcall
std
mov
nop
fwait
lcall
repnz
fstpt
or
cld
push
pushf
rorb
clc
cmp
data16
dec
and
or
data16
adc
inc
data16
clc
lods
xchg
pushf
xchg
and
out
or
pop
scas
mov
out
dec
inc
adc
jbe
dec
icebp
fdivp
stc
repz
cmovb
out
cld
cli
clc
std
rcll
clc
scas
repz
daa
ds
out
clc
stc
outsl
das
jb
pop
test
mov
fs
loope
leave
or
popf
mov
lahf
aas
jg
rcrl
lcall
jmp
pop
cmp
lea
adc
jecxz
les
hlt
hlt
fdivrs
pop
inc
into
cld
jae
sbb
leave
jge
add
loopne
ror
mov
xchg
cld
push
dec
cmp
adc
mov
daa
std
iret
add
aad
mov
mov
mov
lret
mov
dec
inc
xor
sub
mull
mov
mov
test
fwait
stos
inc
adc
mov
lret
lcall
imul
xchg
jge
scas
movsl
xchg
jmp
mov
and
jge
dec
cltd
movsb
outsl
add
iret
int
aad
int3
sub
mov
and
ret
mov
in
insb
shll
scas
popl
inc
xlat
jle
xlat
jp
sub
xchg
out
repz
xchg
out
test
data16
lret
push
shl
in
out
repz
leave
sti
sti
shll
insb
cli
jmp
aam
jmp
outsb
jmp
cmpb
in
sbb
cld
jmp
repz
mov
bnd
sbb
jmp
cld
jmp
repz
mov
out
jecxz
fistpll
and
daa
xor
daa
inc
ss
sub
add
in
stos
in
int
test
or
push
xchg
ret
ret
jns
lret
mov
out
jne
cmp
jb
mov
add
popf
jp
pushf
addl
mov
pop
jmp
adc
jb
lahf
dec
scas
stc
pop
fcmovne
repz
jecxz
fldt
mov
aas
sub
inc
pushf
rorb
mov
lods
push
leave
jg
shr
xor
cltd
out
sbb
pop
add
gs
out
gs
push
fbld
stc
jnp
push
int3
and
mov
int
pop
imul
lret
jg
bound
pop
pop
aaa
dec
stos
jecxz
jb
pop
inc
stc
pop
rolb
mov
jmp
add
and
dec
xlat
mov
icebp
loopne
sti
adc
pop
xchg
xor
ljmp
or
ret
mov
lock
faddl
and
jnp
inc
out
idivl
pop
cli
testb
or
push
dec
ja
inc
cld
mov
insb
out
adc
in
xor
pop
mov
add
dec
out
je
jns
mov
and
pop
fwait
rclb
fstl
popa
adc
mov
jl
cmp
lds
inc
or
test
dec
sub
fadd
sarb
test
mov
or
mov
ret
pop
jp
mov
js
add
and
sub
hlt
jle
pop
test
cmp
movsb
lock
test
mov
add
jbe
adc
sbb
push
mov
es
call
call
xchg
dec
iret
scas
int3
imul
sti
dec
adc
pop
call
dec
mov
cmp
fstpt
push
in
inc
or
cmpsb
in
add
ljmp
mov
notl
xchg
std
pop
stos
adc
loope
jmp
daa
pop
iret
loop
sub
cli
push
push
mov
cmpsb
sub
jmp
in
cli
pop
add
fists
je
pop
mull
out
sbb
out
daa
and
lahf
lock
movsl
cmpsl
push
pop
mov
fmul
out
movsl
pop
in
repz
jg
jns
clc
stos
js
jo
jl
and
mov
das
cmpb
js
cmp
jmp
ret
adc
cli
lds
lods
pop
ret
in
cmp
adc
aas
test
out
repnz
pop
mov
push
sub
and
shlb
xor
cmp
imul
lahf
xchg
pop
sar
fwait
pop
cmp
jbe
clc
sbb
fwait
nop
shll
or
pop
mov
xor
dec
xchg
lea
xor
lcall
inc
dec
shl
lret
xchg
lret
and
cwtl
cld
and
and
pop
lret
push
and
sub
sbb
int
outsl
add
add
ret
call
divl
scas
cli
daa
scas
mov
inc
jl
jmp
das
pop
sbb
pop
xchg
notb
jmp
cmp
das
sbb
clc
xor
lods
lods
cld
push
and
adc
aad
push
out
xchg
jmp
jns
dec
idivl
mov
cmp
subb
or
jl
sub
ljmp
xchg
push
repnz
je
adc
sti
cltd
jle
and
ret
insb
xchg
push
push
testb
shl
sarb
pusha
jbe
adc
ret
jl
mov
lock
adc
xchg
pop
or
je
xchg
fdivs
add
jl
lea
jp
mov
mov
aam
loope
dec
xchg
mov
je
cld
mov
scas
mov
xchg
pop
je
je
in
aad
xchg
mov
pusha
add
sahf
in
idiv
jl,pt
std
scas
and
pop
inc
or
jl
sti
jl
adc
sbb
cmp
mov
mov
jbe
mov
and
push
mov
repz
cli
je
ja
sub
cmp
jl
out
jno
mov
dec
add
lahf
jb
imull
adc
adcl
or
lock
ds
mov
or
imul
out
cltd
outsb
mov
cltd
out
inc
mov
xchg
adc
cmc
cld
mov
imul
hlt
sti
mov
sbbb
mov
out
dec
leave
ds
fs
pop
imul
testb
inc
scas
pop
mov
mov
cld
xchg
aam
movzbl
push
xchg
mov
cmp
xchg
ret
sbb
mov
mov
mov
mov
stos
mov
and
add
mov
nop
pop
jp
cmpsb
out
sbb
je
add
add
cmp
push
pop
cld
mov
rcl
fstpt
xlat
add
mov
cmpsb
xrelease
jbe
mov
pop
jecxz
xchg
setno
or
shl
jl
jecxz
cmp
push
cmp
stc
pop
adc
loopne
jb
in
xor
enter
jnp
fildll
xor
pushf
cmp
xchg
cld
cmp
lods
arpl
out
xchg
outsl
cmp
cmp
loop
jae
xchg
sti
xchg
cltd
pop
clc
dec
lods
sbb
mov
insb
fisubs
inc
out
test
cmc
notl
scas
add
jnp
cmp
mov
cmc
dec
lods
xchg
fcmovnb
cmp
jno
in
mov
je
jns
je
ret
je
mov
or
movsb
mov
xchg
mov
mov
in
clc
sbb
out
inc
iret
je
and
pop
mov
or
cld
pop
cmc
cwtl
int3
xchg
fldl
mov
icebp
or
jmp
jmp
in
jbe
testb
or
cmp
push
sub
inc
lock
repnz
inc
repnz
inc
ret
arpl
jl
add
mov
cmpsb
adc
mul
push
xchg
jg
xlat
lcallw
xchg
adc
or
or
pop
push
push
hlt
std
int3
pop
push
add
mov
sti
mov
dec
mov
clc
loopne
jmp
notb
loopne
lcall
mov
push
movsb
fistps
and
xchg
dec
inc
incb
cli
xor
lahf
imul
hlt
ss
setg
inc
iret
mov
outsb
push
fisubl
add
jge
repz
ficoml
scas
fimull
pushf
pushf
mov
cli
inc
in
stos
cmpsl
das
aas
call
in
pop
daa
push
mov
lcall
rcl
in
cmpsl
sbb
in
mov
in
fdiv
fcoms
push
filds
mov
mov
pop
and
mov
xchg
fwait
xchg
lcall
nop
pushf
mov
dec
add
jns
lods
std
mov
sahf
fwait
mov
popf
lea
sbb
enter
nop
fwait
mov
mov
lcall
mov
rol
cmpsb
repnz
cmp
fldl
xchg
mov
pushf
lock
in
xchg
mov
sub
hlt
cld
loop
jnp
test
orl
ljmp
test
xchg
jecxz
lea
cwtl
fidivs
mov
xchg
mov
cli
dec
xchg
movsb
mov
push
aam
lcall
in
cld
scas
dec
cmp
out
pushl
jb
xchg
nop
and
mov
testl
sub
adc
nop
or
sub
sahf
dec
mov
mov
lock
or
lock
jo
repz
inc
shlb
sub
xchg
and
cltd
stc
lcall
roll
hlt
xchg
xchg
repz
mov
popf
psllw
lahf
pop
jmp
jo
int
xchg
je
push
xor
aad
lea
stos
nop
nop
xchg
xchg
data16
out
xchg
sahf
mov
cmp
bound
cmp
ljmp
decl
les
dec
mov
shl
test
mov
lods
mov
jp
js
inc
push
std
fmuls
xchg
cmpsl
cltd
cmp
lods
in
call
and
xchg
lcall
mov
mov
xchg
test
jp
dec
shr
lret
mov
pushf
nop
mov
adc
sahf
sbbb
stos
mov
cltd
dec
or
xchg
nop
aad
lods
ljmp
sbb
xchg
inc
mov
sahf
pushf
jne
call
ljmp
xor
test
faddp
dec
mov
dec
outsb
jbe
xchg
mov
mov
in
data16
fisubrs
lret
xchg
lock
fsubrs
idivb
std
testb
shll
xchg
mov
push
daa
fdivs
mov
cmc
neg
pusha
filds
add
into
sbbb
ja
push
arpl
xor
pop
into
add
ljmp
add
pop
mov
mov
jne
pop
int
int
int
int
int3
ljmp
add
add
int3
mov
pusha
int3
push
int3
add
icebp
lret
loopne
lret
jae
gs
push
lret
out
lret
movsl
lret
add
add
or
lret
sti
leave
out
leave
out
pushf
leave
popa
leave
cmp
sub
adc
pop
cmpsl
add
add
leave
jmp
in
fcmovne
aam
leave
enter
enter
enter
enter
fadd
int
add
add
cmpsb
sahf
xchg
movl
inc
loop
mov
les
add
les
test
ret
rol
ret
xchg
ret
dec
ret
inc
ret
aas
ret
fadd
enter
ret
add
scas
ret
jno
imul
ret
push
ret
or
mov
aad
rsm
out
arpl
out
or
and
sub
clc
xchg
xchg
add
insl
xchg
add
or
pushf
and
or
pop
fcoms
jmp
addl
push
jp
or
lock
jbe
test
xor
enter
pop
cld
std
aas
push
xor
out
inc
and
mov
cmp
outsl
mov
stos
mov
stc
aaa
lcall
lock
fdivrs
outsl
lods
dec
dec
aas
push
insl
lock
xchg
dec
mov
lsl
aas
inc
cwtl
clc
push
enter
push
stc
addr16
fists
and
fs
int3
push
cld
dec
jmp
loope
gs
push
cld
mov
gs
jg
pop
inc
sub
fnstcw
adc
in
mov
xchg
gs
aad
icebp
jnp
xchg
xor
mov
xchg
pop
xchg
gs
subl
das
inc
stc
xchg
and
stc
es
fsts
mov
xchg
aas
pop
imul
clc
inc
cld
cmp
xor
jmp
add
xchg
xor
cld
iret
mov
xchg
lea
pop
inc
and
cmc
and
cld
pop
xchg
gs
fxch
mov
push
inc
arpl
scas
lds
inc
push
xchg
shl
mov
clc
pop
cld
sub
adc
lret
cld
dec
adc
sahf
arpl
hlt
xor
and
ret
mov
lret
mov
lods
mov
mov
mov
xlat
clc
jecxz
repz
and
cld
fcmovnbe
mov
sub
xchg
mov
mov
gs
push
inc
cmp
xor
pop
pop
or
std
and
jno
aas
adc
xchg
gs
push
cld
gs
cwtl
gs
jmp
mov
cwtl
push
leave
cld
stos
and
cld
add
inc
sti
fcompl
scas
std
fs
mov
out
outsl
pop
mov
inc
out
outsl
sti
jp
mov
lcall
enter
xchg
stos
sahf
mov
and
mov
mov
lahf
cld
lods
cltd
pushf
mov
lods
setb
mov
mov
jge
cltd
mov
fbstp
test
mov
pop
lret
and
mov
ds
jg
out
dec
jge
idiv
iret
daa
ds
out
popa
mov
cld
lahf
dec
mov
push
cld
mov
mov
not
std
filds
cld
and
rorl
jmp
jecxz
mov
std
sar
mov
jmp
dec
cld
mov
mul
sahf
loopne
inc
bnd
test
not
mov
nop
cld
repnz
jno
mov
add
push
fwait
pop
adc
cld
mov
insb
mov
daa
mull
xchg
mov
out
xor
jnp
cmp
jg
and
iret
nop
int3
daa
cmpsl
pop
lcall
mov
hlt
test
xchg
ljmp
mov
sub
lock
push
movsb
pop
in
decl
loop
sub
xchg
test
add
jg
loopne
rolb
mov
mov
mov
cwtl
hlt
add
mov
je
or
cwtl
fs
fs
mov
clc
aas
incl
int
cld
xor
xchg
dec
jno
clc
icebp
dec
cs
lods
pop
fldt
insb
insl
outsb
hlt
mov
adc
nop
pop
add
nop
lea
xchg
fistl
mov
mov
loope
repz
iret
in
pop
mov
cs
sarb
mov
shlb
pop
jb
xorl
push
xchg
push
mov
mov
inc
mov
mov
int3
cmp
jbe
andb
adc
nop
xchg
xchg
xchg
jb
inc
pusha
hlt
rcrl
xchg
and
mov
mov
add
je
jecxz
mov
addr16
lock
sub
sti
and
inc
idiv
out
lods
scas
je
lods
jbe
jle
adcl
js
sbb
inc
mov
xor
jl
testl
adc
scas
push
adc
ftst
jb
mov
out
iret
into
je
cld
ds
imulb
sti
repz
mov
je
out
pop
pushl
out
cld
ffreep
fmull
cmc
cmp
add
add
scas
inc
lock
or
fninit
jb
add
xchg
jb
daa
adc
daa
mov
cs
clc
sbb
jmp
hlt
incl
in
enter
enter
lock
int3
jnp
mov
lret
mov
jl
mov
xchg
div
clc
mov
enter
cmpsb
iret
jne
clc
jo
hlt
out
mov
dec
and
cmp
cmp
nop
dec
stc
add
in
adc
sbb
and
inc
out
xchg
xchg
and
jle
adc
lock
inc
and
in
jo
xor
in
xchg
js
add
and
cmp
sbb
or
xchg
fcomp
and
fs
inc
inc
in
popf
in
add
add
push
sub
mov
inc
pushf
in
sbb
frstor
sbb
pushf
and
filds
inc
inc
stos
stos
xchg
xchg
xlat
mov
mov
daa
nop
xchg
dec
push
and
in
out
fsubr
test
or
cmp
cmp
inc
ds
clc
pushf
jl
adc
inc
ss
fsubr
fdivrs
adc
inc
ret
in
mov
add
and
adc
lahf
in
mov
lods
inc
inc
jle
jl
loop
lcall
jle
test
repz
lahf
je
adc
fisubrs
lock
stc
enter
mov
dec
dec
cmp
loop
push
or
cwtl
fdivr
and
xor
add
jno
in
sbb
pusha
add
push
in
les
and
jmp
add
loop
inc
mov
dec
jl
cld
in
lods
je
leave
sub
cld
fistps
or
xor
in
push
ljmp
filds
inc
dec
loop
cmp
pop
call
in
mov
dec
inc
flds
jge
lahf
mov
mov
lock
decl
fadds
cmp
cmp
cmp
scas
loopne
cmpsl
and
mov
js
cmp
daa
cmp
xchg
nop
stos
or
idivl
or
and
or
jle
mov
loop
inc
dec
faddl
add
push
bound
in
mov
inc
js
inc
mov
in
incb
jmp
in
mov
dec
es
inc
jl
lods
scas
je
and
mov
decl
jo
lahf
lock
inc
shlb
inc
in
cmpsb
pusha
inc
cmp
in
sbb
daa
out
cmp
mov
inc
jnp
pushf
addb
out
pop
inc
mov
and
popf
fdivrs
mulb
mov
in
dec
iret
xor
fmul
in
adc
inc
jo
into
fsubs
sbb
les
arpl
add
pushf
xchg
push
cli
sahf
int
pushl
inc
lock
adc
enter
sub
cmp
fwait
mov
in
push
lcall
dec
adc
add
lret
pusha
mov
mov
mov
cmp
inc
mov
ficoms
rcll
sbb
inc
in
fimull
dec
cld
lcall
jge
lret
cmp
jnp
in
adc
and
idivb
or
sbb
push
stc
cmp
mov
mov
lcall
mov
xchg
dec
or
clc
shlb
cld
adc
mov
cltd
fldlg2
rolb
or
add
add
test
xor
adc
pusha
pusha
xor
cmp
jae
add
fucomip
js
aaa
icebp
ret
lahf
js
mov
mov
addr16
add
sub
mov
shr
and
dec
xor
cli
inc
and
dec
shr
popf
and
add
shlb
xchg
mov
cli
std
or
sbb
adc
mov
movsb
les
shr
test
and
xchg
add
mov
dec
int3
cwtl
or
add
test
das
cli
inc
or
bound
shr
fwait
cli
xchg
cmpsl
int
xchg
and
jmp
in
in
jecxz
roll
sbbl
adc
pop
outsl
stos
test
fistpll
xchg
add
fistpll
sbb
fildll
in
fwait
add
mov
pushf
xchg
popf
lret
xchg
add
mov
rcr
out
cmp
add
and
xor
sub
test
dec
sub
into
int
lret
lret
or
imulb
inc
sbb
call
dec
push
xor
hlt
xor
xor
adc
and
push
mov
cld
jns
jae,pn
or
dec
jmp
pop
mov
inc
loop
outsl
jge
in
jl
ja
xorb
and
mov
mov
enter
adc
setb
or
js
adc
cltd
jbe
leave
push
hlt
push
push
lock
dec
hlt
inc
dec
lock
adc
hlt
xor
dec
sbb
arpl
mov
adc
mov
xor
div
fistps
notl
aaa
push
pop
test
std
and
xchg
dec
mov
mov
cld
xchg
pushf
fsub
or
andl
mov
std
add
bound
adcb
leave
xchg
rcll
jmp
add
fildll
fwait
mov
fildll
xchg
lret
push
hlt
dec
test
std
xchg
mov
ret
inc
adc
mov
scas
xchg
xchg
repnz
sub
lret
stc
jbe
sbb
je
sbb
sub
jb
cmp
push
je
aam
out
jbe
cmp
sub
nop
repz
pop
repnz
xchg
xor
mov
jb
mov
int3
mov
pop
test
mov
sti
xchg
sbb
test
addr16
mov
pop
repz
pop
xchg
hlt
testl
jae
adcl
stos
xchg
fcmovne
add
repz
inc
lahf
bound
and
mov
out
scas
loopne
and
jne
decb
lcall
movsb
mov
test
shl
mov
cltd
add
cmpsb
addl
cmpsb
int
mov
sbb
scas
out
mov
dec
sbb
pop
out
iret
clc
sbb
sti
fnstsw
jne
sbb
pop
fidivrl
js
jle
iret
sbb
jg
mov
cli
in
pop
cmpsl
lds
mov
lret
outsb
sbb
jge
aaa
nop
mov
lds
mov
adcb
adc
scas
mov
lahf
out
cmc
cmpsl
scas
out
outsb
push
insl
push
scas
pop
sub
scas
ficompl
repz
dec
cmp
push
cmc
repnz
scas
sub
mov
mov
cwtl
adc
and
add
les
mov
mov
mov
add
sbb
mov
or
dec
add
negl
mov
jmp
icebp
shl
mov
sub
jl
decb
sahf
clc
or
jl
bound
in
insb
icebp
imul
data16
movsb
ja
jg
xchg
inc
and
aaa
fucomi
sub
or
cmp
sbb
xlat
sub
jecxz
cmp
and
icebp
fcomip
pop
or
mov
divl
push
outsl
movsb
xchg
sub
test
clc
mov
icebp
jns
mov
mov
pop
xchg
jmp
out
lds
cmc
jb
cvtps2pd
cltd
pop
daa
aaa
adc
lods
repz
inc
pop
pop
out
cmp
in
cli
andl
inc
or
jg
jno
mov
cmp
dec
daa
daa
cmp
sldt
inc
ror
dec
repnz
mov
lock
inc
out
pop
stos
test
nop
les
sub
jmp
fimull
inc
and
insb
shll
pop
cli
push
fdivp
jns
inc
jb
aas
std
imul
jge
jp
hlt
push
cltd
je
repz
les
push
mov
shlb
hlt
fists
clc
pop
adc
pop
xchg
push
xchg
out
mov
and
std
or
and
push
mov
jbe
rol
out
cmpsb
lea
jp
pop
pop
cmpsl
cmpsb
and
aaa
mov
je
das
cltd
inc
out
pop
sti
mov
dec
cwtl
loopne
idiv
sub
in
test
jl
mov
sub
jmp
xchg
add
test
add
movsb
ljmp
iret
scas
scas
cld
mov
aam
and
jb
incb
xchg
dec
fidivl
int3
ds
sub
lcall
dec
xorb
jne
enter
lds
movsb
pop
pop
jge
fidivrs
jae
xor
pusha
or
inc
push
sbb
in
mov
mov
imul
loopne
gs
push
lea
mov
mov
cld
cmp
fucomp
push
lods
pop
out
add
notl
enter
cmp
iret
jne
sahf
push
mov
test
les
sbb
hlt
call
aaa
into
cmpsb
dec
xchg
cmc
int
push
repz
lods
sbb
lea
lock
ja
aaa
testb
jg
call
scas
mov
outsl
xchg
fcmovbe
outsl
scas
mov
fildll
scas
dec
jne
cmpsl
ret
pop
xor
stos
fsubr
jbe
scas
dec
fildll
shlb
push
fucomp
mov
lea
scas
push
lahf
cmovne
in
push
cmp
pop
push
scas
mov
fidivrs
das
jnp
adcl
xchg
jmp
sti
fidivs
insb
repz
xor
inc
ror
xchg
mov
ljmp
fsubp
mov
pop
ret
pop
push
mov
jecxz
mov
and
adc
popf
xor
ja
adc
in
jno
push
add
lar
push
out
arpl
lds
out
push
repz
xchg
icebp
cmp
cwtl
xchg
out
pop
cmpsl
lret
pop
jg
dec
lahf
xchg
shrl
jb
scas
cmpb
sbb
and
jl
jae
add
cli
imul
or
mov
stc
push
fldl
jl
push
xchg
rcrl
xor
aas
sbb
add
aaa
mov
xor
fmulp
pop
fldcw
cmc
ficomps
add
repnz
jb
data16
fdivs
adc
loope
repz
orl
jbe
movsb
adc
out
mov
les
pop
lret
and
test
jnp
les
addb
mov
scas
adc
and
fadds
je
les
mov
mov
xchg
lods
mov
call
mov
sbb
les
test
jbe
aad
or
dec
push
outsl
pop
test
add
mov
stos
mov
mov
add
add
loopne
jb
cmp
ret
xchg
scas
pop
mov
outsl
repz
loop
push
sti
repz
test
dec
jecxz
push
jmp
sbb
lcall
inc
fldenv
aas
jne
ret
test
xchg
aas
mov
aas
enter
pusha
aas
decl
mov
pushf
cs
lret
push
or
cmpsb
loopne
adc
ret
adc
in
psubd
clc
aam
lods
nop
and
into
sti
aas
pop
sti
sahf
hlt
arpl
aam
pushf
jle
mov
mov
inc
data16
mov
stos
hlt
pop
adcb
add
incl
xchg
mov
fildll
mov
jo
fildll
adc
mov
mull
sub
movsb
sub
or
mov
std
fbstp
lcall
fucomip
and
movsl
fs
dec
fists
mov
imull
jle
inc
pop
fiadds
cmpsb
mov
int3
cmp
add
jno
lock
into
fldcw
mov
std
lea
adc
sub
hlt
jle
fdivrl
jbe
imul
mov
int
adc
repz
jle
cmp
mov
jmp
mov
sub
je
je
fidivs
cs
jl
rol
mov
add
ds
loop
mov
push
in
jb
xchg
ss
mov
add
cli
jecxz
pop
mov
stc
call
push
enter
in
mov
out
add
sub
push
add
jne
aas
sti
ds
add
jb
inc
ds
mov
and
shl
push
in
icebp
cmp
push
movsb
mov
mov
int3
je
push
mov
mov
inc
dec
add
sub
add
xchg
or
nop
sub
or
add
out
jb
call
bswap
ja
je
ds
add
adc
or
hlt
or
cld
call
jb
enter
cmpsl
or
adc
movsb
mov
xchg
or
shl
and
and
and
jmp
arpl
and
sub
adc
adc
ds
jmp
unpcklps
fmull
or
mov
pop
add
fs
adc
inc
ds
jge
ds
hlt
or
or
xchg
movsb
sub
and
rclb
in
lock
je
adc
or
jmp
stos
push
andl
movsb
adc
das
fisubrl
adc
push
add
cmp
je
and
cmpsl
out
sub
aam
test
sahf
sub
push
dec
cmp
in
aam
in
mov
and
fisubl
mov
jecxz
mov
xor
loope
push
add
or
cmc
dec
mov
sbb
add
out
jl
hlt
fnstcw
sbb
cmp
lret
pop
daa
daa
addr16
xchg
adc
jmp
das
cmovns
and
xlat
loopne
or
push
add
je
pop
xchg
xchg
mov
aas
sti
dec
movsb
or
idiv
lock
sar
aad
sahf
out
dec
sub
stc
sub
movsb
cmp
daa
cli
inc
sub
fs
movsl
adc
stos
je
or
out
outsl
xchg
adc
sub
outsl
pop
lret
and
sub
and
out
les
push
push
jp
js
ret
cld
stos
add
add
das
and
mov
cmp
movsb
push
arpl
jno
xchg
movsb
je
ret
int
jp
shll
mov
fcomi
adc
stos
aam
sbb
cmp
cmp
imul
std
fdivp
dec
mov
cmp
cmp
pop
cmp
fsubl
sub
stos
je
popf
or
loop
jns
cmp
cli
hlt
sub
pop
andb
mov
call
cld
pop
dec
cltd
or
lret
xor
xchg
daa
or
movsl
mov
or
mov
movsb
aam
push
cmp
push
adc
dec
mov
jmp
nop
dec
sub
push
or
test
dec
dec
jae
push
sub
js
dec
jo
repz
jmp
std
lahf
sbbb
jo
das
jo
fisubl
jo
inc
loopne
sbb
sub
icebp
pop
daa
mov
or
test
leave
inc
dec
shll
sub
xorb
lds
dec
push
push
dec
and
inc
fs
das
dec
sbb
push
ficoms
outsb
pop
leave
cmp
dec
popf
aaa
jo
popf
xchg
add
sub
enter
jo
ljmp
mov
adcl
xchg
js
sub
sub
icebp
or
lcall
inc
enter
adc
movsl
mov
shl
mov
sub
aam
push
and
sbb
xchg
jo
dec
adc
sti
xchg
cmovle
adc
popf
jo
or
or
hlt
je
test
es
nop
cwtl
sub
lret
xor
icebp
cmp
and
inc
and
aad
sub
mov
das
out
jp
mov
leave
lahf
jecxz
inc
adc
inc
sti
push
add
int3
add
and
or
jge
cmpb
rol
fstpl
aas
or
add
mov
das
xchg
lret
repz
sbb
fcmovne
mov
inc
pop
and
int3
dec
adc
repz
pop
push
mov
add
in
push
xor
mov
movsl
pop
push
lea
add
call
pop
mov
imul
pop
in
dec
jmp
inc
sbb
adc
iret
cmp
sbb
cld
cmp
hlt
jo
xor
sbb
enter
mov
cwtl
int3
and
pop
jb
jp
adc
and
sbb
and
jmp
dec
cmp
inc
ja
adc
scas
adc
shl
xchg
push
cmc
inc
mov
xchg
cmp
stos
push
and
inc
or
sbb
add
lods
sbb
pop
sbbl
sbb
cld
or
push
in
repz
lcall
dec
jp
sbb
aas
dec
mov
push
pop
inc
dec
xchg
inc
out
mov
in
push
stc
hlt
dec
jp
test
xchg
int3
jg
or
stc
mov
mov
jb
cmc
sbbl
lock
fsubrl
out
test
xchg
lea
insb
add
leave
icebp
adc
loop
into
push
push
push
bound
sub
shrb
cmp
movsb
lcall
sbb
pslld
ret
xorb
xrelease
cmp
mov
mov
psubsb
roll
sbb
xchg
loope
sub
loop
out
adc
mov
pop
out
sbb
adc
mov
icebp
loope
add
test
push
nop
cs
stc
test
test
ror
arpl
pop
sbb
add
cmc
lahf
pop
mov
les
pop
stc
jmp
jmp
pop
adc
adc
std
add
pop
out
divl
lods
push
bound
stos
inc
sub
sbb
sub
sub
daa
imul
lds
adc
daa
nop
imul
cmp
cmp
aad
cli
dec
ret
out
lock
inc
cmp
jns
je
lods
shlb
movsb
adcb
mov
push
scas
sti
mov
stos
push
cs
repz
add
xchg
je
je
fs
lahf
add
inc
fiadds
cld
xchg
xchg
xchg
addr16
cli
fsubr
scas
or
cltd
add
mov
sub
add
notl
ljmp
pusha
mov
push
mov
mov
dec
andb
xor
out
icebp
clc
out
inc
mov
std
les
mov
jb
test
fldt
pop
arpl
scas
das
sti
lret
in
push
clc
cld
cmpsb
sub
jecxz
lods
shl
fucomp
xabort
hlt
imul
lods
add
hlt
mov
jecxz
sbb
xchg
or
pop
adc
pop
ljmp
inc
mov
dec
mov
addr16
pop
std
mov
cli
movsl
add
sub
dec
mov
aas
cmp
mov
dec
shrl
sub
mov
icebp
bswap
mov
cmp
add
xchg
cmc
cmp
popf
push
lahf
pop
mov
call
sub
orb
addr16
repnz
and
jle
test
loopne
xchg
mov
lods
jmp
mov
leave
mov
pop
pop
and
repnz
fcoms
pop
lret
gs
xchg
cmp
das
cltd
dec
das
xchg
std
fwait
cwtl
mov
std
into
repnz
sahf
add
xor
cwtl
daa
lcall
test
adc
pop
lcall
ret
ror
dec
lret
jnp
aam
jb
mov
stos
mov
mov
jbe
mov
test
lahf
nop
das
mov
and
adcb
inc
push
xchg
mov
jge
xchg
cltd
aaa
xor
and
decb
imul
ret
inc
rclb
test
mov
push
pop
out
xchg
daa
mov
cmc
pop
mov
adc
lock
ljmp
push
in
leave
dec
sub
mov
out
cld
mov
push
sub
pop
inc
mov
push
mov
popa
testl
int
or
add
inc
cwtl
shlb
notb
in
ffreep
sarl
lods
scas
aam
hlt
cltd
loope
sbb
fstpl
jmp
inc
sbb
dec
adc
mov
cmp
mov
fs
xchg
mov
test
cld
test
repz
repz
fdivp
in
test
adc
jg
cmp
xor
hlt
or
jbe
fucomi
push
jge
incl
ret
inc
mov
mov
sbbb
mov
jl
lds
cltd
je
sti
cltd
ret
mov
cli
dec
push
in
jb
rclb
out
in
fdivrl
pop
lret
lret
jl
and
test
sub
cmc
lock
adc
mov
decl
sub
mov
mov
test
adc
lods
pusha
cmp
test
mov
in
jle
mov
jno
mov
mov
mov
adc
push
add
ret
rorb
daa
cmp
shll
or
pop
lea
test
fildl
lret
push
adc
lahf
jmp
mov
lds
andl
ja
aaa
lret
into
sub
stc
cltd
and
jmp
movsb
nop
mov
test
stos
and
sub
mov
mov
in
ds
dec
xchg
std
jp
jno
dec
jecxz
mov
adc
jo
inc
mov
push
sbb
das
fisttps
xchg
jecxz
outsl
icebp
and
cltd
mov
inc
bound
jbe
cli
enter
jge
mov
fisubrs
ss
cmc
xor
ror
jge
and
dec
fisubl
lret
add
out
mov
imul
shrb
mov
pop
add
dec
inc
sarb
push
pop
dec
out
adcb
loopne
sti
hlt
and
pushl
sti
call
adc
pop
xor
stc
xchg
pop
pop
push
lahf
xor
push
je
arpl
repz
arpl
nop
and
dec
fimuls
mov
sti
mov
pop
ss
scas
cwtl
inc
insl
mov
outsl
testl
test
jae
js
call
cli
xor
out
mov
pop
dec
add
push
pop
adc
mov
mov
sub
clc
clc
pop
jno
adc
pop
xlat
jmp
sub
inc
out
and
mov
dec
mov
lret
add
pop
notb
inc
add
jg
inc
mov
out
test
cld
cmp
clc
mov
cmpsl
out
dec
int
jae
dec
pop
add
inc
fwait
jecxz
ret
stos
cmovns
inc
cld
jg
dec
out
in
test
xchg
fs
jno
mov
hlt
les
iret
adc
push
sbb
xor
lea
push
mov
xchg
dec
cwtl
dec
test
push
mov
mov
lea
inc
mov
inc
hlt
inc
mov
lea
inc
test
inc
xchg
ja
inc
xor
xchg
incl
xchg
shll
sar
xchg
xor
lcall
xor
inc
mov
scas
sahf
xchg
and
shll
mov
repnz
xchg
incl
bound
push
inc
adc
adc
femms
or
inc
sub
sub
xorl
popf
cmp
cmp
or
iret
iret
iret
iret
lds
xor
mov
push
jne
pop
push
bound
jmp
jb
push
and
inc
das
mov
loopne
xchg
cmpsb
pusha
add
xchg
out
out
ljmp
xlat
cmpsb
enter
mov
call
nop
push
arpl
test
jb
push
pop
xchg
adc
pop
jl
fildll
xchg
dec
fs
ret
out
or
ljmp
or
cmp
mov
int
jo
dec
sbb
dec
cli
pop
and
aam
cs
lock
mov
scas
mov
arpl
rolb
mov
cs
fisttpl
cli
dec
insl
sub
rcr
clc
fiadds
dec
push
lods
leave
lods
jnp
inc
fldenv
scas
mov
and
adc
enter
cltd
cmp
adc
jecxz
cmp
jmp
les
sub
stc
adc
iret
push
js
shlb
repz
jle
jge
imull
pop
and
cmp
aas
ss
or
mov
add
clc
pop
out
xlat
or
jp
or
out
mov
dec
or
xlat
or
and
daa
cltd
pop
pushf
icebp
daa
lods
ret
mov
rorb
ja
dec
cmp
push
scas
mov
jno
adc
out
mov
mov
fcompl
clc
loop
fldl
jne
out
jmp
sub
sub
repz
adc
push
mov
loopne
addr16
mov
aad
sbb
mov
sarb
pop
inc
andl
jne
and
add
xchg
cmpsb
out
cmp
mov
out
push
pop
sbb
out
xor
pop
cld
movsl
inc
mov
jl
jmp
dec
xchg
mov
mov
push
mov
adc
or
and
cmp
in
mov
jno
stos
mov
adc
mov
cltd
jl
jnp
cmpsl
aaa
leave
cli
xor
lcall
pop
or
in
mov
pop
ljmp
mov
inc
mov
pop
insb
out
jl
fstpt
xchg
fists
pop
mov
std
dec
out
repz
insl
sub
adc
and
jmp
jmp
cmc
xchg
fidivrs
ficoml
daa
in
aad
push
jg
and
lock
pop
add
scas
test
lahf
push
test
lods
jno
in
orl
test
and
xor
adc
jle
push
fbstp
sbb
shrl
cmpsb
jno
addr16
lret
into
repz
lock
sti
mov
mov
fistpll
sahf
inc
or
mov
mov
xchg
adc
ja,pt
pop
sub
jecxz
je
out
testl
filds
bound
mov
inc
inc
mov
add
or
or
or
aas
pop
sbb
sbb
rorb
push
xchg
push
mov
testl
jl
in
push
lock
cmp
cld
and
sti
mov
and
xchg
fwait
jb
ds
scas
pop
xchg
imul
ljmp
mov
lock
fistpll
ja
or
and
fbstp
or
or
repz
jbe
stos
into
cmp
adc
jg
pop
cld
adc
mov
and
shrb
mov
arpl
xchg
popf
mov
or
mov
fs
in
lcall
jg
daa
mov
sbb
mov
pop
pop
push
cltd
lahf
repz
jl
nop
loope
jne
pop
repz
pminsw
mov
data16
sub
push
fildll
adc
lock
cli
sub
cmpsb
mov
mov
fstpt
js
fwait
outsl
mov
pusha
stc
js
xchg
das
jecxz
icebp
test
and
ja
shl
fcmovb
ret
outsb
xchg
js
pop
add
imul
jo
cmp
jmp
gs
rclb
movsl
cmc
sub
sbb
sti
out
cmp
sahf
out
adc
mov
cmp
sub
sbb
xchg
shrb
xchg
mov
mov
mov
ljmp
dec
dec
shlb
push
mov
mov
popf
xor
add
xchg
mov
add
cmp
sub
sub
pop
cmc
mov
dec
out
and
push
ljmp
aas
repz
out
mov
sub
loop
dec
lods
ss
icebp
mov
cmpsl
mov
sub
pop
stos
imul
add
adc
inc
cmc
mov
test
xor
loop
lret
adc
mov
rep
jle
xchg
or
scas
inc
jae
lods
pop
mov
mov
shll
mov
test
mov
jg
idivl
push
add
insl
decl
in
in
ret
jl
sbb
out
sbb
out
repz
out
mov
repz
lods
iret
loope
setge
mov
das
daa
mov
stc
je
or
lds
inc
insb
into
xchg
inc
fcomi
push
or
cmpsl
mov
faddl
leave
lock
jp
xchg
cmp
out
or
mov
and
js
call
cmp
outsl
adc
inc
paddsw
test
jae
add
push
adc
xchg
ret
adc
inc
out
call
pop
push
xor
add
cmp
and
mov
les
jmp
loop
push
test
movsb
mulb
mov
mov
in
and
pop
daa
or
add
mov
loop
and
dec
fildl
aam
out
pop
push
hlt
fsts
push
jge
dec
pop
out
sti
imul
fwait
sti
sub
sbb
jmp
mov
mov
jmp
out
out
rolb
aam
inc
push
cli
jg
clc
pop
setne
sbb
and
or
and
mov
xor
mov
sbb
dec
xor
adc
jmp
add
negb
in
daa
test
cli
jnp
pop
lock
add
daa
pop
xorl
rorl
rcll
cld
fisubl
mov
clc
popa
in
pusha
pop
xchg
inc
xchg
sub
pop
in
pop
mov
pop
in
pop
pop
gs
jle
pop
pop
cmp
push
push
xchg
inc
push
xchg
push
push
clc
push
call
inc
push
dec
lock
call
dec
push
jl
xchg
dec
dec
dec
fiadds
incb
inc
inc
out
in
inc
xchg
inc
dec
xchg
popf
call
pop
and
cmp
cmp
jmp
mov
xchg
sub
in
xor
mov
mov
mov
sub
loopne
hlt
sub
daa
loop
mov
loopne
inc
and
and
mov
push
pop
xchg
stc
xchg
xchg
int
fcmovbe
mov
lahf
adc
mov
lret
fcoms
in
adc
cs
into
or
in
in
and
int
in
ficompl
sub
add
mov
mov
push
pop
outsl
mov
pop
push
stos
ja
jecxz
xchg
push
cli
stc
popf
or
inc
pop
push
lds
lret
jns
hlt
sbb
repz
add
test
adc
insl
das
and
adc
cltd
loopne
lret
ja
xchg
sbb
std
scas
stc
das
outsl
mov
test
jb
repz
cli
dec
cmp
jbe
mov
jne
hlt
cmp
jmp
idivb
xchg
mov
nop
in
adc
mov
int3
imul
xchg
arpl
pop
jl
in
sub
ret
cmp
ljmp
das
pop
push
das
divb
xlat
test
dec
stos
push
jmp
stos
arpl
nop
xor
in
int3
push
clc
mov
out
in
mov
fidivrs
mov
rcpps
jne
inc
rcrb
test
fs
xchg
mov
rorb
enter
test
repz
mov
incb
in
mov
sbb
ret
out
orl
test
push
stc
dec
je
add
dec
ds
lods
bound
repz
cmp
sbbb
lods
movl
or
in
test
shr
lock
aam
lods
cltd
shlb
cmp
repnz
sarb
sti
ds
cmp
call
stc
fidivrl
xlat
jl
fisubs
dec
push
cmc
aaa
std
xor
std
sub
movsl
dec
shll
and
std
pop
pop
mov
out
push
mov
mov
and
cli
cmp
mov
jbe
jmp
jp
cmpsb
mov
jbe
subb
jbe
push
mov
mov
das
scas
pop
add
pop
xor
cmp
jmp
loop
cmp
adc
mov
xor
mov
jp
out
pop
and
aad
cmpsb
jae
out
xchg
push
iret
pushf
dec
add
test
data16
or
test
cmp
adc
fstpt
movsl
call
into
aad
jmp
xchg
daa
sarb
add
mov
int
decb
mov
scas
scas
test
jecxz
lods
jmp
cmp
dec
jmp
repnz
shrl
mov
int
xchg
jbe
mov
sub
mov
pop
int
sub
stos
rorl
in
add
mov
popa
adc
adc
mov
adc
pmulhuw
in
dec
movsb
mov
sbb
xchg
pop
scas
clc
mov
lret
loop
mov
mov
lret
xchg
lcall
sub
mov
xchg
mov
lcall
cld
les
xorb
dec
lcall
lcall
pushf
dec
mov
cmp
jbe
jne
je
sub
cld
jb
jno
jo
outsl
mov
outsb
lcall
mov
push
adc
insb
imul
mov
lds
xchg
pop
and
addr16
data16
gs
out
outsl
pop
mov
gs
lods
lcall
mov
aam
rcrl
mov
sub
mov
mov
mov
lret
mov
mov
lcall
aam
pushf
pop
in
outsl
pop
aaa
hlt
int
int
ja
daa
das
rcll
jb
dec
ljmp
dec
jmp
pop
shll
add
add
jge
dec
mov
int3
add
cmpb
mov
neg
push
mov
push
data16
pop
hlt
shl
pop
add
or
lock
mov
ja
clc
push
lahf
rcrb
cmpsl
inc
lods
scas
lcall
es
lods
out
outsb
and
cmp
pop
scas
xchg
push
lods
push
mov
loop
mov
imul
sar
stc
repz
mov
lret
sti
popa
inc
mov
test
aas
repnz
ja
cli
in
mov
test
dec
mov
mov
out
sahf
std
and
cli
cld
add
adc
dec
fistl
adc
int
hlt
je
pop
push
mov
in
add
or
jle
fwait
pop
or
addr16
inc
push
mov
clc
cli
sbb
loop
jmp
cmp
jle
fistps
rclb
mov
cmpsl
xor
dec
sbb
mov
mov
iret
add
or
cmp
daa
cli
mulb
sbb
es
or
loopne
mov
mov
das
pop
mov
int
int3
push
cmp
jmp
mov
pop
fistl
add
adc
jns
mov
setns
xchg
and
xchg
aas
mov
mov
add
sub
sub
mov
and
sub
ret
mov
xchg
pop
push
jno
clc
cmp
sub
mov
ret
fcomps
stc
out
adc
mov
jle
in
mov
lahf
jg
or
adc
sahf
cmc
dec
fcmovnu
clc
rcrl
pop
xlat
pushl
outsb
out
mov
test
and
mov
inc
push
fxch
and
mov
pop
jp
adc
clc
push
cmp
xor
mov
pop
es
insb
cmp
enter
fisubrl
xchg
dec
sbb
mov
das
aaa
inc
lahf
mov
mov
sub
push
mov
add
xchg
push
add
clc
adc
lret
cmpsl
mov
cmpb
aas
mov
stc
xchg
shrl
mov
xchg
fists
xlat
mov
inc
jae
xchg
jnp
dec
jmp
loope
mov
sub
aas
inc
jle
or
mov
add
add
xchg
xchg
xor
pop
cmp
cmp
outsb
insb
cmp
mov
int3
inc
icebp
xchg
in
inc
and
xor
inc
lahf
and
inc
jbe
add
shlb
xor
out
ja
add
inc
mov
inc
inc
mov
sbb
xor
imul
cmp
and
sub
dec
ljmp
pop
push
iret
cmp
jno
sbb
pop
fadds
imul
out
in
addb
add
std
xchg
out
popf
push
shrb
arpl
icebp
gs
pop
adc
pop
jbe
bound
mov
lret
dec
pop
xchg
mov
xor
arpl
test
ret
adc
push
scas
dec
mov
dec
lds
gs
inc
popf
inc
inc
lds
rcll
mov
ds
gs
adc
cmp
cmp
jns
pop
xchg
cmp
sti
pop
popf
xor
popf
sub
lret
mov
daa
mov
test
and
in
lahf
sub
and
pop
xchg
ret
sti
inc
fcomps
inc
dec
int3
mov
sbb
int3
adc
test
adc
adc
adc
enter
lods
mov
ss
repz
dec
jg
test
pop
mov
movsl
in
std
in
mov
mov
sbb
cld
and
das
adc
icebp
das
adc
mov
bnd
das
fcmovnb
xor
push
lock
loope
cltd
or
in
jge
cmp
push
xchg
inc
dec
into
repz
daa
iret
mov
cmp
cli
pop
shlb
cld
imul
adc
xchg
sub
ds
repnz
mov
sub
sbb
das
clc
pop
xor
neg
lcall
ficomps
adc
sahf
cmp
xchg
xchg
std
jecxz
sub
cmp
jns
ss
jns
xor
xor
jns
movsb
sub
and
xchg
stc
inc
lods
mov
loop
loope
sbb
and
ljmp
jbe
jg
sti
cmp
and
inc
xchg
aaa
lea
aad
or
data16
das
jns
push
loopw
or
cltd
cmpsl
inc
or
or
dec
adc
cli
in
or
pop
xchg
int
nop
mov
lret
cld
sahf
lea
cltd
lcall
fildll
lret
xor
cltd
mov
loope
pop
sti
inc
cmpsb
push
fimull
pop
xchg
addr16
mov
mov
cmpsb
leave
sub
sub
mov
scas
lret
mov
xchg
scas
cmp
add
loop
sbb
dec
jg
xchg
in
xchg
lds
xchg
lahf
adcb
ljmp
push
shrl
pushf
mov
or
call
sub
jmp
hlt
out
pop
pop
es
fists
mov
mov
rolb
leave
in
div
adc
mov
push
inc
lahf
testl
xchg
and
jl
sti
repz
cli
roll
dec
add
cmc
pop
cli
adcl
sti
fwait
mov
lods
cmp
mov
stos
pop
aas
xchg
andb
pop
add
dec
aas
mov
mov
sub
ja
icebp
lret
aam
cmp
fistl
jmp
pop
jecxz
pop
mov
xchg
mov
cmc
jge
sub
mov
push
roll
cmpsl
faddl
ljmp
aad
sub
scas
jno
scas
cld
jbe
in
das
mov
dec
roll
imul
sub
jmp
lods
nop
cltd
sub
mov
mov
mov
mov
mov
xchg
jge
inc
fisttps
call
jmp
dec
xchg
sbb
inc
fisttps
pop
sbb
pop
mov
loopne
xchg
out
xchg
pop
xchg
xchg
inc
xchg
stos
dec
in
mov
push
fmuls
pop
or
or
mov
je
stos
and
sub
add
add
jmp
cmpsb
jmp
bound
pop
pushf
mov
cs
arpl
out
xor
pop
cs
lahf
or
fcos
call
mov
mov
sub
jl
rcrl
inc
lods
inc
sbb
out
daa
ret
fistpll
call
cli
ds
push
pop
inc
xchg
mov
movhps
add
cmp
add
cmp
jmp
loopne
ljmp
hlt
mov
stc
out
dec
cmpsb
adc
add
dec
mov
and
inc
lods
adc
mov
cmp
addr16
clc
push
rol
std
icebp
fisubrs
jg
sub
ja
cmp
out
mov
jp
testb
dec
sbb
sbb
pop
lret
lret
mov
stos
adc
xchg
adc
lret
cmp
and
adc
dec
adc
daa
daa
lahf
pop
jb
scas
stc
fistpll
std
inc
pop
push
enter
lahf
bound
ficoms
mov
dec
rcrl
pop
add
cmc
shlb
mov
add
jmp
sub
sub
mov
ret
inc
jg
jge
jecxz
pop
js
sub
fldt
hlt
inc
sub
outsl
int3
hlt
ljmp
out
mov
in
out
outsb
jmp
push
stos
mov
repz
fimuls
jmp
mov
roll
mov
sub
add
mov
inc
xchg
xchg
mov
sahf
popl
add
lcall
out
fistpl
xchg
fxch
jae
les
jmp
shr
push
cmp
fsubr
xchg
sub
iret
repz
pop
sbb
in
cmp
lcall
fistpl
inc
inc
mov
sti
cmp
pop
mov
and
clc
rcr
pop
ljmp
push
cmpsb
xor
int3
or
mov
or
lcall
loop
clc
push
lock
xchg
arpl
fldl
lds
fsubr
sarl
xchg
aas
in
arpl
xchg
imul
out
hlt
fisubs
ja
daa
cmpsb
out
mov
jecxz
add
push
cmp
jno
insl
repz
add
jo
mov
data16
nop
in
jne
movsl
inc
aad
mov
notl
outsl
popf
jecxz
lea
cld
add
add
mov
and
xchg
and
mov
dec
push
rcrl
inc
fldenv
sbb
mov
ljmp
sbb
cmp
stc
pop
hlt
jbe
pushf
sbb
sbb
nop
xchg
lea
mov
fwait
xchg
les
cmp
mov
mov
and
dec
pushf
fsubrs
add
sub
mov
dec
xor
daa
aaa
frstor
adc
and
and
add
and
stc
dec
cmp
sbb
sbb
cmp
bound
scas
sbb
sbb
scas
pop
add
add
cmp
leave
repz
fildll
inc
mov
ljmp
adc
in
insl
push
mov
add
sub
stc
int3
pop
add
cli
jg
sbb
out
iret
add
test
lea
jnp
rorb
lret
mov
rolb
mov
sbb
je
adc
test
testl
leave
and
jp
je
mov
pop
mov
add
sar
push
mov
pop
test
je
mov
xchg
cmp
es
out
out
cmpsl
pop
bswap
push
out
daa
xchg
jle
add
stc
add
or
cli
push
int3
cs
cmp
out
and
add
fcmovnb
mov
fsubr
jbe
adc
jl
decb
inc
inc
dec
out
dec
or
test
add
push
mov
cmpsl
sahf
cmp
cs
mov
and
xchg
mov
mov
ret
lock
mov
pop
xor
ljmp
push
sub
es
je
les
pop
iret
std
jnp
clc
push
jecxz
jnp
mov
in
aam
jo
pop
in
jns
mov
pop
les
jns
xchg
lea
test
loopne
pop
mov
push
sub
xchg
xchg
xchg
ret
xchg
pop
jmp
loope
push
push
daa
test
pop
pop
loope
xchg
stos
int
xchg
dec
repz
xor
aam
lret
mov
mov
mov
xor
iret
push
inc
push
and
mov
out
dec
cmpsb
stc
je
xlat
fcmove
fucomip
cltd
push
add
lock
repz
xlat
loopne
sarl
mov
loop
ljmp
daa
clc
movsb
xor
xchg
jecxz
cmpsl
and
jmp
pop
add
cli
leave
or
jae
inc
pop
leave
leave
add
jbe
sti
jbe
je
out
je
je
clc
test
adc
mov
int3
das
pop
aas
int3
mov
push
mov
inc
inc
mov
add
cmp
in
jle
enter
push
andb
mov
in
ja
ljmp
loop
test
div
shrb
hlt
rcll
icebp
cmc
out
mov
mov
xlat
jecxz
div
pop
inc
mov
sbb
sub
cwtl
or
hlt
loop
xchg
pop
inc
mov
sub
and
xlat
in
daa
adc
sti
mov
setno
dec
cmp
orl
out
pop
daa
hlt
cmpsb
jl
jecxz
enter
jmp
add
pop
ss
repnz
mov
or
pushl
sub
jle
fisttpll
push
lock
ds
jecxz
int3
adc
dec
adc
xchg
je
cltd
xchg
stc
mov
je
push
xchg
ss
xor
and
sti
mov
repz
push
jmp
push
jmp
jg
cmpb
mov
mov
les
andl
and
outsl
popa
fdivs
jbe
scas
cli
push
fwait
xor
dec
insb
mov
mulb
daa
adc
bound
mov
cli
adc
arpl
enter
push
cmpl
aaa
jecxz
cmp
or
mov
std
movsl
mov
rcl
in
mov
mov
dec
out
or
sbb
pop
scas
sahf
sub
add
cmp
and
andl
popa
inc
cmp
xlat
xchg
dec
enter
cmp
jmp
xlat
cltd
xor
imul
clc
repz
pop
pop
lcall
std
and
inc
pop
inc
in
les
cld
jg
frstor
mov
mov
add
clc
ds
sub
jnp
stc
sub
aas
insl
ja
or
push
push
jbe
push
push
in
xor
mov
pop
test
cmp
mov
test
mov
scas
cwtl
mov
mov
test
lds
xor
adc
rcrl
loopne
leave
push
sbb
add
push
icebp
dec
ret
sub
mov
cmp
call
or
repnz
cltd
std
in
add
hlt
mov
scas
cwtl
dec
into
xchg
inc
pop
xor
inc
in
lahf
sbb
and
mov
cmpsl
in
and
subb
repz
sub
xchg
out
xchg
adc
mov
std
out
test
cmp
jo
adc
mov
pop
sti
dec
shrb
je
jp
aas
xchg
test
jmp
cmp
xchg
mov
shr
and
mov
cmc
inc
scas
sub
out
out
dec
mov
lret
ret
ret
jne
scas
push
mov
insl
je
test
pushf
stos
add
xchg
hlt
dec
insb
lds
inc
nop
jcxz
mov
ds
ret
int3
dec
pop
jp
push
add
das
and
scas
cmp
mov
push
xchg
jns
jmp
repz
pop
ret
out
inc
test
xchg
fsubrl
les
lcall
pop
stos
cld
sbb
xchg
rcrl
pop
adc
lcall
mov
sahf
jmp
mov
mov
mov
das
ja
scas
out
sbb
adc
xchg
mov
mov
testb
adc
mov
or
mov
and
push
mov
add
popl
out
test
aam
jg
mov
mov
jne
adc
out
jne
test
movsl
cmp
ja
mov
int
repz
mov
jno
paddd
ljmp
xchg
rcrl
mov
jb
call
cli
pushf
xchg
pushf
pop
mov
cmp
cld
sub
addr16
fsubrl
std
movl
out
mov
fcomi
fldt
cmp
filds
enter
and
imul
sar
in
aad
loopne
jmp
jg
std
xchg
and
call
clc
jg
into
mov
hlt
mov
adc
ja
dec
lcall
cli
xrelease
lret
jne
int
push
iret
addl
xor
sti
sahf
xor
xor
les
lea
mov
div
sbb
in
ss
sub
add
js
pop
fsubs
out
hlt
icebp
sti
in
stc
stc
fcomps
or
adc
xchg
ja
cld
jne
shl
mov
hlt
dec
out
adc
cld
aaa
or
xchg
cmp
pop
jecxz
inc
out
mov
add
xchg
xchg
push
inc
mulb
pop
pop
push
dec
and
orl
mov
pop
xor
dec
test
in
jl
mov
sahf
cld
inc
outsb
or
and
add
inc
aas
jecxz
pop
repnz
cld
cmp
std
aas
out
cmp
adc
add
mov
pop
out
hlt
add
or
or
repnz
or
push
roll
loope
mov
test
jmp
mov
pop
out
aas
test
mov
addr16
aaa
jle
cmp
mov
mov
cmp
das
jecxz
cli
adc
sub
mov
dec
out
testb
int
jl
fisttpll
scas
fsubl
mov
pop
cs
clc
xchg
mov
out
das
push
mov
and
push
aam
pop
cmp
pop
push
mov
lds
push
inc
ficompl
outsl
dec
inc
daa
fdiv
pop
dec
push
xchg
xchg
cmp
insl
fsubl
cltd
lea
dec
cmp
aaa
stos
ret
stc
xchg
inc
cmp
push
inc
mov
flds
leave
xlat
aas
in
mov
mov
pop
push
shl
add
pop
mov
ja
mov
leave
xor
cwtl
cmp
jae
stos
pop
into
cmc
inc
or
int
pop
in
dec
mov
mov
int
fiaddl
cli
add
xor
jns
shll
hlt
jecxz
and
rcrl
loope
repz
inc
scas
inc
ds
in
aam
jecxz
inc
hlt
nop
lret
rcrl
movb
add
inc
arpl
sahf
bound
inc
and
ficoml
sti
test
pop
aas
cs
in
roll
imul
mov
and
scas
xchg
cmp
pop
add
inc
sub
fsubl
shll
int
out
lea
pop
shlb
sub
pop
jle
push
xchg
sti
jne
push
jmp
xchg
mov
fsubl
lcall
pop
sub
test
cmpsb
mov
inc
jge
aam
and
out
add
rorl
mul
mov
gs
aad
sbb
nop
cmp
jo
cmpsb
je
loope
stos
inc
push
inc
testb
cli
inc
repnz
mov
aam
addr16
mov
mov
mov
clc
mov
xchg
xor
ret
int3
sub
in
shl
mov
mov
jbe
pop
scas
cli
aaa
or
out
mov
cmc
jle
pop
xchg
jbe
popf
je
fisttps
in
pop
daa
call
pop
pushl
inc
out
cli
pop
rcrl
movsb
stos
pop
inc
jg
mov
push
pop
mov
arpl
xchg
sbb
add
clc
xor
pop
loop
in
pop
je
int3
mov
aam
repz
inc
sti
repnz
div
or
inc
sbb
outsl
les
mov
jne
mov
ja
mov
xor
aas
hlt
les
scas
xchg
andl
hlt
hlt
inc
push
push
in
mov
push
inc
pop
ret
mov
clc
popf
dec
jle
hlt
cwtl
leave
divb
scas
add
mov
adc
out
adc
jb
mov
scas
adc
push
leave
cmp
hlt
cmovs
add
int3
add
sti
enter
add
out
aad
mov
xchg
filds
dec
xor
sarb
outsb
into
test
dec
in
jg
int3
dec
xor
arpl
add
test
mov
scas
push
and
cli
sub
fucomi
out
mov
dec
add
jmp
arpl
aam
jbe
dec
xor
pop
imul
sbb
and
in
insb
neg
sbb
cmp
and
sahf
js
adc
aad
lock
or
and
xchg
adc
lret
stos
inc
jo
and
cmp
cmp
push
out
out
xchg
fs
mov
jmp
icebp
mov
cwtl
push
adc
sar
or
dec
in
cwtl
imul
in
out
mov
fildll
daa
push
in
fistpll
sbb
add
pop
pop
xchg
lret
mov
mov
nop
lods
jmp
out
movsl
pop
jg
cmp
sti
loop
cwtl
cmp
icebp
cmp
es
outsl
fcmovnu
cmp
and
das
xchg
lock
jg
mov
enter
in
std
scas
mov
fucomi
mov
fisttps
xchg
pop
push
je
push
add
push
mov
cld
xchg
arpl
stos
fimull
iret
jmp
jmp
sub
xchg
daa
aad
xlat
mov
lret
pop
adc
cmp
loope
imul
jno
adcl
shr
pop
mov
cmpsb
aas
ds
sub
and
cmpsl
sbb
mov
xchg
daa
hlt
pop
mov
mov
mov
sub
xor
in
inc
jmp
out
dec
out
jp
xchg
sti
cmpsl
test
pop
xchg
lahf
jle
mov
jbe
vmulsd
sahf
cmp
ds
dec
popf
mov
out
jo
xchg
test
and
repz
loop
mov
aaa
mov
cmp
mov
ret
inc
stos
arpl
hlt
sti
and
jecxz
and
pop
xor
dec
shrl
rcrl
sbb
xor
cmpsl
hlt
std
dec
lret
int
mov
adc
inc
addb
mov
jbe
lock
pop
xchg
jb
cmpsl
inc
aas
xor
mov
xchg
or
call
xchg
insl
sub
rcr
cmpsb
fucomip
ss
add
pop
cltd
dec
mov
mov
int
and
popf
out
mov
pop
and
fistps
das
xlat
imul
inc
iret
push
jecxz
xor
mov
mov
insl
mov
fistpll
subb
ljmp
ret
or
stc
std
mov
push
movsb
jge
or
cmp
rcr
mov
push
std
das
fists
dec
mov
cmpsb
jecxz
or
out
dec
scas
insl
or
and
fwait
push
cmp
dec
xor
cltd
pop
mov
inc
pop
std
add
mov
test
add
push
jg
aad
scas
iret
jp
push
insl
scas
pop
scas
jmp
cmc
sbb
testl
scas
cvttps2pi
push
jg
loopne
jecxz
mov
scas
xor
andb
pop
std
push
mov
mov
cmpsl
sbb
insb
clc
push
outsl
cmc
push
mov
or
jle
aas
adc
icebp
jle
insl
lcall
inc
scas
cmc
pop
mov
scas
out
mov
sets
push
pop
mov
stc
jne
ljmp
jbe
jmp
inc
int
sahf
hlt
xor
out
cmp
pop
mov
push
cli
ljmp
repz
out
out
jge
adc
mov
fcoml
test
pop
out
mov
fldcw
cmpsb
cli
lock
push
mov
mov
push
add
mov
mov
mov
adc
mul
xlat
mov
out
xchg
and
lret
cmc
sbbl
loope
shll
test
add
sub
in
arpl
jmp
xchg
mov
jecxz
and
mov
sti
inc
inc
mov
ret
adc
mov
pop
jl
mov
push
fdivr
inc
and
or
xlat
scas
xchg
jbe
scas
push
idivl
out
aad
adc
idivl
dec
repz
adc
xor
xchg
jmp
jg
or
mov
out
ficompl
es
adc
mov
xchg
dec
test
sub
add
fld
lea
stos
sbb
insl
dec
xchg
femms
je
mov
loope
ffreep
inc
cld
pop
cld
shrl
xchg
mov
shrb
sti
sti
pop
shlb
movsb
mov
jle
bound
ja
jo
lods
jmp
les
cld
push
loop
leave
rcr
cld
pop
int
jge
out
mov
fstl
pushf
sbb
fdivr
or
int
xlat
iret
aas
movsb
aaa
out
cmpl
jmp
in
jmp
push
xchg
fisubs
fists
out
pushl
jmp
mov
scas
mov
insl
pop
adc
xchg
lret
jno
jb,pt
mov
outsl
js
mov
pop
mov
mov
stc
sarb
cs
sahf
push
and
out
idiv
scas
mov
iret
fisubrl
out
sbb
iret
std
push
sub
leave
ja
shrb
add
lcall
jnp
rcrl
inc
adc
mov
inc
cmp
test
lds
dec
lds
adc
inc
mov
xchg
ss
push
xorl
ss
and
rcrl
jp
scas
xor
jne
js
jl
in
lahf
sti
insb
imul
jns
in
test
movsl
mov
ljmp
xchg
mov
std
andl
mov
pop
cmp
jp
je
jp
dec
pop
repz
stos
das
pop
jb
out
pop
fistpll
adc
push
aad
arpl
dec
cmpsl
fidivs
out
or
mov
cmpsl
jg
in
xorl
or
sbb
int
dec
dec
inc
xor
jge
data16
out
mov
jnp
nop
ljmp
daa
pop
mov
ret
fcompl
mov
test
fsubrl
decl
scas
fdivrp
outsl
sub
push
movsl
test
dec
movsb
lock
aas
fsubrs
mov
idiv
jecxz
xchg
or
or
cmp
in
mov
fmull
stc
xchg
dec
mov
dec
out
aas
jg
mov
in
inc
pop
les
cltd
pop
pushf
lods
fcoms
cmc
mov
std
adc
jmp
negb
cs
fstp
lcall
mov
imul
popa
mov
jge
fdivrl
mov
lahf
fistpll
aam
xchg
mov
ficomps
sub
ret
mov
nop
std
clc
ljmp
std
jle
inc
pop
cltd
xor
or
in
pop
cld
decb
cli
leave
dec
not
jge
imul
sub
mov
int
fwait
nop
call
decl
push
idivl
pop
enter
data16
cmovns
cs
add
adc
lahf
mov
fistps
idivl
shrb
stos
out
lods
lcall
movsl
mov
jno
sahf
nop
mov
mov
gs
or
js
aaa
js
mov
fwait
lcall
subb
cmp
loopne
shrb
jbe
int
aaa
jne
sahf
push
in
and
stos
mov
inc
dec
scas
cs
jg
test
jne
das
movsl
and
dec
mov
in
data16
mov
in
xchg
out
mov
pop
adc
xchg
cmp
sahf
add
in
into
enter
xor
jp
mov
hlt
ja
cmp
xchg
xchg
fistpl
repz
std
mov
adc
cli
ds
out
enter
movsb
jmp
mov
mov
mov
xlat
mov
cmc
jns
in
mov
out
repz
repnz
pusha
ljmp
xchg
jnp
sub
ja
mov
ficompl
mov
test
in
imul
sti
je
dec
and
mov
sahf
cwtl
js
data16
sahf
scas
iret
jle
cmc
mov
test
lods
hlt
and
mov
xchg
mov
jecxz
and
lods
out
out
adc
xchg
jp
and
and
push
xchg
xor
out
ficompl
dec
jle
sti
mov
in
fbld
movsb
jb
mov
mov
cwtl
jno
cmp
mov
push
repnz
mov
in
filds
shr
lock
cwtl
out
repnz
cmp
xchg
lock
pop
lea
inc
daa
popa
ret
mov
mov
in
nop
xchg
in
add
xchg
ret
lea
call
in
out
mov
in
iret
out
leave
mov
mov
xlat
xchg
xchg
lea
xchg
adc
div
jbe
fisubrl
jmp
push
sbb
xchg
jle
jge
add
mov
mov
cmp
std
xchg
push
cwtl
xchg
fsubl
push
std
cltd
mov
and
pushf
mov
jg
mov
movsl
mov
enter
xlat
xchg
gs
imulb
mov
call
dec
cmp
pop
cmp
inc
rol
mov
std
mov
adc
or
out
out
out
push
and
dec
popf
lret
hlt
sbb
xchg
adc
xchg
adc
jl
sub
in
jns
jge
jmp
mov
inc
lret
rcrb
out
les
imul
mov
sbb
jbe
xor
cmc
cmp
push
loopne
ljmp
fwait
and
les
mov
and
call
rorl
in
icebp
adc
ds
jp
mov
cmp
into
pusha
sti
mov
cmp
test
les
pop
adc
fs
push
adcb
insl
shlb
das
ljmp
je
xor
ljmp
jle
in
clc
fs
mov
inc
lock
cld
aas
xor
sbb
mov
dec
movsl
int
idivl
add
jle
cmp
sar
jno
scas
in
add
andb
shrl
adc
test
mov
rorb
rolb
xor
mov
cmpsl
pop
cmc
add
fwait
xchg
mov
xchg
jnp
ja
imul
pop
add
add
push
icebp
fadd
add
movb
adc
add
cld
lds
cmp
add
fcmovb
rol
sti
ret
push
ret
ffreep
lret
ret
mov
ret
add
add
add
push
ret
stc
ret
ret
ret
lahf
ret
pop
jecxz
cwtl
shrl
rcrl
roll
sarl
hlt
add
shll
loop
rol
ret
sarb
cmp
mov
iret
call
into
movsb
into
lea
add
dec
dec
gs
pop
into
dec
into
ds
sub
sbb
add
in
cmpsl
int
int
int
int
int
pop
add
cmp
stc
int3
test
int3
inc
int3
cs
and
adc
add
lret
xchg
lret
or
lret
mov
test
test
je
pop
lret
xor
leave
ss
and
pop
add
out
fxch
ror
enter
enter
enter
xchg
xor
dec
add
stc
pushf
jp
sti
int3
cmc
int3
fcmove
mov
int3
call
add
lret
aaa
lret
or
int3
lret
mov
ja
add
add
outsb
lret
dec
lret
sbb
bswap
or
mov
xchg
leave
xchg
leave
xchg
or
leave
dec
leave
lret
enter
push
jge
and
test
test
movsb
movb
add
insb
pop
rol
mov
les
les
add
rol
mov
ret
cmp
xor
add
add
adc
cwtl
ret
pop
ret
cld
rcl
leave
shll
mov
pop
rorl
shll
add
add
xor
sub
push
rcll
or
add
repz
aad
rol
mov
rorb
mov
jp
inc
sarb
xor
adc
add
and
jmp
mov
iret
xchg
outsl
iret
push
iret
add
add
cmp
iret
sub
push
iret
push
iret
or
add
std
into
fmul
mov
stos
into
lahf
into
jge
push
into
sbb
add
into
jbe
outsl
int
int
int3
fxch
ror
mov
int3
push
int3
or
add
mov
xchg
lret
nop
lret
mov
test
jp
outsl
lret
dec
lret
xor
sub
test
lret
add
inc
lret
sub
push
lret
lods
leave
movsl
leave
leave
pusha
leave
inc
leave
aas
leave
cmp
add
add
xor
adc
or
leave
popf
enter
enter
enter
enter
push
movb
cmpb
add
lds
lds
lds
add
add
outsl
les
mov
ret
push
ret
adc
loopne
test
ret
cld
ja
clc
rorl
imul
jge
or
mov
iret
in
add
mov
iret
fcmovne
mov
push
push
iret
dec
iret
inc
iret
int
ret
into
mov
into
xchg
into
mov
add
out
repnz
cli
int
int
int
int
add
lods
clc
cltd
int
int
int
int
int
int
mov
xor
push
int
int
int3
aam
int3
pop
int3
push
int3
dec
int3
inc
add
enter
int3
adc
add
cwtl
cld
jae
outsb
lret
pop
lret
dec
enter
lret
cmp
ss
sub
pop
lret
in
lret
sub
and
sbb
adc
adc
enter
add
enter
enter
enter
enter
movl
rol
mov
stos
cmpsb
pop
pop
add
mov
aas
xor
sub
and
sbb
pushf
push
add
test
mov
test
lds
jno
imul
nop
inc
adc
or
ret
mov
je
cli
ret
mov
enter
cwtl
pusha
rorl
shll
hlt
dec
add
nop
iret
add
fcmove
or
iret
push
iret
ret
int
int
int
int
int3
jmp
hlt
and
int3
nop
int3
mov
test
ja
data16
pusha
sbb
add
push
lret
push
lret
clc
lret
xchg
lret
mov
insb
lret
fs
call
sbb
or
dec
jmp
outsb
lds
pusha
mov
in
inc
sbb
les
sub
add
jmp
push
test
add
add
mov
ret
inc
ret
sub
and
adc
cmp
ret
hlt
shr
call
adc
rol
rclb
and
shll
jb
push
add
add
inc
shll
sbb
adc
or
cld
shl
icebp
rolb
adc
xlat
ror
mov
shlb
mov
rorb
jp
je
push
rcrb
rorb
rolb
shrb
sub
pop
jnp
and
push
aam
in
jb
repz
in
sar
iret
iret
mov
test
add
iret
cltd
iret
xchg
iret
or
iret
push
iret
inc
iret
aaa
iret
xor
or
fs
into
mov
into
dec
into
aas
into
das
into
daa
into
pop
rolb
mov
lock
int
fwait
int
cmpb
cmp
int
call
int3
je
imul
push
int3
dec
int3
inc
push
sbb
lret
mov
push
pushf
mov
push
test
lret
and
or
add
hlt
lret
ror
mov
mov
add
xor
push
sub
lret
icebp
leave
cmp
leave
leave
stos
leave
jge
add
leave
jno
addr16
pop
leave
cmp
xor
add
mov
enter
enter
enter
enter
push
mov
add
enter
enter
enter
enter
mov
xor
out
add
add
lcall
adc
add
ljmp
les
les
les
add
ret
mov
test
ret
and
sbb
lods
ret
insb
add
ret
xor
sbb
scas
shll
jns
shrb
dec
jmp
add
cmp
push
rorb
in
stc
lret
mov
iret
stos
addb
pop
iret
push
iret
dec
js
lret
add
mov
dec
clc
into
loop
jae
insb
into
pop
mov
xchg
pop
sub
and
into
incb
int
add
nop
js
int
int
int
int
int
int3
test
cmp
in
popf
dec
xchg
int3
jge
jno
imul
int3
pop
sti
mov
dec
incb
lods
loop
sets
fbstp
cli
outsb
std
add
dec
add
in
pop
mov
xchg
inc
xchg
test
fs
outsl
inc
test
mov
inc
ljmp
fs
inc
das
push
xlat
inc
jmp
inc
addl
data16
xchg
lock
cli
outsb
cmp
in
aaa
fadds
or
push
cli
push
cwtl
incl
lahf
shlb
outsl
lcall
cld
xorl
movsb
fisttps
shll
cmp
aaa
ja
mov
enter
outsl
clc
std
inc
ljmp
jmp
pushf
in
dec
cmp
fsub
fcomps
add
and
mov
cwtl
test
or
cmp
int
cmp
xrelease
int
test
and
mov
sub
and
jl
cld
jg
movsl
xlat
xor
mov
rcl
enter
adc
pop
cld
push
dec
mov
fidivs
xchg
sub
daa
adcb
mov
into
loopne
fidivs
stc
mov
mov
cmpsl
jmp
fidivs
sbb
mov
jmp
pop
ds
mov
add
nop
mov
in
mov
ret
nop
lcall
cli
sub
push
hlt
mov
mov
cli
xchg
lcall
mov
cmp
pop
cmpsb
mov
sbb
in
adcb
or
repz
inc
jmp
jg
mov
mov
mov
or
mov
daa
scas
loop
sub
jbe
repz
mov
inc
ret
jmp
mov
or
cli
pop
inc
inc
pop
pop
mov
notl
mov
ljmp
hlt
mov
in
mov
imul
or
jmp
fs
scas
clc
mov
cli
cmpsl
cmp
fwait
addr16
jne
xor
dec
test
pop
jl
adc
jecxz
jle
mov
mov
stos
push
vpcmpeqw
jne
das
adc
lcall
sub
xor
xlat
xchg
mov
add
jl
push
pop
pop
paddd
jns
or
jnp
mov
dec
push
popf
push
and
test
lods
test
lds
cmp
lods
rorl
ds
mov
push
into
mov
repnz
inc
je
xor
mov
dec
sub
mov
pop
mov
mov
cld
or
xchg
scas
xor
scas
sahf
or
cli
incl
add
sbb
movsb
cli
lds
loopne
xchg
mov
jno
bound
pop
ret
cld
adc
adc
ror
push
mov
cmp
pop
imul
ja
pop
fbld
push
loopne
cld
sbb
jg
push
xor
mov
mov
xchg
sub
push
or
adc
adc
gs
xchg
dec
addr16
dec
dec
adc
dec
push
mov
das
in
aas
inc
leave
pop
ds
std
fdivl
subl
jb
dec
pop
jl
subl
jge
scas
jmp
and
pushl
in
hlt
lds
scas
mov
movsb
cwtl
movsl
es
movsl
xor
jecxz
aaa
sti
jecxz
int3
cli
iret
std
inc
jb
sub
jmp
or
jb
scas
push
sbb
mov
cli
in
jmp
cmp
jmp
jnp
push
loope
cmp
lods
pop
lret
fsubp
push
mov
fidivs
std
or
push
in
add
scas
clc
orb
fstpt
sti
into
into
incl
jge
pop
pop
or
out
dec
jecxz
and
lods
jl
dec
fidivrs
std
pop
cmpsb
cmc
jmp
cmc
xor
cli
jbe
xor
push
sbb
loope
les
sbb
xor
pop
iret
emms
mov
ds
mov
or
clc
in
scas
jmp
aad
pop
pop
clc
or
pop
movsl
scas
push
mov
lods
pop
sbb
movsb
ss
mov
mov
outsl
mov
mov
sahf
aad
call
ss
fcmovu
rol
in
xor
xlat
mov
pusha
push
cli
ljmp
mov
mov
push
sbb
stos
mull
imull
stos
ljmp
jp
outsl
cmpsl
ds
stc
repnz
dec
jb
iret
test
jmp
dec
in
stos
dec
mov
adc
stc
inc
inc
cld
cmp
and
mov
es
push
cwtl
jb
sub
push
add
fdivrl
popa
stc
dec
add
jge
and
dec
add
inc
dec
out
shrl
mov
pop
incl
dec
add
jae
incl
cwtl
fmull
push
add
xchg
jne
pop
imull
cmpsb
stos
xchg
and
mov
and
dec
stos
daa
xor
sbb
pop
movsb
xlat
xchg
cmp
call
test
aas
pop
push
ret
push
sarl
adc
mov
lods
hlt
out
mov
cmp
pop
cmp
and
test
icebp
fnstcw
flds
leave
aaa
jns
out
xor
gs
xorl
jno
outsl
les
fildll
jg
enter
lcall
xchg
sub
inc
enter
inc
mov
or
and
mov
and
les
fwait
aam
lcall
sbb
sbb
add
adc
scas
mov
orb
je
fadds
dec
ss
mull
rcll
or
mov
jns
in
popf
sub
rol
out
cmp
mov
mov
fistl
or
clc
sub
jb
sti
sub
pop
scas
cmc
xchg
mov
ja
jmp
in
dec
idivb
cmc
sahf
pop
dec
jne
scas
cmpsb
loopne
mov
push
neg
jg
and
dec
out
inc
in
out
mov
jmp
xchg
push
jmp
out
mov
repnz
xchg
incl
sarb
jge
outsb
push
std
dec
movsb
xchg
stc
daa
daa
push
mov
stos
jp
lahf
imul
jbe
mov
xchg
xchg
out
pop
push
mov
gs
cmp
jbe
repz
or
cltd
or
in
mov
mov
push
cmp
stos
xchg
clc
fdivrl
push
je
lret
testl
mov
ja
add
loop
clc
stc
jl
cmpsl
add
mov
push
stos
jo
mov
jbe
pushf
cmp
lea
dec
mov
push
xor
cli
out
or
out
filds
je
cmpsb
mov
test
repz
xchg
cld
int
cld
shl
jae
in
jmp
inc
mov
xlat
dec
pop
jle
ds
adc
scas
lock
jmp
ljmp
inc
jmp
xchg
mov
xchg
jp
bnd
jo
cmpsb
push
pop
inc
sti
sbb
in
push
iret
in
gs
xchg
aas
outsl
sbb
gs
aas
xor
sti
fdivs
gs
aas
fcomps
fstpt
cltd
inc
lahf
filds
out
enter
in
enter
popf
xchg
add
sti
scas
or
sti
imul
mov
std
cmc
shl
mov
mov
dec
ja
out
pusha
add
cmp
mov
jmp
xchg
dec
fbld
push
xchg
push
in
call
rcr
jecxz
lea
xchg
and
cld
cmp
aam
mov
icebp
jne
aas
xorl
inc
fstpt
in
pop
mov
ja
mov
mov
mov
dec
ljmp
xchg
mov
sbbb
xchg
xchg
mov
ds
clc
out
fdivrp
mov
dec
ja
out
ljmp
test
cmpsl
fcmovu
fwait
out
fnsave
mov
fildll
shll
xchg
repz
cld
div
clc
fsubs
cld
inc
daa
sarb
mov
cld
sarb
and
test
xchg
daa
lahf
call
pop
mov
movsb
add
test
loope
pop
aad
ret
mov
lret
mov
aaa
scas
pop
movsb
adc
repz
and
mov
into
clc
xorb
xor
cli
and
dec
jmp
mov
mov
stc
or
push
or
cld
sahf
lods
inc
ds
mov
out
and
mov
cltd
aad
daa
ljmp
fdivr
or
jns
lcall
aas
jecxz
out
mov
insl
outsb
jne
jne
mov
push
out
imul
shl
faddl
in
mov
insb
std
lahf
daa
cmp
stos
mov
xor
cltd
xchg
cwtl
mov
test
pop
daa
jmp
nop
mov
xchg
stos
xor
pop
pop
dec
stos
mov
dec
in
lcall
mov
push
sarl
cwtl
xchg
xchg
out
mov
aad
popf
and
cltd
xchg
jmp
es
pop
in
jg
xchg
xchg
incl
mov
inc
mov
std
scas
xchg
cld
add
mov
cli
mov
mov
lret
lods
divb
lock
mov
hlt
incl
adc
push
sub
sub
rclb
pop
hlt
movsb
sar
fidivl
inc
push
jp
mov
int3
lret
gs
sbb
repnz
xchg
dec
sub
sbb
inc
cld
lret
inc
push
fs
iret
sbb
mov
cmp
cs
mov
cmp
lcall
mov
xchg
cwtl
mov
daa
jmp
xchg
enter
xchg
insb
and
adc
lcall
in
push
movsb
mull
push
mov
mull
into
iret
cli
in
cltd
insb
jg
and
int3
xchg
push
xchg
bound
loopne
hlt
and
inc
cmpsl
cwtl
out
popl
cwtl
jo
and
cld
daa
in
xlat
push
int
fsts
shlb
cmc
xlat
mov
sbb
clc
fwait
lock
clc
hlt
xchg
lahf
jl
jmp
jo
imul
dec
scas
fmuls
ror
ljmp
loopne
cmp
call
mov
lahf
loopne
mov
lods
and
loopne
jbe
movsb
out
dec
mov
pushf
out
adc
add
call
xchg
test
lcall
outsb
sbb
ljmp
xor
cli
inc
pop
repz
int
movsb
stc
push
cmpsl
xlat
ret
fmul
mov
and
sub
lret
mov
call
mov
xchg
lret
push
cmp
fcmovne
cmpsb
xchg
xchg
leave
ja
jb
dec
leave
ja
jge
mov
enter
enter
add
enter
mov
sub
adc
fbld
cmc
add
lds
mov
lds
jge
add
pop
rol
ret
fwait
ret
xchg
ret
adc
ret
iret
ret
jle
cli
cmp
ret
ja
jne
test
shll
pop
rcll
out
lret
inc
popf
jae
aad
decl
cld
out
adc
jmp
incb
lods
lcall
repnz
cmpsl
or
mov
ficompl
std
ja
cltd
lock
repnz
repz
mov
sar
mov
jmp
fcomp
jge
pop
and
fstpt
sti
lods
ficoml
lahf
out
jecxz
sar
jge
jl
cmp
ffreep
repz
daa
pop
stc
sti
pop
in
in
stc
mov
stos
aam
jns
in
jl
out
cmc
dec
lcall
jae
fildll
repnz
loope
dec
mov
jnp
dec
clc
popl
daa
cmp
out
mov
out
xchg
mov
mov
decl
fucom
es
lock
das
cwtl
js
pop
add
cltd
loop
or
xchg
insb
clc
sahf
mov
mov
mov
cli
dec
rcrl
leave
jl
pop
out
push
leave
lahf
mov
shll
pop
cmp
xor
sbb
fdivr
jg
dec
repnz
std
mov
jmp
add
inc
add
call
int
jmp
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
pusha
mov
mov
xor
mov
inc
cmp
jb
popa
jmp
