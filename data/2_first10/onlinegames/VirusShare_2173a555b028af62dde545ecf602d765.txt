out
call
in
sub
andb
push
push
push
push
xor
pop
lea
fcomi
stos
push
ljmp
pop
xor
jmp
mov
pop
ja
test
add
loop
mov
dec
gs
in
in
dec
mov
xor
cs
jbe
dec
mov
insb
jmp
mov
push
call
pop
mov
jg
mov
push
push
push
push
push
mov
push
push
call
mov
and
adc
clc
lea
push
add
in
and
call
jbe
adc
adc
pop
mov
or
adc
pop
pop
pop
leave
ret
add
aaa
fstpt
push
xor
push
push
push
cmp
test
je
push
jae
adc
xor
mov
add
push
push
push
or
fwait
mov
lock
add
clc
fcomps
push
pop
mov
pop
insl
movzwl
ljmp
addr16
or
or
cmp
xor
cmp
mov
in
je
push
adc
pop
or
xor
cmp
jne
hlt
jmp
push
testb
push
pop
inc
cmp
push
cmpl
sbb
push
push
or
scas
dec
mov
adc
mov
pop
cld
sub
ret
lock
ret
repz
sub
inc
scas
ja
gs
enter
clc
inc
xchg
xor
sbb
sub
cmpl
je
adc
adc
data16
add
or
push
cmp
les
dec
and
lods
jmp
pop
push
fs
popf
insl
ret
insl
negl
test
gs
into
loopne
add
outsb
cmp
daa
push
or
add
jb
jb
sub
outsl
or
addr16
popa
add
insl
cs
lret
in
and
inc
ljmp
jb
pop
in
jae
out
pop
out
inc
lock
lcall
repz
outsb
xor
imulb
cmpsb
imul
pop
push
xor
xchg
fstp
fsubr
xchg
rep
or
push
mov
pop
mov
out
jmp
pushl
adc
adc
push
mov
ror
mov
inc
inc
dec
dec
test
jne
push
pop
jmp
lahf
xor
push
push
push
inc
push
xor
push
add
add
cmpb
subl
rclb
imul
sub
push
cmp
lret
push
jbe
push
cmp
xlat
cmpl
jne
and
fs
mov
mov
push
push
adc
pop
fcmovnbe
xor
or
adc
add
dec
scas
sub
and
jb
aas
jmp
ret
pop
pop
pop
or
mov
inc
xchg
xchg
mov
out
test
push
lea
mov
sti
mov
mov
inc
jns
mov
adc
data16
popf
cs
mov
adc
xchg
adc
xor
mov
and
fcomip
arpl
and
push
call
or
das
cld
incl
push
push
xor
mov
test
je
enter
push
push
add
test
call
imul
adc
andb
xor
sbb
inc
sbbb
cli
mov
push
mov
mov
inc
inc
test
jne
pop
adc
aad
mov
cmp
xor
rcrb
repz
gs
push
add
je
movsl
pop
lcall
fstps
add
mov
or
jne
cmpsb
fwait
lahf
lods
insb
inc
or
test
add
xchg
lret
inc
add
stos
mov
ror
in
test
push
push
test
inc
pop
jecxz
or
pop
fcmovnbe
fsincos
xor
loopne
mov
push
jb
xlat
sbb
add
mov
mov
add
dec
push
mov
in
mov
std
cmp
cmpsb
test
aaa
aaa
sub
data16
xchg
xchg
jb
inc
into
loopne
xchg
jne
xchg
outsb
pushf
pushf
insb
nop
mov
fstpl
pushf
in
loope
or
int3
cld
mov
xchg
or
clc
push
jg
mov
push
push
aas
cld
and
mov
orb
mov
and
insl
adc
nop
scas
jne
push
adc
call
sbb
jae
ret
ss
test
dec
inc
push
push
push
adc
adc
fwait
or
fldt
or
adc
loopne
imul
addl
sar
fwait
sar
sbb
add
ljmp
mov
popf
jle
stc
in
in
jl
inc
or
xchg
lahf
adcl
pop
jb
cltd
fcomp
cld
xor
gs
or
pop
inc
mov
sbb
inc
ret
int3
out
lock
and
add
flds
add
or
adc
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
mov
add
addr16
jl
pusha
xor
lcall
pop
pushf
stos
mov
imul
push
pop
jbe
rcrl
xor
dec
adc
xor
jmp
adc
dec
ret
arpl
incb
pop
add
outsl
arpl
push
call
ja
push
xor
bound
push
jb
jbe
insb
gs
cld
lcall
jae
gs
xor
pop
add
push
dec
push
dec
and
sti
filds
and
jo
push
outsl
imul
and
sbb
dec
pop
or
daa
imul
andl
cs
insb
cmp
sub
push
in
xchg
or
xchg
cmp
mov
cmpl
ljmp
push
jle
nop
add
inc
dec
mov
leave
dec
nop
cmp
dec
inc
dec
mov
inc
nop
push
xchg
dec
adc
dec
push
push
pusha
ljmp
add
add
nop
add
xor
mov
add
mov
add
add
pop
mov
int
mov
jg
push
jb
addr16
insl
and
outsb
outsb
outsl
je
bound
jb
outsb
and
pusha
mov
and
fs
xchg
iret
dec
pop
xlat
scas
and
add
mov
aad
adc
inc
or
pop
lods
mov
jle
out
or
push
mov
mov
xor
and
push
sti
mov
jp
jl
aas
mov
or
shlb
out
dec
push
imul
cmp
stos
add
dec
loopne
and
add
ja
addb
add
add
mov
leave
adc
add
int3
and
or
xor
sahf
or
nop
mov
dec
pop
jg
shll
and
mov
and
push
or
add
bound
pop
aam
xlat
push
sub
shrb
popa
je
faddl
xchg
loopne
inc
push
push
push
shlb
shlb
mov
arpl
xor
mov
gs
outsl
arpl
sti
xor
or
inc
or
add
shll
mov
dec
jp
fs
add
pop
mov
lcall
and
outsb
cmp
add
mov
mov
cmpsb
jae
clc
push
scas
inc
add
dec
pop
jmp
jp
and
mov
ficomps
add
addl
cmp
cmpsb
imul
lcall
mov
shll
adc
adc
or
lods
arpl
mov
add
fildl
adc
xorb
xor
inc
sbb
pop
dec
shrl
divb
and
dec
shll
inc
dec
push
pop
shll
xchg
lcall
xlat
inc
xor
mov
mov
dec
out
cli
insb
sarl
lcall
inc
into
add
frstor
iret
xchg
rclb
addb
or
jne
ret
xchg
jl
add
mov
add
andl
gs
mov
std
fs
sbb
push
gs
fs
sub
rcll
outsb
push
jb
inc
adc
std
stc
dec
cmp
dec
dec
inc
push
and
lret
enter
pop
fmuls
xchg
orl
mov
sbb
lahf
xchg
add
aaa
sbb
pusha
add
sub
inc
add
push
adcl
adcl
and
add
jmp
add
xor
or
add
mov
mov
lretw
add
aas
inc
sbb
test
rcll
insb
or
incl
and
popa
mov
add
adc
push
sbb
inc
cmp
inc
and
fmul
xchg
pop
xor
pop
mov
fistl
add
mov
and
xor
cmpsb
sbb
xor
cmc
das
negb
pop
xor
ud2
push
add
lcall
outsl
cmpsb
add
ja
jae
push
packsswb
je
jne
jb
gs
sbb
pop
push
pop
sarb
add
push
inc
jb
aaa
idiv
mov
pop
ja
or
push
mov
jae
pop
and
shlw
pop
xor
push
sbb
int
out
mov
rolb
sub
pushf
jmp
shlb
add
jl
in
mov
popa
jae
add
call
inc
sub
outsb
dec
outsb
mov
dec
push
push
rorl
je
mov
int
push
cmpsl
jno
gs
inc
js
xor
xor
outsl
je
gs
jns
gs
imul
xor
lock
pop
test
adc
mov
xchg
aas
roll
sbb
pop
add
jb
arpl
popa
insl
push
fistpll
call
inc
push
push
inc
push
inc
pop
dec
imul
mov
outsl
ja
and
dec
push
pop
inc
jne
jb
je
xor
pop
dec
int3
mov
jnp
ja
jb
inc
popa
jb
pop
or
gs
inc
add
and
mov
push
push
cmp
pusha
call
inc
cmp
add
arpl
cmp
xor
outsl
push
pop
into
jle
mov
mov
stos
xor
pop
or
clc
shl
bswap
scas
jns
in
or
into
in
std
mov
push
pushf
lahf
cmp
mov
enter
aam
adc
and
add
popa
push
mov
addr16
fimull
pop
and
fs
aas
xchg
and
dec
dec
dec
inc
popa
jne
arpl
call
mov
mov
dec
aas
push
aas
das
inc
dec
cs
mov
pop
test
repnz
lret
rcrb
pop
or
adc
mov
pop
sbb
pushf
fstpl
push
add
in
push
push
mov
and
mov
add
decl
push
push
mov
sbbl
jg
in
push
mov
push
mov
push
call
inc
push
jmp
sub
mov
add
push
push
push
fsubr
out
call
or
dec
cld
ljmp
pop
jmp
add
mov
jo
out
rdpmc
rorb
outsl
inc
inc
bound
mov
loopne
sbb
call
lea
adc
push
push
outsl
out
mov
clc
mov
test
add
jbe
in
cmp
add
ljmp
mov
in
sti
push
lea
adc
std
imul
ret
mov
lods
insl
insl
dec
test
inc
inc
mov
outsb
ret
sub
jl
or
add
fbstp
xchg
push
mov
fildll
pop
and
lcall
push
movzbl
pop
out
lock
pop
adc
fisttpl
mov
andb
mov
or
push
aas
jb
imul
call
pop
jl
xchg
inc
pop
mov
nop
in
pop
mov
movsb
test
jne
ret
cmpw
jne
mov
add
loopne
loop
cmpl
inc
push
enter
fsts
xor
adc
jl
push
movsb
mov
faddl
adc
xchg
nop
into
mov
je
push
jne
or
pusha
std
shlb
cmp
in
jge
je
mov
cmp
je
or
divl
adc
pop
cmp
lods
mov
jge
add
or
jae
cmc
mov
loopne
push
or
or
inc
jmp
cmp
jb
sub
je
adc
clc
outsl
add
je
decl
incl
ror
ficoml
fdivrp
fcoms
or
xor
jmp
loopne
js
jo
jecxz
add
out
push
push
not
mov
cmp
mov
fdivr
aaa
int
push
push
call
mov
imul
mov
std
mov
push
and
out
cmp
push
push
dec
pop
mov
fidivs
jg
add
jge
push
sub
call
insl
xchg
cmp
push
push
and
push
movsl
mov
pop
pop
pop
ret
dec
mov
mov
stc
fs
jbe
cmp
sti
and
jb
pop
testb
sub
ret
fcmovb
jle
out
outsl
xor
xor
sbb
call
push
or
jnp
pop
out
clc
sbb
dec
cmpl
mov
js
sbb
xor
add
ja
fidivrs
lock
add
mov
in
fsubl
push
xchg
and
mov
lock
mov
sti
in
into
lods
dec
dec
mov
or
fs
mov
daa
mov
mov
push
and
jge
add
cmp
ja
jmp
popa
test
adc
adc
sbb
cmp
jbe
add
js
push
push
inc
clc
jl
lcall
clc
push
sub
rcrb
jb
and
leave
adc
adc
and
pop
in
and
pusha
xor
adc
pop
psubsb
lock
inc
push
pop
xor
js
test
out
xchg
pop
or
adc
cmpsl
sti
mov
dec
push
inc
xor
jo
mov
je
pushf
jno
dec
cmp
cmp
sti
mov
mov
scas
pop
dec
xchg
addr16
jl
test
je
adc
into
into
call
push
sub
add
fstpt
cld
push
andl
sti
or
push
mov
or
addr16
push
inc
fs
cli
push
imul
push
adc
fldenv
mov
xchg
xor
pushf
fidivl
faddl
ja
jne
data16
add
imul
or
or
or
fs
add
data16
or
sub
add
fcmovnb
jbe
add
ret
add
pop
push
cmp
push
je
sbb
mov
or
add
and
into
fidivrs
je
xor
aaa
push
jmp
adc
add
xor
orl
call
cmp
cld
negl
cltd
pop
inc
idiv
adc
jg
add
jmp
andb
mov
jmp
xor
fnstenv
inc
adc
adc
xor
adc
movsl
push
cmp
mov
jmp
mov
pushf
cmp
call
dec
mov
mov
nop
xor
adc
sbb
pop
pop
insb
mov
ja
call
bound
clc
fs
ja
xor
mov
jbe
cmpb
jne
movb
inc
cmp
jb
icebp
mov
incl
mov
imul
add
andl
stos
cmpsl
fisttps
adc
ljmp
or
mulb
add
push
add
cmp
dec
adc
inc
cmp
jecxz
decb
push
add
cmp
loopne
cmp
jae
incl
add
mov
shr
add
imul
jge
push
mov
dec
or
decl
inc
mov
mov
shl
push
pop
jne
jge
sbb
dec
sub
pop
in
rorb
rolb
or
shl
sbb
dec
roll
fmul
es
test
push
add
test
or
pop
in
out
in
xchg
push
xchg
imulb
insb
mov
jbe
or
cmp
xlat
and
push
push
clc
divb
or
add
lea
ljmp
sbb
out
or
mov
add
std
in
ja
repnz
not
and
testl
mov
mov
test
or
js
add
push
aam
jge
fisttpl
inc
fisubs
fimull
add
sti
lret
jg
lea
shr
shl
push
pop
inc
fstpl
outsl
sub
mov
and
not
cmp
add
aaa
xlat
psllq
mov
shr
mov
sti
or
repz
dec
daa
pop
jg
push
idivb
add
lea
sbb
fcmovnu
out
mov
push
push
hlt
mov
not
and
sub
call
mov
adc
movb
gs
jecxz
sbbb
xlat
lock
dec
test
xlat
or
jbe
imul
adc
test
xor
imul
add
das
insb
in
sub
sbbl
int3
xor
add
inc
std
sbb
add
out
mov
and
cli
sbb
out
mov
rolb
fcomp
cwtl
subb
lret
fucomi
sbb
add
rcr
stc
test
sbb
pusha
adc
pop
scas
testl
sti
mov
pop
les
fldt
mov
mov
jmp
sarb
lret
addl
repnz
mov
fcom
add
out
fdivrs
pop
int
or
les
cmp
arpl
adc
xor
jns
jl
or
or
xchg
jno
std
sti
mov
fisubrs
push
cld
and
fidivrs
pop
aas
pushf
fistps
das
push
mov
cmpsb
pop
mov
insb
cmpsb
pop
jae
sub
in
mov
or
and
or
popa
adc
mov
outsl
jecxz
and
mov
mov
shl
ljmp
fildl
and
aad
aam
pop
bound
popa
imul
sbb
add
repz
inc
jge
dec
cmp
inc
ror
jbe
pop
or
fadds
hlt
push
and
fldl
daa
clc
jb
repz
pop
pop
es
mov
xchg
adc
repnz
shll
add
and
stos
mov
insl
test
out
call
xor
mov
pop
repz
hlt
pop
adc
call
xlat
lods
mov
fdivs
mov
adc
add
mov
lods
and
in
pop
and
imul
jge
pop
mov
mov
shl
jg
dec
cmpsl
int
or
add
mov
mov
mov
out
loope
out
sbb
loopne
jge
sub
inc
enter
aaa
mov
ret
mov
push
fbstp
pop
fimuls
xchg
int
adc
cmp
gs
jns
and
fsubrp
mov
adc
inc
push
mov
shr
or
xlat
fdivs
faddl
sbb
lock
aam
mov
pop
in
and
sub
aad
flds
outsl
addr16
pushf
mov
xchg
jns
icebp
rorb
mov
cmp
aaa
fistl
xor
test
pop
imul
test
xor
in
cli
mov
xor
cmp
mov
cli
cs
js
sbb
ja
and
insl
adc
inc
sti
xor
mov
repnz
or
in
aaa
je
mov
call
in
inc
inc
ljmp
inc
push
sbb
xchg
mov
sti
in
mov
fimuls
cltd
jb
cmp
push
repz
repnz
jl
pusha
dec
mov
cli
xor
outsl
lahf
imul
jo
mov
mov
or
mov
out
outsl
jo
jle
sub
testl
outsb
sbb
lock
out
lret
add
mov
fidivl
cmc
outsb
lods
icebp
mov
push
xchg
jae
adc
cs
fwait
sub
xor
das
cwtl
pop
out
cmp
or
push
aas
sbb
cmp
rcl
fnstenv
or
push
les
pop
mov
out
divl
test
ss
in
clc
jl
pop
lretw
inc
fnstenv
pushl
imul
mov
gs
lods
les
lea
sti
mov
fcmovnb
fwait
or
mov
stos
rcrb
sbb
inc
xlat
or
push
or
in
sbb
jl
iret
das
faddl
xchg
ljmp
inc
push
or
mov
mov
jns
and
outsl
push
sbb
hlt
cmp
lcall
scas
xlat
pop
fistps
cmp
pop
pop
gs
sbb
lea
rcrl
iret
fwait
lock
int3
or
push
or
das
xor
ja
jno
dec
jge,pt
mov
call
unpckhps
sbb
push
adc
rcrl
test
sub
pop
xchg
dec
xor
call
scas
dec
jle
outsl
jecxz
jp
leave
push
jo
sbb
int
dec
fistpl
leave
insl
jle
loopne
sub
jecxz
jp
ret
incl
push
adc
add
pop
fdivl
mov
in
fiadds
sbb
xlat
lods
mov
fsubs
xor
mov
out
loopne
mov
ret
jns
aam
rcl
sub
pslld
cld
mov
xchg
roll
sbb
pop
push
dec
mov
pop
jge
mov
pop
add
pop
movsb
mov
inc
and
mov
xor
pop
add
cli
xchg
inc
js
cmp
sbb
je
sub
cmpb
in
mov
js
sub
push
push
push
outsb
adc
inc
or
dec
push
cmp
xor
xor
xlat
adc
inc
sbb
fisubrl
jle
xchg
insl
dec
mov
lahf
inc
pop
inc
addr16
iret
out
pop
loope
jb
adc
or
stc
mov
push
add
sbb
cmp
jne
mov
and
imul
mov
add
jl
inc
test
sub
dec
adc
push
imul
push
fldt
rorl
push
jl
jno
stos
inc
cltd
fcompl
jmp
test
loope
rep
cmp
mov
push
mov
cmp
and
xlat
clc
call
faddl
pop
mov
push
or
cld
call
imul
jbe
lea
pushl
repz
push
cs
dec
cmp
out
or
inc
sub
lea
or
inc
xor
jl
pop
mov
mov
fcompl
jnp
int3
push
pop
mov
loopne
pop
int3
rolb
aam
call
out
lcall
jno
call
adc
add
test
pop
push
sub
out
add
idiv
jl
in
gs
das
lock
jo
jo
cltd
out
gs
negl
lds
subb
mov
mov
addb
js
cmpb
inc
call
sbb
ret
xchg
mov
lods
mov
scas
add
popf
sub
ss
lods
outsb
out
mov
int3
in
xor
pop
mov
pop
jge
call
popa
inc
repz
lcall
push
push
movb
in
dec
out
push
out
mov
cs
push
lock
icebp
inc
repnz
mov
mov
orb
add
or
push
push
sub
add
xor
push
aam
andb
sub
push
sbb
xor
push
pusha
fildll
imul
lcall
popa
andb
mov
cmp
sbb
insb
xor
notl
push
add
popa
add
outsl
stc
mov
sub
xchg
clc
inc
frstor
xor
lea
inc
push
imul
das
mov
sub
push
mov
push
int3
or
movsl
test
push
movhps
inc
cmpb
xchg
jne
sbb
test
mov
mov
loope
lods
add
insb
dec
add
pop
lock
mov
inc
notb
push
push
push
nop
clc
ret
pop
sbb
sbb
ret
xor
lea
lret
push
xchg
ret
push
sbb
inc
outsb
sub
pop
cwtl
ja
movsl
jbe
sbb
sub
cmp
fnsave
add
hlt
push
shlb
push
and
push
pop
call
ja
lea
sbb
and
inc
inc
outsl
pop
pop
mov
das
cmp
pop
jb
jbe
mov
pop
test
enter
add
sbb
push
repnz
out
jg
lcall
and
add
jg
fwait
jae
popf
push
cld
subl
dec
cld
pop
movups
pop
ret
andb
cmp
push
sub
into
out
adc
std
jns
jle
xrelease
out
subb
fdivl
je
dec
dec
pop
cmp
pop
push
arpl
inc
add
cmp
das
fsubrl
xchg
stc
ss
push
push
inc
xchg
sbb
or
lcall
cmpsb
mov
sbb
fdivp
ja
movl
dec
adc
cld
into
dec
mov
sub
aaa
xchg
inc
add
sahf
sbb
pop
and
jbe
push
push
addb
int3
out
sub
xchg
mov
mov
lea
cmp
loopne
ret
cmp
xchg
and
in
test
mov
adc
clc
inc
push
pop
jmp
cld
call
fisttpll
or
mov
xor
scas
fists
sti
push
adc
mov
in
cld
movl
push
inc
call
repnz
or
sbb
test
cmp
dec
andb
dec
or
inc
add
je
cmp
jne
push
cmp
fldl
add
fcomp
and
pushw
filds
les
jbe
pop
stos
int3
in
cmp
adcl
sbb
add
cwtl
loopne
mov
cs
mov
pop
das
cmp
fdivl
out
mov
sub
inc
cmp
xor
inc
cmpsb
adc
lock
loopne
insb
jle
test
xchg
in
push
fcomps
mov
ss
mov
jae
call
sbb
push
nop
ds
xchg
sub
mov
and
ds
push
and
push
enter
fs
dec
and
sub
daa
mov
popf
scas
xchg
cmp
pushl
shrb
cmp
dec
mov
aaa
sub
cmp
testl
mov
sbb
pop
add
je
std
or
notb
iret
pop
shlb
lods
mov
jl
iret
call
mov
outsl
testl
inc
fbstp
decl
int3
cmp
jle
les
jne
cmpl
scas
or
push
jo
mov
jo
push
xchg
dec
test
fcompl
or
pop
mov
mov
cltd
ljmp
pop
adc
mov
fistpll
sti
pop
jmp
call
mov
mov
mov
sar
mov
or
mov
in
push
xor
push
mov
jecxz
sub
pop
dec
mov
fcompl
push
cmp
ss
mov
test
shll
push
insl
fstpl
stos
or
jge
jnp
decl
add
xor
in
fldcw
lods
lods
push
insl
pop
cs
lret
mov
mov
mov
mov
mov
lret
in
mov
mov
mov
imul
push
add
jmp
push
rcl
js
shlb
int
mov
aad
xlat
insb
data16
fsubrs
and
fcmovu
gs
insb
mov
test
loop
jecxz
pop
in
lret
insl
xlat
in
out
dec
out
call
mov
insl
jae
insb
cmpsb
imul
ss
data16
ret
dec
mov
jbe
les
lds
mov
mov
xlat
xor
lret
cmp
int3
hlt
xchg
push
xor
xlat
sub
xchg
mov
mov
mov
pushf
adc
mov
mov
sub
mov
movsb
inc
add
shll
push
push
test
mov
clc
ds
hlt
cli
jns
lea
dec
negl
mov
push
push
or
hlt
mov
or
pop
xchg
jb
or
push
dec
push
insl
loope
jo
aaa
xor
lret
cmpsb
loop
into
pop
or
push
cltd
in
mov
out
ds
xchg
data16
and
cmp
mov
mov
dec
rcrb
adc
xchg
hlt
les
inc
xchg
adc
shrl
orl
jg
lea
sar
sub
push
inc
jge
into
dec
xchg
xchg
sti
and
adc
ds
movsl
int3
push
sbb
loopne
pop
xor
out
pushf
scas
fcoml
ret
sbb
sub
test
push
cwtl
mov
scas
nop
jmp
aaa
dec
sbb
mov
insb
sbb
iret
movsl
jmp
sbb
mov
adc
cmp
aas
mov
rcll
enter
mov
pushw
std
push
hlt
cld
adc
fcompl
cmp
cmp
push
adc
std
push
add
inc
sub
pop
or
stos
subl
aam
push
jle
test
lods
push
es
fisttps
out
add
fnsave
cwtl
out
lock
add
int3
in
xchg
movsl
cmp
cld
mov
cld
xchg
jl
or
loop
mov
negb
mov
mov
pop
loop
mov
popa
stos
cmpsl
pop
sub
or
xchg
addl
in
adc
les
inc
add
out
into
or
lods
je
mov
ret
fwait
popf
js
push
out
in
and
popa
or
inc
je
inc
stc
pop
xchg
and
add
call
das
jne
data16
mov
pop
cmc
pop
push
aad
push
adc
addl
cmp
mov
inc
cmp
iret
jbe
sbb
pop
jmp
adc
movl
sbb
xchg
imul
xchg
call
shrb
cmp
mov
add
xchg
mov
mov
mov
bound
fsubrp
sti
hlt
mov
andl
add
fs
or
push
push
sbb
in
cmp
mov
sbbb
ret
imull
add
adc
out
mov
cld
adc
jmp
and
jno
cmp
push
and
xlat
jmp
test
fcmovbe
push
add
scas
fs
sbb
cmp
call
sarl
jne
andl
xor
push
roll
fsubrl
loopne
jge
leave
sbb
mov
pushf
les
ret
mov
xchg
mov
xchg
cld
ss
and
int3
dec
int
jp
xor
pop
iret
imul
xor
push
dec
push
imul
xchg
fs
ja
fildl
lcall
push
jae
xor
cmpsb
imul
fwait
cmpsb
fld
cli
sti
cld
std
insl
jle
xlat
insb
int
lcall
mov
add
xor
mov
mov
mov
push
xor
roll
fs
pop
xor
mov
addb
bswap
pop
pop
lret
in
mov
xor
in
lcall
pop
inc
andb
repnz
cmp
mov
mull
out
add
mov
addr16
daa
or
cwtl
push
xchg
test
jnp
nop
and
xor
enter
pop
push
hlt
dec
enter
mov
in
fcomps
add
xor
sbb
fld
jmp
xor
sub
gs
cli
sub
adcl
jb
dec
shll
outsb
je
imul
fs
lock
repz
xor
dec
shll
fs
insb
je
sahf
adcb
bound
fs
add
sub
aam
cmp
cs
inc
loopne
jb
push
fsubrl
aam
cmpsl
ret
sbb
xchg
test
in
mov
mov
data16
xchg
xor
pop
test
shl
cmp
insb
into
mulb
das
cmp
inc
mov
or
cwtl
call
rclb
pushf
in
mov
cmc
ficomps
in
xchg
gs
lock
cmp
and
fldl
or
fiadds
xlat
mov
repnz
push
clc
inc
in
test
outsb
mov
inc
or
pop
fstpt
mov
push
adc
dec
xchg
or
jne
xor
push
and
and
jnp
push
call
int3
pop
test
xor
mov
pop
shll
jae
mov
shrl
es
mov
mov
lcall
mov
mov
mov
mov
rol
ret
ret
mov
enter
lret
fwait
gs
fs
int
das
into
iret
scas
imul
adc
or
pop
xlat
aaa
fcomp
fidivrl
ja
mov
ficomps
fbstp
loope
jecxz
imul
jmp
ljmp
sbb
push
cmpsb
arpl
fs
es
cmpsb
jmp
es
lahf
dec
loopne
inc
cmp
xchg
mov
add
repnz
jo
sbb
adc
data16
jae
cltd
pop
xchg
lea
mov
clc
sub
jne
pop
jb
aad
add
in
push
adc
or
or
jno
das
push
mov
fnstcw
movsl
inc
pop
pop
inc
negl
jb
inc
and
add
inc
sbb
jno
adc
adc
nop
mov
mov
add
and
cmc
incl
hlt
decl
cmp
pop
stos
cmp
mov
ret
mov
test
loopne
jmp
mov
cmp
call
add
push
lea
jmp
inc
rcl
test
daa
rolb
jmp
jge
and
add
pop
roll
or
and
pushf
fisubs
inc
call
add
or
sbb
call
and
aas
notb
loop
fdivrl
jge
jbe
inc
mov
pop
mov
shlb
mov
test
jne
adc
mov
div
add
xor
push
cld
call
xchg
xchg
call
push
jb
adc
scas
fldenv
xor
or
mov
or
lret
sbb
rcl
lret
mov
ds
stc
push
mov
add
pushf
add
adc
outsl
fadds
pop
cmp
pop
xchg
sti
ret
mov
push
call
sbb
iret
or
cli
ds
stos
sbb
pop
jl
aad
mov
push
push
and
and
lret
add
pusha
test
pushf
ja
bndstx
mov
mov
push
test
lea
cmp
cmp
mov
dec
jp
mov
pop
das
call
push
jns
aas
pusha
stc
push
jmp
cld
push
popf
pushf
jmp
mov
mov
push
xchg
jne
and
pop
mov
int3
xchg
clc
adc
xor
pop
inc
xchg
or
mov
les
les
or
or
jmp
sub
xor
adc
sub
in
out
ret
pushf
les
test
push
shrb
mov
test
ja
pop
incb
outsl
mov
adc
jmp
pop
push
pushf
ret
push
cmpl
mov
ss
sbb
call
push
mov
push
dec
rcr
cltd
mov
repnz
int
push
jmp
imull
pop
push
fidivrl
pop
mov
insl
out
pop
jp
inc
xchg
cmp
in
aas
insb
andl
pushf
sub
or
daa
js
sbb
sub
shr
mov
jg
mov
cmc
rcr
inc
rolb
fisubl
or
or
lcall
fstpt
jne
arpl
insb
pushf
sti
pop
movsl
test
adc
sbb
mov
add
ret
dec
or
mov
jae
jmp
sub
sub
push
mov
cmc
cmc
pop
add
jecxz
movb
jmp
lahf
mov
pop
pushf
cmp
add
pushf
movsb
or
ret
cwtl
push
cmp
push
dec
cmp
stc
clc
cmc
sub
loopne
movsl
outsb
and
data16
out
adc
fsubrs
pushf
ret
insl
xlat
lea
loope
mov
lods
mov
outsb
out
call
inc
adc
or
push
adc
cld
adc
mov
out
mov
add
out
sti
cmc
cli
adc
inc
mov
push
jmp
xchg
outsl
pop
cmp
jo
lea
xlat
ds
xor
fstl
in
dec
test
fsubs
inc
pop
push
lods
or
and
add
push
call
sbb
in
testl
pop
enter
out
cmc
sti
sub
sti
add
push
nop
sti
jae
or
pushf
sti
scas
push
push
insb
mov
mov
xor
imul
jg
adc
cmp
outsb
adc
and
mov
add
rolb
nop
bnd
mov
mov
or
or
add
and
cmp
in
xchg
xchg
xchg
lahf
testl
cmp
into
jmp
adc
dec
or
xlat
xor
mov
int
iret
cmp
jae
ret
pop
hlt
or
fadds
mov
repnz
adc
daa
or
in
cmpsl
repnz
ljmp
mov
stc
or
fidivl
iret
lahf
sub
push
mov
mov
cmp
push
pop
in
fwait
lods
imul
push
pop
mov
push
or
ror
lcall
pop
mov
pop
dec
push
in
push
dec
fdivrs
fidivs
dec
push
lds
cmp
cmp
pop
pop
sbb
bound
push
rcll
mov
pushf
mov
pop
push
je
fldt
push
add
push
adc
call
fiadds
mov
aam
lahf
or
adc
or
lds
dec
cmp
xchg
cmp
xchg
xor
les
popa
insl
lret
add
subl
or
mov
lret
mov
int3
rcl
fcomp
filds
in
mov
sub
push
das
xchg
int3
test
sub
inc
insb
sbb
jle
out
push
sub
aaa
adc
cld
inc
ror
push
mov
xor
scas
adc
adcl
mov
in
fcmovne
iret
in
pop
mov
hlt
adc
test
cmp
in
aaa
es
pop
adc
inc
lock
or
repz
mov
mov
cltd
mov
add
das
push
xor
cmp
and
mov
nop
xor
add
dec
lcall
cmp
int
aaa
mov
dec
mov
sbb
inc
mov
jne
rclb
in
jo
mov
adc
jl
jne
push
xor
push
xor
mov
dec
dec
dec
inc
push
mov
fs
insb
inc
int
sub
aam
stos
je
gs
dec
shll
push
jb
je
xor
shll
imul
testb
dec
xchg
gs
jo
jo
push
pop
xchg
gs
gs
gs
jmp
xchg
inc
xchg
xchg
pop
shrl
cwtl
push
ds
lcall
je
popf
sahf
lahf
mov
shll
dec
movsl
cmpsb
lcall
je
inc
insl
sub
imul
mov
mov
xchg
jne
lret
mov
gs
inc
cmp
sub
jb
xchg
and
inc
outsl
gs
xchg
outsb
outsb
arpl
xchg
in
or
xchg
in
loopne
pushf
xchg
hlt
mov
enter
sar
add
jg
sbb
jb
add
push
dec
cmc
sahf
jmp
or
xchg
or
jg
adc
jo
nop
lods
loopne
and
inc
xor
push
xchg
rclb
lock
mov
push
jmp
push
pop
push
push
adc
sahf
fdivp
fwait
stos
sti
je
push
add
out
add
psubusb
movsl
sti
fwait
sbb
ljmp
cld
cmp
fcmovbe
add
fimuls
inc
mov
push
push
push
rorb
xchg
lret
or
rolb
cltd
mov
add
xor
aas
jne
pop
stc
push
loopne
pop
pusha
xor
call
add
cmp
aas
repz
filds
lsl
mov
mov
add
or
sub
pop
mov
cld
out
je
xlat
les
aad
or
dec
pop
cmp
inc
jmp
call
ficoms
loop
ret
cld
je
push
mov
loope
push
cmc
shl
push
jp
inc
cmpb
fmuls
lock
aaa
sub
idivb
arpl
add
cmp
je
or
out
rcl
inc
xor
add
xchg
jbe
pop
pop
es
push
sbb
pop
xor
push
and
daa
clc
movsb
push
shlb
and
and
jmp
adcl
xlat
gs
pop
and
aad
jp
pop
xchg
ficoml
push
frstor
je
imul
daa
repnz
imul
cmpsb
imul
cli
and
lea
jg
jmp
or
sbb
bound
jb
add
pusha
xchg
in
xor
push
pop
jb
adc
or
dec
pop
iret
pcmpeqd
add
shll
aam
int
xlat
or
neg
sbb
add
mov
push
dec
sbb
mov
jo
in
push
std
movsb
subb
or
and
popa
je
outsl
dec
xchg
gs
outsb
cmp
data16
hlt
insb
cmc
imulb
imull
clc
and
shll
cli
sti
cld
or
in
mov
xchg
xor
aad
mov
or
sub
test
stc
xor
fwait
adc
adc
sbb
pop
insl
test
or
jbe
or
aad
int3
xor
in
clc
enter
cmpsl
mov
adc
push
adc
jns
aam
cmp
in
dec
add
rclb
push
mov
cltd
pop
paddusw
or
int
out
sub
mov
mov
adc
mov
mov
adc
or
and
add
jae
adc
fs
add
sarb
hlt
shlb
cmp
sbb
pop
and
scas
insl
pop
mov
or
jnp
adc
je
and
mov
or
or
sub
and
cwtl
add
xor
das
das
das
outsl
add
je
sbb
je
or
das
das
das
push
jle
adc
adc
pop
pop
cwtl
xchg
es
or
sub
mov
push
sub
adc
cmp
add
sti
das
in
pop
xor
or
enter
adc
cmp
inc
rclb
call
or
xor
pop
add
push
push
fnstcw
xor
inc
movsb
sub
adc
jle
or
xchg
inc
jl
outsb
sub
cs
or
fldl2e
repz
sub
pop
inc
sbb
adc
jle
pusha
adc
jne
call
push
test
cmpl
push
repnz
ret
enter
mov
inc
cmp
push
xor
lea
es
jae
sbb
leave
call
inc
push
push
mov
add
xor
movsl
movsb
mov
and
or
popa
arpl
sub
outsb
imul
jb
imul
insb
outsb
cmpsl
mov
push
dec
shll
lret
mov
sbb
aas
popa
arpl
jb
sub
outsb
gs
sub
mov
gs
imul
es
rcrb
gs
je
xchg
in
imul
gs
push
loopne
loope
jns
shll
out
push
int3
sub
add
lahf
iret
sub
shll
and
xor
jp
outsb
outsl
outsl
mov
je
add
inc
lods
aaa
sbb
jmp
or
jmp
push
jns
adc
repnz
and
stos
inc
inc
cs
jg
pop
jmp
stc
mov
mov
push
push
mov
sbb
jl
pusha
xchg
add
frstor
faddl
fstp
add
pop
xor
push
and
xchg
fstpt
subl
cmpb
xor
je
jb
mov
imul
fdivr
sbb
sbb
outsl
fmull
sbb
imull
or
mov
insb
call
stos
add
dec
xlat
in
out
sub
fdivl
sbb
xlat
or
leave
out
enter
sub
fs
fxch
jb
sbb
sub
insb
mov
sub
adc
out
int3
push
or
and
incl
lods
sbb
jmp
add
mov
jle
mov
or
mov
mov
icebp
movsl
shlb
leave
adcl
dec
sub
add
jmp
shlb
or
loope
push
sbb
aad
notl
push
movl
bound
jg
and
and
jne
shlb
sbb
fwait
and
inc
loope
loopne
mov
inc
sub
aas
adc
leave
sbb
aaa
sbb
arpl
sbb
imul
insl
bound
jne
rol
xchg
insl
or
int3
dec
ss
push
jo
pop
repz
mov
add
mov
mov
inc
pushf
clc
mov
enter
scas
aaa
lods
aas
into
cmp
push
rcrl
je
fisubrs
shlb
dec
cmp
mov
leave
sbb
mov
movsb
push
pop
fnstsw
dec
add
pop
test
leave
enter
add
jg
dec
jb
std
cld
in
rcll
scas
sahf
insb
leave
dec
shll
insb
outsl
push
dec
shll
imul
in
ret
sbb
leave
inc
imul
pop
mov
stc
push
enter
xor
cmc
jecxz
mov
mov
cmp
push
addl
fwait
push
dec
dec
cmp
add
xchg
sbb
ja
add
sbb
dec
mov
ret
ja
jae
cmpsb
jmp
xor
xor
lcall
mov
lcall
arpl
mov
insl
jne
add
push
jge
mov
or
mov
sbb
cld
or
add
scas
mov
sbb
push
cmp
jns
test
mov
inc
xchg
inc
inc
jns
cmp
mov
hlt
adc
and
and
or
and
stos
scas
sub
push
and
push
cmp
loopne
sub
inc
sub
test
adc
in
inc
or
inc
cmp
xchg
adc
fs
fwait
adc
ss
inc
dec
pusha
mov
test
test
repz
incl
push
popa
out
and
aaa
push
push
sbb
in
fs
inc
dec
push
mov
mov
loope
shll
int
sarb
mov
jb
inc
mov
and
sub
sbb
sbb
add
mov
push
add
icebp
lock
or
icebp
jge
push
movsl
movsb
pop
cmc
pop
cmpsl
ss
int3
cmc
inc
pop
sbb
int
and
std
push
adc
or
mov
sbb
xor
push
hlt
je
repz
lret
inc
shlb
xchg
pop
jle
push
lock
movzbl
sbb
div
xor
and
hlt
push
mov
insl
push
or
inc
xor
je
dec
fisttpll
clc
add
add
push
xor
cmpsl
push
mov
or
insb
fwait
in
insb
lock
popa
pop
repnz
cmc
div
insb
jae
dec
xor
je
fs
movsb
xorl
lcall
outsl
mov
sub
mov
in
lret
lods
orl
add
out
pop
cwtl
xchg
xchg
je
and
jp,pn
sbb
outsl
jne
dec
pop
gs
sub
dec
push
dec
inc
push
sbb
xchg
inc
xchg
stos
sbb
popa
les
sbb
pop
fsts
pop
mov
mov
adc
push
je
sub
pop
js
ret
sarb
insl
mov
or
in
jp
stos
push
cmp
cmpsb
xrelease
jle
js
aam
add
hlt
push
mov
mov
or
lcall
sub
xor
cmp
cmp
dec
daa
mov
push
fcomi
sub
adc
mov
pop
inc
sbbl
pop
mov
arpl
or
jmp
orb
pop
xchg
gs
lods
cld
popf
ljmp
adc
xor
stos
stos
cmpsl
call
lea
inc
or
xor
inc
sub
mov
lahf
fstpt
push
cwtl
or
push
pusha
jb
inc
lret
pusha
cmp
mov
sub
inc
js
je
insl
std
jae
fsubrp
sbb
addl
pop
cmp
jle
sahf
sbb
cmpsb
lcall
mov
imul
mov
lcall
orl
iret
sub
dec
sub
mov
add
push
call
add
cmp
hlt
lcall
lea
test
imul
jmp
sbb
jne
or
mov
ds
add
push
or
dec
dec
inc
add
dec
xchg
sbb
shrb
mov
adc
lcall
inc
jno
stos
cmp
rorl
sbb
xor
and
ss
xchg
sub
or
sbb
sub
cs
insb
inc
clc
mov
mov
adc
sbb
mov
mov
adc
push
outsl
push
js
push
mov
add
or
adc
mov
mov
sub
add
lret
sbb
pushf
xor
negl
and
adc
lret
repz
aas
adc
sub
and
inc
mov
sub
shll
out
int3
and
dec
or
jne
push
shll
xor
add
addr16
mov
addr16
ja
mov
lret
mov
arpl
aaa
xor
daa
lret
aaa
outsl
pop
insl
cmp
insl
shlb
loop
frstor
lret
test
or
sbb
sbb
dec
leave
lret
insb
adc
aad
bswap
loop
mov
lret
mov
ja
gs
mov
out
outsb
nop
cmpsb
imul
pop
xor
call
jne
scas
in
loopne
call
jecxz
xchg
loop
lea
mov
pop
outsb
fwait
insl
push
dec
in
in
lock
out
xorb
shll
leave
lret
je
sti
jo
xbegin
add
lea
mov
scas
sub
adc
push
hlt
or
call
fsubl
dec
add
aaa
les
das
les
test
mov
adc
lds
xchg
pushf
pusha
test
add
mov
inc
lods
test
mov
mov
mov
fimull
test
or
sti
pop
sbb
mov
push
in
jb
in
jmp
mov
lea
or
xchg
lret
nop
inc
xchg
add
push
xchg
push
add
push
cltd
iret
ret
test
cld
mov
adc
cmp
mov
insl
mov
push
push
push
mov
mov
movl
mov
xchg
iret
pop
repnz
test
mov
scas
xchg
lcall
mov
mov
in
pop
in
in
out
cbtw
jl
inc
out
ljmp
out
and
or
push
insl
lret
mov
mov
mov
les
mov
mov
iret
call
pop
repnz
nop
nop
mov
mov
cmp
add
shlb
rol
call
mov
cmp
lods
lret
mov
dec
push
lea
clc
mov
mov
dec
mov
cld
mov
push
or
mov
in
inc
in
push
testl
dec
repz
arpl
lock
cmp
or
or
adc
and
jne
hlt
push
and
ret
cmpl
mov
dec
sub
fdivrl
fldcw
fstp
pushf
fnstsw
loope
popf
nop
fistpll
add
xchg
scas
dec
and
dec
sub
out
and
push
je
mov
lret
mov
icebp
cli
mov
rcl
fcoms
call
mov
push
adc
shrb
cld
xor
addr16
loopne
adc
in
pop
mov
es
jb
out
in
icebp
stos
and
mov
enter
aam
pop
clc
je
ss
nop
and
mov
cld
cltd
cwtl
cwtl
and
jae
outsb
mov
sub
push
cmpl
and
xchg
cmp
cmp
cmpsb
xchg
pop
add
sbb
in
fwait
cmp
mov
rorl
and
inc
add
dec
and
sbb
xor
or
addb
add
call
repnz
call
push
pop
jge
sbb
cmc
sbb
inc
fistpl
les
dec
push
test
add
sarb
mov
adc
adc
call
dec
push
test
insb
out
call
add
push
cmp
jb
mov
imul
lcall
enter
pop
add
aam
sbb
or
sub
pop
sbb
or
jns
pusha
mov
fadds
adc
add
cmpb
adc
popa
inc
subb
push
sbb
push
xor
aad
mov
inc
repz
in
jnp
xor
sahf
inc
into
adc
or
mov
push
push
adc
lods
arpl
mov
jmp
sahf
inc
mov
lar
push
add
push
ljmp
jecxz
or
or
icebp
dec
incl
sbb
mov
add
call
push
loopew
inc
ljmp
insl
push
int3
push
xor
inc
push
adcb
fistpl
and
cmp
and
lahf
out
pop
xor
sbb
loopne
adc
leave
jno
test
and
push
pop
push
push
sub
lods
and
push
enter
sub
push
fs
adc
enter
add
mov
or
icebp
ljmp
jmp
and
xchg
icebp
inc
ds
roll
hlt
xchg
call
pop
movsb
sub
sub
push
jne
add
and
and
xchg
xor
mov
int3
and
pop
aas
sub
jne
sbb
sbb
sbb
std
es
ss
xor
pop
xchg
enter
pop
lds
adc
sub
enter
mov
into
ljmpw
pop
fistps
or
push
faddl
mov
hlt
push
bound
mov
jmp
out
mov
push
adc
pusha
mov
mov
xor
xchg
aaa
pop
lea
inc
or
sub
js
mov
les
mov
mov
leave
jbe
sub
jmp
loope
aam
clc
adc
clc
mov
rolb
jne
adc
adc
mov
data16
ficompl
aam
sub
or
jb
loopne
js
or
mov
jbe
push
jle
movsb
push
lea
enter
pushf
mov
xor
lahf
mov
sub
leave
mov
sbb
mov
xor
stc
and
ja
je
lea
xor
pop
sarl
ja
jmp
shr
ljmp
pop
push
jmp
sub
je
dec
dec
je
add
aam
aaa
mov
lea
std
test
jle
lock
ror
call
mov
ret
dec
xlat
lret
inc
add
cmpl
je
pop
pop
jmp
dec
aad
mov
push
lea
scas
bound
in
jae
jge
je
inc
mov
push
xor
jmp
sbb
mov
rcl
mov
jmp
ljmp
loope
fisubs
cmp
xchg
xchg
int3
jecxz
and
mov
daa
ficoms
test
out
popa
es
and
sahf
out
les
hlt
pop
cmp
orl
sti
nop
bound
mov
dec
or
push
pushf
in
in
and
adc
adc
pop
and
xchg
movsl
sbb
push
push
inc
add
outsb
dec
gs
xchg
imul
pop
mov
dec
imul
pop
out
cmp
jmp
lret
or
mov
rcll
add
or
mov
add
cmp
jae
in
mov
xor
or
popf
push
ljmp
out
fsubr
mov
subb
sbb
push
or
std
adc
sarb
inc
pop
std
sarl
cmp
pop
xlat
mov
push
fs
notb
outsb
shrd
insl
push
dec
dec
jmp
or
dec
cmp
add
cmc
test
mov
and
or
imull
jo
je
xor
mov
cld
dec
jle
lea
shrb
dec
lock
icebp
clc
repnz
repz
cmp
xor
jae
std
cmp
lea
xchg
fimull
dec
sbb
ljmp
pushf
sub
or
sbb
stc
inc
aas
in
xor
mov
adc
ret
mov
push
movsl
push
mov
add
and
aam
push
pop
jnp
inc
mov
add
add
add
push
mov
call
faddl
lea
fdivl
into
add
loop,pn
add
push
cmp
cmp
cmp
enter
pushf
and
mov
mov
cmp
icebp
testb
cmp
out
jb
fucom
cmpl
jge
jo
add
jle
insb
fildll
js
mov
cltd
imul
push
mov
mov
fcomi
sub
add
mov
add
dec
sbb
fwait
add
sub
cmp
call
or
shll
test
adc
pop
add
add
loop
push
mov
adc
jne
jge
mov
aam
sbb
das
lods
mov
inc
sub
add
pop
mov
add
xor
pusha
lea
shr
jle
movzwl
mov
inc
inc
mov
add
movl
cli
jne
push
or
ljmp
shll
adc
lock
pop
insl
dec
xchg
into
or
sub
ss
adc
add
fimull
lea
out
adc
mov
les
adc
cld
jl
add
jmp
or
push
test
add
lds
ficompl
ret
mov
je
adc
insl
cmpsl
mov
adc
iret
aas
in
cld
sbb
sbb
lea
pop
mov
pushl
add
push
bound
sub
add
sub
loope
shlb
dec
cwtl
sbb
sub
outsb
or
lret
data16
sarb
sbb
lods
push
mov
call
cmp
lahf
inc
sub
ss
push
jecxz
rcl
popf
inc
les
push
sub
xchg
adc
sub
cltd
xor
mov
pop
adc
jge
stc
mov
adc
ret
insb
aad
inc
pop
or
fstp
outsl
inc
testb
je
pop
inc
sub
dec
inc
rorb
mov
adc
pop
pusha
and
dec
mov
mov
and
das
inc
and
mov
push
test
data16
xchg
mov
add
and
mov
andl
add
fisttpl
xlat
mov
or
nop
sbb
push
sbb
and
faddl
clc
test
adc
xchg
sub
gs
insb
gs
xchg
outsl
jb
jb
imul
gs
jne
imul
push
xorb
js,pn
je
push
je
pop
add
jl
add
add
lock
push
or
loopne
or
xlat
ljmp
push
test
andb
xchg
mov
imul
add
add
or
rolb
pop
fs
dec
sahf
adc
aaa
add
pop
mov
sub
or
ret
fildll
aas
mov
icebp
mov
push
je
push
or
push
mov
ja
roll
cmpsb
jbe
addr16
mov
movsl
clc
les
addl
mov
mov
aad
jl
test
push
cmp
hlt
fmull
daa
popf
push
adc
and
loopne
jb
sub
mov
enter
pop
call
test
push
push
jge
lea
jo
push
or
les
push
jl
xor
rorb
mov
inc
add
mov
dec
adc
out
bound
test
push
push
rcl
fsubrl
mov
pop
jno
mov
cmp
or
jne
scas
subb
sub
adc
je
cmp
ret
inc
jbe
xlat
push
mov
daa
cli
add
stos
loopne
and
fisttpll
sub
mov
push
push
std
ficoml
loopne
mov
xchg
push
or
mov
dec
mov
pop
stos
push
push
sbb
jle
cmp
xchg
imul
xor
je
push
jmp
adc
jns
fbstp
das
inc
cmp
jl
ljmp
sbbb
inc
fdivrl
mov
pop
jmp
sub
rolb
or
fsubr
inc
mov
and
and
or
push
arpl
shrb
outsl
fstps
imul
movsl
addr16
in
in
add
out
jb
outsb
cmpsb
dec
pop
loopne
jae
std
ja
dec
aaa
loop
jcxz
push
jne
popf
inc
jae
cwtl
in
ds
pop
inc
mov
and
gs
xor
xor
jns
dec
aaa
pop
cs
adc
sbb
or
xor
xor
push
push
mull
add
jmp
mov
pop
xlat
mov
sub
xlat
and
or
fistl
je
cwtl
dec
js
jnp
push
adc
push
cwtl
setle
mov
in
call
add
call
ds
mov
mov
xchg
sti
push
fadds
and
jecxz
loopne
add
jle
loop
add
arpl
mov
pop
sbb
enter
movb
xor
or
andb
push
add
decl
lret
add
ret
shll
gs
cs
push
dec
js
gs
jnp
sub
inc
out
enter
push
enterw
cmpsl
pusha
lds
scas
push
sbb
setns
call
push
cmpsl
in
aam
leave
fxch
pop
lahf
jno
and
jno
mov
insb
out
sbb
push
jmp
sbb
out
inc
push
arpl
call
int3
cmp
mov
mov
test
pusha
pop
outsb
push
test
jne
lcall
jmp
xor
mov
mov
cwtl
sbb
or
dec
push
add
outsb
sub
xor
sub
xor
adc
pop
sub
mov
nop
mov
inc
dec
add
jae
jge
loopne
add
sub
outsb
jg
test
pop
jae
sub
mov
or
loope
mov
sbb
mov
inc
movb
sbb
xor
call
fs
shlb
or
add
lods
adc
pushf
xor
jo
and
mov
or
mov
fs
dec
rcrl
lods
adc
test
lea
sub
adc
xchg
fwait
xor
xor
inc
add
imul
inc
and
jb
arpl
jae
fs
pop
adc
gs
outsl
outsl
insb
push
xor
popa
jo
push
fcmovnu
incl
je
popa
insb
and
mov
pusha
cmp
ss
adc
pop
inc
insb
pop
mov
add
je
cs
cmovbe
aas
arpl
ljmp
jnp
std
notl
adc
jge
dec
outsl
fs
adc
aaa
fimull
icebp
adc
add
fs
imul
fnsave
movq
push
mov
pop
sti
imul
sbb
jns
add
ret
pop
mov
or
and
mov
jle
fs
cmp
mov
bound
add
or
add
jbe
add
sbb
jb
outsb
and
ds
bound
push
push
gs
outsl
outsb
push
lods
cmp
ret
mov
xorb
or
push
addr16
fldt
shll
aad
push
sub
push
push
push
mov
add
popa
popf
into
dec
imul
dec
pcmpeqb
push
movzbl
push
das
push
add
subb
mov
insb
mov
push
imul
sbb
xchg
push
outsl
imul
mov
or
push
jne
jb
or
jle
cld
cmp
sti
xor
fwait
test
inc
add
jns
fucomip
daa
je
push
imul
pushf
fwait
imul
jnp
daa
je
addr16
inc
push
dec
and
push
andl
sub
cltd
fbld
insb
ret
test
push
xchg
andb
xor
push
jae
insl
lods
nop
lret
fisubrs
fs
jae
add
add
arpl
test
xabort
outsb
push
mov
scas
adc
push
dec
inc
push
dec
inc
fucomi
mov
lods
add
jo
je
aaa
push
or
mov
test
mov
insb
popa
push
outsb
or
fldenv
ja
gs
fs
into
je
addr16
add
inc
fstpl
std
inc
pop
pop
and
ss
xchg
add
push
shll
jl
mov
fiadds
lock
jmp
pop
mov
push
push
push
mov
es
fwait
jno
dec
pop
or
mov
adc
inc
in
inc
outsl
sbb
add
je
cmp
pop
and
jb
out
dec
fsts
xor
mov
leave
fisttpl
xchg
inc
and
fisubl
inc
dec
mov
add
add
xchg
fcompl
mov
cmc
add
adc
push
adc
or
push
mov
imul
gs
lds
mov
inc
out
jae
cmp
and
addr16
pslld
jne
inc
inc
push
inc
push
xchg
mov
inc
or
cltd
add
clc
mov
in
or
push
mov
pop
push
jb
lods
cmp
cmp
or
xchg
xor
pop
and
add
pop
adc
add
pop
js
pushw
cmp
dec
xchg
popa
addr16
imul
mov
xor
shll
jns
ficoms
lcall
cmp
mov
and
xor
in
leave
inc
pop
push
add
xchg
loope
pop
addr16
sbb
sbb
xchg
inc
ss
ja
xor
lea
or
or
out
pop
add
out
sub
or
ror
adc
add
scas
iret
sbb
fwait
loope
jb
xor
fcomp
aam
sti
insb
ja
dec
faddp
mov
icebp
movb
jo
inc
jmp
sub
mov
jae
sbb
pop
mov
into
in
push
pop
add
push
push
daa
fildll
and
fldenv
jo
xor
push
popa
jbe
adc
adc
rorb
daa
sub
dec
inc
dec
push
dec
and
int
pop
sbb
bts
cmc
mov
bt
jmp
pushf
push
pop
and
mov
mov
add
movsl
popa
test
es
xor
pushf
mov
jmp
in
dec
cmp
or
stos
mov
mov
loope
add
sbb
jnp
add
add
loop
pop
xchg
pop
aaa
mov
dec
pop
movsb
lods
aad
xchg
int
lock
movsb
fadds
push
stos
pop
adc
inc
in
add
incl
orb
jbe
addr16
xchg
sub
lcall
inc
pushf
cmp
sub
pop
mov
xlat
lock
nop
test
ds
decl
inc
rclb
rcl
rcrb
mov
xor
push
cmovle
addr16
inc
ljmp
imul
mov
and
dec
push
into
push
out
aad
cmc
xor
neg
or
movsb
out
mov
pop
fmull
das
cltd
push
mov
pop
sbb
arpl
jbe,pt
push
inc
xor
pop
or
or
push
js
jle
mov
iret
test
insl
jp
call
sub
clc
jae
out
mov
xor
insl
sub
outsl
call
es
clc
inc
xorb
push
outsl
test
jae
or
call
sbb
fwait
xchg
pop
sahf
jg
dec
arpl
xchg
ror
shl
adc
add
lcall
push
lea
test
shrd
shl
sub
fisubrs
cmp
inc
pop
push
aas
stos
inc
mov
pushl
neg
xor
idiv
mov
int
sbb
add
decl
mov
sbb
arpl
pop
xadd
mov
setl
sub
ret
rolb
repz
add
loop
in
mov
stc
pop
lret
mov
cmp
rcr
add
add
sar
mov
ror
setbe
daa
in
ljmp
add
add
arpl
jmp
cmp
stc
mov
pop
inc
jmp
inc
je
sahf
dec
pushf
add
data16
or
mov
fcomps
mov
add
sub
xor
loopne
shr
jmp
pop
pushf
aas
push
mov
push
xor
pushf
not
stc
mov
jmp
mov
sbb
pushf
sub
pushf
jmp
aaa
fucomi
mov
push
add
pop
ret
add
stc
pusha
pop
shll
imul
call
sub
adc
or
insb
in
cmp
inc
loop
xchg
ret
pop
mov
or
and
aam
dec
push
xchg
pushf
and
xchg
add
or
cmpb
xor
and
call
push
inc
lds
sti
and
fstpl
or
call
push
jns
xor
xchg
test
fs
pop
rclb
fstl
cs
inc
ljmp
cmp
cmp
call
mov
jle
sbb
or
add
shlb
push
call
mov
mov
lods
repnz
cmc
es
mov
stc
sbb
pushf
and
popa
inc
xchg
imul
call
ss
mov
sti
add
pop
and
mov
push
ret
xor
data16
rol
or
clc
add
out
dec
push
mov
cmc
jmp
sbb
call
decb
lea
out
mov
out
jmp
pusha
shr
and
and
movsl
js
cld
mov
in
aad
popf
xchg
les
int3
xor
push
subb
mov
pushf
test
mov
jmp
cmp
inc
repnz
andb
adc
out
sub
push
jmp
neg
add
not
mov
ret
mov
pusha
mov
or
sbb
lods
mov
ja
sbb
pop
pop
jne
xchg
xor
jg
les
sub
shld
call
rorb
popa
xlat
jne
clc
inc
clc
lock
lret
cmp
mov
mov
add
add
inc
jmp
mov
rcrb
lea
mov
adc
mov
call
inc
sbb
or
rolb
dec
inc
shl
pop
negb
mov
mov
js
out
loopne
into
xchg
lods
aad
or
loopne
pop
sub
clc
fucomi
dec
fnstcw
xor
lcall
jecxz
rcl
daa
insl
pushl
cmp
cmp
outsl
inc
dec
and
lds
call
idiv
cmp
sub
mov
xchg
mov
add
rorb
int
orb
xor
or
mov
pop
out
sub
stos
push
adc
pushf
or
or
lea
jb
inc
enter
mov
sub
or
cwtl
rclb
cli
xor
mov
adc
add
call
push
xor
sub
xchg
jl
sbb
mov
add
fwait
mov
dec
test
jb
jmp
outsl
or
pop
cltd
mov
push
pop
xchg
push
add
sbb
xchg
or
xchg
lock
pushf
mov
fstps
mov
or
and
aas
jecxz
divb
ret
cmp
sub
clc
pusha
add
pushf
int3
cmp
mov
jmp
xor
jge
pop
scas
loope
push
xor
pushf
fiaddl
icebp
or
and
cmp
inc
jmp
cmc
outsl
imul
push
and
add
cld
mov
or
shrl
ret
push
outsl
mov
jb
outsb
movsb
cli
push
dec
mov
pop
aad
cmc
adc
mov
inc
ja
mov
xor
outsl
test
je
pusha
jae
pop
das
imul
imul
sti
pop
aaa
lcall
daa
lods
in
sub
and
or
jmp
cmp
ljmp
iret
and
jae
es
ret
ss
cli
mov
push
aas
jo
and
std
mov
insl
push
call
adc
incl
ret
test
test
clc
lea
jmp
mov
push
popa
lret
pop
mov
or
enter
scas
mov
lock
call
fwait
insb
insl
lock
inc
pop
push
sarl
push
push
iret
data16
ret
popf
mov
jnp
sbb
outsb
push
aas
jl
addr16
push
mov
pusha
adc
cmp
or
add
xor
mov
stos
push
push
push
jmp
decb
xor
fisubs
add
mov
hlt
inc
ss
test
xchg
push
int
adc
push
call
iret
je
xor
jmp
insb
cmp
mov
xlat
jae
add
scas
mov
stc
sub
mov
mov
jg
ret
test
icebp
mov
mov
cld
lea
std
fcomps
xlat
xchg
neg
movsl
mov
int
push
pushf
dec
bound
das
dec
xchg
mov
cmp
or
jmp
outsl
out
in
shl
or
call
stc
xchg
add
or
dec
mov
outsb
mov
repnz
mov
jo
out
leave
mov
sti
mov
xchg
mov
scas
push
fiadds
adc
xor
or
jg
movups
aad
or
jmp
dec
push
add
cmp
and
xor
in
add
loopne
pushf
lcall
je
sub
mov
stc
add
test
dec
scas
sbb
mov
sub
or
mov
cltd
cmp
lock
pushf
ret
cmpl
dec
mov
stos
inc
out
xor
push
aad
daa
lock
cmc
ds
jo
xor
or
cmpsb
pusha
dec
insl
push
cltd
add
hlt
jmp
mov
push
sbbl
mov
fsubrs
sti
iret
or
cmp
push
rep
pop
sub
sti
pop
push
test
push
add
fiadds
pushf
jnp
fsubr
or
jne
cmp
int
mov
or
negl
or
int
popa
fisubrs
adc
lods
ss
sbb
in
aas
fldt
or
sbb
cmp
push
rolb
test
jle
das
int
in
mov
xor
fsubrp
lret
mov
push
fucomip
cld
xchg
add
add
xchg
xchg
pop
into
or
push
pop
in
pushf
or
mov
fiadds
mov
xchg
fneni(8087
icebp
add
or
imul
push
xor
or
iret
jle
mov
push
xchg
ja
add
ja
fsubrp
sti
or
xor
fimuls
jg
cmpsl
fdivr
and
jnp
pop
das
adc
inc
ficomps
push
out
pop
ljmp
in
dec
aas
ret
fwait
loop
or
neg
jnp
sbb
sub
xchg
pop
pushf
in
mov
ret
dec
jnp
std
aaa
sti
cmp
and
aaa
sti
mov
inc
mov
loope
pop
or
daa
jg
fisubs
pop
xchg
and
ja
sbb
loope
ret
adc
jnp
jle
mov
mov
push
les
js
pop
cmp
add
out
add
add
outsl
ret
das
outsl
ret
cmpsl
push
cli
movq
leave
popf
std
aaa
ja
setae
pop
pop
cltd
idivb
jnp
inc
maxps
mull
mov
or
repnz
repz
dec
jmp
jle
jle
repnz
fdivr
ret
pop
into
or
pop
cvtps2pi
or
push
sbb
add
jecxz
and
pop
vphaddbq
cmpsl
lock
push
imul
aas
fbld
out
pop
scas
push
or
ja
xchg
icebp
xor
orl
jnp
push
out
pop
push
pop
pop
js
popa
mov
xchg
jnp
lahf
sbb
pop
fsubp
adc
mov
clc
or
ja
ss
scas
inc
pop
cmpsl
push
push
rol
mov
push
mov
cli
rolb
popa
cli
mov
add
sbb
push
das
jge
subl
pop
mov
jl
aas
jae
mov
std
rol
testl
aam
loopne
xchg
jle
repnz
xor
and
outsl
lock
insl
pop
call
in
add
shr
add
aaa
es
mov
sub
shl
push
repnz
popf
cmpsl
stos
push
mov
rorb
push
fbld
loop
das
push
test
cmp
cmpsl
mov
daa
sub
sti
xor
push
repnz
rclb
add
pusha
aas
inc
sub
dec
fisttps
movsl
clc
pop
inc
andb
and
sub
push
mov
clc
dec
mov
fdivs
aas
inc
inc
sbb
adc
adc
xchg
mov
daa
xchg
clc
aas
mov
dec
cmp
xchg
call
or
scas
and
call
cltd
fistpl
ret
mul
fcmovnb
insb
test
je
mov
inc
out
mov
or
daa
sbb
mov
unpcklps
push
loopne
pusha
pop
mov
pop
pushf
add
xor
mov
ficoml
call
and
ja
or
adcb
cmp
sbbl
pushf
jmp
test
or
mov
push
mov
clc
jmp
mov
test
sar
and
cmc
call
movsbl
and
stc
pop
jo,pt
jecxz
or
sub
andb
push
cld
jle
fisubrl
cld
call
in
and
cmp
jmp
cmp
push
push
icebp
aaa
pop
scas
adcl
sbb
mov
jo
and
mov
adc
add
adc
dec
pusha
loop
std
add
push
sbb
in
ja
in
out
cld
call
add
xor
jmp
or
flds
mov
mov
mov
or
je
arpl
enter
cs
mov
jmp
inc
mov
add
loope
stc
sbbb
in
adcb
out
cmp
call
mov
fstp
pop
jle
pop
inc
mov
sar
leave
das
clc
js
mov
pushf
push
cmc
clc
clc
or
pop
sub
push
inc
cld
icebp
pop
add
jo
sub
test
push
loope
ret
lea
pop
push
movsl
out
adcb
insb
js
movsl
das
in
call
or
fiaddl
testl
insw
cmp
ret
out
and
fidivl
not
negb
sub
out
fidivrs
pop
pushf
andb
fwait
xchg
pop
xchg
mov
sbb
idivb
xor
ret
sub
sbb
sub
out
adc
adc
add
mov
call
pop
mov
xchg
pop
daa
call
dec
icebp
pop
insl
lcall
std
lea
data16
cmp
dec
popf
clc
jmp
jno
adc
shll
cwtl
mov
loopne
inc
and
pop
adc
sbb
popa
mov
popf
or
call
xor
mov
rol
pop
jmp
add
movsb
push
sub
mov
sbb
pop
out
imul
imul
pop
pusha
xor
comiss
lea
mov
jo
mov
sti
pop
mov
jno
or
cmp
mov
cld
mov
push
mov
repz
xorb
mov
clc
or
mov
cmp
test
push
sbb
fsubrl
popa
lahf
jae
or
adc
mov
jle
mov
cld
dec
ud2
loope
ret
lret
xchg
and
lea
outsb
sbb
ss
pusha
jmp
add
mov
sbb
fisubrs
push
inc
push
in
sbb
cmp
jo
and
jmp
testl
cmpsb
pushl
inc
mov
sbb
or
sbb
mov
sbb
xchg
lock
xor
push
femms
ljmp
jmp
icebp
mov
add
cwtl
sub
out
sub
mov
add
push
pop
cmp
std
pop
add
aaa
pusha
in
fisttpl
mov
sub
pop
and
out
lret
jbe
xor
or
fbld
mov
xor
sahf
addr16
inc
mov
xchg
mov
inc
push
inc
dec
ret
lret
call
movsl
lret
adc
xor
mov
insl
pop
and
push
dec
xor
xchg
jp
fidivrs
fstp
scas
ret
fs
jg
and
push
mov
sub
push
xchg
stos
add
rcrb
push
push
cmp
xchg
jmp
pop
cmp
cmc
push
shl
call
loope
dec
sbb
jmp
push
lret
lods
add
cltd
inc
mov
dec
fucomip
or
stos
add
rorl
sar
xchg
rolb
loope
clc
test
add
or
neg
and
mov
or
icebp
push
push
arpl
mov
ret
pop
add
imul
mov
das
dec
out
inc
mov
jo
ljmp
mov
ret
pusha
mov
cwtl
mov
adc
mov
push
cwtl
add
pusha
or
mov
test
or
jns
jg
adc
not
aad
ljmp
adc
or
in
push
xor
sahf
push
mov
icebp
jb
mov
loope
hlt
add
pop
add
inc
mov
xor
sbb
or
stos
mov
pop
shl
rcrb
addb
not
jg
sbb
stc
clc
sub
cld
shlb
dec
pop
loope
pop
cmc
xchg
xchg
jbe
ss
stos
mov
push
sahf
xchg
jo
add
jne
bswap
clc
outsb
jae
sbb
setle
sbb
cmp
cld
std
mov
cmpsb
pop
loop
lsl
mov
add
sub
test
add
out
lcall
int
ja
jnp
jo
pusha
sub
out
imul
xchg
fidivl
push
sub
dec
and
mov
xor
aaa
enter
outsl
and
leave
sub
xchg
sbb
ds
adc
sub
push
mov
or
and
xor
insb
and
sarl
sbbl
cmp
loope
fcoms
in
mov
cli
inc
sahf
in
jae
mov
push
pusha
cltd
add
in
sbb
and
dec
push
movsl
pop
mov
aaa
add
inc
sbb
sbb
mov
jmp
cmp
mov
nop
jmp
add
shlb
push
xor
mov
or
mov
arpl
mov
ret
cmpsl
repnz
mov
pop
xchg
sub
pusha
push
out
pop
xchg
adc
ds
mov
pushf
push
and
pushf
imul
cmp
lock
divl
jnp
cmp
out
aaa
clc
push
xor
mov
jecxz
inc
ljmp
sub
pop
mov
aaa
pop
hlt
jno
enter
call
inc
cmp
or
std
test
add
andl
inc
movsb
jg
out
adc
jmp
mov
clc
sbb
lds
mov
sbb
mov
adc
push
push
jmp
fnstsw
fimull
pop
sbb
leave
inc
je
movsb
int3
sbb
or
cs
cs
sbb
aam
lock
cmp
ffree
sub
bound
cwtl
mov
aaa
popa
jne
jmp
outsb
dec
fldl
icebp
pop
fdivrs
pop
cmc
adc
mov
mov
mov
mov
jecxz
cmc
jne
xchg
jmp
movsl
and
mov
sarb
jle
sbb
pop
push
jns
mov
push
pop
js
or
mov
shl
subl
xor
jle
jb
sbb
stc
mov
jae
lea
loop
mov
mov
test
mov
cmp
int
and
repz
cmp
sub
push
mov
adc
notb
cmp
test
les
fsubl
add
outsb
les
mov
xchg
jmp
xor
pop
rcll
xor
push
inc
adc
orl
and
mov
in
clc
jne
cmc
popa
ret
inc
inc
test
insb
rorb
scas
jmp
push
jbe
sbb
imul
cmpsb
shr
hlt
lock
and
dec
shl
push
cmp
jmp
xor
fwait
jg
and
mov
ret
add
pop
mov
repnz
jg
mov
mov
out
xchg
dec
jmp
hlt
mov
ljmp
call
test
fiaddl
jg
roll
shr
xor
cmpsb
pop
stos
xchg
xor
xchg
ret
into
add
lea
clc
mov
mov
punpckhwd
pop
jmpw
call
jp
mov
xchg
mov
and
inc
mov
cmp
in
mov
lds
adc
xchg
arpl
jle
inc
rol
sar
dec
repz
insl
sub
sar
popf
roll
lahf
cld
adc
dec
jnp
push
cs
or
pop
sub
push
daa
push
or
mov
push
outsb
testl
jle
pop
aaa
pusha
cmpsb
insl
or
pop
fbstp
cmc
xchg
ror
xadd
leave
pop
shl
and
test
push
loopne
mov
push
cld
mov
in
xor
inc
inc
fwait
dec
push
cwtl
xchg
mov
inc
loopne
imul
push
pop
into
dec
js
or
jnp
add
jo
mov
jecxz
sub
jl
and
pop
sbb
lds
mov
cmp
pop
sub
mov
test
ret
ss
pushf
cmp
hlt
mov
sub
rcrb
je
cltd
loop
cmp
sbbl
xchg
adc
ss
and
cmc
adc
into
xor
hlt
pop
addr16
sti
push
mov
rorl
jmp
out
out
mov
repnz
sub
outsl
push
pusha
aas
icebp
and
lock
dec
in
shll
sub
dec
aas
inc
mov
fidivs
ljmp
inc
ja
jg
addb
ja
call
inc
jg
lret
jg
inc
punpckhdq
pop
xchg
inc
mov
outsb
mov
push
and
sbb
lcall
xor
lahf
popf
adc
xor
test
adc
jbe
imul
imul
icebp
movsl
lahf
add
sbb
inc
pop
movsb
mov
out
mov
sahf
push
and
sub
add
dec
mov
mov
addr16
inc
sbb
add
call
out
outsl
jno
push
fbstp
clc
in
cli
stc
sbb
call
insb
push
adc
dec
hlt
pop
dec
lret
mov
mov
pop
adc
ret
ljmp
test
cltd
xor
rclb
sbb
ljmp
dec
aam
push
lods
cld
lret
hlt
insb
jl
add
ds
dec
arpl
cltd
neg
lcall
ljmp
push
push
push
cmp
icebp
mov
xor
testb
mov
add
xor
sbb
movsl
fnstenv
movsl
sub
fildll
gs
sbb
ret
sub
ffree
cmc
lret
stos
lahf
pushf
pop
inc
pusha
popa
mov
lahf
mov
xor
daa
xor
xchg
jmp
es
mov
sahf
jbe
movsl
popa
xchg
pop
in
xor
int3
xchg
test
mov
xchg
movq
cmp
incl
loopne
ret
jo
test
testl
and
push
dec
sub
add
push
mov
enter
cmc
sbbb
bound
push
das
lock
pushl
xor
add
icebp
loopne
icebp
xor
pushf
cld
xor
push
cmp
add
adcb
xchg
loope
fwait
mov
add
scas
adc
pop
inc
std
decl
jp
insl
xchg
insb
cmp
inc
xor
and
outsl
lds
cmpsb
cmp
fwait
pop
shrb
mov
js
cmp
push
or
pop
mov
jmp
jmp
scas
dec
rol
mov
mov
inc
rcl
pop
fdivrp
lcall
nop
add
adc
mov
insl
push
or
sbb
push
scas
jnp
xchg
inc
adc
xor
imul
iret
mov
cmpsb
cmc
ljmp
std
mov
inc
sarb
jns
in
lods
dec
pushf
mov
popf
mov
adc
cmp
movsb
in
iret
dec
push
rol
shlb
push
loopne
movb
fisubl
es
les
jl
jo
arpl
comiss
cs
das
mov
movsb
add
xor
ret
adc
cli
inc
xchg
out
js
jecxz
xlat
xor
add
xchg
aad
mov
dec
ljmp
push
repnz
mov
xlat
add
fmuls
cmp
jno
repnz
pushl
add
in
xchg
push
lcall
mov
xor
push
sub
push
jnp
in
inc
sbb
mov
dec
dec
jg
fyl2xp1
imull
jg
mov
pop
movsb
and
aas
shrb
lock
jp
push
daa
pusha
add
scas
ret
lcall
imulb
fbld
out
enter
dec
out
dec
lock
insl
jmp
sub
loope
mov
addl
imul
or
pushf
pop
stos
sbb
sub
adc
arpl
or
jnp
nop
lcall
or
xchg
and
sbb
lock
xor
mov
adcl
pushl
cli
lret
sub
pop
fs
int3
mov
sbb
xor
out
call
shlb
imulb
jo
shrb
repnz
jne
mov
jg
push
cs
and
mov
mov
xchg
inc
std
sub
push
decl
inc
lock
xor
scas
sub
lret
ror
nop
lock
in
mov
lcall
std
test
push
test
pop
pop
out
je
mov
insl
adc
push
mov
mov
jmp
cwtl
sub
incb
pop
loop
dec
ja
xadd
sub
fwait
cld
jne
xchg
push
arpl
movl
or
xor
sbb
stc
mov
faddl
xor
jg
mov
data16
push
out
xchg
pop
scas
xor
pop
xor
xlat
dec
mov
mov
scas
out
movsl
int3
jae
xor
dec
pushf
xchg
mov
orb
mov
fstl
in
push
cli
jnp
xchg
ret
jg
mov
bound
out
out
call
fistpll
or
xchg
and
push
or
outsb
and
bound
incl
dec
insl
ja
pop
fldl
jg
fldl
scas
mov
adc
mov
sub
jmp
mov
jmp
adc
outsb
mov
mov
lcall
sbb
jns
bound
hlt
jp
ret
arpl
adc
mov
outsb
cld
lcall
loop
mov
jns
into
aas
movsl
das
push
ljmp
add
cltd
jg
call
add
xchg
popa
popa
aam
daa
dec
mov
dec
cld
lcall
pushf
pop
out
lds
repz
pop
repz
cmc
mov
std
leave
outsb
mov
cmp
sub
es
adc
push
call
xlat
sub
lahf
mov
jne
or
int
mov
push
insl
mov
loopne
incl
and
hlt
in
push
das
dec
adc
daa
add
add
lcall
hlt
lcall
add
sbb
mov
dec
lods
mov
shlb
or
pop
stos
sbb
push
out
cli
jge
idivb
jmp
movsl
push
shll
loop
push
or
cmp
pusha
repnz
decl
ja
dec
popa
jno
push
jmp
cld
rcrb
dec
cld
outsl
lcall
mov
mov
cld
push
dec
imul
repz
push
xchg
loopne
lahf
jne
cmpl
inc
arpl
jmp
mov
inc
cmpsl
into
movsl
push
and
jg
xor
test
loopne
lock
hlt
pop
icebp
sahf
jge
mov
xchg
fisubrl
ljmp
jmp
add
pushf
mov
jo
mov
pop
push
xchg
test
push
pop
xchg
addr16
jp
inc
mov
pop
xchg
sbb
add
pop
pop
cmp
cmpsb
popf
sbb
lea
cmp
jmp
sub
mov
int3
lahf
xchg
add
sti
ret
rcrb
adc
ljmp
jno
repz
sahf
fidivrs
in
aas
insb
lret
insb
imul
lcall
sbb
jns
pop
mov
insl
popf
add
insb
insb
jle
or
cltd
mov
xor
jo
jns
dec
pop
inc
dec
mov
je
movsb
cmpsb
outsb
sbb
ljmp
das
les
imul
cmp
dec
call
stc
in
push
or
mov
sbb
lret
or
lahf
outsb
popf
push
mov
iret
jns
cmp
stc
cld
aaa
out
out
out
lcall
lcall
cmp
and
sti
jg
outsl
sbb
std
inc
imul
mov
movb
das
cmc
out
mov
stc
sub
mov
add
mov
repz
sub
cmp
loope
cld
cmp
xor
add
cli
inc
lods
pop
test
sub
fisttps
jmp
enter
lret
loope
jb
inc
jl
in
dec
test
rcrl
popa
je
std
inc
add
push
loope
ret
dec
in
push
repz
out
roll
jg
inc
incl
sub
lret
jl
aas
or
inc
scas
iret
mov
add
jmp
sbb
cmp
pop
push
pop
jns
mov
hlt
cmp
fcomps
sbb
dec
gs
loop
jmp
xor
shrl
mov
pop
xlat
adcl
es
cld
ljmp
cld
cmp
xchg
fwait
adc
int
int
notb
jg
cmp
repz
inc
loopne
push
cmp
push
jge
mov
jg
sbb
outsb
adc
scas
fisttps
mov
cmp
cmpsb
push
and
or
mov
test
lcall
mov
popa
sub
mov
mov
addr16
pop
js
pusha
mov
jne
xchg
cmpsb
mov
lods
jmp
outsl
push
or
fists
fdivr
or
jg
pop
scas
ljmp
xor
mov
in
gs
pop
jmp
clc
pop
mov
jle
js
fstpt
ret
div
mov
xor
mov
in
stc
pop
cmp
add
xor
cmp
out
cltd
sbb
dec
xchg
cli
pop
mov
std
lcall
in
mov
cmpsb
push
sub
cwtl
xchg
mov
mov
mov
outsl
sahf
mov
mov
cmp
xchg
lahf
push
pop
jle
and
jmp
or
in
push
pop
jnp
sarl
jbe
jg
xor
std
sub
cwtl
and
outsl
xchg
fwait
pushf
push
or
sub
or
mov
pusha
dec
ljmp
inc
lods
inc
xchg
lock
mov
fcomps
sar
dec
js
xchg
ss
inc
or
in
icebp
jae
cld
jg
frstor
scas
sbb
jnp
inc
push
inc
jns
inc
push
stc
addr16
sub
outsb
icebp
sbb
push
push
dec
out
pop
loopne
decl
mov
scas
movsb
sbb
sub
lret
test
js
scas
ficoml
add
test
pop
lea
rcll
lods
add
lcall
and
lahf
cwtl
and
pop
clc
sarb
rclb
jge
jle
pop
jg
pop
call
dec
jnp
jmp
data16
mov
adc
mov
jmp
sahf
push
cli
sbb
mov
jmp
sbb
sti
aad
loop
sbb
adc
lods
fcoms
pop
mov
lods
sbb
mov
mov
mov
das
lock
out
xchg
jae
mov
lcall
call
xchg
das
xchg
out
inc
dec
pop
and
out
aam
pop
push
or
push
clc
call
jle
imul
sub
dec
mov
mov
inc
shlb
add
std
imul
inc
pop
jp
xchg
daa
or
incl
lret
dec
hlt
lods
lcall
aam
aaa
les
jns
incl
popf
jo
dec
pop
cmp
int3
dec
xchg
adc
and
inc
cwtl
in
add
push
arpl
jnp
sarb
ss
ret
cltd
das
and
adc
cmpsb
lds
loop
cmp
pop
cmp
cmpsb
mov
inc
in
rolb
int3
jp
jp
jb
cld
jno
aas
inc
cld
jnp
addr16
push
push
jnp
fcmovbe
fwait
enter
incl
pop
data16
out
push
stc
xorl
nop
test
sub
das
pop
fmuls
cwtl
xlat
adc
cmp
adc
lret
xchg
inc
rcl
pop
and
sahf
jns
push
stos
or
jp
stc
mov
dec
jo
movsl
push
mov
outsl
js
icebp
or
outsl
ja
pop
call
or
cmp
shll
lcall
ljmp
pop
in
in
out
jle
mov
std
in
mov
and
mov
nop
aad
xor
cs
out
mov
pop
inc
imul
enter
aaa
sbb
jmp
or
pop
insl
fwait
dec
xchg
fcomps
or
vmwrite
jno
push
cli
mov
jne
mov
add
out
jne
rcrb
insb
es
mov
add
or
test
add
jmp
mov
dec
out
insb
push
xor
pop
add
jno
cmp
dec
jbe
out
pop
popa
rcll
lret
pop
mov
inc
xchg
jnp
mov
testl
mov
jmp
fiadds
clc
ljmp
nop
in
inc
mov
inc
ss
ljmp
mov
sbb
add
jp
mov
sti
shlb
fidivs
cld
divb
fmul
inc
lahf
insb
aas
faddp
ret
cld
jg
pop
jne
in
pop
ss
subb
adc
ja
das
cld
mov
jmp
cmp
sarl
adcb
call
jg
mov
mov
mov
cmp
inc
pop
in
xor
or
decl
mov
clc
adc
xor
inc
ds
add
daa
xchg
ret
aaa
inc
hlt
ret
push
aaa
mov
mulb
push
lods
cmp
clc
decl
inc
cmpsl
imull
leave
iret
dec
loope
lds
add
lock
push
leave
cmc
xchg
pop
std
fs
andb
push
int
fnstenv
fldl
push
pushf
cmp
cmp
lea
aaa
push
pop
push
jae,pt
mov
adc
mov
cmc
in
repnz
outsl
lahf
push
call
ss
or
pop
push
or
ds
sub
mov
pushf
adc
jmp
test
ja
and
outsb
lock
adc
test
stos
cld
lods
sub
sub
call
outsl
dec
pop
add
scas
mov
lds
cmp
xor
or
and
movhps
push
cltd
mov
jmp
fsubs
outsb
push
mov
fisttpll
or
sub
push
adc
mov
cli
or
call
cwtl
jno
ret
fnstcw
dec
addr16
dec
fwait
andb
cld
lcall
pop
test
std
push
neg
ret
addr16
cmc
push
test
and
cli
ret
jge
jg
push
cli
icebp
in
push
enter
push
cltd
sbb
add
stos
mov
out
hlt
bnd
call
outsl
pop
jle
or
push
and
jecxz
add
stos
sbb
sbb
sub
repz
pusha
jp
cmp
pop
sbb
cli
aad
scas
popf
das
movb
rorb
fdivr
cmp
jmp
xor
aaa
shrb
dec
jnp
dec
shrl
out
int3
adc
aad
adc
fsubrl
leave
jp
stos
adc
cwtl
cmpb
and
pop
mov
fwait
mov
fadd
mov
push
cmp
sub
cmp
nop
cmp
and
adc
movsb
pop
mov
cltd
cli
and
adc
sbb
jo
jecxz
loop
push
dec
or
ficoml
outsl
sub
shrl
jns
push
lret
call
testb
jle
inc
pop
fcmovb
sub
cmpb
aaa
cs
push
sti
pushl
sbb
push
in
in
lock
lock
test
mov
or
push
mov
hlt
out
mov
mov
ret
aaa
and
jge
sub
sbb
pushf
push
ficomps
inc
cmpb
jp
hlt
data16
lods
ljmp
pop
inc
out
mov
in
ret
clc
mov
mov
fwait
popf
xchg
xorl
in
jmp
sub
xor
mov
xchg
mov
scas
out
mov
dec
and
adc
popf
mov
jb
mov
adc
mov
mov
mov
lock
mov
imul
dec
int
mov
outsb
fcomps
std
call
loop
mov
or
pop
mov
cwtd
dec
adc
loope
adc
pop
icebp
test
lea
outsl
mov
xor
or
pop
ljmp
and
daa
mov
stos
test
jmp
or
movsl
jg,pt
mov
icebp
ljmp
test
cmp
pop
fwait
fwait
mov
call
shlb
or
mov
cmc
loope
push
or
push
fsubrp
stc
pop
inc
push
jne
lcall
fistpl
sbb
adc
mov
jno
inc
out
sti
rcll
icebp
lcall
pop
jge
shll
cmp
je
pop
or
insl
aas
jge
add
out
push
or
xor
pusha
sub
sbb
stc
xchg
pop
lcall
inc
stos
jne
out
icebp
inc
jmp
jmp
xor
sbb
out
push
incl
adc
sbb
loope
imul
popa
shrl
adc
mov
inc
dec
xor
mov
mulb
aad
pop
mov
or
mov
scas
adc
mov
mov
pop
mov
aam
scas
inc
loop
rcrb
loop
ljmp
in
arpl
xor
push
shl
pushf
out
mov
stos
xor
sub
jae
push
inc
push
sbb
fistpl
iret
jbe
ret
fadd
out
add
and
adc
cwtl
mov
jl
push
mov
pushl
movsl
mov
push
movsl
rolb
xor
icebp
lret
je
cld
ljmp
cmc
int
cmpsl
inc
and
ljmp
mov
dec
xor
nop
or
adc
or
repnz
cmp
mov
cmc
and
pop
push
jmp
call
aas
jp
jmp
movsb
ljmp
and
test
add
mov
xchg
test
decl
les
jl
lahf
sub
addb
cli
dec
in
mov
mov
xor
sbb
scas
pop
push
scas
popf
and
ljmp
and
sub
sbb
lahf
mov
enter
int3
mov
js
arpl
push
and
cmpl
sbb
cmp
stos
pop
push
sahf
jecxz
sar
jge
jno
xchg
aas
incb
in
out
and
mov
aaa
cs
push
out
idivb
aas
lods
xchg
sub
xchg
xchg
pop
test
stos
adc
jg
aaa
lods
and
mov
test
push
add
lods
stos
add
popf
out
lcall
pop
mov
sub
dec
cld
loop
cld
jp
inc
pop
hlt
dec
imul
in
hlt
cmp
daa
lcall
stos
xor
movsl
adc
inc
call
movsl
xchg
fidivs
add
clc
insb
outsb
loop
repnz
push
out
out
sub
jmp
mov
shlb
sub
cltd
pushf
adc
mov
scas
call
ljmp
xor
cmp
les
mov
pop
mov
sarb
mov
loop
inc
imul
jge
inc
cmc
mov
cmp
fisubrl
rol
js
lret
push
jecxz
lds
leave
dec
xor
pushf
push
jmp
push
andl
ljmp
in
cs
repnz
shrb
add
push
aaa
adc
lea
movsl
sbb
sub
lods
xor
loope
js
cli
pop
insb
dec
pop
loop
popa
cmpsl
sbb
lods
in
jg
scas
loop
and
xor
aam
sub
dec
out
push
ror
divb
ret
mov
pushl
lcall
xchg
mov
jno
faddl
in
notl
mov
movzwl
jg
lcall
aam
dec
add
pop
add
push
cwtl
mov
or
inc
ds
decl
fldt
jle
push
cmp
jg
iret
inc
push
cmc
cmpsb
inc
mov
add
inc
mov
push
mov
scas
cmp
and
mov
aad
jno
shrb
fsubp
repnz
dec
ljmp
test
outsl
ror
loop
pop
mov
pop
mov
jo
cmp
stos
sti
int3
xor
jnp
std
mov
jg
xor
pop
xor
sbb
pop
loopne
stos
daa
sub
decl
push
add
cmp
nop
xor
mov
insl
decl
lcall
in
xchg
add
dec
push
sbb
cmc
dec
jg
imul
cli
mov
push
fcompl
adc
jbe
or
and
test
icebp
jg
ljmp
rcll
jl
jge
pusha
ljmp
pop
adc
lds
lcall
jle
int3
dec
jp
rol
fstps
xlat
and
jbe
or
push
mov
in
dec
xor
sub
das
mov
xor
icebp
add
jns
fxch
jmp
or
jmp
dec
push
fldpi
negl
lea
aas
mov
sar
scas
adc
lods
mov
arpl
sbb
mov
clc
pushl
stos
xchg
outsl
mov
orb
aaa
movsl
repnz
push
pushl
std
cmp
pop
mov
stc
cmp
pop
loopne
cmp
int3
or
mov
enter
dec
cmp
cli
pop
das
add
insb
lret
arpl
ffree
push
inc
mov
enter
test
mov
pop
xchg
ljmp
cld
fidivl
pusha
push
xorb
and
mov
inc
aas
sub
call
mov
nop
scas
sub
scas
dec
das
cmc
fbld
sbb
xchg
adc
jmp
or
adc
or
add
xor
push
popa
inc
mov
or
mov
int3
pop
lds
lds
pop
aam
in
std
out
ss
ficoml
loop
jmp
lret
mov
or
jbe
ret
or
cmp
sbb
mov
call
mov
pop
fadds
outsl
out
lods
and
sub
jmp
negl
mov
int3
loop
mov
add
test
mov
adc
cmp
jg
adc
sub
xchg
adcb
push
sti
fdecstp
dec
pop
push
mov
ljmp
xor
mov
pop
das
push
or
stos
mov
lea
in
setp
fistl
rorb
repz
repz
push
mov
fnstsw
mov
movsl
mov
out
test
add
bound
bswap
push
jle
mov
lcall
mov
in
int3
fistpl
in
sub
in
ljmp
and
lea
lret
or
dec
cmc
lret
or
cmp
sbb
mov
sub
insl
jo
pop
sarb
lds
xchg
add
adc
mov
inc
mov
popa
icebp
rclb
std
mov
rcl
xchg
xchg
mov
aad
push
inc
push
mov
fwait
or
jno
cmp
das
add
loopne
aad
aam
inc
repnz
fistps
inc
and
in
int
lret
lahf
testl
loop
test
call
xor
jle
pushf
imul
sahf
xor
cmp
xchg
lahf
mov
jb
aaa
lds
or
call
mov
xor
ljmp
mov
loop
inc
out
clc
das
hlt
lods
repnz
sbb
add
xor
xor
hlt
out
pop
push
data16
pop
pop
jmp
popa
inc
fcmovnbe
ret
jle
inc
incl
call
arpl
jle
shr
clc
inc
hlt
sub
push
xchg
data16
int3
in
daa
dec
and
outsl
das
pop
mov
sahf
mov
push
fwait
xor
mov
jo
cs
cmpsb
cmp
test
in
aad
loope
cmp
lahf
xchg
pop
call
cli
mov
subl
js
jae
icebp
lods
loopne
ljmp
or
add
out
or
adc
cmc
add
orb
sbb
lcall
fildl
push
pop
icebp
sahf
loopne
xchg
fwait
lahf
pop
jb
bnd
shrb
or
pop
clc
xchg
and
repnz
mov
mov
cmpsb
add
push
push
lret
fisttps
frstor
ja
out
add
popf
mov
mov
mov
gs
ljmp
lcall
sub
shr
jl
sbb
sti
std
lods
mov
dec
mov
adc
jmp
fcoml
sbbl
lahf
push
ljmp
fistl
adc
outsb
aam
jle
lds
je
loopne
cld
rol
loop
test
and
add
js
dec
fstpl
fwait
fs
jl
mov
and
cld
xchg
call
outsl
jge
test
xchg
xor
cmpsl
lods
push
adc
xorl
cmpsl
inc
es
push
push
push
xor
jl
fists
std
insl
std
pop
sbb
mov
xor
test
out
dec
mov
call
andl
mov
arpl
inc
fsubrl
icebp
fists
jge
cmp
lcall
mov
xchg
or
and
pop
dec
test
mov
stos
sbb
sbb
pop
shrb
insb
or
das
pop
mov
push
fiaddl
adc
cltd
orl
jo
push
loop
jg
pushl
jl
and
jbe
fmul
cmpsb
fwait
or
hlt
into
jp
pop
add
imul
add
xor
mov
call
aaa
addr16
out
fs
clc
mov
pusha
sub
aad
das
cmp
push
orl
or
xchg
sub
pop
lahf
or
ja
lret
add
jbe
mov
jp
test
xchg
adc
decl
sbb
popf
arpl
int
mov
xchg
add
mov
js
pop
jns
call
test
push
fistl
icebp
sti
push
mov
mov
sub
fwait
push
push
jle
mov
test
in
into
jbe
ds
in
cmp
fcom
adc
or
mov
or
mov
imul
pop
call
pop
cmp
lret
adc
pushl
addr16
loopne
sub
test
test
adc
jg
mov
push
stc
aad
imul
inc
push
lods
dec
pop
dec
das
int
jg
repz
xchg
jmp
enter
daa
loope
pop
in
pushl
mov
pop
cmc
cld
hlt
pop
test
shl
cmp
cmp
xchg
popw
movsb
fldenv
jmp
inc
ret
dec
push
mov
add
pop
and
popl
stc
ror
inc
subl
mov
xor
xchg
ss
push
repnz
jb
daa
sub
fstl
adc
ret
push
pushf
xchg
pop
addb
cmp
out
sub
sahf
xor
adc
push
stos
call
and
cmp
and
lcall
mov
sahf
sbb
pop
cmp
dec
mov
jmp
adc
jo
and
adcl
sub
dec
out
imull
inc
fldz
jns
loope
loop
ljmp
inc
jecxz
imul
movsl
pop
shrl
fmul
imul
cmc
in
sarb
jg
ljmp
mov
push
or
mov
pusha
mov
ds
sar
jg
ja
xchg
add
and
cwtl
cmp
sub
loop
or
mov
pop
push
into
push
loope
leave
add
outsl
icebp
call
jl
shlb
xor
jns
pop
adc
lea
inc
aas
sub
mov
lods
pop
int
stc
dec
mov
cmc
push
jle
mov
push
bound
cltd
popf
cmp
out
fdivrp
pop
pop
push
xchg
sub
push
mov
ret
je
jne
es
cld
fnstsw
lods
inc
cmc
inc
cmp
adcb
push
mov
inc
in
ja
in
arpl
mov
fildl
call
jle
dec
cld
sub
xor
data16
dec
and
cli
pushl
int3
push
ds
push
jg
lret
mov
jb
push
fs
insl
js
jno
fcoms
out
lcall
jmp
pop
jns
push
jns
xchg
mov
fdivs
dec
ret
insb
jne
incl
xor
xchg
fisttpll
jle
int3
aam
adc
pop
ficomps
jg
inc
mov
shrl
or
iret
es
lcall
call
insl
imul
mov
lea
mov
add
decl
int
jg
scas
cli
imul
mov
bound
test
xlat
mov
or
push
push
scas
mov
push
push
mov
mov
neg
xchg
call
push
jmp
loop
jns
pop
jl
out
push
mov
rorb
ret
jnp
std
cwtl
or
inc
push
ja
call
jge
and
fildl
jb
ljmp
dec
mov
mov
xchg
stos
mov
cld
and
mov
das
push
add
icebp
lcall
mov
negl
pop
push
cmpsl
es
lds
ljmp
fidivl
cltd
xor
mov
mov
ljmp
imul
nop
mov
adc
add
sarl
jg
fwait
pop
pop
jle
movsl
dec
sbb
imul
and
pusha
mov
xor
and
daa
ljmp
xor
loopne
outsb
cmp
stos
and
xor
and
int
repz
dec
jle
xchg
xlat
into
and
xchg
fbstp
popf
fstpt
call
jp
out
repnz
pop
push
fbld
push
push
outsl
shrb
js
rcrl
add
jbe
dec
mov
cltd
std
stos
mov
iret
cmp
shll
jno
scas
call
daa
stos
mov
call
mov
sbb
rcl
icebp
pop
mov
decl
dec
xchg
push
sbb
xor
cli
push
idivb
push
inc
cmc
jbe
lret
into
sub
jbe
adc
je
mov
mov
push
adc
incb
hlt
repnz
xchg
in
cli
clc
ljmp
imul
das
jg
aam
cmc
xchg
mov
aaa
clc
call
pop
and
add
daa
inc
test
cmpl
popa
dec
notb
outsl
std
pushl
cmpsb
mov
lret
add
jl
lock
leave
inc
mov
subb
dec
outsl
cmp
dec
insl
pop
xchg
xor
xor
adc
sub
mov
push
in
pop
js
xchg
fs
xchg
sti
add
ljmp
outsb
aas
pop
sar
mov
adc
ss
sub
cmp
jg
mov
outsl
or
or
and
cmpsb
or
sub
and
loopne
or
xor
inc
jp
subb
test
cmp
push
mov
ret
pop
dec
mov
xchg
fimuls
fwait
inc
sbb
bound
iret
decl
cmpb
adc
imul
rclb
decl
ds
sub
mov
rolb
js
subl
mov
adc
in
xchg
cs
jg
adc
push
add
subb
add
xchg
adc
xchg
rorl
in
dec
pusha
mov
add
pusha
ret
lock
enter
add
adc
inc
loope
add
aas
and
jp
loop
aas
dec
in
inc
fnsave
ljmp
and
div
repz
ss
lods
das
aas
pop
add
or
decl
mov
movsl
mov
popf
xchg
pop
test
jl
inc
mov
cmp
cmp
inc
push
push
dec
cmp
xchg
cmp
mov
push
xor
and
outsl
mov
in
call
pop
lcall
and
ljmp
inc
adc
stc
xchg
adc
leave
aam
cmp
bound
fisubrl
and
fnstenv
int
jecxz
rcl
inc
rcr
mul
insb
ljmp
fistpl
sbbl
scas
dec
add
stos
in
addl
adc
sub
sub
insb
push
jg
imul
repz
push
dec
jne
cmp
lea
adc
adc
or
ja
test
outsb
jl
inc
adc
sarb
fsub
lods
push
fnstsw
dec
cmpsb
jbe
sahf
popa
jnp
xchg
gs
pop
lcall
outsl
insl
jp
mov
sar
mov
inc
jb
ror
ret
xor
inc
push
fistl
lahf
sti
mov
push
mov
fs
in
jg
add
lods
cmp
fdivrs
xchg
popf
pushf
adc
ss
and
lcall
adc
mov
or
mov
leave
jl
loop
jmp
hlt
test
and
xor
push
lahf
push
aam
inc
cmp
jmp
jl
dec
adc
cwtl
das
cmc
pop
out
cmp
ljmp
outsb
fildll
push
mov
inc
iret
lret
jl
repz
nop
sub
ret
jo
test
lcall
or
cmp
andb
leave
jmp
mov
sbb
add
or
int3
dec
int
push
pushl
push
cmp
sub
arpl
into
push
mov
out
mov
lea
call
stc
in
dec
mov
scas
add
sub
adcl
sub
adc
mov
pop
push
jg
repz
scas
scas
mov
cmpl
mov
test
sub
sbb
inc
js
incl
adc
ds
mov
scas
jmp
std
pop
push
adc
jbe
push
sti
jecxz
xor
enter
dec
sarl
sbb
cmpl
daa
shlb
incl
setns
sarl
push
pop
sbbb
xchg
pop
int3
stc
into
ret
dec
scas
aam
jb
pop
cmp
movl
inc
lahf
shrl
sbb
test
mov
cltd
mov
mov
cmpsb
clc
outsl
hlt
push
mov
lock
rorb
mov
ret
mov
lock
cld
lock
popa
mov
mov
ljmp
mov
push
inc
lahf
mov
jle
in
cwtl
dec
dec
jno
in
jmp
jbe
in
daa
adc
test
jmp
xchg
shll
aam
ss
in
xchg
push
mulb
cmc
dec
xchg
cmp
leave
mov
aas
notb
pop
fadds
test
xchg
insl
in
add
push
js
sub
mov
leave
lahf
insl
sub
pop
inc
inc
rcrb
ljmp
lcall
jbe
in
mov
aaa
and
aam
push
enter
adc
test
lcall
addl
xor
cmpsb
push
xchg
push
pminsw
mov
cwtl
loope
jg
lret
mov
xorl
jb
arpl
das
fcmovne
into
ret
and
or
sub
xchg
decl
pop
popf
jge
jmp
and
aam
push
int
out
fisubrs
push
pop
test
cld
jge
icebp
adc
add
inc
push
mov
jo
jmp
pop
decb
notb
adc
dec
addr16
popa
pop
mov
ret
lret
bnd
jnp
popf
js
out
or
mov
push
div
repnz
jmp
pushf
pop
fmul
jge
jns
mov
dec
inc
cmp
aam
push
shl
sub
inc
ja
pop
and
icebp
popa
xor
inc
mov
xchg
inc
mov
lds
and
out
add
in
ret
mov
sub
ja
in
mov
fstpt
adc
and
push
push
decb
loopne
lahf
or
jge
sbb
adc
das
sub
insb
and
aam
leave
mov
shrb
adc
test
insb
stc
mov
jne
daa
iret
xor
divb
movsl
adc
and
je
ret
sbb
xchg
dec
xchg
xor
push
fldl
ja
loopnew
js
ret
pusha
jg
push
call
cld
arpl
mov
dec
jge
push
pop
dec
dec
popa
and
aam
pop
jmp
xchg
inc
test
push
int
mov
pop
mov
inc
cmpsb
stos
xor
leave
iret
lahf
jl
call
dec
adc
dec
xchg
ret
jp
pop
jnp
fldl
lret
bound
push
icebp
test
std
jge
test
cmp
dec
and
dec
push
les
shrb
adc
cld
lea
add
movsb
inc
out
push
xchg
das
jg
mov
xchg
ret
mov
fisttpll
dec
mov
outsb
mov
ret
jle
dec
nop
rol
imul
or
xchg
mov
add
jl
mov
das
incl
and
aam
push
vpandn
test
fstl
add
repz
mov
rcr
xchg
aas
lahf
test
sub
xor
mov
xchg
xchg
pushw
mov
ret
js
jle
lret
scas
sub
lret
bound
xchg
fisttps
outsl
mov
insl
clc
dec
inc
inc
and
aam
push
call
sahf
cmpsl
test
call
sarl
add
test
pop
and
ss
aam
and
hlt
jmp
das
cmp
call
lea
outsl
out
mov
ret
test
test
lret
sub
dec
mov
sbb
mov
cmpsb
movsl
xchg
out
and
and
mov
das
cld
repnz
sub
xchg
and
lods
add
jg
jmp
mov
mov
adc
nop
adc
dec
lcall
push
jg
les
icebp
mov
filds
cwtl
adc
outsb
and
loope
xor
inc
frstor
push
xor
fwait
cwtl
imul
jmp
outsl
cmc
das
mov
pop
shl
adc
push
cmpb
xor
mov
add
ds
sahf
xchg
fldenv
sbb
mov
test
push
pop
fnstsw
test
jle
shlb
push
cli
ret
pop
jge
xchg
sub
adc
enter
mov
clc
xor
jae
jns
lods
sbb
fidivs
popf
dec
dec
push
inc
pusha
cmp
out
lcall
mov
mov
test
xchg
das
iret
out
or
imulb
mov
push
xchg
fcmovne
fs
incl
aam
imul
rcrb
jbe
xchg
mov
mov
mov
std
aad
int
sub
aaa
frstor
insb
push
mov
cmp
out
lcall
and
cmp
je
xlat
insb
dec
in
stos
mov
sarl
cs
push
mov
and
mov
shrb
cmpsl
and
popf
in
xchg
ds
leave
push
lcall
je
lahf
jbe
pop
int
test
fucomp
xor
outsb
cwtl
xor
jne
inc
insl
lea
lret
mov
outsb
push
dec
outsl
mov
out
test
cld
cmp
mov
mov
fmuls
jne
jo
and
ficomps
xchg
fistpll
and
lcall
xchg
ds
test
push
ret
push
jb
ljmp
call
clc
adc
mov
add
and
push
jbe
jle
fcomps
fidivl
scas
ljmp
test
or
mov
mov
cmp
pop
pop
mov
push
test
ljmp
out
sbb
push
jg
dec
push
jo
xorl
and
outsb
movsb
loope,pt
ds
and
jmp
imul
cltd
lret
outsb
add
out
mov
shl
lret
decl
inc
xchg
dec
cmpsl
jbe
fsubs
mov
mov
shl
pop
lahf
incl
jle
cltd
cltd
je
inc
pop
scas
push
enter
xor
inc
ret
and
adc
int3
outsb
std
ss
jbe,pt
sub
jbe
fistpll
lcall
fidivl
movsb
scas
in
inc
lret
pop
mov
in
pop
cmp
incl
insl
cmp
jbe
aam
push
pushf
lds
xchg
fsubrl
aas
lcall
andl
fildll
mov
dec
xlat
dec
movsb
or
ret
pop
je
mov
cli
popf
add
sub
in
incl
je
scas
insb
pop
push
dec
or
lcall
aas
cld
sbb
and
les
dec
cltd
subl
mov
add
mov
loopne
pop
and
call
xchg
pushl
addl
into
shr
cltd
jo
into
push
inc
out
mov
push
mov
and
enter
outsb
aaa
xor
xchg
loope
cmp
frstor
outsl
shlb
push
imul
mov
jecxz
stos
pop
int
dec
or
outsl
test
mov
jne
test
xor
jns,pt
addr16
jmp
pop
fiaddl
test
into
fisttpl
push
mov
lcall
mov
data16
pop
call
cld
stos
sub
mov
leave
outsb
outsl
xor
frstor
imul
mov
shll
xchg
imul
inc
stos
xchg
add
jmp
xor
testb
push
inc
push
out
adc
aas
push
mov
jo
cs
lret
inc
out
fcmovne
stc
roll
add
add
inc
pop
decl
jne
test
cmp
enter
fdivrs
hlt
cmp
clc
cmp
sub
push
lods
ds
loopne
outsl
mov
sbb
aas
out
aas
add
jl
xor
incl
jb
xorb
xor
xor
ja
mov
iret
xor
xor
xor
outsb
xor
idiv
jle
xorl
xor
xor
xor
xor
xor
xor
xor
xor
xor
in
dec
mov
add
test
xor
xor
xor
xor
xor
xor
inc
xor
adc
cmp
push
bound
jb
je
jnp
in
inc
pushfw
inc
xor
aaa
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
std
xor
imul
cmp
ds
ss
jl
fnstenv
mov
cmp
aaa
out
jmp
pop
cmp
mov
cmp
mov
cmpsl
cmp
cmp
xchg
jg
cmp
cmp
cmp
cmp
cmp
cmp
mov
mov
or
sbb
cmpb
ds
cmpsb
ds
cmp
insb
aas
xchg
aas
enter
lret
pusha
aam
push
xor
xor
call
xor
xor
jle
ljmp
lock
repnz
inc
xor
push
xor
insl
icebp
add
xchg
lea
xchg
xor
shll
and
cs
xor
bound
insl
cmp
xor
pushl
push
xor
xor
xor
xor
xor
xor
xor
push
xor
jnp
fistpll
xor
or
fwait
ss
ss
filds
or
pushl
test
lds
imul
mov
cmp
ret
idivl
jmp
icebp
fisttpll
push
cmp
xchg
cmp
cmp
sti
aas
sub
aas
xchg
aas
cltd
aas
mov
mov
aas
std
shll
lcall
xor
xor
xor
xor
xor
xor
pop
mov
xor
xor
decl
xor
xor
jo
imul
repz
xor
xor
xor
xor
xor
xor
inc
xor
xor
xor
cwtl
xor
scas
xor
add
call
das
xchg
sbb
int
das
cmp
ljmp
incl
xchg
cmp
cmp
cmp
cmp
cmp
jmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
and
insb
cli
ds
push
aas
sbb
sub
push
aas
gs
sahf
aas
mov
cld
mov
sub
cmp
jg
add
or
adc
push
xor
xor
arpl
insb
xor
sbbl
xor
xor
data16
iret
or
dec
std
xor
xor
xor
enter
data16
adc
xor
xor
xor
xor
push
xor
movsb
xor
adc
decb
ss
test
mov
lahf
shll
stos
ss
call
fucomip
and
daa
aaa
mov
pop
aaa
imul
jg
aaa
in
lock
adc
cmp
jb
test
sbb
and
outsb
cmp
mov
mov
dec
cmp
xchg
nop
sbb
and
sub
incl
cmp
test
roll
bound
add
cmp
cmp
cmp
cmp
pop
cmp
mov
pushl
mov
add
xor
xor
lahf
test
xor
xor
xor
xor
xor
and
test
xor
xor
sar
xor
xor
xor
xor
xor
arpl
xor
and
xor
xor
xor
jg
xor
jno
jl
mov
xchg
xor
xor
outsl
cli
jbe
xor
and
xor
lds
xor
xor
xor
xor
ror
xor
sbb
xchg
mov
mov
cltd
xor
xor
out
xor
xor
cmp
mov
add
ss
ss
ss
ss
leave
pop
ss
ljmp
xchg
ss
movsl
ss
ss
in
ss
or
push
aaa
adc
jg
aaa
or
cmp
aaa
arpl
call
pop
xorl
aaa
frstor
aaa
mov
jnp
fwait
pop
push
mov
aaa
cli
aaa
pcmpgtw
sub
add
pushl
fdivrl
pop
cmp
js
xchg
cmp
cmp
cmp
scas
or
cmp
cmp
imul
xchg
cmp
cmp
out
clc
stos
cmp
cmp
cmp
cmp
cmp
cmp
xchg
adc
cmc
call
sub
xor
cmp
inc
cmp
push
cmp
imul
lcall
push
mov
cmp
cmp
je
cmpsl
cmp
mov
inc
cmp
cmp
cmp
cmp
cmp
cmp
and
pop
loopne
cmp
movsl
cmp
insl
je
jae
xor
lret
mov
rcrl
mov
lea
xchg
xor
xor
xor
fbstp
inc
xor
pop
xor
inc
xor
xor
xor
xor
xor
xchg
scas
xor
stos
mov
xor
dec
fnsave
xor
scas
adc
incl
and
pop
jo
js
lea
xchg
ss
lock
fwait
or
cmpsb
shlb
ss
rcrl
push
aaa
or
aaa
adc
sbb
aaa
push
scas
ljmp
push
int3
fdivs
fbstp
in
aaa
sbb
cmp
cmp
int3
cmp
cmp
xor
cmp
cmp
cmp
pop
ret
push
pop
xor
cmp
mov
mov
sarb
cmp
rcrl
cmp
or
lcall
sbb
clc
xor
push
sbb
adc
and
nop
inc
adc
inc
xor
cmp
cmp
ds
inc
dec
add
fdivr
mov
push
jns
mov
cltd
add
fbstp
rcrl
paddd
fistpll
cltd
cmp
popf
fstps
cltd
cmp
sahf
sub
int3
cltd
ds
aas
repnz
add
fcoms
dec
xchg
mov
or
add
sbb
pop
and
xchg
xor
in
mov
daa
pop
and
pop
test
push
ret
cmp
mov
inc
rolb
add
gs
data16
add
pop
and
out
push
mov
pusha
push
xor
pop
jnp
mov
add
or
arpl
jb
inc
add
jae
dec
add
gs
inc
out
loopne
aaa
insb
lahf
pusha
and
movsl
mov
and
mov
outsb
mov
mov
roll
inc
adcl
inc
fstl
sti
dec
add
push
inc
inc
xor
and
cmp
fcmovnu
in
in
cld
in
adc
pop
fwait
out
stos
addb
or
push
push
inc
adcb
movsl
lea
popf
push
rep
or
fadds
sbb
cmpsb
mov
inc
xchg
aas
movsl
movsw
movsb
cli
cmpsl
inc
push
cs
inc
add
int3
mulb
and
push
add
hlt
test
lea
lock
push
pop
sahf
inc
mov
fldenv
add
xchg
or
mov
les
aam
sub
addb
push
push
or
jne
aad
mov
adc
add
xor
lea
push
sub
cmp
adc
flds
dec
lock
add
insl
jnp
je
push
sbb
shr
int
fsubrp
cmp
pop
pop
push
out
lahf
lock
sbb
or
mov
ret
loopne
cmpxchg
inc
rolb
xor
add
push
xchg
mov
or
lds
dec
xor
fcmovnu
jbe
lcall
or
pop
inc
jnp
cmp
shll
mov
ss
shll
xchg
sbb
jmp
sbb
jbe
pop
fidivs
mov
lret
pop
xchg
mov
or
and
fwait
sub
add
insl
imull
xchg
imul
add
jb
pop
divl
clc
xor
cs
fs
vpsubq
xor
shll
sub
jne
jno
insb
lret
mov
dec
inc
jg
repnz
adc
rorb
and
test
pop
xchg
gs
inc
gs
dec
cmpsb
jmp
cwtl
popa
insl
addb
jmp
cmc
movsb
faddl
imul
sub
loopne
adc
mov
xor
outsb
hlt
sub
idivb
int
call
add
push
sub
mov
int3
sbb
sub
or
mov
leave
xlat
lea
push
and
mov
pop
mov
jmp
mov
jmp
mov
pop
inc
push
and
cs
imulb
mov
es
push
push
ret
mov
sbb
jp
stc
push
push
jl
add
push
push
imul
mov
lcall
fdiv
clc
call
adc
adc
sub
mov
xchg
xchg
push
or
push
ret
xor
sarl
or
or
pop
and
add
jne
or
inc
xchg
jl
xor
add
pusha
loopne
fld
pop
jae
xchg
jno
and
stc
bound
xor
out
sub
insl
pop
adc
adc
pop
or
jb
adc
push
inc
out
mov
push
push
sbb
aas
fnsave
loop
or
mov
nop
push
push
or
std
xchg
ret
lds
or
ss
push
xor
or
adc
and
mov
test
or
repz
clc
inc
das
jge
and
add
test
push
outsl
mov
xchg
cmp
idivl
pop
adc
jl
push
pop
mov
cmp
pop
add
cmp
inc
or
test
or
jo
jg
push
and
repnz
sub
fimuls
mov
lods
jb
xchg
gs
popa
outsl
outsb
gs
xchg
gs
jae
cs
fwait
in
es
aad
insb
xlat
popa
pop
xchg
lods
or
jne
arpl
je
gs
insl
xlat
insb
dec
loope
or
cmc
mulb
mov
lcall
je
sti
xor
call
sbb
mov
jmp
adc
hlt
pop
or
sahf
push
je
aad
mov
dec
movb
lret
lret
outsb
int3
sub
rcrb
xor
shrb
shll
fmulp
rcl
push
cmp
shll
insb
cmp
pop
inc
mov
test
popa
aas
pop
jae
jb
std
enter
test
jbe
sub
std
mov
sub
or
into
jns
std
inc
std
ret
imul
js
push
ja
dec
aad
popf
pop
mov
or
shl
pusha
lods
aaa
mov
fmul
mov
into
push
jbe
sbb
push
push
add
sub
sbb
xlat
push
push
sub
shll
mov
inc
sarl
cmp
je
push
mov
fs
mov
shr
test
or
int3
cs
dec
fcoml
push
adc
jmp
sbb
dec
push
sahf
bswap
clc
decl
jne
in
outsl
push
add
or
xchg
je
test
or
mov
leave
mov
je
push
jo
leave
mov
and
and
rol
pop
nop
test
pop
scas
sarb
mov
lret
mov
cmp
in
mov
push
mov
mov
mov
push
xor
lods
out
mov
inc
xor
loope
mov
inc
xor
mov
adc
xor
push
mov
in
ss
sbb
fiaddl
pop
jle
insb
add
imul
add
inc
int3
fs
lret
in
mov
shrb
outsb
shlb
gs
jae
cs
gs
cmp
gs
outsb
insb
popa
jne
dec
xchg
xchg
arpl
cs
mov
fidivl
leave
gs
insb
pop
sbbb
imul
hlt
cmc
mulb
pop
xchg
lea
gs
test
insb
outsl
jb
mov
sbb
imul
pop
popa
pop
int3
adc
ficoms
xor
ror
pop
js
mov
mov
ret
cli
adc
in
xor
dec
or
movsb
sbb
stos
clc
loopne
inc
nop
movb
and
roll
adc
je
ds
addr16
inc
add
mov
out
pusha
out
movsl
cld
into
testl
je
outsb
lahf
fistl
push
push
sbbb
es
bound
aaa
sub
push
sarb
add
push
js
mov
into
je
pop
or
sbb
jecxz
pop
cmp
subl
jl
or
add
clc
push
add
test
mov
movsl
mov
xchg
or
pop
sbb
add
push
clc
dec
inc
and
mov
lcall
jnp
jnp
push
sbb
jno
adc
jmp
push
inc
subb
hlt
add
mov
xor
cmp
ds
les
sbb
push
sete
jle
inc
pop
xor
pop
mov
arpl
inc
jg
out
add
jae
or
mov
or
loope
das
add
nop
mov
pop
pop
add
xchg
or
or
add
sub
add
push
hlt
or
jns
sbb
inc
inc
shl
cmp
inc
push
add
dec
inc
in
adc
outsl
dec
inc
sarb
les
addb
sbb
test
fs
cmp
loopne
enter
xor
or
or
push
inc
and
jo
and
sahf
and
fcoml
enter
inc
fists
movsb
cld
xor
push
cmp
mov
jne
mov
jmp
mov
cmp
je
sbb
cmp
sub
adc
mov
sub
lock
xor
jmp
mov
inc
jmp
lods
test
stos
fbld
pop
cmp
add
add
inc
cmp
jl
add
jg
rep
roll
out
or
stc
stc
ror
fstpt
shll
rclb
fstl
andb
xor
mov
and
lods
or
enter
and
outsb
andb
pop
orl
inc
cmpsl
add
lcall
jns
pop
inc
pop
sbb
add
dec
imul
sub
cmpsb
mov
out
inc
imul
dec
ret
inc
dec
inc
cmp
lods
imul
lcall
dec
add
pushf
scas
ljmp
adc
adc
cmp
and
adcb
mov
or
pop
or
outsl
adc
and
outsl
jne
jae
push
push
lods
xor
mov
shll
sub
push
or
jg
outsb
iret
test
ss
js
dec
inc
sti
mov
dec
dec
inc
push
sub
push
push
mov
adc
pop
sbbb
sub
int
fwait
in
inc
nop
clc
inc
in
add
dec
ss
sbb
int
fs
test
les
add
or
addb
faddl
pushw
les
pop
popf
mov
cmpsb
repz
jae
sbbb
pop
out
outsl
dec
or
lahf
pop
mov
pop
packsswb
movb
in
sbb
mov
adc
test
pusha
xor
and
pushfw
nop
sub
fistps
or
dec
outsb
outsw
es
data16
xor
imul
add
pop
adc
cmpsl
or
out
inc
dec
lcall
sbb
jle
add
jb
and
test
ja
shl
xchg
push
inc
add
push
jo
jno
sub
jmp
xchg
push
inc
jg
push
nop
mov
arpl
dec
test
sbb
out
dec
inc
add
adc
push
cltd
insl
insl
dec
jae
stos
sarw
fcomp
push
add
or
add
js
fldcw
add
scas
cmp
pop
and
sbb
sbb
or
mov
sbbb
cwtl
pop
stos
xor
mov
ss
mov
je
xlat
pop
or
jo
jmp
dec
shll
mov
sti
rorl
sbb
sarb
add
jecxz
push
push
stos
pop
call
arpl
mov
add
dec
pop
rorl
or
je
inc
rclb
sbb
xor
and
icebp
movb
bound
icebp
out
inc
mov
sbb
test
jbe
push
add
fld
fstpt
or
push
cmpsl
fs
enter
jne
or
ret
sbb
fisubl
fadd
adcb
int3
jle
xor
jnp
imul
or
add
xorl
bound
outsl
pop
jns
loope
ret
jp
pop
testl
cwtl
sbb
lds
lea
jnp
outsl
jecxz
in
rcr
push
dec
mov
imul
jns
scas
lret
add
mov
inc
testb
adcb
xor
inc
cmp
push
fildll
jmp
add
xor
push
add
pop
jne
outsb
xor
mov
dec
int
aas
xlat
add
add
imul
xchg
add
mov
sub
add
unpcklps
dec
pop
pop
jb
inc
push
gs
shlb
or
fistpl
jecxz
inc
and
xor
imul
scas
jae
and
popa
jns
ret
int3
arpl
add
addr16
aaa
insl
or
jo
imul
jnp
inc
push
ja
fcmovnbe
add
adc
or
jb
cmp
fsts
xor
sbb
xchg
insb
popf
sti
bound
xchg
pop
dec
or
lds
add
jb
popf
addr16
mov
je
jmp
sub
xor
fucom
mov
sub
inc
fisubl
or
daa
fldcw
dec
imul
push
daa
jbe
mov
pop
mov
fs
outsl
bswap
test
and
jmp
push
ret
push
aaa
xor
imul
and
jne
jmp
xchg
and
mov
add
jo
mov
incl
xor
xor
xor
jne
xchg
xor
xor
xor
call
xor
xor
xor
xor
xor
fld
xor
xor
movsl
icebp
adc
ss
lcall
sbbl
aaa
mov
aaa
aam
aas
cmp
cmp
cmp
cmp
call
pop
cmp
cmp
cmp
cmp
jo
mov
ds
ds
ds
pushl
ds
ds
xor
aas
addr16
ja
xchg
sarl
aas
aam
clc
jg
sbb
push
xor
and
sub
inc
mov
fdivr
stos
fs
mov
test
jb
add
fdivs
push
hlt
jl
xchg
out
popa
pop
bound
fistpll
das
flds
xorb
mov
mov
and
add
nop
pop
sahf
stos
out
and
and
pop
sub
add
or
mov
out
test
outsl
inc
popa
xchg
inc
iret
xor
and
add
and
add
sub
and
dec
aam
dec
daa
inc
push
push
dec
aam
mov
or
cmp
bound
xor
push
das
add
push
data16
or
cmpsb
imul
idiv
cs
sub
jmp
ja
dec
xor
pop
in
add
lcall
movsb
ja
int3
xor
flds
xor
sbb
pop
sub
push
inc
sbb
mov
and
adc
inc
adc
call
loope
repz
lcall
out
and
jbe
lds
or
fisubrl
test
imul
and
test
pop
add
push
xor
stc
jb
inc
or
adc
add
nop
or
inc
enter
or
or
das
in
or
and
sbb
in
and
add
adcl
and
inc
dec
enter
and
cmpsl
mov
dec
sbb
mov
jns
pop
and
enter
or
inc
sahf
es
or
or
xor
push
mov
sub
std
mov
and
jmp
and
pop
push
cld
and
fsubl
call
jb
mov
mov
sbbb
add
or
clc
mov
lret
inc
mov
pop
loopne
lds
mov
pop
cmpl
test
sarb
add
addl
mov
sub
pop
lahf
andb
mov
outsl
mov
js
inc
enter
incb
inc
mov
xor
sbb
faddl
push
daa
sbb
cltd
fsubr
add
or
jmp
imul
dec
inc
jnp
andb
aas
pop
or
mov
inc
and
iret
xchg
mov
push
dec
sbb
popf
sbb
xchg
jne
ja
pop
mov
scas
or
dec
mov
xor
xor
pusha
adc
shl
or
jge
pop
popa
jle
add
pop
clc
daa
sub
add
outsb
sub
inc
cmp
in
adc
jnp
inc
pop
and
push
fisubl
or
and
jl
popf
mov
repz
or
dec
rcll
jmp
mov
cmpsb
xor
adcb
pop
adc
pop
cmp
or
sub
inc
mov
jbe
loope
sbb
enter
or
mov
push
cld
mov
sbb
lret
es
pushl
sub
out
adcb
add
call
inc
push
cltd
cmpsb
xor
add
pop
and
fcoml
push
pop
jge
pop
mov
mov
and
mov
in
add
dec
mov
sbb
fisttpl
lea
inc
sub
or
js
add
cmp
jne
mov
inc
nop
add
sbb
cltd
jecxz
xor
mov
xor
je
divl
jae
rcl
adc
pop
loopne
push
jnp
hlt
add
mov
mov
inc
and
sbb
xchg
adc
sbbl
das
pop
pop
cltd
adc
and
pop
daa
xor
push
push
cs
mov
xor
call
jge
daa
or
sub
ja
add
mov
rcr
dec
ss
or
repnz
sbb
cmp
adc
pusha
mov
pop
nop
int
sbb
inc
inc
pop
fstpt
add
push
jbe
decl
lea
pop
mov
rep
mov
mov
imulb
xchg
mov
add
jmp
addr16
push
and
xchg
cmp
je
inc
add
cmp
jl
aam
div
jmp
push
js
rclb
lret
jbe
ds
add
out
mov
mov
jbe
frstor
mov
je
andl
inc
mov
adc
and
ret
adc
pop
mov
sarl
cmpl
push
lea
mov
push
ficoml
cld
push
in
pop
push
xor
fnstsw
sbb
sbb
push
negb
sbb
call
and
lcall
sbbb
push
insl
push
outsl
mov
int
and
sub
xor
inc
jbe
and
mov
and
jno
and
push
adc
push
addl
idivl
add
in
idivl
and
jmp
negb
inc
int
fmulp
adcb
dec
lret
inc
lahf
cltd
in
xchg
add
xchg
cld
loopne
call
mov
pop
push
xchg
loopne
adc
in
dec
adc
and
addl
sahf
in
fildl
inc
inc
inc
inc
inc
inc
loopne
loop
xchg
out
inc
in
aam
xchg
xchg
xchg
aad
xlat
fcoms
fcmovu
fcoml
loopne
addr16
xchg
loope
fsub
push
int
fdivr
idiv
decl
int3
xor
insb
dec
aas
jo
sbb
xor
and
and
in
sbb
fs
xchg
rcl
enter
shrb
idiv
call
adcb
mov
dec
fwait
mov
push
js
pop
shlb
push
sbb
out
sbb
stos
js
rcrl
sbb
movsb
test
sbb
pop
add
and
fwait
sarl
je
lcall
lcall
pushf
add
inc
movb
mov
shlb
adc
add
push
movsb
imul
sub
movsb
imul
shlb
ror
outsb
cwtl
mov
mov
stos
aaa
or
and
std
sub
inc
shrl
dec
andb
setg
addw
insb
cmpsl
ret
push
mov
imul
imul
in
inc
outsb
jle
xor
and
push
fldt
dec
lret
mov
add
or
or
add
cmp
or
mov
jmp
pop
adc
mov
inc
hlt
jbe
jle
ja
dec
jb
stc
pop
dec
outsb
das
fiaddl
popf
insl
fsubrs
inc
jo
mov
jns
je
outsl
insb
jae
dec
pop
inc
adc
into
and
sub
stos
add
sbb
jne
lea
push
jl
addr16
adc
push
into
das
fdivrl
add
enter
fdivs
or
out
daa
sub
push
pusha
dec
mov
test
nop
das
jg
bound
xorb
xor
xor
xor
xor
xor
loop
xor
xor
mov
cwtl
xor
xor
jg
loop
xor
mov
ss
aaa
pop
js
loop
aaa
xchg
addr16
dec
in
cmp
push
cld
cmp
cmp
cmp
jle
or
jl
mov
xchg
push
push
cmp
cmp
cmp
cmp
cmp
sahf
testb
cmp
push
cmp
sahf
cmp
adc
fildl
sub
sub
and
add
mov
addl
add
xor
pushf
mov
sub
xor
sarb
outsl
jne
arpl
sti
mov
xor
sbb
cmp
add
dec
rolb
or
clc
jb
sub
jmp
and
add
xor
add
add
push
jo
insl
dec
stos
pusha
sbb
fwait
add
add
pop
insb
dec
cmp
and
mov
je
inc
mov
xchg
sahf
pop
jb
hlt
inc
sidtl
hlt
into
das
sbb
outsb
add
and
arpl
mov
mov
xchg
xor
sub
rcrb
mov
adc
push
push
pushf
dec
lock
leave
and
add
push
rclb
dec
xor
dec
cwtl
sbb
adc
adc
sbb
push
add
mov
add
rorb
and
and
add
incl
add
add
add
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
