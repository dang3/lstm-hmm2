insb
aas
mov
out
and
add
and
and
dec
shll
xchg
test
in
add
sbb
cmp
imul
xor
cmpsb
mov
clc
and
data16
and
sbbl
xorl
jbe
fwait
mov
cmpsl
addb
aas
add
ret
pushl
gs
xor
cs
insb
add
or
ficoml
sbb
push
gs
bound
push
jb
jbe
insb
gs
fcomi
jg
pop
jae
jae
gs
and
inc
inc
add
filds
jo
push
gs
outsl
imul
add
adc
adc
bound
xor
js
std
dec
and
imul
insl
fs
add
je
pop
outsl
arpl
sbb
jb
xor
xor
cmp
push
sbb
xor
daa
push
mov
sub
dec
ja
andl
faddl
out
std
rclb
xor
jl
inc
add
add
or
lds
mov
or
popa
enter
insl
xchg
fcmovne
push
add
outsl
int3
int
pop
into
push
iret
rorb
shll
xor
shll
jbe
jb
aam
aad
xlat
pop
fdivs
mov
fidivl
fisttpl
push
pop
loope
lcall
inc
in
and
add
fwait
scas
out
call
imul
in
pop
in
aaa
lock
repnz
div
clc
gs
stc
dec
pop
cli
sti
js
je
mov
out
ficoms
xlat
sub
mov
pop
adc
aaa
sbb
dec
mov
xor
mov
ljmp
je
push
push
call
mov
jmp
mov
cmp
jne
xor
jmp
popa
insb
sti
arpl
movl
fsin
dec
test
je
sbb
fstpt
imul
jne
push
or
mov
sbb
iret
das
inc
mov
adc
cmp
jne
outsl
clc
fwait
out
mov
or
pop
pop
leave
ret
mov
in
sbb
fnstcw
imul
push
push
imul
pop
cmp
hlt
push
push
pop
loope
xor
clc
add
and
push
push
sbb
js
push
lock
cltd
add
add
push
pop
insb
pop
push
jae
pop
movzwl
push
push
stos
mov
fdivr
lock
cmp
je
push
adc
or
test
sbb
clc
cmp
adc
push
push
sub
lret
insl
add
inc
cmp
je
pop
mov
outsl
loope
sbb
movsl
sbb
ss
mov
jecxz
pop
in
sbb
pop
ret
xchg
sub
xor
inc
mov
ss
xchg
xor
mov
lods
jo
push
push
scas
inc
adc
mov
jge
or
push
adcl
mov
sbb
sbb
mov
cmp
adcl
push
dec
dec
ja
inc
addb
push
sbb
jmp
push
jno
dec
inc
imul
xor
xor
jge
add
mov
mov
and
jo
sub
lods
fnstsw
dec
test
je
adc
call
rorl
icebp
pop
loop
out
negb
dec
in
adc
mov
pop
and
push
add
cs
cmp
cwtl
fstps
adc
aas
jnp
lret
enter
ja
jmp
sbb
icebp
push
cmp
fcom
lds
jno
popa
mov
std
adc
push
fdivr
call
adc
mov
psrld
mov
inc
inc
dec
dec
test
jne
push
in
cmp
pop
jmp
lds
shlb
and
push
jecxz
shl
mov
mov
add
inc
cmpb
inc
fadds
test
add
mov
mov
cld
aad
pop
clc
inc
and
aaa
outsb
push
rcl
jl
sub
pop
adc
daa
push
mov
stc
push
dec
sub
outsl
push
add
adc
xabort
in
les
out
inc
js
lock
mov
ret
in
inc
mov
cmp
subb
pop
or
mov
cwtl
pop
adc
call
rcrl
pop
pop
nop
scas
mov
jp
std
add
xor
arpl
stc
je
or
out
mov
repz
lea
andb
push
pop
lea
jcxz
stos
stos
mov
loopne
adc
idivb
movl
adc
mov
or
fdivrp
maxps
pop
push
sahf
mov
pop
call
mov
cmp
push
xor
lret
cwtl
xor
adc
ficoml
xor
mov
std
adc
int
test
adc
or
pop
mov
pop
pop
pop
pop
mul
fldt
pop
push
cld
pop
jmp
in
in
cmp
or
inc
fisttpll
xor
push
push
std
imul
jb
insb
push
add
je
popa
mov
dec
mov
xor
pop
add
mov
dec
inc
add
pop
pop
mov
daa
or
jne
insb
inc
or
xchg
or
clc
test
ja
mov
mov
int
sahf
in
push
test
add
add
scas
ret
adc
xchg
add
inc
sbb
je
push
hlt
lret
ja
add
in
pop
testl
dec
xchg
leave
pusha
ficomps
mov
icebp
stos
push
xor
add
std
enter
imul
push
mov
iret
cmp
sahf
cld
les
fnstenvs
lods
jb
rclb
outsb
in
pop
fldenv
pop
int
ja
xor
into
iret
push
rorb
mov
insb
rcl
or
mov
xor
cs
xor
dec
mov
js
mov
filds
mov
adc
clc
js
mov
push
add
scas
mov
loope
or
cltd
int
iret
mov
pushl
js
mov
jae
xchg
mov
and
mov
fucompp
mov
fs
outsl
lret
in
mov
stc
jae
pop
sti
insl
jbe
add
xor
cmp
or
clc
cmc
sub
shrb
pop
mov
fsts
insb
icebp
xlat
xor
in
data16
push
movsl
fcomps
in
adc
data16
call
mov
das
and
das
sbb
cld
into
push
dec
sar
or
adc
dec
or
pop
cmp
xor
sub
push
call
mov
sar
fistpll
sbb
int3
push
push
jbe
fldt
stos
jl
call
mov
daa
cmp
shrl
push
loope
out
js
shll
outsl
je
ss
out
and
and
lock
xchg
cmp
and
inc
or
test
xlat
vdivsd
jo
fs
not
insb
cwtl
sub
or
pop
outsl
or
mov
and
aaa
scas
je
adc
xchg
or
fs
mov
jnp
jmp
jne
int3
add
xchg
add
cwtl
pushf
pop
push
cmp
lds
sub
dec
mov
in
sub
mov
or
loope
push
inc
and
add
ret
dec
movsb
inc
in
xchg
sbb
adc
and
and
scas
xchg
loop
adc
adc
and
rorw
dec
inc
dec
dec
and
ja
stc
add
dec
inc
dec
jb
push
dec
addb
fisubrl
inc
outsl
add
push
adc
sbb
addl
adc
dec
add
dec
pop
nop
add
push
pop
ss
mov
inc
call
push
add
dec
ljmp
adc
js
outsl
addr16
insl
and
outsb
outsb
lock
in
ljmp
and
and
outsb
and
inc
dec
push
and
fs
clts
ss
push
pushf
not
outsl
repnz
add
pusha
outsl
mov
rolb
stos
jae
movsl
aam
jae
movsl
shll
jnp
mov
daa
rep
jl
movsl
pop
cmp
movsl
in
xchg
mov
shrb
imul
fcomi
push
inc
add
in
cli
cld
dec
adc
mov
and
add
or
pop
push
loope
jnp
lcall
pop
xchg
insb
fnstenv
add
or
jnp
mov
xor
pop
push
shrb
xchg
or
add
shl
push
xor
sub
jnp
mov
jae
sbb
push
frndint
in
add
fs
je
sbb
daa
arpl
fucomp
adcb
cs
es
push
push
pop
sar
daa
mov
jb
insb
outsl
arpl
or
pushl
int
test
lods
add
adc
lods
imul
fstp
cmpsb
mov
and
stos
insb
lcall
dec
lods
lcall
and
inc
pop
imul
imul
shll
fs
dec
shll
xchg
pushf
stos
mov
xor
ror
fsubr
decb
stos
lret
dec
shll
bound
dec
shll
mov
dec
rcl
hlt
add
adc
test
lcall
les
mov
imul
add
mov
scas
or
negl
outsb
add
data16
cmpsb
imul
imul
add
and
cmpsb
imul
xor
xlat
popf
mov
data16
xor
rorl
loop
cmpsb
stos
popf
mov
push
addb
lahf
jb
dec
shll
sbb
ss
scas
add
sbb
outsb
je
je
sbb
dec
sbb
sub
push
gs
fs
sub
dec
je
pushl
jne
jns
outsw
inc
aaa
dec
jo
outsb
push
jb
mov
adc
push
dec
dec
add
jnp
and
daa
fs
xchg
and
xchg
sub
add
xchg
add
aaa
sbb
pusha
add
sub
inc
add
push
adcl
adcl
and
add
jmp
add
xor
or
add
mov
mov
lretw
add
aas
inc
sbb
test
rcll
insb
or
incl
and
popa
mov
add
adc
push
sbb
inc
cmp
inc
and
fmul
xchg
pop
xor
pop
mov
fistl
add
stos
adc
stos
ret
subb
cmpsb
pop
mov
fwait
out
xor
mov
xor
ud2
push
add
jne
mov
add
adc
fisttps
arpl
je
jne
jb
gs
sbb
jmp
scas
js
push
sub
add
arpl
incl
push
inc
jb
push
and
ja
or
push
mov
insb
mov
ja
jae
and
addr16
xor
push
fmuls
xor
jmp
jp
pop
cs
mov
jae
std
outsl
mov
dec
popa
insl
xchg
push
dec
inc
push
push
inc
push
inc
dec
mov
jb
outsl
data16
imul
dec
shrb
cli
push
inc
jne
jb
je
sub
dec
xor
ja
jb
inc
popa
jb
jae
das
pop
aas
cli
sub
dec
pop
inc
xchg
sub
out
xor
xor
or
call
mov
fcomps
pop
je
insb
cwtl
je
mov
pop
cwtl
jns
outsl
insb
and
outsl
jne
jo
fdivl
adc
popa
rcll
dec
push
push
sbb
fidivl
jp
push
push
jae
lret
sbb
jno
push
cwtl
cmpsl
pop
scas
push
sub
xchg
adc
mov
jg
push
xchg
mov
into
insl
jnp
call
outsl
xor
pop
clc
bound
adc
sub
or
insb
mov
mov
pop
sbb
test
out
push
hlt
sarb
nop
push
push
adc
push
push
push
std
push
xchg
shlb
adc
mov
inc
add
and
adc
or
lahf
fisttpll
addl
mov
cmpb
push
mov
ret
nop
or
repnz
outsl
cmp
sbb
cmp
nop
aas
mov
dec
mov
cmp
dec
repz
dec
xor
test
mov
int3
or
push
sub
xchg
or
cmp
je
insb
push
mov
jg
pusha
and
add
add
cmpsl
pop
or
mov
test
les
popa
insb
imul
in
aas
out
fiaddl
addr16
imul
imul
imul
jb
pop
sbb
jle
stc
ret
arpl
push
ret
push
scas
add
add
cmp
add
pop
jnp
addr16
shll
cmp
test
push
push
jg
outsl
int3
in
iret
ret
and
out
int3
insl
daa
in
jo
enter
add
cs
mov
pop
cmp
pop
repnz
lret
dec
mov
mov
in
lea
ja
mov
pop
sbb
or
incl
fstpl
push
add
ljmp
aas
sbb
shlb
mov
pop
aad
jle
mov
andl
push
jge
out
push
insb
fistpl
mov
cs
scas
mov
push
mov
adc
sbb
out
clc
outsl
mov
push
push
push
call
in
add
movb
mov
sub
outsb
movsl
outsl
incl
add
push
or
or
xor
pop
fistpll
sti
push
push
call
cmp
hlt
loopne
pop
orl
out
inc
outsl
cs
or
jo
insl
xor
push
lock
xchg
aaa
cwtl
push
lods
inc
mov
or
int
jmp
or
pop
and
push
in
mov
xchg
bound
dec
je
fstpl
push
movzbl
rcrl
mov
adc
jne
mov
andb
insb
outsl
sti
add
xor
aas
inc
inc
pop
cmp
sbb
int
pop
jl
push
aaa
insb
pop
outsb
jle
add
xor
adc
adc
add
sbb
add
lret
add
les
jmp
repnz
int3
adc
or
dec
push
leave
xchg
pushf
xor
adc
add
jo
mov
xor
adc
or
push
push
into
or
cmp
or
or
push
in
push
out
inc
sbb
and
or
mov
ret
cmpw
jne
dec
cmp
lret
jne
cmpl
push
in
jl
jge
xor
adc
add
add
cmp
adc
repnz
adc
adc
pop
or
notb
fsubrl
push
sbb
add
add
xor
push
push
dec
call
pop
insl
push
push
push
and
pop
mov
sub
jecxz
ret
sub
insb
dec
xor
mov
sti
pop
sbb
aad
adc
cld
pop
inc
push
out
cltd
lea
lock
add
mov
mov
mov
fcomp
xchg
mov
sbb
mov
insl
movsb
inc
rep
subb
mov
or
fmul
mov
jo
xor
ud0
mov
and
push
or
sarl
push
mov
xlat
fistpll
add
mulb
xor
inc
cmp
or
sbb
mov
cld
mov
lds
jecxz
fbstp
pop
xchg
movsb
adc
mov
adc
clc
call
mov
shlb
jbe
inc
insl
mov
or
add
jne
sub
rorb
aad
hlt
cmp
jbe
pop
mov
mov
or
jmp
pop
call
mov
jne
out
lock
add
inc
inc
cmpsl
mov
jne
mov
jb
sbb
rcl
cmp
xor
add
mov
insb
xchg
roll
pop
or
add
adc
andw
mov
dec
jo
subl
dec
cld
pop
jb
xlat
clc
pop
es
clc
xchg
jo
push
push
push
push
imul
gs
stos
std
push
sub
adc
mov
movaps
into
pusha
popw
std
xchg
out
mov
lea
xchg
in
sbb
cmp
jne
and
fsubl
or
mulb
mov
cmp
fildl
push
inc
push
pop
cld
call
int
cltd
out
call
fnstsw
lsl
push
jo
adc
aaa
rol
sahf
or
mov
cmpb
pop
mov
call
out
push
rolb
pop
and
in
js
add
je
add
and
xor
adc
inc
mov
add
cmp
add
cmpsl
pop
test
add
xorb
adc
sub
lahf
jl
add
scas
add
pop
push
pop
nop
xor
adc
inc
or
pop
xchg
xor
adc
in
inc
pop
cmp
cmp
cwtl
cld
adc
aas
adc
int3
add
pop
jmp
cmp
mov
cltd
mov
test
mov
add
aaa
fucomi
push
adc
adc
dec
loopne
rcrl
sub
cld
add
jle
clc
mov
cmp
jle
dec
xchg
dec
sbb
in
ja
lock
sub
sbb
cmp
je
test
cmp
push
mov
inc
hlt
test
and
jne
cmpl
daa
pushl
push
add
inc
cld
jne
xor
inc
clc
xchg
cmpsl
inc
inc
mov
jle
mov
mov
popa
test
cmp
sahf
inc
cmp
mov
adc
add
push
jmp
dec
enter
fcoms
add
cli
pop
outsb
icebp
pop
inc
addb
cmp
fwait
shlb
fcmovnu
dec
shlb
add
into
bound
cmp
outsl
mov
push
and
add
fildl
push
cmc
les
in
pslld
jmp
adc
add
xor
sbb
scas
lret
or
lea
xchg
stc
mov
nop
sub
xor
sti
cltd
pop
inc
idiv
adc
jg
sbb
jmp
mov
rcrl
jmp
xor
mov
cwtl
enter
pushf
pop
cwtl
mov
adc
dec
mov
add
dec
stc
dec
push
rcrb
call
jg
inc
fcoml
add
aam
arpl
cwtl
xor
stc
adc
add
cwtl
and
fcompl
pop
cwtl
jmp
inc
mov
or
mov
xlat
cmp
fs
ja
xor
mov
cmpb
loope
add
jl
pop
pop
xchg
jb
in
xor
movsl
decl
add
andl
xor
adc
mov
ljmp
or
imul
adc
push
mov
out
and
push
add
mov
and
xchg
mov
lea
jae
incl
lret
shr
decb
out
sbb
leave
je
inc
push
mov
push
icebp
mov
mov
dec
push
pop
jne
insl
adc
stos
adc
pop
jne
testb
mov
mov
add
loop
or
adc
lods
aaa
mov
mov
loop
dec
jne
xor
push
outsb
push
dec
loopne
das
pusha
pop
decl
stos
pop
imul
xchg
inc
aad
or
pop
jbe
jle
jbe
or
cmp
and
push
jl
adc
adc
repz
add
lea
fisubrs
ljmp
add
mov
shll
repnz
not
and
testl
lea
test
push
fdiv
mov
js
repnz
aam
or
fildll
inc
fisubs
fimull
add
lea
pop
jmp
shr
shl
push
pop
inc
sub
mov
and
not
int
mov
cmp
add
repz
sti
xor
into
mov
roll
add
fwait
push
daa
pop
jg
push
outsb
fisttps
jl
sbb
cli
xlat
outsl
lods
out
mov
push
push
jle,pn
not
and
pop
outsb
movsl
inc
shlb
sub
xchg
mov
in
inc
mov
fidivl
add
or
lock
fiaddl
fidivrl
xchg
adc
sbb
inc
xor
mov
and
pop
or
or
sbbl
int3
xor
add
sub
xor
out
or
and
cli
sbb
les
repz
xlat
rolb
fcomp
cwtl
subb
addl
repz
not
fisubrs
jbe
popa
jnp
adc
pop
scas
testl
sti
mov
pop
les
adc
sbb
pop
push
loop
mov
repnz
sub
fdivs
add
frstor
mov
pop
mov
inc
pop
xor
les
adc
sbb
or
xor
ja
sub
or
or
xchg
jno
std
stos
fdivrs
xchg
and
outsb
pop
push
fidivrs
pop
aaa
fmull
out
das
push
mov
cmpsb
pop
mov
xor
add
sub
xchg
fimuls
or
popa
adc
fsin
mov
add
or
mov
ret
sarl
and
aad
aam
popa
imul
pop
bound
sbb
mov
shlb
clc
jg
shr
xchg
out
dec
cmp
inc
rclb
push
fadds
test
lcall
jb
sub
mov
pop
es
adc
repnz
adc
inc
shll
and
stos
mov
add
pusha
fldz
call
insl
fwait
aaa
pop
imul
das
call
out
loop
xlat
lods
mov
sbb
push
adc
add
rorb
in
sub
outsl
aam
and
clc
cmp
jae
cmpsl
pop
jge
cli
fnstcw
ds
jg
or
fst
leave
push
stos
mov
mov
mov
lret
lcall
out
sbb
loopne
ret
insl
pop
jle
inc
enter
aaa
or
mov
sbb
mov
inc
fimuls
cltd
cltd
xlat
sbb
push
test
repz
push
call
inc
loop
shr
int
or
or
xlat
fdivs
in
jmp
add
int
push
aam
mov
lcall
daa
int
cld
imulb
int3
aad
flds
outsl
adc
cmpsb
out
inc
xchg
dec
fisttps
les
mov
adc
or
fnstcw
test
jmp
mov
pop
mov
test
xor
mov
stc
and
jno
adc
loope
cs
js
lds
popa
popf
insl
mov
adc
xor
mov
repnz
in
mov
cmp
std
mov
mov
in
inc
inc
ljmp
xchg
in
add
mov
mov
xchg
fcmovu
dec
jmp
jb
repz
sub
int3
pop
pusha
dec
mov
outsl
cli
jno
cli
xor
sti
sbb
mov
jae
jl
sti
pop
or
mov
jle
sub
inc
stc
pop
aam
out
testl
data16
lock
out
mov
fimuls
jmp
test
out
aam
xchg
jae
adc
jmp
xor
repnz
sub
add
or
lret
fcmovbe
push
aas
sbb
cmp
rcl
xchg
scas
cltd
js
jbe
les
int
jge
in
mov
in
mov
in
clc
jl
pop
je
mov
xchg
jecxz
pushl
or
mov
mov
push
lods
les
rcl
pop
cli
mov
mov
mov
mov
inc
and
stos
rcrb
sbb
push
or
in
sbb
jl
leave
repnz
ret
or
inc
push
or
adc
lea
mov
xchg
out
xchg
stos
adc
lock
out
jb
hlt
cmp
insl
stos
sbb
xor
icebp
popf
mov
aas
cmp
pop
pop
gs
sbb
fmul
push
rcrl
lret
xchg
int3
or
push
or
ja
adc
sbb
jge
out
jmp
unpckhps
sbb
repz
rcrl
test
sub
inc
jae
xor
call
scas
dec
jle
outsl
jecxz
jp
sbb
xchg
pop
add
fistpl
loopne
xchg
fsub
out
jecxz
jp
ret
add
ljmp
int
repnz
ja
mov
sbb
out
jmp
push
test
sbb
ja
mov
xor
out
lret
or
mov
ret
pop
sahf
aaa
mov
pslld
ret
lds
sbb
pop
rclb
xor
dec
mov
pop
jge
xlat
pop
push
stos
mov
add
pop
movsb
mov
insl
sub
or
or
pop
mov
js
cmp
add
pusha
repnz
cmp
cmc
xchg
cmp
jl
js
sub
push
push
push
cmp
inc
out
adc
or
insb
inc
enter
xlat
adc
inc
cmovne
outsb
lea
insl
push
insl
sbbb
adc
iret
pop
pop
mov
mov
into
ljmp
sti
push
adc
add
sbb
cmp
shlb
je
jne
xchg
sbb
pop
push
iret
pushf
push
add
adcb
xchg
in
dec
xchg
fwait
pop
push
cmp
push
cld
pusha
test
cmp
jbe
lea
aaa
in
aas
sub
push
inc
jo
or
dec
cmp
mov
pushl
jmp
imul
add
lea
mov
popf
lea
pop
mov
movsb
add
subb
push
push
push
test
mov
mov
lret
mov
mov
inc
imul
cltd
gs
pop
imul
xor
xor
mov
or
inc
call
push
mov
xorb
or
cwtl
lods
adc
dec
push
push
mov
adc
dec
int3
adcl
pop
push
push
inc
push
mov
mov
push
call
xchg
hlt
jno
add
cmp
in
call
mov
imul
fs
push
or
aam
lahf
iret
out
fsubs
das
fsubrl
jo
fwait
jns
and
gs
in
outsl
pop
cmp
int
mov
test
test
js
push
or
mov
cmp
pusha
or
stos
call
jae
jnp
sbb
icebp
adc
ds
cwtl
mov
enter
enter
xchg
jbe
insl
loope
add
cmp
scas
mov
jne
test
sbb
fdivr
dec
or
out
pop
int3
call
push
sahf
pusha
cmp
lock
or
or
and
adc
push
jo
andb
xor
fldenv
incb
push
inc
lods
pavgw
push
aad
cld
setge
cld
das
ss
imul
cmpl
lcall
mov
push
inc
rorl
push
xchg
jne
xchg
push
je
les
mov
jns
or
enter
xchg
adc
cmp
repnz
aad
adc
cmp
or
xor
fcmovne
sub
cmp
je
dec
dec
cmpw
jne
pop
push
arpl
inc
add
cmp
add
xchg
sub
push
cmp
mov
add
cmove
jecxz
mov
lock
or
pop
jbe
cmp
scas
ja
movl
push
or
fcmovnu
sbb
xchg
cmp
test
mov
inc
add
je
cmp
jne
push
inc
mov
addps
push
outsl
in
add
add
mov
mov
stos
xchg
and
sub
pusha
shrb
jle
sub
push
mov
xor
loopne
xor
push
data16
adc
push
inc
loopne
mov
push
cmp
jg
ret
sub
xor
popf
lods
add
insb
popa
fidivl
popf
test
mov
sbb
mov
cmpsb
mov
push
dec
inc
sbb
push
nop
sbb
mov
mov
mov
and
sbb
jbe
lcall
in
in
sbb
mov
ffreep
dec
push
call
aad
xchg
dec
mov
rcll
jmp
sti
aam
mov
fsubl
lds
add
jg
std
and
mov
aaa
loop
lods
jl
ret
inc
push
xor
rolb
clc
cmp
in
and
pushf
fstps
lea
rcrl
dec
je
cmp
mov
jbe
sti
jne
cmpl
pop
sti
mov
cmp
je
jo
push
push
xor
sbb
pop
dec
shl
cmp
popw
or
pop
mov
outsl
in
outsl
scas
pop
xchg
in
sbb
pop
adc
pop
pop
call
dec
jmp
add
mov
mov
mov
leave
std
jns
inc
je
jmp
pop
shrb
sarb
push
les
mov
in
pop
dec
mov
jb
gs
cmp
jle
and
cmp
mov
mov
cmpb
adc
js
sbb
jl
mov
mov
cmovbe
xor
fwait
or
scas
dec
or
mov
mov
mov
mov
pop
cs
inc
mov
mov
mov
mov
jb
imul
push
movsl
lods
mov
mov
lret
js
insb
outsl
jb
ss
sub
cs
fcmovu
imul
dec
test
loop
fdivl
mov
popa
pop
in
push
out
dec
out
insl
mov
mov
jmp
in
in
jae
xor
mov
out
out
sub
icebp
bnd
pop
adc
insl
repz
mov
mov
dec
ret
rol
add
xor
enter
lcall
int3
hlt
cmc
call
pop
mov
idiv
mov
movsb
lea
xchg
stc
fidivs
mov
scas
lds
inc
daa
insb
pop
push
jge
adc
pop
aaa
enter
ljmp
fistpl
jmp
sub
ds
pop
add
leave
dec
push
cli
add
dec
dec
rcr
cmp
cmp
enter
std
aas
mov
lods
jnp
movsb
cmpl
jg
cli
idivl
lea
rcl
out
push
inc
mov
pop
adc
sbb
pop
repnz
xchg
outsb
ret
ds
and
cli
arpl
test
inc
je
and
scas
fadd
mov
mov
gs
lds
inc
xchg
jb
cwtl
mov
aaa
enter
adc
sbb
adc
add
mov
shl
and
test
xchg
cmp
lcall
xor
movsl
dec
add
jmp
and
cmc
insl
cwtl
test
sbb
pop
dec
sub
enter
int3
stos
pop
cmp
fsub
shrl
inc
hlt
cltd
bound
fdivs
cmpl
adc
push
imul
cmp
lock
dec
mov
cld
stos
cld
outsb
pop
test
mov
mov
hlt
inc
cmp
jnp
mov
fcomps
add
mov
aam
out
jecxz
aam
fimull
out
and
mov
xchg
sti
mov
or
lods
xor
iret
add
iret
adc
mov
fstps
jno
inc
popf
cmp
out
adc
test
mov
sub
in
or
sbb
rolb
mov
sbbb
cmp
jl
jns
push
sti
inc
popa
fmul
ret
sbb
cmp
lcall
movl
stc
popa
fnstsw
aam
ret
xchg
cmp
rcrb
cmpw
pop
sbb
mov
lcall
sbb
js
out
movsl
cmp
fdivrs
addr16
insl
push
sub
push
fnstcw
fsubs
shr
push
mov
jb
jne
mov
pop
mov
test
stc
aas
jne
lods
push
ss
sub
pop
movsb
fcom
std
call
cmp
cld
outsb
inc
adcb
call
lcall
mov
adc
dec
adc
adc
or
insb
mov
mov
js
xchg
cmp
xor
xchg
loopne
outsb
or
add
adc
rcr
adcb
mov
mov
andl
call
sbb
dec
push
cmp
or
push
vmovups
jg
pop
sahf
icebp
lock
jge
push
movsl
pop
sbb
stos
movsb
xchg
cmc
hlt
aam
fcompl
push
or
ss
adc
adc
push
inc
push
mov
xchg
pusha
or
insb
jmp
ds
push
pop
jle
push
push
mov
xchg
pop
hlt
into
faddl
movzbl
testl
cmc
inc
shl
add
aas
lock
or
and
push
das
inc
loopne
push
mov
and
andb
jmp
test
push
adc
lods
stos
pop
outsb
dec
rcrl
insb
lock
mov
popa
pop
repnz
mov
testl
gs
shll
inc
xor
leave
leave
mov
je
dec
outsb
popl
sub
outsl
int
push
pop
jo
sbb
mov
mov
xor
push
sbb
xchg
xchg
xchg
jmp
adc
pop
fdivs
ret
movsb
pop
pop
dec
push
dec
xor
and
inc
xchg
or
xchg
ds
nop
sub
jnp
adc
sbb
cmp
ja
outsb
test
add
xor
rol
pop
call
adc
sbb
inc
in
roll
mov
sbb
pop
out
or
in
pop
sub
popf
add
cmp
mov
push
bound
fldenv
sub
cmp
in
pusha
mov
fsts
and
adc
adc
int3
push
cld
cld
pop
mov
jno
xchg
dec
and
lea
push
ja
push
xlat
push
sub
lea
push
sarl
mov
ret
jmp
outsl
arpl
nop
in
or
or
adc
jge
push
inc
nop
ss
rcrb
subb
test
or
out
push
mov
push
mov
mov
xlat
arpl
pusha
mov
xchg
xchg
and
movsl
jle
ret
loop
sbb
xor
imul
sub
sub
push
and
jb
divb
sti
dec
incl
icebp
jle
mov
push
stos
lahf
or
or
jo
je
add
fdiv
popa
cmp
clc
xchg
orl
mov
fyl2xp1
push
jno
pop
in
push
inc
add
insb
cmp
lahf
mov
or
or
ja
sub
sbb
call
pop
outsb
subl
loopne
out
ja
adc
shlb
jmp
jl
adc
add
std
jg
cmp
mov
aas
xchg
or
xchg
sub
aas
divps
pop
mov
shrl
push
aam
xchg
xlat
xor
in
iret
add
inc
pop
push
daa
divb
pop
push
jle
xor
or
push
mov
adc
sub
fdivrl
cmp
fmuls
add
lret
insl
mov
imul
fwait
dec
xlat
sub
jae
es
sahf
adc
xor
mov
xor
mov
cmpsb
cmpsl
jo
test
shrl
scas
scas
cmpsb
fnstenv
dec
mov
mov
adc
lcall
mov
fs
bound
mov
insl
cmp
and
xor
int
das
enter
lret
dec
xlat
xor
inc
iret
jae
shll
xor
rcll
aam
aad
fdivs
cmpsb
imul
and
les
jo
outsb
pop
xchg
gs
xor
cmpsb
andl
add
and
fs
es
pop
outsb
cmp
gs
imul
and
test
mov
dec
or
movb
incb
gs
aaa
sbb
mov
out
mov
xchg
sub
or
jae
mov
sbb
sti
push
push
xchg
data16
in
inc
push
sub
pop
test
add
xor
push
push
mov
in
add
lea
jnp
or
adc
je
mov
insb
insb
sub
gs
jl
leave
push
std
xchg
cwtl
icebp
jge
cltd
je
push
sti
xchg
pop
add
pusha
sub
push
fcom
and
dec
dec
cmp
out
fs
aam
or
or
test
pop
add
call
pop
mov
pop
xchg
adc
push
in
fcomps
inc
test
mov
jae
movsl
cmp
pop
imul
clc
fidivrs
jbe
imul
sbb
mov
push
xor
cmp
and
push
xlat
out
sub
adc
inc
mov
push
lock
jmp
or
cmc
fsts
lea
mov
lds
enter
add
lcall
orl
xchg
pop
and
iret
add
iret
inc
push
mov
dec
inc
pop
sub
pop
jecxz
add
sub
mov
sub
or
mov
cmp
and
fs
sub
cmpps
in
gs
mull
jb
inc
push
inc
add
add
push
jnp
loopne
adc
loop
dec
sub
shll
or
or
dec
sbb
jl
adc
jl
orb
bsf
mov
mov
rorl
push
mov
repnz
mov
std
stc
je
adcb
xor
xor
test
fs
mov
popf
mov
clc
mov
pop
adc
push
les
mov
dec
pop
je
pcmpeqb
jae
addb
inc
xor
inc
dec
push
pop
jo
idiv
cmp
cmp
dec
hlt
cmp
lea
mov
mov
clc
cmp
pop
inc
fs
mov
adc
push
mov
sahf
test
push
fstpt
mov
sbb
fisubrl
aas
add
push
add
or
test
imul
add
arpl
ret
push
dec
and
jnp
lods
int3
out
xorb
sti
dec
pop
push
pop
mov
push
rep
or
cld
or
stc
mov
push
xchg
test
call
aaa
and
mov
adc
inc
movsl
mov
dec
loopne
inc
andb
mov
add
les
clc
loope
in
aam
jbe
enter
fistpl
jl
shrb
rdpmc
fcmovne
in
jp
je
inc
cmp
mov
fs
pop
out
mov
fistpl
cwtl
cmp
in
jne
sbb
and
or
push
cmpsl
add
jge
sub
adc
xchg
scas
jmp
and
insl
std
lock
fstps
imul
xchg
sub
dec
scas
loopne
pop
mov
xchg
scas
pop
and
into
jge
bound
push
mov
dec
xlat
orl
pushl
push
or
jnp,pt
fwait
jl
push
sbbl
or
and
les
adc
sbb
outsb
repnz
push
mov
insl
insl
cs
mov
insb
insb
or
mov
jae
je
imul
lcall
rcrl
rorb
push
or
dec
insl
sub
leave
mov
inc
je
dec
dec
rcrl
inc
insb
cwtl
gs
popa
mov
shlb
push
mov
mov
xor
scas
add
push
clc
shl
loopne
inc
sub
lods
call
lahf
inc
cmp
lea
cs
lods
clc
sub
shlb
dec
mov
add
xchg
adc
sahf
jne
ljmp
jns
mov
testl
xor
sub
mov
aam
inc
jb
ficomps
mov
adc
pop
popa
mov
jg
push
push
jne
mov
orb
dec
lcall
sbb
hlt
cmp
sar
repnz
inc
adc
sbb
push
ss
int
iret
mov
nop
fwait
pop
cmc
mov
stc
add
sub
mov
mov
pop
xchg
rclb
decb
test
insb
push
sbb
nop
mov
pop
aad
test
jmp
push
push
pop
xor
sub
outsl
nop
lock
cs
sbb
jo
push
push
imul
ja
stc
adc
add
mov
lock
cli
add
and
pop
aaa
push
out
jl
sbb
inc
jnp
add
test
mov
fistps
mov
jo
pop
cs
sub
adc
push
scas
jnp
and
push
punpckhdq
adc
sbb
cmp
or
loop
enter
cmpsb
inc
jns
pop
dec
push
clc
xchg
insl
imul
sub
rcrb
gs
aam
fsub
call
mov
dec
jge
sub
jo
rol
rcr
push
dec
hlt
sbb
imul
popa
sub
ljmp
xor
roll
clc
dec
mov
mov
sub
push
cld
jmp
es
push
pushf
mov
sub
xor
pop
jb
jge
sbb
pop
int
dec
rol
cvttps2pi
pop
adc
inc
mov
aad
je
jnp
mov
mov
idiv
or
sbb
hlt
cmp
and
enter
loope
xor
add
sub
and
or
sub
push
pusha
dec
lock
push
ss
xchg
mov
sbb
push
ret
or
repz
add
add
cmp
sub
pop
js
hlt
push
xor
mov
imul
xchg
test
dec
inc
push
cs
push
pop
xchg
fs
insb
movsb
addr16
aam
jo
insb
jne
mov
lret
jae
fs
insb
sbb
push
mov
dec
xchg
push
jb
xor
or
cmpsb
dec
add
pop
cmpsl
push
pop
test
add
lods
dec
je
push
pusha
pop
je
ret
dec
jo
pop
xchg
gs
push
gs
fisttpl
jne
das
roll
aam
cmpsb
imul
test
xor
mov
shrl
sbb
inc
push
cwtl
js
mov
int
lcall
es
inc
push
fists
and
xor
jne
jae
imul
mov
mov
xlat
insb
fwait
mov
jb
mov
or
sub
inc
mov
mov
imul
dec
test
mov
enter
fdivs
adc
clc
add
jg
std
cld
xor
push
mov
adc
arpl
leave
mov
or
mov
add
cmp
adc
push
xor
call
repz
lahf
lea
js
sbb
push
jmp
push
pop
stos
xchg
gs
mov
xor
addr16
add
cmp
imul
shrl
je
add
sub
sub
or
or
repz
sbb
mov
push
scas
fimuls
mov
or
shlb
or
xlat
popa
add
add
push
pop
mov
push
or
xorl
stos
cli
lea
mov
push
jbe
push
push
lahf
lret
mov
mov
jbe
test
xchg
mov
ret
or
jmp
ret
call
or
xchg
rcrb
or
mov
fldt
inc
cmp
jb
pop
je
outsl
inc
incl
mov
ljmp
lret
mov
lret
call
jae
mov
xor
and
imul
arpl
or
loopne
ss
jbe
insw
jne
aam
vpinsrw
adc
shlb
popf
pop
pop
adc
mov
int
shll
inc
jge
mov
popa
outsl
push
out
jne
call
inc
sbb
loope
mov
lods
pop
xor
add
add
cmp
pop
ret
or
and
pop
inc
popa
jmp
sub
adc
sbb
sub
lahf
ret
in
adc
idiv
sti
or
xor
mov
or
add
jne
jb
sbb
notl
fcompl
aaa
fldenv
imul
loope
call
test
repnz
push
inc
dec
push
loopne
daa
lret
mov
and
mov
lret
mov
outsl
outsb
cmp
lret
gs
outsl
jae
inc
mov
insb
mov
xor
pop
stos
in
sub
sub
mov
or
push
mov
aas
pop
in
movsb
add
jl
sub
and
out
mov
neg
sbb
add
xor
add
fmull
out
cmp
sbb
arpl
adc
in
cmpsl
ret
jb
shlb
dec
shll
outsb
cmp
addr16
popa
shlb
arpl
popa
addl
mov
or
daa
int
and
loopne
std
mov
inc
nop
cmc
jnp
mov
icebp
and
jae
and
pop
mov
sbbb
jb
jl
push
mov
sub
stc
adc
adc
cld
std
incb
sub
hlt
test
xor
or
cmpsl
add
int3
dec
cwtl
addr16
mov
shrl
sbb
cld
pop
and
sbb
dec
push
loop
adc
or
and
xchg
imul
movsb
inc
lcall
imul
dec
jae
movsb
imul
roll
std
sbb
stos
and
repz
scas
leave
lret
je
call
adc
inc
insb
dec
mov
aad
mov
xchg
cmp
or
fs
push
xor
int3
pushf
fdivl
adc
int3
into
enter
int3
call
nop
je
sbb
insb
outsl
arpl
movb
jne
ljmp
jecxz
dec
rcl
out
data16
inc
dec
int3
xor
push
cmpl
cmpsb
jbe
popa
cmp
mov
lret
das
ja
xchg
inc
and
arpl
mov
pop
jg
pop
adc
adc
inc
mov
sub
pusha
and
inc
sub
pop
pop
out
and
stc
es
inc
nop
pop
aas
lock
mov
inc
xor
mov
adc
repz
mov
inc
fildl
ror
adc
jle
push
push
mov
pop
mov
push
mov
sub
pop
shlb
push
mov
add
fcoms
not
loopne
adc
cmp
lods
or
js
xchg
push
jne
inc
ja
sbb
pop
rorl
mov
mov
sti
jb
mov
sub
mov
cld
mov
fdivrl
in
cmp
or
or
add
fidivs
adc
lock
cmp
inc
movsb
inc
lock
ds
inc
divb
pop
mov
or
or
dec
iret
inc
cltd
std
cwtl
inc
cwtl
and
push
pop
jae
popa
arpl
mov
je
outsl
outsb
cmp
bound
popa
imul
lret
insb
imul
cmpsb
lods
scas
scas
push
mov
imul
imul
inc
mov
jbe
rol
ret
ret
leave
push
insl
lcall
xchg
dec
stos
outsb
int3
cmp
gs
arpl
outsb
gs
xchg
gs
pusha
cmp
jb
jns
cmp
or
sub
pop
dec
or
shl
add
jb
dec
shll
jp
outsb
lods
rorb
ss
icebp
add
scas
lock
dec
sbb
jmp
push
cmpl
jmp
inc
add
cwtl
xchg
jp
nop
jae
fldcw
jb
mov
cmp
mov
sbb
test
push
sbb
push
xor
inc
lea
scas
jmp
clc
pusha
mov
xor
rcr
aas
add
inc
push
aaa
mov
pop
loopne
ffreep
setns
ljmp
andl
pop
xchg
xchg
aas
arpl
lcall
fbstp
pop
add
imul
or
sbb
sbb
out
xlat
jne
or
addb
xor
lods
inc
in
sub
pop
add
js
fiaddl
sbb
xor
insb
divl
into
popa
imul
arpl
stc
adc
pusha
outsl
popa
jb
sti
pop
and
jb
push
and
ljmp
mov
out
call
insl
dec
in
stos
movsb
push
mov
nop
lock
js
dec
add
xor
fcomps
mov
and
push
xor
imul
xor
push
shll
or
or
mov
testb
pop
je
insl
call
adc
fs
jae
subl
je
cmpl
add
mov
pusha
mov
cld
and
push
pop
cmp
add
push
mov
pop
xor
jle
or
in
verr
and
pusha
or
das
std
fidivs
sarb
jl,pn
add
pop
jb
daa
jl
dec
add
cld
adc
add
or
cli
cmpsl
jge
add
loopne
dec
pop
push
push
out
add
push
xor
sti
add
mov
nop
mov
dec
loopne
push
add
arpl
call
mov
pop
adc
pusha
in
out
adcb
adc
push
aam
test
in
sbb
in
add
test
js
ljmp
loope
push
add
arpl
jecxz
add
out
sub
ja
rorl
in
add
xor
out
out
xor
nop
call
inc
add
ljmp
jnp
in
out
out
jae
ja
ds
sub
insl
sbb
xchg
jae
frstor
sahf
sub
shlb
loopne
cld
enter
pop
loop
jecxz
in
xorb
cld
out
mov
je
lock
mov
je
call
jo
icebp
out
push
call
out
les
cmpsl
push
dec
imul
push
call
push
ljmp
adc
jmp
stos
leave
mov
loopne
jmp
mov
test
int3
push
mov
das
lahf
into
or
pop
dec
cmp
add
popa
adc
mov
xlat
adc
mov
sbb
gs
int3
xor
testb
ja
mov
mov
push
sbb
inc
je
les
fxch
push
shlb
sbb
push
jno
movsl
js
pushf
sub
mov
push
cmp
popf
and
in
int3
inc
push
cmpsb
add
mov
mov
sbb
jb
add
adc
cmpsb
imul
lods
push
mov
mov
sti
mov
nop
imul
jle
push
jmp
stos
int
pop
sub
js
and
adc
lock
lock
inc
push
call
or
testl
jp
sbb
cmpl
shr
add
fdivl
jne
data16
mov
push
push
xor
insl
mov
add
or
and
jae
sbb
mov
insb
mov
and
add
or
add
int3
nop
mov
inc
movsb
rorb
data16
jbe
mov
mov
mov
out
push
or
xchg
shlb
push
and
nop
leave
push
js
mov
sub
xor
mov
cmpsl
cmp
test
inc
and
cmp
cmpsl
int3
sbb
aam
out
mov
mov
cmpb
cmpsl
scas
arpl
iret
mov
mov
sbb
aad
dec
jno
xchg
ja
jb
or
divl
ret
pusha
mov
push
sub
or
pop
in
cs
mov
mov
inc
and
mov
sub
enter
or
sub
sti
jle
sub
sbb
das
negb
sbb
sub
pop
stc
jae
add
mov
and
xchg
sub
and
insb
and
cmp
mov
rcrb
mov
xchg
scas
in
add
andl
hlt
rcll
push
fchs
sar
jne
movl
es
test
decl
jbe
cmpsl
fldt
and
sbbb
addr16
pop
adc
addr16
xor
loopne
sbb
mull
cmp
js
enter
leave
insl
adc
mov
jbe
jne
adc
lea
into
sbb
cmpsb
push
or
mov
bnd
or
xchg
xor
out
bound
cmp
dec
outsl
cmp
sub
fimuls
mov
xor
xor
cmp
int3
sub
adc
sbb
pop
push
gs
cli
xchg
mov
ss
mov
adc
pusha
push
subb
push
test
inc
jmp
push
mov
dec
ret
dec
je
push
mov
mov
adc
pop
inc
push
loopne
and
pop
push
add
pop
or
lea
stos
cmpb
imul
notl
rcr
pushf
cld
push
or
jnp
enter
add
push
adc
push
decb
popl
jg
mov
push
lods
shr
js
inc
pop
ljmp
push
fadds
mov
dec
push
lock
rclb
pop
mov
jbe
mov
and
call
dec
les
movups
sub
sub
and
push
into
rorl
sbb
mov
cmp
cmp
xchg
ss
out
test
inc
or
imul
mov
sbb
sbb
dec
pop
pop
push
mov
push
sbb
pusha
cmp
mov
cmp
inc
dec
dec
and
xor
pop
pop
test
xchg
and
popf
sub
daa
shlb
sahf
inc
jno
pusha
sbb
out
lret
or
adc
cmp
xor
xor
stos
in
rolb
mov
mulb
mov
mov
cmpsl
ret
stc
push
mov
out
jle
jge
mov
jb
or
fs
mov
out
push
sbb
xchg
add
sti
aaa
mov
cwtl
and
int3
cmp
push
jmp
mov
lods
mov
rcrl
push
scas
mov
fistpl
add
pop
adc
in
xchg
in
or
movl
andb
pop
and
ds
xchg
lock
call
outsb
insb
inc
or
adc
mov
mov
lea
push
or
test
mov
sbb
pop
cmpsb
mov
push
push
divl
mov
add
cmp
sbb
cmp
cs
out
mov
adc
cmp
jl
jecxz
ljmp
dec
jg
mov
cmp
jl
cmp
inc
inc
subb
jmp
adc
cmp
out
out
shrb
dec
mov
lahf
jge
in
sarb
push
aam
dec
insl
mov
xchg
shr
pop
mov
cmp
adc
pop
dec
pop
push
and
fsubrl
dec
add
pusha
int
ja
jecxz
test
fsubp
jmp
ljmp
int
and
dec
cmp
cmp
dec
add
mov
mov
test
cmpl
aad
jmp
jb
dec
add
jg
mov
add
cmpl
pop
and
add
push
jb
fidivs
or
or
fisttps
sub
dec
jmp
inc
dec
sbb
jg
inc
dec
addl
pop
and
mov
rcll
push
and
xlat
ret
add
add
rcrb
mov
adc
jne
mov
sub
mov
subl
mov
jno
dec
inc
jae
add
fistps
loopne
adc
pusha
lea
roll
jle
movzwl
mov
jne
daa
add
add
shlb
cli
pop
sbb
orb
adc
add
inc
xor
clc
push
data16
mov
scas
mov
add
or
sub
inc
adc
inc
mov
ss
mov
xlat
pop
mov
outsb
adc
mov
outsl
rorl
inc
inc
loop
xchg
add
jmp
push
pop
add
insl
sub
adc
sub
cmp
pop
and
jl
repz
jbe
jno
es
outsl
add
dec
out
ss
and
or
mov
adc
je
fiaddl
iret
out
xor
je
and
ret
js
pop
mov
pushl
add
push
scas
clc
add
or
sbb
sbb
mov
loope
inc
push
mov
fsubr
shlb
push
aas
ret
std
mov
bswap
jbe
insb
andl
dec
fstpl
pop
rorb
in
and
lahf
inc
dec
pushw
outsb
aaa
pushl
lcall
add
push
xchg
adc
jge
ret
les
push
lds
and
add
push
adc
adc
add
sub
cltd
jecxz
or
cld
cld
or
call
pop
adcl
pop
mov
fmull
xchg
inc
cmp
testb
je
pop
inc
sub
pop
inc
shr
or
inc
ds
pop
or
pop
data16
push
scas
push
in
in
and
ljmp
xor
data16
adc
mov
push
lods
or
inc
mov
sub
fisubrs
pop
push
sub
mov
pop
add
adc
pop
mov
adc
insb
test
jmp
adc
daa
daa
lret
mov
jo
jb
test
insb
add
js,pn
or
adc
scas
add
pop
push
addr16
adcl
or
adc
test
mov
lock
sbb
jge
je
xorl
xchg
add
into
sub
or
add
add
add
mov
mov
call
mov
push
adc
mov
pop
stos
rorb
jle
enter
fucomip
hlt
pop
push
mov
outsw
mov
outsb
je
pop
clc
mov
xor
push
push
fwait
cmpsl
stos
hlt
aas
call
push
imul
and
sub
or
rorb
xchg
clc
movsb
add
shll
lock
xor
mov
shrb
and
xchg
pop
push
pop
jne
negl
jl
aas
je
xchg
fnstcw
and
pushf
add
jnp
pop
add
pop
sbb
adc
inc
fsubr
cs
mov
test
hlt
xor
fwait
pop
and
or
mov
add
insb
or
and
sahf
jbe
fsubrl
xchg
test
lock
fcmovne
mov
popa
call
mov
xchg
pop
repz
frstor
push
mov
push
mov
add
fmuls
push
mov
inc
je
push
aaa
jnp
and
push
mov
daa
add
dec
adc
jmp
mov
push
icebp
mov
sbb
es
movsl
mov
and
sub
mov
les
adcl
push
xor
cmp
push
mov
jbe
adc
mov
ja
jl
dec
sbb
addr16
popa
sub
sbb
pop
or
ret
sbb
ret
leave
pop
inc
movsb
jp
inc
repnz
ror
iret
test
lds
outsb
xor
mov
enterw
enter
lret
int3
lods
adc
enter
pop
inc
outsb
fnsave
std
rolb
mov
fs
jne
ss
xor
jno
lret
mov
sub
xor
les
shll
xor
xor
dec
inc
je
popa
jo
insb
mov
nop
cs
jg
dec
mov
adc
enter
inc
loopne
rorl
add
mov
push
jb
dec
ljmp
sbb
jmp
push
add
adc
dec
cmp
inc
inc
mov
sub
pop
test
xchg
xor
iret
or
and
adc
pushf
lock
mov
int
add
jle
or
push
mov
jp
lahf
sub
and
xor
xor
lea
mov
add
scas
sahf
sub
imul
lods
mov
push
pusha
mov
leave
dec
test
ljmp
movsl
aam
add
sub
mov
cmp
jo
mov
lret
mov
jb
jb
or
xor
gs
in
subb
mov
pop
add
mov
mov
mov
jb
enter
std
leave
std
add
mov
je
cmp
push
jmp
or
jge
addr16
push
mov
push
cwtl
xor
int3
mov
push
andps
stc
or
inc
push
push
lahf
cs
pushf
arpl
mov
and
mov
insb
popf
xor
shrb
jnp
jne
filds
es
rol
or
inc
xchg
or
daa
inc
and
cmp
mov
jno
pusha
add
sbb
jl
test
sub
enter
jo
iret
dec
dec
dec
add
add
and
and
push
cmp
cmp
cmp
sbb
and
add
adc
aam
sbb
jle
sub
call
cmp
cmp
scas
inc
sub
add
adc
add
hlt
mov
andb
shl
add
imul
jp
inc
jb
arpl
push
arpl
push
add
jbe
push
out
mov
pop
xor
pop
lods
test
in
inc
add
idivb
inc
xchg
ret
push
jb
arpl
jae
mov
adc
push
outsl
outsl
insb
out
and
pop
dec
jo
xor
popa
jo
push
imul
and
mov
cmpl
jo
add
inc
insb
fmull
imul
fs
incl
fistpl
imul
push
hlt
mov
packsswb
pop
push
fisubrs
pop
add
jnp
sbb
ja
jp
sbb
fs
adc
xor
pop
pop
pop
inc
mov
add
jb
jl
xor
sbb
ret
add
inc
iret
or
cs
sub
dec
and
inc
jns
imul
sbb
jne
or
and
mov
push
arpl
into
add
dec
aas
imul
fisttpl
add
stos
mov
mov
sbb
mov
scas
nop
jno
inc
outsl
jb
outsb
jge
xchg
push
push
push
gs
outsl
shll
xlat
push
lods
int3
xor
dec
sbb
push
addb
orb
insl
mov
xor
aad
push
sub
push
push
push
xor
mov
popf
jae
inc
pop
ret
andb
mov
inc
jno
dec
pcmpeqb
xor
inc
and
push
cmp
dec
or
push
add
scas
mov
push
fadds
dec
mov
sbb
mov
daa
ret
push
outsl
imul
mov
sub
pop
mov
pop
dec
mov
jge
xor
mov
push
inc
ss
popa
mov
sbb
xor
in
fisubs
inc
add
jns
mov
sub
outsl
cwtl
add
rcr
mov
xor
outsb
push
ret
loope
pop
cwtl
loope
imul
pop
cmpsl
arpl
insl
fsubl
adc
add
fnstenv
es
jmp
shll
mov
dec
test
rclb
xor
jae
mov
mov
dec
addl
sbb
push
outsb
push
lock
out
push
inc
outsb
loope
push
subb
sbb
je
push
push
or
test
cmpsb
inc
push
inc
sbb
lods
loope
lcall
popa
xor
mov
sub
stos
jae
xor
pusha
jb
outsl
jae
aam
mov
sub
orb
rcrb
sub
adc
add
add
dec
mov
or
pop
aad
pusha
sbb
outsb
push
push
push
sarb
in
inc
inc
or
add
fwait
mov
push
cmc
inc
inc
repnz
add
je
or
and
std
into
push
xlat
pop
lods
ret
sbb
insl
xchg
out
dec
fldcw
sbb
mov
fildl
jae
sub
lea
dec
mov
lods
orl
or
push
popf
jo
sub
jb
adc
cmpsb
jne
add
xchg
cltd
xor
adc
push
and
adc
jnp
out
imul
jb
data16
jnp
and
xchg
out
and
inc
outsb
jne
jno
push
add
push
or
jne
sbb
jae
pop
jo
inc
popa
arpl
add
pop
push
xor
push
shrb
mov
lcall
or
mov
adc
cltd
add
insl
shlb
sbb
sbb
sub
xor
or
fimull
jae
pop
jnp
add
arpl
imul
daa
sub
popa
fistpll
mov
jne
or
or
mov
add
add
lods
icebp
sti
pop
dec
adc
jns
jge
pusha
push
jo
push
das
lods
adc
lods
cmpsl
popa
arpl
or
in
pop
cmove
mov
fst
jnp
aam
aas
aas
xor
inc
testl
inc
pop
jns
lahf
nopl
sbb
xchg
cmpsl
bound
out
and
or
loope
jbe
cwtl
sbb
gs
jl
jmp
and
stc
mov
js
insb
ja
dec
push
push
mov
adc
lcall
mov
xor
shlb
ja
pop
jecxz
dec
and
sbb
xor
push
add
xor
roll
mov
push
adc
adc
mov
movsl
movsb
cmp
dec
inc
dec
push
dec
xchg
jo
lods
inc
sbb
popa
xchg
sub
addr16
lret
xlat
adc
daa
or
push
inc
add
jecxz
mov
cwtl
adc
jo
insl
ja
outsl
sahf
pop
or
push
gs
pop
xchg
inc
inc
inc
xor
test
jle
lcall
aas
xor
add
ds
inc
ds
js,pt
xchg
ds
jl
mov
mov
aas
les
enter
fdivrs
in
call
aas
add
xor
xor
xor
sub
pop
xor
outsl
xor
xor
imul
jo
jnp
mov
mov
decl
cld
xor
xor
xor
ljmp
xor
fbstp
cmc
xor
incl
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
pushl
xchg
fs
dec
aaa
imul
cmpsb
aaa
mov
aaa
out
cmc
aaa
incl
cmp
cmp
cmp
mov
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
out
cmp
cmp
cmp
push
cmp
jne
and
add
ljmp
xchg
xor
loopne
sti
or
push
aaa
sub
push
dec
cmp
cmp
cmp
cmp
cmp
pop
cmp
mov
lea
mov
mov
cmp
cmp
push
cmp
dec
cmp
xchg
mov
or
mov
fidivrs
repnz
cmp
cmp
cmp
cmp
jmp
cmp
jge
clc
add
sbb
pop
aas
push
scas
aas
mov
in
pushl
dec
pusha
adc
xor
xor
xchg
pushf
xor
jmp
jge
movsl
xor
xor
or
push
xor
push
dec
xor
xchg
cwtl
jg
xor
xor
xor
xor
xor
xor
xor
xor
dec
xor
push
xor
xor
xor
ljmp
dec
ljmp
dec
xor
xor
xor
xor
xor
xor
xor
or
jmp
xor
xor
xor
xor
xor
xor
sub
jg
mov
xor
data16
divl
cld
add
sbb
add
insl
arpl
incl
aaa
aaa
in
test
movsl
cmp
cmp
cmp
cmp
cmp
insb
cmp
jns
cmpl
stos
cmp
cmp
push
cmp
outsb
cmp
xchg
cmp
cmp
cmp
sbb
ljmp
cmp
cmp
cmp
cmp
sti
cmp
fdivrs
ds
aas
and
dec
aas
pop
aas
mov
aas
mov
mov
cmp
dec
xor
xorb
xor
xor
aaa
dec
xor
xor
xor
xor
xor
push
xor
xor
xor
xor
push
xor
xor
xor
test
mov
push
xor
xor
sbb
pop
xor
xor
xor
xor
xor
xor
xor
mov
mov
xor
pop
cmp
push
ss
ss
and
ss
pop
aaa
insb
aaa
jg
mov
in
sbb
das
jg
cmp
cmp
pop
cmp
cmp
imul
cmp
cmp
jg
cmp
cmp
cmp
cmp
outsb
inc
jle
idivl
add
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sub
cmp
pop
cmp
cmp
mov
cmp
push
push
or
sbb
and
xchg
in
dec
repnz
xor
xor
xor
pop
clc
mov
sti
cmpsl
xor
je
jg
mov
jmp
das
cld
pushl
xor
xor
xor
xor
xor
xor
xor
inc
xor
xor
jnp
xorl
call
aaa
stos
aaa
mov
mov
aaa
add
sub
cmp
addr16
cmp
cmp
das
cld
pushl
cmp
cmp
cmp
adc
shrl
sub
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
or
cmp
cmp
cmp
cmp
fists
cmp
hlt
ds
ds
ds
jo
jp
mov
or
sbb
sub
aas
aaa
aas
ds
dec
aas
push
aas
pop
aas
popa
aas
addr16
insl
aas
jne
jnp
test
mov
xchg
aas
cltd
aas
mov
push
lcall
aas
sarl
fstpt
loopne
in
jmp
cli
aas
call
nop
xchg
jg
sub
or
adc
pop
mov
xor
sub
xor
pusha
xor
sub
xorb
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
insb
cld
divb
std
xor
cmp
cmp
out
pop
imul
xor
xor
xor
jbe
jl
xorl
xchg
xor
xor
xor
xor
xor
xor
xor
loope
xor
mov
sbb
xor
xor
jne
fistpll
xor
dec
xor
imul
xchg
xor
pushl
jne
lock
cld
xor
xor
xor
xor
xor
xor
call
push
xor
insb
xor
sahf
xor
xor
xor
xor
xor
jg
pushl
cld
xor
xor
xor
xor
xor
xor
xor
xor
jecxz
xor
xor
xor
jg
add
mov
xor
xor
xor
xor
and
sub
cmp
push
xor
addr16
jns
clc
pop
sbb
sti
mov
mov
out
xor
cld
lea
sbb
and
xchg
mov
lret
fbstp
in
ss
aaa
data16
jb
jge
cmp
adc
pop
add
imul
cmp
cmp
sti
pop
cmp
outsl
clc
cmpsb
jne
jecxz
adc
sbb
dec
cmp
icebp
sbb
mov
and
cmp
adc
or
cmp
stos
cmp
sub
gs
xchg
xchg
sarb
ds
jg
cmp
or
adc
sbb
mov
inc
xor
fwait
lcall
xor
xor
xor
ret
and
jmp
xor
rcr
jg
xor
pop
xor
je
mov
mov
popa
rcrl
inc
jns
xor
mov
xchg
pop
roll
ja
insl
sbb
addr16
jg
xor
xor
ret
popa
or
sbb
and
sub
xor
xor
xor
xor
mov
jno
adc
or
inc
dec
push
out
mov
push
sbb
adc
mov
nop
mov
in
fwait
adc
mov
je
dec
pop
shrb
popf
fwait
out
das
sti
mov
mov
mov
incl
cmp
adc
sahf
xor
add
add
jbe
xor
pop
lock
mov
add
fiadds
leave
mov
aaa
add
test
enter
cmp
imul
jb
jb
ret
inc
and
pop
inc
add
inc
xchg
ja
daa
push
jbe
and
pop
cmpsb
xor
rolb
int
fisubl
pop
sbb
adc
xor
out
xor
cmpsb
jae
add
mov
lcall
scas
cmp
cmpb
xor
adcb
mov
aam
roll
mov
pop
js
xor
out
movsl
ja
inc
sub
add
and
fidivl
and
xor
xor
mov
mov
inc
push
sub
push
push
inc
and
loop
dec
add
and
mov
and
and
and
and
sbb
jns
or
shlb
and
test
mov
and
add
leave
mov
and
test
and
nop
sbb
add
and
or
daa
sub
add
push
and
bound
inc
cwtl
push
repnz
mov
and
adcl
adc
mov
in
enter
push
dec
add
negb
aas
push
and
jns
pop
leave
sbb
pop
add
jmp
and
sbb
sub
push
lock
mov
adc
push
xor
push
pop
xor
jb
lret
pop
cmp
subb
outsb
negl
mov
inc
inc
push
lods
mov
lcall
rcll
add
push
iret
cli
dec
adc
js
in
add
lahf
in
sub
dec
add
dec
adc
adc
lods
mov
push
mov
ds
mov
lods
xor
push
cmpsl
adc
das
mov
int3
inc
jecxz
mov
dec
ficoms
mov
add
cmovo
adc
and
sub
cmp
push
and
and
mov
or
adc
sub
adc
pop
pop
xor
adc
cmp
xchg
mov
push
mov
pusha
and
mov
mov
add
in
or
push
pusha
mov
and
adc
cld
add
cmp
jl
inc
hlt
mov
add
and
cmp
mov
idiv
xlat
cmp
iret
icebp
addr16
in
insl
out
mov
xchg
push
test
jne
pop
in
out
push
pop
add
jecxz
test
jge
xchg
xchg
xchg
mov
mov
mov
mov
mov
xchg
xchg
xor
mov
lods
movsl
pop
push
mov
jl
cs
insl
jae
lods
std
scas
std
scas
arpl
movb
push
mov
in
xchg
std
mov
mov
mov
push
add
stos
pop
enter
out
cli
mov
int
insl
mov
test
ja
test
sub
outsb
stos
lods
cld
jo
sbb
pusha
lods
shrl
jo
cld
push
mov
dec
mov
aad
xlat
insb
test
pop
jb
jb
jmp
js
xchg
in
inc
pop
push
xor
xor
mov
sbb
sub
or
jmp
pop
sbb
push
imul
ret
or
mov
lret
push
ror
popa
lcall
outsb
outsb
gs
push
mov
cs
inc
gs
xchg
xchg
fs
popa
jne
dec
xlat
dec
xchg
arpl
mov
je
xor
lcall
mov
orb
jo
gs
xchg
movsl
js
insb
outsl
push
push
dec
xchg
jb
or
mov
mov
enter
adc
je
in
repz
cmp
ret
repz
mov
sub
ret
xor
ror
and
lea
or
push
call
stc
fisttpll
add
push
push
jp
pop
cmc
push
cmpsb
enter
mov
adc
xchg
jl
pop
jne
push
jns
imul
add
jbe
or
xor
jg
jl
fwait
outsl
scas
addb
or
add
fsubr
mov
loopne
out
test
mov
mov
add
sbb
adc
clc
dec
and
lcall
lea
mov
push
push
sbb
rorb
int
push
and
lcall
dec
mov
sbb
lret
sub
dec
pop
xor
cld
sbb
leave
sete
std
cmp
leave
pop
mov
arpl
inc
add
push
add
pop
mov
or
mov
or
jo
pop
pop
mov
add
or
out
jl
or
lea
add
push
repnz
jo
pop
sub
nop
iret
dec
pop
sbb
mov
adc
or
adcl
out
das
adc
dec
and
enter
add
add
and
add
xor
and
cs
add
adc
nop
jl
sub
ss
cmp
add
dec
mov
bound
fsubl
or
mov
adc
sub
fcmovne
push
test
sub
bound
sbb
push
sub
mov
inc
mov
mov
inc
sub
mov
mov
lock
add
nop
jae
lds
mov
outsb
jb
and
or
pop
inc
lret
jmp
ret
mov
pop
shll
mov
shlb
sub
icebp
xor
or
add
insl
dec
jae
lods
dec
adc
and
mov
cltd
pop
xchg
sub
or
repz
dec
inc
pop
sbb
xchg
inc
fstl
std
les
pop
add
in
cmp
dec
pop
push
add
xor
xchg
daa
fwait
mov
mov
rcrb
sbb
dec
mov
inc
jnp
cmp
sub
inc
push
leave
fdiv
xor
imul
cmpsb
imul
imul
pop
shll
xor
jge
add
call
add
adc
push
repnz
rcrl
mov
add
mov
das
dec
adc
mov
es
das
push
add
xor
fadds
cmpsl
or
adc
rcll
daa
adc
out
adc
xchg
mov
inc
jbe
popa
cwtl
mov
stc
adc
ljmp
adc
jno
loope
xor
or
repz
sub
dec
inc
adc
or
xchg
mov
iret
jnp
imul
fcoms
jns
ret
jo
add
lds
outsl
pop
jns
ret
cmc
pop
adc
or
int3
or
ret
mov
hlt
pop
mov
adc
outsl
jecxz
stc
in
adc
inc
imul
and
add
test
daa
pop
or
xor
dec
movsl
in
inc
les
add
lods
push
pop
pop
add
xor
or
dec
inc
cmovns
inc
or
add
imul
test
cltd
add
mov
bound
addr16
xchg
xor
pop
jecxz
or
or
mov
jecxz
inc
and
xor
xorb
jae
and
popa
pushw
jnp
jns
popa
and
add
addr16
gs
imul
ss
push
inc
frstor
sub
push
adc
push
lds
jb
add
mov
cmp
fnstenv
xor
sbbb
xor
popf
xchg
pop
dec
or
out
pop
addr16
jo
popf
addr16
out
or
sub
mov
adc
inc
insb
cmpsb
fcmovnu
push
sub
or
shll
sub
dec
dec
imul
push
daa
dec
jge
jbe
mov
test
pcmpeqw
jae
ret
and
xor
inc
push
imul
and
arpl
cmpsl
dec
fidivl
add
jmp
xorb
xor
xor
xor
adc
xor
xchg
xor
adc
xlat
daa
xor
mov
cld
das
inc
aam
xor
xor
xchg
das
adc
adc
ss
stos
imul
pushl
lea
mov
cmp
inc
aaa
insl
aaa
je
mov
scas
aaa
mov
aaa
or
pop
cmp
jg
lcall
cmp
pop
cmp
cmp
cmp
cmp
arpl
dec
les
cmp
dec
fs
inc
std
cmp
cmp
ss
xchg
cmp
add
or
cmp
pop
mov
lcall
imul
or
or
add
add
fistl
outsl
and
or
dec
inc
sbb
outsl
data16
dec
hlt
xchg
add
cmp
adcb
cmp
push
rclb
dec
add
xor
add
or
add
out
adc
add
dec
outsl
jbe
sbb
xorb
in
fsubrs
loop
jl
sbb
outsb
sub
mov
ret
push
adc
andb
add
or
sub
or
add
add
dec
aas
add
mov
dec
stos
mov
add
and
mov
add
mov
pop
insb
dec
xor
int
pop
and
inc
mov
push
inc
leave
or
pop
add
js
add
cmp
iret
push
xchg
sbb
push
repnz
add
xor
enter
push
fs
mov
or
fs
shlb
stos
mov
nop
push
jno
xchg
add
es
push
out
rol
mov
movsb
jmp
lock
outsl
repnz
inc
add
add
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
