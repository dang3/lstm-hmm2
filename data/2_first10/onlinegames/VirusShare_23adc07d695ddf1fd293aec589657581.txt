pop
fmuls
mov
ret
nop
mov
icebp
insb
ljmp
call
movl
pop
sbb
fstpl
and
add
sub
les
ret
jne
add
jmp
jl
iret
lahf
in
adc
mov
mov
sbb
push
mov
ret
pop
pop
testb
push
xor
mov
rorb
add
stos
mov
adc
xchg
jg
out
ficoms
sub
call
or
test
mov
jno
cmp
xor
daa
add
dec
and
push
call
lea
dec
xor
call
sub
mov
pop
jmp
inc
pop
inc
push
inc
lcall
xor
ja
mov
push
outsb
cmp
pop
pop
cld
fidivrs
push
call
add
add
push
sbb
bound
nop
sbb
adc
je
movsb
fisttpl
push
push
jbe
in
sbb
push
cmp
push
push
sbb
jo
enter
mov
fucomi
or
xor
mov
mov
lcall
and
cmp
mov
sbb
or
add
dec
sub
sub
xlat
pop
push
and
adc
popf
imul
jl
mov
add
enter
ss
je
push
push
cmp
push
cmp
jnp
push
push
sbb
mov
sub
lea
xor
sbb
jo
in
jo
jb
in
pop
and
in
add
sub
clc
pushl
mov
fistl
and
je
lock
sahf
lods
mov
fs
lock
or
push
push
and
mov
mov
mov
add
das
dec
push
mov
mov
mov
add
adc
sub
mov
mov
push
push
mov
sti
test
xor
push
sbb
cmp
sbb
aaa
pop
mov
add
sub
mov
cmp
sbb
pop
sub
cltd
fcompl
jp
add
test
sbb
cmp
jne
lea
xchg
fistpll
je
rep
mov
mov
sbb
mov
dec
enter
xchg
xchg
out
add
inc
adc
adc
cmp
dec
sub
mov
sbb
ret
fucomi
pop
mov
push
sbb
sbb
lea
lea
push
pop
or
aad
je
fs
ss
pop
sbb
xor
and
add
leave
sbb
or
in
jbe
add
and
add
sbb
or
inc
xchg
sbb
cld
xor
mov
jle
jge
mov
jmp
decl
cmpsl
je
daa
adc
mov
jmp
lea
lahf
outsb
sbb
sub
lea
sub
pop
nop
and
test
jmp
mov
inc
imul
cmc
jae
xchg
jo
push
lahf
in
jae
jl
dec
add
iret
adcb
push
push
or
push
add
mov
mov
adc
mov
daa
mov
mov
mov
add
dec
jne
sub
fbld
mov
and
jmp
push
into
or
mov
xchg
pop
les
insb
and
loope
inc
test
jbe
shlb
xchg
jo
jmp
and
push
or
pushf
sub
or
dec
addl
das
fnstsw
idivb
sbb
inc
jbe
cmpl
jle
sbb
ljmp
daa
cmp
jne
mov
inc
mov
mov
push
in
insb
pop
testl
sbb
xchg
sub
add
cmp
jne
push
pop
mov
mov
and
sbb
insl
fcoml
pop
pop
pop
dec
mov
xchg
cmpsb
out
iret
xor
push
jmp
sbb
out
jg
idiv
rcrl
stc
add
mov
inc
cmp
jl
add
sbb
imul
jmp
lods
stos
cmp
push
idivl
inc
push
sub
lods
lret
fldcw
or
sbb
pop
popa
jl
lahf
sbb
cmp
bndstx
sbb
jmp
pop
sbb
pop
nop
or
add
enter
push
push
and
fidivs
pop
cmp
js
cmpl
push
lcall
jb
add
js
mov
push
push
cwtl
test
mov
rorl
enter
xorb
push
cmp
and
push
in
mov
push
xor
aam
mov
leave
jmp
sbb
scas
not
dec
test
data16
push
sarb
push
push
data16
mov
decb
jl
iret
lds
add
push
jnp
xor
scas
mov
cs
mov
or
cltd
xor
popa
pop
ret
enter
sbb
add
out
cltd
js
orl
lods
jae
ja
pusha
sbb
ret
or
in
xor
dec
push
cmp
loope
inc
test
push
out
and
jmp
jl
push
hlt
sub
adc
mov
push
push
adc
in
cmp
add
pop
out
inc
inc
push
add
nop
les
jmp
in
xor
mov
and
fs
lock
call
in
fs
int3
enter
mov
ja
fs
addb
or
nop
and
pushf
mov
and
lods
mov
mov
mov
hlt
inc
sub
or
adc
idivl
push
adc
or
or
and
and
sub
pop
jnp
neg
sbb
pop
add
ret
int3
add
add
stos
sbb
jge
or
sub
add
jae
bound
les
loope
sbb
ss
js
push
mov
out
and
sbb
fs
in
mov
sub
gs
mov
lahf
lods
bound
push
hlt
fistl
lods
aam
or
sub
mov
in
or
test
cmp
and
mov
adc
push
mov
fdivrl
inc
xchg
lea
icebp
xor
jg
inc
pushf
push
add
inc
mov
adc
sti
mov
outsb
xor
and
inc
or
add
or
repnz
jbe
aam
dec
mov
or
testb
adc
mov
aam
dec
fucomi
push
sub
jbe
jmp
push
pop
push
push
push
aas
imull
lcall
imul
mov
or
int3
mov
adc
scas
mov
rorl
inc
int3
xor
and
push
add
dec
fadds
sbb
and
mov
add
and
mov
or
mov
push
pop
pop
cmp
mov
mov
sbb
repz
fs
in
push
outsl
sbb
or
lea
xor
mov
or
inc
sub
dec
ss
add
add
scas
mov
or
or
lcall
adc
push
sbb
dec
mov
add
sbb
lock
ljmp
fcomps
int3
mov
mov
pop
mov
push
pop
scas
test
mov
rcll
dec
shll
pusha
pop
aaa
pop
shll
dec
dec
mov
insl
fstpl
icebp
sbb
adc
pop
adc
in
jmp
adc
jo
jg
adc
shl
test
dec
lcall
pop
out
jno
jo
je
popa
jns
gs
or
outsl
outsb
std
lahf
in
mov
push
xor
xor
and
and
and
daa
inc
dec
dec
push
push
inc
inc
add
add
jbe
pop
jb
jge
out
add
dec
add
add
cs
insb
stc
jg
pop
pop
sbb
outsl
addr16
insl
and
insb
gs
insb
push
outsl
push
out
call
dec
inc
dec
push
push
pop
jae
jae
gs
xor
aaa
popa
je
sti
neg
and
jbe
arpl
push
jbe
jae
add
dec
push
xchg
dec
add
push
add
jb
add
ss
jg
out
push
cmp
cmp
jae
data16
daa
nop
adc
xor
sub
add
or
and
dec
pop
nop
add
add
add
xorl
pop
pushl
cmp
xchg
imul
clc
imul
loopne
repnz
loopne
push
and
add
mov
pop
xorb
jne
add
cmp
fmul
rclb
add
xchg
mov
pop
or
bound
add
push
loopne
pop
inc
pop
xchg
mov
lock
mov
enter
or
sbb
gs
add
je
js
jecxz
fildl
and
jb
popa
mov
push
testb
cs
es
aam
rolb
fldenv
lret
push
pop
add
mov
js
xor
fdivs
jb
daa
xor
pusha
loop
addr16
mov
sub
daa
and
daa
inc
fcmovnb
jb
bound
xor
lock
adc
xchg
add
mov
and
or
jl
xchg
push
jg
call
cmpsl
add
cli
sbb
sti
or
add
dec
jl
call
rcrb
mov
xchg
cwtl
sub
je
xor
in
fldl
pop
xor
into
pop
mov
inc
dec
les
flds
imul
add
cmp
roll
add
je
movsb
add
inc
lcall
shlb
stos
add
sub
inc
sub
adc
sbb
jno
push
les
js
testl
rcrb
xlat
pop
mov
jp
cmp
mov
fistl
cmp
lahf
int3
sub
xchg
mov
adc
cmp
lcall
mov
cmp
add
in
int
xor
mov
sub
add
insb
fxch
xor
test
cmpsb
imul
dec
shll
push
lret
push
cs
push
pop
lcall
je
inc
sub
cmpsb
imul
les
dec
rcl
loop
or
and
xor
lret
push
test
xchg
arpl
cmpb
shrl
mov
push
icebp
int
pop
push
adc
pop
mov
xor
add
add
jno
movsl
frstor
mov
push
dec
adc
mov
pop
aaa
out
and
int
mov
dec
inc
add
xlat
jne
xlat
sbb
rclb
cli
add
fnstenv
out
arpl
pop
cmp
cltd
fldt
pop
inc
sbb
in
pop
xlat
jne
and
lods
pop
fildl
push
daa
sahf
adc
jae
shll
divb
out
or
cli
leave
add
in
dec
shll
xchg
iret
xor
add
xchg
enter
daa
int3
fadds
in
mov
push
int
xor
xor
shll
mov
data16
push
pop
dec
add
sbb
cmpsb
pop
jbe
ljmp
jae
push
imul
dec
shll
or
pop
or
add
dec
shll
adc
cmp
add
insl
mov
xor
adc
pop
mov
pop
lock
add
adc
xchg
jns
ret
mov
lods
fldcw
inc
jp
xor
pop
repnz
add
pop
loopne
aam
xlat
sub
into
lock
ret
mov
dec
xlat
xor
stos
adc
imulb
orb
dec
jp
pop
je
add
xor
shll
push
push
dec
inc
fdivl
dec
sarl
cmp
sub
ret
dec
mov
jo
sbb
cwtl
orl
xorb
add
ret
fwait
or
rol
or
insb
mov
popa
adc
adc
jg
pop
mov
inc
xor
in
or
pusha
adc
add
test
sbb
out
pop
lahf
sbb
aas
add
nop
xor
or
xchg
jne
mov
je
jecxz
adc
loopne
jg
leavew
mov
gs
push
js
adc
shlb
and
lods
shl
ja
lcall
int
int
inc
cmp
call
xor
xchg
adc
adc
mov
stos
mov
inc
inc
outsb
jne
int3
je
arpl
jne
fldt
dec
inc
gs
jbe
gs
mov
mov
xor
jg
call
add
jb
push
or
fisubl
int
je
dec
or
cli
mov
fcoms
sub
add
je
outsb
dec
push
gs
fs
outsl
scas
sub
pop
add
je
push
outsb
adc
gs
outsl
leave
mov
pop
je
jo
imul
dec
cwtl
push
daa
jb
pop
push
inc
and
mov
push
inc
inc
imul
dec
popa
pop
insb
outsl
adc
mov
arpl
xchg
inc
inc
add
fstpl
inc
push
scas
dec
inc
inc
mov
pop
mov
mov
jae
inc
sub
movsl
fisubrs
mov
jae
dec
cmp
pop
jo
roll
mov
cmp
and
sub
mov
js
or
out
filds
push
inc
push
push
stos
pop
or
mov
stos
jge
imul
add
or
sarl
nop
insl
add
xor
sub
push
fstps
fs
fs
aas
xor
sub
outsl
inc
inc
insb
jne
std
push
inc
inc
inc
pop
pop
jge
push
jo
jo
add
mov
cwtl
fistpll
sub
add
push
lods
jge
xchg
push
cmp
call
inc
rorl
call
mov
jb
and
ja
outsl
fs
loopne
push
add
test
add
add
pop
aas
or
jp
dec
insl
jnp
adcl
push
mov
pop
or
insl
bound
jae
xor
or
adcb
imul
jmp
imul
insl
push
jge
push
xchg
sub
jne
sbb
push
jbe
push
jecxz
mov
and
sbb
mov
test
outsl
out
mov
adc
insb
cmc
or
adc
out
outsl
insl
insl
fmuls
cmp
sahf
dec
cmp
mov
sub
daa
cmp
cmp
pushl
adc
fnsave
add
popa
insl
bound
pop
fcomps
lds
xchg
mov
insl
pusha
imul
sbb
sub
dec
or
punpckhwd
ss
inc
push
dec
mov
add
mov
test
push
popa
arpl
mov
jo
mov
inc
dec
test
inc
call
ja
pop
scas
shll
imul
insw
jne
pop
incl
push
arpl
insb
outsb
loope
push
outsl
out
sub
jae
test
xor
ret
insb
cmp
or
jge
cmp
sbb
dec
orb
imul
test
jae
push
nop
outsb
movsl
ret
mov
arpl
lret
push
lret
mov
scas
inc
fwait
popf
lea
adc
andl
arpl
push
clc
ret
jo
repnz
repnz
jns
jecxz
push
xor
dec
popa
jo
fdivl
mov
lods
add
push
ret
insl
push
dec
jle
adc
frstor
fwait
xchg
mov
add
cmc
std
dec
inc
loope
shlb
add
frstor
sbb
or
dec
push
add
daa
fbstp
mov
jo
mov
adc
mov
mov
sbb
or
mov
mov
mov
and
subb
popf
inc
inc
mov
fwait
xor
arpl
cmpb
push
sarl
sbb
inc
inc
cmp
dec
push
cmpsb
in
xchg
pop
addr16
add
adc
and
cwtl
push
dec
jne
stos
add
rcrl
inc
inc
inc
push
adc
pop
and
add
fldenv
add
sub
fdivl
and
jns
addb
rol
xchg
push
int
jo
sub
adc
add
push
inc
sub
pop
je
in
mov
or
adc
cmp
loope
or
jae
insb
pop
inc
dec
add
les
or
sub
negb
adc
cmp
mov
xor
xor
negl
push
xchg
pusha
add
aaa
ret
xchg
movsb
pop
lods
xchg
andb
jae
lock
outsl
js
hlt
daa
hlt
or
idiv
aaa
arpl
add
add
sbb
or
and
sbb
in
aaa
or
or
adc
add
or
adc
pop
sub
or
mov
outsb
or
and
cmp
or
sub
add
push
sbb
in
mov
and
sub
clts
or
adc
pop
out
idiv
adc
adc
adc
add
or
or
sbb
pop
add
add
adc
adc
and
add
xlat
fsubrp
mov
adc
sub
cmp
pop
add
or
mov
adc
push
add
or
aas
sub
mov
adc
or
adc
lret
and
and
xchg
popf
syscall
add
sar
sub
sbb
jle
push
popa
adc
or
jno
lcall
dec
add
or
pop
add
push
adc
add
movlps
add
add
jg
push
or
or
sbb
sub
and
sbb
or
sbb
lsl
add
dec
sub
push
adc
adc
sbb
aas
or
add
mov
add
add
sub
sbb
jg
xor
push
add
cmp
and
add
or
add
iret
add
in
incl
push
or
add
pop
add
add
es
adc
adc
comiss
adc
and
mov
xchg
or
and
add
sub
add
push
or
fwait
out
call
adc
or
add
push
push
comiss
sbb
or
or
fldl
and
sub
or
fucomi
fistpl
or
add
pop
adc
dec
pop
mov
jbe
push
push
or
add
push
lar
and
pop
fildl
or
mov
and
mov
cmp
add
or
fcomi
call
in
push
and
add
or
or
adc
push
or
or
add
and
push
repz
inc
fcmovnu
and
sub
pop
xor
cmp
or
adc
or
lea
adc
bound
adc
mov
xor
inc
sbb
ss
sub
cmp
and
sbb
fistl
fiadds
or
and
test
push
fimuls
lcall
adc
add
or
or
mov
sbb
add
add
movsb
add
push
sbb
push
psraw
or
sbb
lahf
mov
push
adc
add
add
adc
in
fistps
sbb
add
or
push
or
or
pop
add
push
notb
push
inc
dec
pop
adc
sub
xor
inc
push
push
clc
aaa
xor
cmp
add
pop
push
in
imul
fiadds
or
sbb
mov
cvttps2pi
dec
fcmovnbe
fdivs
sbb
push
fdivrs
add
pop
adc
fucomi
pop
notl
push
adc
add
xor
in
or
adc
clc
push
fdivr
lea
inc
ss
cmp
int
dec
in
and
std
adc
push
punpcklbw
or
push
cmp
adc
sbbl
sbb
lods
dec
cmp
add
adc
add
call
mov
push
or
ds
sbb
add
rcrl
add
pop
mov
gs
jmp
push
push
mov
mov
sub
cld
lods
shr
cmp
jne
mov
out
mov
mov
add
push
dec
jg
pop
pop
ret
mov
ja
mov
add
aad
jg
jmp
std
incl
loopne
and
lea
adc
loope
adc
loopne
decl
xor
and
loopne
push
loope
inc
fists
and
push
xchg
cli
push
jg
js
cs
push
gs
shrl
les
out
fbld
loop
inc
loop
mov
xchg
push
and
aam
ljmp
xchg
xor
aas
dec
pop
sub
sub
test
icebp
pop
ja
pop
sbb
jmp
inc
sub
adc
mov
call
jp
xorl
sub
sub
mov
mov
mov
xchg
loopne
inc
adc
sub
dec
aam
and
jns
lds
pop
mov
push
cmpsl
inc
pop
dec
mov
cltd
inc
insl
mov
pushl
xor
call
cltd
inc
aad
lea
mull
or
int3
fildl
lock
inc
pop
call
cmc
icebp
add
das
sbb
jae
push
loopne
mov
xchg
aam
lcall
int3
push
fiaddl
daa
pop
mov
sub
lcall
push
add
imul
jmp
cmp
and
jp
dec
jns
cmp
test
rolb
call
sub
in
sub
pop
aas
push
push
and
out
test
mov
cwtl
jo
incl
mov
jle
imul
mov
loopne
lea
cmp
adc
call
in
mov
add
push
cmc
cmpl
sahf
sbb
aas
jl
test
decl
addl
test
pop
xlat
scas
xchg
adc
mov
lret
adc
sub
mov
out
bound
jl
xchg
fdivl
xor
cmp
ret
or
add
test
jns
jo
inc
mov
rclb
enter
sti
and
gs
sbb
add
fisubrl
mov
iret
xor
lcall
inc
sti
addr16
push
add
daa
mov
jecxz
xchg
mov
outsl
sub
xor
fisubl
xchg
inc
sarl
adc
incb
mov
xchg
ficoms
add
mov
imul
mov
add
push
adc
or
mov
or
call
pop
cmpsb
mov
mov
cmp
push
int3
xor
lds
push
sub
add
incl
lods
stos
xor
outsl
repz
jae
jle
lahf
mov
popa
popf
hlt
lcall
add
sbb
outsb
andb
loopne
xchg
push
and
sub
mov
ljmp
dec
mov
sub
jns
sub
adc
sbb
call
fistps
cmp
add
icebp
sahf
test
mov
adc
push
incl
dec
mov
aas
out
inc
adcl
pop
add
cmp
incl
pushl
or
xchg
push
lock
jg
notl
stc
mov
stos
decl
sub
out
je
sub
inc
stos
in
mov
push
and
sar
lcall
in
repz
fisttps
fidivl
pop
dec
pop
dec
mov
mov
sbb
add
sub
cltd
cmpb
decl
sub
adc
pop
adc
pop
adc
add
push
in
arpl
int3
jo
mov
cmc
add
add
and
sub
lret
nop
cs
add
test
call
sub
sub
lock
call
pop
jno
and
clc
ljmp
jecxz
pop
pop
dec
das
fisubrs
dec
adc
adc
pop
loopne
pushf
fwait
sahf
add
inc
xor
mov
rclb
sar
pop
adc
jo
les
stos
xor
out
in
cmpl
and
push
lret
gs
js
xchg
orl
jmp
outsb
das
test
mov
aad
mov
aam
cmpsl
aad
adc
das
cmpsl
and
pop
xchg
push
jae
subb
clc
dec
mov
adc
pop
pusha
fs
out
rorl
call
je
mov
adc
test
mov
sbb
inc
sub
decl
cmpsb
xor
repnz
arpl
pop
xor
xor
insl
and
in
xchg
jns
call
xor
arpl
into
mov
repnz
lcall
fsts
xchg
arpl
aad
cmp
or
adc
pop
push
sbb
xchg
gs
js
xchg
push
outsb
test
gs
aaa
and
ljmp
dec
ljmp
sbb
mov
sub
test
adc
mov
or
inc
sub
call
dec
icebp
ret
sub
test
cmc
popf
jno
xlat
lods
in
lea
inc
pop
ret
inc
push
fisubs
mov
or
mov
or
mov
pop
add
or
inc
jnp
sub
imul
pop
xchg
das
mov
out
cmp
es
call
adc
adc
pop
out
bound
icebp
cmc
pop
jmp
into
lahf
jns
jp
push
out
in
pop
cmpsl
or
cmp
out
jae
xlat
popa
pop
xchg
cld
lods
lea
dec
rcrb
jecxz
push
iret
mov
push
outsb
out
jae
fs
dec
push
aaa
in
sub
call
xchg
pop
adcl
into
push
jns
test
pop
cmp
out
fldenv
dec
and
decl
or
mov
call
int3
outsl
lcall
lcall
mov
repnz
adc
sub
call
cld
fs
lods
mov
mov
pushf
pushl
xchg
mov
pop
mov
and
jnp
mov
enter
mov
stc
inc
stos
or
push
jne
sbb
cmp
nop
push
jl
cwtl
xchg
mov
or
sarl
push
mov
repnz
ljmp
adc
push
adc
push
mov
stc
pusha
jge
sub
cltd
xor
enter
cmp
inc
call
cld
xchg
jmp
inc
add
dec
and
xor
pop
push
mov
jecxz
cmp
add
fstpl
int
mov
cmp
out
cmp
jo
loope
inc
pop
xor
mov
jae
gs
sub
or
mov
daa
add
sbb
push
or
mov
and
aam
test
pushl
xor
xchg
sub
or
adc
fadd
sahf
jb
and
mov
xchg
mov
call
jmp
fnstcw
test
dec
dec
sbbb
fimull
xorb
sub
inc
rcl
and
fisttpll
push
popf
or
jb
push
push
outsb
xor
xor
sbb
push
mov
jne
dec
dec
mov
cmp
and
sub
ljmp
jp
rorb
adc
clc
icebp
sbb
mov
or
ljmp
inc
stos
xchg
mov
lret
sbbb
push
stos
adc
lcall
movsb
sbb
mov
adc
cmp
jbe
mov
xorl
pop
jle
pop
push
jae
std
jmp
xchg
cmp
movsb
fimuls
push
lcall
lcall
cmpsl
in
push
sar
incl
xchg
push
imul
in
inc
stos
dec
sbb
lds
test
push
outsl
call
subl
xchg
jne
movb
lods
mov
pushl
clc
negb
push
hlt
stos
or
fcmovnbe
cwtl
mov
call
aad
cmp
push
aad
jl
xchg
sbb
adc
adc
lcall
icebp
cmp
gs
xchg
xor
inc
les
stos
pusha
test
cmp
idiv
push
sub
sub
mov
mov
aam
mov
cmp
or
cmp
pusha
aad
pop
push
ret
sbb
pusha
cmpsb
mov
gs
dec
cld
or
sbb
xor
daa
mov
cld
aaa
ss
popa
inc
hlt
sahf
shl
push
les
or
jmp
lahf
dec
pop
lods
inc
dec
inc
mov
lahf
mov
adc
xchg
out
call
popf
incb
mov
aas
cmp
jo
mov
loop
and
cmp
mov
mov
jbe
ljmp
daa
test
mov
scas
rcrl
cli
xor
dec
hlt
lcall
mov
sti
call
daa
mov
movsl
hlt
push
lods
adc
inc
cmc
or
ret
bound
cmpsl
mov
jae
pop
cld
dec
jl
mov
sbb
sub
dec
loopne
add
shll
sti
mov
and
pusha
cmp
or
scas
mov
inc
cwtl
sbb
pop
loop
inc
and
jp
add
adc
dec
das
fstps
cmp
mov
insl
sti
ljmp
lahf
rcrl
inc
add
jmp
clc
es
cmp
decl
rol
dec
or
jnp
jecxz
daa
inc
repnz
jp
mov
fcmovbe
jmp
jb
inc
clc
dec
adc
fdivr
dec
sbb
enter
fscale
dec
data16
jg
enter
add
leave
mov
shrb
out
fwait
adc
dec
pushf
incb
lahf
es
fs
lock
ret
daa
fwait
in
movsl
rcrb
shl
inc
jp
test
push
and
jo
xchg
add
xor
pop
test
ds
decl
pop
or
enter
pop
sbb
pop
push
pop
lret
jg
mov
xor
adc
mov
push
inc
outsl
dec
lahf
fcoms
idiv
fildl
arpl
shrl
daa
mov
adcb
cmp
insb
sub
and
lock
lock
add
xor
mov
add
cli
les
inc
ds
xlat
sub
imul
enter
sub
out
add
movsl
out
daa
inc
adc
mov
sti
dec
subl
dec
mov
fldt
aas
lret
jl
jmp
mov
pop
stc
xor
cmpsl
or
stc
mov
das
repz
push
pop
out
dec
lahf
das
jmp
dec
push
lahf
outsb
fwait
in
hlt
shl
imul
divb
mov
ss
sub
lret
lods
movsl
mov
ja
add
jge
dec
xchg
out
cmpl
movsb
dec
data16
mov
insb
cli
jp
xlat
push
xchg
mov
stc
mov
leave
push
repz
xchg
aam
rep
pop
jle
loopne
cmpsl
fwait
ds
sarl
adc
xchg
pop
or
imul
mull
jns
pop
or
lret
push
loopne
jnp
pushf
push
andb
mov
xlat
and
movsl
mov
inc
daa
pushf
xlat
push
adcb
out
stc
data16
inc
push
dec
lahf
shl
out
cli
xchg
xchg
add
data16
cmpsb
jb
hlt
sub
xor
xchg
outsb
lret
mov
movsb
fsubr
sbbb
lods
test
repz
int
int
test
je
add
fildll
sub
jp
mov
lcall
sub
dec
repz
ja
push
rcr
sahf
mov
sbb
les
push
cs
out
dec
xrelease
push
lret
gs
hlt
or
push
mov
ljmp
mov
dec
ds
daa
lahf
cmp
fnsave
inc
ds
jl
movsl
fistpl
jmp
std
pop
repnz
addr16
pop
cmp
bnd
lahf
mov
fdivrl
popf
xcrypt-ctr
cmpsl
lahf
out
cmp
mov
add
add
mov
outsb
jns
pusha
inc
inc
or
push
insb
or
xchg
mov
fdivs
imul
add
call
push
lahf
int3
iret
repz
dec
mov
cmc
leave
sub
ljmp
or
daa
mov
test
and
repz
xorb
dec
inc
pop
loope
movsb
fs
test
or
aas
jge
push
mov
addr16
sarl
mov
aas
in
mov
xchg
lahf
lret
ds
sarb
movsl
out
add
sub
lret
insl
push
cmc
and
pop
or
scas
pop
cmpsl
mov
pop
push
jecxz,pt
aam
xlat
gs
sbb
push
push
or
xchg
pop
insl
jl
jl
mov
push
hlt
jnp
cmc
mov
push
mov
dec
push
rorl
hlt
sub
ds
popa
out
andl
push
sbb
xchg
lahf
mov
fucom
inc
mov
lahf
mov
xchg
or
lahf
sbb
test
enter
sub
mov
and
mov
and
jmp
cmpsb
jno
mov
fsubs
call
daa
jns
ss
adc
out
sbb
xor
cmc
imul
aam
mov
lea
xor
xor
cld
enter
xchg
cltd
xchg
cli
and
fcom
daa
mov
dec
repnz
dec
bound
les
cld
cmpsb
mov
loopne
cmc
out
fmull
xchg
pop
lahf
ljmp
iret
enter
test
insb
mov
cli
adc
add
or
sahf
aaa
sbb
or
cmp
sub
es
repnz
xchg
dec
jg
test
fadd
or
pop
test
or
cld
mov
pop
jp
push
mov
enter
aam
jmp
hlt
bsr
fs
pop
pop
mov
pusha
mov
mov
push
and
mov
pop
rcrb
in
or
insb
cmp
xor
mov
addr16
stos
rcrl
push
lahf
rclb
cmp
test
andl
xor
movsb
cli
add
fsts
xor
push
dec
lret
enter
sti
push
in
insl
and
cmpsb
cli
hlt
xchg
mov
enter
jmp
mov
xchg
aad
scas
lret
xor
jns
cli
dec
push
inc
add
sahf
push
push
mov
pop
test
and
jg
mov
or
pop
stc
jns
sahf
sub
mov
daa
scas
sahf
fwait
out
fs
dec
pop
jmp
xchg
scas
inc
aas
jb
sub
pop
cmp
call
int3
shrb
mov
popa
testb
shll
pop
sub
mov
pop
sahf
iret
lea
dec
pop
int3
cli
mov
lret
pop
xchg
scas
xlat
aas
movsb
jbe
imull
stos
inc
push
xchg
push
lahf
mov
xor
sub
adc
or
je
fcmove
in
sbb
push
sarl
and
lods
jno,pt
clc
dec
sahf
sub
jge
and
mov
leave
fsts
daa
scas
les
cld
cmp
push
lahf
mov
shlb
iret
int
jbe
sub
mov
mov
call
mov
ss
lods
stc
in
iret
add
ljmp
ds
movsl
in
daa
pop
jge
dec
int
xchg
jge
imul
jl
dec
pop
jmp
loopne
in
insl
cmpsl
scas
fimull
and
push
insl
push
insl
inc
pusha
cmp
or
jnp
xchg
dec
shlb
lods
add
xor
mov
xor
pop
jecxz
sub
imul
daa
lods
testl
lcall
push
lret
cli
mov
xchg
add
lcall
aad
ljmp
adc
sarl
ljmp
arpl
jp
fsubl
int
popa
hlt
sahf
sub
mov
jg
xchg
cmc
sub
jns
sahf
lahf
mov
mov
mov
gs
cmp
jge
dec
insl
sub
push
sub
daa
fldt
sarb
pop
icebp
pop
lods
enter
mov
push
mov
cmpsb
test
data16
dec
lret
xchg
lods
inc
js
xchg
lcall
stc
in
cmp
adc
in
mov
pop
shll
popa
cmpsl
mov
add
scas
mov
cs
call
adc
stos
lods
push
mov
mov
loopne
int3
rolb
sub
cld
mov
dec
imul
addr16
stos
xchg
push
sub
scas
xchg
je
xorl
sub
pop
shll
jge
mov
lods
mov
rcrl
inc
pop
mov
lret
lret
jae
mov
xchg
fmul
bt
stos
cmpsl
mov
dec
push
adc
lods
mov
lods
out
lods
mov
sub
fisttpl
push
jge
or
pop
sahf
cmp
push
cmpsl
stos
in
xlat
daa
mov
sahf
daa
jns
push
outsb
jge
fdivr
push
sub
xchg
jg
cmc
test
sub
xchg
popf
loope
outsl
stos
push
lock
lahf
cld
and
shl
sub
add
or
or
adc
popf
inc
push
and
pop
mov
jns
sahf
ja
mov
mov
in
bnd
fldt
scas
in
repnz
repnz
lret
mov
xchg
jmp
push
shll
cmpsl
test
enter
adc
mov
lcall
sub
imul
xchg
aas
test
mov
lahf
cmpsb
pop
paddw
pop
mov
jne
lcall
rclb
stos
jnp
mov
mov
movsb
sub
or
lahf
xchg
pop
adc
leave
scas
mov
dec
sub
aas
jbe
xchg
xchg
in
daa
pop
daa
cmp
xchg
cmp
stc
in
push
mov
pop
lahf
movsb
sar
and
ja
xchg
dec
lock
and
fninit
lcall
xorb
mov
fisttpl
xor
xor
add
xchg
mov
lock
sub
in
mov
xor
sbb
sub
pop
inc
cmp
insl
cs
rclb
xchg
mov
inc
push
xchg
jns
je
negl
imul
or
jmp
jg
jmp
and
outsl
adc
mov
lret
out
push
icebp
cmpsl
push
ljmp
cmpsl
mov
div
outsb
test
or
pop
mov
jp
hlt
insl
push
repnz
xlat
dec
leave
scas
sahf
lret
leave
xor
cmpsl
pop
jg
xchg
stc
and
and
sub
jmp
push
lcall
in
add
cmpsl
cmpsl
loopne
or
add
loope
add
aam
hlt
jnp
fxtract
jno
sbbb
pop
int
pop
jno
cli
inc
leave
sub
lahf
xchg
out
xchg
push
or
pushf
push
pusha
cmp
and
and
jb
in
outsb
in
xchg
add
jp
fsubl
ret
cmp
mov
dec
inc
lcall
ljmp
aam
lret
repnz
xchg
ret
push
sti
xchg
sub
lods
notb
rcpps
in
cmpsb
cmp
daa
lret
inc
fsub
ret
test
repnz
repz
or
aam
adc
icebp
lahf
scas
insl
xchg
test
and
out
push
cwtl
push
popa
xor
repz
daa
ret
xchg
pop
sbb
push
fistpll
xor
xor
adc
jg
fdivrs
inc
dec
jmp
bound
aas
in
push
sti
les
cmpsb
sbb
inc
push
jb
pop
adcb
inc
sbb
ror
jns
mov
daa
les
sub
mov
mov
xlat
mov
dec
or
bound
xchg
push
xchg
mov
imul
rcll
movsl
sahf
in
out
in
ds
sub
dec
adc
movsb
outsl
cmp
sti
movsb
xchg
fcompl
daa
movsl
mov
dec
imul
sub
dec
xchg
xor
testb
in
xchg
lret
out
jns
les
mov
lods
ds
daa
lea
sbb
xchg
xchg
lcall
insl
pop
sbb
sub
cmp
mov
add
lahf
xchg
xchg
arpl
pop
inc
ds
dec
jl
jp
push
in
cld
nop
push
hlt
fsubs
dec
aad
sarb
adc
xchg
test
mov
and
insb
fstpl
adc
icebp
shl
rcl
icebp
or
sub
sub
xchg
and
fdivrl
push
lcall
and
push
xchg
movsl
je
xchg
fs
daa
leave
cmp
stc
adc
sub
pushf
outsb
in
rcll
ds
jns
fldenv
mov
mov
jle
inc
imul
out
cmp
sub
sub
leave
repnz
push
fldl2e
imul
mov
test
lahf
icebp
xchg
sub
sti
fs
frstor
imul
ds
mov
repz
xchg
sbb
ds
iret
repz
test
mov
mov
inc
inc
or
fildll
or
inc
subb
lods
popa
testl
cmc
jo
mov
mov
push
push
xchg
add
mov
fstps
pop
int
push
iret
lret
jae
xor
inc
dec
fwait
xchg
xchg
xchg
mov
adc
daa
mov
ficomps
adc
adc
jae
cmp
fwait
testb
aaa
dec
loopne
fcmove
fcomi
push
enter
jg
fsubl
pushf
and
cmp
mov
jno
push
xchg
cld
push
ljmp
lahf
mov
sbb
ss
pop
repz
sahf
jge
dec
outsb
hlt
rcll
cmp
addr16
mov
mov
fcompl
jmp
mov
sti
xor
fbstp
inc
jge,pt
imul
cli
in
mov
out
fsub
decl
mov
rclb
cli
pop
inc
push
shll
daa
test
testb
jl
stc
or
xchg
push
js
lahf
test
or
or
mov
iret
and
inc
sub
mov
adc
xchg
push
dec
ret
shrl
add
and
xchg
lahf
out
sahf
aaa
xor
cmpsl
fisubl
xchg
inc
dec
repnz
jg
lahf
and
dec
sti
sub
xchg
div
mov
pop
repnz
mov
push
imul
or
add
mov
or
cltd
notb
push
xor
lahf
xchg
mov
jmp
sub
cmpsl
jge
xchg
dec
sti
add
jo
pop
ja
popf
negb
jg
ret
pop
daa
rcll
or
ljmp
or
daa
aam
imulb
dec
aas
push
jle
fsubrs
sbb
push
sbb
sub
nop
ja
mov
movsb
stos
jge
dec
outsl
sbbb
push
cmp
jbe
mov
lret
jle
push
add
jo
movsl
pushf
jmp
cmp
repnz
mov
test
pop
in
xchg
dec
stc
inc
pusha
loope
ficompl
ds
jns
cmp
repnz
lods
in
pop
or
xor
inc
add
enter
jnp
imul
shrl
xchg
or
jg
dec
dec
scas
jge
je
in
push
dec
js
sahf
lahf
jb
cmpsl
sahf
in
dec
cmp
mov
xchg
pop
outsb
lahf
xchg
out
mov
adc
sbb
push
fistpl
sti
lcall
sub
insb
mov
xchg
in
sub
lahf
js
fs
pop
repnz
mov
add
cmp
mov
push
stc
leave
icebp
mov
loop
bound
lds
dec
xchg
in
adc
repnz
sti
ss
cmc
insb
cmpsl
dec
mov
mov
stc
enter
mov
outsl
lcall
sysenter
cmp
and
push
mov
push
imul
mov
mov
push
cli
in
jne
and
jnp
mov
or
dec
or
sarb
aaa
insb
sti
movsb
imul
adc
xchg
je
xchg
fstpt
jmp
xchg
out
dec
daa
fstl
jl
je,pt
cmp
mov
insl
iret
aad
fbld
mov
inc
mov
sbb
push
int
test
mov
arpl
or
adc
jb
xchg
xchg
in
sub
or
cmpl
dec
movsb
cmp
and
mov
test
sbb
or
in
jo
cmp
fists
mov
mov
cmp
outsb
lahf
jo
iret
pause
out
jg
fidivrs
loope
or
icebp
in
rorl
outsl
lahf
and
jmp
enter
das
testb
call
dec
aaa
push
in
jmp
sub
ljmp
das
and
sti
je
imul
es
repnz
div
fwait
daa
mov
je
jmp
jns
dec
daa
fdiv
aaa
pop
test
jne
xor
nop
and
cvtps2pi
arpl
orl
add
sbb
loop
and
daa
fwait
add
out
stc
mov
mov
sarl
and
fs
or
add
mov
jmp
dec
test
loope
jge
daa
iret
daa
inc
lods
cmpsb
dec
ret
jge
dec
push
and
fdivl
xchg
inc
push
jno
xchg
jmp
fsts
mov
es
test
andb
push
lcall
lret
orb
aad
in
adc
mov
dec
or
enter
jbe
rcrb
mov
mov
ss
jno
and
mov
aas
in
sbb
out
adc
in
stc
je
daa
lcall
push
shlb
inc
push
sub
or
xlat
jbe
pop
xor
hlt
iret
mov
rorl
popf
cmp
cltd
notl
sbb
dec
lcall
sahf
xchg
xchg
imul
or
dec
dec
push
outsl
jmp
jge
setae
pop
in
leave
jge
repz
mov
mov
cs
es
enter
testl
test
fdivl
stos
mov
add
xchg
cs
dec
jae
es
dec
dec
push
xchg
gs
mov
xchg
lahf
fs
lds
outsb
jle
imul
mov
out
push
enter
cwtl
fdivl
push
leave
mov
bound
xor
in
jecxz
dec
notl
bound
lahf
push
sar
adc
inc
cmp
mov
mov
dec
mov
lret
mov
popf
test
je
sti
movsl
incl
and
daa
cwtl
push
enter
jp
add
push
insl
shrb
push
cmp
xor
xor
mov
add
sub
sarl
cwtl
jmp
insb
mov
loopne
mov
ljmp
or
jge
mov
mov
adc
push
ret
mov
jmp
negb
mov
jge
dec
inc
in
movsl
dec
or
or
push
dec
rcll
addr16
dec
push
mov
push
inc
out
push
push
ds
mov
mov
lock
pop
leave
cs
mov
repz
sarl
movsb
daa
ljmp
lcall
pop
or
pop
pop
push
adc
push
or
ss
xlat
ss
stos
jne
fs
lock
imulb
ds
test
sub
test
add
push
cmp
mov
jbe
pop
outsl
lcall
es
jge
dec
dec
mov
pop
ficomps
jp
and
ret
ret
es
bound
push
lret
mov
pushl
add
out
sbb
push
dec
add
push
out
inc
mov
aam
add
ret
push
inc
gs
cltd
shrl
xchg
iret
or
pop
push
jbe
dec
xchg
xchg
xchg
in
push
push
mov
data16
sub
frstor
fisttpll
sub
mov
or
inc
insb
push
mov
bound
cmpsb
mov
les
add
shrb
clc
adc
loop
stc
or
roll
pop
outsl
out
fldcw
enter
jge
icebp
aas
xchg
pop
push
in
push
xchg
adc
sti
dec
xlat
xchg
jnp
sub
mov
sbb
jmp
cmp
lahf
push
push
out
ja
push
ja
insl
aas
pop
lahf
mov
hlt
mov
and
lahf
dec
mov
dec
lods
repnz
mov
xchg
stc
hlt
int
outsl
in
in
aad
push
jmp
repnz
fiadds
stc
inc
clc
fistpll
dec
out
mov
sbb
and
scas
and
add
or
push
cld
insl
or
movsb
adc
std
nop
pop
dec
movsl
add
xchg
ds
xchg
outsl
mov
pop
jge
loopne
out
movsb
gs
insl
ret
imul
pop
fs
xchg
test
lahf
push
mov
fnstenv
lahf
pop
and
inc
fiaddl
xorl
mov
xchg
pop
adc
xchg
dec
xor
lahf
and
cmpsl
xchg
and
or
dec
ret
xor
dec
movsl
aas
cmpsl
jb
ret
dec
lahf
jecxz
adcl
imull
sarl
xchg
mov
sahf
inc
mov
daa
jns
push
cmpl
movsl
in
dec
xchg
out
mov
dec
xchg
jnp
fisubs
les
push
sbb
or
sub
dec
dec
mov
jge
xchg
int3
sti
test
out
jns
cltd
dec
cmp
adc
movsb
out
jns
jns
push
shl
mov
mov
inc
dec
out
roll
and
repz
and
loopne
push
inc
loopne
stos
xchg
add
pusha
pop
sbb
outsl
sbb
sub
sbb
adc
cltd
mov
sbb
push
jg
imul
or
mov
jg
ret
sub
cmp
jns
or
or
cmpsb
mov
shl
mov
cld
jmp
rorl
mov
add
jb
bound
inc
das
mov
clc
lcall
pop
jecxz
mov
jl
inc
add
mov
insl
dec
scas
pusha
sahf
add
pop
cmc
xlat
out
sbb
xchg
dec
cli
movsb
fimuls
js
mov
in
xchg
cltd
xchg
jge
jmp
fs
leave
and
dec
add
mov
jnp
lcall
repz
fisubrl
mov
xchg
inc
call
in
cli
aam
mov
dec
or
xchg
fbstp
scas
stc
ror
mov
xchg
mov
sub
out
imul
push
lcall
xchg
mov
xor
sub
iret
xchg
xchg
xchg
out
push
fisubrs
ljmp
adc
aas
or
add
pop
xchg
push
jg
cltd
pop
into
sub
adc
shlb
sbb
loopne
mov
stos
xchg
mov
add
outsb
test
adcb
imul
outsb
mov
enter
mov
jo
mov
fsts
lods
push
ret
xchg
and
in
xchg
inc
in
mov
and
pop
insl
xor
fstpt
xchg
push
out
je
inc
negb
jmp
out
adc
out
imul
int
dec
lcall
xchg
sti
inc
filds
sbb
or
daa
cltd
lea
hlt
jge
cmp
fnstenv
sti
xor
push
and
aad
rcrl
push
aaa
mov
add
lahf
inc
and
subl
jge
cmp
das
and
insl
fisubl
testl
out
xchg
fbld
xchg
jl
mov
out
repnz
ds
sti
and
testl
lcall
adc
scas
dec
imul
fcompl
push
dec
jnp
adc
mov
sub
mov
or
ljmp
fbld
push
push
cs
or
add
inc
inc
sti
add
or
mov
cmp
xchg
jl
lahf
inc
ds
sub
test
mov
push
push
outsl
jge
and
shrl
pop
insl
jge,pt
jno
xor
fisttpll
divl
rcrl
sahf
mov
mov
lock
inc
inc
sbb
ds
sbb
jecxz
push
cmp
sub
push
push
ljmp
jecxz
pusha
les
ret
sub
sbb
fcmovb
incl
hlt
pop
inc
lock
xorl
dec
or
out
sub
cmp
mov
and
xorl
dec
and
and
push
fisttpll
fdivrl
pop
rcpps
dec
lret
and
addl
mov
pop
movaps
dec
dec
sub
dec
pop
sahf
and
sbb
clts
call
sbb
cmp
dec
shlb
cs
sbb
lret
daa
mov
fbstp
das
pusha
jnp
inc
iret
inc
cwtl
cmp
adc
and
sahf
add
in
cltd
fldt
sub
jp
rolb
xor
push
push
and
ret
imul
jae
or
push
dec
jmp
or
sub
stc
mov
mov
add
mov
adc
mov
xlat
aam
pushf
imul
sub
cs
cmc
cmp
shlb
test
js
pop
jl
repnz
cmp
ljmp
shl
lods
jb
popa
xor
sahf
lret
sub
or
cmp
xchg
sub
adc
scas
push
inc
dec
cmp
jge
imul
add
cli
mov
ds
out
and
mov
rol
clc
inc
lahf
ss
test
pop
clc
ret
fimuls
jge
dec
add
xor
push
call
xchg
gs
jnp
shrb
hlt
dec
daa
lret
out
mov
imul
dec
push
cli
movsb
xchg
sub
cli
in
call
lahf
xor
adc
enter
xchg
repz
add
or
xor
out
sbb
push
aam
sbb
test
fildl
imull
ds
dec
pusha
loopne
xchg
xchg
push
sbb
je
outsl
lret
hlt
sub
cmp
inc
fwait
out
jl
jb
cmp
push
gs
sahf
and
xchg
dec
setno
mov
and
add
stos
or
call
fcmove
cmpsb
push
mov
or
inc
push
and
push
icebp
or
pusha
lret
jl
dec
add
mov
lret
test
lahf
and
mov
inc
andb
or
jb
add
xor
dec
adc
lret
mov
daa
mov
popa
xor
pusha
adc
mov
sbb
cs
mov
mov
push
mov
dec
jb
add
aam
fcoml
pop
sbb
sub
roll
pop
ret
je
mov
add
push
pop
outsb
fists
sbb
ds
pop
stc
xor
mov
out
jge
sbb
rcrb
xlat
sub
in
adc
mov
int3
mov
or
inc
lahf
sahf
sub
outsb
repz
movsl
push
mov
mov
dec
xchg
push
pop
mov
int
int
imul
fs
mov
sub
inc
aad
xchg
stc
je
push
sub
enter
mov
iret
xor
fs
mov
lcall
sub
sbb
enter
lods
push
sub
sub
je
mov
dec
insl
add
cmpsb
stc
cmpsb
mov
mov
dec
jae
mov
dec
adc
in
adc
sbb
jecxz
not
mov
dec
sub
into
lahf
dec
lods
lcall
jb
mov
ds
outsl
sub
sbb
insl
adc
test
out
out
inc
and
mov
xor
inc
mov
stc
call
jle
into
jl
insl
hlt
mov
iret
xor
cmp
inc
xchg
aam
pop
lcall
jno
sbb
cmp
andl
ds
pop
xor
aaa
sarl
mov
dec
movsb
adc
add
xchg
ss
adc
fdivr
lods
xor
in
hlt
shrb
leave
fistpl
nop
adc
sbb
in
bnd
pop
and
mov
cld
adc
mov
cmp
mov
jb,pt
ds
lcall
shl
ljmp
sub
mov
lods
or
cwtl
jmp
test
movsb
jp
enter
inc
cli
and
jge
ret
and
cmp
enter
and
lret
out
and
dec
rorb
cmpsb
stc
out
movsb
daa
xchg
ds
outsl
push
adc
popa
xlat
mov
out
lods
sub
inc
sbb
dec
jle
lahf
mov
cmpsl
inc
sbb
push
sbb
in
hlt
sub
lods
mov
adc
adc
outsb
mov
and
push
ja
fs
xchg
int
insl
xlat
pop
outsl
xchg
pop
lods
adc
inc
cwtl
out
inc
fadd
or
int3
add
movsl
stc
dec
lahf
and
sub
inc
andl
fs
jne,pt
and
dec
xlat
adc
lahf
mov
int3
add
or
lods
lahf
out
stc
movsb
dec
adc
shlb
mov
pop
inc
inc
sahf
inc
cmp
mov
sar
das
subb
imul
lock
xchg
push
test
lods
inc
jge
push
pop
mov
sub
xchg
sbb
inc
dec
mov
scas
dec
jp
repz
dec
inc
nopl
or
rcrb
xchg
pusha
inc
lock
psrld
aad
mov
add
aad
sbb
xchg
ds
jmp
jae
mov
jne
mov
xchg
hlt
jb
cmp
pop
icebp
adc
mov
dec
sahf
xchg
iret
inc
pop
jmp
dec
pop
fwait
pop
cli
in
shrb
pop
xor
and
cmp
xchg
mov
jge
sbb
dec
push
mov
je
push
stc
mov
push
lods
sub
daa
test
push
xchg
addr16
test
aas
mov
xchg
inc
adc
rcll
jge
andl
cmpsl
xchg
ds
rcrl
mov
mov
lret
das
repnz
sbb
clc
jg
mov
or
or
add
pop
mov
shll
pop
or
popa
jge
aad
add
inc
cwtl
xor
iret
xor
dec
lahf
sbb
push
stc
shll
or
sub
imul
push
loope
out
xlat
xlat
or
xchg
xchg
xchg
mov
mov
push
pop
push
fs
sub
cld
cmp
add
adc
xor
mov
shrl
xchg
enter
mov
xlat
inc
xchg
scas
push
and
push
mov
adc
xlat
push
mov
repz
push
jnp
mov
enter
or
aaa
mov
sub
sub
daa
test
bnd
fs
inc
xlat
mov
dec
jb
xor
mov
dec
sahf
and
cltd
stos
aaa
jge
incl
sub
aam
add
sub
rcrb
stos
or
pop
shlb
pop
sub
inc
ds
cmpsl
test
xor
cmp
push
cmp
or
xchg
lret
xor
hlt
sub
dec
xchg
nop
je
pop
cs
add
mov
stos
push
push
scas
jl,pn
iret
xchg
cmp
pop
popf
ds
xchg
jb
push
aam
repz
and
sub
or
xor
or
in
xchg
pop
xchg
or
and
cmp
and
and
test
popf
arpl
and
xchg
xchg
out
mov
cmp
in
mov
push
repnz
cmp
movsl
pop
sbb
adcl
xchg
inc
cmovae
je
repnz
and
hlt
jmp
leave
mov
jle
mov
sbb
int3
sbb
or
adc
sub
jmp
mov
cmpb
sbb
jnp
xchg
das
sahf
test
inc
cmpb
pop
aas
inc
jge
add
mov
push
test
sbb
sbb
mov
call
ret
lods
mov
test
sbb
sbb
pop
repnz
jecxz
aam
adcl
push
inc
mov
jge
adc
mov
xchg
mov
inc
ds
inc
inc
jge
cmpsl
mov
imul
js
sub
ds
data16
add
aam
pop
imul
jmp
ljmp
je
cmpsb
mov
and
outsb
cs
cmpb
jge
inc
adc
pop
inc
mov
cmpsl
inc
nop
inc
lcall
test
add
dec
shl
repz
mov
pop
repnz
xor
mov
test
repnz
and
sbb
lret
iret
nop
nop
cli
incl
push
mov
or
mov
and
rcrl
repnz
xchg
roll
cmc
imul
lret
dec
push
dec
mov
sbb
sbb
xchg
sbb
xchg
sbb
cld
mov
push
daa
lret
xchg
rcrb
add
xchg
nop
dec
xchg
xchg
pop
mov
sub
stos
es
xchg
nop
dec
dec
jge
dec
fnsetpm(287
push
arpl
mov
mov
jg
mov
ljmp
push
add
leave
and
test
or
xchg
pop
sbb
aaa
fiaddl
sub
xchg
xchg
xor
lahf
insl
mov
xchg
inc
in
sahf
dec
jge
dec
repz
repnz
pop
cmpsl
ds
and
add
test
cmp
pop
inc
ljmp
cld
sub
lds
dec
ret
jmp
push
sub
mov
mov
je
mov
mov
cmc
sub
cmpsl
test
or
sub
push
imul
xor
cwtl
cmp
push
sbb
adc
dec
push
dec
call
and
andb
jg
icebp
xorb
loopne
lcall
push
pop
pop
lret
inc
enter
cmp
mov
and
sub
stc
hlt
test
imul
push
test
sbb
sub
sahf
test
jg
mov
jge
jae
and
repnz
sbb
repnz
cmp
movsl
add
and
push
inc
jns
dec
inc
push
or
in
test
dec
lahf
int3
mov
jb
dec
lock
cltd
mov
cs
sarb
mov
xchg
lret
and
mov
pop
sub
negl
insb
xor
add
sub
cld
jg
add
mov
push
test
mov
sbb
cwtl
shl
jmp
and
mov
add
cmpsb
insb
inc
cmp
mov
dec
dec
aad
inc
add
lahf
ss
pop
aas
pop
aad
inc
mov
sahf
pushf
ret
cmc
js
imul
data16
pop
mov
lret
cmpb
mov
in
fs
mov
ljmp
jns
shlb
cmp
call
fs
movsb
xchg
mov
push
lods
cmp
dec
and
pop
fbld
lods
call
adc
imul
inc
out
adc
cld
cmp
aad
mov
adc
ljmp
jno
insb
fs
mov
neg
iret
sbb
pop
xlat
out
orl
push
dec
adc
lret
xchg
test
repnz
fwait
adc
mov
jl
jne
xorl
pop
pop
in
cmpsl
scas
sahf
xchg
cld
cld
outsl
out
push
cmp
mov
push
lahf
imulb
dec
sti
hlt
aad
std
mov
lret
cld
cmp
dec
jns
dec
and
lahf
das
and
jge
cmpsl
mov
in
mov
mov
inc
mov
fdivr
or
sahf
orl
mov
inc
inc
sahf
aaa
pop
mov
xchg
jle
dec
test
xor
inc
or
push
add
mov
daa
jns
cli
movsb
popa
jge
mov
jmp
sbb
aad
leave
xchg
pop
jg
bnd
std
and
jle
adc
push
lcall
add
lahf
mov
xchg
shlb
mov
jmp
jl
dec
arpl
cmpsl
mov
push
ret
push
lahf
xor
add
repz
in
out
push
jle
jmp
out
xlat
sub
mov
xchg
lahf
lret
loop
dec
gs
and
dec
pop
fwait
ja
mov
lock
ret
movsl
pop
mov
cld
cmpsl
in
scas
int3
push
addr16
jmp
imul
aad
ret
push
sti
add
or
cltd
test
ret
dec
fistpl
cmpsl
mov
dec
pop
add
jo
data16
adc
daa
cld
je
fsubl
imul
jb
cmp
cmpsb
addb
imull
sahf
adc
hlt
pop
inc
imul
hlt
xor
fwait
cmp
stos
pop
test
pop
mov
xchg
mov
or
xor
or
pop
cmp
enter
dec
mulb
notl
mov
je
jl
mov
cs
add
nop
ds
mov
cmc
leave
lahf
mov
and
jge
pop
add
xchg
bnd
xchg
daa
mov
testb
repnz
push
xchg
sbb
sbb
test
insl
jge
nop
mov
pop
lahf
ljmp
cmc
imul
movsl
add
adc
insb
jl
cmpsl
cli
pop
adc
loopne
jmp
test
mov
jl
add
sahf
push
loopne
push
pop
pop
mov
stos
movsl
xchg
xchg
xchg
cmpsl
outsl
aad
cmp
mov
pusha
pop
test
cs
mov
movsb
rorl
dec
inc
hlt
shl
or
repnz
inc
jno
mov
aaa
aam
add
bound
cmpsl
mov
call
rorb
mov
and
sbb
xor
cmc
mov
xor
add
jl
in
scas
leave
push
and
mov
fiadds
xchg
int3
mov
out
scas
inc
ds
dec
repz
cmpsl
stc
mov
mov
mov
push
push
je
dec
shrl
jle
xor
fisubl
pop
sub
or
xchg
inc
push
xlat
daa
stc
mov
xchg
scas
xchg
fidivrl
xor
and
in
fs
enter
aam
test
push
push
pop
pop
aaa
mov
stc
arpl
pop
lahf
in
lret
fiaddl
and
insb
lcall
mov
cwtl
pop
jnp
aas
inc
pop
pop
loop
adc
pop
mov
ljmp
and
cmpsb
mov
mov
in
jb
fists
ret
xchg
jl
lret
in
repnz
adc
call
clc
jge
xchg
mov
mov
mov
push
cmp
out
jg
scas
loope
or
out
mov
mov
mov
mov
mov
pop
clc
mov
sub
stos
inc
movsb
fisubs
add
das
inc
xor
add
xchg
ljmp
mov
test
lcall
adc
shll
jmp
mov
push
adc
ljmp
orb
mov
orb
push
adc
adc
cli
jg
mov
incl
push
les
gs
test
cmc
lds
dec
loopne
sbb
mov
mov
ljmp
cmpsl
lret
mov
jne
mov
shl
daa
inc
bound
xchg
nop
incl
dec
xor
push
mov
and
ret
mov
adc
das
push
out
ret
cld
inc
push
out
mov
adc
nop
push
mov
pop
cmp
incl
imul
shrl
adc
push
lods
stos
xlat
scas
inc
push
xchg
enter
call
or
cmpsb
dec
dec
popf
rcrb
lea
lret
push
or
test
push
push
push
sbb
decl
fcmovnu
cwtl
add
leave
lds
inc
push
aad
inc
mov
xchg
pop
in
jge
call
pushl
cmpl
ljmp
das
cmpsb
outsl
orl
ljmp
aad
int3
lahf
shrl
pop
fcomps
mov
inc
call
clc
incl
push
add
shrl
out
ss
pop
adc
sbb
icebp
outsl
lock
xorl
pop
cwtl
cmp
popa
inc
mov
loope
mov
jno
loopne
and
sbb
push
push
cmp
addr16
inc
push
cwtl
lods
das
stos
aam
push
add
addr16
mov
mov
xor
jl
data16
mov
cwtl
mov
dec
enter
mov
lods
out
mov
fcoms
das
int3
loopne
js
les
cmp
add
lret
push
add
fs
mov
les
outsb
incb
push
and
addl
sar
stos
fdivrl
adc
dec
jae
mov
popa
add
jbe
divl
decl
es
and
mov
mov
loopne
loope
loopne
loopne
aad
adc
mov
fdivr
pop
or
cmpb
adc
mov
add
aaa
adc
les
xchg
clc
or
sbbl
xor
or
fbld
add
test
fildl
and
clc
inc
mov
ret
or
decl
test
jmp
xor
into
push
add
ret
idiv
push
mov
inc
or
cmc
loopne
lods
lds
inc
mov
xor
lcall
ja
adc
push
lods
dec
mov
clc
inc
dec
shr
loope
dec
decl
jl
cmpsl
or
mov
push
or
xchg
xor
lret
mov
and
mov
cli
shlb
clc
or
cmp
sbb
add
aaa
call
pop
inc
adc
cmp
lcall
test
repz
test
xor
int
popf
fnstenv
test
jg
lcall
daa
pop
mov
popa
cld
add
scas
mov
mov
sbb
insb
faddl
arpl
cmpl
int3
lcall
fistpll
idiv
fnstsw
sub
pop
mov
aaa
sti
je
xor
call
xchg
adc
out
sub
js
dec
xor
mov
incl
push
push
fs
push
sub
xor
shlb
or
ja
or
xchg
addr16
sub
jns
mov
sub
insb
xchg
xchg
jg
mov
flds
sbb
xor
mov
in
pushf
sbb
decl
je
test
mov
mov
inc
add
rcl
mulps
fildll
out
xor
and
push
shrl
sbb
aaa
cli
fbstp
js
pop
add
sti
mov
sahf
pushl
push
sub
loop
lret
jnp
mov
jecxz
inc
loopne
xor
sbb
jb
dec
rolb
mov
leave
test
rclb
push
fiaddl
push
aam
in
xchg
bnd
call
movsl
mov
les
scas
push
sub
mov
addl
xor
inc
andl
jg
or
call
ja
mov
mov
inc
sbbb
out
decl
dec
adc
rolw
adcl
aas
pushl
mov
jnp
adc
fsubl
jae
and
mov
and
ds
outsl
xchg
jno
sbb
push
in
pop
mov
push
enter
int3
push
imul
jns
sarl
leave
sbb
rorl
pop
jle
nop
enter
mov
daa
ret
jbe
in
int
mov
outsl
sub
mov
inc
sub
mov
dec
push
fwait
or
paddq
inc
push
mov
in
cwtl
iret
sbbl
lea
test
sar
adc
outsl
fwait
movsl
add
sub
push
insl
or
rcll
decl
mov
out
mov
call
adc
outsl
cld
lods
jg
push
rep
xchg
scas
xor
pusha
in
xchg
sahf
aas
in
mov
test
mov
loope
adc
out
out
push
mov
adc
call
stos
mov
les
pop
push
or
orb
cmp
or
mov
bound
add
or
in
sub
movsb
xchg
sub
test
adc
and
hlt
xchg
mov
les
outsb
mov
adc
xor
and
pop
sub
ljmp
hlt
xchg
aam
push
or
ljmpw
xor
or
stos
cmp
outsl
call
mov
addl
and
scas
rorb
loop
jo
ret
cld
lcall
test
sub
sbb
or
xchg
sub
add
mov
ret
sahf
sub
gs
pushl
inc
test
xchg
test
push
js
aas
or
aam
dec
lods
lods
cmp
cltd
mov
pop
sbb
mov
xor
push
dec
mov
mov
cmpsb
orb
adc
xorb
jb
and
dec
mov
loope
dec
or
sub
xor
push
lret
inc
punpckhbw
mov
icebp
jmp
gs
add
and
and
and
jecxz
mov
jge
cmp
xchg
add
out
cli
xchg
sbb
nop
xor
fs
mov
fs
dec
cld
xchg
mov
pop
imul
adc
aas
dec
movsl
incl
inc
cwtl
or
divl
pop
and
pop
sub
pusha
dec
cmc
incl
inc
and
pop
inc
aas
ja
imul
movb
sbb
jg
mov
lcall
loopne
xor
fstpt
lods
lds
cli
int3
iret
jecxz
dec
cld
mov
and
xchg
pmullw
jmp
add
jg
pushl
adc
sub
mov
outsl
cmc
decl
aad
push
aam
movsb
dec
aam
add
rclb
adcl
xchg
incl
sbb
mov
imul
js
mov
lahf
jg
imul
adc
mov
sub
lods
cmp
jecxz
das
icebp
insl
jno
repz
imul
aas
je
add
into
ljmp
ret
fs
push
dec
or
xchg
mov
roll
out
pusha
mov
incl
jmp
cmpsl
xchg
xchg
fmull
dec
sub
sbb
aas
das
lock
inc
popa
pop
das
or
cmp
jo
idiv
ljmp
and
imull
stos
jns
sub
jnp
mov
dec
test
pop
push
push
mov
sub
jp
mov
push
push
sar
mov
and
ds
lret
cmp
jg
pop
clc
ror
mov
hlt
loopne
push
into
mov
jmp
in
sar
inc
insb
mov
loope
pop
jmp
xor
inc
cli
or
mov
loope
mov
lret
xor
xor
test
mov
mov
repz
mov
push
push
ljmp
fbstp
call
mov
les
ret
sbb
xor
dec
sbb
xor
loop
sub
pop
mov
cld
pop
inc
push
xchg
stos
test
jg
fadds
sub
jne
enter
inc
sub
cmp
movsb
pop
iret
push
test
push
push
cmpsl
or
call
sub
sbb
aad
fstl
insb
mov
mov
in
cmova
inc
call
jmp
sbb
out
push
cmp
in
cmpsl
pusha
mov
xchg
addr16
add
cmp
ljmp
mov
lret
xchg
fistpl
in
mov
fxtract
ret
decl
or
mov
sbb
jecxz
stos
nop
icebp
mul
xor
in
popf
push
cwtl
xchg
hlt
notb
xor
test
pop
out
cmp
cli
pushl
lock
mov
xor
jp
jmp
jne
sti
lret
decb
inc
sub
push
xor
pop
xlat
xchg
inc
outsl
popf
hlt
xchg
push
mov
pop
mov
jg
xor
mov
cmp
sub
inc
outsb
aad
add
pop
arpl
decl
jmp
dec
js
xlat
leave
push
pop
sti
lds
in
and
adc
dec
mov
and
lods
mov
pop
inc
stos
add
push
mov
mov
fs
in
xchg
pop
cmc
das
mov
xchg
test
dec
sub
es
fdivrs
add
gs
cmc
lods
loop
push
fs
fidivl
rorl
xchg
push
lahf
sar
sar
dec
shlb
mov
jnp
push
push
or
out
sbb
mov
fbld
xchg
add
outsl
enter
rclb
test
push
pop
pop
pop
sti
test
jmp
subl
popa
popf
or
sub
cmp
mov
aad
in
add
adcb
test
outsl
icebp
jmp
loopne
add
popf
adc
inc
sbbl
pushl
dec
mov
sub
xchg
lret
mov
sub
movnti
sti
xor
pusha
cltd
sbbl
outsl
loope
mov
stc
das
jmp
sbb
clc
shlb
icebp
mov
mov
sub
repnz
xchg
jge
fmull
mov
inc
sahf
push
xchg
inc
leave
cwtl
and
sub
inc
mov
mov
xor
and
xchg
inc
push
or
sub
pop
clc
jg
les
mov
and
xchg
cli
mov
repz
adc
dec
cmp
pushl
adc
and
inc
insb
pop
adc
adc
jl
lods
ljmp
hlt
adc
xor
shrl
cmp
lods
dec
push
lcall
call
jg
xorl
dec
adc
fistl
mov
jle
and
mov
xor
ret
push
sub
inc
mov
mov
mov
xchg
ret
sub
cs
incl
aas
aaa
fisubrl
fisubrl
dec
jb
stos
jmp
pop
icebp
inc
imul
inc
lcall
and
cmp
and
arpl
cmp
mov
mov
fnstsw
fistpl
mov
jge
stos
cmpsb
call
ljmp
xlat
xor
push
jne
mov
cmp
aaa
pop
dec
lock
incl
xchg
jo
mov
lret
cmp
mov
push
push
mov
mov
inc
pop
leave
mov
xsha256
cmpsb
xchg
or
daa
addb
jmp
mov
lahf
xor
data16
insb
jns
mov
mov
jmp
fidivs
sbb
mov
mov
adc
fsub
pushl
or
or
lea
push
stos
ds
movsl
std
push
sbb
mov
pushf
aas
add
mov
mov
inc
arpl
cmp
jno
xor
xchg
and
ljmp
pop
mov
lock
fdiv
test
push
cmc
orb
call
inc
pop
dec
cmp
mov
shll
clc
and
pop
shll
jmp
push
in
lea
push
call
cwtl
cmp
fcmovb
jmp
lea
jg
fnstcw
data16
addb
sub
pop
jp
mov
and
mov
sbb
add
adc
pop
cli
jg
add
lds
lea
inc
pop
xor
test
pop
mov
dec
mov
in
divl
adc
xchg
sub
les
js
fwait
jg
or
add
push
call
cmpl
nop
cs
jg
mov
inc
mov
or
push
into
push
mov
repnz
clc
pop
pop
clc
incl
mov
add
sub
xor
lds
jmp
push
push
lea
jbe
in
jo
imul
xchg
loopne
cs
daa
xor
mov
lods
pop
mov
fcomps
movsb
outsb
jne
or
jl
xor
dec
jg
decl
inc
jne
cmc
sbb
dec
push
subb
sbb
push
fmul
cmp
pop
push
scas
push
ljmp
ljmp
xor
lea
add
lods
adc
jo
adc
jae
jg
aaa
cli
pushl
xchg
sarb
xor
or
pop
test
leave
test
loop
xchg
pop
ss
lcall
inc
sub
mov
push
into
lcall
shrl
ds
test
orl
popa
sar
pop
ljmp
jge
sub
pinsrw
sub
imul
sysenter
dec
push
pop
loope
add
fs
dec
pop
lcall
xor
mov
and
push
shrb
inc
add
dec
add
popf
push
dec
call
mov
cmp
jle
cwtl
in
and
pop
in
cmp
jb
mov
push
loopne
adc
mov
adcl
cld
lods
jp
xor
rcrl
or
xchg
out
data16
ljmp
adc
mulb
push
lahf
sti
sar
xchg
rcll
sub
cmp
mov
jl
or
dec
dec
mov
ret
scas
xchg
clc
mov
xor
adc
dec
inc
lds
pop
arpl
repz
push
push
or
push
sti
xchg
sbbb
xchg
sbb
pop
mov
xchg
dec
mov
inc
push
in
cwtl
add
test
pop
pop
decl
adc
inc
xchg
dec
leave
pop
mov
push
ficoms
mov
test
incl
sub
jnp
loop
imul
xor
decl
or
or
ja
insb
or
push
mov
xorl
cld
jmp
cs
pop
xchg
mov
cld
push
sbb
xchg
leave
sbb
incl
pusha
add
adc
rcll
dec
pop
pop
jp
jbe
sbb
or
lcall
lret
jnp
mov
nop
retw
dec
and
and
dec
mov
pop
sahf
out
shrd
mov
xchg
rolb
pushl
lret
add
cmp
push
aaa
jl
popf
dec
jno
jae
pop
sub
sub
in
jno
push
aam
pop
fsubrl
or
aam
cwtl
xchg
push
and
loope
ljmp
test
pop
shll
mov
aad
shr
lcall
jg
mov
cmc
pop
iret
add
mov
cmp
movsl
sub
mov
into
sub
adc
popa
dec
xor
sysret
mov
fs
popa
push
lcall
inc
inc
ret
mov
gs
shll
or
cmp
jle
mov
sar
ljmp
sub
sbb
mov
in
pop
adc
repz
decl
inc
mov
xor
push
and
lcall
decl
aam
rcrb
dec
adc
stos
xchg
xchg
test
adc
or
fxch
ljmp
pop
jo
ss
lea
movsb
movsb
mov
popa
push
and
adc
call
cmpsb
mov
jae
outsl
mov
mov
ss
das
mov
sar
inc
xchg
lret
cmpsl
add
sub
je
jg
mov
or
push
clc
pusha
xchg
sub
out
sbb
or
sar
ljmp
push
xchg
adc
mov
xchg
push
push
xor
lahf
int3
out
out
imul
icebp
clc
dec
mov
push
mov
sarb
in
inc
or
add
mov
add
test
xor
push
mov
loope
jp
ljmp
pop
shlb
sub
enter
lods
incb
negb
push
lahf
xor
push
xchg
insl
add
call
lods
jae
in
mov
add
sub
dec
pop
xchg
cwtl
push
gs
incl
inc
mov
jmp
and
popf
gs
sbb
cmp
jns
inc
sar
jae
and
mov
clts
dec
or
pusha
and
adc
idiv
jle
xor
imul
inc
and
insl
arpl
jmp
jnp
pop
add
pop
cli
bound
in
nop
call
mov
lret
mov
sbb
shrl
cmp
or
mov
call
add
jle
mov
popf
loopne
cmp
cvtps2pi
call
mov
mov
mov
shr
adc
insl
std
sbb
and
dec
lods
pop
inc
and
lcall
add
pop
adc
adc
rorl
mov
inc
mov
ja
push
ljmp
ret
push
pop
mov
aaa
addl
sbb
jg
inc
mov
std
mov
mov
adcl
mov
fucomip
lret
cli
outsb
cli
jnp
and
sahf
adc
cld
cmp
lcall
daa
lds
pop
jne
sbbl
decl
jo
imul
mov
push
pop
cmp
loope
xlat
stc
xor
out
stos
pop
scas
cmp
cmp
daa
jb
adc
pusha
icebp
lea
pop
sub
sbbb
inc
lods
insl
mov
mov
jmp
adc
out
or
loope
imul
orl
cmp
and
cmp
out
xchg
mov
lcall
xor
sub
push
jmp
or
sbb
clc
test
mov
or
fs
decl
faddl
cmp
pop
fs
int
test
lds
pushl
cmpsb
imul
notl
cmpl
adcl
lds
cli
mov
jg
and
test
push
and
shlb
dec
add
dec
inc
cmp
cli
pop
sbb
lcall
pop
aaa
push
mov
jle
xor
add
or
ret
cmc
and
pop
cli
ljmp
enter
data16
or
push
adc
out
inc
pop
icebp
push
ljmp
std
call
and
test
repz
das
adc
ret
in
push
jmp
call
std
mov
fimuls
repz
mov
pushl
clc
loope
pop
xor
sbb
js
ffree
insl
sub
mov
mov
sbb
pushl
bswap
lds
out
ret
pusha
mov
mov
fsubp
sbbb
das
icebp
pop
pop
xlat
sbb
jae
or
or
aaa
pop
call
bnd
cld
jmp
pop
sbb
jb
sahf
into
insb
js
xor
push
or
xor
aas
imul
inc
pusha
imul
sbb
les
outsl
int3
sbb
incl
in
in
sub
mov
cs
adc
lods
pop
rolb
lcall
mov
push
lret
pop
add
sahf
and
xchg
mov
int
std
ljmp
popf
lea
fs
loop
pop
movsl
jecxz
inc
sub
movsb
test
push
push
dec
push
sbb
inc
push
pop
out
gs
or
test
shll
mov
jmp
icebp
sbb
cmp
xchg
jb
pop
sbb
xchg
push
mov
pop
adc
popf
xchg
fs
test
jo
in
sbb
sub
dec
popa
outsl
adc
fsubrs
pop
mov
mov
add
bound
sbb
xchg
xchg
repnz
jb
jno
ljmp
lock
mov
mov
inc
cmpl
add
and
push
pop
decl
lcall
mov
push
inc
fildll
ljmp
cmpsb
addr16
push
add
inc
mov
add
push
lret
pop
adc
cli
incl
movsl
call
push
dec
xor
popa
cmp
ljmp
testb
data16
clc
dec
aam
jne
test
mov
lcall
hlt
push
in
push
bound
je
je
test
push
xchg
adc
or
stos
xor
stos
push
pop
xor
lods
mov
ret
sub
popf
loop
cmp
cmp
shl
pop
popa
dec
jns
loop
inc
popa
int3
rol
and
inc
in
xchg
xor
lea
call
call
push
or
sub
inc
mov
pushl
mov
push
adc
mov
mov
or
stos
or
dec
push
push
jp
sub
lods
xchg
inc
push
dec
mov
add
cltd
sub
enter
xor
mov
mov
pop
fwait
add
rcl
ret
dec
sbb
cwtl
in
pop
or
pop
stc
push
call
mov
mov
mov
ficompl
xor
aam
je
sahf
shrb
movsl
pushl
jbe
xchg
xchg
xor
dec
into
in
lods
pop
ret
cld
sti
or
mov
in
out
repz
dec
mov
test
fisttps
mov
les
push
mov
jl
add
pop
loop
pop
push
pop
or
and
andb
push
int
inc
icebp
or
std
sarl
test
add
imul
add
fdivr
aas
data16
shl
loopne
mov
xchg
je
sbb
add
pusha
adc
pushf
add
testb
add
sahf
pusha
or
int3
orl
lock
incl
push
cmpb
gs
pop
dec
out
pop
add
inc
and
insb
ret
rcl
stos
sbb
fistpll
std
mov
xor
dec
mov
bound
in
jne
int3
mov
mov
aad
call
fcmovbe
pop
cltd
mov
mov
jb
jno
dec
stos
push
or
inc
push
push
mov
adc
jg
push
xchg
adc
cmp
mov
sbb
mov
ds
popf
pop
dec
incl
fldl
xchg
addb
mov
test
pop
push
shrb
cmp
mov
stos
or
sbb
scas
out
xchg
jno
test
mov
sub
in
pop
jb
or
xchg
and
imul
xchg
es
insl
sbbb
aam
jnp
daa
xchg
sub
mov
mov
mov
mov
lcall
out
sub
push
fdivrs
xor
jge
inc
and
sub
cmp
das
push
pusha
into
ljmp
sbb
and
outsb
pop
icebp
decl
cmp
cmpsl
jmp
sub
cltd
or
pop
or
in
fucomip
mov
jns
push
mov
mov
xchg
decb
xchg
lds
add
inc
rorb
add
bound
testb
inc
add
mov
daa
mov
jg
mov
je
jns
lea
sub
cmpsb
sbb
or
ljmp
mov
xor
aam
aad
call
std
jg
daa
incl
pop
decl
xchg
mov
ja
les
iret
lret
sub
out
fcoms
mov
sbb
sbb
aaa
jle
mov
pop
ret
std
ljmp
and
and
mov
adc
xor
xor
jmp
incl
stos
cmp
sbb
fstps
xchg
mov
cli
jmp
lcall
sub
pop
dec
pop
adc
in
call
ds
push
or
in
inc
add
pop
lea
incl
sub
push
dec
roll
adc
sbb
push
jecxz
lret
push
jl
xchg
ret
adc
mov
jle
pop
push
and
fs
gs
mov
cld
decl
cli
jg
mov
mov
push
test
add
mov
adc
out
cmp
add
sub
jae
push
loop
mov
out
call
push
mov
add
fmull
mov
or
sub
push
mov
xchg
jecxz
das
push
pop
mov
sub
nop
mov
pop
push
inc
jmp
out
mov
sub
outsb
stos
enter
sbb
shrb
ljmp
test
rcrl
adc
and
mov
cmp
call
mov
aas
mov
pop
shr
aad
outsl
fdivrp
lea
xorb
ret
pop
add
rorb
incl
aaa
mov
sbb
or
xchg
insb
es
mov
jb
decl
aaa
lods
add
cmp
push
mov
sub
gs
call
loope
mov
lcall
jnp
std
pop
clc
mov
mov
dec
sbb
adc
fisubs
movb
ffreep
fsub
lock
aad
mov
or
mov
push
stos
icebp
mov
push
adc
lret
sbb
mov
sbb
pop
mov
aas
inc
mov
mov
push
and
incl
push
mov
loope
push
mov
lahf
xchg
dec
cmp
jg
mov
lret
dec
scas
xor
rcl
and
jae
xor
sbb
push
pop
push
jl
cmc
test
pop
sarl
add
push
clc
inc
das
movsb
mov
or
lods
sbb
insb
pushl
popf
jbe
ret
push
add
pop
pop
adc
jmp
dec
and
inc
push
adc
add
mov
adc
cmp
add
arpl
out
stc
mov
call
jg
sti
mov
cli
inc
loopne
cwtl
or
push
daa
or
decl
aas
inc
xor
sub
and
stos
add
pop
call
incl
pop
clc
add
sub
cmc
adc
xchg
mov
dec
in
lock
adc
jecxz
mov
mov
clc
icebp
decl
inc
xchg
sbb
cli
mov
mov
stos
xchg
push
add
ljmp
sbbb
aam
fcoms
mov
aam
xchg
fsubr
clc
push
adc
loopne
jp
decl
sbb
arpl
jecxz
rcr
or
pop
int
mov
mov
pop
clc
push
push
inc
xor
popa
sub
inc
mov
inc
sbb
sbb
addr16
les
addb
in
and
pop
cmp
pop
push
push
ja
clc
jne
inc
push
mov
xchg
sbb
adc
das
add
fisubrl
das
cmc
call
mov
and
sbbb
sbb
jecxz
mov
sub
push
incl
sbbb
jb
loope
js
xor
or
mov
mov
mov
imul
cmpsl
dec
xor
jno
jg
jmp
sahf
sub
push
lahf
out
add
push
cmp
mov
mov
push
inc
push
xchg
adc
sub
shlb
icebp
add
call
jg
test
mov
sbb
xchg
ret
add
push
inc
rclb
aam
cmc
call
inc
push
push
cmp
sub
jg
add
movsb
lcall
das
sbb
imul
or
ds
jecxz
dec
xchg
icebp
in
jg
lcall
mov
repnz
dec
ret
and
loope
test
push
xchg
inc
decb
mov
mov
push
test
xor
lods
icebp
aaa
push
hlt
call
cli
jl
mov
pushf
stos
ds
push
mov
ret
insl
pop
call
cmp
xor
mov
lret
adc
mov
push
pop
jl
rorb
call
sbb
scas
sbb
mov
movsl
js
push
addr16
ljmp
adc
lret
or
jmp
shrb
test
arpl
fs
jg
call
pusha
dec
mov
scas
sub
adc
lds
dec
movsl
mov
pushl
cli
sub
loopne
and
lock
mov
call
pop
jb
scas
loop
call
and
pop
lea
sbb
push
es
jbe
movsb
inc
hlt
cs
and
fs
repz
ljmp
sbb
add
and
lcall
inc
scas
fstp
cli
push
pop
xchg
cmp
idivb
loop
repnz
frstor
incl
stos
inc
pop
or
aam
sbb
xor
inc
xor
movsl
adc
imul
sbb
add
lea
inc
or
sub
jne
test
fsub
decl
test
dec
xorl
enter
movaps
add
mov
mov
ret
mov
daa
lods
or
std
push
mov
enter
xlat
pop
jge
mov
ljmp
in
faddl
lret
bnd
cmp
xchg
xor
test
scas
repnz
call
push
cs
mov
lret
inc
outsl
or
test
stc
cmpsb
lea
cmp
cli
pusha
rcll
pop
adc
add
lcall
shrb
mov
push
movsl
xchg
add
test
pop
stos
call
jl
mov
pusha
incl
adc
leave
push
or
mov
add
push
ret
imul
incl
movsb
iret
ss
mov
cmpb
ret
or
test
call
xor
pop
fbstp
xor
ja
cmp
sub
pushl
repnz
rorb
add
sub
cmp
mov
incl
and
pop
mov
fcomip
int3
push
xor
icebp
rolb
mov
pop
nop
sbb
xchg
and
in
add
xor
cli
decl
and
xor
ret
cltd
lret
xor
out
cs
xor
sub
sbb
fistps
xor
push
push
jl
mov
ljmp
mov
lcall
ficoml
pop
xchg
xchg
scas
clc
int
mov
adc
jns
vshufpd
hlt
lcall
pop
incl
inc
cmp
mov
das
push
and
incl
or
add
sbb
lahf
cmp
icebp
test
and
movsl
decl
pop
lea
cmpsb
hlt
xor
sub
add
inc
nop
and
add
cvtps2pd
addr16
mov
cmp
inc
jo
loope
xor
cmp
adc
std
ret
pop
decl
mov
inc
add
lea
daa
std
data16
pop
mov
lcall
mov
imul
sbb
sub
call
pop
clc
movsb
push
cmp
insb
adc
adc
movsl
ret
xlat
loop
or
lcall
leave
sbb
enter
dec
jnp
fsubrs
pop
popl
xchg
mov
mov
dec
daa
call
outsl
and
bound
and
sub
mov
mov
mov
andb
xor
adc
out
dec
call
or
add
ret
or
int
dec
mov
data16
mov
cmp
xor
mov
movsb
or
aad
push
popa
pop
adc
xchg
test
and
imul
das
cmc
jg
nop
mov
push
pusha
test
jl
fwait
push
daa
push
xor
jge
xchg
testl
or
lea
xor
pusha
add
aam
ljmp
mov
and
inc
or
les
rolb
mov
lock
cmc
jmp
insb
fdivs
sbb
rolb
ljmp
out
mov
mov
rclb
adc
aad
rcll
out
pusha
enter
mov
push
and
test
push
add
inc
add
dec
sbb
add
dec
xchg
and
cmpb
loopne
fbld
inc
sub
das
adcl
nop
dec
nop
adc
and
sar
add
add
push
lock
pusha
mov
inc
add
mov
add
mov
dec
loopne
rclb
inc
xor
inc
rorb
push
dec
js
dec
cs
imul
and
out
outsl
dec
or
add
add
es
or
loopne
dec
shll
das
lret
sub
subb
sub
jb
sahf
inc
pusha
stc
orl
mov
inc
sbbl
mov
nop
rcl
xchg
xor
mov
adc
mov
imul
rclb
in
fs
dec
or
leave
xchg
or
adc
cmp
sub
push
leave
leave
and
cmpsb
adc
in
add
nop
xchg
or
adc
scas
jns
sub
addr16
fisubrs
add
sub
and
enter
mov
test
xchg
daa
lret
sub
or
imul
jb
fcomps
and
xor
jmp
leave
leave
xchg
xchg
or
jns
in
pop
and
dec
push
cmp
jns
or
leave
leave
xchg
xchg
pop
clc
aam
mov
and
or
andl
or
pusha
or
daa
push
and
sbb
jb
xor
daa
addl
leave
cmp
xchg
or
or
sub
sbb
pop
push
xor
or
xor
leave
leave
cmp
je
jae
dec
push
or
ja
leave
xchg
movsl
sbb
xor
rorb
xor
xchg
xor
cmpsl
daa
daa
inc
sahf
inc
or
dec
mov
mov
enter
daa
daa
scas
orb
enter
fimull
sahf
pushf
aad
ss
or
outsb
push
je
in
in
sbb
cmc
enter
or
mov
in
adc
adc
and
jb
adc
enter
jb
sbb
pushf
or
out
xor
daa
iret
push
je
pop
xor
movsb
sbb
xchg
xchg
pop
cmp
push
xchg
inc
cs
mov
enter
out
jne
cmp
movsb
mov
stos
push
and
cmp
repnz
cmp
and
jns
dec
push
cmp
push
je
leave
xchg
xchg
hlt
movsl
dec
cmp
in
fdiv
push
test
daa
daa
clc
lds
mov
repz
jge
daa
dec
dec
in
je
cld
in
enter
dec
sti
cmp
cmp
movq
hlt
pop
out
pop
ret
dec
dec
stos
pop
outsb
push
cmp
addl
nop
inc
dec
addb
dec
push
cmp
or
push
mov
add
add
and
dec
icebp
or
enter
adc
lcall
sub
nop
xchg
xchg
daa
popa
add
sub
cmp
fs
or
adc
xor
pushf
cmp
adc
xchg
sbb
inc
and
xchg
xchg
xchg
adc
sbbl
cmp
xchg
daa
movsb
adc
fs
xchg
daa
daa
pushf
dec
mov
adc
test
and
inc
sahf
mov
js
enter
popf
icebp
add
leave
leave
xchg
sub
inc
sbb
in
adc
xchg
adc
adc
enter
xchg
in
leave
and
cs
dec
pop
jp
jns
repnz
adc
or
sub
dec
dec
push
or
pushf
cmp
nop
adc
xor
sbbl
nop
jnp
inc
sub
sbb
mov
sub
sub
in
nop
xchg
pop
into
push
test
push
dec
sahf
push
pop
ficoms
add
mov
fs
push
in
leave
nop
pop
out
test
mov
xchg
push
and
xchg
incl
lcall
mov
sbb
lods
repnz
push
fldt
push
ret
lcall
mov
int
cmp
jbe
inc
add
xchg
loopne
adc
jns
jmp
decl
fcoms
jnp
jbe
fdivs
inc
in
push
enter
lods
and
sbb
incl
cmp
loop
sub
lods
insb
das
pop
cmpsl
in
fcompl
inc
add
gs
mov
gs
rcrl
cwtl
lds
in
ret
fwait
mov
lcall
dec
out
dec
stos
push
push
shll
dec
sub
jo
push
xchg
mov
adc
inc
rorl
inc
push
jg
mov
cmp
pop
cwtl
mov
push
cmpsl
out
fidivl
movsl
sub
lcall
mov
lock
in
lods
xchg
pusha
lods
cmpsl
mov
xchg
or
pop
in
ret
cmp
nop
cmp
xchg
mov
pop
fdivrp
lcall
ss
xor
cmp
push
jb
dec
mov
aad
dec
sbbl
jg
and
add
test
mov
gs
sub
add
lds
decl
mov
lret
pop
dec
push
xor
push
and
roll
dec
mov
xor
xorl
sub
pop
inc
enter
icebp
sbb
or
mov
decl
dec
lret
stos
jle
lret
scas
push
push
pop
jae
inc
movl
push
pop
test
dec
pop
decl
xchg
add
cwtl
xor
mov
and
andl
sub
call
ljmp
ret
xor
clc
lods
lds
mov
mov
ret
add
call
es
pushf
xchg
adc
arpl
jne
xchg
jge
and
push
dec
jno
sar
pop
pop
add
fnsave
and
pop
mov
leave
cmp
xchg
jo
push
push
bound
jno
insb
jbe
sub
test
xor
pop
movsl
into
fidivs
dec
icebp
out
lods
pop
sarb
sub
xor
mov
test
sub
xchg
push
decl
add
stos
data16
hlt
int
or
rolb
push
lcall
incl
or
es
sbb
es
pop
mov
jmp
dec
inc
dec
lds
jne
arpl
xor
mov
pop
adc
xor
rcrl
lock
cld
xor
enter
ret
pop
push
mov
cmp
cmc
and
push
push
sbb
pop
mov
lret
adc
inc
cmpsb
adc
sti
incl
inc
adc
dec
cld
cmp
fisubl
pop
es
sub
mov
push
jg
imul
popf
test
pop
lcall
mov
add
jns
pop
lods
xor
call
popf
fwait
ja
or
int3
dec
icebp
scas
mov
xchg
imul
add
subb
jmp
lea
dec
and
sbb
xor
or
push
sub
jbe
inc
mov
incl
dec
in
mov
shll
push
or
loopne
cmp
push
mov
decl
je
adc
push
cmpl
out
cmpsb
dec
add
cmpsl
dec
mov
dec
mov
rcll
mov
adc
xor
ret
les
mov
inc
xor
xlat
push
adc
hlt
mov
xor
adc
cmp
mov
and
out
icebp
fiadds
mov
int
rcr
stc
insl
mov
pushl
pushl
repnz
sbb
das
pop
push
pop
loope
or
popf
sub
adc
inc
cld
jmp
ljmp
cld
jp
sti
iret
das
xlat
cmp
xor
pushl
in
int3
push
fidivrl
jecxz
mov
sar
jge
arpl
cmp
pop
icebp
in
sub
dec
jmp
mov
mov
xchg
aad
mov
dec
lret
iret
sub
mov
inc
pop
pop
jne
jnp
jmp
repz
jge
loopne
mov
popa
fwait
pop
mov
sti
lock
jnp
jo
mov
cmp
xchg
sub
mov
pop
mov
pushl
adc
rorb
xor
rcl
mov
imul
notl
cmp
push
fs
popa
mov
bound
fsub
mov
cmpsl
xor
fiaddl
ljmp
out
mov
push
mov
outsl
jge
rorb
in
xchg
adc
fisttpll
jo
pop
fcomp
cmc
movsb
jbe
out
imul
mov
inc
loop
cmpsb
ljmp
pop
js
mov
cmp
stc
aas
cmpsb
cmp
filds
jnp
jne
adc
jmp
into
jo
fstpl
dec
adc
test
lcall
outsl
pop
jl
cmc
rorl
cmp
mov
mov
incl
test
adc
cld
das
push
comiss
dec
or
mov
iret
js
sar
call
adc
mov
mov
shrl
or
mov
cmpsb
jns
call
push
mov
push
jne
ds
push
movsl
arpl
bound
outsl
ja
mov
std
mov
xchg
clc
cmp
lcall
pop
or
hlt
popa
jle
imul
repnz
push
imulb
fcompl
stos
aas
test
adc
jmp
stos
out
fidivrs
push
subb
lods
and
jle
jg
or
call
inc
inc
xor
ds
lods
es
sbb
cmp
jae
repz
cld
or
dec
call
clc
cwtl
cwtl
cmpsb
cs
test
out
sarl
aas
sub
ljmp
cmc
dec
and
icebp
jg
xor
mov
ja
xchg
push
cmp
pop
jmp
lcall
cmpsb
movaps
test
cmp
cmp
addr16
ja
mov
fidivrs
mov
decl
xchg
ja
sahf
lock
mov
sahf
mov
push
cs
imul
cmpsl
lcall
in
decl
sbb
cmp
xchg
repnz
ficoml
aam
mov
ficomps
mov
mov
imul
fdivr
add
cwtl
push
loope
negl
fucomp
fsubs
js
sti
pop
mov
push
mov
popf
dec
add
dec
fisubrs
sbb
repnz
sub
mov
cmp
notl
push
xchg
xchg
lahf
lcall
imulb
fdivs
pop
mov
and
aad
out
inc
xchg
lcall
cld
mov
xchg
test
lret
or
test
mov
mov
outsb
dec
cli
not
cmp
mov
xor
pushf
das
aaa
das
push
pop
call
mov
gs
jnp
repnz
jno
in
jmp
cmc
in
insl
fmul
jge
and
shll
or
sub
jnp
enter
ja
enter
repnz
jmp
push
mov
dec
and
popa
daa
lret
das
xchg
in
aam
xchg
into
out
mov
pushl
pop
mov
dec
mov
gs
push
mov
jp
js
fadd
out
add
adc
call
push
mov
cmp
lahf
into
iret
fdivrl
jle
and
or
mov
clc
dec
sbbl
fldt
dec
int3
push
into
das
mov
lret
pop
lcall
out
pop
shll
scas
inc
or
shll
xchg
or
add
jle
jecxz
mov
sarb
dec
jg
mov
xchg
fadds
lods
fmul
and
inc
ljmp
dec
mov
jbe
out
sahf
les
out
test
mov
das
xchg
add
leave
ret
pop
sbbb
mov
pop
clc
imul
jns
lds
mov
test
sarl
xchg
cmpsl
sarl
ljmp
add
scas
int3
mov
pop
sahf
in
xor
inc
push
cs
testl
mov
in
mov
jp
mov
dec
fnstsw
cmp
dec
fdivr
mov
pop
cmpsb
mov
mov
repnz
movsb
xchg
shll
ljmp
imul
outsb
ja
cwtl
xchg
pop
idiv
shll
outsl
jns
out
xchg
xor
sub
test
fdivr
ret
stos
push
push
xchg
ds
js
xchg
aaa
arpl
decl
insb
not
sub
fstl
jno
shll
ja
test
fadds
fstl
dec
daa
xor
stc
aam
lods
imul
dec
sub
pushl
mov
hlt
mov
jae
mov
outsl
mov
pop
out
jg
jg
stos
jg
das
cmp
pop
adc
xchg
pop
cmp
data16
decl
dec
aaa
in
dec
xorb
aas
xchg
fcomip
std
lret
mov
rcrl
mov
or
mov
in
stos
fldenv
and
es
push
aam
outsb
int
fnstenv
sarl
jg
xchg
inc
mov
sbb
std
pop
outsb
adc
ljmp
shrb
xchg
sbb
inc
adc
or
mov
int
clc
jbe
das
and
out
enter
jmp
dec
sub
lret
jne
hlt
scas
fsubrl
std
mov
mov
sub
pushl
fisttpl
mov
xchg
sti
hlt
repz
andb
pushf
aaa
mov
call
inc
xchg
or
mov
outsl
and
jmp
xor
jns
dec
or
push
iret
aad
jne
stos
loop
lret
jecxz
jle
int3
lea
aas
pushl
call
xchg
popf
in
lods
xor
sbb
inc
fs
sbb
xchg
lahf
sub
xlat
ficoms
enter
pop
lock
scas
mov
iret
push
sbb
pop
push
jecxz
data16
sbb
fstl
dec
enter
aas
insb
std
rorl
mov
insb
mov
fisttps
lds
call
fidivrs
popa
xchg
aas
xor
daa
push
dec
mov
scas
jmp
std
test
cld
add
and
fisubs
mov
fldcw
dec
mov
adc
rcll
mov
rol
loope
pushl
push
jne
jbe
ja
cmp
push
lcall
pop
or
inc
icebp
popa
icebp
ljmp
outsl
into
stc
mov
pushl
in
out
imulb
jecxz
ret
lret
sbb
hlt
pop
aam
cltd
imul
dec
call
iret
mov
hlt
jo
bound
in
leave
xchg
mov
sub
pop
mov
ss
mov
shrb
in
jg
xchg
lret
cld
push
lds
dec
popf
mov
out
pop
je
cmc
test
mov
jecxz
call
outsl
std
lods
insl
sub
xchg
stc
arpl
inc
inc
stos
lock
sbb
pusha
enter
dec
cli
pusha
mov
loop
jmp
inc
mov
call
inc
scas
inc
mov
ja
out
cs
push
push
mov
call
push
fwait
mov
fidivrs
outsl
dec
xor
lea
sbb
rol
popf
or
mov
lock
cs
int
je
jle
sar
pop
mov
fistpl
call
gs
aad
ljmp
mov
lea
push
cli
dec
mov
mov
xchg
mov
jle
ja
fdivs
push
jmp
jne
das
add
repz
out
xchg
pop
push
lahf
xor
lock
lcall
jl
jno
mov
fwait
jne
push
adc
icebp
inc
mov
int
out
fstp
mov
lret
lock
push
or
sti
test
xchg
jns
fldcw
jnp
jmp
movsb
je
cmp
xchg
xlat
mov
jg
lods
xchg
enter
test
imul
pop
sub
insb
sbb
sbb
mov
das
faddl
mov
mov
in
outsl
mov
lock
fimull
and
or
in
inc
fnstcw
es
ljmp
jo
jne
cmp
aam
sbb
sar
sub
fldt
incb
call
sar
mul
das
pop
insb
dec
mov
fwait
mov
pop
out
ret
test
outsl
clc
fucomip
movsb
jl
dec
in
and
cmp
mov
ds
mov
out
pop
inc
xlat
lahf
xor
inc
fsubs
call
hlt
clc
aad
adc
xchg
pop
lds
mov
ljmp
adc
loope
lret
lahf
lods
xchg
pop
add
rolb
mov
jg
or
dec
dec
adc
aad
jo
lcall
mov
idivb
outsl
fstpt
mov
out
mov
cltd
das
cmpsl
iret
sub
pushl
jp
rcrb
add
mov
imul
cld
jmp
arpl
movsl
insl
cld
stos
jecxz
or
stos
pushf
mov
arpl
jae
push
fcomps
mov
pop
insb
jg
aas
popf
inc
lods
fnsave
mov
jg
xchg
repz
push
loop
mov
int3
mov
push
cmc
lods
cmp
js
xlat
xchg
dec
ds
xlat
std
fdivr
leave
jae
sahf
lods
scas
mov
sbbb
outsb
inc
ficoms
repnz
das
fildll
mov
loope
mov
inc
cmp
sahf
scas
push
ret
sub
xor
xchg
testb
shlb
pushl
push
aad
loop
mov
loope
sbb
inc
push
out
loop
in
iret
aaa
clc
lcall
dec
js
jmp
xor
mov
loopne
mov
insl
ds
adc
ss
jle
out
mov
push
lcall
out
in
lds
xchg
xchg
mov
inc
jg
loop
aad
fistpll
icebp
jo
inc
mov
jge
mov
test
adc
test
adc
jp
in
or
ss
pop
ljmp
xor
stos
imul
lret
in
pop
ds
andb
addr16
dec
insl
and
add
lock
into
leave
adc
xchg
mov
loopne
stos
push
jmp
mov
jmp
jg
ljmp
mov
out
fistpll
mov
jle
popa
into
loope
iret
hlt
hlt
loop
test
sar
loopne
fimull
rcrl
inc
cmp
jns
les
inc
dec
decb
and
shl
jmp
mov
clts
std
decl
popf
cmp
mov
loope
negb
test
mov
mov
xor
adc
dec
sub
lods
dec
aas
pop
sbb
incl
or
jne
sbb
dec
mov
mov
test
mov
hlt
dec
out
repz
mov
lcall
movsl
lods
inc
push
es
sbbb
mov
arpl
or
mov
pop
push
jae
push
mov
add
adc
pop
loopne
xor
fmull
or
pop
adc
push
cmpsl
and
sbb
test
xor
adc
ret
out
jmp
shrb
ficoms
cmpsl
mov
add
neg
outsl
pushf
xchg
repnz
call
filds
into
add
bnd
jnp
sbb
stc
mov
sar
xlat
dec
push
movsl
nop
sbb
mov
cmp
std
push
mov
xchg
sbb
rcr
push
and
outsl
push
mov
lods
mov
ljmp
andb
pop
xchg
push
icebp
outsb
xchg
xchg
sub
je
mov
push
in
sahf
insb
fwait
aam
mov
adc
cltd
xchg
xchg
je
ljmp
pusha
aad
inc
sbb
lds
push
arpl
hlt
cmp
xor
pushl
and
jl
sub
jne
dec
in
or
daa
pusha
cmp
and
hlt
lods
mov
incl
cmp
scas
fdivrp
adc
pop
pop
daa
popa
lock
mov
pushl
ret
in
mov
movsl
mov
cmp
insb
pop
cmpsl
call
fldcw
imul
js
jmp
jmp
pop
fisubs
cmc
and
lcall
mov
jecxz
fcompl
aam
mov
mov
xchg
xor
pop
sbb
shrl
pushl
adc
popf
stos
jmp
aad
xchg
arpl
xor
inc
lock
push
jg
jmp
into
insb
push
and
cmp
sbb
push
mov
pop
push
mov
xor
push
cmc
jmp
mov
inc
sahf
jg
in
out
inc
cmp
xlat
mov
dec
out
mov
push
aas
jp
jmp
dec
sbb
stc
xchg
add
outsl
jmp
insb
mov
sbb
aas
ljmp
dec
mov
mov
iret
das
pop
mov
sbb
push
pop
dec
mov
mov
jae
ljmp
pop
call
mulb
loop
mov
inc
in
sahf
jle
fistpll
xchg
jp
int
mov
dec
cmp
cmp
pushl
cmc
mov
jmp
and
imul
mov
mov
xchg
push
and
cmp
xchg
ffreep
jns
outsb
fistps
cld
mov
sbb
clc
lods
xor
popa
pop
shlb
jle
mov
or
call
leave
pop
dec
mov
stos
mov
pop
mov
aad
sub
es
imul
push
push
out
pop
jns
enter
repz
adc
js
je
pusha
in
inc
dec
mov
ret
sub
mov
inc
or
imul
dec
mov
stos
je
ficoms
mov
ljmp
dec
mov
ja
pop
out
jl
sahf
lret
lods
mov
aad
test
popa
ljmp
lret
insb
fcmovnb
outsl
cld
or
out
js
out
inc
push
lret
xchg
cld
jg
popf
ss
in
pop
aas
sbb
xchg
mov
lds
and
jl
ljmp
outsl
sub
and
outsl
mul
aad
imul
cmpsl
jne
je
cmc
decl
decl
cmc
xchg
paddsb
leave
les
das
div
sub
jecxz
sub
fstpt
ja
in
subl
adc
xchg
sub
jg
adc
cmp
data16
imul
lcall
jmp
mov
andl
loopne
loope
mov
jecxz
clc
aam
inc
xchg
or
xchg
jns
daa
lcall
idivb
cmc
jge
add
movsl
pop
das
jne
push
xor
pop
iret
sub
mov
mov
sub
lods
pop
imull
dec
aaa
into
xchg
push
xlat
dec
fstpl
pushl
loope
push
leave
adc
xchg
jl
sbb
sar
pop
mov
jg
mov
sti
xor
decl
mov
aad
test
repnz
xchg
jmp
jb
mov
iret
call
ljmp
imul
scas
scas
out
sarb
ljmp
and
or
es
mov
cmc
out
and
inc
mov
cmp
jno
or
ftst
jb
or
mov
data16
mov
mov
mov
std
lcall
test
add
mov
push
scas
sbb
enter
pop
sub
jbe
pop
loop
aaa
cld
dec
hlt
imul
js
fldt
rorb
ja
mov
fnstsw
movsl
aad
push
ucomiss
jmp
ljmp
cmc
ljmp
xchg
int
jmp
out
ffreep
test
ds
mov
repnz
mov
inc
xchg
sti
xchg
cli
xchg
push
dec
sbb
jecxz
lcall
adc
loop
inc
ljmp
int3
mov
lret
cs
jmp
ljmp
mov
popf
aaa
mov
mov
sarl
sbb
or
ljmp
cmp
push
in
mov
xchg
adc
in
mov
ret
data16
call
ja
jle
dec
aas
cld
jp
inc
xlat
mov
out
into
out
sbb
test
mov
xor
pushf
fs
xlat
pop
imul
nop
in
adc
addr16
push
mov
mov
cs
adc
add
pushl
gs
dec
sbb
pop
cwtl
loope
stos
add
sahf
adc
xchg
aas
outsb
cli
add
pop
mov
cli
lods
mov
pop
dec
pop
movsl
adc
ljmp
inc
loope
xor
or
mov
std
ljmp
jp
and
fnstenv
xor
lock
mov
fcoml
mov
pop
movsb
ljmp
pop
xchg
dec
ficoms
dec
jnp
inc
int
aas
xchg
mov
scas
push
aam
stos
jne
aam
mov
cmpsl
fistps
and
ljmp
mov
test
pop
mov
fcmovnu
cmp
jge
or
lcall
inc
jmp
fdivs
fcompl
add
pop
pop
mov
xlat
mov
jmp
out
andl
pop
pop
sub
mov
cld
pop
ja
cltd
out
jbe
stos
or
mov
in
push
lods
mov
popa
adcl
aad
je
push
pop
pop
pop
ljmp
xchg
mov
fidivs
fcos
mov
jle
xlat
in
pushf
ret
insl
pop
mov
jg
mov
inc
pushl
fstpl
addb
std
in
std
cmp
fbstp
int
inc
cli
cmpl
pusha
fildll
cmpsb
cmp
outsl
xor
xor
mov
sbb
sar
pushl
je
bound
in
mov
pop
fdivl
int
sbb
das
hlt
enter
sbb
push
push
pop
xchg
decl
lods
sub
mov
adc
fsts
and
stos
lcall
loop
lahf
dec
push
pop
xchg
xchg
xor
lahf
mov
das
cmc
fisubrs
sub
mov
push
jns
cmp
call
cli
xlat
adc
cmpsb
enter
lea
bound
mov
pushl
fwait
lcall
pop
insb
div
mov
push
dec
ljmp
lock
insb
dec
pop
jp
xor
ja
pop
pop
cmp
rclb
mov
mov
dec
faddp
addr16
in
mov
pop
mov
jae
ljmp
decl
mov
jne
dec
jg
mov
mov
mov
cwtl
xchg
movsb
lcall
ljmp
pusha
mov
sbb
jge
push
mov
movsb
adc
jle
scas
mov
lcall
and
xchg
dec
cs
cltd
es
or
pop
rolb
xchg
imul
clc
dec
cmp
push
pop
jnp
jnp
xorb
xchg
pusha
xchg
cltd
cmpsl
or
test
jg
cltd
push
or
inc
jle
xlat
sti
add
cmp
xor
icebp
ljmp
jns
sub
lret
and
sub
repnz
xorl
or
repnz
mov
icebp
arpl
mov
xchg
or
ret
dec
mov
out
dec
test
push
js
arpl
cld
std
rcrl
decl
js
inc
in
pop
or
mov
in
xchg
pushl
clc
call
ficoml
push
jg
xor
xchg
arpl
jnp
dec
jbe
jle
xchg
decb
adc
sub
repnz
lea
cmpsb
mov
decl
sub
ds
mov
xchg
inc
jg
das
and
mov
jb
lret
pop
idivl
jmp
and
loope
pop
cmp
mov
dec
pop
push
mov
loop
lcall
out
jmp
mov
mov
decl
ret
mov
imul
xchg
dec
subl
decl
out
dec
out
mov
adc
shrl
in
insb
and
sub
cli
adc
aaa
cli
jmp
dec
clc
mov
mov
xchg
jnp
dec
pop
push
pop
das
dec
mov
pushl
ja
push
js
roll
shl
sub
dec
cmp
xor
push
mov
imul
je
cmp
cld
cmc
mov
movsb
or
arpl
out
adc
fwait
xchg
aad
fstps
shlb
jl
lock
or
int3
cmp
cmp
xchg
ret
cmp
mov
mov
dec
imul
pop
mov
jae
cmp
aaa
inc
or
inc
call
fcmovnb
call
in
addr16
es
fwait
insl
out
mov
xchg
cli
fwait
sub
mov
cmpsb
testb
add
dec
pop
push
insb
xor
das
adc
lods
in
test
mov
adc
imul
lock
jge
or
nop
mov
lock
pushl
icebp
inc
scas
sbb
xor
lea
push
dec
test
mov
and
mov
fisttpll
adc
incl
cmp
outsl
insb
cmc
mov
mov
mov
jg
pop
sarl
call
popf
jle
je
xchg
pop
sub
iret
push
and
movsb
fsts
adc
push
mov
enter
gs
sbb
jbe
jge
xor
test
sar
sti
mov
int
rcrb
sbb
in
into
pop
aas
negb
jmp
mov
cmp
cmp
hlt
inc
jg
pusha
dec
xchg
mov
inc
cs
stc
xchg
incb
jg
into
imul
jae
fcoms
jg
inc
dec
leave
incl
bts
jmp
cs
inc
stc
sti
mov
jnp
decl
cld
jmp
mov
cmpsl
addl
fnstcw
arpl
das
pop
pop
cli
in
roll
das
mov
dec
insl
mov
ljmp
loope
add
popa
ficoms
sub
rorb
jl
jmp
mov
push
icebp
out
out
cs
jecxz
sbb
jg
js
and
fldenv
pushf
push
or
lock
out
sahf
xchg
stc
cld
repnz
decl
sub
fs
xor
xor
mov
sbb
mov
mov
pop
pop
inc
xor
fwait
pop
loopne
icebp
pop
repz
fsub
dec
daa
xchg
movsb
sbb
call
jg
insl
push
mov
sbb
js
dec
fisttpll
push
stc
adc
ljmp
std
fcoml
xor
mov
pop
lods
shll
mov
lret
cltd
mov
mov
test
lcall
into
fcoms
out
jnp
and
iret
mov
pushf
sti
fndisi(8087
sbb
xor
jg
cmp
aas
popa
fwait
aad
xchg
mov
adc
movsl
mov
lock
shr
mov
daa
shlb
push
fisttps
cmp
in
cmp
das
std
ljmp
outsb
test
jb
int
out
insl
test
mov
je
cmc
lods
pop
sar
dec
sbbb
inc
xchg
test
scas
roll
cld
cmpsb
xor
mov
cmp
out
fdivrl
icebp
pop
clc
jmp
ja
mov
cmc
push
xchg
in
sbb
sub
js
decb
test
shl
inc
repz
mov
mov
mov
and
jnp,pn
ljmp
ss
sbb
fistpll
mov
cmc
idiv
or
jg
jl
ljmp
adc
adc
xor
cmp
pushl
mov
fsts
ss
lahf
jg
fsubs
mov
lahf
dec
mov
adc
bound
test
mov
mov
out
push
decl
cmpsl
leave
arpl
jbe
notb
fdivl
fistpll
add
lahf
push
in
jmp
gs
mov
mov
fucomip
pop
repz
arpl
daa
sahf
sbb
aam
push
loop
dec
adc
ss
popa
push
shlb
mov
std
xchg
cli
ja
insl
xlat
push
cld
adc
fildll
push
popa
or
scas
xor
xchg
decl
ss
or
mov
idivl
mov
jp
mov
mov
incl
in
jl
test
movsb
sarb
cmp
jmp
pop
outsl
jmp
mov
fisubrl
cmp
jle
mov
adc
or
dec
push
mov
lretw
ja
jg
shlb
cmp
lcall
cmc
inc
and
mov
out
iret
mov
dec
out
xor
and
testl
decl
push
jns
or
in
vphadduwd
lea
fisttpll
ljmp
cmp
cli
test
xor
fst
and
mov
cmpsb
jnp
mov
and
and
repz
in
lcall
xor
in
xchg
sbb
test
dec
adc
rorl
pusha
dec
mov
mov
cli
das
daa
fstps
jle
jmp
in
sub
fucomp
xor
fisubl
movsl
test
fwait
iret
mov
cld
mov
sub
insb
addr16
inc
or
das
hlt
push
cwtl
stos
pop
mov
pop
mov
xchg
imul
mov
fucomip
jle
insl
or
aad
jnp
or
xchg
xchg
out
push
scas
data16
test
add
sub
fistpll
out
cmp
cld
div
xlat
cld
adc
data16
call
fnstenv
out
stc
test
cs
pusha
sub
ret
sub
push
scas
cld
and
hlt
test
mov
mov
jno
loope
int
jns
hlt
lea
gs
aad
inc
das
cli
incb
lcall
repz
adc
mov
hlt
mov
cmp
pop
jge
in
or
jcxz
imul
jmp
movsb
pop
leave
fcmovnb
mov
push
cmp
in
mov
mov
jno
sbb
les
dec
cld
pushl
in
pop
or
outsb
cmpsb
jne
pop
mov
mov
stos
incl
shl
mov
xchg
rcrb
aas
scas
incl
fstl
jbe
jp
mov
popa
iret
movntq
out
cmp
stos
cltd
pop
ljmp
test
cmp
push
cs
lcall
dec
cmp
int3
jns
in
mov
dec
dec
aad
out
ret
mov
scas
out
mov
pop
lods
rcl
mov
cmp
fiadds
jg
cmp
push
cmp
bound
neg
add
mov
adc
or
loopne
fs
sbb
subl
lahf
jo
pop
cmp
dec
std
mov
fwait
mov
push
in
popa
mov
clc
icebp
ljmp
aad
lods
out
in
out
out
xchg
fucomip
jns
dec
pushf
fistpll
rcrl
or
popa
cmp
mov
icebp
imul
xor
pop
cwtl
cmp
push
orl
pushl
sbb
pop
out
jnp
cmp
notl
test
arpl
xchg
xor
mov
mov
lcall
cltd
push
mov
es
loop
xchg
cs
xlat
cwtl
popf
mov
into
adc
call
dec
aaa
fisttps
jb
or
call
inc
ljmp
int
inc
push
sub
inc
sbb
es
and
pop
in
in
dec
lret
cltd
pop
frstor
cmp
lcall
addr16
arpl
outsl
stos
es
mov
mov
jge
fistpll
in
dec
cmpsb
movsl
jg
test
sti
out
mov
cmp
or
and
pop
loop
jle
sbb
cltd
xorb
mov
mov
ljmp
jecxz
sub
ret
imul
mov
mov
sbb
push
cmp
loop
out
call
ret
pop
push
lock
lcall
std
add
decl
imul
notl
daa
or
les
popf
push
sub
fwait
lcall
std
or
inc
inc
jns
imul
arpl
xchg
loop
or
ljmp
cld
inc
inc
fiaddl
lret
ret
iret
cmc
aaa
dec
fsts
lret
cmp
mov
stos
out
out
jmp
call
mov
pop
push
cmp
xchg
push
pop
or
decl
stc
pushf
repz
xchg
stos
aad
or
jns
mov
dec
fstpl
ljmp
stos
aaa
xchg
jbe
pop
mov
clc
shl
daa
xor
mov
neg
xor
sub
filds
decl
cld
inc
repz
add
shl
mov
push
repz
push
ljmp
das
sub
imul
pop
fcomi
jg
pop
mov
xchg
pop
les
daa
getsec
mov
sub
adc
mov
movsl
xchg
and
incl
scas
mov
inc
dec
cmp
decl
push
inc
call
jno
cmp
fistl
jmp
xchg
call
int
popa
add
mov
pushl
in
adc
push
outsl
scas
lcall
jecxz
push
push
int
decl
xchg
xor
mov
out
push
push
ljmp
decl
or
lods
xchg
out
fdivrs
stos
jl
popa
inc
cmp
fisubrl
decl
xchg
in
jne
sub
cmpsl
sbb
das
aad
xor
incl
stos
test
lds
cmp
xor
daa
in
or
fidivl
repnz
std
jmp
lcall
enter
pop
out
lahf
insb
imul
push
xor
gs
jg
incl
lret
in
test
xor
ret
aam
cli
jbe
not
pop
sbb
push
jmp
call
icebp
sarb
xchg
mov
dec
scas
rcr
xchg
mov
xchg
pop
jl
push
xchg
subb
sbb
lods
imul
xchg
lret
mov
addl
mov
inc
call
push
pushf
adc
sahf
sbbb
pushl
sahf
cmc
outsl
push
or
int3
mov
aas
jne
push
sub
shrb
aad
dec
test
pop
sbb
jmp
clc
call
xor
ret
sbb
das
orl
jle
incl
pop
sub
jns
sbb
push
test
xchg
repz
mov
notl
rcll
outsl
inc
repz
fcompl
jp
pop
rcrl
cs
in
imul
sbb
pushl
mov
jecxz
sbb
std
movsb
js
hlt
sub
rcll
ret
cmp
je
push
mov
adc
lcall
xchg
push
or
dec
roll
decl
stos
adc
fldl
mov
jmp
inc
aas
std
sub
mov
or
sbb
gs
incl
out
iret
mov
insb
mov
testb
mov
mov
aam
loope
std
pop
call
sub
test
inc
mov
xor
std
jl
icebp
pop
mov
xchg
jg
xlat
clc
scas
push
sbb
lods
mov
roll
push
and
push
inc
mov
in
mov
shl
aas
cmpsb
jg
mov
lea
decl
mov
push
mov
scas
add
add
rorb
insb
cli
std
into
cmp
shl
ljmp
lcall
js
cmp
xchg
test
mov
dec
lret
sarl
inc
pop
pop
in
loop
sub
fiadds
jne
mov
mov
lods
aas
in
mov
icebp
test
sub
or
push
sub
ss
das
std
jmp
jb
mov
xchg
inc
arpl
pop
sub
mov
mov
test
sti
xlat
jg
mov
fcomp
sti
ret
dec
pop
hlt
gs
incl
jg
fisttps
std
cmpsl
std
fs
arpl
mov
insb
sub
or
pushl
cmp
jae
ss
sti
adc
mov
pop
cld
decl
addr16
in
fldenv
enter
sbb
pop
lods
dec
mov
stc
lcall
lahf
push
js
test
add
fstpt
push
jns
mov
mov
pop
clc
fnsave
call
loopne
xchg
jmp
icebp
mov
sbb
and
sbb
fwait
sbb
cmc
cmpsl
lock
out
out
sbb
cmp
popf
mov
stc
das
fs
lods
mov
jge
cmpsl
das
cs
aam
shrb
imulb
xchg
add
into
cli
fstp
mov
fnstcw
insb
pop
ljmp
jno
dec
sub
pop
push
in
mov
sub
xor
decl
pop
xchg
pusha
ljmp
js
push
sahf
jmp
sbb
stc
sbb
sub
cmp
sbb
push
cmc
cltd
jb
inc
sub
xchg
xchg
in
inc
pop
call
add
pop
out
ljmp
pushl
aas
xlat
sbb
sbbl
outsl
add
sub
fucom
fstpt
cmp
test
js
in
push
and
push
ret
pushl
mov
divl
xchg
fildll
shll
mov
por
ds
shl
push
clc
ficompl
sub
daa
fiadds
inc
in
fistl
mov
das
pop
sbb
cmpsb
pop
rorb
std
jg
fcom
mov
hlt
mov
sbb
inc
icebp
ficoms
or
das
xchg
jle
lret
and
movsb
sub
pop
cmp
sub
cli
incl
insb
mov
js
push
xor
jae
in
fcos
in
ljmp
daa
sbb
pop
fucomip
xchg
sbb
mov
inc
mov
fstl
pop
ljmp
lods
loop
xor
fists
add
jle
aam
inc
test
dec
lret
cmpsl
ja
mov
sbb
scas
sub
mov
cmp
out
pop
ret
stos
stc
pop
aas
loope
adc
in
cli
lret
xlat
bound
dec
rcrl
xor
or
xor
xchg
mov
das
insb
inc
data16
inc
mov
pushl
lret
inc
fcomps
mov
mov
push
enter
fucomi
push
xor
shrb
mov
out
xchg
call
cli
pushl
subb
cmp
dec
dec
push
outsl
jge
push
dec
mov
push
mov
pop
sbb
adc
dec
jb
incl
xor
cli
mov
xchg
shlb
rolb
push
in
sbbb
mov
mov
jae
sahf
dec
add
fldenv
mov
cld
insb
xchg
sti
call
xchg
inc
iret
inc
das
push
mov
call
sub
dec
mov
mov
push
outsl
pop
add
call
hlt
int
jmp
cmp
pusha
in
imul
test
sbb
jnp
mov
incb
in
mov
lock
adc
xor
add
cmpsb
pushl
cli
lcall
movsl
inc
pushf
jns
push
repz
dec
in
jg
mov
pushl
mov
sbb
or
xchg
add
test
test
imul
fiaddl
pushl
mov
jb
cwtl
jae
xchg
adc
decl
sub
lods
mov
adc
jae
mov
ja
mov
mov
ljmp
sub
loop
cmpsb
pushf
das
frstor
jb
out
insb
pop
xorl
lcall
sub
xchg
imul
call
loopne
int
mov
out
fs
inc
xchg
incl
xor
mov
and
jmp
inc
sahf
sbb
lcall
ret
push
lds
scas
cmp
in
jmp
xchg
cmp
fldt
negb
ljmp
lock
cmp
call
sub
push
mov
test
andl
inc
rol
or
ljmp
mov
daa
push
int3
add
fwait
mov
push
dec
jbe
icebp
lret
stos
jbe
fnstsw
push
mov
pop
rclb
loope
pop
aaa
cli
pushl
inc
mov
jl
cwtl
pop
dec
add
push
mov
decl
lcall
pop
lea
repz
jg
subb
mov
fsubr
cmp
in
scas
add
clc
rcrb
xchg
push
mov
je
hlt
aas
inc
int
sub
shlb
out
mov
incl
fistpll
jns
clc
mov
outsl
icebp
mov
ret
sub
stos
gs
scas
aas
lcall
fistpll
jp
xchg
inc
stos
cmp
ja
push
test
das
mov
cmp
mov
repnz
lret
mov
popf
imul
inc
mov
sub
cld
dec
jle
mov
cmpsl
pop
cwtl
pop
lcall
jg
cli
xchg
and
data16
pushl
sbb
push
dec
stc
xchg
fisubrs
sti
mov
push
das
jne
mov
incl
mov
imul
ljmp
jns
daa
pop
js
aad
scas
xchg
out
test
xchg
lret
xchg
jnp
jg
in
jae
mov
aam
das
dec
rorl
mov
aaa
incb
in
ss
loopne
std
dec
mov
das
fdivr
push
fwait
jge
mov
aad
dec
sub
jg
push
push
xor
push
cmpb
push
mov
shl
cwtl
jmp
mov
popa
pop
mov
lods
aam
data16
lcall
in
push
popa
cs
cmp
jg
pushl
sub
dec
mov
cmc
inc
xchg
pop
mov
mov
rcrl
mov
mov
in
xchg
mov
lcall
pop
push
jg
push
xlat
gs
jg
out
mov
out
sbb
lcall
outsb
xchg
scas
push
pop
fnop
in
mov
mov
mov
xor
or
ljmp
test
std
mov
pop
dec
mov
ja
call
daa
int3
fimull
push
cmp
jl
mov
loop
push
mov
mov
or
test
lock
fsubr
sti
inc
jns
jbe
rorb
ljmp
movsl
cli
cmp
pop
ds
out
cld
nop
adc
ja
jns
mov
lds
and
push
jg
imul
cwtl
imul
sar
jmp
fnstsw
call
dec
out
sbb
int
mov
incl
or
dec
and
mov
repz
jl
or
fdivl
jmp
sub
xchg
fists
insb
mov
cs
pushl
outsl
out
xor
into
push
xor
into
jmp
jg
rcr
mov
lcall
pop
stos
xor
and
je
popa
xchg
clc
fstpt
test
push
cmp
stos
pop
insb
fld
sub
cld
js
push
sbb
jg
mov
and
xchg
push
mov
mov
pusha
int3
xchg
xor
mov
push
mov
fucomip
mov
ficomps
in
je
xchg
mov
and
jmp
jmp
jb
push
cwtl
orps
mov
xor
gs
pop
add
mov
push
ss
out
jle
cmp
scas
mov
inc
in
outsb
stc
dec
xchg
lock
push
mov
dec
cmpsb
adc
mov
lods
dec
ljmp
dec
lcall
hlt
mov
cmp
and
into
aaa
lea
mov
out
pop
aam
mov
cwtl
and
mov
stc
arpl
sbb
mov
and
call
pop
sbb
movq
movsl
aaa
sub
fistps
cmp
in
addl
jb
pushl
imull
scas
cmc
rorb
in
imul
repz
dec
stos
lahf
and
mov
pop
enter
mov
ds
dec
or
or
cld
jg
jecxz
jnp
dec
sti
sub
xlat
stos
shll
adc
rorl
jne
cli
xor
ljmp
outsl
dec
mov
xchg
xchg
js
into
mul
push
xor
mov
clc
decl
xchg
gs
outsl
scas
pop
imul
loope
leave
loop
call
inc
sti
and
rcll
mull
mov
in
mov
hlt
lcall
push
test
outsb
popa
aam
push
jmp
mov
sub
pop
das
out
inc
decl
mov
add
js
inc
decb
xchg
ljmp
and
dec
xchg
outsb
xchg
and
es
xor
cmp
pop
or
jle
test
jecxz
std
push
nop
fidivs
clc
aaa
incb
mov
pop
jno
out
inc
xchg
push
and
div
mov
pop
call
mov
aas
popf
test
lret
out
ljmp
icebp
fcmovnb
xchg
mov
or
cwtl
or
dec
xchg
push
push
push
mov
pushf
repz
idivl
inc
inc
dec
fimull
mov
pusha
lock
aas
sarb
movsl
and
pushl
sarb
cmp
ret
sub
mov
aaa
je
cld
out
scas
mov
xchg
test
inc
dec
leave
push
aam
cmc
sbb
movsb
fsubrl
movsl
pop
test
pushf
scas
mov
jg
lret
js
push
lock
fidivrs
in
roll
mov
fmuls
mov
popf
ret
dec
mov
aaa
cmp
pop
mov
jmp
push
adc
sti
out
jecxz
inc
adc
dec
mov
mov
jecxz
mov
faddl
sub
loope
adc
rcr
gs
cld
das
std
std
lds
cld
sub
dec
or
bnd
jb
jo
jmp
outsl
cmp
pushf
aam
jp
xorb
sbb
aas
jle
xor
jmp
out
mov
iret
mov
dec
lods
xlat
int
xchg
lahf
insl
clc
mov
xchg
lock
jg
bound
or
mov
sti
cltd
imul
cmc
ljmp
outsb
lahf
loope
stos
push
inc
ljmp
push
and
fdivrp
lcall
mov
outsl
push
imul
lret
inc
out
xor
repz
jg
loope
pop
sbb
outsb
fdivp
mov
aaa
call
lret
cld
pop
dec
clc
call
xor
mov
push
xlat
mov
jmp
je
sar
dec
das
icebp
call
mov
mov
gs
int3
push
pop
mov
push
mov
mov
and
mov
lahf
jg
mov
negl
adc
ljmp
jp
cmpsb
cmp
jle
fsubl
push
aas
in
sbb
jg
pop
sbb
mov
jb
addr16
scas
aad
pop
pop
ljmp
jmp
xor
test
jnp
js
jg
pusha
inc
xchg
je
into
jno
mov
mov
popf
out
decl
pandn
jecxz
fbstp
jl
mov
scas
adcb
iret
stc
call
idiv
arpl
and
push
jbe
rorb
sbb
xchg
jne
loope
test
mov
divb
out
jge
cmp
in
cli
fdivr
les
call
dec
xchg
sub
pop
stos
ret
cmpsl
dec
xchg
mov
mov
aad
push
cmp
test
add
sti
mov
orl
cli
xchg
mov
adc
or
lcall
pop
arpl
pushl
cmpsl
push
in
cmp
push
mov
inc
mov
mov
aam
cmc
xchg
mov
lock
adc
outsl
adc
ljmp
jo
clc
in
in
test
lcall
pop
mov
gs
loopne
std
sbb
les
test
ds
std
or
xor
xor
loop
ljmp
sbbb
cli
cld
pop
popf
push
push
push
aam
call
fbstp
fucomi
out
inc
push
pop
int
push
imull
les
mov
mov
push
in
std
xor
incl
ret
lret
xchg
xlat
scas
mov
mov
je
add
scas
or
pop
and
mov
aad
dec
fscale
jmp
ficoms
mov
adc
pushl
lods
mov
xor
mov
push
cmpsl
int3
pop
xor
push
pop
rolb
cmp
aaa
scas
aaa
mov
rep
arpl
or
push
lods
push
in
dec
stos
jg
and
repz
lret
rolb
scas
js
into
or
mov
xlat
pusha
cmc
push
jmp
mull
inc
clc
adc
out
jno
dec
jg
stc
cld
pop
mov
cmp
push
into
and
inc
out
outsb
std
lods
and
or
rcl
xor
int3
jmp
pushf
popf
mov
mov
fildll
mov
lret
lods
rorl
xchg
ljmp
mov
mov
adc
push
jbe
lods
ja
mull
xchg
call
xchg
push
cmp
out
jne
add
mov
rcr
std
inc
or
xor
ljmp
hlt
std
rolb
ds
rcl
cmc
fwait
jp
filds
aas
lret
out
fwait
mov
bound
add
arpl
ficomps
call
enter
icebp
cmp
pop
mov
sbb
dec
lds
outsl
lock
clc
fistps
aad
ljmp
jbe
das
lock
ljmp
outsb
addl
mul
pop
repnz
.byte
.byte
pop
fmuls
mov
ret
nop
mov
icebp
insb
ljmp
call
movl
pop
sbb
fstpl
and
add
sub
les
ret
jne
add
jmp
jl
iret
lahf
in
adc
mov
mov
sbb
push
mov
ret
pop
pop
testb
push
xor
mov
rorb
add
stos
mov
adc
xchg
jg
out
ficoms
sub
call
or
test
mov
jno
cmp
xor
daa
add
dec
and
push
call
lea
dec
xor
call
sub
mov
pop
jmp
inc
pop
inc
push
inc
lcall
xor
ja
mov
push
outsb
cmp
pop
pop
cld
fidivrs
push
call
add
add
push
sbb
bound
nop
sbb
adc
je
movsb
fisttpl
push
push
jbe
in
sbb
push
cmp
push
push
sbb
jo
enter
mov
fucomi
or
xor
mov
mov
lcall
and
cmp
mov
sbb
or
add
dec
sub
sub
xlat
pop
push
and
adc
popf
imul
jl
mov
add
enter
ss
je
push
push
cmp
push
cmp
jnp
push
push
sbb
mov
sub
lea
xor
sbb
jo
in
jo
jb
in
pop
and
in
add
sub
clc
pushl
mov
fistl
and
je
lock
sahf
lods
mov
fs
lock
or
push
push
and
mov
mov
mov
add
das
dec
push
mov
mov
mov
add
adc
sub
mov
mov
push
push
mov
sti
test
xor
push
sbb
cmp
sbb
aaa
pop
mov
add
sub
mov
cmp
sbb
pop
sub
cltd
fcompl
jp
add
test
sbb
cmp
jne
lea
xchg
fistpll
je
rep
mov
mov
sbb
mov
dec
enter
xchg
xchg
out
add
inc
adc
adc
cmp
dec
sub
mov
sbb
ret
fucomi
pop
mov
push
sbb
sbb
lea
lea
push
pop
or
aad
je
fs
ss
pop
sbb
xor
and
add
leave
sbb
or
in
jbe
add
and
add
sbb
or
inc
xchg
sbb
cld
xor
mov
jle
jge
mov
jmp
decl
cmpsl
je
daa
adc
mov
jmp
lea
lahf
outsb
sbb
sub
lea
sub
pop
nop
and
test
jmp
mov
inc
imul
cmc
jae
xchg
jo
push
lahf
in
jae
jl
dec
add
iret
adcb
push
push
or
push
add
mov
mov
adc
mov
daa
mov
mov
mov
add
dec
jne
sub
fbld
mov
and
jmp
push
into
or
mov
xchg
pop
les
insb
and
loope
inc
test
jbe
shlb
xchg
jo
jmp
and
push
or
pushf
sub
or
dec
addl
das
fnstsw
idivb
sbb
inc
jbe
cmpl
jle
sbb
ljmp
daa
cmp
jne
mov
inc
mov
mov
push
in
insb
pop
testl
sbb
xchg
sub
add
cmp
jne
push
pop
mov
mov
and
sbb
insl
fcoml
pop
pop
pop
dec
mov
xchg
cmpsb
out
iret
xor
push
jmp
sbb
out
jg
idiv
rcrl
stc
add
mov
inc
cmp
jl
add
sbb
imul
jmp
lods
stos
cmp
push
idivl
inc
push
sub
lods
lret
fldcw
or
sbb
pop
popa
jl
lahf
sbb
cmp
bndstx
sbb
jmp
pop
sbb
pop
nop
or
add
enter
push
push
and
fidivs
pop
cmp
js
cmpl
push
lcall
jb
add
js
mov
push
push
cwtl
test
mov
rorl
enter
xorb
push
cmp
and
push
in
mov
push
xor
aam
mov
leave
jmp
sbb
scas
not
dec
test
data16
push
sarb
push
push
data16
mov
decb
jl
iret
lds
add
push
jnp
xor
scas
mov
cs
mov
or
cltd
xor
popa
pop
ret
enter
sbb
add
out
cltd
js
orl
lods
jae
ja
pusha
sbb
ret
or
in
xor
dec
push
cmp
loope
inc
test
push
out
and
jmp
jl
push
hlt
sub
adc
mov
push
push
adc
in
cmp
add
pop
out
inc
inc
push
add
nop
les
jmp
in
xor
mov
and
fs
lock
call
in
fs
int3
enter
mov
ja
fs
addb
or
nop
and
pushf
mov
and
lods
mov
mov
mov
hlt
inc
sub
or
adc
idivl
push
adc
or
or
and
and
sub
pop
jnp
neg
sbb
pop
add
ret
int3
add
add
stos
sbb
jge
or
sub
add
jae
bound
les
loope
sbb
ss
js
push
mov
out
and
sbb
fs
in
mov
sub
gs
mov
lahf
lods
bound
push
hlt
fistl
lods
aam
or
sub
mov
in
or
test
cmp
and
mov
adc
push
mov
fdivrl
inc
xchg
lea
icebp
xor
jg
inc
pushf
push
add
inc
mov
adc
sti
mov
outsb
xor
and
inc
or
add
or
repnz
jbe
aam
dec
mov
or
testb
adc
mov
aam
dec
fucomi
push
sub
jbe
jmp
push
pop
push
push
push
aas
imull
lcall
imul
mov
or
int3
mov
adc
scas
mov
rorl
inc
int3
xor
and
push
add
dec
fadds
sbb
and
mov
add
and
mov
or
mov
push
pop
pop
cmp
mov
mov
sbb
repz
fs
in
push
outsl
sbb
or
lea
xor
mov
or
inc
sub
dec
ss
add
add
scas
mov
or
or
lcall
adc
push
sbb
dec
mov
add
sbb
lock
ljmp
fcomps
int3
mov
mov
pop
mov
push
pop
scas
test
mov
rcll
dec
shll
pusha
pop
aaa
pop
shll
dec
dec
mov
insl
fstpl
icebp
sbb
adc
pop
adc
in
jmp
adc
jo
jg
adc
shl
test
dec
lcall
pop
out
jno
jo
je
popa
jns
gs
or
outsl
outsb
std
lahf
in
mov
push
xor
xor
and
and
and
daa
inc
dec
dec
push
push
inc
inc
add
add
jbe
pop
jb
jge
out
add
dec
add
add
cs
insb
stc
jg
pop
pop
sbb
outsl
addr16
insl
and
insb
gs
insb
push
outsl
push
out
call
dec
inc
dec
push
push
pop
jae
jae
gs
xor
aaa
popa
je
sti
neg
and
jbe
arpl
push
jbe
jae
add
dec
push
xchg
dec
add
push
add
jb
add
ss
jg
out
push
cmp
cmp
jae
data16
daa
nop
adc
xor
sub
add
or
and
dec
pop
nop
add
add
add
xorl
pop
pushl
cmp
xchg
imul
clc
imul
loopne
repnz
loopne
push
and
add
mov
pop
xorb
jne
add
cmp
fmul
rclb
add
xchg
mov
pop
or
bound
add
push
loopne
pop
inc
pop
xchg
mov
lock
mov
enter
or
sbb
gs
add
je
js
jecxz
fildl
and
jb
popa
mov
push
testb
cs
es
aam
rolb
fldenv
lret
push
pop
add
mov
js
xor
fdivs
jb
daa
xor
pusha
loop
addr16
mov
sub
daa
and
daa
inc
fcmovnb
jb
bound
xor
lock
adc
xchg
add
mov
and
or
jl
xchg
push
jg
call
cmpsl
add
cli
sbb
sti
or
add
dec
jl
call
rcrb
mov
xchg
cwtl
sub
je
xor
in
fldl
pop
xor
into
pop
mov
inc
dec
les
flds
imul
add
cmp
roll
add
je
movsb
add
inc
lcall
shlb
stos
add
sub
inc
sub
adc
sbb
jno
push
les
js
testl
rcrb
xlat
pop
mov
jp
cmp
mov
fistl
cmp
lahf
int3
sub
xchg
mov
adc
cmp
lcall
mov
cmp
add
in
int
xor
mov
sub
add
insb
fxch
xor
test
cmpsb
imul
dec
shll
push
lret
push
cs
push
pop
lcall
je
inc
sub
cmpsb
imul
les
dec
rcl
loop
or
and
xor
lret
push
test
xchg
arpl
cmpb
shrl
mov
push
icebp
int
pop
push
adc
pop
mov
xor
add
add
jno
movsl
frstor
mov
push
dec
adc
mov
pop
aaa
out
and
int
mov
dec
inc
add
xlat
jne
xlat
sbb
rclb
cli
add
fnstenv
out
arpl
pop
cmp
cltd
fldt
pop
inc
sbb
in
pop
xlat
jne
and
lods
pop
fildl
push
daa
sahf
adc
jae
shll
divb
out
or
cli
leave
add
in
dec
shll
xchg
iret
xor
add
xchg
enter
daa
int3
fadds
in
mov
push
int
xor
xor
shll
mov
data16
push
pop
dec
add
sbb
cmpsb
pop
jbe
ljmp
jae
push
imul
dec
shll
or
pop
or
add
dec
shll
adc
cmp
add
insl
mov
xor
adc
pop
mov
pop
lock
add
adc
xchg
jns
ret
mov
lods
fldcw
inc
jp
xor
pop
repnz
add
pop
loopne
aam
xlat
sub
into
lock
ret
mov
dec
xlat
xor
stos
adc
imulb
orb
dec
jp
pop
je
add
xor
shll
push
push
dec
inc
fdivl
dec
sarl
cmp
sub
ret
dec
mov
jo
sbb
cwtl
orl
xorb
add
ret
fwait
or
rol
or
insb
mov
popa
adc
adc
jg
pop
mov
inc
xor
in
or
pusha
adc
add
test
sbb
out
pop
lahf
sbb
aas
add
nop
xor
or
xchg
jne
mov
je
jecxz
adc
loopne
jg
leavew
mov
gs
push
js
adc
shlb
and
lods
shl
ja
lcall
int
int
inc
cmp
call
xor
xchg
adc
adc
mov
stos
mov
inc
inc
outsb
jne
int3
je
arpl
jne
fldt
dec
inc
gs
jbe
gs
mov
mov
xor
jg
call
add
jb
push
or
fisubl
int
je
dec
or
cli
mov
fcoms
sub
add
je
outsb
dec
push
gs
fs
outsl
scas
sub
pop
add
je
push
outsb
adc
gs
outsl
leave
mov
pop
je
jo
imul
dec
cwtl
push
daa
jb
pop
push
inc
and
mov
push
inc
inc
imul
dec
popa
pop
insb
outsl
adc
mov
arpl
xchg
inc
inc
add
fstpl
inc
push
scas
dec
inc
inc
mov
pop
mov
mov
jae
inc
sub
movsl
fisubrs
mov
jae
dec
cmp
pop
jo
roll
mov
cmp
and
sub
mov
js
or
out
filds
push
inc
push
push
stos
pop
or
mov
stos
jge
imul
add
or
sarl
nop
insl
add
xor
sub
push
fstps
fs
fs
aas
xor
sub
outsl
inc
inc
insb
jne
std
push
inc
inc
inc
pop
pop
jge
push
jo
jo
add
mov
cwtl
fistpll
sub
add
push
lods
jge
xchg
push
cmp
call
inc
rorl
call
mov
jb
and
ja
outsl
fs
loopne
push
add
test
add
add
pop
aas
or
jp
dec
insl
jnp
adcl
push
mov
pop
or
insl
bound
jae
xor
or
adcb
imul
jmp
imul
insl
push
jge
push
xchg
sub
jne
sbb
push
jbe
push
jecxz
mov
and
sbb
mov
test
outsl
out
mov
adc
insb
cmc
or
adc
out
outsl
insl
insl
fmuls
cmp
sahf
dec
cmp
mov
sub
daa
cmp
cmp
pushl
adc
fnsave
add
popa
insl
bound
pop
fcomps
lds
xchg
mov
insl
pusha
imul
sbb
sub
dec
or
punpckhwd
ss
inc
push
dec
mov
add
mov
test
push
popa
arpl
mov
jo
mov
inc
dec
test
inc
call
ja
pop
scas
shll
imul
insw
jne
pop
incl
push
arpl
insb
outsb
loope
push
outsl
out
sub
jae
test
xor
ret
insb
cmp
or
jge
cmp
sbb
dec
orb
imul
test
jae
push
nop
outsb
movsl
ret
mov
arpl
lret
push
lret
mov
scas
inc
fwait
popf
lea
adc
andl
arpl
push
clc
ret
jo
repnz
repnz
jns
jecxz
push
xor
dec
popa
jo
fdivl
mov
lods
add
push
ret
insl
push
dec
jle
adc
frstor
fwait
xchg
mov
add
cmc
std
dec
inc
loope
shlb
add
frstor
sbb
or
dec
push
add
daa
fbstp
mov
jo
mov
adc
mov
mov
sbb
or
mov
mov
mov
and
subb
popf
inc
inc
mov
fwait
xor
arpl
cmpb
push
sarl
sbb
inc
inc
cmp
dec
push
cmpsb
in
xchg
pop
addr16
add
adc
and
cwtl
push
dec
jne
stos
add
rcrl
inc
inc
inc
push
adc
pop
and
add
fldenv
add
sub
fdivl
and
jns
addb
rol
xchg
push
int
jo
sub
adc
add
push
inc
sub
pop
je
in
mov
or
adc
cmp
loope
or
jae
insb
pop
inc
dec
add
les
or
sub
negb
adc
cmp
mov
xor
xor
negl
push
xchg
pusha
add
aaa
ret
xchg
movsb
pop
lods
xchg
andb
jae
lock
outsl
js
hlt
daa
hlt
or
idiv
aaa
arpl
add
add
sbb
or
and
sbb
in
aaa
or
or
adc
add
or
adc
pop
sub
or
mov
outsb
or
and
cmp
or
sub
add
push
sbb
in
mov
and
sub
clts
or
adc
pop
out
idiv
adc
adc
adc
add
or
or
sbb
pop
add
add
adc
adc
and
add
xlat
fsubrp
mov
adc
sub
cmp
pop
add
or
mov
adc
push
add
or
aas
sub
mov
adc
or
adc
lret
and
and
xchg
popf
syscall
add
sar
sub
sbb
jle
push
popa
adc
or
jno
lcall
dec
add
or
pop
add
push
adc
add
movlps
add
add
jg
push
or
or
sbb
sub
and
sbb
or
sbb
lsl
add
dec
sub
push
adc
adc
sbb
aas
or
add
mov
add
add
sub
sbb
jg
xor
push
add
cmp
and
add
or
add
iret
add
in
incl
push
or
add
pop
add
add
es
adc
adc
comiss
adc
and
mov
xchg
or
and
add
sub
add
push
or
fwait
out
call
adc
or
add
push
push
comiss
sbb
or
or
fldl
and
sub
or
fucomi
fistpl
or
add
pop
adc
dec
pop
mov
jbe
push
push
or
add
push
lar
and
pop
fildl
or
mov
and
mov
cmp
add
or
fcomi
call
in
push
and
add
or
or
adc
push
or
or
add
and
push
repz
inc
fcmovnu
and
sub
pop
xor
cmp
or
adc
or
lea
adc
bound
adc
mov
xor
inc
sbb
ss
sub
cmp
and
sbb
fistl
fiadds
or
and
test
push
fimuls
lcall
adc
add
or
or
mov
sbb
add
add
movsb
add
push
sbb
push
psraw
or
sbb
lahf
mov
push
adc
add
add
adc
in
fistps
sbb
add
or
push
or
or
pop
add
push
notb
push
inc
dec
pop
adc
sub
xor
inc
push
push
clc
aaa
xor
cmp
add
pop
push
in
imul
fiadds
or
sbb
mov
cvttps2pi
dec
fcmovnbe
fdivs
sbb
push
fdivrs
add
pop
adc
fucomi
pop
notl
push
adc
add
xor
in
or
adc
clc
push
fdivr
lea
inc
ss
cmp
int
dec
in
and
std
adc
push
punpcklbw
or
push
cmp
adc
sbbl
sbb
lods
dec
cmp
add
adc
add
call
mov
push
or
ds
sbb
add
rcrl
add
pop
mov
gs
jmp
push
push
mov
mov
sub
cld
lods
shr
cmp
jne
mov
out
mov
mov
add
push
dec
jg
pop
pop
ret
mov
ja
mov
add
aad
jg
jmp
std
incl
loopne
and
lea
adc
loope
adc
loopne
decl
xor
and
loopne
push
loope
inc
fists
and
push
xchg
cli
push
jg
js
cs
push
gs
shrl
les
out
fbld
loop
inc
loop
mov
xchg
push
and
aam
ljmp
xchg
xor
aas
dec
pop
sub
sub
test
icebp
pop
ja
pop
sbb
jmp
inc
sub
adc
mov
call
jp
xorl
sub
sub
mov
mov
mov
xchg
loopne
inc
adc
sub
dec
aam
and
jns
lds
pop
mov
push
cmpsl
inc
pop
dec
mov
cltd
inc
insl
mov
pushl
xor
call
cltd
inc
aad
lea
mull
or
int3
fildl
lock
inc
pop
call
cmc
icebp
add
das
sbb
jae
push
loopne
mov
xchg
aam
lcall
int3
push
fiaddl
daa
pop
mov
sub
lcall
push
add
imul
jmp
cmp
and
jp
dec
jns
cmp
test
rolb
call
sub
in
sub
pop
aas
push
push
and
out
test
mov
cwtl
jo
incl
mov
jle
imul
mov
loopne
lea
cmp
adc
call
in
mov
add
push
cmc
cmpl
sahf
sbb
aas
jl
test
decl
addl
test
pop
xlat
scas
xchg
adc
mov
lret
adc
sub
mov
out
bound
jl
xchg
fdivl
xor
cmp
ret
or
add
test
jns
jo
inc
mov
rclb
enter
sti
and
gs
sbb
add
fisubrl
mov
iret
xor
lcall
inc
sti
addr16
push
add
daa
mov
jecxz
xchg
mov
outsl
sub
xor
fisubl
xchg
inc
sarl
adc
incb
mov
xchg
ficoms
add
mov
imul
mov
add
push
adc
or
mov
or
call
pop
cmpsb
mov
mov
cmp
push
int3
xor
lds
push
sub
add
incl
lods
stos
xor
outsl
repz
jae
jle
lahf
mov
popa
popf
hlt
lcall
add
sbb
outsb
andb
loopne
xchg
push
and
sub
mov
ljmp
dec
mov
sub
jns
sub
adc
sbb
call
fistps
cmp
add
icebp
sahf
test
mov
adc
push
incl
dec
mov
aas
out
inc
adcl
pop
add
cmp
incl
pushl
or
xchg
push
lock
jg
notl
stc
mov
stos
decl
sub
out
je
sub
inc
stos
in
mov
push
and
sar
lcall
in
repz
fisttps
fidivl
pop
dec
pop
dec
mov
mov
sbb
add
sub
cltd
cmpb
decl
sub
adc
pop
adc
pop
adc
add
push
in
arpl
int3
jo
mov
cmc
add
add
and
sub
lret
nop
cs
add
test
call
sub
sub
lock
call
pop
jno
and
clc
ljmp
jecxz
pop
pop
dec
das
fisubrs
dec
adc
adc
pop
loopne
pushf
fwait
sahf
add
inc
xor
mov
rclb
sar
pop
adc
jo
les
stos
xor
out
in
cmpl
and
push
lret
gs
js
xchg
orl
jmp
outsb
das
test
mov
aad
mov
aam
cmpsl
aad
adc
das
cmpsl
and
pop
xchg
push
jae
subb
clc
dec
mov
adc
pop
pusha
fs
out
rorl
call
je
mov
adc
test
mov
sbb
inc
sub
decl
cmpsb
xor
repnz
arpl
pop
xor
xor
insl
and
in
xchg
jns
call
xor
arpl
into
mov
repnz
lcall
fsts
xchg
arpl
aad
cmp
or
adc
pop
push
sbb
xchg
gs
js
xchg
push
outsb
test
gs
aaa
and
ljmp
dec
ljmp
sbb
mov
sub
test
adc
mov
or
inc
sub
call
dec
icebp
ret
sub
test
cmc
popf
jno
xlat
lods
in
lea
inc
pop
ret
inc
push
fisubs
mov
or
mov
or
mov
pop
add
or
inc
jnp
sub
imul
pop
xchg
das
mov
out
cmp
es
call
adc
adc
pop
out
bound
icebp
cmc
pop
jmp
into
lahf
jns
jp
push
out
in
pop
cmpsl
or
cmp
out
jae
xlat
popa
pop
xchg
cld
lods
lea
dec
rcrb
jecxz
push
iret
mov
push
outsb
out
jae
fs
dec
push
aaa
in
sub
call
xchg
pop
adcl
into
push
jns
test
pop
cmp
out
fldenv
dec
and
decl
or
mov
call
int3
outsl
lcall
lcall
mov
repnz
adc
sub
call
cld
fs
lods
mov
mov
pushf
pushl
xchg
mov
pop
mov
and
jnp
mov
enter
mov
stc
inc
stos
or
push
jne
sbb
cmp
nop
push
jl
cwtl
xchg
mov
or
sarl
push
mov
repnz
ljmp
adc
push
adc
push
mov
stc
pusha
jge
sub
cltd
xor
enter
cmp
inc
call
cld
xchg
jmp
inc
add
dec
and
xor
pop
push
mov
jecxz
cmp
add
fstpl
int
mov
cmp
out
cmp
jo
loope
inc
pop
xor
mov
jae
gs
sub
or
mov
daa
add
sbb
push
or
mov
and
aam
test
pushl
xor
xchg
sub
or
adc
fadd
sahf
jb
and
mov
xchg
mov
call
jmp
fnstcw
test
dec
dec
sbbb
fimull
xorb
sub
inc
rcl
and
fisttpll
push
popf
or
jb
push
push
outsb
xor
xor
sbb
push
mov
jne
dec
dec
mov
cmp
and
sub
ljmp
jp
rorb
adc
clc
icebp
sbb
mov
or
ljmp
inc
stos
xchg
mov
lret
sbbb
push
stos
adc
lcall
movsb
sbb
mov
adc
cmp
jbe
mov
xorl
pop
jle
pop
push
jae
std
jmp
xchg
cmp
movsb
fimuls
push
lcall
lcall
cmpsl
in
push
sar
incl
xchg
push
imul
in
inc
stos
dec
sbb
lds
test
push
outsl
call
subl
xchg
jne
movb
lods
mov
pushl
clc
negb
push
hlt
stos
or
fcmovnbe
cwtl
mov
call
aad
cmp
push
aad
jl
xchg
sbb
adc
adc
lcall
icebp
cmp
gs
xchg
xor
inc
les
stos
pusha
test
cmp
idiv
push
sub
sub
mov
mov
aam
mov
cmp
or
cmp
pusha
aad
pop
push
ret
sbb
pusha
cmpsb
mov
gs
dec
cld
or
sbb
xor
daa
mov
cld
aaa
ss
popa
inc
hlt
sahf
shl
push
les
or
jmp
lahf
dec
pop
lods
inc
dec
inc
mov
lahf
mov
adc
xchg
out
call
popf
incb
mov
aas
cmp
jo
mov
loop
and
cmp
mov
mov
jbe
ljmp
daa
test
mov
scas
rcrl
cli
xor
dec
hlt
lcall
mov
sti
call
daa
mov
movsl
hlt
push
lods
adc
inc
cmc
or
ret
bound
cmpsl
mov
jae
pop
cld
dec
jl
mov
sbb
sub
dec
loopne
add
shll
sti
mov
and
pusha
cmp
or
scas
mov
inc
cwtl
sbb
pop
loop
inc
and
jp
add
adc
dec
das
fstps
cmp
mov
insl
sti
ljmp
lahf
rcrl
inc
add
jmp
clc
es
cmp
decl
rol
dec
or
jnp
jecxz
daa
inc
repnz
jp
mov
fcmovbe
jmp
jb
inc
clc
dec
adc
fdivr
dec
sbb
enter
fscale
dec
data16
jg
enter
add
leave
mov
shrb
out
fwait
adc
dec
pushf
incb
lahf
es
fs
lock
ret
daa
fwait
in
movsl
rcrb
shl
inc
jp
test
push
and
jo
xchg
add
xor
pop
test
ds
decl
pop
or
enter
pop
sbb
pop
push
pop
lret
jg
mov
xor
adc
mov
push
inc
outsl
dec
lahf
fcoms
idiv
fildl
arpl
shrl
daa
mov
adcb
cmp
insb
sub
and
lock
lock
add
xor
mov
add
cli
les
inc
ds
xlat
sub
imul
enter
sub
out
add
movsl
out
daa
inc
adc
mov
sti
dec
subl
dec
mov
fldt
aas
lret
jl
jmp
mov
pop
stc
xor
cmpsl
or
stc
mov
das
repz
push
pop
out
dec
lahf
das
jmp
dec
push
lahf
outsb
fwait
in
hlt
shl
imul
divb
mov
ss
sub
lret
lods
movsl
mov
ja
add
jge
dec
xchg
out
cmpl
movsb
dec
data16
mov
insb
cli
jp
xlat
push
xchg
mov
stc
mov
leave
push
repz
xchg
aam
rep
pop
jle
loopne
cmpsl
fwait
ds
sarl
adc
xchg
pop
or
imul
mull
jns
pop
or
lret
push
loopne
jnp
pushf
push
andb
mov
xlat
and
movsl
mov
inc
daa
pushf
xlat
push
adcb
out
stc
data16
inc
push
dec
lahf
shl
out
cli
xchg
xchg
add
data16
cmpsb
jb
hlt
sub
xor
xchg
outsb
lret
mov
movsb
fsubr
sbbb
lods
test
repz
int
int
test
je
add
fildll
sub
jp
mov
lcall
sub
dec
repz
ja
push
rcr
sahf
mov
sbb
les
push
cs
out
dec
xrelease
push
lret
gs
hlt
or
push
mov
ljmp
mov
dec
ds
daa
lahf
cmp
fnsave
inc
ds
jl
movsl
fistpl
jmp
std
pop
repnz
addr16
pop
cmp
bnd
lahf
mov
fdivrl
popf
xcrypt-ctr
cmpsl
lahf
out
cmp
mov
add
add
mov
outsb
jns
pusha
inc
inc
or
push
insb
or
xchg
mov
fdivs
imul
add
call
push
lahf
int3
iret
repz
dec
mov
cmc
leave
sub
ljmp
or
daa
mov
test
and
repz
xorb
dec
inc
pop
loope
movsb
fs
test
or
aas
jge
push
mov
addr16
sarl
mov
aas
in
mov
xchg
lahf
lret
ds
sarb
movsl
out
add
sub
lret
insl
push
cmc
and
pop
or
scas
pop
cmpsl
mov
pop
push
jecxz,pt
aam
xlat
gs
sbb
push
push
or
xchg
pop
insl
jl
jl
mov
push
hlt
jnp
cmc
mov
push
mov
dec
push
rorl
hlt
sub
ds
popa
out
andl
push
sbb
xchg
lahf
mov
fucom
inc
mov
lahf
mov
xchg
or
lahf
sbb
test
enter
sub
mov
and
mov
and
jmp
cmpsb
jno
mov
fsubs
call
daa
jns
ss
adc
out
sbb
xor
cmc
imul
aam
mov
lea
xor
xor
cld
enter
xchg
cltd
xchg
cli
and
fcom
daa
mov
dec
repnz
dec
bound
les
cld
cmpsb
mov
loopne
cmc
out
fmull
xchg
pop
lahf
ljmp
iret
enter
test
insb
mov
cli
adc
add
or
sahf
aaa
sbb
or
cmp
sub
es
repnz
xchg
dec
jg
test
fadd
or
pop
test
or
cld
mov
pop
jp
push
mov
enter
aam
jmp
hlt
bsr
fs
pop
pop
mov
pusha
mov
mov
push
and
mov
pop
rcrb
in
or
insb
cmp
xor
mov
addr16
stos
rcrl
push
lahf
rclb
cmp
test
andl
xor
movsb
cli
add
fsts
xor
push
dec
lret
enter
sti
push
in
insl
and
cmpsb
cli
hlt
xchg
mov
enter
jmp
mov
xchg
aad
scas
lret
xor
jns
cli
dec
push
inc
add
sahf
push
push
mov
pop
test
and
jg
mov
or
pop
stc
jns
sahf
sub
mov
daa
scas
sahf
fwait
out
fs
dec
pop
jmp
xchg
scas
inc
aas
jb
sub
pop
cmp
call
int3
shrb
mov
popa
testb
shll
pop
sub
mov
pop
sahf
iret
lea
dec
pop
int3
cli
mov
lret
pop
xchg
scas
xlat
aas
movsb
jbe
imull
stos
inc
push
xchg
push
lahf
mov
xor
sub
adc
or
je
fcmove
in
sbb
push
sarl
and
lods
jno,pt
clc
dec
sahf
sub
jge
and
mov
leave
fsts
daa
scas
les
cld
cmp
push
lahf
mov
shlb
iret
int
jbe
sub
mov
mov
call
mov
ss
lods
stc
in
iret
add
ljmp
ds
movsl
in
daa
pop
jge
dec
int
xchg
jge
imul
jl
dec
pop
jmp
loopne
in
insl
cmpsl
scas
fimull
and
push
insl
push
insl
inc
pusha
cmp
or
jnp
xchg
dec
shlb
lods
add
xor
mov
xor
pop
jecxz
sub
imul
daa
lods
testl
lcall
push
lret
cli
mov
xchg
add
lcall
aad
ljmp
adc
sarl
ljmp
arpl
jp
fsubl
int
popa
hlt
sahf
sub
mov
jg
xchg
cmc
sub
jns
sahf
lahf
mov
mov
mov
gs
cmp
jge
dec
insl
sub
push
sub
daa
fldt
sarb
pop
icebp
pop
lods
enter
mov
push
mov
cmpsb
test
data16
dec
lret
xchg
lods
inc
js
xchg
lcall
stc
in
cmp
adc
in
mov
pop
shll
popa
cmpsl
mov
add
scas
mov
cs
call
adc
stos
lods
push
mov
mov
loopne
int3
rolb
sub
cld
mov
dec
imul
addr16
stos
xchg
push
sub
scas
xchg
je
xorl
sub
pop
shll
jge
mov
lods
mov
rcrl
inc
pop
mov
lret
lret
jae
mov
xchg
fmul
bt
stos
cmpsl
mov
dec
push
adc
lods
mov
lods
out
lods
mov
sub
fisttpl
push
jge
or
pop
sahf
cmp
push
cmpsl
stos
in
xlat
daa
mov
sahf
daa
jns
push
outsb
jge
fdivr
push
sub
xchg
jg
cmc
test
sub
xchg
popf
loope
outsl
stos
push
lock
lahf
cld
and
shl
sub
add
or
or
adc
popf
inc
push
and
pop
mov
jns
sahf
ja
mov
mov
in
bnd
fldt
scas
in
repnz
repnz
lret
mov
xchg
jmp
push
shll
cmpsl
test
enter
adc
mov
lcall
sub
imul
xchg
aas
test
mov
lahf
cmpsb
pop
paddw
pop
mov
jne
lcall
rclb
stos
jnp
mov
mov
movsb
sub
or
lahf
xchg
pop
adc
leave
scas
mov
dec
sub
aas
jbe
xchg
xchg
in
daa
pop
daa
cmp
xchg
cmp
stc
in
push
mov
pop
lahf
movsb
sar
and
ja
xchg
dec
lock
and
fninit
lcall
xorb
mov
fisttpl
xor
xor
add
xchg
mov
lock
sub
in
mov
xor
sbb
sub
pop
inc
cmp
insl
cs
rclb
xchg
mov
inc
push
xchg
jns
je
negl
imul
or
jmp
jg
jmp
and
outsl
adc
mov
lret
out
push
icebp
cmpsl
push
ljmp
cmpsl
mov
div
outsb
test
or
pop
mov
jp
hlt
insl
push
repnz
xlat
dec
leave
scas
sahf
lret
leave
xor
cmpsl
pop
jg
xchg
stc
and
and
sub
jmp
push
lcall
in
add
cmpsl
cmpsl
loopne
or
add
loope
add
aam
hlt
jnp
fxtract
jno
sbbb
pop
int
pop
jno
cli
inc
leave
sub
lahf
xchg
out
xchg
push
or
pushf
push
pusha
cmp
and
and
jb
in
outsb
in
xchg
add
jp
fsubl
ret
cmp
mov
dec
inc
lcall
ljmp
aam
lret
repnz
xchg
ret
push
sti
xchg
sub
lods
notb
rcpps
in
cmpsb
cmp
daa
lret
inc
fsub
ret
test
repnz
repz
or
aam
adc
icebp
lahf
scas
insl
xchg
test
and
out
push
cwtl
push
popa
xor
repz
daa
ret
xchg
pop
sbb
push
fistpll
xor
xor
adc
jg
fdivrs
inc
dec
jmp
bound
aas
in
push
sti
les
cmpsb
sbb
inc
push
jb
pop
adcb
inc
sbb
ror
jns
mov
daa
les
sub
mov
mov
xlat
mov
dec
or
bound
xchg
push
xchg
mov
imul
rcll
movsl
sahf
in
out
in
ds
sub
dec
adc
movsb
outsl
cmp
sti
movsb
xchg
fcompl
daa
movsl
mov
dec
imul
sub
dec
xchg
xor
testb
in
xchg
lret
out
jns
les
mov
lods
ds
daa
lea
sbb
xchg
xchg
lcall
insl
pop
sbb
sub
cmp
mov
add
lahf
xchg
xchg
arpl
pop
inc
ds
dec
jl
jp
push
in
cld
nop
push
hlt
fsubs
dec
aad
sarb
adc
xchg
test
mov
and
insb
fstpl
adc
icebp
shl
rcl
icebp
or
sub
sub
xchg
and
fdivrl
push
lcall
and
push
xchg
movsl
je
xchg
fs
daa
leave
cmp
stc
adc
sub
pushf
outsb
in
rcll
ds
jns
fldenv
mov
mov
jle
inc
imul
out
cmp
sub
sub
leave
repnz
push
fldl2e
imul
mov
test
lahf
icebp
xchg
sub
sti
fs
frstor
imul
ds
mov
repz
xchg
sbb
ds
iret
repz
test
mov
mov
inc
inc
or
fildll
or
inc
subb
lods
popa
testl
cmc
jo
mov
mov
push
push
xchg
add
mov
fstps
pop
int
push
iret
lret
jae
xor
inc
dec
fwait
xchg
xchg
xchg
mov
adc
daa
mov
ficomps
adc
adc
jae
cmp
fwait
testb
aaa
dec
loopne
fcmove
fcomi
push
enter
jg
fsubl
pushf
and
cmp
mov
jno
push
xchg
cld
push
ljmp
lahf
mov
sbb
ss
pop
repz
sahf
jge
dec
outsb
hlt
rcll
cmp
addr16
mov
mov
fcompl
jmp
mov
sti
xor
fbstp
inc
jge,pt
imul
cli
in
mov
out
fsub
decl
mov
rclb
cli
pop
inc
push
shll
daa
test
testb
jl
stc
or
xchg
push
js
lahf
test
or
or
mov
iret
and
inc
sub
mov
adc
xchg
push
dec
ret
shrl
add
and
xchg
lahf
out
sahf
aaa
xor
cmpsl
fisubl
xchg
inc
dec
repnz
jg
lahf
and
dec
sti
sub
xchg
div
mov
pop
repnz
mov
push
imul
or
add
mov
or
cltd
notb
push
xor
lahf
xchg
mov
jmp
sub
cmpsl
jge
xchg
dec
sti
add
jo
pop
ja
popf
negb
jg
ret
pop
daa
rcll
or
ljmp
or
daa
aam
imulb
dec
aas
push
jle
fsubrs
sbb
push
sbb
sub
nop
ja
mov
movsb
stos
jge
dec
outsl
sbbb
push
cmp
jbe
mov
lret
jle
push
add
jo
movsl
pushf
jmp
cmp
repnz
mov
test
pop
in
xchg
dec
stc
inc
pusha
loope
ficompl
ds
jns
cmp
repnz
lods
in
pop
or
xor
inc
add
enter
jnp
imul
shrl
xchg
or
jg
dec
dec
scas
jge
je
in
push
dec
js
sahf
lahf
jb
cmpsl
sahf
in
dec
cmp
mov
xchg
pop
outsb
lahf
xchg
out
mov
adc
sbb
push
fistpl
sti
lcall
sub
insb
mov
xchg
in
sub
lahf
js
fs
pop
repnz
mov
add
cmp
mov
push
stc
leave
icebp
mov
loop
bound
lds
dec
xchg
in
adc
repnz
sti
ss
cmc
insb
cmpsl
dec
mov
mov
stc
enter
mov
outsl
lcall
sysenter
cmp
and
push
mov
push
imul
mov
mov
push
cli
in
jne
and
jnp
mov
or
dec
or
sarb
aaa
insb
sti
movsb
imul
adc
xchg
je
xchg
fstpt
jmp
xchg
out
dec
daa
fstl
jl
je,pt
cmp
mov
insl
iret
aad
fbld
mov
inc
mov
sbb
push
int
test
mov
arpl
or
adc
jb
xchg
xchg
in
sub
or
cmpl
dec
movsb
cmp
and
mov
test
sbb
or
in
jo
cmp
fists
mov
mov
cmp
outsb
lahf
jo
iret
pause
out
jg
fidivrs
loope
or
icebp
in
rorl
outsl
lahf
and
jmp
enter
das
testb
call
dec
aaa
push
in
jmp
sub
ljmp
das
and
sti
je
imul
es
repnz
div
fwait
daa
mov
je
jmp
jns
dec
daa
fdiv
aaa
pop
test
jne
xor
nop
and
cvtps2pi
arpl
orl
add
sbb
loop
and
daa
fwait
add
out
stc
mov
mov
sarl
and
fs
or
add
mov
jmp
dec
test
loope
jge
daa
iret
daa
inc
lods
cmpsb
dec
ret
jge
dec
push
and
fdivl
xchg
inc
push
jno
xchg
jmp
fsts
mov
es
test
andb
push
lcall
lret
orb
aad
in
adc
mov
dec
or
enter
jbe
rcrb
mov
mov
ss
jno
and
mov
aas
in
sbb
out
adc
in
stc
je
daa
lcall
push
shlb
inc
push
sub
or
xlat
jbe
pop
xor
hlt
iret
mov
rorl
popf
cmp
cltd
notl
sbb
dec
lcall
sahf
xchg
xchg
imul
or
dec
dec
push
outsl
jmp
jge
setae
pop
in
leave
jge
repz
mov
mov
cs
es
enter
testl
test
fdivl
stos
mov
add
xchg
cs
dec
jae
es
dec
dec
push
xchg
gs
mov
xchg
lahf
fs
lds
outsb
jle
imul
mov
out
push
enter
cwtl
fdivl
push
leave
mov
bound
xor
in
jecxz
dec
notl
bound
lahf
push
sar
adc
inc
cmp
mov
mov
dec
mov
lret
mov
popf
test
je
sti
movsl
incl
and
daa
cwtl
push
enter
jp
add
push
insl
shrb
push
cmp
xor
xor
mov
add
sub
sarl
cwtl
jmp
insb
mov
loopne
mov
ljmp
or
jge
mov
mov
adc
push
ret
mov
jmp
negb
mov
jge
dec
inc
in
movsl
dec
or
or
push
dec
rcll
addr16
dec
push
mov
push
inc
out
push
push
ds
mov
mov
lock
pop
leave
cs
mov
repz
sarl
movsb
daa
ljmp
lcall
pop
or
pop
pop
push
adc
push
or
ss
xlat
ss
stos
jne
fs
lock
imulb
ds
test
sub
test
add
push
cmp
mov
jbe
pop
outsl
lcall
es
jge
dec
dec
mov
pop
ficomps
jp
and
ret
ret
es
bound
push
lret
mov
pushl
add
out
sbb
push
dec
add
push
out
inc
mov
aam
add
ret
push
inc
gs
cltd
shrl
xchg
iret
or
pop
push
jbe
dec
xchg
xchg
xchg
in
push
push
mov
data16
sub
frstor
fisttpll
sub
mov
or
inc
insb
push
mov
bound
cmpsb
mov
les
add
shrb
clc
adc
loop
stc
or
roll
pop
outsl
out
fldcw
enter
jge
icebp
aas
xchg
pop
push
in
push
xchg
adc
sti
dec
xlat
xchg
jnp
sub
mov
sbb
jmp
cmp
lahf
push
push
out
ja
push
ja
insl
aas
pop
lahf
mov
hlt
mov
and
lahf
dec
mov
dec
lods
repnz
mov
xchg
stc
hlt
int
outsl
in
in
aad
push
jmp
repnz
fiadds
stc
inc
clc
fistpll
dec
out
mov
sbb
and
scas
and
add
or
push
cld
insl
or
movsb
adc
std
nop
pop
dec
movsl
add
xchg
ds
xchg
outsl
mov
pop
jge
loopne
out
movsb
gs
insl
ret
imul
pop
fs
xchg
test
lahf
push
mov
fnstenv
lahf
pop
and
inc
fiaddl
xorl
mov
xchg
pop
adc
xchg
dec
xor
lahf
and
cmpsl
xchg
and
or
dec
ret
xor
dec
movsl
aas
cmpsl
jb
ret
dec
lahf
jecxz
adcl
imull
sarl
xchg
mov
sahf
inc
mov
daa
jns
push
cmpl
movsl
in
dec
xchg
out
mov
dec
xchg
jnp
fisubs
les
push
sbb
or
sub
dec
dec
mov
jge
xchg
int3
sti
test
out
jns
cltd
dec
cmp
adc
movsb
out
jns
jns
push
shl
mov
mov
inc
dec
out
roll
and
repz
and
loopne
push
inc
loopne
stos
xchg
add
pusha
pop
sbb
outsl
sbb
sub
sbb
adc
cltd
mov
sbb
push
jg
imul
or
mov
jg
ret
sub
cmp
jns
or
or
cmpsb
mov
shl
mov
cld
jmp
rorl
mov
add
jb
bound
inc
das
mov
clc
lcall
pop
jecxz
mov
jl
inc
add
mov
insl
dec
scas
pusha
sahf
add
pop
cmc
xlat
out
sbb
xchg
dec
cli
movsb
fimuls
js
mov
in
xchg
cltd
xchg
jge
jmp
fs
leave
and
dec
add
mov
jnp
lcall
repz
fisubrl
mov
xchg
inc
call
in
cli
aam
mov
dec
or
xchg
fbstp
scas
stc
ror
mov
xchg
mov
sub
out
imul
push
lcall
xchg
mov
xor
sub
iret
xchg
xchg
xchg
out
push
fisubrs
ljmp
adc
aas
or
add
pop
xchg
push
jg
cltd
pop
into
sub
adc
shlb
sbb
loopne
mov
stos
xchg
mov
add
outsb
test
adcb
imul
outsb
mov
enter
mov
jo
mov
fsts
lods
push
ret
xchg
and
in
xchg
inc
in
mov
and
pop
insl
xor
fstpt
xchg
push
out
je
inc
negb
jmp
out
adc
out
imul
int
dec
lcall
xchg
sti
inc
filds
sbb
or
daa
cltd
lea
hlt
jge
cmp
fnstenv
sti
xor
push
and
aad
rcrl
push
aaa
mov
add
lahf
inc
and
subl
jge
cmp
das
and
insl
fisubl
testl
out
xchg
fbld
xchg
jl
mov
out
repnz
ds
sti
and
testl
lcall
adc
scas
dec
imul
fcompl
push
dec
jnp
adc
mov
sub
mov
or
ljmp
fbld
push
push
cs
or
add
inc
inc
sti
add
or
mov
cmp
xchg
jl
lahf
inc
ds
sub
test
mov
push
push
outsl
jge
and
shrl
pop
insl
jge,pt
jno
xor
fisttpll
divl
rcrl
sahf
mov
mov
lock
inc
inc
sbb
ds
sbb
jecxz
push
cmp
sub
push
push
ljmp
jecxz
pusha
les
ret
sub
sbb
fcmovb
incl
hlt
pop
inc
lock
xorl
dec
or
out
sub
cmp
mov
and
xorl
dec
and
and
push
fisttpll
fdivrl
pop
rcpps
dec
lret
and
addl
mov
pop
movaps
dec
dec
sub
dec
pop
sahf
and
sbb
clts
call
sbb
cmp
dec
shlb
cs
sbb
lret
daa
mov
fbstp
das
pusha
jnp
inc
iret
inc
cwtl
cmp
adc
and
sahf
add
in
cltd
fldt
sub
jp
rolb
xor
push
push
and
ret
imul
jae
or
push
dec
jmp
or
sub
stc
mov
mov
add
mov
adc
mov
xlat
aam
pushf
imul
sub
cs
cmc
cmp
shlb
test
js
pop
jl
repnz
cmp
ljmp
shl
lods
jb
popa
xor
sahf
lret
sub
or
cmp
xchg
sub
adc
scas
push
inc
dec
cmp
jge
imul
add
cli
mov
ds
out
and
mov
rol
clc
inc
lahf
ss
test
pop
clc
ret
fimuls
jge
dec
add
xor
push
call
xchg
gs
jnp
shrb
hlt
dec
daa
lret
out
mov
imul
dec
push
cli
movsb
xchg
sub
cli
in
call
lahf
xor
adc
enter
xchg
repz
add
or
xor
out
sbb
push
aam
sbb
test
fildl
imull
ds
dec
pusha
loopne
xchg
xchg
push
sbb
je
outsl
lret
hlt
sub
cmp
inc
fwait
out
jl
jb
cmp
push
gs
sahf
and
xchg
dec
setno
mov
and
add
stos
or
call
fcmove
cmpsb
push
mov
or
inc
push
and
push
icebp
or
pusha
lret
jl
dec
add
mov
lret
test
lahf
and
mov
inc
andb
or
jb
add
xor
dec
adc
lret
mov
daa
mov
popa
xor
pusha
adc
mov
sbb
cs
mov
mov
push
mov
dec
jb
add
aam
fcoml
pop
sbb
sub
roll
pop
ret
je
mov
add
push
pop
outsb
fists
sbb
ds
pop
stc
xor
mov
out
jge
sbb
rcrb
xlat
sub
in
adc
mov
int3
mov
or
inc
lahf
sahf
sub
outsb
repz
movsl
push
mov
mov
dec
xchg
push
pop
mov
int
int
imul
fs
mov
sub
inc
aad
xchg
stc
je
push
sub
enter
mov
iret
xor
fs
mov
lcall
sub
sbb
enter
lods
push
sub
sub
je
mov
dec
insl
add
cmpsb
stc
cmpsb
mov
mov
dec
jae
mov
dec
adc
in
adc
sbb
jecxz
not
mov
dec
sub
into
lahf
dec
lods
lcall
jb
mov
ds
outsl
sub
sbb
insl
adc
test
out
out
inc
and
mov
xor
inc
mov
stc
call
jle
into
jl
insl
hlt
mov
iret
xor
cmp
inc
xchg
aam
pop
lcall
jno
sbb
cmp
andl
ds
pop
xor
aaa
sarl
mov
dec
movsb
adc
add
xchg
ss
adc
fdivr
lods
xor
in
hlt
shrb
leave
fistpl
nop
adc
sbb
in
bnd
pop
and
mov
cld
adc
mov
cmp
mov
jb,pt
ds
lcall
shl
ljmp
sub
mov
lods
or
cwtl
jmp
test
movsb
jp
enter
inc
cli
and
jge
ret
and
cmp
enter
and
lret
out
and
dec
rorb
cmpsb
stc
out
movsb
daa
xchg
ds
outsl
push
adc
popa
xlat
mov
out
lods
sub
inc
sbb
dec
jle
lahf
mov
cmpsl
inc
sbb
push
sbb
in
hlt
sub
lods
mov
adc
adc
outsb
mov
and
push
ja
fs
xchg
int
insl
xlat
pop
outsl
xchg
pop
lods
adc
inc
cwtl
out
inc
fadd
or
int3
add
movsl
stc
dec
lahf
and
sub
inc
andl
fs
jne,pt
and
dec
xlat
adc
lahf
mov
int3
add
or
lods
lahf
out
stc
movsb
dec
adc
shlb
mov
pop
inc
inc
sahf
inc
cmp
mov
sar
das
subb
imul
lock
xchg
push
test
lods
inc
jge
push
pop
mov
sub
xchg
sbb
inc
dec
mov
scas
dec
jp
repz
dec
inc
nopl
or
rcrb
xchg
pusha
inc
lock
psrld
aad
mov
add
aad
sbb
xchg
ds
jmp
jae
mov
jne
mov
xchg
hlt
jb
cmp
pop
icebp
adc
mov
dec
sahf
xchg
iret
inc
pop
jmp
dec
pop
fwait
pop
cli
in
shrb
pop
xor
and
cmp
xchg
mov
jge
sbb
dec
push
mov
je
push
stc
mov
push
lods
sub
daa
test
push
xchg
addr16
test
aas
mov
xchg
inc
adc
rcll
jge
andl
cmpsl
xchg
ds
rcrl
mov
mov
lret
das
repnz
sbb
clc
jg
mov
or
or
add
pop
mov
shll
pop
or
popa
jge
aad
add
inc
cwtl
xor
iret
xor
dec
lahf
sbb
push
stc
shll
or
sub
imul
push
loope
out
xlat
xlat
or
xchg
xchg
xchg
mov
mov
push
pop
push
fs
sub
cld
cmp
add
adc
xor
mov
shrl
xchg
enter
mov
xlat
inc
xchg
scas
push
and
push
mov
adc
xlat
push
mov
repz
push
jnp
mov
enter
or
aaa
mov
sub
sub
daa
test
bnd
fs
inc
xlat
mov
dec
jb
xor
mov
dec
sahf
and
cltd
stos
aaa
jge
incl
sub
aam
add
sub
rcrb
stos
or
pop
shlb
pop
sub
inc
ds
cmpsl
test
xor
cmp
push
cmp
or
xchg
lret
xor
hlt
sub
dec
xchg
nop
je
pop
cs
add
mov
stos
push
push
scas
jl,pn
iret
xchg
cmp
pop
popf
ds
xchg
jb
push
aam
repz
and
sub
or
xor
or
in
xchg
pop
xchg
or
and
cmp
and
and
test
popf
arpl
and
xchg
xchg
out
mov
cmp
in
mov
push
repnz
cmp
movsl
pop
sbb
adcl
xchg
inc
cmovae
je
repnz
and
hlt
jmp
leave
mov
jle
mov
sbb
int3
sbb
or
adc
sub
jmp
mov
cmpb
sbb
jnp
xchg
das
sahf
test
inc
cmpb
pop
aas
inc
jge
add
mov
push
test
sbb
sbb
mov
call
ret
lods
mov
test
sbb
sbb
pop
repnz
jecxz
aam
adcl
push
inc
mov
jge
adc
mov
xchg
mov
inc
ds
inc
inc
jge
cmpsl
mov
imul
js
sub
ds
data16
add
aam
pop
imul
jmp
ljmp
je
cmpsb
mov
and
outsb
cs
cmpb
jge
inc
adc
pop
inc
mov
cmpsl
inc
nop
inc
lcall
test
add
dec
shl
repz
mov
pop
repnz
xor
mov
test
repnz
and
sbb
lret
iret
nop
nop
cli
incl
push
mov
or
mov
and
rcrl
repnz
xchg
roll
cmc
imul
lret
dec
push
dec
mov
sbb
sbb
xchg
sbb
xchg
sbb
cld
mov
push
daa
lret
xchg
rcrb
add
xchg
nop
dec
xchg
xchg
pop
mov
sub
stos
es
xchg
nop
dec
dec
jge
dec
fnsetpm(287
push
arpl
mov
mov
jg
mov
ljmp
push
add
leave
and
test
or
xchg
pop
sbb
aaa
fiaddl
sub
xchg
xchg
xor
lahf
insl
mov
xchg
inc
in
sahf
dec
jge
dec
repz
repnz
pop
cmpsl
ds
and
add
test
cmp
pop
inc
ljmp
cld
sub
lds
dec
ret
jmp
push
sub
mov
mov
je
mov
mov
cmc
sub
cmpsl
test
or
sub
push
imul
xor
cwtl
cmp
push
sbb
adc
dec
push
dec
call
and
andb
jg
icebp
xorb
loopne
lcall
push
pop
pop
lret
inc
enter
cmp
mov
and
sub
stc
hlt
test
imul
push
test
sbb
sub
sahf
test
jg
mov
jge
jae
and
repnz
sbb
repnz
cmp
movsl
add
and
push
inc
jns
dec
inc
push
or
in
test
dec
lahf
int3
mov
jb
dec
lock
cltd
mov
cs
sarb
mov
xchg
lret
and
mov
pop
sub
negl
insb
xor
add
sub
cld
jg
add
mov
push
test
mov
sbb
cwtl
shl
jmp
and
mov
add
cmpsb
insb
inc
cmp
mov
dec
dec
aad
inc
add
lahf
ss
pop
aas
pop
aad
inc
mov
sahf
pushf
ret
cmc
js
imul
data16
pop
mov
lret
cmpb
mov
in
fs
mov
ljmp
jns
shlb
cmp
call
fs
movsb
xchg
mov
push
lods
cmp
dec
and
pop
fbld
lods
call
adc
imul
inc
out
adc
cld
cmp
aad
mov
adc
ljmp
jno
insb
fs
mov
neg
iret
sbb
pop
xlat
out
orl
push
dec
adc
lret
xchg
test
repnz
fwait
adc
mov
jl
jne
xorl
pop
pop
in
cmpsl
scas
sahf
xchg
cld
cld
outsl
out
push
cmp
mov
push
lahf
imulb
dec
sti
hlt
aad
std
mov
lret
cld
cmp
dec
jns
dec
and
lahf
das
and
jge
cmpsl
mov
in
mov
mov
inc
mov
fdivr
or
sahf
orl
mov
inc
inc
sahf
aaa
pop
mov
xchg
jle
dec
test
xor
inc
or
push
add
mov
daa
jns
cli
movsb
popa
jge
mov
jmp
sbb
aad
leave
xchg
pop
jg
bnd
std
and
jle
adc
push
lcall
add
lahf
mov
xchg
shlb
mov
jmp
jl
dec
arpl
cmpsl
mov
push
ret
push
lahf
xor
add
repz
in
out
push
jle
jmp
out
xlat
sub
mov
xchg
lahf
lret
loop
dec
gs
and
dec
pop
fwait
ja
mov
lock
ret
movsl
pop
mov
cld
cmpsl
in
scas
int3
push
addr16
jmp
imul
aad
ret
push
sti
add
or
cltd
test
ret
dec
fistpl
cmpsl
mov
dec
pop
add
jo
data16
adc
daa
cld
je
fsubl
imul
jb
cmp
cmpsb
addb
imull
sahf
adc
hlt
pop
inc
imul
hlt
xor
fwait
cmp
stos
pop
test
pop
mov
xchg
mov
or
xor
or
pop
cmp
enter
dec
mulb
notl
mov
je
jl
mov
cs
add
nop
ds
mov
cmc
leave
lahf
mov
and
jge
pop
add
xchg
bnd
xchg
daa
mov
testb
repnz
push
xchg
sbb
sbb
test
insl
jge
nop
mov
pop
lahf
ljmp
cmc
imul
movsl
add
adc
insb
jl
cmpsl
cli
pop
adc
loopne
jmp
test
mov
jl
add
sahf
push
loopne
push
pop
pop
mov
stos
movsl
xchg
xchg
xchg
cmpsl
outsl
aad
cmp
mov
pusha
pop
test
cs
mov
movsb
rorl
dec
inc
hlt
shl
or
repnz
inc
jno
mov
aaa
aam
add
bound
cmpsl
mov
call
rorb
mov
and
sbb
xor
cmc
mov
xor
add
jl
in
scas
leave
push
and
mov
fiadds
xchg
int3
mov
out
scas
inc
ds
dec
repz
cmpsl
stc
mov
mov
mov
push
push
je
dec
shrl
jle
xor
fisubl
pop
sub
or
xchg
inc
push
xlat
daa
stc
mov
xchg
scas
xchg
fidivrl
xor
and
in
fs
enter
aam
test
push
push
pop
pop
aaa
mov
stc
arpl
pop
lahf
in
lret
fiaddl
and
insb
lcall
mov
cwtl
pop
jnp
aas
inc
pop
pop
loop
adc
pop
mov
ljmp
and
cmpsb
mov
mov
in
jb
fists
ret
xchg
jl
lret
in
repnz
adc
call
clc
jge
xchg
mov
mov
mov
push
cmp
out
jg
scas
loope
or
out
mov
mov
mov
mov
mov
pop
clc
mov
sub
stos
inc
movsb
fisubs
add
das
inc
xor
add
xchg
ljmp
mov
test
lcall
adc
shll
jmp
mov
push
adc
ljmp
orb
mov
orb
push
adc
adc
cli
jg
mov
incl
push
les
gs
test
cmc
lds
dec
loopne
sbb
mov
mov
ljmp
cmpsl
lret
mov
jne
mov
shl
daa
inc
bound
xchg
nop
incl
dec
xor
push
mov
and
ret
mov
adc
das
push
out
ret
cld
inc
push
out
mov
adc
nop
push
mov
pop
cmp
incl
imul
shrl
adc
push
lods
stos
xlat
scas
inc
push
xchg
enter
call
or
cmpsb
dec
dec
popf
rcrb
lea
lret
push
or
test
push
push
push
sbb
decl
fcmovnu
cwtl
add
leave
lds
inc
push
aad
inc
mov
xchg
pop
in
jge
call
pushl
cmpl
ljmp
das
cmpsb
outsl
orl
ljmp
aad
int3
lahf
shrl
pop
fcomps
mov
inc
call
clc
incl
push
add
shrl
out
ss
pop
adc
sbb
icebp
outsl
lock
xorl
pop
cwtl
cmp
popa
inc
mov
loope
mov
jno
loopne
and
sbb
push
push
cmp
addr16
inc
push
cwtl
lods
das
stos
aam
push
add
addr16
mov
mov
xor
jl
data16
mov
cwtl
mov
dec
enter
mov
lods
out
mov
fcoms
das
int3
loopne
js
les
cmp
add
lret
push
add
fs
mov
les
outsb
incb
push
and
addl
sar
stos
fdivrl
adc
dec
jae
mov
popa
add
jbe
divl
decl
es
and
mov
mov
loopne
loope
loopne
loopne
aad
adc
mov
fdivr
pop
or
cmpb
adc
mov
add
aaa
adc
les
xchg
clc
or
sbbl
xor
or
fbld
add
test
fildl
and
clc
inc
mov
ret
or
decl
test
jmp
xor
into
push
add
ret
idiv
push
mov
inc
or
cmc
loopne
lods
lds
inc
mov
xor
lcall
ja
adc
push
lods
dec
mov
clc
inc
dec
shr
loope
dec
decl
jl
cmpsl
or
mov
push
or
xchg
xor
lret
mov
and
mov
cli
shlb
clc
or
cmp
sbb
add
aaa
call
pop
inc
adc
cmp
lcall
test
repz
test
xor
int
popf
fnstenv
test
jg
lcall
daa
pop
mov
popa
cld
add
scas
mov
mov
sbb
insb
faddl
arpl
cmpl
int3
lcall
fistpll
idiv
fnstsw
sub
pop
mov
aaa
sti
je
xor
call
xchg
adc
out
sub
js
dec
xor
mov
incl
push
push
fs
push
sub
xor
shlb
or
ja
or
xchg
addr16
sub
jns
mov
sub
insb
xchg
xchg
jg
mov
flds
sbb
xor
mov
in
pushf
sbb
decl
je
test
mov
mov
inc
add
rcl
mulps
fildll
out
xor
and
push
shrl
sbb
aaa
cli
fbstp
js
pop
add
sti
mov
sahf
pushl
push
sub
loop
lret
jnp
mov
jecxz
inc
loopne
xor
sbb
jb
dec
rolb
mov
leave
test
rclb
push
fiaddl
push
aam
in
xchg
bnd
call
movsl
mov
les
scas
push
sub
mov
addl
xor
inc
andl
jg
or
call
ja
mov
mov
inc
sbbb
out
decl
dec
adc
rolw
adcl
aas
pushl
mov
jnp
adc
fsubl
jae
and
mov
and
ds
outsl
xchg
jno
sbb
push
in
pop
mov
push
enter
int3
push
imul
jns
sarl
leave
sbb
rorl
pop
jle
nop
enter
mov
daa
ret
jbe
in
int
mov
outsl
sub
mov
inc
sub
mov
dec
push
fwait
or
paddq
inc
push
mov
in
cwtl
iret
sbbl
lea
test
sar
adc
outsl
fwait
movsl
add
sub
push
insl
or
rcll
decl
mov
out
mov
call
adc
outsl
cld
lods
jg
push
rep
xchg
scas
xor
pusha
in
xchg
sahf
aas
in
mov
test
mov
loope
adc
out
out
push
mov
adc
call
stos
mov
les
pop
push
or
orb
cmp
or
mov
bound
add
or
in
sub
movsb
xchg
sub
test
adc
and
hlt
xchg
mov
les
outsb
mov
adc
xor
and
pop
sub
ljmp
hlt
xchg
aam
push
or
ljmpw
xor
or
stos
cmp
outsl
call
mov
addl
and
scas
rorb
loop
jo
ret
cld
lcall
test
sub
sbb
or
xchg
sub
add
mov
ret
sahf
sub
gs
pushl
inc
test
xchg
test
push
js
aas
or
aam
dec
lods
lods
cmp
cltd
mov
pop
sbb
mov
xor
push
dec
mov
mov
cmpsb
orb
adc
xorb
jb
and
dec
mov
loope
dec
or
sub
xor
push
lret
inc
punpckhbw
mov
icebp
jmp
gs
add
and
and
and
jecxz
mov
jge
cmp
xchg
add
out
cli
xchg
sbb
nop
xor
fs
mov
fs
dec
cld
xchg
mov
pop
imul
adc
aas
dec
movsl
incl
inc
cwtl
or
divl
pop
and
pop
sub
pusha
dec
cmc
incl
inc
and
pop
inc
aas
ja
imul
movb
sbb
jg
mov
lcall
loopne
xor
fstpt
lods
lds
cli
int3
iret
jecxz
dec
cld
mov
and
xchg
pmullw
jmp
add
jg
pushl
adc
sub
mov
outsl
cmc
decl
aad
push
aam
movsb
dec
aam
add
rclb
adcl
xchg
incl
sbb
mov
imul
js
mov
lahf
jg
imul
adc
mov
sub
lods
cmp
jecxz
das
icebp
insl
jno
repz
imul
aas
je
add
into
ljmp
ret
fs
push
dec
or
xchg
mov
roll
out
pusha
mov
incl
jmp
cmpsl
xchg
xchg
fmull
dec
sub
sbb
aas
das
lock
inc
popa
pop
das
or
cmp
jo
idiv
ljmp
and
imull
stos
jns
sub
jnp
mov
dec
test
pop
push
push
mov
sub
jp
mov
push
push
sar
mov
and
ds
lret
cmp
jg
pop
clc
ror
mov
hlt
loopne
push
into
mov
jmp
in
sar
inc
insb
mov
loope
pop
jmp
xor
inc
cli
or
mov
loope
mov
lret
xor
xor
test
mov
mov
repz
mov
push
push
ljmp
fbstp
call
mov
les
ret
sbb
xor
dec
sbb
xor
loop
sub
pop
mov
cld
pop
inc
push
xchg
stos
test
jg
fadds
sub
jne
enter
inc
sub
cmp
movsb
pop
iret
push
test
push
push
cmpsl
or
call
sub
sbb
aad
fstl
insb
mov
mov
in
cmova
inc
call
jmp
sbb
out
push
cmp
in
cmpsl
pusha
mov
xchg
addr16
add
cmp
ljmp
mov
lret
xchg
fistpl
in
mov
fxtract
ret
decl
or
mov
sbb
jecxz
stos
nop
icebp
mul
xor
in
popf
push
cwtl
xchg
hlt
notb
xor
test
pop
out
cmp
cli
pushl
lock
mov
xor
jp
jmp
jne
sti
lret
decb
inc
sub
push
xor
pop
xlat
xchg
inc
outsl
popf
hlt
xchg
push
mov
pop
mov
jg
xor
mov
cmp
sub
inc
outsb
aad
add
pop
arpl
decl
jmp
dec
js
xlat
leave
push
pop
sti
lds
in
and
adc
dec
mov
and
lods
mov
pop
inc
stos
add
push
mov
mov
fs
in
xchg
pop
cmc
das
mov
xchg
test
dec
sub
es
fdivrs
add
gs
cmc
lods
loop
push
fs
fidivl
rorl
xchg
push
lahf
sar
sar
dec
shlb
mov
jnp
push
push
or
out
sbb
mov
fbld
xchg
add
outsl
enter
rclb
test
push
pop
pop
pop
sti
test
jmp
subl
popa
popf
or
sub
cmp
mov
aad
in
add
adcb
test
outsl
icebp
jmp
loopne
add
popf
adc
inc
sbbl
pushl
dec
mov
sub
xchg
lret
mov
sub
movnti
sti
xor
pusha
cltd
sbbl
outsl
loope
mov
stc
das
jmp
sbb
clc
shlb
icebp
mov
mov
sub
repnz
xchg
jge
fmull
mov
inc
sahf
push
xchg
inc
leave
cwtl
and
sub
inc
mov
mov
xor
and
xchg
inc
push
or
sub
pop
clc
jg
les
mov
and
xchg
cli
mov
repz
adc
dec
cmp
pushl
adc
and
inc
insb
pop
adc
adc
jl
lods
ljmp
hlt
adc
xor
shrl
cmp
lods
dec
push
lcall
call
jg
xorl
dec
adc
fistl
mov
jle
and
mov
xor
ret
push
sub
inc
mov
mov
mov
xchg
ret
sub
cs
incl
aas
aaa
fisubrl
fisubrl
dec
jb
stos
jmp
pop
icebp
inc
imul
inc
lcall
and
cmp
and
arpl
cmp
mov
mov
fnstsw
fistpl
mov
jge
stos
cmpsb
call
ljmp
xlat
xor
push
jne
mov
cmp
aaa
pop
dec
lock
incl
xchg
jo
mov
lret
cmp
mov
push
push
mov
mov
inc
pop
leave
mov
xsha256
cmpsb
xchg
or
daa
addb
jmp
mov
lahf
xor
data16
insb
jns
mov
mov
jmp
fidivs
sbb
mov
mov
adc
fsub
pushl
or
or
lea
push
stos
ds
movsl
std
push
sbb
mov
pushf
aas
add
mov
mov
inc
arpl
cmp
jno
xor
xchg
and
ljmp
pop
mov
lock
fdiv
test
push
cmc
orb
call
inc
pop
dec
cmp
mov
shll
clc
and
pop
shll
jmp
push
in
lea
push
call
cwtl
cmp
fcmovb
jmp
lea
jg
fnstcw
data16
addb
sub
pop
jp
mov
and
mov
sbb
add
adc
pop
cli
jg
add
lds
lea
inc
pop
xor
test
pop
mov
dec
mov
in
divl
adc
xchg
sub
les
js
fwait
jg
or
add
push
call
cmpl
nop
cs
jg
mov
inc
mov
or
push
into
push
mov
repnz
clc
pop
pop
clc
incl
mov
add
sub
xor
lds
jmp
push
push
lea
jbe
in
jo
imul
xchg
loopne
cs
daa
xor
mov
lods
pop
mov
fcomps
movsb
outsb
jne
or
jl
xor
dec
jg
decl
inc
jne
cmc
sbb
dec
push
subb
sbb
push
fmul
cmp
pop
push
scas
push
ljmp
ljmp
xor
lea
add
lods
adc
jo
adc
jae
jg
aaa
cli
pushl
xchg
sarb
xor
or
pop
test
leave
test
loop
xchg
pop
ss
lcall
inc
sub
mov
push
into
lcall
shrl
ds
test
orl
popa
sar
pop
ljmp
jge
sub
pinsrw
sub
imul
sysenter
dec
push
pop
loope
add
fs
dec
pop
lcall
xor
mov
and
push
shrb
inc
add
dec
add
popf
push
dec
call
mov
cmp
jle
cwtl
in
and
pop
in
cmp
jb
mov
push
loopne
adc
mov
adcl
cld
lods
jp
xor
rcrl
or
xchg
out
data16
ljmp
adc
mulb
push
lahf
sti
sar
xchg
rcll
sub
cmp
mov
jl
or
dec
dec
mov
ret
scas
xchg
clc
mov
xor
adc
dec
inc
lds
pop
arpl
repz
push
push
or
push
sti
xchg
sbbb
xchg
sbb
pop
mov
xchg
dec
mov
inc
push
in
cwtl
add
test
pop
pop
decl
adc
inc
xchg
dec
leave
pop
mov
push
ficoms
mov
test
incl
sub
jnp
loop
imul
xor
decl
or
or
ja
insb
or
push
mov
xorl
cld
jmp
cs
pop
xchg
mov
cld
push
sbb
xchg
leave
sbb
incl
pusha
add
adc
rcll
dec
pop
pop
jp
jbe
sbb
or
lcall
lret
jnp
mov
nop
retw
dec
and
and
dec
mov
pop
sahf
out
shrd
mov
xchg
rolb
pushl
lret
add
cmp
push
aaa
jl
popf
dec
jno
jae
pop
sub
sub
in
jno
push
aam
pop
fsubrl
or
aam
cwtl
xchg
push
and
loope
ljmp
test
pop
shll
mov
aad
shr
lcall
jg
mov
cmc
pop
iret
add
mov
cmp
movsl
sub
mov
into
sub
adc
popa
dec
xor
sysret
mov
fs
popa
push
lcall
inc
inc
ret
mov
gs
shll
or
cmp
jle
mov
sar
ljmp
sub
sbb
mov
in
pop
adc
repz
decl
inc
mov
xor
push
and
lcall
decl
aam
rcrb
dec
adc
stos
xchg
xchg
test
adc
or
fxch
ljmp
pop
jo
ss
lea
movsb
movsb
mov
popa
push
and
adc
call
cmpsb
mov
jae
outsl
mov
mov
ss
das
mov
sar
inc
xchg
lret
cmpsl
add
sub
je
jg
mov
or
push
clc
pusha
xchg
sub
out
sbb
or
sar
ljmp
push
xchg
adc
mov
xchg
push
push
xor
lahf
int3
out
out
imul
icebp
clc
dec
mov
push
mov
sarb
in
inc
or
add
mov
add
test
xor
push
mov
loope
jp
ljmp
pop
shlb
sub
enter
lods
incb
negb
push
lahf
xor
push
xchg
insl
add
call
lods
jae
in
mov
add
sub
dec
pop
xchg
cwtl
push
gs
incl
inc
mov
jmp
and
popf
gs
sbb
cmp
jns
inc
sar
jae
and
mov
clts
dec
or
pusha
and
adc
idiv
jle
xor
imul
inc
and
insl
arpl
jmp
jnp
pop
add
pop
cli
bound
in
nop
call
mov
lret
mov
sbb
shrl
cmp
or
mov
call
add
jle
mov
popf
loopne
cmp
cvtps2pi
call
mov
mov
mov
shr
adc
insl
std
sbb
and
dec
lods
pop
inc
and
lcall
add
pop
adc
adc
rorl
mov
inc
mov
ja
push
ljmp
ret
push
pop
mov
aaa
addl
sbb
jg
inc
mov
std
mov
mov
adcl
mov
fucomip
lret
cli
outsb
cli
jnp
and
sahf
adc
cld
cmp
lcall
daa
lds
pop
jne
sbbl
decl
jo
imul
mov
push
pop
cmp
loope
xlat
stc
xor
out
stos
pop
scas
cmp
cmp
daa
jb
adc
pusha
icebp
lea
pop
sub
sbbb
inc
lods
insl
mov
mov
jmp
adc
out
or
loope
imul
orl
cmp
and
cmp
out
xchg
mov
lcall
xor
sub
push
jmp
or
sbb
clc
test
mov
or
fs
decl
faddl
cmp
pop
fs
int
test
lds
pushl
cmpsb
imul
notl
cmpl
adcl
lds
cli
mov
jg
and
test
push
and
shlb
dec
add
dec
inc
cmp
cli
pop
sbb
lcall
pop
aaa
push
mov
jle
xor
add
or
ret
cmc
and
pop
cli
ljmp
enter
data16
or
push
adc
out
inc
pop
icebp
push
ljmp
std
call
and
test
repz
das
adc
ret
in
push
jmp
call
std
mov
fimuls
repz
mov
pushl
clc
loope
pop
xor
sbb
js
ffree
insl
sub
mov
mov
sbb
pushl
bswap
lds
out
ret
pusha
mov
mov
fsubp
sbbb
das
icebp
pop
pop
xlat
sbb
jae
or
or
aaa
pop
call
bnd
cld
jmp
pop
sbb
jb
sahf
into
insb
js
xor
push
or
xor
aas
imul
inc
pusha
imul
sbb
les
outsl
int3
sbb
incl
in
in
sub
mov
cs
adc
lods
pop
rolb
lcall
mov
push
lret
pop
add
sahf
and
xchg
mov
int
std
ljmp
popf
lea
fs
loop
pop
movsl
jecxz
inc
sub
movsb
test
push
push
dec
push
sbb
inc
push
pop
out
gs
or
test
shll
mov
jmp
icebp
sbb
cmp
xchg
jb
pop
sbb
xchg
push
mov
pop
adc
popf
xchg
fs
test
jo
in
sbb
sub
dec
popa
outsl
adc
fsubrs
pop
mov
mov
add
bound
sbb
xchg
xchg
repnz
jb
jno
ljmp
lock
mov
mov
inc
cmpl
add
and
push
pop
decl
lcall
mov
push
inc
fildll
ljmp
cmpsb
addr16
push
add
inc
mov
add
push
lret
pop
adc
cli
incl
movsl
call
push
dec
xor
popa
cmp
ljmp
testb
data16
clc
dec
aam
jne
test
mov
lcall
hlt
push
in
push
bound
je
je
test
push
xchg
adc
or
stos
xor
stos
push
pop
xor
lods
mov
ret
sub
popf
loop
cmp
cmp
shl
pop
popa
dec
jns
loop
inc
popa
int3
rol
and
inc
in
xchg
xor
lea
call
call
push
or
sub
inc
mov
pushl
mov
push
adc
mov
mov
or
stos
or
dec
push
push
jp
sub
lods
xchg
inc
push
dec
mov
add
cltd
sub
enter
xor
mov
mov
pop
fwait
add
rcl
ret
dec
sbb
cwtl
in
pop
or
pop
stc
push
call
mov
mov
mov
ficompl
xor
aam
je
sahf
shrb
movsl
pushl
jbe
xchg
xchg
xor
dec
into
in
lods
pop
ret
cld
sti
or
mov
in
out
repz
dec
mov
test
fisttps
mov
les
push
mov
jl
add
pop
loop
pop
push
pop
or
and
andb
push
int
inc
icebp
or
std
sarl
test
add
imul
add
fdivr
aas
data16
shl
loopne
mov
xchg
je
sbb
add
pusha
adc
pushf
add
testb
add
sahf
pusha
or
int3
orl
lock
incl
push
cmpb
gs
pop
dec
out
pop
add
inc
and
insb
ret
rcl
stos
sbb
fistpll
std
mov
xor
dec
mov
bound
in
jne
int3
mov
mov
aad
call
fcmovbe
pop
cltd
mov
mov
jb
jno
dec
stos
push
or
inc
push
push
mov
adc
jg
push
xchg
adc
cmp
mov
sbb
mov
ds
popf
pop
dec
incl
fldl
xchg
addb
mov
test
pop
push
shrb
cmp
mov
stos
or
sbb
scas
out
xchg
jno
test
mov
sub
in
pop
jb
or
xchg
and
imul
xchg
es
insl
sbbb
aam
jnp
daa
xchg
sub
mov
mov
mov
mov
lcall
out
sub
push
fdivrs
xor
jge
inc
and
sub
cmp
das
push
pusha
into
ljmp
sbb
and
outsb
pop
icebp
decl
cmp
cmpsl
jmp
sub
cltd
or
pop
or
in
fucomip
mov
jns
push
mov
mov
xchg
decb
xchg
lds
add
inc
rorb
add
bound
testb
inc
add
mov
daa
mov
jg
mov
je
jns
lea
sub
cmpsb
sbb
or
ljmp
mov
xor
aam
aad
call
std
jg
daa
incl
pop
decl
xchg
mov
ja
les
iret
lret
sub
out
fcoms
mov
sbb
sbb
aaa
jle
mov
pop
ret
std
ljmp
and
and
mov
adc
xor
xor
jmp
incl
stos
cmp
sbb
fstps
xchg
mov
cli
jmp
lcall
sub
pop
dec
pop
adc
in
call
ds
push
or
in
inc
add
pop
lea
incl
sub
push
dec
roll
adc
sbb
push
jecxz
lret
push
jl
xchg
ret
adc
mov
jle
pop
push
and
fs
gs
mov
cld
decl
cli
jg
mov
mov
push
test
add
mov
adc
out
cmp
add
sub
jae
push
loop
mov
out
call
push
mov
add
fmull
mov
or
sub
push
mov
xchg
jecxz
das
push
pop
mov
sub
nop
mov
pop
push
inc
jmp
out
mov
sub
outsb
stos
enter
sbb
shrb
ljmp
test
rcrl
adc
and
mov
cmp
call
mov
aas
mov
pop
shr
aad
outsl
fdivrp
lea
xorb
ret
pop
add
rorb
incl
aaa
mov
sbb
or
xchg
insb
es
mov
jb
decl
aaa
lods
add
cmp
push
mov
sub
gs
call
loope
mov
lcall
jnp
std
pop
clc
mov
mov
dec
sbb
adc
fisubs
movb
ffreep
fsub
lock
aad
mov
or
mov
push
stos
icebp
mov
push
adc
lret
sbb
mov
sbb
pop
mov
aas
inc
mov
mov
push
and
incl
push
mov
loope
push
mov
lahf
xchg
dec
cmp
jg
mov
lret
dec
scas
xor
rcl
and
jae
xor
sbb
push
pop
push
jl
cmc
test
pop
sarl
add
push
clc
inc
das
movsb
mov
or
lods
sbb
insb
pushl
popf
jbe
ret
push
add
pop
pop
adc
jmp
dec
and
inc
push
adc
add
mov
adc
cmp
add
arpl
out
stc
mov
call
jg
sti
mov
cli
inc
loopne
cwtl
or
push
daa
or
decl
aas
inc
xor
sub
and
stos
add
pop
call
incl
pop
clc
add
sub
cmc
adc
xchg
mov
dec
in
lock
adc
jecxz
mov
mov
clc
icebp
decl
inc
xchg
sbb
cli
mov
mov
stos
xchg
push
add
ljmp
sbbb
aam
fcoms
mov
aam
xchg
fsubr
clc
push
adc
loopne
jp
decl
sbb
arpl
jecxz
rcr
or
pop
int
mov
mov
pop
clc
push
push
inc
xor
popa
sub
inc
mov
inc
sbb
sbb
addr16
les
addb
in
and
pop
cmp
pop
push
push
ja
clc
jne
inc
push
mov
xchg
sbb
adc
das
add
fisubrl
das
cmc
call
mov
and
sbbb
sbb
jecxz
mov
sub
push
incl
sbbb
jb
loope
js
xor
or
mov
mov
mov
imul
cmpsl
dec
xor
jno
jg
jmp
sahf
sub
push
lahf
out
add
push
cmp
mov
mov
push
inc
push
xchg
adc
sub
shlb
icebp
add
call
jg
test
mov
sbb
xchg
ret
add
push
inc
rclb
aam
cmc
call
inc
push
push
cmp
sub
jg
add
movsb
lcall
das
sbb
imul
or
ds
jecxz
dec
xchg
icebp
in
jg
lcall
mov
repnz
dec
ret
and
loope
test
push
xchg
inc
decb
mov
mov
push
test
xor
lods
icebp
aaa
push
hlt
call
cli
jl
mov
pushf
stos
ds
push
mov
ret
insl
pop
call
cmp
xor
mov
lret
adc
mov
push
pop
jl
rorb
call
sbb
scas
sbb
mov
movsl
js
push
addr16
ljmp
adc
lret
or
jmp
shrb
test
arpl
fs
jg
call
pusha
dec
mov
scas
sub
adc
lds
dec
movsl
mov
pushl
cli
sub
loopne
and
lock
mov
call
pop
jb
scas
loop
call
and
pop
lea
sbb
push
es
jbe
movsb
inc
hlt
cs
and
fs
repz
ljmp
sbb
add
and
lcall
inc
scas
fstp
cli
push
pop
xchg
cmp
idivb
loop
repnz
frstor
incl
stos
inc
pop
or
aam
sbb
xor
inc
xor
movsl
adc
imul
sbb
add
lea
inc
or
sub
jne
test
fsub
decl
test
dec
xorl
enter
movaps
add
mov
mov
ret
mov
daa
lods
or
std
push
mov
enter
xlat
pop
jge
mov
ljmp
in
faddl
lret
bnd
cmp
xchg
xor
test
scas
repnz
call
push
cs
mov
lret
inc
outsl
or
test
stc
cmpsb
lea
cmp
cli
pusha
rcll
pop
adc
add
lcall
shrb
mov
push
movsl
xchg
add
test
pop
stos
call
jl
mov
pusha
incl
adc
leave
push
or
mov
add
push
ret
imul
incl
movsb
iret
ss
mov
cmpb
ret
or
test
call
xor
pop
fbstp
xor
ja
cmp
sub
pushl
repnz
rorb
add
sub
cmp
mov
incl
and
pop
mov
fcomip
int3
push
xor
icebp
rolb
mov
pop
nop
sbb
xchg
and
in
add
xor
cli
decl
and
xor
ret
cltd
lret
xor
out
cs
xor
sub
sbb
fistps
xor
push
push
jl
mov
ljmp
mov
lcall
ficoml
pop
xchg
xchg
scas
clc
int
mov
adc
jns
vshufpd
hlt
lcall
pop
incl
inc
cmp
mov
das
push
and
incl
or
add
sbb
lahf
cmp
icebp
test
and
movsl
decl
pop
lea
cmpsb
hlt
xor
sub
add
inc
nop
and
add
cvtps2pd
addr16
mov
cmp
inc
jo
loope
xor
cmp
adc
std
ret
pop
decl
mov
inc
add
lea
daa
std
data16
pop
mov
lcall
mov
imul
sbb
sub
call
pop
clc
movsb
push
cmp
insb
adc
adc
movsl
ret
xlat
loop
or
lcall
leave
sbb
enter
dec
jnp
fsubrs
pop
popl
xchg
mov
mov
dec
daa
call
outsl
and
bound
and
sub
mov
mov
mov
andb
xor
adc
out
dec
call
or
add
ret
or
int
dec
mov
data16
mov
cmp
xor
mov
movsb
or
aad
push
popa
pop
adc
xchg
test
and
imul
das
cmc
jg
nop
mov
push
pusha
test
jl
fwait
push
daa
push
xor
jge
xchg
testl
or
lea
xor
pusha
add
aam
ljmp
mov
and
inc
or
les
rolb
mov
lock
cmc
jmp
insb
fdivs
sbb
rolb
ljmp
out
mov
mov
rclb
adc
aad
rcll
out
pusha
enter
mov
push
and
test
push
add
inc
add
dec
sbb
add
dec
xchg
and
cmpb
loopne
fbld
inc
sub
das
adcl
nop
dec
nop
adc
and
sar
add
add
push
lock
pusha
mov
inc
add
mov
add
mov
dec
loopne
rclb
inc
xor
inc
rorb
push
dec
js
dec
cs
imul
and
out
outsl
dec
or
add
add
es
or
loopne
dec
shll
das
lret
sub
subb
sub
jb
sahf
inc
pusha
stc
orl
mov
inc
sbbl
mov
nop
rcl
xchg
xor
mov
adc
mov
imul
rclb
in
fs
dec
or
leave
xchg
or
adc
cmp
sub
push
leave
leave
and
cmpsb
adc
in
add
nop
xchg
or
adc
scas
jns
sub
addr16
fisubrs
add
sub
and
enter
mov
test
xchg
daa
lret
sub
or
imul
jb
fcomps
and
xor
jmp
leave
leave
xchg
xchg
or
jns
in
pop
and
dec
push
cmp
jns
or
leave
leave
xchg
xchg
pop
clc
aam
mov
and
or
andl
or
pusha
or
daa
push
and
sbb
jb
xor
daa
addl
leave
cmp
xchg
or
or
sub
sbb
pop
push
xor
or
xor
leave
leave
cmp
je
jae
dec
push
or
ja
leave
xchg
movsl
sbb
xor
rorb
xor
xchg
xor
cmpsl
daa
daa
inc
sahf
inc
or
dec
mov
mov
enter
daa
daa
scas
orb
enter
fimull
sahf
pushf
aad
ss
or
outsb
push
je
in
in
sbb
cmc
enter
or
mov
in
adc
adc
and
jb
adc
enter
jb
sbb
pushf
or
out
xor
daa
iret
push
je
pop
xor
movsb
sbb
xchg
xchg
pop
cmp
push
xchg
inc
cs
mov
enter
out
jne
cmp
movsb
mov
stos
push
and
cmp
repnz
cmp
and
jns
dec
push
cmp
push
je
leave
xchg
xchg
hlt
movsl
dec
cmp
in
fdiv
push
test
daa
daa
clc
lds
mov
repz
jge
daa
dec
dec
in
je
cld
in
enter
dec
sti
cmp
cmp
movq
hlt
pop
out
pop
ret
dec
dec
stos
pop
outsb
push
cmp
addl
nop
inc
dec
addb
dec
push
cmp
or
push
mov
add
add
and
dec
icebp
or
enter
adc
lcall
sub
nop
xchg
xchg
daa
popa
add
sub
cmp
fs
or
adc
xor
pushf
cmp
adc
xchg
sbb
inc
and
xchg
xchg
xchg
adc
sbbl
cmp
xchg
daa
movsb
adc
fs
xchg
daa
daa
pushf
dec
mov
adc
test
and
inc
sahf
mov
js
enter
popf
icebp
add
leave
leave
xchg
sub
inc
sbb
in
adc
xchg
adc
adc
enter
xchg
in
leave
and
cs
dec
pop
jp
jns
repnz
adc
or
sub
dec
dec
push
or
pushf
cmp
nop
adc
xor
sbbl
nop
jnp
inc
sub
sbb
mov
sub
sub
in
nop
xchg
pop
into
push
test
push
dec
sahf
push
pop
ficoms
add
mov
fs
push
in
leave
nop
pop
out
test
mov
xchg
push
and
xchg
incl
lcall
mov
sbb
lods
repnz
push
fldt
push
ret
lcall
mov
int
cmp
jbe
inc
add
xchg
loopne
adc
jns
jmp
decl
fcoms
jnp
jbe
fdivs
inc
in
push
enter
lods
and
sbb
incl
cmp
loop
sub
lods
insb
das
pop
cmpsl
in
fcompl
inc
add
gs
mov
gs
rcrl
cwtl
lds
in
ret
fwait
mov
lcall
dec
out
dec
stos
push
push
shll
dec
sub
jo
push
xchg
mov
adc
inc
rorl
inc
push
jg
mov
cmp
pop
cwtl
mov
push
cmpsl
out
fidivl
movsl
sub
lcall
mov
lock
in
lods
xchg
pusha
lods
cmpsl
mov
xchg
or
pop
in
ret
cmp
nop
cmp
xchg
mov
pop
fdivrp
lcall
ss
xor
cmp
push
jb
dec
mov
aad
dec
sbbl
jg
and
add
test
mov
gs
sub
add
lds
decl
mov
lret
pop
dec
push
xor
push
and
roll
dec
mov
xor
xorl
sub
pop
inc
enter
icebp
sbb
or
mov
decl
dec
lret
stos
jle
lret
scas
push
push
pop
jae
inc
movl
push
pop
test
dec
pop
decl
xchg
add
cwtl
xor
mov
and
andl
sub
call
ljmp
ret
xor
clc
lods
lds
mov
mov
ret
add
call
es
pushf
xchg
adc
arpl
jne
xchg
jge
and
push
dec
jno
sar
pop
pop
add
fnsave
and
pop
mov
leave
cmp
xchg
jo
push
push
bound
jno
insb
jbe
sub
test
xor
pop
movsl
into
fidivs
dec
icebp
out
lods
pop
sarb
sub
xor
mov
test
sub
xchg
push
decl
add
stos
data16
hlt
int
or
rolb
push
lcall
incl
or
es
sbb
es
pop
mov
jmp
dec
inc
dec
lds
jne
arpl
xor
mov
pop
adc
xor
rcrl
lock
cld
xor
enter
ret
pop
push
mov
cmp
cmc
and
push
push
sbb
pop
mov
lret
adc
inc
cmpsb
adc
sti
incl
inc
adc
dec
cld
cmp
fisubl
pop
es
sub
mov
push
jg
imul
popf
test
pop
lcall
mov
add
jns
pop
lods
xor
call
popf
fwait
ja
or
int3
dec
icebp
scas
mov
xchg
imul
add
subb
jmp
lea
dec
and
sbb
xor
or
push
sub
jbe
inc
mov
incl
dec
in
mov
shll
push
or
loopne
cmp
push
mov
decl
je
adc
push
cmpl
out
cmpsb
dec
add
cmpsl
dec
mov
dec
mov
rcll
mov
adc
xor
ret
les
mov
inc
xor
xlat
push
adc
hlt
mov
xor
adc
cmp
mov
and
out
icebp
fiadds
mov
int
rcr
stc
insl
mov
pushl
pushl
repnz
sbb
das
pop
push
pop
loope
or
popf
sub
adc
inc
cld
jmp
ljmp
cld
jp
sti
iret
das
xlat
cmp
xor
pushl
in
int3
push
fidivrl
jecxz
mov
sar
jge
arpl
cmp
pop
icebp
in
sub
dec
jmp
mov
mov
xchg
aad
mov
dec
lret
iret
sub
mov
inc
pop
pop
jne
jnp
jmp
repz
jge
loopne
mov
popa
fwait
pop
mov
sti
lock
jnp
jo
mov
cmp
xchg
sub
mov
pop
mov
pushl
adc
rorb
xor
rcl
mov
imul
notl
cmp
push
fs
popa
mov
bound
fsub
mov
cmpsl
xor
fiaddl
ljmp
out
mov
push
mov
outsl
jge
rorb
in
xchg
adc
fisttpll
jo
pop
fcomp
cmc
movsb
jbe
out
imul
mov
inc
loop
cmpsb
ljmp
pop
js
mov
cmp
stc
aas
cmpsb
cmp
filds
jnp
jne
adc
jmp
into
jo
fstpl
dec
adc
test
lcall
outsl
pop
jl
cmc
rorl
cmp
mov
mov
incl
test
adc
cld
das
push
comiss
dec
or
mov
iret
js
sar
call
adc
mov
mov
shrl
or
mov
cmpsb
jns
call
push
mov
push
jne
ds
push
movsl
arpl
bound
outsl
ja
mov
std
mov
xchg
clc
cmp
lcall
pop
or
hlt
popa
jle
imul
repnz
push
imulb
fcompl
stos
aas
test
adc
jmp
stos
out
fidivrs
push
subb
lods
and
jle
jg
or
call
inc
inc
xor
ds
lods
es
sbb
cmp
jae
repz
cld
or
dec
call
clc
cwtl
cwtl
cmpsb
cs
test
out
sarl
aas
sub
ljmp
cmc
dec
and
icebp
jg
xor
mov
ja
xchg
push
cmp
pop
jmp
lcall
cmpsb
movaps
test
cmp
cmp
addr16
ja
mov
fidivrs
mov
decl
xchg
ja
sahf
lock
mov
sahf
mov
push
cs
imul
cmpsl
lcall
in
decl
sbb
cmp
xchg
repnz
ficoml
aam
mov
ficomps
mov
mov
imul
fdivr
add
cwtl
push
loope
negl
fucomp
fsubs
js
sti
pop
mov
push
mov
popf
dec
add
dec
fisubrs
sbb
repnz
sub
mov
cmp
notl
push
xchg
xchg
lahf
lcall
imulb
fdivs
pop
mov
and
aad
out
inc
xchg
lcall
cld
mov
xchg
test
lret
or
test
mov
mov
outsb
dec
cli
not
cmp
mov
xor
pushf
das
aaa
das
push
pop
call
mov
gs
jnp
repnz
jno
in
jmp
cmc
in
insl
fmul
jge
and
shll
or
sub
jnp
enter
ja
enter
repnz
jmp
push
mov
dec
and
popa
daa
lret
das
xchg
in
aam
xchg
into
out
mov
pushl
pop
mov
dec
mov
gs
push
mov
jp
js
fadd
out
add
adc
call
push
mov
cmp
lahf
into
iret
fdivrl
jle
and
or
mov
clc
dec
sbbl
fldt
dec
int3
push
into
das
mov
lret
pop
lcall
out
pop
shll
scas
inc
or
shll
xchg
or
add
jle
jecxz
mov
sarb
dec
jg
mov
xchg
fadds
lods
fmul
and
inc
ljmp
dec
mov
jbe
out
sahf
les
out
test
mov
das
xchg
add
leave
ret
pop
sbbb
mov
pop
clc
imul
jns
lds
mov
test
sarl
xchg
cmpsl
sarl
ljmp
add
scas
int3
mov
pop
sahf
in
xor
inc
push
cs
testl
mov
in
mov
jp
mov
dec
fnstsw
cmp
dec
fdivr
mov
pop
cmpsb
mov
mov
repnz
movsb
xchg
shll
ljmp
imul
outsb
ja
cwtl
xchg
pop
idiv
shll
outsl
jns
out
xchg
xor
sub
test
fdivr
ret
stos
push
push
xchg
ds
js
xchg
aaa
arpl
decl
insb
not
sub
fstl
jno
shll
ja
test
fadds
fstl
dec
daa
xor
stc
aam
lods
imul
dec
sub
pushl
mov
hlt
mov
jae
mov
outsl
mov
pop
out
jg
jg
stos
jg
das
cmp
pop
adc
xchg
pop
cmp
data16
decl
dec
aaa
in
dec
xorb
aas
xchg
fcomip
std
lret
mov
rcrl
mov
or
mov
in
stos
fldenv
and
es
push
aam
outsb
int
fnstenv
sarl
jg
xchg
inc
mov
sbb
std
pop
outsb
adc
ljmp
shrb
xchg
sbb
inc
adc
or
mov
int
clc
jbe
das
and
out
enter
jmp
dec
sub
lret
jne
hlt
scas
fsubrl
std
mov
mov
sub
pushl
fisttpl
mov
xchg
sti
hlt
repz
andb
pushf
aaa
mov
call
inc
xchg
or
mov
outsl
and
jmp
xor
jns
dec
or
push
iret
aad
jne
stos
loop
lret
jecxz
jle
int3
lea
aas
pushl
call
xchg
popf
in
lods
xor
sbb
inc
fs
sbb
xchg
lahf
sub
xlat
ficoms
enter
pop
lock
scas
mov
iret
push
sbb
pop
push
jecxz
data16
sbb
fstl
dec
enter
aas
insb
std
rorl
mov
insb
mov
fisttps
lds
call
fidivrs
popa
xchg
aas
xor
daa
push
dec
mov
scas
jmp
std
test
cld
add
and
fisubs
mov
fldcw
dec
mov
adc
rcll
mov
rol
loope
pushl
push
jne
jbe
ja
cmp
push
lcall
pop
or
inc
icebp
popa
icebp
ljmp
outsl
into
stc
mov
pushl
in
out
imulb
jecxz
ret
lret
sbb
hlt
pop
aam
cltd
imul
dec
call
iret
mov
hlt
jo
bound
in
leave
xchg
mov
sub
pop
mov
ss
mov
shrb
in
jg
xchg
lret
cld
push
lds
dec
popf
mov
out
pop
je
cmc
test
mov
jecxz
call
outsl
std
lods
insl
sub
xchg
stc
arpl
inc
inc
stos
lock
sbb
pusha
enter
dec
cli
pusha
mov
loop
jmp
inc
mov
call
inc
scas
inc
mov
ja
out
cs
push
push
mov
call
push
fwait
mov
fidivrs
outsl
dec
xor
lea
sbb
rol
popf
or
mov
lock
cs
int
je
jle
sar
pop
mov
fistpl
call
gs
aad
ljmp
mov
lea
push
cli
dec
mov
mov
xchg
mov
jle
ja
fdivs
push
jmp
jne
das
add
repz
out
xchg
pop
push
lahf
xor
lock
lcall
jl
jno
mov
fwait
jne
push
adc
icebp
inc
mov
int
out
fstp
mov
lret
lock
push
or
sti
test
xchg
jns
fldcw
jnp
jmp
movsb
je
cmp
xchg
xlat
mov
jg
lods
xchg
enter
test
imul
pop
sub
insb
sbb
sbb
mov
das
faddl
mov
mov
in
outsl
mov
lock
fimull
and
or
in
inc
fnstcw
es
ljmp
jo
jne
cmp
aam
sbb
sar
sub
fldt
incb
call
sar
mul
das
pop
insb
dec
mov
fwait
mov
pop
out
ret
test
outsl
clc
fucomip
movsb
jl
dec
in
and
cmp
mov
ds
mov
out
pop
inc
xlat
lahf
xor
inc
fsubs
call
hlt
clc
aad
adc
xchg
pop
lds
mov
ljmp
adc
loope
lret
lahf
lods
xchg
pop
add
rolb
mov
jg
or
dec
dec
adc
aad
jo
lcall
mov
idivb
outsl
fstpt
mov
out
mov
cltd
das
cmpsl
iret
sub
pushl
jp
rcrb
add
mov
imul
cld
jmp
arpl
movsl
insl
cld
stos
jecxz
or
stos
pushf
mov
arpl
jae
push
fcomps
mov
pop
insb
jg
aas
popf
inc
lods
fnsave
mov
jg
xchg
repz
push
loop
mov
int3
mov
push
cmc
lods
cmp
js
xlat
xchg
dec
ds
xlat
std
fdivr
leave
jae
sahf
lods
scas
mov
sbbb
outsb
inc
ficoms
repnz
das
fildll
mov
loope
mov
inc
cmp
sahf
scas
push
ret
sub
xor
xchg
testb
shlb
pushl
push
aad
loop
mov
loope
sbb
inc
push
out
loop
in
iret
aaa
clc
lcall
dec
js
jmp
xor
mov
loopne
mov
insl
ds
adc
ss
jle
out
mov
push
lcall
out
in
lds
xchg
xchg
mov
inc
jg
loop
aad
fistpll
icebp
jo
inc
mov
jge
mov
test
adc
test
adc
jp
in
or
ss
pop
ljmp
xor
stos
imul
lret
in
pop
ds
andb
addr16
dec
insl
and
add
lock
into
leave
adc
xchg
mov
loopne
stos
push
jmp
mov
jmp
jg
ljmp
mov
out
fistpll
mov
jle
popa
into
loope
iret
hlt
hlt
loop
test
sar
loopne
fimull
rcrl
inc
cmp
jns
les
inc
dec
decb
and
shl
jmp
mov
clts
std
decl
popf
cmp
mov
loope
negb
test
mov
mov
xor
adc
dec
sub
lods
dec
aas
pop
sbb
incl
or
jne
sbb
dec
mov
mov
test
mov
hlt
dec
out
repz
mov
lcall
movsl
lods
inc
push
es
sbbb
mov
arpl
or
mov
pop
push
jae
push
mov
add
adc
pop
loopne
xor
fmull
or
pop
adc
push
cmpsl
and
sbb
test
xor
adc
ret
out
jmp
shrb
ficoms
cmpsl
mov
add
neg
outsl
pushf
xchg
repnz
call
filds
into
add
bnd
jnp
sbb
stc
mov
sar
xlat
dec
push
movsl
nop
sbb
mov
cmp
std
push
mov
xchg
sbb
rcr
push
and
outsl
push
mov
lods
mov
ljmp
andb
pop
xchg
push
icebp
outsb
xchg
xchg
sub
je
mov
push
in
sahf
insb
fwait
aam
mov
adc
cltd
xchg
xchg
je
ljmp
pusha
aad
inc
sbb
lds
push
arpl
hlt
cmp
xor
pushl
and
jl
sub
jne
dec
in
or
daa
pusha
cmp
and
hlt
lods
mov
incl
cmp
scas
fdivrp
adc
pop
pop
daa
popa
lock
mov
pushl
ret
in
mov
movsl
mov
cmp
insb
pop
cmpsl
call
fldcw
imul
js
jmp
jmp
pop
fisubs
cmc
and
lcall
mov
jecxz
fcompl
aam
mov
mov
xchg
xor
pop
sbb
shrl
pushl
adc
popf
stos
jmp
aad
xchg
arpl
xor
inc
lock
push
jg
jmp
into
insb
push
and
cmp
sbb
push
mov
pop
push
mov
xor
push
cmc
jmp
mov
inc
sahf
jg
in
out
inc
cmp
xlat
mov
dec
out
mov
push
aas
jp
jmp
dec
sbb
stc
xchg
add
outsl
jmp
insb
mov
sbb
aas
ljmp
dec
mov
mov
iret
das
pop
mov
sbb
push
pop
dec
mov
mov
jae
ljmp
pop
call
mulb
loop
mov
inc
in
sahf
jle
fistpll
xchg
jp
int
mov
dec
cmp
cmp
pushl
cmc
mov
jmp
and
imul
mov
mov
xchg
push
and
cmp
xchg
ffreep
jns
outsb
fistps
cld
mov
sbb
clc
lods
xor
popa
pop
shlb
jle
mov
or
call
leave
pop
dec
mov
stos
mov
pop
mov
aad
sub
es
imul
push
push
out
pop
jns
enter
repz
adc
js
je
pusha
in
inc
dec
mov
ret
sub
mov
inc
or
imul
dec
mov
stos
je
ficoms
mov
ljmp
dec
mov
ja
pop
out
jl
sahf
lret
lods
mov
aad
test
popa
ljmp
lret
insb
fcmovnb
outsl
cld
or
out
js
out
inc
push
lret
xchg
cld
jg
popf
ss
in
pop
aas
sbb
xchg
mov
lds
and
jl
ljmp
outsl
sub
and
outsl
mul
aad
imul
cmpsl
jne
je
cmc
decl
decl
cmc
xchg
paddsb
leave
les
das
div
sub
jecxz
sub
fstpt
ja
in
subl
adc
xchg
sub
jg
adc
cmp
data16
imul
lcall
jmp
mov
andl
loopne
loope
mov
jecxz
clc
aam
inc
xchg
or
xchg
jns
daa
lcall
idivb
cmc
jge
add
movsl
pop
das
jne
push
xor
pop
iret
sub
mov
mov
sub
lods
pop
imull
dec
aaa
into
xchg
push
xlat
dec
fstpl
pushl
loope
push
leave
adc
xchg
jl
sbb
sar
pop
mov
jg
mov
sti
xor
decl
mov
aad
test
repnz
xchg
jmp
jb
mov
iret
call
ljmp
imul
scas
scas
out
sarb
ljmp
and
or
es
mov
cmc
out
and
inc
mov
cmp
jno
or
ftst
jb
or
mov
data16
mov
mov
mov
std
lcall
test
add
mov
push
scas
sbb
enter
pop
sub
jbe
pop
loop
aaa
cld
dec
hlt
imul
js
fldt
rorb
ja
mov
fnstsw
movsl
aad
push
ucomiss
jmp
ljmp
cmc
ljmp
xchg
int
jmp
out
ffreep
test
ds
mov
repnz
mov
inc
xchg
sti
xchg
cli
xchg
push
dec
sbb
jecxz
lcall
adc
loop
inc
ljmp
int3
mov
lret
cs
jmp
ljmp
mov
popf
aaa
mov
mov
sarl
sbb
or
ljmp
cmp
push
in
mov
xchg
adc
in
mov
ret
data16
call
ja
jle
dec
aas
cld
jp
inc
xlat
mov
out
into
out
sbb
test
mov
xor
pushf
fs
xlat
pop
imul
nop
in
adc
addr16
push
mov
mov
cs
adc
add
pushl
gs
dec
sbb
pop
cwtl
loope
stos
add
sahf
adc
xchg
aas
outsb
cli
add
pop
mov
cli
lods
mov
pop
dec
pop
movsl
adc
ljmp
inc
loope
xor
or
mov
std
ljmp
jp
and
fnstenv
xor
lock
mov
fcoml
mov
pop
movsb
ljmp
pop
xchg
dec
ficoms
dec
jnp
inc
int
aas
xchg
mov
scas
push
aam
stos
jne
aam
mov
cmpsl
fistps
and
ljmp
mov
test
pop
mov
fcmovnu
cmp
jge
or
lcall
inc
jmp
fdivs
fcompl
add
pop
pop
mov
xlat
mov
jmp
out
andl
pop
pop
sub
mov
cld
pop
ja
cltd
out
jbe
stos
or
mov
in
push
lods
mov
popa
adcl
aad
je
push
pop
pop
pop
ljmp
xchg
mov
fidivs
fcos
mov
jle
xlat
in
pushf
ret
insl
pop
mov
jg
mov
inc
pushl
fstpl
addb
std
in
std
cmp
fbstp
int
inc
cli
cmpl
pusha
fildll
cmpsb
cmp
outsl
xor
xor
mov
sbb
sar
pushl
je
bound
in
mov
pop
fdivl
int
sbb
das
hlt
enter
sbb
push
push
pop
xchg
decl
lods
sub
mov
adc
fsts
and
stos
lcall
loop
lahf
dec
push
pop
xchg
xchg
xor
lahf
mov
das
cmc
fisubrs
sub
mov
push
jns
cmp
call
cli
xlat
adc
cmpsb
enter
lea
bound
mov
pushl
fwait
lcall
pop
insb
div
mov
push
dec
ljmp
lock
insb
dec
pop
jp
xor
ja
pop
pop
cmp
rclb
mov
mov
dec
faddp
addr16
in
mov
pop
mov
jae
ljmp
decl
mov
jne
dec
jg
mov
mov
mov
cwtl
xchg
movsb
lcall
ljmp
pusha
mov
sbb
jge
push
mov
movsb
adc
jle
scas
mov
lcall
and
xchg
dec
cs
cltd
es
or
pop
rolb
xchg
imul
clc
dec
cmp
push
pop
jnp
jnp
xorb
xchg
pusha
xchg
cltd
cmpsl
or
test
jg
cltd
push
or
inc
jle
xlat
sti
add
cmp
xor
icebp
ljmp
jns
sub
lret
and
sub
repnz
xorl
or
repnz
mov
icebp
arpl
mov
xchg
or
ret
dec
mov
out
dec
test
push
js
arpl
cld
std
rcrl
decl
js
inc
in
pop
or
mov
in
xchg
pushl
clc
call
ficoml
push
jg
xor
xchg
arpl
jnp
dec
jbe
jle
xchg
decb
adc
sub
repnz
lea
cmpsb
mov
decl
sub
ds
mov
xchg
inc
jg
das
and
mov
jb
lret
pop
idivl
jmp
and
loope
pop
cmp
mov
dec
pop
push
mov
loop
lcall
out
jmp
mov
mov
decl
ret
mov
imul
xchg
dec
subl
decl
out
dec
out
mov
adc
shrl
in
insb
and
sub
cli
adc
aaa
cli
jmp
dec
clc
mov
mov
xchg
jnp
dec
pop
push
pop
das
dec
mov
pushl
ja
push
js
roll
shl
sub
dec
cmp
xor
push
mov
imul
je
cmp
cld
cmc
mov
movsb
or
arpl
out
adc
fwait
xchg
aad
fstps
shlb
jl
lock
or
int3
cmp
cmp
xchg
ret
cmp
mov
mov
dec
imul
pop
mov
jae
cmp
aaa
inc
or
inc
call
fcmovnb
call
in
addr16
es
fwait
insl
out
mov
xchg
cli
fwait
sub
mov
cmpsb
testb
add
dec
pop
push
insb
xor
das
adc
lods
in
test
mov
adc
imul
lock
jge
or
nop
mov
lock
pushl
icebp
inc
scas
sbb
xor
lea
push
dec
test
mov
and
mov
fisttpll
adc
incl
cmp
outsl
insb
cmc
mov
mov
mov
jg
pop
sarl
call
popf
jle
je
xchg
pop
sub
iret
push
and
movsb
fsts
adc
push
mov
enter
gs
sbb
jbe
jge
xor
test
sar
sti
mov
int
rcrb
sbb
in
into
pop
aas
negb
jmp
mov
cmp
cmp
hlt
inc
jg
pusha
dec
xchg
mov
inc
cs
stc
xchg
incb
jg
into
imul
jae
fcoms
jg
inc
dec
leave
incl
bts
jmp
cs
inc
stc
sti
mov
jnp
decl
cld
jmp
mov
cmpsl
addl
fnstcw
arpl
das
pop
pop
cli
in
roll
das
mov
dec
insl
mov
ljmp
loope
add
popa
ficoms
sub
rorb
jl
jmp
mov
push
icebp
out
out
cs
jecxz
sbb
jg
js
and
fldenv
pushf
push
or
lock
out
sahf
xchg
stc
cld
repnz
decl
sub
fs
xor
xor
mov
sbb
mov
mov
pop
pop
inc
xor
fwait
pop
loopne
icebp
pop
repz
fsub
dec
daa
xchg
movsb
sbb
call
jg
insl
push
mov
sbb
js
dec
fisttpll
push
stc
adc
ljmp
std
fcoml
xor
mov
pop
lods
shll
mov
lret
cltd
mov
mov
test
lcall
into
fcoms
out
jnp
and
iret
mov
pushf
sti
fndisi(8087
sbb
xor
jg
cmp
aas
popa
fwait
aad
xchg
mov
adc
movsl
mov
lock
shr
mov
daa
shlb
push
fisttps
cmp
in
cmp
das
std
ljmp
outsb
test
jb
int
out
insl
test
mov
je
cmc
lods
pop
sar
dec
sbbb
inc
xchg
test
scas
roll
cld
cmpsb
xor
mov
cmp
out
fdivrl
icebp
pop
clc
jmp
ja
mov
cmc
push
xchg
in
sbb
sub
js
decb
test
shl
inc
repz
mov
mov
mov
and
jnp,pn
ljmp
ss
sbb
fistpll
mov
cmc
idiv
or
jg
jl
ljmp
adc
adc
xor
cmp
pushl
mov
fsts
ss
lahf
jg
fsubs
mov
lahf
dec
mov
adc
bound
test
mov
mov
out
push
decl
cmpsl
leave
arpl
jbe
notb
fdivl
fistpll
add
lahf
push
in
jmp
gs
mov
mov
fucomip
pop
repz
arpl
daa
sahf
sbb
aam
push
loop
dec
adc
ss
popa
push
shlb
mov
std
xchg
cli
ja
insl
xlat
push
cld
adc
fildll
push
popa
or
scas
xor
xchg
decl
ss
or
mov
idivl
mov
jp
mov
mov
incl
in
jl
test
movsb
sarb
cmp
jmp
pop
outsl
jmp
mov
fisubrl
cmp
jle
mov
adc
or
dec
push
mov
lretw
ja
jg
shlb
cmp
lcall
cmc
inc
and
mov
out
iret
mov
dec
out
xor
and
testl
decl
push
jns
or
in
vphadduwd
lea
fisttpll
ljmp
cmp
cli
test
xor
fst
and
mov
cmpsb
jnp
mov
and
and
repz
in
lcall
xor
in
xchg
sbb
test
dec
adc
rorl
pusha
dec
mov
mov
cli
das
daa
fstps
jle
jmp
in
sub
fucomp
xor
fisubl
movsl
test
fwait
iret
mov
cld
mov
sub
insb
addr16
inc
or
das
hlt
push
cwtl
stos
pop
mov
pop
mov
xchg
imul
mov
fucomip
jle
insl
or
aad
jnp
or
xchg
xchg
out
push
scas
data16
test
add
sub
fistpll
out
cmp
cld
div
xlat
cld
adc
data16
call
fnstenv
out
stc
test
cs
pusha
sub
ret
sub
push
scas
cld
and
hlt
test
mov
mov
jno
loope
int
jns
hlt
lea
gs
aad
inc
das
cli
incb
lcall
repz
adc
mov
hlt
mov
cmp
pop
jge
in
or
jcxz
imul
jmp
movsb
pop
leave
fcmovnb
mov
push
cmp
in
mov
mov
jno
sbb
les
dec
cld
pushl
in
pop
or
outsb
cmpsb
jne
pop
mov
mov
stos
incl
shl
mov
xchg
rcrb
aas
scas
incl
fstl
jbe
jp
mov
popa
iret
movntq
out
cmp
stos
cltd
pop
ljmp
test
cmp
push
cs
lcall
dec
cmp
int3
jns
in
mov
dec
dec
aad
out
ret
mov
scas
out
mov
pop
lods
rcl
mov
cmp
fiadds
jg
cmp
push
cmp
bound
neg
add
mov
adc
or
loopne
fs
sbb
subl
lahf
jo
pop
cmp
dec
std
mov
fwait
mov
push
in
popa
mov
clc
icebp
ljmp
aad
lods
out
in
out
out
xchg
fucomip
jns
dec
pushf
fistpll
rcrl
or
popa
cmp
mov
icebp
imul
xor
pop
cwtl
cmp
push
orl
pushl
sbb
pop
out
jnp
cmp
notl
test
arpl
xchg
xor
mov
mov
lcall
cltd
push
mov
es
loop
xchg
cs
xlat
cwtl
popf
mov
into
adc
call
dec
aaa
fisttps
jb
or
call
inc
ljmp
int
inc
push
sub
inc
sbb
es
and
pop
in
in
dec
lret
cltd
pop
frstor
cmp
lcall
addr16
arpl
outsl
stos
es
mov
mov
jge
fistpll
in
dec
cmpsb
movsl
jg
test
sti
out
mov
cmp
or
and
pop
loop
jle
sbb
cltd
xorb
mov
mov
ljmp
jecxz
sub
ret
imul
mov
mov
sbb
push
cmp
loop
out
call
ret
pop
push
lock
lcall
std
add
decl
imul
notl
daa
or
les
popf
push
sub
fwait
lcall
std
or
inc
inc
jns
imul
arpl
xchg
loop
or
ljmp
cld
inc
inc
fiaddl
lret
ret
iret
cmc
aaa
dec
fsts
lret
cmp
mov
stos
out
out
jmp
call
mov
pop
push
cmp
xchg
push
pop
or
decl
stc
pushf
repz
xchg
stos
aad
or
jns
mov
dec
fstpl
ljmp
stos
aaa
xchg
jbe
pop
mov
clc
shl
daa
xor
mov
neg
xor
sub
filds
decl
cld
inc
repz
add
shl
mov
push
repz
push
ljmp
das
sub
imul
pop
fcomi
jg
pop
mov
xchg
pop
les
daa
getsec
mov
sub
adc
mov
movsl
xchg
and
incl
scas
mov
inc
dec
cmp
decl
push
inc
call
jno
cmp
fistl
jmp
xchg
call
int
popa
add
mov
pushl
in
adc
push
outsl
scas
lcall
jecxz
push
push
int
decl
xchg
xor
mov
out
push
push
ljmp
decl
or
lods
xchg
out
fdivrs
stos
jl
popa
inc
cmp
fisubrl
decl
xchg
in
jne
sub
cmpsl
sbb
das
aad
xor
incl
stos
test
lds
cmp
xor
daa
in
or
fidivl
repnz
std
jmp
lcall
enter
pop
out
lahf
insb
imul
push
xor
gs
jg
incl
lret
in
test
xor
ret
aam
cli
jbe
not
pop
sbb
push
jmp
call
icebp
sarb
xchg
mov
dec
scas
rcr
xchg
mov
xchg
pop
jl
push
xchg
subb
sbb
lods
imul
xchg
lret
mov
addl
mov
inc
call
push
pushf
adc
sahf
sbbb
pushl
sahf
cmc
outsl
push
or
int3
mov
aas
jne
push
sub
shrb
aad
dec
test
pop
sbb
jmp
clc
call
xor
ret
sbb
das
orl
jle
incl
pop
sub
jns
sbb
push
test
xchg
repz
mov
notl
rcll
outsl
inc
repz
fcompl
jp
pop
rcrl
cs
in
imul
sbb
pushl
mov
jecxz
sbb
std
movsb
js
hlt
sub
rcll
ret
cmp
je
push
mov
adc
lcall
xchg
push
or
dec
roll
decl
stos
adc
fldl
mov
jmp
inc
aas
std
sub
mov
or
sbb
gs
incl
out
iret
mov
insb
mov
testb
mov
mov
aam
loope
std
pop
call
sub
test
inc
mov
xor
std
jl
icebp
pop
mov
xchg
jg
xlat
clc
scas
push
sbb
lods
mov
roll
push
and
push
inc
mov
in
mov
shl
aas
cmpsb
jg
mov
lea
decl
mov
push
mov
scas
add
add
rorb
insb
cli
std
into
cmp
shl
ljmp
lcall
js
cmp
xchg
test
mov
dec
lret
sarl
inc
pop
pop
in
loop
sub
fiadds
jne
mov
mov
lods
aas
in
mov
icebp
test
sub
or
push
sub
ss
das
std
jmp
jb
mov
xchg
inc
arpl
pop
sub
mov
mov
test
sti
xlat
jg
mov
fcomp
sti
ret
dec
pop
hlt
gs
incl
jg
fisttps
std
cmpsl
std
fs
arpl
mov
insb
sub
or
pushl
cmp
jae
ss
sti
adc
mov
pop
cld
decl
addr16
in
fldenv
enter
sbb
pop
lods
dec
mov
stc
lcall
lahf
push
js
test
add
fstpt
push
jns
mov
mov
pop
clc
fnsave
call
loopne
xchg
jmp
icebp
mov
sbb
and
sbb
fwait
sbb
cmc
cmpsl
lock
out
out
sbb
cmp
popf
mov
stc
das
fs
lods
mov
jge
cmpsl
das
cs
aam
shrb
imulb
xchg
add
into
cli
fstp
mov
fnstcw
insb
pop
ljmp
jno
dec
sub
pop
push
in
mov
sub
xor
decl
pop
xchg
pusha
ljmp
js
push
sahf
jmp
sbb
stc
sbb
sub
cmp
sbb
push
cmc
cltd
jb
inc
sub
xchg
xchg
in
inc
pop
call
add
pop
out
ljmp
pushl
aas
xlat
sbb
sbbl
outsl
add
sub
fucom
fstpt
cmp
test
js
in
push
and
push
ret
pushl
mov
divl
xchg
fildll
shll
mov
por
ds
shl
push
clc
ficompl
sub
daa
fiadds
inc
in
fistl
mov
das
pop
sbb
cmpsb
pop
rorb
std
jg
fcom
mov
hlt
mov
sbb
inc
icebp
ficoms
or
das
xchg
jle
lret
and
movsb
sub
pop
cmp
sub
cli
incl
insb
mov
js
push
xor
jae
in
fcos
in
ljmp
daa
sbb
pop
fucomip
xchg
sbb
mov
inc
mov
fstl
pop
ljmp
lods
loop
xor
fists
add
jle
aam
inc
test
dec
lret
cmpsl
ja
mov
sbb
scas
sub
mov
cmp
out
pop
ret
stos
stc
pop
aas
loope
adc
in
cli
lret
xlat
bound
dec
rcrl
xor
or
xor
xchg
mov
das
insb
inc
data16
inc
mov
pushl
lret
inc
fcomps
mov
mov
push
enter
fucomi
push
xor
shrb
mov
out
xchg
call
cli
pushl
subb
cmp
dec
dec
push
outsl
jge
push
dec
mov
push
mov
pop
sbb
adc
dec
jb
incl
xor
cli
mov
xchg
shlb
rolb
push
in
sbbb
mov
mov
jae
sahf
dec
add
fldenv
mov
cld
insb
xchg
sti
call
xchg
inc
iret
inc
das
push
mov
call
sub
dec
mov
mov
push
outsl
pop
add
call
hlt
int
jmp
cmp
pusha
in
imul
test
sbb
jnp
mov
incb
in
mov
lock
adc
xor
add
cmpsb
pushl
cli
lcall
movsl
inc
pushf
jns
push
repz
dec
in
jg
mov
pushl
mov
sbb
or
xchg
add
test
test
imul
fiaddl
pushl
mov
jb
cwtl
jae
xchg
adc
decl
sub
lods
mov
adc
jae
mov
ja
mov
mov
ljmp
sub
loop
cmpsb
pushf
das
frstor
jb
out
insb
pop
xorl
lcall
sub
xchg
imul
call
loopne
int
mov
out
fs
inc
xchg
incl
xor
mov
and
jmp
inc
sahf
sbb
lcall
ret
push
lds
scas
cmp
in
jmp
xchg
cmp
fldt
negb
ljmp
lock
cmp
call
sub
push
mov
test
andl
inc
rol
or
ljmp
mov
daa
push
int3
add
fwait
mov
push
dec
jbe
icebp
lret
stos
jbe
fnstsw
push
mov
pop
rclb
loope
pop
aaa
cli
pushl
inc
mov
jl
cwtl
pop
dec
add
push
mov
decl
lcall
pop
lea
repz
jg
subb
mov
fsubr
cmp
in
scas
add
clc
rcrb
xchg
push
mov
je
hlt
aas
inc
int
sub
shlb
out
mov
incl
fistpll
jns
clc
mov
outsl
icebp
mov
ret
sub
stos
gs
scas
aas
lcall
fistpll
jp
xchg
inc
stos
cmp
ja
push
test
das
mov
cmp
mov
repnz
lret
mov
popf
imul
inc
mov
sub
cld
dec
jle
mov
cmpsl
pop
cwtl
pop
lcall
jg
cli
xchg
and
data16
pushl
sbb
push
dec
stc
xchg
fisubrs
sti
mov
push
das
jne
mov
incl
mov
imul
ljmp
jns
daa
pop
js
aad
scas
xchg
out
test
xchg
lret
xchg
jnp
jg
in
jae
mov
aam
das
dec
rorl
mov
aaa
incb
in
ss
loopne
std
dec
mov
das
fdivr
push
fwait
jge
mov
aad
dec
sub
jg
push
push
xor
push
cmpb
push
mov
shl
cwtl
jmp
mov
popa
pop
mov
lods
aam
data16
lcall
in
push
popa
cs
cmp
jg
pushl
sub
dec
mov
cmc
inc
xchg
pop
mov
mov
rcrl
mov
mov
in
xchg
mov
lcall
pop
push
jg
push
xlat
gs
jg
out
mov
out
sbb
lcall
outsb
xchg
scas
push
pop
fnop
in
mov
mov
mov
xor
or
ljmp
test
std
mov
pop
dec
mov
ja
call
daa
int3
fimull
push
cmp
jl
mov
loop
push
mov
mov
or
test
lock
fsubr
sti
inc
jns
jbe
rorb
ljmp
movsl
cli
cmp
pop
ds
out
cld
nop
adc
ja
jns
mov
lds
and
push
jg
imul
cwtl
imul
sar
jmp
fnstsw
call
dec
out
sbb
int
mov
incl
or
dec
and
mov
repz
jl
or
fdivl
jmp
sub
xchg
fists
insb
mov
cs
pushl
outsl
out
xor
into
push
xor
into
jmp
jg
rcr
mov
lcall
pop
stos
xor
and
je
popa
xchg
clc
fstpt
test
push
cmp
stos
pop
insb
fld
sub
cld
js
push
sbb
jg
mov
and
xchg
push
mov
mov
pusha
int3
xchg
xor
mov
push
mov
fucomip
mov
ficomps
in
je
xchg
mov
and
jmp
jmp
jb
push
cwtl
orps
mov
xor
gs
pop
add
mov
push
ss
out
jle
cmp
scas
mov
inc
in
outsb
stc
dec
xchg
lock
push
mov
dec
cmpsb
adc
mov
lods
dec
ljmp
dec
lcall
hlt
mov
cmp
and
into
aaa
lea
mov
out
pop
aam
mov
cwtl
and
mov
stc
arpl
sbb
mov
and
call
pop
sbb
movq
movsl
aaa
sub
fistps
cmp
in
addl
jb
pushl
imull
scas
cmc
rorb
in
imul
repz
dec
stos
lahf
and
mov
pop
enter
mov
ds
dec
or
or
cld
jg
jecxz
jnp
dec
sti
sub
xlat
stos
shll
adc
rorl
jne
cli
xor
ljmp
outsl
dec
mov
xchg
xchg
js
into
mul
push
xor
mov
clc
decl
xchg
gs
outsl
scas
pop
imul
loope
leave
loop
call
inc
sti
and
rcll
mull
mov
in
mov
hlt
lcall
push
test
outsb
popa
aam
push
jmp
mov
sub
pop
das
out
inc
decl
mov
add
js
inc
decb
xchg
ljmp
and
dec
xchg
outsb
xchg
and
es
xor
cmp
pop
or
jle
test
jecxz
std
push
nop
fidivs
clc
aaa
incb
mov
pop
jno
out
inc
xchg
push
and
div
mov
pop
call
mov
aas
popf
test
lret
out
ljmp
icebp
fcmovnb
xchg
mov
or
cwtl
or
dec
xchg
push
push
push
mov
pushf
repz
idivl
inc
inc
dec
fimull
mov
pusha
lock
aas
sarb
movsl
and
pushl
sarb
cmp
ret
sub
mov
aaa
je
cld
out
scas
mov
xchg
test
inc
dec
leave
push
aam
cmc
sbb
movsb
fsubrl
movsl
pop
test
pushf
scas
mov
jg
lret
js
push
lock
fidivrs
in
roll
mov
fmuls
mov
popf
ret
dec
mov
aaa
cmp
pop
mov
jmp
push
adc
sti
out
jecxz
inc
adc
dec
mov
mov
jecxz
mov
faddl
sub
loope
adc
rcr
gs
cld
das
std
std
lds
cld
sub
dec
or
bnd
jb
jo
jmp
outsl
cmp
pushf
aam
jp
xorb
sbb
aas
jle
xor
jmp
out
mov
iret
mov
dec
lods
xlat
int
xchg
lahf
insl
clc
mov
xchg
lock
jg
bound
or
mov
sti
cltd
imul
cmc
ljmp
outsb
lahf
loope
stos
push
inc
ljmp
push
and
fdivrp
lcall
mov
outsl
push
imul
lret
inc
out
xor
repz
jg
loope
pop
sbb
outsb
fdivp
mov
aaa
call
lret
cld
pop
dec
clc
call
xor
mov
push
xlat
mov
jmp
je
sar
dec
das
icebp
call
mov
mov
gs
int3
push
pop
mov
push
mov
mov
and
mov
lahf
jg
mov
negl
adc
ljmp
jp
cmpsb
cmp
jle
fsubl
push
aas
in
sbb
jg
pop
sbb
mov
jb
addr16
scas
aad
pop
pop
ljmp
jmp
xor
test
jnp
js
jg
pusha
inc
xchg
je
into
jno
mov
mov
popf
out
decl
pandn
jecxz
fbstp
jl
mov
scas
adcb
iret
stc
call
idiv
arpl
and
push
jbe
rorb
sbb
xchg
jne
loope
test
mov
divb
out
jge
cmp
in
cli
fdivr
les
call
dec
xchg
sub
pop
stos
ret
cmpsl
dec
xchg
mov
mov
aad
push
cmp
test
add
sti
mov
orl
cli
xchg
mov
adc
or
lcall
pop
arpl
pushl
cmpsl
push
in
cmp
push
mov
inc
mov
mov
aam
cmc
xchg
mov
lock
adc
outsl
adc
ljmp
jo
clc
in
in
test
lcall
pop
mov
gs
loopne
std
sbb
les
test
ds
std
or
xor
xor
loop
ljmp
sbbb
cli
cld
pop
popf
push
push
push
aam
call
fbstp
fucomi
out
inc
push
pop
int
push
imull
les
mov
mov
push
in
std
xor
incl
ret
lret
xchg
xlat
scas
mov
mov
je
add
scas
or
pop
and
mov
aad
dec
fscale
jmp
ficoms
mov
adc
pushl
lods
mov
xor
mov
push
cmpsl
int3
pop
xor
push
pop
rolb
cmp
aaa
scas
aaa
mov
rep
arpl
or
push
lods
push
in
dec
stos
jg
and
repz
lret
rolb
scas
js
into
or
mov
xlat
pusha
cmc
push
jmp
mull
inc
clc
adc
out
jno
dec
jg
stc
cld
pop
mov
cmp
push
into
and
inc
out
outsb
std
lods
and
or
rcl
xor
int3
jmp
pushf
popf
mov
mov
fildll
mov
lret
lods
rorl
xchg
ljmp
mov
mov
adc
push
jbe
lods
ja
mull
xchg
call
xchg
push
cmp
out
jne
add
mov
rcr
std
inc
or
xor
ljmp
hlt
std
rolb
ds
rcl
cmc
fwait
jp
filds
aas
lret
out
fwait
mov
bound
add
arpl
ficomps
call
enter
icebp
cmp
pop
mov
sbb
dec
lds
outsl
lock
clc
fistps
aad
ljmp
jbe
das
lock
ljmp
outsb
addl
mul
pop
repnz
mull
pop
jae
xor
push
incl
xchg
rorb
xor
into
push
push
pop
sbb
jg
inc
adc
fdivrp
iret
jmp
mov
stos
mov
dec
cmp
push
xor
decl
aas
cmpsb
movsb
cmp
sub
xor
adc
cmpsl
ror
xlat
sahf
int
in
cmp
decl
call
repz
or
inc
das
sub
and
call
jle
xchg
mov
idivb
inc
test
inc
fbstp
fiaddl
mov
daa
xchg
hlt
jmp
lock
nop
out
or
jae
cmp
xchg
jle
xchg
fs
ret
push
mov
lds
jecxz
adc
ljmp
repnz
pop
jo
shl
leave
jg
cmp
mov
xor
sbb
outsl
push
dec
addr16
mov
movsb
cld
sbb
mov
or
daa
mov
or
aad
and
sub
inc
out
loop
dec
xchg
ret
push
mov
scas
dec
push
pop
ds
shrb
xchg
lods
add
hlt
xchg
adc
push
cli
cs
movsl
inc
ljmp
xchg
and
addr16
addr16
jmp
mov
shrl
call
cmp
mov
xchg
mov
psubq
shlb
mov
cs
mov
dec
inc
lcall
push
lods
rcrl
jmp
pop
mov
test
jnp
fsubrl
imulb
lcall
jnp
loop
xchg
sbb
sub
cld
lods
in
jae
insb
movhps
xchg
daa
scas
std
mov
movsb
lcall
rorl
mov
nop
mov
and
jge
data16
jmp
fnsave
xchg
leave
cli
lahf
cmp
dec
loop
int
xchg
int
rcrl
mov
jmp
pop
mov
push
icebp
loopne
fmull
pusha
stos
out
andl
mov
mov
jle
mov
call
xchg
pop
out
push
call
push
ljmp
and
xlat
addr16
roll
xlat
leave
stc
ja
imul
data16
pop
adc
loopne
fistl
movsb
mov
ja
sahf
pop
shll
jl
adc
jg
ljmp
mov
loope
mov
mov
loopne
jle
test
inc
dec
stc
lret
sbb
decl
add
jne
ljmp
mov
into
cwtl
idiv
jg
mov
daa
pop
mov
ret
or
sahf
cmp
stos
ja
outsb
call
cmp
out
push
xchg
inc
sub
das
stos
jnp
mov
or
cmp
aaa
clc
call
repz
std
test
les
mov
pop
xor
jmp
cltd
adc
enter
adc
fnstsw
xlat
sbb
clc
aad
fidivs
lods
jecxz
push
xchg
decl
mov
mov
or
xchg
sub
inc
sub
das
jns
decl
pop
iret
xlat
or
or
imul
push
test
mov
das
or
cmp
icebp
in
add
stos
adc
popf
fnstsw
call
cmp
aas
in
xchg
push
shrl
xchg
mov
in
outsl
stos
jge
cmpsb
aad
cmp
clc
int3
xchg
inc
pop
adc
fsts
frstor
mov
mov
lea
lret
cmpsb
in
aaa
inc
rcrl
je
leave
jl
aaa
cli
jg
cmp
push
sub
cld
cli
hlt
call
pushl
lcall
into
pop
cli
pop
std
adc
mov
mov
fistpll
ja
mov
xchg
xlat
mov
das
cmc
push
xor
dec
push
into
mov
lahf
aad
mov
call
cmc
jo
xlat
inc
lods
cmp
sbb
ja
adc
push
push
jmp
ljmp
sarl
scas
sbb
xchg
out
mov
cmp
mov
cmp
jg
movsl
scas
fsubrp
lods
xor
testb
pop
sbbb
inc
test
mov
jge
std
jg
aaa
push
mov
cmp
pop
cmp
repz
inc
xchg
fistpll
cmpb
incl
test
ds
cmp
rclb
xchg
cmp
mov
int3
in
in
sub
or
inc
cmc
mov
xchg
dec
iret
sub
xor
nop
shrl
pop
xchg
stc
inc
sti
decl
dec
mov
jno
lods
cmp
jns
outsb
out
fisttpll
decb
shlb
mov
pop
xor
clc
ljmp
cmc
nop
leave
cmp
inc
insb
pop
outsl
mov
aas
divl
icebp
jmp
mov
lea
dec
loop
xchg
mov
dec
push
mov
cmovs
jbe
dec
mov
out
testb
mov
jno
outsb
sub
pushf
inc
jg
jle
sbb
mov
xchg
out
scas
lock
ljmp
sbb
dec
cwtl
mov
cmp
iret
or
push
stc
call
ljmp
iret
push
push
mov
stc
push
pop
lods
aas
inc
cmp
dec
out
push
fs
ljmp
dec
and
out
sti
stc
test
test
xor
jmp
imul
into
adc
aaa
fsubrp
sbb
daa
mov
int
insl
mov
dec
xorb
movsb
sti
mov
repz
incl
mov
cmp
inc
or
adc
dec
std
cld
inc
ficoms
jae
inc
idivl
aas
daa
test
mov
xchg
fidivrl
int
mov
mov
dec
xchg
in
insl
ljmp
repz
mov
dec
shl
pop
js
adc
sar
lcall
xchg
mov
ljmp
call
mov
mov
inc
xchg
arpl
aam
xchg
xlat
lods
pcmpeqb
sub
aas
mov
stc
xchg
cltd
outsl
xor
fnstsw
pop
mov
lea
sub
cli
mov
mov
orl
and
or
outsl
std
aaa
pop
pop
cmp
add
inc
jb
xchg
mov
movsl
jbe
sbb
gs
pop
lahf
hlt
mov
xchg
mov
cltd
mov
jmp
int
into
inc
negb
jmp
pop
test
mov
loop
clc
push
pop
test
cmp
xchg
pop
xor
out
mov
dec
call
pop
repz
cli
popa
push
insl
cmp
and
mov
cmp
scas
mov
into
pop
cmp
fsubl
pop
ljmp
mov
mov
mov
cmpsb
or
js
jl
in
out
pop
sub
aad
out
mov
decl
cmc
mov
cmp
sub
jb
jne
inc
xchg
negb
jge
fmulp
clc
jnp
ret
adc
test
mov
mov
xor
xchg
cli
xchg
add
cs
ret
or
enter
loop
pop
loop
jno
imul
popf
rclb
push
shrl
mov
decl
fsubs
repz
lods
adc
fisttps
cmp
js
inc
iret
sub
repnz
fbstp
call
adc
adc
push
pop
ljmp
ljmp
pop
ljmp
bound
shrb
repnz
in
sbbl
xor
scas
cmpsb
icebp
notl
scas
pop
js
pusha
sbb
decl
jg
xor
cld
pop
jno
pop
mov
jmp
and
divl
push
pop
neg
xlat
sti
test
jp
call
pop
mov
out
jg
cmp
testl
lock
movl
or
ljmp
es
and
in
je
mov
insl
test
and
addr16
mov
fists
xlat
adc
xor
out
mov
call
adcb
aaa
fcoms
icebp
jnp
mov
mov
hlt
jmp
mov
ja
jns
jae
jmp
insl
cld
inc
or
adc
aad
xchg
stos
out
aad
fisubl
pop
inc
in
clc
ljmp
pushf
jmp
push
hlt
ret
rclb
lock
shl
cs
xlat
xor
push
pop
dec
jb
loopne
sbb
fwait
adc
lret
push
ljmp
sub
fistps
pop
xor
jbe
mov
cld
decl
scas
jb
cld
mov
das
jp
js
pop
adc
jl
cmpsl
cli
xchg
loop
jp
jg
xchg
mov
jmp
dec
and
out
cmpb
jg
ljmp
pop
loop
pop
test
cmp
lock
ret
mov
decl
or
popa
fwait
in
dec
cld
in
test
ljmp
mov
scas
ljmp
dec
cmpsb
inc
daa
test
call
fists
push
mov
xchg
jae
push
mov
outsl
push
adc
jecxz
sub
into
or
mov
jo
dec
movsb
mov
aaa
pop
std
jmp
xlat
push
call
pop
in
push
rol
jno
and
imulb
ret
add
mov
out
repnz
push
ljmp
daa
dec
bound
jg
pop
pop
fimuls
aas
movswl
fwait
xchg
xor
push
inc
mov
or
data16
idiv
push
mov
mov
sub
shl
jne
lea
iret
xchg
pop
push
aas
add
mov
repz
jle
push
shlb
lea
scas
mov
mov
ds
cld
push
push
push
mov
mov
fistl
call
cmpw
prefetchnta
sub
hlt
or
mov
mov
shr
sbb
jnp
mov
pop
or
inc
out
stos
jmp
call
xchg
add
mov
mov
je
jns
aas
fdivrs
sbb
add
or
pop
inc
dec
jne
call
stc
jb
pop
jmp
mov
rolb
lock
pop
outsl
out
test
call
jl
fistpll
pop
and
or
out
jg
inc
inc
inc
pop
or
je
mov
je
inc
call
in
outsb
mov
jle
loop
mov
call
inc
sti
idivb
dec
mov
std
dec
hlt
mov
shlb
call
ja
or
pop
cmp
push
or
cmp
mov
gs
mov
inc
add
sub
rep
pop
jmp
lock
add
mov
das
add
adc
ret
mov
sbb
jge
shl
or
jg
divl
call
mov
pop
ret
nop
incl
js
icebp
and
leave
push
jb
pop
mov
push
movsb
pushl
cli
jmp
jne
ljmp
adc
out
sti
call
push
in
and
jmp
adc
pop
add
loop
or
jecxz
mov
xchg
mov
lock
test
pushl
sbbb
dec
stos
pushf
sub
clc
test
out
jmp
sti
xchg
mov
roll
loope
ljmp
mov
dec
ret
add
inc
ret
cmp
shll
xchg
cli
ljmp
mov
push
push
xchg
incl
nop
movsb
in
shlb
push
add
imul
fisubs
cld
push
xor
incl
test
xlat
test
push
mov
add
roll
push
or
incl
dec
jmp
pop
adc
test
andl
push
and
adc
fs
hlt
call
fcmovne
icebp
ret
inc
mov
push
adc
add
lcall
xor
cwtl
push
ficoml
push
loop
add
adc
dec
adc
jg
sub
ds
enter
test
mov
sub
imul
mov
push
dec
das
in
in
mov
inc
dec
cmp
jbe
shl
xchg
and
xor
and
dec
fwait
cltd
out
sub
push
add
cmpsb
sub
pop
jmp
jb
pop
adc
hlt
push
and
in
enter
std
jg
jno
out
and
mov
push
push
test
js
sub
or
or
sub
outsl
sbb
imul
es
add
stos
inc
pop
adc
nop
outsl
jnp
mov
or
es
inc
push
call
or
pop
cmp
scas
mov
push
mov
call
rcrl
popa
mov
push
xchg
lea
stos
inc
or
mov
xor
out
inc
call
push
mov
es
js
xchg
inc
mov
pushw
mov
jp
sub
js
fldl
incb
cmp
mov
jmp
push
jmp
mov
jbe
add
mov
xor
mov
xor
int
stos
push
incl
push
jbe
push
fcompl
loopne
or
ss
inc
cli
loop
push
push
mov
out
cli
push
inc
sub
out
sbb
rorb
adc
cli
lret
mov
lahf
mov
cmpl
test
mov
aaa
adc
push
inc
mov
mov
call
jg
inc
inc
mov
std
popa
cli
imulb
outsb
and
push
push
jo
jg
ljmp
adc
push
cwtl
cmp
and
les
inc
sbbl
ljmp
adc
xor
lret
inc
outsl
aaa
push
and
inc
sbb
cwtl
stc
pusha
lock
xchg
lcall
lods
cltd
test
iret
pushf
into
sbb
xor
ljmp
push
sbb
mov
push
dec
stc
sub
clc
jp
and
andl
mov
sbb
or
xor
vmread
jmp
stos
mov
inc
and
jp
popf
insb
xchg
dec
stos
jmp
subl
sbb
loope
sahf
sbb
sarl
push
shrb
ret
mov
and
cli
fdiv
out
inc
gs
icebp
cmp
pop
das
lock
jmp
enter
call
sub
gs
mov
lcall
inc
mov
sbb
lods
repz
and
push
mov
pop
sub
mov
push
test
mov
mov
daa
sti
dec
pushl
ja
mov
clc
cmp
inc
imul
mov
inc
xor
or
mov
mov
xchg
pusha
fs
scas
xchg
repz
js
sbb
sub
outsl
pushl
xor
mull
xchg
push
add
cmpsb
or
xchg
and
inc
shrb
mov
sti
insb
inc
pop
mov
ret
or
xchg
dec
sti
orl
imul
fwait
stos
cmp
insb
adc
mov
push
mov
testl
dec
sbb
cs
jg
fnstcw
jae
arpl
sub
pusha
stos
ljmp
xlat
out
push
dec
ljmp
pop
pop
es
daa
add
xor
dec
xchg
ret
insl
sbb
call
push
jo
pop
in
popa
les
xor
cmc
test
mov
pop
sarb
pop
xor
mov
cmc
testb
jns
inc
push
mov
fcomip
mov
repz
jecxz
dec
or
sub
push
loopne
inc
bound
xchg
xor
or
and
sub
pop
sub
pushl
mov
loopne
pop
or
sbb
jle
pushl
mov
movntq
mov
loop
call
fildl
out
cmp
dec
cwtl
loope
xchg
mov
or
pushl
repz
mov
sub
movsb
scas
sub
loop
iret
xchg
or
fucomip
pushl
imul
jl
push
jbe
mov
shrb
popl
cli
dec
cmpsl
icebp
jecxz
lcall
loope
ret
dec
inc
jno
in
cs
jmp
cmp
xchg
daa
lea
fdivr
repz
repz
cmpsb
cmpsb
add
out
jg
lcall
je
add
addr16
push
xor
adc
xchg
and
mov
add
cmpsb
addr16
inc
fwait
add
call
inc
call
sub
or
push
cmp
lock
or
mov
outsl
inc
arpl
add
lcall
sbb
mov
fiaddl
cld
lods
stc
jae
mov
xchg
popa
fsts
cmp
xchg
pop
sbb
jle,pt
shll
inc
add
inc
int3
nop
jmp
sub
aad
jnp
sbb
jg
xor
jmp
cmp
insl
mov
ljmp
inc
lahf
mov
fwait
ljmp
lcall
loope
sbb
gs
inc
push
aas
test
adc
and
sbb
cmp
add
push
incl
cld
stc
mov
pop
add
push
pushl
out
sub
adc
shrl
shlb
fsubrs
loopne
cli
es
mov
std
mov
adc
jo
sub
call
cmp
loopne
ja
mov
iret
or
lahf
and
or
shll
sub
push
mov
jnp
lods
ret
push
lahf
dec
adc
mov
push
cmp
aam
enter
jmp
insb
sub
std
inc
mov
lcall
xor
push
lcall
lahf
cmp
cmp
cmp
mov
pop
xchg
in
stos
fdiv
jg
pop
jo
ror
dec
movsb
ret
mov
imul
add
pusha
test
mov
inc
dec
lcall
xchg
cmpsb
daa
pop
icebp
push
repnz
fnsave
adc
js
mov
orb
xchg
pop
sub
ss
fiadds
loop
outsl
incl
dec
stos
adc
jns
in
cmpsb
pop
jle
rorb
mov
decl
andl
xchg
movsb
mov
mov
mov
shrd
inc
movsl
sbb
out
jno
std
pop
adc
jae
jmp
dec
int3
pop
pop
push
mov
jge
cmp
cli
ja
jle
sbb
dec
inc
mov
add
and
sarb
push
adc
ljmp
mov
jge
into
loop
clc
enter
scas
loop
adc
pop
mov
lret
and
lcall
dec
scas
sub
push
and
sti
cmp
fnsave
jp
lea
pop
lods
call
sbbl
ret
out
cld
mov
cmp
jae
fidivs
sar
jmp
inc
test
and
loop
mov
js
lods
and
aas
mov
andl
cli
das
hlt
incl
scas
loopne
push
adcl
call
mov
pushw
fcoml
sbb
add
ret
cmp
pushl
inc
dec
les
and
xor
lds
mov
mov
cld
inc
test
xor
jl
aam
fistl
in
pusha
mov
insl
bound
add
fdiv
push
xchg
outsb
mov
outsb
adc
out
in
das
flds
push
push
sub
fbld
inc
xor
fidivrs
dec
push
adc
shll
jb
lcall
clc
mov
xor
pop
imul
clc
hlt
fimuls
jge
xchg
dec
add
push
xchg
adc
rcrl
or
rolb
push
nop
push
sbb
xor
sbb
mov
fmuls
std
xlat
stc
int3
iret
sbb
or
jne
ljmp
cmc
incl
jp
jmp
push
mov
jnp
xchg
and
daa
loop
cmp
xchg
call
shll
adc
rcr
mov
cltd
push
sbb
xchg
pop
cli
lods
cmp
sbb
lret
fs
decl
cld
sbb
outsb
sbb
mov
xchg
leave
subl
decl
xor
lahf
or
in
fidivs
jbe
jg
lcall
cwtl
and
dec
iret
push
xor
shl
inc
dec
sub
xchg
pop
cwtl
jmp
int
and
sti
outsl
sbb
test
shll
in
add
jp
mov
inc
call
xor
mov
ret
push
mov
cmp
jg
or
xor
imul
test
test
pop
rclb
mov
ljmp
mov
lret
mov
mov
sbb
cmp
jecxz
push
shrl
icebp
stos
cmp
fidivrl
pop
arpl
cld
or
test
xchg
mov
lret
test
inc
in
xchg
mov
jmp
mov
aas
aad
or
jns
mov
ljmp
mov
jecxz
stos
mov
test
out
push
sti
popf
inc
inc
test
sarl
notl
jge
ds
and
repz
mov
pop
ret
pop
pop
jnp
lods
jns
jp
inc
outsl
jge
outsl
icebp
ljmp
in
aas
ja
push
cld
das
add
xor
call
mov
cmp
dec
inc
push
sub
mov
mov
cmpxchg
jnp
or
sub
lock
jge,pt
test
jb
sbb
xor
mov
add
daa
adc
mov
xchg
in
ss
dec
out
mov
call
icebp
sub
cld
mov
scas
fcoml
fisubrl
jg
push
mov
pushf
gs
ljmp
xor
ds
clc
pop
iret
imul
lods
cmc
aam
cmp
jp
mov
mov
outsb
jmp
scas
clc
jns
sub
mov
outsb
rclb
adc
inc
jmp
dec
cld
ss
add
xchg
jecxz
push
pop
sub
fsts
xlat
incl
mov
sub
inc
mov
jbe
or
mov
lret
data16
inc
sti
cmpsb
je
jg
lcall
jae
xchg
adc
popa
stc
loopne
jae
pop
mov
cmc
mov
mov
mov
pop
push
and
and
fidivrs
cmc
xorl
dec
pop
pop
pop
sbb
stos
jp
ljmp
stos
ljmp
ss
add
jle
js
lea
mov
outsb
das
cmc
mov
xchg
and
imul
and
int
cltd
cs
push
jl
or
jg
int3
add
cmp
out
xchg
lcall
lods
inc
jl
sar
ljmp
xchg
sbb
mov
orb
mov
inc
sub
mov
jg
call
xor
std
js
mov
ret
pop
unpcklps
mov
outsl
pusha
mov
pushl
add
jmp
outsl
inc
shlb
cmc
adc
fsubs
sub
and
cmp
lcall
mov
push
mov
pop
fstpt
ljmp
pop
push
call
into
sahf
lods
sti
inc
rcrl
addr16
dec
cmp
imul
lahf
les
pushl
lods
inc
rcrb
ds
jmp
add
xchg
repz
mov
shl
cmp
test
and
xchg
data16
push
stos
loope
mul
jnp
call
loop
fcmovnbe
add
imul
dec
call
mov
adc
cmp
loope
or
and
jmp
std
and
pusha
xor
mov
xor
call
xchg
popa
xor
inc
add
stos
insl
aas
pushf
imul
imul
cld
dec
addr16
push
popf
or
mov
cs
test
stos
or
in
incl
imul
push
dec
push
push
dec
int
mov
add
xor
lock
mov
incb
leave
adc
ja
fwait
jl
loope
xor
icebp
out
outsb
jp
cmp
imul
movsb
cmp
pop
pop
mov
fidivrl
and
and
pushl
clc
cmp
imul
test
sarb
pushf
mov
ljmp
and
mov
inc
sbb
mov
popf
jnp
jmp
lcall
cli
loopne
add
arpl
repz
push
into
add
xor
jg
dec
rcrl
cmp
into
cmp
ss
mov
in
xor
in
ds
movsl
push
in
adc
lds
xor
int
sbb
mov
adc
mov
imul
test
dec
and
cmpsl
imul
scas
push
bound
ljmp
cli
insb
xchg
dec
imul
xchg
out
fists
pop
mov
lcall
fcoms
imul
sbb
mov
sti
mov
call
pushf
mov
icebp
jmp
sub
idivl
and
clc
jmp
sbb
lods
inc
pop
out
mov
mov
decl
incl
xchg
shl
nop
xor
adc
pop
mov
incl
in
cmp
pushf
mov
jbe
xchg
pop
imul
mov
cmpsb
clc
mov
call
pusha
add
push
mov
mov
lcall
in
push
sub
sbb
jmp
sar
inc
or
popf
pop
shll
scas
sub
bound
cli
cs
and
mov
mov
adc
mov
pop
loopne
and
xchg
pop
or
jmp
cmp
mov
hlt
xor
std
daa
loope
lds
call
pop
mov
jbe
out
jge
lret
nop
lea
outsl
push
cmp
pop
and
cmpb
xchg
adc
int
je
mov
xchg
lret
cmp
jl
mov
lcall
ds
fcmovnb
jbe
cmpsb
push
pusha
pop
xchg
adc
sarb
mov
cmc
pushl
mov
add
jmp
int3
loop
mov
repz
adc
arpl
popf
fisubrs
jo
mov
jecxz
ljmp
push
mov
adc
out
les
ss
outsl
dec
mov
push
ss
les
arpl
scas
stos
imul
push
dec
out
xlat
inc
mov
mov
icebp
add
sarl
into
adc
pop
jno
insl
jl
incl
leave
movsl
mov
mov
and
jae
in
call
ljmp
cmpsl
mov
das
mov
or
or
dec
stos
cmpsl
clc
pop
pop
lods
movsl
outsl
jmp
add
jno
add
inc
pop
imul
mov
mov
jb
adc
jg
int
or
cmovle
or
loop
scas
inc
mov
push
stc
jmp
sbb
jge
mov
insl
push
ficoml
lret
mov
jae
pop
es
push
jg
rolb
sub
or
push
mov
loope
add
pop
sbb
loop
mov
arpl
jb
lahf
std
sbb
pushl
push
adc
jg
pusha
push
stos
ret
insl
xor
push
jmp
sub
or
sub
sbbb
sarl
cmp
pop
out
test
ljmp
in
cs
adc
aaa
insb
ljmp
or
mov
sub
lock
pop
in
ljmp
mov
incl
ljmp
jl
jne
ret
mov
jmp
push
loope
decl
ds
mov
jb
mov
fdivs
push
call
inc
sub
cld
jg
shr
dec
xchg
mov
imul
sub
cmc
cld
push
outsl
je
das
bound
aas
nop
outsl
jl
fcos
decl
xchg
fcompl
shl
or
mov
imul
mov
popf
adc
lcall
xchg
ljmp
sub
xor
push
lret
xor
adc
enter
lock
fdivl
pop
sbb
jbe
and
cli
adc
ds
sub
bswap
xchg
pop
test
mov
xchg
push
mov
aaa
adc
push
shrb
enter
pusha
mov
daa
jmp
insb
daa
jle
aad
mov
clc
in
sub
dec
jle
test
stos
das
std
incl
sub
mov
dec
out
push
lret
push
jg
call
cmp
js
cmp
fnstsw
hlt
out
xor
mov
push
in
pop
scas
out
pmulhuw
sbb
incl
xor
imul
test
and
sub
loope
pop
psrlq
lds
fsts
stos
and
add
enter
movb
popa
movsb
cmp
lret
imul
mov
mov
lret
pop
cltd
scas
xor
add
mov
sub
mov
jle
mov
jmp
cmpl
ss
daa
jmp
mov
rcrb
test
ljmp
pop
out
lret
shll
lods
mov
inc
mov
adc
imul
inc
jmp
jle
xlat
inc
jmp
jecxz
xor
sahf
dec
repz
loopne
lret
das
cld
inc
jmp
addr16
inc
mov
and
daa
jp
daa
cmpsl
add
inc
call
add
in
stos
pop
cld
fs
or
sbb
jg
pop
mov
pop
lock
fucomip
push
stos
addr16
das
call
stos
leave
ss
aaa
loope
fisubrs
jmp
jmp
jecxz
cmp
stos
mov
and
incl
cli
jge
movsb
mov
mov
xchg
outsl
or
and
xchg
xchg
dec
loope
mov
xor
mov
rorl
cmp
mov
negb
mov
outsb
iret
es
ret
pop
xlat
mov
out
mov
xchg
imul
outsb
xchg
sub
ss
and
mov
lret
xchg
data16
push
lcall
push
sahf
mulb
mov
push
fwait
push
imul
cli
jns
icebp
shll
cwtl
std
test
jmp
cmp
std
into
push
icebp
xchg
enter
mov
bound
stos
stos
roll
mov
push
fistpl
xchg
shlb
in
je
rcl
call
pushl
clc
add
cmp
push
xchg
mov
jbe
call
xchg
dec
test
jge
lret
jp,pt
int
mov
mov
ljmp
movsb
adc
ss
neg
push
call
ret
insl
and
mov
call
push
je
fcmovu
cli
mov
rcrb
xlat
mov
test
daa
cmc
pop
mov
fidivrs
lea
stos
push
es
int3
loope
mov
test
adc
jmp
out
push
pop
adc
push
lock
pushf
inc
hlt
mov
xor
adc
out
dec
jbe
call
int
mov
inc
popa
and
dec
repz
fwait
xor
mov
les
nop
call
cmpsl
mov
mov
arpl
cmp
andl
pusha
push
xor
rcr
ljmp
cmpsl
popf
mov
pushf
mov
pop
test
jmp
push
fs
sub
sbb
cltd
in
mov
jnp
in
lds
mov
ds
mov
jmp
inc
sar
ljmp
xchg
aad
jl
les
mov
push
std
mov
sub
insb
sahf
das
mov
call
lds
decl
pop
icebp
lods
loopne
jno
mov
xor
jge
push
sahf
push
jp
lds
jmp
test
sub
pminub
mov
inc
jne
cmp
shrl
xchg
call
jp
stos
jbe
stc
inc
sbb
cmpsl
xor
incl
cld
mov
push
stc
es
daa
cltd
push
jmp
inc
jnp
xor
rep
arpl
out
xor
call
mov
push
push
push
call
clc
pushl
in
mov
out
test
push
pop
loop
xlat
xlat
cmpl
jp
push
sbb
aaa
cmc
push
jbe
sbb
roll
jno
pushl
sub
mov
shrl
negb
inc
adc
push
js
inc
fimuls
cli
mov
fwait
adc
push
loop
adc
gs
mov
jg
mov
pop
xchg
hlt
pop
lods
rcrb
xchg
mov
std
xchg
lock
out
jle
push
int3
or
pushl
lock
ds
sub
dec
pop
pop
hlt
add
icebp
scas
dec
out
inc
in
sub
subb
sub
fidivrs
call
xlat
and
movsb
dec
sarl
mov
sub
jo
jae
mov
pop
loop
xor
dec
test
mov
adc
hlt
fs
call
mov
pop
ljmp
xchg
mov
outsl
cmc
cmpsl
mov
andl
mov
lds
ja
xchg
pop
xchg
arpl
icebp
xchg
lods
mov
fistl
push
das
lock
outsl
mov
pmaddwd
shll
sahf
insb
inc
pop
loop
dec
xchg
xchg
fists
lcall
xchg
es
test
lods
cmpsb
imul
mov
fwait
lock
hlt
aaa
mov
popa
popf
cld
adc
lods
pop
insb
add
ljmp
pushf
ss
fcomi
inc
mov
ljmp
cmp
push
jp
aaa
add
js
mov
dec
js
push
jle
call
lcall
test
dec
cmp
pop
aaa
fisttpl
incl
push
xchg
bound
lahf
push
arpl
stos
jae
ret
lds
push
aad
nop
xor
cli
decl
int3
jl
loop
test
push
int
movsl
xchg
jecxz
dec
lock
aaa
push
or
mov
jp
imul
das
or
pop
jne
arpl
fst
shlb
mov
popf
sub
pop
pop
test
daa
icebp
xor
lds
push
sahf
sub
fisttps
outsl
dec
mov
fimull
mov
aaa
mov
push
cmp
xchg
outsl
leave
jns
sti
inc
test
and
sahf
xor
pop
adc
add
mov
jmp
je
xor
inc
dec
bound
leave
nop
jae
push
jmp
movsb
out
pop
inc
and
fs
aas
and
push
sbbb
add
ljmp
mov
shld
pop
push
insl
ret
mov
loop
aaa
mov
jbe
ljmp
push
js
xor
and
sbb
jmp
push
orl
imul
cmc
loope
ljmp
sbb
push
repz
fs
lea
sbb
xor
pop
pop
ret
mov
xchg
xor
pop
daa
fcoms
mov
pop
movsl
cmp
clc
ljmp
loop
jg
jnp
mov
sbb
orl
adcl
jg
cmp
push
into
stc
mov
mov
jns
in
xchg
je
jg
lea
xor
scas
ljmp
decb
call
inc
aaa
ret
lret
outsb
fistpll
fcom
lret
dec
mov
call
incl
mov
mov
out
cmc
repnz
in
mov
jne
decl
mov
lret
jns
xchg
jns
jle
aas
shll
jg
jmp
iret
fdivrs
jns
jnp
xor
pop
lds
xchg
add
lcall
jmp
push
jb
mov
iret
fisubrl
aam
test
dec
movsl
movsb
sbb
sarl
pop
cli
inc
iret
sub
in
loop
jg
mov
fsubrs
lods
cltd
push
ja
push
mov
insl
dec
outsl
jg
mul
jl
jnp
adc
into
mov
mov
hlt
stc
adcb
xlat
sbb
mov
movsl
lcall
scas
push
mov
cli
mov
adc
sub
mov
mov
jge
out
xchg
pop
scas
jle
popf
lds
icebp
movsl
in
std
stc
lahf
inc
pushl
test
iret
aas
test
jg
sbb
sub
lods
cmc
jmp
jnp
imul
push
cs
fidivrs
pop
add
idiv
ljmp
lock
xchg
call
jbe
push
sub
dec
mov
mov
inc
divl
and
std
mov
push
jecxz
cmpsb
xchg
mov
dec
sar
call
cmp
jge
nop
push
pop
lcall
jns
smsw
jb
ljmp
in
add
call
repz
enter
leave
cmp
call
cli
push
insb
mov
cmpsl
xor
pop
aam
jg
adc
dec
xor
dec
das
adc
pop
sbb
pop
mov
cmp
mov
ljmp
dec
push
adc
mov
add
out
rcrb
aad
imul
call
mov
mov
jp
pop
and
lock
adc
incl
pop
mov
nop
xchg
dec
fs
dec
push
scas
xor
xor
aas
in
movsbl
insl
mov
gs
inc
adc
ljmp
sahf
push
mov
frstor
shrl
fildll
aas
sahf
cli
pop
shlb
cltd
mov
lods
add
sti
lcall
data16
iret
jecxz
in
mov
jne
or
fcompl
push
jg
xchg
ja
call
filds
cld
movsl
pop
cmc
inc
sbb
outsb
adc
jg
xchg
mov
xchg
cmp
lods
cwtl
dec
popa
dec
sbb
sbb
cmpxchg
movsl
in
imul
out
gs
sub
sbb
mov
jg
inc
call
fidivrs
orb
clc
testl
mov
mov
sub
call
xorl
lret
jo
jb
pop
pop
std
decl
dec
push
jne
inc
mov
popa
pop
outsl
mov
jne
fnstsw
jmp
lea
test
cmp
mov
cmpsb
imul
enter
jg
adc
jmp
adc
jg
mov
cmp
inc
jmp
je
rorl
push
xchg
lock
mov
std
dec
jnp,pt
out
jmp
sahf
iret
das
inc
in
or
gs
out
mov
stos
hlt
mov
out
jnp
push
inc
or
cmpl
clc
cmp
mov
sahf
sbb
adc
pop
das
ficoml
aaa
std
jg
xchg
lds
dec
clc
mov
xchg
cli
xchg
push
nop
shl
incl
rcrl
inc
orl
jle
sbb
mov
dec
push
mov
or
and
dec
in
xchg
pop
insl
cmpl
mov
je
cmp
push
repz
hlt
fsubrs
loopne
scas
in
pop
pop
or
and
sarb
pop
xchg
jecxz
or
cmp
or
mov
ljmp
or
push
add
add
push
mov
xor
push
cli
push
nop
popa
add
mov
mov
add
sbb
and
arpl
popa
mov
inc
sub
mov
leave
jg
cmp
imul
cwtl
out
adc
vmwrite
push
sahf
adc
dec
test
xor
mov
stc
push
fmuls
lcall
pop
int3
mov
loop
rorb
js
cld
repz
jg
and
adc
xor
pop
in
sub
jmp
fnstsw
pushl
dec
mov
ss
sahf
pop
or
imul
xchg
clc
ljmp
push
and
fidivs
movsl
mov
shlb
push
outsl
pushl
mov
push
ss
mov
shl
sub
orl
je
jg
xchg
mov
dec
mov
scas
or
test
jmp
fcmovb
push
mov
pop
add
fadds
sar
addb
sbb
andb
test
nop
dec
mov
jae
inc
mov
sbb
clc
shll
mov
pop
out
xchg
or
mov
or
mov
roll
insb
call
jne
cmp
repnz
rolb
and
hlt
clc
push
ds
stos
or
stc
lods
mov
mov
sbb
sub
shrb
add
ss
push
call
lahf
pop
sub
ljmp
lret
fcmovbe
jmp
jne
pop
jo
pop
lods
xchg
lcall
push
jnp
mov
dec
call
testl
mov
xchg
jmp
sbb
pop
dec
sbb
jge
cmpsb
andb
out
insb
push
loope
jg
push
nop
aas
push
sar
jmp
jo
xor
jnp
dec
jl
pop
lret
add
add
int3
mov
sbb
jmp
decl
fldt
pusha
subl
bound
in
inc
cmp
orb
jo
je
insl
daa
add
xor
aaa
pushl
mov
std
jbe
insl
mov
add
cmp
imul
add
in
sub
lds
xchg
adc
cmc
pushl
xlat
adc
mov
inc
pushf
xchg
inc
lret
ljmp
mov
fimull
pop
punpckhdq
lods
push
fistps
and
pop
push
faddl
inc
popf
outsl
pop
loop
decb
lods
jo
mov
dec
ljmp
inc
mov
out
mov
decb
rcll
or
jg
outsb
shlb
sub
lahf
repnz
or
push
loope
js
gs
fdivrp
ljmp
and
mov
inc
insl
sbb
gs
cltd
fwait
xchg
cmp
sti
push
in
loop
ljmp
mov
mov
push
jne
mov
fisttps
mov
xchg
mov
jmp
aaa
sbb
je
decl
lock
ljmp
jmp
int3
mov
lds
sub
cmp
ret
cmp
and
push
pop
mov
enter
dec
mov
loope
int
xor
lods
addr16
pop
xor
fsubrs
cwtl
inc
fildll
bswap
or
js
sub
xlat
cmp
pushl
pop
sarb
mov
cmc
shll
add
push
scas
sbb
add
and
popf
adc
dec
mov
arpl
aaa
lret
fildll
decl
mov
stos
sub
pop
pusha
jnp
insl
adc
das
xchg
repz
loopne
xchg
hlt
leavew
xor
pop
xorb
pop
nop
xchg
mov
xchg
xlat
pop
jno
lea
das
into
aam
sub
cmp
push
or
ja
fwait
jg
pop
rcl
dec
jns
dec
mov
jne
in
dec
mov
push
icebp
push
jg
fldenv
leave
mov
dec
sbb
lcall
mov
mov
test
xchg
jl
jge
xor
cs
in
add
pop
pop
data16
pop
int3
test
jmp
in
in
ud0
frstor
lcall
insl
mov
fistpl
xor
mov
repz
mov
pop
js
push
adc
jnp
or
lcall
sub
call
or
mov
jg
rcrl
or
and
test
adc
adcl
sti
int
mov
pop
daa
lea
jo
pop
js
fcomps
test
mov
out
dec
add
xchg
in
fisubrs
sbb
dec
xorb
pusha
sub
inc
aaa
clc
call
mov
pop
pop
jecxz
mov
or
movb
call
xlat
add
lods
ds
das
jne
pop
sbb
negl
mov
iret
jge
dec
test
inc
les
xor
sub
push
test
fsubr
mov
ljmp
decb
inc
add
cmpsb
sub
dec
xchg
mov
loopne
loopne
outsb
stos
mov
cld
mov
mov
dec
xchg
mov
daa
out
call
sbb
out
push
stos
stos
shl
test
and
jp
aam
out
pop
popa
ljmp
daa
clc
ret
or
sbb
jb
xor
stc
popa
mov
xor
test
jg
stos
stos
mov
mov
fs
insl
jle
es
xlat
arpl
cmc
std
pop
xchg
out
sbb
outsl
lock
sbb
aam
ds
mov
loop
mov
pushf
push
mov
daa
push
sarl
mov
mov
jb
ret
mov
decl
aas
jo
jecxz
pop
fistpl
lods
lods
sti
aas
sbbl
decl
fistpl
pop
outsl
pop
mov
xchg
aas
mov
imul
inc
cmp
xor
aas
jg
and
cmpsb
arpl
fimuls
and
fs
call
push
std
sub
sub
in
pop
dec
divl
cli
and
out
sub
inc
and
pop
mov
pushl
enter
aaa
iret
cwtl
xor
sbb
xor
pop
push
xchg
repnz
cpuid
rorb
decl
rcrb
aaa
push
push
xor
adc
mov
pop
mov
flds
sbb
or
je
outsb
pop
push
lret
loopne
test
stc
mov
mov
sahf
shr
xchg
clc
call
and
scas
int
aas
dec
pop
out
enter
lcall
jmp
in
fsubl
nop
bound
ljmp
mov
or
rcrb
daa
incl
movsb
push
js
lcall
sbb
leave
outsl
inc
ret
xor
rol
lret
incl
sub
inc
gs
and
in
clc
loopne
cmc
fistpll
or
pop
loopne
pop
sub
jmp
jmp
sub
pop
incl
adc
clc
adc
testb
clc
sbb
shr
ss
inc
ja
xchg
cwtl
or
dec
das
aas
jg
push
and
jmp
sub
sub
ljmp
out
in
test
and
nop
push
pop
cmpsb
cmp
jne
pushf
call
mov
sbb
addb
xchg
subb
std
mov
xlat
xchg
mov
rcrb
ds
mov
adc
pop
sahf
insb
cmpl
cmp
push
mov
push
pop
or
imul
outsl
inc
sahf
cmp
bound
or
daa
push
popa
cmc
dec
dec
outsb
stos
mov
push
loope
lods
mov
aaa
jp
pop
inc
stos
lds
das
icebp
dec
sub
scas
aas
sbb
imul
incl
popa
push
mov
mov
mov
in
fs
sbb
dec
aaa
pop
das
fdivrs
fwait
popf
mov
mov
mov
incl
jo
cmp
test
subl
xchg
cmp
mov
pop
in
scas
push
jg
ja
shll
push
incl
inc
inc
insb
clc
bound
les
jne
or
pusha
in
or
lds
cld
sub
lret
or
lcall
xchg
mov
cmp
mov
cmp
clc
xor
jp
bound
stos
inc
aas
push
pop
add
and
test
pop
sub
out
repnz
cs
mov
repnz
lods
bnd
xchg
fwait
xchg
mov
test
mov
incl
fcoml
pop
inc
inc
dec
dec
gs
popa
xor
js
cli
out
stc
dec
adc
pushf
sub
jmp
repnz
rcr
add
cwtl
inc
sub
lock
lock
cld
mov
xchg
xchg
push
out
aam
stos
test
loope
decl
adc
dec
std
add
jp
dec
push
push
imul
inc
jge
pop
mov
clc
inc
daa
and
stos
pop
rcr
out
xor
mov
pop
pop
adc
mov
popf
fsubrl
es
mov
xchg
mov
in
rorl
adc
frstor
icebp
mov
xor
push
cmpb
test
cmpsb
fs
incl
adc
push
imul
cmpsl
xor
mov
in
das
mov
subl
incl
and
and
and
out
push
loope
scas
mov
cld
ljmp
mov
and
out
mov
fistpll
pop
pop
mov
mov
repnz
call
lcall
push
push
push
mov
sub
mov
sti
push
push
mov
mov
call
pop
mov
fidivrl
test
push
push
push
mov
mov
mov
mov
call
pop
ds
jnp
fwait
xor
xor
push
add
movb
inc
mov
sub
loopne
inc
cld
ret
or
je
mov
cld
lods
pop
sar
pop
pushl
mov
add
add
push
jae
and
jmp
add
fmul
idivb
lods
adc
fisubrl
add
pushl
pop
pop
pop
pop
pop
ret
pop
or
adc
mov
jmp
divl
push
mov
and
or
das
in
in
arpl
fsubl
iret
or
mov
lods
repz
popf
es
fsubs
xchg
call
jne
add
loopne
or
pusha
lcall
roll
or
adc
add
jmp
cmp
jns
cmp
es
jmp
push
or
sub
adc
inc
sub
push
push
or
or
and
nop/reserved
and
dec
incl
adc
sbb
adc
add
add
pusha
sbb
and
sub
push
push
or
cmp
std
lcall
xor
or
xchg
or
or
or
push
inc
dec
pop
adc
incl
das
pop
adc
sbb
pop
jg
sbbb
push
sub
add
adc
push
or
mov
add
push
or
ljmp
movsb
sbb
or
push
sbb
dec
ss
aaa
add
or
aam
or
add
aaa
push
xchg
mov
mov
fsubrs
clc
cmp
cmp
cmp
jo
push
cmp
ret
cltd
or
and
inc
push
add
inc
mov
add
add
imul
add
subb
push
rorl
add
cmp
and
mov
stos
testl
xor
out
add
inc
gs
gs
dec
jbe
sbb
xchg
insb
push
imull
push
outsb
popa
jo
push
jne
fstp
rorl
add
cmp
or
inc
insb
popa
inc
adc
sub
enter
mov
and
dec
rorl
adc
jbe
add
push
lock
bound
pop
sbb
out
inc
or
icebp
lock
iret
add
popa
je
outsl
pop
lods
clc
add
je
inc
jns
push
add
pop
fs
xor
cmpsl
repnz
lcall
adc
test
imulb
jmp
mov
adc
mov
insl
fnstcw
push
push
add
pop
sbb
lock
dec
and
cmp
ljmp
add
out
fstpt
pushl
or
dec
push
inc
insl
pop
rorb
cli
add
xor
sbb
mov
pop
sub
incl
cmp
sbb
pop
arpl
lret
jo
sub
fnsave
pop
push
pop
mov
inc
movsb
jo
push
insl
pop
loope
wbinvd
pop
insw
cmp
cmp
insl
or
mov
push
inc
insl
mov
add
sbb
inc
imul
jae
popf
pop
fcomps
sub
outsb
dec
gs
pop
iretw
sbb
xchg
adc
or
mov
pop
mov
jae
lods
push
sbb
cwtl
add
insb
mov
insl
bound
add
jmp
data16
push
xchg
xor
pop
ss
inc
push
add
adc
sbb
and
test
add
and
push
add
push
sub
adc
inc
int3
push
aas
stc
dec
adc
add
add
add
add
loop
cmp
add
inc
add
dec
sahf
and
nop
add
inc
cmp
addr16
sub
stos
mov
sub
add
and
enter
gs
xor
pop
fldcw
lahf
cs
leave
xchg
pop
daa
rclb
into
inc
add
push
sahf
daa
add
lret
insl
adcb
and
addl
add
add
add
add
add
inc
add
call
int
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
popa
jmp
