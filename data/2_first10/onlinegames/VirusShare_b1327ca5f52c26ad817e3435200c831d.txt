insb
aas
mov
out
and
add
and
and
dec
shll
xchg
test
in
add
sbb
cmp
imul
xor
cmpsb
mov
clc
and
data16
and
sbbl
xorl
jbe
fwait
mov
cmpsl
addb
aas
add
ret
pushl
gs
xor
cs
insb
add
or
ficoml
sbb
push
gs
bound
push
jb
jbe
insb
gs
fcomi
jg
pop
jae
jae
gs
and
inc
inc
add
filds
jo
push
gs
outsl
imul
add
adc
adc
bound
xor
jnp
out
jg
xor
pop
imul
insl
fs
aas
fisttpll
add
je
pop
outsl
arpl
bound
in
pusha
outsl
cmp
xor
or
cmp
xor
lock
mov
mov
sub
gs
jmp
out
std
rclb
xor
in
mov
mov
push
or
lds
sub
fcmovnb
gs
popa
enter
push
add
int
lret
outsl
int3
int
pop
into
push
xlat
rorb
shll
xor
shll
aam
fldt
xlat
pop
fdivs
fstps
aaa
fisttpl
push
pop
loope
jne
mov
pavgw
in
and
add
xor
call
imul
xlat
pop
in
aaa
lock
repnz
shll
clc
stc
fnstsw
cli
sti
js
je
mov
pop
idiv
call
sub
mov
pop
adc
mov
arpl
lock
mulb
ljmp
cmp
je
push
push
call
mov
jmp
mov
cmp
jne
xor
jmp
lea
mov
movl
ror
xor
je
sbb
pop
jbe
outsl
outsl
adc
jne
push
or
mov
sbb
iret
das
incl
enter
pop
inc
cmp
jne
mov
in
or
mov
pop
pop
pop
leave
ret
mov
in
sbb
xchg
daa
fisttpl
cld
push
push
push
imul
je
or
or
mov
insl
sub
inc
push
clc
add
jae
fcmovu
push
push
sbb
js
push
lock
dec
ss
push
pop
insb
pop
push
jg
outsb
jecxz
inc
adc
push
stos
mov
sbb
cmp
je
push
adc
or
and
cmp
adc
push
push
sub
insl
fnstcw
adc
and
jmp
out
je
lea
or
movsl
sbb
jecxz
out
mov
pop
in
sbb
pop
ret
mov
inc
inc
shlb
enter
clc
inc
xchg
xor
ss
jo
push
push
scas
inc
adc
mov
jo
push
adcl
mov
cmp
inc
test
mov
out
adcl
push
dec
pop
jmp
push
push
sbb
xor
add
cmp
int
jge
xor
jge
add
mov
mov
and
jo
sub
dec
mov
divb
or
call
jb
pop
icebp
pop
loop
cld
rcrl
in
adc
outsb
xchg
in
call
call
adc
cmp
cmp
push
sbb
add
fwait
jecxz
or
jnp
imul
nop
insb
ja
jmp
idivl
icebp
push
lds
push
and
jno
jp
insb
mov
dec
std
adc
push
adc
popf
sti
lcall
sbb
enter
inc
dec
dec
test
jne
push
pop
jmp
sbb
xchg
lds
rolb
jecxz
mov
sbb
mov
add
inc
cmpb
jg
cmp
je
pop
add
and
xor
aad
pop
clc
inc
and
loope
or
xlat
cmpl
push
jg
into
in
daa
push
mov
popf
fidivs
sub
outsl
push
mov
adc
clc
xlat
sbb
out
adc
out
inc
js
lock
push
in
divb
in
inc
mov
and
mov
pop
or
daa
jae
enter
adc
call
mov
cwtl
inc
mov
pop
rorb
xor
std
add
mov
es
je
or
je
repz
fst
ja
push
push
lea
andb
jae
sarb
or
mov
lret
stos
push
adc
loopne
int
add
fdivp
call
push
sbb
sbb
sub
pop
jb
loope
push
sahf
mov
pop
call
jbe
cmp
push
xor
lret
test
xor
scas
cmp
push
and
jp
in
data16
nop
std
adc
scas
cltd
test
adc
or
pop
mov
pop
pop
pop
pop
idivb
push
cld
pop
jmp
arpl
pop
or
inc
fstl
outsl
imul
pop
outsb
push
add
je
popa
add
imul
add
imul
imul
insb
inc
or
sarb
mov
inc
ja
popf
and
test
mov
push
add
add
jne
mov
xchg
add
inc
outsb
mulb
sbb
je
push
hlt
adc
add
in
pop
testl
sub
sbb
enter
icebp
stos
push
dec
pushf
out
std
enter
dec
repz
push
mov
iret
cmp
fadd
add
data16
mov
jb
rclb
rorw
pop
int
jmp
iret
push
shlb
dec
xchg
insb
rcl
or
imul
imul
ljmp
mov
or
ljmp
mov
push
push
loop
cli
ss
repz
adc
fsubl
mov
jnp
xchg
mov
and
mov
fiaddl
pop
mov
pop
fs
outsl
outsb
pusha
mov
je
jae
pop
sti
mov
dec
dec
bound
sbb
wbinvd
jg
clc
lods
mov
mov
cmp
and
xlat
xor
push
insb
ss
add
and
call
sbb
and
das
push
jnp
lcall
adc
fwait
mov
dec
mull
cwtl
adc
push
call
leave
mov
sub
sar
inc
in
addr16
push
push
jbe
arpl
jl
call
push
mov
cmp
loope
lcall
jo
imul
scas
in
out
and
and
lock
pop
cmp
and
cmc
insb
js
inc
xlat
vdivsd
lea
in
dec
lcall
fs
popa
in
or
jp
divb
in
scas
je
adc
dec
jmp
js
gs
aad
lods
out
pop
cmp
mov
jnp
jmp
xchg
mov
add
xchg
add
sbb
dec
jp
mov
jb
sub
pop
pusha
mov
enter
mov
mov
inc
and
pop
cs
dec
movsb
inc
adc
and
and
enter
addl
fsubrs
push
dec
inc
dec
dec
and
sti
mov
jg
push
dec
inc
dec
jb
push
dec
cs
outsl
push
adc
push
add
push
hlt
sbb
mov
and
aas
mov
dec
add
dec
pop
nop
add
cwtl
enter
add
mov
add
add
pop
mov
int
mov
movsl
loop
push
addr16
insl
and
outsb
outsb
outsl
je
bound
mov
outsb
and
inc
dec
push
and
fs
inc
ss
push
pushf
xchg
shrl
lds
adc
int
filds
stos
jae
vrsqrtps
jo
enter
repz
cmp
mov
div
imul
xchg
add
in
scas
cli
cld
dec
adc
lds
xor
add
or
add
pop
lcall
add
int3
sub
rcrb
xor
sahf
or
and
fs
push
and
add
add
rcr
scas
bound
scas
push
nop
jge
in
mov
popa
je
push
insb
jge
lock
xor
inc
push
push
dec
fldenv
pop
mov
andb
lcall
outsl
arpl
test
daa
or
pop
xor
mov
mov
pop
jo
pop
ss
rorl
cli
test
mov
stos
das
in
aam
outsb
jp
ss
rorl
lcall
dec
pop
push
imul
fsubrp
add
sbb
dec
shll
mov
test
into
in
lcall
cmp
pop
outsb
adcb
mov
int3
fsub
xor
mov
cli
or
jnp
shll
pop
fwait
push
add
sub
push
hlt
movsb
call
dec
shll
test
movsb
fwait
scas
jae
dec
stos
fildl
call
lcall
sbb
es
push
les
mov
xor
xlat
pop
or
push
sub
cmp
xor
inc
push
pop
bound
dec
shll
mov
fidivl
pop
out
je
mov
test
mov
jne
fwait
enter
push
dec
add
imul
pop
xchg
or
cmpsb
mov
out
orl
adc
dec
notl
adc
popa
fs
sub
fcomi
aas
daa
dec
je
jo
jne
jns
outsw
inc
aaa
ffreep
fdivrl
jo
outsb
push
jb
adc
adc
adc
inc
push
jl
mov
nop
mov
add
adc
lea
insb
add
flds
adc
sbb
pusha
xchg
or
add
enter
push
pop
pop
add
inc
test
stos
add
mov
dec
and
add
xorl
and
testl
or
add
mov
gs
add
mov
push
or
mov
aas
add
pop
test
add
pop
add
mov
sub
sbb
sbb
and
inc
xchg
gs
fistl
inc
sbb
add
or
inc
mov
sbb
aas
cmpsb
pop
enter
das
xor
xor
and
pop
xor
ud2
push
inc
fildll
pop
add
ja
scas
stc
out
mov
add
add
gs
sbb
pop
inc
or
push
sub
incl
pop
add
push
inc
jb
push
and
ja
or
mov
jae
pop
and
addr16
xor
inc
xor
jecxz
add
xor
and
test
pop
pop
cs
add
pop
test
imul
insl
xchg
push
dec
call
push
push
inc
push
inc
dec
adc
outsl
data16
imul
dec
push
inc
jne
jb
je
sub
pop
call
ja
jb
inc
popa
jb
push
aas
ljmp
pop
pop
mov
pop
outsb
cmpsl
dec
out
xor
and
or
push
lret
insl
inc
push
je
insb
nop
je
or
out
lea
pop
nop
jns
outsl
and
outsl
jne
jae
shlb
mov
popa
add
push
push
sbb
imul
dec
push
push
imul
outsl
imul
cmpsl
pop
rcll
push
sub
inc
ftst
outsl
je
push
jns
xchg
pop
outsb
popf
loopne
jne
pop
jno
je
push
bound
arpl
popa
inc
jmp
sbb
add
inc
hlt
sub
addr16
mov
add
jmp
jl
and
push
lret
mov
push
mov
add
call
cli
push
in
shlb
aas
cmpsl
or
inc
mov
or
movsb
or
js
fstl
rorb
test
add
rorb
add
mov
fisttpll
test
dec
scas
jns
gs
push
lret
or
fs
cmp
jp
mov
ja
jne
imul
mov
pop
or
ret
fsubs
push
xchg
pop
push
insl
pop
jge
pop
sbb
or
and
out
insl
or
das
imul
add
int
mov
adc
repnz
push
add
sbbl
fldl
adc
or
add
pop
movups
dec
dec
jno
js
mov
jl
cmovae
lret
dec
cs
lods
pop
mov
std
pop
add
mov
sub
mov
pop
sbb
cli
sub
mov
add
ljmp
hlt
and
aas
sbb
mov
scas
ljmp
gs
test
add
in
or
xor
cs
lea
adc
push
or
cmp
mov
push
push
push
call
divb
movb
mov
sub
sub
mov
movb
inc
or
movb
in
inc
add
sti
push
push
inc
call
jg
imull
jne
inc
pop
orl
movsl
call
or
and
in
mov
rorb
dec
aad
push
leave
or
jecxz
add
or
push
in
dec
shll
push
and
dec
repnz
and
lcall
push
movzbl
insl
into
je
pushf
adc
out
pop
adc
testb
push
mov
andb
inc
or
data16
outsl
mov
enter
call
pop
jl
push
aaa
jl
js
sbbb
xchg
aas
mov
add
xor
add
in
lahf
or
xor
adc
adc
adc
or
add
int3
adc
adc
nop
add
dec
shll
sbb
and
dec
adc
inc
xor
adc
fwait
lods
ljmp
push
jmp
add
adc
mov
push
mov
add
cmpsb
cmp
ret
cmpw
jne
cmp
outsl
push
dec
cmp
lret
cmp
inc
push
inc
ds
add
cmpsl
jae
repnz
add
pop
push
adc
adc
add
fs
add
arpl
or
jmp
cmp
outsb
pop
outsl
mov
je
and
divl
adc
pop
mov
in
idivb
jne
ja
jge
add
or
jae
repnz
in
ja
xchg
loopne
mov
cmp
out
jmp
cmp
jb
test
sub
decl
jnp
lahf
lcall
or
cmpsl
movsb
pop
cli
jmp
lret
rclb
push
pop
ja
push
jne
cmp
pop
inc
mov
jae
stos
jbe
jg
add
jge
push
push
test
mov
add
sub
mov
dec
ret
push
insb
dec
fistps
sbb
jo
fdecstp
orb
push
js
adc
inc
test
mov
xor
in
fnstsw
lock
add
mov
fstpl
jnp
movsb
mov
sbbb
mov
jle
mov
imul
sbb
or
cmpsl
and
mov
insb
mov
mov
movsb
push
aad
jle
dec
pop
mov
nop
std
repnz
pushl
rolb
or
sarl
push
mov
add
divb
fldt
sbb
flds
pop
or
sbb
insl
jecxz
das
sbbb
call
dec
dec
xlat
sbb
sbb
cmpsl
test
lods
adc
or
adc
clc
call
push
mov
pop
push
fcompl
xchg
js
mov
insl
fdivrl
mov
jle
or
mov
lock
xor
jbe
loop
and
push
pop
call
lea
sbb
inc
inc
jp
pop
movl
cmp
pop
jb
mov
ja
vmulss
cmp
jne
xor
add
mov
add
pop
or
gs
mov
sbb
andw
mov
push
int
subl
dec
cld
pop
jb
jne
pop
es
sbb
xchg
or
push
lret
imul
add
lea
std
push
mov
mov
sub
pop
adc
ss
ret
fsubl
fadds
fcmovnu
out
mov
lea
cmp
jne
and
fsub
cmp
mov
mov
add
cld
call
xchg
cltd
out
or
jmp
add
push
jo
jge
fstps
or
pop
pop
or
movl
call
dec
mov
clc
out
or
js
add
je
repnz
xor
adc
adc
add
mov
add
inc
adc
cmp
test
add
and
xchg
jl
xor
adc
adc
nop
add
pop
mov
push
rcrb
sub
xor
adc
pop
pusha
outsb
and
pop
cwtl
cmp
aam
stc
push
mov
leave
push
push
mov
jnp
mov
movsb
mov
or
add
adc
cmp
rcrl
orb
outsl
clc
jle
xor
cmp
jle
dec
lea
sbb
in
ja
pop
call
dec
sbb
cmp
je
test
das
fstl
jns
inc
hlt
mov
push
in
jne
cmpl
outsb
cmpsb
idivb
incl
mov
cmp
jne
xor
inc
clc
adc
or
xchg
lods
cmpsl
fldt
std
test
andl
add
cmp
inc
rol
sahf
inc
cmp
mov
pushf
or
xor
scas
jg
push
stc
inc
mov
nopl
daa
mov
rorl
clc
xlat
add
adc
icebp
sbb
push
jp
push
push
adc
icebp
dec
test
loop
sbb
push
and
lods
cli
fcoms
add
push
xlat
nop
adc
call
mov
shlb
aaa
ret
add
sarl
add
outsl
mov
pushf
push
pop
and
push
pop
ror
fstps
jmp
adc
test
mov
add
xor
loopne
sbb
or
xchg
popa
mov
movsl
cld
negl
cltd
pop
inc
idiv
adc
jg
adc
jmp
andb
mov
jmp
xor
mov
pop
enter
mov
add
and
repnz
mov
stc
dec
add
pop
clc
cmp
adc
adc
and
adc
adc
shll
pop
pushf
fdivrp
adc
add
cwtl
and
adc
pop
mov
pop
jmp
inc
mov
or
mov
and
mov
mov
ja
xor
mov
cmpb
test
xor
and
in
call
decl
add
andl
push
or
inc
xorl
and
or
imul
adc
push
mov
out
and
push
add
lock
and
out
mov
mov
shrl
imul
incl
lret
mov
jmp
stos
leave
lock
push
mov
mov
icebp
mov
mov
jne
adc
pop
insl
adc
sbb
rorb
xchg
mov
rolb
or
rcll
cli
or
scas
pop
add
addl
xchg
and
jno
add
pop
call
aad
cmp
jbe
or
std
lods
std
cmpsb
cmp
mov
not
and
push
jl
and
or
add
mov
mov
js
xlat
sbb
mov
or
add
push
repnz
not
and
sub
testl
mov
bound
shr
out
push
js
repnz
outsb
not
mov
or
fisubs
fimull
add
repnz
lea
shr
shl
push
pop
inc
mov
pop
sub
mov
and
not
cmp
add
int
psllq
mov
mov
jmp
shr
or
add
dec
daa
pop
jg
push
add
add
lea
sbb
push
mull
cli
mov
push
push
xchg
jle
divl
and
shlb
mov
das
adc
movb
jecxz
or
push
jns
add
pop
fiaddl
outsl
popa
xlat
or
mov
adc
xor
fisubl
fistps
or
ret
or
sub
xchg
inc
std
sbb
add
or
test
xor
add
sbb
cs
out
adc
jne
les
repz
fdiv
repnz
fcomps
addl
repz
mull
xchg
rcr
das
pusha
adc
fdivl
jbe
pop
scas
testl
sbb
les
subb
add
pop
iret
repnz
add
subl
sub
fcom
add
cmp
fdivrs
pop
dec
inc
imul
xlat
mov
sbb
les
adc
sub
and
xor
or
or
insb
xchg
xchg
jno
std
stos
lods
es
pop
push
fdivrs
push
cld
and
fidivrs
outsb
adc
add
aaa
das
push
mov
cmpsb
add
fmull
pop
mov
xor
push
iret
and
xchg
sar
neg
pop
or
popa
adc
add
or
pop
mov
mov
ret
mov
sarl
mov
bound
mov
popa
sbb
add
and
jg
pop
dec
mov
inc
mov
rcrb
push
fadds
hlt
push
and
mov
jb
repz
pop
pop
es
adc
rcl
push
repnz
shrl
movsb
and
mov
fstps
jmp
lock
imul
sbb
imull
mov
out
aaa
pop
adc
call
xlat
lods
mov
adc
xchg
mov
shlb
jge
repz
adc
add
iret
outsl
fistpl
fimull
out
fcoms
mov
cmp
mov
jle
jae
fnstcw
out
adc
leave
nop
pop
or
stos
mov
fisubrs
mov
mov
out
loope
out
sbb
loopne
jle
lcall
add
pop
aaa
scas
jne
insl
or
mov
push
fbstp
inc
fimuls
xchg
mov
adc
adc
sbb
call
int
inc
loop
shr
or
xlat
in
int
fdivs
test
rcrb
clc
ret
cmc
out
out
cld
cld
not
lcall
flds
outsl
addr16
int
adc
movl
cmpsb
dec
fisttps
sub
adc
or
xor
test
mov
pusha
sbb
test
and
cli
mov
xor
lcall
js
repnz
popa
popf
insl
adc
mov
sti
xor
mov
repnz
or
in
mov
call
in
inc
xchg
in
mov
inc
push
sbb
xchg
fisubrl
xchg
mov
fimuls
cltd
pop
sub
fmuls
jecxz
int3
pop
pusha
dec
mov
cli
jle
pop
pop
xor
push
jo
mov
push
mov
or
mov
pop
jl
jo
jle
sub
jae
data16
inc
mov
add
sbb
lock
cli
daa
mov
fimuls
xor
xor
test
popa
fidivl
jae
adc
fidivs
test
js
pop
out
cmp
in
fs
or
push
aas
sbb
push
clc
sarb
cmp
aam
cltd
js
mov
push
les
in
mov
stc
ja
idiv
ss
in
lret
jp
jl
pop
je
dec
fdivp
xor
cmp
lods
les
sti
cmp
cli
mov
fisubs
mov
stos
mov
mov
rcrb
sbb
push
or
in
jle
sbb
jl
inc
int3
or
inc
test
fs
or
lret
repz
mov
stos
adc
repz
and
jb
hlt
or
pop
jns
mov
adc
aad
scas
xlat
mov
fs
clc
cmp
pop
pop
gs
sbb
rcrl
or
lock
int3
or
push
xor
ja
jno
jns
mov
dec
jge,pt
out
call
vmwrite
shrb
lock
pop
test
out
jmp
dec
xor
out
loopne
jg
call
outsl
jecxz
addb
add
xor
dec
scas
dec
fistpl
loopne
sub
jecxz
jp
or
dec
fcmovnb
cmp
mov
sti
push
adc
add
mov
cmc
out
mov
lds
jp
arpl
ja
mov
in
repnz
fsubs
fiaddl
mov
pop
mov
sub
repnz
repz
sarb
roll
dec
mov
pop
cli
lret
pop
jge
xlat
pop
add
pop
movsb
mov
js
data16
and
mov
mov
popf
stos
inc
call
inc
js
cmp
decl
cld
cmpb
sarl
pop
sub
cmp
enter
cld
lcall
adc
data16
leave
inc
insb
js
adc
inc
inc
insb
xlat
pop
fisubrl
insl
push
push
lahf
inc
pop
inc
adc
push
iret
pop
pop
mov
mov
xchg
outsl
sti
mov
adc
adc
add
sbb
shlb
je
cmp
jne
xchg
sbb
call
xchg
jo
dec
sub
push
xor
dec
dec
outsb
mov
and
cmp
movsl
mov
call
sub
clc
xorb
pop
test
add
and
mov
sbb
out
or
testb
mov
mov
rcl
lea
pop
js
push
movsb
add
out
fwait
add
fistl
push
test
mov
xchg
insl
leave
lahf
xlat
mov
add
gs
dec
push
add
lret
rorb
inc
pop
adc
cmpxchg
xor
inc
mov
int
push
lods
mov
dec
xor
or
imul
insl
sub
xchg
dec
int3
adcl
pop
push
push
inc
mov
mov
mov
mov
hlt
xchg
hlt
jno
add
call
mov
imul
fs
push
or
aam
lahf
iret
out
fsubs
das
fsubrl
jo
fwait
jns
and
gs
in
outsl
pop
cmp
int
mov
test
test
js
push
or
mov
cmp
pusha
or
stos
call
xor
jnp
sbb
or
sub
adc
sbb
mov
enter
enter
xchg
pop
mov
insl
or
mov
xchg
mov
cmp
jge
or
in
call
arpl
or
dec
pop
int3
call
fidivl
je
or
or
dec
sub
jno
rclb
add
mov
push
daa
stc
sub
add
in
ret
data16
xchg
push
pavgw
push
dec
repnz
setge
cld
das
fwait
int
mov
push
cwtl
loope
cwtl
clc
sub
push
lcall
mov
push
xor
ret
push
fs
and
je
les
mov
les
or
call
add
rcll
and
repnz
mov
xrelease
jmp
push
mov
cmp
je
dec
dec
cmpw
jne
pop
push
and
mov
cmp
je
add
jne
push
cmp
cmp
sbb
enter
inc
sub
push
ret
dec
mov
mov
add
jae
cmovno
aad
jbe
cmp
je
xchg
movl
adc
ret
push
or
push
je
xchg
ljmp
cmp
testb
mov
cmp
je
fbstp
repnz
cmp
jne
push
pop
addps
xor
mov
fadds
jbe
ja
roll
popf
or
daa
lea
divb
pop
arpl
sub
add
rolb
xor
sub
mov
cmp
inc
hlt
pop
push
inc
push
cmp
jg
ret
push
ja
push
adc
insb
sub
mov
jmp
mov
adc
sbb
mov
push
mov
movb
enter
push
nop
xchg
mov
out
popf
mov
cmp
sub
addr16
jae
and
mov
outsb
popf
call
outsw
mov
xchg
sbb
mov
jbe
cmpsl
js
pushl
and
xor
dec
mov
mov
adc
cmpsl
outsl
lods
rolb
sti
aam
mov
mov
mov
sbb
aaa
loop
mov
outsl
xor
cmp
clc
cmp
mov
test
rcrl
int3
decl
int3
cmp
sti
ja
cmpl
cmpl
scas
or
jg
mov
xchg
push
push
pop
dec
enter
inc
pop
sbb
xor
out
pop
mov
outsb
xchg
rcrl
jle
je
cmp
pop
pop
call
lods
jnp
add
mov
or
shrl
dec
inc
loope
je
dec
out
or
mov
mov
idiv
xchg
adc
jmp
sub
ss
dec
mov
cmc
sbb
ss
mov
outsb
rcrl
jl
mov
and
jle
adc
js
ja
pop
adc
inc
push
inc
mov
insb
pusha
loopne
pop
inc
sbb
je
lods
lret
in
fldcw
scas
insl
mov
mov
pop
cs
push
mov
mov
mov
mov
xchg
lret
in
mov
mov
mov
insl
in
imul
outsb
mov
cmp
jo
xchg
gs
insb
outsl
jb
jb
insl
lcall
gs
test
loop
jecxz
pop
pop
outsb
mov
out
dec
out
call
jmp
in
in
jae
out
mov
lcall
je
repz
rol
outsl
dec
xchg
fldt
rol
add
xor
in
lcall
sbb
cmp
jbe
mov
int3
hlt
cmc
call
sub
mov
popf
cli
and
xor
adc
or
inc
insb
xor
int3
mov
adc
push
aaa
add
int3
mov
rol
pop
fs
gs
mov
loopne
sbb
fwait
in
in
roll
cmp
xchg
push
cli
insl
dec
mov
jb
dec
rcr
cmp
aam
push
dec
or
adc
lahf
sub
jnp
movsb
cmpl
jg
push
std
sti
lea
rcl
push
push
inc
leave
enter
sti
rcrl
pop
repnz
shl
scas
dec
mov
and
cli
arpl
outsb
dec
outsb
xchg
ret
fistl
test
jb
cwtl
insl
sbb
enter
adc
sbb
adc
add
mov
shl
and
test
xchg
cmp
cli
or
and
add
push
leave
std
mov
cld
hlt
in
mov
cmc
insl
sub
std
pop
lds
sbb
orl
push
jb
sbb
hlt
fsub
hlt
mov
mov
lock
adc
pop
jl
cmp
lock
sub
loope
stos
cld
mov
je
enter
inc
insl
stos
outsl
adc
and
sbb
push
or
adc
sub
or
or
out
incb
mov
mov
sub
sbb
sbb
imul
jo
test
cmp
fsubrp
test
loopne
mov
adc
in
cmp
push
imul
addr16
add
je
stc
sbb
call
mov
dec
mov
leave
ret
imul
fimuls
cmp
push
pop
add
add
mov
out
cmp
push
cmp
sub
or
pop
cmpsl
pop
enter
cmp
xlat
pop
ja
jecxz
gs
cmpsb
mov
pop
adc
push
fprem
adc
adc
inc
rorl
cmp
cmp
and
cmp
mov
sbb
push
call
cmp
rcr
or
fstl
movl
lds
cmpsb
lcall
pop
outsb
push
pop
movsb
fcomps
sbb
mov
mov
call
lock
add
pop
mov
dec
mov
adc
push
or
test
mov
cld
js
call
int
sub
add
adc
sti
adc
aam
adcb
sbb
pusha
andl
dec
or
call
push
addb
pop
ljmp
mov
popf
adc
icebp
lock
sbb
mov
aas
movsl
movsb
xchg
cmc
mov
and
hlt
aam
lock
data16
and
cmp
std
or
add
adc
enter
add
sbb
insb
fildll
jle,pt
push
ss
push
fbld
daa
pop
xchg
hlt
into
in
movzbl
out
push
pop
clc
div
pusha
jnp
push
cmc
inc
aas
lock
cli
push
cli
or
and
clc
push
mov
adc
gs
add
add
imul
ss
lods
push
icebp
popa
pop
repnz
imul
div
fsubrs
fadds
faddl
frstor
filds
xchg
addl
cmp
jb
outsb
outsw
push
lock
or
push
push
adc
jne
xorl
cltd
xlat
pop
cwtl
xchg
or
enter
xchg
sbb
adc
pop
add
inc
pop
pop
dec
push
dec
inc
xchg
xchg
xchg
es
nop
sub
cmp
into
das
adc
call
sbb
icebp
ja
cmp
popf
fldt
cmp
sub
lcall
imul
inc
in
in
mov
insb
sbb
lock
mov
ret
stos
test
or
cmpsl
xor
loop
out
push
push
out
out
push
cmp
cmp
jge
fsts
sbb
int3
push
cld
cld
pop
xorl
jno
xchg
xor
jb
ja
xlat
xor
arpl
lea
mov
cmp
pop
mov
push
pop
dec
jmp
aad
jbe
into
and
jns
mov
xchg
les
fdiv
mov
das
loop
fstl
addr16
mov
mov
push
addr16
sar
testb
fucomip
pop
js
mov
imul
iret
scas
xlat
and
pop
aaa
hlt
lock
dec
fdiv
inc
aaa
jb
sbb
je
push
add
cmp
pop
inc
add
lods
cmp
lahf
mov
add
or
sti
decb
mov
mov
sub
jae
push
and
sub
fbld
pop
jmp
push
repz
std
push
cmp
xchg
std
xchg
sti
aas
xchg
sti
and
xchg
das
imul
pmulhw
adc
mov
pop
or
lods
popa
push
add
pop
add
pop
push
daa
outsb
aaa
push
xor
adc
xor
call
cs
sbb
sub
jmp
or
push
fmuls
leave
cmp
sub
stos
repnz
pop
cs
fistpl
fwait
jae
es
mov
lcall
mov
int
movsb
movsl
cmpsb
cmpsl
jo
cmpsb
imul
lcall
mov
jb
xor
mov
mov
mov
mov
fldt
mov
fs
xor
jb
bound
lcall
and
mov
enter
lcall
into
inc
scas
imul
lcall
pop
xlat
aaa
fcomp
shll
imul
outsb
mov
adc
cmp
lret
mov
lret
jo
outsb
xor
sub
arpl
inc
shll
push
es
lret
mov
daa
es
inc
cmp
and
call
pop
mov
rcll
and
es
addps
or
or
out
addr16
or
jns
inc
push
sub
xor
test
add
xor
push
push
mov
in
add
lea
jnp
or
adc
je
mov
insb
insb
sub
push
sbb
xor
push
and
mov
insb
repz
xchg
jle
mov
pop
loopne
push
sub
jb
add
cmp
mov
mov
mov
fcoms
loopne
and
addr16
pop
mov
adc
mov
push
stos
pusha
add
dec
insl
sub
inc
jbe
insl
mov
adc
outsl
or
or
dec
imul
add
out
sbb
sbb
add
insl
jge
sbbl
inc
mov
xchg
mov
cmpsl
loopne
fs
push
iret
in
adc
jle
mov
enter
mov
fstpt
sahf
pushf
std
xor
je
push
iret
add
iret
inc
push
push
insb
pop
xchg
movsb
mov
pop
shlb
pop
arpl
mov
xor
or
dec
rolb
fs
idivb
fstpl
cmpps
mov
adc
jg
push
inc
adc
mov
add
or
and
std
test
rclb
sub
fs
or
shr
cmpb
cli
or
bsf
lods
call
cmpsb
cmp
adc
roll
notb
adc
repnz
clc
std
stc
mov
fstps
test
xor
jbe
jl
je
fs
mov
es
adc
mov
add
jecxz
fsubrs
add
in
xor
sbb
cmp
pop
xor
andl
jbe
jo
dec
cmp
fcompl
mov
mov
pop
fs
iret
roll
cmp
push
in
jne
cmp
fwait
scas
test
push
ret
insl
mov
sub
dec
adc
jl
add
push
push
or
mov
mov
mov
icebp
pop
gs
pop
jnp
scas
aad
ret
sub
std
add
mov
add
jmp
aam
jge
push
rep
or
loope
ss
cld
mov
pop
shll
cld
call
shll
lods
loope
mov
aam
mov
roll
sub
pushf
ds
jnp
sbb
sub
jnp
cltd
test
les
fsubrl
dec
clc
aam
std
cmp
addr16
sbb
adc
push
xchg
sbb
sbb
jp
je
cmp
in
fs
iret
out
jnp
pop
sti
cmp
in
jne
xchg
add
sbb
test
lret
inc
add
push
into
rclb
mov
dec
dec
mov
sbb
mov
std
lock
xchg
and
pop
ret
daa
sub
jnp
lods
or
mov
mov
push
mov
mov
fadds
xchg
es
jnp
pop
mov
jnp
or
dec
neg
in
or
shlb
dec
je
mov
or
lret
inc
aam
cmp
jp
insl
jb
aad
cs
cli
fs
insb
add
out
insb
dec
insl
insl
pop
pop
movsb
mov
je
in
add
nop
lret
gs
lods
out
dec
lock
icebp
inc
sbb
mov
adc
sub
mov
dec
insl
insl
inc
je
and
inc
insb
cwtl
and
xor
popa
insl
cmp
in
lock
xor
or
loopne
mov
add
fcoms
xor
iret
mov
cli
jle
lea
cs
pop
aaa
dec
arpl
dec
mov
jecxz
sbb
xor
cmp
imul
add
addr16
insl
mov
jbe
loopne
out
jge
fdivr
call
pop
movsb
mov
xchg
jne
jb
stc
addr16
jne
mov
cmp
dec
and
inc
cld
cli
xchg
fistl
test
cmp
sar
push
incb
cmp
int
push
mov
testb
ljmp
mov
into
inc
pop
lock
push
pop
jl
xchg
rclb
push
sbb
add
adcl
or
cltd
adc
pop
mov
stos
outsl
nop
lock
mov
sti
inc
int3
push
push
push
mov
push
sbb
xchg
add
dec
pop
push
faddl
add
push
sbb
lahf
pop
roll
mov
loop
cmp
insb
lods
mov
inc
mov
cmovo
mov
imul
mov
icebp
js
jo
sub
shlb
xchg
push
pusha
out
mov
punpckhdq
fsubrs
in
push
hlt
sbb
insl
cmp
psllw
fldt
loopne
pop
dec
push
clc
add
sub
mov
stos
or
add
rcl
sbb
mov
fsub
call
mov
outsl
pop
dec
jge
sub
jo
roll
fldt
es
or
sub
ljmp
xor
ret
clc
call
scas
sub
adc
pop
rolb
fisttps
lock
pop
dec
mov
mov
test
push
jae
stos
dec
rol
sti
sub
adc
inc
mov
jnp
call
add
idiv
jle
ret
popa
loope
test
cmp
and
loope
lods
or
xor
add
adc
ljmp
sbb
shrl
mov
ss
push
ret
sub
mov
adc
sbb
leave
cmp
sub
jge
imul
push
mov
dec
dec
dec
inc
dec
lret
mov
lret
inc
push
cs
insb
sbb
jo
pop
xchg
test
insb
jne
adcl
fs
insb
jnp
xchg
gs
pop
and
je
int
pop
gs
jb
mov
data16
movsb
push
movsl
cmpsb
pop
cmpsl
push
pop
lret
scas
imul
sub
mov
dec
je
jo
sub
add
dec
jo
outsb
leave
mov
lret
push
gs
gs
mov
mov
aam
mov
mov
xor
inc
xchg
gs
dec
xchg
xchg
xchg
xchg
mov
xchg
inc
push
cwtl
js
lcall
je
inc
lcall
std
gs
inc
pop
movsb
imul
shll
mov
pmulhw
or
outsl
int
jmp
mov
mov
js
xor
arpl
sbb
jmp
fsubr
sbb
mov
adc
xchg
adcl
add
jg
shll
sbb
cld
divl
fs
hlt
and
psubsw
mov
jmp
and
inc
inc
cmp
pop
and
out
xor
push
fidivrs
shrl
push
test
std
push
jmp
push
pop
xor
add
aad
cmpsl
add
adc
shr
ljmp
add
mov
cmpsl
fldenv
or
or
stos
mov
sbb
jne
or
fimuls
and
push
jl
gs
popa
add
xchg
or
xor
push
fdivs
enter
pushf
jo
in
mov
fnstenv
add
dec
push
sti
jns
test
jb
xor
mov
dec
sarl
or
insb
mov
lcall
ret
call
or
sbb
pop
or
mov
outsl
fistl
inc
cmp
jb
inc
incl
ja
movb
lret
test
and
hlt
adc
and
lret
mov
scas
ja
xor
cmpsb
imul
and
insb
jb
arpl
leave
inc
push
jbe
jb
jbe
xchg
sub
and
jne
lods
adc
sub
add
adc
mov
sbb
je
fildll
jge
popa
test
xchg
jp
and
mov
iret
jl
cmp
mov
sbb
pop
xor
out
add
cmp
pop
ret
or
and
pop
inc
popa
jmp
sub
adc
sbb
sub
lahf
ret
in
std
and
clc
sti
or
xor
mov
or
std
or
add
jne
jb
sbb
notl
fcompl
aaa
lds
jmp
loopne
mov
pop
test
jno
loope
sahf
iret
adc
sahf
xlat
push
xor
push
loopne
xchg
fnstcw
pop
xchg
gs
imul
xchg
gs
outsl
jae
push
inc
xchg
es
rorb
aas
pop
stos
in
adc
sbb
pop
negl
dec
sub
pandn
andb
jge
and
pop
mov
inc
push
adc
lretw
orb
adc
sbb
or
cmp
subl
push
dec
xchg
push
push
cmp
and
pop
push
push
inc
sti
faddl
lods
int3
sub
xor
push
je
dec
adc
outsl
shll
jne
add
dec
and
or
je
sub
pop
loopne
in
dec
ror
mov
jge
mov
mov
imul
ds
sub
lahf
inc
lds
ja
xor
ds
fldcw
aas
and
xor
jge
jg
stos
stos
imul
dec
add
mov
aaa
jmp
rclb
xchg
cmp
and
add
fs
pop
enter
add
sbb
mov
mov
xor
mov
les
pop
repz
loopne
pop
rorl
adc
jae
or
rcrb
or
test
push
mov
xor
movsl
fwait
xchg
outsb
push
pop
rorb
int3
push
add
cli
xchg
test
mov
pushf
loopne
adc
pop
sbb
lods
or
test
cmp
cmp
dec
xor
inc
dec
mov
cmp
push
cld
xor
std
sub
cmc
cld
mov
fdivrl
test
idivl
xchg
dec
jle
outsl
jb
adc
cmp
in
shr
inc
pop
adc
jg
add
or
sbb
shr
jg
std
cwtl
lret
push
lds
and
sub
mov
popa
arpl
mov
lret
mov
cmp
mov
lret
popa
imul
movsl
imul
rcll
adc
mov
mov
insl
xlat
insb
mov
pop
rol
ret
shll
es
xchg
insb
pcmpeqw
add
gs
imul
imul
stos
sbb
fdivs
sub
pop
out
cmpsb
imul
lcall
xor
mov
adc
dec
out
pusha
mov
sub
shr
sbb
pop
repnz
adc
shld
stc
nop
scas
lock
dec
cltd
mov
sbb
add
add
sar
inc
cmp
sbb
adc
rorl
mov
hlt
xchg
cld
mov
cmp
and
add
insb
and
test
push
inc
jns
sbb
sub
arpl
xor
daa
lret
cmp
jb
inc
or
jne
packssdw
sbb
sbb
fxch
roll
cmp
cmp
xor
lret
mov
cltd
sub
jmp
sbb
mov
popa
cwtl
pop
sbb
ja
dec
shll
arpl
pop
shll
arpl
stc
pop
lret
adc
or
jb
je
pop
cmpsb
fwait
sub
sub
push
and
ljmp
mov
out
call
insl
dec
insb
test
push
adc
lock
scas
mov
inc
jmp
popa
arpl
xor
scas
dec
je
xor
cmc
mov
and
mov
xchg
pop
je
insl
call
xor
xchg
inc
lahf
or
hlt
dec
cmp
sti
mov
mov
cwtl
aam
in
and
push
or
lods
add
push
jge
cmp
and
int
xorb
movsl
xor
loopne
jo
adc
btr
mov
shlb
jmp
adcl
or
cmp
jle
fstpt
or
arpl
call
jne
push
movl
cli
imul
test
pop
add
testl
cmpsb
and
push
push
sub
push
xchg
call
xor
push
xlat
call
lods
mov
xchg
out
icebp
inc
sub
mov
sbb
movl
fsub
cli
loope
push
inc
pop
push
pop
cwtl
out
insb
arpl
mov
adc
in
add
shrb
popa
out
lret
dec
add
rorb
ljmp
mov
in
out
popf
and
int
out
ds
mov
pop
mov
fcoml
fidivrs
xor
je
outsl
loopne
cld
pop
and
sbb
cld
jecxz
in
in
add
xchg
cld
out
jl
xchg
or
mov
popf
mov
mov
je
call
cmpsl
ljmp
mov
and
cmpsb
push
push
or
hlt
mov
cld
or
inc
sub
rcpps
clc
mov
mov
andw
adc
iret
movsl
leave
cmpb
sbb
push
cmp
sbb
loopne
mov
in
sarb
lods
adc
push
mov
push
add
and
insl
jo
adc
scas
or
fdivrl
inc
mov
adc
sub
pop
fcoml
sub
push
call
sbbl
aam
movsb
jp
mov
inc
rorb
or
pop
and
ds
adc
sub
inc
lcall
add
sub
cmpsl
dec
gs
and
stos
add
sbb
adc
pop
pop
sub
lcall
sbb
jl
or
daa
cmp
mov
fstl
call
add
adc
leave
push
mov
xor
call
enter
sub
lret
push
sub
call
nop
xchg
add
sub
pop
adc
cmc
push
loope
inc
cmp
insl
call
rcll
xor
push
push
or
xlat
mov
mov
je
add
cmp
mov
aaa
daa
push
xor
lea
jo
xor
push
and
jle
insb
div
lret
shll
add
push
and
and
call
push
push
fcomp
sub
mov
sbb
es
push
test
pop
jmp
cmp
faddp
jg
test
das
notb
and
inc
mov
pop
jb
xor
and
mov
movsb
cmpsl
mov
aaa
fsubr
or
or
or
add
lcall
adc
movl
push
mov
nop
jb
rcr
and
std
sub
sbb
push
pop
xor
pop
and
movsl
and
int
or
push
cmp
ljmp
jl
pop
xchg
or
sbb
loopne
pop
mov
xor
cmp
add
jne
and
cmp
ret
inc
pop
push
enter
addr16
push
pop
mov
cmp
mov
mov
clc
dec
and
mov
cli
mov
das
mov
fwait
out
imul
and
or
xchg
les
loop
and
pop
daa
sti
jbe
cmp
dec
xor
sbb
cmp
xor
push
cwtl
int3
sub
mov
dec
adc
hlt
push
jne
adc
test
sbb
mov
insl
stos
adc
add
sub
jbe
cmp
pusha
andb
scas
xchg
cwtl
sub
pop
test
xor
dec
xlat
lcall
and
inc
outsl
pusha
and
push
add
les
jge
sub
push
mov
xlat
push
push
mov
adc
cmp
faddl
ja
cli
sub
les
mov
cwtl
jbe
mov
fsubl
or
cmp
sub
or
outsb
sbb
or
rol
repz
fsubr
and
pusha
daa
ss
mov
das
push
out
sti
loope
nop
xlat
push
call
lret
aam
add
xor
sbb
sub
dec
inc
and
call
fldcw
pop
je
insb
jae
mov
dec
fwait
clc
into
mov
mov
push
jp
xchg
mov
sbb
mov
cmp
daa
jg
xor
add
push
call
xchg
scas
and
adc
or
pop
mov
jg
push
jp
scas
xlat
adc
mov
push
xchg
cmp
sahf
sbb
dec
jmp
mov
pushf
push
xchg
dec
repnz
pop
push
insb
xchg
jge
cmp
push
in
push
and
shrl
xchg
sub
ss
test
cwtl
jge
ss
mov
mov
mov
or
cs
sbb
dec
or
jp
add
int3
repnz
sbb
add
pop
cmpsb
lret
or
gs
add
pop
mov
cmp
xchg
mov
std
std
jmp
jbe
iret
or
mov
push
xchg
cli
jb
clc
call
scas
cltd
iret
push
sbb
dec
ret
stc
mov
std
sbb
lea
pop
sti
movsb
push
and
push
sub
mov
push
ret
xchg
adc
pusha
add
add
jbe
jae
into
mov
xor
mov
ds
cmp
push
mov
cmc
mov
jp
push
loope,pt
cmp
scas
mov
push
xor
sub
add
sahf
test
iret
cmp
and
mov
int3
testb
add
or
out
pop
mov
add
and
scas
sbb
cmp
cmp
cmp
push
add
insl
xchg
jbe
icebp
push
mov
jle
cmp
jl
or
cmp
or
cmpb
js
aaa
call
jge
jo
add
cmpl
mov
and
adc
imul
sahf
and
mov
stos
jns
add
mov
or
fisttps
push
inc
dec
sbb
aam
sub
test
cmpsl
je
and
add
mov
add
add
add
add
jmp
or
outsl
inc
mov
mov
mov
jae
lock
shrb
add
fisttpll
lea
fistpll
ljmp
jno
shr
jle
movzwl
mov
jne
daa
add
add
sub
lods
lcall
loop
stc
call
popa
adc
add
jmp
cmp
jne
data16
or
pop
cmp
add
or
sub
add
and
xlat
out
or
orb
push
lock
cld
sub
mov
mov
jl
add
jmp
and
add
sbb
push
repz
fcmovnb
add
push
jno
push
sbb
push
and
dec
adc
push
rcrb
add
imul
or
sbb
lea
pop
mov
pushl
addr16
loope
ret
push
scas
clc
add
sub
mov
addb
bound
add
adc
dec
xorl
cld
out
xchg
mov
call
push
call
jbe
in
adc
lcall
xor
push
lds
pushf
xor
pop
mov
push
iret
and
add
adc
dec
pushf
cltd
cld
imul
fstl
fcoms
int
fdivrl
cmpsb
sub
pop
cmpsl
pop
mov
shlb
icebp
mov
xchg
inc
cmp
testb
je
pop
lock
stos
jbe
sub
or
enter
push
insl
push
pop
xor
sti
inc
fs
lret
gs
jl
out
lds
enter
pop
jecxz
data16
adc
mov
add
mov
adc
test
sub
stos
push
imul
rcrl
cmp
jne
nop
sbb
mov
jmp
and
jo
inc
inc
jl
sub
movsl
mov
dec
xchg
ljmp
push
mov
push
int
mov
dec
mov
aas
jo
and
push
xor
ret
or
sub
mov
add
out
push
or
xor
jg
jge
add
add
mov
add
push
mov
cmp
call
jo
pop
adc
jge
pop
inc
cs
add
pop
or
fcmove
or
call
dec
or
push
rclb
hlt
rcll
outsw
outsb
je
or
jae
data16
xor
cmp
hlt
mov
int
aam
je
and
pop
cwtl
or
inc
pop
mov
and
add
jo
xor
add
jbe
or
push
sbb
xor
or
fnstsw
push
cmp
and
adc
push
push
sub
sbb
push
addb
xchg
jbe
in
or
mov
jge
aam
adc
or
or
test
clc
and
repnz
sbb
nop
rcrb
jbe
fsubl
lock
push
stos
int
popa
cmp
jne
inc
std
fisubrl
pop
fwait
sub
push
mov
mov
push
jae
add
ficomps
mov
dec
mov
xor
mov
mov
fisttpll
dec
mov
jle
push
test
test
insb
sbb
push
or
shlb
adc
stos
mov
lods
decb
inc
fisubl
mov
jl
cmp
mov
xor
out
push
clc
movlps
insb
mov
dec
mov
or
cli
iret
nop
sbb
mov
outsb
push
add
inc
jl
push
arpl
lock
adcb
jne
or
adc
jo
repnz
mov
inc
insl
les
lds
int
sub
outsb
enterw
shrb
addr16
xor
xor
int3
int
negl
inc
aas
jp
std
rolb
pop
sar
or
lods
cmp
jne
sub
rcrb
xor
pop
xchg
gs
xchg
andb
cwtl
push
repz
add
xor
gs
jb
jns
std
push
shlb
dec
stos
jne
xor
enter
or
pop
add
cmp
mov
jbe
jne
jmp
in
cld
lods
adc
psubb
cmp
adc
mov
shlb
push
mov
pushf
lcall
repz
and
mov
int
aad
cmp
sbb
cmp
sub
xor
xor
lea
in
call
mov
jge
add
add
jle
xlat
push
pusha
push
scas
push
jno
adc
adc
cmpsl
mov
adc
xor
movsl
aam
aad
or
gs
xchg
gs
insb
outsl
jb
gs
xchg
gs
gs
test
mov
cmp
inc
scas
push
in
shl
xor
push
cltd
mov
adc
das
mov
leave
std
sub
adc
add
cmp
ficomps
pop
push
inc
lock
into
push
cmp
mov
mov
push
xchg
adc
pop
adc
adc
push
fistpl
shll
js
movsl
inc
decb
add
and
or
mov
xlat
pop
lods
arpl
jmp
xchg
pop
inc
push
and
pop
dec
inc
rol
mov
jnp
pusha
push
jne
dec
rcr
inc
adc
add
mov
and
mov
adcb
orb
add
sbb
aam
xor
nop
xor
xchg
xor
mov
jbe
pop
pop
or
add
sbb
sbb
and
sub
stc
sbb
cmp
xor
gs
lret
mov
mov
mov
in
test
lock
inc
mov
je
stos
fistpl
dec
cmp
mov
cs
add
sbb
add
xchg
xor
add
add
dec
inc
outsl
fldl
or
push
arpl
push
test
sub
add
jbe
mov
xchg
mov
add
adc
and
push
jb
arpl
jae
addl
inc
aam
dec
outsl
outsl
insb
jb
xor
push
outsb
popa
jo
imul
jae
outsl
je
xchg
push
imul
push
add
ss
test
or
insb
mov
sbb
and
mov
bound
jb
inc
packsswb
shlb
push
fimuls
or
sbb
sbb
fs
adc
sbb
mov
adc
aaa
arpl
insb
jae
jb
mov
aaa
pop
out
movsb
add
inc
imul
inc
mov
push
or
and
inc
jns
add
or
fadd
pop
push
and
mov
bound
insl
into
add
dec
aas
add
or
jb
stos
sbb
xchg
fistl
fstpl
outsl
jb
outsb
and
push
push
mov
sbb
gs
outsl
lods
lods
push
jo
int
int3
dec
sbb
push
add
dec
push
jge
popa
cmpsb
test
xor
out
inc
scas
fldt
jo
push
push
out
sbb
inc
cmp
pop
ret
imul
andb
arpl
cmpsb
push
mov
je
inc
and
mov
push
das
rcrl
or
fdiv
dec
pop
fcomps
lods
and
push
add
gs
or
add
out
mov
pop
fwait
lods
test
mov
add
xor
in
push
outsl
imul
pop
add
mov
mov
leave
xchg
adc
xchg
sbb
imul
sti
pop
inc
outsl
jmp
ja
add
jns
mov
sbb
mov
outsl
out
mov
fistps
imul
outsb
push
ret
pushf
insl
or
or
sub
xchg
jne
pop
pop
shll
pop
add
xchg
test
test
mov
sahf
xor
stos
pushf
adc
and
popf
mov
dec
test
mov
adc
outsl
insl
insl
fs
je
dec
adc
insl
shll
sbb
jp
xorl
adc
fs
pop
ret
test
mov
nop
sub
dec
inc
push
dec
inc
repnz
add
jo
je
inc
push
pop
add
mov
add
push
iret
pusha
or
gs
fs
popa
xor
ja
push
popf
fistpl
outsl
jae
mov
sbb
dec
or
fadd
adc
pop
pusha
gs
jecxz
cmp
pop
mov
addr16
xchg
data16
imul
push
xchg
cmp
inc
or
add
int
pop
push
sbb
add
xor
sub
fs
ljmp
insl
aad
sbb
jecxz
sub
mov
aaa
aaa
jns
add
sbb
rcll
jne
add
push
mov
imul
sub
test
adc
push
cmpsb
jne
mov
inc
push
out
imul
push
and
jnp
out
cmp
inc
mov
adc
lret
or
jae
adc
ss
outsb
jne
jno
jbe
rcr
movsl
add
jne
shll
arpl
jo
inc
popa
arpl
add
insl
gs
andl
inc
inc
push
inc
push
out
push
sbb
cmpsb
xlat
rclb
jmp
mov
xchg
or
sbb
inc
gs
pop
mov
es
jb
adc
adc
lods
add
std
popf
int
jne
pop
adc
sbb
mov
data16
mov
daa
sub
arpl
insb
in
jge
jecxz
imul
dec
mov
pop
adc
or
mov
and
adc
jns
jge
jae
imul
das
out
insl
lods
jbe
cmp
mov
jl
outsl
jne
ret
xor
inc
pop
xor
pop
fnstenv
mov
lahf
bound
mov
idivl
and
jbe
jns
adc
out
add
rep
ja
dec
push
push
add
push
add
mov
jne
insl
push
out
or
pop
mov
add
sbb
add
push
push
push
adc
sti
xor
fcoml
adc
add
jmp
pop
pop
push
dec
inc
dec
push
dec
scas
xchg
xor
je
jns
or
lret
xlat
jne
data16
pop
or
lods
xlat
dec
sbb
cmovl
shll
push
pop
sub
mov
inc
divl
cmpb
mov
add
pop
dec
add
push
push
stos
xchg
add
inc
cmp
ljmp
cmp
or
and
inc
ds
push
aas
pop
aas
fs
push
aas
test
sub
decl
aas
movsb
aas
test
mov
mov
aas
inc
mov
or
sbb
pop
xor
xor
xor
xor
dec
xor
xor
xor
push
xor
xchg
lcall
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
mov
xor
xor
xor
xor
xor
sub
xor
jo
xorb
pushl
mov
ss
aaa
shlb
in
aaa
add
sbb
sub
xor
inc
cmp
cmp
mov
cmp
cmp
cmp
cmp
push
cmp
cmp
cmp
cmp
stc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
lcall
aaa
lahf
aaa
movsl
aaa
shlb
aaa
repnz
cmpb
cmp
cmp
call
arpl
nop
cmp
cmp
cmp
cmp
cmp
dec
cmp
jnp
cmpb
cmp
cmp
decl
cmp
cmp
cmp
cmp
cmp
cmp
mov
cmp
cmp
cmp
push
cmp
mov
aas
enter
decl
dec
and
das
xor
jle
xchg
xor
xor
xor
xor
push
pop
pushl
or
inc
xor
sahf
xor
xor
xor
xor
xor
xor
xor
xor
fs
aaa
mov
jl
test
mov
xor
call
shlb
out
sysenter
adc
xor
xor
xor
xor
decl
movsb
xor
xor
dec
pushl
xor
cmp
fs
or
xor
popf
xor
lock
inc
ss
pushl
and
sub
jns
mov
aaa
fnsave
cld
aaa
pop
cmp
cmp
cmp
cmp
cmp
pop
cmp
lahf
cmp
cmp
cmp
cmp
cmp
cmp
cmp
imul
decl
cmp
ficomps
cmp
cmp
cmp
cmp
cmp
fdivrs
sbb
inc
ds
cli
or
dec
dec
aas
pop
aas
insl
aas
fwait
aas
cmpsb
aas
out
aas
ljmp
dec
lock
add
sub
xor
mov
xor
xor
xor
xor
xor
xor
xor
arpl
xchg
xor
out
clc
mov
pop
inc
xor
mov
mov
xor
shll
fadd
pushl
and
xor
std
jecxz
add
push
xor
mov
xor
add
or
xor
dec
imul
mov
outsb
aaa
jmp
incl
aaa
lret
aaa
aaa
xor
cmp
mov
xchg
sarb
cmpl
cmp
mov
loope
nop
cmp
cmp
fcomip
cmp
cmp
dec
cmp
cmp
cmp
cmp
jge
call
cmp
cmp
cmp
push
cmp
js
xchg
stos
cmp
call
cmp
cmc
cmp
pop
bound
les
push
aas
pop
aas
arpl
mov
outsl
mov
add
test
nop
xor
mov
jno
js
jge
xchg
xor
xor
xor
xor
ja
aam
dec
pop
xor
jge
xchg
xor
aaa
pushl
xor
xor
xor
xor
xor
xor
mov
xor
shlb
ss
aaa
or
adc
and
sub
jae
jle
cli
outsl
cli
incl
aaa
fwait
aaa
mov
push
shlb
loopne
pushl
adc
lcall
cmp
cmp
cmp
cltd
cmp
cmp
cmp
cmp
sti
popa
loope
jg
cmp
cmp
cmp
cmp
cmp
nop
or
sarb
cmp
push
in
repnz
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
lcall
cmp
cmp
cmp
cmp
cmp
or
and
clc
cmp
fs
jle
mov
mov
cmp
out
call
ds
sbb
sub
xor
je
jp
fwait
sarb
repnz
decl
sbb
and
daa
aas
sub
xor
ss
cmp
inc
aas
inc
aas
pusha
aas
insb
aas
pop
clc
clc
pushl
cmpb
aas
mov
aas
stc
pop
nop
push
push
sar
pop
mov
sub
xor
dec
xor
pop
xor
jne
aam
jg
xor
xor
xor
xor
xor
std
jg
filds
lods
xor
xor
xor
xor
xor
xor
in
lea
xor
xor
add
dec
xor
jbe
mov
xor
repz
xor
xor
xor
jmp
stos
xor
push
xor
sub
xor
pop
pop
cli
push
xor
xor
stos
xor
fnstenv
jmp
cld
adc
loope
sbb
cs
add
cmp
xlat
mov
cmp
cmp
cmp
cmp
imul
jg
cmp
cmp
cmp
cmp
push
cmp
jge
test
jecxz
push
cmp
inc
cmp
pop
cmp
loope
ret
cmp
mull
cmp
cmp
pop
cmp
ja
jg
xchg
cmp
jecxz
ljmp
cmp
loopne
or
es
push
xchg
mov
ja,pt
jl
out
in
ds
or
adc
pop
arpl
pop
aas
outsl
aas
hlt
or
jl
cmpsl
aas
aas
out
mov
xor
mov
xor
repz
sar
int
xor
xor
xor
xor
xor
xor
leave
push
or
bound
push
arpl
movsb
add
add
jg
jg
push
sbb
adc
mov
test
pop
nop
mov
mov
je
dec
into
int
filds
shrb
sti
mov
mov
jmp
cmp
add
push
cmp
sbbl
in
add
pusha
nop
test
jbe
xor
pop
lock
mov
add
mov
fimuls
nop
push
cmp
cmp
or
push
jb
or
xorb
inc
and
sbbl
incl
add
jge
push
daa
push
lcall
xor
mov
imul
cmpsb
jae
sbb
out
xor
add
lcall
mov
imul
xorb
stos
mov
fsubs
shrl
pop
cmp
je
push
sub
add
xchg
inc
add
add
mov
add
mov
ret
adcb
add
and
cli
jge
js
push
dec
dec
adc
push
xor
mov
and
inc
and
repz
outsl
push
add
enter
and
and
stc
mov
and
sub
push
enter
and
nop
pop
leave
or
mov
je
cmp
jns
add
add
sbb
pop
test
mov
sbb
dec
test
or
and
and
and
repnz
and
sbb
lret
inc
cwtl
imul
dec
push
push
and
cltd
and
and
xchg
xor
cmp
negb
and
push
sbb
call
pop
xor
insl
idivb
inc
xchg
and
imul
ds
xchg
outsb
pop
js
out
pop
and
jo
mov
inc
inc
push
inc
xchg
and
push
cmp
scas
adc
add
sbb
mov
stos
in
lahf
in
sub
cmovge
push
or
mov
cmp
push
mov
mov
inc
cmc
sub
jmp
push
stos
dec
cmc
push
cmp
test
arpl
repnz
or
cmp
cmp
test
and
and
adc
sub
pusha
and
pushf
stos
or
dec
jbe
dec
jp
pop
dec
push
adc
and
dec
dec
push
lds
pusha
and
mov
xor
add
mov
dec
pop
or
imul
push
cmp
and
add
cmp
jl
pop
inc
mov
pop
cmpsl
call
idiv
mov
in
xchg
icebp
idiv
sbb
cli
std
mov
adc
jl
mov
jne
pop
push
pop
add
sbb
mov
nop
pop
xor
add
insl
mov
xor
xor
mov
mov
xor
xor
xor
movsl
pop
push
mov
out
jl
dec
lods
std
dec
scas
std
scas
mov
jb
fnstenv
mov
mov
mov
std
mov
mov
add
stos
pop
add
fisttpl
mov
sahf
and
lods
ja
test
rcr
stos
lods
cld
jo
shl
fnsave
scas
arpl
push
fwait
leavew
xor
aad
xlat
insb
lret
mov
adc
outsl
jb
jb
daa
or
js,pn
sbb
jns
pop
daa
adc
inc
push
sbb
push
jp
adc
jnp
and
mov
stc
or
rolb
add
jmp
cmc
mov
fs
xchg
sub
gs
xchg
outsb
outsb
gs
je
je
cs
clc
fs
mov
insb
popa
jne
arpl
outsb
mov
push
mov
movsl
mov
jno
xchg
lods
loop
les
add
stos
gs
mov
js
insb
outsl
jb
sub
gs
and
mov
xchg
dec
inc
mov
test
xchg
xchg
scas
loop
in
das
mov
jno
les
das
mov
and
imul
call
sub
pushf
cmp
cmp
sbb
and
outsb
stc
mov
push
jp
pop
cmc
iret
mov
or
or
sbbb
xorb
jne
test
ret
icebp
cmp
add
jbe
or
inc
xchg
stos
jg
mov
or
out
push
aam
add
fcomp
call
inc
or
or
mov
shrb
iret
fwait
test
adc
clc
dec
and
xchg
cwtl
dec
jnp
add
push
sbb
jbe
xchg
or
adc
js
and
movsl
jbe
push
and
push
insl
test
jp
mov
loopne
adc
or
add
cld
sbb
add
sete
mov
or
mov
mov
arpl
inc
add
jae
or
mov
lock
dec
or
jo
add
or
jmp
adc
or
inc
cmpb
test
jl
repnz
and
and
push
test
and
jns
adc
dec
and
xor
and
push
int
adc
cmp
js
fs
iret
movsb
das
fstps
xor
add
add
adc
xchg
dec
jae
nop
jl
sub
fnstcw
fwait
adc
dec
mov
pop
mov
das
bound
fmull
rorb
jnp
mov
bound
inc
lea
pop
inc
adc
adc
and
fildl
mov
bound
add
mov
xchg
adc
subl
ret
sbb
xchg
jne
pop
shl
add
nop
jae
add
lods
stc
push
mov
push
outsb
jb
and
and
outsl
js
and
xchg
xor
jns
inc
lods
dec
and
mov
jb
movl
lret
icebp
xor
inc
cld
add
dec
insl
insl
dec
jae
pop
add
imul
sub
cmp
and
dec
and
or
pop
arpl
add
sub
jns
add
xchg
movsl
add
in
lret
roll
push
add
xor
cmp
xor
fsubrs
xchg
out
cmp
inc
lcall
sarl
fadds
leave
fdiv
xor
xor
data16
or
cmpsb
sub
xor
mov
mov
dec
shll
out
clc
or
and
lcall
jge
add
leave
add
imul
repnz
fistps
lea
jno
adc
push
adc
das
dec
sbbl
inc
mov
adc
insl
push
add
add
or
push
jne
pusha
mov
mov
adc
inc
and
adc
ljmp
fs
je
jne
or
repz
sub
inc
xor
popa
adcb
cwtl
std
insb
and
jnp
imul
mov
sarb
xor
mov
adc
outsl
imul
pop
adc
sahf
inc
sub
or
imul
adc
outsl
jecxz
adc
add
imul
dec
outsl
sbb
flds
or
mov
add
rcrb
add
cs
aam
add
dec
les
add
ds
dec
adc
in
pop
add
add
out
jmp
cmovns
add
decb
jae
stos
xlat
or
pop
or
add
mov
and
pop
into
shrb
jecxz
or
out
je
or
fwait
jmp
test
insl
add
outsb
int
shlb
jae
and
popa
jns
sub
push
imul
addr16
jo
jnp
jmp
imul
fcoml
jne
pop
gs
sub
push
adc
push
lds
jb
xlat
jae,pn
cmp
fnstenv
xor
sbbb
lods
sbb
insb
popf
xchg
pop
lahf
sti
bound
or
lds
popf
addr16
sbbb
dec
adc
xchg
mov
imul
adc
inc
cltd
outsb
jae
push
sub
push
fwait
in
mov
imul
dec
dec
imul
sub
mov
adc
sbb
outsl
pcmpeqw
or
fwait
adc
pop
xor
inc
push
imul
and
arpl
adc
cmpsl
xchg
out
add
adcl
aaa
shrb
xor
adc
xor
push
decb
scas
xor
xor
xor
xor
mov
xor
mov
fisttps
imul
xor
xchg
xor
aaa
inc
and
pop
ss
mov
lea
cmp
inc
aaa
insl
aaa
je
mov
aaa
pushl
cmp
outsb
cmp
lcall
cmp
jg
clc
les
into
cmp
xor
cmp
cmp
cmp
cmp
cmp
cmp
cmp
pop
and
std
cmp
cmp
dec
cmp
fdivrs
or
pop
ds
lcall
ds
das
lret
add
and
add
nop
jle
jo
aad
add
add
adc
and
and
or
push
inc
sbb
add
xor
data16
loopne
xorb
pop
add
or
add
add
sbb
and
loopne
and
adc
adc
add
push
cmp
or
add
dec
outsl
jbe
and
fimuls
add
add
or
add
add
mov
addb
sbb
jmp
add
out
pop
sub
and
cmpsb
add
add
push
add
sbb
imul
add
add
add
filds
mov
dec
xor
inc
jo
int
inc
mov
mov
out
add
mov
sbb
lret
sbb
out
inc
add
gs
in
add
shlb
add
nop
mov
adc
push
add
add
adc
mov
out
je
xchg
and
ret
inc
daa
mov
fistl
sbb
lock
add
add
add
add
incl
add
add
inc
add
call
int
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
