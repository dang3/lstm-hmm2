fnstcw
sti
adc
sub
dec
and
bound
jle
lcall
enter
and
xor
shll
ds
pop
je
xor
roll
cmpsb
pop
ss
into
fidivrl
and
sbb
dec
outsb
fwait
or
and
and
jp
movsb
jmp
cwtl
lahf
mov
sbb
aas
add
ss
aas
dec
gs
gs
xor
cs
insb
add
or
push
push
jae
sbb
inc
bound
push
jb
jbe
mov
sti
imul
jns
je
insl
and
inc
inc
add
jae
add
push
gs
outsl
imul
add
fistpll
add
jbe
xor
cs
jne
arpl
xor
pop
imul
insl
jns
jbe
fs
add
je
pop
outsl
arpl
pop
jnp
bound
xor
xor
cmp
push
sbb
xchg
inc
sbb
aaa
and
in
sub
fnstsw
andb
out
std
rclb
xor
mov
inc
add
add
or
lds
in
mov
popa
enter
push
in
pop
outsb
add
outsl
int3
int
pop
into
push
iret
rorb
shll
xor
shll
aad
xlat
pop
fdivs
mov
mov
fisttpl
push
pop
loope
imul
inc
in
and
add
insl
mov
inc
daa
ljmp
in
pop
in
aaa
lock
repnz
xchg
int
stc
dec
pop
cli
sti
js
je
mov
fidivrs
call
jle
pop
adc
fbld
mov
xor
mov
mov
je
push
push
call
mov
jmp
mov
cmp
jne
xor
jmp
testl
sub
call
sti
test
je
sbb
outsb
imul
lods
pop
adc
jne
push
or
mov
sbb
iret
das
pop
stc
data16
inc
adc
cmp
jne
mov
loope
mov
pop
pop
pop
leave
ret
mov
in
sbb
fs
mov
xchg
adc
push
push
imul
jl
inc
mov
push
push
insl
test
xor
clc
add
pop
jnp
in
push
sbb
js
push
lock
data16
push
pop
insb
pop
push
int3
insl
jl
mov
adc
push
stos
mov
arpl
lock
cmp
je
push
adc
or
adc
clc
cmp
adc
push
push
sub
push
js
jnp
into
mov
push
push
or
movsl
sbb
jecxz
cmp
ss
in
sbb
pop
ret
dec
mov
mov
sbb
pop
fildl
sub
lods
fldenv
pop
jo
push
push
scas
inc
adc
negb
jo
push
adcl
mov
insl
fs
inc
test
mov
cli
daa
adc
push
dec
and
xchg
or
add
sbb
cmpsb
mov
pushl
dec
inc
lods
mov
mov
add
pop
mov
or
out
and
push
testb
je
adc
call
push
loop
addr16
mov
push
aad
and
push
je
xchg
mov
cmp
out
jnp
adc
aas
xchg
inc
cs
sbb
std
pop
jmp
or
cmp
mov
icebp
push
lds
or
lods
loope
bound
call
test
psrld
mov
inc
inc
dec
dec
test
jne
pop
fldenv
push
pop
jmp
lds
shl
or
push
jecxz
insl
mov
add
cmp
xor
sti
decl
test
add
and
aad
pop
clc
inc
and
inc
jnp
sbb
add
jl
jae
mov
adc
daa
push
aaa
in
int3
fistpll
sub
jg
push
bound
or
push
in
les
out
inc
jl
sbb
jbe
push
in
inc
mov
mov
push
pop
or
cmp
cwtl
pop
and
in
or
sub
divl
loope
pop
pop
shlb
add
std
add
leave
sbb
div
fucomp
or
je
repz
lea
inc
jnp
movsl
loopne
add
lea
out
or
mov
loopne
adc
cmp
add
add
xor
test
adc
fidivrs
or
sbb
shl
mov
xchg
fsubr
pop
and
ss
xor
lret
pushf
imul
mov
xlat
inc
xor
mov
std
adc
adc
mov
and
mov
or
pop
pop
negb
cld
pop
jmp
lods
jge
jmp
rcrb
or
imul
xchg
in
xchg
outsb
ljmp
pushl
xchg
imul
pop
imul
sub
jmpw
popw
or
jne
int
jg
insb
inc
or
test
jb
aam
ja
pop
mov
fistpl
in
push
test
add
sbb
xchg
mov
xchg
dec
inc
repz
loop
sbb
je
push
rcrl
data16
adc
pop
imull
shlb
xchg
or
xchg
sarl
sbb
movsb
icebp
les
std
stos
push
std
enter
mov
cld
std
dec
push
mov
iret
outsb
int
aas
cmp
push
pop
sar
fucom
data16
lods
jb
gs
cltd
imul
fldenv
out
imul
iret
push
out
imul
imul
imul
mov
data16
stc
cwtl
mov
lods
out
call
mov
jns
pop
jnp
sub
je
push
push
fwait
cmp
mov
or
mov
xchg
xor
xchg
and
add
and
mov
inc
imul
fs
in
rorl
outsb
ds
je
jae
in
les
pop
sti
bound
push
cmp
pop
xor
and
insb
movsb
cmp
outsb
and
cmp
int
mov
subb
or
fldenv
data16
call
mov
lods
and
jnp
jbe
xchg
push
or
cmp
outsw
dec
repz
or
jmp
addr16
pusha
jbe
cmp
ds
outsl
mov
fsubr
sub
outsl
sar
sahf
sbb
cmp
pop
mov
cmp
jl
call
jbe
adc
push
daa
cmp
sbb
add
imul
insl
nop
gs
out
and
cmp
fistpll
pop
lock
cmp
cmp
test
icebp
stos
idivl
sbb
fnstcw
mov
sbb
xor
lretw
adc
ret
fwait
or
in
insl
enter
enter
cmp
lock
cmpsb
dec
dec
sti
out
mov
push
ret
ljmp
frstor
or
in
lea
vhsubps
loop
dec
push
jb
sub
and
jae
sub
mov
or
loope
xchg
mov
addl
jbe
push
or
and
and
push
mov
add
and
ret
dec
push
dec
inc
dec
dec
inc
pop
ja
stc
add
dec
inc
dec
xchg
inc
push
dec
addb
fisubrl
inc
outsl
and
popa
or
lock
sbb
andl
push
add
add
nop
add
push
pop
ss
mov
inc
lock
pop
mov
int
mov
adc
js
outsl
addr16
insl
and
outsb
outsb
lock
in
ljmp
and
and
outsb
and
inc
dec
push
and
fs
clts
and
outsl
repnz
mov
rolb
stos
jae
add
add
add
repz
pop
cmp
add
inc
testb
inc
testl
inc
add
in
jo
push
dec
adc
mov
and
add
or
add
loope
jl
cwtl
or
add
add
daa
scas
cmp
or
xor
pop
fs
out
push
nop
mov
pop
or
mov
adc
xor
add
bound
pop
hlt
jb
mov
shrb
popa
je
xor
in
test
lock
sbb
cs
push
push
pop
sar
jle
insb
outsl
arpl
push
or
lcall
cmp
scas
add
dec
shll
subb
into
or
sub
mov
lcall
scas
and
stos
or
cld
or
dec
sub
push
pusha
insb
jle
dec
shll
movsb
mov
gs
add
xor
stos
pop
outsb
add
shll
ficompl
cld
push
lods
and
imul
cmpsl
imul
shll
cmpsb
add
dec
rorl
and
hlt
test
jb
test
ss
jbe
xor
xlat
sub
push
add
shll
mov
adc
add
pop
lcall
mov
test
mov
lcall
mov
xor
mov
sahf
scas
add
xor
rorl
sbb
xchg
xchg
ss
ret
scas
push
addb
pop
out
and
mov
shll
mov
out
adcl
insl
or
sub
push
fcomi
aas
mull
fs
sub
dec
je
jo
jne
jns
retw
fldcw
aaa
dec
jo
outsb
push
jb
adc
adc
dec
dec
add
jl
nop
mov
or
gs
pop
or
cmp
fstps
aaa
sbb
or
add
neg
or
add
inc
enter
dec
and
mov
or
xchg
testl
das
pop
add
gs
ret
ja
push
or
and
or
test
mov
or
incl
and
add
sub
mov
sbb
xchg
inc
xchg
sub
inc
xchg
inc
sbb
pop
add
push
enter
and
aad
aas
cmpsb
dec
jae
mov
das
xor
add
and
pop
xor
pandn
add
dec
add
ja
out
mov
packsswb
je
jne
jb
gs
xlat
jne
popa
sbb
pop
push
incl
jne
gs
add
push
inc
jb
push
and
mov
ja
or
push
mov
jae
pop
and
addr16
xor
push
sbb
in
inc
jecxz
pop
add
jo
jg
add
pop
cs
add
shrb
gs
popa
pop
mov
xchg
push
dec
inc
push
push
inc
push
inc
dec
adc
outsl
or
pop
call
outsl
ja
and
inc
jne
jb
je
pop
call
imul
jb
inc
popa
jb
push
lods
jge
std
push
push
dec
ja
add
pusha
adc
stos
or
ja
and
aas
add
dec
pop
push
or
arpl
outsl
data16
je
jo
jb,pn
jb
xchg
cmp
sbb
mov
das
jp
insb
push
push
push
dec
push
push
insl
aam
xor
into
mov
mov
inc
xor
pop
jnp
aad
out
adc
add
mov
push
scas
mov
je
pop
jne
jno
je
fadds
stos
pop
ja
jp
or
popa
jns
pop
repnz
jae
jne
mov
mov
mov
push
push
call
add
mov
mov
mov
cmp
pushf
push
xchg
add
push
add
add
icebp
mov
adc
dec
nop
pusha
or
fnsave
mov
or
mov
adc
out
fiadds
add
ret
cmpw
aas
mov
xor
xor
divl
mov
jae
hlt
or
ja
push
out
xchg
mov
xor
cmp
je
cmp
je
cmp
je
cmp
mov
jg
je
cmp
into
push
inc
je
filds
xchg
clc
cld
xchg
pop
imul
sbb
fs
lcall
and
or
nop
or
sbb
test
dec
sbb
das
popl
popa
int
mov
inc
or
int
rorb
adc
or
js
cli
mov
and
sbb
xor
xor
ss
cmp
pop
js
out
lret
push
push
inc
push
push
cli
dec
dec
push
adc
incl
inc
inc
inc
dec
dec
dec
dec
mov
push
inc
dec
dec
mov
addr16
add
and
bound
outsb
dec
push
fisttpll
and
dec
gs
push
aaa
dec
xor
outsl
addr16
mov
dec
mov
add
cmp
and
decb
aas
into
mov
stos
pop
sar
lods
push
inc
push
pop
inc
dec
inc
push
push
setle
dec
mov
out
pop
mov
pop
and
pop
add
pop
pop
loop
pop
sub
and
dec
inc
mov
push
in
xchg
xchg
stc
pop
std
pop
dec
pop
pop
jb
leave
dec
pop
icebp
mov
mov
nop
out
xchg
xchg
pop
enter
cmp
mov
pop
sbb
dec
cli
sub
mov
add
cmp
push
inc
sbb
xchg
push
fs
push
andb
sub
mov
andl
stos
add
in
sub
sbb
cs
lea
adc
pop
sbb
std
xchg
inc
in
push
push
call
in
add
mov
mov
jbe
sub
sub
mov
movb
inc
or
movb
push
outsl
iret
sti
jb
inc
inc
call
sti
jnp
imul
orl
cs
outsl
cs
or
pavgb
lock
push
or
test
cwtl
push
mov
sbb
divb
or
rorl
push
or
adc
add
fiadds
mov
mov
out
mov
mov
xor
inc
cmp
int
cwtl
adc
test
adc
mov
andb
inc
or
xor
jg
aas
push
adc
mov
inc
shlb
pop
nop
cld
stc
adc
xor
add
and
stc
push
adc
add
les
add
mov
adc
adc
adc
add
dec
and
nop
adc
pushf
xor
adc
sbb
or
xchg
dec
sub
add
aas
or
fsubl
add
push
push
fldenv
movsb
xor
lock
push
adc
or
rcrl
cmp
xchg
jno
mov
add
pop
hlt
mov
or
dec
pop
jne
dec
cmp
lret
sub
xor
outsb
leave
inc
push
sbb
cmp
stc
and
add
pop
push
or
mov
xor
adc
adc
jno
push
cmpb
pusha
sbb
or
push
xchg
add
add
jge
push
push
in
call
sub
push
and
jno
push
clc
pop
mov
sub
sub
jge
mov
fs
xor
sbb
aad
lds
or
pop
and
fnsave
mov
pop
inc
push
mov
imul
jge
movsl
add
mov
movsb
mov
fstpl
loopne
sbbb
push
mov
mov
rep
sbbb
js
insl
dec
pop
ror
xchg
gs
mov
mov
sub
mov
loopne
decl
shll
push
dec
inc
outsl
or
sarl
push
cli
mov
add
mulb
xlat
mov
inc
cmp
or
sbb
mov
or
je
and
call
insb
cmp
fbstp
test
ret
lods
push
movsb
adc
clc
adc
sbb
jne
mov
pop
xchg
mov
jbe
outsb
js
lods
inc
inc
decb
mov
fucomi
add
jne
sub
sub
ret
shl
xor
or
jmp
pop
ficoms
adc
lock
inc
inc
inc
inc
cmp
sbb
insl
cmp
pop
jb
sbb
pop
cmp
cltd
mov
xor
cld
add
mov
xchg
roll
mov
fistl
pop
or
add
adc
andw
aaa
addr16
mov
subl
leave
jne
std
dec
cld
pop
int3
pusha
clc
pop
es
cmp
addr16
push
push
push
mov
mov
imul
inc
std
shll
gs
sub
xor
jne
xor
aas
std
xchg
in
out
into
xchg
out
mov
lea
cmp
jne
out
jae
sbb
sbb
mulb
mov
stc
mov
cmp
in
push
inc
push
pop
outsb
mov
repnz
call
fucomip
ljmp
clc
xor
lsl
push
jo
adc
loope
call
pop
or
movl
pop
push
inc
call
out
pop
add
cmp
incl
xor
adc
adc
add
test
add
add
stc
xorb
adc
bswap
mov
adc
add
add
add
scas
or
mov
add
cld
or
loopne
decl
nop
xchg
gs
pop
pop
fwait
jmp
adc
aas
and
dec
push
or
sbb
in
and
push
mov
add
adc
faddl
add
xchg
xchg
test
inc
pushl
push
cld
add
jle
xor
cmp
jle
or
fistps
dec
xchg
dec
sbb
in
ja
lods
call
push
sbb
cmp
je
test
cmp
mov
jns
inc
hlt
mov
push
in
jne
in
push
sub
daa
incl
mov
cmp
jne
xor
push
clc
xchg
cmp
cmpsl
in
xchg
push
push
loopne
add
popa
test
cmp
pusha
loopne
jl
inc
cmp
mov
push
test
sbb
divb
jns
scas
jg
push
fmull
pop
add
mov
rorl
clc
sub
adc
js
mov
mov
or
push
adc
les
test
lock
push
push
and
stc
sbb
lods
cmp
mov
pop
call
or
fcmovnu
test
shlb
aaa
ret
add
ss
das
pushf
lret
je
mov
mov
mov
pop
and
push
pop
enter
addr16
push
jmp
adc
test
mov
add
xor
xor
pushf
or
xchg
popa
mov
clc
cld
negl
cltd
pop
inc
idiv
adc
jg
adc
jmp
andb
mov
jmp
xor
mov
mov
pushf
mov
and
repnz
mov
stc
dec
push
shll
call
jg
inc
fcoml
add
cmp
popa
push
shll
mov
cwtl
and
fcompl
pop
mov
mov
fstps
int
xlat
lock
clc
fs
ja
xor
mov
cmpb
dec
movb
inc
roll
in
call
decl
add
andl
push
or
inc
xorl
and
or
imul
adc
push
mov
out
and
push
add
lock
and
out
mov
mov
shrl
imul
incl
lret
cmp
sbb
leave
je
inc
push
mov
mov
sbb
mov
dec
push
pop
jne
sbb
sbb
jle
push
mov
mov
lret
shl
or
lea
sbb
mov
dec
add
jne
xor
or
push
jno
pop
or
decl
stos
pop
aam
pusha
in
call
or
cmpsb
in
imul
out
mov
not
and
sub
jl
and
or
add
lea
pop
mov
sbb
or
mov
add
repnz
not
and
testl
lea
test
sub
or
js
repnz
aam
cs
pop
inc
fisubs
fimull
add
lea
in
and
out
xadd
adc
pop
inc
sub
jmp
lods
cld
mov
and
not
cmp
add
repz
sub
rorl
push
shr
or
add
mov
daa
pop
jg
push
outsb
fisttps
jl
sbb
cli
xlat
outsl
lods
out
mov
push
push
xchg
jle
not
and
pop
outsb
movsl
inc
shlb
sub
xchg
mov
in
inc
mov
fidivl
add
or
lock
fiaddl
fidivrl
xchg
adc
sbb
inc
xor
mov
and
ret
or
or
sbbl
int3
xor
add
sub
xor
out
or
and
cli
sbb
les
repz
xlat
rolb
fcomp
cwtl
subb
addl
repz
not
fisubrs
jbe
popa
jnp
adc
pop
scas
testl
sti
mov
pop
les
adc
sbb
pop
push
loop
mov
repnz
sub
fdivs
add
frstor
mov
pop
mov
inc
pop
xor
les
adc
sbb
or
xor
ja
sub
or
or
xchg
jno
std
stos
fdivrs
xchg
and
outsb
pop
push
fidivrs
pop
aaa
fmull
out
das
push
mov
cmpsb
pop
mov
xor
push
add
sub
xchg
fimuls
or
popa
adc
fsin
mov
add
or
mov
ret
sarl
and
aad
aam
popa
imul
pop
bound
sbb
mov
shlb
clc
jg
cmp
xchg
out
dec
cmp
inc
rclb
push
fadds
test
lcall
jb
sub
mov
pop
es
adc
repnz
adc
inc
shll
and
insb
and
data16
fldz
call
insl
fwait
aaa
pop
imul
das
call
out
loop
xlat
lods
mov
sbb
push
adc
add
rorb
in
sub
outsl
aam
and
clc
cmp
jae
cmpsl
pop
jge
cli
fnstcw
ds
jg
or
fst
leave
mov
fidivl
fsubp
int
and
sbb
loopne
ret
insl
pop
jle
inc
enter
aaa
or
mov
sbb
mov
inc
fimuls
cltd
cltd
xlat
sbb
push
test
repz
push
call
inc
loop
shr
int
or
or
xlat
fdivs
in
jmp
add
int
push
aam
mov
lcall
daa
int
cld
imulb
int3
aad
flds
outsl
adc
cmpsb
out
inc
xchg
dec
fisttps
les
mov
adc
or
fnstcw
test
jmp
mov
pop
mov
test
xor
mov
stc
and
jno
adc
loope
cs
js
lds
popa
popf
insl
mov
adc
xor
mov
repnz
in
mov
cmp
std
mov
mov
in
inc
inc
ljmp
xchg
in
add
mov
mov
xchg
fcmovu
dec
jmp
jb
repz
sub
int3
pop
pusha
dec
mov
outsl
cli
jno
cli
xor
sti
sbb
mov
jae
jl
sti
pop
or
mov
jle
sub
inc
stc
pop
aam
out
testl
data16
lock
out
outsb
pop
xor
fidivl
cmc
je
lea
test
out
aam
xchg
jae
adc
fisubrl
fidivs
test
jle
pop
out
cmp
or
gs
push
aas
sbb
cmp
rcl
fldenv
js
jbe
les
mov
mov
jbe
sarb
jp
jl
pop
je
pop
push
lret
pushl
or
sti
fdivp
cmp
lods
les
pusha
imul
sti
mov
fdivs
fisubs
adc
stos
rcrb
sbb
ss
shl
ret
sbb
jl
fs
loope
int3
or
inc
push
or
movsb
mov
repz
and
jns
shlb
hlt
cmp
mov
or
adc
mov
xor
cmp
pop
pop
gs
sbb
outsb
fs
rcrl
gs
xchg
int3
or
push
or
ja
mov
lcall
hlt
out
call
insl
data16
unpckhps
sbb
repz
rcrl
test
sub
cmp
call
scas
dec
jle
outsl
jecxz
jp
sbb
addb
sbb
dec
outsb
repz
sub
jecxz
jp
ret
add
mov
add
in
fdivl
mov
outsb
sub
cmc
cmpb
lds
jp
xlat
sbb
ja
mov
xor
out
in
cmpsb
gs
mov
ret
iret
fwait
aam
rcl
sub
pslld
ret
loop
pop
mov
pop
rclb
xor
mov
xor
out
xlat
stos
push
pop
cli
pop
add
pop
movsb
mov
mov
data16
or
pop
call
pusha
inc
lock
js
cmp
stos
inc
pusha
xor
aaa
cli
or
jl
push
sub
push
push
push
jb
ljmp
nop
mov
insb
js
adc
xlat
adc
fcmovbe
inc
pop
fisubrl
jle
pop
stos
jne
sbbb
nop
mov
pop
pop
mov
mov
into
ljmp
mov
pop
sbb
cmp
jne
mov
sbb
mov
xor
add
cmp
dec
sti
pop
or
cmp
push
cld
call
test
lea
aaa
mov
sub
je
inc
add
cmp
out
or
testb
mov
repz
xor
popf
lea
in
enter
mov
add
outsb
test
push
loopne
pop
int3
rolb
aam
pushf
jae
fsubr
cmp
xchg
jmp
and
insb
scas
test
jl
push
or
out
add
in
gs
das
int3
repz
jl
push
jo
hlt
mulb
cmp
notl
lods
pushf
push
lock
mov
inc
cmp
ja
adc
or
js
pop
mov
jle
stos
call
sbb
insl
imul
adc
mov
lods
mov
fmull
mov
inc
lods
outsb
shll
dec
fimuls
fmull
inc
push
pop
inc
push
add
loopne
sub
subl
push
push
push
ds
push
clc
xchg
lret
lods
push
inc
add
dec
out
push
out
push
ljmp
pop
mov
clc
orb
mov
mov
push
fiadds
jae
xor
inc
push
pop
sub
data16
push
sbb
cmp
pop
int3
add
and
or
pop
subb
loopne
dec
jne
call
sbb
data16
push
push
movsb
jae
jbe
pushf
nop
add
pop
clc
ja
mov
cmp
je
add
xor
push
cwtl
mov
cld
das
sub
pusha
mov
jecxz
or
xor
xlat
adc
ret
pop
adc
xchg
inc
rcr
push
je
xchg
jne
sbb
test
mov
enter
inc
dec
mov
jnp
adc
push
push
sti
adc
xrelease
jmp
sbb
cmp
cmp
je
dec
dec
cmpw
jne
pop
push
arpl
inc
add
cmp
xchg
push
ss
or
xlat
push
cmp
jmp
cmove
xor
and
mov
insl
or
or
inc
jnp
lock
aad
jbe
cmp
inc
or
jo
add
or
fcomps
popf
push
je
xchg
cmp
fisttpll
mov
dec
or
inc
add
je
cmp
jne
push
iret
enter
addps
daa
dec
dec
pop
add
daa
or
jbe
ja
loopne
xor
sbbl
xchg
xchg
pop
loopne
mov
loopne,pt
orl
cs
push
mov
fdivrl
adc
dec
inc
cmp
movsl
mov
cmp
subb
inc
jge
mov
jmp
nop
imul
add
dec
filds
mov
mov
ret
mov
mov
pop
mov
add
push
push
push
nop
sbb
sbb
add
adc
mov
mov
sbb
sub
pusha
mov
jne
mov
mov
cmpsl
insb
cmp
mov
call
fstps
mov
mov
dec
outsb
sub
cmp
fwait
sti
ds
sti
sub
mov
das
lret
pusha
jnp
jg
std
and
test
sub
lea
xor
dec
cmp
clc
cmp
mov
test
rcrl
enter
int3
cmp
sti
ja
cmpl
cmpl
scas
or
cmp
cmp
je
xchg
push
push
pop
dec
int3
and
pop
jp
dec
and
pop
jne
pop
mov
lret
je
cmp
hlt
push
mov
pop
pop
call
call
jmp
pop
mov
cmpb
dec
inc
cmp
or
mov
xchg
shrb
mov
xchg
adc
jmp
dec
lret
mov
cmp
inc
in
add
push
or
in
inc
mov
pop
adc
lock
int3
inc
push
jo
or
push
mov
nop
push
insl
mov
cs
lret
in
push
mov
mov
mov
mov
in
mov
gs
mov
and
mov
cltd
gs
lret
mov
lret
insb
outsl
jb
jb
stos
insl
shrl
fcmovu
gs
insb
mov
test
loop
jecxz
pop
in
lret
insl
xlat
in
out
dec
out
call
cmp
sub
xchg
insl
jae
insb
cmpsb
imul
mov
push
dec
ret
dec
mov
jbe
les
lds
mov
mov
xlat
xor
lret
cmp
int3
hlt
xchg
push
xor
xlat
sub
xchg
mov
mov
mov
pushf
adc
mov
mov
mov
mov
inc
sub
movsb
inc
add
lcall
test
pop
mov
ds
hlt
cli
jns
lea
cmp
cmp
dec
sbb
je
shlb
inc
or
dec
mov
aaa
loopne
rol
xor
sbbl
fists
jae
add
fs
jmp
xor
gs
clc
ds
mov
dec
mov
xchg
insl
aaa
or
pop
dec
rolb
pop
xchg
jae
hlt
divb
adc
pop
les
paddw
fisttps
xor
rcl
enter
lret
push
inc
jge
sti
inc
movsl
leave
push
adc
movsl
popa
lahf
movsl
push
mov
loopne
into
mov
into
imul
xor
push
outsb
leave
inc
ret
sbb
daa
test
inc
sub
fisubs
scas
nop
jmp
aaa
xor
stos
les
jmp
sbb
mov
adc
cmp
jmp
mov
nop
repnz
sbb
or
hlt
cli
addl
and
mov
hlt
cld
lds
test
cmc
fdivs
and
mov
and
xchg
mov
mov
ret
cltd
pop
push
xchg
mov
mov
repz
push
sbb
ret
adc
imul
movsb
lock
sub
loope
push
cld
mov
je
mov
cmp
test
and
sbb
js,pt
and
daa
je
cmp
mov
call
bound
popf
adc
fcompl
sub
sbb
sub
cmc
add
stos
adc
inc
fwait
sbb
sbb
inc
xor
iret
ret
jmp
lock
mov
inc
adc
sbb
push
lds
mov
mov
and
pop
lods
inc
cmp
jl
jns
push
mov
fs
leave
ret
insb
out
scas
sarl
outsb
jne
push
loopne
fcmovnb
add
or
push
fcomp
mov
or
jnp
or
cmp
call
dec
adc
fs
in
lcall
cmc
rol
pusha
lods
adc
fdivrs
mov
push
inc
outsb
mov
push
xchg
cmp
pop
xor
and
push
cld
xor
jnp
jbe
mov
mov
jae
jnp
xchg
mov
xor
mov
jge
call
lock
add
scas
inc
fidivrs
nop
outsb
adc
aas
or
test
jo
cmpsl
sub
adc
popa
dec
jne
adc
andb
ds
loope
repz
push
and
xlat
jmp
scas
lock
mov
add
or
cmpb
stos
add
xorb
cmp
and
and
adc
or
push
movl
outsb
adc
mov
ss
jo
ret
cmp
inc
into
adc
mov
repz
cld
inc
dec
cmpsb
mov
outsl
jp
cmpsl
insb
lcall
dec
push
imul
fidivl
fildl
pusha
shrl
fstp
jae
fbstp
xor
mov
xor
xor
xor
or
xor
sti
cld
lcall
lcall
mov
sub
cmpsb
jmp
mov
dec
xlat
mov
mov
lcall
jbe
nop
cmpsb
pop
xor
enter
xchg
gs
pop
lret
popa
js
xchg
gs
je
outsl
outsb
xor
movsb
imul
dec
icebp
repnz
out
jns
adc
or
push
mov
iret
jno
cltd
pop
pop
push
and
push
sbb
or
test
pop
push
insl
ret
sahf
pop
push
pop
push
add
nop
hlt
dec
mov
push
nop
gs
sbb
add
push
in
pusha
sbb
das
jmp
loop
andb
add
fndisi(8087
xor
daa
adc
imul
rcll
outsb
outsl
je
mov
rcr
pop
xchg
adc
mov
lcall
jno
push
aam
xor
sub
int
popf
movsl
adc
and
xor
or
add
sub
or
fcomp
cmp
add
test
daa
xor
ja
shll
out
outsl
or
loopne
in
or
ret
xor
xor
fwait
aam
xchg
fcoms
clc
lret
clc
lock
jge
lds
and
jg
xlat
or
fiadds
rcrl
xchg
repz
push
stc
inc
in
test
lret
rorb
sahf
fstpt
sub
mov
sub
out
push
pop
push
adc
loope
shl
in
push
or
jne
xor
popf
test
and
fidivs
or
test
aaa
in
out
mov
push
mov
sbb
lea
and
sahf
icebp
lock
jge
push
jns
loop
movsl
movsb
cmp
hlt
pushf
push
outsb
ja
nop
and
sub
iret
lock
mov
and
out
adc
cwtl
addb
or
push
pop
and
push
mov
pop
js
add
pop
push
loop
mov
xchg
pop
add
loopne
and
pop
pop
inc
movzbl
orb
div
cmc
cli
and
testb
xor
and
or
cld
and
out
push
subb
jmp
mov
out
push
dec
jo
fwait
insl
mov
or
insb
lock
popa
pop
repnz
cs
fs
insb
repz
gs
test
lcall
jbe
jb
lcall
outsl
xor
ret
cmp
xor
xor
push
sbb
push
xchg
xchg
jae
mov
imull
in
pop
xor
push
dec
xor
and
inc
xchg
or
xchg
ds
addr16
adc
hlt
or
pop
cmp
xchg
mov
imul
add
xor
sub
add
sbb
ss
sbb
aas
inc
in
sub
in
pop
mov
sub
dec
clc
sub
mov
cmp
jo
pop
icebp
push
ret
test
hlt
lds
ljmp
sub
int
push
cmp
cmp
out
fsts
fwait
popf
sub
adc
ja
xor
xchg
lea
pop
push
mov
jne
jl
push
xlat
lea
sub
add
mov
movsl
pop
add
sbb
lock
jne
xchg
adc
ret
or
pop
ficoms
cmp
sbb
cli
push
mov
dec
inc
jge
loopne
xchg
pop
or
repnz
dec
aaa
aas
cmp
pop
movsb
pusha
push
out
jbe
push
lret
aaa
xchg
hlt
dec
cmp
and
adc
outsb
nop
rcr
push
mov
scas
mov
aaa
scas
add
jecxz
cmp
xchg
sbb
pusha
inc
mov
in
push
dec
sub
dec
stos
dec
or
mov
jnp
js
and
cmp
lahf
xchg
cld
jns
cmpb
sbb
xchg
inc
jnp
mov
cwtl
adc
out
pop
add
cmc
cmp
xchg
nop
in
xor
aas
loope
or
cld
and
mov
adc
sbb
mov
sbb
fcomp
mul
inc
sbb
dec
push
sub
outsl
or
mov
jle
mov
mov
in
pusha
xor
mov
and
loopne
or
adc
pushl
adc
mov
mov
stc
inc
mov
cmp
lahf
mov
aad
bound
pusha
push
jecxz
xor
pop
call
sbb
jo
mov
mov
mov
es
xor
xchg
std
mov
sub
mov
int
push
xchg
sti
xchg
sub
inc
cmp
js
out
pop
mov
push
inc
mov
ds
popa
push
add
ds
scas
fstps
in
aas
pop
hlt
push
mov
cwtl
fstps
sbb
sbb
sbb
outsb
movsb
fwait
or
mov
test
inc
adc
fs
cld
gs
jae
add
popa
mov
cs
pop
lcall
shll
mov
imul
stos
and
xchg
gs
jo
and
mov
and
cmpsb
imul
lcall
lcall
and
or
and
imul
int
inc
scas
imul
lcall
pop
xlat
aaa
fcomp
shll
fcmovu
jo
imul
and
shll
and
xor
arpl
jo
aam
dec
cmp
push
jae
or
dec
shll
inc
inc
cmp
inc
jae
repz
push
xchg
mov
mov
test
mov
sub
ret
jmp
add
les
xor
cmp
daa
in
xor
mov
mov
sti
push
push
int
push
xor
ret
sub
xor
mov
jle
repz
push
push
rolb
arpl
inc
and
lea
arpl
or
adc
je
sarl
push
dec
pop
into
push
out
leave
push
std
pop
fcompl
aam
hlt
psubusb
sar
call
leave
xor
ds
je
insb
mov
in
ret
or
into
dec
outsb
roll
stos
lods
cmp
cmp
dec
aam
xor
adc
sahf
add
add
xchg
fnstcw
cmp
mov
cmp
xor
into
scas
pop
leave
xchg
xchg
mov
and
cmpb
add
lods
push
push
xor
scas
inc
fiaddl
imul
pushl
pop
cmp
jne
adc
pop
ss
jmp
push
insb
aas
sahf
adc
adc
cmp
jmp
adc
sahf
mov
sub
pop
xchg
push
dec
shrb
insl
daa
std
ljmp
inc
lock
fildl
xchg
or
mov
ljmp
and
xchg
hlt
enter
inc
mov
push
cmp
push
cmp
test
inc
xchg
repnz
clc
je
jnp
adc
cwtl
sarb
repnz
sbb
test
iret
test
inc
or
push
push
adc
pop
push
sub
or
aaa
pop
es
jg
cmp
test
das
ret
daa
jmp
pop
add
sbb
inc
mov
mov
add
std
ljmp
xor
jecxz
call
adc
sbbb
xor
jnp
push
or
rorl
insb
pop
pop
cmpsb
hlt
fsubs
or
xchg
in
adc
xor
mov
mov
pop
lret
push
test
lahf
std
sub
add
sub
jne,pt
xlat
mov
mov
xor
cmovno
dec
call
or
sub
dec
mov
xorb
test
ss
mov
test
fisttpll
gs
decl
mov
add
pop
and
jne
cmp
lcall
jae
push
shr
add
mov
movl
and
push
push
int
cwtl
fisubs
enter
mov
out
addr16
adc
scas
push
loop
add
push
call
repnz
jbe
push
xchg
int3
push
dec
and
lahf
adcb
mov
stc
test
add
sub
aas
mov
cld
mov
adc
sbb
and
push
push
faddl
mov
or
or
into
push
pop
pop
dec
or
pusha
or
jbe
fucomip
lcall
add
cmp
je
push
push
push
imul
mov
push
push
jl
push
pop
addl
adc
cmp
je
fcoml
pop
pushf
cmp
paddsw
loopne
or
mov
jnp
popf
push
or
mov
add
push
pop
fildll
lea
sbb
adc
and
das
sub
aam
test
in
aas
jnp
or
popf
les
pop
mov
pop
ljmp
sarb
xchg
gs
fsub
call
inc
loopne
jle
add
push
rcll
mov
sub
repz
rcl
mov
mov
mov
fisubl
mov
or
cmp
mov
or
in
outsb
in
cmp
jb
dec
or
test
xor
pop
mov
fwait
out
shlb
mov
or
mov
idiv
jle
adc
jo
clc
hlt
cmp
and
loope
xor
pop
jmp
sub
adc
inc
loop
fsubrl
incl
je
xor
decl
push
jp
jmp
shlb
push
ret
mov
adc
adc
and
xchg
loope
in
ja
adc
aam
cmpl
sbb
dec
pop
xchg
gs
dec
dec
inc
push
cs
push
xchg
gs
insb
jg
add
jo
insb
mov
lret
mov
jae
fs
xor
adc
insb
jo
ds
je
jb
lcall
jb
imul
add
dec
xor
xor
jl
jo
xor
shll
push
gs
mov
das
roll
aam
xor
mov
mov
mov
lcall
inc
xchg
gs
js
xchg
xchg
outsb
fwait
cmpsb
imul
test
cltd
lcall
nop
je
push
fnstsw
xor
shll
loope
loop
in
xor
inc
xlat
out
out
mov
mov
lcall
mov
or
mov
inc
mov
mov
mov
arpl
mov
sbb
mov
mov
or
adc
clc
daa
lds
cmp
cmpsb
sbb
test
pusha
pop
and
leave
rol
add
push
push
shrb
xor
iret
dec
orl
adc
pop
repz
lahf
pop
dec
push
mov
imul
mov
mov
fstl
popf
or
dec
sahf
sbb
mov
add
hlt
pop
outsb
test
loop
cld
mov
imul
dec
cmpsb
push
xor
or
adc
cld
repz
sbb
stos
mov
push
pusha
loop
test
sub
enter
add
push
data16
add
shrb
push
xor
call
popa
mov
call
mul
and
mov
ljmp
lsl
and
sub
or
and
pop
bound
push
xor
je
mov
jmp
adc
clc
push
out
hlt
or
jbe
mov
fwait
and
clc
push
arpl
sbb
divl
in
incl
add
add
lcall
cld
hlt
sub
jb
mov
and
ja
sub
mov
xor
jae
xchg
imul
insb
inc
aad
dec
jb
arpl
shlb
jb
jbe
and
jne
add
call
inc
outsb
test
inc
or
sbb
cld
loop
fildll
and
into
sbb
mov
pop
cmp
fcmovne
pushl
test
mov
sbbb
jb
jecxz
adc
pusha
subb
mov
leave
and
push
out
or
in
xchg
test
enter
into
jo
sub
dec
js
add
divb
cmp
fistpll
xor
mov
or
jne
mov
sbb
and
push
push
and
or
cmp
jmp
and
mov
call
jb
mov
int3
pusha
jge
dec
push
xchg
add
cmc
and
pop
dec
arpl
outsb
pop
xchg
gs
cmp
add
outsl
jae
jne
pusha
mov
lcall
movsb
push
in
pop
stos
or
sbb
jp
sbb
dec
in
movsb
add
sub
inc
mulb
lds
pop
fstpt
loop
and
neg
sbb
add
inc
push
sbb
and
inc
fstp
mov
xchg
inc
pop
shll
in
mov
add
adc
shll
outsb
cmp
addr16
outsb
jne
xor
pop
std
insl
insl
imul
outsl
es
and
jae
push
and
loopne
nop
and
int
loopne
sti
cmc
jae
cmovne
push
mov
jp
xor
fsubs
sbb
and
and
and
fdivr
or
inc
cmp
adc
std
pop
adc
xor
and
xchg
mov
add
jmp
popa
pop
xchg
gs
arpl
outsb
or
gs
xor
shll
jne
insl
es
and
dec
es
bound
mov
cmp
test
jge
push
enter
sbb
cld
std
cmp
aad
ret
jae
and
ja
les
in
push
mov
xor
or
popa
inc
sbb
leave
leave
dec
cld
int3
call
mov
dec
je
imul
insb
outsl
inc
push
inc
lcall
xchg
icebp
out
xor
int3
mov
je
cmpl
xor
or
flds
mov
ja
xchg
adc
lods
sar
xor
xor
stos
stos
imul
mov
dec
jne
cltd
jmp
call
scas
cli
inc
sub
pop
fs
sub
mov
add
ret
adc
mov
and
xor
mov
jge
mov
adc
shll
mov
out
nop
or
cld
sbb
push
mov
sub
mov
push
mov
pop
shlb
fsubrl
push
jae
push
fs
add
in
pop
inc
cmp
jl
pop
lods
or
test
dec
push
cmp
dec
xor
mov
pusha
cmp
fcompl
cld
sub
cmc
cld
mov
fdivrl
and
pusha
mov
add
fidivs
subl
es
call
repnz
cld
mov
pusha
stos
and
inc
jp
mov
jg
std
cwtl
inc
cwtl
and
jmp
pop
xchg
gs
arpl
outsb
gs
xchg
gs
xchg
gs
xchg
imul
call
lods
scas
scas
push
mov
xor
xor
bound
xor
mov
inc
mov
js
rol
ret
ret
les
push
es
dec
int3
mov
mov
lret
mov
arpl
lret
mov
lret
outsb
cmp
lret
leave
mov
jb
jns
cmp
cmpsl
jge
sub
lcall
data16
lcall
mov
shlb
push
std
inc
ss
lods
dec
jne
or
jmp
push
nop
pmulhuw
shr
sbb
jmp
or
jmp
jne
adc
adc
call
fiaddl
push
jge
or
xor
sbb
je
lock
negb
scas
or
jo
xor
xchg
cld
clc
pop
hlt
shlb
pop
xor
aas
sub
aam
pop
mov
and
stos
and
sub
jns
les
pop
xchg
jae
arpl
lret
leave
imul
shll
jo
outsl
mov
jne
fiaddl
sbb
sbb
push
jmp
fsts
push
cmp
push
lods
push
lods
inc
mov
sarb
sub
mov
and
divb
cltd
popa
cwtl
sbb
sbb
ja
clc
popa
imul
arpl
arpl
or
pop
imul
outsl
popa
jb
dec
roll
arpl
gs
xchg
lods
jmp
cs
out
jns
out
shll
int3
and
clc
aam
cld
push
and
in
outsl
inc
lea
pop
loopne
insb
lcall
lods
xlat
mov
push
xor
jp
cld
xor
push
mov
or
mov
dec
ret
je
and
call
xor
add
repnz
ljmp
testl
fisttps
or
aas
sbb
mov
push
push
sbb
xor
xor
adc
mov
xchg
or
stos
rcrb
push
adcl
or
cmp
jl,pn
add
jl
mov
inc
adc
add
cli
inc
rolb
cmpsl
jge
dec
add
das
adc
push
push
push
mov
jno
and
or
fwait
lods
adcb
push
lock
sbb
ljmp
push
adc
mul
adc
inc
stc
nop
sbb
inc
in
sbb
movl
and
loope
arpl
push
arpl
push
and
mov
lcall
push
in
adcb
pop
out
out
insl
sbb
jmp
ljmp
fucomp
in
out
mov
movsb
mov
lock
sbb
imul
je
dec
xchg
data16
loope
pop
loop
in
xchg
cld
jecxz
in
in
cmp
cld
sub
stos
decb
lea
jno
mov
cmpsl
out
out
je
daa
sahf
mov
mov
iret
xchg
cmp
push
push
out
xchg
mov
jnp
scas
inc
cmp
out
or
fdivr
xchg
push
pop
push
and
jne
insb
jge
rcr
iret
inc
rcrl
sub
lods
sub
sub
fst
mov
add
call
in
jne
repnz
xor
fbld
push
je
add
sub
mov
mov
pop
inc
test
fcomps
fidivrs
push
call
push
sbb
or
sbb
inc
pop
xor
add
cmp
push
call
aas
out
aaa
lock
call
ds
call
stc
fsubl
aas
mov
dec
push
lea
mov
jnp
pusha
das
mov
mov
mov
adc
loopne
fsub
mov
pop
xor
or
not
jle
enter
sub
inc
xor
sub
pop
into
lret
or
mov
das
daa
das
in
mov
dec
shll
and
daa
fs
dec
aam
sub
mov
lods
inc
pop
dec
aad
xchg
or
mov
sub
push
sub
out
lea
push
scas
data16
xchg
mov
cmp
pop
or
test
fucomp
call
js
pop
pop
add
scas
fistpl
xchg
aam
add
push
cmp
idivb
push
jg
aam
pop
push
test
scas
pop
dec
mov
jae
mov
pop
in
lret
push
cmp
xor
push
mov
push
pop
inc
and
cmp
cld
loopne
or
jns
jns
insl
push
push
push
mov
ja
iret
adc
push
jne
cmp
push
mov
jl
and
push
push
lea
push
sbbb
lods
arpl
xchg
and
mov
jp
sub
lcall
jnp
fnstsw
inc
mov
adc
mov
mov
notl
jg
and
cmp
mov
cltd
daa
je
shrb
and
addr16
dec
inc
pushl
and
addr16
jge
and
mov
sub
mov
push
jno
xor
adc
mov
add
sub
add
xor
stc
or
in
xlat
push
cmpsb
fmuls
pop
loopne
mov
fwait
test
mov
push
mov
mov
and
adc
cmp
jbe
xor
push
adc
and
jo
dec
jge
jecxz
dec
enter
ljmp
cmpsl
out
call
mov
stos
bound
sbb
sub
or
cltd
jg
aas
outsl
decb
xor
repz
sti
aad
and
push
lds
lea
sbb
insl
push
popa
div
push
pop
cmc
mov
or
imul
testb
push
pop
add
shll
pop
adc
sbb
mov
mov
lock
gs
mov
add
imul
ds
add
add
mov
dec
add
adc
mov
add
adc
dec
outsb
adc
and
inc
test
fdivrp
mov
and
mov
sub
and
and
cmp
and
mov
fisubrs
dec
xor
jl
ja
fwait
mov
add
es
mov
push
or
rorl
das
add
push
pop
sbb
ret
popa
data16
push
inc
pop
ss
and
andnps
mov
xchg
in
or
adc
mov
inc
add
aad
pop
ret
jo
loop
mov
mov
xor
jne
adc
packsswb
lock
fdivl
and
mov
mov
add
cmp
imull
pop
jo
xlat
mov
adc
push
and
out
in
and
arpl
jmp
mov
andl
push
xlat
cmp
mov
add
call
jne
rcll
inc
lods
and
dec
je
cmp
mov
das
ret
orb
pop
pusha
repnz
int
testb
sbb
mov
sbb
lea
xor
ret
mov
cli
cmc
mov
or
mov
push
mov
cld
faddl
loope
loopne
std
add
mov
andb
push
pusha
dec
pop
and
sbb
fnsave
inc
ret
rcl
add
sbb
loopne
fildl
lock
adc
out
jg
adc
sete
mov
mov
repnz
push
inc
mov
mov
imul
pusha
fcomps
adc
subb
ljmp
lcall
jl
sarl
clc
ja
pop
mov
inc
add
mov
cwtl
and
outsb
or
repz
test
xlat
xchg
cmp
loop
and
add
add
iret
sub
enter
adc
cmpl
sbb
sbb
cmpb
js
add
jo
add
xchg
call
jb
dec
or
add
xchg
clc
imul
push
lcall
or
add
mov
add
push
inc
dec
sbb
fwait
push
sbb
test
ficomps
dec
or
shrl
icebp
test
lods
faddl
dec
adcl
or
shl
mov
pushl
adc
jne
mov
sub
mov
lods
out
mov
pop
ljmp
mov
mov
add
insl
push
fildl
shr
jle
movzwl
mov
jne
fbld
das
stos
test
je
call
and
cmp
jne
adc
add
jmp
cmpl
jne
data16
or
not
push
sub
add
or
mov
test
adc
pop
xorb
inc
jg
xchg
add
dec
and
ja
cs
adc
add
push
pushl
jno
jno
or
int3
xor
dec
adc
jbe
push
or
mov
adc
iret
leave
in
cld
sbb
sbb
lea
pop
mov
pushl
add
push
dec
loop
cs
clc
add
sub
or
dec
add
loope
inc
mov
adc
add
sbbb
push
adc
jl
xor
jle
or
call
call
and
xchg
int3
sub
aaa
pushl
lcall
popa
jp
adc
subb
push
insb
pop
mov
les
push
bound
add
or
push
xchg
sub
cltd
inc
mov
mov
js
push
orl
mov
mov
lret
or
and
inc
cmp
testb
je
pop
inc
sub
inc
shr
or
daa
inc
sahf
test
pop
inc
cmpsb
push
sti
mov
inc
or
lds
sahf
repz
fstl
push
xchg
mov
mov
xchg
les
add
xchg
jmp
int3
es
xchg
aaa
xorb
pop
jne
sti
je
jo
sbb
or
mov
andl
insb
test
sub
daa
lret
jo
jb
movsl
mov
js
jmp
xor
cmp
jo
cmp
adc
or
or
rorb
sti
mov
xorl
add
icebp
cmpsl
sbb
jge
add
lret
xchg
stos
pusha
inc
and
and
orb
fwait
mov
add
idivb
and
loope
push
xor
inc
mov
fstl
add
pop
push
sbbb
mov
or
dec
les
mov
test
sbbl
fldenv
pop
outsw
outsb
je
lods
mov
pop
push
cwtl
addl
xor
ss
sub
adc
ret
outsb
add
lods
or
push
je
jle
ss
test
aaa
sbb
jne
push
mov
add
sub
mov
push
sbb
insb
mov
cmp
and
dec
mov
add
pop
sbb
sub
stos
push
push
mov
arpl
out
jge
aam
push
or
sbb
xor
rorl
sbb
dec
inc
sbbb
cmpsb
je
pop
je
out
jbe
dec
push
sub
frstor
and
jnp
mov
scas
mov
outsb
xor
mov
sti
and
mov
inc
je
cmp
mov
push
mov
daa
movlps
jmp
mov
test
movsl
ret
jo
inc
cld
jle
push
jo
movsb
in
mov
mov
movsl
or
pop
stos
push
xor
decb
pop
popf
kmovb
push
lea
push
pop
icebp
adc
sbb
out
je
sbb
call
cltd
sub
imul
adc
xchg
sbb
xor
mov
call
push
shlb
outsb
mov
jmp
loopne
sbb
add
insb
iret
lcall
push
lds
lcall
enter
movsl
imul
fs
int3
int
out
cmp
aas
jl
std
rolb
pop
sar
or
pop
jae
jne
ss
gs
pop
pop
jmp
jmp
pop
xchg
xor
movsw
push
insl
add
sub
test
je
popa
jns
lcall
cmpsb
pop
mov
lock
and
pusha
or
or
cs
or
jne
pop
pop
enter
cld
lods
adc
cmc
sbb
cmp
scas
pop
mov
rcrb
mov
ficoml
push
mov
or
mov
jo
xor
push
push
cli
cmc
test
push
xor
push
loopne
jo
cmp
mov
ret
xor
sbb
mov
inc
push
sbb
loopne
ret
pop
adc
stos
lret
push
xchg
push
adc
rolb
fcompl
adc
inc
stos
mov
jge
movsl
aam
aad
push
mov
outsb
cmpsb
gs
pop
xchg
gs
outsl
jb
add
xchg
jb
gs
sbbl
into
inc
nop
dec
mov
outsl
dec
dec
scas
sub
push
aam
push
add
mov
int
inc
arpl
das
mov
leave
std
sahf
adcb
add
mov
sub
push
xadd
outsb
mov
push
cltd
adc
pop
sub
adc
push
pop
orb
xchg
enter
andl
mov
mov
fsubrs
pop
or
shlb
xor
mov
pop
jb
rol
add
in
in
rcrb
cmp
mov
je
push
dec
mov
dec
push
xchg
inc
mov
insb
adc
adc
or
es
mov
add
cmp
sarb
mov
mov
nop
or
push
cmp
inc
xor
in
es
xor
xor
sub
pusha
out
repz
cmp
xor
cmpsl
roll
pop
cmp
scas
jae
test
int
int3
xor
daa
pop
scas
mov
test
sub
cmp
test
fwait
in
sahf
mov
lods
test
int
add
mov
push
mov
incl
and
dec
outsb
imul
inc
jb
arpl
ljmp
test
add
jbe
int3
inc
jne
stos
add
pop
cmovs
add
add
push
lods
jmp
jb
arpl
cmp
dec
fs
mov
outsl
insb
outsl
ljmp
adc
xor
popa
jo
push
add
mov
imulb
je
push
and
mov
sarl
jo
add
inc
insb
out
xchg
sub
sbb
and
repnz
popa
fs
imul
arpl
imul
test
push
fsubp
jnp
mov
jge
dec
outsl
fs
adc
jmp
push
mov
inc
mov
mov
insb
jae
jb
inc
jg
mov
out
movsb
add
inc
mov
pop
and
push
mov
dec
and
inc
jns
add
or
popa
sub
push
arpl
xchg
and
aas
ja
bound
or
jb
stos
sbb
xchg
outsl
nop
lock
fnstenv
inc
outsl
jb
outsb
and
push
mov
fists
insl
outsl
adc
or
int3
dec
sbb
pop
test
pop
push
orb
sbb
repz
outsb
mov
jo
push
push
imul
ret
inc
cmp
lods
mov
in
pop
ret
andb
arpl
divb
jno
dec
pcmpeqb
and
fwait
cltd
cmpsl
xchg
push
das
rcrl
insb
rorb
ja
fdiv
ret
insl
dec
and
push
add
gs
and
mov
pop
fs
std
inc
mov
add
jecxz
ficompl
xor
mov
pop
add
pop
inc
or
or
push
dec
push
sbbl
inc
xchg
xchg
imul
sti
pop
inc
mov
stos
push
outsl
jo
inc
mov
sbb
pop
test
insb
add
pop
adc
int3
call
push
ret
or
mov
jo
sub
pop
add
into
mulb
mov
add
daa
dec
pushf
add
in
insb
inc
out
cmp
sbb
adcl
rcll
push
aad
popa
pop
add
pmaxsw
push
dec
inc
fldt
and
lods
add
inc
push
jge
pusha
sbb
jge
cmp
loopne
xchg
dec
push
xor
mov
gs
fs
push
fldcw
push
inc
add
jno
testl
xchg
add
mov
mov
push
mov
loope
ja
adc
fistpll
imul
jns
outsl
xor
jo
inc
fucomip
add
ss
dec
and
inc
aad
cmp
push
ror
push
dec
xchg
int
gs
push
push
lods
mov
jp
adc
inc
inc
add
xorb
movl
out
ljmp
nop
sub
jge
sti
mov
mov
cmp
jae
sub
lea
pop
mov
pop
add
push
mov
imul
add
adc
outsb
lods
add
adc
push
mov
inc
push
jne
scas
mov
sbb
mov
pop
add
dec
adc
jnp
lds
inc
test
out
jae
adc
and
cmovne
insl
jnp
rorb
jne
mov
fwait
mov
arpl
jo
inc
popa
arpl
add
and
inc
and
xor
push
inc
push
into
jp
add
in
or
push
cs
add
insl
sbb
xchg
or
lret
outsl
jnp
sbb
adc
push
jnp
es
xlat
push
pop
adc
das
add
aaa
dec
pop
ss
xchg
popa
mov
fdivr
bound
jecxz
push
out
inc
pusha
xor
faddp
dec
add
rcrb
divl
jns
push
fst
cmc
push
jo
push
and
cmp
stos
dec
pop
das
mov
ret
pop
fnsave
aas
xor
inc
pop
loopew
dec
testl
dec
sbb
out
in
xchg
xchg
bound
outsb
mov
in
jge
in
or
jbe
pop
lcall
add
lret
jno
or
add
sbb
imull
dec
push
push
inc
sbb
add
or
inc
pop
ja
jge
mov
orl
pusha
scas
adc
mov
mov
add
push
push
mov
adc
adc
lea
sub
xorl
add
aam
pop
fs
dec
inc
dec
push
dec
xchg
jo
xchg
xor
sub
addr16
lret
xlat
adc
and
adc
add
stos
mov
mov
int
mov
outsl
mov
inc
xorl
inc
repnz
pop
push
leave
pop
mov
xor
pushl
or
ds
add
sbb
cmp
pop
aas
je
nop
jmp
aas
lods
aas
enter
inc
fadds
and
push
xor
jmp
xor
xor
cwtl
xor
lret
xor
xor
xor
xor
call
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
ljmp
xor
push
xor
mov
xor
ss
ss
ss
ss
jle
mov
xchg
movsl
ss
ret
adc
es
push
aaa
jecxz
add
and
jmp
or
adc
incl
pop
cmp
ja
xchg
xchg
cmp
cmp
cmp
aaa
cmp
cmpb
cmp
lcall
imul
test
clc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
aaa
cmp
sar
pop
cmp
push
fs
aaa
arpl
cmp
push
outsl
cmp
cmp
cmp
cmp
pusha
cmp
sahf
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
lret
cmp
and
cmp
ds
inc
aas
jp
mov
aaa
xchg
xor
outsb
xor
xor
xor
xor
xor
pushl
pop
xor
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
pushl
daa
xor
inc
xor
jb
xorb
xor
clc
or
xor
and
daa
xor
inc
ss
ss
ss
ss
ss
pushl
fbstp
ljmp
aaa
daa
aaa
cs
xor
aaa
inc
aaa
dec
aaa
pop
aaa
pusha
aaa
sbb
jmp
outsb
aaa
jbe
mov
cmp
cmp
cmp
lea
out
or
lcall
call
cmp
cmp
cmp
cmp
push
cmp
insb
add
idivb
or
cmp
inc
cmp
push
cmp
jno
jnp
xchg
mov
fdivrs
loopne
jmp
or
cmp
cmp
inc
adc
or
lods
cmp
int
in
cmp
inc
bound
cmpb
mov
ds
aas
sbb
es
xor
push
aas
outsb
aas
js
mov
xchg
adc
xor
pop
xor
push
mov
xor
xor
xor
xor
pop
xor
inc
mov
xchg
das
mov
out
jno
xor
or
or
xor
mov
xorb
xor
xor
xor
aaa
stos
xor
xor
outsb
xor
push
xor
jg
out
repz
ss
aaa
mov
aaa
hlt
aaa
add
push
cmp
out
clc
incl
cmp
cmp
cmp
pop
cmp
cmp
cmpb
cmp
sbb
decl
cmp
cmp
cmp
cmp
mov
cmpsl
cmp
inc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
out
out
incl
cmp
ljmp
aas
pusha
jmp
push
push
add
scas
aas
aas
int
cld
aas
lds
repz
and
pop
pushl
mov
mov
xor
xor
xor
xor
xor
sub
push
pushl
mov
leave
xor
xor
xor
xor
xor
aaa
xor
push
xor
xor
mov
mov
fbstp
mov
push
scas
xor
or
ja
xlat
ss
sbb
sub
mov
dec
aaa
iret
aaa
in
repnz
add
or
adc
cmpb
cmp
cmp
cmp
cmp
cmp
cmp
ud0
out
cmp
cmp
cmp
cmp
cmp
cmp
sbb
sub
cmp
test
cmp
sbb
dec
jecxz
sbb
ljmp
je
jns
mov
out
out
jmp
lcall
call
ds
and
xor
push
ds
ds
cwtl
ds
ds
jg
jge
ds
adc
call
sub
dec
xor
jns
lock
pushl
nop
xor
xor
xor
xor
xor
xor
push
xor
jge
sahf
xor
pushl
aam
loopne
in
out
xor
xor
xor
int3
and
pushl
xor
cmp
inc
xor
pop
xor
jb
js
jg
xchg
xchg
xor
xor
std
pushl
iret
xor
xor
xor
xor
xor
xor
popa
xor
xor
pop
aas
push
xor
push
jne
jge
mov
xchg
xor
xor
xor
xor
xor
xor
out
cli
incl
xor
xor
xor
xor
xor
xor
mov
xor
xor
xor
xor
xor
xor
sti
lcall
xor
xor
xor
xor
xor
xor
xor
xor
das
xor
and
std
pushl
test
sahf
xor
and
es
cmp
jge
pushl
inc
ss
ss
ss
ss
xchg
jae
jns
mov
divb
add
or
loope
aaa
cmp
dec
aaa
bound
jo
xorl
jmp
mov
movsl
aaa
stos
aaa
mov
shlb
fdivs
fidivs
in
jmp
mov
aaa
push
cmp
adc
pop
cmp
cmp
cmp
cmp
jg
cmp
push
cmp
pop
cmp
jg
test
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
or
cmp
cmp
dec
aas
outsl
jg
cmp
sahf
cmp
cmp
cmp
cmp
cmp
cmp
incb
cmp
cmp
cmp
cmp
lea
add
sub
xchg
ds
xlat
ds
lret
adc
sub
mov
inc
or
stos
aas
les
lret
aad
mov
add
xor
mov
xchg
xor
xor
and
sub
xor
aas
ret
xor
outsb
xor
xchg
xor
lret
xor
decl
out
xor
or
and
sub
xor
popa
xor
outsl
push
clc
or
xor
xor
xor
xor
inc
xor
xor
xor
xor
xor
xor
xor
xor
mov
xor
mov
xchg
xor
fnsave
ss
bound
je
jp
xorb
ss
rclb
shlb
pop
cmp
inc
add
xor
dec
push
dec
call
xchg
mov
mov
mov
fdivrl
xor
rorl
daa
nop
stos
mov
outsb
jmp
aam
mov
mov
cmp
add
popf
sbb
sub
xchg
sub
mov
nop
or
cmp
pop
enter
inc
aaa
pop
js
add
daa
mull
add
in
add
loopne
adc
fwait
push
push
add
mov
jae
jl
xor
pop
ret
inc
and
or
sub
push
add
adc
sub
xor
ret
push
add
cmp
call
cld
or
and
xor
ror
push
js
shll
ret
fnstenv
cmp
dec
shll
inc
cmp
adc
clc
lcall
rol
mov
cmp
mov
in
dec
shrl
add
or
pop
jbe
fidivrl
jle
xchg
sahf
cmpsb
jmp
imul
js
mov
lcall
xor
sub
add
inc
and
push
cmpsb
add
push
lea
or
or
lods
std
mov
popa
jns
jne
jae
xor
pop
push
inc
inc
mov
lret
sub
pusha
ja
lds
add
xor
adc
js
or
inc
dec
daa
inc
push
imul
push
push
inc
and
sub
add
xor
sub
fbld
repnz
movsl
sub
std
push
pop
mov
push
rep
or
add
inc
jge
adc
repz
add
add
pop
subb
call
mov
mov
mov
test
push
test
and
out
adc
or
cmp
aam
je
insl
mov
cmp
add
aam
sub
adc
mov
fistps
test
lods
std
icebp
jbe
mov
dec
inc
cmp
mov
cltd
insl
jp
je
inc
cwtl
in
popf
in
pop
in
cmp
pop
in
mov
sub
in
jne
sbb
je
les
and
test
jne
lods
in
loope
sti
and
add
push
xchg
pusha
out
fnstenv
dec
mov
add
mov
cmpl
jbe
leave
into
out
mov
inc
cld
sub
daa
sub
xor
mov
scas
loopne
mov
mov
ss
into
and
mov
dec
sbb
test
or
stos
pop
mov
jnp
lret
ficomps
and
mov
dec
leave
fisttpl
sbb
add
mov
in
imul
test
push
pop
fs
insb
dec
xchg
add
daa
pop
add
je
int3
mov
pop
fldt
inc
mov
test
push
loop
mov
mov
cmp
gs
insl
insl
inc
je
dec
xchg
gs
dec
inc
insb
cwtl
gs
lcall
adc
push
push
fwait
cli
inc
push
jbe
lcall
mov
loopne
pop
inc
xor
rcrb
xchg
mov
jmp
mov
aas
test
int3
aaa
dec
call
popa
repnz
sahf
andb
or
jg
pop
lea
push
fs
jae
addr16
mov
jmp
mov
jmp
repnz
js
dec
xor
sbb
std
aas
dec
inc
shrb
sbb
jp
cmp
inc
or
pop
mov
push
stc
std
pop
push
jnp
mov
push
cmp
pop
push
jno
loopne
mov
incb
stos
call
pop
and
push
xor
lahf
rcll
inc
fnstenv
in
in
or
lcall
adc
add
add
test
mov
cmc
in
xchg
add
mov
mov
movups
and
push
and
and
mov
daa
mov
push
jae
add
das
add
in
or
test
add
je
mov
or
fisttps
mov
jp
cmpsb
or
push
or
shll
call
inc
das
or
in
lods
repz
mov
push
push
dec
adc
sub
jnp
and
add
pop
inc
enter
xchg
sub
add
jb
mov
lret
mov
outsl
outsb
outsb
gs
adc
dec
gs
pop
sub
fs
gs
adc
outsb
arpl
shlb
gs
sub
mov
loopne
loop
arpl
lret
mov
cs
sti
xor
dec
mov
adc
aam
insb
adc
adc
inc
nop
sub
je
pushf
or
sub
jae
fs
mov
xor
lea
push
xor
rcrl
add
xchg
cmp
jae
mov
incl
popa
aas
std
dec
xlat
pushf
enter
test
bound
int3
sub
or
xlat
jns
std
inc
std
js
test
ja
fstp
loop
dec
cmp
data16
add
int3
cmp
insb
ret
xor
xchg
loop
jo
sub
int
adc
sub
test
push
push
inc
sub
das
mov
dec
test
push
jnp
data16
add
shl
add
dec
cmp
je
xchg
sub
jne
push
ret
and
rorb
adc
cmpl
jbe
xor
orl
decl
jne
lock
inc
jb
stos
xor
and
call
sub
xchg
sub
and
enter
pusha
add
cmc
and
jae
enter
test
enter
scas
scas
int3
enter
mov
mov
pop
mov
fadds
pop
scas
bound
mov
and
xchg
shlb
push
xor
mov
fxch
cmpsl
test
test
mov
lods
std
lods
or
adc
js
jo
insb
shrl
sub
shll
sbb
fdivs
stos
mov
dec
xor
cmpb
sub
cmpsl
pop
push
or
or
push
sub
ss
add
mov
fs
xchg
gs
outsl
or
ljmp
cs
mov
dec
xchg
popa
jne
lret
mov
outsb
arpl
jb
shrl
aaa
mov
sub
jno
insb
addr16
lret
mov
imul
or
js
dec
xchg
gs
outsl
mov
cs
bound
add
ds
je
and
add
mov
sub
push
push
sub
in
lods
les
xor
enter
faddl
pop
xabort
add
xchg
cmp
test
adc
push
push
outsb
sbb
ds
or
sub
and
mov
cltd
lods
pop
or
sbb
pop
dec
inc
lcall
icebp
dec
loop
fwait
mov
inc
mull
fmull
xor
call
push
lahf
jnp
sub
sbb
mov
add
jns
inc
adc
xchg
subb
call
push
xor
mov
inc
sti
pop
jg
mov
cmp
add
sub
loopne
adc
nop
rorb
in
mov
sbb
repnz
andb
mov
inc
aam
imul
inc
lods
pop
add
push
fstps
int3
jae
mov
andb
adc
push
mov
xchg
mov
xor
add
loopne
sbb
scas
push
aad
xor
xor
jne
cmp
pop
mov
pop
outsl
out
aad
add
outsb
or
or
or
jo
add
push
mov
pop
pop
add
sahf
mov
or
add
push
adc
enter
xorl
push
sub
add
xchg
xchg
adc
pop
pop
and
shlb
and
and
dec
mov
cmp
or
inc
gs
popa
mov
and
inc
and
inc
pop
and
dec
and
xchg
pop
repnz
cmp
int
and
add
add
movsb
ljmp
xchg
adc
insb
and
test
mov
test
adc
or
and
jo
adc
or
test
xor
pop
leave
sub
inc
add
and
std
enter
std
add
and
and
std
xchg
out
push
test
cld
xchg
pop
inc
rcl
sahf
std
dec
push
and
xor
or
pushf
inc
dec
jb
add
std
xor
repnz
push
fxch
add
jo
and
xchg
pop
push
and
xchg
sbb
pop
inc
and
push
jb
in
and
cmp
mov
or
outsb
add
and
inc
add
pusha
add
mov
repnz
push
add
stc
add
int
add
mov
and
adc
and
leave
data16
dec
adc
and
in
cmp
cmp
cmp
mov
adc
adc
ss
out
jo
mov
les
fs
movsb
out
and
arpl
dec
xchg
cwtl
pushf
xchg
inc
mov
add
aaa
sbb
cs
add
mov
int3
mov
inc
cmp
fdivs
dec
adc
jge
adc
test
xchg
pcmpgtw
or
jecxz
inc
mov
push
and
or
inc
mov
pop
pusha
inc
sub
inc
rcll
lods
push
inc
and
dec
dec
push
dec
popf
xchg
test
sub
push
sub
and
pop
das
jns
adc
sub
inc
lods
movntps
or
pop
or
cltd
sbb
push
mov
lcall
dec
jae
push
mov
push
outsb
jb
shll
inc
mov
inc
outsl
js
ljmp
dec
mov
mov
cltd
jno
mov
and
dec
insl
insl
mov
push
dec
jae
jg
adc
repz
push
and
xchg
arpl
xchg
add
rorl
mov
mov
xchg
add
mov
sub
test
mov
nop
adcb
mov
xchg
int
mov
push
sub
daa
xor
sub
xor
data16
fisttpl
cmp
es
stos
sbb
in
inc
cmp
cmp
insb
push
sub
pop
jp
cmpsb
pop
ss
mov
pushf
push
imul
dec
scas
jmp
insb
test
lret
xchg
pop
add
jmp
cmc
leave
add
mov
add
insl
sub
pop
cmp
pop
jmp
loopne
and
add
adc
push
dec
dec
xchg
loopne,pn
mov
inc
jg
add
popa
dec
or
and
add
push
jne
cmpsl
adc
je
and
cmp
dec
cmpsb
mov
adc
jno
lds
sbb
sub
push
ret
sbb
adcb
sti
xor
imul
xor
add
jo
les
dec
mov
pop
jns
pop
add
inc
mov
je
imul
xor
and
scas
push
cmp
adc
cmp
movsl
dec
outsl
sbb
daa
add
addb
xorb
outsl
adcb
xor
or
movsl
in
add
xor
jo
loopne
loope
add
add
out
scas
out
dec
add
add
movsb
loopne
fldcw
aas
ja
and
add
pop
or
cmpsl
and
pop
add
jb
cmp
mov
xchg
or
cmp
cmp
xor
mov
jecxz
inc
and
add
jne
xor
jae
and
mov
add
movsl
popa
and
add
pop
mov
xor
gs
jne
jo
imul
xchg
insl
scas
aad
pop
gs
sub
int
faddl
add
push
jb
cmp
xlat
cs
xor
add
mov
xlat
xor
popf
xchg
pop
dec
or
out
pop
addr16
jo
popf
addr16
out
or
sub
mov
cmpsb
inc
int
fwait
fwait
push
sub
or
fsubs
sub
dec
dec
imul
push
pop
mov
lea
jbe
mov
rorb
fs
outsl
pcmpeqw
dec
pop
flds
xchg
pop
inc
push
fistpl
mov
lea
arpl
and
arpl
insb
cmpsl
xchg
out
fldenv
mov
add
mov
pop
xor
jp
xor
xor
cmp
pop
das
xchg
mov
aad
pop
xor
xor
xor
xor
xor
aaa
mov
cld
xor
mov
mov
sbb
cmp
mov
aaa
clc
aaa
xor
cmp
cmp
cmp
cmpb
call
pop
mov
cmp
cmp
arpl
xchg
fwait
cmp
cmp
cmp
add
loope
sarl
jg
xchg
cmpsl
fstpt
pop
aas
insb
aas
cmpb
aas
lahf
aas
movsl
aas
mov
fidivrl
aas
test
mov
mov
jno
jp
mov
fwait
and
fisttps
xor
xor
xor
dec
xor
and
fists
xor
xor
xor
push
test
xor
inc
std
jg
cli
xlat
xor
xor
movsl
insb
xor
stos
xor
idivl
cmp
ss
arpl
jne
add
hlt
jg
ss
ss
fidivl
loopne
out
and
sub
sub
xor
push
icebp
nop
sub
cmpb
mov
lea
push
imul
push
adc
sbb
or
fldcw
into
jne
cmc
xchg
inc
pop
pop
and
jbe
addb
les
pop
pop
adc
jo
stos
push
movsb
push
add
xchg
dec
outsl
jbe
mov
push
cmp
add
adc
adc
andb
add
push
add
andb
cs
add
loopne
arpl
rclb
adc
xchg
push
or
add
and
push
add
add
pandn
insb
out
mov
dec
sub
sbb
cmpb
mov
int3
and
inc
sti
add
je
iret
push
jns
add
push
xchg
sbb
add
adc
enter
add
and
mov
or
nop
ret
shrl
gs
xor
fcoms
push
popf
pop
xor
add
enter
les
dec
add
add
add
add
add
add
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
