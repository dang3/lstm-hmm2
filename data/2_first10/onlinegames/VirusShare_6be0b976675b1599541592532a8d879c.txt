mov
add
add
add
add
sub
orb
and
out
mov
imul
dec
and
jo
xlat
adc
xor
mov
lahf
sub
loope
shlb
mov
ja
and
jbe
cwtl
xor
aad
jg
mov
push
xchg
jg
and
idiv
ja
add
mov
fisttpl
and
es
mov
mov
mov
movsl
dec
divl
lcall
sbb
fstps
xor
or
push
xor
fmull
xor
mov
pop
mov
jg
mov
mov
scas
jne
mov
ret
test
xchg
mov
push
or
pop
dec
cmpb
xchg
xor
sub
push
loopne
enter
xchg
faddl
dec
stos
cwtl
or
pop
das
dec
je
lcall
mov
adc
test
mov
ss
mov
dec
mov
sbb
lret
jb
loop
sbb
cmp
jg
lret
mov
test
push
add
cld
push
enter
xor
mov
jae
rclb
cmp
shll
testb
xchg
cli
sahf
sahf
shlb
xchg
jle
xor
add
cmp
or
dec
pop
out
imul
leave
push
in
ret
or
push
gs
aam
push
push
fdivrl
pop
inc
mov
addr16
std
lods
xor
je
ja
mov
inc
loope
sbb
add
mov
mov
mov
std
fs
inc
sub
in
or
out
push
roll
cmp
fwait
repnz
js
jno
xchg
in
add
xor
jns
add
ljmp
ret
rcrb
fldz
dec
jecxz
cmp
ficoms
iret
jmp
jns
pusha
mov
sub
mov
iret
std
aaa
or
mov
sarb
xor
arpl
out
or
scas
popf
xor
mov
adc
jno
loopne
or
xchg
mov
pop
fsubr
testb
sbb
js
popa
aas
fs
push
xchg
push
push
push
ljmp
sub
mov
enter
adc
pushf
outsl
call
mov
mov
push
aaa
cmp
mov
out
mov
sbb
jno
or
and
dec
sbb
xchg
stos
xor
es
mov
mov
and
lahf
mov
jo
xchg
inc
jge
push
and
hlt
adc
out
hlt
and
adc
pop
or
adc
mov
mov
jmp
mov
pop
out
and
scas
hlt
and
shll
jnp
test
inc
push
and
xlat
pushf
loop
fldenv
pop
lods
mov
pop
sarl
sub
in
push
push
mov
int
mov
pop
outsl
add
sbb
xor
adc
lcall
mov
rcrl
or
add
outsb
cmp
jne
xchg
mov
fs
adc
js
or
pop
sub
das
fcoms
ficompl
enter
rcll
fwait
paddusb
mov
lods
inc
pop
pop
cmp
add
jns
cmpl
mov
outsb
mov
dec
stos
shrb
xchg
outsb
push
jb
rcll
test
push
stc
movsb
lea
add
add
push
xchg
inc
dec
xchg
dec
bound
jecxz
aaa
xor
das
adc
rcl
pusha
xor
sbb
cltd
addr16
addl
jae
mov
mov
call
sbb
subl
repnz
xchg
dec
and
repz
pop
ljmp
and
lea
hlt
es
mov
ja
xchg
adc
movsl
cmp
cli
jge
rcrb
sub
movsl
pop
push
inc
js
or
xor
push
je
int
fiaddl
xchg
test
in
add
nop
mov
mov
push
cmpsb
add
sub
fwait
mov
shlb
repz
jne
mov
inc
mov
insl
ret
not
adc
push
mov
jge
push
mov
pop
imul
inc
cmpsb
int
mov
dec
jbe
popa
ret
lods
mov
aad
fs
sbb
cmpsl
xor
cld
and
pop
dec
test
push
add
mov
adc
sub
cmp
mov
sti
imul
mov
aad
or
stos
cmp
and
int3
mov
std
popa
bound
add
add
inc
aam
sub
mov
mov
push
notl
mov
pop
or
xchg
out
cmp
jbe
inc
imul
mov
mov
roll
sub
rcrb
push
inc
rorl
icebp
inc
loopne
inc
inc
xor
ja
shll
sbb
scas
and
jge,pn
xchg
adc
data16
jecxz
lahf
jnp
emms
mov
mov
addr16
xor
push
xor
push
scas
jle
pop
xor
and
int3
xchg
lods
or
cltd
and
imul
nopl
pop
or
sahf
sahf
movsl
adc
negl
aad
lods
cmp
gs
inc
cwtl
stos
xor
adc
ss
outsb
out
jne
sbb
fwait
mov
orb
cld
sti
mov
cld
repnz
leave
in
outsb
dec
out
xor
fdivl
jo
insb
mov
push
rol
in
xor
loopne
jge,pt
ret
dec
and
popa
test
test
sub
sub
std
arpl
lods
pop
rep
sub
mov
mov
pop
cltd
ljmp
frstor
adc
arpl
inc
fstpt
pushf
cmpsl
stos
jge
cmpsl
shl
pop
imul
sub
push
fsts
pop
sti
fistps
pop
sbbl
outsb
test
cmc
xor
cwtl
mov
pusha
test
xor
or
dec
inc
pushf
fldt
outsl
rclb
mov
loope
vmulpd
int3
jl
loop
cld
mov
fldl
pop
push
or
cmpl
outsl
mov
cmpsl
sbb
shlb
mov
outsb
mov
in
adc
int3
xchg
movsb
push
mov
jg
or
dec
push
dec
mov
shll
mov
mov
insl
outsl
lret
ja
jae
jecxz
xchg
cmp
pop
push
fistps
out
lcall
shrb
call
xchg
fwait
scas
rolb
sbb
xchg
lcall
jmp
push
lods
jg
clc
bound
jne
or
sub
add
iret
push
das
imul
xor
aaa
js
cmpsb
nop
jmp
sar
and
add
cmc
scas
cli
xor
xchg
xlat
out
jmp
idiv
sbb
dec
and
mov
inc
push
push
in
push
jns
outsl
mov
fnstcw
inc
xor
add
int3
imul
sbbb
xor
xchg
mov
sbb
sti
sbb
pop
sub
in
push
mov
jae
add
jmp
mov
movsb
lret
mov
jp
ss
push
mov
je
dec
mov
lds
inc
dec
cmp
out
lcall
mov
pop
cmp
je
lahf
push
inc
rep
inc
mov
mov
imul
in
mov
inc
popa
imul
outsb
aad
stos
jns
in
and
addr16
fnstsw
cld
mov
data16
repz
mov
mov
push
aaa
movsl
xchg
insb
jg
cltd
in
sbb
or
cmp
adc
int
insl
jg
loopne
jo
add
push
faddl
bound
jp
rolb
mov
out
fnstcw
pop
push
int
scas
and
cmpsl
fnstsw
je
mov
mov
cld
add
pop
lock
xchg
mov
scas
push
rclb
outsl
loope
cmpl
pop
mov
hlt
mov
dec
es
xor
mov
out
mov
xor
inc
rorl
fstpl
and
int
jl
imul
pop
xchg
pop
push
fidivl
ljmp
push
mov
jne
adc
mov
mov
cmp
xchg
cli
lds
shl
inc
jns
imul
xchg
jno
clc
adc
shl
enter
sbb
jno
jae
or
insb
jg
push
cmp
cmpsl
lret
push
push
ds
jecxz
pop
jecxz
sub
bound
jbe
jmp
dec
ret
test
sbb
fnstcw
ds
mul
mov
rol
cli
push
sbb
aas
cmc
movsb
push
push
mov
ljmpw
jbe
fmuls
xor
push
movsl
and
mov
pop
mov
sub
sti
enter
mov
std
dec
arpl
aam
sbb
sbb
insb
cli
mov
out
loope
dec
add
inc
inc
fildll
lods
fstl
ja
inc
push
fdivl
xchg
push
pusha
inc
inc
lahf
dec
cmpb
xchg
jb
ret
pop
cs
dec
xor
jp
lcall
push
pop
mov
or
enter
icebp
add
jl
push
jmp
out
pop
popf
jmp
nop
xor
inc
sub
dec
jne
fsubl
mov
sarb
push
add
xor
ss
int3
in
mov
mov
pusha
adc
lea
js
sbb
dec
push
sti
mov
sub
add
inc
sarb
pop
lahf
je
test
dec
dec
mov
ljmp
cmpl
shll
dec
push
cld
and
or
je
ret
inc
xorl
xchg
mov
movq
push
imul
gs
mov
and
aam
addl
pop
cld
std
mov
push
test
xlat
je
mov
push
je
push
inc
aam
ret
add
in
adc
adc
repnz
adcb
lcall
sbb
insl
cli
iret
mov
or
in
mov
xlat
test
or
jae
mov
aaa
mov
cld
andb
mov
inc
scas
push
sar
mov
sub
lcall
adc
bound
stc
andl
fcmovne
cltd
ja
lahf
lea
adc
dec
inc
mov
jae
sbb
int
mov
cmpsl
dec
adc
test
mov
pop
and
mov
rolb
mov
insl
lret
bound
loopne
pusha
stc
mov
rolb
pusha
dec
fsts
push
test
std
sub
es
pop
aad
mov
clc
jb
in
mov
in
xchg
mov
cmc
insl
jg
dec
into
mov
push
inc
imul
movsl
ret
mov
scas
inc
cmc
jo
pop
xor
cmp
std
inc
mov
push
push
sub
ljmp
xchg
fidivs
xor
pop
orl
mov
xchg
xchg
leave
pop
cli
mov
pop
pop
xchg
frstor
dec
hlt
xchg
repnz
jmp
xchg
rolb
loope
in
add
movsl
iret
mov
and
sbb
stos
pushf
push
pop
sti
hlt
sahf
ret
pop
pop
in
jg
das
sub
mov
dec
lahf
sbb
adc
and
xchg
add
mov
push
cmp
jb
je
xorl
sub
inc
xor
push
and
push
mov
sub
orb
xchg
ljmp
pushf
lcall
jle
test
xchg
jecxz
daa
imull
adc
aad
arpl
xchg
dec
cmp
cld
cmpsb
hlt
jbe
jecxz
push
mov
mov
add
and
xor
in
insl
push
push
xor
lret
push
or
inc
sbbl
lods
lods
in
aaa
jno
and
cmc
fdivrs
inc
sbb
mov
cmpsb
push
insb
push
imul
mov
push
lods
mov
cmc
pop
in
int3
clc
mov
aad
cmc
ror
add
add
loope
bound
add
loope
ret
push
sarl
xor
nop
jno
push
cmp
pop
es
push
loop
out
mov
cmp
cltd
xor
add
jae
lods
test
sub
fdivrl
cmc
pusha
xor
xchg
mov
pop
push
mov
fmulp
hlt
arpl
mov
pop
add
mov
push
je
dec
bound
sarb
jecxz
mov
add
imul
stc
pop
sub
xchg
pop
test
pop
inc
sub
pop
clc
scas
mov
pop
add
sub
pop
icebp
cwtl
arpl
jns
xor
into
mov
scas
sub
in
xchg
lcall
and
inc
gs
gs
test
call
lret
rcrb
mov
adc
fucom
jns
mov
xor
fcmovnu
mov
repnz
inc
push
les
jne
sbb
repnz
mov
push
sbb
loope
pop
out
ds
adc
cld
pop
sub
adcl
popf
mov
out
or
pop
dec
scas
mov
mov
adc
pop
cmpsb
das
mov
xchg
xchg
in
cmp
jmp
sub
aam
mov
pop
stos
xchg
outsl
mov
jmp
pop
jo
or
inc
inc
jge
test
mov
insb
xchg
popf
xor
push
add
adcb
mov
push
mov
and
movsl
mov
out
or
test
mov
jge
push
xchg
std
mov
insb
ss
je
xchg
int
mov
jns
fwait
scas
pop
dec
jne
cmp
data16
lods
jbe
fdivl
scas
mov
test
scas
push
fists
sbb
ret
insl
mov
adc
mov
popf
push
mov
out
fsubp
cld
lret
jecxz
das
shlb
mov
cmpsb
xlat
gs
and
mov
mov
mov
or
jp
fdivs
inc
aas
in
dec
xor
xor
pusha
std
sub
enter
scas
lret
mov
xchg
push
stos
push
pop
sub
mov
mov
mov
pop
int
ljmp
sahf
cmp
pusha
cltd
xchg
and
loop
pop
or
stos
das
add
mov
jecxz
jbe
scas
mov
xor
cmp
push
mov
rol
das
leave
push
inc
cltd
mov
jo
ss
jnp
mov
xchg
ja
add
jbe
jne
pop
lret
in
add
stc
repz
cld
test
mov
mov
mulps
unpckhps
lahf
adc
les
stc
jecxz
cmc
xor
inc
sub
fdiv
jp
sbb
push
and
lcall
aad
mov
inc
fsubrl
aaa
xor
lcall
jb
push
xchg
test
into
pop
or
adc
lret
inc
clc
addr16
dec
jnp
mov
jp
cmp
pop
dec
data16
addr16
xor
jl
jp
out
test
fwait
rolb
bound
in
jno
dec
das
dec
fstl
pop
scas
out
dec
enter
cmp
inc
adc
mov
lods
mov
or
scas
fiadds
push
lods
dec
adc
inc
sbb
mov
popa
mov
add
rorl
jne
enter
dec
xchg
aam
ja
jno
xchg
test
into
mov
adc
inc
dec
pushf
push
push
cwtl
repz
add
jo
fdivrs
mov
out
pop
push
clc
outsl
stc
xor
fwait
out
ds
adc
mov
cltd
insl
or
xor
cltd
sbb
aam
jg
scas
fsqrt
dec
push
sbb
imul
mov
addl
pusha
loop
outsl
inc
out
and
inc
cmpsw
js
mov
add
cwtl
lcall
xchg
mov
hlt
andb
xchg
fs
jo
stc
pop
push
iret
mov
mov
pop
outsb
jmp
addr16
cli
cmp
inc
out
out
in
incb
ret
pop
dec
repz
mov
test
jl
outsl
jl
loope
push
cld
sub
out
in
mov
lret
fnstenv
jge
arpl
fildll
add
mov
lods
sbb
fimull
jg
int
mov
imul
rcr
les
pop
push
lcall
test
push
push
and
or
cmp
cmp
fcompl
sub
addr16
and
es
jmp
out
outsl
xchg
inc
out
sbb
jb
mov
lds
pop
mov
pushl
lahf
push
dec
imul
push
out
sbbl
call
in
scas
adc
int
inc
inc
mov
jns
daa
lods
push
lahf
test
mov
sub
cmp
ja
lea
cmc
pop
cli
or
mov
sbb
sub
sbb
sub
lock
dec
outsb
dec
pop
push
push
jns
xlat
stos
xor
arpl
call
inc
adc
or
call
cmp
and
pop
dec
stc
loop
sbb
or
ret
jg
ds
iret
ds
pushl
jp
fs
dec
insl
add
es
inc
push
cli
adc
xor
cmpsl
xor
rcrl
and
bound
push
mov
add
imul
sbb
jecxz
movsb
int3
adcl
push
adc
rol
gs
jmp
shrl
cld
aaa
add
jb
lods
jb
push
lea
lock
and
pop
jne
jmp
lret
xlat
sbb
popa
rcll
push
imul
cmpsl
or
mov
shlb
push
in
cmc
mov
lds
adc
jbe
nop
sbb
pop
sub
sub
hlt
mov
mov
movsl
lock
bound
clc
adc
mov
mov
rolb
cld
cli
pop
mov
sti
xor
add
inc
in
jb
adc
stos
cmc
or
or
push
inc
cmp
xchg
mov
loopne
outsl
sbb
xchg
je
xchg
xchg
push
mov
leave
sahf
push
add
int3
hlt
std
repnz
int3
push
lods
jno
lea
mov
xchg
jbe
sub
sub
push
rclb
dec
xchg
fsub
lret
cwtl
add
addr16
lcall
dec
cltd
mov
stos
and
movsl
add
jno
mov
movsl
jmp
jae
in
cmp
mov
aas
imul
decb
or
push
ficoml
ret
testb
in
shrl
push
add
lds
cld
and
push
mov
lcall
pop
sub
int3
enter
in
out
cli
mov
popa
pop
mov
or
lahf
pop
in
jecxz
dec
add
jno
lahf
imul
xchg
inc
leave
inc
popf
insl
cwtl
cld
mov
mov
or
xchg
sti
pop
shrl
leave
inc
sti
dec
mov
sub
and
scas
js
jge
pop
sub
in
dec
mov
mov
sbb
inc
dec
mov
xor
pop
or
dec
inc
bound
outsb
cmpsl
cmp
adc
in
pop
xchg
sarb
stos
enter
repnz
imul
lea
jns
mov
pop
xor
scas
cmpb
in
inc
jno
cmp
sar
pop
movsb
cwtl
cs
stos
rcl
stc
aas
cltd
imul
jmp
in
mov
sar
cs
sub
cs
pop
mov
in
or
sbb
stos
imul
mull
stc
arpl
nop
pop
cmp
or
gs
xchg
xor
and
js
call
adc
lea
xchg
dec
push
and
sbb
and
xchg
popa
mov
or
cmp
sbb
cmp
and
xchg
subb
cmpsl
dec
aam
add
jae
xor
xor
fnsave
ljmp
mov
mov
xchg
or
add
mov
pop
or
push
dec
add
lods
rcll
or
clc
movsb
popf
icebp
mov
aam
test
pusha
mov
add
adc
in
cli
movsb
test
push
outsl
inc
cwtl
xchg
add
fwait
sub
aas
lods
inc
iret
or
je
push
inc
stos
and
lods
and
push
cmp
xchg
pop
pop
fdivrl
call
lcall
and
shll
adc
dec
inc
je
mov
jg
cmp
pop
push
dec
js
out
fsub
xchg
and
arpl
test
push
sbb
xor
jl
rclb
mov
push
sub
pop
push
sbb
sub
jge
cmc
aaa
shll
sbb
lods
cmp
sbb
add
fadds
stos
aad
adc
sahf
ret
in
fnstenv
pop
outsb
xor
int
or
andb
in
aad
mov
inc
pop
enter
mov
inc
xchg
rol
and
xor
fstpt
adc
fisubrs
stos
std
jge
jmp
add
add
sbb
fxch
mov
ret
or
fcomps
cs
loop
and
je,pt
push
xchg
sbb
or
mov
xor
mov
push
dec
dec
add
cltd
test
sahf
fcomp
movsl
rorb
jge
xchg
inc
mov
cmp
push
dec
out
xor
out
add
ret
mov
adc
icebp
test
lret
cmpsl
in
arpl
or
in
in
stc
cltd
dec
pop
jae
imul
aaa
xor
mov
mov
aad
imul
inc
fldl
mov
sbb
sub
push
mov
fdivl
pop
inc
and
mov
jne
mov
mov
ds
in
inc
aaa
into
mov
push
cmp
mov
dec
lds
cmc
cli
sbb
into
and
sarl
pop
push
lcall
in
shrb
ljmp
ss
and
push
pop
mov
sbb
dec
dec
imul
or
enter
loope
jmp
bound
or
mov
lcall
jns
add
lds
iret
test
lods
pop
out
jns
lcall
push
and
sahf
push
inc
loope
icebp
xor
js
pop
enter
lret
mov
jnp
mov
clc
push
cmpb
loop
inc
stos
jae
es
fsubrl
in
lock
mov
pop
fldcw
cld
mov
str
cmp
fldenv
fdivrl
add
pop
aam
fcoml
xchg
stc
popa
loope
out
sbb
jae
stos
clc
mov
fmul
lcall
sti
jmp
adcl
mov
jne
call
and
and
add
mov
adc
push
xor
lahf
popf
imull
push
push
add
sub
into
fdivrl
xor
lea
mov
sbbl
ljmp
cwtl
and
xchg
and
mov
imul
add
xchg
pop
or
ds
popa
adc
arpl
and
sub
rol
mov
xchg
out
hlt
ret
mov
movsl
and
inc
jge
adc
jl
xchg
sbb
push
jecxz
neg
out
add
or
sbb
mov
mov
popf
mov
add
aam
stos
cltd
sub
push
pop
sbb
mov
out
sub
push
cmp
fldcw
pop
jb
pop
outsl
adc
adc
nop
cli
xchg
xlat
outsb
mov
mov
push
ljmp
or
push
dec
jbe
sbb
jmp
lock
cmc
dec
pusha
and
jne
fsubl
push
jmp
xor
test
cmp
mov
cmpsl
test
test
dec
incl
push
movsl
sbb
in
sub
fcomps
pop
xor
adc
cmc
cmp
push
mov
dec
mov
dec
push
cmp
stos
sahf
jno
cli
cwtl
lcall
mov
stos
fnstsw
pop
dec
stos
rclb
jmp
xor
roll
inc
ds
xchg
fidivl
jbe
mov
sarl
mov
subb
inc
std
repz
pop
sbb
or
cmp
mov
ds
inc
adc
outsb
out
mov
jbe
js
xchg
add
jecxz
lods
jmp
push
and
movb
jae
pandn
mov
and
mov
xchg
mulb
hlt
or
aaa
in
sub
xchg
data16
dec
lea
pop
out
jns
sbb
faddl
jg
cmp
mov
jnp
push
xor
jge
pop
adc
sub
insl
adc
inc
popa
pop
and
push
xor
dec
or
inc
jge
dec
inc
sbb
outsb
push
push
mov
mov
mov
popf
popa
lds
cmovp
xchg
lods
out
mov
lret
cmpsb
cmpb
fwait
mov
das
adcb
xchg
idivl
popa
and
and
mov
ret
push
fwait
push
sub
add
inc
pop
push
pop
xchg
dec
and
dec
xchg
cwtl
mov
or
repz
dec
aad
fwait
cmpsb
or
dec
xchg
mov
shrl
inc
test
add
pop
jnp
clc
outsl
les
add
mov
inc
mov
stc
inc
pop
jo
push
fmull
mov
fwait
jb
cld
sub
mov
popa
push
je
inc
les
arpl
jnp
in
aas
in
sbb
rcrb
out
and
es
mov
mov
es
sbb
imul
das
pusha
or
in
fcomps
sti
add
lods
dec
xchg
pop
mov
les
jp
push
pop
dec
cld
mov
and
dec
pop
gs
inc
jmp
mov
lods
rol
add
shlb
mov
cwtl
js
mov
lcall
lods
ja
cmpsb
jnp
nop
push
repz
pop
mov
pop
jp
icebp
pop
mov
lret
xchg
add
xchg
lahf
jmp
bound
call
sub
mov
dec
lock
push
nop
inc
ret
cmp
cwtl
fstpl
and
mov
in
pop
or
in
aaa
and
jnp
xchg
dec
push
mov
add
cmp
and
fwait
pop
cmp
adcb
jg
mov
lret
pop
aas
mov
jmp
xchg
ret
sub
push
jb
gs
adc
je
push
or
mov
sbb
jb
and
xchg
mov
jno
mov
mov
jp
cmpsl
ret
sbb
fldcw
shll
subl
lret
mov
mov
shl
and
push
ror
add
jmp
out
jge
repnz
ret
dec
add
cmpsl
loopne
icebp
push
push
or
jbe
sub
xchg
bound
aaa
xchg
cmpsl
adc
mov
jg
adc
or
inc
jl
inc
stos
lcall
dec
adcl
cmpsb
adc
ds
adc
mov
ljmp
push
loop
xchg
or
cmpsw
test
xchg
fcoml
pushf
imul
add
cmp
adcl
pop
push
jmp
out
mov
cmpsb
lret
mov
inc
scas
or
gs
iret
mov
les
imul
mulb
xchg
imul
daa
mov
mov
shrb
repz
roll
xchg
fnstsw
sbb
icebp
stos
dec
cs
mov
pop
pop
mov
inc
xchg
in
sub
insb
cs
sarl
jne
adc
add
sbb
out
movl
adc
lods
scas
stc
push
pop
xor
inc
xor
stos
hlt
rorb
call
xchg
in
or
mov
mov
pop
out
inc
xor
fsubl
int3
movsb
mov
cmp
mov
pop
pop
or
dec
popf
cld
jnp
daa
mov
adc
dec
fst
dec
shr
pop
sbb
push
pop
scas
cmp
mov
sbb
and
lcall
fld
add
jae
shl
idivb
icebp
es
inc
cld
popf
add
pop
js
add
test
cmpsl
xchg
sbb
mov
xchg
ljmp
jle
lock
rolb
adc
or
rcrl
pop
mov
pop
pop
mov
pop
out
jp
fwait
les
loop
mov
mov
pop
xor
lods
inc
jge
adc
and
mov
xchg
jne
notl
mov
mov
adc
je
movsl
lret
fcmove
xchg
sub
daa
ret
pop
subb
push
jb
subl
fadds
push
jne
push
xchg
push
pop
ret
rorb
jge
lods
or
fisttpl
add
stos
xor
jne
fdivr
cmp
pushf
jl
mov
aaa
jle
test
sbb
addr16
mov
sbb
in
xor
pop
jbe
mov
xchg
bound
or
lret
jo
outsb
sbb
mov
in
std
push
mov
xor
lods
sti
cmpsb
loope
add
je
xchg
or
mov
call
test
mov
fsts
cld
pop
jns
mov
inc
sub
mov
adc
push
out
arpl
add
fsubr
out
inc
movsb
mov
les
jmp
mov
push
and
movsl
rcl
dec
adc
or
mov
mov
popf
mov
dec
xchg
inc
enter
pop
test
mov
repz
stos
repnz
xchg
clc
adc
dec
es
pop
test
lahf
mov
mov
mov
add
mov
pusha
sbb
ds
in
jp
shll
es
fcmovu
mov
sbb
mov
das
stc
mov
dec
loopne
fwait
mov
jae
arpl
and
sbb
cwtl
push
mov
add
imull
cmp
rorl
je
insl
dec
loop
mov
jno
and
cs
lret
push
add
or
rcr
mov
jnp
cmp
sbb
mov
outsb
stos
dec
adc
jne
rolb
arpl
aaa
fisttpl
sbb
mov
and
pop
std
push
cltd
fnstenv
inc
jno
test
in
stos
ds
cmp
dec
push
pop
out
fimuls
inc
filds
cmc
sbb
jne
leave
mov
xchg
xor
pop
pop
mov
rcrl
sar
inc
outsl
fsubrl
stos
aaa
mov
jle
sbb
mov
adc
jnp
dec
push
push
mov
push
cmp
inc
testb
pop
addr16
lret
xor
lret
push
cs
add
repnz
adc
addr16
xlat
cmp
std
sarl
pop
call
jecxz
rorb
pop
jnp
xor
jo
fnsave
dec
inc
mov
rclb
daa
jo
push
cmp
je
cli
mull
hlt
test
popa
fwait
xchg
imul
mov
pop
mov
cmc
xchg
push
fwait
cltd
mov
dec
jo
ret
outsl
mov
fwait
and
mov
jb
sarb
pop
push
dec
push
pusha
in
or
in
jg
in
add
jbe
shrl
insl
aam
bound
mov
cld
adcl
mov
xchg
div
aaa
pop
inc
mov
fsubr
or
mov
pop
in
xchg
and
insb
mov
aaa
pop
jge
rol
jge
js
xchg
jbe
mov
push
loopne
push
jp
lret
testl
jle
jae
and
xchg
test
fcomi
mov
xor
adc
or
lock
out
add
aad
jp
jmp
aas
dec
ljmp
jmp
cmp
pop
cmpsb
subl
pop
sbb
aaa
pusha
mov
mov
fsub
pop
aaa
insb
clc
jno
sbb
pop
cmpl
push
xchg
daa
cmp
jge
leave
pop
je
jbe
fadd
outsb
lret
xor
push
cmpsl
mul
outsb
rcll
pop
fistpl
xchg
outsb
aad
dec
add
pop
jnp
xchg
mov
out
loopne
cmp
push
jnp
dec
test
inc
scas
repz
scas
popa
push
lret
dec
loope
push
sahf
pushf
mov
mov
sbb
bnd
and
xchg
adc
or
mov
fldenv
sub
or
leave
xchg
sahf
push
sub
adc
je
push
out
or
sub
stos
push
shlb
inc
cmp
xchg
xlat
and
adc
fidivs
mov
mov
sbb
and
inc
xor
stos
inc
cmp
xchg
stos
pop
mulb
dec
in
xor
jae
dec
pop
fisubrl
fdivr
stos
paddusb
push
shlb
lea
out
dec
pop
lods
out
les
add
inc
outsb
mov
dec
inc
test
sub
jo,pn
inc
mov
sub
and
mov
cmp
mov
arpl
pop
or
movsl
adc
fcoms
loop
call
rcrb
xlat
inc
push
pop
or
sub
or
pop
loop
insl
stc
adc
mov
inc
cmpsb
shl
stos
add
adc
pop
jne
rorb
pop
dec
into
jo
jl
sbb
cld
jge
xor
pop
aad
dec
ja
and
gs
mov
ja
xchg
rolb
push
popa
adc
jbe
fimull
xchg
insb
addb
xor
sub
sti
mov
xlat
sarl
pop
xchg
ss
mov
xchg
daa
jno
xor
mov
divb
jge
in
lea
pop
mov
dec
cmpsb
pop
or
jl
lret
pop
je
pop
push
sbb
sub
pop
dec
cmp
je
ret
cltd
sub
js
lcall
int
xor
es
pop
fisttps
adc
mov
insb
pop
or
push
int
loop
jne
cld
nop
jns
push
jbe
pop
cltd
or
mov
mov
shrb
ret
xchg
dec
pop
leave
sub
mov
fdivrs
and
inc
dec
outsl
mov
in
fwait
xchg
imul
jl
mov
movl
divl
mov
enter
adc
loope
addr16
mov
andb
popa
imul
mov
sub
shl
push
mov
jmp
jecxz
inc
push
pusha
fwait
mov
orl
sbb
sahf
ss
pop
lds
fimuls
dec
mov
mov
mov
mov
xchg
mov
in
cli
or
loop
sti
in
add
adc
jl
gs
mov
mov
xchg
pop
xor
xor
pushf
int3
ds
sub
dec
hlt
daa
push
push
jno
imul
or
jno
dec
mov
lods
sarb
out
inc
hlt
and
fimull
sub
fcmovb
ds
push
or
jb
push
xchg
inc
jle
out
mov
std
data16
movb
pop
cmp
cltd
adc
and
outsl
mov
in
in
xor
and
mov
fsubrp
push
dec
jnp
inc
cmp
jmp
adc
xchg
push
mov
mov
and
or
filds
enter
das
pop
rcrb
pusha
push
jno
push
insb
jp
add
mov
out
cmp
ljmp
mov
add
inc
test
sbb
shlb
dec
mov
nop
adc
clc
rorb
sub
inc
mov
insl
call
cltd
push
cmp
mov
out
call
lea
mov
aad
inc
mov
sub
cs
cmp
scas
aad
mov
scas
mov
mov
lahf
fwait
push
fildl
cwtl
pop
movsb
aaa
lock
adc
mov
xor
leave
divl
push
popl
stos
out
pop
mov
lahf
sbb
shrl
pop
mov
xor
push
lods
xchg
in
jmp
lock
xrelease
stc
inc
jns
stos
push
gs
inc
insl
rcrb
mov
xor
push
xor
das
das
addr16
arpl
lods
mov
sar
jbe
inc
push
jnp
sbb
inc
sbb
inc
mov
or
cmpsb
icebp
add
dec
mov
lods
loopne
adc
sti
mov
and
or
dec
or
ret
sub
mov
bound
loopne
aas
pop
mov
mov
mov
mov
inc
cs
sahf
popa
mov
pop
mov
mov
add
pop
jb
pusha
out
mov
add
jecxz
negb
pop
jae
push
mov
cmp
lfs
sbb
in
cmp
mov
xor
xor
mov
add
push
es
pop
xor
bound
dec
sub
pop
clc
pop
push
in
lods
xor
movsb
pop
dec
xchg
mov
pop
dec
lret
lret
movsl
into
adc
mov
xchg
scas
fwait
add
test
jle
xchg
iret
push
das
jp
pop
in
repnz
mov
aam
push
loop
stos
pop
cmp
fwait
jne
test
push
aas
add
push
test
pop
and
iret
shll
scas
xchg
mov
jo
inc
lahf
in
add
or
xchg
dec
pop
sbb
jmp
stc
sbb
lret
lret
jno
out
dec
xchg
mov
loopne
mov
ret
rorb
and
test
jecxz
fmuls
pop
test
mov
xchg
xor
leave
push
ljmp
add
or
out
out
shrb
and
push
push
xor
cwtl
sbbl
aaa
cmpsb
sub
push
xorl
xchg
xchg
divl
dec
addb
popf
lahf
std
sbb
mov
ja
adc
insb
dec
inc
fwait
pushf
pop
add
imul
lret
pop
cmpsl
cmp
addr16
call
js
xor
cmp
jnp
cmpl
aad
cmc
sbb
cwtl
leave
rorb
aas
mov
cld
nop
cmp
sub
call
push
movsb
pop
mov
dec
cld
and
lods
jne
xor
jl
dec
rol
or
inc
out
inc
push
or
or
or
push
jge
neg
into
mov
cmp
and
jmp
out
mov
js
test
mov
jne
fisttpll
jns
ss
inc
push
in
fwait
lods
sub
pop
pop
lock
or
push
in
jb
xchg
imul
call
cmp
jno
sbb
push
and
pop
jne
push
adc
pushf
inc
cmpb
ret
jne
push
repz
mov
pop
sub
in
pop
das
add
cli
push
fmull
test
dec
in
fisttpl
outsl
or
xor
sub
mov
dec
lea
sahf
test
fucomip
call
cltd
jecxz
add
fcmovnu
outsl
sub
push
subb
leave
inc
sbb
mov
push
imul
sar
dec
setb
dec
pop
mov
fwait
shrb
xor
std
repz
push
pop
mov
sbb
inc
xor
ds
loop
and
jge
xrelease
dec
bound
rcrb
shrb
cltd
pop
add
mov
sub
ret
mov
mov
in
sub
fiadds
cmc
push
in
popf
fs
dec
imul
lods
xchg
lock
push
sarl
scas
aaa
lods
ljmp
hlt
adc
ret
mov
gs
mov
movsb
dec
inc
mov
xchg
cmc
and
jg
outsb
pop
mov
outsl
movsb
sub
add
and
pop
in
sbb
mov
mov
inc
in
xchg
aad
aad
aaa
mov
int
in
mov
outsb
xchg
jae
test
inc
test
scas
aas
test
cli
inc
cmp
gs
stos
lcall
pop
mov
mov
xlat
fldenv
mov
cmp
fwait
mov
or
pop
dec
mov
sub
xchg
stos
data16
mov
sub
loop
mov
cwtl
lock
cli
test
pop
int
sarb
out
mov
outsl
mov
sub
jecxz
jmp
std
cmp
and
es
in
cmpsl
xchg
push
ss
aam
adc
negl
or
xchg
in
popf
addr16
in
pop
mov
add
and
xchg
xchg
sbb
ret
insb
dec
pop
mov
int3
sub
sahf
sub
lret
iret
adc
loope
jo
add
sub
dec
adc
sub
rolb
mov
lock
mov
pushf
mov
rorl
cmpsl
lret
adc
pop
cmovns
call
xchg
ljmp
jns
mov
xchg
daa
adc
dec
insb
hlt
je
pusha
das
subb
jl
and
xchg
and
dec
rcrl
sti
in
mov
mov
mov
popf
or
jae
in
add
movsb
enter
sbb
clc
jp
repnz
push
fstl
cltd
mov
and
shll
lret
jb,pn
scas
push
jle
scas
ljmp
mov
jns
pop
sub
movsl
adc
nop
orb
insb
lea
cmp
push
xchg
push
push
pop
pop
add
mov
add
jge
pusha
cltd
dec
mov
mov
fsubrp
repz
sub
sbb
sub
mov
cmp
jns
dec
xor
cmc
push
pushf
mov
insb
stc
bound
movsb
testb
and
jp
leave
sub
jg
ffree
jle
dec
in
es
xor
cmp
push
pop
push
ss
mov
hlt
sbb
xchg
pmaxsw
xchg
popaw
out
sub
xchg
fstpt
push
repz
pop
les
je
xchg
cld
loope
or
dec
sub
mov
scas
cltd
testb
xor
push
jmp
movsl
fwait
shr
mulb
icebp
repnz
fists
out
push
inc
push
ljmp
mov
bound
test
js
lcall
mov
pop
js
fistpll
cs
mov
pop
imul
gs
mov
es
sahf
arpl
into
je
xchg
push
in
cld
cli
aas
in
addr16
or
gs
fs
arpl
fisttps
sbbl
out
sti
pop
jae
mov
mov
push
xor
cltd
ja
jo
xchg
clc
clc
push
roll
icebp
push
std
push
pop
dec
ret
sti
je
lds
mov
add
adc
mov
dec
pop
lods
push
and
cmp
rorl
and
repnz
jb
and
and
dec
dec
push
jnp
push
sbb
loop
pop
not
cli
es
pop
mov
push
add
scas
mov
repnz
fwait
cmp
mov
mov
push
jno
cmp
ljmp
dec
subl
addr16
cltd
aam
mov
scas
rclb
push
xchg
dec
sbb
mov
cmp
shlb
sub
out
data16
mov
repz
inc
dec
push
jp
jmp
cmp
pop
or
jge
mull
aaa
mov
cmp
test
jg
sub
sub
add
out
mov
mov
ret
inc
xchg
int3
jge
sbb
jmp
push
loop
cmpl
outsl
mov
inc
dec
stos
loop
jge
movsl
out
repnz
bound
addl
rolb
pushf
or
subl
outsl
ret
mov
adc
cli
jecxz
sub
jmp
lods
and
push
enter
aad
mov
ss
xor
xor
cli
jmp
pop
mov
jb
jl
je
adc
xchg
ljmp
movsl
dec
ror
xchg
repnz
leave
push
xor
addr16
jbe
rcr
jmp
and
repz
push
mov
add
nop
adc
fucomip
mov
cld
mov
xor
cld
xchg
sbb
mov
es
dec
cld
test
and
movsl
popa
cmp
and
dec
icebp
scas
sbb
daa
inc
fcoms
testl
dec
sub
dec
das
sbb
ret
pop
mov
ret
and
xchg
cltd
mov
jge
fadds
cmp
cmp
xchg
ds
lahf
jae
push
arpl
pop
fisttpll
mov
pop
sbb
adc
jmp
sbb
outsl
and
cmp
pop
das
mov
or
inc
push
loop
mov
adc
pop
and
mov
mov
inc
lods
cs
mov
pop
fldenv
adc
dec
scas
ret
pop
fs
enter
in
add
out
lods
lcall
mov
rolb
stos
inc
pop
lea
mov
push
ss
cmp
lods
pop
outsb
pop
xchg
test
cmp
sbb
movsl
popf
mov
jge
cwtl
jbe
cmp
daa
xor
mov
add
adc
pop
or
mov
leave
add
fbstp
fnstenv
mov
xlat
out
call
in
inc
rorl
ljmp
xchg
dec
xchg
and
faddl
inc
ret
sub
popa
pop
xor
aam
fsts
outsb
addr16
aas
xchg
bound
dec
rcrb
xchg
sbb
popf
push
sbb
xor
sub
sub
notb
sub
cmp
mov
pop
jbe
outsb
push
dec
ret
dec
jb
shrl
mov
shlb
outsl
clc
in
push
xchg
xor
xchg
in
pop
cmpl
rorb
add
int3
pop
dec
lahf
mov
mov
test
cmp
loop
xchg
enter
aas
pop
psubd
xor
and
repz
insl
jmp
mov
frstor
shlb
cmc
add
mov
bound
into
inc
jge
sar
push
fsubrs
jmp
dec
je
push
xor
negb
inc
jge
pop
dec
jne
mov
ljmp
push
mov
call
jmp
insb
or
enter
cltd
clc
dec
xchg
lcall
daa
xlat
lds
cmp
lock
call
add
add
mov
add
add
add
add
add
inc
rolb
add
rolb
add
rolb
add
add
add
add
add
pop
rolb
add
add
add
xchg
add
fwait
rolb
add
jbe
jb
jb
arpl
insl
outsl
fs
gs
popa
add
fs
inc
popa
insb
insb
bound
imul
imul
cs
jb
jbe
jb
jb
arpl
insl
imul
cs
outsl
fs
gs
popa
add
imul
insl
outsl
fs
inc
popa
insb
insb
bound
imul
add
add
sbb
add
xor
add
inc
roll
add
add
add
rolb
add
add
add
cld
rolb
add
rolb
add
jb
gs
xor
cs
insb
add
add
add
dec
outsl
popa
fs
imul
add
add
inc
gs
jb
arpl
fs
jae
add
add
add
push
imul
insb
insb
outsl
arpl
add
add
jb
jne
insb
inc
jb
add
mov
push
pushl
mov
xor
mov
push
inc
inc
xor
or
dec
add
pusha
mov
push
mov
and
ljmp
push
push
xor
inc
mov
popa
push
sbb
shl
sahf
push
add
orb
xor
dec
cmovp
lods
cmp
je
jbe
loopne
jge
movb
out
pop
or
and
clc
jne
enter
in
fdivs
jge
sahf
enter
add
add
stos
repz
popaw
or
subl
pop
jge
add
mov
shl
or
insl
inc
sbb
out
xorl
sbb
xchg
hlt
fdivrp
rolb
rcrb
aaa
leave
ret
cmp
push
clc
push
stos
sti
and
sub
loop
sub
cmp
sbb
jae
data16
xor
into
cwtl
scas
loopne
inc
aas
jecxz
movzwl
push
push
rorl
sbb
xchg
arpl
fs
sbb
icebp
mov
push
add
sar
add
push
pop
sub
cmp
les
fstpl
or
xor
rolb
imull
addl
pop
lahf
clc
pop
pop
lea
dec
or
cmpsb
movsl
inc
inc
hlt
sub
lock
adc
or
xor
shll
pusha
es
jne
and
rolb
roll
adc
adc
inc
scas
aas
and
loope
iret
lcall
inc
cld
mov
mov
rolb
mov
shr
lods
sti
cmp
jge
jae
stos
cmpsb
iret
aam
fcoml
mov
xchg
mov
dec
sub
mov
into
add
iret
push
orb
push
adc
or
cli
jle
mov
jmp
and
mov
test
ss
push
in
pop
xor
mov
test
sar
icebp
sub
aaa
mov
jmp
sub
repnz
nop
jl
shlb
xor
inc
nop
jne
xchg
enter
adc
mov
xor
push
jae
clc
push
repnz
and
insl
std
add
adc
mov
sbb
xchg
or
mov
stc
inc
push
in
pop
jb
in
fmuls
loopne
push
lock
xor
test
and
inc
xchg
dec
shr
adc
or
and
xchg
push
push
xchg
int
dec
and
cwtl
cli
or
jecxz
adc
rcl
inc
xchg
rorl
movsl
sbb
stos
pushf
and
rorl
nop
fmuls
dec
inc
imul
repnz
dec
or
and
inc
pop
out
and
or
hlt
rorl
and
jo
sarl
fsts
xchg
cwtl
xor
and
pop
setge
sub
lock
mov
mov
imull
stos
shr
add
clc
and
sbb
mov
jmp
fucomip
push
ret
dec
andps
xchg
jbe
adc
and
lret
xchg
cmp
xchg
mov
dec
enter
push
in
jmp
pop
inc
popa
push
lcall
adc
push
and
sub
pop
dec
loopne
std
neg
or
xor
sub
push
push
sbb
test
aam
add
orl
setb
push
jnp
sti
adc
mov
pop
das
loop
repnz
enter
mov
jno
stos
les
nop
jmp
fmull
fisttpll
xchg
add
jmp
sub
push
sub
inc
adc
ja
int3
loopne
sbb
inc
add
jge
add
cli
mov
push
adc
repnz
cmp
shll
inc
push
jmp
sub
inc
test
decl
dec
shlb
daa
xor
xchg
fcompl
call
mov
mov
int
mov
push
pop
test
stos
adc
xor
mov
push
es
lea
adc
xchg
mov
addb
mov
add
add
pop
xor
or
lcall
add
mov
sub
adc
iret
mov
roll
cwtl
xor
enter
adc
sub
loope
lock
stos
or
add
jmp
pop
inc
jge
nop
mov
xchg
and
pop
jbe
cmp
xor
or
inc
ficoms
ljmp
push
mov
mov
add
cwtl
xorl
jg
push
xor
add
and
mov
stc
or
imul
jbe
cli
rcl
mov
xchg
dec
push
jns
movsb
std
dec
mov
into
loopne
xor
out
jecxz
in
mov
lock
ja
or
or
mov
lret
push
call
inc
and
pop
data16
je
cmp
sbb
mov
jb
icebp
testl
mov
adc
mov
rolb
add
cltd
push
pop
divl
cmp
pop
jl
push
rorb
insb
mov
int3
pop
push
mov
or
add
divb
mov
sbb
push
push
call
xor
daa
jg
sti
xor
sbb
add
push
lea
mov
call
addb
nop
aam
push
or
and
cmp
ret
jns
loope
insb
xor
sbb
adc
add
rorb
les
xchg
or
mov
dec
shll
sbb
mov
mov
in
movsb
xorps
ds
test
jo
or
leave
rorl
sbb
adc
shlb
shrl
sbb
rcrb
sub
sub
add
lds
or
pusha
adc
cmp
movsb
loope
dec
aad
sbb
sub
sbb
adc
push
push
push
mov
orb
adc
pusha
mov
mov
orl
add
lock
iret
push
or
jbe
sub
mov
lods
stos
nop
add
add
jae
test
out
push
ss
jnp
inc
sbb
in
mov
outsl
add
push
mov
push
call
add
mov
mov
inc
add
mov
xchg
mov
lods
or
mov
inc
sbb
lret
xor
sub
je
cmp
push
bound
sub
call
xchg
addl
add
add
movb
add
add
add
call
xor
mov
enter
inc
or
movl
cld
and
call
jmp
adc
jne
rorb
lret
push
decl
adc
int
pusha
stos
shl
sti
cwtl
out
in
add
rol
push
xorl
mov
or
add
in
cmpsl
lods
push
xor
scas
leave
jo
test
repz
addr16
sbbb
ret
je
pushl
cmp
push
add
and
sub
mov
clc
lods
jbe
push
fnstsw
lret
bound
push
hlt
in
data16
cwtl
paddsb
adc
mov
mov
aas
and
sti
push
fucomip
or
jmp
jne
cwtl
in
add
pop
dec
stc
adc
jmp
jbe
adc
pop
pop
pop
dec
adc
pop
or
add
orb
jmp
and
cltd
sub
repz
adc
push
fisttpl
add
je
xor
sub
int
push
jmp
push
or
enter
dec
inc
or
push
int3
jle
push
in
inc
mov
cmp
sub
sub
push
fidivl
enter
arpl
push
cmp
mov
cmpsl
scas
or
rclb
les
add
mov
pop
pop
rclb
push
roll
mov
add
jbe
pop
push
loope
cmp
sbb
adc
adc
std
sti
ljmp
inc
mov
je
fdivs
sub
dec
or
shll
add
movsl
jo
cmpl
into
sub
push
push
movsb
xlat
adc
sbb
stos
and
or
mov
cmp
ret
and
push
pop
push
std
adc
push
lcall
push
push
sbb
mov
or
xlat
ret
mov
adc
enter
mov
pop
nop
add
push
mov
push
hlt
push
xor
or
push
xchg
jo
lea
push
addr16
in
fs
jp
je
imul
inc
push
adc
push
adc
mov
pop
sub
nop
cli
cmp
jne
stc
jmp
mov
adc
add
xor
mov
test
pushf
mov
movlps
jbe
sub
push
lret
jne
mov
inc
or
pop
rolb
mov
push
je
add
push
cs
mov
adc
add
push
push
call
sbb
mov
and
add
lds
jbe
jmp
fsub
sti
sbb
xor
mov
into
lcall
pop
imul
mov
in
and
inc
sarb
mov
movsb
daa
push
push
adc
rcrb
testb
cmp
iret
cmc
addb
sarl
jg
shr
rorb
inc
jp
loop
sbb
inc
sbb
pop
andl
add
lea
addr16
xor
mov
stos
inc
movsl
sbb
scas
inc
imul
std
xor
icebp
mov
enter
sbb
cmp
loop
jmp
mov
cld
inc
rorb
push
rcl
cmp
mov
add
daa
hlt
iret
sub
jmp
push
lea
mov
leave
inc
jae
adc
add
call
sbb
in
jmp
adc
and
mov
push
or
mov
mov
enter
jb
imul
arpl
addb
je,pt
pop
outsl
arpl
push
inc
insb
cmp
dec
popa
outsb
fs
mov
push
sbb
inc
sahf
je
test
xor
adcb
jg
stc
jmp
inc
cld
arpl
shll
stos
push
or
adc
in
mov
loope
and
fadds
add
je
and
jl
sub
mov
xor
movsb
mov
call
jae
xor
call
jae
xor
call
jae
mov
inc
mov
call
adc
jae
jne
stos
jmp
call
sub
jne
call
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
lods
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
sub
mov
popa
ret
add
add
add
add
pop
or
add
faddl
add
rolb
add
rolb
add
add
adc
rolb
add
rolb
add
lea
mov
mov
mov
movb
add
sub
mov
xor
ret
mov
popl
add
push
push
push
push
push
push
lea
mov
push
mov
push
push
pushl
push
mov
add
mov
call
pop
mov
push
push
mov
mov
add
mov
mov
mov
add
mov
mov
add
mov
add
lea
push
push
push
call
pop
pop
add
mov
push
mov
mov
add
sub
mov
mov
mov
call
mov
mov
mov
pop
jmp
add
push
push
push
call
mov
pop
pop
pop
pop
pop
pop
jmp
