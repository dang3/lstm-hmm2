xchg
pop
add
mov
add
add
and
add
in
sub
add
movsl
in
incl
push
push
push
pop
xor
lea
mov
gs
stos
stos
stos
jge
stos
fiadds
jns
call
and
add
jb
mov
test
and
call
lods
daa
add
or
fildl
jle
add
jo
adc
lea
push
pop
mov
lea
out
push
mov
pop
push
je
mov
cmp
push
dec
in
les
inc
inc
inc
fs
enter
loop
roll
xor
push
push
mov
addr16
jg
mov
push
insl
ret
or
add
pop
leave
ret
sub
push
push
or
call
cld
popa
shrl
cmp
push
xchg
fs
xchg
loope
jne
jae
cs
insb
add
xor
repnz
mov
call
repz
pop
shlb
nop
rolb
sarl
adc
ret
les
xchg
loope
gs
je
dec
enter
jo
scas
adc
lret
gs
inc
int
push
xchg
loope
arpl
outsl
shlb
fistpll
daa
sbb
jb
jae
test
xor
pop
cmp
pop
mov
jns
sbb
movsb
movsb
movsl
cmpsb
out
sahf
out
test
stos
stos
sahf
out
sahf
lods
lods
scas
scas
mov
sahf
out
mov
mov
mov
push
outsl
in
mov
sahf
cmp
jp
gs
inc
jne
push
push
jmp
xlat
or
lea
push
cld
push
call
xlat
pop
add
clc
push
imul
push
mov
out
pop
or
sub
jbe
lea
pushl
data16
and
jo
add
push
sbbb
inc
add
cmp
jmp
mov
imul
add
mov
add
fsubs
cwtl
push
gs
addr16
mov
pop
sbb
in
cmc
in
aaa
push
movl
dec
dec
cmp
aad
push
jne
hlt
cmp
repz
xor
out
repz
cmc
negb
add
jb
loope
cmp
imul
push
out
cs
xchg
outsb
call
ja
daa
loope
je
lea
xor
push
mov
lds
sbb
cmc
jae
cmp
jmp
push
push
mov
lret
mov
push
mov
loope
dec
roll
pop
sub
sbb
sbb
lods
adc
push
xchg
cmp
sbb
mov
fsub
cmp
add
cmp
jno
mov
sub
sub
cmp
sarb
js
cmpb
ljmp
xchg
test
jo
push
fisubrl
mov
loopne
adc
int3
je
mov
mov
mov
push
je
adc
push
jno
and
filds
test
aam
xchg
adc
aam
aad
jo
cmp
imul
push
xchg
loope
jae
fsubl
out
mov
pop
mov
mov
loop
jno
subb
test
cmp
je
repz
ja
mov
cmp
je
bound
push
jp
jnp
pop
pushf
fstpt
jle
insb
lcall
ret
loope
xorl
dec
jo
sbb
test
dec
xchg
mov
xchg
xchg
cmp
adc
inc
inc
mov
mov
push
xchg
loope
jbe
gs
dec
xchg
insl
loope
cmp
popa
xchg
addr16
gs
push
lcall
inc
pushf
imul
iret
mov
lds
enter
lret
cmp
lret
push
int3
je
popa
into
jb
je
imul
jo
sbb
pop
mov
mov
inc
out
jp
movsl
imul
loop
mov
jne
fs
and
xor
lea
loop
in
push
inc
jmp
test
jae
mov
push
loop
mov
rcrb
popf
hlt
imul
cmp
mov
jns
push
popf
addr16
gs
das
popf
inc
out
pusha
push
jo
mov
pop
fs
push
add
and
cmp
push
test
or
jle
dec
mov
pop
push
sub
fidivl
inc
mov
jo
in
cs
nop
xor
inc
pop
daa
mov
fs
ja
dec
inc
sub
lea
add
hlt
js
jl
lods
pushf
push
out
shl
push
repz
ret
aam
je
mov
shlb
add
push
or
repz
paddusb
add
pop
pusha
push
cltd
dec
and
enter
sub
adc
ret
pop
js
mov
fcoms
cmp
jno
inc
or
pop
push
imul
sahf
out
jo
outsl
sbb
popa
imulb
movsb
mov
adc
loope
frstor
je
inc
loopne
jo
sbb
loope
loop
jecxz
in
in
sbb
loope
jae
call
aam
sub
outsl
leave
add
push
rclb
or
imul
push
xlat
or
negb
shlb
ret
pop
jl
xchg
les
repz
repz
int3
iret
repz
int
iret
rcl
cmp
repz
rcl
aad
xlat
imul
pop
fdivs
movzbl
dec
push
cwtl
xchg
add
jle
xchg
xchg
xchg
jmp
cmp
jne
dec
arpl
mov
pop
cmp
push
xor
in
inc
xchg
xchg
popf
xchg
push
push
push
sbbl
sub
push
ret
push
push
mov
je
cmp
loop
sbb
xor
add
pop
out
popf
leave
push
dec
out
jno
add
push
push
push
in
mov
dec
das
sbb
xchg
cmp
mov
push
icebp
cmp
mov
mov
decl
enter
scas
jmp
in
jnp
sbb
in
iret
mov
add
clc
or
mov
mov
or
jecxz
jg
mov
push
xchg
inc
fisubs
fists
loope
shl
mov
loopne
test
and
jo
pop
rol
roll
xchg
loope
test
rol
lds
repnz
jl
adc
rolb
dec
xchg
xchg
jae
sbb
sbb
xor
testb
or
jo
clc
xor
mov
sbb
in
dec
aam
pop
aam
dec
loope
cmp
xchg
icebp
xlat
add
popa
rcr
dec
cmp
in
sbbb
push
int3
in
pop
int3
int
add
cmp
repz
mov
push
sbb
and
lret
pop
data16
out
dec
pop
dec
test
dec
dec
push
push
cmp
repz
roll
inc
fnstcw
rolb
lret
and
mov
lret
negb
inc
lcall
add
or
aam
lret
and
push
pop
mov
and
ds
int3
add
mov
and
loopne
mov
push
daa
mov
jo
xchg
es
cmp
jbe
mov
mov
sbb
pop
jge
and
ds
push
subl
lahf
xor
lret
adc
pop
ret
pusha
aam
inc
dec
push
jecxz
add
dec
add
push
andl
leave
xor
and
jo
push
xchg
adc
xchg
cwtl
xor
stos
inc
es
push
and
dec
lret
mov
add
movl
add
sbb
push
andb
mov
push
cmp
movsl
outsl
sahf
out
jns
cmp
sahf
out
insb
outsl
arpl
jne
rcrb
test
adc
xchg
inc
cwtl
inc
insl
xchg
mov
pop
mov
dec
mov
adc
inc
mov
pop
test
flds
add
push
fisubl
mov
ret
mov
inc
mov
cmp
shrb
sbb
shll
les
arpl
pop
test
gs
jae
aaa
xchg
adc
fs
jge
mov
push
hlt
dec
cmc
jo
mov
loope
imull
push
stc
cli
outsl
sbb
cmp
arpl
gs
jae
jo
xchg
xchg
loopne
loope
push
xchg
loope
jb
insl
in
in
xor
sbb
popa
out
call
sahf
cmpsl
ljmp
push
lock
shlb
aad
cwtl
pop
pushf
inc
in
sahf
inc
gs
pop
sbb
jb
sbb
xlat
aam
aad
push
xlat
mov
xchg
or
arpl
jbe
adc
fstl
loope
shll
test
popa
mov
cld
call
add
or
pushf
dec
inc
inc
pop
mov
push
push
mov
cwtl
clc
push
pop
jb
cltd
fbstp
mov
mov
rclb
dec
jl
imul
jl
jno
addb
mov
push
push
push
xor
jne
cmp
ja
push
test
roll
cld
sahf
enter
xchg
pushf
enter
and
pop
rclb
pushf
ds
dec
sbb
or
ret
pusha
mov
cmp
je
movl
adc
movsb
adcb
or
ficoms
aam
xchg
cmp
mov
sub
add
push
or
dec
sbb
or
jl
mov
jle
call
sbb
push
dec
enter
sbb
adc
iret
repz
cmp
sbb
mov
mov
icebp
cmp
imul
ds
mov
out
fs
and
es
lret
cmp
iret
es
rcl
aas
iret
repz
xor
aas
es
cmp
loopne
loope
loop
jecxz
in
sbb
xchg
in
out
out
call
cmp
es
cmp
out
and
sbb
repnz
cmp
testb
fs
aaa
stc
cmp
roll
sti
jae
fldt
pop
and
dec
cltd
iret
cld
shlb
test
pop
cld
mov
pop
adc
adc
jb
sti
fstps
and
loope
or
xor
or
in
cli
cmp
jns
negl
inc
xchg
xchg
and
and
xor
lods
or
icebp
icebp
jmp
je
in
sub
mov
add
movsl
push
or
fcmovnu
in
mov
xchg
jg
push
decl
jmp
mov
xor
shrb
cmp
outsb
sub
sbb
lcall
leave
sti
enter
pop
fs
pushf
notl
inc
xchg
fwait
out
mov
inc
lret
jne
xchg
lods
in
pushf
test
movl
sbb
cld
hlt
in
jecxz
scas
push
hlt
hlt
enter
das
sar
jmp
notl
loopew
filds
jmp
pop
cmc
mov
lea
cs
push
mov
pop
in
mov
push
sbb
push
push
dec
shll
hlt
jae,pn
inc
add
movsb
and
add
iret
dec
inc
in
jns
sbb
sbb
add
jecxz
mov
xor
and
rclb
sbb
fcoml
and
jne
je
push
mov
pop
inc
das
imul
mulb
pop
jecxz
push
addb
sbb
sbb
enter
lock
dec
mov
pop
subl
adc
add
mov
pop
jmp
je
ret
sub
sub
sub
fcomps
enter
cltd
push
mov
cmp
sbb
cmp
adcl
jecxz
xchg
add
inc
clc
pushf
out
and
inc
in
dec
cmp
orb
push
adcl
push
and
cmp
and
pop
test
in
aas
cmp
xchg
jne
push
mov
popf
cmp
adc
repnz
bound
rorl
and
mov
lret
xchg
test
popf
popf
insl
insb
pusha
push
negb
lods
push
ror
cmpsb
insb
or
cmp
enter
ss
or
push
icebp
dec
inc
push
lea
fimull
clc
insb
and
inc
push
icebp
icebp
icebp
icebp
arpl
out
sahf
out
cmp
out
sahf
jo
outsl
arpl
cmp
movl
mov
arpl
scas
je
and
and
mov
in
in
lods
test
dec
mov
mov
rcll
iret
repz
std
mov
loop
add
mov
lea
outsl
xor
mov
pop
mov
nop
mov
lds
xchg
loope
in
xchg
cmp
ret
xchg
arpl
je
imul
push
lcall
sbb
xchg
sahf
outsl
lahf
data16
loop
cmp
and
cmpsb
inc
aam
es
push
push
xchg
mov
inc
jne
jb
iret
repz
je
jb
arpl
hlt
cmp
gs
sbb
std
enter
iret
sbbl
sbb
test
jns
jmp
push
repz
out
fdivrl
test
js
aam
aam
popa
adcb
in
loope
sub
fsubs
push
fidivl
xchg
test
fldt
arpl
out
push
jae
sarl
xor
rolb
sbbb
mov
xchg
jecxz
cmp
jne
jb
jb
les
pop
sbb
lds
enter
xchg
leave
arpl
gs
jae
push
fadd
sbb
filds
cld
pop
pop
pop
mov
or
mov
clc
add
lea
mov
xor
sbb
aam
movl
pop
lods
test
sbb
xchg
aaa
pop
inc
sub
add
xchg
or
mov
and
fdivrs
mov
sbb
pop
hlt
adc
ja
jno
sbb
push
adc
imulb
incl
mov
ds
push
das
jge
and
add
or
scas
push
das
mov
xorb
mov
mov
mov
push
mov
jo
dec
insb
sbb
sarl
add
test
je
sbb
movsb
imul
push
cmp
cmp
mov
sbb
mov
out
or
and
test
aam
popa
shll
fsubs
xor
mov
push
cwtl
push
mov
mov
and
test
bnd
push
out
push
cmp
dec
cmp
pop
sbb
cmp
jns
xchg
sbb
pushf
aas
cmp
pop
cmc
sub
inc
lds
adc
in
cmp
push
mov
cmp
jecxz
dec
push
dec
outsb
dec
fs
lods
and
dec
daa
loope
cmp
jo
insb
sarb
addr16
cs
arpl
cmp
ret
int
into
push
iret
popa
rolb
shrl
je
inc
aam
rcrl
sahf
out
push
insl
jae
popa
cmp
jmp
xchg
loope
inc
mov
cmp
movsl
xor
cmp
cmp
push
and
dec
and
cmp
inc
and
jb
daa
sub
arpl
sub
jno
out
sub
repz
sub
jecxz
xor
pushf
jns
xor
xor
fadds
in
inc
push
xchg
loope
inc
out
inc
out
push
lock
ret
repnz
arpl
bound
jge
or
cmpsl
or
jns
push
or
jbe
repz
jmp
jmp
aaa
into
jecxz
xor
xor
pop
xor
adc
mov
loop
sbb
mov
xchg
les
push
cmp
jecxz
arpl
jae
cmp
inc
inc
shll
mov
lea
mov
mov
push
push
jae
jns
adc
nop
xchg
xchg
out
sahf
out
xchg
xchg
xchg
xchg
dec
jno
sahf
cwtl
cltd
dec
lcall
pushf
popf
inc
cmp
cmp
repz
xor
in
jecxz
call
push
xchg
popa
jno
loop
bound
sub
fs
cmp
cltd
addr16
imul
js
cmp
xchg
mov
js
xor
jae
cmp
fistps
loope
fs
loope
loop
dec
and
hlt
sbb
jne
rorb
push
inc
outsl
ret
outsb
les
loope
dec
vmovdqu
arpl
gs
sbb
jmp
jo
jbe
arpl
icebp
xor
imul
jne
insb
push
jl
div
jne
jns
pop
inc
jl
js
repz
hlt
dec
dec
daa
ds
push
dec
dec
adc
push
mov
push
lret
rclb
sbb
push
push
mov
lea
loop
pop
mov
pop
pop
pop
xor
mov
icebp
lock
arpl
cmp
je
adc
stc
andl
daa
test
push
je
sub
push
pop
dec
inc
xchg
sub
popa
inc
dec
pop
push
dec
mov
push
push
hlt
int3
pop
push
clc
sahf
push
sbb
test
adc
push
adc
int3
je
addr16
cmp
js
jmp
aaa
rolb
scas
mov
xor
add
push
push
and
adc
test
jmp
xlat
dec
loope
push
push
xchg
jo
lea
jmp
sbb
or
js
rcl
push
push
add
ss
push
mov
mov
mov
mov
mov
push
adcl
xchg
cmp
and
sub
sbb
add
pop
call
hlt
jmp
xchg
cli
sub
xchg
enter
inc
mov
pushl
in
push
cmp
xor
jne
sti
adc
dec
pusha
push
sti
sub
das
pop
dec
inc
xorb
cmp
es
inc
out
and
imul
inc
scas
xchg
add
sbb
sbb
xchg
test
mov
sbb
mov
enter
jno
xchg
hlt
test
out
jmp
cmpl
fadds
mov
add
shlb
add
movsb
push
arpl
mov
and
mov
cmp
mov
loop
movsb
shl
xor
xchg
jnp
lret
mov
and
push
clc
sti
add
sub
pop
je
cmp
jb
dec
dec
jb
movl
jne
dec
lret
int3
jg
pop
jne
les
cmp
sub
movsl
or
push
mov
push
bound
int3
cmpb
inc
cmp
add
or
or
mov
lret
arpl
sub
out
xlat
aad
outsb
filds
clc
stc
jnp
adc
or
shlb
adc
roll
sbb
fsin
adc
dec
mov
xchg
rorb
or
bnd
mov
repz
shll
jae
inc
insb
cli
xor
jns
inc
outsl
repz
jecxz
addr16
jne
sbb
gs
rep
movsl
out
out
xchg
cld
mov
mov
mov
inc
pop
xchg
or
push
inc
leave
jmp
pop
adc
adc
les
fldl
jns
jl
mov
mov
lret
and
sbb
or
push
xchg
sub
jmp
sub
cmp
mov
pop
into
push
in
xchg
cmp
cs
lret
sbb
mov
and
or
ret
mov
data16
push
push
sbb
in
stc
jne
pop
adc
cmp
inc
dec
mov
mov
sub
dec
gs
dec
popf
popf
adc
sbb
sti
cmc
std
mov
std
mov
stos
mov
test
adc
in
push
fs
into
add
test
das
mov
pusha
insb
sub
push
sub
cmp
and
mov
adc
sbb
iret
iret
inc
xchg
scas
inc
stc
pop
or
repnz
idivl
sbb
xor
sub
sub
push
jle
dec
in
out
out
call
outsb
jmp
or
cltd
xchg
jno
jae
jns
xorl
or
mov
adc
shlb
push
mov
mov
dec
test
enter
mov
cwtl
pop
and
repnz
into
mov
lcall
clc
dec
push
fwait
push
push
std
and
outsb
iret
adc
add
sub
nop
xchg
and
dec
jl
and
call
sbb
repz
xor
or
mov
pushf
ret
pop
add
sahf
fmuls
jl
mov
jmp
pusha
push
push
daa
xor
cmp
repz
gs
je
rep
gs
add
je
cmp
jns
inc
insb
dec
insb
lcall
cmp
je
dec
jo
add
cmp
push
gs
sahf
std
int3
fsubr
iret
jecxz
es
in
mov
cmp
sahf
out
outsb
fs
jns
fbstp
gs
jp
out
inc
js
call
icebp
loop
fnsave
repz
arpl
clc
stc
cli
repnz
sti
cld
std
ljmp
leave
outsb
lret
enter
xor
fmuls
push
clc
daa
into
fldcw
push
jne
outsb
aam
arpl
mov
inc
imul
mov
jbe
xor
and
test
shrl
pop
pop
push
mov
jl
mov
clc
jb
inc
das
movl
enter
jecxz
mov
fcomp
in
jge
mov
mov
mov
push
fs
or
in
mov
push
andl
xlat
dec
andb
add
or
xor
popf
mov
sub
add
dec
mov
movsl
adc
out
adc
xchg
lea
mov
out
lds
por
stos
push
inc
push
mov
push
lahf
rorb
jp
mov
inc
out
mov
iret
idiv
insb
and
adc
je
jl
mov
push
in
inc
cmc
jle
jge
sub
add
lock
and
or
outsb
inc
sub
lahf
jnp
mov
insl
adc
fucom
push
ss
jae
lret
jge
xor
pop
push
in
or
and
or
add
roll
push
cmpl
xchg
jne
mov
mov
or
push
push
jae
xor
dec
and
inc
orl
add
sub
andb
test
and
or
in
sub
cmpsl
or
push
cltd
fwait
push
test
aas
popf
sub
sbb
inc
xchg
xchg
xchg
das
sub
fsub
hlt
inc
dec
hlt
pop
lahf
inc
push
push
mov
add
in
cmp
clc
stos
adc
sub
mov
js
jmp
pop
cmp
addb
sub
xorb
mov
dec
stc
inc
cli
inc
sti
jb
popa
cmc
and
loope
insl
gs
xchg
dec
movsl
outsl
cmpsb
jp
imul
stos
push
lods
dec
jo
sbb
lods
push
scas
imul
loope
ja
mov
nopl
jae
jns
xorl
mov
inc
rcrb
jb
lret
or
out
jmp
out
dec
popa
js
cmp
outsl
outsb
mov
pop
flds
jle
popa
insl
fidivs
sbb
mov
pop
mov
pop
nop
pop
push
xchg
loope
push
xchg
push
xchg
inc
xchg
jb
jo
sbb
popa
xchg
insl
xchg
gs
push
cltd
outsb
iret
arpl
pop
pop
add
cmp
xor
pop
push
dec
mov
lds
aas
mov
pop
mov
push
push
sbb
movsb
repz
cmp
inc
outsl
gs
repz
jb
jne
fs
fdiv
cmp
imul
jecxz
iret
mov
jl
and
addb
xor
xorb
ljmp
jo
sub
jmp
scas
push
mov
jge
rcrb
push
push
xchg
add
mov
aaa
mov
jmp
xor
movl
mov
out
and
jnp
out
je
lret
mov
mov
mov
jo
xchg
loope
outsl
mov
jne
cmp
ret
and
insl
add
lods
mov
out
mov
cmp
lock
sbb
int
jo
mov
or
mov
mov
inc
inc
jno
fs
push
repnz
repz
loope
xor
dec
cmc
dec
testb
dec
jp
sub
shll
push
jns
fdivl
imul
push
jo
sahf
out
outsl
arpl
fninit
jae
cmp
in
enter
push
enter
cli
cmp
cmp
daa
outsb
xorb
rclb
jb
outsl
sub
cmp
pop
dec
bound
xorl
adc
or
mov
sub
xor
inc
add
add
adc
and
mov
subl
cwtl
push
mov
jne
sbbb
mov
cmp
jl
inc
jg
and
and
mov
xor
sbb
xchg
or
inc
inc
jl
pop
mov
cmp
shlb
add
pop
pusha
xor
lea
push
inc
cmp
arpl
cmc
clc
std
push
lret
leave
xor
push
xchg
and
and
ljmp
mov
push
ds
test
sbb
outsl
push
push
mov
push
lds
sub
stos
push
out
pop
movsb
pop
cwtl
pop
nop
push
andb
cmp
or
aas
arpl
outsl
outsb
out
lods
scas
jo
jae
cmp
es
bound
iret
repz
jne
and
repz
bound
xchg
test
adc
mov
nop
sbb
adc
es
jnp
xchg
xlat
into
mov
push
or
iret
pop
testl
xor
jle
sahf
push
push
add
push
add
add
push
jnp
subl
sub
mov
icebp
adc
pop
fsubrs
pusha
pop
cld
cmp
ja
neg
jmp
inc
dec
push
cs
inc
inc
xor
loop
rcl
aam
punpckhbw
dec
cmp
lea
dec
aas
jle
sarl
push
inc
or
cmp
inc
xor
pusha
xor
pop
div
xor
inc
and
push
mov
lock
push
mov
les
fistpl
add
cmp
jl
enter
lea
mov
stos
sub
out
mov
sbb
call
or
lds
add
mov
popf
fwait
add
pushf
mov
out
sbb
mov
sub
xchg
or
hlt
div
xor
dec
mov
in
out
test
pop
xor
push
je
test
out
adc
add
dec
pusha
popf
or
repz
dec
movsl
pop
ret
addr16
add
cmp
dec
inc
adc
ret
lock
sbb
push
sub
je
xchg
dec
cmpsl
mov
mov
and
andl
jg
out
jns
push
jb
gs
nop
jp
orl
int3
push
imul
push
mov
sub
xchg
cli
or
dec
cmp
daa
pop
mov
mov
push
scas
movb
cmp
add
jmp
add
movb
nop
mov
lea
movb
mov
mov
xor
or
add
insl
enter
cmp
in
in
nop
push
mov
jmp
in
in
sub
dec
fld
or
jnp
xor
jno
mov
testb
mov
jecxz
add
mov
ret
sbb
push
imul
lea
cmp
push
mov
xor
or
mov
lcall
lods
inc
add
jge
add
xor
fldl
xor
xlat
hlt
out
pop
jecxz
or
mov
mov
sbb
dec
test
sub
enter
xchg
gs
sbb
mov
or
dec
push
inc
jne
movsb
lea
mov
cmp
or
xchg
add
test
and
mov
add
lods
push
push
push
sahf
out
cmpsb
arpl
add
in
outsl
outsb
cs
and
loope
or
pop
dec
pop
stos
add
inc
out
cld
mov
inc
popf
pop
jne
xchg
movsl
test
call
cmp
xor
jns
clc
pop
xchg
gs
cmp
repnz
enter
pop
and
pop
xor
loopne
fsubrp
mov
mov
push
add
sub
jno
adc
jne
jo
inc
add
mov
pop
or
nop
outsb
jbe
pop
lea
mov
push
enter
clc
or
mov
call
mov
jg
inc
mov
cmc
in
mov
sbb
pop
push
cld
xor
xchg
inc
mov
cmp
mov
adc
pop
adc
shlb
mov
jmp
pop
sbb
fsubl
adc
or
fs
push
popf
fs
sbb
adc
in
inc
jg
out
je
imul
xchg
jns
imul
pop
dec
jge
and
pop
inc
mov
pop
xor
clc
push
push
mov
sbb
push
rolb
daa
push
cld
add
or
je
fisubrl
stos
rol
inc
mov
push
or
pop
iret
xchg
insb
add
sbb
hlt
fsubr
std
adc
push
repz
daa
gs
je
push
aaa
and
jno
lahf
out
push
xchg
shlb
shll
aam
push
mov
cmp
push
jno
outsl
arpl
sbb
mov
jmp
xorl
lock
repnz
hlt
jae
cmp
repz
dec
gs
and
ljmp
inc
dec
mov
lock
lcall
rclb
dec
fwait
je
mov
adc
xor
add
dec
xchg
inc
rorl
arpl
pop
inc
sub
sbbl
mov
add
sub
add
xchg
add
ss
pop
imul
cmp
jbe
cmp
shll
imul
iret
cs
insb
in
pop
xor
fcompl
test
iret
mov
jmp
jne
bound
mov
xor
jne
fs
jns
push
imul
imul
sbb
push
shlb
ret
lret
inc
daa
xor
cmp
mov
jae
je
push
push
xchg
loope
outsl
mov
outsb
sub
push
daa
mov
loope
mov
stos
gs
adc
lods
push
sbb
adcl
mov
imul
mov
clc
roll
jge
jl
push
mov
in
cltd
aam
stos
dec
xchg
push
push
xchg
push
mov
and
mov
push
mov
mov
inc
mov
and
pop
mov
inc
cmp
dec
xor
neg
shlb
push
and
push
mov
push
les
or
nop
mov
loop
cmp
add
gs
or
push
push
push
add
popf
mov
ret
cmpw
jne
dec
xor
adc
cmpl
pusha
pop
inc
push
ret
nop
push
stc
mov
cmpsl
repz
cmp
shl
in
add
iret
je
add
divl
je
cmp
ja
mov
dec
mov
jae
add
ss
mov
mov
cmp
pusha
pop
xorb
out
cmp
jb
sbb
add
push
je
addl
or
dec
sbb
inc
add
add
mov
or
adcb
mov
jge
fxch
mov
jo
testb
jne
xchg
imul
and
clc
in
shll
adc
sbb
adc
pusha
push
adc
push
fmul
in
lcall
sahf
rclb
dec
jnp
adc
repz
jge
sub
flds
add
push
jg
nop
in
mov
adc
pop
xchg
or
or
ret
mov
mov
cmpsb
arpl
mov
and
cmp
sub
pop
cmp
arpl
fiaddl
ret
das
arpl
loop
adc
enter
adc
and
dec
inc
mov
sbb
inc
mov
add
or
inc
or
sub
cmp
or
pop
in
push
push
xor
lret
hlt
push
testb
clc
iret
repz
push
cs
insb
dec
jnp
bound
aad
in
pop
test
gs
enter
dec
fucom
jl
mov
out
es
outsb
je
dec
hlt
mov
cmc
mov
jns
dec
lret
and
jae
rcl
dec
xchg
icebp
mov
sahf
push
push
jne
repz
jns
outsb
push
aas
jg
loop
popf
mov
scas
cmp
pop
jge
out
push
jb
gs
icebp
mov
inc
xchg
fldcw
movsb
cwtl
add
cmpsl
and
iret
repz
je
jb
gs
cmpsl
cmp
outsl
sbb
loope
jae
movsl
dec
cmpsb
popa
xor
fs
dec
push
and
lea
and
cmp
aam
adc
mov
lods
or
daa
pop
enter
inc
mov
movsb
inc
popa
xchg
mov
adc
test
dec
std
adcb
aaa
fsubr
sbb
and
dec
push
and
in
daa
in
cld
and
or
or
in
adc
enter
sbb
in
inc
mov
fs
mov
iret
mov
int
push
add
and
leave
mov
dec
es
dec
lret
adc
incb
je
push
shrl
fsubrl
lock
cwtl
into
xchg
xchg
enter
nop
in
pop
or
outsl
xor
loope
hlt
push
xor
leave
push
je
pusha
popa
leave
sub
or
inc
adc
lock
call
lock
pop
xchg
clc
sbb
lret
pop
add
or
mov
jns
sub
or
add
pop
rcl
or
adc
mov
mov
test
jae
or
mov
inc
inc
jmp
andb
repnz
std
inc
loop
mov
sbb
je
test
shll
push
pop
mov
rolb
jp
jno
inc
cmp
pop
xchg
orl
mov
fmull
mov
sub
sub
jmp
addl
or
jnp
into
inc
push
or
sbb
clc
cmp
dec
mov
lcall
mov
mov
sub
mov
cmp
or
inc
je
dec
xchg
cmp
jmp
adc
mov
mov
lea
mov
add
cmp
inc
jmp
push
mov
mov
inc
inc
test
insb
push
adc
pop
sub
mov
add
inc
call
hlt
shll
gs
ret
loope
enter
imul
xchg
or
call
repz
jae
inc
imul
push
or
xchg
fiaddl
int3
lods
push
jae
pop
test
adc
pusha
mov
xlat
inc
lods
movsb
jne
pop
or
or
pop
sub
loope
pop
adc
inc
push
pop
jmp
test
icebp
push
jns
cmp
hlt
insl
cmc
inc
imulb
jg
loope
jb
sarl
xchg
sbb
xor
scas
rcl
adc
xor
cmp
mov
nop
mov
lcall
lret
add
cmp
mov
mov
push
sahf
dec
idivl
jae
mov
xor
add
add
cmp
jae
jo
sbbb
aam
add
add
cmp
jbe
mov
cld
sub
mov
adc
sub
push
int3
xor
addl
shrb
sbb
jmp
mov
sub
or
lea
movzwl
sbb
test
nop
orl
fdivs
cmp
imul
sbb
es
cmp
fwait
push
addl
les
cmc
sub
xor
sub
mov
push
xor
mov
pop
insb
icebp
mov
lods
jbe
push
mov
sbb
cmpsb
cld
lods
cmp
cmp
adc
mov
xor
mov
inc
dec
pop
sbb
sahf
sub
loope
or
mov
mov
pop
push
enter
sub
vpsrlq
add
sbb
pop
dec
xlat
jl
push
mov
push
pop
push
pusha
js
adc
cmp
jle
inc
ret
mov
and
pop
add
sti
lock
rcll
adc
sub
adc
aam
popa
cmp
pusha
mov
jne
xchg
mov
dec
inc
daa
lea
push
cltd
test
icebp
mov
movsb
and
clc
dec
ret
cmpsl
aam
mov
xchg
sbb
push
jbe
push
fwait
mov
jbe
imul
dec
and
adc
dec
cmpsb
jo
dec
ds
or
imul
add
pop
imul
push
add
jp
push
into
clc
push
and
xchg
out
clc
movsl
pop
fstl
cmp
push
pop
sbb
push
mov
aaa
jo
adc
call
mov
dec
in
lods
fucomi
enter
lock
or
mov
sub
imull
js
or
daa
ret
sbb
push
and
xchg
shlb
gs
jecxz
lock
mov
sub
mov
andb
roll
mov
pop
es
cs
out
sub
push
pop
xchg
cltd
in
adc
or
in
xor
stc
mov
xor
mov
cmp
adc
mov
das
pusha
lods
int3
mov
mov
mov
and
stc
xchg
loopne
and
fnstsw
pop
dec
push
inc
test
repz
push
jns
xbegin
dec
sahf
pop
inc
addr16
sbb
pop
ds
mov
and
push
into
jo
sbb
jae
data16
pop
mov
dec
jae,pn
ja
push
jmp
inc
mov
add
testb
fs
repnz
or
fsubrl
add
call
pop
add
mov
jns
lret
inc
cmp
mov
push
aas
repz
jl
mov
push
mov
jecxz
mov
mov
mov
mov
lret
ja
inc
imul
mov
cmpsl
push
repz
cli
xor
cmp
mov
xor
cltd
cwtl
jge
fcom
mov
mov
out
ljmp
sahf
out
sahf
inc
insb
insb
inc
popa
iret
inc
jns
push
mov
sbb
mov
pusha
inc
sub
repnz
in
stos
gs
cmpsb
jbe
cwtl
lods
add
stos
fwait
inc
mov
pushf
cs
movsl
add
mov
pop
sbb
cwtl
add
retw
pushf
inc
cmp
jl
xchg
in
sbb
mov
cwtl
ret
test
imul
out
lret
sahf
pushf
add
mov
cmp
mov
lea
sti
jb
push
sub
push
daa
sbb
push
cld
push
jns
fidivs
add
mov
jo
sbb
rol
push
xchg
push
push
inc
add
cmp
out
sahf
ret
jns
imul
rcrl
dec
imul
ficoml
xchg
out
js
cwtl
out
loop
fistpll
aam
sbb
xchg
repz
lods
dec
add
sbb
test
mov
fmull
enter
test
jmp
inc
insb
je
ret
icebp
mov
adc
scas
shll
pop
lods
imul
shl
int3
cmp
xchg
hlt
sahf
js
sub
cltd
xor
pop
mov
int3
jnp
cli
dec
popf
outsl
add
pop
xor
push
mov
pop
aaa
push
repz
sahf
lods
xor
mov
mov
or
imul
andb
call
iret
sub
sub
pushf
push
nop
jp
and
xor
mov
pop
push
mov
push
xchg
ret
push
test
ja
or
js
out
jmp
cmp
and
dec
aad
sub
xor
loope
scas
push
mov
aaa
push
cmp
cmp
push
push
adc
jb
out
aad
je
dec
or
add
jae
push
hlt
stos
ja
mov
jne
xor
out
cmp
or
call
ja
lret
icebp
lcall
clc
jo
push
je
and
aam
xor
xchg
jno
adc
out
jne
jne
jo
sbb
jne
jne
jne
jne
jne
push
xchg
pop
jne
jne
jne
jbe
loope
cmp
bound
jbe
jne
jbe
ret
loope
push
ja
je
je
cmp
inc
jae
je
je
je
je
xchg
loope
je
je
je
je
jo
sbb
je
je
je
jae
jae
push
xchg
call
jae
jae
jecxz
cmp
lcall
push
mov
jae
jae
jae
jae
arpl
loope
jae
ja
jbe
push
xchg
stos
jbe
jbe
jbe
cmp
out
loop
add
sbb
mov
shlb
add
insl
jae
mov
jae
jb
outsb
je
add
je
insb
outsb
add
aas
cmp
ret
inc
pop
inc
pop
push
inc
pop
fnstenv
add
add
jae
insl
pcmpgtw
sahf
xor
pop
cltd
add
arpl
movsb
xor
je
insb
insb
leave
cmpsb
loopne
imul
or
outsl
jo
pusha
loop
dec
bound
xor
popa
add
lret
gs
gs
pop
cwtl
push
call
fs
rcll
jo
add
arpl
push
sub
mov
sbb
cmp
cmpsb
add
nop
adc
or
imul
lds
test
push
mov
and
es
in
rorl
ret
sub
lods
lea
imul
outsl
outsl
ja
movsl
sbb
fsts
add
ficoml
inc
push
push
cs
dec
xchg
add
jns
adc
inc
fs
push
add
xorl
push
mov
imul
inc
inc
dec
bound
arpl
inc
inc
insb
jmp
add
add
popf
sub
inc
in
movsb
mov
outsl
jp
add
sub
insb
lret
pop
sub
imul
imul
test
inc
mov
shlb
xor
hlt
and
jb
fwait
add
outsl
popa
fs
outsl
pusha
add
adc
jp
gs
sub
arpl
mov
fwait
imul
jbe
loop
mov
xchg
add
stc
daa
stos
xor
add
add
lock
cmpl
ljmp
daa
rorb
fdivs
insb
bound
subb
push
jle
push
imul
outsl
dec
jne
add
add
in
loop
pop
mov
mov
aaa
addr16
push
outsl
imul
dec
cmc
addr16
fs
add
inc
or
mov
lds
iret
lcall
cmp
mov
insb
xchg
fstpl
dec
inc
push
dec
inc
dec
pop
lods
lahf
dec
jns
mov
jno
dec
mov
in
cmp
cwtl
aaa
mov
je
rorl
jecxz
pushf
mov
push
imul
sahf
or
push
adc
lret
sbb
dec
mov
mov
inc
js
shll
add
push
outsb
push
add
int3
add
pushf
push
push
dec
inc
dec
int
sbb
lret
xchg
sub
fwait
jne
mov
imul
ja
ja
leave
aam
jecxz
xor
xor
in
cmp
xor
push
movsl
and
inc
inc
inc
push
dec
inc
mov
xor
jnp
fildll
inc
jno
inc
fs
dec
sti
sub
cmp
scas
xchg
outsb
outsb
addr16
popa
inc
jne
push
imul
cmp
mov
out
aaa
inc
cs
addr16
and
jno
xchg
das
cld
cmpsb
fs
dec
add
dec
dec
inc
or
popf
cmp
inc
cld
out
adc
cs
push
ljmp
jne
pop
add
xor
les
sub
sbb
mov
dec
mov
push
inc
xlat
aam
ja
mov
cwtl
je
and
divb
ret
int3
test
xor
lds
or
adc
xchg
push
add
xor
sub
addl
sub
fs
add
add
loopne
mov
pop
popf
sbb
xchg
cmpsl
pop
adc
lods
pop
or
popa
mov
add
loopne
jns
xchg
add
leave
repz
dec
xor
inc
add
or
mov
es
or
jns
jmp
or
adc
pop
daa
mov
push
sbb
xchg
bound
rcl
test
xor
pop
jp
ret
das
popl
adc
aaa
xchg
in
or
push
mov
mov
push
es
add
add
sub
dec
push
sub
jecxz
mov
sbb
repz
jae
daa
push
push
fwait
or
mov
dec
push
lret
popa
sub
mov
add
mov
in
push
cmp
insl
imul
and
ret
inc
add
shll
or
mov
stc
xor
push
cmp
dec
mov
or
and
or
add
dec
fwait
inc
xor
pop
sbb
dec
addr16
xor
pop
out
nop
sbb
sub
rcll
adc
adc
lret
xor
aaa
adc
jmp
fistl
and
cmp
push
pop
dec
xor
or
xlat
movsb
jle
push
or
iret
sbb
shrb
push
add
leave
insb
leave
movsb
xorb
push
jns
xchg
jmp
addr16
mov
stos
xor
repnz
cmp
imul
sub
xchg
decl
dec
inc
lods
int3
sub
mov
lret
push
cmp
dec
sti
out
xor
loope
and
test
cmp
mov
repz
push
lret
test
adc
pop
push
sub
in
sbb
jbe
fsubl
ret
sub
shll
cmp
add
jle
mov
arpl
inc
gs
sub
jae
outsb
repnz
fmulp
xchg
pop
sub
cmp
pop
add
or
aaa
pushf
cmpsb
xor
int
das
mov
ret
insl
push
in
xor
add
movsb
outsl
icebp
adc
xor
add
scas
mov
dec
add
add
pushf
ja
add
add
add
add
add
add
add
add
xor
add
xor
add
inc
mov
add
add
and
add
dec
add
inc
popa
outsb
arpl
inc
insb
insb
add
fs
insb
insb
add
add
add
sub
add
inc
mov
add
add
add
add
insb
mov
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
decl
add
pusha
mov
add
add
add
add
jmp
add
je
add
jl
add
add
add
js
add
jl
add
test
add
lcall
add
mov
add
pushl
add
imul
gs
xor
cs
insb
add
add
add
dec
outsl
popa
fs
imul
add
add
inc
gs
jb
arpl
fs
jae
add
add
add
push
imul
insb
insb
outsl
arpl
add
add
jb
jne
insb
inc
jb
add
add
push
inc
push
push
cs
insb
add
add
pop
jae
jb
insl
jo
add
imul
imul
add
add
add
je
fs
jo
gs
dec
outsb
outsw
add
add
dec
xor
cs
insb
add
add
add
je
insb
je
add
add
inc
push
xor
cs
insb
add
add
inc
gs
imul
arpl
mov
push
pushl
mov
xor
mov
push
inc
inc
outsl
insl
jo
arpl
mov
add
sbb
pusha
mov
mov
cld
lods
xor
test
je
loopne
sbb
xor
lea
movsb
mov
call
cmp
jae
push
or
xor
inc
xor
mov
lea
mov
mov
call
sub
lea
add
mov
call
pop
sub
jae
and
call
mov
call
jne
pop
cmpsb
sub
inc
mov
sub
add
fcos
cmp
sub
add
movsb
pop
inc
inc
jmp
add
jne
xchg
lods
xchg
inc
ret
add
flds
in
call
leave
call
out
jb
ret
sub
sbb
ret
add
sub
sub
adc
sub
mov
js
pusha
mov
fdivl
outsl
les
xchg
jo
cwtl
jno
add
and
jae
loopne
loope
movsb
imul
add
sbb
pop
outsl
hlt
dec
mov
fcmovnb
mov
imul
pop
jo
bound
cmpsb
stos
xor
pop
jl
and
pop
add
xor
test
push
push
push
call
pop
sub
inc
add
add
inc
cld
add
cld
mov
mov
add
mov
mov
add
lea
dec
add
push
nop
cmpl
je
mov
test
je
mov
or
add
repz
das
add
add
add
push
call
imul
sub
inc
push
push
call
out
aaa
ret
bound
testb
jae
mov
jnp
negl
mov
push
or
ss
xor
leave
je
js
cmp
push
jnp
sub
stos
sbb
loope
cmp
sub
test
loope
xlat
add
jg
lea
jp
aas
pop
dec
or
add
cmp
ja
rcrb
push
mov
arpl
std
dec
push
jmp
and
call
fidivs
or
dec
inc
mov
add
xor
add
push
jmp
add
in
nop
cmp
pop
lretw
push
call
cltd
and
sub
cmc
and
and
pop
pop
ret
push
mov
add
mov
lret
push
pop
sub
inc
add
mov
add
push
call
mov
add
jle
sbb
inc
roll
sti
xor
add
je
push
mov
add
add
adc
jne
xor
jmp
add
add
push
jne
leave
icebp
sub
jo
clc
mov
incb
inc
pop
or
ret
je
mov
add
xor
push
add
mov
sub
mov
lods
mov
add
insl
add
mov
sub
or
add
movl
jge
cmp
sbb
add
add
xor
clc
and
shr
add
jne
mov
add
dec
xchg
stos
daa
pop
shr
mov
add
mov
movsb
dec
cmp
pop
add
push
adc
add
jmp
pop
or
lods
insb
fucomip
imul
sbb
cmp
or
cmp
gs
push
jmp
dec
add
mov
mov
adc
jne
test
sub
dec
cld
add
and
pop
adc
jge
mov
inc
add
rolb
push
cld
sub
je
dec
mov
jne
mov
ret
or
rclb
adc
add
add
and
enter
or
add
je
cmp
push
cmp
add
or
js
jmp
push
ror
loopne
ret
lahf
and
in
add
jbe
push
push
call
popa
xor
push
cmpsb
shll
inc
pop
mov
pop
fiadds
pop
test
dec
dec
jae
lock
xchg
or
sar
xchg
add
movsl
add
add
push
jnp
cli
ret
xchg
sarl
add
stos
pop
mov
fsub
cmp
lret
ret
jne
inc
sbb
frstor
inc
add
add
lock
push
push
adc
dec
xchg
pop
xor
mov
imulb
adc
enter
inc
pop
in
lods
call
sub
gs
hlt
push
or
dec
loop
je
mov
cmp
shl
adc
je
daa
je
mov
cmp
inc
in
arpl
cmpsb
sub
lret
xorb
jne
jmp
mov
clc
decl
and
shl
sub
pop
enter
out
sbb
pop
or
arpl
jns
movl
and
sbb
cmp
je
add
add
roll
imul
jge
lcall
push
push
push
call
sbb
xchg
add
adc
rcrb
insl
js
js
sbb
mov
scas
leave
data16
inc
inc
mov
adc
call
xchg
fldl
xchg
int3
add
jmp
pop
pop
adc
add
xchg
push
adc
add
mov
imul
inc
push
xchg
mov
pop
mov
and
jmp
mov
mov
sbb
inc
push
inc
xchg
enter
pop
mov
inc
mov
or
mov
or
push
jp
mov
fxch
cmpsb
jmp
xchg
jae
xor
icebp
mov
cmp
imul
xor
add
add
cmp
adc
add
sub
jl
sbb
shr
or
lea
push
add
loopne
insb
sti
push
mov
test
jno
push
add
orb
xor
test
bound
iret
cmpsl
or
push
addr16
or
cmp
xchg
iret
inc
cmp
pop
lea
add
and
call
jg
mov
inc
jo
insb
imul
and
jb
jb
add
sub
arpl
jo
add
and
arpl
jne
and
mov
insb
and
je
bound
add
push
pop
mov
je
dec
dec
push
sub
fs
insb
fs
fsubrs
add
push
mov
jae
xor
dec
gs
popa
addr16
outsl
js
add
pop
fdivs
jno
mov
inc
js
je
stc
es
cmpsl
add
add
outsb
fs
add
outsb
inc
mov
cli
sti
mov
insb
cli
popf
outsl
add
jb
jne
test
je
pop
dec
sbb
sbb
aaa
iret
mov
insl
shll
sahf
out
push
cmp
ret
adc
jp
sub
decb
inc
mov
and
jl
sub
lods
xor
test
je
xor
lea
movsb
mov
call
jae
cmp
jae
push
push
push
xor
inc
xor
mov
lea
mov
mov
call
jae
lea
add
mov
call
jae
pop
pop
pop
sub
jae
mov
call
jmp
mov
call
adc
dec
jne
inc
call
mov
cmp
sbb
cmp
sbb
push
mov
sub
rep
pop
inc
inc
jmp
add
jne
xchg
lods
xchg
add
inc
ret
xor
inc
call
adc
call
jb
ret
sub
mov
popa
ret
add
mov
add
add
add
mov
add
insb
mov
add
add
adc
add
fs
add
lea
mov
mov
mov
movb
add
sub
mov
xor
ret
mov
popl
add
push
push
push
push
push
push
lea
mov
push
mov
push
push
pushl
push
mov
add
mov
call
pop
mov
push
push
mov
mov
add
mov
mov
mov
add
mov
mov
add
mov
add
lea
push
push
push
call
pop
pop
add
mov
push
mov
mov
add
sub
mov
mov
mov
call
mov
mov
mov
pop
jmp
add
push
push
push
call
mov
pop
pop
pop
pop
pop
pop
jmp
