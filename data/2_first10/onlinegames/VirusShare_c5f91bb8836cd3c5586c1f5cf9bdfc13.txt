sbbl
mov
iret
incl
xchg
gs
imul
xchg
sbb
in
fcmovnbe
lds
stos
fwait
xorl
lret
mov
pop
dec
aaa
sub
cltd
les
xchg
gs
add
mov
incl
jmp
add
mov
lea
rcrl
js
js
xchg
repnz
stos
mov
out
adc
add
lcall
lea
cwtl
lcall
lcall
mov
imul
xchg
fwait
call
cwtl
xchg
xchg
sahf
xchg
fwait
call
inc
test
cwtl
popf
mov
iret
enter
mov
iret
cmpsl
lcall
cli
adc
lock
lock
imul
mov
xchg
clc
test
popf
lea
mov
in
add
loope
iret
lret
je
jle
xchg
idivl
inc
lret
fwait
lcall
je
mov
and
add
test
por
scas
lods
cmp
mov
sbb
sahf
aaa
mov
hlt
xor
xchg
cld
xor
xor
xchg
xor
xor
das
hlt
cs
cld
sub
adc
and
mov
les
call
and
and
aam
enter
scas
cld
push
mov
sbb
sbb
and
push
mov
fcoms
mov
enter
or
mov
or
or
pop
or
cld
add
add
xchg
push
xchg
dec
subb
pop
cmp
subl
aaa
out
paddusw
or
add
sub
pop
les
mov
test
je
adc
je
idivl
mov
int3
aas
and
dec
add
jb
addr16
cmp
xlat
stos
scas
test
ljmp
aas
mov
in
ljmp
inc
inc
lret
cmpsb
mov
icebp
repz
out
pop
fsubl
xchg
and
add
xor
cmp
repnz
movsb
ss
jl
jecxz
rorb
insb
ljmp
test
inc
bound
out
repz
notl
je
jbe
stc
pop
cli
adc
ficomps
test
cmp
xchg
stc
orl
xchg
mov
mov
loopne
dec
mov
inc
xor
add
int3
and
or
loop
out
fbld
pop
in
loope
les
pushf
xor
xchg
cld
xchg
movsb
mov
jl
dec
mov
test
jmp
mov
movsb
adc
fdivrs
mov
jge
scas
jg
ret
mov
movsb
pop
das
dec
mov
push
jmp
pushf
mov
repz
dec
dec
lret
xor
in
pop
scas
jae
ds
jae
scas
sub
iret
in
xor
xchg
push
shl
mov
call
bnd
repz
xchg
nop
jp
cmpsl
mov
testl
loopne
or
pop
in
inc
repz
dec
cmp
dec
cmpsl
sti
movsl
iret
and
jmp
jecxz
inc
fwait
lock
pop
mov
fistps
xchg
mov
jl
ss
cmp
mov
out
mov
hlt
negl
jnp
dec
pushl
jmp
pusha
imul
ret
dec
push
inc
and
dec
and
repz
push
jp
repnz
out
mov
in
stos
jmp
outsb
out
stc
jne
sub
mov
mov
cmp
loopne
sbb
cmp
stos
dec
adcl
std
ljmp
iret
jmp
lock
ljmp
loopne
std
fildl
jb
push
stos
in
xchg
add
mov
inc
sub
mov
mov
movsl
in
mov
aad
xlat
inc
int3
fildl
dec
test
dec
inc
aam
pop
or
outsl
ljmp
push
pop
and
cmp
ds
mov
scas
and
mov
lods
cmp
call
test
aam
fildll
sub
stos
fsubs
arpl
sbb
shr
pop
dec
shrb
push
adc
das
test
inc
mov
mov
sti
aas
into
add
and
jb
jae
mov
mov
or
lods
test
jb
dec
dec
sti
jg
pop
out
aas
inc
out
adc
jb
push
repnz
cltd
push
inc
xor
lods
push
xchg
xor
inc
xchg
or
jne
cld
cmp
adc
lret
cmp
jl
dec
mov
andl
test
sub
cmp
and
int
xor
cmpsl
pop
jmp
mov
pop
iret
test
adc
cmpsl
rorl
aad
jnp
das
lds
call
jne
cmpsl
mov
or
xchg
mov
test
cmpsb
push
push
add
leave
mov
cmpsb
repz
cmp
test
and
add
push
and
fimuls
pop
cmpsb
gs
iret
cld
mov
cmpsb
gs
lcall
cmpsb
inc
idiv
mov
xchg
cmc
mov
hlt
inc
hlt
stc
xor
jl
xor
dec
cli
hlt
adc
jb
scas
lods
pushl
cld
ljmp
ss
imul
pop
sbb
scas
or
repz
ljmp
hlt
cmp
mov
shll
sub
stc
adc
jb
stc
xor
xor
shll
pushf
xor
inc
xchg
ja
cs
lods
repnz
dec
repnz
inc
cli
add
mov
inc
addr16
push
xchg
sub
jb
ljmp
test
cld
add
mov
ds
aas
cli
in
inc
lret
cmp
inc
jnp
lea
pushf
cmp
lock
add
add
xor
popf
xor
fmull
pop
add
mov
lret
int3
sub
sub
and
push
sub
xchg
repnz
add
lea
addr16
push
ljmp
cltd
add
push
or
fsubrl
or
outsl
xlat
das
xchg
inc
push
xchg
inc
stc
sub
inc
xor
ss
xchg
dec
test
add
fcoml
hlt
leave
imul
dec
or
xchg
mov
nop
ror
mov
xchg
mov
dec
insl
iret
rolb
inc
stos
mov
xchg
hlt
xchg
push
out
fwait
pushf
or
hlt
dec
ds
leave
popf
rorb
lret
cli
je
add
xchg
arpl
bnd
mov
inc
sarl
add
in
mov
cmp
inc
lahf
push
cmp
xchg
push
jl
aaa
xchg
jae
dec
jmp
stc
push
mov
nop
int3
aaa
cmp
lcall
or
popf
shl
xchg
cld
ret
mov
pop
loopne
cltd
mov
ss
lahf
stc
mov
popf
inc
add
jb
scas
stc
pop
inc
scas
pushf
inc
pop
mov
pop
push
ret
out
mov
lods
fadd
fwait
scas
mov
sbbl
mov
loopne
sbb
push
ds
mov
roll
mov
adc
movhps
ret
inc
jle
in
out
push
or
xchg
pop
int3
cmp
push
out
jmp
inc
add
fdivrp
ret
sub
mov
jmp
je
loopne
hlt
xor
fidivrl
fidivl
xor
hlt
lock
xchg
outsl
out
imul
xorb
jmp
push
hlt
sar
int
and
cmpsl
call
je
repz
je
mov
push
cmp
arpl
fisttps
in
jnp
mov
scas
jp
aam
dec
fwait
ds
mov
mov
xchg
jge
stos
aad
mov
mov
fildll
scas
mov
mov
jmp
call
xchg
out
std
stos
stos
es
incl
fcom
fwait
cld
ljmp
pushl
ja
repz
sti
cld
add
inc
loopne
stc
aas
stc
mov
loopne
icebp
shr
nop
add
dec
divb
fiadds
mov
stos
xchg
xchg
inc
lea
add
sahf
xchg
xchg
nop
mov
popf
lcall
std
mov
nop
fwait
lcall
repnz
fstpt
or
cld
push
pushf
rorb
clc
cmp
data16
dec
and
or
data16
adc
inc
data16
clc
lods
xchg
pushf
xchg
and
out
or
pop
scas
mov
out
dec
inc
adc
jbe
dec
icebp
fdivp
stc
repz
cmovb
out
cld
cli
clc
std
rcll
clc
scas
repz
daa
ds
out
clc
stc
outsl
das
jb
pop
test
mov
fs
loope
leave
or
popf
mov
popf
aas
jg
rcrl
lcall
jmp
pop
cmp
lea
adc
jecxz
les
hlt
hlt
fdivrs
pop
inc
into
cld
jae
sbb
leave
jge
add
loopne
ror
mov
xchg
cld
push
dec
cmp
adc
mov
daa
std
iret
add
aad
mov
mov
mov
lret
mov
dec
inc
xor
sub
mull
mov
mov
test
fwait
stos
inc
adc
mov
lret
lcall
imul
xchg
jge
scas
movsl
xchg
jmp
mov
and
jge
dec
cltd
movsb
outsl
add
iret
int
aad
int3
sub
mov
and
ret
mov
in
insb
shll
scas
popl
inc
xlat
jle
xlat
jp
sub
xchg
out
repz
xchg
out
test
data16
lret
push
shl
in
out
repz
leave
sti
sti
shll
insb
cli
jmp
aam
jmp
outsb
jmp
cmpb
in
sbb
cld
jmp
repz
mov
bnd
sbb
jmp
cld
jmp
out
daa
aam
jecxz
mov
pop
and
daa
xor
dec
mov
cmc
add
ficoml
int
test
or
test
xor
ret
mov
jl
out
jne
cmp
stc
mov
test
scas
cmp
sub
lock
inc
add
rcl
cmp
stos
pushf
and
in
lahf
dec
scas
stc
pop
fucomi
xchg
out
jnp
mov
sub
inc
lahf
js
aas
sub
mov
rorb
mov
pop
sbb
in
gs
xor
sbb
pop
add
lret
sbb
push
fbld
repz
int3
and
mov
fwait
fwait
dec
imul
lret
jg
les
out
lods
pop
pop
aaa
dec
and
in
inc
stc
pop
rolb
mov
jmp
add
dec
xlat
mov
loop
sti
notb
mov
out
mov
mov
scas
outsb
sbb
lahf
jnp
mov
lock
faddl
inc
ret
inc
out
idivl
pop
cli
testb
or
cmp
cld
mov
insb
int3
jne
in
test
add
adc
cwtl
dec
out
je
jns
mov
inc
mov
pop
fwait
rclb
bound
xchg
xchg
mov
loope
adc
lcall
inc
out
cli
sbb
test
dec
pop
fidivrs
test
push
lods
adc
mov
ret
mov
hlt
cs
inc
jbe
add
int3
inc
sub
hlt
jle
pop
test
js
dec
lock
test
adc
push
xchg
aad
add
jbe
mulb
cmp
and
push
or
mov
shrb
scas
add
cltd
iret
scas
int3
imul
sti
dec
adc
cmp
mov
cmp
fstpt
push
in
inc
or
cmpsb
in
add
test
lret
shl
cmc
xlat
mov
mull
xchg
std
pop
stos
adc
ret
sub
pop
iret
loop
dec
pop
js
cli
push
push
bound
loop
fdivr
in
cmc
mov
and
mull
fcompl
sbb
inc
dec
and
lahf
lock
movsl
cli
dec
rorl
mov
mov
mov
in
repz
ljmp
cwtl
loopne
lcall
cmp
icebp
dec
repz
ret
addr16
pusha
jno
cli
lds
lods
pop
ret
in
cmp
sub
test
out
repnz
mov
cltd
push
sub
inc
adc
mov
cmp
imul
lahf
xchg
pop
sar
fwait
pop
test
cmp
loope
jbe
clc
sbb
fwait
nop
cmpsb
imul
mov
imul
rcll
imul
lcall
lret
and
inc
xchg
and
cwtl
cld
and
and
pop
lret
push
inc
in
pop
sbb
outsl
add
add
xchg
push
ret
divl
scas
cli
daa
scas
in
jl
mov
jl
jmp
lds
and
cli
pop
xchg
imulb
scas
lahf
push
shr
sub
xor
pop
sbb
clc
xor
lods
lods
cld
mov
cmp
adc
aad
push
out
mov
jns
lahf
out
jge
jae
pop
mov
cmp
subb
ljmp
sub
aam
sti
cmp
fcomi
xchg
shlb
dec
mov
mov
or
cltd
jle
and
ret
fldcw
mov
shl
mov
popf
pusha
jbe
and
or
mov
mov
lock
sub
out
xorb
or
adc
mov
mov
adc
testl
loope
xchg
and
and
cld
and
mov
scas
mov
bound
cld
in
aad
xchg
mov
roll
cld
sahf
in
idiv
jl,pt
std
scas
and
pop
int
push
loopne
clc
jl
sti
jl
adc
sbb
dec
jbe
cmp
mov
mov
jbe
adc
dec
fwait
push
mov
repz
cli
je
ja
pop
inc
cmp
jl
out
jno
mov
adcl
nop
lock
stc
je
mov
ds
mov
je
and
and
imul
out
cltd
outsb
mov
cltd
out
test
and
pmaddwd
mov
imul
hlt
sti
mov
mov
loope
std
mov
sbb
leave
lret
imul
testb
xchg
mov
mov
cld
mov
test
xchg
mov
jnp
mov
and
cld
or
add
dec
push
cmp
mov
dec
inc
hlt
add
mov
and
hlt
in
out
sbb
je
add
push
cld
cmp
push
pop
cld
mov
rcl
fstpt
and
jecxz
push
cmpsb
xrelease
xchg
push
scas
jbe
mov
mov
xchg
mov
int3
je
adc
repz
jecxz
cmp
push
jp
or
and
shr
xchg
in
xor
enter
jnp
mov
pushf
jae
sub
cmp
lods
arpl
fmull
ljmp
fmuls
xchg
xchg
sti
xchg
lods
xor
lock
sbb
mov
insb
fiadds
into
cmp
cmc
notl
scas
add
imul
ja
add
daa
fcmovnb
cmp
loop
fnstenv
mov
or
movsb
mov
sub
mov
in
lock
iret
je
dec
dec
mov
cld
pop
jmp
cltd
xchg
fldl
mov
loop
aaa
jmp
jmp
das
enter
inc
pop
mov
pop
cmp
sarb
jge
mov
inc
loopne
scas
sti
negl
inc
mov
arpl
mov
or
test
test
jg
xlat
lcallw
xchg
sub
mov
clc
pop
push
push
hlt
cli
cltd
cpuid
add
mov
notl
mov
orl
jmp
imulb
aaa
bound
je
pushf
dec
iret
mov
fdivr
repnz
pop
dec
mov
sbb
mov
jle
xor
rcrl
jmp
scas
pop
out
push
mov
or
inc
sti
js
cli
repz
cli
lods
mov
ficoml
or
cli
mov
cmp
cmp
cmp
aaa
cli
inc
in
push
dec
pop
jle
push
aas
fstpt
dec
push
mov
xor
in
int3
test
rcl
in
dec
xor
in
in
mov
cld
leave
jmp
in
push
filds
jbe
cld
movsb
lret
mov
mov
inc
mov
xchg
fwait
xchg
lcall
nop
pushf
mov
nop
add
repnz
fwait
mov
popf
lea
sbb
nop
aas
or
mov
lcall
mov
rol
cmpsb
in
je
icebp
sahf
mov
fldl
xchg
mov
xchg
lock
in
xchg
mov
sub
hlt
cld
loop
jnp
test
add
rcrl
test
xchg
jecxz
lea
cwtl
fidivs
mov
xchg
mov
cli
xchg
es
adc
push
aam
lcall
in
cld
scas
mov
xchg
xchg
out
pushl
jb
xchg
nop
inc
adc
jns
mov
testl
mov
adc
mov
cmp
push
xchg
dec
sahf
dec
mov
mov
lock
or
lock
jo
out
jb
shlb
sub
das
inc
ljmp
vfrczss
lods
cmp
xchg
xchg
repz
mov
popf
push
loop
ds
jmp
jo
int
xor
jmp
les
shrb
out
xchg
sahf
mov
out
fsubrp
mov
adc
adc
or
les
xchg
push
inc
pushf
shl
test
mov
lods
mov
cmc
hlt
lock
inc
push
std
fmuls
and
cltd
cmp
lods
in
call
inc
mov
xchg
lcall
mov
mov
and
jp
lahf
movsb
ror
mov
pushf
nop
mov
es
push
sahf
sbbb
stos
mov
cltd
xchg
adc
dec
xchg
pop
lods
ljmp
sbb
xchg
inc
mov
sahf
pushf
jne
call
ljmp
push
lcall
in
les
std
jp
pop
out
outsb
jbe
and
xchg
iretw
mov
in
data16
mov
xchg
lock
fsubrs
idivb
std
testb
mov
mov
into
lret
test
fdivs
mov
ljmp
add
test
ja
push
arpl
xor
pop
into
add
ljmp
add
add
int
int
int
int
int
int
int3
ljmp
int3
add
add
mov
pusha
int3
push
int3
add
icebp
lret
loopne
lret
jae
gs
push
lret
out
lret
movsl
lret
jp
add
or
lret
sti
leave
out
leave
out
pushf
leave
popa
leave
cmp
sub
adc
pop
cmpsl
add
add
leave
jmp
in
fcmovne
aam
leave
enter
enter
enter
enter
fadd
int
cmpsb
add
add
sahf
xchg
movl
inc
loop
mov
les
add
add
test
ret
rol
ret
xchg
ret
dec
ret
inc
ret
aas
ret
fadd
enter
ret
push
add
ret
jno
imul
ret
push
ret
or
jp
add
subb
sub
nop
or
inc
shr
insl
js
clc
push
mov
js
lods
mov
js
adc
inc
dec
push
js
fmull
xchg
push
js
clc
movsl
or
push
popl
js
or
shl
and
cmpsl
or
inc
push
xchg
std
push
clc
imul
dec
push
pop
clc
pop
pop
clc
jns
imul
push
stos
popf
outsl
pop
pushf
mov
jno
fistl
mov
std
clc
ret
in
push
cwtl
fadd
jbe
pushl
dec
mov
dec
jl
aas
add
push
pop
xchg
jno
aas
shrb
fists
and
cmc
cld
outsl
rclb
cmc
aad
dec
add
test
mov
dec
and
pop
mov
shlb
sub
cld
push
inc
and
sbbb
xchg
jae
pop
lret
mov
lret
push
inc
das
sbb
sti
dec
cltd
cld
aad
sub
mov
test
mov
lret
mov
inc
xor
mov
or
cld
mov
mov
xchg
test
dec
xchg
sub
mov
sub
mov
mov
mov
fcmovne
mov
mov
xchg
xorl
mov
mov
mov
pop
cmpsb
leave
or
das
inc
pop
cltd
test
jnp
dec
add
dec
cld
adc
inc
pop
sbb
add
sti
icebp
cld
jmp
and
xor
cld
pop
adc
mov
mov
jecxz
fcmovne
mov
mov
lahf
xchg
mov
ja
gs
dec
xchg
pop
inc
dec
dec
je
cmp
cld
out
aaa
clc
xchg
out
gs
xlat
sub
pop
jmp
push
cld
add
fs
cld
mov
cmpsl
ja
rcrb
mov
mov
clc
jne
testb
mov
mov
in
mov
sub
movsb
adc
jmp
xchg
push
stc
cmpsl
stos
mov
repnz
out
test
mov
mov
iret
xor
cltd
pushf
mov
pop
sahf
popf
cmpsb
lods
mov
stos
test
lods
mov
jg
and
cltd
mov
mov
ljmp
pop
mov
pop
scas
dec
int3
fbld
rcrl
loopne
ffreep
pop
testl
sub
out
repz
pop
lahf
push
lahf
mov
mov
lahf
jl
mov
aas
fimuls
std
fistps
cld
and
mov
cmpsl
and
js
dec
or
sarb
mov
xlat
dec
fwait
jnp
cld
mov
cmp
inc
jl
adc
div
outsl
into
lahf
clc
notl
faddl
scas
scas
lea
xlat
add
cld
mov
insb
mov
cmp
dec
jmp
loopne
fidivrs
incl
loop
cmp
jg
iret
stos
stc
sub
leave
or
dec
clc
fucomip
mov
xchg
or
hlt
test
xchg
cmp
nop
push
ljmp
pushf
xor
mov
lcall
loop
mov
loopne
aam
clc
dec
push
lcall
lea
fbstp
je
sbb
je
or
call
lock
aas
add
cmpsl
cld
fdivr
and
fidivl
mov
dec
cs
clc
in
jmp
neg
pop
mov
mov
mov
sbbb
lea
shrb
aam
cmp
and
clc
mov
stos
rcrb
mov
xchg
xchg
int
into
ljmp
and
popf
sahf
xchg
clc
xor
cld
pop
adc
mov
mov
mov
dec
call
dec
cli
adcb
int
int3
je
test
xchg
sahf
xchg
sub
rolb
or
mov
call
push
inc
shll
shrl
xchg
cwtl
rorl
mov
fucom
movsb
inc
or
mov
or
clc
xor
sbb
insb
fdivs
add
sub
cmp
dec
ja
je
pop
inc
pop
fucomp
arpl
fildll
inc
mov
mov
jp
out
jbe
inc
adc
fs
lock
hlt
mov
lock
push
push
mov
mov
lcall
jg
hlt
jnp
lock
xchg
jle
add
jne
or
add
dec
sbb
arpl
mov
adc
dec
cld
ja
dec
outsl
int
in
push
adc
push
mov
jp
dec
xchg
xor
repz
push
sub
jbe
test
xchg
dec
scas
sti
ds
cmp
stos
mov
mov
dec
cli
mov
imul
cli
lcall
xchg
mov
sub
mov
sub
daa
sahf
outsb
lcall
mov
test
lea
popf
sub
in
sbb
mov
test
pushf
lea
loopne
mov
mov
lock
in
mov
dec
mov
sahf
mov
mov
dec
outsl
jb
xor
mov
scas
pop
xchg
mov
inc
stc
xlat
in
dec
rcrl
leave
xor
scas
pop
sub
xchg
mov
out
jnp
out
sti
mov
cmp
jb
mov
cmpsb
aad
mov
das
xor
idivl
sbb
add
je
xchg
ret
jg
out
cld
lea
or
jns
jnp
pop
adc
mov
in
adc
daa
in
sti
push
jnp
sbb
pop
mov
pop
pop
out
mov
out
imul
mov
std
adc
rcll
aam
jl
faddl
and
cli
jbe
jl
add
xchg
outsl
enter
pop
inc
xchg
dec
dec
stos
test
outsl
fcompl
push
xor
je
add
mov
lret
repnz
stc
add
xchg
dec
jbe
test
adc
jp
sbb
cmp
and
sub
jl,pn
push
scas
incb
jb
jno
les
mov
out
dec
mov
adc
and
sbb
xchg
push
enter
jne
xchg
mov
bnd
cmp
cmp
lock
idivl
lret
mov
out
xchg
fisubrl
subl
int3
add
repz
inc
lock
mov
pop
fisttps
out
sarl
mov
cmpsl
add
jne
jg
icebp
call
repnz
repz
lret
adc
shlb
out
cmpsb
addl
jmp
loopne
cmp
jmp
mov
jecxz
pop
dec
sub
jae
sub
std
outsl
ficoms
cmp
sub
in
fdivrp
inc
pop
sub
lcall
iret
sub
fcmovbe
sti
pop
sub
lds
push
sar
lret
sub
nop
shr
stos
int
cmp
jle
daa
mov
cld
jg
fcomps
insl
mov
out
or
bound
insl
iret
xchg
sub
fcmovnu
js
jge
cmc
outsl
je
bound
ret
ljmp
leave
mov
mov
call
mov
xchg
inc
add
in
jmp
movsb
mov
mov
add
sbb
inc
mov
int3
or
jmp
inc
add
sbb
jmp
icebp
shl
mov
jl
decb
jp
mov
mov
in
leave
pop
loop
jl
jne
in
insb
icebp
outsl
sbb
pop
imul
dec
jae
sbb
and
aaa
fistl
sub
sbb
adc
das
xchg
xlat
inc
jecxz
sti
cwtl
dec
loope
sbbb
mov
notl
imul
mov
pop
jb
out
mov
iret
jge
xor
xchg
push
mov
hlt
xchg
and
inc
xor
jb
cvtps2pd
fs
nop
lcall
xor
inc
push
cmp
repnz
cli
dec
loop
nop
andl
jb
popf
sbb
sub
int
repnz
dec
sldt
ror
daa
inc
dec
repnz
mov
inc
push
cmp
lock
out
dec
stos
test
mov
int
sub
aad
jbe
jmp
in
xchg
mov
pop
pop
es
shrl
clc
jmp
push
sbb
andb
xchg
jmp
push
cltd
je
repz
clc
xchg
dec
shrb
or
jecxz
xchg
rcrl
fists
clc
pop
cmp
xchg
adc
out
mov
and
add
jno
push
mov
jbe
rol
out
cmpl
cmpsb
lea
mov
mov
je
cltd
and
jno
mov
and
loopne
idiv
sub
in
test
jl
mov
sub
jmp
xchg
add
test
add
movsb
ljmp
iret
scas
scas
cld
mov
aam
out
and
or
pop
add
lock
and
and
imul
adc
enter
lds
jns
shlb
fidivs
or
es
adc
inc
push
sbb
in
imul
loopne
lea
movsb
sub
shrb
repnz
pop
into
sbb
popa
and
cld
cmp
lods
pop
movsl
notl
xchg
mov
sub
clc
idiv
cmp
jne
arpl
scas
test
sbb
jp
mov
push
aas
dec
xor
repz
stos
aaa
hlt
lea
ja
outsl
clc
jnp
jg
sbb
jecxz
or
iret
hlt
mov
into
push
outsl
call
into
imul
jno
ficoms
mov
or
or
pop
iret
arpl
cmc
std
push
addr16
sub
push
jl
cmp
out
jecxz
out
lods
fisubs
jecxz
arpl
in
std
pushf
fcoml
or
mov
dec
repnz
ljmp
or
out
shll
cli
mov
into
adc
ja
adc
in
or
scas
jnp
adc
add
lar
lar
ljmp
mov
xchg
int3
ffreep
repz
xchg
sar
cwtl
pop
out
std
gs
clc
push
push
std
out
push
scas
pop
mov
es
loop
daa
clc
das
out
push
xchg
rcll
sti
xor
mov
or
sub
nop
push
mov
add
js
fsubs
or
sbb
xchg
xchg
xor
scas
jle
xchg
movsb
push
int3
xchg
mov
pop
ficomps
add
cmp
mov
cld
sub
in
cli
adc
fsubs
mov
fildl
xor
loope
outsl
jle
aad
mov
outsl
in
es
ja
js
mov
inc
aas
mov
jl
enter
popa
pop
cli
and
nop
lods
repz
gs
xchg
addr16
dec
cmp
push
enter
in
aas
stc
and
clc
cli
cmp
aam
into
sti
aas
outsl
dec
mov
hlt
scas
sub
and
test
clc
adc
data16
mov
stos
hlt
ja
sarb
pop
addb
mov
fdivr
mov
std
int
mov
not
xlat
fs
mov
cld
lods
das
fs
das
sbb
jge
aas
repz
xlat
out
lods
lods
les
les
pop
pop
mov
inc
pop
fbld
lods
das
xchg
lods
mov
mov
movsl
mov
fs
mov
pop
mov
mov
fiadds
pop
hlt
sbbb
jno
lock
into
fldcw
js
jle
outsl
lea
adc
add
je
xchg
sub
fdivrl
ljmp
dec
shlb
adc
fucomip
repz
dec
sbb
fidivrl
mov
jmp
push
pushf
dec
mov
icebp
je
ds
add
push
jb
pop
pop
rol
mov
add
inc
das
jge
ds
loop
mov
push
ss
mov
icebp
cmc
fadd
jecxz
and
inc
pop
mov
stc
call
in
mov
movsb
xchg
jmp
out
addr16
xor
sti
ds
add
mov
mov
sti
mov
and
shrl
mov
xor
jl
in
mov
adc
in
fisubl
nop
adcb
faddl
icebp
sub
or
add
out
jb
call
xchg
add
sub
adc
sarb
cltd
scas
or
addb
hlt
or
cld
out
jb
enter
sbb
inc
invd
adc
dec
or
test
je
shl
cmpsb
mov
cli
cmpsb
adc
jb
les
cmpsb
ds
ds
jmp
cmpsl
mov
and
or
sub
mov
and
lock
ror
adc
inc
ds
and
adc
jmp
or
or
and
ja
cld
and
in
lock
je
and
push
add
stos
or
sub
fsubrl
and
in
inc
movsb
add
stos
in
aad
js
je
and
cmpsl
out
xchg
jb
cld
sub
cmpl
xchg
jp
sahf
sub
and
in
dec
dec
or
mov
rcr
cmpb
faddl
movsl
add
push
jg
xor
loope
push
add
or
push
adc
jge
jmp
out
into
hlt
inc
jp
xchg
fnstcw
jl,pt
lret
pop
daa
daa
addr16
xchg
adc
jmp
test
and
das
and
xlat
dec
dec
mov
dec
rclb
sub
adc
nop
pop
mov
aas
dec
ret
xchg
and
mov
cmp
xchg
adc
cld
aad
daa
stc
sub
cli
cmp
daa
cli
inc
sub
rorb
movsl
adc
sbb
enter
sub
out
outsl
xchg
adc
and
mov
sub
and
sub
fimuls
mov
push
push
xchg
cld
stos
add
add
cmp
and
pop
mov
and
jno
xchg
movsb
je
aam
mov
int
mov
fistl
jge
sahf
repz
mov
xchg
add
fdivp
dec
mov
cmp
mov
dec
cmp
fsubl
sub
je
popf
or
loop
into
inc
dec
hlt
jns
hlt
sub
pop
adcb
mov
call
jl
jmp
pop
cmpsb
inc
mov
lea
or
movsl
mov
push
fdivrl
or
adc
mov
push
cmp
imul
pop
dec
mov
xchg
cmp
push
or
out
shrb
pop
jae
push
sub
lahf
dec
js
js
dec
jae
jns
rorb
xchg
cmp
jo
and
and
or
jle
pop
daa
sub
imul
shl
pop
jp
cmp
fsubl
es
dec
shll
sub
subb
jo
dec
ret
push
inc
inc
inc
pop
dec
and
das
dec
sbb
push
and
sub
outsb
pop
dec
cmp
fcompl
clc
enter
jo
mov
shl
in
cmp
and
jno
ja,pt
xchg
js
sub
sub
int
in
icebp
push
lcall
fsubl
es
je
jmp
mov
dec
sbb
and
mov
mov
and
push
sbb
xchg
jo
and
sbb
dec
lcall
pop
pop
adc
or
mov
or
or
std
nop
cwtl
sub
icebp
cmp
sub
cmp
aad
pop
xchg
jo
jae
mov
or
sub
das
out
push
mov
dec
xchg
push
jecxz
sti
push
add
int3
add
xchg
pop
jp
jle
mov
jge
out
push
gs
shl
xchg
dec
andl
rcr
bound
add
enter
mov
mov
sbb
push
xchg
jo
fildl
and
int3
dec
adc
cmp
repnz
push
mov
je
loope
xor
in
push
xor
xchg
lcall
sbb
test
xor
lahf
mov
or
es
mov
add
xchg
sub
popl
inc
inc
cmp
cmpsl
dec
sbb
sub
mov
cmp
sbb
cmp
cmp
xchg
add
hlt
pop
daa
sbb
cwtl
int3
jmp
int3
or
iret
adc
and
mov
jmp
pusha
icebp
roll
cli
loop
sti
xchg
fsubrl
adc
rolb
movsb
jecxz
mov
xchg
push
call
stos
push
and
mov
or
sbb
add
lods
imul
pop
sbb
mov
adc
loop
cld
in
repz
imul
cmp
cmc
sbb
xlat
insb
jae
sub
nop
int
pop
out
mov
in
pop
dec
ljmp
cmp
xchg
mov
jg
dec
stc
mov
mov
bnd
push
cmp
fsubrl
out
test
in
jae
xchg
lea
int3
loopne
pop
insb
add
adc
loop
into
cwtl
popf
and
push
push
sub
shrb
lcall
lcall
cmp
mov
sub
xorb
xor
xrelease
cmp
mov
les
jp
mov
roll
js
dec
lcall
out
jp
mov
pop
out
sbb
jl
enter
mov
push
test
inc
in
adcl
mov
add
int3
mov
out
sbb
inc
outsb
and
and
cmc
test
loopne
pop
adc
pop
adc
inc
jle
loopne
out
divl
nop
inc
jge
lods
push
sub
sbb
sub
sub
adc
lret
inc
into
adc
jns
lcall
int3
cmp
sub
aad
lock
or
mov
inc
das
sbb
mov
into
movsb
orb
mov
pop
jbe
je
das
in
and
repz
das
ror
movswl
je
dec
cld
pop
lahf
mov
add
andb
xchg
xchg
lahf
gs
test
xor
xchg
cmpsb
xchg
mov
add
out
xchg
cmpsl
and
mov
ljmp
nop
jp
movsb
push
xchg
outsl
xor
scas
xor
and
out
stc
out
icebp
clc
out
xlat
mov
and
out
jns
cli
xchg
test
mov
mov
pop
aaa
stos
inc
clc
sbb
cltd
pop
cmpsb
lods
xor
dec
sub
pop
push
icebp
xabort
aam
test
or
loopne
sub
hlt
mov
jecxz
xchg
adc
lea
adc
xchg
or
pop
ljmp
mov
pop
cmpsb
in
push
cmpsb
into
pop
std
lahf
mov
stos
mov
lods
sub
inc
decb
dec
fisubrl
inc
std
aas
cmp
jmp
lea
lods
jp
and
imul
inc
fidivrl
gs
add
xchg
cmc
scas
xlat
cli
xchg
stos
and
movsl
xchg
fxch
icebp
testb
ret
repnz
adc
in
adc
imul
lods
lods
xchg
push
in
jae
lret
in
ficoms
inc
lods
out
xor
insb
or
out
xchg
xlat
inc
loop
cltd
dec
das
xchg
sbbb
scas
repnz
sahf
sub
daa
lcall
pop
lcall
stos
sbb
nop
ret
and
or
mov
mov
and
pop
pop
xlat
fwait
divb
mov
add
lahf
mov
call
lods
jle
out
jne
imull
sbb
xor
and
xchg
sub
xchg
xchg
xor
dec
mov
sti
dec
jmp
adc
jnp
test
loop
or
mov
push
pop
sub
clc
mov
mov
jecxz
mov
xchg
in
sub
xchg
je
xor
fcmovnbe
aam
ja
pop
incl
and
data16
lock
sbb
fwait
mov
dec
call
clc
bound
add
aas
scas
and
notb
js
pop
ret
lods
scas
push
ljmp
loop
sahf
dec
scas
call
lds
scas
bound
jae
xchg
repnz
mov
jl
mov
cld
xchg
cmp
test
fistpl
rorb
test
imul
pop
jno
sarl
xor
or
or
jg
mov
xor
inc
sti
add
add
cltd
loope
lea
lds
cltd
je
sti
cltd
ret
adc
mov
cli
xchg
inc
adc
dec
in
adc
sub
and
xchg
repnz
test
mov
xor
ret
outsb
cmp
lods
mov
clc
jne
lods
pusha
xchg
adc
test
mov
add
adc
mov
mov
mov
sti
ret
rorb
fsubl
adc
aas
lock
rcl
ljmp
cli
bound
rcrl
dec
mov
aad
sahf
cs
jnp
xor
jmp
hlt
lret
pushl
and
mov
mov
pop
jl
mov
mov
xchg
add
jmp
pop
push
dec
pop
ret
stos
and
push
adc
in
lret
sub
xchg
jg
dec
xchg
std
jp
dec
sahf
in
jns
dec
cmp
jno
popf
mov
mov
push
xchg
inc
out
lds
mov
push
outsl
icebp
into
ss
adc
ja
les
test
addr16
jo
fdivp
loop
out
leave
cli
push
sbb
rorl
and
lret
fdivs
fisubl
lcall
pop
inc
and
inc
lret
jno
rolb
daa
xchg
lods
jg
rol
mov
dec
stos
iret
add
dec
pop
mov
dec
inc
rclb
cmc
xchg
je
adcb
loopne
cmp
sub
test
dec
xchg
sysret
outsl
fistpll
jecxz
je
arpl
xchg
sub
jb
cld
arpl
push
lods
add
fimuls
clc
cmove
sti
mov
pop
xchg
jge
mov
outsl
push
mov
mov
cmp
shrb
mov
out
lahf
leave
aam
fstl
movsb
mov
mov
test
cmp
mov
pop
jno
adc
pop
xlat
jnp
sbb
sub
cld
movsb
inc
ret
mov
fdecstp
push
inc
add
lahf
sub
inc
out
pop
mov
adc
mov
xor
lods
adc
jae
leave
xchg
filds
jecxz
and
and
fcompl
inc
scas
dec
xchg
push
lods
add
in
test
xchg
mov
cmp
ja
fsubl
aas
aas
mov
push
inc
mov
xchg
cld
push
mov
xchg
dec
cwtl
push
test
dec
mov
mov
lcall
mov
inc
hlt
inc
faddl
cld
inc
xchg
ja
hlt
aas
in
ljmp
xor
xchg
nop
lea
rcrl
xor
sar
mov
shll
mov
dec
aad
rclb
adc
adc
femms
adc
mov
or
sarb
push
and
and
ret
mov
dec
shl
aas
cmp
sti
iret
iret
iret
aas
dec
shll
iret
xor
shl
cmpb
lea
pop
push
bound
mov
and
ds
hlt
dec
das
pop
push
mov
xchg
sti
call
stc
shrb
ljmp
push
cmpsb
enter
xor
mull
aaa
call
mov
sub
shll
mov
into
cmpsl
stos
add
ljmp
pop
and
mov
shlb
mov
jne
adc
cmpb
sbbb
jo
dec
sbb
cwtl
mov
adc
aam
cs
push
mov
out
in
sub
sbb
xor
mov
sbb
pop
in
sub
ret
jp
add
pop
jg
add
inc
jno
mov
scas
mov
fs
push
adc
enter
mov
xchg
dec
cmpsb
pop
adc
adc
dec
in
cmp
or
push
les
inc
stc
sbb
iret
push
test
fidivrl
push
jle
jge
std
jb
imul
or
fildll
add
addr16
jmp
inc
rol
out
mov
pop
cmp
xlat
adc
xchg
clc
push
lahf
cld
daa
es
loope
popf
loopne
xlat
repz
pop
pop
cmpsl
dec
daa
rorl
xchg
rorb
test
das
jno
jge
and
inc
or
test
mov
dec
movsb
lret
mov
les
imull
jge
cmp
jle
pop
inc
sub
inc
repz
adc
cwtl
imul
out
or
loop
inc
negl
push
ret
cltd
daa
ds
mov
outsl
iret
out
pop
leave
test
jae
andl
incl
cmpsb
jmp
pop
xchg
iret
out
mov
cmp
mov
mov
mov
jge
stc
pop
cld
movsl
dec
mov
jl
jmp
dec
xchg
mov
lret
mov
xchg
inc
mov
loope
cli
in
push
mov
xchg
imul
xchg
std
cmc
and
and
lock
cltd
jl
jnp
movb
lcall
lods
mov
pop
loop
pop
ljmp
mov
out
jl
jb
pop
lahf
fisttpl
fists
jg
jae
pop
mov
into
cmp
aas
rcrb
sub
xor
mov
inc
jmp
mov
mov
decb
loopne
xor
sbbl
test
adcl
cmp
daa
lahf
call
inc
or
jns
mov
add
push
jnp
cmc
or
ret
fsts
pop
xchg
test
fcompl
sti
cmp
mov
loopne
jge
shll
loop
cmp
mov
fidivl
filds
pop
mov
xchg
and
cmpsb
cmpsb
jge
mov
iret
and
push
fwait
sub
ret
mov
lock
rcrb
or
loop
sarl
mov
outsl
xchg
push
mov
incb
sub
pushl
out
pop
cld
jg
lods
lock
push
fistl
pop
mov
imul
test
inc
mov
mov
pushf
scas
clc
pop
or
add
jl
mov
sarb
jle
jnp
hlt
fs
mov
fistl
jg
pop
cld
adc
gs
jge
add
adc
pop
jbe
rclb
jns
les
cltd
out
adc
pmuludq
sahf
repnz
dec
jbe
imul
xchg
jp
push
aas
ss
insb
lcall
enter
sbb
lds
mov
adc
sti
cli
scas
push
jp
mov
ror
repz
data16
addr16
imul
adc
add
or
mov
mov
daa
js
js
js
int3
aaa
fistpll
sarl
pop
xchg
outsl
jecxz
and
jne
shl
pop
gs
aam
js
sbb
mov
in
std
loope
ret
mov
jo
stc
std
das
gs
sar
xchg
decl
sub
mov
out
push
stc
pop
jge
and
mov
inc
into
jg
test
cmp
sub
out
clc
into
in
pushf
sub
cwtl
shrb
outsb
fbld
std
cmp
cmc
es
jmp
push
in
loop
sub
add
loopne
mov
lahf
and
icebp
jb
imul
scas
lcall
sub
imull
out
in
inc
pop
fmuls
scas
cmp
ljmp
xlat
out
pop
fbld
sub
mov
jmp
out
enter
popf
rol
cmp
daa
ja
cmp
js
and
or
and
cmc
mov
lahf
cmp
xchg
call
inc
out
stos
loop
xchg
sbb
sbbl
fidivrs
push
xchg
xor
cmp
mov
fimull
hlt
loop
repz
and
cmp
jno
jle
jg
les
cmpsb
movd
fimuls
in
icebp
cmp
dec
loope
or
sub
aad
mov
pop
out
pop
dec
hlt
fsts
je
div
adc
xchg
sti
imul
jecxz
cmp
add
arpl
sbb
shrb
fcomip
dec
roll
and
jg
push
clc
pop
dec
xchg
push
iret
cmp
scas
push
movsb
or
push
xor
es
pop
adc
and
xor
adc
add
add
popf
lret
jo
negb
aas
mov
xchg
jle
cli
jnp
mov
inc
jecxz
push
sar
loopne
ja
je
mov
movsl
rcr
jns
pop
mov
sbb
jmp
fisubl
flds
inc
clc
popa
in
pusha
pop
hlt
pop
in
pop
mov
mov
xchg
cld
pop
in
pop
pop
pop
pop
lret
mov
push
push
sub
mov
clc
push
call
dec
call
dec
xchg
dec
in
dec
dec
dec
mov
mov
in
inc
inc
pop
inc
mov
inc
and
popf
call
sub
ds
sbb
leave
mov
cmp
mov
mov
mov
xor
inc
push
xor
xor
mov
adc
sub
hlt
sub
sub
sub
inc
push
push
loopne
es
inc
and
mov
and
rcrb
fnstenv
xchg
xchg
int
xlat
mov
lret
fimull
mov
adc
adc
push
xchg
pop
adc
pmulhuw
inc
or
mov
or
pop
fs
jle
push
push
pop
add
cmp
mov
mov
dec
pop
in
jns
aas
xchg
sbb
cli
addr16
pop
pop
sar
lock
popa
fcoml
and
adc
xchg
cwtl
repz
add
test
js
sbb
scas
aam
pop
bound
jae
lcall
and
scas
stc
das
outsl
sub
xchg
jo
xor
scas
repz
jae
mov
lea
pop
mov
scas
scas
ss
adc
xchg
das
lock
adc
push
addl
cmpsb
jo
mov
out
out
push
push
loopne
pop
or
jmp
and
cld
adc
pop
push
mov
idivb
daa
fbld
daa
lcall
dec
mov
stos
test
test
loop
ja
fcoml
push
pop
jge
cs
stc
mov
mov
psubusb
stc
aam
dec
sbb
incb
les
lock
jmp
xchg
mov
out
jne
sbb
xchg
cli
test
fidivl
adc
das
pop
adc
ja
cmp
and
push
dec
dec
in
fdivrl
adc
xchg
imull
bound
xchg
call
daa
xlat
imul
jl
insl
adc
jns
test
mov
test
cld
fstpl
mov
je
push
repnz
sarb
ljmp
clc
adc
cmp
js
hlt
daa
dec
push
cmc
aaa
std
xor
std
sub
mov
shll
and
sbb
mov
call
and
sti
mov
jg,pn
jmp
adc
dec
mov
jmp
rcr
pop
add
mov
das
mov
mov
out
lock
iret
or
adc
inc
inc
pop
jnp
mov
jp
dec
jns
jmp
mov
outsl
cmpsb
out
mov
mov
or
and
test
dec
inc
jne
shlb
data16
or
test
rclb
fwait
bnd
mov
or
movsb
dec
dec
rcl
jmp
mov
in
lock
xchg
mov
int
mov
adc
jge
mov
scas
scas
test
adc
adc
cmp
jbe
mov
jmp
ja
dec
pop
loopne
mov
mov
test
and
stc
lret
mov
mov
mov
stos
roll
sub
xchg
mov
mov
adc
adc
sub
adc
pmulhuw
in
or
mov
es
mov
in
mov
mov
lea
lret
mov
lret
xchg
mov
movsb
sub
lcall
aas
xor
mov
mov
lret
mov
xchg
lods
lcall
and
mov
dec
ja
jbe
jne
je
mov
lods
cld
jb
jno
jo
outsl
adc
push
daa
mov
arpl
inc
insl
mov
imul
mov
lds
xchg
fsub
data16
add
gs
mov
mov
fwait
lods
lcall
mov
sbb
sbb
mov
mov
sub
lcall
mov
xchg
lcall
jp
pushf
pop
in
loop
outsb
dec
mov
nop
arpl
daa
outsl
dec
ljmp
mov
shufps
xor
add
cs
repz
testl
pop
cs
pop
push
imul
xlat
inc
jne
lock
clc
xchg
mov
popa
lret
pop
xor
cmpsb
add
inc
das
or
lock
out
aaa
push
ja
or
shrl
lods
scas
lcall
repnz
addl
shld
cmp
xchg
mov
cld
movsb
pop
mov
pop
xor
out
or
cmc
mov
xchg
pop
test
sub
push
ja
cli
in
mov
test
push
movsb
sahf
popf
les
cld
inc
scas
cli
cld
add
icebp
iret
out
aam
ret
dec
add
sbb
push
enter
aaa
pop
push
add
data16
fisttps
out
enter
lahf
popa
xor
rcr
cld
call
hlt
jle
dec
mov
popf
mov
popa
aas
scas
xor
push
in
repnz
mov
stc
adc
push
mov
in
sbb
sbb
cli
dec
idivb
cli
addr16
decb
cmp
and
adc
mov
or
cmp
push
das
pop
mov
repz
int3
jb
cmp
cmp
pop
mov
cld
pop
lea
dec
pushf
stc
in
xchg
add
adc
xchg
inc
clc
decb
aas
sub
call
lds
hlt
or
xor
add
add
pop
arpl
mov
xor
pusha
test
xor
xor
push
daa
gs
cmc
jae
hlt
push
enter
mov
jl
test
rsqrtps
sub
ret
dec
fcmovnu
pop
stos
adc
rcrl
mov
pop
ljmp
sbb
xlat
mov
pop
fisttpll
lret
cmp
add
test
out
and
pop
cmp
mov
dec
rorl
enter
stos
pop
mov
adc
fcom
std
pushf
cmp
loope
out
xchg
push
push
pop
popa
add
mov
pop
cmp
cmc
movsb
fidivl
je
jp
dec
cmc
ja
inc
scas
xchg
gs
pop
shlb
mov
xchg
mov
xchg
aam
inc
xor
push
loopne
xchg
push
jno
int
pusha
or
or
or
or
sub
call
rcrb
dec
mov
push
out
fiaddl
fcomp
std
sub
loope
filds
add
cmpl
fwait
icebp
popf
xor
xor
in
mov
pop
nop
push
js
rclb
lret
jl
jle
adc
int3
mov
cwtl
lcall
sub
pop
inc
push
mov
pushf
dec
xor
inc
sbb
rolb
mov
cmp
in
pop
movsl
and
adc
pop
add
je
jg
cli
ret
faddl
xlat
cmpsl
xlat
testb
lea
clc
mov
mov
cmc
lret
xor
xor
jg
stos
mov
das
pop
subb
push
and
das
mov
mov
sbb
out
cld
sbb
lcall
arpl
pop
mov
rorb
ret
rcrl
nop
out
repnz
test
adc
stc
jae
mov
out
mov
daa
mov
add
ss
xlat
cli
mov
jae
mov
mov
fdivrl
fstpt
pop
stc
loop
shlb
cmp
out
xor
rcr
hlt
int
cmp
inc
out
or
push
xchg
fsub
mov
and
popf
add
shlb
mov
pop
jp
jae
pop
js
aaa
or
jle
pop
add
push
aad
das
cmp
aas
sub
repnz
cmpsl
ret
ljmp
sbb
int3
call
subb
pop
cmc
hlt
fsubrs
adc
or
cmc
jge,pt
push
xchg
sub
pushf
push
add
mov
cmpsb
fidivrs
mov
cwtl
jnp
pop
sub
les
fimull
pop
pop
xchg
xchg
shll
arpl
bound
popa
xchg
pusha
mov
xchg
pop
rcll
or
xchg
pop
fadds
pop
pop
mov
push
fcoml
xor
mov
ficoml
sti
call
popf
dec
lds
gs
inc
popf
inc
inc
lds
rcll
mov
ds
xchg
gs
pop
cmp
cmp
in
addr16
cmp
and
xor
sub
sub
mov
mov
daa
es
mov
and
and
and
and
loopne
xchg
mov
jb
out
notl
sbb
aaa
lret
lods
fwait
test
and
adc
dec
test
sub
leave
mov
std
in
mov
mov
mov
adc
icebp
das
adc
icebp
jno
push
dec
adc
addr16
xor
loope
je
pop
lock
pop
outsb
pop
mov
js
int
sbb
push
fbld
add
pslld
iret
jne
scas
test
cli
cmp
mov
mul
mov
lcall
sub
xchg
xchg
mov
add
ficoml
add
shll
sbb
in
inc
icebp
sbb
loop
insb
pop
in
sti
jae
xchg
cli
pop
out
or
and
je
fs
in
sub
pop
xchg
push
inc
xchg
sti
pusha
lods
andl
je
sub
sbb
mov
sbb
mov
stos
adc
enter
arpl
out
inc
add
cmp
repnz
xor
out
sub
push
leave
xor
es
push
xchg
xor
xchg
stc
pushf
sub
dec
addr16
dec
es
add
xchg
push
fsincos
shrb
out
cli
mov
mov
bt
jo
jle
push
ds
cld
sub
xchg
lea
negb
lea
daa
sub
std
aad
or
or
add
das
add
sti
pushf
sub
lahf
cmp
hlt
and
shr
shr
mov
and
push
mov
or
test
cmp
xchg
ret
or
das
incb
enter
iret
cmp
in
fld
add
cli
loop
dec
out
ret
inc
iret
cmc
pop
jmp
psubsw
or
mov
jmp
inc
lahf
testl
dec
push
test
out
sti
repz
cli
roll
xchg
mov
cmp
pop
inc
sti
loopne
nop
dec
lahf
lods
cmp
idivl
and
xchg
jp
or
mov
pop
sbb
pop
lock
bswap
lretw
out
fmul
mov
fisubs
out
push
fs
and
mov
xchg
sub
jecxz
push
cmp
pop
adc
cmc
imull
cli
dec
aaa
xchg
aam
sahf
push
jmp
lret
cmc
adc
leave
popa
jecxz
pop
cltd
xchg
fwait
in
call
jg
je
dec
scas
push
in
stos
dec
push
mov
push
xchg
mov
aas
subb
mov
lds
daa
mov
lahf
in
xchg
adc
call
sub
jle
in
push
sbb
in
jge
pop
fwait
jns
sub
jle
in
adc
mov
cmpsl
jl
rclb
int3
mov
lods
clc
or
push
or
or
inc
xchg
cld
adc
add
add
push
lea
cld
mov
or
fwait
dec
add
dec
int
mov
cmc
push
cmp
inc
shlb
sti
ret
call
jecxz
inc
push
loope
stos
psrad
fidivrs
ja
jg
jb
mov
int3
mov
cld
lds
mov
add
jl
sti
popf
cmpsl
mov
mov
out
mov
fwait
cmp
jae
dec
push
dec
add
and
jb
out
rorb
mov
hlt
and
cmp
icebp
inc
call
pop
es
sbb
adc
push
aaa
clc
xor
mov
out
in
cmp
push
rclb
fwait
out
pop
std
or
xchg
outsl
mov
pop
and
fisttpll
cmc
dec
xchg
stc
sbb
sbb
mov
adc
movsb
adc
adc
xchg
int3
and
adc
dec
adc
ljmp
loopne
mov
or
je
and
dec
bound
hlt
pop
clc
sub
mov
push
pop
jae
lock
fprem1
add
cld
xchg
sbb
sbb
pop
cmp
jo
dec
lahf
push
in
inc
jg
je
lahf
negb
inc
and
sub
xchg
jae
out
repz
jne
adc
xchg
mov
jmp
pop
in
js
jmp
imull
mov
loop
add
out
shl
pop
std
add
mov
ljmp
jae
mov
lcall
jae
lcall
mov
push
pop
aad
push
divl
es
pop
mov
add
in
xchg
and
xor
repz
cld
pushf
lock
shr
inc
repz
jbe
out
out
rol
fistl
call
cmc
imul
iret
push
test
dec
out
mov
xlat
pop
and
pop
add
lcall
push
aas
cmp
ja
adc
pop
and
leave
adc
fsubr
cmp
xchg
fcomip
js
xchg
bndstx
cld
in
sub
out
pushf
fsubrl
add
jae
cmpsb
or
repz
adc
xchg
shrl
push
mov
into
cmp
pop
call
jne
add
jmp
jecxz
mov
inc
push
and
mov
add
stc
xchg
lret
mov
dec
and
mov
rcll
sbb
sbb
or
mov
mov
add
loope
in
ljmp
sbb
shll
ss
lea
rcrl
mov
adc
loop
push
add
push
cmp
sub
daa
xor
popa
mov
frstor
and
cmpsl
and
int3
cwtl
pushf
clc
pop
add
push
stc
sbb
push
sbb
push
sbb
jle
scas
jecxz
or
scas
pop
add
add
icebp
std
js
movsl
xchg
jmp
adc
add
repz
arpl
movsb
ds
stc
mov
iret
lods
outsl
push
mov
xchg
push
mov
add
sub
inc
pop
add
cli
outsb
xor
mov
mov
push
stc
mov
xchg
cld
repnz
ja
mov
cmp
pop
loopne
aaa
dec
mov
repz
test
add
shll
add
push
jp
je
mov
pop
mov
mov
push
dec
or
add
pop
test
je
mov
shr
test
pop
bswap
push
je
adc
daa
xchg
jle
sar
sahf
je
je
adc
add
push
int3
cs
cmp
add
fcmovnb
pop
int3
and
inc
adc
decb
jb
pop
cmc
and
test
outsb
and
push
jge
xchg
cld
xcrypt-ctr
cmpsl
sahf
cmp
cs
xor
xchg
adc
add
mov
mov
ret
lock
mov
cld
stos
test
push
sub
jg
mov
repz
xor
test
jno
lods
xchg
fneni(8087
pop
in
pop
jb
ja
dec
jns
lock
jo
xor
inc
pop
jb
xor
mov
into
mov
jmp
mov
in
popa
movsb
movl
aaa
jns
jg
pop
jle
inc
je
test
lods
shrb
adc
daa
cmp
jmp
lock
or
adc
fistpl
out
into
test
xchg
add
test
out
dec
cmpsb
stc
je
xlat
ficoml
adc
je
repz
xlat
loopne
sarl
mov
ljmp
mov
mov
or
gs
xchg
jecxz
daa
jmp
sbb
sub
xchg
scas
ljmp
inc
pop
jbe
sti
jbe
je
out
je
je
clc
adc
nop
pushf
test
cmp
jecxz
mov
adc
push
mov
outsb
mov
sbb
xchg
aam
pop
loop
mov
cmpb
inc
cmpsl
cmp
mov
shrb
add
push
movsb
incl
rcll
or
cmc
out
int
xlat
mov
icebp
not
jecxz
negl
pop
inc
pop
repnz
jg
cmp
push
sub
mov
pop
addr16
adc
cmpsb
pop
scas
adc
xchg
jmp
xchg
xlat
pop
and
scas
dec
sub
pcmpgtb
or
cmp
orl
xchg
jecxz
jmp
add
call
cmp
mov
or
insl
gs
sub
push
lock
ds
xchg
jle
fisttpll
int3
adc
je
push
dec
adc
cltd
xchg
stc
mov
je
push
stc
push
sub
lahf
cmp
lock
jl
xor
out
out
mov
test
jmp
push
stc
inc
jg
mov
enter
mov
les
andl
popa
fsubs
repz
mov
jbe
scas
cli
push
rcrl
outsl
mov
sub
xchg
daa
mov
jae
loope
cmp
cmp
jno,pt
add
shl
loop
add
jnp
mov
aaa
jecxz
push
les
cmp
or
pop
lret
mov
pop
push
pop
aam
cmp
inc
js
xchg
fldl
aas
dec
out
or
dec
movsb
test
sbb
sub
es
in
and
cmpl
fsubs
andl
mov
cli
or
int
pop
dec
loop
cltd
subl
cmc
push
shll
or
out
or
jmp
mov
std
dec
mov
and
xor
pop
xchg
flds
enter
fs
cwtl
xchg
je
cltd
add
lahf
clc
ds
sub
jnp
pop
ss
rcrl
hlt
jbe
fstl
mov
fs
xchg
cld
and
or
mov
mov
sahf
jne
jne
lds
pop
cwtl
mov
cld
ds
sti
xchg
aas
loopne
xchg
jmp
push
xor
in
js
dec
js
jbe
jmp
cmp
cmpsl
call
or
in
xor
mov
hlt
call
data16
dec
and
mov
lahf
and
dec
mov
cmpsl
in
and
lock
in
repz
xchg
pop
iret
mov
xchg
clc
out
xchg
dec
cli
cmp
loope
and
mov
mov
imul
pop
je
hlt
pop
jg
daa
ret
cmp
mov
jbe
mov
cwtl
shlb
in
mov
scas
cmpsb
sti
aaa
jg
pop
cld
cmp
pop
fsub
dec
lret
ret
scas
pop
gs
mov
jae
hlt
test
loopne
cltd
clc
pop
fisttpl
fsubp
fisttpl
jbe
pop
jge
mov
icebp
movsl
sbb
mov
popa
out
cld
ds
dec
pop
jp
push
test
adc
pop
cmc
xor
je
dec
push
xchg
lret
out
sahf
ftst
xor
lods
mov
ficoml
mov
stc
in
xchg
cmp
lcall
pop
stos
gs
sahf
cld
sbb
sub
and
insb
mov
rorl
in
and
aas
pop
pop
in
sbb
jns
popf
ret
sar
test
std
movl
cwtl
pushf
xor
dec
mov
out
test
stos
das
jnp
sti
ljmp
mov
scas
xlat
decl
mov
in
jns
leave
int3
and
int
or
int
adc
and
loope
pop
sub
ret
int
mov
ret
out
mov
cmc
xchg
pop
roll
insl
jne
and
aam
jbe
aam
dec
out
fsubrl
ret
pop
hlt
fdiv
push
jo
cmp
jge
iret
jnp
xchg
mov
jecxz
xchg
in
jns
push
fisttpll
ja
repz
adc
popf
pushf
cmpsl
mov
daa
sub
dec
xchg
xchg
cmc
jnp
xchg
pop
incl
mov
lods
pop
mov
std
ss
dec
scas
xchg
call
adc
push
jno
dec
mov
aad
mov
out
xchg
jbe
and
mov
or
pop
std
push
test
rcr
jno
idiv
test
add
push
icebp
ja
fbld
mov
sub
cmp
jl
jmp
scas
xor
pop
sub
iret
fdiv
add
sub
sub
cld
xor
mov
aas
xchg
repz
xchg
jne
mov
xlat
sbb
stc
cmp
scas
cmp
push
sbb
add
lods
lea
inc
mov
fildll
in
dec
dec
bound
or
shrl
dec
xchg
mov
std
inc
inc
or
ljmp
inc
std
inc
inc
sbb
inc
jb
shrl
xchg
pop
stc
les
rdpmc
ret
xor
xchg
mov
ja
cmpsb
cs
jp
jnp
pop
inc
sbb
pop
fnstsw
pop
fstl
push
rcll
lcall
jb
out
mov
dec
lock
test
dec
add
add
ret
lea
mov
mov
adc
jae
adc
hlt
test
rcrb
loop
sbb
xchg
cli
rorb
pusha
lcall
pop
ret
js
add
sbb
mov
imul
out
std
push
imul
lcall
inc
cmc
push
xchg
cmp
add
out
inc
in
pop
push
push
mov
xchg
push
mulb
mov
adc
cmp
ret
out
pop
cmpsl
lds
inc
out
jns
sub
adc
pop
jno
shll
js
out
loop
pop
loop
mov
mull
ret
enter
mov
mov
xor
jl
mov
test
and
mov
jne
popa
mov
arpl
in
loopw
push
fmull
fisubs
cmp
mov
aas
push
scas
push
sub
hlt
xchg
pushl
iret
xlat
out
andl
mov
inc
cmp
hlt
xchg
and
mov
mov
mov
inc
in
stc
je
iret
inc
xrelease
scas
lods
in
clc
fwait
inc
mov
es
popl
xlat
dec
aas
hlt
xorl
push
push
out
aam
sub
icebp
dec
jmp
mov
repnz
ret
inc
scas
add
repz
into
adc
xchg
xchg
clc
dec
jg
repz
jmp
fildll
inc
adc
pop
mov
dec
mov
xchg
cli
loope
loope
fistps
push
fcomip
out
cmp
rep
cwtl
pushf
mov
push
add
or
pop
loop
add
ficomps
cmp
jno
xor
xchg
in
jg
jne
enter
lock
mov
mov
jo
pop
aad
cltd
dec
fnstsw
or
sub
sar
inc
ljmp
cli
lret
pop
mov
sub
inc
jg
inc
repz
jb
fnstcw
or
mov
loop
adc
decb
mov
xchg
insl
stos
test
mov
inc
push
lods
sar
mov
frstor
shr
daa
das
hlt
ljmp
jae
lahf
jg
ljmp
sub
pop
dec
pop
jne
sti
cli
enter
cmp
sahf
and
out
mov
into
outsb
scas
repz
mov
test
lods
jl
mov
mov
negl
ret
repz
mov
and
loopne
jns
add
adc
int3
aaa
dec
add
xchg
xchg
repnz
lock
mov
cld
push
jmp
mov
js
cmp
scas
mov
das
dec
jne
scas
mov
test
hlt
jo
mov
repnz
push
cmp
loop
pop
cmpsl
jg
iret
pop
in
push
test
leave
push
ja
icebp
push
jle
xchg
shl
jg
xor
jbe
pop
int
incb
cli
dec
inc
cwtl
xchg
jb
mov
test
xchg
scas
mov
sbb
test
je
stc
mov
xchg
mov
ja
in
stos
rcl
jmp
xchg
fistpl
pop
repnz
xchg
and
mov
sbb
xor
push
icebp
cmp
push
in
das
repz
jg
cmp
cmp
xchg
movsb
andl
mov
dec
xchg
add
mov
int
jle
fcmove
xlat
xchg
icebp
pop
adc
jmp
push
clc
jnp
popf
push
out
in
push
and
scas
mov
jne
push
lods
add
or
dec
pop
adc
cmpsb
mov
pop
or
xchg
fsubr
sub
in
into
pushf
int3
pop
jnp
lock
cmp
push
rcr
xlat
dec
sbb
mov
movsb
xchg
pushf
jmp
in
fwait
daa
mov
pop
in
leave
ret
lock
mov
mov
cmp
fildll
mov
adc
pop
int3
xor
mov
leave
test
xchg
pop
mov
imul
loop
adc
test
negl
push
testb
and
add
loop
pop
int
jnp
adc
je
inc
bound
cmpsl
mov
cmp
popf
or
lock
cmp
test
cli
addr16
add
out
pop
pop
repz
movsb
popa
cwtl
mov
mov
aad
jge
pop
pop
jp
insb
dec
cs
les
and
cmp
and
lock
adc
daa
xchg
or
and
testl
mov
fadd
loop
add
in
or
xchg
jnp
adc
xchg
cli
jo
in
mov
lods
pop
xchg
fidivrs
jmp
mov
lods
lods
sub
addr16
pop
xchg
movzbl
dec
iret
jge
mov
dec
jmp
icebp
imul
cmpsl
xchg
jb
rcrl
pop
fisubs
or
in
pop
rorl
cmp
hlt
out
repz
push
pop
icebp
jmp
outsl
push
mov
dec
adc
mov
mov
imul
jge
sub
fstpl
fdivrs
jne
aas
mov
lret
mov
push
inc
pop
mov
push
cmp
pop
cli
movsl
out
js
ror
or
enter
dec
push
mov
push
repnz
stc
fimull
sti
cmp
idiv
iret
cli
mov
lods
je
fucom
lods
aas
jo
div
mov
neg
scas
xchg
fs
sbb
mov
lock
out
or
movsl
xchg
adc
repnz
mov
jmp
clc
xchg
fcomp
xor
mov
negl
loopne
and
cmp
subl
in
lret
sub
iret
hlt
mov
fstl
jns
outsb
adc
iret
push
fsin
xlat
fsubrs
xor
push
jne
aas
push
fists
pop
mov
andl
nop
dec
and
outsb
xorb
pop
stc
jb
pop
icebp
jg
mov
andb
inc
daa
fdivr
or
das
cmp
fbld
aaa
inc
aaa
daa
and
in
mov
push
jl
in
in
cli
mov
and
add
mov
je
jl
testb
ljmp
out
xlat
jmp
xlat
dec
sti
out
xchg
addb
xchg
lcall
adc
push
adc
inc
adc
xchg
std
cmpsl
jb
jg
jp
jne
or
scas
xchg
push
or
inc
cmp
in
ss
pop
out
fsubrs
sub
stos
lods
inc
push
add
xchg
int3
stos
shll
add
cmpsb
outsb
lods
scas
xchg
add
loop
adc
lods
jns
xchg
mov
mov
xchg
fimuls
and
xchg
aam
ljmp
mulb
xchg
daa
mov
aas
xor
divl
aaa
fldl
mov
out
jo
movl
add
xchg
sub
fucomi
je
leave
mov
or
inc
out
ffree
out
xlat
jne
into
jge
jno
push
stos
cmp
fcomps
cli
push
dec
popa
adc
out
add
or
arpl
outsl
gs
faddl
sub
out
inc
shlb
jmp
mov
xchg
xor
jne
mov
add
or
fcmovnu
push
mov
add
jg
aad
into
arpl
call
out
dec
jp
xlat
sbb
scas
div
into
sti
add
lahf
iret
or
inc
iret
sub
xchg
sbb
aas
iret
cmpb
in
jg
fistl
mov
inc
jmp
out
jmp
scas
pop
pop
ss
jl
stc
lods
addr16
sti
adc
mov
ret
subl
cld
ljmp
incl
mov
iret
or
into
out
int
fimull
ret
std
jns
fiaddl
mov
mov
test
or
sahf
testl
jb
lahf
add
dec
mov
sti
pop
or
ja
call
fucomip
sub
lods
mov
pop
repnz
mov
sahf
insb
pop
out
roll
scas
cld
bnd
mov
lds
dec
faddl
add
fstps
jle
mov
mov
cwtl
shll
lret
loope
dec
adc
sbbl
loope
sbb
xchg
arpl
in
std
lds
xchg
mov
push
out
mov
sub
cwtl
and
adc
cmp
push
popa
mov
or
cld
mov
jbe
iret
jnp
decl
stc
sti
sbb
loop
ficoml
mov
mov
idivb
lcall
clc
xlat
addl
incl
add
cld
xchg
jnp
xchg
scas
and
in
in
mov
jb
add
xchg
dec
movsb
sub
nop
std
stos
jge
xor
jecxz
aaa
jae
cmpsl
enter
jp
je
mov
out
sti
jle
cld
outsl
js
mov
cld
jmp
mov
cld
into
pop
push
cmc
call
mov
in
adc
and
out
imul
dec
in
scas
mov
cli
sbb
cs
xchg
inc
icebp
inc
jmp
pop
rclb
cltd
xchg
push
pop
pop
lds
jecxz
pusha
jl
adc
loopne
out
sbb
cmc
sarb
xor
test
sbb
repnz
pop
shlb
popf
xchg
push
sub
sub
xor
xlat
iret
sbb
or
into
hlt
jge
imul
mov
xor
icebp
out
out
xchg
outsl
js
jmp
lahf
into
int3
and
push
test
aas
idivl
cld
dec
ret
subl
mov
test
outsl
cli
fmull
outsl
mov
pop
jbe
inc
sbb
add
add
lcall
dec
aam
lcall
lods
sbb
inc
adc
add
mov
repz
outsl
in
or
xchg
shl
push
xorl
add
jp
scas
out
mov
ljmp
jbe
sub
jl
dec
pushl
ss
test
jg
aad
xor
mov
loop
movsb
aas
icebp
mov
cmp
mov
inc
cmp
jmp
jle
mov
das
sbb
ds
jl
out
and
sahf
push
jg
fcmove
cld
aaa
mov
add
aaa
iret
cli
daa
or
xor
aaa
aaa
ja
outsl
imul
rolb
int
add
jb
ljmp
insb
and
div
dec
push
incl
ja
stos
and
inc
mov
in
leave
adc
stc
adc
cmp
iret
fsub
scas
clc
push
lahf
in
dec
dec
xchg
push
mov
dec
push
in
loope
les
stc
aad
in
xchg
repz
cld
xor
int
jmp
jne
fdivr
cli
dec
adc
pushf
cmc
add
in
pop
scas
std
mov
sahf
mov
incl
imul
addr16
mov
imul
jg
lods
cmp
lahf
fists
jge
mov
out
pop
cmp
cli
and
mov
pop
mov
clc
std
lcall
imul
mov
pop
idivb
dec
jp
jnp
imul
fwait
out
lcall
int
mov
std
hlt
repz
jmp
icebp
cmc
sub
stos
repz
jmp
mov
ret
pushl
js
ds
mov
cld
stos
mov
cld
lods
lcall
shl
lahf
enter
ljmp
ds
test
jns
mov
push
out
or
cmp
in
scas
nop
xchg
inc
jnp
outsb
push
inc
shlb
jbe
outsl
ds
add
cld
jge
mov
fsubs
inc
mov
or
and
nop
popl
and
nop
in
data16
mov
in
xchg
call
mov
lea
push
xchg
dec
loopne
sti
adc
lcall
out
pop
add
push
out
enter
jnp
jnp,pt
fdivl
mov
lahf
filds
lods
sub
xor
lods
mov
ds
xchg
dec
adc
mov
ficompl
into
mov
inc
push
dec
jl
push
xchg
mov
sahf
cwtl
fsubrl
in
sti
dec
mov
fisttpll
scas
mov
outsl
jge
int
out
sbb
js
mov
lods
out
out
mov
fdivp
outsb
popf
xor
push
xchg
in
xchg
mov
jnp
cmpsb
ficompl
mov
fbld
movsb
hlt
in
mov
aas
jge
movsb
js
and
sub
test
andb
shr
xadd
fucomip
jns
xor
inc
cwtl
out
mov
idivl
mov
jge
and
cmc
dec
mov
sti
xor
lods
pop
stc
dec
fistps
xchg
adc
das
xor
xor
mov
jge
xchg
bound
cmp
jle
xchg
or
imulb
and
jmp
xlat
xchg
xchg
gs
ljmp
imulb
fdivrp
ret
dec
cmp
adc
rol
popf
mov
dec
and
mov
jb
out
dec
xchg
mov
insb
push
lret
pushf
adc
hlt
sbb
xchg
addr16
jl
dec
out
push
xchg
ss
jns
std
add
fidivrl
xchg
pop
std
sti
dec
cltd
cmp
pop
jg
mov
jb
lock
repnz
cmc
lock
inc
lea
xorb
in
jg
fwait
loopne
shrb
push
into
je
mov
gs
loopne
jmp
sub
push
std
loop
test
mov
pop
test
xchg
dec
xor
ljmp
fidivrs
neg
jg
cld
fldl
int3
dec
push
inc
out
jecxz
push
inc
clc
popf
hlt
cli
js
mov
lea
insl
jg
push
add
mov
out
cmpsb
push
cmc
push
jl
adc
fildll
sarl
mov
stos
shll
mov
xchg
jnp
ja
imul
rcrl
rorl
rorl
add
aaa
mov
sahf
iret
cs
sbb
aam
add
fmulp
fxch
stos
into
pop
into
push
into
and
push
into
bswap
insb
fiadds
add
adcb
push
int3
add
repnz
fmulp
fxch
test
xchg
lret
insl
lret
pop
lret
es
sbb
or
pop
add
add
lret
cmpsl
lret
test
leave
jge
ja
jb
gs
pop
leave
dec
addb
jne
sub
pop
leave
adc
add
cmc
aad
ror
enter
add
enter
sti
ffree
rol
mov
mov
outsl
pop
push
aas
cs
adc
add
mov
mov
lds
lds
int
mov
les
les
add
add
in
rol
ret
push
push
ret
mov
ret
pop
ret
ss
dec
add
ret
add
ljmp
add
ret
inc
add
pushf
inc
sub
lds
push
lds
add
nop
call
les
les
sti
ret
fcmovb
aad
lods
ret
cmpsl
ret
pushf
ret
xchg
ret
inc
ret
and
add
add
pop
ret
adc
fcmovnb
ret
push
ret
test
jo
push
shll
add
mov
aas
shlb
out
jbe
shl
add
scas
stc
iret
in
pop
into
inc
into
add
clc
int
int
ja
str
xchg
int
int
int
int3
fmul
pop
int3
popf
add
add
sbb
in
mov
lret
push
lret
inc
lret
cmp
sbb
adc
lret
add
ret
lret
mov
stos
lret
cwtl
lret
repnz
add
lret
dec
lret
das
lret
adc
or
leave
ret
mov
xchg
leave
nop
leave
test
cmp
and
cmp
test
fsubl
inc
test
enter
enter
cmpb
enter
enter
stos
adc
jge
jb
pop
cmp
add
movb
in
mov
pop
cmp
xor
lcall
jbe
inc
push
nop
pop
pop
les
push
ljmp
sbb
mov
ret
jae
imul
pop
ret
dec
ret
aaa
ret
mov
insl
rcrl
rcll
or
scas
rorb
shlb
sbb
and
lock
das
stc
repz
fcmove
mov
iret
jle
lret
lret
add
mov
mov
stos
repnz
int
int
int
int
and
push
int3
lahf
lret
xchg
lret
xchg
jnp
and
sbb
lret
add
add
hlt
mov
or
pop
lret
aad
lret
leave
ror
leave
cmpsb
leave
pushf
add
leave
or
mov
enter
enter
enter
add
enter
enter
enter
enter
repnz
rol
pop
movl
les
add
sahf
aam
iret
mov
les
les
les
fadd
shrl
shll
or
mov
dec
rcr
mov
jbe
jo
inc
sarb
add
out
sbb
cmp
xlat
into
lret
into
ret
into
mov
mov
add
add
movsb
into
lcall
into
dec
into
cmp
xor
and
sbb
adc
or
pop
into
cld
int
int
add
or
sub
pop
add
pusha
lret
pop
lret
mov
add
lret
cli
leave
es
mov
enter
enter
dec
mov
sbb
add
lds
dec
lds
inc
lds
lds
test
add
jno
pop
or
scas
push
ret
inc
ret
ds
and
sbb
sbb
cmp
add
adc
and
into
iret
mov
add
and
into
lea
inc
int
int
int
int
int
int3
pop
int3
sbb
pop
pop
shll
int3
ret
lret
jbe
imul
and
jno
int
ret
lret
and
out
leave
in
mov
outsl
leave
jb
les
fs
push
leave
dec
leave
inc
sahf
cs
and
sbb
adc
add
sti
mov
enter
enter
push
mov
movsl
enter
add
das
push
enter
xchg
imul
enter
add
push
enter
test
pop
movl
daa
and
sbb
or
xchg
pop
add
mov
lds
pop
in
enter
and
push
vorpd
or
mov
pop
jb
or
les
mov
jnp
jne
les
cs
push
cmp
inc
data16
mov
ret
fwait
ret
xchg
ret
mov
jge
enter
je
outsl
ret
popa
ret
pop
ret
push
ret
dec
ret
inc
shlb
ret
push
ret
adc
stc
ret
jmp
add
add
out
loope
fadd
ret
lods
ret
xchg
ret
xchg
jns
pop
jae
add
ret
inc
ret
sbb
adc
or
add
repnz
mov
nop
roll
adcb
rcll
shrl
rcr
rorb
subb
call
jmp
clc
int
mov
pushf
iret
lea
add
add
js
arpl
dec
iret
cmp
mov
into
xchg
outsl
into
cs
sbb
dec
mov
int
int
int
ret
outsb
inc
or
add
int
int
int
int
int
int
int
loopne
dec
int
int
dec
add
ds
pop
int
int
int3
push
dec
mov
ds
add
loopne
lret
ds
ror
mov
leave
imul
sbb
mov
mov
add
add
test
push
pop
or
stc
jmp
add
inc
aas
ffreep
lds
lds
lds
add
mov
int3
les
les
ja
popa
les
ret
jmp
push
stc
and
cltd
ret
xchg
mov
sub
inc
or
jns
mov
aad
iret
addr16
jp
xchg
mov
ret
insl
ret
popa
ret
push
jns
add
dec
ret
inc
push
aas
lock
hlt
stc
push
iret
add
sahf
add
ljmp
pop
mov
daa
enter
inc
xchg
clc
outsl
inc
test
mov
inc
ljmp
inc
mov
das
push
xlat
inc
jmp
inc
addl
out
es
shl
mov
mov
dec
ljmp
psadbw
out
loope
cwtl
ljmp
lahf
stos
clc
lahf
decl
push
cld
pop
loopne
fisttps
sar
mov
movsl
clc
lahf
iret
cld
pop
outsb
loop
ud0
dec
aaa
sbb
push
lahf
clc
std
ljmp
ljmp
call
pushf
cmp
fcoml
xor
insl
dec
es
insl
std
and
loope
sahf
stos
outsl
clc
mov
data16
into
or
cmp
inc
into
jmp
out
loopne
clc
pop
les
adc
les
push
jl
cld
jg
pop
xchg
gs
movsl
mov
lods
fsubr
into
mov
jge
pop
lret
mov
mov
push
dec
mov
mov
ja
push
inc
xchg
aad
fs
in
into
loopne
mov
mov
jmp
sti
ds
xlat
mov
mov
ljmp
and
test
fbstp
aaa
add
in
mov
and
push
nop
lcall
out
pop
repz
cmpb
mov
mov
lcall
scas
lods
mov
add
stos
and
cmp
mov
mov
or
sti
enter
xor
inc
jmp
test
cmc
pop
mov
fcoml
mov
jg
push
test
lods
ret
pop
aam
lock
daa
jne,pt
scas
pushf
dec
sub
decb
mov
aam
mov
mov
popf
mov
call
lds
jp
scas
xchg
jg
stc
hlt
xchg
aas
lahf
inc
jge
add
or
mov
stc
loop
fwait
addr16
cli
inc
daa
jp
ret
mov
cmp
mov
mov
fcomps
lods
mov
mov
out
jmp
jne
or
imul
and
movhps
orb
fidivrl
inc
or
in
flds
mov
test
out
mov
outsb
lods
test
out
stos
cld
lea
or
mov
mov
xlat
xchg
mov
or
cmp
test
xor
movsb
pop
add
es
cmp
mov
cmp
dec
repz
sbb
pop
and
std
dec
or
jmp
xchg
in
push
lahf
fisubs
jge
lahf
add
add
and
loopne
xchg
cs
dec
sti
lret
into
mov
mov
mov
in
xchg
jne
pop
inc
jae
mov
out
jl
stc
das
ja
fisubrs
fistps
pop
jle
sub
cld
sbb
xor
gs
les
ja
dec
pop
not
adc
adc
int3
xchg
fisubl
mov
stos
test
filds
test
and
mov
popa
ds
std
clc
aad
es
add
in
sub
ret
dec
push
pop
mov
sti
adc
js
add
mov
jmp
out
ljmp
in
lds
dec
es
inc
inc
xchg
movsb
cwtl
movsl
add
push
dec
adc
ja
lea
sti
jecxz
int3
ss
add
aad
jl
scas
inc
xlat
mov
mov
jge
out
scas
jecxz
mov
pop
orb
sbb
fiadds
lahf
in
add
shlb
pop
test
pop
xchg
pop
repnz
into
into
and
jecxz
lock
pop
or
cmp
stos
jecxz
mov
daa
out
jmp
rcrl
cmpsb
cmc
cwtl
js
cmp
call
cli
divb
sbb
idivb
insb
idivl
sbb
mov
lahf
ja
add
cmpsl
iret
push
insl
mov
scas
fisubrl
mov
clc
jnp
xchg
stos
inc
icebp
mov
lods
or
movsb
cmp
jg
mov
jnp
ss
scas
mov
mov
fld
mov
out
mov
outsb
in
rcr
mov
decl
cli
cmc
or
fcmovb
outsl
pop
mov
fistps
stos
nop
fistpl
inc
cld
stos
or
shrl
jb
aam
js
xchg
jmp
stos
dec
stc
dec
cld
dec
into
stc
scas
pushf
add
jmp
jb
inc
dec
fisttpll
xchg
add
add
inc
dec
or
inc
repnz
mov
test
stc
push
out
lret
cwtl
push
add
fdivr
dec
stc
dec
add
lea
dec
add
dec
repnz
dec
hlt
dec
out
filds
cmpsl
and
jnp
add
fcompl
push
push
adc
cmpsl
cli
fcoms
add
push
add
aas
jae
aam
lods
cmpsb
dec
call
xchg
mov
xchg
shr
mov
fsubl
lcall
sbb
add
lock
mov
fnstsw
call
inc
mull
adc
fildl
and
cmp
clc
push
jl
pop
cmp
rcrb
fwait
cs
adc
fnsave
jns
out
xor
mov
xor
push
clc
cmc
shll
sbb
jg
enter
aam
jmp
mov
inc
icebp
mov
in
inc
push
adc
inc
enter
enter
mov
in
lahf
clc
and
inc
out
fisubs
adc
sbb
fstp
out
dec
adc
andb
inc
dec
mov
pop
rcll
outsb
mov
out
or
jmp
mov
jge,pt
imul
out
cmp
jg
push
ds
mov
cmp
sti
pop
aas
clc
sub
or
mov
jb
scas
cmc
xchg
mov
pop
xchg
jmp
jg
add
push
inc
ljmp
nop
loopne
fldl
mov
dec
inc
aad
in
jle
sbb
mov
jmp
hlt
push
cli
jmp
out
repnz
mov
mov
repnz
incl
cmp
xchg
stc
daa
daa
ja
ljmp
notl
call
pop
pop
jecxz
pop
sub
cmp
jbe
std
inc
js
loopnew
mov
lea
ja
cmp
idivb
sti
and
test
push
aad
sti
inc
push
xchg
lods
test
fstl
jmp
out
aad
cmpsl
add
push
xchg
mov
push
jle
adc
call
negl
and
outsb
addr16
div
dec
mov
jbe
lock
jns
loop
out
or
je
pop
stc
push
cmp
cmc
sti
iret
std
test
imul
xchg
out
out
out
mul
jmp
aas
mov
lock
iret
ljmp
test
loope
mov
clc
jp
fwait
fwait
push
call
mov
mov
mov
sti
roll
mov
push
iret
in
repz
cwtl
aad
in
sbb
repnz
out
or
fdivs
in
ja
fcomps
repz
inc
lahf
filds
pop
stc
sti
frstor
in
jnp
repz
sub
out
push
div
add
aad
jmp
sti
fnclex
aam
jnp
sahf
idivb
je
jnp
pushf
ds
mov
jmp
jmp
je
jge,pt
rolb
xchg
lcall
clc
dec
xchg
cli
adc
lcall
in
gs
aam
mov
adc
or
inc
sahf
out
pusha
mov
pushf
mov
mov
mov
out
jle
roll
xchg
pop
add
jle
mov
mov
xchg
mov
push
mov
push
mov
jle
std
cmpsb
scas
in
ja
out
call
mov
sti
lods
ljmp
xor
call
int3
inc
ds
div
lahf
mov
daa
sarb
inc
jmp
sarb
fsubrl
xchg
scas
jecxz
mov
clc
test
outsl
jns,pt
sub
cld
ss
and
movsb
add
test
mov
pop
aad
ret
inc
sub
mov
aaa
scas
pop
movsb
adc
repz
xchg
xor
clc
xorb
pop
mov
adc
daa
ret
repnz
hlt
sub
xchg
stc
or
repnz
add
jmp
ljmp
cmc
push
shlb
xchg
jle
mov
cmp
mov
sahf
hlt
fdivl
lcall
xchg
cwtl
out
pop
xlat
sti
xor
out
fidivs
xchg
out
sbb
mov
sub
test
test
nop
fwait
in
rorl
mov
out
daa
cmp
hlt
dec
mov
mov
es
push
xchg
in
test
xchg
fidivs
mov
out
and
nop
xchg
jmp
xchg
lahf
pop
jns
mov
adc
jae
fdiv
cld
xchg
xor
jns
iret
adc
xchg
ljmp
mov
push
mov
push
nop
out
xchg
mov
out
ret
jg
enter
lret
sti
mov
lahf
mov
xor
scas
in
push
movsb
mov
test
lods
testb
mov
hlt
lcall
sti
adc
jbe
mov
mov
lret
sti
pop
hlt
ljmp
fidivl
xlat
push
inc
cwtl
mov
dec
sbb
jb
or
mov
jo
movsb
adc
inc
cld
lret
popf
dec
inc
push
adc
sbb
mov
rolb
dec
cmpsb
dec
mov
lcall
xchg
fdivr
mov
mov
cld
lret
mov
xchg
enter
xchg
insb
loopne
dec
inc
inc
lcall
in
push
mov
ljmp
and
xchg
ror
iret
cli
xchg
adc
fs
int3
xchg
push
xchg
bound
loopne
hlt
cwtl
mov
popf
out
popl
cwtl
jo
call
xlat
push
int
fs
inc
xchg
cmc
xlat
mov
mov
lock
clc
hlt
xchg
jge
mov
jo
cmpsb
dec
cmp
xchg
push
cmp
and
mov
fwait
loopne
notl
pushf
decl
fidivrs
lret
icebp
shrl
mov
loopne
jbe
mov
loopne
inc
ficompl
call
xchg
test
lcall
mov
movsb
cmpsb
lret
push
add
repz
int
mov
push
push
int
jl
add
mov
int3
les
lret
and
and
inc
xchg
lret
jge
fisttps
fwait
leave
cmc
add
xchg
cmp
enter
jl
jle
sbb
cs
push
xchg
xor
sub
adc
add
jge
ja
ret
and
lds
call
ret
xchg
ret
adc
ret
push
jne
loop
ret
pop
ret
std
rcr
jle
test
shll
pop
mov
dec
rcrl
addr16
jno
push
cld
out
decb
aas
in
dec
jmp
lea
mov
dec
decb
inc
fisubl
imul
call
repz
imul
decl
call
out
popf
divl
fildll
aad
pushl
icebp
push
adc
adc
dec
dec
push
adc
stc
push
xor
sahf
stos
ss
je
testl
jle
cld
jl
hlt
lahf
aaa
pop
lock
std
repnz
repnz
xchg
xor
dec
sbb
mov
test
xchg
test
out
mov
sub
inc
rcrb
cmpsl
dec
push
inc
call
stc
hlt
dec
repz
es
jmp
lock
pop
or
push
cltd
loop
pop
mov
ret
dec
lods
mov
mov
sarl
hlt
sti
fwait
push
loope
xor
push
cmpsl
pop
jl
mov
in
aas
pop
dec
pop
in
cmp
cld
and
adc
out
repnz
in
idiv
ljmp
add
jmp
add
inc
add
call
int
jmp
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
pusha
mov
mov
xor
mov
inc
cmp
jb
popa
jmp
