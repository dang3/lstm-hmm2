sbbl
mov
iret
incl
xchg
gs
imul
xchg
sbb
in
fcmovnbe
lds
stos
fwait
xorl
lret
mov
pop
dec
aaa
sub
cltd
les
xchg
gs
add
mov
incl
jmp
add
mov
lea
rcrl
js
js
xchg
repnz
stos
mov
out
adc
add
lcall
lea
cwtl
lcall
lcall
mov
imul
xchg
fwait
call
cwtl
xchg
xchg
sahf
xchg
fwait
call
push
test
cwtl
popf
mov
iret
sahf
lcall
lcall
lcall
jo
insl
ret
xchg
fwait
fwait
testl
rcrb
leave
hlt
mov
and
es
in
iret
lret
je
jle
xchg
idivl
inc
aas
lcall
add
test
add
mov
mov
test
por
scas
lods
cmp
mov
shrl
cmp
ss
mov
stos
cld
xor
xor
xchg
xor
xor
das
hlt
cs
cld
sub
and
sub
sub
daa
mov
es
enter
scas
cld
push
adc
xchg
sub
cld
sbb
xchg
fs
sbb
xchg
adc
push
xchg
inc
push
adc
adc
femms
lock
gs
or
or
or
pop
add
cld
add
add
xchg
or
and
cld
pop
cmp
subl
aaa
out
paddusw
or
add
in
pop
les
mov
test
je
adc
je
idivl
mov
cmp
sti
int3
aas
adc
jb
addr16
cmp
xlat
stos
scas
test
inc
adc
add
mov
aas
mov
in
ljmp
dec
cltd
jae
jmp
mov
icebp
repz
out
sbb
pop
rolb
mov
xor
push
orl
mov
dec
adc
dec
or
test
add
mov
dec
dec
sti
xchg
mov
out
repz
notl
je
jbe
stc
pop
cli
adc
and
adc
loop
add
testl
sar
cld
xchg
mov
sbb
xchg
lock
mov
inc
add
ja
int3
and
or
loop
out
fbld
pushf
repz
pop
les
es
push
xlat
cld
xchg
movsb
mov
adc
adc
jb
scas
repz
jmp
adc
es
movsb
adc
fdivrs
or
cltd
inc
mov
call
xchg
jmp
or
test
js
xchg
mov
repz
sub
lret
xor
in
pop
scas
jae
inc
daa
jns
sub
in
xor
leave
shll
lock
popf
xor
xlat
bnd
repz
push
pcmpgtd
cmpsl
mov
testl
aaa
jp
mov
in
repz
push
repnz
cmpsl
sti
movsl
cltd
test
jge
add
adc
repz
pop
mov
fistps
pop
mov
ret
adc
pop
mov
mov
arpl
or
idiv
mov
clc
or
popf
adc
daa
ret
dec
dec
push
cmp
repz
pop
sahf
ja
popf
xchg
cmpsb
sub
adcb
mov
outsb
out
stc
jne
sub
mov
out
mov
sub
adc
push
mov
xchg
pop
pop
dec
cmovnp
std
ljmp
iret
jmp
lock
ljmp
cmpsl
idiv
fildl
jb
push
mov
pop
mov
inc
and
and
aad
movsl
in
mov
repnz
mov
aad
inc
adc
sub
mov
inc
aam
pop
or
outsl
ljmp
push
pop
and
cmp
ds
pushf
cmp
and
mov
lods
cmp
xchg
dec
dec
mov
cmp
scas
mov
testb
push
stos
fsubs
arpl
arpl
pop
dec
shrb
inc
pop
mov
das
test
xchg
outsl
push
add
sti
aas
into
add
inc
push
jl
add
mov
mov
or
lods
test
jb
jmp
scas
sti
jg
pop
out
aas
inc
pop
orb
out
jb
push
repnz
cltd
push
inc
xor
lods
xor
and
scas
jne
adc
clc
lret
xchg
push
ljmp
xlat
dec
mov
stos
popa
inc
jecxz
ds
pop
sub
cmp
les
movntq
jge
int
cli
sub
pop
iret
test
adc
cli
je
jmp
movsl
cwtl
xlat
jnp
out
cmp
dec
iret
subl
or
inc
push
xchg
cmpsl
sub
add
xchg
daa
and
sub
cmp
test
gs
es
add
mov
mov
fimuls
lret
mov
lret
iret
cld
mov
mov
cli
lcall
mov
idiv
mov
xchg
cmc
mov
ja
hlt
stc
xor
dec
inc
mov
jl
jbe
dec
cli
hlt
adc
call
loope
lods
pushl
cld
ljmp
ss
imul
pop
sbb
scas
jl
inc
fs
sti
pop
sbb
loop
cmpsl
jle
jns
or
bound
inc
adc
mov
adc
add
xor
xor
mov
lret
mov
xor
addr16
cs
push
dec
dec
pop
lods
mov
inc
cli
and
dec
add
in
xchg
sub
jb
ljmp
test
cld
inc
pusha
xchg
add
lods
ja
ljmp
aas
jl
dec
sbb
mov
cmp
inc
jnp
xchg
mov
lea
lock
jnp
outsb
ret
cmp
add
push
les
stc
fwait
pop
add
imul
sub
add
stc
xchg
repnz
add
add
push
mov
cmp
cltd
add
push
or
xlat
das
xchg
inc
push
repnz
and
xlat
inc
testl
hlt
xchg
dec
test
pusha
rcr
xchg
add
leave
in
adc
in
fcomi
dec
or
jb
xchg
cltd
fwait
nop
jp
xchg
gs
xchg
mov
jle
dec
insl
iret
call
stos
mov
xchg
hlt
cmp
xchg
adc
hlt
dec
and
push
mov
lahf
loopne
xchg
arpl
bnd
xchg
daa
dec
sarl
add
in
mov
adc
les
push
cmp
xchg
push
jl
aaa
xchg
jae
popf
outsb
js
cmp
stc
push
mov
xchg
stc
cmp
lcall
loope
scas
stc
pop
mov
popf
shl
xchg
cld
negb
aaa
jns
popf
sbb
mov
sub
cwtl
ja
daa
jmp
pop
popf
inc
add
jb
scas
stc
pop
inc
xchg
dec
or
repnz
out
in
lods
fadd
fwait
xchg
pop
loope
dec
xchg
sbbl
jno
loopne
sbb
int3
out
push
push
test
lcall
hlt
adc
adc
movhps
ret
inc
jle
cmp
std
push
or
shll
not
xchg
pop
int3
pop
dec
cmpsl
int
push
std
mov
add
aas
fadd
sub
testl
call
jnp
fidivl
xor
pop
jl
xchg
hlt
outsl
out
imul
push
jb
cmp
sar
cmp
aam
call
je
repz
je
sub
dec
sub
mov
bound
sbb
or
out
cld
aaa
push
inc
repz
iret
popf
jp
mov
pop
imulb
decl
mov
sub
xchg
inc
mov
sarl
std
std
ljmp
out
std
push
aad
stos
incl
sti
jp
cld
ljmp
xor
cld
push
pushl
sti
cld
add
inc
and
daa
lahf
loopne
mov
sbb
icebp
decl
xor
inc
mov
stos
xchg
xchg
inc
inc
add
add
xchg
fistps
fistps
xchg
fists
fists
nop
fwait
lcall
xchg
imul
cld
adc
inc
data16
cmp
data16
inc
cmp
dec
data16
adc
inc
data16
clc
lods
xchg
inc
ret
pushf
xchg
enter
cld
mov
push
mov
push
mov
icebp
fdivp
stc
repz
inc
call
clc
out
cld
cli
clc
std
lcall
clc
scas
repz
cld
les
std
aad
out
clc
stc
icebp
in
inc
dec
incl
test
mov
in
mov
aaa
cmp
outsl
loope
popf
mov
repz
jg
rcrl
lahf
xor
jmp
pop
out
and
rorl
notl
std
jecxz
outsb
mov
clc
gs
test
inc
into
cld
jae
sbb
mov
int
into
loopne
xchg
adc
cld
push
dec
cmp
pop
push
repz
iret
add
aad
gs
xchg
gs
arpl
dec
inc
xor
pop
adc
mov
gs
xchg
gs
jno
test
fwait
stos
sub
lcall
imul
jae
xchg
or
decl
fidivrs
push
dec
xchg
hlt
rcr
int
aad
int3
frstor
addr16
daa
movsb
das
sub
ret
mov
in
sub
add
inc
xlat
jp
inc
repz
imul
data16
jg
and
neg
in
out
xor
data16
rcll
jmp
lcall
int
mov
dec
lock
mov
in
and
jnp
inc
ss
aas
jg
pop
out
jmp
lahf
mov
icebp
fdivr
daa
aam
jecxz
imull
in
scas
pop
and
daa
xor
mov
add
sti
ljmp
mov
sahf
sub
and
mov
ret
lock
mov
mov
out
jne
cmp
jb
mov
shlb
sub
sahf
out
cmp
inc
inc
cli
mov
mov
loopne
dec
scas
stc
pop
fcomi
cmp
and
fldt
call
aas
sub
cmpsl
cmpsl
rorb
mov
inc
xor
jg
shr
int3
dec
cmpsb
jnp
outsb
jmp
xlat
cmp
arpl
push
dec
push
int3
and
mov
mov
pop
imul
lret
jg
cwtl
and
fcoml
dec
ljmp
stc
pop
shlb
mov
jmp
sarb
mov
cmp
fistpll
mov
pop
in
out
ljmp
loopne
jnp
mov
lock
faddl
clc
fisubrs
inc
out
idivl
pop
cli
testb
or
inc
cld
mov
mov
in
xor
pop
sub
inc
xchg
cwtl
dec
out
je
jns
mov
enter
adc
testl
cld
mov
loope
adc
lcall
pop
lahf
add
lods
test
lret
sbb
imull
mov
mov
repz
xchg
faddp
mov
js
cmpb
jle
pop
test
and
daa
into
mov
leave
and
cmp
add
outsl
xchg
mulb
push
scas
rcll
or
call
adc
iret
scas
int3
imul
sti
dec
incb
mov
call
cmp
fstpt
push
in
inc
or
cmpsb
in
add
jp
jp
test
xlat
mov
mull
adc
adc
js
mov
loop
or
mov
insb
xchg
sub
and
loop
fdivr
mov
fists
je
pop
mull
mov
dec
mov
lahf
lock
movsl
sub
rcll
xlat
mov
div
out
movsl
pop
in
repz
pop
jge
jbe
clc
stos
push
adc
mov
das
orb
or
repz
ret
sub
and
addr16
lds
lods
pop
ret
in
cmp
add
out
repnz
and
dec
push
sub
loop
cmovs
dec
cmp
imul
lahf
xchg
pop
sar
fwait
pop
mov
and
sbb
fwait
xor
mov
pop
mov
dec
arpl
xchg
lea
dec
rcrl
mov
stc
lret
xchg
lret
mov
and
in
pop
lret
push
mov
int
outsl
add
inc
hlt
xor
ret
divl
scas
cli
daa
scas
out
shll
inc
jl
jmp
mov
sbb
pop
xchg
mul
cmc
rol
shr
sub
xor
lret
sbb
clc
xor
lods
lods
cld
adc
out
jmp
mov
push
div
gs
jns
sarl
pop
mov
cmp
subb
pop
dec
push
aad
mov
sub
adc
sti
cmp
fcomi
xchg
pop
lods
mov
mov
jp
add
sti
cltd
jle
and
ret
lret
shl
mov
push
cmp
and
sub
ret
jl
mov
lock
shlb
or
je
xchg
dec
add
fdivrs
mov
mov
and
in
testl
loope
xchg
and
and
cld
and
mov
scas
mov
add
je
je
in
aad
xchg
mov
cwtl
jg
sahf
in
idiv
jl,pt
std
scas
and
roll
cmp
pop
jl
sti
jl
adc
sbb
add
scas
iret
cmp
mov
mov
jbe
and
adc
push
mov
repz
cli
je
mov
aas
ja
cmp
jl
out
jno
mov
lcall
cs
adcl
dec
mov
fdivr
ds
mov
andb
out
cltd
outsb
mov
cltd
nop
bound
cld
mov
imul
hlt
sti
mov
mov
loope
std
mov
sbb
out
hlt
addps
shr
inc
pop
mov
mov
jne
add
mov
push
xchg
mov
iret
decb
je
in
mov
sbb
mov
mov
mov
mov
sub
mov
stos
lods
add
mov
in
sahf
pop
cmpsb
out
sbb
je
and
roll
add
push
pop
cld
mov
rcl
dec
popl
jecxz
push
cmpsb
rep
ja
inc
xchg
addl
xlat
cmp
xchg
setno
dec
je
repz
jecxz
cmp
jne
aaa
push
movsb
stc
pop
adc
popf
pop
and
add
gs
neg
int3
xor
pushf
into
jle
mov
pop
nop
sti
popa
fs
jnp
mov
xchg
sti
xchg
out
adc
mov
mov
add
cmc
notl
scas
cli
pop
std
dec
add
mov
adc
fs
cmp
pushf
cmp
dec
je
jns
je
ret
pop
and
nop
mov
mov
movsb
mov
sub
in
fsub
mov
out
inc
iret
or
pop
je
add
or
cld
pop
jno
es
fldl
mov
cld
or
jmp
jmp
jns
popf
imul
pop
mov
pop
cmp
pop
cmpsl
out
mov
sub
inc
cld
out
jne
negl
xchg
cld
adc
ret
arpl
cmp
cmpsb
adc
mov
jg
xlat
push
push
shll
xchg
inc
push
push
or
or
or
pop
push
push
aas
repz
adc
add
mov
and
dec
mov
ds
notb
mul
icebp
inc
int3
jbe
je
pushf
dec
sbb
inc
mov
push
or
mul
pop
xchg
sbb
xchg
in
inc
incb
cli
xor
and
mov
scas
pop
mov
xor
mov
xchg
mov
sti
js
cli
orb
repz
ficoml
scas
fimull
daa
cmpsl
call
cli
inc
in
ljmp
sti
leave
push
mov
cmpsb
mov
rcl
in
sub
lahf
in
in
mov
cmp
fdiv
fcoms
shr
aas
push
fbld
add
xchg
add
xchg
lcall
nop
pushf
mov
xchg
add
mov
fwait
mov
popf
lea
orb
daa
add
mov
fwait
mov
mov
lcall
mov
rol
cmpsb
jl
dec
movsb
icebp
sahf
mov
fldl
xchg
mov
pushf
lock
in
xchg
mov
sub
xlat
jnp
test
repnz
lcall
sahf
xchg
jecxz
lea
cwtl
fidivs
mov
xchg
mov
shlb
and
stos
xchg
repz
les
lea
jge
in
cld
scas
xchg
dec
mov
out
pushl
jb
xchg
or
sub
nop
jns
mov
testl
pushf
mov
mov
cmp
adc
sahf
dec
mov
mov
lock
mov
jo
jl
dec
rcl
and
mov
sub
cltd
stc
lcall
inc
lods
cmp
xchg
xchg
repz
mov
inc
jl
daa
popf
pop
jmp
jo
int
and
rcl
xor
aad
lea
stos
nop
nop
xchg
xchg
data16
out
xchg
sahf
mov
iret
pop
nop
ljmp
mov
jle
rolb
loope
mov
dec
adc
inc
inc
rolb
out
shl
test
mov
lods
mov
sahf
push
sahf
mov
mov
sub
stos
lods
in
call
enter
push
pusha
xchg
lcall
mov
mov
fs
jp
xchg
je
lret
mov
pushf
nop
roll
mov
mov
cltd
push
inc
and
xchg
pop
lods
ljmp
sbb
xchg
inc
sub
inc
mov
call
ljmp
int
lcall
mov
aaa
lret
sbb
std
dec
outsb
jbe
outsb
xchg
push
jns
iret
mov
in
data16
jb
std
add
fdivs
idivb
std
testb
hlt
in
jmp
mov
push
into
fdivs
mov
mov
add
xchg
into
test
ja
push
arpl
xor
pop
into
add
ljmp
push
iret
int
mov
lahf
int
int
int
int
int
int
int
int3
ljmp
add
int3
mov
int3
push
int3
add
icebp
lret
loopne
lret
jae
gs
push
lret
out
lret
movsl
das
add
add
xchg
lret
jo
adc
sti
leave
out
leave
out
pushf
leave
popa
leave
cmp
sub
adc
pop
add
add
leave
jmp
in
fcmovne
aam
leave
enter
enter
enter
enter
fadd
add
add
cmpsb
sahf
xchg
movl
inc
loop
mov
les
les
test
ret
rol
ret
xchg
ret
dec
ret
inc
ret
aas
ret
fadd
enter
or
add
ret
imul
ret
push
ret
or
scas
incb
add
stc
pop
push
arpl
cs
or
js
in
lahf
insl
js
clc
push
mov
js
lods
mov
js
ret
enter
js
fmull
xchg
push
js
push
and
and
popl
js
or
shl
movsb
std
push
mov
mov
inc
clc
xor
std
push
lds
les
clc
rorl
pop
in
jl
mov
xor
jmp
sahf
stc
aas
adc
push
clc
pop
call
jae
lods
pushl
jl
jge
jl
aas
add
cmpsl
lret
aas
rclb
sub
push
cld
imul
xchg
dec
lods
jno
cld
adcl
jmp
enter
inc
aam
mov
jg
gs
outsl
call
xchg
inc
jno
ret
outsl
pop
pop
cld
inc
cmp
pop
sub
jecxz
sub
mov
mov
lret
mov
lret
gs
cmp
fsubrl
pop
xchg
gs
scas
cmpsl
cltd
mov
pop
xchg
gs
pop
dec
aaa
daa
adc
add
dec
in
ret
sub
mov
mov
xchg
xchg
sub
mov
pop
inc
cmp
sub
cld
cmpsl
mov
xlat
repz
mov
daa
add
daa
cmp
lret
mov
pop
insl
test
mov
in
add
stc
inc
test
mov
jecxz
lcall
loopne
cld
sub
inc
gs
xchg
adc
std
lock
jmp
xchg
lret
ret
mov
movsl
pop
xchg
gs
fwait
xchg
xchg
gs
xchg
imul
dec
je
cmp
mov
hlt
imull
mov
iret
clc
pop
mov
mov
cld
mov
push
inc
clc
jns
popa
sub
hlt
pushf
xor
mov
fcomps
xchg
xchg
or
outsl
nop
dec
movsl
imul
je
jns
fildl
ret
in
and
mov
mov
xchg
lahf
es
mov
enter
mov
mov
aas
push
dec
mov
mov
jl
lods
cltd
pushf
mov
lods
mov
stos
test
lods
cwtl
aas
dec
adc
jge
cltd
mov
int3
pop
mov
mov
test
out
cwtl
mov
cmp
jns
mov
cld
xor
daa
idiv
pusha
out
lahf
clc
idiv
cld
out
cmp
sub
and
cld
lahf
mov
es
cld
mov
hlt
jp
mov
jecxz
fistps
cld
std
es
imul
les
ret
mov
shr
cld
ljmp
out
mov
cld
xchg
jnp
mov
loopne
aaa
icebp
lcall
cld
leave
cmpsl
push
clc
notl
cld
add
leave
adc
clc
incl
jbe
lock
cld
jecxz
pop
insl
mov
xchg
lcall
stc
mov
mov
loopne
add
cmp
lcall
lahf
pushf
pusha
decl
dec
clc
fucomip
mov
int
lock
test
xchg
fdivrs
jo
cmpb
lock
mov
cmpsl
dec
out
lock
loop
mov
adc
push
test
loopne
rolb
addb
mov
mov
mov
cwtl
hlt
mov
test
mov
cwtl
lock
jmp
iret
int
cld
add
cwtl
cld
dec
mov
test
dec
jno
clc
in
in
lds
mov
dec
jnp
scas
insl
outsb
add
mov
outsl
mov
mov
lea
adc
cld
mov
int
cmc
dec
sahf
or
mov
stos
rcrb
mov
and
incl
aam
and
xchg
clc
add
cld
jl
nop
jbe
mov
mov
hlt
xchg
mov
pop
icebp
je
pop
je
pushf
cmp
add
repz
sbb
jb
and
push
mov
in
dec
mov
inc
cli
add
scas
xchg
je
jle
pop
jbe
pop
in
stos
out
inc
push
or
daa
cli
dec
mov
hlt
jmp
xchg
rorl
dec
cli
jl
add
add
pushf
jecxz
jnp
bnd
mov
stos
adc
dec
jnp
sub
dec
mov
in
add
mov
enter
and
ficomps
addr16
dec
testl
daa
in
pushf
inc
out
std
cld
cld
xor
push
lods
pushf
ja
cmp
mov
lock
pop
xchg
lds
adcb
xor
cs
dec
add
into
leave
cmp
xor
push
hlt
cld
leave
or
das
cmp
call
hlt
into
fdivrl
leave
daa
jmp
daa
dec
sahf
cmp
movsl
test
mov
lock
iret
test
add
sbb
and
or
out
decl
xor
ds
adc
dec
cmp
cmp
inc
and
sbb
xor
sub
inc
push
aas
push
add
pusha
dec
cmp
sbb
cmp
ss
xor
xor
mov
dec
inc
dec
push
call
inc
xor
inc
bound
cmp
add
imulb
push
inc
pop
dec
mov
xor
testb
hlt
mov
cmp
fbstp
inc
add
loopne
das
and
dec
jb
sbb
dec
cmp
sub
push
in
cmp
adc
inc
pop
fildll
pop
int
dec
add
mov
push
dec
pop
inc
sbb
xor
xor
and
enter
sub
sub
fisttps
push
sub
pop
add
sub
lods
fistpll
sub
sub
push
filds
xchg
cld
sub
lods
into
push
xor
pop
fildll
or
loopne
jne
stos
xchg
lcall
movsb
int
fistpll
cld
repz
mov
xchg
xchg
js
orb
mov
mov
out
fcomps
lock
call
inc
push
je
imul
push
adc
and
sbb
arpl
mov
adc
jnp
fucomi
adc
iret
idivl
mov
notl
push
repz
jmp
ja
cs
jno
push
rcrb
fbstp
xchg
mov
add
jp
mov
mov
fwait
add
mov
lahf
ficomps
test
jl
mov
xchg
loopne
xchg
xchg
mov
loope
out
jmp
in
arpl
add
or
cmpsb
movsl
pushf
adc
out
push
test
jne
jmp
lcall
xchg
in
nop
orb
decb
out
cmp
dec
dec
in
dec
xchg
mov
lret
lahf
cmp
push
mov
out
adcb
xor
ffreep
scas
aad
les
fwait
hlt
shl
test
cli
xchg
xchg
dec
std
test
idivl
sti
mov
mov
mov
mov
add
iret
je
into
mov
jl
sti
mov
or
ja
movsl
sti
mov
push
jbe
fisttpll
aaa
add
mov
dec
cmpb
xchg
fimuls
ljmp
xchg
notl
inc
test
ja
jmp
jmp
lds
aad
cmp
rorb
shrl
pop
outsb
inc
mov
add
adc
fldcw
cmp
dec
dec
jb
and
adc
sti
fstpt
ja
je
pop
cwtl
jns
and
lcall
nop
add
fstpt
adc
scas
cmp
push
jbe
push
pop
mov
add
fstpt
jbe
dec
subb
pop
ljmp
cmc
cmp
or
pop
ja
sbb
sti
pop
and
popf
mov
mov
jecxz
lods
jp
idivl
in
mov
inc
mov
mov
lock
adcb
add
mov
adc
ja
stos
test
mov
lret
dec
out
dec
jb
testb
jecxz
mov
pushf
adc
clc
mov
lock
fstps
dec
or
lock
cli
jl
push
dec
jo
cmpb
in
cld
adc
out
cmpsb
mov
imul
sti
jecxz
cwtl
in
popf
repnz
decb
jb
fs
std
test
cmp
push
std
scas
popf
or
cld
int
lret
pop
mov
rcl
pop
ss
inc
movsb
test
in
ljmp
stc
sti
mov
jne
int3
imul
mov
into
je
insl
scas
test
mov
mov
out
add
cs
jle
cmp
std
mov
adc
out
call
sahf
les
add
adc
adc
out
add
add
scas
test
sub
adc
notb
mov
cltd
adc
rol
aad
mov
push
fistpll
inc
ja
iret
add
mov
push
je
rcrl
arpl
and
or
xchg
push
dec
pop
stc
rcrb
and
sbb
sbb
sti
out
push
je
aam
jl
cmp
subb
repz
jl
repnz
lock
outsl
pop
mov
mov
inc
pop
test
mov
leave
rcrl
imul
leave
in
ret
xchg
push
enter
nop
out
repnz
push
out
outsb
shll
xchg
fiadds
out
jge
sbb
in
jecxz
xchg
inc
dec
mov
lahf
jg
repz
loopne
or
fldl
out
fcoml
pushl
repnz
loope
gs
cld
test
mov
addl
enter
sbb
je
lods
and
divl
jecxz
and
jmp
sti
loop
and
divl
and
imul
mov
in
pop
and
fildll
iret
and
sti
loop
dec
jg
jge
xchg
lds
lods
iret
and
and
jmp
fistl
push
xchg
ret
cld
xor
aad
insl
mov
cs
stos
iret
fwait
jecxz
xchg
sub
in
fucomi
notl
cmp
out
pop
imul
rcrb
adc
xchg
fwait
jecxz
add
fistl
std
movsl
std
mov
cli
cmp
sti
jmp
fstl
std
lcall
lods
icebp
mov
jecxz
or
xchg
jne
in
mov
test
out
popa
xor
imul
test
insl
xchg
mov
out
jb
movlps
inc
jp
cvtps2pd
cltd
pop
inc
and
xor
mov
xor
out
inc
or
inc
in
andl
lock
jg
call
fidivrl
xor
pop
dec
mov
lods
inc
icebp
inc
dec
rorl
fcompl
pop
inc
lock
mov
xchg
aaa
repnz
and
cmp
jp
dec
inc
jmp
mov
movsl
pop
enter
sub
pop
stos
adc
jns
repnz
dec
stos
outsb
cmp
std
inc
cltd
je
repz
testl
or
mov
xchg
es
fists
clc
pop
adc
out
mov
dec
jb
test
std
or
mov
test
out
cmpsb
lea
pusha
inc
incl
cmpsb
aaa
les
mov
test
jmp
pushf
mov
testl
test
jl
mov
adc
sbb
add
jl
std
test
add
aas
jge
and
sti
jl
repz
notl
aam
jmp
and
jno
lret
daa
mov
jmp
mov
adc
daa
popf
bound
cli
add
adc
enter
lds
dec
aas
ds
pop
fsubp
cmp
push
sbbb
or
inc
push
jne
cld
mov
pop
mov
pop
loopne
adc
lea
and
push
pop
mov
add
into
sbb
cld
cmp
lods
pop
cmpsl
xor
dec
cwtl
notl
clc
idiv
cmp
jne
xchg
or
mov
pop
sbb
notl
or
aaa
jle
inc
psllq
xchg
hlt
les
inc
ja
jg
mov
fcomps
ss
into
or
iret
aaa
faddp
fisttps
inc
mov
into
shll
xchg
repz
cmc
sahf
sahf
or
pushf
pushl
or
cmovne
arpl
addr16
sub
inc
inc
negl
stc
xor
fldcw
cmp
cmp
sub
cltd
test
jge
mov
xchg
popf
in
dec
lret
mov
mov
xor
jl
ljmp
dec
in
cmp
shl
in
or
fildl
jecxz
call
lods
lret
mov
adc
ja
adc
pavgw
jno
push
add
outsb
mov
divb
lar
test
arpl
adc
jg
mov
dec
xchg
sar
jg
das
and
movl
mov
std
out
jmp
leave
clc
adc
repz
sti
ret
out
shll
shll
sub
stc
or
sub
nop
stc
xchg
jae
dec
push
fldl
out
fmull
xchg
pop
and
jge
xor
scas
iret
in
repnz
outsl
xor
iret
iret
xchg
xlat
lcall
in
das
out
repnz
icebp
mov
pop
imul
fisttps
cmp
loope
dec
or
std
pop
addl
stos
mov
adc
out
mov
les
adc
inc
test
push
clc
mov
jnp
les
int3
jbe
adc
mov
scas
adc
mov
enter
pop
je
les
repnz
mov
mov
jp
inc
add
fdivs
jecxz,pt
cwtl
andl
clc
cmp
shrb
ret
mov
fildl
lret
dec
hlt
repz
inc
lret
push
aas
inc
or
cmp
je
push
jbe
cmp
adc
add
inc
or
inc
cmc
inc
insb
mov
les
mov
dec
add
out
jne
jg
mov
add
inc
idiv
adc
jl
lock
jmp
mov
hlt
sti
jb
enter
dec
mov
push
cli
push
out
cmp
mov
add
mov
hlt
cmp
cmp
out
aaa
ds
idivl
fisttps
cmp
int3
sub
jg
hlt
cmp
roll
imul
mov
push
inc
adc
push
div
xor
jns
out
mov
dec
inc
cmp
fnstsw
popa
test
jecxz
add
add
sub
push
cli
mov
repz
div
rorl
stc
cs
adcb
popf
pop
in
aaa
fmull
adc
dec
cmp
ds
jl
stc
out
dec
or
hlt
mov
cmp
mov
pop
data16
fdiv
sti
mov
adc
je
or
and
fisubl
and
dec
cld
sub
cltd
mov
cmp
aaa
mov
out
jne
sti
xchg
sub
jns
insb
mov
testb
mov
and
enter
mov
insl
test
nop
push
jno
xchg
leave
mov
dec
enter
int
stc
adc
in
inc
xchg
subb
cmp
aam
into
sti
aas
pop
sti
xchg
jl
mov
hlt
mov
scas
out
add
add
das
ja
jge
data16
mov
stos
hlt
pop
sub
movsb
sti
mov
pusha
jg
decl
std
fistps
push
mov
jnp
jmp
lahf
pop
pop
pop
sub
xchg
out
adc
out
pop
xchg
out
mov
out
jg
pop
pop
aaa
lcall
lcall
pop
cld
int3
jne
in
test
jle
in
out
addr16
cmpsl
pop
loopne
xlat
test
outsl
push
mov
cmp
movsl
push
mov
test
movsl
sbb
add
sbb
ss
lock
into
fnstcw
cmp
cmpl
sub
pop
push
xchg
sub
mov
and
mov
out
mov
int
fucomip
repz
and
ficoml
jle
mov
jmp
std
mov
inc
mov
das
jo
je
je
ds
ret
jl,pn
rol
mov
add
mov
loop
mov
push
mov
lods
jbe
or
jecxz
pmulhuw
movsb
pop
mov
stc
call
mov
and
add
jne
aas
sti
ds
xchg
mov
mov
and
das
rcl
mov
cmp
or
mov
cli
je
inc
cmpsb
mov
je
cmp
or
faddl
icebp
subl
or
add
out
jb
call
mov
sub
adc
sti
cld
adc
or
hlt
or
cld
out
adc
enter
aad
adc
adc
test
mull
mov
cli
cmpsb
jmp
and
add
inc
inc
cmpsb
ds
ds
jmp
pcmpeqb
fmull
or
mov
pop
rclb
inc
rolb
xor
hlt
or
or
add
mov
inc
cld
and
push
push
lock
je
adc
add
and
andl
push
lret
aas
fcmovu
cld
in
stos
or
sub
in
aad
js
je
and
cmpsl
out
sub
sbb
adc
je
jg
sahf
sub
and
inc
push
mov
inc
jp
sub
fisubl
push
scas
mov
mov
inc
into
loope
push
add
or
push
adc
push
scas
scas
sbb
add
scas
jl
hlt
fnstcw
ds
xchg
jl
lret
pop
daa
daa
addr16
adc
movsb
inc
push
jmp
das
and
inc
xchg
adc
xlat
loopne
or
and
mov
push
add
je
pop
mov
push
aad
xlat
aas
sti
dec
movsb
stos
mov
idiv
lock
sar
aad
sub
sub
pop
test
cli
inc
sub
es
push
jp
and
stos
cmp
push
popf
jae
fucomp
outsl
xchg
adc
sub
fs
sbb
repz
and
iret
cmp
add
mov
cld
stos
add
add
sub
dec
enter
mov
xor
smsw
jno
xchg
movsb
je
ret
int
cmc
movsb
fisubs
mov
repz
clc
sub
add
cmp
and
adcl
pop
dec
adc
cmp
fsubl
sub
je
popf
or
loop
mov
cli
hlt
sub
loope
lret
pushf
andb
mov
xchg
stc
dec
and
imul
daa
cld
or
jmp
or
movsl
mov
sti
mov
ds
inc
stos
cmpsl
and
cmp
in
xchg
rcrb
adc
dec
mov
jmp
dec
push
test
mov
jae
push
ds
lock
push
je
daa
dec
jae
adc
jns
jns
jmp
std
lahf
jo
das
inc
dec
push
mov
fisubl
jle
pop
insb
pop
cmpsb
inc
daa
sub
icebp
pop
jp
dec
mov
daa
es
dec
shll
aam
sbb
sub
xorb
and
sub
and
das
xchg
lcall
ficoms
outsb
pop
dec
cmp
dec
popf
aaa
jo
clc
hlt
shrb
dec
enter
jo
in
cmp
mov
iret
xor
jno
js
sub
sub
icebp
lahf
nop
pop
cli
negl
imul
pop
je
jmp
mov
and
lret
and
and
loop
dec
cli
push
sbb
xchg
jo
dec
sysret
push
mov
int3
pop
pop
adc
scas
inc
rorb
or
addl
test
es
nop
cwtl
sub
and
mov
sub
sbb
jl
cmp
aad
jae
test
sbb
mov
das
out
push
movsb
xchg
lahf
jecxz
sti
push
js
xchg
push
add
int3
add
jno
adc
ljmp
mov
rcr
bound
repnz
mov
int3
lret
bnd
mov
sbb
fildl
test
dec
adc
imul
push
mov
adc
xor
imul
xor
mov
push
ljmp
or
dec
sub
cwtl
loope
call
pop
mov
add
imul
popl
inc
inc
sbb
and
shl
jno
iret
cmp
inc
scas
inc
mov
jno
cld
cmp
mov
xor
sbb
cmp
mov
cwtl
int3
and
cli
and
iret
adc
and
sbb
jb
and
push
xchg
lcall
cli
loop
sti
adc
notl
sub
shl
sbb
shufps
xchg
cmp
cli
push
and
inc
or
dec
or
leave
lods
sbb
movsl
clc
lcall
xchg
ret
lcall
lcall
jae
repz
in
sub
out
mov
fst
push
das
in
push
stc
hlt
loope
movsb
xchg
xchg
push
out
int3
jg
shl
call
aad
bnd
sbbl
lock
fsubrl
out
test
xchg
cmp
inc
mov
pop
insb
add
dec
gs
adc
loop
into
push
push
sub
and
pop
int3
shrb
cmp
movsb
lcall
sbb
icebp
and
xorb
xrelease
fidivrs
mov
mov
es
addb
or
add
mov
or
sbb
out
adc
mov
pop
out
sbb
adc
mov
push
adc
cs
test
push
nop
mov
push
inc
and
test
push
sub
mov
out
sbb
add
cmc
test
jns
nop
lahf
jle
loope
mov
loopne
out
mull
rorl
mov
subl
sub
sub
daa
pop
xchg
movsl
test
or
adc
daa
pop
or
inc
pop
and
sub
aad
cmpsl
iret
xor
lock
dec
pop
movsb
inc
dec
mov
je
lods
add
shll
adc
mov
xchg
mov
imul
je
repz
rep
dec
mov
or
xchg
lahf
add
xchg
ljmp
ds
xchg
aam
test
xchg
jnp
in
scas
or
jmp
incl
ret
cmpsl
add
dec
scas
pop
repnz
jb
xchg
jge
mov
cmpsb
mov
mov
scas
inc
adc
xor
out
icebp
clc
out
das
bound
and
out
movsl
jge
jb
test
mov
lcall
imul
cmpsb
lods
adcb
out
incb
aam
test
or
mov
enter
dec
add
jl
mov
jecxz
sbb
xchg
or
pop
pop
aas
lret
lods
or
xchg
cmpsb
in
xor
mov
push
lods
sbb
cli
mov
inc
cmp
xor
sub
aas
cmp
jmp
in
stos
imul
add
add
xchg
movsl
push
mov
and
add
xchg
cmc
push
dec
scas
aam
mov
xchg
adc
pop
testb
ret
repnz
adc
in
dec
test
lods
test
loopne
lods
jmp
lret
jp
fiadds
sbb
jo
out
arpl
adc
insb
or
out
mov
cltd
dec
das
xchg
in
push
adc
mov
repnz
sahf
sub
daa
lcall
pop
lcall
stos
sbb
nop
ret
and
or
mov
mov
and
pop
aaa
xlat
mov
jbe
mov
add
jge
mov
mov
jle
pop
clc
ret
inc
jae
out
and
xchg
xor
leave
movsb
xchg
push
and
and
sti
dec
jmp
and
sub
test
mov
push
test
mov
pop
pop
mov
pop
insl
clc
iret
ljmp
aas
jecxz
mov
sub
xchg
je
mov
out
cld
lds
idivl
mov
ja
pop
cmp
pop
stc
dec
xchg
cmp
fwait
mov
or
clc
bound
add
jb
mulb
test
and
ret
scas
lods
scas
loope
push
mov
scas
mov
xor
jmp
out
cs
inc
mov
jmp
jp
jnp
inc
cmp
lock
dec
fldcw
test
cld
test
fisttpl
mov
in
test
mov
pop
out
sbb
sub
mov
mov
add
adc
xor
inc
sti
cltd
loope
lea
bound
rol
or
icebp
pushf
cltd
je
sti
cltd
ret
mov
cli
sub
lret
xchg
and
xchg
daa
in
sbb
lock
and
test
sbb
cmc
clc
mov
mov
add
std
or
jl
je
xchg
lods
pusha
leave
or
inc
and
test
mov
add
jno
mov
mov
mov
sti
ret
rorb
and
or
sbb
pop
pop
jl
lret
sbb
xchg
loopne
fildl
in
jg
push
ljmp
jmp
and
mov
mov
jg
aaa
jbe
adc
fcoms
cli
pop
movsb
andb
add
ds
nop
inc
mov
stos
and
js
fwait
sub
sub
pop
scas
dec
xchg
std
jp
dec
sahf
in
jns
dec
out
out
fistpll
add
push
and
mov
int
dec
jno
ja
icebp
adc
call
bound
les
test
add
fisubrl
scas
dec
loop
jo
cmc
ds
repnz
add
lret
fdivs
loope
cmc
or
mov
and
movb
pop
mov
jno
jae
clc
rolb
addr16
cmpsb
dec
es
in
xor
iret
add
dec
inc
rclb
xchg
loopne
adcb
sti
cltd
aam
loopne
add
hlt
inc
loopne
sub
pop
mov
movsb
jbe
outsl
filds
push
je
mov
pop
jb
cld
arpl
sub
movb
pop
inc
dec
fimuls
pushf
mov
pop
es
outsl
add
outsl
and
mov
pop
dec
sub
shrb
es
jg
in
js
mov
jl
pop
dec
push
repz
dec
jb
imul
testb
lock
xlat
subb
idiv
dec
idivl
ret
sti
mov
mov
mov
inc
add
insb
cltd
lock
shr
inc
xchg
out
test
adc
test
je
lods
inc
out
jbe
jae
leave
xchg
filds
jecxz
sti
call
mov
mov
and
dec
cmpl
add
push
inc
icebp
xchg
inc
mov
mov
ja
dec
sub
xchg
mov
push
and
cld
push
mov
xchg
xor
lea
cwtl
dec
test
dec
inc
mov
scas
dec
lea
inc
mov
mov
lea
inc
hlt
inc
faddl
cld
inc
xchg
in
in
push
ja
inc
daa
lcall
xchg
nop
lea
xor
lcall
jmp
int
and
lods
xor
shll
sahf
xchg
xchg
mov
aad
sub
inc
adc
adc
jp
or
aas
sarb
sub
xchg
or
cmpsb
imul
iret
iret
iret
lahf
movsb
imul
imul
jne
mov
push
bound
fildll
in
or
movsb
sub
das
setns
enter
std
roll
int
out
ljmp
test
jmp
xchg
stc
adc
push
arpl
scas
mov
dec
cltd
shll
ss
adc
popf
call
adc
icebp
lahf
dec
fs
and
mov
sub
mov
xchg
mov
aaa
jne
inc
add
jecxz
test
int
jo
dec
sbb
incl
inc
shll
ds
es
mov
cltd
arpl
add
ret
out
mov
cs
fldl
insl
sub
pop
xchg
clc
jp
add
fsubl
insl
pop
bound
movsb
dec
push
cmc
cmp
out
and
adc
enter
cltd
cmp
adc
jecxz
cmp
jmp
les
sub
stc
sbb
iret
push
js
jp
mov
sbb
scas
mov
fbstp
sbb
or
cmpsl
stos
mov
add
mov
inc
dec
jp
or
les
daa
daa
xchg
lret
adc
xchg
cld
daa
bound
ja,pt
pop
daa
mov
test
ja
or
mov
scas
daa
inc
fidivrs
into
mov
test
es
fisttpll
cmp
ja
xchg
fwait
out
movsb
int3
inc
and
jge
ja
sub
sub
mov
std
repz
adc
xor
rcl
mov
jp
negl
push
scas
cltd
loope
iret
std
aaa
outsl
iret
out
xchg
inc
es
dec
inc
inc
sub
incl
cmpsb
jmp
cmpb
ret
inc
ja
ja
outsl
pop
xor
ljmp
in
cwtl
and
cld
movsl
dec
mov
dec
xchg
into
jmp
sar
lret
mov
xchg
gs
mov
pushf
iret
cmp
in
mov
xchg
mov
pop
mov
ds
inc
and
jl
jnp
decl
inc
inc
out
ficomps
ljmp
adc
loop
pop
ljmp
out
lahf
adc
imul
jl
fisttpl
xchg
fists
pop
dec
sbb
test
sbb
mov
movb
sub
jmp
jmp
cld
fidivrs
fs
mov
repz
test
add
jle
in
inc
pushf
jl
xchg
push
mov
js
ret
mulb
scas
mov
ja
imul
cwtl
cwtl
shll
popf
cld
lods
fadd
add
jnp
jle
lahf
cli
cmp
inc
fucom
lock
and
sub
mov
fidivl
mov
xchg
and
cmpsb
cmpsb
nop
div
cmc
mov
lahf
inc
je
arpl
std
test
jg
pushf
ja
pop
ret
jno
test
xchg
rcrb
or
mov
outsl
sub
mov
shll
pop
adc
mov
cmp
jae
out
sar
imull
inc
test
pop
mov
xchg
fwait
xchg
pop
mov
jae
xchg
imul
ljmp
mov
decb
jg
jl
or
fmull
jle
sti
mov
sti
mov
push
insb
pop
fstpt
mov
cld
adc
add
xchg
push
adc
rclb
jns
gs
pop
adc
adc
pmuludq
sahf
jbe
cltd
mov
cmp
lods
xchg
cwtl
lret
pop
mov
int3
ja
sub
push
rcrb
mov
insb
lea
mov
jmp
jne
std
mov
or
sub
mov
data16
jl
int
addr16
xor
imul
nop
mov
or
test
stc
out
in
fstpt
js
out
outsl
mov
xchg
jecxz
and
sarl
mov
fmull
test
lock
sbb
daa
shrb
in
in
std
loope
ret
cmp
cld
hlt
jp
das
gs
jge
cltd
sar
daa
imull
push
ds
mov
aas
test
pop
test
cmc
and
jno
lea
jbe
jl
call
pop
leave
jbe
addr16
shrb
test
popf
xchg
jp
sbb
daa
adc
in
loop
in
sub
sub
add
in
mov
jb
imul
scas
sub
or
sub
mul
push
push
cmp
out
cmp
or
aas
push
icebp
into
push
out
lock
pop
adc
inc
add
cmpsb
pop
ja
cmp
cmp
out
push
pop
addr16
xlat
ffree
xor
fmulp
ret
incl
jae
or
or
xlat
jecxz
out
push
pop
mull
xchg
call
aas
lock
sbbl
mov
push
xchg
or
lea
push
add
in
mov
stc
repnz
sahf
pmuludq
and
push
jl
mov
fwait
cmpsb
andl
loop
loopne
out
lcall
push
mov
xchg
adc
push
sahf
or
sub
aad
mov
mov
dec
jecxz
ds
hlt
fsts
adc
xchg
sti
fcompl
xchg
imul
add
jnp
out
imul
push
imul
in
out
jnp
push
clc
pop
xchg
rolb
xchg
push
pop
stc
xchg
notl
cmc
jns
das
sahf
test
es
adc
scas
fdivr
cmp
jno
inc
and
lret
jo
in
aas
mov
daa
jle
cli
jnp
mov
inc
jnp
cmc
cli
jmp
mov
fsts
mov
sarl
pop
mov
inc
adc
ret
fisubl
push
inc
sbb
clc
popa
in
pusha
pop
hlt
mov
xchg
inc
pop
in
pop
mov
pop
in
pop
pop
pop
mov
mov
pop
mov
in
push
push
push
lret
lret
push
call
mov
call
dec
dec
lret
sub
dec
push
inc
in
inc
inc
cwtl
inc
and
inc
xchg
lret
mov
aas
ds
mov
in
cmp
cmp
mov
fwait
xchg
ret
inc
push
push
in
xor
xor
adc
push
mov
hlt
sub
inc
push
push
inc
sub
sub
daa
es
pop
adc
pop
inc
and
and
std
inc
pop
rcrb
fld
xchg
xchg
mov
lret
mov
ret
fsts
cmpsl
aad
adc
adc
adc
xchg
pop
adc
adc
test
in
inc
or
push
or
or
or
push
jle
inc
in
push
push
pop
add
fs
mov
mov
dec
pop
mov
xchg
cmp
stos
sbb
es
jns
lds
fistps
inc
jge
mov
in
hlt
xchg
fdivp
cld
adc
push
add
sarl
fcmovnb
mul
lcall
jb
je
stc
das
incb
dec
xor
scas
repz
fwait
xchg
xchg
xchg
cli
mov
cmp
mov
scas
scas
ss
mov
jne
adc
or
data16
add
test
jbe
mull
mov
out
pop
pop
push
sub
or
pop
js
cmp
dec
pop
push
in
call
mov
pop
test
cmp
sahf
jecxz
add
sbb
inc
mov
adc
mov
jge
iret
pop
dec
setg
pop
mov
test
test
popf
xchg
int
xchg
mov
jle
add
out
xchg
cli
test
popf
sti
push
cmp
jl
fcomps
jl
pop
loopne
push
test
ja
orl
or
sbb
add
jbe
imul
je
sbb
push
lods
jmp
jge
fistps
outsl
push
test
andl
lock
fmull
fidivs
pop
jl
mov
fwait
rcl
jnp
cmp
fwait
fisubrl
dec
cmp
js
cmc
aaa
std
xor
imul
mov
std
pop
scas
sub
mov
aas
xchg
jp
sti
mov
imul
and
cs
mov
push
jg,pn
fisttps
jmp
lods
cs
lcall
mov
enter
mov
pushf
ljmp
iret
or
jg
mov
addr16
fld
movlps
lret
inc
mov
jp
add
mov
outsl
cmpsb
mov
pop
divb
sbb
loop
rep
jg
inc
sub
data16
or
test
ror
jecxz
add
mov
or
sub
into
aad
jmp
mov
mov
xchg
mov
int
dec
adc
mov
sbb
leave
cmp
inc
enter
in
outsl
cmp
clc
jmp
pop
loopne
pop
ja
mov
in
push
xchg
or
lret
stc
mov
lret
mov
mov
stos
rcl
sub
inc
test
pushf
add
push
pop
cwtl
fwait
dec
pop
mov
in
sub
jns
rorl
xor
in
or
mov
repnz
int
in
mov
lret
mov
lret
mov
lret
mov
mov
sub
mov
mov
push
xor
mov
inc
mov
mov
aaa
mov
lcall
lcall
loope
mov
adc
jbe
jne
je
jae
cld
jb
mulb
jo
outsl
mov
inc
adc
inc
arpl
imul
in
push
push
imul
gs
jle
data16
add
outsl
mov
sub
sbb
sbb
clc
mov
mov
mov
mov
lcall
lret
mov
nop
xchg
xchg
lcall
mov
dec
mov
pop
hlt
outsb
outsb
outsb
outsb
ja
daa
outsl
fistpll
pop
jnp
inc
aaa
sub
mov
shufps
add
lock
loop
std
push
xor
std
lods
inc
repz
in
xlat
aad
clc
test
jg
jp
lret
mov
sbb
cmpsb
or
stos
push
pop
add
jb
out
pop
push
ja
xlat
daa
clc
inc
insb
scas
cmpsl
mov
scas
lcall
lcall
out
sti
divps
sbb
repz
aaa
cli
adc
pop
lds
mov
idivl
pop
test
mov
push
ja
cli
in
mov
test
inc
mov
mov
jne
in
sahf
inc
scas
cli
pop
pop
out
clc
cld
and
icebp
iret
out
ret
dec
xchg
adc
add
sbb
hlt
je
pop
push
add
aad
or
iret
lods
rcrb
out
jle
sar
outsb
aad
aas
push
jle
mov
imul
popf
testb
test
lods
mov
push
adc
aam
or
dec
sbb
and
movsl
inc
mov
iret
add
dec
imul
cli
loopw
pandn
ret
and
icebp
mov
loope
das
pop
mov
cs
mov
int
int3
jb
lds
rorl
mov
cld
pop
lea
xchg
add
adc
mov
adc
cltd
push
xchg
mov
lock
pop
gs
xor
add
add
pop
arpl
mov
xor
out
rorl
push
adcb
mov
pop
sub
dec
test
gs
mov
adc
sbb
mov
insl
repz
stc
test
lahf
jg
or
fcmovnu
clc
jne
inc
rcrl
out
call
dec
xor
outsb
xlat
and
xlat
adc
cmp
test
in
mov
test
out
int
xchg
xchg
pop
cmp
dec
icebp
mov
cmp
in
mov
enter
adc
stos
push
idiv
push
pop
in
lret
lahf
stos
stos
push
push
fcmovne
pop
loope
add
in
movsb
sahf
negl
jb
je
insb
fnsave
jp
cmpsb
gs
push
scas
ret
shlb
xchg
mov
xchg
xchg
inc
xor
paddq
jno
int
loopne
xchg
push
or
lret
repnz
push
or
sub
xchg
loopne
call
mov
xchg
loop
cmp
out
fiaddl
fcomp
std
xchg
jle
sub
add
add
push
ljmp
ja
movsl
xor
xor
iret
and
push
js
rclb
mov
xchg
cmp
ret
pop
xchg
cwtl
lcall
mov
pop
inc
push
mov
into
and
sbb
lock
lahf
push
sarb
cmp
sbb
test
mov
jecxz
lret
add
fidivrs
cli
jnp
cli
je
xlat
test
arpl
mov
mov
daa
in
cld
mov
icebp
lret
std
int
xor
stos
mov
loop
mov
push
xchg
ljmp
ffreep
inc
imul
repnz
icebp
out
xor
mov
cmp
fs
loopne
rolb
xchg
icebp
sub
xor
add
out
testl
jae
mov
jl
loope
sbbb
mov
mov
jb
inc
inc
pop
js
mov
js
adc
pminsw
mov
jb
subb
push
xor
and
inc
inc
idiv
enter
adc
or
int
jle
insb
pop
cmc
cmp
fistps
mov
sti
out
inc
xchg
out
pop
mov
sub
push
push
cltd
fimull
mov
jl
dec
shll
arpl
repnz
popa
xchg
pusha
mov
mov
pop
rcrl
and
lret
repnz
pop
fcomps
pop
xchg
push
imul
fcoml
push
mov
int
mov
dec
pop
mov
dec
lds
inc
inc
lds
sub
int
mov
mov
cmp
ljmp
mov
cmp
popf
aaa
movsb
stc
mov
popf
xor
pop
push
inc
pop
sub
mov
adc
pop
gs
es
xor
inc
push
and
and
and
pop
xchg
rorb
popf
jo
mov
sub
aam
mov
adc
decb
adc
test
push
aas
cli
add
mov
std
in
mov
mov
lahf
imul
das
adc
jecxz
or
addr16
loop
stc
loop
pop
jne
mov
out
andl
sbb
add
arpl
jbe
repnz
lret
scas
cld
cli
mov
int3
mul
mov
lcall
nop
cwtl
xchg
xchg
xchg
in
pop
inc
jns
add
add
or
fildl
inc
mov
arpl
loop
hlt
xchg
stc
test
andl
pop
lcall
aad
cmc
stos
out
int
sti
loope
sti
js
cmp
stos
push
je
inc
xchg
das
and
shlb
fdivrl
pop
add
ret
inc
jge
aad
cmp
inc
add
lret
add
cmp
out
cmp
cmp
shr
ss
sti
rcrl
xor
xor
rorl
sub
pop
out
mov
addr16
mov
loop
lock
lahf
dec
jb
scas
push
repz
jp
sahf
comiss
fmull
mov
mov
adc
sahf
jo
xchg
call
push
mov
mov
ficoml
hlt
sete
gs
sahf
lea
and
xor
sbb
sti
or
mov
fwait
mov
scas
in
cli
inc
das
add
cmp
ja
or
mov
clc
shrl
mov
inc
subps
and
fwait
jp
fnstsw
jecxz
popf
lods
ds
jp
dec
sub
addr16
fs
fld
add
fwait
mov
push
cli
loop
iret
lods
mov
out
ret
in
sub
pop
fmuls
in
dec
movsb
into
repnz
nop
call
push
inc
lahf
testl
jmp
sti
repz
cli
mov
nop
add
andl
adc
pop
jmp
push
lods
cmp
imull
cmpsb
mov
cmp
mov
in
sub
or
ret
pcmpeqw
ljmp
pop
mov
jmp
pop
and
hlt
push
std
nop
sub
inc
mov
inc
icebp
cmc
push
xchg
push
cmp
dec
repnz
int
jecxz
test
cli
jno
cmp
cmp
pop
fmull
out
out
xchg
jnp
scas
lock
scas
mov
push
xor
xchg
mov
add
jns
xchg
xorl
lret
mov
nop
cltd
mov
mov
lcall
push
add
call
sar
inc
pop
hlt
enter
sbb
repz
push
loopne
nop
je
pop
in
xor
adc
jge
xchg
gs
fnsave
mov
or
hlt
iret
je
mov
stos
inc
sbb
popf
sub
mov
out
bnd
jnp
jb
push
add
xchg
and
pop
adc
ljmp
mov
sti
ret
fldcw
call
ret
push
sar
xor
mov
in
xor
jns
cs
mov
lds
cli
mov
cmp
jns
add
add
scas
mov
aad
mov
lcall
inc
stos
les
imul
dec
fnstenv
out
mov
sub
stos
hlt
xchg
mov
sbb
pop
push
xlat
mov
dec
jb
xchg
aaa
and
scas
push
aaa
clc
xor
inc
pop
mov
cmp
mov
rcrb
mov
lahf
out
pushf
or
push
cmp
out
cmp
mov
daa
rcll
movsl
gs
dec
sbb
push
in
in
mov
inc
in
mov
and
adc
out
in
rorl
div
cmp
stc
pop
or
mov
inc
mov
bound
mov
and
jo
out
fisubs
testb
sub
xchg
sbb
sub
movsb
pop
test
lods
and
add
sbb
push
inc
sub
sub
popf
jnp
out
repz
pop
push
adc
add
xchg
mov
jmp
pop
hlt
shlb
out
adc
lods
je
sub
push
jmp
incb
sbb
std
add
lret
mov
jae
xchg
mov
lcall
jae
lcall
mov
xlat
in
fwait
push
jge
or
add
mov
icebp
add
fdivr
dec
and
xlat
enter
ret
fwait
fs
out
mov
test
aas
imul
iret
sub
js
out
mov
sbb
jae
add
cmp
loop
push
lods
decb
push
call
pop
fs
out
add
out
popf
cmp
cmp
rol
xchg
push
sbb
mov
cmpsb
out
leave
jmp
sub
insl
mov
int
repz
repz
movsb
xchg
rcrl
movsl
jo
mov
cmp
pop
push
in
jne
call
mov
mov
mov
hlt
push
and
mov
add
stc
dec
lret
fdivs
rcrl
shrb
stc
xchg
mov
add
ds
sahf
ljmp
fwait
xchg
xchg
jbe
pushf
nop
arpl
arpl
arpl
fwait
xchg
cwtl
pop
or
nop
push
xchg
adc
dec
add
mov
add
sub
mov
test
data16
aaa
frstor
fidivrs
cmpsl
and
loop
and
stc
sbb
push
sbb
push
sbb
jle
daa
dec
dec
add
scas
pop
add
mul
lea
add
mov
cmp
add
repz
out
movsb
push
cmp
daa
cmc
iret
lods
pop
pop
push
jnp
push
sub
mov
jae
cld
pop
cli
lea
int3
pusha
cmc
test
inc
pop
fcomp
lea
cmpsl
jne
movsb
mov
xor
jns
rclb
loopne
imul
sbb
test
negl
add
push
jp
je
mov
pop
mov
dec
cmp
out
call
push
mov
sub
rcr
outsl
outsl
je
mov
shr
dec
and
mov
das
out
aam
add
and
mov
stc
je
inc
cli
push
fs
int3
cs
cmp
add
fcmovnb
mov
out
pushf
push
mov
jmp
jl
enter
decb
jb
daa
cli
dec
out
jnp
test
xlat
inc
inc
add
sti
int3
cld
xcrypt-ctr
cmpsl
sahf
cmp
cs
xor
xchg
jae
mov
or
shl
mov
ret
lock
mov
emms
xchg
lock
sub
mov
out
mov
pop
loop
jnp
mov
filds
in
movsl
mov
lock
mov
xor
inc
pop
jb
fcomip
out
xor
ja
xchg
js
dec
into
test
and
sub
cmp
lods
test
aas
shl
rcll
loope
mov
je
test
lret
cmpsl
jae
imul
stos
sub
add
das
dec
dec
inc
int
lret
jmp
fnstcw
cmpsb
xchg
fcmovne
mov
movsb
mov
je
mov
out
dec
cmpsb
stc
je
xlat
fisubl
add
je
repz
xlat
loopne
shl
sbb
mov
nop
lahf
test
ja
xchg
movsb
xor
decb
jecxz
pop
jmp
mov
jg
ljmp
add
jbe
sti
jbe
je
out
je
je
clc
test
and
mov
int3
das
pop
jecxz
mov
push
mov
jae
mov
mov
orb
enter
adcb
dec
pop
ds
divl
test
je
ljmp
xor
adc
hlt
rcll
dec
cmc
out
add
xlat
lea
dec
xlat
jecxz
pushl
repnz
pop
repnz
mov
push
cwtl
ds
cltd
fnsaves
mov
out
cmpsb
pop
mov
and
xlat
pop
pop
out
lock
movsb
inc
inc
cmp
mov
punpcklbw
orl
add
adc
jl
jecxz
jmp
add
pop
xchg
cmpsl
mov
aas
adc
sti
mov
or
jb
sbb
push
lock
ds
adc
inc
rorb
je
cltd
xchg
stc
mov
rorl
pop
je
push
stc
push
cmp
inc
sbb
stos
lock
out
out
fwait
dec
push
sti
mov
test
jmp
push
and
jg
mov
add
add
addr16
fdivs
jbe
scas
aaa
addr16
pop
cli
push
fdiv
xor
js
lea
sub
mov
mulb
cmp
cmp
push
imul
arpl
enter
out
jnp
cmp
andl
aaa
jecxz
jne
jbe
cmp
or
movsl
mov
mov
xlat
in
in
cmp
inc
mov
cmp
test
out
or
mov
sbb
sub
sbb
and
adc
roll
xlat
mov
jge
xchg
nop
enter
cltd
adcl
std
jg
mov
push
movsl
sar
repz
or
push
les
cmp
in
std
dec
xor
xchg
push
xchg
pusha
xor
lahf
lahf
push
jb
xchg
je
cltd
add
sahf
mov
comiss
cmp
fistpl
in
xchg
push
mov
test
fs
mov
test
cld
test
jmp
cwtl
jmp
test
jmp
mov
mov
aas
out
loop
bound
xor
lods
and
sti
xchg
aas
iret
cmp
xchg
cmpsb
xchg
lret
jae
dec
add
loope
jbe
jmp
cmp
dec
call
or
imul
dec
gs
add
decl
fldenv
ret
inc
in
lahf
sbb
adc
mov
cmpsl
in
and
sbb
xor
jnp
repz
xchg
ja
std
icebp
clc
sub
jp
movsb
fcomip
xlat
mov
mov
and
out
out
xlat
es
add
mov
shr
cmp
sahf
pushf
in
mov
xchg
mov
and
mov
mov
mov
mov
sti
outsb
mov
mov
mov
xchg
lret
ret
scas
mov
iret
mov
insl
je
pop
mov
call
mov
xchg
cmp
xchg
fsubp
pop
jmp
jge
mov
repnz
jl
mov
ds
sbb
stc
dec
pop
jp
push
add
scas
cmp
in
call
cmp
or
repz
pop
push
call
xchg
out
mov
bound
xchg
lcall
pop
stos
lret
push
pop
insb
call
loop
js
mov
mov
rcrb
jnp
xlat
or
aam
cmp
inc
and
cwtl
pushf
clc
mov
pop
imul
lods
in
in
cltd
adc
pop
daa
fisttpl
mov
pop
sub
push
rol
pop
aad
out
adc
call
pop
bswap
cmp
jp
adc
add
stos
repz
jl
ffree
dec
jmp
cmc
xor
push
bound
pop
iret
pop
push
mov
jns
or
add
pop
mov
cmp
loopne
pushl
data16
xchg
repnz
lea
inc
cwtl
cli
dec
mov
sbb
push
icebp
daa
insb
mov
and
and
mov
and
nop
rcr
cli
mov
rcll
mov
lahf
sti
cmc
mov
lahf
inc
jl
mov
adc
xor
stc
fsubs
mov
repnz
push
pop
ds
inc
jl
mov
fsubl
sbb
pop
pop
jbe
lahf
insb
aaa
jl
pop
scas
shll
ljmp
rcll
jmp
rclb
inc
mov
xchg
adc
cli
adc
cmp
jmp
pop
pop
ret
cmp
sti
push
xchg
xchg
gs
out
add
mov
inc
dec
into
xor
xchg
xchg
or
pop
ror
out
jmp
inc
inc
pop
repz
loop
sbb
lahf
jne
jnp
test
push
arpl
xchg
sbb
das
ficomps
pop
loopne
insl
into
std
rcrl
mov
sbb
fs
insb
mov
pop
jecxz
enter
jl
jle
sub
pop
fisubrl
xcrypt-ecb
cmpsl
lret
or
je
fninit
inc
neg
daa
shlb
push
mov
int
fwait
rclb
test
dec
sbb
add
lods
rclb
mov
std
scas
iret
imulb
sti
jge
stc
add
repz
inc
add
das
in
shl
xchg
pop
lcall
mov
out
mov
cli
addb
jne
hlt
jg
mov
xor
push
mov
ja
mov
in
iret
and
add
add
sub
inc
ss
insl
jb
scas
das
or
outsb
xor
in
pop
addl
repnz
cli
add
fbld
stc
test
idivb
int3
aas
pop
cmc
movsb
inc
lret
push
sbb
loop
add
jne
fildl
cmp
stc
jbe
sub
adc
ja
hlt
out
daa
cli
test
icebp
and
xor
inc
dec
in
push
inc
add
fsubl
lods
ljmp
jp
call
leave
fdivrl
lods
cmpsl
jnp
and
pop
iret
test
mov
movsb
push
loopne
mov
iret
jg
das
ret
cs
xchg
jmp
lcall
jl
in
sub
push
cmp
mov
mov
push
and
cmpsl
mov
push
repz
into
adc
and
jne
pop
lock
mov
cltd
ficompl
cs
jmp
mov
in
sbb
jg
dec
jg
pop
leave
add
cli
push
out
out
cmpsl
icebp
jmp
scas
mov
lock
mov
and
inc
sti
cli
mov
int3
ss
ret
loope
add
lods
shlb
stos
repz
icebp
xor
mov
adc
cld
pop
adc
outsl
insb
add
or
je
adc
in
popl
decb
pop
mov
sub
jg
xor
add
outsb
ffree
xor
cli
loop
adc
and
dec
int3
inc
repnz
adc
out
std
inc
jo
scas
add
lret
scas
inc
cwtl
and
les
sti
jns
popa
movsl
jp
pop
pop
test
inc
jmp
ljmp
lcall
mov
jg
jo
icebp
or
loopne
push
jmp
and
loopne
cltd
addl
dec
stos
inc
push
inc
repz
cmpsl
imul
ljmp
sti
push
loope
jne
inc
push
push
jno
lahf
cmpb
ret
fimuls
mov
pusha
test
arpl
int3
pop
psubb
jl
lock
and
jmp
mov
or
inc
outsb
push
jmp
pop
ficoms
aam
xchg
arpl
stc
std
stc
cld
insb
out
mov
out
stos
test
test
mov
mov
iret
xchg
dec
push
pop
and
and
lahf
inc
jns
pop
in
push
out
hlt
lock
and
mov
rcl
adc
shrb
jp
xchg
out
add
dec
adc
inc
fcomip
jl
decl
hlt
incb
sbb
orl
in
pop
out
sbb
ret
repnz
cmp
cmpsl
mov
insb
sbb
mov
outsl
pop
sbb
movb
pop
adc
mov
pop
or
mov
mov
fcmovu
icebp
stos
inc
dec
mov
jg
inc
fisttpll
testb
pop
jmp
bnd
adc
out
xlat
and
insb
add
shrl
inc
jnp
pop
daa
or
push
repz
mov
xchg
xchg
in
sub
mov
or
or
or
jmp
test
movsl
pop
nop
xchg
shl
jo
push
iret
outsb
mov
xchg
mov
pop
loop
icebp
sbb
out
jb
fildll
adc
push
lcall
jle
int
xor
shrb
dec
sbb
ficoml
xor
rorb
loop
add
push
shrb
aaa
mov
jnp
mov
or
jecxz
fwait
add
cmpsb
xchg
fsubp
or
jnp
and
add
ljmp
loopne
mov
or
arpl
mov
pop
pop
sub
jbe
push
aam
inc
aaa
aaa
pop
dec
fbld
xchg
out
mov
daa
xchg
pop
jae
mov
sti
add
mov
incl
xchg
insb
jae
mov
jae
rcr
mov
ret
insb
xchg
mov
jns
ret
in
add
in
sti
push
stos
add
outsb
mov
xchg
scas
mov
xorb
outsb
jmp
stc
out
arpl
outsb
insb
mov
fwait
sbb
daa
pop
mov
in
or
pop
incb
cmc
lcall
push
out
test
call
dec
out
mov
inc
mov
mov
out
ds
idivl
jl
out
sub
sti
fs
aam
mov
jnp
mov
add
fcomps
jecxz
mov
int3
jne
iret
xor
std
add
push
daa
std
fdivs
add
aad
into
fistpll
push
insl
into
sub
jmp
cmc
sbb
mov
icebp
out
into
xchg
cmp
clc
outsl
call
iret
aas
iret
sahf
ds
subb
jg
xchg
mov
out
incb
scas
pop
dec
stc
push
insl
cld
jmp
dec
incb
aam
mull
dec
cmp
or
imul
loopne
aaa
xlat
iret
dec
or
into
cmp
mov
aaa
mov
decb
jnp
ss
lods
sahf
adc
lret
bnd
xchg
jmp
sahf
adcl
xor
pop
pop
pop
cli
inc
jge
pop
shr
mov
and
scas
inc
sahf
push
repnz
pop
out
jno
cli
lret
fstl
mov
sub
push
fstpt
das
mov
add
fldcw
mov
mov
mov
repnz
in
lret
cmc
sbbl
loope
divl
xchg
jnp
jge
es
in
std
xchg
mov
xchg
out
push
lahf
aad
loopne
and
sti
mov
cmp
out
xlat
mov
jle
xor
pop
cmpsl
fdivrs
pop
lods
out
jbe
iret
push
mov
sub
mov
imull
incl
fidivs
jg
xor
xor
cmp
dec
enter
add
cld
icebp
mov
mov
into
add
js
and
out
xchg
dec
pop
dec
scas
jae
sub
add
jecxz
jae
inc
xchg
fwait
in
push
add
enter
out
sti
jl
in
mov
divl
pushf
cld
scas
cld
fistl
js
into
fdivr
mov
into
mov
xchg
pop
add
pop
add
inc
iret
fistpl
lods
jl
cmp
mov
int
push
outsb
jbe
xchg
pop
insl
les
sti
or
loop
adc
ja
mov
pop
cmp
and
test
repnz
jns,pt
je
out
adc
mov
imul
cmp
xlat
iret
ss
sbb
iret
into
mov
movsb
inc
sarl
lret
sbb
out
movsb
xchg
jg
and
lock
and
jne
xchg
into
jg
cltd
xor
mov
add
testb
jge
jg
fistpll
fwait
sar
pop
mov
add
add
lcall
cmpsl
shlb
lcall
stos
sbb
inc
in
cs
cmp
sbb
scas
test
shlb
iret
jne
aaa
add
add
inc
pushf
cli
push
int3
add
sbb
icebp
arpl
mov
or
test
lahf
enter
out
mov
stos
int3
push
inc
cmp
add
pop
push
hlt
je
cli
sti
xchg
repnz
jmp
xor
cmp
das
std
jno
repz
pop
out
and
js
mov
std
fcmove
cli
xor
aaa
iret
aaa
iret
daa
imul
jge
pop
pop
xor
test
push
dec
push
out
fists
pop
sarb
movsb
outsl
outsl
neg
int
pop
into
out
jno
or
int
lret
inc
out
out
ror
lret
dec
mov
adc
pop
mov
in
mov
iret
dec
push
in
out
fsubs
in
iret
fmuls
aas
cltd
sti
sysexit
inc
dec
les
ds
into
testl
in
sub
cmp
xchg
sbb
push
push
fsubr
out
cmpsl
jmp
inc
ds
push
jg
fbld
hlt
jg
sub
loopne
fdivr
sarb
negb
xorl
sahf
mov
jmp
mov
je
popf
cld
repz
jp
xchg
xor
or
dec
fistpll
arpl
addr16
mov
in
out
xor
jge
out
repz
jns
mov
ficomps
lahf
or
std
clc
fnsave
ds
xchg
fucomip
ljmp
cli
fcomps
jnp
icebp
incb
fldcw
xchg
fwait
xchg
xchg
lcall
int
mov
std
hlt
imul
repz
jmp
jecxz
sub
fidivrs
rolb
mov
mov
pushl
js
mov
shrb
out
lcall
and
mov
mov
test
mov
mov
in
mov
cmp
in
scas
nop
xchg
icebp
mov
inc
shlb
jbe
mov
pop
adc
mov
pop
push
mov
mov
or
nop
popl
mov
push
xchg
mov
stos
mov
mov
in
xchg
out
push
xchg
pop
adc
adcb
dec
das
je
dec
loopne
std
or
int3
xchg
adc
fnstenv
inc
add
movsb
adc
enter
movsb
mov
cwtl
movsl
frstor
mov
xchg
jle
mov
mov
pop
xchg
sbb
dec
push
aam
cwtl
sahf
mov
ficompl
into
jge
fcos
and
pop
pop
and
sahf
cwtl
fsubrl
lret
jge
fnsave
jecxz,pt
jae
mov
scas
lds
fnstcw
gs
cmp
lods
out
out
outsb
dec
pop
push
out
popf
xor
lods
or
xchg
mov
pop
cli
and
cmp
aam
mov
jb
mov
fbld
aad
sbb
jecxz
lcall
push
aas
faddl
mov
jns
xor
mov
out
mov
lods
sti
mov
adc
cmp
cmc
push
fstpt
out
fcmovnbe
jge
rolb
xchg
test
mov
test
mov
inc
sahf
xchg
bound
mov
mov
and
not
jge
add
sbb
mov
ds
xchg
xlat
xchg
xchg
mov
xor
cmc
sbb
imulb
dec
and
stos
inc
dec
inc
fsubr
cmp
sarb
dec
scas
std
mov
jb
out
and
data16
mov
insb
push
lret
add
xor
hlt
sbb
xchg
addr16
jl
sti
xchg
and
ss
jns
std
andl
jp
std
lea
clc
ds
pop
jg
mov
jl
icebp
ljmp
adc
jnp
sti
lcall
cmp
cmpsl
out
jae
mov
lock
fwait
cmp
mov
jnp
and
dec
aam
nop
pop
fsubrp
call
mov
mov
jno
insl
loopne
shrb
mov
inc
mov
sub
jbe
mov
mov
mov
sbb
das
jg
std
loop
test
push
sahf
scas
ret
cs
movsb
xchg
out
cld
ljmp
adc
jg
lods
lea
leave
push
push
inc
xchg
lock
cld
mov
data16
divb
daa
lea
sti
add
mov
out
xchg
mov
add
add
out
rcl
mov
fwait
sarl
roll
add
lret
into
into
mov
into
cmpsl
into
scas
cpuid
jmp
mov
xchg
jnp
pop
add
int
int
int
int
int
int3
pushf
int3
fdivl
and
add
push
pop
int3
push
int3
push
int3
dec
int3
inc
int3
cmp
xor
daa
int3
and
lret
stc
lret
call
lret
enter
cmpsl
lret
mov
lret
push
lret
jle
jne
dec
lret
pop
lret
in
leave
mov
addb
add
leave
leave
push
leave
dec
leave
sbb
leave
gs
enter
movl
xlat
rolb
add
add
mov
pop
pop
adc
add
lds
lds
and
sbb
add
lds
lock
faddp
rol
les
les
les
cmc
add
ret
pop
ret
xor
push
ret
add
adc
shl
aam
mov
rcrl
shll
xor
lock
lret
add
shlb
fnstenv
add
iret
mov
jns
push
iret
lods
into
lahf
into
or
into
sbb
int3
int3
mov
pop
sbb
shlb
lret
lret
outsb
fcoms
lret
inc
lret
and
mov
add
fmul
ror
iret
cmpsb
iret
iret
cld
into
int3
into
into
js
outsl
into
aaa
into
es
stc
int
int
int
pop
add
add
data16
int
int
int
int
int
int3
stc
int3
movsl
int3
xchg
or
add
adc
int3
mov
lret
out
ror
mov
cwtl
lret
adc
mov
add
leave
pop
leave
inc
enter
test
push
or
repz
mov
ds
sub
and
lds
lds
and
in
add
add
les
les
and
les
ret
repz
loop
scas
ds
into
ret
lods
ret
mov
ret
outsl
add
nop
add
xor
ret
or
bnd
mov
ret
jo
imul
arpl
dec
ret
aaa
ret
sub
pop
ret
or
inc
fld
mov
stos
shl
add
mov
rcrl
or
ja
jo
and
push
iret
mov
iret
imul
add
sub
or
add
icebp
into
lcall
into
sbb
add
mov
int
int
int
int
out
add
in
aad
lret
int3
mov
in
lret
mov
lret
adc
scas
add
push
add
test
nop
leave
test
jle
push
leave
cmp
add
out
loopne
sub
push
enter
add
add
loopne
movl
out
fld
mov
add
cmc
jmp
add
iret
les
les
dec
les
hlt
adc
jecxz
lret
mov
inc
ret
aaa
ret
sub
ret
or
incb
faddp
outsb
push
push
ret
scas
ds
inc
adc
ret
add
add
mov
sarl
xchg
roll
cmpsl
shrb
dec
cli
adc
add
scas
pop
or
iret
pop
iret
push
iret
out
stos
mov
inc
cmpsb
push
int3
dec
int3
inc
add
scas
sub
ds
andl
bswap
shll
lret
sub
lock
mov
lret
hlt
inc
xor
pop
inc
ss
xor
sub
push
leave
add
repz
enter
pop
mov
movsb
mov
jge
jne
jo
fsubs
sbb
ljmp
ja
xchg
movb
lds
lds
lds
or
cmpb
cmp
ret
jns
je
loop
aad
mov
rclb
or
jno
push
xor
outsb
jge
add
iret
scas
iret
test
iret
test
jg
gs
pop
iret
pop
iret
ret
scas
add
int
int
int
int
int
inc
subb
orb
sub
test
enter
shrb
cltd
xchg
mov
jle
jns
imul
loop
inc
cmp
sub
sbb
pop
adc
cmp
fadd
mov
mov
lods
mov
jbe
insl
pop
push
sub
andb
sbb
adc
or
repnz
aad
lret
scas
lds
nop
add
add
jbe
pop
lds
inc
lds
lds
lds
lds
hlt
les
inc
aad
ljmp
les
ret
loopne
push
inc
push
add
ret
aam
mov
xchg
ret
add
ffree
ret
xor
inc
sub
and
sbb
adc
sti
shl
out
loope
fadd
ret
shrl
add
xchg
rcll
js
jb
insl
shll
rcrl
rorl
sarl
xor
sub
rcrl
sti
shr
in
ffree
fadd
rol
enter
mov
rorb
push
rorb
shlb
movswl
inc
pop
popa
stos
mov
mov
iret
popf
iret
cwtl
iret
xchg
ret
mov
je
insl
in
add
mov
addb
mov
xchg
into
jae
push
lock
sti
int
int
int
cmp
add
xchg
insl
int
int
int
int
int
int
int3
in
ror
ret
int3
mov
cs
decl
or
mov
aas
int3
cs
push
and
add
inc
out
mov
pushf
lret
xchg
jb
pop
lret
xor
sbb
fmul
lret
or
cmp
and
leave
jno
dec
enter
enter
enter
test
push
dec
movl
and
fcmovnb
aad
into
addr16
push
jle
rol
mov
xchg
enter
lds
pop
lds
cmp
les
ret
xchg
add
add
ret
jns
insb
ret
inc
ret
cmp
or
fadd
int
mov
stos
ret
pop
mov
jg
js
insl
ret
cmpl
cmp
sahf
adc
cmpps
mov
mov
roll
cli
rcr
and
xchg
rorb
jge
out
shrb
rclb
jle
push
adc
rolb
add
dec
jno
pop
add
iret
cmc
iret
out
iret
jmp
iret
orl
mov
std
out
pop
filds
pusha
aad
scas
ud0
and
or
pop
mov
xchg
inc
xchg
clc
outsl
inc
test
xor
cltd
inc
ljmp
push
xlat
inc
jmp
outsb
rorb
out
push
pop
mov
lock
cld
out
add
popf
clc
or
push
loope
cwtl
aaa
test
lahf
call
and
movsb
fisttps
roll
inc
negl
decl
aaa
icebp
mov
decl
std
ljmp
lods
jmp
out
mov
fdivr
popf
xor
insl
dec
es
insl
std
and
loope
sahf
ljmp
mov
data16
into
or
cmp
inc
into
jmp
out
loopne
clc
pop
les
adc
les
push
jl
cld
jg
pop
xchg
gs
movsl
mov
rcll
jge
pop
cld
stc
pop
xchg
gs
dec
mov
out
nop
inc
clc
pop
xchg
inc
xchg
xchg
aad
cltd
xor
mov
mov
mov
cli
or
sti
mov
lods
cli
dec
cmp
shrb
fisttpl
mov
inc
mov
fbstp
sahf
xchg
in
andb
ss
lcall
and
inc
lock
stos
hlt
mov
mov
cli
xchg
lcall
mov
aas
jl
pop
idivb
cmpsb
inc
ljmp
or
adcb
or
repz
ljmp
scas
lret
cli
cvtps2pi
mov
xor
mov
jmp
mov
jae
dec
out
pop
dec
push
jg
out
je
jbe
lahf
scas
dec
push
jb
mov
ficompl
jo
inc
cmp
mov
pushl
xchg
mov
cmpsl
in
cld
sti
nop
jp
mov
cmpl
std
in
mov
scas
dec
cmc
popa
xor
mov
je
and
fwait
addr16
ret
mov
lahf
dec
push
adc
or
jmp
fbstp
rclb
adc
dec
push
sti
jmp
imul
imul
shlb
add
jl
paddd
sbb
dec
mov
divb
rcr
adc
mov
int3
and
inc
dec
loop
jmp
cmp
xor
scas
jb
icebp
test
ja
repz
hlt
dec
pushf
outsb
pop
repnz
inc
test
dec
es
xor
movsb
pop
add
fdiv
je
leave
es
mov
cmp
push
jno
dec
mov
or
cli
rcl
test
xchg
repz
cmpsl
xlat
cmpsl
push
add
jp
xchg
add
sbb
pop
lahf
out
imul
cmp
cmc
inc
xor
adc
adc
xlat
pop
push
mov
into
scas
pop
sbb
mov
das
ja
pop
adc
fistps
lahf
push
loopne
cld
sbb
sub
fdivr
rorb
imul
stos
dec
adc
fsubl
fs
mov
fistpll
xchg
pop
push
sbb
mov
dec
decl
repz
jb
dec
xor
cmp
xlat
mov
mov
jmp
jmp
pop
movsb
call
lds
int3
fidivl
dec
xchg
movsb
cwtl
movsl
jge
negb
dec
adc
ja
icebp
fwait
jecxz
int3
jb
ret
jle
test
arpl
jb
aad
aam
scas
inc
std
mov
mov
popf
mov
push
pop
insl
fnsave
repz
pop
xchg
lahf
xlat
mov
add
pop
xor
int
test
mov
jg
jmp
scas
mov
pop
pop
or
jae
jecxz
sti
xchg
div
call
into
push
xchg
mov
cmc
dec
in
ds
jmp
push
hlt
cmpsl
out
fnstcw
lea
cmp
fstl
jae
idivb
sbb
pop
ret
outsb
ljmp
ljmp
fistpll
stos
clc
in
rcrl
fucomip
push
clc
sbb
ja
push
pop
in
fsubrs
mov
icebp
mov
icebp
mov
mov
mov
insb
loop
stc
out
mov
aaa
in
pusha
insl
xor
lahf
push
cli
push
pop
dec
mov
pop
xchg
lcall
push
sbb
mov
repnz
stos
inc
push
mov
and
stos
inc
stos
shrl
scas
adc
mov
hlt
iret
mov
dec
xchg
dec
out
jb
lcall
dec
fmuls
dec
dec
adc
add
and
cld
inc
repnz
mov
test
sub
pop
es
push
cwtl
push
add
stos
clc
dec
stc
dec
add
outsb
fmull
add
das
cmp
daa
inc
dec
ficoms
cmc
cmp
shll
add
and
push
push
jae
outsl
push
stc
push
mov
push
add
int
dec
mov
dec
lahf
xchg
jle
xchg
xlat
and
fsubl
lcall
sbb
cltd
adc
aas
dec
xlat
xchg
jmp
mov
test
push
jne
lret
inc
imull
adc
mov
andl
dec
data16
cmp
pop
cmp
ljmp
hlt
jge
sbb
arpl
jns
out
xor
cld
xor
xor
xor
and
cmp
incl
jg
enter
xor
jp
mov
dec
xchg
subb
inc
inc
hlt
aas
enter
mov
mov
or
loop
add
jnp
mov
mov
aad
lock
in
jne
test
lcall
fadds
fmull
rcll
aaa
ficompl
mov
jns
dec
lahf
mov
cmp
xchg
in
mov
mov
rcll
sti
pop
aas
mov
fisttps
pop
into
mov
jb
scas
cmc
xchg
mov
pop
xchg
jmp
aad
orb
cmp
fstl
loopne
out
inc
sub
xchg
fnstsw
movsl
jge
fcompl
jbe
imul
xchg
xor
stos
out
fistpll
sti
jg
repnz
pop
push
push
sarb
cmp
outsb
xchg
stc
daa
daa
stos
lret
push
mov
das
jle
sub
imul
lahf
decl
gs
xor
cmp
js
jbe
loopnew
jb
sub
aas
mov
mov
idivb
jmp
xor
fisubrs
je
lret
test
xchg
mov
jp
jg
cmc
xchg
in
push
push
loop
shl
cmpsl
add
cld
pop
push
lock
test
or
pushf
cmp
mov
dec
mov
jbe
rolb
cmp
pop
or
je
cmpsb
lds
mov
sti
repz
fists
xchg
out
xchg
fwait
mov
jae
fstpl
idiv
dec
pop
adc
iret
incl
fdivrp
cmp
jle
decl
daa
mov
push
xchg
stos
cmp
aaa
jg
xchg
pop
out
pop
jle
lock
rcrl
inc
sti
mov
mov
repz
in
outsl
and
sbb
in
sti
lahf
mov
lahf
fdivs
int3
fbstp
and
ljmp
lahf
filds
js
fistpl
cmpsl
in
jo
jne
jmp
stos
out
add
mov
out
outsl
push
mov
iret
jne
in
fidivs
mov
fcomp
into
mov
mov
push
sub
hlt
and
xchg
out
shr
rolb
cmpsl
in
push
mov
sub
add
mov
lcall
nop
push
aam
mov
icebp
je
stos
xchg
faddl
inc
test
nop
xchg
ja
mov
stc
outsb
jb
out
in
mov
jl
ljmp
xchg
je
lcall
stos
pushl
mov
push
fucom
mov
insl
mov
mov
fdivrs
aas
push
fucom
in
lret
mov
outsb
dec
jmp
aam
notl
int3
push
adc
div
lahf
cld
inc
daa
rcrb
fwait
sub
cmp
inc
cld
sarb
mov
in
cmpsl
dec
out
mov
cld
sub
shld
lret
and
scas
idiv
in
pop
aad
lret
mov
dec
ret
inc
aaa
scas
lcall
pop
repz
adc
fistl
cld
push
scas
jle
ss
xchg
mov
repnz
cs
dec
mov
jl
enter
in
jmp
fs
cmc
push
shlb
cmc
out
fnstcw
das
std
daa
pushl
and
mov
ds
mov
jecxz
xchg
cwtl
out
mov
insl
out
ja
jne
mov
push
out
sub
test
fwait
in
rorl
cwtl
push
cmc
in
push
dec
mov
insb
jge
jns
stos
mov
in
movlps
cwtl
mov
out
and
nop
xchg
jmp
xchg
lahf
pop
jns
mov
adc
jae
fdiv
notb
lds
movsl
lret
in
sub
rclb
xchg
dec
jne
mov
mov
out
xchg
inc
jb
mov
jg
enter
lret
jg
sti
mov
stc
dec
push
fnstsw
xor
scas
in
cli
dec
stos
adcl
mov
jp
lods
divb
mov
mov
sar
sti
adc
decb
nop
sti
push
inc
cld
or
movsb
sar
fidivl
inc
cbtw
mov
arpl
clc
sbb
repnz
outsb
xchg
je
sbb
inc
cld
lret
sub
iret
sbb
mov
shl
leave
je
mov
lcall
xchg
fdivr
mov
dec
cwtl
mov
cmp
sub
mov
mov
loopne
stos
xlat
ljmp
leave
push
lahf
and
rorb
es
iret
cli
and
enter
and
int3
xchg
push
lahf
bound
loopne
hlt
cwtl
adc
or
out
popl
cwtl
jo
jmp
jmp
push
int
enter
cmc
xlat
mov
adc
clc
fwait
lock
clc
hlt
xchg
cli
in
dec
fdivs
dec
fwait
js
xchg
push
jb
inc
mov
inc
mov
loopne
out
and
nop
lock
fneni(8087
xor
lods
loop
push
adc
lcall
xor
inc
ficompl
call
xchg
test
lcall
jb
dec
sti
lcall
dec
xchg
enter
adc
pop
pop
repz
int
adc
push
outsb
jge
testl
lret
mov
pop
and
icebp
lret
xchg
lret
jge
add
push
lret
cmpsb
leave
fwait
leave
xchg
leave
ja
jb
dec
leave
enter
add
ja
push
enter
enter
mov
add
gs
sub
adc
add
lds
lds
lds
lds
lds
vmaxpd
cmpb
ret
xchg
ret
adc
ret
iret
ret
std
xchg
idivb
ds
ret
and
imul
shll
cmc
imul
ljmp
pop
push
addr16
int3
ljmp
stos
movsb
cs
mul
sub
pop
lcall
in
jge
lock
out
cmp
mov
test
mov
decb
decb
sbb
imull
sti
mov
cld
pop
cmc
sub
sarb
out
sub
sub
jge,pt
cltd
leave
fldcw
mov
mov
lahf
aas
lahf
cmp
mov
out
popf
pop
ja
mov
mov
outsl
mov
adc
mov
jnp
jge
xchg
jmp
or
jge
daa
cmp
xchg
jge
out
mov
or
rcrb
ljmp
lahf
ljmp
push
lock
pop
xor
rol
stc
cltd
loop
pop
hlt
push
mov
decb
ret
imul
fisttpll
and
fwait
push
out
test
aam
jmp
out
jl
xchg
dec
dec
sub
fdivrs
mov
cld
and
fdivrs
inc
ljmp
incl
jmp
add
inc
add
call
int
jmp
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
pusha
mov
mov
xor
mov
inc
cmp
jb
popa
jmp
