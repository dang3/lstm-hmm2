xor
addb
subb
adc
jmp
movsb
sbb
out
out
adc
cmpl
mov
and
pop
xor
call
fnstcw
ss
movsl
call
jg
cmc
decb
cs
or
xor
jae
call
and
imul
xchg
or
add
into
testl
repnz
adc
or
movsl
or
mov
aad
sbbb
cmp
pushf
addb
adcl
inc
popa
jecxz
insl
mov
xlat
mov
add
mov
cmc
mov
punpckhdq
or
enter
test
std
mov
or
cmp
cmp
jno
add
sbb
ret
stc
pop
jnp
lds
inc
mov
and
scas
cmpsb
fbld
into
jle
xor
sub
mov
inc
xlat
push
ljmp
xchg
hlt
cmp
aas
push
adc
xor
jecxz
mov
movsl
jb
mov
gs
adc
inc
inc
imul
push
andb
add
pop
movsb
or
push
movsl
mov
pusha
sahf
fildl
jl
jbe
mov
mov
sarl
jne
cmp
aaa
icebp
and
std
test
push
repnz
or
lea
sarb
inc
jno,pt
gs
lods
mov
lods
add
pop
cmpsl
jno
ljmp
mov
sbb
inc
flds
pop
mov
mov
arpl
jb
in
push
sahf
fbld
in
or
insl
out
pop
xchg
xchg
insb
scas
mov
xor
stc
mov
js
and
add
xchg
inc
pop
inc
sar
or
mov
dec
jmp
add
push
scas
mov
jne
testb
or
jecxz
xchg
clc
js
scas
call
repnz
push
pop
mov
xchg
repnz
daa
out
int
adc
lret
mov
mov
adc
ja
jl
mov
loop
add
pop
std
fmulp
pop
jns
cmp
add
dec
aam
xor
lods
mov
inc
insl
jg
xor
ljmp
lcall
push
inc
pusha
inc
subb
mov
out
loopne
cmp
lds
jecxz
cmpsb
inc
or
inc
mov
xor
inc
aad
jnp
sub
sub
xor
pop
and
or
push
xchg
fldenv
push
decb
xor
mov
adc
mov
gs
addl
cmpsl
scas
mov
pusha
loopne
pop
outsl
push
mov
gs
push
cmpsb
or
cli
enter
cmp
ja
mov
lcall
or
jnp
test
ds
sbb
or
outsb
adc
fs
lahf
lahf
ret
mov
jnp
fldl
xchg
sbb
push
out
inc
sub
fdivr
mov
cmp
push
lds
pop
cld
test
push
test
mov
push
push
fldcw
mov
or
dec
cmp
xchg
lret
and
mov
push
inc
repz
xchg
adcl
lret
push
inc
adcb
adc
aaa
inc
xchg
ja
shl
sub
mov
cmp
cltd
call
add
lods
push
inc
cmp
xchg
push
cwtl
inc
je
cld
xchg
push
or
test
mov
jmp
iret
mov
push
mov
jmp
aad
pop
je
rolb
mov
cmp
loopne
movsl
filds
je
lcall
mov
push
loope
js
xchg
mov
jl
cltd
repnz
push
in
push
jnp
jge
nop
lahf
shll
or
ret
cltd
jo
and
fmuls
jge
icebp
lods
icebp
add
cs
add
pop
mov
and
or
mov
mov
xchg
in
and
call
push
push
xchg
lea
cmpsb
mov
jge
xchg
jnp,pt
cmp
fwait
mov
xchg
out
mov
pop
jecxz
mov
jl
push
paddusb
mov
mov
jp
xchg
out
fdivl
cs
jmp
xchg
mov
js
je
xor
push
jns
inc
ret
ljmp
sub
jnp
push
sarl
jp
inc
jge
add
cmp
push
ss
daa
mov
jecxz
inc
imul
push
int
fnstenv
push
sub
rorb
rcll
repnz
andb
adc
stos
idiv
jmp
stos
jg
movsb
mov
jnp
jae
rcr
les
push
cmpsb
add
xchg
or
ret
fstp
sahf
mov
in
icebp
xchg
popf
sub
jp
push
cmp
xlat
lods
hlt
insb
mov
push
ss
leave
ja
aad
sahf
dec
mov
mov
sbb
jno
mov
adc
into
popf
mov
cmp
in
aaa
mov
sbb
xchg
repnz
mov
jge
mov
jecxz
mov
outsb
pop
or
fs
and
sti
add
data16
push
pop
sbb
repnz
dec
inc
mov
adcl
mov
add
in
fiaddl
xchg
inc
inc
ss
rcrb
fnsave
lods
cs
sub
mov
dec
push
ss
in
pushf
mov
rep
add
mov
cli
outsb
jp
or
imul
xchg
faddp
clc
ds
or
push
in
bound
mov
pop
inc
iret
icebp
and
cmp
mov
iret
popa
sbb
in
pushf
cmp
jmp
jecxz
out
imul
sahf
movsl
test
xchg
mov
int
mov
jae
push
fsubs
adc
ja
jns
and
pusha
sub
enter
lret
cltd
push
push
dec
stos
mov
push
mov
repnz
clc
repnz
in
mov
jle
cmp
cmp
imul
and
add
adc
lret
mov
out
stc
sbb
into
shlb
and
jecxz
faddp
lds
mov
lods
mov
incb
push
xchg
lret
mov
into
and
xchg
push
sub
sti
adc
xor
divb
movsl
rorl
ja
xor
inc
mov
lcall
xchg
test
scas
popf
iret
lods
stos
mov
arpl
out
cmc
fsubl
push
adc
push
lods
push
and
adc
inc
adc
lea
lock
cld
dec
andl
or
faddl
adcl
ffree
popa
pop
xchg
push
xchg
out
pushf
mov
enter
js
xor
ret
cmc
cmp
or
xchg
mov
inc
jb
lock
aas
sbb
and
inc
mov
xor
pop
icebp
icebp
test
and
jnp
out
inc
lods
mov
push
bound
lea
push
push
jbe
ljmp
andb
adc
pushf
imul
cld
xor
mov
push
push
sbb
mov
cwtl
movsl
inc
loop
and
aam
popf
loope
sub
out
inc
cmp
push
aam
mov
cmp
pushl
push
inc
ds
outsl
loope
leave
or
xchg
add
inc
xchg
cs
mov
jl
mov
or
out
pop
lock
xor
mov
aad
stos
mov
enter
lods
mov
sub
lock
jle
cmp
lea
mov
sub
rolb
jne
sar
and
les
out
cmp
xchg
push
jbe
fistpll
push
mov
stos
pop
leave
dec
pop
lahf
insb
push
hlt
xlat
ja
push
lock
pusha
notl
xor
outsl
imul
jle,pt
mov
sbb
iret
les
cmp
in
aaa
adc
mov
jmp
cmp
mov
mov
test
callw
dec
xchg
xchg
fadd
dec
leave
mov
repnz
xor
sub
lea
sti
les
clc
sbb
js
stos
jns
aas
rcll
ds
push
mov
jg
shll
inc
xchg
cmp
mov
insl
jnp
stos
mull
xchg
push
nop
popf
mov
sub
loope
mov
mov
sbb
flds
cmc
and
cmpsb
shrl
testl
add
fs
or
jecxz
adc
ret
push
mov
cmpsl
push
sbb
xlat
stc
mov
rolb
mov
insb
adc
repz
ret
ret
cld
mov
push
sbb
aas
das
enter
add
mov
mov
push
in
js
test
lds
in
jbe
je
testl
jo
scas
popa
sub
cmp
sbb
dec
stos
fdivl
fwait
ret
stc
jo
stos
cli
fcompl
xor
dec
lea
pop
pushf
out
fimuls
cmp
ss
mov
hlt
inc
adc
out
mov
sub
push
dec
inc
and
test
rcrb
mov
ja
test
xor
or
sahf
push
fadd
mov
xchg
cmpsb
jmp
jl
jbe
sahf
adc
jp
int3
inc
or
push
es
fdivrp
out
xchg
movsb
pop
mov
shlb
ja
lods
cltd
sahf
in
hlt
xor
test
or
nop
pop
sub
sbb
xchg
loopne
inc
cld
jae
jmp
dec
cld
into
sub
rclb
std
lar
ret
out
mov
xchg
cwtl
pop
sbb
jbe
das
inc
push
insl
das
mov
jne
sbb
inc
pop
mov
pop
shrb
jnp
test
jl
lods
inc
xchg
xchg
pop
fistpl
fistl
jecxz
push
test
pop
outsb
test
loopne
and
mov
jmp
inc
ja
pusha
mov
or
movsb
cwtl
xchg
arpl
and
int
cmp
inc
pop
lcall
pusha
mov
add
int3
adc
sub
cmpsl
addr16
add
dec
popf
push
sbb
sub
aam
mov
push
sti
mov
hlt
mov
lret
andl
ret
loopne
pop
mov
xlat
jno
popa
lret
adc
dec
test
enter
int3
movsl
xor
outsb
sbb
in
ds
or
loope
lock
pushf
inc
and
jbe
push
sbb
jne
xor
sub
xchg
lods
pop
iret
jbe
stos
vmwrite
fisubs
cmp
or
add
lea
movhps
dec
adc
cmp
popf
lock
jo
xor
xchg
or
lret
das
or
sti
mov
add
out
add
cmc
mov
shrl
iret
sub
stc
dec
inc
cmp
repnz
dec
shlb
mov
mov
cmp
iret
call
lea
insl
cmp
int
rcl
mov
mov
cmp
dec
aas
pop
jg
push
mov
aaa
push
daa
mov
dec
mov
cmc
jns
push
insl
dec
leave
pop
shlb
or
mov
cmp
adc
inc
aas
out
xorb
or
push
cmpsl
cmpsl
pop
xchg
push
stos
sub
test
and
gs
insb
lret
leave
sbb
ret
inc
mov
inc
daa
jae
xchg
stos
sbb
inc
std
inc
mov
insb
das
aaa
fistps
shrl
mov
xlat
dec
ja
fsubs
fdivs
adc
rcr
pop
sahf
cmpsb
mov
pop
sub
js
out
adc
out
xchg
sbb
lds
push
lcall
lret
xchg
loope
mov
movsb
push
outsb
fdivrs
sub
sbb
cmp
push
xchg
cmp
inc
push
inc
jne
or
shlb
imull
jmp
lods
mov
mov
add
rolb
js
les
pop
pop
jp
push
xlat
clc
sub
cli
push
addl
mov
mov
xlat
cmpsl
pop
arpl
lods
in
and
aas
push
push
jae
add
sbb
out
xor
mov
cmpsb
xor
jmp
mov
test
nop
xchg
pusha
or
lods
fnstcw
lahf
or
loop,pt
incb
rcl
xchg
mov
sub
movsb
clc
sub
in
jle
xor
in
int
fcomps
xchg
add
cmp
pop
out
pusha
jg
out
cmp
arpl
inc
mov
ror
jb
jl
sahf
out
stos
pop
pop
sub
mov
cltd
xor
inc
xchg
or
lahf
jge
jo
sbbl
inc
int
aaa
jno
adc
dec
cmp
add
arpl
mov
mov
mov
lret
xor
mov
dec
sarb
jg
push
dec
jge
sub
xchg
stos
xor
insl
pop
xor
push
mov
jae
mov
mov
std
mov
loope
push
sti
popf
xchg
in
test
inc
inc
push
and
bound
jo
addb
lds
jo
mov
pop
cs
push
lds
sbb
add
ds
sbbl
jb
xchg
inc
mov
hlt
lcall
lea
lea
mov
sub
les
inc
imul
mov
and
push
hlt
pusha
xchg
lods
sub
daa
dec
loopne
mov
adc
xchg
subl
cwtl
mov
push
daa
outsl
sahf
in
lock
loope
es
dec
add
xor
daa
outsl
testb
iret
mov
mov
cwtl
cmpsl
das
jns
jge
mov
or
pop
pop
push
cmp
inc
shl
shrb
xchg
xor
gs
mov
imul
mov
popf
mov
add
call
call
adc
sbb
es
movsl
loopne
scas
sbb
pop
mov
fdivl
jge
push
js
je
sarl
repnz
push
je
fbld
in
mov
xor
aam
hlt
cmc
lahf
jl
inc
mov
cs
xchg
sbb
mov
mov
jns
mov
jns
push
xchg
mov
mov
sahf
in
mov
sbb
xor
jnp
pop
pop
imul
lahf
out
out
enter
mov
xlat
icebp
pop
push
data16
cld
and
push
sbb
cmp
push
test
dec
adc
push
and
cwtl
test
pop
mov
mov
sub
insb
rcl
shlb
in
mov
fwait
mov
add
ja
gs
outsl
es
gs
fsubl
push
xor
mov
sub
pop
ret
or
mov
insl
pop
sub
aas
dec
repz
stos
adc
xchg
cltd
inc
out
iret
dec
mov
mov
lods
in
aas
push
das
xchg
stos
ja
adc
jmp
orl
jnp
and
cmp
adc
in
movsb
ss
and
push
jno
fcomps
adcb
add
xchg
and
fwait
mov
pusha
sub
stc
cmpsb
push
mov
jp
out
loope
push
sub
lods
and
cmpsb
mov
outsb
fcomps
or
ja
aas
jecxz
test
xor
sub
jecxz
mov
aaa
mov
mov
push
fadds
xor
sub
subb
cmp
mov
and
jg
into
out
lock
mov
mov
fcoms
add
je
cmp
inc
loopne
or
pushf
rolb
mov
and
jno
in
lods
clc
cmp
daa
cltd
cmpsl
nop
enter
scas
adc
in
fisttpll
mov
mov
enter
shl
jnp
push
mov
adc
mov
cmp
rcrb
pop
mov
arpl
jb
ljmp
mov
xchg
fmul
aam
adc
mov
lock
movsb
popf
lock
jnp
or
jae
mov
out
add
int
int
negl
dec
lret
jno
data16
rcll
xchg
andl
popf
dec
icebp
out
mov
mov
fnstsw
cmp
dec
fdivrs
cltd
test
loopne
mov
rol
cwtl
add
imul
fldenv
call
cltd
or
mov
xchg
vcvttsd2si
test
fucomp
testl
inc
ss
test
orl
lahf
xor
cmpsb
sbb
shrl
popf
leave
or
push
or
testl
shll
adc
sbb
mov
hlt
inc
call
inc
cmpsl
inc
and
mov
stos
add
xor
mov
fisttpll
mov
aad
fidivs
stos
jmp
mov
out
andl
mov
gs
xor
dec
push
psrlw
movsl
fsubs
outsb
sub
inc
jecxz
mov
pop
jno
mov
add
sahf
mov
gs
repz
inc
pop
inc
push
es
add
sbb
sub
xchg
fiaddl
dec
add
cld
movsl
mov
fmul
jecxz
enter
sub
and
lret
and
movsl
lock
dec
lds
mov
cmp
out
repz
orb
lcall
jne
stos
mov
in
pop
cmpsl
jae
daa
mov
add
movsb
inc
fwait
xchg
in
inc
mov
in
clc
push
push
hlt
add
bound
jne
enter
cmp
jnp
fsts
dec
lods
cltd
lcall
aad
fnstcw
aam
or
lods
dec
pushf
insl
pop
movsl
adc
popa
mov
shl
push
and
xor
inc
jno
std
out
sub
push
cmp
fsubrl
jl
or
push
sbb
rclb
jge
dec
shlb
movsl
mov
sti
jb
mov
jmp
stos
cwtl
mov
ret
add
ret
push
clc
repnz
push
xchg
xor
and
call
repz
xchg
push
xchg
adc
push
scas
ss
cmp
pushf
shl
or
lods
dec
fnsave
jo
add
jle
push
pop
les
lret
test
cmp
mov
imul
loop
outsl
out
and
push
pop
repz
icebp
adc
mov
mov
lahf
mov
dec
outsb
imull
in
movl
rcrl
fcmovnu
fucomip
jge
add
sti
push
fcompl
addr16
inc
inc
std
mov
in
dec
and
cmpsb
sbb
movsl
xor
shl
stos
cmp
jae
mov
xor
pop
pop
scas
out
in
add
fdivrl
rolb
shrl
in
enter
cmp
frstor
or
xor
mov
and
ljmp
add
jo
loopne
imul
daa
push
push
add
jl
pop
and
xor
cmp
jmp
dec
test
and
xor
in
aaa
fstpt
icebp
mov
fdivr
test
adc
xchg
sub
xchg
and
mov
adc
pop
das
in
inc
push
or
scas
loopne
lds
and
jge
jb
dec
xor
sarb
add
ret
shl
jg
sbb
xchg
andl
orb
in
push
inc
push
push
push
test
and
mov
inc
and
sti
fcomi
jb
adc
out
out
cwtl
jge
mov
imul
in
vpcmpeqw
aaa
and
out
incb
jo
in
stc
std
outsl
stc
and
jle
ret
push
test
mov
test
cli
lea
insl
xor
loope
sarl
cli
aas
sub
jmp
mov
jle
movsb
pop
rorb
icebp
decl
loop
out
xchg
push
ljmp
insl
cmp
cmp
sbb
rcrb
icebp
xchg
push
pop
lahf
jg
lahf
mov
sub
cwtl
je
add
inc
das
push
test
rorb
pop
iret
xchg
add
inc
cmp
inc
icebp
xchg
je
scas
stc
add
sub
mov
adc
jns
aad
push
ss
jnp
loop
lods
fildl
xchg
cs
leave
movsl
or
cwtl
adc
jmp
mov
cmc
cmp
lds
sbb
or
or
lret
aas
scas
jne
mov
lret
sbbl
imul
dec
lods
mov
fsubs
rclb
push
sahf
adc
pop
mov
lret
les
add
ja
xchg
xchg
ja
in
mov
or
and
fstp
lods
adc
je
mov
shlb
mov
and
ja
adc
cmpxchg
cmp
add
mov
test
jb
and
dec
mov
cmp
jp
push
fbstp
add
sahf
xchg
mov
ret
add
popf
and
inc
data16
inc
stos
test
and
lahf
js
inc
std
lods
hlt
fnsave
scas
mov
or
lock
and
ret
movsb
int3
hlt
in
xchg
pop
xor
stos
out
movsl
inc
iret
rclb
pop
adc
push
mov
pop
popa
mov
sub
nop
sbb
cmp
mov
dec
and
cmp
iret
dec
add
pop
and
mov
add
js
xor
xchg
mov
hlt
mov
sbb
xlat
int3
dec
xor
jmp
nop
movsl
mov
in
rorl
pushf
hlt
iret
sub
mov
ficomps
cmp
mov
inc
lahf
xchg
lret
sub
push
jo
iret
jns
fwait
adc
mov
jge
or
repnz
push
ja
rcr
ds
fbld
arpl
sub
jnp
cmp
xchg
inc
arpl
insb
sbb
adc
arpl
shrl
lods
lcall
in
out
add
push
adc
add
add
out
jp
xor
mov
cli
mov
inc
loope
sub
das
sar
add
and
int3
cmp
lods
cli
adc
icebp
daa
add
jno
and
out
pop
sub
dec
clc
pushf
inc
insb
ffree
repz
xor
insl
cmp
inc
orl
adc
repz
enter
cmpl
lahf
mov
lds
jbe
fisubs
cli
xor
iret
rolb
stos
sub
lock
sarw
stos
lret
or
lds
sahf
or
ffreep
loop
insb
insl
mov
add
dec
lret
or
sub
lahf
mov
sub
test
setle
add
push
push
add
mov
loopne
mov
push
push
insl
mov
mov
lods
dec
push
cld
add
push
lret
iret
dec
add
fisttpll
add
push
nop
shrb
mov
test
arpl
xor
xchg
rcrl
xchg
cmp
sbb
popf
mov
xor
xchg
mov
dec
icebp
cmp
mov
sahf
cmp
jle
data16
loop
and
pop
push
and
mov
xchg
sahf
xchg
push
shrl
mov
aam
dec
out
jg
mov
dec
int3
mov
xlat
idiv
das
fstpt
fwait
and
mov
jecxz
xor
out
cli
cmp
aam
mov
or
push
jmp
fisttpll
in
and
test
addb
mul
cltd
imul
andb
jo
xchg
adc
jecxz
xchg
mov
mov
or
mov
fisubrs
xchg
mov
xlat
add
add
test
mov
aas
es
das
jo
stos
cmp
mov
in
adc
jae
pop
jmp
xor
push
addr16
push
and
test
lret
jno
sub
fidivrl
mov
mov
dec
jnp
lods
inc
es
dec
adc
lods
hlt
jle
xchg
outsb
xor
mov
jp
jmp
imul
dec
loop
and
out
mov
lock
xchg
mov
shlb
popf
add
aad
arpl
pusha
sahf
or
inc
inc
lods
xchg
mov
sbb
jp
xchg
fnsave
outsl
test
hlt
add
pushf
xchg
out
mov
arpl
mov
pop
cmp
push
adc
mov
outsl
push
pop
int
and
andl
cmp
push
jge
ss
ret
push
mov
inc
adc
adc
inc
ja
mov
add
mov
and
or
pushf
and
aas
mov
insl
imul
out
fistps
das
mov
icebp
xchg
rcll
or
push
mov
arpl
pusha
push
fdivl
cmpsb
les
cwtl
imul
fnstcw
mov
aad
mov
jbe
add
negb
push
or
ja
fwait
xchg
lret
dec
aas
rcr
fldt
xor
cmp
std
andl
fsubrs
dec
je
mull
out
mov
ds
in
fisubrs
std
sbb
push
add
loope
push
push
xchg
rclb
dec
dec
push
jne
lods
dec
sahf
das
subl
sti
aad
fimuls
nop
lahf
or
in
lret
jmp
xor
sbbb
xchg
int3
scas
sbb
mov
add
push
inc
pop
das
jp
mov
push
xchg
xchg
subb
cmp
push
mov
add
fs
lock
pop
push
lahf
int
push
arpl
aaa
fwait
into
sub
inc
push
sbb
fidivs
push
lret
dec
int3
push
and
cmc
lret
arpl
inc
dec
fcmovnu
leave
out
es
mov
mov
dec
jecxz
sahf
xchg
cmpsl
jns
pop
je
cld
and
inc
pop
add
sbbb
mov
cltd
or
sar
jno
jns
pop
jns
lcall
out
mov
pop
mov
jmp
outsl
mov
out
pop
or
sbb
cmp
jbe
push
mov
mov
int3
scas
clc
push
js
sbb
jecxz
adc
int3
in
shrb
and
addr16
push
repz
and
fistl
outsl
cmpl
mov
pop
mov
jmp
das
daa
push
iret
out
adc
ds
jecxz
mov
pop
jne
adc
pop
or
mov
sub
lea
ljmp
mov
xchg
popf
push
cmpsb
enter
mov
test
ret
out
or
mov
loope
inc
and
mov
repnz
jge
mov
mov
pop
sub
daa
cld
sarb
dec
and
xchg
cmp
adc
aad
lahf
pop
mov
pop
jg
stos
pop
mov
or
repnz
jb
rol
mov
adc
dec
shl
push
push
pop
or
lcall
xchg
jecxz
clc
sub
sub
sub
es
push
cli
mov
xor
push
loope
xlat
fnstenv
dec
ja
fstps
dec
jecxz
es
mov
stc
shr
test
in
sub
and
hlt
test
int3
sbb
mov
mov
push
lcall
sbb
mov
xchg
dec
adc
adc
bsr
mov
loopne
fcom
ds
add
push
les
fcompl
sub
insl
frstor
inc
sub
or
jns
lret
inc
inc
dec
xchg
mov
addr16
or
jo
inc
cli
je
mov
pop
mov
testb
push
outsl
mov
mov
roll
or
cmp
negl
cmp
xchg
push
nop
inc
push
incl
sbb
iret
fstpt
lret
pop
shll
into
mov
and
stos
sub
stc
or
add
jae
sub
int3
sbb
movsl
jnp
sbb
dec
jle
notb
cwtl
stos
fcomps
pop
jle
mov
mov
xlat
fdivl
or
push
loop
sarl
mov
pushl
jne
aaa
push
sbb
test
fnop
mov
cmp
mov
test
ja
xchg
sbb
rclb
cmpl
mov
push
dec
jg
mov
jae
mov
es
mov
push
or
cld
adc
push
pop
mov
adc
jecxz
ftst
cmp
dec
fwait
scas
clc
cmp
or
jp
loope
pop
jmp
adc
fsubp
adc
inc
cmp
cmp
mov
std
dec
inc
dec
jne
in
and
in
inc
cs
out
mov
xchg
jecxz
cmpsb
ret
pusha
in
cltd
enter
or
cwtl
sahf
xor
push
mov
cmpsl
adc
jl,pt
rcrl
push
lds
xchg
in
les
adc
addr16
jnp
mov
cld
mov
add
add
adc
lea
into
ja
jns
iret
pop
ja
or
lods
adc
adc
ja
ja
ja
jbe
mov
pop
pop
xchg
push
dec
mov
push
mov
xor
add
adc
jb
push
and
mov
aad
dec
cmp
xor
cmp
xor
mov
push
test
cmpsb
addb
add
jle
xor
xchg
and
push
jmp
sbb
jecxz
dec
add
movsb
push
mov
dec
xor
xchg
lods
aaa
mov
jo
imul
pmaddwd
sbb
dec
and
popf
shl
mov
int3
cmpsb
push
scas
int
cmp
xchg
jge
add
enter
lret
fdivl
call
gs
ss
aaa
cli
push
stos
push
inc
ja
jae
cmp
cmp
push
popa
shll
dec
test
shrl
lea
cmpsl
push
into
insl
jg
arpl
movb
xchg
clc
cmpsl
out
insl
add
addr16
adc
xchg
mov
push
push
cmp
adc
cmpsl
inc
mov
hlt
jnp
loope
lock
hlt
xchg
push
or
jns
cmp
jns
push
and
sub
lock
gs
xor
xor
notl
nop
daa
iret
clc
mov
fiadds
xor
sti
dec
out
pop
pop
addl
mov
jl
mov
cld
fstps
out
add
jmp
sahf
jmp
imul
push
dec
mov
aad
adc
bound
les
mov
pop
repz
cmpsl
int
sbb
mov
addr16
xorb
std
andb
or
shrl
ljmp
inc
xchg
lea
aas
int3
add
lahf
push
push
inc
cmp
mov
mov
mov
outsl
aaa
lret
ljmp
xor
scas
sbbb
sbb
pop
cli
or
or
sbb
jo
mov
pop
or
repz
or
leave
push
sbb
push
xlat
das
dec
mov
pop
add
sbb
xor
out
xchg
fisttpll
cld
xchg
in
fwait
cltd
xchg
test
mov
jb
inc
push
sarb
test
cmp
add
dec
sarb
cmp
testb
js
fistps
mov
pop
pop
mov
jl
cmp
add
lods
aaa
sahf
push
mov
pop
adc
add
lcall
ds
jns
and
mov
add
movsb
movsl
arpl
xchg
dec
mov
push
jl
pop
sub
mov
cli
cltd
xor
loope
add
clc
out
std
mov
js
mov
loop
mov
sub
sub
insb
int3
shrl
sbb
fldl
in
mov
call
sti
mov
imul
cmp
push
hlt
sbb
jp
sub
aas
mull
out
mov
inc
lcall
dec
ljmp
mov
bound
insb
fwait
inc
and
sarb
scas
fwait
cmc
push
inc
dec
dec
adc
lcall
mov
test
or
mov
jns
lds
xchg
cmpsl
fimull
adc
insl
xor
fchs
mov
les
fmul
pop
loopne
inc
jns
or
popa
cltd
push
pop
adc
xchg
scas
sbb
addl
lods
dec
fs
inc
lret
insb
push
dec
pop
fstpl
xchg
arpl
jbe
repz
jmp
cli
int3
mov
out
push
shr
xor
fucomip
scas
cmp
sbb
insb
push
fsts
daa
push
lock
repnz
aam
out
pop
scas
inc
inc
into
andl
lahf
mov
add
or
aam
imul
cmp
in
jg
jne
std
jecxz
cli
insb
jl
nop
mov
mov
jno
adc
jge
cmp
ss
cli
jae
ss
mov
lcall
sub
in
scas
lahf
jae
mov
ds
mov
adc
add
lods
lret
mov
adc
icebp
jp
stos
inc
fistl
test
cmp
call
imul
or
outsb
jne
push
mov
sub
adc
xor
push
lea
adc
leave
js
jae
dec
sbb
inc
jno
jle
aam
fbld
or
and
xchg
xor
bnd
stos
mov
inc
pop
int
dec
add
ljmp
addr16
jmp
jo
pushf
clc
cltd
lods
sub
aaa
insb
and
sahf
xchg
rorl
pop
lea
mov
movsl
sti
push
aam
sbb
push
mov
add
fs
mov
ret
loope
sbb
mull
rolb
mov
mov
pop
mov
daa
orl
fnstsw
mov
imul
push
sbb
movzbl
sbb
mov
mov
xchg
imul
pop
adc
sbb
cli
out
jmp
add
add
xor
push
push
push
mov
mov
inc
stc
ror
iret
loope
mov
cmp
arpl
or
rolb
leave
pop
xor
xor
jl
out
mov
repz
jmp
cmp
hlt
inc
stc
push
sbb
mov
mov
inc
bound
int
das
scas
test
xchg
outsb
loopne
cltd
xadd
fsubrl
pop
cmp
lea
insl
push
mov
mov
dec
sbbl
mov
cmpsb
lcall
lahf
or
sbbl
loop
fsubrl
xchg
pop
out
lods
fistpl
sbb
push
mov
xchg
dec
std
mov
fstps
dec
out
jle
addr16
sbb
les
loop
fbld
hlt
xor
imul
js
adc
rclb
pop
popf
aaa
pop
popa
inc
cmpsl
cli
xchg
mov
mov
idivl
rclb
xor
cmpsb
jle
sub
movsb
sbb
adc
sub
push
nop
negb
stc
inc
mov
inc
jge
push
lahf
jg
sahf
sbb
ret
sbb
scas
pushf
add
shl
pop
sub
xor
aas
js
fs
jmp
mov
mov
push
mov
mov
aad
jns
lret
insb
adc
xor
and
loope
mov
push
xchg
and
xchg
ja
push
jo
inc
addb
fdivr
cmpsl
jecxz
cmp
sbb
mov
pop
push
ja
lret
mov
popf
popl
idivl
fdivr
lcall
test
mov
push
subb
adc
ljmp
xchg
test
jg
loopne
sbb
jb
mov
mov
sbb
js
inc
call
inc
stc
leave
sub
adc
and
mov
mov
inc
int
push
sbb
ja
pop
cld
jno
test
in
sub
sub
dec
das
stos
xchg
sub
mov
adc
mov
es
loope
test
mov
test
xchg
icebp
cmp
mov
sbb
mov
loope
adc
rcrl
ret
in
rclb
pop
jecxz
dec
aaa
sbbl
insb
cmp
pop
call
push
inc
xor
scas
pop
les
popf
add
mov
push
or
out
xlat
mov
and
in
divb
movsb
xchg
inc
jno
push
push
xor
sbbl
cltd
pop
outsb
mov
jp
loope
fistpll
outsb
daa
mov
dec
jle
inc
fs
orb
mov
out
lcall
mov
imul
push
add
pop
dec
outsb
push
cltd
mov
push
iret
repnz
and
sub
imul
fnstenv
test
loopne
mov
movsl
lahf
int
dec
xchg
fucomi
cltd
mov
pop
mov
stos
and
loop
jl
adc
sahf
sub
inc
sub
adc
int
mov
pop
loope
les
push
push
insb
push
popa
mov
inc
xchg
jmp
repnz
push
mov
push
rorl
out
push
repnz
cmc
pop
sbb
add
inc
jbe
sbb
addr16
lods
mov
mull
inc
push
mov
mov
bound
add
xor
test
insl
imull
xchg
lds
out
xchg
add
aad
mov
jmp
or
mov
popf
scas
je
add
jecxz
inc
and
mov
lcall
xchg
test
ret
sbb
push
scas
stos
loop
push
imul
jp
push
cld
xchg
mov
dec
xchg
adc
lods
arpl
imul
dec
ljmp
clc
sti
sahf
pop
scas
mov
pop
pushf
test
mov
add
iret
adcl
out
xchg
or
or
cmc
inc
cltd
pop
or
gs
outsl
ja
push
divl
xchg
clc
jle,pt
pop
jle
lahf
jp
mov
jnp
mov
mov
movsb
mov
call
bound
inc
lret
mov
mov
aas
test
clc
pop
cwtl
inc
and
int
inc
add
scas
mov
mov
out
ljmp
push
jmp
cwtl
sbb
push
mov
inc
dec
jl
cmp
push
push
pop
sbb
fwait
lahf
jmp
imul
loop
lds
or
lret
lea
adc
xchg
adc
in
pop
std
and
fisubl
pop
popf
sbb
jne
add
out
cmc
test
cli
and
rcrl
idivb
ds
lods
movsb
lret
aas
stos
sub
nop
inc
movl
cmp
sub
daa
jle
aad
dec
cmp
iret
pop
jp
push
lret
pusha
mov
sbb
cmpsb
adc
push
mov
and
popf
lds
cmpsl
mov
push
jmp
adc
or
jo
ljmp
popf
cmp
cmpsb
sub
mov
lret
jns
push
lret
mov
call
and
push
adc
fidivrl
in
pop
clc
pop
fbstp
ret
out
aas
lret
mov
mov
ja
nop
divl
xlat
mov
push
push
repnz
stos
push
data16
popa
mov
dec
jno
xchg
in
out
fwait
popa
sub
and
dec
jo
popa
hlt
mov
cwtl
lcall
inc
cmpsl
or
or
in
lods
push
mov
add
or
iret
ss
sarb
subl
testl
pop
jl
fstps
loope
dec
or
enter
out
push
arpl
xchg
popf
insl
sub
add
push
mov
cmc
ss
test
jg
andl
pop
outsl
mov
repnz
mov
mov
outsl
jmp
loope
add
cs
inc
clc
add
insl
sub
mov
sub
mov
out
test
inc
das
or
jae
in
sbb
call
loop
sbb
loop
jmp
and
shll
push
push
inc
ljmp
icebp
jp
cmp
mov
into
in
jae
js
xor
or
cmpb
xchg
dec
jge
mov
aam
and
mov
xor
fs
fisttpll
mov
adc
sub
mov
test
dec
mov
pop
push
adc
mov
push
lods
jne
jp
jns
pop
mov
add
jecxz
push
aas
mov
shrl
jae
sti
dec
pop
mov
movsl
cmc
or
sbb
lock
fs
push
loopne
pop
adc
or
lret
cld
inc
mov
mov
jbe
cwtl
push
cmpsl
cmp
lods
xchg
dec
pop
stos
xchg
clc
popa
xchg
mov
rorb
cli
movsl
pop
fnstenv
cmp
xor
sahf
mov
rcr
cmp
mov
bound
adc
lock
lods
popf
insl
cwtl
add
ret
in
xchg
gs
dec
xchg
xlat
or
clc
add
jae
jbe
sbb
std
cmp
fnstenv
enter
push
pop
ljmp
inc
adc
mov
mov
fstl
jnp
push
das
addr16
jnp
xor
push
addb
cmp
sbb
xor
out
rolb
cmp
inc
popa
cmpsl
jp
fnstenv
mov
push
pop
nop
xchg
inc
cmpsb
xchg
push
push
mov
pop
cld
mov
je
xorl
shlb
movsl
divb
shlb
or
adc
mov
outsl
sti
xchg
or
dec
mov
jp
jnp
mov
fistpl
fiadds
sbb
mov
cmp
ds
dec
cmp
jle
push
call
pop
stos
in
mov
sub
inc
movsb
dec
xchg
icebp
bound
les
cmpsl
aas
insl
sub
inc
out
dec
jl
inc
lock
pop
imul
push
push
xchg
sub
ret
out
cmp
negb
or
and
popf
fldenvs
push
arpl
xor
jge
adc
or
sub
cs
push
mov
jge
adc
inc
xchg
lds
and
sahf
mov
mov
push
push
adc
fwait
mov
popf
icebp
ret
mov
mov
out
push
aas
mov
pop
ficomps
imul
dec
jno
pop
mov
adc
fsubrl
xor
jb
sbb
mov
lods
xchg
fnstenv
xor
lea
stc
loop
mov
cmpsl
xchg
jo
jp
imul
arpl
sbb
mov
int3
sbb
inc
xchg
std
sbb
outsb
sbb
and
stos
or
add
jne
addr16
jno
xchg
add
sbb
mov
addr16
movsb
and
pop
jle
je
push
or
and
sub
cmp
dec
jb
mov
fisubrl
clc
or
xchg
xor
mov
mov
mov
sbbl
sahf
mov
aad
lcall
ljmpw
cld
aas
fs
sarb
push
imulb
adc
movsl
pop
lds
cld
int3
mov
repnz
jg
dec
push
mov
xchg
shl
fldenv
into
cmc
mov
cmp
rcrb
sti
fiaddl
mov
dec
cmp
mov
sub
push
das
add
imul
mov
jg
in
out
cmp
incb
sub
inc
push
xor
dec
push
mov
scas
idivl
or
sbb
adc
daa
xor
adc
mov
pop
mov
lahf
sbb
call
adc
leave
dec
jecxz
inc
mov
sbb
shll
fcmovnbe
scas
bswap
aaa
xor
cmp
fidivrl
cmp
stos
push
jae
pop
jg
int
or
call
incb
into
ss
cmpl
xchg
push
ja
imul
shrb
push
test
adc
inc
or
scas
dec
pop
push
inc
hlt
sub
cmpl
inc
or
inc
cmp
push
in
xchg
fwait
mov
dec
inc
stc
jne
mov
movsl
cmp
cmp
testl
mov
mov
test
adc
rclb
shrl
and
rol
mov
outsb
insb
push
push
addr16
rorl
dec
inc
frstor
xchg
es
xor
outsb
jbe
cmpl
or
dec
jns
adc
mov
or
outsb
popa
add
mov
stos
aaa
push
mov
test
dec
inc
sbb
push
xor
or
mov
mul
stc
stos
jecxz
pop
lcall
jp
arpl
jmp
scas
cltd
and
insb
test
pop
and
insl
lret
xchg
sbb
pop
cld
cmp
stc
call
lds
or
mov
xchg
int3
add
jne
jns
jne
outsl
sbb
mov
adc
add
lock
data16
add
insl
mov
sub
shlb
adc
xchg
leave
inc
or
in
loopne
aas
mov
inc
das
int
mov
adc
xor
call
lret
add
insb
jno
lods
adc
dec
int
adc
mov
jmp
or
sub
add
sub
sarl
or
inc
jp
bound
aad
fst
and
dec
cmp
or
mov
lret
xor
and
mov
sbb
sub
or
mov
out
adc
jp,pt
jne
arpl
ret
fisttpl
jno
cltd
jp
inc
dec
xor
pop
mov
pop
adc
cmp
aam
dec
jno
sbb
lock
imul
pop
sbb
pop
or
roll
por
push
push
outsl
je
imul
adc
sub
cmp
fiadds
inc
mov
inc
icebp
arpl
aaa
cmp
cmp
in
cmp
mov
dec
lock
xchg
int
lds
testb
mov
dec
sarb
mov
mov
loopne
xor
sbb
stos
jne
cmp
xchg
std
sarb
sbb
jge
sbb
push
ficompl
lcall
mov
fistpll
fcompp
stos
or
push
aas
arpl
xchg
sbb
add
mov
jae
dec
xchg
mov
ss
cltd
adc
aad
and
dec
arpl
or
xchg
enter
mov
gs
mov
mov
cld
inc
sub
ret
mov
fcmove
mov
fsts
mull
push
pop
sahf
adcl
mov
hlt
jecxz
push
mov
or
jno
cmp
adc
xor
push
mov
pop
stos
cmc
pop
dec
sbb
cwtl
outsb
xor
add
aaa
lcall
lea
xchg
xchg
xchg
sbb
pop
cmp
jle
xchg
add
sahf
dec
ds
jecxz
adc
rol
js
or
inc
pop
pop
sahf
sub
push
call
jb
mov
subb
pop
adc
repnz
rolb
hlt
dec
clc
fiaddl
pop
sbb
ret
and
cmc
pusha
fsubl
lcall
mov
outsl
aam
mov
adc
mov
sbb
es
sub
push
icebp
mov
cwtl
mov
xchg
lret
xchg
into
push
scas
adc
cli
clc
movsb
jne
ret
movsb
adc
test
sbb
aam
insl
mov
xchg
out
xchg
jle
sbb
call
and
mov
xchg
imul
push
lret
cmpsl
jo
fcom
mov
jnp
push
dec
in
lahf
sub
mov
inc
push
or
sub
pushf
cli
rclb
push
fstpt
mov
dec
push
mov
dec
outsl
mov
int3
lahf
adc
nop
xchg
pop
and
add
sub
push
iret
mov
or
fildl
arpl
inc
or
push
sbb
stc
nop
in
rcrl
push
fsubr
sbb
loopew
mov
mov
movsb
mov
int
sbb
flds
shrl
test
lcall
mov
xchg
ficoms
pop
cs
pop
movsl
dec
data16
xchg
mov
fisubl
test
in
add
ds
stc
lcall
xor
dec
pop
std
inc
cli
jge
jl
adc
dec
lahf
out
xchg
mov
and
xor
lcall
repz
xorl
neg
sub
push
sbb
dec
mov
push
sbb
insb
sahf
push
xchg
mov
lret
data16
inc
push
adc
popf
cli
mov
mov
mov
jne
out
inc
mov
cmp
mov
jae
jmp
jg
bound
xchg
add
sbb
adc
test
xorb
sub
loopne,pn
sbb
xchg
push
out
sahf
xchg
dec
inc
lret
dec
sub
cltd
mov
jp
xchg
push
push
mov
loop
clc
xor
xor
cli
mov
xchg
mov
mov
movsl
sti
daa
add
sub
dec
jne
cmpsl
or
sub
push
push
lods
decl
dec
mov
out
int
fcmovnbe
mov
mov
dec
pop
xor
sbb
ljmp
test
mov
ret
cmp
xchg
ljmp
sub
mov
lds
je
inc
and
leave
pop
hlt
imul
jo
mov
lret
sti
xor
mov
mov
xchg
jnp
push
fstpl
rol
or
xchg
popa
jns
cmpl
cmpsl
pop
sub
test
sbb
sbb
push
notb
fcmovnb
sub
loopne
cmpl
pop
movsl
xchg
lods
push
jge
jae
stos
and
orl
subl
mov
outsl
aad
push
insl
mov
jo
lock
cmpsb
or
mov
jmp
xchg
xchg
xlat
bswap
mull
subb
lds
pop
fimuls
mov
les
int3
add
fstps
push
and
jo
mov
leave
mov
ljmp
xchg
imul
dec
mov
push
aaa
stc
pop
mov
in
or
inc
and
fistpl
fildll
cmpsb
sub
sub
cld
data16
cld
jne
inc
sbb
inc
adc
imul
jne
add
or
sub
add
or
fisubl
leave
add
mov
adc
inc
jne
xchg
mov
mov
loope
add
xor
fwait
mov
push
mov
loope
ss
jb
shrl
and
xor
test
mov
mov
pop
negl
mov
pop
test
pop
mov
xchg
inc
push
pop
ljmp
or
cltd
push
xor
ljmp
xor
push
std
dec
dec
mov
scas
adc
jge
in
loopne
mov
xor
ret
adc
mov
fdivs
pop
int3
mov
push
push
je
sub
pop
mull
ret
push
jp
stc
jnp
test
cli
cmpsl
pop
shlb
push
imul
lods
pushf
out
enter
sbbl
adc
xor
divl
dec
pop
mov
lods
push
scas
jb
push
nop
in
mov
push
and
mov
mov
jg
jle
and
iret
iret
test
xchg
cmp
or
push
jle
cmc
mov
jmp
or
sahf
add
cmp
scas
enter
pusha
ds
adc
xchg
lret
sbb
or
pusha
bnd
mov
into
add
add
stc
sti
lea
call
outsb
sub
sbb
inc
cmp
mov
dec
out
cmp
cmpsb
test
shlb
sbb
aaa
mulb
js
das
push
inc
dec
push
std
jp
jo
addb
xor
jae
xor
adc
loop
inc
mov
fwait
andl
xchg
adc
lds
in
jp
adc
pop
pop
mov
push
cmp
adc
lock
pop
int3
pop
pop
xchg
out
or
xchg
jns
out
or
lods
add
aaa
sbbl
push
dec
xlat
push
add
out
add
jb
mov
fistpl
hlt
cwtl
jp
mov
and
sub
std
xchg
lods
and
fsubrs
push
out
jle
pminub
sbb
ret
mulb
push
ret
out
mov
jae,pn
vprotw
jl
xor
jns
push
int3
daa
dec
popa
ss
mov
and
jle
test
jne
es
dec
xchg
jl
xchg
sahf
arpl
arpl
lret
xchg
sahf
jno
repnz
xchg
mov
jg
push
into
lods
lahf
mov
mov
xorb
inc
ja
shl
call
mov
jnp
test
cmpsb
mov
xor
jb
outsl
fnsave
lods
nop
xchg
out
fs
xor
leave
pop
lods
loopne
subl
aad
push
aam
cltd
cld
mov
push
inc
add
icebp
dec
cltd
mov
outsl
xor
ja
xchg
or
inc
xlat
or
bound
xchg
jb
inc
daa
mov
sarb
xor
and
adc
jne
data16
jb
xor
mov
jle
lcall
pop
fcmove
shll
dec
lds
clc
push
dec
outsb
push
std
inc
pop
loop
mov
and
out
cmovb
push
cmp
xchg
sahf
dec
loopne
mov
divb
mov
cld
pop
pop
ficomps
ss
xor
popw
add
bound
jmp
adc
pop
addr16
mov
lods
adc
inc
loop
mov
dec
and
mov
push
arpl
rorb
sahf
jb
mov
je
cmp
jmp
adc
iret
jns
xchg
or
out
fdivs
xchg
popa
pop
test
cmpb
jbe
loopne
sub
in
xchg
and
lods
test
data16
jg
fstl
xchg
or
cli
pusha
mov
imul
xchg
bnd
cli
cmpsb
divb
in
es
dec
sub
sub
dec
xchg
or
xchg
shl
ret
pop
inc
imul
xorl
dec
add
and
flds
std
incb
int3
inc
addr16
js
lret
push
lds
faddl
sbb
mov
std
jne
inc
push
jg
and
ret
inc
decl
sub
dec
mov
jp
stos
and
cli
push
dec
test
sbb
test
out
rorl
std
movsb
movsb
xor
dec
ror
stos
movsl
cmp
push
inc
mov
lcall
out
add
pop
lahf
xor
push
ficoml
xor
jno
adc
ja
xchg
push
pop
jp
ss
adc
add
addr16
cmp
popl
daa
mov
mov
int3
test
cmpl
dec
js
xchg
pop
cvtps2pi
adc
in
repz
rorb
cmp
sub
jmp
sub
aad
push
jae
mov
cmp
push
daa
dec
dec
push
loop
cmp
ror
imul
iret
add
repz
pop
fincstp
jae
sub
mov
call
push
push
out
enter
inc
outsl
jb
add
inc
out
ret
mov
push
and
inc
in
sarb
ss
xor
cmp
outsb
sbbl
pop
xor
std
rclb
inc
mov
imul
adc
test
xlat
and
pop
popa
mov
dec
in
in
push
jl
ss
in
jnp
xor
xor
pusha
bsf
mov
imul
mov
popf
pop
out
rclb
mov
and
mov
jecxz
dec
xchg
push
ror
pop
mov
and
dec
mov
adc
mov
in
jge
adc
scas
in
inc
pop
and
movsb
cmp
and
fst
adc
call
outsb
js
out
idivb
xchg
fidivrs
xor
jg
xor
incl
xor
stos
pop
std
loope
ret
adc
incl
or
lcall
mov
repz
sub
sub
sub
xor
loope
stos
mov
test
ja
das
mov
loop
shlb
jp
add
dec
mov
mov
inc
mov
les
insb
sbb
mov
mov
sbb
incl
jl
mov
mov
in
int
stos
xor
call
mov
add
mov
insb
lahf
int
daa
out
dec
aaa
icebp
inc
push
ss
mov
push
cmp
lret
aad
pop
add
insb
fstl
or
xchg
fs
sub
push
xchg
inc
mov
into
sahf
popf
int
arpl
jecxz
test
lods
jmp
lret
out
sar
inc
xchg
xor
or
icebp
test
mov
pop
sti
mov
cwtl
xlat
les
popf
mov
push
fs
sub
into
mov
dec
add
jnp
aam
adc
inc
mov
imul
pop
scas
mov
scas
push
mov
jecxz
mov
mov
xchg
cmp
pop
out
xchg
je
mov
fsubs
negl
adc
enter
sbb
inc
sbb
pushf
and
les
xor
in
pop
fstl
clc
fsts
adc
lret
mulb
and
sub
cld
es
xor
or
adc
push
push
jl
outsl
and
hlt
in
mov
arpl
sti
mov
mov
jp
mov
xchg
inc
inc
rclb
pop
push
or
cmpsl
lock
es
fs
scas
imul
outsl
test
xchg
add
add
add
add
add
cs
xorb
inc
je
push
es
xor
add
inc
adc
scas
fcmovnbe
sbb
add
mov
pop
jge
icebp
add
sub
sub
lret
pusha
jnp
mov
push
mov
dec
repnz
aad
xchg
int
nop
iret
mov
cmp
add
mov
add
and
mov
push
leave
out
mov
pushf
ficoml
dec
cmp
push
scas
dec
lcall
xor
xchg
pushf
dec
mov
push
pop
dec
daa
jl
scas
inc
pop
jle
out
push
clc
outsl
lahf
mov
mov
ss
push
add
add
mov
push
lds
adc
pop
and
mov
inc
cs
out
xchg
out
mov
mov
addb
je
out
int
out
unpckhps
data16
outsl
paddq
ss
or
pusha
popf
sti
shll
orl
pop
shll
push
mulb
dec
lret
and
les
addr16
sub
cmp
lods
lcall
add
test
add
xchg
push
dec
test
insb
movsl
cmp
sub
fistps
addr16
or
lret
or
lds
pop
jecxz
data16
xchg
adc
iret
dec
repz
rcl
dec
dec
ror
mov
mov
dec
sbb
dec
pop
aas
push
out
test
fsts
mov
notb
mov
xlat
movsb
fwait
imul
and
stos
lock
mov
outsb
mov
mov
push
push
lods
bound
inc
sar
cwtl
fisttps
pop
adc
mov
xchg
xchg
mov
sub
aaa
sbb
inc
adc
add
stos
in
mov
ss
fistpll
fwait
sahf
pushf
mov
sub
gs
mov
mov
mov
push
daa
cli
inc
cs
jne
cmpb
in
lret
pop
cmp
jmp
cmpsb
xchg
in
and
out
aam
add
pop
mov
or
ret
xchg
insb
jl
cmp
push
icebp
push
pop
sub
aam
pop
xor
xor
rorl
inc
shr
dec
movsb
outsb
movsl
or
lock
arpl
iret
sbb
inc
out
in
imul
pop
adc
mov
pop
lock
je
lcall
test
sti
mov
inc
jg
sub
sub
clc
sbb
pop
jl
cli
inc
push
add
inc
mov
and
fwait
jmp
test
inc
add
inc
and
lods
mov
insb
cmc
fldcw
push
and
outsl
das
push
shlb
repnz
mov
add
lret
and
adc
inc
insb
sbbl
mov
and
outsb
sbb
ljmp
adc
cltd
ljmp
fsub
ret
out
hlt
jns
aad
std
sahf
mov
repnz
imul
cmpsl
test
xor
add
xor
shl
jp
mov
aam
pop
mov
push
sub
fsubrl
pop
dec
icebp
pop
pop
scas
xlat
xchg
inc
in
bound
outsl
mov
xchg
add
adc
xor
rcl
addr16
sbbb
mov
loop
push
push
mov
cmp
push
push
dec
adc
mov
loop
cmpsl
mov
dec
ret
add
jb
repz
inc
xchg
mov
popf
clc
pop
mov
xchg
jb
divl
pop
cmpsb
ja
stos
cwtl
sub
sub
lahf
push
cmc
cwtl
cli
pop
xor
lea
lock
inc
sub
iret
aad
sub
push
and
mov
pop
mov
scas
xlat
dec
psllq
cmpsb
ret
sub
out
jmp
lret
lea
dec
sbb
test
imulb
aaa
out
fimuls
out
repz
loop
popa
adc
adc
dec
or
les
aaa
pop
push
and
and
sbb
enter
sbb
popa
add
leave
sbb
mov
inc
sbb
inc
dec
xchg
xchg
jmp
lahf
push
test
arpl
hlt
pushf
adc
ds
fistpl
add
dec
icebp
std
adc
fsubrl
xchg
sub
pop
jb
inc
push
out
mov
cltd
mov
xor
bound
rclb
popa
sbb
arpl
loope
outsb
or
xor
test
dec
mov
cmp
mov
xor
inc
add
std
js
aam
pop
lods
or
dec
push
inc
mov
dec
adc
add
cmp
sahf
fcompl
xchg
clc
test
mov
fs
shll
in
clc
xchg
aad
rorb
add
sub
lret
sub
jge
mov
mov
lds
and
push
enter
sbb
mov
mov
cmpb
add
test
and
aaa
and
inc
push
add
mov
ds
push
xor
mov
lret
ja
gs
mov
add
xor
xchg
mov
add
and
out
adc
ja
je
mov
push
in
filds
jne
nop
dec
imul
and
mull
mov
mov
fistps
jmp
repnz
mov
mov
or
inc
js
sub
inc
mov
add
add
mov
pop
movsl
xchg
out
aam
mov
ret
iret
loopne
loope
dec
arpl
shlb
popf
mov
shll
xchg
clc
hlt
lock
fisttpl
int
shrb
jge
out
setns
jp
addr16
pop
jnp
out
cmpl
ljmp
hlt
jb
mov
cmp
lock
out
cmp
and
xor
out
jns
jnp
and
mov
sbb
adc
jb
push
xor
inc
sub
push
cmpsb
mov
scas
jnp
out
jmp
lcall
clc
jecxz
jb
mov
mov
shrb
sti
pushfw
dec
mov
sub
xchg
shrb
lods
mov
out
jo
jae
outsl
or
adc
push
fcoml
fmul
xor
pop
sub
inc
pop
inc
xchg
imul
cld
pop
push
stc
sti
popf
mov
das
and
pop
lods
divl
ss
adc
lods
pop
add
mov
xor
ja
movsl
fbstp
test
fistpl
fiadds
aad
xchg
into
data16
mov
add
stc
into
sub
pop
mov
rcrb
mov
push
inc
jnp
or
decb
pushf
jnp
stc
test
inc
mov
fnsave
sub
dec
out
push
stc
das
rcrl
jae
sub
dec
mov
divl
dec
sahf
insb
scas
mov
cmpsl
fldl
stc
cmp
mov
jg
test
jno
jmp
mov
mov
in
or
in
aaa
sub
push
cld
fldenv
sbb
aam
jo
popf
loope
movsb
mov
rcll
or
orb
outsl
das
loop
arpl
lret
add
subl
mov
out
push
xor
xchg
sbb
bound
repnz
mov
pusha
push
jge
test
xor
mov
dec
pusha
sbb
imul
aaa
inc
sar
inc
sbbb
pop
sahf
insl
mov
movsb
nop
jmp
xor
push
and
and
adc
fdivl
inc
repnz
push
fbld
insl
sbb
push
hlt
xor
arpl
jmp
or
mov
pusha
pushf
out
adc
mov
mov
ss
adc
insl
xor
stc
mov
pop
je
repz
pop
add
scas
nop
out
or
push
addr16
adc
nop
js
and
notb
mov
jl
fldt
lret
aad
in
push
das
fmul
jo
cmc
lock
mov
out
jno
incb
pop
stos
mov
cld
addr16
fdivl
xor
inc
jl
pop
jl
sbb
sub
negl
add
jae
int
fisttpl
sti
jne
fsubrl
mov
incl
int
les
mov
mov
fimull
xlat
in
cmp
sahf
sub
mov
andl
push
xchg
enter
out
lods
hlt
fwait
ja
pop
xor
shlb
fcmovnu
lcall
xor
lods
push
callw
sub
mov
pop
ljmp
mov
cmpl
movsl
fdivl
add
mov
stc
mov
push
shrb
cltd
pop
push
xor
fisubrs
cmp
testb
jmp
xchg
add
fadds
add
int
into
mov
push
adc
and
sbbb
mov
pop
enter
dec
je
mov
icebp
dec
out
mov
pop
jne
push
jg
mov
mov
pop
cmp
in
in
xor
divl
sub
fdiv
ffree
mov
outsl
dec
packssdw
mov
cs
fists
in
popf
push
mov
addb
mov
jo
pop
mov
hlt
loop
enter
inc
push
ljmp
xor
lcall
outsl
add
mov
mov
roll
js
test
das
or
jecxz
mov
iret
subl
add
mov
xor
xchg
cld
jno
pop
or
pushf
js
arpl
mov
xchg
sahf
xchg
jnp
pop
xchg
lea
mov
or
cmc
jo
lods
sbb
xchg
push
cmp
jo
mov
adc
rol
scas
adc
insl
icebp
or
gs
test
or
addr16
clc
push
mov
sub
stos
sub
push
sbb
or
jmp
fwait
jae
iret
mov
ret
aaa
add
sub
add
pop
movsl
adc
sub
pushf
in
sub
outsl
inc
fstl
mov
inc
and
jo
gs
adc
ret
mov
mov
mov
adc
lahf
lea
repnz
fisttpl
shlb
cld
push
push
pushf
or
mov
push
add
mov
or
mov
arpl
repnz
and
in
pushf
fs
test
add
cwtl
ret
cmp
gs
jnp
dec
jno
dec
cltd
mov
mov
test
mov
fs
add
mov
in
cmp
mov
jns
dec
dec
cmpb
push
xchg
repz
in
mov
or
adc
cmp
je
imul
jl
jl
mov
out
imul
jl
fs
xor
not
jp
insl
repz
adc
adc
push
fs
cli
inc
inc
fwait
cwtl
mov
mov
mov
mov
call
mulb
rorb
add
loopne
rcr
dec
mov
mov
xor
cld
mov
js
iret
push
adc
mov
and
adcb
rorb
sbb
mov
mov
cs
cmp
outsl
mov
arpl
insb
in
sub
fists
loop
push
push
addr16
push
sub
fldl2t
enter
jbe
dec
jns
cld
dec
icebp
mov
addr16
sub
or
ss
test
adc
std
push
mov
divb
mov
iret
stc
inc
jns
adc
cmp
inc
bnd
ret
cmc
push
adc
movsb
mov
rcll
xchg
stc
xchg
enter
add
orl
in
popf
cmp
leave
sbb
js
dec
jmp
mov
xor
je
pop
roll
dec
pop
mov
mov
ficomps
or
mov
pushf
mov
cmp
mov
jnp
fstpt
out
xchg
mov
je
and
imul
andb
inc
mov
mov
add
inc
xchg
and
nop
push
or
fcom
sarl
sbb
mov
fs
fwait
or
rcl
inc
jne
inc
and
add
dec
xor
in
mov
and
push
out
mov
adc
cmp
std
xchg
jno
inc
out
cld
sub
testb
outsl
fnstsw
and
jge
pop
jp
ret
aas
cmp
mov
insb
xchg
mov
repnz
or
add
sbb
stos
xor
adc
push
aam
and
jle
sub
shld
cmp
dec
mov
mov
xchg
notl
xchg
mov
adc
aas
cld
jbe
sbbl
shrb
sbb
jae
rcll
pop
lea
or
test
aad
xor
std
inc
rcll
ret
test
adc
lcall
cmp
mov
mov
dec
fiadds
lcall
js
pop
mov
fcom
lock
ds
popfw
mov
aam
sub
fs
scas
loopne
cs
mov
mov
scas
pop
popa
mov
fldt
push
mov
and
xchg
fidivl
sarl
mov
push
sbb
sbb
mov
cld
std
mov
adc
arpl
xchg
test
jl
mov
enter
push
mov
cmp
popa
adcl
mov
int3
iret
stos
mov
pop
outsl
dec
xchg
xchg
inc
push
cmp
lods
clc
fs
sbb
xor
jg
xchg
xor
sub
sbb
add
pop
pop
cmp
xor
dec
mov
stos
jle
les
xor
les
xlat
or
push
xchg
imul
add
pop
pop
mov
ficoms
and
mov
jne
loope
xchg
sbb
cmp
je
cmp
stc
add
mov
push
out
mov
sbbl
int
xchg
mov
xor
inc
push
insb
ljmp
mov
lods
jmp
push
lahf
mov
adc
ret
push
sub
mov
pop
push
sbb
fstpl
sub
cmpsb
sbb
adc
mov
sbb
push
nop
cmp
lcall
mov
pop
loopne
jmp
dec
arpl
testb
inc
xor
jno
test
in
adc
fstpt
cmpsl
imul
jmp
push
loopne
mov
adc
cs
test
jmp
inc
lock
cld
jmp
and
and
dec
lds
xchg
int3
jecxz
lock
dec
cmc
sbb
mov
adc
push
inc
mov
cmc
jmp
arpl
mov
ret
in
aaa
push
jne
mov
cmp
fisubl
sbb
shlb
or
push
cmpsb
shl
cmp
andb
add
or
mov
data16
dec
iret
mov
js
movsl
inc
mov
adc
push
mov
test
mov
pusha
sub
push
mov
stos
jg
cld
or
aaa
mov
push
into
aam
sub
jb
sbb
xorl
in
jb
addr16
lock
iret
sub
sub
mov
xor
push
repnz
rcl
pop
xchg
loop
testb
stos
pop
outsl
pop
out
fistpl
sahf
mov
fsubrs
xor
pop
popf
sbb
jno
push
mov
je
jg
xchg
lret
fmull
xor
test
push
repz
data16
dec
shlb
cmc
xor
mov
pop
addl
push
je
outsl
mov
and
pop
lods
xchg
or
rorl
loop
pusha
xchg
pop
inc
mov
insb
xor
shrb
push
imul
sahf
loop
push
pusha
movsb
xor
int3
xor
jle
loopne
in
push
gs
aaa
jno
dec
xor
adc
adc
lods
repz
movl
sub
filds
mov
addl
lret
filds
lods
cmc
dec
pop
popl
mov
dec
sbb
add
add
cmp
lret
mov
jne
inc
sti
xchg
or
stc
cmp
adc
mov
negb
test
inc
subl
add
jmp
int3
lds
adc
fld
or
fstpt
imul
push
inc
rcll
jns,pn
dec
gs
adc
dec
cmpsl
or
js
iret
inc
push
pop
xchg
sub
pop
push
pushw
pushf
insl
mov
xor
pop
mov
aam
mov
repz
jp
mov
push
and
imul
cltd
dec
jb
mov
push
jne
sub
rolb
push
mov
jnp
mov
ret
data16
fmull
mov
push
xor
or
xchg
in
sbbb
clc
aam
sbb
rcrl
xchg
xchg
data16
sub
xor
xchg
xchg
sub
xchg
xchg
adc
or
loope
pusha
xor
mov
dec
pop
mov
arpl
pushf
dec
out
movsb
jecxz
imul
add
movsb
stos
jbe
xor
or
xchg
xlat
xchg
das
cmc
sub
pop
jle
jbe
test
mov
lods
adc
idivb
std
dec
arpl
shrb
jge
fidivl
or
push
push
add
or
rol
mov
jle
dec
out
int
add
lds
push
mov
in
hlt
fwait
inc
cmp
addr16
aam
push
jns
cmp
jle
enter
add
imul
cmp
leave
mov
je
fdiv
test
iret
fimuls
dec
out
rcll
cmp
test
insb
popf
in
cmp
xchg
outsl
dec
dec
shrl
push
outsl
ret
dec
int3
aad
dec
push
cmp
les
and
pop
lods
and
std
add
addb
ret
fwait
in
rcrb
out
cmpsb
sub
sbb
and
or
xchg
nop
and
add
in
mov
fldcw
insl
js
dec
cmp
mov
xor
jnp
scas
push
xchg
jle
mulb
mov
jl
add
cmp
clc
daa
sub
pushf
add
sub
repz
mov
imul
cmp
sub
push
inc
inc
popa
neg
or
nop
cmp
and
pop
xchg
ret
inc
jmp
clc
inc
cmp
stos
dec
or
repz
mov
cltd
jmp
stc
stos
pop
imul
cwtl
gs
dec
add
stc
dec
mov
inc
push
cwtl
push
dec
call
jb
cmpsb
mov
push
dec
je
ljmp
div
xorb
adc
push
xor
les
leave
in
fisubl
dec
xchg
fimull
push
rclb
push
or
data16
nop
ficoms
sti
pop
clc
mov
xchg
push
xor
sub
push
mov
sbb
xor
and
and
mov
jg
insb
scas
loop
and
inc
test
pop
mov
adc
mov
or
rolb
pop
push
mov
ficompl
sbb
xor
das
mov
mov
leave
push
sahf
in
les
cltd
mov
repnz
xor
lods
or
ret
jne
cs
insl
jle
pop
aam
es
aaa
cmpsb
cld
in
je
dec
das
ficoml
fs
pushf
lret
jg
std
loopne
mov
mov
cmp
bound
dec
rcll
sub
adc
sub
aaa
sti
cltd
jns
in
jecxz
mov
or
push
push
cmpsb
aas
ljmp
jae
stos
dec
dec
xor
add
lea
sbb
jl
ftst
mov
test
dec
test
orl
mov
scas
mov
into
pop
out
cld
rolb
mov
cmp
std
push
aad
in
inc
dec
mov
mov
push
in
aad
and
ds
rolb
push
iret
inc
sub
cmc
or
ret
inc
ja
idiv
outsb
cs
aad
jns
test
mov
inc
inc
push
scas
push
aaa
inc
fiaddl
dec
js
mov
test
push
data16
aas
jb
scas
xchg
shl
addb
repnz
nop
dec
or
xor
aam
repnz
sti
pop
push
ret
xorb
std
or
aad
mov
adc
jle
cmpl
ret
shll
and
jp
stc
mov
aaa
xor
mov
icebp
out
jmp
sbb
pop
pop
mov
cmp
enter
xchg
adc
lcall
iret
xchg
push
rep
jmp
in
test
arpl
lcall
or
cltd
in
lds
outsl
shlb
rcr
lea
mov
scas
push
push
insb
rcr
fsubrl
xor
insl
adc
fs
sbb
jne
dec
cmp
cmp
push
cmpsl
mov
mov
cmpsb
adc
and
or
or
test
xchg
jge
inc
test
sbb
sar
lock
mov
cmp
pop
mov
jns
sarb
pop
sbb
xor
add
aam
out
adc
mov
mov
sub
xor
les
mov
fs
or
mov
daa
jmp
hlt
pusha
negb
js
add
cld
sahf
rclb
cmc
out
xchg
rcrl
xor
icebp
sahf
xchg
sub
sub
add
push
outsb
add
xchg
dec
push
sbb
push
leave
sub
mov
fwait
cld
sbb
jb
xchg
insl
push
or
bound
or
pop
sub
or
lods
xchg
and
iret
fldt
mov
nop
sub
add
outsb
mov
cli
dec
adc
cmp
adc
stos
cs
dec
mov
neg
add
dec
iret
add
sub
pop
adc
jmp
gs
push
inc
cld
add
scas
insb
mov
jle
pop
or
repz
das
sub
scas
pop
ret
das
mov
std
adc
das
add
aaa
mov
dec
dec
xorl
testl
sub
cmp
inc
jg
pop
jmp
inc
sbbb
xor
pop
xchg
push
in
decl
stos
cmp
jb
jecxz
fwait
push
cmp
cld
jge
pop
sbb
add
mov
mov
or
pop
push
xchg
iret
js
mov
clc
xor
enter
inc
shlb
movsb
jo
iret
subb
fcoms
xor
sbb
jns
sahf
cs
add
jmp
jb
stos
test
decl
idivb
pushf
add
mov
andb
call
push
stos
xor
mov
int3
cwtl
mov
addr16
pop
mov
dec
mov
mov
mov
inc
xor
fidivl
xor
sbb
movaps
inc
xchg
inc
push
int3
mov
ret
sbb
sahf
hlt
inc
aas
pop
jns
js
movsb
jbe
push
sub
jo
cmp
inc
repnz
xor
cmp
movsb
sub
jmp
cmp
jl
test
pop
jns
dec
add
pop
sub
fdivp
cmp
daa
outsl
jno
jmp
or
mov
cld
int3
dec
jbe
pop
mov
popf
mov
dec
sahf
adc
adcb
sbb
add
pop
arpl
orl
jae
std
push
and
ja
xor
push
stos
test
repz
mov
and
xor
rcr
cmc
push
inc
cwtl
pop
movsb
in
and
push
lock
insl
or
out
movsl
xlat
or
xor
dec
in
or
outsl
jo
sahf
cmp
popa
adc
es
imul
inc
repnz
movsb
js
paddusb
mov
fwait
xor
ret
andnps
mov
repnz
mov
enter
xchg
mov
cmpsl
cmc
loop
and
lret
inc
out
clc
scas
sbb
sti
fisttpl
loop
jle
and
insb
push
lret
bound
mov
dec
sub
mov
cld
mov
mov
call
scas
and
sbb
fcoms
arpl
movsl
xor
loopne
push
lods
sbb
ja
js
pop
aas
popf
cs
push
sbb
xchg
sbb
lahf
jbe
sub
ror
mov
lods
add
daa
jecxz
iret
adc
adc
adc
mov
mov
fidivs
jecxz
mov
inc
adc
fistpll
sbb
lods
daa
push
sahf
test
ds
shlb
fnstcw
mov
gs
or
lcall
into
repnz
mov
inc
fsubs
jmp
jns
in
cli
cmp
xchg
vxorps
andb
xchg
cld
dec
xchg
fwait
add
xor
ret
pop
mov
adc
mov
shl
or
sub
fucomp
lock
mov
sbb
test
sahf
cmc
xchg
jge
inc
xchg
xchg
and
std
out
lock
jge
and
and
fs
xor
jecxz
mov
lds
mov
rorl
sbb
mov
xor
hlt
inc
sti
std
gs
or
arpl
mov
xor
xchg
stos
push
jmp
or
pop
xorl
fcmovnbe
addr16
xchg
test
stos
in
or
out
jle
fadds
js
je
int3
pop
lahf
mov
popa
adc
jle
je
adc
test
inc
das
loop
jge
jmp
mov
ret
rcll
xchg
lods
lret
sbb
xchg
int3
add
rolb
xor
rclb
mov
cmpsb
add
xchg
jae
and
dec
sub
xchg
pop
sub
jbe
ficoms
cld
inc
stos
sti
sbb
or
repnz
xchg
mov
xchg
adc
jl
sbb
arpl
outsb
shrl
xor
pop
dec
pushf
push
mov
push
pusha
in
xor
push
bound
je
mov
mov
mov
cmpb
push
int
mov
jmp
add
in
sbb
pushf
lea
lahf
xor
pop
xchg
ja
decb
pop
test
out
das
push
in
pop
pmaxsw
xchg
cmp
inc
xchg
sub
push
lods
and
or
sub
adc
std
xor
cltd
cmp
xor
xchg
sub
subb
test
insl
insb
xor
std
dec
stc
inc
or
xor
rcll
add
dec
ja
ds
shrb
push
movsl
fstpl
mov
mov
in
aaa
aam
and
mov
in
and
mov
sub
jl
sub
push
push
movsl
testl
aad
xchg
mov
xchg
add
out
les
add
jmp
xchg
int
aad
pop
mov
les
push
fsubs
cmc
jp
movsb
adc
imul
xchg
repz
mov
das
pop
in
push
notl
dec
mov
inc
fsubr
mov
iret
dec
add
lahf
push
dec
mov
dec
adc
mov
rep
xor
cmp
mov
xchg
jns
mov
loopne
sub
ja
inc
notb
pop
gs
cmp
dec
cmp
mov
lret
test
adc
sbb
add
in
dec
inc
jp
adc
jno
xchg
arpl
push
adc
dec
or
popa
mov
test
iret
popf
xor
push
mov
mov
aam
adc
aad
mov
pusha
into
and
inc
cmp
push
cmp
cmpsl
sub
jnp
pop
push
ret
push
push
out
mov
pop
lret
mov
aas
ficoml
mov
mov
bound
out
jo
xor
popa
and
and
les
loop
or
dec
popa
pop
mov
ret
outsb
loope
nop
or
jae
cmpl
pop
scas
popf
divb
scas
repz
inc
and
test
push
or
and
xchg
fs
jb
imul
out
addb
ds
mov
mov
mov
inc
xor
mov
cmpsl
jns
inc
xlat
mov
mov
mov
aaa
shl
xor
pop
mov
pop
adc
nop
pop
xor
inc
lret
lcall
sub
sub
fimuls
mov
push
inc
sub
outsb
insl
pop
mov
in
mov
outsl
sub
cmp
jbe
mov
jp
add
cmp
lods
xchg
or
push
aam
les
sbb
ss
push
inc
cltd
lea
scas
iret
in
popf
push
add
mov
cmp
data16
pop
cs
dec
fldl
notb
jle
or
fisubrl
push
adc
outsl
bnd
and
adc
addr16
push
lods
mov
pop
jge
push
mov
add
pusha
ds
xchg
cmp
lods
push
jge
xor
mov
mov
jg
push
lods
jge
ror
sbb
adc
push
rorb
jns
nop
sbbb
je
fisubl
and
push
imul
xchg
push
pop
addb
cmp
adc
push
mov
stos
inc
pop
in
mov
cmpsl
cmp
pop
xor
mov
ja
mov
pop
mov
out
repnz
cwtl
add
js
rcrb
pop
lds
icebp
jns
and
jae
ds
sub
aad
je
es
xor
popa
lock
das
jecxz
insb
dec
push
cmp
jle
dec
gs
sub
daa
in
aam
insl
inc
sub
dec
mov
int3
inc
mov
pop
jecxz
ret
push
xchg
mov
lahf
ret
fcompl
imul
push
imul
addr16
add
insb
mov
data16
add
and
sbb
test
or
jg
dec
mov
out
sub
leave
in
lods
cmc
ret
adc
add
pop
push
test
ja
push
outsb
or
mov
sbb
lea
fwait
cmpsl
arpl
xor
adc
jnp
loopne
xor
data16
sbb
and
jp
mov
das
xor
mov
fstps
add
mov
pop
and
scas
add
pop
pusha
test
pop
pop
mov
jecxz
roll
pop
je
and
call
dec
mov
inc
lea
out
add
ja
addr16
xchg
and
sbb
adc
cmpsl
testl
or
mov
adc
sub
out
jbe
lahf
imul
js
test
dec
enter
push
ret
rol
sbb
xlat
test
sbb
mov
imul
test
adc
cmp
ret
stos
inc
and
sarb
stc
sahf
aaa
jg
jge
fs
sub
in
lds
test
in
inc
pop
push
xchg
cmp
inc
cwtl
or
mov
push
in
loop
xor
jne
inc
mov
jecxz
jne
mov
iret
fmuls
pop
mov
mov
mov
pop
js
inc
pusha
mov
sub
add
mov
cmp
push
shll
pop
sub
dec
sbb
inc
aaa
add
inc
cmp
lds
sbb
push
lret
push
scas
aaa
pop
sub
push
mov
adcb
aam
and
test
mov
jp
push
in
sarl
mov
adc
pop
push
push
jmp
and
jl
add
pop
iret
in
push
cs
mov
je
xchg
sbb
xor
add
movsb
jge
sub
aas
call
cmp
dec
adc
repz
jmp
cmp
data16
mov
push
jmp
push
jl
add
popw
outsb
push
out
repnz
add
jle
ret
sub
es
pop
add
out
xor
lods
pop
mov
addb
shlb
xlat
xchg
hlt
imul
mov
inc
inc
inc
fiadds
mov
sub
xor
int
jo,pt
add
push
cltd
dec
pop
xor
cwtl
rorb
mov
jge
movsb
pop
push
pop
aaa
test
pop
mov
mov
or
adc
repnz
pop
mov
push
and
ljmp
pop
xchg
dec
into
sub
mov
mov
bound
mov
mov
dec
in
sbb
jns
imul
idivl
sbb
push
pusha
jmp
mov
mov
scas
fiadds
xchg
sbb
inc
or
inc
jb
mov
call
pop
xchg
sub
add
mov
push
push
scas
xchg
pop
stos
adc
jmp
sbb
stc
std
jp
addr16
or
xor
movsl
jae
or
leave
or
xchg
mov
stc
dec
jg
ds
imul
icebp
mov
jle
pop
std
ds
inc
pushf
mov
les
and
jne
addb
push
push
inc
int3
jno
cmp
xchg
out
fadd
push
iret
or
push
xchg
mov
scas
and
adc
js
sub
push
mov
ljmp
pop
inc
or
and
jl
or
rcl
pop
dec
fwait
inc
subb
mov
pusha
ds
jae
pop
pop
jle
sub
sub
fs
cmpsl
sub
xchg
push
insb
pop
add
jne
lahf
mov
and
push
in
stos
daa
sti
mov
imulb
iret
stos
sbb
lret
loop
scas
jle
mov
and
repz
mov
mov
mov
fisubl
dec
aad
jle
mov
shll
in
scas
movsb
inc
mov
das
push
push
fwait
lea
lret
out
fdivrs
lods
dec
xchg
test
ljmp
push
xchg
pop
mov
int
mov
std
les
add
add
cmp
fldt
mov
mov
mov
mov
addr16
mov
ficoml
mov
and
jnp
idiv
fnstsw
inc
pop
lock
inc
icebp
loopne
fisttpl
sub
nop
or
cmp
in
lea
jno
mov
popf
push
fs
sub
mov
ficompl
pop
in
das
pop
adc
enter
and
mov
daa
cmp
test
dec
mov
push
and
pop
rorb
adc
shlb
mov
jbe
icebp
loop
movsb
popf
js
adc
leave
aad
fs
stc
jmp
lods
cmpsl
dec
lret
jge
lret
and
adc
insb
inc
repnz
cmp
adc
or
loop
mov
add
sub
pushf
and
imul
mov
dec
fwait
xchg
push
enter
xor
add
andl
int
push
scas
mov
push
ss
dec
int3
jp
push
push
pop
cmp
jo
in
mov
inc
cmp
dec
mov
xchg
lods
sub
cmp
mov
in
dec
cmc
in
shrl
sub
imul
repnz
movsb
xor
lahf
leave
stos
jnp
popf
into
repz
loop
cmp
popa
popf
pop
test
rolb
popa
mov
sub
mov
pop
rcr
in
push
cltd
sub
adc
sub
sub
lret
push
xor
dec
jecxz
lds
fs
sub
mov
inc
xchg
daa
push
cli
mov
in
mov
jecxz
into
adc
cmp
das
std
inc
cmpsl
adc
xchg
jmp
add
dec
gs
in
das
stos
aad
add
into
nop
xor
fs
jmp
call
cmpsl
jns
js
insb
rolb
adc
xor
testl
das
push
daa
out
ss
add
nop
rcl
mov
iret
fs
ljmp
mov
adc
sbb
pop
xlat
xor
pop
fistps
push
lea
cmp
pop
jne
dec
dec
pop
ret
adcl
sbb
ds
mov
sbb
iret
jmp
rorb
nop
cltd
inc
jle
js
imul
push
jmp
rcr
fnstenv
imul
sub
leave
int
jns
leave
movsb
push
mov
orb
pop
rorb
jb
and
jg
push
sbb
pop
aad
cmp
and
xor
mov
mov
inc
add
stc
bound
jbe
out
movsl
sti
add
cmp
xor
cmp
ret
sub
jb
push
fimuls
int
cld
cmp
mov
pusha
xchg
push
push
xor
lods
mov
cwtl
mov
lods
scas
mov
rolb
int
fsubrl
test
cwtl
repnz
mov
sub
xchg
cmc
ficomps
dec
dec
pop
dec
int
in
dec
cmc
mov
xchg
fsts
sub
mov
in
in
pop
int
add
or
push
outsl
in
mov
shl
cli
xchg
dec
in
cmp
cmc
sbbl
scas
push
testb
iret
int
push
cs
inc
cmc
sbb
imul
test
push
sub
mov
push
dec
xor
inc
push
mov
mov
iret
dec
aas
das
pop
aaa
cmp
adc
push
jnp
ret
add
jne
into
test
inc
jecxz
push
mov
jne
dec
push
cmp
je
pop
push
int
push
mov
push
push
jnp
lds
shlb
cli
ret
or
dec
in
sub
ja
iret
mov
out
dec
jl
lret
call
add
dec
mov
pushf
out
dec
pop
mov
stc
lock
ds
out
gs
or
adc
in
mov
fisttps
jne
cmc
outsb
cld
fs
sub
mov
push
in
imul
push
cltd
repz
popf
and
and
fsts
scas
fmul
cmp
repz
cltd
lods
dec
inc
xchg
jns
leave
mov
adc
mov
cmp
popa
jecxz
adc
fsubl
pop
pop
jmp
clc
fisubl
adc
out
xor
mov
xchg
push
fs
pusha
stos
push
imul
negl
and
push
jne
test
mov
fwait
lods
ds
popf
lcall
sti
call
sbb
adc
imul
scas
adc
sbb
cmp
dec
cmc
insb
mov
mov
dec
push
cltd
pop
mov
xchg
push
es
jmp
clc
fimuls
or
scas
popf
push
push
sub
lret
std
mov
fsubl
jg
addr16
mov
lcall
jae
xor
ljmp
push
sbb
push
imul
cli
frstor
dec
insl
repz
in
inc
inc
loopne
fwait
jne
pop
mov
sarl
movsb
clc
aad
pop
mov
lods
in
mov
adc
lods
inc
arpl
insb
movsl
sub
mov
ficomps
jnp
xchg
movsl
adc
pop
cs
push
and
cmp
ja
cmpsb
mov
cli
xlat
call
fbstp
pop
popa
movsb
xchg
and
jno
sahf
xchg
mov
cmpl
lret
shrl
jbe
cmc
fcmovne
lods
lods
fldt
xchg
add
call
xchg
dec
lret
cmp
lock
insl
shrl
ret
xor
das
xlat
fidivrs
and
mov
xchg
and
xor
dec
shrb
mov
stc
leave
das
fs
loop
jno
test
fidivrs
mov
movl
jp
popf
scas
push
imul
loopne
dec
popa
sub
jecxz
xor
pop
jle
int3
ja
sub
xlat
mov
pop
xor
jne
dec
and
in
testb
stos
lods
mov
adc
push
fildll
stc
ja
xor
or
cli
sub
test
mov
ljmp
xchg
sub
push
dec
xchg
pop
pop
icebp
adc
pop
push
mov
loope
push
xchg
mov
test
stos
lret
mov
mov
dec
mov
and
pop
cmc
sub
and
imul
movsl
pop
stos
cmp
inc
pushf
dec
push
cwtl
inc
mov
sahf
xorl
cwtl
int
lahf
sbb
jmp
pop
jp
ja
andl
daa
xchg
mov
push
sbb
mov
add
cmp
cwtl
fisttpll
jg
and
adc
popf
xchg
add
repz
ja
jnp
fsts
pop
add
fbstp
test
mov
jmp
xchg
hlt
mov
ljmp
inc
mov
cmpsl
cmp
out
sbb
fstps
sbb
call
shll
out
adc
add
push
daa
movl
popf
and
mov
pop
adc
cld
scas
inc
xchg
lret
test
cmp
pusha
stos
push
mov
jae
lahf
cmp
ljmp
jns
push
pop
ja
leave
aaa
sub
loopne
insb
pop
push
sub
enter
jecxz
ds
sbb
dec
mov
lods
mov
dec
dec
or
jge
adc
jmp
fldenv
lock
sbb
pop
ffreep
cmp
scas
lahf
scas
sbb
cmp
notb
lcall
pop
push
sbb
and
or
les
pop
cmp
movsl
mov
nop
sub
stc
cld
es
test
cmp
push
xchg
pop
rcrl
pop
lods
mov
adc
cmp
andl
lods
movsb
mov
aas
sbb
mov
je
mov
lods
adc
pop
xchg
xchg
pop
and
arpl
mov
mov
push
pop
mov
lret
sbb
push
pop
pop
insb
dec
cmp
out
cwtl
aas
and
xchg
test
pushf
lds
jmp
add
jbe
ss
int
stc
ja
xchg
movsb
dec
lcall
repnz
das
cwtl
push
lock
push
aas
xor
inc
mov
add
push
popf
fbld
cmc
iret
cmpsl
data16
sti
mov
movl
iret
mov
in
leave
les
or
scas
add
movsl
mov
push
outsb
cltd
mov
or
icebp
sti
mov
cmp
mov
ljmp
and
loope
mov
into
xchg
ret
xchg
xchg
jno
in
mov
and
sub
nop
mov
imul
jge
sub
jge
rorl
push
mov
xchg
push
mov
cmp
stos
stos
cmp
mov
ror
addl
out
es
aaa
outsl
jae
push
inc
mov
jg
xor
int3
or
cltd
aad
pop
and
jae
rcrb
std
shlb
mov
xchg
or
int3
andl
cmp
in
cmp
jp
lcall
mov
shl
sbb
lretw
ret
inc
xchg
insb
cmpsb
dec
lcall
mov
sahf
push
push
dec
jo
jno
dec
dec
cmp
mov
rep
imul
pop
iret
pushf
xchg
adc
xchg
pop
pop
push
or
xchg
scas
mov
jns
notrack
pop
push
jb
andb
mov
pop
adc
mov
mov
fs
in
adc
push
jae
gs
xor
into
mov
cmp
ficomps
inc
ret
dec
addl
xor
sbb
sub
push
test
xor
imul
mov
mov
pushf
cs
mov
stos
out
dec
inc
nop
and
and
out
icebp
testb
sahf
arpl
adc
add
push
cwtl
sub
inc
adc
jae
add
icebp
jg
rorl
fisttps
or
int
push
out
mov
cmpsl
mov
stos
loopne
shll
lahf
xchg
lds
mul
ja
cmc
mov
filds
cmp
add
or
mov
xchg
push
fdivs
jae
push
inc
pop
ds
xchg
and
int3
xor
test
cmp
sbb
jle
test
shll
add
sbb
ret
mov
sub
cld
mov
push
movsl
push
jae
ss
lahf
ss
loope
inc
or
lcall
dec
sbb
leave
and
sub
push
and
test
fbld
and
out
cmp
jo
ss
lahf
fucomip
je
andl
push
int
fdiv
rorl
or
outsb
or
sub
arpl
xchg
inc
mov
lock
lcall
pop
add
rorb
fwait
sbb
dec
test
inc
int
push
lods
pop
mov
or
lahf
lock
inc
shrb
fsubrl
outsb
pop
mov
into
js
lahf
inc
fcmovne
loopne
mov
jge
xor
push
lock
sub
mov
adc
adc
rcl
or
nop
mov
daa
xor
cmp
add
rorb
pop
ljmp
cli
in
mov
loope
mov
mov
popa
into
sub
outsb
jae
ret
shll
int
jmp
pop
insb
jp
mov
mov
push
test
push
jbe
jp
outsb
jmp
ljmp
mov
adc
add
lcall
fimull
fimull
lock
pushf
push
shl
cwtl
loop
jo
adc
xchg
inc
cld
dec
std
pop
lods
xor
lods
xor
jle
xchg
push
cmp
ficomps
and
packssdw
inc
jecxz
test
inc
sbb
scas
sarb
or
movd
mov
cmc
mov
push
and
int
sbb
jno
movsb
aam
mov
push
mov
cmp
xchg
inc
sub
fwait
xor
scas
fisubrl
aam
pop
out
daa
adc
fldt
movsb
add
mov
and
xacquire
jb
pop
mov
int3
in
adc
out
jbe
push
dec
xor
jmp
clc
rorl
sub
ret
or
lret
rcrb
mov
push
paddsw
jl
jge
lock
xor
pop
outsb
xlat
icebp
pop
xchg
fistpl
jp
push
sete
por
or
cmp
push
shrl
xchg
lds
mov
loop
lahf
out
mov
pop
pushl
das
lock
jb
mov
test
mov
pop
in
mov
call
add
aas
jae
in
enter
test
leave
fisubrl
xor
imul
jne
and
push
dec
lods
sub
inc
lcall
push
notb
jbe
scas
xchg
popf
jmp
fstsw
imul
ror
dec
dec
lds
mov
rolb
fwait
clc
cs
ret
repnz
mov
pop
mov
leave
lahf
aaa
pop
sub
lock
sub
push
mov
push
idivl
jbe
mov
adc
test
inc
push
outsb
je
adc
les
and
je
pop
mov
pop
adc
ficomps
fdivl
xchg
lods
insb
add
sbb
mov
adc
jbe
mull
divl
push
mov
out
cwtl
loope
jae
or
shlb
cmpsb
cmpsb
pop
jb
loop
xchg
rorl
jp
and
and
das
mov
sub
cs
decb
cmpsl
push
dec
mov
mov
push
std
lea
push
inc
call
out
cmpsb
pop
push
xlat
jle
setl
sarl
push
xchg
hlt
ja
ret
aam
xor
or
dec
std
push
aad
sahf
jle
adc
cmpsb
cmpsl
xchg
or
cwtl
pop
aas
testl
cmp
adc
movsl
pop
icebp
mov
cmp
sub
pop
enter
sti
or
inc
punpcklbw
jle
idivl
scas
out
push
dec
pushf
mov
outsb
stos
clc
mov
pushl
mov
xorb
das
lods
push
mov
and
fcomi
jb
mov
enter
clc
mov
imul
sti
stos
xchg
hlt
shll
jp
clc
xchg
cld
sbb
mov
adc
push
sbb
inc
aaa
push
mov
mov
popf
je
xchg
popa
std
out
push
pop
sbb
int3
or
out
mov
hlt
sbb
jo
xchg
lahf
jae
fsts
gs
lret
in
cmp
jne
or
pop
dec
mov
outsl
scas
push
xlat
push
xchg
repz
cmp
loope
push
mov
inc
pop
lret
call
mov
and
jl
lods
stc
clc
icebp
dec
ret
dec
fdivrl
fs
and
adc
insb
adc
jno
dec
mov
test
or
pushf
and
mov
xorb
test
pop
push
daa
jmp
fs
push
xor
push
or
push
sahf
rorb
cmpsb
rorl
mov
jnp
flds
push
sti
jp
xlat
sbb
sub
divps
mov
les
mov
and
cld
ds
arpl
cmpsl
fwait
es
and
sar
lret
push
vpinsrw
outsb
dec
or
jae
or
push
loop
test
nop
cmp
lret
movsb
xchg
push
cmp
pop
pop
js
aam
sahf
cmpsb
push
cmpsl
gs
cmc
enter
ljmp
inc
jae
enter
test
cmp
mov
cmp
add
inc
adc
jno
sub
adc
xchg
out
jb
fsubl
adc
mov
cmpl
popl
fmuls
inc
mov
cmpsl
inc
and
mov
ljmp
sti
and
inc
fndisi(8087
push
into
mov
sahf
cli
inc
icebp
and
add
decl
repz
lea
dec
cmp
or
pop
and
push
mov
divb
lea
xchg
daa
mov
inc
sub
sbb
push
cmp
cmp
pop
outsl
imul
mov
sbb
lods
xchg
les
or
cmc
and
add
inc
mov
mov
cmp
addr16
scas
inc
call
adc
sub
cmp
hlt
pop
pusha
adc
int
sub
and
dec
test
clc
stos
lods
pop
aas
pop
jle
and
push
leave
sub
cmp
popf
xchg
cmp
xchg
dec
jmp
loope
sbb
mov
push
adc
fisubs
add
pop
xchg
idiv
lods
ljmp
incb
add
pusha
sarb
cmp
mov
test
lret
mov
xor
sti
imul
adc
das
outsb
dec
in
xchg
push
dec
icebp
push
cltd
mov
xor
pop
ret
xor
outsb
xor
repz
sub
scas
sub
sahf
sub
mov
daa
fcomp
leave
movl
mov
mov
gs
std
mov
jmp
mov
xor
clc
shll
in
insb
push
and
cmpsl
insb
jecxz
jnp
inc
push
mov
out
mov
imul
cmp
out
imul
xor
jge
jnp
mov
lea
ret
push
mov
jecxz
sbb
mov
xlat
dec
sub
mov
mov
xchg
adc
lcall
jle
shlb
inc
xchg
mov
aad
iret
nop
pop
jecxz
push
cmpsl
test
stc
cmpl
sbb
jmp
dec
sbb
push
addr16
dec
mov
mov
outsb
mov
dec
lret
fidivl
mov
mov
add
loopne
jg
or
pop
cmp
dec
xchg
jp
xor
popf
fiaddl
jg
inc
arpl
cmp
dec
mov
add
es
mov
dec
xor
mov
dec
fists
jl
fsubrl
xlat
pop
lret
jmp
loopne
dec
pop
push
mov
fwait
lahf
sub
scas
dec
subl
pop
mov
int
cs
fidivs
inc
mov
ret
sub
scas
inc
xchg
sbb
sub
fstpl
xchg
dec
test
xor
or
aam
sbb
mov
sti
pop
jl
xchg
dec
orb
cli
movsl
outsb
out
clc
inc
and
or
adc
add
clc
cmc
mov
fdivr
test
das
or
jg
or
and
in
loope
inc
sahf
in
ja
icebp
jecxz
cmp
mov
jb
cld
push
ja
leave
leave
lods
dec
clc
mov
cld
outsl
lock
cmp
xor
or
out
stos
aad
mov
js
imul
int
movsb
mov
jl
jno
out
xor
xor
iret
cmp
not
inc
xor
je
cmp
aaa
fisttpll
push
inc
inc
jl
movsb
mov
mov
xchg
inc
orl
aas
leave
push
and
jge
pop
sub
hlt
jno
hlt
xchg
dec
ja
inc
push
jg
sbbb
stos
jle
adc
jno
cmp
jbe
mov
xor
cmpsl
and
mov
adc
mov
sbb
pop
ss
pop
stos
cltd
xchg
clc
sub
ret
push
mov
dec
enter
push
inc
jmp
call
xchg
mov
int
cwtl
pushf
out
xchg
jecxz
adc
dec
cmp
mov
cmp
mov
cmpsb
mov
shlb
icebp
adc
call
push
movsb
mov
or
lahf
shlb
or
and
xchg
sbb
test
dec
pushf
test
xchg
xchg
test
mov
andb
pop
sub
movsl
cwtl
jbe
stos
test
mov
test
inc
js
in
dec
pop
add
movsl
push
xor
out
jecxz
mov
mov
sub
dec
aad
adc
mov
subb
popa
lea
jecxz
add
and
jno
lret
test
mov
fildl
aad
cmc
call
bnd
outsb
in
lods
push
xchg
xchg
lds
sbb
shll
or
cmp
or
movsl
int
or
push
loop
test
testl
inc
out
std
mov
out
rcl
jle
cmpsl
add
mov
dec
jne
add
pop
movsl
adc
xchg
std
idivb
xchg
in
in
scas
xchg
mov
xchg
mov
sub
bound
or
int3
push
mov
sahf
xchg
dec
je
sub
or
jae
bound
add
mov
xchg
pop
push
jmp
int3
pop
scas
dec
push
bound
sub
mov
xchg
pop
xchg
jmp
fnstsw
pop
mov
addr16
repnz
mov
lea
aaa
in
movsl
xchg
jmp
call
xchg
loopne
mov
dec
or
popf
xchg
mov
bnd
iret
xlat
vpunpcklqdq
leave
aam
insb
in
mov
push
mov
pop
fs
mov
js
jne
std
daa
adc
inc
das
mov
fcompl
xchg
mov
push
je
push
jge
clc
rcrb
sti
sub
fwait
es
loope
nop
ss
insb
jmp
lahf
mov
aam
fwait
push
mov
mov
std
mov
mov
es
loop
insb
in
mov
out
cmp
mov
xchg
aaa
dec
lret
xchg
ja
push
rcrb
or
xchg
inc
and
inc
cmp
push
inc
rcr
icebp
mov
mov
cmp
insb
jno
adc
fdivl
cmp
jbe
sub
add
push
mov
dec
test
lahf
scas
test
xchg
mov
cmp
lret
push
jae
fimull
stos
test
or
cmpsb
fisttpll
cld
imul
jns
sarl
and
sub
ret
in
int
xchg
mov
ret
or
adc
testl
add
cmp
xlat
adc
jle
push
cmpsl
jne
mov
push
inc
in
and
loope
ror
xchg
scas
mov
jne
or
aad
nop
stc
sbb
push
mov
nop
out
fisttpl
mov
cmp
imul
daa
push
aam
xchg
push
add
xchg
scas
mov
mov
call
mov
int3
pushf
push
xchg
mov
bound
scas
lods
ret
test
int
pop
subl
mov
test
or
jae
ljmp
lock
popf
sub
mov
xchg
push
repnz
popf
xor
xor
mov
jmp
cmp
jg
cmp
testl
mov
shlb
xchg
ret
and
mov
mov
test
dec
or
add
ss
adc
and
mov
sub
pushf
add
aaa
push
mov
cmc
sbb
cmp
jmp
out
repnz
loope
cwtl
dec
jmp
pusha
lea
and
out
jb
xchg
jp
cltd
subb
cmp
push
lea
scas
cmpsl
pop
popa
or
imul
in
push
repnz
mov
out
in
fcomps
adcl
push
mov
fwait
jl
lret
inc
incl
adc
cld
push
push
ja
sub
jge
push
lock
push
push
ficomps
cmp
push
cmp
dec
pop
mov
mov
mov
jns
clc
cmp
sbb
mov
iret
jbe
mov
js
orl
xor
std
stos
insl
negb
ret
sti
mov
mov
jl
push
dec
test
cmpsb
mov
push
stc
adc
sbb
adc
sub
es
cmc
lcall
push
and
jg
xorl
cmp
popf
pop
mov
dec
enter
js
scas
das
repz
dec
imul
popf
push
popa
call
mov
test
bound
loopne
inc
pop
loop
or
imul
mov
adc
imul
xlat
int3
mov
push
in
pop
repnz
lds
repnz
xorb
arpl
test
jmp
in
xor
in
pop
mov
cs
pop
adc
push
test
xchg
jg
or
mov
xor
dec
dec
rorl
and
fisubrs
dec
pop
xchg
sub
inc
and
jecxz
sub
sub
leave
jns
data16
xchg
add
dec
aam
decl
sbb
push
out
push
out
xlat
in
xchg
fadd
insb
leave
popf
loop
sub
or
cmpl
add
pushfw
sub
cli
inc
loope
test
jne
es
inc
mov
out
leave
push
push
xchg
fdivp
scas
add
repz
iret
or
jmp
int
cmp
jno
dec
dec
shlb
xchg
pop
fcmovu
mov
data16
imul
adc
addr16
mov
mov
pop
sub
mov
das
das
inc
mov
shr
mov
push
jmp
or
push
aas
adc
std
mov
inc
flds
adc
out
outsl
arpl
dec
outsl
stc
adc
loope
inc
xchg
mov
mov
imull
sub
mov
add
aam
loopne
mov
sub
lret
push
jo
jno
xchg
fcoms
cmpsb
in
stos
xchg
dec
cmp
js
loop
out
fistpl
inc
loope
xchg
mov
xorl
mov
je
fisttps
mov
adc
sahf
dec
je
mov
cmp
jmp
rcr
hlt
adc
sub
mov
roll
outsl
movsl
adc
fistps
stos
mov
jmp
int3
clc
lcall
lret
jl
pop
mov
sbb
std
inc
imul
clc
stos
xchg
push
add
add
inc
mov
pop
and
nop
out
imul
mov
in
cmc
fstpl
mov
fcoml
cmp
les
insl
lods
push
leave
mov
inc
push
jb
xor
and
xchg
push
xchg
add
mov
out
pop
pop
mov
loope
outsb
push
cs
push
jo
jg
mov
cs
gs
daa
aad
mov
aad
xor
imul
nop
jns
sub
rcr
test
inc
mov
mov
frstpm(287
push
push
es
and
outsb
fdivl
cmp
cmp
mov
sarl
xchg
and
nop
xor
out
lahf
mov
and
sub
mov
bound
jbe
push
pop
es
shlb
in
dec
push
jge
aam
in
push
testl
or
mov
sub
icebp
rolb
jmp
add
xchg
iret
ja
shlb
out
push
push
mov
xor
in
pop
nop
int3
push
push
jno
sub
mov
adc
mov
insb
xchg
imul
daa
js,pt
pop
into
pop
repz
fsubp
push
sub
inc
dec
call
inc
xchg
jg
mov
jbe
xor
cltd
or
pop
lods
mov
mov
loopne
cmpsb
lret
int
push
insb
clc
sti
aas
std
xlat
int
mov
test
std
or
jns
sub
sbb
cmpsb
pop
dec
jno
stos
popf
mov
xchg
adc
xor
je
jne
mov
addr16
andb
xlat
mov
push
daa
into
or
lret
jg
movsb
ds
cmp
ja
jbe
pop
push
inc
fnstcw
ja
mov
pushf
cmp
mov
sub
lds
data16
adc
cmp
lcall
cmp
or
negl
mov
push
insl
jnp
popa
sub
mov
push
orl
xchg
mov
lret
cwtl
push
and
pop
insl
fmul
sub
mov
mov
mov
ds
xlat
cmp
stc
hlt
dec
lods
shl
ljmp
mov
xor
and
dec
inc
outsb
and
xor
mov
and
daa
insl
fs
sbb
dec
fstps
xchg
in
fidivrl
mov
sbb
rcr
cmp
fdivl
inc
ss
or
sbb
add
and
sbb
jae
cld
pop
sbb
push
loopne
imul
mov
adc
aad
mov
sub
lret
inc
mov
test
xor
repnz
repz
fisubrl
in
jecxz
ja
xlat
repz
fmuls
jnp
cld
pop
jecxz
adc
push
sub
pop
add
hlt
enter
push
xor
mov
jle
sarb
fcompl
jl
div
pop
add
push
xor
pushl
add
inc
inc
inc
test
inc
int
push
out
out
out
mov
push
out
out
out
in
push
xorl
fs
xchg
lret
in
xchg
and
jb
testl
xor
cld
sbb
mov
xchg
and
sahf
mov
in
and
adc
xchg
xorb
inc
jae
jne
mov
or
test
stc
and
adc
sbb
inc
repnz
pop
mov
int
pop
push
sbb
lahf
cmp
popa
push
enter
add
cli
imul
sub
push
movsb
in
xor
scas
xor
xor
xchg
scas
push
jg
add
cwtl
mov
imul
lret
fiadds
out
mov
movsl
xlat
les
stc
imull
jle
int3
out
pushl
mov
and
sbb
daa
cmp
stos
pushf
mov
cmp
push
iret
outsb
testl
dec
mov
pop
and
cld
inc
add
jg
loop
mov
arpl
ja
enter
mov
dec
cli
fiadds
jl
xlat
xchg
inc
xor
or
dec
jb
sub
xchg
arpl
lds
andl
sarl
rcr
popf
adc
mov
cmp
pushf
scas
jecxz
jmp
je
cmp
dec
mov
push
and
movsb
mov
loope
ret
dec
xor
xchg
test
cmp
xchg
cmpsb
mov
in
xchg
fucom
lret
js
jecxz
aad
fadds
mov
out
mov
jmp
mov
rorl
into
fnsave
idivl
and
push
push
adc
iret
xchg
mov
adc
pop
pop
cmc
push
sbb
inc
cmp
cmp
sub
fwait
loop
xor
jmp
mov
insb
adc
les
mov
movb
cmpsl
cmp
cmpsl
dec
pop
jns
dec
fs
mov
cmp
insb
push
push
cmp
jp
dec
fistps
push
or
test
pop
push
std
adc
mov
xchg
pop
insl
sub
and
pop
sbb
mov
push
test
mov
add
test
rcrl
sti
and
or
jg
add
push
out
sub
lea
mov
shlb
mov
es
pop
stos
add
push
mov
pop
mov
in
out
jecxz
mov
orb
xchg
les
bound
or
ret
movsl
push
adc
flds
jns
stc
cmp
lret
jmp
mov
xlat
mov
shll
jge
fildll
lods
in
dec
jle
dec
lret
pushf
repnz
or
jge
mov
pop
or
xor
fcoms
aad
inc
loopne
call
decl
mov
sbbb
and
pushf
testl
in
enter
pop
sbb
mov
inc
fs
lahf
dec
popf
cmp
mov
repz
int3
mov
cmc
lret
sub
ss
inc
xchg
sub
inc
or
xor
in
jg,pt
out
cmp
nop
cs
sti
add
sbb
fldt
inc
mov
rcrl
mov
cli
lds
sbb
cmp
pop
xor
and
cmpsb
aaa
hlt
rcrl
je
xchg
mov
push
iret
lods
or
sbb
mov
stos
xchg
dec
mov
insb
jg
fwait
xor
jo
xchg
push
arpl
sub
stos
cmp
addr16
and
in
vrsqrtss
int3
cs
inc
cmp
jle
cmc
mov
push
mov
cltd
dec
into
popa
outsl
ret
aaa
into
xchg
pop
out
test
mov
cmpsb
shr
sbb
pusha
lods
push
and
out
into
pop
in
xchg
inc
lds
pop
jae
add
jnp
sahf
and
stos
xor
in
xchg
or
ret
shrb
pop
pop
out
mov
addl
insl
and
push
daa
mov
cmp
lahf
adc
dec
dec
push
cs
test
hlt
mov
push
fmuls
arpl
sub
aad
adc
loope
mov
cmpsl
mov
fadd
xchg
fsubs
inc
scas
call
or
xor
mov
arpl
jbe
push
jecxz
subb
repz
out
orl
cmp
outsb
sub
mov
arpl
mov
cmpsb
in
int
xchg
fwait
and
sahf
bound
test
lods
ret
or
lock
pop
fsub
push
icebp
lods
ret
xchg
push
or
push
arpl
mov
dec
pop
xchg
jae
stc
outsb
inc
sbb
or
cmp
and
movsl
add
pop
mov
jne
cmp
adc
xchg
adc
in
addr16
dec
add
sub
cmp
arpl
or
xchg
adc
xchg
les
je
out
clc
dec
and
jecxz
dec
push
ret
insb
add
add
les
pop
cmp
cli
imul
mov
add
and
test
popa
in
ljmp
pop
xlat
sbb
sub
fisttps
sub
jns
ficomps
popf
lahf
cmc
pop
xchg
dec
sbb
inc
inc
fbld
push
cmpsl
jae
jno
cmp
adc
mov
cltd
mov
pop
stos
sub
ja
aaa
mov
inc
sub
adc
push
mov
insl
xchg
adc
fs
into
fistl
push
ja
or
lret
inc
out
mov
pop
xchg
push
and
ret
adc
jge
mul
cmp
xchg
fisttpll
jne
mov
gs
es
push
mov
scas
stos
inc
xchg
pop
mov
pop
rolb
mov
jns
cmc
mov
mov
js
cmp
inc
xor
pop
sarl
repz
daa
dec
inc
dec
nop
sbb
xchg
mov
pop
cmp
pop
pop
inc
cmp
cmpsb
dec
or
pop
pushf
sahf
enter
xchg
mov
inc
rorb
movsb
xlat
pop
mov
or
xor
pop
cld
shl
push
jl
loope
add
xchg
in
cmc
or
adc
sti
mov
shll
loopne
jbe
lods
pop
stos
fsub
cmp
das
aas
xor
xchg
mov
shlb
dec
adc
hlt
add
xor
pop
clc
into
jl
sbb
xor
lods
pusha
decb
add
pop
cld
pop
arpl
lds
dec
cmp
mov
fmuls
push
sub
jnp
pop
outsb
adc
cmp
fabs
int3
insl
jge
ljmp
cli
divb
aaa
pop
push
xor
in
mov
mov
mov
clc
mov
push
outsb
jg
rcrb
xorl
aas
pop
scas
pop
mov
mov
sub
lea
mov
push
js
dec
sub
mov
movsb
leave
js
stos
mov
jae
sbb
popa
and
mov
jo
jb
mov
dec
cltd
push
pop
shrl
ret
addr16
mov
jns
adc
in
ret
push
xor
outsb
imul
mov
movsb
sti
jb
mov
dec
sub
add
push
or
pop
stc
adc
hlt
in
mov
jecxz
std
outsb
and
imul
stos
insb
xchg
jmp
jge
enter
enter
push
sbb
movups
push
sbb
in
adc
stc
mov
sti
int3
inc
xor
loope
outsb
iret
jle
mov
mov
lea
and
mov
dec
add
mov
lock
data16
sarb
sub
add
cmp
imul
sbb
inc
mov
je
pushf
dec
mov
mov
fst
pop
test
mov
cmp
insl
push
sub
mov
inc
or
ret
sbb
push
dec
punpckhwd
addr16
or
scas
push
jmp
aaa
sbb
fucomip
jmp
sahf
push
lods
pop
sub
mov
aas
js
shrb
mov
dec
sub
sti
fiadds
and
xchg
pop
adc
adc
fcmovb
test
shll
xchg
jb
pop
orl
ss
cwtl
xchg
leave
jg
push
shll
dec
aaa
jae
mov
dec
mov
repz
jmp
fisubl
cmpsb
add
cmp
mov
dec
repz
xchg
sub
lea
lcall
call
mov
pop
and
int
cmp
insl
xchg
leave
adc
push
in
es
insb
mov
push
pop
call
dec
insb
in
xorl
inc
bound
test
nop
arpl
rcr
mov
in
in
push
lea
xchg
jae
jb
xchg
xchg
push
je
rcrl
shrb
push
mov
lock
or
scas
fcom
push
fwait
add
xor
add
loopne
in
imul
mov
jmp
inc
pop
xchg
iret
ret
pushl
dec
cmpsb
dec
ret
cltd
mov
jb
push
add
jp
adc
pop
and
jnp
push
and
sbb
inc
sub
bound
int3
out
add
push
xchg
mov
std
adc
in
lret
call
sbb
les
adc
pusha
dec
inc
arpl
call
mov
sub
jnp
push
sbb
mov
mov
adc
cli
loop
ret
mov
xor
repz
test
mov
idivb
pop
addr16
adc
push
mov
iret
fisubl
addr16
js
jle
add
and
sti
int
inc
mov
stos
jg
repz
xchg
fwait
push
mov
out
in
out
xor
in
scas
std
roll
jge
bound
repz
ja
cwtl
shlb
jo
jnp
sahf
adcl
loope
xchg
dec
inc
lods
rclb
dec
mov
jbe
clc
insb
mov
jne
xchg
repz
inc
popf
das
repz
xor
scas
pop
jns
inc
mov
xor
mov
lock
aam
jno
ficompl
add
mov
push
fdivrs
test
dec
aaa
scas
mov
inc
xchg
stc
cmp
orb
bound
jo
sbb
mov
xchg
fnstenv
int
mov
and
jne
fcmovbe
fbld
push
fsubr
inc
and
fcomps
mov
insb
add
loop
and
xlat
cwtl
cmpsl
call
pop
jge
pop
std
mov
arpl
add
cmp
jo
dec
lret
arpl
fstpl
test
ficoml
xlat
fisttps
nop
scas
pop
sub
bound
cmpsb
xchg
ror
pusha
pop
int
mov
and
dec
sti
mov
scas
loop
lahf
dec
adc
lret
lret
mov
xchg
push
pusha
mov
test
or
es
les
insb
movsb
fwait
lahf
add
imul
xor
push
repz
fstl
nop
mov
test
fstp
xor
orb
or
stc
cltd
movl
inc
icebp
cld
out
inc
jg
in
repnz
jae
push
mov
out
sbb
dec
out
sbb
add
sub
sub
repz
inc
iret
dec
add
mov
inc
imul
xchg
cld
fildll
add
mov
es
cmp
out
das
push
data16
out
jmp
pop
push
test
lret
mov
stc
sbb
push
loope
das
daa
out
dec
mov
subb
or
or
add
push
inc
and
add
repz
sub
popf
sbb
into
inc
jecxz
div
movsbl
mov
sub
xchg
mov
fcmovnb
scas
aad
cmp
add
fs
xor
inc
jne
fcoms
js
cwtl
loope
xor
dec
mov
ja
xor
cli
lea
mov
xchg
test
adc
rcrb
cwtl
arpl
addr16
fistl
mov
mov
mov
jnp
push
test
shll
loope
mov
mov
pop
sbb
aad
or
inc
pop
mov
or
push
test
xchg
jp
adc
mov
rcll
and
div
xlat
orb
sbb
leave
fucomp
outsb
xchg
leave
lods
fisttpll
hlt
add
push
into
push
push
in
sbb
or
adc
add
aas
mov
xor
and
pop
mov
and
cmova
jmp
movsl
in
xchg
push
scas
gs
fcomi
or
movsl
out
fimuls
inc
jge
inc
pop
sub
pushf
enter
cmp
sub
add
adc
js
cmp
repnz
scas
and
fsubr
adc
pushf
outsl
fdivs
mov
ret
cltd
fstpl
scas
stc
inc
data16
push
jl
daa
cmp
sbb
cmp
mov
inc
ret
mov
mov
test
dec
xor
lret
cmp
into
sub
stos
sbb
fucom
push
mov
test
loop
adc
jle
mov
int3
dec
negl
imul
aas
or
test
repz
insb
mov
mov
inc
mov
push
xacquire
scas
rcr
dec
ja
mov
cli
or
addr16
mov
push
fs
fcmovbe
stos
push
lods
ljmp
sub
xchg
shll
ja
push
cmc
shl
imul
mov
jnp
cmpsb
pop
push
push
in
repz
push
fdivp
insb
xor
hlt
add
sub
mov
pop
call
cmc
push
aas
xchg
in
shlb
pop
sbb
lds
ficompl
adc
adc
insb
mulb
lret
call
xchg
stc
jbe
xchg
inc
jg
imul
dec
or
inc
sub
and
mov
or
push
mov
jge
aaa
cwtl
jmp
pop
lea
fistps
in
sti
aas
fs
js
pop
in
dec
stc
popf
mov
shlb
xchg
call
loop
scas
lock
cltd
jge
mov
pop
movsb
add
mov
mov
xchg
push
xor
leave
add
jns
insl
data16
sub
lea
xor
cli
jb
ret
iret
daa
icebp
lea
sti
cmc
inc
fsub
inc
pusha
sbb
jle
xor
ret
imul
lret
fsubrl
aam
pushf
sub
pop
icebp
aad
fldl
mov
xchg
mov
or
enter
ja
je
cltd
cwtl
hlt
fiadds
xchg
lret
psubusw
inc
fdiv
bound
cmp
add
les
mov
lcall
jmp
insl
gs
mov
sbb
movb
lea
dec
dec
mov
adc
faddl
cli
add
aaa
push
outsl
mov
jl
xor
rcrb
pop
out
in
inc
fisubrl
push
out
cltd
sbb
inc
nop
push
ret
nop
mov
ljmp
ror
sub
inc
ss
xchg
pop
addl
fdivrl
movsl
hlt
pop
arpl
dec
or
dec
lea
push
les
inc
int
enter
mov
dec
ss
int
jb
push
aaa
cmp
outsb
outsb
push
mov
mov
cmpsl
lcall
sbb
mov
out
cmpsl
rcrb
cltd
enter
pop
pop
pop
dec
push
mov
and
ss
pop
out
mul
scas
imul
push
and
adc
or
test
inc
cmp
inc
mov
add
imul
sbb
jnp
aam
loope
push
rorl
push
ja
mov
out
stos
cmpl
xchg
pop
push
pop
push
or
add
dec
sbb
dec
and
sbb
sub
sub
pop
hlt
mov
int
mov
mov
dec
jne
adc
adc
dec
gs
push
mov
inc
fwait
les
push
jb
sti
js
cmp
pop
jge
pusha
jae
lahf
pusha
sub
jbe
lods
mov
ret
pop
sbb
dec
insb
aas
xor
stos
sub
test
add
inc
pop
cmpsl
mov
adc
or
push
inc
xor
iret
cmp
mov
pop
adc
int
jle
cmc
hlt
cmp
ja
xchg
or
adc
shll
lahf
cmp
jno
iret
cmpsl
lods
arpl
pushf
popf
mov
xor
fs
adc
ret
test
adc
jmp
loope
jg
dec
sbb
or
xor
add
adc
jb
jmp
imul
pusha
sbb
mov
push
sub
mov
mov
sub
xor
stos
mov
or
add
inc
bound
scas
sarb
lret
jl
das
dec
pop
cmpb
ror
push
pop
adc
movsb
jnp
stos
cmp
sub
push
jae
cmp
ret
leave
push
rolb
lret
xchg
ljmp
mov
movzwl
lock
and
xchg
aas
push
mov
mov
lds
cmp
mov
outsl
jno
mov
jnp
fsubr
mov
push
sbb
mov
cmpsb
adcb
mov
push
cltd
and
sti
mov
outsb
je
lret
push
sahf
std
test
pop
add
ljmp
mov
loope
mov
pop
push
call
xor
out
mov
stos
fcmove
push
xor
fisubs
adc
and
pop
in
out
xor
mov
pop
dec
in
aas
mov
sub
push
mov
js
shl
mov
dec
in
dec
push
movb
das
push
sbb
sub
das
mov
xor
cs
lea
dec
sbb
push
shlb
or
nop
cltd
sbb
cmc
cmp
lret
inc
jl
pop
or
mov
popa
icebp
or
dec
addr16
int
push
loop
inc
mov
jbe
mov
popa
jp
adc
loope
hlt
cltd
arpl
iret
cs
jl
mov
loop
in
loop
pop
sbb
or
cltd
adc
faddl
es
sti
ja
jns
inc
adc
mov
outsl
lahf
idivl
mov
out
mov
loop
fsts
out
pop
lret
sub
jo
jg
dec
fsts
lea
sub
pop
push
loopne
add
inc
xor
pop
inc
arpl
stc
fisttpl
iret
lods
mov
cli
mov
fidivrl
loopne
pushf
mov
and
repz
xchg
scas
icebp
repnz
testl
loopne
fldenv
adc
pushf
mov
add
or
fidivs
mov
arpl
cld
fs
cli
inc
sub
mov
rcrl
lret
out
inc
jne
and
negl
jge
or
mov
out
rcrl
push
jp
xchg
fwait
jle
jmp
push
push
lds
mov
repz
hlt
cmp
cmpl
out
aam
xlat
add
cli
push
out
scas
hlt
fldl
pop
xacquire
mov
pop
jl
mov
aaa
adc
rclb
out
push
mov
idivl
out
lcall
out
call
add
inc
and
jb
ss
sub
pop
aas
fistl
jle
xor
decl
lret
push
jle
imul
dec
shll
mov
xlat
mov
aaa
xor
sub
scas
and
les
mov
sub
test
xor
sti
or
pop
jbe
imul
faddl
mov
adc
cli
out
mov
cmp
or
mov
fisubrs
out
jle
xor
xorb
mov
jle
inc
dec
pop
sbb
sbb
les
pushaw
fdivrp
adc
fwait
mov
pop
jns
cwtl
jp
lods
xchg
add
fimuls
mov
pop
push
dec
aas
rcl
cmc
cmp
dec
adc
inc
out
xor
sahf
cmp
push
pop
ret
push
frstor
mov
xchg
push
lea
sbb
lods
loop
outsb
loope
aas
cmp
nop
push
aas
add
mov
lcall
pusha
ljmp
pop
cmpsl
and
push
push
and
jno
loop
popf
cmpl
lods
shll
imul
scas
mov
mov
push
xchg
push
add
es
dec
adcb
mov
and
sub
mov
mov
pop
outsb
mov
call
push
xchg
movsb
jmp
mov
xchg
mov
in
jmp
fldl
mov
mov
mov
ljmp
jne
lods
outsl
dec
test
loop
xchg
in
std
insl
neg
fcompl
loopne
cmpsb
sub
inc
lret
aam
mov
xchg
push
or
cs
sbb
cmp
ds
pop
push
scas
repz
out
xchg
mov
mov
scas
mov
jge
jae
inc
mov
andl
dec
mov
push
lret
inc
push
push
cmp
pop
imul
pop
and
jno
lahf
push
jmp
rclb
push
mov
aam
sahf
or
push
in
aad
adc
fisttps
cmc
movb
gs
pop
das
orb
pop
jo
lret
xchg
pop
xchg
adc
ljmp
jecxz
cmpl
ja
push
cs
mov
fisubrs
jecxz
psraw
jae
scas
insb
sub
adc
aam
rorl
js
xlat
test
jl
and
ss
aad
inc
das
ss
inc
cmp
popa
decb
sbb
aas
sbb
mov
mov
iret
stc
test
test
cmp
mov
ss
add
cmpb
les
jmp
sbb
fildl
or
xchg
icebp
in
lock
jno
sahf
jl
sub
mov
ljmp
dec
adc
cmp
cmc
lock
mov
jns
push
inc
adc
add
bound
xchg
jge
mov
leave
cmp
test
aam
mov
push
jb
imul
sarb
or
push
push
outsl
addl
push
es
loopne
icebp
loopne
sub
jecxz
out
jb
sti
mov
ljmp
or
cs
loope
adc
sbb
stc
shrl
imull
cmc
mov
mov
mov
sbb
cld
sbb
mov
fmuls
adcl
arpl
mov
mov
xchg
roll
lds
into
or
push
dec
push
xlat
aam
push
icebp
jne
add
inc
cli
out
inc
mov
in
insb
in
decl
xchg
mov
fimuls
xchg
add
scas
nop
jae
fwait
dec
jmp
leave
jle
xchg
pop
mov
mov
dec
dec
cmp
xchg
jnp
jns
cli
popl
sahf
mov
inc
pop
dec
js
jo
movsl
jg
adc
js
out
pop
jne
clc
sbb
and
xchg
nop
inc
mov
ret
popl
mov
jl
jns
push
mov
mov
pop
jns
aas
mov
add
mov
bound
jp
rcrl
xor
jle
xchg
mov
mov
sub
dec
mov
xor
repz
lret
xor
jmp
insb
test
push
call
lock
ds
loopne
adc
sub
dec
mov
mov
xor
leave
push
int
cs
mov
jno
enter
or
popf
push
daa
push
test
xchg
in
stc
cmp
cmp
push
ja
aas
into
xlat
push
pop
or
outsb
sbb
jmp
adc
inc
jbe
shlb
lcall
loopne
call
mov
in
xlat
inc
ss
inc
xchg
aad
xlat
sti
outsl
add
stos
mov
scas
push
enter
xor
fnstsw
test
xor
dec
lea
call
cmp
leave
mov
filds
aam
add
or
stos
add
daa
pop
clc
cmc
call
mov
dec
adc
mov
mov
fldt
xchg
incb
pop
pop
shll
addr16
xor
jae
pop
jne
mull
mov
in
outsl
cmpsb
mov
jmp
lods
lret
movsb
ret
bound
ficoml
and
loopne
dec
lea
jl
test
movsb
cwtl
pop
sub
scas
andl
dec
adc
dec
cld
fimull
jno
jp
pop
je
jle
jbe
push
dec
gs
dec
mov
mov
imul
fdivs
push
ret
jg,pt
mov
xchg
lods
inc
xchg
inc
mov
inc
sbb
rolb
and
push
and
cli
pop
mov
in
roll
lcall
cmp
testb
iret
cwtl
jne
push
xchg
and
call
lahf
cwtl
dec
cmc
lahf
dec
cmp
xchg
xor
mov
cmp
inc
push
arpl
lret
or
or
adc
push
dec
pcmpeqb
pop
xor
iret
sub
push
xor
jns
pop
or
xchg
into
test
enter
push
outsl
das
testl
adc
xor
sub
lds
popa
shlb
popf
pop
pop
dec
sub
inc
movsb
xlat
adc
pop
push
rcll
inc
fsubl
icebp
outsb
cmp
js
mov
sub
lahf
push
mov
add
dec
adc
mov
lret
mov
lret
bound
int
mov
push
arpl
inc
add
lea
cmp
or
clc
cmp
sub
test
mov
repnz
dec
fwait
aad
xchg
fisubs
mov
pop
push
or
add
dec
out
loope
std
push
mov
aaa
mov
test
out
push
dec
inc
es
add
and
lret
mov
xchg
mov
aaa
lods
loopne
icebp
mov
int
mov
pusha
pushf
cltd
aad
fistps
nop
push
mov
sti
and
shlb
mov
and
mov
stos
pushf
mov
or
lea
sarb
mov
cs
movsb
mov
mov
xor
adc
div
xor
shl
xchg
rcll
mov
sbb
inc
ret
xchg
push
mov
ja
daa
xor
adc
into
pop
push
ja
fstpl
dec
or
idiv
mov
mov
outsb
inc
inc
test
cmpsb
mov
cmpsl
cmp
out
pop
out
sub
outsl
mov
pop
pop
add
xor
ffree
int
fwait
lahf
mov
or
mov
fildl
mov
ror
scas
lods
sub
xor
ss
add
out
pushf
mov
je
xchg
icebp
int
mov
xor
cmp
dec
jns
xchg
mov
xchg
mov
nop
push
inc
stos
dec
inc
in
imul
fs
nop
daa
pop
orb
pop
negb
mov
mov
cmp
das
mov
aad
ret
decl
pop
inc
out
push
leave
mov
mov
sbb
jmp
sbb
shll
fidivs
adc
cmc
inc
sbb
ret
repnz
fsubrs
mov
lahf
mov
ret
into
imul
mov
cmc
mov
sbb
gs
in
rol
ss
add
cld
xlat
loope
out
cmp
inc
das
add
daa
push
stos
sahf
xor
lods
xchg
mov
pop
ss
cmp
mov
rcll
fcmovnb
mov
pushf
mov
mov
jg
mov
lods
imul
adc
lock
sti
cli
jp
test
and
sub
cmp
lods
test
nop
sub
xor
in
push
jmp
fs
mov
int3
stos
push
sbb
jb
pop
push
leave
ret
in
filds
adc
mov
and
cmp
dec
cli
dec
jb
out
icebp
push
ret
sbb
lods
dec
movsb
adc
jbe
ret
sbb
ja
dec
pop
push
push
xor
test
outsl
repnz
adc
lods
xor
xlat
mov
pop
aam
xchg
cmpsl
sub
in
call
jp
mov
mov
int3
and
out
data16
xor
js
scas
jbe
loopne
push
push
jno
rcll
scas
adc
leave
jae
subl
mov
jmp
lock
xor
inc
inc
xchg
mov
lods
out
lea
mov
cmpsb
roll
aad
roll
cmp
stos
inc
xor
jbe
aaa
dec
jne
jb
clc
adc
fisubrl
dec
add
add
sub
jmp
dec
add
add
loopne
push
cwtl
push
lret
rcrl
jo
int
fs
sahf
push
lret
cmp
xor
cmp
adc
pop
xor
jb
pushf
and
ret
push
inc
xchg
rcll
inc
cld
pushl
cmpsl
out
mov
hlt
jne
out
cmpsl
mov
scas
mov
mov
mov
mov
or
cmc
ja
adc
dec
pusha
js
xchg
pop
sbb
std
push
dec
dec
lock
mov
fiaddl
lods
push
ret
out
jle
mov
shl
cmpsl
inc
mov
mov
sbb
jp
out
mov
and
movsb
adc
imul
fisttps
sub
outsl
add
aad
test
mov
inc
rcll
or
mov
in
mulb
adc
mov
and
cld
ja
sbb
pop
popf
mov
mov
adc
aas
sbb
mov
lcall
and
dec
cltd
iret
mov
mov
xor
insb
scas
jae
adc
stos
cmp
pushf
lret
sub
mov
push
jno
mov
aad
nop
mov
lcall
mov
and
push
push
jmp
daa
dec
mov
popa
cmp
sti
jmp
and
add
pop
daa
movsb
ljmp
dec
jns
mov
pop
cmp
out
xor
iret
fmul
sbb
and
adc
inc
push
dec
cmp
cltd
xlat
ret
cmpsl
mov
lahf
xchg
mov
xchg
std
scas
push
jae
sbb
dec
push
lods
pop
and
mov
xlat
jne
lds
data16
lret
popa
sbb
fsubl
mov
pop
xor
and
mov
inc
ror
cs
mov
iret
int
and
dec
push
mov
dec
push
outsb
mov
add
cmp
jmp
mov
push
jnp
push
fildll
sub
pushf
popa
xchg
pusha
je
nop
or
push
adc
lods
jae
push
push
lods
clc
inc
fdiv
je
insl
fistps
jle
js
fwait
test
mov
inc
sub
int3
enter
jb
daa
mov
push
addr16
pop
jne
fcoms
and
std
jg
int3
fucomi
mov
loope
je
lret
shrb
jge
aaa
dec
inc
dec
push
movsl
cmp
lcall
sbb
jo
cmp
scas
cmp
and
in
jmp
mov
inc
adc
add
fst
push
jo
jl
pop
into
sbbb
mov
mull
push
jmp
and
pop
lods
add
mov
int3
in
insl
inc
fisttpll
adc
xchg
loope
xor
adc
sub
fwait
push
ds
mov
jbe
loopne
push
ljmp
cmp
test
cmp
or
enter
and
ret
dec
mov
jge
cwtl
mov
lock
push
and
jp
insl
xor
dec
std
inc
and
das
mov
mov
sub
cmp
and
xchg
cld
xor
daa
lock
cmp
cmc
aaa
push
adc
jl
push
clc
mov
je
sti
mov
xchg
insl
pusha
repz
ret
mov
lcall
adc
out
insb
cmp
fs
mov
fildl
mov
pop
sarb
loope
jb
arpl
sbb
in
pop
test
cwtl
pop
jg
xchg
fcoms
ljmp
inc
in
ss
enter
push
dec
add
outsb
leave
cld
push
bnd
inc
hlt
roll
xchg
jmp
jle
fstl
sub
es
cmp
out
jecxz
xchg
aam
lock
xchg
ret
and
test
mov
mov
inc
jns
pop
fdivrp
loop
mov
cmp
inc
mov
das
sbb
mov
adc
es
arpl
pop
push
movsl
dec
jle
icebp
out
cltd
pop
aaa
wbinvd
cs
jno
and
icebp
mov
mull
xor
xor
jle
mov
sbb
dec
arpl
or
std
inc
push
into
pop
jmp
and
xchg
subl
push
and
imul
outsl
ficomps
or
scas
cmp
mov
gs
jb
into
fidivrl
stc
je
imul
xchg
mov
jmp
nop
pop
mov
iret
cmp
xlat
leave
pop
xor
jb
cwtl
and
das
push
hlt
add
inc
xchg
cld
mov
pop
cmp
pop
shlb
mov
inc
jb
mov
pop
lret
dec
test
dec
xchg
pushf
cmp
jae
xchg
push
xor
das
push
jo
mov
pushf
cwtl
pop
jne
sub
test
xchg
and
mov
clc
sub
jp
mov
fimull
repz
mov
jne
dec
fstpl
inc
cmp
stos
icebp
inc
adc
cmc
insb
mov
mov
movsb
lret
cli
mull
add
ds
pop
lea
lock
adc
into
lret
incb
out
testb
pop
shrb
notl
sub
int3
out
cmc
jne
aas
dec
dec
push
loope
adc
mov
cwtl
sub
out
in
popa
mov
aam
mov
out
rclb
add
out
bound
jg
push
push
and
data16
mov
jo
add
aas
mov
and
scas
push
movsb
mov
or
push
mov
cltd
push
add
pop
and
imul
adc
pop
push
xchg
stc
int
fs
adc
lods
mov
pop
add
lods
cmc
lds
test
cmpsl
orl
push
popa
jp
lret
daa
aas
and
out
stc
pop
mull
pop
call
mov
mov
xor
cltd
ja
pop
sbb
lea
pop
imul
jb
test
and
repz
adc
test
pop
aaa
cmpsl
jae
mov
fadds
loope
sub
loope
ficoml
xorb
stos
xlat
sub
stos
mov
pop
and
inc
lods
or
pop
dec
xor
dec
mov
and
sarl
aas
jl
jg
bound
pop
pop
cmp
inc
fwait
lret
inc
push
jno
push
jns
mov
das
scas
push
pop
cmp
das
dec
fiadds
bound
jb
jns
ds
aaa
hlt
fsubrl
or
jae
jle
out
movsl
mov
xor
pop
fistps
xor
cmp
push
push
andb
sbb
subl
fidivs
loope
lods
mov
repnz
add
jmp
inc
stos
jbe
and
mov
aas
mov
sub
stos
pop
fstpt
xchg
and
push
fsubrp
cmp
push
push
je
daa
jle
push
jmp
jg
sbb
mov
add
aas
ja
sti
insl
cli
fcmovnb
out
adc
jecxz
jmp
stos
jo
lods
push
pop
leave
dec
lods
add
mov
js
movl
cmp
xchg
in
ret
mov
data16
push
in
aas
mov
inc
mov
pushf
xchg
imul
inc
push
outsb
push
cmp
xor
dec
sbb
js
jecxz
rorl
insb
mov
mov
add
insl
popl
xor
xchg
fcmovnb
jb
movsl
pop
xor
mov
push
fs
les
mov
jnp
mov
out
aam
decb
jl
sti
lock
cli
lds
or
mov
sbb
dec
out
sub
mov
mov
add
or
dec
mov
int
add
adc
lret
mov
lret
xor
adc
inc
sbb
push
shrl
in
js
dec
xor
adc
jo
mov
aas
adc
enter
out
test
lods
clc
lods
and
adc
cmp
pop
mov
xor
arpl
pop
inc
mov
push
test
pop
filds
testl
mov
xor
fwait
lret
loope
fmull
stos
inc
test
pusha
ret
xor
mov
or
test
cli
imul
rclb
sarb
push
sub
pop
sbb
test
andl
insb
jo
sbb
shlb
cmp
adc
add
loope
mov
arpl
out
loop
and
xchg
sub
dec
ds
out
push
cld
mov
scas
inc
sub
lcall
xchg
test
arpl
lds
inc
adc
xchg
ljmp
adc
aad
mov
addl
mov
and
mov
stos
clc
push
shlb
cld
adc
mov
mov
sbb
or
xor
sub
std
inc
in
fistpl
mov
sbb
es
mov
faddl
stc
sahf
scas
xor
cmove
sub
push
mov
cmp
call
jg
enter
or
aas
paddsb
cmp
or
push
add
lret
jle
cs
jns
jge
xor
sti
mov
xlat
loop
xchg
pop
lock
scas
cwtl
popa
mov
leave
pop
dec
cli
imul
push
lods
stc
xchg
icebp
fcoms
popa
inc
int
xor
sbb
xchg
in
int3
xchg
push
aaa
bound
outsb
and
mov
insl
add
mov
or
aam
ficomps
xor
fldt
mov
data16
jmp
sub
xor
jbe
add
dec
sbb
adc
in
push
mov
add
cmpsl
dec
jbe
mov
push
or
or
mov
shl
dec
bound
sbb
cli
push
inc
shlb
testl
cmc
sbb
lods
out
inc
imul
pop
push
xor
lcall
cltd
sub
xchg
cmp
mov
jecxz
or
hlt
into
ljmp
insb
test
repz
fxch
dec
jl
mov
out
mov
sub
jne
jl
jb
aas
rcrb
test
mov
cld
or
sub
les
push
push
loope
rol
adc
and
rclb
lds
adc
push
pusha
fbstp
xchg
addr16
xchg
repz
std
jbe
and
adc
add
mul
sub
adc
pop
insl
in
rcl
sub
mov
bound
lret
lods
ss
mov
lock
adc
hlt
xor
std
lock
mov
jno
loope
inc
mov
mov
dec
lock
out
pushf
out
rcrb
mov
mov
push
into
out
imulb
in
insb
dec
nop
cld
pop
jmp
xchg
sub
mov
push
jg
popf
out
fnstsw
pop
mov
rcl
cli
lahf
dec
ret
faddl
in
jbe
sbb
sti
loope
int3
test
call
insb
sbb
jnp
xlat
ljmp
xor
push
xchg
jns
dec
mov
inc
es
out
jbe
mov
call
xchg
or
data16
sbb
xchg
sub
fcmovu
fsubp
out
popw
add
cmc
push
and
mov
pop
in
mov
cmpsb
jbe
pusha
inc
cmp
add
cmp
lods
lods
mov
rol
clc
outsl
mov
adc
xor
pop
call
stos
in
adcb
jb
adc
mov
out
inc
fsubrs
in
or
sub
rcl
cmp
adc
xchg
lret
and
cmp
aad
and
dec
xor
and
dec
cmpsl
test
loop
mov
shll
nop
outsl
push
mov
xor
out
pop
sti
mov
lret
xchg
adc
pop
es
sbb
mov
in
pop
add
xor
fwait
cwtl
das
push
int
mov
xor
jo
aam
clc
cmp
pop
fnsave
mov
xchg
scas
cwtl
inc
leave
iret
test
pop
cmp
orl
or
call
mov
es
dec
push
imul
rorb
ja
dec
push
add
insl
jl
mov
xorb
pushf
dec
sbbb
rol
xchg
add
mov
scas
repz
ja
sbb
sub
loope
sbb
neg
jns
jns
fcomps
pop
fidivl
out
pusha
push
nop
nop
ja
jp
and
inc
cli
in
dec
adc
add
jp
rolb
loope
sub
into
fsts
pop
mov
push
imul
int3
addr16
aas
popf
popf
xor
movsl
pop
xor
in
cld
sarb
dec
adc
mov
inc
adc
rcrb
stos
sbbb
cltd
aam
shlb
arpl
fcom
outsb
cwtl
inc
adc
pushf
xor
add
outsb
and
push
push
add
orl
insl
lods
adc
pop
sbb
rcrb
pop
repz
cmp
push
xchg
mov
js
mov
xchg
test
andb
loopne
or
jno
rorl
repz
adc
mov
pop
add
rcrl
inc
orl
test
les
scas
imull
mov
in
jmp
bound
pop
adc
or
sbb
sbb
in
jnp
inc
mov
mov
sub
jne
jg
push
rolb
push
cmp
sub
jmp
and
aaa
insl
inc
sarl
add
pusha
jo
adc
jne
mov
fdivrs
push
mov
ds
cmpsl
icebp
test
nop
mov
repz
movsl
xchg
sub
or
pop
lods
jmp
jmp
int
jg
jae
inc
aad
loop
xchg
dec
mov
fwait
pop
xor
cwtl
rcrb
sbb
jo
hlt
mov
jg
ds
imul
mov
xor
outsb
dec
mov
mov
or
lods
mov
pop
mov
add
dec
popa
push
mov
and
jnp
or
lods
xorl
or
push
mov
cmpsl
mov
pop
push
mov
das
cld
inc
movsl
dec
xor
aad
mov
push
pop
cwtl
jns
orb
jne
mov
push
inc
and
pop
cs
es
stc
inc
pop
cmp
fcmovbe
jecxz
in
lods
jo
mov
insb
xchg
popf
imul
pop
popw
xor
cmp
ret
xchg
testl
sub
add
shrl
aad
lds
pop
daa
mov
xchg
sahf
fisubs
sub
hlt
mov
add
shrl
or
mov
xchg
les
ss
rolb
sbb
mov
cwtl
int
and
pop
sub
adc
popa
sub
cmpsb
andb
sbb
and
insl
add
mov
sti
mov
mov
or
int
rclb
lret
jmp
pop
mov
sti
das
outsl
pop
mov
mov
ljmp
mov
jns
push
sbb
dec
out
addr16
pushf
xchg
shrb
xchg
fdivrl
stos
mov
cmp
add
cmpsb
sub
gs
mov
cmp
mov
lea
les
jo
jae
fidivrs
cwtl
iret
sub
cmpsl
push
fisubrs
mov
arpl
add
inc
incb
test
daa
dec
lret
outsl
adc
dec
xor
push
sbb
in
into
sbb
das
fsubrl
ss
add
hlt
push
sbb
xor
movsb
mov
sahf
movsl
jmp
aam
arpl
sti
cmp
mov
cmpsb
or
sbb
out
outsb
out
xchg
lahf
jnp
xchg
mov
pop
out
lock
jge
roll
rolb
fisubs
mov
or
testl
xor
int
pop
vphaddwd
pop
ss
mov
clc
inc
cltd
sahf
testl
jmp
push
dec
mov
arpl
mov
aas
mov
ss
movsl
test
lds
xlat
dec
mov
xchg
pop
pop
das
push
adc
bound
outsl
jge
jne
dec
adc
imul
decl
cmp
sbb
lcall
icebp
fst
es
lock
and
push
stc
call
xor
cld
sbb
lcall
movsb
pop
mov
mov
mov
ds
sbb
push
push
sub
sub
sbb
arpl
out
and
and
fsubs
enter
icebp
fistl
out
ret
loopne
loopne
incl
clc
lahf
xchg
jns
pop
jne
mov
repz
xor
notb
outsb
lock
call
ja
or
cmp
mov
inc
add
in
data16
nopl
icebp
into
push
cmc
or
popa
or
mov
bndstx
ljmp
dec
nop
pusha
call
jmp
push
ret
call
jmp
mov
add
sub
cmpl
mov
jne
lea
push
call
mov
mov
lea
push
push
call
stos
mov
scas
jne
cmp
jne
lea
jmp
push
imul
insb
insb
outsl
arpl
push
imul
jb
add
jb
jne
insb
push
jb
je
arpl
mov
or
je
mov
xchg
mov
lea
cmpl
je
push
push
push
push
call
mov
mov
add
je
push
push
push
push
call
mov
push
mov
add
pushl
pushl
push
push
call
mov
cmp
jne
incb
push
push
push
push
mov
sub
mov
xor
or
je
js
lods
cmp
je
jmp
cmp
je
inc
dec
jmp
mov
jmp
cmpb
jne
and
rol
sub
mov
add
add
sub
jmp
pop
pop
pop
pop
jmp
mov
mov
add
mov
sar
rep
mov
and
rep
pop
push
push
pushl
call
add
cmpl
jne
push
push
pushl
call
mov
or
je
mov
xchg
mov
mov
sub
je
mov
shr
xor
mov
add
cmpl
je
mov
sub
shr
mov
add
add
mov
shr
cmp
je
cmp
je
cmp
je
jmp
mov
and
add
jmp
mov
and
add
jmp
mov
and
add
jmp
orw
add
loop
jmp
mov
mov
or
je
add
lods
or
je
add
mov
lods
stos
jmp
mov
mov
add
mov
test
je
add
mov
push
call
test
jne
push
call
mov
movl
mov
mov
test
jne
mov
add
add
mov
mov
add
add
test
je
test
jne
add
inc
inc
push
and
push
pushl
call
test
pop
jne
test
jne
push
mov
add
push
push
lea
push
push
jmp
and
mov
cmp
jne
push
mov
dec
shl
mov
mov
mov
add
mov
add
pop
jmp
push
mov
add
push
push
lea
push
push
jmp
mov
addl
jmp
mov
mov
mov
add
mov
jmp
mov
mov
add
push
push
push
push
push
pushl
push
call
pushl
push
movzwl
movzwl
lea
lea
lods
test
je
add
cmp
loopne
jne
inc
push
push
push
testb
je
shll
testb
je
shll
testb
je
shll
pushl
add
push
call
pop
lods
lods
mov
loop
call
pop
mov
push
add
pop
or
mov
popa
jne
mov
ret
push
ret
mov
lea
push
push
call
mov
lea
push
call
mov
lea
push
push
call
mov
mov
lea
push
push
call
call
add
pop
push
lea
push
push
push
call
push
call
imul
gs
xor
cs
insb
add
imul
jae
jne
gs
xor
fs
insb
add
jae
popa
addr16
outsl
js
add
jo
imul
dec
inc
inc
inc
push
and
push
dec
push
add
and
outsl
arpl
jne
and
je
jns
jo
imul
arpl
insb
and
je
bound
insb
outsl
arpl
gs
and
and
popa
insl
imul
and
jb
jb
and
and
imul
and
jne
and
je
bound
insb
outsl
arpl
gs
and
and
popa
insl
imul
and
jb
jb
and
mov
pushf
lods
or
je
xor
mov
shr
jae
xor
dec
jne
jmp
xchg
pop
ret
add
add
mov
add
add
add
add
add
add
add
add
inc
add
rolb
add
add
add
add
add
add
add
add
pusha
add
loopne
adc
add
push
add
add
add
inc
add
ret
add
add
add
pusha
add
loopne
rolb
add
incl
add
mov
sub
lea
push
call
mov
mov
push
push
lea
call
test
jne
or
add
ret
mov
lea
push
push
lea
call
test
jne
or
add
ret
mov
add
ret
add
add
add
push
pop
or
or
adc
sbb
sub
cmp
pusha
jo
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
or
or
or
or
or
or
movups
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
push
mov
push
mov
push
cmp
jb
push
mov
mov
mov
inc
mov
mov
mov
mov
shl
and
or
mov
add
mov
mov
mov
cmp
jae
pop
mov
mov
mov
sub
shr
mov
sub
and
shr
add
pop
mov
pop
pop
ret
mov
mov
mov
mov
lea
mov
add
ret
sub
push
push
push
mov
push
mov
mov
xor
lea
xor
rep
mov
cmp
mov
jbe
xor
mov
mov
lea
inc
inc
cmp
mov
jb
mov
mov
mov
mov
mov
xor
mov
movl
mov
lea
mov
mov
shl
add
cmp
mov
ja
mov
mov
mov
add
cmp
mov
mov
jl
mov
mov
mov
mov
shr
mov
and
sub
add
mov
mov
mov
mov
mov
mov
shl
mov
shr
rep
mov
mov
and
rep
mov
mov
mov
add
inc
dec
add
cmp
mov
mov
mov
jge
cmp
je
pop
pop
pop
xor
pop
add
ret
mov
xor
test
jbe
mov
mov
test
je
mov
and
mov
mov
xor
mov
mov
lea
inc
mov
mov
inc
cmp
jb
pop
pop
pop
mov
pop
add
ret
push
push
push
mov
push
mov
cmpl
jb
mov
mov
inc
mov
mov
mov
mov
shl
and
or
mov
add
mov
mov
mov
cmp
jae
mov
mov
mov
sub
shr
mov
and
cmp
jae
mov
mov
shr
xor
mov
mov
jmp
cmp
jae
cmp
sbb
add
jmp
cmp
jae
mov
jmp
cmp
jae
mov
jmp
cmp
jae
mov
jmp
cmp
sbb
add
mov
mov
add
mov
mov
mov
sub
sub
pop
shr
mov
add
mov
pop
pop
mov
pop
ret
push
push
push
mov
xor
xor
lea
mov
push
call
mov
pop
mov
add
shl
add
inc
cmp
jb
mov
lea
push
push
call
push
push
lea
call
push
push
lea
call
push
push
lea
call
mov
pop
pop
add
pop
ret
mov
mov
mov
push
mov
lea
mov
movl
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
rep
mov
stos
call
pop
ret
sub
push
mov
push
push
lea
push
push
mov
call
test
jne
mov
mov
rep
stos
xor
push
mov
call
mov
inc
cmp
jb
lea
lea
push
mov
call
test
jne
pop
pop
pop
pop
add
ret
xor
mov
call
cmp
jae
mov
mov
add
and
mov
inc
jmp
jne
push
mov
call
add
test
jle
cmp
jge
mov
dec
mov
inc
test
jg
jmp
cmp
jne
push
mov
call
add
jmp
push
mov
call
add
test
jle
cmp
jge
movb
inc
dec
test
jg
cmp
jl
lea
lea
push
call
test
jne
pop
pop
pop
pop
add
ret
lea
lea
push
call
test
jne
pop
pop
pop
pop
add
ret
lea
push
lea
call
test
jne
pop
pop
pop
pop
add
ret
movb
xor
cmpb
jne
inc
cmp
jb
jmp
movb
mov
lea
mov
rep
pop
pop
pop
mov
pop
add
ret
call
nop
pop
sub
ret
sub
mov
push
push
push
movl
mov
push
xor
test
mov
mov
jbe
lea
call
cmp
jae
mov
mov
mov
inc
inc
mov
mov
jmp
cmp
jae
add
mov
and
shr
lea
cmp
mov
jne
lea
call
mov
xor
push
call
mov
pop
cmp
jb
mov
mov
inc
mov
mov
mov
mov
shl
and
or
mov
add
mov
mov
mov
cmp
jae
mov
mov
mov
sub
add
shr
mov
mov
sub
and
shr
xor
push
call
mov
pop
mov
add
add
mov
mov
mov
xor
push
call
mov
pop
test
mov
je
cmp
jb
mov
lea
cmp
jb
mov
mov
shl
mov
inc
mov
mov
mov
mov
and
add
or
mov
cmp
mov
mov
jae
mov
mov
mov
sub
add
shr
mov
mov
sub
and
shr
lea
call
add
lea
jmp
cmpl
jb
mov
mov
shl
mov
inc
mov
mov
mov
mov
and
add
or
mov
cmp
mov
mov
jae
mov
mov
mov
sub
add
shr
mov
mov
sub
and
shr
add
cmp
jae
mov
test
je
mov
mov
jmp
mov
mov
lea
mov
mov
mov
mov
mov
inc
lea
cmp
mov
jae
mov
sub
inc
mov
mov
mov
cmp
jb
mov
add
mov
mov
jmp
mov
call
test
je
cmp
jb
mov
mov
pop
pop
pop
mov
pop
add
ret
pop
pop
pop
xor
pop
add
ret
or
add
aad
add
out
add
stc
out
add
add
add
imul
gs
xor
cs
insb
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
out
add
mov
add
add
lock
mov
add
cmc
lock
mov
lock
leave
lock
add
add
add
lock
or
add
add
lock
adc
add
add
jbe
jb
cs
insb
add
imul
insb
insb
add
imul
insb
add
outsl
arpl
xor
fs
insb
add
jbe
jo
xor
cs
insb
add
gs
xor
fs
insb
add
add
add
icebp
add
add
add
inc
icebp
add
add
add
push
add
addb
add
dec
icebp
add
add
add
add
add
add
add
jae
jb
push
inc
imul
gs
imul
insl
dec
inc
dec
push
dec
inc
push
add
add
gs
inc
inc
add
add
addr16
jne
jb
push
popa
insb
jne
inc
js
add
add
je
insb
popa
jae
dec
popa
insl
gs
