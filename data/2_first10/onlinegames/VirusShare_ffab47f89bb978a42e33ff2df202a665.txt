sbbl
mov
iret
incl
xchg
gs
imul
xchg
sbb
in
fcmovnbe
lds
stos
fwait
xorl
lret
mov
pop
dec
aaa
sub
cltd
les
xchg
gs
add
mov
incl
jmp
add
mov
lea
rcrl
js
js
xchg
repnz
stos
mov
out
adc
add
lcall
lea
cwtl
lcall
lcall
mov
imul
xchg
fwait
call
cwtl
xchg
xchg
sahf
xchg
fwait
call
inc
test
cwtl
popf
mov
iret
into
rcrl
cmpsl
lcall
cli
adc
lock
lock
imul
mov
xchg
clc
test
popf
lea
mov
in
add
loope
iret
lret
je
jle
xchg
idivl
inc
lret
fwait
lcall
je
mov
and
add
test
por
scas
lods
cmp
mov
sbb
sahf
aaa
mov
hlt
xor
xchg
cld
xor
xor
xchg
xor
xor
das
hlt
cs
cld
sub
adc
and
mov
les
call
and
and
aam
enter
scas
cld
push
mov
sbb
sbb
and
push
mov
fcoms
mov
enter
or
mov
or
or
pop
or
cld
add
add
xchg
push
xchg
dec
subb
pop
cmp
subl
aaa
out
paddusw
or
add
sub
pop
les
mov
test
je
adc
je
idivl
mov
int3
aas
and
dec
add
jb
addr16
cmp
xlat
stos
scas
test
ljmp
aas
mov
in
ljmp
inc
inc
lret
cmpsb
mov
icebp
repz
out
pop
fsubl
xchg
and
add
xor
cmp
repnz
movsb
ss
jl
jecxz
rorb
insb
ljmp
test
inc
bound
out
repz
notl
je
jbe
stc
pop
cli
adc
ficomps
test
cmp
xchg
stc
orl
xchg
mov
mov
loopne
dec
mov
inc
xor
add
int3
and
or
loop
out
fbld
pop
in
loope
les
pushf
xor
xchg
cld
xchg
movsb
mov
jl
dec
mov
test
jmp
mov
movsb
adc
fdivrs
mov
jge
scas
jg
ret
mov
movsb
pop
das
dec
mov
push
jmp
pushf
mov
repz
dec
dec
lret
xor
in
pop
scas
jae
ds
jae
scas
sub
iret
in
xor
xchg
push
shl
mov
call
bnd
repz
xchg
nop
jp
cmpsl
mov
testl
loopne
or
pop
in
inc
repz
dec
cmp
dec
cmpsl
sti
movsl
iret
and
jmp
jecxz
inc
fwait
lock
pop
mov
fistps
xchg
mov
jl
ss
cmp
mov
out
mov
hlt
negl
jnp
dec
pushl
jmp
pusha
imul
ret
dec
push
inc
and
dec
and
repz
push
jp
repnz
out
mov
in
stos
jmp
outsb
out
stc
jne
sub
mov
mov
cmp
loopne
sbb
cmp
stos
dec
adcl
std
ljmp
iret
jmp
lock
ljmp
loopne
std
fildl
jb
push
stos
in
xchg
add
mov
inc
sub
mov
mov
movsl
in
mov
aad
xlat
inc
int3
fildl
dec
test
dec
inc
aam
pop
or
outsl
ljmp
push
pop
and
cmp
ds
mov
scas
and
mov
lods
cmp
call
test
aam
fildll
sub
stos
fsubs
arpl
sbb
shr
pop
dec
shrb
push
adc
das
test
inc
mov
mov
sti
aas
into
add
and
jb
jae
mov
mov
or
lods
test
jb
dec
dec
sti
jg
pop
out
aas
inc
out
adc
jb
push
repnz
cltd
push
inc
xor
lods
push
xchg
xor
inc
xchg
or
jne
cld
cmp
adc
lret
cmp
jl
dec
mov
andl
test
sub
cmp
and
int
xor
cmpsl
pop
jmp
mov
pop
iret
test
adc
cmpsl
rorl
aad
jnp
das
lds
call
jne
cmpsl
mov
or
xchg
mov
test
cmpsb
push
push
add
leave
mov
cmpsb
repz
cmp
test
and
add
push
and
fimuls
pop
cmpsb
gs
iret
cld
mov
cmpsb
gs
lcall
cmpsb
inc
idiv
mov
xchg
cmc
mov
hlt
inc
hlt
stc
xor
jl
xor
dec
cli
hlt
adc
jb
scas
lods
pushl
cld
ljmp
ss
imul
pop
sbb
scas
or
repz
ljmp
hlt
cmp
mov
shll
sub
stc
adc
jb
stc
xor
xor
shll
pushf
xor
inc
xchg
ja
cs
lods
repnz
dec
repnz
inc
cli
add
mov
inc
addr16
push
xchg
sub
jb
ljmp
test
cld
add
mov
ds
aas
cli
in
inc
lret
cmp
inc
jnp
lea
pushf
cmp
lock
add
add
xor
popf
xor
fmull
pop
add
mov
lret
int3
sub
sub
and
push
sub
xchg
repnz
add
lea
addr16
push
ljmp
cltd
add
push
or
fsubrl
or
outsl
xlat
das
xchg
inc
push
xchg
inc
stc
sub
inc
xor
ss
xchg
dec
test
add
fcoml
hlt
leave
imul
dec
or
xchg
mov
nop
ror
mov
xchg
mov
dec
insl
iret
rolb
inc
stos
mov
xchg
hlt
xchg
push
out
fwait
pushf
or
hlt
dec
ds
leave
popf
rorb
lret
cli
je
add
xchg
arpl
bnd
mov
inc
sarl
add
in
mov
cmp
inc
lahf
push
cmp
xchg
push
jl
aaa
xchg
jae
dec
jmp
stc
push
mov
nop
int3
aaa
cmp
lcall
or
popf
shl
xchg
cld
ret
mov
pop
loopne
cltd
mov
ss
lahf
stc
mov
popf
inc
add
jb
scas
stc
pop
inc
scas
pushf
inc
pop
mov
pop
push
ret
out
mov
lods
fadd
fwait
scas
mov
sbbl
mov
loopne
sbb
push
ds
mov
roll
mov
adc
movhps
ret
inc
jle
in
out
push
or
xchg
pop
int3
cmp
push
out
jmp
inc
add
fdivrp
ret
sub
mov
jmp
je
loopne
hlt
xor
fidivrl
fidivl
xor
hlt
lock
xchg
outsl
out
imul
xorb
jmp
push
hlt
sar
int
and
cmpsl
call
je
repz
je
mov
push
cmp
arpl
fisttps
in
jnp
mov
scas
jp
aam
dec
fwait
ds
mov
mov
xchg
jge
stos
aad
mov
mov
fildll
scas
mov
mov
jmp
call
xchg
out
std
stos
stos
es
incl
fcom
fwait
cld
ljmp
pushl
ja
repz
sti
cld
add
inc
loopne
stc
aas
stc
mov
loopne
icebp
shr
nop
add
dec
divb
fiadds
mov
stos
xchg
xchg
inc
lea
add
sahf
xchg
xchg
nop
mov
popf
lcall
std
mov
nop
fwait
lcall
repnz
fstpt
or
cld
push
pushf
rorb
clc
cmp
data16
dec
and
or
data16
adc
inc
data16
clc
lods
xchg
pushf
xchg
and
out
or
pop
scas
mov
out
dec
inc
adc
jbe
dec
icebp
fdivp
stc
repz
cmovb
out
cld
cli
clc
std
rcll
clc
scas
repz
daa
ds
out
clc
stc
outsl
das
jb
pop
test
mov
fs
loope
leave
or
popf
mov
popf
aas
jg
rcrl
lcall
jmp
pop
cmp
lea
adc
jecxz
les
hlt
hlt
fdivrs
pop
inc
into
cld
jae
sbb
leave
jge
add
loopne
ror
mov
xchg
cld
push
dec
cmp
adc
mov
daa
std
iret
add
aad
mov
mov
mov
lret
mov
dec
inc
xor
sub
mull
mov
mov
test
fwait
stos
inc
adc
mov
lret
lcall
imul
xchg
jge
scas
movsl
xchg
jmp
mov
and
jge
dec
cltd
movsb
outsl
add
iret
int
aad
int3
sub
mov
and
ret
mov
in
insb
shll
scas
popl
inc
xlat
jle
xlat
jp
sub
xchg
out
repz
xchg
out
test
data16
lret
push
shl
in
out
repz
leave
sti
sti
shll
insb
cli
jmp
aam
jmp
outsb
jmp
cmpb
in
sbb
cld
jmp
repz
mov
bnd
sbb
jmp
cld
jmp
out
daa
aam
jecxz
mov
pop
and
daa
xor
dec
mov
cmc
add
ficoml
int
test
or
test
xor
ret
mov
jl
out
jne
cmp
stc
mov
test
scas
cmp
sub
lock
inc
add
rcl
cmp
stos
pushf
and
in
lahf
dec
scas
stc
pop
fucomi
xchg
out
jnp
mov
sub
inc
lahf
js
aas
sub
mov
rorb
mov
pop
sbb
in
gs
xor
sbb
pop
add
lret
sbb
push
fbld
repz
int3
and
mov
fwait
fwait
dec
imul
lret
jg
les
out
lods
pop
pop
aaa
dec
and
in
inc
stc
pop
rolb
mov
jmp
add
dec
xlat
mov
loop
sti
notb
mov
out
mov
mov
scas
outsb
sbb
lahf
jnp
mov
lock
faddl
inc
ret
inc
out
idivl
pop
cli
testb
or
cmp
cld
mov
insb
int3
jne
in
test
add
adc
cwtl
dec
out
je
jns
mov
inc
mov
pop
fwait
rclb
bound
xchg
xchg
mov
loope
adc
lcall
inc
out
cli
sbb
test
dec
pop
fidivrs
test
push
lods
adc
mov
ret
mov
hlt
cs
inc
jbe
add
int3
inc
sub
hlt
jle
pop
test
js
dec
lock
test
adc
push
xchg
aad
add
jbe
mulb
cmp
and
push
or
mov
shrb
scas
add
cltd
iret
scas
int3
imul
sti
dec
adc
cmp
mov
cmp
fstpt
push
in
inc
or
cmpsb
in
add
test
lret
shl
cmc
xlat
mov
mull
xchg
std
pop
stos
adc
ret
sub
pop
iret
loop
dec
pop
js
cli
push
push
bound
loop
fdivr
in
cmc
mov
and
mull
fcompl
sbb
inc
dec
and
lahf
lock
movsl
cli
dec
rorl
mov
mov
mov
in
repz
ljmp
cwtl
loopne
lcall
cmp
icebp
dec
repz
ret
addr16
pusha
jno
cli
lds
lods
pop
ret
in
cmp
sub
test
out
repnz
mov
cltd
push
sub
inc
adc
mov
cmp
imul
lahf
xchg
pop
sar
fwait
pop
test
cmp
loope
jbe
clc
sbb
fwait
nop
cmpsb
imul
mov
imul
rcll
imul
lcall
lret
and
inc
xchg
and
cwtl
cld
and
and
pop
lret
push
inc
in
pop
sbb
outsl
add
add
xchg
push
ret
divl
scas
cli
daa
scas
in
jl
mov
jl
jmp
lds
and
cli
pop
xchg
imulb
scas
lahf
push
shr
sub
xor
pop
sbb
clc
xor
lods
lods
cld
mov
cmp
adc
aad
push
out
mov
jns
lahf
out
jge
jae
pop
mov
cmp
subb
ljmp
sub
aam
sti
cmp
fcomi
xchg
shlb
dec
mov
mov
or
cltd
jle
and
ret
fldcw
mov
shl
mov
popf
pusha
jbe
and
or
mov
mov
lock
sub
out
xorb
or
adc
mov
mov
adc
testl
loope
xchg
and
and
cld
and
mov
scas
mov
bound
cld
in
aad
xchg
mov
roll
cld
sahf
in
idiv
jl,pt
std
scas
and
pop
int
push
loopne
clc
jl
sti
jl
adc
sbb
dec
jbe
cmp
mov
mov
jbe
adc
dec
fwait
push
mov
repz
cli
je
ja
pop
inc
cmp
jl
out
jno
mov
adcl
nop
lock
stc
je
mov
ds
mov
je
and
and
imul
out
cltd
outsb
mov
cltd
out
test
and
pmaddwd
mov
imul
hlt
sti
mov
mov
loope
std
mov
sbb
leave
lret
imul
testb
xchg
mov
mov
cld
mov
test
xchg
mov
jnp
mov
and
cld
or
add
dec
push
cmp
mov
dec
inc
hlt
add
mov
and
hlt
in
out
sbb
je
add
push
cld
cmp
push
pop
cld
mov
rcl
fstpt
and
jecxz
push
cmpsb
xrelease
xchg
push
scas
jbe
mov
mov
xchg
mov
int3
je
adc
repz
jecxz
cmp
push
jp
or
and
shr
xchg
in
xor
enter
jnp
mov
pushf
jae
sub
cmp
lods
arpl
fmull
ljmp
fmuls
xchg
xchg
sti
xchg
lods
xor
lock
sbb
mov
insb
fiadds
into
cmp
cmc
notl
scas
add
imul
ja
add
daa
fcmovnb
cmp
loop
fnstenv
mov
or
movsb
mov
sub
mov
in
lock
iret
je
dec
dec
mov
cld
pop
jmp
cltd
xchg
fldl
mov
loop
aaa
jmp
jmp
das
enter
inc
pop
mov
pop
cmp
sarb
jge
mov
inc
loopne
scas
sti
negl
inc
mov
arpl
mov
or
test
test
jg
xlat
lcallw
xchg
sub
mov
clc
pop
push
push
hlt
cli
cltd
cpuid
add
mov
notl
mov
orl
jmp
imulb
aaa
bound
je
pushf
dec
iret
mov
fdivr
repnz
pop
dec
mov
sbb
mov
jle
xor
rcrl
jmp
scas
pop
out
push
mov
or
inc
sti
js
cli
repz
cli
lods
mov
ficoml
or
cli
mov
cmp
cmp
cmp
aaa
cli
inc
in
push
dec
pop
jle
push
aas
fstpt
dec
push
mov
xor
in
int3
test
rcl
in
dec
xor
in
in
mov
cld
leave
jmp
in
push
filds
jbe
cld
movsb
lret
mov
mov
inc
mov
xchg
fwait
xchg
lcall
nop
pushf
mov
nop
add
repnz
fwait
mov
popf
lea
sbb
nop
aas
or
mov
lcall
mov
rol
cmpsb
in
je
icebp
sahf
mov
fldl
xchg
mov
xchg
lock
in
xchg
mov
sub
hlt
cld
loop
jnp
test
add
rcrl
test
xchg
jecxz
lea
cwtl
fidivs
mov
xchg
mov
cli
xchg
es
adc
push
aam
lcall
in
cld
scas
mov
xchg
xchg
out
pushl
jb
xchg
nop
inc
adc
jns
mov
testl
mov
adc
mov
cmp
push
xchg
dec
sahf
dec
mov
mov
lock
or
lock
jo
out
jb
shlb
sub
das
inc
ljmp
vfrczss
lods
cmp
xchg
xchg
repz
mov
popf
push
loop
ds
jmp
jo
int
xor
jmp
les
shrb
out
xchg
sahf
mov
out
fsubrp
mov
adc
adc
or
les
xchg
push
inc
pushf
shl
test
mov
lods
mov
cmc
hlt
lock
inc
push
std
fmuls
and
cltd
cmp
lods
in
call
inc
mov
xchg
lcall
mov
mov
and
jp
lahf
movsb
ror
mov
pushf
nop
mov
es
push
sahf
sbbb
stos
mov
cltd
xchg
adc
dec
xchg
pop
lods
ljmp
sbb
xchg
inc
mov
sahf
pushf
jne
call
ljmp
push
lcall
in
les
std
jp
pop
out
outsb
jbe
and
xchg
iretw
mov
in
data16
mov
xchg
lock
fsubrs
idivb
std
testb
mov
mov
into
lret
test
fdivs
mov
ljmp
add
test
ja
push
arpl
xor
pop
into
add
ljmp
add
add
int
int
int
int
int
int
int3
ljmp
int3
add
add
mov
pusha
int3
push
int3
add
icebp
lret
loopne
lret
jae
gs
push
lret
out
lret
movsl
lret
jp
add
or
lret
sti
leave
out
leave
out
pushf
leave
popa
leave
cmp
sub
adc
pop
cmpsl
add
add
leave
jmp
in
fcmovne
aam
leave
enter
enter
enter
enter
fadd
int
cmpsb
add
add
sahf
xchg
movl
inc
loop
mov
les
add
add
test
ret
rol
ret
xchg
ret
dec
ret
inc
ret
aas
ret
fadd
enter
ret
push
add
ret
jno
imul
ret
push
ret
or
jp
add
subb
cmp
nop
or
inc
shr
insl
push
clc
push
mov
push
lods
mov
push
adc
inc
dec
push
push
fmull
sbb
push
clc
movsl
or
push
popl
push
or
shl
and
cmpsb
or
dec
into
xchg
std
push
lock
addr16
lock
jge
repz
mov
into
mov
cmp
push
mov
stc
aaa
or
pop
dec
xchg
std
lock
lahf
sub
ja
pushl
daa
je
aas
add
leave
jno
aas
enter
cmp
mulb
cmc
sti
enter
std
inc
dec
jl
addr16
gs
xchg
jns
popf
stos
mov
out
xlat
sub
outsl
dec
inc
mov
lret
cld
push
inc
sub
lret
jnp
xchg
dec
pop
cld
pop
xchg
gs
outsl
arpl
sub
or
dec
in
mov
cmpsl
fwait
lea
sub
mov
push
inc
xor
mov
xlat
iret
shrl
xchg
xorl
dec
cmp
sbb
xchg
stc
dec
and
xlat
lds
test
pop
lret
lret
dec
xor
shrd
lret
mov
dec
mov
stc
xor
push
and
cld
cmp
inc
fcoms
dec
int3
cld
shll
mov
scas
clc
cmpsl
cld
jecxz
bound
clc
out
dec
xlat
cld
icebp
dec
pusha
cld
mov
lret
ror
mov
mov
cltd
lea
lret
mov
pop
push
dec
aas
xor
sub
sbb
call
pop
int
movsl
cmc
xchg
xchg
out
pop
jmp
cld
gs
int3
cmp
sbb
cld
dec
jge
jp
xchg
gs
insb
adc
testb
nop
mov
mov
in
stos
es
mov
mov
xor
in
imulb
dec
inc
enter
mov
mov
aas
sub
cltd
pushf
mov
mov
mov
mov
jge
cmp
mov
mov
les
pop
xor
scas
jg
mov
jg
mov
jg
fwait
jg
loopne
jge
jg
jmp
ds
cld
mov
mov
cld
lahf
stos
leave
jg
mov
jl
leave
mov
js
mov
ficoml
jno
mov
fistps
or
sar
mov
call
cmp
pop
out
dec
cld
mov
mul
sahf
loopne
inc
bnd
test
not
mov
nop
cld
repnz
jno
mov
add
push
fwait
pop
adc
cld
mov
insb
mov
daa
mull
xchg
mov
out
xor
jnp
cmp
jg
aas
scas
out
shlb
cwtl
dec
dec
mov
mov
int
lock
test
xchg
ljmp
adc
in
mov
decl
pop
mov
lcall
mov
clc
test
loopne
adc
sarb
test
fbstp
hlt
mov
shlb
or
int3
clc
movsb
stc
in
clc
mov
addr16
fsubs
cwtl
aam
jo
mov
ret
clc
in
jmp
in
lds
pushf
fsubrl
jnp
insl
outsb
outsl
add
mov
xchg
mov
xchg
fistl
inc
jb
pop
mov
int
loope
xchg
dec
testb
pop
jmp
inc
cld
cli
dec
mov
out
in
scas
xchg
cmp
mov
stos
mov
rclb
ds
int
insb
mov
call
mulb
stc
je
xchg
sbbb
add
sahf
xchg
call
xchg
xchg
cld
pop
mov
divb
jno
mov
insl
pop
mov
lea
cwtl
popf
cmp
mov
outsb
stos
aas
xor
mov
xchg
and
lock
xor
call
hlt
jge
clc
mov
mov
fdivr
push
sarl
movsb
pushf
inc
sti
fcomip
rolb
inc
xorb
dec
push
dec
dec
clc
test
inc
pop
inc
add
sub
add
fsubrs
in
pop
and
and
add
cmp
dec
dec
inc
daa
inc
es
sub
loopne
ret
xchg
inc
loopne
push
sarb
adc
add
add
cwtl
mov
pop
cmp
dec
add
hlt
inc
push
in
inc
or
adc
lret
dec
dec
fistpll
pop
popf
dec
pop
dec
dec
fbstp
add
sbb
ds
and
inc
decl
cmp
pop
fidivrl
aas
dec
inc
sub
mov
das
cld
aaa
cmp
and
add
or
adc
dec
sub
jl
add
dec
sub
xor
mov
inc
pop
shlb
sub
sub
sub
add
sub
aas
ss
xor
xor
clc
aam
sbb
addb
aaa
and
aas
sub
aaa
pop
dec
cmp
dec
xor
add
push
cmp
dec
cmp
inc
sbb
add
dec
adc
inc
aaa
fadd
sub
push
clc
addb
dec
cmp
lret
inc
cmp
pop
inc
push
enter
das
cmp
and
add
xor
xor
and
inc
xor
mov
in
ret
jl
mov
push
sub
add
pusha
clc
inc
adc
cmp
pop
cmp
cmp
adc
dec
push
clc
mov
and
inc
push
filds
cmp
xor
das
ds
xchg
and
cmp
in
loop
es
cbtw
ljmp
in
hlt
add
adc
xor
xor
les
pop
inc
test
sub
cmp
rcr
mov
inc
dec
das
cmp
test
ljmp
and
xchg
lcall
rcl
movsl
pop
cmp
dec
test
stos
arpl
jnp
mov
orl
mov
into
sbb
ds
push
add
mov
mov
adc
aam
mov
hlt
test
cmc
mov
aas
mov
adc
mov
jmp
lock
js
and
xchg
hlt
ljmp
je
add
out
cmp
dec
sbb
arpl
mov
xlat
jns
inc
adc
add
scas
mov
and
or
and
cmp
jp
xchg
or
fstl
sarb
icebp
mov
mov
xchg
mov
or
mov
jg
mov
cs
and
scas
fstpt
cmpsb
cmpsb
movsl
mov
ds
out
xchg
out
push
xchg
sti
fidivrs
sbb
dec
addb
call
mov
mov
dec
add
idivb
jl
cmc
fimuls
jecxz
and
stc
lret
leave
iret
jmp
repz
lea
out
out
mov
imul
je
addr16
fs
sub
mov
jbe
stc
jbe
andl
call
add
add
aam
jl
cli
jbe
cmp
repz
pop
repnz
dec
add
mov
xchg
outsl
xchg
jb
mov
mov
pop
test
mov
dec
rcrl
cmp
xchg
push
enter
or
mov
repnz
test
div
loop
incl
outsl
ljmp
inc
jae
addr16
pop
add
test
inc
lock
mov
mov
mov
aad
pop
adc
jne
jg
icebp
pushl
repnz
iret
loope
xlat
and
sbb
cmpsb
jl
cmpsb
addl
push
and
jg
cmpsb
mov
cmp
mov
dec
mov
mov
pop
out
mov
mov
mov
mov
pop
fdivp
aaa
fcmove
mov
jg
mov
mov
incb
lret
je
fcmovnbe
adcl
jle
and
cmp
xor
mov
fldt
fcmovbe
jecxz
mov
in
fcomi
jle
mov
fistpll
jno
xor
mov
repnz
fildll
nop
shrb
mov
xor
or
in
jmp
movsb
mov
mov
std
sbb
popf
xchg
nop
cmc
sbb
or
inc
add
out
sbb
jmp
icebp
shl
mov
jl
xchg
aad
add
mov
add
xor
xchg
fldl
dec
adc
insb
fldt
dec
mull
push
jp
gs
movsb
mov
fwait
and
aaa
fildl
push
iret
sub
cmp
cmpsl
adc
jmp
fstl
pop
fwait
es
adc
loope
icebp
mov
sub
sub
xchg
xchg
test
loopne
clc
mov
mov
xchg
push
or
cmp
mov
lds
cmc
and
test
cvtps2pd
cltd
pop
inc
aas
repz
inc
dec
leave
dec
cmp
inc
in
out
les
ja
pop
inc
or
pop
cmp
pop
jg
cmp
xchg
xor
pop
dec
sldt
dec
ds
inc
dec
repnz
mov
imul
lock
out
cmp
std
xor
stos
test
ds
sub
or
das
lods
jmp
adc
mov
pop
mov
insb
sarl
fdivp
jns
fwait
aas
mov
arpl
je
dec
shlb
cli
repz
les
or
xchg
jns
lock
mov
or
adc
jp
xchg
es
pop
adc
out
mov
and
std
or
mov
jbe
push
fiadds
cmpsb
lea
lea
inc
les
mov
je
cld
jno,pt
mov
pushf
ds
sub
clc
sub
in
in
loop
jmp
cltd
jl
mov
add
lret
xchg
jl
std
test
add
movsb
je
popl
iret
gs
nop
dec
mov
dec
popf
push
xchg
lahf
cmc
mov
or
inc
fnstenv
cld
mov
movsb
fwait
iret
dec
jbe
add
jne
mov
jb
enter
dec
fisubs
and
cmp
push
scas
popf
test
sbb
in
imul
and
pop
mov
out
lret
repnz
mov
pop
into
sbb
cld
cmp
daa
dec
mov
lods
pop
or
idiv
cmp
sbbb
sbb
sahf
test
les
sbb
rcrl
pop
xchg
imul
mov
mov
dec
xor
inc
stc
fistpll
setae
cmpsl
outsb
aaa
stos
adc
jg
mov
iret
sbb
faddp
jg
iret
into
or
xchg
mov
inc
mov
jae
scas
into
jnp
xchg
iret
xadd
test
gs
push
cmpsl
imulb
jae
sub
outsl
iret
arpl
addr16
js
cli
jle
jae
fistpl
cs
decl
sti
xchg
adc
xchg
adc
in
or
pop
and
ljmp
fmuls
add
out
cmpsl
dec
push
scas
inc
xchg
mov
and
iret
cmp
sbb
push
cwtl
xchg
test
xchg
xchg
push
xchg
rcrl
fstpl
out
or
xchg
add
pop
int3
cmp
sahf
leave
loop
push
out
cmp
rcll
sub
mov
or
shll
or
dec
stc
das
add
test
rcll
and
scas
das
in
jns
or
iret
sub
jae
sub
lret
in
pop
ficomps
add
jecxz
stos
shl
jecxz
cmp
lret
insl
aas
adc
fnsave
jp
out
fildl
mov
iret
insl
ds
rol
imul
faddl
mov
das
fst
ret
aas
push
jle
push
in
pop
pop
cmp
mov
inc
mov
call
mov
mov
mov
xchg
mov
cmp
inc
divb
aas
mov
jl
enter
jmp
mov
sahf
repz
adc
rcll
out
mov
enter
in
and
clc
sub
cmp
aam
into
sti
aas
sahf
push
dec
das
pop
sti
add
arpl
scas
sbb
inc
add
dec
ja
push
shll
mov
stos
hlt
pop
ljmp
mov
fdivr
jle
aam
into
std
int
mov
fildll
aam
lahf
mov
cmpsl
mov
aaa
jmp
aam
mov
clc
jno
fwait
les
pop
iret
mov
outsl
je
sub
pop
iret
aam
lcall
sub
out
ficomps
movsl
sub
or
pop
mov
scas
push
cmpsl
mov
push
mov
cmpsb
mov
int3
ss
lock
bnd
cmp
into
cmpl
cmp
adcb
sub
fdivrl
mov
imul
mov
int
fucomip
repz
inc
adc
jle
mov
jmp
cmp
out
jle
add
push
icebp
je
ds
jb
push
pop
rol
mov
add
mov
push
loop
mov
push
ss
icebp
cmc
inc
mov
mov
xchg
add
jne
ja
stc
call
in
dec
cmp
jb
or
cmpsl
pop
pushf
and
sub
cmpl
hlt
sub
add
add
mov
lret
lcall
div
stc
in
jo
movsb
xlat
outsb
sub
je
int3
cmpsb
mov
add
mov
mov
je
or
faddl
icebp
sbbl
add
fmull
add
out
jb
call
ja
addb
ds
sti
cld
or
cs
scas
or
hlt
or
cld
out
mov
fiaddl
jb
enter
or
adc
or
xchg
add
mull
mov
cli
cmpsb
jmp
and
adcb
ds
jmp
pcmpeqb
fmull
push
test
xor
and
lock
or
and
xor
hlt
jge
ds
hlt
or
or
add
mov
inc
cld
and
dec
dec
add
push
lock
je
adc
add
je
jmp
stos
or
or
aas
add
in
stos
in
aad
js
je
mov
dec
sbb
jmp
jge
cmp
jg
sahf
sub
and
dec
push
mov
sbb
and
faddl
mov
mov
push
add
push
add
or
push
adc
cmc
dec
mov
std
out
dec
mov
fnstcw
jl,pt
sbb
cmp
daa
addr16
adc
jl
adc
jl
and
hlt
lahf
jg
xlat
loopne
or
or
je
pop
mov
xchg
xlat
aas
sti
dec
movsb
stos
mov
loope
lock
sar
aad
daa
movsb
cmp
out
stc
sub
movsl
jnp
repnz
inc
sub
adc
adc
stos
cmp
pop
je
or
adc
sub
nop
imul
mull
insb
mov
fnstenv
or
cld
stos
add
add
sub
mov
mov
cld
clc
mov
loope
inc
and
adc
mov
dec
push
mov
fcomi
js
push
inc
enter
cmp
cmp
jmp
stos
cmpsl
dec
add
fdivp
dec
mov
cmp
cmp
xchg
leave
cmp
fsubl
sub
stos
je
jp
sub
or
loop
jns
hlt
sub
paddb
faddl
andb
adc
aas
mov
mov
jmp
inc
jp
gs
pop
lea
or
movsl
ds
shll
mov
or
sub
pop
and
jl
fcoms
dec
push
add
adc
dec
lret
dec
mov
inc
push
xchg
push
or
jae
cmp
push
push
sub
js
dec
test
iret
jae
jns
jmp
std
lahf
jo
aam
call
fisubl
nop
or
jle
pop
daa
sub
icebp
pop
ds
xor
and
and
dec
inc
dec
shll
sub
xorb
and
dec
and
and
mov
das
dec
sbb
push
ficoms
outsb
pop
dec
out
imul
jp
xchg
and
enter
jo
in
push
lahf
cmpsl
inc
cmp
and
data16
or
in
icebp
and
jo
fsubl
xlat
movsb
or
je
jmp
mov
inc
cli
pop
xchg
je
and
and
lcall
xchg
jo
dec
femms
mov
ror
pop
pop
adc
pop
mov
or
je
add
jnp
es
nop
cwtl
sub
dec
mov
icebp
cmp
mov
cmp
cmp
aad
jae
or
cmp
sub
das
out
push
dec
comiss
jecxz
sti
push
icebp
dec
and
add
jecxz
and
jle
mov
jge
jge
roll
ja
loopne
rol
fstpl
jb
in
out
mov
int3
lret
in
pop
mov
sbb
fildl
or
test
adc
xlat
fs
push
mov
and
imul
xor
mov
movsw
aam
dec
lea
xchg
pop
mov
lahf
mov
or
mov
add
lods
shll
inc
inc
inc
inc
sbb
inc
push
xor
jno
iret
cmp
test
sbb
cld
cmp
adc
fcomps
sbb
jns
mov
cwtl
int3
and
hlt
inc
jp
iret
adc
and
sbb
call
into
push
xchg
xor
inc
ja
adc
out
adc
shl
mov
das
sub
xchg
cmp
hlt
push
and
inc
or
cltd
or
leave
lods
sbb
dec
icebp
xor
cld
in
and
mov
ret
lcall
xor
adc
daa
leave
xor
out
mov
jb
push
das
in
push
stc
hlt
loope
dec
das
daa
push
out
int3
jg
cmpsb
loope
sub
aad
bnd
into
sbbl
sbbl
push
out
test
xchg
jns
xchg
test
loopne
pop
insb
add
xchg
lret
adc
loop
into
push
push
sub
inc
int3
dec
pop
int3
shrb
cmp
movsb
lcall
sbb
dec
loop
sahf
xorb
xrelease
mov
and
dec
loop
inc
roll
sbb
and
xor
mov
add
adc
mov
mov
hlt
mov
push
and
pop
and
push
nop
mov
lret
movsl
test
test
sub
aad
mov
out
sbb
add
cmc
test
repz
pop
adc
loope
mov
loopne
out
divl
mov
subl
sub
sub
daa
pop
sub
dec
or
or
adc
daa
pop
sbb
lea
sub
aad
dec
lahf
imul
or
push
dec
xchg
outsb
sub
adc
into
lods
add
into
movsb
adcb
mov
sub
inc
rcrb
cli
je
stos
je
repz
repz
xchg
jb
clc
add
xchg
lahf
add
out
dec
mov
jg
cmpsb
les
cmp
xchg
add
xchg
gs
scas
or
push
testb
dec
ficomps
icebp
les
cmp
in
add
cmc
xchg
pop
and
jge
shrb
inc
pusha
mov
outsl
xor
and
ja
xor
out
icebp
jnp
and
scas
mov
and
mov
jb
test
jbe
jecxz
arpl
lods
jmp
clc
cmpsb
lods
mov
hlt
and
icebp
movb
aam
test
mov
add
push
pop
mov
mov
jecxz
sbb
xchg
or
push
mov
adc
stos
nop
call
xchg
mov
pop
pop
std
aaa
mov
imul
inc
sub
das
mov
std
aas
cmp
jmp
insl
mov
pop
xor
add
mov
test
test
pop
out
inc
gs
add
xchg
cmc
mov
in
rorb
mov
inc
mov
xlat
lahf
xchg
or
xor
test
loopne
lods
jmp
inc
mov
fimuls
jns
out
cs
scas
repnz
dec
enter
adc
mov
das
cltd
dec
das
push
push
jno
xchg
inc
fwait
stos
scas
repnz
sub
sahf
sub
and
andl
and
nop
push
and
dec
jb
mov
idivb
xlat
aad
sub
jbe
jbe
mov
mov
lahf
and
scas
jle
out
roll
jne
pusha
cmp
inc
stos
sbb
lret
pop
xor
movsb
adc
jp
xchg
imul
jnp
or
lret
push
add
test
cwtl
scas
cmc
pop
cmpsb
clc
iret
ljmp
jecxz
mov
sub
roll
cmp
out
cld
insb
out
in
ja
pop
xchg
mov
inc
sarb
aam
iret
data16
sbb
fwait
mov
or
jge
bound
add
jb
notb
mul
fcomip
lahf
or
xchg
fstpt
lods
scas
loope
dec
test
scas
call
jmp
insl
mov
loop
mov
mov
push
popa
jae
xchg
rorb
and
test
cld
test
fldcw
psubsb
outsb
xchg
in
test
into
mov
pop
sbb
arpl
jmp
xor
or
mov
add
aas
jge
push
inc
repz
cltd
loope
lea
mov
jl
lds
cltd
je
sti
cltd
ret
mov
cli
dec
push
in
jb
ficoml
out
in
in
adc
pop
cltd
xchg
lret
jl
and
test
sub
cmc
clc
mov
faddl
cmpsb
mov
in
outsb
cmp
adc
cmp
pusha
or
or
and
test
mov
mov
jno
add
xchg
or
std
ret
mov
mov
xchg
xor
vunpcklpd
lock
mov
pop
inc
ret
and
lahf
xor
fildl
mov
and
iret
jmp
hlt
mov
jae
and
mov
aaa
mov
pop
jl
mov
mov
xchg
add
jmp
pop
push
dec
pop
ret
stos
and
push
adc
in
lret
sub
xchg
mov
jp
dec
sahf
in
jns
dec
cmp
jno
bound
mov
out
xchg
inc
out
ss
xchg
jecxz
insb
out
ja
icebp
aas
ss
test
repnz
in
les
test
sbb
xor
fbld
mov
jae,pt
nop
dec
cs
ror
in
fdivs
ficoml
scas
pop
lahf
mov
mov
cwtl
lret
jno
std
jle
pop
rolb
lret
daa
xchg
rol
in
aaa
pop
mov
pop
inc
iret
add
dec
inc
rclb
dec
adcb
movsb
ds
push
loopne
pushl
sti
sbb
jmp
xor
mov
popa
push
cmp
sysret
outsl
filds
push
je
ds
je
arpl
push
and
arpl
or
dec
mov
xor
dec
fimuls
clc
sti
mov
pop
adc
inc
idivl
push
hlt
cli
das
out
arpl
pop
adc
dec
add
shrb
lahf
sti
lds
sbb
in
ficomps
fstl
dec
imul
mov
and
clc
pop
jno
adc
pop
xlat
jecxz
jmp
jge
ret
negb
mov
add
pop
notb
inc
add
shr
xchg
sub
addr16
push
insb
out
test
cld
cmp
sub
mov
cmpsl
testl
jnp
pop
add
inc
mov
dec
test
sbb
cmpl
movsb
dec
out
cmp
test
xchg
les
lods
mov
repnz
sub
xchg
xor
push
xchg
cld
push
mov
xchg
dec
cwtl
dec
test
dec
mov
mov
xor
dec
lea
inc
mov
inc
jbe
xchg
sub
inc
faddl
cld
inc
xchg
inc
fwait
ljmp
lcall
xchg
nop
lea
imul
and
cmpsb
jmp
sahf
xchg
movsb
imul
imul
adc
mov
adc
femms
or
inc
xchg
or
aas
sarb
sub
fwait
mov
aas
push
and
cmp
lret
in
iret
shll
iret
aas
dec
mov
pop
adc
dec
mov
bound
lea
jo
and
lods
mov
mov
mov
xchg
sub
and
out
pushl
cmpsb
or
mov
jmp
das
call
inc
push
arpl
adc
dec
rcrb
sub
inc
mov
add
cmp
lock
and
mov
xchg
aad
mov
mov
aaa
jne
cmp
mov
adc
lock
dec
sbb
jb
aam
cs
mov
scas
mov
pop
popa
lret
out
mov
and
sbb
pop
fldt
add
pop
xchg
clc
jp
add
negl
push
and
inc
and
stc
dec
dec
imul
lahf
enter
stos
rcll
mov
jecxz
inc
dec
das
mov
jmp
les
inc
stc
sbb
iret
shlb
sub
jge
decl
mov
or
data16
or
out
addr16
aam
jns
jo
mov
inc
lret
ret
out
mov
jmp
sbb
call
xlat
clc
pop
push
icebp
mov
ljmp
cmp
cmpsl
sarb
stc
hlt
jno
mov
mov
mov
jmp
fdivr
mov
in
movsb
das
shlb
icebp
lds
jge
movsb
shrl
mov
xor
cwtl
push
jae
lret
inc
sti
sti
ljmp
andb
iret
xchg
xchg
and
or
push
pusha
fdivrs
sub
mov
pop
push
fists
in
sbb
std
ds
sahf
in
pop
orb
data16
cld
movsl
inc
std
add
orl
out
js
cld
popa
or
cmc
jmp
leave
xor
push
mov
hlt
addr16
xadd
jmp
and
sbb
decb
cmp
jl
add
jmp
jl
idiv
xor
cmc
xor
mov
mov
add
int3
daa
xchg
aaa
cli
in
mov
outsl
aad
lods
pop
push
mov
pop
xchg
or
pop
or
cmp
movsb
rcl
xor
stos
mov
cli
pop
loope
cmpsb
dec
ja
adc
or
xchg
mov
fs
leave
push
daa
mov
stos
popf
sarl
lock
dec
clc
and
ret
dec
mov
jl
fistl
cltd
jb
sbb
loopne
dec
test
adc
jle
xchg
notl
sbb
out
pop
cmpsb
cmp
and
es
leave
ds
outsb
adc
jmp
mov
in
push
mov
hlt
push
ds
std
xor
sub
ret
call
cmp
pop
loopne
add
and
clc
sbb
lret
mov
jl
cwtl
xchg
xchg
xchg
add
xor
mov
lcall
scas
fwait
push
stc
cmpl
stc
ja
scas
xchg
fwait
insb
dec
xchg
sbb
call
stc
push
inc
adc
scas
clc
pop
or
fwait
outsl
mov
inc
mov
pop
push
lahf
outsl
mov
cmp
loop
xchg
lahf
jg
pop
cld
adc
fwait
and
mov
cs
in
adc
lret
adc
lods
pmuludq
sahf
in
mov
fisttpll
or
or
pop
shll
in
cli
fs
push
rcrb
cli
fs
fldenv
lret
dec
nop
sub
sub
lcall
lret
into
ss
data16
stc
out
outsl
addr16
fs
nop
mov
mov
test
repz
leave
mov
js
aaa
fistpll
js
sysret
jnp
xchg
dec
jecxz
and
std
jmp
in
jbe
test
cmp
scas
add
xchg
pop
sub
arpl
scas
ret
out
mov
loope
pop
cmp
cltd
sarb
jge
cmp
out
mov
cmp
in
mov
das
lcall
ds
das
jb
pushl
lea
mov
out
subl
lods
test
xchg
mov
mov
mov
test
push
jmp
xor
pop
jmp
in
loop
icebp
mov
add
aam
mov
idivb
aaa
test
scas
xor
cmc
mov
outsb
dec
out
and
mov
call
aas
push
ss
lock
or
movsl
dec
ret
mov
out
icebp
xchg
lahf
jns
ljmp
cld
push
loop
ror
mov
jge
inc
pusha
inc
sub
adc
outsl
mov
call
add
or
aad
jb
fisttpll
adc
outsb
inc
out
push
push
xchg
sub
push
scas
inc
fmull
push
int3
cmpsb
xchg
dec
jl
mov
test
pop
mov
divb
test
mov
add
jae
add
sahf
rorb
pop
mov
ljmp
fstpt
ljmp
sbb
lret
mov
xchg
es
mov
ret
adc
xchg
sub
out
mov
rcll
negb
or
inc
cmp
dec
ret
cld
jp
incl
xor
mov
out
fucomp
pushf
rolb
call
pushl
jmp
and
paddsw
inc
cli
and
rcll
adc
adc
stc
inc
call
les
mov
xchg
ja
jnp
and
sahf
loopne
add
les
cmpsb
andl
loop
cltd
sarl
fidivrl
test
ljmp
in
inc
pop
pop
cmp
fcmovnb
dec
scas
ret
aad
or
out
loopne
inc
add
or
fsts
push
push
data16
adc
push
add
lock
shr
adc
pop
mov
pop
xchg
out
add
test
xor
inc
call
pop
mov
outsl
movsb
xchg
push
mov
pushf
inc
neg
push
add
inc
mov
icebp
jmp
cmp
add
mov
js
mov
pop
pop
stc
dec
repnz
ror
mov
mov
jbe
pusha
cld
frstor
insl
addr16
iret
or
pop
jmp
in
daa
or
out
repnz
jnp
xlat
lock
cmp
pop
sub
daa
mov
rcrl
xorl
rorl
or
cld
fisubl
fldcw
lret
clc
popa
in
pusha
pop
hlt
pop
in
pop
xchg
inc
xchg
pop
mov
pop
in
pop
pop
pop
xchg
gs
jl
rclb
push
push
push
push
xchg
inc
push
push
clc
push
call
xchg
inc
icebp
inc
dec
call
dec
dec
gs
jl
dec
dec
jbe
in
inc
inc
dec
incb
inc
in
inc
xchg
popf
jg
xchg
inc
call
xchg
gs
movsb
sub
cmp
cmp
mov
push
xchg
ret
mov
shlb
mov
mov
das
mov
sub
loopne
hlt
sub
daa
es
mov
and
and
in
pop
rcrb
xchg
xchg
gs
xchg
xchg
int
fimull
dec
adc
adc
mov
adc
test
in
iret
mov
fmuls
or
or
in
jb
dec
sbb
sub
call
lock
pop
daa
icebp
cmpsl
cmp
pop
les
stos
shrl
jo
aas
iret
cli
or
cli
dec
push
movsb
push
jle
aam
in
hlt
xchg
push
repz
es
add
test
sub
in
int3
insl
jecxz
loopne
lea
ja
scas
stc
das
inc
cmp
xor
scas
leave
int
dec
repz
cli
mov
pushf
jbe
mov
scas
scas
ss
cmp
out
ret
or
jg
lock
test
scas
inc
mov
ret
pop
jg
mov
popf
inc
sbbl
pop
in
notl
pop
push
push
xchg
push
mov
test
inc
out
cmp
daa
add
cmp
pop
clc
inc
ja
stc
clc
add
xchg
pushf
stc
mov
cmc
leave
add
mov
in
test
test
stc
adc
lods
pusha
scas
jae
mov
or
je
lock
ljmp
aam
mov
in
clc
cmpb
sub
xchg
xor
lock
mov
dec
pop
inc
imull
bound
into
test
call
cmp
cmp
and
ret
jb
in
test
cmp
test
cli
std
mov
adc
je
pop
ret
out
mov
fstpt
loop
mul
cli
mov
sub
pop
stc
insl
cmp
jl
cmc
aaa
std
xor
aam
jge
sub
and
sbb
pop
pop
cli
sub
fwait
mov
xor
push
subl
pop
out
data16
sub
out
xor
dec
mov
mov
rcrl
pop
cmpsl
push
out
inc
lock
aaa
jmp
cmp
and
ret
ljmp
lea
xchg
ja
lret
rcl
inc
fs
jp
xor
xchg
dec
cli
call
xchg
or
mov
repz
pop
cmc
data16
or
test
rol
roll
mov
fstpt
push
mov
xchg
push
or
aad
jmp
leave
adc
jg
je
lock
xchg
mov
mov
push
add
mov
scas
jmp
in
scas
test
jecxz
lods
stos
dec
cmp
jbe
shrl
insl
pop
sub
pop
mov
popl
orb
int
or
mov
mov
lret
mov
mov
mov
pop
int
add
pop
push
jno
cwtl
fwait
xchg
adc
adc
adc
mov
pmulhuw
in
or
loop
movsb
pop
xchg
pop
scas
clc
jmp
xchg
sub
mov
mov
sub
mov
test
xchg
mov
mov
push
les
repnz
mov
mov
mov
dec
lcall
lcall
xchg
mov
dec
adc
jbe
jne
je
jae
cld
jb
jno
xchg
sub
mov
gs
inc
inc
arpl
imul
mov
jne
push
imul
data16
outsl
pop
push
pop
pushl
out
mov
sub
hlt
sbb
lret
mov
mov
mov
lea
sub
mov
xchg
xchg
lcall
mov
daa
int
or
add
ja
jb
int
daa
dec
dec
ljmp
loop
xor
sar
test
add
repz
mov
lret
mov
aad
roll
fisttpl
clc
xchg
xchg
cmc
lret
lret
ret
pop
pop
adc
or
lock
out
and
loope
in
and
scas
cmpsl
lods
scas
lcall
test
cwtl
lods
out
sti
ucomiss
das
sbb
movsb
pop
mov
adc
dec
mov
mov
xchg
pop
test
sub
push
ja
cli
in
mov
jg
aas
sub
ljmp
mull
lock
cld
add
mov
jge
frndint
rorb
int3
test
je
pop
push
add
or
and
xor
xchg
lock
mov
outsl
jle
roll
mov
popf
dec
imul
mov
ficoml
sti
dec
sbb
sahf
mov
in
sbb
add
daa
idivb
cli
inc
psubsw
mov
decb
fbld
adc
aad
or
or
das
pop
mov
int
jecxz
dec
xchg
int3
jno
dec
jmp
sbb
pop
lea
xor
xchg
add
adc
ljmp
setns
xchg
aas
push
jge
pop
cli
sub
and
xor
add
ret
sub
mov
pop
xchg
mov
ss
cmp
push
ret
pusha
pushf
pop
leave
movsb
aaa
mov
aaa
inc
jbe
fdivs
adc
xchg
xchg
aas
xchg
dec
fcmovnu
clc
rcl
cmc
aas
inc
sahf
add
cmpsb
lock
call
lret
repnz
mov
ret
test
cmp
push
push
sub
mov
inc
clc
dec
add
cmp
xchg
dec
repnz
lea
cmpsl
cmp
enter
mov
stc
sbb
popw
push
jl
notrack
pop
popa
add
mov
pop
fidivl
cmpsl
push
pop
ja
fidivrl
jle
idivb
jle
xchg
bound
jmp
leave
xchg
xchg
rcll
cmp
adc
paddq
loopne
xchg
push
dec
adc
push
or
or
push
int3
mov
sub
clc
je
add
mov
mov
cmp
out
ficompl
leave
fsubrs
out
sub
add
add
mov
int3
mov
dec
adc
flds
pop
nop
push
js
sarb
cvttps2pi
dec
adc
sub
ret
mov
inc
adc
jle
enter
mov
stc
mov
out
cmpsl
pushf
sbb
cmp
imul
cmp
test
lea
add
je
jg
cli
ret
xlat
adc
shlb
cs
mov
daa
in
mov
mov
mov
xor
repz
cld
xchg
loop
ljmp
mov
cmp
shl
scas
icebp
mov
repz
mov
inc
loopne
rolb
xchg
icebp
sub
or
mov
add
out
notl
lahf
xor
jae
pop
cmpsl
out
das
call
sbbb
mov
out
in
das
in
cwtl
div
test
repz
sbb
mov
je
lret
ljmp
aad
int3
jb
subb
push
xchg
mov
das
mov
movsb
inc
pop
neg
inc
mov
mov
sbb
lcall
cmp
ret
fildll
fidivrs
aaa
clc
inc
rcrb
aaa
sub
out
push
cltd
fimull
xchg
in
mov
shll
arpl
bound
pop
pop
xchg
xchg
xchg
xchg
pop
rcrl
and
push
pop
pop
xchg
xchg
pop
fcomps
pop
xchg
push
fmuls
incb
push
lcall
xor
pop
adc
push
adc
dec
lds
inc
inc
lds
pop
inc
push
inc
roll
mov
push
pop
adc
ds
cmp
cmp
addr16
xchg
cmp
popf
aaa
bound
int
in
xor
sub
mov
lret
sub
sub
daa
mov
int
xor
sub
loopne
das
rcrb
ficoms
aam
mov
icebp
std
decb
in
bound
test
add
leave
mov
std
in
mov
mov
dec
xchg
cmpsb
sbb
adc
icebp
das
mov
loopne
adc
dec
adc
addr16
sub
push
xor
xchg
jle
lock
jmp
lret
push
cmpsl
cs
in
addb
arpl
nop
mov
mov
out
xlat
out
std
js
notb
xlat
fmull
mov
lcall
nop
cwtl
xchg
xchg
xchg
mov
add
add
insl
xchg
mov
movsl
push
test
inc
mov
movsl
div
add
sbb
call
xchg
pop
lcall
cld
in
sub
or
and
lods
je
sti
inc
in
lcall
lock
aaa
xchg
xor
mov
fwait
and
enter
aad
cmp
in
popa
loope
add
cmp
out
cmp
lcall
adc
stos
adc
xor
xor
adc
mov
mov
add
mov
jecxz
loop
lock
xchg
dec
sbb
sub
scas
push
iret
fcoml
jmp
mov
not
mov
mov
jo
xchg
enter
ficoms
dec
jge
outsl
dec
mov
lea
negb
lea
mov
sti
or
or
lcall
ds
lret
daa
dec
rorl
mov
popf
cmp
in
mov
and
pop
mov
pop
fldl
jecxz
popf
lods
ret
and
inc
incb
enter
and
in
fld
add
cli
loop
iret
aas
mov
sub
jb
cs
pop
fcomps
scas
inc
jp
test
leave
cmp
adc
dec
xchg
call
inc
lahf
testl
dec
xchg
xchg
jl
sti
repz
cli
roll
and
adc
pop
mov
mov
imull
jne
pop
scas
pushf
mov
dec
sbb
incb
jbe
ljmp
jg
jmp
adc
sub
pop
push
std
call
ljmp
cs
cmc
mov
lods
icebp
pop
jg
cmpsb
int
push
xchg
daa
je
cmp
cli
gs
adc
or
jle
sbb
push
mov
lahf
jnp
push
mov
mov
repnz
xchg
gs
sbb
mov
outsl
lods
nop
cltd
mov
gs
mov
repnz
jle
rcll
lret
daa
shlb
mov
enter
rcr
daa
fcomps
loopne
nop
aas
mov
adc
repz
sub
xchg
fnsave
nop
lods
clc
or
orl
or
push
movsb
jg
add
add
add
inc
mov
xchg
sbb
aam
mov
sbb
ljmp
repnz
xchg
mov
cmp
cli
dec
jecxz
ret
call
mov
lds
test
xor
jns
mov
repnz
cld
lds
call
add
add
lock
ja
mov
lds
out
pop
inc
stos
insl
loop
iret
les
dec
add
test
fnstenv
out
rol
push
hlt
mov
hlt
fnstcw
ret
mov
fs
jb
xchg
pop
es
inc
inc
lods
scas
push
jno
push
jb
mov
push
jecxz
cmp
push
sarb
std
out
int
mov
in
out
cmp
out
cmp
pop
leave
mov
xchg
stc
in
jge
ss
pop
push
out
push
pop
mov
sbb
inc
out
push
into
stc
adc
adc
xchg
int3
pop
out
loope
and
adc
dec
adc
shl
cli
gs
pop
xchg
pop
jmp
aas
lret
inc
mov
push
xorl
jge
jecxz
jo
push
popa
cmp
push
pop
les
cmc
add
jmp
xorb
adc
imull
sysret
push
shl
test
jg
je
lahf
jecxz
loope
stc
pop
inc
ss
dec
jb
sub
hlt
ljmp
adc
push
mov
or
mov
movsl
ret
loop
fsubl
pop
scas
insb
stos
xchg
jmp
incb
lods
lret
popf
std
add
stos
mov
mov
xchg
mov
out
mov
pushf
repnz
stos
xchg
fldcw
stc
testl
adc
dec
fsubl
push
pop
hlt
repz
test
jle
imul
inc
xchg
lcall
mov
or
jl
ds
clc
icebp
hlt
sub
ljmp
movsl
push
cmpsb
addl
xchg
jbe
lcall
popa
adc
lods
repz
mov
rcrl
out
fucomi
cmp
out
idivb
sub
movl
sbb
lahf
sbb
fs
cmc
dec
lahf
pushf
push
cmpsb
out
mov
push
xor
cmp
repz
sub
dec
repz
add
enter
data16
xlat
mov
aad
mov
xor
lahf
popf
jecxz
outsb
shl
out
add
add
and
and
xchg
and
sub
push
rcrl
xor
sbb
xchg
movsb
sbb
jns
ret
je
mov
clc
add
scas
stc
pop
repz
insb
insb
insb
insb
pushf
nop
xchg
lea
insb
lcall
jecxz
cmp
out
pop
adc
jno
dec
add
sub
dec
mov
mov
aaa
frstor
pushf
cmpsl
and
and
jl
sbb
add
fdiv
sub
push
stc
sbb
test
mov
sbb
imul
sbb
sbb
scas
jle
jno
pop
add
add
clc
xchg
push
daa
add
jl
or
push
lahf
in
iret
lods
xor
mov
test
enter
out
add
lcall
dec
mov
sub
imull
fisttps
mov
xchg
cld
repnz
int3
xor
xchg
pop
imul
aaa
dec
mov
repz
test
notl
push
jp
je
mov
scas
mov
cmp
test
push
mov
sub
outsl
outsl
je
mov
shll
jns
dec
out
cmpsl
pop
bswap
push
out
aam
daa
xchg
jle
popl
sahf
je
je
dec
cli
adc
add
push
int3
cs
cmp
add
fcmovnb
jb
test
mov
fsubr
jbe
inc
adc
decb
jb
cli
fbld
inc
sub
cmp
frstor
add
inc
ret
cmpsl
sahf
cmp
cs
xor
xchg
adc
add
mov
mov
ret
lock
mov
clc
stos
test
push
sub
jg
mov
repz
push
xor
cld
adc
jg
in
inc
das
mov
jns
clc
cmp
mov
inc
pop
jb
xor
icebp
insb
mov
into
dec
add
mov
cmp
push
dec
movl
out
inc
pop
jle
aaa
jns
mov
jmp
pop
dec
loope
stos
cltd
xchg
sbb
mov
xchg
dec
repz
or
test
lret
jmp
lret
cmpsb
data16
in
out
stos
test
enter
mov
out
dec
cmpsb
stc
je
xlat
fists
mov
mov
loopne
sarl
mov
loop
ljmp
loope
movsb
xor
std
mov
or
cmpsb
xchg
js
sti
push
fmuls
add
and
xchg
inc
pop
jbe
sti
jbe
je
out
je
je
mov
dec
dec
clc
test
cmp
iret
fidivl
in
push
mov
outsb
mov
repnz
cli
jecxz
fwait
jge
loope
and
push
cli
mov
sub
xchg
in
bound
cmc
mov
test
inc
nop
aam
lahf
not
shrb
ret
dec
inc
aam
out
mov
xlat
mov
clc
jnp
jecxz
imull
cli
mov
repnz
sub
jge
pop
xchg
cwtl
pop
ret
mov
sub
cmpsb
pop
fidivs
jecxz
jmp
xchg
xlat
pop
in
dec
loope
dec
test
sti
mov
jl
sbb
and
pop
mov
mov
jl
jecxz
jmp
add
pop
and
jg
xor
repnz
mov
or
jmp
mov
push
ds
andb
or
xchg
stc
mov
test
add
stc
push
cmp
lret
pop
lock
out
ds
mov
sti
fldl2t
out
cwtl
outsl
test
mov
mov
in
out
call
andl
popa
fcoms
add
mov
cld
mov
jbe
scas
cli
push
jnp
aaa
ficomps
dec
and
movsb
cmp
test
cmpsl
fstpt
inc
jae
cmp
enter
fadds
mov
aaa
jecxz
aas
mov
inc
cmp
or
gs
mov
xchg
mov
cmp
leave
jmp
mov
aas
dec
out
jno
push
inc
or
sbb
sub
adc
dec
push
in
jmp
push
in
andl
xchg
lahf
pop
pop
add
enter
cmp
subl
cmc
push
shrb
cmpsb
inc
clc
repz
or
cmp
pop
sub
pop
gs
xchg
les
fbld
jmp
aaa
testl
add
icebp
xchg
daa
idiv
sub
inc
lret
fisubrs
aas
push
push
stos
rcrb
call
popa
and
xchg
test
add
push
cmp
mov
test
jmp
cwtl
mov
mov
jmp
mov
test
pop
push
add
mov
aaa
sbb
lret
and
leave
lret
sti
adc
in
nop
incl
jbe
jmp
cmp
xchg
mov
or
pop
ds
mov
into
ja
lds
daa
movsb
and
in
lahf
sbb
inc
out
sbbl
and
aad
int3
in
repz
sbb
mov
addr16
test
dec
xlat
mov
mov
mov
sub
add
cmc
xchg
rcl
ret
jbe
pop
jmp
movsb
xlat
xchg
mov
push
lock
mov
repnz
push
icebp
sti
mov
xor
mov
inc
pop
cmp
lret
ret
call
scas
icebp
mov
sti
je
test
jno
daa
mov
fisttpl
sahf
daa
adc
jmp
imul
jl
mov
ds
sbb
stc
dec
pop
jp
push
add
and
jb
mov
pop
lock
rcr
push
xchg
in
jmp
repz
pop
cmpsb
out
inc
fildl
repz
jae
cmp
cld
add
lods
mov
pop
stos
cld
sbb
hlt
pop
inc
jnp
lcall
iret
mov
aas
inc
call
push
pop
and
mov
je
ret
iret
out
sahf
into
aas
pop
lcall
leave
stos
pushf
clc
mov
cmpsb
sub
out
out
sbb
jnp
dec
ret
jo
push
daa
xchg
arpl
iret
sub
inc
xchg
addr16
cmpsl
mov
jae
cld
insb
mov
jnp
jne
ja
xor
loop
mov
jnp
les
pop
imul
ret
mov
pushf
jb
mov
pop
outsl
outsl
jne
cmpsb
mov
das
inc
arpl
lock
push
insb
imul
sbbl
push
fisttpll
push
cmp
mov
rcl
sub
or
fistl
sbb
sbb
rolb
xor
xlat
call
push
mov
fwait
repz
fidivs
fistpll
push
lcall
seto
mov
jno
jne
ja
pop
push
ljmp
add
insb
sub
add
xchg
mov
aad
mov
adc
test
add
dec
scas
movsl
dec
xchg
out
fdivrp
aaa
cli
fiadds
repnz
int3
cld
ljmp
test
pushl
push
loop
fidivrl
jp
fnstcw
cs
inc
scas
mov
jle
jb
sahf
mov
add
std
test
in
test
in
hlt
stos
cmp
mov
shll
out
shll
cs
adc
cmp
pop
and
push
repz
les
dec
xlat
and
outsl
mov
inc
jbe
icebp
dec
icebp
ja
clc
aaa
xchg
repnz
cmp
incl
and
fildl
mov
std
xor
in
mov
adc
daa
shlb
pop
test
mov
ljmp
sbb
xchg
xchg
dec
lret
iret
pop
stc
lcall
mov
lcall
lods
or
or
iret
mov
mov
ss
pop
pop
cld
cmp
ja
mov
fidivrl
daa
xchg
repz
leave
es
push
daa
inc
push
sbb
and
and
and
aas
jb
fldt
ret
dec
movsb
aas
es
test
sub
sbb
sbb
shll
sbb
ss
inc
adc
pop
pop
outsb
leave
xor
sahf
mov
adc
scas
xchg
scas
out
mov
or
jp
clc
or
ds
mov
clc
ja
out
stc
iret
and
iret
pop
ret
jmp
sub
ret
addr16
inc
or
pop
xchg
fnstsw
and
arpl
pop
lods
lods
lcall
jg
or
les
outsl
jg
inc
test
cmp
lods
ret
adc
adc
inc
dec
inc
jb
cmp
mov
fdivl
and
repz
ja
lahf
mov
adc
xchg
pop
dec
ficoms
inc
addr16
sub
xchg
and
inc
stos
xor
in
stos
dec
mov
pop
int
stos
scas
pop
mov
adc
aad
shll
jno
cmp
cmpsl
jecxz
call
or
pop
push
jg
or
xor
inc
or
inc
imul
mov
jae
loop
js
pushf
out
xchg
mov
inc
sub
inc
dec
int
jo
lea
cmc
push
mov
fstl
add
in
pop
jle
outsl
rcrb
scas
lods
mov
xchg
stos
ret
filds
shlb
cmc
ljmp
imul
and
das
js
or
and
inc
jno
fcmovne
and
mov
arpl
xchg
pop
lock
push
jb
jge
mov
xchg
repz
imul
popf
into
stos
jnp
jg
pop
fdivrl
xchg
fucomip
in
pop
lock
leave
xchg
add
stos
fisubrl
or
sub
mov
mov
pop
negb
mov
jne
mov
pop
fs
insb
cld
aad
and
mov
adc
pop
xchg
add
ja
into
and
lock
out
ljmp
lods
ss
leave
dec
jmp
jg
test
orb
pop
lcall
test
jge
repnz
mov
lea
stos
repnz
jecxz
rolb
fisttps
sub
call
je
pop
hlt
jg
mov
insl
je
f2xm1
mov
jo
xorb
out
ficompl
dec
repnz
jmp
pushf
inc
lods
inc
int3
xor
mov
movsl
push
push
hlt
xchg
in
std
fadds
stc
xchg
jmp
nop
add
push
mov
and
mov
test
cmpb
andl
adc
imul
mull
add
jge
adc
dec
jne
xchg
jmp
out
loopne
sbb
stc
ja
lods
dec
scas
int
test
pop
jecxz
inc
jmp
mov
loopne
sahf
cli
scas
sti
sti
or
push
and
push
pop
mov
sti
std
out
pop
repnz
or
or
cld
xor
xchg
cli
pusha
sti
cli
or
clc
or
fcmovnb
aam
rol
les
jnp
out
fcompl
out
ss
in
out
cmpsl
xor
xor
pop
lret
xchg
xor
pop
or
lods
push
cmc
push
and
xchg
outsb
mov
repz
pop
jbe
pop
jle
xlat
hlt
push
mov
enter
aas
sahf
cwtl
scas
cmp
arpl
xor
dec
sbb
idiv
repnz
incl
popa
inc
out
pop
aam
stos
test
in
ljmp
sub
sti
sbb
adc
or
stc
scas
scas
lret
mov
scas
cmc
dec
hlt
popl
xchg
inc
mov
es
adc
xchg
out
mov
xlat
inc
pop
lock
push
push
stos
inc
adc
js
hlt
sarl
inc
dec
push
xchg
iret
jmp
push
mov
stos
addr16
dec
repz
xchg
addr16
outsl
and
into
aad
clc
push
in
out
shll
subb
push
je
int
jecxz
xchg
xchg
call
jae
clc
mov
mov
mov
aaa
aaa
aam
imul
popa
xor
movb
or
add
daa
outsl
outsb
sbb
fwait
sbb
dec
xor
outsl
popa
cld
out
dec
stos
mov
outsb
sbb
mov
pop
sar
repz
mov
jle
popa
cld
dec
cmpsb
jmp
jle
xor
imul
xor
mov
xor
pop
mov
xlat
jecxz
cmp
xor
xchg
inc
pop
dec
cmc
bound
push
cmc
dec
std
idivl
lea
into
lret
into
call
iret
or
aaa
outsl
idivl
neg
sub
push
mov
inc
xlat
xchg
iret
sbb
or
iret
iret
roll
scas
sahf
cli
xchg
stc
divl
aam
clc
or
inc
flds
mov
subb
clc
push
xchg
and
ljmp
loop
icebp
dec
dec
gs
cmp
jecxz
dec
mov
jmp
xorl
lahf
add
cld
decl
cld
call
iret
cli
psubb
lcall
mov
repz
fwait
outsl
inc
mov
outsl
test
jnp
pusha
cmp
jp
sub
repnz
nop
jle
jmp
adc
hlt
jle
mov
pop
mov
push
lea
ret
pop
sub
xchg
push
sbb
sub
fisubl
pop
pop
imul
push
pop
out
pop
jecxz
mov
cmpsb
cli
push
scas
pop
push
mov
pop
dec
idivl
add
fnstenv
xchg
cli
sub
mov
call
lods
loop
inc
in
in
lret
cmc
sbbl
loope
pop
pop
std
mov
jle
pop
lahf
jmp
stc
in
aas
pop
insl
scas
arpl
xchg
jg
out
cmp
es
scas
arpl
xor
cmp
pushf
repnz
out
adc
test
enter
fistl
cmpsb
jnp
push
push
popl
pop
mov
cmc
popf
push
mov
xor
xlat
insl
out
testb
out
sbb
and
add
sahf
inc
enter
mov
in
mov
xor
out
xchg
dec
movsb
sub
pop
xlat
xchg
rolb
imul
sbb
test
mov
in
std
sti
adc
aam
fdivrp
pop
cld
xlat
into
stos
outsl
cld
ss
scas
into
inc
xchg
jle
std
jmp
adc
dec
scas
xchg
inc
xchg
stos
in
scas
mov
or
idivl
xor
pushf
push
jge
out
std
inc
xchg
pop
dec
loopne
xchg
dec
fildll
sarb
jecxz
gs
xchg
into
inc
in
or
cmc
sarb
bound
jecxz
fistpl
repnz
push
sub
lcall
xchg
cmp
outsl
push
iret
dec
jg
into
pop
das
aaa
jg
jns
jge
clc
fmulp
adc
lock
jecxz
fidivrl
fadds
jo
in
into
int3
and
popa
cld
pop
dec
sti
shl
sub
rcrb
adc
mov
scas
mov
jmp
push
inc
out
sbb
std
push
sub
sub
mov
lcall
popl
mov
lcall
mov
pop
mov
jl
jle
jg
fsubr
insl
movsb
insl
pushf
call
cmpl
or
jp
scas
aam
jecxz
pop
les
push
jl
cmp
movsb
jge
sub
test
iret
jle
imull
cwtl
or
pushf
inc
loopne
push
or
pop
cmp
jp
int3
lret
cmp
into
lahf
stos
popf
jecxz
jle
or
and
jmp
jge
aaa
ss
aas
out
cmpsl
mov
mov
adc
cmp
das
iret
cli
xor
outsl
into
imul
outsl
push
iret
lock
out
sahf
jmp
fwait
push
mov
sbb
jae
jmp
jae
jae
lock
cli
xlat
rcr
and
jae
jecxz
jnp
push
data16
push
inc
adc
fists
xchg
incb
lcall
inc
push
fs
fmul
in
or
xor
out
iret
imul
xchg
aas
inc
jp
fwait
les
jnp
test
mov
mov
int
mov
jle
fdivr
std
movsl
mov
xor
cmc
add
std
mov
sahf
mov
movsb
xor
ss
sbb
scas
mov
xlat
adc
inc
and
iret
dec
rcr
pushf
out
jmp
add
lahf
cmp
pop
cltd
xchg
cmpsl
xor
cmp
fisttps
adc
mov
imul
jecxz
adc
mov
push
mov
out
mov
das
dec
sub
int
mov
std
hlt
mov
fildll
mov
stos
mov
scas
mov
adc
ffreep
pop
pushl
js
lcall
shrb
cld
out
lods
lcall
inc
push
mov
cmpsb
sti
divl
nop
mov
pop
popa
jl
mov
jnp
std
icebp
mov
imul
in
in
scas
outsb
cmp
cmp
jnp
inc
shlb
in
decl
sahf
in
fcomip
idivb
cmp
nop
popl
jge
mov
xchg
mov
mov
sub
data16
dec
inc
xchg
out
pop
in
xchg
out
mov
sub
bound
cmp
loopne
int3
xchg
adc
cld
jge
repnz
pop
mov
out
enter
push
fwait
mov
fsubrl
push
fisubs
push
arpl
xchg
mov
cltd
xchg
dec
leave
fwait
mov
mov
movsb
pop
rcrb
out
lods
push
dec
ds
mov
ja
dec
xchg
mov
dec
dec
lods
mov
ficompl
nop
jp
fcos
and
sbb
or
cwtl
mov
js
jl
sahf
mov
icebp
lods
dec
hlt
dec
ljmp
adc
dec
fwait
mov
lods
out
aam
push
dec
out
out
xor
popf
in
xchg
push
aad
cmovno
cmpsb
ficompl
mov
idiv
aam
in
mov
sti
jae,pt
cmp
icebp
movsb
cmp
xorl
test
inc
int
or
cmc
in
fucomip
jns
lret
and
out
call
neg
xchg
lock
idivb
dec
enter
cmp
cmc
ds
fists
insl
sti
push
dec
loopne
incb
xchg
test
mov
in
jb
in
xchg
bound
mov
dec
dec
in
pushf
mov
jg
mov
jp
and
ds
xchg
xlat
xchg
xchg
mov
adc
xchg
jle
imulb
mov
popf
shll
adc
test
int3
sarl
movsl
lock
dec
push
cwtl
jb
out
out
dec
inc
xchg
add
insb
push
lret
hlt
sbb
xchg
in
and
push
ss
jge
jp
jns
std
add
shl
push
pop
std
clc
sub
ja
test
dec
mov
sti
jmp
lock
pop
xlat
xchg
push
lock
pushf
nop
cmp
out
jle
stos
popf
jno
aam
in
jg
pushf
roll
lods
sahf
mov
je
jae
cmpsl
scas
mov
add
mov
mov
std
loop
test
jb
in
cwtl
lock
xor
ljmp
test
jecxz
std
stc
mov
inc
sub
lock
cld
cli
sar
mov
push
subb
das
mov
lahf
mov
cmpl
aad
std
test
add
inc
fmulp
daa
iret
sti
into
test
fcmovne
xlat
into
lret
into
into
mov
mov
into
out
into
xchg
inc
add
inc
ljmp
int
int
int
int
int
int
int3
jmp
add
int3
aas
int3
and
call
lret
loope
lret
mov
lods
lret
addr16
xor
stc
leave
in
add
add
leave
fmul
test
leave
jp
jne
leave
enter
enter
enter
enter
add
add
std
repnz
in
enter
test
xchg
hlt
mov
xchg
into
lds
add
pop
lds
inc
lds
lds
call
les
dec
pop
les
cli
ret
repz
loope
ret
enter
scas
ret
add
in
dec
ret
xor
bnd
mov
ret
das
ret
cmp
add
shrl
shll
and
or
sti
shl
rol
enter
stos
std
pop
mov
scas
movsb
add
and
aam
lds
aas
lcall
pop
les
les
fcmovnb
rol
lcall
ret
pop
ret
push
ret
or
ret
lahf
ret
add
inc
cwtl
insb
ret
pop
ret
jmp
rcl
mov
rcrl
jbe
dec
shlb
sbb
iret
add
testb
add
into
mov
int
int
int
int3
mov
int3
push
int3
and
push
int3
test
mov
jle
add
lret
lret
ljmp
lret
push
lret
movb
inc
mov
leave
imul
leave
dec
leave
inc
leave
xor
leave
sbb
enter
add
or
enter
enter
enter
enter
enter
enter
test
add
lods
movsb
cltd
ja
push
pop
movl
int
mov
cwtl
lds
lds
inc
lds
lds
vpinsrw
pop
mov
insb
les
pusha
and
add
mov
and
or
inc
jg
popa
ret
push
ret
xor
and
pop
cmp
cmpb
test
ret
add
ret
ss
adc
add
sub
jecxz
fdivrp
ret
sarl
cltd
rcll
sub
add
jmp
add
out
shl
xlat
rol
sbb
repnz
push
iret
jmp
into
mov
mov
sub
scas
mov
add
add
int
int
int
int
int3
cmc
int3
inc
int3
das
int3
sbb
lret
in
ror
lahf
add
add
lret
insl
lret
ss
and
adc
or
repnz
sbb
push
leave
add
test
enter
enter
mov
push
jecxz
and
inc
mov
inc
cmp
xor
hlt
movb
add
xchg
jl
add
pop
movb
sub
es
sbb
or
repz
lds
sbb
mov
lds
aad
add
les
les
shr
mov
insb
adc
add
nop
scas
mov
ret
data16
dec
rorb
sarb
sub
inc
ficoml
ljmp
iret
or
add
add
into
data16
pop
into
xor
int
int
int
int
int
int
jbe
jns
push
in
lret
in
cli
inc
jp
movsb
int3
sahf
int3
xchg
ret
and
mov
jle
cmp
inc
lret
add
jmp
lret
pop
lret
inc
leave
and
shrb
mov
enter
inc
test
add
pop
jg
jp
add
les
les
les
les
in
and
ret
mov
ret
pushf
ret
mov
test
imul
ret
pop
jmp
jns
fs
ret
mov
lods
je
shrl
mov
cs
cli
add
push
into
cmp
into
cmp
adc
nop
xchg
int3
test
cmpsl
mov
cwtl
lret
nop
lret
or
pop
pop
jne
outsb
xor
dec
lret
inc
lret
call
cli
add
lret
jne
push
add
jb
lret
add
cld
leave
cmc
leave
pop
loopne
leave
ror
mov
leave
inc
leave
xor
fdiv
add
je
enter
fidivl
or
dec
movl
aam
leave
mov
cltd
add
and
xchg
mov
subb
dec
movb
and
sbb
cld
lock
add
in
int3
lds
lds
lds
lds
add
and
sub
inc
push
rol
mov
les
jns
jb
push
les
les
les
les
add
cmp
ret
faddp
cltd
mov
stos
ret
jo
imul
es
sbb
cmpb
or
lods
and
ret
add
jmp
ret
sub
sbb
adc
or
sub
sarl
shrl
sub
shl
fadd
rol
mov
andb
nop
rorb
jns
insb
shlb
or
xor
and
sbb
or
add
pop
movsb
hlt
add
fmul
ror
iret
mov
iret
xchg
iret
jp
iret
jno
fs
pop
sldt
aaa
iret
das
iret
and
sbb
or
into
lock
jecxz
fsubl
enter
dec
into
add
int
lock
inc
add
lcall
ljmp
lret
add
jp
pop
loop
inc
mov
lret
add
add
xor
and
xchg
leave
jno
pop
leave
ds
ss
rcrb
lods
fmuls
je
faddl
add
pop
dec
cmp
mov
mov
pop
and
add
aaa
sub
push
movb
inc
jmp
mov
push
lds
add
add
scas
les
jle
add
inc
pop
les
les
les
ret
in
ret
out
lods
ret
cmpsl
ret
popf
ret
xchg
ret
xchg
jbe
aad
ljmp
push
rorl
lcall
push
in
aad
test
in
in
pop
xor
cld
xchg
inc
xchg
clc
outsl
inc
test
mov
and
or
inc
ljmp
push
xlat
inc
jmp
inc
cmpl
shl
mov
or
ljmp
jge
or
push
loope
cwtl
clc
mov
mov
movsb
fisttps
sarl
cmp
pop
decl
dec
cld
in
aaa
jg
imul
add
std
ljmp
jmp
stc
lock
aad
dec
ds
fdivrs
add
and
loope
imul
pop
add
pop
mov
cmp
pop
into
jmp
out
loopne
clc
push
mov
popf
adc
mov
pop
push
jl
cld
jg
xchg
gs
xchg
movsl
mov
rol
jbe
mov
cld
pop
xchg
gs
push
dec
mov
fstl
mov
xchg
cld
test
adc
stc
mov
mov
pop
lock
xchg
mov
xchg
dec
cli
gs
sti
call
fbstp
mov
fwait
pop
push
mov
mov
or
nop
lcall
aad
stc
scas
loopne
or
repz
mov
mov
cli
xchg
lcall
mov
sti
sar
jg
jge
fdivr
pop
stc
cmpsb
inc
mov
adcb
or
repz
inc
jmp
std
xchg
mov
mov
mov
aam
sbb
test
or
push
scas
push
lahf
outsl
add
sbb
fsubr
shll
mov
lahf
pushf
movsl
fstp
cmpsl
dec
ja
xchg
cli
ret
jg
gs
mov
xlat
mov
xchg
cmp
jmp
cmpsl
in
cmp
or
or
pop
cli
add
xor
mov
mov
addr16
ret
fucomp
aad
mov
jne
push
adc
jecxz
frstor
cld
out
ret
mov
mov
stc
push
and
adc
lcall
sub
pusha
xchg
std
xchg
mov
mov
int
orb
push
orl
or
imulb
mov
dec
cmp
jl
test
jge
push
out
mov
jg
sub
inc
daa
mov
lods
rorl
xchg
iret
pop
mov
xchg
inc
push
xor
leave
test
movsb
pop
add
fdiv
xchg
mov
out
fldcw
cmp
mov
stos
cmp
leave
cld
or
pop
pop
ljmp
negl
jg
sar
hlt
cli
pusha
add
add
stc
sub
sbb
cs
dec
push
jo
mov
pop
addr16
pop
ss
scas
shrl
or
popf
pop
xlat
sarl
push
mov
cmp
fs
mov
fistps
fbld
push
loopne
cld
sbb
jg
push
mov
mov
mov
lahf
sub
pop
and
adc
adc
cmp
cmp
je
xor
loopne
ret
pop
std
mov
cli
jg
ljmp
sub
les
pop
out
pushf
push
jl
sti
jecxz
mov
jmp
scas
jmp
push
cmp
mov
lds
scas
xchg
adc
dec
xchg
movsb
cwtl
movsl
stos
dec
js
outsl
ret
ja
adc
outsl
xor
int3
jb
xchg
fildll
xchg
loop
aad
pop
test
jb
scas
mov
mov
mov
mov
adc
sbb
scas
iret
ja
sub
clc
divl
xlat
mov
jbe
fidivs
push
add
int3
jbe
int
test
hlt
jne
repnz
into
into
sub
imulb
and
pop
or
jecxz
mull
sbb
lods
jmp
daa
out
mov
scas
push
mov
cmc
jmp
cwtl
fdivrs
push
hlt
xor
clc
and
xchg
cmc
insb
sbb
outsb
jae
mulb
aad
test
mov
mov
stos
clc
in
jnp
jb
rclb
inc
mov
pop
out
pop
pop
in
fsubrs
mov
icebp
mov
icebp
mov
mov
mov
insb
loop
stc
out
mov
aaa
in
pusha
insl
xor
lahf
push
cli
ljmp
cli
decl
lret
ret
fwait
push
sbb
mov
repnz
cld
stos
inc
adc
mov
stos
shrl
leave
stc
mov
push
cmp
xchg
stc
scas
iret
mov
cmp
mov
dec
scas
dec
fisttpll
dec
adc
sar
inc
inc
sub
repnz
mov
cmp
orl
cwtl
push
add
jb
dec
stc
dec
add
and
outsb
add
dec
repnz
dec
shrl
cmp
fcoms
and
cmp
add
jae
scas
dec
fcoml
push
push
dec
cwtl
pushf
jmp
push
stc
push
add
push
add
aad
dec
jbe
lret
push
hlt
xchg
sub
sub
xchg
shrl
fsubl
lcall
sbb
movsb
mov
xchg
in
mov
in
pop
push
inc
mov
imull
adc
and
and
lods
hlt
lock
jl
cmp
pop
cmp
scas
pop
sar
dec
filds
cmp
in
mov
ss
clc
mov
mov
xor
xor
frstor
clc
outsl
xchg
push
jg
enter
scas
inc
inc
daa
push
push
ja
inc
lock
dec
inc
inc
push
test
imul
adc
ds
mov
and
fistps
lcall
sbb
sbb
je
adc
jmp
jle
inc
rcll
dec
dec
ja
jne
out
jne
jae
or
push
lret
std
scas
dec
inc
cmpsl
out
in
cmp
mov
push
cmp
xchg
xchg
fadds
sbb
jb
test
xchg
mov
or
dec
aad
sub
mov
mov
sahf
pop
das
loopne
fidivrl
mov
filds
cmp
push
sbb
sbb
cld
push
cli
jle
jmp
aaa
mov
push
out
mov
repnz
pop
adc
add
gs
movsb
push
cmpb
xchg
stc
daa
daa
ljmp
push
mov
push
imul
jbe
out
jecxz
jle
enter
sti
shr
cmp
mov
jbe
loopnew
fsubr
dec
jno
mov
outsb
push
xchg
adc
mov
jmp
jo
mov
jno
mov
pop
test
test
push
call
aas
lahf
stos
hlt
cmpsl
add
bound
scas
lock
test
call
negl
adc
jne
cmc
div
dec
mov
jbe
addb
pop
or
je
cmpsb
mov
cli
divl
out
das
or
out
xchg
aaa
jg
aaa
shl
jae
ss
shr
std
dec
pop
adc
iret
call
fdivrp
jne
cs
loope
adc
aad
enter
cli
jbe
outsb
outsb
jg
xchg
cld
mov
pop
stc
mov
mov
inc
adc
push
iret
in
outsl
int3
push
out
sbb
or
in
sti
fdivs
out
pop
in
in
fbld
inc
mov
mov
lahf
filds
mov
cmpsl
in
pop
idivl
out
in
push
testl
or
divl
mov
outsb
aas
xlat
std
cmp
in
clc
mov
mov
sub
cli
nop
rcll
ja
hlt
rolb
xchg
in
test
and
shr
popf
lcall
dec
sub
aam
mov
icebp
je
stos
xchg
fadd
jbe
repnz
sarb
mov
aad
mov
mov
jl
mov
mov
cmp
push
stc
cs
sahf
mov
pop
clc
stos
pushl
mov
push
outsb
repz
stc
lock
out
sbb
out
js
scas
outsb
repz
in
fidivrl
jb
jb
jecxz
adc
int3
push
jl
div
lahf
cld
inc
daa
rorb
inc
cld
sarb
shll
in
movsb
test
les
fistpll
in
shld
gs
jl
mul
in
pop
aad
gs
xchg
dec
ret
inc
aaa
scas
push
xchg
gs
pop
movsb
adc
repz
push
and
jns
cld
xchg
hlt
into
clc
sub
pop
xchg
je
push
jbe
stc
cli
in
adc
repnz
icebp
ss
or
lret
or
stc
enter
ljmp
idivl
shlb
pop
xchg
daa
jmp
in
xchg
addr16
fdivl
inc
out
mov
popf
cmc
insl
mov
testl
test
fwait
in
aaa
popa
push
sub
cmc
in
out
movsb
cmp
mov
or
mov
mov
or
cltd
xchg
cwtl
mov
dec
repnz
xchg
cltd
jne
jmp
nop
mov
ja
mov
fsubrs
sarl
lds
imul
xchg
rorb
mov
push
mov
mov
mov
out
mov
mov
mov
add
jg
enter
daa
iret
call
es
stc
cmp
std
scas
in
mov
mov
cli
mov
lods
divb
mov
mov
hlt
incl
adc
decb
rclb
pop
hlt
movsb
sar
fidivl
inc
push
dec
cwtl
sbb
jb
mov
sbb
repnz
faddl
cld
lret
push
adc
jo
dec
sbb
mov
cmpsb
dec
inc
lcall
dec
push
push
lcall
mov
xchg
cwtl
mov
dec
cmp
mov
mov
inc
shl
lcall
in
jmp
hlt
mov
std
sub
into
es
iret
cli
cmp
fstpt
and
int3
xchg
mov
adc
xchg
bound
loopne
or
sub
cwtl
out
popl
cwtl
jo
daa
decl
xlat
push
int
add
sbb
mov
stos
sar
fwait
lock
clc
hlt
xchg
daa
lahf
js
fdivs
fcmovb
shrl
xchg
push
xor
mov
inc
mov
loopne
nop
nop
lock
leave
in
std
daa
fneni(8087
lret
popf
mov
loopne
jbe
test
loopne
inc
fidivrl
add
test
lcall
fistpl
dec
sti
out
pusha
stos
cld
enter
add
int
int
int
int
je
int
int
mov
add
int3
mov
int3
lret
mov
and
add
add
mov
xchg
lret
sub
add
fcmovne
cmpsb
leave
fwait
leave
xchg
leave
ja
xchg
out
add
jb
dec
leave
jo
push
enter
lods
ljmp
mov
add
jl
cmp
xor
sub
and
add
pushf
or
rol
ret
fwait
ret
xchg
ret
adc
ret
stos
cmp
dec
leave
cmp
ds
ret
test
inc
jmp
out
stos
xchg
sbbb
rcll
jnp
rorl
enter
jmp
push
int
mov
decb
test
cmp
iret
fsin
cmp
scas
xor
std
fidivl
nop
cltd
enter
lock
repz
int
stc
iret
pop
pop
pop
xor
repz
cld
pusha
push
mov
sbb
xlat
sahf
gs
out
iret
jmp
adc
adc
call
cmp
idiv
call
jg
call
test
lret
iret
xchg
jl
sti
repz
aam
pop
mov
repnz
mov
outsb
or
loope
inc
adc
decl
jnp
dec
cmp
lea
jne
xor
cmp
push
xchg
sbb
cs
rcrb
decl
mov
cmpsl
mov
xchg
or
stc
cltd
loop
pop
mov
out
dec
inc
jg
lock
fstpl
outsl
rcrl
pop
testl
in
iret
sub
fdivrs
lret
iret
pop
cmp
cld
and
imul
inc
jmp
idiv
incl
jmp
add
inc
add
call
int
jmp
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
pusha
mov
mov
xor
mov
inc
cmp
jb
popa
jmp
