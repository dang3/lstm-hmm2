ss
push
insl
lcall
mov
xchg
gs
aas
sub
dec
ret
cld
mull
movsl
cld
xchg
mov
lret
mov
jae
dec
aas
sub
sub
sbb
pop
cmpsb
mov
sub
mov
cld
insl
pop
dec
xor
pop
cmpsb
leave
mov
adc
mov
xchg
gs
mov
xchg
test
lods
sub
lret
test
clc
push
adc
pop
lock
cld
mov
gs
call
xor
sub
sbb
cld
stc
hlt
out
cld
in
mov
lret
fcmovnbe
mov
mov
mov
clc
lret
cmpsl
xor
mov
sub
mov
mov
aaa
clc
daa
cld
sbb
inc
jnp
movsl
lock
mov
xchg
lcall
xchg
sub
sub
icebp
stos
mov
out
add
loopne
mov
movsb
fimull
inc
mov
xchg
xchg
xchg
sahf
mov
lcall
in
lods
lcall
xchg
mov
in
mov
icebp
dec
mov
xchg
int3
lods
loopne
lods
cltd
pushf
mov
mov
mov
fbld
sahf
popf
out
mov
scas
mov
mov
mov
sbb
mov
stos
test
lods
and
movsb
add
mov
dec
cltd
mov
int3
filds
inc
adc
mov
mov
lcall
out
nop
cwtl
and
xchg
push
negl
lcall
xchg
mov
aam
lods
pop
nop
cli
stos
xchg
repz
bound
xor
mov
cli
movsl
add
inc
xor
mov
mov
sbbl
xchg
mov
fwait
popf
into
into
iret
dec
mov
int
xchg
add
add
iret
int
aad
xchg
xchg
in
das
xor
xlat
inc
or
or
stos
clc
enter
fwait
int3
mov
fwait
fs
les
cmpsl
test
cwtl
popf
mov
xchg
or
add
ljmp
ficompl
fsubl
ret
rcrl
mov
and
fwait
mov
cmp
or
and
loop
cli
out
cld
adc
mov
les
div
mov
and
add
stos
je
jl
repz
add
jb
or
cmp
mov
cld
or
cld
pop
mov
push
xchg
add
mov
and
daa
pop
scas
stc
pop
add
repz
testl
mov
movq
shrd
xchg
inc
cld
push
xchg
or
cld
or
popf
xchg
insb
xchg
loopne
inc
test
popf
jecxz
pop
cld
cli
sarl
xchg
xchg
jmp
mov
inc
adc
adc
femms
xchg
cmpl
mov
aaa
dec
mov
add
mov
xlat
sub
das
roll
cld
cwtl
lods
test
sub
mov
mov
mov
lret
int
fwait
xchg
cld
and
fsubl
and
and
mov
negb
call
mov
cld
sbb
sbb
sbb
mov
sbb
mov
or
in
insl
dec
in
mov
inc
xchg
js
add
inc
jecxz
cld
or
int3
sbb
mov
pop
xchg
sub
mov
dec
pop
push
add
inc
mov
jp
xchg
hlt
pop
mov
push
pop
adc
fcoml
jge
daa
mov
adc
adc
out
lods
mov
adc
mov
sbb
and
addr16
sub
mov
neg
mov
sahf
xchg
lcall
adc
std
add
add
int3
dec
and
aas
cmpsb
jb
add
or
jmp
add
adc
push
sbbb
push
add
jb
sbb
mov
shrl
ret
insb
cmpsl
jl
add
pop
inc
shr
loopne
mov
dec
add
out
idivl
jp
mov
in
aam
scas
xlat
and
mov
pop
js
xlat
out
imul
fdivrp
sti
incb
xchg
scas
leave
xchg
xor
out
jmp
add
cmp
sti
mov
scas
fwait
enter
jbe
clc
mov
repz
jbe
int3
and
and
or
pop
or
inc
add
je
add
or
mov
dec
movsb
out
add
jmp
add
loope
insl
or
jbe
add
das
jbe
pop
or
push
xlat
scas
lods
out
leave
call
pop
xor
hlt
fsubs
mov
add
sbb
loope
dec
xchg
addr16
mov
daa
in
lds
testl
out
sbb
leave
pop
rcl
pop
jbe
add
dec
into
mov
inc
jl
gs
jp
sub
adc
xchg
cmpsl
cmp
inc
je
psllq
jge
jle
jns
jmp
iret
mov
in
jl
pop
out
xchg
adc
inc
std
pop
inc
shl
jge
cmpb
xchg
lcall
pop
std
sub
jb
imul
add
jecxz
adc
fcomps
adc
loop
dec
inc
leave
je
loop
pop
testb
mov
sub
inc
je
jne
lock
add
add
jl
mov
cmp
fbstp
mov
and
loopne
lcall
lret
xchg
aad
cmp
inc
lds
dec
cmp
test
xorb
xor
xor
xor
xor
das
hlt
inc
pop
push
push
cs
mov
inc
mov
daa
mov
aam
push
sbb
enter
sbb
xchg
gs
mov
bound
mov
bswap
mov
lret
or
gs
aas
and
mov
xchg
hlt
push
nop
mov
sub
cmpsb
sub
sbb
jb
jne
out
jmp
out
mov
lret
ret
repnz
jmp
cmc
or
je
adc
je
cwtl
jge
xchg
push
arpl
test
mov
sarb
xlat
fs
sbb
jnp
xchg
stc
jecxz
fcoml
and
jp
in
adc
icebp
addr16
xor
xchg
aas
fistpll
loope,pt
add
dec
pop
mov
pop
cmpsb
scas
sbb
out
icebp
jnp
es
lret
inc
in
in
repz
psubsw
out
xor
test
les
xchg
ror
lods
xor
jb
sub
mov
daa
push
lods
fiadds
pop
arpl
add
xchg
loop
ds
sub
and
fucom
int3
sub
testb
iret
fsubrl
mov
orb
je
dec
jmp
sti
add
int3
sbb
xchg
out
jp
fwait
loop
test
adc
xchg
jmp
mov
into
cmp
ds
int3
das
icebp
sbb
std
je
int
das
mov
jmp
mov
out
push
mov
add
les
lcall
fcmovb
xor
repnz
movsb
lahf
in
add
in
js
rorb
pop
adc
cld
pop
insb
xlat
addr16
mov
and
das
or
int3
add
jnp
mov
sldt
out
je
aam
jne
icebp
mov
out
mov
jg
clc
imul
je
mov
dec
pop
cmpsb
repz
sub
fildll
movsl
gs
movl
sub
jecxz
imul
or
fs
iret
cmpsl
out
out
scas
bound
repz
test
test
inc
mov
mov
jbe
adc
out
lret
ret
icebp
mov
mov
out
push
xchg
ret
popa
jnp
aas
dec
dec
inc
imul
test
cmp
mov
xchg
cmpsl
xor
std
jg
cwtl
add
pop
sub
xchg
xchg
out
sti
incl
cmp
movsbl
ds
out
adc
ljmp
fsubp
mov
pop
xchg
dec
cli
mov
icebp
imul
popf
lods
jnp
jns
dec
jnp
adc
cli
in
lcall
add
pop
hlt
stc
call
push
stc
mov
in
mov
xchg
mov
dec
xchg
sar
cwtl
out
xchg
insb
hlt
enter
insl
xchg
xchg
sti
das
sti
push
out
insb
jbe
and
sahf
and
pop
sti
inc
loop
jnp
and
add
cltd
pop
pop
xchg
ror
add
mov
xchg
pop
or
pop
mov
fwait
pop
jb
in
inc
add
jge
dec
idivl
lret
in
hlt
lods
lods
mov
cmp
dec
adc
cmc
cmpsb
out
cmpsb
xchg
add
fisubs
xorb
test
fnstsw
and
addl
push
sahf
lea
out
das
daa
cmp
std
iret
and
fiaddl
push
adc
cmp
fcomip
loopne
push
xor
ret
cli
fisubrl
cmp
sbb
add
cmpsb
or
jg
cmp
and
cmc
sti
sahf
xor
in
mov
push
nop
shlb
cmp
out
sbb
xchg
gs
xchg
test
iret
mov
pop
xchg
jge
add
mov
xchg
lret
jl
sub
lea
rorl
xchg
stc
cmp
jnp
movsl
std
mov
pop
xchg
gs
mov
idivl
mov
leave
cs
gs
xchg
gs
mov
push
pop
xchg
mov
mov
jle
mov
iret
orl
sbb
clc
xchg
xchg
cmc
add
push
fsubrl
jg
nop
test
cli
sub
mov
ffreep
or
iret
loop
sbb
xchg
std
mov
roll
jo
xchg
fwait
xchg
ljmp
lret
iret
mov
test
mov
lock
subb
iret
fcomi
add
cmpsl
fs
mov
test
jnp
lds
adc
scas
mov
scas
fdiv
pop
sub
push
addb
fisubrs
lock
aaa
sbb
enter
pop
test
fdiv
out
mov
lret
icebp
in
ret
adc
xchg
out
pushf
stos
xchg
lods
pop
lahf
mov
out
mov
int3
or
pop
mov
cmp
test
xchg
shl
add
lcall
jne
pop
lds
lret
jmp
lcall
out
sbb
inc
mov
lret
int
mov
in
cli
pusha
pop
repz
xchg
jg
hlt
add
mov
fnstsw
out
jmp
lret
test
test
push
cmp
pop
aas
push
dec
or
jecxz
xchg
in
sub
xchg
lret
and
scas
mov
inc
mov
je
fldenv
hlt
out
icebp
fiaddl
sub
lock
dec
xchg
and
push
cmp
sub
scas
ficompl
jae
push
jp
jmp
scas
outsl
rcrb
into
test
dec
les
pop
pop
push
mov
ja
pop
lcall
adc
adc
jg
pop
cld
push
cmpsb
leave
mov
jno
imul
sub
scas
mov
cmc
ja
call
pop
enter
je
lods
mov
cmp
sti
scas
in
cmpsl
test
mov
pop
push
mov
pop
cmp
repz
movsb
mov
pop
lods
loop
cmc
data16
sbbl
stos
out
xchg
in
stos
pop
dec
pop
xor
mov
stc
in
std
dec
mov
add
cli
cwtl
movsl
movsl
je
jmp
je
sbb
push
add
add
add
arpl
rcll
insl
pop
add
inc
out
das
push
scas
dec
pop
jmp
cmpsb
jno
sbb
cmpsb
push
pop
add
adc
in
mov
outsl
lahf
cltd
repz
mov
aam
leave
repz
sbb
ja
mov
dec
mov
fsubs
cmp
es
aas
push
pop
add
ja
imul
cmpsl
and
in
repz
int
mov
push
adc
mov
inc
push
hlt
inc
dec
out
dec
rcrb
jmp
mov
lods
pxor
dec
adc
xchg
push
pop
addb
xlat
icebp
cmp
fstps
sarb
repnz
xor
addr16
sbb
loope
dec
fs
clc
jp
mov
stc
repz
clc
jns
dec
adc
push
int
push
mov
jecxz
push
xor
shrl
mov
or
inc
add
pop
sbb
push
push
xchg
les
idivb
mov
fs
inc
fsts
add
ja
lock
rcrl
sub
adc
push
mov
shlb
ljmp
idivl
mov
insb
iret
pushf
mov
insb
das
pushf
add
sbb
rol
ficoms
fstps
movsl
iret
call
xor
pop
repz
das
repnz
ret
mov
xchg
mov
daa
in
fdivrl
adc
int3
aas
fisttps
sbb
mov
mov
pop
addl
xchg
xchg
or
and
or
int
mov
idivl
adc
push
mov
inc
mov
aam
add
jge
mov
out
pop
inc
pop
insl
fsubrl
push
filds
add
ljmp
xchg
jnp
mov
sbb
leave
mov
fnstsw
iret
arpl
adc
in
xor
xchg
dec
fbld
lods
call
cltd
xor
icebp
dec
lahf
mov
xchg
xor
jg
sti
mov
and
ficoms
outsl
or
mov
add
jb
in
dec
lahf
and
push
in
pop
or
and
cmp
mov
les
mov
inc
sbb
imul
movsl
fcom
fldcw
arpl
ljmp
cmp
stc
pop
xchg
dec
in
mov
pop
mov
pop
mov
mov
push
imul
xchg
imul
adc
dec
stc
mov
xor
repnz
sahf
dec
dec
mov
push
stc
test
mov
adc
xchg
xchg
fwait
inc
enter
mov
push
adc
inc
enter
sub
mov
cwtl
cmp
cmp
dec
mov
cmp
lods
cmp
cwtl
mov
mov
daa
ss
xchg
xor
mov
xor
lret
mov
mov
jp
sub
cmpsl
mov
jb
mov
push
shl
scas
mov
imul
cmp
outsl
jno
dec
shrb
in
push
cmp
sub
cmp
sub
jb
jecxz
clc
xchg
sbb
and
xchg
fwait
decb
daa
cmpsl
out
ret
stc
pop
popf
out
daa
mov
test
in
xlat
flds
push
fsubrp
mov
xchg
lock
hlt
mov
sarb
pop
test
mov
shll
ja
xor
pusha
push
gs
fldl
mov
das
pop
out
xchg
cs
fidivrs
movsb
and
add
sub
pop
push
add
cmp
mov
xor
pop
mov
in
out
insb
inc
cmp
jge
add
sar
out
xchg
pop
cld
dec
jnp
xchg
aam
inc
or
enter
imull
mov
aas
repz
dec
jge
xchg
mov
or
je
movsl
clc
pusha
in
repnz
mov
pop
notb
adc
add
in
notl
sub
push
cli
and
nop
jg
push
mov
out
loopne
add
inc
mov
cmpsb
mov
pop
je
stos
lahf
cld
pop
dec
aas
sub
ret
stc
outsl
wbinvd
clc
outsl
adc
adc
jl
std
jle
in
shl
bnd
inc
jp
dec
sbb
cli
and
cmp
cs
cmp
movsl
cmpsb
std
sti
jbe
fucomi
and
and
mov
repnz
mov
or
dec
aas
jl
decb
je
outsl
mov
loope
jb
cli
pcmpeqw
out
shrb
and
add
jg
xor
sub
jb
cli
icebp
scas
repz
fiadds
imul
cld
cmovg
dec
inc
cmpsl
pusha
outsl
adc
movsl
adc
adc
inc
add
loopne
jmp
xor
xchg
jae
mov
mov
ret
loopne
filds
mov
cs
sub
hlt
das
jmp
mov
stos
adc
mov
mov
inc
push
int3
ret
pop
test
xchg
je
xchg
cmpsb
and
jns
pushl
ljmp
out
mov
jge
std
lock
or
mov
mov
subl
add
daa
loope
fnsave
jl
sti
add
ret
cli
inc
aad
mov
jae
icebp
lods
add
stos
xchg
jecxz
jl
sub
xchg
pop
pop
hlt
in
inc
in
mov
sti
in
mov
pop
lret
inc
inc
into
xchg
lahf
add
popf
je
out
lock
mov
jl
xor
jmp
mov
mov
add
mov
movsb
xor
pop
jmp
ja
mov
cmpsb
je
dec
push
aas
push
into
sbb
jbe
nop
adc
cmc
icebp
je
out
je
lods
lret
jbe
repz
not
jl
push
xchg
mov
lret
int3
das
pop
imul
in
addr16
lcall
dec
mov
push
in
mov
add
mov
xor
pop
mov
mov
push
inc
or
push
out
fisubrs
iret
stos
jl
mov
and
jb
out
add
fdiv
cmp
sub
cs
out
test
or
and
fcomps
mov
push
dec
jl
js
je
mov
jno
lock
xchg
out
pop
ljmp
jle
sbb
cmp
incb
es
xchg
xor
scas
repnz
icebp
inc
pop
or
or
test
out
ss
lret
mov
dec
movsl
mov
xchg
jp
in
adc
xchg
rcrl
adc
das
lcall
xor
aas
inc
jns
pop
das
dec
sbb
cli
fstl
mov
adc
and
dec
out
mov
inc
mov
nop
sahf
out
cmpsb
mul
cmpsb
cli
jecxz
jmp
xchg
xlat
imul
clc
add
mov
jge
hlt
mov
rcl
mov
add
pop
ffree
shl
lret
xchg
or
mov
int3
or
pop
negl
int3
sub
push
push
sti
inc
adc
push
jnp,pt
mov
adc
nop
imul
stc
mov
je
dec
cmc
cmp
popf
loopne
add
jbe
pause
xor
sti
mov
repz
push
jmp
push
jmp
jg
enter
inc
xchg
mov
stc
jb
xchg
add
andl
popa
fdivs
xor
movsb
jae
scas
cli
push
aaa
jmp
divl
sub
mov
mulb
mov
test
pushf
pop
punpckhwd
enter
pop
in
or
jmp
jae
les
andl
aaa
add
and
mov
and
cld
dec
cmp
mov
mov
rclb
out
or
sahf
repnz
movsb
sbb
push
push
ss
and
xorl
push
dec
jmp
addr16
cmc
adc
repnz
movsl
in
popa
adc
jmp
pop
clc
repz
mov
push
mov
push
icebp
in
les
cmc
test
pusha
mov
and
add
negl
pusha
idiv
add
out
js
cld
adc
inc
pop
stc
xchg
idivl
mov
inc
stos
jb
loope
inc
pop
xchg
arpl
ljmp
mov
mov
test
gs
cmp
fs
mov
icebp
adc
cmp
cs
jmp
inc
lods
scas
js
scas
jmp
cmp
lret
mov
mov
mov
aam
scas
cmpsl
call
mov
mov
out
or
jp
std
xor
in
ss
push
pop
icebp
push
out
xchg
inc
in
sub
stc
lahf
sbb
repnz
or
jecxz
in
and
mov
cmp
and
sbb
push
std
or
dec
popf
pop
out
fdivrl
cld
cmp
dec
xchg
pop
mov
out
xlat
mov
ljmp
ret
iret
mov
je
cmp
jp
cmp
xchg
mov
and
dec
mov
xchg
repnz
mov
adc
mov
loope
jns
aas
test
mov
mov
mov
je
jl
test
pop
mov
clc
push
loopne
decl
fsubp
xchg
cmp
hlt
pop
scas
mov
mov
sbb
ret
int3
inc
nop
mov
pop
dec
pop
jp
das
and
fcoms
adc
push
jb
inc
repz
dec
push
xchg
in
test
out
sahf
pop
pop
xrelease
repz
inc
lods
mov
jns
mov
xchg
cmp
lcall
pop
int
push
lods
repz
fisubs
mov
rcr
repz
je
add
xchg
pop
xchg
sahf
sub
scas
ljmp
addr16
cwtl
pushf
lods
sub
xor
arpl
arpl
daa
xchg
int3
ljmp
sub
iret
sbb
pop
sti
sti
jmp
pop
cli
aam
cmp
adc
xchg
add
out
mov
out
sbb
jmp
ja
jnp
loopne
push
add
push
add
push
stos
pop
jge
pop
je
and
inc
test
fnstcw
pop
lea
clc
sub
inc
fnstcw
xor
jg
les
cwtl
and
outsl
pop
popa
leave
cmpsb
out
cmpsb
adcl
fildll
or
jae
mov
lock
jg
ffree
jl
outsl
scas
mov
mov
dec
mov
push
pop
add
pop
hlt
sub
les
push
cwtl
cmp
mov
es
into
cmpsl
shr
jo
and
mov
lds
pusha
jb
dec
xchg
movsb
cwtl
movsl
add
sbbb
mov
jp
jge
and
loop
imull
mov
aas
cmp
out
mov
std
sahf
lock
divb
inc
dec
lock
mov
test
pop
push
imul
repz
lock
sub
hlt
pop
shlb
or
push
and
or
pop
adc
hlt
add
inc
add
ja
xor
mov
push
mov
xchg
imulb
adc
lock
lods
lods
repnz
loop
mov
jle
sub
mov
sti
jnp
sahf
dec
jl
jae
into
cli
and
fidivrl
stc
out
idivb
pop
jns
in
cmp
pop
nop
and
fcmovu
jle
fucomi
dec
pop
mov
divb
pop
test
pop
jecxz
and
ret
pop
xor
aad
mov
ret
movsb
push
std
xor
pop
scas
xorl
pop
jbe
out
lds
flds
pusha
loope
out
adc
cmp
sbbb
ja
int3
aas
jmp
inc
add
test
mov
leave
pop
sub
jmp
out
icebp
sub
int3
testl
pop
push
in
inc
cmc
scas
mov
std
mov
jns
mov
sbb
mov
and
and
jns
out
idivl
mov
jg
invd
fcom
inc
cld
mov
in
or
mov
and
mov
out
je
jge
fcmovbe
das
xor
and
out
xchg
push
lcall
dec
push
cltd
dec
cmp
mov
je
cmp
xor
adc
xchg
xchg
ret
mov
xor
setns
pop
and
or
les
or
or
daa
push
out
inc
pop
xchg
cmp
das
pop
rcrl
dec
dec
divb
pop
mov
nop
pop
clc
in
pushf
mov
cld
ret
jge
lahf
repnz
xchg
fnstcw
pop
cs
push
mov
jno
jne
fldl
and
fsubs
dec
pushf
dec
or
shll
ds
sub
dec
fs
inc
repnz
out
lods
pop
in
mov
iret
test
out
mov
xchg
cli
or
aam
adc
cs
loop
andb
mov
jbe
sub
gs
fistl
cmp
scas
das
lret
add
xchg
enter
sarb
shr
adc
cmp
subb
pop
jmp
lcall
xchg
mov
call
and
hlt
sbb
aaa
fldt
cmp
mov
xlat
pop
adc
hlt
loop
idivl
mov
xchg
add
cmpsl
mov
cmp
stos
dec
test
incl
sti
in
pop
jmp
cmp
test
scas
scas
inc
adc
jle
pop
scas
jne
cwtl
aas
lds
dec
icebp
push
mov
sbb
mov
repnz
repz
scas
inc
ffreep
mov
das
fidivs
das
mul
hlt
sar
pop
iret
dec
jge
sub
scas
scas
cmp
mov
hlt
cmp
int3
adc
stc
add
add
add
stc
xchg
lret
mov
data16
cld
stc
lcall
cli
in
jmp
frstor
mov
jmp
scas
ds
jnp
mov
ficompl
push
xchg
hlt
imul
dec
sbb
cmp
mov
fcomps
or
or
aas
push
sahf
clc
or
or
adc
ja
jp
mov
lds
jg
loop
jb
clc
mov
mov
icebp
test
inc
inc
cmpsl
jg
icebp
pushf
lods
rdtsc
das
jb
aas
out
dec
inc
rcrl
and
adc
lds
idivb
shlb
imul
enter
das
iret
xor
sub
lahf
fldenv
jbe
and
push
mov
mov
scas
cmc
cmp
pop
std
or
les
insb
inc
testb
pushf
out
mov
test
out
ds
into
ret
dec
scas
or
jge
and
scas
in
jae
addb
pop
pop
mov
or
outsl
mov
or
xchg
flds
imul
sti
push
mov
pop
xor
daa
icebp
sbb
mov
or
or
mov
div
push
mov
jbe
jge
nop
repnz
cli
out
inc
out
cmpsb
je
cmpsb
aas
sbb
es
mov
xlat
sub
les
mov
int3
mov
xchg
out
repz
cmp
ljmp
sub
aad
lahf
mov
mov
add
dec
dec
jmp
scas
mov
or
cmp
add
aaa
cli
xchg
shll
cmpl
xor
daa
cmpsl
cmp
out
scas
inc
nop
loop
mov
jmp
push
hlt
rclb
cld
call
je
repz
je
ret
test
scas
mov
xlat
xchg
setl
lret
ljmp
loopne
lcall
ljmp
dec
lods
sbb
icebp
lahf
adc
in
cltd
mov
hlt
ljmp
loopne
out
test
mov
mov
push
shll
stos
int
jae
aad
mov
stos
scas
stos
ficompl
jg
xor
shl
xchg
je
incb
and
in
outsb
int3
int
xchg
sahf
mov
iret
pop
cmc
scas
popa
mov
mov
mov
repnz
daa
sti
sbb
mov
fwait
clc
stos
test
mov
cmpsl
mov
andb
cmc
mov
mov
xchg
fwait
lcall
dec
movsb
xchg
mov
pushf
test
xchg
mov
es
xor
nop
mov
movsb
inc
sub
mov
lods
jmp
cwtl
lock
xchg
lcall
nop
andb
loope
in
test
xchg
mov
xchg
mov
sahf
xchg
mov
cmc
xchg
je
or
cmc
daa
out
dec
sub
repz
mov
popf
lea
mov
jle
cmp
xchg
xchg
xchg
pop
mov
fmul
mov
repnz
ds
das
popl
notl
mov
xchg
push
lea
sahf
ds
aas
popf
cmp
je
cmp
mov
mov
fwait
adc
js
xlat
sarb
in
jge
mov
xor
or
das
mov
mov
std
cmpsb
cmpb
je
jmp
xchg
xor
dec
push
xchg
cmpsb
jp
cmpsb
scas
out
popa
rdmsr
jge
jle
lods
mov
jno
rcrl
mov
test
shl
jb
out
stos
lret
mov
fwait
fwait
lods
in
es
or
xchg
mov
out
fimuls
sti
or
mov
xchg
push
hlt
arpl
outsl
lock
in
leave
adc
mov
shll
lcall
mov
repnz
hlt
mov
xchg
hlt
mov
stos
xchg
xchg
repnz
rorl
rol
shrl
mov
mov
pushf
leave
int3
test
testb
xor
repz
clc
pushf
sahf
lock
pop
les
out
cmp
mov
int3
out
xor
addr16
stc
mov
daa
mov
fisttpl
pop
add
iret
out
fsubp
fstpl
testb
add
pop
hlt
adc
push
sbbb
cmp
in
mov
mov
jecxz
pushf
xchg
mov
fisttpl
inc
lahf
enter
jmp
mov
sbb
pop
xchg
sahf
sahf
mov
lret
fsub
ds
sub
cltd
push
inc
cmpsb
ds
jle
cltd
nop
jmp
adc
insl
lods
decl
push
in
sti
repz
call
shll
add
clc
insl
clc
mov
cli
xchg
out
repnz
jo
mov
in
cli
shl
fucomip
lock
add
jecxz
hlt
cmc
in
push
out
jmp
into
stc
ljmp
in
lahf
repz
mov
in
in
mov
add
in
clc
in
hlt
icebp
out
idiv
fldlg2
out
repz
lock
out
mov
in
out
cmc
aad
add
nop
inc
in
pop
repz
loop
cmc
sar
repz
jecxz
out
loop
xor
mov
out
ror
jmp
in
shl
repz
lods
iret
mov
movsb
shrl
add
add
cli
lock
ret
div
stc
jecxz
stc
fisttpll
jbe
test
fnstcw
mov
ljmp
add
xchg
lock
in
clc
mull
stc
out
mov
icebp
fucomp
and
add
shl
cli
fisubl
repnz
out
loopne
icebp
jmp
in
loope
inc
add
repz
jnp
shl
shl
out
out
shr
ljmp
dec
or
repnz
lock
bnd
fistpl
clc
xlat
leave
lret
cmp
or
jmp
in
fcmovnu
fsubrs
stc
jmp
vpmaddwd
stc
add
ja
in
mov
sti
lcall
mov
mov
icebp
fdivp
stc
repz
insb
ja
cli
clc
test
int3
clc
ljmp
in
ds
aad
out
clc
stc
push
daa
inc
fildll
cmp
call
aas
test
jmp
push
sbb
sbb
ja
jp
stc
mov
xchg
loope
mov
mov
lock
test
rcrl
push
xchg
lahf
xor
int
daa
lods
pop
rcll
cmp
fdivr
xor
repnz
lods
or
lahf
movsb
pushl
adc
mov
ljmp
add
jne
pusha
mov
lea
push
or
jmp
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
popa
xor
ret
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
pusha
mov
mov
xor
mov
inc
cmp
jb
popa
jmp
