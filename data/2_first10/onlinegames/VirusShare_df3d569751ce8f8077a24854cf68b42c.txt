insb
aas
mov
out
and
add
and
and
dec
shll
xchg
test
in
add
sbb
cmp
imul
xor
cmpsb
mov
clc
and
data16
and
sbbl
xorl
jbe
fwait
mov
cmpsl
addb
aas
add
ret
pushl
gs
xor
cs
insb
add
or
ficoml
sbb
push
gs
bound
push
jb
jbe
insb
gs
fcomi
jg
pop
jae
jae
gs
and
inc
inc
add
filds
jo
push
gs
outsl
imul
add
adc
adc
bound
xor
cs
jnp
out
jg
xor
pop
imul
insl
fs
aas
fisttpll
add
je
pop
outsl
arpl
bound
sbb
jle
cmp
push
sbb
xor
daa
push
mov
sub
dec
ja
andl
faddl
out
std
rclb
xor
jl
inc
add
add
or
lds
mov
or
popa
enter
insl
xchg
fcmovne
push
add
outsl
int3
int
pop
into
push
iret
rorb
shll
xor
shll
jbe
jb
aam
aad
xlat
pop
fdivs
mov
fidivl
fisttpl
push
pop
loope
lcall
inc
in
and
add
fwait
scas
out
call
imul
in
pop
in
aaa
lock
repnz
div
clc
gs
stc
dec
pop
cli
sti
js
je
mov
out
ficoms
xlat
sub
mov
pop
adc
aaa
sbb
dec
mov
xor
mov
ljmp
je
push
push
call
mov
jmp
mov
cmp
jne
xor
jmp
popa
insb
sti
arpl
movl
fsin
dec
test
je
sbb
fstpt
imul
jne
push
or
mov
sbb
iret
das
inc
mov
adc
cmp
jne
outsl
clc
fwait
out
mov
or
pop
pop
leave
ret
mov
in
sbb
fnstcw
imul
push
push
imul
pop
cmp
hlt
push
push
pop
loope
xor
clc
add
and
push
push
sbb
js
push
lock
cltd
add
add
push
pop
insb
pop
push
jae
pop
movzwl
push
push
stos
mov
fdivr
lock
cmp
je
push
adc
or
test
sbb
clc
cmp
adc
push
push
sub
lret
insl
add
inc
cmp
je
pop
mov
outsl
loope
sbb
movsl
sbb
ss
mov
jecxz
pop
in
sbb
pop
ret
xchg
sub
xor
inc
mov
ss
xchg
xor
mov
lods
jo
push
push
scas
inc
adc
mov
jge
or
push
adcl
mov
sbb
sbb
mov
cmp
adcl
push
dec
dec
ja
inc
addb
push
sbb
jmp
push
jno
dec
inc
imul
xor
xor
jge
add
mov
mov
and
jo
sub
lods
fnstsw
dec
test
je
adc
call
rorl
icebp
pop
loop
out
negb
dec
in
adc
mov
pop
and
push
add
cs
cmp
cwtl
fstps
adc
aas
jnp
lret
enter
ja
jmp
sbb
icebp
push
cmp
fcom
lds
jno
popa
mov
std
adc
push
fdivr
call
adc
mov
psrld
mov
inc
inc
dec
dec
test
jne
push
in
cmp
pop
jmp
lds
shlb
and
push
jecxz
shl
mov
mov
add
inc
cmpb
inc
fadds
test
add
mov
mov
cld
aad
pop
clc
inc
and
aaa
outsb
push
rcl
jl
sub
pop
adc
daa
push
mov
stc
push
dec
sub
outsl
push
add
adc
xabort
in
les
out
inc
js
lock
mov
ret
in
inc
mov
cmp
subb
pop
or
mov
cwtl
pop
adc
call
rcrl
pop
pop
nop
scas
mov
jp
std
add
xor
arpl
stc
je
or
out
mov
repz
lea
andb
push
pop
lea
jcxz
stos
stos
mov
loopne
adc
idivb
movl
adc
mov
or
fdivrp
maxps
pop
push
sahf
mov
pop
call
mov
cmp
push
xor
lret
cwtl
xor
adc
ficoml
xor
mov
std
adc
int
test
adc
or
pop
mov
pop
pop
pop
pop
mul
fldt
pop
push
cld
pop
jmp
in
in
cmp
or
inc
fisttpll
xor
push
push
std
imul
jb
insb
push
add
je
popa
mov
dec
mov
xor
pop
add
mov
dec
inc
add
pop
pop
mov
daa
or
jne
insb
inc
or
xchg
or
clc
test
ja
mov
mov
int
sahf
in
push
test
add
add
scas
ret
adc
xchg
add
inc
sbb
je
push
hlt
lret
ja
add
in
pop
testl
dec
xchg
leave
pusha
ficomps
mov
icebp
stos
push
xor
add
std
enter
imul
push
mov
iret
cmp
sahf
cld
les
fnstenvs
lods
jb
rclb
outsb
in
pop
fldenv
pop
int
ja
xor
into
iret
push
rorb
mov
insb
rcl
or
mov
xor
cs
xor
dec
mov
js
mov
filds
mov
adc
clc
js
mov
push
add
scas
mov
loope
or
cltd
int
iret
mov
pushl
js
mov
jae
xchg
mov
and
mov
fucompp
mov
fs
outsl
lret
in
mov
stc
jae
pop
sti
insl
jbe
add
xor
cmp
or
clc
cmc
sub
shrb
pop
mov
fsts
insb
icebp
xlat
xor
in
data16
push
movsl
fcomps
in
adc
data16
call
mov
das
and
das
sbb
cld
into
push
dec
sar
or
adc
dec
or
pop
cmp
xor
sub
push
call
mov
sar
fistpll
sbb
int3
push
push
jbe
fldt
stos
jl
call
mov
daa
cmp
shrl
push
loope
out
js
shll
outsl
je
ss
out
and
and
lock
xchg
cmp
and
inc
or
test
xlat
vdivsd
jo
fs
not
insb
cwtl
sub
or
pop
outsl
or
mov
and
aaa
scas
je
adc
xchg
or
fs
mov
jnp
jmp
jne
int3
add
xchg
add
cwtl
pushf
pop
push
cmp
lds
sub
dec
mov
in
sub
mov
or
loope
push
inc
and
add
ret
dec
movsb
inc
in
xchg
sbb
adc
and
and
scas
xchg
loop
adc
adc
and
rorw
dec
inc
dec
dec
and
ja
stc
add
dec
inc
dec
jb
push
dec
addb
fisubrl
inc
outsl
add
push
adc
sbb
addl
adc
dec
add
dec
pop
nop
add
push
pop
ss
mov
inc
call
push
add
dec
ljmp
adc
js
outsl
addr16
insl
and
outsb
outsb
lock
in
ljmp
and
and
outsb
and
inc
dec
push
and
fs
clts
ss
ja
xchg
rclb
repnz
adc
outsl
mov
roll
test
push
or
or
lds
daa
repz
cmp
stc
into
mov
inc
push
imul
stc
push
inc
add
in
clc
cld
dec
adc
jae
into
mov
push
or
add
pop
jno
es
pop
adc
add
xchg
sub
or
xor
push
jbe
pop
push
and
or
enter
jo
xor
dec
add
fsubrp
push
bound
pop
xor
nop
push
ja
jg
add
fs
je
insb
test
clc
leave
sbb
adc
cs
push
push
movsl
insb
mov
pop
sar
daa
dec
ja
mov
outsl
arpl
nop
or
or
lcall
mov
xchg
addb
pusha
sub
cmpsb
imul
scas
cmp
mov
aam
mov
imul
mov
add
cwtl
movsb
imul
xor
mov
lods
and
dec
pop
dec
shll
mov
ss
shll
fsubr
testb
imul
imul
imul
dec
xlat
sub
inc
pop
dec
xor
mov
lcall
loopne
shll
jl
ss
shll
dec
xor
stos
scas
jae
out
add
mov
pop
shll
call
mov
sbb
cs
and
xor
xlat
sbb
adc
sub
xor
sarl
dec
pop
bound
xor
insb
jbe
mov
test
mov
mov
xlat
je
roll
add
jecxz
add
inc
cmovge
je
mov
push
out
lods
out
movsb
subl
push
lcall
add
jb
adc
imul
outsb
je
je
cmp
xor
sub
push
gs
outsl
fsubl
daa
dec
je
jo
jne
jns
outsw
inc
or
gs
dec
jo
outsb
push
jb
adc
inc
hlt
outsb
jg
push
dec
dec
add
jl
es
negb
add
add
or
add
insb
outsl
xchg
add
aaa
sbb
xorb
fistpll
push
push
pop
pop
add
mov
cmpl
sbb
sbb
lret
add
add
push
and
add
xchg
int
or
and
fsts
or
adc
ret
fdivr
add
pop
add
mov
dec
es
mov
jno
xchg
inc
xchg
mov
xchg
lea
pop
or
fistpl
add
and
ret
xchg
jo
and
aaa
int
flds
das
xor
pusha
and
adc
test
add
xor
outsl
add
mov
push
packsswb
je
jne
jb
gs
sbb
pop
push
incl
pop
xlat
sub
add
push
inc
jb
push
and
repz
ja
or
push
mov
jae
pop
and
addr16
fsubrs
or
sbb
xor
and
ret
inc
jp
pop
cs
add
inc
cmpsl
xchg
imul
insl
pop
push
dec
inc
push
push
inc
push
inc
dec
adc
outsl
data16
cs
jg
imul
dec
push
inc
jne
jb
je
fistpll
fildll
dec
fwait
ja
jb
inc
popa
jb
push
aas
in
xchg
push
jge
inc
imul
inc
lret
in
push
jcxz
xor
roll
and
lods
push
mov
sbb
inc
push
je
insb
mov
mov
mov
outsl
pusha
and
outsl
push
cmp
je
mov
pop
push
cmpsl
loopne
jae
popa
dec
push
push
jg
dec
xor
sbb
addr16
mov
jnp
insl
push
js
pop
call
je
xor
mov
test
xchg
xchg
into
insl
outsl
je
lahf
jne
pop
bound
pop
gs
jae
out
pop
sar
popa
outsl
cs
outsl
mov
outsl
outsb
imulb
inc
jle
arpl
imul
test
imul
dec
icebp
testl
mov
xbegin
gs
lds
jo
cld
test
insb
scas
push
popa
insb
imul
push
in
mov
call
into
jge
pop
in
addr16
out
stos
outsb
push
out
pop
xlat
jle
add
pop
lods
sub
out
into
lret
cld
movsl
mov
inc
scas
push
out
and
xor
aaa
xor
out
xchg
movb
add
xchg
inc
and
inc
jge
pop
sbbl
pusha
shll
lea
pop
cs
xor
stc
ljmp
mov
pop
sbb
pushf
fstpl
push
add
and
mov
mov
cmp
xor
mov
adc
xor
roll
out
out
cmp
cmp
pop
jae
mov
andl
jmp
xor
ret
and
fisubrl
push
push
push
pop
add
mov
or
fnstsw
add
adc
adc
mov
pop
push
xchg
stos
addr16
push
movb
mov
cs
xchg
push
call
jg
clc
lcall
add
shr
mov
push
shl
push
push
mov
stos
mov
sub
and
mov
orl
mov
xchg
mov
lea
adc
clc
jmp
popf
sbb
mov
ret
add
dec
pop
mov
cltd
stos
data16
sub
add
pop
pop
shr
ficomps
xchg
mov
add
xor
sub
jmp
loopne
inc
cld
push
push
movl
popf
stos
jp
pop
sbb
data16
mov
test
sbb
jne
xor
push
push
xor
insb
movsl
call
cmp
test
jnp
adc
xor
mov
pcmpeqb
mov
sbb
sbb
sbb
addr16
and
and
pop
jle
or
test
orl
divb
jmp
adc
and
mov
lret
leave
jmp
add
add
or
fadds
mov
xchg
fwait
test
pop
in
cmp
or
cmc
das
ljmp
std
test
jg
mov
pop
sub
jl
push
push
fldl
mov
gs
xor
xorb
push
xor
xchg
lock
push
xor
aas
jge
pop
add
andl
jmp
adc
push
jns
lahf
je
and
decl
lcall
in
sub
incl
insl
hlt
mov
repnz
or
dec
repz
xor
or
cmp
pop
push
push
cmpsl
mov
dec
fs
sub
mov
gs
push
push
xor
mov
inc
add
xor
and
sbb
in
xchg
adcl
add
movb
lret
ret
mov
sub
sub
push
add
push
jmp
mov
inc
add
sti
push
push
inc
call
cmp
mov
or
out
in
adc
lods
in
ret
mov
mov
jo
push
pop
arpl
xchg
or
jne
xor
push
jns
or
adc
add
mov
insb
sti
in
sbb
sbb
push
movzbl
rcll
mov
cmp
lea
add
mov
andb
mov
or
push
in
or
mov
pop
sbb
jl
push
aaa
sbb
fwait
mov
push
and
out
adc
add
push
xor
adc
xor
adc
adc
adc
mov
add
int3
adc
adc
dec
xchg
inc
inc
and
add
jo
arpl
sub
and
adc
push
push
notl
push
aaa
xchg
or
xor
push
in
push
mov
jecxz
xchg
push
and
mov
push
and
cmp
jne
dec
cmp
lret
jo
mov
push
enter
jnp
xor
adc
add
add
into
jno
push
adc
and
add
fsts
pusha
jne
or
jno
inc
test
test
outsb
pop
mov
fistpll
iret
je
and
divl
adc
pop
cmp
fidivs
cld
add
or
jae
repnz
insb
in
jmp
mov
mov
cmp
out
jmp
cmp
jb
sub
or
add
je
decl
jnp
add
sahf
lcall
ret
imul
in
add
rclb
rcrb
ret
push
or
xor
shlb
mov
adc
and
push
push
sbb
mov
arpl
push
push
and
mov
js
pop
mov
dec
ret
fnstcw
dec
sbb
orb
sbb
mov
push
js
test
insb
or
mov
mov
lock
int
mov
add
mov
movsb
mov
jne
loopne
mov
mov
into
jle
push
movsb
repz
sbb
or
imul
mov
sbb
insb
in
mov
push
xor
pop
mov
call
push
add
cmp
sarl
push
in
mov
pusha
ss
add
notb
sbb
flds
pop
shrb
jl
pop
insl
jecxz
add
lds
nop
sbb
das
insb
jmp
scas
addl
adc
sbb
mov
clc
call
push
add
jge
xchg
sbb
shl
insl
jecxz
pop
fsubl
add
jle
fisubl
lock
xor
and
push
pop
call
fidivl
fisubs
lock
mov
inc
inc
inc
jmp
mov
jb
fdivp
pop
sbb
enter
cld
add
mov
daa
fisubl
xchg
roll
pop
addr16
mov
sbb
andw
mov
push
push
cld
subl
cld
pop
jb
jne
pop
es
fidivs
push
dec
pop
dec
rcll
jns
scas
rcll
cmp
xor
jne
or
ror
sub
fucomip
mov
lea
cmp
jne
and
sub
cmp
mulb
mov
pop
and
push
add
data16
call
fucomip
iret
or
jmp
add
push
jo
adc
loope
call
pop
or
movl
push
inc
call
out
mov
xchg
outsb
or
pop
stc
xchg
or
add
je
add
leave
scas
in
pop
xor
adc
nop
dec
mov
add
cmp
cmp
or
add
sbb
enter
add
pop
inc
jle
adc
nop
xor
adc
or
aaa
sub
repnz
pop
repnz
xor
adc
aaa
pop
cmpsb
rcr
cwtl
cmp
pop
int3
insb
aas
add
pop
mov
pop
mov
inc
mov
cmpsl
push
mov
fwait
in
mov
mov
pusha
lock
dec
insl
andl
mov
pop
inc
mov
and
inc
mov
aaa
fisubs
or
test
in
cmp
mov
sarb
cmp
je
adc
push
sbb
imul
add
stc
and
add
sub
cli
pcmpeqw
adc
fcompl
loope
dec
leave
or
adc
out
fistps
or
and
inc
test
jne
or
test
je
mov
shr
xor
test
std
pop
xlat
mov
es
or
test
je
mov
mov
loopne
pop
rcr
push
mov
shl
or
mov
and
xchg
fucomi
add
je
test
jne
test
aaa
cmc
iret
out
jp
loope
sbb
aad
push
cmp
idiv
add
fistl
or
adc
push
adcb
or
sbb
orl
and
outsb
sti
push
xchg
sbb
add
test
pop
insb
fisttps
xor
adc
push
or
das
fcomps
cmpsl
cltd
test
into
jne
inc
je
add
sub
mov
and
lret
add
mov
and
or
cmp
jne
or
jl
arpl
adc
or
fadds
add
push
pop
imulb
cwtl
mov
cmp
pop
shlb
shlb
add
cmp
inc
fwait
push
je
mov
adc
push
and
push
fmul
fimuls
add
adc
hlt
mov
inc
add
xor
mov
fisubrl
or
cld
mov
mov
mov
pop
inc
idiv
adc
jg
movsl
push
pop
sbb
jmp
andb
mov
add
cmp
and
and
and
or
in
cld
shlb
add
mov
add
sub
inc
and
pop
repnz
sbb
add
push
call
adc
adc
inc
dec
bound
sub
rcll
repz
adc
jge
into
and
inc
mov
mov
stos
je
jp
lock
fcompl
fs
ja
xor
mov
cmpb
pop
clc
lea
xchg
add
jl
test
in
dec
incl
imul
orl
pusha
add
rorl
inc
sub
mov
imul
adc
and
and
int
push
add
imul
adc
push
mov
shl
cmp
sbb
outsl
jmp
aas
cmp
jae
incl
lret
enter
or
test
stos
leave
imul
push
jo
sbb
mov
dec
push
outsb
adc
jecxz
jne
adc
repz
fst
mov
iret
jo
mov
add
loop
rcll
cli
xor
mov
mov
sbb
fdivl
subl
adc
mov
stos
pop
ss
fisttpll
xchg
inc
mov
or
mov
pop
jbe
or
cmp
std
mov
not
and
push
jl
and
or
add
lea
sub
shr
mov
pop
loope
add
push
repnz
not
and
mul
and
or
adc
fcomi
shr
divb
push
js
repnz
aam
fildll
fmull
pop
inc
fisubs
fimull
add
lea
and
out
xadd
adc
pop
inc
sub
mov
lock
and
not
cmp
add
repz
pop
sti
int
sub
rorl
push
shr
or
add
pop
mov
jmp
daa
pop
jg
push
mov
add
lea
sbb
repnz
loop
mov
jle
hlt
mov
not
and
lret
lods
push
fsubrs
shlb
ficoms
xchg
rcr
mov
roll
xor
fiaddl
lods
mov
or
mov
adc
test
scas
loope
scas
roll
mov
ret
orb
sbb
pop
int3
xor
or
inc
std
sbb
add
out
cmp
popa
xor
add
sbb
lret
lret
jne
les
repz
fcomp
cwtl
subb
mov
pop
or
and
not
ficomps
sahf
popa
das
pusha
adc
pop
scas
testl
sti
mov
pop
roll
sub
add
pop
push
in
mov
xor
add
sub
ret
push
fcom
add
fisubrs
mov
pop
fnstcw
pop
xlat
mov
repz
nop
imul
xor
lret
ja
fmull
or
xchg
jno
pop
fndisi(8087
popf
std
stos
lods
es
add
adc
fidivrs
stc
lods
mov
pop
aaa
das
push
mov
cmpsb
pop
mov
xor
xor
lods
mov
or
cmp
rorb
cld
pop
ret
popa
adc
add
or
pop
mov
mov
ret
xor
fidivl
out
and
aad
aam
pop
bound
lods
pop
fcomps
shl
stc
or
jg
mov
cmp
jbe
repz
mov
rclb
push
fadds
hlt
fldl
int
and
clc
jb
repz
pusha
push
es
adc
repnz
sub
and
mov
stos
mov
in
out
call
lock
imull
mov
mov
hlt
pop
adc
call
shrl
xlat
lods
mov
fdivr
shlb
adc
add
lods
loope
and
in
pop
adcl
fcoms
push
clc
cmp
popf
cmp
jge
cli
fnstcw
out
enter
adc
xor
outsb
jmp
fidivl
and
sbb
loopne
ret
inc
enter
sub
mov
sbb
mov
inc
fimuls
cltd
cltd
xlat
sbb
push
test
repz
push
call
inc
loop
shr
int
or
or
xlat
fdivs
in
jmp
add
int
push
aam
mov
lcall
daa
int
cld
imulb
int3
aad
flds
outsl
adc
cmpsb
out
inc
xchg
dec
fisttps
les
mov
adc
or
fnstcw
test
jmp
mov
pop
mov
test
xor
mov
stc
and
jno
adc
loope
cs
js
lds
popa
popf
insl
mov
adc
xor
mov
repnz
in
mov
cmp
std
mov
mov
in
inc
inc
ljmp
xchg
in
add
mov
mov
xchg
fcmovu
dec
jmp
jb
repz
sub
int3
pop
pusha
dec
mov
outsl
cli
jno
cli
xor
sti
sbb
mov
jae
jl
sti
pop
or
mov
jle
sub
inc
stc
pop
aam
out
testl
data16
lock
out
mov
fimuls
jmp
test
out
aam
xchg
jae
adc
jmp
xor
repnz
sub
add
or
lret
fcmovbe
push
aas
sbb
cmp
rcl
xchg
scas
cltd
js
jbe
les
int
jge
in
mov
in
mov
in
clc
jl
pop
je
mov
xchg
jecxz
pushl
or
mov
mov
push
lods
les
rcl
pop
cli
mov
mov
mov
mov
inc
and
stos
rcrb
sbb
call
inc
in
sbb
jl
stc
test
inc
int3
or
inc
push
es
xchg
or
mov
jns
and
int
mov
mov
mov
cltd
or
cmp
fcmovnbe
mov
ret
pop
pop
gs
sub
xchg
in
push
rcrl
jns
lock
int3
or
push
or
ja
jno
dec
mov
in
jge,pt
out
call
unpckhps
sbb
adc
rcrl
test
sub
jmp
dec
xor
xchg
fstpt
test
jecxz
jp
mov
add
xor
mov
loopne
sub
jecxz
jp
ret
xor
mov
add
or
ja
mov
fwait
mov
lds
jp
mov
lea
mov
xor
lcall
mov
mov
outsl
xchg
ret
rcl
sub
pandn
repnz
repz
rclb
pop
jecxz
mov
push
dec
mov
pop
jge
xlat
insl
jmp
push
add
movsb
mov
imul
mov
inc
call
pusha
push
inc
js
cmp
xchg
adc
dec
cld
cmpb
jg
cmp
jl
push
pop
sub
push
push
push
push
dec
lods
idivb
data16
xchg
test
mov
cmp
mov
xlat
test
xchg
pop
fisubrl
jle
fistl
fildl
test
nop
iret
idivb
cld
pop
pop
mov
mov
into
ljmp
call
pop
sbb
cmp
jne
sub
mov
cmp
xchg
jb
pop
pushf
push
xor
or
jnp
dec
jmp
enter
push
or
hlt
push
cmp
icebp
add
jge
sub
insb
outsl
lcall
je
inc
add
cmp
out
or
testb
add
mov
xchg
push
call
loop
mov
adc
into
inc
add
imul
push
loopne
pop
int3
rolb
aam
jae
sub
xchg
adc
sahf
mov
in
xor
imul
out
add
in
gs
lahf
iret
out
das
lock
jo
hlt
imulb
lahf
ljmp
pop
mov
mov
pusha
lcall
mov
mov
stos
call
sbb
int
pushf
ds
andl
dec
cltd
mov
jmp
lods
outsb
xlat
fimuls
fmull
inc
mov
push
pop
movsb
loopne
xchg
dec
cltd
fistl
push
ds
jb
push
mov
in
dec
mov
shl
out
push
out
push
xor
add
cli
pop
mov
and
xor
xchg
push
push
push
xor
mov
add
repz
inc
mov
mov
test
int3
add
push
and
or
and
inc
bound
inc
incb
pushf
add
or
inc
mov
dec
push
push
inc
notl
add
fwait
and
cld
clc
incb
cld
jno
xchg
je
insb
divb
icebp
sub
pop
mov
sub
push
shll
cmp
push
mov
push
adc
out
mov
divl
push
mov
push
mov
sbb
fisttpll
xor
je
enter
mov
adc
push
mov
and
push
rep
jmp
sbb
cmp
je
dec
dec
in
dec
std
cmpw
jne
pop
push
arpl
inc
add
cmp
add
mov
ds
mov
ljmp
int
popa
gs
mov
push
aad
fistpl
data16
inc
lret
fdivp
mov
jbe
cmp
inc
addl
push
jl
loopne
jg
lahf
or
outsl
arpl
push
je
xchg
cmp
testb
out
or
inc
add
je
cmp
jne
push
sbbb
lcall
mov
sbb
dec
pop
add
cltd
into
outsb
js
mov
stos
loopne
sbb
mov
mov
fdivl
lock
mov
in
jae
test
pop
adc
outsl
fdivrl
adc
movsl
mov
aam
inc
pusha
cmp
subb
inc
aad
xor
pop
and
and
fsts
in
jecxz
or
ret
mov
nop
mov
dec
sbbb
ficomps
push
nop
pop
xchg
sub
mov
mov
fnstenv
mov
cmp
and
sub
mov
sbb
mov
inc
jg
cmp
pushl
data16
mov
xchg
in
cmp
enter
sbbl
mov
das
push
jg
std
inc
add
inc
loop
jle
fidivs
lods
fmul
call
sahf
lods
clc
cmp
out
mov
pushf
push
mov
inc
outsl
clc
out
pop
jnp
decl
int3
cmp
mov
or
mov
shll
out
mov
or
push
jo
mov
jo
pop
xchg
dec
les
cwtl
cmp
and
std
in
outsl
push
loopne
xchg
in
sbb
pop
adc
fstpl
sbb
jmp
call
mov
insb
mov
cmpb
or
inc
lahf
mov
adc
cs
mov
idiv
xchg
adc
jmp
dec
mov
bound
mov
dec
mov
add
fildl
push
mov
popf
test
ljmp
cmp
sahf
lock
cs
push
jo
or
push
pop
inc
sbb
jg
push
insl
mov
cs
lret
in
push
mov
mov
mov
mov
in
mov
gs
mov
and
mov
add
mov
sub
mov
outsl
jb
jb
cs
fcmovu
gs
mov
mov
ret
loope
gs
pop
mov
jbe
in
push
out
dec
out
call
jmp
insl
jae
lcallw
outsb
je
or
mov
cmpsl
dec
xchg
fldt
rol
add
xor
in
lcall
sbb
cmp
lcall
push
xchg
xchg
mov
cmpsb
cwtl
cltd
lcall
ss
sub
mov
mov
mov
mov
insb
cmpsb
xor
test
push
test
dec
shl
div
clc
ds
hlt
sub
in
cli
jns
lea
or
pcmpeqb
shlb
jle
or
pop
shlb
dec
lods
aaa
adc
sbb
jbe
aaa
add
cmp
test
gs
int3
jmp
sar
dec
and
pop
insb
fldt
xchg
scas
or
pop
dec
rcrb
sub
jne
pop
xchg
jae
mov
cs
mov
mov
lock
cmc
adc
in
das
mov
mov
out
shlb
lea
rcl
inc
push
inc
imul
sti
js
addr16
loopne
les
loopne
into
imul
pop
mov
or
ret
and
test
test
push
inc
sub
pop
and
aaa
xor
test
les
cmp
mov
cmp
es
mov
jmp
mov
nop
repnz
icebp
leave
lea
hlt
cli
call
inc
addl
add
jmp
fsubl
cmc
fsubrs
clc
std
sbb
stos
cwtl
nop
and
cmp
pop
push
xchg
int
scas
xchg
mov
push
mov
or
filds
dec
int3
pop
xor
movsb
cs
imulb
xorl
push
cld
mov
shr
lea
push
inc
pushf
adc
and
xor
pop
scas
mov
sub
and
les
add
adc
rorl
es
adc
sub
xchg
or
sbb
push
jbe
and
stos
mov
adc
adc
js
in
test
adc
daa
ljmp
inc
jns
sbb
addr16
ljmp
lods
inc
cmp
jl
jns
test
mov
mov
xor
push
mov
add
ljmp
fadds
gs
hlt
sbb
cmp
addr16
sub
push
jl
test
mov
les
adc
xor
cmp
xchg
pusha
xchg
and
cmp
cmp
push
sarb
mov
xor
shr
pop
push
bound
mov
cmp
jae
push
stos
scas
fcmovnbe
xchg
aas
and
cs
push
pop
rorb
insl
cmp
or
sbb
add
xor
outsb
adc
and
or
add
into
inc
adc
adc
jmp
pop
loope
and
push
and
pop
mov
xlat
mov
scas
xchg
lock
fs
loope
xorb
cmp
inc
mov
inc
mov
movsl
pop
or
call
cmc
pop
or
pop
or
add
fld
fisubrl
ret
xor
pop
punpcklbw
sar
cld
popa
xor
sub
dec
outsl
jp
mov
shrl
dec
push
mov
outsb
dec
imul
ja
sbb
fildl
fstp
jae
fistps
loopne
xor
mov
cs
inc
sti
cld
fstps
jmp
lcall
mov
imul
dec
shll
mov
mov
gs
push
outsb
shlb
lcall
pop
push
mov
pop
pop
lret
popa
gs
xchg
gs
push
cmpsb
mov
xor
jb
sbb
je
icebp
repnz
sahf
xchg
or
insb
lock
sbb
sbb
cmpsl
xchg
pop
sbb
rclb
cld
mov
or
pop
push
es
cmpsb
adc
sbb
gs
push
hlt
dec
mov
add
xor
sbb
pop
int
fistps
pop
jmp
fsubl
addb
mov
mov
lret
sbb
std
imul
je
imul
outsl
ja
test
sub
rclb
icebp
stc
rcrb
in
push
lock
outsb
sub
push
call
loope
cmp
aaa
addb
lea
dec
loopne
lret
sti
xchg
xchg
sub
in
fcomps
xor
rorb
lcall
dec
jo
sbb
out
imul
push
in
add
pop
push
fimuls
or
in
ljmp
mov
cmp
jge
mov
loopne
jns
rorl
jl
push
sub
lret
pop
dec
xchg
fwait
or
push
stc
inc
in
les
or
lock
adcb
push
pop
push
adc
push
insb
outsl
sub
push
or
jne
fcompl
sbb
and
out
pop
pop
adc
add
test
cmp
push
popa
es
andb
adc
or
in
icebp
lock
out
decb
movsl
movsb
xor
hlt
add
and
mov
scas
dec
xor
sub
sub
adc
add
mov
sub
fs
jo
mov
push
loop
dec
push
loopne
out
orl
push
push
pop
clc
inc
push
sbb
cmc
ljmp
cmp
les
adc
lock
adc
sahf
out
xchg
stos
outsb
clc
add
std
mov
sbbl
insl
mov
jb
insb
lock
popa
pop
repnz
div
insb
repz
gs
mov
cmpsb
popa
jo
jbe
jb
imul
or
or
jb
sub
add
or
dec
cwtl
xchg
xchg
xchg
mov
insl
dec
mov
fisttps
and
mov
dec
inc
enter
xchg
xor
pop
dec
ds
pushf
loope
inc
scas
das
adc
sbb
adc
and
jo
xchg
ss
call
cmp
add
push
push
aas
sub
ret
rorb
movsb
fdivrs
insl
inc
in
sub
in
jbe
insl
stos
inc
clc
outsb
cmp
sub
xchg
in
push
pop
ret
loop
mov
xor
or
ss
mov
push
push
xor
das
cwtl
jnp
cmp
cmp
sbb
fsts
adc
rcr
in
adc
xchg
lods
cltd
mov
xchg
dec
in
mov
xchg
push
stos
arpl
adc
arpl
lea
xchg
and
jmp
icebp
cmp
arpl
orl
call
and
xchg
and
xchg
jae
jle
mov
and
idivb
xor
mov
mov
decl
rolb
xchg
adcb
or
jle
mov
push
imul
pop
mov
or
mov
adc
aaa
test
add
outsl
mov
mov
insl
adc
js
push
ljmp
cmp
or
pop
jl
mov
inc
out
xor
push
push
inc
repnz
cmc
enter
cmp
sbbb
decb
imul
popa
adc
jmp
stc
loopne
pop
mov
fdiv
adc
mov
cmp
or
or
push
aad
scas
call
pop
mov
adc
add
dec
inc
stos
cmpb
loope
insl
mov
rolb
mov
filds
dec
or
pushl
dec
xor
sbb
add
and
mov
adc
sbb
popf
and
mov
push
jmp
or
scas
xchg
lea
sbb
bound
cwtl
dec
ds
pop
xor
fstpt
sahf
movl
push
iret
add
adc
out
xorb
push
pop
mov
push
in
mov
adc
and
shl
adc
sub
adc
adc
sbb
imull
pop
sub
inc
mov
dec
adc
sub
and
int3
push
jp
sbb
call
jbe
call
sarl
or
sqrtps
dec
ja
icebp
test
or
leave
adc
xchg
jecxz
inc
inc
pop
repnz
std
stc
cmp
hlt
adcb
push
mov
enter
ss
daa
xchg
cmp
and
mov
fwait
add
add
jecxz
push
divl
jl
sbb
dec
mov
outsb
inc
or
inc
pushl
orb
jge
call
mov
dec
call
pushf
sbb
add
loop
push
mov
in
xchg
movsb
lahf
imul
test
ret
push
out
cmp
push
int
scas
pop
jno
push
ret
mov
and
movsl
sbb
lea
push
loopne
pusha
mov
jno
jae
pop
adc
pop
pop
lock
das
dec
and
aam
and
jle
push
std
inc
push
iret
idivb
lock
lods
push
rep
or
mov
adc
fwait
repz
adc
or
fcom
mov
stos
pushf
jnp
movsl
loope
addl
hlt
clc
sub
or
mov
mov
mov
jo,pn
mov
addr16
les
clc
adc
xor
or
cs
into
stos
sbb
xor
mov
mov
adc
cmp
je
inc
cwtl
in
out
insb
out
fs
pop
or
cmp
in
xchg
inc
inc
hlt
sbb
xor
movsbl
mov
cmp
mov
pop
jmp
mov
sbb
sub
mov
mov
inc
cld
sub
daa
sub
dec
mov
pop
sarl
mov
and
popf
push
mov
dec
sbb
scas
pop
sbb
call
test
jnp,pt
inc
mov
and
or
xchg
dec
les
andb
pop
std
repnz
inc
or
cmp
inc
xchg
sub
cs
cli
movsb
imul
stos
add
jae
je
pop
xchg
fldcw
insb
dec
dec
inc
xor
notl
mov
loopne
insb
inc
sub
dec
insl
mov
daa
lret
insl
inc
je
dec
xor
ja
inc
insb
cwtl
gs
popa
ret
shrl
fwait
jns
push
shrb
in
sbb
inc
sub
dec
stos
push
push
test
pusha
and
lock
repz
lea
jmp
sub
sub
dec
mov
push
imul
shrb
jg
aad
out
daa
loop
add
push
addr16
push
xor
popf
insl
out
push
loopne
cmp
call
mov
xchg
jne
xor
stc
addr16
jne
mov
test
adc
xchg
repz
stc
cmc
daa
xlat
and
or
sbb
add
sbb
ljmp
ficompl
stc
mov
call
sbb
sbb
pop
xchg
rorb
push
sbb
push
testl
pop
loopne
push
push
pop
lcall
outsl
fstps
pusha
mov
lock
repz
push
pusha
xchg
cmp
push
push
fdivrs
call
arpl
imul
mov
test
popf
push
push
mov
sub
mov
cmp
add
inc
push
leave
pop
out
int
adc
sbb
inc
add
icebp
cmpsb
test
push
inc
sbb
repz
mov
loope
jl
je
sub
call
xlat
sub
adc
push
daa
ljmp
cmp
movsb
xor
lods
cmp
aas
xor
mov
repz
mov
lret
push
sbb
stos
or
add
lret
mov
lret
rcl
fcomp
in
and
ss
andl
mov
mov
test
add
mov
push
inc
adcb
cld
inc
icebp
mov
sub
jno
data16
inc
mov
sahf
mov
xor
das
xor
test
into
xchg
or
rolb
pop
cmpl
sub
xchg
sarl
mov
pop
xor
cltd
mov
idiv
jle
imul
pop
and
sub
and
in
xor
mov
sub
clc
ss
ljmp
sbb
movsl
pop
inc
xor
cmp
inc
mov
ret
add
push
das
mov
test
dec
inc
js
hlt
push
xor
push
adc
push
push
dec
dec
mov
lret
mov
dec
inc
push
cs
sub
fs
insb
test
pop
xchg
push
fs
insb
jne
pop
xchg
gs
fs
insb
lea
pop
jg
pop
lret
pop
xchg
dec
outsb
je
push
jb
lcall
adc
scas
jmp
cmpsl
push
pop
test
sub
lods
push
dec
je
lret
mov
je
dec
jo
mov
pop
mov
jne
gs
jmp
aad
pop
fwait
shrb
roll
dec
shll
aam
mov
imul
xchg
and
sbb
lcall
inc
push
cmpsb
pop
lcall
fstps
fcmovnu
push
fstl
fists
xor
pop
add
jne
lcall
push
mov
xor
mov
jb
mov
xor
mov
mov
mov
add
rcl
icebp
pop
arpl
mov
xor
xor
fisttpll
mov
pop
adc
pushf
jns
lret
and
sahf
std
cld
sti
adc
xor
push
sub
inc
xor
cmpsl
mov
push
and
jne
mov
xor
cmpl
pop
mov
mov
mov
jmp
push
pop
aad
bound
lods
xchg
gs
sahf
js
ficoml
addr16
lock
imul
ja
shll
imul
sub
fs
dec
or
cmpsl
repz
sbb
pop
scas
mov
push
mov
jne
daa
push
jl
in
test
add
push
add
push
bound
add
xchg
sub
sbb
or
add
aaa
add
je
push
daa
sbb
sti
push
sbb
push
aas
pop
lsl
mov
pop
daa
jbe
and
imul
jg
or
bound
pop
sahf
push
hlt
test
cmp
adc
or
out
fcomps
or
mov
fisttps
inc
cmp
jb
inc
incl
or
les
mov
gs
xor
lret
lock
ja
int3
loop
shrl
xor
pop
in
out
and
call
gs
add
arpl
jb
insb
push
lret
arpl
insw
jnp
ret
jne
cli
call
push
pusha
push
pop
inc
inc
mov
enter
sbb
outsb
cmpl
call
lcall
and
arpl
mov
mov
pusha
cmpb
inc
leave
and
add
jo
pop
mov
cmp
inc
sub
enter
pop
cmp
sub
pop
daa
cmp
jae
pop
and
jbe
into
loop
sbb
clc
mov
jne
or
cli
sbb
and
push
rcrb
aaa
and
add
mov
jns
add
pushf
add
push
popa
loope
fsubs
push
call
movsb
mulb
aad
bnd
and
sub
nop
loopne
and
cltd
arpl
outsl
xchg
outsb
cmp
imul
cmpsb
imul
and
imul
lock
xchg
mov
stos
idivb
pop
or
aam
jns
orl
xlat
inc
int3
ljmp
je
pop
pop
lahf
and
je
rorl
imul
shll
jo
jae
add
mov
pop
mov
in
aas
in
aaa
jnp
push
dec
cmc
lds
sbb
dec
xchg
in
sub
andb
mov
cwtl
scas
lds
insl
jne
fcomps
rolb
pop
shlb
std
mov
xor
sti
add
popa
pop
loopne
decb
cltd
and
push
push
int
pop
out
or
aas
pop
insb
or
outsl
and
cmpb
enter
push
push
push
je
dec
shll
jae
je
outsl
arpl
dec
shrl
jne
cmp
call
and
rcrb
shlb
in
je
cmpl
icebp
jbe
push
out
iret
addb
shll
cwtl
xchg
mov
test
xor
fdivl
shrb
jb
mov
iret
jmp
sbb
push
adc
fs
pop
pop
xchg
and
cmp
add
pop
add
sbb
stc
add
inc
mov
repz
loopne
lods
mov
inc
pop
xadd
add
out
pushl
int3
icebp
or
cld
sahf
loope
and
push
mov
movsl
push
and
pop
sarb
cmc
daa
dec
mov
movb
dec
sbb
loope
cmp
xchg
lods
or
test
jne
inc
adc
enter
mov
fstp
mov
add
push
fs
inc
fdiv
cld
mov
inc
mov
nop
mov
jle
xor
or
add
fidivs
adc
cmp
es
call
add
ja
rcll
or
or
mov
sbb
std
cwtl
inc
cwtl
and
sub
cltd
lcall
rcrl
bound
cs
in
mov
cmpsb
imul
test
and
insb
xchg
cmpsb
imul
dec
xlat
mov
mov
mov
dec
mov
inc
mov
js
rol
ret
ret
les
enter
dec
ror
lret
int3
mov
jae
popa
arpl
je
outsl
lret
fs
shll
je
outsl
jns
push
or
es
ror
mov
ret
lds
jb
jp
ss
lcall
xchg
mov
add
dec
jne
or
add
mov
jmp
push
shr
sbb
cmp
cwtl
xchg
mov
seto
out
jl
das
xor
insb
xchg
or
jle
out
loopne
cmp
sbb
call
idiv
jb
xor
push
xor
xchg
cld
sbb
sub
xchg
cld
in
push
pop
js
sub
mov
aaa
and
sub
loope
sbb
iret
inc
xchg
cli
les
jae
arpl
fs
dec
outsb
cmp
inc
lcall
shll
fiaddl
sbb
sbb
repnz
ret
insb
jbe
xchg
sbbl
lods
and
inc
in
scas
sub
lods
insl
enter
cltd
popa
cwtl
sbb
sbb
ja
clc
popa
imul
add
imul
outsl
popa
jb
lret
mov
test
arpl
roll
fs
fldt
enter
jmp
repnz
jns
out
xlat
lods
cmpsb
adc
ficomps
bound
and
jb
lock
outsl
outsl
mov
cmp
jmp
and
fcmovnbe
mov
push
xor
xor
xor
je
pop
mov
and
push
imul
and
call
mov
push
shll
dec
jge
mov
repz
sbb
in
sti
cmpsl
aad
jle
mov
add
push
adcl
adc
and
jne
mov
insl
mov
adc
push
ret
adc
cmovl
push
pusha
or
adcl
dec
mov
cmp
jmp
call
call
adc
add
jle
call
jb
fisttps
mov
push
push
push
xchg
jbe
push
and
out
mov
push
movl
mov
out
out
add
and
jmp
add
adc
push
sbbb
in
sbb
movl
ret
loopne
cmc
xor
enter
sbb
in
and
dec
call
imul
in
out
pop
or
sub
and
or
fs
lods
add
in
sbb
outsb
data16
ja
ds
movsl
fnstcw
jae
frstor
movsl
pop
lcall
jb
fsub
cld
pop
loop
jecxz
in
mov
cld
out
push
out
pop
and
mov
popa
test
popf
divl
mov
push
sub
out
mov
xchg
out
les
mov
adc
add
adc
stc
xor
mov
loope
scas
jmp
stos
call
pop
push
sbb
adc
sbb
add
or
neg
mov
stc
xor
cmp
inc
cmp
jl
dec
push
inc
or
and
cmp
and
ss
popa
inc
xor
rcll
popa
aad
dec
shrl
insl
outsl
fs
sbb
push
call
scas
rcrb
call
mov
xlat
pop
sub
rorb
insb
dec
call
in
in
inc
dec
pop
fldt
and
inc
cmp
pop
adc
shlb
mov
add
mov
adc
in
out
and
sbb
add
or
cmp
dec
jg
aaa
or
sbb
pop
scas
dec
xor
aaa
inc
enter
leave
lret
pop
ss
pusha
int3
int
repz
push
rcl
add
push
shr
data16
notl
sbb
add
dec
test
adc
lea
insl
imul
add
pop
mov
mov
mov
test
call
pop
in
pop
mov
or
xchg
gs
ss
jg
inc
and
ret
pop
push
out
movsb
xor
fs
dec
mov
adc
xchg
movsl
jno
push
mov
fwait
cltd
add
fldcw
adc
lahf
mov
cs
in
pop
movsb
xor
add
mov
hlt
mov
cmp
push
testb
clc
cmp
ret
call
inc
aas
mov
mov
int
pop
movb
xlat
inc
gs
xchg
int
flds
fcmovu
faddl
in
stc
fstpl
fnstenv
push
xchg
fistl
mov
imul
mov
cmp
push
ret
add
call
enter
pop
call
mov
push
filds
outsb
loope
fsts
stc
mov
push
sahf
aas
iret
sub
push
inc
cmp
mul
sub
push
pop
push
adc
repz
mov
dec
mov
xchg
cmpsl
call
fisttps
test
or
pusha
inc
lret
adc
xor
in
std
inc
push
pushf
andb
or
add
dec
push
sub
xchg
icebp
mov
push
push
and
xorl
push
mov
cmp
fstpt
popf
aad
pop
pop
sbb
mov
push
mov
mov
ss
adc
jne
dec
shll
outsl
push
jo
mov
je
inc
inc
sub
sbb
inc
fs
adc
mov
sub
loop
sbb
sahf
fwait
jne
and
out
sbb
fwait
lahf
mov
lahf
push
add
cwtl
add
xchg
push
xchg
or
daa
fiadds
imul
push
pop
insl
andl
lea
jge
push
mov
mov
adc
cwtl
xchg
push
pop
push
push
in
popa
sbb
jo
cmp
push
stos
push
arpl
mov
mov
add
add
mov
data16
lods
in
jb
dec
push
jbe
int3
ja
or
aaa
andb
loope
pusha
dec
leave
sub
movq
ljmp
mov
dec
xchg
jne
pop
daa
lods
call
arpl
cmp
pop
inc
jl
add
xor
fstl
sbb
adc
pop
sbb
cmp
pop
mov
cmp
insb
gs
and
mov
lret
add
arpl
jb
mov
lret
pop
outsb
popa
insl
es
insl
aaa
fldcw
cmc
addr16
mov
lcall
imul
dec
mov
cmpb
jae
sti
push
cld
stos
call
imul
loop
fcompl
sub
push
int
ss
jne
lea
mov
popf
in
adc
mov
dec
aam
fadds
and
mov
pop
xchg
flds
pop
push
or
jae
cmp
push
pop
jae
imul
wbinvd
orb
or
clc
mov
mov
loopne
dec
test
sbb
xor
push
add
sbb
or
pop
out
pop
iret
and
and
insb
pushl
add
fwait
insl
clc
push
cmpsl
rcl
sub
add
fsts
sub
and
dec
sub
mov
jae
cmp
adc
lret
mov
lret
and
and
jae
jb
and
jae
shrb
sub
and
cmp
and
mov
lret
mov
fs
imul
enter
cmp
mov
push
shlb
pop
dec
xchg
imul
pop
xchg
jae
arpl
xchg
gs
xchg
and
outsb
pop
xchg
gs
cmp
aas
pop
pop
fs
call
push
test
call
cmp
cmp
pushf
dec
sbb
push
js
je
add
mov
sub
divl
sbb
dec
rol
mov
inc
xchg
pusha
sub
and
mov
jge
fdivl
adc
or
jb
pop
mov
gs
or
aam
aaa
jo
push
call
xor
push
call
sbb
sub
insb
or
or
test
ss
xchg
sbb
mov
jo
sbb
push
enter
push
sbb
in
loopne
les
pop
add
mov
enter
fldt
bound
and
cmpsb
or
mov
pop
loop
jmp
pop
add
lcall
cltd
and
push
push
cs
popa
decl
pop
lret
rcll
or
or
xorl
popf
or
xlat
and
jmp
push
push
and
shr
sbb
das
and
aad
adc
orb
cmpl
inc
icebp
cmp
cmp
fildl
xor
xor
push
push
push
xchg
fildl
cmp
cmp
mov
cmpb
sub
mov
je
mov
add
cmpl
mov
lock
orb
xchg
dec
add
push
mov
fbld
mov
add
push
scas
movsl
sbb
dec
sbb
test
mov
test
mov
mov
dec
or
sarl
push
scas
mov
add
cmpl
sarb
sub
dec
adc
jne
mov
sub
mov
lods
xchg
mov
stos
jno
add
push
mov
add
mov
cmp
andl
or
jmp
jle
movzwl
mov
jne
and
add
add
test
je
cmp
pop
and
jne
jno
adc
push
or
lar
data16
lock
pop
or
sub
add
or
scas
mov
lea
shrl
sbb
sbb
xchg
sbbl
add
insl
in
add
pusha
mov
push
mov
jg
fsubr
add
xchg
pushl
jno
push
fmuls
ret
int3
xor
dec
adc
sbb
pop
or
mov
adc
iret
push
mov
sbb
lea
pop
mov
pushl
add
insb
in
ret
scas
clc
add
sub
and
dec
add
cmp
aam
adc
pop
mov
push
mov
lock
lock
mov
andl
push
mov
pop
lods
push
mov
call
in
push
inc
aaa
pushl
mov
push
lcall
addr16
push
push
inc
push
mov
jae
push
xorb
pop
inc
xchg
adc
sbb
shll
cltd
cld
das
inc
and
cmc
or
sbb
adc
and
inc
incb
sti
lea
xlat
or
inc
testb
je
js
mov
pop
inc
sub
or
xchg
mov
push
int3
or
or
shll
mov
fdiv
and
dec
imul
inc
dec
cmp
push
adc
sbb
xchg
mov
outsb
mov
or
sub
arpl
mov
sub
cmp
mov
mov
sbb
sub
adc
push
sub
lret
js
insb
jb
mov
js,pn
and
lods
test
mov
rorl
cmpsb
or
stc
push
pop
lret
xor
insb
hlt
mov
repz
pop
insl
jno
repnz
addl
cmp
sub
mov
add
add
rolb
cmc
cmp
movsl
stos
mov
je
xchg
mov
push
adc
out
or
int3
pop
stos
xor
adc
nop
cmpsb
imul
inc
pop
pop
out
int3
shl
sub
cmp
notrack
adcl
mov
or
xchg
loopne
filds
pop
push
adc
movsb
add
mov
arpl
mov
ljmp
add
adc
pop
push
sbb
mov
loope
push
cmp
adc
daa
ffree
and
jne
fistps
sub
mov
mov
call
inc
insb
pop
test
dec
pop
add
xor
sbb
add
or
or
mov
aam
fdivl
jbe
fcompl
push
out
push
rcrb
nop
jmp
bound
call
mov
iret
pop
mov
and
movsl
and
cmp
cltd
fdivs
mov
dec
xchg
inc
je
mov
inc
sarl
call
fucomp
mov
daa
adc
stos
mov
mov
inc
cld
push
ret
jle
push
dec
jp
adc
cs
push
mov
movsl
mov
dec
pop
pop
stos
push
fsubl
pushf
setns
cwtl
out
xor
push
or
push
and
and
sbb
fwait
bound
jb
andl
cli
std
adc
mov
push
jbe
daa
or
mov
push
insb
add
scas
sub
ret
mov
cmp
dec
addr16
add
xchg
into
add
inc
lcall
lds
outsb
pop
lcall
leave
inc
mov
int3
lods
push
aas
jo
jmp
arpl
std
rolb
daa
dec
aaa
ret
ret
les
inc
fstpt
ss
lcall
insb
xor
pop
xchg
popa
gs
sbb
push
je
xchg
gs
jb
jns
mov
aad
js
test
lcallw
ds
sub
or
sub
push
mov
repnz
lret
mov
in
movsb
orl
cmp
push
push
lds
sub
mov
add
enter
adc
or
daa
cmp
adc
push
int
jae
or
mov
xor
mov
push
testb
xor
pop
test
xor
push
mov
inc
rclb
push
incl
and
je
into
mov
push
sbb
movsl
pop
push
pop
push
pushf
sbbb
or
pop
add
nop
xor
movsl
xchg
inc
nop
aad
gs
sub
mov
insb
outsl
jb
add
gs
pop
or
insl
mov
cmc
cwtl
adc
add
int
add
fstpt
jmp
adc
enter
and
leave
std
pop
call
mov
pushf
push
leave
push
add
addr16
push
mov
int3
mov
push
sqrtps
stc
or
inc
push
push
lahf
outsb
push
pushf
mov
js
movsl
mov
mov
push
jbe
shlb
pusha
int3
shlb
lcall
jmp
jb
cmp
dec
ror
adc
adc
rcrb
and
fimull
loope
inc
pop
sahf
and
fwait
add
rorb
cwtl
pushf
mov
lahf
movsb
pop
inc
inc
add
outsb
xor
aas
jo
and
sbb
and
arpl
ds
xor
xor
in
test
jb
not
add
xor
adc
mov
enter
push
fnstenv
xor
xchg
popf
cmp
test
and
out
stos
adc
shlb
xor
cltd
xchg
incl
inc
or
inc
fs
arpl
gs
js
gs
push
push
lahf
pop
mov
jb
and
dec
outsb
imul
gs
jb
arpl
push
and
out
and
push
add
jbe
xor
add
pop
bound
push
fistl
popa
xor
dec
gs
sysenter
add
insb
cmp
inc
add
je
cmpsl
in
xor
popf
and
add
mov
mov
pop
push
mov
and
sti
or
fists
outsl
mov
jae
lahf
insb
popa
imul
jb
aas
mov
outsl
outsl
insb
outsb
jo
push
outsb
popa
jo
xlat
mov
dec
xchg
push
and
je,pt
mov
jbe
push
mov
imul
xlat
add
pop
inc
insb
mov
sbb
ss
sbb
std
mov
imul
popa
jb
inc
packsswb
mov
xchg
xchg
sarb
fistpl
sbb
sbb
fs
adc
xor
add
add
stos
outsb
mov
xor
sub
pusha
inc
pop
pop
mov
mov
loope
xchg
mov
inc
jns
add
or
and
mov
into
add
cmp
ds
test
rorb
sbb
adc
inc
sub
test
jno
inc
div
jbe
daa
xlat
outsb
and
push
push
in
adc
push
gs
aas
xchg
lods
popf
insb
add
sbb
push
sbbb
xchg
int
frstor
sbb
repz
sub
push
adc
xor
bound
add
iret
out
insl
popa
mov
adc
jno
data16
inc
inc
and
xchg
cmp
das
jne
inc
imul
orl
adc
mov
cmp
sbb
int3
pusha
sbb
jo
nop
cwtl
add
lret
in
mov
stos
popa
jmp
jmp
sbb
mov
std
setbe
sub
sbb
and
inc
outsl
lret
icebp
inc
mov
test
mov
rolb
filds
mov
adc
jne
mov
mov
fdiv
insl
jo
mov
mov
mov
xor
arpl
call
data16
mov
jnp
cmp
jbe
data16
adc
inc
pop
dec
test
pusha
or
inc
jno
jo
mov
push
outsb
push
add
push
dec
inc
mov
jbe
cmc
jo
je
inc
push
or
sub
push
mov
outsl
mov
mov
popa
xor
xor
add
inc
pop
pop
ss
gs
dec
jae
mov
aam
shlb
or
inc
add
xchg
jb
movsl
jae
mov
cmp
sub
sub
les
pop
mov
fdivl
addr16
aad
popa
in
ss
push
push
div
push
xchg
inc
lcall
outsl
test
inc
sub
movl
arpl
push
negl
hlt
call
mov
sub
pop
and
leave
fildl
jae
sub
lea
dec
pop
insl
pop
orl
imul
add
xchg
lea
cmp
jne
push
fcompl
push
jne
sbb
mov
pop
add
pusha
adc
jnp
lea
or
jb
out
jae
adc
and
xchg
and
enter
addr16
outsb
jne
jno
ljmp
sub
jne
scas
in
jbe
shll
pop
jo
inc
popa
arpl
add
or
inc
inc
push
inc
push
out
cmp
add
or
in
mov
push
jns
add
aam
jmp
insl
rcrb
mov
mov
gs
pop
fdivl
mov
add
jmp
pop
jnp
push
xlat
outsb
adc
roll
imul
inc
xchg
popa
xchg
sti
bound
icebp
arpl
jecxz
push
out
jne
inc
lds
and
jecxz
mov
sbb
outsb
sub
jge
pop
adc
push
jnp
stos
add
mov
ret
fst
xor
aas
xor
inc
pop
push
add
testl
nopl
out
in
jmp
dec
sbb
push
and
out
cwtl
in
or
lcall
add
lock
sub
dec
push
push
popa
add
sub
dec
xor
sub
test
dec
insl
into
aam
xor
pop
mov
pop
dec
sbb
xor
push
loopne
push
mov
adc
fldenv
inc
fcoml
bound
rorb
sub
dec
xor
pop
xchg
push
dec
cmp
testb
dec
xchg
xor
popa
insb
insb
loopne
adc
mov
xlat
pop
bound
pop
adc
or
mov
aaa
and
jo
mov
dec
ja
add
mov
bound
add
and
movsb
addb
lods
or
adc
fildll
test
push
cld
cmp
ds
ds
ds
ds
ds
test
mov
xchg
ds
lds
fnstcw
call
or
push
aas
pop
aas
and
aas
cmp
inc
aas
dec
aas
push
aas
jbe
jl
lea
lods
aas
leave
aas
into
pop
data16
aas
aam
add
and
cmp
push
xor
xor
xor
pushl
push
xor
mov
in
xor
xor
xor
sub
pop
xor
insl
xor
xor
xor
xor
xor
jns
mov
xor
xor
xor
xor
xor
dec
xor
lcall
pushl
add
or
adc
mov
aaa
cmp
inc
aaa
dec
aaa
pop
aaa
imul
xchg
in
pushl
mov
aaa
into
aaa
sbb
xor
bound
out
cmp
cmp
cmp
cmp
and
add
call
cmp
cmpb
cmp
cmp
cmp
cmp
cmp
jl
lea
sahf
cmp
inc
cmp
sub
jl
cmp
dec
jp,pt
mov
fidivrl
jecxz
jg
lock
add
and
cmp
cmp
cmp
cmpb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
pusha
cmp
fdivrs
sbb
and
lahf
movsb
ds
aas
jae
xchg
movsb
call
cwtl
cli
aas
sarl
aas
int3
xor
mov
pushl
xor
xor
xor
pop
xor
xor
xor
xor
jg
pushl
sbb
inc
xor
fnstenv
sub
inc
ss
pushl
jns
xchg
cwtl
ss
movsl
ss
ss
mov
ss
divb
add
adc
pop
aaa
xor
pushl
inc
aaa
dec
aaa
jl
xorb
aaa
xchg
aaa
cmpsb
aaa
stos
aaa
mov
les
lret
aaa
shll
fdivl
adc
cmp
cmp
jns
cmpl
mov
mov
cmp
cmp
cmp
cmp
cmp
js
cmp
cmp
cmp
cmp
cmp
add
ljmp
mov
mov
cmp
cmp
cmp
cmp
cmp
lcall
nop
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
pop
cmp
decl
cmp
cltd
ds
sub
das
aas
xor
aas
jne
mov
incl
push
pshufw
data16
xor
xor
fdivl
hlt
xor
xor
xor
inc
xor
insl
xor
xor
in
sbb
push
xor
call
xor
xor
xor
test
mov
sti
xor
sbb
xor
xor
xor
xor
xor
fnstenv
xor
xor
xor
xor
and
arpl
scas
xor
mov
pop
cmp
push
ss
cmp
xor
pop
aaa
fidivs
in
ja
jle
cmp
out
clc
pushf
cmp
cmp
popa
cmp
je
lea
xchg
add
cmp
pop
pop
xchg
cmp
cmp
xchg
or
leave
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
inc
insl
mov
lods
ds
inc
and
xor
add
or
aaa
aaa
cmpl
aas
lret
aas
sarb
fstpt
int
movsl
lcall
xor
jge
xchg
mov
mov
xor
dec
pushl
push
xor
xor
mov
xchg
xor
xor
xor
xor
xor
xor
push
decl
shll
xor
xor
ljmp
pushl
dec
xor
xor
xor
push
or
lods
xor
mov
xabort
ss
arpl
aaa
sub
sti
cmp
das
or
inc
aaa
push
aaa
arpl
jb
js
xchg
aaa
shll
cmp
mov
mov
cmp
cmp
cmp
cmp
cmp
cmp
pop
cmp
cmp
cmp
mov
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
std
hlt
fwait
call
cmp
cmp
cmp
cmp
cmp
syscall
cmp
ljmp
mov
dec
cmp
stos
cmp
repz
fst
aas
sti
nop
call
xor
xor
fildll
xor
xor
xor
xor
xor
pop
in
xor
out
clc
xor
jmp
sbb
daa
xor
xor
inc
xor
xor
xor
xor
xchg
out
cmc
xor
incl
pop
xor
xor
xor
add
xor
xor
fbstp
xor
pop
xor
xor
jne
mov
mov
xor
mov
lods
xlat
divl
aaa
push
ljmp
cmp
outsl
cmp
test
xchg
cmp
adc
or
cmp
cmp
cmp
cmp
pop
cmp
insl
cmp
aaa
std
pop
outsl
xchg
cmp
add
adc
sbb
cmp
cli
outsl
add
cmp
ret
cmp
jae
mov
std
push
pop
fdivrs
sbb
xchg
aas
mov
aas
mov
adc
enter
xor
out
clc
xor
lcall
push
dec
pushl
pop
xor
xor
xor
xor
xor
popa
xor
adc
pop
add
push
xor
xor
xor
xor
cmp
inc
xor
xor
xor
pushl
xor
xor
xor
dec
mov
xor
xor
xor
xor
xor
xor
xor
inc
ret
fcomip
xor
xor
push
xor
rorl
fcomip
fbstp
xor
xor
dec
ss
shlb
out
jl
pop
xor
push
aaa
pop
aaa
pusha
decl
aaa
mov
mov
aaa
fidivl
loopne
out
in
int
and
aaa
repnz
hlt
or
sub
xchg
add
loopne
std
popa
call
sbb
adc
mov
mov
jnp
adc
fdivs
jno
mov
je
dec
pop
shlb
cmp
fildll
sti
mov
mov
add
inc
cs
inc
add
pop
fistpl
add
add
negl
xor
xlat
pop
subl
fsubrl
push
mov
dec
xchg
add
push
lock
and
idivl
inc
dec
cmp
lret
adc
mov
push
jb
jb
fcomps
ret
and
push
inc
sub
fwait
xor
xchg
ss
push
nop
sub
xor
out
jge
lcall
cmp
sub
cmpsb
sbb
clc
das
ljmp
mov
shll
adc
fs
pusha
dec
es
pop
lret
mov
arpl
sarb
shrb
and
nop
jnp
sbb
push
and
out
sub
js
filds
dec
dec
repz
push
sub
push
push
inc
and
push
and
in
adc
int3
and
dec
push
test
enter
test
and
and
and
pushf
inc
or
mov
nop
push
repnz
and
inc
enter
or
in
enter
mov
add
and
sbb
and
and
sub
adc
and
leave
dec
and
nop
or
sbb
jb
in
xor
aad
pushf
and
add
and
push
and
xor
call
inc
inc
mov
and
fwait
mov
push
xor
aad
call
xchg
or
cmc
push
fcoml
fcompl
xchg
pop
lds
pop
mov
inc
inc
jbe,pn
and
xchg
scas
adc
cmp
or
cli
dec
insl
daa
addb
in
lahf
in
dec
shl
pop
sub
clts
ret
dec
sbb
ja
lcall
loopne
jae
out
call
js
push
pop
data16
pop
dec
lds
mov
or
cmovo
adc
and
sub
cmp
push
and
cmpl
mov
sbb
stos
or
and
sub
pop
jecxz
fs
adc
cmp
sub
sbb
inc
jb
and
daa
push
fs
dec
jbe
mov
mov
or
add
pop
xor
cmp
add
cmp
nopl
cmpsb
orb
fiadds
push
idiv
mov
inc
scas
xchg
idiv
xlat
cmp
iret
icebp
addr16
in
insl
out
mov
xchg
push
test
jne
pop
jb
enter
mov
icebp
and
decb
mov
mov
enter
mov
enter
mov
adc
pop
mov
add
sbb
lods
mov
std
push
in
fstps
scas
mov
pop
lea
jb
std
mov
mov
mov
lret
or
mov
insb
mov
xchg
jb
jb
xchg
loop
and
or
dec
cmp
into
dec
mov
jb
mov
xchg
fistpl
adc
push
or
rolb
add
jmp
push
adc
les
orl
outsl
gs
xchg
outsb
outsb
gs
xchg
mov
dec
fs
xchg
gs
outsb
insb
popa
jne
fs
xchg
arpl
jb
sub
add
jno
sub
xchg
addr16
imul
gs
xchg
addl
jb
sbb
mov
mov
js
enter
jns
mov
mov
lods
std
mov
adcl
fs
xor
sbb
lret
cmc
sub
xchg
ret
cmpb
adc
mov
xchg
addr16
xchg
jne
push
jns
in
xor
pop
mov
add
ret
xor
fldcw
jg
out
mov
push
aam
add
mov
sbb
fdivs
adc
insb
movsl
mov
mov
loopne
sbb
lods
out
iret
fwait
es
dec
and
mov
cwtl
add
add
cltd
pop
xlat
push
test
mov
xor
cmovs
and
ret
mov
add
sete
lcall
xor
pop
mov
ljmp
push
outsb
or
mov
mov
or
add
cld
mov
pop
pop
add
dec
cmp
rcrl
add
xchg
xchg
add
sub
test
sbb
mov
adc
inc
inc
inc
push
adc
vmwrite
and
add
add
add
fwait
jae
jno
add
and
jl
iret
dec
add
or
daa
sbb
pop
outsb
andb
pushf
adc
xor
or
mov
or
add
or
xchg
fimull
or
and
add
push
mov
and
lds
pop
adc
xor
xor
sub
mov
xchg
push
add
sub
push
bound
xor
inc
jae
cmp
outsl
lods
cmp
add
nop
jae
push
mov
push
push
mov
fsubrs
and
mov
inc
jl
outsl
js
push
push
xchg
adc
or
xchg
adc
bound
jb
int
sub
pop
adc
xlat
icebp
xor
push
add
pop
inc
adc
insl
dec
jae
cmp
adc
add
jge
inc
and
dec
adc
leave
and
mov
adc
or
push
scas
pop
push
ss
add
ss
xor
adc
pop
sub
insl
sub
sbb
and
pop
aad
pop
push
roll
jb
xor
stos
ss
pop
inc
xlat
je
ror
dec
pop
or
jo
pop
shll
add
xlat
xor
or
sbb
call
add
adc
repnz
call
adc
sub
loop
lea
add
mov
push
xor
inc
dec
push
add
add
or
mov
and
rcll
adc
mov
jno
add
mov
ret
inc
mov
ljmp
adc
jno
xchg
xor
repz
mov
xchg
adcb
sbb
push
dec
or
stos
xorb
stos
jne
insb
sub
jne
jns
cltd
bound
loope
adc
ret
jp
subl
sub
loope
daa
or
mov
in
popa
push
and
adc
xor
jecxz
stos
mov
dec
outsl
sbb
dec
add
mov
pop
add
pop
fcoms
add
mov
or
test
sbb
in
or
outsb
pop
add
add
popf
jg
jmp
dec
add
add
decb
jae
jg
or
pop
or
add
inc
sbb
add
addr16
push
jae
pop
push
gs
mov
cmp
xor
xlat
mov
pop
inc
and
push
nop
scas
outsb
inc
jae
and
popa
pop
push
lods
imul
and
insl
leave
lcall
arpl
sbbl
imul
stos
sti
bound
or
mov
sub
inc
push
jmp
gs
jb
cmp
fnstenv
xor
adc
jne
xor
insb
popf
xchg
jae
lods
jmp
dec
or
lds
popf
push
xor
out
addr16
mov
pop
notl
xor
jmp
push
sub
mov
push
fwait
or
daa
dec
dec
dec
fldcw
xlat
outsb
xchg
mov
lahf
sbb
push
daa
jbe
mov
mov
daa
fs
outsl
pcmpeqw
mov
mov
jmp
mov
xor
pop
imul
and
arpl
loope
push
insb
cmpsl
xchg
out
add
xchg
and
sar
xor
xor
xor
adc
xor
clc
jg
xor
xor
xor
mov
js
dec
aam
push
pop
and
and
xor
and
pop
ss
jmp
mov
lea
mov
cmp
inc
aaa
insl
aaa
je
mov
scas
aaa
mov
pop
pushl
or
pop
pop
jg
lcall
dec
cli
cmp
outsl
sbb
sub
xor
pop
cmp
cmp
mov
cmp
cmp
sub
xchg
lea
stc
cmp
cmp
inc
ds
ds
adc
or
mov
shlb
or
jne
xchg
add
mov
and
or
and
sbb
shlb
setb
inc
leave
add
add
pusha
add
pusha
add
add
sub
clc
add
mov
add
or
test
icebp
fisubs
xor
jae
dec
outsl
jbe
cmp
out
or
add
jl
adc
fsubrl
rolb
add
add
dec
pusha
dec
je
add
cs
xchg
dec
ds
add
adc
rolb
popf
add
add
enter
xchg
scas
add
add
sbb
add
jne
add
insb
dec
mov
and
inc
mov
add
sbb
push
and
in
testb
popa
smsw
daa
aam
jp
push
repnz
inc
add
add
enter
shlb
fs
mov
inc
fs
sbbl
nop
push
leave
push
push
inc
into
xor
inc
ret
xchg
xchg
cmpsb
cmp
mov
jle
lock
or
add
incl
add
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
