fdivrl
sti
scas
and
movb
and
push
and
xor
mov
sub
dec
pop
dec
shll
mov
jne
shll
ljmp
dec
xlat
dec
and
cmp
scas
jnp
insb
js
and
add
insl
cwtl
and
add
and
imul
call
dec
gs
gs
xor
xor
fs
insb
add
or
out
jg
sbb
inc
bound
push
jb
jbe
insb
gs
pop
jae
jae
gs
and
inc
inc
add
pushaw
lret
ljmp
gs
outsl
imul
add
adc
adc
bound
xor
cs
and
std
pop
imul
push
arpl
fs
outsl
cmp
fcmovne
arpl
bound
xor
xor
cmp
arpl
and
pop
sbb
xor
sub
imull
andl
andb
out
std
loopne
mov
jl
inc
add
add
or
lds
mov
or
popa
enter
insl
xchg
fcmovne
push
add
outsl
int3
int
pop
into
push
iret
rorb
shll
xor
shll
jbe
jb
aam
aad
xlat
pop
fdivs
mov
fidivl
fisttpl
push
pop
loope
lcall
inc
in
and
add
fwait
scas
out
call
imul
in
pop
in
aaa
lock
repnz
div
clc
gs
stc
dec
pop
cli
sti
js
je
mov
out
ficoms
xlat
sub
mov
pop
adc
aaa
sbb
dec
mov
xor
mov
ljmp
je
push
push
call
mov
jmp
mov
cmp
jne
xor
jmp
popa
insb
sti
arpl
movl
fsin
dec
test
je
sbb
fstpt
imul
jne
push
or
mov
sbb
iret
das
inc
mov
adc
cmp
jne
outsl
clc
fwait
out
mov
or
pop
pop
leave
ret
mov
in
sbb
fnstcw
imul
push
push
imul
pop
cmp
hlt
push
push
pop
loope
xor
clc
add
and
push
push
sbb
js
push
lock
cltd
add
add
push
pop
insb
pop
push
jae
pop
movzwl
push
push
stos
mov
fdivr
lock
cmp
je
push
adc
pop
or
test
sbb
cmp
adc
push
push
sub
lret
insl
add
inc
cmp
sbb
loope
sbb
movsl
adc
ss
mov
jecxz
pop
in
adc
pop
ret
xchg
sub
xor
inc
mov
ss
xchg
xor
mov
lods
jo
push
push
scas
inc
push
test
jo
push
adcl
mov
sbb
sbb
mov
cmp
adcl
push
dec
dec
ja
inc
addb
push
sbb
fwait
jmp
push
jno
dec
inc
imul
xor
xor
pop
ja
mov
pop
je
or
sub
lods
fnstsw
inc
test
je
adc
call
rorl
icebp
pop
loop
out
negb
dec
in
adc
mov
or
gs
adc
cmp
cwtl
fstps
adc
aas
xor
enter
daa
sbb
fimuls
loopne
or
icebp
push
cmp
fcom
lds
jno
popa
mov
std
adc
push
fdivr
call
adc
mov
psrld
mov
inc
inc
dec
dec
test
jne
push
in
cmp
pop
jmp
lds
shlb
and
push
jecxz
shl
mov
mov
add
inc
cmpb
inc
fadds
test
add
mov
mov
cld
aad
pop
clc
inc
and
aaa
outsb
push
rcl
jl
sub
pop
adc
daa
push
mov
stc
push
dec
sub
pop
pop
add
adc
xabort
in
les
out
inc
pop
or
jbe
mov
ret
in
inc
mov
cmp
subb
pop
or
ja
mov
daa
cwtl
pop
les
adc
mov
js
cmpl
inc
mov
pop
and
dec
shlb
add
std
add
arpl
mov
sbb
jge
ja
repz
lea
andb
rolb
lea
sahf
iret
out
stos
mov
loopne
adc
mov
add
xor
test
jecxz
push
or
fdivrp
maxps
pop
push
sahf
mov
pop
call
jbe
les
push
xor
lret
test
xor
scas
jbe
mov
xlat
inc
into
xor
fldlg2
sub
sub
push
in
imul
mov
aas
sub
pop
mov
pop
pop
pop
pop
testb
push
xor
cld
pop
jmp
pop
outsb
outsl
jmp
rcrb
or
fstl
lcall
outsb
ljmp
xchg
fildl
add
je
popa
lcall
pop
add
pop
lcall
popw
fstps
jne
insb
inc
or
xor
cld
mov
inc
ja
addr16
jge
pop
mov
outsb
imulb
push
add
add
sbb
add
fwait
cmp
in
adc
adc
add
in
sbb
arpl
xchg
sar
out
enter
jmp
ja
leave
imul
fs
int3
je
imul
rorb
int3
clc
insl
mov
push
cltd
pop
flds
sti
adc
sti
cld
mov
sbb
sti
fcomp
xchg
int
cld
std
dec
push
mov
xor
xchg
mov
dec
mov
cld
mov
arpl
jb
push
lds
fldenv
out
xlat
cmp
sarb
rcl
or
sub
xor
cs
sub
shlb
js
mov
int3
jb
clc
cwtl
mov
adc
call
lods
test
scas
mov
shrb
loope
or
jae
push
ss
dec
xchg
insb
les
fisubl
neg
cwtl
mov
ss
and
push
neg
fwait
pop
fs
mov
clc
je
jae
cwtl
shlb
sti
mov
into
bound
xor
jg
imul
idivl
fisttpll
mov
test
fldcw
xor
push
xor
mov
je
clc
add
clc
lods
jbe
popf
lea
adcl
jnp
aaa
movsb
pushf
or
insl
mov
mov
mov
call
push
bound
mov
clc
xchg
and
test
sar
jb
iret
sar
clc
sar
mov
push
push
mov
or
xchg
outsl
jbe
push
adc
cmp
cmp
popf
push
cmpsb
imul
insl
nop
gs
out
and
push
add
call
adcl
hlt
cmp
negl
xchg
shll
xchg
xor
and
hlt
fs
mull
or
sbb
xchg
cmp
aaa
gs
adc
ret
loopne
dec
dec
scas
cli
mov
jle
subl
and
jne
int3
add
or
pushf
sbb
push
cmp
lea
adc
jmp
in
adc
sub
mov
or
loope
or
push
fadds
inc
faddp
dec
movsb
inc
cmpsb
in
adc
mov
rclb
mov
sbb
or
push
dec
inc
dec
dec
in
test
push
dec
inc
dec
and
aam
inc
push
dec
cs
outsl
lds
or
push
sub
subl
add
and
add
push
add
add
enter
nop
add
enter
mov
inc
loopne
push
pop
mov
jg
js
int
mov
imul
jmp
arpl
outsb
outsl
je
bound
jb
outsb
and
inc
dec
push
and
fs
fmuls
and
imul
mov
mov
mov
ljmp
dec
repz
xchg
outsl
out
cli
jmp
sub
push
imul
out
inc
add
loope
mov
popf
std
gs
and
add
or
cld
pop
sub
pop
adc
add
lret
xchg
pushf
push
add
push
xor
jnp
cmp
pop
push
add
fnstcw
dec
call
popl
mov
add
push
fsubrs
bound
add
jae
inc
adc
cmp
frndint
shrb
popa
je
rclb
adc
fdivs
gs
outsl
arpl
inc
and
sbb
inc
ljmp
in
push
mov
in
xchg
movsb
xor
shll
in
add
imul
imul
imul
cmpsb
jmp
sbb
cs
pop
shll
fs
inc
imul
add
js
pop
outsb
xor
inc
mov
push
xor
daa
and
pop
rcr
pop
and
and
mov
push
idivb
rorb
inc
in
fs
add
xor
mov
hlt
fdivrl
and
filds
and
adc
and
adc
lahf
add
cmp
lahf
add
and
inc
and
adc
and
cmp
add
inc
out
stc
test
enter
fdivs
and
adc
add
inc
sahf
nop
dec
movsb
and
adc
add
inc
or
aaa
sub
dec
inc
ja
push
sub
sbb
mov
fmull
leave
add
lcall
fdivrs
adc
push
popa
mov
jge
divl
push
pop
jmp
adc
mov
pcmpgtd
mov
add
orl
pop
rcr
loopne
lea
mov
mov
xchg
arpl
decb
ret
and
or
je
into
flds
pusha
mov
and
xchg
push
inc
fs
adc
jbe
mov
or
push
mov
inc
ja
pop
sub
pop
pop
leave
xchg
icebp
sub
out
andb
inc
cmpsl
xchg
push
clc
std
jae
arpl
loop
ret
pop
stos
xor
mov
xor
outsb
xchg
xchg
dec
sub
push
enter
xchg
clc
mov
or
call
adc
std
push
insb
pop
adc
adc
ds
addb
adc
adc
push
and
jecxz
xor
test
add
cmp
jl
or
shr
or
push
mov
push
idiv
mov
int3
insb
outsl
enter
jnp
icebp
cmpsb
sti
jle
addr16
mov
xchg
pop
pushf
mov
arpl
dec
jne
pop
call
sub
dec
ja
push
jmp
inc
inc
loope
cmp
or
loope
sbb
mov
test
dec
mov
pop
mov
xchg
sbb
cmp
cmp
add
mov
addl
xorb
mov
outsb
mov
sub
ror
push
hlt
push
inc
lock
sbb
dec
jno
neg
pop
repnz
mov
data16
shll
xor
incb
add
sub
adc
or
cmp
movl
neg
pop
sbb
dec
mov
or
add
out
inc
mov
push
mov
xchg
fsubr
into
xor
mov
add
cs
push
sbb
call
jmp
mov
test
aam
or
call
pusha
jecxz
rolb
cmp
fisubs
pop
add
adc
or
hlt
or
jb
adc
jl
fcomp
dec
out
out
int3
jg,pt
or
cmp
insb
mov
cmp
cmp
scas
outsl
mov
mov
or
ss
mov
testl
pop
push
mov
cmp
jo
lds
jnp
ret
push
pusha
push
mov
push
mov
cmc
enter
add
mov
lret
gs
insb
jb
mov
lret
gs
gs
cs
fisttpl
cltd
mov
xor
ja
imul
pop
fcmovnu
frstor
sub
push
rcll
loopne
loope
jecxz
ret
in
cld
mov
movsb
sti
in
adcb
add
sbb
cmp
inc
call
add
push
or
in
cwtl
pop
add
and
push
jmp
sub
scas
sbb
mov
call
mov
mov
push
shr
stc
sub
cs
insl
jmp
add
mov
vmwrite
cmc
das
popf
mov
add
cmpl
fbstp
dec
cmp
cmp
or
dec
daa
rcrl
sub
xchg
outsb
mov
mov
inc
cmp
jl
je
fiaddl
inc
cmp
sub
cmpb
js
pushl
mov
daa
cmpl
jb
dec
or
leave
je
add
jp
iret
push
aas
or
add
mov
push
popf
or
fisttps
ret
fbstp
sbb
mov
mov
adc
test
insl
jbe
popa
sbb
add
cld
test
rolb
cld
jge
mov
add
sbb
cltd
mov
adc
mov
mov
mov
lods
inc
cmpl
fisttpl
add
cmpl
std
outsb
dec
mov
gs
and
lea
shr
shlb
mov
mov
mov
jne
daa
add
ljmp
shlb
cli
add
push
or
adc
xchg
mov
lar
data16
lock
jne
or
not
push
sub
add
aad
outsl
or
shl
or
cmpsl
xchg
xor
adc
in
cmp
clc
inc
mov
mov
std
sbb
xchg
add
jmp
add
imul
push
repz
jbe
push
mov
mov
dec
xorb
and
adc
outsb
inc
or
popf
mov
add
lcall
fcomip
and
mov
pushl
add
push
scas
clc
add
fildl
and
sub
sbb
mov
pop
or
push
mov
mov
jl
je
dec
push
sbb
andl
jle
sbb
icebp
test
call
call
int3
insb
aaa
pop
adc
lcall
xor
push
add
adc
pop
fwait
nop
pop
xor
inc
pop
or
mov
cmp
push
out
imul
xor
and
int3
mov
or
push
xorl
push
mov
dec
sti
lea
mov
or
inc
testb
je
ficompl
pop
inc
sub
icebp
insb
push
sbb
or
adc
xor
sti
gs
int
insl
push
mov
loopne
pushf
cld
inc
xchg
test
push
push
xchg
mov
mov
add
lock
lcall
or
sti
inc
test
lahf
cmp
nop
sbb
dec
jnp
jmp
ss
mov
and
or
subb
mov
jo
lret
mov
insb
outsl
jb
jb
das
lret
mov
gs
je
push
sahf
add
data16
mov
and
pop
pop
push
sbb
cld
or
loopne
clc
or
or
jl
mov
mov
mov
add
ret
movsl
pop
imul
fs
mov
lret
jne
push
in
and
leave
rcrb
scas
pop
adc
jg
dec
arpl
mov
or
cvtps2pd
mov
adc
and
mov
je
popf
xchg
mov
aas
les
enter
xchg
add
mov
xor
mov
cs
adc
cs
arpl
or
inc
sbb
int3
stos
push
pop
pop
xor
inc
insb
outsl
jae
dec
popa
outsb
fs
cmp
inc
xchg
ljmp
call
outsl
arpl
fs
jne
add
fs
imul
jg
jns
and
fs
inc
pop
fdiv
sarl
popa
insl
gs
xor
ja
mov
popa
je
and
insl
xorl
cvtps2pi
add
outsb
mov
mov
add
or
jb
sub
mov
jle
test
push
or
inc
ds
js
nop
add
imul
jb
sub
dec
bound
arpl
mov
gs
outsl
add
jae
sub
orb
adc
addb
imul
push
add
lea
xchg
dec
jo
mov
mov
push
xchg
outsl
ja
inc
xor
mov
test
mov
jne
mov
sti
mov
pcmpeqb
and
insb
mov
pusha
push
das
dec
outsb
add
push
pushw
gs
jge
xor
pop
jo
ret
or
imul
dec
fwait
bound
pop
push
js
xor
inc
int
orb
inc
sub
push
outsl
outsl
insb
dec
mov
sbb
popa
jo
push
push
ret
inc
popf
dec
push
orl
ja
add
out
cmp
mov
push
dec
inc
push
dec
inc
es
mov
lods
add
jo
pop
retw
push
push
mov
packssdw
pop
pop
add
jne
or
pop
mov
mov
outsb
sbb
outsl
adc
push
jo
pop
inc
push
xor
sti
shll
arpl
popa
jge
sub
rolb
mov
dec
outsb
data16
xchg
mov
movsl
add
add
std
outsb
aaa
insb
fstpt
inc
arpl
jo
inc
popa
arpl
fcmovbe
sub
push
inc
inc
push
mov
add
or
xchg
mov
sub
push
cltd
add
insl
popf
insl
ret
sbb
lds
ret
or
pop
inc
arpl
adc
ja
xor
dec
stos
and
jno
inc
mov
xor
jnp
mov
xchg
xor
xchg
lcall
pushl
adc
xor
xor
jno
mov
cmpsl
xor
xor
xor
xor
xor
xor
jno
lahf
xor
xor
xor
xor
xor
pushl
xor
xor
xor
pop
xor
xor
adc
sbb
arpl
sahf
ss
decl
std
ss
ss
ss
pop
ss
sbb
and
sub
ss
inc
aaa
push
aaa
pop
aaa
sti
jmp
aaa
jg
or
adc
and
xor
pop
cmp
imul
cmp
addb
jg
sbb
cmp
imul
movsb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
mov
mov
cmp
add
xchg
call
out
psubq
and
add
add
incl
mov
shlb
daa
repnz
jnp
add
clc
add
add
cmp
sbb
outsl
push
jmp
mov
ret
xchg
pop
shrb
fmull
mov
ja
mov
jb
shlb
pushf
lret
xor
pop
jo
pop
cmc
dec
cmp
push
pop
js
cwtl
pop
and
fdivs
lret
push
mov
das
or
dec
add
and
sub
cmpsb
adc
out
movsb
loopne
jmp
ss
pushf
mov
movsl
sub
imul
push
cltd
inc
xor
xor
rcll
cmpsb
pop
ss
call
cmp
pop
push
xchg
mov
mov
fsubp
hlt
cmpsb
imul
add
xor
imul
cmpsb
imul
mov
cmp
ss
mov
lcall
ret
shll
pushf
test
cmpsb
flds
cmpsb
add
xchg
mov
insb
adc
out
pop
shll
add
movsl
roll
dec
shll
into
fdivs
dec
shll
in
hlt
decb
cmpsb
imul
pop
ja
inc
cmpsb
adc
les
mov
shll
pusha
test
movsb
dec
mov
ss
xlat
mov
jp
add
cmpsb
cmc
lods
nop
pop
and
sub
add
ss
jl
and
sub
and
adc
jg
je
jo
jne
jns
inc
aaa
xor
ljmp
cwtl
aad
mov
push
dec
dec
add
or
add
xchg
addb
add
or
aaa
sbb
sbb
cmpsb
jns
pusha
add
pop
sub
add
push
pop
add
inc
ss
pop
orb
add
rclb
sbb
lret
jmp
add
push
and
das
pop
add
push
or
shlb
ja
aas
mov
aas
add
pop
rorl
incl
and
mov
decl
lret
add
jno
test
lea
popa
xchg
mov
pop
push
and
add
sbb
and
pop
jae
mov
cmpsb
pop
das
xor
enter
add
and
pop
sub
pop
in
xor
ud2
push
add
outsb
inc
ja
mov
adc
je
xlat
insl
rolb
jne
punpcklwd
cmpsb
jmp
js
push
sub
add
fdivr
jg
push
inc
jb
push
and
ja
or
push
mov
mov
jae
and
bound
insb
icebp
xor
push
sbb
insb
or
pop
add
jae
jg
add
pop
cs
add
pop
sub
les
cs
mov
dec
inc
push
push
inc
push
inc
dec
adc
outsl
dec
mov
dec
push
sbb
mov
dec
dec
fwait
ja
jb
inc
popa
aam
ja
jb
push
aas
dec
inc
inc
dec
dec
xor
test
mov
out
arpl
add
push
mov
sub
insb
adc
xchg
xor
gs
adc
gs
mov
push
fdivl
outsl
icebp
pop
imul
insl
fwait
adc
or
mov
pop
jne,pn
js
jecxz
loopne
loopne
pop
push
jp
mov
std
push
mov
or
add
adc
loopne,pn
mov
mov
cmpl
ss
push
das
lahf
mov
inc
mov
add
add
dec
pop
mov
inc
sbb
or
sub
push
orps
dec
orl
mov
out
add
out
cmp
adc
nop
inc
dec
repz
or
adc
sbb
imul
ret
fs
add
sbb
push
hlt
mov
or
jae
push
push
ret
dec
mov
scas
adc
into
mov
stos
mov
and
push
jl
cmp
add
add
roll
mov
push
mov
aaa
mov
and
xor
dec
mov
data16
xor
add
xor
xor
sbb
add
pop
xor
repnz
fwait
add
arpl
mov
mov
pop
mov
sbb
sbb
fwait
mov
sub
cld
lcall
dec
cli
sub
mov
add
bound
xor
loop
and
cwtl
mov
xor
pop
jns
xor
incb
push
adc
pusha
inc
lea
daa
inc
push
and
pop
or
xchg
arpl
aas
xor
inc
test
js
inc
frstor
pop
in
fidivl
adcb
adc
rorl
or
mov
clc
add
or
fsub
push
mov
pop
adc
lea
movb
mov
sub
sub
filds
incb
push
jmp
call
xor
push
push
call
out
add
inc
pop
sbb
add
sbb
or
aaa
or
mov
or
pop
aaa
pop
pushf
mov
sbb
adc
mov
add
in
push
jo
xor
mov
cmp
jo
adcb
pop
jge
testb
adc
or
mov
xor
aas
jecxz
inc
pop
push
adc
sub
aaa
push
pop
pop
cld
or
xor
adc
sbb
add
add
add
and
nop
lahf
les
add
enter
mov
pop
aaa
int3
adc
js
dec
adc
xor
adc
loop
adc
add
clc
test
testl
cmp
incl
lret
daa
xchg
and
push
ret
stos
push
xor
stc
mov
xor
xor
mov
imulb
cmp
push
rolb
pusha
sbb
lcall
and
dec
std
jbe
inc
into
add
add
jge
push
jbe
fiadds
pusha
sbb
dec
pop
or
fstl
and
pop
mov
hlt
ret
mov
push
add
dec
push
push
pop
sbb
sahf
int3
adc
pop
sub
fnsave
mov
pop
punpckhbw
lea
imul
jge
movsl
add
mov
movsb
mov
fstpl
loopne
insb
sbb
mov
jle
mov
rep
sbbb
js
ss
and
gs
mov
push
mov
mov
pop
dec
pop
mov
in
push
sbb
push
mov
xchg
jae
roll
sbb
fidivrl
and
out
inc
add
xchg
mov
fucomi
pop
adc
add
jne
sub
sbb
jne
hlt
push
jb
xor
pop
mov
and
push
pop
call
mov
faddl
hlt
mov
inc
inc
inc
outsl
pop
imul
sbb
jb
aaa
mov
out
enter
xor
jae
mov
xchg
rcll
fbstp
aam
push
andw
or
add
pop
push
dec
cld
pop
jb
push
or
add
pop
jmp
test
sbb
test
pop
push
fcomi
add
push
or
adc
mov
or
and
xor
std
xchg
out
mov
lea
cmp
jne
and
jae
popa
mulb
mov
pop
addl
push
pop
pop
cld
imul
cltd
jb
jnp
or
jmp
add
push
jo
adc
loope
call
pop
or
movl
push
in
call
mov
outsb
or
enter
insb
xor
adc
add
adcb
inc
push
xor
inc
jb
jns
xor
inc
dec
enter
xor
nop
inc
jb
xor
test
sbb
subl
inc
mov
add
push
push
or
mov
dec
push
mov
ds
pop
mov
shlb
push
push
push
or
cmpb
pop
enter
xor
pop
sub
inc
cmp
push
cld
add
lods
icebp
jg
jle
xor
cmp
jle
dec
xchg
dec
sbb
in
mov
dec
outsb
call
adc
je
movsl
pop
popa
addl
lods
aam
hlt
popf
and
jne
cmpl
daa
incl
mov
cmp
jne
xor
inc
clc
xchg
and
in
cmp
cmpsl
clc
imul
xchg
into
hlt
popa
test
cmp
sahf
inc
cmp
and
jl
cmc
pop
mov
pop
mov
lahf
add
cmp
fcoms
add
xchg
sub
sub
shlb
sti
jbe
ret
add
out
mov
je
mov
pop
push
inc
dec
push
push
aaa
inc
popa
push
or
jmp
jg
mov
adc
jmp
add
xchg
mov
mov
outsb
or
out
mov
pop
push
cltd
pop
inc
idiv
adc
mov
call
inc
jmp
andb
add
xor
enter
stc
and
nop
adc
add
or
adc
dec
sub
xchg
cld
daa
in
add
push
call
adc
hlt
cwtl
cld
xchg
adc
jle
add
adc
pop
arpl
jmp
inc
mov
xor
lock
xlat
ss
sub
fs
ja
xor
mov
cmpb
test
jne
pushf
jl
mov
incl
shrl
or
andl
sbb
inc
sub
mov
imul
adc
and
or
int
push
add
mov
inc
pusha
adc
rcr
cmp
dec
and
aas
cmp
jae
incl
lret
shr
add
sbb
dec
inc
dec
ficompl
push
mov
push
call
sub
mov
dec
push
pop
jne
adc
sbb
std
fldt
pop
rorb
rolb
or
rcll
cli
or
adc
add
jne
xor
stos
adc
pusha
add
fwait
and
xor
xchg
inc
in
push
movsb
das
popf
mov
or
dec
sti
not
loop
and
push
jl
and
or
add
lea
pop
ret
xlat
leave
shr
mov
add
add
repnz
not
and
or
mov
add
lea
test
out
lret
push
js
repnz
aam
jge
fisttpl
inc
fisubs
fimull
add
sti
lret
jg
lea
shr
shl
push
pop
inc
fstpl
outsl
sub
mov
and
not
cmp
add
aaa
xlat
psllq
mov
shr
mov
sti
or
repz
dec
daa
pop
jg
push
mov
add
lea
sbb
pop
fstl
adc
push
inc
jle
not
and
dec
test
adcb
mov
inc
mov
fidivl
pushf
loope
sbb
xlat
loopne
fiaddl
fcmove
outsl
lods
adc
sbb
inc
xor
scas
roll
mov
pop
mov
adc
pop
int3
xor
add
push
push
sbb
add
out
ficomps
lret
and
cli
sbb
repz
pop
pop
les
repz
fcomp
cwtl
subb
in
out
sbb
add
rcr
cld
ret
das
pusha
adc
pop
scas
testl
sti
mov
pop
les
cltd
ss
subb
add
pop
push
sbbb
adc
or
rclb
or
out
repnz
fdivrs
pop
aaa
or
rcrl
fbld
int
and
nop
imul
xor
jl
cmp
or
or
adc
fidivrs
jno
std
stos
lods
mov
add
and
fidivrs
cmp
enter
das
push
mov
cmpsb
mov
mov
xor
push
pop
and
xchg
mov
and
or
popa
adc
add
or
mov
shl
ljmp
fst
and
aad
aam
pop
bound
mov
pop
sbb
shl
add
and
mov
inc
stos
dec
cmp
inc
rorb
cmp
or
fadds
hlt
push
fisubrs
clc
jb
repz
pop
pop
or
push
repnz
rorl
out
and
lret
dec
jl
mov
sbb
out
call
pop
enter
mov
fldcw
call
xlat
sbb
fdivs
popf
fbld
push
adc
add
fcmovnb
sbb
fimull
out
fdivrs
clc
cmp
icebp
fistpl
mov
shl
dec
xchg
bnd
or
stos
repz
mov
mov
mov
out
loope
repnz
jl
sbb
loopne
ret
inc
enter
sti
add
pop
aaa
or
mov
push
fbstp
inc
fimuls
cltd
in
sbb
push
rorl
enter
call
mov
adc
inc
loop
shr
or
xlat
movq
faddl
sbb
add
sub
lock
aam
pop
cmp
mov
daa
mov
sbb
and
sub
aad
push
adc
ja
xor
xchg
dec
fisttps
sub
in
sahf
lea
or
xor
test
hlt
inc
cmp
jmp
add
das
mov
xor
mov
xor
jno
adc
xchg
out
or
lds
popa
popf
insl
adc
int
in
push
inc
sti
xor
mov
repnz
or
lods
insb
out
in
mov
mov
sub
out
or
movsb
inc
push
sbb
aam
cmp
test
pop
mov
loop
fmuls
into
push
int3
pop
pusha
dec
mov
fidivl
sbb
aaa
ss
mov
or
or
xlat
mov
jo
jle
sub
jae
pop
mov
add
sbb
lock
cli
daa
mov
fimuls
xor
xor
test
xor
mov
jae
adc
fidivs
test
js
pop
out
cmp
jbe
cmp
or
push
aas
in
cld
mov
sarb
cmp
aam
cltd
js
pop
cld
sarb
push
in
mov
jl
out
ss
in
cmp
clc
jl
pop
je
dec
outsl
clc
lcall
inc
gs
lods
les
xchg
lods
jge
cli
cmp
cli
mov
outsl
xor
stos
mov
pop
das
insb
sbb
push
or
in
mov
or
int3
or
inc
inc
arpl
movsb
in
movb
adc
xchg
xchg
jb
hlt
push
xchg
lods
mov
cltd
or
push
scas
xlat
mov
mov
jl
ret
pop
pop
gs
sbb
rcrl
or
lock
int3
or
push
sbb
mov
or
ja
jno
cmp
rorb
hlt
out
call
bsf
ss
in
rcrl
test
mov
or
fwait
ja
sarl
call
outsl
jecxz
rol
jb
dec
sbb
int
mov
and
loopne
sub
jecxz
jp
xchg
fcmovnb
cmp
mov
std
push
adc
add
mov
jp
cmpl
aaa
xchg
ja
mov
xor
cmp
loopne
mov
fiaddl
mov
inc
outsb
xchg
adc
repnz
repz
pop
push
roll
dec
mov
sub
jge
xlat
pop
add
pop
movsb
mov
lret
add
xor
mov
sbb
mov
push
mov
mov
nop
mov
cmpb
sarl
lods
mov
push
push
push
mov
cltd
xchg
test
add
insb
js
mov
xlat
ljmp
jle
sarl
inc
pop
inc
test
nop
iret
pop
pop
mov
insl
fbstp
into
ljmp
add
add
push
dec
jne
xchg
roll
adc
sbb
sub
stos
pushf
push
xor
inc
pop
stos
jmp
incl
pop
lods
jns
or
push
or
cld
call
pop
sub
jbe
lea
aaa
imul
mov
or
dec
cmp
out
or
testb
push
fmull
call
xorb
adc
lods
sbb
add
pop
jnp
gs
outsb
int
push
loopne
pop
int3
rolb
aam
out
stos
fadds
and
adc
data16
mov
int3
push
or
out
add
in
gs
repz
ds
das
lock
jo
hlt
divb
divl
das
pushf
or
cs
or
js
ficomps
mov
outsl
inc
add
int
clc
add
adc
mov
xorb
dec
rorb
aam
lods
outsb
les
cwtl
mov
fmull
inc
push
rolb
negl
push
pop
jle
call
xor
adc
add
or
xor
in
sub
in
dec
out
push
out
push
pusha
sti
mov
inc
dec
inc
pop
mov
mov
xor
push
lds
push
xor
data16
push
cmc
push
dec
push
push
cs
mov
sbb
inc
push
pop
fimull
sub
mov
inc
cltd
and
jge
inc
adc
shl
sbb
push
push
test
inc
mov
rclb
mov
pop
cwtl
insb
and
xor
rolb
ret
into
divb
push
imul
cld
add
sub
push
test
cmp
lods
adc
adc
out
insl
xchg
pop
push
mov
push
lret
push
dec
aam
mov
jns
mov
por
dec
fs
push
mov
cli
and
and
adc
inc
push
clc
add
push
push
sti
adc
jg
jns
adc
subb
cmp
je
dec
idivb
decb
cmpl
jne
pop
push
arpl
inc
add
cmp
add
mov
push
xor
add
wrmsr
jb
insb
xchg
gs
mov
push
aad
xor
sbb
aad
jbe
cmp
ja,pt
movl
in
add
mov
je
xchg
cmp
testb
jl
mov
cmp
je
cmp
jne
push
insb
int
testl
aaa
jnp
lods
push
pop
add
cmp
mov
stos
loopne
enter
or
adc
xlat
pop
lods
or
fdivl
xchg
add
loopne,pt
cmp
das
sub
cs
cmp
outsl
inc
test
cmp
push
xor
dec
subb
inc
mov
or
jmp
lret
adcb
add
cwtl
ss
stos
in
mov
les
bound
mov
mov
enter
inc
inc
repz
push
nop
xchg
int3
cmp
loopne
mov
roll
and
sbb
lods
xor
dec
sbb
arpl
jbe
mov
mov
pushl
stos
imul
ss
add
mov
iret
or
sti
sub
loop
mov
mov
add
sub
std
and
div
mov
mov
call
and
mov
iret
std
jbe
mov
or
rcrl
sar
je
cmp
enter
mov
mov
or
stos
sbb
fnsave
mov
ss
push
push
pop
sbb
pop
xchg
jp
push
popf
sbb
add
xchg
in
sbb
pop
adc
pop
pop
call
pop
imul
add
mov
addb
dec
inc
jnp
dec
out
popl
jmp
pop
in
pop
add
push
insb
sarb
jmp
dec
mov
add
push
mov
add
push
mov
sub
or
push
iret
test
mov
sbb
bound
or
cmp
test
push
jo
push
std
sbb
jg
mov
pusha
nop
pop
cs
lret
scas
insl
mov
mov
mov
mov
lret
in
mov
mov
mov
mov
jbe
imul
lret
mov
gs
xchg
gs
insb
outsl
jb
pop
xchg
gs
and
fcmovu
gs
dec
test
loop
mov
popa
pop
in
push
out
dec
out
rol
mov
call
xchg
insl
dec
shll
outsb
je
lods
xor
inc
dec
in
imul
ret
les
lds
mov
enter
lret
cmp
int3
hlt
xchg
push
xchg
xchg
mov
push
cwtl
cltd
lcall
lret
mov
mov
mov
mov
pop
cmpsl
test
push
test
shll
stc
loopne
mov
mov
xor
inc
cmp
shr
test
pop
pop
lock
pop
xor
aaa
rclb
nop
lods
pop
aaa
inc
into
dec
insb
inc
in
pop
push
inc
adc
lods
sbb
mov
push
cmp
data16
cmc
cmp
pusha
leave
push
cmp
in
and
pop
dec
rolb
gs
jae
hlt
xchg
fcomps
adc
movsb
sti
inc
pop
pushf
in
sbbl
jg
out
jmp
test
sar
cmp
inc
jge
sti
cmp
or
loopne
cwtl
add
xchg
loopne
xchg
imul
inc
push
data16
pushf
pop
cli
inc
dec
mov
mov
outsb
jecxz
test
out
cmp
push
push
inc
sub
outsl
scas
nop
jmp
aaa
xor
test
sbb
test
jmp
pop
adc
push
mov
nop
repnz
leave
lea
or
cli
call
sbb
xor
adc
cld
cmp
cmc
cld
xor
mov
mov
data16
xchg
mov
push
loop
cmp
and
push
notl
mov
add
push
pop
lock
sub
cwtl
loope
cld
mov
mov
xor
lahf
pop
test
adc
and
adc
pop
notb
jo
pop
insl
sub
cmp
and
or
or
out
adc
mov
adc
dec
adc
inc
in
out
sub
sbb
and
pop
xor
pop
adc
fcmovu
sbb
xor
cmp
fsubrp
test
daa
pop
or
adc
and
mov
adc
dec
negl
inc
cmp
jl
jns
and
inc
mov
fidivrl
outsb
jne
push
js
sub
add
into
mov
fnstsw
rcr
test
mov
cmp
fs
push
or
inc
push
jl
leave
insl
imul
in
pop
hlt
adc
cmpsb
add
les
lock
in
cmp
push
xchg
cmp
push
shr
cmp
iret
xchg
mov
xor
jnp
jbe
mov
mov
jae
jnp
xchg
mov
jne
cmpsb
mov
cs
push
jge
negb
xchg
mov
jno
flds
or
andb
cmpsl
sub
clc
popa
dec
jne
adc
xor
and
sbb
cmp
push
and
xlat
jmp
scas
lock
mov
add
or
cmpb
popa
mov
push
push
inc
hlt
mov
in
andl
pop
or
call
mov
or
sti
cs
add
mov
and
pop
add
fs
pusha
mov
adc
int
cld
test
jl
xor
sub
outsl
jp
cmpsl
insb
insb
shll
push
imul
fidivl
fildl
push
data16
fidivs
fbstp
cmpsb
imul
bound
cli
sti
cld
std
insl
xlat
insb
int
icebp
lcall
mov
add
xor
mov
mov
cmpsb
imul
roll
push
outsb
fs
pop
mov
xorb
enter
pop
mov
pop
ror
dec
popa
js
mov
lret
je
outsl
outsb
xor
pop
inc
jb
icebp
add
push
jb
ret
adc
inc
pusha
ss
adc
cmpsb
pusha
or
mov
cmp
sbb
xlat
inc
mov
ja
push
adc
cmp
push
pop
push
hlt
add
xor
xor
int
pusha
adcl
in
pusha
push
ljmp
and
ret
push
loope
xchg
adc
je
lcall
outsl
cmp
pop
mov
je
mov
cs
lock
imul
fnstenv
flds
cmp
push
mov
jae
sub
int
pop
mov
mov
repnz
adc
add
push
loopne
adc
fmuls
mov
xor
jnp
adc
ds
xor
fsubr
sbb
out
outsl
or
mov
add
call
rolb
shl
ret
mov
pop
loopne
lock
jge
lds
and
jg
xlat
or
mov
rcrl
xchg
repz
retw
push
push
stc
inc
in
cmpsb
sbb
fs
lret
inc
and
sub
mov
pop
push
adc
dec
xchg
or
jne
xor
push
and
ljmp
xor
jae
ret
hlt
push
mov
sbb
icebp
std
aas
dec
insb
mov
clc
lea
push
test
cmp
movsl
movsb
cmp
hlt
pushf
inc
loopne
inc
nop
and
cmp
std
scas
rcl
clc
mov
pusha
mov
les
add
lds
cmp
push
add
add
test
add
pop
push
push
dec
test
mov
pop
push
pop
clc
and
cmc
mov
aas
fdivl
andb
sbb
cli
xor
and
push
clc
add
add
out
push
dec
jo
push
or
popa
fwait
in
cmp
hlt
cs
fs
insb
push
shll
inc
je
dec
shrl
jbe
shll
outsb
data16
adc
ret
sub
orb
jne
add
cltd
adc
cwtl
xchg
push
orl
xchg
xchg
jae
loopne
dec
mov
hlt
xchg
mov
adc
inc
xchg
fs
inc
xchg
push
xchg
test
cmp
jo
das
adc
call
and
add
mov
inc
cmp
add
push
sbb
aas
sub
push
mov
rorb
jecxz
jno
inc
in
sub
in
scas
sbbb
jl
stos
push
adc
xor
add
or
lcall
xor
mov
hlt
imul
into
pop
lods
jle
push
push
aaa
mov
jne
dec
cmp
mov
in
pusha
fsts
mov
leave
adc
sbb
xor
cld
pop
cmpsl
xchg
xchg
dec
xlat
push
mov
and
enter
orb
sub
and
mov
jmp
mov
jl
mov
mov
mov
sbb
je
sbb
or
xor
adc
push
xchg
idivb
scas
pop
sbb
adc
test
push
pop
xor
fidivrl
mov
mov
fldcw
imul
pop
and
or
push
cmp
adc
insl
ss
das
das
pusha
and
mov
mov
pop
in
mov
cmp
pop
jl
mov
ljmp
add
rorb
mov
enter
cmp
sbb
in
decb
imul
rorl
es
shll
add
std
sub
sbb
lcall
leave
push
setne
enter
adc
adc
lods
stos
add
cmpb
mov
lock
mov
popa
push
add
outsb
inc
pop
cmp
outsl
mov
arpl
add
pushl
in
call
lcall
je
ror
or
mov
jle,pn
in
add
dec
cld
lret
push
xchg
fildll
and
fidivl
popa
cmp
pop
lcall
lret
cmpsb
imul
xchg
dec
shll
movsl
cmpsb
cmpsl
jo
sub
cmpsb
imul
mov
cmp
dec
inc
lret
jb
dec
and
dec
shrl
fs
shll
fs
shll
sub
add
je
das
enter
xor
ror
lret
int3
int
inc
pop
shll
rcl
adc
xor
shll
aad
xlat
aaa
fcomp
cmpsb
imul
imul
and
cmpsb
imul
and
imul
jmp
and
imul
jg
jae
imul
test
mov
dec
xorb
incb
push
call
iret
test
hlt
sub
sub
push
or
sbb
sti
push
push
dec
shlb
inc
cwtl
xchg
in
push
sub
adc
jge
mov
testb
jl
lea
or
adc
je
fcompl
mov
sub
pop
je
int
push
inc
or
pop
hlt
comiss
push
xchg
jo
xchg
pop
call
cmp
sub
mov
in
adc
adc
mov
pop
int3
icebp
shlb
testb
ljmp
push
testl
pusha
jno
mov
adc
pop
push
add
push
add
loopne
xor
or
pop
mov
bound
nop
mov
xchg
stos
lock
dec
sbb
push
push
fdivrs
imul
inc
xor
sbb
dec
mov
and
push
cmp
inc
cmp
outsl
mov
es
icebp
sbb
sbb
pop
pusha
test
imulb
mov
jnp
jp
das
test
push
inc
mov
adc
push
mov
inc
sbb
movzbl
lea
jne
pop
adc
push
sbb
shll
dec
outsl
cmp
aas
lds
xor
mov
enter
cli
mov
lret
aam
fsub
call
pop
mov
push
dec
rorl
mov
jge
int
inc
mov
sbb
adc
sti
mov
clc
call
push
cmpsb
mov
mov
cmp
les
sbb
push
jge
je
inc
pop
push
test
rorb
pop
adc
int3
imul
jl
nop
sbb
dec
cmp
into
idiv
push
jle
ret
popa
loope
cmp
cmp
and
loope
lods
or
xor
add
adc
xlat
and
outsl
je
xor
lret
or
mov
pop
negl
push
ret
or
xchg
popa
adc
or
es
cs
sarl
hlt
push
xor
pop
xchg
gs
push
dec
dec
dec
gs
xchg
gs
inc
push
cs
mov
xchg
insb
insb
mov
fs
rcrb
jo
insb
jne
sub
mov
cs
insb
adcl
daa
call
lcall
lcall
push
jb
imul
or
lds
dec
roll
je
rorl
xor
shll
push
gs
lret
mov
shlb
roll
aam
mov
shll
mov
or
mov
es
and
mov
lcall
cwtl
js
lcall
je
xlat
je
push
inc
push
fnstsw
cmp
xor
loope
loop
in
out
shrl
ds
mov
mov
mov
jb
mov
or
scas
pop
cs
mov
inc
shrl
mov
enter
mov
or
test
xchg
mov
add
aaa
adc
clc
add
jg
std
cld
xor
push
sub
adc
push
mov
xchg
shr
cmpsl
mov
push
jge
jmp
pop
push
mov
mov
push
sbb
outsb
pop
pop
repz
lahf
lea
pusha
add
push
cld
test
pop
push
outsl
push
mov
xchg
das
add
addr16
adc
js
mov
gs
jle
divb
imul
xor
movsb
or
cwtl
xchg
shl
push
sbb
stos
mov
push
mov
loop
and
lock
addl
xor
add
cwtl
jbe
jle
mov
push
mov
addb
cli
sub
in
orb
jo
push
mov
jo
adc
and
mov
adc
subl
or
or
lahf
mov
jmp
adc
les
mov
jbe
mov
lock
clc
push
push
jbe
divl
inc
cmp
jb
inc
incl
pushf
add
add
adc
pop
bound
outsb
enter
lcall
pop
xor
fs
insb
insb
and
mov
jb
jbe
in
mov
jb
jbe
ljmp
jne
xor
loop
rcrb
sub
mov
aaa
call
vmwrite
daa
mov
mov
pop
repz
mov
mov
in
enter
lods
push
mov
cmpb
int
and
inc
popa
jmp
xor
enter
xchg
fisubs
dec
or
call
stos
xlat
ljmp
pop
jle
andps
jb
and
mov
add
aaa
sbb
subb
sbb
and
jns
rorl
imul
or
test
jmp
loopne
add
pop
or
popa
cltd
arpl
ret
and
outsb
cmp
shrl
je
bound
jne
and
shll
insl
bound
inc
jae
je
scas
mov
sbb
aam
cmp
inc
inc
std
std
leave
cmp
loop
xlat
jp
jbe
jae
sbb
std
ret
dec
shll
arpl
xorl
addr16
shll
xor
jne
and
in
fucomp
lds
dec
aas
rcll
and
dec
sbb
andb
sub
and
cmp
xlat
lds
ret
fcomps
rolb
and
cmp
xor
dec
subb
jge
mov
stos
jg
aad
pop
add
inc
xchg
out
pop
mov
cld
loopne
movsl
mov
jae
gs
xchg
aas
popa
arpl
inc
xchg
gs
outsb
cmp
and
or
jae
scas
data16
add
not
popa
inc
test
aaa
or
push
lds
pop
stc
rclb
xor
jp
cmp
dec
ret
ror
push
cmp
adc
stos
fxch
int3
ljmp
cld
enter
iret
or
xor
fisubrs
pop
push
pop
lcall
je
outsl
inc
lcall
dec
xor
rcrb
mov
rorl
shrb
sarb
and
int3
fcomip
je
cmpl
dec
jbe
ds
xchg
js
movsb
das
ja
decb
xor
jno
sarb
sbb
int
jg
push
cmp
or
add
call
jne
fs
pop
pop
andb
popa
or
enter
enter
sbb
inc
add
jmp
into
mov
adc
lret
push
movb
shl
mov
sbb
es
or
call
jmp
and
test
movsl
fwait
xchg
scas
mov
rclb
mov
add
adc
dec
pusha
add
fmull
adc
das
mov
lods
or
test
mov
cltd
stos
das
rorl
fs
xor
add
mov
aas
aaa
sub
cmc
cld
adc
and
leave
mov
out
aaa
cmp
or
lret
cmpb
fidivs
adc
es
jl
loopne
call
mov
push
or
mov
icebp
or
std
cwtl
and
inc
cwtl
and
gs
xchg
aas
popa
arpl
pop
xchg
gs
outsb
cmp
pop
xchg
gs
imul
xor
xchg
gs
lods
scas
scas
xor
adc
push
mov
bound
sarl
mov
mov
mov
rol
ret
es
je
push
in
jne
int3
fildll
mov
aas
popa
arpl
sub
mov
outsb
cmp
sub
jae
jb
jns
mov
lret
jne
movsl
stos
xorl
ret
iret
lcall
jp
outsb
mov
std
sub
mov
dec
jne
pop
pmulhuw
fucomi
jmp
push
shr
sbb
jmp
jmp
xchg
adc
seto
out
and
shrb
mov
push
mov
out
js
sbb
call
mulb
ret
lea
push
xor
call
or
hlt
rolb
pop
cwtl
inc
dec
sub
subl
sbb
cmp
adc
dec
xchg
test
xchg
in
pop
je
outsb
cmp
dec
je
jo
outsl
rclb
cli
lds
sbb
sbb
in
fs
jl
sbbl
imul
lods
inc
in
pop
scas
mov
divb
lock
sbb
ja
clc
popa
imul
popa
arpl
stc
es
idivb
pop
inc
lcall
cs
movsl
xchg
jmp
sbb
jns
out
mov
sub
inc
push
inc
mov
lock
arpl
xchg
movsl
push
aam
jmp
pop
dec
mov
and
push
xor
imul
xor
push
shll
add
fstps
jns
je
insl
call
adc
or
lods
call
sbb
stos
push
mov
mov
pusha
in
or
push
and
scas
cld
jmp
jge
jne
push
lds
mov
or
dec
jle
daa
aad
add
fldt
mov
pusha
or
adcl
shr
insl
add
sarb
jl,pn
sbb
or
insb
outsb
push
outsl
ds
adc
add
or
cli
imul
mov
addb
les
popf
mov
pop
sarl
stos
pop
nop
aas
add
add
push
or
mov
ret
imul
cmpsb
imul
inc
lcall
mov
fs
lods
push
imul
push
push
jmp
gs
dec
leave
outsl
pop
push
andb
gs
xchg
gs
dec
push
dec
inc
dec
xor
push
aaa
inc
rclb
jae
mov
inc
dec
mov
fld
add
mov
clc
rol
cmpsl
int3
imul
and
pop
push
mov
xchg
jb
ret
cmc
xchg
int3
add
inc
rcrl
dec
xchg
les
add
adcl
in
cld
shr
test
je
adc
mov
adc
push
xor
inc
add
pop
cwtl
mov
pushl
movsb
or
mov
incl
roll
test
jo
imul
cwtl
or
adc
push
leave
mov
ret
add
jmp
adc
or
pop
sbb
xlat
cmpsl
loope
sub
ss
in
out
shrb
jmp
int
arpl
outsl
in
insl
inc
js
sbb
out
jo
adc
ret
daa
cmp
inc
loope
cltd
or
xorb
inc
or
jmp
mov
xchg
add
and
xchg
cmp
mov
jmp
jmp
pop
adc
or
and
mov
xor
push
mov
sbb
adc
push
sub
test
test
mov
pop
orl
sub
cmp
xor
pop
add
mov
jo
shrb
mov
inc
in
mov
das
adc
add
mov
xchg
cmp
mov
fwait
les
mov
mov
mov
pop
add
movsb
pop
sbb
mov
outsb
push
and
mov
and
negl
cld
add
mov
out
filds
push
mov
ljmp
sbb
dec
push
pop
scas
sahf
addr16
and
ss
or
lea
and
repz
mov
push
insl
mov
pop
in
aas
pushf
in
mov
sti
mov
dec
mov
mov
pop
and
jl
dec
lcall
test
xchg
lret
dec
sahf
out
mov
mov
jno
sbb
mov
mov
sbb
jo
mov
hlt
mov
pusha
ss
mov
add
and
fcompl
andb
push
mov
popf
fstps
cmp
insl
mov
push
sbb
push
inc
xor
xlat
cli
add
pop
pop
sub
jle
cmova
scas
sub
leave
dec
sub
xor
push
xor
out
popa
adc
js
sub
rorl
or
jno
adc
lret
lock
cwtl
add
or
xchg
cmp
xchg
or
push
add
mov
inc
inc
cltd
xor
sub
inc
or
dec
push
mov
lods
out
data16
es
popf
outsl
inc
adc
aam
sbb
xchg
push
mov
fucomip
call
push
xchg
add
push
and
int3
cmpsl
sbb
jb
inc
test
imul
pop
or
push
test
cli
mov
out
and
xor
xor
pop
loope
pop
sbb
mov
psubb
es
jns
sub
cltd
add
jbe
in
push
push
inc
mov
dec
mov
adc
mov
cmp
mov
pop
hlt
fisttps
in
sbb
cmovns
add
push
ja
notb
test
push
xor
sbb
mov
jmp
cs
lods
lret
pusha
and
sub
sbb
call
js
xchg
dec
ljmp
lods
dec
mov
in
and
pop
mov
in
psrad
push
push
xor
xchg
fsubr
andb
sbb
jp
cmp
mov
sahf
add
mov
icebp
ds
in
adc
xor
push
adc
cmp
sbb
or
call
jne
mov
and
and
jbe
test
ja
mov
sub
sub
mov
lea
or
or
add
pop
inc
adc
add
add
ds
sbb
add
or
xchg
daa
mov
and
mov
shll
and
adc
popa
and
xchg
and
or
push
orb
mov
js
gs
sub
nop
stos
xor
sarl
dec
pop
dec
xor
out
pop
decl
inc
sub
mov
or
popa
int
mov
jle
mov
xor
int
add
push
add
ret
repnz
xchg
or
inc
mov
cmp
jl
ret
filds
jg
mov
cmp
jl
cmp
inc
inc
sahf
ficomps
fidivs
lea
es
jge
xor
mov
adc
or
iret
and
negb
lods
loopne
jbe
daa
mov
adc
jmp
sbb
sbb
add
xor
xor
push
push
mov
lods
xlat
ds
loope
sysenter
sub
sbb
cmpsb
mov
pushl
sbb
add
cltd
shrl
push
pushl
push
or
add
and
test
mov
cwtl
adc
call
in
daa
jge
out
jp
nop
inc
test
push
repnz
les
inc
dec
cmpl
xor
xor
or
and
xor
xor
cmpsl
nop
add
adc
inc
and
ss
cld
xor
leave
add
push
inc
and
push
xor
repnz
add
cmp
add
insb
dec
enter
add
sbb
jb
xchg
xchg
enter
mov
data16
jle
pusha
inc
scas
loop
jg
xchg
gs
xchg
enter
outsb
je
add
jae
xchg
mov
hlt
jo
add
fisttps
aam
cmp
and
jno
push
xchg
loopne
jnp
jbe
sbb
movsb
add
aaa
sbb
jne
inc
mov
add
leave
and
sbb
and
int3
jne
xor
jl
jecxz
cmp
loopne
cmp
add
inc
push
or
sub
jmp
push
push
call
add
fsubs
sti
jnp
test
or
hlt
jne
sub
and
movsb
test
insl
or
mov
xor
push
jge
dec
add
and
push
sbb
mov
in
mov
popa
call
mov
iret
pop
pop
test
jb
cmp
add
add
xor
nop
mov
xor
fadds
mov
add
ds
ja
adc
dec
xor
bound
mov
arpl
ret
adc
cli
insl
cmp
jl
mov
je
mov
or
imul
adc
jl
js
into
mov
or
add
and
dec
les
inc
pop
leave
add
xor
add
xchg
fmull
push
mov
cwtl
xor
xor
daa
or
es
xor
test
push
mov
and
jne
mov
push
push
push
je
jo
aad
sbb
add
loop
xchg
aam
add
test
aad
leave
mov
add
js
sub
jb
gs
pusha
push
push
xchg
push
aam
sbb
xchg
sbb
dec
mov
push
nop
xchg
fdivrl
leave
std
cmp
dec
add
loop
cld
test
jo
daa
cmp
push
pop
push
xchg
xchg
outsl
cmp
fwait
outsl
mov
push
adcb
push
push
push
les
scas
pop
or
idiv
icebp
mov
mov
and
mov
loope,pt
int
add
rcrb
test
and
lcall
inc
push
inc
pmulhuw
and
shlb
imulb
jne
dec
rcr
mov
mov
sub
or
or
jae
add
xor
inc
aad
xor
xor
popf
xchg
sub
arpl
fs
aas
xor
sbb
jmp
add
cld
adc
cmp
or
hlt
cmp
jnp
clc
test
add
push
mov
mov
movsb
mov
sub
dec
test
dec
jbe
subb
adc
fmul
cmpsb
adc
cmp
adc
in
xchg
add
dec
mov
add
add
inc
jb
arpl
decl
sub
push
add
je
fldenv
push
out
add
push
movsl
int3
stc
pop
jg
add
inc
inc
jmp
mov
jne
or
and
mov
push
dec
ss
pop
pusha
push
cmp
lods
stos
inc
inc
jg
loopne
lret
xor
aas
and
xchg
add
sbb
xchg
fsubrs
dec
incb
sbb
adc
sbb
xchg
or
and
shrb
test
push
push
push
andb
add
aad
dec
addl
jae
add
xlat
cmp
and
push
stos
test
fwait
jecxz
push
lods
mov
pop
push
outsl
imul
push
mov
inc
or
or
or
push
add
and
js
pusha
dec
aad
add
pop
pusha
addl
jo
mov
rcrl
outsl
adc
sub
inc
call
add
push
jge
mov
add
insb
pop
add
pushf
movl
dec
decl
xchg
test
test
arpl
outsl
insl
insl
cmpsb
dec
adc
stc
adc
jmp
ss
push
add
add
popa
cmp
test
sbb
sarl
xor
cmp
sub
inc
sti
fldl
pop
and
dec
jae
ret
mov
add
dec
dec
sbb
addr16
add
mov
sbb
pop
or
xchg
push
dec
lldt
shll
inc
jns
push
fnstcw
je
mov
and
jb
insl
inc
or
dec
fldcw
sbb
mov
mov
and
lea
dec
add
jno
mov
sub
adc
rcrl
mov
jnp
movsl
xor
ds
jb
cmp
adc
inc
outsb
jne
shrb
gs
test
ret
or
sub
adcb
add
dec
add
add
add
pop
sarb
fidivrs
pop
jnp
daa
add
mov
lcall
data16
inc
xchg
popa
pushf
xchg
fistps
or
mov
inc
cltd
clc
jge
rcll
sub
pop
adc
cmc
push
jo
push
and
cmp
push
cmp
mov
ret
push
ja
aas
aas
xor
inc
pop
push
add
addr16
jge
loope
nopl
sbb
mov
xchg
bound
insl
sbb
outsb
cwtl
in
or
add
dec
add
add
add
mov
inc
popa
mov
insl
push
inc
pop
xor
sbb
fbld
and
sbb
clc
or
push
sub
or
xor
adc
pop
inc
fcoml
adc
add
jnp
inc
sub
jle
xor
dec
inc
dec
push
dec
pop
daa
sub
xchg
xlat
pop
je
dec
mov
lret
xlat
jne
ret
call
pop
pop
mov
sbb
loop
insb
mov
paddusb
loopne
cwtl
sub
and
in
pop
sub
or
jnp
inc
fldenv
dec
adc
push
xor
pusha
cmp
cmp
in
cmp
inc
ds
ds
aas
inc
aas
dec
aas
push
aas
pop
aas
fs
push
aas
je
js
mov
aas
cli
aas
inc
lods
sub
jmp
ds
xor
xor
imul
xor
je
add
jmp
xor
xor
xor
inc
xor
ja
lea
fwait
pushl
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
mov
xor
xor
fidivs
iret
ss
aaa
sub
xor
pushl
add
jb
mov
test
out
icebp
aaa
sub
cmp
decl
push
cmp
cmp
cmp
cmp
jne
adc
and
xor
pusha
cmp
xchg
xchg
cmp
pop
push
cmp
cmp
xor
xor
call
fnstenv
pusha
aaa
data16
jg
mov
cltd
aaa
mov
lret
aaa
or
sbb
inc
cmp
fnstcw
loop
add
or
xor
cmp
inc
cmp
cmp
cmp
cmp
cmp
cmp
decl
cmp
mov
cmpsl
cmp
cmp
cmp
cmp
cmp
cmp
cmp
lock
cmpsb
lcall
aas
mov
jmp
aas
mov
ljmp
xor
xor
xor
xor
xor
rdmsr
aaa
cld
call
sub
scas
pop
xor
xor
xor
xchg
pushl
enter
ljmp
xor
push
ljmp
mov
xchg
xor
ret
xor
xor
xor
xor
xor
xor
xor
jmp
jge
xchg
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
sub
inc
inc
sti
call
fs
ss
jae
mov
pushf
aaa
movsl
aaa
mov
mov
aaa
pop
pushl
cmp
pusha
cmp
cmpl
mov
mov
cmp
cmp
cmp
inc
cmp
mov
ja
sahf
cmp
cmp
cmp
sarl
push
cmp
cmp
cmp
cmp
popa
cmp
decl
in
cmp
cmp
pop
cmp
cmp
cmp
cmp
cmp
cmp
cmp
incl
dec
cmp
je
jns
loopne
out
and
sub
cmp
dec
outsl
aas
or
xor
xor
xor
jmp
xor
xor
pop
xor
xor
xor
xor
xor
pop
lcall
inc
xor
lods
xor
xor
xor
cmp
inc
xor
dec
xor
pop
and
xor
jnp
xorl
mov
sar
pop
add
ss
out
ss
aaa
mov
std
pushl
fidivl
call
aaa
or
cmc
cmpsl
cmp
cmp
jg
icebp
cmp
cmp
add
cmp
cmp
pop
cmp
jno
cmpl
cmp
nop
cmp
cmp
cmp
stos
cmp
cmp
cmp
mov
mov
cmp
cmp
jmp
and
xor
sarl
rorl
cld
out
ds
or
adc
sbb
mov
sahf
aas
test
aas
lret
aas
fdivrs
out
in
aas
idivl
lcall
pop
cmp
repz
xor
xor
xor
or
pushl
push
xor
xor
xor
xchg
jns
jg
pushl
shll
cmp
inc
xor
xor
xor
xor
xor
xor
jecxz
xor
xor
xor
sar
pushl
xor
xor
xor
adc
aaa
xor
jo
xchg
mov
scas
xor
xor
or
fdivrl
pop
aaa
aad
adc
xlat
sar
incl
cmp
inc
rcll
cmp
cmp
cmp
cmp
mov
fucomip
cmp
cmp
cmp
cmp
cmp
in
cmp
cmp
dec
push
sbb
cmp
inc
cmp
push
cmp
popa
cmp
jo
ret
cmp
jl
xchg
mov
xchg
cmp
cmp
std
fistpll
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
mov
inc
cmp
push
cmp
cld
add
jo
mov
xchg
loope
jg
ret
cmp
pop
ljmp
sbb
cmp
cmp
cmp
cmp
clc
decl
or
sub
xor
pop
dec
cmpb
clc
mov
jns
cmp
sub
ds
outsb
cli
jmp
outsb
xchg
nop
ds
aas
push
aas
and
sub
aaa
popf
push
aas
outsl
sahf
sbb
mov
aas
cltd
aas
mov
cmpsl
nop
ljmp
mov
add
jnp
test
nop
xor
scas
xor
cli
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
lds
sbb
and
ja
xor
xor
lcall
xor
xor
xor
xor
fists
pusha
xor
xor
xor
xor
xor
jne
pushl
repz
or
jns
xchg
ss
ss
pushl
jl
mov
cmpsb
aaa
lods
aaa
or
inc
cmp
cmp
xchg
scas
cmpsl
in
adc
dec
jg
cmp
cmp
dec
cmp
cmp
cmpb
cmp
je
lds
pop
cmp
ja
call
cmp
cmp
xchg
xchg
dec
cmp
xchg
lahf
lea
jl
cmp
cmp
dec
push
cmp
cmp
incl
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
leave
fwait
insb
mov
mov
mov
or
adc
add
sti
ret
inc
sbb
adc
mov
nop
mov
out
mov
jno
mov
je
dec
pop
shrb
dec
ja
mov
adc
and
add
mov
xchg
pusha
adc
push
sub
movsl
adc
pop
pusha
add
and
cs
mov
add
or
push
jb
push
cmpxchg
in
enter
push
cmp
and
inc
ret
inc
and
pop
inc
xchg
inc
les
add
push
adc
push
add
mov
lcall
xor
pusha
mov
dec
xor
xor
out
cmpsb
jmp
add
lcall
addl
out
in
mov
mov
lcall
pop
mov
jg
add
sub
test
addr16
pop
push
xchg
dec
dec
inc
and
and
data16
or
movsl
sbb
pop
or
call
bound
and
outsl
jne
jae
xor
call
push
scas
jl
or
pop
sub
push
and
inc
movsb
lods
mov
shr
add
inc
push
dec
dec
adc
pop
inc
cld
outsl
and
sub
push
push
inc
and
sbbl
add
adc
daa
push
pop
mov
push
rep
push
outsb
outsb
or
and
ret
mov
inc
mov
push
sub
and
lods
pop
hlt
enter
sbb
xorb
mov
enter
push
xor
sbb
shll
cltd
adc
add
aam
arpl
sbb
pop
sbb
js
sub
jbe
js
mov
pop
mov
cltd
add
cwtl
in
lods
loop
in
cmp
pop
ds
mov
mov
pop
in
jne
sbb
push
adcl
imul
mov
inc
lock
add
push
xchg
lret
or
mov
lock
cmp
mov
cmpl
jbe
adc
and
and
sub
test
mov
mov
popl
out
jnp
mov
and
mov
sbb
mov
dec
sbb
sbb
and
or
inc
cli
es
ds
lret
pop
mov
and
or
dec
sbb
adc
iret
sbb
pusha
xor
add
stos
push
inc
sbb
imul
lds
test
insb
insb
mov
dec
insl
insl
mov
je
xorl
lret
dec
dec
inc
inc
lods
and
push
mov
jo
mov
loopne
test
cmpl
je
lcall
cwtl
gs
add
insl
adc
push
jo
jbe
mov
shrl
add
test
and
call
pop
mov
cmp
out
sub
lods
loopne
add
xchg
arpl
push
and
mov
cmp
and
mov
or
jmp
mov
in
or
xor
js
adc
shll
pop
mov
aas
mov
sbb
and
add
pop
sbb
rclb
jmp
add
xor
sbb
jg
and
push
xor
push
subb
pop
ds
xchg
xor
fcompl
mov
sbb
xchg
es
inc
test
pop
lods
and
adc
add
or
inc
outsl
jnp
jge
in
lahf
in
loope
mov
dec
xor
mov
into
pop
push
rorb
inc
and
push
scas
adc
in
push
mov
les
and
pop
inc
in
and
pop
and
mov
adc
and
and
adc
inc
sbb
push
adc
leave
das
and
cmp
push
repnz
xchg
pop
pusha
xchg
add
inc
mov
push
pop
pop
xor
nop
mov
push
push
jns
xor
mov
pop
and
movb
or
mov
mov
inc
xor
fwait
mov
mov
and
mov
mov
inc
xor
shll
and
mov
dec
fcoms
out
jl
push
lods
scas
sbb
std
scas
push
outsl
jae
enter
mov
push
mov
mov
and
mov
mov
mov
stos
pop
add
jne
adc
and
inc
push
test
stos
dec
xlat
lea
push
jle,pn
arpl
sbbb
mov
pop
mov
test
insb
bound
sub
jb
in
mov
js
orb
mov
pop
sub
add
pop
gs
or
fistpl
and
fmull
push
or
cmpsb
fldcw
rolb
add
push
ret
add
push
sahf
fs
subb
pop
xchg
outsb
outsb
gs
or
pop
gs
fs
mov
outsb
insb
popa
jne
mov
lret
mov
push
push
subb
jno,pn
pop
mov
dec
addr16
imul
gs
dec
adc
jo
sub
mov
outsl
jb
enter
and
mov
ficoml
test
and
mov
into
xchg
in
push
ret
sete
ljmp
add
ror
and
mov
or
clc
insb
mov
sbb
dec
sub
sar
add
popa
clc
lcall
test
cmpb
and
inc
rep
mov
jns
mov
out
ret
add
aas
pop
enter
push
shlb
sub
aam
add
fcomp
cwtl
rcr
sbb
or
or
mov
or
out
mov
call
shl
clc
dec
and
mov
data16
inc
add
pop
mov
push
out
mov
fmuls
ret
js
mov
andb
test
test
test
jp
mov
and
aas
xor
sbbl
push
adc
out
xchg
shrb
xor
pop
mov
arpl
inc
add
stos
in
and
dec
or
jo
aas
mov
call
pop
pop
add
rorb
nop
add
mov
insb
sub
xchg
add
sbb
adc
loope
and
mov
add
add
add
cwtl
pop
and
add
mov
sbb
lcall
loopne
das
sti
add
dec
jae
mov
jl
cmp
xchg
das
sub
adc
pop
mov
cs
mov
shll
fdivrl
leave
jnp
inc
sub
rorl
and
mov
and
mov
sub
sbbl
pop
les
jge
les
mov
dec
jno
inc
push
rcrb
sbb
lcall
cs
clc
lret
in
adc
mov
xor
out
lock
loop
lcall
mov
stc
push
mov
push
outsb
jb
and
icebp
or
mov
js
add
dec
leave
cmpsb
mov
fs
jno
adc
xor
jb
mov
imul
xor
incl
dec
insl
insl
dec
jae
int3
sbb
add
xchg
inc
adc
mov
and
xchg
dec
push
nop
rclb
add
cmp
xor
in
daa
shrl
sbb
add
xor
xchg
int
fsubrs
sub
xchg
and
ret
push
imul
xor
leave
fdiv
xor
or
dec
shrl
cmpsb
sub
sarl
scas
pop
ss
out
clc
or
and
or
imul
xchg
leave
add
lret
adc
push
xchg
mov
pop
movsl
adc
jl
xor
lods
jno
adc
adc
or
dec
mov
bound
aaa
int3
inc
cmp
add
lea
jne
cmc
test
setb
inc
mov
inc
jbe
sbb
loop
stc
adc
ljmp
adc
jno
loope
mov
adc
in
xchg
adcb
aam
dec
or
and
imul
or
jns
mov
jo
xchg
jns
cmpsl
popa
mov
or
mov
xor
xchg
sbb
push
mov
inc
imul
mov
jno
jns
add
popa
psubsb
inc
add
add
add
sub
pusha
int3
add
clc
push
pop
add
xor
or
dec
inc
cmovns
inc
or
add
imul
mov
cmpsl
out
add
sahf
and
dec
mov
or
out
pop
jecxz
or
dec
outsl
and
mov
scas
jnp
jecxz
inc
and
cmp
pop
mov
outsb
inc
jae
and
popa
cltd
pop
xlat
jns
popa
and
add
outsb
lods
fildl
arpl
inc
lds
ss
push
negl
gs
sub
push
adc
push
lds
jb
xorb
cmp
fnstenv
xor
sbbb
lret
mov
xchg
pop
dec
idivl
sbb
jo
popf
addr16
jnp
cwtl
add
sub
scas
xor
jle
add
jmp
pop
fs
or
mov
push
sub
dec
dec
imul
push
daa
mov
lahf
sbb
mov
mov
outsl
pcmpeqw
jae
mov
or
xor
inc
push
imul
and
arpl
xchg
jbe
loope
xchg
out
add
cmp
xor
int
cld
or
or
adc
xor
cld
lret
mov
xor
xor
inc
xor
decl
inc
mov
fisttps
xor
xorb
xor
and
pop
push
imul
lea
mov
cmp
inc
cld
dec
pushl
insl
aaa
je
mov
scas
aaa
mov
cmp
outsb
adc
or
lcall
outsl
add
cmp
cmp
adc
cmp
cmp
cmp
inc
cld
call
insl
cmp
cmp
cmp
cmp
incl
or
jo
call
ds
ljmp
sbb
push
lcall
ds
or
inc
test
nop
fcoms
push
dec
add
push
gs
test
mov
add
les
sbb
add
bound
xchg
sbb
loop
sub
add
rolb
cld
add
push
rolb
rolb
add
pop
sbb
add
add
adc
add
ret
add
sti
and
roll
dec
outsl
jbe
loopne
add
add
add
add
popa
add
insb
mov
xchg
xor
push
add
add
mov
add
inc
sub
add
mov
add
popf
roll
or
sbb
rcll
push
popf
data16
mov
add
add
mov
sbb
pop
insb
dec
add
int
and
inc
mov
lods
sub
repnz
mov
add
pop
sub
sahf
push
movsb
sbb
inc
push
and
add
popf
add
movb
nop
jne
mov
xchg
push
adc
sbb
sahf
pop
vandnpd
sbb
stos
cmp
xchg
push
jne
fs
add
xorl
and
add
incl
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
