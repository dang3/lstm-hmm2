imul
call
in
sub
push
push
lea
push
xor
push
mov
add
sbb
ss
int
jmp
jo
insb
in
jne
dec
mov
out
jae
out
cs
es
mov
int
push
call
mov
cmp
je
shlb
inc
push
push
insb
lahf
out
xchg
ret
inc
push
lds
data16
je
dec
enter
lret
in
jnp
cs
inc
push
int
into
arpl
outsl
fldt
jbe
shrl
shlb
shll
call
jg
or
ret
pop
mov
js
movsb
movsb
iret
repz
movsl
cmpsb
cmpsl
test
stos
cmp
repz
lods
lods
scas
scas
repz
repz
mov
mov
fnstcw
iret
mov
mov
xchg
mov
xor
mov
mov
idivb
loope
jmp
lea
push
push
cld
push
call
pushl
dec
pop
pop
pop
mov
xchg
jge
sbb
cld
dec
dec
cmp
xor
and
popa
sbb
test
pop
je
inc
add
cmp
fdivrp
fistpll
jb
jmp
mov
imul
add
lea
movsl
add
ja
dec
pop
inc
or
pop
pop
pop
leave
ret
pop
testb
sub
in
movl
add
dec
push
fldcw
xchg
jne
jae
gs
jb
sahf
data16
xor
xor
repz
repz
imul
outsb
push
in
in
out
and
out
call
ja
roll
je
inc
inc
gs
push
arpl
outsb
cmp
mov
or
push
push
push
mov
sarb
in
jnp
push
rorb
ret
mov
mov
js
mov
push
mov
loopne
aaa
mov
popa
fdivrs
cmp
mov
sub
sub
data16
cld
cmp
jb
adc
fsincos
mov
push
push
adc
clc
sbb
rcrb
or
nop
sbb
adc
jns
xor
iret
push
ds
das
mov
and
int3
in
inc
mov
frndint
jp
pop
add
loopne
jns
mov
add
movb
data16
out
sahf
out
fcomp
fcmovu
push
in
sahf
shrb
sub
test
or
cmpsl
cmp
jae
sub
xor
je
jne
jbe
xor
repz
popa
js
jns
xchg
out
jp
inc
jnp
aaa
jge
outsb
movsb
jns
insl
jle
cmpsl
adc
mov
xor
inc
xorl
ss
int
test
dec
xchg
mov
pop
shrb
mov
adc
stos
mov
cld
mov
ljmp
popa
xchg
jbe
repz
xchg
gs
xchg
xchg
xchg
cwtl
sti
mov
cmp
fwait
inc
outsb
pushf
popf
insb
into
mov
nop
data16
gs
mov
add
cmp
cmpsb
in
shrl
leavew
jne
lret
int3
je
int
ds
jb
iret
shlb
shll
sarb
je
sahf
mov
lahf
out
mov
jae
enter
jae
jp
pop
shrb
in
xor
dec
adc
arpl
push
mov
clc
sbb
push
push
jle
out
mov
data16
or
sahf
repnz
add
pop
jns
dec
in
pop
addr16
gs
inc
das
pusha
push
pop
ss
in
fs
scas
mov
stc
or
lea
imul
xor
add
fcmovnu
fiadds
push
std
and
cmp
rolb
pop
or
rep
inc
fs
xor
dec
mov
add
les
in
fiaddl
or
std
mov
shll
jmp
xor
fistps
loopne
push
ror
out
mov
add
sbb
mov
pop
je
dec
int
mov
out
or
adc
orb
push
or
insb
jl,pn
adc
mov
jmp
out
fildl
push
mov
js
pop
loopne
mov
jo
mov
push
mov
dec
push
aas
movsb
push
mov
xor
mov
in
mov
stos
stos
ss
sbb
scas
adc
and
or
push
into
shlb
in
cmp
addr16
orl
or
mov
lock
imul
push
aam
out
and
push
add
test
xor
jl
scas
aas
mov
lahf
dec
sub
sbb
fwait
clc
clc
jae
dec
cs
cli
add
cld
cwtl
loop
lock
jne
pop
push
lea
push
das
push
cmp
cmp
jb
movl
pop
rorl
mov
mov
iret
dec
dec
gs
std
insb
sub
and
rcrb
mov
ja
mov
dec
loope
mov
mov
adc
add
lahf
pusha
mov
stos
xor
sub
mov
testb
lret
or
inc
shr
jne
add
ds
or
add
dec
jne
je
sar
pop
xchg
roll
orb
add
cmp
jae
xor
mov
mov
mov
dec
je
xor
sub
es
adc
fdivs
mov
or
rcrl
int3
xor
push
xchg
pop
mov
cmpsl
pop
mov
inc
add
inc
ret
paddsb
add
inc
jmp
inc
fadds
lcall
nop
testb
fs
divl
inc
fsubrl
fisubs
fbld
xchg
cmpsb
imul
or
iret
mov
push
aam
loope
mov
outsb
jmp
data16
mov
xchg
push
dec
dec
mov
or
push
arpl
xchg
cmp
es
push
push
je
sbb
daa
mov
and
adc
outsb
daa
outsb
mov
mov
hlt
mov
pop
cmp
jne
xchg
dec
jle
push
mov
scas
test
in
enter
mov
lcall
bound
add
push
leave
in
call
cmp
jbe
cmp
pop
inc
mov
inc
fistpll
jl
or
inc
add
push
xor
sbb
jo
clc
pop
mov
mov
or
or
std
jo
cmp
add
push
add
and
or
mov
js
in
xor
cmp
je
cwtl
add
aaa
or
or
dec
rcrb
gs
sbb
dec
mov
dec
add
mov
shlb
or
test
js
or
mov
pushl
mov
aas
jae
sahf
hlt
jle
lahf
out
test
or
jnp
test
loope
je
movsb
push
scas
xchg
shll
xor
and
into
xor
ds
repz
rcl
rcl
xor
sahf
out
aad
xlat
fcomp
repz
repz
fcmovnu
fstp
out
mov
fnstsw
xor
loope
loop
int
jns
in
out
call
idivb
jmp
jl
fs
repz
sarl
cmp
cmc
div
fs
lahf
cmpsl
jge
stc
cli
mov
xor
cld
std
jae
movl
cmp
test
push
jo
pop
cmp
pop
stos
test
xor
cmp
adc
in
enter
add
std
hlt
jge
pop
js
ret
dec
mov
clc
xor
dec
cmpsb
push
test
repnz
imul
js
jae
adc
and
sub
or
mov
jns
mov
outsl
push
imul
xor
lods
cmp
gs
cltd
jo
mov
fwait
pushf
pop
popf
es
sahf
jne
push
mov
mov
scas
pop
loope
subl
push
in
scas
loopne
dec
adc
clc
pop
xor
sbb
inc
pusha
jmp
or
jne
jno
mov
add
xor
int
mov
icebp
repnz
out
repz
std
lret
test
push
push
iret
lcall
lea
push
inc
loope
push
lea
fwait
insl
mov
stos
push
movsl
cmpsb
je
fldcw
inc
test
test
sarl
lods
scas
push
scas
es
lock
mov
pushf
icebp
mov
mov
mov
scas
mov
xchg
imul
xchg
imul
cmp
push
gs
imul
shll
test
out
sahf
out
fcomp
fcmovu
data16
faddl
inc
orb
je
mov
inc
gs
xchg
pop
or
jne
mov
fidivrs
mov
inc
ret
les
out
enter
mov
xchg
fstl
imul
push
sbbb
push
push
cld
psubsw
cs
sub
or
mov
jmp
fs
or
in
push
push
lret
incb
mov
cmp
popa
jae
arpl
imul
aas
pusha
jb
jecxz
data16
mov
sti
jmp
push
adc
mov
ljmp
pop
call
or
adc
neg
sbb
pop
dec
test
inc
inc
xchg
sub
mov
push
cmpsb
jns
int
cmpsl
popa
test
test
dec
ret
out
lods
insb
jo
inc
xchg
push
fcoml
mov
fwait
lods
mov
and
inc
add
lret
push
loopne
mov
add
pop
sbb
sub
xchg
mov
push
pop
jl
popf
ret
addb
mov
call
sahf
jne
add
xlat
rol
or
jo
mov
aas
in
lea
not
jmp
jge
mov
pop
enter
repz
movsb
arpl
pop
mov
sbb
fldcw
mov
sahf
adc
xchg
xchg
cmp
xchg
jmp
jnp
mov
or
or
mov
ss
xchg
mov
add
cmpsb
xor
mov
sub
ljmp
insb
mov
lock
push
pop
in
mov
in
dec
out
or
jl
out
and
push
or
adc
or
pop
or
mov
out
and
loopne
push
mov
mov
mov
inc
jle
test
add
hlt
cmc
inc
notb
mov
in
add
repnz
or
lret
fcomi
cmc
lret
orl
iret
xchg
lret
rorb
scas
inc
dec
data16
jg
push
lea
push
fdivl
fldl
mov
fimuls
filds
loopne,pn
loope
loop
dec
in
add
fcomps
push
push
addr16
xchg
or
js
jle
jns
push
pop
pop
pop
jnp
and
imul
sbb
repz
xor
sub
mov
ficomps
push
sbb
cmp
pop
popf
sbb
imul
and
sub
fimuls
cmp
in
sbb
in
jb
out
jae
add
enter
enter
mov
jb
and
insb
mov
pop
int3
dec
dec
sbb
cmp
xor
sbb
mov
jecxz
mov
jb
xorl
jb
xchg
test
jb
xchg
mov
add
pusha
mov
je
lea
cmp
cs
jp
shlb
jge
cld
nop
sbb
clc
jb
jne
xorl
dec
push
mov
mov
pop
or
rorb
out
cmp
jbe
xor
test
jbe
fcmovnu
xor
inc
or
xor
mov
mov
xchg
icebp
iret
in
ja
sub
jne
sbb
into
jb
ret
cmp
out
jmp
xchg
pop
and
or
test
add
sub
stc
mov
sti
inc
fdivr
lea
ficoml
and
sub
jge
or
push
push
in
fsubs
jo
lahf
fdiv
pop
loopne
mov
cmpsb
jge
fs
add
push
cltd
push
out
and
or
xchg
mov
fldlg2
jnp
imul
push
sub
rorl
test
adc
fbld
fdiv
loop
adc
jmp
mov
pop
pop
add
ds
pop
faddl
mov
mov
adcb
cld
jo
sbb
sub
fiaddl
sbb
push
popa
pusha
pusha
jnp
test
sbb
decb
pop
add
cmp
test
sbb
sbb
push
cmp
cmp
imul
aas
out
sahf
out
inc
inc
inc
push
sahf
out
sahf
inc
jb
gs
jbe
xchg
out
inc
imul
cmpsl
jns
push
dec
outsb
dec
dec
adc
popf
dec
bnd
dec
shll
insb
outsl
jb
mov
js
shll
popa
outsb
cmp
roll
aad
xor
rorl
jo
sti
sub
imul
mov
mov
xor
xor
cmpsl
test
stos
ss
cmp
movsb
jns
cmp
push
and
sbb
out
dec
and
and
int
dec
inc
daa
sub
xor
xor
leave
sub
dec
repz
inc
sub
and
inc
xor
xor
xor
xor
shrl
inc
out
inc
out
push
lock
mov
inc
mov
add
sbb
add
or
je
or
sarb
or
pop
insb
push
rcpps
sub
dec
repz
je
adc
adc
xor
rcll
mov
out
push
sbb
sbb
loopne
pop
nop
je
clc
xor
insl
xchg
push
arpl
test
jae
cmpsl
fldcw
xor
xor
mov
dec
mov
lds
push
mov
out
sahf
nop
xchg
xchg
xchg
xchg
xchg
imul
lcall
insb
pushf
popf
call
xor
xor
sub
lret
orl
push
adc
lcall
shll
xchg
cmp
fs
gs
cltd
inc
lcall
sbb
insb
push
imul
cmpsl
inc
bound
push
lcall
xor
xchg
inc
insb
scas
loope
loop
dec
inc
xchg
dec
hlt
jle
mov
shll
shll
enter
add
in
lret
mov
mov
mov
je
popa
insb
pop
push
in
push
jne
jns
in
jl
inc
js
popf
push
lea
mov
xor
cbtw
aad
lods
push
pop
push
xchg
out
xor
push
pusha
arpl
insb
mov
push
lods
pop
aaa
pusha
ss
push
addr16
outsl
pop
mov
nop
out
jns
lock
xor
pop
mov
dec
cmpl
adc
mov
dec
sbb
cmp
out
xchg
sbb
je
scas
jb
clc
setl
pop
jnp
testb
push
hlt
and
cmpb
test
loopne
out
pushaw
and
imul
dec
shll
and
ret
dec
jge
jne
push
pop
cmp
testl
insl
aam
addr16
jp
cmp
or
dec
sbb
rcl
sub
mov
adc
or
adc
fists
add
sub
test
mov
adc
adcl
loopne
pop
cli
js
adc
pop
jl
outsb
sub
sti
shll
xchg
sbb
leave
mov
mov
nop
sub
inc
mov
fstpl
cmc
push
ret
dec
in
lcall
bt
cmp
push
sti
fistl
jmp
jge
shlb
xchg
shll
add
in
ret
cs
mov
rcrb
repnz
or
add
push
cmp
imul
jmp
std
mov
cmpsl
ja
cmpl
in
sarb
sub
add
inc
faddl
push
movsb
iret
cmc
jo
push
mov
inc
mov
cmpsl
adc
adc
vphaddubw
imul
sti
inc
orb
outsl
gs
dec
cmp
je
cmp
jb
dec
dec
cmpw
jne
icebp
adc
fimuls
es
sbb
pop
jne
dec
xor
cld
and
aam
data16
cmc
pop
xchg
divb
sbb
mov
cli
adc
ja
inc
repnz
jb
xchg
pop
in
or
nop
mov
cmp
push
sbb
in
dec
push
call
push
push
and
or
or
xchg
add
or
add
test
imul
cli
and
add
scas
lock
cmp
adc
xor
into
stc
dec
push
or
mov
dec
shll
outsl
jb
andl
jne
cmpsb
imul
in
out
ja
imul
adcl
mov
or
mov
rcrl
or
cmp
push
jl
xorb
and
xchg
cmp
fldcw
sub
xor
mov
sbb
push
fwait
inc
pop
jno
cld
mov
sbb
adc
cmpsl
and
sub
or
push
roll
pusha
cmc
daa
fdiv
add
push
sbb
femms
fcomp
mov
in
aad
xor
pop
aaa
fsubrl
inc
jmp
push
cmp
scas
enter
jg
in
stc
loopne
cmp
dec
in
stc
dec
popf
in
jg
data16
rcr
inc
lret
js
test
add
and
addr16
clc
sub
cld
lock
das
and
pop
shrb
or
lret
or
xor
inc
je
or
adc
enter
clc
test
sbb
test
and
or
out
sub
xor
ret
ficomps
and
ret
test
data16
inc
das
push
cmc
movsb
add
ret
lock
ds
cmp
daa
cmp
sub
inc
and
xor
push
or
je
jo
and
push
outsb
push
gs
and
jno
gs
repz
outsl
lock
hlt
js
mov
jne
fsubrs
aam
arpl
push
push
into
outsb
scas
test
je
icebp
faddl
popa
add
lods
xor
pushf
or
push
dec
push
push
mov
add
sbb
push
in
out
insl
dec
jb
push
jp
inc
adc
mov
xchg
push
or
ds
hlt
inc
and
sub
mov
std
or
mov
std
xor
out
pop
xchg
add
repnz
je
mov
add
lods
fstl
loopne
add
and
cmp
xlat
lahf
pop
push
xor
push
and
dec
cmp
jae
dec
xchg
dec
inc
push
imul
dec
adc
je
mov
lods
scas
push
scas
es
mov
mov
mov
imul
inc
adc
mov
mov
shll
dec
jo
dec
shll
lods
xchg
out
dec
gs
sti
cmp
jmp
xchg
test
jl
sarl
dec
cltd
lcall
ds
repz
mov
scas
mov
movsl
cmpsb
popl
xchg
test
mov
push
fs
shll
xchg
mov
add
xor
gs
inc
movsb
or
add
outsb
in
rorl
je
cmpsl
lea
test
mov
int3
addr16
loopne
imul
imul
jb
sarb
cmp
xor
in
lds
js
mov
push
imul
cmp
add
shlb
fcomp
in
jecxz
mov
adc
sbb
pop
insb
lods
push
call
cwtl
xchg
pop
or
fsubs
fisubl
dec
jne
movsb
daa
and
mov
push
mov
cmp
jne
addb
mov
ljmp
cmc
inc
mov
insl
lods
mov
inc
inc
push
bound
and
cld
and
sub
sub
les
int
cmpsl
cmp
cwtl
bound
jbe
or
pusha
pop
push
and
dec
cmp
shll
into
or
sub
mov
xchg
negb
xchg
sbb
sub
pop
or
and
push
sahf
arpl
add
pop
inc
cmp
jl
push
and
mov
shll
shl
add
lock
bound
sti
inc
mov
adc
mov
add
sub
sbb
in
pushf
or
adc
pop
push
push
je
push
xchg
xor
je
sbb
cmp
pop
push
lsl
push
faddl
outsl
lods
mov
mov
push
mov
mov
andb
stos
jl
sbb
cmpsl
mov
data16
push
push
test
xchg
push
sub
pushl
push
subb
addl
addl
sbb
add
cmp
adcl
aaa
adc
xor
mov
out
push
pushf
das
rcll
push
push
jo
in
outsb
dec
cmpsb
imul
adc
dec
mov
xor
imul
shll
imul
shll
insb
popa
jae
lcall
xor
adc
jae
gs
inc
jb
dec
shll
insl
gs
cmpsb
sub
dec
popa
js
ret
jns
not
fcmovbe
xor
fidivrl
fidivs
lea
mov
xor
add
jb
insl
shll
fs
inc
shll
pop
movsl
xor
outsl
mov
and
mov
inc
dec
pop
dec
icebp
rorl
inc
outsl
and
int
jb
jb
shll
lret
int3
mov
iret
or
inc
das
ret
fists
mov
mov
mov
dec
imul
mov
or
adc
sub
in
das
jns
cltd
xchg
ss
push
loopne
sub
cmp
dec
push
cmp
or
scas
sub
inc
popf
testb
addb
rolb
mov
or
cld
cmp
clc
adc
xchg
and
sbb
sub
sbb
mov
ja
loopne
fmuls
addr16
fmuls
jle
cmp
movsl
bound
movsbl
stc
data16
movsb
sbbl
iret
dec
cmp
pop
jb
lea
push
lret
fistl
jmp
mov
je
and
mov
jnp
fucomip
adc
push
in
call
jmp
je
pop
or
or
gs
or
xchg
mov
jp
and
mov
inc
pop
loop
jecxz
adcl
jecxz
movsb
push
movsb
push
cmp
nop
pop
inc
fadd
inc
pop
scas
mov
sub
aas
popa
movsb
lcall
outsl
outsb
cmp
je
insb
outsl
lcall
jne
and
jae
sbb
xchg
divb
cmp
mov
dec
xchg
enter
jp
movsl
cwtl
xchg
push
pusha
and
push
push
push
or
or
mov
sbb
jge
dec
rorl
lcall
dec
jo
test
int3
push
outsl
xor
mov
push
ljmp
dec
rcll
insl
pop
lcall
je
push
jns
cmpsb
imul
arpl
lock
nop
inc
mov
sbb
xor
iret
inc
ret
jb
xor
je
jb
add
mov
sub
mov
xlat
fistl
pushf
mov
jp
push
xor
xlat
push
jmp
shll
or
sub
leave
jp
mov
sti
addr16
cli
popa
jl
or
or
jl
mov
or
cmp
jb
aas
pop
ret
jmp
or
mov
rcr
mov
pop
adc
lea
and
rcl
idivb
das
into
xor
xor
sbb
jne
inc
pop
add
nop
push
inc
mov
in
mov
cmp
js
hlt
mov
add
and
sarl
popa
repz
in
shrl
add
push
or
stc
add
sbb
jp
adc
int3
jmp
and
jo
pop
insb
jns
pop
jg
pushf
dec
test
push
add
cmp
std
ljmp
imul
das
insl
popa
jne
adc
je
imul
mov
jne,pn
push
jl
add
mov
cld
push
push
xchg
inc
outsl
push
jne
popa
outsb
addr16
fisubs
outsb
adc
or
lret
jne
shlb
mov
stc
int3
dec
mov
mov
jb
pusha
push
push
sbb
shrl
mov
push
fs
shr
rcrb
pop
andb
ds
sbb
loope
inc
cmp
cltd
mov
stos
jne
movsb
jmp
test
pop
jbe
cmp
inc
inc
clc
xorl
xor
stos
mov
les
sarl
enter
mov
or
jl
cmp
jb
pop
fldl
sbb
jo
or
addr16
or
or
sub
sahf
lret
adc
cmp
jns
pop
adc
and
mov
push
repz
pushf
sbb
adc
or
jb
or
into
leave
out
pop
dec
hlt
mov
and
fmulp
fs
and
push
hlt
push
mov
fwait
add
sub
cmp
clc
jmp
adc
add
jae
sub
add
call
stc
mov
pop
call
cmp
jbe
adc
mov
mov
add
popf
push
mov
sub
insb
and
add
shl
testl
add
mov
fistl
pop
mov
jae
inc
mov
jnp
pop
pop
das
mov
sbb
hlt
adc
xor
sti
sbb
enter
add
mov
mov
in
jb
xor
adc
dec
and
add
jb
and
add
test
sbb
mov
daa
push
xchg
add
or
jle
mov
cmp
jle
xchg
xor
cli
ds
call
ja
mov
sbb
popf
arpl
cwtl
mov
inc
cld
mov
push
aam
xlat
xchg
mov
cld
mov
or
fsts
and
aas
test
shrl
ss
xchg
adc
in
cs
imul
sar
test
sub
insb
ja
push
xorb
je
push
add
icebp
xor
cmp
test
dec
lock
mov
stc
testl
inc
pop
inc
cmp
jl
jecxz
push
lods
fldenv
mov
fisubl
rolb
out
clc
pusha
fiaddl
cmpb
ds
xchg
insl
jg
addr16
enter
dec
in
jbe
popf
test
cmp
ss
mov
or
ret
dec
dec
lods
pop
sbb
nop
mov
lret
add
shrl
or
push
repz
popf
pop
and
test
inc
icebp
add
cmp
jl
cmp
or
in
lock
dec
leave
push
sbb
mov
mov
push
inc
and
loopne
cmp
test
loop
imul
movsb
imul
hlt
fisubrl
push
dec
xchg
mov
enter
cmpsb
adc
or
popa
mov
lea
push
push
pop
out
aad
icebp
cmp
push
push
mov
rcrb
ret
sub
mov
movb
mov
sub
sbb
push
push
fildl
movsb
pop
pop
enter
call
dec
arpl
dec
ljmp
mov
movsb
roll
popa
xor
jle
jp
xchg
cmp
jmp
pop
jmp
ret
push
sub
adc
add
pop
jmp
dec
stos
pusha
cmp
xchg
mov
push
shl
mov
and
push
add
and
test
out
hlt
clc
add
test
lock
jnp
hlt
inc
hlt
sbb
js
sbb
stos
and
dec
adc
mov
testb
push
inc
js
sbb
dec
push
jns
pop
pop
or
jo
cmpsl
sbb
push
dec
push
xor
aad
push
inc
sbb
push
fs
mov
cld
fs
movsl
cmp
cmp
sbb
in
add
push
inc
in
xor
push
xor
lcall
outsl
outsb
cmp
gs
imul
mov
jbe
inc
or
sti
pop
jne
and
adc
cmpsb
imul
imul
jne
div
gs
lods
ret
mov
jg
dec
sbb
imul
push
decl
mov
dec
cmp
mov
push
and
pusha
fsubs
dec
jne
loop
push
add
cmp
or
addb
jb
stc
add
sbb
inc
imul
cmp
pop
mov
test
mov
aam
or
cmp
aam
push
push
enter
cld
arpl
inc
mov
sbb
mov
add
stos
bound
pop
movsb
push
dec
aas
add
jmp
fwait
xchg
scas
pop
or
pop
or
xchg
mov
pop
cmp
ljmp
jecxz
mov
push
lcall
add
xchg
sub
dec
lods
data16
test
dec
pop
and
stos
jbe
push
push
outsb
push
mov
and
mov
ss
jne
daa
lock
mov
cmp
je
pushf
rorl
push
xor
clc
mov
insb
add
js
xchg
faddl
out
std
jns
sub
les
lcall
gs
outsl
shll
push
dec
insb
jo
xor
mov
push
cld
outsl
je
push
cmpsb
imul
imul
jns
out
lock
repnz
shl
jns
cmc
div
clc
stc
dec
add
ret
inc
adc
cld
je
popa
fsubs
push
dec
and
mov
cmp
daa
rcr
push
add
sub
orl
or
enter
shlb
dec
xchg
or
push
mov
pop
jbe
orl
mov
adc
inc
popa
shll
xchg
mov
ss
ficompl
fs
jo
pop
xchg
cmpsb
imul
dec
cmpsb
xor
inc
ret
dec
shll
jo
jmp
xor
ret
outsl
imul
inc
mov
in
ljmp
xor
jne
push
imul
mov
mov
out
imul
ret
imul
cmpsb
imul
shll
outsb
push
and
push
add
ret
gs
addr16
inc
xor
mov
lods
cmp
fmull
mov
mov
int3
test
cmp
or
nop
enter
in
inc
je
jne
dec
loopne
jb
jge
lcall
mov
imul
insb
xchg
push
push
cs
jle
and
dec
and
nop
jne
loopne
mov
add
je
icebp
xchg
or
push
and
push
adc
mov
ret
sbb
or
xor
stc
add
or
jg
rorb
inc
test
jne
ret
cmpw
jne
fs
adc
cmpl
inc
push
ret
pusha
add
inc
stos
test
stos
rorl
outsb
movsb
cmp
in
shlb
cmp
je
and
je
cmp
ja
add
std
xor
jge
adc
jae
fsubr
or
adc
cmp
movb
cmp
jb
pop
sbb
or
in
je
orl
je
decl
incl
clc
mov
or
or
bnd
mov
or
add
das
add
add
addb
push
divb
loopne
lret
add
int3
add
aaa
mov
mov
mov
xor
insb
mov
inc
push
adc
push
fcompl
adc
mov
shrl
rolb
push
sbb
je
jb
mov
dec
jo
cmpsl
cmpsl
pop
cs
icebp
ret
and
je
je
repz
cwtl
dec
jo
outsb
push
adc
imul
dec
dec
adc
dec
push
jne
xchg
ret
inc
dec
outsb
xor
das
shlb
loop
dec
int
dec
shrl
jb
je
rorl
faddl
jo
mov
and
je
jb
sahf
out
outsb
gs
insb
imul
mov
dec
add
outsb
fs
ret
je
cmp
and
movsb
aam
pop
rcrb
test
inc
and
inc
xchg
js
and
pusha
call
popa
enter
les
in
scas
int3
or
mov
dec
cmp
push
sub
movsb
cld
adc
repz
rolb
adc
mov
orb
jnp
adc
xor
call
jmp
sub
inc
xor
lret
jg
or
mov
or
add
pop
dec
or
fists
pop
shlb
ret
test
je
mov
inc
inc
jmp
andb
inc
test
into
inc
dec
sarb
pushf
ret
js
test
mov
mov
cwtl
movzbl
inc
add
push
push
inc
test
subb
jne
cmpb
jbe
fimull
sub
add
sub
jmp
subl
dec
pop
push
pop
mov
pop
push
mov
inc
push
add
sub
clc
jge
clc
lcall
adc
data16
sti
sub
mov
cmp
push
xor
cmp
pop
jb
xor
imul
mov
je
ret
adc
cmpb
add
clc
push
mov
mov
inc
inc
test
jne
pop
aam
lock
pop
fs
je
in
clc
lds
jle
loopne
repz
jae
gs
sahf
stos
rcl
inc
push
cmp
inc
imul
sub
dec
shll
imul
inc
imul
fs
insb
jae
cmp
mov
sbb
lea
pop
add
mov
divb
mov
hlt
pop
mov
pop
pop
adc
cwtl
cmp
in
push
jecxz
or
gs
cmp
add
outsl
jb
inc
xchg
xor
xor
leave
jo
or
xchg
fmul
sbb
cwtl
subl
or
jp
mov
loop
fcmovnu
lret
cmp
cmp
incl
mov
mov
cmpsl
or
div
fistpll
mov
adc
sarl
ret
mov
aam
jb
and
hlt
scas
mov
pop
sbb
mov
mov
xchg
xchg
pop
lret
or
movl
test
xor
inc
add
cmp
jb
jmp
mov
or
std
decb
add
mov
orl
incl
cmp
jae
cmp
jb
push
mov
int
push
sbb
cmp
push
mov
repnz
iret
cmc
mov
sub
mov
mov
and
fidivrs
lret
jb
movsb
cmp
test
das
sbb
sub
ret
dec
scas
cs
ret
imulb
fdivrp
dec
push
sbb
or
push
ror
mov
and
jmp
push
push
xlat
ret
adc
mov
out
mov
push
push
sub
repnz
pop
or
jae
sbb
or
lret
insl
mov
call
bound
inc
jns
pop
dec
scas
or
xchg
mov
push
cmc
or
dec
lock
popa
push
or
mov
adc
jo
lahf
in
repnz
popa
imul
sti
scas
frstor
push
lods
pusha
popa
xorl
insb
dec
jmp
pop
into
sub
repz
xchg
in
fwait
adcl
fisttpll
cli
in
inc
decl
bswap
pusha
les
andb
hlt
cli
inc
pop
dec
imul
loope
sbb
cmpsb
push
or
inc
and
dec
test
insl
jmp
push
cmpsb
adcl
sub
mov
inc
mov
mov
dec
inc
ds
imul
dec
imul
call
mov
imul
push
add
pop
mov
sbb
push
cs
mov
clc
or
lcall
notb
adc
pop
jle
cli
out
push
mov
adc
in
repz
out
in
jecxz
push
test
inc
in
rcrb
pop
enter
cmc
xor
dec
sbb
mov
adc
mov
dec
lds
das
and
out
hlt
lods
jp
fnstsw
andb
xor
rcll
andl
bound
cs
pusha
push
jl
jo
in
pop
xchg
add
stc
es
dec
cmpsb
clc
aas
rcl
inc
inc
push
clc
clc
pushf
mov
sub
stos
sbb
stos
dec
incb
cmpb
lcall
movsb
sbb
inc
push
inc
lcall
addr16
jb
lcall
addr16
aas
dec
dec
or
xorl
pop
test
and
pop
sub
push
cmpsb
or
ret
hlt
ss
gs
ljmp
mov
ds
push
cmp
push
fisubrl
ret
adcl
test
rcrb
leave
inc
jge
dec
sub
push
into
and
shll
imul
outsl
ja
inc
int
mov
arpl
int3
and
sbb
push
jno
insb
jecxz
pop
movb
lret
stc
sub
not
cltd
fistpl
mov
movsb
and
xchg
sbb
lds
insb
inc
pusha
movsb
imul
test
je
pop
add
test
dec
cmp
pop
nop
mov
stc
jo
add
jbe
popf
stos
stos
sub
dec
pushf
cs
outsb
lahf
or
inc
je
sbb
mov
push
push
cmp
add
pop
cmp
adc
pop
mov
pop
cltd
dec
cltd
sbb
ss
mov
pushf
pop
inc
test
divl
mov
mov
inc
sub
lcall
imul
and
push
sub
xor
int
call
lcall
dec
adc
dec
jbe
shll
insb
gs
xor
inc
js
daa
orl
loop
add
mov
inc
or
inc
jbe
gs
inc
imul
sar
pop
cltd
lret
jb
cmp
shr
dec
add
push
call
or
dec
jns
xor
aaa
add
cmpsl
dec
jg
add
pop
aad
push
sub
scas
imul
or
sbb
rol
loopne
insl
test
sub
jnp
inc
outsb
popa
inc
stos
dec
and
pop
or
pop
add
inc
sbb
pop
push
jae
loopne,pn
inc
or
push
add
aaa
mov
mov
mov
mov
call
insl
in
std
or
add
pop
push
pop
push
push
add
jp
in
sub
cmp
push
rcll
push
mov
push
rorl
imul
mov
push
add
pop
or
lret
popa
pop
loope
icebp
jmp
or
pushl
add
shr
fmul
mov
cs
pop
mov
mov
add
push
fiadds
jne
or
push
adc
pop
sbb
ret
pop
sub
mov
daa
loopne
movsb
sbb
jl
int
or
or
je,pn
cmp
push
rcrb
rolb
sbb
andb
adc
clc
test
and
daa
add
dec
rcrb
push
mov
mov
mov
popf
clc
test
in
mov
jb
adc
add
xor
xlat
je
xlat
jmp
mov
pop
cmp
and
das
sarb
add
sub
push
fsts
mov
add
mov
sbb
sub
and
adc
fiadds
pushf
imulb
sti
mov
jb
dec
int3
and
adc
jecxz
mov
loopne
leave
ret
mov
insb
pop
in
rclb
add
lods
mov
push
clc
mov
push
push
mov
sbb
outsl
push
test
or
or
pushf
add
add
daa
xor
nop
aad
pop
je
stos
movl
fmuls
imul
mov
les
push
push
sub
mov
rcrl
add
mov
adc
adc
and
adc
in
scas
popa
add
add
push
lahf
sbb
mov
xor
pop
jno
jo
in
lods
cmp
push
dec
inc
jle
jg
add
cmpl
sbb
xchg
adc
adc
lret
mov
shr
pop
lret
push
or
jb
movsl
data16
leave
std
mov
test
clc
clc
xchg
bound
cmpb
sbb
aam
jnp
adc
jns
cmpsb
imulb
int
and
push
xchg
fdivrs
pop
test
push
andb
lea
fwait
push
or
shll
lea
xor
push
xchg
test
cmp
mov
andl
jo
pop
or
aas
cmpsb
dec
adc
ror
pop
push
cmpsb
add
xor
je
adc
jmp
pop
pop
adcl
jne
pushl
cmpsb
mov
mov
lods
test
and
aam
adc
pop
xor
repz
pop
jmp
push
jl
andb
inc
test
jmp
fildl
cli
in
fdivrl
sbb
repz
sub
insb
imul
jae
inc
sub
mov
arpl
xchg
jae
dec
shll
arpl
mov
bound
dec
or
sub
pop
repnz
lcall
or
jge
add
hlt
je
inc
movsb
mov
movb
shrb
add
aaa
in
leave
fdivl
mov
lock
pop
push
push
push
fildl
pop
mov
ret
xor
divl
cmp
je
and
mov
enter
adc
dec
push
cmp
hlt
sbb
pop
dec
cwtl
out
or
mov
nop
and
sbb
int3
int3
daa
pop
cs
out
cld
or
lock
push
adc
test
push
mov
add
and
pop
mov
mov
adc
push
push
ret
int3
add
in
mov
pop
cmp
fs
fucompp
fisubl
repnz
int
jmp
add
sti
jae
inc
incl
add
pop
push
dec
jnp
fcompl
cmp
loopne
in
popf
testb
pop
inc
bound
popw
jmp
pop
and
out
jno
arpl
sti
lret
pop
adc
and
bound
mov
jg
in
dec
xor
inc
rolb
push
add
mov
es
out
out
out
fcmovnu
mov
out
xchg
mov
add
data16
dec
iret
inc
loope
jns
xchg
pop
sti
mov
cmpsl
fwait
les
es
pushl
pop
adc
dec
adc
mov
subl
das
jecxz
inc
fucom
daa
arpl
enter
insl
sub
rcr
loope
shll
sbb
popf
and
outsb
or
incl
cmpl
jae
xchg
mov
daa
jo
mov
fwait
sti
out
clc
std
loope
mov
cld
femms
stc
mov
sbb
add
mov
lret
jnp
scas
es
repz
out
xor
push
fcomi
jb
out
lahf
addr16
filds
int
daa
repnz
aas
std
add
dec
fs
xchg
decl
fistl
mov
cmpl
push
add
repnz
pusha
mov
idiv
jnp
es
jmp
dec
imull
stos
add
sahf
pop
je
sbb
mov
in
add
push
mov
inc
cltd
pop
sbb
push
jle
sbb
add
dec
dec
stc
mov
dec
jge
ret
in
add
lcall
mov
inc
insl
add
push
call
sbb
pop
andl
sbb
mov
lods
popf
popf
cmp
xchg
mov
add
push
dec
jl
fsubl
mov
movl
hlt
mov
pusha
shrl
dec
push
mov
ret
out
adcb
inc
pop
filds
jl
loope
sub
dec
out
mov
cmp
sahf
ret
inc
fistl
mov
pop
xor
xor
xor
pop
sti
dec
sbb
mov
aaa
out
dec
xor
dec
imul
in
ja
out
mov
pop
mov
mov
in
aaa
out
inc
fninit
xchg
cs
xchg
loope
subl
jmp
sti
ds
xchg
out
mov
pop
cmp
enter
and
outsl
jae
aad
in
push
pop
mov
in
xlat
add
pop
lret
and
pop
mov
jns
mov
call
sub
iret
scas
or
push
and
push
sbb
inc
mov
gs
push
loopne
pop
jbe
imul
int3
iret
dec
les
aaa
xor
aas
fistps
adcl
push
fisubrs
and
xlat
add
pop
ja
xlat
bound
xor
sahf
cmp
xlat
xor
sub
subl
orb
push
das
out
lahf
jmp
mov
jl
loope
add
dec
add
loope
pop
ja
cs
sti
xor
fsubl
pop
dec
cld
push
popa
jg
es
out
shr
mov
popf
divb
push
out
aas
lahf
leave
or
sub
aaa
mov
or
push
lock
xor
aas
jg
clc
mov
mov
leave
in
jmp
sub
test
cmpsb
cld
fldln2
xchg
loope
outsb
mov
fdivr
addb
loop
add
leave
sar
cmp
mov
dec
lcall
fs
dec
pop
push
gs
imul
std
lret
popa
jne
je
gs
gs
js
xor
xor
or
push
jae
popa
arpl
outsb
cmp
outsl
data16
es
rol
iret
mov
mov
into
icebp
mov
enter
aas
insb
lods
cmp
daa
push
push
dec
cmp
cs
iret
jnp
mov
hlt
adc
push
call
das
jb
out
das
aas
dec
add
gs
inc
clc
lret
or
inc
insl
jns
gs
add
nop
dec
pop
push
push
dec
sub
rcr
outsb
sub
pshufw
jae
jne
fs
push
test
lcall
outsl
pop
fcoml
inc
dec
outsl
shlb
imul
cmp
incl
mov
jb
popa
je
push
push
sbb
inc
cmp
outsl
es
popa
pushf
sbb
jo
fiaddl
push
dec
cwtl
je
sbb
dec
dec
rcr
out
push
push
push
pop
or
je
jbe
outsb
fwait
sbb
add
dec
or
push
mov
push
mov
inc
addr16
add
out
mov
mov
popa
das
xor
xor
inc
arpl
jo
inc
outsb
arpl
fiaddl
push
inc
addr16
and
mov
cwtl
inc
inc
lods
popa
jne
mov
sub
imul
and
adc
imul
test
jo
imul
mov
jae
mov
insb
xor
ja
jb
pop
pop
orl
or
cmp
das
pusha
xchg
das
xor
in
xor
aas
push
jns
cmp
shll
ja
sub
call
ficompl
gs
stos
or
cmp
sbbl
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
fdivrp
mov
inc
gs
imul
gs
fs
out
sbb
push
imul
outsl
dec
jne
je
inc
jns
gs
sti
pushl
jb
bound
jae
daa
push
gs
jo
popa
je
inc
sbb
in
jg
insb
outsl
jae
dec
popa
outsb
fs
pop
dec
outsl
fs
inc
iret
insl
data16
and
jbe
or
in
xchg
outsb
cmp
xor
gs
inc
jne
jb
outsb
je
adc
mov
sub
loopne
sbb
fsubl
jns
inc
jb
insb
and
dec
inc
mov
mov
inc
insb
insb
je
rcr
fcmovnbe
xchg
outsb
inc
out
push
push
or
aaa
jge
popa
insl
cmp
out
mov
adc
and
in
add
add
push
pop
mov
outsb
inc
adc
dec
cmpl
mov
mov
dec
bound
arpl
imul
add
inc
outsl
bound
sbb
mov
dec
insl
cmp
inc
mov
mov
inc
inc
movsb
jbe
arpl
jae
repnz
loopne
push
adc
loopne
mov
addr16
adc
jo
inc
divl
dec
pop
js
mov
std
pop
divb
jb
xor
adc
outsb
and
repnz
je
insb
outsl
ja
pop
inc
js
shlb
dec
jno
jne
hlt
mov
push
adc
insl
mov
mov
aas
xor
in
or
in
inc
pop
push
add
pop
sbb
adc
enter
lret
jo
push
movd
ja
jae
ret
testb
xor
xor
and
sub
mov
or
fiadds
loopne
push
lock
aad
andl
pop
push
xorb
push
xchg
xor
insl
bound
outsl
rclb
jo
mov
gs
insb
arpl
cmp
mov
push
xchg
cmpl
shrb
popa
push
outsb
push
xchg
adc
js
addb
shll
bound
inc
xchg
insb
popa
push
or
divl
insl
pop
pop
mov
inc
xor
and
push
ja
fstpl
add
xor
roll
pop
jae
xor
lcall
xor
dec
jo
or
adc
push
pop
or
and
sub
or
push
push
pop
or
xchg
xor
or
or
pop
sbb
adc
push
cmp
or
aaa
incl
mov
push
push
xor
adc
push
sub
or
adc
push
sbb
or
adc
add
jg
push
adc
add
pop
adc
es
or
dec
pop
in
mov
add
and
cmp
sbb
rdpmc
sbb
cmp
imul
das
or
or
xor
and
sub
jbe
or
inc
or
push
or
push
pop
or
fisubs
fld
add
repnz
jge
int3
lcall
add
and
or
inc
mov
lock
pop
or
lock
add
pop
push
add
gs
pop
and
sbb
mov
pop
or
sbb
cmp
movsb
int3
adc
lock
data16
pop
mov
adc
xor
adc
sbb
fistpll
or
or
or
pop
or
pop
adc
push
add
out
lock
pop
movsb
sbb
inc
and
push
or
pop
cld
adc
daa
jno
sbb
add
or
cmovns
sub
or
mov
mov
and
and
add
push
sbb
push
or
sbb
pop
push
pushl
cld
lcall
mov
sbb
pop
insl
jge
cmp
add
sub
imul
inc
push
nop
or
dec
rcrl
adc
sub
sbb
decl
insl
add
dec
or
popa
or
test
pop
add
loop
cs
lock
push
add
or
push
rcll
and
jno
mov
pushl
xorb
push
daa
inc
or
dec
adc
adc
or
inc
xchg
cmp
data16
add
mov
mov
fmuls
add
or
push
adc
inc
pop
jl
pop
inc
sbb
lahf
jge
lcall
sbb
push
testb
or
sub
fucomip
pop
add
add
add
or
lock
adc
push
inc
mov
dec
add
dec
loope
add
and
imull
or
pop
fs
mov
or
cli
adc
add
outsl
sbb
imul
jge
jb
mov
jbe
add
call
mov
je,pn
pusha
shll
sbb
add
loopne,pn
add
and
or
jae
outsl
inc
inc
add
dec
dec
enter
xchg
cmp
orb
push
cli
insl
popa
outsl
push
aad
push
add
mov
les
hlt
and
jae
leave
repz
inc
es
ret
sub
hlt
xchg
mulb
orb
incl
add
jne
pusha
mov
lea
push
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
popa
xor
ret
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
