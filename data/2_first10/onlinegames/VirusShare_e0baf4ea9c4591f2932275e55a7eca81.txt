out
call
in
sub
andb
push
push
push
push
xor
pop
lea
fcomi
stos
push
ljmp
pop
xor
jmp
mov
pop
ja
test
add
loop
mov
dec
gs
in
in
dec
mov
xor
cs
jbe
dec
mov
insb
jmp
mov
push
call
pop
mov
jg
mov
push
push
push
push
push
mov
push
push
call
mov
and
adc
clc
lea
push
add
in
and
call
jbe
adc
adc
pop
sbb
outsl
fisttps
pop
pop
pop
leave
ret
add
add
mov
mov
push
push
xchg
sub
and
data16
jbe
pop
popf
fadd
add
in
mov
je
mov
lcall
push
or
mov
ror
jge
sti
daa
pop
inc
pop
inc
aaa
and
mov
mov
jle
sub
lea
push
push
push
sbb
pop
dec
mov
or
xchg
daa
xor
clc
add
in
push
fists
push
rol
or
fxch
lock
add
push
pop
sbb
or
adc
movsb
mov
fdivr
cmp
lock
cmp
je
push
adc
clc
sbb
pop
or
inc
clc
cmp
or
push
lret
insl
or
push
xorb
je
lea
or
scas
dec
mov
pop
je
jbe
pop
out
cmp
pop
xor
or
shrb
adc
dec
mov
lods
lea
jo
push
push
scas
fildl
or
pop
or
mov
fstps
or
pop
test
cmp
adcl
add
adc
push
sub
mov
sbb
or
jno
sti
sti
int3
dec
inc
cmp
outsl
insl
out
pop
dec
mov
and
jbe
fldcw
push
mulb
divb
or
enter
cltd
add
add
fnstcw
cld
push
adc
leave
fadds
fucom
rol
inc
testb
movsb
adc
out
in
rclb
lock
mov
test
mov
or
out
in
mov
pusha
push
mov
mov
dec
or
decl
je
mov
mov
ror
mov
inc
inc
dec
dec
test
jne
push
pop
and
fldenv
in
xor
mov
pop
mov
add
mov
movl
pop
pop
mov
or
fwait
xchg
add
lret
jnp
add
cld
cltd
dec
clc
pushl
sbb
jecxz
cmp
jge
sub
cmp
adc
and
fs
leave
std
std
push
and
xlat
mov
sbb
cmp
adc
add
adc
aaa
dec
scas
mov
and
cmp
jb
out
ds
pop
push
mov
mov
cwtl
imul
lea
or
nop
in
in
mov
jae
testl
testl
sub
mov
cli
adc
dec
sub
por
xchg
lods
inc
or
mov
fistpl
mov
cmpb
inc
add
adc
cwtl
stc
sub
ss
inc
push
adc
mov
mov
xor
mov
test
je
enter
push
push
add
pop
int3
icebp
outsl
sub
andb
xor
cmp
mov
push
inc
push
jne
mov
mov
mov
inc
inc
test
jne
push
lods
out
pop
sub
push
mov
xor
inc
mov
pop
xchg
cmp
cld
push
push
std
dec
mov
dec
imul
lcall
popa
add
pop
lcall
add
sub
popw
or
cld
fstps
inc
or
xchg
dec
test
inc
add
stos
mov
mov
imul
xor
add
push
cmp
in
jmp
sbb
push
push
and
in
je
push
pusha
adc
lahf
push
push
pop
testl
lret
mov
sti
leave
std
mov
jl
mov
xor
insb
xor
mov
mov
jnp
mov
push
mov
sbb
add
push
pop
sar
pop
int3
jae
inc
in
inc
xchg
rcll
xchg
xchg
sbb
cmp
dec
loop
into
pop
iret
imul
in
and
push
rclb
dec
loop
mov
out
cmpl
mov
adc
add
idivl
mov
nop
push
insl
xor
push
int
jnp
push
lcall
ud2
mov
mov
and
push
push
out
mov
or
push
mov
ret
fistpl
push
cmp
outsl
imull
add
lret
in
je
jae
pop
sti
sbb
xor
pop
sarb
enter
pop
daa
pop
add
hlt
xlat
cmpsb
mov
jo
subl
bound
pop
xlat
lcall
fcomp
xchg
or
lock
nop
ljmp
and
push
or
cmpl
insl
ret
dec
push
push
xor
mov
push
jl
sti
or
cmpsl
addr16
jl
or
or
cmp
push
jp
xchg
xor
adc
push
daa
inc
jl
mov
gs
in
in
jb
fsubrl
out
pop
out
call
insb
fwait
in
gs
cs
out
and
jle
inc
out
pop
pop
lock
xor
cmc
pop
test
or
mov
add
lods
xchg
or
or
sub
inc
lcall
mov
dec
xchg
je
enter
adc
add
mov
jo
adc
xor
sub
add
push
sbb
adc
adc
stos
test
inc
inc
inc
push
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
addl
aam
insb
mov
pop
in
add
xor
add
add
xor
shrl
cmp
pop
insb
dec
shll
int3
fdivl
xor
out
push
inc
and
cmp
xor
rcll
jo
mov
fidivl
lret
stc
fsubrl
movsb
xchg
pop
pop
xchg
xor
fwait
scas
cmp
dec
push
xor
stc
mull
outsl
arpl
je,pn
insw
addr16
xor
jg
dec
xor
push
gs
bound
push
jb
jbe
insb
gs
jae
jae
jnp
std
je
insl
xor
pop
or
add
pushw
gs
add
fdivr
outsl
imul
fs
adc
adc
punpckhbw
bound
gs
in
sarl
imul
insl
fs
aaa
cmp
aaa
cmpsb
xchg
cmp
scas
iret
sbb
jb
enter
push
test
push
dec
inc
dec
dec
xor
fs
insb
pusha
repnz
fs
push
push
dec
inc
dec
adc
sub
and
inc
or
xor
add
push
add
add
nop
inc
add
incl
and
adcb
mov
int
mov
imul
jb
addr16
insl
and
outsb
outsb
outsl
je
bound
jb
outsb
and
incb
push
and
fs
push
sbb
cmpsb
adc
cmc
outsl
mov
add
je
cmc
adc
lcall
xchg
addr16
jae
test
sbb
xchg
cmc
mov
daa
lret
pop
stc
fs
cmc
push
pop
xchg
cmc
adc
in
mov
mov
inc
dec
add
add
mov
dec
adc
lds
or
push
or
out
dec
ja
jl
add
and
add
add
test
daa
add
or
and
sub
pop
or
mov
mov
fsubs
mov
or
and
addb
std
std
or
bound
pop
xor
and
fwait
or
nop
jge
cs
je
push
movb
pushf
sahf
in
mov
dec
loopne
inc
push
push
pop
xor
cld
movsb
into
out
pop
lret
arpl
xor
je
jg
movsb
jmp
je
cmpsb
pusha
jb
insb
outsl
dec
ss
arpl
sti
rorb
add
sub
jmp
pop
cwtl
sub
xor
mov
xchg
jbe
push
inc
jb
xor
sub
test
cli
sub
xor
ljmp
shrl
and
add
nop
movsb
mov
fsubr
lcall
sbb
dec
imul
imul
cmpsb
fnstenv
adc
add
ss
imul
imul
jae
decb
fildl
ss
pop
insb
lcall
cmp
out
dec
mov
and
cld
and
mov
lret
jmp
sub
add
fnstenv
inc
cs
pop
ljmp
lcall
mov
scas
add
cli
xor
xlat
xor
push
and
shll
push
pop
insb
shll
xchg
sub
shll
add
and
imul
sti
pop
test
cmpsl
pushf
mov
pusha
call
bts
mov
add
lods
add
jo
cmp
sar
adc
jecxz
outsb
je
jb
gs
shll
in
dec
cmc
sbb
std
bswap
std
push
gs
fs
sub
dec
jo
outsb
push
jb
inc
stc
or
mov
dec
dec
dec
inc
push
clc
nop
inc
cld
and
push
data16
jg
arpl
push
push
dec
inc
push
push
inc
push
inc
pop
dec
in
fnstsw
divb
je
push
imul
pop
inc
jnp
mov
jne
push
pop
push
pop
jae
outsl
outsb
sbb
or
jae
inc
xor
push
inc
add
add
or
add
inc
add
jbe
data16
xchg
add
aaa
sbb
add
xor
add
mov
push
pop
pop
adc
adc
add
fs
sub
and
add
sub
sbb
popa
mov
imul
adc
add
pop
add
fldcw
mov
ja
push
ret
aas
mov
aas
add
popa
mov
xchg
pop
rorl
incl
and
add
dec
ljmp
add
sbb
xchg
inc
xchg
lret
push
pop
inc
movsl
adc
fistpl
inc
adc
pop
dec
cmp
ret
inc
dec
cmpsb
pop
in
cmp
das
xor
sbb
pop
xor
ud2
out
das
push
call
fldl
outsl
add
jae
jmp
add
jne
jb
punpcklwd
pop
inc
or
push
sub
aas
xorb
aas
push
inc
jb
push
and
ja
or
in
ja
push
mov
jae
pop
and
addr16
xor
int
int
push
sbb
push
mov
loopne
and
sbb
xor
cmp
sub
in
in
jmp
add
add
fucomp
outsl
loop
mov
pushl
xor
arpl
push
add
mov
inc
nop
jb,pn
jb
arpl
mov
fs
sub
add
cmp
cmp
push
mov
dec
dec
xchg
jge
mov
sbb
xor
outsl
je
ja
jns
outsl
xor
ss
je
inc
push
imul
sti
pop
add
imul
jl
or
lret
xchg
jbe
add
inc
dec
jae
sbb
push
jae
das
add
lds
mov
push
add
std
movsl
dec
pop
jb
arpl
popa
insl
gs
clc
fildl
loopne
outsl
jb
inc
popa
jb
pop
adcl
arpl
stos
jo
jge
mov
psraw
or
and
cmp
push
mov
pushf
mov
pushf
add
and
lea
jmp
pop
pop
pop
push
inc
arpl
add
popa
push
stos
xor
fs
jae
fld
testb
cmp
imul
and
inc
cld
jnp
and
mov
stos
daa
pop
mov
xbegin
std
ret
int
pop
in
shlb
mov
mov
movsl
ret
cs
mov
test
mov
lret
xchg
outsl
jg
in
mov
ret
in
clc
mov
mov
into
pop
add
ljmp
fstpt
mov
rol
aas
cwtl
jmp
movsl
inc
imul
loope
sub
scas
out
sub
fidivrs
mov
stc
test
leave
icebp
sub
es
xchg
fcomi
sub
mov
ljmp
mov
cli
sub
mov
mov
enter
sub
fistps
repnz
ror
lret
lock
mov
leave
neg
in
mov
ja
mov
mov
mov
lret
std
std
mov
loope
decb
sbb
shr
sub
lock
pop
jae
pop
xor
fwait
sbb
jnp
rcl
pop
mov
mov
pop
fwait
mov
sub
shll
lock
jmp
inc
fs
mov
sub
mov
sar
int3
in
jmp
push
into
lret
sti
aad
fisttpll
lret
mov
push
shrl
aam
sub
mov
or
jle
and
rcr
dec
into
mulb
mov
mov
out
sahf
mov
imul
ret
enter
test
pop
mov
mov
iret
call
aas
lret
std
data16
mov
shll
aam
shll
jb
ret
std
jecxz
into
out
insl
sub
iret
sbbl
pop
and
pop
popa
or
cmp
add
into
call
dec
insl
repz
andl
mov
shl
sbb
int3
push
or
rolb
xor
imulb
sbb
cmc
mov
std
aas
dec
or
lret
insl
popa
jo
pop
popa
xor
pop
cmp
xchg
jge,pn
stos
adc
push
cltd
sub
sbb
add
mov
in
pop
cmpsb
pop
shll
je
and
mov
iret
dec
dec
dec
inc
das
pop
push
out
cwtl
mov
ucomiss
xchg
xchg
mov
rcrb
leave
cmc
sarb
jmp
outsb
jns
add
das
and
add
mov
pushl
cli
sub
mov
add
in
push
push
pop
imul
mov
pop
sub
push
push
push
mov
andl
lea
push
push
mov
push
mov
push
mov
jge
in
sbb
rorl
call
aaa
icebp
mov
sbb
in
push
push
call
in
jg
lea
nop
jmp
sub
mov
movb
inc
or
mov
mov
sub
inc
add
sti
push
push
inc
call
mov
or
jne
inc
pop
orl
insl
cmp
fildll
in
or
mov
lock
xorb
xor
push
mov
call
or
add
outsl
mov
adc
add
es
sti
in
neg
call
lcall
push
movzbl
sarl
cmpsb
mov
outsb
pop
adc
mov
std
mov
adc
inc
or
aas
dec
in
data16
outsl
inc
pop
cmp
pop
jl
push
aaa
fs
mov
nop
gs
add
shlb
dec
jle
jle
add
jle
add
xchg
and
push
add
add
xor
frstor
sub
jge
add
lods
pop
rclb
push
push
xor
and
pop
dec
nop
in
andl
sub
xchg
gs
insb
push
test
xchg
aaa
mov
mov
pushf
test
jne
ret
cmpw
jne
dec
cmp
lock
hlt
add
cmpl
inc
push
in
adc
adc
and
add
stc
xor
adc
adc
sbb
and
pop
out
add
mov
push
pop
xor
or
incl
cmp
je
mov
cmp
je
mov
mov
je
adc
pop
cmp
ja
jge
add
in
call
fimuls
in
xor
mov
mov
cmp
ljmp
out
cmp
jb
sub
sub
add
je
decl
inc
inc
loope
incl
mov
lea
or
xor
push
adc
pop
mov
ret
or
jg
mov
cmp
push
call
mov
cmp
fdivrp
in
add
add
jge
push
push
push
sbb
stc
adc
mov
lods
fistpl
push
push
and
pop
mov
dec
ret
or
xchg
fmull
pop
sbb
mov
push
or
js
xor
pop
xchg
mov
ja
cmp
lock
add
insb
and
outsl
or
movsl
movsb
mov
test
mov
lock
jb
cmpsb
fistps
dec
dec
mov
insb
mov
in
or
mov
fnstsw
jle
mov
dec
pop
mov
dec
and
xor
lret
mov
and
push
or
sarl
push
mov
add
not
xor
xor
inc
cmp
or
sbb
push
mov
mov
add
cmp
out
fdivs
inc
push
adc
adc
rcll
and
cmp
jbe
mov
mov
push
push
jae
push
in
mov
sub
adc
cli
jb
pop
pop
pop
push
or
fadds
add
sbb
jl
mov
and
repnz
subl
sldt
repnz
add
and
adc
sbb
nop
jl
push
or
js
and
enter
je
and
xor
nop
pop
mov
push
sub
add
or
mov
pop
inc
inc
add
out
xchg
add
add
js,pt
shll
mov
negl
cltd
jo
popf
mov
or
mov
out
jne
mov
cwtl
cmp
inc
sarb
rcll
negl
in
mov
in
adc
adc
mov
adc
cwtl
xor
push
push
cmp
ds
fnsave
push
mov
sbb
sbbb
push
push
les
mov
sar
popf
loopne
mov
gs
adc
sahf
jp
imul
imul
and
imul
cld
jae
jbe
insb
std
lret
enter
or
stos
push
cmp
mov
push
jnp
ja
cli
lods
fmull
pop
pop
xor
mov
cmp
push
bound
cltd
or
pop
lods
dec
cli
call
shll
adc
pop
ja
jne
jmpw
sbb
rorb
testb
add
es
or
cmpsb
ret
jecxz
mov
cmp
mov
shlb
add
or
mov
add
je
loop
rolb
es
sub
push
dec
ret
push
jge
icebp
je
push
jmp
jg
mov
adc
jmp
add
ret
outsl
dec
mov
mov
popf
or
call
xlat
pusha
mov
mov
pop
inc
idiv
adc
jg
pushl
inc
jmp
andb
mov
jmp
xor
repz
add
dec
nop
pop
test
dec
nop
and
sbbb
test
push
sub
add
push
repnz
in
and
rclb
adc
fwait
add
jne
xor
jbe
pop
repnz
mov
ljmp
pop
nop
adc
xchg
and
mov
stos
lret
rcll
and
mov
pop
clc
pop
ja
xor
dec
jbe
cmpb
aaa
movb
inc
cmp
jmp
les
mov
rorb
outsl
mov
add
inc
addl
or
sti
shrl
ja
xor
and
or
imul
adc
out
outsb
add
push
add
arpl
sub
aaa
inc
cmp
jecxz
push
add
add
loopne
cmp
jae
incl
out
movsl
ficomps
mov
sbbb
xchg
js
adc
arpl
inc
pop
or
push
clc
fbld
dec
push
pop
jne
rcll
sbb
or
mov
mov
mov
loop
or
adc
or
clc
roll
fdivrl
push
test
push
js
es
scas
mov
fldt
cmp
or
pop
jbe
or
cmp
lods
std
or
xlat
and
push
jl
and
or
add
mov
mov
js
xlat
sbb
ljmp
mov
add
repnz
not
and
loop
jg
testl
mov
shr
fdiv
imul
shl
push
js
add
push
aam
or
fildll
inc
fisubs
fimull
add
lea
pop
jmp
shr
shl
push
pop
inc
sub
mov
and
not
int
mov
cmp
add
repz
sti
xor
into
mov
shr
or
add
dec
daa
std
fbstp
push
fisttps
jl
mov
mov
push
lods
loop
mov
push
push
hlt
ret
mov
not
and
sub
and
outsb
adcb
sub
xchg
rcr
mov
popa
mov
mov
sbbb
xlat
stc
fiaddl
pop
popa
xlat
or
mov
into
outsl
sub
adc
test
roll
mov
jae
jl
or
lods
sbbb
add
bnd
add
out
xor
add
xchg
xchg
ja
sbb
les
repz
fstpt
subb
addl
repz
add
rcr
das
pusha
sbb
mov
pop
scas
testl
jle
mov
pop
les
subb
jns
sbb
loop
cmovno
fisubl
sub
sub
fdivrs
or
fdivrs
mov
shl
pop
mov
stc
es
les
adc
out
or
xor
or
ret
cmp
or
xchg
jno
std
stos
lods
sub
es
add
and
pop
imul
enter
das
push
imul
repz
cmpsb
pop
mov
xor
xorb
or
cmp
imul
scas
and
or
popa
adc
add
or
in
ret
mov
ret
add
and
pop
sti
mov
aad
aam
pop
bound
sbb
add
shlb
clc
jg
sahf
pop
clc
inc
jge
dec
cmp
inc
rclb
push
pop
imul
fadds
hlt
push
and
clc
mov
out
push
jb
repz
pop
pop
es
adc
pop
inc
add
repnz
shll
and
ja
mov
shlb
icebp
imull
aaa
outsl
mov
mov
adc
call
insb
int
add
fdivs
push
shlb
adc
add
rorb
in
pop
sahf
pop
and
clc
cmp
sbb
pop
jge
cli
fnstcw
ds
jg
or
add
sub
mov
mov
out
lods
stc
out
loope
out
sbb
loopne
ret
neg
mul
inc
enter
aaa
or
mov
push
test
mov
inc
fimuls
repz
xlat
sbb
push
subl
or
call
mov
adc
inc
loop
shr
or
lock
add
pusha
int
imul
jp
repz
clc
mov
sti
push
loope
push
and
sub
aad
data16
sbb
add
adc
movl
xchg
dec
fisttps
in
mov
adc
or
xor
cmp
fsubrs
inc
cmp
pusha
sbb
fstpl
add
test
xor
mov
stc
and
jno
adc
loope
cs
js
lds
popa
popf
insl
mov
adc
xor
mov
repnz
in
mov
cmp
std
mov
mov
in
inc
inc
ljmp
xchg
in
add
mov
mov
xchg
fcmovu
dec
jmp
jb
repz
sub
int3
pop
pusha
dec
mov
outsl
cli
jno
cli
xor
sti
sbb
mov
jae
jg
sti
pop
or
mov
jle
sub
jl
out
idivl
mov
lock
out
mov
fimuls
jmp
test
out
aam
xchg
jae
adc
jmp
xor
repnz
sub
add
or
lret
fcmovbe
push
aas
sbb
cmp
rcl
xchg
scas
cltd
js
jbe
les
int
jge
in
jle
ja
idiv
in
mov
in
clc
jl
pop
je
mov
xchg
jecxz
pushl
or
mov
mov
push
lods
les
rcl
pop
cli
mov
mov
mov
mov
inc
and
stos
rcrb
sbb
push
or
in
sbb
jl
leave
repnz
ret
or
inc
push
or
adc
lea
mov
xchg
out
xchg
stos
adc
lock
out
jb
hlt
cmp
insl
stos
sbb
xor
icebp
popf
mov
aas
cmp
pop
pop
gs
sbb
fmul
push
rcrl
lret
xchg
int3
or
push
or
ja
adc
sbb
jge
out
jmp
unpckhps
sbb
repz
rcrl
test
sub
inc
jae
xor
call
scas
dec
jle
outsl
jecxz
jp
sbb
xchg
pop
add
fistpl
loopne
xchg
fsub
out
jecxz
jp
ret
add
ljmp
int
repnz
ja
mov
sbb
out
jmp
push
test
sbb
ja
mov
xor
out
lret
or
mov
ret
pop
sahf
aaa
mov
pslld
ret
lds
sbb
pop
rclb
xor
dec
mov
pop
jge
xlat
pop
mov
push
add
movsb
mov
inc
or
nop
mov
pop
add
inc
js
cmp
mov
dec
cld
cmpb
sarl
sbb
js
sub
push
push
push
adc
call
data16
xor
cmp
xchg
and
adc
mov
outsb
lea
jge
inc
pop
outsl
mov
aad
addr16
iret
jb
adc
push
ror
or
add
add
mov
push
dec
jne
pop
nop
inc
and
and
cmc
pop
sbb
cmpsl
push
cmp
mov
icebp
jne
shr
cmp
je
sbb
ja
mov
cmp
je
movsbl
add
sub
jne
inc
cmp
jne
cmp
rcll
addl
test
xor
adcb
jo
outsl
aam
movsb
push
jo
scas
inc
jl
jns
insl
outsl
add
jg
adc
inc
cmp
pusha
fildl
shll
add
je
rcrl
out
iret
rclb
mov
andb
push
lret
mov
xor
jnp
dec
adc
mov
sub
fmuls
aaa
fiaddl
jl
inc
adc
jmp
add
popf
lret
add
stos
jecxz
fnsave
push
dec
sub
jne
jo
jge
push
lea
adc
add
test
sbb
push
mov
nop
push
les
loopne
mov
pop
mov
imul
push
or
cld
call
sub
lods
clc
xorb
mov
sbb
dec
cmp
out
or
testb
or
inc
xor
test
add
pop
adc
push
out
mov
insb
lret
lods
mov
sbbl
add
add
mov
lcall
cmp
shlb
in
imul
stos
jl
push
or
call
jl
addr16
gs
das
lock
addr16
fcomip
jo
hlt
gs
insl
imul
lods
pushf
mov
mov
mov
mov
add
mov
arpl
sbb
loopne
xchg
jo
dec
fsubl
mov
lods
or
insb
loopne
dec
inc
lods
outsb
les
fwait
dec
addr16
fimuls
lahf
jnp
push
pop
pop
push
pop
dec
loopne
sbb
call
adc
mov
ds
push
push
movb
in
dec
xchg
lret
in
out
push
out
push
lock
icebp
inc
repnz
pop
in
sub
pop
repz
xorl
loopne
or
or
pop
add
dec
xchg
repz
inc
sbb
jb
jne
sub
mov
hlt
cmp
jae
fldt
imul
inc
insb
pop
inc
test
adcb
or
inc
or
testl
nop
rdtsc
xchg
adc
stc
dec
ret
jle
xor
cmp
insb
xchg
lea
inc
and
repnz
mov
sub
push
or
lods
jo
lods
adc
shrb
sub
pop
push
mov
adc
je
push
dec
mov
pop
in
test
xor
shl
aas
add
inc
adc
and
adc
cli
mov
test
test
cltd
adc
add
sbb
mov
sub
sbb
xchg
and
out
jbe
sbb
add
clc
add
jle
lock
mov
mov
add
push
shlb
cmp
mov
and
push
pop
call
mov
sbb
and
inc
inc
inc
jp
ficoml
jg
sbb
jb
mov
push
jge
pop
cmpsb
cmp
jne
icebp
add
mov
adc
repnz
pop
insb
inc
rcr
adc
andl
mov
into
popf
push
cld
subl
dec
cld
pop
jb
or
nop
lock
ss
push
pop
adc
cmp
mov
pop
sub
push
jae
cmp
je
dec
dec
pop
cmp
pop
push
arpl
inc
add
cmp
das
fsubrl
fwait
jmp
xor
fisubrs
sbb
data16
xchg
push
mov
imul
push
aad
push
loopne
shrl
push
ficompl
cwtl
cmp
popa
ja
movl
adc
add
mov
dec
mov
inc
add
sahf
lods
adc
jb
adc
push
or
pop
orb
pop
sahf
push
incb
or
lea
cmp
clc
add
push
call
inc
pop
frstor
lcall
rolb
repz
inc
push
pop
cld
call
test
or
mov
or
iret
outsb
out
call
pop
into
out
and
into
fs
inc
call
xchg
xchg
loope
repnz
pop
js
sbb
cmp
dec
xorb
or
inc
enter
add
mov
push
mov
jl
js
adc
rorl
ja
gs
stos
les
add
pop
pop
jbe
pop
stos
int3
inc
enter
xchg
nop
adc
xor
daa
divb
push
or
pusha
arpl
enter
es
cmp
mov
or
adc
lock
sub
cmpb
fsubl
ret
aad
inc
pop
adc
push
or
add
fistl
jb
mov
xor
pop
add
arpl
fldcw
sbb
push
nop
inc
arpl
loopne
test
adc
mov
in
mov
pop
arpl
outsb
test
mov
add
mov
mov
cmp
mov
add
idiv
call
dec
mov
inc
out
cmp
cmp
xor
call
inc
mov
add
jg
std
or
divb
add
xor
sub
mov
add
psadbw
sbb
mov
addr16
cmc
or
pushf
inc
push
shlb
jge
decl
int3
cmp
mov
mov
cmpl
or
je
jo
push
into
loopne
xlat
push
pop
dec
int3
data16
and
std
lods
std
int
inc
xchg
in
sbb
pop
adc
pop
insb
fnsave
call
jmp
call
mov
outsb
mov
cmp
loopne
add
popa
dec
or
mov
xor
idiv
xorb
xchg
adc
jmp
dec
push
movsl
mov
mov
jno
sti
enter
and
es
lea
mov
sub
adc
arpl
mov
popa
push
jo
push
add
sbb
jg
leave
lods
lods
push
scas
dec
or
push
cs
lret
in
ja
cmp
int
mov
jbe
imul
add
fsts
cs
sarl
shlb
insb
aam
insb
mov
xlat
pop
fsubrs
and
insb
xchg
insl
rcr
fsub
dec
test
in
lcall
pop
in
push
out
pop
dec
out
call
jle
shll
imul
sub
fldt
ret
les
lds
mov
leave
lret
mov
sbb
cmp
int3
hlt
xchg
push
xchg
xchg
insb
fwait
cmpsb
jmp
xchg
push
cwtl
cltd
lcall
xlat
pushf
adc
sub
in
mov
mov
insb
cmpsb
xor
test
push
test
dec
shl
div
clc
ds
hlt
orl
inc
cli
jns
lea
dec
xor
rol
sbb
imul
mov
fcoms
xor
xor
int
pushf
sbb
jmp
lods
add
loopne
idivb
dec
cmpsb
xchg
data16
and
aaa
push
lcall
cwtl
xchg
sub
dec
jne
pop
xchg
xchg
or
sub
ret
pop
enter
jp
adc
shrl
orl
jg
lea
sar
cmpl
fnstcw
sti
inc
ds
mov
ljmp
and
sarl
out
lret
xchg
pushf
pop
cli
inc
ret
jne
xchg
in
sbb
push
movsb
fwait
push
inc
sub
les
pop
mov
insb
sbb
movsl
jmp
sbb
mov
adc
cmp
aas
xchg
imul
nop
sti
pusha
push
shll
rorl
lret
jge
mov
cmp
int
adc
outsb
outsb
jno
and
test
movsl
aaa
mov
mov
fs
rcll
add
jnp
push
je
icebp
push
outsl
sarb
daa
lock
arpl
mov
and
dec
sarb
mov
mov
xchg
mov
cmp
mov
push
sbb
rcll
fld
pop
andl
or
or
cmpsb
sarb
icebp
clc
inc
popf
mov
inc
mov
cmp
cmp
pop
jb
or
adc
pop
push
mov
push
sub
add
lock
sbb
arpl
push
or
pop
adc
cmp
push
mov
pop
mov
std
xchg
fwait
jo
jecxz
adc
pop
in
gs
ret
sbb
and
fiadds
cmp
push
inc
lods
or
lods
cwtl
ret
adc
fimull
sub
push
fs
fcompl
mov
mov
test
les
add
in
dec
cmp
js
fs
jmp
imul
mov
adc
add
clc
lahf
mov
xchg
std
cs
aad
clc
call
xchg
and
cmp
cmp
cmp
es
mov
mov
cmp
mov
pusha
cmpb
hlt
push
cmp
push
mov
mov
pop
and
cs
push
push
mov
add
pushf
sub
add
sbb
add
xor
add
push
adc
or
mov
insl
dec
cmp
or
adc
jmp
mov
sbb
and
and
lods
add
jmp
jle
scas
and
add
ret
xchg
cld
call
call
andl
ss
sti
jbe
fcmovnu
sub
in
add
jns
mov
mov
mov
fiadds
loop
fisubs
ret
loopne
add
test
mov
int3
dec
int
jp
imul
dec
sub
cmpsb
imul
fnstenv
int
fcmovnu
ja
fildl
fstp
jae
xor
or
xor
mov
and
jae
std
cli
lcall
insl
mov
scas
fstps
mov
add
int
mov
mov
dec
mov
outsb
popl
pop
pop
xor
insl
xlat
pop
enter
pop
lret
in
xor
js
out
call
imul
cwtl
add
pop
xchg
icebp
repnz
jns
jo
mov
add
mov
iret
icebp
or
addr16
inc
dec
adc
mov
and
pop
push
xchg
pusha
pop
and
pop
rcrl
nop
in
pop
push
hlt
dec
mov
nop
add
in
ss
int
scas
push
js
das
or
sub
lea
push
dec
out
dec
cli
sub
push
mov
jb
xor
shll
je
imul
call
lock
pusha
insb
lcall
cs
je
push
sbb
dec
xchg
push
add
or
inc
mov
push
or
in
scas
rol
fnsave
cs
loopne
jb
push
fsubrl
sbb
cmpsl
xor
or
aam
jb
or
or
idiv
inc
xor
fsts
popa
pushf
or
pop
imul
xor
cmp
fldcw
inc
mov
inc
mov
add
hlt
sub
sbb
aam
mov
sub
jmp
mov
call
and
cmp
xchg
and
jl
shll
push
lret
mov
fsubs
xchg
repnz
inc
sub
in
stos
mov
fiaddl
insl
pop
push
push
mov
rorl
in
push
or
cmp
xor
jne
xor
and
mov
xor
aas
jmp
es
and
stc
js
mov
aad
je
and
jae
mov
mov
mov
shrl
cmpsb
mov
mov
mov
dec
mov
pop
mov
mov
adc
les
mov
enter
mov
mov
lret
int3
int
das
into
bound
rcl
rcl
shll
or
pop
xlat
aaa
fcom
shll
ja
mov
cmpsb
pop
ss
ficomps
fnstsw
jae
loop
mov
lcall
out
mov
ljmp
dec
shll
fs
es
xor
jae
and
shll
inc
cmp
shll
mov
xchg
mov
cs
test
adc
jae
aad
fwait
dec
xlat
pop
cld
or
mov
clc
outsb
lock
xchg
dec
jb
nop
lock
push
jbe
and
adc
or
les
jo
out
mov
mov
sbb
scas
out
push
push
xchg
pop
call
popa
add
and
int
jl
cmp
mov
mov
fldl
hlt
int
inc
rcr
rdtsc
pop
add
xor
pushf
mov
mov
bt
add
xchg
mov
adc
and
sahf
fnstsw
mov
test
clc
call
ljmp
xor
loope
inc
jmp
jge
and
add
or
mov
js
and
loopne
inc
pop
call
add
or
sbb
push
in
dec
out
call
and
out
cmp
jbe
jge
ds
cs
scas
mov
add
rcrb
xlat
scas
jmp
outsl
adc
add
xor
ss
push
cld
call
or
inc
sbb
push
jb
adc
imul
scas
pop
xchg
les
ds
and
out
sbb
fmul
push
adc
shl
mov
cmp
push
add
mov
jmp
loop
call
xor
mov
call
subb
adcl
dec
dec
sbb
cs
fs
rclb
call
xor
bound
repnz
jmp
push
push
push
dec
les
cmp
rcrb
filds
jbe
pusha
pushf
decb
in
or
jmp
rol
mov
rcl
mov
clc
sub
es
test
pushf
shr
pushf
pusha
inc
pop
ret
mov
aam
mov
call
movmskps
cld
mov
dec
adc
lds
inc
xchg
je
cld
sbb
mov
jae
aaa
idivb
jl
sbb
inc
mov
inc
cmp
cmp
xor
jae
std
push
adc
and
xchg
sbb
jge
sbb
inc
pop
jle
jmp
icebp
fisttps
pop
gs
push
or
shl
mov
loopne
and
clc
out
mov
jmp
test
shld
mov
cmp
add
pushf
pushf
push
pushf
mov
jmp
add
jmp
mov
lds
jmp
rcrb
mov
movsb
and
fdivl
repz
add
adc
jecxz
cmpsl
outsl
fiaddl
bts
sub
push
out
lods
mov
das
pushf
jmp
sub
pusha
inc
mov
jnp
andb
adc
sub
jmp
sbb
jl
loope
shl
nop
cmc
cmc
and
cmp
stc
fdivp
loopne
fcmovnbe
pushf
pusha
jno
sbb
test
pusha
push
shlb
dec
ret
cld
mov
inc
neg
mov
mov
mov
add
inc
mov
mov
mov
cmp
and
std
cld
adc
test
cmpsl
push
cld
cld
jge
or
sub
hlt
fsub
xor
jp
fisttpll
xchg
and
lea
cmp
ds
mov
cs
mov
sbb
sbb
push
invd
inc
ds
ss
cli
sub
push
mov
call
dec
add
sub
lds
testl
dec
push
clc
std
cmc
sti
sub
sti
test
xchg
dec
aaa
add
jnp
add
jae
leave
push
jp
and
push
push
ficoms
adc
mov
adc
push
in
and
adc
test
push
push
rolb
ss
sbb
fisttps
adc
js
clc
and
scas
and
jg
lods
filds
inc
clc
or
mov
into
ret
jmp
mov
xchg
call
aam
xor
cmp
pop
sbb
scas
aad
data16
lock
stc
push
in
jmp
or
enter
cmp
incb
xor
or
js
rcrb
js
lret
clc
inc
add
test
inc
or
cmp
ja
rolb
mov
and
or
mov
sbb
shll
adc
leave
push
add
mov
cmc
lods
push
cmp
mov
lcall
dec
fldl
mov
cld
push
push
jne
jg
out
jne
adc
xor
fadds
das
aas
sahf
sbb
fmuls
orb
ret
push
fists
push
push
pop
xchg
add
xor
mov
push
stos
sbb
cmpps
xchg
add
or
cmp
daa
and
shrl
dec
push
hlt
hlt
pop
mov
fidivrs
hlt
push
xchg
push
inc
add
cwtl
insl
dec
push
aas
inc
clc
outsb
mov
xor
push
int3
mov
jo
push
push
stos
cmp
out
adc
arpl
jae
aas
sbb
fcoms
and
in
cmp
xchg
xor
sub
test
pusha
adc
inc
mov
add
jbe
fcomps
and
movsb
mov
rcll
mov
or
cmp
cmp
out
fidivs
mov
adc
sbbl
faddp
push
push
xor
leave
push
xchg
mov
or
adc
push
addl
int3
sub
std
sahf
idivl
ss
xchg
xchg
mov
subb
jmp
cmpsb
leave
pop
jle
jl
cs
std
add
and
xchg
dec
xlat
andb
push
push
inc
mov
aas
add
ljmp
into
mov
and
call
add
push
mov
fidivrs
pop
std
push
mov
in
sub
int
scas
sbb
or
sbb
js
jae
push
xor
divl
faddl
test
clc
sbb
stos
imull
push
cltd
and
lods
sbb
push
ret
mov
sbb
pushf
xor
daa
push
cltd
add
sbb
iret
push
outsb
ds
cmpsb
or
fwait
pop
jae
xor
test
je
hlt
xlat
pop
xchg
gs
xchg
outsw
outsb
je
pop
dec
insl
inc
push
inc
and
insb
in
cmp
lods
hlt
xchg
push
mov
pop
or
int3
mov
inc
jns
sbb
jne
adc
mov
stc
inc
cmp
sbb
and
mov
cmpsl
cmp
lods
add
insl
outsl
outsb
lahf
and
and
jb
xor
sub
addr16
or
cs
gs
js
in
nop
xor
pop
cltd
int3
rolb
mov
fs
cli
in
sbb
test
jns
pop
sub
adc
inc
js
add
jne
jmp
push
insb
in
and
fdivl
push
pop
ret
add
addb
xchg
pop
repnz
and
andb
in
push
adc
cmp
push
cmp
sbb
js
rcr
call
addr16
mov
scas
or
sub
push
dec
push
or
into
mov
inc
sbb
xor
cmp
je
pop
add
xor
pop
hlt
int
or
push
dec
push
dec
fsubs
add
cmp
je
push
dec
push
arpl
stos
pop
shrl
lcall
push
mov
das
inc
and
mov
pop
scas
inc
nop
mov
je
add
cmp
xor
push
push
add
jbe
shl
les
out
add
adc
add
xor
cmovb
mov
loopne
inc
cs
out
inc
pop
repnz
lds
pop
cmpsl
pop
cmc
clc
sub
insl
pop
stos
or
add
rcl
dec
pop
xchg
gs
in
call
add
sub
adc
adc
sbb
jmp
or
mov
mov
sarb
sub
adc
outsb
movsl
cld
inc
cmove
bound
push
pop
adc
popf
pop
popa
les
mov
and
lahf
aaa
mov
push
mov
stos
mov
and
les
inc
lock
adc
outsl
push
or
adc
loop
add
cltd
mov
divl
das
or
test
hlt
cmp
and
lods
or
mov
adc
mov
insb
sub
and
mov
je
xor
faddl
sbb
pop
lds
jne
adcb
in
shlb
js
dec
das
lret
or
fistl
gs
push
adcl
imul
popa
lcall
mov
pushf
jo
insb
jne
xor
mov
cs
insb
mov
cwtl
inc
mov
movsl
mov
lret
outsb
je
push
jb
pop
mov
mov
movsb
push
movsl
cmpsb
pop
cmpsl
pop
mov
jbe
test
test
lods
xchg
and
je
pop
xchg
gs
jo
jo
outsb
fs
xchg
gs
gs
cmpsb
pop
mov
das
roll
aam
mov
insl
lcall
mov
mov
es
push
js
xchg
xchg
xchg
xchg
shrl
dec
xchg
xchg
inc
push
cwtl
js
lcall
je
inc
cmpsb
jmp
outsb
push
fnstsw
cmp
inc
loop
scas
imul
cmpsb
imul
pop
xlat
xor
mov
in
mov
mov
fstps
or
shlb
mov
and
and
in
ja
and
in
mov
lock
addr16
pop
outsb
clc
lret
rcrb
mov
clc
jno
es
jb
cmpsb
pop
clc
scas
ret
mov
adc
mov
pop
jp
and
push
push
dec
xchg
lods
stc
pop
rep
popl
mov
test
rorb
mov
dec
xchg
pop
outsl
add
sti
xchg
sbb
jmp
addr16
adc
adc
mov
sahf
lret
imul
cwtl
je
fiaddl
mov
dec
imul
sub
or
cmpsl
fldenv
or
repz
adc
adc
push
add
sbb
jne
cmp
or
dec
rclb
add
add
shl
jne
insb
cmpsl
mov
js
test
inc
mov
xchg
popf
sbb
inc
sbb
sbb
aas
xor
add
mov
cmp
push
add
ljmp
add
loope
or
jae
fstl
stos
sbb
rcrl
aad
scas
jne
call
sbb
push
mov
cld
jp
or
cmp
jmp
sahf
movsl
mov
or
movsb
push
mov
bound
jno
rcl
push
ret
push
jnp
and
push
lahf
fistpl
jp
sarb
sbb
mov
cmp
subl
xor
mov
mov
sbb
cmp
adc
mov
dec
std
clc
push
in
neg
push
cmp
jmp
jle
sbb
arpl
inc
lahf
xchg
imul
add
dec
pop
xor
inc
sub
popf
les
test
xor
add
sbb
push
mov
fisttpl
adc
repnz
out
jp,pn
and
mov
in
jp
leave
cmpsb
xor
aas
push
lcall
je
repnz
addr16
shll
jne
cs
xor
jae
lea
push
jg
jmp
pop
test
xor
pop
xchg
cmpsl
pop
xchg
call
pop
jb
adc
rol
mov
or
jbe
movsl
std
jbe
cmp
or
cmp
mov
pop
out
mov
mov
or
lds
cmp
je
xchg
ret
jno
bnd
lret
pop
or
sub
dec
subb
leave
shrl
mov
xor
mov
sbb
in
in
jl
push
jle
adc
adc
cmp
call
cmp
sarl
sub
fsubp
push
jmp
aas
adc
arpl
mov
in
mov
sti
add
inc
fisubrl
mov
insb
adc
mov
gs
imul
frstor
hlt
insb
cmc
imulb
xor
mov
imull
clc
stc
cli
sti
adc
sub
dec
testl
or
pop
jne
cmpsl
ss
scas
push
arpl
cmp
jns
mov
xor
add
aam
jae
adc
jle
or
out
xor
addr16
cmp
cltd
imul
adc
push
or
cmp
andb
pop
clc
push
and
jb
and
das
mov
push
mov
mov
mov
dec
add
adc
nop
pop
jge
mov
add
sub
mov
push
adc
jbe
xchg
data16
lock
and
fcoml
push
push
mov
and
sbb
in
push
cwtl
add
sbb
inc
adc
dec
push
in
xlat
inc
adc
aam
jne
xchg
call
push
shlb
or
jmp
pop
inc
mov
mov
push
pop
add
jl
hlt
aas
popa
cmpsb
imul
outsb
xchg
fldcw
gs
cmpsb
imul
imul
add
popa
mov
lret
mov
je
outsl
outsb
mov
lret
jb
js
gs
mov
lret
je
outsl
outsb
es
add
aas
cmp
gs
arpl
gs
jb
xor
data16
jns
in
add
xor
out
call
or
xor
xor
jp
push
dec
shll
stos
adc
fistpl
dec
je
add
push
in
ss
jmp
or
jmp
mov
mov
movsb
std
call
push
adc
mov
inc
xor
mov
mov
out
test
nop
cld
pop
sub
xchg
xor
xor
sti
fdivrl
movsb
mov
in
stos
imull
pop
inc
push
jl
mov
add
jmp
shll
sbb
xor
shrl
clc
stc
cli
sti
cld
negb
les
sbb
sbb
push
mov
cld
push
or
cld
loopne
pushf
mov
xor
mov
pop
sub
cs
xchg
fdivl
ss
nop
mov
dec
or
in
std
xor
jns
stc
sbb
cltd
fstl
mov
sub
pop
pop
add
mov
idivl
mov
adc
int
repz
and
incl
inc
xlat
rcr
jmp
or
addb
xchg
add
jle
aam
insl
inc
arpl
and
pop
or
fsubl
call
popa
call
xor
adc
cmp
repz
sbb
pop
adc
push
movl
xchg
and
mov
mov
clc
pop
cmp
enter
add
inc
mov
repnz
xor
aas
inc
sub
push
xor
orb
arpl
gs
xchg
xchg
popf
outsl
jae
insl
subl
xchg
bound
jne
fistps
cmp
push
push
in
cwtl
jo
pop
cmc
orb
das
mov
std
and
pushf
mov
cld
pop
sub
in
mov
dec
shll
jns
jb
xorb
adc
push
push
dec
jbe
mov
stos
and
test
xchg
aas
mov
dec
push
adc
push
mov
push
mov
clc
pushf
pop
mov
mov
mov
xor
inc
pop
xchg
and
mov
jne
push
cmp
mov
pop
push
sarb
cmp
int3
pushf
xchg
shrl
add
mov
jle
icebp
or
lea
add
cmc
add
jp
push
jne
mov
int3
fmul
adc
mov
mov
movsb
jl
jne
push
mov
pop
rorb
sub
jp
adc
repnz
adc
pop
add
cmp
mov
in
xor
xor
jb
subl
cmp
clc
dec
push
clc
insl
stc
mov
dec
push
and
inc
mov
repnz
mov
sbb
bnd
push
push
mov
std
cld
adc
sbb
movsb
add
fsubs
lahf
and
cmc
xor
adc
sti
pop
ret
jno
icebp
push
pop
sbb
out
push
es
xchg
mov
adc
cltd
sti
add
jg
rolb
adc
pop
lcall
lahf
adc
add
test
mov
ret
and
cmp
jmp
adc
xchg
sub
push
insl
xchg
jbe
xor
pop
rorb
popa
inc
jl
lret
clc
clc
pop
bound
iret
sub
test
jle
mov
loopne
jae
lea
push
shl
add
int3
sahf
imul
ja
or
sbb
xor
push
mov
sbb
rclb
and
or
das
xchg
fistl
sbb
das
xor
das
fstps
xor
and
das
jns
inc
in
lahf
clc
add
inc
sub
cli
repnz
pop
loope
pop
hlt
gs
cmp
pop
sub
cmp
pop
mov
inc
cmc
push
inc
jae
pop
das
test
adc
xor
push
mov
fdivr
add
cld
pushw
pop
jmp
daa
ljmp
cmp
mov
add
lahf
inc
lcall
pushl
mov
xor
ret
push
or
dec
fs
pop
add
xchg
or
dec
xor
push
cmp
jae
push
mov
lock
stc
in
pushf
mov
pop
dec
mov
test
ret
push
push
push
push
mov
imul
adc
pop
das
pop
mov
subl
jecxz
mov
cmp
adc
jbe
cwtl
test
imul
divb
jge
fwait
and
in
xor
data16
lea
add
jno
add
xor
inc
cmp
jb
call
add
movsb
jb
jl
add
push
stos
ja
repnz
mov
sbb
and
inc
mov
add
fs
es
pop
lock
add
repnz
test
mov
jbe
faddl
leave
out
sbb
sub
out
add
jp
mov
ss
pop
incb
jmp
test
adc
inc
div
add
jnp
insb
mov
add
xchg
cld
ret
sbb
enter
xor
cmp
ret
mov
push
pop
fucomi
mov
add
mov
mov
mov
and
les
sbb
je
or
adc
imul
jmp
mov
addr16
push
push
hlt
ret
inc
mov
jbe
mov
mov
fadds
cmp
push
cmp
jb
pop
pushf
movb
and
ljmp
push
push
ja
push
pop
xor
xor
fs
insb
jae
test
jb
cli
arpl
jbe
shll
data16
jo
outsl
insl
jne
in
sub
mov
xchg
mov
inc
shll
mov
fidivrl
add
sbb
stos
scas
fsubp
mov
cmp
xor
test
mov
push
xchg
or
cltd
dec
pop
push
cmpb
lea
xor
pop
push
xor
adc
sub
sub
repz
add
cld
std
sbb
lods
sub
add
sub
sub
xchg
cmpsb
loopne
inc
nop
dec
adc
nop
xchg
and
fisttpll
inc
push
lret
loope
out
nop
mov
jne
push
cwtl
mov
xor
mov
jo
lcall
cltd
add
pop
jo
sbb
inc
lods
pop
enter
mov
mov
sbb
sahf
xor
sbb
mov
or
dec
loopne
adc
inc
add
test
pop
adc
test
mov
in
leave
mov
popf
les
stos
dec
cmp
hlt
and
movsb
pusha
cmc
jno
or
mov
and
inc
inc
sub
add
mov
mov
lsl
cmpsl
jp
adc
out
inc
mov
fs
push
xchg
and
adc
ret
inc
mov
mov
push
pop
clc
xor
fs
div
cmc
lahf
sub
sbb
pop
andb
mov
xor
push
jge
and
cmp
faddl
add
outsb
inc
fcoml
cmpsb
jmp
jo
insb
imul
sbbb
inc
fs
xchg
gs
fs
lcall
jb
dec
xchg
mov
outsl
push
imul
ret
aad
dec
pop
icebp
rcrb
add
enter
xchg
xchg
xchg
hlt
push
dec
xor
adc
outsl
jne
mov
inc
pop
test
orl
fs
inc
xchg
inc
xchg
sbb
and
ds
push
push
inc
jo
adcb
jo
pop
cmp
ja
ret
outsb
mov
cmp
add
or
xor
add
rolb
adc
imul
in
sbb
jo
movl
mov
xchg
and
test
hlt
adc
imul
int3
add
mov
push
cmp
xor
hlt
cmpb
dec
in
dec
push
fwait
popf
insb
arpl
sub
sbb
adc
imul
sahf
jno
xchg
dec
mov
push
lea
mov
push
mov
mov
or
gs
test
lret
into
lods
nop
daa
push
insb
jno
stos
pop
mov
lock
add
enter
push
mov
fldt
sub
push
or
cwtl
push
outsl
pushf
sub
mov
je
ja
mov
lret
mov
pop
dec
imul
outsl
outsl
lods
shlw
fs
mov
outsl
ja
pop
push
xor
je
push
popf
sub
outsl
push
popa
mov
lret
mov
insl
pop
dec
push
dec
popa
mov
lret
inc
popa
arpl
sahf
sub
das
sbb
inc
mov
ret
mov
mov
loope
mov
cwtl
test
mov
lret
addr16
ss
and
les
cs
pop
xor
cltd
mov
sub
lret
js
sbb
lock
adc
xchg
shll
mov
mov
inc
mov
les
dec
mov
mov
mov
mov
inc
cmp
add
pop
and
sub
pop
rolb
add
test
adc
leave
dec
into
pop
push
pop
add
add
or
rorb
inc
or
test
sub
icebp
mov
mov
shll
xchg
test
loopne
fcom
call
xchg
xchg
add
insl
dec
mov
xchg
gs
and
ljmp
out
in
inc
inc
in
out
out
outsb
mov
push
popa
lock
rcrb
jae
shll
je
cmp
imul
stc
and
sbb
stc
fdivr
fyl2xp1
fidivl
outsb
xchg
stc
push
stos
adc
mull
mov
notl
clc
xchg
xchg
enter
aam
aad
fdivr
xchg
cmp
sbb
test
lock
icebp
adc
loop
sbb
cltd
stos
dec
jl
mov
int
fadd
test
stos
sub
shrb
jne
outsb
and
scas
or
fxch
rolb
insb
mov
mov
mov
je
daa
mov
mov
jb
jb
xor
popa
mov
jb
jb
mov
je
dec
arpl
addr16
dec
ja
lods
mov
daa
daa
daa
movsb
movsl
cmpsb
nop
jbe
mov
das
imul
jbe
jbe
dec
xchg
pop
xchg
dec
xchg
ss
jb
cltd
lcall
test
imul
mov
mov
mov
jb
mov
xlat
add
sub
adc
add
enter
cld
mov
in
and
cli
mov
stc
lea
sbb
nop
mov
pushf
add
push
lds
adc
test
jns
push
mov
aas
pop
pop
stc
pop
dec
stc
iret
mov
fsts
or
stc
fcomps
stc
adc
sub
add
add
lahf
xchg
mov
int
gs
cmpb
mov
dec
sahf
lods
adc
lret
jns
or
testl
pushf
loope
rolb
xor
add
gs
cwtl
push
sub
cmpsb
imul
imul
cmpsb
imul
test
lcall
xchg
gs
ss
insl
cmp
ss
xchg
gs
cmp
insb
push
pop
dec
xchg
gs
imul
imul
call
call
je
imul
xor
shll
das
das
dec
shll
cmp
xor
shll
xor
outsb
shll
cmp
dec
shll
cmp
rorl
xor
cmp
or
insb
add
das
sar
cld
std
or
jb
mov
cld
cmpsb
imul
shll
cli
sti
scas
cmp
and
add
scas
es
jb
sbb
in
xchg
pushf
xchg
or
xor
shll
je
jo
das
xorb
dec
ret
and
imul
xor
shll
arpl
cmp
cmp
jae
dec
dec
sbb
scas
popf
orl
call
js
sub
mov
gs
gs
gs
arpl
outsb
test
push
imul
addl
inc
cmp
or
sbb
inc
arpl
sub
adc
test
sbb
jne
mov
mov
add
test
loopne
and
pop
loopne
lahf
add
popa
push
fwait
ret
in
push
mov
mov
pop
sub
xor
mov
add
add
mov
pop
inc
add
test
or
lret
mov
dec
and
push
adc
pop
scas
test
add
pop
shlb
call
add
rcrl
pop
jno
imull
jmp
mov
hlt
push
shrl
pop
and
test
xor
dec
cli
inc
call
in
clc
mov
or
sbb
mov
fsubrl
fsubrl
int
pushf
loop
std
psraw
in
stc
jb
push
in
pop
out
out
call
xchg
mov
add
mov
fildl
push
rcrb
mov
pop
mov
lret
data16
enter
sbb
inc
sub
lea
fildl
lahf
pop
repnz
clc
cwtl
push
insb
ss
cltd
xchg
in
sub
push
sahf
push
add
mov
and
cmpsb
xlat
cltd
mov
pop
or
mov
dec
mov
mov
clc
ds
enter
xlat
insb
test
lret
pop
int3
inc
int
cmp
iret
pop
dec
cltd
mov
mov
add
push
imul
mov
cmp
into
movl
leave
test
xor
and
arpl
dec
sarl
sub
rclb
rol
js
sahf
mov
test
add
push
mov
or
and
push
jne
addr16
mov
frstor
sbb
mov
in
idivl
xor
mov
orl
test
in
leave
nop
out
xor
in
push
in
pusha
push
push
or
add
in
push
adc
xchg
mov
jo
daa
mov
xchg
add
daa
nop
adc
in
mov
in
fidivrl
adc
mov
pop
jl
pusha
clc
dec
mov
mov
in
das
cmp
andl
add
cwtl
mov
inc
push
jg
es
xchg
or
xor
dec
repz
paddq
fnstcw
pushf
jg
add
stos
addr16
arpl
mov
mov
daa
hlt
out
mov
insb
outsb
mov
mov
cmp
push
out
jmp
mov
cmp
scas
shll
pop
sbb
das
push
adc
mov
jl
cmc
imull
push
ljmp
rcrb
add
add
cli
popa
add
xlat
adc
stos
stos
movsb
lock
xor
push
outsb
push
xchg
insl
test
jp
sbb
fwait
push
or
cmp
es
inc
mov
movsbl
add
loop
sub
pop
jno
add
or
pop
sarl
mov
repz
push
pop
mov
repnz
imul
mov
adc
mov
pop
lods
std
out
or
mov
dec
mov
jne
lahf
push
and
mov
cld
push
push
push
out
cmp
and
and
add
in
push
inc
adc
cmpsb
loop
adc
add
jo
je
sub
in
push
push
aad
adc
and
ror
insb
inc
mov
cs
pop
jne
sub
mov
gs
popa
lret
mov
lret
je
pop
pop
arpl
lret
mov
jb
outsb
je
sub
mov
gs
gs
lret
jb
imul
shlb
enter
add
mov
addr16
sbb
adc
xor
popf
leave
adc
or
jne
inc
mov
pop
pop
pop
add
jg
mov
cmp
jl
cmp
add
jl
lods
imul
push
out
sub
add
or
fnstsw
in
lods
adc
and
push
and
ret
mov
enter
push
mov
shll
rolb
mov
popf
sbb
lods
fstpl
addl
mov
or
push
cmp
cwtl
xor
out
shll
sbb
push
gs
mov
cmp
cmp
add
push
cmpsb
ret
xlat
jmp
lods
add
sbb
movsb
jne
outsl
pop
pop
pusha
test
fcoml
pop
push
sbb
add
out
rclb
pop
je
pop
jecxz
popf
in
pushf
jne
jp
or
add
push
sbb
mov
iret
mov
loopne
push
in
inc
into
ss
xchg
add
lcall
pop
adc
and
addb
and
xchg
icebp
pop
mov
xchg
int
jbe
out
insb
mov
int3
xor
arpl
int
insb
rolb
ret
xor
pusha
pushf
jmp
sbb
js
jb
mov
in
sbb
mov
xchg
subb
add
jb
jae
mov
push
test
insb
loopne
adc
and
pop
push
push
and
movsl
lds
les
add
add
cwtl
fwait
cmp
fs
and
jge
ljmp
xor
dec
out
mov
xorb
mov
sbb
mov
fsubr
outsb
push
rcrb
cmp
add
mov
in
jl
push
pop
xchg
sub
insl
mov
jge
rcrb
les
pop
xor
dec
insb
pusha
xor
into
sahf
pop
int3
sahf
sbb
pusha
pop
pusha
sub
push
and
orl
pop
daa
adc
in
lods
int3
or
xlat
or
icebp
push
add
loopne
cmp
mov
add
sahf
mov
push
adc
push
js
pop
inc
cmp
sub
adc
mov
es
orl
push
add
out
test
dec
cmp
cmp
mov
loop
cmp
jb
pushf
pop
jnp
out
test
cmpb
inc
cmp
jl
je
inc
lods
fisttpll
sarl
sbb
jb
sub
mov
mov
add
cmpl
mov
leave
je
add
push
pop
adc
inc
or
add
sub
sub
test
push
inc
dec
sbb
rcrb
mov
stos
pop
and
mov
aad
sarl
sub
mov
add
inc
mov
add
movl
sbb
jns
jno
mov
dec
sbb
clc
mov
mov
lods
mov
mov
jno
add
adc
cmp
mov
iret
andl
insl
push
jno
shr
jle
movzwl
mov
jne
daa
add
ljmp
shlb
incb
lods
adc
add
outsl
mov
add
data16
lock
jne
adc
movsl
jae
push
sub
add
ss
nop
sub
lret
lea
mov
adc
cld
test
sbb
jl
add
jmp
push
push
rcll
jae
push
jo
or
add
mov
jle
fcomps
inc
inc
cmpsb
aam
je
adc
mov
mov
adc
iret
or
sbb
and
mov
pop
incb
pushl
add
push
scas
clc
add
sub
and
sub
loope
pop
in
stos
addb
sbb
jecxz
xor
ds
inc
xor
jg
fimuls
call
push
call
addb
inc
aaa
dec
out
aam
outsb
pushf
lret
js
inc
cmpb
dec
and
test
mov
jae
std
mov
adc
ja
clc
push
sub
cltd
cld
lods
push
loopne
les
into
push
xorl
xchg
dec
js
inc
lds
inc
cmp
mov
inc
pop
and
inc
sub
mov
jmp
adc
xor
sbb
mov
sti
leave
shlb
aam
push
test
out
push
pop
in
cld
enter
data16
xchg
mov
inc
jp
or
movsl
adc
xor
mov
or
es
push
sub
mov
push
xorb
sbb
xchg
or
xchg
cmp
and
jno
mov
xlat
test
shll
sub
gs
insb
and
shlb
jb
mov
push
mov
inc
mov
popa
movsb
bound
ret
or
or
insl
test
inc
dec
mov
and
cmp
inc
loopne
je
addl
sub
jnp
adc
adc
mov
sub
imul
test
or
cmp
popa
popa
in
add
rcrb
pop
or
push
mov
dec
cmpl
rorl
das
push
pusha
das
es
stos
xor
push
les
mov
aad
jne
addb
push
test
mov
push
sbb
xor
or
push
cmp
add
js
adc
xchg
jmp
sub
inc
xor
sub
shr
add
adc
dec
mov
mov
or
or
inc
and
adc
daa
sbb
sub
popa
adc
or
adc
out
outsb
je
sahf
jbe
pop
adc
imul
int
add
dec
out
call
mov
ljmp
in
aad
flds
xchg
push
pop
movl
push
mov
daa
cltd
adc
jmp
mov
jp
xor
jbe
add
xor
push
add
mov
sub
lret
pop
into
sbb
out
test
lods
adc
lods
pushf
add
fistpll
xchg
mov
push
adc
imul
das
inc
cmp
jl
ja
js
insl
sbb
mov
add
push
jbe
or
aam
ret
jns
bound
and
add
ds
mov
and
and
outsl
outsb
imul
and
gs
popf
lea
test
add
dec
aaa
jb
cmc
jae
loope
loop
jcxz
cwtl
ja
in
jne
popf
in
push
inc
jae
fsubs
add
dec
gs
lret
enter
xor
xor
sub
mov
jb
jns
mov
shrl
inc
dec
push
pop
insl
push
and
cld
sub
add
push
addb
push
pusha
cmp
js
push
or
lret
dec
daa
xlat
add
out
push
xlat
xchg
add
add
adc
adc
lock
mov
push
movsl
dec
lret
imul
call
sub
xor
es
les
ds
mov
shl
jbe
call
pop
mov
and
jno
inc
shrb
cmp
dec
shlb
pop
or
aad
gs
ss
gs
mov
xchg
insb
outsl
jb
and
shlb
add
cmp
data16
sbb
js
insb
cmp
fnstsw
jo
aas
decl
adcb
fnsetpm(287
push
mulb
sub
or
fwait
push
adc
inc
out
mov
push
shrb
mov
push
std
jae
mov
mov
es
xchg
push
leave
or
adc
push
xor
andb
imul
sbb
inc
mov
xchg
mov
lock
xor
fnstsw
rcrb
movsb
push
and
sbbl
inc
cmp
shlb
out
push
jne
fmull
push
sbb
mov
into
or
mov
rclb
into
int3
mov
pop
add
xlat
mov
add
jl
inc
inc
inc
daa
test
pop
jbe
das
or
out
enter
inc
sbb
sbb
jl
adc
adc
add
mov
sub
cmp
and
in
sub
xchg
mov
push
sub
mov
mov
jns
les
sub
sbb
xchg
pushf
faddl
movsb
or
mov
pop
addb
mov
pusha
ljmp
mov
rclb
outsl
arpl
jae
add
or
fists
popa
je
push
outsl
outsl
insb
push
xor
fwait
sti
in
outsl
je
xchg
push
imul
and
sbb
jne
mov
jo
mov
sbb
add
inc
insb
pushf
cwtl
add
mov
dec
gs
xchg
cmovbe
adc
push
mov
jp
push
jnp
inc
add
dec
outsl
mov
add
fs
adc
adc
mov
dec
outsl
popa
fs
imul
jg
movsb
add
imul
fbstp
push
je
inc
jns
add
xor
push
and
outsb
out
xchg
inc
fs
dec
into
add
mov
test
xchg
mov
gs
js
jnp
dec
aaa
ja
inc
outsl
jb
outsb
and
lock
bound
push
push
gs
outsl
outsb
push
or
mov
xchg
into
push
addb
pop
jo
jae
jmp
es
mov
push
push
pop
repz
cmp
inc
pop
ret
andb
mov
inc
jno
dec
pcmpeqb
pop
sub
and
pusha
xchg
push
clc
push
ret
clc
add
push
add
sub
sub
sbb
push
gs
jnp
mov
je
mov
sub
fsubrl
hlt
sub
insb
in
push
cmp
gs
addl
xchg
jo
mov
loope
xchg
fldz
push
imul
sbb
outsl
dec
xor
pop
inc
xor
jb
pushf
sub
inc
inc
mov
lock
outsl
jae
outsl
std
jo
or
jns
fists
imul
pop
mov
mov
das
xor
imull
dec
xchg
movw
push
sti
add
lds
sti
pop
add
sbb
adc
jg
test
popa
or
fldt
outsl
pushf
xor
dec
mov
std
addl
imul
mov
outsb
push
jmp
pop
add
inc
push
dec
inc
ss
inc
adc
jo
xchg
mov
arpl
push
push
repz
mov
push
pop
push
imul
jb
fs
lret
xor
jge
xchg
jne
loope
pop
std
inc
pop
pop
and
dec
adc
push
shll
fmuls
sbb
fiadds
ljmp
jbe
inc
cmp
and
push
push
mov
aaa
jecxz
scas
push
inc
pop
or
loope
dec
insb
add
push
inc
xchg
inc
in
movl
mov
and
cmc
cmp
push
xchg
mov
out
jb
insl
mov
sbb
mov
fisubs
jae
sub
jnp
sbb
pop
add
sub
insl
mov
mov
imul
sub
jne
test
movsb
jne
cmc
iret
aad
bound
xor
pop
add
mov
mov
popf
jnp
iret
xor
fidivrs
inc
lahf
jb
cmp
adc
xchg
sbb
xchg
loopne
addr16
outsb
jne
ss
nop
insl
push
ja
inc
push
inc
stos
fadds
mov
mov
add
insl
jp
xchg
or
sub
xchg
or
test
in
sbb
xor
mov
pop
add
mov
pop
inc
cs
xlat
push
xor
imul
add
dec
xchg
popa
xorl
pop
daa
cmp
jns
jae
ficoml
adc
sub
add
mov
cmp
pushf
or
outsl
hlt
aas
aas
xor
inc
pop
mov
fstp
gs
jae
nopl
sbb
sbb
push
and
and
or
test
adc
outsb
sub
arpl
in
or
loope
pop
jbe
xchg
int
mov
add
xor
ret
cmp
cmpb
ret
add
dec
push
push
mov
cmp
ficomps
jo
dec
insl
loop
scas
mov
push
mov
adc
pop
add
ret
push
loopne
mov
add
cwtl
cmp
cwtl
xor
push
popa
jbe
inc
insb
add
push
inc
inc
sub
jmp
loop
inc
dec
push
dec
xlat
leave
sbb
inc
sub
push
dec
addr16
loop
ss
mov
add
call
shl
test
pusha
aaa
neg
call
inc
adc
add
cmpsb
mov
ss
dec
push
push
std
push
lds
lock
scas
cmc
cmp
inc
inc
sub
cli
push
jg
adc
cmp
add
sbb
movsl
or
mov
jo
adc
sub
scas
sbb
jl
addb
sbb
mov
add
fistl
movsb
popa
adc
incb
add
stos
and
or
xchg
adc
sub
call
mov
inc
jo
xchg
sub
mov
add
push
jmp
nop
xchg
lret
sub
mov
cmp
daa
ss
sahf
ds
and
pushl
jbe
sbb
mov
pop
mov
stos
fldcw
dec
adcb
fmull
jmp
ret
fidivs
js
in
scas
out
mov
xchg
adc
inc
jl
push
fdivr
jmp
cli
cli
add
mov
or
jbe
dec
push
mov
out
int3
xlat
addb
pop
repnz
jmp
mov
cli
movsl
cli
jge
dec
mov
adc
pop
pop
xor
movsb
ljmp
mov
pushf
fbld
inc
enter
adc
imul
mov
stc
dec
aam
lcall
stos
sarb
stos
mov
pusha
jo,pn
adc
pop
adc
jg
dec
xor
jmp
cmp
loop
leave
rcr
mov
ror
dec
lea
inc
push
or
das
push
sbb
fiaddl
ror
adc
inc
lock
incl
clc
and
xor
inc
test
mov
call
je
ret
enter
gs
adc
rdtsc
cmp
notl
add
dec
jmp
push
out
jmp
lock
sub
lea
or
clc
lea
std
pusha
mov
das
and
test
es
push
mov
call
icebp
outsl
or
jo
cmc
and
or
mov
sbb
sbb
inc
or
mov
stc
pushf
not
clc
neg
cmp
sub
cmp
or
into
fistps
loopne
cmp
adc
adc
mov
ret
neg
aas
cmc
mov
clc
xor
pop
sbb
mov
or
sub
pop
call
ja
in
into
clc
es
cmp
cmc
sub
outsl
fistps
rcl
aad
aas
mov
stc
call
sbb
mov
fsubl
pop
test
mov
add
dec
fmull
inc
cld
adc
cmp
add
and
adc
mov
dec
test
pop
jl
and
and
pop
jae
lock
cmp
push
or
push
dec
fstp
in
mov
dec
and
lcall
adc
loope
hlt
clc
xchg
fucomip
sbb
addb
test
sbb
sahf
mov
in
arpl
hlt
neg
mov
aaa
outsl
jg
or
mov
outsl
fnstcw
loopne
pop
cmp
int
clc
loop
adc
push
repz
out
ss
xor
neg
jnp
icebp
out
sbb
pop
das
aaa
pop
out
mov
and
mov
jnp
adcl
int3
fdivrl
mov
fidivrs
daa
pop
add
pop
inc
loopne
mov
inc
daa
dec
in
ret
jnp
mul
sarl
add
mov
adcl
insb
xchg
push
adc
in
lock
daa
mov
mov
inc
mov
les
pop
aaa
sti
xor
movq
jmp
jecxz
daa
fidivrs
sbb
jecxz
inc
pandn
inc
movzwl
bound
dec
lahf
pop
add
add
stos
clc
fidivs
jae
pcmpgtd
add
fnstcw
pop
jnp
pop
cmp
fsubp
ret
imul
pxor
jge
das
pop
imul
jnp
fwait
addr16
decl
inc
jmp
lahf
cmpxchg8b
mov
sbb
paddsb
hlt
les
das
mov
inc
loopne
sbb
std
pop
pop
nop
xchg
pop
punpcklwd
jecxz
mov
sarl
inc
scas
pop
pop
xchg
in
jle
iret
xor
mov
prefetch
xor
mov
push
sub
mov
jbe
jp
cmp
hlt
popa
push
shlb
mov
push
pushf
callw
and
cmp
add
add
jmp
push
cmc
cmc
jmp
pop
jg
sub
cmpsb
inc
outsb
cmp
jmp
test
and
pop
push
adcl
pusha
dec
adc
fstpt
out
js
jmp
push
call
stos
adc
sar
data16
out
jg
sar
pushf
mov
add
call
mov
fucomi
lods
or
mov
add
mov
or
cmp
rorb
jle
sbb
call
ror
inc
stc
imul
call
mov
in
jg
push
call
mov
mov
add
mov
or
pop
dec
push
std
hlt
pusha
imull
cltd
pusha
or
jmp
cli
out
imull
pop
ret
xchg
aas
fstpl
inc
outsb
imul
fimull
es
cwtl
ss
pop
outsb
xorl
jmp
adc
add
or
aam
std
and
sbb
pusha
cld
pop
push
adc
mov
jmp
movsl
decb
inc
add
aas
insb
mov
add
pop
loopne
mov
add
mov
pop
xorl
xchg
shr
pop
add
lock
shrb
push
lock
rcl
adc
sbb
out
js
push
jmp
pushf
push
cmpsb
cld
jmp
enter
pusha
fxch
mov
fcmovnb
ja
stc
addl
adc
std
out
pushf
add
pusha
push
jmp
adc
aam
fadd
mov
gs
inc
shl
add
dec
add
loop
in
push
fwait
sub
clc
cmc
shr
call
arpl
rorb
lret
test
mov
xchg
pop
movsb
add
sub
out
outsb
pop
cli
pusha
pop
adc
shl
bound
shl
xor
cmp
out
nop
xor
cwtl
fistps
cmpsb
loope
lea
mov
push
fcomip
lahf
sbb
mov
xor
bsr
mov
fbstp
rcrb
idivb
rolb
fadds
xor
fisubrs
icebp
in
into
pop
shl
stc
xchg
aad
fcmovnu
test
std
fistpl
sbb
out
or
add
dec
sbb
sbb
ret
cmpsb
cltd
mov
add
dec
mov
icebp
push
mov
jmp
push
int3
fisttpll
jmp
mov
sub
imul
ret
fdivl
adc
out
mov
not
call
ud2
fimuls
das
ror
push
pop
or
orb
insb
call
mov
icebp
xchg
mov
or
in
sub
push
xchg
or
clc
jmp
add
cld
mov
push
jmp
mov
and
pop
incb
imul
push
bound
pop
repz
gs
push
cmp
mov
lea
mov
mov
cli
cmp
ja
pushf
mov
xchg
dec
cmp
ljmp
dec
ret
jmp
fldt
outsl
cmp
ss
fidivrl
mov
repz
aas
add
rorb
jae
pop
dec
mov
clc
popf
sub
test
pop
cld
cmpsb
or
xor
adc
add
push
pop
push
outsb
mov
int
shl
pushf
clc
shl
jmp
jge
cld
shlb
ja
call
addr16
or
cli
add
xor
mov
add
sub
push
cmpsl
pop
clc
jo
fistps
xor
scas
xchg
daa
ss
add
js
out
data16
cmpsl
aaa
inc
dec
scas
push
cli
cmp
mov
mov
les
jmp
test
ja
mov
out
sub
aam
je
call
inc
dec
pushf
sbb
and
mov
cmpsb
pusha
pop
pop
pushf
cli
hlt
jo
mov
stc
das
cwtl
icebp
push
pop
cmp
stos
out
push
add
jge
loopne
cld
neg
pop
scas
xor
test
xor
mov
adc
lods
and
andl
nop
mov
mov
sub
xchg
or
add
iret
aaa
les
sbb
xchg
clc
sbb
add
nop
add
std
rcl
insb
jmp
insl
test
mov
mov
jp
rcr
sbb
pusha
cmp
movsb
gs
loope
clc
mov
pushf
fsubr
inc
push
and
lret
push
dec
or
insl
jnp
cli
add
lret
jg
inc
cmp
ljmp
xchg
out
clc
fstp
lods
xor
mov
inc
test
stc
bound
mov
testb
sub
adc
test
push
insl
push
sub
rolb
mov
fwait
push
pushf
ljmp
mov
mov
cwtl
pusha
push
test
inc
push
aad
pop
out
sub
or
or
call
test
adc
sbb
or
aam
xchg
push
call
ficompl
fstps
rcrb
insl
cmp
mov
jmp
xchg
mov
sub
adc
add
lock
enter
fstpt
in
loope
in
mov
cli
orl
shlb
pushf
hlt
clc
ss
fidivrl
test
clc
add
pop
test
movsl
cmp
out
mov
dec
cbtw
jmp
mov
xchg
cs
sbb
mov
stc
adc
xor
test
pop
mov
mov
sti
aam
push
vmwrite
sti
out
sarl
lock
or
xchg
mov
add
jecxz
pop
add
aad
xor
loope
cmp
test
xor
cmpsb
push
daa
mov
jbe
push
mov
jmp
mov
push
push
fimull
icebp
inc
mov
rcl
pop
adc
xchg
add
outsl
inc
cmp
fisttps
pushl
pop
das
dec
pop
clc
cmp
repz
popf
inc
adc
or
mov
xchg
xchg
push
sbbl
sbb
scas
and
call
and
divl
out
sahf
icebp
jnp
push
pop
jge
bound
jp
jmp
jl
sarl
mov
xchg
or
fdivr
push
push
clc
lds
or
push
test
or
mov
push
jl
add
pop
aaa
or
ficomps
decb
xchg
aaa
ret
mov
repz
cmp
popf
add
sbb
ds
into
or
leave
xchg
mov
js
mov
sbb
insb
sbb
mov
notb
push
pop
add
add
lcall
push
out
faddl
xchg
daa
out
xor
gs
scas
dec
xorb
cli
sbb
xchg
xchg
add
aaa
push
pop
daa
mov
push
cltd
jp
mov
adc
into
call
rcrb
lret
aas
mov
lea
in
and
add
lret
xchg
lea
out
add
ficomps
ret
xchg
and
mov
pop
cmp
mov
or
or
and
lds
ljmp
cld
fwait
mov
pop
es
adc
movsb
adc
pop
test
dec
call
add
ficoml
stc
mov
pushf
fnstsw
push
ret
cs
push
imulb
jae
or
and
ds
loop
xchg
or
xchg
outsl
jg
inc
jge
setbe
pop
xchg
cmp
outsl
push
ja
es
pop
and
imull
test
flds
jmp
clc
ss
and
outsb
sbb
sar
add
xor
movsb
cld
mov
aas
fadd
cmp
jbe
shl
and
jmp
fdivs
call
and
jbe
pop
lea
dec
cmp
push
pusha
clc
xor
daa
or
shlb
cld
call
pushf
cwtl
ljmp
sub
inc
cmp
mov
aaa
popf
fldl2t
adc
lret
lods
push
inc
inc
mov
movsl
pusha
add
mov
sbb
adc
xchg
jbe
inc
addb
lds
insl
sub
rol
rcr
scas
mov
fs
push
stc
jmp
adc
pusha
push
das
mov
enter
pushf
cmc
jmp
xor
xor
pop
jno
mov
es
decl
fmuls
test
cmc
mov
or
pop
popf
inc
pushf
sbb
sbb
test
cmp
add
cmc
pop
out
ds
push
xor
or
ja
adc
dec
cltd
iret
mov
pop
jbe
js
push
divl
pop
inc
fdivl
loopne
cmp
int3
shl
or
pushf
cld
stos
jge
mov
push
sbb
mov
dec
setge
xor
into
mov
inc
lret
push
mov
sti
push
cmc
lcall
mov
add
scas
ja
je
jbe
push
inc
mov
pop
mov
mov
roll
add
bswap
lea
pop
mov
sub
jae
cmp
inc
enter
mov
sub
adc
mov
call
push
pop
push
gs
sbb
cmp
xor
ret
fdiv
xorb
pop
lret
sub
lods
push
adc
in
mov
test
jns
roll
insb
mov
arpl
add
sbbl
add
jle
cmp
jne
cs
mov
jecxz
xchg
rorl
sub
cltd
lea
mov
cld
push
repnz
call
pop
icebp
nop
pushf
pusha
mov
aas
hlt
aam
lods
leave
popf
sarb
jne
lods
inc
xor
add
adc
cmp
mov
stc
call
andb
lret
lea
jbe
jnp
inc
add
dec
mov
fdivrl
pushf
dec
sbb
add
stc
in
sub
cmpsl
out
ret
jae
popa
push
inc
jge
xchg
mov
aad
add
cltd
inc
push
pusha
fsts
daa
lret
adc
add
rorl
mov
out
int
fldt
or
fistl
jae
mov
in
pushl
mov
sti
or
jecxz
mov
dec
pusha
push
ds
xor
push
pusha
inc
lds
imul
xlat
fists
xchg
mov
and
fxtract
fidivrs
ret
sbb
mov
xchg
rcl
mov
lock
sbb
hlt
ja
jnp
push
lcall
jae
xlat
sahf
dec
fistpll
push
das
push
sbb
xor
shll
aad
out
sub
or
push
xor
inc
dec
jp
fistl
cmp
adc
ret
out
cmp
test
mov
add
lock
cmpl
push
in
ret
push
arpl
jb
dec
int3
sbb
pusha
icebp
cmp
aad
and
aas
mov
fstps
fistpl
mov
movsb
stc
push
psllq
scas
out
jae
sahf
or
clc
stos
outsl
sub
je
inc
test
fneni(8087
add
or
addr16
ss
push
jb
aad
mov
xchg
pushf
scas
sub
push
push
or
xchg
fidivrs
cmp
jmp
mov
mov
inc
push
xorl
add
jae
decl
aaa
outsb
mov
xchg
fnstcw
and
lea
cmc
lea
sub
jecxz
test
sarb
push
je,pt
lea
sbbb
and
adc
sub
or
fildll
enter
mov
into
push
and
cmp
mov
daa
pusha
loop
pop
jns
and
cmpsb
or
ja
rcr
and
das
lea
repnz
out
bound
cmpsb
adc
push
insb
ret
xchg
ret
fidivrs
pushf
neg
rorl
sbb
mov
cmp
cmp
popa
stos
lods
popa
push
inc
push
sub
xor
call
call
imul
in
inc
repz
int3
outsl
xor
inc
call
and
repz
lret
push
loop
fwait
imul
adc
orl
rcr
and
xchg
dec
fildll
or
jmp
jmp
adc
sbb
ds
xor
pop
pop
add
fs
inc
pushf
xchg
pushf
jns
outsb
sbb
call
rol
xchg
mov
push
mov
repnz
test
push
sbb
icebp
mov
sub
les
popf
loopne
push
cmp
mov
sbb
scas
movsl
addr16
mov
outsl
xor
in
int
roll
shr
fsubrl
js
sub
loope
in
jns
out
mov
fldl
std
cmc
lds
lods
push
mov
lds
out
and
filds
bound
mov
incl
aad
or
or
mov
jle
incl
sbb
fs
dec
aas
jg
fisttps
mov
mov
mov
fistpll
jecxz
out
sti
xchg
ret
pop
push
or
mov
and
mov
add
add
add
dec
jo
ja
or
mov
mov
dec
push
inc
xor
jo
div
rorl
dec
leave
push
add
stos
mov
negb
lret
push
adc
clc
stc
pop
gs
pushf
mov
loop
and
and
ret
test
ret
shlb
pop
cmpsb
sub
sbb
minps
xchg
rclb
call
into
adcb
push
and
pusha
sti
xor
push
cli
sub
clc
addr16
pop
jmp
andb
jge
mov
test
or
aad
imul
pop
adc
xchg
xor
fucomip
mov
lahf
xchg
mulb
and
into
adc
mov
sub
in
mov
push
xchg
call
sbb
pop
dec
pop
dec
sbb
outsb
jb
movsl
loope
xchg
gs
in
pop
enter
mov
in
push
mov
pop
or
jne
pop
hlt
and
push
pop
dec
addr16
ficoms
dec
std
incl
push
in
cmc
push
test
jnp
fbld
int
scas
sahf
ljmp
mov
pop
arpl
xor
cli
sbb
xchg
jb
clc
mov
andl
sub
or
push
jns
mov
shrl
jle
pushl
xchg
enter
inc
xchg
out
test
jb
dec
lcall
adc
xchg
scas
sub
pop
pop
pop
sbb
pop
sbb
sarl
daa
incl
or
adc
adc
ret
outsb
sub
addl
xchg
sti
pushl
push
add
push
imul
out
push
pop
inc
loopne
vmovq
pop
out
and
scas
popa
lods
data16
sbb
jg
cmp
push
dec
movsb
leave
and
imul
jg
pop
aam
fsts
dec
test
inc
lahf
add
sub
jmp
lret
inc
je
mov
movsl
fstpt
mov
xor
mov
push
and
pop
mov
fistpl
movsl
mov
lods
jb
int
inc
loop
pop
cltd
sahf
test
add
scas
lock
in
sbb
or
in
pop
push
lahf
aam
sti
cmp
or
push
dec
aad
les
int
mov
imul
inc
sub
int3
sub
incl
arpl
ja
das
ret
or
mov
pop
ds
movsb
repz
scas
pop
fisttpl
add
push
lds
xor
pop
push
fstpt
and
mov
cmp
mov
fidivrs
gs
jecxz
hlt
sub
decl
ret
aas
dec
popa
nop
leave
cld
xor
movsl
cli
or
fcoms
push
idivl
in
cwtl
mov
adc
imul
aaa
mov
pushf
and
ja
jae
popa
add
push
out
pusha
jle
testl
adc
dec
aam
mov
aas
sbbb
icebp
outsl
lods
loopne
mov
sbb
jg
ljmp
out
and
xchg
sub
ljmp
ljmp
xor
xchg
cmc
sub
loope
sub
lcall
jecxz
inc
incl
xor
mov
loope
inc
or
cmpsb
cli
cmp
jo
jb
mov
fistpll
push
pop
ljmp
inc
cwtl
jg
mov
lcall
sub
mov
cmp
mov
adcb
jecxz
hlt
lcall
jnp
dec
inc
push
aaa
jb
rcrb
jmp
jg
and
jbe
cmpsb
std
pusha
fisttpl
sar
dec
jno
and
mov
repnz
jmp
gs
in
xor
dec
mov
scas
push
iret
or
call
cli
sahf
sub
in
inc
push
mov
shl
pop
ss
mov
out
popl
push
fwait
scas
and
fnsave
repnz
mov
ds
aaa
pusha
mov
mov
jmp
aaa
das
dec
pop
push
jp
popa
mov
xlat
inc
mov
insl
dec
jp
in
inc
sub
mov
testl
lret
lock
xchg
mov
pop
sub
cmp
fadds
insl
mov
mov
mull
dec
xchg
sub
call
mov
adc
push
popf
inc
mov
push
push
xchg
ja
sub
cld
fisubs
jmp
push
js
mov
dec
mov
outsb
jmp
pushl
sbb
fiaddl
sahf
sti
xor
jge
fidivs
pusha
jge
fstl
mov
mov
js
fucomip
lret
loope
pop
cwtl
inc
inc
outsb
stos
out
jns
pop
lods
negl
decl
dec
sub
shlb
cmc
sbb
test
mov
call
mov
in
test
mov
add
sbb
xor
pushl
xor
push
mov
lahf
outsl
test
rep
sbb
rorl
icebp
idiv
jmp
cmpsl
push
test
cmp
push
pop
roll
sub
fildll
lcall
jmp
fwait
repnz
mov
xchg
fistpll
ret
pop
push
cmp
xchg
in
xchg
push
aaa
out
xor
loope
lods
int
lret
decl
lret
mov
xchg
icebp
sub
lcall
iret
pop
lods
dec
out
sub
std
das
icebp
pop
xchg
jns
or
push
stos
cmp
ljmp
in
or
sbb
test
inc
or
mov
sbb
sbb
out
fbld
jbe
xor
add
mov
push
fsubs
cli
icebp
xlat
repnz
out
mov
test
repz
jp
mov
sub
das
or
jg
incl
cwtl
sub
pop
stos
into
add
and
repz
sub
sahf
sbb
pushl
xchg
xor
outsb
push
test
ds
popa
inc
dec
lock
or
call
add
loop
xchg
scas
mov
mov
cmovg
xchg
ljmp
insl
out
mov
imul
inc
push
mov
jo
stc
in
push
test
push
inc
aam
dec
jns
std
jecxz
scas
mov
dec
jge
stos
cld
dec
test
lcall
movsl
mov
push
clc
ljmp
xchg
dec
or
cltd
rorb
cld
cmp
rcll
push
push
in
lret
fstpl
aas
roll
mov
lahf
in
inc
lcall
shlb
ret
loopne
mov
sub
stc
sbb
pop
xchg
mov
incl
sub
pop
sbb
sbb
inc
adc
jg
xchg
lock
xchg
jecxz
cltd
enter
or
inc
jbe
dec
out
mov
ljmp
aam
loopne
xchg
dec
lahf
xor
jae
call
add
cmp
xchg
cmp
mov
inc
cwtl
cmpb
jmp
clc
popa
sahf
sub
in
jle
inc
bound
call
ja
adc
jns
lock
lcall
inc
cmpsb
push
xchg
push
pop
aad
add
sbb
inc
jnp
mov
mov
inc
push
ja
and
adc
add
rclb
jo
xchg
and
ja
sti
mov
pop
push
and
insb
es
call
pushf
push
rcrl
mov
pop
xchg
arpl
inc
mov
jae
xor
cs
aaa
out
das
cmp
in
outsl
std
cli
dec
xchg
dec
in
cmp
mov
hlt
add
lds
pop
cmc
subb
push
shll
jne
fs
xor
add
out
cs
mov
cs
and
nop
lds
and
xchg
int
fsubrl
outsl
xor
sub
jns
sub
add
sbb
sbb
jle
fildl
dec
shrb
mov
dec
loop
push
cld
xchg
fdiv
mov
decl
jge
sub
add
xchg
mov
or
test
inc
mov
arpl
add
or
pop
cmp
cs
sbbb
jg
dec
stos
jge
das
jmp
in
call
jbe
les
ljmp
jmp
mov
pop
or
dec
ja
xchg
repz
daa
dec
mov
notl
pop
fidivrl
add
push
mov
std
inc
jb
sar
ja
mov
cs
mov
mov
outsl
cld
xor
cmp
cli
imul
push
mov
loop
and
cmp
jbe
jg
xchg
inc
int
cmp
jle
or
push
pop
andb
hlt
push
cli
iret
adc
data16
push
dec
jl
mov
add
imul
inc
arpl
enter
maxps
lods
es
or
mov
pusha
mov
mov
fiadds
inc
inc
loopne,pn
fs
push
mov
ret
cmp
or
das
fucomip
cltd
dec
mov
movsl
fsubrs
mov
push
add
rcrb
push
gs
loop
add
imul
add
out
pop
shl
mov
pop
in
mov
into
mov
add
push
test
std
ljmp
gs
lock
mov
call
lcall
cld
sbb
and
jnp
mov
xchg
xor
xor
lods
sti
rorb
clc
add
rcll
insl
push
jge
aas
mov
mov
sub
loop
push
cmp
push
ret
push
out
faddl
cmp
jmp
mov
mov
das
adc
pop
lods
xor
enter
mov
xchg
fsubrs
shll
inc
sbb
decl
push
push
movsb
cmp
loopne
js
or
mov
xor
call
decl
int3
sbb
fisubl
or
fwait
xor
fmulp
rcll
pop
pop
push
sbb
push
sub
jnp
mov
scas
jecxz
sbb
nop
mov
scas
mov
push
mov
mov
jg
xchg
ret
sub
and
sbb
dec
lea
fstpt
ljmp
mov
or
aas
fstl
add
push
hlt
lahf
mov
jmp
hlt
jg
xchg
or
lods
roll
dec
pop
insb
xchg
enter
cmpb
push
loope
cld
rorl
xor
push
lret
out
insl
lcall
jns
mov
cltd
loop
aam
mov
sti
aam
jg
bound
cmp
push
jl
cmp
and
mov
rolb
sbb
fisttpl
js
mov
adc
jg
loope
and
mov
and
pop
hlt
outsl
mov
incl
pushl
push
xor
xchg
mov
dec
insb
cmp
cmpb
add
adc
xchg
sub
sub
adc
fisubrs
mov
not
or
xchg
jmp
sub
lods
in
imul
fdivl
je
and
xchg
scas
stc
shl
or
or
pushl
dec
sti
insl
repz
push
inc
pop
outsb
xchg
lret
add
xchg
ret
add
fnsave
jp
cmpsb
rcrl
aas
js
mov
mov
mov
cmc
clc
push
xchg
lea
daa
hlt
call
adc
sahf
aaa
aam
cmpsb
jmp
inc
mov
pop
ret
outsl
mov
and
imul
pop
inc
shr
lahf
push
jmp
mov
sub
pushf
or
cld
test
push
insl
in
or
das
or
movsb
sbb
cmp
jle
icebp
fstl
sbb
loope
out
inc
push
push
push
lcall
sbb
popf
push
and
dec
aas
in
pop
in
pop
add
add
mov
mov
cs
push
jno
mov
aaa
outsl
fs
jg
lods
dec
test
push
adc
repz
mov
sbb
clc
das
negb
inc
in
cld
mov
and
test
stos
addr16
pusha
mov
cli
xor
mov
clc
or
arpl
or
inc
adc
decl
cli
pop
nop
hlt
fs
leave
adc
mov
mov
jp
sbb
push
lret
bnd
mov
pop
popf
and
dec
sub
outsb
pop
outsl
mov
rolb
sub
jae,pn
cmp
lods
jge
nop
int3
or
test
in
dec
ss
test
mov
ss
and
rorb
dec
inc
xchg
sti
in
outsl
mov
jge
cmp
jle
and
adc
sub
jg
icebp
xor
pop
xor
mov
adc
and
inc
scas
sarl
shr
fnstenv
incb
xor
xchg
xor
add
xchg
xor
dec
stos
fdivrp
inc
or
call
clc
mov
pop
fadds
jecxz
jmp
xchg
cmc
or
hlt
incl
and
bswap
arpl
in
mov
and
sub
cli
je
inc
pop
imul
outsl
mov
mov
rol
pusha
pop
cmp
or
outsl
mov
mov
or
fdivl
cli
or
cs
fstpt
or
outsl
cld
xor
sub
dec
scas
cld
dec
mov
bound
sar
jp
arpl
push
out
inc
jns
mov
pop
or
fdivs
mov
arpl
xor
cmpl
fistpl
movsl
loope
mov
jo
lcall
pusha
shll
jecxz
popa
daa
arpl
fcmovnbe
xor
mov
cmp
repz
outsb
lock
cld
inc
out
adc
mov
xor
mov
rcrb
icebp
outsb
cmp
lret
sbb
mov
loope
mov
cmpl
decl
mov
and
loopne
and
fs
push
aaa
mov
test
xor
arpl
clc
and
mov
xlat
cmc
inc
pop
xchg
pop
decl
cmp
jo
dec
add
push
aas
inc
enter
pop
jg
mov
jmp
shll
or
inc
sub
call
les
fimuls
js,pt
pop
stos
mov
mov
pusha
jmp
stos
inc
fmuls
lcall
incl
je
cli
and
fmull
jmp
jg
push
dec
cmc
mov
mov
in
pop
dec
ja
mov
dec
lcall
dec
mov
das
fidivrs
push
jae
or
orl
loop
stos
mov
test
pop
mov
add
pop
clc
push
jmp
cltd
sub
sbbl
cmpsl
adc
sbb
or
filds
jl
push
mov
mov
xchg
pop
fildl
jmp
inc
sti
int
std
sbb
lcall
xlat
es
fs
das
imul
mov
jg
roll
call
fsubr
lret
loop
or
and
mov
call
sub
jle
push
ja
dec
loopne
push
decl
inc
ret
xor
add
mov
push
mov
sbb
cmp
aad
loop
and
push
adc
aam
lcall
add
or
or
stc
and
repz
int
fnstsw
ljmp
clc
pop
outsb
adc
mov
mov
lds
imul
mov
xor
pushl
outsb
sub
aad
cmp
pop
xchg
aaa
jp
sub
mov
adc
sub
dec
lcall
mov
pop
push
cli
push
mov
pop
cwtl
or
sahf
testl
cli
inc
fstps
push
repnz
inc
insb
leave
imulb
mov
cmp
hlt
adc
inc
decb
idiv
ljmp
fs
in
movhps
xor
in
mov
scas
lret
iret
sbb
std
decl
sahf
and
aad
xchg
movsb
fidivrs
fimuls
mov
dec
cmp
lcall
cmp
fwait
mov
fwait
dec
fcmovne
fs
lods
pusha
and
push
mov
in
push
popa
rorb
inc
rorb
es
mov
adc
sbb
ucomiss
leave
clc
mov
lcall
and
sub
xor
cld
imul
out
arpl
lcall
mov
jbe
outsl
jl
cwtl
sub
imul
dec
std
adc
clc
or
imul
sbb
fisubl
and
cmpb
fstpl
xchg
mov
pop
in
mov
push
lods
or
lcall
jnp
in
out
adc
inc
pop
das
or
enter
and
jmp
adc
jno
aad
sbb
ljmp
xchg
leave
lea
js
and
jbe
hlt
aas
dec
pop
shrb
sub
jno
cltd
push
aam
aas
cld
add
clc
pop
call
pop
mov
cmc
shl
mov
dec
pop
jmp
cmp
hlt
inc
jbe
fcompl
xchg
sbb
leave
mov
cld
lea
lods
fsts
test
aam
jmp
mov
lahf
cmp
push
sbb
sub
decb
cld
adc
lods
mov
sub
cmpl
lcall
repz
push
or
mov
test
jne
mov
mov
sar
dec
std
movsl
and
add
and
jo
out
pop
clc
jp
aad
push
sahf
xchg
and
rcl
std
inc
loop
ret
int3
mov
or
or
insl
lock
and
xchg
mov
das
jg
mov
imul
cwtl
popf
lret
jb
daa
fists
add
cltd
or
mov
or
or
jo
cvttps2pi
aam
pop
lock
xchg
imul
popa
mov
mov
cli
or
pop
sub
mov
rcrl
sbb
test
sub
je
pop
loopne
clc
clc
and
fidivl
gs
data16
mov
flds
nop
aad
push
xchg
xlat
inc
nop
es
or
push
clc
pop
clc
mov
out
jl
pop
mov
imulb
subl
inc
aam
mov
dec
pushl
pop
jnp
cmp
in
repz
jbe
mov
ds
movsl
mov
or
enter
jb
sbb
pushl
add
mov
test
dec
lods
add
out
in
out
lods
lods
clc
jl
mov
inc
jle
mov
sub
mov
lds
js
lock
addr16
mov
pushf
push
in
jg
mov
out
adc
cmc
cmp
cmpsb
sub
lds
add
xchg
inc
dec
add
stos
popa
pop
xchg
repnz
sbb
dec
xor
in
xchg
adc
xchg
xchg
repz
jg
das
push
push
and
mov
jae
insb
hlt
push
dec
inc
mov
in
mov
in
es
pop
jge
stos
out
cmp
shrl
mov
mov
lcall
cld
mov
out
pop
add
out
fucomp
xor
jo
mov
cmpl
ljmp
stos
aad
sub
jae
ljmp
loope
out
aaa
push
jne
lret
out
adc
andb
mov
and
sub
mov
push
les
into
ficomps
jo
js
outsb
cwtl
or
adc
pop
or
es
fldt
fbld
lcall
les
jbe
repz
subl
jno
dec
frstor
jg
pushl
jb
dec
lds
test
iret
xchg
icebp
lcall
incl
mov
cmp
mov
add
movsb
pop
cmp
jle
cs
stc
xchg
out
dec
sbb
mov
outsb
popf
cmp
xchg
ss
insl
test
pop
scas
lods
cltd
mov
rcrb
mov
mov
add
pushf
push
cwtl
jecxz
arpl
jg
mov
pusha
push
push
push
lods
mov
fiadds
cmp
icebp
out
fs
call
sub
js
int3
fs
jmp
sti
aas
add
sub
imul
mov
lcall
mov
pushl
cmpl
mov
cmp
sbb
std
notb
int3
gs
cmp
insl
stc
cli
scas
incl
ja
mov
mov
sbb
insb
mov
nop
jg
sub
mov
xchg
fisttpl
jp
mov
in
cmp
arpl
xor
xchg
xchg
jnp
lcall
push
enter
cmp
lahf
test
or
mov
mov
test
inc
movsb
add
das
jle
push
cmp
mov
inc
jmp
cltd
js
in
push
shll
stos
les
sub
xchg
clc
in
decl
mov
inc
cmp
add
sbb
jo
jecxz
mov
js
mov
xor
mov
movsb
mov
jmp
xor
push
lahf
jbe
sbb
mov
aaa
xchg
mov
mov
jo
dec
lret
loope
enter
mov
lods
inc
mov
cmp
sub
roll
in
pushl
cli
stos
jge
mov
das
or
jbe
jae
ret
add
add
in
push
add
push
cmp
cmpsb
mov
cmp
out
test
jl
jno
and
lods
push
inc
outsb
sbb
sub
div
pushl
lods
cli
add
jl
push
mov
bound
mov
xor
xor
push
mov
xchg
cmp
fwait
mov
adc
shll
xor
jmp
sbb
jo
and
das
pop
test
loop
stos
pushl
push
mov
loopne
push
adc
test
pop
outsb
notb
test
incl
pop
mov
jnp
das
jbe
repnz
fistps
fimuls
aaa
inc
mov
and
push
cmp
pop
push
data16
sar
call
sub
shll
or
das
jl
pop
ds
sar
mov
add
push
push
shrl
mov
fmulp
mov
adc
loop
sbb
xlat
or
stc
imul
xor
and
fucomp
jnp
mov
push
mov
pushf
push
add
btcl
scas
pushf
jno
repz
std
mov
movb
ss
mulb
mov
movsl
pop
jb
adc
pusha
jno
xchg
frstor
push
stos
adc
lcall
dec
and
aam
aad
mov
std
outsl
sbbb
xchg
mov
jmp
arpl
iret
push
xchg
add
pop
andnps
mov
std
inc
fcomi
inc
inc
andb
pop
test
cmp
imul
sbb
hlt
xchg
fistl
push
ja
frstor
js
cmp
outsl
xchg
cmpsl
popf
sub
pop
jle
mov
flds
sbb
inc
xchg
jmp
mov
in
repz
loope
shll
faddl
mov
cmc
jg
jo
cmp
insb
es
sbb
mov
xor
or
or
push
insb
jnp
leave
hlt
das
jecxz
xor
je
repnz
fwait
sub
jnp
in
push
adc
or
mov
pop
nop
arpl
sbb
xor
cmp
pusha
jmp
adc
adc
lcall
jns
pop
enter
pop
inc
xlat
lds
cmp
dec
movsb
subl
dec
fld
jmp
jae
sahf
inc
incl
cwtl
iret
lock
xor
dec
sub
or
arpl
mov
push
add
xor
fbstp
cmp
and
mov
mov
inc
add
int3
jnp
fisttpl
lods
imul
adc
aam
jp
call
cmpsl
dec
adc
cli
notb
add
lods
xchg
test
sub
out
jg
jbe
adc
push
xchg
mov
ret
sbb
in
adc
add
cmpsb
jmp
xchg
imulb
aad
sbb
sahf
stos
or
movsb
pop
sub
push
jl
insb
or
or
or
clc
sti
mov
in
les
ret
or
sub
xchg
push
movsb
daa
dec
jns
cwtl
jno
fs
inc
push
sbbl
shlb
lcall
jg
mov
mov
insb
push
ljmp
mov
inc
jle
xchg
jo
adc
xor
popf
inc
push
loopne
ud0
decl
dec
mov
js
in
loopne
jb
ss
lods
xchg
ss
mov
pop
shl
push
xchg
pop
hlt
and
mov
pop
sub
daa
outsl
mov
lcall
loopne
cmc
mov
call
data16
das
movsb
push
outsl
testl
pop
aam
addr16
dec
fnstcw
jmp
jle
ljmp
lahf
add
rcl
push
or
inc
push
fwait
es
pop
std
mov
pop
pop
jo
jl
mov
je
ljmp
pushl
mov
inc
call
pop
mov
pop
push
jae
int
jg
jmp
in
fs
xchg
inc
jg
fucomip
adc
leave
outsb
inc
test
sbb
jmp
pop
sbb
cmp
xor
adc
mov
dec
imul
ficomps
pop
lds
add
sbb
cmpsl
test
call
fdivrl
shll
mov
out
or
jns
cld
mov
inc
xchg
add
mov
push
mov
cmpsb
popa
cmc
pop
loop
push
cmp
pushf
mov
cmovp
pushf
jb
movlhps
and
call
dec
jmp
pop
mov
jecxz
push
outsl
mov
aad
mov
xor
lds
sub
test
jp
adc
aam
and
ljmp
jg
sti
divl
or
pop
je
cmp
and
dec
adc
dec
cld
dec
arpl
stc
cld
je
cwtl
mov
fisttpll
out
inc
fildl
xorb
test
mov
mov
inc
decl
inc
mov
in
sbb
nop
imull
sub
decb
jge
int3
ficoms
ret
and
dec
cmp
aaa
clc
fcomip
cwtl
cld
inc
xchg
imul
jns
clc
add
lret
call
jmp
sub
sub
push
call
icebp
js
ljmp
and
jae
xlat
cld
rdmsr
dec
push
dec
cmpsb
dec
xchg
or
das
mov
hlt
call
sub
pop
mov
movsl
clc
push
movsb
std
fs
xor
cmpsl
pop
mov
sub
mov
repz
adc
stos
cli
and
lcall
arpl
jne
mov
cmc
popa
sti
scas
cmp
or
mov
lret
xor
or
mov
xor
xchg
sub
fstpt
jle
mov
dec
mov
or
flds
in
fs
xlat
jmp
pusha
cmp
pusha
aaa
jb
cmp
repz
and
call
xchg
pop
push
arpl
ror
xchg
cmp
ret
ret
mov
mov
aad
loopne
std
or
out
pop
mov
lahf
fs
inc
pop
es
fdivr
decl
stos
mov
push
pop
xor
pop
or
call
and
mov
divb
into
popa
sbb
jl
mov
sbbl
out
icebp
incl
icebp
cmp
fs
jp
push
incl
push
or
lods
out
jg
xchg
cld
xor
adc
mov
ss
loope
push
mov
imul
mov
push
jg
and
xor
fxtract
scas
outsl
pop
pop
lret
ja,pn
pop
inc
leave
fs
sbb
mov
and
pop
es
cli
outsl
cld
imul
add
mov
lahf
xlat
sub
loopne
lcall
je
fnsave
aad
aas
xor
aas
xchg
lret
push
sub
popa
and
gs
rcrl
add
sub
lret
fisttpl
pushl
jmp
loop
mov
jb
inc
xchg
faddl
psrld
pop
mov
dec
lock
or
fldcw
mov
les
mov
decl
mov
sbb
mov
sub
scas
pop
mov
hlt
mov
mov
mov
pop
icebp
inc
daa
adc
add
insl
mov
inc
sub
lcall
fnstcw
mov
cmp
mov
notl
mov
lcall
cs
fstpt
or
pop
pop
test
sbb
pop
scas
test
adc
mov
je
in
ljmp
orl
mov
sub
fnstsw
lcall
mov
push
pop
out
add
push
andl
std
or
or
cmp
lods
cmp
pop
ss
pusha
out
xlat
xchg
outsb
sub
adc
jo
adc
movsl
incl
xor
cmp
shll
cld
pop
rorl
sbb
arpl
mov
iret
out
sbb
adc
pusha
sub
inc
jo
aam
add
pusha
je
push
in
rol
push
xchg
pop
pusha
and
push
push
push
mov
loop
sbb
fdivrs
pop
std
std
mov
xchg
push
pop
ret
jg
adc
dec
repz
lcall
pop
shll
xor
or
fnstsw
fxam
adc
inc
sub
push
inc
std
dec
add
loope
sub
test
cmpsb
daa
test
dec
xchg
push
xor
arpl
or
mov
jno
in
xchg
imull
pop
dec
mov
clc
lcall
nop
enter
flds
aaa
xchg
push
mov
ret
jle
jg
xchg
incl
ret
in
sub
or
outsb
jg
xchg
ljmp
jbe
in
js
dec
icebp
and
aam
pop
leave
jmp
and
inc
test
dec
in
push
cmp
jge
add
mov
popa
enter
mov
mov
filds
addl
push
jmp
aas
das
int
je
ss
lret
and
pop
arpl
nop
jb
xchg
lcall
dec
popf
jge
jmp
and
aam
push
in
sub
push
cmpsl
test
or
insl
add
inc
inc
div
and
pop
stc
repnz
int
cli
mov
enter
inc
insb
adc
inc
mov
outsb
pop
xchg
push
mov
ret
jno
xchg
ror
fisttps
rorl
pop
hlt
pop
pop
lret
jg
loopne
mov
dec
dec
xchg
jb
push
aam
push
shrb
fdivs
out
add
xchg
shll
add
int3
sbb
scas
mov
jb
call
stc
hlt
mov
js
repnz
fstpt
sub
outsl
mov
mov
insl
add
lret
aas
das
inc
pop
adcb
ljmp
mov
dec
jg
movsl
and
aam
pop
ret
out
daa
adc
test
popa
jle
push
jg
add
jl
movsb
aam
add
cmp
pushl
inc
lea
jo
dec
ret
js
lock
insb
enter
sub
pop
or
jo
lcall
sbb
and
aam
pop
lret
insl
xlat
sub
sub
jno
push
test
lret
lcall
enterw
mov
add
ljmp
inc
and
rorb
xchg
ret
jl
inc
into
leave
iret
outsl
jge
arpl
cld
jg
mov
adc
jg
in
jge
stc
dec
shll
aam
das
jg
push
push
dec
out
es
js
sahf
push
jg
mov
outsl
hlt
inc
inc
pop
and
scas
hlt
lds
ja
cwtl
xchg
mov
call
inc
pushw
mov
ret
jo
mov
cld
repz
frstor
popa
adc
mov
xchg
cvttps2pi
jle
mov
mov
ret
and
aam
jmp
sub
nop
mov
test
out
repnz
dec
cmp
or
or
mov
inc
movsb
test
inc
push
cld
test
mov
loop
pop
sbb
inc
add
mov
sbb
add
lret
iret
lahf
int
gs
daa
pop
xchg
repnz
popf
cld
lods
xchg
xchg
dec
cld
pop
pop
cs
and
aam
pop
int3
add
aad
nop
inc
out
std
xchg
jmp
jmp
mov
push
add
mov
xchg
push
xchg
lods
xchg
test
mov
mov
sar
loopne
adc
dec
test
mov
ret
cld
repz
jg
outsb
loop
ret
das
imul
adc
fcompl
jns
add
and
aam
pop
call
jmp
adc
test
push
sahf
sub
adc
xchg
push
or
adc
xchg
push
mov
fisttpll
fisubrl
dec
decl
jg
outsb
push
rcrl
cmp
mov
test
popf
push
or
pop
inc
test
cmp
outsl
cmc
call
jmp
xchg
cwtl
repz
fidivl
movsb
test
fbstp
cmp
add
call
pushl
test
cmp
std
or
xchg
push
rclb
cs
inc
std
lcall
inc
xchg
shlb
xorl
sahf
rcrl
ja
push
call
jo
mov
jg
insl
xor
loop
iret
outsb
push
loope
mov
sub
add
jbe
cltd
dec
and
mov
call
ret
out
jns
out
push
mov
es
aas
incl
xchg
push
pushf
loopne
add
xor
fcomps
xor
out
xlat
fstps
call
into
sbb
orb
mov
cmpps
rcll
sar
fwait
cmp
adc
outsb
pop
cmp
jb
mov
mov
dec
loop
xchg
sahf
std
insl
movsl
outsl
lds
loopne
inc
stos
outsb
lds
sbb
lcall
xchg
xchg
add
jmp
sbb
adcb
mov
xchg
in
lcall
cs
dec
testb
or
cld
pushl
add
push
jnp
pop
mov
iret
mov
in
repnz
add
lds
cmp
ja
outsb
ljmp
js
inc
popf
es
arpl
xor
sti
lcall
xchg
inc
or
aad
dec
or
and
xchg
cli
dec
stos
adc
cs
mov
sahf
pop
lcall
in
dec
out
push
ret
pop
scas
push
out
xchg
xchg
push
and
enter
idiv
or
outsb
adc
jle
jb
mov
dec
inc
jbe
xchg
neg
lock
fidivrl
out
cli
dec
stos
test
jno
cmp
mov
aaa
push
xor
fwait
sbb
push
rclb
mov
jb
addl
xchg
iret
call
cs
inc
dec
aad
imul
data16
and
test
and
outsb
loopne
fdivp
jmp
jge
rcr
das
arpl
mov
repnz
xor
or
jecxz
inc
test
aas
pop
out
leave
rdtsc
test
xor
jg
push
mov
xchg
in
xchg
aam
add
and
cs
or
call
mov
pop
jne
push
mov
iret
lock
add
shrl
jb
xchg
es
push
mov
sti
jbe
lcall
lds
fidivl
movsb
movsl
call
shll
test
mov
cmp
negb
pusha
pop
or
out
xchg
addl
testl
fnstcw
pop
dec
out
push
ret
mul
jg
mov
dec
ret
leave
sub
shlb
ja
ss
pushl
imul
outsb
aad
mov
sti
scas
in
ljmp
jmp
std
mov
or
das
or
clts
adc
pop
pop
fiadds
repz
stc
call
push
andb
scas
sarb
mov
test
pushl
jle
clc
mov
mov
cs
outsb
fdivrl
jae
jg
jmp
mov
dec
push
jbe
lahf
lret
gs
loopne
dec
stos
cmp
dec
out
inc
pop
lret
inc
popf
ss
mov
adc
mov
xorb
scas
push
adc
repz
xchg
rorb
shll
push
shrb
jns
dec
inc
fisubrs
out
adc
lods
pop
inc
sbb
sub
xchg
inc
into
outsb
pusha
xor
xor
test
and
lret
xchg
dec
jl
ret
popa
test
jb
jmp
lcall
addr16
and
gs
lahf
clc
add
mov
push
fdivr
mov
cltd
lods
mov
mov
cs
stc
leave
lar
mov
and
les
xor
xor
pushl
movsb
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
jg
pushl
mov
mov
xor
xor
inc
xor
xor
xor
xor
xor
xor
std
ljmp
xor
fidivs
or
sbb
and
iret
ds
ljmp
ss
aaa
adc
inc
aaa
pop
aaa
push
jae
xorl
aaa
mov
aaa
ljmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
pusha
cmp
out
data16
cmp
cmp
mov
push
idivb
es
pop
std
call
cmp
cmp
cmp
cmp
and
pop
cmp
cwtl
cmp
cmp
cmp
sub
mov
cmp
pop
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jmp
cmp
ds
inc
ds
ds
ds
xchg
aas
stos
mov
aas
in
add
fcompl
xor
fdivl
ljmp
xor
lods
incb
xor
shlb
push
cmp
mov
cmpsl
xor
xor
xor
popf
xor
out
std
pop
ss
fidivs
jmp
in
aaa
and
pushl
xor
ds
dec
aaa
data16
insb
aaa
fwait
aaa
mov
aaa
jne
aaa
aad
incl
sti
aaa
xor
pusha
cmp
cmpb
cmp
cmp
cmp
cmp
mov
fbld
xor
pop
aad
cmp
cmp
cmp
cmp
cmp
jmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jg
outsl
loope
cmp
cmp
or
cmp
add
or
cmp
xchg
aas
pop
shlb
add
xchg
pushl
inc
xor
dec
xor
stos
xor
xor
xor
xor
jmp
xor
xor
xor
jp
sti
xor
fdivrl
leave
or
cmp
mov
in
aaa
pop
test
call
cmp
mov
leave
cmp
popf
jg
cmp
cmp
cmp
xchg
or
cmp
cmp
cmp
mov
fwait
ret
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
mov
cmp
cmp
push
cmp
cmp
cmp
xchg
cmpsl
ds
fnstsw
lock
push
aas
mov
mov
aas
ror
clc
jg
fchs
mov
shlb
xor
xor
sbb
mov
jns
nop
xor
xor
xor
xor
jns
jecxz
jno
jle
xor
xor
xor
xor
jbe
ss
xlat
ss
cmp
cmp
mov
mov
cmp
cmp
jne
ljmp
cmp
cmp
cmp
pop
cmp
cmp
cmp
cmp
cmp
inc
cmp
cmp
cmp
cmp
cmp
cmp
adc
cmp
mov
scas
cmp
ds
ds
ds
sub
decl
popa
aas
push
ret
mov
lret
aas
fstpt
jecxz
out
lock
jb
add
xor
ss
fbstp
clc
xor
jl
sub
jb
jns
pushf
xor
xor
idiv
pushl
adc
sub
cmp
inc
xor
pop
xor
jnp
xor
xor
imul
decl
xchg
xor
xor
xor
movsl
dec
xor
xor
xor
xor
xor
xor
xor
xor
pop
sbb
pushl
xor
xor
xor
int
inc
pushl
clc
pushl
jl
lods
xor
cld
stc
xor
std
incl
adc
sbb
sub
xor
cmp
inc
ss
push
pop
jo
pushl
jbe
nop
add
or
pop
aaa
and
aaa
dec
aaa
pop
aaa
popa
aaa
imul
aaa
xchg
aaa
test
ljmp
or
aaa
loopne
cmp
pop
cmp
arpl
scas
cmp
cmp
cmp
out
clc
lcall
cmp
inc
cmp
cmp
je
mov
xchg
cmp
ljmp
loopne
sub
arpl
pushf
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
js
sbb
xor
inc
stos
xchg
sahf
aas
dec
aas
js
mov
mov
mov
add
xor
xor
cmp
cmp
cmp
cmp
cmp
cmp
cli
cmp
cmp
add
cmp
mov
ret
cmp
fbld
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
mov
cmp
xlat
fidivrs
cmp
cmp
dec
jg
inc
push
cmp
cmp
push
push
cmp
sar
decl
cmp
test
cmp
xlat
outsl
test
mov
repnz
and
sub
xor
xor
inc
ds
ds
ds
ds
ds
jae,pt
mov
popf
ds
pop
stc
adc
xor
mov
aas
pop
aas
ja
mov
xchg
js
fidivrs
in
fildl
add
call
fidivl
in
xor
xor
xor
call
cli
xor
inc
xor
pop
xor
xorl
lahf
sti
lcall
jecxz
lock
xor
xor
xor
xor
xor
mov
xor
inc
xor
pop
xor
ja
xorb
out
xor
xor
xor
xor
xor
xor
xor
xor
xor
pushl
or
inc
push
xor
outsl
xor
shlb
xor
imul
pushl
cli
jbe
jl
test
in
xor
xor
xor
xor
xor
aaa
sbb
and
xor
mov
jg
xor
xchg
xor
pop
ss
call
or
cmp
cmp
cmp
fdivrl
or
outsl
cmp
decl
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
pop
cmp
jmp
clc
incl
cmp
cmp
cmp
cmp
xchg
cmp
cmp
cmp
mov
adc
mov
mov
mov
fistpll
out
out
hlt
sbb
aas
or
and
daa
aas
sbb
aas
push
aas
pop
fbstp
fbld
aas
insb
aas
cltd
and
fnstcw
loope
call
test
push
and
pop
add
imul
fcomip
xor
cwtl
pop
lods
xor
xor
push
dec
xor
mov
jg
xor
xor
xor
push
xor
cmp
jb
scas
mov
xor
test
scas
xor
pop
dec
inc
lock
xor
xor
or
xor
mov
add
adc
pop
mov
sub
dec
mov
mov
mov
push
xor
fcoms
jecxz
lret
rcrb
cmpsb
mov
pop
popf
ror
rcrl
inc
mov
cmp
popf
fstps
cltd
cmp
cltd
cmp
adc
inc
inc
adc
mov
mov
sbb
or
add
add
push
cmpb
fdivs
or
pop
js
pop
xor
inc
repnz
mov
and
cmp
and
fnstenv
inc
aaa
loopne
pop
in
jb
or
sub
nop
jmp
rcrb
and
jg
pcmpgtb
and
add
cmp
mov
add
jnp
or
and
jae
jmp
push
jbe
repz
daa
inc
pop
test
add
daa
inc
add
add
vmwrite
and
inc
and
and
test
add
jl
and
add
inc
push
push
add
addb
adc
add
sbb
push
pop
push
add
stos
sbb
inc
and
sysenter
push
add
lea
cld
cmp
cld
ret
adc
and
pop
imul
or
mov
je
sub
xor
stos
mov
enter
mov
inc
xor
add
and
pop
repnz
adc
nop
inc
and
and
xchg
movaps
jl,pn
and
mov
sbb
and
lret
mov
and
add
inc
adc
add
adc
push
call
leave
psubw
adc
add
fcmovnu
call
push
data16
add
or
xor
adc
and
and
out
cmpsl
mov
cmp
nop
daa
add
add
add
repnz
xor
inc
inc
and
in
xor
xor
xor
cwtl
and
cmp
gs
pop
xchg
xchg
lret
adc
or
sub
or
popa
jnp
mov
aaa
and
enter
mov
pop
add
adc
add
out
enter
and
add
enter
xor
adc
and
stc
xchg
pop
adc
adc
add
sahf
and
inc
and
and
inc
and
out
iret
aaa
push
pop
mov
mov
or
movsl
or
add
iret
sub
inc
push
popa
sub
movsb
and
add
js
int3
insb
lret
adc
mov
nop
add
out
leave
adc
les
mov
mov
mov
fcoms
cmp
ret
mov
and
xlat
cmp
mov
test
push
lods
jnp
push
inc
dec
lock
outsb
fcmovnb
int3
add
sbb
shr
out
testb
dec
pop
pop
push
sti
insb
pop
lock
sbb
pusha
or
jno
and
mov
hlt
xor
add
mov
sbb
push
jno
mov
cmp
xor
mov
int
hlt
or
cld
inc
or
aaa
andl
push
xor
inc
pusha
out
jnp
sbb
shll
sbb
fsubrs
inc
ficomps
adc
or
andl
ds
jle
mov
add
cli
push
mov
and
les
xchg
sbb
bound
repnz
fisttpll
cmp
divl
push
test
lcall
xchg
gs
or
dec
insl
insl
or
loop
pop
insb
xchg
into
insb
dec
dec
inc
arpl
sub
or
and
mov
loopne
mov
imul
gs
mov
cmp
mov
popa
rol
inc
mov
fwait
adc
add
aam
stos
test
loopne
pop
inc
adc
jb
mov
xchg
clc
setle
cmp
out
add
les
mov
mov
xchg
ja
popf
xor
cmp
mov
testl
jmp
enter
mov
enter
xor
stc
add
outsb
adc
jnp
lea
dec
shlb
xor
sahf
jne
mov
adc
sbb
inc
push
repz
or
negb
pop
jno
and
or
clc
lods
xor
sub
js
or
xor
sub
inc
inc
xor
sbb
jae
adc
add
leave
ret
or
in
repnz
clc
std
inc
pop
mov
cmp
xchg
jmp
je
repz
or
mov
xchg
dec
inc
pop
sbb
fwait
dec
push
push
cltd
in
jl
add
lret
dec
stos
mov
cmp
jmp
cmp
push
incl
idivl
fisttps
mov
dec
push
fnstsw
push
call
add
add
push
das
or
add
mov
add
lret
mov
push
push
cmp
mov
mov
dec
xor
mov
xchg
outsl
outsb
sub
mov
gs
cs
insl
mov
es
aad
insb
sub
inc
pop
xlat
popa
mov
jmp
push
sub
or
js
bound
shrl
xor
inc
imul
rorl
or
pmuludq
je
dec
je
mov
gs
leave
lret
push
addr16
nop
int3
adc
push
into
daa
daa
daa
addr16
rcl
sarb
cmp
sarl
aam
cmp
or
std
imul
nop
dec
movb
jae
jb
std
enter
test
jbe
sub
std
mov
sub
or
into
jns
std
inc
std
pop
jl
int3
js
popf
shlb
pushf
pop
loop
aad
jne
add
rolb
leave
in
xchg
popa
fbld
sti
outsb
pop
push
push
inc
and
mov
jl
xor
push
adc
xlat
push
jp
dec
push
es
cmpsl
insl
jge
inc
shll
sbb
mov
add
ret
test
jl
or
ljmp
push
adc
in
int3
sbb
dec
push
decl
jne
in
bnd
push
adc
sub
rcrb
adc
call
xchg
adc
inc
inc
and
jmp
dec
inc
cs
insb
js
ds
dec
dec
push
inc
xchg
enter
xchg
mov
enter
cwtl
in
mov
add
push
insb
pop
xchg
push
roll
bound
int3
mov
je
nop
push
xchg
std
xchg
and
pop
xchg
std
xchg
std
xchg
std
movsl
bnd
std
lret
mov
jnp
cs
lret
mov
mov
mov
mov
xor
mov
mov
bound
std
icebp
fwait
mov
or
mov
add
sbbl
jle
pop
sbb
xchg
or
insb
add
push
insl
test
jns
lcall
in
movsb
imul
leave
adc
out
adc
cmpsb
jmp
hlt
cmc
div
call
push
add
fldenv
pop
add
inc
add
cltd
movsb
sbb
sub
add
fsubl
sub
jb
outsl
add
mov
aam
and
cs
test
es
mov
daa
outsb
insb
popa
jne
pop
xchg
outsb
arpl
xor
shll
scas
mov
mov
dec
rorl
jno
imul
js
gs
push
pop
fildll
js
gs
xchg
insb
outsl
jb
cs
push
aad
xor
shl
js
es
mov
bound
das
sub
mov
in
mov
xchg
int
dec
fcoms
add
pop
add
movsb
add
repz
aam
add
in
fxch
dec
addr16
callw
pop
inc
inc
inc
mov
xorl
fwait
je
push
je
jne
mov
sbb
xchg
or
add
out
pusha
ss
inc
mov
andl
dec
xlat
fsubr
or
xchg
lds
stos
mov
repnz
or
jecxz
daa
pop
repnz
out
xor
sub
inc
insl
adc
jne
adc
push
jo
xor
jp
or
sbb
dec
sbb
jg
push
lret
add
repnz
push
or
add
fmuls
or
or
or
in
les
in
pop
sbb
jl
mov
clc
enter
mov
shrb
pop
add
test
or
sbb
cs
in
xchg
push
mov
loopne
test
add
push
adc
stc
out
int3
sub
sbb
add
mov
sub
xchg
inc
add
into
jl
mov
jl
xor
pop
mov
push
in
and
or
or
adc
mov
add
mov
pop
pop
neg
aaa
or
or
add
push
sahf
rorb
addb
sbb
push
inc
and
shll
jae
loopne
adc
dec
adcl
mov
sahf
add
inc
and
or
and
mov
mov
inc
and
inc
lret
pop
cmpb
dec
and
in
add
cli
movsb
hlt
cmpsb
xchg
or
push
adc
leave
in
push
mov
and
mov
lods
mov
mov
pushf
int3
add
adc
lea
or
pop
sub
mov
or
loope
mov
push
pop
xchg
push
data16
cwtl
inc
and
out
sub
add
mov
inc
lret
shll
pop
push
inc
and
dec
shll
inc
push
pusha
insb
shll
lods
ret
xor
or
out
inc
ficomps
ret
lcall
jb
inc
jae
xchg
xor
shll
jle
cmp
pusha
dec
rcrl
insb
xchg
dec
stos
pop
xor
shll
jle
sbb
and
mov
mov
aaa
cmp
xor
pop
pop
dec
dec
jo
adc
and
sbb
orb
jbe
adc
out
outsl
cs
pop
fbld
in
jg
or
and
outsl
jne
jae
xor
shlb
adc
mov
mov
popa
dec
push
push
js
imul
lods
js
push
dec
push
dec
adc
pushl
jae
sub
push
push
dec
sub
rorb
add
adc
repnz
xchg
mov
inc
inc
inc
adc
rolb
fwait
out
inc
mov
movsb
inc
or
int
and
and
mov
mov
mov
mov
fs
gs
nop
adc
adc
mov
push
inc
jecxz
inc
inc
adc
pop
adc
test
inc
push
mov
packsswb
jno
mov
popa
sahf
jge
mov
test
xor
adc
inc
dec
push
inc
add
test
mov
rorb
mov
sbb
jge
mov
dec
outsb
outsw
es
pop
fwait
xor
mov
shll
addr16
sbb
push
xchg
lcall
mov
sarb
push
outsb
jb
and
mov
adc
inc
and
dec
cmpsb
mov
push
jno
add
push
pop
inc
gs
inc
test
mov
mov
or
and
xchg
inc
std
and
xchg
sbb
sub
lea
sub
pop
adc
adc
dec
insl
insl
dec
jae
and
addr16
adc
in
inc
add
je
pusha
add
punpcklbw
mov
popa
add
jns
popf
insb
mov
dec
es
and
or
cld
aaa
pop
xchg
test
mov
adc
pop
cld
add
xor
mov
dec
sbb
xor
cmp
enter
lcall
dec
and
imul
jge
add
and
or
sbbl
pop
xor
add
lods
shll
add
scas
mov
dec
ss
inc
and
push
add
pop
adc
mov
lea
jne
sbb
push
adc
inc
rorb
mov
icebp
dec
mov
scas
pop
adc
clc
push
in
mov
cmp
jne
or
push
adc
cmp
adcb
and
sbb
push
dec
rcpps
outsl
jns
jae
jo
xchg
pop
out
xor
jns
pop
push
lods
and
imul
inc
add
insl
btr
xor
je
mov
int3
in
cmovno
imul
dec
outsl
sbb
jae
push
lock
add
incb
rcrb
adcb
xor
dec
test
add
and
push
mov
add
xor
fndisi(8087
pop
inc
scas
pop
add
sub
inc
cmovns
jbe
dec
mov
jae
dec
mov
mov
or
outsl
add
jb
lcall
jecxz
fstl
outsl
and
mov
cmp
xor
jecxz
je
out
inc
and
xor
jae
and
repz
jns
popa
and
sbb
inc
add
addr16
mov
inc
imul
dec
xchg
jnp
pop
add
or
fucom
sti
adc
or
in
xor
jb
cmp
fnstenv
xor
popa
jmp
xor
insb
popf
xchg
out
pop
xlat
pop
dec
or
lds
popf
or
pop
adc
scas
imul
xor
fsubl
sub
sub
cmp
or
daa
dec
fldenv
dec
imul
push
daa
jbe
mov
dec
test
bswap
test
and
jmp
push
ret
push
aaa
xor
imul
and
jne
jmp
xchg
sbb
xchg
jbe
mov
lock
jge
out
rolb
push
xor
xor
inc
mov
xor
xor
xor
pusha
dec
sar
push
in
xor
xor
das
mov
xor
xor
push
xor
xor
xor
xor
xor
rcrb
mov
xor
xor
or
sar
pop
add
xorb
xor
pushl
jg
mov
fwait
ss
aaa
xorb
aaa
pushf
aaa
mov
cmp
cmp
push
cmp
std
outsl
inc
cmp
cmp
and
cmpl
pop
mov
lods
fwait
xlat
cmp
lret
cli
xchg
dec
insl
cmp
stos
dec
cld
cmp
das
pop
rorl
clc
jo
cmp
xor
mov
xor
xor
xor
jne
jg
test
mov
iret
xor
xor
xchg
sub
int
xchg
mov
repnz
ss
ss
ss
mov
out
divb
and
aaa
mov
cmp
add
push
cmc
cmp
cmp
jg
cmp
cmp
or
sbb
xor
xor
sbb
or
push
aaa
mov
and
mov
dec
and
push
pop
add
or
andl
xchg
push
arpl
add
cmp
pusha
add
das
adc
jae
jne
sub
sbb
mov
in
sub
mov
pop
mov
push
add
mov
add
mov
push
mov
fidivs
and
add
jbe
aaa
insb
jbe
pop
pop
dec
jp
add
xchg
push
imul
rcll
loop
mov
dec
mov
es
cmp
ret
cld
popf
add
mov
mov
dec
sub
add
loop
cwtl
fs
and
scas
add
adcl
add
mov
lods
adc
mov
adc
and
mov
lmsw
and
aaa
aaa
pop
or
pushf
add
and
hlt
mov
repnz
jo
cli
and
add
nop
add
xor
leave
leave
stos
and
push
or
add
adc
push
movsl
or
xor
popf
xor
xchg
push
rclb
mov
add
add
rolb
mov
add
add
add
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
