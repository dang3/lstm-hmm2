insb
aas
mov
out
and
add
and
and
dec
shll
xchg
test
in
add
sbb
cmp
imul
xor
cmpsb
mov
clc
and
data16
and
sbbl
xorl
jbe
fwait
mov
cmpsl
addb
aas
add
ret
pushl
gs
xor
cs
insb
add
or
ficoml
sbb
push
gs
bound
push
jb
jbe
insb
gs
fcomi
jg
pop
jae
jae
gs
and
inc
inc
add
filds
jo
push
gs
outsl
imul
add
adc
adc
bound
xor
cs
jnp
out
jg
xor
pop
imul
insl
fs
aas
fisttpll
add
je
pop
outsl
arpl
bound
in
pusha
outsl
cmp
xor
or
cmp
xor
daa
push
mov
sub
dec
ja
andl
faddl
out
std
rclb
xor
jl
inc
add
add
or
lds
mov
or
popa
enter
insl
xchg
fcmovne
push
add
outsl
int3
int
pop
into
push
iret
rorb
shll
xor
shll
jbe
jb
aam
aad
xlat
pop
fdivs
mov
fidivl
fisttpl
push
pop
loope
lcall
inc
in
and
add
fwait
scas
out
call
imul
in
pop
in
aaa
lock
repnz
div
clc
gs
stc
dec
pop
cli
sti
js
je
mov
out
ficoms
xlat
sub
mov
pop
adc
aaa
sbb
dec
mov
xor
mov
ljmp
je
push
push
call
mov
jmp
mov
cmp
jne
xor
jmp
popa
insb
sti
arpl
movl
fsin
dec
test
je
sbb
fstpt
imul
jne
push
or
mov
sbb
iret
das
inc
mov
adc
cmp
jne
outsl
clc
fwait
out
mov
or
pop
pop
leave
ret
mov
in
sbb
fnstcw
imul
push
push
imul
pop
cmp
hlt
push
push
pop
loope
xor
clc
add
and
push
push
sbb
js
push
lock
cltd
add
add
push
pop
insb
pop
push
jae
pop
movzwl
push
push
stos
mov
fdivr
lock
cmp
je
push
adc
or
test
sbb
clc
cmp
adc
push
push
sub
lret
insl
add
inc
cmp
je
pop
mov
outsl
loope
sbb
movsl
sbb
ss
mov
jecxz
pop
in
sbb
pop
ret
xchg
sub
xor
inc
mov
ss
xchg
xor
mov
lods
jo
push
push
scas
inc
adc
mov
jge
or
push
adcl
mov
sbb
sbb
mov
cmp
adcl
push
dec
dec
ja
inc
addb
push
sbb
jmp
push
jno
dec
inc
imul
xor
xor
jge
add
mov
mov
and
jo
sub
lods
fnstsw
dec
test
je
adc
call
rorl
icebp
pop
loop
out
negb
dec
in
adc
mov
pop
and
push
add
cs
cmp
cwtl
fstps
adc
aas
jnp
lret
enter
ja
jmp
sbb
icebp
push
cmp
fcom
lds
jno
popa
mov
std
adc
push
fdivr
call
adc
mov
psrld
mov
inc
inc
dec
dec
test
jne
push
in
cmp
pop
jmp
lds
shlb
and
push
jecxz
shl
mov
mov
add
inc
cmpb
inc
fadds
test
add
mov
mov
cld
aad
pop
clc
inc
and
aaa
outsb
push
rcl
jl
sub
pop
adc
daa
push
mov
stc
push
dec
sub
outsl
push
add
adc
xabort
in
les
out
inc
js
lock
mov
ret
in
inc
mov
cmp
subb
pop
or
mov
cwtl
pop
adc
call
rcrl
pop
pop
nop
scas
mov
jp
std
add
xor
arpl
stc
je
or
out
mov
repz
lea
andb
push
pop
lea
jcxz
stos
stos
mov
loopne
adc
idivb
movl
adc
mov
or
fdivrp
maxps
pop
push
sahf
mov
pop
call
mov
cmp
push
xor
lret
cwtl
xor
adc
ficoml
xor
mov
std
adc
int
test
adc
or
pop
mov
pop
pop
pop
pop
mul
fldt
pop
push
cld
pop
jmp
in
in
cmp
or
inc
fisttpll
xor
push
push
std
imul
jb
insb
push
add
je
popa
mov
dec
mov
xor
pop
add
mov
dec
inc
add
pop
pop
mov
daa
or
jne
insb
inc
or
xchg
or
clc
test
ja
mov
mov
int
sahf
in
push
test
add
add
scas
ret
adc
xchg
add
inc
sbb
je
push
hlt
lret
ja
add
in
pop
testl
dec
xchg
leave
pusha
ficomps
mov
icebp
stos
push
xor
add
std
enter
imul
push
mov
iret
cmp
sahf
cld
les
fnstenvs
lods
jb
rclb
outsb
in
pop
fldenv
pop
int
ja
xor
into
iret
push
rorb
mov
insb
rcl
or
mov
xor
cs
xor
dec
mov
js
mov
filds
mov
adc
clc
js
mov
push
add
scas
mov
loope
or
cltd
int
iret
mov
pushl
js
mov
jae
xchg
mov
and
mov
fucompp
mov
fs
outsl
lret
in
mov
stc
jae
pop
sti
insl
jbe
add
xor
cmp
or
clc
cmc
sub
shrb
pop
mov
fsts
insb
icebp
xlat
xor
in
data16
push
movsl
fcomps
in
adc
data16
call
mov
das
and
das
sbb
cld
into
push
dec
sar
or
adc
dec
or
pop
cmp
xor
sub
push
call
mov
sar
fistpll
sbb
int3
push
push
jbe
fldt
stos
jl
call
mov
daa
cmp
shrl
push
loope
out
js
shll
outsl
je
ss
out
and
and
lock
xchg
cmp
and
inc
or
test
xlat
vdivsd
jo
fs
not
insb
cwtl
sub
or
pop
outsl
or
mov
and
aaa
scas
je
adc
xchg
or
fs
mov
jnp
jmp
jne
int3
add
xchg
add
cwtl
pushf
pop
push
cmp
lds
sub
dec
mov
in
sub
mov
or
loope
push
inc
and
add
ret
dec
movsb
inc
in
xchg
sbb
adc
and
and
scas
xchg
loop
adc
adc
and
rorw
dec
inc
dec
dec
and
ja
stc
add
dec
inc
dec
jb
push
dec
addb
fisubrl
inc
outsl
add
push
adc
sbb
addl
adc
dec
add
dec
pop
nop
add
push
pop
ss
mov
inc
lock
pop
mov
int
mov
adc
js
outsl
addr16
insl
and
outsb
outsb
lock
in
ljmp
and
and
outsb
and
inc
dec
push
and
fs
clts
ss
jbe
push
rclb
repnz
add
sbb
stc
out
xchg
inc
roll
test
push
or
inc
shlb
jnp
mov
daa
repz
push
inc
aad
cmp
stc
inc
jmp
testb
push
imul
cmp
dec
add
test
cld
dec
loopne
int
cmp
and
add
or
add
pop
addr16
lock
add
push
int3
and
or
xor
sahf
or
sbb
pop
aam
fs
call
pop
adc
push
aaa
add
bound
xlat
aaa
nop
push
mov
shrb
popa
je
int3
in
nop
ret
inc
sbb
cs
push
push
pop
sub
cld
xchg
daa
dec
imul
les
daa
or
mov
stos
sub
shll
sarb
xor
xchg
lret
dec
shrl
cli
push
fcompl
inc
push
cmpsb
jmp
ss
inc
mov
add
cmpsb
imul
imul
lcall
mov
fdivl
cmpsb
imul
xor
xor
roll
jp
dec
shll
shl
lcall
sbb
imul
imul
insb
fwait
decb
jg
or
hlt
lcall
mov
xchg
imul
addr16
cmpsb
sbb
in
testl
lcall
xor
dec
cmpsb
imul
insl
mov
fldl
dec
push
pop
xor
shll
jo
mov
mov
dec
shll
cli
add
popf
sbb
mov
dec
rcrl
adc
inc
cmp
jbe
idivl
addr16
push
mov
cmpsb
pop
ss
add
mov
mov
fsubrp
subl
cmp
dec
dec
iret
std
fs
sub
push
gs
fs
sub
pop
divb
jo
jne
jns
outsw
inc
aaa
dec
jo
divb
jb
adc
adc
dec
add
push
jl
mov
insb
xor
add
sbb
inc
or
mulb
add
iret
jbe
aaa
sbb
pusha
add
add
add
adc
mov
add
sub
sub
add
add
adc
add
insb
and
jmp
add
popa
mov
xor
adc
add
mov
insb
fldcw
pop
aas
or
mov
mov
leave
add
pop
roll
incl
dec
cs
mulb
pop
add
mov
add
test
inc
xchg
inc
pop
sbb
lret
push
inc
xchg
movsl
adc
add
xor
nop
sub
pop
ss
pop
das
xor
std
pop
sti
or
xor
ud2
push
add
outsb
pop
push
call
add
adc
out
xor
jne
jb
gs
sbb
sarb
sub
add
aaa
idiv
pop
push
inc
jb
push
and
ja
or
push
mov
jae
data16
jg
pop
and
addr16
xor
push
cmpb
sbb
xor
repnz
insb
and
jp
pop
cs
adc
mov
or
arpl
popa
insl
xchg
push
dec
inc
push
push
inc
push
inc
dec
adc
or
inc
lds
je
imul
dec
push
inc
jne
or
jbe
jb
je
sub
dec
fwait
ja
mov
imul
fs
push
push
dec
insb
inc
lods
mov
xor
push
stos
or
xor
xor
maxps
mov
inc
dec
dec
push
and
ret
sub
xor
and
or
push
add
push
je
insb
enter
pop
xor
out
fmulp
jns
outsl
pushf
and
outsl
jne
jae
adc
push
jmp
dec
push
push
xorl
shrl
dec
push
push
mov
dec
cli
mov
test
push
cwtl
cmpsl
pop
inc
je
ss
outsb
xor
je
ss
rcll
stos
je
pop
aad
aad
jne
jns
jae
arpl
insl
jns
add
and
lea
cmp
idivl
xchg
ret
rclb
push
and
add
push
push
mov
push
mov
jg
loopne
add
xchg
pop
mov
movsb
dec
popa
in
push
mov
sbb
or
mov
stos
fstp
add
sbb
add
sbb
xor
insl
jae
shrl
push
add
adc
mov
mov
or
add
cmp
jecxz
or
insb
or
or
enter
adc
push
lea
rcrb
or
int3
push
add
lcall
int
mov
sbb
int
rorb
or
adc
or
dec
or
and
push
or
pusha
jns
and
aaa
pop
lock
decl
imul
add
add
lea
test
js
lea
mov
mov
sbb
jg
or
cmp
add
ret
mov
sbb
out
ja
mov
out
out
fcmovnu
mov
out
add
mov
lock
dec
iret
adc
dec
mov
out
dec
mov
repz
push
fwait
bound
jle
mov
mov
add
insl
inc
push
stc
daa
adc
mov
jbe
push
lods
pop
mov
frstor
fucom
inc
xchg
rcll
mov
insl
sub
and
xchg
ja
fcmovnu
loope
adc
insb
mov
sbb
popf
and
outsb
mov
sar
xor
add
leave
mov
daa
cmpl
jo
mov
pushf
rcr
clc
std
loope
mov
fsubs
push
mov
sbb
addl
aaa
popa
or
adc
mov
je
push
imul
daa
pop
xchg
shll
adc
jb
fstps
std
add
daa
fs
out
out
xchg
jmp
mov
sbb
dec
mov
subl
push
jmp
arpl
mov
push
leave
idiv
jnp
pop
adc
stos
add
xor
xchg
jnp
add
in
jo
xchg
mov
add
rorl
mov
mov
inc
cmp
cmp
xor
cmp
sti
xchg
std
shll
add
dec
daa
stc
mov
dec
jge
sbb
jle
mov
dec
push
xor
xacquire
add
or
repz
hlt
sti
out
test
popa
test
push
popl
xchg
dec
sbb
mov
lods
popf
popf
cmp
mov
mov
add
and
pop
mov
mov
in
insl
xchg
push
cmp
ja
not
xor
cli
mov
push
add
mov
popa
mov
mov
or
ret
sub
arpl
fxch
sbbl
dec
ret
daa
lds
movsb
inc
fisttpl
pop
pop
mov
out
sbb
inc
std
sub
daa
xor
mov
daa
in
pop
in
xchg
cmp
mov
popa
mov
xor
add
mov
movsb
mov
fninit
repnz
jmp
cmp
jmp
dec
xorl
lahf
xor
cli
bound
pusha
outsb
xor
mov
mov
mov
stos
push
pop
mov
adc
fistl
and
aaa
mov
cmp
hlt
jmp
out
scas
push
je
lods
mov
push
add
jnp
mov
out
lahf
push
push
sub
pop
xchg
scas
or
bound
sbb
mov
clc
sti
std
ljmp
mov
sub
dec
mov
aaa
and
out
sub
fstl
and
pop
daa
mov
pop
js
xchg
cmp
andb
insb
mov
xor
or
pop
mov
fucom
cmp
mov
out
mov
mov
add
out
add
mov
inc
pop
cmp
cs
fiaddl
outsb
adc
fdivs
pop
daa
cld
adc
add
or
in
loopne
cmp
cmp
popf
inc
aas
lahf
notb
jge
add
jb
adc
pop
fmuls
mov
jle
mov
leave
xchg
push
dec
loop
jmp
xchg
out
mov
outsb
push
inc
jb
aad
fwait
push
adc
sbb
push
push
push
mov
out
jbe
jo
and
arpl
popa
je
mov
movb
into
mov
push
lods
fwait
sti
into
mov
stos
pop
xor
xor
or
incl
lret
clc
mov
mov
mov
int3
lods
loope
jo
dec
mov
ret
fdivl
addb
add
mov
cmpsl
add
call
pusha
pop
hlt
fs
xor
adc
sbb
orl
das
or
ss
pop
inc
inc
dec
out
pop
dec
cmp
xor
lret
dec
cs
insl
cmpsb
test
repnz
mov
dec
cs
test
std
and
pushl
mov
pop
sbb
pushf
fstpl
push
add
rorb
push
mov
rcrb
aad
mov
mov
sub
mov
andl
xchg
add
push
or
mov
mov
rcrl
or
pop
inc
or
sub
mov
push
push
and
jmp
lea
movb
mov
sub
sub
mov
movb
inc
ds
jbe
or
movb
sti
push
push
sbb
in
out
outsl
lea
xor
inc
pop
orl
in
or
mov
mov
and
rclb
or
es
inc
insl
jae
mov
or
outsb
into
push
xor
or
push
mov
mov
adc
push
in
jbe
xor
sbb
push
stc
inc
cmp
jmp
mov
cmp
jne
mov
data16
jg
gs
add
xor
aas
sub
insb
mov
adc
mov
pop
add
inc
push
pop
inc
repnz
xor
add
pusha
push
add
cmp
add
les
add
lock
add
int3
adc
inc
ret
dec
xchg
inc
push
ret
mov
add
jo
shrb
ds
push
add
aas
or
or
fsubrs
push
fldenv
or
push
adc
xor
lods
xor
ret
jg
shlb
cmpw
or
fistpl
push
dec
cmp
lret
sub
in
inc
roll
and
add
cmp
and
sub
adc
adcl
xchg
pop
pop
nop
adc
xchg
lcall
push
xchg
cs
add
jns
outsb
pop
push
or
mov
je
and
divl
adc
pop
cmp
ja
jnp
outsb
nop
jge
add
or
jae
repnz
loopne
std
mov
mov
mov
cmp
out
jmp
cmp
jb
sub
sub
sub
fistpl
jnp
cld
aam
cwtl
mov
enter
and
cli
jmp
lret
or
rclb
mov
cmp
fwait
or
in
mov
xor
jg
js
mov
add
jge
push
push
push
sbb
mov
jge
add
sub
ret
sbbl
dec
ret
fnstcw
dec
fbstp
sbb
orb
push
ss
fidivrl
test
fstpt
mov
lock
add
mulb
movsl
mov
movsb
mov
inc
mov
push
jle
mov
arpl
movsb
repz
sbbb
ss
sti
or
int3
or
dec
dec
daa
ss
enter
movsb
pop
dec
pop
mov
jg
mov
add
cmp
add
jle
push
jbe
fiaddl
ret
clc
fldt
sbb
flds
pop
or
sbb
insl
jecxz
xchg
loopne
dec
xlat
sbb
addr16
push
adc
add
mov
adc
clc
call
out
inc
or
sbb
jbe
shl
fstpt
or
add
jle
dec
cwtl
mov
push
xchg
lods
lret
mov
push
loop
and
push
pop
call
insl
sbb
adc
sbb
inc
inc
inc
hlt
mov
mov
mov
jb
inc
insb
out
clc
vmulss
cmp
jne
xor
xor
add
ljmp
push
ljmp
push
andw
fucomip
out
int3
popf
push
cld
subl
dec
cld
jo
pop
negl
andb
es
fidivs
and
imul
mov
std
push
in
imul
ss
xor
sub
xchg
push
lret
divb
mov
lea
cmp
jne
and
idivl
mulb
mov
sub
add
int3
pop
pop
cld
call
call
or
in
add
push
jo
jbe
adc
loope
call
pop
notl
movl
int
mov
xchg
outsb
cmp
out
or
stc
xchg
push
lods
adcb
jl
scas
in
enter
push
add
xchg
push
xchg
nop
dec
leave
add
nop
push
add
cmp
loopne
lods
mov
adc
daa
stc
mov
adc
adc
push
add
lods
xorb
sub
push
add
jl
ret
faddl
pusha
mov
mov
push
or
cmp
sub
and
inc
mov
xor
push
mov
pop
inc
jne
push
pop
jmp
adc
mov
movsb
loopne
and
sbb
mov
clc
aas
add
jle
xor
cmp
jle
dec
xchg
aam
loopne
dec
sbb
in
ja
pop
call
fistps
or
adc
je
test
jg
rorb
mov
push
in
jne
cmpl
daa
int
movsl
jecxz
add
inc
cld
jne
xor
or
xchg
lods
cmpsl
sti
movsl
aas
xor
andl
add
cmp
cmp
cmp
mov
push
and
mov
jmp
xor
cmc
pminub
nopl
mov
cmp
daa
lahf
clc
xlat
add
adc
scas
adc
push
push
sbbl
in
test
pop
int3
ror
and
lods
ljmp
cmp
lret
pop
pop
insb
outsl
pop
jp
add
mov
jbe
shlb
add
insl
mov
cmp
lret
sub
mov
je
and
push
outsl
add
push
jmp
and
in
movb
jmp
add
sbb
add
or
ja
jbe
mov
movsl
sub
pop
inc
idiv
adc
icebp
push
or
jg
sbb
jmp
andb
mov
jmp
xor
jb
add
mov
and
enter
dec
enter
les
adc
adc
mov
add
push
call
adc
adc
adc
xchg
jmp
xchg
out
add
cwtl
pop
inc
pop
sti
xchg
xor
movsl
pop
dec
outsl
xlat
adc
fs
ja
xor
mov
cmpb
xchg
cld
inc
test
xor
jb
in
jg
pop
call
or
andl
fisttps
adc
ljmp
jae
fistpl
popa
adc
and
push
pop
cmp
lock
jge
push
xchg
clc
adc
mov
mov
shrl
xchg
sar
jmp
aas
cmp
jae
incl
lret
shr
add
stos
add
inc
push
mov
mov
sbb
mov
dec
push
pop
jne
or
adc
sbb
jg
lods
mov
mov
mov
add
loop
or
adc
push
jecxz
or
jne
xor
mov
orl
jecxz
test
adc
pop
call
xchg
inc
cmp
dec
fldt
cwtl
cmp
mov
not
and
push
pop
jl
pop
jl
and
or
add
lea
push
ret
outsl
sbb
mov
add
outsl
mov
and
not
and
testl
lea
test
push
mov
xor
push
aam
or
mov
and
or
lea
cld
mov
std
shr
shl
push
pop
inc
sub
mov
and
not
fwait
jmp
lods
cmp
add
repz
mov
out
into
mov
shr
or
add
dec
daa
mov
fildll
mov
sbb
lret
outsb
sbb
cli
mov
push
inc
xlat
outsl
lods
push
xchg
jle
not
and
shlb
adcb
sub
xchg
rcr
mov
jecxz
sbbb
xlat
pop
adc
sbbb
or
mov
xchg
adc
sbb
inc
xor
pop
je
mov
or
pop
mov
sbbl
int3
xor
add
lret
push
push
xor
pop
ficomps
lret
sbb
les
rep
repz
pop
rolb
fcomp
cwtl
subb
orl
in
or
and
not
fisubrs
in
cld
ret
adc
pop
scas
testl
sti
mov
pop
les
subb
cltd
ss
add
pop
push
loop
pop
push
sub
sub
fsubs
push
push
add
mov
pop
mov
pop
mov
test
les
adc
xor
or
xor
out
mov
or
xchg
jno
std
stos
mov
fmuls
lods
es
add
and
lods
fnsave
cmp
pop
aaa
mov
push
mov
cmpsb
pop
mov
xor
dec
iret
and
xchg
mov
pop
or
popa
adc
mov
outsl
jecxz
and
mov
mov
shl
ljmp
push
mov
mov
ret
pop
bound
sbb
jp
outsl
lock
and
jg
cmp
sub
inc
mov
rclb
push
fadds
hlt
or
daa
clc
jb
mov
push
pop
pop
es
adc
repnz
adc
and
fstps
mov
mov
insb
and
call
lock
imull
mov
pop
lods
hlt
pop
adc
call
adc
mov
lods
mov
jge
repz
push
adc
add
pop
ret
and
in
pop
and
mov
cmp
cmp
jge
cli
fnstcw
out
nop
pop
jg,pt
or
stos
fisubrs
mov
mov
mov
out
loope
jle
lcall
ret
inc
enter
pop
add
pop
aaa
or
mov
push
fistps
popl
mov
cltd
sub
xchg
adc
test
fsubrp
int
mov
adc
inc
loop
shr
or
xlat
loope
or
jmp
rcrb
push
cmc
out
aam
mov
not
lcall
int3
aad
int
cld
sbb
add
adc
movl
xchg
dec
fisttps
lret
repz
adc
or
xor
mov
mov
cmp
jmp
add
mov
pop
test
xor
mov
lcall
xchg
mov
fadd
and
insl
adc
mov
sti
xor
mov
repnz
mov
cmp
std
mov
mov
ret
mov
ljmp
outsl
addr16
add
mov
fimuls
sub
loop
fmuls
pop
push
int3
pop
pusha
dec
mov
pop
pop
xchg
loop
xor
pop
mov
jle
jo
mov
out
pop
jl
sti
or
mov
jle
sub
loope
inc
stc
jae
mov
add
sbb
lock
cli
daa
mov
sbb
pop
dec
fisubs
fidivl
cmc
test
imul
adc
fidivs
shll
js
pop
out
in
fs
cmp
or
push
push
clc
imul
sarb
cmp
aam
cltd
js
movsl
jae
out
jbe
les
in
mov
divl
idiv
ss
rclb
jp
jl
pop
je
lock
xor
fiadds
push
lods
les
cli
fs
imul
jge
stos
pop
fdivs
fisubs
stos
rcrb
sbb
push
or
loope
ss
jl
inc
int3
or
push
xchg
ljmp
inc
push
or
lea
test
stos
shrb
and
adc
lock
pop
jns
push
hlt
cmp
adc
xor
fs
clc
into
aas
cmp
pop
pop
gs
sbb
fisubrs
outsb
rcrl
int3
or
lcall
ja
jns
mov
jno
dec
jge,pt
out
call
repz
unpckhps
sbb
je
jns
pop
test
dec
out
loopne
cmp
jg
call
outsl
sub
ss
jp
sbb
int
dec
scas
xorb
fistpl
loopne
sub
or
dec
outsb
jecxz
jp
ret
mov
ljmp
fdivl
out
stc
pop
mov
cmpb
arpl
test
sbb
in
dec
mov
xor
out
loopne
in
cmpsb
fsubs
ret
rorb
adc
repnz
repz
aaa
pop
pop
rclb
xor
lret
mov
jge
xlat
pop
add
pop
xchg
stos
push
pop
movsb
mov
mov
data16
or
pop
inc
call
and
mov
mov
sbb
cld
cmpb
cmp
cmp
jl
push
pop
sub
push
push
push
sub
aad
jmp
or
push
insb
js
cmovne
adc
fisubrl
push
insl
sbbb
pop
inc
test
nop
iret
pop
pop
mov
mov
sti
mov
or
add
and
sbb
cmp
jne
xchg
mov
stos
rcrb
lea
in
pushf
push
xor
mov
push
sti
pop
movsb
pop
cmp
or
cld
call
sub
movsl
mov
mov
mov
je
inc
add
cmp
out
or
testb
mov
sbb
pop
xor
lock
clc
pop
adc
mov
lahf
inc
mov
add
test
push
mov
sbbl
add
fsubr
insb
pop
cwtl
jb
cmp
xchg
jmp
pop
push
adc
sbb
add
cmp
out
add
call
gs
das
lock
out
jge
jo
hlt
gs
divl
lock
pushf
mov
mov
mov
mov
ljmp
jo
jnp
cmc
jnp
and
cmpsb
cmp
fmull
cmp
and
les
cwtl
into
adc
fimuls
jo
inc
push
pop
jns
pop
imul
roll
call
push
in
pop
and
push
push
push
ds
push
movsl
call
add
dec
out
push
out
push
mov
pop
ss
pop
repz
clc
sbbb
ljmp
fiadds
jae
jae
repz
push
pop
sub
sub
push
push
sbb
pop
cmpsl
pop
and
jbe
add
and
or
bound
stos
push
jmp
loopne
cmp
call
out
out
fisttpl
dec
push
push
imul
add
push
mov
stc
and
sub
ret
xchg
je
or
repnz
jle
mov
sub
push
cmp
xor
bound
push
adc
insl
sub
xchg
pop
push
cmp
int3
mov
mov
pop
notl
sbb
add
jmp
sub
inc
mov
adcb
push
sti
adc
std
cmp
and
jmp
sbb
cmp
je
sti
mov
cmpw
jne
pop
push
arpl
inc
add
cmp
add
mov
push
sub
jmp
jl
je
xor
mov
cld
push
aad
mov
int3
or
inc
lret
jbe
in
pop
les
movl
rolb
ret
push
or
outsl
arpl
push
je
xchg
cmp
testb
out
or
inc
add
je
cmp
jne
push
pop
xor
cmp
push
outsl
push
sahf
pusha
sub
add
xor
ja
loopne
xor
or
xchg
xor
rolb
loopne,pt
cmp
adc
addb
outsl
fdivrl
adc
dec
outsl
inc
test
push
faddl
rol
inc
pop
adc
mov
mov
movsl
outsl
mov
insb
test
stos
in
xor
cmpsb
mov
mov
pop
mov
sbb
xor
push
nop
adc
mov
ss
loopne
mov
mov
push
and
sbb
and
push
pushf
sbb
cmp
and
lods
loope
pop
pushl
mov
lcall
andl
xchg
cmp
fcomps
loop
mov
sub
mov
cmp
jg
std
and
push
inc
add
xor
cmp
call
cmp
sub
sbb
mov
out
mov
lea
rcrl
imul
je
cmp
mov
mov
cmpl
arpl
out
push
jo
mov
jo
push
push
pop
push
pushf
jne
dec
sarb
dec
add
sub
pop
mov
pop
sub
ja
in
sbb
pop
push
pop
pop
lcall
jmp
call
mov
or
insl
adc
dec
out
iret
push
dec
je
jmp
pop
xorl
mov
push
push
and
pusha
cmp
pop
dec
mov
sbb
add
int
and
add
mov
or
icebp
dec
ret
push
test
jecxz
push
mov
sbb
jo
push
aam
sbb
jg
in
fldcw
dec
or
lret
mov
mov
mov
mov
mov
lret
in
mov
mov
mov
imul
push
add
jmp
inc
gs
sub
mov
insb
outsl
jb
insl
shrl
cs
fcmovu
xor
dec
dec
test
loop
jb
xor
in
push
out
dec
out
lcall
sub
xchg
insl
jae
lcall
je
outsb
xor
xlat
xor
pop
mov
ret
les
lds
leave
lret
cmp
xlat
xor
xchg
push
xchg
xchg
mov
dec
cwtl
cltd
lcall
insl
mov
cld
mov
mov
mov
mov
fnstenv
pop
cmpsl
test
push
test
lcall
stc
hlt
add
lret
jns
lea
sbb
and
je
shlb
call
or
pop
xor
int3
pop
aaa
sub
push
lret
aaa
inc
in
inc
into
dec
fists
xchg
int3
dec
jb
fsubr
lods
add
loopne
clc
test
in
pusha
leave
jl
or
pop
gs
mov
rolb
in
jae
hlt
insb
roll
sahf
cmpsb
enter
testl
out
xchg
ljmp
sub
sar
lret
push
dec
inc
jbe
inc
jge
sti
subb
loopne
aam
cs
into
imul
jbe
shl
pushf
pop
cli
inc
ret
mov
test
and
sub
mov
fldt
xor
popa
sub
punpcklwd
nop
sbb
mov
sub
push
mov
nop
repnz
or
cli
cltd
pusha
rclb
or
movsl
add
in
sar
adc
cld
mov
or
pop
cmc
fsubrs
clc
std
andb
and
and
inc
mov
mov
sub
push
xchg
mov
aam
bound
push
fdivs
cmpl
adc
das
adc
sbb
mov
loope
push
cld
fistl
jmp
adcb
dec
sub
and
shll
pop
pop
xor
ljmp
or
or
adc
es
jb
xor
cmp
stc
dec
adcb
sbb
shl
inc
mov
into
inc
mov
pop
jae
inc
adc
test
leave
cld
faddl
jo
cmp
adc
imul
and
pop
mov
inc
cmp
jl
jns
xchg
leave
ret
mov
xchg
jge
xor
push
mov
pop
movl
and
lret
mov
jo
nop
roll
push
scas
ljmp
jge
fs
in
fsubl
pop
hlt
adc
fcom
adc
pop
fsubl
inc
mov
dec
lret
xchg
cmp
push
xbegin
mov
xor
jg
mov
cmpb
jnp
cmp
jae
push
push
lods
mov
clc
cs
push
insl
add
pop
repnz
sbb
adc
or
adc
push
lcall
cmpsl
sub
push
daa
pushf
test
cld
adc
mov
and
aam
sbb
call
jmp
mov
sbb
adc
or
cmpb
xor
shll
cmpb
inc
mov
in
andl
call
mov
call
mov
orl
aad
jo
jb
inc
mov
cmp
addr16
sbbb
ret
lret
mov
cwtl
cld
out
dec
outsl
jp
xor
sub
cmpsl
insb
insb
popa
pop
shll
outsb
das
fsubs
insl
xchg
fs
ja
fildl
lcall
fstp
jae
xor
cmpsb
imul
fwait
cmpsb
pop
xor
sti
cld
std
insl
icebp
dec
xlat
insb
int
lcall
mov
add
xor
mov
mov
mov
push
xor
roll
fs
pop
xor
mov
addb
bswap
pop
pop
lret
sub
jnp
popa
js
push
outsl
outsb
xor
pop
push
jb
icebp
bnd
add
and
js
jb
mov
jmp
adc
xor
xor
js
pop
push
sbb
test
mov
inc
mov
push
sahf
pop
subb
pop
push
hlt
sub
enter
xor
mov
sbb
mov
in
pusha
jmp
or
clc
adc
and
subl
and
popa
cmp
shlb
push
fwait
cmpsb
imul
mov
fisttpl
sbb
pusha
mov
or
addr16
add
add
sub
push
call
push
mov
sub
fs
or
roll
push
rol
inc
rcll
dec
sbbl
ret
lret
rclb
dec
xor
xor
push
mov
or
xor
loopne
in
ficoms
pop
sub
lret
loopne
in
xchg
mov
clc
and
lds
and
sahf
add
or
mov
loope
pop
dec
xchg
repz
fnstenv
hlt
in
sahf
test
fldt
mov
or
sub
not
outsb
das
out
mov
dec
in
push
or
icebp
jne
xor
xor
popf
test
dec
ljmp
xor
adc
xlat
and
push
mov
sbb
cmp
aas
dec
mov
pop
clc
lea
push
test
cmp
movsl
movsb
cmp
hlt
pushf
inc
loopne
inc
nop
and
pop
xchg
std
scas
rcl
cmp
stos
mov
stc
add
push
push
mov
lds
push
movsl
add
mov
push
loop
mov
xchg
pop
add
in
jb
sarb
inc
movzbl
divl
enter
cmc
hlt
push
ja
test
std
andb
jo
push
inc
push
negb
scas
pusha
adc
and
out
push
sub
jmp
jne
outsl
sub
cmpsb
jmp
or
insb
lock
icebp
popa
pop
repnz
cmpsb
jmp
insb
repz
imul
imul
adc
lcall
dec
int
ret
sub
push
jmp
adc
cwtl
xchg
sbb
xchg
xchg
xchg
popa
test
sahf
jae
mov
enter
in
sbb
push
dec
inc
xchg
sbb
xchg
xchg
inc
xor
cmp
adc
das
adc
jmp
jg
xchg
outsb
mov
cmp
xlat
mov
loop
sbb
mov
rorb
inc
in
sub
adc
jl
stos
inc
cmpsb
mov
cmp
cmp
in
push
outsl
popf
mov
or
aad
mov
push
push
push
pop
int3
cmp
cmp
cmp
mov
int3
fsts
insb
jbe
sub
adc
xor
xchg
xchg
xor
pop
push
mov
xlat
xor
arpl
lea
mov
fnsave
loop
push
and
add
jbe
enter
pop
mov
sub
push
call
mov
pop
xlat
inc
lret
faddl
imull
es
jbe
push
mov
pop
scas
sub
push
adc
fcomp
xor
pop
aas
adc
sbb
adc
stos
and
push
mov
cmp
inc
push
adc
test
lods
dec
pop
mov
sub
in
push
dec
push
ja
mov
call
mov
fld
pop
sahf
and
mov
cmp
mov
inc
jecxz
dec
or
fsubrs
fistpll
pop
xchg
inc
or
pop
out
fs
sahf
nop
sbb
and
add
jae
mov
jb
sbb
lods
push
neg
mul
inc
sbb
xor
pop
push
in
mov
adc
jle
mov
push
in
lea
fdiv
ss
aaa
rcl
jbe
lret
adc
xchg
mov
mov
fstl
subb
mov
lods
sahf
dec
sbb
inc
aaa
pop
pop
int
dec
call
sbb
pop
lock
mov
addr16
jmp
xor
xchg
std
mov
adc
mov
int
aas
xchg
sti
xchg
sub
inc
and
js
out
pop
mov
push
das
inc
mov
inc
popa
push
add
out
fld
flds
pop
push
push
ljmp
call
mov
jle
call
cmp
ja
sub
shlb
jns
dec
cld
sub
jns
sub
bound
mov
pop
lcall
insb
lcall
mov
dec
mov
movsb
movsl
cmpsb
cmpsl
jo
insb
lcall
or
mov
lret
jae
cmp
je
sub
cmp
shll
fs
shll
bound
dec
shll
insl
cmp
inc
dec
es
das
enter
xor
leave
lret
int
xor
iret
jae
rcl
rcl
xor
or
pop
xlat
aaa
fcomps
fcmovu
jo
imul
and
cmpsb
test
cmp
cmpsb
jae
arpl
jo
lcall
and
push
lcall
inc
cmp
push
mov
pop
push
les
xchg
incb
jmp
js
verr
lods
fldenv
jae
or
sbb
sti
push
jb
out
push
fisubs
inc
push
sub
fistps
int3
dec
pop
fdivl
in
mov
rolb
nop
fdiv
sbb
daa
mov
or
push
or
adc
add
stc
data16
push
dec
pop
into
leave
push
std
iret
aam
shl
fcompl
xchg
jns
pop
outsl
pop
and
sub
int
xorl
xchg
cmp
mov
jg
es
cmp
add
rcr
into
addr16
pop
mov
pop
xchg
cwtl
mov
push
mov
xchg
mov
imul
cmp
imul
or
or
pushl
push
ss
daa
imul
push
insb
mov
adc
inc
mov
mov
push
jmp
or
inc
mov
lea
test
add
mov
rclb
cwtl
jae
mov
push
ds
fstpt
sahf
movl
push
iret
add
iret
inc
push
fmull
pop
sub
rcrb
imull
sub
inc
mov
mov
add
adc
push
out
xchg
fldcw
push
cmpps
add
pop
dec
testl
sub
mov
sbb
and
xor
int3
enter
aad
dec
add
mov
insb
hlt
jl
adc
cmpb
repnz
sqrtps
mov
or
pop
pop
sahf
in
fwait
and
xor
mov
adc
and
fcomps
ret
xchg
or
inc
jecxz
pop
inc
and
and
sub
roll
push
xor
adc
jnp
sub
cmp
mov
dec
test
lgs
fcomps
loopne
inc
fs
loop
pusha
enter
xor
cmp
push
and
insl
aam
outsb
data16
push
ret
mov
sbb
cmp
lea
in
push
push
dec
or
add
sbb
gs
pop
sbb
repz
mov
std
enter
call
push
push
pop
mov
mov
shrb
or
inc
mov
mov
and
js
mov
jne
or
sub
push
add
fistl
add
dec
jnp
or
sbb
call
and
cmp
add
aam
ja
adcb
add
fiadds
inc
cltd
sub
jp
in
pop
mov
je
inc
cwtl
in
fs
fsubr
popf
dec
pop
pop
push
cmp
test
jne
sbb
push
push
jmp
lock
gs
xchg
xchg
mov
iret
mov
dec
mov
cmpsb
int3
lods
sub
mov
jae
mov
inc
cld
sub
daa
sub
dec
mov
mov
test
cmp
mov
and
mov
dec
pop
fcomps
push
sbb
or
es
ds
daa
mov
and
das
dec
and
fs
decl
les
sbb
add
cmp
imul
mov
mov
insb
insb
sub
mov
jae
je
push
addb
insb
dec
push
push
cwtl
gs
inc
inc
and
call
mov
mov
adc
loopne
dec
xchg
xchg
gs
insl
insl
inc
je
cmpsb
mov
insb
cwtl
add
gs
xchg
fwait
testl
hlt
es
inc
mov
loopne
jmp
inc
and
jl
cmc
pop
cmp
lea
cs
jae
push
imul
jecxz
sbb
sahf
jne
cmp
les
fimuls
addr16
and
out
cmpsb
xchg
lods
cmp
mov
mov
add
mov
jne
mov
push
push
mov
jg
pop
push
xchg
test
pop
imul
std
repnz
cmpsb
pop
popf
sbb
fs
enter
ljmp
test
in
call
sub
cmp
xchg
rclb
push
pop
jl
push
sbb
push
ja
mov
jmp
aad
imul
sub
or
mov
popa
mov
lock
or
pop
insb
push
push
fdivrs
fidivs
push
push
add
sbb
test
loopne
lock
push
clc
jl
mov
add
cmp
out
jmp
movsl
push
add
jnp
shr
test
push
dec
mov
cmp
iret
pusha
mov
jl
je
sub
mov
roll
jae
mov
outsb
push
adc
cmp
cmp
mov
scas
lds
les
clc
push
fnstenv
enter
mov
xchg
aam
fsub
call
pusha
mov
dec
orl
mov
push
sub
es
push
dec
or
fiadds
adc
cs
clc
call
sub
outsl
mov
xor
push
xchg
push
jp
jge
shr
push
mov
ljmp
cmp
xlat
or
aaa
pop
pop
adc
inc
clc
pop
jnp
jne
sbb
mov
cltd
mov
idiv
jle
loope
lock
hlt
hlt
cmp
and
in
test
sub
sub
outsb
je
xor
inc
test
sub
jmp
rclb
push
ret
adc
inc
or
inc
adc
pop
stos
sub
dec
add
pop
xchg
dec
dec
dec
dec
gs
xchg
gs
push
cs
or
insb
cltd
insb
test
fs
lret
mov
scas
insb
jne
loopne,pn
lret
mov
insb
insb
jg
insb
inc
jnp
pop
and
outsb
scas
pop
outsb
lret
je
push
jb
mov
mov
movsl
cmpsb
pop
cmpsl
push
fnstenv
adc
gs
push
pusha
lods
lret
dec
je
xchg
gs
xorb
jo
outsb
pop
xchg
gs
push
gs
imul
mov
insb
fwait
cmpsb
mov
mov
jbe
mov
cmp
dec
xchg
xchg
xchg
xchg
xor
insl
rcll
js
lcall
je
inc
shll
push
fists
gs
xorb
insl
lcall
mov
jb
jbe
mov
mov
or
outsl
pop
jbe
mov
mov
arpl
mov
sbb
and
fstl
hlt
mov
fcomp
cmp
and
mov
mov
ret
clc
push
shll
sub
cld
mov
mov
adc
push
sub
popf
ret
mov
adc
testb
popa
test
push
ds
loopne
xor
insb
cmp
pop
jg
push
mov
lea
fs
xchg
push
hlt
add
pop
rcll
push
sahf
in
in
jecxz
je
push
adc
adc
imul
push
iret
aam
jae
inc
xor
insl
adc
sti
jp
fisttps
xchg
shrl
cld
repz
sbb
or
sbb
out
and
daa
call
stos
popa
add
push
pop
ds
aas
jne
cmpl
daa
mov
and
sub
cli
adc
neg
negb
sbb
sbb
lret
xchg
cli
pop
add
aad
mov
bts
lea
adc
mov
or
call
repz
xor
and
jbe
mov
jbe
add
cwtl
push
out
cmp
push
fstp
inc
incl
add
add
add
hlt
sub
mov
jmp
and
ja
pop
daa
lret
mov
pop
xor
and
cmpsb
imul
jmp
sub
inc
jb
push
add
cmp
jne
sub
call
xor
outsl
jo
fsubl
sbb
push
pop
push
mov
mov
cmp
shlb
arpl
mov
add
pusha
cmpb
dec
or
and
add
outsb
ret
and
mov
inc
rcll
sub
cmp
cmp
sub
daa
cmp
or
call
fmul
loop
pop
xor
mov
clc
mov
out
pop
cli
sbb
jb
and
push
push
mov
jmp
and
inc
into
adc
popa
loope
cmp
in
xlat
push
int3
inc
in
insb
jge
dec
push
xchg
and
inc
and
pop
dec
arpl
outsb
pop
xchg
gs
cmp
add
outsl
jae
jne
bound
aaa
aas
pop
xor
cld
icebp
pop
or
sbb
cmp
dec
shl
movsb
add
subb
fldenv
lds
mull
inc
jnp
mov
add
add
adc
xchg
pusha
mov
dec
jl
mov
mov
ret
in
adc
dec
xor
and
push
ja
int3
pop
icebp
faddl
lods
loope
add
cmpsb
push
sub
add
push
push
je
cmpsb
imul
imul
lcall
adc
rcrb
rclb
aas
enter
cmc
je
cmpl
loop
pop
jge
push
pop
lahf
lret
push
test
das
ja
xchg
push
fldenv
jge
jg
mov
stos
imul
or
jmp
dec
push
data16
xchg
dec
inc
mov
pop
or
gs
pop
or
cmp
pushf
cld
int3
inc
add
mov
pop
xchg
pop
repz
adc
loopne
sub
insl
pop
xadd
out
or
adc
jg
insl
loopne
or
and
add
mov
movsl
push
insl
push
jmp
lahf
mov
sbbl
adc
subb
lock
orl
adc
inc
mov
testl
inc
enter
rorl
mov
mov
fwait
adc
mov
inc
inc
outsb
scas
adc
mov
fdivrl
mov
push
and
add
cli
jb
out
jb
adc
pop
es
call
inc
pop
adc
jg
mov
or
xchg
sahf
subl
cltd
std
cwtl
inc
fldenv
and
aas
xchg
gs
xchg
popa
arpl
outsb
pop
xchg
gs
cmp
fs
xchg
imul
mov
lods
scas
scas
push
mov
dec
mov
pop
bound
dec
sarl
inc
mov
lcall
or
jo
ret
sub
adc
int3
push
aas
leave
mov
add
xor
rcl
outsl
cmc
outsb
cmp
dec
shll
jb
jns
push
xor
cmp
in
and
lds
xor
data16
jp
mov
xor
push
std
dec
bound
jo
dec
mov
adc
dec
out
sarb
in
jmp
push
shr
sbb
push
in
mov
or
or
seto
jno
rep
lock
enter
pop
lock
sub
jne
call
ja
call
push
xor
imul
xchg
cld
adc
push
enter
mov
dec
or
push
mov
inc
sbbl
sub
aas
pop
dec
xchg
in
je
outsb
cmp
addr16
jo
outsl
sub
test
es
out
jle
or
cmp
push
cwtl
int
push
bnd
adc
add
imul
lods
inc
in
scas
or
std
divb
cltd
fdiv
xorb
ja
imul
rcr
cmpsb
popa
arpl
stc
outsl
pop
push
mov
je
cli
xor
fs
in
fs
jmp
aad
push
push
out
fisubrl
xchg
les
movsb
jb
push
outsl
pushf
pop
adc
ss
xchg
in
jmp
and
push
xor
sbb
or
push
shll
dec
and
imul
jns
je
insl
call
adc
or
dec
call
sbb
test
jle
mov
pusha
in
or
push
mov
mov
push
mov
jmp
xor
mov
add
mov
loop
pusha
or
out
insl
fistl
adc
sarb
jl,pn
add
jmp
call
add
inc
adc
add
or
cli
cmpsl
jge
or
jo
dec
pop
push
push
dec
jo
out
xor
sbb
aaa
aad
rorl
in
push
push
shll
outsb
lret
enter
call
hlt
nop
mov
das
jmp
xor
mov
nop
inc
enter
movl
ret
loopne
call
push
sbb
sbb
aam
out
call
and
insl
imul
add
call
je
jmp
and
jmp
in
movsb
mov
ja
ds
jae
sbb
xchg
jae
fstl
fidivs
loopne
xchg
arpl
cld
pop
loop
jecxz
sarb
in
cld
in
out
inc
lea
dec
jge
mov
lock
je
popa
mov
repz
and
fidivs
mov
or
xchg
cmp
add
adc
test
cld
pop
or
scas
jmp
stos
fucomi
fcoms
adc
adc
shrl
and
push
bnd
cmpl
jg
add
mov
into
fwait
inc
add
repnz
and
cld
sarl
xchg
outsl
inc
mov
inc
inc
inc
lea
adc
roll
lock
jns
lods
stc
insb
inc
lods
mov
adc
ljmp
add
inc
pop
or
cmp
cmp
jge
adc
rorl
inc
sub
sbb
movb
daa
push
mov
in
inc
and
ljmp
sbb
mov
ret
pop
outsl
outsl
dec
or
das
add
pop
in
jg
decl
add
fists
cmp
jge
cmpb
test
loopne
or
loope
cmp
loopne
test
mov
mov
out
mov
xchg
jecxz
adc
mov
add
es
xchg
mov
sub
mov
jo
sbb
xchg
out
pop
xchg
cmpsb
dec
insl
push
pop
xchg
imul
jge
out
mov
loop
and
push
fcoms
mov
pop
sti
out
add
adcb
cmp
jne
ja
pop
loopne
aaa
jge
mov
ja
mov
std
div
sbb
rcrb
mov
inc
inc
push
mov
jge
lea
mov
dec
aam
jl
jge
mov
mov
cmp
sub
mov
ja
jge
mov
sbb
enter
fs
enter
xor
push
jne
lods
gs
repz
out
jo
or
and
mov
xchg
xchg
fisttpll
mov
faddl
and
jl
lock
call
add
fistpll
push
push
or
mov
pop
sbb
jge
cwtl
iret
jmp
add
or
shlb
fmulp
lds
push
mov
jb
cmp
push
xchg
les
loopne
ss
cmp
leave
sbb
pop
ss
fcomps
sbb
sarl
in
inc
pusha
or
aaa
lea
and
dec
mov
xor
push
lds
sbbb
out
insl
arpl
sbb
clc
adc
outsb
lret
and
add
mov
mov
add
xchg
push
stos
divl
add
jge
mov
adc
ds
add
ja
jmp
push
call
jp
popf
adc
inc
push
adc
lcall
cmp
sti
call
mov
and
iret
add
fmuls
xor
roll
aam
into
add
sbb
leave
adcb
adc
insb
cmp
popf
jo
inc
cld
push
pusha
push
push
push
mov
les
xor
shll
xlat
arpl
sub
cltd
test
sbb
push
pop
ja
sub
rorl
inc
or
mov
leave
pushl
leave
or
pusha
pop
push
or
loope
imul
pop
sahf
adc
add
cmp
scas
movsl
stos
les
pop
pop
imul
push
call
mov
mov
xor
iret
imulb
pcmpeqw
pop
nop
pop
xchg
mov
iret
repnz
cwtl
jae
cs
es
inc
or
or
loopne
pop
loope
sbb
adc
adc
insl
or
fistpl
cmpsb
fdivl
popa
push
shrb
cmp
jmp
push
movsb
mov
mov
push
enter
jb
pop
sub
ja
mov
cld
xor
insl
inc
inc
push
xor
or
add
or
sub
or
mov
popa
mov
mov
jmp
mov
lods
ljmp
mov
or
cmp
outsb
pop
rclb
cmc
das
inc
mov
pop
mov
and
sbbb
inc
test
sbb
insl
mov
in
decb
add
imul
push
in
pop
inc
sti
outsl
scas
and
aad
pop
cmp
jb
xor
jle
or
jg
adc
jge
and
mov
jb
pop
test
popa
ds
jecxz
jne
adc
push
in
jbe
mov
inc
icebp
fcmovbe
and
arpl
and
inc
add
sub
inc
dec
sbb
adc
outsl
shrl
lret
xor
fstps
add
shlb
mov
vmwrite
push
sub
out
dec
fsubrs
push
mov
nop
inc
adc
push
into
mov
adc
cwtl
and
mov
fnsave
jmp
cmp
mov
sahf
inc
sbb
pop
push
ja
scas
pop
push
or
negb
fisttpll
inc
add
cmp
jb
jmp
sub
addr16
addl
xchg
add
outsb
int
pop
adc
and
push
test
push
inc
xor
inc
pop
or
cmp
pop
loopne
arpl
sbb
inc
adcl
ret
and
pop
push
adc
jns,pn
pop
loope
ret
xchg
popa
pop
cmp
jle
nop
and
inc
sbb
fadd
push
xchg
inc
adc
mov
pushf
test
pop
loopne
xor
xor
sbb
adc
push
inc
pushf
xor
xchg
or
fisubrl
aad
mov
aad
mov
jnp
push
pop
mov
add
and
fstpl
inc
push
sub
push
cs
sub
shlb
sub
push
push
call
in
mov
lods
adc
and
sbb
lods
push
jnp
sub
sbb
orl
sbb
cmpsb
jmp
fldcw
pop
jnp
add
insb
fs
gs
and
lret
ss
adc
push
fcompl
bound
insl
call
ds
inc
outsb
jl
fsubl
push
mov
imul
or
loope
pop
in
cmp
mov
sbb
mov
enter
add
xor
lods
js
aam
or
call
mov
shrb
and
out
push
adc
fcmovnu
mov
push
and
mov
jg
xlat
in
jne
outsl
sbb
jne
push
ss
cmp
and
and
push
jbe
and
es
ja
je
int3
or
addr16
es
push
or
jge
mov
jl
call
pop
xor
mov
sub
add
adc
xchg
test
out
mov
and
or
jae
insl
pop
sub
daa
add
je
add
incb
jns
hlt
xchg
fisttpl
popf
dec
or
and
pop
xchg
mov
or
int
mov
push
pop
adc
sub
pop
shlb
sbb
fs
mov
sub
mov
mov
cmpw
clc
xor
cmpl
sub
mov
insb
mov
cmp
cmp
sbb
aas
mov
cmp
mov
push
loopne
cmpl
mov
adc
mov
iret
push
out
xor
pusha
stc
adc
std
or
fisttps
sub
dec
jmp
inc
dec
sbb
xor
scas
sub
test
pop
or
add
xor
lds
arpl
js
ret
add
add
rcrb
aas
pop
inc
jno
mov
das
idivb
cmpl
push
out
add
cmpl
mov
pop
add
andl
or
jmp
outsl
jle
movzwl
mov
jne
daa
add
add
test
je
andl
adc
adc
inc
ud1
data16
lock
not
push
sub
add
or
jnp
out
dec
pop
lea
mov
fisubs
or
jl
add
jmp
insl
mov
push
ljmp
fldt
inc
add
je
jbe
jno
push
jnp
and
dec
adc
push
push
add
adc
iret
xchg
lret
sbb
lea
pop
lods
push
clc
sbb
ja
add
push
scas
pop
xor
jl
insb
sub
xchg
sub
xor
loope
pushf
mov
cmp
addb
jno,pt
insl
adc
andl
push
xor
mov
lods
adc
inc
hlt
push
mov
call
lcall
lcall
leave
push
xor
pop
inc
jae
xchg
mov
adc
sub
push
jno
hlt
rcrl
and
das
dec
mov
inc
mov
jge
xlat
pop
mov
cmp
xchg
fcmove
std
movb
testb
je
pop
inc
sub
es
shr
or
mov
pop
insb
mov
clc
pop
dec
and
sbb
jecxz
lds
data16
push
adc
pop
adc
mov
lcall
shll
mov
jp
mov
cmp
add
mov
jne
nop
sbb
insb
or
pop
pop
jmp
and
sbbl
cmp
gs
insb
jb
add
jb
js,pn
sbb
push
xchg
pop
das
stos
fwait
jmp
in
jne
or
into
clc
mov
or
or
ret
xchg
push
pop
mov
gs
dec
daa
fisubrl
jge
mov
addl
and
ret
and
or
mov
dec
sbb
das
mov
inc
je
fisubl
xchg
mov
lods
push
dec
inc
imul
jne
repz
jp
gs
hlt
gs
pop
xchg
gs
xchg
outsw
outsb
je
pop
cmp
in
xor
add
cmc
jo
cmp
mov
test
and
loope
pop
xchg
loopne
cmp
push
movsb
add
mov
gs
dec
popf
mov
or
mov
mov
scas
pop
and
sbb
jne
xor
jl
jecxz
cmp
and
cmp
push
xchg
push
adc
popa
test
lods
pop
mov
test
push
call
adcb
fdivrl
aam
call
or
andl
mov
or
xor
fsubrl
add
jo
jbe
fcompl
inc
jnp
add
jl
mov
cmpsb
push
jne
ss
std
fisubrl
pop
sub
add
int
push
mov
mov
and
pop
ljmp
mov
fiaddl
jo
adc
mov
outsb
testb
or
jmp
mov
cmp
daa
lahf
mov
mov
adc
inc
xor
mov
mov
mov
shrl
or
outsl
lcall
iret
je
lods
push
and
rclb
adc
inc
ja
rcrl
mov
lods
push
pop
icebp
repz
add
and
test
add
cmc
add
inc
adc
loop
pusha
add
lock
lcall
push
lds
lcall
enter
movsl
imul
fs
int3
int
out
cmp
aas
add
std
rolb
pop
sar
or
pop
jae
jne
vpxor
pop
fldenv
pop
pop
insl
xor
ss
xchg
xor
data16
gs
cs
je
popa
shlb
cs
jle
push
pop
test
mov
push
xor
pop
rorl
or
or
jne
or
pop
sub
iret
add
or
adc
cmp
lods
cmp
mov
cli
adc
sbb
mov
addl
iret
adc
into
inc
out
sahf
adc
loope
push
mov
int
mov
jnp
stos
stc
rcrl
mov
xor
sub
push
and
lea
inc
lahf
iret
mov
and
dec
call
cmp
je
mov
xor
pop
cltd
cmp
sbb
sbb
jo
gs
pop
xor
andb
rcl
cmp
js
insb
outsl
jb
xchg
gs
gs
gs
inc
mov
xorb
inc
cmc
mov
out
adc
add
mov
jb
int3
and
inc
nop
xchg
fcoml
cmp
mov
or
dec
mov
test
fwait
mov
push
mov
aaa
pop
xor
push
adc
pop
mov
popa
pop
jmp
mov
andl
movsb
inc
mov
arpl
or
shlb
lcall
jmp
xchg
inc
flds
pop
dec
rol
or
and
or
aam
mov
lods
and
pop
je
jae
mov
int3
push
fcompl
movsb
test
jno
xchg
mov
mov
pop
and
outsl
jo
js
push
and
nop
xor
xor
dec
dec
push
push
out
repz
sbb
push
inc
push
hlt
rcr
lret
cs
add
fisubrl
aad
int
xchg
lret
xor
lock
rcl
rorb
inc
xchg
push
mov
gs
in
xchg
fisubs
adc
xchg
int
xor
push
fists
add
call
add
imul
inc
jb
arpl
fcos
mov
pop
push
add
jbe
cltd
sub
inc
xor
pop
movsb
add
add
xchg
stos
inc
xor
sbb
add
arpl
jae
test
mov
ss
cmp
in
ja
mov
push
outsb
popa
jo
push
push
imul
outsb
jae
and
mov
loopne
insl
ss
add
inc
insb
sbb
por
mov
jb
test
jg
stos
mov
dec
imul
packsswb
lret
pushl
adc
jne
jnp
mov
inc
mov
loopne
lods
lock
jb
mov
jg
out
movsb
add
pop
and
inc
cmpsl
or
insl
imul
dec
and
inc
ret
pop
mov
jns
add
or
and
repz
mov
into
add
dec
ficoml
imul
add
insl
xchg
stos
sbb
insl
push
pop
nop
jno
inc
outsl
jb
pop
in
loope
outsb
and
push
push
push
gs
outsl
mov
jne
push
int3
or
or
sbb
push
addb
jge
jbe
push
jae
repz
push
sub
push
push
dec
stos
jp
push
inc
pop
fstpt
xlat
cmp
pop
ret
andb
pop
imul
dec
jae
ret
inc
and
mov
push
pusha
insl
insb
rolb
dec
and
mov
add
gs
xorl
mov
pop
mov
add
xor
clc
push
outsl
imul
pop
test
mov
leave
xchg
adc
xchg
sbb
imul
sti
pop
inc
outsl
jmp
ja
add
jns
mov
pop
push
mov
xor
fistps
imul
outsb
push
ret
pushf
insl
or
or
sub
xchg
jne
pop
pop
shll
pop
add
insb
pop
subb
test
mov
jnp
fs
pushf
adc
and
je
idiv
dec
and
fstpl
ret
or
mov
push
adc
xabort
pop
icebp
push
outsb
push
jg
scas
stos
sbb
dec
inc
push
dec
sbb
mov
add
jo
lret
fdivs
je
push
push
aaa
mov
dec
pop
insb
popa
cmpsb
insb
push
mov
xor
gs
fs
xor
arpl
lret
mov
std
inc
pop
pop
and
push
sti
xchg
add
cwtl
mov
decl
jno
data16
push
add
cmp
add
sbbb
xor
adc
insb
pop
pop
popa
outsl
mov
popa
imul
popa
addr16
aad
loope
mov
or
push
mov
push
adc
inc
cmp
cmp
movl
scas
xor
or
enter
jne
insl
stc
sub
pop
and
mov
add
sbb
cmp
fwait
lea
dec
mov
add
push
adc
fisubrl
jl
loop
imul
inc
sub
jne
push
shrb
add
or
pop
add
mov
les
xor
out
jnp
inc
cmp
adc
xchg
cmp
xchg
and
outsb
jne
add
xor
jo
push
in
sub
fwait
cmp
adc
dec
sbb
fmul
les
adc
pavgb
adc
inc
fwait
xor
andb
enter
pop
inc
arpl
imul
movsl
add
mov
xchg
inc
arpl
xchg
sub
push
inc
push
pushw
pop
inc
or
mov
mov
roll
fisttpl
or
fcmovb
in
mov
add
fsubr
sbb
popa
gs
mov
lea
data16
add
mov
pop
add
fwait
repnz
stos
imul
imul
xchg
int
arpl
xchg
popa
fcomp
movsl
mov
filds
or
out
dec
lds
jge
dec
or
adc
lods
xor
adc
lods
inc
mov
cmp
imulb
mov
aas
aas
xor
inc
pop
push
add
jge
in
inc
pop
loopew
nopl
mov
dec
sbb
push
sbb
mov
out
cwtl
in
or
insw
jbe
xchg
dec
add
in
mov
xchg
dec
ret
rep
ja
jno
inc
lock
push
push
pop
pusha
sub
and
movups
in
sub
imul
lods
pop
mov
mov
add
xor
add
inc
inc
mov
ret
pop
lock
push
sbb
jbe
rorb
xor
mov
dec
xchg
jmp
xor
pop
xchg
dec
lret
movhps
ss
xlat
adc
xor
sti
add
inc
add
mov
scas
jmp
sub
test
lods
add
lret
cmc
int3
mov
add
jb
loop
cld
add
add
dec
jae
adc
or
pusha
push
lret
and
ljmp
ds
les
loopne
cld
sbb
xor
push
aas
insb
aas
mov
movsb
aas
dec
add
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
adc
das
lcall
cmp
inc
cmp
jbe
mov
mov
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
fidivrs
std
cmp
sub
ss
ds
ds
ds
ds
mov
aas
nop
aas
mov
sarl
test
fistps
das
push
cwtl
xor
xor
xor
xor
xor
xor
inc
xor
std
pushl
xor
fwait
xor
xor
xor
xor
pushf
xor
add
xor
call
movsl
xor
xor
xor
xor
xor
xor
xor
xor
xor
sub
rolb
dec
cld
dec
xor
xor
xor
mov
ljmp
xor
xor
xor
xor
xor
xor
xor
xor
and
lcall
je
jns
test
mov
fnsave
cld
xor
xor
xor
xor
xor
xor
xor
pushl
xor
int
ljmp
ss
ss
aaa
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
test
scas
cmp
cmp
cmp
cmp
jo
cmpsb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jg
cmp
add
pop
cmp
movsl
cmp
mov
cmp
sub
in
cmp
add
xlat
xchg
mov
ds
sarb
fstpt
loope
out
repz
ds
aas
or
aas
and
jo
jmp
cmpsl
xor
xor
xor
sub
xor
mov
mov
xor
xor
xor
xor
sbb
jp
pushl
lcall
xor
xor
xor
xor
xor
xor
xor
xor
pop
xor
decl
xor
xor
xor
xor
or
pop
xor
cltd
xor
movsb
xor
das
cmp
inc
mov
ss
mov
ss
decl
aaa
fdivl
jmp
aaa
add
push
cmp
cmp
mov
xchg
cmp
cmp
clc
cmp
cmp
cmp
cmp
lcall
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
loopne
xor
inc
ds
cmpl
mov
dec
fidivrs
es
aaa
aas
dec
aas
gs
test
aas
in
repz
aas
pop
sti
mov
adc
xor
cmp
pushl
xor
mov
fwait
xor
xor
xor
xor
xor
arpl
jl
xchg
xor
fbstp
xor
xor
xor
or
test
xor
xor
cmp
xor
xor
xor
xor
xor
xor
xor
cmp
test
fnstenv
stos
ss
ss
aaa
cmp
insb
aaa
mov
aaa
shll
out
push
cmp
mov
sbb
cmp
cmp
cmp
dec
cmp
jno
nop
cmp
cmp
push
cmp
cmp
cmp
mov
xchg
cmp
cmp
cmp
cmp
cmp
jb
mov
mov
cmp
cmp
cmp
das
sarb
cmp
cmp
cmp
xor
lcall
or
xchg
cmp
lea
cwtl
ds
ds
ds
ds
aas
sar
pop
mov
pop
inc
add
xor
xor
xor
xor
jmp
cmc
xor
xor
xor
cli
ljmp
into
xor
xor
xor
xor
xor
xor
xor
out
pop
jmp
stc
push
xor
xor
xor
xor
xor
xor
xor
xor
xor
incl
or
adc
xor
push
ss
ss
arpl
jne
jp
lds
shlb
fmuls
out
repz
add
or
aaa
push
aaa
pop
aaa
imul
aaa
xorb
aaa
xchg
loope
aaa
sahf
adc
aaa
cld
std
adc
xor
dec
mov
push
dec
cmp
cmp
iret
cmp
cmp
cmp
cmp
cmp
cmp
outsl
call
lea
xchg
cmp
cmp
cmp
cmp
test
or
cmp
cmp
cmp
pop
cmp
cmp
cmp
cmp
xchg
fstpt
outsb
cmp
cmp
cmp
cmp
xor
xorl
movsl
cmp
cmp
cmp
cmp
cmp
cmp
lcall
std
cmp
cmp
push
cmp
xor
dec
cmp
push
jmp
gs
ja
cmpl
mov
mov
and
test
sub
xor
jmp
pop
jnp,pt
cmpb
mov
sarl
sarb
fidivrl
fcomip
in
out
cmc
and
cmp
dec
xchg
aas
sahf
aas
scas
aas
mov
aaa
lret
ret
aas
fnstsw
out
in
aas
std
lahf
rclb
fcomip
fcomip
xor
push
mov
xor
xor
mov
inc
adc
imul
mov
mov
outsl
sti
cmp
push
xor
cmpsb
xor
fdivl
incl
jmp
xor
xor
sub
xor
xor
pop
push
xor
xor
jg
sbb
lock
xor
xor
xor
xor
xor
xor
xor
xor
sub
add
xor
xor
xor
xor
xor
xor
xor
xor
das
lock
xor
insb
xor
stos
xor
mov
jmp
sub
cltd
ss
aaa
jge
mov
cmp
cmp
cmp
pushl
cld
cmp
imul
mov
aad
cmp
cmp
lock
cmp
cmp
cmp
xor
incl
dec
cmp
cmp
cmp
cmp
or
cmp
lcall
ds
fdivrl
call
aas
adc
aas
das
jg
aas
cmp
inc
aas
push
aas
pop
aas
fs
imul
xchg
aas
pushf
aas
mov
jge
aas
push
loop
call
dec
decl
addr16
sbb
and
cmp
xor
out
outsb
fdivs
jmp
push
push
mov
mov
div
sbb
and
xor
add
dec
or
push
xor
xchg
xor
xor
fdiv
xor
xor
gs
or
nop
push
and
xor
pop
xchg
or
push
enter
test
stc
out
punpckhbw
nop
mov
mov
mov
sbb
pop
shlb
sti
mov
mov
mov
jno
cmpb
inc
out
mov
sbb
fistpl
cld
repnz
sub
ret
add
and
cs
or
enter
jg
cmp
xorl
xchg
adc
cmp
pop
or
popf
lret
adc
out
push
addr16
clc
add
jb
ret
inc
xchg
adc
pusha
and
out
insb
push
mov
daa
add
bound
out
imul
insl
lcall
pop
out
sarl
pop
add
cmp
sbb
clc
das
ljmp
mov
add
cmp
fs
sbb
pop
or
cmpsb
imul
out
mov
push
mov
inc
fwait
jae
ret
jb
inc
add
push
and
inc
and
or
pop
js
jmp
push
ja
push
sub
push
dec
inc
hlt
push
inc
and
repz
loop
add
sbb
jns
add
int3
and
jns
lahf
xchg
enter
or
cmp
or
in
repnz
and
nop
add
mov
mov
nop
add
test
sub
nop
sbb
or
sub
daa
push
and
or
bound
xor
and
xchg
pop
leave
push
and
and
sbb
xor
or
stos
fs
push
dec
negb
or
add
sbb
call
lret
cmp
pop
out
mov
insl
call
push
xor
lock
and
int
xchg
xor
sahf
mov
ret
and
lret
es
inc
inc
push
inc
inc
into
push
lods
mov
or
mov
or
cli
dec
jnp
jl
jp
mov
outsl
in
sub
add
js
dec
es
jne
or
icebp
dec
mov
sbb
and
call
loop
cmpb
aad
or
dec
sbb
icebp
sub
ret
xchg
push
sub
jb
push
enter
and
and
cmp
inc
and
push
rorb
test
lea
mov
add
push
push
mov
fs
mov
adc
xor
cmp
push
xor
and
xchg
insb
stos
call
add
and
or
add
sub
incl
inc
add
cmp
jl
add
mov
add
push
idiv
mov
iret
insb
outsl
enter
jnp
icebp
fwait
cmc
sti
jne
mov
mov
xchg
push
test
repnz
jne
pop
push
push
mov
and
xor
rclb
mov
mov
xor
xor
xor
xor
sarb
xor
inc
scas
imul
mov
jbe
add
add
lods
iret
lods
enter
jbe
std
push
scas
iret
mov
inc
mov
mov
pop
mov
mov
mov
jb
bound
mov
test
cmpsb
pop
sub
iret
outsl
adc
mov
jb
jb
andb
stos
mov
daa
pop
or
test
push
popf
jmp
mov
add
or
xchg
out
pop
sub
js
or
insb
mov
add
ret
insl
and
and
push
js
popa
mov
dec
add
outsl
outsb
leave
mov
lret
outsb
gs
cs
push
mov
outsb
mov
lret
mov
popa
jne
arpl
sub
push
dec
xchg
push
mov
clc
jno
and
mov
adc
or
mov
lret
mov
js
insb
outsl
jb
stos
or
gs
or
add
xchg
xchg
sub
mov
cmp
in
jns
sbb
loopne
adc
mov
sub
fs
or
inc
lret
cmc
sub
xchg
ret
cmpb
adc
xbegin
hlt
mov
sbbb
dec
cwtl
outsl
add
adc
or
jns
add
cmp
loope
pop
pop
mov
add
aad
xchg
cltd
push
repz
push
or
add
jb
or
adc
or
or
mov
fisttpll
inc
fwait
test
es
dec
adc
pop
lahf
and
mov
cwtl
data16
or
lods
pop
add
push
push
sbb
mov
cli
cmpb
adc
dec
sahf
sub
cmpsl
int
in
shlb
movsb
cwtl
xchg
sbb
mov
sete
add
std
inc
loop
pop
xor
pop
mov
pop
movl
sub
or
lods
dec
or
or
adc
mov
pop
pop
add
je
or
adc
mov
sub
sbb
pop
and
and
pusha
inc
nop
nop
and
nop
int
pop
dec
and
in
cmp
add
add
or
pusha
and
fs
out
fcoml
mov
andb
mov
sub
nop
nop
cmpsb
sbb
sbb
sub
scas
sbb
cmpsb
and
mov
add
movsb
xchg
sbb
gs
lret
sub
mov
bound
mov
sub
mov
adc
jne
and
or
les
repz
inc
mov
add
nop
jae
push
mov
push
outsb
jb
clc
sub
aaa
and
js
adc
mov
cmc
adc
and
and
lods
pop
pop
sbb
xchg
jb
scas
adc
lret
icebp
xor
aas
pusha
adc
insl
dec
jae
mov
sub
cmp
mov
outsl
xchg
or
sbb
frstor
dec
push
leave
and
mov
sub
flds
insb
lods
loopne
mov
push
add
pop
mov
cwtl
xor
dec
pop
adc
sub
insl
sub
shlb
xor
xor
pop
push
xchg
int
jb
xor
stos
ss
pop
inc
int3
lcall
loopne
pop
jmp
imul
rcl
lcall
add
ss
add
pop
pop
push
repnz
pop
adc
lods
int
adc
or
lea
es
pop
les
push
add
add
outsb
cwtl
mov
gs
push
jne
mov
jae
fidivs
inc
test
cmp
ret
push
ja
push
xlat
fs
mov
or
pop
insb
sbb
repz
packssdw
xchg
adcb
and
jnp
mov
addr16
mov
adc
or
jns
pop
adc
or
xor
je
notb
adc
mov
gs
add
imul
dec
outsl
sbb
flds
mov
sbb
pop
add
cs
cmp
scas
aam
int3
add
sbb
ret
pop
sbb
or
dec
mov
lahf
jmp
cmovns
add
incb
lret
imul
and
test
cmpsl
scas
and
lcall
inc
test
dec
pop
push
gs
mov
cmp
ficomps
jmp
jecxz
inc
and
insl
scas
insl
add
outsb
inc
jae
and
add
movsl
popa
and
mov
out
add
addr16
out
inc
scas
sbb
imul
jge
push
sub
pop
out
je
sub
inc
push
jne
xor
jb
cmp
fnstenv
xor
mov
or
xor
insb
popf
xchg
mov
dec
or
lds
add
mov
scas
jnp
pop
xor
xor
je
mov
pop
fs
fsubs
or
daa
dec
dec
and
xlat
outsb
xchg
stos
iret
lea
adc
dec
fcomps
fs
outsl
pcmpeqw
test
dec
je
and
jne
pop
dec
xor
pop
imul
arpl
mov
mov
jmp
outsb
push
insb
cmpsl
xchg
out
add
dec
adc
inc
aad
loopne
shlb
xor
xor
adc
pop
xor
mov
xor
xor
xor
xor
xor
dec
sar
xor
xor
xor
xor
xchg
xor
and
ljmp
adc
fs
lea
mov
cmp
inc
aaa
insl
aaa
je
mov
decl
aaa
scas
shll
pushl
or
pop
cmp
jg
lcall
and
outsl
cmp
cmpl
cmp
in
cmp
cmp
cmp
cmp
jnp
cmp
dec
roll
cmp
cmp
mov
in
clc
mov
cmp
xor
cmp
inc
ds
ds
ds
jno
add
nop
mov
or
xchg
mov
adc
sbb
jns
sbb
outsl
data16
inc
leave
add
pop
inc
lods
add
pusha
add
adc
add
push
rclb
add
add
and
jbe
xchg
fmull
pop
dec
add
jl
push
sbbb
adc
sub
dec
add
or
push
andl
cmp
test
push
roll
add
add
add
inc
test
insb
dec
stos
mov
add
jne
test
sub
mov
and
inc
mov
add
inc
push
enter
add
adc
and
add
adc
fcmovnb
adc
shlb
fisttpll
adc
nop
les
fs
add
fs
mov
xchg
add
movb
jb
sbb
rclb
sbb
and
xchg
cwtl
outsl
add
add
add
add
add
incl
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
