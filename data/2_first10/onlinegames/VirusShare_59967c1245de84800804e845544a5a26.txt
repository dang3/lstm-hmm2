fnstcw
sti
adc
sub
dec
and
bound
jle
lcall
enter
and
xor
shll
ds
pop
je
xor
roll
cmpsb
pop
ss
into
fidivrl
and
sbb
dec
outsb
fwait
or
and
and
jp
movsb
jmp
cwtl
lahf
mov
sbb
aas
add
ss
aas
dec
gs
gs
xor
cs
insb
add
or
push
push
jae
sbb
inc
bound
push
jb
jbe
mov
sti
imul
jns
je
insl
and
inc
inc
add
jae
add
push
gs
outsl
imul
add
fistpll
add
jbe
xor
cs
out
outsl
arpl
or
imul
fisttpll
jnp
fs
add
je
pop
outsl
arpl
pusha
outsl
aas
bound
xor
aaa
or
cmp
adc
sbb
adc
sub
xchg
add
faddl
out
std
rclb
fcomi
idiv
xor
lea
push
mov
push
or
lds
gs
popa
enter
ss
insl
lret
lret
outsl
int3
int
pop
into
push
iret
rorb
shll
xor
shll
mov
push
aad
xlat
pop
fdivs
pop
xlat
insb
sub
fidivl
fisttpl
push
pop
loope
int
imul
jecxz
inc
in
and
sub
dec
xlat
add
inc
call
imul
in
pop
in
aaa
lock
repnz
shll
idiv
pushl
pop
cli
sti
js
je
mov
ja
push
call
sub
mov
pop
adc
fwait
mov
adc
and
mulb
xlat
adc
or
add
rorb
jge
cmp
jne
xor
fidivs
mov
jmp
lea
add
call
dec
test
je
sbb
in
mov
pop
jne
push
or
mov
sbb
iret
and
insb
fldt
incl
pop
inc
cmp
jne
cld
dec
test
mov
leave
ret
mov
in
sbb
aas
mov
push
xchg
adc
push
push
imul
das
pushf
inc
mov
push
push
lods
jo
xor
clc
add
outsl
outsl
and
push
push
sbb
js
push
insl
aas
fxch
lock
add
push
pop
insb
pop
popf
mov
mov
adc
push
stos
mov
decl
repz
push
adc
or
and
mov
and
cmp
adc
push
push
sub
push
js
fstpt
sbb
movsl
sbb
fwait
cmpsl
jns
in
sbb
pop
ret
dec
push
int3
sbb
pop
imul
xor
pop
imul
adc
fcmovnu
ds
or
push
adcl
mov
lea
mov
mov
adc
clc
push
movsb
cmp
push
push
sbb
clc
push
jno
dec
xor
cmp
jge
add
mov
mov
or
jge
mov
dec
test
je
adc
call
sbb
ljmp
xchg
add
push
fs
in
adc
aad
and
cs
push
add
leave
cmp
addr16
push
sbb
cmp
aas
xchg
enter
dec
xchg
sbb
sbb
fcom
fimuls
icebp
push
lds
popa
mov
mov
adc
call
pop
adc
test
psrld
mov
inc
inc
dec
dec
test
and
in
fdivl
push
pop
jmp
lds
sbb
and
rol
jecxz
mov
xor
mov
add
inc
sbb
adc
xor
sti
decl
test
mov
mov
add
and
aad
pop
clc
outsb
push
sbb
add
jl
outsb
divl
movsb
sub
daa
push
xchg
push
dec
sub
inc
in
hlt
push
call
lods
or
push
in
les
out
inc
jl
arpl
mov
push
in
inc
mov
mov
sub
and
or
out
fcoml
cwtl
pop
and
rcrl
inc
mov
mov
shlb
add
std
xor
arpl
mov
or
je
repz
lea
pop
push
loopne
add
lea
neg
mov
stos
mov
loopne
inc
iret
loopne
fldl
xor
leave
adc
imulb
sub
maxps
xor
sahf
mov
xchg
sti
shl
call
push
xor
sub
dec
lock
dec
aad
xlat
inc
xor
mov
jp
in
std
adc
sub
test
adc
pop
mov
push
and
pop
pop
pop
negb
cld
pop
jb
jnp
jmp
xor
pop
or
ljmp
push
push
std
imul
outsb
ljmp
pushl
sub
add
xor
pop
insb
int
sub
inc
add
shlb
or
jne
jns
iret
insb
inc
or
test
xchg
lcall
test
dec
fs
push
test
add
jmp
jae
add
xchg
dec
push
inc
sbb
pop
ret
fucomp
je
push
hlt
adc
pop
testl
ja
sti
leave
sbb
movsb
cmp
scas
aas
icebp
stos
push
std
enter
xchg
stos
cld
std
dec
push
mov
lods
mov
add
fcmovnu
sar
fxch
lods
jb
rcrb
jae
push
rcll
cmp
int
pop
int
into
iret
popf
sub
rolb
shrb
shrb
xor
cs
shrb
xlat
mov
test
mov
adc
call
mov
jns
imul
and
mov
out
stos
push
loop
cli
mov
or
leave
xchg
insb
data16
xchg
and
fcompl
xchg
mov
and
push
clc
fiaddl
fs
mov
clc
je
jae
cwtl
shlb
sti
bound
addr16
xor
jg
and
mov
lods
adc
sub
push
push
cmp
insb
test
subb
or
mov
and
lods
rorb
call
and
pop
into
ss
push
or
cmp
or
sti
mov
fstpl
pop
addr16
int3
into
xor
push
push
ds
xchg
sbb
jge
sub
outsl
sar
jnp
ret
or
cmp
jbe
xchg
pop
call
dec
adc
push
daa
cmp
inc
das
pop
sti
pop
add
dec
shll
jo
outsl
jb
mov
shlb
or
out
and
pop
jmp
sbb
pop
lock
cmp
nop
pop
cmp
testl
retw
insb
sbb
xchg
xor
xchg
fs
or
aaa
enter
add
enter
dec
sti
out
push
bswap
cmp
int3
ret
insb
scas
sti
int3
jmp
or
xchg
pushf
mov
mov
lea
adc
jmp
fistpl
imul
jae
sub
mov
or
loope
adc
sub
ret
dec
test
dec
leave
add
sbb
and
and
adc
test
xor
sub
mov
inc
dec
dec
inc
pop
mov
jg
push
push
dec
inc
dec
xchg
adc
push
sti
inc
push
dec
cs
outsl
and
sub
ds
sbb
nop
push
add
add
aas
mov
add
add
nop
add
lret
cmpsb
mov
mov
inc
call
push
add
loop
mov
imul
insl
and
mov
outsb
outsl
je
bound
jb
outsb
and
inc
dec
push
and
fs
roll
xchg
push
pushf
outsl
repnz
int
adc
rolb
stos
jae
aam
jae
shll
jo
repz
pop
cmp
mov
test
shrb
imul
pop
ds
inc
add
in
pop
push
dec
adc
pop
mov
or
push
or
add
stos
mov
add
add
pop
cmpsl
cmp
jbe
xchg
or
xor
pop
sub
jb
push
jo
ja
enter
in
nop
shl
pop
fildll
add
bound
pop
sbb
jb
mov
shrb
popa
je
xor
in
nop
pusha
xchg
lock
adc
cs
push
push
pop
sar
jle
fsts
outsl
arpl
aam
push
lcall
cmp
mov
xor
ret
mov
insl
into
ss
mov
add
dec
shll
and
imul
push
cmpsb
imul
imul
dec
shll
pop
insb
imul
mov
scas
rcl
testb
lret
push
mov
pop
xor
shll
jbe
xchg
movsb
fnstenv
adc
push
ljmp
jnp
stos
cwtl
jg
insb
push
dec
insb
lcall
ljmp
mov
add
mov
int
push
pop
mov
jo
dec
shll
push
sub
add
imul
cmpsb
imul
imul
cmpsb
imul
mov
xchg
cmpsb
dec
in
dec
shll
push
dec
addr16
mov
imul
inc
cmpsb
add
in
mov
jb
movsb
adc
cmc
jnp
outsb
je
je
and
std
fs
sub
push
gs
fs
sub
pop
divb
jo
jne
jns
outsw
inc
aaa
dec
jo
divb
jb
adc
adc
dec
add
push
jl
jo
insb
xor
add
sbb
inc
or
mulb
add
iret
jbe
aaa
sbb
pusha
add
add
add
adc
mov
add
sub
sub
adc
add
insb
and
jmp
add
popa
mov
xor
adc
add
mov
insb
fldcw
pop
aas
or
mov
mov
leave
add
pop
roll
incl
dec
cs
mulb
pop
add
mov
add
test
inc
xchg
inc
pop
sbb
lret
push
inc
xchg
movsl
adc
add
xor
nop
sub
pop
ss
pop
das
xor
call
sti
or
xor
ud2
push
add
outsb
add
sub
add
ja
adc
je
jne
jb
je
negl
inc
or
push
punpcklbw
sub
add
push
inc
mov
mov
pop
ja
or
push
mov
jae
pop
and
pusha
mov
jo
pop
xor
push
sbb
sarb
xor
and
stc
pop
insl
add
pop
cs
add
imul
arpl
popa
insl
xchg
push
dec
inc
push
push
inc
push
inc
dec
adc
sar
test
data16
imul
dec
push
inc
jne
jb
test
mov
jae
outsl
outsb
dec
fwait
ja
jb
inc
popa
jb
std
stc
push
jl
aas
mov
cmp
arpl
pop
inc
sbb
data16
je
jo
cmpb
jb
arpl
cmc
fwait
push
and
test
cs
das
pop
orb
mov
push
push
aas
mov
lea
push
push
jno
or
cli
fiadds
jnp
mov
movsl
out
rdtsc
add
push
call
dec
je
pop
stc
add
jne
repnz
push
adc
in
insl
mov
mov
xchg
push
mov
iret
decb
cld
call
push
ljmp
fwait
push
push
sbb
mov
je
inc
lods
movb
loop
int
lea
xor
mov
mov
mov
adc
pop
and
dec
push
pusha
insb
mov
adc
jns
frstor
sti
divb
pushl
add
test
std
mov
push
in
movzbl
sarl
jg
mov
cmp
mov
add
fwait
enter
arpl
pop
orb
and
push
push
adc
add
inc
sbb
and
xchg
sbb
or
add
insb
sbb
nop
data16
pushf
push
mov
insb
or
dec
push
in
adc
or
ds
xchg
or
push
insb
andb
nop
add
or
or
nop
pop
and
inc
aas
xor
sbb
leave
inc
nop
pop
add
rorl
clc
sub
mov
aad
xlat
test
ret
pop
into
icebp
idivl
ror
ret
into
mov
mov
aam
in
int
mov
cmp
cli
aad
mov
mov
or
lret
cli
bnd
jg
enter
mov
mov
rcr
lret
fistpll
mov
mov
test
test
sti
jmp
popa
dec
inc
cmp
into
in
dec
les
mov
sbb
int
std
in
adc
mov
lods
adc
mov
inc
iret
add
lret
leave
sub
icebp
or
popa
sbb
mov
stos
adc
or
dec
arpl
in
testl
mov
in
test
add
add
dec
cmp
add
xchg
icebp
cs
ja
fs
stos
daa
fimuls
lahf
add
mov
imul
es
sub
std
fs
add
dec
add
imul
cmpsl
pop
adc
mov
jmp
lret
dec
insb
mov
inc
xor
leave
int3
insl
das
mov
xor
ucomiss
mov
dec
jne
jns
repnz
lret
dec
lds
push
mov
xchg
sti
xchg
loopne
loopne
fildll
pop
sbb
pushf
fstpl
push
add
push
sub
push
adc
push
mov
jno
push
imull
or
push
insl
xor
jge
or
std
pusha
repz
insl
xchg
mov
fisubrs
pop
or
xor
pop
adc
push
jge
das
push
sbbb
aad
mov
cmp
pop
pop
dec
pusha
out
out
andb
push
dec
sub
inc
jne
cmc
popa
or
mov
sub
add
or
mov
cmpl
add
jne
std
push
xor
mov
adc
je
add
inc
cmp
sti
mov
add
jae
mov
test
out
or
dec
ret
and
ret
mov
call
or
outsb
ja
push
fidivl
int3
cmpb
push
adc
push
movb
mov
cs
add
adc
fucomip
xchg
outsb
clc
lcall
add
shr
lahf
or
shl
push
push
pop
in
mov
rorb
and
mov
orl
or
add
sub
and
imull
push
jg
sub
sub
stc
call
jnp
les
ret
add
dec
pop
mov
and
mov
jo
lahf
add
pop
add
jge
mov
in
add
lcall
dec
loopne
cld
push
push
movl
notb
loopne
ret
or
cmp
arpl
push
pusha
jne
call
incl
pop
sub
fmull
adc
std
cmp
mov
or
leave
xor
mov
pcmpeqb
cmp
fdivrs
mov
dec
sbb
mov
lret
inc
and
and
and
lock
or
test
orl
or
sbb
jmp
adc
mov
cld
sub
add
sbb
lea
or
lea
sub
cmp
sbb
cmc
adc
add
push
outsb
psubw
lock
sub
or
scas
cmp
cmpb
xchg
iret
push
or
push
xor
or
mov
data16
ficoml
sub
les
andl
jmp
adc
push
sahf
in
fstl
and
decl
lcall
jnp
fmuls
and
add
out
iret
or
push
repnz
imul
mov
cmp
subl
inc
mov
clc
push
cmp
mov
in
pop
mov
gs
lock
imul
and
sar
pusha
rorl
sbb
push
sbb
in
fstl
clc
jmp
cmp
add
mov
sub
sub
push
add
push
fildll
test
add
inc
add
sti
push
push
inc
cmc
inc
add
mov
pop
cmp
inc
pop
orl
in
mov
sbb
insb
pop
push
lock
es
inc
data16
xchg
or
decl
adc
pusha
mov
adcl
and
fiaddl
scas
push
jnp
jbe
push
cmc
inc
cmp
std
push
insb
sbb
mov
jne
mov
and
int3
inc
or
ret
push
aas
bound
sbb
jl
push
aaa
inc
shl
js
mov
push
mov
xor
adc
add
and
stc
push
adc
add
les
add
mov
adc
adc
adc
adc
dec
and
nop
push
mov
rcrl
mov
push
jo
sub
aas
notl
push
inc
pusha
outsb
xchg
mov
lods
imul
or
mov
mov
cmpsb
loopne
fbld
cmp
jne
dec
cmp
lret
adc
mov
push
jle
pop
test
push
xor
adc
add
loopne
mov
push
adc
and
xor
adc
mov
mov
adc
mov
and
or
jns
outsb
pop
mov
and
and
cmp
je
adc
pop
cmp
lods
mov
jge
add
or
jae
repnz
fcmovnu
and
mov
cmp
out
jmp
cmp
jb
mov
pop
fsubrs
sub
ficompl
js
sub
cwtl
mov
movsb
or
adc
push
nop
in
cmpsl
int
or
ja
push
rcll
cmp
sbb
push
xor
jbe
sub
jg
add
jge
push
push
push
sbb
out
sarb
push
and
mov
js
pop
mov
dec
ret
fnstcw
dec
sbb
orb
sbb
mov
push
js
test
insb
or
mov
mov
outsl
pop
adc
movsl
add
mov
movsb
sbb
into
fdivrs
mov
mov
into
jle
mov
test
sbbb
or
mov
ror
mov
sbb
mov
movsb
add
pop
mov
jle
test
cmp
add
cmp
sarl
push
jle
or
ret
sbb
flds
cld
mov
mov
jl
pop
insl
jecxz
add
lds
nop
sbb
das
insb
jmp
js
add
or
mov
call
mov
sbb
xchg
sbb
sbb
mov
mov
jle
lock
ljmp
and
push
sbb
mov
call
adc
sbb
insl
add
mov
inc
inc
inc
jmp
divl
jb
adc
sbb
enter
cld
add
mov
xchg
rcl
sahf
popf
push
add
adc
pushf
fnstcw
andw
mov
adc
push
test
mov
jb
mov
lods
movsl
sarb
js
ror
call
cmpsb
pusha
dec
add
std
jns
mov
adc
ss
jle
out
into
pusha
data16
xchg
out
mov
lea
aaa
cmp
jne
and
jae
mulb
mov
fildl
push
pop
cld
call
out
out
call
ficomps
lsl
push
jo
loope
call
arpl
or
push
adc
add
andb
loope
jb
in
ds
inc
call
out
or
jo
add
jl
stc
and
adc
adc
sub
xchg
test
add
xorb
adc
inc
pushf
adc
jl
add
and
nop
adc
add
je
add
add
add
pop
je
push
enter
add
sub
test
je
xor
adc
pusha
test
arpl
jb
dec
sbb
sbb
mov
pushf
insb
pop
pop
and
mov
adc
cmp
rcll
orb
outsl
clc
jle
xor
cmp
jle
dec
xor
cld
fists
hlt
cmp
ja
pop
mov
sbb
cmp
je
test
sub
push
mov
inc
hlt
mov
push
in
jne
mov
test
imul
inc
cld
jne
xor
jno
insl
push
inc
clc
xchg
lods
cmpsl
jmp
loopne
add
popa
test
inc
add
cmp
sahf
inc
cmp
mov
sbb
add
push
rorb
decb
mov
roll
xchg
in
sbb
mov
test
in
cmp
insl
jmp
cmp
je
adc
push
or
clc
add
stc
and
or
sub
cli
seta
xbegin
or
adc
nop
pushl
sbb
lds
leave
jne
or
test
je
mov
shr
xor
test
mov
add
pop
and
in
icebp
or
test
je
das
icebp
sub
cltd
xchg
rorl
ljmp
mov
inc
shl
or
mov
and
xchg
je
test
jne
test
lahf
fstl
pop
sbb
aad
push
cmp
push
fidivl
jne
or
adc
push
sbb
jle
add
test
negb
sbb
add
fdivrs
dec
or
mov
mov
mov
and
lahf
popf
jmp
pop
and
add
je
add
sub
pop
mov
mov
mov
movsl
jbe
aam
push
add
push
add
cmpb
inc
and
mov
push
jl
cli
in
inc
cmp
fcoms
add
outsl
andb
icebp
pop
das
mov
cmp
cmp
shlb
aaa
ret
add
inc
lcall
je
mov
lods
push
fnsave
push
fcmovnbe
xor
in
int
pushf
aaa
push
jmp
adc
inc
outsl
fistpl
add
xor
lock
mov
add
xchg
cld
mov
mov
cli
out
mov
idiv
adc
jg
dec
jo
mov
lahf
andb
mov
add
lds
mov
and
test
aas
mov
add
mov
add
daa
or
adc
add
xchg
aas
xchg
cld
add
push
call
adc
adc
loop
stc
and
lods
and
mov
outsb
out
cwtl
pop
pop
pop
and
jmp
insl
cmp
and
jp
sub
das
cld
add
adc
jo
shrl
add
jl
sbb
icebp
in
pop
cli
xchg
clc
and
imul
orl
pusha
add
mov
adc
ljmp
or
ja
std
and
add
push
addl
add
adc
std
jg
pop
mov
mov
sarl
roll
jae
incl
jo
mov
enter
or
aaa
add
mov
lret
ljmp
mov
mov
jne
adc
mov
sbb
dec
jo
mov
rolb
jns
adc
or
and
sbb
lea
sub
xchg
push
jge
loopne
mov
pop
cmpsb
push
pusha
xor
xchg
inc
dec
bound
es
mov
mov
jbe
or
cmp
mov
not
and
push
mov
mov
jl
and
or
add
lea
ficompl
cld
mov
shr
mov
add
idivb
push
repnz
not
and
testl
call
jb
shr
out
push
js
fcmovnu
xchg
inc
repnz
aam
or
ficomps
fucomi
and
or
lea
shr
ror
imul
adc
pop
inc
sub
mov
and
not
mov
inc
fiadds
psllq
mov
imul
push
shr
or
add
dec
daa
pop
idivb
push
lea
sbb
mov
push
lods
loop
mov
push
push
inc
add
not
and
shlb
adcb
sub
xchg
rcr
test
jecxz
sbbb
xlat
insb
adc
sbbb
or
mov
xchg
adc
sbb
inc
xor
or
or
rorl
in
pop
mov
sbbl
int3
xor
add
lret
push
push
xor
pop
ficomps
lret
sbb
les
rep
repz
pop
rolb
fcomp
cwtl
subb
orl
in
or
and
not
fisubrs
in
cld
ret
adc
pop
scas
testl
sti
mov
pop
les
subb
cltd
ss
add
pop
push
loop
pop
push
sub
sub
fsubs
push
push
add
mov
pop
mov
pop
mov
test
les
adc
xor
or
xor
out
mov
or
xchg
jno
std
stos
mov
fmuls
lods
es
add
and
lods
fnsave
cmp
pop
aaa
mov
push
mov
cmpsb
pop
mov
xor
dec
fbld
xchg
sbb
cmp
rol
popa
adc
pop
loopne
jecxz
and
mov
ret
mov
mov
jecxz
and
aad
negb
pop
bound
sbb
add
and
cld
inc
stos
idivl
dec
dec
cmp
inc
shlb
pop
or
fadds
hlt
push
and
rcrb
clc
jb
repz
pop
pop
es
and
lcall
test
cmp
pop
imul
mov
jl
out
call
pop
sub
imull
mov
repz
pop
adc
call
xlat
lods
arpl
fcmovb
mov
pusha
mov
push
adc
add
insl
sbb
and
pop
and
lcall
jge
outsl
addr16
mov
fnstcw
out
cmp
xor
adc
enter
lods
pop
mov
mov
mov
out
loope
out
lret
repz
loopne
ret
inc
enter
and
ret
mov
push
fbld
popl
mov
cltd
lret
outsl
xlat
sbb
push
inc
mov
ljmp
idivl
call
inc
loop
shr
or
js
or
mov
add
mov
jns
sbb
jns
push
aam
mov
jge
out
daa
push
and
sub
inc
mov
mov
outsl
adc
jecxz
test
fisttps
repnz
adc
or
xor
outsl
mov
test
jmp
add
insl
mov
test
xor
mov
data16
cmp
or
cs
inc
js
js
lds
popa
popf
insl
adc
outsb
aaa
mov
inc
sti
xor
mov
repnz
outsb
cmp
cmp
std
mov
stc
jo
call
ljmp
fcmovnu
fs
mov
fimuls
lret
movsl
cltd
jb
repz
sub
int3
pop
pusha
dec
mov
xlat
xchg
in
cli
xor
lods
sbb
mov
out
push
fcomip
ds
mov
jle
sub
mov
out
testl
dec
out
mov
daa
mov
push
das
pop
dec
fimuls
test
out
aam
xchg
jae
adc
fidivs
pusha
cmp
pop
jbe
cmp
out
cmp
or
push
sub
mov
aas
sbb
cmp
rcl
fstps
in
jbe
les
in
pop
mov
pop
mov
ss
push
in
clc
jl
pop
je
clc
lcall
cmp
outsl
inc
gs
lods
les
cli
xor
mov
stos
sub
adc
stos
rcrb
sbb
push
ss
sbb
jl
fs
loope
int3
or
inc
push
or
movsb
mov
repz
and
jns
shlb
hlt
cmp
mov
or
adc
mov
xor
cmp
pop
pop
gs
sbb
outsb
fs
rcrl
gs
xchg
int3
or
push
or
ja
mov
lcall
hlt
out
call
insl
data16
unpckhps
sbb
repz
rcrl
test
sub
cmp
call
scas
dec
jle
outsl
jecxz
jp
sbb
addb
sbb
dec
outsb
repz
sub
jecxz
jp
ret
add
mov
add
in
fdivl
mov
outsb
sub
cmc
cmpb
lds
jp
xlat
sbb
ja
mov
xor
out
in
cmpsb
gs
mov
ret
iret
fwait
aam
rcl
sub
pslld
ret
loop
pop
mov
pop
rclb
xor
mov
xor
out
xlat
fnsave
cli
pop
add
pop
movsb
mov
inc
or
aam
lods
xor
pop
lods
mov
js
cmp
nop
mov
cld
cmpb
sarl
mov
sub
push
push
push
imulb
data16
xor
cmp
adc
push
test
fcmovu
inc
test
outsb
lea
sbbb
push
test
nop
iret
pop
pop
mov
mov
stc
mov
pop
into
ljmp
add
sbb
cmp
jne
xchg
sbb
rclb
lea
mov
pushf
push
xor
test
shl
or
mov
pop
mov
push
cmp
jbe
lea
mov
lret
adcb
or
dec
cmp
out
or
testb
mov
sub
jno
popf
lea
clc
pop
adc
ljmp
push
push
push
test
push
add
mov
gs
test
stos
mov
or
cmp
jge
sub
inc
mov
jmp
xor
push
pop
inc
call
and
inc
xor
or
gs
in
sbb
test
dec
int3
adcl
pop
push
push
xor
mov
mov
enter
or
daa
lods
jp
imul
call
mov
imul
lret
or
aam
addr16
fisubrl
fsubrl
jo
loopne
out
int
loop
in
outsl
cmp
test
sub
mov
push
out
mov
xchg
sub
pusha
xor
jnp
jle
and
or
sbb
mov
enter
enter
xchg
shrl
loop
sub
xchg
mov
imull
lods
add
in
sbb
dec
or
loop
int3
call
mov
je
or
or
shlb
test
adc
out
stc
inc
flds
incb
out
push
xor
ret
and
jecxz
dec
pop
lret
pusha
aad
cld
setge
mov
imul
daa
jne
int
in
cmp
mov
je
ret
mov
push
adc
push
inc
je
les
clc
mov
call
jmp
das
pusha
rcll
sub
movl
in
out
jmp
sbb
cmp
je
dec
dec
data16
popf
sti
cmpl
jne
pop
push
arpl
inc
add
cmp
add
sub
pop
and
imul
ljmp
fstps
push
aad
mov
inc
lret
jbe
cmp
xor
movl
testl
jbe
je
xchg
cmp
testb
repnz
decl
inc
add
je
cmp
jne
push
add
and
push
in
add
add
mov
mov
stos
and
pop
je
popf
adc
xlat
pop
daa
idivb
sub
push
enter
xor
inc
incl
cmp
cmc
push
xchg
sbb
fstl
mov
arpl
xor
movsb
pop
fs
andb
cmp
pop
mov
mov
or
mov
std
inc
mov
mov
push
mov
dec
dec
xchg
sbb
outsb
insb
sbb
push
nop
inc
mov
loopne
mov
cmp
int3
push
and
jbe
add
and
ss
adc
jne
mov
dec
cmpsl
je
pushl
jl
shll
xor
and
add
cmp
cli
hlt
lea
sti
aam
mov
das
push
jg
std
mov
pop
divb
loop
pop
outsb
outsl
xor
ret
dec
clc
pusha
iret
push
loop
cmp
neg
outsl
testl
pushf
inc
outsl
cld
imull
je
cmp
mov
add
jne
cmpl
scas
or
mov
je
xchg
push
push
pop
dec
mov
imul
or
out
into
lea
std
jle
fdivp
in
sbb
pop
adc
pop
pop
call
call
jmp
pop
mov
cmpb
dec
inc
jne
sub
mov
mov
idiv
xchg
adc
jmp
xchg
adc
xor
pop
push
cli
enter
add
fs
push
mov
popf
cmp
jl
pop
mov
hlt
mov
push
js
ret
sti
push
adc
inc
mov
ss
mov
dec
sbb
je
lods
in
mov
dec
or
cs
lret
mov
mov
mov
mov
mov
lret
in
mov
mov
or
and
sub
mov
dec
movb
pop
xchg
gs
jo
outsl
jb
mov
mov
jb
and
fcmovu
gs
insb
sbb
fmull
test
loop
mov
popa
pop
in
push
out
dec
out
fldt
call
mov
mov
mov
lock
bnd
inc
test
rol
loop
in
imul
ret
les
lds
mov
enter
lret
cmp
int3
hlt
cmc
call
lret
imul
stc
popf
cli
and
xor
add
ret
add
scas
mov
xchg
call
loopne
or
push
aaa
inc
push
xor
rol
pop
jo
out
jmp
sub
ds
push
pop
dec
xor
dec
push
cli
jge
pop
es
clc
cmp
loopne
sub
std
aas
loope
jnp
movsb
cmpl
jg
lods
cli
idivl
lea
rcl
addr16
inc
sbb
sti
pop
sarl
sbb
out
shl
add
xchg
cli
arpl
pop
inc
je
ret
jbe
inc
loop
test
mov
inc
xchg
scas
xchg
mov
in
test
pusha
aaa
enter
cltd
jo
pop
movsl
jmp
sbb
xchg
jmp
xchg
pop
jmp
mov
test
or
sarl
cmpsb
and
mov
cld
leave
inc
in
sar
jbe
cld
mov
or
mov
std
andb
sbb
movsb
dec
sub
aam
pop
nop
fcmovnb
xor
hlt
fsub
push
mov
jb
cltd
push
push
int3
loopne
adc
push
imul
cmp
lock
sub
into
cld
stos
cld
mov
sahf
fistl
mov
inc
jmp
adc
scas
pop
testb
xor
push
pop
jo
mov
sarl
or
sub
or
or
call
pop
xchg
mov
sub
sbb
leave
inc
adc
mov
inc
daa
iret
ret
jmp
lock
cmp
mulb
adc
jg
repnz
popa
or
sti
int
sub
cmp
jl
jns
cmovno
mov
cmp
outsb
jne
inc
and
adc
add
pushf
inc
sbb
cmp
jae
or
sti
addl
mov
cmp
cmpsb
mov
out
mulb
pop
adc
clc
ds
push
cmpsl
outsl
inc
xlat
adc
cmp
push
and
push
sub
aam
pop
repz
mov
push
test
ljmp
pop
fstl
mov
int3
lds
mov
lea
push
sub
cs
pop
movsb
fsubrs
sbb
mov
mov
hlt
pusha
scas
cmpl
pop
dec
int
fsubr
mov
dec
adc
mov
lcall
mov
and
fidivs
call
out
data16
or
add
adc
aam
adcb
mov
push
and
pusha
andl
dec
or
call
adc
or
push
outsl
and
mov
adc
cltd
nop
add
lock
psrld
lea
push
movsl
movsb
xchg
cmc
mov
and
hlt
aam
lock
dec
std
sbb
xchg
test
push
adc
add
push
and
jecxz
or
imull
jle,pt
mov
xor
push
push
fbld
leave
push
and
movzbl
adc
pop
clc
div
fcomps
inc
cmc
inc
aas
cld
adc
andb
pushf
add
jp
push
mov
add
add
add
lcall
dec
jo
int
imul
insb
lock
popa
pop
repnz
mov
hlt
cs
fs
ss
and
out
gs
inc
xchg
fldenv
push
fs
jo
gs
dec
dec
jb
outsb
data16
pushf
subb
adc
cmpsb
outsb
lods
aam
xor
mov
jne
push
jmp
xlat
pop
cwtl
xchg
sbb
xchg
xchg
xchg
adcb
mov
dec
adc
pop
add
cmpsl
das
dec
push
dec
inc
nop
inc
push
pop
xchg
xchg
jmp
inc
mov
adc
xchg
js
mov
inc
cmp
in
xchg
push
cld
inc
cmp
dec
pushf
test
aas
sub
icebp
fsubr
xor
inc
in
rorl
xorb
mov
mov
out
add
push
js
rcrb
repz
and
mov
dec
loop
sub
cmp
out
out
cmp
fstps
xor
push
sbb
cld
pop
lret
xorl
xchg
dec
repnz
ja
push
adc
lea
xor
mov
jmp
inc
xchg
sbbl
ss
mov
mov
pop
mov
sbb
push
cmp
adc
jo
or
dec
loop
lahf
cld
mov
jb
int
idivb
rcll
sbb
js
cs
mov
push
xchg
push
xchg
imul
jle
mov
hlt
mov
mov
ds
xlat
in
cmp
ds
fsubl
cmp
imulb
ss
je
push
popf
or
push
fldl
xor
adc
aas
pop
jl
mov
push
fildl
xlat
gs
jmp
call
or
aad
dec
add
sub
loopne
imul
xchg
es
add
test
jl
std
sub
std
mov
aas
xchg
sti
ja
mov
xchg
sub
push
orb
pop
mov
les
mov
stos
pop
notl
popa
push
add
ljmp
pop
push
daa
add
icebp
ficoml
pushl
sbb
pop
push
pop
cmpsl
or
fmull
sub
mov
sub
fdivl
pop
out
push
cwtl
cltd
cmp
int
mov
popf
sahf
adc
mov
movsb
shrl
cmpsb
movsl
cmpsb
cmpsl
jo
test
stos
stos
lods
pop
lods
pop
scas
scas
lcall
jb
mov
xor
cmpsb
imul
fnstcw
pop
mov
cmpsb
imul
dec
cmp
dec
mov
dec
cmpsl
das
enter
lret
je
shll
int
inc
iret
jae
xlat
jne
rcl
rcl
adc
or
pop
dec
shll
xlat
aaa
fcomp
fcmovu
push
imul
test
imul
cmp
pop
xchg
arpl
jo
pop
xchg
mov
push
jae
cmp
xchg
add
and
jae
clc
call
sbb
add
push
mov
testl
lret
sub
cmp
or
add
push
push
leave
popa
lahf
pop
xor
inc
push
sub
xor
pop
gs
and
rolb
nop
in
mov
or
push
or
adc
and
je
sub
push
dec
pop
into
leave
push
cmp
fisubrs
hlt
cmpps
push
mov
mov
stos
add
or
mov
mov
sbb
les
fiaddl
les
es
mov
sbb
mov
mov
jmp
ret
int3
out
cmp
inc
shll
adc
xchg
xchg
jmp
orb
bound
push
xorb
sub
shrb
scas
adc
cmp
inc
aad
icebp
fisubs
mov
in
insl
push
call
dec
adc
and
mov
xor
cmp
sahf
mov
adc
dec
andb
adc
adc
mov
push
ljmp
add
add
fildl
xchg
inc
iret
ret
outsl
and
inc
jne
push
mov
pop
test
hlt
pushf
jle
into
xor
mov
inc
push
cmp
enter
dec
ss
clc
je
inc
jecxz
push
sti
cmp
push
call
pusha
aad
adc
ret
in
inc
pop
dec
jl
adc
push
sub
les
aaa
incl
dec
ret
adc
jmp
lret
dec
js
cwtl
add
cmp
add
fsubl
fs
int
mov
xor
or
std
mov
ret
add
in
xor
sbb
call
sbb
testb
sqrtps
popf
insb
xor
movsb
mov
add
and
lcall
rorl
cmp
jns
dec
aaa
adc
addr16
sbb
mov
pop
xor
or
std
pop
or
stc
divl
dec
push
mov
push
inc
fidivl
faddl
daa
xor
pushf
dec
push
cmp
sbb
rol
jno
loope
icebp
push
push
mov
enter
sbb
gs
notl
cwtl
test
pop
and
xor
sbb
sti
jne
push
push
cmp
or
mov
outsb
cmpsl
nop
push
push
jmp
xor
sbb
arpl
dec
out
mov
sbbb
addr16
adc
mov
jl
add
push
mov
iret
xor
shrl
dec
shr
divb
mov
stc
mov
stc
sbb
or
adc
shrb
jecxz
add
shlb
cmp
bound
inc
mov
jne
mov
pop
insl
pop
aad
cmp
push
push
pop
pop
or
xchg
and
xor
sbbw
call
add
jo
push
add
imul
add
push
push
jmp
pushf
mov
adc
cmp
je
lret
icebp
sbb
pop
push
sbb
cmc
mov
add
fimuls
lds
xor
jl
shlb
out
add
or
std
or
out
mov
push
lods
xor
xchg
adc
orl
aas
cmp
xor
cmp
out
sub
rorb
fcomp
in
xchg
or
fsubl
ret
sub
fmull
stos
inc
stos
negl
es
sbb
cwtl
and
loopne
inc
lds
sub
clc
push
dec
test
xor
fldt
fidivrl
push
pusha
sbb
push
and
jbe
pop
jb
add
stos
push
xor
xchg
les
adc
mov
pop
jnp
mov
jg
mov
cltd
mov
idiv
jle
xor
hlt
cmp
and
in
rcl
nop
xor
add
or
xlat
ljmp
sbb
mov
lock
jle
fisttpll
cwtl
ss
push
ret
sub
leave
adc
jp
xchg
mov
aas
mov
repz
sbb
dec
push
hlt
push
xor
push
pop
push
dec
pop
andb
gs
xchg
gs
cs
insb
je
insb
inc
sti
addr16
mov
sbb
fs
xorb
lcall
dec
outsb
imul
imul
imul
scas
lods
jp
je
jo
xor
inc
jbe
jo
outsb
dec
shll
shrl
cs
roll
aam
mov
mov
sub
mov
xchg
gs
imul
push
cwtl
js
lcall
je
inc
je
roll
loope
loop
xor
in
ds
xor
mov
mov
mov
mov
ud1
mov
mov
mov
in
mov
mov
fstps
or
shlb
mov
and
and
lods
mov
mov
adc
inc
ret
clc
add
iret
or
cld
lods
xor
pop
and
ret
add
mov
ret
sbb
add
push
loopne
mov
jmp
push
into
fcomps
fsubs
hlt
add
jp
es
mov
loope
pop
or
cwtl
cmp
fwait
add
addr16
adc
out
mov
sbb
imul
pop
cmpsb
fcomi
dec
je
add
leave
aam
push
sub
or
cld
repz
sbb
or
sbb
mov
or
pop
addr16
add
sub
push
add
call
jno
jmp
jmp
xor
mov
call
sbb
push
divb
sbb
aad
or
push
add
mov
xchg
loop
pop
subl
insb
xchg
into
push
call
ret
call
or
out
rcrb
or
mov
mov
fwait
lods
push
push
arpl
sbb
inc
incl
fcomps
xchg
mov
imul
andb
cld
hlt
sub
mov
ljmp
pop
daa
lret
mov
pop
xor
and
cmpsb
imul
jmp
mov
lcall
mov
insl
jne
in
inc
popf
or
enter
xlat
dec
pop
pop
adc
mov
sbb
je
jecxz
xor
sarb
lcall
push
aaa
xor
insl
mov
sbb
out
xchg
cmpb
gs
and
push
fimuls
popa
jmp
sarb
fnstsw
cs
sub
rolb
sbb
dec
add
js
mov
jbe
mov
fistpll
xor
mov
clc
mov
cli
sbb
jb
and
pop
aaa
pop
rolb
cmp
push
sbb
iret
and
fsub
insb
pusha
jo
call
movsb
inc
mov
dec
aad
mov
mov
push
nop
sub
push
cmpsl
loopne
aas
popa
or
arpl
outsb
xor
shll
dec
roll
insl
clc
es
xor
shll
mov
in
je
push
test
loopne
and
in
cmp
add
std
daa
add
inc
leave
mov
xor
xchg
xlat
das
int3
sbb
insb
addr16
std
ret
and
dec
aas
popa
arpl
sub
xor
cmp
sub
je
outsl
jae
jne
fldt
mov
cmpsb
clc
mov
in
movsb
fwait
mov
sbb
mulb
cli
adc
in
movsb
add
jle
push
lahf
sub
pop
scas
cmp
sbb
add
add
in
inc
std
mulb
hlt
pushf
jbe
xchg
inc
and
lret
sbb
xor
xchg
inc
int
inc
inc
sbb
pop
aas
pop
movsl
test
mov
sub
add
loope
push
push
push
je
imul
insb
outsl
or
imul
adc
rcl
pop
ret
rcrb
shr
pop
cmp
in
je
cmpl
inc
jbe
pop
lahf
add
pusha
dec
in
lcall
sub
out
aad
push
arpl
add
ljmp
jge
jg
stos
stos
imul
outsl
popa
mov
or
xchg
dec
repz
and
in
inc
push
jno
add
xchg
and
andl
iret
inc
push
loop
add
xor
mov
xchg
mov
jge
lret
loope
push
loopne
pop
xadd
inc
xor
pushf
out
scas
push
xor
mov
sti
loope
loope
and
sbb
ror
dec
push
and
aaa
fldt
cmp
movb
adc
push
and
cmp
lods
shll
ret
and
inc
rorl
fs
xor
add
mov
enter
sub
cmc
cld
jb
sbb
mov
pop
jb
mov
sti
rorl
add
fdivrp
xor
fbstp
adc
es
call
les
stos
clc
loopne
and
inc
jp
mov
jg
std
cwtl
inc
cwtl
and
jmp
pop
xchg
gs
arpl
outsb
gs
xchg
gs
xchg
gs
xchg
imul
call
lods
scas
scas
push
mov
xor
adc
pop
shll
mov
imul
ret
ret
les
push
es
jne
add
int3
mov
mov
lret
mov
arpl
lret
mov
lret
outsb
cmp
lret
leave
mov
jb
jns
cmp
fwait
push
mov
ret
adc
pop
out
data16
lcall
xchg
mov
and
dec
mov
mov
mov
dec
or
jmp
push
nop
pmulhuw
shr
sbb
jmp
pusha
aam
cmp
push
cmp
adc
call
push
in
subb
lock
cld
xor
sbb
call
mov
call
push
pop
mov
xor
xchg
cld
clc
cs
rolb
sarb
sbb
ss
cwtl
and
push
inc
subl
sub
xchg
cli
out
jae
xchg
in
aas
arpl
cmpsb
loope
pop
cmp
pop
mov
es
jl
or
sbb
sbb
int3
jne
xorl
mov
sbb
sti
jl
cmpsb
cmp
dec
mov
shrb
mov
and
shll
clc
popa
imul
popa
arpl
stc
add
or
outsl
popa
jb
cmpsb
fwait
sub
je
jb
in
int
pop
push
mov
ljmp
and
out
jns
out
sbb
xor
cld
push
sub
lcall
jg
xchg
insb
pop
jmp
and
push
lods
xlat
mov
and
hlt
xor
or
jp
push
fdivs
imul
insl
call
adc
xor
lods
imul
aam
cmp
add
mov
lds
or
and
fdivrp
cmp
and
jne
rorl
push
adc
sub
push
jle
cwtl
add
in
jne
idivl
or
call
adc
sarb
push
xchg
fstpt
jl
sbb
or
js
call
add
iret
cld
adc
add
mov
xchg
xchg
stc
or
push
imul
inc
loope
push
xor
es
push
push
pop
push
or
adc
stc
adc
into
pop
jmp
push
cwtl
pop
popa
scas
out
cmp
movl
xlat
loopne
push
xor
mov
push
xor
jno
cmp
dec
mov
and
in
out
or
mov
out
or
fsts
ljmp
adc
lcall
out
ds
cmp
sbb
xchg
jae
imul
outsl
sbb
mulb
cld
pop
loop
jecxz
pushf
and
in
in
out
xlat
mov
adc
add
jg
sahf
popf
divl
fucomip
mov
pop
out
dec
call
popf
js
or
xchg
cmp
xor
and
or
push
mov
sbb
clc
cld
or
push
push
pop
aaa
ss
pop
and
and
movl
mov
mov
call
shll
sbb
je
jo
enter
xlat
call
mov
enter
xchg
mov
wrmsr
mov
insl
stos
ss
jnp
clc
push
mov
xor
cmp
mov
xor
add
push
or
add
jb
es
daa
das
cmp
push
push
pop
jae
lret
adc
sbb
or
insb
mov
cli
xor
mov
rolb
or
ss
or
add
push
push
cld
adcb
rclb
test
cmp
push
fs
mov
rolb
mov
dec
imul
mov
test
call
insb
loopne
jmp
or
or
fstpt
fcomip
xor
jecxz
scas
test
mov
ss
ret
loopne
cmp
lods
jge
push
mov
std
mov
mov
xchg
call
testl
andl
es
cs
pop
pop
cltd
push
mov
sbb
add
jno
push
xchg
add
daa
adc
add
jle
jne
ss
jmp
push
add
jmp
adc
sbb
and
daa
je
mov
push
xor
stos
xor
outsb
push
lea
or
mov
clc
add
add
enter
push
mov
incl
into
inc
test
add
jo
mov
insb
inc
pop
jge
pop
or
jae
xor
in
fists
ret
movsbl
pop
call
andl
push
loope
lock
iret
leave
repz
xor
push
dec
or
jae
ljmp
sub
sbb
xor
xchg
add
cs
sbb
push
jno
jge
sbb
mov
in
popa
adc
push
lahf
or
ret
in
pop
out
sub
inc
pop
icebp
adc
lods
shlb
ret
cmp
and
mov
add
push
lea
cs
hlt
and
aad
jmp
push
fcoml
es
xor
icebp
les
sarl
in
decb
test
dec
decb
in
dec
mov
sar
cs
mov
jmp
loop
xor
jl
and
sbb
push
pop
mov
ja
inc
inc
cmpsb
jmp
jl
mov
adc
cmp
mov
daa
pop
adc
sti
sub
jns
xchg
add
jmp
and
mov
cmp
in
scas
mov
notl
js
je
or
ds
pop
leave
push
mov
in
das
inc
es
push
lods
daa
pop
out
into
hlt
mov
mov
push
inc
in
add
mov
sbbb
inc
popf
mov
adc
sbb
push
mov
fldenv
jo
xchg
fcmovne
mov
add
scas
mov
ficompl
mov
dec
push
cmp
push
icebp
mov
or
por
sbbl
cld
pusha
sbb
push
jmp
sbb
loop
xor
mov
jbe
mov
push
push
jno
ret
clc
xchg
add
shrb
jb
pop
sbb
fwait
imul
sbb
sbb
out
loopne
ja
repnz
mov
clc
mov
mov
add
cwtl
cmc
stos
rcl
mov
sahf
jae
adc
mov
test
pushl
call
and
xor
mov
mov
movsb
clc
jge
daa
xchg
xor
push
mov
cs
outsb
jle
add
or
stos
inc
dec
mov
pop
sub
idiv
inc
jl
add
jg
sub
xlat
mov
inc
ljmp
mov
sub
jl
add
jg
movsbl
lea
lea
fcmovnu
push
shlb
pop
xchg
pusha
inc
cmp
jl
pop
decb
inc
ss
ljmp
add
pop
mov
push
add
loope
sbb
int3
mov
jne
mov
out
fistpll
add
cmp
jl
mov
inc
cmp
mov
cmp
fisttps
adc
add
push
rcrl
add
push
add
mov
nop
and
push
adc
pop
rol
rcrb
or
and
push
cmp
insb
push
push
cmp
jg
add
mov
add
fcomps
push
icebp
cld
xchg
mov
cmpsb
xlat
in
mov
push
and
fcmove
jge
push
or
xor
push
popa
or
je
mov
cmova
rcrl
dec
cmp
sbb
rolb
xchg
jl
jb
xor
push
in
jecxz
in
sbb
cmp
adc
add
or
jne
add
add
leave
mov
cmp
add
jl
cmp
jg
mov
adc
jg
inc
inc
push
jl
push
pop
adc
or
and
hlt
add
popa
bound
and
cmp
mov
jle
loop
hlt
es
add
mov
dec
lock
mov
push
push
repz
mov
int
or
adc
or
push
call
call
sbb
test
fwait
and
mov
je
cmp
cmp
adc
rorb
sbb
mov
cmp
pcmpeqw
mov
fsubr
popl
mov
and
xchg
sbb
inc
jmp
pop
add
inc
xlat
or
cmpsb
pop
sub
inc
mov
es
lea
cs
push
jle
pushf
adc
xchg
fdivrl
mov
in
push
test
mov
add
xchg
std
sbb
movsb
lahf
call
mov
fcomps
adc
inc
ja
xor
clts
aaa
fistpl
das
and
add
xchg
or
push
jne
psubsb
sub
pusha
dec
xchg
pusha
fs
mov
lahf
cmp
fdiv
push
cmpsb
fsubs
ljmp
jmp
xor
cld
es
imul
adc
mov
adc
or
sbb
nop
in
or
or
mov
imul
inc
xor
and
sbb
pop
fwait
lcall
repz
js
call
rorl
call
frstor
pusha
push
cmc
add
clc
jo
repz
clc
pushl
mov
mov
mov
pop
cmpsl
mov
push
ds
aad
mov
jl
inc
loop
or
enter
jmp
sub
stos
and
jmp
adc
cmc
fnstenv
imul
sbb
cmp
std
loopne
sub
push
fidivs
mov
and
or
adc
mov
push
push
sbb
fdivrs
mov
mov
push
push
mov
insl
dec
loopne
push
mov
rcrl
mov
cmp
dec
or
shlb
xor
pop
imull
xchg
shlb
sub
mov
and
stc
jl
enter
movsl
sub
lret
leave
enter
push
pextrw
mov
inc
in
ret
mov
jmp
xor
and
mov
mulb
push
ss
popf
xor
adc
mov
or
and
call
and
cmp
push
call
mov
pop
xchg
gs
imul
mov
insl
imul
cs
sub
mov
and
jb
push
sub
mov
fs
je
aad
insb
je
bound
inc
mov
cmp
test
insb
mov
add
fst
dec
mov
dec
sarb
icebp
stos
sbb
icebp
mov
jmp
pop
ss
idivl
inc
dec
add
mov
push
sub
pop
adc
dec
push
fdivrl
jbe
cmpsl
cmp
add
enter
and
add
mov
in
adc
clc
jp
jp
rcl
test
mov
lcall
mov
jnp
or
dec
xchg
data16
jns
mov
dec
xor
out
jno
mov
inc
adc
sub
xchg
inc
wrmsr
push
inc
test
mov
mov
mov
mov
mov
mov
push
pop
inc
sub
xor
movb
lods
or
fs
xchg
cmp
pushf
les
sub
imul
add
clc
cmc
pop
and
mov
mov
mov
add
jo
js
cmp
jmp
dec
insl
repnz
sub
icebp
lds
xor
or
mov
jmp
mov
inc
or
loope
mov
test
ja
jnp
lock
lock
mov
loop
or
lea
sbb
xor
mov
mov
push
mov
cmp
ss
xor
sbb
or
pop
dec
loopne
or
mov
popa
inc
push
push
mov
lret
mov
push
lock
rolb
sub
cltd
dec
add
inc
outsb
mov
dec
aad
aam
or
insl
xlat
insb
fwait
sbb
xor
xlat
fcoms
and
aaa
dec
fcmovu
fisubrl
cmp
dec
mov
dec
les
in
subb
ja
ds
fbld
jl
fs
cmpw
unpckhps
add
enter
push
je
cwtl
mov
lcall
inc
cmp
jl
je
inc
sbb
call
lret
jb
add
jo
add
cmpl
jl
inc
jb
dec
or
imul
add
mov
push
lret
cltd
mov
or
add
mov
jno
sub
dec
jmp
xchg
lea
pop
rolb
add
test
jo
pop
and
scas
pusha
jecxz
roll
or
or
add
jmp
pushl
adc
jne
mov
sub
add
mov
das
lods
scas
mov
jl
decl
cmpl
mov
mov
negb
fildl
shr
mov
outsl
movzwl
mov
jne
daa
add
pop
addb
push
cmp
mov
test
add
rcll
data16
lock
cmp
or
sub
lds
adc
sub
or
ret
inc
fsubl
inc
fbstp
inc
inc
lea
dec
add
insl
iret
adc
mov
fcoml
lret
push
and
repz
mov
push
jno
push
mov
mov
dec
je
adc
outsb
stos
mov
outsb
inc
adc
iret
sbb
xor
ret
pop
je
and
mov
pushl
add
push
scas
bound
lods
and
sub
or
sub
or
cmp
call
mov
add
loopne
add
subl
xor
and
andl
jle
sbb
sub
inc
fistl
push
call
and
pushl
lcall
xor
push
push
inc
call
lock
les
push
rclb
jo
in
adc
call
inc
cmc
faddl
or
push
sub
fwait
inc
adc
inc
inc
in
lret
pop
mov
hlt
mov
xchg
inc
cmp
testb
je
jp
inc
mov
jne
shr
or
aas
into
or
subl
sbb
pop
xchg
add
fisttpll
xchg
data16
fstl
push
xchg
mov
push
mov
shrb
xor
add
pusha
mov
roll
cmp
jne
nop
sbb
pop
or
or
and
fmull
sub
fldenv
inc
lcall
jb
inc
gs
jo
jmp
shlb
push
cmp
ret
or
or
call
xor
or
jno
cltd
scas
inc
cmpsb
repnz
or
add
sbb
jge
shrb
add
push
fwait
shll
shll
xor
lldt
dec
lea
add
inc
push
mov
cli
mov
cs
mov
push
daa
or
ret
sub
inc
cmp
mov
or
jle
movsl
pop
lret
mov
lret
outsw
outsb
je
pop
mov
leave
push
adc
ljmp
push
add
fiadds
fcoml
pop
cwtl
hlt
mov
and
loopne
xchg
mov
cmpsb
pop
movsb
bound
lcall
sbb
es
xor
ljmp
lods
mov
or
jl
jecxz
cmp
ja
cltd
in
and
int3
add
fwait
inc
xor
cwtl
sub
sbb
inc
loope
sbb
add
mov
pop
push
or
jle
sub
ljmp
inc
aam
push
jg
or
fs
sbb
movsl
or
outsb
jbe
fcompl
xchg
or
xlat
xchg
mov
inc
pop
fnsetpm(287
push
imulb
sbb
addr16
out
sub
adc
jno
cmp
pop
rcr
xchg
call
xor
je
cmp
imul
insl
push
mov
daa
and
and
adc
jmp
mov
aaa
test
push
cs
rcrb
xor
inc
mov
sbb
test
mov
xchg
cmp
repnz
and
int
mov
add
or
push
push
jbe
rorb
inc
sub
std
and
pushf
adc
inc
xchg
mov
dec
sbb
mov
mov
mov
jmp
rorl
and
adc
dec
mov
ds
imul
imul
mov
imul
xchg
lret
int3
int
aas
mov
pop
std
rolb
pop
sar
or
insl
int
jne
pop
lret
push
in
mov
mov
xor
lret
mov
jae
add
repz
lret
mov
xor
xor
jmp
cs
scas
subb
jne
dec
fsubrl
cwtl
imul
pop
xchg
or
adc
push
mov
sbb
mov
inc
mov
iret
push
out
jns
pushf
and
jl
cwtl
add
clc
sub
sbb
mov
and
subb
out
xchg
stc
adc
inc
adc
loope
push
mov
int
les
jmp
xor
push
mov
inc
adc
fdivs
ljmp
lea
mov
cld
sub
mov
movb
xor
add
mov
cmpb
loopne
or
popa
or
aad
cmp
jge
andb
or
or
jo
xchg
gs
insb
outsl
jb
jb
pusha
xchg
gs
cmp
test
inc
sub
sub
push
jmp
call
add
nop
leave
outsl
out
xchg
mov
jns
insl
xchg
enter
repz
sbb
enter
push
shlb
aad
push
sbb
iret
lret
push
jnp
mov
or
and
jl
add
dec
push
or
adcb
dec
fisttps
cli
mov
mov
std
mov
pop
inc
ret
sub
shr
call
pop
lods
arpl
jmp
cmpsl
pop
inc
push
pop
enter
shlb
add
xor
leave
inc
xor
mov
je
push
jne
dec
mov
pushf
sbb
mov
enter
dec
inc
add
fstps
mov
repnz
and
xor
clc
fs
xor
mov
nop
xchg
adc
fs
pushf
mov
dec
test
jl
arpl
outsb
invd
xor
and
and
adc
idivb
mov
mov
add
mov
in
jb
xor
adc
loopne
mov
push
fcoms
push
pop
push
sbb
fldenv
test
nop
scas
sbb
gs
js
mov
add
fildll
inc
fs
arpl
gs
js
gs
adc
jb
and
dec
outsb
imul
gs
jb
arpl
push
sub
sub
cmp
add
dec
gs
jbe
xor
dec
cltd
sub
add
std
mov
arpl
xor
dec
gs
xchg
add
insb
cmp
inc
add
je
inc
outsl
aas
add
inc
adc
pop
jge
and
jnp
movsb
add
outsl
mov
popa
imul
jae
add
aas
push
outsl
outsl
insb
imulb
add
jo
push
outsb
popa
jo
push
jbe
add
jne
je,pt
push
sbb
dec
ss
add
add
push
mov
stc
pop
outsl
imul
fstpt
imul
packsswb
rorl
push
push
xor
jnp
sti
outsl
jnp
sbb
sbb
fs
adc
lret
fnsave
inc
lds
testb
add
insb
push
dec
pop
sub
pusha
inc
fcmovb
lods
adc
or
mov
in
in
inc
fndisi(8087
dec
and
inc
jns
add
or
mov
push
and
mov
sbb
pop
fcmovne
add
dec
test
sub
and
or
stos
sbb
sbb
jno
fstpl
lret
popa
inc
daa
xlat
outsb
and
push
ret
cmpl
insl
aas
xchg
rorl
dec
sbb
pop
test
pop
push
orb
xchg
int
repz
stos
xlat
insl
mov
jo
push
push
sbb
lods
jmp
cmp
ret
andb
adc
test
mov
jno
pcmpeqb
and
insb
imul
imul
call
add
mov
icebp
negl
or
imul
mov
sub
in
cmp
dec
filds
mov
xchg
lcall
sbb
xor
sbb
mov
jns
imul
sbb
adc
insb
add
xor
outsb
fistl
es
ret
loope
imul
pop
adc
add
push
arpl
jae
fldt
and
cmp
ret
cmp
dec
xor
popa
sbb
cmp
push
out
loope
insl
adc
dec
xor
sbbl
shrd
add
xchg
inc
sub
push
dec
inc
fldt
mov
add
inc
jle
sub
push
and
add
popa
mov
push
push
add
xchg
addr16
fldenv
sbb
xor
mov
pop
push
dec
lods
or
add
inc
cmp
scas
dec
or
addr16
jecxz
jbe
cs
push
push
mov
insb
pop
inc
inc
or
mov
adc
sub
sbb
add
adc
fldenv
sub
or
push
xor
sub
adc
xchg
mov
sbb
lods
lock
xchg
mov
and
lea
dec
mov
ret
push
mov
imul
sub
fcompl
adc
push
outsb
jne
adc
outsl
jne
sbb
push
imul
cmpl
lds
inc
inc
jb
out
jae
adc
and
cmovne
insl
jnp
rorb
jne
mov
jno
jbe
arpl
jo
inc
popa
arpl
gs
and
inc
pusha
adc
push
into
pop
jp
add
sub
mov
add
insl
sbb
xchg
or
lret
cmp
sbb
dec
jb
stc
jbe
div
xor
add
scas
add
pop
cmp
cltd
mov
add
mov
xchg
popa
cmpsl
fists
arpl
ficoms
sbb
or
or
add
add
add
fidivrl
sub
imul
rcr
jo
push
and
cmp
sarl
das
mov
ret
aas
xor
fistpl
inc
pop
push
add
loopew
jmp
testl
jge
out
bound
outsb
cwtl
in
lcall
leave
jbe
xchg
dec
add
jmp
outsl
jmp
push
push
push
adc
adc
push
pop
rorl
fs
jae
insl
add
xlat
xchg
pop
inc
aas
lds
lods
pop
jecxz
push
and
sbb
and
push
push
sub
adc
dec
xor
cwtl
mov
jne
and
add
sub
push
push
add
dec
push
dec
xchg
or
pop
je
sub
addr16
data16
lret
xlat
adc
rorl
icebp
or
pop
and
jne
push
cwtl
setl
mov
gs
lods
jne
ret
mov
jb
rclb
add
push
add
add
add
aas
int3
aas
call
out
xlat
add
and
cmp
pop
xor
xchg
xor
xor
and
inc
xor
xor
jg
call
call
adc
pop
xor
xchg
xor
xor
pushl
xor
sbb
xor
cmp
push
xor
ret
ss
pushl
push
ss
mov
ss
ss
movsl
ss
ss
ss
divl
pop
pushl
xor
cmp
ds
mov
cmpsb
aaa
shll
cmp
xchg
cmp
repnz
pop
cmp
cmp
cmp
cmp
cmp
cltd
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
inc
cmp
jbe
jnp
daa
jb,pt
mov
ds
ds
repz
or
sbb
sub
cmp
xchg
fwait
imul
push
lcall
xor
jle
mov
movsb
xor
xor
xor
xor
xor
mov
xor
mov
xor
xor
xor
xor
xor
out
jge
nop
xor
dec
ss
mov
in
std
add
xchg
or
ss
jmp
insl
xor
xor
xor
xor
xor
xor
xor
xor
xor
sbb
dec
adc
inc
push
lods
xor
pop
clc
shlb
sbb
xchg
ss
ss
imul
aaa
pushf
aaa
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
pop
cmp
cmpsb
cmp
adc
into
sbb
or
xchg
cmp
mov
sarl
adc
and
cmp
inc
ds
ds
ds
outsl
cmpl
ds
movsb
ds
sarb
fnstsw
loop
sbb
aas
push
aas
pop
aas
data16
insb
inc
mov
aas
movsb
aas
mov
aas
repz
cli
aas
enter
add
xor
xor
popf
inc
xor
xor
cld
fcomip
xor
mov
xor
xor
xor
inc
xor
repz
das
cld
pushl
test
mov
xor
xor
push
xor
xor
arpl
ljmp
sbb
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
jg
aaa
cld
xor
xor
xor
cwtl
xor
ja
xchg
aaa
movsb
std
jg
aaa
ljmp
cmp
cmp
cmp
cmp
pushl
cmp
cmp
cmp
cmp
test
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
xor
ja
cmp
jne
xchg
cmp
into
cmp
ljmp
ds
idivl
or
aas
push
aas
push
popf
aas
iret
aas
loopne
pop
rcr
hlt
lahf
xor
xor
xor
dec
xor
and
pushl
lret
sub
xor
aam
repz
xor
loope
clc
dec
xor
pusha
xor
in
xor
xor
xor
in
pushl
sbb
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
fldt
xor
xor
mov
add
push
ss
xchg
lcall
ss
ss
ss
xlat
aaa
and
sub
cltd
cmp
cmp
cmp
dec
cmp
fidivrl
in
in
cmp
cmp
cmp
and
sub
mov
ret
cmp
cmp
mov
icebp
cmp
cmp
cmp
cmp
sbb
out
clc
ljmp
cmp
dec
cmp
mov
sarb
inc
aas
fdivrs
mov
xchg
aas
xchg
sub
pause
dec
mov
or
adc
sbb
pop
sub
xor
cmp
push
xor
decl
mov
lahf
xor
xor
xor
xor
xor
xor
xor
dec
ljmp
xor
xor
jle
xchg
cmp
xor
mov
xor
xor
not
xor
xor
xor
xor
and
lahf
add
xorl
xor
xor
xor
xor
ret
decl
pop
xor
dec
xor
mov
idiv
pushl
xor
mov
test
les
fidivl
or
sub
push
aaa
pop
aaa
fs
push
cltd
call
aaa
mov
aaa
clc
aaa
or
sbb
jle
lea
xchg
cmp
movsb
cmp
dec
enter
in
dec
add
or
and
clc
cli
pushl
cmp
pop
cmp
jns
jle
test
mov
ljmp
loop
out
in
cmp
cmp
cmp
cmp
cmp
outsl
inc
cmp
jge
ljmp
mov
mov
pop
cmp
cmp
dec
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
out
clc
mov
cmp
dec
cmp
xchg
sbb
lods
cmp
fisttpll
sbb
sub
lods
inc
ds
jno,pt
test
cmpsl
ds
aas
leave
adc
sbb
and
jg
inc
sub
lods
push
aas
pop
aas
pop
aas
push
aas
mov
nop
aas
cwtl
sbb
mov
aas
mov
mov
shll
aas
loopne
in
mov
fbstp
ret
xor
lds
xor
push
xor
xor
pushl
cmpsl
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
ja
xor
sbb
and
fbstp
xor
jae
jns
xorl
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
adc
pop
xor
xor
sub
inc
xor
xor
and
inc
xor
pop
xor
fdivs
std
xor
sbb
adc
dec
xor
xor
push
lcall
xor
xor
xor
xor
xor
xor
xor
les
xor
xor
push
mov
xor
sub
jecxz
xor
dec
push
sbb
out
loopne
aaa
add
mov
cmp
cmp
cmp
rorl
mov
fisubrl
mov
cmp
push
cmp
cmp
cmp
cmp
cmp
cmpsb
push
decb
imul
jmp
dec
shl
cmp
test
iret
cmp
ds
fdivs
cmp
jb
jp
sbb
gs
ret
aas
sarb
aad
pop
loope
je
daa
jl
punpcklwd
xor
incl
xchg
sbb
jb
fdivl
jecxz
out
xor
xor
xor
pop
decl
xor
jne
mov
xor
xor
cmp
mov
xor
mov
xor
and
push
xor
xor
insb
xor
xor
inc
inc
inc
add
xor
xor
xor
xor
or
xor
push
add
call
lds
add
repz
sub
sarb
repz
sbb
mov
daa
nop
stos
mov
jb
mov
mov
push
cmpb
incl
and
sub
mov
sbbb
and
push
mov
inc
aaa
pop
js
add
cmp
jae
add
jb
stc
stos
and
add
add
and
cmp
fwait
push
push
add
jb
jb
inc
adc
and
and
and
sub
push
adc
pushl
cld
fcomp
data16
cmp
cmp
pop
push
cmp
add
xchg
mov
mov
push
aam
data16
cld
or
sbb
sub
mov
lcall
loopne
dec
shll
mov
insl
shll
add
add
or
scas
imul
pusha
dec
shll
xchg
sahf
test
dec
shll
jae
add
dec
scas
ja
mov
cmc
out
xor
dec
dec
inc
gs
jo
and
out
mov
rorw
or
pop
or
mov
les
dec
popa
jns
jne
jae
xor
pop
push
negl
shlb
js
or
adc
js
mov
dec
inc
dec
and
es
hlt
mov
and
inc
and
daa
and
scas
dec
xor
lods
nop
sub
sbb
add
sub
add
push
hlt
xchg
cmpsl
aad
push
pop
mov
fnstcw
lods
push
rep
or
mov
pop
aad
cmp
mov
cmp
inc
call
mov
xorb
int
or
or
adc
or
inc
sbb
inc
sbb
cmp
inc
xchg
push
jle
cwtl
sti
inc
sub
sbb
push
in
fiadds
dec
dec
fwait
popf
and
clc
adc
xchg
in
popa
data16
cwtl
in
cmpl
loope
sti
insb
outsb
hlt
and
jne
sbb
cmp
adc
mov
adc
mov
scas
mov
mov
out
xchg
sub
mov
lds
lock
xchg
int
mov
inc
cld
sub
daa
sub
xor
mov
pop
sarl
mov
and
popf
push
mov
dec
sbb
inc
pop
sbb
call
or
es
jnp,pt
out
dec
mov
and
fldenv
rolb
cmp
les
add
imul
push
fldcw
rolb
insl
mov
fs
mov
xchg
insb
insb
ret
mov
je
gs
xchg
popa
insb
insb
dec
dec
inc
sbb
arpl
jg
adc
or
push
icebp
mov
rorb
xchg
loopne
pop
xchg
movsl
mov
insl
insl
inc
cs
xchg
in
dec
dec
inc
insb
imul
sbbb
fwait
push
fsts
cmc
fsubl
inc
push
sub
aad
pop
push
jl
push
sub
mov
jbe
jle
lea
mov
vcvtsi2sdl
push
cmp
adc
sahf
andb
outsb
cmp
lcall
test
addr16
jle
xchg
out
sbb
and
push
xchg
jl
idivb
fcomps
lea
sub
add
xchg
leave
dec
sbb
xor
push
sub
jecxz
lds
push
nop
cmpb
syscall
outsb
incb
subb
sar
and
stos
or
or
or
testl
xor
sbb
push
add
or
sub
xorl
les
cmc
mov
and
pop
xor
fstps
movups
add
inc
mov
push
push
loope
fstl
std
push
pushf
cld
xchg
or
or
add
push
enter
adc
and
outsb
inc
js
inc
add
cmp
jl
icebp
adc
push
test
call
add
add
lods
repz
mov
push
loop
fcoms
leave
jne
ret
sti
jmp
add
lods
sub
mov
inc
mov
jb
mov
lret
popa
outsl
outsb
outsb
gs
lds
and
lock
shll
sbb
jb
popa
insl
jne
sub
lret
mov
push
js
pop
xchg
arpl
fs
mov
test
fnsave
movsb
aam
cmp
bound
adc
mov
je
mov
aad
dec
sahf
and
and
outsb
gs
insl
fs
fs
dec
adc
aam
or
xchg
popf
sbb
dec
or
incl
popa
aas
mov
std
enter
test
in
insb
lods
pop
std
mov
sub
or
into
jns
std
inc
std
dec
js
push
ja
ss
enter
ret
int3
sub
lcall
xor
jecxz
mov
fcmove
ficoms
sbb
testb
push
inc
sub
das
mov
dec
test
push
jnp
data16
add
shl
lods
enter
test
sbb
inc
jne
jp
jne
fcmovnb
adc
push
mov
les
popf
mov
jmp
sbb
add
push
decl
jne
lock
dec
cs
ja
and
call
jp
cmp
jnp
pop
push
push
jl
and
xchg
test
ds
or
and
mov
test
stos
mov
scas
mov
mov
pop
rorl
jb
fadds
pop
scas
bound
and
movsl
out
sahf
popf
sub
dec
je
test
test
pop
stos
std
stos
std
lods
std
pop
jb
fsubrs
int
sbb
mov
iret
shrb
push
inc
shll
jb
cs
inc
or
stos
pop
dec
cli
and
push
nop
cmp
add
xchg
mov
mov
mov
or
aad
lods
and
dec
rorb
lret
call
inc
mov
ret
or
ret
and
push
cltd
gs
cs
lret
mov
push
outsb
insb
popa
jne
sub
mov
arpl
jb
adc
gs
jne
sub
insb
addr16
int3
mov
lret
imul
mov
mov
cmp
jo
outsl
gs
xchg
sbbb
js
mov
popa
loopne
jg
xchg
je
and
add
stc
push
adc
stc
mov
or
lods
sbb
pop
xor
xlat
fadd
pop
shlb
test
cmp
jne
lea
test
sbb
add
mov
adc
inc
movl
andl
mov
data16
sbb
pop
or
push
xchg
cmpsb
pop
repz
mov
stos
mov
notl
into
xchg
mov
push
call
lahf
imul
adc
jne
push
jns
cs
and
dec
mov
test
jg
inc
scas
inc
out
pop
push
mov
push
aam
add
fsubrs
int3
idivb
nop
rorb
in
int
data16
sbb
repnz
xlat
out
andb
mov
inc
sub
dec
pop
add
push
push
sbb
jae
dec
adc
sbbb
pop
adcb
dec
sahf
loope
sub
push
push
lock
fildl
rcrb
push
fucom
je
daa
adc
add
imul
xor
pop
mov
pop
movl
insb
in
or
or
add
or
sub
push
dec
pop
pop
add
mov
add
adc
inc
shll
rolb
xor
sub
or
sahf
test
and
pop
and
and
and
inc
enter
and
cmp
pusha
push
push
add
dec
jb
mov
inc
and
add
jns
pmulhuw
xor
jb
dec
and
and
add
pmulhuw
stos
movsb
mov
and
loopne
dec
and
movsb
xchg
and
jo
inc
and
dec
and
pop
and
std
std
add
and
sub
push
and
xchg
sbb
std
test
dec
sahf
hlt
cld
xchg
test
and
leave
sub
or
incb
push
std
sbb
jae
xor
enter
and
in
jo
push
and
cmovo
or
inc
and
sub
js
andb
cmpb
and
fwait
xchg
mov
add
and
inc
sub
inc
add
and
cld
push
add
pop
pop
and
lret
decl
movsb
mov
fwait
iret
dec
adc
add
adc
and
xchg
xchg
sbb
adc
adc
stc
sbb
pop
cmp
dec
adc
adc
or
enter
rol
movb
xchg
outsl
dec
inc
inc
cwtl
pushf
add
aaa
add
push
jmp
test
xchg
insb
lcall
dec
sbb
fdivs
nop
scas
and
dec
push
cmp
mov
addb
popa
inc
fstpl
arpl
sbb
shll
sub
inc
adc
sub
test
and
sub
push
lea
xchg
adc
nop
sub
sub
jg
mov
jno
sub
adc
das
jns
aaa
inc
adc
mov
adc
mov
adc
xchg
sbb
sbb
sbb
jo
add
lcall
or
add
jb
and
and
inc
outsl
js
sub
push
outsl
xchg
pop
leave
push
push
xchg
cmp
push
push
je
lods
mov
push
add
insl
dec
jae
or
adc
sub
dec
mov
mov
gs
push
xchg
and
pop
and
lret
adcb
leave
inc
roll
mov
sub
dec
mov
sbbl
mov
add
mov
sbb
fsubrp
fs
inc
xor
or
fcmovne
and
es
stos
in
inc
xor
pusha
ret
cmp
cmp
push
cmp
push
ds
shll
sub
mov
dec
shll
pop
add
dec
xlat
test
lret
xchg
pop
fucomp
add
clc
dec
cmc
leave
add
or
inc
inc
jmp
add
pop
push
shrl
inc
adc
push
mov
movsl
or
or
adc
dec
sahf
cs
jg
loopne
mov
add
popa
int
call
mov
push
jne
cmpb
lods
popf
adc
test
and
aaa
adc
movsl
mov
dec
sub
adc
cmp
or
xor
pop
into
roll
dec
or
mov
xor
imul
insb
inc
call
jo
sbbl
push
nop
bound
add
sub
mov
test
mov
sub
adc
fcmovnbe
xor
aas
inc
imul
dec
outsl
sbb
daa
add
enter
loope
lcall
xor
pop
sbb
or
push
jb
add
xor
mov
pop
add
add
jae
push
out
dec
add
add
push
jo
in
imul
sbb
pop
or
test
push
scas
add
sbb
out
adc
xchg
mov
cmp
cmp
ficomps
jmp
jecxz
inc
and
insl
scas
insl
add
outsb
inc
jae
and
xor
jns
popa
and
fnsave
int3
sbb
push
addr16
xlat
jne
jg
inc
imul
mov
pop
gs
sub
mov
sub
add
push
jb
pop
mov
fnstenv
xor
mov
mov
sbb
insb
popf
xchg
pop
lahf
sti
bound
or
lds
popf
addr16
cmpb
cmp
sub
pop
xor
add
ret
sub
pusha
xchg
sbb
daa
dec
dec
xchg
insb
mov
imul
push
daa
jbe
mov
popa
arpl
fs
outsl
pcmpeqw
adc
jae
pop
xor
inc
push
fistpl
jb
iret
adc
mov
and
jne
jmp
xchg
fwait
and
repnz
mov
arpl
jg
pop
mov
add
and
xor
xchg
aad
pop
xor
xor
xor
xor
xor
xchg
arpl
xor
mov
mov
sbb
cmp
aaa
lcall
dec
xor
cmp
cmp
cmp
cmpb
cmp
ljmp
frstor
cmp
cmp
arpl
xchg
fwait
cmp
cmp
cmp
decb
cmc
add
jg
xchg
lahf
fisttps
pop
push
cmpb
aas
lahf
aas
movsl
aas
mov
fidivrl
inc
fst
aas
test
fwait
bound
jno
jp
mov
fwait
mov
jne
xor
ja
fwait
xor
xor
xor
jp
pushl
inc
xor
jne
lret
xor
xor
cmp
jg
fidivl
jne
test
xor
xor
mov
xchg
insb
pushl
cli
xor
sub
ss
hlt
fstl
ss
arpl
mov
hlt
inc
dec
aam
fimull
cs
xor
add
mov
inc
push
adc
pusha
add
add
outsl
dec
push
mov
and
or
daa
and
cmp
outsl
cwtl
or
test
and
adc
add
dec
add
dec
inc
add
and
add
test
push
pop
nop
mov
add
adc
dec
outsl
jbe
mov
pop
xor
add
adc
pushf
mov
pusha
add
sub
add
fsts
dec
add
push
and
adc
fs
sub
adc
add
mov
rclb
and
sub
add
add
bound
insb
dec
fwait
jnp
subb
inc
mov
and
xor
nop
cmpl
add
cmp
call
and
addb
add
add
fcmovne
push
add
and
jne
inc
loop
into
push
fs
push
fcmovnu
adc
nop
push
fistpl
ror
xor
add
dec
xchg
xchg
adcl
push
inc
cltd
jl
add
add
add
add
nop
add
add
add
add
add
add
inc
add
call
int
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
