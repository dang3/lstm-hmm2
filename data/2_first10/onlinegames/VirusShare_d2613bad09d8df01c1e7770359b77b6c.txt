out
call
in
sub
andb
push
push
push
push
xor
pop
lea
fcomi
stos
push
ljmp
pop
xor
jmp
mov
pop
ja
test
add
loop
mov
dec
gs
in
in
dec
mov
xor
cs
jbe
dec
mov
insb
jmp
mov
push
call
pop
mov
jg
mov
push
push
push
push
push
mov
push
push
call
mov
and
adc
clc
lea
push
add
in
and
call
jbe
adc
adc
pop
sbb
outsl
fisttps
pop
pop
pop
leave
ret
add
add
mov
mov
push
push
xchg
in
and
data16
jbe
pop
popf
fadd
add
in
mov
je
mov
lcall
push
or
mov
ror
jge
sti
daa
pop
inc
pop
inc
aaa
fsubr
mov
mov
jle
sub
lea
push
push
push
sbb
pop
dec
mov
or
xchg
daa
xor
clc
add
in
push
fists
push
rol
or
fxch
lock
add
push
pop
sbb
or
adc
movsb
mov
fdivr
cmp
lock
cmp
je
push
adc
clc
sbb
pop
or
inc
clc
cmp
or
push
lret
insl
or
push
xorb
je
lea
or
scas
dec
mov
pop
je
jbe
pop
out
cmp
pop
xor
or
shrb
adc
dec
mov
lods
lea
jo
push
push
scas
fildl
or
pop
or
mov
fstps
or
pop
test
cmp
adcl
add
adc
push
sub
mov
sbb
or
jno
sti
sti
int3
dec
inc
cmp
outsl
insl
out
pop
dec
mov
and
jbe
fldcw
push
mulb
divb
or
enter
cltd
add
add
fnstcw
cld
push
adc
xchg
icebp
add
popf
andl
leave
cmp
xchg
adc
enter
jnp
jb
jmp
and
or
mov
pop
jmp
lds
or
iret
push
jno
mov
jge
pusha
fdivr
fists
push
adc
push
mov
ror
mov
inc
inc
dec
dec
test
jne
push
in
cmp
pop
jmp
lds
rolb
popa
mov
sbb
mov
add
inc
cmpb
jg
cmp
je
add
and
pop
jecxz
or
clc
inc
and
ljmp
adc
adc
add
daa
push
jno
and
ljmp
fldt
mov
push
adc
or
add
decl
fisttps
inc
xor
lock
push
les
inc
mov
and
lods
jmp
or
mov
daa
test
pop
lods
add
xchg
addr16
pop
pop
pop
pusha
and
sbb
stc
cmp
in
lea
push
adcl
lea
add
sti
mov
add
sti
xchg
lea
sbb
adc
push
and
add
jnp
pop
add
xor
test
cmp
sub
pop
cmp
ret
push
push
sahf
mov
pop
les
xor
xor
lock
dec
sub
scas
pop
fldenv
xlat
push
xor
adc
sub
test
adc
sbb
pop
mov
in
ja
pop
pop
pop
lcall
mov
mov
inc
test
stc
sub
dec
push
inc
push
sub
imul
decl
js
clc
mov
enter
push
push
add
sub
andb
xor
cmpb
je
inc
push
jne
mov
or
sbb
sbb
test
jne
pop
xchg
pop
add
cs
rcll
lods
jmp
lcall
cld
push
pop
lcall
outsb
fsubs
add
je
popa
lcall
pop
add
pop
lcall
popw
fstps
jne
insb
inc
or
xchg
or
pop
test
inc
add
stos
xchg
and
mov
and
sub
les
push
cmp
cmp
add
dec
es
int
sbb
je
push
pusha
adc
pop
testl
and
sti
leave
std
mov
ret
sub
stos
push
mov
out
inc
fs
push
add
dec
stc
mov
mov
cmp
imul
add
or
push
mov
int3
inc
dec
sar
vzeroupper
flds
jb
daa
pushf
into
pop
iret
and
daa
addr16
roll
rorb
dec
ja
daa
aad
or
inc
cmp
jb
stc
rorb
adc
xchg
sub
mul
push
and
ss
rclb
or
add
ud2
jno
out
fldcw
and
imul
xchg
cmc
push
cmp
outsl
imull
lret
test
clc
je
jae
pop
sti
mov
mov
shl
xor
jnp
data16
or
push
xchg
dec
mov
pop
mov
addr16
hlt
xlat
xor
stos
push
cmp
adc
push
adc
scas
xor
lods
add
insb
ret
or
js
cmp
or
ljmp
fldt
inc
sbb
imul
imul
nop
addr16
push
push
xor
jl
push
jl
sti
shll
xor
sbb
push
jp
in
insb
xor
adc
fldl
jp
gs
in
outsb
xchg
or
jo
out
call
mov
jmp
cs
pop
jp
imul
out
pop
pop
lock
aas
push
add
cmc
and
inc
mov
or
sbb
xchg
ficoms
cmc
sbb
jp
int3
pop
mov
nop
sub
dec
je
adc
add
add
or
jo
pop
cli
aad
sbb
adc
sbb
int3
add
inc
fmuls
test
add
add
xor
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
add
xor
pop
mov
faddl
pop
add
xor
sbb
xor
inc
xor
shll
pop
outsb
sbbb
shl
lock
cli
xor
cmp
dec
dec
shll
mov
je
out
fiadds
rol
mov
stos
adc
push
outsl
mov
jmp
lahf
shrb
add
outsl
arpl
je
adc
out
cld
je
xor
cmp
inc
bound
push
jb
jbe
insb
gs
lcall
jae
gs
xor
pop
add
dec
inc
dec
dec
and
pushw
add
ljmp
popa
outsl
imul
fs
adc
adc
punpckhbw
data16
cmp
xor
pop
imul
insl
fs
lods
std
xchg
xchg
cmp
aaa
stos
lcall
fistl
sub
mov
fdivrl
mov
cmc
pop
add
add
inc
dec
dec
in
lret
cs
insb
dec
push
push
dec
inc
dec
inc
adc
shrb
enter
adc
mov
pop
add
or
add
add
dec
pop
nop
inc
nop
inc
xchg
int
mov
add
add
pop
mov
int
mov
decl
push
addr16
insl
and
outsb
outsb
outsl
je
bound
sar
sti
jb
outsb
and
inc
dec
push
and
fs
popa
pushl
clc
mov
jnp
in
cmp
add
je
in
std
enter
addr16
fs
cmp
arpl
sub
pop
fldenv
jb
push
jbe
cmp
push
imul
sbb
add
dec
adc
mov
das
fisttps
rolb
adc
add
roll
adc
outsl
ret
add
out
in
popw
or
and
xor
push
jbe
pop
push
mov
dec
dec
and
pop
dec
or
push
pop
add
in
std
jle
bound
pop
sub
xlat
push
fs
add
fs
je
cld
mov
ret
mov
adc
cs
push
push
pop
dec
dec
rorl
daa
add
arpl
xor
mov
dec
push
popf
std
out
pusha
jb
insb
outsl
arpl
sti
jo
sbb
xlat
daa
or
ret
in
rolb
mov
pop
stos
xchg
test
mov
add
add
ds
cwtl
cmpsb
push
hlt
ret
pop
insb
add
xchg
in
jecxz
cmp
dec
add
cmpsb
imul
insb
lcall
ds
shll
pop
outsb
jl
shll
sub
faddl
in
sarl
cmp
and
xor
shll
push
mov
stos
mov
imul
pop
negl
add
hlt
fsubp
imul
insl
lcall
negl
pop
and
add
xor
dec
xlat
xor
rcll
push
fnstenv
or
add
in
lcall
bound
imul
imul
addr16
out
in
ss
add
shll
cmpsb
add
loop
fadd
add
xor
mov
sahf
inc
pop
xor
cs
or
add
and
enter
dec
lods
xchg
ret
out
add
incl
push
adc
je
jb
gs
stc
fs
subl
adc
bswap
std
push
gs
fs
sub
dec
jo
outsb
push
jb
inc
stc
or
leave
dec
dec
dec
dec
inc
push
orl
les
data16
loopne
ja
bound
dec
inc
push
push
inc
push
inc
pop
dec
adc
jb
or
je
push
imul
pop
inc
jne
mov
insl
imul
outsl
outsb
sbb
rorl
cmpsl
push
inc
dec
xchg
or
inc
add
add
or
and
lahf
out
into
ficoms
and
lcall
negl
push
pop
pop
add
inc
add
add
and
add
cmp
or
xchg
add
sub
add
mov
cwtl
pop
aas
mov
aas
add
pop
and
rorl
incl
and
add
sbb
xchg
dec
xchg
add
sub
enter
pop
imul
sbb
add
inc
xchg
ret
dec
int3
addb
fwait
data16
xor
xchg
xor
adc
paddusw
mov
or
add
ja
jae
push
mov
arpl
je
jne
jb
gs
sbb
cmpsb
jmp
js
push
sub
add
fdivr
jg
push
inc
jb
push
and
ja
or
push
mov
jae
pop
and
addr16
xor
push
lcall
cwtl
add
inc
jb
cmp
inc
aas
enter
call
push
rolb
call
scas
fdivrs
dec
lahf
or
or
lcall
pushl
arpl
push
add
fiadds
je
sbb
adcb
push
push
adc
and
lahf
mov
pushl
aaa
dec
push
lea
mov
mov
inc
ja
jne
cmp
sub
insl
outsl
je
ja
jns
mov
cmp
outsl
je
jbe
in
fcomip
das
add
imul
jl
or
lock
in
pop
add
xor
mov
mov
jae
scas
and
inc
aam
sub
push
add
das
jne
cmp
arpl
popa
insl
gs
cs
loopne
outsl
jb
inc
popa
jb
pop
pop
push
ret
inc
jo
jo
imul
fwait
or
adc
jae
jae
insb
jae
or
stos
mov
nop
jmp
int
ret
cld
mov
xlat
movsl
mov
or
mov
jae
and
mov
mov
mov
std
iret
and
setne
movzbl
push
push
or
push
push
sbb
int3
push
push
pop
add
xchg
pop
arpl
mov
es
mov
add
inc
sub
or
push
stos
and
push
push
add
imul
test
jne
lea
int3
int3
stos
dec
or
push
adc
and
shr
or
lds
push
sbb
or
push
lea
and
xchg
sbb
and
or
sbb
nop
out
push
js
xchg
mov
movsb
sbb
outsl
les
add
rorb
fs
lcall
fcomps
call
dec
xor
xchg
ljmp
jl
sbb
jno
test
js
lea
cmp
mov
sbb
sar
popa
sub
xor
cmp
mov
add
ljmp
pop
out
out
out
fcmovnu
mov
and
sub
addl
xorb
dec
iret
imul
push
repz
push
je
frstor
mov
adc
add
ljmp
adc
mov
pop
mov
pop
mov
sub
jecxz
and
jecxz
arpl
mov
sub
fcmovnu
loope
mov
sbb
popf
and
addr16
fldcw
mov
roll
mov
mov
leave
mov
daa
jo
mov
cmp
adc
std
loope
mov
andl
push
mov
mov
mov
mov
push
sbb
jae
xchg
outsb
adc
cmp
sbbl
mov
repz
in
mov
add
adc
jb
mov
and
fstps
fs
sbb
mov
out
fistl
mov
dec
mov
subl
push
cmpl
je
dec
add
jnp
clc
int3
ja
pop
adc
stos
add
popa
inc
add
sbb
cmp
mov
mov
es
fs
into
sbb
mov
testl
repz
daa
stc
mov
dec
jge
mov
mov
movl
insl
add
push
sbb
out
div
push
jg
mov
popl
mov
mov
popf
popf
cmp
xchg
fsubs
add
dec
mov
jg
int3
cmp
ja
idivl
popl
mov
arpl
mov
mov
ret
fistl
out
ss
inc
sbb
out
inc
arpl
jo
adc
dec
ja
imul
dec
ret
inc
fstpt
ret
or
out
loope
scas
add
sub
ret
sti
daa
xor
mov
popa
mov
xor
in
cmp
negl
lods
push
jns
fists
arpl
sbb
inc
mov
cmp
and
jecxz
ss
jl
fistpl
cmp
loope
xorl
mov
repz
lahf
xor
jne
mov
pop
movsb
and
xchg
and
fucom
in
aad
in
push
pop
mov
mov
add
dec
and
test
mov
inc
sti
hlt
jmp
out
scas
push
lods
mov
or
inc
dec
push
add
sbb
mov
jo
pushf
scas
sti
daa
xorl
pop
xchg
scas
iretw
daa
es
jle
sub
sbb
std
ljmp
adc
fistps
pusha
lret
and
jge
xchg
insb
out
sub
and
addb
lcall
add
jnp
out
js
cmpsl
std
dec
cmp
addr16
mov
or
cmp
fisttpll
cmp
fs
sarb
daa
bound
add
loope
add
cmp
sbb
jp
sbb
mov
adc
adc
leave
aaa
in
mov
cld
jnp
loopne
into
js
ret
dec
popf
inc
aas
mov
fs
jge
inc
in
and
pop
pop
pop
popa
sbb
fstpt
mov
adc
and
sub
inc
outsb
push
and
fwait
push
jb
je
jo
sbb
push
test
pusha
fs
and
mov
pusha
pushf
arpl
pop
stc
cs
xchg
mov
call
mov
pusha
jo
in
push
cld
call
mov
insl
call
add
insl
stc
or
outsl
ljmp
xor
pushf
mov
pushf
dec
adc
shr
call
stc
fucomip
call
add
fs
pushl
popf
or
lea
mov
pusha
ror
jmp
jo
sbb
and
arpl
ds
xchg
jno
dec
scas
sub
aaa
movsl
ret
into
mov
jmp
mov
stos
pop
xor
fistpll
xor
xor
mov
mov
mov
outsl
hlt
jg
jmp
fidivl
adc
rol
fcmove
in
jmp
stos
rol
out
leave
idiv
call
mov
int3
lods
ret
fadd
jmp
loope
mov
mov
add
push
arpl
mov
pop
mov
test
xchg
mov
lret
andl
insb
pop
or
dec
mov
push
andl
mov
adc
test
aas
lods
add
mov
pop
push
ds
inc
dec
shll
aad
jns
in
and
push
mov
sarb
stc
ljmp
xchg
ficompl
sbb
pushf
fstpl
push
add
pop
cld
push
mov
push
orb
loopne
mov
sbb
mov
push
push
mov
gs
inc
loopne
push
mov
push
mov
push
mov
mov
push
add
inc
or
jmp
mov
push
push
push
call
in
add
dec
pop
ljmp
jmp
out
in
divb
sub
sub
inc
add
sti
push
push
outsb
pop
inc
add
imul
dec
in
pop
stos
mov
push
pop
add
add
mov
lock
add
push
pop
mov
adc
or
xor
out
add
or
sti
mov
test
mov
call
lea
and
lcall
push
ret
lock
int
test
cs
pop
dec
clc
insl
pop
ljmp
andb
inc
or
push
fwait
in
push
aas
test
pop
lahf
adc
mov
mov
test
nop
and
xor
add
xchg
dec
cmp
and
divb
ds
mov
jmp
push
sub
sub
int3
push
jge
rclb
mov
add
insb
xchg
repz
sub
fisttpll
mov
xor
pusha
sbb
cmpb
jne
ret
cmpw
jne
dec
cmp
lret
mov
jne
mov
jge
scas
and
sub
and
pusha
xor
addb
repz
repnz
adc
into
int
mov
push
mov
je
or
nop
sti
in
rdpmc
cmp
je
mov
cmp
je
or
divl
mov
je
cmp
ja
jge
add
or
jae
lods
lods
cmc
mov
adc
cmp
ljmp
ret
adc
push
sub
sub
add
je
rcll
mov
mov
fidivl
fdivrp
lea
or
xor
jmp
xchg
push
arpl
jo
cwtl
jmp
or
notl
add
mov
mov
fadds
add
jge
push
push
push
sbb
sbb
pop
insl
pop
jb
push
push
push
and
pop
push
test
ret
fmull
pop
mov
call
push
or
js
xchg
pop
sub
jge
testl
jge
movsl
add
mov
mov
movsl
movsb
mov
fisttpl
arpl
pop
mov
lock
jb
fisttpl
push
xchg
dec
dec
mov
or
or
enter
mov
std
enter
pop
mov
dec
loopne
loopne
out
xor
add
cmp
not
jle
push
outsl
ljmp
xchg
int3
outsl
fiaddl
ret
xor
xor
inc
cmp
or
sbb
jmp
add
lds
addb
pop
rolb
daa
js
and
je
and
xchg
mov
xchg
add
mov
and
shlb
lahf
mov
and
xor
pop
inc
add
test
and
inc
ds
pop
xorb
adc
adc
stc
cmpl
and
add
ficoml
xchg
pop
popa
add
xchg
xor
adc
out
notb
and
adc
cwtl
int3
data16
cmp
adc
das
rorb
sub
mov
jbe
mov
movsb
cmp
push
pop
jmp
adc
mov
mov
adc
rcrl
pusha
inc
jle
repz
in
xchg
scas
mov
mov
xchg
sub
icebp
std
lock
jb
lock
lods
adc
cwtl
int3
sbb
cmp
xor
and
mov
push
or
into
mov
xorb
sbb
cli
inc
in
daa
jle
clc
popf
or
add
xor
repnz
push
jae
cmc
data16
dec
mov
arpl
pop
clc
mov
daa
pop
outsl
and
cli
push
cs
mov
xor
fs
insb
std
lret
xchg
cmp
dec
push
je
fstps
xor
jnp
int3
cmp
cli
call
mov
xlat
and
pop
inc
iret
iret
or
mov
das
cmp
jle
push
cmp
jle
mov
dec
sbb
add
mov
cmp
ja
mov
or
or
cmp
je
test
cmp
movsb
mov
incl
push
inc
hlt
mov
push
in
jne
cmpl
daa
test
sbb
mov
cmp
pop
xor
mov
repz
jg
add
popa
hlt
add
rcrl
jl
inc
cmp
mov
in
bound
leave
xchg
cltd
jmp
xor
fnsave
mov
andl
fcomi
nop
nopl
or
cld
nop
test
and
enter
xchg
imul
adc
pxor
and
lea
push
fwait
inc
xor
out
sbb
and
pop
cli
mov
fildl
ja
jne
data16
or
xor
cli
shlb
jbe
sbb
xchg
mov
out
or
ret
xchg
jo
jg
arpl
shlb
mov
add
aaa
ret
add
push
into
dec
enter
push
cmp
cs
das
xchg
je
and
jl
nop
enter
movsb
je
push
jmp
adc
sub
movb
jmp
add
sbb
call
jecxz
or
xchg
mov
lods
mov
stc
adc
jg
sbb
xor
inc
jmp
andb
mov
jmp
xor
jmp
push
xchg
cmp
xchg
pop
enter
and
aam
and
xchg
je
adc
adc
adc
cmp
adc
call
es
add
sti
xor
adc
decl
stc
push
xor
adc
adc
adc
cwtl
into
frstor
fistpl
adc
jmp
fisubs
mov
or
test
xor
and
or
ja
xor
mov
xchg
ss
jo
add
jl
cmp
jb
incl
push
shrl
or
incb
and
andl
push
or
inc
sub
mov
imul
adc
and
xor
sbb
add
mov
pop
loopne
adc
pop
lea
sbb
loopne
cmp
jae
incl
lret
shr
add
mov
leave
addl
or
jg
push
sbb
mov
dec
push
pop
jne
adc
sub
repz
outsl
ljmp
mov
add
loop
or
adc
mov
mov
xchg
add
jne
xor
mov
movsb
pop
mov
leave
mov
insl
mov
bound
push
xchg
pop
jbe
sti
pop
cwtl
cmp
mov
not
and
push
jl
push
jl
and
or
add
lea
mov
shr
mov
add
push
std
in
outsl
mov
and
testl
mov
imul
ret
test
push
js
add
push
outsb
not
mov
or
fisubs
fimull
add
repnz
lea
shr
shl
push
pop
inc
mov
pop
sub
mov
and
not
cmp
add
int
psllq
mov
mov
jmp
shr
or
add
dec
daa
pop
jg
push
fildll
xchg
sbb
mov
push
lods
loop
mov
das
cli
mov
push
push
loope
fcomip
shlb
push
outsb
movsl
inc
add
shlb
insb
in
pop
adc
movb
jecxz
sbbb
in
fiaddl
fisubs
or
mov
adc
or
scas
roll
mov
pop
mov
sbb
pop
test
jle
int3
xor
add
add
mov
xor
add
sbb
in
popf
adc
jne
les
repz
pop
fidivs
out
fcomp
cwtl
subb
addl
repz
imull
pop
rcr
das
pusha
adc
into
das
das
pop
scas
testl
ret
repz
cmpsb
pop
les
subb
add
push
lcall
movups
test
sub
sub
fcom
add
or
fdivrs
dec
push
xlat
mov
outsl
mov
adc
cmp
stc
xor
or
or
lock
fcoml
lods
es
fisttpl
and
fidivrs
cmp
enter
das
push
mov
cmpsb
loopne
sti
loope
mov
xor
sbb
and
xchg
or
sti
jnp
or
popa
adc
add
or
mov
mov
gs
and
aad
ret
mov
and
sbb
add
shlb
clc
jg
jge
in
xchg
out
dec
cmp
inc
rclb
push
fadds
test
lcall
jb
sub
mov
pop
es
adc
repnz
adc
inc
shll
and
stos
mov
enter
fldz
call
insl
fwait
aaa
pop
imul
das
call
out
loop
xlat
lods
mov
sbb
push
adc
add
rorb
in
sub
outsl
aam
and
clc
cmp
jae
cmpsl
pop
jge
cli
fnstcw
ds
jg
or
add
xchg
dec
stos
mov
mov
mov
pop
jl
out
loope
out
sbb
loopne
ret
jnp
sti
repnz
enter
aaa
or
mov
push
aam
je
fbstp
lcall
xchg
inc
mov
fidivrl
or
idivl
call
inc
loop
shr
or
js
or
mov
add
mov
jns
sbb
jns
push
aam
mov
jge
out
daa
push
and
sub
inc
mov
mov
outsl
adc
jecxz
test
fisttps
repnz
adc
or
xor
or
shrb
pusha
sbb
outsb
lods
pop
add
test
xor
mov
cld
xchg
cmpb
divb
adc
lock
pop
js
lds
popa
popf
insl
fsubrl
jns
adc
xor
mov
repnz
insb
and
or
in
mov
fstp
divl
mov
inc
inc
ljmp
repnz
sbb
xchg
mov
iret
fimuls
cltd
jb
repz
in
xchg
mov
int3
pop
pusha
dec
mov
out
jno
cli
xor
jge
rorb
mov
loope
sub
or
mov
jle
sub
jl
aam
out
testl
mov
xor
imul
out
aaa
sub
mov
addr16
xor
mov
test
out
aam
xchg
jae
adc
mov
xor
mov
add
or
mov
jbe
push
aas
sbb
cmp
rcl
mov
out
jbe
les
in
mov
cmp
pop
ss
in
clc
jl
pop
je
sub
pushl
or
jge
clc
cmp
lods
les
xor
mov
mov
insb
sbb
stos
mov
stos
rcrb
sbb
pop
das
stc
push
or
in
sbb
jl
mov
mov
push
xchg
ljmp
inc
push
or
test
jle
mov
stc
cmpsl
and
mov
hlt
cmp
push
xchg
or
mov
xor
cmp
pop
pop
gs
sbb
rcrl
mov
outsl
xchg
int3
or
push
or
mov
sbb
jge
out
call
unpckhps
sbb
jns
in
rcrl
test
sub
sbb
dec
xor
call
scas
dec
jle
outsl
jecxz
jp
sbb
int
dec
fldt
mov
sbb
out
jecxz
jp
ret
std
pop
xchg
mov
add
jbe
ja
mov
aaa
xchg
sti
jp
jle
test
sbb
ja
mov
xor
jb
shll
fiaddl
xchg
out
aam
rcl
sub
pslld
ret
icebp
fwait
sub
xchg
roll
imul
mov
pop
jge
aad
sub
push
add
movsb
mov
lret
or
or
jg
nop
mov
push
mov
or
push
mov
dec
cld
sbbb
sarl
pop
sub
push
push
push
rep
ljmp
sub
outsb
jmp
push
insb
js
fs
xlat
adc
adc
hlt
pop
fisubrl
jle
jno
inc
clc
mov
pop
pop
inc
test
nop
iret
pop
pop
mov
mov
in
sti
push
ror
or
add
sbb
rcrb
jne
and
push
insl
adc
movsl
pop
sbb
push
cmp
jecxz
jne
ljmp
cmp
je
sbb
in
mov
cmp
je
movsbl
add
sub
jne
inc
cmp
jne
cmp
shr
push
add
sub
shrb
pop
push
dec
adc
mov
pop
xor
leave
lret
dec
ret
cmp
mov
stos
or
or
into
sub
neg
sbb
push
xchg
mov
ret
fstpl
mov
jl
add
jg
shlb
idivl
adc
inc
cmp
shll
add
out
iret
pusha
test
pop
mov
andb
addb
xchg
jmp
lret
or
aas
sub
fiaddl
jecxz
mov
sbb
rcrb
lock
and
rep
pop
pop
loopne
mov
jg
sub
jne
push
lea
mov
push
ret
dec
sbb
mov
mov
in
clc
call
xor
pop
int
fcoml
adc
mov
cmp
jbe
lea
pushl
in
in
or
clc
fdivl
dec
cmp
xor
jb
jmp
imul
lea
or
call
cs
pop
in
pushf
loopne
push
xor
mov
add
test
push
loopne
pop
int3
into
xchg
xchg
insl
rolb
aam
idivb
add
cmp
add
imul
into
add
or
call
ds
addr16
gs
das
lock
jo
pop
lock
repz
gs
repnz
insb
or
pushf
or
mov
je
decl
add
inc
mov
jnp
and
add
mov
lods
sub
adc
mov
jo
ss
mov
roll
negl
push
pop
mov
call
xor
ljmp
ds
fcomi
in
push
push
movb
in
dec
out
push
out
push
fdivrs
pop
lock
icebp
inc
repnz
mov
mov
shrl
xor
inc
inc
mov
push
mov
add
les
aam
pop
push
mov
hlt
dec
jae
jnp
in
add
add
and
or
push
sub
pushf
dec
es
xchg
mov
jge
sub
sbb
inc
push
stc
adc
loop
ret
add
les
stc
sti
clc
fsubrl
adc
xchg
je
adc
or
popf
lock
das
sub
jbe
cld
or
xor
cmp
sbb
stos
adc
out
sub
push
movhps
mov
leave
push
sbb
and
ret
test
pop
les
mov
repz
adc
ljmp
or
xor
mov
test
mov
imul
jae
sub
sbb
jbe
es
out
sbb
insl
mov
out
add
jle
lock
hlt
fistl
shlb
data16
push
pop
mov
sub
adc
jp
and
inc
inc
inc
lahf
cli
hlt
mov
mov
jb
pop
shrl
and
xor
add
mov
repnz
lcall
or
cltd
in
jg
push
andw
mov
fstl
push
dec
cld
pop
jb
rcrl
bound
mov
pop
adc
cmp
mov
mul
pop
out
subb
cmp
je
dec
dec
clc
lods
jae
pop
cmp
pop
push
arpl
pop
shll
das
fsubrl
xchg
push
aam
loope
seto
or
enter
sbb
sarb
mov
cwtl
cmp
jnp
xchg
movl
das
mov
or
adc
add
xchg
jb
adc
push
adc
out
addb
cld
or
or
lea
cmp
clc
add
push
call
test
mov
jae
aaa
mov
inc
push
pop
cld
call
or
jmp
dec
or
punpcklbw
fists
push
jo
xorb
dec
xor
call
mov
xor
or
inc
dec
sbb
push
xchg
test
lret
or
push
je
js
insl
js
cmp
dec
xorb
or
inc
add
movq
jne
push
and
shld
mov
mov
fdivrl
pop
clc
stos
les
jbe
pop
stos
int3
enter
mov
daa
inc
adc
jae
xchg
pusha
arpl
cwtl
loopne
cmp
mov
jae
data16
fdiv
push
sub
das
cmp
fsubr
cmp
rcr
mov
jl
xor
jmp
mov
outsl
mov
jle
test
xchg
mov
je
in
mov
scas
scas
stc
inc
inc
mov
std
xchg
in
add
sbb
push
nop
mov
ss
jb
loopne
test
adc
sbb
add
rolb
adc
gs
dec
mov
push
in
in
xchg
add
mov
ffreep
into
cmpb
mov
call
push
ja
test
dec
add
or
pop
sub
adc
test
sti
sub
mov
sbb
jg
std
or
divb
add
xor
jle
lret
jno
clc
cmp
and
sbb
mov
or
addr16
sbb
decl
ja
jge
int3
cmp
mov
mov
test
fistl
jne
or
mov
jae
cmp
je
push
ljmp
je
xchg
data16
add
sbb
outsl
and
in
sbb
pop
sbb
pop
call
add
sub
pop
mov
fcoml
mov
dec
inc
sar
mov
jmp
xor
cs
cmpsl
idiv
add
and
xchg
adc
jmp
dec
test
mov
pop
push
out
fcomi
sbb
mov
test
je
mov
lods
pop
sub
pop
adc
pusha
stos
arpl
or
decl
cmp
and
leave
lods
lods
push
mov
mov
mov
mov
pop
cs
lret
mov
mov
mov
mov
mov
jbe
jb
mov
mov
sub
mov
rcrb
xchg
fcmovnbe
js
shlb
insb
aam
aad
insb
mov
fsubrs
and
fcmovbe
insb
xchg
insl
fsub
dec
test
loop
mov
popa
pop
in
push
out
dec
out
dec
pop
jmp
insl
jae
dec
shll
popa
imul
sub
insb
xchg
fldt
rol
add
xor
in
lcall
sbb
cmp
lcall
push
xchg
xchg
mov
cmpsb
cwtl
cltd
lcall
fnstenv
popf
jnp
mov
mov
fwait
in
inc
mov
cmpsb
xor
insb
test
push
test
xlat
xor
ds
hlt
cli
jns
orl
mov
imul
shl
lret
mov
add
popf
and
js
add
ret
pop
aaa
xor
lret
mov
mov
jmp
in
data16
idivb
in
push
dec
cmpsb
xchg
arpl
aaa
or
pop
dec
rcrb
adc
xchg
divb
adc
xchg
rol
shrl
mov
pop
fisttps
lea
int
sbbl
jge
sti
push
adc
cs
shl
and
imul
shll
pop
cli
inc
and
jb
ret
sbb
daa
aaa
insl
lds
inc
sub
divb
scas
nop
jmp
aaa
sbb
sbb
punpcklwd
nop
sbb
mov
pop
sub
aas
mov
nop
arpl
mov
gs
or
or
rcrl
andb
add
loope
push
fisubs
mov
daa
mov
xchg
adc
adc
hlt
jb
sub
sbb
popf
jecxz
jl
fdivrs
dec
or
or
push
daa
lock
fistl
sarb
lret
int
mov
mov
pop
and
or
cmp
les
mov
out
daa
add
bswap
pop
sbbl
orb
negl
loope
xor
add
icebp
imul
aam
fs
mov
imul
mov
add
pushf
shrl
add
adc
sub
lock
ljmp
inc
pop
dec
imul
scas
add
cmp
call
ds
int
mov
nop
dec
push
sbb
xor
fimuls
imul
push
frstor
adc
in
xchg
stos
push
addr16
pop
fisttpll
push
inc
jns
lods
mov
mov
add
cmp
push
call
dec
lock
test
cmpl
or
shr
cli
fbld
mov
sub
in
movl
in
std
fs
cmp
sbb
push
push
xchg
cmp
xor
xchg
add
xchg
pop
sti
mov
push
cld
mov
cmp
mov
in
mov
xchg
jae
mov
fsubrs
js
jne
loopne
inc
push
pushf
cld
popa
xor
scas
or
adc
sbb
add
sub
cmpsl
xor
pop
or
xchg
insl
adc
push
push
mov
adc
cwtl
adc
jmp
and
jo
sub
call
jmp
pop
loope
add
scas
fs
inc
mov
xchg
dec
inc
cmp
out
sar
in
andl
call
or
lret
fcmovnu
sub
sti
cs
pavgb
dec
mov
ficompl
ret
mov
xchg
call
pusha
mov
icebp
andb
xchg
pop
int3
dec
imul
jp
imul
insb
popa
push
dec
push
insl
mov
lcall
fidivl
aaa
fdivs
fildl
fstp
jae
fbstp
dec
shrl
xor
xor
int
sbbl
sti
cld
imul
std
insl
lcall
mov
cmpsb
imul
ss
shll
mov
lcall
pop
pop
pop
movsb
imul
fldt
lret
in
out
mov
xchg
je
push
xor
cmpsb
jmp
xchg
icebp
shll
repnz
mov
cli
mov
or
out
daa
xor
cmp
addr16
ficoms
sbb
dec
fsubrl
lea
cmp
push
cmp
pop
fstpl
hlt
add
dec
mov
sbb
xor
sbb
or
fsubs
push
pop
pop
loopne
mov
sub
out
add
cli
not
dec
shll
outsb
je
dec
shll
imul
cs
outsl
out
ja
jne
repnz
rorl
repz
xor
fs
and
add
insb
je
lock
and
pop
push
add
push
or
sarl
push
clc
sahf
fsubrl
rolb
sub
push
fsubrl
sbb
stc
push
push
aam
cld
shrb
loope
dec
inc
adc
pop
add
popa
mov
mov
mov
inc
repnz
js
fstps
mov
cmp
xor
push
or
xor
push
fsubrp
mov
addl
mov
movsb
xor
xchg
clc
leave
insb
jg
lock
jge
cmp
and
push
inc
adc
jl
push
lret
fiadds
xchg
repnz
fnstenv
hlt
in
sahf
test
fisubl
sub
fstpt
fsts
push
adc
dec
in
push
or
xchg
xor
lds
push
and
and
jnp
or
test
dec
jmp
es
hlt
xor
xchg
or
hlt
cld
inc
jno
scas
leave
inc
cmc
cmp
sbb
cs
push
pop
out
je
jecxz
sbb
mov
hlt
add
in
push
popa
push
xor
rol
repz
bt
dec
and
mov
movw
pusha
add
outsl
shlb
and
mov
pushf
pusha
mov
pushf
movb
sti
insl
add
adc
jmp
enter
pusha
adc
cmpb
mov
push
movsl
movsb
mov
or
cmp
cmc
push
pushf
pushl
mov
push
sti
lods
je
pushf
mov
mov
in
aam
mov
sahf
sub
push
mov
jbe
sbb
negb
pushf
add
sub
push
rol
movsbw
xor
out
sbb
jne
jmp
or
push
pop
push
insb
lcall
lds
leave
adc
mov
js
cmp
arpl
pop
call
pop
pushf
xchg
bound
pusha
or
aas
and
out
adc
mov
int
pause
sti
aas
sub
adc
xchg
aas
mov
sbb
lods
into
call
iret
add
in
mov
jge
sbb
push
je
fidivl
sbb
mov
jns
cmp
subl
sub
lods
jmp
aas
popa
pop
pop
cs
lret
lcall
es
mov
lcall
mov
int
movsl
cmpsb
cmpsl
test
mov
stos
stos
lods
lods
pop
scas
insl
lcall
mov
jb
xor
mov
mov
mov
mov
mov
fs
xor
jb
bound
imul
mov
xchg
fcmovne
je
leave
outsb
lret
imul
bound
and
cmpsb
imul
cmpsb
imul
fs
xchg
or
jo
lcall
jmp
mov
arpl
in
popa
in
out
sbb
and
pop
fs
rcrl
and
shll
cmp
rorl
xchg
call
shll
incb
std
inc
xchg
mov
outsl
int
push
iret
fstps
adcb
jnp
xor
xor
stos
inc
rolb
add
fs
inc
outsb
out
xchg
push
adc
push
rolb
nop
mov
js
push
mov
or
or
adc
cmp
ss
je
insb
add
cmp
arpl
adc
or
jno
popa
sti
pop
cmp
or
aam
add
adc
or
call
mov
pop
fnstcw
pop
adc
cmp
sbb
jo
push
hlt
sarl
pop
je
mov
push
jp
inc
sbb
test
push
push
cld
es
pop
cmp
and
ja
adc
into
in
add
push
mov
iret
jle
jge
push
inc
push
call
mov
pop
push
pop
cmp
je
or
cld
and
and
inc
std
clc
std
cmp
enter
cld
mov
adc
sbb
je
out
sahf
and
insb
sbbb
test
inc
cmp
jo
ss
inc
inc
cmp
sub
or
pop
push
adc
xchg
dec
mov
or
dec
add
lret
cmp
mov
sbb
jo
adcl
cmp
inc
mov
mov
fsts
loop
cmp
cmpb
mov
add
into
jnp
add
sbb
sub
push
xchg
push
add
adc
pop
xor
jae
ret
add
pusha
pop
inc
aad
dec
arpl
mov
push
ficompl
std
sar
imul
adc
iret
fsubs
xchg
jmp
push
sbb
sahf
mov
inc
cmp
loope
push
jmp
adc
les
inc
loop
stos
dec
and
add
xor
imul
sbb
adc
pop
add
jne
jns
jecxz
sub
mov
hlt
hlt
test
out
hlt
push
es
and
inc
adc
inc
add
aas
inc
clc
outsb
mov
andb
mov
dec
js
and
shll
xchg
iret
mov
icebp
in
and
insl
fcomps
xor
aaa
add
loope
add
adc
mov
or
test
inc
add
movsb
mov
xchg
std
dec
mov
addr16
xchg
je
cltd
loopne
jl
xor
sub
adc
sub
imul
add
fists
jp
pop
sub
mov
aam
rcr
in
imul
xchg
test
xchg
cmpsb
lods
gs
mov
mov
aad
mov
popf
and
adc
jle
fnsave
call
sub
pop
test
jge
ljmp
mov
fidivrs
fcmove
push
mov
iret
inc
mov
push
data16
pop
mov
or
jg
sbbb
clc
mov
cmpl
inc
add
divl
clc
sbb
cmc
jge
arpl
cmp
add
rorl
sti
sbb
pushf
xor
jne
push
inc
scas
mov
lock
ds
jae
jnp
cmpsb
or
xor
pop
dec
add
pop
jns
hlt
test
and
outsb
sbb
xchg
je
pop
sbb
loope
mov
arpl
xchg
loopne
adc
fadds
insl
int3
push
sbb
js
cs
jne
adc
push
adc
imul
gs
mov
and
call
stc
adc
ljmp
inc
inc
inc
outsl
outsb
insl
addr16
jl
inc
jb
xor
xor
or
std
cs
gs
js
jb
pop
add
jb
lcall
fldenv
int3
rolb
pop
in
mov
sbbb
inc
mov
repnz
jp
mov
adc
je
lock
jmp
push
addr16
xchg
outsb
clc
mov
data16
scas
dec
rsm
pop
pop
ret
add
add
dec
jle
shufps
ljmp
and
lahf
pop
enter
and
hlt
xor
adc
mov
adc
push
stos
call
cmp
idivb
stc
mov
cmp
or
pop
adc
add
pop
subb
nop
push
inc
sbb
sbb
mov
je
test
or
pop
pop
hlt
pop
adcb
pop
call
mov
dec
push
dec
fdivrs
fidivs
dec
mov
arpl
cmp
out
sub
les
or
xchg
xchg
or
and
push
xor
scas
inc
add
rcll
add
add
pop
push
into
add
testl
adc
cmp
push
cmp
inc
into
ret
sarl
int
xchg
aas
in
lds
jo
cmc
dec
sub
or
add
rcl
fmuls
gs
fsub
call
pop
es
mov
test
int3
mov
inc
inc
sbb
mov
add
sub
inc
cmovne
push
lods
aaa
ret
xchg
pop
adc
cmp
arpl
inc
aaa
mov
mov
adc
mov
inc
popa
push
movsb
pop
adc
jl
mov
or
add
mov
int3
jle
xchg
mov
movsl
and
mov
fs
add
fldl
sub
and
push
sub
add
dec
lock
fnsave
sbb
push
lods
inc
inc
mov
dec
adc
mov
add
or
push
sub
pop
xor
or
fistl
mov
or
dec
dec
dec
shll
push
cs
add
shll
xchg
gs
imul
frstor
repnz
xchg
or
dec
outsb
je
int
pop
gs
jb
mov
data16
movsb
push
movsl
cmpsb
pop
cmpsl
push
gs
mov
stos
stos
push
lods
lods
mov
lret
push
aad
je
jo
mov
lret
dec
jo
outsb
push
or
mov
shll
jne
int
in
mov
inc
inc
aam
mov
mov
aam
imul
out
mov
pushf
js
xchg
xchg
xchg
mov
ss
xchg
xchg
xchg
inc
push
cwtl
js
dec
shll
lcall
dec
shll
fstl
fnstsw
cmp
xlat
xor
roll
jecxz
in
shll
mov
mov
jmp
insl
mov
lgs
inc
jbe
shrl
mov
inc
mov
pop
mov
sbb
les
lods
mov
xchg
xchg
xchg
movsb
fdivs
test
mov
clc
jl
subl
std
cld
cld
adc
add
lcall
les
xchg
pushf
add
cmp
seta
imul
xor
rcrb
dec
inc
test
mov
cmpsb
mov
pop
test
pop
inc
stc
mov
das
mov
jp
scas
ja
sti
je
push
adc
adc
bound
mov
jecxz
inc
mov
push
mov
sub
or
dec
mov
or
jnp
pusha
sbb
sbb
ja
push
mov
jo
or
pop
pop
push
sahf
popa
fmuls
sub
or
add
and
mov
jne
push
jmp
shr
outsb
push
inc
mov
negb
test
cmp
jge
push
aas
push
lsl
imul
enter
jge
xlat
or
add
cmpl
add
out
push
out
lock
jl
mov
mov
add
sbb
test
call
and
and
pop
pop
pop
hlt
je
push
sahf
mov
xchg
cmp
aad
std
lds
fimuls
xchg
pop
ss
in
mov
and
or
iret
cmp
cmp
lock
push
mov
jge
fs
je
call
andb
je
popf
aaa
cmc
inc
in
push
inc
adc
and
lock
out
mov
cmp
sbb
ds
divb
pop
jecxz
cs
je
pushf
xor
popa
jmp
jmp
call
inc
sub
ret
push
jae
dec
adc
pop
xchg
mov
mov
fwait
pop
pop
add
inc
mov
add
xor
xorb
add
lods
xor
je
insb
jae
sahf
outsl
jns
pop
or
sub
dec
pop
sub
aam
add
push
xchg
test
repnz
fwait
add
je
sbb
lods
adc
or
jle
adc
or
pop
jg
jnp
push
iret
repz
push
adc
sub
xor
push
jmp
aas
adc
add
xchg
inc
shr
in
inc
cld
test
andb
inc
addr16
fistpll
jp
lret
mov
lds
popa
arpl
lret
mov
outsl
outsb
cmp
shll
arpl
jne
and
jae
inc
call
sarb
jmp
mov
sub
fnstenv
addr16
mov
test
scas
push
push
rorl
push
lods
dec
dec
xor
fsts
stos
xchg
out
and
dec
mulb
or
jg
jl
sahf
add
je
je
pop
xchg
ss
test
paddb
push
pop
adc
jge
push
das
cs
repnz
les
dec
add
mov
dec
clc
jge
mov
add
bsr
push
sub
bound
or
aaa
js
cld
movsl
insb
push
mov
stos
clc
push
mov
mov
outsb
movsl
fwait
and
sbb
push
push
cwtl
add
jae
push
cmc
mov
xor
and
xlat
push
adc
rolb
and
mov
or
sbb
push
cmpsl
push
xor
pop
lods
or
add
dec
xor
aas
popa
arpl
mov
lret
je
outsl
outsb
cmp
sub
gs
xor
shll
es
add
xor
and
pop
add
pop
mov
xor
ret
push
cmpsb
imul
push
imul
imul
pop
xchg
aas
popa
arpl
fs
xchg
outsb
cmp
dec
mov
xchg
jb
loop
jecxz
in
push
shll
out
imul
xor
sub
outsb
sbb
cmpsb
imul
lcall
outsb
cmpsb
imul
fistpl
dec
je
add
push
in
ss
jmp
or
jmp
mov
addb
movsb
std
adc
and
push
add
mov
je
push
push
push
call
test
stc
xor
popf
fdivrl
stos
enter
gs
mov
pop
inc
pop
mov
sbb
mov
pop
fsubrl
addr16
jb
dec
rcll
sub
stc
cli
sti
je
pop
cld
lock
sbb
sbb
fstps
mov
push
pop
push
mov
scas
es
mov
cs
dec
or
sub
pusha
xchg
sub
mov
sbb
lcall
inc
faddl
stc
sbb
xchg
clc
aad
cmp
or
outsb
mov
mov
fcompl
push
incl
pop
add
mov
dec
cld
fst
call
push
push
mov
jle
lret
enter
jmp
mov
mov
pusha
add
shlb
fildl
cli
ffree
cmp
xor
pop
jmp
call
xlat
std
add
fmuls
call
rcrb
sbb
lods
cmp
lahf
xchg
push
ret
mov
ja
fldl
and
std
jg
leave
and
std
cld
in
or
in
and
mov
imul
jns
jb
add
cmpsb
outsl
imul
shrl
sarl
sub
mov
loopne
in
repz
mov
dec
push
adc
aam
ds
mov
inc
cmp
jae
xor
cmpsb
fsubr
and
bound
push
cltd
mov
inc
inc
je
pop
or
push
rcrb
lea
movb
sti
aaa
mov
add
loope
add
ret
cmp
iret
mov
cli
ror
and
mov
test
shlb
push
inc
mov
inc
jmp
subl
jp
adc
shr
imul
push
dec
and
xorl
test
sbb
and
fwait
cmp
add
xchg
add
push
mov
arpl
mov
and
and
and
mov
inc
mov
test
iret
xlat
inc
mov
adc
lret
mov
inc
andb
sbb
inc
jg
xchg
ficoms
scas
mov
outsl
mov
jecxz
jg
and
out
push
hlt
in
loopne
clc
pop
adc
outsl
sti
mov
dec
cmp
or
pop
mov
inc
lea
jmp
and
and
inc
es
and
push
sub
pop
jle
jl
ljmp
xchg
rcrb
test
iret
sub
test
jle
mov
sbb
shll
or
in
add
dec
std
js
add
push
jo
clc
inc
rorb
call
sbb
ljmp
inc
mov
lret
fldenv
pop
pop
sub
and
in
test
dec
and
aas
and
sub
fwait
push
pop
cmp
sti
test
mov
jecxz
sub
arpl
pop
mov
cmp
mov
fdivrl
test
cmp
and
js
mov
jge
xchg
add
inc
mov
pop
aad
mov
imul
repz
sub
clc
pop
sub
cmp
jle
jmp
inc
push
mov
int
push
sbb
jo
push
jbe
cmp
push
push
push
or
call
in
cmp
pop
mov
dec
cmp
mov
sbb
mov
test
mov
jbe
das
pop
addb
test
cmpsb
in
xor
mov
in
ret
in
cmc
iret
dec
or
inc
dec
lcall
test
daa
inc
cmp
sbb
imul
into
call
lods
push
dec
andl
push
mov
sahf
and
mov
inc
mov
adc
jl
inc
sub
xor
pop
cmp
jb
testl
jbe
fcompl
outsl
inc
mov
fmul
pop
inc
mov
or
mov
rolb
or
mov
dec
lock
div
push
push
cmp
pop
jp
and
push
xor
hlt
pop
rolb
cmp
fldl
mov
sbb
cmpl
cmp
xor
pop
and
cmpsb
pusha
cltd
adc
xor
fcoms
and
xchg
mov
lock
mov
inc
je
or
xor
add
pop
ret
fdivr
jbe
mov
mov
push
jbe
pop
mov
inc
cmp
jb
pop
bound
add
movsl
ljmp
mov
push
and
xor
cmpsb
imul
or
sbb
shll
jbe
gs
int
dec
jbe
outsl
insl
jne
out
mov
inc
mov
push
call
fidivrl
jp
je
push
push
call
lods
mov
int3
fldcw
test
mov
xor
adc
mov
cmpb
push
and
and
or
in
pop
les
pop
push
dec
sub
adc
fimuls
lock
jb
inc
aad
push
mov
test
scas
jae
addr16
push
aaa
mov
dec
xchg
add
sbb
frstor
and
pop
xchg
out
mov
jne
push
fldcw
test
push
sbb
add
enter
sbb
pop
enter
add
into
mov
xchg
sub
jge
or
enter
add
push
push
int
mov
cld
test
xor
mov
lahf
and
dec
icebp
rorb
xchg
ljmp
in
jl
push
fldenv
inc
movzbl
dec
idivl
push
pop
clc
div
cmp
pop
out
test
shl
andb
je
adc
stos
sbb
dec
jecxz
adcl
jmp
mov
push
hlt
frstor
jo
insb
jo
cmpsb
imul
or
je
lcall
jo
cmpsb
imul
sub
lret
lods
jmp
ljmp
add
cltd
loope
cwtl
xchg
lds
orl
xchg
and
dec
xor
dec
xlat
outsl
jne
cltd
sub
fildll
dec
push
dec
inc
xchg
enter
xchg
xchg
inc
shr
push
xor
jae
sbb
jno
sbb
mov
test
xchg
aad
inc
and
pop
out
lret
movsl
sub
enter
rolb
mov
inc
jo
xor
sbb
js
mov
push
sahf
push
hlt
mov
int
mov
jle
push
xor
mov
mov
cmp
jbe
pop
dec
fsts
leave
lock
adc
je
out
int3
pop
pop
stos
sub
jbe
xchg
dec
pop
scas
arpl
jnp
lea
orb
and
mov
or
sbb
outsb
scas
in
adc
or
js
xor
and
xor
adc
clc
add
xchg
mov
inc
pop
push
outsl
pop
xchg
gs
je
popa
jb
gs
xchg
gs
dec
imul
outsl
jae
data16
fs
cs
push
outsl
ja
lcall
gs
xchg
add
dec
lret
outsl
push
gs
xchg
mov
dec
xchg
gs
xchg
push
dec
inc
popa
arpl
in
dec
in
sbb
inc
xchg
adc
outsl
xchg
int
data16
in
orps
cwtl
or
mov
pusha
xor
xor
add
adc
jl
push
xor
cs
xor
fxch
inc
das
cltd
mov
mov
dec
pusha
mov
fimull
adc
outsb
push
shll
mov
mov
imul
dec
mov
push
fcmovu
add
lcall
mov
or
add
cmp
fisubl
pop
inc
sub
rolb
dec
or
add
add
loopne
mov
sub
jecxz,pt
lahf
xadd
das
in
and
cld
out
js
je
out
lahf
stos
add
mov
or
add
enter
jae
add
add
dec
mov
jb
std
push
std
pop
std
or
out
insb
in
and
and
xchg
imul
dec
xchg
imul
daa
dec
into
into
into
pop
sub
sub
sub
dec
dec
dec
sub
outsl
outsb
mov
inc
addr16
mov
push
imul
sbb
outsl
xchg
movsl
cmp
inc
adc
dec
pop
mov
stos
jae
insl
mov
bound
sub
mov
popa
jns
xor
jb
jb
data16
aaa
popf
popl
or
orb
jbe
ret
xchg
xchg
into
jb
jbe
mov
mov
mov
mov
in
insb
in
mov
scas
out
in
mov
popa
cmp
rcrb
popf
ret
repnz
lds
sbbl
adc
and
insb
std
in
in
in
sub
in
in
out
movsl
cmp
jecxz
and
xor
sub
xchg
xchg
xchg
ljmp
xchg
xchg
out
out
lock
adc
ds
adc
adc
add
mov
xlat
loope
in
hlt
je
pop
fldcw
incb
daa
dec
jae
and
imul
je
outsb
and
daa
daa
daa
sub
sub
push
int
aaa
test
pushf
pushf
pushf
popf
inc
cmp
into
push
pushf
inc
and
outsb
pusha
fstps
inc
and
pop
bound
arpl
jb
gs
adc
popf
push
addr16
push
mov
xchg
sbb
decb
or
mov
xchg
test
xchg
xchg
mov
pushf
pushf
xor
mov
adc
test
inc
mov
xchg
ja
xor
in
cmpsb
cmpsl
ds
sbb
shlb
fstp
fld
sti
les
jbe
xor
mov
jbe
jbe
loope
int3
adc
xor
jb
into
mov
rcl
jno
push
pusha
in
ljmp
push
loope
addr16
dec
data16
jae
push
out
daa
daa
daa
out
jmp
and
cmp
ljmp
mov
sahf
mulb
add
jmp
enter
or
or
or
and
or
call
das
jmp
push
insl
idiv
js
dec
aaa
je
and
ss
je
sub
daa
daa
daa
sub
xor
adc
ja
into
push
sti
sti
jg
push
rcrb
pop
pop
pop
pushfw
sub
leave
pop
pop
mov
int
shlb
pusha
pop
popa
leave
rorb
arpl
jecxz
gs
jmpw
addr16
push
imul
mov
insb
insl
fildll
outsl
cmp
cmp
jo
jno
jb
jae
jo
xor
cltd
je
jne
leave
rcrb
js
dec
jns
pushf
sub
jp
push
jnp
jns
push
cmp
jle
jg
subb
imul
xchg
pop
adc
cs
hlt
test
shl
test
out
repz
testb
test
stc
aam
sar
enter
sbb
clc
dec
mov
xlat
fcmovu
lahf
pop
in
sbb
add
cli
fdivr
popa
je
jle
mov
jns
out
outsl
push
movl
repz
push
sbb
push
sbb
aaa
and
cli
mov
in
shll
fiadds
sbb
jge
fcompl
mov
pop
mov
dec
inc
adc
adc
in
movaps
mov
ds
mov
push
push
rcrl
out
or
push
or
pop
ss
outsl
fs
xchg
gs
xchg
jne
fs
popf
insb
inc
pop
insb
imul
mull
ja
cli
sti
or
push
sar
std
add
jmp
sbb
jecxz
add
inc
imul
pop
jae
jae
inc
xor
fcomp
mov
imul
shll
lret
int3
int
mov
sbb
mov
jne
lret
push
shlb
outsb
pop
sbbl
mov
xchg
outsl
addr16
insl
dec
add
pop
popa
popa
lea
gs
xchg
gs
fs
push
cltd
or
outsb
cmc
shll
mov
dec
mov
xor
shll
xchg
xchg
xchg
xchg
shll
lcall
popf
sahf
lahf
xor
mov
mov
pop
mov
jns
iret
xchg
shl
adc
testl
cmp
out
testb
cmp
add
clc
out
testl
sub
fsubs
and
jle
sbb
pinsrw
mov
push
jne
js
insb
cmpsl
test
icebp
or
sahf
or
or
lock
or
pop
out
dec
std
popf
frstor
adc
insb
enter
mov
or
jno
xor
ss
jnp
cmp
fiadds
push
outsl
rcll
lea
cs
add
pop
xchg
dec
fistl
sub
addl
ja
sbb
push
jnp
test
push
add
xchg
jp
and
cld
jae
ds
adc
cld
hlt
cld
stc
std
fsts
in
std
icebp
sti
pop
lock
pop
jo
xor
cltd
in
cmc
or
or
fldenv
mov
adc
into
cmpsb
cmp
int3
lods
xchg
lods
fadd
cmp
mov
lret
mov
pop
inc
xchg
fsubl
mov
add
fimull
push
lea
mov
push
cmp
push
pop
pushf
mov
mov
lock
mov
or
pop
push
push
lods
xchg
sub
xchg
adc
rorl
loope
inc
shrl
pop
sub
xor
inc
xchg
xchg
gs
xor
or
lea
les
gs
adcb
inc
gs
inc
outsl
insb
jb
dec
xchg
test
popa
insl
jecxz
and
inc
push
in
dec
or
dec
push
stos
sub
cwtl
popl
dec
pop
sbbl
sub
inc
pop
push
jns
je
mov
lret
gs
pop
imul
test
das
call
sbb
xorl
loope
loopne
pcmpeqd
mov
mov
jl
pop
push
or
mov
cwtl
push
rep
sti
mov
or
sbb
mov
lret
lret
mov
cld
cmp
movsl
mov
in
lret
mov
xchg
popf
movsb
aaa
xchg
jecxz
push
insb
push
add
movb
fcmovu
cld
faddl
push
fnsave
mov
jb
outsl
fistpll
xor
push
mov
cmp
xor
inc
or
xor
call
mov
add
arpl
shl
cmp
cld
pop
push
xor
xor
xor
into
push
push
popa
lcall
inc
push
sub
pop
cs
or
into
push
sbb
xchg
int
addr16
ss
cmp
jns
jp
push
movsw
pop
mov
gs
sbb
xchg
jg
roll
xchg
imul
leave
insl
lret
fxch
imulb
ja
and
into
arpl
cmp
cmp
rcl
lcall
cwtl
xor
sbb
sbb
sbb
sbb
in
lods
inc
sbb
sbb
out
imul
sbb
ja
sub
fnstenv
insl
inc
outsb
adc
outsl
leave
rcrb
insb
jns
mov
into
leave
jae
pop
ja
mov
jbe
adc
sbb
fxch
rorb
mov
fnstcw
and
mov
ret
enter
pop
cmp
outsl
jo
pop
push
addr16
dec
or
or
mov
push
push
movsb
and
xchg
gs
leave
leave
leave
outsb
fs
jb
popa
gs
dec
dec
mov
int
hlt
adc
jge
inc
outsl
ja
dec
shll
add
pusha
mov
push
aam
inc
jle
sub
lods
mov
pop
jae
and
idiv
fs
lea
cli
push
call
inc
mov
cltd
and
insb
and
daa
icebp
mov
leave
getsec
cmpsl
mov
rcrl
cmpl
psrld
push
pop
jmp
push
roll
dec
and
push
sarb
mov
jl
dec
cmpb
add
into
pop
ljmp
test
push
int
roll
push
sbb
fstps
les
pop
addr16
xchg
xchg
shll
xor
xor
mov
xor
scas
add
and
in
inc
push
rorb
int3
stc
xor
sarb
movsb
imul
xchg
push
xor
add
sub
decb
xchg
xchg
xchg
movsl
insb
jmp
in
into
adc
ds
mov
and
push
shlb
xor
je
outsl
aam
sbb
sbb
pop
stc
xlat
stc
fdivr
outsb
xchg
and
stc
push
cmp
dec
xor
testl
clc
leave
clc
and
jns
fdivr
aam
addl
sti
fsincos
mov
es
push
je
repnz
lds
popf
addr16
push
add
ds
imulb
mov
and
neg
sbb
push
sbb
pushf
pop
xor
and
test
test
adc
idivb
imul
lods
and
or
insb
dec
ss
mov
mov
mov
xchg
jmpw
mov
jb
popa
mov
ja
mov
in
mov
out
fs
lahf
mov
xchg
mov
jmp
cmpsb
nop
das
imul
in
fs
xchg
aad
or
in
in
xchg
pop
xchg
dec
xchg
cwtl
adc
lcall
or
sub
xchg
out
in
mov
mov
mov
mov
fwait
dec
les
jl
enter
fdivr
pop
repnz
cli
int3
fsub
cmpl
fldenv
mov
pushf
jb
adc
mov
mov
pop
xor
into
into
ret
pop
mul
pop
jmp
mov
repz
sbb
inc
shl
inc
ljmp
jl
dec
jge
push
pop
idiv
cmp
mov
inc
call
hlt
daa
daa
daa
pop
or
daa
daa
daa
daa
dec
dec
dec
dec
and
daa
daa
push
push
push
cmp
daa
daa
daa
cmp
daa
daa
daa
inc
inc
inc
inc
daa
and
daa
inc
inc
xor
daa
daa
daa
daa
xor
xor
daa
addr16
daa
ss
push
cmp
je
daa
daa
cmp
je
jns
jb
mov
jbe
ja
jbe
jb
jns
jnp
pop
jb
jb
jge
jg
pushf
jo
xor
push
push
pushf
pushf
pushf
pushf
pop
pop
pop
pop
pushf
pushf
pushf
popf
pop
pop
pop
pop
pop
pushf
pushf
mov
daa
daa
daa
adc
push
daa
daa
imul
daa
daa
daa
outsl
jo
divb
iret
xchg
je
imul
clc
adc
dec
inc
inc
fisubl
jno
add
incl
inc
xor
daa
mov
or
xlat
sbb
sub
or
add
pop
call
sub
lret
adc
or
rcl
out
xlat
jmp
mov
ret
lods
add
js
je
inc
shrl
bnd
jns
add
cmp
jo
stos
fs
orl
mov
rolb
repnz
add
push
or
adc
mov
inc
mov
pop
jb
pop
je
ret
sbbb
push
mov
mov
mov
mov
xchg
cmp
sarb
mov
cmp
rorl
pop
add
cmp
sbb
or
cld
add
bound
dec
sbb
push
sub
inc
popf
add
fst
out
push
jo
cs
adc
sti
mov
jmp
pop
shll
add
cld
popf
mov
inc
outsb
pop
adc
or
int3
add
pop
mov
mov
push
gs
xchg
gs
das
das
push
jns
jne
imul
gs
cmp
cmp
bound
arpl
cmp
xchg
gs
mov
xor
xor
jae
aaa
sbb
jo
das
pushf
sub
jne
dec
leave
xchg
pushf
push
and
mov
pop
call
mov
push
sarb
fisttpl
addb
out
mov
es
sub
shrl
dec
mov
int
mov
hlt
sub
mov
dec
insl
push
sub
mov
cs
call
lret
jp
pop
push
push
xor
and
jb
push
mov
enter
or
pop
or
and
stc
inc
pop
je
pop
cmp
sbb
outsl
adc
enter
lret
pop
xchg
sarl
cmp
fldl
jbe
mov
jmp
or
ja
sub
lea
jecxz
rcrb
and
mov
aam
lea
mov
cmp
enter
sbb
mov
jl
jl
mov
fmul
in
jae
jge
mov
add
pop
push
repz
sbb
into
and
fwait
dec
stc
or
orb
rcrb
add
or
lret
or
xchg
push
fmul
pop
dec
jbe
and
xor
add
and
insb
clc
push
push
push
mov
pop
mov
pop
or
enter
push
jno
test
enter
jg
or
leave
xchg
test
pushf
sbb
lret
xor
xchg
outsl
mov
int
addr16
arpl
pusha
push
aam
addr16
cmp
push
fsubs
and
cwtl
cmp
push
mov
sbb
sbb
push
xor
std
cmpsb
dec
mov
int3
andl
lahf
pop
cmpb
clc
push
push
pop
lea
test
push
es
mov
or
fsubr
aaa
out
pusha
mov
add
idiv
cmp
jbe
add
xor
sub
mov
fcmovnb
ds
add
test
and
push
inc
imul
add
jne
push
adc
pusha
iret
ffree
shr
scas
or
int
or
cmp
and
xor
les
aas
mul
inc
push
pop
icebp
stc
adc
movb
mov
sbb
xor
push
add
xor
sbb
pop
push
pusha
push
push
xchg
nop
mov
push
shll
ds
outsb
dec
gs
jmp
add
mov
inc
adc
push
pop
ja
cmpl
insb
ficompl
mov
sub
out
inc
or
sbb
and
mov
leave
pushl
cmpl
or
pop
insb
hlt
adc
rol
mov
cmp
jne
ss
pop
test
arpl
jo
scas
ficoml
mov
mov
add
adc
mov
cmp
or
sbb
lcall
xchg
dec
mov
insb
mov
daa
sbb
movsl
je
dec
test
add
pop
es
mov
mov
test
mov
mov
mov
and
push
mov
add
sbb
push
push
xor
inc
pop
in
inc
inc
mov
repnz
popa
jne
fisttpll
clc
out
sub
jl
mov
xor
in
ja
orl
enter
mov
inc
add
or
or
mov
es
fnsave
mov
jmp
mov
outsb
jl
mov
icebp
adc
aam
push
pop
xor
push
fnstcw
outsb
sub
adc
pop
mov
aam
xchg
pop
and
xor
cmp
sbb
ja
sbb
jne
adc
pop
or
lea
call
lock
xchg
rcr
sbb
push
adc
pop
cmp
jb
insb
push
std
lods
test
jbe
movsbl
pop
mov
cmp
cmp
jb
push
mov
and
sbb
sbb
add
imul
jmp
sub
repz
adc
pop
sbb
dec
push
mov
add
sbb
ret
pop
xchg
mov
enter
add
xor
mov
pushf
sub
nopl
jecxz
dec
mov
lods
nop
push
push
pop
jne
aam
add
push
cwtl
adc
xchg
or
int3
out
adc
xor
inc
xor
jmp
or
sbb
scas
and
xchg
adc
lahf
sbb
mov
sbb
cs
adc
addr16
stos
es
and
movsl
xchg
mov
jae
clc
xchg
dec
push
jb
movsb
or
fisttpll
push
cmpl
fcompl
adc
cmp
xchg
inc
xor
mov
pop
xchg
repz
inc
nop
movsl
ja
or
int
bound
pop
push
jmp
cwtl
in
adc
push
into
xchg
inc
push
enter
or
sbb
ljmp
repz
cmp
test
mov
adcl
xor
add
cmpsb
inc
mov
push
mov
jb
push
lods
adc
test
je
add
push
mov
pop
push
sub
push
cs
sub
sub
mov
cmp
push
push
call
jae
mov
outsl
push
push
sbb
and
data16
mov
rorl
emms
sbb
inc
loop
xchg
jmp
cmp
std
insb
jmp
movsb
pushf
push
lret
push
daa
pop
out
fs
sbb
out
or
add
or
dec
movsb
add
pop
subl
mov
mov
jne
adc
lock
mov
rcrl
lret
mov
push
xchg
xor
in
push
add
iret
push
les
mov
jmp
loop
pop
push
pusha
mov
movsl
scas
cmp
fcomps
adc
push
and
lock
sbb
mov
sbb
sbb
cmp
and
js
fists
jbe
mov
ja
or
fsts
jp
xor
movsb
or
dec
pop
sbb
pop
insb
nop
fsubs
mov
addl
push
mov
adc
pop
add
js
inc
and
xor
sub
inc
push
mov
jae
dec
int3
sbb
ja
fcmovnb
pop
and
or
push
mov
loopne
adc
push
jbe
cmpb
jne
cmpb
xchg
flds
inc
pusha
mov
and
or
insl
subb
push
inc
push
or
ss
pusha
test
inc
sbb
or
repz
or
add
mov
lods
lea
sbb
jno
cmpl
add
cmpl
dec
push
adc
ss
test
mov
cmp
jb
lahf
mov
insb
add
jo
add
cmpl
sti
push
push
orl
push
xlat
in
push
fs
or
sbbl
or
fisttps
push
inc
mov
sbb
mov
cltd
sub
movsb
dec
and
ficomps
dec
or
shll
add
ret
mov
add
jmp
cmc
jae
dec
imul
mov
rclb
pop
dec
adc
mov
jno
add
add
sti
lods
mov
pop
add
andl
or
jmp
mov
outsl
movzwl
mov
jne
daa
add
mov
push
inc
or
sarb
or
insb
add
jmp
ud1
data16
lock
not
push
sub
pop
push
pop
or
ss
mov
mov
int3
outsb
adc
pop
sub
mov
add
inc
sbb
add
jmp
and
push
cmp
mov
repz
adc
jle
out
sbb
dec
je
adc
insl
sub
scas
add
mov
sbb
and
mov
incb
pushl
add
push
scas
push
xor
or
sub
loopne
push
loope
mov
adc
push
ds
jecxz
sbb
xor
test
lea
sbb
or
lds
mov
addl
inc
lahf
aaa
jne
rorb
pushf
movsb
orb
push
jns
cld
insl
lret
mov
mov
adc
xor
andb
cltd
cld
shlb
inc
comiss
subl
xchg
aas
mov
mov
jecxz
sbb
and
inc
cmp
adc
out
testb
je
pop
inc
sub
aaa
inc
shr
or
add
gs
shlb
add
xchg
sub
or
or
enter
push
adc
mov
add
repz
xchg
sbb
stos
sub
into
movsb
push
sub
mov
scas
aad
sbb
orb
adc
pop
jne
int3
sub
lret
leave
mov
gs
outsl
daa
lret
mov
fs
jb
js
mov
sub
sbbb
lret
pushl
popf
icebp
popa
das
inc
or
call
cmp
enter
mov
mov
or
push
xlat
mov
incl
je
addl
jae
call
dec
adc
xchg
jl
mov
add
push
xor
push
mov
mov
xchg
and
push
xor
and
mov
cwtl
mov
cmpl
jg
ja
cwtl
adc
lods
int
test
lods
jmp
adcl
stos
inc
addl
aad
cmpsb
add
call
es
jne
or
sbb
sbb
jecxz
cmp
adc
js
adc
sub
push
lea
in
out
push
push
call
push
das
mov
jge
imull
mov
or
ret
mov
and
push
dec
push
arpl
pop
inc
outsb
fmuls
adc
fwait
cmp
jbe
loope
pop
inc
lods
or
ja
bound
popf
push
and
mov
fisubrl
pop
mov
scas
jmp
mov
or
mov
aad
mov
sbb
je
xlat
push
push
mov
daa
xor
and
fisttpll
mov
jle
add
add
mov
jbe
or
mov
xchg
mov
fwait
insb
out
adc
add
bnd
outsb
call
lods
push
push
jge
sbb
jbe
xor
push
shll
mov
js
or
arpl
arpl
mov
std
and
pop
xor
sbb
sbb
arpl
sbb
sbb
imul
sbb
mov
dec
aas
lea
sub
jae
addr16
nop
jns
outsl
jne
popf
popa
jo
add
mov
data16
js
adc
xor
into
mov
lret
xor
jns
inc
fnsave
test
fs
fdivr
ret
sub
repnz
pushf
inc
rclb
sub
add
mov
addb
ret
and
push
xlat
xchg
pop
popa
mov
test
pusha
cmc
push
mov
mov
inc
andb
sbb
mov
call
inc
add
xor
lcall
mov
ja
add
fstpt
pop
sbb
xor
cmp
mov
into
loopne
sub
inc
xor
dec
aad
leave
mov
adc
gs
cwtl
sub
lds
jb
adc
loop
in
andb
pop
data16
add
shlb
sahf
or
stc
insl
xorb
adc
imul
fs
sbb
and
popa
sub
cwtl
sub
push
jle
adc
stos
xor
imul
icebp
add
pop
mov
push
sbb
pop
mov
and
sbb
sti
or
inc
push
addr16
sub
mov
lret
mov
outsb
pop
test
add
inc
mov
rcrb
mov
cwtl
lcall
jmp
insl
pause
xchg
mov
shrb
push
cltd
adc
fmuls
xor
or
inc
pop
and
sbb
sbb
cwtl
int3
add
fmul
xchg
adc
xor
enter
fsub
jl
arpl
sub
add
xor
stc
jl
inc
xor
push
xor
xchg
adc
out
xor
jge
lret
mov
or
in
adc
push
fmuls
incb
cmp
loop
inc
dec
out
mov
fisttpl
mov
push
jl
pop
sub
adc
sub
xor
out
add
dec
xlat
sbb
push
jno
or
and
jg
inc
sub
mov
jo
gs
dec
fs
pop
adc
gs
outsl
outsl
insb
push
gs
jo
xor
popa
jo
push
add
jb
jne
insb
cs
mov
insl
and
mov
sub
jo
adc
pop
inc
insb
cmp
in
sub
inc
dec
gs
xchg
unpckhps
in
inc
dec
jae
arpl
subb
push
imul
add
inc
mov
fs
adc
mov
dec
outsl
popa
fs
imul
jg
int
fwait
sub
push
jb
inc
in
adc
inc
push
insl
rorl
je
inc
jns
add
or
popa
packssdw
and
mov
jb
adc
mov
dec
into
add
or
mov
inc
sub
ja
cmp
outsl
jb
outsb
and
push
push
mov
gs
outsl
outsb
push
pop
jae
xor
dec
sbb
push
adcb
test
inc
push
jae
out
pusha
push
sub
add
mov
push
sub
push
push
push
pop
cmp
outsl
inc
cmp
pop
imul
andb
arpl
or
pcmpeqb
and
fxch
and
ret
filds
add
sub
pop
mov
sbb
push
gs
je
mov
jmp
adc
mov
hlt
sub
outsl
jbe
imul
rorl
or
inc
jo
sub
add
xchg
sub
mov
adc
imul
lgs
xchg
cmp
outsl
imul
mov
sbb
jne
adc
mov
jns
andl
ret
xchg
cmp
xchg
xor
dec
pop
lods
inc
add
jns
mov
cmp
arpl
jne
xchg
es
inc
mov
lock
jbe
xchg
jmpw
inc
ret
es
imul
add
sbb
adc
js
sbb
test
test
push
imulb
in
lcall
add
add
inc
ret
pop
test
adc
incb
ret
add
arpl
cmp
and
jmp
fs
inc
mov
lret
pop
dec
inc
push
dec
inc
jbe
mov
lods
add
jae
data16
lret
fdivs
push
subl
insb
popa
shrl
aam
scas
push
cmp
adc
addr16
fs
and
sbb
inc
imul
push
inc
xchg
add
push
shll
pop
arpl
fiadds
or
dec
mov
or
xchg
and
outsb
push
push
push
cmp
leave
out
or
add
int
pop
sub
inc
negb
movl
jecxz
je
pop
pop
not
mov
sub
sub
jbe
sti
push
pop
and
or
bnd
sub
lea
pop
in
rorl
mov
test
dec
ljmp
lea
cli
adc
push
mov
shrb
pop
adc
pop
add
test
gs
jnp
icebp
xor
jge
popf
jb
and
xchg
repnz
stc
jae
and
outsb
jne
push
loopne
ret
emms
imul
cmpsb
stos
popa
aad
mov
in
outsl
jns
sbb
int
dec
bound
cld
shrd
add
push
icebp
adc
pmulhuw
dec
pop
inc
arpl
imul
inc
inc
push
inc
push
sub
movb
outsl
cltd
add
mov
sbb
mov
mov
mov
jb
adc
push
out
or
push
add
pop
mov
imul
xlat
ja
imul
data16
popa
daa
mov
out
sti
pop
xor
xor
insb
jns
sbb
insl
add
sub
add
add
jae
inc
pop
mov
or
xor
shr
lods
push
inc
pop
push
add
inc
loope
pop
addr16
sbb
sbb
xchg
inc
ss
ja
xor
lea
or
or
insb
out
pop
add
out
sub
or
loope
pop
jbe
sub
dec
ret
ret
dec
add
aaa
xchg
vmovsd
pop
insb
ja
dec
push
push
inc
shll
lock
aam
insl
lods
push
inc
imul
xor
inc
add
pop
rcrb
push
xor
push
push
test
push
lds
inc
fcoml
jbe
xor
rcl
loop
sub
lock
lods
dec
addr16
dec
inc
dec
push
dec
aad
mov
mov
shll
les
mov
and
jns
mov
mov
mov
mov
shll
and
adc
and
sub
sar
cld
rcrb
pop
setge
rol
btc
mov
mov
pop
aas
lret
sbb
adc
or
mov
pusha
push
xor
loop
shrb
orl
mov
mov
in
push
adc
fdivs
push
sub
pop
dec
jmp
mov
or
push
push
dec
decl
and
cmovne
shl
jns
jp
push
adc
sar
jmp
xchg
dec
test
int
inc
mov
lock
neg
mov
push
sbb
fisubrl
insb
shl
jp
inc
sbb
jne
and
xor
call
sub
mov
fistps
xchg
jns
loope
lret
aam
adc
std
out
testb
ret
fisttps
mov
push
stc
ror
mov
add
data16
icebp
pusha
lcall
dec
sahf
jo
xor
imul
hlt
pop
fdivrs
popa
xchg
adc
pop
enter
sub
push
out
out
add
cmpsl
das
sti
xchg
jno
test
pop
rolb
dec
std
xlat
and
xchg
push
xchg
incl
in
push
gs
test
push
jnp
add
add
mov
icebp
movsl
rcrl
pop
jnp
ljmp
int3
les
loope
lock
inc
pusha
inc
cmp
cmp
mov
jl
ja
xchg
cmp
aad
dec
push
push
adc
pushf
rol
lcall
cmp
or
adc
xlat
repz
dec
idiv
ljmp
mov
setge
xadd
push
adc
rol
stc
pop
lods
sbb
push
or
xchg
mov
cmp
lcall
pop
xor
dec
push
jg
out
shrd
push
mov
add
mov
in
bsf
jae
add
rol
cmp
sub
push
xorb
neg
cs
dec
dec
rcl
xor
sbb
pop
cmp
mov
inc
lret
or
mov
idiv
fcmovne
inc
aad
xor
pushf
ror
mov
mov
xlat
sbb
setno
pushl
jne
lret
lock
lods
ret
rolb
jmp
in
incl
into
dec
sub
or
in
mov
neg
xor
cmp
xchg
and
add
setg
lea
outsl
jg
xchg
setnp
ljmp
sub
call
std
fnstsw
xor
add
add
and
pop
mov
lret
bswap
cmc
test
pusha
pusha
sub
push
js
jge
in
add
dec
call
inc
push
lods
rolb
and
shll
imul
add
lods
sbb
jmp
mov
std
std
pushf
cld
pusha
rep
mov
mov
pop
js
lea
jge
cvtps2pi
stc
test
decl
xor
pushf
pushf
jbe
je
js
and
notl
fisubrs
pop
mov
adc
push
mov
shll
mov
or
mov
push
sbb
push
mov
out
or
sbb
outsb
std
jb
test
fstl
push
mov
adc
add
push
div
or
data16
cmc
clc
test
loopne
sbb
out
xor
mov
adc
pushf
mov
test
cmc
shl
inc
imul
das
ds
fs
jg
sub
fistpll
xor
call
add
and
rcl
jg
add
aas
xor
test
call
push
sbb
pop
push
jg
cmp
cmp
cmp
sub
stc
clc
rol
jnp
loope
xchg
lahf
or
scas
test
stc
add
in
mov
mov
stc
adc
flds
std
adc
push
xchg
call
fiadds
subl
fcomps
push
mov
std
fbstp
jmp
add
add
jae
call
sbb
or
and
sbb
xor
or
jne
pop
sub
dec
pushf
loopne
sub
mov
dec
sub
jge
call
sub
fsubl
sbb
arpl
pusha
mov
test
aaa
inc
test
inc
cmp
lret
inc
mov
aam
push
cmpsb
stc
mov
fstpt
jmp
leave
add
pop
lahf
cwtl
pop
lea
call
mov
mov
lods
mov
mov
inc
add
mov
mov
incb
imul
rorb
pusha
fldl
in
jl
xor
stos
arpl
adc
mov
and
stc
sbb
rol
es
insl
jg
flds
adc
pushf
dec
or
rclb
mov
fucomi
addr16
test
mov
cld
mov
ret
ja
mov
pop
and
pushf
cld
popf
call
inc
inc
pushf
cmp
dec
mov
nop
or
jmp
cmc
call
mov
mov
shr
rcr
mov
movsl
xchg
cmc
idiv
sbb
aam
gs
sbb
push
not
jmp
stc
mov
push
call
cli
in
cmp
pushf
stc
sub
mov
clc
shll
jae
add
pusha
imul
imul
popa
sub
fucomip
outsb
outsb
inc
inc
sahf
jno
and
push
rcl
rol
call
push
lods
cmp
xchg
pop
cwtl
or
ffree
call
loope
sbb
sbb
call
loop
push
xorl
pushf
cmc
dec
or
adc
xlat
sbb
pop
adc
sti
testl
outsb
call
decl
aaa
out
cmp
loopne
pusha
xor
out
leave
and
push
pushf
scas
or
push
bound
jno
push
adc
pop
jg
push
call
rorb
mov
or
ret
es
out
jns
lods
ljmp
loop
mov
cli
lea
aas
test
aaa
sub
mov
call
inc
add
and
neg
sub
testl
add
enter
inc
or
xchg
cmp
mov
jge
sete
or
pusha
jmp
cmp
pop
addr16
stc
mov
scas
or
ret
lods
rcrb
xchg
push
fcmovb
fistpl
add
loop
dec
mov
push
mov
jb
and
pushf
push
dec
call
ja
mov
mov
in
mov
xor
popa
ja
scas
or
clc
cmc
sbb
outsb
pop
jg
loopne
pop
pushf
dec
clc
push
or
cltd
sbb
popa
cmp
ss
and
test
lahf
rorb
adc
sbb
push
pop
cli
fbstp
push
or
jmp
ss
mov
pusha
inc
loop
mov
sbb
stc
inc
lret
not
xlat
hlt
data16
pop
jg
jb
pop
add
mov
inc
ret
mov
les
clc
add
mov
fists
clts
cmc
stc
sub
dec
pop
mov
fs
sub
xor
in
test
push
mov
clc
mov
adc
or
push
jmp
aas
xor
rorl
leave
ror
scas
stc
scas
aaa
mov
in
pusha
xlat
jmp
cmpsb
int3
pop
mov
cmp
ljmp
add
dec
in
or
add
add
rclb
scas
subb
int
sub
pop
jo
call
mov
or
add
outsb
jo
push
lods
mov
out
mov
call
dec
rorb
mov
xchg
pop
or
xor
fimuls
movsl
loop
mov
adc
sbb
sbb
scas
aas
popa
test
jmp
mov
add
or
ja
movsb
clc
jge
rcl
mov
push
push
adc
inc
mov
add
xor
xor
adc
dec
xor
in
std
pop
out
or
ja
and
xchg
out
jb
ss
inc
xor
ljmp
inc
xor
fdivrs
cmp
jle
repz
mov
inc
and
negb
daa
sub
cmp
xor
add
ds
jnp
sub
aaa
inc
aaa
adc
fwait
lea
inc
xor
outsl
iret
inc
add
iret
and
fwait
cmp
lret
jnp
outsl
ror
mov
das
aas
pop
jg
fnstsw
sub
and
aaa
inc
pop
in
fincstp
lock
inc
out
xor
das
jg
jl
inc
aas
or
inc
out
mov
inc
mov
adc
into
xor
loope
fidivs
xor
out
mov
addr16
imul
testb
mov
es
aas
mov
jnp
inc
xor
xchg
cmpl
xor
aas
lds
leave
cwtl
aaa
push
xchg
dec
das
arpl
jae
icebp
dec
sahf
aas
subl
add
pop
xor
inc
pop
cmpsl
repz
out
jo
out
mov
pop
aaa
sbb
out
sbb
dec
mov
sbb
jg
stos
jo
out
xor
cmp
xchg
sbb
dec
aas
outsl
jecxz
push
dec
cmp
jg
mov
negl
addr16
mov
dec
out
mov
jg
sub
repz
sbb
mov
dec
negb
decl
ret
mov
out
dec
inc
daa
sbb
ja
sub
pushf
aas
fdivrs
xorb
std
mov
into
dec
jmp
push
or
jmp
add
cli
sub
cs
shl
fists
rol
sbb
fucomip
aas
fwait
rorl
test
shl
les
xchg
push
shl
push
cmp
or
outsl
rcrb
mov
clc
jmp
loop
icebp
cmpsl
scas
mov
adc
cwtl
test
ret
or
cmc
test
or
add
sbb
loop
loopne
cmp
lret
add
cmp
jae
push
mov
movb
mov
pop
mov
out
stc
inc
aam
sbb
and
out
and
imul
dec
daa
iret
insl
push
sbb
mov
sti
sbb
test
adc
test
dec
int
mov
sti
fistl
and
insb
mov
add
mov
push
inc
jle
adc
mov
or
test
or
into
add
icebp
movsb
testb
mov
sub
repz
cmp
in
adc
sub
jmp
jl
or
call
loopne
movups
cli
in
cbtw
lret
pushf
cwtl
and
inc
loope
aaa
mov
mov
scas
or
xchg
sar
pop
test
mov
loopne
aaa
ror
cmpsb
sbb
inc
jg
fwait
mov
test
jnp
push
mov
xchg
sar
sub
sar
fwait
inc
das
lahf
push
lahf
push
pop
mov
cltd
js
jbe
call
inc
cmp
rol
push
pusha
lea
push
shr
popa
xor
xchg
and
mov
orb
sbb
xchg
push
repz
ja
les
mov
ret
adc
mov
add
pushf
lret
outsb
inc
mov
stc
mov
hlt
ss
lock
lds
mov
dec
mov
loope
mov
icebp
rcl
jbe
mov
mov
inc
push
sbb
cmp
push
dec
jp
adc
test
or
or
push
push
or
mov
pusha
adc
mulb
xchg
mov
push
xchg
xor
mov
aaa
shl
aaa
ret
not
add
jle
dec
movsb
call
pop
cmp
jmp
mov
addr16
je
mov
adc
int
pop
sbb
add
ljmp
dec
stos
test
cmovle
jecxz
inc
xlat
lock
call
inc
stc
jl
mov
adc
add
fsubrp
test
pusha
repnz
jl
ja
test
or
lock
lret
test
cmc
arpl
shrb
sbb
inc
push
test
xor
out
out
xor
xchg
dec
cli
pop
mov
lock
push
push
hlt
test
inc
jmp
adc
outsb
outsb
xlat
loope
call
hlt
inc
fidivl
xchg
mov
sar
loope
outsb
lret
jmp
orb
push
pop
icebp
out
test
shrl
movsb
js
stos
js
fbstp
loope
and
pop
rcr
and
push
cmp
setg
loop
pop
call
sbb
imul
shlb
jnp
sarb
leave
jp
adc
ss
imull
out
push
pop
inc
imulb
sub
push
movb
jae
imul
pop
pushf
sar
iret
mov
jecxz
push
das
adc
aad
popf
lcall
sbb
lret
mov
psubusb
scas
cmp
fcoms
cwtl
sti
ffreep
inc
add
push
jle
mov
and
adc
movb
push
sub
ret
clc
pushf
sbb
xchg
int3
cmp
adc
push
sub
cmp
movsb
mov
daa
sti
jae
push
fmull
mov
xor
shlb
jne
cmp
dec
rep
ret
push
jl
in
push
jmp
jns
or
ja
pop
dec
shr
cmc
out
sbb
mov
sti
rol
mov
ljmp
shll
lret
sarb
ret
fidivrl
orl
xchg
pop
pop
dec
sbb
cli
shrl
dec
cmp
loop
mov
adc
sbb
fwait
adc
mov
call
adc
movsl
aas
fcomi
jnp
rcll
mov
in
add
cmc
pushf
mov
aad
outsb
std
mov
sbb
push
aam
cmpb
add
rcrb
push
add
sub
lret
dec
add
ret
repz
mov
mov
leave
xor
lods
repnz
hlt
ss
mov
push
dec
dec
add
mov
push
xor
arpl
mov
pushf
jb
adc
xchg
push
or
sub
ret
insl
mov
rolb
push
ljmp
ljmp
jmp
outsb
lds
and
call
jmp
xor
push
ret
scas
pop
dec
roll
add
and
sbb
out
mov
mov
pop
pop
in
mov
and
xlat
inc
pop
xchg
pushf
push
xchg
add
shll
pop
pop
lcall
jmp
or
mov
sub
rcr
add
out
fisubs
loopne
jle
repz
adc
mov
lahf
clc
mov
adc
pushf
jmp
js
outsl
jmp
push
mulps
pop
push
xchg
mov
push
roll
add
filds
xchg
mov
loope
cmc
push
push
test
mov
enter
loopne
sti
cmc
sbbb
cmp
test
jne
inc
loopne
cmp
cmp
mov
sbb
dec
stc
push
std
add
cmc
pusha
call
cwtl
not
or
mov
iret
shll
aam
lret
out
orl
mov
pop
data16
add
mov
pop
lock
mov
mov
mov
sub
jg
mov
fcmovne
push
push
movsb
aas
aad
ret
xchg
xchg
data16
jmp
mov
add
adcl
or
ja
cld
push
loope
rclb
clc
pushf
and
mov
andl
or
xor
fld
roll
rorl
ror
pop
rorb
xchg
fisttpll
fdivr
rorb
sbb
cli
add
mov
stos
or
shll
cld
cltd
leave
mov
or
lea
push
shl
cs
cld
jbe
inc
push
rcl
and
movsb
mov
pushf
or
shr
rcr
sub
fldcw
aad
roll
mov
push
pushf
pusha
lret
std
insl
xor
ret
setp
jmp
imul
cmc
mov
pop
or
stos
xchg
pusha
push
ret
lret
sbb
pushf
push
repz
mov
push
xchg
ja
addr16
lahf
addr16
add
mov
pop
mov
cwtl
pop
inc
aaa
rcll
out
and
and
mov
fcom
pop
testl
sbb
fs
push
pop
fisubrl
push
daa
push
test
mov
sahf
or
jnp
loopne
inc
mov
outsl
or
inc
xor
sbb
mov
inc
push
push
mulb
inc
mov
pop
jne
inc
jp
pop
push
xor
mov
incl
mov
mov
mov
ss
push
in
inc
cmp
dec
pop
push
jmp
inc
xchg
cmpl
insb
test
lcall
ret
das
and
or
jg
mov
lahf
pop
out
roll
fistps
jg
mov
stos
dec
xor
sbb
out
dec
xchg
push
fists
inc
sub
lcall
lcall
sub
mov
filds
or
sub
call
fcompl
or
lea
mov
mov
jge
adc
jl
fst
xor
pusha
sbb
fnstenv
decl
dec
mov
fiaddl
pushf
ret
jmp
out
cmp
xor
jmp
inc
push
lret
cvtpi2ps
inc
ffree
dec
ds
sub
fistpll
xor
pushl
dec
insl
sarb
out
scas
popf
push
add
das
xchg
pop
cmpb
mov
outsl
pop
addr16
sahf
lods
mov
mov
jnp
pop
clc
and
push
xlat
pop
enter
hlt
fadds
or
mov
lcall
push
dec
icebp
ja
cmp
xor
ret
je
pop
sbb
inc
xor
iret
and
push
push
push
hlt
xor
mov
cld
lcall
add
inc
dec
std
push
adc
xchg
and
call
cmp
out
inc
lahf
and
push
test
arpl
stc
or
test
sti
pushl
push
mov
shll
jl
sub
dec
pop
mov
push
enter
push
mov
sub
cld
das
cmp
loope
sbb
or
clc
repz
sub
movsl
mov
imul
aas
jle
subb
jecxz
scas
xchg
les
sub
dec
decl
out
cmp
sbb
addr16
testb
icebp
adc
in
pusha
jmp
adc
lcall
imul
xchg
and
dec
cmp
xchg
lcall
cld
mov
test
jge
adc
jae
scas
sub
in
mov
pushl
test
sbb
mov
popf
sbb
dec
lret
add
pop
fdivrs
dec
or
loopne,pt
push
rorl
lret
fiaddl
scas
ret
inc
ljmp
cmc
or
fsubs
mov
leave
mov
jae
pop
fprem
imul
xchg
push
int3
cmp
mov
mov
jne
fisubs
pop
out
shll
popf
sbb
dec
pop
mov
mov
jae
pop
mov
fnstsw
fcmovnb
test
sub
sub
enter
adc
ljmp
ja
nop
xor
fcmove
icebp
sbb
ljmp
out
add
adc
mov
xor
push
adc
xor
ljmp
inc
xor
sbb
das
fst
add
loop
int3
in
stos
xchg
pushl
mov
pop
and
outsb
loopne
addb
jp
jg
sti
jg
lods
mov
rclb
adc
adc
dec
addr16
out
mov
test
push
idiv
mov
mov
jae
daa
fdivrl
fiadds
xlat
cmp
lods
pushl
mov
ss
sti
jle
loopne
outsl
pushf
inc
mov
cmp
inc
dec
repz
dec
jl
movsb
bound
jno
inc
outsl
divl
in
pushl
and
dec
mov
pop
or
push
push
pop
cli
jge
or
js
sarl
adc
out
mov
push
mov
je
jecxz
inc
dec
jmp
jg
in
push
jnp
inc
cld
data16
xor
test
pop
mov
push
in
daa
pusha
pop
jle
lods
jae
jg
insb
sub
ljmp
cld
outsl
mov
loope
mov
mov
fistpll
jge
in
data16
fists
pusha
mov
push
loope
and
imul
dec
stos
adc
xchg
idiv
ljmp
inc
mov
sbb
ret
push
xbegin
pop
call
sbb
outsl
cmp
fisttps
jmp
mov
jbe
xchg
adcb
cmp
decl
shll
push
sarb
push
lahf
sbb
ret
inc
mov
adc
movsl
lods
lds
inc
and
push
mov
xchg
cld
cmp
inc
loop
in
mov
inc
jno
out
lcall
cmp
gs
xor
xchg
es
sbbl
lahf
lcall
cmp
sbb
shlb
test
add
adc
dec
ja
test
jl
push
in
inc
or
sub
jg
jnp
jmp
mov
and
dec
xor
sub
scas
je
jge
sbb
call
pop
jmp
jle
test
iret
dec
sbb
jns,pt
pop
mov
out
fldl
imul
xchg
fstl
jmp
xchg
cli
mov
push
xor
and
jg
shr
pop
sub
xlat
lds
mov
pop
sbb
sbb
pusha
inc
or
pusha
loopne
movsb
sar
pop
call
sub
lcall
mov
mov
sub
dec
aad
mov
adc
mov
or
idivl
mov
imul
and
fisubs
push
xchg
jmp
cmpsb
nop
insl
sub
jns
cmp
sbb
sbb
mov
inc
sub
xchg
mov
adc
and
sti
bound
xchg
dec
clc
pop
xor
movsb
mov
mov
adc
pop
rorl
xchg
aad
and
nop
add
add
sub
mov
sbbb
sbb
cmc
add
addl
inc
jmp
rorb
fstps
xor
jecxz
dec
int3
jg
test
rcr
push
mov
stos
lds
aaa
push
adc
lahf
fnstenv
and
jle
cmp
jl
mov
adc
push
inc
je
lsl
push
add
fsubrp
mov
xlat
out
test
sbb
pop
call
jecxz
fwait
test
sub
lret
ret
cld
mov
pop
stos
jg
les
mov
jle
dec
popf
arpl
orl
test
add
push
xlat
ds
inc
jge
aam
push
ja
int
and
mov
call
stos
mov
cmp
sbb
xor
call
addr16
mov
lcall
dec
pop
add
aam
lcall
sbb
push
cld
movsb
adc
inc
xchg
cmp
subl
sbb
fimull
ljmp
lods
add
loope
pop
push
out
pop
das
jne
out
ljmp
dec
popf
cmpsb
xor
adc
push
jbe
cld
mov
push
sbb
ds
dec
cld
jg
dec
mov
or
jb
sbb
lods
pushl
inc
nop
jnp
dec
dec
shrb
stos
daa
loopne
sub
dec
lock
ja
push
sub
adc
pop
cmpsb
ficoml
jge
sbb
adc
notb
or
cmpsl
push
cld
clc
dec
ds
jnp
push
out
into
push
push
inc
lcall
test
push
push
sub
sbb
out
decb
add
out
sbb
icebp
xchg
dec
and
scas
addl
mov
add
pop
fldenv
fadd
repz
scas
jb
xor
orl
rcrb
call
in
pop
sbb
decl
xchg
jmp
mov
call
pop
aaa
and
das
push
jmp
out
in
pop
movsb
jbe
mov
or
jo
mov
mov
cmpsb
sbb
lea
cs
mov
xchg
push
ret
and
lret
mov
pop
fisttps
xor
out
mov
sbb
jmp
xor
cmp
aaa
aam
mov
fdivr
and
nop
leave
inc
mov
adc
jmp
mov
gs
incl
xor
xor
jbe
inc
xor
rcl
out
or
and
mov
aaa
clc
ja
push
call
imul
mov
lahf
xor
test
jns
sti
test
les
hlt
incl
dec
mov
push
imulb
incl
stos
xlat
das
mov
add
stc
sub
ja
adc
jecxz
adc
ljmp
std
aas
xlat
mov
mov
mov
aam
jns
and
testb
add
sub
arpl
sbb
testl
das
hlt
stc
in
adc
sub
insl
out
xor
add
or
pop
fimuls
stos
and
dec
gs
movsb
inc
mov
jge
out
mov
leave
adc
clc
lcall
fcomip
testl
or
stc
mov
scas
jle
decl
insb
cmp
and
sbb
rorb
xchg
decl
cld
js
js
sar
push
nop
add
push
aad
pop
adc
or
add
call
cltd
mov
jne
and
add
fnstsw
lods
pop
cld
jg
cs
xchg
sahf
cs
movsl
push
dec
cmp
loopne
lret
push
jmp
loopne
repz
int3
sar
xchg
mov
jmp
lahf
arpl
mov
lock
mov
movsl
ljmp
adc
xor
iret
loope
decl
xchg
and
inc
andb
ret
inc
mov
cmpsl
xchg
lock
mov
mov
shrl
xchg
sti
int3
fwait
pop
xor
xchg
out
cmc
fdecstp
call
enter
loop
mov
cmp
insb
addb
adc
push
in
ljmp
repz
mov
push
loope
mov
push
ds
mov
pop
push
pushl
mov
push
rorb
xchg
xor
push
pop
sbb
loope
mov
and
fadd
mov
cmc
bnd
push
dec
push
shlb
lds
or
mov
ja
inc
and
sbb
add
movsb
mov
loop
and
cld
sub
mov
stos
cli
movsb
add
xchg
jle
sbb
iret
jae
orl
inc
jmp
xchg
sarb
jns
mov
clc
lods
stc
mov
mov
push
std
lahf
repnz
int3
mov
inc
adc
inc
shr
adc
das
sbb
or
xlat
adc
rclb
jae
push
push
into
leave
call
popa
rcrb
mov
imul
outsl
xchg
jmp
std
pop
inc
fsubrs
xor
pop
std
mov
iret
mov
push
or
dec
out
add
xchg
scas
jb
mov
mov
xchg
jle
loop
sub
or
and
cmp
ljmp
scas
or
jecxz
mov
je
in
xchg
jmp
jg
leave
clc
nop
nop
mov
pop
inc
stos
out
mov
incl
jecxz
hlt
cmpsl
or
cli
das
jb
lahf
jecxz
add
pop
adc
lods
lcall
in
sbb
scas
push
dec
adc
insb
lods
rorb
lock
jl
add
or
bound
test
mov
iret
adc
out
mov
icebp
decl
mov
mov
adc
mov
arpl
fdivrp
das
in
loopne
fwait
sub
push
mov
gs
fdivs
cmp
ds
arpl
insl
shl
aad
xor
jmp
pop
sahf
int3
mov
mov
push
mov
push
test
daa
mov
mov
fsts
clc
mov
mov
sbb
rcll
xchg
repz
xchg
add
out
pop
jne
sbb
stos
mov
imul
pop
lret
or
jg
les
mov
out
fs
sbb
and
add
lcall
pop
mov
aas
repz
ss
dec
cld
test
addr16
sbb
pop
les
bnd
stos
inc
pop
movsb
push
mov
pusha
jns
push
adc
xchg
dec
sbb
adc
pop
ja
xchg
push
and
das
dec
dec
jle
in
mov
stc
adc
or
loope
dec
ret
dec
fimull
pop
jb
movsb
iret
push
js
das
jg
out
je
divb
push
adc
jp
sti
mov
jp
cmp
pushl
or
jle
jnp
int3
das
sbb
push
ret
sub
and
push
ljmp
pushf
adc
jnp
xchg
pop
pop
dec
push
sbb
std
jg
mov
mov
adcl
aaa
fldt
lcall
sub
int3
aaa
das
sti
xlat
cwtl
push
sar
movsl
sub
cli
bound
fsubr
insl
sbb
sbb
sbb
push
dec
lcall
dec
fidivrs
push
inc
mov
cmp
jb
fmulp
inc
pop
and
mov
jmp
xor
fs
ds
or
mov
inc
std
or
sbb
add
fcomp
lea
lods
movsb
xchg
adcl
mov
out
push
push
test
sbb
sti
mov
lcall
cmp
cwtl
mov
in
je
scas
mov
and
not
cmp
test
mov
scas
cltd
sbb
mov
lods
mov
fsubl
sti
adc
int3
inc
xchg
rolb
inc
mov
movsl
mov
xor
cmp
inc
repnz
inc
das
mov
xor
idiv
sub
push
repnz
ret
pushf
mov
pop
jle
add
adc
pusha
inc
push
subb
xchg
add
mov
push
in
loop
and
cmp
out
insb
pushf
push
loopne
xor
sbb
lret
or
pusha
out
pop
jne
xor
pop
sub
xor
xorl
lcall
add
jp
mov
mov
xchg
dec
push
push
mov
jp
aam
sbb
int3
xor
jecxz
repnz
lret
jae
out
pusha
mov
sub
fcompl
push
pusha
jmp
aam
testl
mov
mov
daa
roll
outsl
lcall
sbb
xchg
in
popa
fs
in
xchg
push
stos
dec
or
cmp
dec
xor
jg
movd
jo
scas
adc
loopne
repz
push
out
fwait
adc
xor
shlb
icebp
jg
fnstcw
stc
add
sub
push
pop
jmp
dec
fistl
loopne
jmp
sti
xor
das
push
in
sahf
hlt
xchg
mov
addl
mov
adc
jmp
mov
push
jmp
push
into
pushf
sbb
mov
movsb
mov
jmp
pop
pop
cmp
decl
imul
cmp
xchg
ffree
cmpsl
pop
popf
adc
jbe
lds
addr16
das
cld
in
mov
or
test
outsb
sbb
adc
or
std
test
clc
arpl
rcrb
clc
int
in
insb
out
inc
push
dec
in
test
stos
sbb
cmc
test
leave
push
jg
pushl
jl
sbb
dec
xor
iret
push
dec
inc
jg
filds
lods
cmpsb
pop
scas
sub
das
data16
scas
push
test
jnp
xchg
ljmp
out
inc
and
mov
fs
in
out
adc
mov
pop
dec
mov
cld
movsb
dec
dec
inc
xchg
mov
cmp
imul
sbb
fwait
inc
push
popf
in
xchg
mov
imulb
jmp
je
addr16
pop
mov
imulb
push
xchg
xchg
fisttps
cs
add
adc
cmp
call
decl
mov
lahf
sub
push
mov
jg
xchg
int
pop
pop
loop
data16
mov
fwait
sti
jp
popa
pop
mov
mov
rol
pop
cmp
push
push
test
inc
mov
and
incl
xchg
mov
and
xor
lods
dec
xchg
addr16
mov
mov
jg
sub
movsl
imul
sbb
cmp
xor
mov
xlat
cs
incl
mov
pop
fdivl
cmc
jae
dec
jnp
dec
ret
adc
pop
mov
ljmp
inc
sbb
mov
add
andl
pop
rol
push
cmc
xchg
int
movsl
mov
loopne
insb
sub
fwait
movsl
or
sub
jg
lcall
mov
ficomps
sbb
xor
shrb
adc
cld
push
adc
in
lcall
and
ljmp
jne
push
arpl
pop
inc
add
push
sti
rclb
loop
cltd
xchg
jns
loopne
rcr
pop
aas
mov
aad
stos
jnp
jmp
xor
mov
in
sbb
into
push
push
jo,pt
push
outsb
and
jmp
decl
in
lret
fld
adc
popa
or
jb
jns
jmp
xchg
rol
fcoms
jb
loop
push
mov
decl
mov
jae
xor
mov
push
xorb
mov
push
pushl
or
fwait
adc
lahf
rclb
and
les
lcall
cmp
loope
adc
jb
in
mov
out
les
ljmp
sbb
in
std
fwait
mov
xchg
das
lcall
test
mov
movsb
pop
dec
jnp
pop
push
pop
ret
inc
aam
rcr
imul
sti
sub
lahf
loopne
jecxz
add
jg
inc
cmp
adc
jle
lret
fiadds
movsl
sbb
std
out
stos
push
outsb
subb
scas
jnp
cmc
mov
jae
iret
lahf
add
pop
inc
mov
mov
std
add
rcll
xchg
pop
push
rclb
decl
pop
ss
pop
out
insb
lcall
jecxz
push
jnp
inc
pop
mov
idivl
and
xor
cs
dec
cli
inc
lcall
add
ror
cli
pop
popf
imul
mov
jbe
adc
std
jg
fbstp
mov
roll
mov
mov
insl
test
lcall
lea
mov
std
lcall
mov
iret
xchg
mov
cmp
cmc
frstor
xchg
sbb
js
jmp
cmpl
jge
lret
pop
push
inc
filds
add
test
jo
fdivr
aas
mov
add
aam
std
outsl
test
fimull
lret
mov
or
decl
mov
mov
insl
dec
mov
iret
inc
push
repnz
and
lods
std
jmp
loop
push
jp
mov
mov
jbe
or
int3
mov
xor
jg
mov
push
pop
add
add
push
in
das
mov
add
or
dec
mov
sub
stos
push
int
in
sbb
jnp
xchg
adc
out
dec
mov
ljmp
mov
mov
jmp
adc
outsb
aam
mov
mull
adc
jbe
xchg
cmp
out
clc
sub
pop
mov
push
inc
and
or
push
cmp
lods
clc
aaa
mov
lahf
ror
mov
mov
sbb
mov
or
jg
incb
mov
and
push
xor
mov
mov
add
in
and
add
pusha
mov
sbb
mov
lret
sbb
push
jmp
sub
add
xchg
jne
repz
les
pusha
clc
out
mov
pushl
clc
mov
cmp
ficoms
rep
cmp
cld
sarb
push
mov
pop
xchg
fadd
add
fsubs
push
call
js
mov
test
stos
ljmp
xor
cmp
pusha
xchg
dec
lcall
es
test
fwait
adc
cmpsb
mov
call
scas
inc
sti
add
pop
push
or
cmp
movsb
xchg
mov
pop
lcall
and
adc
popf
xlat
hlt
repnz
cwtl
repz
fwait
mov
jmp
test
dec
dec
inc
inc
inc
test
std
sbb
hlt
cmp
or
lcall
mov
mov
pop
mov
in
xchg
sbb
aad
ljmp
pusha
imul
mov
mov
cmp
jl
mov
jg
stc
fdivrp
cwtl
out
dec
into
mov
mov
imul
mov
adc
mov
mov
sbb
lahf
call
jp
mov
pop
filds
fildll
adc
jle
fdivrl
jae
jmp
mov
jg
scas
cmp
mov
ret
outsb
cmpsb
xor
ja
sub
and
push
mov
dec
cld
pushl
popf
int
adc
movsb
lods
in
dec
sbb
mov
sar
call
jmp
dec
mov
mov
mov
cltd
rclb
pop
pop
vpsubsb
fldenv
addl
scas
aam
cmp
std
mov
xchg
popa
jb
inc
jg
ret
jno
xor
lret
aas
lea
arpl
notl
and
pop
cli
pushl
xor
adc
lea
or
and
aam
pop
into
add
jg
loopne
adc
test
fistpll
and
dec
mov
inc
xchg
in
xchg
push
imulb
inc
sub
insl
xor
jmp
sbb
dec
insl
xchg
ljmp
pusha
sbb
dec
jmp
dec
daa
gs
or
jns
pop
mov
mov
xor
dec
dec
inc
and
aam
push
leave
repnz
call
xchg
test
repnz
cltd
loope
out
addr16
popa
in
jmp
lods
add
hlt
movsl
push
mov
ret
mov
mov
test
mov
cmp
into
lret
dec
lret
imulb
add
pop
xchg
xchg
xor
jg
std
jge
sbb
push
jmp
mov
dec
inc
mov
pop
lret
sub
test
fstpl
mov
pop
pop
adc
xor
xchg
test
ret
ret
sbb
les
int3
adc
dec
dec
lea
cmp
sub
pushl
dec
cmp
and
push
mov
stc
incl
pop
paddb
jno
dec
inc
je
ja
push
push
loope
das
adc
fistl
xchg
xchg
add
inc
push
inc
and
idiv
aad
repnz
and
fidivs
pop
adc
test
xchg
or
ret
jge
adc
sub
or
pop
inc
xchg
decl
or
shrl
dec
stc
and
aam
push
iret
jmp
ret
in
ljmp
pop
test
popa
jle
add
movsb
and
mov
jg
stos
inc
xor
mov
or
int
mov
sarl
add
cmpb
xlat
ror
sub
push
mov
or
repnz
rolb
jb
in
cwtl
dec
dec
int
das
mov
push
push
into
out
fisubrs
adc
into
insl
lcall
dec
lret
xchg
sti
push
lea
mov
cmp
push
nop
faddl
adc
icebp
ret
jp
aas
das
xor
and
and
mov
pop
movl
outsl
sbb
jge
popa
test
dec
fsubl
aam
pop
shrl
and
std
jg
push
cmpsl
test
imul
xchg
add
out
bound
scas
mov
jae
cmpsb
stos
and
hlt
in
ljmp
or
sbb
dec
xchg
gs
ljmp
cwtl
ret
jnp
and
add
imul
daa
nop
icebp
outsl
cmp
xchg
icebp
add
fstpt
or
aam
push
int3
insl
loope
and
push
jnp
lods
xchg
roll
lcall
inc
push
pushf
sbb
movsb
hlt
xchg
js
add
mov
clc
cmc
xor
mov
insl
jecxz
ds
js
add
addr16
ret
pop
roll
jg
mov
sub
xchg
mov
icebp
and
aam
leave
insl
mov
sub
dec
xlat
int
mov
mov
jmp
push
xchg
mov
rcr
shlb
mov
inc
cmpsl
adc
xchg
test
pop
add
pop
mov
adc
jmp
addr16
loope
ds
and
mov
dec
insb
jbe
xchg
sbb
fidivl
movsb
cmpsb
in
mov
stos
insb
enter
mov
jmp
xchg
cmp
jmp
in
sbb
xchg
mov
loopne
fstp
push
add
adcl
cs
mov
ret
ja
push
rcrl
hlt
pop
shrb
ljmp
test
frstor
cmp
int
ss
xor
arpl
mov
dec
sub
xchg
mov
add
loopne
dec
stos
mov
insb
jns
pop
cwtl
mov
loop
jbe
cmpsb
sbb
outsb
push
cmp
shrb
adc
mulb
or
lcall
inc
inc
cs
ret
data16
pop
pop
stc
or
movsb
es
adc
int
lcall
cmp
jbe
mov
sub
mov
fwait
pushf
sbb
pusha
test
push
fucomi
cli
jb
leave
cmpsl
sub
in
mov
ss
cmp
push
adc
call
andl
cs
xchg
mov
sub
test
jmp
sbb
cld
lock
shlb
outsb
ja
mov
fcmovu
sub
decl
mov
dec
jg
push
lcall
movsb
stos
out
lcall
pop
in
iret
lcall
lret
cli
push
aaa
sahf
xchg
add
add
mov
lds
call
jg
das
pushf
cs
pop
ss
fdivr
sbb
pop
inc
outsl
cmp
int3
ret
call
iretw
mov
aas
mov
fnsave
out
outsb
or
js
pop
frstor
jb
mov
jns
xchg
popf
in
inc
popa
dec
fidivl
dec
stos
adc
jmp
negl
iret
mov
xor
es
mov
xor
insb
adc
mov
pop
cmp
mov
lret
iret
decl
data16
leave
cltd
and
mov
les
xchg
clc
in
pop
das
sub
mov
sbb
lds
jle
jg
and
aaa
ss
pop
mov
mov
fidivrl
mov
stos
int3
xchg
in
pop
push
mov
popa
or
test
or
xchg
incl
call
fsubrs
push
popf
data16
jns
add
ds
lret
pop
aas
andb
pushl
mov
test
js
cli
frstor
insl
push
mov
push
fcomip
lret
jmp
gs
fidivl
movsb
mov
aaa
lods
leave
jno,pt
jne
mov
xchg
incb
pushf
or
lock
inc
mov
std
pop
push
mov
out
fnstsw
daa
sahf
push
rcll
xchg
pop
pop
cs
xchg
mov
leave
outsb
jno
loope
cmp
pop
arpl
mov
arpl
lcall
decl
jp
stos
sub
ja
jb
popf
mov
stos
cmp
stc
repnz
pushl
cmpl
cltd
call
or
xchg
mov
test
dec
pop
add
push
jp
sub
dec
mov
stc
call
jl
cmp
shrb
cmp
pop
insb
lcall
push
jbe
lods
imul
cmp
fists
pop
pop
cmpsl
mov
pop
pop
mov
das
or
movsl
ss
xchg
add
jns
push
je
dec
in
xchg
fdivrs
loopne
cs
pop
out
fisttpl
dec
add
jg
jp
xchg
ret
jo
sarl
sub
cmp
addl
aaa
sbbb
cmp
xor
stos
or
stos
aam
pop
lds
incl
fwait
or
push
xor
or
cwtl
push
inc
pop
mov
push
notl
cmc
jb
jmp
test
insl
sub
push
cld
lock
test
push
fadds
add
out
mov
sbb
clc
ds
xor
dec
aas
push
aas
mov
aas
pop
loop
lret
add
adc
sub
inc
cmp
mov
xchg
ljmp
lods
sbb
movsb
cmp
les
enter
fdivrs
push
add
or
add
dec
cmp
cmp
push
clc
inc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
fdivrp
ljmp
adc
cmp
cmp
cmp
cmp
cmp
cmp
jmp
cmp
sbb
sub
xor
inc
ds
ds
ds
or
sbb
aas
inc
pop
mov
hlt
aas
push
aas
les
popf
aas
fstpt
out
push
push
mov
inc
xor
lcall
xor
xor
xor
xor
xor
jno
xchg
xor
xor
outsb
xor
cltd
xor
xor
push
xor
xor
xor
xor
xor
xor
xor
insb
pushl
xorb
test
shll
call
movsb
dec
xor
xor
lcall
xor
loop
call
sbb
xor
dec
xor
mov
fwait
xor
xor
xor
push
sti
call
xor
xor
xor
xor
xor
xor
or
xor
mov
mov
xor
or
daa
aaa
sub
add
jo
jne
repz
clc
aaa
lcall
cmp
cmp
cwtl
cmp
cltd
cmp
push
push
cmp
cmp
cli
cmp
cmp
cmp
cmp
cmp
cmp
pop
cmp
clc
lock
test
sbb
jp
cmpb
ds
aas
mov
xchg
aas
lahf
aas
mov
jmp
lret
jo
sbb
and
sub
cmp
dec
xor
pop
mov
xor
xor
xor
push
icebp
or
ljmp
xor
sub
xor
xor
lcall
xor
xor
xor
xor
or
adc
sbb
and
push
xchg
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
adc
es
test
int3
xor
push
sbb
and
jecxz
ss
incl
ss
mov
aaa
cmpsb
aaa
scas
aaa
imul
xchg
cmp
cmp
cmp
cmp
dec
cmp
cmp
cmp
cmp
cmp
jg
cmp
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cs
out
repnz
lea
sarb
out
in
push
aas
cwtl
gs
add
aas
div
sbb
jg
outsl
nop
push
xor
sub
xor
xor
xor
xor
xor
in
mov
xor
jecxz
xor
xor
dec
xor
cli
outsl
cld
xor
add
inc
xor
popa
xor
push
xor
ljmp
xor
xor
xor
xor
xor
xor
xor
xor
xor
mov
push
bound
jne
test
inc
adc
and
aaa
push
aaa
jl
sub
cmp
inc
cmp
pop
cmp
cmp
cmp
cmp
cmp
cmp
jecxz
ljmp
je
in
cmp
cmp
cmp
cmp
sub
cmp
test
ss
cmp
cmp
mov
inc
cmp
cmp
cmp
or
aas
xor
dec
aas
pop
aas
imul
add
idivb
mov
mov
nop
or
pushl
xor
outsl
xor
xor
in
divb
cmp
inc
xor
clc
out
mov
xor
xchg
xchg
xor
mov
ljmp
add
xor
xor
xor
xor
xor
xor
inc
xor
jns
lock
and
mov
xor
and
mov
fbstp
insb
ss
xorl
aaa
gs
incl
aaa
mov
out
cli
aaa
pop
cmp
sub
xor
incl
fnstcw
fistpll
idivb
std
cmp
cmp
mov
xchg
cmp
cmp
cmp
cmp
pushl
sbb
cmp
cmp
jne
cmpl
cmp
ret
cmp
cmp
cmp
cmp
sub
aaa
cmp
dec
cmp
pop
cmp
insb
cmp
mov
cmp
cmp
cmp
cmp
cmp
jae
cld
out
ja
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sbb
sub
cmp
or
adc
and
std
xor
push
jge,pt
test
nop
ds
fsts
aas
and
mov
outsl
xchg
mov
xor
pop
xor
xchg
iret
lcall
xor
xor
xor
xor
and
aas
xor
xor
xor
cmp
jg
std
sarl
cmp
aaa
lret
xor
xor
xor
test
xchg
add
inc
test
push
cli
ljmp
jb
xor
cmp
cmp
xor
imul
cmp
out
shlb
test
xor
inc
ja
xor
sub
dec
xor
xchg
faddp
jns
stos
xor
xor
xchg
xor
jecxz
ljmp
xor
jnp
xor
xor
xor
xor
mov
outsl
xor
xor
xor
dec
nop
movsb
xor
xor
xor
mov
xor
xchg
lahf
in
out
xor
xor
xor
xor
mov
xor
xor
cmp
dec
in
jge
jg
xor
js
jle
test
cltd
xor
scas
idivl
xor
iret
xor
in
jmp
icebp
xor
ss
call
ss
ss
ss
ss
push
jg
xchg
ss
call
lods
ss
ret
ss
mov
ss
mov
aaa
and
sub
inc
aaa
dec
add
call
mov
shll
jmp
adc
cmp
jg
test
cmp
fbld
or
sbb
xor
inc
cmp
push
cmpsb
dec
sub
mov
ret
cmp
cmp
cmpl
cmp
pop
cmp
and
sub
inc
cmp
sar
cmp
jg
cmp
cmp
cmp
cmp
aas
idivb
push
cmp
cmp
pop
aas
inc
pop
sub
cmpsl
cmp
sub
enter
repnz
cmp
cmp
imul
cmp
cwtl
cmp
lods
cmp
loopne
ljmp
adc
adc
ja
cmp
inc
push
pop
outsl
mov
cltd
ds
int
arpl
mov
xor
js
jle
nop
sub
xor
outsb
mov
xor
xor
insb
xor
cmpsb
mov
xor
xor
lds
lret
xor
xor
jnp
push
insb
xor
add
ss
outsl
lock
mov
jp
xorl
aaa
lcall
lods
aaa
mov
mov
aaa
in
aaa
hlt
aaa
stc
aaa
pushl
sbb
and
daa
cmp
cmp
pushl
cmp
data16
jb
js
test
lahf
cmp
xor
cmp
inc
cmp
bound
insb
cmp
movsl
cmp
hlt
pushl
sub
inc
cmp
jns
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
mov
add
push
cmp
cmp
cmp
mov
sbb
or
push
inc
cmp
sahf
jmp
and
push
mov
push
es
fstps
and
stos
xor
add
adc
in
jg
xor
jns
mov
cltd
add
ja
ds
pop
popf
rcrl
not
cltd
pop
paddd
popf
fstps
mov
repz
cltd
ds
mov
pop
xchg
sub
jl
sbb
or
add
inc
leave
enter
and
inc
daa
pop
and
pop
js
fildl
ret
xor
cmp
pop
cmp
stc
add
inc
and
loopne
fldt
sub
nop
add
pop
jmp
jge
xchg
cld
rorl
add
inc
adc
cmp
or
or
mov
pop
leave
and
jb
inc
add
push
xor
jae
daa
inc
mov
cmp
out
insb
adc
mov
addb
daa
inc
call
and
xor
jl
inc
and
inc
and
add
test
add
jl
and
pop
and
push
push
add
addb
cmpsl
nop
pop
lock
lahf
pop
push
add
stos
sbb
in
in
inc
and
jl
push
add
lea
push
dec
sahf
hlt
cld
cmp
and
add
leave
sub
aam
or
cmp
push
sub
xor
push
or
inc
and
and
mov
inc
xor
das
nop
daa
push
add
and
add
cwtl
adc
cmpl
jo
and
inc
and
jl
and
in
push
sbb
bswap
push
add
mov
and
add
sbb
add
adc
imul
or
mov
add
xor
insl
push
data16
push
mov
or
xor
adc
and
and
subl
add
add
add
das
aas
das
in
xor
xor
and
cs
xor
adc
or
inc
pop
push
push
mov
sbb
adcb
jb
or
repz
push
mov
mov
mov
cmp
xor
stc
add
add
pop
cmpl
xor
adc
and
das
stc
add
add
xchg
and
inc
and
stos
xchg
xchg
and
out
sub
push
pop
mov
mov
or
movsl
or
and
fdivl
jp
pushl
movsb
and
add
push
rdpmc
fcmovne
scas
or
adc
jmp
or
aam
mov
jnp
les
les
arpl
mov
mov
fcoms
push
shl
cmp
adc
sub
push
xlat
fidivrl
jae
test
jmp
imul
fcomi
xor
push
sbb
shr
mov
dec
pop
pop
push
ds
pop
lock
sbb
pusha
jle
xchg
or
jno
adc
mov
xor
add
lret
push
fdivrs
add
or
xor
mov
int
hlt
or
cld
inc
or
aaa
sub
push
in
shll
pusha
out
jnp
shll
xchg
jnp
fcomps
mov
sub
xor
and
das
pop
and
bound
leave
dec
les
popa
sbb
repnz
hlt
imul
xor
add
or
mov
jae
je
add
popa
insb
sahf
lds
gs
dec
inc
jg
cmpl
mov
rorb
and
cmpsb
jecxz
cwtl
gs
imul
imul
popa
add
pop
cmp
aam
dec
mov
ret
shl
pop
inc
jns
add
dec
test
push
jge
cmp
cmp
out
add
sub
or
dec
call
mov
adc
inc
fcompl
jg
pop
daa
or
push
push
in
or
in
jb
xor
jl
jns
outsb
adc
cmp
call
fs
sbb
add
mov
clc
stc
lods
inc
ret
or
push
int
xchg
negb
pop
jno
pop
repz
fisttps
mov
add
enter
sub
jnp
outsb
xor
leave
ret
adc
lcall
adc
divl
ja
add
leave
add
mov
shrb
orl
xchg
jmp
xor
or
adc
pop
sbb
icebp
in
fldl
push
ljmp
lret
and
push
int
mov
push
push
cmp
aaa
pop
mov
add
cmp
jl
sbb
mov
or
add
and
scas
pop
mov
jg
add
mov
in
mov
mov
add
in
dec
jb
xchg
xchg
gs
outsl
outsb
gs
xchg
gs
je
gs
lret
mov
fs
insb
xlat
popa
pop
xchg
gs
jne
arpl
xor
fs
loopne
data16
cmc
mulb
testl
je
sti
xor
call
or
lahf
addr16
sbb
sub
je
icebp
gs
dec
xchg
enterw
lret
into
loop
test
into
in
in
jp
rcl
push
add
mov
cmp
jo
cmp
lea
popa
repnz
lds
dec
and
xor
imul
and
js
jb
fsubs
aam
int3
add
add
jno
incl
cs
mov
sti
mov
mov
mov
push
inc
xchg
lods
and
xor
or
jp
dec
push
adc
inc
shll
sbb
mov
sbbb
sbb
sar
sub
hlt
or
ljmp
push
adc
jbe
sbb
dec
push
decl
jne
and
lret
test
add
adc
sub
push
mov
dec
push
call
jg
xchg
inc
inc
and
jmp
js
sub
pushf
xchg
xchg
xchg
xchg
nop
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
sbb
add
fcomp
sbb
lcall
inc
sbb
or
pop
jae
inc
mov
cmp
nop
push
xchg
std
pop
xchg
std
enter
xchg
std
xchg
std
xchg
std
andl
gs
xchg
gs
insb
outsl
jb
xor
xchg
gs
jnp
push
push
frstor
stos
std
icebp
add
pop
lcall
inc
push
inc
push
enter
push
xchg
dec
xor
pop
push
in
sbb
xchg
or
lods
insl
fwait
insb
inc
shrl
nop
lcall
dec
pop
movsb
imul
out
leave
inc
inc
popf
ja
repz
cmc
div
call
pop
or
es
add
jmp
xor
add
leave
push
inc
lea
push
fs
daa
lret
jb
outsl
outsb
gs
sub
add
subl
xchg
outsb
insb
popa
jne
arpl
shlb
or
mov
mov
jno
xor
xor
imul
js
fistps
xchg
imul
xchg
gs
cs
mov
sbb
iret
sarb
bound
mov
cs
out
call
andb
add
inc
ss
pop
add
movsb
add
inc
ss
add
aam
add
lcall
call
dec
mov
push
scas
cmp
ror
inc
psrld
fwait
je
push
mov
aad
xchg
mov
jge
fxch
or
add
inc
sahf
sahf
addl
arpl
or
out
scas
and
sbb
mov
push
sbb
repnz
aaa
xlat
jecxz
add
les
out
sub
test
jne
adc
jae
xor
cmp
fsubrs
jmp
in
out
mov
add
es
mov
loopne
add
les
in
rep
fisttpl
call
enter
mov
imul
loop
data16
push
push
lods
pop
add
push
mov
enter
add
add
push
mov
mov
push
test
aaa
dec
mov
xchg
adc
stc
sbb
int3
jg
test
add
sarb
js
out
arpl
mov
push
stos
js
lds
mov
or
jo
add
cld
mov
pop
pop
or
inc
sbb
pop
push
in
jns
addb
inc
and
adc
or
repnz
mov
cltd
adc
mov
adc
mov
mov
pop
inc
and
push
add
push
inc
and
pop
dec
pusha
inc
in
sbb
and
add
cli
movsb
hlt
and
dec
xchg
mov
cmp
sbb
loope
add
and
mov
mov
lcall
mov
cmp
adc
sub
outsl
jg
test
pop
jae
sub
mov
or
loope
mov
sbb
xchg
rclb
inc
and
cwtl
inc
xor
xlat
andb
mov
pusha
shl
or
mov
sbb
inc
and
ss
push
shll
test
lods
ret
out
lcall
ret
insl
lcall
fs
xor
xlat
pushf
jae
xchg
add
dec
sarl
dec
pop
bound
dec
xlat
or
push
xor
and
add
sub
xor
divb
xor
xor
and
dec
dec
jo
or
bound
popa
and
or
and
fistl
pop
or
cmpb
dec
popa
jns
jne
jae
mov
jge
outsb
dec
xor
push
push
js
adc
adc
jp
js
mov
dec
push
dec
jae
push
dec
push
mov
sub
push
push
dec
sub
rorb
add
pusha
lods
inc
fdiv
mov
inc
fldcw
mov
inc
rolb
xchg
sbb
rcrl
xchg
movsb
inc
enter
test
adcl
mov
xchg
imul
or
and
inc
adc
gs
adc
dec
adc
and
orb
add
add
xchg
arpl
fnstenv
adc
in
jo
mov
out
je
add
nop
orb
xchg
test
fildl
nop
xorb
or
iret
gs
popf
jno
movsl
aas
jp
pop
or
sub
es
mov
mov
sub
adc
out
or
push
addr16
add
or
clc
out
add
mov
sbb
in
push
outsb
jb
and
mov
inc
outsl
js
mov
sub
jns
inc
adc
mov
adc
push
adc
push
add
add
mov
inc
mov
sub
add
dec
add
or
xchg
dec
xor
xor
sbb
insl
insl
dec
jae
jg
les
sub
iret
fcomp
cmp
add
inc
inc
add
add
punpcklbw
mov
arpl
jg
jns
dec
es
daa
fwait
sub
and
sbb
pusha
orl
pop
xchg
test
in
mov
lock
cld
add
dec
shll
mov
dec
shll
pop
out
mov
or
and
or
call
jge
add
clc
mov
add
addl
xchg
pop
push
adc
mov
or
jl
dec
ss
inc
push
push
pop
leave
jne
add
pop
adc
les
lea
jne
xor
mov
call
jbe
mov
adc
xor
adc
and
push
or
pop
insb
dec
and
adc
packssdw
mov
fxch
test
sbb
bound
test
jne
mov
int
xorl
push
xchg
outsl
pop
jns
pop
push
adc
cmp
cmp
push
cmp
adc
mov
je
stc
cmovno
mov
in
movsl
imul
jns
add
mov
and
xor
fs
incb
adc
lret
insl
gs
mov
push
ret
push
fistpl
xor
or
push
fsubrs
add
fldlg2
cld
mov
jae
nop
outsb
sbb
add
pop
or
or
dec
mov
push
aad
dec
pop
jecxz
mov
jns
and
mov
cmp
xor
jecxz
inc
jmp
insl
add
outsb
inc
jae
and
mov
popa
jns
popa
and
ss
cmp
add
addr16
xlat
jne
jg
inc
imul
xchg
or
notl
sbb
sub
add
push
jmp
gs
jb
cmp
fnstenv
xor
popa
lea
outsb
xchg
insb
popf
xchg
pop
iret
jge
scas
dec
or
lds
popf
sbb
or
addr16
pop
adc
xchg
xchg
outsb
jae
pop
xor
xor
cmpsb
fcmovnu
gs
push
sub
shll
insb
or
daa
dec
dec
sub
fs
xlat
outsb
xchg
mov
jl
in
push
daa
jbe
mov
ret
fs
outsl
pcmpeqw
lret
je
and
xor
inc
push
imul
and
arpl
loope
push
insb
cmpsl
xchg
out
add
sbb
xchg
lock
push
jg
es
xor
xor
xor
xor
inc
xor
cli
xor
push
pushl
pusha
xor
lea
stos
xor
xor
xor
xor
mov
hlt
pushl
inc
xor
xor
xor
xor
xor
lds
ror
into
xor
xor
xor
xor
xor
xorb
xor
shll
dec
jne
ss
ss
aaa
xorb
call
outsl
pop
mov
cmp
ja
cmp
std
mov
cmp
cmp
cmp
cmpl
jg
mov
ret
cmp
lret
cmp
cmp
lock
cmp
jne
clc
jo
cmp
dec
push
cmc
mov
xchg
xchg
xor
xor
das
idiv
push
cmc
dec
xor
test
mov
lahf
xor
xor
xor
xchg
aam
inc
jge
xor
fnstenv
add
add
scas
ss
ss
pop
mov
out
mov
fwait
jmp
sub
xor
cmp
sbb
cli
cmp
cmp
cmp
cmp
cmp
cmp
cmp
or
or
decb
xor
xor
push
subb
push
inc
mov
adc
add
loop
sub
jp
mov
mov
movsb
xor
sub
inc
add
arpl
adc
inc
sub
add
ljmp
jae
jne
pop
sbb
outsl
jecxz
push
mov
add
add
rolb
rclb
push
rclb
sbb
sub
push
sub
and
xchg
movsb
bound
add
adc
test
mov
sub
pushf
mov
loop
es
stc
dec
sub
cld
popf
add
or
int
adc
sub
mov
xor
arpl
pop
sarl
mov
mov
and
mov
and
pushf
and
sidtl
sub
xchg
xchg
enter
pop
sub
inc
add
and
andb
adc
xor
nop
mov
jl
push
adc
sub
mov
in
or
push
dec
and
push
mov
adc
in
xchg
es
add
rclb
daa
jbe
sbb
pop
in
xchg
add
and
add
add
add
addb
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
