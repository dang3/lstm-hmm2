jg
mov
mov
xor
mov
mov
add
or
push
mov
addl
mov
sub
add
jbe
call
push
adc
incl
add
je
push
call
pop
pop
ret
push
mov
push
xor
ljmp
jne
adc
inc
or
jne
mov
push
mov
mov
adc
test
add
push
add
mov
testb
or
or
mov
insl
push
jae
push
cmp
add
call
mov
test
pop
adc
adc
cwtl
out
movups
push
iret
mov
xor
cmp
imul
outsb
add
outsb
addl
push
push
into
jmp
popf
imul
lea
xor
inc
mov
mov
add
sub
cmp
popf
add
cmp
mov
mov
and
jbe
rorb
push
push
pushl
jg
adc
xor
jmp
lea
jg
mov
jbe
push
mov
mov
pop
pop
pop
ret
test
popa
inc
sbb
pop
and
shrl
push
imul
test
aas
push
push
lea
xor
shr
addr16
insb
jg
and
mov
jmp
lock
add
andl
xor
add
add
inc
cmp
jl
add
cmp
outsb
js
jne
pop
pop
arpl
add
xchg
sub
fst
imul
sahf
add
push
aaa
fimull
mov
leave
sub
mov
ret
cwtl
clc
pop
sbb
jae
fucomip
call
rep
stos
stos
mov
add
sbb
lea
sti
pop
clc
sub
mov
test
inc
inc
cmp
lea
push
mov
cld
push
pop
xor
add
dec
mov
cmpl
ja
lods
gs
sub
mov
pop
and
mov
roll
xor
fidivs
aas
je
mov
add
xor
add
mov
imul
stos
push
fildll
loope
cmpl
jb
mov
inc
and
cmp
mov
mov
mov
and
jb
mov
push
mov
jle
test
test
je
dec
js
loopne
xor
and
dec
sbb
mov
push
test
jle
test
jbe
sbb
add
xor
cmp
sub
shl
or
in
xchg
pop
ret
xchg
mov
push
lea
idiv
imul
sbb
ret
jbe
push
outsb
stc
mov
mov
in
ret
pop
cmp
iret
inc
push
add
cmp
arpl
jle
and
push
cli
insl
fldt
imul
add
je
push
add
push
das
sub
jge
xor
hlt
aaa
and
decl
jne
sub
pop
mov
ret
aas
xchg
jle
js
cmp
je
push
lcall
imul
icebp
cmpl
in
int3
dec
push
ret
fimull
mov
and
das
mov
cmp
jbe
sub
xchg
je
and
xchg
ficomps
shlb
adc
add
movsl
into
lds
cs
fisubrs
inc
push
cltd
or
inc
cmp
adc
sbb
sbb
insb
inc
js
or
adc
call
rolb
xor
add
test
movsl
xchg
js
mov
jb
fdivl
lds
gs
popa
pop
outsb
mov
or
push
add
outsl
int3
in
mov
into
push
shll
fnsave
add
xor
xor
inc
aad
add
jne
mov
cmp
pop
fdivs
fldcw
fidivl
fldt
outsb
fisttpl
push
add
pop
loop
jecxz
add
inc
in
out
out
call
jne
jb
imul
aaa
lock
shll
pslld
repz
cmc
sbb
mov
divl
clc
stc
dec
add
pop
sti
js
push
fildll
fdivr
mov
fidivs
mov
jle
pop
adc
mov
adc
and
daa
jl
orl
add
cmpl
dec
inc
pushf
std
dec
sbb
add
sbb
in
inc
mov
push
pop
push
xlat
hlt
fsubrp
pop
je
cs
out
or
nop
mov
ret
or
fldl
pushf
dec
out
and
ret
mov
lahf
jle
and
cmp
sarl
push
pop
mov
testb
dec
divb
xor
inc
cmp
or
sbb
orl
sbb
xchg
pop
add
push
sub
pushf
fdivs
inc
or
xor
arpl
cmp
bound
xchg
inc
gs
sbb
mov
cmp
jne
andl
mov
out
in
and
hlt
divb
add
adc
adc
jno
int3
and
fucomip
or
pop
es
pop
jne
decl
add
insb
pop
add
or
mov
aaa
pop
sbb
andb
cmc
add
inc
push
inc
sbb
or
subb
or
imul
pop
xor
das
push
int
pop
ljmp
sub
or
jle
dec
adc
mov
cmp
jl
cmp
jg
mov
mov
loopne
or
cmp
jg
adc
inc
mov
or
sub
push
sub
mov
jmp
sub
add
dec
inc
inc
and
mov
jl
enter
pop
mov
sbb
pusha
cmpsb
push
jbe
adc
jne
add
jnp
hlt
movsl
je
imulb
pop
mov
ret
pop
js
lea
nop
ret
push
lock
int
data16
push
push
cmp
push
loopne
int
add
lock
add
or
clc
cmp
jle
push
push
xor
cmp
xor
in
je
nop
add
xor
push
sbb
cwtl
xchg
pop
icebp
fimull
repz
push
dec
and
adc
frndint
mov
jb
mov
fstps
ja
or
jecxz
pop
lock
imulb
shrl
shl
lret
fadds
or
fs
xorb
inc
stc
sbb
call
or
into
mov
or
push
xorl
push
imul
push
push
or
fidivrl
mov
dec
cmpl
and
push
xchg
jmp
or
inc
push
mov
xor
mov
das
pop
cmc
adc
in
push
dec
in
test
add
mov
lcall
cld
movsl
mov
scas
push
sub
and
push
sbb
push
pop
jae
leave
cmc
nop
push
jmp
jge
mov
clc
mov
mov
nop
add
les
fcomip
mov
add
aad
stos
or
jo
push
daa
mov
jbe
in
or
push
sar
mov
sbb
inc
dec
andl
subl
sbbb
bound
popa
addr16
in
addb
sbbl
shl
pop
or
lret
test
ss
shl
adc
push
lock
ret
imul
jge
dec
fisttpll
jecxz
sub
fsubr
push
sub
out
roll
adc
push
shl
and
push
adc
or
xchg
test
push
cli
shll
add
into
pop
xchg
adc
mov
sub
push
xorb
stos
fistps
inc
fldl
cmp
mulb
mov
cmp
or
jne
mov
adc
dec
inc
sub
add
xor
xor
stc
xchg
mov
jecxz
xchg
adc
pop
mov
fldcw
push
or
pop
nop
push
and
movzbl
andl
leave
inc
push
fistpl
ficompl
or
sbb
jne
ljmp
call
xlat
fimuls
sub
test
mov
sub
adc
push
adc
lea
jb
xchg
pop
shll
xchg
xchg
mov
shrl
lahf
add
in
in
imul
sbb
sbb
add
sbb
nop
pop
mov
or
mov
jb
enter
test
xor
mov
cld
xchg
clc
rorb
adc
add
daa
mov
loope
ret
jle
movb
jl
xchg
mov
jl
sarb
inc
jge
adc
mov
inc
pusha
stos
mov
les
cmp
inc
sub
xchg
pusha
mov
clc
scas
rcrl
adc
lret
or
inc
mov
jne
push
icebp
jbe
pop
add
add
adc
imul
cmp
fldenv
xor
push
divb
jle
or
loope,pt
or
shl
add
pop
mov
sub
add
dec
fadds
sbb
push
or
dec
in
out
insb
gs
incl
jl
or
add
or
or
adc
movsl
sbb
mov
jg
movsl
movsb
mov
int
stos
stos
fsubrs
pop
cmpsl
cmp
mov
adc
rol
movsbl
inc
sbb
cmp
xor
adc
adc
inc
or
xlat
int3
int3
and
mov
orl
cmp
inc
jae
stos
inc
mov
add
xor
mov
test
push
cmp
js
or
sub
push
cmpl
add
or
mov
pop
and
adc
xor
test
rorb
icebp
std
xchg
push
rorb
and
hlt
mov
lock
or
xor
clc
xchg
test
mov
inc
push
jbe
subl
mov
or
aam
out
jnp
push
pop
push
dec
add
sbbl
jne
dec
mov
enter
cmp
shr
jo
fiadds
test
insl
and
push
add
pop
push
push
mov
fdecstp
and
movsl
or
jbe
adc
ja
xchg
push
fsubp
fistpl
test
lcall
lcall
xchg
cltd
lcall
cmp
or
pop
push
cs
test
lret
pop
adcl
andb
test
loopne
sub
inc
pop
lods
cld
sbb
int
push
lock
jmp
lret
jne
push
adc
and
fnsave
pop
inc
and
mov
test
loope
inc
push
jo
jge
test
cmp
insl
fmuls
jge
sbb
sbb
cltd
sets
cmp
imul
add
mov
jge
and
pop
push
pand
jae
mov
adc
or
fadds
out
inc
fadds
dec
sbb
adc
sub
cmp
test
add
inc
test
pop
outsl
std
inc
pushf
data16
xchg
int
pushf
cwtl
jnp
aam
cmp
jmp
in
mov
shlb
insb
inc
pop
out
pusha
xchg
rorl
nop
jp
sbbl
jge
in
jmp
adc
adc
adc
jae
cmp
jne
adc
or
and
sbb
cmp
insb
xor
cmp
adc
adc
daa
push
dec
xchg
and
or
or
rclb
dec
sbb
js
add
pop
and
pop
push
mov
fwait
or
xor
lock
xchg
inc
shrl
pop
add
xor
xlat
adc
or
pop
xor
test
pop
mov
testl
pop
inc
scas
pop
add
mov
ds
in
bound
dec
jae
sub
inc
xchg
adc
lea
adc
ds
daa
xchg
dec
push
icebp
mov
xchg
mov
mov
mov
lods
push
sahf
cwtl
push
add
fisubrs
lea
add
pop
outsb
por
add
in
inc
mov
cmpsl
xchg
or
add
ja
cmp
xchg
push
jecxz
sub
sub
add
jbe
fmuls
ljmp
xor
jge
or
fdivrs
aam
loope
test
adc
pop
sar
xor
inc
loope
fisubs
push
sbb
bound
mov
add
and
mov
das
test
and
shll
and
add
push
mov
xchg
test
xchg
adc
add
in
popf
lret
and
scas
cmp
ror
leave
aad
in
lds
stc
mov
insb
pusha
movsl
mov
xor
lcall
sub
xor
jb
push
inc
mov
mov
sbb
in
lret
sti
add
add
cwtl
jl
je
aas
int3
fsubrs
jmp
rcrb
add
push
push
adc
cmp
int3
int
stos
fwait
mov
add
std
or
sbb
loope
mov
sbb
ror
xor
ret
lock
pop
xor
shl
sbb
inc
push
push
push
jne
aas
mov
cmp
les
imul
jne
push
mov
push
clc
out
movd
inc
cmp
pop
add
add
loope
lcall
imul
int3
xor
and
or
push
inc
and
shl
cmp
popa
andl
insb
xchg
inc
xor
and
mov
test
lret
mov
adc
jge
inc
or
ds
add
inc
fwait
inc
sbb
add
popf
and
imul
test
ret
rcrb
mov
jmp
adc
xchg
in
sbb
adc
pop
daa
loopne
mov
lea
arpl
push
adc
push
pusha
cwtl
pusha
add
cmpb
sbb
pop
cmp
sub
push
sub
cli
mov
pop
ret
mov
push
inc
cmpsl
imul
fmuls
push
push
push
push
or
push
in
push
ss
inc
inc
pop
or
pusha
lcall
or
xchg
test
sbb
test
jno
dec
inc
lret
inc
imul
inc
push
push
test
es
mov
int3
js
lock
fisubs
sbb
stos
lret
push
ret
aas
pop
add
sub
imul
pop
dec
and
and
or
mov
and
or
add
popa
add
push
cmp
mov
mov
push
push
adc
aam
push
or
insb
mov
mov
push
xor
cmpsb
pop
cld
rol
mov
call
jmp
push
jecxz
push
xchg
pop
clc
popa
pop
imul
fidivs
fwait
xor
or
add
jg
test
stos
push
icebp
and
cmp
nop
sbb
push
adc
je
adc
adc
and
jne
scas
sbb
pop
push
test
sub
and
daa
je
pmovmskb
leave
ret
pop
rcl
and
imull
daa
out
stos
out
xchg
daa
cmp
jne
or
sub
mov
lea
mov
sub
dec
aam
fadds
adc
mov
push
jne
repnz
test
shrl
fwait
push
aaa
sub
insb
add
mov
adc
int
enter
ss
push
ret
xchg
push
and
pop
mov
xor
fadds
in
inc
test
push
loopne
xchg
lods
xchg
lods
push
or
stos
xchg
call
mov
enter
and
mov
cmp
mov
mov
mov
ja
faddl
add
mov
mov
or
repnz
lods
decl
xor
ja
out
or
push
dec
jg
popf
orl
add
adc
fcoml
and
push
pop
pop
mov
notb
xchg
pop
cmpsb
push
mov
sub
fstpt
orl
xor
aad
add
dec
pop
adc
inc
movsl
xchg
ror
xor
pop
cmp
jge
ret
push
sub
sub
xlat
inc
mov
mov
fcmovnu
pop
add
sub
mov
lock
test
dec
lock
mov
pop
es
jle
mov
jae
cmp
add
test
testb
lods
je
jge
shrb
daa
mov
fdivrs
jg
inc
ss
jle
push
aaa
shll
lea
js
mov
mov
jo
mov
jae
std
movsl
je
popa
adc
je
push
rcrl
jae
xchg
or
pushf
in
sbb
ret
sbb
mov
or
cmp
sbb
push
clc
push
es
test
sub
hlt
xorb
push
clc
and
sarl
adc
data16
iret
clc
clc
jg
xor
clc
aaa
adc
lret
xchg
cmpsl
and
inc
scas
fs
cmpsb
sub
out
sbb
jl
adc
hlt
inc
xchg
and
or
push
add
jnp
es
mov
shl
or
or
push
mov
jmp
or
ljmp
inc
or
sub
icebp
jecxz
int3
adc
fildl
mov
adc
inc
add
inc
add
aaa
pusha
dec
cmc
jmp
aam
ret
inc
loopne
push
pop
lods
mov
pop
fdecstp
notl
icebp
pushl
cmpl
ja
fmuls
xor
pusha
clc
or
mov
addr16
push
mov
mov
push
loopne
add
mov
jmp
fistpll
nop
fwait
ja
jmp
into
imul
mov
in
pop
inc
mov
mov
shr
add
fildl
push
clc
xor
lea
add
pop
mov
sbb
xor
lock
roll
popa
sub
xchg
sbb
jno
mov
lods
jl
or
icebp
pop
test
pop
adc
add
sub
and
ret
cmp
jne
add
pop
or
push
cld
inc
sti
mov
push
pusha
pop
sub
loope
fucomp
or
push
inc
mov
out
add
mov
test
sub
sbb
fisubl
cmp
es
lock
jmp
mov
out
and
sbb
mov
add
mov
fdivp
cld
in
and
jl
inc
out
pop
faddl
and
add
push
pop
pop
int3
int3
pop
pusha
mov
push
mov
cmp
xchg
xor
fstl
mov
pop
ret
push
jg
sti
sbb
mov
ret
and
xor
cli
lds
add
xchg
test
push
cmp
pop
lea
or
add
add
jae
pop
mov
or
loope
cs
push
sub
push
in
push
es
mov
aaa
sub
and
mov
adc
mov
adc
imull
push
hlt
adc
das
or
pop
sub
mov
decb
mov
cmp
adc
push
dec
sbb
sti
in
xchg
hlt
push
mov
mov
fdivrl
pushf
or
add
les
xor
jg
xor
cmp
mov
cmp
je
cmp
fistpl
nop
outsl
repnz
jbe
aam
dec
loopne
mov
divb
outsl
imul
inc
aam
push
sub
inc
add
stos
nop
jns
push
push
sbb
scas
fstpt
push
cltd
xchg
cwtl
xor
mov
mov
test
les
pusha
xor
cs
and
mov
pop
nop
xchg
cltd
mov
xchg
pop
and
add
add
jne
mov
xor
and
add
adc
or
out
fs
cld
inc
xor
xchg
xchg
xchg
sub
sbb
xchg
cltd
xchg
xor
add
shll
jp
add
dec
shll
out
or
mov
pop
adc
cmp
pop
ja
hlt
inc
inc
push
pop
les
int3
add
pop
ss
shl
ljmp
lcall
lcall
jl
mov
cmpsb
imul
out
decb
xchg
addr16
subb
jns
jnp
jp
sbb
test
das
scas
mov
add
cmp
aaa
xor
add
dec
shll
adc
xchg
adc
xor
rcll
add
inc
xor
or
insl
popa
imul
mov
outsb
xor
jo
daa
add
add
xor
pop
or
daa
sbbb
inc
adc
add
and
push
pop
jo
and
test
ljmp
stos
mov
inc
push
inc
push
dec
xor
cs
in
fs
insb
or
div
xchg
scas
test
loop
xor
cmc
iret
ficompl
dec
jno
decl
js
add
test
das
popf
popa
add
jnp
es
cltd
add
outsl
cmp
in
mov
adc
xchg
dec
jmp
pusha
mov
js
mov
int
repz
cld
add
push
add
scas
sbb
or
scas
popf
and
gs
gs
out
mov
and
jl
fildll
aad
and
out
adc
push
mov
testb
test
jne
std
add
cmp
outsb
stos
xchg
mov
mov
icebp
lods
and
loopne
mov
insl
mov
shrl
fwait
mov
lcall
fsubrl
adc
outsb
dec
push
xchg
daa
dec
mov
mov
jge
xor
push
incl
je
gs
jo
popa
je
inc
jg
mov
mov
lcall
add
test
rcl
int
orl
lock
mov
incl
insb
adcb
push
arpl
dec
mov
ljmp
rolb
xor
ja
outsb
add
cli
fildl
call
lcall
fwait
iret
pop
scas
cmp
add
pusha
int3
loope
add
cmp
inc
dec
push
call
outsb
out
dec
dec
push
sub
push
jb
arpl
add
sti
or
dec
inc
inc
inc
pop
add
incl
jne
ljmp
push
pop
movsl
fstpl
adc
testl
loope
or
incl
xor
adc
mov
xor
sub
rorl
out
decl
sbb
fsubrl
cli
outsb
jo
push
lcall
inc
ret
mov
xchg
adc
addr16
sub
daa
mov
into
jl
into
js
mov
fstps
pop
cmp
xor
xor
das
mov
pushl
fbld
in
mov
test
cli
stos
or
sbb
cli
ffreep
pushf
lcall
adc
jne
out
jl
ljmp
jmp
daa
or
adcl
inc
ja
xor
mov
sbb
ljmp
cmp
xchg
add
xchg
push
sub
jg
or
jle
scas
adc
in
loopne
jl
fldenv
decl
and
adc
mov
inc
fsubs
and
mov
stc
scas
lcall
cmp
mov
jbe
inc
jae
loop
mov
out
mov
fldcw
dec
inc
jge
in
stos
xor
popa
in
inc
loope
xlat
lcall
fwait
aam
fmul
in
inc
xchg
push
int3
mov
into
mov
inc
scas
lock
repz
pop
js
pop
lret
nop
shl
mov
xchg
pushl
or
aam
jmp
ret
gs
sahf
sahf
es
sub
ret
jg
leave
hlt
mov
outsb
cmpsb
xor
and
fmuls
loope
mov
ret
outsl
pop
adc
movb
scas
pushw
in
pop
std
jg
inc
sahf
in
add
rclb
xchg
pop
sti
cmp
gs
mov
mov
pop
outsl
add
xor
pop
and
sbb
loope
pop
idiv
jecxz
mov
push
aas
or
daa
push
int3
fimuls
xchg
orl
incl
pop
sub
mov
movsb
jg
loop
mov
nop
add
xor
das
cld
jmp
in
adc
sbbl
jns
out
xchg
loope
cmp
bound
sub
pop
xchg
int
sub
jbe,pn
pop
call
cld
push
push
ja
jle
xchg
push
test
in
popa
cmp
pushl
out
xchg
or
cmc
daa
je
mov
push
sahf
push
ret
jg
incl
adc
sub
add
loopne
call
icebp
xor
push
push
dec
sbb
in
incl
out
sbb
jg
lahf
popf
jp
fbld
xchg
repnz
xor
sbb
mov
ret
jmp
sbb
inc
shlb
dec
xor
call
jmp
call
jno
movsl
mov
mov
lahf
and
out
jae
push
sbb
jg
dec
xor
repnz
add
xchg
mov
test
sub
mov
add
pop
out
int
mov
jnp
pop
test
sbb
adc
xor
aas
sbb
leave
push
or
mov
sub
test
pop
adc
pusha
mov
js
ljmp
shrl
xchg
mov
push
shll
push
sbb
jne
lock
mov
dec
xchg
iret
stc
sbb
fadds
sub
test
mov
shlb
jmp
outsl
out
push
roll
lret
lret
cmp
inc
lock
in
dec
push
incl
fisttps
dec
adc
mov
jmp
popa
jns
add
inc
mov
xlat
fistl
test
mov
jae
aas
fs
jecxz
lcall
call
enter
or
movsl
add
movsl
pop
mov
cmpsb
dec
lcall
sbb
pop
or
fisubrs
jecxz
push
adc
aas
push
clc
icebp
jl
iret
add
jg
fsts
gs
aad
sbb
jno
or
adc
adc
jecxz
test
pop
into
mov
test
mov
adc
push
cmpsb
pop
test
aad
mov
pop
into
call
aaa
cmp
call
mov
std
arpl
icebp
pop
aas
dec
pop
push
jno
ret
jne
outsl
jle
adc
pushl
mov
inc
mov
clc
insl
cmpsb
push
fcmovnbe
mov
insl
shrl
in
pop
xor
sub
stos
test
inc
testb
mov
xor
xchg
decb
mov
int
fwait
icebp
sbb
pop
sbb
jns
cli
mov
sub
popa
push
fcompl
dec
jmp
orl
incl
xor
stos
shll
sbbb
jge
sbb
pop
popl
fisttpl
pop
jb
mov
mov
inc
mov
adc
mov
lcall
mov
aad
inc
int3
adc
aad
sub
fcmovnbe
fsubrs
push
pushl
sub
call
outsl
pop
xor
inc
and
test
in
and
adcl
jbe
scas
test
mov
cmpsl
mov
sub
fstps
jg,pt
mov
xchg
push
push
pop
pop
xchg
repnz
pushl
jmp
int3
jmp
scas
xchg
dec
jb
sbb
adc
jp
jmp
int
jecxz
pushl
sbb
or
mov
dec
fldenv
jb
adc
sahf
or
and
lcall
cld
out
rcl
or
loop
push
push
or
xor
jmp
test
pushl
lret
mov
pusha
dec
pop
aad
lcall
addl
push
push
outsl
daa
cmp
stos
dec
xchg
mov
repz
fisttps
lcall
leave
fdivs
pop
mov
mov
aas
jge
cwtl
adc
jle
int
xorb
clc
psubq
mov
push
insl
clc
ss
sarl
cli
repnz
in
movq
lahf
add
add
mov
js
or
mov
sarl
call
ljmp
test
lahf
and
dec
je
lcall
jo
adc
cmc
out
push
dec
stos
stc
pop
loop
xor
dec
push
icebp
xchg
pop
cld
call
add
adc
je
xor
imul
sub
stc
lock
fnsave
cltd
cmp
test
adc
push
push
xchg
int3
nop
ja
jp
or
call
push
mov
jge
sbb
call
movl
out
mov
mov
sub
int3
pop
dec
add
cmpsl
push
xchg
xchg
or
dec
cld
adc
out
mov
cmpl
outsb
pop
in
test
into
mov
lcall
pop
jmp
adc
fxam
jecxz
dec
test
xchg
cli
cmp
sbb
ljmp
lret
jecxz
push
repz
shll
jns
test
jbe
lret
test
push
push
fwait
mov
test
movsb
lahf
and
sub
sub
cmpsb
incl
movsl
pop
leave
lcall
lcall
push
xchg
imul
cli
js
xor
push
xlat
sub
cmp
xchg
push
fimull
leave
push
sbb
ljmp
ljmp
jae
sbb
addr16
aam
push
ret
ja
inc
xchg
mov
call
pop
or
test
mov
insb
fwait
push
dec
scas
cltd
out
jle
mov
sbb
dec
inc
pop
push
jl
movsb
sub
push
ret
div
dec
out
stos
jge
cmp
mov
mov
call
mov
mov
lods
xor
and
fnstenv
push
aaa
incl
dec
mov
xchg
xor
mov
mov
cld
pushl
ret
dec
lea
mov
out
sub
fwait
into
fsubrs
pusha
pop
ljmp
mov
adc
push
or
std
fdivs
lcall
jmp
or
or
push
pop
out
or
jg
push
lods
xor
fbstp
dec
adc
imul
xor
popa
sbbl
or
sbb
pushf
sbb
mov
pop
cli
decl
leave
dec
or
or
push
ficoml
dec
jno
mov
sbb
incl
loopne
xor
test
mov
cmpsb
dec
push
push
add
or
mov
ss
and
mov
arpl
mov
es
mov
jg
mov
loopne
and
adc
lcall
call
fwait
sbb
loope
pop
ja
std
psubusw
lcall
leave
sub
jo
mov
xor
shlb
jns
jae
xchg
cli
cli
xchg
jb
push
int3
sbb
in
stos
loopne
sub
push
push
jmp
call
cli
lcall
inc
jecxz
mulb
ja
inc
push
dec
cmp
pop
xchg
in
ljmp
xchg
stos
xlat
test
push
clc
repnz
jge
cmc
lea
cmpsb
das
mov
jbe
adc
pop
and
loope
jne
inc
cli
mov
decl
push
ss
inc
xchg
cmp
push
jecxz
xor
xor
insb
pop
mov
pushl
sbb
pop
into
dec
imul
cli
call
adc
fildll
ficoms
in
sub
push
cld
lcall
aam
pop
mov
mov
sbb
or
adc
bndstx
call
inc
decl
fistl
sti
pop
ja
repz
lock
leave
mov
and
xorb
inc
insb
addr16
xor
lods
sbb
imul
sbb
js
xor
ljmp
dec
sub
jmp
push
adc
push
inc
int
mov
sbb
fucomi
lcall
test
pusha
push
ficompl
popf
pop
hlt
mov
clc
xor
mov
push
push
out
ljmp
sbb
push
imull
rcrl
insb
bound
cmpsl
xor
in
lods
mov
js
jae
pop
mov
fadds
test
out
jecxz
cmp
jmp
xchg
mov
jg
mov
mov
ljmp
sbb
inc
mov
aad
sbb
lcall
stos
arpl
ljmp
bound
xchg
gs
call
pop
dec
push
jnp
cmpsb
sbb
repz
sub
shl
es
movsb
pop
arpl
cs
sahf
loopne
jg
pop
ljmp
cmp
out
outsl
add
push
pop
pop
mov
push
jle
je
sbb
add
incl
dec
mov
fs
test
xchg
fmulp
ja
jg
loope
test
mov
out
pop
clc
dec
dec
outsl
cmp
xor
or
loop
lods
dec
jo
aas
or
sbb
add
jmp
andnps
decl
mov
jno
rorb
mov
cmp
sti
inc
cmpsl
lcall
jg
sub
jbe
dec
jp
mov
pop
loope
or
adc
ljmp
xchg
pusha
outsl
pop
lcall
adc
add
mov
and
jg
cli
addb
repnz
push
xchg
jnp
mov
in
or
out
or
call
push
xchg
xchg
pop
inc
test
shlb
decl
lock
aas
lcall
ret
sub
pop
jae
jge
pop
movsl
in
call
clc
pusha
iret
mov
add
xor
mov
inc
add
fstl
loope
add
dec
stc
add
sub
inc
ds
inc
jnp
sub
xchg
push
call
xchg
fwait
pop
in
testl
inc
push
xor
in
ret
sbb
sub
mov
call
ljmp
fadds
pushf
ret
lds
adc
jb
mov
adc
in
cmpsb
cmp
popf
cmp
stos
imul
clc
in
movsl
adc
sti
test
fwait
dec
and
adc
mov
jg
dec
mov
and
cmp
inc
xchg
daa
test
fidivs
call
decb
xchg
gs
fiadds
jbe
nop
mov
out
add
jns
jae
adc
lcall
test
gs
adc
jp
nop
xor
xchg
cmc
repz
jmp
mov
fs
push
insl
or
insb
andb
test
sub
fnstsw
incl
popa
in
cmp
push
sub
lods
lods
adc
add
and
es
cmp
mov
pop
sub
sub
lods
fs
mov
ljmp
inc
inc
test
or
stos
sbb
adc
popf
add
cmpsl
xor
mov
jg
sbb
mov
popf
enter
sbb
pop
mov
sbb
mov
call
shl
cmp
out
mov
sbb
mov
jbe
sbb
pop
scas
je
mov
xor
cmp
pushl
push
lret
xor
xor
movsb
out
test
cli
ljmp
roll
cmc
adc
cli
sbb
or
fiaddl
xchg
cli
call
call
aad
testb
mov
and
andl
pushl
into
ret
out
mov
adc
int
cmp
add
incl
jmp
sub
sbbb
fdivp
mov
lea
insl
or
testb
test
repz
jmp
inc
push
enter
jae
sbb
xchg
stc
cmp
into
jmp
jo
inc
cli
popa
cmp
sub
in
les
jl
fists
call
ljmp
data16
pop
movsl
nop
push
jmp
pop
sub
addl
push
aas
fisttps
jg
push
sbb
test
sti
adc
leave
lcall
testb
rcr
loopne
or
stos
push
pop
cmp
xchg
fnsave
add
xchg
xchg
nop
xor
lcall
arpl
add
shrl
push
mov
mov
test
loop,pt
add
imul
push
adc
pushl
dec
mov
mov
cs
fidivrl
imul
rorl
cld
dec
sti
or
lods
pop
rolb
in
inc
push
push
pusha
icebp
xchg
pop
cwtl
inc
icebp
mov
leave
je
dec
adc
mov
pop
bound
cmp
fadd
mov
ljmp
adc
js
int
sbb
mov
cmpsb
fmuls
dec
mov
outsl
leave
or
rorl
call
add
nop
push
adc
jecxz
cmp
xor
pop
cmp
incl
xchg
sbb
jle
movsl
xchg
push
dec
ljmp
leave
lea
shl
xchg
cmp
inc
outsb
data16
cltd
cmp
mov
std
call
lret
xor
cwtl
divl
jno
mov
fnstcw
gs
jge
add
test
call
push
add
mov
or
mov
dec
add
jg
stos
ret
popa
jo
jmp
mov
std
xchg
outsl
aam
lret
cmp
push
add
outsl
jg
fwait
repnz
lods
ret
inc
arpl
adc
push
testb
sbb
jmp
jle
xchg
or
out
ljmp
repz
scas
in
mov
inc
mov
fnstsw
mov
in
or
push
pop
push
inc
mov
rcrl
repnz
aam
je
rolb
jmp
dec
sbb
dec
sbb
adc
js
mov
cld
out
sahf
xor
loop
mov
aaa
mov
or
iret
lret
and
call
sbb
fdivl
mov
xchg
push
inc
ret
pop
jg
or
fmulp
mov
xor
add
bound
lcall
mov
dec
push
pop
pop
sti
in
movl
add
dec
cwtl
cmpsb
jle
xchg
xchg
mov
cld
sub
xlat
jecxz
rcll
dec
pop
std
pushl
pop
jmp
les
pop
sbb
dec
std
pushl
add
cli
adc
pop
jl
add
das
daa
cli
jl
push
lret
stos
clc
test
std
scas
xchg
and
aam
mov
bound
cmp
lcall
push
sbb
es
xchg
ja
add
mov
mov
dec
or
or
fsubrs
fcompl
sbb
mov
repnz
fidivs
and
lcall
push
mov
inc
cli
iret
jo
pop
ja
movsl
adc
leave
push
out
aad
test
mov
das
pop
dec
mov
int
push
ror
xor
rclb
pop
pusha
mov
sbb
push
aad
add
movsl
jle
fbstp
stc
push
xor
add
inc
add
dec
std
rclb
decl
lcall
jae
filds
jg
imul
cltd
fdivs
dec
sbb
mov
pop
clc
ljmp
faddl
push
pop
movsl
mov
cmp
sbb
out
call
cmp
pop
or
mov
daa
jo
sub
cmc
stc
hlt
incl
stos
cmc
cmp
repnz
je
xchg
out
shll
enter
xchg
add
in
std
jg
ret
pop
test
push
cmpsb
pop
push
stos
xor
sti
fwait
addr16
ljmp
fsts
aas
jmp
pop
lods
push
cmpl
decl
test
mov
pop
cltd
lahf
popf
push
xchg
adc
inc
aam
lcall
pop
sub
pop
dec
ficompl
insl
in
sarl
add
clc
neg
data16
dec
push
mov
iret
mov
lds
jbe
sbb
cmpsb
xor
cmp
ja
pushl
insb
mov
aad
or
xchg
stos
test
jb
inc
push
jo
sub
jmp
push
call
push
xchg
sbb
std
pop
mov
adc
mov
lds
icebp
mov
xchg
jo
cld
adc
lea
incl
lods
sahf
sti
aam
scas
mov
fbstp
sub
pop
les
idivl
mov
int
lods
push
dec
cmpsb
xchg
xor
ds
cltd
and
pop
xor
jmp
mov
push
call
mov
fcmove
adc
ljmp
movsb
jmp
lods
call
popf
and
jmp
jb
xchg
sbb
and
testb
mov
ljmp
inc
push
pop
addr16
jge
std
call
je
loope
ja
fistpll
stos
jns
cltd
mov
sbb
loope
and
mov
mov
lcall
push
pop
dec
xor
push
out
jmp
pop
jb
orb
inc
mov
in
xor
cmp
in
jg
mov
fidivrl
stos
enter
dec
das
repnz
das
icebp
ljmp
xchg
ljmp
push
add
notl
inc
or
decb
aas
ret
aas
lret
push
lahf
out
loope
popl
clc
jg
dec
xor
inc
push
in
lods
popa
and
add
mov
icebp
data16
stc
jbe
adc
xor
test
xor
sub
fbld
dec
dec
lea
inc
xor
pop
bound
outsb
fsubrs
aam
stc
adc
mov
pushl
xchg
js
mov
adc
adc
rcrl
imul
ljmp
imull
xchg
sbb
andl
jmp
mov
pushl
enter
xlat
fistps
addl
push
jg
pushl
push
les
cmp
call
clc
call
leave
or
sti
pop
ss
shll
cwtl
jae
call
pop
jo
push
dec
jmp
shl
mov
or
addb
lcall
stos
sbb
push
adc
das
out
rolb
lret
mov
loopne
mov
push
stos
fcompl
jecxz
lgs
lock
add
inc
pop
cmc
call
cmp
outsb
mov
in
je
fwait
sbb
lcall
pop
push
mul
lcall
xor
lret
push
lcall
out
in
sub
std
mov
add
or
mov
fidivs
or
xor
clc
ljmp
dec
lock
cmp
cmp
aam
sarb
push
cmp
lret
sar
rol
dec
xchg
repnz
pusha
mov
int
jb
pop
mov
aad
pusha
inc
sub
xor
sbb
cmp
or
repnz
jmp
sbb
pop
pop
mov
or
and
das
cld
jg
push
sahf
sub
lods
bound
xor
pop
jb
sub
stc
fbstp
cli
out
sub
mov
test
clc
subb
xchg
clc
stos
sbb
or
in
rep
orl
decl
decl
dec
pusha
aad
pop
repnz
mov
adc
in
jns
push
incl
popa
sbb
lods
sbb
add
sub
aas
pop
movsl
cwtl
push
xchg
mov
nop
test
lods
ja
outsb
fcmovnb
ds
jl
lods
inc
or
cld
lods
loop
sub
dec
inc
add
daa
aam
dec
aas
arpl
jg
shlb
in
in
lret
adc
xchg
mov
xorb
inc
lea
clc
xor
adc
bnd
dec
cld
mov
lods
fcmovbe
sbb
stc
inc
jns
scas
mov
jnp
mov
mov
outsl
xlat
and
test
into
ficoms
jmp
rcr
xor
mov
sbb
hlt
imull
or
fisttpl
xor
arpl
jg
xchg
mov
ljmp
add
mov
mov
mov
sar
mov
pop
push
mov
loop
jg
mov
xchg
imul
icebp
jmp
xor
arpl
jb
in
and
jae
add
cli
push
loop
or
lea
je
mov
sub
orb
mov
inc
push
call
push
jb
rcrb
lds
ss
cmp
push
xchg
mov
lahf
cmc
imul
pushl
sbb
out
pop
scas
ss
inc
lds
int
aad
out
cli
or
pop
adc
pushl
or
jbe
je
jae
dec
mov
aaa
lcall
in
cmc
mov
jnp
adc
cmpsb
enter
aam
arpl
lahf
inc
fidivrs
mov
jne
push
incl
enter
xlat
adc
xor
dec
sbbb
lods
jge
aas
cs
into
add
icebp
add
push
sbb
leave
ja
popa
fwait
int3
incl
aaa
fdivs
inc
out
mov
sub
cmp
jg
lcall
xor
mov
sbb
scas
mov
fwait
pop
arpl
or
pushl
movsbl
xor
add
jl
pop
inc
ss
or
incl
sub
mov
fldenv
fdivrl
mov
arpl
jno
outsb
movsl
cmpsb
clc
decl
xor
adc
fnstsw
sbb
fiadds
cmc
mov
inc
dec
mov
xlat
mov
ljmp
or
xlat
inc
push
mov
pushf
and
call
pop
shlb
push
bnd
clc
xor
es
fldcw
push
mov
cmp
rcrl
jmp
mov
fiadds
movsb
repnz
lret
mov
mov
jecxz
decl
sbb
stos
or
jge
xchg
pop
stos
imul
imul
mov
pushl
and
xor
dec
xor
adc
xor
add
clc
push
movsb
mov
daa
or
cmp
mov
insl
dec
push
push
ds
subl
notb
loopne
js
mov
ljmp
mov
stc
fnstsw
lods
lock
ja
fadd
xchg
jmp
sub
sahf
jmp
mov
sbb
add
pop
js
inc
or
fdivs
jecxz
pusha
mov
arpl
adc
das
inc
xor
sbb
cld
jg
clc
test
test
adc
or
mov
ljmp
xchg
pop
movsl
push
call
icebp
inc
dec
jae
adc
mov
dec
movsb
ret
lret
jmp
xlat
in
fildll
aaa
sub
vzeroupper
adc
lods
pop
pop
mov
sub
mov
cltd
push
mov
clc
cmp
cmpsb
loop
mov
adc
notb
sub
sub
mov
in
mov
jg
pop
rcl
bound
subl
sub
jl
push
mov
sub
ss
sub
lods
sbb
jg
call
test
addr16
add
je
pop
mov
movsl
mov
adc
cli
dec
imul
mov
sub
mov
out
aaa
inc
dec
adc
pop
pushl
cli
mov
mov
repz
xorb
dec
daa
add
dec
adc
add
push
xchg
push
xor
or
dec
cld
inc
aad
lcall
hlt
jg
stos
sub
ljmp
decl
pop
mov
loope
fs
inc
fidivrl
aam
mov
decl
pop
xchg
dec
inc
lods
sbb
mov
inc
stos
pop
or
pop
cmp
jmp
mov
js
and
jg
bound
call
incl
les
jns
sti
outsb
push
ret
sub
sub
inc
sub
decl
pushl
clc
rorb
push
adc
pop
push
inc
fiadds
xchg
add
mov
sti
sti
bound
adc
aad
push
mov
ljmp
incb
inc
out
test
sti
xchg
jbe
nop
mov
mov
jle
cmp
or
push
dec
push
mov
xchg
jl
pop
cli
lcall
xor
mov
dec
push
cmp
dec
icebp
pusha
jg
xchg
add
fistpl
mov
xlat
stc
ja
or
lahf
pushl
movsl
xchg
mov
in
orb
jg
int
inc
jmp
sub
add
das
imul
call
outsl
push
mov
xchg
les
inc
mov
mov
xchg
in
mov
inc
adc
xchg
outsl
shlb
insl
incl
xchg
cli
push
dec
int3
movsb
in
mov
js
jp
icebp
in
aas
ljmp
sub
add
mov
in
cmp
loopne
and
xchg
jmp
call
lock
loop
decl
ficomps
mov
in
decl
cwtl
cltd
dec
add
div
clc
xor
xchg
cli
and
mov
das
mov
jno
nop
sub
inc
push
sub
ffreep
stos
loopne
push
inc
out
ret
out
mov
icebp
neg
pop
lcall
loopne
clc
mov
fistpl
push
mov
xchg
or
cmpl
ja
imul
push
mov
sbb
inc
lcall
push
insl
mov
pop
in
add
call
fucomp
pushf
ljmp
pushf
sub
cmp
lret
and
mov
in
jno
jg
dec
xor
mov
xor
sbb
test
or
rcl
jns
sbb
xchg
js
jle
pop
cmp
or
pop
fsubrl
sub
ror
xor
outsb
imul
push
and
add
imul
clc
jbe
mov
ljmp
call
pushf
pop
mov
pop
rcr
addr16
mov
push
push
lock
adc
lret
adc
scas
or
xchg
dec
jecxz
enter
add
push
dec
call
popf
inc
out
ja
mov
lret
fwait
sub
pop
jge
hlt
mov
mov
inc
lcall
inc
lock
stos
loope
es
stos
data16
xchg
pop
mov
test
push
pop
loop
decl
push
stos
push
adc
sbb
sahf
ret
outsl
sbb
idivl
xchg
ljmp
icebp
incl
cmpsb
movsl
jae
mov
popa
xor
sti
cmp
out
jg
jmp
fmul
gs
aas
push
xchg
pop
inc
dec
jmp
pusha
sub
ffree
push
mov
aaa
clc
call
popl
jp
xchg
mov
jge
jno
pop
dec
jge
xchg
dec
pushl
decb
jp
cmp
cmp
jbe
subb
es
fisttpl
repnz
test
fisttpll
add
dec
cmp
sub
test
in
loopne
in
xchg
jge
add
adcb
mov
pop
in
outsl
cld
pop
xor
fsts
sbb
sub
push
cmp
lcall
or
mov
sbb
mov
lods
or
sahf
nop
cli
pop
clc
call
aas
dec
xchg
sub
jns
xchg
mov
mov
sub
aaa
aaa
insl
mov
call
dec
test
or
cmp
ds
test
jge
mov
mov
jnp
mov
outsb
lods
jecxz
pop
hlt
rep
ja
cmp
leave
cltd
xchg
insl
pop
mov
imul
das
fisttpll
push
cmpsb
pop
fwait
push
push
fsubrl
mov
sar
lcall
lcall
adc
xor
push
sub
scas
mov
cmpsl
xchg
pop
xchg
call
push
mov
ds
dec
inc
enter
mov
inc
xorb
movsl
cmp
decl
fwait
cmp
sahf
mov
jb
sbb
out
or
cwtl
std
mov
arpl
or
out
test
pop
jp
adc
test
hlt
ret
inc
ljmp
hlt
mov
adc
bound
neg
xchg
in
jae
xchg
mov
or
shll
incl
pusha
popf
int3
sub
das
jle
or
inc
nop
ds
sar
pushl
dec
ficoml
ljmp
ljmp
mov
cld
test
jbe
jmp
movsb
sbb
imul
lock
push
xor
cmp
mov
pop
ljmp
outsb
ds
js
mov
aas
xor
incl
sarl
pop
push
mov
jge
dec
fwait
jl
push
mov
cmp
incl
iret
push
cwtl
sahf
mov
fwait
cli
jae
mov
lcall
sbb
ret
jnp
xchg
int
mov
pop
out
scas
pop
pushl
cli
aad
jge
or
test
xor
out
outsb
jle
push
lret
decl
imull
stos
mov
insb
jne
dec
add
pop
jecxz
mov
and
pop
and
mulb
daa
jecxz
cmp
dec
jg
jbe
jg
xchg
imul
and
push
lds
push
sbb
std
mov
pop
inc
jno
push
test
mov
mov
inc
push
and
fistps
pop
test
das
std
dec
ljmp
or
imul
fsubrs
inc
cmp
mov
xchg
aas
sub
xchg
dec
lret
jb
and
incl
add
inc
xor
jg
repnz
adc
mov
mov
or
out
sub
into
addr16
or
sti
incl
dec
int
push
and
ret
cmp
fidivl
or
sub
orl
dec
jp
mov
sub
scas
sahf
pop
mov
ljmp
push
shl
sbb
cmp
jp
shll
and
jmp
jecxz
mov
inc
ret
daa
shl
cmp
std
daa
mov
cld
or
pushl
pop
aas
add
int3
arpl
xchg
adc
lcall
mov
fimull
xor
lcall
push
test
js
aaa
clc
mov
nopl
and
push
out
mov
sub
or
jo
cli
lcall
mov
and
insl
push
and
cmp
xlat
mov
pop
xchg
insb
in
int
sub
ljmp
test
mov
addr16
leave
adc
mov
call
orl
or
sbb
bound
outsl
je
leave
repnz
jle
mov
std
ds
ret
loope
ss
shr
xor
mov
decb
and
inc
xchg
div
pop
fs
ljmp
cld
mov
pop
or
test
jle
adc
jne
cmp
and
jmp
das
ljmp
ficoml
pop
sub
iret
pop
popa
fistl
mov
mov
sub
flds
xor
xchg
jg
outsb
add
ret
mov
lcall
pop
rolb
movsl
call
ja
cmp
ret
cmp
leave
sbb
decl
jge
cmp
imulb
iret
nop
aas
ffreep
and
fistl
fidivrs
inc
and
sar
dec
sbb
cld
or
outsl
add
arpl
sbb
or
ljmp
sbb
pop
push
dec
sbb
jne
push
xchg
cli
ljmp
es
call
cmp
shlb
xchg
call
outsl
jmp
xor
incl
inc
cmp
rorl
arpl
popa
push
loop
test
inc
adc
mov
movl
jmp
mov
mov
mov
stos
mov
insl
lcall
pop
aaa
push
push
cmp
jmp
rorl
loopne
mov
push
inc
fadds
add
fists
inc
scas
lahf
shrl
dec
mov
jp
aad
push
inc
and
into
and
mov
and
es
or
mov
sti
push
inc
xor
mov
cmp
jg
ficoml
and
rol
jns
push
roll
push
lds
cmp
out
xchg
jmp
cmp
mov
xchg
sbb
das
lock
pop
adc
inc
pop
jbe
ficomps
xchg
lcall
out
cmp
ret
jecxz
xchg
add
aam
pop
pop
mov
inc
repnz
inc
outsb
xchg
xchg
sbb
xchg
jecxz
mov
les
and
fdivrp
es
xor
sub
divb
mov
adc
inc
adc
lods
adc
ficompl
pushf
clc
call
test
mov
subb
pop
out
xor
shrl
pop
mov
sub
pop
idiv
pop
add
jmp
dec
cmp
aam
sti
push
push
fisttps
lods
and
mov
icebp
daa
pop
mov
cmp
sti
sub
je
lock
shlb
xchg
imul
shr
loop
inc
pop
xchg
decl
sbb
cmpsb
dec
jecxz
mov
pop
pop
cld
inc
pop
and
jb
pushf
dec
pop
pop
inc
fwait
lds
cmp
pop
std
ret
pop
nop
mov
cmp
jg
adc
inc
jecxz
fdivr
dec
aaa
push
std
or
or
push
cmp
pop
fildll
jg
sbb
in
fwait
in
add
fwait
in
ljmp
dec
repnz
fists
bound
in
fwait
add
aaa
ss
mov
push
ss
iret
xchg
arpl
xchg
mov
fsubl
adc
outsl
pop
jmp
lret
or
mov
ja
inc
add
dec
xor
mov
decl
lods
mov
mov
pop
xchg
cmp
repz
pop
and
movsb
popa
aaa
ja
call
movsb
and
fmuls
or
ds
dec
pusha
mov
and
ja
das
sub
aaa
lcall
xchg
enter
aam
idiv
jns
jmp
mov
xchg
movsb
pop
jg
add
pushl
stc
ja
lds
inc
push
jg
loope
int3
scas
xor
les
shl
in
xor
pushl
aam
mov
je
arpl
scas
add
mov
mov
cmc
jle
xorb
lret
ds
mov
jnp
idivl
pop
sbb
or
pushf
ljmp
push
push
call
adc
out
jge
das
lods
mov
mov
fldenv
out
lods
pop
mov
lcall
shll
pop
jmp
out
lea
jns
sub
fnstenv
inc
xchg
fdivrl
pop
xchg
ljmp
cmp
and
xchg
repz
ljmp
or
js
pop
inc
or
cwtl
mov
mov
mov
fnop
ror
imul
insb
mov
iret
mov
pushl
repnz
mov
xchg
lods
mov
lock
js
test
int3
in
arpl
call
jmp
sub
mov
test
orb
lret
decl
call
or
xor
imul
mov
idivl
push
jmp
in
inc
pop
stos
push
xchg
push
cmp
dec
sub
mov
fisttps
jg
ljmp
xchg
mov
fistl
pop
sbb
es
sti
cld
and
fcos
ljmp
cld
push
idivb
mov
mov
aam
jg
les
in
bound
mov
jns
sbb
jae
pop
int3
fidivrl
ljmp
rcrl
fwait
loop
negb
sbb
movntq
bound
push
lcall
stos
jmp
aam
sbb
mov
aam
scas
push
lea
ljmp
mov
xor
xor
add
inc
insl
mov
sub
nop
jne
cmp
les
mov
lods
inc
lcall
sbb
jns
les
add
pop
mov
aam
cltd
cld
jnp
or
mov
sub
fldl
or
sarl
ds
dec
jne
xor
pop
mov
loopne
test
xor
sahf
push
ficoms
mov
incl
lcall
or
andb
mov
jne
fistl
dec
shlb
jb
push
outsl
std
mov
in
jo
or
les
js
out
fistl
call
test
jle
in
rclb
jmp
dec
popa
mov
push
adc
shll
mov
test
cmp
icebp
dec
les
mov
sti
in
or
xchg
dec
decl
mov
lahf
or
enter
dec
sar
pop
bound
imul
pushl
clc
xlat
inc
jle
ja
shll
pop
xchg
stos
xor
cmp
lcall
sbb
test
or
sar
mulb
shlb
cld
arpl
mov
loopne
movsl
jge
add
ret
loopne
sub
jmp
aas
mov
jmp
mov
xor
add
mov
jl
jg
fcomip
xor
or
sub
pushl
adc
fmull
xor
js
mov
adc
sbb
or
inc
les
aam
test
lea
mov
negl
jo
dec
mov
call
mov
in
or
je
decb
xor
mov
xchg
lret
jo
adc
loopne
xchg
cld
xchg
jge
sbb
sub
inc
mov
xchg
cmp
rcrb
enter
sbb
pop
js
jmp
mov
stos
push
adc
inc
mov
in
ds
dec
sub
cld
jns
call
test
call
pavgb
sub
sbb
inc
notl
scas
sar
jmp
jns
adc
je
das
aad
mov
xor
cmp
mov
jo
push
popa
enter
mov
scas
test
pop
inc
enter
adc
decl
inc
mov
subb
mov
dec
pop
jns
xor
repz
cmp
das
sub
cmpsb
jg
or
jbe
fistpll
or
mov
cmp
rcr
adc
cmpl
lock
ljmp
lods
ljmp
mov
lea
testl
out
xor
dec
insl
jl
or
inc
lcall
popa
dec
jle
in
push
dec
pop
pop
call
aas
add
stos
sar
jns
pop
inc
push
push
arpl
cmp
mov
and
mov
repz
mov
cmp
pusha
aad
out
loop
rorl
out
in
pop
repnz
scas
es
dec
test
cli
fcmove
and
and
jnp
sbb
js
xchg
out
shl
xchg
sbb
xchg
jge
xlat
decl
das
dec
pop
adc
rolb
lds
mov
jle
shll
pushf
test
decl
xor
cmp
add
mov
sbb
or
insb
mov
jle
icebp
ljmp
and
jmp
push
aam
pop
mov
inc
cld
ds
fidivrl
movsl
repz
dec
in
cld
ljmp
mov
dec
pop
lock
or
cmc
das
push
call
cmp
dec
dec
pop
cli
ljmp
jns
and
outsl
lret
sub
pop
jg
jmp
shlb
insl
push
lea
mov
mov
lahf
lret
loopne
decl
in
pop
or
popa
clc
or
mov
inc
mov
or
inc
lods
cmp
and
xor
popf
or
andb
adc
xorb
or
add
stos
int3
cltd
les
mov
mov
adc
or
add
push
mov
mov
sbb
cmp
and
pop
dec
mov
cld
ljmp
lcall
fldt
pop
cmpsl
jo
mov
loopne
or
lcall
jmp
pop
clc
dec
mov
ds
mov
es
ljmp
std
call
insb
gs
shrb
sub
lret
sub
fildll
mov
mov
push
inc
xorl
cmpl
dec
jl
jbe
pop
loope
shrb
nop
lcall
adc
ret
incl
xor
sti
pop
adc
cmpsb
mov
mov
pop
cmp
xchg
fsubs
repz
call
push
dec
mov
loop
pusha
and
mov
fsubr
jge
sbb
push
fucomip
xlat
mov
inc
js
daa
adc
cmp
aaa
iret
fcmovu
xor
xchg
in
ljmp
mov
je
lret
fldlg2
aam
rcl
ja
call
andb
dec
iret
jp
scas
mov
in
pop
xor
sbb
sbbl
inc
scas
mov
cmp
or
popf
mov
mov
dec
imull
in
mov
jbe
scas
or
push
imul
dec
loopw
fs
scas
push
outsl
cld
call
and
je
sbb
push
xor
push
jmp
popf
add
xor
push
add
mov
lods
add
ds
push
mov
call
lcall
or
mov
or
jge
enter
stc
js
or
incl
or
enter
hlt
rcrl
mov
and
hlt
clc
cld
lcall
push
int
movsl
pop
xor
clc
inc
testb
enter
jp
push
testb
mov
orb
push
add
mov
lcall
pop
adc
add
mov
arpl
repz
add
lret
lcall
jmp
nop
stc
or
js
adc
sarl
in
push
or
ljmp
lock
cld
sub
stc
nop
js
mov
pop
lret
push
xchg
fs
jnp
js
ljmp
add
jge
ss
mov
rclb
xchg
scas
arpl
lods
xchg
lds
call
ror
mov
outsl
xchg
jmp
and
xchg
dec
jg
dec
cld
in
lcall
adc
pop
or
sbb
idivl
mov
mov
push
je
incl
cmp
adc
stc
fucomp
mov
dec
adc
mov
test
std
incl
movl
ret
or
inc
addr16
push
movsl
sbb
data16
data16
jmp
aaa
xchg
cmp
pop
mov
icebp
push
push
int
mov
mov
aaa
pop
call
inc
dec
andb
xor
imull
jo
lock
lcall
xor
lcall
repz
xor
js
cmp
sbb
mov
xlat
jb
leave
dec
ret
dec
fcomps
idivl
dec
and
mov
xor
lock
sti
jle
xchg
ss
sub
call
pop
imul
ds
add
xlat
adc
mov
inc
lcall
inc
mov
scas
mov
add
shl
push
fcompl
sbbb
test
cmpsb
invd
dec
inc
xor
movsl
ljmp
xor
or
xor
ficompl
pop
je
imul
fisubrs
js
jb
bound
pushf
mov
or
rcrl
push
or
cli
aad
mov
les
or
icebp
stc
jnp
fimuls
repz
xchg
xchg
fs
sarl
jo
fwait
xor
pop
loopne
pop
call
bnd
mov
pop
pop
lods
je
add
push
ret
lahf
cmp
sub
or
cld
jl
test
inc
fwait
push
xlat
push
inc
mov
sub
out
jp
incl
test
mov
test
roll
sbb
jg
imul
mov
pop
jg
decl
add
lods
add
sub
dec
inc
xor
cld
jmp
adc
addl
cs
adc
cmpsl
xchg
pop
pop
adc
scas
in
dec
and
xchg
ret
xor
or
add
fisttps
in
jno
adc
das
lret
mov
clc
negb
push
mov
and
enter
mov
jne
out
shlb
jg
lcall
mov
pop
jge
repnz
loope
scas
sbb
jg
sarl
decb
dec
push
outsl
push
out
sub
stos
lcall
scas
sub
ror
pop
pushl
ret
sub
dec
xor
sbb
stc
mov
mov
push
sub
and
icebp
out
mov
ljmp
iret
sbb
cld
pop
sbb
ret
das
test
stos
scas
xchg
fcomip
dec
sub
movsb
mov
cli
inc
inc
sbb
or
sub
inc
ret
jecxz
mov
jecxz
jne
mov
mov
sub
insl
mov
xor
inc
sarb
mov
incl
imul
adc
fiadds
divl
add
jg
push
xor
insl
push
push
inc
mov
sbb
or
lcall
mov
rcr
lret
insl
mov
out
adc
ret
mov
mov
incl
in
push
cmpsb
pop
or
shlb
popa
ja
imul
jmp
movsb
daa
insl
hlt
lcall
add
mov
inc
push
imul
xor
test
call
ljmp
mov
les
sbb
fs
xchg
daa
sbb
fisubl
cmp
loop
mov
push
mov
inc
sub
dec
mov
sub
mov
add
lcall
add
pop
push
sub
aaa
inc
int
out
inc
and
xchg
data16
fldt
jmp
or
setl
or
fstps
addr16
jae
ljmp
mov
xchg
mov
pushl
mov
stos
or
push
adc
sarl
mov
rcll
ljmp
icebp
xor
js
dec
mov
mov
add
ljmp
mov
incl
push
lods
sbb
lcall
inc
inc
enter
lock
and
xlat
adc
mov
rclb
enter
jns
fs
gs
insb
dec
sub
shll
cmp
repnz
lcall
das
pop
xlat
mov
push
mov
pusha
lret
and
fsts
incl
sub
outsl
ds
jnp
cmp
test
loop
decl
xchg
fcomi
mov
mov
pushf
fsubl
imul
jg
das
cld
push
out
sub
clc
sahf
aad
loopne
mov
xchg
ficomps
push
into
orb
pop
pop
xor
xchg
add
pop
cli
inc
lcall
cmpsb
loope
inc
arpl
adc
sarb
das
lock
mov
push
sbb
or
mov
ss
mov
pop
mov
jmp
les
and
push
adc
cmp
jle
dec
inc
call
add
shlb
aas
push
orl
lock
mov
jae
les
or
ret
outsl
std
aaa
dec
jl
push
fadd
xlat
lahf
fimuls
push
mov
xchg
adc
cmp
aad
sub
xchg
pop
jmp
push
test
pop
aas
adc
ret
xchg
lahf
into
icebp
test
mov
pop
hlt
cmp
sbb
cli
daa
jns
jle
daa
cltd
dec
repnz
xchg
outsb
xchg
das
mov
inc
mov
push
mov
ja
xchg
leave
adc
in
jg
mov
dec
adc
rclb
sbb
imul
loope
sub
cs
mov
loop
daa
xor
or
add
int
mov
add
sub
std
pusha
mov
xchg
jno
dec
dec
test
mov
loope
and
mov
mov
leave
sbb
nop
in
or
movsl
test
inc
cmp
inc
jo
xchg
inc
stc
aad
push
push
loopne
stos
mov
stos
pop
adc
xor
cmp
andb
xor
cmp
jno
pop
call
dec
fdivr
shl
add
data16
mov
push
push
mov
jmp
inc
pop
cmp
mov
add
sar
ja
xor
jne
inc
jne
aad
pushl
jge
jno
mov
mov
loope
jo
sbb
push
aas
popa
push
mov
pop
lahf
adc
cli
xchg
and
jg
jg
add
xchg
aam
mov
add
out
je
dec
loop
mov
pop
ja
or
and
adc
jo,pt
daa
in
adc
fldt
pushl
mov
out
fldcw
xorl
add
cltd
add
lods
push
pushl
clc
andl
daa
stos
out
mov
loopne
xor
je
mov
lcall
into
aaa
lock
test
lret
sbb
div
inc
cmpsl
adc
lock
clc
push
inc
stos
xor
inc
pop
ffreep
insb
imulb
gs
push
push
pop
insl
inc
or
ret
test
push
or
push
pop
dec
std
lcall
cltd
lahf
outsb
inc
push
mov
xor
shrl
mov
xchg
in
pushl
aaa
push
cmp
add
mov
outsb
mov
fbld
shrb
lea
cmc
sbb
jmp
dec
push
fucomi
pop
mov
clc
add
or
inc
mov
xor
dec
call
call
cmp
cld
or
sub
mov
test
lret
incb
cmpsb
cmp
ljmp
xchg
cs
mov
jae
push
enter
data16
jmp
sub
incl
push
and
imul
sbb
icebp
inc
sti
xchg
xor
pop
lds
xchg
into
cmpsb
xlat
pop
movsl
xor
popa
daa
and
mov
call
incl
and
push
push
dec
out
mov
xlat
jo
jnp
jmp
daa
cmp
xchg
jmp
push
andb
fdivs
sahf
and
cmp
movsl
pusha
jg
iret
fisttpl
das
gs
inc
pop
xor
es
add
cmpsl
outsb
xlat
xchg
xor
in
iret
decb
inc
cmp
jne
pop
cltd
cmpb
imul
sub
mov
das
and
shll
xchg
sbb
jp
fnstsw
ljmp
mov
shr
andb
daa
pop
call
decl
in
xor
je
movsb
loope
decb
lcall
pop
sub
ljmp
repz
or
jb
add
sbb
cmpsb
jg
jp
sbb
adc
mov
add
dec
das
push
lahf
ds
jno
ret
mov
jns
lea
cli
jnp
xor
rol
incl
loope
xchg
lods
pushf
pop
mov
jnp
lcall
out
or
pop
pop
xchg
lock
call
je
movsl
ss
adc
sbb
xor
lahf
mov
cmpsb
xchg
mov
mov
xchg
int
xchg
mov
pop
call
dec
mov
hlt
push
inc
fnsave
sahf
addr16
jne
dec
sub
mov
adc
jnp
insb
inc
or
inc
cli
cmc
cmp
push
test
adc
push
cmpb
sbb
ljmp
mov
fbld
ret
dec
iret
imul
sub
lods
lcall
pop
imul
jb
adc
push
aad
stos
adc
popf
gs
mov
mov
loope
loop
sbb
clc
xchg
jmp
repnz
jne
adc
decl
mov
popa
popf
mov
mov
xlat
xor
aam
sub
repnz
fimuls
mov
sar
cmc
adcl
push
mov
jmp
cmpl
shlb
mov
push
adc
imul
xchg
jp
mov
fnstsw
pop
mov
popf
cmpb
lahf
add
incl
sti
xchg
addr16
sahf
dec
pop
sbb
jnp
das
mov
add
inc
out
in
sub
sub
push
mov
cmp
fidivl
pop
or
dec
inc
push
xchg
push
ret
incl
adcb
add
adc
push
stc
dec
in
sti
sub
in
popf
pop
xchg
stc
add
aas
decl
scas
pop
jnp
and
add
pop
pusha
inc
dec
xor
or
ficomps
mov
xchg
xchg
lods
xor
cld
jg
decl
mov
lods
orb
sub
in
mov
xchg
mov
sar
cli
mov
dec
or
mov
pop
mov
lock
lret
mov
cmpsl
sbbb
aas
dec
hlt
jl
mov
jne
call
cs
bnd
push
sbb
call
xchg
dec
jp
int3
enter
xor
cmp
decl
jle
add
xchg
dec
inc
mov
cld
and
cmp
jl
and
xchg
incl
sub
inc
mov
inc
jmp
sbb
lahf
mov
dec
push
jns
fadd
imul
and
or
jnp
cmp
std
call
out
sub
push
mov
mov
jnp
mov
inc
sub
add
xchg
in
mov
inc
xchg
mull
imul
call
jno
jge
inc
jp
cmpsb
jle
stos
cmp
pushf
ja
decl
jnp
cs
or
call
outsl
stc
hlt
adc
in
push
add
push
repz
mov
pushl
mov
push
andl
mov
xorl
fnclex
and
int
hlt
iret
lock
insl
pop
jle
mov
mov
test
or
xor
sub
inc
ljmp
out
ljmp
cmc
decl
or
jnp
xor
loope
sub
loope
test
sbb
xor
mov
pushl
cmpb
leave
mov
pusha
cli
or
out
dec
sub
adc
icebp
cmp
dec
call
pusha
jle
lds
sar
je
jmp
or
adc
dec
rcl
ljmp
dec
xor
mov
pop
and
mov
xchg
dec
loope
adc
dec
in
ss
aaa
inc
call
pop
repnz
jle
mov
insl
ret
in
pop
lahf
dec
pop
ret
inc
nop
and
lods
fbstp
subl
insb
fisttpl
mov
les
out
mov
std
incl
cmpsl
fisubrs
hlt
fldcw
adc
pop
icebp
addr16
dec
mov
inc
inc
cmc
jg
dec
sub
push
mov
jl
mov
mov
pop
mov
repz
cmp
mov
adc
mov
ljmp
xchg
and
push
push
or
lret
push
mov
jae
lcall
int3
shll
mov
jns
ja
or
out
push
mov
dec
addr16
jmp
dec
pop
incb
enter
pushf
arpl
jg
pushl
and
mov
inc
jbe
imul
or
movsl
das
std
jp
mov
decb
cmpsb
pop
or
aam
ljmp
icebp
outsl
xchg
and
or
pop
mov
add
lcall
xchg
pop
pop
popa
jp
cmp
test
mov
pop
out
jle
mov
mov
cmp
jmp
adc
inc
frstor
in
cltd
push
jbe
loop
setg
xor
jo
data16
sbb
push
inc
dec
stos
inc
adc
dec
enter
add
jg
jmp
xor
das
loope
je
and
or
or
call
or
in
inc
sbb
loope
jne
fsubr
jle
loope
sti
test
int3
pushl
das
and
sbb
jne
jns
fdivp
les
std
scas
add
push
xchg
mov
call
incl
pop
fsubrl
jmp
lock
xchg
sti
out
push
jg
nop
cltd
call
adc
add
test
pop
mov
jecxz
push
xor
push
jmp
ss
or
inc
xor
ret
les
pushl
cmp
in
das
lret
xlat
fwait
sub
lods
xor
and
stc
jo
jle
and
push
pop
mov
jmp
push
mov
iret
hlt
push
push
scas
pop
roll
clc
pop
inc
pop
sub
cmpsl
sarb
jnp
adc
mov
leave
call
idivl
decl
cmpsl
test
movsl
imul
jmp
add
popa
mov
incl
sbb
pop
jns
or
rcl
dec
ror
xchg
mov
mov
sar
push
out
rorl
mov
sbb
or
xchg
out
jno,pt
jns
loope
adc
sub
pop
ljmp
jge
mov
and
adc
gs
lock
mov
sarl
iret
cmp
sub
test
mov
outsb
lock
ljmp
ss
shll
idivb
ljmp
mov
data16
call
popa
cltd
or
ficoml
fcom
test
push
rcrb
add
decl
or
jmp
and
dec
sbb
shrb
pop
or
mov
loopne
incl
std
mov
imul
jo
incb
loopne
lret
fidivrl
inc
dec
ljmp
es
pushf
sub
addl
cmp
lea
push
or
dec
js
adc
decl
or
jp
jne
aaa
icebp
mov
inc
mov
adc
aad
int
mov
push
pusha
push
dec
add
pop
stos
inc
mov
mov
xchg
fstpt
call
dec
cmove
outsb
popf
in
aam
mov
sub
packssdw
fs
jns
dec
scas
add
mov
je
rcrb
mov
mov
push
rclb
push
ret
ljmp
mov
std
addr16
scas
sbb
fcomi
cwtl
lods
rclb
mov
mov
incl
fs
push
pushf
cmpsl
lds
inc
ret
nop
ds
pop
aas
aam
add
popf
out
outsb
pop
std
cmc
inc
std
ljmp
cld
push
mov
mov
scas
mov
inc
in
call
call
mov
cmpsb
dec
dec
and
int3
je
jle
int3
call
inc
push
jns
in
or
leave
insl
push
dec
fwait
mov
or
nop
aam
loop
mov
add
out
mov
rclb
jno
mov
lcall
pop
push
arpl
lea
test
popa
mov
pop
push
outsl
clc
call
xchg
mov
loop
pop
lcall
lods
mov
jns
into
dec
movsb
jae
aam
mov
cld
jg
xchg
dec
mov
jb
mov
decl
pushf
dec
or
sub
fnsave
mov
add
test
mov
pushf
ljmp
mov
in
inc
sar
ret
and
add
cmp
ja
pop
lods
scas
in
pop
jmp
mov
lea
ds
popa
push
xchg
push
and
vpsadbw
stc
and
ljmp
jle
inc
push
xchg
call
out
repnz
cmp
dec
outsl
sub
sarb
pushl
mov
sub
cmpl
push
cltd
adc
adc
aaa
xchg
dec
mov
insb
pop
jmp
inc
jp
movsl
mov
and
lock
dec
xchg
dec
xor
sbb
ljmp
jmp
inc
xor
js,pn
mov
sbb
decl
mov
push
cmpsl
movsl
sub
rol
xor
loop
in
push
and
inc
jae
pop
sahf
push
movsb
ds
gs
les
iret
sbb
lea
out
fwait
mov
ljmp
je
pop
test
aam
cmpsb
inc
and
inc
lods
int
lods
jl
roll
in
test
adc
outsl
sbb
cmp
ljmp
hlt
lds
mov
hlt
nop
mov
ljmp
std
pop
mov
xchg
aam
aad
pop
mov
and
icebp
inc
xor
pop
pop
ss
adc
call
push
lret
bound
out
out
mov
add
into
xchg
leave
gs
call
mov
outsb
cmpsb
sbb
mov
lret
jp
cmpsl
push
cwtl
push
push
pop
sbb
fildll
ret
sbb
sub
lcall
adc
cmp
out
cmp
ret
push
dec
cmp
push
lea
lret
jbe
lret
mov
adc
icebp
push
dec
sub
imul
add
or
xchg
inc
inc
imul
push
xchg
add
jle
xchg
incl
ljmp
popf
dec
push
inc
adc
and
mov
mov
call
aas
mov
test
js
jae
icebp
or
mov
sub
xchg
jle
and
jl
jnp
jecxz
clc
nop
int3
fwait
pop
cmpsb
mov
adc
mull
jb
push
mov
loop
xor
clc
pushl
or
xor
mov
repz
xor
test
ljmp
fsubr
fdivrs
pop
aaa
orb
popa
xchg
outsl
enter
icebp
sub
incl
je
test
xor
dec
dec
sub
daa
jbe
negb
inc
repz
add
aam
aas
faddl
flds
dec
cmp
lock
mov
mov
and
lea
call
xchg
and
decl
dec
xchg
sub
gs
sbb
ret
fwait
mov
aam
mov
push
dec
sbb
dec
loop
push
sbb
push
int
jnp
pushl
incl
enter
mov
outsb
outsb
out
movsl
insl
adc
jp
ljmp
lcall
sub
xlat
movl
cmp
andnps
add
mov
dec
mov
nop
lods
lret
push
jb
jecxz
mov
ljmp
bnd
ljmp
inc
rorl
xor
call
hlt
mov
push
push
push
mov
lret
lahf
stos
push
lcall
jl
adc
das
lock
mov
stos
mov
test
xor
je
and
xchg
std
pop
inc
test
imul
mov
xor
into
push
adc
sub
stos
sub
arpl
push
xchg
out
cmpsl
test
jg
cltd
dec
fisttpl
and
mov
mov
push
mull
mov
popa
call
std
int3
out
sahf
leave
ret
jns
pop
loope
test
adc
lcall
sbb
je
cmp
int
xchg
xchg
into
mov
in
das
insb
xchg
insb
out
ljmp
inc
pusha
cmp
or
dec
sub
sbb
adcl
cmp
pop
mov
repnz
lods
aas
xor
cmpsl
jns
cs
ljmp
jmp
enter
pop
jl
ja
inc
cmp
decl
call
or
fdivrs
data16
pushf
insl
mov
fcmovnb
mov
push
sarb
shll
pusha
dec
lcall
lcall
sbb
xchg
sbb
fcoms
inc
sbb
sbb
scas
adc
and
cmp
daa
dec
inc
in
push
jno
xchg
pushl
incb
xchg
fwait
mov
sbb
mov
lahf
lahf
imul
cmp
repnz
dec
sbb
adc
cmc
jle
fs
cmp
adc
inc
clc
adc
push
fsubl
mov
cmp
iret
mov
cmp
xor
testl
stc
inc
call
clc
fsubs
pushf
jmp
cwtl
mov
adc
and
push
pop
clc
mov
out
mov
jns
jge
xchg
rcrl
popf
movsb
stc
mov
push
jno
pusha
mov
pop
insl
sub
into
or
push
xchg
rolb
dec
or
lea
sub
xor
mov
xorl
mov
arpl
push
out
pop
nop
lods
mov
stos
rolb
test
mov
lcall
mov
inc
js
mov
pop
sbb
movsl
rol
cli
push
xchg
cli
sub
pop
jp
hlt
cmp
rol
incl
loop
in
mov
out
call
and
inc
adc
add
or
fisttps
stos
sub
shl
outsb
jbe
movl
push
dec
lock
sarl
aas
xor
jge
push
daa
mov
pop
idivb
xchg
or
adc
adc
out
movsb
in
or
xchg
decb
test
xchg
jp
pop
sbb
lea
sbb
loop
aad
sti
ds
fwait
sbb
and
sahf
or
ret
cmp
mov
dec
into
and
int
xor
jo
sub
out
imul
cmp
sub
popa
mov
pushl
loopne
loopne
push
ret
mov
iret
jbe
cmp
add
fnsave
cmpsb
ja
xchg
das
lock
in
out
sub
or
or
inc
in
pop
jae
sub
cwtl
cli
decl
imul
pushf
xchg
stos
xchg
std
adc
cltd
mov
pusha
dec
sbb
xor
call
or
fs
sub
inc
movsl
lock
jmp
ds
jmp
push
mov
jp
stc
jno
repz
test
pop
push
inc
popa
pushl
ljmp
sti
inc
cli
nop
sub
sub
add
push
pop
shrb
call
or
fnstenv
cli
and
addr16
ja
sub
adc
jge
dec
pop
xchg
incl
adc
xlat
and
test
mov
jbe
or
add
jmp
push
fisubl
push
mov
ljmp
push
inc
arpl
dec
mov
es
aad
call
mov
stos
iret
jb
jo,pt
enter
outsl
rcrl
and
sbb
int3
xchg
sti
daa
xor
fsubp
mov
jmp
xchg
or
jae
sahf
decl
or
fisttpl
xor
xchg
xor
call
xchg
cmc
lock
fdivrs
mov
cmp
pop
dec
ret
sub
adc
lret
popa
cvtps2pi
shr
mov
ret
pop
outsb
int
mov
xor
leave
adc
shl
xor
or
inc
std
lods
imull
and
jmp
pop
mov
pop
or
std
jg
or
mov
arpl
sarl
add
jl
mov
or
ljmp
repnz
cmpsb
mov
sbb
divb
and
jmp
jno
inc
jle
push
jnp
mov
std
pushl
mov
xchg
mov
add
das
loopne
lcall
sub
repz
sti
push
fadd
lock
cmp
or
loope
arpl
xor
inc
ljmp
adc
test
lock
popf
movsl
scas
adc
adc
iret
xor
inc
jl
cmp
jmp
jmp
jo
or
push
inc
idivb
xchg
sub
daa
jg
jg
iret
dec
mov
mov
out
and
loope
add
cmp
inc
xchg
xchg
xor
cmp
rclb
hlt
pop
cli
dec
jb
sar
rcr
inc
stc
push
inc
cmc
cs
inc
pop
jg
dec
int
inc
stos
xchg
movsb
mov
or
cld
push
out
jmp
sahf
cmc
test
jp
push
mov
cli
mov
jge
loope
inc
ljmp
jle
scas
fidivs
jp
rcrb
mov
add
popf
clc
leave
push
pop
dec
andl
hlt
mov
pushl
push
shrl
bound
or
in
mov
jae
or
or
xor
cmp
add
je
dec
outsl
ljmp
xchg
shlb
cmpl
repz
js
mov
jmp
ss
inc
xor
sbb
jns
cmp
cmp
cmc
incb
mov
mov
adc
add
xlat
inc
pop
lods
jg
mov
fstp
inc
mov
loopne
fld
dec
push
mov
adc
adc
pop
ljmp
xor
xchg
inc
iret
xchg
dec
cltd
js
jmp
mov
int3
aam
leave
lock
jge
mov
daa
insl
pop
vmread
stc
sub
std
fucomip
pop
jnp
lods
cs
fnstcw
add
xchg
xchg
das
lock
pushl
sub
push
shlb
sbb
lret
pop
repnz
jg
ljmp
loop
loop
movsl
jl
xchg
jae
in
aaa
sub
xor
dec
shll
mov
das
jmp
push
sbb
mov
lahf
dec
mov
sub
enter
call
or
push
push
pop
inc
add
fwait
and
das
sti
or
test
xchg
sbb
push
sbb
lahf
shl
adc
cmp
mov
nop
cmp
jne
fnclex
movsl
add
xor
add
push
xor
lods
mov
add
add
jbe
neg
loopne
and
data16
insl
push
jae
and
sub
and
add
andnps
or
mov
push
xchg
test
subl
sbb
jbe
add
add
add
add
xor
cmp
and
or
sbb
cmp
pop
pop
sbb
sub
outsb
je
push
sub
aaa
xlat
mov
jbe
sbb
pop
add
out
or
adc
pop
push
pop
and
pop
popf
scas
jne
jb
or
inc
pop
dec
push
fnsave
dec
sbb
adc
aas
insb
jb
fcoms
gs
or
push
add
dec
sbb
movups
add
adc
sub
sti
add
or
add
sbb
sbb
sub
fcompl
add
sbb
aaa
sbb
fiadds
jmp
add
sbb
sbb
leave
fadds
sbb
or
inc
fs
or
outsl
mov
fldenv
push
add
sbb
add
sbb
mov
in
test
add
sbb
push
add
add
mov
lldt
ss
in
sbb
call
or
cmp
loope
icebp
xchg
jb
sahf
jecxz
or
inc
aas
repz
nop
mov
jg
inc
dec
or
int3
sbb
out
in
jge
hlt
cmp
sbb
jg
xor
push
fisttpll
pop
iret
cmp
repz
fsubp
gs
shr
aaa
push
sub
mov
loopne
dec
mov
movsl
cmp
cmp
int
add
rcl
push
inc
decl
adc
cmp
out
sahf
jns
mov
pop
fwait
pop
mov
xor
mov
lcall
ljmp
lret
inc
xchg
inc
fprem1
cs
xor
add
lds
sub
jae
push
call
nop
xor
scas
sub
or
in
aad
mov
sub
push
aam
cs
sub
mov
jbe
outsb
in
ljmp
lods
mov
pop
popa
inc
insb
jbe
cld
outsb
pushf
sbb
mov
add
pusha
pusha
mov
push
mov
pop
mov
fs
call
pusha
in
mov
call
pusha
cs
adc
mov
add
cli
fstp
shr
dec
lcall
idivb
fisttpll
in
out
cmp
push
pushf
pushf
call
push
cmp
mov
shl
sbb
std
jg
jne
insl
xchg
clc
setnp
movzbl
ficomps
jmp
fnstsw
cwtl
pop
data16
and
call
or
ds
inc
call
mov
adc
adc
mov
pusha
nop
pusha
pushf
push
push
dec
jmp
pushf
or
ss
adc
jp
jmp
add
test
jmp
xchg
xchg
imul
enter
mov
pop
push
pop
ja
or
inc
push
call
mov
add
and
or
es
push
call
cmp
sub
shlb
arpl
mov
mov
pop
pushf
sbb
xchg
or
inc
cmp
cmc
and
mov
sub
sbb
dec
cmp
and
not
pushf
pop
jmp
lds
stc
jmp
stos
mov
sbb
xchg
pmaddwd
xor
dec
das
insl
adc
in
imul
ds
jnp
pushf
jno
add
andl
jecxz
mov
mov
cli
popa
jne
orl
add
add
pop
xorb
dec
nop
jns
imul
cmp
lahf
mov
negb
sub
shlb
mov
loopne
ret
fistpll
jmp
push
aad
and
xor
ljmp
adc
xchg
cmp
or
iret
push
pushf
mov
mov
cmp
addr16
outsb
mov
test
push
jecxz
xchg
or
xor
test
xchg
loope
add
mov
in
popf
mov
or
jmp
das
cmp
iret
jne
or
addr16
sbb
xchg
dec
jb
add
jne
and
pop
dec
stc
push
pusha
push
cmp
jmp
jnp
mov
push
lahf
jmpw
jmp
adc
aad
in
add
push
mov
les
xchg
adc
gs
mov
lods
sub
xor
and
std
sub
xchg
rcrb
movl
fnstenv
testl
fbstp
add
sti
lock
lods
mov
call
hlt
mov
fsubr
adc
mov
cmp
push
push
or
sbb
cli
sti
mov
movb
shr
sbb
sbb
bound
mov
mov
shlb
jne
out
sbb
pop
mov
sbb
and
push
dec
add
add
cmp
adc
outsl
pop
out
icebp
inc
rcr
or
xchg
cs
mov
xorl
ret
enter
push
pushf
mov
mov
cmpsl
xchg
push
pusha
ja
mov
mov
mov
in
push
ds
pop
jo
mov
sbb
gs
jle
cs
lcall
pop
xor
gs
cmp
test
push
call
rcl
inc
push
mov
sbb
call
jo
in
call
jbe
hlt
mov
sbb
scas
dec
sbbl
pusha
push
cmpsb
push
push
lahf
pop
dec
mov
sub
leave
mov
fs
in
insl
add
push
mov
lahf
mov
jmp
add
call
outsl
jae
sbb
add
push
lea
mov
push
incb
pop
iret
add
mov
lahf
push
pop
repz
sbb
push
dec
leave
std
fildll
rcr
setle
cmp
call
aam
imul
or
lahf
out
mov
pop
jmp
jecxz
hlt
mov
inc
lcall
cmp
enter
mov
pop
jnp
out
dec
add
call
rcl
jno
mov
hlt
mov
ror
push
mov
mov
in
sub
sbb
in
out
dec
incl
sbb
lahf
mov
mov
clc
lods
fbld
cli
cmp
inc
sbb
call
lret
cli
imul
cld
call
or
cltd
mov
push
aas
mov
rorl
xchg
jmp
push
adc
repz
test
rolb
jg
rolb
mov
movsb
mov
pusha
sets
nop
jmp
movsl
fistpll
call
fisttpll
mov
cmpl
xor
jge,pt
pushf
inc
in
push
mov
push
inc
rolb
mov
imull
mov
je
call
adc
fistpll
enter
lds
dec
bound
fdivrs
fnstsw
mov
stc
out
sub
mov
sbb
xor
ret
fwait
sub
mov
cmp
inc
add
sbb
bound
sbb
test
and
pop
rcll
and
fscale
or
lock
pop
cmc
jmp
mov
jno
xchg
xor
inc
gs
mov
addr16
sub
adcl
out
jns
lods
inc
sti
pop
or
movl
loopne
or
stc
and
jp
adc
mov
iret
inc
cmpb
jb
xor
cmp
fwait
call
loop
leave
mov
and
insl
outsb
subb
push
call
aas
outsb
mov
cmpsl
push
iret
dec
leave
lea
aaa
jl
bound
xor
out
ss
call
jmp
cltd
in
dec
xchg
popa
push
dec
movsb
arpl
ficoml
std
std
lea
xchg
insl
movsb
mov
ret
jge
in
jle
iret
mov
gs
mov
pop
ret
lret
lock
jl
jge
mov
ljmp
hlt
call
mov
or
aam
pop
into
add
fbld
adc
test
call
add
testl
xchg
push
push
movsl
hlt
in
cmp
push
mov
test
mov
aas
sti
jmp
sbb
inc
insl
xchg
xchg
imul
jnp
or
sub
jmp
imul
jl
in
enter
and
ljmp
xchg
notl
call
nop
test
in
sbb
adc
out
outsl
xchg
shll
ret
insl
lods
movsb
inc
xchg
js
inc
decl
cld
push
fimuls
xchg
outsl
gs
ret
je
rcll
ret
frstor
mov
das
lret
arpl
or
fcomip
or
sub
jnp
fistpl
dec
dec
and
fstpt
sub
pop
test
popf
adc
pop
xor
cmpsb
cmpsl
jae
movsb
and
in
aaa
cli
test
rolb
sub
lock
jl
flds
lock
aas
mov
arpl
xor
movsl
xor
shr
pusha
insl
dec
dec
or
push
repnz
fdivr
jge
sbb
xchg
dec
dec
inc
pop
and
push
repnz
push
loop
fistpl
cmpb
inc
cs
add
xchg
mov
bound
insl
imulb
cli
rorl
out
lods
pop
incl
dec
imul
xchg
ret
jne
scas
mov
and
jg
insl
cmovns
cld
lods
jge
jns
xchg
and
aam
push
dec
jmp
popf
div
ja
push
incl
mov
push
inc
lds
insl
cmpsb
test
loop
adcl
mov
subb
fimuls
aas
test
xchg
imul
jmp
leave
pop
cmp
pop
push
lods
fcomi
pop
scas
lods
jge
mov
mov
lret
in
cmpsl
and
insl
push
ret
sub
pusha
xor
das
cld
adc
loopne
inc
lods
dec
push
fpatan
insl
mov
repnz
mov
mov
insl
sbb
rolb
notl
pop
mov
ret
jb
jo
das
imul
mov
clc
out
pop
pop
xlat
mov
outsl
lods
mov
cltd
fldt
inc
xchg
aam
pop
dec
jmp
mov
xchg
mov
jno
mov
dec
add
outsl
les
mov
insl
xchg
xchg
fmuls
and
test
xchg
filds
mov
mov
jg
mov
ret
jae
sarl
and
pop
sub
std
sbb
sbb
sbb
nop
and
aam
pop
shrb
adc
outsl
add
jge
adcl
and
jmp
sub
enter
and
sbb
dec
lods
lock
rorl
cld
jmp
xor
jne
xor
adc
ss
iret
jo
lds
push
out
lcall
jb
add
lods
sbb
out
fnstcw
push
sarl
imul
jmp
jecxz
add
push
jno
xchg
or
cmp
repz
hlt
fstps
bnd
clc
jg
cwtl
mov
sub
pusha
sub
fwait
daa
adc
clc
decb
mov
xchg
dec
dec
aad
lods
and
mov
call
inc
icebp
lcall
jecxz
cmpsl
enter
xor
xor
add
jg
cmp
loop
dec
gs
outsl
aam
xchg
lret
mov
mov
out
cmp
call
xor
repz
nop
testl
ret
sahf
xchg
pop
mov
jmp
or
sahf
adc
and
test
fmuls
mov
insl
stos
xor
call
clc
pop
arpl
clc
loop
xchg
shlb
jbe
fldcw
or
push
out
or
xlat
pop
in
lods
popf
jmp
mov
inc
lods
and
aam
pop
leave
jg
shrb
jns
adc
and
adc
inc
push
lea
pushl
inc
and
mov
js
and
mov
inc
inc
repnz
jmp
call
lret
mov
in
inc
fsubs
sub
arpl
xchg
dec
xadd
das
jmp
test
mov
jb
test
insl
adc
and
outsl
jno
adc
lcall
mov
insb
or
jne
xchg
mov
lahf
adc
pop
inc
out
mov
jg
out
insb
xorl
fwait
xchg
mov
fdivrl
scas
sub
lret
adc
test
cs
test
dec
dec
aad
push
lds
add
int
fidivs
lcall
data16
push
test
loope
inc
data16
push
xchg
jg
add
push
faddp
out
insb
sub
inc
and
inc
imul
mov
xor
xor
cld
enter
daa
dec
sbb
repnz
lcall
mov
and
out
and
lahf
sbb
mov
xchg
ret
adc
sub
fildll
jmp
je
jmp
mov
pusha
inc
mov
ret
inc
leave
repz
sbb
iret
dec
and
add
call
in
jl
jg
insl
cmp
jle
cwtl
aam
push
int
outsl
je
and
cmpsl
test
lahf
sbb
std
inc
mov
in
int3
push
mov
adc
add
lods
inc
inc
ret
mov
inc
jg
inc
xor
rcrb
call
cmp
out
xor
and
jbe
and
xor
lahf
pop
outsl
sub
xchg
faddl
pop
into
stos
jg
decl
mov
jmp
jb
inc
or
mov
sar
mov
add
and
insb
jae
sub
push
cmp
mov
mov
je
daa
ficoms
pop
outsl
or
jg
icebp
lcall
jno
inc
scas
dec
sahf
imul
inc
and
xor
decl
repnz
xchg
out
fmul
shl
stos
fstpt
jg
lock
cli
das
das
jg
push
fmuls
pop
cli
data16
fnop
lcall
push
mov
lea
mov
pop
mov
cmp
inc
cmp
mov
pop
subl
out
sub
push
outsl
mov
inc
test
pop
es
jge
sub
lahf
daa
jmp
ja
xchg
iret
jbe
out
xlat
xchg
ja
loope
ljmp
xchg
clc
scas
cmp
cmpsb
push
inc
add
cs
push
decl
cmpsb
cmp
push
into
stos
sbb
insl
rolw
push
popa
nop
jnp
fisubrs
jb
or
jns
xchg
mov
sbb
inc
cmpsb
jg
pop
pushl
sub
jns
imul
sub
outsb
sarl
bts
pop
jg
push
adc
inc
lods
pop
adc
addr16
into
inc
inc
aad
inc
jmp
adc
jno
in
cmc
xchg
icebp
push
in
mov
xchg
pop
adc
in
pushl
fsubp
inc
arpl
rcrl
lret
cmp
cmp
repnz
mov
mov
dec
aaa
dec
sbb
mov
and
add
push
out
daa
or
adc
lret
pop
adc
xchg
xchg
sbb
dec
sub
scas
sub
pop
arpl
lcall
ljmp
xorl
ja
jecxz
mov
and
sahf
mov
mov
pushf
mov
loopne
ljmp
repnz
into
scas
sbb
mov
push
cltd
std
imul
fs
inc
adc
pushl
cld
mov
aam
cmp
inc
inc
dec
ss
sub
adc
sub
dec
or
mov
icebp
lret
mov
pop
push
or
jae
dec
mov
cmp
dec
aad
adc
ret
jg
mov
pusha
aad
test
push
fcoms
push
call
adc
aas
pusha
push
es
fstl
call
subb
into
mov
aaa
or
or
cmp
xor
repnz
adc
jg
call
dec
mov
iret
mov
arpl
out
es
push
lret
push
loop
adc
dec
or
pop
adc
loope
stc
sub
mov
lret
adc
out
cwtl
pushl
jg
lret
gs
xor
sub
sbb
add
cmpsb
xor
leave
jb
or
lahf
ljmp
push
ret
push
dec
shll
add
movsl
js
mov
jg
cs
addl
adc
fsts
out
cli
jmp
sbb
pop
mov
pop
pop
clc
das
lock
lds
dec
cmp
dec
imull
gs
mov
decl
and
mov
cmpsl
mov
sbb
mov
popf
xchg
xchg
inc
cmpsl
aaa
adc
loopne
xor
xorb
rcl
mov
repnz
fcomps
in
push
xor
sbb
xor
pop
mov
inc
adc
dec
fwait
and
push
daa
loop
jle
and
pop
xchg
adc
cmp
mov
pop
adc
adc
adc
shrb
incl
.byte
jg
mov
mov
xor
mov
mov
add
or
push
mov
addl
mov
sub
add
jbe
call
push
adc
incl
add
je
push
call
pop
pop
ret
push
mov
push
xor
ljmp
jne
adc
inc
or
jne
mov
push
mov
mov
adc
test
add
push
add
mov
testb
or
or
mov
insl
push
jae
push
cmp
add
call
mov
test
pop
adc
adc
cwtl
out
movups
push
iret
mov
xor
cmp
imul
outsb
add
outsb
addl
push
push
into
jmp
popf
imul
lea
xor
inc
mov
mov
add
sub
cmp
popf
add
cmp
mov
mov
and
jbe
rorb
push
push
pushl
jg
adc
xor
jmp
lea
jg
mov
jbe
push
mov
mov
pop
pop
pop
ret
test
popa
inc
sbb
pop
and
shrl
push
imul
test
aas
push
push
lea
xor
shr
addr16
insb
jg
and
mov
jmp
lock
add
andl
xor
add
add
inc
cmp
jl
add
cmp
outsb
js
jne
pop
pop
arpl
add
xchg
sub
fst
imul
sahf
add
push
aaa
fimull
mov
leave
sub
mov
ret
cwtl
clc
pop
sbb
jae
fucomip
call
rep
stos
stos
mov
add
sbb
lea
sti
pop
clc
sub
mov
test
inc
inc
cmp
lea
push
mov
cld
push
pop
xor
add
dec
mov
cmpl
ja
lods
gs
sub
mov
pop
and
mov
roll
xor
fidivs
aas
je
mov
add
xor
add
mov
imul
stos
push
fildll
loope
cmpl
jb
mov
inc
and
cmp
mov
mov
mov
and
jb
mov
push
mov
jle
test
test
je
dec
js
loopne
xor
and
dec
sbb
mov
push
test
jle
test
jbe
sbb
add
xor
cmp
sub
shl
or
in
xchg
pop
ret
xchg
mov
push
lea
idiv
imul
sbb
ret
jbe
push
outsb
stc
mov
mov
in
ret
pop
cmp
iret
inc
push
add
cmp
arpl
jle
and
push
cli
insl
fldt
imul
add
je
push
add
push
das
sub
jge
xor
hlt
aaa
and
decl
jne
sub
pop
mov
ret
aas
xchg
jle
js
cmp
je
push
lcall
imul
icebp
cmpl
in
int3
dec
push
ret
fimull
mov
and
das
mov
cmp
jbe
sub
xchg
je
and
xchg
ficomps
shlb
adc
add
movsl
into
lds
cs
fisubrs
inc
push
cltd
or
inc
cmp
adc
sbb
sbb
insb
inc
js
or
adc
call
rolb
xor
add
test
movsl
xchg
js
mov
jb
fdivl
lds
gs
popa
pop
outsb
mov
or
push
add
outsl
int3
in
mov
into
push
shll
fnsave
add
xor
xor
inc
aad
add
jne
mov
cmp
pop
fdivs
fldcw
fidivl
fldt
outsb
fisttpl
push
add
pop
loop
jecxz
add
inc
in
out
out
call
jne
jb
imul
aaa
lock
shll
pslld
repz
cmc
sbb
mov
divl
clc
stc
dec
add
pop
sti
js
push
fildll
fdivr
mov
fidivs
mov
jle
pop
adc
mov
adc
and
daa
jl
orl
add
cmpl
dec
inc
pushf
std
dec
sbb
add
sbb
in
inc
mov
push
pop
push
xlat
hlt
fsubrp
pop
je
cs
out
or
nop
mov
ret
or
fldl
pushf
dec
out
and
ret
mov
lahf
jle
and
cmp
sarl
push
pop
mov
testb
dec
divb
xor
inc
cmp
or
sbb
orl
sbb
xchg
pop
add
push
sub
pushf
fdivs
inc
or
xor
arpl
cmp
bound
xchg
inc
gs
sbb
mov
cmp
jne
andl
mov
out
in
and
hlt
divb
add
adc
adc
jno
int3
and
fucomip
or
pop
es
pop
jne
decl
add
insb
pop
add
or
mov
aaa
pop
sbb
andb
cmc
add
inc
push
inc
sbb
or
subb
or
imul
pop
xor
das
push
int
pop
ljmp
sub
or
jle
dec
adc
mov
cmp
jl
cmp
jg
mov
mov
loopne
or
cmp
jg
adc
inc
mov
or
sub
push
sub
mov
jmp
sub
add
dec
inc
inc
and
mov
jl
enter
pop
mov
sbb
pusha
cmpsb
push
jbe
adc
jne
add
jnp
hlt
movsl
je
imulb
pop
mov
ret
pop
js
lea
nop
ret
push
lock
int
data16
push
push
cmp
push
loopne
int
add
lock
add
or
clc
cmp
jle
push
push
xor
cmp
xor
in
je
nop
add
xor
push
sbb
cwtl
xchg
pop
icebp
fimull
repz
push
dec
and
adc
frndint
mov
jb
mov
fstps
ja
or
jecxz
pop
lock
imulb
shrl
shl
lret
fadds
or
fs
xorb
inc
stc
sbb
call
or
into
mov
or
push
xorl
push
imul
push
push
or
fidivrl
mov
dec
cmpl
and
push
xchg
jmp
or
inc
push
mov
xor
mov
das
pop
cmc
adc
in
push
dec
in
test
add
mov
lcall
cld
movsl
mov
scas
push
sub
and
push
sbb
push
pop
jae
leave
cmc
nop
push
jmp
jge
mov
clc
mov
mov
nop
add
les
fcomip
mov
add
aad
stos
or
jo
push
daa
mov
jbe
in
or
push
sar
mov
sbb
inc
dec
andl
subl
sbbb
bound
popa
addr16
in
addb
sbbl
shl
pop
or
lret
test
ss
shl
adc
push
lock
ret
imul
jge
dec
fisttpll
jecxz
sub
fsubr
push
sub
out
roll
adc
push
shl
and
push
adc
or
xchg
test
push
cli
shll
add
into
pop
xchg
adc
mov
sub
push
xorb
stos
fistps
inc
fldl
cmp
mulb
mov
cmp
or
jne
mov
adc
dec
inc
sub
add
xor
xor
stc
xchg
mov
jecxz
xchg
adc
pop
mov
fldcw
push
or
pop
nop
push
and
movzbl
andl
leave
inc
push
fistpl
ficompl
or
sbb
jne
ljmp
call
xlat
fimuls
sub
test
mov
sub
adc
push
adc
lea
jb
xchg
pop
shll
xchg
xchg
mov
shrl
lahf
add
in
in
imul
sbb
sbb
add
sbb
nop
pop
mov
or
mov
jb
enter
test
xor
mov
cld
xchg
clc
rorb
adc
add
daa
mov
loope
ret
jle
movb
jl
xchg
mov
jl
sarb
inc
jge
adc
mov
inc
pusha
stos
mov
les
cmp
inc
sub
xchg
pusha
mov
clc
scas
rcrl
adc
lret
or
inc
mov
jne
push
icebp
jbe
pop
add
add
adc
imul
cmp
fldenv
xor
push
divb
jle
or
loope,pt
or
shl
add
pop
mov
sub
add
dec
fadds
sbb
push
or
dec
in
out
insb
gs
incl
jl
or
add
or
or
adc
movsl
sbb
mov
jg
movsl
movsb
mov
int
stos
stos
fsubrs
pop
cmpsl
cmp
mov
adc
rol
movsbl
inc
sbb
cmp
xor
adc
adc
inc
or
xlat
int3
int3
and
mov
orl
cmp
inc
jae
stos
inc
mov
add
xor
mov
test
push
cmp
js
or
sub
push
cmpl
add
or
mov
pop
and
adc
xor
test
rorb
icebp
std
xchg
push
rorb
and
hlt
mov
lock
or
xor
clc
xchg
test
mov
inc
push
jbe
subl
mov
or
aam
out
jnp
push
pop
push
dec
add
sbbl
jne
dec
mov
enter
cmp
shr
jo
fiadds
test
insl
and
push
add
pop
push
push
mov
fdecstp
and
movsl
or
jbe
adc
ja
xchg
push
fsubp
fistpl
test
lcall
lcall
xchg
cltd
lcall
cmp
or
pop
push
cs
test
lret
pop
adcl
andb
test
loopne
sub
inc
pop
lods
cld
sbb
int
push
lock
jmp
lret
jne
push
adc
and
fnsave
pop
inc
and
mov
test
loope
inc
push
jo
jge
test
cmp
insl
fmuls
jge
sbb
sbb
cltd
sets
cmp
imul
add
mov
jge
and
pop
push
pand
jae
mov
adc
or
fadds
out
inc
fadds
dec
sbb
adc
sub
cmp
test
add
inc
test
pop
outsl
std
inc
pushf
data16
xchg
int
pushf
cwtl
jnp
aam
cmp
jmp
in
mov
shlb
insb
inc
pop
out
pusha
xchg
rorl
nop
jp
sbbl
jge
in
jmp
adc
adc
adc
jae
cmp
jne
adc
or
and
sbb
cmp
insb
xor
cmp
adc
adc
daa
push
dec
xchg
and
or
or
rclb
dec
sbb
js
add
pop
and
pop
push
mov
fwait
or
xor
lock
xchg
inc
shrl
pop
add
xor
xlat
adc
or
pop
xor
test
pop
mov
testl
pop
inc
scas
pop
add
mov
ds
in
bound
dec
jae
sub
inc
xchg
adc
lea
adc
ds
daa
xchg
dec
push
icebp
mov
xchg
mov
mov
mov
lods
push
sahf
cwtl
push
add
fisubrs
lea
add
pop
outsb
por
add
in
inc
mov
cmpsl
xchg
or
add
ja
cmp
xchg
push
jecxz
sub
sub
add
jbe
fmuls
ljmp
xor
jge
or
fdivrs
aam
loope
test
adc
pop
sar
xor
inc
loope
fisubs
push
sbb
bound
mov
add
and
mov
das
test
and
shll
and
add
push
mov
xchg
test
xchg
adc
add
in
popf
lret
and
scas
cmp
ror
leave
aad
in
lds
stc
mov
insb
pusha
movsl
mov
xor
lcall
sub
xor
jb
push
inc
mov
mov
sbb
in
lret
sti
add
add
cwtl
jl
je
aas
int3
fsubrs
jmp
rcrb
add
push
push
adc
cmp
int3
int
stos
fwait
mov
add
std
or
sbb
loope
mov
sbb
ror
xor
ret
lock
pop
xor
shl
sbb
inc
push
push
push
jne
aas
mov
cmp
les
imul
jne
push
mov
push
clc
out
movd
inc
cmp
pop
add
add
loope
lcall
imul
int3
xor
and
or
push
inc
and
shl
cmp
popa
andl
insb
xchg
inc
xor
and
mov
test
lret
mov
adc
jge
inc
or
ds
add
inc
fwait
inc
sbb
add
popf
and
imul
test
ret
rcrb
mov
jmp
adc
xchg
in
sbb
adc
pop
daa
loopne
mov
lea
arpl
push
adc
push
pusha
cwtl
pusha
add
cmpb
sbb
pop
cmp
sub
push
sub
cli
mov
pop
ret
mov
push
inc
cmpsl
imul
fmuls
push
push
push
push
or
push
in
push
ss
inc
inc
pop
or
pusha
lcall
or
xchg
test
sbb
test
jno
dec
inc
lret
inc
imul
inc
push
push
test
es
mov
int3
js
lock
fisubs
sbb
stos
lret
push
ret
aas
pop
add
sub
imul
pop
dec
and
and
or
mov
and
or
add
popa
add
push
cmp
mov
mov
push
push
adc
aam
push
or
insb
mov
mov
push
xor
cmpsb
pop
cld
rol
mov
call
jmp
push
jecxz
push
xchg
pop
clc
popa
pop
imul
fidivs
fwait
xor
or
add
jg
test
stos
push
icebp
and
cmp
nop
sbb
push
adc
je
adc
adc
and
jne
scas
sbb
pop
push
test
sub
and
daa
je
pmovmskb
leave
ret
pop
rcl
and
imull
daa
out
stos
out
xchg
daa
cmp
jne
or
sub
mov
lea
mov
sub
dec
aam
fadds
adc
mov
push
jne
repnz
test
shrl
fwait
push
aaa
sub
insb
add
mov
adc
int
enter
ss
push
ret
xchg
push
and
pop
mov
xor
fadds
in
inc
test
push
loopne
xchg
lods
xchg
lods
push
or
stos
xchg
call
mov
enter
and
mov
cmp
mov
mov
mov
ja
faddl
add
mov
mov
or
repnz
lods
decl
xor
ja
out
or
push
dec
jg
popf
orl
add
adc
fcoml
and
push
pop
pop
mov
notb
xchg
pop
cmpsb
push
mov
sub
fstpt
orl
xor
aad
add
dec
pop
adc
inc
movsl
xchg
ror
xor
pop
cmp
jge
ret
push
sub
sub
xlat
inc
mov
mov
fcmovnu
pop
add
sub
mov
lock
test
dec
lock
mov
pop
es
jle
mov
jae
cmp
add
test
testb
lods
je
jge
shrb
daa
mov
fdivrs
jg
inc
ss
jle
push
aaa
shll
lea
js
mov
mov
jo
mov
jae
std
movsl
je
popa
adc
je
push
rcrl
jae
xchg
or
pushf
in
sbb
ret
sbb
mov
or
cmp
sbb
push
clc
push
es
test
sub
hlt
xorb
push
clc
and
sarl
adc
data16
iret
clc
clc
jg
xor
clc
aaa
adc
lret
xchg
cmpsl
and
inc
scas
fs
cmpsb
sub
out
sbb
jl
adc
hlt
inc
xchg
and
or
push
add
jnp
es
mov
shl
or
or
push
mov
jmp
or
ljmp
inc
or
sub
icebp
jecxz
int3
adc
fildl
mov
adc
inc
add
inc
add
aaa
pusha
dec
cmc
jmp
aam
ret
inc
loopne
push
pop
lods
mov
pop
fdecstp
notl
icebp
pushl
cmpl
ja
fmuls
xor
pusha
clc
or
mov
addr16
push
mov
mov
push
loopne
add
mov
jmp
fistpll
nop
fwait
ja
jmp
into
imul
mov
in
pop
inc
mov
mov
shr
add
fildl
push
clc
xor
lea
add
pop
mov
sbb
xor
lock
roll
popa
sub
xchg
sbb
jno
mov
lods
jl
or
icebp
pop
test
pop
adc
add
sub
and
ret
cmp
jne
add
pop
or
push
cld
inc
sti
mov
push
pusha
pop
sub
loope
fucomp
or
push
inc
mov
out
add
mov
test
sub
sbb
fisubl
cmp
es
lock
jmp
mov
out
and
sbb
mov
add
mov
fdivp
cld
in
and
jl
inc
out
pop
faddl
and
add
push
pop
pop
int3
int3
pop
pusha
mov
push
mov
cmp
xchg
xor
fstl
mov
pop
ret
push
jg
sti
sbb
mov
ret
and
xor
cli
lds
add
xchg
test
push
cmp
pop
lea
or
add
add
jae
pop
mov
or
loope
cs
push
sub
push
in
push
es
mov
aaa
sub
and
mov
adc
mov
adc
imull
push
hlt
adc
das
or
pop
sub
mov
decb
mov
cmp
adc
push
dec
sbb
sti
in
xchg
hlt
push
mov
mov
fdivrl
pushf
or
add
les
xor
jg
xor
cmp
mov
cmp
je
cmp
fistpl
nop
outsl
repnz
jbe
aam
dec
loopne
mov
divb
outsl
imul
inc
aam
push
sub
inc
add
stos
nop
jns
push
push
sbb
scas
fstpt
push
cltd
xchg
cwtl
xor
mov
mov
test
les
pusha
xor
cs
and
mov
pop
nop
xchg
cltd
mov
xchg
pop
and
add
add
jne
mov
xor
and
add
adc
or
out
fs
cld
inc
xor
xchg
xchg
xchg
sub
sbb
xchg
cltd
xchg
xor
add
shll
jp
add
dec
shll
out
or
mov
pop
adc
cmp
pop
ja
hlt
inc
inc
push
pop
les
int3
add
pop
ss
shl
ljmp
lcall
lcall
jl
mov
cmpsb
imul
out
decb
xchg
addr16
subb
jns
jnp
jp
sbb
test
das
scas
mov
add
cmp
aaa
xor
add
dec
shll
adc
xchg
adc
xor
rcll
add
inc
xor
or
insl
popa
imul
mov
outsb
xor
jo
daa
add
add
xor
pop
or
daa
sbbb
inc
adc
add
and
push
pop
jo
and
test
ljmp
stos
mov
inc
push
inc
push
dec
xor
cs
in
fs
insb
or
div
xchg
scas
test
loop
xor
cmc
iret
ficompl
dec
jno
decl
js
add
test
das
popf
popa
add
jnp
es
cltd
add
outsl
cmp
in
mov
adc
xchg
dec
jmp
pusha
mov
js
mov
int
repz
cld
add
push
add
scas
sbb
or
scas
popf
and
gs
gs
out
mov
and
jl
fildll
aad
and
out
adc
push
mov
testb
test
jne
std
add
cmp
outsb
stos
xchg
mov
mov
icebp
lods
and
loopne
mov
insl
mov
shrl
fwait
mov
lcall
fsubrl
adc
outsb
dec
push
xchg
daa
dec
mov
mov
jge
xor
push
incl
je
gs
jo
popa
je
inc
jg
mov
mov
lcall
add
test
rcl
int
orl
lock
mov
incl
insb
adcb
push
arpl
dec
mov
ljmp
rolb
xor
ja
outsb
add
cli
fildl
call
lcall
fwait
iret
pop
scas
cmp
add
pusha
int3
loope
add
cmp
inc
dec
push
call
outsb
out
dec
dec
push
sub
push
jb
arpl
add
sti
or
dec
inc
inc
inc
pop
add
incl
jne
ljmp
push
pop
movsl
fstpl
adc
testl
loope
or
incl
xor
adc
mov
xor
sub
rorl
out
decl
sbb
fsubrl
cli
outsb
jo
push
lcall
inc
ret
mov
xchg
adc
addr16
sub
daa
mov
into
jl
into
js
mov
fstps
pop
cmp
xor
xor
das
mov
pushl
fbld
in
mov
test
cli
stos
or
sbb
cli
ffreep
pushf
lcall
adc
jne
out
jl
ljmp
jmp
daa
or
adcl
inc
ja
xor
mov
sbb
ljmp
cmp
xchg
add
xchg
push
sub
jg
or
jle
scas
adc
in
loopne
jl
fldenv
decl
and
adc
mov
inc
fsubs
and
mov
stc
scas
lcall
cmp
mov
jbe
inc
jae
loop
mov
out
mov
fldcw
dec
inc
jge
in
stos
xor
popa
in
inc
loope
xlat
lcall
fwait
aam
fmul
in
inc
xchg
push
int3
mov
into
mov
inc
scas
lock
repz
pop
js
pop
lret
nop
shl
mov
xchg
pushl
or
aam
jmp
ret
gs
sahf
sahf
es
sub
ret
jg
leave
hlt
mov
outsb
cmpsb
xor
and
fmuls
loope
mov
ret
outsl
pop
adc
movb
scas
pushw
in
pop
std
jg
inc
sahf
in
add
rclb
xchg
pop
sti
cmp
gs
mov
mov
pop
outsl
add
xor
pop
and
sbb
loope
pop
idiv
jecxz
mov
push
aas
or
daa
push
int3
fimuls
xchg
orl
incl
pop
sub
mov
movsb
jg
loop
mov
nop
add
xor
das
cld
jmp
in
adc
sbbl
jns
out
xchg
loope
cmp
bound
sub
pop
xchg
int
sub
jbe,pn
pop
call
cld
push
push
ja
jle
xchg
push
test
in
popa
cmp
pushl
out
xchg
or
cmc
daa
je
mov
push
sahf
push
ret
jg
incl
adc
sub
add
loopne
call
icebp
xor
push
push
dec
sbb
in
incl
out
sbb
jg
lahf
popf
jp
fbld
xchg
repnz
xor
sbb
mov
ret
jmp
sbb
inc
shlb
dec
xor
call
jmp
call
jno
movsl
mov
mov
lahf
and
out
jae
push
sbb
jg
dec
xor
repnz
add
xchg
mov
test
sub
mov
add
pop
out
int
mov
jnp
pop
test
sbb
adc
xor
aas
sbb
leave
push
or
mov
sub
test
pop
adc
pusha
mov
js
ljmp
shrl
xchg
mov
push
shll
push
sbb
jne
lock
mov
dec
xchg
iret
stc
sbb
fadds
sub
test
mov
shlb
jmp
outsl
out
push
roll
lret
lret
cmp
inc
lock
in
dec
push
incl
fisttps
dec
adc
mov
jmp
popa
jns
add
inc
mov
xlat
fistl
test
mov
jae
aas
fs
jecxz
lcall
call
enter
or
movsl
add
movsl
pop
mov
cmpsb
dec
lcall
sbb
pop
or
fisubrs
jecxz
push
adc
aas
push
clc
icebp
jl
iret
add
jg
fsts
gs
aad
sbb
jno
or
adc
adc
jecxz
test
pop
into
mov
test
mov
adc
push
cmpsb
pop
test
aad
mov
pop
into
call
aaa
cmp
call
mov
std
arpl
icebp
pop
aas
dec
pop
push
jno
ret
jne
outsl
jle
adc
pushl
mov
inc
mov
clc
insl
cmpsb
push
fcmovnbe
mov
insl
shrl
in
pop
xor
sub
stos
test
inc
testb
mov
xor
xchg
decb
mov
int
fwait
icebp
sbb
pop
sbb
jns
cli
mov
sub
popa
push
fcompl
dec
jmp
orl
incl
xor
stos
shll
sbbb
jge
sbb
pop
popl
fisttpl
pop
jb
mov
mov
inc
mov
adc
mov
lcall
mov
aad
inc
int3
adc
aad
sub
fcmovnbe
fsubrs
push
pushl
sub
call
outsl
pop
xor
inc
and
test
in
and
adcl
jbe
scas
test
mov
cmpsl
mov
sub
fstps
jg,pt
mov
xchg
push
push
pop
pop
xchg
repnz
pushl
jmp
int3
jmp
scas
xchg
dec
jb
sbb
adc
jp
jmp
int
jecxz
pushl
sbb
or
mov
dec
fldenv
jb
adc
sahf
or
and
lcall
cld
out
rcl
or
loop
push
push
or
xor
jmp
test
pushl
lret
mov
pusha
dec
pop
aad
lcall
addl
push
push
outsl
daa
cmp
stos
dec
xchg
mov
repz
fisttps
lcall
leave
fdivs
pop
mov
mov
aas
jge
cwtl
adc
jle
int
xorb
clc
psubq
mov
push
insl
clc
ss
sarl
cli
repnz
in
movq
lahf
add
add
mov
js
or
mov
sarl
call
ljmp
test
lahf
and
dec
je
lcall
jo
adc
cmc
out
push
dec
stos
stc
pop
loop
xor
dec
push
icebp
xchg
pop
cld
call
add
adc
je
xor
imul
sub
stc
lock
fnsave
cltd
cmp
test
adc
push
push
xchg
int3
nop
ja
jp
or
call
push
mov
jge
sbb
call
movl
out
mov
mov
sub
int3
pop
dec
add
cmpsl
push
xchg
xchg
or
dec
cld
adc
out
mov
cmpl
outsb
pop
in
test
into
mov
lcall
pop
jmp
adc
fxam
jecxz
dec
test
xchg
cli
cmp
sbb
ljmp
lret
jecxz
push
repz
shll
jns
test
jbe
lret
test
push
push
fwait
mov
test
movsb
lahf
and
sub
sub
cmpsb
incl
movsl
pop
leave
lcall
lcall
push
xchg
imul
cli
js
xor
push
xlat
sub
cmp
xchg
push
fimull
leave
push
sbb
ljmp
ljmp
jae
sbb
addr16
aam
push
ret
ja
inc
xchg
mov
call
pop
or
test
mov
insb
fwait
push
dec
scas
cltd
out
jle
mov
sbb
dec
inc
pop
push
jl
movsb
sub
push
ret
div
dec
out
stos
jge
cmp
mov
mov
call
mov
mov
lods
xor
and
fnstenv
push
aaa
incl
dec
mov
xchg
xor
mov
mov
cld
pushl
ret
dec
lea
mov
out
sub
fwait
into
fsubrs
pusha
pop
ljmp
mov
adc
push
or
std
fdivs
lcall
jmp
or
or
push
pop
out
or
jg
push
lods
xor
fbstp
dec
adc
imul
xor
popa
sbbl
or
sbb
pushf
sbb
mov
pop
cli
decl
leave
dec
or
or
push
ficoml
dec
jno
mov
sbb
incl
loopne
xor
test
mov
cmpsb
dec
push
push
add
or
mov
ss
and
mov
arpl
mov
es
mov
jg
mov
loopne
and
adc
lcall
call
fwait
sbb
loope
pop
ja
std
psubusw
lcall
leave
sub
jo
mov
xor
shlb
jns
jae
xchg
cli
cli
xchg
jb
push
int3
sbb
in
stos
loopne
sub
push
push
jmp
call
cli
lcall
inc
jecxz
mulb
ja
inc
push
dec
cmp
pop
xchg
in
ljmp
xchg
stos
xlat
test
push
clc
repnz
jge
cmc
lea
cmpsb
das
mov
jbe
adc
pop
and
loope
jne
inc
cli
mov
decl
push
ss
inc
xchg
cmp
push
jecxz
xor
xor
insb
pop
mov
pushl
sbb
pop
into
dec
imul
cli
call
adc
fildll
ficoms
in
sub
push
cld
lcall
aam
pop
mov
mov
sbb
or
adc
bndstx
call
inc
decl
fistl
sti
pop
ja
repz
lock
leave
mov
and
xorb
inc
insb
addr16
xor
lods
sbb
imul
sbb
js
xor
ljmp
dec
sub
jmp
push
adc
push
inc
int
mov
sbb
fucomi
lcall
test
pusha
push
ficompl
popf
pop
hlt
mov
clc
xor
mov
push
push
out
ljmp
sbb
push
imull
rcrl
insb
bound
cmpsl
xor
in
lods
mov
js
jae
pop
mov
fadds
test
out
jecxz
cmp
jmp
xchg
mov
jg
mov
mov
ljmp
sbb
inc
mov
aad
sbb
lcall
stos
arpl
ljmp
bound
xchg
gs
call
pop
dec
push
jnp
cmpsb
sbb
repz
sub
shl
es
movsb
pop
arpl
cs
sahf
loopne
jg
pop
ljmp
cmp
out
outsl
add
push
pop
pop
mov
push
jle
je
sbb
add
incl
dec
mov
fs
test
xchg
fmulp
ja
jg
loope
test
mov
out
pop
clc
dec
dec
outsl
cmp
xor
or
loop
lods
dec
jo
aas
or
sbb
add
jmp
andnps
decl
mov
jno
rorb
mov
cmp
sti
inc
cmpsl
lcall
jg
sub
jbe
dec
jp
mov
pop
loope
or
adc
ljmp
xchg
pusha
outsl
pop
lcall
adc
add
mov
and
jg
cli
addb
repnz
push
xchg
jnp
mov
in
or
out
or
call
push
xchg
xchg
pop
inc
test
shlb
decl
lock
aas
lcall
ret
sub
pop
jae
jge
pop
movsl
in
call
clc
pusha
iret
mov
add
xor
mov
inc
add
fstl
loope
add
dec
stc
add
sub
inc
ds
inc
jnp
sub
xchg
push
call
xchg
fwait
pop
in
testl
inc
push
xor
in
ret
sbb
sub
mov
call
ljmp
fadds
pushf
ret
lds
adc
jb
mov
adc
in
cmpsb
cmp
popf
cmp
stos
imul
clc
in
movsl
adc
sti
test
fwait
dec
and
adc
mov
jg
dec
mov
and
cmp
inc
xchg
daa
test
fidivs
call
decb
xchg
gs
fiadds
jbe
nop
mov
out
add
jns
jae
adc
lcall
test
gs
adc
jp
nop
xor
xchg
cmc
repz
jmp
mov
fs
push
insl
or
insb
andb
test
sub
fnstsw
incl
popa
in
cmp
push
sub
lods
lods
adc
add
and
es
cmp
mov
pop
sub
sub
lods
fs
mov
ljmp
inc
inc
test
or
stos
sbb
adc
popf
add
cmpsl
xor
mov
jg
sbb
mov
popf
enter
sbb
pop
mov
sbb
mov
call
shl
cmp
out
mov
sbb
mov
jbe
sbb
pop
scas
je
mov
xor
cmp
pushl
push
lret
xor
xor
movsb
out
test
cli
ljmp
roll
cmc
adc
cli
sbb
or
fiaddl
xchg
cli
call
call
aad
testb
mov
and
andl
pushl
into
ret
out
mov
adc
int
cmp
add
incl
jmp
sub
sbbb
fdivp
mov
lea
insl
or
testb
test
repz
jmp
inc
push
enter
jae
sbb
xchg
stc
cmp
into
jmp
jo
inc
cli
popa
cmp
sub
in
les
jl
fists
call
ljmp
data16
pop
movsl
nop
push
jmp
pop
sub
addl
push
aas
fisttps
jg
push
sbb
test
sti
adc
leave
lcall
testb
rcr
loopne
or
stos
push
pop
cmp
xchg
fnsave
add
xchg
xchg
nop
xor
lcall
arpl
add
shrl
push
mov
mov
test
loop,pt
add
imul
push
adc
pushl
dec
mov
mov
cs
fidivrl
imul
rorl
cld
dec
sti
or
lods
pop
rolb
in
inc
push
push
pusha
icebp
xchg
pop
cwtl
inc
icebp
mov
leave
je
dec
adc
mov
pop
bound
cmp
fadd
mov
ljmp
adc
js
int
sbb
mov
cmpsb
fmuls
dec
mov
outsl
leave
or
rorl
call
add
nop
push
adc
jecxz
cmp
xor
pop
cmp
incl
xchg
sbb
jle
movsl
xchg
push
dec
ljmp
leave
lea
shl
xchg
cmp
inc
outsb
data16
cltd
cmp
mov
std
call
lret
xor
cwtl
divl
jno
mov
fnstcw
gs
jge
add
test
call
push
add
mov
or
mov
dec
add
jg
stos
ret
popa
jo
jmp
mov
std
xchg
outsl
aam
lret
cmp
push
add
outsl
jg
fwait
repnz
lods
ret
inc
arpl
adc
push
testb
sbb
jmp
jle
xchg
or
out
ljmp
repz
scas
in
mov
inc
mov
fnstsw
mov
in
or
push
pop
push
inc
mov
rcrl
repnz
aam
je
rolb
jmp
dec
sbb
dec
sbb
adc
js
mov
cld
out
sahf
xor
loop
mov
aaa
mov
or
iret
lret
and
call
sbb
fdivl
mov
xchg
push
inc
ret
pop
jg
or
fmulp
mov
xor
add
bound
lcall
mov
dec
push
pop
pop
sti
in
movl
add
dec
cwtl
cmpsb
jle
xchg
xchg
mov
cld
sub
xlat
jecxz
rcll
dec
pop
std
pushl
pop
jmp
les
pop
sbb
dec
std
pushl
add
cli
adc
pop
jl
add
das
daa
cli
jl
push
lret
stos
clc
test
std
scas
xchg
and
aam
mov
bound
cmp
lcall
push
sbb
es
xchg
ja
add
mov
mov
dec
or
or
fsubrs
fcompl
sbb
mov
repnz
fidivs
and
lcall
push
mov
inc
cli
iret
jo
pop
ja
movsl
adc
leave
push
out
aad
test
mov
das
pop
dec
mov
int
push
ror
xor
rclb
pop
pusha
mov
sbb
push
aad
add
movsl
jle
fbstp
stc
push
xor
add
inc
add
dec
std
rclb
decl
lcall
jae
filds
jg
imul
cltd
fdivs
dec
sbb
mov
pop
clc
ljmp
faddl
push
pop
movsl
mov
cmp
sbb
out
call
cmp
pop
or
mov
daa
jo
sub
cmc
stc
hlt
incl
stos
cmc
cmp
repnz
je
xchg
out
shll
enter
xchg
add
in
std
jg
ret
pop
test
push
cmpsb
pop
push
stos
xor
sti
fwait
addr16
ljmp
fsts
aas
jmp
pop
lods
push
cmpl
decl
test
mov
pop
cltd
lahf
popf
push
xchg
adc
inc
aam
lcall
pop
sub
pop
dec
ficompl
insl
in
sarl
add
clc
neg
data16
dec
push
mov
iret
mov
lds
jbe
sbb
cmpsb
xor
cmp
ja
pushl
insb
mov
aad
or
xchg
stos
test
jb
inc
push
jo
sub
jmp
push
call
push
xchg
sbb
std
pop
mov
adc
mov
lds
icebp
mov
xchg
jo
cld
adc
lea
incl
lods
sahf
sti
aam
scas
mov
fbstp
sub
pop
les
idivl
mov
int
lods
push
dec
cmpsb
xchg
xor
ds
cltd
and
pop
xor
jmp
mov
push
call
mov
fcmove
adc
ljmp
movsb
jmp
lods
call
popf
and
jmp
jb
xchg
sbb
and
testb
mov
ljmp
inc
push
pop
addr16
jge
std
call
je
loope
ja
fistpll
stos
jns
cltd
mov
sbb
loope
and
mov
mov
lcall
push
pop
dec
xor
push
out
jmp
pop
jb
orb
inc
mov
in
xor
cmp
in
jg
mov
fidivrl
stos
enter
dec
das
repnz
das
icebp
ljmp
xchg
ljmp
push
add
notl
inc
or
decb
aas
ret
aas
lret
push
lahf
out
loope
popl
clc
jg
dec
xor
inc
push
in
lods
popa
and
add
mov
icebp
data16
stc
jbe
adc
xor
test
xor
sub
fbld
dec
dec
lea
inc
xor
pop
bound
outsb
fsubrs
aam
stc
adc
mov
pushl
xchg
js
mov
adc
adc
rcrl
imul
ljmp
imull
xchg
sbb
andl
jmp
mov
pushl
enter
xlat
fistps
addl
push
jg
pushl
push
les
cmp
call
clc
call
leave
or
sti
pop
ss
shll
cwtl
jae
call
pop
jo
push
dec
jmp
shl
mov
or
addb
lcall
stos
sbb
push
adc
das
out
rolb
lret
mov
loopne
mov
push
stos
fcompl
jecxz
lgs
lock
add
inc
pop
cmc
call
cmp
outsb
mov
in
je
fwait
sbb
lcall
pop
push
mul
lcall
xor
lret
push
lcall
out
in
sub
std
mov
add
or
mov
fidivs
or
xor
clc
ljmp
dec
lock
cmp
cmp
aam
sarb
push
cmp
lret
sar
rol
dec
xchg
repnz
pusha
mov
int
jb
pop
mov
aad
pusha
inc
sub
xor
sbb
cmp
or
repnz
jmp
sbb
pop
pop
mov
or
and
das
cld
jg
push
sahf
sub
lods
bound
xor
pop
jb
sub
stc
fbstp
cli
out
sub
mov
test
clc
subb
xchg
clc
stos
sbb
or
in
rep
orl
decl
decl
dec
pusha
aad
pop
repnz
mov
adc
in
jns
push
incl
popa
sbb
lods
sbb
add
sub
aas
pop
movsl
cwtl
push
xchg
mov
nop
test
lods
ja
outsb
fcmovnb
ds
jl
lods
inc
or
cld
lods
loop
sub
dec
inc
add
daa
aam
dec
aas
arpl
jg
shlb
in
in
lret
adc
xchg
mov
xorb
inc
lea
clc
xor
adc
bnd
dec
cld
mov
lods
fcmovbe
sbb
stc
inc
jns
scas
mov
jnp
mov
mov
outsl
xlat
and
test
into
ficoms
jmp
rcr
xor
mov
sbb
hlt
imull
or
fisttpl
xor
arpl
jg
xchg
mov
ljmp
add
mov
mov
mov
sar
mov
pop
push
mov
loop
jg
mov
xchg
imul
icebp
jmp
xor
arpl
jb
in
and
jae
add
cli
push
loop
or
lea
je
mov
sub
orb
mov
inc
push
call
push
jb
rcrb
lds
ss
cmp
push
xchg
mov
lahf
cmc
imul
pushl
sbb
out
pop
scas
ss
inc
lds
int
aad
out
cli
or
pop
adc
pushl
or
jbe
je
jae
dec
mov
aaa
lcall
in
cmc
mov
jnp
adc
cmpsb
enter
aam
arpl
lahf
inc
fidivrs
mov
jne
push
incl
enter
xlat
adc
xor
dec
sbbb
lods
jge
aas
cs
into
add
icebp
add
push
sbb
leave
ja
popa
fwait
int3
incl
aaa
fdivs
inc
out
mov
sub
cmp
jg
lcall
xor
mov
sbb
scas
mov
fwait
pop
arpl
or
pushl
movsbl
xor
add
jl
pop
inc
ss
or
incl
sub
mov
fldenv
fdivrl
mov
arpl
jno
outsb
movsl
cmpsb
clc
decl
xor
adc
fnstsw
sbb
fiadds
cmc
mov
inc
dec
mov
xlat
mov
ljmp
or
xlat
inc
push
mov
pushf
and
call
pop
shlb
push
bnd
clc
xor
es
fldcw
push
mov
cmp
rcrl
jmp
mov
fiadds
movsb
repnz
lret
mov
mov
jecxz
decl
sbb
stos
or
jge
xchg
pop
stos
imul
imul
mov
pushl
and
xor
dec
xor
adc
xor
add
clc
push
movsb
mov
daa
or
cmp
mov
insl
dec
push
push
ds
subl
notb
loopne
js
mov
ljmp
mov
stc
fnstsw
lods
lock
ja
fadd
xchg
jmp
sub
sahf
jmp
mov
sbb
add
pop
js
inc
or
fdivs
jecxz
pusha
mov
arpl
adc
das
inc
xor
sbb
cld
jg
clc
test
test
adc
or
mov
ljmp
xchg
pop
movsl
push
call
icebp
inc
dec
jae
adc
mov
dec
movsb
ret
lret
jmp
xlat
in
fildll
aaa
sub
vzeroupper
adc
lods
pop
pop
mov
sub
mov
cltd
push
mov
clc
cmp
cmpsb
loop
mov
adc
notb
sub
sub
mov
in
mov
jg
pop
rcl
bound
subl
sub
jl
push
mov
sub
ss
sub
lods
sbb
jg
call
test
addr16
add
je
pop
mov
movsl
mov
adc
cli
dec
imul
mov
sub
mov
out
aaa
inc
dec
adc
pop
pushl
cli
mov
mov
repz
xorb
dec
daa
add
dec
adc
add
push
xchg
push
xor
or
dec
cld
inc
aad
lcall
hlt
jg
stos
sub
ljmp
decl
pop
mov
loope
fs
inc
fidivrl
aam
mov
decl
pop
xchg
dec
inc
lods
sbb
mov
inc
stos
pop
or
pop
cmp
jmp
mov
js
and
jg
bound
call
incl
les
jns
sti
outsb
push
ret
sub
sub
inc
sub
decl
pushl
clc
rorb
push
adc
pop
push
inc
fiadds
xchg
add
mov
sti
sti
bound
adc
aad
push
mov
ljmp
incb
inc
out
test
sti
xchg
jbe
nop
mov
mov
jle
cmp
or
push
dec
push
mov
xchg
jl
pop
cli
lcall
xor
mov
dec
push
cmp
dec
icebp
pusha
jg
xchg
add
fistpl
mov
xlat
stc
ja
or
lahf
pushl
movsl
xchg
mov
in
orb
jg
int
inc
jmp
sub
add
das
imul
call
outsl
push
mov
xchg
les
inc
mov
mov
xchg
in
mov
inc
adc
xchg
outsl
shlb
insl
incl
xchg
cli
push
dec
int3
movsb
in
mov
js
jp
icebp
in
aas
ljmp
sub
add
mov
in
cmp
loopne
and
xchg
jmp
call
lock
loop
decl
ficomps
mov
in
decl
cwtl
cltd
dec
add
div
clc
xor
xchg
cli
and
mov
das
mov
jno
nop
sub
inc
push
sub
ffreep
stos
loopne
push
inc
out
ret
out
mov
icebp
neg
pop
lcall
loopne
clc
mov
fistpl
push
mov
xchg
or
cmpl
ja
imul
push
mov
sbb
inc
lcall
push
insl
mov
pop
in
add
call
fucomp
pushf
ljmp
pushf
sub
cmp
lret
and
mov
in
jno
jg
dec
xor
mov
xor
sbb
test
or
rcl
jns
sbb
xchg
js
jle
pop
cmp
or
pop
fsubrl
sub
ror
xor
outsb
imul
push
and
add
imul
clc
jbe
mov
ljmp
call
pushf
pop
mov
pop
rcr
addr16
mov
push
push
lock
adc
lret
adc
scas
or
xchg
dec
jecxz
enter
add
push
dec
call
popf
inc
out
ja
mov
lret
fwait
sub
pop
jge
hlt
mov
mov
inc
lcall
inc
lock
stos
loope
es
stos
data16
xchg
pop
mov
test
push
pop
loop
decl
push
stos
push
adc
sbb
sahf
ret
outsl
sbb
idivl
xchg
ljmp
icebp
incl
cmpsb
movsl
jae
mov
popa
xor
sti
cmp
out
jg
jmp
fmul
gs
aas
push
xchg
pop
inc
dec
jmp
pusha
sub
ffree
push
mov
aaa
clc
call
popl
jp
xchg
mov
jge
jno
pop
dec
jge
xchg
dec
pushl
decb
jp
cmp
cmp
jbe
subb
es
fisttpl
repnz
test
fisttpll
add
dec
cmp
sub
test
in
loopne
in
xchg
jge
add
adcb
mov
pop
in
outsl
cld
pop
xor
fsts
sbb
sub
push
cmp
lcall
or
mov
sbb
mov
lods
or
sahf
nop
cli
pop
clc
call
aas
dec
xchg
sub
jns
xchg
mov
mov
sub
aaa
aaa
insl
mov
call
dec
test
or
cmp
ds
test
jge
mov
mov
jnp
mov
outsb
lods
jecxz
pop
hlt
rep
ja
cmp
leave
cltd
xchg
insl
pop
mov
imul
das
fisttpll
push
cmpsb
pop
fwait
push
push
fsubrl
mov
sar
lcall
lcall
adc
xor
push
sub
scas
mov
cmpsl
xchg
pop
xchg
call
push
mov
ds
dec
inc
enter
mov
inc
xorb
movsl
cmp
decl
fwait
cmp
sahf
mov
jb
sbb
out
or
cwtl
std
mov
arpl
or
out
test
pop
jp
adc
test
hlt
ret
inc
ljmp
hlt
mov
adc
bound
neg
xchg
in
jae
xchg
mov
or
shll
incl
pusha
popf
int3
sub
das
jle
or
inc
nop
ds
sar
pushl
dec
ficoml
ljmp
ljmp
mov
cld
test
jbe
jmp
movsb
sbb
imul
lock
push
xor
cmp
mov
pop
ljmp
outsb
ds
js
mov
aas
xor
incl
sarl
pop
push
mov
jge
dec
fwait
jl
push
mov
cmp
incl
iret
push
cwtl
sahf
mov
fwait
cli
jae
mov
lcall
sbb
ret
jnp
xchg
int
mov
pop
out
scas
pop
pushl
cli
aad
jge
or
test
xor
out
outsb
jle
push
lret
decl
imull
stos
mov
insb
jne
dec
add
pop
jecxz
mov
and
pop
and
mulb
daa
jecxz
cmp
dec
jg
jbe
jg
xchg
imul
and
push
lds
push
sbb
std
mov
pop
inc
jno
push
test
mov
mov
inc
push
and
fistps
pop
test
das
std
dec
ljmp
or
imul
fsubrs
inc
cmp
mov
xchg
aas
sub
xchg
dec
lret
jb
and
incl
add
inc
xor
jg
repnz
adc
mov
mov
or
out
sub
into
addr16
or
sti
incl
dec
int
push
and
ret
cmp
fidivl
or
sub
orl
dec
jp
mov
sub
scas
sahf
pop
mov
ljmp
push
shl
sbb
cmp
jp
shll
and
jmp
jecxz
mov
inc
ret
daa
shl
cmp
std
daa
mov
cld
or
pushl
pop
aas
add
int3
arpl
xchg
adc
lcall
mov
fimull
xor
lcall
push
test
js
aaa
clc
mov
nopl
and
push
out
mov
sub
or
jo
cli
lcall
mov
and
insl
push
and
cmp
xlat
mov
pop
xchg
insb
in
int
sub
ljmp
test
mov
addr16
leave
adc
mov
call
orl
or
sbb
bound
outsl
je
leave
repnz
jle
mov
std
ds
ret
loope
ss
shr
xor
mov
decb
and
inc
xchg
div
pop
fs
ljmp
cld
mov
pop
or
test
jle
adc
jne
cmp
and
jmp
das
ljmp
ficoml
pop
sub
iret
pop
popa
fistl
mov
mov
sub
flds
xor
xchg
jg
outsb
add
ret
mov
lcall
pop
rolb
movsl
call
ja
cmp
ret
cmp
leave
sbb
decl
jge
cmp
imulb
iret
nop
aas
ffreep
and
fistl
fidivrs
inc
and
sar
dec
sbb
cld
or
outsl
add
arpl
sbb
or
ljmp
sbb
pop
push
dec
sbb
jne
push
xchg
cli
ljmp
es
call
cmp
shlb
xchg
call
outsl
jmp
xor
incl
inc
cmp
rorl
arpl
popa
push
loop
test
inc
adc
mov
movl
jmp
mov
mov
mov
stos
mov
insl
lcall
pop
aaa
push
push
cmp
jmp
rorl
loopne
mov
push
inc
fadds
add
fists
inc
scas
lahf
shrl
dec
mov
jp
aad
push
inc
and
into
and
mov
and
es
or
mov
sti
push
inc
xor
mov
cmp
jg
ficoml
and
rol
jns
push
roll
push
lds
cmp
out
xchg
jmp
cmp
mov
xchg
sbb
das
lock
pop
adc
inc
pop
jbe
ficomps
xchg
lcall
out
cmp
ret
jecxz
xchg
add
aam
pop
pop
mov
inc
repnz
inc
outsb
xchg
xchg
sbb
xchg
jecxz
mov
les
and
fdivrp
es
xor
sub
divb
mov
adc
inc
adc
lods
adc
ficompl
pushf
clc
call
test
mov
subb
pop
out
xor
shrl
pop
mov
sub
pop
idiv
pop
add
jmp
dec
cmp
aam
sti
push
push
fisttps
lods
and
mov
icebp
daa
pop
mov
cmp
sti
sub
je
lock
shlb
xchg
imul
shr
loop
inc
pop
xchg
decl
sbb
cmpsb
dec
jecxz
mov
pop
pop
cld
inc
pop
and
jb
pushf
dec
pop
pop
inc
fwait
lds
cmp
pop
std
ret
pop
nop
mov
cmp
jg
adc
inc
jecxz
fdivr
dec
aaa
push
std
or
or
push
cmp
pop
fildll
jg
sbb
in
fwait
in
add
fwait
in
ljmp
dec
repnz
fists
bound
in
fwait
add
aaa
ss
mov
push
ss
iret
xchg
arpl
xchg
mov
fsubl
adc
outsl
pop
jmp
lret
or
mov
ja
inc
add
dec
xor
mov
decl
lods
mov
mov
pop
xchg
cmp
repz
pop
and
movsb
popa
aaa
ja
call
movsb
and
fmuls
or
ds
dec
pusha
mov
and
ja
das
sub
aaa
lcall
xchg
enter
aam
idiv
jns
jmp
mov
xchg
movsb
pop
jg
add
pushl
stc
ja
lds
inc
push
jg
loope
int3
scas
xor
les
shl
in
xor
pushl
aam
mov
je
arpl
scas
add
mov
mov
cmc
jle
xorb
lret
ds
mov
jnp
idivl
pop
sbb
or
pushf
ljmp
push
push
call
adc
out
jge
das
lods
mov
mov
fldenv
out
lods
pop
mov
lcall
shll
pop
jmp
out
lea
jns
sub
fnstenv
inc
xchg
fdivrl
pop
xchg
ljmp
cmp
and
xchg
repz
ljmp
or
js
pop
inc
or
cwtl
mov
mov
mov
fnop
ror
imul
insb
mov
iret
mov
pushl
repnz
mov
xchg
lods
mov
lock
js
test
int3
in
arpl
call
jmp
sub
mov
test
orb
lret
decl
call
or
xor
imul
mov
idivl
push
jmp
in
inc
pop
stos
push
xchg
push
cmp
dec
sub
mov
fisttps
jg
ljmp
xchg
mov
fistl
pop
sbb
es
sti
cld
and
fcos
ljmp
cld
push
idivb
mov
mov
aam
jg
les
in
bound
mov
jns
sbb
jae
pop
int3
fidivrl
ljmp
rcrl
fwait
loop
negb
sbb
movntq
bound
push
lcall
stos
jmp
aam
sbb
mov
aam
scas
push
lea
ljmp
mov
xor
xor
add
inc
insl
mov
sub
nop
jne
cmp
les
mov
lods
inc
lcall
sbb
jns
les
add
pop
mov
aam
cltd
cld
jnp
or
mov
sub
fldl
or
sarl
ds
dec
jne
xor
pop
mov
loopne
test
xor
sahf
push
ficoms
mov
incl
lcall
or
andb
mov
jne
fistl
dec
shlb
jb
push
outsl
std
mov
in
jo
or
les
js
out
fistl
call
test
jle
in
rclb
jmp
dec
popa
mov
push
adc
shll
mov
test
cmp
icebp
dec
les
mov
sti
in
or
xchg
dec
decl
mov
lahf
or
enter
dec
sar
pop
bound
imul
pushl
clc
xlat
inc
jle
ja
shll
pop
xchg
stos
xor
cmp
lcall
sbb
test
or
sar
mulb
shlb
cld
arpl
mov
loopne
movsl
jge
add
ret
loopne
sub
jmp
aas
mov
jmp
mov
xor
add
mov
jl
jg
fcomip
xor
or
sub
pushl
adc
fmull
xor
js
mov
adc
sbb
or
inc
les
aam
test
lea
mov
negl
jo
dec
mov
call
mov
in
or
je
decb
xor
mov
xchg
lret
jo
adc
loopne
xchg
cld
xchg
jge
sbb
sub
inc
mov
xchg
cmp
rcrb
enter
sbb
pop
js
jmp
mov
stos
push
adc
inc
mov
in
ds
dec
sub
cld
jns
call
test
call
pavgb
sub
sbb
inc
notl
scas
sar
jmp
jns
adc
je
das
aad
mov
xor
cmp
mov
jo
push
popa
enter
mov
scas
test
pop
inc
enter
adc
decl
inc
mov
subb
mov
dec
pop
jns
xor
repz
cmp
das
sub
cmpsb
jg
or
jbe
fistpll
or
mov
cmp
rcr
adc
cmpl
lock
ljmp
lods
ljmp
mov
lea
testl
out
xor
dec
insl
jl
or
inc
lcall
popa
dec
jle
in
push
dec
pop
pop
call
aas
add
stos
sar
jns
pop
inc
push
push
arpl
cmp
mov
and
mov
repz
mov
cmp
pusha
aad
out
loop
rorl
out
in
pop
repnz
scas
es
dec
test
cli
fcmove
and
and
jnp
sbb
js
xchg
out
shl
xchg
sbb
xchg
jge
xlat
decl
das
dec
pop
adc
rolb
lds
mov
jle
shll
pushf
test
decl
xor
cmp
add
mov
sbb
or
insb
mov
jle
icebp
ljmp
and
jmp
push
aam
pop
mov
inc
cld
ds
fidivrl
movsl
repz
dec
in
cld
ljmp
mov
dec
pop
lock
or
cmc
das
push
call
cmp
dec
dec
pop
cli
ljmp
jns
and
outsl
lret
sub
pop
jg
jmp
shlb
insl
push
lea
mov
mov
lahf
lret
loopne
decl
in
pop
or
popa
clc
or
mov
inc
mov
or
inc
lods
cmp
and
xor
popf
or
andb
adc
xorb
or
add
stos
int3
cltd
les
mov
mov
adc
or
add
push
mov
mov
sbb
cmp
and
pop
dec
mov
cld
ljmp
lcall
fldt
pop
cmpsl
jo
mov
loopne
or
lcall
jmp
pop
clc
dec
mov
ds
mov
es
ljmp
std
call
insb
gs
shrb
sub
lret
sub
fildll
mov
mov
push
inc
xorl
cmpl
dec
jl
jbe
pop
loope
shrb
nop
lcall
adc
ret
incl
xor
sti
pop
adc
cmpsb
mov
mov
pop
cmp
xchg
fsubs
repz
call
push
dec
mov
loop
pusha
and
mov
fsubr
jge
sbb
push
fucomip
xlat
mov
inc
js
daa
adc
cmp
aaa
iret
fcmovu
xor
xchg
in
ljmp
mov
je
lret
fldlg2
aam
rcl
ja
call
andb
dec
iret
jp
scas
mov
in
pop
xor
sbb
sbbl
inc
scas
mov
cmp
or
popf
mov
mov
dec
imull
in
mov
jbe
scas
or
push
imul
dec
loopw
fs
scas
push
outsl
cld
call
and
je
sbb
push
xor
push
jmp
popf
add
xor
push
add
mov
lods
add
ds
push
mov
call
lcall
or
mov
or
jge
enter
stc
js
or
incl
or
enter
hlt
rcrl
mov
and
hlt
clc
cld
lcall
push
int
movsl
pop
xor
clc
inc
testb
enter
jp
push
testb
mov
orb
push
add
mov
lcall
pop
adc
add
mov
arpl
repz
add
lret
lcall
jmp
nop
stc
or
js
adc
sarl
in
push
or
ljmp
lock
cld
sub
stc
nop
js
mov
pop
lret
push
xchg
fs
jnp
js
ljmp
add
jge
ss
mov
rclb
xchg
scas
arpl
lods
xchg
lds
call
ror
mov
outsl
xchg
jmp
and
xchg
dec
jg
dec
cld
in
lcall
adc
pop
or
sbb
idivl
mov
mov
push
je
incl
cmp
adc
stc
fucomp
mov
dec
adc
mov
test
std
incl
movl
ret
or
inc
addr16
push
movsl
sbb
data16
data16
jmp
aaa
xchg
cmp
pop
mov
icebp
push
push
int
mov
mov
aaa
pop
call
inc
dec
andb
xor
imull
jo
lock
lcall
xor
lcall
repz
xor
js
cmp
sbb
mov
xlat
jb
leave
dec
ret
dec
fcomps
idivl
dec
and
mov
xor
lock
sti
jle
xchg
ss
sub
call
pop
imul
ds
add
xlat
adc
mov
inc
lcall
inc
mov
scas
mov
add
shl
push
fcompl
sbbb
test
cmpsb
invd
dec
inc
xor
movsl
ljmp
xor
or
xor
ficompl
pop
je
imul
fisubrs
js
jb
bound
pushf
mov
or
rcrl
push
or
cli
aad
mov
les
or
icebp
stc
jnp
fimuls
repz
xchg
xchg
fs
sarl
jo
fwait
xor
pop
loopne
pop
call
bnd
mov
pop
pop
lods
je
add
push
ret
lahf
cmp
sub
or
cld
jl
test
inc
fwait
push
xlat
push
inc
mov
sub
out
jp
incl
test
mov
test
roll
sbb
jg
imul
mov
pop
jg
decl
add
lods
add
sub
dec
inc
xor
cld
jmp
adc
addl
cs
adc
cmpsl
xchg
pop
pop
adc
scas
in
dec
and
xchg
ret
xor
or
add
fisttps
in
jno
adc
das
lret
mov
clc
negb
push
mov
and
enter
mov
jne
out
shlb
jg
lcall
mov
pop
jge
repnz
loope
scas
sbb
jg
sarl
decb
dec
push
outsl
push
out
sub
stos
lcall
scas
sub
ror
pop
pushl
ret
sub
dec
xor
sbb
stc
mov
mov
push
sub
and
icebp
out
mov
ljmp
iret
sbb
cld
pop
sbb
ret
das
test
stos
scas
xchg
fcomip
dec
sub
movsb
mov
cli
inc
inc
sbb
or
sub
inc
ret
jecxz
mov
jecxz
jne
mov
mov
sub
insl
mov
xor
inc
sarb
mov
incl
imul
adc
fiadds
divl
add
jg
push
xor
insl
push
push
inc
mov
sbb
or
lcall
mov
rcr
lret
insl
mov
out
adc
ret
mov
mov
incl
in
push
cmpsb
pop
or
shlb
popa
ja
imul
jmp
movsb
daa
insl
hlt
lcall
add
mov
inc
push
imul
xor
test
call
ljmp
mov
les
sbb
fs
xchg
daa
sbb
fisubl
cmp
loop
mov
push
mov
inc
sub
dec
mov
sub
mov
add
lcall
add
pop
push
sub
aaa
inc
int
out
inc
and
xchg
data16
fldt
jmp
or
setl
or
fstps
addr16
jae
ljmp
mov
xchg
mov
pushl
mov
stos
or
push
adc
sarl
mov
rcll
ljmp
icebp
xor
js
dec
mov
mov
add
ljmp
mov
incl
push
lods
sbb
lcall
inc
inc
enter
lock
and
xlat
adc
mov
rclb
enter
jns
fs
gs
insb
dec
sub
shll
cmp
repnz
lcall
das
pop
xlat
mov
push
mov
pusha
lret
and
fsts
incl
sub
outsl
ds
jnp
cmp
test
loop
decl
xchg
fcomi
mov
mov
pushf
fsubl
imul
jg
das
cld
push
out
sub
clc
sahf
aad
loopne
mov
xchg
ficomps
push
into
orb
pop
pop
xor
xchg
add
pop
cli
inc
lcall
cmpsb
loope
inc
arpl
adc
sarb
das
lock
mov
push
sbb
or
mov
ss
mov
pop
mov
jmp
les
and
push
adc
cmp
jle
dec
inc
call
add
shlb
aas
push
orl
lock
mov
jae
les
or
ret
outsl
std
aaa
dec
jl
push
fadd
xlat
lahf
fimuls
push
mov
xchg
adc
cmp
aad
sub
xchg
pop
jmp
push
test
pop
aas
adc
ret
xchg
lahf
into
icebp
test
mov
pop
hlt
cmp
sbb
cli
daa
jns
jle
daa
cltd
dec
repnz
xchg
outsb
xchg
das
mov
inc
mov
push
mov
ja
xchg
leave
adc
in
jg
mov
dec
adc
rclb
sbb
imul
loope
sub
cs
mov
loop
daa
xor
or
add
int
mov
add
sub
std
pusha
mov
xchg
jno
dec
dec
test
mov
loope
and
mov
mov
leave
sbb
nop
in
or
movsl
test
inc
cmp
inc
jo
xchg
inc
stc
aad
push
push
loopne
stos
mov
stos
pop
adc
xor
cmp
andb
xor
cmp
jno
pop
call
dec
fdivr
shl
add
data16
mov
push
push
mov
jmp
inc
pop
cmp
mov
add
sar
ja
xor
jne
inc
jne
aad
pushl
jge
jno
mov
mov
loope
jo
sbb
push
aas
popa
push
mov
pop
lahf
adc
cli
xchg
and
jg
jg
add
xchg
aam
mov
add
out
je
dec
loop
mov
pop
ja
or
and
adc
jo,pt
daa
in
adc
fldt
pushl
mov
out
fldcw
xorl
add
cltd
add
lods
push
pushl
clc
andl
daa
stos
out
mov
loopne
xor
je
mov
lcall
into
aaa
lock
test
lret
sbb
div
inc
cmpsl
adc
lock
clc
push
inc
stos
xor
inc
pop
ffreep
insb
imulb
gs
push
push
pop
insl
inc
or
ret
test
push
or
push
pop
dec
std
lcall
cltd
lahf
outsb
inc
push
mov
xor
shrl
mov
xchg
in
pushl
aaa
push
cmp
add
mov
outsb
mov
fbld
shrb
lea
cmc
sbb
jmp
dec
push
fucomi
pop
mov
clc
add
or
inc
mov
xor
dec
call
call
cmp
cld
or
sub
mov
test
lret
incb
cmpsb
cmp
ljmp
xchg
cs
mov
jae
push
enter
data16
jmp
sub
incl
push
and
imul
sbb
icebp
inc
sti
xchg
xor
pop
lds
xchg
into
cmpsb
xlat
pop
movsl
xor
popa
daa
and
mov
call
incl
and
push
push
dec
out
mov
xlat
jo
jnp
jmp
daa
cmp
xchg
jmp
push
andb
fdivs
sahf
and
cmp
movsl
pusha
jg
iret
fisttpl
das
gs
inc
pop
xor
es
add
cmpsl
outsb
xlat
xchg
xor
in
iret
decb
inc
cmp
jne
pop
cltd
cmpb
imul
sub
mov
das
and
shll
xchg
sbb
jp
fnstsw
ljmp
mov
shr
andb
daa
pop
call
decl
in
xor
je
movsb
loope
decb
lcall
pop
sub
ljmp
repz
or
jb
add
sbb
cmpsb
jg
jp
sbb
adc
mov
add
dec
das
push
lahf
ds
jno
ret
mov
jns
lea
cli
jnp
xor
rol
incl
loope
xchg
lods
pushf
pop
mov
jnp
lcall
out
or
pop
pop
xchg
lock
call
je
movsl
ss
adc
sbb
xor
lahf
mov
cmpsb
xchg
mov
mov
xchg
int
xchg
mov
pop
call
dec
mov
hlt
push
inc
fnsave
sahf
addr16
jne
dec
sub
mov
adc
jnp
insb
inc
or
inc
cli
cmc
cmp
push
test
adc
push
cmpb
sbb
ljmp
mov
fbld
ret
dec
iret
imul
sub
lods
lcall
pop
imul
jb
adc
push
aad
stos
adc
popf
gs
mov
mov
loope
loop
sbb
clc
xchg
jmp
repnz
jne
adc
decl
mov
popa
popf
mov
mov
xlat
xor
aam
sub
repnz
fimuls
mov
sar
cmc
adcl
push
mov
jmp
cmpl
shlb
mov
push
adc
imul
xchg
jp
mov
fnstsw
pop
mov
popf
cmpb
lahf
add
incl
sti
xchg
addr16
sahf
dec
pop
sbb
jnp
das
mov
add
inc
out
in
sub
sub
push
mov
cmp
fidivl
pop
or
dec
inc
push
xchg
push
ret
incl
adcb
add
adc
push
stc
dec
in
sti
sub
in
popf
pop
xchg
stc
add
aas
decl
scas
pop
jnp
and
add
pop
pusha
inc
dec
xor
or
ficomps
mov
xchg
xchg
lods
xor
cld
jg
decl
mov
lods
orb
sub
in
mov
xchg
mov
sar
cli
mov
dec
or
mov
pop
mov
lock
lret
mov
cmpsl
sbbb
aas
dec
hlt
jl
mov
jne
call
cs
bnd
push
sbb
call
xchg
dec
jp
int3
enter
xor
cmp
decl
jle
add
xchg
dec
inc
mov
cld
and
cmp
jl
and
xchg
incl
sub
inc
mov
inc
jmp
sbb
lahf
mov
dec
push
jns
fadd
imul
and
or
jnp
cmp
std
call
out
sub
push
mov
mov
jnp
mov
inc
sub
add
xchg
in
mov
inc
xchg
mull
imul
call
jno
jge
inc
jp
cmpsb
jle
stos
cmp
pushf
ja
decl
jnp
cs
or
call
outsl
stc
hlt
adc
in
push
add
push
repz
mov
pushl
mov
push
andl
mov
xorl
fnclex
and
int
hlt
iret
lock
insl
pop
jle
mov
mov
test
or
xor
sub
inc
ljmp
out
ljmp
cmc
decl
or
jnp
xor
loope
sub
loope
test
sbb
xor
mov
pushl
cmpb
leave
mov
pusha
cli
or
out
dec
sub
adc
icebp
cmp
dec
call
pusha
jle
lds
sar
je
jmp
or
adc
dec
rcl
ljmp
dec
xor
mov
pop
and
mov
xchg
dec
loope
adc
dec
in
ss
aaa
inc
call
pop
repnz
jle
mov
insl
ret
in
pop
lahf
dec
pop
ret
inc
nop
and
lods
fbstp
subl
insb
fisttpl
mov
les
out
mov
std
incl
cmpsl
fisubrs
hlt
fldcw
adc
pop
icebp
addr16
dec
mov
inc
inc
cmc
jg
dec
sub
push
mov
jl
mov
mov
pop
mov
repz
cmp
mov
adc
mov
ljmp
xchg
and
push
push
or
lret
push
mov
jae
lcall
int3
shll
mov
jns
ja
or
out
push
mov
dec
addr16
jmp
dec
pop
incb
enter
pushf
arpl
jg
pushl
and
mov
inc
jbe
imul
or
movsl
das
std
jp
mov
decb
cmpsb
pop
or
aam
ljmp
icebp
outsl
xchg
and
or
pop
mov
add
lcall
xchg
pop
pop
popa
jp
cmp
test
mov
pop
out
jle
mov
mov
cmp
jmp
adc
inc
frstor
in
cltd
push
jbe
loop
setg
xor
jo
data16
sbb
push
inc
dec
stos
inc
adc
dec
enter
add
jg
jmp
xor
das
loope
je
and
or
or
call
or
in
inc
sbb
loope
jne
fsubr
jle
loope
sti
test
int3
pushl
das
and
sbb
jne
jns
fdivp
les
std
scas
add
push
xchg
mov
call
incl
pop
fsubrl
jmp
lock
xchg
sti
out
push
jg
nop
cltd
call
adc
add
test
pop
mov
jecxz
push
xor
push
jmp
ss
or
inc
xor
ret
les
pushl
cmp
in
das
lret
xlat
fwait
sub
lods
xor
and
stc
jo
jle
and
push
pop
mov
jmp
push
mov
iret
hlt
push
push
scas
pop
roll
clc
pop
inc
pop
sub
cmpsl
sarb
jnp
adc
mov
leave
call
idivl
decl
cmpsl
test
movsl
imul
jmp
add
popa
mov
incl
sbb
pop
jns
or
rcl
dec
ror
xchg
mov
mov
sar
push
out
rorl
mov
sbb
or
xchg
out
jno,pt
jns
loope
adc
sub
pop
ljmp
jge
mov
and
adc
gs
lock
mov
sarl
iret
cmp
sub
test
mov
outsb
lock
ljmp
ss
shll
idivb
ljmp
mov
data16
call
popa
cltd
or
ficoml
fcom
test
push
rcrb
add
decl
or
jmp
and
dec
sbb
shrb
pop
or
mov
loopne
incl
std
mov
imul
jo
incb
loopne
lret
fidivrl
inc
dec
ljmp
es
pushf
sub
addl
cmp
lea
push
or
dec
js
adc
decl
or
jp
jne
aaa
icebp
mov
inc
mov
adc
aad
int
mov
push
pusha
push
dec
add
pop
stos
inc
mov
mov
xchg
fstpt
call
dec
cmove
outsb
popf
in
aam
mov
sub
packssdw
fs
jns
dec
scas
add
mov
je
rcrb
mov
mov
push
rclb
push
ret
ljmp
mov
std
addr16
scas
sbb
fcomi
cwtl
lods
rclb
mov
mov
incl
fs
push
pushf
cmpsl
lds
inc
ret
nop
ds
pop
aas
aam
add
popf
out
outsb
pop
std
cmc
inc
std
ljmp
cld
push
mov
mov
scas
mov
inc
in
call
call
mov
cmpsb
dec
dec
and
int3
je
jle
int3
call
inc
push
jns
in
or
leave
insl
push
dec
fwait
mov
or
nop
aam
loop
mov
add
out
mov
rclb
jno
mov
lcall
pop
push
arpl
lea
test
popa
mov
pop
push
outsl
clc
call
xchg
mov
loop
pop
lcall
lods
mov
jns
into
dec
movsb
jae
aam
mov
cld
jg
xchg
dec
mov
jb
mov
decl
pushf
dec
or
sub
fnsave
mov
add
test
mov
pushf
ljmp
mov
in
inc
sar
ret
and
add
cmp
ja
pop
lods
scas
in
pop
jmp
mov
lea
ds
popa
push
xchg
push
and
vpsadbw
stc
and
ljmp
jle
inc
push
xchg
call
out
repnz
cmp
dec
outsl
sub
sarb
pushl
mov
sub
cmpl
push
cltd
adc
adc
aaa
xchg
dec
mov
insb
pop
jmp
inc
jp
movsl
mov
and
lock
dec
xchg
dec
xor
sbb
ljmp
jmp
inc
xor
js,pn
mov
sbb
decl
mov
push
cmpsl
movsl
sub
rol
xor
loop
in
push
and
inc
jae
pop
sahf
push
movsb
ds
gs
les
iret
sbb
lea
out
fwait
mov
ljmp
je
pop
test
aam
cmpsb
inc
and
inc
lods
int
lods
jl
roll
in
test
adc
outsl
sbb
cmp
ljmp
hlt
lds
mov
hlt
nop
mov
ljmp
std
pop
mov
xchg
aam
aad
pop
mov
and
icebp
inc
xor
pop
pop
ss
adc
call
push
lret
bound
out
out
mov
add
into
xchg
leave
gs
call
mov
outsb
cmpsb
sbb
mov
lret
jp
cmpsl
push
cwtl
push
push
pop
sbb
fildll
ret
sbb
sub
lcall
adc
cmp
out
cmp
ret
push
dec
cmp
push
lea
lret
jbe
lret
mov
adc
icebp
push
dec
sub
imul
add
or
xchg
inc
inc
imul
push
xchg
add
jle
xchg
incl
ljmp
popf
dec
push
inc
adc
and
mov
mov
call
aas
mov
test
js
jae
icebp
or
mov
sub
xchg
jle
and
jl
jnp
jecxz
clc
nop
int3
fwait
pop
cmpsb
mov
adc
mull
jb
push
mov
loop
xor
clc
pushl
or
xor
mov
repz
xor
test
ljmp
fsubr
fdivrs
pop
aaa
orb
popa
xchg
outsl
enter
icebp
sub
incl
je
test
xor
dec
dec
sub
daa
jbe
negb
inc
repz
add
aam
aas
faddl
flds
dec
cmp
lock
mov
mov
and
lea
call
xchg
and
decl
dec
xchg
sub
gs
sbb
ret
fwait
mov
aam
mov
push
dec
sbb
dec
loop
push
sbb
push
int
jnp
pushl
incl
enter
mov
outsb
outsb
out
movsl
insl
adc
jp
ljmp
lcall
sub
xlat
movl
cmp
andnps
add
mov
dec
mov
nop
lods
lret
push
jb
jecxz
mov
ljmp
bnd
ljmp
inc
rorl
xor
call
hlt
mov
push
push
push
mov
lret
lahf
stos
push
lcall
jl
adc
das
lock
mov
stos
mov
test
xor
je
and
xchg
std
pop
inc
test
imul
mov
xor
into
push
adc
sub
stos
sub
arpl
push
xchg
out
cmpsl
test
jg
cltd
dec
fisttpl
and
mov
mov
push
mull
mov
popa
call
std
int3
out
sahf
leave
ret
jns
pop
loope
test
adc
lcall
sbb
je
cmp
int
xchg
xchg
into
mov
in
das
insb
xchg
insb
out
ljmp
inc
pusha
cmp
or
dec
sub
sbb
adcl
cmp
pop
mov
repnz
lods
aas
xor
cmpsl
jns
cs
ljmp
jmp
enter
pop
jl
ja
inc
cmp
decl
call
or
fdivrs
data16
pushf
insl
mov
fcmovnb
mov
push
sarb
shll
pusha
dec
lcall
lcall
sbb
xchg
sbb
fcoms
inc
sbb
sbb
scas
adc
and
cmp
daa
dec
inc
in
push
jno
xchg
pushl
incb
xchg
fwait
mov
sbb
mov
lahf
lahf
imul
cmp
repnz
dec
sbb
adc
cmc
jle
fs
cmp
adc
inc
clc
adc
push
fsubl
mov
cmp
iret
mov
cmp
xor
testl
stc
inc
call
clc
fsubs
pushf
jmp
cwtl
mov
adc
and
push
pop
clc
mov
out
mov
jns
jge
xchg
rcrl
popf
movsb
stc
mov
push
jno
pusha
mov
pop
insl
sub
into
or
push
xchg
rolb
dec
or
lea
sub
xor
mov
xorl
mov
arpl
push
out
pop
nop
lods
mov
stos
rolb
test
mov
lcall
mov
inc
js
mov
pop
sbb
movsl
rol
cli
push
xchg
cli
sub
pop
jp
hlt
cmp
rol
incl
loop
in
mov
out
call
and
inc
adc
add
or
fisttps
stos
sub
shl
outsb
jbe
movl
push
dec
lock
sarl
aas
xor
jge
push
daa
mov
pop
idivb
xchg
or
adc
adc
out
movsb
in
or
xchg
decb
test
xchg
jp
pop
sbb
lea
sbb
loop
aad
sti
ds
fwait
sbb
and
sahf
or
ret
cmp
mov
dec
into
and
int
xor
jo
sub
out
imul
cmp
sub
popa
mov
pushl
loopne
loopne
push
ret
mov
iret
jbe
cmp
add
fnsave
cmpsb
ja
xchg
das
lock
in
out
sub
or
or
inc
in
pop
jae
sub
cwtl
cli
decl
imul
pushf
xchg
stos
xchg
std
adc
cltd
mov
pusha
dec
sbb
xor
call
or
fs
sub
inc
movsl
lock
jmp
ds
jmp
push
mov
jp
stc
jno
repz
test
pop
push
inc
popa
pushl
ljmp
sti
inc
cli
nop
sub
sub
add
push
pop
shrb
call
or
fnstenv
cli
and
addr16
ja
sub
adc
jge
dec
pop
xchg
incl
adc
xlat
and
test
mov
jbe
or
add
jmp
push
fisubl
push
mov
ljmp
push
inc
arpl
dec
mov
es
aad
call
mov
stos
iret
jb
jo,pt
enter
outsl
rcrl
and
sbb
int3
xchg
sti
daa
xor
fsubp
mov
jmp
xchg
or
jae
sahf
decl
or
fisttpl
xor
xchg
xor
call
xchg
cmc
lock
fdivrs
mov
cmp
pop
dec
ret
sub
adc
lret
popa
cvtps2pi
shr
mov
ret
pop
outsb
int
mov
xor
leave
adc
shl
xor
or
inc
std
lods
imull
and
jmp
pop
mov
pop
or
std
jg
or
mov
arpl
sarl
add
jl
mov
or
ljmp
repnz
cmpsb
mov
sbb
divb
and
jmp
jno
inc
jle
push
jnp
mov
std
pushl
mov
xchg
mov
add
das
loopne
lcall
sub
repz
sti
push
fadd
lock
cmp
or
loope
arpl
xor
inc
ljmp
adc
test
lock
popf
movsl
scas
adc
adc
iret
xor
inc
jl
cmp
jmp
jmp
jo
or
push
inc
idivb
xchg
sub
daa
jg
jg
iret
dec
mov
mov
out
and
loope
add
cmp
inc
xchg
xchg
xor
cmp
rclb
hlt
pop
cli
dec
jb
sar
rcr
inc
stc
push
inc
cmc
cs
inc
pop
jg
dec
int
inc
stos
xchg
movsb
mov
or
cld
push
out
jmp
sahf
cmc
test
jp
push
mov
cli
mov
jge
loope
inc
ljmp
jle
scas
fidivs
jp
rcrb
mov
add
popf
clc
leave
push
pop
dec
andl
hlt
mov
pushl
push
shrl
bound
or
in
mov
jae
or
or
xor
cmp
add
je
dec
outsl
ljmp
xchg
shlb
cmpl
repz
js
mov
jmp
ss
inc
xor
sbb
jns
cmp
cmp
cmc
incb
mov
mov
adc
add
xlat
inc
pop
lods
jg
mov
fstp
inc
mov
loopne
fld
dec
push
mov
adc
adc
pop
ljmp
xor
xchg
inc
iret
xchg
dec
cltd
js
jmp
mov
int3
aam
leave
lock
jge
mov
daa
insl
pop
vmread
stc
sub
std
fucomip
pop
jnp
lods
cs
fnstcw
add
xchg
xchg
das
lock
pushl
sub
push
shlb
sbb
lret
pop
repnz
jg
ljmp
loop
loop
movsl
jl
xchg
jae
in
aaa
sub
xor
dec
shll
mov
das
jmp
push
sbb
mov
lahf
dec
mov
sub
enter
call
or
push
push
pop
inc
add
fwait
and
das
sti
or
test
xchg
sbb
push
sbb
lahf
shl
adc
cmp
mov
nop
cmp
jne
fnclex
movsl
add
xor
add
push
xor
lods
mov
add
add
jbe
neg
loopne
and
data16
insl
push
jae
and
sub
and
add
andnps
or
mov
push
xchg
test
subl
sbb
jbe
add
add
add
add
xor
cmp
and
or
sbb
cmp
pop
pop
sbb
sub
outsb
je
push
sub
aaa
xlat
mov
jbe
sbb
pop
add
out
or
adc
pop
push
pop
and
pop
popf
scas
jne
jb
or
inc
pop
dec
push
fnsave
dec
sbb
adc
aas
insb
jb
fcoms
gs
or
push
add
dec
sbb
movups
add
adc
sub
sti
add
or
add
sbb
sbb
sub
fcompl
add
sbb
aaa
sbb
fiadds
jmp
add
sbb
sbb
leave
fadds
sbb
or
inc
fs
or
outsl
mov
fldenv
push
add
sbb
add
sbb
mov
in
test
add
sbb
push
add
add
mov
lldt
ss
in
sbb
call
or
cmp
loope
icebp
xchg
jb
sahf
jecxz
or
inc
aas
repz
nop
mov
jg
inc
dec
or
int3
sbb
out
in
jge
hlt
cmp
sbb
jg
xor
push
fisttpll
pop
iret
cmp
repz
fsubp
gs
shr
aaa
push
sub
mov
loopne
dec
mov
movsl
cmp
cmp
int
add
rcl
push
inc
decl
adc
cmp
out
sahf
jns
mov
pop
fwait
pop
mov
xor
mov
lcall
ljmp
lret
inc
xchg
inc
fprem1
cs
xor
add
lds
sub
jae
push
call
nop
xor
scas
sub
or
in
aad
mov
sub
push
aam
cs
sub
mov
jbe
outsb
in
ljmp
lods
mov
pop
popa
inc
insb
jbe
cld
outsb
pushf
sbb
mov
add
pusha
pusha
mov
push
mov
pop
mov
fs
call
pusha
in
mov
call
pusha
cs
adc
mov
add
cli
fstp
shr
dec
lcall
idivb
fisttpll
in
out
cmp
push
pushf
pushf
call
push
cmp
mov
shl
sbb
std
jg
jne
insl
xchg
clc
setnp
movzbl
ficomps
jmp
fnstsw
cwtl
pop
data16
and
call
or
ds
inc
call
mov
adc
adc
mov
pusha
nop
pusha
pushf
push
push
dec
jmp
pushf
or
ss
adc
jp
jmp
add
test
jmp
xchg
xchg
imul
enter
mov
pop
push
pop
ja
or
inc
push
call
mov
add
and
or
es
push
call
cmp
sub
shlb
arpl
mov
mov
pop
pushf
sbb
xchg
or
inc
cmp
cmc
and
mov
sub
sbb
dec
cmp
and
not
pushf
pop
jmp
lds
stc
jmp
stos
mov
sbb
xchg
pmaddwd
xor
dec
das
insl
adc
in
imul
ds
jnp
pushf
jno
add
andl
jecxz
mov
mov
cli
popa
jne
orl
add
add
pop
xorb
dec
nop
jns
imul
cmp
lahf
mov
negb
sub
shlb
mov
loopne
ret
fistpll
jmp
push
aad
and
xor
ljmp
adc
xchg
cmp
or
iret
push
pushf
mov
mov
cmp
addr16
outsb
mov
test
push
jecxz
xchg
or
xor
test
xchg
loope
add
mov
in
popf
mov
or
jmp
das
cmp
iret
jne
or
addr16
sbb
xchg
dec
jb
add
jne
and
pop
dec
stc
push
pusha
push
cmp
jmp
jnp
mov
push
lahf
jmpw
jmp
adc
aad
in
add
push
mov
les
xchg
adc
gs
mov
lods
sub
xor
and
std
sub
xchg
rcrb
movl
fnstenv
testl
fbstp
add
sti
lock
lods
mov
call
hlt
mov
fsubr
adc
mov
cmp
push
push
or
sbb
cli
sti
mov
movb
shr
sbb
sbb
bound
mov
mov
shlb
jne
out
sbb
pop
mov
sbb
and
push
dec
add
add
cmp
adc
outsl
pop
out
icebp
inc
rcr
or
xchg
cs
mov
xorl
ret
enter
push
pushf
mov
mov
cmpsl
xchg
push
pusha
ja
mov
mov
mov
in
push
ds
pop
jo
mov
sbb
gs
jle
cs
lcall
pop
xor
gs
cmp
test
push
call
rcl
inc
push
mov
sbb
call
jo
in
call
jbe
hlt
mov
sbb
scas
dec
sbbl
pusha
push
cmpsb
push
push
lahf
pop
dec
mov
sub
leave
mov
fs
in
insl
add
push
mov
lahf
mov
jmp
add
call
outsl
jae
sbb
add
push
lea
mov
push
incb
pop
iret
add
mov
lahf
push
pop
repz
sbb
push
dec
leave
std
fildll
rcr
setle
cmp
call
aam
imul
or
lahf
out
mov
pop
jmp
jecxz
hlt
mov
inc
lcall
cmp
enter
mov
pop
jnp
out
dec
add
call
rcl
jno
mov
hlt
mov
ror
push
mov
mov
in
sub
sbb
in
out
dec
incl
sbb
lahf
mov
mov
clc
lods
fbld
cli
cmp
inc
sbb
call
lret
cli
imul
cld
call
or
cltd
mov
push
aas
mov
rorl
xchg
jmp
push
adc
repz
test
rolb
jg
rolb
mov
movsb
mov
pusha
sets
nop
jmp
movsl
fistpll
call
fisttpll
mov
cmpl
xor
jge,pt
pushf
inc
in
push
mov
push
inc
rolb
mov
imull
mov
je
call
adc
fistpll
enter
lds
dec
bound
fdivrs
fnstsw
mov
stc
out
sub
mov
sbb
xor
ret
fwait
sub
mov
cmp
inc
add
sbb
bound
sbb
test
and
pop
rcll
and
fscale
or
lock
pop
cmc
jmp
mov
jno
xchg
xor
inc
gs
mov
addr16
sub
adcl
out
jns
lods
inc
sti
pop
or
movl
loopne
or
stc
and
jp
adc
mov
iret
inc
cmpb
jb
xor
cmp
fwait
call
loop
leave
mov
and
insl
outsb
subb
push
call
aas
outsb
mov
cmpsl
push
iret
dec
leave
lea
aaa
jl
bound
xor
out
ss
call
jmp
cltd
in
dec
xchg
popa
push
dec
movsb
arpl
ficoml
std
std
lea
xchg
insl
movsb
mov
ret
jge
in
jle
iret
mov
gs
mov
pop
ret
lret
lock
jl
jge
mov
ljmp
hlt
call
mov
or
aam
pop
into
add
fbld
adc
test
call
add
testl
xchg
push
push
movsl
hlt
in
cmp
push
mov
test
mov
aas
sti
jmp
sbb
inc
insl
xchg
xchg
imul
jnp
or
sub
jmp
imul
jl
in
enter
and
ljmp
xchg
notl
call
nop
test
in
sbb
adc
out
outsl
xchg
shll
ret
insl
lods
movsb
inc
xchg
js
inc
decl
cld
push
fimuls
xchg
outsl
gs
ret
je
rcll
ret
frstor
mov
das
lret
arpl
or
fcomip
or
sub
jnp
fistpl
dec
dec
and
fstpt
sub
pop
test
popf
adc
pop
xor
cmpsb
cmpsl
jae
movsb
and
in
aaa
cli
test
rolb
sub
lock
jl
flds
lock
aas
mov
arpl
xor
movsl
xor
shr
pusha
insl
dec
dec
or
push
repnz
fdivr
jge
sbb
xchg
dec
dec
inc
pop
and
push
repnz
push
loop
fistpl
cmpb
inc
cs
add
xchg
mov
bound
insl
imulb
cli
rorl
out
lods
pop
incl
dec
imul
xchg
ret
jne
scas
mov
and
jg
insl
cmovns
cld
lods
jge
jns
xchg
and
aam
push
dec
jmp
popf
div
ja
push
incl
mov
push
inc
lds
insl
cmpsb
test
loop
adcl
mov
subb
fimuls
aas
test
xchg
imul
jmp
leave
pop
cmp
pop
push
lods
fcomi
pop
scas
lods
jge
mov
mov
lret
in
cmpsl
and
insl
push
ret
sub
pusha
xor
das
cld
adc
loopne
inc
lods
dec
push
fpatan
insl
mov
repnz
mov
mov
insl
sbb
rolb
notl
pop
mov
ret
jb
jo
das
imul
mov
clc
out
pop
pop
xlat
mov
outsl
lods
mov
cltd
fldt
inc
xchg
aam
pop
dec
jmp
mov
xchg
mov
jno
mov
dec
add
outsl
les
mov
insl
xchg
xchg
fmuls
and
test
xchg
filds
mov
mov
jg
mov
ret
jae
sarl
and
pop
sub
std
sbb
sbb
sbb
nop
and
aam
pop
shrb
adc
outsl
add
jge
adcl
and
jmp
sub
enter
and
sbb
dec
lods
lock
rorl
cld
jmp
xor
jne
xor
adc
ss
iret
jo
lds
push
out
lcall
jb
add
lods
sbb
out
fnstcw
push
sarl
imul
jmp
jecxz
add
push
jno
xchg
or
cmp
repz
hlt
fstps
bnd
clc
jg
cwtl
mov
sub
pusha
sub
fwait
daa
adc
clc
decb
mov
xchg
dec
dec
aad
lods
and
mov
call
inc
icebp
lcall
jecxz
cmpsl
enter
xor
xor
add
jg
cmp
loop
dec
gs
outsl
aam
xchg
lret
mov
mov
out
cmp
call
xor
repz
nop
testl
ret
sahf
xchg
pop
mov
jmp
or
sahf
adc
and
test
fmuls
mov
insl
stos
xor
call
clc
pop
arpl
clc
loop
xchg
shlb
jbe
fldcw
or
push
out
or
xlat
pop
in
lods
popf
jmp
mov
inc
lods
and
aam
pop
leave
jg
shrb
jns
adc
and
adc
inc
push
lea
pushl
inc
and
mov
js
and
mov
inc
inc
repnz
jmp
call
lret
mov
in
inc
fsubs
sub
arpl
xchg
dec
xadd
das
jmp
test
mov
jb
test
insl
adc
and
outsl
jno
adc
lcall
mov
insb
or
jne
xchg
mov
lahf
adc
pop
inc
out
mov
jg
out
insb
xorl
fwait
xchg
mov
fdivrl
scas
sub
lret
adc
test
cs
test
dec
dec
aad
push
lds
add
int
fidivs
lcall
data16
push
test
loope
inc
data16
push
xchg
jg
add
push
faddp
out
insb
sub
inc
and
inc
imul
mov
xor
xor
cld
enter
daa
dec
sbb
repnz
lcall
mov
and
out
and
lahf
sbb
mov
xchg
ret
adc
sub
fildll
jmp
je
jmp
mov
pusha
inc
mov
ret
inc
leave
repz
sbb
iret
dec
and
add
call
in
jl
jg
insl
cmp
jle
cwtl
aam
push
int
outsl
je
and
cmpsl
test
lahf
sbb
std
inc
mov
in
int3
push
mov
adc
add
lods
inc
inc
ret
mov
inc
jg
inc
xor
rcrb
call
cmp
out
xor
and
jbe
and
xor
lahf
pop
outsl
sub
xchg
faddl
pop
into
stos
jg
decl
mov
jmp
jb
inc
or
mov
sar
mov
add
and
insb
jae
sub
push
cmp
mov
mov
je
daa
ficoms
pop
outsl
or
jg
icebp
lcall
jno
inc
scas
dec
sahf
imul
inc
and
xor
decl
repnz
xchg
out
fmul
shl
stos
fstpt
jg
lock
cli
das
das
jg
push
fmuls
pop
cli
data16
fnop
lcall
push
mov
lea
mov
pop
mov
cmp
inc
cmp
mov
pop
subl
out
sub
push
outsl
mov
inc
test
pop
es
jge
sub
lahf
daa
jmp
ja
xchg
iret
jbe
out
xlat
xchg
ja
loope
ljmp
xchg
clc
scas
cmp
cmpsb
push
inc
add
cs
push
decl
cmpsb
cmp
push
into
stos
sbb
insl
rolw
push
popa
nop
jnp
fisubrs
jb
or
jns
xchg
mov
sbb
inc
cmpsb
jg
pop
pushl
sub
jns
imul
sub
outsb
sarl
bts
pop
jg
push
adc
inc
lods
pop
adc
addr16
into
inc
inc
aad
inc
jmp
adc
jno
in
cmc
xchg
icebp
push
in
mov
xchg
pop
adc
in
pushl
fsubp
inc
arpl
rcrl
lret
cmp
cmp
repnz
mov
mov
dec
aaa
dec
sbb
mov
and
add
push
out
daa
or
adc
lret
pop
adc
xchg
xchg
sbb
dec
sub
scas
sub
pop
arpl
lcall
ljmp
xorl
ja
jecxz
mov
and
sahf
mov
mov
pushf
mov
loopne
ljmp
repnz
into
scas
sbb
mov
push
cltd
std
imul
fs
inc
adc
pushl
cld
mov
aam
cmp
inc
inc
dec
ss
sub
adc
sub
dec
or
mov
icebp
lret
mov
pop
push
or
jae
dec
mov
cmp
dec
aad
adc
ret
jg
mov
pusha
aad
test
push
fcoms
push
call
adc
aas
pusha
push
es
fstl
call
subb
into
mov
aaa
or
or
cmp
xor
repnz
adc
jg
call
dec
mov
iret
mov
arpl
out
es
push
lret
push
loop
adc
dec
or
pop
adc
loope
stc
sub
mov
lret
adc
out
cwtl
pushl
jg
lret
gs
xor
sub
sbb
add
cmpsb
xor
leave
jb
or
lahf
ljmp
push
ret
push
dec
shll
add
movsl
js
mov
jg
cs
addl
adc
fsts
out
cli
jmp
sbb
pop
mov
pop
pop
clc
das
lock
lds
dec
cmp
dec
imull
gs
mov
decl
and
mov
cmpsl
mov
sbb
mov
popf
xchg
xchg
inc
cmpsl
aaa
adc
loopne
xor
xorb
rcl
mov
repnz
fcomps
in
push
xor
sbb
xor
pop
mov
inc
adc
dec
fwait
and
push
daa
loop
jle
and
pop
xchg
adc
cmp
mov
pop
adc
adc
adc
shrb
incl
or
adc
inc
popl
pusha
fsubrp
xchg
jg
ret
nop
loop
clc
xor
es
ret
jns
push
rcrb
jmp
popf
jo
movl
lods
imul
mov
mov
insb
add
mov
cltd
aas
loope
incl
clc
adc
sbb
insb
int
add
pop
mov
movsb
fldt
jg
jg
mov
scas
fcmovnbe
sbb
inc
mov
cmp
xchg
roll
hlt
lcall
and
gs
inc
adc
fimuls
in
lock
push
jmp
pop
adc
xor
decl
sahf
inc
jb
dec
push
xchg
clc
xchg
jb
cwtl
inc
push
call
in
pop
xor
mov
inc
cmpsl
dec
pop
fwait
sub
push
outsl
and
bnd
dec
fildll
xor
add
mov
movsb
adc
mov
leave
dec
dec
daa
sub
push
arpl
popa
mov
lahf
out
inc
mov
fs
scas
cmpl
ja
aam
clc
jg
fdiv
push
lret
fldenv
push
out
sarb
outsl
push
pop
push
in
shl
test
jae
cmpsb
push
add
mov
incl
add
add
xor
sub
cld
xor
sub
leave
push
or
mov
and
out
mov
sbb
notl
jb
inc
test
gs
dec
mov
pop
mov
ljmp
clc
decl
loop
imul
test
mov
gs
jbe
adc
pop
inc
dec
ret
das
sub
orb
fimull
incl
dec
in
push
xorb
or
dec
push
xbegin
stc
jg
fwait
xor
lea
testl
sub
xchg
adc
mov
hlt
jo
test
adc
cmpsl
dec
mov
hlt
stc
arpl
sar
jne
adc
call
mov
adc
jg
adc
pop
imul
sub
arpl
into
lahf
xor
dec
mov
mov
sbb
cmp
xor
sub
push
test
test
sahf
insb
add
jge
and
fdivs
mov
cwtl
fwait
call
sub
xchg
jge
cltd
or
add
cmpb
push
out
rol
jmp
imul
test
shrb
icebp
xor
inc
aad
push
xor
call
cli
fiadds
out
cmc
cmp
jecxz
movsl
mov
imul
add
inc
pushl
jle
mulb
enter
pop
dec
jmp
mov
cmp
dec
clc
pop
clc
and
xchg
dec
cwtl
xchg
and
fstpt
imul
xchg
divl
das
or
xor
lcall
push
push
xor
add
xchg
arpl
arpl
ret
push
js
loopne
inc
xchg
jmp
inc
arpl
jg
out
ds
cld
mov
pop
adc
lds
cmc
inc
sahf
cmp
cmpsb
adc
fbstp
add
insl
repz
mov
call
icebp
add
mov
cmp
clc
incl
pop
cmp
add
and
in
and
aam
jg
inc
lcall
lea
jge
sbbl
adc
jg
dec
stos
lds
lds
jg
aaa
outsb
nop
les
push
std
and
mov
jmp
jge
imul
pop
fdivs
push
stos
icebp
xchg
aaa
pop
repz
and
cs
jo
and
inc
test
add
out
out
test
int
dec
jmp
hlt
cmp
cmp
adc
mov
pop
daa
dec
enter
insl
into
fstpt
cmpl
jge
xor
and
push
enter
cmp
les
mov
adc
sbb
pop
imul
add
and
out
call
add
mov
mov
adc
push
add
push
mov
fs
add
aas
idiv
dec
outsl
popa
fs
imul
sbb
insb
gs
popa
outsb
fs
adc
outsb
sti
clc
mov
jg
dec
popa
jae
inc
jb
jb
push
imul
fcmovnbe
mov
insb
push
or
and
imul
fistl
cmp
jae
push
arpl
inc
mov
inc
jno
jbe
imul
mov
outsb
sbb
adc
mov
dec
jne
js
push
and
xchg
pusha
ret
cmp
xchg
jae
sbb
sub
mov
popa
adc
outsb
outsw
testb
dec
sbb
arpl
pusha
sti
in
pop
imull
enterw
popa
insl
dec
testl
add
out
fcoms
pop
pop
test
push
insl
mov
sbb
insl
jo
adc
arpl
ss
xor
and
jo
mov
sbb
push
outsl
imul
inc
pop
pop
fs
bound
or
faddl
dec
push
pop
xor
out
mov
rcrl
xor
jbe
xchg
lods
insl
popa
and
mov
imul
daa
insl
sbb
jne
or
add
adc
scas
sarb
pop
jo
push
in
xchg
or
sub
inc
je
adc
xchg
sahf
xchg
jae
mov
sarl
ja
cmpsl
or
pop
adc
rorl
imul
arpl
jo
cmp
popa
or
xlat
pop
push
xchg
lods
xor
pop
lods
in
je
fabs
gs
mov
mov
adc
cmpsb
pop
fadd
push
push
adc
sub
dec
pop
push
sub
mov
add
adc
xchg
mov
lret
mov
push
add
sub
das
psubsw
cs
dec
add
push
and
dec
inc
loopne
fnsave
or
push
or
xchg
pushl
add
mov
int
add
add
mov
mov
cld
leave
data16
add
mov
je
mov
shlb
mov
add
push
or
cmp
push
jns,pn
sub
sub
in
nop
and
add
or
jb
enter
or
or
sub
pop
fucom
mov
es
jne
add
insb
imul
jae
add
sbb
sbb
dec
xchg
jbe
adc
push
pop
ds
sbb
mov
lcall
adc
iret
add
add
add
add
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
