out
call
in
sub
andb
push
push
push
push
xor
pop
lea
fcomi
stos
push
ljmp
pop
xor
jmp
mov
pop
ja
test
add
loop
mov
dec
gs
in
in
dec
mov
xor
cs
jbe
dec
mov
insb
jmp
mov
push
call
pop
mov
jg
mov
push
push
push
push
push
mov
push
push
call
mov
and
adc
clc
lea
push
add
in
and
call
jbe
adc
adc
pop
movsl
loope
fists
pop
pop
pop
leave
ret
add
andb
sub
add
jae
popa
xchg
lret
insl
mov
idiv
imul
sti
insb
das
fldcw
cld
insb
dec
sub
lock
fcoml
mov
inc
frstor
je
dec
xlat
insb
fwait
in
outsl
loope
jne
jecxz
sbb
inc
dec
out
psubsb
dec
bound
jmp
paddsb
inc
pop
out
js
in
int
out
inc
and
mov
mov
imul
out
mov
fwait
sbb
jnp
adc
add
mov
push
push
adc
repz
xchg
call
add
add
int3
pop
imul
jb
lea
xor
adc
incb
cs
fsubrs
or
cmp
je
mov
push
pop
mov
pop
je
adc
jp
neg
lret
dec
add
cmp
nop
outsl
inc
fwait
std
push
pop
jmp
push
or
cltd
cli
mov
sti
mov
notb
push
xor
lds
and
push
fadd
add
es
mov
inc
addr16
outsl
int
std
push
movsb
pop
adc
jne
pushl
mov
adc
or
add
pop
jns
mov
pop
inc
push
inc
scas
jmp
push
mov
inc
daa
sbb
cld
lea
adc
cmp
mov
insb
dec
aaa
push
repnz
or
mov
call
cmp
in
push
mov
push
jl
or
add
lock
add
clc
fnstenv
mov
pop
sbb
inc
adc
xor
movsb
push
mov
test
je
push
adc
or
and
mov
dec
clc
cmp
sbb
push
push
xchg
gs
add
push
mov
je
lea
or
scas
jl
or
pop
out
inc
ret
jle
es
xor
inc
dec
rclb
or
xchg
mov
mov
mov
lods
jo
push
push
scas
cmp
pop
or
sahf
inc
adcl
mov
insb
lea
mov
dec
call
adcl
xor
adc
push
xlat
inc
xor
inc
mov
or
jno
out
out
xor
mov
add
pop
dec
mov
and
mov
push
repz
adc
into
push
sub
out
icebp
pop
loop
sub
xor
or
ffree
inc
jbe
inc
mov
or
adc
xor
je
jb
dec
sbb
decl
cmc
iret
orb
push
mov
loope
mov
rcrb
cwtl
sub
jno
mov
pushl
adc
test
je
mov
mov
ror
mov
inc
inc
dec
dec
enter
test
jne
push
pop
jmp
lds
rolb
cmp
push
jno
insl
and
cmp
xor
sti
incl
mov
sub
cld
aad
cmp
scas
icebp
inc
and
ljmp
and
cmp
add
daa
push
mov
push
adc
pcmpgtd
adc
subl
out
leave
jp
cmp
lock
sub
inc
mov
outsb
pop
sub
and
or
iret
jne
push
daa
cwtl
pop
adc
push
inc
mov
nop
repnz
pop
jo
add
add
xor
arpl
stc
mov
mov
sub
ds
rolb
mov
clc
loope
xchg
jnp
fbstp
repz
mov
pop
add
xor
cmp
push
ret
push
cmp
push
sahf
mov
sti
push
shl
les
or
sub
dec
lock
dec
aad
xlat
push
xor
fstps
xor
xlat
dec
test
adc
or
pop
sbb
pop
pop
lcall
add
cmp
mov
inc
test
stc
dec
fwait
xchg
in
sub
dec
push
inc
push
sub
fwait
jno
mov
push
xor
js
int3
lock
ljmp
lock
inc
inc
sub
andb
xor
mov
cmp
je
inc
push
jne
mov
mov
xchg
in
mov
mov
inc
inc
test
jne
pop
and
mov
gs
mov
out
dec
fistpll
dec
cmp
jmp
or
jne
jle
mov
test
shl
ficompl
shl
shlb
ret
add
pop
ds
bound
shrd
pop
sub
cld
push
sub
shrb
imul
in
push
add
je
popa
imul
xchg
imul
popw
mov
jmp
or
roll
jg
xchg
or
cltd
test
inc
add
leave
rep
mov
or
add
data16
dec
sysenter
pop
dec
push
add
dec
inc
repz
sbb
je
push
mov
sbb
or
pop
or
enter
xlat
arpl
das
adc
xor
pop
pushf
js
push
add
dec
push
mov
mov
addr16
cld
addr16
call
fistps
out
sbb
bound
sar
cmp
mov
int
in
in
dec
pop
iret
clc
rcl
push
dec
dec
into
call
aad
xchg
out
mov
or
push
fmuls
loop
or
mov
notl
sub
pop
call
push
test
inc
or
add
ret
rclb
clc
int
sub
adc
ja
adc
fstpl
mov
addr16
outsl
outsb
inc
clc
je
pusha
mov
pop
sti
std
ss
int
adc
pop
jg
mov
fstpl
jg
sbb
lock
or
hlt
xlat
xor
cmp
push
subl
shrb
sti
adc
xlat
lcall
jbe
popa
add
or
cmp
sbb
ljmp
mov
push
jns
fwait
or
imul
sbb
push
push
xor
jl
push
jl
sti
dec
iret
xchg
mov
repz
jbe
ret
jp
xchg
mov
ror
push
adc
push
daa
test
test
jmp
dec
rcl
fs
outsl
dec
shll
adc
and
lock
add
add
jno
cmc
pop
test
or
mov
xor
jecxz
pop
sub
cmpsl
test
xor
repz
in
dec
jbe
fs
sub
cmp
sahf
lcall
ret
testl
cmp
mov
lods
adc
pusha
adc
add
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
mov
add
lahf
imul
add
add
lcall
add
jb
lcall
shrl
cmpsb
loopne
add
adc
dec
xlat
je
ss
adc
add
dec
xlat
xor
stos
daa
mov
insl
roll
repnz
out
int3
jne
fldenv
insb
xchg
jbe
xorb
dec
shll
add
aas
std
outsl
arpl
je
insw
addr16
xor
xor
or
mov
popa
je
pop
gs
gs
outsb
je
cs
bound
push
jb
sti
fsubr
imul
jae
jae
and
xor
jge
push
inc
dec
adc
pushw
gs
outsl
imul
add
pop
adc
fisttpl
push
js
and
imul
cs
jo
insl
fs
mov
cmp
mov
outsl
add
out
push
xor
mov
test
pop
inc
test
push
dec
inc
dec
dec
pop
cld
push
fldcw
push
push
dec
inc
dec
or
push
nop
les
mov
inc
dec
and
repz
add
add
dec
pop
nop
inc
add
or
insb
mov
or
mov
int
mov
imul
jb
addr16
insl
and
outsb
outsb
outsl
je
bound
jb
outsb
psadbw
imul
insl
outsl
fs
push
sbb
stc
out
psubq
jnp
add
add
testb
push
lcall
test
sbb
add
stc
fs
add
repz
xchg
add
arpl
push
inc
add
jl
add
insl
xchg
mov
or
mov
mov
add
adc
outsl
ret
add
xor
or
xor
ss
pop
push
shrb
pop
fcoml
or
mov
push
pop
cmp
ret
and
shlb
jnp
mov
pop
enter
add
cmpsb
mov
or
xchg
sbb
mov
xchg
lock
push
push
pop
jo
cld
movsb
daa
mov
arpl
xor
outsl
daa
jo
aas
pop
testb
jb
insb
outsl
arpl
sti
jno
fwait
out
lock
or
add
pop
add
and
xlat
xor
mov
imul
scas
and
lcall
mov
jb
dec
lret
xchg
dec
ja
cs
or
cmpsb
imul
lcall
mov
lret
addr16
push
mov
data16
xor
mov
out
lcallw
pop
ss
rcr
in
cld
or
cmpsb
imul
imul
cmpsb
imul
add
shll
cmpsb
inc
fisubs
shrb
subb
jmp
insl
xlat
sub
into
sub
push
pop
lods
outsb
pop
add
xor
jb
jl
mov
dec
insb
xlat
add
shll
pushf
movsb
dec
shll
fidivs
repnz
insl
orl
fisttpl
imul
mov
dec
shll
mov
cmp
stc
shl
add
jmp
mov
jae,pt
add
xor
push
add
insl
adc
je
fidivrl
outsl
add
rorl
gs
gs
lds
dec
stc
sbb
mov
out
push
gs
fs
sub
dec
jo
push
jb
adc
insb
inc
adc
dec
dec
dec
dec
inc
nop
lahf
push
and
push
data16
pushl
inc
addr16
bound
dec
inc
push
push
inc
push
inc
pop
dec
or
jb
outsl
data16
push
imul
jmp
dec
push
pop
inc
jne
jb
push
pop
jae
outsl
outsb
sbb
or
inc
xchg
and
cmpl
lret
pop
or
add
or
lahf
jns
mov
xchg
add
aaa
sbb
sbb
cmpsb
pusha
add
add
mov
pop
add
into
and
and
popa
sub
pusha
fistps
decl
or
and
testl
das
pop
add
lret
mov
adc
aas
mov
aas
add
pop
or
mov
popa
mov
insb
incl
and
add
sbb
adc
inc
fmul
cmp
xchg
inc
xchg
pop
mov
inc
pop
inc
sub
xor
fistpl
add
stos
nop
mov
mov
sbb
pop
pop
das
xor
sbb
add
and
pop
xor
movq
or
imul
mov
adc
je
jne
jb
gs
sbb
pop
inc
or
push
sub
aas
xorb
aas
push
inc
jb
push
and
ja
or
in
ja
push
mov
jae
pop
and
addr16
xor
int3
or
push
sbb
mov
mov
mov
xor
push
lea
jmp
mov
add
lds
pushf
popl
call
fidivrs
or
adc
add
je
das
jl
outsl
insl
insl
fs
popa
repnz
pop
inc
ljmp
lock
arpl
push
add
mov
jb
mov
pusha
inc
leave
dec
arpl
imul
mov
and
ja
mov
jnp
sti
fimull
hlt
faddl
pop
xor
xchg
dec
dec
mov
fiadds
jnp
jne
cmp
sub
je
insb
ja
jns
jae
test
sbb
popf
std
sti
incb
imul
jl
or
pop
push
push
outsl
addb
das
cmp
aam
jb
jne
addb
xchg
hlt
gs
int
xor
fsubs
std
push
outsb
imul
mov
dec
imul
insb
mov
or
aaa
sarb
in
clc
ret
clc
popa
aas
in
mov
xlat
movsl
mov
or
outsb
outsl
jle
push
pop
or
mov
push
sti
ljmp
push
lea
push
mov
test
setne
mov
test
jne
push
jmp
mov
mov
pop
and
mov
push
push
add
push
and
outsb
jg
fists
or
mov
mov
and
add
jg
push
icebp
sub
mov
call
movzbl
dec
and
pusha
icebp
mov
mov
data16
lock
adc
mov
mov
or
sbb
inc
xchg
movsb
sbb
sub
inc
lcall
add
negb
clc
pop
pop
sub
repz
mov
icebp
cmpsb
in
jg
les
mov
clc
data16
sbb
jmp
dec
jnp
je
sbb
repnz
push
jne
mov
sar
pushl
cli
pusha
lea
not
lea
movb
xchg
xchg
jmp
call
pop
repnz
imul
mov
xchg
jmp
dec
pop
dec
clc
pop
adc
pusha
cmp
ficompl
call
inc
inc
inc
push
dec
inc
popa
dec
pop
mov
fs
int
into
mov
stos
xor
pop
cmp
xchg
in
adc
add
xchg
inc
pop
mov
scas
adc
or
fs
pop
jns
and
jae
xor
and
or
cs
or
add
mov
mov
dec
push
inc
add
xchg
xchg
pop
push
nop
add
jns
in
scas
dec
mov
aad
clc
lcall
outsb
flds
stc
pop
sbb
pushf
fstpl
push
add
scas
dec
mov
push
push
and
mov
hlt
mov
push
push
push
xchg
call
jecxz
cld
add
mov
push
mov
mov
fnsave
lea
adc
or
push
push
push
push
out
mov
lea
cmp
mov
sub
mov
movb
inc
or
movb
or
push
push
add
outsb
add
imul
orl
cs
out
jp
jmp
sub
rdpmc
rclb
jo
lock
add
push
insl
outsb
jae
inc
les
or
cmp
outsb
adc
mov
ficoms
call
lcall
push
jmp
inc
cmp
fildll
fldt
ds
adc
andb
int
mov
repz
aas
sbb
cmp
pop
jl
push
aaa
push
pop
mov
nop
addb
mov
add
outsb
or
es
push
and
out
pop
dec
mov
push
add
jle
pop
repnz
mov
pop
repnz
xchg
adc
add
adc
add
and
add
adc
mov
and
jns
loopne
fldl
add
jo
test
sub
and
sub
and
and
dec
and
add
jg
add
shll
adc
pop
sub
push
add
add
jle
mov
or
data16
jle
push
inc
add
pop
addb
fcmovne
ret
and
push
xorl
adc
aaa
sub
push
and
test
jne
ret
jns
mov
pop
jne
dec
cmp
lret
stos
jne
mov
sub
adcb
ret
and
xor
adc
push
inc
add
pop
inc
ds
enter
mov
pop
jne
or
iret
ret
pop
pusha
mov
pushl
cmp
je
mov
cmp
je
or
divl
adc
fcmovu
jbe
pop
cmp
ja
jge
add
or
jae
cmc
jg
xchg
fsubs
adc
cmp
ljmp
clc
outsl
or
jb
sub
sub
add
je
decl
incl
aad
mov
or
xor
jmp
jb
fidivl
add
lock
arpl
inc
push
adc
mov
in
jb
mov
call
mov
cmp
jg
add
mov
adc
and
push
push
sbb
push
adc
push
lock
mov
dec
ret
outsl
lahf
sar
mov
sbb
call
push
add
xchg
jne
adc
js
lods
cmp
or
xchg
cmp
fimuls
lea
movsl
add
mov
movsb
mov
pop
enter
pop
mov
test
mov
ljmp
dec
out
sarb
orl
mov
mov
push
mull
pop
dec
pop
mov
dec
and
xor
add
pop
in
and
push
or
sarl
push
mov
add
not
xor
xor
inc
cmp
push
das
insl
pop
or
jl
pop
push
mov
add
push
jge
add
cmp
lock
inc
inc
push
adc
adc
call
and
or
push
mov
outsb
xchg
clc
fs
cs
cmp
push
sub
adc
cli
jb
mov
pop
pop
push
or
call
add
dec
in
in
jl
insb
shlb
adc
and
stc
add
add
adc
add
adc
sub
adc
in
js
and
in
jl
je
and
jo
and
nop
pop
enter
and
mov
adcb
inc
mov
and
leave
das
stc
and
test
add
adc
mov
pusha
outsb
stos
xor
pop
mov
popf
mov
xchg
insl
push
mov
pop
jmp
mov
nop
cmp
ror
pop
cmpsl
mov
bnd
in
cld
in
cld
icebp
and
lock
mov
ror
lock
push
pushf
mov
mov
push
lods
imul
add
pop
add
rcl
push
sub
sbb
sar
popf
cmovle
movups
shlb
cmp
sbb
hlt
jae
cmc
data16
shrb
arpl
pop
clc
sub
leave
outsl
and
cli
push
cs
loop
int
fs
insb
std
dec
cli
ficomps
dec
dec
push
roll
or
daa
xor
adc
ja
cli
in
mov
cwtl
xchg
sti
push
pop
dec
xlat
and
imul
popf
iret
pop
js
push
sub
adc
jle
push
cmp
jle
outsl
movsl
push
mov
cmp
ja
pushl
pop
xor
adc
je
inc
jne
std
negb
movsb
mov
incl
mov
push
in
jne
cmp
pop
dec
xchg
mov
cmp
jne
push
mov
xor
cld
push
mov
sub
andl
jge
hlt
ss
cmp
sahf
inc
cmp
mov
dec
les
xchg
pop
imul
dec
shrl
test
and
fistl
or
adcl
push
test
fildl
ja
jne
data16
or
ja
imul
mov
add
jns
bnd
test
pop
nop
ja
add
mov
add
dec
shlb
aaa
ret
jp
hlt
insl
add
push
xchg
in
je
push
sbb
mov
push
pop
pop
jl
lods
or
addr16
je
push
jmp
adc
in
add
xor
test
fisttpl
scas
or
movsl
jge
bound
mov
xor
cltd
pop
inc
idiv
pushl
push
or
jg
sbb
jmp
andb
mov
jmp
add
lds
xor
nop
orl
push
shlb
adc
shlb
adc
add
enter
sbb
imul
lds
xlat
adc
add
xor
es
stc
gs
rorb
sub
and
jnp
pop
and
adc
adc
cwtl
pop
int3
mov
call
adc
pop
mov
test
lock
pop
xlat
fidivs
fs
ja
xor
mov
cmpb
xchg
movsl
es
add
jl
cmp
jb
in
mov
mov
imul
add
andl
in
jg
inc
or
inc
sub
and
or
and
add
push
popl
adc
inc
jge
and
lods
decb
movsl
push
mov
shr
lea
jae
incl
cmp
pop
lret
shr
add
stos
leave
adc
inc
push
mov
dec
or
jmp
mov
dec
push
pop
jne
adc
lahf
repz
rorb
jo
mov
add
loop
or
adc
or
das
sub
xor
or
jle
in
cwtl
or
push
mov
pop
push
inc
outsb
pop
test
xchg
pop
jbe
or
fisubrl
cwtl
cmp
mov
not
and
push
jl
and
or
loop
incb
adc
xlat
sbb
std
mov
sbb
add
push
repnz
not
and
hlt
mov
sub
testl
mov
test
or
out
push
js
add
push
aam
or
jge
pop
inc
fisubs
fimull
add
lea
sti
lret
and
out
xadd
adc
pop
inc
sub
mov
fstpl
fbld
div
sarl
inc
fiadds
psllq
sub
rorl
push
shr
or
add
dec
jg
mov
daa
pop
jg
push
fisttps
in
imulb
mov
push
lods
loop
mov
je
ljmp
shlb
push
mov
sub
adc
movb
lret
fidivl
add
loop
sbb
loop
sbbb
or
in
cld
mov
cmp
adc
test
sbb
mov
pop
mov
adc
pop
int3
xor
add
push
push
sbb
add
out
ficomps
lret
and
cli
sbb
repz
pop
pop
les
repz
fcomp
cwtl
subb
in
out
sbb
add
rcr
cld
ret
das
pusha
adc
pop
scas
testl
sti
mov
pop
les
cltd
ss
subb
add
pop
push
push
add
sub
push
pop
push
fcom
add
repz
pop
out
test
mov
les
adc
xor
mov
rorl
fcoml
fmuls
out
stos
lods
es
add
fnsave
fidivrs
pop
into
outsl
lods
pop
aaa
das
push
mov
cmpsb
pop
mov
add
mov
lret
ja
test
cmp
and
or
popa
pop
mov
lods
adc
add
or
mov
ret
pop
ja
pop
add
and
aad
aam
pop
cs
in
and
sbb
jle
idiv
add
and
jg
jge
dec
cmp
inc
rcrb
outsb
jns
or
fadds
hlt
push
mov
daa
clc
jb
repz
pop
pop
adc
repnz
sar
pusha
sbb
test
stos
mov
pop
lret
dec
pusha
and
call
icebp
imull
mov
xor
das
call
xlat
lods
mov
sbb
shlb
adc
sbb
mov
data16
fcmovnb
and
pop
and
cmp
pushw
clc
cmp
mov
repnz
fistpl
enter
jg
mov
fcmove
or
add
fwait
aaa
pop
fidivl
and
sbb
loopne
fistl
popl
add
pop
aaa
or
movsl
imul
mov
push
fbstp
xchg
mov
cltd
xlat
sbb
mov
sub
cmp
gs
fwait
aaa
or
call
inc
loop
insl
adc
or
xlat
fdivs
faddl
sbb
xorb
cld
xor
enter
in
in
stos
daa
sub
aad
flds
outsl
adc
cmp
xchg
dec
fists
les
mov
adc
push
xor
xor
test
int
push
add
add
test
out
fdivl
cli
mov
xor
push
cs
js
lret
rep
fadd
and
insl
adc
inc
repz
sti
xor
mov
repnz
or
in
xchg
push
mov
call
in
inc
dec
xchg
maskmovq
testl
add
push
popf
xchg
mov
fimuls
cltd
jb
lods
fmul
loop
fmuls
mov
dec
mov
cli
clc
in
jae
xor
push
jo
mov
sbb
or
mov
imul
jo
jle
sub
jae
fwait
test
sbb
xor
imul
hlt
into
mov
fimuls
xor
xor
test
xchg
or
cmpsb
pop
jae
adc
fidivs
test
orl
out
cmp
imul
pop
or
push
aas
sbb
pop
mov
rcl
fstps
test
push
in
mov
xor
ss
in
jb
mov
clc
jl
pop
je
dec
testl
gs
lods
les
cli
cmp
cli
mov
mov
add
xor
sub
cmc
ret
rcrb
sbb
push
or
in
repz
addb
push
xchg
ljmp
inc
sub
lret
push
or
pop
sahf
outsl
dec
mov
stos
adc
fwait
xchg
lock
hlt
cmp
xchg
cld
cltd
or
mov
scas
xlat
mov
ret
pop
jo
lret
pop
gs
sbb
rcrl
or
lock
int3
or
push
or
sbb
repz
dec
jge,pt
out
call
unpckhps
fwait
xchg
sbb
pop
test
or
jg
jns
pop
push
call
outsl
jecxz
jp
sbb
das
dec
sbb
int
jb
pop
jb
fistpl
loopne
sub
jecxz
jp
pusha
call
fsubs
enter
add
mov
scas
aaa
pop
mov
lds
jp
sbb
ja
mov
xor
pop
imul
out
loopne
mov
aaa
test
xor
aam
rcl
sub
fldenv
pslld
ret
repz
rol
test
mov
mov
push
dec
mov
pop
fcmovbe
pop
mov
out
xlat
pop
add
pop
movsb
mov
pop
push
dec
or
push
sbbl
inc
and
cli
xchg
cmp
lcall
xor
cmpb
sarl
pop
sub
int3
xchg
jb
push
push
push
idiv
call
orl
adc
mov
js
adc
inc
xchg
xlat
pop
fisubrl
jle
xchg
push
push
data16
inc
pop
inc
test
out
pop
loope
nop
iret
pop
pop
mov
mov
into
ljmp
stc
mov
push
add
sbb
cmp
jne
popa
add
jp
pop
add
sti
repnz
add
icebp
jne
shr
cmp
je
sbb
cmp
cmp
je
movsbl
add
sub
stos
pop
mov
jne
inc
cmp
jne
cmp
push
add
add
adcb
and
push
cmp
fldl
fildl
mov
lahf
out
shlb
or
stc
stc
shll
add
or
sub
test
pop
mov
sbb
fldlg2
and
mov
or
mov
cmpsl
or
aas
sub
xor
jle
fmuls
jl
fnsave
sbb
lock
leave
lret
add
rep
pop
pop
push
arpl
in
mov
stc
jne
push
lea
adc
add
jne
or
dec
sbb
mov
inc
cld
or
push
lods
clc
call
insl
xor
pop
sahf
pop
fcoml
push
xchg
mov
cld
call
sub
nop
outsl
outsl
dec
mov
cld
dec
cmp
out
fwait
mov
testb
push
push
call
push
xor
pop
adc
xor
lods
jnp
int3
push
loopne
pop
int3
rolb
xorb
aam
call
shlb
inc
adc
data16
dec
or
jl
ds
fstp
push
or
call
gs
stc
jl
das
lock
jo
hlt
sbb
mov
mov
pushf
mov
push
cmp
je
sbb
push
add
js
fdivrp
inc
push
call
sbb
add
mov
mov
mov
push
insb
mov
les
cltd
mov
aam
negl
push
pop
pop
loopne
dec
push
mov
fistl
push
ds
push
lret
in
dec
xchg
lret
in
out
push
out
push
lock
icebp
inc
repnz
push
in
sub
pop
repz
icebp
xor
pop
call
or
pop
add
fs
repz
inc
sbb
xchg
push
sbb
or
cmpsb
pop
xor
call
push
and
push
jo
das
mov
push
inc
call
into
add
or
cmp
inc
mov
push
pop
movups
stc
clc
out
or
int3
cmp
xchg
je
or
test
or
cld
das
sub
jge
push
push
js
rcll
adc
fiadds
sbb
jle
out
notb
push
mov
sub
je
push
dec
aam
les
pushf
test
ffree
and
push
movsb
add
jge
adc
inc
sbbl
ret
jmp
icebp
lea
cltd
xchg
sbb
adc
add
pop
sub
sbb
xchg
mov
sbb
or
xchg
clc
add
jle
or
jecxz
hlt
push
shlb
insw
fnstenv
pop
call
ja
lea
sbb
and
inc
inc
outsl
pop
das
cmp
pop
jb
jbe
mov
mov
icebp
add
sbb
push
repnz
in
jg
lcall
and
add
popf
in
insl
add
jo
decl
jb
bound
popf
push
push
pop
adc
out
sub
cmp
mov
subb
hlt
pop
add
dec
dec
pop
cmp
pop
push
xchg
sbb
lods
arpl
pop
mov
push
jl
push
cmp
pop
je
insb
in
dec
mov
or
or
in
sbb
cmp
jmp
add
sbb
ja
movl
pop
inc
or
je
inc
int3
dec
lcall
pop
cmpsb
and
fwait
sti
push
push
push
adcb
jo
pushf
inc
xor
aaa
sti
loope
lock
cmp
call
ret
adcl
add
adc
clc
inc
push
pop
cld
call
cmp
sub
or
sub
xor
mov
roll
arpl
add
shlb
mov
arpl
in
push
inc
call
outsb
sub
add
or
pop
test
pop
js
push
cld
or
or
inc
add
mov
push
cmp
fldl
int3
int
call
stos
push
dec
mov
jbe
pop
stos
int3
nop
xor
push
mov
jo
or
xchg
jae
push
sub
data16
enter
js
adc
fsub
movsl
pop
pop
das
cmp
fsubr
cmp
and
mov
inc
jno
xor
shrb
add
cmpl
fistl
in
mov
scas
mov
cmp
sbb
jbe
fsubs
out
sbb
push
nop
fldt
fwait
ljmp
mov
in
push
rolb
mov
jl
bound
or
mov
jl
fisubrs
daa
mov
jnp
sbb
sub
loopne
cmp
push
cmp
cld
lcall
xor
jae
and
xor
sub
mov
sbb
pop
pop
jg
aad
insb
cmpsl
std
or
idivb
lahf
lods
mov
xor
popa
jl
sahf
lods
aam
cmp
and
fsubrp
mov
or
pushf
inc
outsl
add
insb
push
enter
cmp
and
cmpl
cmpl
scas
or
movsl
jae
in
mov
idivb
sti
je
jo
push
push
pop
dec
insb
lods
xor
les
jae
and
add
pop
mov
add
in
sbb
pop
adc
pop
pop
call
pop
imul
add
mov
addb
dec
inc
xchg
pusha
or
jo
jmp
pop
movsb
ffree
add
idiv
xchg
adc
and
pusha
sbb
pop
dec
mov
and
subl
push
mov
test
or
push
daa
or
mov
adc
pusha
stos
or
divb
jo
push
or
xor
xchg
leave
lods
lods
push
insl
mov
jb
pop
cs
mov
mov
mov
cs
lret
in
push
mov
mov
mov
fldt
mov
mov
movsl
mov
push
rcl
js
shlb
xor
in
insb
aam
aad
xlat
pop
mov
lcall
xor
test
loop
jecxz
pop
pop
outsb
mov
out
dec
out
call
jmp
insl
jae
xor
xor
imul
data16
repnz
lcall
xor
lds
mov
mov
lret
cmp
int3
jmp
xchg
push
xchg
xchg
mov
fwait
pushf
adc
pop
sahf
mov
mov
fnstenv
movsb
inc
add
shll
mov
xor
es
cmc
idivb
clc
ds
hlt
cli
jns
lea
dec
negl
mov
push
push
or
repnz
pop
or
bound
pop
xor
push
sahf
adc
insl
popa
or
in
mov
inc
into
pop
mov
repnz
in
mov
out
ds
cmpsb
xchg
data16
xor
xchg
insl
aaa
push
lcall
cwtl
xchg
sub
dec
jne
pop
xchg
xchg
or
sub
aam
enter
jnp
adc
mov
stos
cmpl
jg
lea
mov
pop
mov
push
inc
jge
imul
ds
addr16
xor
loopne
or
cli
out
pushf
xchg
pop
mov
pop
cli
inc
ret
divb
test
or
push
push
outsw
xchg
outsb
inc
sub
adc
sbb
xor
mov
adc
cmp
aas
pop
mov
nop
nop
repnz
sti
rolb
or
jge
pop
adc
int
adc
or
outsb
jno
and
test
movsl
aaa
mov
mov
in
jb
fadds
mov
shll
out
and
or
pop
or
jle
arpl
mov
daa
lock
mov
inc
mov
mov
jo
pop
out
or
loop
fsubrs
cmp
imul
xor
sbb
add
bswap
insl
pop
insb
fs
xorl
movsl
or
dec
push
mov
imul
push
mov
jl
es
dec
or
or
push
cs
je
andb
add
lock
add
nop
adcb
inc
ror
push
aaa
pop
sbb
mov
movsb
data16
cs
mov
outsl
enter
cmpsb
hlt
fistl
xorb
xor
neg
and
fsubrs
push
sbb
mov
inc
outsb
jl
push
push
xchg
cmc
add
fldl
pop
push
iret
aam
mov
sub
or
jo
nop
mov
cmpl
aaa
into
push
jne
push
sub
in
pop
in
addr16
in
and
in
mov
xor
fsubl
jb
sbb
and
cmp
mov
xchg
cmp
inc
inc
mov
mov
mov
cmp
test
cmpb
mov
andl
xchg
and
cs
push
push
ret
or
inc
lea
sbb
js
and
int3
xor
pop
call
dec
pop
das
clc
add
loope
adc
loope
insb
jmp
and
imul
jmp
dec
outsl
scas
cltd
lea
mov
sub
cld
js
jle
jp
ret
andl
shl
out
call
fsubrl
loopne
or
imul
mov
mov
out
and
icebp
xchg
call
push
lock
jno
test
pop
ss
and
into
jp
imul
insb
popa
push
dec
xchg
pop
shll
imul
mov
ja
fildl
fstp
jae
lcall
xor
pop
bound
pop
cli
int
fwait
cmpsb
sti
cld
std
insl
pushl
mov
mov
mov
mov
mov
cmpsb
mov
outsb
xorb
xor
lds
leave
pop
pop
lret
sub
mov
popa
js
push
mov
xor
pop
inc
jb
push
repnz
inc
add
shlb
mov
push
xorl
pop
jb
pusha
and
push
fsubrl
cmp
add
sbb
insb
xchg
fstpl
hlt
dec
subb
mov
in
mov
and
mov
push
pop
jmp
jecxz
cmp
sub
out
sbb
pop
not
cmp
shll
push
imul
fs
lock
cmpsb
pop
icebp
bnd
xor
ss
shrl
fs
insb
je
shlb
cmp
pop
push
lea
xchg
sub
dec
and
cmp
shl
outsb
sbb
push
fsubrl
sbb
imul
aam
add
pop
add
mov
pusha
subl
es
jae
inc
cmp
das
cmp
bound
movnti
xor
push
and
inc
mov
fsubrp
add
dec
popf
loop
aaa
push
or
mov
in
xchg
insb
xchg
clc
lock
jge
cmp
and
cltd
fldl
or
pop
xor
jns
repnz
sbb
fistl
inc
in
mov
dec
hlt
in
mov
sub
xor
fimull
sub
inc
xchg
ret
fsts
push
adc
jo
bound
in
push
or
jne
loopne
inc
int3
xor
and
outsb
sub
sahf
call
adc
out
mov
in
bound
xor
and
je
stos
inc
xchg
shll
mov
dec
das
sbb
xchg
pop
icebp
cmpsb
sub
adc
pop
push
cs
mov
mov
scas
dec
dec
dec
mov
cmp
push
xchg
int
inc
push
adc
mov
or
nop
mov
cmp
or
cmpl
dec
push
pop
adc
inc
xchg
and
add
cltd
mov
jae
adc
movsb
jecxz
outsl
inc
std
pushf
cld
push
cmp
jno
pop
or
push
rep
btc
shl
sar
or
push
xchg
push
xchg
data16
sarb
jp
pusha
xor
jmp
lea
sbb
mov
das
std
or
push
stos
or
and
aas
stos
mov
call
mov
lods
sbb
ret
mov
call
inc
cmp
frstor
int3
push
mov
jbe
pop
mov
call
add
mov
cltd
idiv
mov
std
cmp
popa
inc
push
divl
adc
add
fs
sarl
call
push
bound
mov
scas
jecxz
repz
loop
add
push
jecxz
test
cmc
cld
lret
shll
leave
or
push
idivl
pop
or
push
dec
xlat
push
and
push
mov
jmp
mov
xchg
rorb
decl
icebp
shll
fsubs
lret
cmp
seta
xor
setae
ror
test
jmp
rol
add
mov
adc
popf
stos
pop
movsl
lret
ret
push
dec
div
fadds
sub
inc
mov
pushf
mov
idivb
jbe
cmpsb
lret
mov
loopne
push
jo
les
clc
push
sub
cmpsl
insl
mov
jg
xor
mov
aam
sar
in
mov
cmp
sub
out
call
enter
cmp
xor
stc
call
xchg
sbb
shrl
movsb
jb
sub
imul
rorb
insb
sahf
mov
aas
dec
decb
xchg
imul
cmp
xchg
in
pushf
jo
adc
js
aam
mov
pop
out
sbb
mov
xchg
adc
in
fadds
ficompl
inc
pop
cmp
sbb
popa
sahf
and
stc
sub
into
ficoml
mov
sub
shrb
stos
ds
sub
nop
xchg
sbb
cld
inc
add
outsb
xor
xor
push
sub
adc
cmp
fxch
es
jmp
in
imul
fs
bound
imul
outsl
andl
lcall
test
mov
neg
cmp
jmp
cmp
push
xor
test
jmp
mov
shll
pop
out
or
pushf
pushf
mov
sub
cli
icebp
and
fistps
add
mov
clc
fisttpl
adc
sti
lods
add
add
cmp
scas
inc
push
fidivrl
push
sub
fstpt
mov
pusha
dec
test
aaa
out
adc
jmp
add
jmp
push
or
in
mov
jbe
sbb
popa
shl
neg
dec
sub
imul
and
xor
push
jmp
push
mov
movsl
ds
pop
popl
or
push
in
jb
mov
mov
or
mov
sub
dec
pusha
cmc
sub
sub
pop
vpunpcklbw
xchg
ljmp
idivb
mov
daa
lea
push
repz
add
xchg
sub
inc
testl
mov
clc
sbb
test
and
call
addr16
add
xchg
mov
fbstp
xlat
sar
mov
mov
stos
rol
jmp
cmp
inc
insl
or
sub
mov
mov
mov
and
jmp
or
jecxz,pn
lret
dec
dec
cli
aas
test
jb
mov
repnz
cmp
mov
std
inc
inc
jns
inc
jae
mov
dec
and
mov
das
adc
xchg
and
in
xor
mov
and
out
lret
push
jg
test
or
ficoml
sbb
dec
mov
inc
jp
fisubrl
xchg
nop
adc
or
insl
xchg
into
mov
imul
cmpsl
enter
nop
daa
js
mov
ret
andb
mov
inc
xor
lds
cld
adc
sbb
and
adc
pushw
outsl
mov
lock
sti
in
inc
jmp
aaa
cmp
mov
cmc
ja
push
imul
pusha
sub
ret
cmp
out
faddl
clc
inc
cmp
mov
loope
cmp
js
dec
and
stc
cmp
sti
pop
dec
cmp
mov
fstps
mov
push
inc
xor
xor
loopne
nop
inc
dec
cmp
test
daa
cwtl
nop
cmp
cmp
jb
xchg
inc
ret
sbb
adc
stos
aaa
push
push
negb
pusha
sbb
cmp
in
je
sbb
ret
jl
fcmovu
nop
aaa
adc
mov
dec
lret
inc
repnz
cmp
fs
sub
orb
outsl
rclb
dec
mov
add
in
mov
daa
sbb
fldenv
sub
ja
sahf
or
or
adc
and
xchg
xor
pop
sbb
push
out
and
adc
cs
mov
push
sbb
enter
enter
jae
imul
dec
cld
push
stos
sbb
sub
jbe
jne
adc
ds
xlat
add
cld
jmp
push
pop
les
mov
lock
or
push
mov
popa
imul
dec
dec
outsb
cmpl
fidivs
jb
gs
pop
or
push
jmp
dec
fisttpl
daa
cmp
jbe
loop
push
or
in
xchg
hlt
hlt
xor
insb
mov
cmp
into
push
xchg
or
aas
or
xchg
inc
clc
outsb
mov
jmp
sbb
push
mov
adc
sub
in
lds
rcll
pop
inc
sbb
es
pop
xor
add
aad
js
fcoms
dec
jmp
pushf
nop
jmp
addr16
add
mov
pop
movsb
mov
insl
mov
std
cmp
lret
loope
xor
movsb
jmp
fucomi
xor
imul
xchg
lcall
test
xchg
sub
stos
rcll
mov
hlt
mov
push
out
jnp
xor
cltd
xchg
adc
or
and
stc
aas
mov
lods
fsubl
xor
aas
leave
pushf
sbb
jmp
and
jle
cmp
or
xlat
mov
push
mov
iret
mov
xor
out
fnsave
call
roll
cmc
call
cwtl
xor
add
mov
push
mov
xlat
iret
push
cmpsl
push
data16
pop
and
mov
sbb
and
or
aam
xor
add
clc
divl
xor
push
push
out
or
sbb
test
sbb
or
daa
iret
sub
cwtl
test
pop
and
out
negl
or
xor
cltd
xor
test
mov
hlt
mov
xchg
gs
outsl
outsb
je
pop
and
pop
push
sbb
mov
out
xchg
fldt
loope
fs
outsl
or
iret
cs
sbb
jne
adc
popa
jnp
mov
aaa
cvttps2pi
addl
and
push
hlt
mov
inc
or
sbb
in
ljmp
outsb
stc
sbb
sbb
jb
xor
imul
or
jae
xchg
gs
js
pushl
xchg
lret
or
aas
inc
dec
pop
dec
inc
mov
and
cli
in
pop
call
pop
sub
adc
inc
js
add
jne
jmp
push
imul
clc
mov
es
jne
push
pop
ret
add
add
and
in
call
and
add
push
adc
jo
shlb
loop
adc
ja
sbb
lds
mov
mov
outsb
ss
stc
mov
stc
scas
or
out
mov
test
push
add
pop
pop
mov
cmp
nop
push
mov
sbb
lods
jae
out
jmp
jnp
push
push
adc
dec
in
pop
pop
hlt
inc
roll
add
call
mov
cmp
cmp
je
push
dec
push
arpl
cmp
and
cmpsb
jae
push
mov
or
dec
push
mov
push
je
imul
push
add
add
push
add
mov
mov
add
xchg
add
pop
xlat
test
adc
jo
pushf
add
addb
dec
xor
pop
cmp
lds
xorl
mov
fnstenv
enter
lock
xchg
aam
fsub
call
shl
pop
pop
add
int3
and
sub
sbb
lock
mov
push
out
push
jbe
lea
sub
lar
inc
mov
adc
adc
imul
adc
idivb
loopne
lahf
aaa
mov
sub
dec
dec
jl
stos
divb
mov
leave
inc
inc
lock
adc
or
jnp
sub
add
cltd
mov
divl
jle
mov
enter
mov
mov
sub
and
xchg
add
sub
cmpsb
outsb
dec
lock
fnsave
sbb
mov
dec
insb
leave
or
xor
in
fs
fwait
inc
inc
sub
sarb
cmp
push
gs
ss
fistl
push
dec
dec
imul
or
fs
insb
andb
pushf
sub
jo
insb
lret
mov
lret
jne
cs
insb
add
movsl
mov
dec
outsb
je
push
jb
in
mov
mov
mov
jbe
cmpsb
pop
cmpsl
push
gs
xchg
pop
stos
push
lods
lods
add
pop
xchg
gs
jo
jo
mov
gs
aaa
or
lds
cmpsb
pop
mov
inc
aam
mov
insl
mov
lea
sbb
inc
xchg
gs
int
xchg
xchg
xchg
xchg
xchg
pop
aam
mov
push
cwtl
js
lcall
je
jo
lret
mov
lret
inc
outsb
fs
gs
cmpsb
jmp
out
out
cmpsb
imul
mov
jb
pop
xlat
insb
lgs
inc
das
mov
lcall
inc
mov
int
mov
mov
mov
or
mov
mov
leave
pushf
push
frstor
clc
lret
add
arpl
std
adc
add
lcall
shll
leave
xchg
mov
add
mov
rdmsr
push
iret
xor
mov
rep
shrd
push
sbb
mov
inc
add
and
mov
xlat
mov
je
push
adc
cmp
sbb
iret
loop
aas
push
loope
sti
leave
mov
mov
sub
or
movsb
or
pusha
sbb
dec
repz
adc
adc
das
orl
loope
das
xchg
jne
pop
lcall
or
mov
rolb
jle
sub
jne
push
dec
xor
add
add
dec
add
call
sbb
out
lods
pop
lsl
dec
cmc
incb
and
or
pop
outsb
rcrb
adc
loopne
ds
xor
stos
pop
push
pushf
ficompl
fstpl
or
lods
xlat
push
mov
push
or
mov
stos
jp
jmp
sahf
mov
loopne
mov
and
jnp
cmc
pop
das
je
fcmovnbe
or
jp
ret
push
decl
stos
lock
pop
push
inc
sbb
pop
jae
je
sub
lcall
jbe
andl
mov
sub
stc
insl
clc
bound
xor
sbb
xor
jmp
jle
and
xor
cmp
popf
popf
lret
xor
lock
jg
aas
pop
xchg
pop
je
jno
in
xchg
mov
and
mov
sahf
cmp
xor
sub
mov
popa
arpl
fwait
cmpsb
leave
je
repnz
dec
addr16
outsl
jae
dec
shll
jne
and
add
incl
lea
jmp
xchg
or
js
pop
and
xchg
and
jb
adc
lds
jbe
mov
jbe
cmp
or
neg
sbb
dec
arpl
mov
faddl
fcmovbe
or
jecxz
aaa
add
je
insl
je
sahf
outsl
jns
pop
or
sub
dec
lock
je
xchg
pushf
add
je
inc
sub
lods
adc
or
lret
lret
lret
jl
push
jle
adc
adc
es
or
sahf
out
sbb
cmp
sub
pusha
lock
jmp
aas
adc
int
movsl
popf
add
xor
pop
out
dec
push
enter
in
in
push
inc
xor
adc
stos
stos
cmpl
pop
loopne
imul
xchg
gs
arpl
gs
xchg
xchg
outsb
je
jae
in
pop
xchg
insb
outsl
arpl
add
xchg
lret
pop
adc
mov
or
test
add
and
mov
cwtl
adc
add
cmp
jae
adc
sbb
jle
jle
or
mov
jl
fstpt
ds
jae
cmp
push
or
xchg
push
ljmp
push
sub
pop
cmp
add
jno
jnp,pn
pop
dec
enter
test
nop
pop
jge
mov
add
sub
mov
insl
cmpb
adc
push
push
fcomi
call
mov
pop
stos
push
frstor
and
fisttpll
sbb
and
lock
cwtl
add
mov
cmp
inc
inc
in
push
fwait
and
in
fdivl
lcall
mov
push
popf
adc
sub
test
or
adc
add
nop
movsb
add
popa
arpl
xor
and
outsb
cmp
fisubs
gs
xor
shll
insb
imul
es
and
or
mov
rcrl
rol
ret
mov
mov
les
lds
mov
enter
shll
int
into
add
shll
rcl
rolb
mov
lcall
shll
fs
shll
je
outsl
jns
or
aad
cmpsl
push
call
pop
pop
jae
add
pop
sub
pop
data16
lcall
jb
mov
dec
je
add
mov
dec
jmp
aam
adc
and
in
nop
movsb
std
fcoms
push
or
xor
and
add
adc
jbe
push
sub
nop
mov
inc
sbb
mov
iret
popf
fdivrl
cld
lods
rolb
lcall
inc
arpl
lock
xor
push
lret
push
jae
stos
and
enter
jb
lcall
sti
push
negb
cmp
cmp
mov
push
xor
fld
jnp
pushf
mov
popa
daa
stos
add
sub
xor
fsubl
fwait
mov
or
leave
and
faddl
mov
fcoml
sub
je
mov
je
and
call
mov
mov
aam
push
incl
inc
imull
test
mov
xchg
add
jle
and
jnp
pusha
add
aaa
pop
call
popa
dec
adcl
or
add
jmp
pushf
insb
scas
mov
push
mov
mov
psllw
mov
mov
mov
outsl
push
pop
js
xchg
mov
xchg
push
mov
push
daa
mov
push
xor
jns
add
loopne
insb
cmp
dec
sub
aas
cmp
and
leave
leave
arpl
sub
dec
rorl
je
bound
xorl
insl
sbb
pop
aad
cs
adc
data16
push
jo
gs
dec
dec
mov
orb
daa
and
std
jg
and
mov
sbb
jns
dec
shll
imul
daa
push
iret
movsl
ss
fisubrl
ret
xchg
cld
mov
jg
repnz
mov
dec
push
inc
cmc
inc
xor
mov
pop
shrl
xor
push
insb
xor
xchg
mov
bound
mov
pop
push
mov
mov
cs
and
mov
or
fcomps
or
mov
fildll
mov
add
cmc
add
hlt
lcall
lret
adc
mov
jmp
mov
mov
jne
push
adc
xchg
mov
jbe
mov
jne
nop
mov
pop
pop
add
nop
or
xor
addr16
push
cltd
mov
jp
or
data16
add
or
or
arpl
rcr
push
cmc
nop
out
adc
dec
jg
and
or
mov
rcrl
jl
push
out
xor
std
repnz
add
dec
icebp
andb
out
pop
xor
ja
mov
mov
sti
jg
and
out
push
rcr
sbb
pop
mov
adc
or
push
in
lahf
inc
lea
jmp
and
xchg
xchg
leave
and
pop
cwtl
inc
or
pop
sub
jl
incl
insl
movsb
pushf
pop
gs
into
test
add
icebp
jle
mov
adc
dec
pop
adc
push
add
or
jne
add
sarb
fwait
sbb
dec
mov
ljmp
sbb
sub
and
pop
pop
sub
xor
add
rolb
xor
dec
rol
stos
iret
ficoms
fcoms
jbe
imul
into
cmp
addr16
pop
stos
jge
jecxz
jecxz
mov
dec
jns
or
push
mov
mov
jle
cltd
cmp
and
pop
scas
jge
xchg
dec
sbb
pop
mov
mov
push
lock
je
dec
lcall
or
cmc
cmp
and
jo
add
jnp
and
scas
jge
int
ss
pop
xchg
xor
imul
mov
loopne,pt
adc
cmp
pop
test
sbb
pop
rcrb
call
sub
std
mov
mov
jbe
das
pop
rol
std
jbe
shrb
xor
push
push
fldt
js
mov
dec
in
add
mov
imul
cmp
jb
decl
add
daa
jb
inc
in
sbb
push
xchg
pushf
inc
sub
cli
insb
lods
and
enter
outsb
mov
inc
xor
and
mov
pop
adc
jb
cmp
jbe
dec
out
jns
out
cmp
adc
sub
add
or
mov
rolb
push
icebp
pop
and
aad
test
push
div
push
pop
sub
fistpl
push
mov
ds
add
cmp
repnz
xor
sarb
cmpl
cmp
push
adc
pop
in
push
out
pop
push
mov
and
and
sub
sub
mov
or
das
jmp
inc
hlt
push
lock
and
push
push
in
ret
pop
loopne
cmpl
push
mov
mov
jbe
out
fsubrs
fiaddl
sbb
pop
adc
movb
mov
movsl
ljmp
lcall
jae
pop
cmpsb
imul
mov
xor
jae
mov
jb
arpl
dec
shll
outsl
insl
jne
cs
adc
adc
lock
dec
loopne
pop
mov
sbb
push
xchg
sub
aam
sahf
popf
jp
loop
imulb
add
mov
jae
and
fs
fcompl
pusha
rcll
fiadds
and
or
and
push
sub
sti
sub
mov
dec
jb
nop
add
add
add
pop
dec
fnstsw
push
or
push
mov
nop
dec
and
cs
mov
dec
lds
or
adc
cs
jne
push
push
push
int3
pop
jge
pop
adc
clc
jo
sbb
sbb
clc
xor
pop
jo
and
pop
enter
push
loopne
bswap
pusha
mov
rclb
mov
jnp
and
mov
xchg
shl
adc
add
jb
or
orl
fisttpll
clc
add
xor
sbb
lret
dec
jo
xor
shrl
jo
jo
shll
insb
mov
pop
inc
mov
popa
dec
push
daa
lret
jo
jb
jae
sbb
xor
outsw
xchg
xlat
pop
outsl
fstp
dec
pop
and
add
jne
movzbl
push
sbb
xchg
xchg
xchg
mov
adcl
int
test
push
dec
inc
orl
xchg
enter
sbb
jo
int3
xor
aad
sub
or
and
xchg
adc
push
shlb
or
je
je
imul
xor
mov
orb
nop
xor
bound
push
xchg
dec
insb
lea
and
subl
test
cmp
or
mov
lret
dec
mov
dec
mov
sub
js
mov
outsl
insb
jecxz
mov
adc
inc
lods
jns
movsl
adcb
mov
ret
je
xor
inc
add
or
and
outsl
outsb
and
dec
inc
pop
pusha
pop
andb
and
dec
test
sahf
inc
jno
push
add
rorb
mov
pop
aam
push
ret
or
push
push
push
push
ja
push
outsl
data16
insb
les
jb
lret
mov
lret
pop
dec
imul
daa
outsl
es
lret
and
outsl
fidivl
push
shll
pop
push
sbb
mov
xorl
out
sub
ror
push
popa
jmp
pop
mov
lret
mov
push
dec
inc
popa
sbb
push
push
cmp
jo
rorb
xlat
cmpsl
mov
orb
in
mov
decl
or
jmp
test
mov
fldt
add
lock
fsts
mov
xor
mov
stos
adc
enter
pop
mov
ljmp
mov
ficompl
cmp
mov
sbb
loopne
dec
adc
mov
pop
cmpsb
push
sbb
adc
mov
mov
pop
dec
dec
mov
decl
int3
cld
mov
lea
push
ret
out
mov
push
lcall
add
out
insb
outsl
pop
add
cmp
or
mov
cmp
mul
mov
inc
push
push
inc
push
arpl
or
and
fwait
inc
lods
mov
outsb
pop
adc
pop
pop
mov
cmp
and
adc
sarl
xlat
sbb
movsl
mov
inc
dec
out
fs
mov
inc
mov
fcom
sub
or
fisubrl
int
sub
push
fnsave
int
sub
outsl
fistpll
fstp
leave
rorb
loop
jecxz
jae
rcrb
inc
out
jecxz
int
je
push
popa
lcall
jmp
pop
ljmp
jbe
lcall
push
int
sub
sub
arpl
imul
jae
mov
or
insb
pushf
fstl
std
fcoml
sbbb
int
js
outsb
jp
xchg
movsl
cmp
data16
inc
imul
xchg
inc
mov
push
mov
dec
insl
lret
ja
pushf
pushf
popf
insb
and
into
arpl
shrb
in
pushf
rcrl
out
mov
je
sbb
sbb
rorb
sbb
sbb
cs
shrb
pop
shrb
les
inc
push
int
insl
push
imul
shrb
jb
outsb
adc
rcrb
and
jns
into
leave
leave
jb
je
out
mov
jbe
test
ret
mov
and
lds
jbe
jbe
mov
mov
jb
mov
sbb
ret
les
mov
stc
ud0
push
ss
xchg
jo
pop
testb
or
cmp
outsb
mov
and
mov
pop
jmp
pop
jb
enter
lcall
pop
jmp
jmp
popa
sbb
xchg
mov
bound
fs
data16
fnstsw
fsts
pop
xchg
in
gs
pop
scas
popa
outsl
xor
in
jae
je
mov
pop
mov
add
push
xor
jae
and
add
and
fld1
stos
je
sbb
xor
orb
imul
cli
aad
fisubs
mov
fucomp
and
jb
push
dec
lods
adc
mov
or
sub
add
nop
push
push
xchg
xor
dec
and
call
in
xchg
into
pop
ljmp
sbbb
data16
scas
fdivr
mov
sahf
jmp
inc
insl
pop
cmp
std
sbb
loopne
shll
mov
lods
jb
jmp
mov
movsl
jecxz
jmp
jmp
mov
lock
mov
test
xchg
dec
nop
stc
pop
lcall
je
in
xchg
movsl
outsl
xchg
xchg
stc
pop
xchg
stc
mov
jb
stc
cwtl
stc
cltd
stc
lcall
fwait
stc
sbbl
sti
jo
loop
adc
mov
push
cmp
mov
popf
test
sbb
jns
dec
push
mov
fdivr
pushf
in
daa
xchg
cli
xchg
cli
fdivr
fmull
pop
cmp
xchg
xchg
ja
and
push
xor
xor
int
testb
mov
cmp
imul
inc
push
xor
jne
into
inc
mov
and
jbe,pn
out
outsl
jo
insb
jno
cmp
fxch
jb
je
push
jbe
movsl
pop
lcall
xchg
xchg
xchg
xchg
jns
jnp
cmp
xchg
jge
mov
pop
sub
movsb
test
gs
pushf
pushf
pushf
popf
bound
fs
rorb
imul
push
aad
or
leave
leave
leave
fsts
push
pop
pop
sub
fxch
pop
inc
mov
imul
or
dec
leave
leave
leave
rclb
dec
dec
dec
inc
adc
leave
dec
dec
fwait
mov
test
in
scas
adc
iret
add
cld
xchg
cli
stc
pmulhuw
pop
push
shlb
add
pop
lcall
fs
test
push
in
jno
pop
aas
pop
adc
mov
add
or
popf
inc
in
or
pause
bound
mov
lock
popa
cltd
xchg
stc
ljmp
loopne
pop
or
add
sahf
pop
cmp
or
jle
addr16
push
rorl
or
das
sbbb
popa
les
pop
lods
addr16
jmp
inc
push
jb
or
cmc
adc
xchg
adc
and
fsubr
push
xchg
mov
shll
push
dec
outsb
arpl
xor
xor
arpl
shll
xor
dec
shll
jae
cmpsb
sub
imul
cltd
jne
add
leave
stos
inc
shlb
xchg
das
int3
push
adc
shlb
stc
or
add
js
or
popa
mov
lods
gs
inc
out
xchg
clc
call
call
sub
pop
cmp
shll
inc
sbb
das
stos
and
int
dec
insl
xchg
jne
push
push
fmull
rorl
push
popf
adc
mov
cmp
cmpsl
fcmovb
sbb
and
sar
idivl
push
push
add
push
stc
add
bound
outsl
clc
mov
or
add
std
loopne
push
xchg
mov
sbb
lea
xor
stc
adc
sbb
mov
sti
lret
and
push
mov
popf
or
sub
mov
xchg
outsl
xchg
jl
lds
or
jnp
loopne
jmp
sbb
les
call
xor
clc
add
xchg
fnsave
call
jge
push
out
scas
mov
or
mov
loope
fcoms
xchg
pop
je
push
call
mov
push
push
mov
lret
inc
mov
je
jmp
lea
fcmovnbe
out
out
nop
lock
adc
cwtl
or
insl
mov
adcb
scas
std
jbe
in
jns
rorb
pextrw
imul
mov
xlat
aaa
adc
push
pop
push
push
mov
lock
mov
cmc
adc
lahf
jne
inc
sbb
rorb
sub
in
xchg
call
and
sub
call
add
pop
rcll
sbb
mov
jnp
int3
lods
and
fs
out
jbe
pusha
fsts
pop
aam
jae
sbb
bound
cmp
mov
sbb
jns
leave
mov
pushf
call
xchg
xchg
sbb
pop
push
in
and
mov
inc
cwtl
sbb
in
test
stos
je
in
mov
pusha
pop
shlb
pop
jae
loope
fisubs
sub
jb
sbb
shlb
xor
test
sub
sbb
add
push
xchg
mov
fst
mov
adc
insb
xchg
int
or
mov
mov
xchg
add
jae
adcl
sbb
fs
dec
xor
int3
daa
add
fs
lret
aam
cltd
jnp
bound
lea
adc
mov
mov
mov
ficompl
pusha
xor
adc
dec
insb
push
adcb
pushl
lea
sub
xchg
jae
and
and
outsb
mov
push
sub
outsb
and
jne
push
sti
mov
jo
and
aaa
adc
jne
or
sbb
xchg
shlb
and
in
push
or
adc
ret
pushf
push
pop
push
sbb
sbb
mov
adc
mov
adc
adc
mov
sbb
push
sbb
aaa
mulb
inc
pushf
lea
push
outsb
popf
mov
adc
mov
xchg
push
xchg
sbb
ret
orl
mov
outsb
mov
ret
mov
adc
mov
sub
push
imul
jnp
insl
push
xlat
or
push
lea
stc
push
push
ss
sbb
push
hlt
sub
xchg
test
sbb
or
test
mov
cmp
push
and
sub
es
stos
js
add
lock
repz
cmp
push
lret
pavgb
mov
mov
or
pop
int3
es
and
ja
int
ret
jmp
call
pop
xor
cmovp
jmp
test
fcoml
mov
cmp
jl
lret
pushl
sbb
cli
xor
jg
inc
inc
movb
jl
loop
mov
push
aaa
xlat
push
pop
sub
pop
mov
and
adc
loopne
add
test
mov
sbb
jns
sub
fs
pop
cli
imul
jmp
rorb
pop
repz
mov
sarb
pop
sub
xorb
call
push
in
push
mov
push
mov
push
pusha
pop
pop
push
or
push
dec
or
sub
ret
mov
xchg
cmpb
aas
pop
ret
jbe
pusha
push
lret
sahf
aad
mov
or
push
add
add
jne
add
add
lret
add
mov
ret
shr
daa
jno
dec
aas
jmp
push
data16
xor
push
lret
mov
push
xchg
push
jae
jo
leave
mov
jb
je
je
shlb
cmp
xor
gs
leave
mov
sub
cmp
push
xchg
push
jae
push
sub
lret
jo
je
mov
lret
mov
arpl
popa
mov
sub
bound
jae
shrl
outsb
leavew
lret
int3
lret
mov
push
int
dec
imul
outsl
pop
ss
cmc
jne
data16
imull
clc
stc
cli
imul
and
jo
jb
test
or
add
mov
lds
outsb
jo
in
mov
inc
mov
pop
mov
sbb
scas
mov
pop
je
mov
jne
sub
dec
mov
xchg
adc
or
sbb
es
jne
pushf
or
addr16
mov
inc
std
icebp
xor
and
cmp
inc
aam
dec
dec
cmp
cmp
dec
add
inc
xor
push
xchg
shr
push
cli
movsl
lds
outsl
inc
sbb
cmp
add
cmpb
lock
add
jo
add
cmpl
filds
cli
jb
dec
or
imul
push
in
inc
mov
cmpl
movsl
mov
fisttps
fisubl
mov
sbb
jecxz
fadds
or
test
jmp
push
push
sbb
shrl
xor
add
jmp
lock
xor
push
test
jne
addr16
mov
or
or
mov
jno
add
dec
ja
add
mov
in
fistpll
andl
or
jmp
jle
movzwl
mov
jne
mov
mov
ljmp
cli
add
insl
stc
cmp
push
or
ljmp
out
push
data16
lock
or
pop
and
dec
sub
push
rclb
movsl
or
or
in
cmpsb
and
lea
pop
dec
pop
inc
mov
inc
inc
push
cmp
outsl
cli
jl
add
jmp
add
jae
push
das
test
inc
add
lods
hlt
push
adc
fistl
jle
out
scas
test
dec
adc
loop
inc
cmpsb
in
mov
adc
iret
sarb
mov
lea
pop
mov
pushl
inc
push
jo
imul
clc
add
sub
stos
push
xor
test
inc
outsl
jns
push
mov
cmp
pop
daa
out
push
int3
jnp
jae
cmp
jno
data16
mov
push
mov
call
in
pop
lock
lahf
inc
aaa
pushl
lcall
xor
daa
mov
push
and
test
adc
mov
loopne
scas
sub
adc
daa
xchg
cltd
cld
push
cmp
push
orl
ret
xchg
sbb
dec
outsl
mov
xchg
inc
cmp
testb
mov
es
inc
sub
mov
rcrb
and
fwait
push
push
loopne
mov
aad
or
jge
mov
jb
sbb
sbb
adc
data16
inc
xchg
mov
jno
or
pop
add
mov
push
push
in
repnz
sub
mov
adc
idiv
push
int3
rorb
jmp
and
out
push
inc
into
lea
gs
push
and
pop
dec
xchg
insb
outsl
gs
push
add
fs
and
xchg
push
lret
sub
stos
in
mov
fistps
jne
lock
xchg
or
or
loop
sub
mov
addl
mov
or
sti
lret
insl
and
xchg
adc
sbb
in
dec
dec
or
cmpsb
dec
cmp
pop
imul
test
push
in
movsl
or
es
xchg
or
lcall
test
lret
lahf
addr16
cmpl
and
sub
cltd
push
push
jae
lods
push
lds
lea
cltd
jne
clc
cmp
jnp
push
xlat
pop
push
sbb
jl
jecxz
je
xchg
fnstcw
add
popa
add
mov
fcoml
subb
add
mov
shl
hlt
push
scas
jge
aam
inc
out
pop
rcll
or
add
push
dec
push
fdivl
or
ss
sub
sbb
jo
or
and
imul
mov
bound
call
shlb
jge
mov
lret
aaa
jmp
jp
pop
xor
add
cmp
add
push
jbe
int
mov
daa
test
inc
pop
jmp
mov
es
and
ret
jle
mov
xor
scas
mov
movsb
jge
stc
push
movsb
and
add
or
inc
mov
xchg
repz
popf
sbb
or
pop
jg
rcrl
int3
aaa
and
cmp
stc
xor
fildl
and
loop
and
push
mov
ret
cmc
dec
mov
pop
xor
hlt
and
jmp
jbe
mov
xor
out
shll
es
fs
push
pop
arpl
fs
imul
fs
mov
mov
lods
sub
imul
or
ret
mov
movsb
or
mulb
gs
cmp
xchg
gs
xchg
xor
xor
mov
fisubrl
repz
dec
xchg
mov
push
fdivr
dec
and
inc
mov
addr16
sub
inc
pop
add
mov
movsb
ret
mov
push
lret
jp
cwtl
insb
gs
push
les
xor
xor
adc
fbld
push
mov
push
or
movsl
mov
and
sub
insb
das
pop
fstpl
call
sub
andl
ss
ds
inc
push
mov
loopne
push
out
pop
add
arpl
or
pusha
inc
in
inc
repnz
mov
popa
leave
adc
setp
and
lcall
jo
outsl
sbb
pop
loopne
loope
mov
imul
rcrb
nop
ficoml
int3
cmpb
adc
pop
rcrb
test
cmp
sarb
cmp
dec
adc
or
aaa
xchg
std
mov
xchg
popa
cmp
out
lds
test
pop
fwait
das
jp
inc
std
sub
clc
mov
push
jp
xchg
sub
and
sbb
sarl
hlt
inc
push
imul
nop
inc
mov
pop
jo
popf
test
and
add
pop
sbb
jne
flds
arpl
jmp
mov
pop
dec
xor
and
adcb
sub
dec
fs
adc
or
mov
inc
rorb
popa
int
shrl
add
sahf
iret
mov
insb
jo
je
mov
dec
inc
lods
pop
clc
hlt
jl
lahf
arpl
inc
or
or
mul
repz
sbb
add
add
andb
mov
xlat
push
fs
fwait
add
leave
in
push
imul
nop
gs
cmp
insb
or
insb
mov
nop
insb
mov
xor
sbb
hlt
cmp
outsb
add
int
lea
xor
adc
je
mov
add
cmc
adcb
mov
xchg
and
gs
dec
fs
ljmp
gs
outsl
outsl
insb
push
xor
popa
jo
push
insl
out
jg
add
jb
jne
insb
and
mov
mov
dec
ss
add
inc
insb
jle
pop
add
fs
std
jg
and
fs
imul
push
add
jae
arpl
add
fcmovnu
orb
dec
gs
xchg
cmovbe
cmpsl
fstpt
outsl
arpl
push
imul
jge
frstor
sbb
fs
adc
insl
adc
jg
imul
mov
add
imul
mov
std
imul
and
inc
jns
xchg
xor
or
and
pop
pop
sbb
adc
xchg
jle
mov
inc
xchg
gs
js
gs
fucomi
gs
inc
outsl
jb
outsb
and
push
lods
jmp
fsubrs
push
gs
outsl
pop
push
fsubl
lods
out
dec
sbb
lods
inc
sbb
int
mov
sahf
aad
push
jo
inc
push
in
add
pop
inc
sub
mov
mov
pop
ret
jb
cmpsl
sub
sahf
scas
push
aaa
jno
pcmpeqb
and
int
pop
punpcklbw
mov
clc
push
ret
shrl
fists
push
gs
je
jnp
mov
bound
jae
sub
fcompl
loopne
insb
insb
push
gs
addl
bound
loopne
imul
pop
xlat
fcmovb
insl
push
outsl
dec
xor
test
mov
push
jne
jb
cmp
js
xor
data16
loope
data16
gs
insl
adc
add
jns
fbld
pop
fistpl
imul
pop
sbb
sbb
js
out
imul
popa
mov
mov
lea
fwait
mov
loope
add
js
sbb
test
test
add
inc
mov
in
pcmpgtb
ret
add
xor
mov
arpl
imul
push
mov
mov
adc
inc
push
dec
inc
xchg
mov
icebp
lods
add
jo
je
aaa
push
dec
push
sti
sub
insb
popa
xchg
dec
or
test
jb
shll
pusha
and
push
out
sub
inc
push
std
inc
pop
mov
jmp
add
sub
shll
fiadds
call
popa
dec
add
addr16
aad
mov
fisubrl
push
push
mov
push
inc
xchg
fcompl
push
pop
add
or
in
movl
mov
je
repz
mov
push
jb
insl
mov
arpl
lret
and
int
ficomps
and
aad
sbb
mov
add
push
mov
test
mov
imul
cwtl
in
mov
adc
push
add
jne
repz
cmp
mov
pop
add
push
dec
gs
fistpl
inc
lcall
int3
inc
adc
push
fmuls
testb
insl
push
inc
inc
push
inc
push
nop
aam
inc
stos
outsl
cltd
push
es
std
xchg
or
into
sbb
jne
gs
pop
sbb
pop
jnp
stos
xchg
mov
cmp
or
insb
xchg
xor
pop
pop
stos
mov
shll
pop
adc
jmp
data16
xchg
xchg
int
dec
xchg
popa
pop
mov
cmp
cmp
jns
rcl
pop
mov
or
test
add
mov
icebp
into
push
jbe
mov
mov
ss
pop
push
add
loope
dec
aaa
jbe
jae
nopl
sbb
enter
xchg
ja
xor
mov
lds
out
mov
lds
adc
outsb
sub
or
loope
pop
jbe
sub
cwtl
xor
gs
repz
stos
in
insb
ja
dec
scas
test
mov
arpl
jo
dec
insl
pop
and
inc
outsl
fildl
lods
sbb
pusha
sub
or
mov
adc
jnp
mov
cld
xor
push
popa
jbe
les
xor
push
inc
sub
dec
xor
mov
scas
dec
inc
popf
lods
inc
loope
push
dec
sbb
cmp
cmp
stos
shl
or
push
mov
adc
and
out
pushf
adc
call
fsubrs
mov
push
bound
lds
pop
mov
pushf
sub
xchg
loopne
cmc
mov
mov
or
icebp
out
sub
test
cltd
xor
sbb
jne
mov
or
lret
repnz
and
ret
call
fwait
add
jne
xchg
std
mov
mov
mov
push
stos
adc
push
add
inc
mov
inc
pop
jmp
sub
add
inc
addl
inc
push
bound
pop
mov
loopne
lcall
cmp
lods
in
arpl
dec
inc
sbb
aam
inc
lods
cmc
clc
aam
daa
lea
dec
or
mov
shll
pushf
pop
enter
loop
test
js
outsl
jns
jecxz
pop
jg
call
fwait
insl
lret
mov
jmp
mov
mov
ljmp
pop
sub
stos
sbb
fsts
ss
cmp
loope
push
push
jmp
push
cmp
cmp
cmp
mov
popf
pop
lret
and
mov
mov
bound
add
jp
fidivrl
stos
push
push
sub
incl
inc
fdivrp
mov
jne
adc
mov
or
adc
xchg
mov
test
lcall
rorb
int3
daa
daa
inc
arpl
cmp
shl
add
jg
scas
push
jmp
shl
add
in
mov
fcoms
lds
rol
add
or
lret
add
adc
lret
call
jg
jmp
loope
and
add
or
sub
adc
jmp
xor
ja
add
fs
push
jmp
push
or
push
repz
and
inc
jmp
mov
call
pushf
clc
not
mov
mov
repz
jb
sbb
test
adc
or
sub
int3
jle
add
in
pop
fcmovnu
mov
insb
add
add
iret
add
arpl
push
or
jb
mov
mov
shr
add
cwtl
test
or
mov
pushf
push
sub
cltd
jmp
pop
push
jle
mov
mov
hlt
sbb
shr
add
or
push
shll
test
stc
clc
aaa
mov
stc
mov
leave
pop
xor
mov
fstp
mov
imul
xchg
jp
divb
lret
push
loopne
mov
pop
pop
ss
dec
jmp
fs
mov
movsb
outsl
out
pop
pop
mov
mov
sbb
cld
les
dec
popf
movb
in
xchg
cmp
and
dec
pop
pop
add
pop
les
pop
aad
ret
push
pushf
pusha
test
fisubs
sbb
jae
jmp
ljmp
add
and
pop
clc
not
stc
pusha
pop
test
ja
cmp
not
stc
call
jl
out
mov
adc
push
cmc
add
add
ror
ja
aaa
cld
shrb
inc
stos
lret
xchg
mov
mov
sbb
add
ja
or
cmp
clc
test
test
jmp
cmpsb
test
add
sbb
into
lock
jnp
test
in
push
rorb
mov
xor
mov
mov
pushf
out
inc
clc
adc
lock
loope
test
xchg
pop
clc
stc
fwait
out
sbb
cmp
fnstsw
mov
jge
shr
xchg
imul
or
daa
push
mov
lock
or
pop
pop
or
lods
std
and
pop
cld
jmp
cld
out
cmp
pushl
mov
lea
not
call
es
mov
jmp
xchg
out
std
push
cmpsb
outsl
cmp
mov
sub
sub
push
mov
mov
pop
push
jmp
shrl
mov
or
mov
cwtl
mov
call
iret
xor
pmaddwd
icebp
xchg
in
outsb
shll
pushf
push
pushf
jmp
std
imul
push
dec
gs
add
jmp
jmp
cltd
and
mov
adc
imul
add
inc
mov
pop
inc
mov
inc
insb
dec
pop
add
scas
cmpsl
inc
add
es
jg
insl
pop
stos
fisubl
rolb
stc
ret
cli
ja
mov
insb
dec
sub
fidivrl
xchg
iret
loope
and
mov
outsl
shlb
repz
lahf
addb
rorl
mov
pushf
and
mov
adc
rcrb
jmp
inc
jecxz
mov
pop
cmpsl
imul
ret
test
push
sets
stos
insb
cld
sets
cmp
js
int3
sub
cmp
and
ja
pop
dec
inc
pushf
add
sbb
call
or
jmp
mov
fmull
ret
push
call
scas
xchg
into
cmp
out
or
add
mov
rcll
push
jecxz
insb
mov
push
xchg
cmp
sbb
lods
repnz
adc
pop
pop
push
sbb
adc
jecxz
fucomp
pop
outsb
push
pushf
dec
jecxz
in
xor
mov
push
sbb
push
mov
push
stc
sti
prefetchwt1
pushf
lahf
call
icebp
cmp
inc
ret
imul
ret
aas
loop
mov
fldt
push
sbb
mov
push
mov
subb
pusha
push
or
xorb
arpl
xor
xchg
mov
push
cld
xor
lock
seta
dec
cmc
cmp
pushf
sbb
stos
rorl
mov
imul
shll
cmp
fwait
loopne
add
add
rcrb
cmc
pop
push
xlat
shl
pop
into
xchg
mov
pop
pop
into
cmp
push
pushf
clc
mov
push
rcr
and
je
cmp
std
xchg
out
call
loop
loopne
pop
scas
sbb
mov
sarl
xchg
and
insb
pop
adc
mov
leave
sahf
inc
adc
push
inc
xlat
pop
cli
bswap
mov
iret
push
outsb
pop
lcall
cmc
repz
outsb
or
call
mov
out
jle
scas
pusha
testl
cmp
ret
repnz
pusha
hlt
lock
push
ffreep
push
das
insb
fwait
sti
mov
push
pop
or
das
idivb
aaa
fdiv
push
setne
pushf
xchg
pushf
incb
cmc
pushl
or
loop
inc
xchg
jmp
subl
mov
or
pop
push
push
or
mov
jbe
fisttpll
shll
call
and
cs
fldt
pslld
sub
mov
aad
add
daa
iret
cs
movsl
xchg
mov
cmpsl
jno
leave
mov
pop
cmpsl
adc
lods
movsl
movsb
imul
push
outsb
cmc
mov
mov
adc
lahf
mov
paddusw
inc
movsl
jno
lods
lods
jg
or
push
outsb
in
mov
jns
in
push
jno
add
mov
lods
movsl
movsb
insb
sarl
xchg
lahf
xchg
mov
mov
lea
push
add
mov
push
loopne
std
es
jae
sbb
movsl
mov
ja
mov
adc
outsl
sysret
je
sub
mov
xorl
or
enter
and
in
aaa
sti
jg
mov
push
push
jnp
mov
jae
xor
jnp
neg
inc
and
fwait
mov
ret
pop
sti
mov
push
mov
fwait
cmp
pop
jnp
es
out
dec
xchg
adcl
jnp
add
mov
dec
fists
xchg
outsl
and
xchg
xlat
cmp
jnp
push
neg
jnp
adc
and
nop
out
mov
scas
jle
mov
sbb
imul
testl
cmp
jnp
leave
xchg
adc
and
stos
inc
shll
lock
pop
aaa
push
outsl
testl
out
stos
pxor
or
addl
stos
xor
int3
jle
adc
lock
jmp
jg
xor
lahf
xchg
mov
jae
pop
inc
jnp
dec
jle
loop
orl
or
mov
das
pop
lea
ds
shr
call
mov
loopne
add
sub
or
sbb
push
jmp
cmpsb
mov
sub
jmp
scas
andl
das
xlat
call
addl
push
cmp
mov
add
pop
sti
adc
jb
out
call
or
lock
sti
rclb
fs
or
mov
push
jl
inc
or
inc
fnstsw
xchg
xchg
push
or
jl
ret
xchg
shrl
xchg
mov
clc
push
jmp
daa
mov
jecxz
push
inc
mov
mov
andl
out
out
sbb
aaa
or
cmp
imulb
stos
or
xchg
push
pop
cmp
movsb
lods
stc
out
call
mov
shl
pusha
cwtl
js
pop
arpl
jmp
dec
add
sbb
rol
push
sbb
add
push
cvtps2pi
jno
jl
pop
sarl
in
xchg
in
adc
add
inc
repnz
pusha
pop
xchg
call
gs
in
adc
repnz
scas
scas
sub
scas
mov
push
pusha
outsl
lcall
inc
or
xchg
loop
sbb
xchg
or
xor
jg
jmp
jb
jg
inc
and
cltd
mov
or
and
sub
push
gs
pop
testl
add
aad
pop
add
cmc
ja
outsl
or
mov
stc
cmp
sbb
push
jmp
jo
pop
call
jmp
ffree
or
push
add
jg
mov
aad
mov
iret
stc
cmp
roll
es
shl
int3
push
pop
call
fcomps
sub
sarl
or
insb
and
sub
std
pop
fimull
push
jmp
inc
outsb
cld
aas
push
adc
push
sub
in
aam
iret
addr16
xchg
sbb
push
in
xor
insl
mov
cltd
ret
push
addl
clc
xor
lods
inc
pushf
jbe
or
stc
out
sbb
imul
or
test
mov
push
mov
jmp
jbe
sub
jle
fs
jge
pop
mov
sti
pushf
pop
in
ss
loope
shrl
or
sbb
clc
rcr
icebp
pusha
dec
push
movsl
push
mov
sub
into
cmp
push
mov
push
mov
pop
aam
mov
sarl
test
cmc
or
out
add
data16
inc
out
aaa
sbb
scas
in
clc
and
inc
sbb
incl
shll
sub
or
mov
push
hlt
mov
adc
shrd
pushf
jecxz
mov
loope
mov
mov
sbb
add
iret
out
fldl
sbbl
cmc
pop
xor
push
jmp
sbb
ror
add
div
loope
pop
inc
mov
jns
insl
add
shlb
add
inc
adc
push
cmp
sub
testb
or
jmp
call
call
pushf
jle
xchg
or
dec
testl
push
mov
mov
bound
dec
jo
fucomi
pop
insb
push
jno
iret
orb
dec
xchg
push
inc
sarb
lds
jmp
shll
outsl
cmp
push
out
cs
popl
ljmp
outsb
ficoms
mov
push
stos
mov
sub
inc
lods
arpl
and
pop
lea
fiaddl
jns
adc
pushf
xchg
fdivrp
mov
mov
mov
cwtl
pop
and
xorl
xchg
sub
cmpsb
and
xadd
sbb
loopne
fldt
leave
dec
adc
daa
lds
sbb
ficoml
lods
call
popa
clc
stc
data16
fnstsw
ja
pusha
push
add
in
xor
or
or
dec
mov
inc
je
icebp
xchg
push
loopne
scas
arpl
fldt
ret
pop
adc
xor
or
cli
frstor
roll
push
outsw
rcrb
call
adc
mov
ret
fwait
adc
and
push
cmp
mov
data16
call
shll
mov
jmp
xlat
in
and
pop
sub
pop
cmp
jmp
shl
aam
or
or
push
mov
pushf
add
sar
adc
ss
jmp
mov
inc
mov
jge
xlat
rorb
ss
pop
out
fdivs
popf
push
push
mov
popf
xor
add
loopne
ret
daa
dec
dec
mov
and
mov
fisubrl
lret
dec
js
cmp
sub
pushf
adc
test
pusha
or
lret
mov
shl
pop
fistpl
ljmp
push
mov
shr
add
jg
fstpl
cmp
jns
push
xor
rorl
aaa
push
mov
test
add
mov
loope
push
mov
dec
add
adc
js
and
and
cld
ss
outsb
jmp
adc
in
jmp
ja
cwtl
jmp
je
idivl
aam
inc
jg
cmpsb
repnz
jbe
daa
mov
arpl
cmp
loope
cmp
icebp
sbb
ljmp
clc
sahf
cwtl
cmpsb
pop
clc
lds
aam
lahf
sub
fldl
test
mov
xor
call
add
stos
push
test
insb
jmp
pop
cmpl
push
push
je
pop
lea
jl
sub
sub
jns
inc
sbb
add
int
nop
jb
cmp
cmpsb
shlb
out
mov
lea
mov
push
cltd
and
arpl
aas
shlb
int
sub
cmp
jp
icebp
mov
shl
cmp
rcr
lea
xor
jmp
ss
xchg
call
pusha
les
outsb
and
fucomip
adc
mov
jo
inc
ret
adc
pushf
inc
inc
clc
sbb
xchg
cld
in
mov
repz
prefetch
pop
fnsave
add
pop
mov
std
push
mov
shrl
or
testb
adc
pop
pop
ja
stc
mov
pop
lahf
call
mov
outsb
call
or
test
push
sub
clc
cmp
pop
add
movsl
jmp
jmp
and
mov
jg
mov
sub
cmp
and
ret
pop
mov
xor
jmp
pusha
inc
or
mov
add
adc
lods
mov
stc
rorb
jmp
cli
clc
call
mov
xchg
and
dec
ja
mov
call
ss
cltd
sahf
jecxz
dec
adc
sbb
inc
shr
inc
or
adc
dec
pusha
movl
push
in
jmp
idiv
hlt
pop
xchg
xchg
lea
stc
pushf
add
jbe
enter
jns
call
cwtl
inc
push
scas
dec
push
jp
inc
or
mov
xor
scas
or
pop
daa
sbb
sbb
push
js
test
test
in
push
aam
cmpsl
jmp
xor
jbe
mov
call
fcompl
repnz
lea
adc
and
data16
fcomip
je
mov
rcll
or
mov
jbe
cmp
movsl
shr
push
pop
and
push
call
sbb
xlat
cltd
jnp
mov
push
lcall
sub
loopne
mov
leave
outsl
xchg
jge
aad
jecxz
ljmp
dec
fstl
and
adc
sbbl
jmp
pusha
mov
sbb
sbb
icebp
data16
call
outsb
xchg
ret
adc
sbbl
lret
ljmp
pop
cli
test
loope
inc
jmp
jmp
out
jp
mov
sbb
push
pusha
shl
add
jb
jg
sbb
bswap
pop
pop
cwtl
jle
inc
test
dec
jle
add
xchg
mov
imul
push
imul
or
sub
jae
jmp
push
pop
clc
loope
mov
adc
pusha
out
mov
cld
shll
xchg
incb
or
test
insb
clc
outsb
adc
sub
jmp
repz
cld
ja
ljmp
rcl
iret
mov
clc
mov
mov
push
push
jecxz
cltd
mov
daa
hlt
dec
inc
push
xchg
cwtl
es
lea
dec
je
aam
enter
lret
cld
sbb
and
cli
test
neg
sub
ljmp
dec
repnz
mov
dec
cli
sbb
ret
add
adc
test
adc
dec
jg
and
pop
mov
lds
xchg
xchg
mov
dec
clc
out
adc
xchg
repnz
cmp
push
sub
and
clc
jge
dec
movsl
and
lods
repnz
lret
testl
fs
sub
push
xchg
out
add
mov
fiadds
pop
sbb
push
jge
push
xor
xor
push
cmpl
adcl
sbb
out
or
iret
loop
data16
stc
clc
add
and
jmp
cmc
cli
cld
mov
loopne
and
mov
lds
fsubrs
orl
les
lods
xlat
rclb
loop
lock
lret
pushl
shrl
xlat
movsb
jne
gs
push
popa
sub
or
jmp
pop
call
mov
push
imul
mov
outsl
jg
out
andnps
and
std
in
into
mov
cmp
push
andl
and
mov
xlat
or
enter
xchg
dec
mov
pusha
mov
push
mov
mov
icebp
decl
pop
add
mov
std
push
pop
push
inc
push
fisubs
jl
push
sbb
cli
fstl
gs
nop
push
jmp
and
jne
adc
ret
loope
jne
pop
inc
xor
inc
jmp
pop
add
mov
pop
mov
cmp
out
int
xchg
js
sub
adc
decl
sahf
mov
sahf
push
gs
shrb
les
inc
stos
push
jg
lcall
mov
push
xor
insl
xor
icebp
shlb
inc
test
mov
jp
pushl
sbb
testb
cmp
xbegin
jmp
cltd
cld
jae
inc
js
xor
sbb
fisttpl
andl
add
fst
inc
fcos
fwait
ja
aam
jl
xor
lods
lea
movb
lods
scas
outsb
inc
inc
and
push
out
mov
rcl
mov
movups
mov
or
rolb
sub
dec
std
pop
int3
stos
arpl
repz
fimull
or
out
cmpb
incl
lcall
xorb
in
fdivs
mov
mov
fildll
dec
repz
push
mov
pop
jle
and
ds
sbb
icebp
ret
cmp
or
lret
clc
lock
lret
adcl
inc
cmpsb
push
or
sub
in
mov
outsb
push
dec
sub
pop
cli
daa
jmp
and
push
outsl
push
cmp
mov
adc
xchg
jg
gs
add
mov
cld
out
push
popa
push
dec
gs
decl
lret
popf
sahf
fwait
push
xchg
xchg
stc
mov
pop
cs
cmp
test
inc
mov
fs
sub
sub
repnz
lock
int3
test
pop
push
sub
loope
and
push
xor
cmp
je
push
vpaddd
clc
lret
lret
pop
sbb
inc
in
push
xor
adc
fisubrl
test
sub
push
mov
jae
sbb
push
pop
jle
in
out
aaa
loopne
int3
ss
sbb
out
cmp
pushl
loop
out
fistpll
jecxz
xor
push
imul
dec
in
hlt
sbb
pop
mov
push
out
jg
subl
sbb
ret
inc
inc
mov
jae
dec
addr16
int3
ja
xor
ss
mov
adc
pop
in
pop
xor
pop
jns
cli
js
jge
lcall
xchg
jne
sbb
sub
shll
mov
push
sti
andl
inc
push
or
scas
or
arpl
sub
pop
mov
pop
shrb
xor
dec
std
int3
and
fistps
mov
ljmp
sub
mov
icebp
push
out
test
adc
jmp
fs
pshufw
add
pushf
and
dec
decl
std
fadd
mov
ret
push
shlb
adc
jae
ja
test
aaa
xchg
je
push
xchg
mov
shl
sti
pushl
mov
pop
dec
xchg
leave
movsb
jnp
push
and
ljmp
shlb
mov
adc
in
aad
xor
iret
add
jg
fstp
mov
lock
int3
scas
xchg
xchg
test
and
lods
xchg
add
mov
lock
fildl
mov
jns
movsl
pop
mov
mov
dec
enter
loope
xor
add
test
or
ljmp
decl
mov
xor
cmpsb
jmp
adc
test
jecxz
dec
cmpsb
jbe
enter
js
stos
jg
shll
xor
mov
inc
in
mov
push
dec
jne
aas
sbb
fnstsw
incl
jne
dec
push
inc
repnz
and
ret
mov
js
out
mov
mov
inc
jp
in
lret
xchg
push
es
aas
ss
in
sahf
insl
pop
aas
sub
adc
pop
mov
jns
in
dec
loope
mov
scas
xor
mov
lret
xor
aaa
out
popf
inc
neg
out
fxtract
and
fidivrs
or
lds
sarl
lcall
ljmp
roll
fsts
mov
pop
into
mov
xchg
adc
mov
outsb
mov
pop
xchg
out
dec
js
jmp
or
lret
roll
in
int
mov
xor
adc
filds
aas
sbb
add
lcall
sub
add
loop
push
inc
and
or
orl
sar
popa
sub
addr16
mov
mov
cli
push
push
inc
pushf
xor
pop
hlt
push
call
ja
jecxz
xchg
mov
cmp
fistps
cmp
xchg
call
or
xchg
icebp
lcall
stc
inc
std
jnp
lret
rorl
es
sub
out
mov
pop
clc
enter
pop
bound
cmp
push
jp
and
dec
mov
pushf
inc
sub
jbe
push
outsl
fs
hlt
sarl
fsts
push
inc
xchg
sbb
in
mov
mov
mov
jne
inc
scas
jl
cmc
rorb
movsb
dec
cmp
icebp
rcll
int3
cmc
sbb
aam
pop
adc
pop
mov
push
arpl
sub
pop
jne
xor
inc
inc
adc
enter
xchg
cmp
xchg
dec
lret
pop
sbb
fdivrl
pop
cmp
loop
decl
movsl
mov
pop
dec
mov
add
pop
mov
mov
movsb
in
xchg
pop
pop
inc
dec
inc
test
loop
lahf
pop
loopne
dec
clc
or
xor
mov
incl
stos
jne
cmp
sub
int
adc
inc
mov
pop
decl
or
xor
xlat
adc
mov
pop
pop
sub
jmp
into
jb
cs
call
into
faddp
cld
mov
lret
inc
jp
inc
das
or
aam
dec
outsl
mov
ficoms
bound
outsl
mov
popa
add
stc
jmp
mov
jge
jno
and
xlat
pushf
gs
daa
push
push
xchg
push
imul
sti
jmp
rcrl
xchg
sub
lea
mov
aaa
or
push
jmp
push
movsb
mov
mov
incl
ds
cmp
enter
fisubl
leave
jne
loope
jg
mov
jo
shlb
std
xchg
in
push
mov
dec
hlt
jb
mov
sub
pop
pop
push
sub
in
out
iret
iret
je
lcall
loope
jle
out
dec
les
mov
aam
fs
pushl
bound
out
outsl
push
fldt
imul
in
mov
dec
cmp
ret
lods
fdivrl
shll
pop
call
pop
je
bound
and
ss
and
pop
clc
outsl
ljmp
mov
repnz
aad
sub
mov
ja
mov
cmp
decb
sbb
inc
cmp
cmpsb
cld
and
mov
loopne
ljmp
fdivrs
jg
pop
pop
int
lds
test
adc
in
mov
hlt
push
add
popf
or
and
jmp
mov
imul
orl
mov
push
js
xor
pop
cld
push
test
sub
pop
add
and
cmovbe
stos
pushl
dec
cwtl
mov
pop
inc
xor
and
push
xlat
pushf
jge
cmp
stos
in
adc
rorl
data16
fnsave
mov
jg
and
fcmovnu
cmp
addr16
fiaddl
jae
call
cmp
fcmovb
push
ja
aam
mov
adc
mov
add
adc
int3
ret
ret
lds
rol
mov
xor
cmp
sbb
loope
lods
pusha
les
adc
divl
pop
clc
out
leave
mov
lods
decl
clc
jns
xor
popa
mov
stc
ret
sti
popf
adc
cli
push
mov
pop
jp
push
cmp
lret
add
stos
bound
push
incl
fidivrl
sub
adc
out
ret
jle
dec
pop
push
or
jo
or
adc
int3
mov
cld
dec
cld
push
dec
sub
pusha
lea
add
mov
sbb
inc
ret
cwtl
jle
ljmp
loope
sbb
mov
mov
sbb
loopne
mov
xchg
jecxz
jmp
ljmp
mov
adc
iret
scas
popf
test
mov
mov
incb
jb
idivb
rcrl
lock
xchg
push
adcb
jae
enter
dec
jg
mov
inc
cmp
mov
xchg
mov
push
call
push
and
mov
xchg
or
add
hlt
lods
imulb
loopne
xchg
dec
adc
mov
lcall
sbbb
sbb
cmpsb
pop
das
xchg
stos
xchg
cli
jno
cmp
data16
int3
rcr
sar
scas
and
or
xchg
repz
inc
xor
mov
push
xor
mov
enter
push
mov
imul
adc
imul
ret
outsl
mov
xor
les
jae
xor
rorb
inc
lods
mov
mov
daa
dec
fsts
cmpsb
outsb
xor
cld
jg
sub
into
lahf
dec
stos
jle
pop
lock
incl
dec
ds
lock
pop
push
sub
jl
call
bound
sub
mov
sub
push
inc
push
mov
cmp
cmp
outsl
dec
xchg
inc
fimuls
cmpsb
fwait
mov
jb
scas
mov
rclb
scas
mov
loop
test
mov
or
mov
add
push
adc
mov
jae
jo
aad
sti
cmp
faddp
adc
aam
sti
adc
in
ljmp
pusha
out
sub
jmp
and
sbb
adc
mov
cmp
addr16
push
orb
stos
jmp
mov
bnd
ret
mov
push
mov
and
dec
js
mov
inc
dec
pop
dec
repz
mov
loope
pop
cmp
push
pop
cld
xchg
fwait
cwtl
lea
lcall
xor
aam
aam
push
sbb
and
mov
into
mov
mov
inc
je
sbb
xchg
std
mov
jg
dec
sbb
xchg
lods
xchg
adc
loop
pop
out
or
pushf
adc
loop
ljmp
jnp
dec
cmp
mov
mov
mov
lcall
mov
out
adc
and
fistps
sahf
addr16
mov
inc
mov
jg
pushl
je
insb
hlt
out
jae
clc
jg
test
and
ljmp
and
icebp
fmul
int
jno
mov
out
push
or
sar
pop
add
dec
inc
sub
sub
adc
pop
and
or
sti
pusha
push
js
jbe
or
pop
jge
adc
cmpb
cmp
mov
pop
ret
and
add
mov
adcb
out
ss
xor
lahf
rclb
push
sub
pushl
bound
ds
mov
mov
sbb
dec
ret
xchg
dec
jb
ds
push
hlt
inc
or
std
cmpsl
and
inc
clc
call
ficoms
pop
test
mov
loopne
add
scas
inc
mov
pushl
daa
add
mov
aas
add
mov
sbb
pushf
ja
int3
push
sti
cmpl
adcl
sub
cwtl
cmp
add
cs
sahf
cltd
js
rcr
push
lods
push
cmp
jae
inc
jge
xchg
xchg
cmc
outsl
je
mov
pop
stos
loop
mov
out
scas
js
sar
mov
jp
mov
cmp
into
decl
sub
insl
xlat
sarl
and
jecxz
dec
dec
and
mov
stos
call
push
adc
cli
scas
fcmovnbe
int
and
or
inc
popf
or
xchg
ret
and
ljmp
push
xor
fcmovb
cwtl
xchg
pop
xor
pushl
jne
cmpsb
test
jp
je
mov
push
popa
cli
int
nop
pop
jp
out
pop
adc
xor
jg
mov
dec
sub
incl
cs
and
dec
mov
xor
adc
jmp
cwtl
stos
mov
jmp
repnz
mov
in
dec
aaa
rcr
std
jg
inc
sub
jnp
and
sub
mov
mov
pushl
loope
pop
xchg
call
adc
cld
sti
test
imul
pop
or
fcomip
lret
fwait
cmp
rolb
push
fstpl
addr16
call
mov
xchg
adc
pop
daa
cld
push
push
fistl
xchg
push
rcr
xlat
fpatan
cmp
mov
push
lock
shlb
das
mov
sub
adc
and
in
cmp
mov
jmp
call
and
dec
das
pusha
aaa
push
into
scas
cmpsl
pop
cmp
or
jecxz
mov
test
pop
lcall
inc
mov
in
test
movsl
pop
cmpsb
cmpsb
cmp
and
stos
jge
sbb
lcall
ret
js
mov
daa
adc
rol
xchg
test
add
add
loope
test
popa
pushf
cmpsl
leave
jne
pop
adc
test
orw
cmp
jge
in
mov
adc
out
xchg
daa
inc
push
out
shl
leave
xor
ljmp
and
jnp
or
mov
pop
lods
ljmp
popa
scas
test
stos
inc
and
push
loop
inc
ljmp
divl
test
fnstsw
xchg
push
cmp
into
es
loope
stos
mov
adc
dec
outsb
shrb
stos
outsl
aaa
mov
cmp
nop
xlat
in
add
mov
cmpsl
in
insl
pop
sar
mov
and
push
mov
sbb
mov
inc
decl
pushf
jp
aam
das
icebp
mov
add
xchg
loope
shrl
mov
subb
cltd
insb
cmpsb
jge
sahf
push
clc
bound
xchg
lret
xchg
pop
adc
xchg
cmc
lods
les
aam
xlat
mov
jg
mov
loop
mov
fs
jge
jle
and
cltd
push
mov
decl
in
push
lea
test
sub
jle
xor
daa
mov
stos
add
cmpsb
push
push
in
outsb
roll
int3
push
jmp
ret
movsb
aad
push
out
enter
inc
jns
outsl
inc
jnp
inc
sbb
fimuls
lock
adc
mov
rol
mov
je
jg
test
arpl
ss
adc
dec
mov
cltd
bound
and
out
jo
neg
mov
mov
mov
jne
mov
cmc
xchg
arpl
sti
aad
clc
decl
xor
les
dec
xor
fs
sbb
pop
inc
jne
rorb
jnp
inc
cltd
fisttps
outsl
add
push
push
int3
lcall
out
and
roll
mov
fistpl
leave
lret
xor
test
mov
lock
xchg
and
mov
stos
mov
xchg
jl
cltd
jle
test
sbb
xchg
mov
push
jmp
jno
xchg
in
int3
inc
imul
xor
xchg
imul
add
out
jno
cmp
aaa
ljmp
push
dec
cs
adc
int
das
fidivs
clc
cmc
add
outsb
aas
icebp
adc
xor
jno
lods
fildl
push
dec
mov
call
ret
mov
inc
push
insl
idiv
call
mov
jl
ss
pushf
jnp
imul
push
repz
cmpsb
imul
les
loopne
mov
je
das
in
xlat
shlb
mov
in
rcl
mov
push
mov
or
inc
jns
cmpsl
jnp
sbb
add
test
xlat
sbb
add
add
fbld
xor
or
test
fnstsw
ret
sub
mulps
xor
call
jmp
lret
xchg
dec
outsl
fstl
lods
insl
inc
imul
push
inc
insb
sbb
pop
sbb
test
stos
xchg
andl
insl
push
sub
pop
lcall
cld
mov
xor
sbb
les
outsl
dec
sub
icebp
aam
bound
jbe
sub
btr
push
lock
outsb
movsl
cmp
cli
shll
test
xchg
and
mov
idiv
mov
stos
cltd
test
sbb
div
loopne
jle
jb
mov
sbb
dec
cld
lret
cmc
inc
dec
cld
jp
xchg
pop
stos
icebp
pop
sti
outsb
inc
xor
mov
inc
clc
clc
lcall
jecxz
sahf
mov
ret
mov
popa
xor
ficoms
std
pushl
xor
mov
push
cli
lcall
outsl
or
xor
add
ret
pop
lds
cmc
xchg
popa
pop
clc
outsl
hlt
xchg
jp
dec
jmp
mov
scas
out
ljmp
or
std
jl
mov
mov
lahf
jle
push
push
jg
nop
add
jne
sub
mov
call
and
jns
push
push
and
dec
jmp
lds
and
pusha
fsubrs
stos
ja
pushf
in
call
pushf
jmp
fistpll
ret
mov
fiaddl
add
mov
movsl
aaa
cli
dec
mov
sbb
cmp
out
or
inc
cmp
int
sti
int3
cltd
js
inc
shll
pop
lcall
filds
pop
sub
stc
mov
mov
cs
add
ja
and
orl
sbb
push
shrl
push
sti
push
dec
loopne
scas
bound
test
sub
lock
fdivrs
sbb
leave
xlat
xor
mov
testl
add
out
mov
sbb
rcll
jmp
add
repnz
lret
clc
nop
ret
mov
push
das
hlt
shll
cwtl
xor
in
lods
jge
leave
sub
aaa
call
xchg
jo
push
xor
out
rorb
loopne
mov
outsl
sub
or
fxch
lods
inc
and
xor
stc
cli
loope
mov
fcmovu
cli
decl
mov
jo
loope
lds
pushf
sbb
mov
mov
test
add
in
push
inc
clts
lcall
push
xor
jle
stos
push
in
mov
cli
aam
adc
cltd
xchg
sub
and
lret
lcall
cld
mov
sub
call
mov
inc
and
leave
out
insb
push
aas
fnstenv
push
inc
sti
mov
cld
mov
aam
xchg
js
mov
or
xchg
and
addr16
cmp
repz
mov
jbe
mov
sub
iret
scas
out
cli
lods
mov
mov
mov
dec
mov
shll
push
sub
mov
call
aas
mov
ret
daa
out
filds
std
pop
ljmp
mov
or
xor
lods
cmpl
int3
ficoml
mov
cmp
inc
ds
leave
in
rcl
outsb
aaa
cli
outsl
lods
add
jmp
jnp
dec
cmp
popf
shrl
mov
mov
insl
out
mov
dec
inc
cmp
adc
incl
jmp
push
das
push
les
adc
loop
jg
jmp
push
cmc
clc
pop
xchg
repz
mov
mov
mov
cmp
std
fadd
stos
lods
movsb
adc
push
add
scas
push
or
mov
out
out
jnp
decl
in
sahf
gs
xchg
rorb
jne
mov
add
pop
clc
shrl
add
popa
xor
fadds
xchg
lods
sbb
sub
ljmp
fbld
div
jecxz
ror
cmpsl
jb
mov
and
cmp
adc
call
leave
testb
imul
inc
das
lock
repnz
xchg
adcl
je
or
push
jg
andl
sahf
sahf
xchg
pop
and
cmc
cmp
push
mov
add
mov
frstor
pop
cmp
dec
dec
cmp
out
in
ror
jne
hlt
lods
xchg
add
adc
aas
loop
mov
and
xor
jo
lret
xor
fistpl
test
lcall
int
or
and
xchg
gs
pop
loopne
adc
mov
das
sbb
jb
hlt
in
aam
inc
lcall
ja
add
test
mov
cmc
ret
push
mov
lock
out
add
fwait
add
cld
inc
cmp
mov
lods
mov
push
xor
sub
shl
push
imul
inc
mov
incl
jno
xchg
pusha
sbb
pop
sub
sub
lock
pushl
xor
lahf
pop
and
mov
ja
push
push
and
ja
cld
push
rcrb
or
xchg
xchg
enter
int3
stos
jecxz
or
clc
xchg
clc
out
mov
lcall
popw
mov
ljmp
push
add
or
scas
jl
aas
push
dec
adc
jns
mov
clc
pushl
decb
test
dec
mov
and
popa
insb
xor
xor
test
and
mov
imul
sbb
cs
jnp
cli
decl
xchg
mov
out
pop
sbb
lret
xchg
push
pop
adc
jg
gs
or
ja
mov
jb
inc
faddl
ljmp
mov
xchg
nop
jbe
and
ja
das
cld
cmc
mov
lret
ljmp
pop
cmc
xlat
pusha
pop
sahf
fwait
mov
pop
adc
loopne
clc
xchg
mov
fistpll
push
mov
lds
sti
pushf
out
call
movsb
popf
test
pop
fs
rcll
sub
mov
mov
jge
cwtl
cmp
and
cmp
rcrb
hlt
mov
or
mov
aaa
fcmovbe
aam
jle
out
bound
loopne
shrl
jnp
and
push
loope
mov
mov
sub
mov
iret
movsl
cmpsb
jae
call
sbb
fisubs
sti
les
cmc
mov
pop
dec
add
test
fnstsw
xor
jmp
pop
pop
andb
pop
inc
aaa
mov
inc
and
sbb
lds
stos
push
test
adc
dec
ficompl
jo
mov
dec
jl
movsb
adc
cli
pop
push
pop
sub
mov
outsb
pop
push
and
bnd
cmpsb
xlat
test
ss
or
push
dec
aaa
out
mov
js
adc
add
pop
clc
loop
cld
adc
jmp
dec
jge
push
inc
sbb
test
scas
jnp
dec
inc
jbe
push
jmp
frstor
pushl
sub
lock
lret
mov
popa
mov
rcrl
mov
fs
fdivrl
xchg
dec
mov
out
add
rcrl
icebp
out
rcl
lea
test
ret
xchg
mov
mov
xorl
ret
mov
jl
push
ss
mov
test
or
sti
loopne
das
push
xor
mov
pop
push
add
adc
cmpsl
fdivrs
ljmp
jmp
leave
adcl
clc
mov
add
inc
mov
jo
push
pop
inc
jmp
test
adc
push
push
adc
nop
rcll
call
addr16
ret
dec
adc
std
fidivl
pop
xchg
jmp
jge
push
out
jns
repz
mov
addl
jg
fistpl
aaa
aaa
xor
mov
popa
imul
push
push
or
fcompp
scas
data16
mov
inc
inc
mov
xor
pop
jg
mov
std
out
sub
out
aad
xchg
jg
push
cli
adc
sbb
test
xlat
xor
loop
sbb
add
mov
mov
mov
fucomip
mov
or
pop
shl
add
lds
cmpsl
out
cmpsb
mov
push
and
adc
mov
cmc
jbe
or
add
jecxz
or
mov
das
cld
xchg
pop
mov
icebp
mov
icebp
popa
add
shrb
jmp
add
fnstsw
adc
sahf
mov
mov
jb
fildll
nop
xchg
cmp
xchg
call
mov
jae
mov
sub
sub
filds
orb
cmp
inc
jg
shll
out
imul
jl
or
inc
add
jnp
std
push
stos
adc
bnd
inc
shr
clc
outsl
jmp
fisubl
adcb
xor
ret
movsb
jne
jnp
ljmp
clc
idiv
jg
in
roll
aaa
lds
jmp
pop
iret
out
pop
xchg
jg
adcl
push
sti
hlt
iret
imul
mov
das
jno
stos
incl
xchg
sub
aad
addr16
dec
insl
sbb
pusha
mov
lock
test
mov
into
call
xchg
rclb
js
mov
cmp
decl
mov
popf
aam
cli
add
adc
outsl
cld
das
hlt
pop
pop
dec
dec
cli
mov
xchg
xchg
decl
push
decl
jno
cmp
ret
call
sub
xchg
incl
shll
sub
mov
stos
movsl
mov
jmp
stos
xchg
shr
adcb
out
mov
fistps
sbb
int3
cmpsl
fcmovu
lods
mov
clc
mov
and
push
fcomps
out
fwait
xor
jge
jge
arpl
mov
shrb
sbb
lret
xor
mov
addr16
ljmp
std
loop
in
leave
je
leave
mov
cmp
mov
es
xor
sbb
mov
xor
xor
lods
pusha
mov
lock
xor
lods
call
mov
jmp
pusha
push
adc
loop
sbb
decl
movsl
hlt
jp
arpl
pop
daa
cli
icebp
test
in
lds
movb
or
lret
inc
sbb
lods
push
loopne
and
call
cmpsb
das
icebp
jg
mov
pop
push
aaa
xor
or
or
in
nop
cmp
clc
jg
int
jge
push
fs
push
icebp
ret
xor
fcmovnb
aaa
mov
divl
movsb
mov
mov
xor
popa
inc
inc
aaa
cld
das
bound
jmp
jnp
out
mov
xrelease
jg
call
adc
mov
fs
insb
dec
repz
shlb
int3
pop
sub
mov
test
scas
xchg
aas
pop
or
mov
lahf
push
cmp
dec
jo
in
or
mov
aaa
ljmp
dec
inc
ja
push
ja
ja
inc
add
das
and
jmp
movsl
ret
ljmp
sar
mov
adc
scas
xchg
sbb
fsts
cwtl
subl
cmp
fxch
mov
fidivrl
out
ljmp
aam
fimuls
out
jg
sub
pop
dec
aaa
imul
xchg
frstor
jge
mov
push
fildll
lock
xchg
mov
frstor
enter
pusha
scas
mov
call
movsb
test
or
gs
jbe
mov
cmp
std
out
mov
test
test
or
jecxz
loope
mov
into
xchg
dec
add
pop
mov
mov
adc
shlb
je
cmp
add
pushl
call
mov
aaa
push
and
mov
mov
adc
xor
mov
jmp
lea
mov
in
xchg
iret
and
aaa
ficomps
adc
jmp
scas
fcoml
xlat
incl
sti
fdiv
xor
jmp
out
orb
js
cwtl
sub
mov
insb
inc
push
or
inc
cmp
sahf
push
imul
ljmp
add
jge
notl
adc
rcrl
lcall
mov
inc
jp
or
xlat
lods
inc
inc
shlb
mov
xchg
imul
pop
add
aam
mov
ljmp
fdivs
lock
decl
addb
nop
adc
xlat
adcb
je
push
dec
adc
pop
loopne
cli
shll
test
mov
dec
mov
orl
fcoms
notb
inc
in
jns
push
adc
jl
jb
enter
sbb
call
test
int3
rcr
xchg
jge
cmp
lahf
sbb
push
int
jno
mov
daa
push
adc
cmpsl
dec
adc
cltd
ljmp
sbb
dec
lcall
fdivp
push
orb
js
lock
sub
das
sarl
or
rcll
mov
ljmp
jge
test
aam
scas
mov
xchg
outsb
push
push
ljmp
push
je
xchg
jbe
test
scas
inc
sub
push
jmp
clc
lcall
mov
fst
int
mov
push
sbb
sti
mov
imul
sbb
mov
rcrl
dec
sbb
fcmovu
jle
arpl
xchg
sub
add
addr16
pop
jl
xchg
daa
rol
sti
push
hlt
xchg
xchg
popf
stc
call
xchg
outsl
dec
dec
shrb
fadd
mov
jg
mov
in
push
dec
loope
mov
cmp
inc
clc
loope
push
out
xor
jl
out
mov
push
mov
mov
aam
xchg
xchg
movsl
dec
add
incl
sti
xor
jo
push
gs
adcb
push
int
pop
clc
lcall
stc
call
and
push
mov
call
cmp
pop
push
hlt
push
das
cmp
cltd
int
dec
jle
cmp
xchg
jnp
jecxz
inc
mov
xchg
cvtps2pi
andl
jg
cmpsl
fcoms
lods
xlat
cmp
mov
out
lret
clc
stc
pop
clc
outsl
sub
jo
xor
mov
in
push
or
and
xlat
jno
dec
pop
cmc
jne
pop
std
gs
loopne
fists
jbe
xor
jmp
in
and
test
sub
rcll
sar
xchg
mov
cmc
mov
mov
call
outsl
push
mov
inc
lcall
call
pop
clc
incl
xchg
ds
or
dec
lcall
jg
call
pop
jmp
add
lds
xor
lods
inc
call
clc
push
pop
repz
adc
jbe,pn
sbb
mov
and
mov
mov
aaa
daa
adc
mov
jecxz
inc
or
lea
sbb
icebp
sub
fwait
jb
clc
mov
adc
inc
xor
jg
movsl
mov
rcll
add
mov
decl
lret
mov
jns
xor
xchg
xor
pop
mov
jns
mov
inc
and
out
push
jbe
pop
adc
call
loope
idivb
pop
push
pop
daa
pusha
jg
ja
push
call
push
add
ss
insb
mov
pop
cmp
push
movsl
cmp
mov
stos
fcom
jl
fs
mov
fdivrl
cmp
xlat
cmp
dec
mov
sbb
pusha
jmp
jo
repnz
stos
adc
cmp
loopne
test
das
xchg
xchg
adc
lret
lret
and
jmp
mov
pop
mov
fidivl
in
dec
sbb
mov
jmp
mov
sub
test
decl
pop
mov
mov
cltd
pop
aaa
mov
pushl
jecxz
mov
pop
cmp
jmp
loop
xchg
pop
mov
mov
pop
loope
mov
add
orl
cmc
outsl
icebp
and
inc
mov
cmpsl
stos
push
decl
lret
rcrb
std
fwait
pop
adc
cmp
cmp
mov
push
mov
or
lds
mov
cmp
cmpsb
sbb
cmpsl
jge
shrl
mov
xchg
adc
mov
dec
sar
push
mov
dec
mov
adc
imul
xchg
cwtl
jno
push
incl
incl
sbb
insb
inc
push
in
sti
into
add
std
sbb
pushl
ror
out
out
mov
cmp
cwtl
pop
inc
sub
int3
mov
in
ljmp
sbb
mov
mov
int
sbb
mov
push
test
outsl
jge
call
scas
xor
loop
push
cmp
stc
jg
notb
fdivrl
adc
int3
push
push
inc
or
movsl
mov
sar
push
mov
adc
pop
hlt
pop
pop
ret
imul
outsl
les
jg
testb
pop
push
pop
push
pop
pop
add
rolb
sub
xchg
ljmp
dec
xchg
jmp
les
popf
mov
jl
or
pop
std
mov
mov
sub
in
xchg
adc
lcall
or
mov
pop
add
outsl
sub
std
test
pop
jb
sub
leave
aaa
cmpsl
cmp
mov
hlt
sbb
pop
fwait
push
je
xor
icebp
das
mov
lcall
xchg
int3
add
js
mov
out
icebp
cli
and
in
sbb
aad
lods
mov
out
imul
jg
mov
ja
adc
xor
pop
ud2
inc
sub
movsl
fbld
inc
cmpps
sahf
inc
sbb
inc
mov
ljmp
repnz
shll
mov
mov
push
sub
or
jg
ds
scas
cmp
or
int3
dec
dec
mov
clc
outsl
jno
cmc
and
das
scas
loope
cwtl
mov
jnp
and
leave
xchg
jbe
pop
inc
ds
push
cld
jnp
fisttpll
pusha
push
ss
and
or
add
add
hlt
cltd
xor
loopne
dec
xor
mov
push
stos
sar
pop
sub
test
popf
repz
aad
ret
cwtl
jne
nop
sbb
pop
ljmp
lahf
js
mov
lods
xorb
mov
cmp
xchg
insl
push
lods
js
xor
fistpll
js
std
dec
and
mov
sar
push
lea
fdivp
lret
fcompl
out
andl
lods
ljmp
mov
mov
insl
aam
testb
or
int
sbb
rcrl
cltd
jg
mulb
adc
fcmovnbe
ret
sbb
orl
out
mov
jg
jle
xchg
ret
neg
adc
or
and
out
adc
loop
aad
call
adc
js
sub
aam
cmpsb
test
stc
mov
stc
fnstenv
out
insl
pushf
hlt
jmp
ret
mov
sub
inc
inc
xor
hlt
incl
aas
fsubrs
clc
rol
cltd
pop
dec
scas
cmp
dec
call
lcall
clc
mov
bound
mov
mov
push
es
int3
rcrb
xchg
stos
cmp
jle
fistpll
add
loopne
popf
push
divl
and
loop
popf
xor
lcall
daa
clc
ret
outsb
xorl
int3
mov
int
xchg
bound
insb
or
femms
mov
xchg
nop
scas
call
call
pop
stos
pop
pop
push
in
fisubs
add
and
cld
jg
movsl
cwtl
cmp
icebp
pextrw
aam
lods
popf
mov
sbb
lea
push
xchg
lds
outsl
mov
hlt
into
imul
js
pop
mov
mov
sahf
cmp
and
cmp
mov
fwait
ja
push
testl
xchg
out
xor
movsl
scas
movsl
pop
mov
repnz
es
pusha
add
inc
mov
mov
pushl
outsb
adc
into
jl
loope
stos
adc
jnp
mov
xchg
ljmp
hlt
lcall
test
add
lcall
xor
andl
push
mov
lahf
inc
or
out
data16
inc
push
out
add
mov
adc
mov
xchg
outsl
cmc
call
sub
loope
dec
xchg
data16
xchg
fistpl
and
adc
add
sub
inc
pop
in
pop
popf
dec
repz
or
imul
dec
adc
add
hlt
jg
pop
test
cmp
push
fldt
imul
sub
in
xchg
mov
cli
mov
dec
fdiv
inc
pop
xchg
adc
lds
cmp
lcall
dec
xor
and
stc
ret
mov
repnz
mov
add
inc
sub
add
sub
in
mov
into
fwait
repz
hlt
xor
shrb
nop
outsl
push
cmc
repnz
ljmp
aaa
push
insb
cmp
daa
ret
pop
and
fs
cs
adc
mov
imul
jb
push
aam
pinsrw
jl
ret
leave
and
adc
out
mov
mov
mov
jecxz
pushf
pop
adc
neg
sahf
test
sbb
pop
mov
cmp
pop
sbb
push
jg
repnz
adc
pop
push
mov
pop
ljmp
jg
and
hlt
cmc
fcmovb
pusha
pop
pop
dec
and
das
incl
mov
mov
dec
or
mov
sub
or
mov
push
fdivrl
push
movb
sti
jmp
idivl
insl
bound
xor
in
fstpt
or
add
lods
sbb
insl
jo
lock
repnz
enter
stc
es
imul
ljmp
cwtl
xchg
jge
sbb
xchg
popa
cmp
loope
insl
pop
call
push
adc
sbb
loopne
xchg
xchg
cwtl
xchg
mov
ja
push
push
pop
ljmp
add
or
push
inc
aad
ficomps
pushf
lock
pushl
loope
lock
std
std
xchg
xchg
insl
shlb
sbb
ret
jg
call
fcoml
pushf
mov
pop
xorb
lret
loopne
jg
lods
jge
pop
in
adc
icebp
cwtl
dec
inc
pop
and
aam
add
jecxz
and
loope
es
cmpsl
cmp
in
add
and
data16
mov
push
xchg
sbb
cmp
mov
pop
insb
adc
inc
insl
mov
push
lret
inc
xchg
adc
and
lahf
xchg
add
xor
jbe
in
enter
and
mov
fldenv
adc
test
testl
in
jg
inc
call
xchg
test
sbb
push
cmp
pop
push
call
imul
ret
jo
xor
lret
dec
lods
and
jg
gs
adc
fxam
loope
dec
inc
jg
cld
and
aam
pop
jmp
or
sub
dec
sbb
int
outsl
decb
movsb
inc
cmpsb
fs
mulb
lods
cmpsl
mov
test
ret
jg
pop
fmuls
and
bound
ret
ja
pop
mov
and
icebp
lret
jns
or
mov
dec
insl
jge
push
call
dec
fsubs
insl
in
push
xchg
mov
stc
add
insl
fs
out
mov
push
lods
test
xchg
cwtl
cmpsb
jb
dec
xchg
inc
int3
adc
dec
adcl
jg
jge
lret
push
mov
lds
and
ja
int
pushf
pop
jge
mov
in
dec
jno
pop
push
lret
insl
aad
adc
test
fstpl
add
adc
push
arpl
inc
cmp
in
sbb
in
pop
fiaddl
notl
ret
jl
pop
fdivr
loope
dec
sub
pop
nop
dec
ja
push
cld
fildll
pop
jnp
in
enter
lret
shrl
adc
mov
fstpl
add
pushf
hlt
mov
jb
pushl
mov
pop
mov
rolb
xchg
out
mov
xor
jmp
ret
jbe
scas
sub
ret
and
test
xchg
pop
aaa
add
jns
in
fmuls
aaa
cs
enter
and
test
xchg
xchg
inc
mov
add
xor
and
pusha
pop
fisubs
into
cwtl
loope
in
and
test
aam
daa
xchg
adc
insb
cld
jg
jae
jle
mov
or
or
pop
pop
cld
mov
mov
xor
dec
nop
and
aam
push
sar
jg
out
shrl
cmpsb
pop
test
inc
mov
roll
jg
je
push
xchg
mov
in
outsl
lods
je
xor
leave
call
or
roll
clc
pushl
subl
push
dec
int3
xor
lret
insl
sub
iret
lret
imul
scas
or
dec
ljmp
fistpl
aam
pop
ret
adc
test
std
or
ret
add
leave
xchg
inc
notb
lods
in
pushf
in
xchg
mov
roll
push
fldt
add
mov
mov
dec
mov
cld
shl
repnz
sub
test
sub
pop
push
int3
repz
and
notb
test
int
inc
adc
inc
add
outsl
mov
insl
mov
push
pop
add
dec
mov
shrb
fisubrl
adc
fisubrs
sub
ret
push
jne
push
mov
mov
lds
pushl
fidivrl
loope
cmp
frstor
fs
mov
xchg
imul
fidivl
movsb
mov
fiaddl
mov
testl
pop
fimuls
xchg
stc
add
dec
cmpsb
hlt
and
idiv
fbstp
cmc
cltd
call
sbb
mov
cs
pop
add
mov
fmull
ret
pop
push
pusha
and
pop
fsub
and
adc
jl
loope
cmp
and
pop
loop
push
mov
insb
nop
push
gs
movsb
lods
in
dec
stos
mov
addr16
mov
xchg
out
pop
out
ljmp
jne
call
iret
aas
or
movsb
push
aad
jns
inc
testl
iret
out
jg
pop
jbe
cmpsb
xor
xchg
cmpsb
xor
shrl
loope
xor
das
ljmp
mov
dec
mov
insl
xchg
pusha
inc
fidivl
out
sub
mov
daa
lods
pop
cld
push
rsm
xorl
iret
in
pusha
pop
loope
push
xchg
dec
call
mov
cli
and
mov
or
mov
inc
mov
mov
imul
in
xor
mov
cmp
or
xchg
out
aaa
mov
pop
test
sub
pop
cld
sbb
orl
mov
mov
nop
lds
sub
pusha
pop
out
jle
test
nop
outsb
mov
push
push
sahf
push
enter
shlb
xchg
call
int
call
aaa
xchg
cmp
paddusw
lret
mov
mov
imul
cmp
stos
ret
pop
cld
fbld
aas
addl
xor
push
rcrb
pop
add
rcr
push
mov
xor
cs
in
fdivrl
jb
aaa
jl
xchg
pop
fldz
stc
jle
je
aas
lret
mov
outsl
push
decl
and
adc
into
outsb
mov
cs
push
mov
das
call
mov
inc
stos
into
xlat
sbb
in
movq
decl
push
repz
pop
test
push
push
lret
dec
clc
mov
jmp
or
das
ds
or
push
je
repnz
incl
rcrl
and
les
cmp
jne
sbb
inc
mov
cltd
push
fidivl
test
cli
dec
stos
popa
ret
aaa
sbb
lret
out
jb
dec
incl
xchg
fldl
xchg
lods
idivb
inc
pop
pusha
scas
scas
aad
cld
das
fists
test
scas
imul
mov
lret
data16
mov
pop
sahf
lret
in
cmc
shl
jae
xchg
and
and
vmovupd
mov
out
clc
dec
and
shlb
into
into
cmpsl
mov
and
cmc
test
pop
or
push
cmpsb
mov
gs
sbb
in
xchg
fnop
push
mov
rcrl
jg
pop
inc
daa
pop
push
rcll
push
fists
das
mov
mov
mov
outsb
cmp
xchg
xor
frstor
outsl
jno
dec
out
jg
jbe
sahf
outsb
mov
movsb
stos
jmp
arpl
ja
leave
mov
pop
mov
movsb
or
xchg
out
icebp
loopne
cmpsb
ficomps
lds
xchg
jg
lcall
test
movsl
lcall
push
les
mov
lcall
aas
in
cs
adc
mov
dec
xor
jl
je
das
insl
push
mov
dec
cwtl
jbe
add
push
aas
jle
cmp
shll
jmp
mov
jecxz
int
cmc
call
nop
push
add
gs
ds
jbe
adc
leave
out
add
outsb
add
xor
test
mov
mov
add
add
loopne
xor
xor
xor
xor
xor
repnz
xor
call
pushl
or
sbb
pop
xor
movsl
xor
xor
mov
mov
xor
shlb
xor
xor
xor
mov
lcall
push
sti
xor
xor
xor
das
ss
arpl
push
call
test
ss
ss
aaa
dec
aaa
ljmp
aaa
fwait
aaa
int3
jle
hlt
aaa
std
aaa
or
cmp
cmp
je
mov
mov
cmp
cmp
cmp
cmpl
cmp
lds
into
cmp
cmp
call
cmp
mov
ret
cmp
jo
jle
scas
cmp
cmp
cmp
cmp
cmp
cmp
pop
divl
cmp
fistps
mov
std
cmp
cmp
push
cmp
jg
mov
mov
cmp
cmp
aaa
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
stc
cmp
sub
aaa
ds
cltd
add
ds
aas
ja
xchg
aas
fwait
aas
cmpsb
aas
stos
aas
fistpll
in
add
push
jg
mov
xor
or
xor
xor
pushl
mov
xor
xor
xor
xlat
xor
lcall
sub
inc
ss
ss
ss
jmp
jp
call
aaa
adc
aaa
add
push
cmp
cmp
cmp
xchg
xchg
cmp
cmp
call
cmp
cmp
cmp
cmp
dec
cmp
outsb
cmp
jle
decl
movsb
cmp
cmp
cmp
cmp
cmp
cmp
pusha
cmp
jae
jp
cmpl
loopne
nop
cmp
cmp
cmp
cmp
cmp
push
cwtl
cmp
cmp
cmp
sub
cmp
js
cmpl
ds
jg
cmp
push
ds
jge,pt
mov
in
ds
sarb
ds
jl
fwait
lods
sti
aas
test
mov
lods
or
mov
xor
xor
xor
xor
xor
cmp
hlt
ss
outsl
aaa
jbe
mov
jg
or
aaa
xlat
int
cmp
cmp
pop
cmp
cwtl
cmp
cmp
cmp
sub
dec
cmp
les
iret
cmp
cmp
cmp
cmp
lcall
decl
inc
cmp
inc
cmp
cmp
data16
cmp
cmp
cmp
fstpt
cmp
cmp
cmp
cmp
cmp
fnstsw
sbb
mov
mov
aas
cmp
xchg
mov
aas
scas
aas
mov
xlat
aas
mov
stos
and
push
xor
sub
ljmp
aaa
cmp
cmp
dec
xor
xor
decl
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
pushl
xor
xor
xor
dec
xor
xlat
xor
sarb
pop
ss
repz
push
dec
cmp
lcall
ljmp
cmp
cmp
or
adc
popl
dec
cmp
incl
lea
sub
pop
cmp
out
cmp
call
call
aas
sbb
and
sub
mov
cmp
inc
aas
dec
aas
pop
aas
jge
xchg
aas
pushf
jg
aas
lods
aas
mov
aas
aam
xor
cmp
jg
xchg
xor
icebp
inc
xor
xor
xor
cmp
xor
xor
xor
xor
punpckhbw
jl
xchg
xor
test
mov
xor
xor
and
fwait
rdpmc
lret
cld
pushl
jmp
and
cmp
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
ja
xorl
ss
pushl
jbe
xorl
ss
mov
ss
jmp
divb
sti
or
adc
sub
aaa
cld
aaa
inc
aaa
push
aaa
pop
jecxz
aaa
stos
aaa
mov
leave
aaa
shll
jecxz
xor
aaa
repnz
and
xor
dec
cmp
testl
in
cmp
cmp
cmp
cmp
incb
dec
cmp
jbe
mov
mov
daa
cmp
cmp
inc
repz
cmp
xchg
cmp
cmp
cmp
cmp
dec
pop
fbstp
cmp
jne
xchg
sub
mov
dec
sub
loopne
mov
ds
lahf
pop
push
or
sti
inc
mov
xor
sahf
xor
sbb
pop
xor
insb
jge
xor
repnz
inc
cmp
xchg
cmp
cmp
ljmp
cld
mov
leave
cmp
cmp
cmp
mov
lret
cmp
ds
lods
ds
mov
ds
out
add
or
sbb
es
cmp
inc
lcall
aas
dec
aas
pop
aas
popa
aas
imul
jge
adc
mov
jg
sub
aas
jecxz
cmc
aas
inc
push
and
xor
xor
xor
jecxz
icebp
pushl
dec
xor
imul
mov
lret
xor
popf
pop
dec
mov
ljmp
push
mov
dec
xor
outsl
dec
jg
xor
xor
xor
jae
and
push
xor
push
lcall
xor
jae
xorl
mov
xor
xor
pop
clc
cmc
xor
xor
icebp
xor
jno
in
or
xor
sbb
xor
xor
add
pop
xor
xor
xor
dec
aam
jp
xor
mov
aad
lock
aas
pop
pusha
mov
aaa
jle
cmp
cmp
mov
jnp
xchg
cmp
cmp
push
scas
cmp
les
cmp
cmp
in
cmp
cmp
incl
xor
cmp
cmp
xor
imul
cmp
lcall
ds
ds
outsl
aas
jnp
cmpb
scas
mov
sbb
out
and
pusha
js
lock
xor
xor
pusha
and
xor
xchg
mov
or
pop
xor
jno
jl
xchg
xor
xor
mov
or
xor
xor
xchg
xor
add
or
push
xor
call
jmp
xor
xor
xor
adc
push
xor
pop
xor
jne
jp
xor
dec
xorb
jo
or
pusha
xchg
or
pop
cmp
cmp
xor
xor
add
inc
adc
push
push
leave
inc
fdivrs
mov
sbb
sahf
fdivl
jnp
rcrl
paddd
popf
fstps
cmp
cltd
ds
xor
out
aas
lret
xchg
cmp
out
jl
sbb
mov
or
add
add
mov
and
inc
daa
pop
and
add
in
mov
ret
push
pop
xor
mov
or
add
inc
aaa
loopne
faddl
mov
js
pop
testb
add
and
or
xor
fs
and
shll
or
or
xchg
insb
add
and
jb
push
ss
add
jae
daa
inc
test
adc
mov
shlb
inc
add
sbb
repnz
inc
and
inc
and
ds
pop
add
jl
and
push
add
sub
add
lock
cmpsl
in
inc
and
add
stos
sbb
jns
mov
mov
push
and
add
rcll
cld
and
test
notb
or
inc
and
adc
pop
pop
push
je
sub
adc
inc
dec
xor
enter
inc
and
or
das
in
repnz
adc
repnz
enter
inc
and
and
sub
and
jl
sbb
sbb
repnz
inc
xchg
popa
mov
and
in
inc
adc
add
adc
push
call
bnd
popa
rclb
add
sarl
insl
push
data16
add
jns
push
pop
or
xor
adc
and
and
push
je
push
out
popa
jns
dec
dec
add
add
add
in
test
xor
xor
and
leave
in
inc
and
xor
loopne
inc
jb
xor
enter
mov
xchg
lea
push
inc
push
mov
ss
fadd
notb
mov
aaa
and
push
inc
adc
and
mov
adc
add
nop
iret
in
xor
xchg
iret
add
xor
adc
and
ficoml
add
nop
cmp
repnz
inc
and
nop
cmp
pop
inc
and
mov
mov
sti
inc
out
push
rep
or
jp
pop
push
inc
sahf
pushl
xor
and
jnp
push
adc
jecxz
or
adc
daa
mov
mov
push
aad
mov
pop
leave
or
les
pop
jae
ja
inc
mov
cmp
ret
mov
xchg
call
jl
cmp
jae
test
push
mov
fnstsw
inc
dec
lock
add
push
data16
push
sbb
shr
jae
ja
cmp
pop
pop
push
stc
fisubs
jne
sbb
pusha
or
mov
jno
and
dec
popf
hlt
xor
add
xchg
and
lds
fwait
xor
dec
sub
hlt
mov
and
in
insb
lcall
ja
aaa
cmp
fcmovnb
mov
fistpll
lock
shll
add
loopne
sbb
fsub
mov
ficomps
andl
jnp
lea
xor
pop
and
jns
cli
decb
push
lods
sub
outsb
push
mov
add
add
and
daa
dec
hlt
imul
xor
dec
insl
and
jae
mov
add
insb
das
insb
dec
into
bound
lret
dec
inc
jg
mov
xor
or
rorb
in
loopne
loop
dec
shrl
inc
cwtl
gs
dec
shll
insb
gs
xor
dec
popa
insl
gs
sub
mov
faddl
das
out
aad
fldenv
shl
pop
inc
jns
call
add
cmp
mov
add
cmp
aaa
dec
call
sbb
xchg
call
or
jg
mov
lahf
push
jecxz
add
push
push
mov
fsubr
out
sbb
xchg
inc
push
jmp
mov
leave
pop
inc
push
in
or
test
shrl
outsb
adc
push
push
sbb
dec
sbb
jne
cmpb
sub
clc
mov
or
pop
push
xchg
idivb
ljmp
jns
fsub
xor
lods
popa
imul
xor
sub
dec
xchg
adc
inc
inc
mov
lcall
adc
add
or
sbb
sbb
std
inc
jmp
xchg
jmp
popf
adc
pop
or
mov
xor
enter
push
ds
and
push
std
push
ljmp
lret
je
aad
and
mov
push
push
cmp
repz
add
cmp
jl
dec
sbb
mov
or
and
shrl
lods
add
add
add
fmul
push
mov
mov
mov
flds
popa
cmp
outsl
outsb
gs
fs
xchg
je
gs
aam
mov
insb
xlat
popa
xchg
gs
xchg
ret
jne
arpl
xor
rorl
fnstsw
loope
mov
pop
push
pushf
js
loopne
daa
lret
cs
sti
xor
call
inc
shll
addr16
flds
arpl
mov
and
adc
pop
lcall
dec
leave
mov
cmp
lret
int3
adc
mov
mov
push
into
jp
pushf
xchg
xchg
xchg
rcl
rcl
push
lds
mov
movsb
sub
xor
dec
repz
and
std
aas
push
dec
jb
and
imul
jb
inc
js
mov
jne
add
bound
daa
enter
sbb
dec
xchg
jl
mov
pop
push
xchg
insl
fcoms
sub
add
enter
jp
imul
fmull
or
mov
mov
add
pop
jp
or
cwtl
fldl
push
adc
jae
lcall
push
push
and
jne
movsb
add
mov
sub
sub
call
and
das
mov
inc
and
jmp
mov
insb
js
ds
xchg
sahf
pushf
bound
xchg
xchg
xchg
xchg
and
xchg
nopl
sbb
cwtl
cltd
lcall
pop
xchg
push
adc
enter
lea
je
add
nop
push
inc
mov
xchg
std
pop
xchg
std
xchg
std
xchg
std
in
xchg
and
mov
pop
cs
dec
jnp
js
jo
insb
mov
mov
mov
cmpsb
mov
icebp
add
cmp
mov
jl
inc
rol
add
push
xlat
dec
xor
push
ret
mov
xchg
or
push
or
jns
cmpsb
imul
lcall
adc
push
out
sti
ja
imul
flds
add
dec
xchg
sarb
add
imul
fstpt
xchg
fs
xchg
popa
pop
xchg
mov
outsb
fs
xchg
outsb
gs
or
mov
sub
insb
popa
jne
push
es
mov
push
imul
lcall
push
xchg
js,pn
jb
sub
fildll
js
outsb
mov
lret
outsl
jb
xor
sarb
js
rol
fs
bound
das
out
test
inc
jnp
call
xchg
push
add
psubusw
pop
add
movsb
add
add
fnstcw
in
add
les
es
sub
es
push
in
cmp
scas
jne
rclb
fwait
stos
xchg
test
je
push
mov
cmp
add
and
pop
inc
mov
mov
mov
arpl
dec
pop
das
or
out
sbb
inc
mov
sbb
in
sub
pop
repnz
testl
or
sbb
adc
jne
adc
sbb
repz
arpl
insb
jle
dec
repnz
xchg
push
aam
add
fmuls
push
or
loopne
add
push
sub
mov
les
in
aaa
mov
mov
sbb
add
es
enter
mov
push
inc
repz
data16
add
sbb
sbb
adc
sbb
add
add
add
sbb
adc
dec
mov
rclb
stc
sbb
jg
stos
ss
mov
cmp
cmpsl
lret
pushf
sti
fsubrs
xor
pop
mov
push
stos
js
insb
in
or
or
adc
jg
repz
mov
pop
pop
or
inc
add
neg
sbb
push
jns
sahf
rorb
push
inc
and
roll
xorl
sub
inc
and
cltd
adc
sub
inc
and
and
adc
inc
and
popa
add
mov
add
sub
lret
mov
and
jbe
in
cmp
inc
and
add
cli
movsb
mov
cmpsb
sbb
inc
rclb
pusha
add
add
fs
lcall
fs
out
sbb
adc
sub
mov
pop
jae
sub
mov
or
loope
int
mov
mov
push
pop
cwtl
inc
and
and
adc
cwtl
inc
shll
int3
fidivl
or
mov
jb
inc
and
ss
push
dec
shll
cwtl
lods
ss
shll
or
out
inc
imul
imul
shll
mov
pop
shll
insb
xchg
shll
add
xor
shll
xor
lea
popa
jnp
aaa
or
cwtl
mov
pop
cmp
fdivl
dec
jo
dec
xor
pop
sbb
and
fcmovnb
mov
add
bound
outsl
pop
or
adc
outsl
mov
outsl
jne
mov
adc
outsb
dec
inc
xor
push
push
js
inc
xlat
jle
imul
out
daa
notl
push
dec
jae
push
sub
push
push
sub
sub
dec
sub
jg
push
jne
rorb
add
fdiv
mov
inc
inc
inc
int3
lcall
test
pop
mov
mov
xchg
sbb
cmpsb
mov
inc
enter
push
sbb
test
subl
push
adc
and
pop
xor
rcll
enter
rorl
push
pop
packsswb
sbb
test
sbb
adc
inc
pusha
add
and
mov
dec
and
adc
mov
daa
lods
xchg
jno
movsl
sbb
fdivp
test
push
or
es
outsb
insl
rclb
add
mov
push
addr16
icebp
or
sbb
and
and
sti
mov
push
outsb
jb
and
lods
addl
add
inc
or
pop
test
jno
sub
push
dec
inc
or
inc
test
dec
cmp
adc
sbbl
sub
mov
sbbb
xor
outsl
adc
and
insl
insl
dec
jae
mov
dec
test
add
inc
inc
je
pusha
add
or
pusha
add
popa
add
jns
mov
movsb
testl
mov
ja
sbb
aaa
pop
xchg
mov
add
mov
pop
cld
add
dec
sbb
shll
shll
or
mov
imul
pop
jge
add
add
add
mov
push
addl
rcr
xchg
adc
add
mov
roll
or
mov
push
push
add
pop
push
popa
and
das
adc
pop
lea
jne
call
addl
jg
mov
xchg
add
jo
icebp
adc
clc
mov
in
adc
jne
mov
in
or
add
cmp
lock
subl
or
sbb
addr16
dec
insb
arpl
outsl
jns
jae
jo
out
xor
outsl
pop
jns
pop
and
imul
pop
and
or
btr
icebp
pop
xor
mov
insl
jecxz
in
cmovno
jno
jmp
dec
outsl
sbb
jae
inc
scas
push
mov
add
int
jne
adcb
xor
inc
cwtl
push
add
and
push
push
add
xor
scas
push
in
fistpl
jl
jmp
ret
dec
inc
cmovns
out
dec
mov
jae
fistl
mov
xchg
add
pop
jo
subb
dec
mov
sub
addr16
pop
jecxz
insl
cmp
or
ficomps
jmp
xor
jecxz
insl
scas
jmp
inc
and
xor
jae
xlat
xor
add
movsl
popa
and
inc
add
addr16
jmp
arpl
inc
imul
mov
pop
add
fsubrl
loope
adc
or
jae,pn
push
jb
cmp
fnstenv
dec
imulb
xor
mov
in
je
outsb
xchg
insb
popf
xchg
mov
adc
dec
or
lds
add
jge
addr16
pop
adc
fisubrs
xchg
pop
xor
xor
fucom
mov
sub
fldenv
or
daa
dec
dec
leave
es
or
xchg
loop
arpl
push
daa
jbe
mov
push
test
pcmpeqw
and
je
and
pop
ja
adc
pop
imul
adc
gs
or
cmpsl
xchg
out
add
add
inc
lret
das
push
out
xor
xor
mov
sbb
inc
xor
pusha
call
inc
lea
stos
xor
xor
xor
xor
mov
fwait
xor
xor
mov
cmp
incl
add
xor
xor
xor
pushl
xor
xorb
xor
js
jg
mov
fwait
ss
aaa
xorb
mov
pushf
aaa
mov
cmp
cmp
push
fldenv
sub
cmp
test
cli
cmp
adc
sbb
cmp
lods
mov
cmp
das
mov
insl
cmp
cmp
jne
pop
mov
cmp
dec
xor
call
mov
xor
xor
xor
das
jne
jg
test
mov
lahf
xor
out
xchg
mov
sub
int
fnstenv
call
push
ss
jmp
ss
divb
and
aaa
mov
pushl
mov
lret
cmp
cmp
cmp
cmp
cmp
cmp
or
xor
xor
and
and
adcb
adc
cwtl
mov
adc
mov
push
mov
and
mov
ficompl
in
mov
cmc
push
mov
add
and
push
mov
lods
jge
push
jne
push
andb
add
outsl
fmuls
adc
inc
xor
adc
je
aad
shrl
inc
je
rcl
or
add
jbe
in
int
ds
aas
movlps
inc
push
add
or
dec
mov
adc
pop
xchg
movsb
inc
or
add
adc
add
data16
add
or
rclb
add
add
dec
stos
pushf
je
lcall
push
sbb
addb
dec
push
mov
repz
push
cwtl
sidtl
inc
fdivl
aaa
les
cmp
ss
cmp
inc
add
and
mov
xor
nop
pusha
add
dec
mov
sub
or
in
or
mov
pop
mov
dec
push
les
sbb
adc
bound
pcmpeqd
sbb
mov
or
add
addb
inc
add
incl
add
add
add
popa
add
call
int
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
