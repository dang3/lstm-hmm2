pushl
add
add
rorb
iret
nop
ret
push
mov
sub
xorb
add
inc
lock
movb
repnz
fwait
in
fisttpl
cmc
popa
pop
divb
cs
stc
insb
out
fildll
cli
insb
lea
push
call
rcrb
or
push
je
push
add
sti
out
ss
and
filds
push
push
adc
fistpll
pop
pop
mov
pop
adc
ja
sbb
out
add
insb
sti
mov
push
push
push
push
sbb
push
pushl
jge
out
scas
mov
push
lea
inc
add
push
mov
mov
jne
loope
sub
daa
mov
add
pop
xor
or
rcrb
add
mov
adc
cmp
mov
and
aam
in
mov
mov
mov
or
pusha
pushf
xchg
insb
popf
popa
mov
imul
push
sbb
cld
or
cmpb
pop
push
mov
and
gs
mov
out
outsl
cmp
and
adc
fs
andb
ret
sbb
cwtl
cmp
push
subl
js
mov
out
mov
push
in
pushl
xor
jmp
push
call
mov
mov
mov
push
add
outsl
or
mov
imul
andb
add
push
push
push
cs
popa
sbb
fsubl
clc
add
and
aas
in
outsb
out
cmpl
iret
lods
stos
inc
pop
pop
fcmovnu
out
jmp
push
pop
ret
mov
dec
cld
incl
rorb
lock
aas
pop
pop
pop
leave
ret
lret
sbb
aas
in
shl
add
enter
jbe
inc
enter
add
xor
aas
aaa
and
dec
clc
adc
lea
jl
fdivrl
add
sbb
mov
cmp
out
ds
mov
popf
lock
scas
in
fnstsw
xchg
or
popf
sbb
add
pushf
mov
out
mov
stos
stos
mov
adc
jge
movzwl
std
cs
fistpl
push
lea
add
pop
pop
jbe
out
mov
cmp
inc
adcb
mov
push
adcb
or
cs
je
push
inc
adc
pop
mov
popa
xor
cmp
cmp
fs
and
and
cmpsb
mov
xor
push
jg
pop
mov
test
pop
je
push
jnp
pop
push
orb
mov
ss
push
sbb
aas
add
test
iret
rorb
xor
mov
rcl
aas
rcl
aad
lret
data16
call
ficoml
mov
fnstsw
fimuls
imul
loope
jecxz
cld
sbb
mov
mov
pushl
inc
xor
scas
mov
pop
hlt
aam
and
add
xchg
adc
xor
ljmp
insb
pop
in
in
aas
out
mov
lock
aas
icebp
test
repz
hlt
lcall
idiv
js
cli
in
xchg
insb
sti
fs
jmp
jmp
push
sub
and
jne
test
inc
pop
push
push
add
adc
xchg
sarb
adc
in
movb
sbb
fnstcw
fistl
or
inc
fdiv
gs
and
in
add
stc
ror
add
or
in
out
lods
addl
inc
pop
push
out
sti
jecxz
xor
add
pop
jnp
in
js
sarb
jmp
cmp
and
push
adc
cmp
pop
shll
inc
pop
dec
shll
inc
cs
push
shll
lea
cmpsb
fldcw
fucomip
aas
inc
shlb
inc
lds
enter
push
int
iret
shlb
sbb
fsincos
les
pop
push
push
push
xchg
adc
scas
std
notl
cmp
mov
push
icebp
jmp
fldt
push
add
or
call
popa
inc
cmp
xor
pop
fs
inc
in
arpl
cmp
les
mov
or
pop
mov
mov
test
add
sbb
and
xor
xchg
xorl
cmp
inc
or
sti
cmp
inc
adc
mov
mov
mov
add
inc
loopne
add
add
fdivl
xchg
or
mov
adc
mov
jno
test
sarb
push
pusha
negl
and
lea
adc
lea
push
enter
or
dec
adc
bound
clc
je
push
or
fadd
or
or
adc
fbstp
mov
add
dec
push
xchg
je
jmp
test
cli
lcall
sbb
and
mov
out
popa
nop
rol
test
mov
xchg
in
mov
xchg
nop
rorl
or
jb
nop
pop
js
test
adc
jne
pushf
cmp
and
push
mov
pop
sarl
movsl
ret
data16
fcomps
aas
pusha
xlat
pop
adc
mov
and
cmp
jl
or
pop
sub
decb
xor
lds
sub
sub
sbbb
int3
jnp
mov
int
stos
jns
insb
sbb
xor
xorb
push
sub
bound
popa
rcll
xor
mov
stc
sub
lcall
xchg
mov
xchg
shlb
mov
rorb
adc
push
mov
ret
jmp
push
xchg
adc
je
pop
adc
or
sub
or
mov
add
add
sbb
inc
mov
inc
adcl
cmc
fdivrs
cs
ss
das
sub
insl
mov
flds
and
nop
xchg
aas
pop
mov
ss
xchg
jne
xchg
inc
or
lcall
or
mov
sahf
lahf
mov
mov
nop
push
cmp
repz
add
or
sub
loopne
fstpt
test
add
add
aas
pusha
sub
leave
rorb
arpl
gs
mov
out
push
nop
pop
jp
dec
inc
dec
cmpsl
push
add
dec
jge
mov
sbb
adc
outsb
sbb
sub
mov
and
dec
add
or
in
adc
pushl
movsb
xor
lcall
stos
stos
lods
lods
cmpsb
imul
imul
cmpsb
imul
mov
lods
in
or
lea
cmpsb
cs
into
jecxz
add
and
inc
add
sbb
insb
cmp
cmp
insl
outsb
push
outsl
jo
lcall
int3
jae
mov
movsl
xorl
xchg
ja
jns
stos
push
lea
scas
pop
and
lds
jns
add
aad
dec
mov
push
call
int
sbb
mov
gs
xor
mov
lea
sub
aaa
mov
xor
and
and
les
popf
rol
and
mov
fisttpl
jp
cmp
ret
sbb
jl
jge
sub
xlat
sub
add
ss
addl
cmpsb
xchg
test
dec
adc
int
lods
mov
add
daa
sbb
ss
pushf
mov
lds
jle
jp
pop
lock
jbe
and
or
push
scas
mov
dec
fisubs
nop
lret
fadds
jp
leave
mov
xor
mov
and
lahf
mov
or
mov
bound
xlat
mov
loopne
in
lcall
ja
jne
daa
jmp
call
lods
repnz
push
mov
add
or
push
pop
add
insb
cmpsl
rcrl
cmp
aas
jle
fstpl
add
and
xor
and
movsb
test
leave
aaa
in
sbb
dec
cld
sub
xor
cmp
mov
int3
cmp
mov
add
loop
push
data16
mov
js
push
cmp
test
adc
push
cmpl
icebp
add
and
mov
and
fwait
dec
push
cld
insb
adc
and
loop
stos
dec
mov
mov
push
adcb
cmp
mov
aaa
mov
fsubs
data16
call
add
fiaddl
and
sbb
data16
xchg
add
xor
mov
idivl
sbb
mov
or
cmp
or
mov
mov
xor
or
jo
popf
mov
and
inc
iret
cld
loope
push
jmp
popf
addb
or
jle
stc
jle
add
jg
insb
in
mov
mov
xor
hlt
aaa
in
jecxz
int
jo
sahf
push
pop
pop
data16
pop
mov
pop
lea
andb
or
sbb
pop
test
pop
cs
add
test
nop
mov
incb
push
push
jp
mov
cmova
push
or
test
push
aas
xor
or
or
nop
loopne
pop
cmpsb
xor
xor
xchg
shlb
adc
int3
lret
adc
cli
stc
outsb
jo
lret
mov
addr16
push
sub
mov
gs
mov
cs
test
push
je
ret
push
sub
or
fsubrl
mov
cs
in
cmpl
dec
and
out
aas
stos
aas
sbb
sub
aas
dec
mov
call
das
push
data16
sti
push
in
adc
sete
ds
stc
cld
push
push
ds
cmp
out
sarb
fsubrs
ret
sbb
mov
dec
or
das
adc
rolb
test
sbb
adc
xchg
int
addl
sub
jg
mov
roll
or
cmp
repz
adc
lock
pusha
pushf
dec
movsl
xchg
rolb
lahf
cld
push
jmp
popa
mov
roll
mov
test
hlt
add
adc
repz
xchg
lods
fmul
aam
jl
sub
ret
adcb
jp
xor
in
in
outsl
cmp
aas
cmp
inc
scas
inc
bnd
mov
mov
jge
pop
push
mov
test
mov
or
dec
rclb
out
in
test
lret
add
jg
or
imul
es
jge
add
lcall
add
push
pop
push
sbb
sahf
cmpsb
jmp
mov
sub
enter
fs
adcb
fsubrs
pusha
adc
push
and
addr16
cmp
mov
arpl
sub
jo
or
cmp
adc
sub
jne
push
adc
pusha
rcll
sbb
add
sub
xor
fmuls
rcr
dec
shl
lea
in
push
arpl
mov
data16
cwtl
lahf
dec
mov
testl
data16
icebp
repz
es
icebp
mov
jno
mov
push
adc
cmp
mov
jnp
or
push
call
and
cltd
fwait
inc
inc
pop
sbb
addr16
or
push
jge
mov
mov
mov
pop
sub
push
daa
lock
loope
cmp
push
lock
pop
popf
imul
jg
mov
fwait
mov
mov
mov
aaa
cmp
push
jne
xor
ljmp
sbb
and
or
inc
jb
dec
mov
mov
jno
mov
outsl
pop
fyl2x
or
pop
pop
cmpsl
adc
adc
fisttpl
push
or
sbb
aaa
add
mov
push
xor
dec
mov
stos
int3
push
adcb
sbb
adc
pushf
inc
push
lods
mov
cltd
and
xchg
adc
faddl
enter
pop
and
dec
jge
movsb
cmp
movb
or
pop
mov
lahf
cmp
loope
push
int
mov
dec
jae
inc
iret
data16
mov
xor
dec
rolb
sarw
aam
aad
imul
imul
fisubrl
jle
ret
fldt
push
lods
rcl
outsl
push
popa
out
rorl
lea
inc
mov
cmp
jae
movsbl
ja
sbbb
les
mov
lret
mov
rcll
or
ds
arpl
adc
test
test
mov
pop
dec
pop
sub
inc
stos
pushf
aaa
fmull
les
pop
sbb
pop
mov
nop
lods
mov
ret
add
jbe
sub
cmp
and
inc
cmp
mov
xor
or
jge
push
push
push
push
test
pop
int3
data16
push
mov
inc
pop
xor
and
pop
xchg
popf
or
test
pop
fsubrl
clc
std
push
xor
shrl
jbe
dec
ljmp
ja
daa
std
xchg
cld
xchg
lods
mov
ficompl
jmp
mov
or
cmpsl
les
xor
inc
mov
mov
pop
dec
pop
push
imul
push
mov
fnsave
and
movsb
aam
cmp
es
flds
push
mov
fs
aas
orb
aas
xchg
pushf
pushf
sub
call
daa
daa
test
aas
aas
inc
dec
insb
xchg
push
ret
cs
jecxz
popa
les
adc
aaa
test
add
stc
mov
aad
mov
sbb
or
aas
aas
mov
cmp
gs
test
jne
mov
xchg
adc
imul
and
jl
ds
dec
lea
dec
push
js
push
mov
loop
pusha
push
aad
sub
and
sahf
push
sub
jmp
pusha
mov
jnp
adc
lods
add
sti
cmp
incl
punpcklbw
ficoml
lret
roll
aas
frstor
lds
lea
and
inc
xor
enter
inc
ja
stos
hlt
hlt
lea
jne
fwait
mov
xor
fwait
inc
roll
loope
sub
fcompl
sbb
shlb
jbe
push
test
or
push
and
clc
js
xor
arpl
imul
fidivl
fsubl
imul
loop
outsb
imul
aad
int
es
mov
dec
sbb
push
dec
mov
cmp
add
inc
xor
outsb
mov
sbb
sbb
add
mov
push
and
push
dec
ljmp
mov
inc
cmp
in
ret
cmp
sbb
fnsave
cmpb
sbb
lcall
sarl
fists
add
xor
or
push
leave
xchg
xor
push
add
and
add
fistpll
jne
adc
inc
push
jb
subb
and
xor
aas
mov
jl
adc
adc
cmovno
aaa
je
or
cmp
in
add
add
and
mov
mov
xchg
inc
mov
push
fcom
cld
inc
shll
outsl
sbb
gs
outsb
pop
gs
outsl
outsb
jo
add
xor
fs
lret
int3
fdivl
xlat
add
adc
xor
dec
shlb
shll
fwait
insl
mov
sarl
aam
jp
xor
push
cltd
adc
in
cmp
add
enter
mov
jo
or
mov
jo
imul
pop
pop
lea
pusha
pop
out
in
je
adc
je
push
flds
into
adc
adc
loope
sti
shrl
add
pop
xchg
mov
xor
les
rolb
fisttps
push
inc
inc
push
sbb
test
lock
xor
movsb
dec
pop
leave
or
dec
enter
test
ret
jb
jmp
movsb
ficoms
pop
lock
icebp
push
or
push
insb
add
adc
mov
xchg
sub
or
leave
stc
fmuls
test
pop
int3
and
jecxz
arpl
bound
dec
add
pop
pop
flds
jb
lcall
xor
or
jge
xchg
add
mov
scas
fisubs
cmp
ss
inc
outsb
mov
sbb
pushf
clc
or
cmpsb
cmc
loopne
or
adc
push
mov
mov
mov
add
sbb
or
adc
mov
clc
xchg
add
sbb
mov
sti
es
sarl
lods
mov
int
mov
nop
sbb
adc
jnp
shr
fmuls
shlb
pusha
mov
sbb
imul
adc
movsb
push
or
cltd
sub
cltd
pushf
fwait
mov
fwait
dec
repnz
mov
sbb
rorl
and
inc
add
mov
inc
arpl
aaa
sub
push
adc
div
insb
jnp
divb
push
dec
popf
lock
adc
jne
mov
out
push
sub
pop
gs
sbb
in
test
jmp
or
mov
push
sub
cmp
push
sbb
inc
ss
jae
lods
mov
sbb
pusha
mov
pop
aam
mov
cmpsb
lahf
xchg
jmp
sbb
adc
add
and
add
push
hlt
jmp
push
pop
out
xorl
ret
cmpsb
in
and
and
enter
lods
add
xor
inc
pop
cs
insb
mov
push
ds
mov
pop
mov
mov
test
and
sub
mov
and
mov
sbb
test
xorb
inc
sbbb
xor
enter
push
repz
xor
xchg
repnz
xchg
pop
and
mov
add
jno
mov
pop
jne
nop
out
push
mov
stc
repnz
fwait
sbb
mov
icebp
test
jne
push
or
test
push
cli
mov
orl
and
or
enter
icebp
pop
sub
lahf
repnz
test
inc
pop
add
inc
enter
sahf
cld
inc
add
adc
inc
xor
xlat
inc
call
loopne
or
sub
clc
cmp
incl
arpl
mov
mov
add
adc
dec
ret
inc
rolb
and
ror
mulb
aam
test
xor
xchg
enter
in
mov
or
out
xorl
cmp
jmp
jl
push
mov
xlat
outsl
mov
or
or
repnz
popa
mov
mov
insl
adc
or
sbb
inc
jle
in
adc
push
sbb
add
lcall
xchg
jl
out
dec
out
leave
mov
dec
bound
cmp
in
cwtl
test
pop
inc
out
inc
sub
sbb
dec
out
or
loope
inc
adc
flds
pop
es
outsl
in
jp
or
jnp
dec
out
jb
ds
lods
inc
out
je
test
out
or
out
pop
sub
nop
and
push
xor
adcl
test
push
call
pop
push
shlb
sbb
adc
add
push
push
mov
mov
lds
jmp
stc
xchg
aam
inc
and
pushl
or
sub
add
mov
xor
sbbl
add
and
pusha
push
mov
mov
mov
neg
lods
das
sub
pusha
call
inc
jbe
popf
addl
cs
call
andb
sub
outsl
out
out
pop
xorl
je
testb
xlat
mov
pop
push
nop
push
push
push
mov
mov
jmp
and
and
ficompl
add
or
mov
andb
mov
iret
pushf
pop
cltd
jmp
and
sti
in
inc
dec
pop
mov
inc
push
ret
insl
out
mov
pop
cmp
ret
push
idivl
rcrb
pushf
push
xor
fstpl
fwait
jmp
jbe
lds
mov
fildl
orb
and
push
xlat
fidivrl
or
jmp
cwtl
adc
pop
jo
or
push
pushf
lds
in
pop
rcll
mov
or
cld
insl
push
pop
push
ret
outsb
sar
mov
mov
test
leavew
or
addr16
pop
ret
mull
xchg
pushf
lock
ret
and
cmp
jge
or
cmc
fimuls
jg
call
push
sub
mov
xchg
jmp
loope
jbe
pop
sti
call
mov
ljmp
popf
nop
mov
mov
mov
sub
sub
mov
mov
xchg
adc
push
add
andb
xor
push
sbb
or
xchg
addr16
xor
inc
dec
adc
xor
popf
popa
push
sub
and
inc
push
sbbb
scas
lcall
mov
jo
xor
mov
pop
jo
sub
ds
add
or
mov
and
imul
xchg
mov
mov
mov
pop
cmpl
cmp
and
cmp
je
add
icebp
movsl
je
sbb
comiss
mov
sub
rcl
ljmp
sub
push
mov
nop
mov
push
jge
push
std
xor
push
inc
clc
xor
lods
clc
or
lea
insb
loop
jbe
das
add
das
or
add
incb
and
mov
sbbb
subb
das
xor
sbb
adc
mov
or
add
adc
pop
mov
jbe
adc
mov
sbb
cmp
adc
or
mov
xchg
xor
sub
sub
and
jb
ljmp
push
sub
ffree
pushf
mov
and
inc
mov
enter
out
jae
push
out
sbb
lods
ret
enter
mov
nopw
or
out
out
mov
push
mov
mov
mov
popf
sarb
pop
rolb
sar
sub
sar
push
xchg
mov
cld
pusha
pop
adc
divl
int3
fistpl
xor
jae
mov
out
mov
outsb
mov
out
push
or
sbb
in
lret
fdivrs
inc
jb
cli
test
cli
or
and
enter
pop
adc
out
sub
leave
push
mov
sub
pop
and
inc
filds
push
cmp
lret
andb
and
iret
and
push
adc
pop
fidivl
mov
aam
fwait
lock
mov
xor
inc
cmp
ret
inc
inc
pop
push
adc
adc
jo
nop
sub
in
loopne
imul
pop
movl
aad
mov
addr16
es
mov
inc
ja
fs
adc
dec
rcl
cmp
inc
add
add
fs
or
or
push
leave
push
je
push
repnz
push
rclb
mov
int
stos
loope
js
bound
das
aam
and
bound
cli
iret
xor
test
stos
and
stos
cmp
mov
xchg
cmc
aad
js
and
test
push
je
insb
mov
scas
fcomp
or
xchg
sbb
fs
in
or
loop
mov
mov
cmp
jbe
xchg
fnstenv
insb
outsl
bound
gs
xchg
gs
insb
pop
inc
outsb
loop
pop
xchg
js
push
inc
dec
andb
pop
aam
pop
sbb
mov
jnp
add
adc
sub
xchg
mov
jge
sbb
inc
mov
xchg
leave
loopne
cmp
rcrl
leave
mov
aad
add
loope
jne
outsl
push
adc
sbb
repnz
mov
lret
mov
outsb
jo
addr16
mov
sub
push
cs
retw
loope
mov
mov
mov
dec
or
adc
cmp
call
inc
das
jg
jle
ret
out
mov
push
leave
or
rorb
push
mov
sub
jbe
shll
pop
fs
xor
je
lods
add
shlb
mov
sub
jbe
or
xor
jae
and
sub
enter
fs
aad
mov
sbb
or
or
pop
clc
jne
and
adc
or
jmp
loop
mov
pop
arpl
jmp
push
add
and
xor
add
or
mov
imul
loopne
cmp
cltd
inc
es
xor
in
jp
cmp
add
int
loope
test
pop
mov
pop
push
lock
fbld
jbe
or
dec
mov
xor
mov
mov
faddl
data16
lods
cs
mov
pop
fcoml
notl
leave
cmp
push
add
add
sub
adc
pop
je
inc
xchg
ficomps
add
xor
jmp
pop
stos
dec
fsubs
sbb
push
adc
iret
inc
shll
int3
int
sbb
mov
xor
dec
or
inc
adcl
sub
enter
jge
mov
ljmp
push
dec
notb
les
rcrl
xchg
arpl
push
mov
xchg
and
xchg
jno,pt
inc
pop
dec
mov
fistps
stos
mov
push
push
das
cmp
push
mov
xor
xchg
repnz
xchg
rorl
fs
insb
inc
mov
xor
je
movsl
cmpsb
cmpsl
imul
imul
xchg
sub
add
mov
rcll
mov
dec
push
cltd
add
push
cvtps2pd
stos
in
jecxz
xor
jne
xchg
push
repnz
cmp
mov
ret
add
dec
iret
fsubs
jne
dec
call
dec
sarl
insb
mov
dec
sub
and
loopne
outsl
pusha
inc
xchg
lods
cltd
cwtl
cli
inc
push
sbbl
push
mov
mov
adc
xchg
dec
jle
lock
cmovnp
scas
or
clc
xchg
aas
test
pop
lea
fnstsw
mov
outsl
ljmp
mov
mov
add
mov
sbb
iret
adc
adc
add
in
daa
mov
mov
mov
cmp
mov
in
jne
push
lea
xchg
or
xchg
xchg
xorb
cwtl
insb
cmpsb
pop
inc
notb
push
push
adc
push
add
aam
fisttpll
push
lcall
test
sbb
sub
in
lcall
xchg
cmp
push
fs
mov
cmp
or
inc
movl
xor
aas
xor
orb
xor
add
or
inc
sbb
add
fcompl
and
add
mov
maskmovq
idivl
xchg
dec
xchg
xchg
mov
aas
jmp
mov
pushf
je
sub
adc
cld
int3
inc
inc
inc
jl,pn
mov
aas
test
je
and
mov
pop
in
add
push
push
hlt
insb
pushf
ret
push
xchg
or
xchg
add
dec
or
mov
int
lods
sub
push
loopne,pn
xor
pop
hlt
inc
mov
les
and
lods
push
rorl
inc
push
pusha
push
xor
add
mov
and
scas
lods
addl
test
sbb
pop
mov
push
pushf
and
lods
fcmovb
fcmove
sbb
push
fdivl
fisubl
push
push
sti
sbbl
je
adc
add
clc
xchg
pop
and
and
shl
insb
lret
or
mov
loop
mov
add
fisubl
inc
sbbb
and
lcall
sub
rclb
cli
adc
iret
xlat
xor
cmp
xor
mov
inc
in
in
dec
repnz
xchg
push
mov
ds
add
xchg
movsl
dec
fs
mov
mov
enter
andl
push
stos
mov
arpl
fxch
add
subb
movsb
aad
mov
loop
xchg
scas
and
or
stos
popf
mov
or
fcmovb
and
or
aad
negl
fcmove
sbb
mov
les
push
mov
pop
jmp
andb
add
and
pop
xchg
iret
dec
jmp
loopne
sub
or
inc
xor
enter
pop
push
fisubl
inc
inc
sub
movsl
or
push
faddl
sub
addl
sub
addr16
pop
mov
adc
adc
es
rolb
fwait
add
jle
jo
outsb
cmp
call
fbstp
in
in
sub
gs
add
stc
clc
dec
aam
insb
sbbb
orb
and
jbe
mov
pop
je
push
fsts
mov
pop
aam
fistpl
push
in
xlat
and
add
xchg
out
je
push
sub
fcomps
xlat
hlt
std
test
xlat
sub
or
and
aaa
push
mov
sbb
sub
and
adc
loopne
int
leave
adc
sbb
dec
div
pop
repnz
and
and
cs
ss
pop
out
arpl
sub
mov
xor
push
icebp
incb
mov
ds
sti
fcomps
pop
or
adc
sbb
dec
andl
dec
add
xlat
adc
and
mov
pop
pop
jbe
sbb
out
and
dec
dec
pop
popa
pusha
push
enter
arpl
mov
sbbl
add
test
add
add
xchg
xchg
mov
pop
add
cld
call
push
jb
inc
and
or
stc
out
mov
pop
outsb
loope
jecxz
lea
add
fwait
and
mov
sahf
fsts
dec
sub
insl
in
outsb
xor
or
or
push
mov
inc
inc
lods
inc
xor
cmp
inc
push
fdivrs
sbb
jns
jl
push
adc
in
mov
or
push
jl
outsl
mov
cmpsl
jmp
jmp
das
or
gs
scas
mov
xor
pusha
insb
dec
out
pop
fmull
mov
mov
outsb
jg
out
rep
mov
in
inc
add
inc
add
fnstsw
mov
push
and
test
je
lea
mov
dec
and
jecxz
into
mov
cs
in
mov
inc
xor
mov
aaa
dec
cmp
jb
push
mov
xor
jnp
std
movsl
fistps
or
roll
movb
or
shlb
add
xchg
lret
mov
in
lods
ljmp
xor
mov
sbb
inc
or
cltd
bound
adc
cmp
cwtl
rcll
gs
mov
adc
jl
aam
mov
into
pop
inc
sahf
cld
std
sbb
push
dec
pop
daa
int3
sbb
adc
loopne
cmpsl
and
pusha
jl
pusha
cmp
pop
pop
cld
cmpsb
mov
add
and
into
sbb
mov
xchg
inc
xor
adcl
popa
hlt
sub
sub
fists
add
out
int
sub
int
xorb
sahf
push
shll
and
xchg
or
add
lcall
mov
or
lods
cld
aad
adc
push
lods
and
pop
xor
test
cmp
shr
fldenv
int3
or
in
test
xorl
jno
mov
push
aas
lret
push
mov
add
fs
insb
pop
loop
ud2
cmp
cs
sbb
aas
orl
sti
xchg
sub
or
adcl
lret
xchg
shll
add
call
jo
xor
outsb
lret
jbe
and
mov
push
imul
dec
cs
mov
push
call
lea
sbb
aas
aas
mov
sub
call
add
es
test
and
jmp
ret
jno
adc
sahf
add
and
arpl
sbb
cmp
loop
dec
dec
push
inc
inc
andb
xchg
jmpw
adc
push
jmp
mov
adc
ja
push
or
xchg
xchg
xchg
pop
pop
pop
pop
pop
enter
std
adc
gs
pushf
dec
enter
test
ret
outsb
leave
test
pop
xor
pop
lret
leave
and
aas
nop
sub
daa
lea
xchg
cmp
or
lea
or
pop
lods
lea
add
fmull
push
cmp
fs
adc
add
sbb
pop
or
mov
jl
mov
add
add
or
jae
dec
xchg
pop
cmp
shll
jns
jmp
push
mov
add
mov
sbb
ljmp
or
push
lods
fstpt
pop
or
sbb
stos
dec
faddl
dec
push
popa
push
add
inc
hlt
jl
ret
clc
inc
adc
shrb
cmp
jne
mov
jns
add
add
fiaddl
inc
mov
mov
sti
mov
lea
push
pcmpeqd
push
adc
xor
or
and
sti
pop
mov
test
addr16
mov
lcall
cli
lcall
shlb
mov
cltd
sub
xchg
sar
push
lahf
fisttps
cs
jl
rolb
dec
mov
pushl
setl
dec
and
movsbl
add
sub
cmp
jge
mov
jns
stc
xlat
mov
jecxz
add
cmp
ljmp
in
adc
loope
add
mov
inc
inc
inc
cmp
jl
adc
or
sbbl
mov
mov
jne
cmp
mov
fcoms
clc
bound
ljmp
subb
or
cmp
hlt
jbe
mov
mov
mov
mov
dec
pop
push
xor
adc
mov
es
xor
add
or
sub
sbb
or
and
cmp
pop
xchg
xor
sar
fbld
cmp
mov
push
clc
xor
mov
inc
call
mov
scas
insl
sbb
mov
xchg
sbbb
shlb
shrl
pop
cmp
dec
mov
push
pop
idiv
ja
push
or
jb
ret
jnp
adc
push
jbe
clc
pusha
mov
mov
movsl
adc
popf
push
in
rclb
sub
js
mov
inc
push
pop
cmp
sub
mov
push
arpl
mov
sub
dec
or
lahf
and
adc
loop
lods
xor
pop
xchg
or
clc
jmp
or
sbb
cwtl
call
cmp
shl
push
cld
stos
lock
insl
negb
mov
mov
and
inc
mov
mov
inc
or
mov
and
popa
clc
pop
xor
add
out
mov
out
mov
fcmovnbe
adc
inc
pop
repz
mov
xchg
push
shl
or
addl
inc
add
xor
out
inc
mov
insl
mov
adc
add
sub
decl
test
pop
jmp
mov
and
mov
roll
mov
pop
inc
mov
sub
jne
mov
dec
rorb
inc
leave
mov
mov
icebp
shr
shl
mov
mov
loope
add
xchg
out
mov
xor
rolb
loopne
in
adc
push
mov
lret
xchg
lret
lea
inc
sar
pushf
mov
inc
rolb
mulb
mov
xor
adc
adc
sbb
pop
mov
add
aam
inc
mov
push
mov
sbb
dec
js
adc
incl
or
mov
imul
cld
incb
jp
and
mov
sbb
push
fdiv
popf
xor
inc
ret
adcl
movsl
or
push
xchg
jmp
aas
fmuls
pop
push
push
dec
pop
lea
mov
iret
jle
mov
push
mov
xchg
cmp
stc
jl
xchg
adc
imul
mov
or
add
mov
nopl
stos
xchg
stos
mov
xor
add
je
lcall
xchg
pop
dec
cs
xor
and
add
mov
adc
adc
pop
stc
push
and
add
adcl
imul
add
rcr
stos
lcall
and
or
fsubrl
es
ss
rcl
aas
ret
jge
pop
insb
movb
pop
cmpsb
pop
pusha
loope
fldl
push
jmp
fildll
push
inc
pop
sti
out
mov
and
movb
or
sbb
and
mov
pop
push
enter
out
and
add
sub
in
sar
cs
rorb
mov
aaa
mov
popa
fmul
xchg
clc
mov
mov
cwtl
ret
fwait
rcr
out
pop
mov
mov
mov
popa
jns
jb
leave
and
addr16
dec
ret
push
mov
pop
in
std
pop
jae
push
pusha
jno
xchg
je
inc
add
sub
fs
fsubl
cmp
test
or
decb
cmpb
jne
lea
mov
lock
fiaddl
pusha
pop
fs
scas
flds
orl
ret
cmpsb
lahf
int
ret
cmpw
jmp
cmp
lret
push
inc
cmp
mov
inc
push
repz
pushl
cmp
je
mov
cmp
je
push
divl
loopne
fists
adc
pop
cmp
ja
jno
or
jae
add
mov
pop
clc
outsb
adc
pop
imul
sbb
lahf
test
loopne
or
jg
push
mov
cmp
int3
inc
jmp
mov
bound
xor
outsb
mov
add
mov
adc
stos
xchg
push
push
and
push
adc
xchg
push
lea
push
pop
adc
push
fcoms
jno
fisubrl
lea
lcall
sub
xor
js
adc
xor
add
pop
jbe
repz
push
mov
enter
popa
mov
lret
cmp
and
pop
push
or
inc
or
in
sbb
inc
sub
es
or
add
inc
pop
andb
in
pop
or
hlt
repz
scas
dec
mov
sbb
fsubs
or
and
dec
inc
lock
or
cmp
adc
mov
or
add
shlb
iret
push
pop
xchg
gs
imul
frstor
push
jecxz
add
or
iret
mov
pop
sub
aas
push
mov
sahf
xor
and
cwtl
and
movsb
subl
xchg
insb
in
sbb
push
shrb
or
outsl
add
bound
jae
aam
mulb
push
inc
adc
add
xor
fldcw
fdivr
mov
mov
setnp
add
fdivs
arpl
mov
cmp
je
xor
add
sbb
in
push
leave
lock
dec
call
pop
inc
roll
jb
xor
clc
push
sbb
sbb
addr16
inc
daa
nop
cmp
scas
mov
push
clc
pop
sbb
out
mov
mov
in
or
mov
adc
loopne
inc
sbb
or
push
data16
idivl
jmp
pop
ret
cmp
rcl
loop
mov
sbb
mov
insb
push
add
clc
fucom
push
push
in
pop
into
pop
xchg
mov
xor
mov
jb
xor
mov
mov
daa
daa
daa
dec
fs
cmp
daa
rol
ret
stos
aad
adc
dec
call
cltd
push
pop
sub
sbb
pop
es
ljmp
les
jle
add
add
in
add
sub
add
mov
add
jmp
ret
lods
mov
mov
mov
test
add
nop
sub
call
in
or
leave
and
xchg
leave
leave
mov
mov
or
xchg
xchg
fs
sub
mov
leave
or
sub
stos
call
out
fsubs
pop
mov
mov
push
lret
rcrb
pop
js
and
mov
sbb
push
cs
push
rclb
std
sub
xor
repz
mov
cmc
adc
push
or
or
dec
out
pop
inc
mov
adc
or
cmp
inc
add
pop
call
mov
inc
lock
mov
cmp
addr16
int3
cmp
arpl
lock
cmc
femms
jae
xor
inc
push
inc
sub
in
ljmp
push
inc
mov
mov
push
sbb
inc
sub
decl
pop
add
mov
sub
sbb
dec
mov
fwait
stos
sbb
jo
pop
xchg
pop
mov
push
dec
adc
mov
jno
adc
pop
pop
ret
pop
add
or
adc
push
push
xor
cltd
inc
mov
sub
lret
stos
inc
je
dec
dec
mov
movsl
clc
dec
push
push
xchg
stc
into
in
adc
aaa
or
or
xchg
cmp
data16
insb
mov
adc
sub
fbstp
cmp
lock
sub
mov
imul
in
pushl
out
add
incb
dec
movb
in
gs
mov
imul
insb
outsl
outsl
fs
push
test
test
or
cli
lea
std
outsl
ret
pop
pop
je
dec
fcompl
dec
jae
lds
cli
push
add
push
popf
ljmp
loopne
pop
push
loope
movsl
adc
pop
imul
push
jl
pop
adc
dec
adc
xchg
fisubs
add
fildll
sub
adc
xchg
cmp
loope
gs
mov
xor
pop
nop
xchg
cmp
jecxz
xchg
test
cmp
nop
xchg
sbb
inc
sahf
xchg
cwtl
inc
mov
jge
or
adc
sub
and
out
add
lea
mov
jmp
mov
aam
and
mov
divb
jb
push
rcrl
stos
inc
test
pusha
push
rclb
jne
test
pushf
and
fistpl
pusha
std
inc
ret
sti
push
mov
das
xchg
scas
adc
pushf
push
mov
bound
movsb
sbb
mov
or
leave
ret
jmp
add
idivb
in
push
mov
lret
stos
push
cmp
xor
mov
loopne
cmp
in
cli
cmp
sbb
jo
mov
cmp
mov
add
iret
inc
out
pusha
sub
inc
test
jmp
cmp
xchg
sbb
loop
push
cmp
jo
pop
xor
jnp
cmp
stc
push
jnp
jb
push
mov
adc
add
mov
stos
cmpsb
sub
xchg
xorb
dec
shll
dec
push
aam
dec
rcll
gs
shld
inc
jns
cli
ret
and
stos
xchg
movsb
mov
xor
fldt
ficoml
add
repz
pop
lds
enter
jns
push
push
push
mov
adcl
aas
call
jmp
addl
xchg
jne
call
jge
lea
jg
movsl
jl
lea
mov
je
add
and
clc
insb
jecxz
add
fmuls
push
mov
xor
outsl
inc
lahf
mov
pop
clc
pop
enter
out
test
and
mov
add
mov
pop
filds
push
mov
mov
pushl
or
and
push
inc
test
and
cmp
xor
pop
push
das
sub
es
in
rolb
std
loope
dec
add
inc
push
or
in
sar
roll
gs
sub
shlb
pop
aam
pop
lcall
dec
xlat
pop
mov
flds
fisubrl
fldt
data16
negb
and
adc
or
sbb
mov
and
iret
imul
or
lods
mov
wbinvd
cld
sbbb
add
popa
and
cmp
fnsave
adc
movsl
jg
sub
jae
sub
insb
mov
or
loope
inc
jmp
aas
mov
push
cmp
rcr
or
mov
add
inc
inc
push
js
je
dec
xchg
inc
inc
cmp
or
sti
pop
inc
cmpsl
out
jle
decl
or
mov
les
jne
push
clc
adc
andw
push
out
sti
cmc
push
nop
adc
add
or
jp
sar
push
cmpsb
cmp
lods
cmp
mov
lea
mov
jb
mov
or
call
push
sub
inc
loope
jmp
and
add
movsb
mov
push
or
filds
mov
pop
add
es
je
add
jne
cmpsb
mov
or
call
or
ss
std
jns
dec
punpckhbw
mov
mov
mov
push
push
and
in
outsl
testb
es
and
push
jg
adc
loopne
loope
cmp
mov
or
dec
push
iret
mov
insl
xchg
outsl
cmp
push
push
adc
add
sub
mov
cmp
pusha
push
add
setp
jmp
pop
add
mov
pusha
fisttpll
dec
add
loope
lods
jnp
in
enter
or
fmuls
bt
dec
xor
mov
int
fisttpll
push
add
lock
adc
add
push
sahf
xor
adc
dec
outsl
sbb
lret
mov
nopl
add
mov
fstpl
pop
add
and
jnp
mull
mov
xchg
mov
add
pop
mov
sysenter
lea
xchg
bswap
xorb
daa
add
pop
lods
divl
add
mov
arpl
cmovo
pop
add
cmovno
add
xor
jne
push
or
testl
arpl
inc
add
pop
cmova
lret
mov
dec
ja
jnp
movsb
mov
add
pop
dec
dec
int
jne
push
inc
add
rcl
idiv
out
and
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
inc
decl
push
push
push
push
push
push
push
push
pop
pop
pop
popa
bound
gs
imul
jo
jb
idiv
pushl
jne
ja
jns
xor
xor
xor
ss
cmp
sub
dec
pop
int3
xchg
jne
jmp
rorb
pop
movl
jbe
pop
iret
divps
fbstp
mov
add
shrd
fs
add
gs
add
psllq
add
sbb
in
add
add
pushf
sub
pop
nop
add
and
xchg
pusha
sub
xchg
adc
test
ljmp
popa
repz
push
lods
insb
outsb
jb
dec
or
popa
jbe
inc
fcmovne
insl
add
sbb
push
sub
jg
ljmp
je
popa
insb
push
jb
je
arpl
popa
jo
insb
insb
outsl
arpl
mov
inc
gs
arpl
jae
sbb
fiaddl
dec
jo
sbb
outsl
imul
out
fdivrp
adc
push
jae
push
sbb
imul
outsl
adc
push
outsb
jne
div
fldenv
pop
push
gs
sbb
push
jns
lahf
mov
jae
or
gs
xchg
or
mov
js
pop
outsb
fs
push
outsl
jne
arpl
xor
daa
pop
popa
verr
notb
jp
outsl
adc
pop
inc
punpcklwd
mov
aaa
pop
add
dec
popa
insb
or
cmpsl
push
push
popa
insl
mov
pop
push
outsb
je
cmp
mov
bound
cmpsb
dec
add
adc
sub
push
not
pop
adc
imul
mov
out
sti
popa
addr16
dec
gs
add
push
jne
jns
in
cmp
outsl
adc
adc
insl
aaa
aaa
mov
adc
xor
push
mov
cltd
jnp
subb
dec
mov
outsb
mov
loope
pop
pop
or
pop
mov
outsl
insb
push
push
outsb
add
outsl
je
mov
jge
push
es
mov
dec
gs
pop
pop
mov
leave
and
and
insl
addr16
dec
jne
ret
push
mov
in
pop
popa
or
push
inc
scas
pop
mov
xchg
aas
pop
out
inc
mov
inc
add
pop
fdivrs
mov
adc
dec
andnps
and
jnp
adc
mov
int
mov
inc
movsb
add
add
sub
push
dec
or
es
je
pushf
inc
dec
cmp
fs
adc
and
inc
jbe
aas
adc
mov
cmp
popf
mov
shrl
jb
inc
clc
push
popa
adc
outsb
and
push
imul
imul
gs
outsl
adc
inc
pop
mov
or
pop
mov
and
or
mov
mov
dec
sbb
out
or
shll
add
add
inc
push
sbb
pop
add
into
mov
jne
add
adc
lods
je
add
adc
insb
xchg
in
popf
aaa
add
or
into
or
dec
dec
inc
mov
jecxz
and
sub
bnd
popa
insl
jecxz
insl
jae
arpl
xor
and
data16
xor
xor
mov
add
movsb
mov
outsl
push
push
inc
test
push
and
add
dec
mov
imul
mov
pop
data16
outsl
or
push
neg
push
int3
cmc
addr16
mov
push
mov
fsubrs
xor
sbb
pop
cmp
or
imul
divl
fcoml
and
pop
imul
repz
insb
or
outsb
gs
in
xor
ja
and
fildl
fldt
les
add
xchg
imul
xor
int3
mov
xor
dec
inc
inc
pop
xor
ss
inc
or
insl
outsl
xor
xor
xor
in
pushl
add
inc
cmp
inc
inc
xor
inc
xor
mov
xor
inc
inc
xor
aaa
aaa
inc
xor
inc
add
xor
xor
mov
xor
cmp
ss
xor
cmp
push
or
pop
pusha
add
rorb
inc
lret
sub
cmp
lods
jbe
es
es
fs
and
lock
fiaddl
outsb
arpl
iret
arpl
pop
jo
add
cmc
dec
insl
inc
stos
lds
test
out
ja
xor
incb
sbb
je
inc
jns
in
mov
fs
push
adc
pop
mov
inc
mov
push
dec
jae
nop
call
jne
jae
jae
scas
insl
or
mov
cmp
mov
int
insb
pop
adc
punpckhwd
push
and
or
stc
push
push
inc
or
mov
inc
dec
emms
add
lods
js
es
dec
or
mov
pop
mov
jb
push
jo
out
push
ss
inc
mov
dec
out
mov
jae
push
xchg
rorl
outsl
add
pushf
in
cld
jo
jae
insl
xlat
inc
aaa
add
cmp
mov
pop
cmp
gs
div
cmpsl
mov
mov
in
push
push
ja
or
int3
fiaddl
push
mov
push
mov
cmp
das
mov
pusha
or
dec
fs
sbb
test
jne
sub
jbe
sti
imul
pop
data16
ficompl
xchg
xor
imulb
push
subl
cmovle
inc
or
jecxz
mov
cs
fs
fs
and
adc
and
mov
sarb
sub
mov
sub
or
cmp
das
pusha
call
add
imul
insl
jnp
cmp
data16
sub
sbb
or
enter
clc
lcall
or
imul
sub
inc
jmp
xchg
add
mov
add
sbb
add
je
jns
pop
jae
jno
cmp
movb
pop
cltd
and
add
ja
aaa
jge
or
data16
sub
adc
mov
adc
cmp
adc
roll
outsb
out
jb
scas
jb
cmpsb
add
mov
inc
mov
lahf
roll
xor
repnz
sti
xor
mov
adc
test
xor
xor
pop
in
daa
cmpl
inc
push
inc
dec
push
push
cs
sub
inc
aam
in
cs
inc
inc
xor
dec
sub
lcall
mov
sti
pop
dec
inc
pop
push
dec
dec
push
inc
cs
inc
jnp
or
sahf
mov
xchg
inc
push
mov
aaa
addl
enter
add
lock
subb
or
add
and
fs
call
ljmp
inc
int
bswap
mov
xor
pop
or
loope
push
add
mov
and
ljmp
inc
add
add
cwtl
xchg
pop
push
and
and
mov
sti
insl
pop
inc
mov
scas
mov
icebp
or
add
inc
jmp
sub
mov
add
adcb
adc
add
inc
pop
or
outsb
pop
inc
decl
mov
out
jle
dec
ret
pop
fistpl
pushf
pushf
sbb
neg
aaa
pop
pop
or
jmp
sti
fdivr
in
sbb
cmc
test
call
call
loopne
jbe
pop
ret
mov
shr
inc
pop
and
movsl
call
and
outsb
cmp
jmp
sbb
daa
or
push
cmp
pushf
notrack
fldl
dec
jmp
lahf
add
fisubrl
xor
cwtl
outsb
jmp
and
or
insb
push
pushf
shlb
mov
movswl
or
inc
sbbb
pushf
call
adc
adc
cld
cs
add
rcll
sbb
or
pop
incb
xchg
orl
sarb
and
movsl
or
dec
mulb
mov
pushf
mov
ret
out
xchg
ljmp
call
cmp
jl
pop
fmull
stos
mov
cmp
call
out
and
xor
test
mov
push
push
pusha
and
mov
mov
lea
dec
push
mov
pushf
and
setae
pop
rcrb
mov
movsl
sbbb
push
call
adc
gs
sbb
push
clc
sub
icebp
push
mov
lea
pop
sub
jo
pusha
mov
or
jmp
ja
xchg
mov
call
das
paddd
jbe
pusha
jmp
out
shr
rcrl
cmc
not
pop
test
leave
mov
pusha
mov
sar
jecxz
sbb
pushf
xchg
pop
jmp
or
pop
xlat
or
pushf
jmp
outsl
std
in
xchg
cltd
call
stc
rcr
pop
sbb
rol
xor
fistpll
fists
cmp
iret
sbb
in
jge
das
outsl
iret
mov
incl
mov
push
cmc
xor
adc
sbb
mov
inc
xorb
stos
push
stos
mov
add
int
call
push
clc
pop
imul
lock
jl
sub
syscall
mov
or
lds
jae
mov
pop
out
cmp
push
pop
lock
rcl
xor
xchg
pusha
fistpl
mov
mov
loopne
int
adc
adc
rolb
divb
dec
addr16
cmp
call
mov
cmc
sub
popf
mov
cs
call
jg
rol
inc
call
add
pusha
pusha
sbb
div
pop
adc
or
xor
cmp
jmp
cmp
in
into
adc
sub
loope
cli
arpl
mov
cmp
movsl
dec
or
mov
ret
mov
dec
int
data16
pop
jmp
faddl
xchg
push
into
pushf
ja
scas
sub
and
mov
aaa
rol
mov
mov
aaa
lea
sbb
pop
insb
mov
lcall
lea
fcomps
xor
loope
sbb
inc
rol
fwait
push
ror
fisttps
xchg
pop
call
mov
dec
int3
ds
scas
fisttpll
js
movl
daa
call
add
jmp
in
fyl2x
aaa
lcall
test
cltd
mov
jg
jmp
jecxz
rcl
pop
pusha
push
frstor
rolb
mov
into
dec
cld
sbb
loope
mov
ljmp
aaa
mov
jo
push
mov
insb
xchg
mov
das
sub
pop
ds
ja
cltd
repnz
push
dec
fmuls
mov
movsb
add
stc
or
cmc
clc
call
stc
imul
jp
dec
cmpsb
sbb
jmp
sbb
or
mov
rorl
push
aaa
call
sbb
adc
mov
adc
das
cli
jo,pn
jbe
or
lods
scas
and
sbb
xchg
into
dec
adc
movd
pop
and
mov
xor
xor
jbe
or
call
icebp
mov
popf
add
data16
cmp
cmp
popf
lock
sarb
mov
mov
push
pop
push
mov
pop
mov
pop
pop
fisubrs
out
sahf
stos
pop
inc
fs
outsb
das
cltd
mov
je
jecxz
cmc
test
push
or
out
lcall
xor
jae
out
arpl
push
iret
jmp
sub
scas
sbb
adc
cmp
add
lahf
nop
mov
lods
aam
dec
xlat
jo
xor
inc
or
cli
addr16
adc
ljmp
outsb
cmpb
stos
cmc
scas
sub
push
jbe
xchg
imul
in
lahf
and
push
subl
jmp
mov
sbb
mov
pop
arpl
or
sbbl
dec
xchg
cld
sbb
dec
sub
add
push
xor
xchg
js
ret
in
mov
sub
jmp
leave
call
addl
jmp
add
in
adc
jecxz
sahf
ficoms
add
shr
pop
aaa
sbb
push
ss
dec
cli
das
dec
adc
and
xchg
sub
fwait
sbb
shll
push
sub
loop
xchg
jne
pop
lret
or
add
call
lret
cmp
aas
jmp
and
dec
sti
cmp
lcall
cmp
scas
xchg
cmp
inc
int3
jne
shll
and
push
add
sarb
add
xor
mulb
clc
insl
jmp
sbb
cmp
push
pop
cmp
rorb
jb
imul
movsb
cwtl
push
jnp
idivb
mov
xlat
sbb
lret
lds
roll
call
cmp
ffreep
inc
push
out
push
mov
mov
stos
subl
and
pop
ja
lock
dec
xchg
cmpb
int3
dec
mov
fdivs
stos
pop
fldl
push
je
int
jnp
mov
mov
movb
divb
adc
pop
sti
pusha
adc
sbb
outsb
mov
call
sbb
fmull
roll
out
rcrl
testl
lea
ret
pop
mov
std
pop
pop
cli
or
pop
add
inc
cli
daa
adc
push
inc
dec
icebp
or
jp
aaa
cmp
adc
out
mov
jae
lods
push
jnp
addr16
or
sub
ss
mov
or
sub
pop
mov
fs
roll
dec
cli
dec
test
dec
test
push
pop
cwtl
dec
jmp
xchg
adc
pop
pusha
jg
sbb
shl
int
fldt
push
push
imul
nop
xor
mov
xchg
sbb
out
call
sbb
and
push
pop
jmp
cmp
xchg
cmp
xor
daa
push
jg
add
mov
sbb
xlat
push
adc
pop
data16
shl
push
add
je
mov
adc
not
jmp
ja
cltd
jbe
cmp
push
call
mov
add
das
sub
pop
push
cmc
pusha
xor
inc
adc
and
decb
stos
push
stos
lahf
ljmp
dec
xor
sets
push
xchg
ficompl
mov
push
xor
jmp
test
cmp
pusha
mov
or
pusha
xor
xor
sbb
dec
mov
enter
jmp
insb
mov
cmp
sbb
out
stos
add
cmpsl
jmp
xor
shlb
or
adc
push
out
pop
sub
ss
sbb
nop
imul
xchg
cmp
xor
and
jge
sub
int3
and
pushf
ficoms
and
mov
jns
loope
nop
jne
sbb
out
insb
loopne
pop
stos
add
push
leave
mov
mov
and
ffree
pop
mov
jge
mov
movsb
sbb
dec
dec
js
js
adc
ja
pushf
ljmp
hlt
jb
sbb
jl
xabort
lds
sbb
xlat
lcall
adc
mov
imul
in
xchg
call
shrd
jo
outsl
push
push
sub
sub
cmp
test
rorl
je
pop
xor
xor
pop
cmc
mov
mov
shl
or
imul
jmp
push
stc
pushf
sbb
adc
roll
sti
and
popa
pusha
jg
jmp
int
mov
les
out
or
bound
jp
cmp
and
sub
in
xor
push
adc
or
pusha
push
call
call
pop
push
xchg
push
mov
test
mov
dec
dec
idivl
int
sbb
pusha
jge
push
imul
testl
aam
ret
ljmp
mov
pop
push
inc
call
push
outsl
cmp
mov
pusha
add
mov
sub
sbb
ss
add
dec
sbb
aam
pop
mov
fcomps
mov
jns
sub
mov
sub
xor
pusha
push
jmp
in
int3
mov
cmpb
lock
jb
pop
xor
test
sarl
setno
pop
xor
push
mov
pop
stc
shrb
out
sahf
ja
lahf
mov
xchg
and
sub
jae
or
stos
adc
push
xor
orl
clc
pusha
mov
shl
push
jne
mov
sbb
jo
pop
mov
mov
scas
arpl
stc
gs
icebp
adc
pop
push
adc
ret
frstor
jae
push
jbe
cli
fwait
dec
xchg
aad
push
outsl
adc
je
sbb
pusha
outsb
clc
pop
pushf
loope
rcll
leave
inc
mov
xchg
adc
or
cmp
lcall
or
xchg
call
ljmp
cmc
gs
mov
call
push
lea
sbb
add
pop
and
pusha
mov
lods
punpckhbw
in
sub
fildl
sub
jge
or
ret
lahf
push
push
out
rcrl
push
gs
rcl
pop
jecxz
sub
ror
fbld
and
cld
andb
cmp
or
ja
push
aaa
push
xor
repz
cmpsl
jbe
mov
sub
je
mov
leave
pop
adc
out
add
icebp
and
xlat
xchg
push
jmp
jmp
ds
ss
xor
mov
jmp
inc
and
inc
jbe
mov
add
sub
fisubl
mov
mov
xor
xchg
clc
jbe
pop
jp
or
outsb
scas
sbb
scas
loopne
outsb
scas
adc
adc
and
nop
pop
xor
add
jo
xor
mov
clc
xor
rorl
pop
pop
pop
inc
pusha
call
push
jnp
pop
jbe
cs
in
adc
repz
push
sub
outsb
jle
xorps
aam
xor
ss
jmp
scas
js
rclb
mov
mov
adc
jmp
clc
jmp
popa
fidivs
push
call
or
cmp
ficomps
icebp
or
call
clc
leave
shl
call
cmp
fcoml
sbb
lahf
setne
and
inc
stc
lock
push
out
or
or
mov
std
pop
mov
xchg
fiaddl
jb
das
mov
ret
jnp
pop
lds
mov
movsb
loopne
cmp
fildl
inc
mov
add
pop
add
push
data16
lock
andb
aas
add
push
out
rcr
add
pop
cmp
cmc
outsl
sub
xor
call
xchg
testb
add
mov
ss
sub
sbb
es
mov
xchg
repnz
xchg
or
cld
ret
cltd
test
sahf
icebp
mov
pusha
lahf
cmp
push
scas
mov
lcall
or
mov
push
pop
js
push
popf
daa
adc
inc
arpl
mov
sbbl
sar
fwait
xchg
adc
lods
in
fsubrs
xor
cmp
jo
out
negb
sbb
sbb
adcb
push
outsb
add
std
cmpsb
and
int3
jp
pusha
test
cwtl
call
jecxz
cmp
jmp
push
into
adc
jmp
aaa
ret
std
cmpb
push
clc
jmp
fcoml
test
cltd
fsubr
cvttps2pi
adcl
sub
movb
dec
sub
pop
adc
inc
sbb
or
fldl
and
rorl
cmp
mov
add
fstpl
fistps
xchg
cmpsl
push
or
mov
jno
rcrl
sbb
xchg
xor
lock
mov
gs
cmp
xchg
jmp
cmp
mov
mov
idivl
popf
xchg
cmp
cmp
test
mov
mov
out
es
js,pn
push
cmp
fildl
jae
cld
sbb
loopne
mov
mov
inc
sbb
mov
and
xor
lods
stos
mov
es
jmp
shlb
out
fisttpll
add
ss
add
pusha
dec
inc
mov
cli
lahf
sbb
fimuls
pop
and
jnp
mov
mov
std
xchg
subb
out
test
mov
out
fdivl
shrl
jo
aaa
push
and
cmpsl
aaa
adc
fs
pushf
loope
jbe
mov
push
add
fs
lret
sub
mov
rolb
lret
scas
movsl
in
mov
pop
int3
inc
adc
jmp
cmp
ret
and
xlat
cmp
nop
je,pt
aas
or
iret
out
lcall
ss
mov
call
loop
sbb
andl
adc
cmp
adc
mov
lock
sub
or
mov
cld
ja
sub
in
xchg
pop
push
call
js
clc
mov
inc
lcall
int
jnp
negl
mov
sbb
xchg
xchg
adc
je
xor
mov
call
inc
lds
xor
xor
inc
mov
dec
in
mov
adc
fs
lcall
notl
mov
cmp
or
and
ja
dec
shl
pop
sti
sbb
lds
inc
inc
pop
je
jo
mov
fnsave
cli
mov
mov
cmp
mov
adc
cli
fprem1
pop
mov
and
testl
fisttpl
add
fwait
andb
or
test
lock
mov
mov
sub
enter
push
inc
imull
loopne
and
sar
mov
jmp
and
in
shll
fwait
nop
jmp
incb
popa
sub
arpl
fsub
or
sub
lea
ret
pop
sbb
insl
mov
pop
js
or
sub
rolb
stos
push
loopne
nop
sub
pusha
fcompl
inc
cwtl
cwtl
jmp
clc
push
rdpmc
out
imul
into
cwtl
jg
push
push
mov
mov
test
cmp
fsubr
fistpl
sub
lock
sub
aaa
jle
jge
and
in
lock
jge
addr16
movsl
outsb
popa
std
lahf
ss
mov
into
sbb
adc
cltd
clc
in
cmp
insb
sti
jmp
add
sbb
xchg
sub
or
cli
mov
lods
pop
mov
mov
or
inc
int
cld
inc
lahf
or
sub
sti
pop
sbb
jle
stos
push
mov
inc
pop
xchg
push
sti
pushf
push
fldenv
pop
sbb
jmp
mov
inc
out
adc
dec
sub
icebp
pusha
jp
mov
stos
lea
setbe
xor
dec
mov
les
add
sub
mov
pushf
or
shl
sbb
adc
int
dec
push
push
andb
idiv
in
in
dec
scas
xchg
pop
push
pop
xor
icebp
es
pop
pop
fnstenv
jno
call
sahf
cs
pop
cmc
jmp
push
pop
imul
rcrl
cwtl
jmp
sub
xchg
mov
inc
mov
clc
icebp
xchg
dec
lds
shrb
push
mov
js
inc
jne
lock
cli
dec
cmp
xor
enter
inc
clc
ja
pop
xor
inc
dec
jne
stos
sbb
xchg
jg
ret
mov
ret
cmp
add
inc
xor
pushf
mov
into
sbb
adcb
daa
outsb
jg
daa
push
call
in
movsl
loop
xor
sbb
sbb
pop
jbe
jmp
pop
push
cwtl
lock
bound
dec
push
push
sub
pop
sub
sbb
fldl
in
dec
pop
mov
scas
call
mov
push
cmp
jmp
jge
mov
ror
shr
lods
lret
flds
das
hlt
or
sub
outsb
mov
xor
adc
mov
add
push
lods
xor
sar
jl
or
mov
sbb
add
iret
jae
add
clc
lods
decl
xor
pop
pop
pusha
aas
dec
or
call
mov
aam
inc
stos
call
mov
or
loopne
ror
call
push
pop
mov
dec
push
cmpsb
or
pop
ljmp
xor
adc
mov
mov
clc
and
sti
icebp
pop
setb
sbb
push
ret
push
or
add
jne
lret
cmp
and
icebp
fs
and
rolb
jecxz
cmpsl
pop
sbb
insb
adc
out
fists
mov
sbb
outsl
pusha
andl
xor
pop
xchg
mov
pop
call
mov
xchg
cmpsl
mov
stos
jmp
outsl
and
and
or
jmp
add
ljmp
cld
mov
aad
xchg
shl
jmp
call
ja
xchg
call
xor
or
ds
fistl
faddl
xchg
insl
add
adc
pop
rcr
mov
add
jne
add
pushf
test
sbb
adc
or
inc
imul
scas
xor
or
fprem
or
pushf
cmc
inc
sbb
xor
pusha
push
jnp
faddl
mov
adc
shlb
jo
or
adcw
cmc
call
out
or
ficoml
das
arpl
cmp
test
add
call
test
ds
shlb
fwait
sarl
cmc
call
xchg
outsl
sbb
hlt
push
out
mov
roll
jecxz
in
pop
sbb
fisttpl
lock
xor
inc
push
jmp
popa
push
and
add
and
or
std
rcl
setl
imul
pop
sti
cmc
add
xor
mov
not
pop
nop
pop
imulb
or
jmp
sti
xor
fdivs
dec
xor
dec
push
sbb
mov
push
push
xchg
jp
stos
push
fistpl
adc
and
lret
pop
add
push
movsl
push
mov
add
cltd
int
call
jle
popa
movsl
and
outsb
call
iret
js
push
pop
jmp
je
adc
inc
unpcklps
movsl
js
or
fsubs
ret
mov
rcll
xchg
pushf
cmp
stc
push
dec
in
dec
fcoms
fdivr
or
cmp
stos
push
jae
js
inc
cmp
xor
jo
push
pop
cmp
pop
and
mov
jmp
sub
push
shl
fsubr
push
stc
stc
mov
sub
scas
mov
leave
or
pusha
mov
jbe
pop
push
shrl
push
and
cmp
and
sti
cmp
pop
out
adc
movsb
push
jp
add
cmpsl
mov
sub
sub
sub
leave
adc
adc
test
iret
and
loope
jl
clc
ret
mov
jne
test
cmpsl
or
push
push
or
or
fdivr
pusha
cs
jmp
push
jg
scas
shl
in
insb
mov
mov
push
push
sub
adc
sbb
cmp
mov
mov
leave
js
push
jmp
adc
mov
sti
jae
mov
mov
aam
das
mov
out
mov
jmp
scas
loopne
jecxz
pop
loopne
push
and
push
mov
cmp
iret
inc
adc
push
pop
mov
xlat
out
and
jmp
out
pop
aaa
push
pop
pop
daa
mov
daa
sub
push
inc
xchg
clc
inc
adc
add
push
fisubs
inc
call
cmp
push
mov
push
cwtl
stos
das
or
rorl
rolb
mov
push
dec
sbb
frstor
mov
or
mov
rcll
sbb
cwtl
xor
inc
jmp
push
mov
dec
pusha
es
xor
mov
sbb
rorb
call
add
pop
adc
cmovl
mov
or
iret
popf
setno
push
lea
push
popa
leave
jb
mul
aaa
mov
pushf
aas
sbb
dec
mov
sub
inc
call
jb
lret
inc
lock
adc
xor
loope
fstps
rorl
mov
inc
cld
pop
lcall
and
lahf
cmpsb
jb
das
or
mov
lds
insl
xchg
fistl
jmp
leave
outsl
jecxz
push
mov
inc
loop
mov
xchg
scas
and
pusha
jle
scas
inc
cmp
jne
xchg
out
ret
fcoms
dec
int
adc
das
mov
and
cld
mov
pop
cmp
inc
adc
subb
xor
pop
out
shlb
mov
lret
inc
push
push
adc
or
fisubrl
pop
push
mov
cld
xor
addl
into
pusha
fnclex
negl
rcr
pop
or
push
ret
or
inc
sub
mov
cwtl
or
push
pusha
jmp
sub
outsl
stos
es
movsl
mov
push
movsl
xchg
fcomi
lods
decb
lock
rolb
cmp
out
loopne
or
shrb
add
sti
popa
lock
add
add
std
xchg
mov
mov
int
add
fistps
add
fdivl
pop
sti
sbb
and
adc
orl
and
xor
movsb
pop
mov
mov
and
popf
push
imul
xchg
mov
push
loopne,pt
adc
xchg
jo
cmp
or
fcmovbe
and
in
push
in
mov
mov
popa
lea
dec
loop
rol
ja
and
sub
push
scas
les
push
adc
je
add
sbb
scas
loope
push
test
call
notl
pop
cmpsl
out
pop
call
sbb
cmp
cmp
les
jo
jge
shrl
xor
xor
sub
mov
sti
sbb
mov
cmpsb
mov
sbb
push
sbb
out
ds
ret
xor
int3
ret
pop
mov
adc
shll
cs
shlw
test
or
sub
iret
mov
push
push
ret
ret
pushf
aad
stc
sbb
jecxz
push
in
lea
pushf
iret
pop
aas
sub
push
pushf
push
jne
test
inc
popf
lret
insl
shl
jecxz
mov
push
iret
jo
pop
push
in
loope
loop
jg
and
test
mov
mov
push
dec
aas
push
push
cmp
push
fistl
fsubrp
add
sti
cli
sbb
cmp
mov
xchg
cmc
ficompl
pop
icebp
fdivr
mov
pushf
xchg
or
out
sub
aad
push
or
jno
test
adc
sbb
cld
push
xor
addb
cwtl
lods
mov
dec
mov
lds
lock
je
pushf
add
cmc
inc
rorb
add
mov
sbb
divb
loop
fwait
lea
cmc
push
xchg
xchg
xor
xchg
lahf
mov
lods
test
add
jp
add
pop
cwtl
shl
xchg
call
aam
nop
pop
pop
mov
incl
push
sub
mov
push
jmp
pop
lea
sub
fs
add
lret
adc
icebp
jmp
inc
int
aam
inc
pop
mov
leave
add
add
xchg
stos
das
nop
pop
insl
mov
or
pop
pop
movsb
mov
push
sbbb
lods
sbb
movsb
shl
jmp
xchg
dec
dec
jbe
pop
xor
or
mov
fists
aaa
inc
sbb
pop
lea
fucomp
outsl
lds
fadds
fwait
sbb
inc
in
sbb
fstpl
ss
push
insl
mov
sub
cmp
cwtl
out
fs
push
aas
dec
hlt
add
or
add
push
mov
iret
int
pop
pushf
mov
call
inc
aad
dec
jno
mov
adc
push
ror
subb
outsl
int3
pop
or
fcoms
add
inc
cmp
mov
pop
clc
andb
enter
fcmovbe
bound
fisttpl
nop
jmp
and
sub
popa
and
test
mov
xor
cmp
add
add
js
mov
pop
iret
jmp
loope
mov
arpl
push
dec
shlb
sub
mov
cmp
neg
rol
scas
push
ficoms
nop
rcr
push
mov
insb
addr16
or
daa
sbb
push
dec
mov
ficoml
flds
xor
mov
std
cmp
cwtl
mov
call
jne
mov
fnstenv
adc
add
mov
pop
adcl
cwtl
shrl
add
jge
orl
rorb
inc
mov
ret
inc
sub
cmpsl
insl
cld
and
sti
inc
mov
je
push
jle
sub
pop
shl
inc
push
push
arpl
mov
or
pusha
ret
inc
clc
push
pop
repnz
popa
cwtl
loop
push
sbb
jmp
shr
or
and
push
xor
sub
mov
mov
pop
nop
sub
repz
xchg
or
fisttpll
clc
add
sub
ljmp
add
fiaddl
inc
in
push
aaa
mov
cltd
into
loopne
out
cmp
ret
xchg
pushf
andb
adc
stc
push
pop
pop
cmpl
mov
inc
adc
data16
pusha
aad
add
xchg
popf
xchg
mov
shll
pop
fs
call
imul
push
xorb
stc
stos
out
sub
js
ljmp
lahf
mov
inc
mov
call
jecxz
dec
repnz
lret
addb
jge
cmp
stc
std
jno
xchg
test
jbe
int3
pop
or
xor
sub
psubb
fists
loopne
add
xor
aaa
gs
add
sub
mov
fucomip
dec
loop
adc
inc
cmp
fisubs
call
xchg
jb
ret
shrb
aam
int3
xlat
call
lods
jo
jae
inc
xchg
jb
hlt
fidivrs
inc
add
cmp
push
cmc
outsl
sbb
pop
pop
cmp
andb
mov
mov
orb
add
rorb
fisttps
or
subl
scas
xchg
or
je
xchg
dec
or
je
jnp
scas
leave
insl
add
and
mov
mov
loope
arpl
dec
add
xchg
stos
cmpsl
jmp
aaa
mov
jecxz
rcll
sti
sbb
shlb
or
push
inc
outsl
xchg
ret
stc
lret
loope
mov
addb
int3
sub
and
push
xor
jl
jle
sub
popf
outsl
dec
mov
rclb
test
adc
or
cs
test
pop
in
mov
outsl
add
sbb
ja
sbb
pop
adc
mov
pavgw
pop
sub
inc
and
out
ss
in
add
xchg
insl
popa
mov
aas
test
ret
push
int3
xchg
mov
sbb
ds
jne
jb
push
imul
push
je
pop
adc
xchg
jecxz
mov
dec
add
add
jns
or
add
adc
xchg
cmp
add
verw
add
sub
test
rclb
and
fs
adc
sbb
push
add
cmp
aaa
data16
je
outsb
addr16
inc
outsl
insl
insl
dec
punpcklwd
sub
inc
outsb
in
imul
adc
push
push
add
outsb
push
pop
mov
mov
push
add
inc
js
jge
std
ljmp
aas
aas
xor
inc
push
inc
pop
dec
inc
pop
or
pop
pop
push
or
pop
xchg
fistpll
jb
or
jns
mov
sub
pop
pop
rclb
pop
add
jb
or
pop
data16
lea
jae
pop
outsb
das
dec
mov
jle
pop
pop
lods
ja
adc
daa
sahf
mov
insl
arpl
jae
sub
pop
adc
js
je
popa
xor
pop
push
daa
outsl
imul
mov
sub
xor
mov
jns
insl
imul
or
or
clc
ja
jo
je
inc
or
decl
add
adc
push
adc
sbb
or
push
or
or
add
decl
or
das
adc
sub
or
push
or
or
adc
push
add
adc
syscall
or
lods
insl
in
adc
and
adc
add
and
mov
inc
sbb
pop
or
add
pushl
mov
adc
es
or
push
mov
inc
adc
push
push
or
adc
cmp
adc
add
adc
or
push
pcmpeqw
outsl
pop
divl
adc
lcall
jbe
call
cmp
aas
push
pop
mov
or
pop
faddl
dec
pop
and
in
fisubs
adc
and
lds
ja
xchg
adc
add
or
movsl
mov
or
in
adc
or
mov
adc
fdivl
or
add
daa
xor
sti
and
pop
push
sbb
sbb
adc
or
sbb
and
sbb
lea
or
pop
sti
jbe
jbe
pop
shrl
pop
or
and
or
mov
lock
pop
adc
adc
negl
addr16
fs
adc
push
mov
lods
cld
gs
add
adc
adc
incl
lahf
push
adc
adc
xor
add
mov
call
daa
adc
rcrl
out
outsb
dec
das
or
or
sysret
int3
inc
or
push
pop
imul
or
push
dec
adcl
or
shlb
push
pop
mulps
loopne
mov
sbb
push
and
or
lret
fldcw
and
or
pop
cld
push
and
ss
pusha
dec
add
push
and
and
jg
mov
dec
pop
sbb
adc
cmp
or
js
or
add
sbb
mov
mov
daa
jbe,pt
adcb
or
add
adc
adc
add
sub
or
aaa
imul
sbb
subl
movsl
push
pop
fistps
and
inc
adc
pop
pushf
pop
xchg
mov
add
movsb
ja
lea
outsb
lret
or
pxor
push
cmp
pusha
adc
or
scas
xchg
in
or
adc
adc
adc
ret
push
pop
orl
pop
mov
pop
ret
or
imul
or
subb
push
dec
insl
imul
push
push
and
pusha
iret
or
sbb
and
sbb
test
cmpsb
adc
insl
add
adc
adc
pop
or
fstl
inc
adc
pop
ret
add
pop
test
aad
cmpb
add
add
faddl
pop
xor
mov
add
lret
mov
sbb
ja
or
xor
inc
icebp
sbb
es
ret
mov
jbe
repnz
add
and
sbb
pand
enter
lcall
call
mov
lock
or
or
inc
int
lock
mov
sbb
xor
daa
sbb
fists
sub
add
fadds
loope
or
add
insl
and
add
cmp
outsb
lods
fisttpl
subb
push
mov
fisubl
sub
sbb
sbb
or
adc
lea
dec
and
fistpl
add
pop
add
inc
icebp
ret
imul
push
xchg
loope
pop
ror
and
jle
dec
test
inc
mov
push
add
or
push
clts
or
jne
adc
or
iret
or
or
and
adc
or
pushf
pushl
or
lock
cmp
xchg
dec
sub
adc
adc
and
icebp
dec
ljmp
xchg
pop
adc
fwait
xor
push
sub
pop
cmp
cmp
jle
pushl
movsb
pusha
sub
inc
sbb
xor
xor
or
incl
das
and
xchg
imul
and
and
or
lahf
dec
mov
js
mov
orl
cmp
push
push
inc
popf
or
decl
negb
dec
dec
pop
or
xor
pop
aaa
arpl
mov
xor
pop
dec
lods
or
ljmp
lret
push
push
sbb
mov
sbb
adc
and
cmp
mov
and
sub
imul
push
sub
aam
cmp
inc
cmpb
psubw
sub
push
inc
mov
cmp
dec
loopne
sti
mov
or
push
add
aaa
pop
adc
in
cmp
movsb
nop
adc
adc
pop
inc
mov
daa
sub
fstps
push
xor
and
inc
add
orb
mov
pusha
inc
sub
je,pn
divb
movsl
and
filds
int3
ds
lock
jb,pn
out
or
pop
enter
add
sbb
adc
pop
daa
rolb
sti
inc
dec
xor
arpl
push
push
add
jl
into
pop
pusha
add
xor
xlat
and
add
and
rorl
and
and
ja
jae
sbb
pop
inc
test
add
inc
jae
add
add
add
add
jne
pusha
mov
lea
push
or
jmp
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
popa
xor
ret
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
