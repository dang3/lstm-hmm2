fcos
add
pop
add
add
fcos
add
add
add
add
mov
negl
dec
inc
jmp
inc
out
std
pop
lea
daa
mov
inc
mov
jb
jns
add
xchg
int3
daa
or
rclb
test
or
stc
es
cltd
inc
adc
jle
aas
inc
adc
ds
mov
jns
lods
fwait
icebp
xchg
jno
cmp
or
inc
xor
decl
shl
cltd
clc
push
mov
lds
inc
mov
mov
cmpl
adc
fwait
xchg
std
mov
jno
fnstenv
std
adc
jnp
popa
inc
lds
cmpsl
dec
sub
mov
xlat
imul
fsts
inc
aad
lahf
lock
dec
roll
dec
cmp
outsl
mov
cmp
das
pop
cld
lock
mov
pop
and
push
mov
gs
adcb
icebp
jg
or
lcall
ret
mov
lahf
or
mov
adc
xchg
rclb
pop
inc
and
sbb
push
xchg
cmpsb
stos
mov
push
cmp
call
inc
mov
clc
cmp
jle
adc
lret
pop
add
mov
push
shll
or
dec
jbe
dec
push
inc
fsts
jb
cmp
gs
in
iret
push
movsb
stos
lret
add
int3
pop
in
lea
mov
in
mov
sbb
pop
xchg
test
cs
jnp
push
imul
pop
push
mov
push
inc
dec
popf
xchg
push
test
jno
mov
fisttps
or
jne
push
fwait
loop
mov
mov
int3
sbb
xor
mov
dec
aas
test
xor
jbe
cmpsb
repz
pushf
mov
jo
aad
inc
jl
insl
xchg
aaa
popl
adc
scas
inc
nop
negb
pop
mov
inc
out
mov
jbe
xlat
inc
and
adc
stc
mov
jo
loopne
fildll
shrb
mov
movsb
sbb
push
dec
mov
cli
cmp
xor
enter
pop
cltd
pop
adc
arpl
daa
mov
stos
fisubl
mov
pop
pop
icebp
fwait
xchg
in
shlb
mov
cltd
dec
push
pop
xchg
in
insl
call
mov
xchg
mov
popf
jecxz
bound
inc
loope
mov
mov
cmpsb
or
xor
push
xchg
inc
shl
in
or
pop
mov
loope
js
sub
call
pop
jnp
in
inc
gs
loop
movsw
in
mov
xor
pop
xor
test
jo
xchg
xor
cmp
mov
pop
icebp
cs
pop
test
lret
sub
cmp
nop
xchg
vshufps
stc
lret
test
ja
imul
leave
xor
movsb
inc
ret
repz
dec
shlb
xor
adc
cld
sbb
dec
or
adc
inc
test
fcoms
test
adc
pop
mov
sub
sbb
mov
testl
push
das
xor
adc
xchg
push
sub
loop
cmc
dec
xchg
xchg
push
aaa
ljmp
bound
repz
sbb
push
jb
add
mov
jb
jne
addr16
sarl
xchg
xor
iret
lret
xor
push
mov
sarb
and
lock
out
cmpsb
out
push
cmp
mov
sbb
sbb
and
hlt
lods
pop
xchg
jecxz
dec
adc
popa
fnstcw
mov
sub
xor
xchg
sahf
sbb
jo
adc
xchg
and
inc
fcompl
out
lds
xlat
rclb
cmc
sarl
cwtl
arpl
jp
or
out
cmp
imul
out
sahf
push
xorb
cmpsb
cmpsl
or
pop
lock
inc
or
addb
cmp
das
sub
mov
mov
fisttpll
sbb
mov
mov
es
fbld
loope
inc
lret
or
jno
sahf
daa
jno
int3
test
pop
test
pop
daa
sbb
pop
sbb
mov
cltd
and
imul
and
inc
add
xchg
jne
adc
lcall
xor
push
out
mov
shrb
jmp
mov
gs
inc
or
add
test
nop
addr16
loop
dec
sbb
fcoms
mov
ljmp
fcomps
xor
sahf
shlb
and
test
fimuls
icebp
pop
out
inc
push
mov
add
lds
adc
hlt
inc
movsb
cmp
and
jnp
xor
lods
stos
mov
stc
ljmp
jecxz
push
lcall
mov
sub
rcll
aam
daa
sbbb
daa
inc
push
aad
xor
inc
gs
inc
in
cmp
xchg
push
mov
sub
sbb
cmp
fsubs
add
pop
mov
out
testb
fdivl
outsl
rclb
scas
sub
xlat
lret
sub
cltd
icebp
mov
rclb
xchg
sub
pop
pushf
imul
subb
scas
insl
cli
les
jle
loope
jo
pushf
jnp
daa
mov
iret
mov
cli
or
pop
jnp
insb
lods
push
out
icebp
mov
mov
cmpsl
data16
adcl
push
jecxz
mov
xchg
mov
pop
je
les
adc
jg
stos
call
lock
dec
nop
sub
cs
movsb
clc
pop
xchg
lods
movsl
jae
mov
movsl
mov
dec
mov
push
push
sbb
ds
fldenv
enter
sti
lods
jbe
mov
out
jb
jno
fadd
jo
addb
add
lea
lahf
and
mov
pop
push
push
add
mov
sarb
stc
popf
fbld
into
je
jp
mov
jo
xchg
inc
mov
lods
jne
and
test
mov
mov
cmp
or
les
movsl
mov
push
cs
movsl
lods
int3
adc
push
dec
mov
inc
aad
pushf
mov
inc
popf
adc
loop
mov
sar
mov
jl
fmull
insl
inc
out
inc
mov
add
push
adc
xor
pop
mov
call
scas
and
mov
fwait
push
mov
int3
push
sbb
jns
pop
pop
outsb
push
daa
mov
je
cmp
mov
jmp
adc
sbb
inc
int3
and
push
mov
or
cmp
stos
xor
dec
pop
dec
jl
test
jne
inc
out
push
bound
mov
add
ljmp
and
cltd
shrl
lds
out
popf
and
sbb
push
xchg
jmp
fcompl
imul
jmp
push
cmc
sbb
adc
add
mov
mov
pop
push
test
movsb
push
fisubl
leave
or
push
sbb
ljmp
mov
push
cmp
shrb
lret
lock
jle
out
sbb
add
addr16
lods
pop
lock
shlb
lods
jne
mov
loopne
push
icebp
bound
inc
ds
lret
mov
cld
das
fmul
or
fcomps
fs
cmp
mov
addr16
stos
cmpb
ret
cli
repnz
xorb
ret
cmp
mov
mov
xchg
les
test
out
mov
jne
int
jl
jle
jnp
push
dec
adc
enter
in
jno
dec
addr16
sub
mov
xchg
mov
les
jo
outsl
push
xor
clc
pusha
cmp
fsts
cmp
lahf
and
sbb
imul
dec
nop
aaa
loopne
orb
test
es
dec
loop
not
sti
roll
push
loop
push
inc
xchg
fs
jno
repnz
pushf
mov
add
test
jmp
add
rcrb
outsb
rcll
repz
and
push
mov
mov
adc
mov
pop
mov
test
xor
add
xor
mov
inc
cltd
jne
das
push
test
ds
push
repnz
xchg
jg
sub
xchg
js
push
in
fisttps
leave
jg
jne
aaa
test
dec
stc
enter
and
cmp
push
mov
pop
cmp
fildll
xchg
lods
and
loopne
sub
pusha
xor
lahf
test
jge
fisubrs
push
nop
sar
or
frstor
adc
xor
xor
pand
add
out
push
and
cmc
out
mov
inc
jecxz
int
aam
sbb
push
icebp
inc
out
imul
jmp
mov
sub
lock
into
pusha
add
sbb
push
outsb
ljmp
and
push
push
into
mov
xor
lea
fldenv
add
insl
pop
mov
sbb
leave
dec
add
and
inc
mov
or
jb
xor
sbb
js
inc
shl
add
fidivl
popa
dec
fs
push
mov
mov
dec
bound
movsb
fisubs
ja
sbb
and
arpl
inc
mov
mov
ret
inc
mov
movsl
testl
jge
dec
xchg
test
dec
xchg
in
push
inc
fucom
push
pop
lock
xchg
pop
pop
sbb
mov
lcall
xor
sbbl
lea
bound
mov
lcall
insl
mov
in
or
pop
lret
gs
neg
pushf
imul
outsb
add
lret
lea
jle
mov
aad
int3
xchg
xchg
repnz
xchg
movsl
clc
int3
in
sbb
movsl
ret
and
jle
fdivrs
pop
out
outsb
jnp
sub
divl
sbb
add
loopne
sub
jmp
jg
loop
sbb
mov
inc
push
movsl
cmp
test
dec
xchg
xchg
add
xor
mov
sbb
out
das
xor
and
push
mov
dec
dec
add
lods
aaa
jne
xor
add
jecxz
add
push
scas
iret
mov
test
loopne
dec
fsubl
cmpsl
add
jg
in
sahf
push
cmc
mov
ja
inc
dec
dec
push
lahf
aas
loope
ss
inc
and
sbb
xor
fsts
pop
aad
daa
mov
cmp
mov
xlat
mov
out
jecxz
dec
mov
mov
pop
sub
sti
mov
aam
rclb
pushf
xor
ja
leave
and
adc
sub
int3
test
inc
into
in
outsl
xchg
ljmp
fdivp
cmpsb
mov
or
scas
pop
dec
sbb
inc
pop
jae
cmp
add
mov
dec
and
jmp
and
sub
mov
aaa
mov
daa
dec
dec
shrl
js
lds
scas
mov
lea
loop
stos
pop
loop
xchg
adc
inc
sbb
push
lcall
jl
mov
cmpsl
test
xchg
mov
mov
test
in
and
sbb
cwtl
mov
push
mulb
push
daa
pop
xlat
stos
push
divb
movsb
xor
rorl
mov
adc
in
imul
xchg
jb
je
mov
sbb
inc
mov
sub
sbb
leave
sti
das
in
xchg
out
mov
mov
pop
and
fildl
mov
sbb
ret
sbb
mov
and
xchg
add
scas
loop
bound
sub
fcomi
mov
xchg
push
cmc
dec
xlat
call
mov
jmp
pop
out
clc
adc
imul
fwait
adc
mov
shrl
insb
fwait
mov
insl
fwait
in
jmp
xchg
movsl
cmpsl
repnz
mov
out
pop
mov
test
lret
push
inc
es
daa
jecxz
lods
fadds
and
sub
push
add
mov
sub
cmp
into
cmp
or
jmp
pop
jns
icebp
cmp
div
mov
dec
rorb
or
cmp
test
dec
cmp
lds
cmp
add
push
dec
pop
into
push
fwait
push
aas
inc
inc
fimull
mov
pushf
lock
xchg
lods
sbb
faddl
lea
and
push
mov
lret
mov
jb
insl
pop
push
inc
mov
int3
int3
xorb
out
test
push
xchg
pop
xchg
cmpsl
jno
psubsw
jb
imul
mov
xchg
adc
jo
jb
xchg
push
rcrb
sub
das
cmpb
and
lahf
jp
das
adc
mov
outsl
fucomip
aam
out
jmp
cmp
mov
cmp
adc
push
clc
jns
add
aam
test
mov
shrb
test
or
mov
dec
ds
sbb
aas
icebp
js
jo
and
in
in
push
cmc
mov
dec
sub
add
and
jp
inc
scas
or
pop
jle
lods
mov
mov
jno
mov
popf
pop
cmp
fimuls
je
pop
mov
jmp
rcrl
sbb
jmp
cmp
adc
mov
addl
dec
shlb
test
insb
fucomip
scas
es
inc
cmp
shr
popa
pop
test
insb
lods
inc
aam
lods
lds
push
xchg
mov
and
adc
daa
mov
or
xchg
cld
int3
push
xchg
jmp
jnp
scas
ficompl
dec
push
out
fistl
push
call
mov
jle
loope
ss
lock
mov
repz
and
pop
scas
stos
ret
sbb
jno
dec
addl
fs
hlt
out
aad
fdivs
adc
incb
sub
sub
popf
sti
xor
cmp
in
fcoml
fnstenv
aad
pop
dec
push
popl
popa
andb
flds
push
cmc
leave
cltd
ljmp
rcrl
push
outsl
jbe
xor
sub
lcall
imul
ds
test
sarl
scas
xchg
jae
cmpsl
or
iret
and
mov
lahf
lds
sbb
push
rcll
cld
pop
push
andl
fisubrs
in
call
inc
je
lds
cmp
popf
dec
scas
push
dec
lea
or
std
inc
aas
andl
test
xor
bound
cmc
rcrb
sbb
jo
adc
pop
add
int
xor
dec
ljmp
pusha
or
scas
addl
jmp
pushf
fisubrs
push
jb
ja
dec
sbb
cmpsb
mov
icebp
ret
cmp
sbb
movsl
pop
push
lret
push
push
pop
mov
mov
sub
push
mov
push
mov
pop
scas
js
call
sarb
mov
stos
mov
je
push
insb
xlat
fbstp
mov
sub
mov
mov
push
rcll
daa
inc
popa
repz
ljmp
sub
mov
push
aad
mov
xchg
lret
out
addl
paddd
lods
imul
inc
shr
mov
cmpsb
mov
repnz
mov
jmp
roll
sub
push
mov
lret
push
dec
ss
pop
mov
xchg
mov
pushf
mov
push
cld
push
adc
xor
pop
cmp
in
sbb
mov
sbb
inc
adc
sub
stos
decl
xchg
test
repz
dec
push
arpl
jb
push
shll
and
int3
jle
add
into
cmp
rclb
in
jo
adc
lea
jle
test
jg
add
lcall
mov
cmp
sbb
jae
mov
stos
mov
in
pop
sub
les
xchg
lret
rolb
aaa
adc
mov
xor
sahf
je
ds
push
into
insl
push
cwtl
movl
mov
push
repz
cmc
sbb
aaa
jnp
in
addr16
es
jmp
add
mulb
jp
iret
xchg
cmp
mov
cmp
fcomps
sub
mov
push
mov
dec
jnp
leave
inc
pop
rolb
lods
rorl
xchg
test
in
daa
mov
dec
sub
push
mov
or
xchg
pop
inc
jge
xor
mov
clc
sbbb
cld
pop
sti
into
out
int3
iret
mov
inc
xchg
shl
lods
pusha
jns
es
scas
lds
sub
adcb
jecxz
pop
xchg
js
pop
in
add
sbb
addr16
in
stos
imul
nop
pushf
sub
dec
or
ja
jecxz
mov
xor
stos
xchg
fwait
inc
out
xor
mov
test
loopne
jbe
mov
pop
xor
ror
mov
dec
fisubl
cmp
mov
rcr
jb
cmpsl
xchg
in
push
cld
sbb
pop
out
push
sahf
shr
and
lcall
insb
xor
mov
push
push
lds
shrl
sub
mov
add
push
push
dec
mov
hlt
pop
mov
cmpb
das
dec
icebp
repnz
arpl
outsb
dec
into
mov
insb
mov
and
sahf
adc
pop
jmp
insb
lahf
inc
adc
sub
mov
cmp
cwtl
pop
popf
sub
test
pop
inc
or
and
call
xchg
cs
pop
inc
jp
adc
cli
mov
pop
or
pop
jl
aas
dec
push
lods
jne
lea
jg
mov
lods
push
dec
xchg
pop
mov
and
shr
sub
mov
daa
sbb
int3
sbb
cld
int
fxch
mov
sub
dec
scas
imul
add
aam
or
idivl
cwtl
jo
jae
std
dec
repnz
xchg
pop
sbb
xchg
dec
ja
mulb
dec
xor
sub
xchg
pop
outsb
jmp
mov
sub
mov
ja
clc
ljmp
std
cmpsl
adc
call
jnp
xor
cwtl
cmp
or
lcall
mov
inc
call
fcmovne
aaa
nop
out
test
or
sar
in
sbb
ds
jecxz
pop
out
cmp
stos
jmp
xor
xchg
out
mov
mov
xor
into
mov
cmp
aas
in
mov
stos
jae
sbb
loop
pop
std
cmp
mov
arpl
or
enter
jg
xor
bound
lock
jmp
mulb
push
xor
sbb
cmp
adc
ja
aam
jge
imul
lds
dec
cli
sbbb
mov
jp
std
xor
ret
nop
addr16
dec
rcll
pop
adc
js
pop
mov
sbb
xchg
pushl
imul
mov
into
icebp
sub
add
in
jne
pop
outsl
lret
xchg
aad
add
add
mov
inc
add
das
mov
orb
popf
mov
mov
or
and
popf
stos
and
imul
jl
pushfw
repz
shll
xchg
call
insb
shrl
lock
xchg
jns
dec
ds
aas
jp
imul
or
inc
sub
jb
xchg
in
clc
xor
pop
inc
call
pop
lea
adc
push
mov
jbe
ja
mov
add
inc
xlat
xor
das
mov
stos
jg
sub
div
xchg
pop
ljmp
mov
mov
mov
pop
cli
mov
bound
add
add
pop
inc
xor
mov
std
adc
push
je
repnz
sbb
dec
lcall
je
pushf
cmp
sbbl
xor
mov
std
rcrl
addr16
cmpsb
in
imul
lock
filds
loopne
push
ret
dec
imul
pop
jmp
mov
imul
mov
lcall
outsb
xchg
cwtl
loope
out
lods
insb
inc
dec
mov
aad
xlat
pop
dec
inc
imul
adc
pop
shlb
mov
and
cmp
ljmp
out
pop
es
movntps
adc
jp
pushf
fwait
mov
lods
shll
mov
pop
shll
mov
jae
insb
add
lret
add
adc
mov
out
in
and
adc
adc
inc
push
inc
mov
xchg
sbb
sub
mov
mov
xchg
dec
loop
lret
mov
fmull
adc
pop
pop
aaa
inc
in
test
ljmp
jg
call
das
popf
out
push
cmp
or
lds
xchg
jno
mov
ja
or
xor
movsb
jnp
add
xchg
jo
test
cmc
or
out
jne
cmp
jb
popa
xchg
xor
and
lock
sahf
jmp
cltd
gs
xchg
enter
les
mov
mov
jnp
cmp
mov
lock
xor
clc
add
cwtl
popa
and
inc
jecxz
push
scas
outsb
pop
cmp
dec
decl
mov
roll
sbb
rcrb
cmp
dec
test
stc
and
cmc
jl
fsts
test
js
sbb
cmp
add
pop
std
or
imul
stos
inc
push
push
xor
lcall
jge
fsubrl
xor
std
adc
pop
repz
aaa
xchg
lahf
leave
sbb
jp
add
clc
pop
dec
nop
fs
aam
add
xchg
dec
push
das
int3
mov
fsin
push
pop
sbb
inc
mov
ljmp
jbe
pusha
fdivl
cmpsl
and
ja
sub
jp
dec
fadd
inc
xchg
jg
fwait
mov
jne
stos
das
jo
pusha
adc
pop
cltd
imul
mov
mov
loope
push
shlb
push
sti
in
sub
movsl
jle
or
loopne
sub
pop
or
xchg
push
adc
lea
jmp
bnd
push
pop
bound
cmp
gs
out
in
or
or
mov
fnstenv
add
test
movntps
in
xlat
sahf
shl
icebp
mov
mov
dec
mov
adc
pop
inc
dec
cmp
cmp
pop
dec
popa
xchg
sbb
fistps
xor
testb
adc
inc
aam
xchg
leave
or
mov
imul
ffree
arpl
sarb
sbb
hlt
jno
rcll
sub
loopne
ljmp
push
movb
push
or
push
ret
cmp
xor
xlat
jo
fstps
test
fwait
stc
pop
xchg
arpl
push
pop
aam
dec
jae
xor
pop
lret
shll
lahf
jle
in
xchg
mulb
and
movsb
jmp
iret
rcl
mov
adc
mov
cmpb
cmp
fsubrs
mov
int
jge
sub
inc
nop
xchg
movsb
jo
scas
jl
push
mov
stc
inc
inc
and
inc
sbb
fstpt
jb
gs
push
jmp
push
push
inc
xorb
xor
mov
iret
push
out
xchg
mov
mov
sbb
sub
sub
pop
xchg
and
arpl
xchg
cli
test
jl
cltd
rcll
push
xchg
xchg
test
movsl
push
stos
or
lods
dec
mov
add
pop
std
addb
in
sbb
movsl
jno
sub
lret
mov
or
lods
outsb
in
stos
xor
repz
add
jns
push
jle
mov
add
movb
cwtl
pop
jae
ficoml
lcall
inc
add
addps
fstl
scas
push
cmp
fisttps
mov
dec
insl
out
in
pushf
push
mov
loope
and
xor
mov
fcomps
pop
out
adc
loop
sub
dec
adc
insl
sub
pop
pop
in
mov
sahf
pop
sub
sar
dec
ret
sub
dec
leave
loop
dec
jmp
pop
dec
insl
call
imul
idivl
sub
xor
dec
rol
sbb
test
dec
or
mov
mov
lock
dec
loopne
jo
outsb
aaa
mov
sahf
xor
lret
cs
pop
out
pop
jge
push
or
leave
push
movsb
lea
dec
test
mov
xchg
dec
orb
push
lds
adc
aam
jne
mov
enter
nop
push
jnp
sub
test
or
orl
out
stos
aam
push
ja
addl
ret
popf
or
int3
pusha
shlb
adc
adc
pop
push
push
sahf
out
pop
subb
out
xor
notl
lods
push
int3
dec
addr16
roll
or
adc
movsl
adc
pop
xchg
mov
fwait
pop
ds
lock
movsb
push
mov
ss
imul
pop
push
add
fstp
push
gs
repnz
ffree
xchg
adc
sbbb
sahf
adc
adc
andb
js
cmpl
or
cmp
xchg
ss
push
adc
or
jg
cmp
push
pushl
hlt
mov
dec
jle
ficompl
xchg
inc
pop
xchg
imul
sarb
int3
repz
fstpl
les
sbb
ss
popa
icebp
mov
jo
sub
insb
mov
dec
mov
mov
dec
arpl
stos
in
jo
xchg
push
mov
hlt
repz
push
pop
xchg
fdivrp
push
lcall
lahf
rorl
mov
lods
xchg
ret
dec
and
and
fdivrl
add
cwtl
adc
push
mov
mov
add
les
clc
cwtl
xor
mov
sub
mov
mov
repnz
jae
lock
and
es
rcrl
mov
jge
das
cwtl
mov
in
mov
ficomps
out
es
repnz
push
stos
movsb
ret
std
cmc
push
inc
orb
nop
inc
push
fcoms
fwait
les
hlt
xchg
xlat
sbb
sbb
lahf
pop
jo
loop
fdivs
lods
xor
jmp
in
loope
dec
push
or
mov
addr16
aam
int
imul
aas
pop
cmp
sbb
fnsave
jl
adc
xor
inc
mov
mov
lock
inc
data16
movsb
xchg
iret
xchg
add
ds
scas
fists
and
xor
xor
lods
std
vpcmpeqd
ret
ret
mov
pop
clc
sub
pop
cs
roll
mov
lds
lcall
stos
jo
pop
int
sub
out
fimuls
dec
sar
mov
jae
ss
cwtl
mov
pop
jo
aad
lcall
cli
jnp
cmp
mov
xlat
or
push
loop
popa
inc
pop
mov
push
stos
je
push
inc
inc
mov
cmp
out
js
cld
xchg
cmovae
jg
data16
mov
jnp
loopne
rorb
adc
dec
cmp
inc
sahf
jbe
stc
xorl
int
test
or
addr16
les
mov
rclb
leave
filds
aaa
inc
outsl
mov
push
cmc
leave
mov
popf
push
xlat
jp
arpl
and
in
popa
ja
push
pop
cmc
sub
in
mov
rcr
mov
mov
add
adc
mov
js
pop
out
hlt
adc
scas
sahf
jl
xchg
dec
jb
leave
inc
jae
in
andb
push
cmp
dec
cwtl
into
xlat
int
or
lock
inc
lods
inc
pop
test
les
aas
push
lahf
mov
xchg
sub
push
mov
xchg
enter
adc
sbb
inc
ss
or
popa
imul
fwait
out
lods
and
jge
mov
fwait
movsb
inc
and
sub
xor
call
jmp
mov
scas
fsubrs
fldcw
pop
incb
add
popa
xor
insb
pandn
dec
add
mov
adc
cmpsb
mov
mov
lods
popa
lret
xor
add
fldenv
aam
pushf
add
xor
ficoml
sarl
add
cli
add
les
testb
adc
cmp
jnp
jmp
xchg
arpl
xchg
pop
inc
sbb
ret
adc
icebp
jge
push
loopne
int
sub
movsb
bound
add
mov
dec
bound
pop
adc
push
adc
clc
loopne
inc
or
push
test
fstpl
jne
xchg
lcall
shl
sub
cmpsl
pop
addr16
jbe
and
jae
daa
mov
jnp
push
cmp
shll
rcrb
das
aad
bswap
pop
xchg
in
aam
mov
ss
or
sub
mov
cltd
es
adc
lcall
repz
mov
xchg
movsl
xor
loope
clc
popa
push
push
sbbb
xchg
imul
aas
xchg
xor
adc
mov
mov
sub
adc
lret
pop
ret
xor
repz
xchg
repz
pop
or
repz
sti
gs
add
lds
in
jo
gs
mov
in
pop
xchg
xchg
cmp
out
fs
mov
mov
fs
das
xor
popf
test
inc
pop
nop
mov
jns
pop
xlat
rclb
out
sub
inc
jg
cmpsl
ljmp
pusha
das
jmp
das
sub
sub
mov
sbb
jmp
cmp
jno
sti
cs
andl
mov
pop
xchg
pop
add
adc
loopne
push
sti
in
sti
sub
or
push
mov
sbb
imul
push
ja
xlat
cmp
push
jmp
jns
and
aad
adc
add
insb
push
add
lcall
jle
mov
faddl
fsubp
xchg
aam
enter
add
mov
add
mov
or
notl
push
adc
popa
xchg
push
cld
push
cld
push
test
imul
mov
ret
cwtl
lahf
adc
rcr
pop
scas
jg
mov
xchg
aad
pop
fistpl
dec
shl
sbb
push
jmp
dec
js
or
xor
xchg
sbb
lods
pop
fdiv
popa
pop
int3
push
push
push
iret
mov
rcrl
xor
fcoms
fs
adc
push
jo
cmp
jl
jmp
icebp
repz
sub
dec
mov
mov
add
dec
aad
in
lock
icebp
sarl
mov
dec
movsl
push
mov
testl
out
mov
movsb
lea
cltd
scas
lods
pop
mov
rcll
mov
dec
mov
ret
insb
mov
shll
aam
mov
shrb
dec
sarl
iret
push
in
into
rorl
xchg
mov
pusha
push
lds
mov
or
jmp
add
dec
xchg
nop
sbb
xor
enter
sub
cltd
ret
pop
test
cmp
es
inc
out
jne
lds
dec
lahf
add
ffreep
add
inc
mov
xchg
inc
sub
loopne
jbe
clc
push
fstps
push
cmpsb
enter
jns
add
dec
insb
inc
fidivrs
ljmp
nop
inc
xchg
insb
xchg
aas
mov
es
pop
push
and
mov
adc
and
out
push
add
xchg
fildl
mov
aas
adc
jns
xor
lcall
xor
lock
mov
sub
xor
decb
cmp
add
pop
push
cmp
std
lods
inc
push
insl
stos
push
dec
aas
add
mov
sbb
imul
mov
pop
dec
cmp
jae
out
lds
push
push
cs
push
pop
mov
jmp
test
xchg
mov
test
loop
clc
mov
push
fnsetpm(287
mov
imul
jb
or
je
pop
mov
pop
cwtl
push
fiaddl
xchg
scas
stc
orl
pop
dec
std
push
es
call
adc
mov
shrl
in
xchg
jecxz
sub
test
pop
push
push
and
scas
add
js
lock
sub
imul
xor
pop
mov
or
pop
mov
dec
mov
lods
mov
or
mov
pop
xor
or
jle
pusha
inc
jg
cmpsb
adc
popa
inc
mov
mov
push
xchg
mov
fimuls
lea
cs
mov
aam
div
mov
push
sub
cmp
jo
in
loopne
pop
mov
sbb
movsb
loopne
push
push
out
and
sbb
fcoms
bound
mov
mov
jl
sbb
xor
push
pop
decl
outsb
mov
xor
add
xor
adc
jmp
mov
mov
gs
lret
ljmp
lahf
shrl
leave
add
das
aad
mov
add
stos
xor
mulb
add
subl
mov
in
js
mov
lcall
pop
cmp
repz
mov
lcall
jbe
mov
sarl
pop
dec
sub
out
popa
pmullw
sbb
mov
pop
fidivrl
aam
cmp
jg
insb
xchg
fiaddl
andl
sti
add
ljmp
fidivrs
push
test
add
sub
xchg
or
sbb
fidivrl
lea
mov
push
data16
and
stos
sbbl
inc
sahf
dec
and
jnp
dec
mov
xchg
ljmp
push
jp
pop
jmp
test
rclb
add
mov
scas
lds
pop
xchg
push
icebp
iret
in
int
pop
test
jne
clc
adc
pop
sbb
bound
out
or
mov
insl
and
out
outsb
int3
hlt
cmp
fmuls
push
xchg
cs
test
sbb
fstl
sub
push
lret
and
xchg
mov
dec
data16
adc
in
or
push
xchg
xchg
imul
sub
addr16
clc
lds
cmpb
pusha
xchg
push
into
faddl
int3
inc
arpl
cmp
add
fistpl
ss
lret
inc
adc
in
jno
dec
arpl
mov
adc
adc
adc
mov
inc
adc
cmp
inc
mov
inc
imul
and
rclb
mov
add
sbb
lea
sub
adc
mov
loope
stos
fwait
push
mov
xlat
les
pop
je
adc
push
xor
insb
push
sahf
xchg
mov
mov
sahf
lcall
fwait
lcall
shl
push
ret
jno
mov
outsl
adc
outsb
notb
push
jb
xchg
mov
inc
punpckhbw
push
and
xor
repnz
dec
mov
mov
xchg
xor
jmp
into
dec
fcomps
or
xchg
popf
mov
mov
lock
scas
flds
iret
imul
je
xchg
mov
cmp
lods
mov
add
dec
pop
loope
cld
xchg
ror
das
bnd
lods
xlat
push
mov
or
jnp
xchg
outsl
fwait
push
test
mov
imul
imul
xchg
mov
jle
in
sarl
fucom
xor
icebp
pop
add
xchg
les
test
lret
ds
int
cltd
cmpsb
inc
mov
xor
inc
cld
jecxz
push
ljmp
mov
hlt
sbb
aam
cli
in
pop
lahf
test
call
jmp
das
mov
mov
sub
shr
inc
mov
xchg
daa
sbb
nop
lret
bound
jp
mov
sub
push
cmc
rcrl
inc
xchg
mov
inc
arpl
jg
jmp
jb
fnstsw
ja
add
inc
rolb
ljmp
lods
cmc
pop
dec
in
sbb
lcall
mov
mov
aas
call
add
test
pusha
mov
cmpsb
pop
insl
mov
sub
jne
add
adc
jg
cmpsb
inc
lcall
cmp
pop
jb
jae
leave
pop
in
enter
xlat
mov
out
je
mov
add
xchg
outsb
adc
jle
bound
and
in
push
cmp
jg
loopne
cltd
testb
rolb
fwait
pop
xchg
icebp
cmpsl
mov
pusha
sub
inc
inc
lcall
outsl
add
lea
ja
dec
movsl
sbb
aam
dec
mov
cli
loop
in
cmp
push
test
mov
sub
jmp
sub
pop
cmp
pop
adc
jne
js
mov
sbb
or
cmp
push
xor
jno
jmp
mov
clc
icebp
sbb
daa
and
push
ss
pop
cmpsb
insl
sbb
in
push
mulb
es
ret
mov
loopne
mov
aad
push
jge
xlat
cmp
inc
icebp
mov
das
sahf
sub
xlat
loopne
mov
and
mov
push
out
dec
rorl
and
xchg
rorb
cmp
adc
push
cwtl
push
hlt
mov
and
xchg
add
jnp
cmpsl
out
jo
lock
adc
addl
cmp
cmp
cld
lds
jae
and
ljmp
movsl
out
cmp
test
mov
jp
loop
jbe
mov
jmp
mov
outsb
xchg
cwtl
xor
adc
push
xchg
mov
test
cmp
stos
cmp
fbld
repz
push
add
xor
mov
sub
add
push
pop
rcl
lds
test
outsl
push
pop
adc
out
outsl
sub
test
push
scas
addl
mov
fidivl
push
lds
sbb
in
popa
add
adc
jae
inc
outsb
mov
cmp
push
xchg
mov
loopne
add
pushf
sub
lfs
movsl
lea
mov
and
jecxz
jl
jl
mov
xlat
dec
xchg
jae
mov
out
sub
jmp
mov
loopne
dec
negl
jle
cmp
or
shrl
ljmp
jnp
test
cwtl
daa
inc
and
mov
mov
aaa
loopne
jns
sub
loopne
loope
push
in
push
in
mov
and
push
aam
rolb
es
shl
jno
sub
xor
sbb
cmp
fidivs
mov
subl
or
and
inc
or
push
inc
je
callw
sub
cmpsl
inc
xchg
aas
jg
xchg
mov
push
decb
xchg
xchg
inc
cmpsb
jb
ljmp
imul
fs
adc
cmpsl
inc
lods
cmp
xchg
jne
mov
pop
push
push
roll
push
imul
ljmp
sub
pop
dec
leave
popf
pop
js
pop
es
xor
inc
pop
ret
dec
jecxz
adc
pop
dec
les
insb
xchg
dec
and
movsb
icebp
cmp
cs
adc
push
dec
aam
fists
clc
pop
or
popa
je
je
icebp
pushf
mov
clc
push
insl
pusha
xchg
or
or
jo
xchg
mov
jecxz
sarl
js
inc
xor
in
shlb
lret
fwait
sbb
mov
fwait
push
and
sub
mov
mov
xchg
or
fdivs
dec
movsl
or
ja
push
std
or
push
push
out
xchg
rorb
add
lahf
xchg
loop
cs
loope
mov
sub
in
fisubrl
roll
cmp
mov
and
test
or
lock
xchg
ret
adc
inc
test
arpl
hlt
push
pop
mov
arpl
outsb
push
adc
lret
inc
mov
fidivrl
add
add
mov
add
ds
push
mov
js
push
and
les
xchg
lret
pushf
popf
push
inc
and
push
jno
add
mov
or
jo
repnz
outsl
jns
xchg
and
lret
cmp
jge
cmp
inc
sarl
inc
pop
cmp
lock
in
cli
and
ja
dec
mov
xlat
cli
mov
adc
xchg
mov
and
jge
leave
gs
pop
inc
jg
add
lret
push
popf
xchg
pop
fildl
into
outsl
mov
outsb
mov
inc
push
stos
es
ret
lret
push
enter
xor
fs
mov
sar
shlb
pop
mov
repz
xor
loope
testb
jecxz
andl
call
sbb
push
popa
cmp
sub
push
popa
ljmp
clc
pop
lret
xorl
fisubrs
sbb
es
mov
xlat
imul
dec
push
cmpsl
mov
jo
cmpsl
and
push
scas
lea
jecxz
push
mov
loope
clc
out
lea
jp
sbb
pop
rclb
jl
xor
sbb
sahf
enter
fisubrl
insb
xchg
push
push
sub
lock
cmp
aam
test
jle
loope
inc
mov
fbld
dec
rol
in
adc
mov
out
cmp
decl
fwait
sub
enter
or
insb
adc
mov
jae
fnstsw
lahf
lock
ja
out
out
iret
mov
aas
orb
ljmp
popf
push
dec
cmp
cmpsb
insb
mov
fldenv
xchg
add
neg
arpl
push
loope
js
push
and
gs
pop
jmp
pop
js
inc
test
pusha
lods
dec
jl
insl
mov
dec
lahf
mov
pop
and
inc
clc
test
mov
cmc
movlps
outsb
cld
add
movsb
ss
insb
orb
lret
adcb
pop
rclb
lret
dec
adc
shr
mov
and
dec
adc
sbb
fldl
xchg
jo
inc
bound
xchg
cmp
mov
push
fstpt
repnz
lahf
fisttpll
stc
fbstp
ljmp
add
mov
xor
mov
and
pop
or
push
out
sub
test
xchg
pop
idivb
shl
add
or
stos
push
test
stc
xchg
pop
rcll
test
cmp
pop
movsl
sbb
xchg
sbb
mov
fwait
pop
inc
ja
xor
subl
aam
test
jmp
xlat
dec
mov
imul
dec
dec
mov
mov
xchg
popa
jo
or
jg
and
dec
pop
push
rcrb
mov
pop
push
mov
lret
dec
test
cmp
lahf
sbb
sahf
xlat
mov
movsb
fisubl
cltd
mov
out
rorb
or
fdiv
sbb
add
mov
push
pop
test
mov
std
cs
add
addr16
dec
sbb
xchg
add
fdivs
push
mov
mov
std
daa
or
insl
sahf
ret
rcrl
fsts
inc
fiadds
mov
add
jno
sub
adc
mov
adc
cs
outsl
and
or
sub
ja
push
xchg
fistps
lods
adc
push
inc
sbb
sbb
sti
xchg
cmp
mov
add
pop
mov
mov
lods
loop
or
shlb
pop
daa
inc
xor
add
subl
push
shlb
imul
adc
les
cltd
jmp
rorb
pop
xor
mov
inc
cmpsl
out
loope
lahf
stos
push
adc
ss
push
test
fnsave
mov
sbb
ss
lock
movsb
in
fsub
fldenv
adc
fdivr
mov
sti
ss
or
movl
pop
or
fs
das
dec
aad
adc
loop
out
and
push
sbb
into
dec
xchg
dec
xlat
movsb
mov
repnz
jns
aam
sbb
add
sub
imul
add
mov
cmp
mov
cmp
add
xor
xor
clc
adc
pcmpeqb
xchg
aad
lahf
fwait
mov
mov
push
or
adc
inc
daa
loop
movsl
sbb
jbe
jne
movsb
popa
in
fs
and
mov
mov
jge
cmp
dec
dec
cmp
jnp
sub
mov
addr16
sub
xor
mov
add
outsb
xchg
js
cmp
popa
cs
mov
cld
inc
dec
dec
push
adc
daa
loopne
cwtl
lock
ja
gs
push
push
lods
push
das
lahf
pop
lahf
hlt
xor
lcall
xchg
cmp
and
xchg
push
or
bound
mov
and
xor
arpl
mov
cli
mov
pop
mov
and
in
repz
and
lret
pop
test
test
push
jp
pop
jb
jmp
push
sub
xor
pop
add
adc
sbb
mov
push
leave
dec
sbb
ret
xchg
ss
in
xchg
pop
dec
loopne
aas
mov
dec
inc
leave
arpl
mov
in
xor
les
roll
test
insl
sub
and
or
mov
loop
lods
in
mov
inc
test
mov
aam
xor
sbb
popf
xchg
repz
rcll
cld
iret
lods
adc
lret
adc
cltd
lods
and
xor
mov
dec
data16
std
lods
aam
adc
movsb
cmp
lcall
divl
out
jae
fistpl
stos
xchg
xchg
cwtl
mov
loopne
pop
incl
xbegin
and
sub
in
movsl
inc
or
mov
pop
in
test
mov
or
push
ret
mov
movl
xor
adc
cmc
dec
in
xor
sar
lcall
out
pusha
lret
out
test
dec
pop
sbb
rcr
arpl
sub
sbb
xor
sbb
sbb
cmp
dec
scas
or
stos
gs
sub
bound
pop
and
repnz
gs
movsl
ret
inc
out
inc
stos
dec
mov
jmp
jge
fnstenv
xor
cmp
sub
test
jns
or
std
jmp
xorl
imul
xchg
pop
mov
test
std
rolb
fcompl
jl
lcall
pop
xchg
fs
loopne
fsts
out
popf
ss
sti
or
sbb
mov
sbb
vmovntpd
xor
pop
cmp
add
faddp
or
mov
push
daa
rcpps
cli
jle
add
test
testl
imul
xor
nop
int3
leave
mov
xchg
sbbb
sub
test
leave
jae
cmp
cmpl
or
push
jg
cmp
mov
mov
hlt
and
mov
nop
jne
or
mov
lds
mov
sub
ret
xchg
push
sbb
lods
lds
into
cmp
repz
fsubl
push
iret
or
mov
xchg
adc
out
orb
fcomp
sbb
xchg
test
or
mov
mov
jmp
pop
lret
mov
iret
lret
mov
out
in
mov
aam
or
adc
mov
or
mov
add
iret
bound
std
xchg
lock
in
jnp
addr16
xchg
repz
cwtl
fld
sbb
decb
and
enter
or
lock
lahf
scas
xchg
cmp
iret
mov
lret
push
movsb
push
insb
and
movsb
out
flds
adc
mov
jl
mov
lret
jg
aaa
ficoms
push
addr16
and
push
xchg
push
fidivrl
add
cmp
xchg
aad
in
loope
adc
in
pop
mov
adc
in
jbe,pt
out
cwtl
aam
pop
jb
in
call
push
push
xchg
aad
ret
mov
stos
xor
adc
pop
adc
xchg
xor
gs
in
shl
int3
inc
stos
and
addr16
fs
xchg
push
mov
sub
fwait
xor
add
adc
push
cmp
shlb
lods
int3
pop
adc
movsl
adc
mov
dec
mov
push
jne
scas
sbb
pop
jge
jne
call
xchg
insb
cmp
lods
loope
shrl
pop
jae
sub
pop
add
sti
xchg
jle
out
aad
stos
mov
fwait
arpl
push
gs
cmpb
add
cmpsb
sub
mov
sub
inc
int3
outsb
cmp
mov
or
xor
in
inc
xor
daa
adc
cmp
sahf
cmpsb
icebp
test
adc
test
test
dec
push
adc
leave
push
es
push
mov
fcomps
movsl
pop
pop
mov
stos
mov
mov
xchg
fwait
inc
xor
ret
pop
pop
in
jae
ds
aaa
jp
ja
fildl
dec
add
ret
test
das
or
into
sbb
adc
aam
clc
fidivl
lcall
mov
cmp
cld
fmulp
imul
pop
cwtl
ljmp
pop
test
lcall
inc
push
push
mov
push
out
add
out
pop
sub
or
inc
into
rclb
cmp
cmp
popa
jmp
or
inc
lds
mov
adc
pop
and
mov
testb
shll
dec
sbb
xchg
dec
xorl
mov
insl
push
push
fidivl
movsb
cmp
nopl
out
mov
and
mov
sbb
enter
cmp
push
xchg
mov
leave
sub
xchg
dec
dec
or
mov
xchg
js
rcrb
xor
out
lods
adc
movl
stc
adc
cmp
and
test
fbld
daa
mov
fdivl
fxrstor
loope
or
adc
xor
movb
insl
mov
push
push
cmp
leave
adc
push
or
adc
add
jnp
mov
adc
push
sbb
jge
add
lret
arpl
popa
fistl
xchg
sub
jo
fistpll
lahf
adc
xor
loope,pn
scas
or
push
sbb
into
dec
cwtl
xchg
mov
mov
sub
inc
mov
mov
or
popa
jg
sub
shlb
mov
cltd
bound
sub
dec
and
jae
ljmp
mov
rorb
mov
pusha
sbb
push
sahf
push
scas
dec
hlt
pusha
repz
cld
or
xlat
pop
fistps
jns
mov
out
rep
test
mov
insl
push
fmull
ds
and
fsubrl
cli
ljmp
dec
movsb
inc
loope
pusha
sub
add
jmp
es
mov
fisttpll
jb
loop
out
or
enter
pushl
js
mov
lods
mov
fisttpl
shl
xor
je
push
sti
add
inc
and
or
ror
hlt
stos
xor
fimull
pop
or
mov
inc
push
in
div
and
xor
into
sbb
cmp
mov
push
mov
fidivs
mov
mov
pop
sub
out
fisubl
mov
lods
xlat
or
mov
lods
add
push
movsb
pop
add
into
sub
scas
pop
fwait
das
mov
outsb
stos
ljmp
mov
out
mov
inc
jb
in
hlt
mov
cmp
adc
hlt
mov
jecxz
sahf
mov
sub
pushf
loop
mov
enter
pop
out
bound
inc
ret
push
push
cwtl
popa
sub
in
inc
fwait
cmp
push
inc
pop
jmp
lahf
inc
jae
aas
insb
jecxz
xlat
inc
jo
mov
mov
mov
mov
ret
mov
or
and
mov
push
in
call
mov
aaa
jo
aam
jo
adc
int
aad
sub
push
sbb
lds
mov
pop
and
cmc
ret
pop
js
iret
fisttps
and
adc
sbb
aam
mov
pop
std
cmp
rcrb
adc
and
sub
lret
dec
aad
cmpsl
cmovnp
sbb
or
mov
das
add
rcl
cmpsb
add
sub
mov
mov
push
push
pop
inc
cmp
dec
sub
push
pop
shrl
cmc
xlat
rclb
int3
jmp
repz
jge
mov
mov
adc
cmpsb
mov
stos
sub
cs
dec
dec
insl
rclb
outsb
dec
mov
cli
pop
cmpsl
nop
bound
je
push
fcoml
mov
inc
add
loope
adc
aaa
sbb
jmp
xchg
repnz
test
filds
sbb
or
and
je,pt
sbb
pushf
int
enter
icebp
push
xorl
repz
loop
adc
and
push
cmp
sbbl
jne
cs
add
mov
jae
push
in
pushf
sahf
mov
mov
shlb
addb
and
or
out
jl
ret
xchg
ljmp
scas
jle
in
ds
in
jnp
xor
aad
in
mov
sbb
aaa
sahf
adc
push
pop
arpl
in
xor
xor
mov
push
xlat
dec
pop
movsl
push
into
lcall
mov
cld
lea
negb
mov
or
bound
mov
fwait
sbb
aas
mov
incl
push
jp
sbb
jge
pop
mov
mov
ds
xchg
or
push
jl
jno
and
daa
mov
sub
xchg
sub
jno
es
lea
pop
fidivs
inc
mov
daa
xor
mov
clc
fwait
add
mov
iret
fisttpll
dec
or
mov
shrl
stos
out
or
and
loopne
sub
sbb
mov
test
and
stos
dec
fsub
mov
jg
cmp
rorb
and
fwait
jl
push
movsl
mov
movsl
sub
movsl
stos
lds
loope
push
shr
push
ljmp
loope
and
pusha
mov
xchg
or
push
es
and
adc
xchg
mov
ljmp
mov
clc
mov
push
mov
mov
inc
fwait
cs
mov
test
jge
sbb
sbb
test
dec
add
push
xchg
mov
jns
aad
cli
fwait
xor
inc
and
ljmp
cmp
and
out
jge
lds
je
push
and
jge
pop
cmc
divb
push
inc
xor
arpl
xchg
inc
cmc
clc
fsubs
fldenv
mov
lods
movsb
insl
sbb
repnz
shlb
sbb
cmp
push
rcl
ljmp
aas
sbb
pop
out
push
xchg
aaa
cmp
loopne
ja
test
aaa
inc
pusha
push
lahf
lahf
hlt
div
shl
adc
shlb
or
out
insl
inc
ret
or
and
js
faddl
push
or
pop
add
push
or
push
pop
jae,pn
add
daa
ljmp
xor
inc
cwtl
out
xchg
jecxz
inc
cwtl
cmpsb
pop
mov
mov
testb
mov
mov
pop
lods
mov
ljmp
fwait
mov
sbb
inc
add
lea
scas
loopne
roll
mov
add
fsts
cwtl
fs
pushf
test
scas
sub
push
test
dec
cltd
movsl
push
stos
fidivs
mov
cmpsl
jns
xchg
cmove
dec
and
mov
and
jae
scas
shlb
ss
mov
in
xor
lahf
xchg
push
push
and
adcl
adc
loop
sub
aaa
mov
fiadds
push
sub
fyl2x
mov
fistpl
lds
test
jle
hlt
pop
jle
xchg
arpl
push
xor
outsb
xor
into
divl
or
jl
mov
sbb
push
nop
push
push
sub
mov
iret
lcall
add
out
push
jb
xchg
and
dec
test
nop
adc
mov
cmc
push
in
in
sti
push
outsb
fdivrs
andb
js
mov
pop
inc
stos
push
jae
iret
pop
sbb
mov
sbb
cld
sti
jge
dec
push
jb
or
mov
stc
popa
sarb
sbb
mov
gs
push
outsb
ja
sub
outsb
mov
out
bound
repnz
jns
lea
cmp
jnp
sbb
jne
add
imull
test
int3
and
pop
push
sub
sbb
orb
popf
push
and
cmp
imul
mov
jp
push
hlt
cltd
repnz
xor
loope
daa
stos
sbbb
mov
dec
leave
ret
test
mov
sub
bound
mov
dec
sahf
xchg
es
in
lods
gs
mov
aad
xor
mov
xchg
jo
cmp
xor
jno
xchg
xchg
rorl
rolb
addr16
mov
ja
outsl
sub
add
or
inc
pop
aas
orl
repnz
and
xchg
lret
mulb
inc
sub
leave
std
dec
push
ds
ljmp
ja
insb
xor
push
lea
orb
sub
add
push
lods
or
dec
sub
mov
jmp
sub
and
aad
jmp
mov
shl
mov
cmpsb
loop
sbb
pop
mov
mov
cmc
mov
or
repz
clc
xchg
xchg
out
mov
jmp
dec
pop
pop
add
outsl
loopne
xchg
add
mov
lahf
sbb
test
mov
cs
test
cs
int
test
neg
pop
dec
movsl
jno
mov
outsb
fistps
cld
lcall
dec
jl
push
lea
sbb
and
cmp
jp
flds
fisubl
test
fs
xlat
mov
or
inc
aad
and
xor
test
xor
ja
mov
sbb
pop
leave
cmpsb
sbb
xor
shlb
loope
and
scas
loopne
fbld
andb
sbb
sti
fisubrs
jmp
inc
or
mov
lock
inc
shlb
aas
std
xchg
pop
cbtw
addr16
cmpsl
aas
test
sub
les
mov
addr16
jle
cmp
rcrl
xchg
fstl
in
or
nop
jo
mov
popf
add
jb
les
cmpl
inc
ljmp
dec
das
roll
push
sub
negb
fnstsw
lea
push
xorl
fdivr
repz
fdivs
mull
lods
push
lcall
imul
mov
pop
popa
mov
xchg
pop
cmp
jo
lret
int3
mov
adc
sub
push
cmpsl
pop
xchg
jecxz
dec
sub
push
or
mov
fimull
out
inc
push
fmuls
test
shrl
adc
jno
stos
lret
ret
mov
jo
out
mov
jmp
repz
and
daa
mov
lds
xor
sbb
imul
xchg
aaa
push
cmpsb
xchg
pop
dec
mov
inc
lret
popf
xchg
mov
sbb
xchg
pop
test
sti
or
aas
push
lahf
mov
sbb
sahf
mov
mov
scas
mov
mov
xor
sbb
pop
mov
popf
cld
push
outsl
sbb
icebp
cmp
xchg
lods
push
int
sbb
rorb
push
mov
add
add
add
add
add
add
add
add
inc
and
add
and
add
and
add
add
add
add
add
pop
and
add
add
add
xchg
add
fwait
and
add
jbe
jb
jb
arpl
insl
outsl
fs
gs
popa
add
fs
inc
popa
insb
insb
bound
imul
imul
cs
jb
jbe
jb
jb
arpl
insl
imul
cs
outsl
fs
gs
popa
add
imul
insl
outsl
fs
inc
popa
insb
insb
bound
imul
add
add
sbb
add
xor
add
inc
and
add
add
add
and
add
add
add
cld
and
add
and
add
jb
gs
xor
cs
insb
add
add
add
dec
outsl
popa
fs
imul
add
add
inc
gs
jb
arpl
fs
jae
add
add
add
push
imul
insb
insb
outsl
arpl
add
add
jb
jne
insb
inc
jb
add
mov
push
pushl
mov
xor
mov
push
inc
inc
xor
or
dec
add
pusha
mov
push
mov
and
ljmp
push
push
xor
inc
mov
popa
push
sbb
shl
sahf
push
add
orb
xor
dec
cmovp
lods
cmp
je
jbe
loopne
jge
movb
out
pop
or
and
clc
jne
enter
in
fdivs
jge
sahf
enter
add
add
stos
repz
popaw
or
subl
pop
jge
add
mov
shl
or
insl
inc
sbb
out
xorl
sbb
xchg
hlt
fdivrp
rolb
rcrb
aaa
leave
ret
cmp
push
clc
push
stos
sti
and
sub
loop
sub
cmp
sbb
jae
data16
xor
into
cwtl
scas
loopne
inc
aas
jecxz
movzwl
push
push
rorl
sbb
xchg
arpl
fs
sbb
icebp
mov
push
add
sar
add
push
pop
sub
cmp
les
fstpl
or
xor
rolb
imull
addl
pop
lahf
clc
pop
pop
lea
dec
or
cmpsb
movsl
inc
inc
hlt
sub
lock
adc
or
xor
shll
pusha
es
jne
and
rolb
roll
adc
adc
inc
scas
aas
and
loope
iret
lcall
inc
cld
mov
mov
rolb
mov
shr
lods
sti
cmp
jge
jae
stos
cmpsb
iret
aam
fcoml
mov
xchg
mov
dec
sub
mov
into
add
iret
push
orb
push
adc
or
cli
jle
mov
jmp
and
mov
test
ss
push
in
pop
xor
mov
test
sar
icebp
sub
aaa
mov
jmp
sub
repnz
nop
jl
shlb
xor
inc
nop
jne
xchg
enter
adc
mov
xor
push
jae
clc
push
repnz
and
insl
std
add
adc
mov
sbb
xchg
or
mov
stc
inc
push
in
pop
jb
in
fmuls
loopne
push
lock
xor
test
and
inc
xchg
dec
shr
adc
or
and
xchg
push
push
xchg
int
dec
and
cwtl
cli
or
jecxz
adc
rcl
inc
xchg
rorl
movsl
sbb
stos
pushf
and
rorl
nop
fmuls
dec
inc
imul
repnz
dec
or
and
inc
pop
out
and
or
hlt
rorl
and
jo
sarl
fsts
xchg
cwtl
xor
and
pop
setge
sub
lock
mov
mov
imull
stos
shr
add
clc
and
sbb
mov
jmp
fucomip
push
ret
dec
andps
xchg
jbe
adc
and
lret
xchg
cmp
xchg
mov
dec
enter
push
in
jmp
pop
inc
popa
push
lcall
adc
push
and
sub
pop
dec
loopne
std
neg
or
xor
sub
push
push
sbb
test
aam
add
orl
setb
push
jnp
sti
adc
mov
pop
das
loop
repnz
enter
mov
jno
stos
les
nop
jmp
fmull
fisttpll
xchg
add
jmp
sub
push
sub
inc
adc
ja
int3
loopne
sbb
inc
add
jge
add
cli
mov
push
adc
repnz
cmp
shll
inc
push
jmp
sub
inc
test
decl
dec
shlb
daa
xor
xchg
fcompl
call
mov
mov
int
mov
push
pop
test
stos
adc
xor
mov
push
es
lea
adc
xchg
mov
addb
mov
add
add
pop
xor
or
lcall
add
mov
sub
adc
iret
mov
roll
cwtl
xor
enter
adc
sub
loope
lock
stos
or
add
jmp
pop
inc
jge
nop
mov
xchg
and
pop
jbe
cmp
xor
or
inc
ficoms
ljmp
push
mov
mov
add
cwtl
xorl
jg
push
xor
add
and
mov
stc
or
imul
jbe
cli
rcl
mov
xchg
dec
push
jns
movsb
std
dec
mov
into
loopne
xor
out
jecxz
in
mov
lock
ja
or
or
mov
lret
push
call
inc
and
pop
data16
je
cmp
sbb
mov
jb
icebp
testl
mov
adc
mov
rolb
add
cltd
push
pop
divl
cmp
pop
jl
push
rorb
insb
mov
int3
pop
push
mov
or
add
divb
mov
sbb
push
push
call
xor
daa
jg
sti
xor
sbb
add
push
lea
mov
call
addb
nop
aam
push
or
and
cmp
ret
jns
loope
insb
xor
push
cltd
inc
adc
add
data16
les
mov
and
rdtsc
inc
or
pop
add
mov
dec
and
dec
es
xor
push
cmovne
je
sbb
sbb
or
sub
adc
mov
push
cmp
push
mov
push
lds
push
add
mov
or
adc
loope
or
sbb
push
test
fisubrs
sbb
adc
int
push
push
mov
orb
adc
pusha
mov
mov
orl
add
lock
iret
push
or
jbe
sub
mov
lods
stos
nop
add
add
jae
test
out
push
ss
jnp
inc
sbb
in
mov
outsl
add
push
mov
push
call
add
lea
add
mov
mov
lods
or
mov
or
xor
or
cmpsl
aas
xorb
movb
and
add
test
push
xchg
or
pop
add
inc
loopne
add
movb
jmp
cwtl
mov
mov
call
xor
roll
pop
pop
pop
dec
ret
mov
cld
xchg
and
test
sub
jne
push
add
lret
push
call
sbb
add
jle
stos
rorl
mov
lret
pop
push
mov
addl
add
pop
add
jmp
cwtl
cmpsl
ret
lods
push
jne
aaa
scas
leave
push
or
clc
dec
repz
inc
xorb
cmp
je
pushl
nop
push
push
add
repnz
sub
mov
lods
outsl
mov
mov
cmp
scas
enter
hlt
pop
in
or
decb
sbb
sti
add
add
imul
add
xchg
pusha
fucomip
outsl
or
decb
add
pop
dec
xchg
shr
mov
jbe
jae
roll
add
add
ret
jmp
movsl
and
cltd
call
adc
fnsetpm(287
leave
nop
jo
cmp
or
adc
or
push
pusha
test
addb
test
je
inc
je
push
xor
jle
leave
push
xor
push
mov
clc
cmp
jge
shlb
je
incb
enter
sbb
cmp
ret
scas
jae
or
adc
scas
jae
sti
int3
inc
jmp
rcrl
or
mov
add
push
and
mov
mov
xchg
scas
mov
mov
fimuls
popf
inc
mov
sbb
fdivs
xchg
pusha
dec
or
shl
pop
add
movsl
pop
jle
loope
mov
push
cli
movsb
mov
stos
loop
adc
cmp
inc
cmp
ret
inc
mov
rcrl
push
lock
push
push
xchg
pop
cmpsb
mov
or
mov
outsb
inc
adc
js
push
ss
pop
nop
dec
add
jl
add
or
xor
dec
adc
hlt
push
dec
mov
stos
push
mov
fsubrs
push
flds
in
fnop
xor
jno
lcall
inc
adc
outsb
push
ret
pop
dec
call
jge
jne
stc
sub
adc
repz
inc
movl
push
dec
pop
jno
out
add
test
pushl
sub
push
nop
popf
add
add
loope
xor
cmp
push
je
outsb
add
jge
inc
or
mov
test
iret
and
push
push
push
push
call
or
dec
sbb
adc
lds
jae
bound
inc
sbb
jno
mov
out
mov
aas
dec
push
movlps
in
dec
insl
jmp
or
xchg
rcr
xorl
cmpsl
add
data16
cmp
push
test
and
push
jmp
rorb
lods
inc
stos
jp
loop
push
inc
sbb
inc
movsl
pop
lret
pop
orl
leave
addr16
xor
mov
push
jmp
sar
sub
icebp
mov
loopne
dec
push
sbb
dec
or
cld
jmp
scas
cmpsb
ds
je
mov
adc
cmp
add
lea
cmpl
jmp
push
lea
push
jae
popf
mov
pop
test
cmp
cmp
sub
mov
sbb
mov
xchg
push
push
loopne
mov
and
mov
or
and
mov
xor
jb
imul
cwtl
insb
xor
loopne
vmread
push
xchg
xlat
jae
pop
inc
insb
mov
add
outsb
fs
out
pop
dec
jo
adc
je
mov
sbb
loopne
pop
imul
cmp
stos
push
or
mov
cmp
sub
loope
mov
add
pusha
mov
mov
cld
mov
xor
movsb
mov
call
jae
xor
call
jae
xor
call
jae
mov
inc
mov
call
adc
jae
jne
stos
jmp
call
sub
jne
call
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
lods
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
sub
mov
popa
ret
add
insb
and
add
add
pop
or
add
sub
add
and
add
and
add
add
adc
and
add
and
add
lea
mov
mov
mov
movb
add
sub
mov
xor
ret
mov
popl
add
push
push
push
push
push
push
lea
mov
push
mov
push
push
pushl
push
mov
add
mov
call
pop
mov
push
push
mov
mov
add
mov
mov
mov
add
mov
mov
add
mov
add
lea
push
push
push
call
pop
pop
add
mov
push
mov
mov
add
sub
mov
mov
mov
call
mov
mov
mov
pop
jmp
add
push
push
push
call
mov
pop
pop
pop
pop
pop
pop
jmp
push
cltd
add
add
add
add
add
add
pop
sub
movl
movl
popa
jmp
cli
clc
mov
movsb
mov
jmp
out
clc
cmpsb
cmpsb
cmpsb
mov
icebp
repz
sti
jmp
mov
clc
clc
jmp
cmc
out
repz
repnz
in
out
loop
clc
icebp
ljmp
movsb
mov
jmp
out
clc
cmpsb
cmpsb
cmpsb
mov
icebp
repz
sti
jmp
mov
clc
icebp
ljmp
mov
push
repnz
in
out
loop
repz
movsb
mov
jmp
out
clc
cmpsb
cmpsb
cmpsb
mov
icebp
repz
sti
jmp
mov
repz
jmp
cmc
out
repz
repnz
in
out
loop
stc
mov
movsb
mov
jmp
out
clc
cmpsb
cmpsb
cmpsb
mov
icebp
repz
sti
jmp
mov
stc
clc
jmp
cmc
out
repz
repnz
in
out
loop
out
repnz
mov
movsb
mov
jmp
out
clc
cmpsb
cmpsb
cmpsb
mov
icebp
repz
sti
jmp
mov
out
clc
jmp
cmc
out
repz
repnz
in
out
loop
out
repnz
icebp
ljmp
movsb
mov
jmp
out
clc
cmpsb
cmpsb
cmpsb
mov
icebp
repz
sti
jmp
mov
out
icebp
ljmp
mov
push
repnz
in
out
loop
ljmp
out
movsb
mov
jmp
out
clc
cmpsb
cmpsb
cmpsb
mov
icebp
repz
sti
jmp
mov
scas
clc
jmp
cmc
out
repz
repnz
in
out
loop
pusha
mov
call
pop
sub
cmpb
je
movsb
xorb
jmp
movb
popa
add
test
jmp
