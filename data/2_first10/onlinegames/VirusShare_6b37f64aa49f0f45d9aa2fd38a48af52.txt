sbb
add
mov
arpl
dec
jnp
insb
roll
pop
jge
mov
push
popa
mov
repz
lret
xchg
dec
sub
push
push
pop
jae
xchg
xchg
cmpb
mov
cmpsl
lret
sahf
mov
push
movhps
mov
jmp
cmpl
inc
inc
cld
pop
cmp
sub
into
jo
sbb
out
out
jns
mov
jns
popa
push
sti
dec
adc
pop
jnp
sub
push
adc
jnp
lods
or
pop
mov
imul
sub
push
pop
mov
mov
or
adc
cmp
xor
sbb
cltd
adc
mov
sub
les
lods
pop
negl
stos
lods
push
fisubrl
lea
dec
clc
pop
mov
in
mov
lds
pop
add
mov
push
jle
fsubrl
das
stos
ret
rorl
dec
test
inc
fcmovnb
inc
mov
aad
jae
fmull
xor
clc
orb
in
fstpl
or
mov
mov
adcb
sti
jge
mov
push
mov
pop
roll
cld
daa
mov
mov
cmp
or
leave
mov
inc
push
adc
sub
cs
loopne
insl
mov
xchg
sub
insb
ret
xor
mov
outsl
xchg
lods
and
call
mov
mov
dec
movsb
dec
push
xor
xchg
test
scas
mov
sbb
adc
or
arpl
negl
dec
adc
cltd
nop
or
mov
imul
xchg
or
ds
jns
sbb
push
dec
rol
push
adc
xorb
enter
xchg
int3
shrl
push
cmpsb
loopne
fsubl
in
movl
jl
ficomps
scas
mov
scas
lock
mov
fdivl
sub
mov
scas
mov
pop
jle
or
cmp
cwtl
cmp
add
cltd
aas
adcb
inc
push
out
loop
push
or
out
add
in
jns
mov
test
fsubrp
les
mov
cli
shl
cmp
add
pop
fldt
pop
mov
pushf
shll
nop
fsubrl
pop
sub
ret
xchg
adc
in
mov
cmp
bound
xchg
dec
xchg
lea
xor
xchg
ret
push
cmpsb
push
dec
mov
jb
jmp
mov
ficoml
fstps
leave
js
mov
mov
xor
xor
jl
lret
push
add
mov
inc
test
pop
out
jne
call
iret
cmpsl
aaa
loope
sbb
or
mov
in
or
std
mov
movsb
and
adc
inc
lds
push
lret
xlat
lds
dec
lock
stc
arpl
jge
cmp
in
movsl
cmp
stos
stc
inc
adc
add
bswap
fscale
inc
cltd
mov
push
addr16
lret
outsb
pusha
mov
mov
mov
out
mov
movsb
xchg
sbbb
inc
lret
dec
pop
adc
test
inc
nop
call
jmp
jno
mov
int
fmuls
repz
jmp
in
sub
cwtl
js
xchg
xor
mov
lret
sahf
jne
shrl
cmp
inc
movsl
jae
lods
and
out
clc
pop
cmc
inc
ds
sarl
xchg
xchg
jmp
int
sbb
aas
push
negb
xchg
xchg
out
leave
fwait
ds
push
jb
adc
mov
fwait
inc
jns
xchg
push
fdivl
iret
fs
sub
test
jge
fidivl
lea
sarb
push
ja
xor
les
and
lods
aad
imul
push
wbinvd
imul
mov
rorl
scas
and
push
lods
rcr
dec
xor
xchg
xor
sub
cmp
push
mov
dec
lret
test
mov
cwtl
xor
data16
mov
insb
pop
jo
out
or
xchg
cmp
jae
cmp
arpl
lea
shlb
es
movl
orl
sbb
push
cltd
setno
inc
outsb
in
and
insl
data16
jmp
mov
xchg
pushf
nop
push
clc
jle
pop
adcb
pop
xchg
and
aas
loop
out
and
lahf
xchg
aaa
pop
enter
fistpl
jecxz
cmpsl
pop
lods
and
push
cli
dec
sbb
mov
pop
hlt
mov
out
iret
sub
ret
mov
sbb
int
mov
xor
dec
ds
sbb
pop
push
jge
dec
push
lret
push
and
in
ljmp
icebp
je
ret
dec
pushf
je
pop
data16
pop
xchg
cs
xlat
cld
pop
ret
aas
cmpl
dec
in
out
and
dec
jg
xchg
mov
xchg
rcll
ss
stos
mov
add
dec
and
and
lahf
cmp
clc
sub
xchg
sbb
push
adc
and
inc
repz
test
pop
int
push
int
push
mov
push
icebp
sub
pop
add
cmc
pop
hlt
inc
xor
jno
loope
fidivrl
test
fstpl
mov
adc
out
dec
popf
pop
ss
pop
xor
call
xchg
popf
dec
insb
shl
stc
stos
nop
testb
sbb
sub
loope
push
movsb
mov
pop
stos
sahf
cmp
repz
mov
hlt
out
inc
dec
dec
fsub
mov
push
sbb
loope
xor
inc
loop
sub
pop
dec
pushf
and
xlat
pushf
mov
hlt
fsub
mov
ret
dec
ja
xor
cmp
cmp
int3
imul
push
dec
repz
iret
ds
cmp
outsb
jbe
cmp
and
mov
or
cmp
es
or
sub
jae
aad
addr16
push
inc
arpl
dec
outsl
dec
jmp
sbb
lcall
ret
inc
stos
subb
fbstp
repz
xlat
enter
test
sbb
fldt
lds
loope
sbb
adc
cmp
dec
mov
sbb
movsl
cmp
rolb
sbb
sub
outsb
mov
adc
mov
mov
push
lds
xor
out
or
aam
push
rolb
and
mov
pusha
dec
enter
cld
jp
ret
mov
in
inc
or
mov
rolb
cmpsl
push
push
xlat
push
imul
loope
xor
fisubl
aad
fwait
pop
cmp
fimull
stos
xchg
inc
pusha
out
lret
cs
mov
fistpl
es
aam
lret
lods
xchg
lods
enter
fs
in
insl
push
mov
mov
repnz
mov
out
xor
adc
nop
fldl
jge
push
fcoml
sub
into
shl
inc
andl
xor
test
mov
cmp
jb
mov
iret
into
test
xchg
loope
push
out
cmp
mov
mov
sahf
nop
push
hlt
pop
jmp
nop
imul
out
lsl
adc
movsl
sbb
inc
and
pop
lret
jg
push
push
into
aaa
mov
xlat
xlat
mov
loopne
jo
and
imul
ljmp
pop
add
shr
shlb
out
popa
and
xchg
pop
push
xor
cwtl
subl
imul
jmp
pusha
test
ret
push
inc
and
pop
mov
fiadds
sbb
loop
test
push
xchg
movsl
mov
add
ja
arpl
movsl
push
fdivrl
pop
pop
adc
loop
xlat
xor
sbb
pop
mov
rclb
out
dec
fwait
mov
or
cli
push
popa
jnp
xor
mov
push
in
into
ja
and
aaa
vpaddusw
inc
es
xlat
rolb
pop
lret
mov
add
cs
xchg
leave
filds
push
fimull
push
inc
push
lea
mov
cmc
gs
sbb
aaa
pop
sti
loop
xor
push
cmp
repz
xlat
aad
mov
mov
or
sub
dec
or
cs
dec
xchg
mov
push
xchg
and
les
leave
call
ds
test
subl
test
scas
push
cmp
in
cmp
negb
fwait
lret
dec
aam
sub
mov
fsts
mov
js
add
shlb
std
xchg
mov
adc
ret
iret
pop
inc
insb
cmpsb
jbe
iret
pop
pop
inc
fsubrs
cmp
movsb
and
pop
js
sbb
add
aad
lea
lods
mov
in
in
insb
test
iret
ret
xchg
decl
dec
fwait
xlat
imul
frstor
adc
lret
mov
test
or
ret
idiv
and
imul
nop
leave
stc
sbb
test
mov
push
push
pop
sbb
ret
dec
insl
jmp
ds
push
jae
outsl
jb
jne
and
xor
stos
mov
mov
or
fsubr
insb
jns
pop
movsb
jne
push
out
popa
lahf
pop
dec
jae
mov
cltd
sbb
mov
mov
arpl
ljmp
push
rorb
push
cld
sbb
out
sub
fmul
jl
mov
adcl
loopne
dec
xlat
pop
and
sbb
pop
aad
fdivs
imul
data16
sbb
daa
fsubs
js
aam
je
pusha
fwait
imul
inc
dec
mov
lret
pop
repnz
jmp
pop
lahf
adc
out
out
lock
sbb
mov
adcl
pop
dec
in
dec
pxor
test
leave
cwtl
mov
icebp
xchg
ret
jecxz
aam
js
aam
push
les
xchg
xor
xchg
jecxz
mov
jno
pop
imul
addr16
pop
iret
lret
jbe
cli
pop
jg
jecxz
pop
xor
in
mov
adc
xchg
sbb
jae
jmp
jb
jno
pop
les
push
mov
jo
dec
fdivs
xor
and
test
arpl
adc
bound
aad
bound
xor
and
lret
jno
shll
fisubl
scas
ret
loope
lahf
cmp
dec
outsl
mov
repnz
cmp
inc
fisubrl
loope
out
popf
aaa
mov
jmp
aad
lret
jbe
mov
into
jl
repnz
lock
fnsave
inc
imul
mov
sub
xadd
dec
hlt
push
mov
fdivl
shll
ret
repz
inc
cld
inc
shlb
and
iret
pop
loope
addr16
imulb
sbb
jno
push
and
adc
mulb
mov
sahf
lret
lret
pop
loop
aad
mov
int
jmp
mov
std
decl
leave
pop
fbstp
std
push
jp
dec
imul
xchg
test
add
imul
loop
pop
cmp
idivb
fwait
push
add
mov
imul
sub
inc
cld
aas
ja
outsb
dec
xchg
xchg
test
cmc
jg
and
out
stos
fwait
jmp
ja
and
iret
js
pop
adc
rcrb
xchg
push
into
jbe
out
outsl
push
or
test
gs
jb
adc
mov
pushf
jge
addl
xchg
push
sbb
lea
repnz
movb
bnd
dec
inc
add
mov
je
roll
pop
pop
xor
dec
xchg
cmpsl
adc
inc
out
and
pushf
dec
das
sbb
add
sbb
mov
and
mov
shll
bnd
and
bnd
jg
dec
outsb
sbb
or
ror
imul
inc
pop
and
mov
and
lret
inc
idiv
testb
outsb
cwtl
pushf
inc
jne
pop
out
lods
hlt
dec
inc
mov
cmc
push
lods
xchg
stos
sahf
popa
fsts
xchg
mov
in
mov
add
xchg
pop
mov
test
adc
subb
xchg
adc
fs
fwait
cmp
out
sbbl
fwait
push
scas
inc
cwtl
mov
push
cmp
mov
push
rclb
outsb
lcall
sub
mov
movb
out
mov
pushf
ds
inc
mov
push
mov
hlt
inc
mov
push
mov
lcall
xchg
ja
push
ret
scas
mov
js
ja
push
sbb
or
sub
add
push
mov
stos
sub
addr16
adc
lahf
xor
pushf
xchg
test
rolb
sub
data16
dec
lahf
mov
push
iret
pusha
jmp
mov
jp
xor
pusha
mov
push
ret
shl
outsb
mov
test
imul
jae
insl
and
aaa
mov
fisubs
dec
sub
jbe
in
cwtl
mov
jbe
in
out
lds
repz
data16
fistpll
pop
movb
dec
mov
jge
mov
sub
cmp
clc
dec
add
repz
inc
and
add
addb
js
cmp
dec
jp
fsts
pusha
scas
scas
sti
xchg
rolb
insb
pop
or
in
rdpmc
sahf
jg
jg
dec
scas
lock
sub
fcompl
xor
pusha
gs
out
push
pop
ret
mov
xor
sub
mov
jno
stos
dec
pop
inc
aas
cld
loope
adc
test
repz
or
decl
stos
cmpsb
dec
frstor
fwait
mov
loope
lods
dec
xlat
push
js
mov
das
scas
push
ja
std
sub
inc
imul
lea
jae
sbb
adc
sarl
mov
les
or
aaa
mov
or
pop
pop
adc
cmpsb
lods
pop
nop
icebp
repnz
dec
jns
clc
dec
jecxz
xchg
je
sbb
mov
cwtl
jb
jl
or
xor
ss
dec
xchg
push
fstpl
jbe
leave
std
xchg
jbe,pn
insb
out
mov
inc
pop
mov
je
dec
fimull
jne
shll
addr16
jb
out
xchg
xchg
shrl
addr16
cmp
mov
lds
pop
cmp
icebp
xor
out
xchg
xor
cs
adc
jge
and
jl
hlt
dec
cmpsb
and
subb
mov
lcall
pusha
jl
pop
shlb
mov
add
push
push
xorb
lock
loope
or
scas
bound
pop
out
jnp
jo
hlt
adc
int3
test
jmp
lock
cld
adc
push
sub
in
inc
in
xor
sbb
jae
sti
xchg
mov
xor
adc
sub
hlt
lea
scas
cld
pop
mov
test
adc
inc
repz
pop
popa
rol
das
shrb
fwait
mov
lea
loope
xchg
jne
jmp
cmp
shrb
rcrb
adc
sahf
sub
ss
mov
lcall
stos
cmp
xchg
or
add
push
jmp
add
lea
aaa
sub
shrl
pop
and
notb
adc
xchg
out
sbb
loope
cmp
dec
mov
nop
adc
mov
icebp
jp
pushf
das
cmp
lret
lcall
out
or
sub
xor
sbb
repnz
pusha
lret
sti
icebp
push
push
xor
bnd
jno
xchg
mov
jb
adc
outsl
das
xor
ds
call
pop
sub
mov
cs
dec
in
xchg
mov
clc
ljmp
xchg
cli
dec
test
or
push
insb
sbb
jg
fld1
sub
stc
sbb
sar
das
pop
sub
popa
mov
cli
aam
xchg
scas
call
jmp
mov
sti
outsb
xor
movsb
mov
outsl
lea
lret
lock
cmpsb
mov
lods
cmc
dec
lods
mov
xchg
popf
out
xchg
mov
hlt
iret
sub
shrb
mov
sqrtps
jmp
mov
aas
inc
inc
dec
repz
push
add
rol
clc
jno
pop
lock
and
sbb
dec
or
jge
jmp
jp
aas
popf
xchg
xchg
movsl
mov
xor
or
aas
push
hlt
and
mov
insl
xchg
jne
pop
push
and
xor
push
dec
sub
outsl
xor
ljmp
push
dec
inc
outsl
lret
test
fcoms
mov
out
sub
cmp
mov
jb
ret
test
cmp
scas
out
in
sar
push
sbb
lret
stc
icebp
push
pushf
mov
fildl
or
jle
test
push
add
mov
and
sub
or
out
jecxz
out
push
pop
pop
fwait
loop
or
push
adc
popf
sub
jo
rcll
stos
andb
lods
mov
or
xchg
push
mov
sub
test
dec
mov
jp
xchg
push
push
repz
push
cmpsl
incb
repz
ror
rcll
jl
leave
push
push
rol
inc
inc
std
inc
jae
sub
push
out
jle
in
sarb
cmp
adcl
jl,pt
jbe
sub
leave
mov
push
inc
xchg
repz
cmpsb
lret
dec
fmuls
and
pop
orb
testl
xchg
adc
test
adc
push
cld
push
lret
fs
out
jo
push
mov
rol
scas
push
add
add
mov
mov
cmp
lods
mull
shll
fs
and
repnz
fimull
push
fisubrs
push
push
ret
push
mov
int3
or
addl
insl
jb
int3
sahf
pop
cmp
sub
out
stos
imul
xor
xor
test
testb
or
sti
dec
fsts
shlb
xorb
push
mov
dec
mov
pop
fwait
aaa
fisubrs
dec
push
enter
inc
loop
ret
bound
stc
cwtl
or
sub
dec
outsb
push
xchg
outsb
test
nop
push
fcoms
xchg
test
and
sarb
xor
stos
or
out
in
int3
pop
daa
jecxz
ret
xor
pop
jge
test
rcll
clc
aad
popf
adc
jns
std
pop
push
outsb
mov
sbb
dec
lahf
inc
adc
inc
fdiv
xchg
xchg
mov
out
ds
int
fnstcw
inc
jl
fadd
test
pop
in
test
insl
fadd
cmp
inc
xchg
add
push
in
and
in
icebp
test
je
lcall
aam
pop
jecxz
fidivrl
jns
xor
fcmovbe
mov
cmp
rclb
dec
pop
call
lret
movsb
jb
add
inc
pop
sahf
cmp
xchg
jle
int
fmull
loop
mov
jecxz
and
pop
or
and
mov
mov
shll
pop
sub
mov
jb
inc
mov
fsubl
scas
sarb
xchg
xchg
inc
paddb
push
add
xchg
fdivs
cmp
push
push
mov
cmc
or
int
mov
and
sti
dec
orl
lcall
inc
push
mov
xchg
xor
mov
or
lahf
sbb
rorl
das
ja
imul
shl
sbb
shll
fidivs
std
mov
inc
in
sarl
into
int
inc
lea
or
sub
cli
lcall
adc
sbb
ficomps
movsb
sub
into
mov
cmp
cmpsb
lcall
add
inc
lea
in
pop
push
or
js
xor
ss
jb
mov
lea
add
lret
sar
xchg
dec
fdiv
pop
in
jge
push
mov
andl
xchg
sub
lock
call
push
rcrb
imul
sbb
mov
sub
xchg
imul
push
lret
in
in
outsl
sbb
pop
fdiv
adc
sahf
scas
in
mov
fidivs
sahf
cli
xchg
push
and
inc
and
fwait
pop
xchg
lret
out
dec
mov
or
movsb
hlt
lods
mov
test
push
insl
addl
loope
inc
pop
insb
mov
fcmovnb
outsl
push
insb
cmp
lahf
lods
cmp
dec
push
cmp
xchg
les
rcll
les
fstpl
in
xchg
mov
adc
dec
push
push
mov
loope
push
and
mov
or
cld
xchg
ret
sbb
rolb
lods
sbb
test
ret
ja
inc
aas
mov
mov
add
outsb
push
or
xor
fcomi
clc
or
sub
bound
inc
mov
enter
pop
sub
mov
fistpll
fyl2xp1
shrb
jne
hlt
xor
popa
dec
mov
push
jl
shl
repnz
push
cmc
repnz
inc
inc
jg
fisttpll
inc
int3
jo
mov
cmc
and
push
leave
ds
test
nop
std
nop
pop
in
cmp
std
pop
sbb
jno
aaa
subb
lret
push
add
sahf
and
call
pop
jae
ss
in
sahf
mov
xchg
repnz
lahf
push
stos
bound
cmp
cmc
push
call
sbb
xor
pop
ret
inc
cli
mov
mov
pop
dec
filds
xchg
sbb
xlat
mov
cmp
inc
nop
sbb
popa
aam
mov
in
lods
arpl
divl
enter
dec
clc
lret
jmp
movl
mov
loop
cli
in
push
inc
cli
sbb
push
inc
mov
sti
pop
or
loopne
push
jg
xchg
cs
mov
fnstcw
test
mov
pop
mov
jmp
inc
inc
inc
fwait
push
pop
fst
add
sub
repz
xor
int
in
enter
sub
loope
out
into
xchg
mov
ja
xchg
xor
mov
cmp
mov
sbb
aaa
push
xchg
shll
xor
and
out
fldz
adcb
mov
mov
adc
pushf
popa
and
lcall
cmp
dec
inc
out
dec
pop
inc
cmp
fcomi
inc
jmp
addr16
shlb
pop
cwtl
hlt
add
xchg
roll
movsl
dec
mov
jne
xchg
and
xor
stos
add
stos
mov
or
xor
jns
fwait
push
push
and
insl
int
jmp
xor
test
and
push
mov
loop
jo
dec
pusha
xchg
leave
aaa
in
leave
aam
xchg
lret
shr
adc
je
jb
push
or
add
sub
add
out
push
fnstcw
xchg
cld
dec
sub
fwait
mov
es
andl
adc
fldl
mov
sub
or
stos
enter
add
adc
pop
xor
mov
inc
into
xchg
mov
mov
and
jp
mov
jle
jnp
xor
xor
sub
pushf
push
cwtl
andl
insl
sub
in
dec
cmp
clc
jge
cs
mov
mov
outsl
push
mov
jae
icebp
stc
xor
adc
stos
push
cmp
aad
outsl
pop
fstpl
lcall
jne
push
xchg
lcall
mov
mov
mov
add
pop
sbb
inc
mov
cmpsb
aaa
iret
push
mov
and
in
adc
or
or
cli
push
sub
test
mov
jmp
mov
lods
xchg
inc
inc
daa
jns
adc
outsb
insl
mull
mov
imull
das
js
enter
loopne
mov
mov
pop
out
enter
adc
sbb
fsub
movsl
pop
sub
mov
lret
mov
mov
les
aas
call
icebp
mov
mov
fcmovne
test
outsb
daa
fistpll
outsb
jno
cmpsl
mov
sbb
es
push
or
lock
cmp
cmp
int
shrb
dec
lahf
notl
ljmp
aam
push
gs
jg
dec
negb
outsl
lret
inc
in
loope
test
loopne
lcall
mov
mov
xchg
lods
sarb
inc
insl
and
jne
add
sti
ret
loopne
cwtl
notl
cmpsb
push
cmpsl
mov
les
sub
xlat
push
icebp
mov
jnp
stos
sahf
ret
sub
xor
mov
mov
sbb
mov
pop
std
add
insl
jne
inc
pop
push
jo
ret
int
xor
push
shlb
in
dec
sahf
mov
sti
pop
in
fildl
sbb
loope
in
xchg
mov
xor
push
pop
mov
fsubrs
cmp
in
sub
inc
shl
mov
stos
das
data16
imul
push
enter
stos
call
inc
push
push
out
sub
out
mov
mov
jmp
pop
inc
xor
mov
stos
sub
outsl
xchg
cmp
push
addr16
repz
push
jne
xor
pop
out
inc
in
in
aas
mov
xchg
add
outsb
pop
ret
mov
popa
rcrl
mov
sub
lcall
sti
mov
mov
jnp
repnz
xchg
cmp
lock
iret
xchg
jmp
xor
lret
fnstcw
in
addr16
enter
inc
and
call
dec
push
jge
pusha
mov
xchg
mov
xchg
dec
addl
lret
jnp
sbb
inc
push
mov
jg
xchg
adcl
push
arpl
mov
das
roll
xor
popa
subl
popf
popa
leave
and
mov
rcr
movsl
stos
ret
rcll
ret
push
leave
xor
inc
xor
hlt
stos
data16
mov
push
push
cmpsb
aas
imul
lds
cwtl
mov
mov
mov
negb
nop
mov
das
ja
jecxz
pop
sarb
out
mov
into
xor
push
inc
push
aad
lret
sub
and
adc
inc
mov
push
add
mov
mov
mov
in
popf
lods
pushf
out
jne
xchg
mov
pop
mov
sbb
insb
cmpl
lret
xor
sub
out
out
stos
ds
fadds
pop
jae,pt
mov
xor
pusha
jge
adc
cmc
addl
add
sbb
fmuls
frstor
mov
mov
jo
gs
mov
cltd
sub
test
inc
xlat
pop
adc
lret
mov
cmpsl
outsl
js
das
push
fs
outsl
ret
mov
arpl
xor
push
sbb
push
hlt
stos
dec
aas
cmc
bound
call
sbb
dec
inc
xchg
mov
jne
xchg
fstp
les
mov
fs
js
jl
mov
push
push
pop
cmp
sbb
mov
mov
jge
xor
insb
sub
subb
push
roll
int3
mov
lods
ret
fldenv
addl
fstpl
xchg
xor
sub
int3
xchg
cs
cmp
rol
sub
add
xor
jle
daa
inc
xchg
lds
test
jns
sbb
or
xor
pop
aaa
cmpsb
cmp
dec
js
or
or
aad
or
jb
xor
xchg
jne
mov
mov
xor
push
lret
aas
subb
rolb
jge
add
enter
pop
imul
sub
dec
out
fucomi
dec
jmp
cmp
test
pushf
cs
ds
scas
loopne
shlb
sbbl
rcrl
out
xlat
dec
imul
data16
mov
clc
es
adc
leave
fsts
and
add
addr16
jbe
sahf
gs
les
jecxz
mov
in
stos
add
or
movsl
out
sahf
daa
lods
fmull
test
pop
fildl
ret
lods
ss
in
mov
loop
cld
adc
popf
lcall
dec
cs
mulb
inc
ret
cs
cmp
push
in
inc
sub
scas
xor
jmp
cmpsb
divl
push
pop
dec
add
or
adc
inc
gs
inc
adcl
dec
xor
lahf
cld
push
xor
or
icebp
cld
pop
stos
inc
mov
push
xchg
cwtl
mov
pop
push
and
test
lret
inc
js
xchg
push
xchg
jmp
and
push
dec
shrl
adc
insl
ja
sahf
stos
add
mov
icebp
xor
cltd
add
push
cs
jmp
dec
sub
push
scas
fldcw
sub
sub
cmpsl
adc
icebp
addr16
pop
mov
incl
or
mov
xor
mov
xchg
jmp
sti
pushl
xor
lods
adc
dec
mul
push
or
mov
add
in
pop
cwtl
inc
pop
cltd
cs
sbb
out
inc
mov
adc
push
pop
ds
cmp
push
add
mov
pop
clc
mov
mov
mov
pop
in
outsb
mov
lcall
pop
decb
xchg
adc
clc
ljmp
cwtl
pop
or
xchg
mov
in
mov
mov
mov
pop
xchg
push
pop
ja
sub
inc
cmp
int3
or
and
idivb
rcll
inc
les
add
cmp
mov
push
pushf
mov
jp
or
add
aas
jecxz
cwtl
aam
mov
mov
xchg
sub
pop
mov
adc
fyl2xp1
cmc
mov
jp
push
test
xchg
sbb
inc
mov
sub
inc
mov
aas
mov
jne
nop
je
fstpl
mov
lahf
imul
pop
mov
sbb
xchg
outsb
push
clc
or
mov
xchg
mov
xorb
cmpb
sbb
pop
mov
cmpsl
xchg
mov
push
data16
xchg
xchg
iret
lock
xorl
adc
cmp
adc
es
repnz
loope
add
mov
lods
sbb
jb
dec
mov
mov
or
insl
lea
aaa
adc
inc
mov
mov
leave
scas
aaa
cmp
dec
jecxz
pop
dec
std
popl
aas
daa
dec
xchg
addr16
pop
cmp
sti
mov
and
or
in
pop
and
loop
and
scas
inc
push
popf
dec
loopne
je
adc
mov
dec
scas
mov
push
jp
test
cmp
jnp
nop
inc
adc
fdivrs
fimull
pusha
sub
cmp
andb
enter
adc
dec
fildl
clc
insl
mov
dec
lret
jle
outsl
mov
cmp
pop
negb
or
repz
xchg
push
or
dec
cs
push
aam
arpl
mov
jmp
push
jmp
xor
xlat
xchg
cwtl
clc
adc
shll
jno
sub
pusha
addr16
dec
push
repnz
cmp
adc
sub
jp
insl
xor
add
push
cwtl
jge
dec
daa
adc
pop
fcomi
rcrb
add
jbe
ss
pop
and
push
and
push
inc
ja
mov
andl
mov
pop
hlt
pop
and
es
testl
and
aas
sub
add
mov
adc
mov
into
adc
out
pushf
int3
sbb
ret
push
into
push
push
sbb
mov
lret
ds
xchg
push
adc
pop
mov
jmp
inc
jns
mov
mov
pop
mov
hlt
lods
sbb
cmpsl
aaa
dec
imul
aaa
dec
enter
std
mov
das
mov
test
sub
negb
and
adc
xchg
je
adc
movsb
jecxz
cmp
jne
std
in
lret
dec
or
andl
loopne
mov
roll
dec
and
rcr
sub
mov
sti
mov
xchg
repz
sti
pushf
outsb
pop
jg
or
test
mov
jns
jnp,pt
dec
sbb
imull
cs
inc
dec
jmp
sub
outsb
push
jecxz
xchg
add
call
lds
mov
jl
test
lods
out
cmp
sub
pop
idivl
xor
pop
mov
jno
daa
pop
or
and
mov
test
or
cmp
pop
or
nop
scas
int3
popf
xchg
xchg
pop
dec
cli
adc
sub
mov
fs
cmpsl
insl
mov
out
test
add
cmp
scas
lret
sub
call
mov
addl
cmp
push
cmp
and
or
ror
mov
mov
ss
fs
das
adc
leave
dec
add
mov
xor
jl
pusha
cmpsb
ja
xchg
daa
jle
enter
call
inc
call
sarl
out
xorb
xchg
xlat
pop
mov
push
sub
stc
mov
leave
push
repz
ljmp
mov
in
out
out
aam
jmp
cmp
test
fnstcw
inc
jge
jle
aas
xor
movsl
mov
clc
cmpsb
cmpsb
movsb
cmp
cmc
and
dec
loop
inc
jae
sahf
sti
int
and
sahf
mov
ret
ljmp
sahf
push
fdivrs
xor
test
fistpl
scas
sbb
jg
jbe
jle
fcomi
lcall
lods
addb
mov
mov
adc
cmpsb
loope
scas
sbb
pop
dec
xlat
add
stos
push
out
cmp
cwtl
pop
call
nop
mov
jge
stos
or
or
sub
popa
jge
inc
out
testl
rorl
adc
ljmp
mov
mulb
sbb
or
popa
adc
lods
leave
pop
popf
inc
popf
clc
sub
mov
jno
movsb
or
icebp
inc
cmp
xchg
adc
push
lret
pop
cld
push
add
cmp
jge
pop
push
dec
inc
mov
xchg
lret
xchg
lcall
jns
mov
jnp
int3
jb
jge
mov
ds
inc
lahf
inc
and
cltd
xor
mov
sub
or
push
repz
sbb
jp
jle
rcrb
out
push
pop
out
dec
cli
aas
sahf
sbb
pop
int
push
out
sar
pop
in
cmp
std
mov
jge
xchg
and
sbb
aam
ljmp
jecxz
out
ficompl
test
ret
inc
sub
xchg
mov
jae
inc
in
fs
decl
mov
inc
stos
inc
dec
and
sub
cmp
lret
fistps
fstl
lods
daa
ljmp
jb
mov
cmpsl
add
rorl
sarl
xor
in
pop
mov
push
aas
leave
sub
sbb
movsb
mov
xor
js
pop
mov
add
mov
sub
cmp
cmp
dec
push
mov
cmp
pusha
les
cmp
xor
adc
dec
and
jle
cmpsb
xor
xor
mov
cmc
pop
cmp
mov
testb
test
or
iret
in
pusha
test
lcall
int3
mov
stos
stc
shlb
lock
push
test
pop
fadds
neg
xorb
in
in
lock
orl
sbb
aam
push
pop
call
lahf
or
ds
dec
push
jno
push
loopne
stos
jmp
mov
stos
pop
test
loope
mov
jno
jnp
add
xchg
jp
stos
out
mov
cmp
push
jle
sbb
inc
shl
push
xor
dec
push
test
mov
mov
call
decl
cmc
jl
outsb
lods
subl
push
mov
add
add
loopne
arpl
cld
cwtl
iret
sarl
fdivl
out
rcll
cmp
push
jmp
mov
sti
testb
and
bound
jp
pop
aaa
mov
push
dec
cltd
jns
fucom
lret
jno
mov
in
mov
unpcklps
aam
push
mov
negb
and
and
inc
les
cvttps2pi
sbb
mov
and
cmp
mov
pop
sub
lods
imulb
sbb
daa
sub
insb
xchg
sub
cs
xchg
sub
or
and
add
inc
fistpl
xchg
or
pusha
push
add
stos
aas
dec
xchg
out
adc
sub
inc
jb
mov
daa
mov
testl
dec
test
adc
shrb
add
mov
sbb
jmp
arpl
cs
lcall
jns
adc
in
mov
aas
add
mov
or
sbb
das
mov
stos
xchg
sub
decb
adc
std
cld
fld
sahf
and
ret
sbb
mov
outsb
popf
xchg
in
add
jno
adc
or
pop
adc
pop
sub
pusha
xchg
out
cmp
inc
test
inc
and
push
lret
mov
sbb
pop
pop
mov
fs
cmp
daa
or
sub
pop
xor
shl
push
cs
in
leave
cmp
mov
ret
adc
cmpsl
dec
pop
addl
lds
aaa
rclb
dec
sub
xor
gs
mov
adc
adc
mov
ja
aad
cmp
scas
dec
inc
out
add
fidivrs
inc
outsl
push
dec
dec
psubsw
push
cmp
mov
js
inc
xchg
stos
aas
mov
jno
pop
lea
orb
out
ret
in
fwait
push
jb
lods
popf
loop
xor
push
sbb
pop
imul
add
add
pop
mov
ret
or
cmp
mov
gs
imul
push
nop
jo
ljmp
stc
stos
jg
daa
push
js
sbb
out
es
sub
mov
sarb
bound
xor
jnp
addl
add
leave
push
fdivs
inc
sub
cli
test
cld
or
ds
jo
sub
jne
ret
sarl
les
punpcklwd
hlt
fs
add
int3
arpl
pop
scas
mov
ret
repz
push
clc
dec
and
mov
popf
jo
lahf
pop
idiv
adc
repnz
sub
mov
hlt
xchg
fimuls
leave
notl
and
push
sbb
lahf
ds
or
fwait
cli
test
xor
and
andl
jecxz
mov
repnz
sarb
setl
mov
xor
push
dec
shrb
push
xchg
lahf
insb
adc
dec
loop
negl
fmuls
mov
negb
inc
daa
jge
cmp
enter
mov
repz
in
mov
pop
cwtl
jmp
mov
mov
inc
mov
inc
dec
aaa
dec
add
movsl
cmp
cmc
cmp
jg
inc
lret
and
jp
and
lret
xchg
bound
jne
call
adc
or
mov
inc
xor
sub
filds
mov
std
push
pop
sub
mov
out
lret
int
pop
mov
std
std
adc
stos
inc
sbb
pop
ss
addr16
addl
jbe
push
mov
sub
daa
mov
aas
dec
mov
pushl
xchg
dec
dec
in
ljmp
push
lock
push
inc
mov
enter
adc
addr16
cwtl
insl
mov
popf
sbb
stc
adc
or
bound
mov
adcl
aam
xchg
in
cmc
aaa
stos
pop
cmp
int3
call
adcb
xchg
cltd
movsl
jg
cmp
or
xor
hlt
inc
popa
addr16
imul
sarb
adc
inc
mov
xchg
mov
jns
cmpsl
jg
pop
mov
xchg
addl
push
xchg
sti
adc
cltd
push
test
addb
pop
cmpb
incl
pop
out
xorl
adc
push
ja
shlb
mov
call
clc
sub
and
sbb
inc
mov
imul
pop
arpl
in
xchg
jae
mov
gs
push
leave
shrl
cmpsl
mov
into
xor
test
xor
mov
sbb
and
ljmp
lea
loop
in
in
jns
mov
mov
mov
negl
or
mov
xchg
jle
xor
jg,pt
jae
jb
ficoms
movsb
dec
int
jne
cmpb
test
sub
incb
inc
inc
adc
rcrb
lahf
lret
cmp
xchg
cmp
dec
jb
inc
aam
into
bswap
jmp
cli
fs
push
imul
ss
pop
jle
add
pop
repz
dec
mov
push
add
pushf
iret
add
and
iret
sbb
in
mov
cmp
sbb
sub
out
push
and
out
icebp
int
icebp
in
mov
fucom
lret
jne
notb
or
adcb
and
or
and
js
fistpll
push
mov
lods
jecxz
loopne
or
or
cmpsl
cmp
stos
xchg
jl
pop
in
xchg
std
pusha
jmp
imul
dec
leave
test
shll
push
subb
int
add
icebp
inc
ss
add
lea
adc
es
cmp
inc
pop
gs
notl
push
addb
out
mov
adc
and
scas
mov
sub
or
idivl
mov
xchg
xor
jno
or
mov
sub
int
and
call
mov
adc
cltd
dec
in
cmc
xchg
sbb
pop
les
out
sub
cmc
mov
push
and
mov
gs
loope
pop
or
xor
pop
mov
or
sbb
inc
xor
and
loop
or
nop
push
xor
add
sahf
add
fistl
stos
adc
ss
out
outsl
or
xor
lods
mov
sbb
push
cltd
pop
adc
sub
lods
pop
stos
or
test
inc
add
sub
xor
mov
push
outsl
xchg
mov
icebp
imul
mov
stc
jp
stos
inc
and
test
cmp
dec
push
imul
adc
pop
adc
jp
sahf
jae
mov
sbb
xor
mov
std
jg
daa
mov
je
cli
in
pop
pushf
fbstp
fxch
clc
mov
push
fdivl
addb
stc
repz
mov
addr16
cli
or
sbb
dec
push
fmul
pop
xchg
jb
pop
dec
inc
jnp
outsb
pop
es
ret
stos
into
push
xchg
frstor
cmp
adc
int3
pop
lahf
push
mov
cltd
in
loope
int3
divb
scas
pop
cmp
aaa
push
mov
mov
ficompl
jno,pt
es
dec
cmp
sbb
popa
dec
sbb
add
xor
mov
rcll
and
repnz
adc
xchg
or
sbb
data16
lods
add
mov
jg
or
outsl
rcr
faddl
stos
sarl
push
sub
push
mov
sarb
pop
sub
fcoml
aas
shrl
jmp
ret
icebp
sub
inc
rclb
sub
push
orl
cld
repnz
xchg
jmp
dec
cmp
xlat
jmp
cmpl
int3
xor
pop
mov
xchg
inc
jecxz
lret
jne
addr16
sbb
sbb
push
loope
stc
or
fidivrl
jmp
shlb
sbb
in
and
adc
ficoml
test
fcompl
shrl
cmp
xor
inc
jle
push
mov
stos
jge
xchg
push
fwait
xchg
in
cli
mov
sbb
out
mov
sahf
inc
xchg
sbb
cmp
lret
sub
lahf
fwait
inc
int3
out
push
flds
cmp
jnp
jbe
addl
add
sahf
hlt
xchg
outsb
ror
es
test
es
sbb
stos
push
loope
xchg
xor
mov
test
rcrb
mull
sbb
inc
and
push
mov
inc
pushl
lods
loop
add
mov
js
xchg
hlt
jge
xor
add
test
mov
jbe
mov
repnz
in
inc
mov
add
mov
dec
mov
cltd
loopne
push
push
repnz
jmp
lret
mov
in
mov
and
in
out
cld
xor
sbb
popa
inc
pop
add
adc
mov
push
int3
xor
movsb
aam
aam
xchg
dec
ds
in
aas
lcall
jmp
nop
hlt
push
fcomi
repz
xchg
outsl
flds
mov
and
js
ret
dec
dec
add
dec
cltd
icebp
jns
lcall
or
lret
lret
inc
test
in
cli
adc
frstor
xchg
call
repz
sbb
xor
imul
lahf
add
outsl
addr16
xchg
into
cmp
jmp
mov
insb
sahf
sbb
add
mov
ret
mov
or
out
adcl
cmp
idivb
rolb
mov
popf
or
shlb
jmp
scas
jl
es
cmpl
jecxz
in
add
daa
add
inc
jmp
dec
mov
adc
adc
scas
fsubs
mov
push
inc
cmp
sub
xlat
sub
pusha
ljmp
sbb
and
call
jae
xor
mov
outsb
sbb
movsb
stos
lret
cmp
out
sahf
mov
aam
in
ja
inc
and
testb
pop
jno
adc
pushf
dec
mov
hlt
sbb
pusha
mov
adc
stos
je
xchg
cmc
jmp
arpl
mov
sbb
mov
ljmp
adc
fadds
adc
pop
pusha
mov
sti
mov
push
pop
jge
adc
dec
push
lods
cli
lret
in
int3
adc
jge
dec
scas
dec
scas
dec
and
dec
movsl
int
sarl
add
sbb
lahf
std
pop
fcmovu
push
cmp
test
pop
cmp
xchg
mov
push
inc
mov
bound
ljmp
push
jno
outsb
cmp
shrb
adc
or
cmp
xchg
pop
mov
inc
loopne
test
stos
jb
ds
xor
pop
push
xor
icebp
and
leave
js
mov
push
inc
std
loop
inc
fsubrl
mov
ss
movl
scas
dec
pop
sub
jnp
dec
pop
rol
rolb
ss
jb
testl
jb
xchg
mov
jecxz
fsts
repz
ret
gs
add
push
int
fisttps
movsl
cmp
push
or
pushf
xchg
repnz
cmp
or
cmp
cmp
andnps
add
xchg
imul
xor
pop
stos
jle
mov
cltd
sub
adc
pop
clc
shl
and
adc
insl
test
dec
fwait
dec
mov
cmp
jecxz
ds
jae
sbbl
cli
scas
lea
cmpsb
cli
aam
jae
into
mov
and
push
xchg
or
insb
pop
out
icebp
call
add
int
fnstenv
mov
ret
in
add
cltd
push
leave
sahf
add
or
inc
sarl
pop
pusha
adc
cmp
pop
insb
adc
test
subb
mov
adc
ss
fwait
adc
push
je
js
bound
test
roll
dec
push
pop
sub
xchg
pop
xlat
lcall
pop
in
outsb
push
add
enter
ljmp
outsb
mov
in
dec
add
movsb
inc
in
xchg
dec
ja
test
push
add
mov
ret
inc
xchg
out
mov
mov
rorl
nop
cs
jo
data16
sbb
xor
cld
adc
adc
xor
push
stc
pop
mov
outsl
push
fwait
ds
push
xchg
pushf
mov
dec
sahf
xor
sub
fwait
push
add
mov
xchg
adcb
pop
cltd
add
jg
int
lret
jecxz
fimull
jns
push
and
sub
jns
or
and
inc
cli
pushf
mov
cmp
adc
pop
in
out
and
movsb
xchg
imul
mov
testl
xor
sub
divb
cmp
shll
iret
fwait
sbb
jg
outsl
lods
outsb
sbb
les
xchg
xchg
loope
jmp
mov
or
jl
mov
cmp
imul
mov
xor
ds
sbb
notb
fisttps
repnz
adc
xor
inc
push
cld
pop
adc
test
fisubrs
stos
daa
add
pop
xor
and
mov
mov
cmpsb
in
inc
arpl
or
xchg
test
mov
mov
insl
in
out
ret
pop
or
push
adc
es
or
mov
jno
inc
mov
rcrb
inc
inc
jge
cwtl
inc
and
ljmp
repz
mov
pop
mov
xor
mov
add
xlat
dec
push
pop
mov
sub
sub
sbb
lods
mov
ljmp
inc
mov
sbb
push
fists
repz
stos
pop
fistpl
xor
mov
popa
pop
xor
stos
mov
xchg
adc
xor
pop
mov
push
hlt
pop
sbb
scas
and
jge
or
mov
out
clc
inc
ss
or
pusha
dec
or
mov
jne
sar
stos
addr16
fstpt
and
cmp
push
pop
mov
cmpsb
mov
in
or
loope
jl
ds
pop
icebp
pop
inc
mov
sbb
stos
mov
int3
popa
fistpl
pop
orb
pop
or
push
dec
into
fisttpl
adc
ret
mov
lret
cmp
stos
nop
cmp
lods
xchg
push
adc
daa
add
xor
outsb
js
pop
sarb
mov
inc
test
inc
mov
dec
xchg
shrl
push
fldl
aas
ret
pop
adc
lods
inc
mov
sbb
jns
ficoms
add
pop
bnd
sub
mov
repnz
sbb
ss
mov
test
pusha
pop
insb
mov
daa
sbb
sbb
add
lods
test
loope
pop
adc
in
xchg
sbb
xchg
add
sti
and
or
xchg
icebp
int
cmc
in
xchg
aas
mov
imul
cmp
in
lock
xchg
daa
push
xchg
sub
jge
lret
mov
dec
mov
xchg
sbb
loopne
pusha
pop
sub
into
cmpb
js
cmpl
xor
daa
and
jmp
ljmp
cltd
shlb
mov
cmp
imul
pop
out
push
xchg
xchg
in
insb
pop
cmpsb
jmp
mov
test
sub
clc
or
lea
outsb
out
and
or
sbb
fs
mov
rclb
out
xchg
sbb
jle
fnstsw
jae
dec
xchg
sar
lods
test
mov
dec
movsl
and
sub
pushf
ret
push
aas
xor
data16
insb
test
mov
stos
lahf
pop
dec
inc
outsb
mov
mov
rcrb
inc
into
mov
xchg
rcll
sbb
xchg
sub
inc
xor
pop
mov
jecxz
lods
out
ffree
sti
jnp
out
inc
xor
mov
popa
jb
pop
lcall
push
push
xchg
dec
jecxz
adc
and
sub
test
jo
mov
test
or
mov
and
sbbl
lods
in
pop
nop
idiv
cmp
test
pop
mov
or
xlat
inc
and
test
sti
dec
rolb
test
imul
sbb
push
ljmp
cmc
sub
andl
loope
sahf
jp
div
and
sub
pushf
outsl
cld
and
out
lret
rcrl
mov
pusha
xchg
fmull
push
lret
stos
out
cmp
jae
add
aad
sti
ds
lods
dec
and
push
cwtl
pop
test
cld
sub
cltd
inc
out
fisttpll
cmc
sti
sub
sahf
mov
movsb
push
pop
stos
xlat
and
pop
iret
pop
jo
xor
push
dec
out
push
leave
pop
rorw
pop
das
enter
mov
test
or
or
in
xchg
xor
adc
mov
daa
test
dec
arpl
xchg
shrb
clc
and
stos
pop
inc
ljmp
mov
inc
adc
sub
cmp
ja
out
fsubl
add
mov
cld
std
repz
int3
shrb
dec
adc
pop
cld
lahf
inc
push
sahf
movsl
test
js
sub
pop
xor
out
or
and
ret
mov
stos
lock
add
sbb
adc
data16
fdivrl
test
lods
int
inc
sub
pop
rclb
insb
gs
fsubrs
dec
jno
pop
fwait
outsb
loope
negl
outsl
cmpsl
add
rcr
hlt
adc
xchg
jle
out
mov
notb
push
and
enter
inc
push
adc
shlb
notl
jecxz
lods
xchg
jb
scas
and
push
cli
aas
mov
stc
cmp
xchg
js
test
pop
dec
aas
in
enter
enter
cmp
pop
int
or
sub
jbe
and
lcall
popf
jp
adc
cmpsl
into
loop
mov
ret
in
int
adc
jecxz
sbb
xchg
xchg
scas
xor
out
lods
gs
sub
sbb
sub
xor
aaa
es
cmpl
mov
xlat
repz
ss
fdivrl
push
fisttps
dec
ss
lret
dec
cmp
add
out
iret
sti
mov
sahf
lods
call
add
insb
in
jne
ret
ja
mov
mov
sbb
push
cmp
cmp
shll
adc
and
les
pop
jb
xchg
mov
out
or
dec
cmp
push
add
mov
cs
add
lret
icebp
or
cmpsl
es
cmp
arpl
out
cmpsl
or
dec
xor
mov
jno
ret
sub
jo
sqrtps
outsb
ret
push
into
ret
fcompl
sbb
or
iret
out
mov
jp
dec
cmc
jne
aaa
and
inc
into
call
std
and
cwtl
push
clc
mov
and
ret
lods
and
je
fucom
mov
mov
dec
clc
sbb
jmp
aam
fwait
into
add
loop
sbb
add
rolb
cmp
cmpsl
pop
into
cltd
popa
out
push
pop
aad
mov
popa
shll
cli
cld
fcomps
pushl
fwait
add
pop
push
je
loopne
push
sti
rclb
or
xchg
out
gs
nop
dec
nop
fstl
cld
imul
xchg
inc
mov
lock
pop
jle
shr
mov
adc
push
cwtl
stos
jmp
mov
inc
inc
xor
pusha
rcr
out
insl
insl
cmp
test
imul
lock
pop
outsl
imul
mov
popl
enter
sub
mov
push
pop
insb
in
mov
pop
mov
inc
ficompl
adc
addr16
lahf
je
in
cmp
stos
or
mov
dec
inc
out
lods
out
mov
lcall
pop
cmp
pop
adcb
je
insl
mov
jno
pop
punpckldq
test
jbe
sbb
int3
repnz
mov
test
push
fst
rcrl
push
repnz
jo
lahf
test
mov
adc
jmp
mov
and
inc
pop
rcl
decl
xchg
cmpsb
ljmp
and
aaa
fstps
jmp
mov
int3
stos
jno
mov
test
and
rolb
mov
popf
mov
mov
cmp
cmp
or
mov
popa
xor
rclb
or
lret
pusha
cmpsb
push
imul
mov
add
add
xlat
xchg
adcb
sbb
sbb
push
add
out
xor
lds
or
mov
mov
aas
inc
scas
test
pop
in
bound
rorl
or
xchg
sub
push
insl
mov
push
xchg
dec
mov
or
jecxz
xor
je
jl
dec
inc
push
leave
mov
xchg
pushf
je
cmpsb
mov
fwait
roll
jle
movsb
ret
push
or
clc
repnz
push
jno
hlt
dec
pop
pop
adc
and
orl
in
lds
pop
addr16
lahf
in
orl
push
dec
pop
nop
subb
fucomp
push
in
rclb
lods
daa
xchg
cld
xorl
adc
push
adc
sbb
addl
dec
lods
or
or
inc
shr
jbe
xorl
jle
sub
and
aad
mov
xchg
dec
aad
add
punpckhwd
lds
packssdw
and
mov
mov
mov
pop
xor
cld
sub
movsb
pop
mov
cmp
cltd
enter
sub
cmp
sbb
mov
into
xor
push
xchg
enter
cmpsl
ljmp
mull
mov
mov
dec
cmc
sbb
jne
add
add
fmull
call
jmp
xchg
js
jp
adcl
andl
arpl
jbe
sbb
icebp
mov
cmpsl
xor
cmpsl
rorl
das
outsl
cmp
xor
jecxz
ficoml
push
pop
pusha
imul
fidivl
lds
out
aam
movsb
xchg
ret
movsl
pop
clc
cld
or
dec
xchg
adc
aaa
push
dec
call
out
dec
dec
popf
cltd
repnz
mov
jge
and
call
loope
lock
dec
inc
jno
jnp
inc
shl
loopnew
repz
insb
sub
add
cmp
aam
stos
add
add
pushf
mov
nop
or
or
sbb
mov
pop
fisubs
sbb
dec
push
daa
mov
cltd
cmp
lods
divl
pop
pop
adc
rcll
ds
xchg
mov
sub
ja
adc
lea
mov
xor
fnstcw
mov
inc
lret
or
popa
adcl
jne
sbb
xchg
or
fstpt
cmc
hlt
mov
sahf
in
mov
out
mov
sub
stc
mov
lcall
mov
aaa
and
ficoml
dec
xchg
xchg
dec
movsb
add
or
hlt
enter
movsb
fdivl
imul
ficoml
mov
mov
pop
xor
repz
push
add
mov
pop
cli
or
pop
dec
mov
fbstp
mov
subl
arpl
xchg
test
rcll
jns
stos
adc
xchg
dec
mov
push
loopne
rorb
insl
lcall
jae
cmp
ja
xchg
jmp
cmp
inc
mov
jle
test
insl
xchg
sbb
ljmp
sub
or
xor
pop
add
mov
cmp
mov
pop
mov
andb
aad
outsb
jmp
dec
sub
repz
ret
enter
mov
shlb
sub
jecxz
pop
inc
loopne
inc
adc
cli
jbe
lret
iret
icebp
pop
sub
outsb
push
pop
cmpsl
pop
jae
and
mov
lahf
popa
jge
mov
dec
sub
inc
jbe
mov
mov
mov
mov
push
jbe
mov
aam
fdivl
ficoml
loope
aas
dec
sahf
fldenv
pop
test
negl
jne
xchg
repz
xorl
clc
pop
mov
int3
cmpsb
mov
imul
mov
sub
xor
ret
add
jg
cmp
lds
jmp
sbb
ja
sbb
bound
lock
int
push
repnz
xlat
scas
iret
xchg
pop
and
mov
xchg
fdivrs
loopne
mov
xor
cmp
push
cwtl
cld
dec
mov
xchg
add
fstpt
incw
mov
cmp
pop
dec
jnp
mov
dec
int3
lods
jl
push
push
cld
lcall
push
sub
adc
mov
and
or
sbb
int3
loope
or
in
sub
adc
int
adc
les
mov
mov
jmp
pop
push
ficoml
js
mov
push
testl
add
add
push
inc
jmp
mov
leave
dec
cmpsb
lods
aam
push
push
popa
cmp
test
fcmovnu
dec
movsl
test
bound
adc
mov
sbb
push
mov
sahf
xor
shl
out
add
imul
popf
mov
pop
fmull
jp
inc
aad
or
pop
ljmp
test
mov
push
subl
xchg
adcb
arpl
xor
out
roll
sbb
xorb
pop
push
dec
cmp
loopne
pop
adcl
cmp
xchg
cmp
enter
in
mov
cmc
lahf
sbb
leave
mov
jp
add
int
inc
popf
rcr
jg
cmpsl
mov
stos
xor
inc
scas
mov
mov
ret
jno
dec
outsb
fistpll
ret
and
icebp
mov
push
cmp
mov
dec
popf
pop
mov
addr16
dec
xor
test
bound
mov
add
jno
dec
pop
call
jmp
sub
and
jle
fildl
jno
mov
in
jle
inc
jecxz
xchg
add
adc
nop
cmp
cli
push
mov
mov
std
popf
int3
mov
push
insl
cmp
mov
fimull
inc
mov
gs
cmp
and
fisttpll
es
insl
push
jecxz
shl
ret
jnp
roll
push
jg
xchg
mov
adc
push
jae
jne
push
popa
lahf
fsub
dec
iretw
mov
push
mov
ret
push
repnz
pop
stos
inc
sbb
daa
xchg
insb
jp
lahf
jp
aad
and
push
mov
mov
cltd
lret
fcmovnu
js
mov
insb
ss
pop
mov
pop
xchg
test
and
call
cmp
icebp
daa
jl
fidivl
je
addr16
push
leave
out
mov
xor
mov
int
push
push
bound
cmp
insl
push
ss
stc
int3
pop
test
std
push
les
sbb
inc
and
int
push
ret
push
mov
loope
out
jno
outsb
mov
cmpb
in
out
xor
js
xor
lock
sbb
fimull
and
clc
or
cli
das
fnstsw
adc
in
int
xor
push
int3
xor
cltd
xor
gs
jne
addr16
outsl
push
pusha
mov
fildl
or
inc
fists
loope
daa
lea
sub
fmul
mov
cs
or
push
inc
dec
call
push
mov
and
test
dec
mov
sub
push
popa
les
lods
stos
subb
xchg
sbb
dec
dec
outsb
js
pusha
or
icebp
jne
cmp
lds
push
ds
xlat
mov
jge
popf
lods
into
xchg
cmc
mov
push
sbb
sbbb
mov
stc
cmp
and
xchg
aam
fs
mov
dec
push
jge
lods
in
cltd
imul
adcl
mov
fiaddl
lahf
pushf
bound
sub
mov
jl
inc
loope
loopne
push
ljmp
mov
out
mov
and
jmp
or
add
pop
xchg
daa
cmpsb
push
dec
sub
lods
mov
rcr
xor
cltd
sbb
imul
jmp
nop
pop
mov
shl
pop
in
inc
inc
and
mov
jg
push
dec
push
sub
sti
sub
xor
sti
dec
imul
outsl
cli
xchg
mov
sbb
out
inc
or
mov
jnp
dec
dec
jae
jge
pop
ret
push
sub
dec
and
sub
xchg
cmp
test
xchg
lret
enter
leave
fiaddl
dec
add
int3
dec
lahf
lods
loope
adc
cmp
mov
mov
scas
sarl
push
xor
das
xor
or
dec
pushf
and
aas
cmp
mull
or
push
mov
fistps
test
out
sub
sbb
aad
add
dec
add
jg
jge
fwait
mov
sub
in
mov
out
popa
je
push
xor
push
jp
dec
cmp
pop
xchg
fidivl
dec
into
jb
mov
scas
xchg
sub
out
mov
ret
rcrb
enter
inc
sub
aad
pop
mov
mov
mov
sarb
jmp
push
cmpsb
roll
pop
jns
mov
inc
xchg
leave
fstpl
mov
mov
xor
sbb
subb
shll
adcl
cli
mov
or
popf
daa
mov
lahf
xchg
in
int3
mov
jecxz
mov
inc
jecxz
insl
and
pop
add
outsb
call
loope
add
jg
andb
gs
mov
fildll
sti
rcr
mov
aam
mov
and
fimull
lods
or
pop
mov
icebp
pop
sub
sub
addr16
ret
test
jge
xchg
cmp
decl
not
mov
xchg
adc
dec
xchg
or
lret
imul
adc
int3
in
add
push
cmpl
mov
xor
int
test
ret
or
adc
lret
and
mov
xchg
add
ljmp
insb
add
or
mov
add
jmp
iret
mov
loopne
out
xor
sbb
xor
push
inc
sarl
pop
xchg
imul
pop
test
out
test
ljmp
pop
cltd
mov
fwait
es
sub
mov
insb
xchg
inc
xchg
jnp
movsl
popl
cmpsl
cld
idivl
daa
inc
xor
lcall
movsl
inc
rclb
jmp
outsb
and
xchg
add
cmp
mov
dec
push
imul
fimull
ja
or
ljmp
jnp
mov
jne
nop
outsb
inc
dec
push
das
sub
or
out
and
mov
adc
test
repz
cmovl
xchg
int3
mov
mov
out
scas
int
loop
loopne
out
adc
inc
into
push
xchg
in
or
inc
lods
icebp
push
movsl
jge
or
jecxz
out
adc
into
xchg
out
cmpsl
fldt
stos
add
mov
inc
inc
and
dec
das
scas
bound
test
push
pusha
stos
or
sarl
xor
sub
xchg
ficoms
insb
sbb
sub
adc
jno
loopne
out
dec
push
cmpsb
loope
vmwrite
xor
sbb
cltd
fnstsw
rclb
mov
inc
cs
rcrl
dec
sbb
inc
mov
dec
mov
push
push
push
lret
ss
outsb
or
insb
cmp
mov
fwait
std
in
mov
cmp
and
gs
xchg
and
addr16
mov
enter
jno
mov
pop
xlat
jp
imul
adc
in
jbe
lahf
mov
imul
push
mov
inc
xchg
cmc
aad
lcall
mov
jo
mov
sbb
or
addr16
cmp
push
nop
in
push
daa
push
sub
or
cmp
divl
mov
arpl
mov
mov
inc
or
int
les
rclb
lea
push
xor
mov
andl
mov
mov
pop
push
xchg
pop
xor
es
fsubrs
xchg
shrl
mov
je
pop
pop
popf
scas
aam
inc
lahf
and
in
std
jle
dec
sbb
notb
hlt
scas
xor
mov
mov
lret
mov
push
cmp
sub
or
lea
cmp
mov
enter
mov
hlt
in
call
pop
dec
xor
lock
pusha
icebp
fistpl
xchg
and
mov
and
pop
imul
mov
xchg
mov
jne
cltd
cli
decb
popa
pop
fnsave
in
mov
imulb
dec
pop
mov
cmp
int
or
pop
cmp
cmpsb
fadds
shlb
mov
into
dec
jno
pop
mov
jne
sbb
add
and
and
sahf
loopne
mov
sahf
dec
jns
jl
pop
lcall
jge
cmp
in
mov
inc
clc
iret
sub
add
mov
les
imul
sub
inc
in
rcrb
fs
mov
lret
arpl
cltd
xchg
push
fisubs
out
or
pop
cli
sbb
popf
loop
push
jnp
and
push
inc
ret
stc
stc
leave
pushf
gs
push
lods
jae
test
cmpsb
in
jae
das
inc
lret
pop
push
rcrl
inc
rcl
push
push
pop
pop
rorl
xchg
cwtl
pop
aam
das
stos
idivb
stos
pop
ret
push
lods
fidivrl
mov
push
daa
jmp
add
stc
and
sub
mov
data16
mov
pop
add
jne
out
mov
sti
cmp
cmp
push
inc
add
xchg
add
mov
data16
int
xor
out
pusha
cmp
scas
xor
popa
scas
incb
daa
pusha
xchg
xchg
fbstp
pusha
mov
icebp
push
sbb
addb
leave
cmp
pop
rclb
lahf
cli
call
push
scas
pop
push
incl
sbb
cli
or
sbbl
cwtl
jno
xchg
push
int
jp
mov
inc
insb
pop
push
in
lods
fnsave
stc
sti
sub
jg
push
dec
addr16
lods
into
loope
mov
or
cwtl
cs
cmp
jmp
fldt
push
mov
add
rclb
scas
jo
and
fistl
bswap
pop
ret
cld
icebp
test
sbb
fldl
jmp
lods
stos
push
je
cmp
lea
out
mov
stos
mov
fcmovu
xchg
and
movsl
sbb
hlt
lcall
inc
mov
rcll
jne
push
pop
mov
adc
and
pusha
mov
lds
adc
mov
and
cli
jge
inc
xor
out
jno
mov
lcall
sti
cmpsl
mov
inc
sarl
fs
iret
pop
shll
push
add
sahf
ds
cwtl
xchg
hlt
xchg
in
call
jbe
pop
push
out
cli
lods
or
daa
shlb
notl
mov
mov
inc
or
adc
xor
cs
jl
jg
push
das
ret
stos
and
jae
popa
cmpsb
mov
push
push
xchg
push
sub
sub
out
jge
dec
or
sub
jge
mov
mov
cmpsl
pop
dec
pop
mov
ret
inc
push
push
sub
pop
subl
sbb
jp
push
mov
leave
stos
mov
inc
sub
movb
mov
pop
enter
clc
mov
adc
lods
cmp
jmp
push
sub
mov
jmp
out
arpl
fucomp
and
aad
outsl
cld
movsl
lds
dec
icebp
stos
sarb
mov
jg
cmpsb
push
jo
cld
fisubrl
neg
or
out
cmp
inc
int3
and
xor
add
fmull
adc
add
or
std
push
xchg
loopne
xor
xchg
mov
push
push
mov
repz
ds
mov
fidivl
push
jns
jae
mov
mov
pusha
sti
push
repz
or
adcb
iret
enter
rorl
lret
mov
loop
popf
aam
xchg
pop
sbb
mov
test
push
xchg
add
insb
jg
ss
stos
push
xor
pop
dec
add
fwait
dec
nop
mov
loop
std
push
in
cmp
shlb
fadds
pop
cmp
push
dec
xor
cmp
mov
inc
les
jg
in
fldt
cmp
stc
mov
rcr
arpl
cmc
rcrl
mov
int3
sbb
cwtl
push
test
inc
mov
pop
fcomip
lcall
pop
and
mov
push
and
mov
dec
sub
cmpl
dec
shrb
pop
sub
pop
rolb
jmp
mov
mov
jne
clc
nop
and
xchg
int
fdivrs
sub
pop
sbb
mov
and
add
dec
pop
inc
jno
lcall
lahf
adc
in
cmp
mov
ljmp
shrb
movsl
and
jne
pushf
sbb
jo
andl
sbb
jb
xchg
mov
xchg
loop
and
stos
or
pushf
dec
cmp
sbb
cmpb
mov
popa
aas
in
push
pushf
jmp
jecxz
push
sbb
int3
fnstenv
push
mov
sub
xchg
hlt
sub
jbe
xchg
shrb
push
inc
xor
cmp
mov
insl
outsl
popa
fadds
push
push
jmp
shll
loop
mov
adc
mov
add
clc
or
out
push
in
add
adc
adc
push
xor
mov
cmc
inc
jo
cld
xlat
xor
or
lods
sbb
jle
jno,pt
mov
add
cmc
sti
jge,pn
rcrb
xor
cld
mov
inc
scas
mov
clc
scas
jo
cmp
mov
push
jo
jp
sub
mov
ret
push
push
mull
out
jno
pop
xchg
shlb
add
mov
dec
dec
lahf
mull
mov
call
and
xchg
xchg
loop
out
rolb
rorb
mov
sub
in
sbb
sub
push
lahf
inc
or
cmc
mov
int3
adcl
rcrl
and
stos
add
push
iret
in
and
nop
call
leave
xchg
adc
ret
negb
add
cmpsb
push
pop
ret
movsl
pop
jmp
mov
jle
addr16
inc
jmp
mov
lods
adc
inc
and
jmp
cmp
push
les
and
rcrl
scas
test
andb
shll
add
loope
movsl
rcll
push
xchg
cmp
aas
xor
lods
jnp
shll
push
inc
outsb
pop
popa
js
xchg
inc
dec
mov
jmp
in
ss
jno
stc
mov
pop
mulb
pop
js
jge
push
outsb
inc
lock
and
cwtl
push
enter
in
mov
xchg
js
movb
jnp
mov
inc
xor
cmc
cli
imul
mov
call
xchg
movsl
ds
jnp
mov
adc
lds
sub
mov
xchg
roll
daa
and
je
inc
mov
bound
cltd
mov
dec
or
gs
xchg
ror
mov
mov
cmp
pop
jne
cmp
lret
sbb
insb
dec
std
inc
lret
in
or
jp
loopne
inc
in
stc
mov
dec
jns
jmp
insb
add
push
stos
mov
xchg
mov
inc
dec
inc
or
lret
pop
cmc
scas
sahf
sbb
and
dec
aam
or
ret
cmpsl
sbb
cld
mov
mov
or
loope
jg
movsb
cmp
gs
adc
shlb
add
out
cmp
je
cmp
adc
dec
loopne
adc
pop
outsl
daa
xchg
addr16
ds
or
push
fwait
mov
dec
in
inc
cmp
xor
insb
scas
loopne,pn
push
shll
cmc
into
cld
std
mov
or
adc
stc
or
ljmp
sahf
push
lock
jmp
aad
aas
decb
mov
call
push
xor
sbb
xchg
or
bound
xor
popa
cli
dec
push
mov
inc
invd
outsl
and
insb
jmp
loop
jnp
push
insl
leave
xor
xor
cld
cmpsb
jle
cli
imul
and
jmp
rdpmc
cmovl
mov
mov
movsb
jns
xchg
and
and
mov
sub
ret
pop
test
push
sub
xor
rcrb
push
cltd
les
jo
or
je
cmp
push
mov
mov
and
xchg
adc
sbb
jnp
leave
lock
mov
xchg
inc
dec
sub
xor
test
xchg
arpl
adc
mov
xor
mov
lods
cmp
sarl
mov
sub
lahf
lret
cmp
jecxz
sti
test
sub
add
js
mov
push
lahf
cmp
xchg
es
vandnpd
cmc
ret
push
loope
mov
dec
insb
mov
xor
adc
cmp
jae,pt
mov
int
jg
loop
test
loope
add
push
jae
divw
pop
push
and
out
leave
dec
mov
cmp
mov
xchg
cmp
int3
jmp
int3
pop
cmpsb
test
cmp
icebp
lds
in
fwait
sbb
inc
leave
or
fimuls
cmp
ret
ja
sub
xor
push
hlt
push
lret
jo
dec
pop
bound
lret
sub
push
sub
and
dec
sbb
aam
imulb
mov
scas
mov
add
push
cmpsl
inc
jl
ja
xchg
add
mov
jnp
sub
mov
addr16
xor
imul
and
fwait
xor
push
xchg
adc
ret
into
mov
hlt
decb
pop
stc
aam
push
mov
xchg
aam
rcrb
mov
jb
xchg
xchg
es
xchg
or
icebp
push
pop
lods
mov
xchg
scas
gs
sysret
ss
push
mov
push
mov
ljmp
mov
sbb
mov
lret
std
test
push
int
test
sub
fstpt
sti
or
outsb
cmpsl
mov
pop
push
sti
outsl
repnz
dec
adc
mov
xchg
scas
mov
dec
add
xchg
adc
inc
subl
hlt
nop
movsb
push
mov
or
mov
lea
pop
xor
out
hlt
xchg
xor
std
and
dec
lock
mov
sbb
das
sub
insb
and
adc
decl
or
dec
aad
scas
push
ja
rcll
outsb
stos
jno
xchg
push
or
loop
shll
cmpsb
and
outsl
insl
cmc
and
sti
xchg
push
enter
mov
and
shl
or
lods
inc
int
xchg
add
push
das
loopne
mov
xchg
fstpl
pop
push
and
mov
xchg
add
inc
ljmp
enter
sti
inc
cmpsl
xor
popa
das
das
or
outsb
push
pop
bound
scas
cmp
loop
aad
mov
add
je
sub
int3
mov
mov
stos
sarl
mov
stc
lds
jl
sub
mov
sbb
pushf
jg
adc
mov
push
mov
or
sarl
xor
pop
mov
mov
mov
pushf
pop
ret
loopne
push
data16
xchg
jnp
mov
and
mov
stos
pop
repz
cbtw
pop
mov
sub
xchg
pop
test
mov
ret
cs
jg
test
aad
push
inc
pop
push
dec
cmp
mov
lea
cld
pop
pop
out
pop
jg
jmp
cmp
push
xchg
jge
aaa
iret
add
pusha
icebp
mov
cmp
in
int3
xchg
mov
dec
test
clc
das
lea
das
bound
xchg
jmp
jge
pop
inc
cmp
mov
or
xchg
dec
xchg
jecxz
mov
addl
add
mov
mov
cmp
push
pop
addr16
repnz
mov
sbb
call
jnp
in
in
nop
call
cs
cmp
jns
mov
push
mov
in
xor
loop
fsts
daa
rcrb
aaa
cmp
scas
xchg
dec
arpl
sti
into
add
sub
xor
and
or
testb
mov
mov
inc
inc
mov
xor
push
dec
sbb
gs
cmp
aam
dec
leave
dec
push
gs
xor
out
mov
pop
insl
imul
xor
stos
xchg
add
sub
and
inc
inc
repnz
push
sbb
or
pop
sbb
call
jns
lods
lods
push
xchg
mov
sbb
mov
inc
imul
push
aaa
push
roll
leave
jle
ds
call
jns
sbb
scas
xor
and
int3
in
mov
pop
ret
data16
cld
addr16
or
inc
sbb
pop
xchg
cld
mov
inc
dec
lods
ljmp
sub
lea
jle
adc
jae
mov
sub
adc
outsl
inc
push
and
and
jbe
daa
int
push
addr16
xrelease
sarb
inc
push
ss
hlt
fcomi
fstpl
pop
pop
jae
push
popa
imul
cmp
and
mov
jmp
daa
jae
sarb
push
adc
sub
sarl
je
call
stos
in
repnz
or
and
push
pop
sti
mov
sub
loope
pop
mov
fcmovnbe
cmp
and
insl
mov
dec
dec
pop
sub
push
pop
js
call
adc
adc
int
sub
xchg
lds
xchg
jle
cltd
adc
lock
cld
inc
jb
add
and
sbb
stos
pushf
test
push
mov
stos
dec
or
pop
js
mov
pop
mov
dec
or
jmp
gs
sbb
xchg
and
orl
mov
or
inc
pop
addr16
pop
jge
lock
leave
adc
dec
mov
cwtl
dec
xchg
orl
and
jge
push
add
enter
fwait
mov
push
cli
xor
pop
int3
cmp
and
neg
jmp
psadbw
xchg
shlb
push
add
xor
add
inc
daa
push
andb
mov
ret
in
arpl
lret
adc
xchg
inc
sub
xchg
decl
jo
bound
js
ficompl
cld
mov
mov
xchg
dec
cld
lret
cmpsb
cmp
stos
cmp
push
lods
call
mov
pop
loop
xor
xchg
dec
dec
mov
stc
push
cs
xchg
movsl
or
cmova
lods
xchg
mov
sub
pop
cmp
xor
pop
cmc
dec
fisubrl
dec
adc
inc
call
stos
jle
pop
inc
mov
dec
aaa
shrb
loop
mov
ficoml
and
fimull
lods
gs
or
inc
es
jb
orl
test
stos
ljmp
xchg
or
lcall
add
adc
fidivl
sarl
fs
dec
mov
push
fisttpl
xor
and
dec
push
mov
in
dec
jne
mov
or
movsb
push
sub
fcoms
lods
iret
push
pop
fbstp
incb
inc
adc
rcrb
cmpsb
std
add
cmpsb
pop
push
test
out
out
dec
and
loop
add
mov
dec
inc
es
jle
xchg
adc
jne
fiaddl
add
fcoms
pushf
sti
dec
test
fstl
insl
jmp
sbb
cmpsl
aam
push
xchg
jnp
mov
pusha
sbb
ja
or
pop
cmp
sahf
enter
fnstcw
add
push
inc
testb
xor
sub
jb
and
push
popf
dec
and
mov
adc
and
fs
rorb
dec
sub
jecxz
push
and
scas
test
inc
jae
pusha
bound
mov
pop
in
push
push
dec
and
loopne
sbb
outsb
movsb
adc
loopne
fwait
lcall
shll
lds
hlt
dec
add
cmpsb
cmp
pop
mov
movsl
aaa
xchg
hlt
xor
mov
pop
add
not
shl
pop
js
mov
aas
int
push
and
jns
dec
add
xor
sub
mov
sub
mov
push
fiadds
inc
cmc
daa
mov
cld
mov
adc
cmpsb
add
cmc
ss
push
scas
sub
test
jecxz
insl
jecxz
mov
xor
cmp
mov
out
testl
sbb
inc
adc
iret
stc
pop
insb
xchg
cltd
jbe
or
or
popa
les
adc
mov
cmp
mov
lahf
or
clc
pushw
sub
andb
mov
imul
lds
and
xor
stos
jl
jno
xor
pop
push
mov
psubd
sti
mov
lock
ljmp
adc
jo
lret
add
out
mov
popa
xorl
popa
cmp
sbb
add
repz
mov
mov
fidivrs
mov
nop
negl
xor
ret
dec
imul
sahf
mov
retw
pop
daa
std
xor
subb
lcall
cmpsl
loop
sbb
insl
test
and
js
jmp
aas
cs
and
push
lea
sbb
loope
bound
test
xor
cmp
adc
mov
cmpsl
out
cmc
add
divl
inc
cs
aad
mov
mov
pop
pop
mov
sbb
add
insl
jecxz
out
cmpb
sub
sbb
jb
jnp
into
imul
mov
mov
ret
adc
sub
dec
push
cltd
std
cmp
dec
mov
pop
inc
inc
xchg
lret
fdivs
lods
in
xor
xchg
gs
movsb
or
push
les
mov
arpl
addr16
mov
movsl
lock
lret
nop
push
jl
mov
iret
setne
xchg
dec
divb
js
std
pop
pop
out
scas
out
andl
or
xlat
xlat
testl
aaa
xor
xor
inc
in
mov
adcl
ljmp
test
popf
lds
daa
fidivs
xchg
fcmovb
sub
sbb
cmpsl
jecxz
adc
test
hlt
and
fwait
test
sub
sub
or
pop
xlat
jb,pt
mov
cli
int3
jecxz
xor
xchg
and
add
dec
cmp
jl
inc
imul
repnz
pop
pop
push
inc
mov
xchg
mov
fstpl
std
adc
add
and
test
xchg
in
cmp
mov
cmp
in
shll
jbe
mov
xchg
adc
mov
or
sahf
imul
cwtl
push
pop
push
jbe
adc
xchg
data16
sbb
mov
mov
xchg
fwait
popa
jo
ss
pop
pop
pop
imul
lret
inc
sbb
mov
mov
xchg
xchg
insb
dec
aas
lret
dec
jnp
lods
jne
add
rep
sahf
xchg
dec
mov
in
jp
test
jb
push
inc
mov
cmp
daa
or
xor
xor
outsb
popa
ret
sub
fs
pop
or
movsb
mov
fisubs
pop
jp
xor
in
fstps
inc
fs
or
rorl
cmpsl
xchg
pop
sahf
mov
popa
nop
dec
dec
das
mov
pop
push
ss
ret
mov
adc
mov
xor
aam
dec
in
ret
in
subl
ret
aad
ret
mov
mov
xchg
sbb
mov
dec
jmp
mov
cmpsb
xor
jae
jo
addb
pop
jns,pt
icebp
aaa
mov
or
inc
push
pusha
popa
loopne
loope
rorb
xor
repz
out
inc
jns
jl
add
push
cmp
fs
pop
test
rclb
pusha
dec
aam
std
adc
xor
xchg
inc
or
xchg
or
icebp
sbbl
and
push
xchg
jo
dec
mov
or
pop
cmpsl
int3
sahf
mov
pop
int
in
adc
ret
lods
and
fistl
mov
ljmp
xor
pusha
inc
add
jp
lahf
cmp
xor
subb
es
std
sbb
and
daa
ret
scas
daa
shl
cli
rorl
jp
cmp
cmpsl
pop
xchg
pop
leave
inc
and
jns
adc
inc
dec
sub
xor
and
dec
movhps
adc
repz
addr16
out
and
pop
lods
pop
sbb
decb
adc
daa
inc
cmp
xchg
aam
jl
cs
in
or
fcomip
push
shrb
addb
inc
and
inc
jne
out
pop
sub
scas
stos
sti
xor
lahf
test
xor
mov
adcl
cmp
pop
inc
leave
sbb
insl
insb
mov
mov
push
or
mov
out
fwait
cli
stc
out
pop
arpl
incb
xchg
jb
add
pop
rcrb
sub
inc
inc
lret
jecxz
xchg
jae
scas
add
and
push
icebp
pop
lret
loop
inc
adc
inc
mov
adc
std
xor
cwtl
jl
sbb
jecxz
arpl
fisubrs
pusha
mov
mov
pushf
pusha
sti
mov
cltd
idivb
ret
mov
sbb
pop
popf
pop
adc
fadd
dec
lods
insl
shlb
xchg
cmc
cmc
pop
int
xor
pop
dec
btr
jbe
sub
xor
aam
das
and
call
clc
adc
enter
mov
push
repnz
idiv
pop
fucomi
fstpt
push
ret
cmp
or
stos
push
sub
in
xor
mul
lods
jnp
push
and
mov
xor
sbb
ljmp
adc
lea
popf
ret
adc
ljmp
insl
int
fisubrl
mov
add
stos
idivb
test
and
int
popa
data16
gs
pop
add
repz
out
sbb
scas
test
cmp
cmp
sarl
xchg
xor
cmp
jg
lahf
jns
stos
shrl
sub
mov
fisubrl
pop
inc
cmp
cmp
fildl
sbb
xchg
out
mov
or
adc
mov
dec
aam
inc
jne
xchg
int
bound
push
enter
lret
jae
mov
pushf
jl
lret
movsl
xchg
sbb
fildl
loope
daa
out
es
in
int3
aas
loope
jae
mov
test
jg
xchg
push
pop
scas
test
push
lock
jbe
jmp
stos
inc
frstor
mov
sahf
out
lods
mov
lcall
add
xlat
lret
ret
mov
mov
xchg
mov
push
cmpsb
pop
push
pop
ds
inc
nop
xchg
jl
adc
stos
and
das
cmp
inc
cmp
inc
gs
iret
aas
xchg
cmp
arpl
mov
inc
gs
insb
es
jno
icebp
mov
ret
push
xchg
mov
add
pushf
jae
aaa
and
cmp
mov
mov
xchg
pop
sbb
subl
dec
pop
inc
scas
and
addl
outsl
fsubr
es
or
cmp
ds
mov
add
sar
sub
out
aam
xchg
mov
sub
cmp
imul
xchg
lea
hlt
fiaddl
cmp
testb
inc
mov
jbe
js
xchg
lret
movsl
inc
push
arpl
push
or
and
je
cmp
xor
xor
pushf
mov
dec
lods
insb
add
nop
dec
out
mov
lahf
xlat
cmpsb
xchg
mov
mov
loop
push
lea
mov
push
je
jmp
stos
jge
mov
adc
outsl
ljmp
xor
jb
fldenv
sti
mov
xchg
dec
pop
imul
or
lcall
addr16
push
push
dec
jl
jb
add
push
rclb
aad
add
loop
and
xor
push
leave
hlt
je
iret
add
ja
arpl
cld
inc
jge
jp
lea
loope
add
in
sub
or
pop
xlat
dec
xchg
cwtl
lock
in
fidivs
mov
xor
add
or
rcrl
mov
xchg
push
sbb
fwait
icebp
inc
mov
out
mov
lahf
mov
pop
adc
ss
push
loop
insl
outsb
mov
push
cmp
call
movb
dec
and
inc
lods
add
mov
pop
insb
into
pop
in
loop
push
dec
aas
and
call
add
scas
scas
jae
xor
adc
out
add
xor
movsb
jge
mov
cli
stos
jge
dec
loop
mov
mov
in
aaa
or
push
pop
call
movsb
pop
data16
adc
arpl
in
lods
mov
out
mov
push
mov
les
std
jb
ffree
es
rcrb
jo
mov
fnstcw
scas
mov
sub
cmc
dec
repz
and
sbbl
movsb
cmpsl
or
outsl
mov
nop
mov
pop
mov
dec
les
mov
push
inc
ret
fwait
sub
adc
mov
hlt
or
sarb
dec
cwtl
dec
nop
cltd
jge
xchg
fwait
in
dec
mov
sti
mov
test
mov
into
lahf
sub
jbe
and
ret
test
mov
cmc
lret
mov
ret
out
add
and
dec
das
sbbl
dec
int
push
nop
jb
imul
sbb
jo
out
jg
jno
cld
insl
sbb
push
roll
shlb
push
out
fiaddl
pop
push
mulb
xchg
xor
je
jbe
cmp
pop
lret
push
dec
out
sbb
adc
lret
pop
pushf
dec
jb
leave
xchg
std
scas
push
jae
pop
imul
dec
es
das
pop
out
outsl
sbb
xor
std
mov
and
test
inc
ja
data16
sub
gs
cmp
sbb
jb
call
jle
jno
push
shll
stos
sub
jns,pn
pop
fldl
mov
mov
loope
sbb
push
ficomps
inc
xchg
lret
test
in
inc
jmp
cmp
lds
repz
cmp
leave
sbb
out
inc
add
andl
lea
mov
xchg
outsb
lods
inc
fistpll
cmpb
add
mov
out
or
sbb
adc
fsubrs
cmp
xorl
xchg
aad
mov
std
fcoml
mov
fisubrs
stos
sub
aam
mov
sti
divl
xor
dec
add
cli
ljmp
xchg
cli
mov
mul
xchg
enter
sbb
mov
subb
jmp
fld
jp
sub
cmp
pop
mov
scas
cmpsb
xor
flds
or
adc
pushf
std
mov
xchg
jne
mov
sub
loope
cli
pop
stos
xor
xor
out
jl
aaa
stc
sub
je
xchg
xor
mov
cmp
fiadds
out
sbb
movsb
adc
and
nop
cmp
sbb
lret
pusha
addr16
les
inc
rcl
loopne
cli
loopne
fcmove
mov
push
aaa
arpl
shll
mov
cld
mov
sbb
xor
movsb
mov
mov
cmovnp
and
loope
das
inc
ljmp
fdivrl
out
pop
fs
inc
jne
test
mov
fimuls
int
pop
jecxz
ret
jbe
inc
sarb
inc
lods
inc
xor
or
loopne
arpl
loopne
mov
mov
sbb
int
dec
push
insb
push
in
pop
xchg
cmp
enter
and
sbb
add
xchg
cmp
dec
jl
cwtl
std
mov
add
aaa
xor
in
sub
mov
mov
push
push
ja
add
out
jle
sbb
pop
pop
sbb
sub
insl
sbb
add
jns
std
inc
inc
or
push
xor
pop
out
fidivs
ljmp
or
xor
mov
fldt
xchg
cmp
xchg
movsb
fmull
xlat
jo
arpl
les
nop
js
ja
fs
mov
or
scas
cltd
dec
push
sahf
push
mov
pop
xchg
fucomip
fsts
dec
aaa
jb
mov
sbb
cmc
fimull
push
lock
pop
loopne
arpl
jge
fcmovb
les
ret
dec
jecxz
cmp
jge
gs
jl
pop
xor
inc
mov
cwtl
fstpt
in
clc
adc
mov
add
clc
and
push
push
aas
pushf
sub
test
mov
and
mov
inc
es
push
js
lret
ja
mov
addr16
add
daa
in
cld
filds
xchg
sub
sbb
mov
nop
pop
ret
int
out
sbb
pop
mov
xchg
jmp
push
jb
ss
inc
sbb
insb
pop
jle
ds
xor
insl
mov
mov
gs
xchg
mov
mov
sbb
cli
and
sbb
call
lods
jp
add
out
js
jbe
ficomps
dec
mov
in
push
dec
xchg
push
jl
sub
cmp
xchg
mov
mov
cs
adc
jbe
mov
jp
push
jbe
lret
clc
stc
pop
cltd
push
adc
or
jmp
jnp
pop
dec
iret
xchg
ljmp
push
jno
nop
pop
lcall
push
adc
outsb
dec
xchg
mov
inc
in
out
ret
dec
mov
mov
mov
cwtl
popa
gs
inc
in
enter
fnstsw
in
clc
adc
call
cmp
iret
movsl
test
pop
addr16
test
ret
cltd
orl
rcrb
inc
out
loopne
fmulp
push
out
dec
aas
popf
bound
xchg
outsl
insb
pop
je
xor
pop
das
iret
lahf
test
je
jno
mov
add
cli
in
jb
mov
in
hlt
pcmpeqw
sub
mov
cmpsl
lods
ja
pop
xorb
addl
out
adc
sub
shrb
and
and
push
adc
popa
xchg
and
mov
xchg
gs
hlt
ficomps
mov
push
fldl
in
inc
mov
push
jns
inc
call
or
das
je
adc
mov
and
movsb
xor
imul
add
addb
adcb
test
sbb
xchg
mov
pop
mov
movsb
out
mov
testb
aam
cld
shlb
mov
xchg
xchg
cmp
add
and
ss
sar
leave
andl
inc
stos
mov
insl
cmp
xor
or
pop
pop
lea
sbb
icebp
or
dec
adc
inc
pop
jp
js
inc
xchg
dec
icebp
shrl
negl
or
int3
cmpl
out
int
outsl
or
sbb
mov
push
out
and
add
pushf
pop
mov
mov
mov
iret
outsl
in
cmpsb
cs
dec
pop
xchg
mov
jae
lcall
sub
jge
cs
fists
xor
or
push
add
adc
out
fs
inc
andl
sbb
lcall
cmp
xchg
push
stos
add
fs
lods
clc
in
push
jl
das
in
mov
rolb
ss
cmp
push
fnstcw
insl
popf
insb
cmp
push
cmc
cld
ja
fwait
and
push
xchg
jno
lds
mov
aad
test
sti
mov
jae
cmp
add
xchg
jo
scas
pop
int3
mov
or
in
mov
or
nop
mov
stos
mov
repnz
ret
adc
aaa
mov
pop
ljmp
addr16
test
pop
out
lods
push
and
lock
sti
outsl
mov
push
dec
jnp
mov
xchg
or
adc
adc
push
adc
in
lods
rdmsr
ret
xor
mov
cmp
pop
inc
sub
mov
push
sub
shrb
test
xor
cmp
mov
ja
mov
pop
out
dec
out
js
add
adc
adc
or
sarb
lahf
push
pop
movsb
push
in
cmp
push
sbb
add
popa
bound
cmp
xchg
jnp
add
push
mov
imul
lahf
push
pop
inc
or
sti
mov
xor
cmp
inc
push
jl
pop
push
mov
cmp
jo
out
test
ds
adc
int
imul
cmp
mov
and
imul
cmp
push
mov
js
cmp
cmpsb
call
insl
test
fldenv
inc
out
cmc
aas
in
push
incl
mov
jmp
test
outsb
ret
mov
popf
pushf
cmp
push
and
cmp
fwait
sar
popf
push
lods
jne
faddl
dec
insl
lock
sub
xchg
adc
aam
add
fmull
dec
mulb
fs
jae
sub
sbb
movsl
sti
push
jp
adc
pushf
sbb
sub
into
int3
push
sbb
cmp
je
stos
stos
ffreep
push
or
nop
push
or
dec
arpl
or
hlt
cmp
cmpsl
sbb
jnp
inc
pop
xor
sbb
stos
jge
enter
insl
in
add
fs
lods
push
outsl
mov
mov
movsb
rolb
dec
jne
insb
sub
xor
ds
bound
rorl
xorl
inc
lret
rolb
cmpsl
sub
xchg
dec
push
mov
push
jne
cmp
aad
outsb
lds
ljmp
jmp
es
and
call
adc
or
mov
jb
ja
ss
orl
hlt
jbe
stos
ja
xor
clc
or
popa
and
push
rcrl
out
in
test
loopne
xor
xor
gs
dec
xchg
inc
test
arpl
sbb
lahf
or
cwtl
ja
icebp
cmp
mov
repz
push
dec
imul
ss
in
sbb
sbb
mov
roll
xor
jmp
aad
out
sub
inc
mov
inc
push
xor
insb
lcall
xchg
add
adc
lds
movsl
xchg
push
sub
adc
ss
fsubr
lock
and
dec
push
fdivs
daa
jl
sub
inc
popf
mov
adc
mov
jge
xchg
aam
das
and
test
pop
orl
gs
iret
movsb
shll
push
es
out
xor
cmc
clc
sbb
cmp
inc
lret
out
lods
hlt
f2xm1
mov
lods
or
jnp
cltd
add
sbb
cmpsb
mov
movsb
inc
pop
hlt
push
mov
hlt
sbbl
xchg
popa
inc
xor
es
sbb
xor
fimuls
pop
sub
in
or
xor
scas
dec
mov
aam
adc
xor
sbb
outsl
dec
mov
push
or
mov
mov
adc
and
repz
mov
inc
inc
mov
jp
xchg
xchg
xchg
shlb
mov
movsb
cmpsb
sbb
sub
sub
pop
mov
scas
xchg
xor
inc
mov
xchg
sub
fistpll
dec
into
inc
test
sbb
xchg
push
lods
xchg
and
push
mov
adc
mov
push
jae
subb
xor
pop
push
sbb
sbb
add
push
sub
sbb
call
aas
inc
cwtl
dec
test
mov
insb
jb
int
das
inc
push
inc
data16
mov
test
sbb
sub
sub
jb
or
fidivl
push
lcall
movsb
sti
or
mov
aaa
adc
dec
test
mov
pop
pop
insl
movsl
lods
sbb
lea
adc
pushf
push
icebp
addr16
lock
je
shr
inc
dec
sar
or
xchg
mov
insb
sub
push
leave
loopne
in
inc
push
inc
lock
sub
repnz
mull
int3
dec
fistl
das
dec
sbbl
mov
mov
imul
jmp
lcall
popa
inc
or
xchg
jecxz
mov
cld
imul
push
dec
dec
pop
pusha
jecxz
insb
mov
push
inc
mov
daa
sti
jp
push
jp
sbb
sub
mull
jg
cmpsb
stc
leave
xor
es
leave
lahf
sbb
ret
fimuls
pop
rolb
xchg
shll
sub
popl
pop
xor
cli
cmp
jae
lahf
daa
and
adc
stos
pop
stos
test
mov
xchg
pop
sbb
mov
sti
add
lods
cmp
insl
fsubrl
stos
out
push
idiv
ljmp
loop
pop
push
mov
sub
pop
popa
push
rcrb
or
adc
jae
out
pop
push
xchg
dec
lahf
clc
push
jle
jbe
fcompl
leave
testl
test
mov
dec
movsb
jnp
or
jecxz
jle
imul
mov
ja
adc
or
fsubrl
lea
fsubrl
sub
add
data16
clc
mov
cmp
mov
rcrb
and
aam
dec
mov
jmp
or
sub
xchg
ficompl
sahf
push
imul
lgs
pop
fstpl
push
cmpb
mov
leave
mov
fs
inc
and
out
xchg
sbb
fcomp
sbb
cmp
inc
test
pushf
iret
inc
xlat
les
scas
xor
rorb
pop
or
and
repz
add
pop
cltd
movsb
mov
mov
int3
dec
xchg
rorb
out
stos
or
push
fimuls
movsl
leave
popa
mov
fbstp
cmp
inc
xor
jg
mov
dec
lods
pop
mov
lock
sub
lret
outsb
mov
xlat
shl
sub
jne
mov
pop
or
push
popf
movsl
jo
mov
pushf
out
xchg
fwait
cmp
dec
adc
sbb
pop
jnp
dec
mov
icebp
inc
fnstenv
in
sbb
cld
lret
cmp
cmpl
dec
cmp
xor
hlt
or
mov
fmull
lahf
repz
xchg
rcr
int3
push
test
in
xor
out
jnp
pusha
outsl
mov
lcall
sbb
sbb
dec
into
xchg
inc
jmp
xor
je
push
je
stc
and
cmpsb
cmp
and
dec
add
inc
cmp
je
mov
sbb
mov
and
nop
mov
sub
mov
mov
in
hlt
jg
das
xchg
lcall
push
fimull
mov
cmp
arpl
or
mov
sub
decb
xor
adc
mov
shlb
xchg
shrb
mov
jns
in
or
mov
iret
adc
test
popf
ljmp
xchg
adcb
and
arpl
das
sahf
in
mov
arpl
stc
xor
addr16
movsb
xor
cs
nop
fdivs
cmpl
inc
cmp
sub
nop
lcall
cmp
imul
push
inc
fnstenv
int3
call
xor
cwtl
xor
mov
mov
xor
mov
jno
mov
or
sub
shrl
loope
jg
dec
adc
bound
int
cmp
jge
les
xor
jo
adc
in
andb
bound
sub
add
pop
mov
xchg
out
pop
mov
pop
inc
scas
sbb
cwtl
jne
xor
out
jp
push
mov
jmp
jae
xor
adc
adc
enter
inc
cmp
jbe
lea
dec
mov
loopne
fstpl
mov
cmp
cmpsb
fwait
dec
fldenv
popa
mov
mov
xchg
push
pop
test
xchg
mov
into
sahf
push
fwait
inc
pop
ja
aam
or
xchg
pop
mulb
adc
push
xchg
push
adcl
xchg
fstpl
jbe
jle
and
or
add
cmp
test
data16
and
sar
sahf
sti
dec
push
das
cli
xlat
xchg
and
and
popf
adc
mov
ficoms
lock
clc
push
xchg
adc
test
pop
push
ds
jmp
pop
mov
into
arpl
inc
sti
lock
mov
and
or
call
std
inc
fisttpll
push
aas
adc
stc
aas
les
xchg
adc
icebp
sbb
loopne
and
sahf
and
rcrb
stc
jnp
cs
dec
in
inc
mov
scas
fsts
mov
xor
bound
inc
add
out
mov
pop
hlt
loope
dec
push
imul
or
lods
insl
mov
pushf
dec
scas
dec
mov
and
sbb
jmp
insb
imul
aaa
xchg
stos
clc
adc
and
sbb
cli
fsubrs
mov
and
adc
mov
push
inc
xor
out
aad
xor
stos
outsb
pusha
imul
sbb
or
cmp
push
and
add
aaa
enter
pop
es
mov
outsb
ja
or
sahf
pop
mov
fidivrs
movsl
aam
je
popf
js
and
mov
cwtd
and
shll
xor
push
arpl
fnstenv
test
cmp
stc
lds
jmp
fsubl
and
jno
mov
sbb
inc
jb
jl
mov
das
sbb
mov
stc
xlat
loopne
xor
push
cmp
sub
cmp
addr16
dec
daa
sti
mov
jne
cmp
mov
mov
pusha
mov
bound
pop
and
out
cmp
testl
shlb
and
mov
out
xchg
fidivl
mov
or
cltd
mov
dec
xchg
dec
imul
loop
stos
data16
xchg
rorb
sahf
lds
std
and
mov
dec
fildll
mov
fwait
insb
call
testl
cmp
stos
gs
jg
stos
jmp
inc
repnz
and
cmp
adc
std
dec
mov
aaa
jnp
cltd
mov
adc
dec
loop
cli
mov
jge
xlat
inc
push
jmp
data16
cs
sub
in
ds
jecxz
cmp
sbb
das
cmp
or
jp
adc
add
or
fbld
add
push
pop
sbb
sub
mov
call
icebp
or
xor
mov
ret
hlt
push
or
cmp
jo
aam
xchg
lret
icebp
movsb
int3
lret
xchg
fnsetpm(287
dec
mov
pop
icebp
rcrl
mov
cmpsb
xchg
pop
jle
add
jbe
push
cmp
pop
or
mov
adc
lock
adc
jae
pop
or
add
mov
mov
rcll
test
push
mov
test
sahf
in
xchg
mov
sbb
loop
cmp
lahf
adcl
mov
mov
xor
lods
push
mov
in
in
ret
outsb
dec
add
mov
lcall
jmp
dec
dec
dec
xchg
imull
jae
dec
andb
stc
jo
loopne
mov
test
push
mov
pop
repnz
inc
mov
jge
pop
push
and
bnd
add
out
mov
cmp
and
adc
in
ret
test
ss
lods
mov
push
mov
aam
pop
cmpsl
andl
mov
sub
inc
cmp
pop
pushf
or
addr16
mov
mov
rorb
call
in
cmpsb
addr16
push
shrb
push
scas
jb
fcoms
out
popf
fdivr
mov
data16
es
hlt
mov
stos
fnstsw
adc
mov
add
lock
sub
negl
mov
popa
dec
into
sarl
adcl
and
repz
lds
or
jno
lds
add
push
mov
lcall
dec
mov
dec
fisubs
or
jmp
jmp
addr16
sub
lock
mov
movsl
movsb
arpl
mov
inc
pop
mov
xchg
inc
pop
add
imul
and
stos
mov
pop
add
mov
sarb
scas
mov
dec
fwait
lea
icebp
out
inc
push
shlb
mov
sub
ret
cmpxchg
and
cmp
aam
inc
mov
nop
aas
ss
movsl
addr16
sbb
dec
sahf
mov
sbb
or
pop
adc
mov
adc
inc
sbb
shrl
fcoms
addb
mov
imul
subb
fcompl
add
or
xchg
jmp
sbb
dec
adc
js
popf
add
mov
mov
movl
inc
pop
push
ret
and
cwtl
inc
mov
movsl
jns
push
stc
and
ret
xor
jmp
out
lods
movsb
inc
loop
xchg
and
or
push
in
and
jmp
outsl
lahf
or
fs
mov
movsb
fistpl
push
or
fs
push
je
mov
xchg
sbb
mov
inc
pop
adc
movsb
mov
mov
pusha
pop
rol
xchg
leave
test
pop
mov
movsb
lods
mov
cwtl
rcll
jecxz
mov
test
cmp
xchg
mov
inc
out
dec
and
pop
cmp
lcall
cmp
icebp
iret
in
les
sbb
sbb
cmp
out
shl
pop
pop
mov
popa
mov
cmp
dec
movsb
jge
adc
mov
xchg
mov
mov
mov
lahf
mov
sahf
insl
ret
mov
sbb
iret
xor
mov
push
push
cs
mov
or
lods
dec
sahf
pop
jle
mov
shlb
xor
mov
fsubr
xor
xchg
lock
push
push
shll
icebp
xchg
jo
sahf
xor
je
jl
incb
roll
lahf
mov
mov
in
test
loop
fdivr
cli
int
sahf
call
in
jb
xchg
sub
sti
xchg
mov
xchg
lds
scas
daa
gs
mov
pop
es
sbb
aad
or
inc
cmp
insl
sti
mov
lret
pop
rdtsc
stos
repz
sub
pusha
idivl
xchg
inc
icebp
adc
pop
xchg
loopne
add
xor
and
lahf
inc
jo
jg
test
inc
ljmp
xor
inc
push
hlt
sub
ds
jp
pop
repz
xchg
fwait
adc
sahf
daa
lock
xchg
push
sbb
les
inc
rorl
icebp
push
inc
and
or
iret
loope
rolb
and
sbb
inc
xor
ret
mov
mov
pop
sub
cmp
not
scas
mov
in
lods
jae
fscale
in
jl
pop
push
jl
adc
rclb
add
pop
cmc
push
outsb
loop
sbb
mov
stos
dec
inc
dec
cltd
cmp
mov
imul
lret
inc
enter
push
sub
xchg
adc
push
xor
inc
xor
int3
ja
scas
fildl
dec
dec
mov
aad
fisubrl
std
out
xchg
push
xorb
mov
jb
pop
cwtl
cmp
test
ds
inc
in
arpl
arpl
jno
fdiv
inc
pop
sbb
jecxz
inc
push
mov
inc
dec
sub
cmp
jg
jb
leave
mov
push
pop
jg
out
adc
pop
outsb
sbb
insb
sub
jg
xchg
push
int3
in
mov
sub
ljmp
lea
mov
sahf
adc
ja
cmp
or
lea
cmp
jg
sbb
dec
mov
call
dec
repnz
xorb
lahf
fsts
in
gs
lret
jl
popa
lock
sti
or
icebp
xchg
mov
xchg
lds
in
fwait
jb
loope
pop
xchg
rcll
xchg
jmp
and
call
daa
ljmp
loope
inc
aad
ss
fidivs
mov
pop
js
repz
xchg
cwtl
pop
mov
inc
cmp
cmp
xchg
scas
movsb
mov
lret
roll
push
test
cltd
jo
enter
pop
jae
into
mov
dec
push
sarb
and
inc
sti
insl
mov
xor
mov
loopne
scas
rcrb
sub
inc
iret
xchg
mov
js
pop
sbb
add
sbb
mov
lret
lods
push
or
inc
dec
jns
adc
push
inc
or
decl
mov
outsl
lock
xchg
push
pop
into
sbb
adcl
dec
jl
aas
xchg
movsl
dec
shlb
cmp
xor
aaa
jbe
into
mov
mov
call
je
pop
cmp
mov
mov
adc
shll
imul
pop
or
xor
adc
into
jae
or
cltd
pop
xor
addr16
jbe
icebp
outsl
lds
lods
arpl
lds
cmp
inc
movsb
adc
or
fimull
push
lahf
frstor
inc
cs
push
lods
mov
fimuls
push
cs
stc
mov
insl
pop
cld
sti
mov
jns
ds
xchg
lods
mov
mov
lahf
xchg
je
dec
addr16
and
fucomip
inc
popa
push
das
mov
rorl
or
mov
adcb
inc
cmp
mov
jg
cmc
sbb
mov
inc
leave
dec
push
jmp
out
mov
stos
rcr
mov
dec
inc
mov
iret
xchg
cld
xchg
push
pop
rcll
shlb
mov
or
adc
add
push
enter
popa
push
mov
jb
loop
add
ret
mov
mov
sbb
push
dec
adc
inc
addb
pop
or
lret
popa
scas
ja
icebp
or
mov
test
push
and
sub
repnz
dec
sbb
and
jg
movsb
sahf
xchg
mov
out
pop
into
pop
pop
add
dec
out
adc
adc
xchg
inc
mov
cmp
jecxz
jns
adc
rcrb
fwait
mov
inc
ret
je
mov
mov
add
psubusb
dec
dec
addr16
adc
xchg
pop
push
xor
add
int3
cmp
stc
and
lret
lock
pop
sbb
inc
stos
adc
cs
cld
sarb
pop
jl
inc
sub
push
and
inc
jle
adc
fildl
xchg
ds
xchg
or
fs
xor
xor
cmp
xlat
jle
jg
in
fisttpll
add
xchg
mov
scas
imul
dec
pop
lds
aad
mov
jecxz
push
test
push
cmpsl
pop
mov
pop
stos
mov
popf
mov
adc
lea
mov
mov
loope
cwtl
shl
dec
cmp
jne
fdivr
jae
push
push
lods
add
and
pop
addb
sub
negl
pop
lea
outsb
sub
push
int
outsb
aam
adc
sti
adc
mov
repz
in
pop
or
pusha
sbb
idiv
es
and
arpl
cmpsb
inc
sbb
pop
cld
and
mov
and
sub
fidivrl
popf
out
fistpl
mov
fidivl
pop
stos
pop
pop
mov
sbb
fistl
xchg
cmp
imul
das
shlb
mov
into
stos
mov
mov
cmp
nop
roll
sti
push
in
stos
mov
sub
in
test
jmp
fidivl
scas
and
pop
out
dec
xchg
out
daa
repnz
test
call
xor
xchg
sahf
mov
inc
insl
push
cmpsl
sahf
mov
imul
daa
dec
and
mov
and
jle
stos
xor
lret
or
add
ja
or
fildll
add
das
mov
sti
push
cmp
mov
mov
scas
jns
das
cs
loopne
add
xor
sbb
lret
jae
xchg
ljmp
inc
addr16
pop
or
ret
jns
sbb
and
push
out
clc
mov
jl
mov
dec
ss
fistpll
pop
jb
inc
cltd
imul
es
jecxz
inc
dec
movl
jle
jne
icebp
lods
div
mov
pushw
sub
ljmp
or
push
fs
push
jp
xlat
mov
iret
xchg
adc
xor
daa
inc
jo
shll
aad
in
adc
lcall
inc
in
insb
inc
mov
sahf
inc
outsl
jmp
dec
imul
outsb
call
mov
xlat
jae
xchg
pop
dec
sbb
dec
inc
mov
repnz
cwtl
ja
nop
push
enter
testb
cmpsl
add
outsl
mov
xchg
pop
jge
push
mov
inc
push
adc
int
popa
mov
cmp
inc
lret
mov
hlt
xor
ss
fcmovnbe
clc
cmp
mov
imul
or
or
mov
das
lcall
into
mov
jmp
and
mov
stc
cmpsl
js
jbe
xchg
mov
sub
xor
test
mov
out
jmp
incb
jmp
in
fildll
dec
pop
pop
cmp
ss
outsl
cmpb
call
jecxz
das
xor
ret
ljmp
xchg
cmp
mov
push
sub
dec
scas
iret
adc
add
mov
fiaddl
add
cmpb
jne
pusha
mov
lea
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
popa
xor
ret
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
call
addl
pushl
mov
xor
int3
popl
add
test
je
xor
jmp
mov
ret
mov
movl
incl
xor
nop
push
pop
nop
cmpl
jl
ret
call
jmp
