push
push
adc
mov
lea
jae
pusha
lea
jne
pusha
call
push
push
imul
and
jne
and
je
bound
insb
outsl
arpl
gs
and
and
popa
insl
imul
and
jb
jb
and
inc
gs
outsl
fs
gs
imul
add
inc
and
and
add
pusha
mov
movb
pushl
ret
jmp
push
jmp
push
call
icebp
popa
sbb
rcrl
fsubrs
sub
xor
cmp
pop
jecxz
fwait
xor
dec
jns
mov
inc
ret
jnp
jmp
mov
je
out
pop
into
loopne
cmpsb
add
mov
jnp
or
lods
jae
dec
ja
pop
sbb
js
std
fwait
loopne
scas
push
mov
jl
inc
cmp
cmc
cmc
call
push
add
cmc
xlat
call
cmp
shr
decl
mov
jp
sub
inc
and
push
xor
and
mov
sti
stc
lcall
leave
sbb
arpl
mov
dec
pop
or
test
mov
rcrl
lret
sbb
aaa
mov
cmc
lds
les
or
mov
cmp
testl
and
mov
in
sub
bound
cmpb
pop
addr16
lea
add
fwait
lods
jg
add
push
imulb
push
pop
add
inc
scas
pushf
fidivs
call
mov
sbb
sbb
add
xor
andl
in
lds
fwait
loop
adc
leave
call
sub
push
test
mov
int
test
into
je
xor
andb
subb
sahf
adc
stc
imul
incb
popf
out
jne
xchg
imul
popa
fwait
aam
call
cli
pop
add
xlat
fwait
push
ror
jg
dec
hlt
cmp
fwait
clc
cmpb
push
xchg
lods
aas
clc
inc
cmc
push
jb
call
jecxz
dec
aas
ds
sub
fcom
rorl
gs
fwait
jb
sti
jns
jmp
fdivrp
sub
pop
mov
jecxz
pop
push
stos
or
push
mov
popl
pop
popl
stos
mov
jns
movsl
lahf
scas
cmp
out
sbb
daa
xchg
inc
mov
mov
mov
subl
std
lds
out
ljmp
inc
xabort
mov
lahf
xchg
mul
push
test
frstor
pop
lret
sub
enter
sbb
iret
ss
add
addr16
lds
fwait
out
sub
push
xchg
and
rol
add
jecxz
loopne
nop
cmp
push
push
lods
dec
iret
pushf
inc
ja
sti
movsb
fcomps
and
add
push
test
sbb
es
inc
das
paddsw
inc
add
sar
dec
stc
push
adc
and
mov
xchg
lods
nop
push
std
daa
aas
hlt
sar
mov
mov
push
xchg
jg
pop
mov
and
in
pusha
mov
aaa
or
call
daa
or
rolb
test
mov
add
mov
inc
cli
das
jecxz
push
dec
call
adc
inc
dec
scas
clc
xor
sbb
adcl
and
xlat
add
jg
pop
mov
loopne
xchg
add
push
push
push
xor
ret
and
pop
adcl
call
test
imul
push
sub
adc
ror
sbb
cmpb
cld
psubsb
gs
dec
sub
inc
das
addr16
cmp
jbe
inc
aaa
call
cmpsb
orb
ret
outsb
push
clc
pop
pop
add
jns
je
inc
jo
and
scas
jl
sbb
rcr
push
icebp
fisttpll
cmp
movsb
bound
mov
xchg
add
dec
push
mov
push
subl
mov
packuswb
mov
orb
xchg
mov
movsl
adc
ret
ds
movsb
cvtps2pi
rorl
jns
testl
adc
enter
jg
addr16
sub
fnsave
cmc
add
inc
les
icebp
xor
addl
outsl
sbb
or
iret
inc
push
andb
dec
mov
jno
call
ss
and
push
daa
mov
push
leave
daa
rorb
cli
notl
clc
hlt
pop
dec
adc
mov
leave
out
out
dec
subl
clc
aaa
fnstsw
add
call
or
movsb
jno
repnz
jnp
fwait
out
das
leave
adc
xor
mov
or
inc
cmp
js
xlat
aas
adc
out
loop
mov
xchg
cs
clc
push
push
lea
and
dec
out
mov
or
mov
sub
mov
pop
stos
movsb
add
in
mov
into
adc
in
mov
and
mov
lea
not
movzbw
pusha
mov
pusha
push
pushl
ret
push
pushf
lea
call
push
mov
pushf
movb
movb
lea
jmp
push
call
jl
in
ret
movsl
stc
add
add
pop
jg
xchg
and
insl
and
adc
add
rorl
cmpsl
stos
test
inc
sbb
pushf
mov
sub
mov
shlb
insl
loope
and
xchg
xchg
mov
pop
pop
lock
repz
jns
mov
fisttpl
dec
xor
scas
mov
and
lock
ret
sbb
xchg
adc
or
out
lock
into
fmulp
push
in
mov
lret
sbb
and
cmp
or
sbb
stos
push
fcmovu
pop
stos
adc
lret
fwait
cmp
and
push
mov
pop
repz
aaa
pop
lods
jle
out
insb
xchg
lcall
xchg
add
mov
mov
int3
mov
add
sub
pop
adc
clc
or
push
or
jmp
mov
test
shll
push
or
add
xchg
incl
repz
xor
dec
or
jmp
jmp
xchg
push
cwtl
sbb
rcrl
and
mov
les
testb
jb
cli
sbb
push
cmp
in
cmp
add
add
lods
test
loop
ljmp
dec
push
movups
inc
push
mov
pop
pop
outsb
adc
incl
xchg
xor
aaa
pop
dec
fnstsw
mov
outsl
enter
imul
jmp
loopne
adc
incl
and
mov
stc
pop
clc
loopne
dec
mov
cmp
xor
jns
jns
mov
cmpsl
int
jmp
add
out
hlt
ljmp
fimull
push
sbb
add
test
xor
out
mov
cwtl
and
test
sahf
push
push
in
inc
push
dec
or
pop
cmovbe
inc
jae
out
inc
je
jl
je
cli
fildl
repz
mov
in
push
icebp
xor
jno
add
push
sahf
dec
outsb
pushf
mov
or
cwtl
pop
push
adcl
adc
dec
inc
cmp
inc
dec
xor
daa
adc
xor
sub
pop
xchg
pusha
popa
imul
outsb
call
cli
repnz
notl
aaa
aas
daa
sbbl
outsb
jae
push
or
pusha
jb
pusha
bound
iret
jbe
movsb
cmp
aaa
dec
jo
out
arpl
jno
push
jne
push
jae
inc
lahf
movsl
push
bound
out
sbb
mov
pop
sti
pop
fstl
ja
cs
mov
sbb
xor
scas
idivl
cmp
mov
jb
sahf
and
out
sub
sbb
xchg
arpl
push
cmp
lods
in
inc
mov
bound
das
xchg
pop
mov
mov
pop
inc
add
insb
and
data16
ljmp
das
out
cmp
dec
imul
xor
jae
inc
sub
aad
into
stc
je
sub
pop
push
pusha
add
gs
fisubrs
data16
or
leave
mov
dec
and
sub
icebp
and
push
insl
mov
mov
js
daa
or
push
and
and
push
dec
aam
cmp
inc
sub
in
loopne
dec
pop
pushw
jbe
cmp
adc
or
adc
or
xchg
jbe
inc
and
inc
fs
pusha
sarl
dec
jne
dec
pop
divb
das
daa
xor
push
test
arpl
or
jb
pusha
data16
inc
jmp
inc
fbstp
insl
xor
xor
add
push
or
inc
pop
imul
outsl
dec
or
inc
add
push
insb
fdivs
sub
dec
mov
cs
insl
push
push
dec
cmp
inc
adc
ss
insb
popa
lahf
xlat
pop
adc
outsb
jne
leave
dec
cwtl
ds
or
outsl
repnz
adc
mov
xchg
cmc
cmovnp
push
push
push
adc
cmp
inc
dec
subb
adc
pop
jp
xchg
jnp
dec
adc
or
pop
pop
push
adcl
leave
jo
inc
pop
aas
cmpl
clc
ret
int3
dec
inc
inc
mov
xchg
and
mov
or
push
je
and
sub
pop
mov
aaa
inc
das
add
sbb
inc
sub
push
mov
xor
dec
pop
xor
nop
mov
lods
mov
enter
and
inc
mov
outsb
inc
add
jmp
mov
clc
call
or
xchg
jmp
jo
ds
xchg
sub
repnz
adc
hlt
ljmp
fwait
inc
sub
pop
popa
and
jno
or
mov
bswap
or
mov
movsl
adc
fwait
or
and
inc
cmc
add
push
sub
aaa
inc
inc
nop
pop
and
ja
mov
inc
jmp
add
nop
or
and
popa
jno
jg
lea
fwait
inc
cmpsl
nop
mov
iret
inc
out
push
or
pop
inc
and
dec
push
mov
jge
lea
nop
mov
leave
add
in
dec
sahf
cmp
sub
pop
mov
adc
mov
ja
pop
incl
push
mov
pusha
and
gs
lcall
inc
xchg
add
decb
mov
mov
sub
mov
adc
jo
rcrb
aas
pop
and
out
push
call
in
scas
std
jg
pop
push
add
cmpb
or
shr
mov
outsb
mov
or
add
idivl
scas
push
lahf
mov
or
cmc
daa
jle
shlb
loope
mov
xchg
addr16
scas
push
idivb
aaa
or
minps
inc
stos
call
dec
xor
or
rolb
aas
insb
test
ljmp
js
sbb
ror
dec
xchg
cmp
pop
dec
dec
dec
aaa
add
inc
pop
aam
ds
xor
cmp
ret
mov
inc
in
cwtl
lea
movl
sbb
call
pop
icebp
mov
lahf
jnp
loop
inc
cmp
push
jbe
sub
adc
jg
movl
xchg
jns
arpl
pop
ljmp
mov
push
mov
dec
pop
adc
xor
jl
inc
cmp
inc
fadd
mov
cmp
subb
add
add
pop
pop
jg
sub
in
inc
or
out
loopne
scas
add
lret
cmp
or
cmp
add
jp
in
lea
fistpl
dec
lock
out
das
push
or
dec
loope
lods
pop
pushl
cwtl
sti
daa
ret
sub
mov
lret
sub
lds
add
add
shrb
mov
data16
jl
pop
lret
dec
packuswb
jnp
mov
leave
hlt
cmc
and
add
add
lahf
sbb
add
cltd
ret
insl
lcall
loop
xor
das
jge
add
jnp
jmp
dec
jb
push
fistl
add
scas
jl
call
js
or
mov
les
push
sub
cmp
mov
sbbb
xor
sti
mov
call
dec
xchg
jns
adc
fmuls
nop
ret
sub
movsl
push
xorb
mov
add
adc
dec
xlat
mov
mov
and
sub
scas
mov
sbb
jmp
insb
ret
pop
fidivl
jns
or
ficoms
testl
iret
lea
lock
dec
ja
jecxz
or
mov
ficoml
sbb
or
aas
lcall
pop
call
inc
jle
sub
jo
js
cmpsl
fstp
xchg
ljmp
mov
fidivrs
mov
adc
add
sti
out
jg
sub
fwait
pushl
adc
mul
dec
mov
pushl
ret
ss
clc
lret
stc
ljmp
in
add
cwtl
sbb
stos
add
mov
or
push
in
arpl
push
xor
gs
inc
pusha
clc
sub
aam
sub
lcall
inc
mov
scas
add
push
cmp
xchg
sbbb
dec
pop
add
rcrl
lret
divb
aam
out
loope
pop
add
xor
dec
jg
ret
sbbb
and
push
add
rorl
mov
mov
jge
iret
leave
and
imul
in
jae
dec
scas
lahf
sti
push
dec
std
adc
xor
ret
fbld
inc
pop
outsl
inc
loopne
clc
or
jmp
inc
cld
in
inc
lahf
add
loopne
jge
ljmp
add
mov
imul
bound
shlb
push
in
mov
cltd
adc
scas
xchg
mov
add
rep
clc
rorl
sbb
fistl
dec
and
mov
add
mov
psllw
xor
cld
jae
mov
mov
popf
sub
dec
nop
add
insb
inc
out
sub
decl
and
sub
xchg
add
or
lcall
icebp
inc
mov
daa
fnstsw
lcall
ljmp
jbe
mov
loope
add
mov
dec
push
jg
mull
xchg
pop
divl
jmp
or
mov
rorb
jl
jmp
inc
int3
cmpl
sbb
push
dec
fdiv
mov
jbe
add
fistpll
add
mov
mov
sbb
repz
mov
lcall
jg
adc
fistpl
xor
fistps
hlt
xchg
cmc
incl
xchg
mov
int3
sbb
inc
pop
scas
mov
push
data16
jg
xchg
decl
ja
jbe
mov
and
mov
call
test
xlat
mov
movsb
pushl
add
jns
jbe
dec
jo
cs
stc
in
adc
mov
shrl
es
sub
and
fld
mov
daa
out
lret
jno
add
movsl
pop
pop
xchg
fmulp
mov
xlat
out
in
cs
lcall
stc
repz
mov
stos
out
push
xchg
lcall
lea
and
mov
adc
or
imul
fildl
push
pop
and
inc
xor
or
insl
inc
fstpt
xor
lahf
xchg
out
je
lret
inc
mov
and
sub
xor
in
js
pop
shrl
fmulp
decl
mov
xchg
add
pop
das
out
ret
mov
jecxz
pushl
in
add
inc
clc
jnp
mov
lock
jns
mov
mov
inc
inc
jp
dec
pop
jle
push
mov
rcr
xchg
cmp
add
lods
stos
daa
push
mov
push
in
or
mov
mov
push
scas
ret
push
nop
inc
outsl
ja
add
sbb
imul
or
in
lcall
lods
pop
test
test
adc
nop
into
adc
push
mov
leave
fcmovnu
decl
mov
scas
sbb
jbe
call
sub
aam
int
mov
daa
jns
aad
out
sbb
lods
and
xchg
imul
and
int
repz
mov
call
lock
or
jmp
mov
arpl
sbb
jg
mov
sub
loopne
adc
mov
cmp
inc
test
mov
mov
cmp
pop
jns
rcll
test
test
pop
cmpsb
add
pusha
jns
stc
daa
or
push
sub
cld
bound
stos
pop
lock
dec
lods
dec
sbb
mov
and
imul
xchg
lea
loopne
push
out
push
add
mov
sub
push
mov
js
enter
in
push
ja
lea
jbe
push
mov
movsbw
add
and
rcr
mov
cmp
bt
add
movb
xor
stc
test
cmp
mov
pusha
pushl
lea
je
dec
mov
stc
pushf
add
jno
add
bt
push
bswap
mov
movsbw
push
sub
lea
bts
bsr
mov
sbb
shrd
sub
bswap
mov
jmp
stos
pushf
lea
jmp
bt
clc
test
pushf
lea
je
cmc
jmp
pusha
lods
jmp
call
rep
call
jl
push
mov
lea
jae
inc
sete
not
mov
push
call
cmpb
jmp
and
mov
add
movsb
mull
pop
inc
or
jno
add
jns
nop
adc
adc
or
lods
adc
cmp
cs
imul
enter
lcall
ljmp
and
out
sub
stos
push
fidivs
rorb
push
aaa
cmp
arpl
pushl
clc
mov
test
test
call
rcl
add
sar
pushf
pushf
mov
cmp
shr
push
bt
test
jmp
lret
jl
fs
mov
popf
mov
mov
add
inc
sub
dec
repz
xchg
sbb
sub
mov
mov
dec
lret
mov
inc
shrl
incl
dec
cmp
add
pusha
add
mov
push
mov
pushf
lea
jmp
dec
dec
dec
xor
cs
insb
add
fs
jae
push
mov
pusha
call
add
add
push
mov
pusha
pusha
pop
pop
mov
push
pushf
pushl
ret
call
jmp
push
call
jnp
call
pusha
lea
jae
test
pushf
cmp
push
lea
ja
jle
not
dec
inc
jmp
xor
pop
mov
cmpsb
lret
jns
jp
xor
outsl
mov
scas
inc
xor
cmp
testl
lods
loopne
daa
sub
or
fadd
adc
push
xor
rorb
scas
adc
cmpsb
jge
mov
sub
sub
adc
pop
hlt
mov
popf
hlt
faddp
int3
inc
into
push
nop
adc
xchg
inc
push
mulb
sahf
and
fldl
push
mov
pop
orl
sbb
push
push
call
jnp
jmp
movb
lea
call
push
lea
jae
pusha
lea
jae
mov
mov
jmp
cli
daa
sbb
clc
ret
pop
xor
mov
int
orl
lcall
daa
fst
inc
leave
mov
jl
mov
mov
clc
push
scas
xchg
fwait
pop
shll
clc
repz
mov
adc
xchg
inc
dec
sub
add
add
out
add
adc
lods
std
in
cmc
mov
shld
xor
call
stos
call
push
call
addl
loope
add
push
pushf
lea
ja
call
bt
cmp
not
stc
bt
cmc
neg
pushl
jmp
mov
add
neg
cmp
cmc
or
mov
neg
mov
push
test
call
push
call
xor
jne
and
bt
add
lea
cmc
push
cmc
push
add
jmp
push
pusha
xchg
jmp
jmp
sbb
push
xchg
xchg
and
aas
mov
lahf
xchg
cltd
add
fildl
jl
xor
popf
ss
sbb
xchg
dec
sbb
push
and
jns
mov
lods
and
inc
lcall
and
mov
stos
movb
pushf
movw
mov
lea
jmp
mov
mov
pushf
pushl
ret
jmp
andb
sarb
jne
outsb
enter
pop
cmp
js
mov
mov
cli
cs
jg
mov
xchg
pop
int3
inc
mov
pushf
aas
cmpsl
sbb
rcrb
rcrb
iret
push
dec
xchg
je
shl
cs
pushf
push
sub
jg
cs
or
jns
push
sub
movsl
dec
lea
lahf
lret
mov
cmp
or
bound
fistl
outsl
pop
inc
sahf
dec
mov
jne
push
stc
cmc
add
jp
push
pusha
xchg
setns
pushl
popl
pop
lea
call
lea
je
clc
bt
bt
add
pushf
test
cmp
pushf
jmp
neg
jmp
rcl
bswap
inc
mov
jmp
xor
add
add
add
cltd
std
add
add
add
in
jnp
add
add
add
add
sub
add
pushaw
add
fdivr
add
add
add
mov
add
add
add
lea
call
jmp
cmpsl
aad
cwtl
jb
lret
push
push
mov
cwtl
mov
add
mov
popf
sub
xor
dec
or
cmpsl
xchg
es
jns
jb
dec
loop
in
sub
jbe
sub
mov
out
cmp
inc
fbstp
push
or
mov
ljmp
push
gs
icebp
inc
xchg
repnz
sti
cltd
dec
cmpsl
inc
cltd
dec
sub
add
setp
lahf
pusha
lea
pushf
call
pushf
pushf
lea
jne
jmp
push
call
push
fcoml
or
sub
shl
lea
add
jmp
jmp
lea
jne
test
push
stc
cmpb
jmp
lea
call
call
jno
addr16
push
rol
dec
daa
jle
push
lcall
mov
or
loope
xor
shl
in
sub
pop
mov
mov
and
add
test
inc
xchg
inc
rorl
add
xor
into
call
enter
inc
push
scas
setno
jae
cmc
call
jecxz
rcrb
mov
or
iret
mov
ja
jmp
adc
mov
pushf
pushl
movb
lea
jae
pushf
pushl
push
pushl
lea
jne
pusha
call
push
call
mov
add
push
call
out
xchg
jno
push
call
xor
mov
pusha
test
clc
bt
mov
stc
bt
cmc
pushf
mov
pushl
pushf
call
mov
xchg
pushf
lea
jo
dec
stc
shl
setg
lods
call
push
bt
cmc
sub
clc
push
pushf
cmp
call
rclb
jno
int
rolb
inc
inc
mov
or
scas
fildl
adc
pop
push
mov
fnstcw
and
cld
test
sub
fs
jne
shrd
mov
cmc
sub
sub
movsbw
rcl
mov
cmc
cmc
jmp
sub
call
push
call
mov
xor
xchg
shrl
mov
mov
test
lret
scas
push
sbb
mov
mov
movsl
xor
xchg
dec
mov
pushf
lea
je
pusha
lea
jmp
call
push
call
js
cmp
mov
test
add
test
pushf
mov
jmp
add
dec
insl
insl
push
outsb
insb
outsl
arpl
dec
inc
add
inc
stc
decl
out
bt
stc
test
pusha
pushf
movl
jmp
cmp
jmp
pusha
call
addl
jmp
adc
decl
dec
or
fwait
ret
inc
mov
adc
filds
push
das
loope
cmp
or
inc
lcall
cmp
pusha
das
jno
pop
xor
lret
pop
leave
pop
lahf
inc
clc
xchg
pop
fucomip
jge
push
push
insb
sub
adc
arpl
rclb
jno
dec
fdiv
stc
lds
push
adc
jnp
repnz
jns
hlt
xchg
cmp
mov
jmp
push
call
js
inc
lea
jmp
push
call
inc
jmp
fwait
cli
xchg
inc
mov
stos
int3
mov
sti
iret
push
or
mov
jnp
xchg
sbb
mulb
xchg
lods
ffree
rorl
ficomps
es
rorb
adcl
mov
inc
xchg
push
sub
cltd
int
inc
and
or
jne
clc
inc
pushf
jmp
jmp
std
sub
jnp
dec
test
xchg
fstpt
shll
add
cmpsb
xor
repz
lock
cmp
addl
dec
jbe
in
and
push
sarl
test
mov
stc
pusha
inc
rol
mov
sub
ja
push
cmp
pushf
mov
pop
mov
clc
cmc
sub
call
xor
sub
jle
repnz
pushf
pushf
pushf
lea
jne
bts
mov
push
bt
call
jmp
push
lea
call
pushf
call
push
jmp
mov
jl
fmul
jno
les
in
sbb
mov
test
xchg
mov
clc
push
mov
cmp
ret
add
cmp
sbb
fnstsw
test
pop
or
cmp
add
movsl
in
inc
sahf
mov
mov
in
leave
push
push
subl
or
mov
adc
call
test
stc
push
cmp
call
bswap
lea
setg
pop
jmp
adc
pushf
lea
jae
pusha
pushf
pushl
lea
jne
call
mov
pushf
lea
cmc
shr
sub
inc
adc
and
lea
pushl
stc
clc
stc
sub
jmp
sbbb
add
shrb
push
pop
push
xor
sub
or
shl
popf
rorl
outsl
outsl
xchg
sarb
sarl
and
or
mov
dec
and
sub
adc
xchg
jnp
insb
or
fmul
sub
dec
out
push
pop
imul
pusha
xor
cmp
jmp
mov
ret
ljmp
sbb
xchg
icebp
jl
das
leave
push
rclb
mov
sbb
push
cmp
adc
xchg
pop
into
sar
incl
push
sub
mov
bound
mov
push
dec
and
adc
xor
lcall
bound
repz
aaa
imul
and
stos
sarl
rcrl
dec
pop
in
sbb
or
push
sub
inc
out
xor
imul
gs
ds
test
addr16
add
sbb
out
lods
sbb
cwtl
imul
jmp
sti
mov
iret
sahf
cmp
pop
or
push
pusha
fisubrl
lea
mov
sub
stos
shrb
stos
jg
push
and
fidivrs
arpl
mov
push
stos
sub
mov
cmp
scas
push
orb
test
shlb
inc
xchg
sti
jo
enter
fs
je
or
add
call
push
call
mov
jae
call
push
call
cmp
hlt
push
adc
call
movb
pusha
mov
lea
je
pushf
test
pusha
add
cmc
test
pusha
test
cmp
push
pushl
mov
lea
jb
jmp
jns
jo
in
out
jmp
notl
int
cmp
xchg
scas
hlt
sbb
aad
pop
sub
sbb
ljmp
sbb
movsb
inc
in
dec
lcall
arpl
jmp
test
daa
xchg
insb
mov
arpl
or
mov
cmp
test
mov
inc
push
sbb
into
mov
cmp
je
and
mov
push
dec
std
add
sbb
xor
notl
mov
testl
add
in
mov
lahf
into
cmp
mov
lock
stos
push
movw
pushf
movb
lea
jmp
lea
jbe
dec
shl
bt
mov
btc
rcl
shrd
bt
add
add
mov
and
mov
clc
call
push
call
sbb
mov
je
iret
xor
outsl
pop
fidivl
ja
ss
call
jp
loop
mov
in
rcrl
aam
inc
push
add
jmp
ror
inc
insb
xchg
in
or
mov
xor
sub
pop
inc
push
aaa
push
or
sbb
insb
in
dec
sub
out
jle
and
add
aas
loopne
pop
jns
xchg
popf
add
mov
push
sub
add
cmp
mov
mov
jecxz
sldt
pusha
add
mov
lea
jmp
lea
jne
pusha
push
jmp
lea
jae
bt
push
stc
cmp
call
cmp
pushf
call
fwait
je
cli
mov
pop
adc
and
or
dec
fcompl
ljmp
iret
cmp
and
push
js
je
lar
and
pop
mull
sub
hlt
dec
sbb
sub
sub
mov
jns
or
mov
out
fmuls
xchg
and
lods
adcb
mov
mov
pop
inc
or
sti
mov
and
mov
dec
sbb
or
and
je
shl
bsr
ror
or
add
rcr
shrd
mov
shl
bts
mov
shld
mov
bt
stc
test
pusha
call
jmp
movl
insl
nop
mov
lahf
adcl
or
xchg
push
int
ds
inc
sbb
dec
pop
cmpsl
insl
js
icebp
xchg
cwtl
or
test
jno
stos
cmp
add
inc
inc
mov
push
fnstcw
pop
orb
sub
lock
jno
loope
ds
and
or
pop
loopne
call
movsb
aas
push
ss
mov
fdivrl
das
les
int
cli
aas
xchg
jg
cmpsl
add
mov
aaa
frstor
inc
xor
sbb
push
cwtl
popf
cmp
addb
sub
add
mul
mov
test
mov
cmp
xor
xchg
xor
jmp
jecxz
sti
aaa
fs
sarb
mov
in
pop
lods
or
daa
xchg
into
push
inc
mov
arpl
mov
testl
loopne
daa
jmp
pop
cmp
test
and
sbb
add
jmp
mov
pusha
push
pushl
pushl
pushl
ret
pop
mov
es
inc
int3
jne
mov
gs
cmpsb
push
sub
jo
cmp
sbb
mov
adc
adcb
test
mov
mov
xchg
aas
scas
insb
push
aad
cmp
lahf
sub
cmp
cmp
in
pop
je
add
in
push
mov
mov
repnz
outsb
pop
into
test
sbb
icebp
loop
mov
adc
push
fs
ret
sub
lock
push
dec
daa
mov
test
stc
sub
imul
add
mov
daa
fwait
lcall
enter
sub
lods
and
mov
test
fisttps
enter
repz
int
enter
sub
fstl
mov
ror
aaa
and
test
cmp
mov
fcmove
pop
and
mov
cmp
or
test
int
enter
mov
fldenvs
and
repz
out
ja
fwait
sub
shll
or
inc
jnp
pop
cli
enter
pop
xor
in
lcall
lcall
mov
lret
mov
sbb
in
sbb
iret
cmp
test
sti
adc
pop
push
rolb
mov
repnz
repz
mov
dec
ja
imul
and
mov
sahf
int
mov
mov
inc
xor
andb
sub
sub
and
push
in
cmp
int3
fstp
cli
inc
xchg
or
mov
jle
or
add
adc
fldln2
add
fcomp
test
sub
or
jp
shlb
lahf
mov
inc
xchg
and
movsb
gs
mov
push
test
cmpsl
cmpsl
add
mov
xchg
pop
sbb
jno
pop
nop
stos
push
adc
ret
pusha
imul
mov
and
mov
adc
movsb
shr
les
es
sti
push
ljmp
push
fildll
dec
lcall
cmp
fists
cmc
cmp
add
jno
mov
shl
mov
stc
bt
bt
cmp
pushf
jmp
push
call
fwait
mov
sub
or
btc
ja
neg
mov
call
rep
call
xchg
dec
aaa
pop
or
jge
or
pop
out
pop
sbb
insb
jnp
pop
sahf
jo
pop
sub
cmp
stc
xchg
mov
pop
push
es
outsb
mov
push
cmpsb
dec
inc
faddl
dec
adc
stc
push
ret
roll
xchg
popa
leave
adc
cwtl
pusha
adc
fcmovu
mov
f2xm1
lods
push
out
mov
outsl
cmpsb
jns
add
das
jg
shll
addb
dec
scas
xor
push
sti
jp
xor
inc
movsb
sub
cmc
decb
xor
movsb
or
dec
sti
outsb
cli
adc
mov
xchg
imul
dec
insl
xor
cs
cmpsb
or
cmpsb
stos
icebp
ds
mov
mov
pop
into
arpl
add
iret
pop
inc
jp
mov
fisubs
aam
mov
je
mov
outsl
sahf
sbb
add
dec
aas
repnz
insl
add
cmp
insl
or
pop
mov
imul
es
aas
jmp
lods
pop
sub
sti
insl
xchg
pop
shll
and
xchg
pop
lret
lcallw
lods
ds
daa
push
push
jo
icebp
int
ljmp
in
loop
cmp
and
xor
iret
jns
dec
jecxz
not
jne
inc
sbb
jo
xchg
push
xlat
pusha
loop
sub
pusha
pushf
push
pushl
popl
pusha
mov
lea
jmp
not
not
pop
call
push
call
or
cmp
pushf
jmp
cmpsb
pusha
pushf
mov
lea
jne
jmp
mov
lea
je
pusha
mov
pusha
lea
jmp
popa
add
mov
repz
sbb
mov
fildll
add
repnz
rorl
xchg
jbe
dec
mov
push
sbb
nop
int
push
pop
or
hlt
mov
sbb
jmp
mov
or
pop
in
test
add
movntq
mov
out
outsb
in
pop
mov
sbb
mov
jne
lock
cmp
inc
cmp
sti
subl
ja
repz
popf
enter
or
sarl
jp
or
mov
imul
mov
jl
insb
psrlw
push
and
sti
mov
sub
sub
cmpsb
test
jo
je
sub
aaa
adc
sti
movsl
add
push
cmpsl
cmp
das
dec
push
pop
xchg
mov
xchg
xor
mov
ja
or
xchg
mov
and
js
inc
popa
sub
mov
mov
mov
mov
ja
push
bound
es
and
pop
fsubr
push
or
jmp
fucomip
mov
sbb
pop
in
in
adc
sub
testl
mov
cli
add
fisubl
cmp
test
mov
cmc
cmc
cmc
call
jmp
bsf
sub
pushf
movsbl
mov
movzbw
movzbw
push
bswap
mov
setl
mov
movzbl
mov
not
push
not
mov
call
mov
jmp
stc
mov
not
shld
shr
mov
cmp
cmp
test
cmp
movb
jmp
addb
add
rcrl
xor
or
fcoml
add
in
xchg
push
pop
lds
jae
bound
add
ljmp
call
out
or
xor
hlt
adc
xor
sbb
loopne
mov
dec
dec
or
fwait
push
addr16
and
stos
in
cmp
pop
call
lds
pop
push
push
fs
xchg
pop
pop
mov
sbb
pop
adc
mov
lcall
call
adc
loop
dec
ret
decl
add
clc
mov
icebp
cmpsl
xchg
scas
pop
xor
dec
add
push
call
fidivrs
not
jg
cld
pop
aaa
fadds
xchg
repnz
mov
push
and
inc
out
push
push
mov
daa
xlat
mull
pop
mov
test
stos
pop
stos
iret
and
mov
pushf
mov
pop
enter
mov
xchg
mov
add
hlt
call
iret
test
mov
inc
or
mov
movl
out
in
xorb
jecxz
lods
adc
push
pop
push
testb
lret
or
fwait
or
cmp
sbb
jg
sub
and
mov
out
aas
xchg
xchg
and
loopne
mov
mov
pop
push
leave
inc
xor
aas
arpl
int3
sub
push
decb
sahf
mov
xchg
cmp
push
mov
or
adc
sysret
cmp
out
add
add
ss
js
fistl
sti
call
mov
daa
inc
fisubs
sub
adc
dec
pop
ds
daa
call
repz
and
xchg
inc
icebp
mov
stc
shr
repnz
andl
mov
push
push
clc
call
lods
stos
ficoml
adc
into
lods
ret
or
gs
add
pop
pop
je
pop
jns
sub
pop
pop
mov
jge
or
pop
inc
sbb
sub
jnp
jg
xchg
jg
pop
negl
pop
outsl
or
mov
adc
aas
addl
andb
jge
addr16
daa
dec
daa
or
out
or
adc
pop
lahf
and
js
sar
mov
sbb
das
cltd
mov
jbe
mov
cmp
scas
orl
fwait
jbe
mov
inc
inc
packssdw
in
mov
xor
test
cltd
lahf
sbb
and
jl
mov
pop
mov
inc
xchg
push
inc
dec
movlps
test
xchg
setae
or
sqrtps
adc
xor
pop
jecxz
out
repz
jg
lahf
mov
inc
pop
stos
push
seto
test
mov
test
cltd
push
inc
ja
add
pop
addl
leave
pop
and
daa
sbbl
sahf
shrb
addl
lahf
mov
and
movntps
lahf
adc
dec
lahf
bswap
jge
aas
pop
jg
scas
mov
imul
pop
or
adc
push
addr16
addr16
sbb
sti
fs
adc
xchg
xchg
mov
das
sbb
inc
das
and
mov
movups
ja
ljmp
pop
or
mov
mov
dec
xlat
dec
fistl
xlat
cmp
sbb
xor
xchg
aas
push
inc
aas
fwait
push
dec
pop
or
xchg
scas
xchg
cmpsb
setb
jae
ja
pop
mov
pop
adc
stc
sbbl
dec
call
jno
dec
push
jmp
addr16
xchg
fwait
repnz
or
ljmp
lret
mov
xor
adc
inc
sbb
jb
pop
xor
das
call
pop
mov
dec
push
pop
frstor
xchg
ss
pop
popf
xchg
out
add
adc
mov
pop
pop
push
pop
in
call
or
or
shr
cmp
retw
pop
xor
add
lahf
and
xchg
and
and
xchg
and
loop
fdivs
cmpsl
push
adc
lds
inc
call
pop
iret
jb
out
je
and
push
cltd
lret
add
push
jbe
push
sbbb
cmp
pop
dec
inc
sbb
test
xchg
mov
out
fwait
mov
sahf
pop
xor
addr16
lea
pop
inc
sahf
aas
adc
mov
cmp
pop
or
bound
gs
mov
enter
jmp
ds
roll
mov
pushf
dec
cld
arpl
scas
aaa
push
pusha
pop
sti
daa
mov
and
out
lret
and
movntq
or
call
shl
cmc
xlat
cmp
pop
mov
sub
in
lds
clc
sarl
inc
mov
out
clc
and
xchg
test
push
jg
xchg
cmp
enter
adc
das
sub
or
clc
gs
jns
es
lock
test
xor
sbb
adc
and
jno
movsl
cld
add
call
mov
fisttps
xor
or
add
imul
cmpsl
outsl
test
js
dec
negl
add
pop
out
and
shll
jmp
xchg
mov
divl
mov
xchg
shll
pop
adcl
push
xchg
mov
pop
testb
jl
dec
push
jae
mov
jbe
pop
and
add
mov
addl
cmpsb
ret
add
push
nop
or
icebp
or
movsb
iret
mov
shr
inc
pop
jle
loope
jle
adc
fdivs
sub
fsubr
and
jg
out
adc
adc
adc
push
test
in
fwait
pop
inc
setge
call
xchg
ficoml
cmp
adc
fwait
mov
pop
rorb
pop
adc
shll
cmp
add
addr16
iret
or
stos
sub
cmp
xor
aas
mov
and
xlat
pop
xlat
mov
lods
dec
ffree
inc
ficompl
lods
pop
scas
iret
fwait
inc
fwait
imul
jg
push
pop
jmp
cwtl
mov
add
dec
out
jnp
je
aaa
into
push
ss
aas
push
push
and
notl
pop
dec
jb
mov
or
aam
in
adc
xchg
and
cmp
add
int3
adc
fwait
aas
fbld
push
call
repnz
and
inc
pop
test
inc
mov
ds
mov
pop
and
inc
ljmp
pop
push
es
dec
orl
iret
mov
ret
outsb
adc
lds
dec
rcrl
mov
repnz
out
lock
sti
test
rcrl
call
test
lret
jo
lcall
inc
fstps
or
pop
loop
cwtl
mov
gs
push
sub
xor
adc
mov
jecxz
and
add
xchg
jp
push
mov
push
out
shll
gs
dec
mov
pusha
inc
cli
fsubrs
push
dec
or
popf
mov
mov
cmp
out
add
or
and
cmp
pop
mov
popf
push
nop
or
pop
adc
sub
mov
aas
inc
addr16
call
cmp
push
out
pop
jp
push
cltd
xchg
adc
aad
arpl
test
mov
xchg
aas
cs
or
and
test
jle
add
subl
stos
jg
sbb
sub
out
push
scas
pop
jg
xor
adc
adc
out
scas
gs
fisttpl
pushf
shlb
test
xchg
lds
loope
push
pop
mov
pop
ljmp
scas
repz
jbe
lahf
les
pusha
dec
rcrl
xlat
cmp
push
and
arpl
xchg
pusha
xchg
cwtl
dec
aam
add
sub
leave
adc
pop
sbb
adc
test
jecxz
pushf
and
xchg
or
sub
push
xor
inc
out
pop
adc
jne
inc
add
jb
loop
fwait
call
cmp
pop
daa
fmul
loop
out
adc
call
xchg
or
movsb
ret
fisttps
test
push
dec
leave
lret
mov
pop
mov
push
mov
addl
pop
out
mov
call
lret
adc
push
add
flds
call
add
pop
cmpsl
mov
add
aam
jg
clc
mov
cmc
xor
les
push
adc
out
fimuls
dec
pop
std
movsb
aam
rol
mov
and
nopl
or
addr16
das
cmpsb
ret
pop
popa
jae
out
pop
add
shr
mov
sub
das
shll
movb
cmovge
jae
or
push
scas
mov
insb
inc
pushf
adc
xor
cli
inc
sub
xor
push
and
pop
sbb
out
adc
sub
inc
mov
sbb
xchg
adc
in
and
add
mov
adc
maxps
je
fdivrl
std
push
mov
mov
and
iret
inc
stos
inc
pushf
lret
shl
addr16
inc
jmp
inc
push
ljmp
cmc
ret
sbb
shl
mov
mov
lods
push
jle
aas
mov
rol
fs
and
hlt
jg
fwait
add
rcrb
fmuls
xchg
not
dec
add
addb
or
not
fisttps
mov
inc
shr
push
fwait
cwtl
and
pop
leave
jo
je
pushf
mov
sub
push
ss
out
xlat
sbb
iret
mov
filds
jg
iret
aaa
sbb
xchg
mov
outsl
adc
inc
adc
and
cmp
push
pop
pop
sub
shl
mov
mov
or
in
in
mov
jg
sub
add
mov
push
sub
invd
lea
xchg
and
cmpsl
arpl
pop
addr16
frstor
xor
and
shlb
or
and
loopne
lret
add
pop
add
push
addr16
fstpl
movsl
enter
aas
into
js
xlat
fwait
sub
push
psllw
ss
push
sub
popa
jo
xor
into
or
xchg
add
cli
out
loop
xchg
xchg
add
call
out
mov
dec
stc
rolb
jmp
sub
lahf
push
adc
inc
adc
pop
mov
inc
push
setge
shlb
ficoms
jno
mov
push
xchg
xor
into
insb
or
sub
stc
sarl
cli
out
pop
add
pop
jg
pop
or
pop
loope
xchg
pop
adc
imul
cmp
out
jmp
sub
jno
pop
gs
and
pop
call
hlt
adc
push
fwait
xor
inc
les
dec
sbb
add
ljmp
push
rcrl
rsqrtps
xor
dec
inc
adc
lods
or
mov
fsubl
and
pop
pop
sbb
inc
cmp
daa
jmp
xchg
mov
push
out
rcrl
je
jmp
addr16
roll
dec
or
push
cltd
inc
sub
add
push
bound
push
mov
cltd
xor
ss
mov
cmp
push
push
dec
sahf
adc
fwait
xor
lods
cmp
xchg
shrl
push
sub
push
movsl
adc
xchg
repnz
in
ds
or
xor
inc
dec
repz
push
pop
jae
mov
jg
int
xlat
mov
add
arpl
mov
movl
lahf
cmp
call
sbb
divb
sti
rcrl
aaa
cld
sub
adc
and
xlat
add
dec
pop
push
maskmovq
testl
dec
sub
ja
and
lret
xor
sub
popf
rclb
addr16
or
out
fbstp
mov
push
shll
pop
inc
add
push
gs
in
jmp
cmp
sbb
inc
inc
dec
call
mov
movsl
pop
idiv
daa
dec
ret
nop
cmp
test
fstl
cwtl
mov
inc
fimuls
jg
imull
mov
jno
aaa
dec
lods
shrl
sahf
sub
inc
rorb
imul
mov
mov
inc
call
sbb
push
adc
adcl
adcb
fmull
icebp
and
out
inc
mull
pop
pop
jae
mov
add
mov
push
addr16
add
sbb
pop
pushf
pop
push
dec
sti
pusha
xor
cmpsl
pop
mov
ret
mov
mov
add
push
lock
mov
mov
adc
nop
das
jl
push
sub
mov
cmp
bound
shll
dec
pop
mov
lods
shl
xchg
daa
jmp
mov
pop
mov
pop
push
push
jns
stc
je
xchg
ljmp
jbe
or
jge
dec
emms
sub
dec
or
xor
and
cmp
call
sahf
test
sar
std
arpl
enter
add
mov
jg
testl
sbb
lods
not
mov
xchg
sti
es
iret
pop
and
adc
icebp
push
inc
inc
adc
lods
stos
ret
or
cmp
add
push
std
enter
out
aas
add
mov
rol
or
adc
hlt
add
push
dec
fnsave
fidivrl
pop
pop
mov
das
dec
push
call
into
push
and
jns
fists
rol
call
pop
lea
jb
flds
out
je
cmp
fdivl
mov
les
sub
addr16
dec
out
pusha
negl
aaa
adc
pop
repnz
or
mov
sbbl
or
dec
add
repnz
or
lea
lods
mov
cmp
xchg
jae
lock
imul
mov
or
sub
xchg
cmpsl
cmp
pop
fistps
mov
pop
mov
adc
loop
cwtl
cmc
mov
dec
cltd
jbe
adc
jmp
sbb
xor
add
or
sbb
movsb
or
sub
mov
xor
decl
test
and
mull
mov
or
dec
aaa
ficompl
cld
xchg
mov
or
mov
cmpsl
in
dec
add
addr16
sti
xor
lret
sbb
popf
mull
sub
orb
xor
in
int3
gs
xlat
xlat
add
addr16
pop
fstpt
inc
dec
inc
cmp
nop
popf
ja
insl
pop
adc
aaa
jno
inc
mov
test
xchg
add
fcomip
push
cmpb
mov
and
ja
aas
xor
and
test
jne
push
sbb
mov
sub
xchg
pop
repz
lret
dec
pop
mov
mov
dec
shll
mov
aad
adc
out
in
push
in
bound
add
insb
hlt
pop
ds
inc
addr16
aaa
call
movb
push
lcall
jl
mov
in
divl
pop
out
fadd
pop
dec
in
dec
mov
dec
dec
add
cmc
cld
sub
push
adc
mov
mov
call
push
or
jg
adc
jne
add
cld
call
inc
dec
or
xchg
hlt
jae
add
stos
sub
pop
add
jge
lcall
nop
sbb
inc
sub
hlt
xor
popl
jns
xor
jg
shr
mov
fidivrs
inc
flds
push
jge
or
stos
lods
mov
jg
test
out
into
inc
adc
rol
jae
test
jp
add
adc
mov
hlt
rclb
clc
pop
movsl
fnstenv
ret
cmp
mov
cmp
rcrb
push
inc
add
push
xchg
int
xchg
lds
je
dec
mov
cmp
cmp
lret
pop
aas
std
jl
lock
daa
ja
aad
rcrb
movsl
shrb
ret
cmpsb
push
mov
pushl
loopne
pop
rol
das
sub
stos
call
add
or
movsl
insl
adc
hlt
pop
cli
push
dec
test
lds
push
imul
jp
sub
cmp
jne
loope
xchg
mov
fsubl
notl
and
aas
psubsb
xchg
adc
sub
sub
jo
sub
jmp
cmpsb
dec
repnz
xchg
lret
mulb
and
jnp
or
mov
loope
lcall
movsb
sub
sub
sbb
lods
popa
mov
hlt
xchg
pop
out
mov
pop
aas
call
adcl
inc
in
inc
int3
adc
ds
xor
addr16
sub
int3
dec
imul
mov
jbe
dec
inc
in
jle
in
mov
bound
push
testl
mov
mov
or
ret
push
mov
jmp
xchg
jg
addr16
adcl
psubsb
cmc
dec
cmp
sub
or
je
push
lock
add
dec
add
mov
sbb
mov
push
or
push
test
sub
rclb
cmp
lahf
dec
call
fwait
jle
fldl2e
ljmp
pop
clc
xchg
test
out
fs
mov
push
pop
movsb
pop
bound
in
fiaddl
pop
enter
or
pop
xchg
adc
mov
inc
and
inc
adc
call
cmpsl
mov
mov
aas
xchg
jecxz
das
call
clc
adc
dec
jge
sbb
testb
daa
addl
push
fwait
aas
and
pop
inc
rolb
enter
arpl
daa
push
call
std
mov
push
out
mov
add
add
lret
repnz
xor
add
push
and
push
push
xlat
mov
and
fwait
movsl
loopne
mov
adc
data16
test
insl
js
aaa
les
push
aaa
out
int
dec
enter
push
fwait
sub
daa
add
mov
lret
icebp
pop
ret
clc
in
push
lds
mov
lcall
xchg
ds
cwtl
jnp
push
out
js
addr16
outsl
pop
dec
je
xchg
stos
lret
pop
sbb
mov
and
test
dec
in
add
or
push
ret
xchg
fiaddl
or
ret
sbb
sbb
mov
jp
arpl
or
mov
push
push
and
add
aad
mov
pop
call
sbb
out
fs
cmp
mov
sub
sbb
pop
mov
and
stc
ror
mov
mov
and
xor
add
add
push
in
xor
add
inc
insb
pop
mov
inc
mov
shrb
mov
inc
add
sub
in
dec
mov
add
rclb
out
dec
rcll
es
cmp
test
pop
je
out
neg
stos
mov
bswap
adc
in
jnp
int3
cmp
sub
add
sahf
dec
mov
adc
out
js
rcrb
aam
subb
enter
sbb
fwait
lahf
add
in
mov
xor
or
rcrb
aaa
hlt
mov
das
cmc
jg
jg
sti
mov
shlb
scas
push
add
and
xchg
out
dec
stos
xor
ljmp
adc
cmp
pop
lcall
push
andb
pop
dec
lods
cmpsb
push
out
sti
clc
out
popf
xchg
xchg
scas
add
lods
dec
jne
ret
repz
push
aad
and
push
dec
xchg
rolb
jp
or
roll
adc
addr16
mov
inc
fstpl
and
cmp
add
add
addr16
in
andl
add
addr16
push
add
js
add
push
sbb
mov
es
iret
dec
mov
add
cs
imul
xor
pop
add
xor
xchg
aam
add
aas
out
jecxz
cmc
nop
test
lods
dec
and
mov
out
xchg
mov
pop
xor
ljmp
xchg
push
sti
mov
loop
push
dec
mov
pop
shrb
push
xchg
mov
fcmovb
cwtl
sbb
inc
cmp
mov
js
xchg
adc
xchg
adc
pop
cwtl
loop
dec
xor
ss
ljmp
mov
lahf
or
movsb
repnz
mov
xor
sbb
fists
psadbw
lods
jo
and
icebp
xchg
mov
daa
cmovle
test
enter
mov
inc
and
pusha
add
jg
call
call
into
dec
or
shll
pop
cmp
mov
jg
inc
adc
push
test
add
cmp
push
cmp
cmp
rcrl
adc
and
lock
call
mov
and
repz
mov
pop
popa
movsl
aam
add
sti
ljmp
pop
cmp
gs
popf
sbb
xor
push
pop
xchg
repz
mov
xor
or
sub
dec
in
or
pop
adc
or
xchg
orb
push
pop
push
mov
inc
repnz
and
mov
clc
xchg
jo
call
in
cmp
add
insb
mov
xchg
lds
iret
clc
sub
nop
hlt
int
mov
xchg
xchg
add
pop
imul
mov
jg
in
xchg
popl
cmp
pop
mov
pop
addb
mov
jg
push
out
xlat
out
stos
pop
in
test
sbb
xor
in
cs
les
push
lret
test
idiv
rcll
cs
add
pop
jg
test
mov
push
inc
jmp
jns
fcoms
or
xchg
into
pusha
pop
fdivp
repz
inc
std
push
into
sbb
push
addr16
push
mov
add
push
inc
adc
in
clc
cmp
outsb
push
push
push
insb
jmp
jecxz
push
mov
dec
pop
and
jp
iret
jne
aas
div
enter
sub
inc
int3
xchg
test
push
clc
subl
movsb
jle
stos
ljmp
push
mov
repz
out
and
adc
push
ds
mov
and
inc
aaa
and
and
js
adc
paddusb
push
rcrl
out
lahf
xor
mov
repz
iret
jle
in
push
or
sub
jp
jg
cs
push
shr
arpl
push
nop
cmp
mov
pusha
inc
mov
mov
pop
or
mov
jmp
cmpsb
xchg
out
mov
hlt
popa
mov
push
negb
push
xchg
and
aam
call
add
mov
pushf
movsb
jmp
cmp
ja
inc
xchg
pop
or
out
add
aas
mov
add
jae
lock
inc
pcmpeqb
dec
cld
mov
in
repnz
test
pop
push
cli
pop
cmpsl
incl
jns
lock
ja
aas
test
lods
sti
adc
repnz
mov
add
jb
add
pop
pcmpeqd
pop
pop
sbb
test
psllw
aaa
stos
pop
mov
xor
mov
adc
iret
mov
pop
add
mov
dec
mov
aas
mov
popf
inc
push
mov
dec
std
and
mov
or
out
adc
in
jno
xchg
lock
icebp
leave
mov
imul
pop
sti
repz
pushl
xorb
hlt
and
ret
ljmp
push
stc
punpcklwd
pop
sbb
lret
adc
jle
negl
hlt
loop
adc
sbb
push
punpcklbw
std
jle
shlb
pop
or
adc
dec
icebp
repnz
andb
and
inc
mov
movsl
clc
inc
sbb
lea
stc
jg
add
fs
test
repnz
ds
fs
popf
mov
push
cld
add
adc
push
ss
fdivs
add
cmp
or
sbb
stc
push
leave
repnz
add
test
add
inc
or
ljmp
push
pop
push
addb
mov
sub
inc
lods
popa
add
mov
insb
pop
sar
mov
xor
and
scas
add
aas
pop
xchg
scas
mov
inc
and
push
mov
lret
cmp
dec
notl
cltd
out
es
pop
mov
mov
mov
fwait
adc
sahf
and
rol
cwtl
mov
mov
jl
adc
and
lock
xchg
aam
pop
mov
pop
jle
pop
sti
into
stos
jle
mov
pushf
cld
dec
or
push
jg
into
pop
inc
icebp
ljmp
repz
and
dec
add
push
pop
pop
testb
lcall
aad
hlt
call
xor
mov
adc
pop
fwait
in
cli
mov
into
stc
push
lret
pop
nop
arpl
stos
adc
popw
push
testl
adc
cmp
stc
test
pop
shr
and
inc
lahf
pop
push
leave
ss
add
pop
imul
popa
lret
das
fbld
das
clc
mov
adc
sbb
pop
loopne
stc
movsl
ret
fcomps
add
arpl
adc
jae
icebp
das
cltd
mov
icebp
jne
adc
ret
rcrl
outsl
clc
mov
cmp
inc
ficoms
outsl
push
mov
stc
cld
pop
or
mov
div
push
movsb
mov
cld
cmp
setle
andb
bnd
jbe
js
das
xchg
daa
lods
ficomps
cmc
repz
ss
js
pop
push
adc
clc
nop
and
xor
hlt
xchg
cwtl
add
ss
call
pop
pop
jbe
icebp
push
xchg
mov
repz
xchg
pop
add
push
adc
pop
lret
out
jg
xorl
mov
or
ret
cmp
mov
dec
mov
arpl
cmpsb
in
pop
sub
shr
xor
mov
mov
adc
setae
pushl
roll
clc
call
out
fcoms
add
push
in
push
icebp
pop
sbb
mov
add
pusha
fistl
test
sbb
inc
cmp
ja
cwtl
ds
ud2
rorl
inc
inc
out
add
not
mov
gs
push
aad
add
dec
dec
mov
cmp
bound
xor
addr16
dec
popa
fwait
lea
test
inc
das
shll
ror
xchg
adc
movb
call
jns
or
jns
xor
or
cwtl
inc
test
sbb
int
iret
adc
pop
fistps
addr16
addr16
sub
jge
push
pop
jecxz
mov
aas
cmp
out
push
inc
sbbl
rclb
push
adc
sbb
test
push
mov
hlt
and
ficompl
push
add
sbb
into
pop
rorl
les
xchg
repz
imul
aas
roll
and
mov
rcrl
xorb
test
or
add
cmp
inc
push
mov
packuswb
inc
lods
dec
call
ss
out
inc
xor
inc
mov
sub
enter
dec
sarb
aad
cmp
jecxz
add
lock
cmpsb
ret
xor
mov
push
mov
inc
insl
pop
stc
add
scas
mov
cmpsl
mov
adc
or
lea
jmp
mov
xchg
push
pop
mov
ds
sbb
pop
lret
or
lret
hlt
dec
stc
or
sub
xor
xchg
lods
mov
popf
bound
pop
mov
xchg
lock
cmpsl
xchg
fsubrl
cmp
adc
inc
jbe
call
sahf
xchg
cmc
push
ds
bound
cmc
inc
sbb
jnp
dec
test
jbe
jae
aas
pop
add
pushf
mov
push
pop
pusha
xchg
pop
scas
cmp
pop
rcrl
lods
test
call
xor
mov
cmp
nop
shr
adc
fbld
sub
push
outsl
mov
fwait
test
sub
and
das
dec
sub
push
xchg
mov
mov
popa
arpl
inc
mov
jmp
add
imul
repz
out
out
aas
mov
rcll
out
cmp
inc
inc
std
push
jge
pop
ds
dec
lretw
mov
adc
das
push
frstor
scas
das
add
inc
push
fstps
les
mov
adc
inc
push
stc
arpl
inc
insb
cmpl
call
cmpsl
mov
imul
cmp
orl
arpl
jg
inc
lock
mov
sbbl
push
ss
jmp
fwait
pop
push
push
test
stos
cmpsl
out
inc
jge
shl
xor
shll
xchg
add
cmc
iret
loopne
dec
and
cs
imul
or
jge
inc
pop
adcb
or
rcll
loop
aam
fs
push
cmp
dec
mov
incl
push
xchg
ret
sbb
imul
and
push
dec
lret
shll
das
imul
mov
push
add
cltd
add
leave
or
mov
and
stos
add
pop
jge
fwait
jp
sub
mov
ret
or
movsl
inc
das
pop
xor
fwait
call
popf
mov
das
cmpsb
fwait
mov
add
mov
xor
mov
or
js
pop
enter
sahf
adcl
adc
and
xchg
aaa
mov
jbe
gs
test
jns
int3
mov
int3
pop
cmpsl
cmp
stc
mov
test
cs
mov
fsubr
add
notb
push
inc
ror
adc
sub
pop
jo
jbe
push
xchg
sub
pop
pop
and
xadd
xor
push
leave
scas
orl
push
mov
push
xchg
lret
test
pop
inc
inc
pop
out
cmp
addr16
cmp
add
dec
lret
mov
ds
inc
xor
or
mov
repnz
movsb
xor
and
jmp
xchg
ja
in
and
push
lock
out
and
push
xchg
or
roll
enter
sti
pushf
sub
cmp
cmp
fstpl
sbb
int3
inc
adc
inc
pop
xchg
pop
add
xchg
scas
jg
cltd
mov
mov
pop
lahf
in
test
mov
adc
add
pushf
out
or
pop
mov
test
ss
lods
fwait
inc
shrl
sub
cmc
sahf
leave
fwait
push
arpl
int3
jns
xchg
mov
lret
lahf
andb
insl
sub
push
stos
iret
and
adc
cwtl
dec
adc
test
call
mov
jmp
jae
mov
aaa
ja
sub
sbb
cmp
add
lea
mov
jae
call
or
dec
add
xchg
mov
cmp
incb
add
add
fistpl
push
out
add
mov
cld
xor
inc
cmp
popa
push
mov
pop
jg
lds
repz
xchg
call
cwtl
sbb
mov
pop
shlb
lds
clc
sub
dec
pop
sahf
aam
call
lret
stc
fadds
adc
add
mulb
push
mov
pop
xor
add
add
push
pop
mov
movsl
jle
dec
push
sub
pop
call
sbb
ret
adc
fwait
cmpsl
push
pop
sub
xor
dec
pop
rcll
ror
mov
outsb
adc
inc
xchg
cmp
outsl
loopne
add
cli
xchg
test
lret
xchg
jecxz
mov
pop
les
out
dec
movsl
push
inc
sahf
mov
mov
nop
das
sbb
cltd
pop
repz
addr16
add
icebp
cmp
mov
out
sub
add
int3
rcll
inc
adc
inc
cli
les
or
cli
xchg
lea
or
mov
stos
add
cs
call
daa
aam
pop
sahf
neg
and
xchg
cltd
push
jecxz
in
aad
add
or
mov
mov
adc
mov
or
mov
pop
pop
scas
xchg
push
xor
xor
dec
xor
out
cmp
adc
inc
xor
add
add
dec
les
je
lods
and
mov
in
ror
mov
cmp
pop
std
push
mov
pop
push
add
iret
call
jg
hlt
inc
cmc
das
mov
pop
mov
adc
pop
into
popa
add
pop
aam
jnp
int
int
sub
xor
loope
sbb
mov
pushf
aas
fwait
fs
out
ljmp
sub
iret
movsb
adc
sub
out
push
call
cmpb
jo
mov
adc
leave
arpl
mov
inc
outsb
lea
in
pop
dec
les
enter
out
jb
clc
daa
rcrb
popf
xchg
push
inc
movsl
shl
mov
sub
fwait
sarl
dec
pushf
mov
movsb
jle
mov
jae
jl
out
add
fwait
shlb
xor
lret
shrb
out
out
mov
dec
jnp
push
daa
xchg
fwait
jecxz
pop
mov
out
or
pop
jnp
inc
jae
cmc
sbb
add
and
pop
and
push
inc
gs
push
scas
push
adc
or
lds
and
xchg
mov
mov
inc
das
repz
add
xchg
je
loope
dec
call
dec
xor
mov
dec
cmpsb
sub
xchg
pop
push
pop
stos
adc
and
cmp
dec
dec
sub
push
fwait
movsl
imul
hlt
test
mov
mov
dec
and
pop
jge
rcrl
lock
push
xchg
or
jne
and
mov
or
cmp
and
sub
or
test
or
add
push
push
das
push
push
mov
push
sub
pop
sub
sbb
fwait
ret
lods
bnd
addr16
mov
sub
arpl
mov
rcrl
aam
add
pop
add
cmp
or
mov
mov
andb
cmp
les
xchg
shlb
pop
add
orb
and
push
xor
sbb
jnp
jae
sub
das
xchg
pop
mov
mov
mov
call
inc
push
inc
and
add
sub
lds
movsl
adc
xor
out
shll
dec
cld
mov
das
xor
xor
dec
push
lret
cwtl
push
daa
jg
and
mov
out
add
sub
lods
jae
push
imul
fstp
xchg
push
add
arpl
mov
mov
push
shrb
ss
addr16
clc
mov
stos
sti
pop
and
les
cmp
sub
leave
inc
cmc
sub
push
add
mov
inc
in
pop
out
add
mov
andb
stc
scas
cs
mov
push
dec
mov
or
pop
sub
xchg
lahf
lea
xor
cs
rorb
and
loop
sbb
xor
pop
xchg
test
adc
xor
mov
push
imul
xchg
aaa
nop
call
push
sarl
xchg
or
aad
ficoms
or
arpl
call
or
push
rcrl
cmp
pop
filds
xor
mov
out
out
fistpl
xor
lods
add
xchg
call
fwait
push
xor
cmp
push
sub
dec
mov
push
dec
das
call
jle
loop
xor
iret
push
dec
jg
pop
dec
xor
add
xor
mov
repnz
loop
and
cmpsb
test
adc
push
sub
mov
jno
sti
and
pop
dec
push
xlat
sbb
sub
xor
das
xchg
mov
sub
add
cs
pop
mov
mov
mov
mov
call
push
and
lcall
or
jmp
gs
adc
gs
mov
out
and
adc
std
jmp
sahf
adcb
xor
fwait
aam
xchg
lret
push
pop
dec
cmp
xchg
mov
add
mov
xor
push
les
aas
daa
cmpsl
sub
mov
xchg
add
ds
or
inc
pop
xchg
sbb
push
pop
or
imul
xchg
mov
push
mov
ss
popa
lahf
fsub
sub
js
jmp
dec
mov
xor
ds
daa
push
dec
sbb
dec
mov
cmp
pop
nop
mov
lret
or
push
jno
xchg
sub
pop
ljmp
inc
cs
mov
xor
dec
sub
aas
push
mov
or
enter
push
sub
adc
lret
rcll
push
push
sti
dec
inc
adc
jmp
sub
push
sub
adc
or
jne
dec
xchg
mov
adc
rcrl
inc
push
out
adc
mov
dec
out
xor
int3
pop
fistpl
out
dec
pop
xchg
scas
cwtl
fnstenv
clc
cmp
andb
ret
rcl
int3
mov
int3
nop
jns
adc
pop
push
call
pop
das
mov
clc
add
adc
fsubrs
or
aad
imul
movb
pop
dec
out
hlt
int
roll
into
dec
push
clc
jle
notb
stos
dec
test
pop
push
pop
pop
adc
adcb
sbb
sbb
fcomip
or
adc
xor
in
push
movsl
iret
push
mov
inc
cmp
push
inc
out
sub
xchg
lret
jno
insb
or
out
sub
dec
pusha
loope
mov
aaa
mov
movb
mov
lea
ja
xlat
ret
cld
xorl
mov
fistpll
pushl
jcxz
mov
fsubp
xor
jb
in
test
ds
test
test
xor
flds
dec
pop
mov
arpl
pop
push
mov
sbbl
pop
lds
and
adc
out
inc
inc
lock
movsl
leave
add
inc
or
jge,pt
jg
je
or
js
mov
push
in
arpl
dec
stc
in
aas
jg
xchg
adc
je
xor
sub
fxtract
jno
and
and
fwait
mov
nop
sahf
pop
icebp
jbe
add
push
cmpsl
and
adc
and
lock
ret
test
ucomiss
cmp
jb
adc
fiadds
call
dec
insl
addr16
sub
in
cmp
mov
mov
arpl
and
lods
xchg
inc
pop
mov
inc
xchg
dec
push
int3
mov
pop
lahf
mov
rorl
xchg
dec
ds
stos
mov
mov
mov
push
pop
dec
inc
pop
and
pop
gs
adc
mov
xlat
stc
nopl
pop
jmp
dec
popa
cld
or
pop
movsl
cmpsb
in
outsl
jnp
xchg
cld
inc
dec
push
pop
outsl
lahf
in
repz
sbb
outsl
cmc
sbb
data16
clc
pop
andl
test
or
cwtl
xor
sub
sbbl
and
mov
jecxz
pop
sub
push
testb
jns
add
test
pop
pop
jnp
arpl
test
lock
push
fnsave
call
mov
pop
ds
xor
adc
mov
xchg
cli
xchg
xchg
fmull
jp
cmp
rorb
rolb
sub
addr16
movl
inc
inc
movsl
punpckhdq
sahf
mov
xor
lret
es
rorl
xor
jne
pop
add
xorl
jmp
insb
add
pop
mov
mov
in
imull
mov
jbe
add
mov
in
aas
dec
jg
out
lea
pop
ja
daa
mov
jns
or
push
mov
icebp
add
xor
outsb
es
ret
ss
pop
lods
dec
cs
xor
xor
fwait
inc
lahf
xchg
mov
add
mov
push
pop
push
test
ds
jle
push
mov
jno
movl
or
jg
mov
and
push
xchg
xchg
dec
add
jg
xor
cs
out
mov
adc
or
adc
push
cmp
or
mov
leave
adc
loopne
sub
fxam
fimull
out
dec
push
push
dec
sbb
into
or
movq
adc
mov
popa
js
jbe
or
or
lea
jge
leave
and
pop
dec
cmp
add
nop
mov
out
int
mov
adc
dec
cmp
xor
in
lret
das
movsb
arpl
pop
pop
divl
out
cwtl
addr16
dec
adc
xor
into
mov
sbb
pop
pop
sub
repnz
fists
testl
cmp
pop
sub
pop
pop
sub
enter
pop
fwait
dec
push
push
mov
inc
out
push
pop
in
rolb
mov
or
insb
ljmp
push
sub
adc
loop
sub
add
lret
lea
fmul
das
pushf
pop
incl
inc
out
call
ss
add
out
inc
filds
mov
jmp
adc
push
mov
jecxz
pop
data16
outsb
scas
add
jmp
lods
loope
mov
dec
inc
push
cwtl
out
psubsb
sahf
xchg
xchg
dec
ret
fildl
es
inc
mov
dec
pop
repz
sub
xlat
arpl
jb
in
xor
stos
add
or
lock
call
shrb
mov
xor
mov
mov
es
jecxz
or
ret
add
sbb
jg
push
xchg
pop
xchg
dec
out
rsqrtps
push
cmc
mov
cmc
mov
lea
and
or
loope
test
mov
daa
and
sti
add
imul
xchg
aas
shlb
xchg
outsb
sbb
and
pop
inc
mov
push
jmp
mov
pop
jbe
pop
mov
insb
std
sbb
addr16
jmp
lahf
dec
pop
movl
insb
dec
push
mov
cmp
pop
sub
into
inc
push
stos
outsl
fcompl
mov
sub
popa
dec
push
pop
movsl
popa
pop
push
xchg
dec
inc
sub
mov
adc
xor
push
xchg
jg
or
imul
add
iret
call
cmp
sub
xchg
int3
push
xchg
jg
js
lock
jg
pop
add
cli
mov
pop
or
pop
loop
sub
adc
dec
inc
mov
xchg
add
pop
add
ljmp
mov
adc
xor
loope
inc
pop
sahf
clc
loopne
pop
dec
mov
push
repnz
add
jg
aas
and
mov
mov
mov
xchg
mov
push
mov
add
adc
pop
or
lcall
push
sti
mov
inc
add
xor
in
push
pop
xlat
stos
sub
imul
hlt
lret
scas
je
ja
xor
testb
inc
mov
daa
dec
js
mov
mov
pop
cmpsl
test
mov
mov
jns
sahf
mov
pop
or
cld
div
scas
mov
arpl
pop
cmpb
aad
repz
push
mov
push
cmc
stos
and
mov
fdiv
jecxz
xor
cs
mov
or
pop
and
pop
fwait
les
dec
adc
sub
pop
cli
jg
sub
cmp
jmp
and
push
mov
out
jmp
push
xchg
add
jb
xor
nop
xlat
and
test
test
mov
out
mov
lock
pop
mov
ss
pop
ja
mov
lods
movl
sti
test
add
aas
cmpsl
test
test
andb
sti
cld
ljmp
mov
sbb
pop
test
mov
pop
push
mov
in
aad
dec
lods
popl
pop
or
mov
xor
scas
xlat
test
sbb
das
nop
adc
rsm
notb
mov
cmp
stc
mov
fidivs
and
push
sti
push
in
mov
cmp
mov
and
pop
jg
fs
std
ds
xchg
psubd
ja
rorb
add
push
out
add
das
aam
sbb
aas
int3
xchg
mov
daa
dec
icebp
mov
mov
xchg
pop
inc
push
mov
push
add
mov
pop
and
xor
out
cmp
jg
aam
push
dec
addb
outsb
call
insl
es
xchg
addl
add
test
inc
cmp
sub
pop
and
lea
xor
shll
pop
daa
add
xor
adc
subb
aaa
push
push
dec
inc
xor
xlat
dec
test
bound
andl
lock
sub
cmc
imull
add
cmpl
negb
adc
inc
stos
addb
cmp
insl
xchg
cwtl
mov
clc
mov
pop
xchg
mov
pmuludq
and
add
adc
add
aas
sbb
pop
icebp
mov
xor
or
pop
test
mov
xchg
push
mov
pop
mov
fnstcw
sub
add
pop
ret
adcl
mov
xor
xchg
cli
out
popa
aas
mov
lret
shl
das
mov
cli
ret
and
repz
lcall
dec
sti
add
xchg
xchg
sbb
icebp
jbe
stc
in
lds
pop
pop
cmp
out
sbb
leave
lahf
inc
aaa
or
mov
mov
rsqrtps
das
xor
lds
and
jno
outsl
jae
mov
arpl
xchg
jae
outsl
das
adc
and
cmpsl
loopne
mov
xchg
clc
stos
jecxz
iret
add
mov
sti
push
shrl
ja
xor
lret
cmp
addb
pop
in
xor
fnsave
push
int3
mov
aad
lret
outsl
cs
sti
add
and
add
mov
inc
aaa
or
cmp
push
mov
sub
or
xchg
mov
adc
ja
loope
and
in
xchg
mov
pop
push
jno
es
jg
lret
add
mov
fs
lock
inc
cmp
mov
inc
xchg
out
mov
xchg
mov
sti
xor
push
push
or
mov
jg
mov
scas
xlat
xchg
out
adc
into
xchg
or
hlt
jns
das
jae
nop
pop
outsb
cli
cmp
pop
jbe
inc
subl
cmc
aas
mov
filds
and
sti
pushf
mov
adc
mov
cld
push
nop
xchg
pop
or
lcall
mov
cli
test
xchg
mulb
sub
out
arpl
gs
out
fs
fwait
mov
adc
xchg
push
pop
bound
cltd
fildll
ret
notb
lret
dec
pop
xlat
add
hlt
pop
xchg
adc
mov
shrl
add
xchg
xlat
add
xchg
cmp
adc
inc
add
je
add
icebp
mov
in
std
inc
popa
sub
stc
xchg
jmp
or
lock
lds
jmp
shr
mov
mull
das
lahf
add
lcall
fwait
pop
and
mov
cmc
push
dec
call
in
push
std
cld
mov
dec
aam
psubb
ljmp
not
xchg
push
adc
mov
pop
aas
lcall
arpl
loop
and
aad
adc
imul
fistl
clc
repz
xchg
fwait
inc
mov
push
insb
and
jmp
add
push
icebp
xor
pop
cmp
mov
les
xor
sbb
cld
shr
push
iret
mov
mov
xchg
jnp
cld
std
aaa
aaa
and
push
cmp
sbb
iret
das
adcl
mov
add
jp
jnp
daa
mov
mov
pop
inc
mulb
ljmp
test
jge
std
and
test
outsl
rep
movl
mov
mov
sub
fistps
and
loop
test
inc
call
in
sub
out
sti
sbb
divl
aaa
cmp
sbb
pop
jp
or
xor
sbb
xchg
mov
stos
sub
clc
lahf
mov
mov
mov
pop
mov
ja
adc
movsl
jg
dec
test
leave
cmpsl
and
sti
cltd
mov
mov
xadd
adc
dec
mov
inc
sahf
push
loope
cmc
push
out
and
or
insl
or
cs
in
into
aas
das
sbb
adcl
dec
mov
jg
lahf
sahf
dec
lea
jg
add
std
sub
nop
sub
rcrb
push
notb
int
adc
pop
and
sti
pop
in
and
xchg
jns
repnz
or
dec
push
mov
dec
lock
loop
jg
add
add
sti
notl
ja
das
push
repz
jecxz
jne
out
cmp
sbbl
add
pushf
and
mov
inc
ja
cmp
lea
inc
movsl
dec
adcb
xchg
andb
out
add
and
aaa
std
xchg
adc
add
notb
xchg
movl
jecxz
add
pop
imul
sub
jbe
xchg
test
xchg
pop
xor
stos
lret
inc
bound
aas
pop
jno
cmc
push
pop
cmp
stos
sbb
icebp
mov
inc
push
and
xlat
scas
xlat
or
imul
lret
jae
scas
rcr
out
pop
in
sarb
popa
mov
dec
addr16
sbb
mov
orl
lea
lcall
push
mov
sti
pop
lcall
cmp
test
nop
iret
xchg
mov
sarl
jo
popa
inc
mov
pop
adc
stc
imulb
into
mov
jnp
cmc
dec
sub
sub
pop
or
cmp
das
dec
dec
xchg
subb
adc
mov
cld
test
daa
mov
adc
sti
ja
repz
and
dec
push
adc
pop
cmp
out
xchg
sbb
filds
lret
testl
inc
aas
xchg
jo
icebp
icebp
nop
xchg
roll
dec
xchg
or
in
les
push
test
dec
add
and
notb
push
in
loopne
adc
mov
inc
add
mull
and
adc
or
mov
inc
xchg
aaa
jecxz
mov
mov
lahf
pop
xchg
lds
or
lcall
or
iret
add
repnz
fbld
ss
jle
adc
lahf
push
pop
mov
xchg
sti
dec
and
dec
and
sub
inc
ja
repnz
dec
jecxz
jmp
or
jnp
pminub
push
inc
xor
mov
icebp
fwait
lret
addr16
mov
or
push
cli
fcoms
jmp
sbb
pop
sbb
sub
dec
sbb
icebp
lea
mov
xchg
xchg
std
ret
imul
mov
inc
and
and
xchg
mov
insb
jnp
xchg
xchg
inc
stos
std
fists
pop
or
std
push
push
fwait
aaa
pop
sbb
inc
pop
addb
out
adcb
lock
pop
call
rcll
clc
adc
mov
rcrb
fwait
push
fistpll
or
mov
mov
daa
sahf
jg
and
cmpsl
sub
icebp
mov
cwtl
xchg
test
outsl
out
mov
repz
and
xor
add
sbb
addr16
mov
test
ja
lret
mov
ret
out
inc
mov
pop
jns
or
decb
dec
push
mov
push
xlat
mov
add
lock
mov
cmp
adcl
inc
bound
cld
inc
icebp
adc
jbe
je
pusha
scas
lods
mov
das
pusha
out
in
loopne
das
mov
repz
out
jg
add
push
or
cmc
roll
xor
insl
or
cli
mov
fs
loopne
das
pop
cs
pop
outsb
scas
sub
pop
cmpsl
out
or
popf
filds
add
jns
dec
mov
push
and
call
jbe
testb
pop
add
daa
lock
xor
push
aad
sub
and
xor
push
test
imul
xor
or
sti
aas
lcall
and
addr16
neg
mov
add
addl
lahf
mov
push
and
dec
cltd
xchg
mov
icebp
scas
jmp
xchg
addl
popf
push
adc
mov
ficompl
dec
pop
add
pop
mov
pop
inc
or
xchg
addr16
or
dec
mov
jnp
std
inc
mov
arpl
mov
cmp
sti
movaps
setae
adc
and
push
xlat
or
aaa
and
cld
sub
in
jecxz
out
sti
cli
mov
adc
stc
mov
add
inc
lcall
daa
scas
cmp
xchg
dec
xchg
rorl
scas
lret
jecxz
imul
xlat
add
mov
and
and
inc
cltd
xchg
icebp
mull
shrd
or
out
lock
addr16
jns
enter
test
gs
jbe
outsb
mov
stos
imul
xchg
add
xchg
and
mov
ret
jbe
mov
testw
push
push
das
out
std
lock
sti
into
pushf
inc
imul
out
or
mov
in
stc
mov
xchg
xlat
pop
inc
js
div
jecxz
out
pop
mov
shll
push
add
cli
shr
ja
das
pop
jg
push
out
repz
pop
mov
testl
or
imul
mov
lock
mov
hlt
inc
jecxz
jg
idivl
ud0
scas
xor
int3
scas
in
stc
loop
mov
iret
inc
mov
repz
mov
pop
adc
cwtl
es
mov
scas
and
hlt
lahf
dec
filds
sub
dec
scas
lds
dec
movsl
in
adc
daa
loopne
xchg
lret
pop
push
mov
cs
rcr
sub
das
jg
mov
sub
sub
add
or
imull
orb
cmc
adc
pop
pop
push
lock
mov
test
aaa
jae
push
mov
push
mull
pop
mov
out
xchg
fwait
mov
cmp
outsl
sub
repz
ja
loop
int
adc
sbbb
out
xchg
sub
or
jmp
push
hlt
lret
mov
daa
dec
ds
and
pop
sbb
and
into
mov
lock
dec
mov
out
sti
fbstp
fs
pop
xchg
mov
adc
jb
rcll
adc
arpl
out
adc
dec
daa
jno
adc
imul
jne
add
in
std
movsb
jecxz
jnp
push
ffreep
hlt
lods
dec
mov
pop
daa
add
mov
ja
push
mov
xchg
sbb
xchg
in
or
ret
mov
push
cs
out
enter
sub
jl
mov
mov
imul
jg
cmpsl
sub
or
hlt
add
into
es
lds
xchg
and
and
out
clc
out
cmpsl
mov
xchg
scas
rorb
call
mov
jae
lahf
and
fildl
inc
lret
push
xchg
outsl
fcomi
scas
xchg
xor
mov
add
fdivr
movsl
mov
jae
les
bound
sub
daa
pop
scas
pop
fisttps
mov
jnp
stc
fbld
imul
movsl
dec
test
inc
adc
scas
xchg
lret
sub
jmp
out
inc
sub
das
add
shl
jge
mov
sub
scas
xchg
mov
pop
rorl
jne
lock
test
xor
stc
mov
xchg
push
or
es
daa
int
sub
mov
jbe,pt
dec
loop
pop
or
out
push
xlat
aad
and
xchg
mov
mov
lret
cmc
mov
pop
bound
push
pop
mov
jg
clc
lahf
cli
sbb
push
ret
push
repnz
ja
mov
in
inc
add
test
fidivrl
hlt
dec
adcl
jecxz
ror
dec
xorb
lea
inc
add
scas
lock
pop
arpl
jns
sub
repnz
mov
test
das
or
fs
repnz
mov
ljmp
cli
sub
mov
fidivrl
sahf
pop
pop
pusha
cltd
cmp
hlt
leave
aaa
sbb
daa
loope
pusha
cmpsl
test
ds
pushf
icebp
int3
mov
mov
inc
sub
sub
stos
insb
pop
push
andl
lock
mov
pop
mov
or
repz
pop
mov
mov
add
xchg
not
mov
andb
ja
mov
mov
mov
adcb
and
and
adc
jns
cli
insb
outsl
add
decl
stos
sub
stc
mov
push
daa
sahf
or
arpl
mov
out
pushl
lcall
clc
xor
xchg
sbb
adc
pusha
arpl
sub
and
push
xchg
xor
inc
sbb
adcb
std
in
pop
xchg
fidivs
adc
repz
mov
cmp
das
dec
sbb
adcb
adc
leave
sub
rcrl
jecxz
push
mov
lret
iret
jl
mov
inc
ret
clc
stc
xchg
scas
mov
dec
repnz
lods
inc
ds
jge
repz
and
notl
ljmp
hlt
cmp
xchg
out
push
add
repnz
and
add
leave
sar
inc
out
loopne
mov
movl
push
sub
scas
ja
mov
pop
pushf
xchg
jp
add
repz
xor
add
cmc
ds
add
mov
call
imul
jbe
bnd
push
aas
and
adc
insl
mov
mov
movsb
dec
adc
sbb
outsl
scas
or
repz
out
stos
add
int
sti
pop
mov
or
add
push
cmp
xchg
shll
notl
sub
mov
mov
mov
cmp
pop
xchg
adc
mov
out
mov
mov
mov
push
dec
mov
xchg
clc
es
push
nop
push
movd
mov
fistps
in
mov
mov
pop
mov
mov
sbb
decl
das
repnz
xchg
xchg
xchg
adc
fwait
sbb
into
jg
push
cli
test
cmpsl
stc
sub
nop
lret
ret
xor
jg
not
sbb
xchg
pop
push
es
call
jmp
shlb
jg
mov
xchg
das
adc
sub
cmc
das
ja
mov
inc
emms
loop
adc
sbb
inc
cmc
fsubrp
pop
cmpl
pop
negl
in
inc
or
ja
push
adcb
adc
jne
add
push
clc
iret
xorb
ja
pop
cli
add
sub
and
mov
jg
jns
sub
mov
popl
testl
mov
inc
sar
add
mov
aad
or
dec
pop
add
xchg
push
addr16
insl
sbbl
lret
or
push
or
inc
and
insl
icebp
mov
out
pop
jg
cmpsb
pop
push
push
mov
ljmp
cwtl
test
lock
lahf
mov
cmp
movsb
cmp
ljmp
dec
mov
or
mov
sub
xchg
inc
cmpsl
cmp
je
dec
inc
lret
test
mov
xor
in
jp
bound
push
ljmp
add
mov
sbb
out
call
or
mov
stos
dec
negl
call
cmpsl
push
jp
add
dec
popa
fs
lret
push
mov
js
dec
es
dec
cmp
sti
scas
mov
jne
cli
mull
or
push
mov
sub
jns
or
and
xchg
outsb
pop
push
pop
loop
cmp
fstp
in
inc
adc
dec
call
xchg
jle
cmp
push
decl
xchg
inc
mov
pop
loop
sub
jae
adc
jge
loopne
jp
adc
cmc
imul
pushf
and
ss
or
or
stos
std
adc
and
xchg
inc
inc
test
pop
xor
fmull
shll
into
xchg
cmp
pop
mov
clc
lahf
lods
mov
popa
push
add
nop
lock
mov
jmp
addr16
xlat
or
aas
jo
in
mov
bound
push
fistpll
push
push
icebp
ret
aas
push
mov
mov
les
and
nop
lret
mov
add
or
cs
stos
or
jmp
jne
or
decl
mov
cmp
push
dec
and
xchg
xor
outsl
sbb
fcos
or
xor
jnp
in
jo
jl
ds
lcall
ret
outsb
sti
mov
push
aad
adc
inc
dec
dec
ds
xchg
imul
std
sahf
cmp
dec
sub
test
add
cmp
jmp
orb
ret
icebp
pop
ja
jns
push
inc
mov
sub
pop
xor
aad
popf
sub
aaa
es
adc
dec
ficomps
and
cmp
into
icebp
nop
iret
fdivr
or
cld
pop
insl
les
bound
push
fnstsw
jmp
push
mov
mov
push
pusha
daa
jbe
sbb
jg
xchg
and
xchg
mov
jne
aas
mov
sbb
add
push
sti
jg
adc
test
sahf
cmp
popf
xor
les
incl
xlat
scas
mov
lods
jo
leave
jg
pop
mul
stc
js
call
cmpsb
cmp
fidivl
adc
gs
arpl
out
or
xchg
ret
outsb
add
es
shrb
hlt
lcall
inc
int
lods
xchg
or
mov
scas
lods
xor
jns
stc
or
out
fdivr
aad
int
shrb
mov
adcl
in
ljmp
icebp
sub
sub
decl
fildll
ja
mov
sar
mov
cld
scas
std
mov
sub
push
fcomip
int3
add
xlat
ret
sbb
cwtl
xchg
mov
xchg
repnz
idivb
push
cmp
dec
add
int3
inc
icebp
and
decl
stc
add
sub
jno
jns
fwait
in
push
jg
pushf
mov
pop
jae
inc
test
pop
xchg
decl
int3
ud0
leave
fdiv
jae
adc
mov
ds
call
aas
stos
leave
test
loopne
int
pop
jge
adc
jb
or
dec
mov
movsb
xorb
sbb
repz
and
xchg
cmpsb
insb
sub
push
enter
dec
push
sub
and
pop
mov
mov
lcall
bound
mov
push
lret
sti
and
out
cltd
dec
mov
add
and
inc
insb
inc
xor
lds
loope
ret
add
shll
mov
scas
or
xlat
dec
push
dec
mov
arpl
and
scas
add
rolb
stos
mov
clc
pusha
into
xchg
cmp
jmp
adc
xchg
faddl
les
mov
push
mov
jecxz
subl
aaa
cwtl
mov
jne
popa
push
incb
dec
cmp
test
jmp
cs
loopne
aam
lods
sub
xlat
pop
clc
push
rcl
bound
sbb
gs
add
jg
test
insl
mov
call
or
enter
or
adc
xchg
repnz
add
bound
popa
lcall
divl
stc
jge
dec
ljmp
sbb
xor
bnd
mov
in
testl
push
out
cmpb
jmp
loopne
enter
and
mov
mov
add
mov
ret
cmc
mov
inc
pushf
mov
and
adcl
pop
and
lds
xchg
pop
dec
adcb
inc
adc
fidivs
imul
out
in
mov
mov
mov
mov
sbb
and
fsts
cmpl
hlt
je
ljmp
enter
push
jg
repnz
lahf
inc
jbe
decl
imul
sbb
movss
push
lcall
xor
push
jmp
lret
inc
incb
pop
fnstenv
jmp
pushl
xchg
or
movsb
pop
inc
push
ret
cmp
js
repz
stc
xchg
cs
icebp
call
bound
mov
push
sbb
dec
pop
or
dec
add
lock
or
rcrl
pop
add
jmp
aas
shlb
call
mov
mov
cmp
mov
insb
adc
xor
mov
int3
or
out
test
push
imul
jge
sarl
add
mov
pop
inc
push
inc
dec
sub
push
call
pop
push
adc
imul
sub
mov
loopne
mov
push
sbb
and
pop
pop
adc
cmp
daa
in
lret
cmp
repz
sbb
test
sbbl
xchg
outsl
iret
pushl
adc
enter
ljmp
fcmovne
sbb
mov
cltd
ds
inc
push
ljmp
repz
icebp
scas
repnz
fstpl
mull
or
mov
mov
insl
jle
jb
movsl
jg
cwtl
ret
call
popf
xlat
hlt
mov
ss
or
rolb
arpl
lret
xlat
adc
cmp
inc
jp
inc
pop
adc
scas
sub
and
aas
movsl
hlt
add
sub
xchg
sub
mov
pop
cmp
in
or
les
or
sar
cmp
mov
outsb
xchg
je
outsl
sbb
mov
add
ss
in
adc
mov
pop
shll
fisttps
add
sti
adc
inc
cli
jecxz
jb
loopew
mov
aas
in
lcall
or
jmp
dec
jbe
adc
test
ret
lods
jg
dec
jae
repnz
jp
out
icebp
in
mov
inc
add
ljmp
jle
and
aam
or
sub
pusha
push
ljmp
fwait
cwtl
js
adc
jnp
xchg
pop
or
xchg
pop
jl
push
je
pop
je
mov
cmp
pop
mov
xor
enter
movaps
add
out
lret
mov
fsubrs
cs
push
mov
pop
hlt
das
mov
mov
imul
into
popa
jle
testb
sbb
jle
pop
mov
dec
xor
daa
imul
js
mov
ret
les
or
negl
add
into
sbb
aam
xor
je
addb
pop
push
pop
mov
roll
pushf
fdivrs
or
pop
rcl
inc
cltd
add
nop
cmp
stos
xor
clc
jo
add
lahf
xlat
ljmp
sbb
sbb
add
cli
and
adc
pop
addr16
adc
cmpsb
add
adc
lret
rcll
push
xor
je
daa
push
jl
add
mov
and
pop
call
ficoml
addr16
fwait
loope
pop
pop
xchg
sbb
test
imul
xchg
pop
push
xchg
adc
xchg
stos
adc
out
shl
les
stos
mov
fwait
call
iret
je
das
enter
rcrl
inc
ret
out
ljmp
add
sub
stc
push
cli
enter
push
add
mov
shrl
xchg
mov
mov
sbb
jecxz
inc
cmc
jne
xor
sbb
rcl
out
jg
aaa
dec
in
pushf
imul
lock
out
psubsb
sahf
jecxz
dec
ret
out
jmp
in
fcmovne
loop
adc
call
push
adc
cltd
add
pop
or
cs
mov
ds
enter
add
xchg
aas
mov
std
fcomps
pushf
in
mov
mov
add
negb
addb
fiaddl
fdivl
pop
or
adc
xor
in
sbb
imull
aas
out
lahf
lahf
scas
bound
push
stc
mov
xchg
cmp
xor
or
leave
fidivs
out
push
pop
sti
loope
add
xchg
sbb
pop
jl
mov
mov
pop
mov
test
sub
leave
enter
and
fwait
js
test
das
out
sbb
popf
iret
cmp
jmp
xor
sti
adc
test
lret
inc
out
mov
sub
ret
fwait
std
or
aaa
xchg
pop
add
sub
out
mov
lahf
push
popa
mov
adcb
push
in
pop
push
sahf
push
stc
or
call
xchg
push
inc
gs
pusha
sbb
sub
inc
adc
call
jg
int3
push
clc
pop
leave
shrb
fisttps
fwait
and
aam
pushl
mov
ret
sub
insl
inc
push
xor
js
and
enter
jecxz
xchg
xor
sub
fistps
arpl
dec
stc
jno
mov
shl
xor
es
ljmp
hlt
jne
insb
or
push
fwait
sbb
xchg
leave
push
std
xor
or
mov
inc
nop
int3
rolb
fnstcw
sbb
jmp
ss
jl
sti
mov
xlat
xorl
pusha
les
and
pop
jge
rolb
adc
aas
cmp
daa
pusha
into
outsl
stc
add
mov
idiv
iret
div
sarb
pop
jg
out
pop
stos
add
aaa
clc
hlt
cld
pop
lret
pushf
addr16
or
call
test
lods
fsubrl
adc
cmpsb
aas
adc
movsl
add
sbb
adc
jnp
lods
sub
mov
rolb
push
dec
xchg
and
inc
imul
lahf
int3
xor
mov
ficoms
sbb
xor
cmp
push
xchg
adc
idivb
roll
pop
inc
call
pop
ret
dec
adc
sub
jb
test
or
mov
sahf
xchg
stos
inc
xor
push
dec
cmpsb
cmp
cmc
jbe
inc
mov
push
pop
call
fwait
lcall
ljmp
xchg
addr16
push
jcxz
jl
call
insl
inc
mov
outsb
jge
and
insl
push
clc
mov
add
cmp
sub
call
inc
sti
lret
or
sarl
or
cmp
xor
sahf
dec
xchg
out
sahf
pop
mov
cmp
and
mov
jnp
sub
addb
jmp
popa
mov
sbb
cltd
rolb
mov
hlt
cmp
test
jmp
jg
mov
dec
sub
jno
add
mov
mov
sbb
popa
fistl
int3
lcall
mov
pop
cmp
shll
dec
callw
lcall
push
mov
pusha
loope
sub
xor
add
mov
pop
pop
fdivl
dec
rorl
adc
clc
lods
mov
add
or
std
pop
out
mov
cmc
sbb
push
push
jo
pop
call
arpl
and
daa
pop
push
dec
or
stos
mov
add
dec
iret
cmp
das
or
sbb
and
call
dec
clc
xchg
clc
movsb
clc
enter
in
jmp
div
add
jno
int
pop
into
pop
push
bound
mov
into
mov
loop
adc
mov
loope
lock
out
cmp
or
cmp
cmp
cmp
jo
jbe
mov
xor
dec
push
lea
jne
orb
into
xchg
into
int3
into
out
into
cmc
into
cld
ret
pop
xchg
daa
mov
cmp
repnz
lea
ss
inc
out
jmp
out
adc
aaa
inc
cmp
push
mov
mov
int3
decb
bound
and
xor
test
rcl
loop
repnz
testb
adc
jns
ror
cmp
jecxz
cmp
cmp
jne
jecxz
and
cmc
sarl
aaa
pop
or
cmp
push
dec
test
mov
into
loope
lock
sub
dec
ret
xchg
loop
repnz
out
or
pop
jecxz
out
jmp
out
jge
test
sti
sahf
sti
stos
sti
mov
mov
sti
loopne
stc
lock
clc
testl
imul
cmpb
fstpl
and
imul
test
pushf
lahf
sbb
popf
out
sbb
mov
nop
test
mov
out
or
jno
jae
jne
ja
jns
jnp
jge
jge
jge
jge
jge
jge
jge
jge
jge
sbb
cmp
lcall
rorb
repnz
out
and
sub
inc
out
jmp
out
jg
popf
imull
sti
jmp
cmp
adc
cmp
cmp
mov
ds
cli
or
pop
lea
into
daa
push
sub
mov
es
and
out
out
loopne
cmp
sub
das
loopne
call
lods
clc
mov
mov
mov
clc
xbegin
sbb
jno
jae
jne
ja
jns
jnp
loopne
adc
cmp
and
xor
inc
mov
xchg
out
jmp
cld
popf
inc
sbb
bound
xchg
sahf
cwtl
sahf
popf
sahf
mov
sahf
rcrl
jmp
pop
xchg
dec
cmpsb
rorl
or
and
cmp
pop
out
out
out
loopne
cmp
cmp
jae
jne
loopne
call
loop
call
fistpl
shlb
cmp
inc
call
div
adc
jne
sbb
je
subl
out
mov
clc
out
cmp
or
adc
popf
push
sbb
push
xchg
jecxz
and
enter
xlat
lods
xor
mov
rorl
aas
rcll
cld
add
aaa
sbb
cmp
jb
popf
or
jbe
mov
cmp
cmpsb
lahf
xchg
cmpsb
push
lods
cmp
push
inc
pop
data16
xchg
out
out
out
out
out
out
out
out
out
out
loopne
cmp
mov
mov
ret
out
jmp
out
repnz
adc
data16
jnp
jg
sbbl
mov
out
jmp
pop
xchg
jno
stos
dec
mov
mov
or
cmp
lea
add
mov
xor
pop
or
inc
lea
sti
cmp
and
dec
jge
into
xlat
lock
or
jae
jne
ja
dec
lret
icebp
fldt
jecxz
sahf
repz
sti
xchg
add
out
adc
popf
and
cmp
arpl
jae
add
xor
mov
cmp
cmpsl
sbb
aaa
xor
pushf
pop
lds
jae
ja
jnp
jg
roll
into
xchg
into
xchg
into
fwait
into
lahf
into
mov
into
scas
lret
mov
out
out
out
out
out
out
out
out
out
out
out
out
out
in
xchg
add
testb
dec
dec
pop
lea
into
femms
pop
dec
and
xor
aaa
sub
adc
sahf
rcll
iret
ss
add
out
filds
xchg
and
xor
or
fstpt
in
adc
cmp
adc
add
das
dec
xor
xchg
cmc
lahf
pop
xor
xor
addb
cmp
cmp
jno
pop
pop
setne
cmc
cmp
or
das
sbb
pop
cmp
mov
pop
cmp
ds
popf
adc
ficomps
cmp
sub
ret
pusha
dec
jbe,pt
hlt
cwtl
jnp
ja
movlps
sub
mov
cmp
cwtl
cmp
or
inc
xor
xor
fs
jmp
mov
cmp
imul
iret
and
dec
inc
sub
dec
jmp
cmp
arpl
inc
cmp
jle
movsb
jmp
out
out
outsl
sub
cmpsl
or
mov
pop
adcb
ss
out
xor
test
aas
daa
inc
aaa
xor
je
mov
push
cmp
test
pop
cmp
sub
jg
xchg
jns
jnp
pop
out
xor
pop
dec
mov
add
push
cmc
push
xor
push
pushf
movw
pusha
mov
neg
clc
mov
seta
mov
or
test
mov
adc
sub
lea
not
lods
mov
sets
dec
inc
dec
ror
neg
not
bt
sbb
ror
test
neg
not
pushf
inc
setae
push
jmp
ja
jecxz
inc
ret
adc
es
call
in
sub
or
xchg
xlat
rclb
sbb
mov
cmp
jae
cld
cli
mov
xlat
push
sbb
pop
cmp
push
in
out
inc
or
jle
push
rclb
inc
pop
ljmp
sbb
aad
shr
push
add
push
call
inc
add
inc
jb
gs
imul
mov
pushf
clc
test
pushf
call
push
call
mov
add
cmpl
pusha
pusha
jmp
jmp
and
dec
daa
or
pop
repz
in
sub
push
cwtl
scas
subl
test
add
jns
pop
mov
call
lea
ja
or
sub
test
and
pusha
sub
add
rol
test
mov
shl
mov
stc
clc
jmp
xchg
dec
sub
xor
outsb
and
inc
jp
pop
jnp
inc
les
fimuls
pushf
cwtl
fs
lcall
sbb
adc
add
pop
aad
je
sub
and
ficoml
jmp
cmp
jb
ljmp
int
inc
sbb
hlt
jne
ret
pop
stc
aad
repnz
jae
add
pop
adc
je
ss
cmp
inc
les
fwait
sbb
gs
jae
repz
cmp
pop
rolb
sti
cmpsl
lea
ja
call
pushf
lea
je
call
inc
xlat
mov
or
and
test
sub
adc
pop
ss
mov
dec
inc
dec
push
pop
out
cmp
lahf
pop
jne
lock
adcl
push
stc
jge
cld
mov
std
lret
cwtl
scas
add
cmp
mov
jns
push
call
lret
cmpsb
push
add
mov
mov
and
fwait
into
jmp
decl
pop
mov
adc
inc
sbb
mov
xchg
pop
xlat
pop
test
mov
out
dec
sbb
or
cmp
mov
pop
xorl
jp
cli
imul
sub
dec
push
pop
jle
jae
jge
jns
rorl
and
cmpsl
stc
stc
sub
stc
push
pusha
test
pushl
popl
stc
pushf
movb
cmp
pushf
call
pushf
jmp
iret
adc
sub
fnstcw
lea
leave
sarb
mov
mov
xor
jge
ret
loop
ss
cmc
fidivrl
fs
pop
push
jb
popf
shl
add
jbe
arpl
cmc
lret
xchg
push
push
ja
ja
dec
adc
push
cli
lds
cmp
push
mov
in
add
mov
mov
shl
pushl
xchg
bt
mov
not
mov
stc
movzbw
pushf
shr
mov
push
bt
test
clc
cmpsb
call
jae
inc
push
mov
jmp
jmp
jns
jne
cmp
xor
mov
lock
stos
fcomip
pop
leave
inc
cmp
dec
jne
into
or
pop
mov
jle
xor
in
and
adc
adc
jne
bt
cmp
jmp
inc
neg
xchg
jl
shl
mov
rol
push
mov
cmc
push
mov
rol
clc
mov
stc
movb
call
push
call
jle
fstp
neg
cmc
stc
mov
call
movb
pusha
lea
je
jmp
dec
scas
rolb
xchg
leave
jne
mov
dec
mov
pop
rolb
cld
adc
stos
push
rclb
jne
aad
and
or
jo
pop
dec
jbe
pop
ds
cmp
fsts
std
ret
cmpl
push
xchg
repz
outsb
push
jl
neg
xlat
xchg
jmp
int
lds
add
in
push
lods
push
iret
xchg
and
fnstcw
sahf
add
stos
xchg
cmp
add
push
inc
mov
fdivs
sbb
adc
std
lret
push
cmp
or
jecxz
shl
imul
rcrl
ljmp
and
sti
add
pusha
call
jl
jp
jg
lret
test
adcb
orb
xor
adc
mov
shrb
loope
dec
adc
out
jne
add
or
cmp
sbbl
pusha
dec
dec
jl
imul
mov
xorl
cmc
lods
ja
je
lock
adc
scas
xchg
add
decl
xchg
ret
not
mov
lea
jmp
test
jmp
or
pop
mov
adc
push
lods
mov
cmp
in
jne
mov
pop
inc
pushf
stos
enter
repz
push
call
cmc
and
pop
mov
and
cmc
mov
mov
mov
incl
pusha
bswap
movb
mov
lahf
sete
lea
push
movw
push
movl
movb
mov
pushl
push
push
pushl
ret
push
call
insl
loopne
mov
jae
sbb
call
inc
jg
shr
jmp
call
add
cmc
sub
call
cmc
stc
clc
imul
lea
jo
add
pusha
pusha
lea
jmp
out
jl
push
in
adc
mov
lret
cli
xchg
mov
sti
int
mov
insb
push
dec
xchg
and
sbb
adc
dec
rcll
in
inc
sbb
sub
dec
outsl
movsb
lods
push
adc
inc
push
cli
out
pop
addr16
jo
pop
add
cmp
jbe
negl
mov
loope
pop
lock
xlat
jp
je
aad
lret
mov
adc
xor
movsb
pop
cltd
outsl
add
push
dec
add
push
call
dec
mov
incl
jne
push
fwait
or
jmp
mov
push
add
jge
int3
jmp
addr16
sbb
sub
jne
cmp
xor
insb
jns
in
ret
mov
cmp
int3
stc
or
mov
adc
icebp
outsl
pop
push
cmp
xlat
adc
xchg
stos
inc
clc
xchg
std
dec
in
adc
pop
std
shrb
js
adc
cmp
test
add
lea
je
clc
and
push
movw
lea
jmp
fdivl
repz
jnp
in
sub
push
inc
jae
outsb
es
sbb
push
inc
xchg
pop
add
cmpsl
inc
out
imulb
imul
hlt
dec
fwait
mov
aad
or
loopne
xchg
decb
push
fadds
aam
cmpsl
add
out
in
dec
push
in
sub
push
call
push
in
jns
add
pushf
jmp
xor
loope
pushf
jne
aam
shr
fsubr
cld
adc
or
or
mov
int
sbb
loop
xor
or
push
cmpsb
das
sbb
sbb
xor
jne
hlt
dec
clc
inc
out
and
mov
push
push
push
test
sti
mov
or
jecxz
lcall
fidivs
stos
ds
or
arpl
les
fisttpll
std
mov
xchg
lock
xchg
pusha
clc
pusha
cmp
pushf
jmp
pop
ljmp
addr16
jb
mov
flds
ja
leave
orb
shl
add
xchg
mull
xor
imul
hlt
dec
jg
mov
or
xor
nop
xchg
mov
xchg
mov
add
fisubs
jle
incb
xchg
jne
rcrl
je
fcomps
int3
scas
aam
movsl
into
xchg
pop
mov
int
rclb
jbe
not
sbb
js
lret
loop
cltd
mov
mov
push
decb
push
pop
iret
add
cmc
pop
jp
loope
adc
or
xchg
mov
add
xchg
lret
repnz
adcb
push
pop
push
inc
or
mov
aad
testb
dec
fsubrl
pusha
mov
xchg
cmp
cmpsl
jmp
int
popa
cmpb
add
int3
movsb
mov
shr
int3
and
xchg
and
or
movsb
in
sub
lods
pop
sbb
int
pop
out
mov
mov
fcmovnu
or
cmp
lahf
mov
mov
lock
xor
push
fdivrp
add
or
ds
add
cli
and
clc
lcall
add
pop
pop
sbb
lret
and
or
pop
pop
mov
nop
sbb
call
push
push
sahf
xorb
test
adc
mov
shr
pop
or
jle
mov
pop
push
sbb
test
pushl
cli
mov
xchg
push
call
push
cld
pop
push
add
je
push
add
rcrl
xchg
pop
lods
addr16
jb
stc
stc
push
or
bound
jg
mov
xor
jnp
push
addr16
inc
test
enter
jnp
jnp
dec
or
push
xchg
xchg
push
pop
add
push
pop
push
addr16
lea
pop
iret
adc
insl
sub
pop
neg
btr
mov
cmc
cmp
bt
jmp
cmp
fcoml
addr16
filds
or
mov
or
fistps
cld
jns
jnp
movl
shlb
pop
and
ret
jbe
xor
inc
pop
pop
sub
xchg
push
jns,pn
loope
mov
adc
mov
loopne
xor
scas
movsb
sbb
in
test
testb
adc
lds
xchg
rclb
mov
adc
mov
add
xor
or
outsl
xor
adc
push
jbe
add
movsl
js
add
add
lods
js
add
add
out
cli
add
mov
add
in
je
add
cli
add
mov
add
add
add
add
add
sarl
add
add
adc
add
clc
cmp
jmp
clc
pusha
clc
imul
pusha
add
pushf
pushf
pushl
lea
jmp
mov
pop
clc
mov
clc
test
pushf
jmp
imul
stc
pushf
mov
add
movb
pushl
push
lea
jmp
pushf
inc
inc
pushf
mov
not
mov
lea
jmp
call
jmp
push
call
xchg
mov
add
pusha
jmp
push
stc
pushl
popl
add
pusha
call
push
push
outsl
arpl
jne
and
je
jns
jo
imul
arpl
insb
and
je
bound
insb
outsl
arpl
gs
and
and
popa
insl
imul
and
jb
jb
and
ljmp
adc
jmp
push
call
enter
cmp
pusha
lea
jb
cmp
cmp
pushf
lea
jae
bt
pushf
btr
sbb
mov
shld
mov
bsf
lea
mov
mov
cmc
cmp
sub
cmp
pushf
clc
push
repnz
pusha
call
push
call
mov
sub
pushf
lea
js
call
jmp
cwtl
enter
sarb
push
scas
mov
mov
les
pop
sahf
jmp
orl
into
push
mov
stc
xchg
aam
and
ror
mov
in
clc
cmc
dec
inc
aaa
out
jg
push
fiadds
cmpsb
pop
lea
cmp
imul
outsl
movsl
fists
sbb
in
insl
xchg
inc
xchg
mov
stos
fbld
pop
mov
xor
jmp
push
call
inc
pop
and
xchg
push
call
add
sbb
add
add
cld
dec
add
add
sbb
add
add
add
adc
add
add
lock
mov
add
lock
pusha
adc
add
add
push
adc
add
adc
add
add
pusha
adc
add
adc
add
add
pusha
adc
add
add
xor
add
inc
adc
add
add
pusha
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
add
add
add
add
push
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
lock
cli
lock
or
add
sbb
add
sub
add
cmp
add
inc
icebp
add
pop
icebp
add
fs
add
jl
add
xchg
add
xchg
icebp
add
movsl
icebp
add
scas
icebp
add
ret
icebp
add
fcomi
add
call
icebp
add
add
add
adc
add
inc
popa
outsb
fs
outsb
fs
jb
arpl
inc
outsl
insl
jo
outsb
fs
jb
arpl
dec
dec
inc
inc
insb
gs
jb
jne
push
je
imul
push
gs
jne
push
je
imul
inc
outsl
outsb
imul
add
gs
outsl
outsb
jbe
jb
imul
add
gs
gs
jb
jns
dec
insl
gs
outsb
jne
push
imul
jb
add
gs
jae
popa
jo
add
gs
gs
imul
jb
push
je
insb
add
gs
outsb
jno
imul
push
jb
arpl
jae
gs
dec
insl
gs
imul
jb
add
gs
gs
arpl
insl
gs
gs
arpl
gs
outsl
outsb
je
js
add
gs
gs
outsl
insl
jo
jae
je
outsl
outsb
push
je
imul
push
outsl
inc
jae
imul
gs
outsb
jb
imul
jb
add
je
data16
dec
inc
add
popa
je
jae
outsb
fs
jb
arpl
push
dec
push
outsb
fs
jb
arpl
imul
cs
insb
add
lods
pop
movb
xchg
mov
fisttpl
dec
mov
sahf
sub
push
ds
push
call
sbb
sbb
repz
mov
adc
mov
pop
rcr
jno
vmaxsd
in
arpl
mov
sub
adc
jb
scas
out
bound
scas
inc
xor
scas
stc
lret
adc
testl
outsl
daa
mov
xorl
inc
clc
mov
mov
js
xchg
or
adc
or
negl
aas
sbb
dec
mov
xchg
sub
shlb
sub
rclb
mov
push
jge
push
addr16
icebp
cmp
jns
fbstp
ljmp
pushf
stos
push
push
lea
jmp
push
call
cmp
mov
or
sub
jmp
lea
je
jmp
jmp
pushf
lea
call
pusha
adc
pusha
lea
call
pushf
lea
jbe
push
lea
jb
pusha
movb
pusha
pushl
ret
mov
dec
cwtl
jbe
jno
pop
imul
xchg
outsb
push
clc
sub
movsb
pop
push
mov
pop
cmc
out
aad
fisttpl
or
shlb
mov
adc
jns
mov
loop
sub
mov
jne
cmc
jnp
sub
pop
mov
scas
dec
xchg
loop
xchg
sbb
enter
lret
or
sub
and
repnz
shll
rorb
cwtl
mov
fadds
sub
xor
mov
lahf
pop
insb
std
cwtl
xor
int
popf
enter
inc
and
push
cltd
repnz
repz
and
cli
dec
mov
mov
shrb
fbstp
ss
push
pop
add
aad
jecxz
mov
pop
cli
loop
mov
cld
sub
push
pushl
pop
pushl
das
ret
cld
sbb
adc
nop
fdivrs
or
mov
adc
jg
add
xchg
fwait
or
jmp
push
call
jb
cmp
in
adc
xchg
mov
add
loopne
call
call
movzwl
add
adc
mov
clc
pusha
add
call
push
call
push
mov
shlb
into
or
scas
aad
test
imul
nop
rcr
jae
test
pop
cmpl
outsb
pop
mov
loope
imul
mov
mov
imul
in
stos
push
push
xchg
nop
leave
dec
popf
enter
and
mov
int
hlt
add
cmp
push
fdivs
call
decl
inc
jae
setge
btr
mov
not
mov
shrd
bswap
mov
bts
shl
pushf
mov
bt
jmp
lea
ja
call
cmc
mov
pusha
call
call
fbstp
pop
and
xor
mov
repnz
ja
cli
sbb
js
and
mov
inc
pop
das
out
stos
cmp
jmp
sbb
mov
mov
lret
arpl
fidivrl
pop
cmp
mov
jne
frstor
sub
push
pop
repnz
in
pop
mov
dec
xor
or
xor
bound
lds
sbb
je
inc
ret
push
call
dec
rcl
inc
loop
stos
out
jge
loopne
rcll
jle
and
fdivr
jl
cmp
jbe
ljmp
imul
or
bound
jne
cld
xchg
mov
imul
icebp
mov
ljmp
pusha
mov
and
adc
mov
stc
cmp
xor
lret
in
mov
xchg
inc
jmp
iret
xchg
scas
or
arpl
jmp
fisttpll
sti
shr
mov
out
dec
pushf
xchg
mov
mov
daa
lock
sbb
int
pop
lea
xor
scas
mov
aam
je
adc
test
mov
mov
cmpl
pop
sub
sahf
ja
cli
test
icebp
jp
cmp
adc
xchg
dec
daa
stc
sahf
jecxz
shll
ds
cmpsl
int3
popf
bound
ss
incl
lds
xor
push
outsb
or
push
xchg
adc
out
lods
sarl
push
es
jecxz
cmp
mov
fdiv
pushf
repnz
pusha
pusha
mov
pushl
lea
jne
push
bswap
pushf
setg
movb
bswap
mov
cwtl
pop
movzbl
lea
pushf
call
jmp
rcr
and
sub
dec
shl
shr
pushf
mov
shl
sar
add
inc
add
add
add
mov
neg
mov
pushf
pushf
cmc
bt
shr
bt
jmp
lea
jne
cmp
pusha
pusha
movzwl
bts
mov
call
stos
data16
xchg
inc
cmp
sti
cltd
gs
addr16
roll
movb
sub
test
push
add
lahf
push
mov
pushf
mov
lea
jmp
stc
test
add
jmp
pushl
popl
push
pushf
lea
jmp
push
call
add
rorb
shlb
pushf
cmp
mov
add
jo
push
push
test
movb
lea
je
push
sub
cmp
clc
mov
cmp
jmp
mov
mov
call
pusha
pushl
lea
jne
bswap
movzbw
bswap
pop
jle
movzbl
pushf
mov
pusha
mov
lea
jne
cmc
call
lea
jae
cmp
pushf
cmp
pusha
movb
mov
lea
jae
test
cmp
call
lea
je
call
mov
sub
rcl
pop
bts
add
add
and
mov
cmp
stc
add
stc
push
xor
jmp
sbb
inc
mov
fdivrs
mov
sub
mov
aad
fildl
mov
ficomps
cmpsl
xor
sar
add
push
mov
bound
sbb
sbb
ljmp
mov
cmp
mov
xchg
out
fnstenv
dec
scas
cmpsb
inc
or
rcrl
sbb
add
insl
dec
pushf
pusha
lea
jne
push
pushl
push
lea
jmp
push
call
sub
bt
mov
pusha
jmp
test
push
cmp
add
test
pushf
bt
movb
mov
mov
call
push
jmp
sub
or
dec
cmp
not
movb
neg
pushf
jmp
mov
popa
push
cmp
mov
not
repz
decl
pop
orl
jg
add
xchg
lret
loop
popa
adc
xor
int
or
pop
flds
mov
stc
sbb
xchg
and
mov
or
push
repnz
pop
psllq
mov
xchg
cs
pushl
rep
pop
mov
push
push
push
push
lea
jmp
add
inc
js
je
jb
arpl
jae
xor
add
add
add
cltd
std
add
add
add
in
jnp
add
add
add
add
sub
add
pushaw
add
fdivr
add
add
add
mov
add
add
notb
call
add
push
imul
jb
je
arpl
mov
clc
cmp
cmpb
push
lea
jne
aas
shrd
xor
movzbw
xor
mov
test
xor
dec
ror
add
add
shl
bt
pushf
mov
pushf
clc
test
pushf
pushl
pushf
lea
je
pushf
pushf
pushf
jmp
add
mov
mov
jmp
dec
inc
push
dec
inc
dec
xor
cs
insb
add
cltd
pusha
cmp
mov
mov
mov
or
dec
and
icebp
xchg
fwait
cmp
adc
push
out
cmp
push
int3
shrl
add
mov
dec
inc
fnstcw
add
imul
sub
rorb
cmp
aas
push
mov
adc
movw
lea
jne
push
pusha
pusha
pushfw
popw
dec
jmp
push
call
ljmp
mov
bound
sub
and
jl
fmuls
ret
ljmp
cs
and
mov
cmp
xchg
fcomps
or
dec
lds
mov
sahf
subl
clc
and
lds
adc
lea
pushf
pushl
ret
lea
jne
pusha
jmp
bt
stc
bt
mov
jmp
pushf
lea
jae
shrd
xchg
mov
sub
mov
adc
mov
neg
sub
mov
pushf
clc
call
cmp
inc
jo
cmp
test
jecxz
stos
pop
mov
inc
fstpt
jge
mov
ljmp
stc
out
arpl
push
mov
dec
aaa
mov
enter
insl
clc
push
out
or
jbe
or
mov
movsl
mov
mov
addb
add
insb
xchg
push
pop
pop
mov
push
or
daa
das
pop
mov
push
push
mov
ja
loope
dec
or
ds
jl
sbb
out
push
lahf
or
and
or
clc
scas
insl
sahf
icebp
mov
jmp
pop
pushf
add
push
outsl
jae
dec
gs
popa
addr16
add
add
inc
sbb
and
pusha
rep
pushl
movsbl
jmp
mov
mov
jb
push
mov
not
inc
pusha
setns
setno
movb
mov
jmp
lods
push
xor
push
pop
adc
mov
jge
inc
outsb
mov
xchg
add
sub
sbb
daa
jge
mov
aad
shlb
jns
mov
sbb
rcrb
fstl
mov
push
shll
iret
lret
pop
shl
pop
sub
outsb
pop
loope
icebp
mov
add
add
ss
cmpsl
dec
sub
xchg
pusha
lea
call
pusha
lea
jae
cmp
xor
call
adc
pusha
push
lea
jmp
push
call
sbb
sbb
add
xchg
cmp
adc
addr16
add
mov
add
mov
xor
lahf
mov
sub
dec
cmp
scas
int3
jns
pop
sbb
ficomps
lea
cmp
daa
lds
in
sub
dec
mov
lret
cmp
fs
loop
ret
stos
mov
pop
divl
cs
pushw
repz
mov
out
andb
xchg
nop
enter
inc
insb
push
cltd
ret
shll
mov
aaa
pop
xchg
mov
or
scas
imul
sbb
inc
rol
xorl
push
mov
flds
test
adc
std
mov
shr
adc
imul
lahf
and
rorl
cs
outsb
jecxz
shll
jae
jmp
cs
aam
orl
jne
jb
mov
mov
inc
push
in
add
jmp
lods
mov
loope
fimull
adc
lods
push
out
lock
repz
xchg
mov
push
in
mov
mov
movsl
bound
int3
movsb
lock
scas
mov
cwtd
repnz
sar
lcall
sub
shlb
add
fcmovu
test
ja
xor
lods
or
xor
mov
pop
cld
inc
jle
pop
jg
or
cli
cmp
sarb
loope
jle
dec
lahf
sbb
xor
dec
xor
xchg
pop
push
inc
sbb
push
stc
add
lods
icebp
xor
xchg
js
push
out
cmpsb
push
jmp
stc
jp
incl
push
xor
popf
jp
push
imul
push
xchg
fidivs
and
jne
rep
iret
cli
mov
jecxz
pop
int3
xchg
xchg
add
mov
outsl
mov
clc
cmpsb
dec
sbb
bswap
mov
mov
mov
pusha
lea
jmp
fnstsw
ljmp
and
mov
jecxz
fistl
xchg
pop
cmp
mov
sahf
or
adc
stc
nop
inc
scas
ss
xchg
or
cmp
out
mov
scas
mov
inc
cmp
adc
es
fldt
popf
adc
lds
fidivrl
or
cltd
inc
mov
and
cmp
mov
and
mov
mov
movb
mov
pushf
pushl
ret
in
addb
ss
loop
imul
push
call
jle
call
lea
jb
push
cmp
pushl
cmp
call
pushf
xchg
aaa
sbb
movzbw
pop
mov
shr
stc
mov
push
bt
clc
mov
shrd
bsr
and
and
mov
bt
clc
sub
movb
jmp
pushf
lea
jae
not
mov
sbb
pushf
btc
mov
movsbl
mov
clc
pusha
xor
clc
movl
movb
test
repnz
call
ss
adc
je
mov
ficoms
icebp
aam
addr16
mov
addr16
sub
out
cltd
inc
sbb
leave
pop
out
daa
ljmp
push
outsb
sbb
xchg
lods
jl
repz
addr16
jne
cmp
shr
leave
xchg
sahf
or
stos
into
fsubs
in
sbb
mov
mov
mov
push
loopne
mov
jb
fildl
addr16
lea
test
bt
cmp
bt
sub
jmp
mov
pusha
mov
cmc
pushf
add
push
mov
mov
push
test
jmp
pop
mov
sub
push
adc
dec
mov
inc
imul
scas
fwait
stc
ret
mov
aam
mov
js
push
fcomps
bound
sar
enter
cmp
ljmp
xlat
lock
fsubl
notl
cld
bt
add
bt
jmp
dec
sarb
incb
pop
fsubs
cmp
jo
lea
mov
cwtl
repnz
mov
pop
test
fwait
insb
jle
add
inc
pop
xchg
pop
xchg
cmp
lea
imul
push
int3
push
out
ret
pop
mov
jno
mov
testb
ret
mov
aas
call
outsb
fwait
in
aas
sub
fisttpll
mov
lea
inc
lahf
cmp
cmovns
or
mov
push
sti
xchg
loopne
sub
dec
out
filds
sbb
sbb
pop
out
xor
sbb
lahf
mov
add
inc
dec
rorl
movsb
loopne
int
ja
enter
push
mov
out
fcmovnb
sbb
and
es
loop
jnp
int
out
jp
ja
cmp
or
xchg
jg
dec
mov
add
push
fsubrl
pop
sbb
int
or
xchg
or
inc
dec
aad
dec
not
sbb
adc
scas
out
cmp
das
testb
pop
mov
outsb
addl
or
push
xchg
or
mov
push
push
xchg
out
and
movsb
or
sarb
inc
jno
push
jno
stos
call
rol
inc
jae
add
jp
imul
arpl
aaa
sbbb
stos
lahf
or
xacquire
out
icebp
mov
mov
dec
popf
test
xor
bound
lds
push
sbb
dec
roll
dec
mov
adc
or
jecxz
test
pushf
jmp
push
call
jecxz
call
jmp
movw
mov
jmp
pushl
lea
je
btr
shld
mov
call
clc
stc
addl
pushf
push
pushl
mov
lea
jmp
push
call
push
sub
cmc
pusha
jmp
lea
jle
inc
jmp
rol
stc
cmp
xor
pushf
movl
mov
mov
mov
mov
bswap
call
push
call
dec
push
divb
xor
push
cmc
aaa
pusha
mov
daa
pop
mov
cmp
mov
aam
sbb
mov
das
mov
xadd
sar
lea
aam
push
cwtl
mov
clc
test
test
movb
pusha
lea
je
rcl
add
and
sar
mov
shr
shl
bt
add
rcl
mov
jg
clc
bt
clc
test
pushf
lea
je
call
push
call
cmp
std
cli
ljmp
xchg
sbb
call
loop
int
add
pushf
jmp
call
mov
je
adc
adc
pop
cld
ret
adc
or
adc
addr16
das
outsl
or
cmp
mov
push
mov
jne
xor
or
outsl
sbb
sub
popl
decl
out
jae
inc
jno
lret
sbb
jge
fstpt
add
call
std
jp
incb
mov
loopne
sbb
out
test
test
je
jns
addr16
clc
cs
pop
movd
adc
or
mov
or
jmp
push
call
mov
mov
mov
repnz
gs
cmp
add
push
push
das
add
leave
xor
test
pop
pop
adc
cmp
add
pusha
xchg
fsubrl
cmp
data16
std
xchg
test
in
xchg
pop
adc
add
lds
push
sbb
cmc
addr16
test
sbb
das
mov
adc
or
add
adc
pop
adc
sbb
mov
sbb
cmp
lcall
out
add
add
or
inc
das
in
test
daa
test
xor
fisttpl
xlat
sbb
push
das
jg
xor
insl
or
or
jae
in
rorl
imul
dec
fimuls
and
or
aaa
das
rclb
push
xchg
arpl
test
pop
xor
mov
mov
ds
aas
sub
fnstsw
stc
push
or
sbb
rorl
jne
adc
pop
mov
pop
jns
lods
not
or
pop
stc
and
cmp
out
roll
pop
pop
aaa
or
and
dec
lret
sbb
add
jg
jae
jge
enter
dec
jb
mov
pop
test
fbld
or
mov
adc
pop
nop
inc
stc
ss
aam
out
test
je
add
pop
jns
dec
add
pop
ret
jae
xchg
xor
push
enter
or
sbb
popf
push
testl
xor
pushf
pop
jns
cmpsl
xor
imul
inc
adc
fcomip
dec
mov
pop
dec
dec
lock
xorl
mov
adc
and
push
shrb
adcb
mov
rcr
jae
daa
mov
add
je
xor
ljmp
mov
hlt
pop
cmp
xchg
es
add
cwtl
add
xchg
sbb
xor
cmp
je
cmp
or
pop
nop
sbb
add
push
jmp
mov
daa
ljmp
lock
and
mov
push
mov
inc
aaa
pop
and
fdivl
iret
jl
xchg
xor
or
and
mov
or
je
mov
testl
xorb
or
out
std
repnz
push
roll
add
push
pop
push
cltd
xor
xor
daa
ret
cmc
sbb
and
xor
and
dec
cmpb
inc
pop
and
mov
mov
jg
cmpsl
pushf
mov
jbe
jae
fs
imul
shlb
mov
adc
imul
pop
xchg
mov
add
pop
mov
out
inc
cld
add
pop
inc
fcmovbe
mov
add
nop
or
adc
mov
std
add
sahf
adc
pop
pop
cmp
divb
pop
pop
out
lods
push
cmpsb
or
add
and
push
and
inc
xchg
inc
sub
and
dec
mov
sti
cmp
out
jno
adc
add
xor
and
pop
addr16
pop
xchg
and
adc
ret
lock
inc
adc
adc
or
mov
rcll
orl
mov
or
xchg
or
or
sbb
popf
push
cmp
jb
or
or
add
aad
xor
shrl
pop
mov
or
cmp
and
lds
xor
cmc
shrb
xor
sbb
stos
add
xor
xlat
lcall
popa
mov
lds
out
cmpsb
push
mov
or
or
adc
ret
scas
subb
jno
or
test
inc
fs
mov
mov
hlt
sbb
scas
sub
mov
aaa
cmp
inc
pop
adc
test
mov
scas
cs
mov
xor
and
inc
adc
xchg
mov
in
adc
add
outsb
jae
jmp
push
add
stos
fisubs
sbb
pop
testb
das
popa
call
mov
and
adc
mov
inc
adc
lods
mov
cmpsb
push
push
lret
aas
lahf
dec
jns
adcb
push
add
out
or
hlt
je
int
clc
add
mov
xor
lahf
dec
ss
dec
sub
ret
mov
jb
or
adcb
jbe
es
inc
add
mov
and
ljmp
cmpl
bound
dec
add
mov
jmp
movsb
adc
mov
cmp
mov
pop
or
pop
jecxz
add
inc
inc
lcall
xorb
xchg
add
ja
inc
pop
pop
cmpb
sahf
mov
sbb
insl
orl
mov
add
cmc
test
jge
inc
test
testl
or
mov
cmpsl
push
xor
je
rorb
and
clc
fildll
fistps
repz
sarl
movsb
mov
dec
imul
mov
mov
xchg
xorb
inc
inc
cmp
jnp
xor
scas
pop
andl
sbbb
fdivl
or
sub
xor
jg
imul
ret
dec
mov
cmp
and
and
roll
mov
or
movsl
orl
add
and
push
and
pop
cld
mov
cli
add
pop
mov
mov
sub
mov
adc
pop
ss
scas
js
inc
jb
and
or
test
xlat
dec
jb
call
ret
add
xor
sbb
adc
and
mov
lahf
cmpsl
rcrb
cmp
push
pop
mov
psraw
adc
decb
jae
cmp
add
dec
and
jle
jnp
jp
mov
dec
dec
or
ret
cmp
ret
dec
fs
add
out
stc
push
jnp
inc
aaa
or
jae
push
cmc
sbb
je
xlat
pop
inc
xor
xchg
and
push
xchg
ret
add
push
cmpsl
popf
and
repz
shrb
pop
decb
out
jecxz
mov
or
scas
pop
xchg
inc
nop
add
sbb
mov
xor
add
cmc
sub
jno
xchg
ficompl
or
aaa
pop
jae
je
stos
imul
out
loop
lahf
dec
sbbl
in
fcoms
xchg
cvtps2pd
addl
out
clc
mov
dec
test
rorl
scas
xor
mov
lahf
pushf
xor
mov
shld
cmp
add
and
jb
add
or
add
and
dec
add
js
mov
cmp
mov
cmc
andl
add
incb
shrb
add
scas
testb
int
and
lret
leave
inc
xor
ljmp
or
into
mov
movl
jp
inc
or
jbe
pop
je
out
pop
inc
ret
inc
dec
gs
nop
sbb
shll
sub
lock
mov
mov
popf
add
test
inc
pop
je
enter
xchg
sub
ds
and
or
jl
insl
or
ja
and
shr
outsl
dec
pop
or
xor
add
pop
push
xchg
sar
or
ljmp
or
adc
dec
je
andb
ss
cmpb
or
cmp
cmc
fisubrl
jecxz
cwtl
pop
push
sbb
nop
inc
in
sub
add
push
inc
mov
rcll
push
aas
movl
xchg
adc
sti
adc
dec
mov
push
push
call
loopne
rol
cmp
rolb
push
inc
or
pop
jnp
inc
lcall
push
addb
pop
pop
jmp
adc
mov
adc
and
push
cmp
aas
loopne
pop
je
inc
push
icebp
or
push
cmp
notl
or
pop
imul
xor
add
pop
xor
push
mov
sub
mov
cmc
dec
inc
fwait
lahf
mov
shlb
add
mov
das
lods
sbb
add
ret
nop
bound
movsl
add
mov
cmp
or
fdivp
addr16
cmc
sub
aad
pusha
adc
into
cmp
cmc
ljmp
cmp
in
fucomip
adc
xor
pop
jb
push
imul
mov
dec
pop
add
adc
or
add
mov
xchg
inc
add
je
mov
adc
dec
out
adc
mov
test
lahf
out
movb
mov
mov
sbb
mov
and
imul
jno
add
jae
lahf
xor
pop
vmwrite
pop
pusha
sbb
and
sbb
or
pushf
add
add
pusha
cmp
add
add
pop
xchg
inc
aaa
adc
je
inc
test
jge
pop
adc
adc
aam
jle
sbb
ljmp
cmp
dec
sub
xor
or
or
dec
inc
dec
add
in
adc
cmp
imul
mov
iret
jp
jg
cld
pop
pop
xchg
sbb
cmp
icebp
imul
push
xchg
jae
sbb
add
jns
mov
mov
js
and
pop
movsb
dec
add
pop
adc
cmp
push
xorb
lock
add
mov
xor
mov
sub
je
or
pop
dec
lds
test
or
cmp
sbb
xor
std
and
stc
jle
cmpl
pusha
push
jl
je
daa
push
fwait
setge
sub
xchg
pop
or
add
sbb
sbb
or
xchg
adc
adc
add
adc
add
adc
inc
sbb
daa
pop
inc
sbb
inc
ljmp
jb
sub
or
mov
fdivrs
cmp
je
stos
ret
into
es
addr16
sub
dec
pop
les
mov
repnz
rclb
test
lock
xor
adc
and
inc
cmp
aas
jo
jno
xor
lret
shl
add
xchg
sbb
pop
push
hlt
mov
inc
gs
loop
jmp
xchg
pop
lock
dec
pop
cmp
dec
sub
in
je
dec
pop
cmovge
push
add
pop
inc
adc
push
testl
mov
cmp
sub
gs
add
or
imul
test
jnp
mov
popa
lods
out
bound
icebp
cmp
ljmp
fnstcw
inc
xor
and
dec
nop
adc
add
xchg
popa
xchg
push
jg
sub
and
mov
test
pop
pushf
js
mov
jp
pop
or
pop
pop
nop
push
call
cltd
xlat
bound
fcom
nop
arpl
inc
xor
add
call
mov
adc
cmp
push
shrl
popl
adc
inc
mov
loope
int3
clc
loope
cmp
ret
pop
xchg
push
sub
push
push
pop
pop
insl
rol
push
jecxz
xor
or
imul
push
and
incb
icebp
adc
cmpb
mov
nop
js
repz
cmp
cmp
pop
jmp
pusha
incb
out
movsb
and
mov
arpl
inc
or
clc
mov
pop
sub
mov
pop
mov
push
scas
out
dec
mov
jecxz
cmp
jbe
test
outsb
add
jge
inc
loope
cwtl
in
lods
xor
sbb
lret
pop
fistpll
xor
push
jl
cmp
mov
sub
jnp
cmp
sub
xchg
adc
fistps
cmc
pusha
dec
push
xchg
data16
pop
lahf
loopne
ljmp
pop
dec
inc
ret
inc
or
xor
xchg
xchg
xchg
std
mov
jo
aaa
cltd
add
or
dec
pop
dec
sbb
xchg
push
and
and
dec
adc
xchg
inc
inc
cs
arpl
sub
fwait
or
dec
lock
xchg
lea
adc
int3
pop
sti
dec
out
sbb
pop
push
fnstcw
aas
std
sub
adc
cmpsb
or
xchg
cmpsl
clc
dec
mov
ror
daa
ret
push
loop
lret
lret
xchg
add
push
and
or
cld
nop
add
lahf
out
call
in
imul
inc
add
daa
stos
iret
push
and
fisttpl
je
mov
xchg
in
jmp
sub
inc
call
mov
xchg
add
gs
xchg
add
pop
sbb
adc
movlps
xor
jecxz
imul
inc
push
xor
inc
das
xchg
pop
dec
xchg
mov
sub
jnp
mov
test
sub
cld
and
mov
mov
add
lods
or
pop
mov
and
pop
pop
or
add
ljmp
sti
gs
mov
decb
push
addb
cmp
xchg
cmp
lret
xor
push
jge
daa
outsl
sbb
mov
sahf
mov
and
test
adc
inc
subl
lock
mov
repz
xorb
xor
rolb
or
out
inc
data16
dec
and
mov
and
jmp
pandn
ljmp
into
or
inc
pop
adc
in
gs
ret
pop
pop
sbb
arpl
in
ljmp
addr16
sub
imul
pusha
jae
ja
adc
test
xor
rdmsr
push
dec
jno
fistps
mov
add
or
adc
sbb
push
fidivrs
test
add
add
and
inc
and
adc
inc
mov
adc
adc
call
imul
push
enter
xchg
aas
aas
xlat
pop
cmp
cltd
pop
mov
add
je
xor
call
fiaddl
shll
xchg
add
aas
das
inc
adc
jb
pop
rcll
push
and
mov
aas
cmp
andb
icebp
and
sahf
insb
add
stos
test
test
dec
mov
jl
fwait
pusha
btc
sbb
scas
push
fs
les
call
xchg
xchg
mov
in
xor
lods
dec
rorb
js
sub
cmp
push
add
insl
testl
sti
mov
pop
inc
pop
aas
daa
jne
jo
and
fs
decb
sub
pop
jmp
rcrb
mov
xchg
movsb
sarl
cltd
mov
into
js
mov
mov
push
test
test
cmp
aas
cmp
xchg
push
cmovb
xchg
inc
adc
adc
push
sbb
mov
ljmp
fstps
out
pop
stos
mov
rclb
int
nop
xchg
jb
add
mov
shlb
mov
std
je
rolb
adc
cmp
mov
popa
out
add
sti
je
mov
mov
dec
sub
iret
bound
subb
or
out
and
jg
mov
jne
push
adc
clc
adc
jno
mov
ljmp
pop
rolb
xchg
push
dec
add
or
xor
cwtl
aas
or
xchg
lahf
mov
jno
xrelease
test
ss
push
mov
mov
cmp
jbe
ds
test
mov
add
stos
test
mov
pop
mov
imul
pop
xchg
iret
jmp
dec
mov
mov
mov
cld
inc
sbb
test
add
inc
sbb
and
push
sbb
xchg
arpl
inc
add
xchg
mov
jb
call
cmc
roll
adc
mov
pop
pop
ljmp
pop
add
ljmp
aas
les
mov
mov
xchg
or
mov
mov
rcrb
xchg
dec
das
push
xor
adc
or
or
call
cwtl
xchg
mov
adc
add
cld
out
daa
mov
cld
lret
xchg
mov
jb
psrlq
rolb
lds
std
jne
lahf
testl
test
jl
adc
and
jg
pop
jno
repnz
decb
and
mov
sub
pop
das
das
test
mov
sbb
or
sbb
rorb
or
js
add
pop
lret
or
mov
sub
cmp
and
inc
daa
inc
inc
sbb
aas
mov
imul
arpl
dec
inc
mov
adc
jecxz
stc
mov
nop
adc
jae
jmp
inc
nop
out
jae
repz
inc
nop
divl
sti
adc
adc
xchg
mov
adc
lock
lock
or
adc
or
popf
inc
or
stc
sbb
sub
sub
mov
iret
jnp
xchg
jno
and
daa
or
jecxz
sti
lock
cs
xchg
gs
sub
clc
popa
sub
daa
sub
gs
sbb
inc
jg
fildl
sbb
fildll
push
inc
mov
cwtl
xor
fwait
mov
mov
movsb
sub
cmpsb
stos
adc
stos
sub
scas
and
pop
push
cmp
shll
jecxz
mov
adc
and
nop
xchg
nop
sbb
pop
push
inc
nop
adc
movlps
pop
or
inc
add
pop
das
xor
or
pop
push
mov
xchg
orps
mov
mov
add
or
fs
mull
add
mov
mov
addb
call
jne
dec
cs
sub
mov
xchg
scas
das
sub
popf
jbe
add
sbb
cli
insl
sub
aas
add
sti
add
sbb
adc
xchg
xorb
je
cmpl
and
cmp
sub
das
jae
enter
mov
cmp
or
push
adc
pop
or
mov
je
push
adcl
pop
add
iret
lods
pop
aaa
add
inc
xor
add
mov
inc
repz
jge
imul
mov
pop
mov
out
mov
loope
jmp
or
sub
mov
and
push
dec
add
addb
pop
adc
cmp
notl
sbb
int
jno
jl
jne
add
add
or
mov
test
dec
arpl
pop
adc
pop
or
fidivl
xchg
lahf
mov
push
addb
dec
cmpsl
add
sbb
adc
add
loopne
jg
repnz
es
cld
inc
fprem1
lea
ss
faddl
adc
mul
add
mov
repnz
jne
gs
adc
adc
fmull
or
xor
mov
inc
pop
ret
sahf
sbb
sub
mov
out
mov
shlb
push
adc
rorl
adc
fsub
rolb
adc
or
inc
add
shl
push
mov
enter
inc
xor
xor
clc
adc
add
repnz
add
je
and
or
rolb
aas
repnz
repz
in
out
ret
xchg
mov
pop
jmp
or
xlat
jae
rclb
fneni(8087
imul
out
out
es
adc
mov
rcrb
pushf
pop
std
outsl
add
cld
popa
sti
adc
iret
iret
sub
pop
push
push
push
mov
push
sub
loopne
push
out
adc
data16
iret
push
inc
aaa
iret
test
or
pop
add
or
je
inc
push
pop
push
orl
mov
out
add
fisubl
and
aaa
push
fbld
fs
jmp
and
fsubrp
mov
pop
push
shll
ror
mov
aas
sbb
mov
push
shrb
mov
idivb
cmp
add
sar
rol
movsl
pusha
test
push
enter
jbe
xchg
dec
adc
rolb
pop
inc
mov
cmp
dec
mov
call
add
add
pop
jb
sub
mov
sbb
add
ret
pop
scas
adc
jle
popf
jg
add
sti
pushf
fidivl
popf
sub
pop
negl
mov
and
sbb
mov
ja
push
add
xchg
loop
dec
loopne
stc
ret
jno
cmpb
cmc
fisubrs
push
dec
and
xchg
inc
inc
mov
push
sti
sub
shr
xor
push
rorb
add
lahf
dec
out
push
mov
adc
sbb
test
xor
adc
mov
std
push
js
xor
or
xlat
and
je
sar
dec
and
sbb
add
pop
mov
cmp
add
pop
jb
mov
inc
rcrb
imulb
pop
mov
or
or
mov
mov
push
and
ret
ret
arpl
inc
add
lds
inc
push
xor
mov
mov
push
push
or
xor
shlb
sub
xchg
push
repz
into
push
loopne
ret
cli
add
mov
or
lcall
cmp
aad
call
int
adc
jb
aas
cmpb
sbb
dec
shr
not
and
mov
je
cltd
mov
sub
dec
fists
dec
sbb
mov
inc
pop
mov
cltd
dec
icebp
mov
or
sti
sbb
je
into
pop
mov
pop
sti
pop
adcl
rolb
mov
fs
outsb
pop
outsl
lcall
pop
mov
dec
sbb
std
shrb
and
jp
enter
pop
ret
in
or
lea
inc
lods
std
pop
in
sub
and
mov
mov
xorl
push
cmp
cmpl
jge
inc
adc
repz
call
ds
add
inc
or
mov
aad
nop
xor
or
dec
pop
push
mov
mov
push
test
std
inc
inc
or
cmpsl
add
sbbb
push
adc
push
outsl
or
call
mov
xor
je
jg
dec
ret
sub
ret
or
cmpsb
inc
adc
out
aad
sub
push
daa
cmp
inc
jne
or
sbb
gs
les
movsb
jmp
xchg
sub
arpl
sbb
int3
push
iret
cmp
sarb
and
pop
clc
or
pop
and
or
jmp
ljmp
cmc
shrb
push
test
mov
ficoms
or
and
std
or
jb
push
add
dec
pop
sti
xor
out
je
mov
std
xlat
mov
add
ljmp
jb
adc
pop
aas
sub
push
ljmp
push
sbb
and
adc
mov
cmp
push
jmp
push
pop
aad
adc
test
aaa
outsl
jbe
mov
sbb
movsl
fldt
icebp
sub
sti
jl
and
jnp
inc
mov
cmc
nop
adc
and
sub
push
jl
or
outsb
pop
int
movsl
nop
cmpl
inc
xor
mov
push
pop
ja
cmp
jae
mov
pusha
hlt
orb
mov
je
bound
dec
pop
test
jnp
shl
or
testb
or
enter
pop
lds
std
dec
dec
addb
negb
or
mov
and
add
pop
test
mov
adc
loope
mov
and
xchg
or
push
je
aaa
jns
xor
mov
push
dec
adc
dec
sub
test
push
cmpsl
outsb
cwtl
test
test
fcom
add
out
mov
in
sbb
adc
mov
mov
andb
push
and
xor
lret
mov
or
rol
jge
cmc
and
push
mov
out
or
mov
jnp
or
sub
mov
dec
fbld
enter
push
mov
daa
test
fs
divl
or
or
sti
dec
xor
xor
shlb
inc
add
and
sti
lahf
mov
js
pop
cmp
enter
mov
roll
fsubrs
and
pop
mov
bound
dec
add
lret
cmpsl
scas
sub
dec
sub
and
scas
mov
movb
dec
xor
xchg
addr16
inc
and
movsl
scas
inc
and
and
out
adc
aam
xor
mov
jae
imul
pop
or
cmpsb
push
jecxz
add
je
jne
leave
stc
mov
jl
xchg
lds
sbb
add
and
lds
loopne
push
jmp
das
inc
icebp
xor
ret
adc
inc
and
addl
mov
xor
pop
add
dec
dec
push
cli
test
shl
fdivrl
xchg
and
sub
lahf
mov
push
sarl
test
sbb
stc
cmp
cmp
inc
out
inc
ret
xchg
push
cltd
hlt
cld
fdivr
lea
aas
out
test
incb
movsl
inc
add
jg
dec
dec
adc
add
and
xlat
jl
repz
or
add
pop
dec
out
lods
mov
fcoml
lahf
jg
arpl
pop
pavgw
or
cmpl
je
or
add
adc
and
gs
repz
or
push
push
sti
daa
int3
pop
mov
addr16
popf
outsl
dec
loope
jmp
mov
or
call
lea
aas
sub
in
aas
cli
les
imul
xor
xor
mov
pop
cmp
je
iret
jecxz
pop
insb
daa
mov
sbb
pop
add
adc
add
fisubl
xor
inc
mov
cmp
lea
ss
fs
or
jge
inc
stos
in
mov
roll
rorl
rcrb
and
loope
jnp
push
adc
xchg
mov
fstpt
cmc
mov
ret
add
jg
in
cmp
dec
cmp
je
xor
out
sbb
fldt
shrl
or
outsl
mov
or
stos
jae
push
popf
pop
dec
mov
pop
pushf
test
js
and
fdivl
mov
jne
mov
or
shlb
sbb
mov
pop
push
jecxz
mov
xchg
xchg
les
add
jmp
mov
sbb
out
push
ds
mov
xchg
push
inc
add
fidivrs
dec
out
fsubrs
lret
aam
and
or
fwait
mov
sbb
add
pop
add
cmp
dec
outsb
out
repnz
or
dec
ljmp
fidivrl
addr16
lret
push
jne
jae
pop
js
je
xchg
or
or
push
psubw
out
pop
dec
fstl
pop
xchg
fstpt
xchg
movsb
jae
xchg
inc
and
mov
lock
cmc
add
leave
cmp
jne
mov
adc
sub
ljmp
push
es
dec
call
pop
xchg
dec
or
or
gs
or
sub
sbb
negl
inc
aaa
pop
int
jnp
push
insb
testb
inc
xadd
or
push
mov
adc
movq
xchg
inc
aaa
adc
sub
and
and
add
xor
mov
mov
xor
mov
sub
add
push
sub
and
cmc
add
sarl
inc
stc
jb
mov
daa
xlat
jnp
lret
cmp
jne
dec
push
add
mov
sbb
jl
push
movb
shlb
adc
lret
cmovne
arpl
and
dec
jb
xor
sbb
adc
call
dec
in
cwtl
imul
jno
inc
inc
xor
adc
inc
xchg
imul
sub
aam
pop
call
cs
pop
or
shr
push
ljmp
fdiv
das
xor
jns
dec
in
and
jbe
add
xchg
std
adc
js
mov
imul
ror
loopne
jne
adc
push
mov
push
shrl
out
add
rorl
arpl
mov
mov
jg
xchg
fs
sbb
hlt
mov
push
adc
inc
in
lock
add
roll
or
cmp
dec
mov
ss
cmp
jb
mov
cmp
icebp
sbbl
mov
or
push
aas
inc
adc
add
add
dec
add
ljmp
popa
jae
imul
xchg
push
sbb
bound
fnstenv
sub
rcrl
scas
sub
daa
mov
jp
lods
cli
lahf
mov
jo
or
mov
dec
adc
and
movsl
add
add
sub
ljmp
push
mov
cmp
call
jg
cmp
or
inc
mov
sbb
das
xchg
cmp
pop
fcomi
cmp
add
ljmp
dec
sub
sub
test
or
lea
push
shll
ret
add
rolb
movsl
inc
je
ja
je
out
divb
jb
cmc
adc
and
add
movsb
pop
iret
push
xchg
xlat
cmp
mov
sbb
test
xor
pop
shll
sub
jno
add
sbb
add
fsubs
mov
rclb
xchg
enter
mov
mov
ljmp
cmp
dec
rcrl
callw
add
cs
aad
lea
jae
sub
adc
daa
outsl
pop
jl
fisubrl
sbb
or
insb
popa
ja
or
add
adc
lahf
ret
add
and
and
test
xorl
daa
adcl
insb
cmp
adc
dec
and
dec
jae
and
adc
jo
cmp
psllq
cwtl
cmp
cmp
xchg
ret
fnstenv
mov
adc
jmp
in
cmp
xor
pop
stc
push
jp
sbb
ja
scas
jge
jp
adc
inc
lds
fldl
sbb
je
jae
pop
cmp
adc
push
pop
pusha
add
rcll
sbb
stos
or
xchg
pop
mov
and
test
cmp
notb
pushf
push
sub
les
jns
arpl
or
clc
jg
add
negb
ret
clc
sub
dec
loopne
mov
push
xchg
add
mov
cmpsl
int
in
xor
insl
stos
jbe
dec
dec
adc
add
lahf
cwtl
daa
lea
aad
sub
addr16
inc
sub
xlat
mov
and
dec
pop
fwait
sbb
in
in
dec
dec
add
add
addb
mov
cltd
ret
dec
imul
arpl
insl
xor
adc
push
xchg
pop
outsl
pop
clc
std
adc
jmp
scas
or
mov
das
jnp
add
addr16
outsb
push
mov
mov
inc
leave
jnp
sub
arpl
js
push
push
adc
pop
fwait
iret
mov
mov
or
push
add
movsl
add
pop
pop
shll
xor
push
cmp
xchg
adc
rcrl
mov
xor
dec
in
cld
orl
mov
inc
jb
jp
pop
pusha
mov
jne
mov
push
mov
push
cs
lds
pop
pop
test
mov
dec
push
cs
dec
ret
add
cmp
sbb
test
outsb
iret
pop
fidivrs
mov
cmpsb
dec
add
cld
daa
jp
jmp
repz
sbb
mov
imul
test
xchg
ret
push
in
in
jmp
sbb
pop
pop
inc
out
cltd
and
loope
lret
arpl
fs
out
inc
cmp
xchg
jb
je
mov
push
scas
or
out
rcrl
and
and
inc
stos
adc
movsl
inc
pop
and
add
pop
add
lock
incb
xor
pop
loopne
hlt
mov
jmp
sub
pop
dec
add
data16
sub
inc
xchg
enter
fnstsw
out
or
add
aas
filds
adc
mov
fisttpl
jecxz
fiadds
orl
test
loopne
add
mov
xchg
sbb
and
inc
stc
lock
dec
push
adc
jno
iret
or
gs
cltd
fsts
aaa
push
hlt
xor
sbb
mov
xlat
cmp
jae
cmc
inc
or
jmp
lret
jge
icebp
mov
cmp
jle
pop
fimull
xor
std
add
sbb
lcall
sub
jno
cmpsb
adc
add
fldt
test
cld
fidivs
fs
lret
addr16
push
mov
test
add
ljmp
mov
jb
mov
jo
cs
imul
push
cmp
push
mov
rcrl
or
aaa
cmp
pop
or
sbb
sbb
dec
sub
andl
sbb
iret
clc
inc
mov
and
add
xor
sti
cmc
adc
ss
pusha
out
mov
cmc
ljmp
aas
fmuls
lcall
push
mov
and
add
jnp
dec
xor
out
std
sti
push
mov
test
xchg
sbbl
xor
adc
push
into
sti
dec
xlat
lods
jae
in
pop
xchg
cs
cmp
jl
push
jmp
fldt
outsb
dec
xchg
stc
cmovns
ljmp
mov
xchg
jmp
xor
xchg
fists
pop
and
popa
stos
and
movsb
dec
shll
sub
fldenv
pop
cmpsl
cmc
inc
lret
ret
int3
adc
xchg
inc
xchg
pop
or
push
out
pop
mov
outsl
xor
outsb
mov
cmp
jae
jg
imul
imul
inc
test
std
xor
or
cmp
movsb
mov
daa
cmpb
push
scas
mov
inc
lahf
jo
mov
inc
into
jns
mov
aad
addb
jl
cmpsb
pop
aas
jmp
test
cmpl
rclb
testl
inc
adc
jg
jb
or
xchg
xor
jnp
insl
sbb
imul
add
fnstsw
jnp
cmp
stc
sbbb
sub
add
or
or
pop
dec
imul
xorb
add
pop
or
fnstenv
push
mov
shl
push
sar
mov
push
fists
lea
std
iret
xchg
shlb
and
sti
mov
test
xlat
xchg
or
mov
maxps
push
dec
dec
outsl
or
push
mov
jae
inc
dec
push
sbb
ds
push
sub
and
sbb
adc
nop
add
sti
dec
stos
mov
and
lock
and
imul
mov
into
jo
out
dec
jge
dec
test
cli
sub
mov
sbb
imul
nop
stos
and
adc
pop
int3
or
invd
pop
dec
and
xchg
inc
mov
and
push
xor
add
scas
out
sub
punpcklbw
and
jecxz
sbb
daa
loopne
add
sbb
fiaddl
ss
rorb
sbb
rcr
jbe
xchg
lret
roll
mov
add
call
daa
cli
pop
cmpsl
insb
gs
add
and
and
and
push
mov
sub
inc
adc
add
push
inc
push
stos
add
es
popl
js
adc
push
aas
mov
xchg
andl
inc
cmp
das
repnz
stos
cmp
push
pop
dec
mov
call
scas
insb
sub
sbb
icebp
sub
sbb
enter
pop
pusha
sub
or
les
roll
mov
out
dec
add
cmp
cmp
xor
jle
xorb
adc
daa
or
sbbb
rolb
mov
cltd
xor
fimull
add
or
inc
adc
sbb
add
aaa
ret
filds
mov
jle
fidivs
dec
ljmp
mov
enter
das
or
push
xor
call
and
fisttps
inc
mov
pop
mov
and
and
jae
cmpsl
jg
inc
ret
jno
lahf
loope
repz
testl
adc
add
or
mov
in
icebp
sbb
mov
mov
ret
mov
subl
add
push
in
jae
outsb
pushf
cmp
inc
lock
daa
xor
or
jns
or
aam
adc
cmpsl
jne
add
jecxz
mov
mov
mov
push
clc
and
stc
or
outsl
jne
inc
and
outsb
jae
cwtl
adc
cvtpi2ps
imul
adc
shr
inc
push
cwtl
pop
xor
add
adc
call
arpl
jg
je
notb
arpl
inc
sub
add
sbb
cmp
outsl
push
push
lock
add
or
xchg
outsl
out
and
push
mov
sysret
or
adc
ljmp
pop
mov
or
dec
imul
ret
pop
popf
jne
sub
jge
mov
mov
fwait
daa
jl
pop
ja
push
popf
pop
ret
inc
pop
test
inc
mov
or
cmp
pop
jl
cmp
inc
bound
scas
or
dec
notl
jo
and
cmp
xchg
pop
imul
pusha
dec
mov
jl
bound
pop
pminsw
lahf
lods
cmp
popf
pop
jae
cmp
fisttpl
or
pop
in
and
notb
jecxz
rorl
mov
pop
adc
add
loopne
shrb
pop
cmp
mov
add
pop
mov
and
fs
je
push
cmc
cmp
pusha
pusha
jmp
negb
push
outsl
sbb
cld
mov
jg
les
sbb
lahf
popf
inc
repz
test
test
push
add
aad
pop
dec
push
dec
or
inc
push
dec
jl
ja
test
lods
outsl
xchg
mov
jmp
push
cmp
add
sub
les
icebp
and
mov
or
loope
push
ss
aam
push
call
push
lret
imul
cmp
call
movl
movl
lea
jb
pushf
movb
cmp
call
push
lea
jne
sub
not
mov
shld
clc
lea
sub
bt
movsbw
mov
bt
sub
test
cmp
pushl
pusha
cmp
jmp
test
test
bt
call
push
call
push
incl
add
jae
popa
addr16
outsl
js
add
hlt
repnz
push
mov
movw
pushf
lea
jne
pushf
inc
mov
adc
pushf
inc
sub
jmp
inc
call
test
pushl
pusha
pushf
lea
je
rcr
sub
add
ror
sbb
or
call
push
call
sub
jnp
repnz
sbb
call
scas
jge
addr16
das
jecxz
adc
out
dec
add
add
pop
adcb
test
push
jmp
mulb
into
clc
mov
shr
pushf
adc
sub
neg
shr
push
shld
lea
call
mov
cmp
movl
pushf
test
pushf
mov
lea
je
btc
movsbw
call
lea
je
stc
clc
call
jmp
setb
lods
call
lea
ja
pushf
test
sub
shr
add
add
shrd
rol
adc
mov
sar
push
shl
mov
stc
repnz
pushf
lea
jne
setbe
movb
push
mov
movsbw
lahf
lea
lea
call
not
lea
mov
pop
pushf
lea
jne
call
push
lea
mov
pop
pushl
pushf
mov
movb
pushf
pushf
movb
pushl
ret
xor
clc
pushf
pusha
repnz
movl
movl
lea
jne
shrd
shld
mov
shl
shrd
sub
bt
call
call
call
test
jmp
movl
stc
stc
add
pushf
add
pushf
lea
jmp
lea
ja
pushf
push
push
movb
sub
pushf
bsr
rol
dec
sub
add
mov
movzbw
mov
pusha
pusha
pushf
pushf
lea
jmp
push
call
inc
push
imul
and
lea
call
push
cmp
movw
test
cmp
push
call
push
call
adc
lret
bswap
shr
mov
neg
das
shl
mov
cmp
add
pushf
lea
jo
pusha
pushf
mov
movzbw
movb
lea
pushf
push
pushf
movl
jmp
push
call
lcall
call
push
fs
mov
adc
or
add
psrad
pop
scas
les
jmp
jmp
mov
test
or
aas
scas
xlat
adc
popa
sti
hlt
cmp
jae
inc
cwtl
decb
es
add
inc
mov
lock
in
push
xchg
mov
jb
mov
add
inc
outsl
jp
pop
out
repz
jl
dec
iret
hlt
loop
push
sbb
lock
lcall
les
loopne
dec
jle
sub
pop
jno
fiaddl
imul
adc
aaa
in
dec
cld
xor
sub
outsl
pusha
popa
popa
cld
arpl
xchg
mov
xchg
fs
das
xor
adc
into
incb
xor
or
mov
push
mov
imul
sbb
call
ret
xchg
clc
xchg
dec
int
sbb
js
aam
dec
fimull
popf
cmp
bound
and
cmp
popf
push
stos
push
fdivrl
mov
inc
adc
jle
loopne
add
adc
or
mov
and
mov
out
pop
push
add
je
or
out
fisubs
inc
push
fsts
pop
add
jne
aam
hlt
xor
shlb
adc
out
xor
xor
xchg
enter
mov
lea
not
movsbl
push
pushl
popl
movzbl
bswap
setl
movsbw
lea
pusha
movl
jmp
push
call
sbb
xchg
add
add
rorl
and
inc
lea
inc
inc
mov
not
inc
rcl
xchg
xadd
btc
aam
bsf
mov
sar
mov
bt
test
test
test
push
neg
sar
mov
bt
sub
pusha
rep
movzbw
pushf
lea
movzbw
mov
mov
lea
jmp
pushf
lea
je
cmc
bsr
bt
mov
rol
ror
ror
sub
sar
setno
shr
movsbw
shl
mov
setnp
sub
add
btr
pusha
jmp
push
call
out
jnp
cmp
mov
add
test
mov
add
test
mov
cmp
cmc
test
movb
pushl
call
mov
pop
xchg
stc
test
jae
jg
mov
inc
inc
ret
push
cmp
dec
add
sub
xchg
je
cmpsb
fsubs
sub
rcrb
aad
hlt
push
dec
out
mov
cmc
scas
leave
sub
or
pop
sub
cmp
jg
sub
lock
inc
sub
cmpsb
ja
pop
pushf
push
xchg
iret
out
mov
push
sahf
filds
bound
hlt
es
xchg
pop
movsbw
not
pop
pusha
pushf
lea
jo
jne
cmc
cmc
movzwl
test
mov
pushf
jmp
lea
btr
cmc
clc
mov
stc
bt
pusha
jmp
pushf
clc
cmpb
jmp
shld
mov
test
jmp
push
call
sti
iret
sti
add
mov
sub
mov
fisttpl
out
mov
fs
dec
loopne
inc
mov
imul
pushf
or
or
hlt
movsl
int
and
xchg
sub
mov
push
push
pop
adc
je
test
insb
cs
out
xor
mov
xchg
add
xchg
mov
pushf
inc
pushf
jmp
mov
rolb
ret
xchg
adc
pop
add
sbb
dec
mov
pop
int
cmp
bound
jge
push
adc
xchg
testb
cmp
jns
push
loop
or
mov
incl
icebp
or
adc
cmp
popf
clc
push
jbe
pop
daa
rcll
pop
sti
lcall
fdivrp
mov
bound
mov
sbb
sbb
inc
mov
js
fsubs
leave
in
out
mov
in
or
add
or
lock
dec
push
sbb
adc
inc
mov
adc
adc
sarb
adc
jg
sub
cmp
lods
in
sub
aas
mov
xor
add
push
call
inc
insl
cmp
clc
push
test
pushl
lea
je
pushf
cmp
mov
sub
bswap
push
das
bts
mov
jmp
mov
push
cmp
adc
xor
addr16
or
popa
in
push
leave
and
add
push
lret
imul
clc
int
push
sbb
roll
imul
sbb
addr16
in
in
imul
lcall
jg
in
xchg
xor
mov
or
adc
ret
sahf
pop
mov
popf
int3
or
lds
xor
or
adc
mov
lods
daa
cmp
sub
cmpsl
subb
rol
inc
lods
sahf
shll
cltd
push
jbe
mov
je
pop
adc
ds
sbb
aaa
or
dec
push
xchg
jae
xor
ljmp
dec
add
pop
outsb
pop
mov
ljmp
xchg
loope
lret
lea
jne
push
mov
stos
pushf
lea
jmp
aaa
insl
int3
and
push
cld
xchg
push
mov
xchg
xchg
or
iret
icebp
in
mov
and
cmp
gs
sarb
mov
aad
in
mov
imul
dec
je
testl
lods
stos
dec
inc
movsl
cmp
iret
fisttpll
movsl
jecxz
test
outsb
xchg
test
adc
pop
lea
shr
mov
adc
sahf
ret
adc
ror
call
fldl
rolb
xchg
sub
das
sub
testb
sub
ljmp
jns
ss
push
faddl
arpl
pushl
pusha
pushf
lea
je
bswap
shrd
add
btr
mov
stc
cmc
test
push
lea
je
clc
call
movzbl
mov
push
movl
pushf
lea
jmp
ror
cmp
sets
mov
call
push
call
pop
sbb
xchg
push
mov
out
cmp
cmp
xchg
or
sbb
jge
dec
lods
outsb
pusha
inc
sbb
cltd
push
ss
aam
cmpsl
out
shlb
mov
imul
cmc
testl
cmp
test
pusha
cmpsb
subb
dec
dec
xor
mov
aaa
push
mov
fnstenv
jg
inc
fistps
sbb
sub
fs
je
test
clc
cmp
push
movb
call
pop
nop
dec
xor
adc
adc
fcmovu
cli
cli
xchg
call
push
xchg
or
sub
cmc
lret
ja
xchg
mov
dec
leave
mov
or
pop
out
and
dec
data16
jle
inc
mov
adc
ss
adc
sbb
leave
push
mov
jo
cmp
dec
push
lods
sbb
or
xchg
pop
adc
cmc
cmc
cmpsb
movb
jmp
mov
add
stc
cmpsb
call
stc
clc
cmpb
pusha
lea
jne
cwtl
inc
xor
jmp
push
call
xchg
ljmp
in
sbb
call
cmc
pop
dec
adcl
add
cmc
cmp
call
push
push
inc
push
xor
cs
insb
add
lret
pop
pushf
mov
call
xor
xchg
sbb
scas
stc
cmp
pop
mov
mov
repz
pop
sbb
call
arpl
xorb
aaa
push
call
nop
dec
dec
stc
jmp
cmpb
mov
pushf
lea
jne
or
xor
btc
mov
shl
xor
neg
shr
add
clc
push
sar
mov
cmc
test
jmp
push
call
stc
dec
inc
jmp
test
mov
push
lea
je
rcl
rcl
push
add
neg
bt
test
pop
mov
pushf
cmp
jmp
movl
pushf
mov
pushf
pusha
push
pushf
pushl
ret
lea
pushf
mov
mov
mov
lea
jmp
es
and
fcomps
sbb
pusha
or
shll
cmpsl
rorb
mov
fistpl
fildl
lret
cmc
mov
loop
fists
push
call
in
inc
sbb
rcrl
rcrb
and
inc
pushl
ret
pushf
push
call
lea
jb
cmp
cmp
cmp
push
pushl
pusha
movb
lea
jae
pushf
movsbw
setl
mov
stc
bts
clc
neg
mov
bswap
cmc
mov
pushf
call
in
cli
repnz
imul
inc
nop
ss
push
fwait
pop
sbb
xchg
or
xorl
xor
test
ss
pmuludq
imul
inc
jp
mov
ljmp
std
mov
imul
icebp
cmp
xor
mov
loop
cmpsl
mov
xchg
add
push
aam
or
mov
mov
or
cmp
bound
push
aad
loopne
mov
jl
aam
add
xchg
loope
sti
add
rcrb
fwait
adc
sub
mov
xchg
popf
dec
xor
cmp
dec
test
push
icebp
sarb
xchg
cmp
push
rcl
sub
jl
jns
cmp
add
js
jge
stos
or
inc
jns
xor
push
movsl
inc
mov
sbb
lods
ss
xchg
aas
xchg
jne
sbb
mov
adc
jg
jmp
adc
fsubs
mov
or
xchg
das
gs
repz
stos
sbb
mov
aaa
jbe
push
push
nop
aaa
add
sti
xor
stos
push
pop
decb
dec
je
push
add
push
sub
ret
imul
and
dec
in
int
inc
shll
mov
pusha
cmp
mov
bt
bt
pusha
movw
mov
pushf
or
pushl
push
mov
push
lea
je
bswap
jle
mov
btr
mov
clc
btr
mov
cmp
push
sub
pushf
shr
sub
cmp
cmc
clc
call
inc
pushf
clc
call
cmc
add
jmp
pushf
call
push
call
push
pop
ficomps
mov
sar
xchg
or
xor
mov
jecxz
mov
or
add
insl
push
ds
xor
mov
dec
insl
xor
test
jecxz
xor
ret
pop
leave
into
cmp
mov
push
mov
lea
je
bt
clc
stc
cmp
add
cmc
cmc
cmp
pushf
lea
jb
pushf
cmc
cmp
jmp
movb
call
lea
je
bt
cmp
pushf
jmp
not
add
test
cmp
not
cmp
mov
stc
pushf
movl
add
jmp
push
call
daa
pushf
lea
jae
and
xadd
mov
btr
bsf
btr
mov
bts
bsr
shr
pusha
mov
stc
pushf
call
add
dec
outsl
popa
fs
imul
add
adc
bound
fiaddl
cmp
jl
or
je
mov
sbb
ljmp
dec
dec
adc
rclb
push
outsl
nop
movsl
add
in
push
sub
lea
inc
xorl
pop
ret
imul
pop
and
mov
xchg
lock
mov
jl
add
movl
and
je
stc
stc
clc
add
bt
jmp
push
call
or
shrl
lea
add
cmp
jle
icebp
pop
and
add
loopne
mov
mov
outsl
xor
addl
loope
adc
inc
and
pusha
pop
mov
cmp
mov
jecxz
loopne
dec
lods
xchg
faddl
add
sub
xor
xchg
test
push
push
pop
xchg
jl
jp
icebp
add
mov
push
movb
lea
jne
push
movzwl
movsbw
shl
mov
cmc
call
stc
pushf
xchg
lea
mov
pusha
pusha
test
sub
push
jmp
pushl
popl
pushl
lea
jmp
push
call
xchg
insb
pop
stc
push
xchg
xor
shl
shrd
clc
mov
call
mov
cmp
push
lea
jbe
add
ror
bsr
call
pushf
pusha
dec
clc
push
clc
shl
jmp
call
cmc
stc
pushf
add
push
movl
pushl
lea
jmp
call
xor
push
repnz
push
pusha
call
jmp
push
call
push
xor
cmc
cmc
add
push
mov
movw
lea
jmp
push
call
adc
mov
mov
lea
call
pusha
bt
sub
pushf
call
pushl
inc
stc
bt
pushw
popfw
jmp
aad
cld
adcl
jae
popf
add
popf
xchg
adc
mov
cltd
scas
je
jno
and
fdiv
std
jb
addb
or
mull
test
les
cmp
cmp
arpl
pop
loop
jmp
movups
push
or
pop
inc
outsb
jb
inc
pushaw
cmovno
push
daa
inc
dec
inc
dec
push
push
cmp
arpl
jbe
mov
mov
ljmp
jmp
add
lock
push
xor
aas
mov
sbb
pop
mov
add
and
adc
or
lahf
cmp
adc
psllq
adc
adc
jae
pop
nop
cmp
sbb
sbb
adc
nop
ja
imul
mov
dec
and
inc
inc
nop
and
loopne
negl
fwait
pop
pop
sub
movd
add
add
sbb
add
xchg
js
adc
cmp
cmp
xchg
sbb
inc
ja
testb
add
mov
js
and
popa
movsl
fimuls
pop
sbbb
jg
cmpsl
ret
mov
out
cmp
jnp
pop
mov
das
mov
cmp
in
das
in
out
pop
lods
pop
inc
jge
mov
or
pop
mov
pop
mov
shll
add
xlat
fstp
clc
add
jge
jae
rorl
cmpsl
jae
sbb
out
cmp
test
add
adc
add
lahf
pop
add
push
sbb
sbb
adc
add
nop
add
pop
inc
add
mov
inc
or
or
sbb
sbb
pop
push
movsl
push
push
movlps
adc
add
pop
and
inc
nop
inc
leave
dec
xor
pop
push
cwtl
pop
push
dec
pop
pop
movsl
jnp
imul
insb
inc
pop
outsl
mov
adc
stos
add
mov
addb
sbbl
inc
arpl
bswap
mov
outsl
cmpsb
cmp
pop
inc
adc
push
pusha
or
inc
cli
adc
xchg
inc
add
daa
pop
repz
inc
pop
pmaddwd
repz
popl
mov
add
or
popa
cmp
les
sub
add
test
addr16
aad
sti
xor
testl
jmp
out
jecxz
fcmovnbe
mov
adc
nop
lahf
and
adc
nop
jg
jnp
ja
mov
and
push
xchg
dec
das
movl
daa
pop
mov
adc
and
pop
and
mull
jecxz
fistpl
iret
out
or
cwtl
pop
pushf
movsb
add
dec
add
dec
cwtl
in
ret
jg
xlat
pop
out
aaa
lock
mov
aas
cld
adc
fwait
sub
cmpl
nop
cmp
pop
inc
ja
mov
push
adc
das
or
insb
inc
xor
xor
jbe
xchg
and
xor
push
and
dec
inc
imul
push
call
and
xor
leave
inc
imul
jne
je
and
and
jae
jo
outsl
addr16
insl
and
jae
bound
outsb
and
outsb
imul
and
and
jns
gs
and
data16
and
and
push
imul
and
popa
arpl
fs
jae
imul
outsb
daa
je
ja
jb
and
jns
outsl
jb
add
shlb
add
xchg
popa
addr16
jmp
sbb
adc
fadds
testb
enter
sub
js
outsl
loop
test
jle
ss
lcall
add
sub
pop
jmp
rcrl
mov
fnstsw
adc
inc
cmp
mov
xchg
in
dec
mov
xchg
or
cli
mov
inc
mov
ds
add
add
dec
imul
xorb
push
mov
push
mov
push
outsb
fyl2x
out
pop
repnz
xchg
scas
mov
test
cmpsb
dec
loope
sub
add
mov
mov
sbb
call
jecxz
mov
mov
scas
pushl
call
push
call
or
imul
add
pop
mov
subb
cmpsl
dec
adc
cmp
or
add
fwait
jns
jae
addl
mov
add
fs
adc
sub
rorl
add
int
push
test
xchg
addl
or
mov
inc
mov
nop
push
xchg
jl,pt
and
push
outsl
mov
andb
rcrb
cld
push
inc
outsl
push
or
sbb
cmp
dec
repz
mov
shrl
xor
pop
mov
mov
lds
das
mov
push
pop
sahf
mov
wbinvd
roll
adc
push
cmp
jbe
jg
insl
cmp
out
pop
cmpsb
jmp
mov
out
jp
or
xchg
mov
lea
js
repz
add
sbb
mov
inc
and
mov
jl
push
or
js
mov
mov
and
dec
ret
mov
or
test
and
lock
xchg
push
adc
jo
clc
addr16
sbb
cmp
flds
test
mov
cmpsb
pop
xor
dec
xchg
bt
stc
mov
pushf
clc
test
mov
pushl
jmp
cmp
mov
call
lea
jne
bt
stc
cmp
movzwl
movzbl
shrd
shl
sar
mov
clc
clc
add
stc
mov
bt
stc
stc
test
call
add
jmp
push
call
in
push
call
xchg
pusha
push
pushf
movw
movzwl
pushf
sub
rcr
mov
cmp
push
stc
clc
add
cmp
mov
test
clc
cmc
bt
test
jmp
push
call
inc
test
push
call
pop
subb
sbb
call
scas
mov
and
jne
bt
clc
cmc
push
cmpb
pushf
pushl
lea
jne
lea
pusha
movl
bswap
mov
pusha
pop
jmp
lea
jne
bt
cmp
test
jmp
push
call
push
or
adc
std
adc
add
lea
jne
push
lea
call
pusha
mov
lea
jmp
push
call
push
repz
pusha
inc
mov
pushf
inc
pushl
mov
mov
call
test
mov
pusha
lea
je
pusha
pusha
test
test
pushf
pushf
movb
lea
je
cmc
test
cmc
bt
and
pusha
pusha
pushl
lea
jmp
push
cmc
test
jmp
xlat
test
nop
fdivs
sbb
push
adc
dec
xchg
sub
je
push
and
pop
sbb
jns
clc
aaa
push
js
xchg
fwait
ret
lahf
fbstp
or
mov
jno
dec
sti
dec
loopne
inc
inc
jecxz
hlt
scas
mov
clc
insl
push
pop
in
mov
cmp
es
lcall
add
fmull
lahf
xor
push
cwtl
mov
shlb
ja
xlat
mov
loope
aam
lock
stos
outsb
xchg
mov
cmp
in
dec
xor
jge
imul
ficompl
jp
jmp
hlt
fildll
dec
adcb
and
jmp
xchg
jbe
fstps
aaa
pop
xchg
xor
shrb
or
ja
outsb
push
lds
push
cmp
fimull
or
outsl
push
pop
sbb
roll
sbb
xor
mov
xchg
clc
push
call
adc
add
inc
pop
roll
rcl
lea
fldz
pushf
es
in
sahf
test
xlat
cmpl
cmp
out
sbb
xorl
test
in
into
jmp
push
sub
unpckhps
mull
adc
cmp
xchg
mov
insl
ja
cmpsl
std
aas
idivb
cmp
adc
mov
or
push
jg
mov
fidivs
enter
dec
sbb
push
pop
pusha
and
jmp
jmp
lea
je
push
pushf
pushf
add
mov
movb
pushf
lea
jmp
push
movb
cmp
call
mov
mov
xor
mov
lea
or
adc
push
repz
imul
jne
stc
lahf
jmp
int3
ret
nop
sbb
mov
lret
xor
aaa
jns
mov
or
hlt
mov
xchg
inc
sbb
pop
rcr
jnp
dec
testl
inc
mov
lcall
mov
pop
adc
mov
daa
insl
std
xor
bound
inc
scas
mov
pop
cs
pop
gs
aas
push
push
pop
sbb
sub
pop
shrl
mov
popa
or
insl
dec
push
shl
jmp
push
pop
mov
jecxz
je
or
out
lea
push
mov
jg
lds
arpl
fs
jae
pushf
jmp
push
call
clc
loope
jle
mov
pushf
pushf
mov
jmp
push
call
xor
mov
cs
mov
pusha
dec
push
jmp
call
jmp
jmp
call
push
call
and
ja
clc
push
stc
imul
bt
clc
movw
bt
add
pushf
pushl
pushl
lea
jmp
inc
jmp
inc
pushf
dec
setl
inc
call
sub
and
mov
add
mov
xchg
lock
and
mov
add
mov
icebp
adc
and
ret
add
in
ljmp
add
movsb
jnp
iret
shlb
add
dec
xchg
call
sbb
clc
or
add
inc
sbb
clc
or
add
rclb
clc
iret
or
add
arpl
shld
clc
push
or
add
mulb
clc
rolb
add
mull
clc
inc
add
add
fwait
mov
or
and
or
add
dec
imul
bound
add
and
lea
add
push
jmp
sahf
or
add
pusha
sub
and
in
add
add
stos
push
cli
fwait
ret
and
insl
add
add
lock
add
add
sbb
shl
in
mulb
clc
cmp
add
adc
and
jg
add
sbb
decb
sbb
clc
or
add
inc
push
fsin
mov
add
add
ret
sar
shlb
rolb
add
in
mov
clc
adc
add
lret
aas
mov
test
adc
add
add
clc
or
sub
and
mov
add
nop
xchg
xchg
repz
sbb
clc
or
add
shrb
clc
push
add
add
outsl
adc
pop
shl
sbb
sub
mov
fmull
loope
outsl
and
lcall
or
pop
aas
je
mov
cmp
pop
mov
jno
mov
test
ss
fld
subb
sbb
call
jns
mov
lea
je
pushf
bt
call
loope
dec
cmp
push
pop
out
rcll
in
pop
xchg
xchg
jbe
ss
out
fisttpl
scas
fimuls
push
sbb
push
mov
lea
sahf
sub
and
adc
pop
jg
and
jg
xchg
and
inc
lds
add
data16
mov
mov
mov
push
sub
jmp
cltd
fwait
in
bound
sbb
gs
xor
cmc
dec
pop
sub
insb
xchg
lahf
out
sub
repz
add
leave
push
jp
cmpsb
stos
sbb
int3
shl
lea
dec
movsl
popa
push
inc
fs
out
sbb
scas
adc
adc
mov
cmp
ds
movsb
xchg
add
mov
sahf
clc
int
ss
mov
lcall
xor
adc
out
xor
mov
insl
push
int
lea
stc
test
in
push
stc
jp
adc
imul
inc
and
and
jg
ljmp
mov
rcrb
cmpsb
jl
or
stos
xor
in
call
pop
push
lfs
xor
fprem
push
mov
pop
xchg
mov
out
scas
xchg
and
pop
xor
add
loopne
cld
and
jmp
push
call
adc
cmpsl
shll
cltd
scas
inc
push
repnz
orb
push
imulb
jge
sub
into
inc
pusha
mov
or
js
nop
xchg
fwait
ljmp
lret
or
out
adc
loop
fcomip
js
add
insb
call
sbb
cmp
xor
and
lret
adc
or
xor
sbb
bts
mov
neg
bts
mov
mov
stc
pushf
test
cmc
sub
movb
pushf
clc
clc
shr
clc
pushf
pusha
push
cmpl
call
xchg
mov
push
data16
lcall
xchg
lock
std
jge
in
lcall
lods
int
in
xchg
shrb
bound
aas
jle
xchg
xchg
lods
sub
imul
lea
lcall
jae
jmp
ret
inc
in
jne
push
push
pop
stos
repz
push
add
shlb
adc
out
int3
cmp
notl
lods
popa
cmpsb
popf
popa
lea
push
jae
add
add
popf
dec
mov
repnz
in
adc
aas
fbstp
cmp
fwait
mov
lret
movsb
icebp
sub
fcmove
cmp
stc
xor
call
pop
test
cli
lcall
mov
ljmp
xchg
call
into
and
movsl
shlb
lea
jmp
lea
mov
push
push
call
lea
ja
shr
setbe
rcl
sub
stc
sar
add
adc
cmp
mov
or
mov
cmc
cmp
repnz
call
cmp
pusha
push
jmp
dec
clc
jmp
aad
dec
lahf
call
lret
ja
sbb
xor
mov
or
pop
jns
xchg
cmpsb
aas
pop
sbb
data16
push
js
add
bswap
int3
out
mov
or
inc
xchg
stc
cmpb
out
mov
addr16
popf
aaa
mov
or
popa
sbb
pop
insb
sbb
pop
popf
into
push
aam
jo
lcall
test
mov
mov
test
sub
cmp
cmp
jmp
out
loopne
data16
stos
and
in
clc
cmp
mov
stos
cmp
and
xchg
or
es
push
push
pop
jns
mov
push
in
sub
cltd
mov
mov
cld
pop
inc
sbb
cmp
jg
test
mov
roll
fmul
inc
mov
inc
mov
and
popf
movl
icebp
push
call
xor
scas
adc
xor
lea
jne
pushf
push
pop
pop
pop
lea
pusha
jmp
jae
leave
and
mov
in
mov
arpl
mov
call
pop
mov
pop
imul
and
mov
adc
jmp
or
or
jle
and
imul
mov
xor
out
push
aas
lea
or
pop
js
or
pop
pop
das
or
dec
scas
mov
cmp
dec
aaa
in
daa
add
cmp
orb
bound
sarl
dec
jmp
cwtl
mov
test
fstpt
icebp
stos
es
lahf
adc
pop
xor
test
push
clc
clc
repnz
pushf
pusha
mov
jmp
cmpsl
jo
test
xchg
mov
popa
mov
addl
sub
xor
int
gs
cmp
cmp
sub
or
push
inc
dec
add
dec
fistps
mov
cwtl
divb
and
inc
sub
and
or
sbb
sub
add
cmc
outsb
jb
lret
and
mov
addr16
mov
mov
scas
incl
fdivrs
and
add
ss
or
sbb
test
sub
push
push
mov
add
cmp
pop
pop
cs
sub
test
or
sub
lcall
fstpl
shr
fsubrl
daa
bt
stc
bt
sub
push
movw
jmp
push
call
push
cmpsb
cwtl
aas
or
add
testb
incl
mov
xlat
cli
sub
aam
mov
test
push
mov
repz
test
pop
das
mov
out
sub
lret
or
mov
pusha
outsb
mov
push
sub
mov
mov
lret
rorl
add
pushf
pushl
push
xchg
shr
shrd
cmp
mov
bt
ror
mov
jmp
call
lea
je
movzbw
clc
bt
mov
adc
dec
shrd
mov
cmc
cmp
push
jmp
mov
pushf
mov
movl
pushl
lea
jmp
push
add
cmp
fistl
sbb
inc
mov
orl
outsb
xor
sub
jge
sub
popf
sub
repz
mov
push
imul
xchg
sub
mov
call
mov
add
push
add
aad
outsl
or
push
cmpsb
in
loope
and
pop
jbe
les
cwtl
dec
cmp
sbb
dec
mov
sbb
dec
scas
fdivrs
lea
les
xor
fmull
pop
cld
aad
sti
pop
mov
xchg
out
sub
xchg
xorb
mov
shrl
sti
rolb
movsb
pusha
mov
dec
addl
rorb
jae
out
cltd
outsb
sub
adc
stc
lds
xlat
outsb
mov
jecxz
das
cmpsb
stc
adc
mov
jo
xor
aad
sbb
jnp
ret
xchg
loop
inc
cwtl
aad
fildll
push
pushf
jmp
lea
je
pushf
add
jmp
not
mov
bt
movb
jmp
lea
call
pusha
lea
jae
jmp
push
call
lock
popf
xchg
sub
push
jae
scas
les
fistl
xchg
mov
je
or
shl
and
enter
rolb
cmp
mov
inc
vsqrtsd
jb
es
sbb
dec
pusha
test
cmp
pop
dec
into
or
sub
xchg
and
push
shl
mov
jmp
nop
in
pop
sub
fstp
fcoms
mov
cmp
movsl
xchg
js
sbb
jecxz
and
mov
sub
or
cmc
cmc
cld
aad
cmp
mov
leave
or
xchg
sub
cmp
repz
iret
cmp
aam
das
mov
dec
iret
ljmp
cwtl
mov
aaa
addb
dec
push
sbb
mov
fisttpl
mov
mov
aaa
lret
xlat
cli
rclb
inc
or
add
nop
pop
jmp
dec
test
clc
cmpsl
mov
clc
not
push
clc
neg
mov
jmp
jmp
sub
fwait
imul
ja
repz
outsb
mov
push
popf
add
jmp
pop
cmp
in
add
push
lea
cmp
cmp
ljmp
pop
in
and
xchg
int3
in
mov
and
xor
sbb
leave
dec
pop
or
mov
insb
hlt
inc
lods
adc
mov
les
stc
lock
sbb
lea
je
shr
shr
mov
pushf
mov
call
pusha
lea
jae
push
lea
jmp
insl
xor
sub
push
cmp
jp
outsb
jbe
fidivrl
rorl
sahf
stos
and
lea
scas
push
sbb
add
jmp
push
into
mov
imul
loop
cmp
dec
push
pop
mov
jno
jb
mov
mov
xor
xlat
mov
and
mov
sbb
ljmp
call
test
stos
sbb
jmp
lea
jb
pusha
pushl
ret
jge
arpl
sti
and
movsl
imul
cwtl
pusha
jg
jnp
jp
add
pop
and
add
mov
jmp
shl
push
or
mov
push
dec
pop
pop
push
inc
enter
sbb
int
mov
pop
orb
cmc
mov
addr16
das
sbb
or
aad
data16
stc
or
pop
pop
call
push
call
cmpb
pop
push
call
mov
push
push
mov
movw
mov
push
pusha
movw
pushf
pushl
ret
push
call
sbb
mov
cmp
adc
ficompl
add
jbe
push
call
call
jmp
mov
xor
sub
pushf
cmc
cmp
pushl
lea
je
rcr
or
bsr
adc
mov
pusha
add
pusha
xchg
btc
btc
inc
btc
mov
btr
clc
mov
jmp
pusha
lea
call
pusha
pushl
push
push
adc
jmp
test
test
pusha
lea
je
cmc
clc
mov
cmc
add
cmc
cmp
stc
add
pusha
movw
lea
jmp
call
push
cmc
neg
jmp
cmp
shr
bt
push
test
movb
xor
bts
shl
rcl
setno
xor
setnp
bsf
dec
mov
lea
jmp
call
mov
call
sub
add
stc
sub
stc
sbb
mov
pushf
test
add
pusha
jmp
push
pushl
mov
movb
pushf
jmp
jmp
mov
push
call
pushf
movl
push
pushf
push
push
lea
jmp
pushf
popl
jmp
movl
pusha
mov
pushl
movl
lea
jmp
mov
mov
mov
pushf
pushf
mov
jmp
pushf
sub
test
movb
test
pusha
not
jmp
jmp
pushl
pushf
popl
mov
call
mov
mov
pushl
mov
call
mov
mov
push
pushf
lea
jmp
lea
rcr
pusha
rcl
lea
cmc
cmp
pushf
pusha
lea
ja
stc
dec
test
shl
mov
shl
lea
aas
aaa
xor
cmc
sub
not
cmc
lea
add
add
pushf
and
pushl
and
stc
sub
pop
lea
lea
mov
movzbl
bswap
pushf
bswap
pusha
mov
jmp
movw
mov
pushf
mov
call
cwtl
movsbw
aam
sbb
mov
xor
inc
mov
pusha
not
call
sub
mov
jmp
add
clc
call
mov
cmp
cmc
neg
jmp
bswap
movw
call
mov
push
pushl
call
add
pushl
mov
test
xor
call
jmp
push
shrd
pusha
mov
push
jmp
call
lea
jne
mov
pushf
pushl
pushf
popl
call
pushf
jmp
call
pusha
jmp
mov
pushf
movl
pushf
mov
lea
jmp
cmc
btc
rcr
ror
sbb
add
cmc
mov
shr
mov
xor
bswap
jmp
pushf
movl
pushf
pushf
mov
lea
jmp
mov
pusha
jmp
movb
pushf
popl
pusha
pushf
mov
pushl
popl
push
lea
jmp
clc
cmp
add
stc
stc
pushl
mov
shld
jmp
bswap
pushf
bswap
movzbl
mov
rcr
cmc
cmp
cmp
add
mov
push
push
push
mov
pusha
call
mov
movw
push
pushf
popl
movb
jmp
test
jmp
test
push
jmp
pushf
push
pushf
mov
pushl
lea
jmp
pushf
popl
mov
push
pushl
popl
push
lea
jmp
mov
movb
mov
movb
pusha
pushf
mov
mov
mov
call
call
bts
rcr
btr
mov
shld
btc
add
mov
clc
push
add
lea
je
mov
push
lea
jmp
mov
pushf
popl
jmp
add
call
call
not
btr
and
pushf
mov
test
clc
pushf
clc
sub
push
pushl
mov
mov
pushf
pusha
push
lea
jmp
not
call
add
jmp
add
pushl
mov
jmp
mov
movb
mov
movb
push
pusha
jmp
not
mov
call
jmp
pushf
call
sub
movw
cmc
call
lea
je
clc
stc
cmc
pusha
mov
bt
cmc
bswap
mov
call
pusha
mov
pusha
stc
cmp
sub
cmc
jmp
call
jmp
pusha
mov
pushf
mov
call
movb
movl
pushf
popl
movb
pushf
pushf
mov
call
mov
pusha
pushf
mov
call
pusha
call
mov
push
pushf
popl
jmp
jmp
pushl
popl
mov
mov
pushl
lea
jmp
sub
pushf
and
pushf
pusha
mov
pushf
popl
lea
jle
push
pusha
movb
pushl
popl
movb
movw
pushf
pushf
lea
jmp
call
jmp
mov
pushf
call
jmp
mov
call
pushf
push
mov
pusha
jmp
pusha
mov
movb
push
push
movl
mov
pusha
lea
jmp
movl
push
push
mov
mov
lea
jmp
mov
call
pushf
call
push
call
add
cmc
stc
ror
stc
stc
call
pushl
mov
lea
push
jmp
movb
not
movb
pusha
cmp
test
and
mov
movw
mov
pushf
mov
push
pushf
popl
call
pusha
call
sub
clc
bt
add
jmp
shrd
mov
xadd
mov
or
not
jge
mov
stc
add
cmc
jmp
movsbw
movzbw
inc
bsr
bswap
dec
sub
not
call
cmp
jmp
sub
pusha
not
bt
neg
bt
pushf
xchg
push
cmp
stc
cmp
sub
push
lea
pushf
stc
cmc
cmp
sub
pushf
call
mov
mov
push
movw
mov
push
pusha
mov
movl
push
push
pushl
pushf
lea
jmp
pushf
pusha
mov
push
mov
pushf
lea
push
jmp
call
call
pushl
popl
push
lea
jmp
mov
pushf
pushf
movb
movl
pushf
pushf
movb
pushf
lea
jmp
pushf
mov
jmp
mov
call
mov
call
sar
btc
mov
pushf
not
push
stc
jmp
push
mov
push
movb
mov
call
jmp
dec
pop
out
insb
dec
pop
icebp
push
pop
mulb
pop
push
rorb
insb
dec
pop
repnz
dec
pop
jmp
dec
pop
cli
ret
out
add
dec
pop
pushl
dec
pop
push
jne
pop
add
inc
dec
pop
hlt
jae
pop
lock
dec
pop
in
out
pop
add
dec
pop
jmp
dec
pop
jmp
dec
pop
or
pop
add
dec
pop
xacquire
std
orb
dec
pop
std
pop
dec
pop
repnz
dec
pop
push
rorb
dec
pop
jmp
dec
pop
std
pop
dec
pop
hlt
jae
pop
repnz
dec
pop
add
dec
pop
or
pop
dec
pop
shufps
push
pop
cmc
jno
pop
lock
dec
pop
repnz
dec
pop
push
jne
pop
or
pop
add
push
pop
in
out
pop
or
pop
dec
pop
repnz
dec
pop
push
jne
pop
add
or
adc
pop
jmp
dec
pop
lock
dec
pop
clc
inc
dec
pop
jmp
dec
pop
or
pop
or
pop
repz
hlt
jae
pop
out
add
dec
pop
out
add
dec
pop
dec
dec
pop
std
orb
dec
pop
add
pop
repz
add
lahf
dec
pop
add
pop
stc
or
clc
rorl
repnz
dec
pop
lock
dec
pop
repnz
dec
pop
repz
add
pop
add
dec
pop
add
dec
pop
add
pop
or
dec
pop
dec
dec
pop
push
jne
pop
add
pop
pushl
dec
pop
dec
dec
pop
add
pop
pushl
dec
pop
or
pop
add
pop
dec
dec
pop
jmp
dec
pop
push
pop
dec
pop
add
pop
repz
lock
dec
pop
add
dec
pop
add
pop
std
pop
dec
pop
xacquire
or
dec
dec
pop
lock
dec
pop
push
jne
pop
shufps
dec
dec
pop
add
pop
dec
pop
std
pop
dec
pop
add
pop
repz
lcall
dec
pop
repnz
dec
pop
repnz
dec
pop
std
popa
dec
pop
add
pop
in
cli
dec
pop
add
dec
pop
add
pop
std
pop
dec
pop
dec
dec
pop
std
pop
dec
pop
std
popa
dec
pop
pushl
dec
pop
push
rorb
orb
pop
dec
pop
in
sub
lock
dec
pop
push
rorb
xor
dec
pop
push
pop
dec
pop
clc
rorl
add
dec
pop
dec
dec
pop
repz
mulb
pop
push
pop
dec
pop
shufps
dec
pop
dec
dec
pop
lock
dec
pop
repnz
dec
pop
pushl
dec
pop
add
dec
pop
hlt
jae
pop
repnz
dec
pop
add
dec
pop
std
popa
dec
pop
in
out
pop
jmp
dec
pop
icebp
push
pop
in
cli
dec
pop
adc
dec
pop
repz
in
cli
dec
pop
in
out
pop
in
sub
hlt
jae
pop
cli
ret
add
dec
pop
push
pop
dec
pop
repnz
dec
pop
in
out
pop
repz
std
popa
dec
pop
lock
dec
pop
mulb
pop
or
dec
pop
repnz
dec
pop
icebp
push
pop
shufps
dec
pop
std
pop
dec
pop
or
jae
pop
or
sub
add
dec
pop
lcall
dec
pop
out
insb
dec
pop
repz
in
cli
dec
pop
out
dec
pop
out
insb
dec
pop
lcall
dec
pop
pushl
dec
pop
out
insb
dec
pop
add
dec
pop
cli
ret
adc
dec
pop
out
insb
dec
pop
jmp
dec
pop
jmp
dec
pop
jmp
dec
pop
out
insb
dec
pop
add
dec
pop
lcall
dec
pop
out
insb
dec
pop
std
popa
dec
pop
cmc
jno
pop
clc
rorl
out
insb
dec
pop
add
dec
pop
add
dec
pop
out
insb
dec
pop
dec
dec
pop
shufps
lahf
dec
pop
out
insb
dec
pop
repz
jmp
dec
pop
std
orb
insb
dec
pop
hlt
jae
pop
lock
dec
pop
or
dec
pop
out
insb
dec
pop
stc
or
adc
dec
pop
adc
pop
out
insb
dec
pop
std
popa
dec
pop
icebp
push
pop
push
pop
dec
pop
out
insb
dec
pop
push
pop
dec
pop
or
pop
jmp
dec
pop
out
insb
dec
pop
repz
repz
add
pushf
push
jmp
lea
jge
push
pushl
popl
pushf
lea
jmp
call
call
mov
pushf
mov
mov
mov
lea
push
call
mov
pushl
mov
pusha
push
lea
push
push
jmp
jmp
push
pushf
popl
push
mov
mov
call
call
pushf
call
call
jmp
pushf
jmp
pushf
popl
shr
test
dec
mov
call
pusha
pushf
mov
pushf
movb
pushl
movl
pushl
pushf
lea
jmp
dec
jmp
pushf
movw
mov
jmp
push
call
call
mov
pushf
popl
movb
lea
jae
pusha
pushl
popl
pusha
pushf
lea
jmp
push
push
movb
lea
je
pushf
mov
pushf
mov
push
push
jmp
mov
movb
pushl
movl
lea
jmp
sub
rol
cwtl
mov
lahf
inc
bsf
pushf
mov
std
mov
adc
cld
bt
jmp
add
pushf
cmp
bt
call
clc
jmp
pushf
shl
neg
bsf
shld
add
bswap
jmp
clc
clc
neg
bt
jmp
pusha
jmp
pusha
inc
call
jmp
lea
push
jmp
push
mov
push
pushf
lea
jmp
stc
cmp
shr
and
mov
pusha
test
cmc
clc
add
bt
shrd
call
pusha
mov
mov
call
sub
jmp
rol
not
shl
movzbl
pushf
test
cmc
add
pusha
inc
add
js
bt
cmc
sub
test
not
clc
pushf
stc
bt
add
pusha
call
call
shl
adc
movzbl
push
pushf
pushf
jmp
pushf
mov
mov
mov
call
mov
pushf
pushf
mov
jmp
mov
pushf
mov
pusha
pushf
popl
push
pushf
pushl
mov
jmp
add
cmc
setno
not
btr
shld
add
bt
bsr
add
shr
pusha
shl
add
jne
mov
pusha
test
cmp
bt
add
pusha
call
neg
mov
jmp
lea
jbe
pushf
inc
pushf
pusha
mov
lea
jmp
lea
jne
jmp
movl
pushf
mov
mov
movb
lea
jmp
push
push
pushf
popl
pushf
pushl
popl
pushf
pushf
pushf
movb
lea
jmp
mov
setno
bt
mov
pusha
movw
pushf
add
jmp
call
jmp
lea
jns
push
call
call
mov
call
mov
movb
movb
call
bt
mov
clc
movzbl
lea
push
pushf
not
bt
shr
xchg
shl
test
rcl
push
call
call
pushf
shl
push
movl
mov
call
mov
pushl
popl
movb
mov
mov
lea
jmp
pusha
call
pushf
push
pushf
mov
lea
js
push
pusha
pushf
mov
jmp
pusha
mov
pushf
pushl
pushf
jmp
clc
mov
call
jmp
clc
bswap
test
call
mov
movb
lea
jmp
mov
pusha
jmp
stc
and
sbb
add
adc
cmc
xor
xor
neg
or
bsf
add
lea
and
cmc
setne
and
btr
mov
cmp
sub
pushf
push
mov
pushl
mov
push
mov
push
push
lea
jmp
pushf
mov
push
pusha
pushf
jmp
mov
mov
push
call
push
movb
lea
push
push
pushl
jmp
lea
push
jmp
btr
clc
jmp
jmp
rol
sbb
shld
shr
not
adc
btc
jmp
pushl
popl
pushl
push
lea
jmp
pushl
mov
call
not
cmp
pusha
add
push
cmp
pushl
call
cbtw
call
pushl
popf
lea
jae
sets
lea
pusha
mov
pusha
setl
bswap
mov
setb
mov
push
pushl
ret
stc
cmc
pushf
neg
cmp
test
xchg
call
mov
pushf
mov
movb
push
lea
jmp
mov
movb
lea
jmp
pushf
popl
movb
call
push
mov
jmp
mov
pusha
movl
movb
push
lea
jmp
movb
mov
pushl
mov
pushf
call
jmp
not
jmp
mov
push
movb
pushf
popl
push
push
pushf
mov
pushf
mov
pushf
mov
pushl
lea
push
pushf
mov
jmp
pusha
mov
call
bts
dec
movzbw
mov
rcr
clc
mov
jmp
shl
test
mov
shrd
bsr
add
stc
rol
cmp
xor
jmp
mov
jmp
call
pushf
inc
pushf
jmp
dec
aad
stc
movsbw
mov
clc
jmp
jmp
push
mov
pushl
mov
call
shl
mov
call
lea
push
call
movl
push
push
pusha
pushf
lea
jmp
jmp
jmp
movl
pushl
pushf
push
lea
jmp
pushf
popl
call
pushf
mov
mov
mov
pushf
push
lea
push
call
movb
pusha
mov
pusha
call
sub
call
mov
pusha
push
lea
jmp
push
jmp
push
call
pusha
mov
movl
push
push
lea
jmp
sub
cmc
test
cmp
shr
movb
mov
pushf
pusha
movl
pushf
popl
jmp
bt
add
inc
stc
mov
and
rcl
and
sete
mov
pushf
sub
bt
test
cmp
shl
jmp
mov
clc
clc
call
mov
pushf
mov
pusha
call
stc
stc
clc
clc
pushl
bt
add
pusha
cmp
pushl
popf
push
lea
jmp
shr
rcr
rol
mov
stc
bt
jmp
cmc
not
cmp
mov
add
pusha
jmp
pushf
mov
jmp
mov
mov
pusha
mov
call
shl
mov
pushf
pushf
call
pushf
jmp
pushl
pusha
call
sub
stc
cwtl
bt
pushf
cmc
sub
lea
jle
push
push
mov
pusha
pushf
lea
jmp
movl
push
pusha
pushl
push
lea
jmp
pushf
mov
call
jmp
bt
pushl
add
call
xor
stc
jmp
push
jmp
clc
call
mov
pushf
movw
lea
push
pushf
mov
pushl
call
pusha
jmp
push
call
pushf
mov
pushf
jmp
jmp
test
jmp
push
pushf
popl
push
jmp
pushf
mov
movw
pusha
pushf
movb
lea
push
pusha
jmp
mov
pushl
mov
pushf
lea
jmp
mov
mov
pushf
call
push
pushf
popl
jmp
jmp
sub
jmp
call
sub
pusha
cmp
add
pushf
call
pushf
popl
jmp
pushf
mov
pusha
pushf
popl
call
movl
push
mov
pushl
pushf
lea
jmp
mov
push
push
pushf
pushf
popl
movb
pushl
popl
pusha
pushf
push
pushf
lea
jmp
add
push
pusha
lea
jmp
pushf
mov
pushl
pusha
movb
lea
jmp
pushf
and
pushf
jmp
mov
mov
pushl
pushl
popl
movb
pushf
push
pushf
lea
jmp
jmp
pushf
pushl
mov
jmp
pushf
mov
lea
jge
push
pusha
pushf
mov
jmp
jmp
pusha
movw
pushf
mov
inc
push
movb
lea
jmp
movb
pushl
popl
pushf
mov
mov
push
lea
jmp
mov
mov
pushf
popl
pushf
pushf
mov
lea
jge
push
push
movb
mov
movw
lea
push
call
call
call
btr
clc
ror
neg
push
pusha
inc
rcl
clc
ror
rcr
sbb
shld
neg
jmp
mov
call
not
pusha
cmp
movb
call
jg
push
pushl
pushf
popl
pushf
pusha
push
pushl
popl
push
pushf
mov
lea
jmp
pushl
popl
pushf
pusha
mov
lea
jmp
pushf
mov
push
call
das
mov
call
bt
pushl
add
pushl
pushf
popl
pushf
pushl
popl
mov
mov
mov
lea
jmp
sub
mov
clc
stc
sub
call
movb
jmp
mov
call
add
btc
movzww
ja
stc
clc
pushf
sub
bt
jmp
pushf
mov
call
bt
add
pushf
jmp
pushl
pushf
popl
push
pushl
pushl
popl
pushf
push
lea
jmp
jmp
adc
movzbw
and
not
mov
ror
mov
stc
bt
add
call
push
mov
pushf
movw
pushl
ret
sub
call
jmp
mov
pushf
push
call
lea
jl
inc
clc
add
push
mov
pushf
pusha
pushl
ret
call
pusha
movl
pushf
lea
jmp
pushf
movsbw
shr
mov
shrd
cmc
bt
sub
mov
pushl
not
clc
not
cmc
cmp
pusha
pushf
sub
stc
cmc
test
stc
and
call
ror
sbb
cmp
push
movzbl
push
mov
jmp
mov
pushf
movl
pushf
lea
jmp
mov
mov
jmp
pusha
movsbw
movzbw
mov
movzbw
lea
std
pushf
mov
push
mov
not
mov
pushl
cld
jmp
add
pushf
bswap
pushf
call
dec
sub
mov
shld
xadd
mov
cmc
rcl
dec
mov
stc
call
rep
shl
rol
mov
shr
bsf
btr
mov
cmc
bt
pushl
popf
mov
movl
mov
lea
jmp
mov
jmp
mov
call
mov
jmp
push
pushf
popl
call
inc
shld
rcr
btc
neg
not
shrd
inc
pop
sub
shrd
clc
inc
mov
pushf
sub
sub
xor
add
lea
xchg
mov
shr
shr
mov
inc
or
btr
add
movsbw
and
mov
clc
bts
xor
shl
call
pusha
mov
mov
pushf
jmp
movzbw
pop
pushf
pusha
mov
pop
pop
mov
movw
pusha
pushf
pushl
ret
movb
mov
lea
jg
pusha
lea
push
call
movb
jmp
call
jmp
bt
test
call
rcr
mov
test
cmp
pusha
sub
pushl
mov
mov
pushf
pushl
movb
pushf
lea
jmp
call
push
jmp
mov
pushf
push
pushl
movb
movl
pusha
pushf
lea
jmp
pushf
popl
mov
push
mov
pushf
mov
call
pushf
movl
movw
lea
jmp
jmp
clc
call
shl
notl
sbb
btc
movsbw
mov
call
movw
mov
pusha
pushf
lea
jmp
pusha
mov
call
jmp
movl
push
lea
jmp
rdtsc
xadd
bt
or
mov
add
adc
mov
pusha
call
call
mov
call
movl
mov
pushl
pushf
movl
push
pusha
mov
lea
jmp
call
pushf
pushf
popl
pushf
call
pushl
push
pushl
popl
pushf
lea
jmp
mov
mov
mov
lea
jmp
mov
lea
jg
push
mov
jmp
call
add
cmp
lea
cmp
jmp
pushf
bt
clc
cwtl
cmc
mov
sub
pusha
pushf
mov
pushf
pushf
lea
jmp
push
push
pushl
popl
pushl
pushf
lea
jmp
call
cmc
btc
mov
clc
test
pushf
cmp
sub
movb
jmp
call
mov
push
mov
push
mov
lea
call
pushf
dec
stc
ror
clc
pushf
not
movb
add
bt
cmc
pushl
stc
lea
pushf
xor
clc
cmp
sub
pushf
push
pushf
pushf
mov
pushf
mov
lea
jmp
mov
jmp
call
pushl
popl
pushf
mov
mov
lea
jmp
push
stc
xor
jmp
call
jmp
pushf
popl
call
lea
push
pushf
mov
mov
jmp
shld
xor
neg
movzbl
shld
pusha
rol
sub
shrd
rcr
mov
bt
pushf
call
call
push
mov
push
jmp
push
pusha
call
push
mov
pushf
movb
push
pushf
lea
jmp
pushl
clc
movw
sub
pushl
sub
jmp
mov
pushf
lea
jmp
mov
push
call
ror
clc
mov
setnp
bts
jmp
pushf
mov
call
pushf
pusha
push
pushf
popl
call
pusha
cmc
call
pushf
mov
pusha
mov
jmp
push
lea
push
pushf
mov
jmp
pushf
mov
push
movb
jmp
movb
movl
mov
pushf
pushf
call
call
xor
xor
mov
clc
test
add
cmc
push
xor
jmp
movl
movb
lea
jmp
jmp
bsr
mov
shr
cmc
mov
cmp
push
test
cmp
add
pushf
pushf
jmp
rdtsc
movzbw
mov
movsbw
mov
pusha
divl
jmp
mov
jmp
mov
jmp
call
push
lea
jne
push
pushf
lea
push
push
call
jmp
pushf
popl
call
test
pusha
stc
pushf
sub
test
shl
call
pushf
lea
push
call
call
pusha
mov
mov
call
lea
push
pushf
movw
mov
pushf
jmp
movl
movw
movb
pushf
lea
jmp
pusha
sub
clc
call
sub
bt
jmp
pusha
push
mov
pushl
call
add
call
mov
mov
pushf
pushf
lea
jmp
push
push
pusha
push
mov
push
jmp
jmp
push
mov
pushf
call
jmp
jmp
mov
pushl
pushl
lea
jmp
pushf
pusha
mov
pushf
call
push
pusha
mov
call
pusha
push
pushf
pushl
popl
mov
lea
jmp
pushf
popl
pushl
jmp
jmp
pushf
popl
call
push
call
push
pushf
push
pushf
pusha
mov
pushf
push
jmp
push
pushf
mov
pusha
pushf
lea
jmp
lea
jne
pusha
pushf
popl
pushf
call
call
pushf
movw
mov
push
call
push
movl
mov
pushf
lea
jmp
mov
mov
cwtl
mov
jmp
add
movl
or
stc
movsbw
mov
not
test
sbb
neg
xor
seto
neg
seto
movzbl
dec
mov
not
call
mov
pusha
jmp
mov
jmp
call
mov
aad
cmc
mov
and
mov
clc
bts
ror
rdtsc
mov
call
pushf
call
mov
pushf
jmp
mov
pushf
mov
movb
pusha
mov
pushf
pushl
movw
push
lea
jmp
lea
jl
neg
bt
add
pushf
cmc
pusha
cbtw
clc
cwtl
call
jmp
dec
jmp
cmp
bt
neg
jmp
push
mov
pushf
movb
pushf
pushf
lea
jmp
pushf
mov
push
pushf
push
lea
push
push
pusha
pusha
mov
call
bswap
mov
and
pushf
btc
shr
add
not
xor
lea
clc
movzbl
push
stc
shl
cmp
cmc
pushf
stc
add
xor
bsr
xor
mov
test
clc
movw
and
movb
pusha
jmp
cmc
add
call
jmp
movl
lea
push
jno
pushf
pusha
mov
pushf
pushl
call
mov
pushf
call
push
movb
jmp
adc
shl
bts
add
sar
xor
clc
neg
rcl
rol
add
push
neg
and
neg
pusha
rol
neg
mov
test
bt
add
pusha
mov
push
movb
lea
jmp
push
clc
push
sub
push
mov
cmp
movw
sub
pushf
mov
movb
lea
jmp
push
add
lea
jae
push
pusha
mov
pushf
popl
jmp
jmp
neg
call
movsbw
shld
and
mov
mov
cmp
test
pushf
add
pushf
pushf
jmp
movb
push
pusha
inc
bt
ror
call
call
pushf
mov
jmp
mov
push
movl
pushf
lea
jmp
movb
pushl
popl
pushf
push
lea
jmp
mov
pusha
mov
push
jmp
not
pusha
stc
call
pusha
call
adc
neg
mov
shl
add
pushf
mov
pushf
mov
movl
push
pusha
mov
lea
jmp
inc
clc
shr
mov
or
stc
mov
stc
bt
test
test
sub
call
jmp
pushf
popl
jmp
call
pushf
pushl
popl
pusha
pushl
lea
jmp
jmp
push
mov
pushf
jmp
sub
mov
mov
and
cmp
pusha
mov
cmc
sub
test
bt
cmp
shr
jmp
pushl
popl
movb
lea
jmp
jmp
mov
pusha
mov
pushf
jmp
call
pusha
cmp
mov
xor
pushl
pushf
jmp
mov
pusha
pusha
mov
call
mov
push
lea
push
pushf
jmp
pushf
push
push
jmp
mov
movw
pusha
push
mov
jmp
cmc
jne
not
mov
jmp
cbtw
stc
mov
cwtl
test
cmp
sub
jmp
pushf
mov
jmp
mov
movb
jmp
movl
movw
lea
jmp
sar
bsr
dec
sbb
mov
ror
cmp
setns
pusha
mov
pushf
add
jb
stc
sub
stc
shl
push
call
movb
mov
call
call
neg
cmp
xchg
clc
test
sub
pusha
pushf
test
lea
cmc
clc
push
test
sub
jmp
call
jmp
mov
jmp
btc
jmp
bt
add
clc
push
stc
mov
sub
push
mov
pushf
push
lea
jmp
mov
pusha
pusha
pushf
popl
push
call
pushf
mov
jmp
aas
bt
mov
mov
mov
cmc
stc
test
add
pusha
pusha
mov
pushf
pushl
movb
pushl
lea
jmp
mov
mov
call
pusha
pusha
pushf
pushl
pushl
popl
push
movb
movw
movw
lea
jmp
pushl
pushf
mov
pushf
lea
jmp
jmp
clc
xor
test
push
neg
test
jmp
bt
rcr
mov
ror
ror
mov
pushf
call
decl
push
jmp
daa
setno
rol
mov
or
bt
adc
mov
cmc
push
clc
sub
cmp
shr
push
call
