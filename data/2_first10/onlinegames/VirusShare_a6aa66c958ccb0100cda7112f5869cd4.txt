out
call
in
sub
andb
push
push
push
push
xor
pop
lea
fcomi
stos
push
ljmp
pop
xor
jmp
mov
pop
ja
test
add
loop
mov
dec
gs
in
in
dec
mov
xor
cs
jbe
dec
mov
insb
jmp
mov
push
call
pop
mov
jg
mov
push
push
push
push
push
mov
push
push
call
mov
and
adc
clc
lea
push
add
in
and
call
jbe
adc
adc
pop
mov
or
adc
pop
pop
pop
leave
ret
add
aaa
fstpt
push
xor
push
push
push
cmp
test
je
push
jae
adc
xor
mov
add
push
push
push
or
fwait
mov
lock
add
clc
fcomps
push
pop
mov
pop
insl
movzwl
ljmp
addr16
or
or
cmp
xor
cmp
mov
in
je
push
adc
pop
or
xor
cmp
jne
hlt
jmp
push
testb
push
pop
inc
cmp
push
cmpl
sbb
push
push
or
scas
dec
mov
adc
mov
pop
cld
sub
ret
lock
ret
repz
sub
inc
scas
ja
gs
enter
clc
inc
xchg
xor
sbb
sub
cmpl
je
adc
adc
data16
add
or
push
cmp
les
dec
and
lods
jmp
pop
push
fs
popf
insl
ret
insl
negl
test
gs
into
loopne
add
outsb
cmp
daa
push
or
add
jb
jb
sub
outsl
or
addr16
popa
add
insl
cs
lret
in
and
inc
ljmp
jb
pop
in
jae
out
pop
out
inc
lock
lcall
repz
outsb
xor
imulb
cmpsb
imul
pop
push
xor
xchg
fstp
fsubr
xchg
rep
or
push
mov
pop
mov
out
jmp
pushl
adc
adc
push
mov
ror
mov
inc
inc
dec
dec
test
jne
push
pop
jmp
lahf
xor
push
push
push
inc
push
xor
push
add
add
cmpb
subl
rclb
imul
sub
push
cmp
lret
push
jbe
push
cmp
xlat
cmpl
jne
and
fs
mov
mov
push
push
adc
pop
fcmovnbe
xor
or
adc
add
dec
scas
sub
and
jb
aas
jmp
ret
pop
pop
pop
or
mov
inc
xchg
xchg
mov
out
test
push
lea
mov
sti
mov
mov
inc
jns
mov
adc
data16
popf
cs
mov
adc
xchg
adc
xor
mov
and
fcomip
arpl
and
push
call
or
das
cld
incl
push
push
xor
mov
test
je
enter
push
push
add
test
call
imul
adc
andb
xor
sbb
inc
sbbb
cli
mov
push
mov
mov
inc
inc
test
jne
pop
adc
aad
mov
cmp
xor
rcrb
repz
gs
push
add
je
movsl
pop
lcall
fstps
add
mov
or
jne
cmpsb
fwait
lahf
lods
insb
inc
or
test
add
xchg
lret
inc
add
stos
mov
ror
in
test
push
push
test
inc
pop
jecxz
or
pop
fcmovnbe
fsincos
xor
loopne
mov
push
jb
xlat
sbb
add
mov
mov
add
dec
push
mov
in
mov
std
cmp
cmpsb
test
aaa
aaa
sub
data16
xchg
xchg
jb
inc
into
loopne
xchg
jne
xchg
outsb
pushf
pushf
insb
nop
mov
fstpl
pushf
in
loope
or
int3
cld
mov
xchg
or
clc
push
jg
mov
push
push
aas
cld
and
mov
orb
mov
and
insl
adc
nop
scas
jne
push
adc
call
sbb
jae
ret
ss
test
dec
inc
push
push
push
adc
adc
fwait
or
fldt
or
adc
loopne
imul
addl
sar
fwait
sar
sbb
add
ljmp
mov
popf
jle
stc
in
in
jl
inc
or
xchg
lahf
adcl
pop
jb
cltd
fcomp
cld
xor
gs
or
pop
inc
mov
sbb
inc
ret
int3
out
lock
and
add
flds
add
or
adc
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
mov
add
addr16
jl
pusha
xor
lcall
pop
pushf
stos
mov
imul
push
pop
jbe
rcrl
xor
dec
adc
xor
jmp
adc
dec
ret
arpl
incb
pop
add
outsl
arpl
push
call
ja
push
aaa
push
gs
bound
push
jb
jbe
insb
gs
cld
lcall
jae
gs
xor
pop
add
pop
pop
dec
pop
and
sti
filds
and
jo
push
outsl
imul
and
sbb
dec
pop
or
daa
imul
andl
cs
insb
cmp
sub
push
in
xchg
or
xchg
cmp
mov
cmpl
ljmp
push
jle
nop
add
inc
dec
mov
leave
dec
nop
cmp
dec
inc
dec
mov
inc
nop
push
xchg
dec
adc
dec
push
push
pusha
ljmp
add
add
nop
add
xor
mov
add
mov
add
add
pop
mov
int
mov
jg
push
jb
addr16
insl
and
outsb
outsb
outsl
je
bound
jb
outsb
and
pusha
mov
and
fs
adc
jp
fwait
out
mov
add
jl
push
setb
add
jle
out
add
xor
add
push
sti
mov
cld
daa
mov
mov
pop
jmp
push
stc
or
out
dec
push
imul
mov
push
je
or
loopne
and
add
xchg
xchg
out
into
or
add
add
add
add
pop
add
add
cmp
jbe
andb
xor
pop
in
mov
add
shl
dec
dec
pop
cmp
leave
pop
fs
in
and
pusha
add
jo
or
bound
mov
sub
xlat
push
andb
shrb
popa
je
sbb
in
jp
cld
fs
loopne
inc
push
push
pop
mov
xor
lock
add
arpl
pop
sahf
frstor
push
dec
cmp
insb
outsl
arpl
sti
add
cwtl
xchg
pushw
call
popl
in
out
lcall
add
jne
jle
outsb
add
ds
shlb
and
loopne
add
enter
loope
shll
pop
insb
je
shll
mov
dec
xlat
mov
clc
cmpsb
imul
cmpsb
imul
cmpsb
imul
and
je
shrl
pop
add
cmp
sbb
hlt
ffreep
ss
jae
into
pop
add
out
pop
pop
add
je
pop
xchg
imul
shll
jo
dec
shll
stos
mov
dec
shll
enter
mov
cld
push
out
out
mov
jmp
xchg
sbbb
pop
mov
dec
cs
pop
mov
add
gs
addb
in
mov
add
out
mov
xor
adc
sar
add
cmp
je
jb
gs
cltd
fs
andl
int3
std
push
gs
fs
sub
dec
jo
outsb
push
jb
inc
stc
dec
rcll
dec
dec
inc
push
imul
std
and
add
and
or
cmp
fstps
aaa
sbb
or
add
neg
or
add
inc
enter
dec
and
mov
or
xchg
testl
das
pop
add
gs
ret
ja
push
or
and
or
test
mov
or
incl
and
add
sub
mov
sbb
xchg
inc
xchg
sub
inc
xchg
inc
sbb
pop
add
push
enter
lods
push
rorb
cmpsl
rorl
pop
das
xor
or
jb
add
and
pop
xor
movhps
pop
or
imul
lcall
add
jae
push
packsswb
je
jne
jb
gs
dec
xlat
cmp
pop
push
incl
jne
gs
add
push
inc
jb
push
and
mov
ja
or
push
mov
jae
pop
and
xor
fistpl
or
sbb
pushl
push
neg
push
pusha
clc
ror
push
inc
call
decl
mov
push
lea
jmp
and
and
jnp
outsb
imul
testl
cmpsl
aas
hlt
data16
dec
fisttps
push
testl
xchg
jo
lret
jno
gs
inc
js
std
mov
je
fsts
fbld
je
outsl
outsb
xor
cwtl
add
mov
rcr
notb
sti
je
jo
jne
add
jb
aas
cs
pop
cs
add
lea
jb
arpl
popa
insl
push
dec
inc
push
push
inc
push
inc
fistpll
pop
dec
imul
cmpsb
outsl
ja
and
pop
inc
jne
jb
insl
mov
mov
sbbl
inc
popa
jb
out
sti
jg
jno
data16
cs
push
mov
test
je
or
mov
std
inc
movsb
push
mov
repnz
mov
and
fwait
jg
aas
pop
pop
movswl
mov
testb
inc
add
inc
in
movzwl
xor
sarb
or
test
sbb
or
dec
pop
hlt
or
and
jge
adc
sbb
dec
je
pop
sub
inc
popa
push
push
sub
pop
dec
fs
shll
imul
pop
subb
and
cmp
les
add
imul
mov
es
pusha
cmp
cmp
call
outsl
popa
mov
mov
jb
jns
push
mov
insl
roll
push
xchg
add
int3
outsl
adcl
mov
stos
punpcklwd
push
xor
inc
hlt
js
popa
push
push
mov
cmp
lret
test
cmp
out
mov
add
pop
fcoml
bndldx
in
mov
pop
outsb
lcall
jg
jmp
pop
sbb
pushf
fstpl
push
add
in
push
push
jg
out
push
dec
mov
out
in
adc
push
mov
andl
push
push
mov
xchg
jne
jne
jle
push
mov
rorl
call
jg
push
in
mov
push
push
push
call
in
add
sti
pop
dec
mov
sub
sub
mov
movb
inc
or
movb
jbe
add
sti
push
push
xor
sbb
jne
inc
pop
orl
cs
insl
out
jmp
push
pop
ret
mov
lock
jo
dec
out
lods
dec
push
add
into
insb
fstpt
or
add
mov
sbb
out
jb
mov
push
call
xchg
pop
insb
and
sbb
push
movzbl
ss
jbe
pop
jno
mov
adc
clc
add
mov
andb
mov
or
push
aas
outsb
mov
pushw
cmp
pop
jl
push
aaa
xor
mov
jg
nop
mov
movsb
test
jne
ret
cmpw
jne
mov
movsl
cmpsb
clc
cmp
lret
movsb
jne
inc
push
pop
pop
adc
arpl
jo
add
sti
nop
adc
jb
adc
pusha
inc
add
sbb
and
add
jae
sub
push
jne
or
outsb
ret
push
jle
push
int
push
push
xor
call
mov
cmp
jg
add
mov
mov
sub
sbb
mov
push
push
dec
or
pop
and
pop
mov
xchg
faddp
jbe
adc
dec
mov
pop
sbb
sub
fiadds
call
push
or
and
repnz
cld
cwtl
decl
rclb
jne
mov
jo
movl
pusha
adc
jge
movsl
add
mov
inc
inc
fisubs
push
xchg
and
fisttpl
arpl
mov
lock
mov
mov
fildll
mov
or
xchg
mov
inc
enter
mov
js
sti
pop
dec
pop
mov
push
jmp
andb
dec
add
cmp
ja
jmp
das
pop
ret
ret
adc
adc
lods
push
push
cmp
jbe
cwtl
push
div
or
add
push
inc
clc
push
and
xchg
sar
sub
inc
cmp
jb
mov
pop
pop
leave
stc
and
and
pusha
jo
adc
or
jo
sub
add
mov
add
sub
push
jp
cltd
dec
push
xor
pop
outsb
fwait
jl
lock
pop
jmp
adc
push
idivl
adc
cmp
lods
pop
push
std
fistps
fidivrl
or
jle
xor
cmp
jle
clc
ljmp
mov
cmp
ja
fsubr
mov
push
outsl
or
adc
je
test
cmp
lock
mov
jg
mov
and
jne
cmpl
daa
incl
mov
cmp
jne
xor
fnsave
clc
xor
int
int3
clc
add
add
popa
hlt
add
rcrl
jl
and
in
sahf
inc
cmp
mov
out
pop
test
inc
or
add
fnstenv
aaa
decl
pop
add
clc
out
or
pop
pop
add
or
arpl
adc
leave
insb
iret
cwtl
cvtpi2ps
xor
imul
dec
addr16
leave
jge
and
xchg
sub
mov
scas
std
faddl
ja
jne
cmpw
ja
xor
testb
add
scas
jmp
or
rcll
mov
or
shlb
aaa
ret
add
pop
push
dec
je
mov
and
outsl
data16
cmpb
push
mov
dec
lods
js
aas
enter
je
push
jmp
adc
pop
sub
fbstp
and
xchg
or
sti
scas
mov
xchg
ljmp
inc
idiv
adc
mov
call
inc
inc
jmp
andb
add
incb
mov
jmp
xor
ficoml
inc
push
push
enter
stc
inc
jo
adc
add
pushf
pop
and
jo
adc
adc
cmp
jne
adc
incb
add
jmp
add
dec
test
adc
jno
adc
pop
imul
mov
gs
ja
xor
dec
jbe
cmpb
xchg
pushl
movb
inc
cmp
jb
lock
ljmp
decl
add
andl
push
or
inc
sub
rclb
and
or
imul
adc
sbb
shll
add
aaa
ss
ret
adc
in
push
add
or
loopne
cmp
jae
incl
in
pop
jo
lret
shr
add
imul
mov
test
insl
jmp
or
inc
mov
mov
jne
shll
lock
lea
fcomps
sti
mov
cld
rorb
rolb
or
rcll
cli
or
mov
add
jne
cmp
push
cs
cmp
push
or
inc
es
pop
leave
inc
jl
outsl
fisubrl
push
xchg
pop
jbe
or
cmp
mov
not
loopne
and
push
jl
and
or
add
lea
pop
push
xlat
sbb
out
or
mov
add
mov
shll
repnz
not
and
testl
lea
test
or
js
add
test
outsl
push
aam
or
fisubs
fimull
add
pop
push
adc
pushf
cmp
cmpsl
and
shr
in
mov
shl
push
pop
inc
sub
mov
and
not
fistps
cmp
add
repz
mov
rorl
push
shr
or
add
dec
daa
pop
insl
fstpt
push
fisttps
jl
sbb
cli
push
lods
loop
mov
push
push
ja
shl
pop
jle
not
and
shlb
adcb
sub
xchg
rcr
mov
xor
add
loopne
fiaddl
fwait
popa
xlat
or
mov
loope
stc
sbb
inc
xor
fisubl
mov
shrb
out
sbbl
imul
add
add
pop
pop
mov
out
xor
add
in
repnz
sbb
les
repz
das
outsl
fwait
ja
fcomps
addl
repz
divl
fisubrs
pusha
adc
arpl
pop
das
pop
scas
testl
stc
fcmove
outsl
cmpsb
pop
les
subb
add
movd
add
inc
sti
sub
sub
fcom
lcall
fdivrs
and
sbb
rcrl
xchg
aaa
fbstp
les
adc
sbb
fmull
or
out
fcoml
lods
es
in
cld
add
and
fidivrs
in
mov
cmp
enter
das
push
mov
cmpsb
jb
std
jo
mov
xor
cmp
or
cmp
idivb
or
popa
adc
add
or
mov
outsb
mov
ljmp
and
aad
aam
lods
jge
mov
bound
sbb
add
shlb
clc
jg
jge
fldt
inc
mov
rclb
push
fadds
hlt
or
daa
clc
jb
mov
push
pop
pop
es
adc
repnz
adc
and
inc
mov
mov
lock
call
lock
icebp
imull
mov
pop
lods
hlt
pop
adc
call
adc
mov
lods
mov
jge
repz
push
adc
add
pop
ret
and
in
pop
and
mov
cmp
cmp
jge
cli
fnstcw
out
fwait
pop
jg,pt
or
add
mov
mov
mov
out
loope
repnz
jl
sbb
loopne
ret
inc
enter
sti
add
pop
aaa
or
mov
push
fbstp
inc
fimuls
lcall
hlt
adc
cmp
xchg
jbe
call
repz
adc
inc
loop
shr
or
xlat
lea
mov
fdivs
test
mov
add
jo
fdivrs
mov
daa
mov
and
sub
aad
flds
outsl
cmp
cmp
push
movl
xchg
dec
fisttps
sub
adc
or
xor
test
outsl
inc
cmp
jmp
add
test
leave
insl
mov
xor
mov
xor
data16
or
cs
mov
out
inc
js
lds
popa
popf
insl
adc
outsl
outsb
aaa
inc
sti
xor
mov
repnz
or
in
call
call
in
fs
jo
inc
inc
ljmp
movsl
neg
fsts
iret
fimuls
cltd
lret
jb
repz
clc
jb
pop
pusha
dec
mov
fistpll
xlat
xchg
cli
xor
push
jo
mov
mov
or
mov
jo
jle
sub
mov
ret
lock
cli
daa
mov
fsubp
sbb
fidivl
cmc
test
cwtl
fstpl
jae
adc
fidivs
test
aaa
or
cmp
pop
sahf
add
or
push
aas
repnz
cmp
rcl
fstps
jmp
les
in
jle
scas
pop
mov
ss
in
mov
aaa
jp
jl
pop
je
dec
aaa
jl
xchg
pushl
or
aam
gs
lods
sbb
cmp
cli
mov
aaa
sbb
sbb
adc
pop
mov
sub
push
or
in
mov
or
int3
or
mov
push
or
bnd
inc
mov
stos
adc
lret
lock
hlt
add
push
fidivrs
mov
adc
xor
xor
sbb
mov
gs
sbb
rcrl
or
lock
int3
or
push
mov
pop
pop
or
ja
jno
sahf
pop
rorb
hlt
out
call
pmaxub
fwait
adc
in
rcrl
test
and
out
jmp
dec
xor
cmp
push
dec
jle
outsl
jecxz
pusha
jnp
push
jp
sbb
int
cld
xchg
stos
xor
sbb
out
jecxz
jp
inc
aaa
xchg
fcmovnb
cmp
mov
push
adc
add
mov
mov
jle
test
lret
jp
xlat
sbb
fstps
xor
cmp
loopne
mov
fiaddl
mov
and
lret
adc
repnz
repz
cs
int
xchg
roll
dec
mov
xchg
mov
pop
jge
xlat
pop
add
pop
movsb
mov
push
add
pop
rcrb
lods
xor
pop
adc
js
cmp
inc
xchg
adc
pop
cmp
jl
sbb
aaa
and
sub
push
push
push
es
rcll
inc
or
sbbl
push
insb
js
adc
mov
fldt
jle
xchg
lahf
inc
inc
fistl
pop
inc
addr16
iret
jb
sti
push
clc
mov
mov
into
ljmp
rcrb
sbb
cmp
jne
pusha
sti
out
enter
cmpb
lea
je
push
pop
xor
sub
dec
xchg
cs
pop
inc
and
or
lea
inc
push
fmuls
sub
pcmpgtw
aam
mov
add
repz
add
stos
stos
rorl
scas
cmp
sbb
xchg
push
mov
mov
call
je
fidivrs
or
cld
call
sub
mov
pushl
mov
push
insb
push
mov
dec
cmp
out
or
testb
xchg
or
arpl
int
xor
inc
lea
clc
pop
adc
sti
mov
pop
mov
dec
fdivrs
int3
push
loopne
pop
int3
cmp
mov
rolb
aam
call
fwait
push
xchg
push
dec
std
call
mov
imul
push
repz
in
out
or
call
gs
iret
out
das
lock
jo
hlt
imulb
negl
mov
pushf
mov
call
jae
or
jo
add
js
inc
call
add
jnp
sbb
fcomps
mov
lods
xchg
mov
lea
xrelease
lods
outsb
xchg
pop
rol
fimuls
fmull
inc
push
pop
inc
push
pop
add
in
loopne
and
fildl
or
lcall
mov
add
dec
out
push
out
push
lock
or
inc
repnz
mov
mov
mov
lock
mov
or
mov
dec
cmp
add
inc
sub
mov
dec
andb
test
or
push
movb
push
and
or
mov
pop
xor
and
or
jbe
sbb
out
cmp
xor
push
lock
adc
add
push
es
xor
ret
xchg
je
testb
imul
cld
das
jo
pop
popa
sub
push
jbe
cmp
fistpl
lods
adc
push
adc
ret
push
mov
sbb
mov
mov
lea
les
testl
and
dec
jne
adc
and
test
arpl
imul
and
adc
popf
and
lea
jb
dec
jbe
adc
sub
cltd
sub
sbb
jbe
ret
mov
mov
pop
add
jle
lock
hlt
in
sbb
jbe
push
push
mov
call
dec
sbb
push
mov
hlt
lods
inc
inc
inc
inc
insl
jge
fcmovnu
mov
jb
pop
jmp
cmp
jne
icebp
add
mov
repnz
push
loop
dec
or
or
int3
idivb
adc
andl
mov
outsb
or
subl
dec
cld
pop
jb
sub
pop
bound
push
push
test
roll
mov
out
jg
jl
subb
push
je
dec
dec
std
mov
jne
pop
push
arpl
pop
orl
das
fsubrl
xchg
push
insl
sbb
in
xchg
xor
push
mov
push
aad
push
sbb
push
in
dec
jne
ficompl
cwtl
cmp
inc
orl
ret
addl
fisttpll
into
dec
jo
xchg
inc
add
fcoms
jb
adc
mov
xorb
or
sahf
xchg
sub
or
lea
cmp
call
loopne
xchg
and
mov
cmp
cmp
and
aaa
clc
inc
push
outsb
test
prefetch
cmp
fdiv
or
mov
xor
jo
push
jo
adc
xor
sahf
or
lret
and
test
inc
jbe
mov
push
inc
call
and
or
xor
or
or
push
je
js
out
ss
jne
dec
or
inc
add
je
cmp
jne
cmp
jnp
in
add
dec
out
jnp
adc
dec
push
pop
clc
mov
fildll
mov
stos
sub
and
int3
aaa
ret
addb
and
clc
mov
sbb
add
les
and
pop
mov
cmp
fmull
cmp
and
ret
enter
jae
inc
jmp
inc
push
or
add
lods
add
fistl
xchg
xorl
xchg
inc
mov
push
push
nop
sub
movsb
outsb
mov
test
adc
mov
jmp
push
and
push
push
fnstcw
and
mov
pop
add
mov
push
jg
cmp
pushl
cmp
cltd
stos
fldcw
fdivr
movsb
leave
andb
mov
outsl
or
sti
sub
mov
pop
cmp
jg
std
pop
call
mulb
call
test
xchg
clc
cmp
pusha
iret
xor
mov
pushf
push
mov
pop
outsl
mov
push
movsb
neg
mov
decl
int3
cmp
mov
loope
add
mov
mov
mov
jae
cmp
je
jo
add
sbb
pop
dec
mov
cmp
shlb
hlt
fwait
mov
xchg
in
sbb
pop
mov
pop
pop
call
add
fcoml
mov
cmpb
adc
inc
je
jmp
cwtl
xor
idiv
xorb
xchg
adc
jmp
dec
outsb
lods
mov
mov
cmp
ss
mov
test
shlb
lahf
push
push
decb
adc
pusha
stos
or
std
inc
push
jo
push
out
inc
sbb
mov
nop
leave
lods
lods
push
lret
in
scas
insl
mov
mov
mov
mov
jb
pop
cs
mov
mov
mov
mov
mov
hlt
jb
outsb
mov
rcl
js
mov
jo
insb
aam
aad
mov
lcall
fistpl
pop
mov
xor
loopne
test
loop
jecxz
mov
mov
pop
in
push
out
dec
out
xor
insb
fwait
call
jle
jae
xor
shll
imul
sub
sbb
outsb
mov
les
lds
mov
lcall
lret
cmp
scas
imul
xchg
xchg
mov
lcall
pushf
adc
jnp
mov
mov
mov
xchg
inc
mov
cmpsb
xor
mov
fwait
cmpsl
test
push
test
or
xor
clc
ds
hlt
cli
jns
inc
or
xchg
lea
dec
xor
shl
jno
or
pop
xchg
jb
imul
dec
jbe
or
jo
aaa
xor
lret
pop
jne
pop
jb
int3
jae
lret
and
int
data16
idivb
in
and
xchg
xor
hlt
jp
mov
pop
lcall
cwtl
pop
mov
daa
jne
pop
xchg
xchg
sub
stos
aas
enter
mov
shrl
das
or
jg
lea
xlat
in
outsl
sar
sub
push
inc
jge
sti
test
adc
shlb
shl
and
inc
push
dec
out
cli
out
pushf
pop
cli
mov
mov
inc
ret
sbb
daa
fidivrs
lds
inc
sub
outsl
xchg
sub
sbb
adc
movsl
adc
add
jmp
sbb
mov
adc
cmp
aas
mov
add
movsb
nop
repnz
pop
mov
sub
std
push
lcall
adc
xor
aaa
push
cmp
push
adc
std
add
xor
stc
push
jne
push
subl
jle
test
push
insl
bound
fucomip
inc
add
out
je
loopne
std
out
push
bswap
in
pop
xchg
out
sub
cld
call
cld
xchg
jo
enter
jg
inc
mov
pop
lret
and
pop
pop
loop
test
ret
push
push
lea
push
cmp
scas
and
mov
fcoms
add
test
les
lcall
jns
cmp
push
sub
mov
outsl
insl
cmp
je
insb
xchg
xor
add
fcoms
test
cmp
in
cmpsl
mov
std
incb
adc
sbb
ret
aad
mov
inc
add
lahf
addr16
and
int
lods
testl
cmpl
add
push
jne
push
dec
xchg
sbbb
add
sub
add
sbb
jnp
xchg
and
and
fsubs
test
push
mov
cmp
dec
xchg
mov
cmp
cmp
testl
mov
out
lea
push
mov
fstpt
call
inc
push
push
xorl
sar
sbb
add
insb
mov
fbstp
or
into
inc
or
adc
jmp
and
fcomps
sub
jmp
push
add
insb
hlt
adc
or
ds
inc
fs
mov
das
popa
or
in
andl
fwait
or
call
lock
fsubrl
loopne
mov
mov
ret
nop
mov
scas
mov
xchg
or
idivl
cld
test
mov
loop
or
int
jp
dec
rol
iret
imul
dec
push
imul
fidivl
fildl
frstor
jae
fbstp
xor
xor
sub
mov
lcall
shll
lcall
mov
add
dec
mov
xor
mov
outsb
dec
shll
xor
enter
pop
lret
pop
cs
in
out
mov
jmp
ljmp
jb
push
repnz
inc
add
cmc
mov
mov
push
cmpsb
mov
mov
mov
addr16
jb
pusha
sub
push
add
cmp
add
pop
xor
push
hlt
dec
subb
mov
in
mov
int
pop
jl
mov
push
inc
jmp
or
sub
sub
gs
add
sub
xor
push
jb
shll
imul
call
lock
sbb
jb
xor
xor
cs
insb
je
int
jmp
js
dec
lods
xchg
push
daa
add
data16
sub
aam
jbe
or
cmp
scas
test
fcmovnb
movsl
inc
loopne
jb
push
fsubrl
sbb
stc
sub
stc
and
test
xchg
out
pop
and
xor
push
dec
ss
rcl
popa
es
cmp
push
push
dec
fsubl
adc
or
push
fmuls
add
mov
mov
mov
in
xchg
insb
xchg
clc
lock
jge
cmp
and
fldl
or
lret
sub
dec
xlat
mov
aaa
sbb
fistl
inc
in
mov
dec
hlt
in
fstps
shll
fidivl
sub
inc
xchg
call
adc
jo
bound
in
push
or
jne
loopne
inc
int3
xor
and
mov
mov
test
jmp
mov
insl
xor
adcl
mov
add
je
and
jae
mov
mov
mov
imul
mov
lcall
pop
mov
mov
adc
fldt
mov
enter
xor
lret
fs
int
das
into
lcall
rcl
shr
lcall
pop
xlat
aaa
fsubr
call
mov
shrl
scas
ficomps
fnstsw
jae
loop
fnstenv
dec
jecxz
in
pop
out
pop
mov
lcall
in
daa
in
cmpsb
jmp
out
fs
es
jae
repnz
imul
loop
addr16
add
fsubl
mov
pop
stos
or
inc
adc
jae
add
fwait
dec
xlat
pop
cld
or
mov
mov
and
cwtl
sbb
jno
in
iret
ja
xchg
ds
enter
or
loop
mov
pop
cmp
sbb
stos
dec
lds
xor
call
jb
mov
pop
add
inc
sbb
jno
adc
jmp
lcall
adc
sti
and
cmp
mov
xor
inc
fdivs
cmc
test
jmp
rorb
sub
pop
add
xor
pusha
cmc
rcl
neg
mov
jmp
adc
add
push
xor
mov
or
jae
andb
ret
lock
push
stos
or
and
shr
and
pop
xor
add
adc
mov
call
lret
fsub
lock
pop
pop
mov
les
jbe
mov
ds
mov
movsbl
add
rcrb
cmpsb
pop
mov
je
sbb
xor
call
dec
call
sti
xor
pop
lods
add
adc
pop
lock
movsl
repnz
leave
and
add
movsb
jbe
push
icebp
pop
adc
decl
and
push
pushl
lea
jmp
dec
addr16
bound
xor
mov
popa
add
mov
je
icebp
test
fs
mov
mov
push
push
mov
cmpsb
xor
push
push
sub
push
adcl
imul
push
mov
push
jmp
in
mov
outsb
loope
lods
add
xchg
cmp
enter
outsb
sbb
orl
ja
sub
clc
mov
ljmp
in
add
ljmp
add
xchg
clc
xor
cmp
cwtl
pushf
cmp
test
sbb
aad
mov
js
inc
ret
std
mov
ljmp
cmp
inc
into
mov
popf
addb
rorl
cmp
scas
pushf
mov
pop
mov
movzbl
pop
clc
in
or
fdiv
rol
stc
adc
shl
shl
hlt
jg
inc
not
and
or
lds
sub
lea
call
or
push
pusha
jmp
xchg
or
mov
sti
pop
push
pop
cmp
popf
xchg
xchg
sti
pop
mov
cmp
xor
pushf
dec
mov
jnp
mov
es
ja
mov
aaa
push
call
add
mov
pushl
cli
clc
mov
orb
rcrl
push
add
shl
movsb
push
divb
pop
sti
push
in
xor
pushf
test
popf
pushf
push
jle
jg
std
int
push
push
mov
cmp
not
push
ret
or
jmp
inc
jo
mov
pop
push
pop
mov
outsl
mov
inc
and
sub
faddl
aaa
push
vpunpckhbw
and
cmp
fstl
mov
add
jb
out
ja
icebp
pop
sbb
push
pusha
adc
push
sub
testl
add
ja
adc
jo
ffree
cmp
push
jmp
popa
das
dec
and
rorb
or
aas
inc
test
insl
adc
gs
sti
je
jns
js
cmc
cli
adc
hlt
add
inc
mov
stos
dec
outsl
jns
xchg
iret
inc
xlat
ds
jge
ret
pop
xchg
mov
pop
ds
ss
mov
sub
cli
pop
cltd
cmp
add
cmovo
xchg
sub
mov
pushf
mov
dec
loopne
adc
cmp
cmc
sti
sub
sti
mov
stos
mov
pop
xor
mov
rcll
add
adc
jl
pop
add
jge,pn
sub
xchg
mov
notb
and
mov
add
in
std
sbb
fisttps
push
inc
cwtl
popf
add
and
jns
fs
jg
test
inc
or
add
mov
adc
inc
into
jmp
add
and
mov
cmpsb
lods
negb
sub
sahf
add
mov
dec
cmp
xor
fcoms
mov
sbb
add
jo
or
jbe
lcall
insb
cmp
pop
pusha
xor
lea
xchg
fdivs
mov
leave
xlat
sub
xchg
pop
test
jb
mov
adc
std
sub
imul
fcomps
xorb
and
cli
sub
orl
aam
sub
adc
nop
push
in
pop
mov
jns
sbb
out
ret
mov
or
fiadds
mov
xor
ja
adc
adc
addr16
or
sbb
call
aad
mov
xchg
mov
stc
jmp
pop
fnop
and
add
mov
adc
bound
push
sbb
mov
mov
rorb
push
push
jp
mov
pop
adc
pop
call
fdivrs
fidivs
sbb
cmp
je
adc
sbb
lods
ret
std
mov
cmp
or
pushf
mov
je
push
or
stos
js
sub
push
in
pop
pop
insb
mov
pop
sub
add
xchg
inc
jl
push
into
inc
adc
pop
repz
push
aaa
loopne
sbb
repnz
xchg
cmp
lds
rorb
les
clc
lret
mov
sbb
sub
shrb
fcomp
in
aam
inc
or
iret
cmpsl
pop
dec
push
inc
mov
adc
cmpsb
mov
jo
scas
adc
sarb
push
mov
add
jne
sub
sub
sbb
and
shrl
mov
and
pop
mov
in
pop
jb
dec
lds
inc
rol
push
dec
pop
outsl
mov
or
inc
xor
or
pop
jnp
mov
das
push
cltd
mov
or
inc
or
loopne
cmp
and
mov
hlt
xor
add
adcl
add
sub
arpl
pushf
push
test
sbb
and
push
ret
adc
or
sbbb
add
push
icebp
insb
hlt
push
xor
push
inc
push
gs
xchg
gs
dec
dec
dec
inc
xchg
gs
xchg
push
cs
insb
dec
xor
sub
dec
push
xchg
je
gs
xor
shll
imul
imul
pop
dec
je
cmp
gs
jo
push
gs
xchg
gs
gs
cmpsb
jnp
je
xchg
inc
xchg
xchg
xchg
jne
mov
cwtl
push
ds
lcall
roll
sahf
lahf
mov
dec
mov
dec
movsl
cmpsb
imul
mov
fs
notb
jmp
sub
mov
add
jne
test
lret
mov
je
dec
cmp
pop
xchg
dec
outsb
je
gs
xchg
test
inc
outsl
outsb
xchg
gs
xchg
outsb
arpl
das
cmp
in
or
mov
inc
ja
mov
inc
mov
psubb
jg
and
add
ss
std
xchg
xchg
inc
int3
mov
cmp
jg
jno
mov
xchg
lahf
mov
cltd
xor
push
xchg
push
pop
repz
cmp
cmc
jg
sub
outsl
mov
jmp
push
pop
pusha
fiadds
bound
mov
sarl
push
add
inc
mov
add
lahf
pusha
je
lret
movsl
sti
je
shrl
xchg
shrb
cld
repz
loopne
push
fcmovbe
inc
mov
sbb
jne
js
das
or
out
pop
dec
cs
daa
rolb
leave
clc
and
push
mov
cmpsl
scas
or
call
cld
rorb
xor
call
add
mov
in
cmp
aas
dec
lsl
cmc
inc
push
mov
sub
js
fistpl
push
daa
stc
mov
adc
pusha
fcmovnb
or
call
push
mov
jne
cld
inc
and
jmp
je
pop
mov
mov
icebp
jp
or
sub
fstpl
popa
xchg
jge
ja
jns
stos
push
hlt
fwait
mov
pop
outsl
pop
sbbl
sub
rol
cmp
scas
push
mov
xor
fsubl
jnp
incl
dec
aaa
jle,pn
int
sub
mov
das
pushf
xor
jmp
sbb
ret
jle
adc
push
imul
cmp
cmp
test
sub
popf
pop
orl
mov
outsb
shrl
add
je
adc
in
pop
inc
and
or
es
or
adc
arpl
xor
jne
lret
lret
pop
add
je
sbb
je
or
lret
lret
lret
jl
push
jle
adc
adc
aaa
data16
or
jns
out
sub
mov
aas
adc
jae
jp
cmp
pop
jl
add
mov
sti
andb
pop
sbb
call
xchg
xchg
test
inc
popa
je
pop
xchg
gs
outsl
outsb
cmp
cmp
arpl
inc
cwtl
gs
mov
aad
call
jmp
cmp
or
xchg
mov
mov
jmp
test
push
and
cmp
xchg
dec
pop
jne
scas
push
dec
push
and
inc
xchg
imul
stos
xor
mov
pop
jae
adc
sub
jle
or
rorl
push
adc
dec
icebp
int3
sarl
dec
sbb
loopne
cltd
fisttpl
test
lock
pop
clc
push
pop
push
call
push
pusha
dec
cs
cld
push
add
ret
pop
jge
mov
add
push
test
bsr
mov
jno
pop
push
adc
mov
jmp
push
mov
xchg
outsb
jbe
jl
and
xor
aad
addr16
mov
add
push
adc
shl
dec
push
sub
adc
jne
xor
call
test
test
inc
jmp
dec
sub
add
or
ds
in
xor
sub
rclb
rol
mov
je
imul
cmp
enter
insb
outsb
je
push
cmpsb
mov
mov
arpl
gs
imul
gs
arpl
je
sub
outsb
es
sub
aad
rcrb
popa
arpl
imul
leave
gs
loopne
loope
jns
imul
lcall
adc
sub
outsb
imul
cmp
jp
dec
shll
mov
dec
shll
sbb
or
aad
aaa
loopne
jmp
or
add
mov
sbb
js
std
rclb
push
dec
push
andl
mov
mov
jne
jne
jne
call
popf
fstl
stos
lret
jg
fmull
std
xor
add
sbb
jl
pop
pop
inc
call
mov
stos
dec
rorl
addr16
jb
cmpsb
imul
sti
rcr
imul
sbb
sbb
outsl
fcoms
add
lea
or
stc
sbb
pushf
fdivr
xchg
leave
insb
ret
ss
stos
add
sub
mov
fsubrl
fmul
sbb
sbb
or
xchg
inc
xor
jb
out
fcoml
xchg
fsubrs
je
mov
je
or
adc
or
test
pusha
and
incl
mov
sbb
test
mov
hlt
push
fnstsw
mov
push
xchg
stos
mov
fsubl
call
popa
filds
adc
cmp
mov
sub
mov
push
movl
jp
jl
lcall
push
mov
adc
or
roll
pop
add
and
pushf
mov
cld
stos
and
lret
in
std
ds
imul
jns
jb
cmpsb
imul
or
mov
pop
mov
popf
xchg
pop
mov
jne
ret
stos
enter
push
aas
pop
and
ret
cmp
mov
arpl
push
push
inc
imul
xchg
cmp
cmp
jb
ret
mov
mov
fcomi
ljmp
sbbb
push
adc
ja
xor
daa
lret
pop
xor
fsub
fs
jmp
arpl
xor
rorl
jb
arpl
test
fisttpll
insl
jne
lds
outsb
daa
aas
loop
mov
xor
jp
arpl
loopne
je
push
lcall
jae
jp
jo
lcall
aas
aaa
test
mov
cmpsl
mov
inc
pusha
cmpb
add
and
inc
xchg
or
pusha
cmp
push
in
call
sub
xchg
adc
mov
dec
jge
pop
test
push
jl
mov
rolb
cmc
xor
dec
fcoml
pop
sbb
ljmp
loope
sahf
jne
cs
jbe
push
push
push
dec
sbb
and
mov
sbb
and
bound
jno
sbb
and
divl
mov
shlb
jge
movsl
movsb
stos
jmp
rcrb
or
insb
sub
add
mov
or
loop
add
je
push
lods
insl
out
dec
mov
add
xchg
aas
inc
mov
pop
jmp
ror
inc
movzbl
jnp
pop
clc
div
fisubs
inc
cmc
hlt
push
jl
cmc
andb
adcb
mov
add
dec
iret
mov
add
cmpsb
jmp
stos
xchg
ljmp
cmpsb
imul
cmpsb
imul
inc
xchg
sub
lret
leave
mov
fs
je
cltd
jb
dec
shll
dec
outsb
outsw
add
shl
aad
dec
xor
icebp
jne
add
xor
pop
cwtl
xchg
xchg
sbb
inc
xchg
xchg
pop
dec
inc
cmp
or
scas
mov
and
dec
inc
orl
xchg
enter
ds
je
jl
push
adc
call
dec
xchg
sub
rcrl
inc
cmp
mov
ret
ret
pusha
arpl
rolb
inc
in
aaa
xorb
stos
push
mov
or
sub
cmp
int
push
sar
add
mov
inc
inc
jle
push
popf
bound
sub
stc
cmpb
xor
sub
adc
mov
sbb
add
das
pop
pop
fidivs
cwtl
in
push
icebp
cmp
lea
xlat
lea
or
aaa
mov
xchg
inc
cs
push
bound
jle
pop
push
fmul
cld
jge
cmp
and
shrl
mov
jmp
inc
pop
leave
and
int
es
movsb
mov
dec
xor
push
ds
sbb
clc
fcoms
stc
sti
sub
adc
sbb
insb
stos
adc
int3
and
mov
call
repnz
in
addb
mov
and
call
mov
in
aam
out
icebp
outsb
inc
sub
mov
and
and
adc
inc
movsb
xchg
shll
adc
mov
in
mov
mov
pop
mov
pop
cmp
jl
add
jg
movsbl
sub
inc
sahf
in
popa
jmp
adc
daa
jmp
cs
out
xor
jg
in
loopne
jb
inc
mov
xchg
cwtl
xor
pop
outsb
sub
dec
data16
xchg
bound
call
aaa
xor
sub
lret
inc
insl
push
inc
jo
add
iret
jo
insb
xchg
lret
sarb
shrl
rcl
jno
sub
lret
insl
aad
adc
jns
fdivs
dec
rcr
fcmovu
popa
jge
jae
jp,pn
xor
xor
xor
xor
arpl
cmp
es
push
xor
cmpb
jmp
out
lock
adc
or
out
mov
divb
divl
mov
jae
call
je
sbb
call
rorb
pop
or
jno
dec
shll
jp
ss
xor
jno
xor
jp
dec
shll
fs
dec
shrl
arpl
cmp
xor
aaa
cmp
jno
sub
push
xor
jp
sub
mov
das
insl
aad
and
pushf
scas
or
je
dec
rcll
cli
sti
cld
add
mov
pop
nop
outsb
mov
cli
add
movsl
sbb
enter
in
lea
jae
hlt
jno
jno
xor
and
outsl
gs
add
push
ss
int
jle
xlat
sub
push
inc
cld
pop
dec
mul
mov
roll
pop
xlat
and
mov
jecxz
and
sub
xor
orl
fidivs
aas
and
and
stos
jo
xchg
mov
mov
test
add
pop
mov
popa
stc
pop
sbb
popa
mov
repnz
sub
adc
sub
adc
addb
cs
call
outsb
add
pop
mov
cmp
cmpl
je
cmp
arpl
or
lea
or
data16
xor
sbb
jl
add
push
xor
adc
add
dec
sub
into
or
pop
jo
mov
lea
call
test
fdivrp
in
ss
mov
adc
push
and
fmull
and
hlt
fnsave
sbb
shlb
movsb
es
cld
in
push
mov
dec
mov
jae
inc
pushf
sbb
sahf
mov
sbb
loopne
ret
pop
pop
in
test
add
and
mov
add
or
push
int
inc
dec
and
dec
aam
out
scas
cld
bound
add
adc
or
push
cmpsb
ret
sbb
fadds
add
xor
sbb
mov
test
ja
gs
xorb
imul
lds
arpl
repz
pop
inc
sahf
jl
or
pop
in
inc
adc
fidivrl
pop
in
call
cmp
loopne
xor
or
mov
js
int3
int3
pop
push
jg
rclb
cld
into
fsubrp
imul
std
or
jnp
pop
jb
or
and
mov
movsb
xor
cmp
or
nop
xor
jle
repz
fcomip
call
adc
pop
mov
mov
frstor
mov
leave
out
jne
xchg
sbb
sbb
mov
outsb
pop
jge
dec
and
imul
add
sub
mov
packssdw
outsb
lock
popa
mulb
and
bound
push
sub
mov
xor
mov
or
dec
movsb
dec
mul
sub
mov
in
adcb
inc
xchg
and
xchg
bound
cmp
and
cmp
mov
push
mov
or
sub
sti
cmc
cmp
jecxz
rol
call
jge
inc
push
decl
shrb
xor
adc
jle
shlb
dec
adc
push
pop
ljmp
js
sub
adc
inc
das
adc
loopne
or
jno
or
pop
pop
mov
sti
rolb
jae
outsb
add
cmpsb
nop
inc
call
gs
mov
and
sub
sbb
jecxz
pop
loopne
cmp
pop
jo
mov
push
pop
mov
and
xchg
cmovs
cmp
stos
jbe
mov
add
mov
pop
and
stos
cmp
xchg
mov
sbb
jb
insb
add
jo
add
shlb
jb
dec
or
pop
adc
iret
push
cmp
in
pop
add
or
fisttps
mov
dec
jmp
inc
dec
sbb
out
add
mov
add
and
outsl
sbb
stc
jecxz
int3
stos
add
mov
add
mov
mov
push
mov
add
lods
hlt
mov
mov
sub
das
mov
insl
cmpsl
iret
lods
mov
add
ds
mov
add
or
andl
or
jmp
jle
movzwl
insl
jne
daa
add
ljmp
je
movsb
add
mov
call
add
jmp
cmp
jne
data16
or
jne
or
mov
je
sub
add
or
cli
lcall
xor
outsb
adc
jg
cli
inc
mov
pop
cld
jl
add
jmp
mov
ds
cmp
add
pop
adc
adc
jno
push
shrb
dec
je
adc
loop
pop
shll
inc
adc
iret
arpl
je
clc
aaa
cld
jle
lea
pop
mov
pushl
add
push
scas
clc
xorb
mov
cmp
inc
push
shrb
loope
add
push
mov
aas
cli
jb
jmp
xor
mov
data16
lea
sbb
pop
add
push
call
insb
aaa
fwait
lahf
inc
aaa
pushl
lcall
lea
inc
les
rcll
js
jo
add
int3
adc
mov
cld
cmp
sbb
mov
adc
jge
repnz
les
pop
mov
mov
or
inc
testb
je
xor
sub
pop
adc
jmp
and
gs
adc
aam
int
add
jno
sahf
add
inc
xchg
xchg
enter
out
push
push
xchg
mov
mov
adc
cmp
mov
dec
rcr
int
mov
jo
ret
nop
sbb
pop
add
mov
adc
pop
call
sub
cmpsb
imul
cmpsb
imul
lcall
jne
mov
lcall
push
jb
xchg
push
stos
mov
jp
ljmp
inc
sub
into
jo
add
add
loope
push
jge
and
call
loopne
enter
not
add
iret
shrb
or
cmpl
add
add
in
jne
gs
mov
lods
mov
xlat
les
je
imul
pushf
js
bound
xchg
or
push
popa
and
push
aas
fs
xchg
push
push
jae
insb
dec
or
idivl
inc
mov
lahf
dec
sub
mov
repnz
jno
pop
pop
rorb
fisttpl
insl
ds
mov
clc
sbb
aad
jl
sbb
push
cmp
or
adc
rolb
adc
jo
cmp
or
pop
into
push
push
call
add
aam
arpl
cmp
push
or
test
and
sbbb
int
dec
push
push
sbb
jbe
shl
mov
add
xor
xor
sub
scas
mov
icebp
xchg
jbe
cmpsb
or
mov
add
mov
leave
sbb
add
mov
dec
mov
adc
dec
mov
sti
jmp
mov
into
jb
sub
jle
into
pop
test
mov
jecxz
mov
iret
xor
dec
adc
or
add
fcmovnu
popa
mov
ljmp
xor
push
fisubrs
adc
xchg
or
inc
cmp
iret
cmp
mov
jbe
push
clc
test
mov
pop
push
jmp
pop
pop
pusha
push
test
cmp
mov
mov
add
fldenv
in
sahf
pop
push
adc
data16
imul
jmp
xor
add
xchg
in
out
shl
outsb
cmpsb
add
jae
dec
aaa
jb
std
loop
jcxz
adc
cmp
jb
push
int
ja,pt
leave
mov
lret
data16
gs
test
xor
xor
gs
jb
jns
add
push
shrl
repnz
test
and
mov
fdivr
xor
jo,pt
hlt
cmp
addl
fs
xlat
divb
rcll
and
push
xlat
adc
or
loope
daa
cmp
push
mov
rcr
ja
jo
fstps
fwait
adc
call
mov
adc
and
arpl
inc
popa
inc
push
mov
adc
xchg
js
push
sti
jle
test
cmp
and
pop
sbb
or
adc
lods
js
jbe
add
ret
jne
gs
sub
mov
insb
outsl
jb
jb
shll
outsb
push
inc
mov
dec
xor
popa
mov
enterw
in
leave
std
mov
inc
int3
dec
popf
jp
hlt
lret
cmp
pop
cmp
scas
iret
cmp
loopne
sbb
and
in
push
pop
adc
lock
icebp
inc
mov
mov
icebp
add
int3
jbe
icebp
movsl
shrb
sbb
xor
out
mov
int3
xchg
xchg
int
sbb
xchg
add
and
inc
jno
dec
push
push
xor
mov
add
jno
cld
mov
add
sbb
xor
jbe
in
adc
or
add
fstps
jno
daa
mov
jae
fldcw
in
fstpl
in
cmp
ficomps
adc
dec
rcrl
aam
out
add
push
jmp
jmp
addb
cmpb
add
xor
add
inc
add
pop
inc
jmp
pusha
push
jb
arpl
jae
shll
outsl
outsl
insb
push
int
outsl
call
popa
jo
push
add
jb
jne
insb
and
adc
jo
insb
inc
aam
adc
pop
inc
insb
int3
cwtl
add
jbe
notb
inc
dec
gs
xchg
cmovbe
cmpb
jae
arpl
add
xor
jp
std
adc
jge
dec
outsl
fs
adc
or
clc
sub
ljmp
insb
jg
xlat
adc
inc
push
and
dec
sbb
jns
add
or
pop
dec
push
and
jle
fs
cmp
mov
mov
pusha
in
repnz
lods
jb
inc
enter
outsl
xchg
pop
push
inc
sbb
out
out
mov
ja
aad
push
sbb
int3
push
push
imul
cmp
jge
pop
jno
dec
pcmpeqb
ds
fwait
mov
imul
das
fiaddl
add
mov
jp
fdivr
sbb
ljmp
orl
xlat
jae
and
xchg
outsb
inc
pop
jae
adc
imul
mov
lods
sbb
jno
outsl
imul
push
adc
and
adcl
imul
popa
add
outsl
add
jo
ss
add
jns
fists
imul
adc
stc
pushf
ja
jbe
insl
ja
call
push
outsb
addr16
mov
inc
push
aas
pop
sbb
sbb
add
add
cltd
push
mov
je
outsl
xorb
insb
add
imul
cmpsb
cld
adc
andl
cmp
sub
add
arpl
insl
mov
jmp
outsb
push
ja
push
adc
inc
mov
clc
dec
inc
push
dec
inc
push
lods
add
jo
mov
data16
push
movsl
int
mov
push
out
mov
popa
test
push
inc
mov
or
stc
outsl
push
jb
mov
pop
cld
and
pop
cmp
cmp
inc
dec
std
inc
in
shll
pop
pop
and
leave
fcoms
pushw
shll
fiadds
jecxz
ret
push
fidivrs
mov
mov
push
push
push
mov
lahf
cltd
fimuls
dec
bound
test
dec
fstl
addr16
inc
in
push
fnstcw
je
jmp
dec
and
jb
insl
mov
sub
pop
and
daa
addb
add
sbb
inc
inc
dec
mov
add
jne
sahf
imul
pop
subl
adc
nop
sbb
push
movsb
jne
add
push
xor
pop
add
mov
dec
gs
jnp
ret
xor
mov
adc
and
addr16
inc
decb
inc
outsb
jne
inc
inc
push
inc
push
xchg
push
push
sbb
cltd
add
xlat
pop
call
ljmp
pop
push
jb
mov
movsl
shlb
mov
insb
xchg
xor
pop
and
jo
adc
lret
add
sbb
imul
mov
push
mov
adc
imul
ret
ficoms
mov
mov
inc
arpl
mov
mov
or
cmp
insl
movsl
fisttpl
mov
push
or
mov
add
jmp
loope
jae
nopl
fdivl
sbb
push
mov
ffreep
jecxz
dec
out
mov
lds
adc
sub
jnp
outsb
sub
or
loope
pop
jbe
mov
jbe
ret
add
xor
ret
cmp
data16
aam
test
mov
ret
pop
insb
or
mov
lea
mov
inc
imul
dec
insl
aam
jno
movlps
push
subl
pop
adc
aaa
inc
sti
mov
xchg
sub
xor
sbb
jbe
dec
sub
push
fstpl
mov
test
aam
inc
dec
push
dec
das
mov
fisubrs
dec
bts
cmc
stos
or
sub
insl
pusha
mov
add
ror
push
outsl
push
jle
mov
mov
mov
mov
adc
mov
pop
push
pusha
mov
jmp
decb
rorl
movsb
cmp
sbb
jne
mov
xor
and
mov
clc
out
cld
loopne
fucomi
pop
inc
fadds
or
mov
pop
push
flds
adc
stos
test
dec
add
inc
adc
and
incl
mov
fists
dec
out
pop
hlt
sbb
bound
jo
cli
cltd
mov
lcall
mov
jle
rolb
inc
ror
mov
xchg
fstps
fisttpll
ja
mov
ljmp
in
inc
std
scas
ret
movsl
dec
fisubrl
mov
or
xchg
adc
mov
int
das
aam
push
jnp
jmp
and
or
into
push
push
dec
mov
push
lcall
or
mov
sbb
push
out
pushl
jp
arpl
insl
pop
pop
enter
or
loopne
subb
mov
mov
fdivl
pop
test
lcall
aaa
inc
pushf
aaa
add
repz
ds
aas
mov
pop
cmc
push
cld
xchg
push
lds
cwtl
nop
mov
xchg
jb
in
add
sbb
test
dec
xchg
imul
or
adc
decl
call
push
jle
stos
cmc
pop
outsl
mov
xor
xorb
adc
jp
sub
cmpl
pop
scas
or
mov
dec
mov
sbb
push
and
dec
inc
push
mov
test
jl
jmp
aaa
stos
out
jne
mov
pusha
sbb
push
test
lea
add
mov
incl
cmp
lds
jmp
shr
daa
adc
out
int
fnsave
pushf
push
pop
daa
or
rorb
jle
out
pop
inc
stos
inc
jns
out
xor
jmp
push
sbbl
push
pusha
sub
ds
or
call
jle
inc
jmp
push
icebp
jnp
in
call
enter
scas
cmpsb
push
insb
lea
movb
fstpt
push
loop
xor
shll
outsl
in
rorb
jle
neg
rcl
dec
mov
mov
in
mov
dec
stc
xchg
mov
cmp
mov
add
mov
lea
pushf
std
xlat
sbb
mov
jno
mov
xchg
cld
jne
ss
lahf
sbb
call
mov
orl
add
insb
adc
testl
dec
inc
rcl
push
sub
jne
jge
out
clc
or
and
push
clc
call
lea
in
idiv
or
rcl
outsb
aam
aam
lea
cmp
data16
xlat
jno
scas
out
or
sub
xchg
clc
out
jg
jbe
jmp
lea
seta
mov
std
xchg
mov
or
call
and
push
nop
cs
shld
pusha
out
sbb
add
call
fistpll
jmp
repnz
stc
lcall
add
pop
or
jl
mov
call
loopne
cli
mov
push
cmp
or
cwtl
scas
add
adc
insb
push
mov
int3
dec
xchg
jg
mov
push
pushf
or
std
dec
push
xor
clc
stc
popf
fidivrs
xor
or
jbe
call
out
mov
push
xor
or
lods
imul
dec
shl
mov
dec
imul
outsb
jae
mov
mov
and
repnz
shl
pop
mov
aad
sbb
push
idivl
sub
xchg
call
rolb
shr
mov
ficomps
xor
loopne
dec
push
push
das
mov
or
add
mov
push
testb
jae
xchg
insb
xchg
mov
test
rol
or
mov
push
add
xchg
mov
pop
icebp
jl
or
xor
push
and
sub
push
or
outsl
outsb
and
dec
mov
mov
shll
mov
push
xchg
test
enter
les
and
lock
les
arpl
mov
ss
sbb
dec
andw
fimull
fstp
aas
das
cmc
shl
call
xor
adc
jg
jmp
lret
xlat
outsb
pop
sbb
cmc
ret
repnz
mov
inc
cmp
mov
aaa
push
sti
not
jne
xor
cmp
popl
add
lahf
fistl
repnz
shlw
std
lcall
mov
neg
rorb
jne
shlb
xchg
rcl
js
mov
rorb
and
sbb
ja
shll
fisttpll
mov
pop
int
ja
popf
int
sbb
jmp
mov
mov
pop
cmc
cmp
rcrb
stos
or
mov
jle
or
imul
cmpsb
js
fsubrl
bt
mov
jno
in
pusha
stc
shr
mov
dec
fiadds
cmpsb
mov
inc
lods
loop
cmpsb
push
shl
cmp
sar
mov
sahf
dec
pop
inc
mov
mov
mov
arpl
xchg
dec
xadd
add
mov
clc
cmp
jnp
mov
seto
stc
out
mov
lret
inc
xchg
stos
fwait
cmp
insb
adc
lret
add
stos
stc
not
pusha
clc
test
call
sar
repz
loopne
cmp
roll
mov
shl
inc
fidivrs
fistpll
xlat
fs
mov
test
jne
pop
jb
add
mov
adc
cld
inc
addr16
lret
mov
mov
addr16
push
arpl
jge
mov
inc
mov
test
mov
and
inc
aas
idivl
pop
into
pop
or
or
mov
aam
xor
ja
idiv
and
into
push
fidivrs
iret
mov
clc
clc
jg
pop
xchg
neg
fwait
cld
aas
test
aas
mov
mov
mov
jnp
add
aaa
pop
jl
imul
mov
add
mov
push
xchg
popa
testb
or
xchg
fdivp
pop
cmpsl
add
fdivrp
xlat
xlat
fs
or
mov
jno
or
outsl
cmpl
fbstp
outsl
pop
mov
repz
and
cwtl
mov
jnp
mov
scas
xor
mov
mov
jnp
lret
mov
daa
add
and
add
jbe
cmpl
sahf
cmp
iret
jno
bound
in
imul
sub
out
ljmp
ja
jae
dec
pop
enter
inc
addr16
pop
nop
add
lret
outsl
testl
xchg
dec
add
cmp
aam
daa
jne
push
or
fs
jnp
out
je
dec
and
inc
sbb
lahf
ja
mov
das
jae
inc
jnp
ret
cmp
sbb
pop
sti
int
cmp
sbb
lahf
das
sbb
out
arpl
jecxz
addr16
cld
mov
mov
lds
pop
pop
shrb
push
add
or
pushl
fbld
adc
ret
iret
lea
and
push
rcll
mov
mov
xor
mov
loop
jae
das
mov
cli
mov
ret
mov
out
mov
hlt
add
shl
add
inc
adc
test
rcl
mov
pop
cli
mov
enter
cmpb
pushf
cmc
stc
test
sub
lds
stc
jne
jge
pop
mov
clc
jmp
mov
jle
sub
aad
inc
in
lods
mov
dec
call
in
mov
adc
imull
stc
jmp
push
mov
add
lds
clc
push
cmc
test
sahf
sbb
das
ja
call
decb
jmp
add
jmp
jmp
mov
cld
adc
push
mov
xchg
scas
sbb
and
sub
jg
rol
fidivrl
inc
std
add
loop
call
add
fs
call
out
int3
push
xchg
jecxz
sarb
repnz
loop
or
aad
popl
jo
sub
movsl
inc
repnz
push
daa
faddl
inc
repz
xchg
push
fsub
or
lahf
xchg
push
sbb
add
jo
pop
jle
adc
or
xor
push
mov
les
fmuls
fstps
mov
das
sub
adc
leave
imulb
xor
stc
push
fdivs
into
sarb
pushf
mov
adc
dec
rol
rorb
sahf
ret
jno
pop
add
cmp
rcr
movsb
sbb
ss
outsb
or
cmp
dec
mov
mov
js
or
pop
inc
pop
fstp
scas
stc
cltd
pop
ret
hlt
or
aaa
std
sti
cltd
mov
rclb
or
jb
adc
inc
out
cs
jmp
sbb
cmp
popa
xchg
std
movmskps
add
outsl
test
xchg
cwtl
call
mov
adc
and
rol
adc
and
xchg
jbe
add
loopne
test
fldl
test
xor
pusha
push
push
dec
xor
or
sub
pop
and
aad
test
xor
add
fcom
nop
imul
mov
fistpl
add
jp
push
sub
pop
sbb
stc
call
mov
pop
cmp
data16
jecxz
jae
adc
arpl
jmp
jmp
push
push
fnsave
cmc
jp
lcall
add
mov
pusha
lods
aam
cmc
inc
cmp
shl
or
pop
test
lea
insb
cld
dec
insl
mov
add
fcoms
fimull
push
movb
lret
cmc
mov
xor
setbe
or
fnsave
sub
jmp
jecxz
sarl
push
icebp
dec
push
js
mov
stc
dec
push
in
incl
xor
loop
mov
push
and
cwtl
jmp
push
cmp
leave
pushf
push
mov
lret
mov
push
dec
xchg
ret
jo
mov
inc
clc
xor
hlt
int3
dec
and
jnp
adc
clc
pushf
push
add
pop
xor
rcll
xor
jnp
fsubr
jmp
icebp
add
pop
xchg
mov
push
sbb
rorb
jbe
jnp
mov
imul
test
lret
and
jle
dec
pusha
es
shr
cmp
pusha
call
mov
inc
stos
xchg
cs
lea
adc
and
sbb
shrl
mov
call
ret
cmp
mov
pop
fs
cmp
popf
shll
sbb
lret
call
cwtl
pusha
pusha
push
jbe
mov
into
mov
div
insl
bound
fsubrs
sbb
test
rol
xchg
mov
add
push
jno
ret
dec
lods
jmp
ljmp
fcompl
in
cmp
xor
add
dec
push
dec
mov
or
add
push
pushf
lds
and
push
pop
incb
sub
out
push
jnp
sahf
sbb
out
pop
sbb
test
lret
fdivrl
outsb
xor
lock
iret
andb
adc
push
add
iret
xor
or
xor
push
or
call
std
fisttpll
push
arpl
mov
sti
xchg
arpl
lock
ja
or
mov
add
mov
dec
dec
jp
orl
out
push
mov
jne
repz
xchg
repnz
movsl
sbb
scas
aam
cmpsb
pop
or
push
test
test
movsl
fucomip
fdivs
dec
push
xor
push
cld
sti
imull
sbb
xor
repz
jb
sbb
mov
neg
test
pop
mov
stos
iret
ljmp
mov
mov
mov
int
or
je
sbb
and
scas
sbb
fisubrl
add
mov
andl
cmovno
not
mov
add
push
inc
inc
pushf
jnp
stos
jo
divl
push
gs
call
sbb
xchg
lea
push
loop
add
adc
mov
and
rorl
out
inc
jecxz
xchg
push
push
cli
mov
add
ja
testl
dec
ja
lea
sar
popf
sti
das
adc
sbb
cli
fisubrs
mov
mov
movsb
ret
mov
test
rcr
movb
add
ret
ret
hlt
sbb
pop
movsl
aam
fcmovb
xlat
xor
addl
scas
addr16
dec
stos
push
add
jmp
lret
fnstsw
adc
ljmp
notb
cs
loopne
pop
test
push
fcmovbe
loop
push
clc
test
insl
push
jecxz
sub
call
shlb
scas
or
out
mov
xor
pop
sbb
and
mov
pusha
ret
push
mov
cmp
push
cld
call
pushf
mov
popa
xorl
mov
and
inc
sbb
outsb
mov
adc
mov
pop
or
ret
sub
movl
movl
mov
dec
loopne
out
sbb
jb
xchg
jnp
neg
inc
in
mov
push
jae
mov
ja,pt
ret
cmp
out
mov
aam
jmp
fdivs
jge
outsl
pushf
push
fldenv
cmpsb
js
sti
push
inc
pop
push
lock
cmp
push
push
clc
shl
frstor
xlat
sbb
mull
sti
icebp
mov
cmp
aam
dec
cmp
fisubs
xor
jne
or
ret
mov
mov
aas
push
cmp
mov
cmpsl
dec
cmpsl
mov
testl
subl
out
fwait
stos
adc
lahf
lea
and
mov
sub
sub
les
xchg
dec
scas
xor
add
mov
push
push
sti
shll
sbb
shr
out
lds
out
cmp
xchg
out
stos
add
or
jbe
mov
aad
jle
cmp
inc
mov
scas
pop
push
mov
jecxz
inc
inc
fmuls
clc
je
cltd
popa
xchg
jnp
mov
fnstenv
ret
fsubr
scas
pop
cmp
adc
mov
enter
pop
dec
cmp
cmp
xchg
and
das
mov
pushf
dec
pop
lea
xchg
fisttpl
xchg
xchg
inc
push
cmp
sbb
fsubrl
in
jmp
sti
loope
jecxz
inc
idiv
or
cmp
aam
or
xchg
fs
shlb
cmp
pop
setb
outsb
push
push
inc
das
push
int
nop
dec
std
adc
aad
into
maxps
fiaddl
out
add
cmc
jle
clc
adc
push
lea
adc
mov
push
sub
popa
sti
ds
sbb
enter
insb
scas
sub
cld
push
movb
lock
or
inc
cmp
ror
ja
je
jno
xchg
cmp
sbb
pusha
fwait
adc
or
cmp
adc
int
sbb
cmc
pushf
stc
xchg
jecxz
mov
stc
pop
add
leave
call
jne
jo
ret
sbb
outsl
xchg
daa
jno
rclb
or
xchg
mov
or
in
cmp
ror
add
cld
add
sbb
cmp
out
in
clc
xchg
aaa
dec
shl
shl
stc
adc
jbe,pt
adc
sbb
mov
icebp
inc
mov
fs
cmp
test
test
xchg
cmp
dec
jg
mov
in
xchg
aaa
dec
cli
aad
popf
push
das
shlb
mov
cwtl
mov
das
mov
mov
setne
mov
jno
movsl
outsb
dec
dec
push
push
rorb
pop
jge
push
pop
lods
jae
das
movsb
dec
fisttps
imul
out
sbb
test
dec
stos
adc
or
cs
push
pop
pop
push
mov
push
andl
dec
clc
cmpsb
sbb
xor
rorl
pop
js
cli
add
hlt
cmp
stc
xor
ljmp
pop
stc
stc
push
clc
jns
outsb
call
pusha
and
sbb
shr
push
mov
loop
sub
icebp
dec
pop
rcl
rclb
adc
dec
enter
dec
mov
mov
jmp
sbbb
push
cmc
cmc
add
mov
sub
mov
cld
push
cmp
pmullw
add
lods
jno
sub
jbe
ret
call
pop
sub
jae
push
ret
test
and
xor
inc
xor
and
jns
pop
shll
mov
mov
jle
fbld
and
push
jae
test
out
inc
mov
add
sar
scas
lret
ljmp
mov
es
ss
inc
not
loop
xlat
repz
cmp
jb
push
ja
hlt
outsl
imul
mov
mov
clc
jne
and
fbld
roll
in
nop
push
cmp
pop
or
popf
rcl
fcomi
inc
shl
call
out
int
lock
push
xchg
sar
add
and
xchg
fbstp
pop
lea
xchg
vmovdqu
rol
fwait
xor
push
outsb
xor
bound
cli
sar
xchg
insl
cmp
std
adc
push
or
shr
xchg
inc
xchg
jo
push
pop
pop
xchg
shlb
sbb
arpl
sbb
clc
push
rcl
call
int
ss
cmpsb
hlt
mov
loopne
jae
sbb
loope
add
icebp
cmc
fnstsw
ret
movsl
popf
mov
mov
xor
cmc
test
push
sar
jge
js
push
adc
add
les
rcrl
arpl
in
inc
stos
push
dec
jle
push
sub
jo
je
push
mov
jnp
clc
or
fsubrl
mov
jb
ljmp
cli
sbb
mov
cli
sub
roll
or
loopne
mov
and
sbb
inc
jg
lds
js
pop
sbb
sti
loopne
fildl
and
mov
ror
shl
call
out
andl
inc
imul
dec
push
ret
loope
lret
and
js
sub
fiadds
adc
xorb
push
ds
ret
mov
rcrl
pop
insb
sbb
mov
enter
outsl
cmc
ljmp
lds
dec
pop
out
std
cli
jmp
jo
jbe
pop
adc
call
cmp
mov
inc
lock
xchg
or
lds
xlat
dec
fs
call
decl
testl
cmpsl
data16
dec
bound
negl
jb
pop
inc
in
push
add
push
sub
dec
cltd
ljmp
adc
std
das
aam
pushf
and
mov
fstpl
mov
out
mov
mov
adc
aaa
int
lods
sbb
dec
ljmp
ljmp
pop
clc
rcrl
cmp
pop
dec
pop
out
dec
je
cld
jno
in
test
js
xchg
mov
push
jno
adc
mov
cmp
cmp
jecxz
pushf
mov
mov
xor
dec
fisubrs
imul
pop
ret
leave
push
ds
mov
call
dec
adc
adcb
clc
jg
or
inc
push
in
lock
mov
push
les
ljmp
repnz
int3
push
dec
ffreep
jmp
pop
pop
loope
xchg
sub
in
stos
lea
sub
and
sbb
imul
jo
jl
add
xchg
push
jno
int3
push
into
idiv
pushl
or
sbb
dec
push
inc
sti
or
push
jbe
sahf
sub
lock
or
arpl
ss
dec
in
orl
mov
incl
pushf
icebp
pushf
and
subb
xor
dec
mov
mov
js
imul
pop
divb
jg
mov
inc
test
jmp
pop
lcall
out
inc
lcall
imulb
pop
outsl
mov
pusha
mov
cmp
int3
sbb
push
call
add
and
loop
xor
imul
xchg
or
mov
pushf
push
lcall
sbb
pop
repnz
fs
mov
sub
cld
decl
shll
xchg
test
mov
push
lret
outsb
mov
mov
xchg
fisubrl
pop
xchg
sbb
ret
leave
dec
aaa
add
mov
stos
jge
mov
es
loop
add
js
inc
adcl
cmp
dec
mov
and
mov
aam
je
xchg
push
xchg
pop
jle
mov
sti
cmp
call
sbb
sub
or
in
pop
xor
fcmovne
jl
inc
ja
jg
sti
jnp
pop
int3
outsl
js
pop
mov
mov
arpl
adc
inc
jg
dec
mov
pop
fsin
pop
mov
sbb
add
aas
idivb
cld
mov
cmp
fildl
sbbl
jg
push
lret
and
loope
in
or
or
addw
mov
ja
mov
movsb
in
mov
test
clc
inc
fmuls
and
mov
cmpl
jl
adc
nop
jno
or
mov
pop
push
leave
daa
mov
jp
mov
xchg
repz
mov
stc
in
mov
pop
mov
push
jae
cwtl
stos
rcr
call
add
jo
sbb
add
testl
sbb
test
aam
jp
test
mov
pop
lods
aaa
mov
les
pop
mov
mov
mov
aaa
adc
mov
ljmp
dec
mov
adc
aad
xorb
jbe
lock
pop
dec
sahf
mov
pop
mov
cli
mov
movsl
fs
cs
imul
fisubrl
add
std
jne
pop
clc
xor
jnp
push
pop
mov
std
add
or
pop
clc
jg
cmp
out
pusha
mov
and
and
mov
pop
call
call
jns
push
enter
sbb
fnstenv
inc
lock
sub
inc
mov
xlat
clc
fildll
dec
xor
repnz
pop
clc
mov
push
dec
mov
pusha
out
icebp
rcl
or
jne
ljmp
ss
jns
inc
mov
in
sub
push
adc
pop
mov
inc
arpl
ja
jmp
push
xchg
scas
out
arpl
call
movsl
jbe
push
movsl
pop
aad
lods
push
stc
adc
hlt
mov
clc
mov
mov
cltd
mov
shlb
dec
icebp
test
mov
jg
mov
sbb
fisubl
xor
push
das
add
dec
cmp
adc
push
push
jne
adc
mov
stos
icebp
jg
mov
hlt
fstpt
inc
lahf
mov
jg
in
jnp
fnstcw
adc
pop
adc
lret
js
add
dec
std
in
jmp
test
pop
xchg
and
lcall
aaa
out
dec
pop
lcall
pushl
mov
ret
or
adc
cmp
ljmp
mov
xchg
jmp
push
jl
mov
cmp
cmpsb
mov
cmpsl
push
stos
sbb
data16
scas
add
pop
pop
lds
dec
sbb
pop
decl
push
aas
sub
std
dec
cld
cmp
adc
adc
push
fistl
pop
or
paddd
or
mov
cwtl
add
pop
dec
push
bound
cltd
mov
push
lods
or
dec
call
mov
or
mov
mov
lcall
pushl
decb
add
pusha
stos
xor
cltd
pop
xlat
dec
popf
push
jbe
inc
xchg
outsl
icebp
incl
push
dec
mov
popa
inc
inc
lods
ds
insb
mov
push
aaa
stos
cmp
sbb
mov
pop
loope
cmp
jbe
lret
xor
outsb
stos
lods
jmp
icebp
cmp
jge
mov
cmpsb
in
imul
push
out
sti
push
cld
call
mov
adc
jecxz
pop
test
out
cs
pushl
idivl
or
xchg
add
or
pushl
jge
xor
xchg
test
test
adc
movsb
sbb
push
insl
out
mov
lock
adc
andl
leave
out
rol
mov
push
jg
pushl
jl
ret
dec
outsl
imul
push
iret
push
lret
push
pop
scas
outsl
jnp
scas
das
test
push
ljmp
loop
dec
and
pop
into
jg
add
xchg
jnp,pt
jmp
xlat
xchg
sbb
cmp
movsl
or
push
imul
pushf
popa
jmp
adc
bound
add
outsl
mov
sbb
mov
mov
in
iret
push
out
xor
mov
ljmp
push
or
or
mov
or
mov
jne
sarl
adc
pop
in
mov
lcall
pop
lods
add
std
fcoms
sbb
inc
sub
inc
mov
scas
xchg
jae
xchg
mov
popa
movsl
push
repz
fisttps
fs
push
shrl
mov
add
inc
jecxz
rorl
int
in
mov
shrl
push
adc
push
scas
adc
add
sbb
mov
scas
xor
rorb
inc
call
sar
dec
inc
filds
jo
mov
xor
aad
jbe
pop
add
push
pushl
ja
or
lea
or
lds
mov
and
push
int3
test
outsb
xchg
jecxz
pop
mov
mov
movsl
or
dec
leave
mov
outsl
call
dec
insb
sub
cltd
lret
imul
cmp
inc
hlt
pop
lods
call
clc
leave
pop
sti
retw
mov
adc
jl
ljmp
pop
out
sub
fbld
sbb
adc
sub
ljmp
jl
mov
pushf
dec
pop
pop
enter
mov
imul
ja
lcall
in
into
lahf
adc
sub
das
jl
lock
daa
repnz
cs
jae
pop
mov
push
sub
popl
shrb
and
sub
cmpsl
mov
insl
mov
adc
fstps
leave
cmp
sub
adc
stos
movb
cs
aam
fsubrl
or
jle
dec
cwtl
ja,pt
jmp
lret
aas
xchg
or
mov
arpl
jg
aaa
jp
cli
push
sbbl
lahf
jge,pt
out
lret
pop
pusha
loope
inc
push
cmc
mov
or
xor
mov
inc
das
ret
xorl
mov
mov
loope
dec
add
push
rcrl
jmp
fldt
dec
pusha
xchg
or
jg
jle
push
push
mov
cmp
lods
inc
testb
pop
fdivr
outsl
cld
add
lods
xchg
ss
ret
incb
push
jl
movsl
sub
mov
imul
fistl
hlt
aad
out
push
adcl
int3
nop
mov
clc
test
jle
popf
das
cwtl
sub
mov
cmpl
jecxz
dec
xlat
popa
inc
lock
enter
hlt
pop
or
cmp
testl
jg
push
sbb
or
shl
movsb
xor
inc
lock
jg
imul
adc
jo
rcll
mov
dec
pop
jle
out
jb
push
mov
lahf
pusha
mov
stos
mov
xchg
adc
in
int
icebp
jle
push
test
sbb
call
leave
lret
mov
sbb
inc
stc
xlat
jo
mov
aam
sbb
xor
jmp
lcall
es
dec
push
add
mov
mov
mov
ret
jns
xchg
clc
dec
push
pop
fisubs
repz
jp
pusha
mov
mov
pop
loop
aaa
cli
dec
pop
mov
notb
outsb
and
sbb
cmpsb
adc
add
cmc
mov
sub
pop
clc
add
push
icebp
jp
call
cmp
stos
in
xor
jmp
lds
add
icebp
aam
pushf
ret
or
fnstsw
clc
notb
ss
dec
add
jg
mov
jg
jae
sbb
fwait
dec
aad
es
inc
xchg
or
decl
insl
hlt
leave
push
mov
fwait
cmp
xor
pop
cli
dec
cmpsl
mov
clc
test
dec
adc
outsl
aaa
hlt
jmp
cmpsl
sbb
popl
xchg
pusha
inc
popa
out
mov
mov
push
mov
lahf
mov
adc
xchg
push
test
outsb
xor
adc
clc
jmp
nop
enter
sahf
inc
and
cli
and
adc
mov
sbb
add
cli
mull
push
or
mov
cmp
outsb
dec
fsqrt
xor
outsl
adc
repz
pushf
jmp
shl
call
sub
lods
and
and
pop
pusha
mov
jbe
or
sbb
rorb
xor
or
scas
xchg
xor
pop
loopne
mov
mov
cmpsl
fwait
inc
in
loopne
xchg
aas
aaa
dec
jl
add
call
or
fsubr
jecxz
pushf
jno
dec
aaa
icebp
inc
jae
ds
scas
push
jno
cmp
pop
jg
pop
cmc
cld
or
pop
call
sahf
dec
imulb
lcall
imul
jmp
lods
pop
repnz
cmp
sar
mov
call
pop
mov
rcrl
jnp
lods
repz
arpl
pop
adc
test
jecxz
cmp
push
sub
js
das
lock
cmp
sbb
ja
sub
mov
cmpsb
into
icebp
sbb
mov
daa
lods
jmp
iret
popa
mov
icebp
loopne
mov
mov
shl
jg
lcall
testb
clc
mov
cmpsl
mov
icebp
in
mov
or
inc
outsl
mov
decl
jnp
sbb
lock
stc
mov
xchg
add
outsb
pop
pop
pop
into
sbb
ds
cmpsb
jmp
jnp
ret
pop
addl
mov
mov
insb
das
push
scas
sbb
sahf
ret
mov
push
push
jmp
sbb
push
sbb
xchg
or
pushl
lcall
dec
cmp
add
xor
repz
scas
push
adc
sbb
mov
push
pop
orb
addb
mov
and
jae
arpl
fisubrl
roll
xor
mov
dec
in
hlt
pop
std
call
pusha
add
pop
cmpsb
sub
jno
gs
pop
ljmp
mov
aam
jmp
leave
lock
movsl
aas
jbe
shrl
lcall
add
pusha
mov
lret
popa
cs
jle
inc
loop
push
xchg
mov
sub
add
pop
call
adc
mov
cmp
stc
rclb
or
enter
pop
jne
rcrl
or
outsb
mov
sbb
icebp
mov
push
or
das
cld
ljmp
ds
ss
mov
cmp
cmp
mov
std
push
or
push
lods
test
pop
loop
push
lcall
xor
or
or
or
stos
xchg
sbb
jmp
aad
pop
add
sahf
das
out
sbbb
xor
add
fildl
out
lcall
call
mov
in
arpl
aaa
aam
pop
lods
push
das
js
inc
fdivrl
mov
jmp
cmc
mov
test
mov
jl
int3
push
hlt
pushl
subl
or
pop
shll
mov
movsb
gs
das
fldenv
push
jp
ffreep
mov
sbb
mov
ljmp
pushl
aad
sub
pop
ret
or
mov
sahf
pop
and
xor
cli
sub
mov
inc
adc
lds
movsl
in
jne
ljmp
push
lea
ljmp
dec
jmp
sub
sti
inc
jg
cmpsb
cmp
push
adc
cmpb
sti
call
aaa
iretw
shrb
sbb
inc
in
dec
lea
and
mov
xchg
data16
inc
je
mov
ljmp
or
pop
or
sti
in
xchg
cli
sbb
into
add
fwait
sbb
mov
test
jp
push
add
jns
xchg
dec
jg
lahf
std
pushl
fistps
cmp
inc
xor
adc
ss
or
dec
ret
addb
cmp
or
xor
fstl
xchg
sub
xchg
test
mov
xor
bound
cli
lea
ret
fsubs
fldcw
mov
les
pop
cld
mov
sbb
outsb
xchg
arpl
mov
and
push
icebp
idivb
xchg
or
outsl
fcompl
mov
mov
sarb
outsl
icebp
dec
std
outsb
jns
push
cltd
or
xor
mov
imul
or
test
outsl
std
js
popa
ja
jecxz
ss
and
jb
test
push
jecxz
or
adc
in
mov
outsl
xlat
adc
loopne
cwtl
mov
lods
jnp
hlt
fsubrl
imul
add
fistpll
fstps
fimuls
dec
mov
dec
in
add
pop
adc
popa
outsb
iret
jecxz
sub
adc
inc
loopne
call
lods
stos
pop
inc
cmp
adc
sbbb
mov
hlt
rorl
fmul
jecxz
add
add
pusha
lods
xor
cli
pushl
sbb
and
aaa
mov
jo
mov
dec
fs
add
mov
lcall
mov
and
test
push
mov
leave
fimuls
idivl
push
pushl
jle
insb
lods
or
xchg
leave
and
int3
jns
sti
ljmp
aaa
sub
jl
dec
arpl
fnsave
adc
loopne
hlt
jae
sahf
fdivs
sbb
pop
adc
push
mov
xchg
adc
pop
scas
push
scas
xor
and
sub
outsl
adc
cmp
and
cmp
add
int
ljmp
pop
jae
jae
push
jg
call
jg
cwtl
cmpl
xor
sub
std
loop
call
dec
pop
js
pop
in
pushf
or
fdivrs
xchg
sub
jno
or
aam
and
stc
inc
cmc
xor
pushl
push
out
push
xchg
pop
cwtl
and
jo
out
lods
std
jo
ljmp
test
rolb
push
mov
pop
das
bound
adc
popa
insb
rcrl
jmp
test
inc
cld
lea
outsb
icebp
nop
and
pop
sahf
mov
icebp
decl
enter
jnp
push
popa
inc
and
pushf
ljmp
es
fldt
xchg
mov
fs
nop
sub
jno
jg
fcomi
xor
ret
push
ss
mov
fimuls
stos
pop
incl
imul
cmp
or
and
push
das
rolb
add
cltd
cwtl
dec
popa
enter
mov
dec
fsts
pop
ret
jecxz
mov
jp
incl
mov
int3
fwait
mov
inc
in
mov
push
sbb
aaa
inc
inc
inc
xor
jb
xchg
push
std
cmp
mov
insl
mov
dec
cmp
loopne
inc
and
fsub
push
add
aad
rorb
outsl
rcrb
stos
inc
mov
sbb
aad
fstpl
mov
pop
adc
cwtl
push
lret
into
inc
ret
ret
add
pop
mov
sbb
subb
icebp
cmp
sub
std
call
inc
mov
push
pop
loope
xchg
dec
aad
inc
outsb
cmc
push
xchg
push
cmc
ljmp
dec
mov
xor
or
adcl
mov
jbe
lds
outsl
cmp
xor
icebp
add
cwtl
sbb
and
sbb
cs
mov
sbb
rorb
push
adc
hlt
fstpl
pop
inc
outsl
outsb
shlb
inc
adc
out
mov
cli
es
push
stc
pop
add
push
xor
insl
dec
add
test
incl
fucom
and
cmp
out
xchg
mov
push
divl
push
cli
push
xchg
js
adc
xchg
icebp
hlt
ds
mov
rclb
mov
js
lcall
pop
out
cld
inc
mov
mov
and
jae
orb
mov
push
out
shlb
stc
fs
cli
mov
ljmp
inc
xchg
mov
push
xor
insb
int3
mov
ljmp
rcl
in
inc
sbb
rclb
mov
push
aaa
pop
mov
pushl
add
inc
fisttpll
lea
popf
movsl
bound
lcall
in
sub
jb
int
hlt
mov
out
jg
iret
jge
push
movsb
addb
lods
cmp
cmp
dec
sbb
dec
pop
mov
and
cltd
iret
out
mov
stc
push
fistpll
adc
arpl
push
repnz
push
xchg
pop
jp
xor
mov
adc
and
push
fsubrs
insl
stos
int3
std
mov
sbb
call
decl
out
stos
xchg
mov
movsl
dec
les
cmp
subl
incl
xor
decl
fwait
shll
arpl
std
insl
jecxz
inc
mov
cld
gs
loopne
jle
cltd
sub
ljmp
inc
jnp
int
sub
xor
pop
in
hlt
add
add
push
adc
decl
xor
lds
dec
push
mov
loope
xchg
mov
outsl
mov
lcall
scas
in
jle
mov
ficomps
xor
push
clc
gs
mov
shr
jmp
adc
lea
cmc
pop
jns
stc
repnz
xlat
mov
cmc
xchg
adc
or
insb
jecxz
outsl
jg
ljmp
jnp
jnp
jge
mov
in
or
out
mov
icebp
insb
fisubl
sbb
aaa
xchg
daa
mov
inc
ljmp
mov
ret
xchg
pusha
add
fldenv
imul
loop
ljmp
xor
push
cld
das
adc
sub
cmpsb
cli
fnstcw
pop
or
std
lcall
add
incl
mov
rorb
mov
imul
call
std
shll
bswap
in
call
dec
fiadds
in
add
inc
fisttpll
inc
ljmp
or
negb
out
or
int
lds
decl
cmp
jge
add
aaa
jnp
fldcw
lds
mov
push
enter
pushf
sub
mov
sbbb
std
lcall
push
mov
pusha
pop
flds
xchg
cmpl
cli
mov
dec
sar
cli
add
pop
loop
repnz
sti
or
mov
dec
mov
bound
imul
in
push
jge
dec
clc
xor
sbb
cmpsl
cli
cs
cmp
mov
cs
es
adcb
xor
je
mov
or
lcall
xchg
dec
stc
pop
cmp
mov
cmp
fs
pop
outsl
cmpsb
mov
clc
mov
int
test
andl
xchg
add
mov
mov
aam
shrb
dec
cli
inc
je
cmc
jg
gs
or
std
lods
fsubs
sbb
sbb
pushl
dec
sub
fucom
mov
jb
add
testb
jp
add
jb
pop
lea
nop
pop
call
sar
mov
mov
add
or
jecxz
cmp
mov
pop
and
imul
xor
ret
std
mov
fcmovnu
cltd
out
push
lcall
add
ljmp
hlt
mov
push
pushf
out
sahf
int3
inc
push
leave
sbb
jmp
std
out
incl
mov
pushf
and
les
jb
sahf
cmp
mov
xchg
xor
push
or
js
push
cmp
mov
cmp
stc
test
mov
inc
ljmp
adc
mull
and
jae
sub
and
cwtl
xlat
push
sbb
movsb
pop
mov
std
shlb
pop
popf
inc
fcoms
addb
and
dec
cld
arpl
xchg
lahf
mov
in
sbbl
inc
mov
decl
out
shrl
js
call
addr16
jl
jge
or
pushl
adc
jo
pop
pop
mov
out
xchg
and
iret
jp
lcall
jmp
rorb
iret
cmp
es
or
aad
mov
mov
movsl
lods
int
outsl
icebp
pop
das
pop
push
xor
xchg
push
lcall
stc
and
fdivs
xchg
xor
and
fists
lahf
sub
lcall
call
xlat
fs
mov
flds
insl
push
decl
ds
fiadds
pop
pop
aam
add
popf
and
inc
call
jg
xchg
psubusw
enter
sub
lock
nop
rclb
insl
or
nop
arpl
cwtl
mov
and
movsb
push
dec
mulb
scas
or
mov
sub
pop
or
lds
push
decl
repnz
cs
inc
dec
fistpl
dec
stc
shrl
rol
add
movl
insl
mov
fistpl
pushl
bound
aad
subb
jns
scas
sbb
in
out
mov
mov
aaa
clc
lea
jl
outsb
dec
sbb
push
popf
fisttps
cld
cmp
ss
jnp
pushf
push
subl
rorb
or
loop
sub
xor
push
fists
orl
lcall
mov
icebp
in
fdivs
jg
insl
outsb
imul
ret
push
data16
scas
nop
ljmp
cmc
mov
popl
lods
lods
filds
sub
pop
jo
sbb
shlb
clc
outsl
lcall
mulb
sbb
mov
call
mov
out
out
cmpsl
dec
aaa
test
mov
cmp
push
cmp
mov
ljmp
push
int3
or
aad
insb
or
pop
loopne
xor
int
or
lea
inc
add
pop
loop
jg
cmp
lods
xor
or
loopne
out
xor
jle
test
stos
pusha
movsl
cwtl
pop
ja
mov
clc
add
imul
jge
repnz
lahf
pushf
call
popf
mov
incl
pop
jge
inc
dec
js
and
in
pushf
cmp
cs
mov
pop
xlat
js
aaa
xchg
mov
mov
mov
loop,pn
cmp
dec
jno
sbb
xchg
or
inc
loope
cltd
sarb
xor
cmpsl
xchg
pop
xchg
and
cli
ret
je
lcall
ljmp
jecxz
cmp
lret
stc
pop
mov
pop
mov
lds
sar
push
adc
ficoml
lcall
fucomip
fistps
outsb
aad
push
loopne
jecxz
dec
inc
icebp
fstpt
test
and
adc
nop
and
ljmp
loop
sahf
mov
inc
outsl
aam
xchg
sub
push
leave
sbb
data16
jbe
pushl
loop
movsl
push
jg
jne
pop
cmp
jb
add
mov
push
cli
jg
dec
scas
add
test
push
test
jg
pop
dec
push
jg
xchg
or
lea
mov
idivl
test
aam
jmp
idivl
scas
fs
sbb
mov
sarb
mov
pushl
fwait
ds
jge
sbb
incb
fbstp
sub
mov
into
ljmp
pop
cld
sub
les
add
xchg
movsl
call
shll
xlat
mov
enter
inc
popa
mov
adc
adc
mov
add
jne
sub
dec
cld
loopne
insl
sarb
cmpsb
jne
gs
pop
in
leave
dec
lcall
incb
mov
or
xor
loopne
vmwrite
out
icebp
out
pop
cli
fistps
iret
push
or
push
xor
shrl
imul
jmp
sbb
jo
add
xchg
aad
jmp
stos
inc
push
fistl
xor
loopne
jo
je
stc
sbb
mov
ret
mov
jmp
mov
lcall
sbb
jg
scas
jg
call
xor
or
adc
or
arpl
inc
mov
mov
arpl
sub
aaa
push
mov
add
push
shlb
pop
mov
cmp
or
inc
daa
sub
inc
push
add
pusha
and
jl
iret
push
icebp
popf
lahf
cli
loope
adc
adc
dec
push
xor
insl
sbb
mov
push
add
push
jle
loopne
mov
mov
outsl
test
mov
lea
mov
mov
jb
mov
mov
movsb
sbb
std
jg
repz
push
push
adc
ret
pop
sti
xchg
mov
push
popf
sbb
jmp
inc
or
push
mov
dec
jmp
sub
sbb
cmc
lods
sbb
xchg
mov
iret
int3
rorl
or
sbb
push
icebp
ss
pop
jge
stc
clc
out
xchg
pop
lcall
sarl
lret
jmp
cmp
jg
mov
invd
mov
mov
lods
scas
adc
fldt
mov
lret
and
push
pop
test
sbb
std
test
shl
adc
adc
push
mov
xor
xchg
mov
mov
add
scas
xorl
cli
enter
dec
out
leave
ss
pop
adc
xchg
lcall
or
push
ffree
pop
mov
mov
pop
lods
repnz
daa
loop
repnz
sbbb
arpl
std
out
or
fsubr
sub
or
out
test
jg
mulb
add
cli
sub
popa
pop
push
fwait
in
inc
push
loop
adc
xchg
and
cmpsb
test
out
lock
pushl
xchg
mov
or
mov
add
ljmp
dec
ljmp
xchg
je
or
mov
dec
ja
repz
mov
repz
cmpsl
adcl
mov
inc
notl
cmp
in
sub
mov
add
movsb
add
push
fildll
fadd
pop
xchg
xchg
sub
jp
sbb
pop
lock
test
mov
pop
rcll
sub
lock
incl
outsl
jne
dec
jb
ja
jae
repz
xor
psubq
mov
js
mov
sbb
cmp
ret
in
scas
lods
and
mov
incl
cmp
xchg
ret
repz
adc
xor
sbbl
into
or
sub
xchg
sub
pop
stos
icebp
sbb
xchg
adc
cmp
ljmp
lock
jbe
stc
sbb
jae
fwait
xchg
push
aas
aam
lret
subb
jmp
scas
fbld
lahf
decl
lods
in
cld
cmpsl
jb
jno
sahf
fstp
loopne
std
enter
sarb
outsb
aam
shrb
rorb
sbb
and
lret
outsl
lds
mov
cmp
adc
or
cli
xchg
out
adc
add
cmp
insl
mov
dec
jne
sbb
dec
pusha
push
mov
popl
aas
pushf
fisttpll
push
mov
std
and
dec
rclb
mov
jg
add
mov
test
add
pop
rolb
ret
jns
sub
gs
pop
or
xor
or
prefetcht1
xor
cvttps2pi
int3
pop
mov
fiaddl
sti
lea
adc
sub
fiadds
sbb
adc
push
lock
std
std
mov
cld
jmp
mov
iret
enter
mov
adc
pop
loop
lcall
ss
mov
jb
in
fmuls
cmpsb
and
aam
pop
iret
mov
mov
fcoms
cli
or
inc
add
inc
data16
arpl
in
xchg
push
cmpsb
stos
xor
lods
in
out
rorl
mov
lods
adc
dec
insl
mov
repnz
jmp
xchg
push
mov
ret
jo
adc
lods
and
push
add
lret
aas
divl
hlt
out
pop
lea
dec
in
mov
add
push
pop
ret
out
aaa
adc
test
sbb
or
negl
in
lods
roll
repnz
adc
pushf
sbb
inc
fisttpl
xchg
jmp
add
iret
inc
jnp
incl
add
call
nop
push
aas
cld
fnstsw
or
jno
dec
dec
out
and
aam
push
loope
repz
pop
cmp
cltd
ss
test
out
xchg
xchg
icebp
outsb
sbb
insl
shrb
daa
add
das
jg
stos
movsb
inc
dec
sbb
rorl
pop
rcr
pop
filds
fisubrl
adc
ljmp
mov
outsl
mov
mov
mov
cmpsl
int
adc
bound
mov
dec
sti
jbe
xchg
popa
gs
loopne
xor
das
lock
lret
cld
or
inc
xchg
ljmp
mov
shll
pushf
pop
add
add
pop
sahf
xchg
fldenv
cld
mov
sbb
mov
cs
inc
push
cs
mov
pushl
push
scas
mov
dec
cmp
rol
sub
daa
dec
dec
pop
sub
mov
jg
in
jge
mov
xchg
dec
jmp
aam
push
das
lcall
fsubrs
adc
test
ficompl
jmp
cwtl
imul
pushl
mov
mov
and
nop
jl
fisttps
jg
test
mov
ret
jae
sbb
iret
scas
in
das
insb
and
ja
mov
cmp
jmp
jl
dec
inc
sar
aam
pop
insl
shrl
adc
test
addr16
in
pushf
icebp
xor
les
es
lods
movsb
jne
in
repnz
inc
cmp
in
andl
mov
ret
ja
pop
into
mov
sub
add
push
shrd
cld
das
leave
in
mov
pop
and
cwtl
frstor
mov
aaa
test
repnz
add
cmp
fisttpl
pop
ljmp
rorl
call
inc
dec
jecxz
cmc
in
pop
mov
mov
ficoms
leave
sub
in
jns
push
std
and
sbb
int
jl
cmp
loope
or
aam
pop
out
and
fistpll
adc
mov
lret
add
or
xor
ljmp
in
adc
hlt
out
mov
cwtl
and
xor
fstpt
aam
jge
pushl
out
mov
ret
jge
and
lahf
jge
mov
je
pop
imul
push
insb
sbb
dec
dec
xchg
aam
pop
ret
mov
fwait
ja
adc
jle
fcoml
jg
stos
rcr
jbe
test
sub
sbb
sbb
dec
xchg
cs
daa
xchg
outsb
mov
mov
ror
insl
das
roll
mov
test
rorb
mov
dec
dec
dec
and
aam
push
shl
and
repz
in
cltd
xchg
add
xchg
add
aas
aaa
jmp
iret
enter
xor
dec
inc
pop
cs
int
js
jmp
mov
outsl
loopne
in
add
adc
ret
outsb
lret
aaa
loope
cmp
inc
dec
jp
mov
xchg
popf
popa
in
xor
xor
stos
in
or
out
pop
adc
out
decl
cltd
mov
ficompl
mov
call
sti
lcall
dec
push
ds
or
jb
xlat
sahf
push
lret
pop
jp
shll
stc
mov
adc
enter
loope
cmp
push
mov
notb
xchg
imul
inc
stos
test
mov
mov
xor
incl
es
push
and
adcl
sahf
push
aad
imul
aad
or
les
xor
lahf
popa
repnz
and
adc
fisttpll
cmp
jl
mov
mov
dec
sbb
fs
addr16
fistpll
movsb
test
lods
jns
fbld
xchg
ret
sub
test
jo
arpl
in
div
in
mov
ror
jo
ss
fcomps
jb
cmpsl
xlat
out
leave
add
jg
push
jmp
mov
adc
and
adc
iret
outsb
ss
jb
pushl
mov
dec
data16
xchg
mov
fidivrl
movsb
movsl
in
push
stos
and
int3
jg
fwait
or
stc
lea
cmp
mov
adc
pop
jp
pop
mov
jg
jg
call
shl
sahf
shr
test
ds
jg
pop
jne
mov
pop
das
jae
dec
cmpsl
push
pop
clc
mov
adc
into
outsb
xchg
in
sub
sub
mov
xchg
dec
pushl
fidivrl
movsb
movsb
jmp
into
push
sbb
popa
jg
test
sub
decl
repz
xor
into
dec
push
jmp
dec
repz
cld
pop
jbe
hlt
sahf
fidivrl
mov
push
jmp
inc
xchg
push
dec
inc
dec
and
adc
lret
cmp
jg
pop
lret
xor
frstor
outsl
pop
adc
jbe
sahf
push
data16
mov
fucomip
mov
rcl
jns
iret
bound
popf
gs
lahf
decl
adc
xchg
push
xor
scas
jle
jns
pop
xchg
aam
and
mov
push
jle
cmpsb
cs
jns
push
jmp
fcomip
push
jg
pop
mov
cmp
cs
cmpsl
ljmp
xor
in
mov
jne
mov
filds
fidivl
movsb
lods
lret
inc
lods
leave
aaa
mov
cmp
iret
movsb
test
mov
pop
adc
push
cmp
mov
std
pushl
pusha
std
cs
add
jle
test
xlat
cs
mov
push
je
into
mov
out
es
pop
inc
lret
cmp
or
xor
jle
out
frstor
insb
push
mov
or
clc
cltd
push
cmpsl
jmp
jmp
dec
or
clc
push
push
aas
lret
mov
cli
rorb
shr
xchg
and
loope
push
pop
clc
repnz
sahf
sar
jmp
inc
dec
add
data16
lret
pop
repz
popa
pop
popa
sub
data16
cmp
outsl
pop
clc
decl
mov
push
xchg
data16
fstl
in
ret
addr16
jg
dec
leave
and
jg
mov
jbe
in
shlb
pusha
pop
orl
lods
jle
pop
mov
fbstp
leave
cs
add
mov
clc
ret
loop
sub
pop
imul
inc
lahf
sbb
mov
xor
jmp
pop
sbb
pop
cmp
dec
dec
data16
aam
pushl
pop
pop
int
out
mov
or
insl
cltd
shl
sahf
std
add
xchg
stc
push
test
pop
push
scas
xchg
aad
loope
jbe
int3
sub
movsl
jo
adc
stos
sub
dec
add
pushl
jnp
xor
cmp
jl
cwtl
cmp
int3
ds
call
ds
ds
ds
or
adc
sbb
ss
cmp
push
js
jg
add
and
inc
xor
mov
xor
cld
xor
sbb
sub
cmp
xorl
xor
xor
xor
xor
xor
xor
mov
xor
inc
xor
xor
xor
xor
inc
xor
pop
xor
xor
xor
decl
pop
xor
xor
xor
xor
xor
shlb
or
fs
jg
jg
imul
xor
cmp
pop
xor
mov
lcall
loope
pushf
xor
xor
xor
xor
xor
xchg
lods
mov
mov
inc
mov
shll
push
ss
pushl
jae
cmp
push
aaa
jo
jne
xorb
aaa
mov
cmp
jecxz
adc
and
inc
cmp
test
cmp
arpl
fwait
cmp
cmpsl
cmp
pop
clc
mov
cmp
mov
and
cmp
inc
bound
ss
idiv
iret
ds
push
aas
cs
mov
mov
jg
mov
sbb
xor
mov
xor
xor
call
xor
dec
xor
pop
xor
jb
jge
mov
xchg
xor
or
xor
xor
xor
xor
sbb
xor
xor
pop
cli
ret
xor
xor
xor
xorb
cmpsb
xor
xor
push
xor
mov
xor
xlat
xor
ss
ss
mov
mov
cwtl
ss
ss
mov
cmp
cmp
sti
cmp
cmp
cmp
sti
cmp
pop
cmp
insl
cmp
jg
test
ds
fnstsw
loop
idivl
std
add
or
adc
and
ds
inc
aas
mov
aaa
fcomi
aas
sarb
jecxz
mov
faddl
xor
xor
xor
call
int
push
scas
aas
xor
xor
xor
xor
xor
inc
pop
pushl
std
xor
xor
xor
pop
xor
mov
xor
xor
clc
cmp
xchg
jg
icebp
xor
xor
xor
insl
xor
mov
xor
outsb
fldenv
mov
out
ss
cld
pushl
mov
shlb
cmp
cmp
repz
cmp
cmp
push
outsl
lock
sarb
mov
cmp
cmp
and
call
in
fwait
jp
cmp
push
es
jg
test
sarl
idivb
call
sbb
aas
add
pop
aas
outsb
aas
jge
test
cmp
aas
mov
xchg
aas
aas
repz
xor
xor
sbb
imul
xor
test
ret
xor
outsb
hlt
lcall
jne
jg
lea
xchg
xor
dec
fbstp
or
adc
fisttpl
xor
jg
mov
push
xor
pop
xor
mov
scas
loope
push
shlb
call
xor
xor
xor
jg
xor
jb
popf
stc
idiv
xor
sbb
lcall
pusha
ss
ss
jge
repz
or
aaa
push
aaa
pop
aaa
data16
jae
jle
aaa
adc
push
aaa
lock
notl
cmp
cmpl
xchg
cmp
sub
cmp
cmp
cmp
cmp
cmp
cmp
pop
cmp
cmp
cmp
cmp
decl
cmp
cmp
cmp
mov
adc
mov
cmp
dec
lret
pop
cmp
cmpl
cmp
xchg
ds
add
dec
sub
fbstp
mov
xchg
aas
movsl
aas
lds
into
aas
out
lock
idivb
xor
sub
add
xor
or
popa
xor
jp
lea
cmpsl
aaa
xor
shll
mov
xor
xor
push
aaa
jae
jp
lcall
xchg
xor
xor
xor
xor
xor
xor
xor
xor
in
ljmp
jl
xor
xor
jl
sbb
xor
and
cmp
test
test
ss
std
shll
insb
aaa
jl
jg
pushl
xchg
aaa
popf
aaa
cld
aaa
aaa
cmp
pop
cmp
cmp
cmp
lret
inc
das
mov
cmp
cs
cmp
dec
cmp
loopne
cmp
jne
jp
cmpb
loope
aaa
lods
cmp
jmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
dec
cmp
decl
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
test
decl
cmp
cmp
cmp
xchg
popa
sub
fistpll
xor
and
adc
cmp
cmp
cltd
cmp
add
adc
add
ss
cmp
add
sub
stos
push
push
mov
jecxz
lret
rcrb
pop
mov
pop
pop
popf
rcll
stc
out
rcrl
cltd
cmp
popf
fstps
cltd
add
cmp
cltd
ds
wbinvd
push
cmp
out
cmp
and
aad
add
xor
outsb
jnp
inc
daa
pop
and
and
rcr
xor
xor
aaa
mov
pop
push
mov
cmp
nop
xchg
mov
jge
dec
xchg
addl
pusha
push
xor
sub
lret
pop
jnp
or
ret
scas
sbb
jb
inc
add
mov
and
inc
aad
outsl
adc
insb
lahf
pusha
and
inc
test
filds
pop
inc
adc
les
inc
add
push
mov
push
sub
push
add
sbb
ficompl
call
out
test
adc
adc
adc
js
sub
adc
daa
add
inc
jmp
inc
jle
or
add
mov
adc
inc
add
rep
or
inc
dec
adc
cmc
mov
subb
inc
into
cmp
std
stos
test
add
add
dec
add
add
clc
lods
add
add
out
push
fldenv
lods
xchg
or
test
adc
aam
push
shlb
shr
imul
mov
adc
enter
push
sub
sarl
sbbb
lods
push
lods
mov
xor
lock
popa
or
je
push
sbb
xor
cmp
pop
pop
out
jge
ja
shlb
lock
sbb
and
fwait
popf
es
aaa
pop
mov
out
sbb
adc
add
mov
xor
xchg
dec
jbe
mov
hlt
and
mov
sbbl
pusha
out
jnp
idivl
shll
fsubrs
xchg
sbb
ficoms
sbb
stos
ds
lret
pop
and
es
or
add
sbb
adc
add
mov
push
lock
imul
sub
adc
clc
xor
mov
mov
insb
mov
pop
insl
insl
jae
mov
insb
je
inc
insb
pop
xchg
insb
dec
dec
inc
jg
mov
test
repnz
rorb
and
loopne
mov
add
mov
lret
insl
inc
gs
dec
xor
xchg
sub
dec
cwtl
popa
insl
mov
add
gs
push
cmc
movsb
push
dec
add
shrl
pop
inc
xor
inc
jmp
gs
jle
lea
xor
orb
out
add
cmp
in
sahf
cmc
xor
loopne
or
or
fnstsw
jg
rorb
mov
or
jmp
mov
in
or
xor
in
jb
mov
cmp
imulb
mov
jbe
xor
dec
sbb
test
push
fs
push
pop
adc
and
mov
adc
cmp
enter
outsl
xchg
adc
adc
ljmp
jbe
push
or
push
ret
xor
sbb
or
int3
mov
fnsave
push
push
maxps
and
sub
insl
leave
pop
add
push
pop
xchg
pop
jae
pop
jae
ret
pop
das
jno
and
adcl
sub
adc
push
test
mov
loope
xor
out
sbb
push
sbb
aas
fisttpll
add
fldl
ret
inc
dec
sbb
std
xchg
bound
inc
add
enter
fstps
fsts
or
adc
flds
andb
push
popf
orb
and
jae
clc
inc
das
jge
and
dec
xor
test
push
cmp
fildll
or
cmp
jl
mov
or
sbb
sbbb
add
repnz
lods
repz
lods
add
lods
or
push
shrl
push
and
ss
test
mov
test
cmp
gs
outsl
outsb
gs
xchg
gs
cs
insb
xchg
aam
aad
insb
xlat
popa
gs
xchg
or
jne
arpl
dec
xchg
push
loope
or
loop
js
outsl
daa
lret
mov
cs
sti
xor
adc
shl
cmp
jne
lcall
daa
or
pusha
in
jmp
sbb
clc
adcb
insb
lret
enter
jb
lret
outsb
shrb
insb
into
xor
shrb
shll
popf
sub
roll
cmp
jl
imul
imul
adc
and
std
enter
addr16
rolb
int3
sub
int
xor
test
inc
std
mov
push
push
ja
dec
fidivrs
push
int3
add
out
add
int
leave
mov
popa
aaa
jnp
sbb
push
pusha
leave
ss
push
inc
sub
pop
pop
es
push
push
cmp
cmp
push
jge
inc
pop
mov
rcll
push
mov
push
sub
push
sub
or
in
inc
adc
dec
push
push
adc
cltd
sti
lds
or
outsb
orl
decl
jne
in
outsl
push
add
sbb
ret
je,pt
test
in
mov
int
popf
sub
mov
add
pushf
insb
and
xor
push
add
rol
andb
and
inc
push
mov
icebp
mov
movsl
popa
mov
je
mov
fdivrs
mov
and
sbb
lods
push
fiaddl
cs
pop
dec
std
out
dec
test
mov
sbb
mov
or
or
outsb
rcrl
push
fsubr
sbb
in
int
fiaddl
add
imul
add
inc
int3
fs
cs
lret
int
into
popa
iret
shrb
outsb
lcall
nop
jae
add
gs
gs
xchg
gs
insb
popa
jne
cmp
outsb
arpl
cs
popf
jno
sub
addr16
shll
sub
cmc
mulb
flds
jo
cltd
gs
insb
outsl
jb
pushf
sub
adc
gs
mov
dec
push
js
bound
lods
or
mov
stos
mov
inc
ss
mov
ret
insl
rcrb
cli
adc
in
or
fwait
xchg
dec
mov
and
enter
xchg
and
leave
pop
jmp
adc
rclb
ds
addr16
xchg
and
mov
cmpsb
mov
inc
cmp
add
shl
lods
or
inc
je
mov
inc
push
addr16
push
and
negb
shl
loopne
sub
xchg
adcl
mov
add
ja
jne
push
js
mov
loop
dec
pop
or
sbb
mov
add
out
or
push
aam
add
das
pop
add
fdivr
push
or
fdivrl
ss
in
xchg
or
stc
mov
mov
sbb
add
es
dec
inc
and
mov
adc
sbb
pop
add
push
mov
cwtl
push
ret
js
mov
insb
mov
mov
pop
test
ret
push
call
xor
cmp
pushf
or
sbb
ss
cmp
push
out
jle
leave
pop
mov
arpl
inc
add
jae
fstpt
or
or
adc
or
pop
pop
add
fdivrl
or
sbb
push
in
cmpsl
lods
push
inc
pusha
inc
adc
and
inc
push
inc
add
adcl
add
dec
inc
les
addb
inc
add
test
sub
adc
shll
sbb
and
cmp
push
inc
and
jo
and
enter
cmpsb
add
fmull
repnz
out
add
push
add
imul
rclb
enter
shr
mov
cmp
je
es
sub
sbb
fdivs
mov
cmp
add
sub
jne
inc
cmp
jne
cmp
je
mov
inc
jmp
or
dec
stos
fbld
pop
sahf
mov
cmpsb
mov
push
aam
inc
cmp
jl
add
jg
rep
roll
out
or
stc
stc
ror
fstpt
shll
rclb
fstl
andb
xor
mov
and
sub
enter
add
push
fsubr
sti
mov
dec
jbe
adc
jmp
add
das
adc
sub
mov
or
loope
inc
mov
int3
orb
cmp
inc
popa
cmpsb
imul
inc
cmpsl
add
lcall
dec
shrl
sub
cmp
xor
shll
je
sahf
mov
lcall
rol
je
fldenv
inc
cmp
xorl
sbb
xor
add
dec
add
ret
rcrl
out
inc
sti
inc
push
xchg
cmp
test
add
inc
push
inc
and
push
inc
cmp
dec
sub
pop
mov
pop
in
outsl
aaa
test
and
outsl
jne
jae
xor
pusha
pop
mov
mov
mov
sub
in
test
js
pop
push
fnsave
outsl
xor
or
js
in
fistpll
xchg
jnp
push
sub
push
push
mov
dec
and
ss
pop
add
dec
sub
xchg
insb
xchg
add
nop
clc
inc
in
sub
fnstenv
push
shll
sbb
push
add
and
push
cmp
push
add
fsubl
cwtl
mov
and
add
mov
lods
or
nop
and
xchg
arpl
sti
mov
daa
jo
mov
cmp
je
adc
test
add
lods
or
push
jns
mov
daa
jno
sti
sbb
inc
or
js
mov
dec
outsb
outsw
es
loop
mov
sub
adc
and
or
cmp
adc
and
mov
or
mov
and
mov
push
outsb
jb
iret
mov
and
mov
pop
xchg
adc
xor
pop
xor
pusha
add
adc
inc
nop
inc
mov
and
andb
aaa
dec
inc
add
mov
and
stos
mov
mov
xlat
mov
insl
insl
dec
jae
mov
stos
pop
add
ss
add
cwtl
or
lret
cltd
sub
add
js
sbb
ss
mov
movsb
jmp
inc
cmp
sbb
push
std
add
pop
adc
pop
mov
cwtl
pop
stos
ss
mov
inc
int3
dec
pop
or
dec
xlat
xor
jo
jmp
mov
pushf
mov
pop
shll
rorl
inc
xlat
add
add
or
mov
pavgw
pop
pushl
sbb
adc
das
xchg
or
or
dec
xchg
xor
rclb
test
mov
xchg
gs
push
jne
mov
jae
push
lret
out
adc
adc
or
add
mov
jne
or
pop
enter
pop
fadd
sbb
dec
or
mov
pusha
clc
jnp
or
jle
imul
jns
bound
arpl
push
ret
jp
subl
and
push
testl
pop
outsb
jnp
sbb
jecxz
in
mov
gs
roll
imul
mov
sbb
addr16
add
scas
add
xorb
xor
sub
clc
inc
clc
pusha
push
aas
add
xor
insl
adc
pop
movsb
push
or
xlat
jne
dec
add
cmovns
add
xchg
int
out
imul
jmp
add
add
add
jb
inc
jae
jns
dec
pop
push
gs
pop
jb
lret
outsl
and
mov
rolb
xor
jecxz
inc
and
add
outsb
inc
jae
and
imul
add
movsl
popa
and
insl
ret
int3
add
addr16
scas
jnp
aaa
jo
imul
xchg
fildl
push
sti
adc
ja
add
push
jb
pop
mov
cmp
fnstenv
xor
jmp
outsb
xchg
pop
xlat
mov
insb
popf
xchg
pop
dec
or
lahf
sti
bound
lds
popf
addr16
jmp
add
mov
sub
mov
xor
inc
push
popa
xor
out
pop
fs
or
fwait
or
dec
imul
push
daa
jbe
pop
jmp
adc
fs
test
rorb
pcmpeqw
jae
dec
pop
fldenv
xor
fstl
gs
imul
and
add
insb
cmpsl
xchg
aad
and
add
xor
pushf
or
xor
xor
mov
mov
xor
mov
lock
xor
and
xor
add
es
xor
xor
xor
xor
xor
call
ss
ss
aaa
pop
aaa
je
mov
aaa
aam
aas
cmp
cmp
cmp
cmp
cmp
lcall
sarb
cmp
cmp
jo
pop
xor
adc
push
ds
movsl
ds
ds
xor
aas
addr16
cmp
outsl
jge
aas
sarl
aas
aam
fwait
dec
xor
adc
clc
push
xor
and
inc
and
stos
jg
xor
rorl
aas
in
call
hlt
jl
xchg
out
popa
jnp
pop
inc
out
flds
add
push
mov
maskmovq
divl
in
and
out
add
adc
dec
add
xchg
add
and
pop
sub
jnp
repnz
and
and
outsl
iret
inc
and
test
add
out
add
adc
test
mov
adc
dec
daa
inc
push
mov
andb
dec
repz
add
movhps
shll
data16
dec
shll
lret
fnstenvs
cli
cs
sub
into
inc
ret
sbb
in
add
shll
lcall
dec
int3
jp
pop
sbb
pop
add
add
inc
sbb
movsb
pusha
and
pop
stos
cmp
and
ret
test
dec
lcall
out
and
mov
xor
adc
adc
imul
cmc
test
dec
push
adc
and
add
sub
xchg
sti
out
fwait
test
stc
and
daa
and
push
add
jb
push
dec
adc
jb
cmp
push
or
in
cmp
or
or
and
mov
aad
bnd
add
mov
enter
and
and
xchg
push
sub
dec
adc
pmulhuw
and
mov
add
or
xchg
es
or
or
lds
jns
cs
out
out
xlat
inc
bound
push
cld
and
fildl
daa
lock
nop
call
jb
sahf
loope
add
pop
hlt
js
mov
sbbb
add
call
daa
test
mov
mov
rcrb
repnz
mov
pop
cmpl
cld
mov
jne
add
adc
clc
push
lods
sub
pop
lahf
pop
push
mov
std
mov
mov
pop
push
pop
mov
incl
incb
xor
mov
add
push
push
xor
xchg
fsubr
add
cmp
jmp
inc
stos
add
imul
add
es
push
insl
fnstcw
frstor
push
jae
cmp
dec
adc
sbb
xor
jne
ja
push
call
or
int3
xor
pmulhuw
outsb
mov
pusha
adc
mov
cmp
pop
test
testb
adc
clc
daa
sbb
je
jg
mov
push
inc
cmp
in
adc
jnp
jmp
pop
and
or
loope
pop
push
popf
mov
cmpsb
repz
inc
call
push
mov
cli
jmp
movl
pop
cmp
popa
or
sbb
pop
jle
inc
add
lea
jecxz
mov
call
mov
dec
mov
jne
es
pushl
sub
sbb
hlt
inc
add
imul
jne
shll
mov
pop
das
push
add
lcall
clc
push
repz
and
rorl
push
add
dec
mov
jg
mov
fisttpl
lea
inc
jg
std
lea
add
cmp
jne
mov
xorb
sarl
xchg
jecxz
xor
mov
xor
sti
pop
dec
inc
je
sub
imul
nop
lcall
push
inc
or
cmp
inc
and
dec
cs
sub
leave
call
das
pop
pop
cltd
add
icebp
sub
call
mov
xchg
xchg
cmc
push
lds
push
push
xor
pop
jns
call
jge
scas
test
les
lds
cmp
int
dec
ja
xor
ss
or
adc
and
sbb
add
fcoms
sbb
pop
add
jnp
dec
sub
dec
ret
lea
pop
mov
mov
shll
movsl
mov
jb
dec
jecxz
jmp
xor
push
and
xchg
out
neg
cmp
je
inc
add
cmp
jl
jmp
push
js
rclb
ds
add
lret
add
jbe
jge
out
jbe
cmp
mov
popa
addr16
jbe
jl
out
je
sbb
cltd
in
fs
adc
and
ret
xchg
mov
cmpl
lock
jne
lea
xchg
push
xor
insl
cmp
pop
mov
push
cmp
popa
mov
sbb
pop
fwait
sbb
call
addb
adc
mov
int3
and
add
inc
jbe
jae
and
mov
sbb
jo
sub
stc
push
adc
repnz
push
call
je
push
test
inc
adc
in
pusha
fwait
mov
sbb
dec
inc
negb
inc
int
ficomps
dec
nop
insb
push
test
inc
lahf
add
iret
and
mov
call
cltd
int
sub
push
xchg
loopne
inc
xor
cmp
jne
and
insl
mov
hlt
adc
in
enter
fcmovnu
fstp
enter
fnstsw
loope
repnz
enter
jecxz
xor
xor
aad
xlat
fdivs
xor
xor
fcmovu
fdivl
xor
xor
loopne
or
xor
loop
loopne
mov
jae
cli
idiv
decl
int3
xor
int
dec
aas
jo
sbb
int3
or
pop
stos
and
sub
and
xorl
mov
nop
loopne
sarb
stc
and
call
push
and
aam
fisttpl
push
push
pop
shlb
push
sbb
out
sbb
stos
js
rcrl
sbb
movsb
test
sbb
pop
add
and
cmp
and
mov
add
fcoms
das
mov
add
enter
push
sbb
push
and
adc
int
xor
es
xor
add
or
pop
int3
inc
lcall
push
cwtl
data16
inc
aaa
sub
push
inc
lods
add
lods
or
lahf
bound
push
insb
mov
decl
test
push
push
jo
inc
outsb
jbe
sub
lahf
outsl
outsb
xchg
aas
jae
jb
fistpl
movsl
xor
lods
push
push
dec
rolb
mov
dec
or
gs
jbe
jg
or
add
rcr
dec
inc
inc
leave
mov
pop
add
mov
negl
push
andl
imul
outsb
das
fisubrl
insb
ret
sbb
mov
outsl
insb
jae
dec
into
in
sbb
adc
pop
push
inc
in
xchg
stos
add
sbb
mov
xor
or
fdivl
shll
lea
add
add
xorl
jnp
out
daa
dec
shll
dec
in
mov
das
dec
adc
inc
cld
xor
xorb
mov
xor
decl
adc
xchg
cmp
xor
add
pushl
cwtl
xor
xor
xor
in
mov
cld
mov
aaa
jbe
mov
xchg
aaa
stos
dec
dec
movsl
mov
or
cmp
mov
cmp
push
decl
add
cmp
cmp
cmp
cmp
aaa
sub
imul
cmp
adc
dec
push
inc
cmp
push
cmp
sub
add
dec
test
push
adc
xor
and
add
movaps
mov
push
inc
mov
sbb
cmc
push
gs
or
xor
and
or
xor
or
cmp
add
xchg
fwait
inc
popf
sbb
cmp
xorb
jb
add
xor
adc
xor
push
add
push
dec
add
popf
sbb
dec
stos
pusha
outsl
add
pop
rorl
mov
je
and
mov
adc
sahf
wrpkru
cld
mov
or
pop
add
and
arpl
mov
and
into
in
pop
add
add
inc
or
fs
adc
add
mov
jl
push
or
lock
and
inc
xor
push
push
inc
mov
add
add
aaa
mov
adc
push
add
xchg
mov
add
add
add
add
add
incl
add
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
