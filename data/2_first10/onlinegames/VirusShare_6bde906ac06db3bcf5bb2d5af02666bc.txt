out
call
in
sub
andb
push
push
push
push
xor
pop
lea
fcomi
stos
push
ljmp
pop
xor
jmp
mov
pop
ja
test
add
loop
mov
dec
gs
in
in
dec
mov
xor
cs
jbe
dec
mov
insb
jmp
mov
push
call
pop
mov
jg
mov
push
push
push
push
push
mov
push
push
call
mov
and
adc
clc
lea
push
add
in
and
call
jbe
adc
adc
pop
sbb
outsl
fisttps
pop
pop
pop
leave
ret
add
add
mov
mov
push
push
xchg
in
and
data16
jbe
pop
popf
fadd
add
in
mov
je
mov
lcall
push
or
mov
ror
jge
sti
daa
pop
inc
pop
inc
aaa
fsubr
mov
mov
jle
sub
lea
push
push
push
sbb
pop
dec
mov
or
xchg
daa
xor
clc
add
in
push
fists
push
rol
or
fxch
lock
add
push
pop
sbb
or
adc
movsb
mov
fdivr
cmp
lock
cmp
je
push
adc
clc
sbb
pop
or
inc
clc
cmp
or
push
lret
insl
or
push
xorb
je
lea
or
scas
dec
mov
pop
je
jbe
pop
out
cmp
pop
xor
or
shrb
adc
dec
mov
lods
lea
jo
push
push
scas
fildl
or
pop
or
mov
fstps
or
pop
test
cmp
adcl
add
adc
push
sub
mov
sbb
or
jno
sti
sti
int3
dec
inc
cmp
outsl
insl
out
pop
dec
mov
and
jbe
fldcw
push
mulb
divb
or
enter
cltd
add
add
fnstcw
cld
push
adc
xchg
icebp
add
popf
andl
leave
cmp
xchg
adc
enter
jnp
jb
jmp
and
or
mov
pop
jmp
lds
or
iret
push
jno
mov
jge
pusha
fdivr
fists
push
adc
push
mov
ror
mov
inc
inc
dec
dec
test
jne
push
in
cmp
pop
jmp
lds
rolb
popa
mov
sbb
mov
add
inc
cmpb
jg
cmp
je
add
and
pop
jecxz
or
clc
inc
and
ljmp
adc
adc
add
daa
push
jno
and
ljmp
fldt
mov
push
adc
or
add
decl
fisttps
inc
xor
lock
push
les
inc
mov
and
lods
jmp
or
mov
daa
test
pop
lods
add
xchg
addr16
pop
pop
pop
pusha
and
sbb
stc
cmp
in
lea
push
adcl
lea
add
sti
mov
add
sti
xchg
lea
sbb
adc
push
and
add
jnp
pop
add
xor
test
cmp
sub
pop
cmp
ret
push
push
sahf
mov
pop
les
xor
xor
lock
dec
sub
scas
pop
fldenv
xlat
push
xor
adc
sub
test
adc
sbb
pop
mov
in
ja
pop
pop
pop
lcall
mov
mov
inc
test
stc
sub
dec
push
inc
push
sub
imul
decl
js
clc
mov
enter
push
push
add
sub
andb
xor
cmpb
je
inc
push
jne
mov
or
sbb
sbb
test
jne
pop
xchg
pop
add
cs
rcll
lods
jmp
lcall
cld
push
pop
lcall
outsb
fsubs
add
je
popa
lcall
pop
add
pop
lcall
popw
fstps
jne
insb
inc
or
xchg
or
pop
test
inc
add
stos
xchg
and
mov
and
sub
les
push
cmp
cmp
add
dec
es
int
sbb
je
push
pusha
adc
pop
testl
and
sti
leave
std
mov
ret
sub
stos
push
mov
out
inc
fs
push
add
dec
stc
mov
mov
cmp
imul
add
or
push
mov
int3
inc
dec
sar
vzeroupper
flds
jb
daa
pushf
into
pop
iret
and
daa
addr16
roll
rorb
dec
ja
daa
aad
or
inc
cmp
jb
stc
rorb
adc
xchg
sub
mul
push
and
ss
rclb
or
add
ud2
jno
out
fldcw
and
imul
xchg
cmc
push
cmp
outsl
imull
lret
test
clc
je
jae
pop
sti
mov
mov
shl
xor
jnp
data16
or
push
xchg
dec
mov
pop
mov
addr16
hlt
xlat
xor
stos
push
cmp
adc
push
adc
scas
xor
lods
add
insb
ret
or
js
cmp
or
ljmp
fldt
inc
sbb
imul
imul
nop
addr16
push
push
xor
jl
push
jl
sti
shll
xor
sbb
push
jp
in
insb
xor
adc
fldl
jp
gs
in
outsb
xchg
or
jo
out
call
mov
jmp
cs
pop
jp
imul
out
pop
pop
lock
aas
push
add
cmc
and
inc
mov
or
sbb
xchg
ficoms
cmc
sbb
jp
int3
pop
mov
nop
sub
dec
je
adc
add
add
or
jo
pop
cli
aad
sbb
adc
sbb
int3
add
inc
fmuls
test
add
add
xor
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
add
xor
pop
mov
faddl
pop
add
xor
sbb
xor
inc
xor
shll
pop
outsb
sbbb
shl
lock
cli
xor
cmp
dec
dec
shll
mov
je
out
fiadds
rol
mov
stos
adc
push
outsl
mov
jmp
lahf
shrb
add
outsl
arpl
je
adc
out
cld
je
xor
xor
push
gs
bound
push
jb
jbe
insb
gs
lcall
jae
gs
xor
pop
add
dec
dec
inc
inc
and
pushw
add
ljmp
popa
outsl
imul
fs
adc
adc
punpckhbw
data16
cmp
xor
pop
imul
insl
fs
std
xchg
xchg
cmp
aaa
stos
xor
cmp
cmpsb
xor
fistl
sub
add
cmp
std
add
dec
inc
dec
dec
stc
test
fs
insb
dec
push
push
dec
inc
dec
adc
or
mov
jno
push
inc
or
add
add
dec
pop
nop
fs
gs
add
mov
add
add
pop
mov
int
mov
adc
push
push
addr16
insl
and
outsb
outsb
outsl
je
bound
and
outsb
and
inc
dec
push
and
fs
ja
fdivrs
sbb
cmpsb
adc
cmc
add
add
je
aas
jb
int
adc
lcall
fs
sbb
fcomp
arpl
xchg
cmc
mov
fs
cmc
push
xchg
popf
ja
pop
xchg
cmc
adc
imul
in
inc
dec
add
dec
adc
lds
leave
out
in
or
push
or
add
and
add
add
fwait
lock
add
popf
mov
and
xor
mov
inc
xor
dec
pop
mov
sub
shlb
scas
mov
add
mov
add
bound
jae
lods
scas
and
in
mov
popa
push
pop
jo
jb
cld
fs
loopne
inc
push
push
pop
repz
in
in
inc
and
jbe
shrb
jae
xor
imul
sti
ja
pusha
jb,pn
insb
outsl
arpl
sti
mov
push
or
lcall
mov
out
xor
adc
sub
js
imul
cmpsb
jae
cmpsb
loop
add
aaa
add
lcall
jbe
xchg
imul
imul
lcall
outsb
adcb
mov
rcr
cmpsb
jmp
cmpsl
push
add
ds
imul
shll
sbb
sub
fsubrs
cmpsb
jmp
das
clc
add
int
imul
dec
shll
mov
sarb
xor
rcr
loop
imulb
xor
add
sbb
ss
addr16
pop
ja
scas
add
jmp
adc
sub
mov
dec
outsb
je
jb
gs
and
push
pop
dec
dec
push
sbb
push
gs
fcos
rcr
inc
sub
dec
jo
outsb
push
jb
inc
adc
dec
dec
dec
dec
inc
push
pop
clc
addb
data16
bound
push
dec
inc
push
push
inc
push
inc
pop
dec
inc
jb
outsl
data16
divb
imul
pop
inc
jne
stos
insl
jnp
mov
push
push
jae
outsl
outsb
sbb
cmp
xlat
push
inc
fldenv
movsl
inc
add
mov
or
inc
add
add
xchg
add
aaa
sbb
pusha
lret
cmpsb
add
add
jnp
test
pop
add
and
add
es
and
add
inc
fmul
push
sbb
mov
inc
fldenv
add
add
popa
fsubs
test
add
mov
mov
and
ja
inc
pusha
stos
test
mov
aas
add
pop
sbb
push
popa
rorl
in
add
fldcw
adc
sbb
mov
inc
inc
xchg
adc
pop
mov
lods
mov
inc
fldt
dec
and
fs
fwait
les
add
sub
das
jae
and
out
push
addr16
enter
ror
mov
jmp
mov
rcl
enter
arpl
push
add
sub
push
xor
push
mov
neg
sbb
sbb
jmp
xor
sub
aam
lret
add
enter
push
pop
push
dec
push
push
dec
dec
mov
xor
jno
gs
imul
outsl
je
ja
jns
rcl
adc
jg
pop
sahf
xor
imul
jl
pusha
incl
or
pop
add
add
test
pop
or
pop
mov
je
insb
outsl
bound
inc
flds
cmpb
imul
mov
jae
insb
jae
pop
sarb
in
clc
ret
cld
mov
lcall
test
xlat
movsl
mov
or
mov
mov
mov
and
pusha
add
inc
or
call
neg
and
pusha
bswap
pushf
jmp
jno
add
inc
and
mov
das
fistpll
int
movl
sub
repz
push
cmp
loop
pop
jmp
mov
cmpsb
imul
mov
sub
repnz
jmp
add
or
jmp
nop
jg
add
xor
jnp
push
insb
jbe
ret
dec
dec
add
popf
outsw
sbb
ja
or
imul
cmp
inc
es
jne
push
add
jb
insb
or
jns
pop
sbb
imul
outsl
into
fidivs
pop
cmp
dec
or
or
mov
stos
daa
roll
sbb
pop
mov
pop
je
insb
scas
add
dec
insl
mov
fs
adc
cld
adc
jg
movsl
push
dec
dec
lds
into
and
mov
add
dec
rcll
cs
punpckldq
adc
xchg
lret
dec
aas
daa
inc
daa
push
mov
push
push
in
outsb
cmp
mov
pop
incl
push
mov
andl
lea
push
push
mov
push
mov
push
mov
fldt
call
lea
adc
or
jg
outsl
mov
push
push
push
call
dec
in
add
lcall
sub
sub
mov
int
or
movb
or
push
push
add
fistpll
pushl
inc
pop
orl
cs
or
testl
rdpmc
rclb
or
pusha
loop
imul
test
cwtl
push
call
out
ds
add
pop
fidivrs
gs
cwtl
adcl
adc
adc
push
call
insb
and
lcall
push
movzbl
shrl
int
rcll
pop
pop
adc
mov
mov
ficoms
andb
inc
or
aas
cmp
cmp
pop
jl
push
aaa
adc
mov
mov
in
leave
scas
in
add
iret
push
add
nop
bswap
xchg
shll
pop
add
add
aaa
jmp
push
js
jge
shrb
rclb
push
push
into
ss
adc
and
and
mov
add
xchg
sbb
xchg
aaa
in
out
inc
pop
push
and
test
jne
ret
cmpw
jne
add
dec
cmp
lret
inc
jne
mov
stc
xchg
adc
dec
or
and
add
push
nop
scas
adc
cmpsl
inc
mov
dec
adc
cmp
or
and
enter
rcrl
or
xchg
pushf
mov
xor
cmp
je
mov
cmp
je
in
xchg
addr16
divl
adc
pop
cmp
ja
jge
pushl
or
jae
cmc
mov
mov
cmp
insl
popa
sti
outsl
ljmp
jb
sub
sub
add
cmp
incl
je
decl
incl
mov
lea
addl
fcmovne
pushl
cld
jmp
xchg
push
cwtl
jle
sbb
jmp
or
fstpl
loopne
xchg
inc
sbb
call
push
or
dec
mov
push
sub
or
int3
mov
lock
jmp
loopne
jge
movsl
and
mov
int3
or
movsl
movsb
mov
std
and
mov
pop
mov
lock
cmp
nop
push
pop
dec
dec
mov
mov
adc
enter
xchg
mov
or
mov
stc
mov
add
or
rolb
or
sarl
push
mov
std
jg
fiaddl
ret
xor
xor
inc
cmp
or
sbb
add
in
cli
jne
or
call
adcl
jns
cmp
and
mov
add
jl
adcb
push
shlb
add
xchg
orl
adc
or
and
shlb
hlt
shlb
movb
pop
pop
shlb
push
ficoml
adc
int3
sub
dec
jle
sbbl
adc
cwtl
das
fstl
xor
nop
adc
add
fwait
popa
cld
lret
aas
adc
or
arpl
mov
js
addr16
push
mov
in
jne
push
pop
jmp
adc
mov
movsb
shl
dec
les
sti
fs
add
orb
mov
add
and
adc
adc
cwtl
jnp
add
lock
mov
push
cmp
ret
jae
adc
int3
test
mov
rol
push
push
xor
add
jo
mov
add
or
popf
insb
mov
xchg
rdmsr
or
inc
add
fisttpl
sub
push
cmc
data16
negl
outsl
xor
ja
and
cli
push
cs
fs
dec
mov
insb
std
lret
loopne
out
mov
cmp
inc
test
push
push
jnp
xor
outsb
lret
call
mov
pop
dec
xlat
and
icebp
jmp
andb
mov
popf
leave
adc
xchg
icebp
das
adc
pop
ja
jne
xchg
ficoms
ja
rorb
negb
jbe
sbb
hlt
imul
mov
sbb
pop
cmpsl
push
add
mov
add
add
mov
rclb
jnp
aaa
ret
add
push
test
add
aaa
sub
push
dec
ret
mov
pop
and
mov
jg
mov
je
push
jmp
adc
pop
sub
xor
mov
sbb
outsb
out
or
or
call
icebp
sub
pop
mov
idiv
adc
jg
sbb
jmp
add
add
jmp
xor
add
nop
inc
adc
adc
shlb
cwtl
shlb
jl
in
xchg
shlb
rclb
adc
lret
jae
test
sub
inc
aam
les
mov
js
and
cld
sub
daa
hlt
shlb
fcoms
add
push
push
ja
insb
scas
cwtl
pop
sbb
call
cmpl
inc
mov
and
inc
xchg
push
clc
fs
ja
xor
pop
stos
icebp
pop
mov
cmpb
mov
xor
inc
and
jb
in
xchg
icebp
mov
imul
cmp
add
inc
andl
push
or
inc
sub
in
dec
mov
and
or
imul
adc
and
lods
mov
dec
adc
inc
sarb
mov
adc
call
in
mov
stc
jae
incl
lret
shr
add
test
xchg
pop
stos
leave
xor
mov
dec
or
xor
mov
dec
push
pop
jne
adc
sbb
xchg
mov
fistpll
mov
mov
add
loop
or
adc
or
xor
mov
jne
xor
aam
xchg
dec
pop
outsb
inc
xchg
sub
stos
pop
xor
inc
pop
bound
push
xchg
pop
jbe
or
imulb
mov
cmp
xlat
and
push
jl
and
ss
div
or
add
lea
inc
sti
or
sbb
add
push
clc
fcmovnu
jle
and
not
and
testl
mov
in
fldl
out
lret
push
js
add
push
fnstsw
or
fisubs
fimull
add
in
pop
aam
pushf
cmp
jo
and
out
xadd
adc
pop
inc
outsb
lods
cld
mov
pop
lock
and
not
cmp
add
repz
mov
shrl
std
jmp
or
add
dec
daa
pop
jg
push
mov
lea
sbb
in
outsl
ja
cli
mov
push
push
hlt
mov
not
and
sub
and
adc
movb
mov
fidivl
add
mov
fiaddl
ficompl
xchg
adc
sbb
inc
xor
scas
roll
mov
ret
inc
or
xor
or
inc
std
sbb
add
out
cmp
popa
xor
add
sbb
lret
lret
jne
les
repz
fcomp
cwtl
subb
mov
pop
or
and
not
ficomps
sahf
popa
das
pusha
adc
pop
scas
testl
sti
mov
pop
roll
sub
add
pop
push
in
mov
xor
add
sub
ret
push
fcom
add
fisubrs
mov
pop
fnstcw
pop
xlat
mov
repz
nop
imul
xor
lret
ja
fmull
or
xchg
jno
pop
fndisi(8087
popf
std
stos
lods
es
add
adc
fidivrs
stc
lods
mov
pop
aaa
das
push
mov
cmpsb
pop
out
xor
xor
cmp
or
and
or
popa
cs
adc
add
or
mov
ret
lods
mov
and
aad
aam
pop
imul
mulb
push
imul
sbb
shl
fidivl
jl
shlb
clc
jg
loopne
mov
mov
adc
dec
pop
or
fadds
hlt
sub
and
clc
jb
xchg
fdivp
push
pop
pop
es
adc
repnz
push
mov
or
movsb
and
or
mov
leave
and
call
lock
push
ret
mov
pop
lods
hlt
pop
adc
call
adc
mov
lods
mov
jge
repz
push
adc
add
pop
ret
and
in
pop
and
mov
cmp
cmp
jge
cli
fnstcw
out
fwait
pop
jg,pt
or
add
mov
mov
mov
out
loope
repnz
jl
sbb
loopne
ret
inc
enter
sti
add
pop
aaa
or
mov
push
fbstp
inc
fimuls
lcall
hlt
adc
cmp
xchg
jbe
call
repz
adc
inc
loop
shr
or
xlat
lea
mov
fdivs
test
mov
add
jo
fdivrs
mov
daa
mov
and
sub
aad
flds
outsl
cmp
cmp
push
movl
xchg
dec
fisttps
sub
adc
or
xor
test
insb
inc
cmp
sbb
xchg
fldt
test
xor
mov
int
cld
cmp
or
jns,pn
lock
js
lds
popa
popf
insl
adc
pusha
adc
xor
mov
repnz
jbe
or
in
mov
ret
mov
shlb
dec
inc
push
outsl
addr16
in
add
mov
mov
xchg
fcmovu
dec
jmp
jb
repz
sub
int3
pop
pusha
dec
mov
outsl
cli
jno
cli
xor
sti
sbb
mov
jae
jl
sti
pop
or
mov
jle
sub
inc
stc
pop
aam
out
mul
int
lods
outsb
sbb
lock
js
pusha
jp
mov
mov
fidivl
lods
xor
test
out
aam
xchg
jae
test
out
sub
xor
add
add
xchg
lods
mov
or
push
aas
sbb
cmp
into
sub
fstps
push
in
loop
les
in
mov
inc
out
idiv
ss
in
clc
jl
pop
insb
cmp
pushl
in
jnp
xlat
or
aam
gs
lods
les
mov
jne
cli
mov
mov
js
xorl
and
stos
rcrb
fucomi
jp
sbb
push
or
in
sbb
jl
stc
test
inc
int3
or
inc
push
es
xchg
or
mov
jns
and
int
mov
mov
mov
cltd
or
cmp
fcmovnbe
mov
ret
pop
pop
gs
sub
xchg
in
push
rcrl
jns
lock
int3
or
push
or
ja
jno
dec
mov
in
jge,pt
out
call
unpckhps
sbb
adc
rcrl
test
sub
jmp
dec
xor
xchg
fstpt
test
jecxz
jp
mov
add
xor
mov
loopne
sub
jecxz
jp
ret
xor
mov
add
or
ja
mov
fwait
mov
lds
jp
mov
lea
mov
xor
lcall
mov
mov
outsl
xchg
ret
rcl
sub
pandn
repnz
repz
rclb
pop
jecxz
mov
push
dec
mov
pop
jge
xlat
insl
jmp
push
add
movsb
mov
imul
mov
inc
call
pusha
stos
inc
js
cmp
xchg
les
jge
mov
jg
cmp
jl
push
pop
sub
push
push
push
popf
nop
stc
push
idiv
jmp
xor
cmp
adc
xlat
pop
fcmovbe
insl
les
and
insl
test
pop
pop
mov
mov
xchg
outsl
sti
mov
adc
adc
add
sbb
push
add
cmp
jne
xlat
adcb
fwait
jp
call
icebp
jne
shr
mov
shlb
adc
mov
cmp
je
push
sti
push
movsbl
add
sub
jne
inc
cmp
jne
cmp
sub
add
add
and
adc
mov
inc
jl
add
jg
fstpt
adc
inc
cmp
shll
add
push
fistl
jbe
mov
pop
rclb
mov
sub
insb
jbe
or
cmpb
test
or
adc
lea
push
sbb
mov
jno
mov
mov
data16
jmp
addl
loope
loope
rep
pop
pop
push
aaa
or
neg
ja
dec
sub
jne
push
lea
adc
add
je
pop
mov
nop
rclb
jbe
jge
int
shr
sub
or
and
mov
or
aad
insl
mov
mov
mov
fistpl
adc
fisubrs
mov
inc
rclb
scas
sti
or
shrb
sub
pop
fcomps
lock
rclb
push
sbb
sub
outsb
fs
mov
or
add
pop
adcb
adc
push
aaa
ffree
sub
es
mov
lods
mov
test
int3
pop
xorl
xor
inc
add
push
jb
push
or
sbb
push
mov
sbb
stos
or
lcall
and
and
adc
int
adc
lock
push
repnz
mov
pop
sbb
hlt
pushw
fdivrl
mov
xor
mov
jl
pop
push
mov
sbb
lret
and
sbb
mov
xchg
add
cmp
incb
sti
adc
lods
adc
xchg
cmc
mov
mov
fnsetpm(287
push
movsb
test
sbb
or
push
or
ljmp
mov
adc
ret
sbb
sub
cmpsl
add
popf
adc
jle
or
fdivr
fimuls
int3
enter
out
sbbb
add
fwait
pusha
btcl
test
push
xor
push
data16
arpl
push
movsl
mov
mov
adc
xchg
mov
lea
jmp
mov
or
jmp
inc
mov
shlb
fildl
adc
pushl
int3
fcoms
aaa
xchg
movsl
xor
and
jg
cmc
test
data16
or
ret
call
ror
stc
clc
add
bt
sub
call
pushf
mov
fldl
std
push
pusha
sahf
pushf
cmp
add
push
jae
push
sarb
jmp
movb
jecxz
loope
roll
xor
sbb
dec
jno
mov
and
divl
xchg
ret
jmp
adc
or
repnz
stc
fdivr
out
sub
aas
lods
paddd
sahf
cltd
nop
in
push
repz
jmp
cmp
sub
adc
inc
loope
mov
inc
add
test
je
testl
mov
ja
mov
pop
push
inc
dec
call
sti
dec
dec
arpl
xchg
push
or
push
push
adcb
jnp
adc
inc
push
mov
or
imul
xlat
rol
cs
dec
out
xchg
sahf
aad
cld
push
push
pushl
pop
or
adc
test
sbb
jp
and
mov
sahf
mov
mov
hlt
jmp
adc
shrb
ds
push
push
enter
push
cmpl
fidivs
xchg
outsl
xor
xor
lock
adc
pop
add
les
sti
inc
out
xlat
stc
dec
leave
ret
hlt
add
bnd
movsb
arpl
rorb
ret
inc
add
shrl
inc
clc
outsb
mov
mov
sbb
sbb
push
inc
inc
call
jge
adc
mov
mov
cmp
mov
je
pop
xor
push
xor
mov
pop
adc
pop
pushf
test
inc
push
add
push
inc
add
adc
and
adc
pop
adc
test
pop
loopne
cwtl
and
and
int
jg
and
pop
out
rorl
daa
jb
lea
rcll
mov
ret
sub
or
or
mov
xor
cltd
xchg
adc
shl
mov
stc
lcall
lret
or
idivb
sub
cmpsb
leave
pop
xchg
iret
leave
and
call
jmp
sub
clc
sbb
mov
cld
lea
test
test
fnsave
testl
insb
mul
mov
fidivrs
push
mov
fcmovnu
call
push
data16
add
or
not
cmp
sbb
and
enter
inc
xor
add
test
dec
push
sar
sbb
arpl
cmc
cmp
in
or
add
dec
sub
inc
sti
sbb
pushf
xor
sub
jle
daa
push
xlat
fisubrs
int
and
aas
ds
xlat
fdiv
cmpsb
or
xor
test
xchg
add
int
jb
pop
outsb
add
data16
outsl
sti
outsb
cld
je
sub
in
jae
pop
mov
xchg
and
repz
arpl
hlt
cmp
jb
imul
pop
or
in
sbb
jne
adc
mov
cli
cmc
aaa
ja
adc
or
mov
cmp
cmpsl
cmp
in
ljmp
outsb
sbb
sbb
insl
addr16
mov
lahf
stc
xor
or
mov
js
pushl
inc
in
lcall
out
mov
inc
pop
inc
cmp
jb
pop
call
mov
mov
jle
icebp
adc
lock
jne
jmp
push
fldlg2
cs
mov
es
jne
dec
rsm
push
add
mov
xchg
pop
add
cmp
in
call
shlb
mov
and
mov
shlb
hlt
shlb
sbb
iret
jo
push
mov
idivb
lock
xchg
jo
mov
stc
scas
fidivl
hlt
or
sub
push
inc
pop
incl
jae
adc
and
pop
cmp
sub
fstpl
push
push
mov
push
cmp
hlt
xchg
fsubs
mov
dec
push
dec
sbb
je
push
dec
push
arpl
inc
fnstsw
cmp
and
sarl
or
lea
fwait
and
push
sbb
xor
mov
add
shll
scas
jnp
jnp
xchg
push
adc
add
inc
cmc
push
sahf
aaa
ret
cmp
lds
push
cmp
aas
cs
enter
cs
testl
inc
les
cltd
stos
or
sub
mov
add
rcl
fcomp
push
mov
mov
call
push
shl
add
int3
dec
jo
test
adc
jo
cmp
lea
loopne
adc
sar
cmp
mov
cld
jns
clc
mov
sbb
add
pop
adc
fdivl
popf
cmp
enter
shlb
pop
jb
xor
and
sahf
and
pop
into
fisubs
mov
push
vpcmpgtd
mov
mov
div
pop
jo
jbe
das
nop
hlt
cmp
sbb
and
mov
imul
adc
inc
loopne
test
ss
ljmp
sbb
jnp
inc
orl
fnsave
les
push
ret
add
fwait
imul
leave
or
add
sub
mov
push
xor
mov
add
dec
testb
xor
testl
fmull
fs
insb
adc
addr16
insl
mov
ljmp
jne
dec
mov
cs
jae
lock
repnz
movsl
pop
pushf
xchg
lahf
gs
jb
xor
or
cmpsb
xor
cmpsl
push
gs
lret
insl
fsts
lods
push
les
imul
enter
lret
fldt
or
into
jno
iret
mov
mov
fwait
shrb
roll
aam
shll
mov
ret
lcall
xchg
gs
mov
xchg
xchg
xchg
inc
push
cwtl
js
imul
jmp
fcmovnu
push
fstl
fnstsw
imul
in
lcall
mov
mov
xor
jb
mov
or
bound
mov
mov
inc
mov
arpl
sbb
and
and
fdivs
sub
lods
push
lock
add
pop
ljmp
and
jns
cld
adc
and
mov
mov
dec
xchg
ret
adc
call
jne
imul
xor
push
rcrl
mov
rep
shrd
dec
aam
mov
jbe
mov
inc
aaa
sbbl
sahf
mov
cmc
scas
in
je
push
adc
adc
iret
in
iret
imul
sub
cltd
ss
inc
add
es
sbbl
imul
repz
adc
loopne
mov
add
push
or
pop
inc
mov
pop
pop
push
xchg
add
jge
mov
rolb
add
jmp
or
xor
outsb
enter
inc
sub
cmp
fmull
inc
out
in
jle
add
or
addl
adc
cmp
aam
sub
fadds
dec
cmp
xor
mov
add
sbb
cs
mov
push
mov
addb
or
sbb
mov
orl
xchg
loopne
mov
xchg
jp
das
je
in
or
ljmp
sub
pop
jae
je
adc
out
and
mov
xor
sbb
mov
mov
fstps
xchg
jnp
cmp
icebp
clc
bound
out
mov
outsl
xor
pushf
xor
jmp
jle
and
pop
pop
jne
aas
jbe
stos
jnp
xor
popf
test
xlat
int3
mov
xor
sub
mov
push
sbb
pop
je
push
pop
outsl
jns
mov
pop
or
sub
add
ret
mov
xor
inc
and
je
sbb
fistl
or
jle
adc
data16
sub
push
adc
out
cmp
sub
adc
jmp
aas
adc
je
addb
xchg
sbb
in
mov
loop
faddl
stos
popl
ds
add
aas
outsb
sub
mov
imul
cmpsb
stos
pop
cs
cmp
imul
imul
cltd
test
insb
sub
cld
jg
repz
adc
push
sub
cwtl
xchg
push
and
push
pop
jne
push
in
cwtl
adc
das
or
scas
xor
adc
jae
adc
fldenv
adc
jecxz,pn
jl
test
cmp
or
or
cs
or
pop
cld
pop
in
lret
push
pop
arpl
push
das
mov
fstl
leave
shl
in
enter
mov
mov
nop
pop
jge
mov
add
mov
mov
cld
add
pop
sti
aad
mov
adc
mov
mov
and
and
js
and
pop
mov
push
push
out
xor
fs
add
jb
cmp
add
mov
xlat
ss
adc
ja
and
mov
in
or
cld
add
sbb
movsb
mov
call
rorl
cmp
lcall
in
fcompl
movsb
imul
mov
mov
stos
lods
bound
int
fldcw
mov
mov
mov
dec
rcl
jne
mov
mov
mov
mov
and
pop
mov
sarl
scas
fnstenv
ret
les
lds
mov
dec
shll
enter
lret
int
dec
shll
iret
rcl
rcl
xor
xlat
xor
data16
sub
fs
fnsave
jae
loopne
loope
jns
shll
out
adc
xor
imul
cmpsb
jmp
ret
outsb
imul
cmp
lcall
es
fistpl
imul
jbe
jmp
call
inc
push
in
jmp
mov
sbb
push
cltd
xor
mov
aaa
cmp
mov
dec
les
popa
js
push
test
adc
jne
call
popf
mov
fdivrl
cld
and
push
or
push
lods
mov
sub
pop
popf
fdivr
lods
movsb
movsb
imul
jb
shll
sub
stc
cli
sti
dec
lock
sbb
inc
inc
ss
into
mov
cld
mov
imul
inc
inc
push
pop
push
mov
mov
das
mov
cs
mov
xchg
sub
sub
mov
sbb
lcall
fcoml
faddl
stc
sbb
ja
aad
cmp
cmp
mov
mov
sahf
sbb
fsubl
ret
incl
jge
push
ret
bnd
dec
cld
push
xchg
add
mov
mov
ljmp
cmp
mov
jg
jle
js
add
call
popa
fildl
adc
loopne
add
xor
pop
insb
scas
stc
jmp
call
arpl
xchg
fistpl
clc
or
rcrb
fdivrs
dec
jbe
and
inc
ret
hlt
ja
sbb
pop
add
cmp
sbb
jg
cld
je
xchg
dec
in
std
xor
dec
mov
popa
arpl
outsl
shll
insb
popa
dec
shll
outsl
popl
shlb
outsb
cmp
cmpsl
push
sub
mov
call
nop
rorl
jge
or
dec
push
adc
mov
movsl
push
mov
sbb
cmp
iret
and
hlt
int
int
adc
bound
mov
aaa
or
pop
daa
mov
mov
push
inc
xchg
movb
mov
dec
mov
add
ja
add
cmc
add
cwtl
mov
inc
lret
adc
mov
jmp
nop
xchg
fstpt
add
arpl
pusha
testb
jmp
gs
imul
pop
pop
add
mov
and
enter
mov
iret
sbbb
or
xor
icebp
pop
test
add
push
mov
mov
fdivs
enter
cmc
mov
imull
cmc
or
test
in
sbb
push
std
inc
loop
cmc
dec
adc
add
jp
jb
add
ficoms
cld
pop
inc
es
mov
cmp
cmp
pop
and
or
out
push
clc
pop
dec
cmp
in
adc
outsl
sti
cmp
mov
mov
or
lea
jmp
and
fcmove
shll
mov
cmp
and
sahf
ffree
lods
fs
jl
push
rcrl
mov
mov
sub
test
jle
mov
aad
xorb
push
add
pop
jmp
pop
sbbl
mov
dec
mov
mov
ljmp
fildl
sub
inc
and
xor
ss
sub
push
cmp
push
test
rcll
mov
sub
andl
jge
mov
jecxz
lods
push
pushf
pop
add
xor
cs
sar
inc
or
cmp
and
scas
loope
xlat
cmp
xchg
add
adc
clc
pop
push
and
test
cmpsb
stc
int
lock
je
sub
clc
jb
pop
xchg
push
or
faddp
jle,pt
jmp
and
xor
aad
out
jo
pop
xchg
pop
jb
push
push
or
imul
or
adc
cmp
push
test
imul
push
cmp
adc
lods
inc
mov
pop
jbe
inc
pop
xlat
cmp
ds
xor
push
data16
push
push
fwait
push
ljmp
add
sbb
inc
cmp
jb
call
push
cmp
jb
push
fs
rcl
push
jl
cli
insb
movsb
inc
dec
push
mov
xchg
or
jns
inc
movsb
mov
push
sbb
jb
sti
inc
cmp
mov
pop
fmul
jae
adc
and
insb
and
int3
add
mov
push
popa
mov
pop
movsl
ja
jp
cmp
mov
icebp
mov
sub
push
cli
sarb
xor
std
out
orb
cmp
mov
enter
sti
sbbl
aas
test
pop
mov
push
mov
mov
addr16
pushl
xchg
loopne
inc
in
add
adcb
xchg
cmp
icebp
cltd
rorb
lcall
fdivs
mov
mov
push
out
fsubrs
inc
cmp
jb
pop
sub
add
insb
xchg
sbb
movsl
ljmp
aam
jecxz
push
and
xor
pop
outsb
or
pop
in
in
add
xchg
lret
out
call
mov
xchg
gs
arpl
jbe
outsb
push
imul
dec
push
mov
cmp
mov
pop
into
jg
faddl
push
je
push
push
test
sbb
int3
shlb
xor
jne
loopne
dec
mov
adc
add
jns
aam
xor
lock
cmpb
and
add
pop
test
and
loope
or
cmpsb
and
sti
sub
mov
addr16
sub
add
push
xor
les
cmp
loopne
mov
lret
fcoms
fs
fldl
push
xchg
loope
cmp
push
scas
gs
push
push
sbb
pop
sbb
pushw
enter
fnstenv
dec
xor
js
pop
cld
sbb
or
rorb
int3
cmp
cmp
dec
sub
lds
adc
ficoms
xchg
push
fldenv
data16
in
add
ja
gs
pop
xchg
gs
dec
imul
aaa
aaa
loopne
loop
jecxz
imul
pop
out
out
dec
and
ljmp
dec
rcl
insb
subb
inc
shll
popa
insl
pop
dec
lret
mov
or
push
dec
inc
popa
arpl
shll
add
push
testl
sbb
roll
aas
fsubrl
out
int3
lods
pop
js
mov
fcoms
jmp
pop
fnstenv
dec
sbb
test
xchg
lret
add
cs
pop
insb
enter
xchg
sub
mov
dec
sbb
adc
fdivs
adc
das
aam
icebp
call
mov
pop
fcmovnu
push
push
add
decl
lea
push
push
or
push
or
dec
mov
out
insb
ljmp
pop
add
lds
cld
pop
rorb
jp
cmpl
xor
icebp
mov
cmova
fsubrs
sbb
add
cwtl
int3
insl
push
stc
push
rep
mov
push
cmp
xor
adc
push
sub
adc
jne
clc
lret
or
cmp
cmp
cltd
loopne
sbb
dec
add
call
mov
pop
mov
or
imul
fsubrl
imul
imul
out
in
loop
jecxz
jae
in
out
jmp
je
jnp
bound
daa
mov
and
arpl
aaa
jmp
xchg
ss
push
xor
mov
pop
sub
sub
shrb
popa
sub
shrb
sub
leave
cs
or
fnstcw
mov
int3
xorb
jns
cmp
xchg
jp
push
data16
inc
push
pop
lcall
fwait
or
inc
ror
leave
mov
xor
lret
ja
leave
fxch
jbe
int
arpl
ss
leave
rcl
lcall
mov
je
sbb
sbb
xchg
and
sbb
sbb
cs
shrb
int
fs
push
sub
shrb
insl
push
imul
jb
outsb
fstp
leave
rclb
outsl
jo
jno
jns
pushf
pushf
sub
jae
pop
xchg
sbb
ja
jne
jbe
rorb
sbb
mov
fxch
mov
mov
fnstcw
rcr
leave
leave
leave
rol
les
dec
out
pop
ud0
lods
pop
mov
pop
testb
fs
or
push
movsb
sbb
out
lcall
movsb
pop
jmp
mov
pop
lcall
out
insb
in
pop
lcall
pusha
aaa
popa
sbb
dec
xchg
popa
bound
fs
js
dec
data16
fnstsw
lea
xchg
xchg
push
ja
jb
pop
shrl
lret
scas
popa
scas
jae
je
mov
or
push
cmp
or
pop
jae
mov
arpl
cs
addr16
lods
test
add
add
imull
or
movsb
jae
add
jo
invd
sbb
jg
cmp
jb
push
dec
adc
shlb
or
or
mov
push
std
push
mov
and
mov
pop
ljmp
pop
lock
pusha
cli
int3
int
jmp
stc
sahf
jmp
ret
loopne
inc
pop
loope
xchg
dec
insb
push
loopne
and
movsl
call
inc
cmp
jno
je
jne
jmp
leave
rorb
xor
jae
out
repnz
ds
rorb
sar
roll
addr16
shrb
aam
cmp
aad
pop
stc
xlat
stc
fdivr
fsubl
inc
mov
stc
push
jns
cmp
hlt
mul
cmp
aaa
adc
clc
leave
clc
faddl
repnz
cld
aam
push
leave
aad
fdivr
fsincos
bswap
and
popf
pop
pop
ja
ret
addb
not
outsb
fistps
push
or
sbb
add
xor
subl
or
lods
divb
lods
and
cmp
mov
insb
mov
mov
popf
popf
insb
sbb
leave
shrb
mov
mov
popf
sub
pushf
mov
sahf
dec
insl
popf
sub
leave
lahf
mov
pushf
pushf
pushf
pushf
dec
mov
leave
rorb
xchg
aad
fsts
pop
xchg
dec
enter
xchg
cwtl
cltd
lcall
test
imul
mov
mov
leave
leave
leave
leave
mov
int3
fwait
mov
push
fdivs
adc
clc
fs
and
fdivr
push
aam
ds
ds
sub
pop
test
cmp
pushf
fstps
add
cmp
xchg
add
test
into
in
cmp
pop
jp
aas
pop
test
pop
addr16
repz
push
insb
or
jl
sahf
popf
hlt
inc
push
hlt
xchg
incl
xchg
pop
icebp
jle
inc
mov
dec
or
imul
add
in
mov
sahf
lahf
or
push
cmp
add
pop
nop
add
imulb
sbb
int
ret
jmp
dec
cs
test
leave
and
scas
sbb
in
ljmp
add
je
cmp
das
imul
imul
imul
cmpsb
imul
outsb
lcall
xor
lret
cltd
int3
fnstenv
orb
hlt
push
xor
mov
dec
dec
outsl
bound
gs
mov
sti
mov
int3
test
add
mov
mov
push
mov
je
jecxz
jo
cmp
test
ficompl
mov
inc
cmpl
lods
int
faddl
sahf
dec
mov
mov
aas
push
push
pop
mov
pusha
push
gs
jmp
shll
push
repnz
push
imulb
mov
add
mov
out
clc
into
out
pop
call
pop
clc
mov
fsubrs
add
mov
rorb
fidivs
mov
add
loopne
je
mov
xor
lea
mov
cld
dec
add
jmp
lock
je
rorl
rep
push
ss
fldl
dec
mov
les
dec
add
rolb
js
xlat
push
fldt
jl
mov
push
jmp
lcall
shll
in
or
mov
lret
out
stos
pop
cltd
lods
jmp
out
ret
mov
call
je
test
mulb
int3
add
adc
cmp
mov
inc
push
mov
inc
sub
or
sbb
sbb
mov
cld
jl
mov
sbb
mov
push
mov
add
je
movsb
pushf
mov
sub
mov
imull
nop
mov
cmp
mov
cltd
loope
add
daa
pusha
jecxz
notl
or
jmp
push
popf
mov
jo
jge
push
ret
andl
xor
sbb
movsl
pop
and
add
sub
popf
out
push
dec
sub
shrl
in
pop
add
adc
jge
mov
fldcw
cmpl
scas
xor
pop
and
and
movsl
inc
add
sbb
popa
adc
test
or
push
add
std
or
cmpl
pop
inc
fld
cmp
xchg
inc
xchg
fsubrl
push
or
jnp
into
or
push
clc
mov
cmc
inc
hlt
pop
pop
lds
jne
or
jo
add
sar
mov
test
pop
cld
push
jge
movsb
add
jge
test
cmc
stos
sbb
push
hlt
push
int
shlb
dec
dec
mov
mov
mov
into
addb
inc
xor
push
cmp
sub
or
xchg
in
loope
mov
std
or
out
sbb
add
cwtl
ret
sub
push
and
pop
xchg
test
push
mov
scas
popaw
or
mov
and
sub
daa
enter
lret
mov
inc
cwtl
jmp
sub
loope
mov
cwtl
mov
mov
pushf
insb
scas
inc
insb
push
push
push
ret
mov
call
lcall
jns
sti
enter
cld
fs
pop
test
mov
add
jmp
push
ficomps
push
or
sub
jge
sbb
fwait
mov
cs
mov
sbb
pushf
sbb
loop
xchg
ljmp
jmp
clc
mov
pop
pop
das
pusha
mov
dec
mov
dec
xchg
in
pushf
icebp
mov
enter
js
fisttps
pop
popf
sbb
add
cmpw
call
cmp
cmp
hlt
add
stos
fs
mov
adc
or
inc
cmp
mov
and
sbb
pushl
cmp
js
jg
mov
add
subl
pop
mov
dec
or
imul
push
inc
shrl
jl
cs
add
mov
add
insl
fisttpl
push
inc
dec
sbb
shrl
rolb
sub
add
sbb
add
test
mov
cmpb
add
add
movl
add
jno
aad
fisubrs
mov
lods
jae
add
mov
dec
ja
push
mov
mov
fistpll
addb
pusha
lea
shr
jle
movzwl
mov
jne
daa
add
ljmp
je
cmp
jne
mov
jg
add
jmp
cmp
jne
data16
or
jne
or
sub
pop
shl
mov
or
cli
pop
jae
push
fmull
adc
mov
aaa
mov
adc
xchg
add
jmp
sbb
notb
mov
push
repz
jle
add
jbe
jno
push
sti
ficompl
inc
pushf
dec
je
adc
fcmovnu
mov
adc
iret
pop
movsl
pop
cli
sbb
and
mov
insb
in
ret
cld
add
push
scas
clc
add
sub
push
or
and
sub
loope
pop
sub
into
js
mov
aaa
push
add
lock
sbb
lea
xor
outsb
sbb
add
adc
aad
mov
and
insb
iret
mov
xor
lahf
inc
aaa
pushl
push
int3
lret
xor
fs
pop
fcoml
ds
or
add
jae
aad
pop
test
js
in
aam
xor
out
addr16
repz
push
cld
xchg
or
xor
popa
add
fwait
push
sarl
test
dec
mov
outsl
mov
and
inc
cmp
testb
fsubrs
add
in
sub
mov
and
adc
and
xchg
push
xor
orl
xchg
push
gs
sub
out
fimuls
lcall
data16
xor
mov
hlt
hlt
call
testb
cmp
mov
xor
js
push
sub
mov
nop
push
out
pop
sbb
pop
pusha
mov
adc
sub
fsubrl
mov
push
pop
xchg
jo
outsl
gs
push
dec
push
lcall
aas
push
lods
mov
adc
mov
push
cld
loopne
push
mov
mov
sbb
enter
jmp
xchg
stc
pop
pop
or
les
mov
addl
lock
imul
sbb
sub
pop
cmp
add
lds
leave
mov
jae
lret
pusha
lods
test
xchg
push
ljmp
cltd
addl
popa
movb
adc
insl
sahf
xor
int3
into
fs
ret
aad
shrl
outsb
cltd
jne
sar
or
mov
mov
rcrb
or
or
push
cmp
out
cmp
add
ror
dec
pop
sub
or
lcall
pmuludq
jge
ficoms
arpl
stos
push
or
loop
and
jo
sub
sbb
lock
fwait
sbb
sahf
jbe
inc
mov
push
shl
xlat
lods
jp
push
xchg
bound
in
popa
call
mov
cmp
rorb
xor
push
push
adc
repz
add
xlat
push
adc
push
mov
hlt
lret
inc
jbe
rolb
and
fisttpll
push
outsl
pop
rol
in
push
loop
mov
jge
stos
adc
shr
cmpsl
push
and
sbbb
subb
cltd
add
push
rolb
or
fcoml
fisubrs
adc
xchg
cmp
inc
cmp
jl
mov
mov
sbb
scas
or
pop
je
push
fucomip
test
dec
loopne
xchg
daa
sub
jl
and
ret
ds
dec
xchg
xchg
xchg
xchg
arpl
xchg
xchg
xchg
xchg
imul
xchg
js
mov
jmp
mov
mov
or
ficomps
popf
in
xor
jmp
xor
inc
and
push
gs
lret
mov
arpl
xor
lods
mov
popa
jns
cs
mov
test
add
fdivr
or
pop
cwtl
cwtl
xor
cmp
sbb
mov
jns
mov
cmp
xlat
js
sbb
in
adc
cmp
push
mov
popa
and
mov
adc
pop
addr16
xor
hlt
xor
test
push
inc
xor
xor
sub
ljmp
ljmp
and
mov
and
jnp
sub
imul
or
into
addl
xchg
ret
sar
xchg
or
jo
fsts
pop
pop
mov
int3
loope
jecxz
jnp
out
xor
mov
mov
pop
ret
mov
mov
mov
add
cwtl
enter
shl
roll
loope
dec
mov
dec
xchg
jle
and
xchg
fisubl
sbb
xchg
pop
mov
mov
sbb
or
adc
pop
gs
fisttps
mov
ss
add
call
cli
rcr
sub
xor
sbb
push
and
and
fwait
pop
mov
jne
sbb
fwait
imul
and
jns
mov
push
rcrl
fs
add
mov
sub
add
xchg
sub
sub
int3
rorl
lret
jbe
or
inc
sub
jp
cld
in
xorb
arpl
nop
inc
inc
sahf
pop
ret
dec
shrb
xor
sub
inc
and
mov
gs
dec
fs
mov
popa
je
push
outsl
outsl
insb
push
xor
popa
jo
push
decb
jb
jne
insb
and
mov
inc
cmp
ss
adc
pop
or
mov
outsb
mov
js
xchg
cmovbe
aas
insl
ja
popf
arpl
push
mov
incb
jge
dec
outsl
fs
adc
decl
out
dec
popa
insl
adc
add
fs
imul
in
mov
xlat
adc
mov
dec
sbb
jns
push
imul
int
mov
mov
fs
xor
add
mov
mov
ds
add
or
push
stc
test
outsb
das
fistl
mov
popa
popa
inc
outsl
jb
outsb
addr16
bound
push
push
gs
outsl
outsb
push
fwait
insb
pop
push
cli
dec
or
out
mov
adc
mov
outsb
mov
mov
push
push
mov
cmp
mov
lods
outsl
inc
add
popa
jae
sub
mov
daa
dec
pcmpeqb
and
int
pop
punpcklbw
test
stos
ret
shrl
icebp
push
sbb
push
gs
fldcw
in
je
mov
sub
fsubrl
fisubrs
push
pop
imul
xorl
pop
in
adc
jae
fldz
push
imul
sbb
push
hlt
popa
insl
push
outsl
imul
dec
cwtl
insl
xchg
push
jns
dec
mov
mov
gs
add
jns
fistpll
xchg
imul
pop
addr16
test
gs
or
xor
jbe
mov
pop
inc
sub
fstpt
pop
add
lods
insl
pushf
insl
sbb
adc
inc
inc
and
add
jl
add
arpl
mov
mov
sbb
push
outsb
push
fsubl
test
push
test
ret
sub
push
dec
inc
ljmp
fnsave
je
add
add
jae
popa
fisttpl
aad
push
push
cmp
xchg
inc
dec
or
add
arpl
xor
ret
push
mov
jne
inc
jae
and
test
push
out
test
dec
pop
add
xor
sub
jb
and
cs
fxch
inc
inc
adc
sar
das
push
outsb
jne
push
inc
inc
push
inc
push
nop
push
or
or
cltd
add
xlat
rclb
cwtl
insl
push
mov
popa
test
aas
lret
pop
and
jo
cmp
mov
cmp
sub
cmp
xchg
xor
pop
jl
inc
xlat
shll
fstps
imul
add
dec
xchg
popa
push
mov
std
jge
or
daa
cmp
jns
imul
popa
arpl
mov
mov
xchg
imul
ljmp
lods
inc
pop
push
add
pandn
cltd
data16
push
dec
pextrw
xor
int
lcall
jo
ret
pushf
jecxz
dec
dec
add
adc
or
dec
movsl
inc
lahf
xor
cmp
imul
jae
jmp
mov
fs
dec
neg
stc
stc
call
cmpsb
dec
dec
mov
pushf
mov
testb
stc
pop
pop
pushf
mov
sub
and
dec
cmp
jmp
lret
jge
jo
or
lret
mov
push
movsb
sbb
and
cmp
cmp
inc
pop
mov
dec
mov
add
xor
adc
mov
push
inc
lods
aad
mov
push
sbb
das
nop
lods
mov
inc
or
jecxz
cmp
call
inc
ss
sbb
xor
cmp
pushl
dec
fdivl
cmp
sbb
dec
ljmp
gs
sub
xor
ds
inc
push
ss
in
lahf
mov
cltd
decl
mov
xchg
sub
fwait
in
jnp
movsl
lock
stc
fildl
js
or
ljmp
ja
dec
bound
insl
pop
clc
ret
aad
daa
aam
out
and
test
dec
clc
jmp
pop
lret
xchg
fs
jg
sbb
js
xchg
xchg
fmuls
ret
stc
fs
jmp
cwtl
cmp
in
scas
sub
or
fcomps
addr16
aaa
ror
jnp
jge
popf
xchg
inc
ljmp
pushl
adc
cltd
or
roll
push
aad
push
xlat
jo
jecxz
decl
pop
push
call
sar
in
mov
cmpsb
cmp
inc
push
test
cmc
stc
push
cmp
add
stos
push
pusha
cmc
add
aaa
add
out
sbb
icebp
iret
add
adc
das
adc
pushf
push
not
jmp
jmp
push
push
shl
mov
std
jg
out
cli
scas
push
add
cmp
mov
aaa
mov
pushf
popl
ja
add
pushf
sub
cmp
ss
sub
jmp
or
test
mov
dec
pushf
push
ljmp
jb
mov
sub
add
pushf
jmp
jbe
mov
add
sub
inc
cld
daa
pushf
call
mov
clc
push
aad
btc
enter
mov
arpl
mov
pushf
ret
push
add
lahf
pop
sti
das
inc
mov
clc
shr
call
insl
xorb
fwait
dec
loopne
and
sbb
fisttpl
adc
test
jmp
xchg
setge
sar
stc
mov
leave
mov
leave
sub
mov
stc
pusha
testb
loopne
in
pushf
push
add
push
add
rcrl
mov
in
inc
jmp
mov
neg
dec
mov
call
fstpl
sbb
les
cld
cmp
test
pop
and
add
push
aas
fnstsw
mov
adc
pop
add
adc
sbb
fldcw
pusha
scas
and
out
sbb
call
fistpll
add
clc
xchg
hlt
ja
enter
cmc
cmp
stc
jmp
mov
or
popa
notl
daa
enter
lock
adc
mov
popf
mov
mov
adc
pushf
in
jg
cld
mov
and
sti
call
jo
xchg
add
stc
pushf
sub
sub
jl
mov
rcrl
push
fadds
jecxz
adc
push
push
inc
dec
sbb
outsl
ja
sbb
pushf
xchg
pop
mov
lock
jmp
pusha
out
inc
pushf
jne
dec
call
out
or
outsb
aad
dec
mov
mov
or
sub
mov
clc
cmp
ret
ljmp
cmpsb
pop
mov
test
mov
rcrb
popa
cmc
cmp
cwtl
jmp
jmp
cmp
sbb
jg
fwait
sti
sahf
adc
arpl
scas
mov
cmp
add
jmp
mov
mov
mov
cld
clc
jmp
adc
sti
jne
xlat
mov
shrl
sti
jmp
andl
add
cmp
inc
or
jg
sbb
push
shr
dec
mov
outsb
test
not
dec
jmp
cmp
test
adc
ror
inc
stc
push
inc
cmp
stc
add
inc
jge
call
cs
mov
je
adc
and
call
inc
jne
mov
call
jbe
mov
call
icebp
fidivrs
or
sub
fbstp
cmc
testl
add
pop
pop
push
lret
fstpl
bound
jno
adc
loopne
cmp
call
xchg
fisubs
mov
sti
mov
push
xchg
or
or
mov
clc
ret
xor
mov
xchg
and
xchg
out
mov
and
cwtl
fwait
inc
adc
lahf
or
cmp
pop
inc
jle
pushf
jmp
inc
arpl
sbb
mov
sbb
iret
dec
jmp
scas
adc
inc
dec
adc
dec
lahf
jbe
mov
dec
mov
or
mov
fldt
dec
imul
iret
fs
jbe
pop
jb
in
fiaddl
rol
incb
pop
sbb
mov
ret
out
pop
pop
dec
push
push
jmp
sbb
callw
add
dec
sbb
mov
push
push
mov
idivb
cmpsb
cmp
idivb
xor
aaa
popf
cmp
jns
adc
push
ljmp
and
push
jmp
add
movsl
js
sbb
sub
mov
cmc
lret
or
inc
push
cmp
cmp
mov
jmp
xor
add
subb
ja
mov
fistl
ret
rorb
add
call
movsl
loop
xlat
repz
xchg
xchg
cmp
leave
cmc
push
pop
jmp
ret
cmp
push
cmp
cli
stc
cmp
call
xchg
add
shl
call
ds
add
sub
pusha
fimull
test
fsubrs
sbb
cmp
push
mov
or
push
pusha
inc
inc
dec
pusha
mov
mov
add
js
dec
xchg
mov
loope
mov
lret
popf
sbb
out
push
les
xchg
fstps
addr16
insl
loope
leave
mov
mov
push
adc
jbe
hlt
call
jg
sbb
fsub
cs
push
mov
mov
add
test
ljmp
rcl
mov
aaa
pop
xchg
pop
call
jp
push
loope
sar
in
push
cltd
cmpsb
int3
sub
clc
mov
pop
pushf
cmp
add
adc
mov
lods
fcomi
fisubs
mov
push
aad
stc
add
pop
imul
shl
or
sbb
shrl
and
jle
mov
leave
pop
add
jmp
mov
fdivs
pop
dec
add
inc
imull
sbb
outsb
push
ret
pop
cmp
test
cmp
push
imul
sub
and
mov
jnp
jle
cli
incb
xchg
inc
iret
stc
adc
cld
add
rcl
rorb
xchg
mov
pop
sub
imul
fstl
fs
fwait
pop
jge
push
pushf
imul
jl
out
xchg
comiss
pop
shr
mov
aas
int
loopne
gs
fwait
ds
call
addb
jmp
fstpl
add
jmp
out
pop
leave
jg
inc
xor
jl
jo
sub
push
ret
fstps
fsubp
xchg
test
or
inc
enter
shll
push
push
outsb
jnp
mov
int3
push
pop
sahf
je
test
xchg
and
or
out
loop
enter
jmp
cmc
aam
movsl
in
leave
stos
andb
sti
xor
xchg
popa
hlt
loopne
addr16
sbb
cmpsb
test
lods
loop
and
mov
mov
cmp
cli
bound
push
fsub
lock
cmp
jnp
fsubr
cmp
dec
jno
aaa
adc
hlt
lcall
orl
stc
sar
lds
int
clc
xchg
lret
cli
cmp
push
ffreep
test
fmull
cmp
loope
xchg
insb
jae
or
fwait
das
xor
aad
and
rcr
out
dec
sbb
push
cmc
pop
out
or
sub
ret
mov
cmpsb
cmpsb
psubq
iret
pushf
push
xlat
add
cmp
mov
int3
or
in
mov
mov
adc
ficoml
and
daa
pop
cs
lea
and
int3
mov
mov
cld
pcmpeqb
sbbl
lcall
cmp
xchg
inc
sub
out
fsubrl
xchg
dec
mov
out
sbb
fsts
jb
and
fldt
pop
inc
push
adc
jmp
int
mov
decb
lods
sti
pop
das
sahf
jnp
xchg
ja
loopne
fidivrs
negl
pop
mov
div
pop
das
mull
mov
lea
fcmovne
mov
mov
jbe
addr16
js
jno
je
mov
and
aas
jg
scas
sahf
pop
jbe
daa
sub
int3
xchg
negl
into
shrl
pop
in
mov
arpl
inc
ja
mov
jg
fldt
arpl
ja
mov
sbb
xchg
pop
subb
fidivs
sbb
dec
cmpsl
xchg
mov
loope
xchg
aaa
sub
out
inc
xor
sbb
mov
notl
jg
adc
mov
jae
sbb
xorps
data16
inc
sti
stos
aas
lahf
add
js
out
lcall
out
mov
jg
sarl
imul
popa
bnd
pop
mov
mov
getsec
aas
in
pop
enter
das
je
jns
in
jns
inc
jl
out
xor
dec
xlat
scas
sbbl
int3
xchg
lret
leave
xchg
fistpll
mov
lea
pop
mov
add
leave
adc
sub
xlat
enter
shrl
sbb
cmc
mov
pushf
or
jle
into
in
mov
or
mov
repz
scas
push
push
out
push
xlat
lret
data16
fisttps
push
popf
call
xchg
sub
in
push
sub
or
or
sbb
icebp
jge
cs
fwait
hlt
iret
div
dec
fdiv
pusha
jp
xchg
push
test
xchg
jmp
add
mov
orl
cmc
push
stc
add
mov
int
fisttps
jl
shr
repz
shr
stos
sarb
icebp
rol
or
shrb
dec
neg
rcr
insl
and
addr16
pusha
jnp
sbb
or
xchg
clc
outsl
fstpl
mov
repz
bsf
shl
mov
mulb
rorb
lods
call
call
add
in
push
sbb
lds
mov
fsubr
pop
call
dec
push
adc
sub
mov
adc
sbb
or
loopne
sub
cmp
cmpsb
dec
add
and
or
mov
test
aad
in
out
xor
lcall
cltd
sub
shrb
dec
idivb
mov
xchg
sub
mov
add
pusha
inc
push
push
inc
daa
sbb
pusha
aam
stc
int3
adc
ret
sub
cmp
cltd
cmp
add
shrb
jp
out
fnstsw
sbb
add
ret
sbb
outsb
cmp
pop
rcll
in
or
pop
call
add
pushf
inc
std
dec
adc
push
jmp
ret
mov
pushf
rorb
mov
flds
adc
in
stos
sbb
adcl
shll
outsl
in
pmaddwd
cltd
add
icebp
and
in
lahf
adc
xorb
clc
mov
push
call
lahf
pop
ss
fcoms
and
jp
and
pushf
popa
idivl
jnp
mov
adc
je
ss
dec
push
ret
lea
into
push
push
xor
sbb
dec
scas
test
insb
mov
ss
jns
decl
orb
insb
xchg
dec
adc
not
not
pushf
setne
add
outsl
cli
sub
and
es
mov
xchg
test
call
push
mov
rcr
lea
jp
push
jmp
sbb
inc
mov
cltd
stos
xchg
add
xchg
cmpsb
andb
pusha
and
jmp
jg
inc
jmp
lock
shlb
sti
or
sar
sbb
test
inc
in
sbb
fdiv
aam
inc
push
push
xor
xor
addr16
lods
ljmp
fwait
outsb
or
push
dec
cmc
push
test
jle
push
push
sub
fdivs
std
cmp
adc
movsb
pop
push
add
icebp
mov
mov
xchg
and
cmpsl
or
add
out
shlb
std
mov
mov
sub
movsb
pushf
mov
fdivrs
lods
cmpsl
bound
xchg
outsl
fcoms
test
cmpb
jo
pop
sub
mov
mov
mov
xlat
hlt
mov
mov
popf
xor
fimull
clc
rolb
push
push
ret
xchg
hlt
jmp
aaa
fst
cld
and
xor
pop
sti
or
cmp
call
and
or
jmp
ljmp
lahf
mov
mov
add
loope
test
lea
lea
add
lea
ds
lret
and
xor
sbb
jp
mov
and
adc
jmp
shrb
ds
mov
sbb
insb
popa
out
movsl
lret
sbb
ljmp
imulb
xadd
rcl
shl
icebp
mov
adc
mov
je
cmp
shl
adc
movsb
mov
fmulp
std
out
cmp
xor
lret
pop
aas
pop
mov
repz
pop
lea
and
daa
or
das
mov
xchg
aaa
pop
xchg
or
pop
push
roll
fcmovu
sbb
sub
sbb
aaa
pop
add
popf
pop
enter
fdivp
jmp
push
cwtd
fs
jmp
outsl
loopne
rclb
add
ljmp
inc
clc
popf
fsubrl
add
lock
or
fwait
pop
push
or
mov
ds
push
mov
movb
pop
push
xchg
push
mov
les
and
dec
or
rolb
mov
add
cld
repnz
adc
add
adc
mov
jl
clc
add
jbe
sub
cli
push
pop
out
movsb
pop
xchg
std
sub
into
std
pusha
fcmovbe
add
and
loop
push
push
sti
into
or
sarb
les
popa
subl
push
mov
pop
xchg
cmc
insl
mov
mov
in
and
sub
lds
call
or
ret
cmp
sub
pusha
cmc
test
and
mov
lods
lea
inc
bnd
mov
mov
popl
icebp
test
insb
mov
or
test
stc
sub
pusha
push
clc
xor
mov
mov
dec
rcrl
adc
xchg
cmp
jge
cmp
jg
xchg
rolb
clc
and
mov
cmp
enter
fdivs
leave
sbb
pop
hlt
add
fnstsw
lret
out
mov
lret
dec
fdivrl
mov
xchg
push
mov
push
imull
xor
insl
sbb
sbb
mov
push
mov
or
ss
or
or
or
and
lods
fistpll
xchg
and
in
out
sbbl
pop
push
addl
mov
in
test
sbb
cli
cmpsb
pop
pop
adcb
push
pop
or
jns
fldt
pop
push
jmp
fucom
in
cwtl
sti
bound
push
xor
pop
pop
jp
insl
cmpsl
cmpsl
neg
mov
not
adc
sbbl
jbe
sbb
sbb
sub
and
add
adc
cmc
rcr
pop
lret
es
jmp
pop
cmp
arpl
hlt
and
or
out
add
inc
push
sbb
xchg
sub
sbb
clc
adc
sbb
inc
adc
pushf
int
pushf
clc
shr
arpl
mov
xor
aas
enter
dec
push
mov
leave
add
not
icebp
setge
test
jne
xchg
in
mov
hlt
sti
iret
testl
ljmp
lods
ret
pusha
sbb
mov
cli
pushf
leave
cld
out
and
scas
inc
fwait
jno
jmp
or
push
loopne
jge
inc
and
push
push
rorb
movsb
bound
push
cmpsl
test
xchg
ss
pop
pop
fwait
dec
sbb
iret
out
je
or
push
or
mov
sub
sbb
cmp
dec
xchg
movb
mov
xor
mov
ret
aaa
enter
dec
push
jmp
sub
inc
inc
adc
mov
add
sti
jecxz
fisttpl
out
leave
add
dec
loopne
rol
sub
xor
mov
inc
inc
lret
lcall
mov
mov
cwtl
stc
testl
cltd
cmp
pushf
imul
lock
jmp
aaa
sub
pusha
call
jbe
clc
clc
aas
pushf
not
call
nop
jmp
rcpps
js
jg
pop
and
fsubrp
in
mov
jb
inc
pop
mov
or
sbb
insl
in
pusha
loopnew
xor
push
movsb
dec
and
loop
xor
aad
shl
push
sbb
push
rclb
mov
test
lods
dec
les
inc
push
inc
pop
jbe
out
adc
int
test
jb
mov
inc
popf
push
fcomps
push
data16
sbb
inc
push
jo
adc
jge
inc
setg
mov
pusha
add
mov
push
sahf
jmp
f2xm1
out
pop
pushf
in
int
popa
xrelease
insb
decb
js
lret
jle
rolb
sub
outsb
mov
jmp
sbb
jg
pop
mov
setnp
push
mov
mov
push
shrl
lea
in
add
xchg
loop
mov
out
pop
decb
jmp
lea
jns
lea
cmp
das
lret
mov
aaa
addr16
sub
call
and
addr16
push
iret
clc
push
pop
adcl
jne
mov
or
push
push
and
cmpsl
push
cltd
cld
push
out
dec
xor
push
pusha
setno
jbe
mov
mov
jge
mov
mov
pop
fcom
jo
push
popf
stc
add
push
cmp
in
shll
cmp
faddp
das
pop
inc
cld
mov
aam
mov
call
pushf
jecxz
sub
jmp
jnp
mov
pop
cmp
sets
movsl
or
insb
push
cs
push
xor
cli
jmp
in
fld
sub
arpl
iret
pop
fs
push
sbb
cmc
adcl
jecxz
jne
lret
jno
loope
lds
xchg
jp
ror
xor
test
into
test
leave
loop
leave
adc
mov
clc
mov
fdecstp
cmp
pusha
inc
arpl
int3
rcl
cmc
rol
xchg
or
push
pushl
push
ficoms
das
sbb
mov
sbb
test
adc
cltd
cmc
xchg
addr16
jp
push
add
int3
insl
pop
mov
push
scas
pop
push
call
or
mov
mov
jns
mov
xchg
and
and
or
movq
push
push
icebp
cmpb
imul
ficoms
popf
xchg
imul
sub
out
int
mov
cmp
inc
mov
mov
idiv
inc
mov
movsb
loop
adc
add
dec
shrb
xchg
lret
movsl
push
xchg
ss
cmc
and
roll
or
fisubrl
das
sub
jnp
call
je
or
fidivrl
loope
pusha
stc
cmpsb
ret
push
addr16
inc
fisubl
popf
sub
add
sbb
nop
sbb
scas
imul
mov
loopne
add
pop
push
pop
mov
ljmp
or
add
inc
push
fs
and
cmp
xor
or
out
scas
stos
mov
inc
push
inc
dec
push
pop
jnp
in
jg
fldl
clc
jno
sub
xchg
pop
popa
sub
cmp
js
loopne
iret
jg
call
xor
cmc
cmp
outsb
in
loope
cmc
jno
sbb
xor
jmp
push
pop
outsb
pop
push
xor
lods
mov
pop
lds
pop
in
idiv
flds
das
adc
test
adc
sbb
push
mov
loop
sbb
std
test
mov
pop
xchg
test
subb
adc
call
or
jge
cltd
and
outsl
addr16
xor
pop
inc
das
cmp
mov
subl
pushl
loopne
aad
lds
dec
pop
push
daa
and
add
xor
pushl
in
mov
xor
cmp
dec
jns
or
dec
fisttpll
stc
jecxz
xlat
int
rcrb
outsb
mov
push
dec
out
cmp
icebp
ljmp
push
lds
pop
insl
jae
inc
add
pop
cld
or
cmp
pop
dec
inc
and
mov
jp
decl
or
mov
les
ss
mov
mov
dec
shrb
cld
decl
ficomps
into
add
or
or
jmp
and
mov
ljmp
enter
xchg
into
mov
mov
movsl
lahf
xchg
and
pushl
push
cmp
loope
inc
loope
and
orl
pusha
out
jne
pop
test
pushl
dec
inc
cmpsl
pop
or
jne
orb
loopne
or
sbb
mov
cmp
pop
pop
xor
lahf
push
divb
mov
jg
call
lds
or
jb
mov
js
push
dec
pop
jecxz
mov
call
adc
add
dec
lcall
and
mov
jb
ljmp
outsl
jmp
jne
cwtl
iret
cmpsl
xchg
dec
dec
jle
daa
pop
sbb
in
idiv
jmp
adc
xor
cld
clc
add
mov
das
cld
jl
aaa
pusha
dec
and
and
inc
sub
lret
mov
aam
imul
xchg
insl
xchg
ret
xchg
mov
dec
inc
xchg
das
aad
jg
inc
jo
jb
or
dec
inc
inc
dec
dec
push
cmp
jp
xlat
pop
aaa
pop
mov
xor
sbb
pop
loope
dec
ja
in
pop
sub
cmp
icebp
out
push
and
fcomp
mov
jl
ljmp
dec
and
lock
in
aam
pop
std
mov
mov
ds
aaa
xor
lahf
imul
push
lcall
xor
pop
dec
cmp
dec
cmp
lret
cmc
jecxz
outsl
add
mov
sub
mov
add
sub
jl
cmp
lods
or
xor
and
cld
mov
sub
lret
lods
adcb
ss
inc
and
adc
out
iret
int
sub
test
gs
pop
or
in
repnz
test
dec
popf
incl
pop
pop
inc
out
scas
jge
cmpsb
mov
mov
inc
and
inc
and
ds
cwtl
xchg
pop
lahf
fadds
adc
mov
mov
mov
ljmp
dec
lcall
jne
push
add
xor
stc
or
idiv
fcoms
and
sbb
gs
xor
into
jno
mov
inc
mov
dec
movsb
mov
mov
daa
fstps
xor
stos
popf
and
push
mov
es
inc
xor
dec
push
js
pushl
cmpsl
adcl
popf
sbb
nop
xchg
decl
mov
dec
push
dec
push
dec
addb
inc
scas
sarl
jg
adc
xor
pop
sti
roll
mov
out
adc
adc
mov
sub
inc
aaa
cmp
sub
loopne
negb
jmp
pop
stos
lock
add
jmp
test
xchg
add
aam
hlt
decl
inc
sbb
scas
pop
lahf
mov
out
inc
cmp
jge
cmpsl
aam
outsb
lret
jge
mov
arpl
sbb
xchg
pop
sub
cmp
cltd
jg
xchg
push
xor
push
push
and
add
or
aas
cmpsb
mov
nop
lds
nop
in
jp
subl
pandn
lock
sar
cli
add
inc
sub
add
ficomps
das
mov
daa
sbb
test
je
push
jge,pn
insl
jecxz
add
loop
or
imul
mov
pop
mov
push
push
repz
sbb
cmp
fimuls
inc
xor
dec
mov
scas
fnstcw
sti
mov
pop
xor
daa
adc
mov
scas
xchg
das
mov
les
add
fptan
cltd
out
mov
in
aad
icebp
fst
adc
inc
call
mov
mov
fsts
ja
and
xchg
sbb
popf
daa
je
lds
scas
xchg
jg
mov
ds
mov
in
ljmp
loop
cmpsb
mov
dec
test
mov
pop
and
fwait
les
mov
xor
aam
es
jbe
pop
rcll
push
dec
jp
dec
popa
arpl
ss
arpl
arpl
mov
lret
mov
jns
std
mov
jne
xor
ret
pop
mov
das
jmp
cmpb
pushl
cmp
sub
arpl
inc
xor
daa
cmp
or
lret
test
push
ds
shlb
movsl
sbb
negl
in
rclb
aam
stos
jno
movsl
pusha
mov
orl
ret
pushl
cmp
fistpll
and
je
jnp
xlat
dec
call
inc
fmulp
stos
mov
xchg
mov
aam
mov
adc
jmp
sarb
dec
push
push
popf
testb
mov
lcall
jo
jmp
mov
lock
ud2
rolb
call
std
cmc
sti
lcall
mov
stc
inc
dec
jo
enter
xor
sbb
xor
loop
xchg
jmp
ljmp
adc
repz
jbe
test
test
insl
pop
dec
add
adcl
repz
push
lea
push
test
lea
cmpl
mov
aad
rclb
insb
dec
sub
call
decl
aas
cmp
cltd
pop
mov
jecxz
ja
mov
xchg
movsl
xchg
jno
jecxz
pop
cmpsl
testl
mov
adc
mov
scas
or
das
xchg
shrb
push
add
sub
cmpsl
ljmp
cld
inc
clc
xchg
mov
mov
lahf
ja
test
cld
or
or
jmp
mov
pop
jo
xchg
push
aad
cltd
lret
cltd
cmpsb
pop
lcall
mov
or
dec
sub
push
cmp
mov
sahf
sahf
lods
stos
test
lahf
enter
cli
dec
mov
pop
rcrb
push
dec
dec
cwtl
lcall
fidivl
mov
xchg
insb
mov
insb
shl
cmpb
mov
rcrb
loope
divl
int
fchs
mov
ljmp
lock
popa
inc
jnp
dec
das
ds
lock
aam
xchg
scas
jp
enter
jmp
dec
aaa
outsl
dec
pop
mov
pushf
push
subl
mov
mov
xchg
push
push
add
scas
test
lret
dec
jg
pushl
sbb
lods
jl
out
jno
mov
xor
mov
mov
mov
mov
dec
dec
dec
push
jp
ljmp
cld
inc
xchg
rorl
stos
inc
dec
lahf
mov
test
adc
mov
add
jmp
mov
jle
jle
push
cmp
inc
inc
insb
icebp
adc
in
and
push
mov
sub
idivl
pushf
in
mov
aam
mov
push
adcb
pop
pop
jno
out
stc
dec
jne
jnp
cmp
and
repz
out
scas
push
adc
mov
jnp
and
in
fmull
in
lods
mov
rolb
or
push
pop
mov
sub
xchg
outsb
xorl
lcall
mov
push
ja
mov
out
lds
xor
jg
or
out
div
sub
in
das
invd
ja
pushf
mov
ljmp
stc
pop
or
mov
fs
pop
pop
pop
inc
push
add
adc
sbb
jle
cmp
pop
mov
xor
movsb
lock
cmpsl
push
divl
lods
cmpsl
movsb
call
dec
add
inc
fstpl
adc
sbb
clc
rcrl
and
push
iret
jg
outsl
rcrb
dec
pop
xor
push
adc
cld
repnz
cld
mov
inc
jmp
mov
pop
push
loopne
je
movsb
adc
mov
sbb
or
xchg
jae
insb
push
xor
dec
dec
inc
xchg
inc
call
loop
stos
mov
add
gs
js
cmp
cmp
mov
add
xor
nop
nop
jb
jno
mov
test
mov
ljmp
dec
xor
inc
jg
popf
jns
jbe
loopne
mov
mov
cmp
pop
mov
and
lcall
repz
cld
jg
mov
xor
scas
aas
faddl
dec
pop
push
pushf
test
clc
inc
cmp
adc
stos
and
mov
mov
sbb
fdivrp
bound
sub
cmp
ds
xor
les
jno
lea
add
popf
outsb
cmp
pop
pop
test
nop
cmpsl
call
loop
adc
xchg
les
insl
push
xor
ror
xor
mov
xor
xchg
fcompl
and
pushf
shrb
adc
add
filds
rcrl
cmp
or
jbe
insl
inc
sbb
decb
xchg
and
sbb
mov
hlt
push
jb
mov
hlt
cmp
lea
mov
mov
pop
icebp
jno
fcmovu
stos
mov
xchg
sti
in
lahf
jge
test
dec
popa
popa
aaa
and
in
jmp
push
into
sub
sub
push
jecxz
aas
mov
or
add
ret
pop
aam
push
mov
or
jno
mov
dec
movsb
sbb
rclb
out
jg
dec
xchg
adc
jno
mov
mov
ljmp
pop
sub
xchg
aam
cmp
test
mov
pop
dec
dec
ljmp
push
ja
jnp
std
pop
jl
pusha
bound
sbb
arpl
popa
imul
push
and
sbb
loope
out
adc
fdivrs
pop
dec
call
or
imul
pusha
dec
in
mov
hlt
filds
cli
dec
xlat
pop
loop
addr16
pop
cld
das
push
daa
add
rol
xor
std
jg
es
push
xchg
push
push
add
sub
loopne
and
lret
cmpsb
add
bound
std
mov
xchg
mov
cmpsl
dec
lods
outsl
icebp
jg
xor
push
in
mov
stos
cmp
popf
call
clc
xor
push
hlt
jge
cs
jns
push
mov
lahf
push
jg
les
mov
mov
dec
pop
jle
dec
outsl
dec
insl
jge
enter
mov
mov
mov
lock
xchg
mov
inc
sub
inc
jb
fcoml
mov
ljmp
stc
or
or
in
cmp
dec
in
into
adcl
jg
lcall
jp
inc
cs
repz
test
lods
pop
stos
lret
cmp
fidivs
stos
test
cwtl
sub
icebp
call
or
in
lahf
mov
decl
stos
xchg
stos
test
mov
dec
sarb
cwtl
pop
sti
or
jo
test
pop
paddb
or
adc
out
das
hlt
insl
je
jo
popa
outsb
cld
cmpsl
dec
adc
iret
dec
lods
jg
pop
clc
sbb
mov
cld
prefetch
xor
int3
test
mov
xorb
imul
nopl
stc
lret
mov
les
jl
cmpsl
push
pushf
adc
or
jge
test
xchg
mov
sbb
aas
aam
inc
push
xor
mov
push
inc
and
insl
shll
inc
aad
call
pop
ficoml
sarl
inc
push
std
or
lahf
aam
imul
pushf
aaa
js
dec
mov
fstps
sub
aad
loop
std
int
mov
cltd
movsl
sbb
jbe
sarl
aaa
pusha
push
jo
jle
push
mov
sar
daa
xorb
jp
cltd
xchg
sbb
test
or
jmp
dec
jmp
xlat
rcr
cbtw
test
dec
push
pop
pop
ja
sti
sbb
pushl
pop
jae
push
adc
ds
es
push
lahf
mov
lcall
mov
aaa
push
incl
pop
xchg
mov
jg
lea
lret
dec
sbbb
inc
sub
adc
adc
xchg
aaa
pop
ljmp
dec
std
pop
mov
mov
dec
pop
add
out
popf
sbb
sbb
mov
movsl
inc
mov
js
xlat
mov
pop
pop
ljmp
or
add
bswap
sub
mov
jl
push
sub
lods
mov
add
jmp
lcall
roll
xor
bound
popf
adc
cmp
dec
pop
mov
mov
lock
in
loopne
cld
out
stc
add
das
push
call
adc
pop
push
dec
popf
xchg
popf
mov
loope
in
out
cmp
outsl
aam
neg
sarb
fimuls
jbe
movsl
incl
dec
inc
pop
sarb
inc
mov
mov
hlt
call
icebp
enter
inc
sbb
addr16
fsubrl
inc
jge
pop
cld
ret
js
xchg
mov
nop
push
mov
add
ret
mov
mov
leave
mov
fisttps
in
loop
stos
mov
mov
add
sub
jmp
pop
mov
push
das
cmp
pop
push
insb
push
xchg
popa
enter
sub
sbb
std
daa
and
jle
mov
jmp
insl
orb
adc
out
jge
scas
rol
call
sub
movsl
push
insb
xchg
lea
test
test
add
incl
cmp
mov
add
popa
std
push
dec
idiv
jmp
ds
sub
call
cmpsb
std
adc
jno
pop
aas
and
cmp
stos
lock
out
or
imul
jge
mov
call
xchg
std
xor
jge
mov
mov
push
push
cli
ror
lret
lcall
mov
inc
out
mov
out
popa
inc
fucomp
adc
sub
mov
std
fildll
cltd
fwait
jmp
mov
pop
jmp
lahf
pop
add
repnz
lcall
fsub
mov
dec
jb
jl
pop
fsubrl
or
and
ljmp
loopne
in
enter
icebp
arpl
xchg
xchg
cld
push
subb
rclb
std
jbe
cmpsl
loop
cld
xchg
hlt
call
arpl
jg
xchg
cmpsb
ds
dec
mov
push
repnz
mov
jne
mov
sub
test
add
movups
mov
cmp
cli
cmp
decl
data16
and
fxam
stc
cmc
and
dec
push
pop
hlt
incl
push
push
imul
mov
shlb
adc
push
cltd
ja
je
mov
pop
ljmp
mov
mov
mov
cli
dec
mov
mov
sbb
cwtl
mov
sbb
adc
out
lods
das
push
ljmp
mov
jle
hlt
dec
jl
mov
pop
mov
dec
cmp
add
mov
hlt
andb
std
ljmp
sub
and
bound
jge
movsl
and
inc
rcrl
insl
ljmp
mov
mov
arpl
xchg
pop
popa
dec
pop
inc
dec
dec
push
jnp
out
in
mov
fcomp
loope
jmp
int
subb
test
dec
adc
sti
std
pop
std
mov
jo
jmp
test
negb
lcall
adcb
push
mov
mov
outsb
mov
cli
call
fiadds
out
add
sti
cmp
mov
pushf
call
je
dec
fstl
inc
dec
stos
mov
fs
and
call
test
sub
push
loopne
in
mov
shlb
bound
nop
je
xchg
sub
cmc
xchg
rol
aad
in
shr
ljmp
mov
incb
pop
or
mov
ret
xchg
nop
fsubl
lret
int
orl
lcall
sahf
lcall
mov
shrl
loopne
jne
ret
lret
mov
cmp
xchg
les
inc
std
jecxz
jg
lods
ljmp
into
sub
mov
mov
or
and
inc
aam
sbb
dec
loope
jmp
push
repnz
stos
mov
repnz
in
inc
das
jo
in
movl
lcall
shll
and
jnp
mov
jo
ja
inc
mov
leave
fcompl
ljmp
das
hlt
cmpsb
movsb
inc
fstpt
popa
and
cltd
popl
decl
xchg
mov
fcoml
enter
movsb
mov
nop
lcall
arpl
adc
mov
clc
clc
into
out
mov
pop
push
push
push
aaa
xlat
clc
add
ds
mov
imul
test
fsub
iret
mov
in
jecxz
adc
sbb
add
rcl
les
lock
lock
call
jo
imul
shl
lock
decl
mov
sti
ja
daa
pop
inc
push
loop
jb
outsb
icebp
xor
test
pop
faddp
cld
pushl
in
xchg
into
mov
mov
mov
test
xchg
icebp
incl
pop
popa
aaa
mov
aad
pop
add
jno
ret
nop
stos
pop
test
dec
sub
dec
dec
push
xor
pop
rolb
push
pop
test
and
mov
sub
cmp
or
call
cmpsb
push
in
push
mov
insl
cmp
push
popa
pushl
fdivrp
mov
xor
jle
mov
dec
xor
adc
call
inc
push
sbb
sub
jbe
xchg
testb
push
ljmp
pop
bound
cmp
adc
sub
icebp
ret
mov
sbb
sahf
pusha
call
sbb
loop
pop
notb
dec
push
incl
add
jne
in
mov
dec
lea
and
and
inc
mov
pushl
mov
mov
cmp
push
movsl
pop
dec
clc
imul
scas
lahf
jg
movb
add
xlat
into
jl
cmc
rcr
shll
orb
inc
inc
sbb
in
mov
ja
cmp
incl
fistpl
std
xor
insb
push
sahf
movsb
addr16
test
test
fdivrp
dec
std
sub
xor
ja
das
pop
push
push
imul
and
push
shll
pop
out
dec
ds
and
add
pushl
pop
or
push
jge
les
adc
jnp
test
pop
mov
fcoms
fidivrl
dec
jle
scas
pushf
xchg
mov
aam
popf
add
cmp
dec
call
cli
fbstp
andb
sbb
insb
test
iret
das
std
pushl
push
dec
adc
push
in
aam
in
cmp
jb
sbb
mov
adc
or
negb
jg
imul
sbb
and
pop
dec
sub
xchg
ja
cmp
mov
adc
jae
jnp
xchg
loope
bound
sbb
data16
lahf
xchg
lret
shl
in
push
push
mov
out
jae
jge
or
jno
xor
pop
and
inc
push
mov
std
sbb
pop
pop
out
repnz
cmp
clc
sbb
mov
ljmp
add
pop
inc
and
cld
decb
ds
xchg
add
jg
in
cmc
or
pop
and
lea
inc
cmpsl
mov
in
pop
or
pushl
idivb
add
jmp
or
pop
lds
xor
mov
mov
mov
pop
sbb
ss
mov
test
push
jmp
mov
mov
mov
mov
jle
call
sbb
mov
pop
xor
xor
call
in
iret
mov
in
call
mov
push
push
ret
out
es
jg
jbe
test
js
popf
shl
scas
sub
xlat
xor
xchg
push
xchg
cmp
std
pushl
lds
adc
enter
rorb
test
push
pusha
and
das
lret
incl
push
mov
dec
and
add
pop
fldenv
lcall
sbb
icebp
push
push
aam
push
vpandn
lahf
jmp
push
push
test
push
fiadds
and
inc
mov
imul
pop
decb
sti
orb
dec
test
xchg
outsl
pop
mov
ret
lret
bnd
jae
in
cmp
enter
popa
xor
out
dec
daa
push
call
jle
or
jge
cltd
in
cwtl
dec
inc
add
aam
push
out
shlb
stc
ljmp
lahf
push
lods
xchg
popa
mov
sub
inc
xchg
fnstenv
ficompl
add
das
mov
adc
sub
dec
xchg
or
pop
jg
fstpt
loop
lcall
lret
adc
lds
aaa
loope
xor
std
ljmp
pushw
mov
xchg
xchg
jno
and
test
push
lret
ljmp
inc
in
cmp
mov
mov
ret
xor
mov
lahf
push
pop
ja
lcall
aad
call
sbb
mov
cs
mov
outsb
fisttpll
cltd
push
repnz
jmp
mov
dec
mov
ret
js
dec
test
and
xchg
in
iret
or
push
adc
dec
int
sbb
lret
or
inc
dec
and
aam
push
lret
shrb
mov
test
cld
dec
jmp
sahf
mov
inc
xchg
mov
sbb
and
mov
inc
mov
insl
xlat
xchg
gs
mov
ret
ja
int3
mov
iret
paddusw
inc
sahf
in
rorl
andb
cltd
in
in
mov
jmp
rclb
out
frstor
adc
aaa
jmp
inc
pop
add
movsb
inc
data16
mulb
popa
mov
mov
pop
stc
xacquire
inc
in
sbb
inc
xorl
ret
jp
jg
xchg
incl
into
dec
lods
and
pop
shll
cli
pop
mov
lea
cmp
dec
aam
xor
fcomps
fistl
mov
pop
aam
jbe
push
stc
repnz
push
lods
movsb
inc
imul
pop
test
dec
leave
adc
mov
js
aas
notl
ret
jg
int3
aam
iret
das
frstor
inc
insl
dec
jmp
in
addr16
dec
lahf
mov
and
aam
push
cld
jg
xchg
into
in
fisubrl
adc
or
add
mov
test
pop
jl
sarb
mov
and
dec
dec
rorl
xchg
imul
enter
dec
sub
je
or
in
daa
and
in
das
cld
cmp
push
push
int3
mov
adc
test
jge
stc
cmp
lods
add
inc
inc
es
cmpsw
fs
ret
push
test
mov
add
mov
aad
inc
pop
cs
pop
dec
pop
ja
add
push
fistps
mov
xchg
outsb
je
cmp
frstor
iret
ljmp
mov
push
jbe
xchg
sub
fidivrl
dec
stos
inc
out
jno
lcall
xorb
or
mov
sbb
and
dec
in
call
stc
push
incl
mov
inc
or
outsb
push
lret
pop
xchg
jg
mov
jg
xchg
lock
pop
enter
loope
xor
push
fbstp
dec
scas
jbe
cltd
mov
stos
jecxz
inc
stos
mov
fcomip
insb
dec
or
outsl
push
mov
in
or
cs
mov
push
out
jbe
movsl
cmp
push
jb
cs
cmp
cmp
jmp
inc
xchg
mov
cmp
push
jne
pop
mov
mov
and
adc
lret
inc
cmp
dec
popa
jbe
fwait
daa
push
addr16
xor
rol
jmp
aaa
insb
mov
xorl
addps
out
out
push
and
and
lock
xchg
stos
andl
outsb
jl
cltd
stc
dec
pop
inc
imull
das
incl
rcrb
cltd
jg
cs
or
xor
jnp
dec
frstor
push
je
mov
clc
pusha
xor
jmp
jg
lret
jns
mov
in
aas
xchg
xchg
add
push
clc
mov
gs
and
xchg
aam
in
ds
push
pop
call
out
fs
ja
dec
pop
push
int
je
or
iret
adc
adc
outsb
cmp
jle
sub
sub
mov
push
mov
movsb
mov
out
iret
lods
cmp
jle
mov
cltd
xor
out
lcall
xchg
sahf
cli
mov
push
mov
sbb
into
imulb
stc
clc
into
xlat
mov
xchg
leave
or
push
jb
mov
pop
fbld
enter
xor
iret
outsb
fs
frstor
adc
jbe
sbb
ret
xchg
pop
bound
ljmp
or
push
mov
mov
xchg
xchg
and
into
sahf
push
pop
sarl
call
into
in
lret
insl
cs
adc
fisubrl
pop
pop
inc
push
push
in
lret
ljmp
out
or
pop
jbe
jo
push
jns
std
and
in
or
dec
mov
or
sbb
imul
aaa
enter
test
mov
ds
xor
ja
pusha
push
je
cmc
pop
and
xchg
out
pop
xchg
frstpm(287
dec
mov
push
fisttpl
clc
sbb
cld
das
roll
int
jg
mov
cld
add
lcall
cwtl
adc
mov
mov
and
decl
xchg
mov
shll
push
arpl
mov
call
dec
leave
lret
loope
add
dec
xor
es
cld
rcrb
scas
jle
leave
call
bound
mov
pop
adc
jle
aam
jmp
jl
jns
xchg
mov
fbld
pop
add
or
ds
idiv
repnz
push
mov
jbe
xchg
cmc
insl
jne
push
fidivrl
in
cmp
pop
movl
or
sub
inc
pop
adcb
repnz
adc
or
cs
es
jmp
pop
imul
push
addr16
ret
inc
lret
adc
shrl
sub
mov
repnz
pop
lret
into
aas
int3
jl
and
dec
push
and
aam
pop
fcoml
push
test
sub
popf
mov
pushl
jo
xor
xchg
movsl
mov
or
mov
cwtl
pushl
jb
stc
repnz
push
mov
ret
loop
loopne
jns
dec
js
int
cmp
add
in
pop
add
jl
jmp
xchg
aam
pop
enter
sub
lcall
pushf
cmp
jl
inc
mov
adc
stos
xor
std
fisttpll
and
stc
fsub
inc
ret
inc
add
fildll
mov
cmp
in
call
cmp
add
or
push
sbb
dec
ds
ds
add
and
pop
aas
stos
aas
fdivrs
clc
aas
add
ljmp
rclb
xor
bound
xchg
xor
xor
xor
jg
into
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
test
pushl
test
mov
int3
xor
xor
xor
xor
inc
xor
push
xor
push
mov
or
add
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
pushl
xchg
push
ss
ret
shll
add
getsec
sub
add
out
mov
push
movsl
push
xorl
aaa
add
xchg
mov
xor
xor
xor
xor
xor
daa
xor
xchg
xor
nop
xor
xor
out
dec
std
out
ss
cmp
aas
cmp
xor
dec
cmp
cld
cmp
cmp
cmp
fnstcw
sub
aaa
cmp
nop
jae
mov
incl
cmp
push
cmp
leave
xchg
cmp
cmp
cmp
cmp
jg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
outsl
incl
cmp
cltd
mov
ds
pop
aas
push
aas
add
jbe
pop
and
aas
mov
xchg
aas
push
lock
clc
incl
xor
xor
xor
xor
xor
cli
or
mov
insl
xor
test
ljmp
cld
xor
xor
xor
push
xor
xor
xor
xor
xor
xor
xor
aas
xor
insb
xor
sbb
pop
ss
aaa
lea
repz
push
cmp
cmp
cmp
pop
cmp
jae
cmpb
cmp
cmp
ja
cmpl
cmp
cmp
cmp
pop
cmp
cmp
cmp
imul
xchg
cmpl
cmp
cmp
and
sub
xor
arpl
aad
idivl
adc
sub
dec
aas
pusha
aas
addr16
jp
cmpl
lret
xchg
mov
mov
sub
or
sbb
xor
inc
xor
push
xor
jnp
decl
imul
jno
mov
les
fnstenv
out
xor
xor
or
decl
xor
xor
jmp
sbb
and
cmp
mov
clc
mov
mov
xor
xor
xor
xor
xor
lods
xchg
cmp
xor
xor
xor
add
mov
leave
xor
call
xor
xor
xor
add
push
xor
jno
jnp
xorl
xor
stos
xor
ret
xor
call
xor
lea
cltd
cmpsl
icebp
fcomip
pushl
lods
lds
iret
fnsave
jecxz
in
pop
push
aaa
sub
push
aaa
pop
aaa
push
pop
ret
fidivl
fbstp
in
xor
add
push
cmp
jle
cmp
fwait
cmp
cmp
cmp
cmp
cmp
pop
aas
insl
aas
jb
mov
inc
iret
mov
sti
call
sub
movsl
incl
xchg
loopne
out
ds
aaa
xchg
aaa
cltd
aaa
mov
sar
repnz
divl
std
aaa
add
or
cmp
cmp
cmp
fcomip
cmp
cmp
pusha
cmp
ja
test
lcall
cmp
mov
cmp
lahf
push
fdivrs
in
cmp
cmp
cmp
in
sub
cmp
cmp
jg
test
mov
xchg
cmp
ret
mov
cmp
cmp
inc
cmp
mov
mov
cmp
cmp
cmp
cmp
cmp
cmp
dec
cmp
icebp
mov
cmp
nop
cmp
cmp
or
cmp
mov
cmp
add
cmpl
scas
call
fdivrs
loope
inc
aas
jne
jl
cwtl
pop
lock
idivb
std
out
test
add
and
xor
xor
xor
lcall
xor
xor
sub
icebp
xor
xor
xor
clc
jmp
xor
xor
xor
dec
xor
fs
xor
xor
xor
mov
mov
xor
xor
shr
out
mov
sysexit
push
xor
push
xor
outsb
or
sbb
leave
xchg
lds
daa
ss
push
ss
bound
outsb
ss
ss
les
ljmp
aaa
imul
cli
aaa
jb
js
sbbb
outsl
lcall
mov
jle
sub
xor
jo
das
jne
test
bound
data16
orb
xorb
aaa
es
cmp
orb
add
stos
xchg
adcl
popa
jns
mov
cltd
add
pop
pop
popf
rcrl
adc
cltd
pop
paddd
popf
fstps
filds
cltd
adc
out
gs
push
mov
and
and
insl
jle
xor
inc
pop
and
and
inc
pop
insb
fldt
pop
and
pop
js
pop
xor
stc
add
cmp
add
loopne
or
add
js
sub
nop
jmp
gs
add
and
fs
and
add
cmp
xchg
or
or
and
movsww
jb
inc
add
jae
inc
add
daa
inc
out
popf
sub
mov
ret
or
add
pusha
push
xor
js
fdivrl
and
inc
and
add
test
add
jl
and
pop
and
push
push
add
addb
cmpsl
nop
pop
lock
lahf
pop
push
add
stos
sbb
enter
inc
and
adcl
add
cmp
stc
enter
notb
and
pop
imul
or
stc
dec
inc
mov
je
sub
xor
jl
and
jns
cmp
and
and
inc
sahf
push
add
cmp
add
cwtl
adc
pslld
jo
and
fdivp
sub
jl,pn
and
cwtl
xchg
dec
sbb
ds
sbb
mov
and
add
xchg
inc
out
adc
fsubr
or
add
repz
and
xor
sbb
adc
data16
add
or
out
xor
mov
or
into
out
stc
daa
das
in
add
add
add
add
xor
and
mov
adc
add
dec
fs
push
jns
dec
mov
fs
xchg
adc
or
mov
stc
cmpb
mov
inc
repnz
stc
and
sbb
pop
add
adc
add
jns
repnz
add
jb
dec
repnz
adc
and
mov
adc
add
cmpsl
dec
sub
pop
inc
and
xchg
inc
mov
push
add
push
pop
mov
mov
or
movsl
or
push
inc
in
jp
pushl
in
movsb
and
pop
jmp
adc
push
or
adc
out
or
add
clc
fucomp
leave
adc
or
les
pop
jae
cmp
mov
mov
fcoms
cmp
push
inc
xchg
adc
fisttps
sbb
xlat
cmp
sti
sbb
sub
xor
out
inc
dec
lock
add
insl
pcmpeqw
call
dec
mov
fstpt
pop
pop
push
fsubr
jl
jne
sbb
pusha
or
or
and
ret
xor
add
push
test
mov
pop
mov
mov
test
hlt
and
xchg
xor
cmp
inc
jbe
adc
mov
mov
bound
loopne
popa
or
sbb
ficomps
sbbl
ret
stos
xor
repnz
and
cli
decb
fwait
sub
les
mov
jno
addl
add
adc
xchg
in
pop
cs
lret
divl
clc
xor
cs
fs
insb
pop
sub
cld
in
int3
insl
gs
xchg
gs
dec
outsb
jae
jb
dec
xchg
popa
insb
sbb
dec
add
inc
cmp
xor
dec
push
sti
xchg
rorb
lcall
cwtl
dec
shll
inc
inc
xor
shll
insb
gs
popa
ret
shrl
fwait
mov
add
aam
test
shl
pop
cltd
or
inc
jns
fs
clc
pop
adc
cmp
cmp
dec
mov
pop
aaa
dec
call
inc
adcl
popf
je
cmp
popa
jae
cmp
lea
push
push
mulb
out
sbb
xchg
xor
in
or
testb
stc
lea
xchg
insl
jno
dec
sbb
jne
push
in
or
and
and
or
mov
pop
pop
pop
jno
dec
insb
icebp
mov
or
xor
xor
sub
into
mov
inc
dec
xor
daa
cmovnp
lcall
adc
add
leave
ret
or
inc
call
or
inc
jmp
xchg
jmp
dec
or
pop
or
mov
fs
pop
sbb
pop
ljmp
ljmp
lret
mov
cs
push
push
cmp
stc
call
inc
add
cmp
prefetch
sbb
mov
jns
rol
ja
mov
sub
lods
add
loop
aas
jg
mov
and
push
divl
imul
xor
shll
outsb
outsb
xor
shll
sti
sub
adc
js
aam
addl
xlat
popa
into
fs
xchg
gs
arpl
inc
shll
loop
lret
mov
sbb
bound
or
jbe
fs
sti
xor
call
pop
xor
addr16
inc
lcall
sub
je
icebp
cmp
pop
lcall
mov
int
into
xchg
xchg
xchg
mov
iret
rcl
dec
add
xchg
rcl
mov
cmp
test
les
std
mov
cmp
std
aas
and
cmovno
imul
jb
sbb
js
lea
daa
xchg
mov
jne
add
lcall
lock
jl
jb
mov
sti
mov
fldcw
push
push
inc
sub
dec
xor
push
fwait
mov
add
mov
push
jge
or
imul
sbb
push
fmull
mov
and
mov
popf
sar
sub
xchg
or
ljmp
push
adc
jmp
sbb
dec
push
decl
jne
in
dec
inc
mov
push
mov
sub
in
push
call
das
or
jmp
sahf
mov
js
ds
xchg
xchg
and
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
sbb
sbb
cltd
lcall
pop
xchg
push
pop
mov
enter
mov
mov
inc
je
nop
push
xchg
std
pop
and
sbb
std
xchg
std
xchg
std
xchg
dec
in
xchg
std
xchg
std
lret
mov
jnp
mov
mov
mov
mov
imul
push
fwait
mov
inc
ret
lock
push
mov
je
dec
rol
add
dec
loop
xor
xchg
and
xor
call
shrl
push
insl
test
stc
jns
sti
les
xor
in
lcall
push
out
jne
and
rep
aaa
dec
rcrl
hlt
cmc
div
call
cs
push
movsl
inc
js
mov
mov
adc
lock
lea
dec
sub
dec
shrl
xchg
fs
xchg
xchg
cwtl
add
lcall
pop
jae
jns,pn
pop
xchg
test
mov
pop
xchg
gs
popa
jne
arpl
or
shll
and
xor
imul
js
fildll
in
pop
gs
outsl
jb
shll
mov
lret
mov
iret
sarb
ljmp
out
call
add
add
cmp
add
movsb
add
add
cmp
aam
add
les
call
cltd
mov
push
scas
cmp
adc
push
push
aaa
push
daa
or
sbb
jge
jg
and
push
push
sub
inc
mov
js
mov
arpl
or
lea
pop
xchg
xchg
fdivl
mov
repnz
push
or
cmc
aam
out
or
mov
adc
adc
jne
adc
jns
jo
mov
ret
repz
sub
sbb
jle
fwait
mov
dec
repnz
push
aam
inc
in
out
add
fmuls
in
jns
or
or
in
les
inc
mov
in
xchg
sbb
add
es
enter
mov
shlb
mov
fs
add
or
push
sbb
fsubl
adc
js
mov
mov
sub
xchg
adc
mov
out
int3
jg
adc
cmp
mov
divl
xor
pop
mov
push
stos
fsin
fstpt
js
or
mov
or
jo
add
bound
repz
mov
pop
pop
or
mov
add
push
add
add
mov
inc
and
ror
inc
and
lods
xchg
sbb
loopne
rorb
je
adc
jne
nop
cmpsl
adc
mov
inc
leave
daa
add
mov
push
in
jo
and
and
mov
and
add
adc
add
shll
in
cs
push
sbb
sbb
sbb
add
xor
cmp
add
adc
fcomip
jb
sub
add
jae
sub
mov
in
pop
sub
rclb
inc
pop
mov
cwtl
inc
lcall
int3
or
cmpsb
imul
lcall
inc
and
ss
imul
imul
sub
out
inc
fmulp
ret
dec
shll
lcall
cmpsb
xchg
add
imul
scas
sbb
add
ljmp
inc
pop
xor
xchg
pushf
inc
cmp
aaa
inc
xor
xor
and
dec
xor
andb
or
jo
inc
outsl
add
or
jge
outsl
insb
push
outsl
pop
or
decl
inc
bound
jb
and
outsl
jne
jae
xor
add
or
popa
dec
jne
addr16
push
push
js
imul
sbb
push
dec
push
dec
jae
push
jmp
sub
push
push
dec
sub
rorb
xchg
jbe
lods
inc
fdiv
mov
repnz
sub
inc
adc
loope
inc
push
xchg
sbb
and
movsb
inc
enter
lret
sub
pop
inc
add
sbb
adc
and
fs
andb
int
add
and
push
pop
addb
aaa
push
add
sub
or
je
pop
packsswb
jge
inc
jo
jmp
inc
pusha
sahf
or
das
adc
adc
insl
and
push
inc
add
addb
adcb
rorb
jno
movsl
sbb
push
int
push
mov
fisubl
mov
or
adc
push
addr16
inc
jae
cmp
popa
stos
adc
lcall
outsb
pusha
mov
outsb
jb
and
adc
inc
outsl
js
movsb
test
adc
dec
or
cmpl
adc
test
jno
inc
add
xchg
inc
mull
inc
or
adc
nop
test
adc
orb
orb
lret
mov
or
fists
inc
sbb
dec
or
xor
insl
insl
dec
jae
jg
sbb
or
iret
add
fcomp
cmp
inc
inc
add
or
arpl
mov
pop
imul
daa
fwait
and
sbb
aaa
pop
enter
xchg
test
mov
lock
cld
add
dec
sbb
xor
cmpsb
sub
dec
shll
loopne
out
clc
jmp
dec
and
or
pop
jge
call
xchg
add
add
or
sti
push
andl
adc
pop
jno
or
ss
scas
or
in
mov
inc
push
push
add
pop
dec
or
and
jb
lds
mov
or
fisubrs
adc
testb
jno
cmpsb
or
clc
push
cmp
adc
jne
or
add
pop
mov
xor
push
dec
or
rcrl
sub
mov
push
dec
mov
in
movq
jae
jo
jmp
push
xchg
outsl
pop
jns
pop
push
pop
fwait
cmp
hlt
mov
iret
or
pop
outsb
jnp
popf
xor
je
dec
mov
gs
cmovno
imul
dec
outsl
sbb
jae
scas
mov
or
pop
add
add
xor
cmpsb
or
lret
add
lcall
fcmovnu
ret
pop
add
dec
cld
jae
push
inc
cmovns
add
incb
fldlg2
imul
sbb
pop
or
push
or
dec
xor
fildl
pop
jecxz
or
jns
and
mov
mov
jecxz
inc
and
je
out
xor
jae
and
jnp
repz
popa
jns
popa
and
add
mov
sbb
or
jnp
jmp
jo
imul
xchg
pop
out
xchg
add
sti
adc
sub
add
push
jb
xchg
jne
xor
xor
xor
add
popa
xlat
xor
popf
xchg
pop
dec
or
out
pop
addr16
jo
popf
addr16
out
or
sub
mov
sub
shrl
push
sub
or
pusha
xchg
sbb
imul
push
daa
arpl
mov
inc
inc
aaa
popa
pop
outsl
pcmpeqw
jae
popa
adc
xor
inc
push
imul
and
arpl
dec
cmp
mov
lock
testl
mov
xor
xor
mov
shlb
xor
xor
pusha
xor
lea
fisttps
xor
xor
mov
xor
xor
push
pop
mov
mov
cmpsl
xor
xor
cli
inc
xor
xor
xor
xor
xor
xor
xor
xorb
jg
xor
js
jg
mov
xchg
aaa
or
test
pushf
aaa
mov
cmp
jmp
mov
cmp
cmp
cmpl
adc
sbb
stc
lods
cmp
cmp
cmp
lret
push
hlt
cmp
cmp
push
cmp
cld
mov
ds
jo
cmp
mov
fistps
xor
xchg
xchg
xor
xor
xor
xor
jne
jg
idivl
lahf
xor
xor
xor
xchg
sub
mov
xor
ss
ss
ss
ja
add
ss
divb
and
fwait
jmp
sub
xor
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
add
sarl
and
or
int
push
test
lcall
lds
add
test
xchg
and
xchg
add
bound
add
or
adc
prefetch
test
cmp
pusha
add
pop
mov
push
mov
jae
std
xchg
int
jne
pop
sbb
sbb
xchg
pavgw
sbb
add
pop
or
dec
add
stos
pop
or
outsl
fwait
adc
jbe
sbb
cmp
pop
dec
addb
add
and
dec
push
imul
pusha
dec
addb
push
mov
iret
sarb
and
pushf
es
popf
popaw
dec
stc
cld
popf
add
rclb
outsl
and
dec
or
cwtl
add
or
pop
sbb
inc
cmpsl
jnp
mov
mov
stc
inc
mov
mov
cmp
sidtl
sub
or
nop
int
inc
add
sub
xor
orb
nop
and
push
adc
xchg
xchg
push
dec
sub
or
cmp
and
adc
add
cmp
dec
adc
inc
and
push
in
dec
cwtl
sbb
adc
and
sbb
mov
add
or
loopne
and
add
add
add
add
add
popa
add
call
int
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
