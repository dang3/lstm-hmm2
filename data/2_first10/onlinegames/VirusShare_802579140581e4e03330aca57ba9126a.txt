imul
call
in
sub
push
push
lea
push
xor
push
mov
add
sbb
ss
int
jmp
jo
insb
in
jne
dec
mov
out
jae
out
cs
es
mov
int
push
call
mov
cmp
je
shlb
inc
push
push
insb
lahf
out
xchg
ret
inc
push
lds
data16
je
dec
enter
lret
in
jnp
cs
inc
push
int
into
arpl
outsl
fldt
jbe
shrl
shlb
shll
call
jg
scas
pop
cmp
pop
mov
js
movsb
movsb
iret
repz
movsl
cmpsb
cmpsl
test
stos
cmp
repz
lods
lods
scas
scas
repz
repz
mov
mov
fnstcw
iret
mov
mov
xchg
mov
xor
mov
mov
idivb
loope
jmp
lea
push
push
cld
push
call
pushl
dec
pop
add
mov
xchg
jge
sbb
cld
dec
dec
cmp
xor
and
popa
sbb
test
pop
je
inc
add
cmp
fdivrp
fistpll
jb
jmp
mov
imul
add
lea
movsl
add
ja
int
incb
lea
cmpsb
sub
pop
leave
ret
pop
testb
sub
in
movl
add
dec
push
fldcw
xchg
jne
jae
gs
jb
sahf
data16
xor
xor
repz
repz
imul
outsb
push
in
in
out
and
out
call
ja
std
xchg
je
inc
inc
gs
mov
sbb
or
or
add
inc
push
push
dec
mov
fistl
push
lret
sarb
data16
push
rorb
ret
sbb
xor
js
mov
push
mov
loopne
aaa
mov
aaa
or
mov
shrb
mov
jne
cmp
jb
jp
cmp
adc
mov
push
xor
mov
sbb
rcrb
or
adc
jns
jnp,pt
mov
jmp
push
and
jp
dec
jno
or
add
loopne
add
shll
push
data16
xlat
repz
repz
fcmovu
fmul
cmpb
shlb
jo
or
repz
or
imul
sahf
out
jne
jbe
xchg
out
sahf
ja
js
jns
sarb
aaa
jge
insl
mov
lea
jg
adc
inc
insb
ss
xorw
test
inc
int
mov
xchg
push
mov
inc
mov
mov
adc
or
cld
mov
nop
push
adc
popa
xchg
jbe
gs
sahf
cmpsl
xchg
xchg
xchg
xchg
cwtl
insb
lahf
idivb
fwait
inc
outsb
pushf
popf
insb
into
sahf
gs
ss
rcrb
jnp
out
enter
lcall
lret
int3
je
int
in
jnp
into
jb
iret
shlb
shll
sarb
cmpsb
jge
je
sahf
mov
out
repz
jae
add
outsl
jae
scas
mov
das
cli
inc
xorb
xor
arpl
imul
sbb
sbb
push
push
mov
jl
jo
data16
or
cmp
lds
push
jne
adc
sub
test
pop
cmp
cmpsl
repnz
das
pusha
push
jo
lret
push
test
push
fsin
stc
or
lea
mov
aaa
sub
adc
ja
imul
test
std
and
cmp
sbb
or
loope
inc
xor
lgs
add
in
or
pop
jnp
push
mov
shll
jmp
xor
fistps
loopne
mov
mov
or
cmpl
repz
je
dec
out
stc
jg
and
cmp
jg
or
jl
sub
pop
mov
jmp
clc
jge
rcrb
push
jo
pushl
and
repnz
push
mov
movsb
in
sar
mov
xor
mov
in
xor
stos
stos
ss
loopne
add
fsubl
adc
ret
sbb
in
cmp
das
mov
or
mov
lock
or
lea
push
aam
mov
out
push
adcb
ret
jl
mov
insb
mov
sub
clc
jae
shll
stc
dec
cs
cli
sti
insl
rorb
pushf
cld
sahf
jne
mull
out
pop
push
lea
push
das
push
into
jl
pop
into
add
inc
and
add
xchg
cwtl
pop
sarl
mov
dec
gs
int
cmp
mov
shlb
nop
mov
xchg
dec
sti
jmp
js
ret
sbb
adc
pusha
mov
repz
xor
sub
mov
mov
call
xor
pop
je
cmp
je
inc
shr
jne
add
ds
dec
jne
repz
fldt
je
sar
pop
xchg
mov
incl
movd
push
mov
dec
cmp
jae
xor
mov
mov
mov
dec
je
xor
scas
adc
pop
mov
fimull
xor
or
xchg
pop
mov
fdivl
inc
add
push
or
jmp
fmuls
xor
push
cltd
insb
mov
test
fildl
outsl
cmpsb
or
rcr
fisubs
fbld
jb
dec
inc
lcall
cld
dec
mov
push
aam
outsb
and
cmp
call
pcmpgtd
sub
add
push
testl
push
dec
jne
push
push
in
adc
and
test
jne
fsubrl
push
mov
les
pop
cmp
jne
aad
xchg
dec
jle
push
mov
andb
mov
mov
push
lcall
popf
push
shlb
sub
push
push
test
daa
cltd
sbb
pop
inc
xchg
iret
lds
mov
inc
jl
add
mov
movl
mov
loop
clc
pop
mov
xor
into
add
or
std
mov
out
aaa
jno
add
or
and
xchg
dec
push
sarb
xor
cmp
je
dec
add
and
pop
add
push
dec
or
dec
rcrb
call
inc
mov
andl
scas
jne
push
shlb
inc
sub
push
xchg
mov
dec
in
pushl
fdivrs
arpl
jae
lahf
and
xor
aam
cmp
jnp
out
jo
mov
ja
imul
out
cmp
and
into
xor
rcl
rcl
aam
cmp
repz
xlat
fcomp
jns
cmpsl
stc
fidivrl
fcmovnu
fstp
repz
out
loopne
ss
loop
out
cmp
in
out
call
sahf
jmp
es
out
xor
imul
cmc
div
fs
iret
sarl
sti
xor
cld
std
incb
rorb
push
add
push
pop
sub
pop
cmp
jne
jb
mov
cmpl
mov
or
mov
inc
mov
jg
std
js
ret
or
dec
mov
test
mov
push
test
repnz
imul
clc
xor
dec
and
and
repz
sbb
test
mov
mov
outsl
push
arpl
xor
je
outsl
outsb
cmp
cmc
imul
jo
lcall
pop
popf
es
sahf
jne
mov
scas
mov
scas
outsl
sahf
mov
xor
push
in
adc
pop
roll
clc
pop
ss
nop
jo
jmp
lea
sbb
xor
shrb
in
loop
jo
mov
enter
push
out
data16
xor
std
lock
icebp
repnz
mov
outsl
cld
movsb
test
dec
lret
iret
lcall
mov
adc
lea
ficoms
insb
fildl
push
movsl
cmpsb
je
inc
jge
mov
test
test
lods
outsb
int
mov
push
scas
es
ss
mov
loopne
ds
push
mov
dec
and
add
jecxz
mov
mov
dec
add
xchg
add
dec
shll
push
jb
arpl
daa
shll
jae
push
gs
out
jb
imul
shlw
test
xlat
fadds
repz
fcmovu
faddl
ror
add
inc
orb
lcall
inc
cmp
imull
bndldx
jne
mov
cmp
cmp
mov
ret
cmp
mov
leave
movsb
hlt
aaa
js
and
fstl
push
call
and
outsb
or
mov
cld
roll
sub
or
inc
push
orl
pop
stc
or
in
push
push
inc
xchg
incb
mov
sahf
out
jae
arpl
cs
fcom
xor
insb
lea
incl
es
cmp
sahf
mov
and
lock
mov
call
pop
add
jmp
sbb
inc
test
dec
mov
lods
imul
jns
movsb
imul
call
mov
cmp
jle
adc
aad
lods
mov
fsubrl
mov
cmp
push
stos
inc
or
mov
push
sbb
inc
xlat
imulb
xchg
mov
sahf
push
mov
mov
repz
and
adc
mov
enter
jnp
pushl
or
aas
mov
jle
jmp
mov
sahf
adc
pushf
push
push
call
call
cmpsb
inc
dec
xor
mov
fstps
pop
push
cmpsb
mov
dec
test
push
xlat
les
in
repnz
jmp
mov
jbe
int
xchg
les
ret
imul
lret
int3
mov
or
mov
incl
sbb
push
in
test
dec
enter
enter
and
push
xor
adc
outsl
mov
or
nop
or
mov
div
cmp
xchg
push
sub
stc
mov
and
adc
push
enter
cmpxchg
addr16
hlt
cmc
inc
notb
mov
sbb
add
jle
push
jb
in
sahf
out
clc
push
je
in
sub
mov
cmpsl
xlat
fmuls
scas
inc
dec
jns
sti
xchg
dec
push
push
pop
mov
push
mov
xor
addr16
inc
fimuls
filds
sub
stos
loope
jb
insb
ss
jecxz
idivb
fdivl
push
cmpb
adc
pop
push
add
xchg
dec
js
push
mov
test
add
in
sbb
adc
and
into
xor
cs
in
hlt
mov
lcall
sbb
cmp
jnp
push
add
loop
xchg
aam
jl
xor
in
jmp
aas
mov
xor
std
dec
idivl
test
inc
inc
int3
int
sub
in
addl
inc
sbb
nop
add
scas
jnp
enter
adc
inc
pop
dec
push
in
sub
mov
in
push
rcrl
inc
loopne
and
jb
js
rclb
push
enter
in
sbb
add
mov
out
cmpl
mov
cmp
loopne
pop
push
jo
sbb
cmp
sbb
cmp
jmp
jo
dec
pop
inc
jmp
mov
orl
pop
or
rorb
add
cmp
jbe
xor
test
jbe
lea
cmpb
adc
rorb
lea
mov
or
aas
loop
sbb
into
jb
xor
jmp
test
sbb
test
cwtl
and
sbb
add
jmp
fsincos
ss
frstor
adc
daa
jl
cmpsl
and
mov
push
in
fcomps
fdivr
adc
pop
loopne
mov
sbb
fldcw
fadds
adc
dec
fdivrp
mov
int3
and
push
cltd
push
mov
jge
popa
rclb
iret
sub
lcall
cs
add
sub
adc
lock
mov
xor
pop
pop
fistps
lahf
scas
hlt
mov
adc
push
sbbl
pop
cld
in
and
jnp
aad
and
push
outsb
pop
loope
xchg
or
fcomps
outsl
mov
and
decb
and
test
pop
sbb
cltd
cmp
cmp
dec
sub
repz
rep
cmp
cmp
dec
ja,pt
cmp
xor
repz
push
inc
jb
repz
repz
jbe
imul
inc
jge
or
dec
xor
int
dec
orb
or
gs
insb
cmpsb
imul
inc
lcall
fwait
movsb
imul
lds
add
jp
xor
shll
jo
imul
mov
mov
cmp
data16
xor
xor
jge
test
lods
cmp
imul
and
dec
and
xchg
out
and
int
or
xchg
out
inc
daa
sub
leave
dec
repz
sub
inc
push
icebp
mov
jns
lcall
xor
lcall
mov
lock
out
inc
movsb
cmp
lock
repnz
dec
xor
testl
xchg
out
je
or
or
and
outsl
or
pop
insb
push
jae
fwait
lea
push
adc
adc
repz
adc
adc
adc
insb
ss
adc
push
sbb
imul
je
imul
arpl
test
jae
xchg
xchg
addr16
int
xor
mov
inc
mov
out
pop
dec
mov
xchg
sahf
out
sahf
xchg
xchg
xchg
xchg
xchg
xchg
imul
js
pushf
or
xor
je
sub
in
add
repz
cmc
push
adc
inc
int3
xor
dec
popa
arpl
fs
and
gs
fsts
xor
push
xorl
mov
insl
bound
push
jae
mov
cs
sub
insb
loop
lcall
orb
inc
cmpsb
imul
imul
in
fucom
jo
ucomiss
jb
in
mov
push
jb
or
jne
jns
fs
stc
js
popf
push
dec
xor
imul
dec
aad
popa
fs
lods
push
pop
push
push
inc
and
fwait
leave
push
pusha
arpl
aad
stos
fsts
push
lods
pop
aaa
pop
addr16
insb
ss
outsl
pop
mov
pop
clc
xorb
lock
mov
xor
cmp
je
add
pop
les
push
or
cld
pushf
insb
push
lds
mov
pusha
pop
add
rorb
pop
test
int3
jle
push
hlt
and
or
mov
test
loopne
bound
sbbl
xchg
jmp
lcall
add
in
sbb
cmc
test
std
cmp
loope
filds
lret
lea
imul
cmp
ljmp
rcll
lods
pop
mov
push
dec
inc
int3
xor
dec
clc
aad
add
sub
adc
popa
mov
adc
cmc
sub
sbb
orl
ljmp
call
and
je
and
xchg
mov
cmpsb
aaa
scas
lock
cli
inc
mov
fstpl
cmc
push
cmpsl
loop
lcall
xchg
inc
insl
cmp
push
insl
lret
ficoms
and
inc
rcrb
mov
fmull
pop
add
in
popa
add
cs
mov
imul
xchg
jle
test
add
push
pushf
lea
pop
outsb
hlt
test
add
inc
flds
cmpl
jbe
mov
add
inc
faddl
push
out
mov
pop
inc
mov
cmpsl
mov
or
loopne
add
inc
and
mov
dec
cmp
je
jge
jb
dec
dec
orw
idivl
cmp
push
es
sbb
pop
jne
dec
lock
lock
xorb
or
ja
ficoml
adc
lahf
inc
repnz
jb
xor
pop
nop
mov
push
jno
xchg
cmp
out
push
call
push
push
and
mov
lret
push
jns
in
lock
stc
add
cmpsb
and
add
mov
roll
in
shlb
lock
xor
shlb
dec
and
push
into
stc
cli
scas
inc
gs
shll
inc
outsl
jb
xchg
xor
shll
outsl
jne
cmpsb
imul
fiadds
jne
rolb
inc
cmp
add
loope
or
sarb
mov
adc
sahf
icebp
xor
mov
sbb
inc
cmp
xchg
push
das
sub
fsubrs
mov
sbb
ret
and
jno
cmpsl
pushf
jmp
mov
push
adc
test
push
test
cmp
sub
hlt
push
je
cmp
mov
cmp
push
jae
xor
pop
jo
jno
inc
jmp
push
cmp
filds
push
push
adc
or
xor
stc
inc
in
stc
dec
sbb
jne
inc
data16
dec
fiaddl
and
xchg
xor
clc
stc
lods
pushf
dec
sub
sub
cld
lock
mov
in
adc
mov
and
and
ret
mov
je
jmp
lret
aam
add
clc
test
adc
rcrl
and
mov
lea
jo
clc
jnp
aad
and
ret
test
pop
inc
das
push
adc
addr16
and
dec
xchg
test
add
and
mov
xor
addb
dec
je
xor
xor
jo
outsb
push
das
shlb
pop
repz
aas
int
inc
fs
js
mov
jge
loopne
jne
arpl
push
push
testb
into
je
out
inc
loopne
fsubr
adc
xor
pushf
mov
lcall
mov
scas
pop
shlb
pop
sbb
push
outsb
mov
adc
jp
inc
adc
mov
fldl
pop
dec
das
and
xor
fsubrs
nop
stos
pop
out
cld
inc
push
paddw
xchg
sub
pop
cld
adc
pop
adc
std
sub
mov
testb
add
xor
adc
sub
adc
mov
repz
pop
and
fistl
push
dec
repz
iret
dec
dec
xchg
dec
inc
push
cmpsb
imul
xchg
decl
fimull
jb
lods
scas
push
scas
es
fnstcw
movb
imul
inc
or
cmpsl
mov
pushf
mov
lcall
dec
data16
imul
xorb
jae
jge
out
sub
xchg
cwtl
push
out
lahf
cmpsl
jl
lcall
out
sahf
sahf
lahf
mov
push
shrl
js
cmpsb
popl
ret
xchg
inc
testl
gs
jle
jne
imul
or
je
inc
lcall
roll
cmpsb
outsl
outsb
outsb
arpl
lret
int3
cmpb
add
fcomps
xor
cwtl
in
mov
mov
xor
aas
lds
adc
shlb
movl
imul
inc
lcall
mov
icebp
js
lods
push
call
cwtl
test
in
sbb
push
rolb
sub
out
mov
jle
cmp
add
lea
out
mov
insl
lods
mov
inc
inc
push
pop
pop
inc
and
cld
adc
jae
and
sub
sbb
bound
jno
or
pusha
pop
cmpsl
sbb
push
or
fstpt
mov
mov
idiv
xchg
mov
fdivrl
pop
or
and
push
sahf
arpl
mov
jge
pop
inc
cmp
jl
push
and
push
cmp
sub
inc
lea
push
jge
pop
pop
bound
adc
daa
pusha
dec
mov
or
pop
fwait
sbb
in
pushf
or
bts
jmp
ja
push
jmp
add
je
sbb
cmp
out
pop
mov
push
sbb
sub
lods
mov
stos
lds
dec
xchg
add
pop
mov
add
and
cmpsl
mov
out
pop
data16
push
test
sub
je
lea
or
jb
inc
inc
xchg
xor
or
adc
in
jb
inc
xchg
sub
inc
and
add
xor
inc
ret
fwait
ja
out
fimull
push
push
mov
and
dec
rorl
popa
insl
data16
xor
lret
lcall
insb
insb
popa
imul
imul
jbe
popa
jae
mov
xor
jb
pop
imul
xor
or
popa
js
sti
sahf
ss
xlat
xor
cmp
fcmovnu
fstp
cli
mov
push
mov
inc
shll
push
inc
add
cmpsb
imul
imul
mov
sahf
into
mov
lods
xor
mov
outsl
shl
out
cmpsb
add
out
inc
movsb
sbb
inc
outsl
jb
jb
sub
jne
leave
lret
imul
mov
fists
xchg
and
addb
imul
inc
inc
mov
adc
ret
das
sub
cmpsb
sbb
sub
push
and
cmp
rorb
push
daa
inc
xor
pop
enter
dec
sub
test
rcr
adc
test
mov
push
pop
xor
xchg
and
add
sub
adc
in
ja
loopne
fcomps
pop
mov
fsubs
adc
mulb
outsl
bound
movsbl
movsb
sbbl
inc
dec
cmp
pop
jb
lea
push
jnp
pop
pop
sar
and
jmp
pop
mov
push
lahf
cmp
and
incl
mov
fucomip
adc
dec
push
icebp
lods
jecxz
mov
sbb
mov
or
pop
or
gs
das
cmc
push
and
sbb
rolb
sub
jo
xchg
sub
and
adcl
fldcw
push
mov
pop
pop
scas
mov
aaa
pop
and
push
or
enter
outsb
cmp
xor
insb
outsl
arpl
jne
dec
shll
pop
out
out
sbb
pop
xchg
jecxz
pop
mov
rcrl
rorb
cmp
movb
cwtl
add
pop
xchg
subb
mov
adc
mov
lds
in
adc
dec
inc
shll
outsb
sti
jb
movsb
imul
cmpsb
imul
dec
shll
pop
imul
xor
push
jb
arpl
iret
mov
call
pushf
cmpsb
add
xchg
inc
xchg
inc
ret
cmpsb
imul
stos
imul
and
pusha
mov
fcmovbe
inc
dec
lcall
in
rcll
mov
xor
mov
push
incl
xor
or
sub
leave
fstpt
add
cli
popa
jl
or
inc
cld
fwait
fwait
or
jl
cmp
inc
cmp
jb
add
insb
xor
fdivrp
dec
ja
mov
stc
mov
adc
shl
std
and
xor
popa
push
sub
add
push
and
mov
in
mov
out
sub
and
or
loopne
lea
lods
mov
mov
insb
push
sub
add
repnz
imull
or
stc
add
sbb
jp
add
test
call
or
xchg
lcall
test
addb
insb
cmpl
jne
cmpl
in
popa
jne
adc
je
imul
addr16
push
jl
inc
stc
cmc
in
je
daa
in
jo
cld
out
outsl
push
jne
popa
outsb
addr16
adc
adc
divb
insl
jne
dec
lretw
jne
stc
shlb
popa
js
push
sub
jb
xor
jge
pusha
push
push
sbb
dec
insb
or
jecxz
push
fs
dec
xor
call
pop
je
andb
xor
jge
cmp
and
inc
cmp
fbstp
jne
movsb
or
negb
cs
decb
ja
lea
xor
cmp
fisttpl
loope
mov
jbe
pop
aaa
icebp
es
lret
sbb
pop
icebp
push
mov
push
mov
cmp
jb
mov
in
add
aam
add
or
or
sub
sbb
fildl
dec
jae
push
push
pop
inc
ja
iret
push
pop
adc
push
or
es
ja
scas
iret
cmp
ret
nop/reserved
and
movb
jp
js
mov
cld
idivl
orl
clc
fs
push
popl
repnz
test
pop
lock
mov
cmp
jbe
mov
and
sbb
cmp
push
jae
sub
add
or
popa
mov
and
ror
ja
push
movsb
sti
sbb
and
arpl
lret
cwtl
popa
stos
mov
push
mov
or
stos
dec
sub
add
testl
pop
pop
sbb
pop
dec
ret
hlt
adc
pop
adc
fcoml
and
loope
adc
lcall
das
sbb
hlt
aas
jecxz
dec
adc
mov
fdivs
add
pop
push
mov
dec
mov
lret
stc
jb
mov
inc
test
add
jb
and
jne
test
insb
ss
xchg
mov
mov
sub
pop
jge
stos
xor
push
test
and
add
push
push
push
fildll
arpl
ja
cmp
mov
inc
xchg
aam
cld
xchg
xlat
jmp
mov
cld
cmp
pop
pop
neg
push
sub
and
aas
test
lods
add
scas
mov
ss
jmp
arpl
inc
cs
imul
sar
test
sub
mov
fsubrs
xorb
je
push
push
div
xor
mov
or
cwtl
lock
aaa
mov
pop
inc
hlt
inc
pop
inc
cmp
jl
fnstcw
stos
in
rclb
sbb
out
clc
sub
frstor
push
dec
push
add
ret
cmpsl
sar
xlat
lret
enter
dec
in
test
sbbb
xor
fldt
into
pop
clc
or
movsb
aam
test
sbb
jbe
xor
mov
in
mov
sbb
adc
rep
popf
and
cmp
incl
add
cmp
jl
shl
bound
pop
mov
or
jno
jnp
lods
dec
ret
mov
jne
sbb
mov
dec
lcall
sub
imul
lcall
inc
pop
push
and
push
push
cmp
fimuls
push
push
cmpsb
adc
lock
inc
add
test
ficoms
out
pop
mov
push
sub
out
jp
movb
sub
sub
mov
movb
mov
sub
sbb
push
push
in
mov
enter
incl
mov
push
in
mov
cltd
adc
pop
or
xor
jb
std
dec
pop
mov
test
cmp
das
sub
xlat
inc
mov
sub
adc
push
add
not
testb
shll
cmp
lea
push
rol
imul
sbb
test
outsl
jge
movsb
sbb
jmp
test
lock
imul
inc
hlt
sbb
push
cmp
dec
sbb
adc
ljmp
cmp
mov
jo
ds
push
jns
pop
pop
adc
loope
cmpsl
sbb
push
dec
push
push
inc
sbb
push
fs
mov
clc
lret
xor
push
mov
mov
or
cmp
in
add
les
nop
in
xor
push
xor
je
dec
shll
insl
outsl
outsb
jo,pn
dec
shll
gs
imul
mov
lret
or
inc
pop
jne
and
adc
dec
push
or
je
and
jb
jns
icebp
cmp
out
bnd
push
push
xchg
insb
mov
dec
sbb
imul
imul
jne
imul
xchg
jne
loop
push
add
cmp
or
pusha
orl
sbb
pop
inc
lods
cwtl
sbb
push
sbb
xchg
pop
mov
mov
mov
pusha
mov
into
mov
aam
push
push
enter
lcall
lock
mov
insb
push
xor
shrl
cmp
adc
adc
jmp
fwait
xchg
jmp
andl
mov
xchg
or
push
cmp
dec
shll
inc
imul
push
out
imul
fadds
dec
jp
cvtps2pi
shll
sbb
push
outsb
push
or
or
arpl
subb
adc
fidivs
rorl
or
push
clc
mov
lock
faddl
out
std
push
test
inc
jns
rolb
xor
jb
popa
je
push
imul
imul
lcall
aaa
rclb
push
shll
gs
shlb
dec
in
repz
jnp
in
outsb
lock
repnz
repz
hlt
cmc
div
clc
stc
enter
dec
pop
js
cld
je
mov
or
mov
mov
daa
rcl
mov
fbld
sbb
push
add
js
movl
xchg
or
mov
jp
xor
xor
jmp
mov
mov
jmp
ret
js
xor
xchg
mov
inc
sbb
xor
and
fs
jo
dec
shll
xor
cs
sti
and
xchg
jo
jmp
sub
cmpsb
mov
gs
ds
lcall
jne
push
mov
push
mov
mov
je
addr16
mov
popa
rcll
ret
lods
les
test
shll
jae
lcall
imul
cmpsb
add
loop
imul
push
lea
lret
mov
lods
mov
mov
mov
ret
mov
jns
push
push
int3
test
nop
enter
xchg
fiaddl
inc
jne
ror
jb
outsb
shrl
shlb
fwait
xor
push
or
fnstenv
mov
fcmove
inc
push
arpl
inc
pop
fistpll
and
mov
mov
jl
pop
mov
mov
lea
or
push
and
push
outsl
or
or
outsl
jne
mov
pop
test
stc
add
or
pop
andb
sahf
push
and
test
jne
enter
ret
cmpw
jne
mov
add
cmpl
xor
stos
test
sbb
cmp
push
movsb
cmp
je
or
divl
adc
jbe
push
adc
push
inc
jge
adc
jae
fdivrl
mov
mov
cmp
movb
cmp
sbb
fcmovnu
jb
pop
sbb
or
je
decl
decl
lock
mov
jmp
mov
adc
adc
sbb
add
jb
mov
lret
pop
mov
adc
cld
pushf
shrb
or
enter
jle
cmp
jae
mov
mov
xor
pop
jl
or
push
adc
push
fcompl
inc
sarl
push
rcl
mov
push
sbb
je
adc
daa
iret
jb
je
dec
dec
dec
das
shlb
lock
icebp
ret
jo
cmp
je
je
out
mov
cwtl
dec
jo
rorl
outsb
push
insb
test
shrb
bound
mov
push
jne
lcall
data16
xchg
xchg
cmpsb
test
jb
sbb
gs
popa
add
mov
repz
aam
dec
outsb
je
cmp
repz
outsb
gs
xor
iret
rep
outsl
jae
mov
test
mov
cmp
inc
lods
add
push
sbb
movsb
aam
lods
fmuls
xor
pop
xchg
ror
pusha
jmp
sbb
mov
rcll
in
in
cltd
adc
push
dec
cmp
icebp
pop
loopne
aaa
aam
incl
xrstors
jle
mov
shll
add
push
insb
iret
push
dec
fcmovb
adc
in
jne
bound
jg
sbb
mov
call
jb
movsbl
cmp
je
dec
jmp
push
sub
or
pop
shlb
ret
test
je
mov
decl
inc
inc
jmp
andb
inc
dec
shrb
or
test
je
movb
inc
mov
adc
add
xor
mov
push
push
inc
cmp
cmpsb
aam
dec
inc
sub
add
xchg
push
aaa
xor
shr
pop
push
divps
dec
push
insb
inc
push
mov
adc
cmp
jge
clc
lcall
push
push
jecxz
jg
sub
mov
cmp
xor
cmp
pop
jb
imul
mov
mov
shll
rcll
adc
inc
jmp
push
mov
mov
inc
inc
test
jne
xor
ret
pop
mov
jge
push
clc
add
insb
inc
dec
sbb
cmp
inc
push
cmp
inc
lcall
sub
imul
push
pusha
movsb
insb
inc
mov
cmpsb
imul
pop
adc
idiv
mov
sbb
test
pop
pop
pop
sbb
add
pop
mov
pop
cmpsl
adc
jno
xorl
lcall
imul
iret
add
je
outsl
jb
xor
xor
inc
gs
iret
or
jno
fmul
push
cwtl
xorl
cmp
xor
jnp
mov
daa
loop
jp
fldt
cmp
ljmp
inc
inc
cmp
mov
mov
sti
or
fistpll
jae
mov
adc
sarl
xchg
xchg
hlt
ret
mov
cwtl
jp
das
mov
inc
add
cmp
jbe
mov
xchg
pop
lret
cmp
enter
xor
pop
test
adc
je
mov
inc
sbb
jmp
mov
fidivrl
add
movzwl
mov
orl
push
add
cmp
jae
cmp
jb
push
mov
mov
cmp
push
mov
sbbl
hlt
mov
sti
sbb
xor
inc
cmp
outsb
inc
xor
arpl
arpl
jno
inc
push
jmp
ret
dec
fsubs
ret
neg
mov
sbb
or
push
ror
mov
and
pop
clc
or
jmp
push
dec
adc
fcompl
fwait
mov
push
push
or
ret
pushf
cmp
scas
stos
mov
pop
lods
lods
bnd
sbb
dec
movsl
and
adc
or
orb
jnp
push
adc
test
push
cwtl
xchg
cmp
jo
xor
in
ljmp
sti
add
lcall
sbb
pusha
popa
xorl
fucom
jmp
cs
xchg
jae
call
adc
lds
cli
in
inc
decl
jne
xor
inc
jmp
call
inc
cmp
icebp
test
lock
or
scas
and
mov
jbe
lods
or
xchg
inc
mov
bound
inc
je
pop
mov
inc
ds
imul
pop
push
incl
xchg
in
call
push
add
sbb
push
cmp
loopne
sub
inc
data16
fcompl
call
jbe
sbb
out
mov
in
repz
in
jecxz
cmp
sbb
in
daa
xchg
push
push
inc
in
enter
push
daa
loope
loope
dec
test
dec
sbb
jbe
jno
sub
mov
jmp
push
pop
lock
and
inc
jo
sarb
cmp
xor
rorb
lahf
bound
and
outsl
cs
jo
cs
cwtl
adc
or
xchg
test
nop
orl
sub
je
pushf
mov
pop
cmp
rcrb
subb
cmpsb
inc
loopne
push
push
lcall
bound
lcall
jbe
lcall
aas
lock
push
push
dec
or
jo
jae
data16
push
push
dec
mov
pop
push
cli
xorb
or
shlb
gs
cmp
jmp
push
mov
push
push
fisubl
or
add
sbb
and
sbb
add
inc
push
push
lahf
rcr
lahf
mov
mov
shll
je
imul
outsl
ja
inc
xor
xor
sub
push
or
dec
je
sbb
push
jl
sbb
push
pop
movb
lret
stc
lret
jne
fistpl
jmp
cli
xchg
jno
cmp
jae
pop
inc
insb
insb
inc
sbb
push
popa
arpl
dec
xor
or
sbb
inc
sbbl
cwtl
into
les
loopne
rcrl
pusha
mov
stos
stos
sub
inc
pushw
adc
aaa
cld
jae
sbb
ret
cmp
add
add
popf
cs
xor
pop
dec
cltd
sbb
pop
bound
cmpb
mov
inc
pop
loopne
sti
pop
xor
cmp
aad
dec
in
or
jno
aas
push
pop
mov
inc
test
and
data16
iret
int
call
outsl
jo
inc
imul
mov
ret
mov
or
cmpsb
imul
cs
lods
inc
aam
pusha
and
push
push
lock
and
rcr
enter
cmpsb
sbb
lcall
imul
pop
lcall
rcrl
out
dec
cmpsb
shrl
in
fidivs
call
or
pop
jns
xor
adc
add
add
outsw
pop
das
push
sub
pop
adc
xor
add
aas
sbb
insl
test
sbb
jnp
inc
inc
stos
dec
jo
je
mov
fildl
popa
test
add
loopne,pn
inc
or
mov
jns
push
add
clc
divb
aaa
push
mov
mov
mov
in
std
or
cmp
sub
dec
mov
pop
push
pop
push
jp
in
insl
push
add
push
cmp
push
rcll
push
mov
or
bound
cmp
sbb
add
sbb
add
pop
ds
popa
jmp
or
lods
adc
jbe
add
or
jnp
add
inc
or
add
out
push
cmp
push
test
mov
sbb
adc
mov
mov
lock
movsb
out
push
scas
sti
sub
je
cmp
loopne
in
pop
jmp
mov
addl
cwtl
icebp
out
dec
pop
and
daa
add
push
jbe
xchg
orb
mov
adc
mov
mov
loope
icebp
or
inc
push
mov
je
xlat
jmp
cmp
and
mov
cmpb
sarb
add
fs
pop
or
fwait
sbb
cmpb
jns
jbe
andb
cmp
adc
ds
sub
add
xor
or
sbb
imulb
sbb
jb
data16
xchg
cwtl
inc
adc
fnstenv
leave
ret
mov
or
push
mov
hlt
int
pop
sbb
push
clc
in
sbb
mov
push
mov
jge
adc
sbb
mov
test
mov
out
bound
nop
lcall
rcrb
mov
je
pop
push
cmc
sti
movl
fadd
sarl
or
mov
pop
sbb
sub
or
jmp
xor
lock
xor
jne
push
inc
add
je
jge
cmp
jp
add
sti
jns
push
push
lahf
mov
imul
push
push
dec
sbbb
das
inc
cs
jg
orl
inc
or
sbb
outsb
shll
mov
xor
cmp
cs
es
repnz
jb
movsl
std
bts
inc
shl
clc
nop
push
jb
clc
js
aas
loopne
sub
or
cmpb
push
arpl
test
jne
imulb
dec
push
jbe
int
and
push
test
push
ret
testb
or
loopne
add
cmpsb
test
xor
xchg
bt
sub
test
out
andl
sub
movsl
pushw
inc
cmpsb
sarl
out
jno
dec
or
xor
je
adc
je
incl
jmp
xor
fwait
subb
mov
mov
mov
aam
jo
and
aam
add
jecxz
sti
dec
arpl
mov
test
and
mov
cwtl
sub
adc
loopne
fdivrl
and
add
sub
cmpsb
sbb
insb
jo
dec
or
push
or
lcall
cmpsb
push
mov
shll
arpl
pop
mov
add
jae
bound
push
sub
sbb
pushf
andb
mov
add
bound
inc
movb
add
into
outsb
inc
add
add
in
movsl
imul
mov
or
std
push
mov
adc
adc
lods
jp
mov
lret
and
mov
sbb
adc
adc
lcall
leave
cmp
popa
roll
hlt
fs
lret
out
mov
int3
fs
mov
popa
sbb
fbstp
cld
or
lock
jb
pop
in
test
push
ds
es
mov
in
imul
jae
insb
adc
push
push
ret
lahf
xchg
lret
in
popa
insb
or
pop
pop
imul
imul
lock
call
add
add
loop
lahf
incl
add
pop
push
pop
pop
cmp
push
out
mov
fisubrl
pop
cmp
inc
pop
push
or
inc
sahf
imul
xchg
scas
insb
psubw
inc
or
ds
loope
add
cmp
pop
pushf
es
and
dec
xor
mov
push
ret
mov
add
ljmp
pop
out
out
out
fcmovnu
mov
ja
dec
sub
addl
aas
iret
pop
dec
iret
imul
fdiv
dec
push
fwait
les
lret
imul
bound
mov
add
insl
mov
in
dec
adc
mov
mov
pop
jbe
fldl
daa
arpl
stc
das
mov
insl
sub
shlb
push
loope
daa
sbb
popf
and
stc
aas
fsubl
outsb
pop
cmpl
jae
xchg
dec
push
mov
jo
jae
fdivrl
jne
std
loope
mov
fbstp
cmpsl
mov
loopne
xchg
incl
mov
packssdw
es
mov
fnsave
xor
push
outsb
add
rcrl
jb
add
adc
jb
fnstcw
std
add
pop
pop
stc
dec
fs
out
out
xchg
js
pop
out
negb
pop
add
push
or
xchg
ja
dec
add
fucomp
pop
fidivrs
es
sub
xchg
mov
scas
add
inc
push
lea
lds
push
mov
dec
mov
ljmp
push
emms
testl
mov
mov
dec
jge
mov
jb
pop
jo
mov
push
dec
cs
insl
add
push
call
adc
push
pop
sbbl
mov
mov
lods
popf
popf
cmp
in
dec
mov
add
in
pop
push
dec
mov
lcall
out
inc
sbb
cli
mov
hlt
scas
hlt
mov
clc
sbb
aas
adc
out
inc
pop
aaa
cmp
push
filds
sub
dec
xchg
cmpsl
popf
outsl
out
mov
inc
stc
bound
pop
pop
out
ret
and
xor
std
pop
out
les
xlat
sti
dec
xor
out
dec
xor
dec
in
ja
out
js
ja
mov
xor
mov
cli
xchg
fninit
in
dec
xchg
xchg
cmp
subl
xor
sarb
mov
push
push
pop
sub
insl
outsb
and
and
add
stos
push
pop
mov
es
lret
and
scas
lcall
adc
call
scas
or
push
and
pxor
dec
push
add
push
jnp
add
loopne
sub
std
test
pop
xchg
scas
int3
iret
dec
es
xor
inc
xor
aaa
adc
mov
xchg
sub
mov
leave
rol
fisubrs
es
and
pop
dec
add
out
pop
pop
ja
xor
jp
dec
repnz
cmp
dec
sub
in
decl
mov
insb
push
push
mov
push
das
ja
out
out
lahf
jmp
add
loopne
insl
loope
add
lcall
xor
hlt
sti
xor
fsubr
iret
pop
xlat
es
dec
cld
es
out
inc
xor
and
add
sbb
lahf
leave
out
rcr
or
jge
or
inc
xchg
and
or
or
divl
jmp
in
jmp
sub
test
in
xchg
loope
outsb
mov
fdivr
cmp
add
pop
and
ljmp
mov
mov
and
dec
iret
and
pop
stc
jg
gs
imul
popa
jne
je
gs
gs
js
xor
mov
xor
jae
popa
arpl
outsb
cmp
outsl
data16
std
jg
popa
es
rol
iret
mov
mov
into
icebp
movb
enter
aaa
daa
push
push
iret
jle
out
dec
cmp
cs
pop
hlt
adc
push
call
in
push
and
das
aas
dec
add
pop
stc
push
scas
gs
or
inc
insl
jns
gs
aam
or
incb
push
push
dec
clc
sti
sub
dec
inc
pshufw
mov
das
xchg
jae
jne
fs
mov
sbbb
sbb
inc
dec
outsl
fs
pop
loopne
gs
imul
mov
jb
popa
je
push
push
xchg
pop
inc
cmp
outsl
es
pop
fldt
pushf
sbb
push
dec
cwtl
je
pop
fstpt
push
push
push
pop
or
je
xor
or
jbe
je
sub
ret
out
shll
fs
inc
addr16
std
push
pusha
add
insb
popa
das
xor
xor
inc
arpl
jo
pop
or
inc
outsb
arpl
push
inc
addr16
insl
jnp
mov
and
cwtl
inc
inc
lods
popa
lods
ss
mov
sub
fildl
xor
and
adc
imul
test
insb
icebp
sub
arpl
das
jbe
insl
jae
mov
sahf
insb
xor
ja
jb
xor
sbbb
mov
in
jo
sub
cmp
das
sub
xor
xor
push
dec
push
push
mov
sub
lods
cmp
popf
pop
ja
sbb
data16
insl
mov
ficompl
gs
xchg
push
adc
and
mov
sub
and
test
pop
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
and
and
pushl
lahf
test
inc
gs
imul
fstpl
sbb
push
imul
outsl
dec
jne
je
negb
sti
imul
je
jb
bound
jae
daa
push
sahf
std
outsl
jmp
jo
popa
je
inc
sbb
outsl
jae
dec
popa
outsb
fs
pop
dec
outsl
fs
jl
inc
and
jbe
or
pushl
xchg
outsb
xor
gs
inc
jne
jb
add
je
shlb
sub
fcmovne
push
shl
jb
jns
inc
jb
insb
sub
andb
outsl
mov
jnp
mov
je
xchg
outsb
inc
fisttpll
fisubs
push
push
dec
sarl
inc
gs
and
in
loopne
pusha
sbb
pop
mov
addr16
pop
cmp
adc
jns
xchg
mov
add
bound
arpl
imul
inc
insb
push
sub
inc
outsl
andl
bound
xor
cmp
jbe
push
movsb
jbe
arpl
push
inc
jae
xor
clc
push
sahf
jl
jae
imul
out
fisubrl
adc
pop
js
mov
push
daa
and
xor
adc
push
jle
mov
and
je
insb
outsl
ja
pop
inc
js
sub
xchg
sub
and
pop
mov
or
mov
mov
shll
xor
inc
pop
push
add
pop
sbb
adc
scas
popf
enter
movd
ret
adc
jae
nopl
popa
gs
inc
pop
xor
and
sub
fidivs
or
mov
push
lock
pop
das
aad
pop
push
std
fiadds
xorb
push
insl
xlat
mov
scas
adc
xchg
outsl
jo
mov
adc
insb
arpl
push
pop
mov
mov
out
out
shl
cmpl
xor
push
outsb
push
int3
test
adc
xor
roll
aas
and
rcll
bound
je
in
popa
pop
xchg
leave
enter
divl
pop
cld
xor
ja
mov
inc
imul
jnp
aam
ja
frstor
incl
or
jae
mov
adc
dec
jo
or
adc
push
pop
or
cld
incl
and
sub
or
push
sbb
or
pop
sbb
adc
incl
push
cmp
or
aaa
add
mov
push
push
xor
adc
push
sub
or
adc
imul
out
push
sbb
or
adc
add
add
add
pop
mov
adc
es
or
dec
pop
and
mov
cmp
sbb
adc
adc
or
xor
adc
pop
adc
xor
and
mov
repz
xor
sub
adc
pop
fs
push
or
push
pop
add
or
or
mov
adc
aaa
test
fistl
fisttps
push
adc
adc
or
inc
add
lock
pop
or
lock
add
pop
std
mov
dec
pop
and
sbb
or
pop
sbb
cmp
movsb
fadds
mov
sbb
lock
cltd
insl
ljmp
scas
adc
adc
adc
xor
adc
sbb
test
or
or
mov
mov
or
pop
adc
push
or
lock
add
and
push
or
daa
jno
sbb
add
jne
push
and
dec
pop
sub
or
daa
or
clc
mov
sbb
push
or
sbb
adc
pop
sbb
ljmp
xor
sub
pop
insl
jge
cmp
add
addl
outsb
inc
push
nop
or
dec
sbb
mov
fildl
adc
or
dec
or
popa
or
loopne
pop
ret
pop
add
loop
cs
pop
mov
add
add
jle
push
rcll
and
jno
mov
xor
sbb
or
xchg
jae
adc
or
cmp
add
stc
add
mov
mov
fmuls
sbb
push
adc
inc
pop
jl
pop
mov
sbb
inc
pushf
lock
add
push
adc
sub
hlt
mov
lock
push
add
add
add
or
lock
adc
icebp
das
pop
es
inc
add
add
adc
dec
out
lahf
cmpsb
push
or
pop
data16
call
or
adc
mov
jmp
punpcklwd
mov
imul
ss
mov
sar
nop
ja
mov
scas
add
push
cmpsl
je,pn
push
ret
aad
mov
sbb
and
shlb
and
dec
enter
dec
pusha
inc
add
dec
xchg
out
outsb
dec
clc
xor
or
fdivrp
in
aas
shrb
insl
popa
outsl
push
aad
push
add
testl
dec
mov
jns
shlb
js
es
clc
mov
sub
hlt
lcall
and
add
add
add
cmpb
jne
pusha
mov
lea
push
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
popa
xor
ret
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
