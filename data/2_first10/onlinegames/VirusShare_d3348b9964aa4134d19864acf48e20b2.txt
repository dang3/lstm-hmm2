pop
fmuls
mov
ret
nop
mov
icebp
insb
ljmp
call
movl
pop
sbb
fstpl
and
add
sub
les
ret
jne
add
jmp
jl
imul
add
push
nopl
popa
cld
push
pop
ret
pop
pop
fcmovnu
jle
in
sub
or
push
xor
mov
rorb
lcall
mov
outsl
neg
fistl
xor
call
or
mov
shlb
test
push
shlb
in
in
in
jg
lea
push
call
lea
dec
xor
call
sub
insb
out
divl
mov
pop
inc
push
imul
push
ss
xor
in
pop
sbb
jge
adc
sub
fstp
adc
pop
pop
push
call
add
ss
add
push
sbb
bound
nop
fmulp
push
call
dec
cmp
test
outsb
cmp
fwait
mov
pop
sbb
push
mov
nop
inc
aam
cmp
ret
fistl
sbb
mov
mov
das
sbb
sub
leave
mov
mov
xlat
xor
test
cmp
mov
ss
outsb
test
pop
dec
sub
pop
out
pop
push
and
je
mov
adc
or
sub
scas
lds
add
mov
negl
xor
push
cmpb
rorw
sbb
data16
push
pop
mov
test
jo
in
jo
mov
and
in
mov
incl
clc
pushl
and
je
pop
jnp
imul
or
mov
push
push
fs
mov
sarl
push
push
or
sbb
and
mov
mov
nop
add
add
push
ret
scas
push
pop
mov
add
adc
popa
push
push
xor
mov
sti
popa
jnp
push
push
mov
imul
push
jbe
push
sbb
cmp
sbb
mov
adc
jle
sbb
jbe
cmc
add
sarb
add
test
sbb
incl
cmp
jne
lea
mov
je
rep
pop
sti
xor
mov
mov
push
inc
pushf
je
mov
adc
dec
enter
ret
add
adc
leave
inc
jb
adc
pop
and
leave
add
sbb
ret
in
jge
dec
fcmovnbe
push
sbb
sbb
out
arpl
dec
lea
or
jmp
push
pop
jg
jp
fcmovnu
mov
mov
or
xchg
sub
pop
jno
adc
sbb
mov
and
mov
add
and
insb
or
mov
sbb
sbb
add
ret
xor
xor
cwtl
jle
jge
pop
notl
add
mov
fcomi
cmpsl
je
daa
adc
jne
lcall
fucomip
pop
lea
shl
sub
lea
sub
daa
sub
and
test
int
xchg
cmp
jo
imul
inc
push
call
imul
jl
xlat
iret
enter
jae
jl
dec
cmp
mov
add
push
push
inc
or
or
mov
mov
data16
nop
add
mov
mov
mov
sarl
std
add
dec
jne
sub
movl
fsubs
mov
inc
ret
je
into
shl
jo
or
test
pop
xchg
mov
dec
fwait
insb
and
lret
scas
sti
popf
mov
and
cltd
and
push
or
ret
pusha
dec
pusha
inc
lret
mov
dec
push
je
testl
sbb
inc
sub
incb
js
add
pop
daa
cmp
jne
mov
inc
mov
mov
scas
jnp
add
dec
jne
sub
mov
enter
add
cmp
jne
push
in
pop
sbb
mov
mov
and
sbb
leave
cmc
inc
push
insl
mov
dec
mov
ret
or
or
addr16
xlat
push
cmpsb
push
jmp
idivl
testl
mov
add
mov
or
cmp
jl
imul
sbbl
inc
cmp
lea
inc
clc
shlb
add
insb
xchg
xchg
pop
cmp
mov
popa
jl
fcom
sbb
sbb
add
push
push
mov
nop
or
add
test
push
push
and
jne
xchg
and
jbe
jne
cmpl
imul
test
push
mov
roll
adc
push
add
push
jge
or
daa
mov
xchg
outsb
ss
mov
mov
das
pusha
fucomp
and
stos
add
cmp
xor
mov
cmpsb
ret
sbb
jmp
rorl
jno
or
xor
push
push
enterw
sti
push
cmp
push
lds
xor
in
add
xor
and
scas
mov
add
fidivl
js
pushf
or
inc
push
movsb
imul
or
sbb
sbb
add
sbb
add
sbb
pop
push
pushl
pusha
int3
into
mov
ret
push
in
jle
pusha
jl
or
inc
test
push
enter
and
push
hlt
pop
mov
int
mov
imul
sub
add
adc
ret
lfs
and
fwait
loope
and
mov
inc
sahf
and
and
hlt
lock
inc
inc
inc
in
call
inc
inc
aam
inc
inc
inc
inc
int3
enter
inc
inc
inc
jo
js
fwait
jl
inc
addb
repnz
and
xor
xor
xor
jns
xor
les
or
xor
mov
ss
mov
push
or
mov
hlt
lcall
fcomps
rcrb
ret
mull
mov
add
add
fwait
or
sub
fildll
jae
cmp
push
jp
loope
or
ret
push
mov
add
outsb
mov
and
out
test
mov
fstps
outsl
jo
gs
push
xchg
and
repz
sbb
sahf
cli
or
sub
dec
std
sbb
mov
cmp
sbb
loopne
adc
fistps
push
add
mulb
inc
aaa
ficoml
fldl
push
add
loopne
int
mov
mov
and
cmp
xor
mov
sti
and
inc
or
add
or
mov
add
jbe
aam
dec
movsb
or
lods
outsb
jl
inc
rorb
movzwl
jmp
sub
fsubrs
jmp
push
pop
push
push
push
das
adc
imull
les
xchg
cwtl
out
imul
mov
imul
test
pop
scas
mov
lcall
dec
int3
xor
lock
xor
push
add
sub
and
jbe
mov
add
sbb
add
cmp
sub
add
add
inc
xchg
ret
cwtl
sub
shrl
adc
nop
inc
out
cmc
pop
mov
fs
neg
jle
or
xor
mov
pop
ret
outsl
or
add
stos
push
test
imul
adc
inc
loope
or
xor
sbb
add
sbb
adc
sbb
add
repnz
out
jmp
fisubrl
aam
lcall
mov
int
imul
rorl
dec
shll
push
rcrl
cmp
incl
int
or
sbb
push
push
dec
test
nop
jg
addl
jg
adc
shl
data16
incl
and
or
pop
out
jno
jo
je
popa
jns
gs
or
fs
std
jbe
outsl
outsb
fs
xor
xor
and
and
jg
gs
and
daa
inc
dec
dec
push
push
inc
inc
add
add
jbe
pop
arpl
mov
add
dec
add
push
ucomiss
out
mov
fs
insb
pop
pop
divl
addr16
insl
and
out
add
insb
gs
outsb
leavew
dec
dec
inc
dec
push
push
pop
jae
jae
gs
out
repz
insl
xor
xor
and
jbe
inc
dec
sbb
jbe
sbb
ret
test
adc
dec
add
pushl
cs
outsl
jne
arpl
cmp
xor
xor
test
aaa
das
xor
outsl
jg
adc
ja
add
cmp
aas
stos
test
dec
pop
nop
add
add
addb
mov
add
adc
jg
push
adc
mov
scas
call
push
popa
mov
sbb
dec
add
add
push
leave
dec
aaa
loopne
push
and
add
inc
xor
or
fcmovnu
xor
mov
add
xchg
pop
pop
and
adc
in
add
sub
pop
push
daa
roll
xor
inc
loope
das
cmp
jns
pop
push
popa
pop
mov
pop
in
pop
je,pn
js
pop
nop
inc
pop
jo
nop
add
loopne
jb
popa
ret
lret
or
and
jnp
enter
cs
mov
daa
aaa
fcomps
push
and
gs
rolb
daa
mov
shlb
aaa
jbe
xor
lock
nop
rol
pusha
loop
bound
push
daa
mov
out
jp
dec
pushf
jae
loopne
insb
in
lock
imul
imul
mov
test
in
xor
or
mulb
sahf
xlat
popf
ret
jecxz
pop
add
xor
inc
daa
xor
sbb
imul
data16
imul
imul
dec
shll
ss
push
or
xor
negb
xor
dec
shll
adcb
mov
fdivr
sub
mov
add
pop
mov
testb
div
pop
adc
ud1
lret
push
adc
lcall
jae
data16
jno
movsl
or
sbb
mov
push
push
adc
add
mov
daa
mov
mov
adc
cmp
sub
arpl
rclb
mov
mov
dec
out
and
mov
addr16
mov
cmp
jnp
push
and
jne
inc
sbb
in
and
lods
pop
jne
push
daa
sahf
adc
nop
pop
daa
mov
pop
rcrl
fwait
add
sahf
xchg
xchg
push
xor
shll
inc
ss
shll
iret
add
add
push
popa
je
lret
sahf
add
lcall
rcl
imul
lahf
dec
add
dec
cmpsb
imul
imul
shlb
sahf
ljmp
jl
cld
call
sarl
cltd
push
adc
cmpsb
jmp
pop
or
push
jo
xor
push
pop
dec
xlat
xor
xlat
aaa
add
and
stos
out
pop
xorl
pop
lcall
mov
pushw
add
int
adc
pusha
xor
xor
std
xchg
aaa
xor
or
add
sbb
pop
imul
loopne
jmp
inc
pop
into
enter
mov
mov
movsb
jmp
jb
cwtl
xchg
add
xorb
je
lcall
pop
push
push
push
inc
ds
xchg
fldt
mov
outsb
mov
fstpt
xor
jmp
nop
data16
add
cmp
in
mov
jnp
adc
push
testb
jg
jge
mov
adc
mov
xchg
sbb
xchg
jl
pop
and
shl
int3
and
and
aas
or
xor
pop
cltd
outsl
mov
adc
add
pop
lcall
cwtl
or
mov
xchg
jae
insl
jae
fcoml
data16
gs
add
dec
mov
sbb
lahf
aas
dec
push
daa
fcoms
sbb
jle
push
sub
dec
dec
repz
and
leave
dec
add
inc
inc
outsb
lahf
in
outsl
aad
insl
mov
insb
jae
dec
inc
gs
cs
mov
fs
mov
pop
pop
stos
dec
js
in
push
je
inc
jo
push
add
int
lods
or
inc
mov
or
or
pusha
lret
mov
sbb
dec
adc
fcomp
adc
push
inc
push
dec
inc
sgdtl
imul
xorl
data16
pop
fdivr
fdivrl
push
imul
imul
shlb
popa
jbe
push
outsl
ss
pop
add
fs
lods
fsubrs
pusha
add
mov
mov
divb
jne
push
loopne
gs
and
insl
in
inc
sbb
add
or
imul
outsl
in
dec
outsb
je
sbb
arpl
pop
mov
mov
dec
je
mov
jno
negb
out
gs
icebp
cmpsl
daa
pop
je
jo
imul
cwtl
push
daa
jb
pop
mov
inc
push
inc
inc
imul
cmc
dec
popa
pop
insb
outsl
adc
cmp
int
jl
inc
pop
add
scas
pop
cs
clc
dec
inc
inc
xor
inc
dec
xlat
mov
cmp
outsb
outsl
sub
mov
jae
dec
cmp
pop
jo
shl
sub
or
out
ja
jae
outsb
inc
push
adc
call
add
add
outsl
imul
js
sti
ss
add
nop
jb
push
push
inc
push
insb
mov
pop
or
js
je
sbb
jns
test
pop
movsb
insl
add
jecxz
imul
jns
aas
aas
xor
and
adc
mov
push
inc
inc
inc
pop
pop
or
adc
stos
add
add
sbb
adc
ss
jl
gs
or
xor
insb
push
gs
mov
fisttpl
inc
sub
sbb
inc
sahf
push
ret
sti
dec
setnp
cwtl
add
arpl
fs
lcall
push
ret
mov
movsl
bound
inc
xchg
add
rcrl
sbb
fidivl
add
jnp
lods
jo
adc
bound
jae
outsl
sbb
das
loopne
adc
xchg
out
mov
sub
adc
arpl
add
rorl
xchg
push
jnp
jnp
stos
cmpsl
jl
or
sbb
mov
cmp
xchg
mov
std
xor
cmp
lret
mov
mov
outsb
and
popa
inc
or
mov
fwait
push
jae
rorl
test
pop
sub
dec
sbb
mov
xor
dec
hlt
popf
shlb
outsl
mov
cmp
adc
and
mov
xlat
sub
bound
push
cmpsl
mov
mov
scas
jo
adc
dec
fdivrs
xchg
push
jge
sbb
push
sbb
and
inc
push
testb
jno
jae
push
popa
inc
inc
inc
test
jle
faddl
jbe
insb
imul
call
add
jns
fs
gs
lds
push
jo
popf
leave
mov
out
xchg
imul
cmp
add
outsb
push
inc
pop
pop
or
xchg
fisubl
fidivl
sub
or
jae
arpl
out
inc
ja
js
pop
in
ret
test
mov
jge
je
xor
aad
add
jo
adc
pop
push
mov
imul
ds
les
mov
dec
test
push
cmpsl
dec
pop
dec
outsl
outsl
imul
cmp
jae
es
int3
std
lods
add
push
popf
in
fs
addr16
jmp
dec
lcall
push
xorl
push
mov
cmpsl
outsb
cmp
adc
cmp
and
inc
cltd
mov
pop
adcl
pop
push
imul
or
pop
imul
inc
cmp
push
dec
inc
fwait
icebp
push
sbb
xor
add
or
sbb
add
inc
insb
or
push
jae
push
mov
sub
pop
imul
sub
fnstenv
into
jo
sub
frstor
imul
mov
sub
je
mov
dec
mov
add
jns
sbb
adc
nop
in
sbb
push
and
jmp
and
popf
insb
adc
inc
inc
push
mov
sahf
aam
push
test
inc
arpl
icebp
ret
int3
jae
adc
push
andb
bound
ja
pop
subps
pusha
or
mov
ja
insb
mov
xlat
mov
inc
inc
push
pusha
add
push
push
int3
add
mov
cmp
mov
or
adc
lsl
imul
or
insb
sbb
jge
adc
sbb
dec
dec
roll
jnp
lret
shrd
pusha
xor
je
jo
xchg
movsb
pop
xchg
xchg
fisttps
lods
jne
test
xor
hlt
and
pushl
add
pop
add
pop
sub
or
or
daa
push
add
add
sub
sbb
mov
adc
sbb
pop
or
ud2
sbb
add
int
fcos
ds
push
pop
sub
or
adc
sbb
add
sti
incl
add
adc
or
push
sbb
push
cmp
or
pop
add
jg
incl
push
sbb
sub
clts
or
or
adc
adc
and
inc
es
test
add
sbb
sahf
push
adc
and
or
or
mov
or
pop
add
add
pop
sti
lret
mov
or
xor
add
mov
sbb
daa
jge
add
daa
mov
jnp
decb
ss
ss
xor
add
mov
out
idiv
ret
dec
adc
or
adc
sbb
sbb
xlat
inc
fdivrs
or
sub
or
sbb
mov
add
dec
add
or
sbb
push
pop
push
jo
sub
xor
sbb
or
adc
pop
movq
outsb
mov
sbb
add
adc
jbe
loope
push
add
and
mov
call
outsb
xor
sbb
push
sbb
or
sbb
or
sub
sub
add
sub
sbb
adc
pop
xchg
add
sub
sbb
pop
jnp
add
or
add
add
sti
or
add
sub
sbb
insb
add
sub
add
mov
adc
cmpsl
es
cmc
add
pop
jns
fistl
sbb
cmp
pop
ret
mov
and
pop
mov
les
add
cmp
fcmovnu
xchg
adc
or
sub
push
comiss
sbb
sbb
sbb
das
idivb
aas
push
add
add
dec
and
add
sub
subl
add
adc
and
or
mov
dec
in
ss
xor
or
fsubl
mov
xor
stos
daa
cmp
jmp
in
jg
push
adc
sub
or
add
or
out
add
pop
sbb
push
fwait
cld
outsl
int
or
add
adc
adc
or
pop
xor
scas
push
add
sub
add
sub
push
or
adc
adc
insl
sti
or
push
push
or
or
pop
or
push
fistps
imul
add
add
mov
pop
adc
sub
xor
jle
call
mov
push
adc
jg
icebp
sbb
adc
sbb
pop
mov
outsb
sbb
movsl
add
or
test
notb
or
add
hlt
mov
mov
int
push
sysret
test
popa
cmp
aaa
scas
out
sbb
add
push
adc
add
mov
xchg
add
add
adc
mov
jmp
jb
add
add
loope
sbb
pop
and
pop
adc
sub
adc
fcmovnu
push
clc
jmp
or
or
pop
jge
push
push
es
shll
and
add
mov
or
xchg
xor
xchg
sbb
sub
or
sbb
divb
adc
or
or
movsb
jg
mov
or
pop
add
pop
sub
decb
addl
or
cmp
sbb
fisubl
dec
icebp
pop
adc
xchg
or
sub
lret
add
mov
jg
dec
and
inc
ss
cmp
pop
or
push
push
and
mov
faddl
push
adc
push
push
pop
push
pop
xor
mov
cmc
adc
add
outsb
in
xchg
or
add
cmp
or
mov
adc
or
push
sbb
mov
push
adcb
ret
sub
and
cmp
aam
adc
add
jb
lock
mov
sub
cld
lods
shr
cmp
push
mov
aaa
sbb
add
mov
add
push
dec
jg
pop
pop
ret
mov
lcall
inc
add
and
pop
call
call
out
aad
pop
bound
inc
push
sti
aas
repnz
rorb
decl
pop
adc
or
adc
cmp
hlt
dec
push
divl
dec
mov
into
cmp
ljmp
inc
fidivs
mov
xor
dec
movsb
xor
iret
lock
mov
clc
mov
js
inc
mov
jl
mov
cmpb
test
outsl
in
cld
inc
mov
nop
push
test
push
incl
sub
sub
and
pop
shll
fs
xchg
lcall
incl
dec
lea
dec
push
add
lods
or
cli
jo
popl
cmp
in
call
mov
jne
push
stos
adc
daa
add
jne
xchg
pop
jbe
fbld
mov
inc
mov
push
dec
repz
push
movsb
xor
ljmp
inc
pop
loopne
cld
adc
xor
jg
pusha
pop
push
repz
sub
call
mov
pop
mov
xchg
and
push
mov
aam
push
sbb
movsb
dec
jnp
fcomps
mov
aam
inc
inc
xor
or
inc
cmpsl
ljmp
int3
scas
cmp
push
cmpsb
push
inc
cmpsl
xor
insb
mov
loopne
arpl
pop
aaa
or
xchg
fmull
push
negl
push
jg
shr
out
nop
mov
pushl
pop
les
jnp
push
xchg
dec
add
jmp
cmp
lock
push
and
sub
inc
cmp
clc
decl
cwtl
inc
jp
out
mov
and
outsb
dec
pop
jne
nop
mov
cwtl
out
jmp
jbe
popf
ljmp
and
cmp
icebp
or
add
sbb
lods
push
pop
fwait
inc
push
ret
cmovle
xor
incl
cmp
xchg
roll
enter
cmpsb
inc
test
shr
outsl
mov
jg
push
adc
insb
out
sahf
sbb
mov
out
push
ss
and
mov
outsl
push
incl
adcb
sbbb
mov
sbb
adc
fmul
add
incl
push
mov
adc
dec
add
mov
jg
jns
mov
lcall
adc
cmp
cmp
dec
xor
popa
call
and
pop
test
or
sbb
fimuls
pop
mov
fsubl
fs
dec
sbb
sub
jmp
leave
xor
xchg
push
jo
lods
cmp
pop
gs
or
adc
js
stos
lods
les
loop
orb
xchg
aam
pop
aaa
loop
lds
incl
decl
sbb
les
and
gs
mov
inc
push
jg
pushl
insb
mov
mov
stc
mov
push
leave
bound
sbb
lea
nop
cmp
movsl
push
mov
pop
cmp
incl
adc
push
js
inc
js
sbb
and
mov
fcoml
das
xchg
icebp
aad
push
push
mov
and
mov
or
ljmp
pop
push
in
je
pop
add
pop
shr
cs
jno
lret
test
jns
ja
add
pusha
mov
decl
sub
mov
inc
lock
das
repz
imul
adc
adc
ret
add
push
mov
lods
mov
dec
mov
loopne
mov
push
and
jmp
dec
mov
lret
jecxz
mov
js
sub
bound
aas
xor
push
subb
cld
jecxz
aaa
pushf
je
xlat
les
adc
lahf
jbe
mov
inc
iret
in
pushl
fisubl
sbb
and
loope
sahf
cmp
push
adc
lcall
dec
inc
ja
mov
sbb
adcb
incl
push
push
hlt
lahf
push
cwtl
mov
push
add
and
mov
stos
push
fwait
xor
cli
call
mov
in
cmp
ret
ds
stos
mov
call
test
push
jne
sbb
lods
fs
inc
mov
aam
mov
sbb
rclb
fnstsw
and
pop
xlat
xor
jns
inc
mov
pop
ja
aas
lock
mov
lcall
ss
into
jae
sbb
sub
and
pusha
cmp
xor
in
push
sub
addl
orb
ficompl
movsb
mov
lcall
push
sub
inc
push
and
push
inc
cltd
idiv
dec
xor
push
scas
loop
daa
popa
lcall
call
cmpl
loopne
mov
aam
dec
add
jg
jmp
xchg
shrl
push
xchg
inc
sub
and
shlb
add
mov
mov
mov
sbbl
sbb
cmpsb
and
ljmp
test
adc
enter
out
loop
insb
push
cld
inc
sbbb
xchg
mov
xchg
gs
pop
inc
inc
sub
js
pop
sub
movsb
shlb
pop
fsubrl
test
lock
jo
into
pop
iret
mov
out
push
lahf
sub
incl
dec
stos
in
pop
imul
jge
cmpl
xchg
ret
inc
mov
aaa
clc
pop
mov
inc
xor
lods
jmp
or
call
decb
inc
or
and
aad
or
scas
out
icebp
adc
mov
push
cmp
test
stos
mov
fstps
inc
dec
dec
cmpsb
pop
outsl
test
fidivs
mul
dec
cmp
dec
insb
mov
mov
aam
add
adc
sub
and
dec
add
rol
pop
cwtl
add
leave
jp
mov
cmp
fldenv
lods
dec
adcl
mov
or
cltd
stos
stos
aam
xor
repnz
mov
ljmp
xor
sub
dec
add
testb
sub
enter
repnz
pusha
pop
out
sub
in
mov
es
pop
call
mov
mov
and
cmpb
aam
fcoms
sub
lods
sub
imul
aad
iret
lock
jmp
mov
pop
pop
mov
xchg
mov
mov
mov
push
dec
repnz
test
sti
pop
ljmp
in
loope
inc
jmp
mov
dec
inc
in
lods
push
stos
pusha
test
mov
dec
fistpl
std
movsb
mov
and
push
lods
int3
in
add
inc
mov
or
and
and
stc
xchg
inc
pop
pop
jle
dec
and
dec
pop
xchg
mov
popf
jno
xchg
ja
popf
xor
adc
and
xchg
stos
xor
icebp
test
xchg
sbbb
xchg
sbb
adc
add
and
ret
dec
es
mov
mov
xor
lods
cwtl
xor
lcall
xchg
mov
push
call
mov
mov
mov
in
jge
clc
call
mov
xchg
test
in
cmpsb
stos
mov
repnz
dec
roll
pushl
jb
inc
addr16
jne
test
cmp
jns
pusha
xchg
cwtl
js
sub
cmp
adc
jg
push
mov
jb
and
add
xchg
mov
decl
cld
pop
in
and
xchg
ja
mov
and
jae
push
xlat
lods
pop
pop
movsl
xchg
pop
ret
push
pusha
push
inc
pop
xchg
inc
lods
and
jl
adc
mov
das
std
jmp
push
ja
subb
push
ja
and
cmpb
in
cwtl
cmp
loop
lcall
cmp
sahf
inc
leave
arpl
add
pop
inc
push
iret
and
push
gs
mov
jl
and
sbb
pop
movsb
scas
jmp
jae
pop
sub
loope
fbld
cltd
fs
mov
test
jno
jg
jmp
ljmp
sub
xchg
mov
mov
inc
int
icebp
sub
call
ds
adc
pop
shll
cld
cmp
dec
lret
mov
movsl
jo
cmpsb
lds
cmp
jecxz
sbbl
aas
xor
add
daa
sub
cmp
aas
adc
sti
dec
and
pushf
jl
push
push
mov
popa
in
out
push
sahf
cmpsl
arpl
push
jb
dec
lods
jne
sub
addr16
mov
test
jecxz
outsl
std
lcall
mov
sub
or
mov
jno
xchg
jg
lods
stos
jbe
lods
mov
iret
fstl
mov
pop
pop
lret
aaa
xchg
fcomps
mov
adc
mov
jmp
mov
loop
inc
mov
xchg
mov
pusha
sbb
adc
incl
jmp
pop
stos
pop
test
enter
mov
and
fcoml
ss
aaa
arpl
mov
into
push
ret
lods
in
and
test
sahf
dec
jg
incl
adc
in
data16
add
leave
enter
dec
out
mov
dec
and
mov
arpl
mov
shrb
push
ret
sub
add
cltd
inc
sbb
xor
rcrl
jmp
or
es
popa
mov
int3
int3
out
pop
push
adc
loop
fiaddl
cli
jmp
loope
jg
jl
sub
or
push
xor
fildll
pop
or
ljmp
cwtl
mov
mov
xor
ljmp
ret
xchg
int3
insb
push
movsl
push
mov
sub
clc
push
sbb
mov
movb
scas
mov
xchg
movb
cmpsl
movsl
adc
add
xchg
sub
cmc
xchg
jb
ljmp
adc
fidivrs
or
mov
cmp
pop
add
mov
or
decl
push
push
outsl
out
sub
je
xlat
dec
and
xor
aad
jae
shll
stos
imul
push
xor
jae
push
fnstsw
pop
insb
sahf
cmp
in
in
mov
test
dec
popf
cmp
mov
xor
inc
sub
ret
das
insl
pop
clc
pushl
xor
or
outsb
ret
iret
ds
inc
ljmp
mov
lock
mov
jnp
sbb
aam
dec
mov
dec
xchg
insl
enter
movl
pop
xor
or
jae
filds
and
clc
lock
and
add
cmpsl
fwait
ror
rcll
aam
sub
sar
ljmp
pop
daa
cwtl
dec
pusha
cli
add
dec
hlt
fwait
mov
popa
je
test
daa
lock
inc
pushf
loop
std
mov
insb
dec
nop
icebp
xchg
sub
push
lret
add
hlt
jo
cmp
cs
sub
jp,pt
std
jg
push
adc
sbb
cli
dec
shlb
push
inc
jecxz
dec
cmpsl
jp
and
adc
cmpsl
push
insb
mov
in
and
push
cli
incl
loop
fnstsw
cmp
jne
je
pusha
fsubs
xchg
mov
hlt
cltd
into
es
outsl
decb
aaa
push
ja
lahf
das
hlt
popf
gs
sbb
and
bound
xchg
cli
lea
push
into
xor
nop
dec
xchg
test
cli
jg
das
cmc
call
inc
sbb
test
adcb
loop
aam
int
call
cmc
sub
add
adc
dec
mov
lret
cli
out
movsl
and
jo
sbb
ret
rorl
cmp
cmpsl
imul
mov
add
mov
lods
pop
adc
jg
bound
jmp
cwtl
add
pop
test
mov
and
call
popa
sub
dec
aam
pop
repz
push
loop
add
push
hlt
jnp
inc
arpl
test
xchg
icebp
decl
fs
cmp
dec
inc
loopne
inc
dec
mov
or
loop
outsl
cld
outsl
je
sbb
fs
sbb
and
push
and
xchg
inc
jle
jb
and
mov
mov
cmp
std
or
imul
orb
lds
std
pop
clc
xor
pop
dec
inc
cmp
ret
mov
add
jae
hlt
outsl
lock
in
and
inc
cld
jle
lock
mov
jg
incl
adc
test
xor
js
mov
pop
mov
mov
inc
out
lods
sti
dec
in
mov
mov
dec
aaa
loopne,pt
mov
push
mov
divps
push
sub
jo
mov
adc
cmpsb
add
sbb
cmpsb
inc
and
adc
andl
mov
dec
std
decl
sbb
jb
cmp
insl
arpl
pop
mov
loopne
das
cmp
inc
decb
fbld
pop
pop
call
daa
lcall
jne
cs
and
imul
dec
sbb
jmp
push
test
and
inc
sub
mov
stos
cmp
cmp
push
jmp
adc
push
sbb
je
jecxz
sub
test
jecxz
outsl
hlt
pushl
jns
lods
and
sub
movsb
mov
xlat
aam
cs
lcall
jno
mov
push
jge
lods
rclb
ljmp
dec
xchg
jb
cli
and
mov
decl
imul
mov
sub
movsb
xor
loop
jns,pn
add
in
adcl
inc
push
mov
lods
nop
dec
pop
in
add
mov
mov
lret
bound
inc
push
mov
xchg
xor
jg
inc
scas
inc
push
int
or
ret
lret
jb
popa
out
js
xchg
sahf
mov
cs
jmp
dec
adc
stc
ret
lods
ljmp
dec
loop
ljmp
and
stos
push
stos
mov
aam
outsl
lock
cmpsl
sbb
aad
add
pop
ret
lea
aaa
push
mov
pop
and
add
dec
std
mov
aad
stos
adc
mov
les
pop
popf
cmpsb
push
mov
lcall
imul
sub
adc
addr16
and
lcall
xor
inc
mov
mov
xchg
and
adc
mov
push
xchg
test
inc
push
sbb
pop
rolb
dec
pop
lds
inc
stos
and
sub
call
dec
neg
incb
xlat
call
xchg
inc
rcll
or
lahf
fstps
shrl
cmpsb
and
fldcw
aam
and
bound
mov
pop
sahf
stc
push
ljmp
jl
adc
add
incl
and
xor
outsl
push
int
stos
ss
xchg
sub
adc
and
pushl
sub
adc
int
and
push
mov
jg
ljmp
cltd
test
xchg
lds
sub
cwtl
jge
pop
sarb
pushl
mov
rclb
ret
xchg
inc
in
push
jns
popf
add
xchg
add
lcall
repz
fildl
mulb
repz
adc
pop
test
jb
and
outsl
cmc
call
jle
pop
lds
jnp
xchg
pop
cltd
mov
jmp
xchg
lret
jnp
lret
jmp
mov
test
sbb
adc
pop
mov
or
lcall
inc
lret
sub
push
dec
ljmp
stos
iret
sbb
pusha
pop
add
sub
pop
adc
test
ljmp
cld
pop
lea
pop
pop
mov
ror
sub
aad
fsubrp
jg
jg
ljmp
cwtl
pop
orb
stc
xlat
lcall
lods
cmp
ret
sbb
jle
in
xchg
arpl
std
cld
outsb
or
insl
xor
ret
xchg
ljmp
stc
push
dec
inc
pop
in
adc
notb
adc
loopne
icebp
mov
in
ljmp
mov
mov
aaa
cmp
lret
es
mov
adc
jg
or
or
decl
inc
dec
inc
scas
mov
cmp
pop
sbb
xchg
dec
cmp
jecxz
pop
cmpsb
push
rcll
fucom
xchg
clc
dec
push
cmp
popf
sbbb
imul
xor
add
jae
push
inc
inc
int3
in
outsb
mov
clc
mov
sbb
pop
inc
sbb
mov
mov
jle
mov
mov
icebp
sar
shll
xchg
std
sub
fwait
ljmp
mov
xchg
mov
data16
mov
punpcklwd
ljmp
je
fwait
sub
enter
sub
repnz
sbb
add
pushl
sbb
xor
xchg
loope
fdivrs
lds
push
jne
mov
add
mov
sub
inc
insl
inc
inc
push
testb
sbb
popa
jecxz
push
hlt
andb
popa
adc
je
xor
sbb
mov
lea
popf
push
xchg
mov
sbb
and
xchg
adc
cmc
push
sub
ljmp
cld
insl
mov
stos
rsm
rorl
jmp
cmp
adc
aam
dec
std
push
dec
enter
pop
mov
inc
repz
adc
and
pop
jb
pop
call
js
leave
adc
jge
or
in
xorb
dec
jg
and
out
and
fstpl
lock
push
jg
inc
jae
data16
inc
mov
test
addr16
cmp
lods
ljmp
sahf
je
icebp
das
mov
fmul
add
push
push
fdivrs
fsubl
ss
cmp
push
stos
enter
mov
or
mov
jmp
adc
cltd
clc
mov
xchg
std
pusha
pop
push
fadd
loope
imul
and
movsb
sbb
ljmp
push
pop
lock
lahf
call
push
hlt
inc
scas
and
lcall
test
mov
and
push
adc
ja
movsb
mov
pop
sub
icebp
loopne
pop
fisubl
inc
sbb
sub
lock
notb
movsl
in
leave
pop
pop
lea
mov
push
scas
push
pop
mov
pop
in
dec
mov
cli
ljmp
jl
jne
notl
and
jmp
je
xchg
lret
sbb
inc
leave
jg
les
loope
cwtl
and
sbb
mov
push
jle
in
lods
sub
add
jg
jnp
dec
mov
lret
xorl
jecxz
push
loop
adc
incl
and
adcb
push
ret
push
aam
call
jmp
ja
pushl
mov
sbb
push
loop
pop
pop
sub
int3
enter
dec
andb
int3
call
mov
mov
fmull
repz
mov
ja
cltd
sbb
add
dec
sbb
hlt
incl
jg
gs
lods
fs
in
mov
or
ljmp
lret
sub
mov
xor
adc
fisubrs
push
int
incl
repnz
lret
clc
ljmp
mov
sub
outsl
ljmp
sbb
sub
push
lock
xchg
int3
sub
jg
divb
dec
cmp
adc
js
andb
or
lods
imul
fs
inc
aad
cmpsl
std
cltd
jbe
movsb
icebp
incl
inc
dec
push
mov
add
lret
jge
add
clc
add
add
xor
sbb
ljmp
push
add
mov
ret
mov
shr
ds
add
jle
sar
dec
lds
xchg
cmp
std
sub
int
je
loope
sub
out
lcall
sub
ljmp
int
sub
xor
mov
decl
push
popf
outsl
out
test
int
fimull
call
adc
push
sub
sti
idiv
mov
jl
bound
xor
push
adc
and
cmpb
mov
push
incl
daa
mov
inc
xor
lahf
inc
push
mov
addl
push
lds
incl
dec
adc
test
adc
test
adc
test
test
call
fistpl
adc
test
fimull
or
incl
cltd
xchg
inc
leave
lahf
ja
das
je
push
rorb
stos
call
jg
lods
popa
push
add
scas
mov
mov
cmp
mov
mov
shl
decl
sub
pop
jnp
xchg
je
mov
or
add
andl
pop
cmpsl
mov
fldenv
cld
mov
gs
push
repnz
stos
dec
mov
mov
jg
loop
mov
in
or
out
adc
push
movsl
call
cmc
push
and
mov
and
dec
pushf
sub
pop
cli
outsl
std
cmp
ret
or
or
push
xchg
test
mov
pop
inc
loop
add
incl
mov
add
stos
mov
aaa
incl
xchg
and
mov
xchg
and
call
pop
xchg
dec
pop
xlat
jae
add
xlat
jnp
or
aaa
decl
pop
ror
pusha
scas
push
inc
and
sub
pop
popf
sbb
jne
mov
fbstp
fs
cmp
inc
add
int3
mov
mov
add
das
flds
clc
fs
loope
adc
adc
lret
sbb
mov
pop
dec
xlat
sarl
adc
lret
xchg
stos
jp
ret
or
rcr
sbb
call
mov
setne
jmp
call
jbe
inc
mov
test
popf
mulb
inc
pop
test
popa
jns
lcall
mov
icebp
inc
add
and
scas
jmp
lret
aas
lock
sahf
or
ljmp
stc
cmc
mov
push
lods
mov
push
scas
stos
inc
fnstsw
fstpt
incl
sbb
inc
push
fnsave
repnz
or
enter
jg
fucomip
call
push
xchg
outsl
lods
lock
jno
add
out
mov
inc
in
xor
loop
incl
and
jp
mov
dec
mov
or
and
xlat
adcb
lcall
adc
sbb
out
fs
cmpl
incl
negb
mov
xchg
pop
jge
lcall
aas
jle
adc
jnp
jb
mov
mov
mov
sbb
movsl
outsl
push
rcl
sbb
repz
movsl
or
lcall
stos
mov
outsl
mov
lret
and
push
cmp
hlt
pcmpeqb
mov
push
jno
adc
subl
stos
xchg
daa
push
inc
pop
lahf
jns
inc
leave
inc
ljmp
pop
pop
imulb
xchg
push
outsl
push
mov
fldt
ljmp
mov
push
jmp
pusha
sbb
xchg
jbe
cmpsb
scas
bound
xchg
sbb
and
cli
stos
ljmp
cmc
inc
or
mov
jl
ds
fucomip
jns
jle
mov
mov
inc
mov
push
daa
xchg
jne
pop
out
scas
dec
ret
cmc
pushl
faddl
lret
mov
mov
adc
rcll
mov
idivl
imul
ja
imulb
sub
cld
jg
pop
mov
mov
or
mov
lds
aaa
cmp
call
lock
push
stos
inc
adc
xlat
jle
fucomip
ljmp
into
push
pop
popa
popf
or
sub
inc
push
adc
add
pushl
or
icebp
and
mov
adc
clc
and
popf
add
xor
loop
lcall
pushl
cld
and
lds
sbb
mov
sbb
int3
cmc
inc
cmp
adc
lock
call
jo
mov
mov
jle
xchg
dec
adc
call
ljmp
mov
cmp
inc
or
lock
pop
daa
dec
sbb
push
out
fcmovne
js
push
clc
fs
dec
call
jmp
mov
stos
mov
sarl
jg
fmulp
or
insl
loopne
incl
add
sub
xchg
aam
into
xor
push
adc
mov
mov
and
xchg
push
push
jmp
xor
xor
cli
icebp
xor
adc
sub
jns
and
push
mov
lret
decl
cld
adc
xchg
shld
rcrb
pop
jp
jle
rcrb
notb
aad
push
xchg
jns
mov
lcall
std
mov
sbbb
jmp
push
cmpb
test
mov
mov
sbb
mov
inc
mov
ljmp
or
lahf
lret
sub
push
pop
inc
enter
dec
cmp
call
xlat
xchg
mov
test
add
in
jnp
mov
das
xchg
mov
mov
call
mov
lock
mov
call
xchg
ljmp
xor
xor
cmp
inc
jnp
out
push
cmpsl
pop
clc
decl
xor
xchg
inc
mov
daa
insb
jnp
jge
into
mov
pop
lret
dec
fists
loopne
cmp
jge
sub
jno
adc
insl
mov
mov
movsl
decl
inc
xchg
cmp
sub
sbb
pop
gs
lds
lods
jbe
adc
pushl
leave
mov
mov
out
jp
daa
mov
or
push
or
pop
std
xchg
sahf
mov
stos
movsb
ret
or
sbb
incl
subb
iret
mov
cmp
test
jg
dec
inc
lock
std
loope
das
ficomps
and
sub
or
incl
sbb
fwait
push
lret
lods
lea
dec
jg
or
and
sbb
pop
call
xor
sub
nop
dec
cmp
pushf
cmp
arpl
fcmovnu
mov
sbb
repz
mov
testl
outsl
cmc
push
incl
stos
pop
xlat
pop
cmpb
inc
mov
adc
jmp
jg
outsl
lock
lret
das
fdiv
mov
jbe
mov
lock
push
adc
icebp
inc
cmp
stc
ljmp
sub
add
mov
cmp
nop
add
das
stos
xchg
addr16
fcoms
mov
pop
pop
bound
mov
fidivl
push
jecxz
call
dec
popa
rclb
push
hlt
push
sub
pop
and
popf
adc
lds
adc
or
cltd
jp
mov
testb
push
pusha
or
outsl
lods
mov
push
mov
fiadds
or
or
adc
test
adc
xchg
jnp
xor
hlt
lcall
andl
cltd
fsubp
test
jo
decl
inc
and
add
outsb
adc
shl
add
cs
push
lret
ljmp
in
jl
repnz
mull
dec
sub
je
adc
push
adc
pop
loop
daa
or
repnz
rolb
lds
sub
pop
sbb
data16
out
push
mov
imul
popa
decb
push
clc
stos
mov
mov
test
enter
cltd
xor
incl
lods
aaa
nop
mov
clc
mov
loopne
adc
outsl
jg
lcall
das
and
iret
and
ret
clc
addr16
pop
xor
in
in
fisttpl
enter
call
shlb
stos
fistpll
dec
mov
mov
inc
or
jg
sbb
lret
xor
push
adc
push
mov
add
inc
das
icebp
call
fdiv
cmpsb
popf
pop
imul
cmpsl
test
jmp
adc
fildl
adc
sahf
mov
stos
dec
mov
dec
sbb
cltd
popf
shld
decl
push
push
jmp
popf
daa
stos
dec
fs
jmp
adc
mov
inc
jmp
decl
in
sub
scas
rcrl
xor
pop
js
push
out
dec
dec
add
mov
add
xchg
sub
mov
inc
jmp
jne
cmpsl
adc
dec
sub
stos
jle
sbb
add
lds
cli
add
add
ret
mov
add
decl
std
out
cmpl
mov
mov
fildl
imul
mov
popf
and
andb
adc
mov
fsubs
adc
lods
dec
or
jle
std
dec
pop
xor
test
dec
mov
cs
shlb
mov
sub
or
jmp
sbb
jmp
xlat
cmc
arpl
adc
jle
mulb
std
ljmp
dec
fldcw
push
test
shll
shlb
push
pushf
cwtl
xchg
mov
ljmp
jecxz
lds
pop
pop
sub
orl
jmp
sbb
incl
jmp
pop
sub
adc
xchg
insb
xchg
mov
lock
push
and
stos
jo
mov
icebp
int
test
decl
insb
xchg
sbb
aad
pop
iret
in
jecxz
arpl
sub
cmp
lock
cld
inc
add
jg
rclb
pop
mov
or
mov
sub
int
add
aad
std
lcall
gs
add
pop
stos
and
dec
push
jb
jg
and
cld
push
mov
and
fmuls
mov
incl
aad
adc
loopne
lods
cmp
lret
pop
mov
sub
push
adc
hlt
cmc
outsl
mov
rorl
popf
cld
fists
sub
decl
mov
ja
dec
js
inc
mov
ret
repz
or
pushl
xor
pop
shll
mov
xor
sbb
cli
in
mov
cs
fidivs
lahf
sbb
pop
push
sub
xchg
call
push
push
in
int3
dec
les
lods
pop
adc
inc
sbb
inc
adc
xor
jg
pushl
nop
or
pusha
shrl
stc
addb
cmp
iret
push
jecxz
or
out
cli
repz
lret
add
inc
sbb
sbb
xchg
lret
ds
push
incl
call
mov
push
mov
mov
dec
daa
xchg
scas
xchg
push
pop
cmpsb
in
pop
pop
out
mov
in
mov
ds
fsts
pop
push
mov
outsb
sbb
pop
cli
jp
cld
xchg
lret
and
sub
pushl
inc
pop
aaa
mov
mov
shl
cli
jg
mov
stos
popf
xor
mov
outsl
icebp
incl
jg
or
push
or
push
xchg
xor
emms
movsl
mov
xor
rcr
mov
pop
shl
int
lods
push
sar
jmp
test
ficompl
mov
inc
mov
mov
jle
fists
fsubr
mov
jnp
pslld
push
daa
sti
call
pop
mov
mov
inc
js
sub
mov
sbb
mov
inc
lods
jg
ficoms
push
mov
sbb
push
sbb
mov
dec
lret
call
clc
add
fldenv
jo
mov
scas
je
mov
lret
iret
cmc
pop
leave
dec
imul
nop
mov
clc
ljmp
scas
dec
movsl
mov
dec
bound
mov
inc
or
pop
or
push
movb
fnstenv
mov
movsb
fcom
sub
xchg
mov
lcall
sbb
push
mov
add
adc
jmp
sbb
mov
adcb
lds
push
cwtl
jns
stos
fisttpl
jecxz
push
incl
popa
aad
fiaddl
leave
out
pop
dec
mov
jb
fiaddl
jg
into
into
aam
mov
out
and
xlat
cmp
popa
daa
ficompl
jns
lcall
mov
adc
stos
lcall
imul
fildll
mov
mov
enter
xor
pop
std
dec
inc
lock
jb
daa
pop
or
dec
add
ds
shl
push
call
loopne
xor
mov
mov
mov
cli
mov
xchg
push
ret
dec
sbb
out
mov
pop
pop
xchg
es
add
cli
pop
call
sub
cwtl
xchg
inc
cmp
inc
movsl
mov
rolb
xchg
jnp
mov
loopne
into
outsl
adc
lahf
les
cli
js
cmpsb
or
orl
cld
call
ds
mov
hlt
add
nop
loop
shrl
decl
fsubr
ss
push
push
xor
inc
push
inc
mov
pop
loopne
das
and
hlt
lahf
movntps
jmp
repnz
outsl
lock
aas
inc
andb
in
and
mov
rcr
stos
cld
stos
out
leave
call
push
sbb
push
lcall
sbb
lock
gs
mov
pushl
leave
pop
cmp
push
xchg
push
and
mov
lret
enter
das
mov
int
or
sub
scas
xlat
dec
stos
jmp
pushw
rorb
cmc
mov
and
daa
or
gs
gs
push
fs
xor
and
push
mov
mov
add
jl
pusha
mov
dec
test
adc
mov
das
lret
leave
adc
mov
push
dec
faddl
mov
sbb
mulb
dec
insb
push
jbe
mov
sahf
xchg
cli
push
mov
inc
jge
push
mov
sti
insl
adc
mov
adc
fstps
inc
paddusw
mov
and
insl
insl
adc
or
mov
lds
xchg
clc
call
in
int
cmp
push
movsl
test
push
cmp
outsl
cld
pushl
sahf
jo
addl
or
add
add
test
pushl
sbb
in
movsl
fadds
mov
les
cli
mov
pushl
cli
mov
xor
mov
add
enter
push
inc
sub
in
sbb
lahf
jb
xchg
repnz
mov
decl
std
insl
jno
andb
inc
mov
jb
push
xchg
les
popa
push
aaa
clc
pop
or
bound
pop
out
adc
inc
or
decl
mov
aam
shlb
cmpsb
push
cmc
jg
jg
xlat
mov
lret
add
lods
push
ds
push
cmp
test
mov
arpl
outsl
pop
cmp
call
mov
mov
pop
xchg
orb
addr16
das
es
dec
sub
mov
mov
imul
sbb
mov
mov
fdivrl
push
lea
outsb
xchg
bound
scas
inc
mov
cmpsl
jbe
mov
inc
mov
push
test
dec
ljmp
inc
out
mov
in
shrb
inc
push
cs
out
and
clc
or
shl
out
mov
insb
inc
pop
sti
xchg
hlt
popa
jne
out
repnz
fnstsw
dec
or
sub
cmp
fisubl
mov
outsl
push
lock
mov
test
in
test
jmp
outsb
or
pop
xlat
orl
xchg
dec
mov
lahf
fildll
lret
scas
push
std
decl
jge
das
adc
push
call
lods
int3
test
pop
negl
or
incl
rorl
in
xor
pusha
shrb
inc
mov
xor
cli
incl
push
subb
sub
pop
dec
dec
mov
add
std
xchg
clc
addb
mov
adc
outsl
hlt
call
xchg
test
pop
push
cmp
sub
mov
jg
call
pushl
mov
xchg
fwait
scas
je
notl
sub
das
hlt
push
lahf
fistpl
sub
js
out
cwtl
fdivrl
leave
ljmp
je
sub
cmpsl
pop
lret
mov
mov
lret
jecxz
idiv
call
push
rorb
push
pop
push
stos
sbb
xchg
mov
fisubrl
jecxz
pop
and
push
insl
fcomps
adc
test
cltd
add
mov
popf
gs
adc
fstl
shll
popa
movsb
xchg
mov
lcall
sub
cmpsb
push
addr16
les
jo
push
orl
pushl
mov
sbb
push
scas
mov
mov
sub
lret
scas
pop
push
pop
gs
das
notb
sahf
mov
mov
xchg
pop
aad
or
jmp
scas
adc
sub
cmp
jg
sub
stos
sub
adc
mov
iret
adc
sbb
xchg
mov
lock
inc
add
js
adc
adc
push
mov
add
add
sub
movsl
lea
stc
test
mov
popf
mov
xchg
mov
pop
fcomp
ljmp
jb
mov
push
or
jmp
jg
loop
dec
loope
mov
and
lcall
or
pop
and
mov
lods
sub
add
push
daa
pop
inc
inc
nop
jg
test
jbe
aam
pop
jmp
lahf
int
xchg
in
dec
call
jmp
sti
xor
jno
mov
add
movsl
pop
add
and
mul
into
xor
loopne
aaa
xchg
arpl
mov
mov
adc
aaa
into
push
or
filds
mov
pop
shlb
xchg
pop
jge
sub
inc
in
pusha
flds
jbe
cmp
ljmp
and
test
clc
clc
lock
push
adc
lds
es
cmp
enter
jp
push
pop
ds
push
sbbb
cmpsl
pop
xchg
cmp
lock
lods
popa
inc
in
adc
inc
push
xor
mov
cwtl
lea
mov
test
dec
test
sbb
out
push
idivb
jne
ret
push
fisubs
in
inc
sbb
mov
fadds
mov
popf
adc
orb
adcl
lcall
loope
mov
data16
mov
push
cld
test
call
es
xchg
push
mov
inc
xor
out
stos
arpl
sbb
and
lods
movsb
push
xor
xchg
movsl
incl
inc
in
gs
fs
pop
inc
jo
gs
push
in
incl
test
mov
xor
adc
sub
outsl
jmp
imul
mov
gs
les
pop
mov
adc
in
push
out
decl
or
test
shll
mov
popf
rcrb
inc
insl
push
xlat
loope
cmp
mov
test
mov
jge
stc
add
shll
xchg
mul
pop
push
push
jo
decl
imul
stos
lret
je
mov
sbb
popa
and
cmp
xor
push
inc
push
push
adc
mov
or
lret
rolb
sar
lods
inc
inc
stos
mov
mov
mov
and
add
mov
cld
inc
inc
shl
mov
scas
dec
sbb
push
mov
call
shlb
cmp
or
or
jno
dec
jb
inc
mov
incl
loopne
out
pop
ds
mov
stos
fisttpll
orl
dec
ret
add
push
popf
cmp
pop
push
cmp
jmp
sub
cmp
lcall
lcall
ljmp
mov
xchg
pop
xor
jmp
mov
in
aam
out
pop
mov
fnstcw
in
std
push
cmpsl
imul
adc
lcall
sbb
movsl
push
mov
mov
pusha
cmpb
jno
add
fcompl
insb
cmp
add
imul
jmp
stos
jo
stos
ljmp
mov
adc
sbb
and
sbb
outsl
cmc
ljmp
popa
and
data16
xor
adc
aaa
xchg
xchg
push
push
ljmp
mov
aaa
mov
xchg
test
mov
lods
mov
mov
jecxz
in
push
jl
shll
push
lods
inc
pop
cli
inc
cmp
lea
jmp
cli
adc
or
jns
mov
movsl
sbb
cli
dec
dec
fnstcw
mov
out
mov
dec
rcll
call
in
cltd
aad
loope
and
pop
push
push
or
aaa
sti
inc
aad
push
nop
push
push
inc
hlt
push
js
adc
xchg
push
hlt
sbb
dec
mov
push
mov
xor
add
jnp
jg
dec
or
movsb
add
xchg
xlat
cli
lds
sub
pop
inc
imul
in
mov
lcall
mov
movsl
call
lods
cmpb
pop
inc
ficompl
pushl
aad
decl
in
into
mov
hlt
jns
push
or
ljmp
pop
cmpsb
imul
add
pushf
mov
sub
inc
dec
adc
push
out
movsb
pop
fcompl
popa
sub
adc
int3
sbb
add
decl
inc
out
push
jmp
out
push
or
mov
movsl
pop
push
push
imul
aaa
cli
mov
mov
js
sub
cld
mov
fdivr
call
inc
cmp
add
xor
inc
add
add
lds
sbb
test
mov
cmp
addr16
xor
jne
or
les
jg
xchg
popl
leave
mov
loope
cwtl
mov
sub
mov
test
fnstsw
lret
mov
out
inc
mov
pop
jns
xchg
xor
mov
clc
cmpsb
ljmp
decl
mov
inc
mov
mov
push
mov
or
jmp
xor
sar
test
mov
mov
lcall
mov
aas
mov
testl
lcall
jl
sub
jg
pusha
pop
aaa
ret
dec
push
test
loopne
adc
rcrb
jg
or
fists
or
xchg
xor
rcrb
and
push
call
ljmp
lea
inc
cmp
adc
imul
xor
inc
rorb
cmp
fs
inc
fidivrs
loopne
add
mov
outsb
add
jns
incl
lea
inc
adc
sub
inc
and
out
inc
jbe
outsl
mov
int
cmp
xor
vandnpd
add
dec
lret
xchg
jge
or
fistl
dec
les
incl
mov
mov
cmp
mov
sub
add
mov
add
jbe
idiv
decl
movsl
hlt
cmc
add
orb
mov
add
pop
add
cld
cmpsb
mov
decl
adc
adc
xchg
icebp
cmp
adcl
push
add
clc
pop
inc
jno
loopne
scas
jle
mov
push
and
mov
popl
pop
iret
fs
dec
outsl
lock
lahf
loopne
mov
push
pusha
push
aad
pop
pavgb
fstpt
scas
xchg
inc
bound
fimull
imul
movsb
fwait
adc
sub
cmp
push
sbb
cmp
mov
add
outsl
std
lret
imul
shl
sbb
add
imul
stc
cmp
jle
push
push
std
lcall
sub
jmp
lret
add
mov
cwtl
mov
int3
or
inc
mov
std
or
push
and
les
mov
xor
pushl
clc
jmp
pop
pop
add
dec
xchg
add
pushf
push
fwait
mov
cmp
sti
mov
jl
outsl
data16
pushl
test
fcmovnu
sbb
mov
dec
popa
xorb
lock
call
cli
fcmovbe
mov
ss
in
xor
pop
fdivrs
jg
push
xchg
inc
loope
jl
cmp
mov
sbb
mov
shl
adc
fdivs
sbb
jg
decl
cld
ljmp
ret
mov
push
scas
add
in
testl
adc
nop
push
repz
jmp
pop
jecxz
sbb
ror
andl
mov
mov
aam
lahf
jg
jne
and
mov
movsb
ljmp
icebp
xor
aam
cwtl
push
cmc
decl
mov
pop
inc
leave
dec
adc
pop
enter
aaa
clc
jg
outsl
test
stos
and
add
mov
das
std
mov
decl
jle
pop
xor
rcll
mov
jns
sbb
into
inc
ret
lcall
dec
lods
lds
mov
fsubs
mov
fucomip
mov
in
insb
pop
adc
push
lcall
in
popf
push
scas
out
and
ret
lods
push
push
sub
cmc
data16
pop
adc
popa
pop
scas
xor
lret
and
decl
inc
or
jae
sbb
test
int3
gs
hlt
pop
push
push
stos
js
xlat
jmp
aas
xchg
pop
jae
pop
and
and
addb
add
decl
les
mov
ss
lea
das
mov
fisttpl
mov
push
insl
shr
sbb
mov
jmp
test
fsubrs
fsub
aas
dec
lahf
inc
jg
xchg
insl
push
cmp
mov
scas
push
sub
xor
das
call
xchg
and
add
pop
inc
dec
xchg
xchg
cli
mov
jnp
inc
inc
dec
xchg
loopne
ss
pusha
roll
call
mov
mov
adc
lods
pop
das
rol
cmp
leave
pop
loop
in
pop
mov
jg
mov
mov
mov
xlat
enter
lea
inc
mov
pop
cli
xchg
dec
mov
lods
fdivrs
mov
ja
popa
mov
jge
adc
or
jns
in
xchg
cs
in
es
fisubrs
xor
mov
fidivrl
push
insl
sub
and
clc
adc
add
adc
rorb
pop
pop
rcr
fxch
test
incb
in
xor
xor
xchg
ret
xor
popa
inc
pop
inc
add
xchg
call
push
mov
fisubrs
fcmovu
test
inc
sbb
mov
cmpsb
jbe
in
pop
in
aam
rcrb
nop
and
and
cmp
fdivrs
jo
lods
lcall
fstpt
mov
add
rcrl
data16
inc
sub
mov
mov
pop
add
imul
mov
dec
stos
dec
repz
lcall
out
shll
push
jo
push
mov
adc
or
mov
inc
xlat
and
stos
push
movsl
lods
pop
cmp
aam
xor
jb
incl
push
lock
out
pop
cmp
data16
mov
cltd
dec
or
outsb
fnsave
mov
and
dec
stos
push
dec
cltd
xor
lcall
lea
mov
xor
jns
push
subl
cmp
lahf
lret
dec
lret
pop
and
pusha
push
in
aad
push
mov
mov
lods
jle
pop
mov
xor
sbb
dec
inc
sti
aaa
stc
pop
mov
adc
nop
stc
ljmp
inc
jge
and
pushl
movb
hlt
sbb
mov
fldt
cmp
pop
loop
mov
dec
add
mov
insb
cmp
xor
mov
pushl
outsb
jo
or
dec
xor
and
repz
int
dec
jmp
pop
test
mov
jbe
pop
cmp
adc
test
jns
movsl
rcr
test
cld
inc
inc
shrb
pop
sbb
mov
sarb
clc
out
push
fnstenv
dec
fiadds
push
push
jae
addr16
jne
dec
sub
mov
jae
jno
inc
test
dec
inc
rcrb
jb
jp
shrl
mov
mov
jg
lds
outsl
shll
mov
mov
dec
jne
shlb
cmp
int3
roll
std
ret
pop
cmpsl
inc
lods
or
mov
incl
push
xor
std
mov
call
sub
inc
jne
adc
ljmp
lea
pop
in
adc
leave
jge
or
xchg
test
fldl
ret
xor
in
cli
mov
scas
mov
hlt
sub
jmp
push
neg
testb
dec
mov
xor
mov
call
inc
push
loop
xchg
pop
popl
and
int3
mov
ja
pop
bound
push
mov
test
push
inc
stos
out
pop
dec
sbb
add
add
in
add
pushl
outsb
pop
sarl
push
jg
jp
ljmp
lock
mov
out
mov
imul
adc
hlt
gs
lcall
lods
jbe
sbb
cmp
jnp
popf
and
xorl
cmp
clc
push
popa
xchg
push
push
push
enter
insb
cmpl
ljmp
filds
lea
mov
xchg
adc
mov
push
sbb
mov
incl
stos
dec
xchg
dec
push
stos
stc
outsb
mov
pushl
clc
loop
ljmp
ljmp
dec
das
fisubrl
sbb
sbb
pushl
pop
jbe
sbb
push
addr16
pop
mov
arpl
cmp
call
mov
fistpll
push
xchg
test
fwait
sub
push
mov
jle
adc
icebp
test
pop
loop
sbb
jg
push
movsl
je
std
mov
jne
and
push
sbb
push
mov
dec
lcall
decl
addr16
mov
addr16
rcrl
push
sbb
xchg
and
ljmp
mov
into
lods
outsl
push
xor
mov
mov
out
cmpsb
jae
fisttpll
or
repz
or
arpl
push
outsb
push
das
icebp
push
pushl
sahf
cld
fcmovnbe
push
mov
repnz
decl
jmp
daa
xchg
mov
push
cli
push
shll
xor
repz
and
cli
call
mov
loopne
inc
movsb
mulb
cmp
outsb
es
dec
frstor
setp
pop
ljmp
mov
aaa
imul
sub
pop
loop
xchg
add
mov
stos
sbb
shll
xlat
jae
jae
jg
mov
rcll
ret
sahf
adc
fisttps
movsb
push
sti
lret
sub
lcall
sbb
lods
ss
jp
int3
shlb
mov
enter
icebp
pop
ret
mov
fs
push
dec
push
testl
sub
jb
push
jp
out
dec
imulb
aad
leave
pushf
scas
adc
ljmp
push
push
cld
jg
jae
jle
push
sti
in
dec
push
jne
je
data16
decl
jle
mov
test
inc
or
notl
mov
pop
push
aam
mov
sarl
sub
sub
incl
stc
lods
repz
mov
inc
inc
in
popa
or
int3
call
test
inc
cmpsl
add
lcall
fnstsw
lods
out
mov
and
sti
insb
call
mov
daa
call
in
jmp
imul
lret
jmp
shl
in
push
fists
dec
gs
mov
stos
mov
not
inc
rcll
scas
ljmp
pushf
jge
jge
in
push
inc
in
in
mov
lcall
shr
lock
rep
test
pushl
decb
nop
adc
lahf
xor
mov
nop
jns
lock
inc
leave
xor
xor
sub
mov
pop
sbb
cmpsb
pop
mov
js
iret
xor
aam
pop
int
aas
out
jle
mov
hlt
mov
movsb
dec
es
jl
xor
int3
stc
gs
ret
jmp
lds
cmp
ljmp
dec
decl
mov
jbe
sub
lret
out
lds
xchg
jbe
mulb
nop
ficomps
lods
ds
mov
jg
jmp
fsub
and
aas
push
in
jnp
pushl
enter
clc
jns,pt
cmc
imul
mov
inc
subl
pushl
jae
cmp
lds
dec
mov
mov
push
lret
pushf
hlt
jmp
stos
imul
in
movl
gs
sub
jne
push
lahf
hlt
incl
idivb
aad
loope
in
popf
adc
pop
push
das
test
sahf
mov
neg
inc
lods
jbe
dec
jo
lcall
das
enter
dec
push
jb
jo
ss
fndisi(8087
loope
pop
xor
jne
cmp
mov
js
ret
aad
push
inc
push
or
xor
pop
je
movsl
jmp
repnz
js
mov
mov
xor
or
scas
pop
or
lods
adc
cli
xchg
hlt
fisttpl
mov
ljmp
test
pushf
loopne
xchg
lcall
loop
jne
dec
inc
outsl
or
or
sarb
icebp
lret
cmp
cmc
jl
cmpsl
ret
cmp
xor
iret
nop
fdivs
jbe
push
fistl
icebp
fdivrl
cli
dec
mov
lock
push
leave
in
aam
jl
lea
mov
push
pop
lods
mov
lods
jl
xchg
mov
inc
xchg
pop
out
push
test
adc
div
test
jmp
mov
mul
out
pop
aad
and
fstpt
inc
mov
and
incl
inc
jle
pop
cmpsl
shll
jg
xchg
insb
mov
inc
mov
jne
pop
scas
negl
cmp
movsb
cs
test
lret
sbbl
daa
or
mov
call
mov
push
cmp
shl
jg
dec
sub
test
cld
cld
inc
inc
xor
mov
mov
shrl
shrb
repz
mov
sti
lahf
jmp
sti
sahf
sub
imul
sub
pop
mov
mov
aad
clc
push
aaa
add
xchg
mov
or
lcall
add
les
int
rcl
flds
ljmp
dec
int3
out
xchg
cld
jmp
lahf
es
jo,pn
cmp
shlb
sub
mov
test
jmp
std
sarl
push
scas
or
pusha
mul
jmp
clc
push
xchg
or
jns
stos
xchg
arpl
pop
call
fstpt
cmp
filds
leave
xchg
jge
stos
std
movsl
pop
cli
popf
dec
imul
pop
clc
push
cmpsl
sub
fimull
and
inc
rcr
movsl
scas
aaa
les
pop
sbb
fmull
mov
cs
call
ficoms
sub
fidivrs
mov
xchg
mov
sbb
cmpsb
sti
and
xchg
cmp
jne
fstpt
call
mov
aas
gs
lea
movsl
call
cmpsb
addr16
pop
fcomi
daa
ja
push
ja
stc
mov
ja
idivb
divb
lret
xlat
push
cmp
ret
sub
repnz
jmp
pop
loope
sbb
rcrb
mov
inc
inc
stc
jne
lahf
lods
pop
call
lret
pop
std
sti
jmp
clc
jp
int
shll
ficompl
sbb
lcall
stc
mov
jl
inc
out
push
lret
nop
and
call
pop
ja
mov
cmp
cmp
mov
test
mov
insl
notl
lret
jp
jp
jb
movsl
xor
sub
jecxz
movsl
insl
out
aaa
jo
adc
mov
and
mov
movsl
sti
movsb
dec
cmp
daa
sub
popf
xchg
fidivs
fistl
imul
ljmp
inc
xchg
cmp
lods
pushl
test
pop
xchg
cmp
lea
push
sub
and
jmp
dec
clc
pop
repnz
sbb
cmp
jne
xchg
sti
cli
adc
iret
fstpl
xchg
sbb
icebp
mov
incl
dec
data16
adc
test
in
push
addr16
inc
push
mov
out
pushf
iret
push
jmp
or
int3
shl
pop
dec
pop
ljmp
dec
aas
lret
sti
std
cmp
dec
inc
lods
out
fsqrt
push
in
dec
adc
ret
jo
in
add
decl
psubd
fidivl
ljmp
adc
aaa
pop
xchg
lods
cwtl
fsubr
stos
scas
xor
inc
xchg
cld
pop
push
xor
iret
mov
dec
lcall
decl
bound
rol
imul
jbe
loopne
mov
enter
cmp
jmp
xor
dec
add
mov
jle
loope
test
jl
and
pop
loop
aas
scas
pop
cmp
mov
repnz
out
clc
jmp
test
fs
pusha
sbb
cmpsl
mov
adc
push
es
out
add
fs
mov
cwtl
rolb
mov
pushl
fcompl
pop
jae
or
scas
test
stc
sar
arpl
sahf
cltd
lock
stc
into
push
aas
scas
sbb
pushl
clc
lahf
sbb
push
sub
and
enter
dec
std
orl
repnz
in
mov
subl
adc
adc
pop
xchg
jbe
sbb
incl
mov
call
popf
pop
mov
sub
mov
jb
aas
mov
mov
sbb
stos
inc
sub
bound
pop
pop
ds
int3
pusha
pop
div
lcall
jno
or
and
lock
pushf
dec
cwtl
push
cmp
lock
call
outsb
repnz
insb
xor
lds
negl
adc
call
jp
fisubl
xchg
imul
fwait
ss
xor
cli
pop
std
mov
lods
xor
or
data16
iret
iret
outsl
xor
rcrb
insl
cmp
xchg
lcall
cld
sub
add
xchg
xor
jo
mov
jp
cld
fcompl
adc
std
lods
sbb
imul
adc
fstl
mov
sbb
lods
cmpsb
fbstp
lcall
sub
rorb
pop
les
pop
int3
xor
adc
add
xor
sub
sahf
xor
cld
mov
incl
pop
mov
out
dec
push
or
mov
call
xchg
cmp
int3
mov
js,pn
jmp
fucomip
mov
aas
call
xchg
out
push
cmp
loopne
lret
rclb
ljmp
nop
or
cmp
sub
ljmp
mov
dec
in
mov
adc
xchg
movl
ljmp
lcall
dec
push
ja
sub
frstor
ljmp
jg
cli
cmp
xor
loopne
gs
pop
push
dec
push
or
pusha
xchg
inc
mov
popa
pop
fildll
mov
jbe
cli
pop
push
push
cli
jns
pop
inc
lea
add
test
out
cmp
clc
repnz
aaa
js
xor
icebp
fistpll
add
fs
mov
cld
data16
mov
ljmp
stos
ret
cmp
push
cli
iret
jnp
sti
in
cmp
fnstcw
xchg
sub
ret
jl
mov
rcrb
lock
std
mov
into
js
test
push
imul
outsl
iret
pop
mov
sbb
shl
jmp
jp
jnp
sbb
sbb
xor
cli
pushf
push
sbb
pop
pop
repnz
ljmp
pop
lcall
mov
pop
dec
scas
mov
js
icebp
jg
or
cmpsl
xor
loope
stc
ss
icebp
inc
or
push
ljmp
xchg
mov
imul
aas
cmp
repnz
scas
cwtl
incl
call
imul
dec
cli
push
mov
hlt
xor
lcall
aaa
xlat
push
fnstcw
repz
into
add
sbb
sbb
out
movsl
jg
sarb
insl
adc
aam
ret
xchg
jl
mov
jg
pop
jne
cmc
pop
imul
mov
in
pop
aad
gs
ljmp
fcmove
mov
sti
shlb
out
clc
cli
sub
mov
mov
add
cld
push
push
push
mov
mov
jnp
data16
push
inc
dec
inc
jne
or
inc
hlt
or
out
mov
pop
inc
xor
call
mov
call
out
or
inc
out
stos
jmp
call
mov
call
add
std
dec
je
jns
jl
xlat
sbb
add
or
dec
dec
mov
cmp
pop
jmp
add
fnstsw
add
xchg
lock
pop
or
mov
je
call
jl
add
push
outsb
push
mov
roll
or
je
mov
pop
cmp
je
inc
call
inc
xor
out
out
pop
test
dec
loop
mov
call
dec
mov
std
fucomp
mov
in
push
adc
call
mov
mov
aaa
ljmp
in
jg
jge
ja
inc
add
sub
rep
pop
jmp
or
decl
jmp
add
jne
mov
mov
mov
or
jge
shl
adc
fbstp
or
call
call
cs
mov
pop
ret
nop
insb
fildll
lea
loopne
mov
push
jg
jo
cmp
xchg
rolb
mov
cmp
cltd
loope
add
les
decl
and
cwtl
inc
cmp
inc
jge
mov
pop
inc
add
or
mov
or
aas
xchg
sahf
inc
test
gs
sbb
mov
jp
leave
out
decl
insl
divb
inc
aas
jle
sar
es
push
adc
and
repnz
xor
jg
add
mov
insl
jne
adcl
push
pushl
lods
and
xchg
sub
ja
add
decl
jle
inc
lcall
sbb
clc
rcrb
hlt
ljmp
and
mov
pop
inc
mov
push
fcoms
std
dec
js
jg
ljmp
popa
pushf
cmpsl
xchg
fs
vdivps
xor
pop
lock
pop
push
lods
dec
mov
jno
mov
nop
les
add
aaa
cmpsb
loopne
jl
out
sbb
inc
pop
ud2
xor
loopne
hlt
cmp
mov
inc
loope
andl
adc
ja
push
sub
mov
cmp
jl
xor
into
into
and
cmc
ljmp
mov
and
pop
pop
push
pop
mov
cmpsb
outsl
lock
lock
roll
jle
jmp
inc
ret
mov
mov
icebp
lds
inc
lgs
or
jmp
out
xor
mov
adc
push
js
leave
and
adc
sub
pop
xor
clc
test
sbbl
call
clc
mov
or
mov
mov
shlb
adc
int3
ljmp
pop
aas
push
push
push
aam
inc
out
dec
das
adc
sbb
mov
outsl
push
insb
popf
adc
lods
mov
pop
mov
xchg
or
dec
bound
sub
cld
loop
lods
and
push
inc
push
xchg
jnp
add
sub
lcall
jno
fdivrl
lea
ret
std
ljmp
dec
push
test
stos
hlt
push
lcall
repnz
xchg
xor
jmp
sbb
cmpb
arpl
imul
cmpsl
call
js
hlt
adc
xlat
sarb
mov
adc
cmp
push
lcall
mov
mov
adc
and
xchg
outsl
mov
test
call
cmp
mov
lret
or
mov
pop
dec
dec
out
jmp
aaa
cmp
push
pop
sbb
lcall
fnsave
fisubl
fistps
mov
or
add
or
insl
cltd
pop
dec
ret
dec
sub
ljmp
xor
rcll
lahf
push
sub
sub
dec
pop
insb
push
cmc
xchg
push
push
mov
dec
lret
ljmp
rolb
sbb
mov
cmpsb
pop
mov
fistps
push
cs
cmpsb
in
jl
adc
sub
stos
sarb
cmp
rcl
inc
aas
adc
xchg
push
inc
xchg
popa
sub
inc
pop
and
loope
jbe
push
xor
ljmp
data16
sbb
iret
fwait
dec
rcr
push
mov
adc
aaa
fisubl
lea
test
call
roll
movsb
push
jmp
sbb
ret
mov
inc
idiv
jmp
sar
call
imul
or
aam
pop
cmp
nop
pushl
je
imul
jae
sbbb
hlt
mov
iret
enter
bound
sar
call
test
jge
xchg
xor
enter
mov
xorb
repnz
repz
push
loopne
lret
mov
sahf
cmp
das
dec
decl
xor
jecxz
rcr
sub
loopne
jns
sub
sub
pop
lcall
and
add
ficomps
loope
das
mov
lcall
jo
mov
fucomip
decl
icebp
mov
xlat
nop
clc
jmp
mov
test
clc
lcall
adc
xchg
fiaddl
sbb
adc
cmp
mov
mov
push
mov
dec
pushf
ret
inc
repz
cld
add
fistpll
jmp
test
pop
or
sbb
dec
data16
out
imul
mov
mov
inc
push
pop
xchg
js
sarb
mov
mov
lods
ljmp
push
mov
scas
mov
sbbb
filds
inc
push
xchg
int
lret
jg
fisttpll
mov
cltd
outsl
icebp
pushl
pop
jg
ret
inc
inc
add
mov
add
mov
mov
xchg
mov
or
push
shlb
pop
je
stos
insb
xchg
stos
push
addr16
idiv
mov
adc
jecxz
pop
cmp
inc
sbb
hlt
mov
lds
xor
cmc
movsl
adc
std
ret
fsubr
mov
insl
cmp
dec
mov
xchg
call
mov
pop
xor
inc
mov
es
dec
xchg
mov
sbb
rorb
mov
das
inc
cld
popa
aaa
lods
sub
ljmp
lret
pop
stc
lds
adcb
inc
sub
xchg
or
push
jae
cmp
addb
sbb
sub
dec
mov
sbb
inc
fsts
inc
shll
sub
sub
test
mov
adc
push
dec
fadd
in
aam
lcall
leave
mov
mov
mov
aaa
mov
out
out
mov
sub
cli
call
sahf
jp
jmp
cli
dec
popf
cmp
test
das
jp
gs
int
dec
push
add
pop
pop
test
push
rclb
lret
mov
sub
inc
and
add
push
mov
sarb
pop
inc
test
mov
scas
sbb
stos
xor
aaa
cmc
mov
insb
adc
cwtl
mov
push
sub
bt
mov
xchg
ljmp
ljmp
adc
in
sub
scas
imul
imul
push
testl
je
fdivr
mov
cmpsl
insl
sahf
aas
popl
daa
inc
int
rolb
aad
jg
loopne
out
and
out
mov
imulb
jge
cltd
js
and
out
push
pop
ljmp
xchg
testl
fbstp
cmp
jo
decl
jp
and
fistl
shrl
inc
mov
loope
sbb
xor
mov
cltd
test
andl
ja
lret
dec
adc
cmp
jb
es
dec
push
jp
aad
ret
imul
xchg
mov
mov
fnstsw
jmp
mov
test
inc
shrl
mov
jo
pop
sub
pop
adc
call
cli
inc
sub
int
xchg
push
jne
in
xchg
or
mov
mov
sub
enter
addr16
js
nop
pop
pop
xor
stos
call
popa
js
add
stos
sub
pop
inc
fs
pusha
ja
fbstp
mov
incl
ficompl
dec
js
scas
mov
dec
orl
jmp
pop
lea
cltd
mov
sub
or
lods
mov
inc
sub
or
js
xchg
lcall
icebp
call
mov
loop
enter
push
hlt
test
jno
decl
call
insl
int3
and
or
push
pop
push
inc
dec
in
clc
hlt
call
mov
out
mov
xchg
adc
push
mov
lods
mov
cli
jnp
adc
cli
fistps
cli
mov
cmp
pop
jb
je
jge
test
jle
adc
lcall
fs
repz
mov
push
pusha
xchg
loopne
daa
js
lcall
mov
aaa
cmp
or
pop
outsl
aas
cmpsb
stc
pop
ljmp
cltd
xchg
or
pushl
xchg
dec
add
subl
or
imul
ljmp
aad
mov
pop
insl
stos
or
icebp
test
out
xorb
mov
movsl
pusha
arpl
arpl
adc
sbb
clc
lcall
jnp
fs
jb
sub
mov
jns
ss
jae
pop
push
lcall
rol
sbb
cmpsl
lahf
xor
cmp
pop
and
add
cli
push
xchg
in
and
stos
repnz
cli
jg
das
pop
in
cli
cmpl
or
mov
push
xchg
loop
ss
push
adc
pop
dec
sbb
or
mov
test
call
xor
lds
insl
pop
mov
pop
mov
adc
in
sbb
aam
lods
mov
aam
dec
sbb
mov
lds
ss
in
mov
xchg
lea
call
mov
pop
jns
cmc
fstl
and
sbb
jl
sub
lret
and
push
inc
popa
movsl
push
dec
fdivrs
pop
mov
and
ljmp
mov
sub
push
mov
je
pusha
fsubp
addl
push
mov
dec
outsl
mov
inc
dec
or
in
inc
mov
sub
lcall
std
pop
pop
xor
mov
xchg
sbb
std
aad
adc
decl
jmp
aas
sbb
and
cmpsb
jle
cltd
fsubrs
cmc
and
cmpsl
aam
rorl
and
in
sbb
out
mov
orb
ja
lods
mov
sbbb
ds
test
das
adc
in
push
addl
xchg
lock
loopne
sahf
or
andps
lret
xor
cmc
xchg
andl
popa
loope
aaa
push
rcrb
pushl
mov
jno
out
loopne
jb
sbb
jb
outsb
dec
cmp
add
gs
jg
fsubs
sti
jne
mov
rcrl
bound
and
inc
add
mov
jns
sub
scas
loop
fbld
mov
xchg
std
jg
rolb
jge
es
push
jb
lods
sub
leave
lcall
add
out
and
outsb
inc
aad
jg
roll
idiv
cmp
lods
test
cld
and
jmp
push
push
jmp
dec
pop
mov
xor
jg
pop
clc
andb
call
sbbl
shrl
std
pop
mov
call
jne
in
scas
imul
dec
mov
or
push
push
icebp
pop
fildll
int3
xchg
jg
lcall
jmp
pop
aas
nop
push
ljmp
inc
sbb
fildl
xor
dec
xor
inc
cmpsb
cmpsl
xor
in
cmp
lock
addr16
mov
and
out
mov
inc
mov
ljmp
push
push
adc
fucomi
pop
mov
mov
hlt
sub
dec
xor
outsl
jno
lock
jo
std
insb
mov
in
push
in
lea
fxtract
fwait
jnp
mov
inc
cmc
aaa
ds
loope
loopne
cmpsb
mov
push
inc
test
pop
cmpsl
inc
push
add
in
cmp
gs
add
dec
int
mov
punpckldq
xchg
inc
outsl
mov
out
rorb
push
aad
add
mov
dec
adc
jmp
sub
jmp
rcll
sar
fnstsw
pushl
call
imul
add
scas
xchg
push
stos
je
pop
lcall
maskmovq
idivl
std
ret
es
mov
pushl
jp
bound
jno
nop
lds
push
pop
dec
shll
xor
xor
xor
or
test
test
jle
js
dec
add
insl
mov
sub
cmp
push
cmp
shrl
daa
inc
dec
rclb
and
ret
lock
xor
lret
out
popa
mov
pushl
daa
clc
shl
xor
push
push
pop
xchg
jo
jae
test
pop
jmp
jo
ljmp
loopne
jg
fsubl
xchg
jp
mov
push
scas
lods
and
jg
pop
clc
mov
in
pop
jmp
lcall
jmp
stos
dec
mov
sub
rol
pushf
jb
out
push
mov
xlat
mov
fbstp
in
jae
pop
jbe
mov
cmc
or
pop
jge
xor
jp
or
outsb
dec
sub
lcall
bound
imul
mov
xchg
dec
sti
xchg
inc
and
sahf
pop
out
movsl
lds
repz
jmp
sub
inc
mov
adcb
sahf
icebp
aas
fst
cwtl
xchg
ljmp
sahf
addr16
ret
divb
sti
cmp
popf
push
mov
into
cltd
fmull
xchg
jno
or
pop
push
icebp
incl
ljmp
dec
and
mov
sub
faddl
lcallw
outsl
popf
mov
inc
cmp
xlat
xorl
inc
or
or
js
int3
pop
add
decl
cvtpi2ps
je
out
xor
icebp
or
iret
subl
stc
dec
xchg
adc
mov
mov
mov
xor
or
stos
insl
loop
jecxz
fcmovu
dec
pusha
push
lret
jg
jbe
dec
adcb
shlb
in
fisubrl
mov
icebp
cmp
mov
sub
fwait
lock
icebp
in
clc
mov
lret
sub
movsl
fisttps
shll
rcll
adc
mov
pushf
sub
out
aam
pushl
push
jnp
mov
call
movsb
push
add
mov
push
pop
inc
outsb
xchg
in
xchg
jge
test
sbb
jmp
nop
and
std
decl
sbb
push
or
xor
std
int
sbb
decl
add
mov
iret
loopne
sbb
jle
fimuls
cmp
pop
pop
mov
out
cmp
incl
inc
aad
sbb
cmc
gs
cmp
pop
pushf
lcall
loope
mov
mov
mov
or
or
xchg
push
jnp
jg
incl
push
jno
push
push
lods
sahf
push
push
lods
rol
jcxz
adc
cs
lcall
ljmp
push
ja
push
lcall
stc
pushf
add
clc
loope
outsl
sbb
mov
outsl
jl
mov
dec
or
cmp
inc
jl
lock
jg
lcall
repnz
ret
cmp
dec
mov
pop
mov
test
fisttpl
sbb
lods
dec
sbb
sub
inc
or
or
pushf
aas
rorl
adc
jne
data16
or
jle
lcall
test
sub
repnz
arpl
adc
sub
pop
fwait
mov
arpl
aaa
pushl
incl
movsl
inc
shll
in
add
jmp
and
scas
dec
adcb
sar
dec
roll
mov
adc
js
cltd
push
adc
das
xchg
lret
cmp
lods
inc
mov
cld
dec
cmp
add
push
pop
out
clc
movsl
inc
dec
scas
scas
loope
lcall
call
add
ret
and
idiv
call
pop
xchg
pushl
xchg
adc
neg
jg
inc
cld
and
mov
sub
push
push
ret
sub
push
lods
outsl
ljmp
cmp
notb
and
sbb
call
pop
clc
pop
outsl
mov
dec
or
sbb
adc
mov
mov
outsb
sub
iret
in
mov
outsl
pop
mov
fsubs
inc
push
cmc
das
or
mov
clc
notb
stos
jo
dec
outsb
int3
hlt
scas
or
ljmp
pusha
jae
mov
add
jecxz
mov
mov
dec
outsl
xor
cld
mov
jmp
pop
dec
adc
mov
jns
out
dec
mov
into
test
ds
lcall
in
mov
outsl
pop
push
lods
lea
xor
or
out
jnp
incl
mov
into
aas
jg
jmp
inc
shl
into
sbb
push
jge
rorl
jne
out
mov
xchg
cmp
mov
push
out
lahf
test
sub
dec
js
bound
sub
or
ljmp
and
mov
hlt
cmpsb
xchg
std
mov
sbb
dec
outsl
and
insl
and
xor
outsl
icebp
in
daa
fst
mov
frstor
in
ror
xor
outsb
or
jo
lods
test
test
xor
lods
arpl
push
fidivrs
insl
add
pop
sub
daa
call
ret
outsl
out
sbb
cli
cmp
mov
adc
xor
mov
mov
das
dec
adc
int3
out
jge
mov
pushf
jl
sub
mov
lret
call
lods
aad
enter
mov
jge
sbb
mov
arpl
xchg
jmp
jb
out
ljmp
mov
mov
aas
outsb
test
jge
mov
repz
mov
cld
jge
jae
cmp
popl
mov
ss
dec
in
mov
leave
rorl
push
mov
cltd
pop
arpl
movsl
fldenv
mov
sub
mov
sti
xchg
outsl
push
or
xchg
inc
mov
mov
jge
imul
das
std
popf
mov
inc
lock
mov
sahf
cli
dec
fwait
ljmp
push
insb
mov
jecxz
mov
lea
das
neg
sub
in
hlt
jp
movsl
jle
dec
lahf
xchg
shl
mov
pop
es
call
push
fidivrs
icebp
dec
push
dec
daa
aad
jnp
sarl
pop
out
sahf
ljmp
jnp
adc
pop
or
mov
lods
loopne
iret
dec
push
xchg
lods
inc
lods
lahf
xor
outsl
lock
xchg
fistpl
and
sarb
adc
dec
js
pushl
clc
ljmp
imul
fmull
test
std
adc
push
int
negb
jg
ds
addr16
test
dec
lret
lods
andb
into
pop
push
pop
std
call
jge
std
roll
lods
cli
call
pop
movsb
pop
lock
pushl
add
xor
add
in
push
mov
js
sahf
cwtl
mov
js
sar
outsl
push
jg
cli
movsb
pop
adcl
int3
cs
repz
clc
loopne
shl
incl
jne
std
dec
lods
cmp
pop
shr
push
outsb
xchg
or
jg
leave
jns
fiadds
or
cmc
push
test
lcall
mov
push
testl
mov
test
inc
aad
int
cli
and
pushl
hlt
adc
enter
mov
aaa
lahf
sub
hlt
dec
mov
insb
stc
jbe
xor
cmp
jmp
lea
cmpsl
mov
mov
adcl
les
adc
jg
push
test
xchg
mov
pop
mov
arpl
jns
aaa
or
sahf
inc
dec
jmp
ret
lds
aas
sub
mov
xor
adc
inc
scas
fisttpll
or
sub
stc
jnp
ret
jg
hlt
xor
loope
dec
and
sar
mov
xchg
pop
adc
fucomip
decl
mov
pop
mov
je
xor
insl
mov
movsl
gs
pushf
icebp
mov
lods
lods
lods
sub
cmpsl
sbb
sub
push
outsl
pop
and
sahf
and
sbb
decl
hlt
and
pop
xchg
pop
stos
test
sbb
decl
lea
lea
xchg
lret
sbb
fdivl
inc
jp
push
mov
mov
cmpsb
std
call
ljmp
jmp
jno
cwtl
dec
dec
stos
xchg
adc
dec
mov
incl
outsl
adc
addr16
sub
cmp
adcl
inc
jnp
inc
mov
iret
jo
ret
mov
push
jg
pushf
lods
mov
cmc
inc
ljmp
dec
sbb
mov
push
iret
pop
xor
pop
bound
ljmp
dec
jne
movsw
xor
adc
inc
inc
notb
mov
and
pop
shlb
push
mov
imul
mov
stos
mov
es
push
and
bound
xor
aaa
pop
cli
fwait
pushf
push
ja
mov
sbb
ljmp
add
rorl
cmpsl
stos
jg
clc
mov
push
dec
std
lods
add
cmpsl
xchg
push
add
ljmp
insb
gs
sub
leave
into
sbb
jbe
xchg
xor
das
inc
decl
repz
pop
inc
test
push
test
push
decl
pushf
jns
divb
imul
adc
jbe
push
push
pop
jo
gs
lcall
call
adc
pop
les
ret
js
dec
lods
aaa
push
jle
mov
mov
dec
dec
addr16
fwait
loopne
adc
inc
mov
xlat
fcoms
pop
push
mov
jg
cltd
or
dec
pop
das
add
mov
push
cltd
scas
or
call
jnp
cmpsl
aas
jl
xor
jmp
stc
mov
nop
xacquire
decl
fs
xlat
mov
lea
into
icebp
out
cld
je
jg
ljmp
push
xlat
movsl
rorl
pop
mov
ljmp
push
add
shll
mov
paddsb
inc
inc
rclb
jne
jge
push
cvttps2pi
ret
addr16
into
push
shlb
jp
fwait
or
jg
subb
hlt
pop
mov
lcall
out
mov
fidivl
xchg
ss
call
lcall
push
decl
mov
sbb
clc
fwait
dec
mov
cmp
cli
mov
cld
and
mov
ficoml
xchg
jne
hlt
mov
jle
ja
jg
mov
cmp
sahf
popa
fdivp
imulb
cmpsb
es
clc
jg
pushl
aaa
stc
das
mov
test
addr16
push
cmp
arpl
mov
mov
cwtl
push
test
pop
dec
jge
icebp
inc
lea
jmp
ljmp
jp
hlt
arpl
nop
jecxz
inc
in
lods
jne
add
adc
ss
jnp
fs
inc
outsl
jmp
movsl
setno
pushf
pop
ljmp
hlt
shl
push
fnstcw
sbb
mov
hlt
stc
ret
into
lods
mov
mov
mov
iret
clc
pusha
push
std
lret
bound
lods
xchg
icebp
jg
loopne
call
pop
and
and
push
xor
das
or
pushf
add
call
mov
jb
imul
imul
ljmp
pop
pop
push
push
test
in
mov
mov
ljmp
lea
ss
das
in
test
ds
jp
dec
add
lock
pop
xor
call
insb
and
jle
cli
cld
mov
dec
sbb
lock
push
aam
clc
sub
pop
out
and
js
mov
scas
sbb
mov
push
std
enter
mov
outsl
sub
adc
call
aam
std
mov
dec
ja
ficoml
sub
push
outsl
idiv
incl
push
in
push
stos
xor
sub
cmp
inc
insb
es
stc
mov
cld
cli
rorb
push
rcrl
aam
fistpll
push
call
xor
jnp
sti
sahf
pop
aas
cltd
pushf
cs
imul
decl
jae
popa
out
int3
imul
mov
pushl
clc
jge
sub
mov
pushf
sbbl
outsl
mov
lods
push
aaa
add
fucomip
or
push
aaa
cmp
dec
inc
inc
mov
test
inc
inc
push
xlat
sahf
or
ret
idiv
das
lock
fidivrl
jbe
xor
sahf
cmpl
std
mov
call
lock
or
ljmp
xchg
jle
gs
adc
cld
dec
xchg
ja
push
mov
mov
loopne
arpl
fs
ljmp
js
add
cmp
jg
icebp
lea
xor
leave
xchg
clc
xlat
outsl
jne
pop
orb
xchg
lds
icebp
pop
test
cmpsb
mov
test
ds
incl
cmpl
mulb
jns
ret
mov
decl
xchg
add
fwait
pop
imul
xchg
jp
inc
push
xor
sbb
mov
push
inc
clc
xchg
or
decl
addl
sub
push
lret
fs
push
test
xchg
decb
call
inc
repz
xor
cmp
call
sbb
out
xorb
popf
out
or
in
dec
loope
shl
mov
idivl
dec
cmp
push
stos
mov
cli
sbb
push
or
mov
nop
outsl
adcl
push
pop
sbb
push
lods
push
inc
dec
pop
and
cld
in
lea
xor
ljmp
push
call
out
pop
rclb
mov
mov
inc
aas
ds
pop
mov
xchg
data16
jg
clc
orl
mov
mov
push
sbbl
jmp
out
pop
xor
pushl
cld
cmp
jg
sub
pop
aam
fidivs
push
sti
mov
jle
fwait
das
add
pop
ljmp
or
cmpsl
pop
enter
pop
cmpsb
jp,pt
jns
andl
mov
adc
pop
dec
mov
pop
rcrb
sbb
clc
sti
mov
push
lret
add
mov
push
insb
fiaddl
jns
mov
sbb
jle
cmp
inc
imul
mulb
pop
test
jmp
cmp
fldenv
mov
sbb
pushl
test
nop
xor
inc
dec
and
out
fsts
js
pop
lods
add
loop
push
lds
add
add
sti
mov
call
negl
or
mov
pop
cmp
sahf
mov
lcall
xlat
pop
scas
mov
stc
test
jge
mov
repnz
dec
loopne
hlt
call
mov
add
add
mov
lock
sahf
jne
inc
mov
mov
xchg
pop
in
test
jge
jg
cld
shl
neg
pop
pop
xor
lcall
cmc
out
incb
ds
xchg
mov
out
aas
in
xlat
jge
xchg
jle
xchg
xchg
cli
jge
dec
stc
mov
mov
aad
jmp
cmp
pop
mov
lcall
jl
mov
int
xorl
pop
cmp
les
gs
call
jo
ljmp
mov
inc
push
and
mov
cld
add
dec
popf
mov
js
stos
das
inc
lret
stc
fstl
pushf
dec
dec
xchg
lahf
mov
xor
push
js
and
cmp
fsubrs
pop
insb
lret
shl
mov
sarl
stc
adc
mov
and
xchg
push
mov
or
movsl
jecxz
test
outsl
rorb
pop
mov
adc
ljmp
call
sub
rorl
add
pushf
jge
cli
jmp
xor
fwait
mov
dec
inc
adc
outsb
jg
cmp
xor
mov
mov
shlb
repnz
pop
ljmp
fsubrp
push
cmp
adc
dec
pop
and
or
das
push
push
lret
out
add
cmp
mov
and
cmp
popf
or
popa
mov
mov
jecxz
call
pop
inc
cltd
mov
cwtl
cs
ljmp
sub
cmp
mov
push
pop
add
push
push
or
sbbl
sbb
pushl
popl
push
gs
rclb
xor
aad
push
pushl
in
push
and
aad
decl
pop
pop
lret
pop
gs
jb
mov
push
push
test
push
outsb
test
.byte
cli
pop
fmuls
mov
ret
nop
mov
icebp
insb
ljmp
call
movl
pop
sbb
fstpl
and
add
sub
les
ret
jne
add
jmp
jl
imul
add
push
nopl
popa
cld
push
pop
ret
pop
pop
fcmovnu
jle
in
sub
or
push
xor
mov
rorb
lcall
mov
outsl
neg
fistl
xor
call
or
mov
shlb
test
push
shlb
in
in
in
jg
lea
push
call
lea
dec
xor
call
sub
insb
out
divl
mov
pop
inc
push
imul
push
ss
xor
in
pop
sbb
jge
adc
sub
fstp
adc
pop
pop
push
call
add
ss
add
push
sbb
bound
nop
fmulp
push
call
dec
cmp
test
outsb
cmp
fwait
mov
pop
sbb
push
mov
nop
inc
aam
cmp
ret
fistl
sbb
mov
mov
das
sbb
sub
leave
mov
mov
xlat
xor
test
cmp
mov
ss
outsb
test
pop
dec
sub
pop
out
pop
push
and
je
mov
adc
or
sub
scas
lds
add
mov
negl
xor
push
cmpb
rorw
sbb
data16
push
pop
mov
test
jo
in
jo
mov
and
in
mov
incl
clc
pushl
and
je
pop
jnp
imul
or
mov
push
push
fs
mov
sarl
push
push
or
sbb
and
mov
mov
nop
add
add
push
ret
scas
push
pop
mov
add
adc
popa
push
push
xor
mov
sti
popa
jnp
push
push
mov
imul
push
jbe
push
sbb
cmp
sbb
mov
adc
jle
sbb
jbe
cmc
add
sarb
add
test
sbb
incl
cmp
jne
lea
mov
je
rep
pop
sti
xor
mov
mov
push
inc
pushf
je
mov
adc
dec
enter
ret
add
adc
leave
inc
jb
adc
pop
and
leave
add
sbb
ret
in
jge
dec
fcmovnbe
push
sbb
sbb
out
arpl
dec
lea
or
jmp
push
pop
jg
jp
fcmovnu
mov
mov
or
xchg
sub
pop
jno
adc
sbb
mov
and
mov
add
and
insb
or
mov
sbb
sbb
add
ret
xor
xor
cwtl
jle
jge
pop
notl
add
mov
fcomi
cmpsl
je
daa
adc
jne
lcall
fucomip
pop
lea
shl
sub
lea
sub
daa
sub
and
test
int
xchg
cmp
jo
imul
inc
push
call
imul
jl
xlat
iret
enter
jae
jl
dec
cmp
mov
add
push
push
inc
or
or
mov
mov
data16
nop
add
mov
mov
mov
sarl
std
add
dec
jne
sub
movl
fsubs
mov
inc
ret
je
into
shl
jo
or
test
pop
xchg
mov
dec
fwait
insb
and
lret
scas
sti
popf
mov
and
cltd
and
push
or
ret
pusha
dec
pusha
inc
lret
mov
dec
push
je
testl
sbb
inc
sub
incb
js
add
pop
daa
cmp
jne
mov
inc
mov
mov
scas
jnp
add
dec
jne
sub
mov
enter
add
cmp
jne
push
in
pop
sbb
mov
mov
and
sbb
leave
cmc
inc
push
insl
mov
dec
mov
ret
or
or
addr16
xlat
push
cmpsb
push
jmp
idivl
testl
mov
add
mov
or
cmp
jl
imul
sbbl
inc
cmp
lea
inc
clc
shlb
add
insb
xchg
xchg
pop
cmp
mov
popa
jl
fcom
sbb
sbb
add
push
push
mov
nop
or
add
test
push
push
and
jne
xchg
and
jbe
jne
cmpl
imul
test
push
mov
roll
adc
push
add
push
jge
or
daa
mov
xchg
outsb
ss
mov
mov
das
pusha
fucomp
and
stos
add
cmp
xor
mov
cmpsb
ret
sbb
jmp
rorl
jno
or
xor
push
push
enterw
sti
push
cmp
push
lds
xor
in
add
xor
and
scas
mov
add
fidivl
js
pushf
or
inc
push
movsb
imul
or
sbb
sbb
add
sbb
add
sbb
pop
push
pushl
pusha
int3
into
mov
ret
push
in
jle
pusha
jl
or
inc
test
push
enter
and
push
hlt
pop
mov
int
mov
imul
sub
add
adc
ret
lfs
and
fwait
loope
and
mov
inc
sahf
and
and
hlt
lock
inc
inc
inc
in
call
inc
inc
aam
inc
inc
inc
inc
int3
enter
inc
inc
inc
jo
js
fwait
jl
inc
addb
repnz
and
xor
xor
xor
jns
xor
les
or
xor
mov
ss
mov
push
or
mov
hlt
lcall
fcomps
rcrb
ret
mull
mov
add
add
fwait
or
sub
fildll
jae
cmp
push
jp
loope
or
ret
push
mov
add
outsb
mov
and
out
test
mov
fstps
outsl
jo
gs
push
xchg
and
repz
sbb
sahf
cli
or
sub
dec
std
sbb
mov
cmp
sbb
loopne
adc
fistps
push
add
mulb
inc
aaa
ficoml
fldl
push
add
loopne
int
mov
mov
and
cmp
xor
mov
sti
and
inc
or
add
or
mov
add
jbe
aam
dec
movsb
or
lods
outsb
jl
inc
rorb
movzwl
jmp
sub
fsubrs
jmp
push
pop
push
push
push
das
adc
imull
les
xchg
cwtl
out
imul
mov
imul
test
pop
scas
mov
lcall
dec
int3
xor
lock
xor
push
add
sub
and
jbe
mov
add
sbb
add
cmp
sub
add
add
inc
xchg
ret
cwtl
sub
shrl
adc
nop
inc
out
cmc
pop
mov
fs
neg
jle
or
xor
mov
pop
ret
outsl
or
add
stos
push
test
imul
adc
inc
loope
or
xor
sbb
add
sbb
adc
sbb
add
repnz
out
jmp
fisubrl
aam
lcall
mov
int
imul
rorl
dec
shll
push
rcrl
cmp
incl
int
or
sbb
push
push
dec
test
nop
jg
addl
jg
adc
shl
data16
incl
and
or
pop
out
jno
jo
je
popa
jns
gs
or
fs
std
jbe
outsl
outsb
fs
xor
xor
and
and
jg
gs
and
daa
inc
dec
dec
push
push
inc
inc
add
add
jbe
pop
arpl
mov
add
dec
add
push
ucomiss
out
mov
fs
insb
pop
pop
divl
addr16
insl
and
out
add
insb
gs
outsb
leavew
dec
dec
inc
dec
push
push
pop
jae
jae
gs
out
repz
insl
xor
xor
and
jbe
inc
dec
sbb
jbe
sbb
ret
test
adc
dec
add
pushl
cs
outsl
jne
arpl
cmp
xor
xor
test
aaa
das
xor
outsl
jg
adc
ja
add
cmp
aas
stos
test
dec
pop
nop
add
add
addb
mov
add
adc
jg
push
adc
mov
scas
call
push
popa
mov
sbb
dec
add
add
push
leave
dec
aaa
loopne
push
and
add
inc
xor
or
fcmovnu
xor
mov
add
xchg
pop
pop
and
adc
in
add
sub
pop
push
daa
roll
xor
inc
loope
das
cmp
jns
pop
push
popa
pop
mov
pop
in
pop
je,pn
js
pop
nop
inc
pop
jo
nop
add
loopne
jb
popa
ret
lret
or
and
jnp
enter
cs
mov
daa
aaa
fcomps
push
and
gs
rolb
daa
mov
shlb
aaa
jbe
xor
lock
nop
rol
pusha
loop
bound
push
daa
mov
out
jp
dec
pushf
jae
loopne
insb
in
lock
imul
imul
mov
test
in
xor
or
mulb
sahf
xlat
popf
ret
jecxz
pop
add
xor
inc
daa
xor
sbb
imul
data16
imul
imul
dec
shll
ss
push
or
xor
negb
xor
dec
shll
adcb
mov
fdivr
sub
mov
add
pop
mov
testb
div
pop
adc
ud1
lret
push
adc
lcall
jae
data16
jno
movsl
or
sbb
mov
push
push
adc
add
mov
daa
mov
mov
adc
cmp
sub
arpl
rclb
mov
mov
dec
out
and
mov
addr16
mov
cmp
jnp
push
and
jne
inc
sbb
in
and
lods
pop
jne
push
daa
sahf
adc
nop
pop
daa
mov
pop
rcrl
fwait
add
sahf
xchg
xchg
push
xor
shll
inc
ss
shll
iret
add
add
push
popa
je
lret
sahf
add
lcall
rcl
imul
lahf
dec
add
dec
cmpsb
imul
imul
shlb
sahf
ljmp
jl
cld
call
sarl
cltd
push
adc
cmpsb
jmp
pop
or
push
jo
xor
push
pop
dec
xlat
xor
xlat
aaa
add
and
stos
out
pop
xorl
pop
lcall
mov
pushw
add
int
adc
pusha
xor
xor
std
xchg
aaa
xor
or
add
sbb
pop
imul
loopne
jmp
inc
pop
into
enter
mov
mov
movsb
jmp
jb
cwtl
xchg
add
xorb
je
lcall
pop
push
push
push
inc
ds
xchg
fldt
mov
outsb
mov
fstpt
xor
jmp
nop
data16
add
cmp
in
mov
jnp
adc
push
testb
jg
jge
mov
adc
mov
xchg
sbb
xchg
jl
pop
and
shl
int3
and
and
aas
or
xor
pop
cltd
outsl
mov
adc
add
pop
lcall
cwtl
or
mov
xchg
jae
insl
jae
fcoml
data16
gs
add
dec
mov
sbb
lahf
aas
dec
push
daa
fcoms
sbb
jle
push
sub
dec
dec
repz
and
leave
dec
add
inc
inc
outsb
lahf
in
outsl
aad
insl
mov
insb
jae
dec
inc
gs
cs
mov
fs
mov
pop
pop
stos
dec
js
in
push
je
inc
jo
push
add
int
lods
or
inc
mov
or
or
pusha
lret
mov
sbb
dec
adc
fcomp
adc
push
inc
push
dec
inc
sgdtl
imul
xorl
data16
pop
fdivr
fdivrl
push
imul
imul
shlb
popa
jbe
push
outsl
ss
pop
add
fs
lods
fsubrs
pusha
add
mov
mov
divb
jne
push
loopne
gs
and
insl
in
inc
sbb
add
or
imul
outsl
in
dec
outsb
je
sbb
arpl
pop
mov
mov
dec
je
mov
jno
negb
out
gs
icebp
cmpsl
daa
pop
je
jo
imul
cwtl
push
daa
jb
pop
mov
inc
push
inc
inc
imul
cmc
dec
popa
pop
insb
outsl
adc
cmp
int
jl
inc
pop
add
scas
pop
cs
clc
dec
inc
inc
xor
inc
dec
xlat
mov
cmp
outsb
outsl
sub
mov
jae
dec
cmp
pop
jo
shl
sub
or
out
ja
jae
outsb
inc
push
adc
call
add
add
outsl
imul
js
sti
ss
add
nop
jb
push
push
inc
push
insb
mov
pop
or
js
je
sbb
jns
test
pop
movsb
insl
add
jecxz
imul
jns
aas
aas
xor
and
adc
mov
push
inc
inc
inc
pop
pop
or
adc
stos
add
add
sbb
adc
ss
jl
gs
or
xor
insb
push
gs
mov
fisttpl
inc
sub
sbb
inc
sahf
push
ret
sti
dec
setnp
cwtl
add
arpl
fs
lcall
push
ret
mov
movsl
bound
inc
xchg
add
rcrl
sbb
fidivl
add
jnp
lods
jo
adc
bound
jae
outsl
sbb
das
loopne
adc
xchg
out
mov
sub
adc
arpl
add
rorl
xchg
push
jnp
jnp
stos
cmpsl
jl
or
sbb
mov
cmp
xchg
mov
std
xor
cmp
lret
mov
mov
outsb
and
popa
inc
or
mov
fwait
push
jae
rorl
test
pop
sub
dec
sbb
mov
xor
dec
hlt
popf
shlb
outsl
mov
cmp
adc
and
mov
xlat
sub
bound
push
cmpsl
mov
mov
scas
jo
adc
dec
fdivrs
xchg
push
jge
sbb
push
sbb
and
inc
push
testb
jno
jae
push
popa
inc
inc
inc
test
jle
faddl
jbe
insb
imul
call
add
jns
fs
gs
lds
push
jo
popf
leave
mov
out
xchg
imul
cmp
add
outsb
push
inc
pop
pop
or
xchg
fisubl
fidivl
sub
or
jae
arpl
out
inc
ja
js
pop
in
ret
test
mov
jge
je
xor
aad
add
jo
adc
pop
push
mov
imul
ds
les
mov
dec
test
push
cmpsl
dec
pop
dec
outsl
outsl
imul
cmp
jae
es
int3
std
lods
add
push
popf
in
fs
addr16
jmp
dec
lcall
push
xorl
push
mov
cmpsl
outsb
cmp
adc
cmp
and
inc
cltd
mov
pop
adcl
pop
push
imul
or
pop
imul
inc
cmp
push
dec
inc
fwait
icebp
push
sbb
xor
add
or
sbb
add
inc
insb
or
push
jae
push
mov
sub
pop
imul
sub
fnstenv
into
jo
sub
frstor
imul
mov
sub
je
mov
dec
mov
add
jns
sbb
adc
nop
in
sbb
push
and
jmp
and
popf
insb
adc
inc
inc
push
mov
sahf
aam
push
test
inc
arpl
icebp
ret
int3
jae
adc
push
andb
bound
ja
pop
subps
pusha
or
mov
ja
insb
mov
xlat
mov
inc
inc
push
pusha
add
push
push
int3
add
mov
cmp
mov
or
adc
lsl
imul
or
insb
sbb
jge
adc
sbb
dec
dec
roll
jnp
lret
shrd
pusha
xor
je
jo
xchg
movsb
pop
xchg
xchg
fisttps
lods
jne
test
xor
hlt
and
pushl
add
pop
add
pop
sub
or
or
daa
push
add
add
sub
sbb
mov
adc
sbb
pop
or
ud2
sbb
add
int
fcos
ds
push
pop
sub
or
adc
sbb
add
sti
incl
add
adc
or
push
sbb
push
cmp
or
pop
add
jg
incl
push
sbb
sub
clts
or
or
adc
adc
and
inc
es
test
add
sbb
sahf
push
adc
and
or
or
mov
or
pop
add
add
pop
sti
lret
mov
or
xor
add
mov
sbb
daa
jge
add
daa
mov
jnp
decb
ss
ss
xor
add
mov
out
idiv
ret
dec
adc
or
adc
sbb
sbb
xlat
inc
fdivrs
or
sub
or
sbb
mov
add
dec
add
or
sbb
push
pop
push
jo
sub
xor
sbb
or
adc
pop
movq
outsb
mov
sbb
add
adc
jbe
loope
push
add
and
mov
call
outsb
xor
sbb
push
sbb
or
sbb
or
sub
sub
add
sub
sbb
adc
pop
xchg
add
sub
sbb
pop
jnp
add
or
add
add
sti
or
add
sub
sbb
insb
add
sub
add
mov
adc
cmpsl
es
cmc
add
pop
jns
fistl
sbb
cmp
pop
ret
mov
and
pop
mov
les
add
cmp
fcmovnu
xchg
adc
or
sub
push
comiss
sbb
sbb
sbb
das
idivb
aas
push
add
add
dec
and
add
sub
subl
add
adc
and
or
mov
dec
in
ss
xor
or
fsubl
mov
xor
stos
daa
cmp
jmp
in
jg
push
adc
sub
or
add
or
out
add
pop
sbb
push
fwait
cld
outsl
int
or
add
adc
adc
or
pop
xor
scas
push
add
sub
add
sub
push
or
adc
adc
insl
sti
or
push
push
or
or
pop
or
push
fistps
imul
add
add
mov
pop
adc
sub
xor
jle
call
mov
push
adc
jg
icebp
sbb
adc
sbb
pop
mov
outsb
sbb
movsl
add
or
test
notb
or
add
hlt
mov
mov
int
push
sysret
test
popa
cmp
aaa
scas
out
sbb
add
push
adc
add
mov
xchg
add
add
adc
mov
jmp
jb
add
add
loope
sbb
pop
and
pop
adc
sub
adc
fcmovnu
push
clc
jmp
or
or
pop
jge
push
push
es
shll
and
add
mov
or
xchg
xor
xchg
sbb
sub
or
sbb
divb
adc
or
or
movsb
jg
mov
or
pop
add
pop
sub
decb
addl
or
cmp
sbb
fisubl
dec
icebp
pop
adc
xchg
or
sub
lret
add
mov
jg
dec
and
inc
ss
cmp
pop
or
push
push
and
mov
faddl
push
adc
push
push
pop
push
pop
xor
mov
cmc
adc
add
outsb
in
xchg
or
add
cmp
or
mov
adc
or
push
sbb
mov
push
adcb
ret
sub
and
cmp
aam
adc
add
jb
lock
mov
sub
cld
lods
shr
cmp
push
mov
aaa
sbb
add
mov
add
push
dec
jg
pop
pop
ret
mov
lcall
inc
add
and
pop
call
call
out
aad
pop
bound
inc
push
sti
aas
repnz
rorb
decl
pop
adc
or
adc
cmp
hlt
dec
push
divl
dec
mov
into
cmp
ljmp
inc
fidivs
mov
xor
dec
movsb
xor
iret
lock
mov
clc
mov
js
inc
mov
jl
mov
cmpb
test
outsl
in
cld
inc
mov
nop
push
test
push
incl
sub
sub
and
pop
shll
fs
xchg
lcall
incl
dec
lea
dec
push
add
lods
or
cli
jo
popl
cmp
in
call
mov
jne
push
stos
adc
daa
add
jne
xchg
pop
jbe
fbld
mov
inc
mov
push
dec
repz
push
movsb
xor
ljmp
inc
pop
loopne
cld
adc
xor
jg
pusha
pop
push
repz
sub
call
mov
pop
mov
xchg
and
push
mov
aam
push
sbb
movsb
dec
jnp
fcomps
mov
aam
inc
inc
xor
or
inc
cmpsl
ljmp
int3
scas
cmp
push
cmpsb
push
inc
cmpsl
xor
insb
mov
loopne
arpl
pop
aaa
or
xchg
fmull
push
negl
push
jg
shr
out
nop
mov
pushl
pop
les
jnp
push
xchg
dec
add
jmp
cmp
lock
push
and
sub
inc
cmp
clc
decl
cwtl
inc
jp
out
mov
and
outsb
dec
pop
jne
nop
mov
cwtl
out
jmp
jbe
popf
ljmp
and
cmp
icebp
or
add
sbb
lods
push
pop
fwait
inc
push
ret
cmovle
xor
incl
cmp
xchg
roll
enter
cmpsb
inc
test
shr
outsl
mov
jg
push
adc
insb
out
sahf
sbb
mov
out
push
ss
and
mov
outsl
push
incl
adcb
sbbb
mov
sbb
adc
fmul
add
incl
push
mov
adc
dec
add
mov
jg
jns
mov
lcall
adc
cmp
cmp
dec
xor
popa
call
and
pop
test
or
sbb
fimuls
pop
mov
fsubl
fs
dec
sbb
sub
jmp
leave
xor
xchg
push
jo
lods
cmp
pop
gs
or
adc
js
stos
lods
les
loop
orb
xchg
aam
pop
aaa
loop
lds
incl
decl
sbb
les
and
gs
mov
inc
push
jg
pushl
insb
mov
mov
stc
mov
push
leave
bound
sbb
lea
nop
cmp
movsl
push
mov
pop
cmp
incl
adc
push
js
inc
js
sbb
and
mov
fcoml
das
xchg
icebp
aad
push
push
mov
and
mov
or
ljmp
pop
push
in
je
pop
add
pop
shr
cs
jno
lret
test
jns
ja
add
pusha
mov
decl
sub
mov
inc
lock
das
repz
imul
adc
adc
ret
add
push
mov
lods
mov
dec
mov
loopne
mov
push
and
jmp
dec
mov
lret
jecxz
mov
js
sub
bound
aas
xor
push
subb
cld
jecxz
aaa
pushf
je
xlat
les
adc
lahf
jbe
mov
inc
iret
in
pushl
fisubl
sbb
and
loope
sahf
cmp
push
adc
lcall
dec
inc
ja
mov
sbb
adcb
incl
push
push
hlt
lahf
push
cwtl
mov
push
add
and
mov
stos
push
fwait
xor
cli
call
mov
in
cmp
ret
ds
stos
mov
call
test
push
jne
sbb
lods
fs
inc
mov
aam
mov
sbb
rclb
fnstsw
and
pop
xlat
xor
jns
inc
mov
pop
ja
aas
lock
mov
lcall
ss
into
jae
sbb
sub
and
pusha
cmp
xor
in
push
sub
addl
orb
ficompl
movsb
mov
lcall
push
sub
inc
push
and
push
inc
cltd
idiv
dec
xor
push
scas
loop
daa
popa
lcall
call
cmpl
loopne
mov
aam
dec
add
jg
jmp
xchg
shrl
push
xchg
inc
sub
and
shlb
add
mov
mov
mov
sbbl
sbb
cmpsb
and
ljmp
test
adc
enter
out
loop
insb
push
cld
inc
sbbb
xchg
mov
xchg
gs
pop
inc
inc
sub
js
pop
sub
movsb
shlb
pop
fsubrl
test
lock
jo
into
pop
iret
mov
out
push
lahf
sub
incl
dec
stos
in
pop
imul
jge
cmpl
xchg
ret
inc
mov
aaa
clc
pop
mov
inc
xor
lods
jmp
or
call
decb
inc
or
and
aad
or
scas
out
icebp
adc
mov
push
cmp
test
stos
mov
fstps
inc
dec
dec
cmpsb
pop
outsl
test
fidivs
mul
dec
cmp
dec
insb
mov
mov
aam
add
adc
sub
and
dec
add
rol
pop
cwtl
add
leave
jp
mov
cmp
fldenv
lods
dec
adcl
mov
or
cltd
stos
stos
aam
xor
repnz
mov
ljmp
xor
sub
dec
add
testb
sub
enter
repnz
pusha
pop
out
sub
in
mov
es
pop
call
mov
mov
and
cmpb
aam
fcoms
sub
lods
sub
imul
aad
iret
lock
jmp
mov
pop
pop
mov
xchg
mov
mov
mov
push
dec
repnz
test
sti
pop
ljmp
in
loope
inc
jmp
mov
dec
inc
in
lods
push
stos
pusha
test
mov
dec
fistpl
std
movsb
mov
and
push
lods
int3
in
add
inc
mov
or
and
and
stc
xchg
inc
pop
pop
jle
dec
and
dec
pop
xchg
mov
popf
jno
xchg
ja
popf
xor
adc
and
xchg
stos
xor
icebp
test
xchg
sbbb
xchg
sbb
adc
add
and
ret
dec
es
mov
mov
xor
lods
cwtl
xor
lcall
xchg
mov
push
call
mov
mov
mov
in
jge
clc
call
mov
xchg
test
in
cmpsb
stos
mov
repnz
dec
roll
pushl
jb
inc
addr16
jne
test
cmp
jns
pusha
xchg
cwtl
js
sub
cmp
adc
jg
push
mov
jb
and
add
xchg
mov
decl
cld
pop
in
and
xchg
ja
mov
and
jae
push
xlat
lods
pop
pop
movsl
xchg
pop
ret
push
pusha
push
inc
pop
xchg
inc
lods
and
jl
adc
mov
das
std
jmp
push
ja
subb
push
ja
and
cmpb
in
cwtl
cmp
loop
lcall
cmp
sahf
inc
leave
arpl
add
pop
inc
push
iret
and
push
gs
mov
jl
and
sbb
pop
movsb
scas
jmp
jae
pop
sub
loope
fbld
cltd
fs
mov
test
jno
jg
jmp
ljmp
sub
xchg
mov
mov
inc
int
icebp
sub
call
ds
adc
pop
shll
cld
cmp
dec
lret
mov
movsl
jo
cmpsb
lds
cmp
jecxz
sbbl
aas
xor
add
daa
sub
cmp
aas
adc
sti
dec
and
pushf
jl
push
push
mov
popa
in
out
push
sahf
cmpsl
arpl
push
jb
dec
lods
jne
sub
addr16
mov
test
jecxz
outsl
std
lcall
mov
sub
or
mov
jno
xchg
jg
lods
stos
jbe
lods
mov
iret
fstl
mov
pop
pop
lret
aaa
xchg
fcomps
mov
adc
mov
jmp
mov
loop
inc
mov
xchg
mov
pusha
sbb
adc
incl
jmp
pop
stos
pop
test
enter
mov
and
fcoml
ss
aaa
arpl
mov
into
push
ret
lods
in
and
test
sahf
dec
jg
incl
adc
in
data16
add
leave
enter
dec
out
mov
dec
and
mov
arpl
mov
shrb
push
ret
sub
add
cltd
inc
sbb
xor
rcrl
jmp
or
es
popa
mov
int3
int3
out
pop
push
adc
loop
fiaddl
cli
jmp
loope
jg
jl
sub
or
push
xor
fildll
pop
or
ljmp
cwtl
mov
mov
xor
ljmp
ret
xchg
int3
insb
push
movsl
push
mov
sub
clc
push
sbb
mov
movb
scas
mov
xchg
movb
cmpsl
movsl
adc
add
xchg
sub
cmc
xchg
jb
ljmp
adc
fidivrs
or
mov
cmp
pop
add
mov
or
decl
push
push
outsl
out
sub
je
xlat
dec
and
xor
aad
jae
shll
stos
imul
push
xor
jae
push
fnstsw
pop
insb
sahf
cmp
in
in
mov
test
dec
popf
cmp
mov
xor
inc
sub
ret
das
insl
pop
clc
pushl
xor
or
outsb
ret
iret
ds
inc
ljmp
mov
lock
mov
jnp
sbb
aam
dec
mov
dec
xchg
insl
enter
movl
pop
xor
or
jae
filds
and
clc
lock
and
add
cmpsl
fwait
ror
rcll
aam
sub
sar
ljmp
pop
daa
cwtl
dec
pusha
cli
add
dec
hlt
fwait
mov
popa
je
test
daa
lock
inc
pushf
loop
std
mov
insb
dec
nop
icebp
xchg
sub
push
lret
add
hlt
jo
cmp
cs
sub
jp,pt
std
jg
push
adc
sbb
cli
dec
shlb
push
inc
jecxz
dec
cmpsl
jp
and
adc
cmpsl
push
insb
mov
in
and
push
cli
incl
loop
fnstsw
cmp
jne
je
pusha
fsubs
xchg
mov
hlt
cltd
into
es
outsl
decb
aaa
push
ja
lahf
das
hlt
popf
gs
sbb
and
bound
xchg
cli
lea
push
into
xor
nop
dec
xchg
test
cli
jg
das
cmc
call
inc
sbb
test
adcb
loop
aam
int
call
cmc
sub
add
adc
dec
mov
lret
cli
out
movsl
and
jo
sbb
ret
rorl
cmp
cmpsl
imul
mov
add
mov
lods
pop
adc
jg
bound
jmp
cwtl
add
pop
test
mov
and
call
popa
sub
dec
aam
pop
repz
push
loop
add
push
hlt
jnp
inc
arpl
test
xchg
icebp
decl
fs
cmp
dec
inc
loopne
inc
dec
mov
or
loop
outsl
cld
outsl
je
sbb
fs
sbb
and
push
and
xchg
inc
jle
jb
and
mov
mov
cmp
std
or
imul
orb
lds
std
pop
clc
xor
pop
dec
inc
cmp
ret
mov
add
jae
hlt
outsl
lock
in
and
inc
cld
jle
lock
mov
jg
incl
adc
test
xor
js
mov
pop
mov
mov
inc
out
lods
sti
dec
in
mov
mov
dec
aaa
loopne,pt
mov
push
mov
divps
push
sub
jo
mov
adc
cmpsb
add
sbb
cmpsb
inc
and
adc
andl
mov
dec
std
decl
sbb
jb
cmp
insl
arpl
pop
mov
loopne
das
cmp
inc
decb
fbld
pop
pop
call
daa
lcall
jne
cs
and
imul
dec
sbb
jmp
push
test
and
inc
sub
mov
stos
cmp
cmp
push
jmp
adc
push
sbb
je
jecxz
sub
test
jecxz
outsl
hlt
pushl
jns
lods
and
sub
movsb
mov
xlat
aam
cs
lcall
jno
mov
push
jge
lods
rclb
ljmp
dec
xchg
jb
cli
and
mov
decl
imul
mov
sub
movsb
xor
loop
jns,pn
add
in
adcl
inc
push
mov
lods
nop
dec
pop
in
add
mov
mov
lret
bound
inc
push
mov
xchg
xor
jg
inc
scas
inc
push
int
or
ret
lret
jb
popa
out
js
xchg
sahf
mov
cs
jmp
dec
adc
stc
ret
lods
ljmp
dec
loop
ljmp
and
stos
push
stos
mov
aam
outsl
lock
cmpsl
sbb
aad
add
pop
ret
lea
aaa
push
mov
pop
and
add
dec
std
mov
aad
stos
adc
mov
les
pop
popf
cmpsb
push
mov
lcall
imul
sub
adc
addr16
and
lcall
xor
inc
mov
mov
xchg
and
adc
mov
push
xchg
test
inc
push
sbb
pop
rolb
dec
pop
lds
inc
stos
and
sub
call
dec
neg
incb
xlat
call
xchg
inc
rcll
or
lahf
fstps
shrl
cmpsb
and
fldcw
aam
and
bound
mov
pop
sahf
stc
push
ljmp
jl
adc
add
incl
and
xor
outsl
push
int
stos
ss
xchg
sub
adc
and
pushl
sub
adc
int
and
push
mov
jg
ljmp
cltd
test
xchg
lds
sub
cwtl
jge
pop
sarb
pushl
mov
rclb
ret
xchg
inc
in
push
jns
popf
add
xchg
add
lcall
repz
fildl
mulb
repz
adc
pop
test
jb
and
outsl
cmc
call
jle
pop
lds
jnp
xchg
pop
cltd
mov
jmp
xchg
lret
jnp
lret
jmp
mov
test
sbb
adc
pop
mov
or
lcall
inc
lret
sub
push
dec
ljmp
stos
iret
sbb
pusha
pop
add
sub
pop
adc
test
ljmp
cld
pop
lea
pop
pop
mov
ror
sub
aad
fsubrp
jg
jg
ljmp
cwtl
pop
orb
stc
xlat
lcall
lods
cmp
ret
sbb
jle
in
xchg
arpl
std
cld
outsb
or
insl
xor
ret
xchg
ljmp
stc
push
dec
inc
pop
in
adc
notb
adc
loopne
icebp
mov
in
ljmp
mov
mov
aaa
cmp
lret
es
mov
adc
jg
or
or
decl
inc
dec
inc
scas
mov
cmp
pop
sbb
xchg
dec
cmp
jecxz
pop
cmpsb
push
rcll
fucom
xchg
clc
dec
push
cmp
popf
sbbb
imul
xor
add
jae
push
inc
inc
int3
in
outsb
mov
clc
mov
sbb
pop
inc
sbb
mov
mov
jle
mov
mov
icebp
sar
shll
xchg
std
sub
fwait
ljmp
mov
xchg
mov
data16
mov
punpcklwd
ljmp
je
fwait
sub
enter
sub
repnz
sbb
add
pushl
sbb
xor
xchg
loope
fdivrs
lds
push
jne
mov
add
mov
sub
inc
insl
inc
inc
push
testb
sbb
popa
jecxz
push
hlt
andb
popa
adc
je
xor
sbb
mov
lea
popf
push
xchg
mov
sbb
and
xchg
adc
cmc
push
sub
ljmp
cld
insl
mov
stos
rsm
rorl
jmp
cmp
adc
aam
dec
std
push
dec
enter
pop
mov
inc
repz
adc
and
pop
jb
pop
call
js
leave
adc
jge
or
in
xorb
dec
jg
and
out
and
fstpl
lock
push
jg
inc
jae
data16
inc
mov
test
addr16
cmp
lods
ljmp
sahf
je
icebp
das
mov
fmul
add
push
push
fdivrs
fsubl
ss
cmp
push
stos
enter
mov
or
mov
jmp
adc
cltd
clc
mov
xchg
std
pusha
pop
push
fadd
loope
imul
and
movsb
sbb
ljmp
push
pop
lock
lahf
call
push
hlt
inc
scas
and
lcall
test
mov
and
push
adc
ja
movsb
mov
pop
sub
icebp
loopne
pop
fisubl
inc
sbb
sub
lock
notb
movsl
in
leave
pop
pop
lea
mov
push
scas
push
pop
mov
pop
in
dec
mov
cli
ljmp
jl
jne
notl
and
jmp
je
xchg
lret
sbb
inc
leave
jg
les
loope
cwtl
and
sbb
mov
push
jle
in
lods
sub
add
jg
jnp
dec
mov
lret
xorl
jecxz
push
loop
adc
incl
and
adcb
push
ret
push
aam
call
jmp
ja
pushl
mov
sbb
push
loop
pop
pop
sub
int3
enter
dec
andb
int3
call
mov
mov
fmull
repz
mov
ja
cltd
sbb
add
dec
sbb
hlt
incl
jg
gs
lods
fs
in
mov
or
ljmp
lret
sub
mov
xor
adc
fisubrs
push
int
incl
repnz
lret
clc
ljmp
mov
sub
outsl
ljmp
sbb
sub
push
lock
xchg
int3
sub
jg
divb
dec
cmp
adc
js
andb
or
lods
imul
fs
inc
aad
cmpsl
std
cltd
jbe
movsb
icebp
incl
inc
dec
push
mov
add
lret
jge
add
clc
add
add
xor
sbb
ljmp
push
add
mov
ret
mov
shr
ds
add
jle
sar
dec
lds
xchg
cmp
std
sub
int
je
loope
sub
out
lcall
sub
ljmp
int
sub
xor
mov
decl
push
popf
outsl
out
test
int
fimull
call
adc
push
sub
sti
idiv
mov
jl
bound
xor
push
adc
and
cmpb
mov
push
incl
daa
mov
inc
xor
lahf
inc
push
mov
addl
push
lds
incl
dec
adc
test
adc
test
adc
test
test
call
fistpl
adc
test
fimull
or
incl
cltd
xchg
inc
leave
lahf
ja
das
je
push
rorb
stos
call
jg
lods
popa
push
add
scas
mov
mov
cmp
mov
mov
shl
decl
sub
pop
jnp
xchg
je
mov
or
add
andl
pop
cmpsl
mov
fldenv
cld
mov
gs
push
repnz
stos
dec
mov
mov
jg
loop
mov
in
or
out
adc
push
movsl
call
cmc
push
and
mov
and
dec
pushf
sub
pop
cli
outsl
std
cmp
ret
or
or
push
xchg
test
mov
pop
inc
loop
add
incl
mov
add
stos
mov
aaa
incl
xchg
and
mov
xchg
and
call
pop
xchg
dec
pop
xlat
jae
add
xlat
jnp
or
aaa
decl
pop
ror
pusha
scas
push
inc
and
sub
pop
popf
sbb
jne
mov
fbstp
fs
cmp
inc
add
int3
mov
mov
add
das
flds
clc
fs
loope
adc
adc
lret
sbb
mov
pop
dec
xlat
sarl
adc
lret
xchg
stos
jp
ret
or
rcr
sbb
call
mov
setne
jmp
call
jbe
inc
mov
test
popf
mulb
inc
pop
test
popa
jns
lcall
mov
icebp
inc
add
and
scas
jmp
lret
aas
lock
sahf
or
ljmp
stc
cmc
mov
push
lods
mov
push
scas
stos
inc
fnstsw
fstpt
incl
sbb
inc
push
fnsave
repnz
or
enter
jg
fucomip
call
push
xchg
outsl
lods
lock
jno
add
out
mov
inc
in
xor
loop
incl
and
jp
mov
dec
mov
or
and
xlat
adcb
lcall
adc
sbb
out
fs
cmpl
incl
negb
mov
xchg
pop
jge
lcall
aas
jle
adc
jnp
jb
mov
mov
mov
sbb
movsl
outsl
push
rcl
sbb
repz
movsl
or
lcall
stos
mov
outsl
mov
lret
and
push
cmp
hlt
pcmpeqb
mov
push
jno
adc
subl
stos
xchg
daa
push
inc
pop
lahf
jns
inc
leave
inc
ljmp
pop
pop
imulb
xchg
push
outsl
push
mov
fldt
ljmp
mov
push
jmp
pusha
sbb
xchg
jbe
cmpsb
scas
bound
xchg
sbb
and
cli
stos
ljmp
cmc
inc
or
mov
jl
ds
fucomip
jns
jle
mov
mov
inc
mov
push
daa
xchg
jne
pop
out
scas
dec
ret
cmc
pushl
faddl
lret
mov
mov
adc
rcll
mov
idivl
imul
ja
imulb
sub
cld
jg
pop
mov
mov
or
mov
lds
aaa
cmp
call
lock
push
stos
inc
adc
xlat
jle
fucomip
ljmp
into
push
pop
popa
popf
or
sub
inc
push
adc
add
pushl
or
icebp
and
mov
adc
clc
and
popf
add
xor
loop
lcall
pushl
cld
and
lds
sbb
mov
sbb
int3
cmc
inc
cmp
adc
lock
call
jo
mov
mov
jle
xchg
dec
adc
call
ljmp
mov
cmp
inc
or
lock
pop
daa
dec
sbb
push
out
fcmovne
js
push
clc
fs
dec
call
jmp
mov
stos
mov
sarl
jg
fmulp
or
insl
loopne
incl
add
sub
xchg
aam
into
xor
push
adc
mov
mov
and
xchg
push
push
jmp
xor
xor
cli
icebp
xor
adc
sub
jns
and
push
mov
lret
decl
cld
adc
xchg
shld
rcrb
pop
jp
jle
rcrb
notb
aad
push
xchg
jns
mov
lcall
std
mov
sbbb
jmp
push
cmpb
test
mov
mov
sbb
mov
inc
mov
ljmp
or
lahf
lret
sub
push
pop
inc
enter
dec
cmp
call
xlat
xchg
mov
test
add
in
jnp
mov
das
xchg
mov
mov
call
mov
lock
mov
call
xchg
ljmp
xor
xor
cmp
inc
jnp
out
push
cmpsl
pop
clc
decl
xor
xchg
inc
mov
daa
insb
jnp
jge
into
mov
pop
lret
dec
fists
loopne
cmp
jge
sub
jno
adc
insl
mov
mov
movsl
decl
inc
xchg
cmp
sub
sbb
pop
gs
lds
lods
jbe
adc
pushl
leave
mov
mov
out
jp
daa
mov
or
push
or
pop
std
xchg
sahf
mov
stos
movsb
ret
or
sbb
incl
subb
iret
mov
cmp
test
jg
dec
inc
lock
std
loope
das
ficomps
and
sub
or
incl
sbb
fwait
push
lret
lods
lea
dec
jg
or
and
sbb
pop
call
xor
sub
nop
dec
cmp
pushf
cmp
arpl
fcmovnu
mov
sbb
repz
mov
testl
outsl
cmc
push
incl
stos
pop
xlat
pop
cmpb
inc
mov
adc
jmp
jg
outsl
lock
lret
das
fdiv
mov
jbe
mov
lock
push
adc
icebp
inc
cmp
stc
ljmp
sub
add
mov
cmp
nop
add
das
stos
xchg
addr16
fcoms
mov
pop
pop
bound
mov
fidivl
push
jecxz
call
dec
popa
rclb
push
hlt
push
sub
pop
and
popf
adc
lds
adc
or
cltd
jp
mov
testb
push
pusha
or
outsl
lods
mov
push
mov
fiadds
or
or
adc
test
adc
xchg
jnp
xor
hlt
lcall
andl
cltd
fsubp
test
jo
decl
inc
and
add
outsb
adc
shl
add
cs
push
lret
ljmp
in
jl
repnz
mull
dec
sub
je
adc
push
adc
pop
loop
daa
or
repnz
rolb
lds
sub
pop
sbb
data16
out
push
mov
imul
popa
decb
push
clc
stos
mov
mov
test
enter
cltd
xor
incl
lods
aaa
nop
mov
clc
mov
loopne
adc
outsl
jg
lcall
das
and
iret
and
ret
clc
addr16
pop
xor
in
in
fisttpl
enter
call
shlb
stos
fistpll
dec
mov
mov
inc
or
jg
sbb
lret
xor
push
adc
push
mov
add
inc
das
icebp
call
fdiv
cmpsb
popf
pop
imul
cmpsl
test
jmp
adc
fildl
adc
sahf
mov
stos
dec
mov
dec
sbb
cltd
popf
shld
decl
push
push
jmp
popf
daa
stos
dec
fs
jmp
adc
mov
inc
jmp
decl
in
sub
scas
rcrl
xor
pop
js
push
out
dec
dec
add
mov
add
xchg
sub
mov
inc
jmp
jne
cmpsl
adc
dec
sub
stos
jle
sbb
add
lds
cli
add
add
ret
mov
add
decl
std
out
cmpl
mov
mov
fildl
imul
mov
popf
and
andb
adc
mov
fsubs
adc
lods
dec
or
jle
std
dec
pop
xor
test
dec
mov
cs
shlb
mov
sub
or
jmp
sbb
jmp
xlat
cmc
arpl
adc
jle
mulb
std
ljmp
dec
fldcw
push
test
shll
shlb
push
pushf
cwtl
xchg
mov
ljmp
jecxz
lds
pop
pop
sub
orl
jmp
sbb
incl
jmp
pop
sub
adc
xchg
insb
xchg
mov
lock
push
and
stos
jo
mov
icebp
int
test
decl
insb
xchg
sbb
aad
pop
iret
in
jecxz
arpl
sub
cmp
lock
cld
inc
add
jg
rclb
pop
mov
or
mov
sub
int
add
aad
std
lcall
gs
add
pop
stos
and
dec
push
jb
jg
and
cld
push
mov
and
fmuls
mov
incl
aad
adc
loopne
lods
cmp
lret
pop
mov
sub
push
adc
hlt
cmc
outsl
mov
rorl
popf
cld
fists
sub
decl
mov
ja
dec
js
inc
mov
ret
repz
or
pushl
xor
pop
shll
mov
xor
sbb
cli
in
mov
cs
fidivs
lahf
sbb
pop
push
sub
xchg
call
push
push
in
int3
dec
les
lods
pop
adc
inc
sbb
inc
adc
xor
jg
pushl
nop
or
pusha
shrl
stc
addb
cmp
iret
push
jecxz
or
out
cli
repz
lret
add
inc
sbb
sbb
xchg
lret
ds
push
incl
call
mov
push
mov
mov
dec
daa
xchg
scas
xchg
push
pop
cmpsb
in
pop
pop
out
mov
in
mov
ds
fsts
pop
push
mov
outsb
sbb
pop
cli
jp
cld
xchg
lret
and
sub
pushl
inc
pop
aaa
mov
mov
shl
cli
jg
mov
stos
popf
xor
mov
outsl
icebp
incl
jg
or
push
or
push
xchg
xor
emms
movsl
mov
xor
rcr
mov
pop
shl
int
lods
push
sar
jmp
test
ficompl
mov
inc
mov
mov
jle
fists
fsubr
mov
jnp
pslld
push
daa
sti
call
pop
mov
mov
inc
js
sub
mov
sbb
mov
inc
lods
jg
ficoms
push
mov
sbb
push
sbb
mov
dec
lret
call
clc
add
fldenv
jo
mov
scas
je
mov
lret
iret
cmc
pop
leave
dec
imul
nop
mov
clc
ljmp
scas
dec
movsl
mov
dec
bound
mov
inc
or
pop
or
push
movb
fnstenv
mov
movsb
fcom
sub
xchg
mov
lcall
sbb
push
mov
add
adc
jmp
sbb
mov
adcb
lds
push
cwtl
jns
stos
fisttpl
jecxz
push
incl
popa
aad
fiaddl
leave
out
pop
dec
mov
jb
fiaddl
jg
into
into
aam
mov
out
and
xlat
cmp
popa
daa
ficompl
jns
lcall
mov
adc
stos
lcall
imul
fildll
mov
mov
enter
xor
pop
std
dec
inc
lock
jb
daa
pop
or
dec
add
ds
shl
push
call
loopne
xor
mov
mov
mov
cli
mov
xchg
push
ret
dec
sbb
out
mov
pop
pop
xchg
es
add
cli
pop
call
sub
cwtl
xchg
inc
cmp
inc
movsl
mov
rolb
xchg
jnp
mov
loopne
into
outsl
adc
lahf
les
cli
js
cmpsb
or
orl
cld
call
ds
mov
hlt
add
nop
loop
shrl
decl
fsubr
ss
push
push
xor
inc
push
inc
mov
pop
loopne
das
and
hlt
lahf
movntps
jmp
repnz
outsl
lock
aas
inc
andb
in
and
mov
rcr
stos
cld
stos
out
leave
call
push
sbb
push
lcall
sbb
lock
gs
mov
pushl
leave
pop
cmp
push
xchg
push
and
mov
lret
enter
das
mov
int
or
sub
scas
xlat
dec
stos
jmp
pushw
rorb
cmc
mov
and
daa
or
gs
gs
push
fs
xor
and
push
mov
mov
add
jl
pusha
mov
dec
test
adc
mov
das
lret
leave
adc
mov
push
dec
faddl
mov
sbb
mulb
dec
insb
push
jbe
mov
sahf
xchg
cli
push
mov
inc
jge
push
mov
sti
insl
adc
mov
adc
fstps
inc
paddusw
mov
and
insl
insl
adc
or
mov
lds
xchg
clc
call
in
int
cmp
push
movsl
test
push
cmp
outsl
cld
pushl
sahf
jo
addl
or
add
add
test
pushl
sbb
in
movsl
fadds
mov
les
cli
mov
pushl
cli
mov
xor
mov
add
enter
push
inc
sub
in
sbb
lahf
jb
xchg
repnz
mov
decl
std
insl
jno
andb
inc
mov
jb
push
xchg
les
popa
push
aaa
clc
pop
or
bound
pop
out
adc
inc
or
decl
mov
aam
shlb
cmpsb
push
cmc
jg
jg
xlat
mov
lret
add
lods
push
ds
push
cmp
test
mov
arpl
outsl
pop
cmp
call
mov
mov
pop
xchg
orb
addr16
das
es
dec
sub
mov
mov
imul
sbb
mov
mov
fdivrl
push
lea
outsb
xchg
bound
scas
inc
mov
cmpsl
jbe
mov
inc
mov
push
test
dec
ljmp
inc
out
mov
in
shrb
inc
push
cs
out
and
clc
or
shl
out
mov
insb
inc
pop
sti
xchg
hlt
popa
jne
out
repnz
fnstsw
dec
or
sub
cmp
fisubl
mov
outsl
push
lock
mov
test
in
test
jmp
outsb
or
pop
xlat
orl
xchg
dec
mov
lahf
fildll
lret
scas
push
std
decl
jge
das
adc
push
call
lods
int3
test
pop
negl
or
incl
rorl
in
xor
pusha
shrb
inc
mov
xor
cli
incl
push
subb
sub
pop
dec
dec
mov
add
std
xchg
clc
addb
mov
adc
outsl
hlt
call
xchg
test
pop
push
cmp
sub
mov
jg
call
pushl
mov
xchg
fwait
scas
je
notl
sub
das
hlt
push
lahf
fistpl
sub
js
out
cwtl
fdivrl
leave
ljmp
je
sub
cmpsl
pop
lret
mov
mov
lret
jecxz
idiv
call
push
rorb
push
pop
push
stos
sbb
xchg
mov
fisubrl
jecxz
pop
and
push
insl
fcomps
adc
test
cltd
add
mov
popf
gs
adc
fstl
shll
popa
movsb
xchg
mov
lcall
sub
cmpsb
push
addr16
les
jo
push
orl
pushl
mov
sbb
push
scas
mov
mov
sub
lret
scas
pop
push
pop
gs
das
notb
sahf
mov
mov
xchg
pop
aad
or
jmp
scas
adc
sub
cmp
jg
sub
stos
sub
adc
mov
iret
adc
sbb
xchg
mov
lock
inc
add
js
adc
adc
push
mov
add
add
sub
movsl
lea
stc
test
mov
popf
mov
xchg
mov
pop
fcomp
ljmp
jb
mov
push
or
jmp
jg
loop
dec
loope
mov
and
lcall
or
pop
and
mov
lods
sub
add
push
daa
pop
inc
inc
nop
jg
test
jbe
aam
pop
jmp
lahf
int
xchg
in
dec
call
jmp
sti
xor
jno
mov
add
movsl
pop
add
and
mul
into
xor
loopne
aaa
xchg
arpl
mov
mov
adc
aaa
into
push
or
filds
mov
pop
shlb
xchg
pop
jge
sub
inc
in
pusha
flds
jbe
cmp
ljmp
and
test
clc
clc
lock
push
adc
lds
es
cmp
enter
jp
push
pop
ds
push
sbbb
cmpsl
pop
xchg
cmp
lock
lods
popa
inc
in
adc
inc
push
xor
mov
cwtl
lea
mov
test
dec
test
sbb
out
push
idivb
jne
ret
push
fisubs
in
inc
sbb
mov
fadds
mov
popf
adc
orb
adcl
lcall
loope
mov
data16
mov
push
cld
test
call
es
xchg
push
mov
inc
xor
out
stos
arpl
sbb
and
lods
movsb
push
xor
xchg
movsl
incl
inc
in
gs
fs
pop
inc
jo
gs
push
in
incl
test
mov
xor
adc
sub
outsl
jmp
imul
mov
gs
les
pop
mov
adc
in
push
out
decl
or
test
shll
mov
popf
rcrb
inc
insl
push
xlat
loope
cmp
mov
test
mov
jge
stc
add
shll
xchg
mul
pop
push
push
jo
decl
imul
stos
lret
je
mov
sbb
popa
and
cmp
xor
push
inc
push
push
adc
mov
or
lret
rolb
sar
lods
inc
inc
stos
mov
mov
mov
and
add
mov
cld
inc
inc
shl
mov
scas
dec
sbb
push
mov
call
shlb
cmp
or
or
jno
dec
jb
inc
mov
incl
loopne
out
pop
ds
mov
stos
fisttpll
orl
dec
ret
add
push
popf
cmp
pop
push
cmp
jmp
sub
cmp
lcall
lcall
ljmp
mov
xchg
pop
xor
jmp
mov
in
aam
out
pop
mov
fnstcw
in
std
push
cmpsl
imul
adc
lcall
sbb
movsl
push
mov
mov
pusha
cmpb
jno
add
fcompl
insb
cmp
add
imul
jmp
stos
jo
stos
ljmp
mov
adc
sbb
and
sbb
outsl
cmc
ljmp
popa
and
data16
xor
adc
aaa
xchg
xchg
push
push
ljmp
mov
aaa
mov
xchg
test
mov
lods
mov
mov
jecxz
in
push
jl
shll
push
lods
inc
pop
cli
inc
cmp
lea
jmp
cli
adc
or
jns
mov
movsl
sbb
cli
dec
dec
fnstcw
mov
out
mov
dec
rcll
call
in
cltd
aad
loope
and
pop
push
push
or
aaa
sti
inc
aad
push
nop
push
push
inc
hlt
push
js
adc
xchg
push
hlt
sbb
dec
mov
push
mov
xor
add
jnp
jg
dec
or
movsb
add
xchg
xlat
cli
lds
sub
pop
inc
imul
in
mov
lcall
mov
movsl
call
lods
cmpb
pop
inc
ficompl
pushl
aad
decl
in
into
mov
hlt
jns
push
or
ljmp
pop
cmpsb
imul
add
pushf
mov
sub
inc
dec
adc
push
out
movsb
pop
fcompl
popa
sub
adc
int3
sbb
add
decl
inc
out
push
jmp
out
push
or
mov
movsl
pop
push
push
imul
aaa
cli
mov
mov
js
sub
cld
mov
fdivr
call
inc
cmp
add
xor
inc
add
add
lds
sbb
test
mov
cmp
addr16
xor
jne
or
les
jg
xchg
popl
leave
mov
loope
cwtl
mov
sub
mov
test
fnstsw
lret
mov
out
inc
mov
pop
jns
xchg
xor
mov
clc
cmpsb
ljmp
decl
mov
inc
mov
mov
push
mov
or
jmp
xor
sar
test
mov
mov
lcall
mov
aas
mov
testl
lcall
jl
sub
jg
pusha
pop
aaa
ret
dec
push
test
loopne
adc
rcrb
jg
or
fists
or
xchg
xor
rcrb
and
push
call
ljmp
lea
inc
cmp
adc
imul
xor
inc
rorb
cmp
fs
inc
fidivrs
loopne
add
mov
outsb
add
jns
incl
lea
inc
adc
sub
inc
and
out
inc
jbe
outsl
mov
int
cmp
xor
vandnpd
add
dec
lret
xchg
jge
or
fistl
dec
les
incl
mov
mov
cmp
mov
sub
add
mov
add
jbe
idiv
decl
movsl
hlt
cmc
add
orb
mov
add
pop
add
cld
cmpsb
mov
decl
adc
adc
xchg
icebp
cmp
adcl
push
add
clc
pop
inc
jno
loopne
scas
jle
mov
push
and
mov
popl
pop
iret
fs
dec
outsl
lock
lahf
loopne
mov
push
pusha
push
aad
pop
pavgb
fstpt
scas
xchg
inc
bound
fimull
imul
movsb
fwait
adc
sub
cmp
push
sbb
cmp
mov
add
outsl
std
lret
imul
shl
sbb
add
imul
stc
cmp
jle
push
push
std
lcall
sub
jmp
lret
add
mov
cwtl
mov
int3
or
inc
mov
std
or
push
and
les
mov
xor
pushl
clc
jmp
pop
pop
add
dec
xchg
add
pushf
push
fwait
mov
cmp
sti
mov
jl
outsl
data16
pushl
test
fcmovnu
sbb
mov
dec
popa
xorb
lock
call
cli
fcmovbe
mov
ss
in
xor
pop
fdivrs
jg
push
xchg
inc
loope
jl
cmp
mov
sbb
mov
shl
adc
fdivs
sbb
jg
decl
cld
ljmp
ret
mov
push
scas
add
in
testl
adc
nop
push
repz
jmp
pop
jecxz
sbb
ror
andl
mov
mov
aam
lahf
jg
jne
and
mov
movsb
ljmp
icebp
xor
aam
cwtl
push
cmc
decl
mov
pop
inc
leave
dec
adc
pop
enter
aaa
clc
jg
outsl
test
stos
and
add
mov
das
std
mov
decl
jle
pop
xor
rcll
mov
jns
sbb
into
inc
ret
lcall
dec
lods
lds
mov
fsubs
mov
fucomip
mov
in
insb
pop
adc
push
lcall
in
popf
push
scas
out
and
ret
lods
push
push
sub
cmc
data16
pop
adc
popa
pop
scas
xor
lret
and
decl
inc
or
jae
sbb
test
int3
gs
hlt
pop
push
push
stos
js
xlat
jmp
aas
xchg
pop
jae
pop
and
and
addb
add
decl
les
mov
ss
lea
das
mov
fisttpl
mov
push
insl
shr
sbb
mov
jmp
test
fsubrs
fsub
aas
dec
lahf
inc
jg
xchg
insl
push
cmp
mov
scas
push
sub
xor
das
call
xchg
and
add
pop
inc
dec
xchg
xchg
cli
mov
jnp
inc
inc
dec
xchg
loopne
ss
pusha
roll
call
mov
mov
adc
lods
pop
das
rol
cmp
leave
pop
loop
in
pop
mov
jg
mov
mov
mov
xlat
enter
lea
inc
mov
pop
cli
xchg
dec
mov
lods
fdivrs
mov
ja
popa
mov
jge
adc
or
jns
in
xchg
cs
in
es
fisubrs
xor
mov
fidivrl
push
insl
sub
and
clc
adc
add
adc
rorb
pop
pop
rcr
fxch
test
incb
in
xor
xor
xchg
ret
xor
popa
inc
pop
inc
add
xchg
call
push
mov
fisubrs
fcmovu
test
inc
sbb
mov
cmpsb
jbe
in
pop
in
aam
rcrb
nop
and
and
cmp
fdivrs
jo
lods
lcall
fstpt
mov
add
rcrl
data16
inc
sub
mov
mov
pop
add
imul
mov
dec
stos
dec
repz
lcall
out
shll
push
jo
push
mov
adc
or
mov
inc
xlat
and
stos
push
movsl
lods
pop
cmp
aam
xor
jb
incl
push
lock
out
pop
cmp
data16
mov
cltd
dec
or
outsb
fnsave
mov
and
dec
stos
push
dec
cltd
xor
lcall
lea
mov
xor
jns
push
subl
cmp
lahf
lret
dec
lret
pop
and
pusha
push
in
aad
push
mov
mov
lods
jle
pop
mov
xor
sbb
dec
inc
sti
aaa
stc
pop
mov
adc
nop
stc
ljmp
inc
jge
and
pushl
movb
hlt
sbb
mov
fldt
cmp
pop
loop
mov
dec
add
mov
insb
cmp
xor
mov
pushl
outsb
jo
or
dec
xor
and
repz
int
dec
jmp
pop
test
mov
jbe
pop
cmp
adc
test
jns
movsl
rcr
test
cld
inc
inc
shrb
pop
sbb
mov
sarb
clc
out
push
fnstenv
dec
fiadds
push
push
jae
addr16
jne
dec
sub
mov
jae
jno
inc
test
dec
inc
rcrb
jb
jp
shrl
mov
mov
jg
lds
outsl
shll
mov
mov
dec
jne
shlb
cmp
int3
roll
std
ret
pop
cmpsl
inc
lods
or
mov
incl
push
xor
std
mov
call
sub
inc
jne
adc
ljmp
lea
pop
in
adc
leave
jge
or
xchg
test
fldl
ret
xor
in
cli
mov
scas
mov
hlt
sub
jmp
push
neg
testb
dec
mov
xor
mov
call
inc
push
loop
xchg
pop
popl
and
int3
mov
ja
pop
bound
push
mov
test
push
inc
stos
out
pop
dec
sbb
add
add
in
add
pushl
outsb
pop
sarl
push
jg
jp
ljmp
lock
mov
out
mov
imul
adc
hlt
gs
lcall
lods
jbe
sbb
cmp
jnp
popf
and
xorl
cmp
clc
push
popa
xchg
push
push
push
enter
insb
cmpl
ljmp
filds
lea
mov
xchg
adc
mov
push
sbb
mov
incl
stos
dec
xchg
dec
push
stos
stc
outsb
mov
pushl
clc
loop
ljmp
ljmp
dec
das
fisubrl
sbb
sbb
pushl
pop
jbe
sbb
push
addr16
pop
mov
arpl
cmp
call
mov
fistpll
push
xchg
test
fwait
sub
push
mov
jle
adc
icebp
test
pop
loop
sbb
jg
push
movsl
je
std
mov
jne
and
push
sbb
push
mov
dec
lcall
decl
addr16
mov
addr16
rcrl
push
sbb
xchg
and
ljmp
mov
into
lods
outsl
push
xor
mov
mov
out
cmpsb
jae
fisttpll
or
repz
or
arpl
push
outsb
push
das
icebp
push
pushl
sahf
cld
fcmovnbe
push
mov
repnz
decl
jmp
daa
xchg
mov
push
cli
push
shll
xor
repz
and
cli
call
mov
loopne
inc
movsb
mulb
cmp
outsb
es
dec
frstor
setp
pop
ljmp
mov
aaa
imul
sub
pop
loop
xchg
add
mov
stos
sbb
shll
xlat
jae
jae
jg
mov
rcll
ret
sahf
adc
fisttps
movsb
push
sti
lret
sub
lcall
sbb
lods
ss
jp
int3
shlb
mov
enter
icebp
pop
ret
mov
fs
push
dec
push
testl
sub
jb
push
jp
out
dec
imulb
aad
leave
pushf
scas
adc
ljmp
push
push
cld
jg
jae
jle
push
sti
in
dec
push
jne
je
data16
decl
jle
mov
test
inc
or
notl
mov
pop
push
aam
mov
sarl
sub
sub
incl
stc
lods
repz
mov
inc
inc
in
popa
or
int3
call
test
inc
cmpsl
add
lcall
fnstsw
lods
out
mov
and
sti
insb
call
mov
daa
call
in
jmp
imul
lret
jmp
shl
in
push
fists
dec
gs
mov
stos
mov
not
inc
rcll
scas
ljmp
pushf
jge
jge
in
push
inc
in
in
mov
lcall
shr
lock
rep
test
pushl
decb
nop
adc
lahf
xor
mov
nop
jns
lock
inc
leave
xor
xor
sub
mov
pop
sbb
cmpsb
pop
mov
js
iret
xor
aam
pop
int
aas
out
jle
mov
hlt
mov
movsb
dec
es
jl
xor
int3
stc
gs
ret
jmp
lds
cmp
ljmp
dec
decl
mov
jbe
sub
lret
out
lds
xchg
jbe
mulb
nop
ficomps
lods
ds
mov
jg
jmp
fsub
and
aas
push
in
jnp
pushl
enter
clc
jns,pt
cmc
imul
mov
inc
subl
pushl
jae
cmp
lds
dec
mov
mov
push
lret
pushf
hlt
jmp
stos
imul
in
movl
gs
sub
jne
push
lahf
hlt
incl
idivb
aad
loope
in
popf
adc
pop
push
das
test
sahf
mov
neg
inc
lods
jbe
dec
jo
lcall
das
enter
dec
push
jb
jo
ss
fndisi(8087
loope
pop
xor
jne
cmp
mov
js
ret
aad
push
inc
push
or
xor
pop
je
movsl
jmp
repnz
js
mov
mov
xor
or
scas
pop
or
lods
adc
cli
xchg
hlt
fisttpl
mov
ljmp
test
pushf
loopne
xchg
lcall
loop
jne
dec
inc
outsl
or
or
sarb
icebp
lret
cmp
cmc
jl
cmpsl
ret
cmp
xor
iret
nop
fdivs
jbe
push
fistl
icebp
fdivrl
cli
dec
mov
lock
push
leave
in
aam
jl
lea
mov
push
pop
lods
mov
lods
jl
xchg
mov
inc
xchg
pop
out
push
test
adc
div
test
jmp
mov
mul
out
pop
aad
and
fstpt
inc
mov
and
incl
inc
jle
pop
cmpsl
shll
jg
xchg
insb
mov
inc
mov
jne
pop
scas
negl
cmp
movsb
cs
test
lret
sbbl
daa
or
mov
call
mov
push
cmp
shl
jg
dec
sub
test
cld
cld
inc
inc
xor
mov
mov
shrl
shrb
repz
mov
sti
lahf
jmp
sti
sahf
sub
imul
sub
pop
mov
mov
aad
clc
push
aaa
add
xchg
mov
or
lcall
add
les
int
rcl
flds
ljmp
dec
int3
out
xchg
cld
jmp
lahf
es
jo,pn
cmp
shlb
sub
mov
test
jmp
std
sarl
push
scas
or
pusha
mul
jmp
clc
push
xchg
or
jns
stos
xchg
arpl
pop
call
fstpt
cmp
filds
leave
xchg
jge
stos
std
movsl
pop
cli
popf
dec
imul
pop
clc
push
cmpsl
sub
fimull
and
inc
rcr
movsl
scas
aaa
les
pop
sbb
fmull
mov
cs
call
ficoms
sub
fidivrs
mov
xchg
mov
sbb
cmpsb
sti
and
xchg
cmp
jne
fstpt
call
mov
aas
gs
lea
movsl
call
cmpsb
addr16
pop
fcomi
daa
ja
push
ja
stc
mov
ja
idivb
divb
lret
xlat
push
cmp
ret
sub
repnz
jmp
pop
loope
sbb
rcrb
mov
inc
inc
stc
jne
lahf
lods
pop
call
lret
pop
std
sti
jmp
clc
jp
int
shll
ficompl
sbb
lcall
stc
mov
jl
inc
out
push
lret
nop
and
call
pop
ja
mov
cmp
cmp
mov
test
mov
insl
notl
lret
jp
jp
jb
movsl
xor
sub
jecxz
movsl
insl
out
aaa
jo
adc
mov
and
mov
movsl
sti
movsb
dec
cmp
daa
sub
popf
xchg
fidivs
fistl
imul
ljmp
inc
xchg
cmp
lods
pushl
test
pop
xchg
cmp
lea
push
sub
and
jmp
dec
clc
pop
repnz
sbb
cmp
jne
xchg
sti
cli
adc
iret
fstpl
xchg
sbb
icebp
mov
incl
dec
data16
adc
test
in
push
addr16
inc
push
mov
out
pushf
iret
push
jmp
or
int3
shl
pop
dec
pop
ljmp
dec
aas
lret
sti
std
cmp
dec
inc
lods
out
fsqrt
push
in
dec
adc
ret
jo
in
add
decl
psubd
fidivl
ljmp
adc
aaa
pop
xchg
lods
cwtl
fsubr
stos
scas
xor
inc
xchg
cld
pop
push
xor
iret
mov
dec
lcall
decl
bound
rol
imul
jbe
loopne
mov
enter
cmp
jmp
xor
dec
add
mov
jle
loope
test
jl
and
pop
loop
aas
scas
pop
cmp
mov
repnz
out
clc
jmp
test
fs
pusha
sbb
cmpsl
mov
adc
push
es
out
add
fs
mov
cwtl
rolb
mov
pushl
fcompl
pop
jae
or
scas
test
stc
sar
arpl
sahf
cltd
lock
stc
into
push
aas
scas
sbb
pushl
clc
lahf
sbb
push
sub
and
enter
dec
std
orl
repnz
in
mov
subl
adc
adc
pop
xchg
jbe
sbb
incl
mov
call
popf
pop
mov
sub
mov
jb
aas
mov
mov
sbb
stos
inc
sub
bound
pop
pop
ds
int3
pusha
pop
div
lcall
jno
or
and
lock
pushf
dec
cwtl
push
cmp
lock
call
outsb
repnz
insb
xor
lds
negl
adc
call
jp
fisubl
xchg
imul
fwait
ss
xor
cli
pop
std
mov
lods
xor
or
data16
iret
iret
outsl
xor
rcrb
insl
cmp
xchg
lcall
cld
sub
add
xchg
xor
jo
mov
jp
cld
fcompl
adc
std
lods
sbb
imul
adc
fstl
mov
sbb
lods
cmpsb
fbstp
lcall
sub
rorb
pop
les
pop
int3
xor
adc
add
xor
sub
sahf
xor
cld
mov
incl
pop
mov
out
dec
push
or
mov
call
xchg
cmp
int3
mov
js,pn
jmp
fucomip
mov
aas
call
xchg
out
push
cmp
loopne
lret
rclb
ljmp
nop
or
cmp
sub
ljmp
mov
dec
in
mov
adc
xchg
movl
ljmp
lcall
dec
push
ja
sub
frstor
ljmp
jg
cli
cmp
xor
loopne
gs
pop
push
dec
push
or
pusha
xchg
inc
mov
popa
pop
fildll
mov
jbe
cli
pop
push
push
cli
jns
pop
inc
lea
add
test
out
cmp
clc
repnz
aaa
js
xor
icebp
fistpll
add
fs
mov
cld
data16
mov
ljmp
stos
ret
cmp
push
cli
iret
jnp
sti
in
cmp
fnstcw
xchg
sub
ret
jl
mov
rcrb
lock
std
mov
into
js
test
push
imul
outsl
iret
pop
mov
sbb
shl
jmp
jp
jnp
sbb
sbb
xor
cli
pushf
push
sbb
pop
pop
repnz
ljmp
pop
lcall
mov
pop
dec
scas
mov
js
icebp
jg
or
cmpsl
xor
loope
stc
ss
icebp
inc
or
push
ljmp
xchg
mov
imul
aas
cmp
repnz
scas
cwtl
incl
call
imul
dec
cli
push
mov
hlt
xor
lcall
aaa
xlat
push
fnstcw
repz
into
add
sbb
sbb
out
movsl
jg
sarb
insl
adc
aam
ret
xchg
jl
mov
jg
pop
jne
cmc
pop
imul
mov
in
pop
aad
gs
ljmp
fcmove
mov
sti
shlb
out
clc
cli
sub
mov
mov
add
cld
push
push
push
mov
mov
jnp
data16
push
inc
dec
inc
jne
or
inc
hlt
or
out
mov
pop
inc
xor
call
mov
call
out
or
inc
out
stos
jmp
call
mov
call
add
std
dec
je
jns
jl
xlat
sbb
add
or
dec
dec
mov
cmp
pop
jmp
add
fnstsw
add
xchg
lock
pop
or
mov
je
call
jl
add
push
outsb
push
mov
roll
or
je
mov
pop
cmp
je
inc
call
inc
xor
out
out
pop
test
dec
loop
mov
call
dec
mov
std
fucomp
mov
in
push
adc
call
mov
mov
aaa
ljmp
in
jg
jge
ja
inc
add
sub
rep
pop
jmp
or
decl
jmp
add
jne
mov
mov
mov
or
jge
shl
adc
fbstp
or
call
call
cs
mov
pop
ret
nop
insb
fildll
lea
loopne
mov
push
jg
jo
cmp
xchg
rolb
mov
cmp
cltd
loope
add
les
decl
and
cwtl
inc
cmp
inc
jge
mov
pop
inc
add
or
mov
or
aas
xchg
sahf
inc
test
gs
sbb
mov
jp
leave
out
decl
insl
divb
inc
aas
jle
sar
es
push
adc
and
repnz
xor
jg
add
mov
insl
jne
adcl
push
pushl
lods
and
xchg
sub
ja
add
decl
jle
inc
lcall
sbb
clc
rcrb
hlt
ljmp
and
mov
pop
inc
mov
push
fcoms
std
dec
js
jg
ljmp
popa
pushf
cmpsl
xchg
fs
vdivps
xor
pop
lock
pop
push
lods
dec
mov
jno
mov
nop
les
add
aaa
cmpsb
loopne
jl
out
sbb
inc
pop
ud2
xor
loopne
hlt
cmp
mov
inc
loope
andl
adc
ja
push
sub
mov
cmp
jl
xor
into
into
and
cmc
ljmp
mov
and
pop
pop
push
pop
mov
cmpsb
outsl
lock
lock
roll
jle
jmp
inc
ret
mov
mov
icebp
lds
inc
lgs
or
jmp
out
xor
mov
adc
push
js
leave
and
adc
sub
pop
xor
clc
test
sbbl
call
clc
mov
or
mov
mov
shlb
adc
int3
ljmp
pop
aas
push
push
push
aam
inc
out
dec
das
adc
sbb
mov
outsl
push
insb
popf
adc
lods
mov
pop
mov
xchg
or
dec
bound
sub
cld
loop
lods
and
push
inc
push
xchg
jnp
add
sub
lcall
jno
fdivrl
lea
ret
std
ljmp
dec
push
test
stos
hlt
push
lcall
repnz
xchg
xor
jmp
sbb
cmpb
arpl
imul
cmpsl
call
js
hlt
adc
xlat
sarb
mov
adc
cmp
push
lcall
mov
mov
adc
and
xchg
outsl
mov
test
call
cmp
mov
lret
or
mov
pop
dec
dec
out
jmp
aaa
cmp
push
pop
sbb
lcall
fnsave
fisubl
fistps
mov
or
add
or
insl
cltd
pop
dec
ret
dec
sub
ljmp
xor
rcll
lahf
push
sub
sub
dec
pop
insb
push
cmc
xchg
push
push
mov
dec
lret
ljmp
rolb
sbb
mov
cmpsb
pop
mov
fistps
push
cs
cmpsb
in
jl
adc
sub
stos
sarb
cmp
rcl
inc
aas
adc
xchg
push
inc
xchg
popa
sub
inc
pop
and
loope
jbe
push
xor
ljmp
data16
sbb
iret
fwait
dec
rcr
push
mov
adc
aaa
fisubl
lea
test
call
roll
movsb
push
jmp
sbb
ret
mov
inc
idiv
jmp
sar
call
imul
or
aam
pop
cmp
nop
pushl
je
imul
jae
sbbb
hlt
mov
iret
enter
bound
sar
call
test
jge
xchg
xor
enter
mov
xorb
repnz
repz
push
loopne
lret
mov
sahf
cmp
das
dec
decl
xor
jecxz
rcr
sub
loopne
jns
sub
sub
pop
lcall
and
add
ficomps
loope
das
mov
lcall
jo
mov
fucomip
decl
icebp
mov
xlat
nop
clc
jmp
mov
test
clc
lcall
adc
xchg
fiaddl
sbb
adc
cmp
mov
mov
push
mov
dec
pushf
ret
inc
repz
cld
add
fistpll
jmp
test
pop
or
sbb
dec
data16
out
imul
mov
mov
inc
push
pop
xchg
js
sarb
mov
mov
lods
ljmp
push
mov
scas
mov
sbbb
filds
inc
push
xchg
int
lret
jg
fisttpll
mov
cltd
outsl
icebp
pushl
pop
jg
ret
inc
inc
add
mov
add
mov
mov
xchg
mov
or
push
shlb
pop
je
stos
insb
xchg
stos
push
addr16
idiv
mov
adc
jecxz
pop
cmp
inc
sbb
hlt
mov
lds
xor
cmc
movsl
adc
std
ret
fsubr
mov
insl
cmp
dec
mov
xchg
call
mov
pop
xor
inc
mov
es
dec
xchg
mov
sbb
rorb
mov
das
inc
cld
popa
aaa
lods
sub
ljmp
lret
pop
stc
lds
adcb
inc
sub
xchg
or
push
jae
cmp
addb
sbb
sub
dec
mov
sbb
inc
fsts
inc
shll
sub
sub
test
mov
adc
push
dec
fadd
in
aam
lcall
leave
mov
mov
mov
aaa
mov
out
out
mov
sub
cli
call
sahf
jp
jmp
cli
dec
popf
cmp
test
das
jp
gs
int
dec
push
add
pop
pop
test
push
rclb
lret
mov
sub
inc
and
add
push
mov
sarb
pop
inc
test
mov
scas
sbb
stos
xor
aaa
cmc
mov
insb
adc
cwtl
mov
push
sub
bt
mov
xchg
ljmp
ljmp
adc
in
sub
scas
imul
imul
push
testl
je
fdivr
mov
cmpsl
insl
sahf
aas
popl
daa
inc
int
rolb
aad
jg
loopne
out
and
out
mov
imulb
jge
cltd
js
and
out
push
pop
ljmp
xchg
testl
fbstp
cmp
jo
decl
jp
and
fistl
shrl
inc
mov
loope
sbb
xor
mov
cltd
test
andl
ja
lret
dec
adc
cmp
jb
es
dec
push
jp
aad
ret
imul
xchg
mov
mov
fnstsw
jmp
mov
test
inc
shrl
mov
jo
pop
sub
pop
adc
call
cli
inc
sub
int
xchg
push
jne
in
xchg
or
mov
mov
sub
enter
addr16
js
nop
pop
pop
xor
stos
call
popa
js
add
stos
sub
pop
inc
fs
pusha
ja
fbstp
mov
incl
ficompl
dec
js
scas
mov
dec
orl
jmp
pop
lea
cltd
mov
sub
or
lods
mov
inc
sub
or
js
xchg
lcall
icebp
call
mov
loop
enter
push
hlt
test
jno
decl
call
insl
int3
and
or
push
pop
push
inc
dec
in
clc
hlt
call
mov
out
mov
xchg
adc
push
mov
lods
mov
cli
jnp
adc
cli
fistps
cli
mov
cmp
pop
jb
je
jge
test
jle
adc
lcall
fs
repz
mov
push
pusha
xchg
loopne
daa
js
lcall
mov
aaa
cmp
or
pop
outsl
aas
cmpsb
stc
pop
ljmp
cltd
xchg
or
pushl
xchg
dec
add
subl
or
imul
ljmp
aad
mov
pop
insl
stos
or
icebp
test
out
xorb
mov
movsl
pusha
arpl
arpl
adc
sbb
clc
lcall
jnp
fs
jb
sub
mov
jns
ss
jae
pop
push
lcall
rol
sbb
cmpsl
lahf
xor
cmp
pop
and
add
cli
push
xchg
in
and
stos
repnz
cli
jg
das
pop
in
cli
cmpl
or
mov
push
xchg
loop
ss
push
adc
pop
dec
sbb
or
mov
test
call
xor
lds
insl
pop
mov
pop
mov
adc
in
sbb
aam
lods
mov
aam
dec
sbb
mov
lds
ss
in
mov
xchg
lea
call
mov
pop
jns
cmc
fstl
and
sbb
jl
sub
lret
and
push
inc
popa
movsl
push
dec
fdivrs
pop
mov
and
ljmp
mov
sub
push
mov
je
pusha
fsubp
addl
push
mov
dec
outsl
mov
inc
dec
or
in
inc
mov
sub
lcall
std
pop
pop
xor
mov
xchg
sbb
std
aad
adc
decl
jmp
aas
sbb
and
cmpsb
jle
cltd
fsubrs
cmc
and
cmpsl
aam
rorl
and
in
sbb
out
mov
orb
ja
lods
mov
sbbb
ds
test
das
adc
in
push
addl
xchg
lock
loopne
sahf
or
andps
lret
xor
cmc
xchg
andl
popa
loope
aaa
push
rcrb
pushl
mov
jno
out
loopne
jb
sbb
jb
outsb
dec
cmp
add
gs
jg
fsubs
sti
jne
mov
rcrl
bound
and
inc
add
mov
jns
sub
scas
loop
fbld
mov
xchg
std
jg
rolb
jge
es
push
jb
lods
sub
leave
lcall
add
out
and
outsb
inc
aad
jg
roll
idiv
cmp
lods
test
cld
and
jmp
push
push
jmp
dec
pop
mov
xor
jg
pop
clc
andb
call
sbbl
shrl
std
pop
mov
call
jne
in
scas
imul
dec
mov
or
push
push
icebp
pop
fildll
int3
xchg
jg
lcall
jmp
pop
aas
nop
push
ljmp
inc
sbb
fildl
xor
dec
xor
inc
cmpsb
cmpsl
xor
in
cmp
lock
addr16
mov
and
out
mov
inc
mov
ljmp
push
push
adc
fucomi
pop
mov
mov
hlt
sub
dec
xor
outsl
jno
lock
jo
std
insb
mov
in
push
in
lea
fxtract
fwait
jnp
mov
inc
cmc
aaa
ds
loope
loopne
cmpsb
mov
push
inc
test
pop
cmpsl
inc
push
add
in
cmp
gs
add
dec
int
mov
punpckldq
xchg
inc
outsl
mov
out
rorb
push
aad
add
mov
dec
adc
jmp
sub
jmp
rcll
sar
fnstsw
pushl
call
imul
add
scas
xchg
push
stos
je
pop
lcall
maskmovq
idivl
std
ret
es
mov
pushl
jp
bound
jno
nop
lds
push
pop
dec
shll
xor
xor
xor
or
test
test
jle
js
dec
add
insl
mov
sub
cmp
push
cmp
shrl
daa
inc
dec
rclb
and
ret
lock
xor
lret
out
popa
mov
pushl
daa
clc
shl
xor
push
push
pop
xchg
jo
jae
test
pop
jmp
jo
ljmp
loopne
jg
fsubl
xchg
jp
mov
push
scas
lods
and
jg
pop
clc
mov
in
pop
jmp
lcall
jmp
stos
dec
mov
sub
rol
pushf
jb
out
push
mov
xlat
mov
fbstp
in
jae
pop
jbe
mov
cmc
or
pop
jge
xor
jp
or
outsb
dec
sub
lcall
bound
imul
mov
xchg
dec
sti
xchg
inc
and
sahf
pop
out
movsl
lds
repz
jmp
sub
inc
mov
adcb
sahf
icebp
aas
fst
cwtl
xchg
ljmp
sahf
addr16
ret
divb
sti
cmp
popf
push
mov
into
cltd
fmull
xchg
jno
or
pop
push
icebp
incl
ljmp
dec
and
mov
sub
faddl
lcallw
outsl
popf
mov
inc
cmp
xlat
xorl
inc
or
or
js
int3
pop
add
decl
cvtpi2ps
je
out
xor
icebp
or
iret
subl
stc
dec
xchg
adc
mov
mov
mov
xor
or
stos
insl
loop
jecxz
fcmovu
dec
pusha
push
lret
jg
jbe
dec
adcb
shlb
in
fisubrl
mov
icebp
cmp
mov
sub
fwait
lock
icebp
in
clc
mov
lret
sub
movsl
fisttps
shll
rcll
adc
mov
pushf
sub
out
aam
pushl
push
jnp
mov
call
movsb
push
add
mov
push
pop
inc
outsb
xchg
in
xchg
jge
test
sbb
jmp
nop
and
std
decl
sbb
push
or
xor
std
int
sbb
decl
add
mov
iret
loopne
sbb
jle
fimuls
cmp
pop
pop
mov
out
cmp
incl
inc
aad
sbb
cmc
gs
cmp
pop
pushf
lcall
loope
mov
mov
mov
or
or
xchg
push
jnp
jg
incl
push
jno
push
push
lods
sahf
push
push
lods
rol
jcxz
adc
cs
lcall
ljmp
push
ja
push
lcall
stc
pushf
add
clc
loope
outsl
sbb
mov
outsl
jl
mov
dec
or
cmp
inc
jl
lock
jg
lcall
repnz
ret
cmp
dec
mov
pop
mov
test
fisttpl
sbb
lods
dec
sbb
sub
inc
or
or
pushf
aas
rorl
adc
jne
data16
or
jle
lcall
test
sub
repnz
arpl
adc
sub
pop
fwait
mov
arpl
aaa
pushl
incl
movsl
inc
shll
in
add
jmp
and
scas
dec
adcb
sar
dec
roll
mov
adc
js
cltd
push
adc
das
xchg
lret
cmp
lods
inc
mov
cld
dec
cmp
add
push
pop
out
clc
movsl
inc
dec
scas
scas
loope
lcall
call
add
ret
and
idiv
call
pop
xchg
pushl
xchg
adc
neg
jg
inc
cld
and
mov
sub
push
push
ret
sub
push
lods
outsl
ljmp
cmp
notb
and
sbb
call
pop
clc
pop
outsl
mov
dec
or
sbb
adc
mov
mov
outsb
sub
iret
in
mov
outsl
pop
mov
fsubs
inc
push
cmc
das
or
mov
clc
notb
stos
jo
dec
outsb
int3
hlt
scas
or
ljmp
pusha
jae
mov
add
jecxz
mov
mov
dec
outsl
xor
cld
mov
jmp
pop
dec
adc
mov
jns
out
dec
mov
into
test
ds
lcall
in
mov
outsl
pop
push
lods
lea
xor
or
out
jnp
incl
mov
into
aas
jg
jmp
inc
shl
into
sbb
push
jge
rorl
jne
out
mov
xchg
cmp
mov
push
out
lahf
test
sub
dec
js
bound
sub
or
ljmp
and
mov
hlt
cmpsb
xchg
std
mov
sbb
dec
outsl
and
insl
and
xor
outsl
icebp
in
daa
fst
mov
frstor
in
ror
xor
outsb
or
jo
lods
test
test
xor
lods
arpl
push
fidivrs
insl
add
pop
sub
daa
call
ret
outsl
out
sbb
cli
cmp
mov
adc
xor
mov
mov
das
dec
adc
int3
out
jge
mov
pushf
jl
sub
mov
lret
call
lods
aad
enter
mov
jge
sbb
mov
arpl
xchg
jmp
jb
out
ljmp
mov
mov
aas
outsb
test
jge
mov
repz
mov
cld
jge
jae
cmp
popl
mov
ss
dec
in
mov
leave
rorl
push
mov
cltd
pop
arpl
movsl
fldenv
mov
sub
mov
sti
xchg
outsl
push
or
xchg
inc
mov
mov
jge
imul
das
std
popf
mov
inc
lock
mov
sahf
cli
dec
fwait
ljmp
push
insb
mov
jecxz
mov
lea
das
neg
sub
in
hlt
jp
movsl
jle
dec
lahf
xchg
shl
mov
pop
es
call
push
fidivrs
icebp
dec
push
dec
daa
aad
jnp
sarl
pop
out
sahf
ljmp
jnp
adc
pop
or
mov
lods
loopne
iret
dec
push
xchg
lods
inc
lods
lahf
xor
outsl
lock
xchg
fistpl
and
sarb
adc
dec
js
pushl
clc
ljmp
imul
fmull
test
std
adc
push
int
negb
jg
ds
addr16
test
dec
lret
lods
andb
into
pop
push
pop
std
call
jge
std
roll
lods
cli
call
pop
movsb
pop
lock
pushl
add
xor
add
in
push
mov
js
sahf
cwtl
mov
js
sar
outsl
push
jg
cli
movsb
pop
adcl
int3
cs
repz
clc
loopne
shl
incl
jne
std
dec
lods
cmp
pop
shr
push
outsb
xchg
or
jg
leave
jns
fiadds
or
cmc
push
test
lcall
mov
push
testl
mov
test
inc
aad
int
cli
and
pushl
hlt
adc
enter
mov
aaa
lahf
sub
hlt
dec
mov
insb
stc
jbe
xor
cmp
jmp
lea
cmpsl
mov
mov
adcl
les
adc
jg
push
test
xchg
mov
pop
mov
arpl
jns
aaa
or
sahf
inc
dec
jmp
ret
lds
aas
sub
mov
xor
adc
inc
scas
fisttpll
or
sub
stc
jnp
ret
jg
hlt
xor
loope
dec
and
sar
mov
xchg
pop
adc
fucomip
decl
mov
pop
mov
je
xor
insl
mov
movsl
gs
pushf
icebp
mov
lods
lods
lods
sub
cmpsl
sbb
sub
push
outsl
pop
and
sahf
and
sbb
decl
hlt
and
pop
xchg
pop
stos
test
sbb
decl
lea
lea
xchg
lret
sbb
fdivl
inc
jp
push
mov
mov
cmpsb
std
call
ljmp
jmp
jno
cwtl
dec
dec
stos
xchg
adc
dec
mov
incl
outsl
adc
addr16
sub
cmp
adcl
inc
jnp
inc
mov
iret
jo
ret
mov
push
jg
pushf
lods
mov
cmc
inc
ljmp
dec
sbb
mov
push
iret
pop
xor
pop
bound
ljmp
dec
jne
movsw
xor
adc
inc
inc
notb
mov
and
pop
shlb
push
mov
imul
mov
stos
mov
es
push
and
bound
xor
aaa
pop
cli
fwait
pushf
push
ja
mov
sbb
ljmp
add
rorl
cmpsl
stos
jg
clc
mov
push
dec
std
lods
add
cmpsl
xchg
push
add
ljmp
insb
gs
sub
leave
into
sbb
jbe
xchg
xor
das
inc
decl
repz
pop
inc
test
push
test
push
decl
pushf
jns
divb
imul
adc
jbe
push
push
pop
jo
gs
lcall
call
adc
pop
les
ret
js
dec
lods
aaa
push
jle
mov
mov
dec
dec
addr16
fwait
loopne
adc
inc
mov
xlat
fcoms
pop
push
mov
jg
cltd
or
dec
pop
das
add
mov
push
cltd
scas
or
call
jnp
cmpsl
aas
jl
xor
jmp
stc
mov
nop
xacquire
decl
fs
xlat
mov
lea
into
icebp
out
cld
je
jg
ljmp
push
xlat
movsl
rorl
pop
mov
ljmp
push
add
shll
mov
paddsb
inc
inc
rclb
jne
jge
push
cvttps2pi
ret
addr16
into
push
shlb
jp
fwait
or
jg
subb
hlt
pop
mov
lcall
out
mov
fidivl
xchg
ss
call
lcall
push
decl
mov
sbb
clc
fwait
dec
mov
cmp
cli
mov
cld
and
mov
ficoml
xchg
jne
hlt
mov
jle
ja
jg
mov
cmp
sahf
popa
fdivp
imulb
cmpsb
es
clc
jg
pushl
aaa
stc
das
mov
test
addr16
push
cmp
arpl
mov
mov
cwtl
push
test
pop
dec
jge
icebp
inc
lea
jmp
ljmp
jp
hlt
arpl
nop
jecxz
inc
in
lods
jne
add
adc
ss
jnp
fs
inc
outsl
jmp
movsl
setno
pushf
pop
ljmp
hlt
shl
push
fnstcw
sbb
mov
hlt
stc
ret
into
lods
mov
mov
mov
iret
clc
pusha
push
std
lret
bound
lods
xchg
icebp
jg
loopne
call
pop
and
and
push
xor
das
or
pushf
add
call
mov
jb
imul
imul
ljmp
pop
pop
push
push
test
in
mov
mov
ljmp
lea
ss
das
in
test
ds
jp
dec
add
lock
pop
xor
call
insb
and
jle
cli
cld
mov
dec
sbb
lock
push
aam
clc
sub
pop
out
and
js
mov
scas
sbb
mov
push
std
enter
mov
outsl
sub
adc
call
aam
std
mov
dec
ja
ficoml
sub
push
outsl
idiv
incl
push
in
push
stos
xor
sub
cmp
inc
insb
es
stc
mov
cld
cli
rorb
push
rcrl
aam
fistpll
push
call
xor
jnp
sti
sahf
pop
aas
cltd
pushf
cs
imul
decl
jae
popa
out
int3
imul
mov
pushl
clc
jge
sub
mov
pushf
sbbl
outsl
mov
lods
push
aaa
add
fucomip
or
push
aaa
cmp
dec
inc
inc
mov
test
inc
inc
push
xlat
sahf
or
ret
idiv
das
lock
fidivrl
jbe
xor
sahf
cmpl
std
mov
call
lock
or
ljmp
xchg
jle
gs
adc
cld
dec
xchg
ja
push
mov
mov
loopne
arpl
fs
ljmp
js
add
cmp
jg
icebp
lea
xor
leave
xchg
clc
xlat
outsl
jne
pop
orb
xchg
lds
icebp
pop
test
cmpsb
mov
test
ds
incl
cmpl
mulb
jns
ret
mov
decl
xchg
add
fwait
pop
imul
xchg
jp
inc
push
xor
sbb
mov
push
inc
clc
xchg
or
decl
addl
sub
push
lret
fs
push
test
xchg
decb
call
inc
repz
xor
cmp
call
sbb
out
xorb
popf
out
or
in
dec
loope
shl
mov
idivl
dec
cmp
push
stos
mov
cli
sbb
push
or
mov
nop
outsl
adcl
push
pop
sbb
push
lods
push
inc
dec
pop
and
cld
in
lea
xor
ljmp
push
call
out
pop
rclb
mov
mov
inc
aas
ds
pop
mov
xchg
data16
jg
clc
orl
mov
mov
push
sbbl
jmp
out
pop
xor
pushl
cld
cmp
jg
sub
pop
aam
fidivs
push
sti
mov
jle
fwait
das
add
pop
ljmp
or
cmpsl
pop
enter
pop
cmpsb
jp,pt
jns
andl
mov
adc
pop
dec
mov
pop
rcrb
sbb
clc
sti
mov
push
lret
add
mov
push
insb
fiaddl
jns
mov
sbb
jle
cmp
inc
imul
mulb
pop
test
jmp
cmp
fldenv
mov
sbb
pushl
test
nop
xor
inc
dec
and
out
fsts
js
pop
lods
add
loop
push
lds
add
add
sti
mov
call
negl
or
mov
pop
cmp
sahf
mov
lcall
xlat
pop
scas
mov
stc
test
jge
mov
repnz
dec
loopne
hlt
call
mov
add
add
mov
lock
sahf
jne
inc
mov
mov
xchg
pop
in
test
jge
jg
cld
shl
neg
pop
pop
xor
lcall
cmc
out
incb
ds
xchg
mov
out
aas
in
xlat
jge
xchg
jle
xchg
xchg
cli
jge
dec
stc
mov
mov
aad
jmp
cmp
pop
mov
lcall
jl
mov
int
xorl
pop
cmp
les
gs
call
jo
ljmp
mov
inc
push
and
mov
cld
add
dec
popf
mov
js
stos
das
inc
lret
stc
fstl
pushf
dec
dec
xchg
lahf
mov
xor
push
js
and
cmp
fsubrs
pop
insb
lret
shl
mov
sarl
stc
adc
mov
and
xchg
push
mov
or
movsl
jecxz
test
outsl
rorb
pop
mov
adc
ljmp
call
sub
rorl
add
pushf
jge
cli
jmp
xor
fwait
mov
dec
inc
adc
outsb
jg
cmp
xor
mov
mov
shlb
repnz
pop
ljmp
fsubrp
push
cmp
adc
dec
pop
and
or
das
push
push
lret
out
add
cmp
mov
and
cmp
popf
or
popa
mov
mov
jecxz
call
pop
inc
cltd
mov
cwtl
cs
ljmp
sub
cmp
mov
push
pop
add
push
push
or
sbbl
sbb
pushl
popl
push
gs
rclb
xor
aad
push
pushl
in
push
and
aad
decl
pop
pop
lret
pop
gs
jb
mov
push
push
test
push
outsb
test
cli
cmp
jp
xor
cmpsb
lahf
or
icebp
scas
mov
push
addr16
sbb
cmp
out
out
lcall
in
jg
jmp
sub
test
cld
mov
push
dec
adc
in
cltd
xor
inc
rol
sbb
mov
mov
lock
pop
loop
ret
lcall
mov
sti
sbb
push
call
std
stos
xchg
mov
popa
int3
decl
cld
inc
fnstcw
cmp
ljmp
les
pop
pop
stos
dec
imul
lds
stos
aam
mov
xor
loopne
mov
jmp
and
adc
mov
test
xor
call
ljmp
inc
pop
mov
mov
fistl
cli
pushf
push
cmp
sub
mov
rcr
xor
jp
mov
pop
pop
sub
fbstp
mov
das
std
ljmp
fldcw
add
mov
aad
lahf
push
add
loope
mov
lods
sahf
call
add
sub
movsb
int3
or
jmp
inc
or
or
lea
xchg
fsubrs
pop
inc
es
push
inc
xor
mov
fnstsw
adcb
cmp
cli
sub
or
mov
adcl
pop
jns
fldpi
je
int
fs
das
sub
or
xchg
lcall
cli
mov
cmp
sub
insb
mov
adc
pop
sub
mov
sbb
daa
xchg
jbe
call
adc
dec
int
aad
outsb
sub
test
incl
push
and
hlt
sub
pop
adc
push
and
test
cli
incl
dec
xor
ja
sbb
lock
xchg
js
add
mov
inc
adc
or
mov
dec
pushf
mov
adc
sbb
hlt
adc
decb
cmpsb
out
int3
pop
call
stos
loope
lret
das
fnsave
jle
ljmp
lret
icebp
fldl
add
mov
dec
push
sub
test
adc
nop
decl
pushf
xorb
adc
sub
outsb
push
aas
dec
pop
or
lods
add
sub
fsubs
dec
add
incl
decl
test
sub
dec
in
mov
mov
pop
xchg
mov
pop
lret
jle
and
adc
icebp
shl
inc
add
nop
sub
push
push
lds
mov
clc
lock
pop
xchg
fucomp
pop
jo
jbe
or
lea
ret
add
xchg
rcrl
subb
ljmp
dec
dec
sub
sub
cli
pop
fwait
xchg
sbb
das
sbb
bound
mov
pop
fwait
add
js
jg
fbstp
sti
mov
scas
inc
movsl
or
imul
cli
decl
in
not
call
push
cmp
mov
ffreep
jg
or
push
xor
ret
stc
ds
xor
and
sub
call
lret
or
pusha
cltd
cmp
ja
jmp
movsl
push
mov
leave
daa
push
add
cmp
in
sbb
insb
test
push
jle
pop
cwtl
push
test
push
inc
pushf
nop
popa
pusha
inc
or
adc
and
scas
or
jno
xor
sbb
jp
test
fmull
and
ljmp
jnp
mov
sahf
xchg
mov
xchg
ficoms
movsb
sbb
adc
aam
push
or
or
add
into
xchg
and
mov
imul
dec
call
test
or
mov
pop
imull
icebp
out
movsb
inc
je
scas
mov
addr16
inc
mov
adc
and
data16
call
clc
ret
add
mov
das
lret
jmp
stc
mov
cli
pop
mov
andb
fldcw
fldt
pop
cmc
dec
push
pop
inc
ret
and
and
sub
push
outsb
sub
daa
mov
cmp
pop
es
lcall
sbb
int3
fdivr
mov
push
mov
adc
hlt
sbb
pop
repz
push
inc
cmc
pop
adc
ljmp
out
add
and
or
sub
and
sbb
es
adc
sub
cmp
call
fwait
push
cmp
negl
fnstenv
in
sbb
stos
mov
ja
jns
outsl
hlt
lcall
jl
jne
iret
add
mov
sti
sub
hlt
or
lcall
cld
lods
sub
sbb
dec
cmp
cmpsl
and
inc
mov
dec
and
inc
and
cmc
call
pop
xchg
pushf
lods
dec
cmp
mov
das
cld
decl
cmp
dec
mov
cwtl
callw
mov
test
jmp
repnz
cmp
sti
mov
push
xor
pop
popf
or
mov
sub
xchg
shll
xchg
cli
stos
loope
xchg
idiv
decl
dec
xchg
fisttps
std
xchg
aaa
aas
mov
lahf
or
xlat
adc
lret
xchg
rcll
or
pop
inc
mov
xchg
sub
push
into
test
ljmp
scas
outsl
jo
xor
dec
int3
in
push
pop
popa
sbb
cli
push
imul
cmp
stc
inc
pop
sub
xor
nop
inc
pop
sub
out
pop
xor
adc
insb
insl
and
ficomps
cmpsl
hlt
outsb
andl
shr
push
imulb
lret
das
cld
das
hlt
daa
pusha
adc
enter
dec
sub
mov
dec
push
dec
out
lcall
ljmp
push
cmp
lods
mov
mov
sub
inc
sbb
xorb
sbb
jg
mov
sbb
cmp
lods
mov
sar
ljmp
das
dec
add
aam
jmp
data16
loope
icebp
lods
lods
cld
in
out
dec
mov
ljmp
or
jl
loop
add
lcall
das
lock
dec
in
rolb
pop
inc
pop
add
lods
add
test
decl
out
sarl
les
xchg
mov
mov
mov
push
hlt
ret
push
sbb
test
jno
sti
sbb
cs
push
pop
push
sbb
xchg
sbb
js
pop
jp
daa
out
sub
lods
imul
aaa
test
mov
mov
lahf
mov
ja
ljmp
test
lods
pop
stos
std
je
ret
jne
inc
jg
or
mov
dec
leave
iret
and
push
decl
adc
mov
xchg
jno
lds
andb
clc
call
decl
hlt
pop
and
ja
lret
cmpl
js
add
lcall
std
in
sub
fidivrs
or
movsb
inc
xchg
mov
lea
jp
call
loopne
test
ret
fimuls
mov
cmp
popf
call
loopne
mov
mov
lds
shlb
lret
xor
sub
jns
fbld
fildll
rcr
xchg
hlt
test
ja
push
ret
inc
incl
adc
mov
lahf
rclb
mov
mov
sbb
inc
decl
std
add
cwtl
sarl
loope
pushf
lds
leave
fdivl
mov
jmp
stc
int
xchg
mov
inc
das
scas
sub
inc
lret
or
cs
call
mov
sub
std
cmp
xor
cs
repz
sbb
pop
inc
negb
jmp
add
stc
out
xchg
lods
out
test
aam
and
sub
xchg
mov
das
std
incl
rorl
jns
fdivp
mov
negl
pop
sub
xor
jle
fdivs
push
sbb
cltd
cmp
js
in
jmp
int
adc
mov
mov
add
sbb
xor
add
into
loop
mov
imul
dec
push
out
rep
mov
cltd
test
or
in
adcb
incl
sbb
fbstp
pusha
jno
nop
out
sbb
inc
stc
in
mov
xor
mov
inc
hlt
cmp
pop
mov
scas
mov
cmpl
xlat
sbb
and
sub
xchg
jnp
sub
dec
aad
sahf
addr16
call
mov
movlps
xchg
fsubrl
xchg
out
xor
aaa
mov
and
cmp
xchg
call
pop
mov
dec
aas
xchg
imul
xor
out
lds
and
es
cs
inc
ljmp
call
repz
xor
sbb
out
jge
and
int
sub
out
pusha
mov
xchg
cli
cmc
int3
add
dec
cmp
jnp
out
dec
add
sti
lret
in
shl
jl
cltd
inc
sbb
ljmp
jae
fidivl
pop
adc
outsb
add
pushl
inc
mov
ljmp
popf
sbb
xlat
fcoml
sbbl
lret
ljmp
adc
js
mov
ljmp
stos
pop
aaa
jmp
rclb
outsl
xchg
fstps
cmpsl
into
arpl
lcall
or
test
rclb
cmp
mov
int
pushl
cli
xchg
mov
iret
adc
imul
jle
cmc
pop
jno
cmp
jmp
cld
ret
imul
je
adc
daa
stc
dec
mov
rorl
and
mov
push
jge
push
xchg
lods
add
or
cmp
xchg
or
ljmp
out
fnsave
iret
dec
pop
cmc
mov
xchg
mov
decl
cld
in
bound
or
das
js
std
call
mov
loope
addb
jae
add
adc
xchg
cmp
mov
idivb
lea
pop
je
ss
movsl
test
std
xchg
rcll
xchg
cmp
mov
clc
jmp
adc
mov
pop
jae
repnz
fiadds
inc
pop
loop
lcall
mov
mov
sbb
repnz
adc
jmp
lcall
inc
and
xor
and
idiv
sti
or
push
inc
mov
sub
jg
ljmp
adc
int
mov
or
dec
inc
pop
jne
mov
clc
psubb
enter
loopne
scas
filds
inc
jae
jmp
arpl
jg
sbb
mov
stos
pop
insb
jo
and
cltd
mov
shl
call
repz
xor
jp
in
cmpsl
cs
sbb
ljmp
and
push
insb
rorb
movsb
aaa
dec
sub
ljmp
mov
shlb
push
dec
jbe
idivb
jns
or
pop
hlt
ljmp
lea
push
mov
dec
fdivrl
add
xchg
incl
xchg
cmp
or
shrl
and
xchg
lcall
idiv
iret
filds
test
nop
js
jb
out
icebp
mov
mov
adc
mov
decl
push
pop
out
and
lret
lock
push
scas
xchg
jmp
outsb
loop
stc
mov
fstpt
push
or
adc
add
flds
call
lcall
cmp
mov
popf
mov
insl
pop
ficomps
in
jmp
loop
test
sbb
popf
rcrl
jbe
add
sbbl
scas
out
dec
xor
inc
push
loop
aas
in
out
and
xor
call
push
call
push
push
mov
sub
mov
mov
add
pop
add
add
call
pop
mov
ja
incl
ficoml
push
mov
mov
cld
rep
mov
call
pop
ds
jle
mov
adc
enter
ljmp
movb
inc
mov
mov
ljmp
je
mov
aad
jb
push
inc
add
movsl
push
lods
cmp
jae
and
loopne
loop
ret
hlt
sarb
adc
fcmovnu
mov
dec
or
cmp
pop
pop
pop
jmp
mov
ret
pop
sbb
or
ja
and
sbb
jmp
insb
sbb
xlat
fs
lods
mov
cmp
je
and
cwtl
pop
clc
jno
mov
jmp
sahf
jnp
pop
adc
inc
mov
ja
gs
out
fistpl
sub
loopne
jmp
mov
faddp
movsb
lock
addr16
jg
and
out
or
add
cmp
incl
xor
push
add
or
pop
xor
sub
or
sbb
xchg
inc
xor
cmp
sub
into
adc
ds
and
decl
add
sub
sbb
adc
adc
lcall
or
sub
inc
push
adc
dec
sbb
nop
lgdtl
sub
imul
pop
dec
cmp
decl
sbb
data16
insl
pop
add
and
adc
pop
or
or
and
dec
mov
adc
add
popa
hlt
mov
xor
inc
adc
dec
pop
push
stos
push
sbb
push
push
mov
ljmp
cmc
sub
add
or
add
or
add
fistps
nop
sbb
xor
les
enter
lahf
cld
fdivs
or
add
and
pop
cmp
addl
mov
call
xor
mov
push
and
mov
mov
enter
mov
addb
add
popa
add
outsb
sub
addb
xchg
xchg
jb
insl
sti
leave
xchg
insb
push
outsb
popa
jo
push
jmp
push
es
pop
fsubrp
sub
add
imul
and
mov
sub
arpl
push
mov
dec
adc
add
jbe
lock
dec
jl
mov
xlat
add
out
jecxz
xor
clc
add
je
sub
jecxz
inc
inc
inc
into
add
cmpsl
int3
sti
cmpsb
pop
dec
lods
in
insb
mov
in
jg
push
jmp
push
add
lcall
mov
mov
adc
add
testl
fildl
sbb
dec
and
cmp
mov
add
das
add
adc
or
mov
mov
adc
negb
dec
push
inc
add
arpl
push
outsl
add
mov
pop
sub
incl
mov
push
jge
xor
adc
adc
lret
jo
fnsave
jo
pop
push
pop
or
inc
imul
test
pop
insw
cmp
sbb
int
cmp
inc
xor
aaa
mov
sub
inc
xor
mov
and
sbb
insb
lea
jae
sub
outsb
dec
gs
into
push
pop
pop
jmp
xchg
add
or
jo
arpl
imul
add
out
mov
insl
bound
add
jmp
ret
xchg
xor
call
add
inc
add
xor
xchg
sbb
sub
mov
popa
xor
test
dec
inc
push
inc
mov
push
imul
inc
hlt
add
inc
setge
push
inc
sgdtl
negb
shlb
sbb
cmovo
adc
add
addr16
sub
insb
add
and
adc
dec
and
add
adc
addr16
subb
lret
into
data16
cs
xor
out
dec
ss
rclb
pop
outsb
cs
rolb
daa
mov
mov
nop
add
add
add
add
add
add
add
add
int
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
popa
jmp
