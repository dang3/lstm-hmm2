add
add
pop
add
mov
sub
push
push
lea
push
xor
push
mov
clc
cmp
addr16
xchg
loope
imul
jne
jae
cmp
out
cs
insb
repnz
mov
call
or
add
mov
cmp
je
shlb
nop
rolb
sarl
adc
ret
les
xchg
loope
gs
je
dec
enter
jo
scas
adc
lret
gs
inc
int
push
xchg
loope
arpl
outsl
shlb
dec
cmp
sbb
jb
jae
call
dec
xor
ret
pop
mov
cmp
mov
movsb
movsl
cmpsb
repz
repz
test
stos
stos
iret
repz
lods
lods
scas
scas
mov
iret
repz
mov
mov
mov
jecxz
repnz
push
mov
push
mov
cmp
adc
xor
push
pusha
jmp
add
clc
push
cld
push
call
pushl
jo
add
mov
push
mov
je
int3
test
rolb
nop
push
cmp
lea
pushl
sub
jl
pop
test
pop
je
inc
add
cmp
out
adc
add
lea
movsl
test
add
mov
aad
es
or
inc
inc
pop
pop
pop
leave
ret
sub
scas
jo
pop
iret
add
movl
popf
dec
dec
iret
repz
cmp
iret
repz
jb
xor
hlt
cmc
test
pop
xor
push
loope
loop
cmp
xchg
outsb
in
in
out
out
ret
outsb
call
ja
jo
sbb
je
lea
cmp
mov
pop
in
cmp
push
aas
or
pushf
nop
and
push
push
mov
mov
inc
mov
push
xchg
dec
cmp
dec
roll
ret
lds
add
or
push
mov
cmp
mov
jmp
cs
add
sahf
and
jo
jno
mov
mov
sub
sub
push
sahf
xor
cmp
jb
mov
cmc
inc
jno
jo
mov
jo
push
mov
jbe
rclb
je
mov
push
loopne
sub
shr
pop
adc
repnz
add
cld
out
leave
cmp
scas
xor
call
aam
arpl
imul
fsubrs
fidivl
cs
mov
insb
adc
jp
rolb
lock
and
inc
test
cmp
jae
repz
jbe
repz
popa
js
jns
out
mov
inc
jnp
mov
insl
cmpsb
mov
lds
sbb
ret
ret
inc
xorl
cmp
inc
xchg
push
fcomps
push
xchg
push
shl
xchg
popa
mov
je
adc
mov
cmp
lea
nop
push
xchg
popa
xchg
jbe
gs
xchg
loope
dec
xchg
insl
xchg
popa
xchg
addr16
gs
sbb
cltd
push
lcall
insb
fsubrl
loop
lahf
cmp
jbe
je
add
les
repz
enter
jo
leave
jne
jae
push
int3
je
popa
es
xchg
jb
je
jne
jo
cmp
cwtl
rolb
pop
sahf
addr16
icebp
mov
loope
mov
cmpsb
ja
addr16
outsl
jae
push
ja
dec
mov
dec
loop
and
xor
fidivrl
jecxz
testb
adc
cmp
inc
push
push
rorb
scas
push
data16
shr
movsb
pop
imul
nop
push
add
popa
pop
addr16
cmp
into
gs
das
pusha
push
mov
fs
in
push
pop
inc
sub
push
sub
sahf
push
mov
lea
xor
push
or
mov
xor
rorb
stos
inc
xchg
fistl
rcll
add
xor
out
bnd
jae
mov
jb
xchg
cmp
xor
out
in
or
lea
insb
repz
sub
push
insb
add
lea
cmp
jg
gs
pop
push
or
sbb
aam
mov
jmp
add
and
andb
rorl
in
in
inc
shll
in
insb
repz
mov
outsb
je
enter
mulb
jno
sbb
outsb
clc
je
cs
sti
js
pusha
xchg
gs
fnsave
push
les
push
pop
lods
cs
and
jne
pop
adc
imul
pop
xchg
add
shrb
rorl
cmp
out
xchg
loope
push
icebp
popa
bnd
jo
push
repz
cs
fs
cmpsl
mov
idiv
clc
cmp
dec
mov
addr16
cmp
fidivs
jecxz
dec
sbb
fs
jecxz
inc
sbb
xchg
gs
out
out
cmp
call
outsl
fsts
cltd
jecxz
mov
enter
sbb
mov
add
es
xor
lahf
vpshufd
lds
cmp
repz
enter
int3
repz
repz
iret
rcl
iret
repz
rcl
aam
sbb
adc
xlat
pop
fdivs
movzbl
xor
xchg
add
xchg
jmp
cmp
jne
cmpsb
cltd
mov
int
push
int3
add
xor
xchg
out
out
xchg
out
push
rclb
xchg
push
pop
adc
push
and
aam
test
mov
test
sahf
out
sahf
xor
xor
sbb
insb
mov
addr16
mov
outsl
cmp
jnp
fsubs
arpl
mov
fildl
pop
push
cmp
mov
mov
shll
pop
xchg
xchg
pop
add
push
sbb
add
ret
loope
lods
rol
mov
xchg
mov
xchg
ret
dec
les
mov
sbbl
leave
in
pop
adc
outsl
and
decl
cmp
xor
test
dec
sbb
pushf
push
jo
sahf
cmp
sbbl
mov
jns
out
inc
add
test
fisttpll
mov
popa
jmp
lcall
lret
cmp
in
push
out
out
loope
ret
loope
jmp
adc
xor
sbb
out
fstl
sbb
loope
cmp
mov
stc
loope
loop
sub
cmp
sub
push
hlt
mov
lods
inc
loope
xchg
div
testl
stc
shlb
mov
in
dec
rcrl
loope
and
lock
inc
icebp
into
enter
push
enter
add
mov
test
mov
dec
imul
mov
fcoml
adc
and
int3
push
sbb
xchg
sub
into
mov
xchg
mov
rcl
rol
sbb
cmp
dec
sarl
jne
push
push
pop
mov
sbb
je
ljmp
xchg
insb
mov
out
cmp
cmp
and
jecxz
cmp
push
aas
aad
mov
mov
shr
dec
xchg
inc
enter
test
lock
sbb
mov
fs
adc
push
xchg
mov
rolb
rcpps
inc
imul
pusha
push
push
mov
cmp
arpl
adc
add
in
cmp
add
xchg
gs
cmc
loop
cmpl
bound
and
xchg
sub
mov
push
pop
push
push
push
dec
mov
pop
sub
sub
leave
xchg
stos
cmpsb
sbb
inc
stos
dec
xor
push
rclb
lret
test
pop
push
inc
mov
pop
push
lret
loopne
cmp
inc
and
mov
popa
arpl
in
sub
ret
jno
out
jmp
in
jae
sbb
xchg
je
insb
out
outsl
lock
xchg
loope
imul
repz
jne
cmp
mulb
out
push
sbb
pop
xchg
js
fwait
adc
or
xor
add
lea
mov
sbb
mov
mov
sbb
pop
mov
pop
jnp
mov
iret
xorb
jnp
add
int3
rorl
mov
stos
aad
sbb
jb
inc
mov
mov
sti
jl
pop
sbb
push
or
xor
pop
push
sub
add
orl
mov
xor
jae
inc
mov
shrb
mov
loope
push
xchg
or
mov
mov
adc
adc
mulb
cmp
jl
cmp
and
pop
jmp
and
add
push
mov
inc
mov
addr16
cmp
outsl
stos
and
dec
leave
mov
mov
or
and
jae
popa
arpl
repz
outsb
cmp
ret
jmp
cmpsl
jo
sbb
jne
cmp
xchg
outsb
je
into
push
fcomi
call
enter
sbb
push
jmp
outsb
xchg
sbb
and
mov
cs
jne
adc
cmova
cmp
sbb
sbb
sbb
mov
imul
pop
push
mov
xchg
and
fwait
icebp
pop
push
mov
mov
mov
pop
dec
jg
mov
mov
jl
cmp
inc
inc
sbb
pop
aam
or
mov
mov
mov
cs
mov
fmull
mov
add
pop
pop
xlat
jb
mov
mov
inc
mov
sbb
pusha
sub
sbb
or
inc
mov
sub
push
add
cmp
xor
adc
aaa
dec
lret
jmp
adc
and
sub
lds
xor
cmp
mov
fdivl
mov
pop
adc
in
shrb
push
sub
pushf
adc
xchg
add
sti
inc
push
call
mov
leave
xchg
adc
adc
aas
adc
push
mov
mov
mov
inc
std
xor
test
xor
pmulhuw
stos
jmp
jle
push
addr16
mov
mov
lret
inc
lea
ljmp
cmpsl
int3
xchg
sbb
xor
test
sbbb
mov
cld
push
movsl
fwait
addr16
jb
nop
addl
mov
stos
lods
faddl
mov
mov
fs
pop
cld
push
push
jmp
and
cltd
xor
push
popa
push
int
call
bound
jecxz
inc
movl
push
loop
into
ret
cmp
dec
cmp
mov
push
out
cmp
push
mov
out
inc
inc
or
jns
push
inc
cmp
cmp
and
mov
inc
inc
jecxz
into
arpl
dec
outsb
dec
push
ss
fs
xchg
gs
loope
sbb
js
mov
mov
mov
pop
sbb
xchg
cs
mov
xor
dec
push
mov
jns
popa
imul
je
inc
aam
aad
push
or
repz
jae
popa
imul
mov
cmp
mov
xor
xor
cmpsl
test
stos
cmp
sbb
ret
lods
fimuls
jns
push
and
pushf
and
mov
cltd
and
or
jns
es
daa
mov
vmovapd
arpl
in
sub
sub
sub
cs
das
fcomps
xor
xor
cmp
xor
mov
cltd
xor
jle
or
les
leave
fadds
sti
pop
or
sub
jecxz
or
or
lds
or
je
movups
adc
mov
jno
adc
adc
pop
xor
adc
mov
bound
sbb
adc
sbb
xchg
nop
adcb
sahf
arpl
jae
jno
jp
xor
jb
mov
adc
xchg
mov
jo
arpl
jb
push
xchg
xchg
outsl
xchg
arpl
jo
xchg
jae
xor
fimull
mov
push
popf
pop
inc
mov
loopne
test
iret
mov
cmc
mov
and
mov
mov
popa
xor
mov
cltd
cltd
mov
xlat
ret
fsubrs
std
imul
cwtl
cmp
insl
ret
mov
push
outsb
fcoms
jae
sbb
xchg
xor
xor
add
loope
fbld
loope
aad
or
shl
jno
xlat
push
je
dec
cmp
ret
outsb
les
vmovdqu
arpl
sbb
enter
lret
out
mov
in
imul
ds
ds
popa
insb
iret
ds
jne
jns
jmp
popl
jle
jl
mov
les
push
dec
dec
bound
ljmp
push
push
lock
es
arpl
mov
push
push
pop
insb
dec
arpl
pop
iret
xchg
js
pop
aaa
cs
dec
adc
jg
je
push
fprem
cmp
je
pop
movsb
jo
inc
cmc
mov
sbb
and
mov
and
pop
es
outsb
inc
out
pop
push
xor
movsl
lds
push
sbb
data16
xlat
pop
clc
jne
xor
rol
int3
cmp
xchg
outsb
es
vsubsd
jne
and
lods
add
push
jne
push
dec
pushf
sbb
test
jmp
push
das
test
mov
jmp
fadd
sti
call
clc
push
ret
mov
pop
push
sbb
inc
cmp
and
add
ja
mov
lds
sti
les
xchg
shll
pop
pushf
xchg
cld
and
lret
xor
mov
jbe
inc
lret
arpl
call
fcompl
adc
fimull
loopne
adc
inc
mov
pop
sahf
movsb
inc
pop
hlt
mov
shlb
in
lods
add
dec
dec
loop
dec
bound
icebp
adc
int3
lods
outsb
push
sti
movsb
push
pop
loop
add
xchg
int3
ret
xor
inc
pushl
cmp
pop
or
ds
test
popf
sub
mov
adc
nop
add
add
push
pop
fisttps
data16
jmp
cmpl
fadds
test
add
or
add
movsb
push
sbb
jnp
imul
lock
hlt
adc
mov
loopne
loope
faddl
mov
ds
aam
add
xchg
mov
bound
jge
jb
dec
dec
or
push
or
cmp
dec
sub
xor
pop
jne
dec
xor
push
insb
inc
mov
push
ret
repnz
push
push
ficompl
adc
pop
jb
adc
cmp
pop
mov
and
cmp
sbb
push
out
pop
mov
es
clc
je
pushf
mov
sub
push
shlb
jmp
fsin
adc
leave
push
pop
and
jne
pop
xchg
xchg
icebp
jae
inc
repnz
jb
out
sahf
out
div
clc
sub
push
sahf
stc
cli
sub
out
in
lea
jb
xchg
ja
outsl
jne
fpatan
cmp
outsb
outsl
mov
test
inc
jmp
xor
inc
push
movsl
or
mov
inc
mov
push
pop
addr16
gs
mov
inc
fdivs
jnp
stc
mov
repnz
cmp
sbb
in
xchg
sahf
push
xor
sbb
push
stos
das
or
inc
xchg
dec
addr16
test
mov
cmc
loop
inc
cmc
hlt
push
dec
inc
push
adc
mov
aam
xor
xchg
pop
sti
in
jne
mov
add
or
lret
test
mov
dec
cwtl
sbb
stc
pop
push
lcall
dec
dec
sub
gs
lods
pop
pop
gs
dec
loope
xchg
push
jg
sti
shlb
icebp
cld
lock
xchg
nop
sti
in
sti
pop
xor
dec
push
inc
aad
push
bound
or
add
insb
rclb
pop
int
nop
xor
push
repnz
push
ljmp
mov
xor
stc
pop
adc
pop
icebp
xor
cmp
insb
pop
dec
adc
add
mov
mov
push
imul
sahf
out
cmp
jns
out
outsb
fs
gs
cmpsl
in
jae
jns
cmovne
fwait
ret
and
push
push
jne
mov
call
push
sbb
push
repz
jnp
add
adc
jnp
arpl
push
add
loopne
cli
push
sti
push
mov
or
pop
push
mov
jo
sub
adc
mov
add
jns
xchg
pop
jne
adc
inc
and
inc
push
std
stc
decb
xchg
std
shr
push
add
pop
mov
lds
adc
mov
add
add
ja
sbb
fsub
adc
adc
jl
push
xor
hlt
inc
push
loop
push
cmc
dec
divb
jno
testl
xchg
pushf
ss
xor
ljmp
test
test
jb
out
sahf
outsb
gs
jb
sahf
out
imul
stos
out
rorb
jl
sbb
je
dec
xchg
xchg
gs
cmp
push
gs
cmp
fcmovnu
fucom
adc
aam
xchg
ret
icebp
cmp
xchg
xchg
xchg
cwtl
push
cltd
gs
xchg
popf
sahf
enter
lahf
mov
es
movsb
js
cmpsb
xor
xor
cmc
jmp
test
gs
xchg
in
jno
jne
gs
cmp
jae
je
repz
push
xchg
shlb
shl
shll
repz
outsl
outsb
outsb
arpl
dec
outsb
test
andl
addr16
ret
xor
jbe
fsts
in
or
mov
ror
cmp
aas
lds
cmp
dec
clc
and
stos
and
enter
jno
aam
fsub
clc
sub
mov
mov
push
cmc
movsb
rorb
adc
in
pop
push
push
or
push
hlt
add
inc
sub
mov
or
das
add
pop
das
push
lea
inc
mov
push
and
clc
inc
sbb
outsl
inc
sbb
rclb
push
fs
fwait
inc
inc
fsubrs
sbb
dec
or
loope
leave
stos
add
shlb
scas
sbb
and
jno
add
push
push
repz
add
negb
jle
sub
pop
or
and
iret
inc
jge
push
jbe
jp
add
push
loop
addb
jl
and
loope
adc
and
lea
push
ja
ds
sahf
adcl
cli
jne
mov
inc
int
xor
and
mov
or
adc
addr16
cmpl
aad
cmp
mov
add
push
mov
test
gs
shrb
push
and
andb
mov
mov
stc
dec
push
sbb
jge
les
xchg
ljmp
stc
or
popf
xor
or
rorl
dec
jns
out
inc
jb
insl
sahf
imull
cmp
ret
cmpsb
jp
imul
popa
stos
push
repz
xor
imul
outsl
ja
insb
popa
sbb
sbb
movb
loopne
test
and
jae
cmp
icebp
pop
inc
jb
push
sbb
jmp
iret
repz
popa
js
push
xor
push
mov
xchg
loope
fstp
mov
pop
mov
cmp
pop
nop
pop
xchg
push
xchg
push
xchg
inc
push
xchg
loope
jb
popa
xchg
insl
xchg
gs
dec
sbb
push
cltd
lcall
pushf
pop
popf
xor
call
push
mov
mov
inc
enter
mov
mov
lcall
mov
jle
outsl
jb
jb
out
out
fs
imul
outsl
into
xor
test
in
filds
lods
mov
popl
enter
popf
mov
dec
mov
xlat
in
pop
out
mov
jne
in
movsb
aam
push
xor
xchg
stos
cmp
jne
cmp
jno
loopne
push
push
push
push
dec
inc
mov
inc
mov
jmp
mov
nop
cmp
je
movsbl
or
inc
test
mov
mov
mov
ret
ds
lds
daa
into
adc
xor
lds
push
sub
sub
xor
repz
push
cmp
xchg
mov
scas
mov
mov
rolb
pop
mov
shr
inc
add
mov
adc
in
cmp
and
inc
or
mov
sahf
aas
push
sub
push
cmp
mov
outsl
outsb
cmp
jo
jae
insl
xor
repz
es
and
jae
insl
bound
and
xchg
sub
sbb
lds
xchg
pop
or
pop
inc
xchg
scas
test
sbb
ret
popf
jge
or
xchg
iret
cli
xchg
lahf
and
and
mov
out
add
sahf
mov
divl
jo
mov
jb
jns
outsb
je
jb
sahf
out
sahf
arpl
jae
sub
mov
xchg
jne
hlt
lret
xor
dec
sahf
out
mov
jb
or
loope
arpl
jae
jae
jo
sbb
push
loope
loop
cmp
xchg
jecxz
in
in
out
test
loope
je
gs
outsl
cmp
jns
in
fs
lock
mov
cmpsb
xor
int3
adc
xchg
inc
int
into
je
inc
and
roll
out
aam
aad
scas
and
xchg
push
xlat
fsubrs
in
pushf
jp
jbe
frstor
pop
or
lods
or
xchg
mov
push
adc
std
test
and
shrb
push
enter
push
inc
sbb
inc
inc
sub
add
cmp
cmp
fmull
js
and
xor
je
inc
sbb
js
imul
popa
insb
push
hlt
push
pop
jbe
adc
das
cmp
insb
cwtl
jbe
scas
push
mov
daa
sbb
lods
sbb
lea
shlb
and
inc
push
aaa
push
icebp
icebp
arpl
icebp
pop
imul
jns
gs
jb
or
mov
adc
jae
and
xchg
mov
outsb
je
inc
push
mov
mov
dec
mov
nop
into
lds
or
mov
mov
xchg
xchg
mov
xchg
cltd
mov
repnz
test
jo
idivb
sbb
clc
flds
pop
adc
inc
add
shll
loop
pop
in
sub
cmp
imul
pop
jb
jo
push
idivl
mov
loope
jne
cmp
xchg
cmpsb
dec
out
adc
iret
mov
iret
repz
cmp
jb
je
adc
jns
pop
arpl
dec
xor
out
mov
dec
jo
repz
out
xor
jmp
fists
in
xchg
aad
iret
out
push
xor
inc
adc
aad
popa
jmp
mov
jns
push
outsl
arpl
enter
inc
daa
mov
and
cmpsl
out
call
jns
out
outsb
je
arpl
sahf
jb
gs
repz
int3
int
out
movsl
xchg
pusha
jl
xor
cld
stos
xchg
adc
ss
nop
xor
test
dec
in
dec
dec
pop
and
xchg
test
or
stos
outsb
xor
mov
mov
add
and
bound
das
cmpsb
cwtl
popf
hlt
mov
ficompl
ljmp
sbb
out
aas
sub
dec
jmp
fidivrl
inc
adc
sub
andb
daa
push
sub
pushl
aas
fs
sahf
out
cmp
out
jns
xor
repz
pop
cmpsl
insl
dec
cmp
ret
les
mov
pop
xchg
pop
push
iret
jecxz
shlb
rcl
rcl
inc
roll
mov
inc
es
mov
and
mov
jecxz
xor
out
fs
xchg
sahf
xlat
cmp
jne
out
lock
jo
sbb
xor
cmp
cmc
es
xchg
mulb
clc
ss
cmp
cli
and
stc
push
inc
inc
cmp
in
test
repz
jecxz
push
push
repnz
dec
jb
or
xchg
lds
push
les
movsb
mov
jb
loop
sbb
stos
int3
push
fprem
shr
cs
hlt
mov
popa
pop
or
pop
pop
test
xchg
mov
pop
addl
pop
push
cmp
add
cmp
inc
sbb
cwtl
add
fxch
stos
imul
lret
jae
out
sahf
gs
popa
je
inc
stc
jns
pop
jne
into
repz
outsb
je
out
mov
push
jle
imul
push
stc
gs
jb
jbe
push
imul
jae
add
dec
adc
sti
jle
loopne
out
mov
jecxz
in
jmp
jb
jo
out
inc
lock
outsl
xchg
test
loope
jne
pop
hlt
sub
push
pop
adcl
and
aam
push
push
sarl
mov
jne
jbe
push
pop
lods
push
pop
aam
sbbb
mov
cs
aad
add
nop
hlt
push
xor
mov
lahf
jbe
idivl
les
aam
push
mov
push
mov
push
and
mov
mov
aaa
jl
push
imul
sbb
or
mov
fwait
sbb
iret
call
xor
push
and
in
dec
inc
mov
inc
mov
and
mov
mov
and
inc
rolb
sub
sbb
loope
lret
mov
movsb
jp
rcr
pushf
xor
pop
mov
push
push
and
sbb
ret
punpcklwd
int3
jge
je
xor
data16
push
cld
push
xchg
push
push
xchg
add
jmp
in
mov
dec
mov
clc
mov
mov
cld
movsb
lods
popf
xor
pop
mov
out
cmp
ja
push
sub
jbe
hlt
je
rclb
in
in
dec
lret
push
movsb
movsl
sbb
das
push
add
push
pop
sub
jle
clc
or
cmp
ja
push
xor
pop
divl
lcall
cld
dec
hlt
adc
pop
lock
xor
mov
cmpsb
xorl
cmp
jl
lods
rcrl
cmp
pop
xor
mov
stos
and
xchg
cmp
mov
cmpsb
clc
roll
mov
fnstenv
dec
aaa
fcoml
mov
jae
addr16
sbb
inc
inc
pusha
jae
enter
mov
mov
je
pop
ret
insl
subl
notb
pop
ret
orb
inc
add
pop
push
mov
bound
loopne
hlt
xchg
adc
mov
call
push
repz
push
insb
jno
pop
xor
jo
add
cmp
dec
ljmp
lock
sbbl
arpl
mov
push
mov
mov
mov
lods
fstpt
inc
mov
loopne
push
in
sub
int3
int
incl
jae
stc
jns
insb
push
jb
les
lds
inc
cmp
addr16
in
push
jl
imul
orb
decl
fadds
test
sub
xlat
movb
mov
sub
adc
ret
sub
mov
movb
adc
inc
into
inc
add
ret
popa
test
lea
inc
xor
add
enter
add
push
in
add
pusha
rol
jmp
ret
mov
ds
lock
orl
cmpsl
rcl
xchg
fs
fiaddl
fcmovnb
icebp
aam
in
sbb
sti
push
add
push
push
xor
or
lock
je
or
std
xchg
stos
stos
push
mov
or
shll
jne
scas
dec
mov
jecxz
add
mov
ret
cld
xchg
push
mov
add
sbb
dec
cs
stos
mov
mov
int
test
push
push
cmp
and
xchg
aad
dec
jae
mov
push
clc
add
loope
xor
mov
mov
cs
scas
xor
push
sbb
mov
sbb
sub
jle
mov
and
in
mov
test
je
push
ret
mov
pop
sbb
push
insb
sbb
cwtl
push
dec
into
push
dec
push
push
xchg
ss
mov
cmp
or
mov
in
mov
sbb
rclb
lret
in
lret
pop
jo
xchg
inc
push
push
hlt
arpl
je
mov
loope
imulw
and
outsb
cli
cs
gs
js
fs
outsl
gs
inc
mov
xor
push
hlt
inc
push
lret
adc
inc
popf
pop
jne
repnz
ret
xor
out
xor
jns
jp
push
gs
pop
sahf
fdiv
repz
sub
or
sbb
pop
jmp
xor
add
aam
adc
jge
jne
cmp
iret
pop
out
xor
sub
add
fdivs
mov
jns
pop
push
flds
popa
cmpsb
cwtl
cmp
mov
test
out
decb
shlb
aam
fsubs
cmpsl
in
xchg
pop
pop
inc
lock
inc
mov
cmp
and
mov
popf
adc
sub
jmp
outsb
push
mov
repz
add
add
movsb
popa
aam
ja
repz
mov
cmp
iret
xor
fs
pop
dec
sbb
jecxz
mov
iret
out
arpl
imul
repnz
in
dec
je
loopne
and
pop
xchg
adc
push
inc
or
mov
and
push
test
inc
sahf
int
cmp
sub
and
xor
jp
mov
add
jno
dec
dec
fimull
pop
mov
or
pop
mov
push
push
aaa
push
aam
or
pop
dec
push
sbb
aaa
adc
fidivs
ret
xor
inc
add
mov
sahf
sbb
sbb
add
ret
sbb
std
push
bound
xor
popa
je
out
xor
jno
out
insb
push
or
xor
push
insl
add
dec
sub
jns
jae
outsl
sahf
lds
enter
sbb
xchg
mov
and
inc
mov
sub
adc
repnz
mov
arpl
gs
pusha
sahf
out
xor
mov
sub
cmp
lock
mov
mov
je
dec
mov
sbb
insb
mov
xchg
mov
je
xchg
or
sub
pop
push
mov
sub
sub
js
xchg
or
fisubrl
jmp
xor
and
sub
mov
out
or
cmp
repz
jo
mov
cmp
clc
cs
fs
insb
sti
mov
cmp
ret
popf
cmp
jp
push
outsl
xor
iret
repz
testl
outsl
imul
sahf
in
test
jbe
xchg
std
jp
mov
inc
addr16
popa
jb
popa
sahf
insb
jne
push
in
lds
cltd
lcall
push
pushf
jae
je
push
lahf
outsl
mov
loope
mov
and
cmp
ljmp
lods
push
lods
jns
fisttpll
int3
mov
out
fwait
arpl
out
cmpsb
mov
mov
int
jns
jb
jns
das
and
push
jb
mov
out
arpl
mov
imul
mov
xchg
push
inc
fildl
lds
call
cmp
out
inc
add
push
xor
cs
orb
fcomps
rclb
add
imul
divl
xchg
test
mov
pop
nop
jle
rolb
mov
fsub
pop
push
add
add
cmpw
push
add
jne
mov
add
cmpl
xor
mov
inc
cmp
adc
adc
cmp
add
dec
iret
je
mov
cmp
je
ret
imul
ja
mov
jno
push
push
in
jae
daa
add
mov
adc
cmp
add
sbb
out
cmp
jb
sbb
pop
adc
bound
je
decl
incl
nop
pop
mov
adc
mov
jmp
imul
roll
push
adc
cwtl
pop
repnz
xchg
shl
fcoml
add
aam
add
in
shll
adc
sbb
adc
pusha
push
adc
push
fmul
in
lcall
sahf
rcrb
lds
push
inc
push
push
inc
or
sbb
sub
fmuls
lds
xchg
and
popa
aaa
or
or
ja
or
les
sbb
je
or
inc
rorb
test
incl
or
movsb
fadds
ror
add
adc
and
sub
push
xor
hlt
push
cmovno
dec
rcrb
xchg
mov
pop
movsl
icebp
fsubrl
mov
outsb
aas
in
adc
xor
jns
out
lock
rorb
loop
je
inc
dec
sti
lds
dec
jo
cwtl
in
outsb
push
insb
push
test
rcl
dec
leave
leave
cwtl
sbb
aas
es
push
gs
repz
dec
outsb
subw
outsl
outsb
sahf
inc
into
add
adcb
movsl
repnz
gs
int3
jle
popl
mov
in
push
pop
cwtl
dec
cmp
repz
outsb
gs
jle
repz
insb
loope
sbb
mov
movsl
dec
cmpsb
popa
in
test
dec
bound
into
mov
js
lea
call
mov
int3
lods
adc
mov
mov
sbb
pusha
inc
iret
and
popa
sbb
adc
std
inc
rclb
xor
and
mov
mov
mov
inc
out
xor
mov
xchg
mov
repnz
ret
test
and
in
fdivs
xchg
adc
xor
inc
ss
cltd
push
jne
and
sti
orb
dec
push
inc
mov
inc
sub
push
push
xchg
lds
les
inc
imul
mov
xchg
xor
addr16
xor
push
sbbl
adcl
sbb
leave
orb
or
hlt
call
jne
icebp
jl
or
arpl
or
lcall
sub
mov
nop
push
rcrl
dec
xor
movsbl
cmp
dec
adc
lock
mov
or
add
adc
je
mov
mov
test
je
mov
inc
inc
imul
andb
popa
mov
cmp
fwait
test
je
and
or
xor
or
mov
inc
mov
cmp
or
mov
push
inc
cmp
add
cmpb
mov
adc
inc
pop
adc
jmp
enter
fs
jmp
cmpsl
flds
pop
xchg
in
jl
or
in
in
push
mov
mov
andl
jmp
sbb
sub
mov
cmp
mov
push
cmp
fs
mov
pop
jb
xor
aaa
inc
aaa
add
test
xor
subb
inc
inc
jmp
jle
enter
inc
mov
pop
adc
sbb
xor
inc
inc
test
jne
pop
mov
sbb
pop
add
sub
movsb
lods
daa
add
andb
lea
push
or
in
out
push
push
roll
icebp
mov
dec
jne
xor
arpl
ds
and
hlt
inc
inc
int
cmc
inc
sbb
mov
dec
and
fsubrs
xchg
and
push
mov
out
inc
pop
add
sub
rcrl
pop
push
lret
call
mov
sarl
push
jns
jne
sbb
insl
cmp
xchg
inc
imulb
jb
gs
xchg
loope
arpl
je
outsl
cld
jb
jns
xor
or
inc
push
shll
inc
rclb
sbb
xchg
imul
mov
add
dec
lea
xor
sbb
cwtl
enter
call
mov
mov
or
inc
dec
idivl
jae
mov
jmp
add
cmp
jae
jbe
sbbb
and
mov
pop
sbb
mov
dec
cmp
mov
add
insl
and
pop
test
fwait
out
pop
orl
notb
cmp
jb
jmp
mov
sbb
loopne
lea
movzwl
or
and
orl
add
cmp
jae
cmp
jb
mov
and
je
cmp
and
pop
loope
inc
add
andb
xor
add
mov
sub
jg
and
xchg
xchg
mov
andb
movsb
and
sub
cmp
xor
add
lahf
xor
or
push
inc
dec
je
nop
jnp
inc
xchg
or
mov
push
leave
and
divl
addr16
xchg
sub
bound
sbb
clc
jb
jbe
push
xchg
jp
rorl
jle
xchg
adc
sub
cld
xchg
mov
add
sti
adc
fwait
dec
cmp
movsb
sarb
pop
popa
or
sbb
jne
movsl
jp
hlt
or
sub
and
sbb
insb
fldt
sbb
movsl
push
leave
movsl
mov
sahf
mov
inc
push
mov
push
sarl
icebp
xlat
xchg
and
repnz
and
inc
and
imul
push
xlat
jo
imul
fdivs
cmp
cwtl
imul
push
add
clc
push
inc
sbb
jne
dec
dec
aam
add
clc
push
mov
sub
cwtl
adc
push
loope
shll
dec
cmp
xchg
jl
fnstsw
icebp
popf
in
lock
adc
cmpb
or
sbb
sub
cmp
or
and
mov
subl
mov
roll
popa
cmc
sub
cltd
lahf
out
jge
push
pop
ljmp
mov
stos
jecxz
xor
mov
and
adc
sub
cmp
mov
mov
sti
rolb
jp
xchg
das
dec
loopne
test
sub
push
inc
mov
mov
loope
jne
addr16
xchg
cmp
imul
aas
out
gs
arpl
xlat
mov
xor
data16
jae
cmpsl
jle
sbb
testb
or
push
fs
push
pop
add
adc
mov
xor
push
adc
mov
push
sbb
or
jne
jmp
sarb
mov
dec
jl
jmp
jns
push
mov
push
xchg
mov
mov
mov
mov
ret
loope
cmp
jae
inc
mov
test
and
lea
stc
or
cmpsl
pop
adc
ret
test
cmp
insb
test
aam
in
xor
cwtl
decb
cli
mov
xchg
std
sahf
out
ljmp
out
insb
insb
inc
popa
arpl
sti
inc
pop
cmp
lcall
mov
mov
out
inc
sub
icebp
xchg
nop
cmp
cmpsb
aam
and
dec
lahf
insb
out
adc
popf
int
inc
jae
cs
ljmp
pop
sbb
xchg
stc
add
cmp
add
push
mov
cwtl
lahf
push
ret
call
jne
and
jge
mov
clc
and
sbb
outsb
mov
dec
js
test
mov
cmpsl
inc
out
inc
fstpl
lds
jns
jge
hlt
and
lret
xchg
push
je
push
and
mov
inc
cmp
ret
out
jns
inc
icebp
imul
insb
inc
adc
cmp
jmp
jns
fcmovu
faddl
push
fnstsw
fisttps
in
lods
aam
subl
flds
mov
xchg
pop
xor
inc
aaa
cmp
test
push
sbb
lcall
cmp
imul
pop
leave
pop
decl
stc
lcall
dec
nop
cmp
in
mov
and
es
test
insl
push
cmp
test
fimuls
push
loop
sub
arpl
mov
cmpsb
int3
jmp
clc
and
addr16
int3
pop
divb
fstpl
or
mov
ret
xchg
dec
jo
ret
loope
dec
repnz
out
push
repz
pushf
cmp
js
jl
loope
sub
cmpsl
push
cmc
mov
and
in
or
out
roll
add
jb
jne
les
xchg
dec
jbe
jo
cmp
mov
push
je
xchg
loope
je
je
je
jne
sbb
xchg
jne
jne
xchg
loope
jne
jne
jne
jne
je
cmp
call
je
je
pop
adc
popa
movsb
mov
jo
sbb
and
sbb
sub
add
jb
mov
loop
xor
inc
repz
repz
ljmp
iret
mov
cmp
repz
cmpb
pop
jno
iret
repz
adc
jbe
sbb
add
in
xchg
loope
jne
jne
jbe
jbe
jbe
pushl
push
int3
jne
add
aas
xor
inc
pop
push
inc
pop
cltd
iret
add
jae
insl
jbe
insb
xor
sbb
mov
add
insb
outsl
jae
fs
cmp
and
insb
add
add
add
add
jo
outsb
add
je
xor
xchg
insl
mov
or
jb
roll
xchg
add
jo
add
dec
outsb
cmp
jo
test
jb
outsb
je
add
out
cmpsb
add
outsb
fs
xor
insb
rolb
je
insl
cmp
stc
out
hlt
lahf
ja
dec
shll
pop
dec
popa
jecxz
push
mov
or
imul
lret
adc
pop
arpl
je
push
jb
ret
daa
loopne
xor
aad
fimuls
ja
mov
jo
jb
jbe
dec
push
pop
mov
push
push
cs
out
inc
test
add
dec
bound
arpl
add
es
inc
insb
push
add
cmp
int
pop
ret
or
add
inc
or
leave
push
outsl
imul
mov
addr16
imul
xchg
mov
imul
cs
inc
dec
xor
es
enter
ror
insb
dec
push
sbbb
jb
add
fs
jns
push
aaa
int3
test
push
add
pop
outsb
addl
enter
cmp
push
pop
pop
sti
sub
jne
mov
add
or
cli
push
push
mov
shrl
jns
mov
pop
les
out
inc
pop
push
imul
arpl
dec
rorb
push
jbe
push
cs
outsl
data16
and
lock
push
outsl
xor
test
add
inc
and
jl
lcall
push
mov
jne
outsl
fs
jmp
inc
xor
cmpsl
push
call
sbb
dec
inc
jge
out
push
dec
inc
dec
lods
fstps
sub
or
cmpsl
movsb
push
fdivs
mov
std
add
push
sbb
popa
dec
popa
cmpsb
sbb
mov
inc
ds
dec
je
outsl
outsl
adc
js
sub
pop
inc
mov
add
push
add
movsb
pop
mov
xchg
loope
add
imul
jbe
jbe
cs
adc
fsubl
jne
jns
jb
xor
xor
or
push
dec
and
jae
and
addr16
ret
mov
ja
jae
add
addr16
pop
cmpsl
xchg
clc
cmp
std
jmp
sbb
mov
sub
test
gs
shlb
jne
xor
sub
xlat
mov
outsb
dec
jo
push
and
sub
lods
push
scas
or
push
rol
xchg
mov
movb
je
outsl
push
pop
add
je
inc
insb
sub
stos
jae
sbb
or
daa
add
add
mov
xor
daa
jns
add
sub
pushf
or
or
add
ss
aad
sbb
cltd
imul
lcall
mov
push
out
lea
adc
pop
shrb
ja
push
or
add
jns
out
cmp
xor
push
lret
jb
add
pop
sub
jmp
mov
daa
iret
add
mov
insb
mov
and
or
pop
shl
mov
or
and
out
or
scas
mov
add
addr16
jmp
insb
xchg
adc
mov
or
sub
adc
fnstenv
push
push
jmp
or
and
rol
jnp
add
dec
xchg
add
xor
cltd
dec
adc
daa
add
pop
add
add
cmpsl
in
dec
adc
sbb
addr16
int3
mov
add
pop
arpl
mov
fucomp
enter
add
jmp
cmpsb
loopne
and
xchg
popf
sbb
pop
adc
or
mov
push
xor
sub
mov
sbb
push
adc
add
add
ss
movsb
or
in
cmp
and
push
or
ja
sub
outsb
sub
dec
jbe
jg
adc
or
mov
xor
sub
outsb
mov
add
das
add
or
jnp
jno
inc
in
sub
add
and
cmp
clc
xlat
out
jl
xchg
push
inc
adc
or
pop
pop
ret
bndstx
or
jmp
pop
jbe
idivl
sub
lret
pusha
xor
jl
pop
jns
mov
add
add
lods
sub
xor
into
mov
push
pop
cmp
in
cmp
repz
repz
and
test
sub
xchg
sbb
loop
xchg
icebp
xor
test
cltd
fucom
mov
and
push
pop
sub
leave
es
jecxz
mov
and
cs
jnp
sbb
je
roll
insb
xchg
and
xchg
sub
push
xchg
pop
mov
fsubl
dec
jae
push
add
mov
bound
in
es
lret
cmp
inc
fstps
mov
adcl
push
test
jo
xor
icebp
ret
fstl
lret
rclb
adc
sbb
iret
and
add
lods
jbe
add
add
add
add
add
add
add
add
xor
add
xor
add
inc
mov
add
add
in
add
lret
add
outsb
arpl
inc
insb
insb
add
fs
insb
insb
mov
add
mov
add
add
xor
add
add
add
push
mov
add
add
add
add
add
add
test
add
pusha
mov
add
add
add
push
mov
add
add
je
add
add
add
incl
add
add
add
add
add
lcall
add
add
add
js
add
test
add
imul
gs
xor
cs
insb
add
add
add
dec
outsl
popa
fs
imul
add
add
inc
gs
jb
arpl
fs
jae
add
add
add
push
imul
insb
insb
outsl
arpl
add
add
jb
jne
insb
inc
jb
add
add
push
inc
push
push
cs
insb
add
add
data16
imul
add
add
dec
xor
cs
insb
add
add
add
gs
je
inc
inc
inc
add
add
add
inc
push
xor
cs
insb
add
add
ja
jo
imul
mov
push
pushl
mov
xor
mov
push
inc
inc
outsl
insl
jo
arpl
mov
add
sbb
pusha
mov
mov
cld
lods
xor
test
je
loopne
sbb
xor
lea
movsb
mov
call
cmp
jae
push
or
xor
inc
xor
mov
lea
mov
mov
call
sub
lea
add
mov
call
pop
sub
jae
and
call
mov
call
jne
pop
cmpsb
sub
inc
mov
sub
add
fcos
cmp
sub
add
movsb
pop
inc
inc
jmp
add
jne
xchg
lods
xchg
inc
ret
add
flds
in
call
leave
call
out
jb
ret
sub
sbb
ret
add
sub
sub
adc
dec
sub
mov
add
jo
fdivr
mov
outsl
les
js
jae
xchg
mov
js
and
add
push
loopne
loope
add
vxorps
add
mov
add
add
push
ret
xorb
xor
pop
fcomps
mov
push
mul
add
add
push
push
pop
sub
add
mov
add
or
add
push
or
lea
sub
lods
stos
nop
cmpl
je
mov
inc
test
je
mov
add
cli
mov
add
add
add
or
or
inc
jb
pop
mov
mov
xorl
aaa
add
mov
call
aas
aam
sbb
jne
xor
add
or
push
xor
leave
je
mov
push
inc
push
fs
loopne
jnp
xchg
stos
sbb
scas
jne
out
cltd
cmp
sub
movl
loope
push
lea
pop
push
aas
pop
push
cs
dec
sbb
or
enter
ljmp
int3
push
stos
cmp
dec
fimull
sub
inc
jmp
pushf
popa
fidivs
or
mov
mov
add
movb
add
nop
and
mov
nop
repnz
xchg
add
aaa
fs
cwtl
sub
xorl
sbb
inc
or
pop
pop
pop
ret
push
mov
add
sub
aad
pop
add
sub
push
add
push
call
mov
add
push
add
jle
add
xor
add
je
push
mov
add
loopne
ret
jne
xor
push
adc
add
in
movb
lds
pop
leave
add
int
mov
mov
xor
add
pop
or
ret
je
mov
push
xor
add
mov
sub
mov
lods
mov
add
lods
aas
mov
pop
add
in
movw
sub
lods
cmpw
add
shlb
and
adc
or
add
mov
clc
add
dec
shr
mov
dec
pop
scas
ss
add
dec
push
or
add
add
or
hlt
mov
inc
dec
nop
mov
jae
call
pop
push
dec
sub
jo
je
loopne
push
out
push
jmp
mov
cmovo
or
jge
arpl
mov
shlb
adc
push
clc
cmp
jge
mov
inc
movzbl
add
sub
or
or
push
dec
mov
jne
cmp
jne
in
cmpsb
sbb
rol
xchg
push
test
sbbb
add
pop
pop
push
or
xchg
je
cmp
push
ljmp
sub
sbb
js
orl
xchg
inc
aaa
ret
add
jbe
push
push
call
jl
sbb
xchg
xchg
fwait
push
inc
pop
repnz
mov
add
inc
lds
mov
sbb
or
sar
rep
add
add
rclb
cli
adc
or
stos
add
stos
pop
pusha
mov
cwtl
cmp
pop
fucomip
jne
loope
ret
jne
je
push
sbb
flds
lock
push
push
sub
xor
cld
or
cmpsl
pop
les
imul
pop
mov
aas
pop
add
scas
nop
lret
push
xor
out
hlt
push
sarl
dec
mov
sub
inc
push
call
in
call
inc
je
icebp
rolb
je
in
inc
popf
rcrb
inc
in
call
add
call
add
jmp
mov
add
shl
sub
arpl
pop
pop
pop
xchg
out
sahf
or
ljmp
xchg
in
fs
xor
add
lret
push
je
add
pop
andb
inc
dec
fldcw
je
jnp
and
call
dec
inc
dec
je
lcall
jmp
insl
jae
bound
loopne
sbb
sbb
mov
leave
add
inc
mov
fwait
call
or
test
arpl
pop
dec
jne
adc
testb
push
sbb
push
adc
lea
movsb
jne
mov
cmpsb
mov
mov
xor
push
jl
push
test
or
jmp
and
cmp
push
xchg
popa
pop
inc
inc
or
dec
push
pop
pop
test
loopne
xchg
mov
inc
jge
imul
fsubrl
fwait
dec
jmp
into
or
adc
pop
imul
dec
or
lods
movsb
or
add
cmp
xchg
clc
out
lret
inc
mov
cmp
adc
jl
sbb
shr
call
push
lea
add
mov
sbb
push
sub
pop
test
sub
mov
pop
ja
fadd
pop
cmp
mov
popf
xchg
lret
into
cmpsl
or
je
out
inc
or
push
pop
adc
xor
icebp
lea
mov
xor
pop
add
scas
cld
inc
jo
insb
imul
mov
push
jb
jb
arpl
jne
je
add
and
gs
sbb
mov
jae
insb
and
mov
cs
and
outsl
and
je
dec
dec
mov
pop
jno
push
stos
add
pushf
popa
xchg
mov
xlat
test
jae
add
dec
gs
popa
addr16
outsl
js
add
fs
aas
into
je
hlt
push
insb
mov
gs
inc
push
sahf
or
add
int3
out
dec
popa
outsb
fs
add
xchg
inc
and
mov
imul
ja
je
insl
jbe
fdivrl
popa
orb
insl
jns
ret
jb
jmp
cmp
leave
dec
jp
das
push
dec
pushf
movsl
sbb
std
scas
andb
and
mov
cld
lods
xor
test
je
xor
lea
movsb
mov
call
jae
cmp
jae
push
push
push
xor
inc
xor
mov
lea
mov
mov
call
jae
lea
add
mov
call
jae
pop
pop
pop
sub
jae
mov
call
jmp
mov
call
adc
dec
jne
inc
call
mov
cmp
sbb
cmp
sbb
push
mov
sub
rep
pop
inc
inc
jmp
add
jne
xchg
lods
xchg
add
inc
ret
xor
inc
call
adc
call
jb
ret
sub
mov
popa
ret
add
add
movsb
add
add
mov
add
insb
mov
add
add
adc
add
fs
add
lea
mov
mov
mov
movb
add
sub
mov
xor
ret
mov
popl
add
push
push
push
push
push
push
lea
mov
push
mov
push
push
pushl
push
mov
add
mov
call
pop
mov
push
push
mov
mov
add
mov
mov
mov
add
mov
mov
add
mov
add
lea
push
push
push
call
pop
pop
add
mov
push
mov
mov
add
sub
mov
mov
mov
call
mov
mov
mov
pop
jmp
add
push
push
push
call
mov
pop
pop
pop
pop
pop
pop
jmp
