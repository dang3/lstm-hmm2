add
add
sbb
add
sub
add
or
add
test
add
lcall
add
add
add
add
addb
addb
add
lcall
add
add
add
add
pop
add
add
add
pop
add
lcall
add
add
add
add
addb
add
lcall
add
add
add
add
cwtl
add
add
add
add
add
add
add
add
add
add
dec
add
xor
add
lcall
add
add
add
add
add
add
add
add
lcall
add
add
add
add
add
add
add
add
add
dec
add
dec
add
dec
add
dec
add
add
push
add
push
add
push
add
dec
add
push
add
add
dec
add
dec
add
add
inc
add
dec
add
inc
add
dec
add
inc
add
jg
xchg
inc
pop
sub
out
adc
gs
jne
sub
sub
push
push
sahf
addr16
pop
dec
sub
xlat
stos
dec
adc
lea
xchg
je
adc
inc
fwait
out
andb
or
out
into
push
idiv
dec
test
fidivl
mov
xor
pop
bound
lret
ficoml
xchg
inc
gs
cmpsb
adc
xor
lods
xchg
in
push
xor
xchg
xchg
pop
lret
adc
mov
in
or
jne
mov
sbb
cmp
fwait
mov
mov
fnstsw
rcrl
insb
rorb
xor
out
clc
cmp
stos
aam
sub
add
mov
pop
mov
lret
mov
roll
sbb
or
es
in
pop
push
pop
mov
mov
fsts
idivl
dec
stc
std
pop
test
loop
data16
push
not
or
adc
scas
sub
dec
mov
hlt
je
inc
insb
aad
and
cmpsb
in
cmpsb
sub
add
sbbw
jl
push
movsb
sub
repz
lock
arpl
outsb
dec
shrl
jle
inc
gs
cmpsl
cmpsl
cmc
xchg
xchg
mov
adc
ljmp
sahf
jle
mov
push
fldl
jp
mov
js
dec
inc
cmp
pmaxub
sbb
insl
das
int3
sub
push
test
repnz
sub
ds
insl
hlt
pop
lods
aaa
andl
push
jp
les
and
aas
pop
loop
hlt
fldenv
xor
xchg
and
pushf
and
cs
cmc
pop
or
loopne
cwtl
xor
mov
ja
sbb
cld
xchg
lcall
lea
in
adc
dec
js
sub
adc
jno
je
imul
push
out
mov
comiss
rcrl
int
xor
pop
push
adc
and
punpckhwd
jp
fistpll
sub
in
test
jl
mov
mov
daa
or
movsb
mov
bound
fwait
stos
es
pop
fprem
imul
push
and
pop
daa
popa
sbb
repz
movl
cmpsl
in
stos
sub
data16
cmpsl
sub
fwait
loope
test
fcoms
sbb
aas
test
lcall
in
adc
mov
jecxz
clc
nop
dec
fimuls
adc
xor
cmp
inc
push
sbb
push
outsb
out
jge
out
or
incb
jne
pop
dec
jle
sbb
jle
or
jecxz
sti
fsubs
icebp
iret
jmp
sub
dec
push
sub
cmp
xor
push
in
mov
cmp
xchg
es
sub
sub
icebp
insl
or
xorb
or
repz
dec
test
loopne
sub
fdivl
inc
pop
imul
mov
popf
call
test
xchg
fs
dec
mov
jle
pop
xchg
xor
mov
push
ret
inc
push
xchg
pop
cmp
sbb
jecxz
cmp
sub
mov
mov
cmp
lahf
cs
pop
enter
rorl
sahf
pop
dec
jns
jp
daa
popa
lret
sbb
mov
and
in
jp
dec
loope
movsb
cmp
jb
adc
ret
adc
dec
fdivl
mov
addl
ja
pop
mov
push
jg
push
hlt
mov
cwtl
xorl
pop
inc
push
jmp
ret
addr16
test
movl
jmp
jp
mov
subl
cld
mov
push
mov
and
stc
stc
pop
mov
dec
sbb
pop
ror
adcb
mov
aas
jae
xor
shlb
popf
inc
dec
sbb
scas
xor
xchg
mov
xor
xchg
cltd
aaa
outsl
ficoms
mov
push
inc
or
into
jnp
dec
cli
pop
dec
les
adc
add
mov
push
push
jbe
scas
cwtl
ljmp
mov
mov
push
adc
inc
rorl
xor
pop
imul
lret
out
jo
adc
sbb
xor
add
fcmovb
adc
out
out
fs
ljmp
inc
pop
xlat
aaa
mov
mov
bound
mov
push
jnp
lcall
leave
push
jae
pop
cwtl
or
xchg
push
int3
mov
in
add
or
adc
das
fisubrl
mov
ret
adc
in
add
iret
popa
setno
sbb
mov
ds
dec
and
stos
xchg
mov
fsubl
push
push
push
inc
mov
push
cltd
cld
test
xor
cld
bound
in
test
push
push
and
xchg
js
cli
sbb
jle
loope
out
mov
scas
inc
mov
in
loop
push
sub
sub
or
jp
jns
lahf
int
sarl
ret
adc
fnstsw
push
sbb
add
pop
inc
lret
test
daa
bextr
adc
inc
imul
inc
xor
in
add
adc
scas
loop
jmp
mov
push
sbb
xlat
jg
out
jns
imul
xor
scas
das
out
mov
mov
arpl
stos
imul
loopne
inc
jle
ds
sub
pop
scas
jnp
pushf
nop
mov
pop
dec
fmul
sub
stos
clc
cs
popa
xor
movsb
in
mov
mov
inc
incl
addl
xchg
jge
push
mov
cmpsl
xor
xor
cmp
outsb
movsb
jg
aam
sahf
mov
add
mov
adc
cmp
and
ret
ljmp
inc
mov
xchg
popf
lea
bound
test
push
adc
lahf
cmpsb
dec
push
mov
push
jne
adc
mov
aam
js
cmc
sub
jno
jne
add
test
xor
jp
cmp
outsl
lret
sbb
jo
pop
call
es
dec
aam
aas
ret
mov
dec
cli
mov
cld
movsl
mov
mov
sbb
push
inc
aaa
mov
js
sti
xor
lock
jae
mov
dec
push
shl
cmp
xor
mulb
lock
sub
ss
adc
adc
imul
inc
dec
std
adc
mov
xor
adc
orb
lahf
xor
ret
test
in
xor
add
sarl
or
fidivl
loopne
push
xchg
or
push
lods
pop
cvttps2pi
cld
out
inc
jo
jp
mov
sbb
sbb
lods
pop
or
popf
out
mov
jb
out
scas
pop
mov
dec
pop
adc
test
fistpll
cmp
dec
shl
in
mov
sbb
pop
adc
xor
sti
daa
jmp
sbb
js
jle
push
jnp
add
sbb
lret
jl
mov
test
outsl
mov
inc
jns,pn
dec
dec
xor
fcompl
in
mov
xchg
call
aaa
mov
dec
mov
loopne
js
fmull
insb
mov
imul
std
lahf
push
lock
jg
mov
mov
inc
mov
sub
in
fdivl
inc
mov
test
mov
cmp
inc
add
xor
cmp
dec
sbb
dec
mov
xor
push
pushf
clc
leave
outsl
in
pop
andl
test
adc
mov
lret
shlb
push
mov
xor
sahf
std
mov
lock
stc
popf
cltd
aas
fs
inc
icebp
or
pop
nop
mov
cmc
ja
cli
jbe
or
mov
dec
jne
icebp
daa
bnd
or
outsl
sub
leave
aas
rcll
jge
or
stc
lods
xor
mov
or
dec
jp
pop
jb
jbe
or
sti
push
mov
enter
mov
lcall
icebp
pop
cli
rcll
out
idiv
cld
xchg
mov
lods
loopne
or
jb
cs
notl
mov
xchg
sub
xchg
pop
pop
test
mov
sbb
pop
mov
add
xlat
cld
and
jbe
pushf
mov
fs
enter
lcall
jo
ss
and
xchg
jb
push
aas
popf
je
jmp
push
cmp
int
mov
and
mov
dec
stc
dec
fs
mov
jb
test
inc
xchg
inc
push
jae
or
sub
jne
mov
xor
and
fildl
sbb
mov
add
int
adc
lods
lods
mov
inc
mov
jl
pop
mov
mov
sbb
sbb
dec
aam
add
insl
pop
mov
mov
loope
inc
ficompl
ror
stc
mov
or
fwait
and
cmp
lods
mov
sarb
xchg
xchg
jg
push
mov
adc
add
lahf
stos
push
cmp
or
lock
xor
mov
inc
or
ficompl
mov
lret
or
mov
imul
push
cmp
call
std
push
and
cli
outsb
push
fcoms
mov
mov
cmc
pop
sahf
mov
movsl
or
mov
xchg
popf
leave
fcoml
jae
mov
arpl
mov
pop
push
cwtl
lcall
cmpsb
dec
or
push
popa
add
cmp
fstps
dec
std
cwtl
jle
push
cmpsb
cltd
mov
stc
hlt
xchg
inc
stos
mov
fs
inc
mov
aas
lret
scas
add
pop
inc
sahf
lret
mov
pushf
fdivl
loope
in
iret
cmpsl
inc
imul
lods
outsb
inc
xchg
aaa
aam
pop
ljmp
mov
push
mov
xchg
bound
xor
push
add
sbb
gs
jno
push
leave
xor
pop
and
div
out
loope
sbb
push
mov
stc
lahf
adc
cmp
lea
mov
cmpsb
popa
jge
fidivrs
stos
dec
scas
test
stos
sub
into
pop
mov
into
shll
icebp
shl
mov
mov
mov
stos
pop
in
mov
aad
outsb
and
or
int
sub
dec
inc
push
sub
xor
sti
sahf
ret
mov
lret
jno
sbb
mov
jns
mov
inc
andl
xchg
test
ja
cmp
jl
std
popf
cli
int
lcall
push
ret
lahf
and
mov
push
jnp
frstor
inc
outsl
and
bound
gs
das
je
sahf
or
push
dec
in
push
xchg
xor
jae
inc
mov
mov
push
call
aaa
call
pop
in
repnz
imul
aaa
pop
pop
mov
inc
mov
pop
add
jns
addb
sahf
lods
jmp
xchg
test
jecxz
xchg
and
mov
xor
in
dec
jb
cltd
out
and
mov
xlat
lds
adc
pop
in
dec
scas
dec
mov
lock
or
nop
sub
sbb
pop
mull
add
or
call
pop
call
or
add
jecxz
mov
inc
cltd
aam
cmpsb
pop
sti
jo
adcb
push
pop
mov
sub
popa
jecxz
dec
negl
mov
mov
xchg
rorb
or
loope
inc
add
inc
jl
icebp
ljmp
es
aam
loop
mov
fcompl
xchg
and
xchg
and
jne
loope
out
mov
rorb
mov
cmpsb
inc
jge
push
and
push
loop
fldl
je
mov
in
repnz
xor
ds
inc
dec
jb
inc
in
pop
mov
push
inc
cwtl
in
jle
pop
mov
data16
mov
je
dec
aas
in
in
mov
pop
pop
pop
aaa
xchg
pushf
adc
daa
lahf
add
fisubrs
adc
out
jnp
fwait
movsb
daa
insl
mov
enter
jmp
cmpsl
push
pop
in
mov
stos
mov
mov
rcrl
lea
sub
movsl
add
iret
push
and
cmp
daa
mov
inc
incl
nop
jg
sbbl
imul
aad
push
gs
cmc
adc
mov
lret
xor
outsb
jbe
or
add
cmp
jecxz
dec
sarl
mov
xor
sub
adc
mov
mov
mov
jo
mov
fldenv
xchg
adc
lret
orl
daa
cwtl
insl
push
inc
inc
jno
fsubs
sar
mov
xchg
mov
jp
cmpsb
jp
ds
andb
mov
pusha
sub
in
test
cmpsl
pop
sub
in
aaa
lods
pop
xchg
into
imul
xchg
movsl
mov
add
insl
arpl
out
and
cmpsb
and
ljmp
cli
mov
daa
and
jbe
popa
scas
pop
and
and
inc
push
loopne
inc
imul
mov
jl
jns
lret
pop
loop
ds
sub
jp
mov
insb
repz
xchg
inc
lods
aad
dec
xchg
fs
sbb
addr16
jno
xchg
lahf
jg
sbb
stc
fistpl
stos
jno
out
mov
inc
fistl
mov
add
mull
mov
adc
xor
mov
pop
imul
sbb
ret
push
xor
add
addr16
push
ss
pop
cmp
mov
dec
jne
mov
pop
aas
aad
sub
repz
push
clc
pop
xor
lock
mov
sub
movsb
cmp
sub
ret
and
outsl
inc
sub
jg
fiaddl
bound
test
and
and
insb
jns
mov
andb
filds
adcb
add
mov
popa
cmp
push
add
xchg
mov
scas
inc
jnp
popf
loope
adc
outsl
out
push
icebp
movsl
flds
xor
mov
insb
jnp
or
hlt
mov
or
dec
xchg
sub
shlb
xchg
and
fs
gs
inc
popa
fcmovu
xor
or
push
int3
cmc
dec
stos
jge
int
cmp
cs
inc
sbb
pop
test
scas
hlt
cmp
dec
mov
sbb
dec
push
inc
loopne
addl
sbb
cmp
or
mov
into
mov
sub
int3
call
pop
insb
inc
fcmovnbe
sub
ror
push
in
mov
aam
cld
or
decb
mov
out
lods
jl
or
cmp
shll
rcrb
gs
movsl
mov
sbb
loop
push
xchg
pop
sbb
xor
xchg
adc
mov
push
jno
add
mov
jecxz
into
adcb
jl
cwtd
stc
clc
outsl
fisubl
inc
scas
sarl
aam
dec
jecxz
daa
push
xor
hlt
sub
aad
sub
mov
mov
lcall
sub
aad
mov
mov
shlb
lods
mov
fcmovbe
subb
test
cmp
and
mov
mov
out
movl
and
push
adc
cmpsl
test
cmp
and
aas
jno
jp
stc
mov
in
or
addr16
cltd
fwait
sub
sarb
sbb
cmp
jmp
scas
pop
xchg
jo
sbb
cmp
mov
mov
mov
nop
icebp
mov
sbb
or
push
stos
xor
jae,pt
dec
aas
xlat
adc
test
inc
sbb
push
ret
aaa
mov
pusha
jg
xchg
scas
in
inc
sub
loop
inc
pop
loopne
mov
push
test
jne
push
cmpsl
mov
push
push
sub
clc
movsb
out
fmuls
ljmp
add
inc
cmpsl
in
mov
xor
mov
push
dec
mov
xor
sbb
or
push
mov
std
sarl
push
mov
out
fdivs
in
in
pop
sub
jecxz
xchg
daa
dec
cli
imul
or
xor
mov
arpl
push
loopne
lret
push
or
stos
mov
inc
mov
into
xlat
inc
mov
aas
orl
add
add
movsb
cwtl
dec
mov
sub
fs
dec
jns
pop
outsb
or
add
dec
xor
push
divb
es
adc
push
mov
and
inc
adc
popa
xchg
mov
jo
bound
lods
push
inc
in
mov
movsb
push
sti
pusha
clc
sahf
ss
push
mov
mov
in
or
xchg
xchg
scas
test
int
in
sub
iret
in
test
sarl
mov
loopne
xchg
stos
iret
cmpsl
xchg
xchg
jl
div
mov
push
or
mov
push
sbbb
and
adcb
cmpsb
mov
int
pop
pop
inc
filds
sub
cmp
fildl
fstps
and
sahf
out
mov
enter
out
inc
repnz
shr
push
in
out
jnp
or
call
stos
lock
jge
addl
push
jle
aam
mov
mov
sub
es
in
test
outsl
pushf
jno
mov
clc
mov
lds
and
mov
add
mov
mov
push
pop
fs
xor
pop
mov
gs
xchg
lret
roll
into
jge
sbbb
mov
int
stos
rolb
lret
push
lcall
mov
push
sarb
mov
ficompl
and
cltd
addr16
cmp
leave
mov
mov
loop
adc
xchg
jmp
and
lret
insb
andl
sbb
loope
lret
inc
xlat
jmp
inc
xor
lahf
and
sbb
cmc
pop
divl
inc
sti
cmc
cmpsb
inc
out
arpl
jg
add
ss
xchg
mov
fwait
shufps
iret
push
xchg
fcmovne
jmp
cmp
sub
cmp
mov
aad
push
or
pop
mov
or
or
pop
pop
cmp
stos
rclb
test
stos
jnp
cli
icebp
inc
enter
int3
cltd
es
imul
dec
hlt
cmpb
ret
ja
outsl
mov
popa
xor
ljmp
es
mov
lret
xchg
mov
out
mov
push
sub
jbe
dec
mov
adc
sub
cwtl
jmp
mov
cmp
push
insb
xor
add
rorl
sub
cmpsb
mov
and
push
movsl
pop
xchg
cmp
pop
inc
loope
jp
xor
inc
popf
jl
or
fcomps
pusha
sbbl
jns
dec
xor
sbb
lahf
xor
sti
movsb
les
jmp
xchg
pop
dec
adc
inc
push
add
gs
mov
fneni(8087
mov
jnp
in
dec
stc
and
test
adc
aaa
pop
sbb
adc
mov
mov
ds
jmp
mov
and
ret
jp
mov
aaa
outsb
adc
fwait
loop
push
mov
out
and
mov
mov
std
jne
xor
adc
fnstenv
add
cltd
test
mul
out
push
jg
shl
shufps
les
xchg
inc
inc
cmpsl
xchg
adc
jle
lds
and
sub
dec
mov
fisubrl
rcrb
ret
in
mov
push
faddl
mov
xor
fnstenv
mov
popf
ss
fnstenv
getsec
popa
int
xchg
js
cmc
mov
cwtl
out
mov
sub
movsl
push
dec
out
sub
or
xor
dec
mov
cld
push
rorb
fiadds
clc
sbb
pop
les
or
mov
sti
testb
in
scas
sbb
pop
or
fiaddl
jecxz
jl
repz
mov
enter
inc
push
mov
xor
xor
es
stos
in
jo
cmp
fwait
lea
ljmp
inc
xor
fdivrl
add
daa
inc
stc
rolb
push
outsb
mov
aad
gs
lds
sbb
mov
mov
or
pop
jp
imul
xorb
and
dec
mov
outsb
in
mov
mov
enter
lcall
jb
movsb
jns
ljmp
cmp
mov
xor
ljmp
fcoms
pop
xchg
mov
push
mov
xor
arpl
pop
cmp
cmpsl
je
jl
xor
jns
movsl
in
xchg
xchg
aaa
mov
mov
leave
and
mov
cmp
clc
dec
push
test
dec
sbb
mov
xor
jmp
ret
xchg
into
aas
stos
mov
loopne
ja
aas
std
xor
mov
ss
mov
mov
call
cltd
cmp
fistpll
push
cmpsb
jne
sbb
dec
or
xchg
scas
cltd
rcr
sub
jecxz
adc
imul
sbb
lods
cmp
popa
loopne
fs
pop
shll
fdivr
inc
ror
in
int
sub
or
out
fdiv
mov
sbb
sbb
cmp
push
aam
icebp
sarl
jae
fwait
xchg
jg
inc
dec
cmpsl
pop
and
cmpsl
jno
popf
lea
pushf
sbb
das
pop
leave
xchg
dec
jb
push
out
stc
or
push
inc
clc
xchg
mov
test
mov
or
movups
push
test
aaa
or
out
jecxz
das
adc
push
sbbb
stc
in
out
or
cltd
cwtl
cmp
addr16
mov
test
add
dec
repnz
mov
cmpsb
push
dec
sbb
lret
stos
repnz
jnp
out
xchg
mov
imul
aas
leave
ficompl
dec
dec
sti
bound
into
andb
mov
cltd
shrl
xor
sbb
jb
js
adc
std
jo
pop
push
mulb
xchg
ds
dec
daa
test
movsl
mov
fcoml
and
aaa
dec
ja
imul
inc
sub
popa
push
loopne
add
xor
hlt
popf
cmp
adcl
mov
xchg
iret
xchg
daa
pop
jmp
push
adc
xor
shlb
std
lret
lods
faddl
aad
sub
push
jmp
or
xchg
xchg
mov
xchg
lcall
scas
mov
test
mov
mov
std
dec
adc
lock
fcmove
pop
js
xchg
mov
adc
add
mov
or
adc
das
iret
in
fistl
dec
call
sub
imul
mov
adc
insl
lods
xchg
xchg
sub
inc
in
cmpsb
scas
jle
cs
cli
adc
and
push
movsl
movb
pushf
les
insb
f2xm1
shr
mov
and
mov
js
roll
and
in
lods
xchg
inc
movsb
xchg
cli
xor
es
adc
mov
jp
push
xchg
insb
ffreep
mov
jl
xchg
push
fwait
cmpsb
mov
ret
add
or
outsb
aaa
xchg
daa
xchg
pop
cld
xchg
cwtl
mov
push
test
cmpsl
dec
and
loope
imul
push
mov
mov
sbb
push
mov
es
call
cmp
pop
mov
mov
subl
daa
push
cmc
movsl
nop
sub
add
push
aad
sub
pop
push
add
mov
jl
bound
mov
scas
add
mov
shll
inc
aas
pusha
inc
push
push
jo
sbb
xchg
mov
testl
pop
testb
sahf
cmp
or
rcrl
xchg
rorl
mov
sti
enter
adc
push
jne
ljmp
jecxz
mov
dec
sbb
cmpl
popf
aas
sbb
aam
loop
adc
mov
sti
mov
cmp
or
les
pop
and
mov
in
in
add
mov
mov
in
xchg
xchg
mov
repnz
lea
je
pop
pop
insl
lods
xchg
out
dec
insb
sarb
cmp
sbb
add
mov
cltd
xchg
cmp
sbb
pop
data16
fisttpl
jo
jae
cmp
sub
call
inc
inc
bound
inc
adc
push
movsl
rol
mov
jl
push
jnp
in
jno
orl
mov
sub
cmpsb
xchg
imul
fimull
scas
push
lock
push
mov
xchg
mov
cmp
cmp
xchg
jmp
jge
addl
movsl
cmc
and
pop
ret
mov
inc
out
pop
mov
push
mov
or
push
lret
lea
push
adcl
adc
cmc
cs
popf
in
inc
adc
mov
adc
int
dec
sub
or
inc
gs
xchg
add
dec
jle
arpl
fnstsw
push
pop
into
push
add
aaa
jae
xor
add
jl
enter
pop
popf
pop
cmp
paddw
push
call
pop
mov
mov
divb
xchg
cs
sub
lret
sub
xchg
add
dec
loop
cli
xor
jl
push
xchg
lds
aad
cmp
jo
dec
dec
in
jmp
in
jle
jecxz
por
int
cmp
repz
pop
icebp
clc
cld
mov
sbb
nop
mov
jns
movsl
lcall
mov
inc
dec
cmp
jbe
out
xchg
fs
jl
loopne
movsb
mov
inc
scas
pusha
add
not
xor
mov
cmp
loope
mov
roll
aad
test
adc
fwait
sub
or
shr
out
sti
into
mov
xchg
adc
icebp
sti
nop
and
testl
and
dec
scas
repz
ljmp
gs
jns
pushf
dec
xchg
push
jp
mov
lahf
movsl
adc
repnz
mov
mov
sub
cmp
push
fiaddl
sbb
push
mov
pop
gs
mov
push
imul
inc
jno
stos
xor
push
int
lahf
add
fs
shlb
jae
jp
aad
dec
jbe
add
jne
add
insb
movsb
jne
movntps
and
in
pop
sub
nop
push
popf
in
rorl
lods
pop
adc
jge
outsb
aam
pop
aaa
lcall
stc
cmp
hlt
dec
icebp
jmp
add
push
orl
cs
pop
mov
leave
fwait
inc
lock
nop
pusha
dec
dec
jecxz
dec
ds
mov
add
mov
mov
cmc
ret
push
cmp
inc
inc
inc
mov
repnz
imul
popa
and
or
negl
fwait
jne
cmc
pop
scas
mov
jbe
sbb
sub
insb
push
add
lret
lret
mov
pop
shll
leave
inc
roll
int
xchg
or
int
aas
mov
cmp
inc
fbstp
pop
insb
out
idivl
xchg
push
xor
out
hlt
and
xchg
arpl
mov
jo
xor
subl
fldl
loop
push
dec
test
push
fnstsw
adc
pop
push
int
cmp
sbb
sbb
shrl
loopne
je
jmp
and
movsl
inc
pushf
pushf
mov
adcb
lds
and
push
xchg
mov
xchg
in
or
sub
jmp
xor
inc
out
ss
jo
movsl
out
loope
or
rolb
orl
mov
mov
pushf
pop
or
xor
jge
pop
mov
adcl
iret
sbb
cmp
pop
jecxz
in
mov
movsb
cmp
andb
std
and
gs
sub
lods
test
cli
xchg
pop
jns
xchg
into
jo
int
or
add
push
xor
orl
mov
loop
out
std
mov
ret
aad
data16
call
push
movsb
addr16
xor
adcl
dec
in
fs
fisubrl
mov
stos
aaa
push
xchg
pop
stos
sub
inc
ret
jae
sub
mov
scas
ljmp
mov
pop
inc
xchg
ficoms
in
sbb
mov
in
mov
xchg
dec
aam
daa
es
push
dec
dec
add
jg
push
mov
iret
add
and
pop
or
cmpsb
insl
sahf
mov
scas
adc
inc
das
dec
cmc
arpl
dec
mov
mov
sub
inc
std
imul
ds
jbe
xchg
sub
jl
call
pop
in
and
psrlq
mov
pop
sbbl
jge
out
lods
call
out
pop
jl
mov
sti
popf
and
cmp
sbb
dec
inc
xlat
jle
push
cmp
mov
cmp
adc
push
subl
pop
call
pop
or
and
or
jne
jg
mov
movsl
iret
imul
out
jge
pop
jp
push
cmc
mov
add
mov
adc
push
leave
sahf
stos
xlat
imul
push
sti
dec
cld
out
or
int
jb
roll
push
movsl
mov
cmp
sub
adc
fidivl
out
jl
sti
mov
jbe
fildll
jp
sahf
inc
lahf
std
int
pop
push
ret
pop
mov
lock
imul
adc
lds
popa
ds
or
mov
ljmp
inc
addr16
mov
outsl
daa
mov
jae
xor
fldt
xchg
frstor
ds
mov
push
cli
cs
ficompl
ror
sub
es
dec
mov
imul
test
in
xor
dec
insb
in
push
adcl
dec
stos
xlat
loop
daa
out
pop
xchg
cmpl
mov
imul
add
mov
outsb
ja
adcb
and
add
dec
out
out
pop
add
ret
arpl
repnz
lds
sbbb
movsl
pop
addr16
sbb
push
test
jae
lea
pop
adc
and
ljmp
push
out
popa
call
inc
fstl
pop
add
and
lods
fsubl
insb
inc
jno
shlb
xor
and
inc
dec
icebp
iret
push
fidivrs
clc
push
idivl
js
xor
jae
jae
mov
adc
das
mov
cmc
scas
sub
add
ja
pop
into
subb
ljmp
test
dec
xor
xlat
push
jb
jae
and
mov
filds
aam
rclb
dec
sbb
dec
fidivl
jne
lock
mov
sti
add
add
sub
push
lea
jle
fs
mov
fs
je
sti
sub
dec
les
pop
mov
cmp
pop
adc
cmp
mov
mov
mov
int3
xchg
lods
jle
xchg
push
xor
fcmovne
mov
cmp
pop
lahf
js
adc
add
adc
ds
stos
push
into
not
data16
inc
imul
push
mov
adcl
pop
insl
outsb
lcall
mov
aas
daa
les
aaa
je
out
add
xorb
mulb
fwait
add
sbb
sub
adc
push
adc
vphaddwd
xor
xchg
push
mov
push
jg
decb
mov
fnstsw
imull
mov
rcrl
jo
stos
aad
jne
mov
sti
sub
fdivrl
and
stos
popf
js
outsl
pop
es
inc
mov
lahf
push
stc
test
ret
dec
in
loop
push
add
sub
ret
pop
in
daa
jnp
xor
push
scas
dec
ret
and
lret
in
mov
inc
adc
int
orl
ss
scas
lods
ret
mov
insl
sub
enter
and
sbb
stc
dec
xor
out
rol
push
jmp
lods
into
fwait
out
mov
mov
stc
mov
stos
mov
pushf
imul
loopne
dec
into
mov
test
mov
mov
mov
das
cwtl
xor
sub
jl
aaa
dec
add
and
xchg
mov
mov
cmp
jle
push
jmp
dec
xor
call
idivl
movsl
nop
cmp
repz
mov
sbb
cli
or
loopne
push
add
stos
rcrb
push
jecxz
ljmp
lods
pusha
lahf
mov
aas
push
mov
lods
jb
add
rcl
ficoms
data16
add
or
xor
fidivrs
dec
shl
pusha
fstpl
pop
mov
fcoml
jnp
rorl
or
ja
inc
mov
aam
das
adc
dec
mov
xchg
test
data16
fisttpll
fidivl
cmp
iret
dec
inc
mov
insb
xchg
add
movsl
sub
lds
adcb
jle
pop
hlt
aaa
inc
adc
pop
insb
fnsave
mov
insb
movsb
xchg
add
mov
repz
jecxz
sub
or
fldcw
sarl
jge
xchg
xor
adc
and
xor
lods
in
mov
sarb
fsubp
adc
add
add
leave
xor
addl
sub
mov
sub
cmp
cs
cmpsb
lcall
pop
imul
stos
push
cmp
popa
cmpb
scas
mul
and
lock
dec
out
pop
and
idivb
fiaddl
data16
rcrb
xor
xchg
aam
dec
aaa
add
rcrl
mov
mov
cmp
out
or
lahf
or
pop
jg
mov
pop
movsl
arpl
out
repnz
fs
ret
lods
sti
test
pop
testb
popf
cmpsl
add
int
mov
scas
jns
mov
pusha
adc
push
jo
xchg
add
push
sti
xchg
bnd
jb
lods
pop
push
and
push
pop
mov
int
pushf
out
dec
nop
sub
popf
dec
cwtl
addr16
aam
xchg
jne
pushf
call
popf
dec
sbb
xchg
dec
jae
ljmp
or
mov
dec
fucom
sbb
frstor
mov
push
out
sbb
lea
test
shrb
rorb
jg
or
sbb
lahf
and
xor
add
mov
js
rcrl
cmp
jbe
stos
ja
sbb
movsb
jp
ja
cli
test
dec
scas
add
cltd
bound
mov
jg
and
sub
pushf
pop
repz
mov
dec
pxor
dec
clts
outsb
lret
outsb
and
xchg
and
add
pop
aas
push
jmp
pushf
xlat
and
xchg
cmp
hlt
lods
mov
inc
sub
les
stos
aad
and
fsubl
stos
fildll
adc
lds
fstps
lahf
das
es
adc
fstpt
jecxz
shrb
or
mov
andl
mov
xchg
mov
inc
jle
push
daa
pop
rcrl
pop
jae
enter
arpl
test
test
sbb
icebp
test
es
mov
daa
cmc
push
shll
dec
outsl
mov
icebp
faddl
mov
hlt
es
lods
addr16
enter
sbb
xorl
xchg
sahf
cmp
fwait
dec
cmc
std
xor
mov
push
imul
push
movl
popa
lret
add
ret
adc
push
es
out
in
lods
in
lret
fcomps
or
push
mov
push
dec
hlt
cmc
jo
jg
mov
cli
clc
fldcw
ljmp
wbinvd
movsb
or
xor
int
imul
dec
push
nop
fstl
outsb
ds
in
cmp
repz
mov
add
movsl
jnp
xlat
and
jnp
fcoml
mov
xchg
dec
dec
lcall
sub
ss
test
pop
inc
out
stos
pop
jae
int
mov
inc
pop
repnz
call
xchg
scas
sub
dec
sbb
jns
aam
fnstcw
stos
pushf
subl
push
cmpsb
sub
mov
mov
dec
test
out
mov
push
jne
push
jl
in
out
xor
cmp
adc
cmp
xorl
iret
xchg
and
imul
jle
movl
adc
push
ss
aad
push
ret
and
rcrl
push
mov
push
stc
pusha
ss
cmp
outsl
mov
imul
xor
int3
and
xor
mov
add
shlb
jbe
nop
iret
jnp
jle
iret
jecxz
jmp
inc
push
das
adc
sahf
adc
xor
je
jno
fnstsw
leave
adc
lods
jg
ret
push
ret
xchg
lods
dec
adc
push
push
cld
mov
pushf
out
or
xchg
mov
push
shlb
jle
inc
mov
popf
nop
cmc
ds
daa
aas
dec
sbb
movsl
ja
ja
in
fstpl
inc
sbb
sahf
je
xchg
scas
enter
repz
push
daa
dec
mov
dec
dec
sbb
lcall
pop
mov
mov
sbb
inc
jae
inc
jns
aas
jecxz
dec
int
sbb
push
and
decb
push
fs
ds
pop
xchg
cmp
in
mov
xchg
sub
sbb
cli
sbb
push
rcl
flds
push
imul
mov
mov
dec
xchg
shlb
pop
xorl
rolb
xchg
cmp
mov
jne
sahf
pop
push
cwtl
lret
repz
jbe
loop
cmc
fcoms
and
test
movsl
or
ja
push
loope
add
dec
xchg
inc
out
xor
hlt
adc
adc
adc
mov
jbe
mov
loope
inc
sub
js
in
rorl
shll
out
add
xchg
add
sub
mov
push
push
cmp
push
int
mov
call
dec
ds
ljmp
rcr
jo
push
sarl
jmp
dec
inc
cli
jns
outsb
mov
addb
xchg
lahf
pop
mov
in
or
arpl
imul
test
rolb
std
dec
dec
ret
bound
and
xchg
mov
iret
lcall
pusha
loope
pop
lea
ds
mov
jno
shll
jb
movsb
xchg
xchg
das
dec
adc
xchg
loop
sbbl
xchg
jno
dec
repz
inc
insl
lods
loope
dec
stos
shll
out
xchg
jmp
pop
xchg
xor
mov
in
mov
decb
adcl
cmp
sbb
inc
int
pop
std
repnz
pop
inc
fsub
adc
pop
ljmp
xchg
fcoml
fs
push
jg
sub
xchg
divb
push
rcrb
cmp
sbb
gs
sbb
and
mov
fildll
pop
sbb
sbb
adc
mov
or
test
divb
sahf
sbb
cmp
pushf
outsb
pop
dec
insb
mov
jmp
add
mov
insb
jmp
sahf
std
xchg
push
pushf
dec
repz
and
fsubrl
xchg
fmul
insb
orb
ret
in
push
adc
pushf
fldenv
aas
leave
pop
mov
add
dec
push
repz
imull
push
inc
fsubl
cmp
jmp
test
pop
lea
stos
lret
movsl
fistpll
cmp
inc
sbb
jne
sub
pop
add
add
inc
mov
call
push
jmp
adc
push
jp
mov
adc
cmp
fldt
sub
mov
mov
push
add
pop
test
daa
inc
lret
push
adcb
cmc
je
subl
push
jb
xchg
cmp
repz
mov
lcall
sbb
push
push
xchg
sub
rcr
fcmovne
inc
push
add
push
das
mov
cld
adc
movsl
ret
or
frstor
lds
out
sub
daa
push
addr16
pushf
pop
push
mov
in
mov
xor
mov
xorb
inc
pop
test
mov
dec
bound
out
push
push
sub
add
mov
in
push
inc
add
outsb
xchg
ficompl
dec
lods
mov
lahf
pop
int3
mov
cld
clc
jl
pop
lock
cwtl
xchg
push
dec
clc
push
jo
mov
push
mov
cli
jecxz
cwtl
dec
lock
dec
jge
icebp
pop
xchg
push
pop
inc
testl
push
inc
xchg
or
aad
clc
mov
jmp
sub
xchg
dec
xchg
and
mov
or
stc
test
cli
test
mov
incb
add
fistps
in
cmpsb
pop
cmp
int3
and
xchg
stos
andb
lock
and
mov
mov
in
popf
shl
jne
pop
scas
daa
add
mov
cmp
push
push
adc
fldt
add
lea
xor
mov
movl
ficoml
lods
inc
test
dec
and
push
adc
ljmp
dec
into
stc
bound
jne
nop
and
pop
pop
clc
mov
mov
xchg
push
sbb
fldl
lods
cmc
cmp
pop
inc
jecxz
clc
push
ds
jmp
pop
xchg
sbb
mov
outsb
out
mov
jg
sbb
lea
cmpsb
xchg
adc
cmp
fst
push
jno
dec
jg
mov
xchg
mov
nop
lret
mov
jge
adc
pop
stc
sti
and
addr16
or
pop
enter
rclb
adc
lret
mov
scas
mov
mov
mov
repz
xchg
push
test
in
push
or
andb
andl
add
das
shrb
inc
imul
out
or
mov
aad
fs
jb
orb
mov
outsb
push
jmp
fadd
cmp
loopne
in
pop
cmpsl
test
push
push
mov
daa
in
jne
outsl
push
mov
mov
test
arpl
mov
xchg
aas
pop
dec
mov
clc
cmp
imul
sbb
cmp
xor
lock
and
nop
push
push
out
addr16
sahf
mov
push
movsb
je
or
pop
daa
xchg
jp
jle
sbb
add
shll
pop
orb
jb
out
mov
ffreep
outsl
cmp
rcrb
add
sbbl
xchg
movsb
adc
insb
sub
mov
xchg
mov
movsl
mov
imul
iret
jae
les
pop
in
mov
mov
addl
or
pushf
xchg
cmpsb
inc
xchg
into
int3
enter
mov
cmp
insl
jo
lods
test
or
mul
push
lret
es
pop
or
in
sub
nop
sbb
dec
mov
mov
sbb
dec
mov
test
adc
push
jno
xchg
sub
pop
fbld
pop
xor
push
xor
and
pushf
push
sbb
inc
mov
sbb
and
mov
sbb
jge
lods
in
inc
mov
cld
mov
and
loope
push
shlb
adc
das
ljmp
or
loope
cmc
cmpsb
jmp
push
jl
iret
inc
pop
or
sti
sbb
cmpsl
cmp
sub
pushf
movsb
mov
mov
fs
xchg
cs
scas
mov
divb
lock
push
loop
push
mov
mov
test
sbb
pop
enter
and
scas
add
int3
inc
xchg
les
and
xor
mov
and
dec
adc
arpl
je
inc
jne
iret
movsl
lock
paddusb
pushf
adc
mov
mov
fwait
cmp
cmp
sti
mov
ljmp
add
cltd
out
aaa
shlb
or
insl
je
aas
xchg
sub
sbb
and
aas
arpl
clc
pusha
mov
xchg
arpl
adc
ljmp
subb
xchg
sbb
sbb
test
fcompl
shlb
cmpsl
inc
cmp
mov
mov
xor
sbb
xchg
dec
insb
into
cmc
psadbw
adc
std
cmc
jnp
outsb
inc
mov
inc
std
add
adc
fbstp
ficoms
xor
adc
lret
pop
mov
dec
dec
addr16
push
xchg
xchg
push
inc
js
dec
add
sub
dec
out
je
mov
shll
das
cmc
fdivrl
es
pushf
popa
fildl
test
or
jnp
inc
outsl
jg
push
xchg
mov
js
pushf
pop
enter
mov
fbld
shl
cltd
inc
bound
les
mov
mov
xor
pop
pop
mov
xchg
xor
into
pop
sbb
pop
push
addb
daa
and
adc
push
and
out
lret
sbb
mov
jecxz
lock
inc
aad
in
sbb
jg
push
cmpsb
int3
sbb
pop
bound
outsb
push
push
aam
lcall
mov
mov
in
ds
add
pusha
and
push
rcl
dec
and
cmp
xchg
cmc
pop
jle
sti
insl
fs
into
outsb
mov
cli
in
fimull
push
pushf
sub
imul
or
pop
jecxz,pt
mulb
jl
push
or
fidivs
jne
inc
fadd
mov
mov
mov
insl
data16
push
xchg
sti
std
andb
mov
pop
push
es
jnp
add
les
dec
pop
add
adc
cmp
das
ds
mov
sahf
sub
mov
jl
push
or
mov
xlat
add
dec
mov
pop
out
sbb
jg
in
pop
les
jl
cmpsb
sahf
lret
dec
jmp
outsb
dec
xchg
mov
cmpsb
cld
pop
int
mov
pop
jne
repz
xor
pushf
and
int3
cltd
sbb
mov
test
add
cmp
inc
mov
push
jbe
scas
loop
adc
aaa
in
popa
ja
popf
push
push
lret
cmp
jae
loop
stos
pop
mov
adc
lcall
xchg
aaa
pop
mov
fidivrl
into
loope
jne
mov
mov
ja
sbb
loop
xchg
rclb
dec
shrb
fnstsw
xor
in
cmp
pop
and
repz
rorb
mov
xchg
fs
inc
add
iret
xor
pop
ds
sti
mov
int3
int3
aaa
mov
pop
pop
pop
iret
out
lret
mov
icebp
mov
out
xchg
ret
pushf
cmp
sub
outsb
inc
jp
into
into
sbb
mov
outsl
xor
cli
push
cmp
push
cmp
enter
cmp
rep
nop
sbb
ds
lods
gs
lea
orb
jle
dec
push
push
scas
inc
mov
out
jmp
lret
clc
lock
push
jecxz
insb
or
sub
inc
xor
movsl
mov
scas
sbb
mov
or
mov
and
cld
imul
pop
mov
in
xor
hlt
xchg
out
insl
adc
jl
mov
jae
jae
dec
xlat
inc
xchg
ja
addr16
aaa
int3
lret
nop
adc
xor
cmp
popa
loope
fucomi
dec
add
dec
es
in
sub
adc
clc
lea
cmpl
or
mov
dec
lods
stos
xchg
sub
jg
dec
mov
outsb
mov
repnz
mov
mov
push
jbe
cmpsb
std
mov
mov
aad
add
or
sti
sub
leave
or
shl
in
cmp
inc
in
outsb
ja
or
pop
das
pop
mov
into
xchg
xor
int
nop
jge
int
lahf
int3
fldl
inc
rclb
push
sbbb
xchg
int3
push
adc
imul
cmp
movsb
and
iret
sahf
push
lea
mov
push
mov
jae
jg
daa
mov
inc
pusha
loopne
and
inc
push
aas
or
or
mov
fwait
xchg
cmp
out
cmc
pushf
in
jno
stos
jno
mov
cs
subl
pop
hlt
leave
mov
shrl
inc
test
stos
push
push
aam
fisttpll
push
pushf
xchg
xchg
mov
frstor
or
add
addr16
add
jmp
xor
pop
xchg
jecxz
sub
mov
lods
sub
lods
add
push
xchg
lods
xchg
rep
pop
lods
push
xchg
add
lods
loop
lods
lea
add
lea
mov
rep
pop
lods
push
push
push
xchg
pop
lea
call
jb
sub
jae
mov
cmp
jb
sub
push
movzbl
shl
mov
lea
lea
mov
jecxz
mov
sub
mov
xor
test
setne
push
inc
mov
lea
call
pop
lahf
adc
shr
je
sahf
sbb
je
mov
xor
mov
call
xor
jmp
mov
mov
add
call
jae
add
call
jb
add
call
jb
cmp
mov
jb
mov
push
mov
sub
mov
jmp
add
call
xchg
jae
add
call
xchg
jae
xchg
cmp
mov
jb
mov
push
push
mov
add
call
pop
xchg
jmp
cmp
mov
jb
mov
push
xchg
xchg
mov
mov
add
call
push
pop
push
dec
cmp
jb
mov
shl
mov
lea
call
cmp
mov
jb
xor
shr
adc
dec
inc
xchg
inc
shl
cmp
lea
jbe
sub
xor
mov
shrl
mov
bswap
sub
add
cmp
jb
mov
inc
add
call
loop
mov
shl
add
lea
xor
push
inc
push
shl
mov
xchg
call
xor
pop
shr
adc
loop
pop
add
inc
pop
mov
push
mov
sub
rep
lods
pop
mov
stos
cmp
jae
jmp
pop
mov
pop
pop
push
jecxz
mov
inc
add
cmp
jae
mov
cmp
jne
mov
bswap
add
sub
stos
loop
mov
push
push
mov
inc
lods
test
pop
je
add
push
push
xchg
call
xchg
lods
test
jne
cmp
je
mov
jns
inc
xor
lods
push
push
call
stos
jmp
pop
pop
mov
jecxz
xor
lods
cmp
jb
add
add
loop
popa
jmp
sub
jb
je
shl
lods
jmp
lods
jmp
lods
jmp
push
mov
push
shr
mull
mov
mov
bswap
sub
cmp
pop
jbe
mov
xor
mov
sub
shr
add
jmp
add
sub
mov
shr
sub
stc
pop
pushf
cmpb
jne
incl
shll
shll
popf
ret
xor
inc
lea
call
adc
cmp
jb
sub
ret
mov
call
lea
mov
jae
call
mov
jae
shl
mov
push
lea
call
pop
add
ret
push
add
add
add
add
add
add
