jp
add
push
inc
pop
add
mov
sub
push
push
lea
push
xor
push
mov
clc
cmp
addr16
xchg
loope
imul
jne
jae
cmp
out
cs
insb
repnz
mov
call
or
add
mov
cmp
je
shlb
nop
rolb
sarl
adc
ret
les
xchg
loope
gs
je
dec
enter
jo
scas
adc
lret
gs
inc
int
push
xchg
loope
arpl
outsl
shlb
add
daa
sbb
jb
jae
call
pop
cmp
pushf
adc
or
pusha
mov
out
jno
movsb
movsl
cmpsb
cmpsl
jns
out
test
stos
stos
lods
lods
out
sahf
out
scas
mov
mov
out
sahf
mov
mov
mov
cmp
mov
jp
gs
jne
push
sub
add
dec
clc
push
add
add
sar
jne
pop
or
mov
test
sub
hlt
cld
mov
jae
cmp
nop
push
xorb
ja
pushl
or
jno
outsb
add
pop
test
pop
je
inc
add
cmp
jmp
mov
or
repz
add
lea
movsl
mov
inc
int
push
pop
inc
or
into
xor
pop
pop
leave
ret
sbb
sbb
push
call
test
mov
add
mov
aaa
dec
push
jns
out
jne
gs
xchg
pusha
sub
repz
cmc
mul
push
push
xchg
mov
jb
imul
sbb
je
push
out
out
call
ret
jmp
cmpsb
mov
lea
pop
loope
mov
fnstsw
sbb
ljmp
test
push
push
mov
xchg
mov
push
mov
ret
rorb
pop
mov
call
adc
or
pop
add
andb
push
mov
jmp
mov
dec
aaa
mov
or
in
into
sub
sub
add
sarl
mov
jne
ret
pushf
cmp
jb
imulb
pop
cmp
jo
push
scas
int
mov
or
aam
or
adc
lret
mov
jl
lds
push
inc
inc
pop
add
jmp
push
sbb
shl
add
sbb
loopne
add
aam
lods
jno
sub
fs
imul
fsubrs
fidivl
jl,pn
sbb
fsubl
inc
inc
iret
ret
rolb
push
pop
mov
cmpsl
mov
test
jae
push
out
jo
inc
jne
jbe
jno
out
ja
js
loop
cmpsb
push
jns
inc
jnp
mov
jl
xor
mov
ret
popa
pop
fadds
inc
xorl
xchg
inc
xchg
jnp
loope
push
mov
inc
mov
pushf
xor
pop
mov
inc
mov
lea
nop
push
xchg
popa
xchg
jbe
gs
sbb
xchg
dec
xchg
insl
xchg
popa
xchg
addr16
gs
xchg
loope
push
lcall
in
sbb
insb
sahf
lahf
inc
into
mov
sahf
sbb
enter
push
xchg
jne
jae
push
int3
je
test
loope
popa
into
jb
je
jne
jo
sbb
pop
repz
cmp
hlt
cmp
mov
cmpsb
into
repz
pop
outsl
jae
jecxz
imul
insb
dec
fcompl
les
xor
leave
loop
jns
pop
inc
push
pop
jae
insl
mov
in
push
mov
mov
pop
loop
push
data16
imul
adc
mov
pop
add
je
popf
popa
pop
addr16
gs
inc
out
pop
das
pusha
push
pop
je
bound
xchg
or
mov
pop
gs
lea
push
lea
popa
mov
adc
std
mov
sub
rorb
scas
adc
fidivs
jo
les
xor
dec
mov
adc
insb
repnz
movsb
iret
mov
adcb
xchg
push
sar
mov
test
ret
sbb
insb
add
arpl
dec
xlat
adc
jg
mov
jl
or
imul
mov
jmp
cmp
push
dec
lahf
add
jo
inc
sub
push
aaa
stos
mov
adc
sub
inc
gs
mov
in
fsubrs
call
xchg
sbb
or
sti
bound
mov
fs
arpl
jno
inc
mov
orl
add
jmp
push
pop
ret
mov
xorl
or
push
push
push
out
or
call
gs
gs
mov
movsl
popf
js
jne
xor
and
jae
dec
jg
jecxz
cli
and
push
sti
insl
cld
popf
or
scas
and
push
push
push
pushf
jge
dec
hlt
dec
inc
movl
sbb
mov
std
test
and
jle
mov
push
arpl
push
xchg
or
pop
sbb
ret
fs
mov
sub
add
xorb
sub
mov
push
xor
nop
outsl
add
pop
je
cmp
je
inc
shr
jne
add
jmp
dec
jne
xchg
dec
inc
daa
popa
cld
pop
cwtl
jo
jmp
mov
mov
loope
or
or
jae
xor
mov
jae
pushf
shll
outsb
cltd
add
fimull
cmp
add
sub
push
pop
xor
sar
xor
mov
or
sbb
mov
cmpsb
jmp
push
cmp
rcll
sbb
jne
fadds
gs
loope
cmp
je
inc
fsubrl
jb
gs
cmp
xchg
loopnew
loope
jne
push
out
fs
inc
orb
cs
pop
aam
or
aam
sub
and
adc
shll
mov
loop
faddl
cmp
scas
or
push
pop
fs
xlat
adc
push
cld
sbb
jne
mov
push
xor
sub
fwait
inc
push
das
cltd
shlb
cld
and
iret
inc
push
mov
cmp
jp
mov
addr16
and
jns
dec
push
pop
sbb
cwtl
clc
sub
and
stos
inc
pop
cld
mov
inc
lock
inc
pop
into
cwtl
inc
add
xor
sub
push
inc
mov
inc
cwtl
inc
sbb
pop
mov
nop
sub
or
lock
sbb
xchg
add
pop
data16
push
xor
in
cmpb
mov
js
xor
cmp
je
mov
pop
push
xor
addb
sbb
pop
pusha
dec
push
xor
add
pusha
lahf
mov
xlat
out
sub
adc
push
into
sub
push
mov
inc
jb
dec
andb
sbb
push
aas
jb
aad
int3
scas
adc
ret
inc
ret
cmp
mov
push
mov
xchg
push
push
js
cmp
xchg
fs
lret
mov
loop
jae
es
xor
repz
rcl
rcl
aam
sahf
out
xor
xlat
fcomp
repz
jecxz
cmp
fidivs
sbb
fnstsw
xor
xor
cmp
ret
loope
jae
es
out
loope
cmp
xor
cmp
in
es
xchg
in
fs
xor
xor
jecxz
cmp
mull
loope
cmp
cli
xor
xor
cmp
jo
jae
xor
aaa
adc
cmp
sbbb
xor
dec
jne
mov
adc
icebp
mov
mov
jg
cmp
std
js
pop
xor
rorl
out
daa
fadds
xor
xor
xor
in
jae
sub
sbb
and
mov
inc
jle
mov
mov
push
hlt
and
jecxz
cmp
xchg
imul
xchg
gs
je
jo
jb
xchg
loope
outsl
pushf
arpl
cmp
mov
mov
lock
jecxz
push
bound
fmul
clc
xor
fsubrs
test
lea
js
push
push
sub
enter
bound
daa
iret
mov
imul
push
test
stc
push
int
ret
dec
xchg
inc
enter
movsb
cmp
dec
push
movsb
mov
stc
shld
js
test
test
lods
outsb
cmp
xchg
jb
outsl
mov
ret
loope
arpl
jae
dec
int
xor
mov
mov
in
movsb
dec
lret
xor
movsl
dec
xchg
cmp
movsl
jo
repz
adcl
cmp
gs
in
dec
int3
jae
gs
out
jns
imul
xchg
loope
gs
jb
outsl
jmp
aas
sbb
arpl
cmp
or
inc
sbbb
pop
out
mov
mov
leave
add
mov
push
mov
shll
loope
push
ret
jb
outsl
lds
dec
dec
sbb
gs
enter
shrb
enter
push
push
mov
enter
jo
add
lcall
push
popa
mov
pop
xlat
cmp
mul
jecxz
mov
repz
jo
insl
iret
repz
jns
gs
jecxz
cmp
and
fildll
cmpsb
sub
mov
cltd
testb
cmp
popa
out
jae
mov
loope
gs
pushf
and
pop
inc
and
add
jmp
adc
pop
outsb
mov
or
add
or
sbb
fcomps
rolb
mov
lea
xchg
inc
icebp
cmp
shrb
push
push
xchg
cs
les
xor
rol
inc
jle
mov
push
or
loop
mov
or
cmp
mov
push
pusha
inc
mov
add
enter
call
push
xor
mov
mov
fcoms
inc
jmp
popf
cmp
adc
enter
or
mov
or
lods
push
sahf
mov
jmp
sub
pop
push
push
cmp
mov
or
xorl
mov
push
xor
push
push
jnp
mov
mov
loope
xor
dec
lahf
jno
xchg
inc
daa
movsb
inc
jl
push
push
push
or
mov
dec
repnz
cltd
jo
repz
push
cmc
adc
clc
test
push
mov
or
sbb
enter
and
or
push
outsb
sahf
aam
int
iret
pop
ss
rclb
rcll
lock
xchg
mov
add
clc
stc
inc
cli
adc
mov
pop
test
scas
cwtl
add
cmp
aam
or
adc
xchg
sarl
clc
xlat
sbb
dec
insl
sbb
sub
xchg
rcr
or
cmp
fucomp
push
cmp
or
xor
xchg
loope
loop
jecxz
test
ret
cs
mov
cli
call
rcll
daa
inc
inc
or
mov
std
pusha
push
test
fs
pop
inc
cmp
sub
lcall
jo
or
push
fsubrs
mov
addr16
js
pop
mov
lret
je
push
shl
mov
cli
shlb
popf
and
pop
ja
fstps
xor
aam
addr16
push
push
lods
mov
mov
fcompl
dec
inc
sarb
mov
test
sbb
adc
cmp
mov
in
add
add
inc
push
sub
inc
push
add
pop
inc
cmp
adc
add
addr16
incl
mov
cmp
add
je
add
xor
add
mov
add
cmp
jbe
xor
test
jbe
lea
addb
into
xor
xor
mov
mov
jl
mov
add
add
inc
cmp
lods
xchg
bound
sub
and
mov
dec
cmpl
sub
xchg
fnstenv
test
mov
xchg
and
je
push
in
or
xor
adcl
push
push
js
and
aam
jl
jo
in
inc
push
outsl
mov
jge
or
popa
add
push
push
pop
mov
mov
sbb
loop
mov
dec
jl
sub
andb
sub
out
test
push
sub
add
mov
inc
or
popa
hlt
call
je
or
aaa
jecxz
mov
jnp
pop
push
mov
in
push
mov
cld
bound
push
sbb
popa
inc
mov
push
incb
shll
ret
jae
add
movb
push
cmp
pop
mov
pushf
dec
cmp
mov
out
cmp
ja,pt
cmp
cmp
xchg
inc
push
inc
xchg
iret
in
and
dec
jbe
dec
sub
repz
dec
push
dec
lea
cmp
fs
inc
cmp
rcrb
jo
sbb
outsl
mov
mov
mov
mov
and
dec
std
inc
int3
jns
xlat
push
iret
jecxz
adc
loope
cmp
xchg
xor
in
ret
loope
cmp
jo
popa
call
je
push
xor
mov
loope
cmp
xor
xor
xchg
xor
inc
pop
cmp
push
and
or
repz
and
adc
and
es
daa
pop
mov
mov
int
sub
sub
sub
sub
cs
das
xor
sbb
xor
xor
cmp
xor
out
inc
xchg
in
loope
push
ss
loope
add
jno
xor
icebp
pop
or
aam
or
lds
push
or
outsb
cmpsl
cmp
pop
pushf
movups
out
xor
jno
adc
adc
sbb
adc
jno
sbb
push
xchg
xor
sbb
sbb
pop
or
adcb
sahf
out
gs
xor
inc
inc
shll
jb
xor
mov
push
jo
arpl
jae
mov
loope
jb
outsl
xchg
arpl
xchg
jae
jae
xor
arpl
pushf
hlt
insb
adc
ljmp
ret
push
div
jns
in
nop
and
jbe
push
dec
pop
test
inc
loop
xchg
jno
arpl
gs
cltd
jne
addr16
cmp
fcomps
push
js
mov
sbb
loop
fcoms
jae
test
loope
xor
xor
test
jg
insb
imul
hlt
sarb
shll
cmp
gs
outsb
les
sbb
xchg
outsl
arpl
gs
jae
mov
lret
shl
jns
jo
mov
cmp
jecxz
arpl
je
jecxz
jecxz
popa
insb
push
jne
clc
clc
in
jb
inc
js
jmp
mov
out
out
dec
dec
push
lods
dec
jl
dec
dec
out
sub
jb
push
push
push
imul
arpl
ss
pop
push
push
mov
loop
icebp
cmp
pop
and
jecxz
pop
inc
pop
aam
lock
pop
shlb
push
je
cmp
test
mov
and
aam
and
sbb
push
and
popa
xchg
inc
xchg
xor
es
pop
imul
movsl
lds
push
shll
sub
mov
push
ret
push
sub
push
cmp
in
jmp
pop
mov
adc
dec
fimuls
cmp
fs
push
push
adc
jmp
pop
or
push
jb
mov
pop
lea
out
mov
clc
push
or
out
push
rcrb
cmc
add
lods
xchg
pop
or
fidivrl
xor
adc
adc
or
adcl
inc
mov
pop
pop
inc
jp
pop
and
nop
jmp
inc
je
mov
aaa
jp
je
xchg
adc
sub
push
mov
mov
hlt
in
aad
dec
adc
and
aaa
mov
shr
add
push
sti
pop
or
add
rcrb
mov
inc
sbb
inc
pushl
fmull
pop
xchg
movsl
pop
sub
aaa
and
cmp
sbb
pop
mov
inc
push
push
mov
enter
ret
out
loop
test
add
dec
xchg
mov
fadds
cwtl
dec
add
fmull
loope
add
movsb
push
or
cmp
lods
and
loop
mov
xchg
jnp
push
jnp
xor
inc
addr16
enter
sti
popl
pop
je
cmp
jb
dec
dec
cmpw
jne
add
add
jne
sbb
and
in
lds
je
push
or
arpl
mov
push
dec
or
imul
cmp
nop
pop
jb
or
sbb
add
enter
hlt
mov
mov
sahf
shr
clc
outsl
popf
cmpb
jg
sarb
and
imul
xlat
inc
lock
repnz
inc
imul
sahf
out
mul
cmp
mov
sub
je
adc
outsl
gs
jb
jne
out
mov
cmp
pushf
add
pop
shlb
mov
push
xchg
dec
sub
cld
movb
mov
leave
push
jecxz
jno
mov
ja
scas
sti
xor
leave
xchg
jbe
int
dec
inc
je
push
loop
gs
xor
jmp
adc
lea
xor
flds
sbb
jecxz
mov
cmc
hlt
push
cmp
pusha
sub
xchg
pop
mov
push
push
jne
jmp
sti
mov
dec
push
test
dec
inc
push
cmp
jecxz
test
in
stc
in
stc
rcrl
jmp
dec
dec
mov
adc
xor
mov
and
clc
sti
shlb
icebp
cld
lock
xchg
xchg
nop
sti
in
sti
xor
stos
mov
stos
push
push
js
jns
sbb
lea
int3
push
dec
scas
mov
cmc
enter
push
mov
clc
inc
stos
push
stos
jno
push
push
dec
cmp
std
mov
ret
push
push
out
push
adc
push
sbb
popa
and
push
mov
add
cmp
jbe
andl
je
je
jo
push
testl
outsb
jns
sub
imul
js
inc
jo
cmc
dec
mov
mov
lcall
inc
jb
adc
out
dec
add
and
mov
mov
pusha
popa
mov
aaa
pushf
nop
sahf
push
add
push
sti
push
mov
push
add
push
dec
jg
cld
adc
pop
jg
popa
mov
enter
mov
or
mov
push
daa
pop
cmpsb
sbbb
push
sbb
std
sarl
adc
daa
sbb
jmp
mov
push
mov
pop
mov
ja
inc
out
in
loopne
mov
in
insb
arpl
xor
hlt
push
and
div
dec
mov
add
sahf
in
leave
cld
out
in
std
incl
fsubrl
loop
gs
sahf
out
outsb
gs
jb
out
sahf
out
gs
imul
cmp
cmp
addl
int3
push
xchg
jno
xor
repz
cmp
popa
loopne
xchg
xchg
jo
sbb
xchg
cwtl
push
cltd
gs
jecxz
popf
sahf
lahf
mov
mov
arpl
loop
cmpsb
jns
sub
arpl
push
test
sub
gs
loope
cmp
jno
jne
gs
je
cmp
dec
mov
jecxz
jns
or
dec
jae
out
xor
xor
push
cwtl
fsubr
lret
int3
sub
pushf
add
test
test
mov
sbb
sub
mov
mov
add
vmovaps
push
clc
and
stos
and
enter
jno
aam
fsub
clc
sub
mov
mov
push
mulb
mov
push
push
lcall
into
or
add
int3
or
cmpsb
out
add
hlt
in
sub
sbb
adc
mov
test
inc
pop
outsb
inc
mov
imul
call
push
mov
shl
cmp
inc
icebp
stos
add
push
scas
pop
push
icebp
or
out
int3
add
stos
jns
mov
iret
idiv
sbb
ret
das
clc
mov
pop
or
and
push
mov
inc
mov
inc
cmp
jl
mov
and
loop
shl
add
outsb
or
rorb
insl
rcrb
push
mov
mov
loop
dec
or
push
in
or
hlt
sub
push
cmpl
push
push
je
sub
sub
mov
inc
rolb
adcl
sub
jb
pop
mov
test
lds
fs
rorl
jl
and
and
push
or
ret
ljmp
or
in
xchg
sbb
ret
push
fldcw
test
repz
push
push
loop
imul
cmp
push
pop
fwait
pop
loopne
dec
repnz
mov
mov
or
pushf
bound
push
pop
pop
push
inc
cmp
mov
sub
clc
dec
iret
repz
push
inc
jb
mov
hlt
cmp
gs
push
inc
jnp
cmpsb
jp
imul
insb
test
push
iret
repz
dec
push
imul
outsl
ja
insb
popa
adc
popa
sub
mov
xchg
loope
loop
jecxz
in
repz
push
loope
pop
inc
jb
xor
sahf
push
popa
sarb
iret
repz
outsb
xor
jns
repz
jb
insl
loope
ljmp
pop
sbb
xchg
mov
pop
nop
pop
xchg
push
ret
loope
cmp
jb
popa
xchg
insl
sahf
call
sahf
out
fs
pop
xor
xor
push
mov
aas
je
mov
cwtl
daa
mov
jae
push
or
inc
aas
iret
iret
rep
jb
jb
repz
jne
push
imul
outsl
into
inc
and
loope
test
jne
icebp
push
addb
push
in
adc
and
popf
jne
mov
iret
cmp
repnz
mov
sub
jae
push
cmp
and
sub
cmp
shlb
mov
fisttpl
cmp
pop
arpl
cmp
fildl
add
or
adc
xchg
push
dec
outsb
xor
jb
sbb
dec
ret
mov
fiaddl
inc
pop
push
mov
stc
cmp
push
pop
mov
das
sub
lret
lcall
mov
lret
mov
xchg
dec
repz
cmp
addl
inc
adc
mulb
push
test
filds
iret
cmp
and
and
jmp
fisubrl
jo
xor
push
fsubl
leave
sub
add
fidivs
push
aam
add
cs
and
or
daa
dec
dec
out
jo
gs
xchg
nop
cmpsb
popaw
push
aam
mulb
movsb
nop
leave
lret
test
xchg
mov
push
xchg
jo
aas
mov
stos
xchg
sbb
xchg
jns
cmp
insb
out
sahf
out
arpl
jne
out
sahf
cmp
jb
sbb
scas
movsl
mulb
mov
dec
xchg
push
sub
insb
gs
movsb
aaa
push
pop
inc
pusha
inc
mov
test
mov
ljmp
dec
pop
lret
inc
fwait
in
pop
clc
hlt
or
cmc
jo
imull
jns
das
jb
arpl
iret
call
xchg
push
jae
push
loope
jno
sbb
loop
jecxz
in
in
out
out
push
jecxz
je
dec
ret
jmp
in
arpl
sub
out
lock
mov
movsl
nop
inc
xor
and
inc
icebp
cmp
scas
mov
and
aam
aad
push
xlat
fsubrs
sbb
pusha
int3
arpl
xchg
shlb
push
adc
fnsave
call
ret
sbb
nop
pushf
pop
fisubrl
adcl
jg
xor
ret
andb
sub
leave
or
xor
mov
popa
jl
add
adc
or
jl
cmp
inc
cmp
jb
push
ret
jo
xlat
pusha
push
add
mov
fsubrl
jne
lea
add
sub
pop
dec
sbb
add
adc
test
mov
mov
push
jo
or
loopne
lea
or
adc
jp
xor
fwait
sub
or
sahf
std
add
push
or
movsb
push
add
add
adc
cmpl
jne
cmpl
add
das
or
js
es
insb
dec
dec
lods
or
jne
mov
je
nop
mov
adc
inc
jb
fadds
es
or
loopne
popa
outsb
addr16
adc
jne,pn
mov
or
pop
jne
test
insb
arpl
loopne
push
pop
jno
mov
imul
in
jmp
pop
popf
adc
and
das
sbb
test
arpl
mov
pop
int3
inc
push
xor
sbb
inc
movsl
sahf
shll
aam
cwtl
mov
negb
sub
cmp
and
xor
dec
xor
add
jbe
pop
test
add
jl
sbb
adc
add
push
push
xor
xchg
sbb
push
pop
or
xor
or
fadd
mov
push
js
inc
pop
adc
xchg
xchg
jge
repnz
jne
xor
sub
or
js
jge
fsts
push
addr16
mov
add
mov
bound
inc
shrl
mov
mov
or
cmp
jbe
mov
add
enter
push
sub
add
popa
pop
jle
pop
mov
icebp
xor
and
fstps
int3
mov
xor
fs
fsubs
fwait
or
ret
push
mov
mov
push
imull
lds
dec
push
enter
jne
mov
lods
bound
in
sub
and
push
mov
sub
jb
sgdtl
arpl
push
xchg
daa
jb
push
jbe
adc
and
push
cmp
repnz
add
sahf
enter
xor
pop
and
dec
testl
ss
stos
dec
or
ljmp
pop
shlb
jge
mov
xor
ja
add
xor
test
push
inc
mov
ret
cmp
in
icebp
movsl
clc
pop
iret
sbb
lock
int
lret
lret
mov
rcll
inc
aad
neg
push
mov
mov
in
inc
add
pop
push
jo
sbb
ja
or
or
sar
and
mov
sub
push
sub
popa
mov
rcll
mov
xor
dec
add
pop
adc
or
clc
jl
nop
add
mov
lock
int
flds
sbb
lock
clc
cld
push
xor
je
sub
sub
and
or
pop
pop
dec
inc
lret
mov
je
pop
loopne
mov
or
inc
add
and
out
nop
out
in
dec
outsl
and
leave
mov
sbb
push
repz
subb
add
icebp
add
cmp
dec
adc
in
rclb
lock
cltd
out
insb
subb
es
rcr
push
fistl
dec
leave
loopne
and
out
cltd
daa
mov
sub
lahf
out
insb
push
jb
test
inc
cmp
push
addr16
lret
and
lahf
bound
add
push
push
adc
cli
or
lea
push
push
dec
cmp
xchg
pop
mov
cmpsb
imul
push
in
rcll
mov
add
add
sub
sub
mov
movb
or
mov
sub
inc
add
xor
lock
push
push
add
enter
jbe
or
call
in
movsl
test
xor
and
add
insl
xor
dec
mov
jns
and
ljmp
push
cmp
mov
aad
aas
add
push
push
je
call
cmp
lods
and
jp
pop
lcall
push
mov
je
push
adc
fisubrl
xor
mov
cmpsb
lods
or
and
shrb
mov
negl
inc
sub
push
xor
adc
push
push
fs
lahf
pop
pop
fistpl
loope
jae
push
dec
push
dec
fimull
inc
lea
scas
sbb
sbb
or
and
insl
or
loop
push
adc
rclb
in
insb
popl
in
mov
loope
cmp
arpl
je
imulw
outsl
cli
int
xchg
outsb
in
inc
outsb
adcl
push
popa
in
or
sub
sbb
pop
jne
lods
loope
fsubrp
xor
ss
sub
daa
mov
gs
jo
cld
cmp
pop
push
add
dec
leave
pop
jmp
lods
int3
add
aam
mov
dec
hlt
add
sbb
pop
add
add
pop
inc
fistl
add
nop
lret
push
sub
xchg
xlat
and
mov
aam
add
push
out
push
cmp
mulb
push
fs
sbb
inc
mov
cmp
sub
jp
mov
add
cmp
lods
cmp
inc
jmp
fwait
xchg
push
fildll
fldt
inc
inc
test
and
xchg
adc
push
mov
inc
in
in
je
imul
push
push
repz
test
pop
dec
fcomi
addb
dec
add
sub
dec
adc
push
test
lret
cld
rcrb
movsb
jne
adc
fidivs
pop
push
shll
or
je
insb
add
or
out
std
mov
xor
stc
mov
jb
jp
popa
je
loope
cmp
lret
outsl
int3
outsl
int
into
push
iret
shrb
shlb
stos
loope
cmp
xor
push
aad
popa
sahf
out
mov
mov
repz
xor
inc
cmp
jae
jae
je
jns
out
icebp
repnz
loop
sahf
out
div
clc
stc
dec
lret
dec
js
cs
fmull
dec
dec
pusha
adc
ja
sarl
shlb
push
std
or
add
and
and
dec
pop
mov
xchg
js
icebp
adcb
push
cli
mov
es
cmp
lret
xchg
or
ficoml
ficoml
leave
mov
add
movsb
xchg
xorl
movsb
sahf
cmpsl
mov
sahf
out
jbe
jo
xor
lret
in
rorl
sti
cld
xor
movsl
aaa
clc
fmull
sbbl
cld
jmp
cltd
outsb
push
cmc
push
leave
rep
imul
mov
outsb
in
cwtl
pop
xor
mov
outsl
aam
iret
repz
iret
repz
imul
mov
sub
shlb
push
xchg
insb
ret
les
loop
lds
cltd
lcall
push
xchg
popf
je
push
lahf
outsl
mov
cmp
movsb
adc
mov
inc
fcoms
lods
dec
dec
insb
adc
movsl
mov
aas
into
cltd
mov
cld
jo
inc
test
inc
xor
enter
test
inc
je
xor
and
jne
gs
xchg
in
push
leave
div
cmp
outsl
arpl
add
mov
dec
xchg
push
push
pop
ret
mov
adc
pop
and
leave
adc
jo
add
add
jne
inc
mov
nop
cwtl
mov
mov
notl
pop
je
repnz
loopne
push
addr16
push
push
mov
stos
sbb
sbb
mov
jns
add
mov
sub
loop
push
add
add
test
jne
ret
cmpw
jne
mov
add
cmpl
aam
out
cwtl
pop
or
ret
mov
adc
jg
cmp
cmp
sub
sub
iret
je
sub
je
adc
pop
inc
pop
add
push
mov
in
out
add
in
xor
daa
add
push
or
or
add
jmp
cmp
jb
sbb
pusha
cltd
adc
add
dec
sbb
inc
in
int
inc
nop
pop
mov
or
and
sbb
xchg
std
add
cmpsl
push
mov
fs
testb
fwait
or
add
shlb
jae
add
sbb
mov
mov
add
jnp
cmp
mov
push
fsubrl
ret
es
inc
adc
add
rclb
rcrb
push
std
in
iret
mov
loopne
lods
dec
gs
pop
cwtl
dec
jo
sbb
jne
icebp
mov
je
in
jnp
lds
jmp
push
jge
jp
or
push
insb
lcall
int3
fistl
int3
in
repz
xchg
jns
outsb
data16
push
loop
xor
test
cmpsl
mov
xchg
ljmp
xchg
push
gs
mov
xchg
into
mov
sub
in
mov
je
iret
repz
jb
gs
jo
inc
mov
jae
sbb
movsb
movsl
dec
cmpsb
popa
cmpsl
outsb
test
cltd
pop
push
fs
and
stos
outsl
out
rorb
popf
sbb
lods
fimuls
inc
cmp
shrb
or
shlb
xchg
pop
xchg
add
push
ljmp
imul
xchg
and
cmp
ja
insl
mov
sub
add
scas
push
movsb
addr16
shll
adc
addb
in
sub
ret
aam
notb
ret
inc
daa
and
jl
add
rolb
or
mov
or
add
dec
jmp
pop
or
stos
dec
rol
cmp
add
je
mov
mov
test
je
mov
inc
hlt
andb
push
push
lret
xor
and
rcrl
inc
mov
shll
test
mov
inc
jecxz
sub
mov
mov
push
inc
cmp
add
jne
cmpb
je
mov
mov
inc
jmp
inc
jbe
inc
enter
out
sub
xchg
fbld
xlat
imul
dec
push
rdmsr
jb
popa
jg
fwait
clc
cmp
xor
gs
pushf
pop
xor
fwait
add
sti
sub
mov
cmp
sub
test
inc
cmp
jb
xor
mov
ljmp
addb
adc
add
jmp
push
mov
mov
inc
inc
test
jne
pop
sbb
pop
cmp
gs
addl
lcall
fs
pop
andb
imul
dec
push
in
in
and
outsb
out
call
repz
pop
jae
inc
lret
cmp
insb
mov
inc
faddl
dec
inc
inc
iret
sbb
jae
cmpsb
out
push
fmuls
sbb
dec
rcrb
adc
sub
mov
mov
rcrl
add
cmc
and
loop
push
xchg
mov
popf
fwait
push
hlt
insl
push
xchg
loope
inc
imulb
jb
gs
cmp
arpl
je
outsl
cld
jb
jns
in
dec
ret
incb
es
push
mov
sub
adc
mov
inc
push
stos
scas
sub
push
testl
xor
lret
arpl
testl
push
pop
idivl
jae
mov
push
add
sarl
ret
mov
jb
inc
and
iret
cmp
jbe
mov
addr16
mov
mov
add
cmp
pop
test
dec
insb
insb
addl
insb
xor
cmp
jb
jmp
mov
mov
add
push
add
movzwl
jo
xchg
test
mov
add
icebp
pop
add
fdivs
cmp
jb
mov
ret
repz
cmp
imul
repnz
lcall
sub
stos
cmpsb
mov
jg
test
rcrb
xlat
and
mov
mov
test
xchg
adc
jb
dec
mov
cld
daa
adc
mov
xor
mov
inc
dec
rcll
out
mov
or
mov
lret
mov
mov
fcoml
dec
pop
jnp
push
jge
js
cltd
dec
test
fwait
or
or
cmp
pop
mov
das
call
in
add
imul
mov
inc
dec
cmp
pusha
popa
pop
mov
mov
rclb
repz
call
push
test
int
push
push
pop
and
push
push
cmp
and
or
inc
decl
jne
cmp
dec
pop
fs
inc
aaa
hlt
dec
cmpsl
je
testl
inc
push
xor
jp
and
sub
cli
pop
pop
and
push
push
mov
jne
and
and
test
je
add
pushf
dec
sbb
imul
mov
incl
push
xor
imul
push
add
fsubr
jbe
clc
push
xchg
mov
addb
mov
or
jge
scas
loop
cmp
adc
leave
aaa
sbb
outsb
cs
lods
fucomi
enter
lock
or
mov
sub
or
insl
ret
push
cltd
sbb
mov
push
mov
jbe
imul
xor
push
mov
pusha
add
mov
xor
sahf
pop
bound
or
jbe
mov
add
pop
into
ds
or
stc
push
mov
scas
clc
out
jl
mov
cmpl
push
or
sub
add
out
dec
movsb
sub
scas
xchg
das
mov
jecxz
cmp
fwait
or
xor
iret
repz
push
dec
sahf
out
imul
call
lods
cltd
ds
pushfw
adc
cmp
loope
jae
data16
pop
repz
mov
cmp
sbb
xor
push
push
shlb
push
outsb
in
jne
mov
mov
push
push
shl
xchg
inc
icebp
ret
push
lret
push
add
jmp
or
mov
ret
cmp
lods
and
mov
mov
cmp
mov
mov
mov
mov
mov
push
xchg
loope
ja
jae
inc
mov
adc
jb
je
or
mov
pushf
rcrb
stc
inc
shlb
test
imul
cmpsb
push
cwtl
decb
aas
je
xchg
std
xchg
std
cmp
repz
insb
insb
inc
popa
mov
enter
aam
push
insb
pop
jmp
popa
je
sti
and
xchg
movsl
mov
dec
mov
hlt
xchg
pop
jge
stos
stos
push
xor
arpl
insb
lods
push
cwtl
add
cltd
pop
idiv
add
cmp
adc
jl
mov
cmp
dec
lds
out
mul
mov
aad
mov
idivl
loop
pushf
mov
push
imul
out
sub
jge
loope
xchg
xor
mov
aad
inc
push
sahf
xlat
push
sbb
out
notl
adc
in
sbb
push
call
lods
dec
inc
je
sbb
xchg
out
jns
inc
out
push
cmp
imul
ss
aam
cmp
inc
add
out
fcmovnu
jmp
js
jno
dec
lods
aam
outsb
popf
push
aad
hlt
mov
dec
repz
insl
xchg
xor
in
inc
enter
or
and
dec
insb
gs
lret
inc
imul
pushf
cmc
pop
mov
or
ror
xor
nop
add
jnp
dec
scas
sbb
xor
into
pop
outsb
jecxz
pop
push
cmc
lahf
lret
lahf
cmp
add
mov
gs
jns
cmp
movsl
mov
insl
add
xor
das
leave
rol
fsubs
dec
jmp
icebp
insb
sub
sub
xchg
movsl
or
in
negb
lahf
push
pop
pop
movl
or
mov
daa
jno
sub
add
jno
insl
jl
sbb
add
xor
push
sub
js
pop
jp
pop
cmpsb
pop
je
mov
cmp
scas
int3
addr16
mov
js
mov
test
popa
das
movsb
fstps
loopne
pop
xlat
and
or
nop
sbb
sub
push
sbb
jbe
inc
ret
add
mov
popl
xchg
repnz
addb
push
inc
fmuls
popa
test
mov
pop
ret
test
movsbl
daa
jo
cmp
jl,pn
cmp
je
rolb
je,pn
cmp
xor
pop
nop
push
loopne
mov
and
rcrb
xchg
dec
and
daa
add
clc
data16
xchg
jno
lock
movb
mov
loopne
test
fistl
leave
push
das
or
insb
and
cmp
push
into
mov
fiadds
adc
daa
and
push
fstl
lret
or
push
cmpsb
call
roll
stos
mov
mov
jne
add
into
bound
jne
jmp
stos
mov
pushf
aaa
repz
and
mov
and
add
nop
and
ret
pop
jp
in
sbb
mov
push
repz
inc
imul
push
push
mov
mov
push
repz
sbb
adc
sbb
inc
push
repz
and
mov
mov
sbb
pop
jne
das
mov
lcall
xor
lea
lretw
call
addb
mov
inc
aaa
add
shrb
sbb
jge
jnp
pop
or
lret
push
cmpb
sub
jecxz
inc
lds
add
or
mov
test
dec
stos
mov
stc
arpl
pop
inc
pop
iret
mov
es
push
sub
das
mov
xchg
mov
cli
mov
xor
insl
adc
je
test
xlat
sbb
rcrl
aam
xor
inc
insl
std
icebp
sub
jmp
out
push
inc
outsl
jge
into
sahf
clc
enter
push
push
pop
orl
sub
popa
mov
imulb
inc
rcll
out
fsubl
andb
cmp
add
fldenv
add
insb
adc
sub
or
aad
test
pushf
outsb
orb
gs
fsts
push
cmpsb
sub
sbb
jge
out
movsb
ss
mov
xchg
add
je
jmp
and
adc
inc
push
pushl
push
adc
adc
test
aam
push
sarb
loop
jl
dec
mov
sbb
mov
add
daa
stos
mov
adc
inc
push
aas
lret
test
repz
lds
pop
xor
xchg
repnz
jae
sbb
push
xor
call
arpl
insb
ljmp
outsl
jge
push
sahf
arpl
movsl
shrb
add
inc
cltd
enter
adc
mov
sbb
and
sbb
subb
sub
sbb
je
int3
cmp
loop
mov
enter
in
imul
loopne
adc
push
push
push
test
rcrl
add
add
sub
divl
cmp
pop
sub
and
or
mov
jp
clc
jle
popf
sbb
sbb
jecxz
shl
in
enter
fadds
nop
int3
jmp
cmpsl
lds
sub
sbb
in
cmp
cmp
mov
nop
cmpsb
sbb
mov
or
dec
mov
dec
mov
pop
sub
es
adc
push
sub
push
jbe
pop
pop
sbb
add
mov
pop
call
cmp
sub
cmpsl
jnp
pop
pop
ret
sbb
jno
enter
jo
int3
dec
dec
push
dec
push
mov
xlat
dec
push
push
or
addr16
or
pop
pop
jmp
and
loope
and
push
out
push
sub
sub
jae
cmp
mov
add
push
loop
rol
add
out
jb
ja
xchg
sbb
js
jno
push
pop
mov
jne
jne
loope
cmp
jne
jbe
jbe
jbe
jbe
xchg
xchg
jne
jbe
jbe
jbe
jo
sbb
jbe
ja
jbe
jbe
jbe
push
xchg
data16
jbe
ja
ja
loop
cmp
ja
ja
ja
sarb
mov
xlat
inc
jl
jne
jne
shlb
cmp
data16
jne
jne
jne
imul
jne
es
stc
dec
out
adc
sub
xchg
jne
je
ljmp
ror
mov
mov
mov
out
jp
fs
push
dec
loope
sahf
out
xor
test
jl
ret
loope
mov
mov
xchg
ja
ja
ffreep
loope
ja
js
js
popa
sbbl
repz
pop
jae
xor
add
xor
inc
pop
andb
push
inc
pop
loope
ja
jae
sub
rdmsr
push
mov
out
dec
dec
add
and
add
insb
outsl
jae
fs
insb
insb
add
sarb
imul
or
outsl
jo
outsb
add
je
sub
jb
add
add
lret
gs
gs
push
inc
pop
fs
mov
mov
imul
insl
arpl
leave
bound
cltd
sti
repnz
or
les
push
cmp
sub
cmpsb
push
sub
pop
pusha
enter
je
insl
fisubs
cmp
pop
and
outsb
jb
sbb
mov
shrl
xchg
xchg
dec
add
xchg
xchg
add
arpl
inc
dec
aaa
xchg
outsb
cmp
ja
imul
mov
bound
push
pop
inc
js
inc
dec
and
jo
add
outsl
sbb
ja
add
inc
sbb
sbb
cmpsl
cwtl
pop
lcall
lock
xor
ret
imul
push
cs
xor
push
dec
inc
dec
xor
test
lds
lods
inc
inc
repnz
xchg
dec
bound
arpl
push
sahf
and
fwait
sub
loop
push
jbe
add
fildl
insl
shrl
cmp
outsb
sub
imul
lret
push
mov
jbe
xchg
pop
cmp
xchg
add
inc
inc
dec
lock
or
add
sub
add
fs
xor
add
mov
jb
jb
jge
cmp
dec
or
jns
add
jmp
sub
aad
imul
push
outsb
addr16
mov
ficoml
jne
outsl
fs
scas
and
inc
xchg
inc
enter
or
jp
ffree
push
jbe
bound
push
or
jae
jle
push
imul
outsl
dec
pop
call
mov
mov
das
ret
xchg
and
icebp
jns
xlat
add
adc
dec
mov
mov
mov
lcall
jne
mov
inc
loope
add
daa
xor
scas
cmp
dec
inc
dec
add
or
in
cmpsl
and
push
fcmovu
push
and
ret
ljmp
jnp
xchg
push
push
scas
dec
fidivs
sbb
xor
fcomps
sbb
add
xor
arpl
and
adc
outsl
imul
jle
mov
sahf
push
jae
add
popa
pop
ja
push
ret
sbb
fnstenv
gs
cmpb
fs
pusha
xchg
jp
ja
ja
xor
add
and
ret
mov
in
add
pop
out
out
out
fcmovnu
mov
out
subl
rolw
mov
iret
iret
sub
push
sahf
imul
repz
test
les
mov
cmp
fdivs
adc
mov
scas
mov
imul
adc
mov
jecxz,pn
fucom
arpl
fdivrs
insl
sub
pop
fisttpl
cmc
fucom
popa
nop
cmp
add
inc
clc
ljmp
std
ret
mov
imulb
sahf
and
pop
mov
mov
les
cmp
sub
cmp
loope
jmp
imul
and
ss
ss
push
idivl
out
enter
dec
les
ljmp
jmp
mov
je
push
adc
mov
push
repz
cmpsl
inc
pusha
int
jb
gs
in
std
mov
dec
sub
out
icebp
add
jbe
xor
cmpl
add
dec
add
insb
idiv
jnp
pop
adc
xchg
xlat
adc
jmp
notb
jno
push
mov
push
sub
mov
pop
inc
mov
add
addb
test
cmp
pop
cmp
mov
dec
jge
call
pop
fnstcw
movl
push
rolb
out
and
sbb
out
fidivrs
addb
mov
add
dec
repz
cmp
mov
addr16
add
pop
lret
dec
mov
push
adc
push
testl
mov
dec
insb
pop
sbb
ljmp
and
mov
xor
imul
mov
sub
inc
fcmovnbe
loop
fcomps
pop
imul
pop
leave
into
test
sti
loope
sub
xor
in
fistpl
repz
jbe
cmp
mov
inc
jl
xor
ja
testb
inc
jecxz
fninit
sbb
leave
mov
cmp
add
das
sub
filds
jns
xorl
loop
add
aad
stos
push
lret
cmpsb
vcvtps2dq
imul
mov
and
es
sub
sub
add
aad
pop
add
jmp
iret
scas
mov
dec
push
test
notb
cmp
daa
jbe
or
jbe
imul
inc
sti
inc
int
push
js
xchg
cmp
ljmp
aas
inc
das
and
sbb
add
cmp
in
sub
xchg
cmp
xchg
lcall
mov
ss
mov
mov
subb
insl
sbb
pushf
cmp
jmp
idiv
or
das
ret
xchg
out
pusha
pushf
dec
cmpsb
rcrl
pop
test
pop
shll
push
ljmp
cs
int
cmpsl
sti
out
mov
popf
or
mov
icebp
idiv
jnp
mov
xor
mov
scas
adc
dec
loope
cmpsb
lds
cmp
sbb
ds
clc
imul
jmp
pop
push
add
in
xchg
loope
outsb
mov
fdivr
addb
add
sarl
adc
leave
sar
cmp
mov
fmull
push
and
dec
subl
popaw
jecxz
lcall
jne
sub
jns
imul
aas
popa
arpl
cmp
outsl
data16
pop
rol
iret
mov
inc
add
icebp
enter
pop
adc
pushf
scas
add
cmp
inc
mov
xor
mov
arpl
push
add
jbe
sarl
sub
nop
icebp
cmp
xor
and
jns
gs
out
or
ja
or
push
xor
mov
xor
mov
push
inc
inc
outsl
insl
jo
arpl
iret
imul
adc
nop
dec
daa
fcomip
insl
je
mov
push
push
or
or
je
loope
adc
inc
outsl
fisttps
mov
push
insb
add
je
test
cmpb
das
xor
xor
les
mov
sub
clc
push
loopne
jo
and
jnp
cli
insb
and
xor
sbb
addr16
cmp
jae
shrb
das
imul
js
js
daa
pusha
cmpsb
mov
jo
lret
jo
imul
popa
cmp
popf
iret
xchg
insb
ja
push
xlat
jb,pn
jo
fiadds
fcmovb
sub
sub
or
lea
das
xor
push
push
xor
mov
dec
lods
outsl
push
jns
sbbb
or
sub
aam
inc
fisubl
gs
pop
lcall
js
or
daa
add
add
add
add
pop
rorb
push
add
or
or
push
lret
inc
add
pop
orb
mov
test
and
xchg
push
add
push
sub
or
dec
dec
push
testl
jb
or
ret
cmp
add
gs
xchg
push
lret
pop
sub
adc
sarl
mov
push
pop
push
lret
pushw
sbb
insb
int3
ja
negb
fwait
pop
pushf
adc
outsb
leave
popa
pop
xor
stc
dec
jl
or
negb
dec
add
xchg
push
loop
jb
out
mov
leave
pusha
jno
jbe
cmp
fcompl
adc
xchg
stc
adc
jl
outsl
cltd
adc
cld
cld
pop
and
and
aas
push
stc
in
sub
or
outsb
shll
push
sbb
sub
adc
pop
mov
in
hlt
data16
jo
gs
push
mov
mov
je
xchg
lret
and
or
add
mov
pop
dec
ret
insl
pop
add
xor
dec
add
add
xor
xchg
int3
lods
and
or
add
sahf
in
sub
into
cmpsb
lret
or
aaa
mov
cmp
pop
mov
call
dec
shrl
bswap
xchg
loopne
dec
xchg
aad
pop
adc
lret
xor
sbb
ss
mov
pop
jl
pop
xchg
adc
or
add
movsb
lods
daa
and
adc
outsb
xor
push
btsl
ss
xchg
repz
sbb
rolb
xor
sbb
jae
push
or
stos
xchg
loop
lds
lds
jae
icebp
adc
lcall
pop
jo
sbb
cltd
sub
or
sbb
ret
adc
sub
xor
mov
lods
sub
pop
sbb
jge
in
xor
sub
in
cmp
insl
pop
jb
test
or
pop
or
cwtl
mov
mov
pop
repnz
xchg
das
cmp
inc
popa
rclb
mov
movsb
pop
sbb
jne
mov
test
xchg
sbbb
sub
leave
es
outsl
xor
fsubrl
outsb
sbb
roll
and
mov
es
xor
jb
pop
or
mov
jae
fdiv
gs
int
inc
lds
mov
inc
cmp
lods
mov
stc
add
pusha
jg
test
je
xor
hlt
insb
scas
lds
or
dec
push
xor
jl
inc
ss
pop
sbb
sub
ds
add
jge
negl
addr16
in
jae
mov
loop
xor
jns
clc
adc
int
int
xorb
add
mov
ss
mov
add
js
add
add
add
add
add
add
add
push
add
add
add
add
inc
add
dec
add
mov
dec
add
inc
popa
outsb
arpl
inc
insb
insb
add
fs
insb
insb
add
add
push
add
push
add
add
add
add
add
add
add
xchg
add
add
add
mov
push
add
push
add
decl
push
add
add
add
add
jmp
push
add
add
add
add
jl
push
add
add
decl
add
mov
push
add
jmp
push
add
jb
gs
xor
cs
insb
add
add
add
dec
outsl
popa
fs
imul
add
add
inc
gs
jb
arpl
fs
jae
add
add
add
push
imul
insb
insb
outsl
arpl
add
add
jb
jne
insb
inc
jb
add
add
push
inc
push
push
cs
insb
add
add
pop
jbe
outsb
jo
imul
add
dec
inc
dec
xor
cs
insb
add
dec
xor
cs
insb
add
add
add
gs
dec
bound
arpl
push
push
inc
push
xor
cs
insb
add
add
push
outsb
push
imul
outsl
outsl
imul
add
outsl
jne
fs
fstpl
adc
outsb
gs
adc
xor
movsb
aam
dec
or
insb
adc
add
add
sbb
pusha
mov
mov
cld
lods
xor
test
je
loopne
sbb
xor
lea
movsb
mov
call
cmp
jae
push
or
xor
inc
xor
mov
lea
mov
mov
call
sub
lea
add
mov
call
pop
sub
jae
and
call
mov
call
jne
pop
cmpsb
sub
inc
mov
sub
add
fcos
cmp
sub
add
movsb
pop
inc
inc
jmp
add
jne
xchg
lods
xchg
inc
ret
add
flds
in
call
leave
call
out
jb
ret
sub
sbb
ret
add
sub
sub
adc
inc
js
pusha
add
fs
jae
jp
dec
gs
xor
add
push
pop
mov
movl
sub
push
rolb
pop
pop
std
dec
outsl
cmp
xlat
mov
cld
xchg
jno
or
jne
pushf
jo
push
fdivrl
sarl
cmp
test
sarl
add
popa
or
push
push
push
call
pop
sub
inc
loopne
jo
mov
addl
add
cld
mov
mov
mov
add
lea
or
rol
cmpl
je
mov
test
je
mov
orl
mov
sbb
das
add
mov
lea
inc
jo
cltd
lods
nop
mov
repnz
mov
clc
sub
sbb
xchg
aaa
mov
daa
push
call
cmp
mov
cmpsb
sti
dec
xchg
inc
cltd
mov
lds
push
add
test
je
cmp
sbb
inc
push
jnp
mov
or
scas
cmp
lock
jmp
ror
sub
push
and
jg
lea
cmp
add
or
enter
cmp
sbb
push
fcmovnb
mov
stos
call
push
jmp
xchg
gs
add
xor
jne
or
dec
inc
mov
add
movb
add
mov
or
nop
sahf
adc
jmp
mov
push
call
int3
adc
cmp
inc
or
adc
adc
pop
pop
ret
push
mov
add
les
jmp
adc
outsl
mov
add
push
call
mov
add
jle
or
sti
xor
add
je
push
mov
add
add
or
jne
xor
jmp
add
imul
js
dec
cmp
clc
mov
jmp
cmp
je
add
cmp
repz
sub
mov
lods
mov
add
lods
aas
mov
sub
add
in
movw
cmpw
add
add
sbb
sbb
mov
and
rcll
clc
add
mov
add
dec
lret
aad
lods
shr
mov
add
leave
mov
shlb
sbb
or
add
test
or
push
push
lret
push
mov
call
pop
push
or
sub
cmp
or
popf
xchg
xor
push
jmp
es
fimuls
inc
adc
jne
test
sub
dec
cld
add
and
pop
adc
jge
mov
inc
add
rolb
push
cld
sub
je
dec
mov
jne
mov
ret
or
rclb
adc
add
add
and
enter
or
add
je
cmp
push
cmp
add
or
js
jmp
push
ror
loopne
ret
lahf
and
in
add
jbe
push
push
call
popa
xor
push
cmpsb
shll
inc
pop
mov
pop
fiadds
pop
test
dec
dec
jae
lock
xchg
or
sar
xchg
add
movsl
add
add
push
jnp
cli
ret
xchg
sarl
add
stos
pop
mov
fsub
cmp
lret
ret
jne
inc
sbb
frstor
inc
add
add
lock
push
push
adc
dec
xchg
pop
xor
mov
imulb
adc
enter
inc
pop
in
lods
call
sub
gs
hlt
push
or
dec
loop
je
mov
cmp
shl
adc
je
daa
je
mov
cmp
inc
in
arpl
cmpsb
sub
lret
xorb
jne
jmp
mov
clc
decl
and
shl
sub
pop
enter
out
sbb
pop
or
arpl
jns
movl
and
sbb
cmp
je
add
add
roll
imul
jge
lcall
push
push
push
call
sbb
xchg
add
adc
rcrb
insl
js
js
sbb
mov
scas
leave
data16
inc
inc
mov
adc
call
xchg
fldl
xchg
int3
add
jmp
pop
pop
adc
add
xchg
push
adc
add
mov
imul
inc
push
xchg
mov
pop
mov
and
jmp
mov
mov
sbb
inc
push
inc
xchg
enter
pop
mov
inc
mov
or
mov
or
push
jp
mov
fxch
cmpsb
jmp
xchg
jae
xor
icebp
mov
cmp
imul
xor
add
add
cmp
adc
add
sub
jl
sbb
shr
or
lea
push
add
loopne
insb
sti
push
mov
test
jno
push
add
orb
xor
test
bound
iret
cmpsl
or
push
addr16
or
cmp
xchg
iret
inc
cmp
pop
lea
add
and
call
jg
mov
inc
jo
insb
imul
and
jb
jb
add
sub
arpl
jo
add
and
arpl
jne
and
mov
insb
and
je
bound
add
push
pop
mov
je
dec
dec
push
sub
fs
insb
fs
fsubrs
add
push
mov
jae
xor
dec
gs
popa
addr16
outsl
js
add
pop
fdivs
jno
mov
inc
js
je
stc
es
cmpsl
add
add
outsb
fs
add
outsb
inc
mov
cli
sti
mov
insb
cli
popf
outsl
add
jb
jne
test
je
pop
dec
sbb
sbb
aaa
iret
mov
insl
shll
sahf
out
push
cmp
ret
adc
jp
sub
decb
inc
mov
and
jl
sub
lods
xor
test
je
xor
lea
movsb
mov
call
jae
cmp
jae
push
push
push
xor
inc
xor
mov
lea
mov
mov
call
jae
lea
add
mov
call
jae
pop
pop
pop
sub
jae
mov
call
jmp
mov
call
adc
dec
jne
inc
call
mov
cmp
sbb
cmp
sbb
push
mov
sub
rep
pop
inc
inc
jmp
add
jne
xchg
lods
xchg
add
inc
ret
xor
inc
call
adc
call
jb
ret
sub
mov
popa
ret
add
add
mov
add
add
or
push
add
add
add
pusha
add
add
mov
lea
mov
mov
mov
movb
add
sub
mov
xor
ret
mov
popl
add
push
push
push
push
push
push
lea
mov
push
mov
push
push
pushl
push
mov
add
mov
call
pop
mov
push
push
mov
mov
add
mov
mov
mov
add
mov
mov
add
mov
add
lea
push
push
push
call
pop
pop
add
mov
push
mov
mov
add
sub
mov
mov
mov
call
mov
mov
mov
pop
jmp
add
push
push
push
call
mov
pop
pop
pop
pop
pop
pop
jmp
