mov
inc
and
and
add
in
sub
movsl
in
fnstsw
incl
push
push
push
pop
xor
lea
lock
stos
stos
stos
adc
int
stos
add
and
and
jmp
or
sti
ljmp
mov
cmp
add
xor
test
mov
jle
jg
push
mov
adc
das
or
pop
sti
xor
push
pop
pushl
movzbl
push
je
mov
push
call
push
push
fsubs
fcompl
std
aaa
inc
inc
dec
sub
dec
push
sub
out
xor
push
adc
push
or
adc
cmp
push
jmp
test
sbb
loope
outsb
fcomip
aas
pop
pop
push
pop
pop
pop
leave
ret
xor
push
cmp
outsb
push
mov
add
or
add
fs
lret
in
imul
jne
jae
pop
mov
sbb
cs
adc
insb
mov
call
add
repz
sbb
mov
lcall
ret
inc
add
xchg
lret
in
gs
je
dec
enter
xchg
fldt
pop
int3
inc
add
outsb
into
arpl
scas
fldcw
iret
outsl
cmp
rcll
shlb
shr
xchg
jae
scas
pop
cmp
pop
mov
js
cmpsb
imul
cmpsl
lcall
stos
lods
lods
imul
imul
fdivl
fstpt
jp
mov
in
adc
jne
push
lock
popa
lea
push
add
push
out
iret
ret
push
clc
add
mov
push
mov
push
add
pop
fcomp
cld
cmpsl
cmp
xor
adc
cmp
pop
or
add
cmp
out
fisttpll
repz
add
lcall
loope
jle
dec
incb
lea
push
adc
push
int3
in
mov
movl
mov
imul
in
out
fistps
lock
icebp
xor
repz
cmpsb
imul
push
loope
lret
insl
xlat
loop
jecxz
pmulhuw
out
mov
imul
ljmp
je
lea
push
and
ret
and
cmp
mov
or
ss
push
push
sub
mov
inc
push
xadd
pop
outsb
pop
roll
ret
add
or
pop
or
nop
inc
inc
push
mov
jbe
jo
aaa
inc
mov
daa
inc
add
inc
popa
or
xor
mov
jne
xor
insb
aaa
cld
cmp
jb
or
outsb
insb
jae
pop
or
push
or
clc
or
jge
shrb
mov
fiadds
push
pop
pop
shr
pop
push
mov
cmp
test
adc
lret
cmpsb
imul
imul
cmp
test
add
or
push
jb
jae
xchg
imul
inc
jne
imul
fs
jp
inc
jnp
xchg
out
in
jl
jge
insl
jle
int
mov
inc
xorl
xchg
insl
test
inc
xchg
push
and
in
mov
inc
mov
mov
mov
sbb
adc
aaa
decb
xchg
popa
dec
mov
cs
jbe
gs
xchg
xchg
jne
shll
cwtl
cltd
pop
lcall
sbbl
lahf
jl
out
inc
test
les
fdivl
rol
enter
jae
jae
lcall
int
ror
or
sbb
jo
rclb
pop
xor
enter
mov
movsb
jmp
imul
jae
push
mov
push
adc
mov
mov
movsb
lea
cld
inc
fcmovb
adc
insb
movsb
add
mov
insl
push
rclb
push
movw
dec
ja
add
adc
add
out
sahf
cmpsb
pop
popa
pop
addr16
sahf
out
sahf
gs
and
pusha
push
ss
imul
push
add
cmp
and
sti
in
arpl
push
ficomps
push
and
adc
or
mov
or
arpl
mov
sbb
insl
addl
insb
rol
mov
loopne
or
inc
adc
out
jmp
cmp
mov
rcrl
sbbb
repz
push
sub
jl
js
les
cmp
jg
or
mov
pop
mov
int3
push
lcall
cwtl
sbb
into
insl
jae
push
push
lret
pop
int3
in
jae
sahf
psubq
adc
fsubrs
sarb
jmp
mov
inc
push
mov
arpl
adc
push
out
mov
outsl
jecxz
mov
jb
jbe
jnp
sub
and
add
xor
imul
lock
xchg
lret
in
repnz
repz
cs
js
in
popa
imulb
insb
xor
cmp
stc
gs
loope
sbb
add
jbe
sbb
push
fdivr
data16
jmp
mov
mov
xlat
idivb
je
mov
nop
mov
jb
ror
jne
test
outsb
or
sbb
jmp
add
sbb
or
mov
add
mov
mov
fistpl
add
xor
or
or
mov
or
or
addl
or
push
das
cmp
gs
add
ss
mov
sbb
pop
and
shrl
pop
insb
pushl
mov
xor
push
push
push
loope
mov
add
dec
mulb
pop
clc
push
fldl
cmp
lret
push
icebp
or
shll
jmp
andl
add
lods
repz
mov
xchg
lret
lods
adc
int3
or
into
add
test
ss
jle
or
lods
adc
das
dec
pop
cmp
sbb
or
xorl
add
lret
insl
mov
xlat
fdiv
mov
or
divl
dec
adc
jecxz
jb
enter
fwait
in
pop
out
out
in
cs
inc
lock
icebp
push
xor
nop
gs
jno
cmpsb
imul
call
pop
repnz
or
fimuls
add
pop
test
jno
xor
mov
popa
subl
inc
cli
in
clc
movb
xor
add
dec
ss
and
hlt
pop
sub
inc
into
sbb
and
in
filds
inc
and
pop
stos
sub
repnz
dec
xor
sub
enter
test
fs
inc
xor
jnp
in
enter
fcmovb
pusha
push
push
sbb
popa
push
aaa
fsubrp
pop
cmp
cmpsl
je
push
movsl
jge
jmp
lret
push
adc
and
inc
cli
cmp
push
shrb
push
push
loopne
sti
jbe
pop
ret
push
push
add
and
les
aam
mov
cmp
push
sub
idivb
mov
fidivs
cltd
cmpsb
and
jle
add
or
cmp
sbb
add
or
or
sub
sub
cwtl
sbb
mov
xor
pusha
std
popa
std
repnz
sbbl
sbb
pop
movsb
cli
xor
jns
inc
movsb
cli
movsb
cli
insb
sti
sbb
in
insl
sti
pop
insb
sti
pop
repnz
xchg
insb
sti
xor
xor
or
subb
xor
push
dec
or
jae
mov
xor
add
xor
push
sti
pop
mulps
popf
push
fdivs
and
cmp
pushl
int3
out
cmp
fsubrl
jo
jo
dec
inc
push
jns
loopne
das
cmp
sbb
cmp
std
cld
xchg
or
cld
frndint
out
cmp
std
lds
cmp
mov
fs
std
or
repnz
mov
push
add
cmp
and
lret
add
jae
xor
adc
sbb
mov
mov
mov
ret
dec
shll
enter
cmpsb
pop
leave
lret
int
xor
cmpsb
into
iret
cmp
rcl
fnstenvs
cmp
lret
cmpsb
imul
cmpsb
imul
or
xor
inc
jae
es
aaa
mov
dec
add
inc
mov
std
enter
add
or
sub
adcb
cwtl
mov
test
push
sub
lea
dec
orb
push
mov
dec
icebp
repnz
hlt
cmc
int
imul
push
or
ss
jae
cmp
repnz
shl
mov
movsl
in
out
or
pusha
pushf
cmpl
je
lcall
popf
mov
xchg
mov
cmp
pop
ja
or
pop
jb
push
ret
dec
inc
mov
add
and
add
sbb
mov
outsb
icebp
push
adc
xor
aaa
ja
addr16
inc
imul
movl
addr16
test
push
mov
jg
fildl
cwtl
mov
and
cltd
and
loopne
xor
push
imul
or
int3
sbb
je
xor
xor
shll
outsl
arpl
xor
imul
xor
cmp
and
lods
jge
mov
in
in
xor
shlb
stos
jb
in
xchg
mov
das
cmp
pop
xor
adc
mov
les
pushf
add
rorl
push
test
aad
push
inc
out
mov
mov
jle
movsb
inc
mov
inc
add
jne
jb
stos
pop
lods
outsb
sbb
jne
lods
scas
in
scas
adc
insl
xlat
jne
mov
mov
mov
leave
mov
mov
push
sub
xor
hlt
hlt
pop
shrl
dec
inc
cmc
jo
idiv
inc
stc
xor
shll
sti
cld
std
mov
call
loopne
loope
and
insl
cmpsb
mov
imul
cmpsb
jmp
inc
ljmp
imul
mov
pop
or
sub
lcall
jb
imul
ficompl
sub
ret
pusha
mov
imul
test
mov
cwtl
loope
xlat
mov
mov
cmpsb
lret
dec
daa
and
adc
lcall
rclb
inc
insl
mov
or
stos
nop
adc
inc
sahf
xor
sbb
jnp
and
in
mov
jmp
sub
icebp
rolb
and
add
mov
jmp
das
fs
mov
cbtw
sti
jle
mov
sbb
pop
mov
adc
dec
and
out
adc
into
push
inc
xchg
mov
push
push
add
sub
loopne
mov
insl
lahf
dec
rorb
xchg
mov
adc
xorl
mov
push
dec
and
call
stos
js
sbb
not
jae
sarb
popa
cmpsb
imul
imul
imul
into
adc
cmpsl
mov
fs
or
push
mov
mov
movsb
pop
sti
jl
movsb
add
push
and
clc
and
xor
stos
mov
xor
fs
mov
pop
loopne
outsl
data16
int3
int
iret
dec
adc
popfw
aaa
ret
adc
ret
adc
push
fstps
shll
out
lock
repnz
shll
hlt
cmc
div
shll
sti
cld
or
mov
and
pop
mov
xor
ss
mov
je
stos
push
adc
or
pusha
add
pushf
insb
mov
push
cmp
mov
add
adc
mov
jl
fstpt
lahf
sahf
xchg
xchg
aam
fs
push
or
or
jns
lea
movsl
movsl
and
sbb
mov
movsl
cmc
enter
imul
popa
bound
pop
mov
inc
mov
ja
clc
and
inc
in
lds
cmp
add
jl
cmp
jg
sub
insl
or
push
push
in
pushf
mov
adc
jbe
cmpb
inc
outsl
loope
push
cmp
pop
jb
jmp
andb
popf
mov
add
sbb
pop
jne
cmp
repnz
mov
sub
sub
sti
out
or
cwtl
or
mull
sbb
loope
adc
push
dec
divb
cmp
add
pop
loopne
aas
mov
push
jge
and
add
sbb
pop
push
xor
push
inc
fcoms
pushf
cmp
outsb
xor
cs
mov
das
fcompl
jmp
cmp
push
add
adc
jae
push
inc
inc
add
mov
mov
mov
les
sub
pop
mov
out
faddl
push
xlat
sbbb
or
sub
leave
pop
push
and
cmp
stos
push
xchg
jg
decb
pusha
and
xchg
les
rol
popf
and
imul
xor
jne
scas
push
lcall
dec
cmp
lcall
movsl
pop
lcall
jae
pop
lcall
leave
shrb
imul
ds
push
push
dec
outsb
sub
ljmp
pop
xchg
gs
insb
outsl
jb
xchg
gs
gs
gs
shll
dec
push
push
sub
pop
xor
dec
shlb
aam
inc
or
aad
aam
lret
mov
lret
jae
popa
imul
sub
mov
mov
movsl
xor
scas
imul
dec
ja
xor
and
sti
dec
and
mov
popa
and
out
ret
shlb
sub
pushf
jo
push
sub
sub
xor
dec
inc
sub
int
rcrb
xor
push
into
shrb
xor
xor
cli
lret
in
inc
xor
inc
mov
lret
in
push
lock
repnz
add
jbe
jbe
mov
jnp
nop
or
je
dec
je
or
push
or
or
popf
popf
popf
movaps
adc
mov
int
xor
xor
jbe
ret
push
push
jnp
daa
dec
jae
sbb
test
pop
mov
data16
push
arpl
jae
xor
and
mov
mov
add
bound
push
nop
xchg
xchg
imul
lcall
gs
push
cltd
mov
xchg
fs
push
adc
nop
sub
and
mov
shrb
or
pusha
inc
popa
addr16
je
bound
or
popf
sub
daa
pushw
fs
xor
imul
loope
sub
insl
xor
outsb
mov
into
push
ret
fucomi
fmul
in
jmp
fbld
loope
pop
dec
xchg
insb
loop
hlt
mov
sub
push
imul
cmpsl
jae
lret
out
in
test
into
jo
pop
imul
jne
inc
inc
inc
inc
insb
push
jne
fs
jns
js
popf
sbbb
in
fs
pop
push
inc
dec
dec
push
push
adc
cmp
push
push
fs
cmp
push
xor
push
xchg
push
movsb
mov
into
push
push
pop
sbb
insb
out
in
pop
aaa
pop
mov
bswap
test
fisubrl
and
cmp
or
add
mov
and
add
inc
testl
movl
jge
push
hlt
adc
push
arpl
sub
add
rorb
and
in
insl
push
dec
xchg
cmp
insb
movsl
push
mov
mov
and
xchg
aaa
popa
in
jne
and
call
sbb
out
inc
and
cwtl
shr
in
lods
mov
insb
out
divb
sbb
sub
inc
jb
sub
rorl
xorb
cmp
and
inc
stos
adc
add
sub
inc
cs
xor
adc
xchg
shrb
or
cmp
inc
or
lds
enter
lea
fcoms
or
sarb
cli
sub
inc
mov
popa
push
jp
hlt
jno
and
dec
subb
xchg
fcompl
sti
or
in
cli
je
and
add
pushl
not
outsb
nopl
push
xchg
insb
das
ds
test
cmp
loop
sti
rorb
push
fs
mov
add
push
leave
aaa
hlt
aas
pushf
lret
mov
cs
cmpl
mov
mov
jne
or
mov
faddl
add
pushf
out
mov
push
inc
movsb
shll
loopne
cmpsl
inc
aaa
fs
mov
data16
ja
jmp
jmp
pop
je
cmp
jb
dec
dec
cmpw
jne
pop
adc
mov
add
jne
movsl
dec
shll
push
mov
fbstp
andb
mov
mov
jns
stos
xchg
or
insl
pop
enter
ljmp
and
popf
cmp
out
stos
call
sub
jno
push
je
sub
push
add
xchg
sub
cmp
inc
inc
sub
jecxz
mov
push
fwait
int
push
daa
out
cmpsb
imul
push
add
dec
mov
cmpsb
je
in
outsl
gs
xchg
gs
addr16
jne
mov
add
ljmp
sub
out
or
xchg
clc
and
sub
rcrb
sarb
mov
or
inc
dec
cmpsl
bound
inc
dec
push
mov
fcomps
adcl
popa
mov
push
lea
xor
leave
subb
mov
mov
insb
or
cmp
push
inc
mov
pop
jmp
pop
adc
pcmpgtw
imul
into
imul
hlt
or
mov
insb
int
pop
mov
xor
push
and
in
movsb
jmp
push
and
mov
test
and
sbb
stc
pop
in
add
sbb
push
mov
cld
es
sub
stc
clc
bnd
xor
adc
cld
lock
popa
repnz
in
or
mov
inc
sbb
stos
jb
push
stos
push
sarl
and
les
imul
cmp
ret
mov
cmp
cwtl
jo
mov
pushf
popa
mov
fadds
or
mov
add
ret
es
pop
adc
out
popf
shll
je
dec
shll
fs
sub
jecxz
in
sbb
repnz
lods
hlt
js
test
cmc
xchg
loopne
int
mov
gs
popa
push
add
adc
popa
xchg
mov
imul
pushf
or
or
cs
dec
push
push
mov
pusha
dec
mov
xchg
pop
add
inc
cmp
jnp
jmp
adc
adc
mov
mov
adc
jmp
in
hlt
sbb
push
add
and
jb
inc
xor
jecxz
mov
lock
sbb
sub
insl
sbb
mov
je
add
pop
mov
fstpt
outsb
or
addb
es
inc
lods
clc
push
cli
inc
insb
dec
repnz
xor
push
scas
xchg
gs
xchg
push
dec
dec
dec
dec
inc
pop
xchg
gs
push
cs
insb
pop
mov
dec
imul
shrd
scas
scas
adc
btr
lcall
mov
dec
mov
mov
orl
mov
sahf
outsb
mov
push
gs
popf
data16
imul
mov
lcall
cltd
lcall
pushf
inc
popf
sahf
lahf
mov
dec
addb
movsw
cmpsb
inc
inc
mov
inc
jmp
hlt
dec
gs
sub
inc
loope
jne
push
test
lret
jae
inc
addr16
imul
jb
outsb
lcall
outsb
outsb
mov
inc
lret
fcmovbe
add
dec
jo
insb
gs
xchg
leave
push
or
cmp
sbb
xor
pop
push
adc
add
xor
mov
xchg
insl
pop
mov
xor
add
rcrb
gs
aam
fsub
call
jno
sub
sub
xor
pop
stos
pop
push
call
inc
shl
or
and
cmp
insl
cwtl
test
or
cmpl
adc
push
cmp
cltd
push
inc
sub
add
rorb
sub
sbb
rclb
push
xchg
ficoml
jb
dec
call
push
adc
cmp
sub
mov
movsl
mov
leave
push
jne
pop
les
pop
add
push
es
addr16
mov
negb
in
iret
idiv
inc
jle
add
and
mov
ds
dec
xor
outsl
ja
add
sub
xlat
mov
xor
mov
mov
ss
mov
in
or
adc
pop
sbb
sub
pop
add
dec
scas
pop
cmp
or
scas
push
adc
mov
ret
sub
jge
inc
jns
dec
mov
jmp
push
les
jae
dec
mov
mov
xchg
mov
rol
andb
or
sbb
insb
inc
sub
add
sbb
pop
sbb
or
dec
mov
test
adc
and
mov
cltd
push
push
dec
pop
ficoml
sbb
push
push
aad
fmul
mov
adc
ja
mov
andb
punpcklbw
into
or
push
cmpsb
imul
jb
sub
popa
lcall
rol
mov
imul
dec
shll
sub
mov
add
inc
pop
or
insb
popa
dec
mov
xchg
xor
xor
xchg
fldcw
popa
mov
sahf
gs
rolb
popa
aam
aad
insl
xlat
xor
cmpsb
imul
fstps
lea
mov
adc
dec
shll
gs
xor
shll
fs
pop
xor
dec
shll
xor
mov
cmp
inc
stos
mov
pop
fdivl
push
adc
jb
gs
xor
inc
outsl
jb
jb
mov
leave
lcall
int
iret
sbb
dec
jns
stos
dec
dec
and
push
sub
je
dec
scas
mov
xlat
pop
push
mov
mov
adc
xchg
in
push
loopne
sub
mov
pop
test
dec
das
ss
jmp
push
add
adc
imul
or
rol
jnp
adc
pop
aas
and
sbb
pushw
sbb
cltd
sub
data16
or
jbe
or
xor
adc
repnz
jb
movsb
pop
popa
pop
mov
sub
mov
dec
in
push
inc
ftst
int3
mov
mov
outsb
mov
xchg
jp
xchg
adc
aad
add
cmp
in
adc
ret
push
cmpsb
inc
xlat
push
js
imul
pusha
andl
mov
and
loope
lods
lcall
mov
mov
add
mov
cmpl
ja
out
sub
es
jge
hlt
sbb
clc
jecxz
pop
inc
jb
lcall
pop
jbe
ja
sub
fcoms
and
hlt
push
das
add
and
cmc
sub
xor
sarb
negb
cmp
or
fidivrs
push
inc
xor
nop
xchg
or
xor
or
sbb
fstp
sbb
dec
sbb
ds
mov
pop
or
aaa
push
imul
push
jb
gs
bound
or
push
fdivrs
push
enter
das
cltd
sub
inc
add
push
push
pusha
lcall
jg
loopne
incb
aas
cmp
add
jmp
call
cmp
movb
and
push
inc
add
sbb
inc
lea
lods
mov
enter
icebp
movsl
lea
dec
inc
dec
push
ret
jmp
or
pop
inc
pop
mov
push
enter
and
adc
pop
daa
inc
push
or
std
push
add
add
and
mov
push
or
js
cmpsb
dec
fldenv
adc
pop
aam
push
int3
adc
popf
inc
ret
add
mov
and
inc
nop
mov
push
sbb
mov
inc
sub
ja
or
inc
push
jp
push
nop
or
xor
mov
inc
mov
cmp
mov
popa
or
xchg
in
add
mov
push
xchg
pop
sbb
fists
or
or
jg
pop
jne
mov
or
xchg
bound
push
mov
test
xor
iret
enter
add
adc
push
mov
push
fwait
xor
sbb
stos
dec
shrb
inc
adc
xchg
pop
and
push
cld
push
push
in
or
sub
push
add
cmc
insl
inc
inc
add
jae
push
push
push
shlb
sti
dec
xor
inc
add
cmp
gs
inc
xchg
pushf
push
push
ret
add
mov
inc
pop
and
pop
roll
imul
je
or
negl
or
nop
inc
movsl
and
push
mov
mov
decl
mov
fidivs
or
test
add
adc
or
aaa
cli
fbstp
test
jne
ret
cmpw
icebp
mov
add
cmpl
jge
jle
mov
inc
push
pop
cmp
adc
mov
outsb
sti
movsl
lods
or
adc
and
or
divl
pop
cmp
ja
push
cld
add
or
in
jg
fidivl
outsb
outsl
mov
mov
cmp
arpl
outsl
incl
out
cmp
jb
sub
je
addl
les
jbe
ficompl
mov
mov
adcl
fidivl
ss
jmp
push
enter
or
lods
pusha
lods
aad
adc
lea
jne
orl
enter
shll
in
out
mov
mov
cltd
cmp
jnp
push
adc
push
fmul
sub
inc
jb
xor
push
pop
push
ret
andl
mov
shll
sub
clc
sub
loopne
push
scas
pop
xchg
adc
jo
add
outsb
les
sub
bound
sbb
pusha
and
inc
sub
push
icebp
sbb
push
aad
pop
pop
pop
ret
les
adc
pusha
repnz
sub
push
xchg
cmp
fstl
out
out
sub
push
out
orl
test
hlt
sahf
cmp
pusha
arpl
push
lea
cmp
je
repz
ds
ficompl
push
cmc
sbb
mov
aaa
imul
mov
jb
les
inc
add
or
sbb
add
and
pop
add
sbb
rcrb
decb
add
xor
nop
stos
sbb
mov
ret
cmp
jb
movsbl
cmp
add
pop
mov
dec
xchg
enter
rolb
ret
mov
leave
pop
mov
inc
inc
jmp
andb
and
and
pop
cmpsb
or
inc
ds
comiss
mov
movzbl
inc
mov
in
mov
add
push
inc
cmp
sub
shlb
inc
push
jmp
add
enter
shr
enter
pop
pop
or
xor
and
mov
push
popf
clc
mov
addr16
andl
jbe
clc
outsl
mov
sub
mov
cmp
les
push
inc
sbb
pop
jp
fisttps
pop
jb
xor
mov
pop
cld
dec
fbstp
je
leave
xorl
inc
inc
jmp
or
mov
je
notl
incl
sbb
test
jne
push
xor
mov
cmp
jbe
push
dec
and
sbb
push
outsl
sub
lret
mov
push
mov
sub
or
je
iret
call
mov
inc
cmp
je
add
popf
mov
fchs
add
xor
ret
inc
lahf
stos
lret
movsl
pop
cld
pop
nop
mov
mov
push
scas
mov
addb
mov
push
adc
sarl
or
jae
sbbb
inc
insl
sbb
pop
add
cmp
jbe
push
mov
mov
iret
add
xor
add
xchg
adc
pop
subl
insl
fs
cmp
jb
jmp
inc
fs
mov
jg
or
add
inc
sbb
orl
mov
cmp
jae
arpl
mov
jns
or
sub
adc
fldenv
mov
cmc
jecxz
loope
xchg
sub
and
mov
call
and
movsb
cmp
inc
pop
hlt
xchg
insb
mov
lret
mov
insb
enter
fldt
mov
mov
or
orl
or
push
ror
mov
adc
mov
out
xor
xor
cmp
xor
push
xor
scas
pop
mov
or
ret
pusha
fiaddl
mov
aam
mov
mov
out
sbb
adc
fidivrs
inc
mov
gs
cmp
xorb
aam
adc
imull
xor
mov
loop
sub
dec
pusha
inc
fs
shrl
outsl
inc
jg
adc
xlat
lret
or
dec
adc
mov
test
and
sbbl
ss
xor
xor
cmp
mov
imul
jnp
or
push
pop
sbb
leave
add
push
std
shrl
test
hlt
push
sub
enter
and
sbb
mov
and
lock
mov
sub
imul
sub
outsl
mov
pop
pop
add
sbb
pop
cltd
insl
test
and
mov
sub
push
inc
xlat
push
pop
sbb
cmp
pusha
adc
dec
stos
jo
shlb
pop
adc
inc
ljmp
mov
mov
sub
sbb
notb
pop
data16
jb
jbe
insb
pop
mov
hlt
add
addb
sbbl
sbb
pop
mov
add
or
int3
xor
add
mov
in
idiv
add
or
sub
add
insl
adc
jg
in
sub
mov
or
loope
xchg
add
lds
xchg
aas
outsb
add
cmp
jb
mov
mov
dec
shll
dec
pop
cli
imul
cmpsb
imul
xor
add
xor
cmpsb
pop
ss
push
sub
rclb
shll
pop
aam
fsub
lock
lcall
push
and
imul
imul
in
imul
lcall
xorb
ja
mov
shl
in
pop
xlat
or
out
push
pop
cli
xor
xchg
push
or
or
push
sysenter
insl
add
lret
mov
add
getsec
pop
add
dec
push
or
adc
inc
cmp
scas
xor
dec
es
leave
leave
xor
xchg
leave
xor
cltd
dec
es
leave
fs
leave
leave
xor
jbe
xor
cld
aas
push
push
push
push
dec
inc
dec
xor
cs
insb
push
gs
or
cs
dec
dec
adc
add
xor
cmp
xor
push
and
pop
lcall
jae
jb
ds
add
mov
stos
mov
into
icebp
mull
mov
outsl
insb
fs
imul
jbe
cld
xor
xor
and
xor
gs
popa
insl
gs
mov
popa
jae
pop
insb
jbe
mov
mov
mov
loop
out
jg
hlt
and
fadd
call
enter
mov
fidivs
push
and
add
idivb
popa
add
and
and
jbe
insb
imul
push
insl
popa
imul
jle
popa
sub
mov
gs
push
sti
pushl
arpl
outsl
outsb
push
push
push
dec
outsl
imul
inc
dec
inc
pop
dec
dec
outsb
gs
adc
mov
gs
outsl
fs
inc
imul
jnp
jb
jne
push
mov
inc
insb
outsl
cmp
dec
xor
adc
popa
bound
gs
arpl
jne
xor
and
je
inc
jne
data16
cwtl
add
add
or
add
xor
and
xchg
pushl
jb
gs
imul
outsl
xor
inc
or
xchg
cs
insb
jo
dec
jae
sub
jnp
mov
jb
push
add
insl
or
std
dec
inc
add
outsl
arpl
jae
inc
sub
dec
inc
adc
insl
jo
mov
push
bound
cs
push
imul
dec
jno
imul
je
push
pop
sub
insl
in
dec
notl
jp
push
push
outsl
jno
jb
fdiv
mov
dec
jo
insb
aad
daa
sbbl
mov
fdiv
inc
jne
icebp
outsb
and
inc
mov
fwait
adc
xor
add
int
add
inc
outsl
in
jge
lods
les
mov
inc
imul
testb
jbe
cmp
jae
and
jge
imul
bound
arpl
inc
cmc
fldcw
fcmovne
unpckhps
sub
push
jae
imul
insl
cs
bound
outsl
ja
imul
add
stc
lods
jne
addr16
push
arpl
or
mov
in
jb
arpl
jb
push
negl
push
dec
inc
pop
cwtl
mov
or
pop
push
mov
je
addr16
gs
jo
pop
push
xor
gs
jmp
lods
sbb
pop
outsl
xor
movsl
pop
jbe
jo
and
mov
jne
push
arpl
insl
ret
and
mov
mov
pop
inc
push
inc
pop
dec
inc
pop
or
sub
testl
inc
mov
push
lahf
mov
inc
fdivrs
fs
inc
sbb
rcrl
jecxz
push
inc
jmp
sbb
outsb
sbb
jecxz
xchg
sub
or
jo
jne
jns
xchg
inc
and
push
push
movsl
pop
jg
xchg
push
xorl
daa
adc
push
pop
or
and
sub
or
push
mov
or
xchg
xor
or
or
adc
sbb
imul
pop
adc
adc
sbb
enter
dec
or
or
or
or
or
push
or
adc
push
outsl
das
add
xor
xor
daa
adc
cmp
lock
add
adc
push
adc
or
daa
pop
inc
and
lock
push
sbb
or
ljmp
adc
adc
push
or
sbb
or
unpcklps
sbb
add
mov
fistl
pop
mov
add
pop
or
call
and
or
inc
add
lock
pop
or
lock
add
pop
push
add
gs
jg
mov
dec
lock
pop
sub
or
push
cmp
lahf
adc
std
notb
cmp
lock
pop
mov
cmp
adc
outsb
fldt
xor
push
cwtl
or
or
push
add
or
adc
push
or
repnz
pop
mov
pop
push
or
jle
push
pop
push
add
jg
pushl
push
imul
cmp
sub
pop
or
cmp
cld
decl
push
or
dec
push
cs
sbb
adc
push
push
pop
or
test
xchg
add
adc
lret
xor
arpl
add
or
test
adc
add
mov
adc
stc
or
cmp
ficompl
loopne
push
and
in
inc
adc
mov
adc
adc
iret
add
xor
sbbb
ss
mov
pop
push
inc
push
add
lret
inc
mov
jo
js
cmp
jbe
xchg
add
popa
fwait
mov
je
aas
nop
les
xchg
pusha
jb,pn
sbb
jb
sti
jbe
or
inc
mov
inc
cs
push
ss
cld
dec
daa
rorb
mov
mov
cmpxchg
inc
sbb
sub
add
add
add
add
add
add
jne
pusha
mov
lea
push
or
jmp
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
popa
xor
ret
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
