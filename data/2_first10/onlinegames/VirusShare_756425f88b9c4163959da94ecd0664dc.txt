add
add
sbb
dec
insb
add
push
mov
cwtl
sbb
or
inc
fstpl
xchg
das
jp
xlat
add
pop
cmp
push
push
lods
mov
fmull
xchg
sahf
ja
mov
pusha
jg
rcr
repnz
pop
push
pop
push
pop
cmp
dec
aas
pop
sti
xchg
cld
pusha
dec
jp
adc
add
push
xchg
mov
adc
out
xchg
sbb
sbb
or
jg
test
aaa
adc
in
popf
add
test
ret
dec
popf
mov
les
aad
cltd
mov
jae
adc
mov
out
popf
and
setne
clc
rolb
clc
or
and
mov
ret
mov
scas
lret
jmp
cmp
inc
sub
sub
fbstp
dec
cli
cld
loopne
or
mov
les
cmpsb
xor
sub
xchg
add
pop
hlt
mov
lods
in
jle
mov
lods
in
mov
or
mov
cmp
sahf
cmp
push
dec
sub
inc
mov
push
pop
add
sub
ret
in
jecxz
sarb
out
pop
pop
les
sub
sub
mov
mov
sbb
cmc
popf
adc
ror
loopne
inc
lea
cmp
and
ljmp
mov
sub
fdivrl
ret
pop
adc
lds
xchg
adc
pop
or
ja
mov
mov
xor
inc
daa
out
mov
repnz
js
scas
sbb
leave
add
dec
push
mov
test
out
in
pop
fwait
adcb
mov
add
mov
call
lret
xlat
xchg
outsl
cli
call
xor
xchg
pushf
iret
insb
lahf
js
jne
push
and
rorl
jno
sbb
imul
mov
add
loope
test
inc
into
mov
push
es
outsl
xchg
xor
arpl
inc
xor
or
mov
jmp
sub
test
sbb
and
roll
je
pushf
mov
xchg
aas
movsl
xor
js
push
xchg
fimuls
lahf
ret
push
lahf
pop
sarl
inc
jbe
pop
movsb
dec
add
ja
and
inc
jns
ds
out
ja
jno
hlt
and
mov
or
nop
cmp
mov
loope
mov
xchg
sbb
daa
fwait
inc
std
scas
iret
jbe
and
mov
ror
mov
out
lcall
mov
dec
inc
push
add
sbb
std
mov
dec
vrcpps
cmp
pop
adc
sahf
xor
pop
cld
mov
ss
lret
cmpsb
xchg
xlat
jge
mov
or
in
test
adc
push
pop
test
add
scas
bound
cwtl
cmc
in
cmp
inc
lods
sbb
stos
xlat
xlat
push
cmp
xor
or
mov
lret
xchg
mov
addr16
leave
sub
popa
into
sbb
popa
clc
inc
mov
pop
out
dec
push
pop
xchg
or
cmp
int
popf
jo
xchg
dec
xor
gs
sbb
fcompl
push
and
mov
sub
popf
lcall
push
xchg
das
das
mov
cmpsb
scas
rolb
mov
call
outsl
xchg
in
imul
mov
test
pop
jg
inc
inc
mov
xor
movsl
ss
push
aad
push
xor
jl
xchg
or
xor
orb
xchg
addr16
mov
pop
xchg
sti
mov
das
aas
addr16
or
adc
lret
push
popa
xor
cmc
test
in
call
out
movsl
aam
xchg
mov
loope
xor
push
inc
lds
pop
mov
jo
jae
dec
push
les
lock
mov
sub
mov
fsubl
xchg
test
fs
sbb
ljmp
fidivl
insb
add
out
pop
cmp
mov
and
ja
leave
push
jl
int
sbb
pop
popf
shrb
mov
addr16
cmp
dec
rcrl
mov
test
sahf
inc
aad
sub
sbb
jne
add
mov
aas
lret
rcrl
nop
lahf
dec
fsubs
dec
or
jnp
xchg
js
inc
das
mov
push
testl
addr16
clc
popa
sub
push
imul
jns
adc
jg
xor
out
pop
push
div
shl
imul
cmpsb
outsb
xlat
mov
jbe
rorb
mov
bound
push
orl
inc
shlb
mov
clc
mov
xor
adc
call
notl
jmp
inc
push
je
adc
mov
jp
cmpsl
sahf
sbbl
xor
sahf
hlt
xor
or
jmp
or
jno
daa
nop
stos
in
push
xor
lret
movsb
adc
push
or
or
aas
jne
and
and
ret
or
nop
push
jns
inc
int
mov
mov
mov
stc
test
dec
jne
add
sbb
dec
iret
cmp
jne
cmpsb
js
mov
scas
cs
arpl
loopne
dec
aam
shl
push
cmovnp
bound
xor
fadd
rol
out
xchg
jo
mov
loop
dec
inc
testl
and
and
sbb
loopne
js
and
and
cli
push
adc
cli
cmp
push
jge
mov
inc
xor
pop
leave
cmpsb
lret
cmpsb
rcl
loopne,pt
or
and
pop
and
lret
mov
iret
data16
xor
test
mov
dec
dec
lods
test
jnp
xchg
lods
mov
adc
xor
mov
js
movups
inc
cs
add
jne
mov
inc
push
adc
adc
gs
dec
mov
mov
cmpsb
cmp
pop
pop
xor
mov
pop
jg
mov
outsb
test
in
jg
sbb
adc
inc
rcrl
int
cld
rcll
data16
imul
jae
mov
enter
fs
cmp
test
outsb
adc
test
pushf
inc
not
popf
jge
pusha
scas
mov
jns
lcall
test
call
add
mov
into
adc
add
cmp
push
cmpsl
ja
push
xorl
inc
xchg
sbb
mov
insl
loop
or
pop
push
imul
xchg
and
int3
and
add
jae
inc
mov
jmp
mov
mov
mov
int3
clc
jo
ficoml
sbb
les
fwait
inc
sbb
jg
cmp
pop
sub
inc
cmp
icebp
xchg
lds
cmp
and
cmp
and
sub
fdivr
push
mov
movb
lds
data16
fmuls
int3
xor
pop
push
pop
out
xchg
add
aas
repnz
or
pop
or
push
xchg
pop
cmp
shll
fprem
cs
out
dec
push
xor
mov
push
sbb
sbb
test
icebp
xor
popf
lret
and
jnp
mov
imul
dec
enter
jb
xor
jl
jmpw
aam
sub
jl
clc
adc
stos
pop
dec
jbe
pop
and
iret
xchg
cmpsl
lret
cmp
cmc
sub
clc
clc
neg
fcmovne
cmp
in
jno
aaa
mov
mov
fidivrl
testl
sbbl
cwtl
mov
xchg
out
in
pushf
out
lods
xor
push
mov
inc
lds
ss
ss
stos
push
pop
jno
mov
pop
jae
jne
xlat
or
loop
mov
stc
add
sarb
mov
sti
aad
out
xor
sbb
ja
ret
fsubrl
dec
movsl
cmp
loop
cmpl
mov
cmpsl
push
dec
int3
jl
cmp
stos
std
fstps
adc
loop
add
or
sbb
jnp
cmc
push
lret
stc
pop
mov
pop
push
test
stos
and
movups
cmp
sub
imull
int
stos
ret
cmpb
xchg
xchg
add
mov
jge,pt
mov
enter
mov
rclb
xor
or
cmp
and
cli
scas
enter
bound
scas
add
lods
lock
ss
dec
bound
mov
lods
ja
aad
pop
mov
int
mov
xchg
push
aas
jmp
or
pusha
stos
aad
enter
pop
nop
and
test
imul
cld
mov
out
dec
pushf
sbbl
cld
jl
jo
pop
cmpsl
lea
push
sub
inc
scas
out
pop
jecxz
ds
mov
gs
sub
jp
cmp
es
mov
rorl
jae
mov
mov
aad
xchg
lods
dec
push
es
mov
aad
jle
mov
dec
cli
push
pop
rorl
and
pop
sbb
xor
stos
jbe
mov
inc
xchg
iret
jp
mov
xor
or
cmp
pushf
cli
rorl
add
or
test
xchg
in
mov
imul
test
adc
scas
cwtl
gs
or
ljmp
leave
std
pop
lds
xor
movsb
pushf
sub
jge
xor
fcompl
add
mov
jo
jb
imul
add
fists
pop
cmpsl
mov
push
mov
mov
testl
fnstenv
fcoms
xchg
in
jo
jl
xchg
pop
aad
inc
pop
dec
mov
dec
scas
cmpsl
out
mov
lods
ss
push
jb
pop
inc
stc
cmpb
mov
jmp
sbb
cltd
pop
test
ss
mov
sub
das
lds
lret
inc
mov
insl
jmp
xchg
xchg
sub
fbld
fistl
pop
mov
push
xchg
mov
in
jg
or
sub
xchg
and
fstl
jp
lea
adc
pop
outsl
cmc
mov
cmp
lds
test
imul
clc
mov
xor
push
adc
sub
jb
push
sbb
inc
hlt
xor
sub
inc
push
mov
xchg
jno
pop
movsl
or
enter
pop
push
call
pop
fsubrs
inc
sub
pop
push
and
sub
out
jle
mov
iret
and
ss
push
pop
dec
sub
lahf
mov
sbb
pusha
lods
sti
sbb
sbb
scas
shlb
pop
jae
jp
xor
cwtl
jecxz
inc
xor
notl
and
andb
fs
loope
and
mov
push
inc
xchg
andb
lods
shrb
push
mov
lods
mov
jp
shll
mov
jb
sbb
ss
test
insl
xchg
adc
movsl
pop
inc
shll
xchg
adc
bound
mov
nop
pop
test
pop
out
xchg
sbb
int3
xorl
pop
dec
pop
stos
repnz
pushf
jmp
mov
icebp
scas
movsl
push
cmp
rcrb
add
xchg
jp
pop
stos
les
xor
mov
mov
and
or
mov
mov
dec
pop
pop
jmp
mov
pop
fisubrs
mov
dec
mov
in
and
cmc
push
fmul
in
cmp
sub
clc
jecxz
jbe
std
test
xchg
hlt
scas
dec
xchg
jge
xor
sbb
mov
cmp
dec
ja
cwtl
rcr
insl
mov
int
or
cmpsb
jo
cs
hlt
test
adc
dec
push
mov
insb
test
pop
adcb
in
inc
and
test
movsl
loopne
push
cmp
xor
ficompl
insl
shrl
popa
and
push
ret
out
bound
pop
mov
pusha
or
mov
or
mov
outsb
addb
xchg
sar
or
xchg
mov
stc
mov
punpcklbw
jg
fildll
popf
out
shlb
lds
sub
cmp
pushf
jb
int
push
jb
xor
mov
loop
scas
pop
mov
or
sub
neg
mov
xor
je
ljmp
aas
fcom
ss
lds
and
test
add
jnp
das
mov
xchg
cmp
das
mov
negl
outsb
subl
popf
jo
xchg
sub
cltd
pop
mov
fs
sahf
jo
scas
out
addr16
or
xchg
cmpsb
xchg
jnp
inc
hlt
xchg
pop
nop
xchg
leave
pop
cmc
push
lcall
int
ret
es
jae
subl
mov
repnz
push
push
leave
lahf
arpl
mov
jae
jne
and
ja
fbld
cmp
sub
leave
pop
adc
fwait
cld
mov
movsl
push
xor
in
mov
stc
sbb
jne
hlt
cmp
out
scas
xor
cmp
adc
js
jecxz
lock
popa
push
mulb
sub
pop
mov
cmp
js
in
inc
push
loope
stos
aaa
cmpl
fldt
jmp
adcl
xor
jge
rclb
jbe
mov
in
in
fdivr
inc
xchg
add
push
xor
cli
cld
push
mov
inc
push
inc
nop
leave
inc
hlt
dec
jns
add
dec
jecxz
and
into
icebp
xor
mov
pop
int
jbe
jle
jnp
cli
xchg
xchg
xchg
jmp
int3
divl
and
dec
xor
aas
inc
fistpll
adc
test
mov
mov
xor
and
lds
cwtl
ja
jns
test
loop
in
mov
or
aas
ljmp
add
dec
xor
mov
les
xchg
cmp
sbb
pop
data16
jge
addb
inc
mov
inc
lahf
push
jge
inc
jle
inc
stos
in
or
fcoml
ss
mov
xchg
dec
xlat
cwtl
adc
mov
and
or
lods
cltd
rcl
aaa
pop
adc
fdiv
sarl
pushl
fdivrs
sahf
rcll
push
and
pop
imulb
jl
and
ja
xchg
push
mov
mov
mov
cmp
mov
xor
mov
arpl
out
stos
xor
adc
ds
sub
mov
ret
repz
push
int3
imul
or
loop
push
cmp
xchg
aas
jp
sbb
inc
pop
add
repnz
out
xor
ja
es
mov
dec
xchg
pop
cmc
cmp
ja
inc
mov
and
inc
xchg
add
dec
mov
jnp
add
mov
dec
mov
test
std
in
adc
mov
repnz
mov
adc
cmpsl
sub
ret
add
aaa
inc
ss
dec
stc
outsl
ret
push
jmp
add
push
xchg
mov
ffree
clc
daa
hlt
fbstp
insb
jge
arpl
dec
pop
mov
adc
sbb
stos
imul
mov
cmc
push
sbb
and
or
mov
insl
dec
mov
adc
push
cmp
jl
out
lock
pop
call
inc
and
xchg
add
adc
cwtl
inc
cmp
push
pusha
fdivrs
js
outsb
dec
inc
xchg
pushl
call
test
scas
loope,pt
imul
pusha
dec
clc
sbb
es
js
jns
es
data16
ret
xchg
outsb
std
dec
test
mov
outsl
sbb
add
arpl
mov
jge
and
jl
xchg
xlat
sbb
cld
addr16
leave
or
sti
dec
ds
stos
dec
call
mov
sbb
test
out
ret
adc
dec
or
cltd
and
sub
lds
xor
inc
pusha
rcll
popf
pop
enter
mov
sbb
data16
roll
add
in
cwtl
cmpsb
popa
pop
sub
cmp
insl
hlt
sahf
aaa
push
add
ljmp
sub
or
icebp
push
into
dec
repz
outsl
in
sbb
data16
jnp
ds
int3
xchg
scas
sbb
inc
or
or
inc
pop
or
jno
cltd
inc
inc
mov
lret
aas
iret
ret
jge
std
fcoms
lds
stos
or
fiaddl
cmpsb
arpl
cltd
jnp
jg
icebp
add
mov
in
test
pop
in
push
mov
adc
and
ficompl
call
pop
test
insl
iret
aad
jg
sbb
iret
xchg
and
push
je
xlat
into
fwait
xor
sahf
lods
addr16
jp
inc
xchg
imul
xor
test
xor
in
jbe
add
test
outsb
push
addr16
or
jnp
bound
mov
dec
add
mov
mov
pop
outsl
lahf
xchg
dec
insl
mov
imul
mov
cmp
aas
mov
pop
inc
imul
dec
and
adc
popf
mov
fcomi
int
hlt
insb
or
fistps
icebp
add
and
sub
sub
sbb
div
mov
movzwl
arpl
add
xlat
xor
dec
loope
cmpsl
xlat
pop
and
aad
mov
lahf
out
sub
xchg
pop
push
mov
sub
lcall
pushf
je
or
std
popa
loope
jmp
sbb
xchg
rcrb
daa
dec
push
shl
push
fsubl
subb
sarl
inc
addr16
mov
xchg
mov
das
push
inc
call
loopne
loopew
push
sti
mov
stos
or
je
outsl
mov
repz
in
in
scas
mov
es
fldl
push
fisubrl
std
addr16
add
xchg
test
lods
xchg
lods
lods
pop
fs
jp
imulb
push
adc
and
xor
xor
loope
inc
icebp
sahf
cmp
decb
add
popf
insb
scas
mov
fiaddl
inc
dec
gs
test
add
lahf
into
or
iret
cmpsl
xchg
add
je
or
xchg
insb
repz
jge
sbb
dec
xchg
jp
mov
filds
daa
jmp
pop
and
mov
and
loope
push
pusha
clc
sub
lret
les
mov
mov
or
pop
call
lret
adc
loopne
pop
arpl
pop
roll
ja
lods
and
paddusb
lock
or
xchg
push
roll
cmp
push
sub
fs
mov
test
push
cltd
sbb
cmp
in
adc
call
push
repz
out
jecxz
movsb
cmp
fs
dec
dec
idivl
lds
xchg
cmpsb
mov
xchg
outsb
dec
jno
push
adc
call
push
fnstenv
int3
pop
jp
in
pop
aad
scas
imul
cmp
dec
dec
fidivl
fnsetpm(287
jb
jmp
mov
and
mov
mov
cmp
lahf
mov
cs
in
loope
mov
test
and
cmp
lret
inc
inc
fucomip
pop
xchg
movsl
ja
mov
jns
pop
dec
out
adc
push
pop
ss
pop
mov
jb
out
iret
mov
cmpsb
push
xor
xchg
inc
dec
pop
int3
ljmp
test
inc
jmp
out
push
je
and
je
pop
sub
out
scas
cmpb
or
iret
sub
push
subb
icebp
int3
xlat
adc
aas
cltd
xchg
sub
push
daa
dec
and
or
shrb
loopne
xor
push
sub
cli
fwait
jmp
mov
call
fldenv
sahf
pop
pop
push
mov
pop
xor
shll
pop
and
loope
fistps
adc
out
in
out
sbb
sub
repz
xchg
sbb
adc
out
push
ja
push
stos
cmpsl
movsb
lock
inc
xor
sbb
add
jne
adc
sar
push
leave
sub
mov
sahf
sbb
nop
pop
dec
stos
cmp
int
sbb
xor
test
sbb
ret
test
jg
add
lods
aad
jne
je
dec
mov
push
fimuls
imul
popa
inc
fldl
add
sbbl
fsubl
out
sbb
mov
fistpll
sub
pop
jb
xchg
lret
sbb
mov
sub
mov
adc
mov
mov
dec
int3
dec
inc
sahf
cmp
xor
shlb
push
imul
jbe
stos
add
imul
add
mov
lods
push
cmp
in
in
adc
and
loopne
nop
dec
loopne
out
adc
mov
xor
ret
ret
xchg
mov
ret
ljmp
xchg
jp
scas
mov
jmp
jge
adc
sahf
je
mov
or
aas
gs
mov
out
in
mov
mov
jle
mov
push
lods
lcall
dec
push
cltd
cmp
mov
fs
orl
adc
cmp
pusha
aas
adc
out
cltd
lcall
xchg
adc
arpl
jg
or
cli
or
sbb
dec
jmp
sub
aam
adc
les
jge
jecxz,pt
mov
das
pop
lcall
xor
jge
xlat
cmp
inc
lea
fisttps
mov
sahf
xlat
out
stc
scas
inc
or
mov
pop
cmp
inc
loop
icebp
push
cmp
push
in
ret
cwtl
out
xchg
out
mov
testb
or
shrb
inc
loop
movsl
pop
mov
xchg
mov
in
rclb
add
xor
fnsave
mov
mov
mov
pop
lods
add
lock
fidivl
pop
fldl
fdivl
mov
jno
movsl
in
add
jg
jo
dec
inc
dec
dec
adc
movsl
jbe
and
cmp
xor
cmp
dec
in
xor
mov
xchg
loop
out
xor
fs
inc
xchg
xor
sub
int3
pop
dec
leave
enter
ret
jge
pushf
cmp
pop
jle
mov
test
sbb
rorb
les
rcl
pop
mov
or
mov
ret
or
push
mov
xchg
call
inc
xlat
sub
cmpsl
pop
nop
outsb
aaa
popf
dec
lods
cmp
pusha
aad
and
jnp
pop
sub
mov
fildll
mov
jmp
in
pop
aam
add
sbb
sti
pop
ljmp
bound
mov
int
movsl
pushf
call
fwait
cmp
nop
das
cmpsb
jge
mov
cmpsl
out
scas
fsubrl
jb
xor
ds
xor
in
xor
dec
jle
mov
mov
xor
or
jno
and
pop
es
loopne
sub
cmpsl
xchg
adc
mov
test
lcall
in
jl
sbbl
xlat
adc
xor
jp
dec
mov
sbb
push
mov
xchg
xchg
lret
ja
test
and
out
xlat
imul
mov
pop
cmp
das
mov
xor
or
dec
cmp
mov
mov
inc
dec
or
or
adc
pop
daa
adcl
sub
cmc
and
cmp
cmp
xchg
cmpsl
push
and
shlb
and
adc
fidivl
cltd
xlat
jg
inc
push
popa
push
rclb
push
add
cmp
push
add
inc
pop
inc
popf
call
jae
xchg
xor
ficompl
mov
cmpsl
mov
jmp
sub
outsl
xchg
cli
in
mov
push
cmp
sbb
jno
outsl
hlt
xchg
push
mov
xor
or
movb
xor
sbb
je
mov
mov
lea
nop
xlat
jnp
test
mov
add
mov
out
repnz
decb
adc
cmp
inc
dec
cmp
lahf
ret
dec
fwait
dec
and
gs
cs
sti
jecxz
int
or
inc
sti
mov
inc
xchg
test
adc
das
enter
mov
and
lahf
out
pop
pop
jecxz
out
stc
mov
mov
lret
push
repnz
jmp
and
inc
sub
pushf
test
ljmp
fdivrl
xor
outsb
popa
dec
bound
adc
jmp
ret
aas
cmc
shl
inc
jp
pop
mov
mov
xchg
jmp
inc
xor
pop
out
shrb
daa
shrl
adc
sub
or
or
imul
push
mov
addr16
cld
repz
jp
cmp
lods
dec
das
jecxz
and
mov
adc
inc
rcrb
popf
fwait
subb
into
inc
mov
sbb
lds
mov
jp
xchg
sub
sub
push
sub
sub
and
insb
js
test
iret
cmp
push
cmp
cmc
add
mov
ss
in
mov
jecxz
orb
fsubs
xchg
pop
xchg
cmpsl
pop
jge
mov
and
imull
outsl
cld
out
nop
jo
rcrb
jbe
xchg
clc
mov
pop
inc
inc
mov
add
add
inc
shr
je
fisubrl
ret
ficomps
push
stos
outsl
xchg
subl
fisubrs
shll
xchg
cmp
jp
test
xlat
jecxz
jge
dec
and
test
xchg
int3
sub
stc
mov
adc
mov
and
movsl
jae
mov
jmp
mov
add
ds
pop
pop
xchg
xchg
lret
es
mov
lcall
push
add
add
cs
mov
xor
push
aam
addl
ret
jle
sub
xor
sub
jl
ret
insb
adc
test
or
xor
push
or
add
inc
push
dec
jmp
inc
subb
hlt
nopl
xor
mov
mov
sarb
dec
outsb
and
fcmovbe
inc
mov
mov
push
shl
pop
pop
add
pushf
or
repz
and
dec
add
xor
xchg
jno
fistpll
lret
rorl
sub
hlt
mov
or
xchg
bound
ror
sbb
inc
add
ret
clc
dec
mov
fsubrs
push
xchg
sub
xor
orb
test
push
sub
xchg
mov
int
cmp
inc
ss
filds
cwtl
pop
lock
nop
addr16
stc
xchg
gs
xchg
xorb
jp
sbb
rcr
out
in
std
add
mov
mull
pop
addb
inc
dec
add
fcoms
mov
in
lock
in
dec
or
fld
cmpsb
rclb
pop
shr
and
jge
loopne
aaa
es
jne
or
out
mov
jg
sub
popa
ret
shrb
hlt
mov
sbb
xor
lret
adc
shr
out
push
mov
in
mov
scas
inc
aas
loop
aas
dec
fsubs
xlat
mov
inc
stc
loope
mov
scas
jmp
andnps
adc
pop
jmp
or
sbb
sub
fbstp
pushf
mov
pshufw
bound
xor
notb
push
lock
xchg
mov
cmp
mov
adc
nop
cmpl
sahf
mov
cmp
pop
sub
mov
ljmp
pop
ds
sub
or
shlb
out
sub
ja
jp
aad
and
adc
mov
mov
subl
push
aaa
jns
div
into
shrb
movsb
dec
jne
data16
je
jo
ss
pop
sub
pop
cmc
sti
in
sub
fmull
add
sub
fdivr
xor
mov
int
sahf
aam
outsl
rorl
cmp
dec
pop
orl
and
scas
loopne
xor
xchg
or
jp
in
sahf
cmp
jno
loope
mov
cmpsl
and
mov
inc
jbe
xchg
call
xchg
pushf
mov
fnstsw
xchg
daa
pop
loop
sbb
lock
dec
fpatan
cs
push
outsl
pop
imulb
mov
inc
lock
out
jno
mov
fidivl
jle
scas
es
outsl
out
js
dec
vmread
jg
xor
das
xor
pop
sub
popf
std
movsl
repnz
dec
insl
add
jns
ja
dec
pop
nop
in
xchg
jmp
add
dec
xchg
out
mov
sbb
out
in
aaa
into
mov
sub
pop
in
out
mov
mov
test
push
adc
mov
sub
pop
shl
push
jl
push
sbb
dec
mov
dec
cmp
mov
popa
dec
insb
sbb
dec
jnp
loop
lret
in
std
lods
pushf
out
test
pop
in
popa
imul
shr
sub
dec
test
hlt
and
add
insl
xorl
pop
jnp
dec
xchg
shrb
pop
pop
inc
xor
dec
push
aaa
in
xchg
adc
add
add
add
clc
and
jl
stos
enter
adc
mov
loop
dec
cmp
xor
in
sub
pop
lret
mull
xor
out
jmp
mov
imul
mov
and
and
mov
call
loope
jge
xchg
xor
clc
push
and
inc
mov
cmp
and
out
jne
mov
jmp
pop
rcll
and
iret
push
decl
sub
mov
xchg
mov
out
adc
lock
sub
dec
xchg
sub
leave
mov
pop
out
mov
inc
add
and
push
dec
popa
out
jbe
jmp
dec
dec
adc
pop
inc
outsb
cmp
jns
and
pop
add
and
out
lods
cmpsb
cmp
shrb
xchg
add
sti
int
inc
sub
mov
lahf
mov
jmp
xchg
jg
mov
ret
pop
repz
add
sbbl
cwtl
jmp
xchg
cmpsb
lods
xor
mov
leave
in
pop
xchg
pop
adc
or
lds
xchg
pusha
and
std
fnsave
mov
add
imul
pop
stc
mov
pop
das
cli
xchg
jns
mov
roll
dec
popf
mov
iret
pop
push
sub
push
rorb
inc
sub
pop
int3
fcomps
les
cli
cmovl
sub
insb
sub
sbb
xchg
sbb
xchg
fmulp
arpl
push
pushf
repz
jl
les
pop
ret
sbb
cli
adc
xor
shll
adc
sbb
cs
bound
out
in
outsl
outsb
cmp
call
sub
jo
push
adc
push
inc
and
mov
inc
clc
push
ret
mov
fwait
jno
push
xor
pop
or
xor
or
xor
mov
or
pop
ret
mov
cmp
je
inc
xorl
inc
ja
xchg
aad
pop
adc
pushf
subb
adc
rolb
xchg
dec
cmp
jmp
fisttpll
adc
dec
and
or
dec
push
in
out
insl
pop
cmp
sti
pusha
xor
sub
shll
mov
popf
add
lods
pop
insl
push
loop
xchg
cmp
sbb
jecxz
movsl
jp
sbb
out
and
pusha
mov
loopne
xor
and
push
into
pushf
inc
inc
xchg
shlb
pop
jbe
sub
outsb
shlb
mov
adc
iret
sub
xchg
pop
push
aas
cltd
mov
sbb
mov
movq
scas
inc
sbb
ret
movsb
sahf
adc
frstor
cmpsb
ss
cs
clc
fcomp
or
cmp
rorl
shrb
jo
outsl
sbb
inc
sahf
jge
andl
std
and
scas
stos
dec
adc
into
imul
fmulp
sub
movsb
jle
in
push
stos
rorb
call
mov
roll
cmp
ljmp
mov
outsb
push
push
mov
imul
or
call
mov
mov
push
lahf
or
dec
sarb
or
cmp
lret
shlb
and
fcmovnb
mov
adc
or
jnp
xchg
lcall
or
ja
pop
int
xchg
push
jmp
sbb
xchg
xchg
or
scas
push
repz
jae
cmp
mov
pusha
add
inc
ljmp
cmp
xor
inc
pop
or
out
fmuls
je
in
jo
inc
lods
jp
fidivrl
and
jmp
das
lods
fistpll
jae
push
push
int3
inc
flds
mov
push
cli
aad
jns
cmp
into
or
inc
in
clc
out
sbb
cmp
lea
test
jle
adc
sti
pushf
popf
imul
cmp
aas
dec
or
push
add
clc
sarb
je
adc
xor
adc
cltd
in
sahf
jo
jo
loopne
sub
xor
adc
pusha
add
les
jae
and
pop
lds
adc
xchg
lret
mov
mov
sbb
jno
inc
mov
xchg
in
sbb
xor
add
mov
inc
and
fcoms
pop
jns
pop
imul
sub
sub
push
jbe
int
aad
push
jmp
ret
out
push
fwait
xor
adc
sbb
xor
jge
sub
pop
outsb
imul
pop
aaa
mov
lret
mov
mov
adcb
and
lret
ljmp
xchg
cmpsl
sbb
pop
mov
jmp
pop
mov
mov
push
mov
push
jae
jl
pop
jne
push
xchg
pop
ds
outsl
les
pop
cmp
add
jo
inc
sbb
andl
test
sahf
lods
or
lods
jg
test
push
je
cmc
dec
sbb
pusha
xchg
pop
sbbb
sbb
xor
fimull
jb
sub
pop
inc
xorl
cmp
jmp
jecxz
push
fisubs
into
xrelease
ficompl
sub
loopne
sub
jnp
jmp
bound
ds
in
sub
adc
shll
repz
xchg
imul
loope
lods
cld
or
sbb
sahf
xor
lods
dec
out
push
push
stos
lret
mov
sbb
adc
add
jmp
outsb
adc
arpl
mov
divl
stos
cmpsb
lock
pusha
inc
and
pop
das
fdivr
sub
lods
pusha
lock
sub
xor
lahf
mov
cltd
pushf
movsb
push
gs
divl
sub
pop
leave
rclb
je
sbb
xor
and
xor
ljmp
sarl
sub
repnz
test
pop
lea
mov
iret
lret
cmp
mov
push
xchg
xlat
mov
push
xchg
push
cs
fsubr
xor
int3
inc
lods
xchg
or
inc
rorl
push
mov
lea
out
shll
add
pop
ficoms
jnp
add
cmpsb
push
dec
stos
adc
mov
jp
into
fistps
mov
lea
fs
mov
or
lret
loope
insb
jb
dec
push
add
sti
icebp
dec
and
pop
xor
loopne
jle
sti
out
test
mov
scas
enter
fistpll
xchg
test
xchg
roll
adc
sbb
cld
jns
sub
stos
faddl
jbe
fwait
xor
inc
test
cld
scas
rcl
pop
or
pop
mov
arpl
push
pop
pop
xor
les
outsl
jns
out
mov
nop
mov
push
fsubrl
cwtl
mov
dec
push
inc
cmpsl
fcomps
mov
int3
mov
loopne
mov
lods
jmp
fimuls
repz
movlps
shlb
orb
adc
xchg
pop
cmp
in
ficompl
mov
pop
sbb
out
movsb
mov
jns
loope
or
mov
pop
pop
cmp
jne
inc
adc
mov
scas
sub
inc
aaa
test
push
push
add
jecxz
jns
inc
inc
xor
or
cwtl
mov
add
add
add
add
and
or
jge
and
fstl
andl
cs
rcl
pop
fistpl
aam
mov
sub
pushf
stc
pop
outsb
pop
mov
hlt
mov
jmp
push
adc
jle
pop
fs
lods
call
cmp
inc
rorb
ss
dec
popf
fwait
cwtl
rcrb
xor
xchg
fdivr
adc
mov
mov
xor
or
stos
test
or
adc
repnz
movsb
repz
lods
push
and
sbb
mov
in
jecxz
xchg
fistpl
xor
xor
push
add
fsubl
jg
inc
cmpsb
dec
cmp
shll
scas
pushf
pusha
in
push
sub
sub
mov
xor
leave
out
add
mov
jg
mov
lcall
xor
sub
rep
in
sbb
in
pusha
ljmp
mov
jnp
push
lret
push
push
and
lock
push
mov
repz
movsl
jno
jle
loop
lea
dec
add
xchg
test
adc
mov
pushf
mov
loop
mov
or
iret
jo
cmp
sarb
rep
cmp
ss
lock
xor
xchg
in
xor
pushf
jae
ja
sti
sub
inc
out
cli
cmpsb
push
xchg
adc
jbe
cs
cwtl
popa
into
pop
sub
mov
pop
outsl
xor
cmp
movsb
push
inc
pop
jnp
push
movsl
lea
xchg
fcoml
push
rcr
pop
rcll
mov
out
gs
out
clc
stos
cli
in
xor
stos
jbe
and
cmpsb
mov
icebp
sub
loop
sub
cmp
add
mov
and
xlat
mov
daa
pushf
xchg
mov
dec
mov
test
daa
movsb
add
xchg
insl
lds
sub
lret
or
add
repz
shll
sahf
sbb
pop
ljmp
mov
call
dec
out
das
fldt
mov
ftst
mov
or
push
cmpb
cmpsl
repnz
cmp
fcmovb
adc
and
mov
inc
jecxz
out
cmpsl
xor
fistpll
jmp
mov
add
add
add
pop
incl
and
cmp
xor
loop
daa
mov
loopne
mov
stc
dec
push
ret
add
push
inc
div
jmp
into
pop
enter
pop
cmp
mov
push
and
daa
sbb
and
mov
rolb
orb
push
aas
testl
cmp
cmp
lds
fnstcw
fstpt
push
addb
ret
imul
xchg
push
dec
pop
mov
jo
mov
cmp
or
mov
mov
scas
jno
inc
cmp
stos
mov
lahf
adc
jno
jmp
pushf
push
lcall
in
test
movsl
sahf
loop
add
jmp
in
xlat
adc
sar
mov
cmp
adc
or
inc
shr
pop
xchg
out
sbb
inc
pusha
pusha
in
insl
xchg
pushf
xor
inc
ja
mov
and
and
stos
leave
jno
lea
fdiv
xor
cmovge
int
fwait
outsb
rcr
lea
xchg
inc
push
aas
stos
mov
ja
shrb
xchg
out
test
or
add
addl
xchg
and
sti
push
movsl
ret
cmc
outsb
dec
roll
or
and
or
push
iret
adc
shr
inc
scas
jmp
or
nop
jno
inc
ret
dec
cmp
or
aas
jle
pusha
jno
mov
jnp
mov
out
leave
mov
negb
and
outsl
cmp
imul
jbe
jg
sub
dec
xchg
test
mov
ret
out
adc
add
push
dec
adcl
push
js
adc
es
rolb
jmp
rorb
shr
mov
lret
cmpsl
xchg
xchg
fmuls
outsl
mov
push
sub
int3
pusha
add
loopne
shr
inc
aas
int3
jge
mov
mov
mov
and
je
ja
enter
cltd
hlt
roll
fsubl
xor
repz
jns
lods
inc
hlt
fwait
xchg
sub
push
mov
mov
mov
jbe
cmc
bound
inc
nop
mov
xchg
xor
jb
xchg
push
cmpsl
lret
aad
ss
or
into
push
aaa
adc
inc
push
faddp
popl
addr16
mov
mov
inc
push
or
jbe
out
dec
iret
out
andl
cmpl
xchg
les
xlat
push
pop
cmp
inc
rcrb
cmpsb
in
or
xchg
sub
push
outsb
jp
fidivrs
xor
xchg
push
test
das
or
pop
cmp
inc
aam
movsl
mov
push
fwait
repz
xchg
add
add
cmp
or
in
enter
stos
adc
inc
cs
sbb
shl
fcoms
mov
dec
mov
out
sbb
pop
push
dec
in
jge
cmp
sahf
out
push
je
lret
xor
mov
push
in
ret
jecxz
sbb
xchg
sbb
mov
sbb
mov
stos
int
add
sub
mov
cli
cld
leave
lea
push
add
addr16
xor
add
xor
sbb
stos
jne
jo
shr
loope
insl
insl
mov
vshufps
inc
cltd
insb
mov
or
sub
mov
and
loope
in
adc
inc
sbb
mov
outsb
ret
aad
testl
jne
inc
push
xchg
and
call
add
or
or
xlat
fs
xlat
pop
sbb
dec
mov
jb
cmp
xchg
rcll
add
push
cwtl
arpl
or
and
add
cli
pop
pusha
jl
stos
jo
icebp
arpl
lock
lds
mov
out
mov
inc
push
jne
shrl
jae
ss
lahf
xchg
push
push
xor
test
dec
loopne
sbb
xor
int3
aas
scas
movsb
sbb
cmpsb
addl
mov
mov
or
mov
sarl
gs
mov
mov
mov
mov
js
and
push
mov
outsb
ja
lea
mov
sti
ja
mov
fisubrl
cmp
jge
inc
sub
aaa
lds
adc
jp
dec
jnp
addb
ds
sub
sahf
push
ret
jmp
sbb
mov
mov
js
xchg
sahf
cli
stc
jns
loope
arpl
push
jmp
icebp
cltd
xor
pusha
xor
inc
fsubrs
cmpsl
mov
dec
scas
or
mov
push
mov
aad
inc
scas
adc
adc
jno
sub
int
rcll
sti
subb
rolb
sbb
pop
test
mov
and
cmp
push
or
fdivp
xor
mov
xchg
repz
repz
daa
int3
fs
or
insb
sub
sbb
lea
pop
hlt
xor
div
lods
dec
hlt
xchg
cmp
push
das
inc
mov
mov
and
push
dec
gs
cmpsb
mov
mov
add
loop
das
xchg
jo
test
sbb
daa
mov
int
sbb
sbb
cmp
inc
xchg
dec
in
insb
sbb
push
mov
cmp
scas
out
cmpsb
loop
xor
es
mov
xor
rdpmc
js
test
sti
mov
ret
sbbb
pop
jmp
sarb
es
lods
pop
test
insl
in
or
xchg
mov
and
or
jnp
nop
fbld
and
jnp
shl
sub
cmp
lcall
adc
add
jne
ficomps
aad
lds
cld
jecxz
add
and
sub
jl
repnz
dec
test
xor
insl
and
sarb
jns
sub
adc
inc
aad
xorl
addb
pop
push
adc
cs
lock
clc
out
pop
add
pop
cwtl
push
mov
nop
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
pop
popa
nop
cmpb
jne
pusha
call
add
mov
call
call
call
cmpl
jne
mov
mov
jmp
mov
mov
call
jmp
sub
add
dec
sub
add
add
add
call
push
push
push
push
call
mov
jmp
xor
add
and
test
movsb
dec
add
pushl
add
pushl
add
call
popa
add
cmpl
jne
cmpl
je
cmpl
je
call
lea
call
mov
or
je
add
call
cmpl
jne
mov
jmp
add
cmpl
jne
jmp
add
mov
mov
add
jmp
inc
add
add
push
push
push
push
push
call
mov
pop
pusha
pushl
push
pushl
call
popa
call
call
cmpl
je
cmpl
je
call
call
mov
mov
jmp
inc
cmpb
jne
inc
mov
mov
cmp
je
cmpl
jbe
cmpl
jne
add
sub
add
add
mov
call
call
call
call
jmp
call
push
call
test
je
mov
mov
jmp
mov
mov
call
push
pushl
call
test
je
jmp
add
call
add
mov
mov
addl
mov
cmpl
jne
jmp
inc
cmpb
jne
inc
add
mov
mov
cmp
je
cmpl
jbe
cmpl
jne
add
sub
add
movl
add
mov
cmpb
jne
call
push
push
pushl
call
push
push
pushl
call
jmp
sub
add
mov
fcoml
add
call
cmpl
je
jmp
jmp
popa
jmp
nop
pusha
push
push
push
push
call
mov
push
push
push
push
call
mov
push
push
lea
lea
pusha
push
push
push
call
mov
popa
add
jmp
dec
cmpb
je
sub
inc
mov
mov
lea
rep
pop
push
push
push
call
pop
push
push
push
call
popa
ret
push
mov
sub
xor
inc
mov
mov
mov
mov
mov
mov
xor
mov
rep
mov
push
mov
mov
mov
mov
mov
or
pop
mov
mov
movzbl
shl
or
incl
dec
mov
jne
mov
mov
mov
and
shl
add
cmp
lea
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
sub
shr
add
movzbl
imul
xor
mov
mov
inc
cmpl
lea
mov
mov
jl
mov
sub
mov
movzbl
mov
shll
mov
mov
and
cmp
lea
lea
mov
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
add
test
mov
jne
jmp
sub
sub
mov
shr
sub
test
mov
mov
lea
je
cmp
jl
jmp
cmp
mov
lea
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
add
jmp
sub
sub
mov
shr
sub
mov
lea
cmp
jl
mov
mov
incl
cmpl
mov
mov
jge
andl
jmp
cmpl
jge
subl
jmp
subl
jmp
sub
mov
shr
sub
mov
sub
cmp
mov
mov
lea
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
cmpl
mov
mov
mov
mov
mov
mov
mov
jge
andl
jmp
movl
mov
add
jmp
sub
sub
mov
shr
sub
cmp
mov
mov
mov
lea
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
sub
shr
add
mov
add
shl
mov
mov
add
cmp
mov
lea
jae
mov
shl
mov
mov
movzbl
shl
or
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
mov
sub
shr
add
xor
cmpl
mov
mov
setge
lea
mov
mov
sub
incl
mov
mov
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
mov
mov
lea
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
mov
mov
lea
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setge
dec
and
add
mov
mov
add
cmp
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
shl
andl
mov
lea
jmp
sub
sub
mov
shr
sub
cmp
mov
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
shl
mov
lea
movl
movl
jmp
sub
mov
shr
sub
sub
mov
add
movl
movl
mov
xor
mov
inc
cmp
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
add
jmp
sub
sub
mov
shr
sub
mov
lea
decl
jne
mov
xor
inc
mov
shl
mov
sub
add
cmpl
mov
jge
addl
cmp
jge
mov
jmp
push
pop
mov
shl
lea
movl
cmp
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
add
jmp
sub
sub
mov
shr
sub
mov
lea
decl
jne
sub
cmp
mov
jl
mov
sar
and
dec
or
cmp
mov
jge
shl
mov
sub
mov
lea
jmp
sub
cmp
jae
mov
mov
movzbl
shl
or
shl
incl
mov
shr
add
cmp
jb
sub
or
dec
jne
mov
add
shl
movl
xor
inc
mov
mov
cmp
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
add
jmp
sub
mov
sub
mov
shr
sub
or
mov
lea
shll
decl
jne
inc
mov
je
mov
mov
inc
sub
inc
add
mov
mov
mov
dec
incl
inc
test
mov
mov
jne
jmp
mov
jmp
mov
leave
ret
arpl
add
jo
add
imul
gs
xor
cs
insb
add
add
mov
add
lret
add
add
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
push
imul
jb
je
arpl
add
add
or
add
add
and
stos
ret
jl
sub
inc
xor
in
pop
dec
jp
mov
jl
adc
push
or
pop
cmpsl
testl
pop
lea
rclb
popa
mov
lret
stos
push
pop
jmp
jbe
sbb
cs
mov
sbb
fists
loop
mov
pop
add
push
jnp
repz
mov
jne
push
les
pop
push
icebp
cmpsb
das
outsb
or
sub
cmp
imul
insb
push
cmp
push
les
cmc
jb
sbb
xchg
dec
out
cmp
and
cltd
decl
dec
aam
lcall
mov
shll
adc
push
inc
cmc
push
movsb
imulb
je
js
leave
test
mov
adc
or
fs
loop
rol
js
inc
adc
sahf
push
add
pop
scas
xor
sub
out
js
jne
mov
cmp
jmp
lds
xchg
shr
push
and
popf
lods
cs
push
rcrb
cld
aas
shll
jne
insl
std
scas
dec
xor
jns
or
adc
lods
jl
in
stos
aas
jle
and
jp
sbb
mov
fstp
out
call
push
loope
fldcw
push
jecxz
jmp
ljmp
fisttpl
mov
sub
cli
sub
ret
dec
incl
sbb
fbstp
stc
push
es
mov
scas
pushf
inc
push
dec
mov
pop
mov
lods
cmpsl
std
sub
pop
js
or
repz
sbb
sub
sbb
or
ja
adc
out
mov
sar
jae
xchg
scas
test
inc
mov
mov
mov
lock
imul
sub
add
data16
lahf
xchg
pushf
xchg
jne
fs
push
shlb
rcll
into
mov
test
xchg
hlt
insb
dec
push
popf
imul
test
cmp
int3
inc
dec
xchg
adc
push
sbb
or
mov
aaa
fsubrl
aam
mov
jb
fistpl
push
xchg
pop
or
outsl
hlt
pmullw
xchg
ss
or
pop
dec
mov
bound
shrl
mov
push
pop
cmp
add
scas
call
or
inc
mov
neg
test
pop
sub
xchg
sarl
arpl
sbbl
add
fcmovb
xchg
dec
mov
mov
lret
or
ret
adc
adcb
out
cmpsb
xchg
jno
movsb
xor
fmuls
xchg
push
lods
xchg
lcall
mov
int
mov
sub
add
fisubl
filds
ret
je
sbb
in
imul
jnp
aas
mov
xor
xchg
xorb
lret
xor
jo
jg
mov
mov
jb
stc
shrl
xor
clc
in
mov
enter
push
xor
xchg
arpl
mov
shrb
mov
dec
cmp
rolb
pop
faddl
mov
dec
jle
cmp
ljmp
test
mov
mov
ret
cmp
pop
fwait
fs
and
daa
sti
imul
lods
dec
test
mov
cmc
aad
call
icebp
xor
cmpb
mov
aam
subl
cmc
rcl
insb
sub
pop
sti
mov
les
cmpsb
push
sbb
push
addr16
pushf
pop
shll
add
cli
adc
imul
mov
push
and
sarl
fidivl
push
popf
test
xorl
sti
mov
int
adc
call
sub
xor
inc
mov
dec
push
mov
ljmp
add
xchg
fstl
pop
into
cmp
pop
xchg
in
inc
clc
jb
add
out
aad
pop
outsb
ds
imul
imul
scas
imul
iret
add
sbb
mov
insb
xchg
hlt
sub
mov
or
pop
fstpt
adcb
imul
arpl
outsb
insl
test
or
mov
cmpsb
sahf
outsl
fsubrs
imul
and
leave
mov
mov
mov
push
sub
test
mov
xchg
mov
lds
xorl
arpl
daa
sub
scas
and
fiaddl
jne
js
fcmovnb
mulb
sti
dec
das
jmp
cmp
or
lock
inc
lock
or
scas
ds
jl
mov
clc
push
lahf
xor
mov
add
push
xor
in
insb
push
or
sub
aad
pop
pop
mull
jns
negl
inc
lock
aam
cmp
mov
jnp
or
jg
dec
in
add
pop
push
outsb
cmp
psllq
xor
into
xlat
mov
lds
push
fldt
sub
je
fldt
and
popf
arpl
push
and
sub
mov
sub
xchg
fimuls
testb
in
jge
cld
into
lods
cmp
sbb
fmul
and
cmp
push
mov
out
push
push
lret
out
imull
inc
push
xor
aam
mov
mov
fisubrs
push
hlt
inc
ret
xor
push
lds
push
test
dec
scas
mov
mov
fucomp
mov
int
jg
adc
or
into
jge
inc
and
ret
in
lcall
cmpl
mov
rcrl
mov
push
scas
shrb
pop
push
jecxz
cmpsb
jo
ret
hlt
hlt
xchg
add
gs
scas
dec
pop
mov
sub
cmp
mov
cmc
mov
push
adc
iret
testb
or
xchg
fcoml
out
inc
scas
dec
fstpl
ds
mov
sbb
jbe
les
sub
icebp
mov
fldl
out
ja
jns
inc
inc
gs
cmc
inc
add
xchg
subl
repz
mov
mov
cmp
pop
or
cmp
jae
test
sbb
lret
lret
or
xor
xor
sub
push
mov
dec
sbb
pop
cs
pusha
inc
push
dec
xchg
pop
pop
xor
movsl
push
push
in
mov
dec
ret
fwait
insb
jo
cmp
jo
test
jge
in
mov
leave
daa
jmp
nop
dec
dec
add
ljmp
push
sbb
xchg
into
mov
fsts
pop
xchg
push
add
or
jle
push
ss
or
in
or
mov
clc
js
imul
leave
push
cmp
mov
xchg
or
or
push
aam
and
push
mov
aas
adcb
cmp
rclb
cmp
retw
call
dec
hlt
pop
cs
scas
push
pop
push
out
mov
cli
mov
pop
fisubs
scas
fidivrs
jno
xchg
mov
lahf
in
addr16
xchg
pop
dec
bound
es
adc
pop
sbb
push
jbe
and
in
push
xchg
movsl
repnz
das
cwtl
test
cwtl
dec
adc
ret
insl
jo
fdivrl
jle
ja
push
jo
sbb
dec
jmp
sti
cwtl
test
adc
cltd
push
or
mov
cld
jmp
adc
sub
adc
inc
or
notb
pop
dec
test
adc
mov
data16
push
and
mov
cmp
test
dec
call
jno
mov
into
insl
testb
aas
popa
mov
xchg
sbb
fsts
fisubs
outsb
xchg
inc
fwait
and
pop
add
inc
std
lods
push
sbb
jno
lcall
mov
out
sbb
iret
in
mov
jne
sbb
sbb
push
jge
dec
pop
lret
stc
loope
xchg
push
das
jp
mov
xlat
stos
clc
imul
adc
fwait
jle
push
movsl
adc
arpl
rorb
in
cmp
add
cmp
flds
or
ret
test
pop
mov
gs
mov
cmp
fdivrs
les
ds
fldt
or
jp
xchg
arpl
dec
sub
sub
push
mov
lret
in
movsb
loope
push
arpl
lods
jg
daa
xor
enter
mov
or
fstp
dec
in
dec
adc
loop
repz
inc
jmp
lods
ljmp
add
pop
mov
jl
xor
int
ss
outsl
cmpsl
inc
cld
andb
sti
addl
cmpsb
imul
icebp
fstpt
adc
and
in
scas
fimuls
aam
and
into
dec
fxch
add
sub
int
inc
out
sub
test
pop
scas
xlat
cmp
push
lds
xchg
repz
mov
insb
fisubs
ret
sub
in
cmp
lret
sub
lahf
push
cmc
mov
fsubrs
push
adc
or
imul
cmpsl
shlb
pop
fs
lea
lea
jmp
push
fxch
add
fs
sti
push
mov
mov
in
mov
or
ds
push
or
inc
pop
lods
xor
lods
jb
mov
and
xchg
jne
inc
mov
fwait
mov
hlt
cmp
call
nop
popf
nop
cmp
sub
popf
les
xchg
fdivs
or
loope
cs
in
jecxz
jb
and
jle
fistpl
pop
adc
mov
fistpll
mov
stc
fnstcw
xor
or
lahf
movsl
lods
and
push
mov
cmp
dec
cmp
mov
pop
and
fdecstp
ret
int3
cs
sti
sbb
lods
sub
add
pop
jp
add
outsl
shll
push
pop
test
mov
leave
sbb
push
test
mov
cld
imul
nop
mov
repz
mov
mov
jle
push
js
jbe
ds
inc
push
fsubl
into
fcmovnu
add
and
aaa
insb
push
daa
lcall
pop
nop
iret
mov
fdivrs
pop
cli
mov
xor
sub
add
lods
push
lock
dec
mov
scas
jg
mov
pop
into
loopne
pop
cmc
lock
inc
dec
mov
sub
sub
rol
xor
xchg
iret
mov
out
in
fiadds
lods
jbe
lcall
orb
and
pop
mov
dec
inc
imul
cli
adc
xchg
call
jmp
push
mov
fnstsw
pop
add
or
xor
jbe
push
push
ret
xor
and
cwtl
mov
inc
mov
fsubs
inc
push
out
aam
cld
fimuls
sti
jmp
sub
outsl
or
ljmp
cld
xchg
add
push
cs
ret
pop
xor
dec
sbb
sub
push
addr16
and
sbb
adc
sahf
pop
inc
mov
repz
mov
aam
rclb
loopne
dec
insb
inc
dec
and
scas
data16
cmp
cli
aam
pop
jns
fnsave
fcomps
add
aaa
pop
divl
int
dec
js
push
jg
mov
mov
mov
hlt
repnz
cltd
xor
das
and
lret
or
repnz
cwtl
jno
sbb
and
loope
aas
test
push
and
push
cmc
push
lret
scas
dec
inc
mov
jge
cmp
mov
and
cmc
fidivl
xchg
cmp
mov
divps
cli
jecxz
ret
shlb
sbb
jle
and
rol
jecxz
pop
lret
fdivl
push
cwtl
cmp
mov
push
cld
lods
roll
mov
dec
jb
insl
dec
popf
aaa
add
sti
add
aam
mov
or
mov
ret
gs
jge
mov
pusha
aam
insl
jne
pop
out
sbb
xor
mov
mov
dec
enter
or
psrad
mov
xor
daa
cltd
mov
aaa
jne
push
xor
pop
add
cmp
push
aam
jns
rorb
xorb
mov
xor
inc
in
nop
jnp
les
sbb
jl
inc
in
mov
mov
dec
jns
push
jl
ds
mov
dec
lea
xor
int3
fiaddl
js
nop
fistpl
rclb
cmc
ss
icebp
loop
cs
inc
and
movsl
jbe
sub
mov
and
mov
and
lcall
jns
and
enter
pop
xchg
or
stos
ret
xor
or
out
mov
movsb
fildll
lods
push
repnz
mov
leave
mov
jae
out
jb
mov
repnz
mov
and
call
cmpsl
jae
clc
mov
popa
in
dec
out
pop
repz
push
dec
dec
gs
lods
out
in
cmp
daa
push
xchg
shl
or
sti
xor
fistpl
pop
out
mov
xchg
outsl
mov
out
jge
push
stc
sub
lea
pop
fldenv
mov
sub
jge
jb
gs
xor
dec
sbb
jbe
lahf
inc
pop
mov
enter
rcll
cld
sbb
or
mov
mov
stos
xor
mov
mov
out
subb
into
cmpsl
sti
add
cmpsb
lock
push
insl
rorb
sub
push
adc
cmp
sbb
ret
insl
enter
out
ficompl
xorl
nop
dec
mov
inc
inc
xchg
mov
mov
faddl
xchg
cmp
inc
add
popf
test
lods
pop
add
xor
loop
aam
or
xchg
mov
mov
bound
push
mov
mov
push
loopne
and
roll
inc
jge
inc
pop
arpl
adc
pop
and
and
lods
cld
fwait
in
mov
pop
sbb
adc
jnp
and
push
pop
push
sbb
xchg
jp
fdiv
cltd
xchg
inc
mov
push
aas
out
fcompl
sub
es
or
or
xchg
adc
mov
xor
pop
cmp
mov
cmp
push
loop
or
mov
stos
es
sti
mov
mov
imul
xchg
imul
imul
cmp
jb
daa
fisubs
movb
pop
xchg
and
xchg
add
add
or
or
jbe
dec
or
jno
adc
test
outsl
and
mov
ss
shlb
ljmp
or
pop
xchg
in
cwtl
in
xchg
lea
stos
dec
adc
mov
adc
pop
repz
dec
imul
mov
dec
jo
int
pop
xchg
mov
or
mov
lcall
jb
sub
gs
jae
hlt
lods
sbb
cmc
sbb
clc
cli
mov
push
in
cmp
cmpsb
in
adc
lret
into
xor
xchg
xor
xor
adc
or
inc
sbb
cmp
pushf
fwait
sub
cmp
sub
stos
or
pop
arpl
cmp
inc
jmp
lods
int
test
cmp
js
mov
sbb
xchg
mov
mov
push
in
sarb
dec
jecxz
add
movsb
icebp
imulb
dec
adc
sti
std
dec
or
lods
or
pop
push
dec
pushw
test
xor
sbb
pop
loopne
test
aam
clc
repnz
lds
sbb
xor
outsb
bound
and
enter
testl
fwait
mov
imul
out
mov
mov
.byte
add
