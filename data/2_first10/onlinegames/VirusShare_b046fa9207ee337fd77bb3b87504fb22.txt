insb
aas
mov
out
add
push
daa
add
pop
add
and
dec
rcll
jle
dec
shll
in
mov
and
and
dec
imul
jb
xchg
and
mov
and
in
jmp
shlb
inc
xchg
pop
mov
lcall
daa
and
lods
or
inc
add
gs
gs
xor
cs
insb
add
packssdw
imul
pop
fs
jg
mulb
popa
pop
sbb
outsb
je
cs
bound
push
jb
insl
in
mov
addr16
pop
jae
jae
and
pop
fnstsw
add
pushw
gs
outsl
imul
add
mov
pop
adc
jbe
mov
js
and
imul
pusha
femms
fs
cmp
dec
or
outsl
arpl
bound
mov
mov
or
cmp
xor
xor
aas
push
mov
sub
push
push
xor
pop
xor
lea
mov
stos
stos
stos
adc
std
cld
add
pushl
push
push
adc
adc
mov
cmp
je
ds
add
or
push
call
call
aaa
iret
sub
mov
fdivr
aas
push
push
call
add
cmp
je
mov
adc
fiaddl
adc
adc
aaa
ja
dec
aad
cmp
xchg
std
ss
int
push
pop
jmp
push
or
pop
pop
pop
leave
ret
xor
fisttps
rolb
faddl
out
std
idiv
xor
test
les
add
or
fildl
lds
gs
popa
enter
insl
mov
lret
lret
outsl
int3
int
xchg
pop
mov
pop
into
push
jo
xor
pop
outsb
cmp
xor
push
aad
pop
xlat
insb
mov
sub
fidivl
fisttpl
int
imul
jecxz
inc
in
mov
xlat
jne
out
out
call
imul
icebp
shll
cmc
divb
clc
stc
dec
pop
cli
sti
js
cmpb
je
mov
sub
mov
imul
jle
pop
adc
mov
jne
and
mulb
cmp
je
push
ret
lock
call
in
add
jne
push
xchg
jp
movl
orl
insb
mov
adc
pushl
in
adc
adc
or
enter
iret
aas
pop
pop
incl
push
dec
fdivrl
adc
jne
mov
push
lds
push
mov
fcom
mov
push
push
push
jnp
dec
addr16
push
push
mov
in
mov
push
push
clc
add
mov
push
sbb
js
push
lock
xor
add
cmp
addr16
hlt
mov
push
mov
adc
stos
int
int3
fsubrs
jge
lock
repz
push
adc
inc
sbb
pop
or
and
lock
push
cmp
push
jbe
insl
fs
loope
sbb
rcrl
inc
mov
in
adc
int3
dec
mov
rolb
dec
xor
jbe
mov
sub
jo
push
push
scas
sub
insl
inc
adc
jo
into
xorl
jmp
ret
test
adc
jbe
daa
adc
push
dec
adcb
jo
out
push
push
sbb
or
fbld
shll
dec
inc
cmp
jge
mov
dec
mov
push
lods
fistpl
je
or
sub
lock
or
or
call
pop
mov
icebp
pop
loop
int3
leave
cltd
sub
in
loope
mov
and
imul
fsts
leave
cmp
pusha
outsb
in
sub
sub
pop
xor
sbb
jmp
sbb
sbb
push
cmp
fcom
lds
jno
popa
test
or
fdivr
call
adc
iret
sbb
enter
inc
dec
dec
test
jne
push
in
cmp
pop
jmp
lds
shlb
and
push
jecxz
shl
mov
mov
add
inc
cmpb
inc
fadds
mov
sti
add
and
aad
pop
clc
pop
jecxz
and
loope
mov
out
out
outsl
movsb
sub
daa
push
or
repz
ljmp
sub
mov
add
adc
push
xor
in
cltd
shl
and
xlat
sbb
lock
pusha
subb
jmp
mov
and
mov
cmp
or
daa
cwtl
pop
mov
cmpl
cmp
call
mov
pop
negl
pop
shlb
pop
sbb
stc
sbb
outsb
outsl
dec
mov
jne
je
repz
loopne
push
add
movsl
loopne
add
sarb
cmp
lret
stos
push
adc
call
int
pop
add
xor
adc
bound
or
ficomps
pop
mov
sbb
shl
call
mov
lods
push
ss
xor
lret
push
or
lock
xor
inc
shll
xor
std
adc
xlat
dec
test
adc
or
pop
sbb
pop
pop
pop
negb
mov
pop
push
cld
cmpsb
lods
jb
jnp
cmp
or
inc
fst
sub
ss
push
std
imul
fdivrp
insb
push
add
je
popa
sub
shrb
xor
pop
add
insb
int
inc
add
sub
leave
pop
or
jne
insb
inc
mov
mov
inc
ja
out
xchg
lcall
fs
jae
cmp
add
add
fs
xchg
add
dec
push
in
adc
sbb
ret
fstl
sbb
enter
sar
out
enter
imul
imul
cs
push
iret
outsl
shrb
xchg
mov
sar
push
pushf
out
jae
test
sar
movsb
imul
adc
clc
gs
push
cld
std
dec
push
mov
popf
iret
xchg
cli
mov
mov
test
jb
arpl
jb
push
lds
fldenv
out
xlat
cmp
sarb
rcl
or
sub
xor
cs
sub
shlb
js
mov
int3
jb
clc
int
clc
pop
dec
mov
lods
test
mov
enter
shrb
loope
out
jl
rorb
push
ss
pop
xchg
int
fcoms
sahf
sbb
aaa
push
dec
jmp
fld
fisttpll
mov
fisubrl
or
lods
outsl
outsb
ds
je
jae
adc
cli
pop
sti
mov
leave
fisubs
mov
fs
mov
jg
not
pop
adc
xchg
pop
mov
mov
test
ss
jge
xor
push
xor
xchg
adc
pop
insb
stos
clc
jmp
jle
arpl
adcl
fsubrp
or
jmp
dec
or
mov
insb
icebp
enter
stc
bound
nop
sub
bound
bound
sar
addr16
sbb
jae
sar
sti
jmp
sar
popf
movsl
xchg
xchg
push
push
loope
push
xchg
mov
fwait
popf
cltd
mov
push
adc
cmp
pop
in
mov
pop
lcall
jo
outsl
sbb
in
shr
mov
pop
lock
andl
movsl
hlt
xchg
femms
imull
int3
ret
insb
sbb
and
jnp
data16
hlt
js
cmp
cli
mov
sbb
ret
mulb
sub
rorl
mov
pusha
scas
cli
cli
push
arpl
sbb
fcoml
xor
jmp
cwtl
mov
add
mov
inc
pusha
lea
adc
jmp
push
loopne
pop
pop
jae
sub
mov
or
loope
pop
pusha
mov
aas
test
and
scas
in
xchg
sbb
sub
adc
fiaddl
lods
nop
cmp
fwait
adc
add
dec
inc
dec
dec
sbb
shl
das
or
dec
inc
dec
lods
add
pusha
icebp
inc
inc
mov
inc
push
popa
mov
add
mov
incl
add
add
dec
pop
nop
add
enter
add
subl
loopne
xchg
pushl
push
pop
mov
int
mov
imul
jb
addr16
insl
and
outsb
outsb
outsl
je
bound
jb
outsb
and
ja
cli
incl
and
fs
imul
cltd
scas
jmp
in
jle
ljmp
dec
out
cli
jmp
mov
aaa
push
imul
in
inc
add
loope
mov
push
and
add
sarl
pop
sub
addr16
jnp
pop
add
push
add
into
fdivl
pop
adc
clc
push
fs
ss
testb
popl
and
sahf
out
add
fsubrs
bound
movsb
inc
adc
mov
popf
out
in
push
mov
adc
adc
fsin
xchg
mov
outsl
arpl
inc
and
test
inc
pushl
add
sar
push
xor
movsb
xor
lcall
xor
ss
pop
shll
pushf
movsb
dec
shll
in
or
add
ds
pop
imul
xor
ja
xor
mov
addb
pop
outsb
xor
and
lahf
je
inc
inc
pop
push
mov
lea
xor
js
lldt
add
pop
jb
test
xorb
add
iret
sub
mov
cmp
stc
and
add
add
mov
adc
and
adc
push
repnz
je
and
adc
leave
sub
inc
and
adc
enter
add
cmp
add
pushf
and
pop
push
icebp
sahf
adc
ret
xor
add
test
sub
add
movsb
and
adc
and
adc
pop
jbe
ret
dec
sub
add
mov
fmull
test
dec
push
enter
or
gs
and
ret
adc
push
cmp
jne
push
mov
jmp
adc
mov
jne
adc
jnp
roll
pop
lea
inc
out
adc
or
mov
test
sbbb
dec
push
mov
push
or
jo
leave
mov
and
inc
xorb
and
or
mov
rcl
mov
sub
mov
out
call
movsl
js,pn
jae
test
xchg
push
clc
std
adc
xor
enter
test
mov
xor
mov
fs
or
xor
frstor
xchg
sub
push
enter
jnp
mov
or
push
enter
daa
in
mov
mov
xor
adc
mov
inc
cmpb
das
cltd
scas
xor
jl
call
push
jg
mov
and
test
add
cmp
jl
dec
and
cmp
repnz
add
mov
and
xchg
icebp
idiv
sbb
out
sti
insl
xor
addr16
mov
xchg
pop
and
dec
jne
pop
call
pop
popf
decl
out
mov
out
and
or
shrl
loope
testl
lods
mov
or
addr16
xchg
jmp
cmpsl
dec
jbe
or
movb
xlat
sub
mov
or
cmp
jne
pop
mov
push
jo
dec
sub
pop
sbbb
sub
sbb
pop
or
push
mov
bnd
in
fs
div
shll
xor
or
add
sub
adc
xchg
add
inc
icebp
adc
neg
pop
sbb
repz
or
jbe
mov
ljmp
pop
rcr
xor
xor
fs
push
gs
and
fisttpll
or
lods
adc
hlt
inc
xchg
fidivrs
pusha
jne
stc
cmp
cmp
add
lcall
sbb
or
popa
sub
jb
adc
packuswb
fmull
sarb
or
xor
push
mov
pop
in
dec
cmp
cmp
mov
jmp
cmp
or
test
repnz
pop
push
mov
jbe
add
push
ret
frstor
ss
push
pusha
push
enter
push
mov
sub
add
mov
sub
jo
lret
jb
insb
jb
jb
fisttpl
lret
mov
js
cltd
mov
xor
cmpsb
pop
cs
ja
imul
shll
adc
push
mov
loop
in
cld
mov
ret
into
cmp
movsb
sti
add
and
test
inc
call
mov
mov
or
push
and
pop
ds
lret
add
and
pop
cwtl
jge
push
jmp
sub
and
scas
scas
sbb
xchg
es
mov
mov
mov
jb
push
fists
call
dec
jo
push
fdivs
or
vmwrite
loopew
dec
lock
or
pop
movsl
mov
cmpw
lret
dec
cmp
cmp
mov
clc
xor
fstl
xchg
dec
sbb
jge
jecxz
das
mov
cmp
cmp
sub
cmpb
mov
insb
sub
jo
daa
cmpl
ljmp
je
mov
test
je
add
push
aas
lea
cmc
or
add
mov
add
mov
add
push
inc
dec
sbb
mov
mov
aam
add
sub
fistps
popa
sbb
add
add
sub
jge
jno
int
mov
add
sub
in
pushl
jno
mov
mov
out
mov
mov
lods
inc
cmpl
mov
mov
inc
gs
mov
sti
lods
and
lea
shr
jle
movzwl
mov
jne
outsl
std
movsl
out
daa
add
ljmp
cmp
jp
push
or
adc
xchg
inc
lar
data16
lock
movsl
jae
or
jne
or
sub
xchg
mov
mov
inc
clc
or
shl
or
jl
stos
dec
cmpsl
xchg
xor
or
inc
mov
aaa
pop
sub
inc
jl
add
jmp
bound
jmp
sti
imul
push
repz
pushl
jno
push
inc
dec
inc
mov
xorb
aam
insl
aaa
xlat
pop
in
outsb
inc
adc
iret
lcall
je
and
mov
pushl
add
insb
in
ret
scas
clc
add
sub
or
sub
sbb
loope
or
push
push
xchg
js
mov
mov
jl
push
lock
or
or
jle
sbb
pop
lods
pop
push
outsb
mov
jecxz
in
std
outsb
or
lahf
inc
aaa
pushl
xor
test
xor
lods
call
push
dec
fwait
call
nop
inc
pop
inc
inc
mov
or
mov
imul
jbe
out
je
xchg
clc
cltd
pop
xlat
and
call
push
cmp
mov
and
jg
fdivs
mov
or
push
testb
je
pop
inc
sub
dec
inc
rcrb
sbb
test
and
pop
pop
test
xchg
in
sti
gs
mov
push
cmp
inc
lea
enter
push
mov
xchg
mov
fwait
jl
call
mov
loopne
or
not
mov
nop
sbb
pop
jne
dec
nop
jmp
and
push
into
mov
or
subb
test
jo
outsl
mov
lret
mov
gs
sbb
lret
js
je
push
sahf
mov
inc
adc
and
xor
in
rcll
or
call
xor
mov
mov
xor
daa
add
and
pop
fidivrl
inc
mov
pusha
push
in
and
or
adc
test
call
test
add
pop
aam
aam
or
mov
and
and
je
add
and
iret
les
or
fs
js
mov
cs
jbe
gs
data16
sub
adc
rcrb
cltd
dec
jbe
arpl
or
stos
aas
mov
rclb
add
lcall
mov
outsl
jae
dec
popa
outsb
fs
cmp
inc
xchg
push
jb
arpl
fs
mov
fists
jne
add
fs
imul
sti
push
insb
jmp
dec
outsl
fs
inc
pop
dec
popa
insl
gs
inc
inc
jne
xor
cmp
out
fisubrs
and
arpl
sub
ja
std
lods
insl
mov
or
jb
sub
test
push
mov
je
popa
insb
inc
ds
js
nop
add
imul
mov
and
push
arpl
push
gs
mov
jo
outsl
add
lods
sub
out
pop
orb
push
xorb
notl
int3
lea
outsb
xchg
dec
jo
mov
arpl
test
jae
xor
jne
mov
add
popa
mov
jne
inc
jno
push
mulb
dec
pcmpeqb
and
lea
pop
push
das
dec
mov
push
pushw
gs
negb
push
ret
or
imul
clc
dec
fwait
bound
popa
pop
loope
xor
inc
int
sub
ds
push
outsl
outsl
insb
push
xor
insl
jo
push
outsb
popa
jo
push
pop
or
push
cmpl
js
jnp
out
cmp
cmpb
jp
dec
inc
push
dec
inc
out
fnsave
daa
jo
pop
retw
push
push
outsb
cmp
sbb
pop
add
jne
lahf
sub
add
pop
mov
fsubs
mov
jne
push
jo
bound
mov
xor
in
pop
fildl
sub
arpl
popa
jge
mov
cwtl
mov
pop
dec
outsb
data16
out
outsb
in
in
imul
add
std
jns
mov
arpl
jo
inc
popa
arpl
cltd
imul
mov
inc
andb
inc
push
inc
push
dec
mov
push
push
lcall
inc
pushf
outsb
lods
xchg
push
sbb
mov
cltd
add
insl
nopl
rorb
lds
or
and
in
pop
adc
ja
addr16
xor
xor
dec
stos
inc
push
push
jno
or
inc
jne
inc
mov
xor
jnp
mov
xchg
xor
xchg
lcall
pushl
adc
xor
xor
jno
mov
cmpsl
xor
xor
xor
xor
xor
xor
jno
lahf
xor
xor
xor
xor
xor
pushl
xor
xor
xor
pop
xor
xor
adc
sbb
arpl
sahf
ss
decl
std
ss
ss
ss
pop
ss
sbb
and
sub
ss
inc
aaa
push
aaa
pop
aaa
sti
jmp
aaa
jg
or
adc
and
xor
pop
cmp
imul
cmp
addb
jg
sbb
cmp
imul
movsb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
mov
mov
cmp
add
xchg
push
xchg
inc
popf
stc
out
psubq
and
or
or
decl
mov
shlb
daa
repnz
jnp
or
clc
or
inc
push
cmp
dec
aaa
cmp
ljmp
shrb
jo
mov
ja
mov
inc
mov
add
mul
add
movsb
adc
cld
outsl
push
wbinvd
es
enter
inc
push
or
aaa
shlb
or
push
popf
add
out
insb
mov
ljmp
or
add
jl
lods
xor
pusha
insb
mov
es
xor
roll
push
xor
mov
add
dec
sarl
ds
pop
shll
xchg
sahf
dec
shll
testb
cmpsb
imul
cmpsb
imul
cmpsb
imul
cmpsb
imul
insl
mov
iret
test
or
xchg
jp
add
xor
sarl
mov
mov
rcr
scas
cmp
cmp
add
push
sub
cmp
add
outsl
sahf
hlt
jmp
in
pushf
out
int3
pop
fadds
push
mov
add
mov
add
inc
movsb
add
pop
sbb
cs
scas
loopne
inc
orl
fsts
mov
inc
cmpsl
je
jo
jne
jns
inc
pop
test
push
jmp
ret
push
dec
dec
add
in
mov
pusha
mov
add
fwait
dec
addb
pusha
and
or
into
fisubrs
xchg
add
imul
pop
test
add
add
inc
mov
inc
or
add
add
flds
dec
fadds
fistps
sub
or
and
test
das
pop
pop
and
cmp
shlb
ja
aas
xor
or
add
mov
or
sarl
incl
and
add
cltd
sub
test
add
xchg
adc
xchg
inc
xchg
ret
pop
test
mov
fistpl
test
mov
xchg
jo
cmpsb
pop
pusha
and
int
xor
inc
jg
iret
pop
xor
ud2
push
add
jne
ss
inc
adc
rorb
arpl
jne
setp
pop
inc
or
push
incl
lods
jmp
gs
add
push
inc
jb
push
and
out
lcall
ja
or
push
mov
jae
and
addr16
lods
add
xor
push
sbb
fcomps
les
movsl
add
push
dec
inc
adc
mov
dec
pop
stos
dec
push
push
xchg
sub
mov
jno
insb
mov
cltd
xchg
js
push
push
mov
lock
std
xchg
sbb
outsl
je
push
jns
jnp
mov
ja
mov
insb
jne
inc
outsl
ja
insb
icebp
bound
inc
icebp
mov
outsb
arpl
lock
inc
pushf
push
add
mov
jo
pop
and
mov
arpl
add
mov
pop
inc
inc
inc
push
dec
inc
popa
push
jb
int3
add
xchg
stc
add
loop
les
lds
call
push
add
sub
into
mov
mov
stos
or
rcrb
sti
jbe
unpckhps
mov
jbe
popa
fistpl
fmuls
rcrl
arpl
inc
add
xchg
jo
mov
add
and
inc
pop
pop
daa
sub
enter
test
sbbl
movsl
adc
faddl
pop
jb
cwtl
inc
jne
sahf
pop
and
mov
pop
jb
leave
in
jp
jp
xchg
mov
adc
sbb
pushf
fstpl
push
add
pop
mov
loopne,pn
cmp
mov
adc
push
xchg
aad
adc
adc
roll
cs
lea
adc
fcoms
jl
in
sbb
mov
dec
in
add
movb
mov
sub
sub
mov
movb
insb
mov
add
movb
sti
js
sub
roll
call
filds
xchg
imul
addb
sbb
inc
in
mov
test
cwtl
push
add
pop
or
or
fwait
push
xchg
or
add
xor
das
sub
mov
lock
mov
in
or
mov
movzbl
rorl
mov
and
add
mov
andb
mov
dec
divb
aas
jb
pop
cmp
pop
jl
push
iret
inc
shrl
pop
mov
inc
lahf
and
nop
dec
loopne
add
insl
push
nop
aaa
in
push
fcoms
add
in
decl
push
call
adc
xor
adc
cld
stc
add
inc
fdivs
add
lock
adc
stc
push
nop
fdivl
add
les
add
outsb
dec
jle
enter
int3
adc
popa
push
mov
nop
push
icebp
dec
inc
push
xor
adc
inc
jb
inc
add
push
inc
lds
mov
jae
ret
inc
cld
pop
loop
cmpl
lret
mov
mov
inc
xor
repz
xchg
add
sub
or
and
repnz
cmp
mov
ficoms
fcoms
cmp
testb
cmp
outsb
sub
jmp
fstpt
je
adc
pop
cmp
ja
jge
add
ffreep
fimuls
in
xor
xchg
loopne
mov
cmp
mov
inc
jmp
cmp
jb
sub
je
addl
or
pop
pop
test
dec
sbb
mov
nop
adc
lods
pop
roll
push
nop
in
scas
fwait
lds
sahf
jae
push
lds
push
cmp
pop
push
mov
add
in
lods
add
add
jge
push
push
lods
mov
imul
push
and
imul
dec
ret
xlat
mov
int
push
push
push
push
pop
sbb
insl
pop
sub
decb
js
sbb
sub
mov
pop
adc
decb
lea
movsl
add
mov
js
int3
movsl
movsb
mov
sbb
sbb
mov
mov
movsb
int3
rep
sbb
shlb
int3
or
sbb
bsf
inc
or
mov
xlat
push
sbb
pop
xor
pop
or
aaa
test
xchg
pop
and
adc
insl
mov
or
push
sbb
jbe
sbb
test
scas
mov
xlat
insl
or
jle
lock
fldt
bound
pop
and
push
pop
call
gs
adc
faddl
hlt
insl
imul
inc
stos
mov
xchg
call
pop
fstpt
enter
cmpsb
in
push
nop
add
mov
xchg
roll
jno
adc
jae
loop
adc
andw
mov
push
subl
dec
cld
pop
jb
pusha
xchg
pop
rcll
addl
pop
sub
fadds
call
add
push
les
or
adc
push
xchg
dec
test
add
mov
out
mov
lea
cmp
jne
loop
and
and
ss
sti
pop
sub
and
in
js
adc
call
jae
shlb
outsb
mov
xor
mov
in
add
push
jo
loope
call
cmp
add
andb
popa
dec
xchg
outsb
ja
clc
call
out
xchg
add
pop
stc
pop
xor
adc
add
inc
and
mov
xor
jo
jns
dec
push
insb
xor
xor
dec
push
enter
pusha
xor
xor
xor
or
call
add
xchg
cmp
xchg
xor
dec
ss
js
xor
pop
repnz
jecxz
fimull
and
test
xorb
inc
xchg
iret
jl
clc
xor
enter
adc
adc
cmpsb
cltd
mov
cmp
inc
shlb
shlb
add
cmp
xor
lret
and
outsl
rorb
xor
test
jnp
adc
or
inc
adc
testb
je
movb
jmp
add
sbb
jbe
inc
mov
or
xlat
pusha
ret
xchg
bound
pop
inc
idiv
cli
mov
call
jg
sbb
jmp
andb
add
or
add
nop
pop
or
enter
xor
adc
dec
jle
cwtl
xor
adc
and
dec
pop
jg
stc
dec
int3
cmp
adc
dec
dec
inc
fcoml
add
call
xor
adc
pop
lock
adc
pop
out
dec
pop
jmp
inc
mov
push
mov
mov
and
ret
das
cld
fs
ja
xor
mov
cmpb
xchg
movb
mov
ret
lods
inc
or
stos
sar
aas
icebp
mov
imul
add
andl
sbb
pop
adc
ljmp
cmpsl
or
imul
adc
and
push
dec
loopne
push
add
icebp
inc
jge
push
aaa
clc
mov
mov
mov
shrl
jmp
aas
cmp
jae
incl
lret
shr
add
dec
jo
clc
push
push
pop
inc
push
mov
push
sbb
mov
dec
push
pop
jne
adc
lock
cmp
lea
sbb
sti
mov
sbb
mov
mov
add
loop
or
adc
or
pop
bound
jne
xor
aad
adc
add
mov
stos
pop
xchg
xchg
inc
cmp
inc
push
ds
pop
add
jbe
or
clc
mov
not
and
push
pop
loop
fistpll
repz
add
lea
xor
shr
mov
jnp
add
push
repnz
not
and
testl
lea
test
add
out
push
js
repnz
aam
or
jge
pop
inc
fisubs
fimull
add
lea
sti
lret
and
out
xadd
adc
pop
inc
sub
mov
fstpl
fbld
div
sarl
inc
fiadds
psllq
sub
rorl
push
shr
or
add
dec
aaa
shll
jg
push
xchg
lods
lea
sbb
cli
mov
lret
pop
adcl
push
hlt
mov
not
and
sub
mov
popa
shlb
sub
jns
mov
xchg
rcr
mov
roll
into
mov
pop
fiaddl
mov
or
adc
test
mov
add
or
or
sbbl
int3
xor
sub
sbb
add
out
out
or
test
xor
add
sbb
jns
cs
les
repz
fcomp
cwtl
subb
repnz
sbb
add
rcr
jle
jnp
das
pusha
adc
pop
scas
testl
sti
mov
pop
les
scas
sub
pop
push
inc
iret
repnz
add
push
pop
sub
push
fcom
add
jns
fdivrs
pop
push
rcl
mov
mov
nop
imul
xchg
out
nop
out
fmull
or
mov
jno
std
stos
lods
push
fdivs
enter
and
mov
outsb
pop
fidivrs
pop
aaa
das
push
mov
fmull
out
jns
pop
mov
xor
add
or
cmp
and
or
popa
adc
add
mov
decb
mov
mov
shl
ljmp
mov
aad
aam
pop
bound
popa
imul
sbb
add
pop
or
inc
cld
dec
cmp
in
xchg
out
inc
rclb
push
fadds
hlt
push
mov
daa
clc
jb
repz
pop
rcl
fistps
icebp
adc
repnz
rcll
adc
subl
mov
insl
and
call
lock
icebp
imull
mov
pop
lods
hlt
pop
adc
call
adc
mov
lods
mov
jge
repz
push
adc
add
pop
ret
and
in
pop
and
mov
cmp
cmp
jge
cli
fnstcw
out
test
jg
or
stos
fisubrs
mov
mov
mov
out
loope
jle
lcall
ret
inc
enter
pop
add
pop
aaa
or
mov
push
fistps
popl
mov
cltd
and
xchg
adc
test
fsubrp
int
mov
adc
inc
loop
shr
or
xlat
loope
or
jmp
rcrb
push
cmc
out
aam
mov
not
lcall
int3
aad
int
cld
sbb
add
adc
movl
xchg
dec
fisttps
lret
repz
adc
or
xor
mov
mov
cmp
jmp
add
mov
pop
test
xor
mov
lcall
xchg
mov
fadd
and
insl
adc
mov
sti
xor
mov
repnz
mov
cmp
std
mov
mov
ret
mov
ljmp
outsl
addr16
add
mov
fimuls
sub
loop
fmuls
pop
push
int3
pop
pusha
dec
mov
pop
pop
xchg
loop
xor
xrelease
push
jo
mov
or
or
xlat
loop
mov
jle
sub
jae
mov
lret
testl
imul
cli
daa
mov
js
loope
fimuls
test
dec
mov
push
xchg
jae
adc
fidivs
test
js
pop
out
cmp
sbb
rcll
jl
pop
mov
sarb
cmp
aam
cltd
js
mov
mov
jbe
les
in
mov
divl
idiv
ss
in
insb
out
jp
jl
pop
je
or
pushl
or
aam
gs
mov
out
push
lods
les
cli
mov
mov
sti
mov
stos
mov
jecxz
and
stos
rcrb
sbb
push
or
in
outsb
insl
mov
addb
push
xchg
push
sub
or
fistps
cmpsl
and
mov
lock
hlt
shlb
cld
cltd
or
xor
aas
inc
xchg
out
cmp
pop
pop
gs
sbb
shl
int
loopne
or
lock
int3
or
mov
or
ja
jno
out
sbb
dec
jge,pt
out
call
getsec
paddusw
lock
pop
test
out
jmp
dec
xor
push
ds
test
cmp
pop
outsb
jecxz
jp
sbb
int
mov
fistpl
loopne
sub
jecxz
rcl
in
fcmovnb
cmp
mov
ljmp
fdivl
mov
cs
dec
mov
lds
xor
jb
ja
pop
mov
fisubs
xor
out
loopne
mov
fiaddl
mov
enter
pslld
ret
repz
xchg
roll
dec
mov
pop
jge
xlat
pop
add
pop
movsb
rcr
pop
mov
add
inc
or
or
addl
in
test
std
push
mov
mov
dec
cld
outsl
cmc
xchg
jge
cmp
jl
js
sub
push
push
push
divb
mov
fcoml
xlat
adc
push
test
fcmovbe
insl
push
aaa
outsb
lea
adc
adc
push
iret
pop
pop
mov
mov
xchg
outsl
sti
mov
adc
adc
add
sbb
shlb
je
cmp
jne
xchg
sbb
ret
push
fstps
adc
push
xor
jge
shlb
pop
push
pop
cmp
push
fistps
pusha
cmp
jbe
lea
jg
cmp
aaa
mov
inc
add
lods
fisttpl
jb
jmp
imul
add
lea
fstl
or
pop
pop
lcall
in
inc
xor
fsts
mov
gs
mov
inc
dec
push
stos
mov
sbb
cmp
xor
or
inc
xor
push
into
dec
jo
insl
push
push
mull
sub
fbstp
jge
or
push
gs
adcl
pop
push
push
and
pop
cmp
xchg
mov
neg
adc
mov
or
jbe
int
daa
in
call
mov
imul
adc
insl
add
out
fsubs
das
fsubrl
jo
fwait
jns
and
gs
in
outsl
pop
cmp
int
mov
test
test
js
push
or
mov
mov
cwtl
mov
ds
sbb
jg
addr16
jecxz
sbb
inc
aad
cwtl
inc
push
enterw
mov
pop
add
in
je
je
jnp
mov
in
lret
ds
jg
mov
movl
pop
sbb
xor
or
or
dec
hlt
xorb
adc
sub
clc
lahf
int
push
fwait
cwtl
cmp
or
xchg
cltd
push
aad
cld
setge
cld
xor
xlat
data16
fwait
or
pop
xchg
mov
test
sub
gs
mov
adc
add
hlt
mov
mov
mov
cmpsb
jns
or
add
and
enter
dec
adc
cmp
clc
ja
rorb
push
repnz
cmp
mov
jle
in
pop
and
jmp
sbb
cmp
je
fistpll
cmpw
jne
pop
push
arpl
inc
add
cmp
outsb
mov
sub
and
mov
and
in
add
nop/reserved
xor
mov
cld
push
aad
mov
int3
or
inc
lret
add
jne
cwtl
cmp
inc
addl
flds
out
addl
jnp
mov
pop
xchg
cmp
stc
jg
testb
mov
cmp
je
cmp
jne
push
xchg
out
sbb
push
testb
add
add
mov
stos
push
adc
sbb
xor
jle
sub
aam
aaa
mov
enter
hlt
or
pop
xor
push
data16
adcb
or
inc
sti
mov
push
fdivrl
ret
adc
inc
jmp
lds
orl
mov
dec
ret
ret
cmp
mov
mov
aas
cmp
sbb
push
nop
cmp
loopne
mov
fnstenv
xchg
mov
pop
add
out
sbb
test
or
mov
jne
mov
in
pop
cmp
pushl
add
repz
dec
mov
mov
sub
adc
shll
push
aam
mov
in
push
lods
std
imul
ror
int
call
cmp
and
pushf
mov
neg
push
mov
inc
push
movsb
std
testl
mov
ja
cmpl
pop
add
mov
push
jne
or
add
daa
jae
fdivl
jo
push
push
pop
dec
xor
sbb
ljmp
mov
xchg
in
sbb
pop
adc
pop
pop
call
aaa
jmp
add
mov
cmpb
inc
adc
imul
aas
or
mov
push
add
add
adc
push
dec
jmp
dec
mov
nop
xor
push
adc
add
sbb
insl
scas
push
mov
cmp
outsb
add
mov
push
js
ja
dec
push
mov
or
arpl
in
lret
in
fldcw
scas
insl
mov
mov
pop
cs
push
mov
mov
mov
mov
xchg
lret
in
mov
mov
mov
insl
in
imul
outsb
mov
gs
gs
xchg
gs
outsl
jb
jb
mov
mov
and
fcmovu
gs
mov
mov
loope
gs
pop
in
in
imul
out
dec
out
call
mov
sub
mov
out
out
insb
bnd
repz
fadd
lretw
mov
ret
les
lds
fldt
leave
lret
cmp
int3
lcall
testb
xorb
mov
movsb
lea
stc
fidivrs
push
xor
or
movsb
scas
dec
aaa
cmp
orl
add
js
inc
sbbl
xor
pop
inc
jae
mov
fldenv
sub
inc
leave
in
and
and
insl
mov
cli
jmp
dec
rcr
dec
test
cmp
xchg
enter
cmp
inc
movsb
cmpl
jg
out
mov
lea
rcl
xor
inc
adc
and
call
pop
push
lcall
loopne
xchg
cli
mov
or
andl
cli
inc
and
xchg
pop
ret
sbb
mov
push
inc
xchg
cs
mov
scas
test
pusha
aaa
enter
dec
cwtl
pusha
pop
movsl
jmp
sbb
inc
fmuls
ret
jmp
cmpsl
jmp
mov
test
or
loopne
push
adc
adc
xor
repnz
stos
hlt
cld
rolb
inc
adc
cmc
cld
out
sbb
mov
mov
popa
cmp
fsub
push
cltd
in
xor
fcomps
adc
lds
mov
lock
es
pushf
fldt
cld
mov
dec
testl
inc
adc
and
pop
mov
and
push
mov
test
fsubrl
aam
inc
or
out
es
lret
inc
mov
sub
in
add
sub
sbb
cld
xor
adc
mov
divl
mov
inc
adc
test
mov
jbe
in
shlb
sbb
addr16
out
aaa
pop
and
call
mov
or
mov
fstpl
outsl
or
xor
adc
mov
add
pop
adc
scas
pusha
fnstsw
mov
je
and
or
or
cmp
mov
call
hlt
push
not
mov
mov
clc
iret
rorl
inc
adc
xchg
insl
and
call
stos
mov
add
pushf
andb
repnz
push
add
pop
fstl
mov
mov
test
xchg
pop
ss
sub
pop
mull
cmp
jae
dec
lcall
mov
in
jne
add
ss
adc
fisubrl
and
or
cwtl
sbb
outsb
sub
lahf
int
jecxz
stc
xor
loope
pusha
or
add
adc
aam
adcb
jp
arpl
popa
pusha
andl
dec
or
call
or
arpl
jmp
xor
push
test
mov
pusha
mov
sbb
push
adc
add
lret
pop
sub
ret
fdiv
rol
xor
add
push
mov
testb
insb
cs
mov
dec
into
adc
pop
aad
mulb
cmp
mov
pop
jae
es
arpl
push
or
loopne
xor
jns
hlt
fdiv
mov
dec
movsb
outsl
add
je
push
mov
sbb
jp
cmp
lahf
mov
xor
rcl
push
mov
xlat
or
bound
xchg
sub
xchg
inc
out
mov
js
loope
out
pop
fwait
adc
popf
mov
fsubp
push
push
shlb
lahf
ljmp
call
fimuls
mov
cmp
rclb
pop
fcomps
pop
pop
push
ds
add
mov
xor
push
push
sbb
adc
add
push
call
adcl
adc
je
push
push
sub
fwait
or
imul
push
lock
punpckhdq
adc
sub
add
inc
je
les
fsts
jbe
sbb
xchg
movsl
or
push
adc
jnp
popf
push
pop
fldt
hlt
icebp
jl
inc
sub
fldcw
xlat
inc
jl
add
xchg
push
pop
lds
repz
clc
push
mov
jb
jo
add
cmp
mov
jae
aas
pop
jae
push
push
push
clc
xchg
sub
mov
add
rcl
fcomp
clc
cmp
mov
call
pop
dec
push
sbb
dec
xchg
push
movsb
xor
js
cmpsl
inc
lea
loopne
pop
incb
dec
lea
pop
inc
insb
call
lea
sarl
les
mov
sbbb
enter
or
jecxz
push
xor
mov
pop
mov
pop
adcl
lock
mov
xchg
das
es
mov
idiv
push
jle
outsb
in
sbb
lret
and
in
rcl
mov
adc
inc
fildl
shrl
repz
xor
push
mov
sub
jnp
jnp
push
push
ss
push
ret
je
nop
jne
inc
popf
loopne
leave
daa
loopne
mov
js
cmpsb
jmp
xor
push
mov
and
inc
push
push
xchg
gs
cs
insb
push
daa
lret
adc
dec
shll
fs
mov
ret
sub
pop
xor
popf
jl
jmp
in
lahf
gs
jb
mov
jne
mov
push
movsl
cmpsb
pop
cmpsl
push
gs
jbe
jb
inc
stos
stos
push
lods
lods
pop
xchg
mov
gs
xchg
gs
jo
outsb
push
pop
mov
xchg
gs
ss
rcrb
roll
aam
mov
mov
popa
fs
xlat
mov
fcompl
dec
xchg
xchg
xchg
xchg
xchg
dec
mov
ss
inc
push
cwtl
js
lcall
fcmovu
fcompl
fst
jne
rcll
fnstsw
cmp
inc
loop
xlat
xor
jecxz
in
ds
insl
shll
mov
pmulhw
or
outsl
int
jmp
mov
mov
jnp
xor
arpl
mov
fadds
mov
adc
cmp
lds
jg
std
std
mov
pop
or
push
stos
sub
adc
dec
push
xchg
adc
fs
mov
ja
cmp
pop
mov
orb
test
pop
pop
int
cmpsl
pop
xchg
das
cmp
sahf
cmp
adc
faddl
xor
sti
hlt
imul
cltd
outsb
in
loop
dec
je
add
or
mov
sub
lock
dec
or
add
mov
mov
ja
push
mov
clc
or
inc
sbb
or
add
stos
sti
xor
pop
lahf
rorl
imull
call
mov
adc
adc
jmp
cmc
es
out
jle
push
push
aas
outsb
lsl
jle
adc
sub
jo
or
adc
add
inc
sub
mov
cmp
lret
jecxz
les
sbb
sbb
mov
mov
push
ss
push
push
je
cmp
jb
inc
iret
ljmp
add
and
gs
push
push
sub
mov
das
ja
xor
sub
cs
insb
jb
push
shrb
arpl
leave
inc
aad
cmpsl
jb
jbe
xchg
sub
sbb
jne
test
clc
xchg
rcrb
loopne
pop
adc
mov
or
push
shll
sbb
mov
cmp
sbb
shld
xor
xchg
or
pusha
cmpb
or
inc
popa
jmp
adc
mov
xchg
xor
sub
sub
loop
push
insb
call
call
xor
and
popa
movsb
bound
jne
insl
mov
jnp
push
aaa
sbb
jnp
jmp
cmp
pop
loope
loopne
add
sahf
jns
push
movsb
aad
mov
test
push
into
sub
nop
loopne
aas
push
imul
je
lcall
jo
jae
andl
imul
cmpsb
imul
xchg
fdivs
jecxz
andb
ss
add
add
push
jb
leave
bound
test
insb
xlat
jmp
push
sbb
std
ret
and
jae
popa
arpl
xchg
imul
lcall
sub
mov
dec
jge
in
aas
pop
or
decb
jnp
in
sbb
in
arpl
lds
dec
adc
andb
sub
test
mov
shlb
sbb
add
xor
sbb
cld
std
pushf
add
and
dec
cmp
mov
push
sbbb
add
xorb
enter
pop
in
jae
xchg
pop
insb
or
int3
sub
ret
dec
or
push
push
push
je
xor
jae
je
xor
shrl
imul
sbb
mov
ret
mov
call
cmp
pop
loopne
int3
in
or
push
cmpl
nop
mov
pop
shll
icebp
icebp
sbb
inc
and
repz
and
notb
sarl
stos
stos
imul
les
or
pop
jne
jmp
add
sbb
xchg
nop
inc
cmpsb
lods
and
pop
psrlw
inc
add
stos
inc
xchg
xchg
iret
xchg
add
sarb
pop
gs
inc
jge
mov
xchg
pop
mov
rclb
sahf
sub
jecxz
daa
or
or
loope
and
movsw
jae
xor
xchg
movsl
push
and
pop
rcrb
and
push
adc
dec
lcall
adc
loope
fadds
loopne
adc
sub
xchg
lods
or
test
lock
inc
mov
xchg
ret
shll
mov
sbb
fdivrl
mov
mov
adc
adc
and
leave
mov
out
aaa
cmp
or
lret
cmpb
fidivs
adc
es
repnz
and
inc
jl
cld
stos
pop
inc
je
clc
hlt
xchg
hlt
sbb
mov
jg
cltd
std
cwtl
shrl
jmp
shll
lahf
mov
mov
jb
gs
pop
cs
movsl
cmpsb
imul
imul
dec
xlat
insb
xchg
scas
push
mov
mov
bound
xor
mov
mov
sarl
pop
rol
shll
ret
shll
lret
sub
mov
dec
and
sub
imul
xor
fs
xorl
cmp
fwait
in
sub
add
fcomps
lds
xor
data16
jp
outsb
fsubl
and
and
dec
pop
adc
dec
mov
adc
dec
or
repnz
shr
sbb
jmp
sbb
xchg
xor
cwtl
xchg
aad
inc
dec
test
movsb
or
add
cmp
ret
cld
xor
sbb
sbb
mov
call
cld
jb
add
xor
xchg
cld
xchg
cld
jae
nop
push
imul
js
xchg
jmp
add
inc
scas
popf
shlb
jg
cmp
adc
les
les
jae
xchg
xchg
cmp
imul
addr16
jo
dec
roll
outsl
mov
xchg
xor
fiaddl
in
clc
int3
jne
cltd
xchg
sbbl
jno
lock
inc
in
mov
scas
sub
testb
ss
lcall
clc
popa
imul
popa
arpl
mov
outsl
popa
jb
rorl
gs
jb
in
mov
jmp
mov
nop
je
out
jns
out
sbb
scas
pop
dec
ficomps
bound
insb
dec
jb
lock
push
cmpsl
push
pop
jmp
pop
dec
mov
and
push
xor
imul
xor
push
shll
push
add
enter
dec
mov
ss
je
insl
call
adc
fs
add
cmp
loop
aad
jle
mov
or
and
repz
push
clc
mov
push
ljmp
and
fmull
movntq
out
mov
xchg
push
shlb
mov
adc
sarb
jl,pn
iret
out
pop
add
jl
mov
push
fcoms
outsb
mov
add
cmpsl
add
mov
add
or
or
into
push
ret
clc
cwtl
and
add
fdivl
les
ds
add
sub
shlb
addr16
movsb
sbb
sbb
lahf
loope
jecxz
sbb
sbb
in
out
add
sbb
movsb
jmp
inc
inc
push
mov
leave
add
mov
mov
pop
mov
gs
lea
insl
jmp
sbb
mov
jne
cmp
out
lock
sbb
mov
popf
addr16
je
enter
outsl
mov
cld
sbb
jb
mov
cld
cmpsb
cld
cmp
jae
push
cmpsl
cld
stos
in
pxor
mov
sbb
lcall
rcrb
push
push
xchg
mov
pop
or
pop
jmp
orb
sub
xor
cltd
or
sbb
and
push
jns
inc
or
lahf
pop
stc
popf
dec
jae
adc
adc
xchg
adc
push
jnp
mov
in
dec
push
xor
lods
adc
push
repnz
sbb
xchg
test
icebp
divl
xor
fsts
sub
clc
mov
mov
inc
cmp
sub
incl
jg
push
jmp
call
push
sub
cmp
pop
pop
pop
cmp
add
in
je
ja
call
clc
das
ljmp
fisttpl
test
in
cld
lods
adc
lea
push
push
jb
add
movsb
stc
aaa
cmpl
pop
jge
andl
add
add
cmp
jge
pop
ret
push
push
push
imul
iret
ds
cmp
xor
or
or
sub
push
daa
mov
push
push
subl
jno
inc
cs
inc
add
inc
pop
lock
lock
dec
cmp
jnp
xor
iret
call
in
test
test
outsb
dec
shrl
pop
test
push
les
gs
lds
mov
enter
negb
or
add
push
or
inc
in
add
in
andl
dec
push
roll
out
ret
ss
jmp
dec
in
add
jmp
ds
sub
insl
int3
or
stos
mov
mov
push
movsw
inc
test
ficoms
jo
mov
push
fcmovb
clc
or
ss
inc
filds
pop
or
lock
push
mov
sub
mov
push
mov
jg
js
dec
repz
or
insb
xchg
add
mov
pop
lock
cli
icebp
xor
repz
les
mov
push
test
inc
les
addb
pop
sbbb
clc
jl
imul
sbb
push
jg
mov
cmp
sub
in
jg
les
xor
and
push
cmpsb
sbb
nop
out
xor
test
xor
repz
push
or
pusha
xchg
xrelease
repnz
and
mov
and
pop
dec
mov
lret
sbb
adc
add
push
pushf
stos
mov
lret
das
daa
mov
sub
inc
jnp
push
out
cmp
mov
xchg
into
xchg
or
out
xlat
jmp
xor
adc
js
in
mov
jecxz
mov
in
push
mov
pop
inc
mov
push
orb
insb
cmpsb
fnstcw
and
loop
pop
xchg
mov
orb
call
lcall
cmp
or
fucomip
aaa
sbb
jae
mov
nop
pop
mov
stos
int3
mov
pusha
lea
cmp
mov
fdivrs
inc
and
push
or
clc
adc
aaa
push
ret
push
hlt
or
cmp
adc
dec
pop
xor
int3
pop
cwtl
xchg
cmp
lret
push
pop
outsb
gs
xor
and
xor
xchg
fldenv
xor
repz
pop
xchg
or
into
loop
imul
inc
add
int
mov
pop
insb
adc
mov
jle
add
popf
mov
pop
jmp
mov
inc
sbb
in
cs
aaa
mulb
xor
insl
adc
adc
inc
lods
test
dec
lds
mov
hlt
cmp
jbe
pop
cwtl
add
test
xorl
jo
rorl
xor
outsb
insl
dec
cmp
shll
pop
jp
cmp
mov
sbb
jmp
jl
push
mov
sbb
or
push
insb
jo
jo
cs
popf
sub
insb
cwtl
inc
gs
inc
inc
shll
fs
jo
mov
jo
jb
sub
subl
jo
mov
lds
mov
or
enter
jmp
xor
mov
mov
repnz
popa
dec
push
dec
inc
xchg
orl
xchg
xchg
add
in
add
push
xchg
rorb
ja
and
push
xchg
dec
sub
or
and
and
push
and
rol
mov
xchg
jmp
add
mov
or
sbb
mov
jmp
getsec
fs
push
cmpsl
fsubp
sub
mov
aam
jmp
cmp
cmpl
and
adc
call
push
sub
sub
fisubrs
mov
adc
adc
mov
and
int
ror
adc
and
sbb
push
call
mov
lahf
int
or
push
call
out
lods
add
adc
arpl
in
test
pop
cmpsb
and
pop
cs
test
xor
mov
lods
scas
jne
mov
pop
push
mov
jo
cmp
gs
jb
and
jae
insb
cmp
gs
es
cmp
fs
and
dec
mov
sub
dec
bound
bound
pop
stos
dec
fs
imul
cmp
js,pn
hlt
or
leave
mov
imul
add
xor
arpl
clc
and
lret
mov
lret
outsb
cmp
shll
add
and
xchg
xor
rol
inc
push
cmp
imul
and
adc
inc
add
mov
and
js
add
mov
ja
in
int3
adc
sbb
lcall
and
sbb
cmp
push
sbb
xor
test
repnz
adc
lock
mov
mov
inc
mov
mov
in
movsb
adc
cmpsl
push
pop
push
mov
pop
lods
lds
and
adcl
push
outsl
fstps
jmp
jno
push
push
and
pop
xor
cmp
and
inc
jne
pop
dec
andb
and
daa
adc
das
or
in
mov
and
cmp
jbe
ret
addb
subb
cltd
pushf
mov
inc
cltd
pop
insb
push
shrb
popf
cld
add
rorb
arpl
sub
sub
xchg
es
insb
add
pop
xbeginw
in
imul
jne
push
push
lret
ret
inc
add
and
or
push
out
or
imul
inc
out
out
dec
or
pop
out
fiaddl
ds
or
mov
jmp
rorb
push
add
mov
out
stos
lock
sbb
ficoml
pop
mov
jae
loope
dec
ds
dec
sahf
add
je
sahf
ljmp
fildll
adc
inc
inc
js
int3
rorl
das
sbb
loopne
adc
cmp
jl
fldt
filds
jg
mov
cmp
jl
aaa
jg
inc
inc
incl
push
push
sarl
pusha
adcb
pop
adc
mov
mov
loopne
das
bound
ja
out
shll
adcl
insb
sub
pop
sbb
bound
sbb
loop
pop
enter
loop
mov
jl
popf
or
add
dec
sub
cmp
call
xchg
movsb
push
mov
cmp
lea
sub
adc
add
push
fdivs
fdivl
or
push
and
adc
inc
or
or
xor
dec
xor
xor
cmp
pop
and
pop
sub
jae
cmp
jl
xchg
sbb
lret
js
outsb
pop
js
add
insb
pop
sbb
push
stc
and
test
add
jbe
add
leave
out
sbb
xor
xor
xor
shll
xchg
or
or
or
fcomi
lret
mov
inc
int
outsw
add
mov
outsb
je
pop
mov
test
div
hlt
jo
stc
push
mov
insb
lret
xorb
outsl
mov
es
loopne
add
testb
leave
add
inc
cs
push
stos
add
es
roll
or
mov
fst
mov
xor
jl
jecxz
cmp
cmp
push
adc
push
test
sub
cmp
call
cs
inc
cwtl
jge
aam
push
shll
call
in
test
dec
push
adc
fucom
mov
add
push
jb
lcall
add
pop
pop
cwtl
lcall
mov
mov
add
add
popl
add
xor
andl
rolb
adc
js
pop
sub
rolb
mov
mov
adc
cmp
xor
fbstp
test
jg
xchg
outsb
add
mov
push
testb
push
xchg
sbb
int3
rcl
and
sbb
cmp
js
lds
adc
mov
mov
or
mov
cs
and
or
adc
loopne
xchg
pop
jb
adc
add
sub
mov
fcoml
test
cmp
xchg
jae
and
xor
dec
adc
add
cmpxchg
loop
cld
or
ss
aad
test
jmp
push
adc
je
ljmp
aad
sbb
xlat
gs
mov
mov
jb
jb
lcall
ss
in
push
xchg
nop
loopne
pop
adc
adc
movsl
add
inc
adc
sbb
inc
movsb
mov
cmp
in
fstpt
mov
lock
movsb
out
xchg
insb
adc
cmp
dec
mov
and
loope
rorl
rcrl
test
adc
out
pop
pop
add
mov
fucomip
movsl
test
test
sub
rcrb
out
sbb
test
and
xlat
nop
je
inc
or
push
inc
mov
jb
addb
aas
dec
sbb
inc
jl
xor
daa
jl
or
mov
mov
repz
adc
test
xchg
xchg
pushf
lods
xor
cmp
pop
xchg
int
inc
cmp
inc
xor
inc
dec
mov
and
rorb
push
test
sub
mov
mov
xor
xor
fcomp
enter
xor
jl
lret
add
lret
lret
fcoms
xor
inc
xchg
int
enter
jb
cmp
popf
add
dec
scas
sahf
dec
xor
or
adc
xor
ficoms
mov
aas
xor
or
inc
jb
arpl
adc
add
add
jbe
xchg
sbb
int
inc
and
mov
cmpsl
jae
mov
xchg
and
outsb
arpl
mov
jo
sub
jne
add
mov
test
and
jg
jb
gs
jle
lret
xchg
add
fs
pop
fimull
or
jns
add
or
test
mov
and
insl
mov
stos
aad
push
push
jo
inc
push
jae
mov
xorl
sbb
cmp
push
inc
sbb
push
push
outsl
imul
mov
mov
push
mov
mov
inc
imul
dec
sbb
outsl
jo
mov
outsb
inc
cmp
and
imul
ss
fildl
push
imul
cmp
sti
xor
add
cmp
pushf
imul
xchg
test
sbb
gs
adc
push
pop
pop
dec
mov
mov
mov
test
push
add
xchg
or
addr16
fs
inc
pop
or
jbe
dec
int
jl
mov
mov
xorl
push
mov
popa
dec
mov
or
add
cmp
fiaddl
sbb
add
je
and
xchg
pop
inc
int3
cmp
sbbb
insl
shrl
idivb
mov
fwait
mov
add
sbb
fadds
inc
inc
test
ret
and
inc
jnp
or
test
inc
mov
add
push
xor
inc
aad
rcr
mov
pop
jnp
js
mov
imul
xchg
data16
xchg
popa
jmp
insb
in
fists
or
add
aad
or
lods
mov
ffreep
adc
jns
imul
mov
outsb
jne
add
mov
and
xor
mov
pop
push
add
loopew
movzbl
jmp
sbb
out
outsl
push
and
or
mov
and
jbe
xchg
dec
push
push
int
add
add
mov
add
fs
daa
mov
and
ja
divl
pop
mov
pop
add
push
push
mov
adc
adc
mov
or
xor
push
sbb
inc
mov
cwtl
adc
mov
int3
dec
inc
dec
push
dec
xchg
pop
pop
arpl
fldcw
addr16
lret
cmp
xchg
arpl
jne
mov
xor
jmp
test
faddl
sub
test
sub
adc
pop
mov
dec
push
dec
je
xchg
cmp
cmp
xchg
scas
cmp
aam
fdivrs
hlt
cmp
or
adc
sbb
ss
push
js
jg
and
inc
aas
jns
into
aas
lcall
xor
bound
outsb
xor
xor
push
pushl
stos
xor
xor
xor
xor
insl
xor
xchg
mov
mov
call
cmp
sbb
call
xor
xor
xor
xor
xor
lcall
imul
xor
xor
xor
xor
xor
xor
shll
ret
aaa
stos
fdivl
repz
sbb
xor
inc
aaa
push
aaa
gs
jle
lcall
aaa
push
cmp
cmp
inc
cmp
cmpsb
cmp
cmp
cmp
lods
icebp
fidivrl
in
add
or
cmp
cmpsl
mov
sti
out
mov
mov
xor
stos
add
or
inc
push
mov
shlb
add
adc
sbb
cmp
cmp
cmp
cmp
cmp
cmp
incl
or
cmp
cmp
cmp
xchg
cmp
cmp
cmp
fnstcw
out
pop
cmp
decl
cmp
and
fs
xchg
mov
dec
ds
aas
pop
aas
jnp
repz
std
das
pusha
imul
sbb
xor
xor
xor
xor
xor
xor
aas
cld
ljmp
xor
dec
xor
pop
xor
insl
xor
xor
xor
xchg
cli
xor
xor
xor
push
xor
movsb
xor
push
loopne
pushl
dec
mov
xor
xor
xor
xor
sbb
and
sub
stos
cli
lcall
dec
xor
pop
xor
insl
xor
xorb
xor
xchg
push
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
mov
sub
push
xor
jmp
repnz
loope
mov
ss
aaa
sbb
dec
imul
stc
aaa
jmp
cmp
cmp
cmp
cmp
cmp
cmp
push
cmp
jno
cmpl
cmp
cmp
cmp
push
aad
adc
cmp
push
cmp
cmp
cmp
cmp
cmpsl
jns
test
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
bound
sub
ret
ds
jge,pt
test
out
je
jg
xchg
sarl
jo
aaa
cld
pushl
dec
xor
xor
xor
xor
lock
push
pushl
fdivl
jecxz
push
xor
js
jge
xchg
fists
scas
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
fildll
pop
xor
fwait
xchg
or
push
ss
sbb
cmp
inc
aaa
inc
aaa
dec
aaa
pop
aaa
popa
aaa
lods
aaa
mov
mov
aaa
aam
fidivl
lods
stos
pop
loop
call
cmp
inc
cmp
aaa
fdivrp
ljmp
jo
jp
test
mov
out
cmp
add
fnstsw
pop
clc
out
jmp
cmp
cmp
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
dec
cmp
into
cmp
sbb
es
cmp
inc
ds
ds
bound
jo
jne
cmpb
ds
ds
lods
ds
mov
pushl
fidivrl
call
ds
aas
or
push
aas
and
push
cmp
inc
aas
adc
jmp
imul
aas
test
mov
pushf
aas
mov
aas
loop
fcomip
mov
xor
xor
fwait
dec
xor
incl
add
xor
push
xor
xor
xor
jne
cld
inc
xor
push
xor
xor
xor
xor
cmp
xor
mov
les
shlb
xlat
xor
xor
sbb
xor
xor
inc
ss
decl
push
ss
ss
ss
jge
xchg
ss
rcl
and
xchg
sub
cmpsl
aaa
fidivs
add
or
jo
cmp
mov
aaa
daa
xchg
cmp
cmp
cmp
jg
sahf
cmp
cmp
cmp
cmp
incl
cmp
add
sub
cmp
cmp
cmp
jmp
call
cmp
cmp
outsl
cmp
int
jge
pushl
std
dec
ds
ds
pop
sarl
in
adc
sub
inc
aas
dec
aas
gs
ret
aas
aam
in
lea
aas
sti
nop
mov
xor
mov
icebp
xor
xor
test
jns
test
mov
fnstenv
loopne
cmc
xor
xor
xor
xor
xor
cmp
jo
idiv
decl
xor
xor
xor
xor
lret
xor
xor
pop
ljmp
xor
aad
push
xor
xor
xor
xor
xor
decl
xor
dec
out
xor
xor
xor
push
xor
fs
push
jo
jbe
jl
xorb
inc
sbb
add
out
psubq
push
sbb
adc
mov
mov
mov
mov
je
dec
pop
shrb
sub
mov
js
add
incl
xchg
xchg
add
adc
push
or
sub
pop
cmp
loopne
or
lock
mov
xorb
pop
adc
and
cmp
push
jae
pop
ret
xchg
add
in
inc
and
incl
adc
cmp
add
add
pop
push
jmp
xor
mov
cs
xor
xor
xor
cmpsb
cmp
sub
movb
lcall
subb
shll
dec
rcrl
add
adc
outsl
aam
aaa
fsubs
push
push
addr16
shlb
sub
inc
cld
fwait
push
jg
dec
dec
inc
and
pop
stos
add
pop
mov
jge
pop
aam
dec
cmpsl
inc
outsl
add
jg
pop
or
jns
outsl
das
and
popa
jns
jne
xor
mov
scas
in
outsl
mov
push
and
push
add
mov
push
dec
dec
addl
add
ljmp
gs
sub
push
push
inc
and
cld
fs
outsl
push
push
pop
mov
adc
jge
push
rep
pop
mov
cmpb
repz
hlt
adc
push
les
movl
repz
insl
push
inc
mov
or
or
push
adc
or
mov
adc
mov
add
aam
outsl
movsb
mov
xlat
cmp
lea
test
lods
std
jbe
js
xor
adc
xchg
jne
cwtl
in
popf
in
pop
in
cmp
pop
pop
fsubs
inc
and
jne
sbb
dec
push
or
sub
push
and
add
adc
sub
and
neg
jmp
cmpl
jbe
add
and
xchg
xor
sub
faddl
jnp
xor
mov
mov
popl
mov
and
mov
jno
shll
sbb
sbb
and
es
ds
out
jge
jnp
lret
pop
and
or
pop
in
decl
les
inc
sub
add
add
repnz
cmc
test
hlt
imul
insl
insl
cmp
insb
insb
mov
sbb
and
xchg
sub
insb
insb
dec
dec
or
inc
cmpl
nop
dec
push
sbb
mov
loopne
dec
push
sub
mov
inc
je
dec
dec
rcrl
inc
insb
cwtl
gs
popa
mov
shlb
add
shll
loopne
andb
push
loopne
inc
xor
cmp
js
xchg
sub
shlb
dec
xor
push
sti
adc
insl
or
inc
dec
xlat
or
out
push
sarb
lea
push
addr16
ret
test
out
pop
push
cmp
xor
cmpl
add
mov
sbb
dec
and
push
xor
jne
adc
jmp
call
jo
sbb
sarl
xchg
pusha
cli
push
xor
push
pop
sbb
and
xchg
xor
push
push
adc
negl
adc
pop
popf
mov
inc
inc
push
inc
add
test
cmp
or
add
jnp
cli
dec
xor
jecxz
scas
cld
lahf
in
sub
es
cmp
push
inc
jb
or
ss
mov
mov
cmp
inc
and
pop
dec
sbb
add
movups
and
push
pop
or
leave
sbbl
test
inc
mov
push
and
push
adc
sub
push
jb
mov
xchg
xchg
pop
leave
out
add
lock
pusha
add
and
and
cmp
add
push
push
pop
add
js
in
and
movsb
or
mov
fs
mov
fs
mov
mov
push
mov
addr16
rorb
or
iret
scas
std
scas
adc
push
sbb
jb
mov
push
mov
mov
mov
mov
mov
add
pop
add
mov
lods
fistpl
and
movsl
pop
lcall
push
rcr
cld
jo
mov
frstor
cld
push
mov
lret
js
insb
pop
xchg
gs
outsl
jb
jb
in
mov
js
subb
dec
cmc
in
clc
cmp
inc
icebp
enter
mov
inc
mov
lret
adc
xlat
and
add
mov
fmull
push
or
mov
lcall
lock
lea
addr16
xchg
and
outsb
gs
xchg
gs
cs
mov
cltd
js
outsb
insb
sub
mov
popa
jne
arpl
sub
mov
jb
gs
xchg
cmpsb
andb
dec
xchg
movsl
mov
imul
std
gs
or
js
insb
inc
and
outsl
jb
mov
mov
push
add
pushf
dec
inc
cs
in
mov
adc
jl
pusha
xchg
inc
sub
mov
call
fs
push
sub
pop
dec
or
clc
insb
fildl
sub
sbb
je
xor
popa
clc
test
cmc
iret
xor
sub
sbb
cli
adc
or
sarw
pop
repz
outsl
out
or
sbb
or
or
aas
mov
addb
or
add
test
insb
fcomp
enter
mov
out
mov
and
cltd
ficompl
call
and
mov
push
sub
mov
inc
push
pop
push
add
or
adc
js
stos
pop
xor
push
and
sbbb
test
jp
mov
loop
xchg
pop
data16
jo
xor
insl
sbb
sete
in
xchg
mov
clc
xor
pop
mov
arpl
pushf
sub
inc
add
jae
or
mov
dec
or
jo
add
push
test
or
rorb
stc
add
or
insb
add
nop
add
xchg
mov
pop
and
xchg
mov
pop
push
aad
xchg
test
add
add
xor
js
fs
pusha
and
and
adcb
movsb
das
sti
int
ja
add
add
adc
ss
sub
adc
cmpsb
mov
mov
bound
fdivrl
leave
jnp
test
inc
aaa
pusha
fwait
pop
sbb
inc
movsb
xor
xchg
jmp
and
dec
adc
inc
lods
sbb
jge
adc
and
cmp
inc
jno
inc
push
rorb
pop
jae
or
or
cs
clc
cmp
pop
add
in
push
gs
jbe
push
aas
orb
stc
in
push
negb
mov
push
outsb
jb
and
inc
imul
pop
push
rolb
mov
and
jp
jnp
psrad
inc
out
fisubl
inc
adc
fnstenv
xor
mov
imul
jg
or
push
add
insl
dec
or
jae
lods
dec
adc
mov
xorb
lret
daa
nop
lods
pusha
or
mov
dec
pusha
push
adc
sbb
lcall
orl
xor
jns
imul
leave
cmp
xorl
es
inc
jnp
cmp
leave
fdiv
xor
or
cmpsb
sub
cmp
enter
fwait
cmpsb
imul
shll
xor
jge
add
leave
add
xlat
add
repnz
mov
adc
add
push
or
dec
push
xor
enter
data16
ficoml
fadds
pop
or
movb
push
jne
rcrb
ja
jno
popa
pop
mov
inc
jbe
inc
jl
push
enter
hlt
ss
mov
adc
mov
mov
or
inc
mov
pop
in
xchg
sbbb
mov
push
dec
or
jle
xchg
out
jnp
imul
inc
outsl
sarb
cwtl
sub
xchg
lods
ja
pop
jns
pop
adc
bound
out
daa
or
xor
pop
sahf
push
rcrl
xchg
adc
fcmovnbe
xor
add
imul
dec
outsl
sbb
flds
add
add
sbb
add
in
pop
pop
add
xchg
and
dec
les
add
sub
loope
shrl
add
add
repz
jne
cmovns
add
incb
jae
stos
jmp
movsb
jmp
add
sub
add
push
rolb
sub
jecxz
or
mov
cmp
xor
int
fnstsw
jecxz
inc
and
xor
add
mov
and
popa
int3
cmp
mov
jae
add
addr16
fnsave
or
jo
imul
ss
push
mov
push
adc
push
lds
jb
add
imul
add
sbbb
imul
insb
popf
xchg
pop
dec
or
sbb
jo
popf
addr16
fstpl
rorb
sub
pop
je
xor
add
dec
mov
push
sub
or
orl
daa
dec
dec
imul
push
daa
lea
mov
or
pcmpeqw
jae
test
ret
popf
inc
push
imul
and
aam
jmp
xchg
mov
or
add
add
shlb
call
xor
xor
xor
je
scas
pop
or
or
divb
daa
adc
test
cmp
xor
xor
fisttps
fisttps
ss
insb
jmp
xor
and
pop
ss
mov
lea
mov
cmp
loop
ljmp
je
mov
scas
aaa
mov
aaa
or
pop
cmp
lcall
lcall
cmp
les
into
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
insl
cmp
cmp
cmp
cmp
lds
and
mov
xchg
xor
add
or
cmp
pop
add
lcall
rcll
push
lods
call
adc
aam
inc
cmpsb
movsl
mov
stos
add
inc
aaa
add
add
cmp
add
insb
pop
mov
or
jo
extrq
in
or
and
add
add
ret
add
mov
or
xor
push
or
push
mov
sarb
add
outsl
jbe
mov
fiaddl
flds
xlat
jb
or
add
dec
or
rol
add
xchg
fidivs
and
push
enter
mov
mov
sub
insl
addb
cmp
sbb
mov
add
cmp
data16
jo
push
pushf
add
add
fmull
adc
adc
dec
rorl
inc
cmpsl
mov
fildl
rcrl
mov
adc
sgdtl
push
mov
xor
add
add
in
inc
cwtl
and
sarb
rcrb
push
push
adc
sub
mov
mov
loopne
out
add
mov
inc
add
xchg
repnz
add
add
add
add
add
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
