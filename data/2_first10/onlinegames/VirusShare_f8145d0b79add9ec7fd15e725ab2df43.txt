xor
add
inc
and
and
add
in
sub
add
movsl
in
incl
push
push
push
pop
xor
lea
mov
gs
stos
stos
stos
jge
stos
fiadds
jns
call
and
xor
xor
or
outsb
push
call
clc
add
or
fildl
jle
orb
xor
push
lea
push
push
jge
test
lea
lcall
ja
push
movzbl
push
je
mov
in
push
call
push
jmp
mov
inc
jno
mov
mov
mov
add
frstor
adc
cmp
pop
enter
pop
incl
stos
ss
pop
push
pop
pop
pop
cli
add
sub
push
push
test
push
mov
ret
mov
push
clc
addr16
xchg
imul
jne
add
jo
out
cs
insb
repnz
mov
data16
mov
cmp
je
gs
icebp
pop
adc
rolb
rol
sbb
ret
lds
loope
cmp
je
dec
enter
lret
mov
lret
gs
inc
int
into
xchg
loope
arpl
outsl
shlb
shlb
aaa
into
or
jae
dec
cmp
popf
add
pop
cmp
pop
mov
jns
sbb
cmpsb
cmpsl
out
sahf
out
test
out
sahf
lods
scas
scas
mov
jns
out
mov
mov
mov
xchg
icebp
sbb
jp
mov
mov
js
jne
push
pop
jmp
lea
push
jecxz
andl
loope
or
push
pop
mov
push
mov
call
cmp
lea
pushl
rorb
or
jo
pop
je
add
add
inc
add
cmp
jmp
mov
imul
add
xchg
rolb
aam
add
inc
or
jne
pop
pop
and
in
push
loopne
xchg
js
movl
push
clc
push
push
movl
pusha
jns
adc
fs
jo
stc
dec
cli
add
jo
sti
push
cld
dec
std
inc
pop
mov
loop
fwait
push
adc
clc
push
cmpsb
or
mov
push
xor
imul
push
nop
sbb
shrl
push
add
push
cltd
add
and
int3
push
out
xor
push
int3
cmp
std
or
loop
loope,pt
in
in
addr16
fs
adc
insb
loope
cmp
jne
jae
cs
fs
insb
shll
div
lahf
sahf
addr16
fstps
ret
loope
fwait
pushf
inc
popf
jb
gs
popa
jo
sbb
mov
inc
mov
fwait
ret
insl
cmpsb
popa
inc
repz
repz
insl
dec
inc
int
cmp
dec
push
dec
inc
push
loope
xor
cmp
arpl
repz
mov
mov
je
lds
cmp
xchg
mov
loope
rcll
inc
les
mov
mov
into
mov
add
jecxz
sahf
sbb
loopne
cmp
xchg
jne
jae
push
in
in
ret
loope
popa
out
out
call
ret
sbb
je
jns
sbb
enter
js
mov
lret
int3
inc
int
into
iret
jo
xchg
loope
outsl
shll
rorl
clc
dec
sbb
insl
aad
xlat
jecxz
jne
and
cld
add
addl
lods
mov
pop
cli
adc
sbb
lret
mov
arpl
lock
imul
sub
sahf
enter
je
inc
out
jns
addr16
jp
je
popf
das
jl
jle
out
inc
loopne
inc
addb
mov
cmp
dec
mov
mov
cmp
cmp
add
mov
in
test
mov
adcl
fs
xchg
fsts
int3
jno
jo
ffree
adc
cmp
sbb
push
and
or
nop
add
in
jno
pushl
jbe
mov
inc
push
mov
testb
xor
xlat
je
and
mov
xchg
jecxz
test
pop
lods
mov
loop
inc
arpl
popa
mov
insb
mov
sbb
cmp
xchg
dec
fs
hlt
insl
jo
inc
jmp
jbe
xchg
loope
arpl
jb
je
cs
insb
aad
cmp
push
data16
cmp
idiv
mov
push
or
mov
clc
pop
push
push
or
inc
mov
sbb
ljmp
fwait
gs
push
push
push
or
in
xchg
push
out
test
icebp
ljmp
fs
fdivrl
add
xchg
jmp
je
add
mov
insb
cs
push
mov
test
inc
or
mov
or
cmp
fcomp
dec
cwtl
cmp
xchg
or
addr16
mov
add
clc
xor
adc
xchg
lea
cwtl
cmp
movsb
and
ret
loope
sbb
lds
dec
jge
nop
mov
xor
xor
mov
ss
pop
or
mov
bound
repz
imul
cmp
bound
gs
iret
rep
mov
je
jbe
int3
lock
hlt
push
xor
jo
hlt
push
cmc
testb
and
in
movsb
sbbb
add
and
jecxz
jl
add
push
adc
repz
lods
adc
mov
push
and
xor
fwait
popa
jmp
push
cmpl
imul
data16
add
add
xchg
sbb
loopne
mov
dec
push
inc
push
iret
ret
or
enter
push
cmp
inc
lahf
add
jl
xchg
sub
sbb
int
add
cmp
cltd
insb
xchg
jo
loope
int3
sahf
fsubl
push
xchg
fidivs
dec
data16
shr
lret
sbb
cmp
jmp
iret
xchg
sbb
mov
repnz
ret
jns
out
mov
mov
mov
sbb
xchg
mov
mov
mov
sahf
out
mov
loopne
push
xchg
loope
fs
jecxz
in
inc
loope
ss
shlb
jns
xlat
fs
pop
cld
cs
hlt
insl
jecxz
sbb
cmc
popa
divb
call
jg
ljmp
in
push
sbb
movl
jmp
adc
mov
jbe
into
je
add
pop
int3
rcrb
push
jo
push
cmpb
add
cmp
test
jo
xchg
dec
add
loope
push
and
adcl
mov
out
inc
jmp
push
fmuls
add
es
adc
inc
es
xchg
lock
movsbl
xor
mov
imul
add
rolb
pop
jl
pop
jb
cwtl
shlb
leave
imul
repz
pusha
lods
call
adc
fldl
inc
jne
daa
adc
addb
mov
pop
je
test
adc
lds
dec
sbb
and
or
in
dec
lahf
push
add
push
sbb
je
sbb
push
jge
or
out
notl
cli
jmp
stc
jb
mov
cmp
add
pop
mov
int
adc
mov
xor
out
xor
nop
mov
repnz
dec
hlt
test
cmp
pop
jno
iret
pop
xchg
mov
bound
mov
add
add
add
push
sti
daa
pop
nop
xchg
jns
jae
xchg
add
jle
mov
push
stos
add
pop
sbb
outsb
add
stos
inc
jne
dec
add
add
push
jecxz
adc
mov
inc
adc
mov
loope
fdivp
xor
add
fcom
lds
add
mov
pusha
mov
mov
jmp
jge
lods
mov
daa
inc
call
push
jne
setp
test
inc
call
jne
inc
clc
mov
je
lock
andl
rclb
adc
daa
sbbl
cmp
push
push
push
sub
imul
test
mov
pop
orb
push
and
xor
call
pop
xchg
mov
add
adc
push
xor
jns
es
jns
es
out
es
cmp
jmp
and
sahf
out
xor
ret
repz
jecxz
cmp
mov
repz
xor
pop
sub
iret
cmp
repz
xor
loope
sahf
out
xlat
fdivrs
fnstcw
fisubl
lahf
out
pushf
xor
cmp
sahf
es
cmp
and
add
xchg
in
cmp
lock
and
cmpsb
shlb
into
lea
gs
mov
pushf
addl
pop
repnz
hlt
cmp
mull
loope
cmp
fs
xor
ss
cmp
dec
ret
std
jae
xor
je
mov
std
ret
pop
pop
in
sbb
les
mov
mov
call
push
jne
pop
leave
sti
out
imul
cld
outsl
in
rorb
fbstp
hlt
nop
jl
cmp
icebp
push
sbbl
push
jns
xor
xor
push
pusha
loop
test
jge
push
jle
dec
cmpl
test
fimuls
out
rorl
add
jne
mov
negb
inc
dec
xchg
ja
jo
dec
dec
inc
fists
pushf
inc
out
jno
inc
cltd
lds
push
lahf
test
test
push
test
mov
xor
pop
div
test
cmp
popf
test
in
jg
cld
or
ljmp
sub
sbb
and
add
cs
outsb
push
int3
arpl
dec
sti
pop
dec
sti
inc
test
pop
mov
xchg
stc
aam
inc
push
mov
repz
dec
aas
in
fld
cmc
loopne
fcmovbe
cmp
jne
lods
std
pop
jp
dec
sbbl
and
cmpsb
adc
push
push
inc
lret
or
jge
pop
js
or
pusha
cmp
add
loope
sarl
mov
mov
push
pop
lcall
popf
loopne
mov
in
sbb
jae
push
bound
or
bnd
insb
subl
cmc
push
shl
cmp
popa
insl
rep
xchg
and
pop
outsl
push
repnz
outsb
gs
andb
push
dec
mov
push
or
in
mov
mov
xchg
insl
outsl
out
adc
jp
adc
lock
test
adc
jo
push
fsubrs
ds
jecxz
enter
stos
dec
lock
mov
js
clc
adc
mov
lcall
loopne
scas
xchg
pop
inc
mov
mov
arpl
sub
cmp
gs
insb
outsl
out
sahf
out
imul
cmp
and
ret
fidivl
xorb
add
sub
xchg
cmp
sbb
pushl
in
mov
pushf
add
mov
sbb
mov
je
inc
push
xchg
loope
jne
jb
jb
gs
cmp
outsb
shll
jb
outsl
decb
ret
lds
gs
jns
dec
lret
ss
xor
mov
dec
cmc
jo
push
stc
jb
push
xchg
cli
outsl
sti
arpl
gs
cmp
repz
daa
jecxz
push
gs
mov
or
popa
gs
cmpsl
mov
jmp
in
sub
add
movsl
pop
aas
sub
lret
jg
mov
xor
gs
jne
jecxz
outsb
push
aam
dec
cmp
xchg
je
push
xlat
fsubrs
push
mov
int3
arpl
gs
popf
loopne
sbb
mov
and
sbb
sub
add
push
nop
je
mov
pushf
push
aaa
orl
push
push
or
nop
cmp
mov
mov
jne
faddp
push
xor
adc
sub
cld
andb
inc
jecxz
icebp
rolb
or
pop
lock
inc
sbb
mov
repz
push
jne
pop
pushf
and
pop
mov
data16
add
add
add
pop
ret
pusha
cmpl
je
cmp
je
movl
inc
mov
fwait
mov
sub
push
ljmp
xor
cmp
xor
in
adcl
xor
add
test
ror
xchg
xchg
out
push
xchg
xchg
add
out
sahf
push
push
xor
cmp
test
aaa
clc
rclb
and
jbe
mov
in
js
sbb
out
cld
sbb
lock
rclb
mov
insb
mov
pop
pop
mov
and
icebp
push
lea
or
and
jns
jp
movntq
out
xor
rolb
packsswb
arpl
jle
inc
repz
outsb
cmpl
je
xchg
xchg
arpl
inc
sbb
mov
push
and
and
dec
in
xchg
mov
pop
xchg
dec
into
lds
pop
pusha
cltd
sub
pushl
icebp
enter
sbb
mov
mov
pop
dec
je
faddl
call
mov
enterw
ficoml
loope
adc
jo
xchg
arpl
outsl
cmp
xchg
fs
jb
push
xchg
mov
jo
outsl
lahf
data16
cmp
mov
cmp
je
movsl
cmpsb
and
or
inc
out
out
add
inc
jne
rcll
jb
jo
sbb
mov
mov
mov
mov
mov
mov
pmuludq
dec
mov
dec
jo
out
sahf
outsb
push
jb
test
out
arpl
out
dec
and
and
aam
fbld
aad
popa
push
movsl
fwait
enter
loope
cmp
push
fidivl
outsl
fsubl
xor
fnstsw
aam
loop
test
orl
mov
mov
mov
je
inc
sarb
cmp
ret
out
sahf
out
mov
leave
out
jns
lret
int
fs
setne
or
dec
cld
inc
inc
mov
pop
pop
pop
enter
pusha
pushf
cmp
jne
add
jno
jo
add
pusha
mov
push
push
mov
or
jnp
fdivs
and
je
lea
andl
fimull
lods
mov
test
out
clc
aas
popa
arpl
out
je
outsl
outsb
cmp
mov
negl
les
fwait
jno
sbb
jne
cmp
and
leave
fadds
xor
mov
imul
or
arpl
test
nop
das
mov
pop
and
sub
xor
rolb
lods
sahf
addr16
inc
clc
dec
xchg
leave
adc
and
inc
cmpl
mov
out
loopne
sub
push
aad
je
pop
dec
out
xchg
jnp
scas
adc
inc
jo
xlat
pop
pop
shrl
add
adc
mov
icebp
cmp
pusha
mov
push
push
pop
add
ja
mov
cmp
jl
push
and
orb
mov
xor
xchg
or
cmp
inc
inc
jl
loope
mov
ret
fstp
xor
arpl
pop
jo
or
mov
or
stos
pop
and
stc
adc
mov
mov
sti
mov
mov
jmp
cli
push
xor
cli
movsl
mulb
mov
pusha
in
test
add
loop
test
push
out
stos
push
lods
jecxz
into
arpl
lock
into
push
mov
mov
jns
mov
mov
cltd
gs
pop
mov
push
sub
xchg
jae
mov
arpl
sub
imul
les
mov
inc
subb
jg
sarb
jmp
inc
lcall
movsl
stc
push
xchg
jae
sub
out
sbb
push
adc
test
dec
dec
mov
mov
pop
or
ds
pushf
arpl
stc
or
lret
mov
cmp
xor
push
push
lea
in
cwtl
negl
cltd
mull
jmp
stc
jne
andl
adc
stos
pop
cwtl
inc
pop
sub
add
xor
pop
xchg
jle
test
test
lods
arpl
testb
mov
or
sbb
imulb
pop
or
cwtl
pop
ficoml
aam
or
rorl
pop
cltd
push
sbb
sub
cmp
je
lea
sub
push
xchg
rorb
ja
xchg
mov
data16
das
andl
jmp
mov
hlt
push
add
add
rorl
pop
push
mov
ficomps
out
lods
sub
mov
and
push
mov
pusha
push
incb
push
add
test
incb
jnp
inc
push
jns
mov
push
pushf
dec
cmp
addr16
jns
push
ja,pt
cmp
jns
movl
jns
jb
gs
jbe
xor
inc
inc
cmp
push
dec
mov
rep
dec
fs
xchg
shlb
sbb
mov
jb
add
cld
jb
rorl
jecxz
xor
dec
sahf
out
sahf
push
push
popa
imul
inc
jo
jno
sbb
in
in
out
out
cmp
jne
jmp
xor
mov
mov
repz
movsb
xor
xor
iret
test
stos
cmp
xchg
ret
and
dec
dec
lahf
sbb
and
ss
mov
jb
mov
sub
vmovaps
push
out
aaa
sub
jno
sub
jno
das
xor
jns
sub
xor
xor
xor
xchg
loope
in
inc
in
inc
out
inc
out
push
pop
ret
lock
repnz
add
push
pop
xchg
popf
push
arpl
or
jecxz
cmpsb
or
lds
sub
or
jno
movups
aam
jo
xor
adc
daa
ds
popa
pushf
cs
sbb
data16
sbb
sbb
xchg
adcb
subb
jns
andl
xchg
xchg
loope
xor
int3
aas
lret
mov
adc
pushf
leave
hlt
mov
mov
jo
sbb
mov
outsl
xchg
arpl
xchg
loope
gs
jae
jae
xor
sbb
xor
mov
jnp
pushf
popf
xchg
pop
popf
mov
iret
mov
add
test
mull
cmp
dec
popa
jmp
gs
sbb
repz
js
gs
into
mov
das
data16
jns
imul
icebp
dec
insl
outsb
cwtl
sbb
mov
push
fnstenv
cmp
filds
pop
gs
or
or
pop
mov
dec
outsb
out
jns
out
jb
arpl
jae
out
and
in
mov
sbb
xor
int3
outsb
lods
jae,pn
or
je
jne
cmp
ficoms
and
cmp
pop
xchg
jp
jns
xor
inc
js
push
int3
cmp
clc
mov
mov
dec
aad
push
scas
clc
clc
pop
push
push
fnstcw
dec
dec
push
push
fcomps
js
push
mov
mov
push
out
mov
adc
mov
mov
pop
sbb
lock
mov
cmp
imul
pushf
xor
sarb
loope
sub
mov
and
bound
ljmp
push
pop
sub
ss
hlt
push
pusha
xor
xlat
pop
clc
jne
pop
sub
ss
xchg
jmp
mov
jae
sub
pop
and
cli
cmp
in
jne
push
cmp
sbb
test
xchg
or
cwtl
jmp
or
or
adc
jle
lea
jmp
sbb
push
ss
sar
push
push
inc
iret
lock
movsb
gs
cmp
in
mov
mov
mov
push
mov
pop
inc
cmp
dec
mov
in
xor
aam
shrb
cmc
inc
scas
inc
or
adc
fsubr
inc
push
fnstcw
adc
icebp
xchg
sub
inc
mov
pop
daa
jmp
push
testb
call
les
xor
ja
dec
das
es
cmpb
inc
pushl
and
pop
scas
xchg
mov
loope
test
add
popf
xchg
test
mov
rcrb
imul
push
mov
inc
xor
add
push
xchg
mov
clc
pop
hlt
test
add
xor
loope
mov
pop
push
cmpl
sub
cmpsb
roll
jne
push
insb
cmp
add
mov
dec
dec
imul
js
scas
out
shl
in
mov
aaa
inc
dec
mov
cmp
add
cmp
je
cmp
jb
dec
dec
cmpw
jne
add
add
jne
add
and
stos
aam
sub
mov
mov
push
adc
scas
lret
cmp
pop
jb
or
inc
xor
add
and
cmp
call
daa
je
es
push
nop
inc
stos
je
adc
out
lods
xchg
shlb
xor
inc
fs
je
fsin
movsl
sub
and
dec
push
dec
repnz
jae
mov
jb
cmc
xor
repz
idiv
stc
cli
out
test
jbe
je
outsl
push
iret
stos
or
jb
mov
fsub
bnd
and
fs
iret
arpl
outsb
fs
ret
outsl
ja
xchg
fimull
sar
mov
js
push
rorl
jo
sar
mov
int3
cs
push
mov
cmp
into
cmp
mov
mov
notb
repz
outsb
frstor
xchg
sub
rcrl
sbb
lcall
mov
neg
negl
mov
add
or
inc
xor
lret
arpl
push
ret
loope
int3
in
in
out
inc
sbb
xchg
jo
push
jmp
mov
push
mov
arpl
jne
aam
fdivl
inc
ss
int3
js
fadds
fcoml
push
cwtl
jo
inc
jb
mov
mov
and
in
pop
and
xchg
push
rorb
mov
adc
and
sahf
bound
dec
push
push
push
mov
in
jmp
aad
pop
aas
loop
pusha
xor
pushf
and
popf
push
je
jmp
fcompl
mov
and
subb
arpl
jl
int3
test
mov
ja
push
xlat
jp
shl
lds
dec
inc
fsubl
pop
lcall
sub
push
xor
pop
ret
hlt
push
cmc
dec
sub
xor
dec
enter
notb
cld
std
push
dec
xchg
out
jmp
or
test
outsb
jns
inc
jb
gs
jns
out
push
jb
push
cmp
subl
dec
sahf
hlt
mov
pop
jo
dec
gs
xchg
loope
outsb
fcoms
fidivl
inc
cmp
jne
fnsave
cmp
push
jge
je
push
out
sahf
out
outsb
fs
gs
jnp
jno
iret
repz
js
lahf
push
pop
cmpsb
mov
sub
add
jmp
in
gs
lret
xchg
in
jno
jne
loop
cmp
gs
je
mov
repz
xchg
gs
jns
adc
je
outsl
in
sahf
lahf
out
outsb
arpl
and
leave
lret
int3
dec
xor
xchg
cmp
aad
lea
inc
sbb
test
in
mov
sub
cmp
xchg
jp
jle
adcl
clc
sub
sub
in
enter
sbb
rcl
fcomp
in
sub
add
push
mov
push
js
daa
sbb
inc
or
andb
ss
call
rolb
test
cmpl
xor
insl
push
inc
add
cmp
rorb
rclw
sbb
clc
xor
adc
dec
mov
push
data16
fstpt
mov
pop
inc
dec
es
mov
subl
cmp
dec
or
popa
add
xor
cltd
mov
idiv
subb
cli
add
or
and
jl
mov
add
inc
cmc
add
inc
cmp
jl
pop
pop
addr16
lods
sub
inc
cltd
inc
fdiv
imul
inc
fcoml
repz
mov
push
mov
jae
or
pop
cwtl
or
add
rclb
xor
andb
and
inc
xorl
mov
fiadds
or
rol
in
mov
jg
loopne
cmp
push
ds
arpl
loop
loopne
lock
jecxz
in
cmp
iret
ret
out
in
arpl
setg
arpl
jmp
and
ljmp
mov
test
arpl
and
arpl
iret
jecxz
and
clc
cmp
cli
arpl
cld
arpl
inc
mov
mov
sub
push
xchg
int3
or
loopne
lret
inc
lret
xor
sbb
mov
adc
std
pop
push
int3
mov
lret
push
jb
addr16
ficoml
inc
jno
loope
rorb
cmpsb
aas
jmp
xchg
xchg
popa
arpl
jns
out
outsl
outsb
cmp
cmpl
insl
bound
jecxz
pop
shlb
sbb
repz
imulb
bound
cmp
sti
ret
push
and
orb
int
out
movb
add
rcrb
jne
cmpb
jne
dec
push
jno
push
es
pop
int3
ljmp
add
int3
or
ja
add
and
mov
in
imul
insb
jo
jo
sahf
out
imul
sub
into
pop
jns
push
push
fs
sahf
out
jo
gs
pop
push
sahf
jae
outsw
cli
mov
mov
sarl
das
inc
adcb
cmp
fwait
inc
sti
xlat
sub
dec
mov
out
xor
pop
and
sahf
out
and
out
sahf
and
sahf
out
jns
xor
xor
nop
insb
pop
fdivs
movzbl
or
lahf
xchg
xchg
xchg
jmp
xor
pop
mov
pop
pop
mov
sbb
inc
repz
addb
xrelease
aas
rclb
stos
and
pop
mov
sbb
push
mov
test
aad
push
jnp
jge
push
fsubs
xchg
inc
cs
cld
push
and
rcpps
push
lret
and
aam
das
mov
sahf
jge
lret
shll
into
adc
cmpl
in
pop
orb
enter
sub
shl
push
scas
fsts
pop
adc
add
arpl
je
pop
shlb
adc
add
push
add
adc
xchg
sbb
icebp
sub
push
fnsave
adc
hlt
dec
adc
sub
insl
outsl
inc
pop
inc
pop
rolb
cmp
jl
push
jb
dec
fucomp
movsl
pop
add
stos
and
loopne
mov
add
pop
pop
cmp
jnp
cmp
addr16
xor
push
and
enter
pop
push
in
pushf
mov
jl
jo
insl
push
hlt
div
push
mov
or
movsl
sbb
fwait
add
xor
jl
mov
in
sbb
js
pusha
popf
or
pusha
not
adc
rep
loope
xorb
jl
xchg
mov
push
inc
in
dec
frstor
push
mov
popa
lea
gs
test
sub
push
jb
iret
jecxz
add
adc
cmp
jb
je
adc
arpl
adcl
jb
enter
mov
xor
push
ficomps
push
push
mov
repz
mov
push
push
add
mov
push
mov
mov
sub
sub
mov
in
jbe
push
jmp
shrl
add
nop
loop
dec
mov
lds
enter
xor
in
sub
mov
outsl
push
mov
pop
pop
or
or
testb
xor
lds
push
lret
ja
sbb
test
dec
add
jno
pop
hlt
mov
jmp
notb
mov
cli
cmp
push
sahf
pop
nop
xchg
jl
mov
aad
repnz
je
ret
popf
imul
xor
dec
insb
inc
push
mov
mov
pop
jecxz
pmuludq
and
pop
or
push
pop
push
movsl
leave
mull
arpl
cmp
inc
adc
pop
push
xchg
mov
mov
gs
dec
jo
xor
mov
ss
cmp
or
xchg
mov
adc
jbe
xor
in
in
xor
jno
mov
mov
je
testw
cli
cmpl
std
gs
lock
push
or
je
or
inc
dec
adc
pop
jne
mov
xor
xchg
lds
ljmp
loope
jb
popa
out
jns
arpl
xacquire
js
dec
and
jae
push
imul
mov
or
and
adc
pop
adc
sbb
inc
dec
in
xor
inc
push
fwait
pop
mov
jns
stc
sbb
imul
in
push
xchg
dec
jecxz
test
rorl
sbb
jg
jmp
push
pop
aad
push
data16
mov
mov
cmp
mov
push
sub
mov
xor
cmp
or
ljmp
test
orl
mull
stos
push
frstor
les
inc
je
subl
inc
imul
repz
sub
jno
pop
dec
mov
push
inc
dec
push
or
or
push
push
xchg
sub
push
xor
cld
icebp
add
je
push
mov
push
xor
dec
or
add
lcall
or
fmull
inc
jb
je
sbb
ss
ret
int3
outsl
int
sbb
xchg
iret
shrb
shlb
mov
xor
push
cmp
ret
xlat
jo
jae
push
jo
pusha
push
and
repz
xor
les
popf
jb
scas
sub
jb
loope
cmp
outsl
repz
gs
jae
out
aas
xor
dec
imul
mov
mov
xchg
mov
lock
mov
xchg
ss
loop
xor
shrl
add
bound
je
xchg
pop
movsl
adc
adc
insb
mov
xlat
xchg
mov
or
fisubrl
jmp
xor
jo
and
dec
jnp
dec
inc
cmp
repz
jbe
jo
xor
cmp
repz
fs
insb
pop
xor
dec
cmp
fstp
fistpll
mov
xor
pop
imul
outsb
in
push
ret
xorb
loope
cmp
mov
mov
mov
mov
xchg
xbegin
cmp
push
insb
gs
cmp
gs
popa
insb
mov
leave
and
cwtl
inc
sahf
inc
xlat
and
jle
out
jae
push
outsl
imul
jns
push
jb
jbe
lret
fisubl
out
push
mov
lods
jae
add
pushf
xor
mov
rorb
mov
clc
inc
nop
enter
cmc
enter
inc
sahf
out
jne
dec
cmpsl
enter
fcmovne
repz
jb
arpl
mov
dec
xchg
push
mov
sbb
pop
inc
push
mov
loop
sbb
push
xor
xchg
sbb
jne
mov
lock
mov
cmc
sub
or
cmp
fcomps
rclb
add
rorb
lret
push
pushf
test
pop
adc
cmp
test
jg
lods
nop
mov
add
stos
mov
xchg
or
mov
add
ret
cmpw
jne
mov
add
cmpl
int
inc
push
mov
adc
iret
inc
cmp
arpl
pop
add
iret
je
mov
cmp
je
adc
pop
xchg
test
ja
mov
in
fmull
in
xor
jecxz
inc
mov
mov
cmp
inc
jmp
cmp
inc
sub
jb,pn
sbb
add
adc
or
dec
sbb
inc
in
int
xor
or
adc
jno
add
or
popf
cmp
test
cli
cwtl
dec
adc
mov
and
movsb
inc
or
enter
lock
shll
adc
pop
fdivrl
and
cmp
push
adc
push
fcoml
ret
inc
add
lods
rolb
negb
sub
out
je
or
sarb
adc
enter
cmc
movsl
cltd
or
ret
adc
xchg
push
in
cld
cmp
pop
gs
inc
flds
pop
gs
fwait
in
icebp
dec
mov
in
mov
int
dec
jns
push
imul
insb
lahf
adcl
aam
in
cmp
je
jne
jecxz
test
test
xchg
out
and
loop
or
dec
scas
ds
imul
mov
cwtl
pop
and
jmp
int
cmp
lds
cmp
cwtl
dec
cltd
outsb
lcall
pushf
jb
outsb
sahf
lahf
xchg
loope
je
inc
mov
jae
aad
push
movsb
movsl
dec
push
repz
fs
xor
stos
ljmp
inc
pop
cld
call
mov
int3
lods
int3
cwtl
imul
pop
xor
popa
nop
or
push
push
out
push
movsl
out
rcl
or
ret
popf
sub
jg
repz
mov
inc
pop
and
pop
inc
fs
out
fs
ret
mov
lods
fisubl
xlat
nop
iret
mov
int3
add
push
sbb
or
nop
sub
in
je
enter
lret
mov
sbb
pop
adc
lds
inc
fistl
cmpsb
ja
push
cmpsb
pop
inc
xorl
xor
xor
and
cmp
popa
xchg
sub
sbb
mov
push
int3
shlb
hlt
lock
xchg
and
cmp
xchg
ret
popa
push
xchg
pushf
mov
adc
mov
add
movsbl
cmp
je
dec
jmp
xorl
adc
adc
leave
je
mov
inc
inc
jmp
andb
sbb
sbb
test
je
or
inc
mov
mov
decl
mov
inc
jb
xchg
add
add
cmp
or
cmpb
sub
sbb
fmul
push
dec
bound
popf
push
das
pop
pop
mov
insl
or
nop
xor
aaa
int
sub
clc
andl
scas
mov
and
mov
cmp
shlb
popa
inc
jmp
fldl
mov
mov
addl
xlat
cmpb
loope
push
or
jmp
mov
movsb
sub
add
pop
add
push
mov
mov
inc
inc
test
jne
pop
mov
add
pop
add
mov
dec
push
aas
xchg
xchg
je
out
or
dec
pop
andb
xor
popa
push
in
icebp
mov
loope
imul
or
bound
imul
xor
and
hlt
inc
call
mov
and
jae
jae
ror
js
adc
sbb
movsb
lcall
out
add
testb
mov
add
mov
xchg
dec
and
idivb
cmp
and
sarl
outsl
ss
adc
cmpsb
test
cmpl
push
pop
dec
imul
lea
nop
sub
mov
test
add
mov
push
jo
mov
cmp
cmp
jae
mov
adc
sarl
ret
mov
jb
mov
inc
dec
push
insb
and
iret
pushf
rorb
cmp
jbe
mov
out
mov
add
dec
mov
mov
adc
jge
popf
addl
mov
cmp
jb
jmp
mov
or
and
add
movzwl
sbb
loope
and
mov
add
clc
add
cmp
jae
bound
jb
mov
push
test
repz
cmp
imul
repnz
dec
cwtl
add
push
cmc
mov
sub
in
movsl
xor
jg
imul
dec
mov
cmp
loop
xor
mov
pop
rol
mov
xor
inc
sub
cld
daa
mov
or
push
inc
dec
sbb
shl
pop
or
mov
mov
pop
jo
fdivr
testl
movsb
pushf
mov
mov
jmp
cld
shlb
mov
loop
lcall
roll
cmp
jne
and
add
test
cmp
push
pusha
inc
out
popa
pushf
add
jecxz
decl
jne
test
pop
lea
and
arpl
add
xchg
adc
fwait
and
clc
daa
push
xchg
andl
repz
mov
mov
inc
sbb
and
or
enter
mov
dec
ds
xlat
xchg
jo
rolb
sub
sub
icebp
push
imul
push
add
mov
push
xor
imul
sbb
add
add
mov
mov
or
fwait
adc
cmpsl
push
insl
and
and
in
xor
cmp
jp
or
in
nop
lahf
or
sbb
loopne
es
jle
or
xor
cmp
push
insl
mov
and
andb
in
test
hlt
enter
push
bound
cmp
cmpsb
cs
data16
xlat
jo
cmp
iret
into
cmc
or
stc
subb
lahf
clc
fmuls
mov
pusha
lods
int3
mov
mov
sbb
inc
outsl
and
xchg
sbb
loopne
push
jmp
int
inc
xor
repz
bound
push
add
icebp
xor
xchg
dec
je
movsl
icebp
mov
lods
fcompl
ss
pop
mov
call
inc
data16
cmp
arpl
sub
lods
fs
jns
and
andb
and
js
inc
test
fs
out
and
push
rorl
pop
push
push
push
rclb
cmpl
add
add
cmp
mov
jns
or
xor
jl
lcall
cmp
in
cmp
outsb
or
and
ja
loope
cmp
imul
movsb
sahf
jns
bound
xor
pop
test
inc
lahf
test
stc
jbe
popf
lods
cltd
je
push
cwtl
decb
ds
xchg
std
xchg
std
repz
ja
insb
insb
inc
cli
mov
push
pop
jmp
popa
je
xchg
xchg
or
jae
lea
xor
test
aaa
fwait
mov
jge
cmp
sbb
and
pop
push
rcl
addb
cltd
pop
idiv
add
cmp
orl
popf
mov
leave
cwtl
hlt
sahf
and
in
jecxz
pushf
jbe
jl
adc
lea
aaa
jo
movsl
les
cmp
faddl
mov
rol
inc
fstl
dec
xchg
out
jge
pop
lds
jns
xchg
xor
xor
xor
adc
add
lea
add
inc
pop
sbb
push
icebp
imul
cmc
aam
iret
xchg
and
push
sahf
cmpsl
jns
fcmovnu
mov
js
jns
xor
mov
es
push
je
xchg
push
xor
inc
inc
and
repz
insb
gs
stc
inc
inc
imul
jg
cmp
es
inc
jb
iret
lods
inc
mov
push
dec
mov
call
es
mov
sahf
stc
and
ljmp
rep
add
dec
xchg
add
loop
out
sahf
daa
rclb
es
jp
ja
jbe
or
dec
out
inc
notl
fsubl
mov
lods
nop
int3
add
leave
add
cmp
sub
popf
sahf
data16
xor
jae
dec
push
dec
sbb
dec
mov
das
push
xor
popf
mov
adc
jo
mov
push
je
mov
pop
add
jno
jns
add
mov
or
jne
mov
js
int3
push
jbe
jo
ret
xlat
dec
cmp
cmp
je
je
je
je
je
ret
loope
bound
mov
jne
cmp
jbe
push
pop
jne
jne
xchg
sarl
jne
jne
je
pop
sbb
in
fdivl
cmpb
mov
cmp
test
jae
pusha
jbe
repz
jecxz
jae
int3
ret
cmp
mov
cmp
repz
je
bound
repz
repz
cmp
push
push
pop
data16
add
jb
jo
outsb
sbb
jne
jbe
jbe
fcmovnb
loope
jbe
jbe
ss
jno
add
insl
jae
xchg
rep
add
imul
add
outsb
aas
aas
xor
loopne
adc
inc
pop
push
inc
pop
loope
ja
xchg
rorl
arpl
insl
rdmsr
sub
testl
bound
add
cmc
ja
imul
jns
cmp
and
gs
push
mov
lret
and
jo
pop
push
mov
jb
out
xchg
or
les
jecxz
aam
cmc
in
jge
sub
clc
daa
sti
or
inc
and
insb
insb
outsl
arpl
ret
insl
xor
push
mov
dec
mov
addr16
aaa
int
sbb
add
nop
xchg
cs
add
ss
imul
push
cs
sub
gs
mov
fstps
je
inc
inc
ljmp
push
arpl
or
test
inc
inc
insb
cmp
int
push
add
in
sub
inc
popa
imul
insb
or
insb
cltd
sub
imul
fadds
outsb
mov
bound
mov
inc
dec
xor
pop
lret
lds
xor
fadds
xor
xor
dec
outsb
outsw
jo
insb
lods
loopne
xorl
add
or
add
xor
add
fs
ds
add
adc
sbb
jne
adc
fs
pusha
pop
mov
jae
push
call
push
xchg
ret
pushf
sarl
fsubl
imul
mov
pop
sub
inc
je
inc
mov
push
jmp
mov
imul
outsl
dec
inc
dec
lcall
mov
sub
aam
imul
xchg
mov
mov
lret
sbbb
cwtl
jns
jge
lret
or
xchg
outsl
psraw
push
outsl
rorb
sbb
add
dec
jo
mov
ret
lcall
xchg
push
add
imul
dec
inc
push
dec
inc
dec
add
jne
dec
mov
or
fsubrl
lods
lret
add
popa
dec
xor
gs
popa
dec
dec
ss
stc
dec
je
outsl
outsl
imul
loop
repnz
pop
push
jae
out
mov
scas
add
push
add
jbe
jg
lret
pop
mov
dec
jne
mov
imul
into
jbe
sub
mov
pop
lret
mov
in
xor
push
adc
je
imul
pop
push
push
inc
cmp
lds
jae
daa
jbe
mov
ret
pop
lock
add
add
mov
or
jae
cs
test
shlb
jne
jae
and
dec
cmp
call
mov
leave
pop
sub
lcall
cmpsb
aam
mov
mov
dec
je
xor
ljmp
fwait
or
addl
movsb
orb
daa
add
push
push
mov
add
add
add
inc
cli
sarl
dec
jb
sbb
mov
xchg
sti
sub
sbb
inc
int3
dec
or
pop
add
arpl
jp,pn
jl
ds
mov
cltd
sbb
or
and
push
add
add
pop
xchg
lret
sub
mov
pop
aam
xlat
and
lods
ret
xor
adc
repnz
and
cmpsl
inc
add
sub
pop
xor
pop
mov
pop
ss
ret
xchg
sbb
or
mov
push
aaa
fldl
jbe
xor
add
cld
xchg
push
mov
jns
mov
jno
or
push
or
mov
pop
or
iret
xor
or
and
adc
wbinvd
xchg
push
or
sbb
incl
xchg
ss
leave
orb
push
das
std
imul
mov
roll
lret
pop
bound
or
fldcw
daa
gs
ss
rorl
cmp
jmp
gs
dec
add
mov
add
push
iret
or
and
gs
inc
sub
mov
dec
add
mov
dec
dec
jae
std
fidivl
add
test
inc
add
sbb
sbb
int3
mov
arpl
fidivrl
pop
mov
sbb
es
pop
xchg
shll
fmuls
push
adc
pop
ds
sbb
js
fcoml
sbb
rcr
ljmp
jb
pop
mov
lcall
pop
sub
mov
jge
jmp
inc
cmp
lea
dec
imul
repz
xlat
in
add
or
mov
add
pushf
adc
mov
sbb
jl
inc
mov
sub
popa
add
mov
xor
ss
loop
fbld
cwtl
xor
cmp
es
lods
pop
fnstcw
mov
aas
int3
insb
shl
mov
fucompp
and
xchg
mov
add
push
inc
sbb
mov
jae
mov
cld
imul
jb
xor
or
pop
loopne
ss
add
cmpsl
dec
lret
pop
nop
cmp
mov
getsec
adc
mov
adc
iret
es
mov
add
add
add
add
add
add
cmp
add
xor
add
xor
add
inc
mov
add
add
sahf
dec
add
orl
inc
popa
outsb
arpl
inc
insb
insb
add
fs
insb
insb
add
add
add
sub
add
inc
mov
add
add
add
add
insb
mov
add
add
add
add
add
add
int3
mov
add
add
add
add
add
add
decl
add
pusha
mov
add
add
add
add
jmp
add
je
add
jl
add
add
add
pushl
add
add
add
lcall
add
mov
add
inc
mov
add
add
imul
gs
xor
cs
insb
add
add
add
dec
outsl
popa
fs
imul
add
add
inc
gs
jb
arpl
fs
jae
add
add
add
push
imul
insb
insb
outsl
arpl
add
add
jb
jne
insb
inc
jb
add
add
push
inc
push
push
cs
insb
add
add
je
insl
add
inc
inc
dec
xor
cs
insb
add
add
add
gs
je
inc
outsl
insl
jo
je
bound
imul
add
push
imul
add
add
add
je
fs
jo
gs
dec
outsb
outsw
add
add
inc
push
xor
cs
insb
add
add
ja
jo
imul
mov
push
pushl
mov
xor
mov
push
inc
inc
outsl
insl
jo
arpl
mov
add
sbb
pusha
mov
mov
cld
lods
xor
test
je
loopne
sbb
xor
lea
movsb
mov
call
cmp
jae
push
or
xor
inc
xor
mov
lea
mov
mov
call
sub
lea
add
mov
call
pop
sub
jae
and
call
mov
call
jne
pop
cmpsb
sub
inc
mov
sub
add
fcos
cmp
sub
add
movsb
pop
inc
inc
jmp
add
jne
xchg
lods
xchg
inc
ret
add
flds
in
call
leave
call
out
jb
ret
sub
sbb
ret
add
sub
sub
adc
inc
js
pusha
mov
fdivl
jo
or
jno
add
and
jae
loopne
loope
push
insb
faddl
add
hlt
dec
mov
fcmovnb
mov
jns
fildl
xlat
loope
pop
jo
fs
push
xorb
outsb
xor
pop
jl
and
pop
push
push
push
push
call
pop
sub
inc
add
cld
add
cld
mov
sub
or
mov
mov
add
lea
cwtl
add
sbb
cmpl
je
mov
test
je
mov
pop
mov
add
or
test
add
or
add
lcall
push
call
ret
nop
mov
mov
jb
inc
push
ret
aaa
mov
mov
testb
int3
add
out
xor
outsl
inc
int
je
push
add
mov
xorb
or
cmp
rolb
mov
inc
sbb
test
jmp
test
je
push
and
jg
lea
jmp
sub
push
sbb
call
sbb
push
ficoml
mov
testb
popa
sub
fiadds
loopne
pushf
jne
or
dec
inc
mov
add
movb
mov
jmp
addps
and
pop
cwtl
sub
push
mov
movb
aad
add
ret
push
mov
add
and
sub
pop
sub
push
add
add
push
call
mov
add
jle
outsl
add
roll
sti
xor
add
je
push
mov
add
jne
adc
pop
add
jmp
add
pop
adc
vpinsrw
jge
clc
pop
int
pop
or
ret
je
mov
add
xor
push
add
mov
sub
mov
lods
mov
add
lods
mov
xor
enter
sub
pop
add
movl
jge
loope
jo
add
add
xlat
adc
decb
psubq
call
outsb
clc
add
mov
add
dec
pop
scas
sahf
pusha
shr
mov
add
dec
nop
ss
or
add
inc
dec
pop
add
jmp
jae
mov
nop
pop
mov
jge
cmpsl
jmp
popa
jo
sub
or
out
mov
or
testl
out
inc
push
jne
test
mov
mov
add
rcrb
ss
cmp
jge
mov
inc
movzbl
inc
mov
rolb
push
cld
sub
je
dec
mov
jne
sbb
push
cmp
jne
or
rclb
lock
in
cmpsb
push
add
add
xchg
inc
ljmp
cmp
sbb
push
notl
jmp
js
jmp
push
inc
aaa
orl
jl
add
jbe
push
push
call
xchg
sbb
push
fwait
push
xchg
inc
pop
mov
fiadds
jl
jbe
dec
inc
aaa
lds
jae
sarb
dec
or
sar
repz
xchg
sub
mov
or
push
shrl
add
stos
pop
fucomip
pusha
mov
loope
daa
pop
ret
jne
push
sbb
fnstenv
add
push
push
push
adc
sbb
pop
cld
or
int3
fsubs
imul
mov
scas
dec
or
or
dec
mov
mov
sub
call
inc
xor
rolb
add
inc
popl
mov
add
jmp
pop
fiaddl
movb
cmp
jne
jmp
mov
jecxz
and
add
shl
sub
jo
xor
pop
pop
out
sahf
arpl
pop
fisttpll
sbb
ljmp
lret
mov
andb
cmp
je
add
add
pop
add
je
fldcw
call
insl
dec
jnp
push
push
call
arpl
dec
push
add
jmp
sbb
add
jae
bound
loopne
loopne
sbb
mov
scas
daa
fwait
leave
add
inc
inc
mov
dec
clc
call
xchg
je
or
pop
mov
dec
sbb
sbb
notb
push
movsb
test
adc
add
repnz
push
jl
loope
push
inc
cs
test
or
jmp
aam
and
cmp
dec
push
and
or
test
imul
faddl
jmp
dec
jmp
sub
pop
into
or
sub
mov
or
movsb
or
repz
lret
and
push
clc
out
inc
cmp
adc
jl
or
sbb
shr
or
lea
adc
push
push
cmp
push
mov
test
les
mov
pop
sahf
dec
ja
cmp
out
cmpsb
lret
into
cs
or
inc
popf
xchg
xor
bnd
iret
or
push
pop
lea
add
mov
cld
dec
out
push
jo
insb
imul
and
jb
jb
add
mov
arpl
jo
add
and
mov
outsb
arpl
jne
and
fnstenv
and
je
bound
pop
mov
and
pop
jno
mov
add
mov
fs
add
push
xorb
xor
dec
aas
into
push
add
jae
addr16
outsl
js
add
insb
mov
imul
hlt
push
outsb
gs
inc
js
je
out
push
sahf
add
push
add
dec
popa
outsb
fs
add
outsb
sbb
xchg
outsl
call
push
jmp
jb
jne
fsts
lcall
jbe
xorb
cmp
stos
ret
jb
hlt
insl
rcr
in
sahf
jmp
cmp
push
dec
fs
jp
scas
cmp
movsl
sbb
add
std
pusha
mov
mov
cld
lods
xor
test
je
xor
lea
movsb
mov
call
jae
cmp
jae
push
push
push
xor
inc
xor
mov
lea
mov
mov
call
jae
lea
add
mov
call
jae
pop
pop
pop
sub
jae
mov
call
jmp
mov
call
adc
dec
jne
inc
call
mov
cmp
sbb
cmp
sbb
push
mov
sub
rep
pop
inc
inc
jmp
add
jne
xchg
lods
xchg
add
inc
ret
xor
inc
call
adc
call
jb
ret
sub
mov
popa
ret
add
cld
mov
add
add
add
mov
add
add
add
adc
add
fs
add
lea
mov
mov
mov
movb
add
sub
mov
xor
ret
mov
popl
add
push
push
push
push
push
push
lea
mov
push
mov
push
push
pushl
push
mov
add
mov
call
pop
mov
push
push
mov
mov
add
mov
mov
mov
add
mov
mov
add
mov
add
lea
push
push
push
call
pop
pop
add
mov
push
mov
mov
add
sub
mov
mov
mov
call
mov
mov
mov
pop
jmp
add
push
push
push
call
mov
pop
pop
pop
pop
pop
pop
jmp
