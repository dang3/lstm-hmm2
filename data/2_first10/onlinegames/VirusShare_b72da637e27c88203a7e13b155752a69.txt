mov
mov
push
push
push
mov
mov
pop
sub
push
push
mov
mov
mov
add
fisttpl
mov
mov
xor
lea
stos
stos
sbb
and
adc
repz
rdmsr
xrelease
call
test
adc
fucomi
jbe
add
lea
test
outsl
mov
rorl
add
add
daa
loopne
pushl
sti
push
push
ja
sub
or
mov
sbb
adc
push
insb
jbe
addr16
sbb
sbb
callw
sbb
add
mov
jnp
mov
jge
dec
lahf
mov
jmp
mov
jg
ficomps
or
pop
pop
pop
leave
or
and
ja
ja
mov
faddl
out
std
fwait
les
jae
fld
or
lds
fldt
pop
popa
enter
lret
lret
outsb
mov
int
into
push
outsb
mov
add
xor
xor
inc
mov
mov
cmp
pop
fdivs
fldcw
scas
fidivl
fisttpl
push
add
pop
loop
pop
xlat
jne
jecxz
add
inc
in
out
out
call
jmp
jmp
in
pop
in
xor
xlat
je
lock
pslld
repz
cmc
sbb
add
aaa
clc
stc
dec
add
std
fldt
pop
sti
js
cld
je
mov
push
call
test
adc
orb
lock
adc
pop
clc
scas
mov
or
add
rorb
outsb
or
je
jg
push
inc
add
sbb
push
mov
sbb
adc
mov
pop
push
pop
je
loopne,pn
fstpt
push
adc
or
pop
or
mov
movsb
dec
jbe
shr
pushf
data16
pop
adc
or
insl
sbb
push
addr16
fbstp
jmp
sti
jne
stos
or
add
loope
lcall
inc
lret
sbb
cmpl
in
testb
loope
jmp
cmp
push
push
push
inc
dec
pushf
je
adc
pop
ret
movsbl
push
mov
pop
jae
les
ret
jmp
push
pushl
sbb
push
push
xor
mov
test
je
mov
sbb
ljmp
lock
inc
mov
test
mov
jne
andb
ss
pop
clc
out
mov
inc
push
xor
movzbl
inc
cmp
jl
clc
pop
jg
mov
shlb
or
stc
stc
shll
add
sbb
je
sub
cmp
push
lods
jmp
add
pop
adcb
aas
mov
lock
or
clc
add
sub
or
inc
ret
stos
shlb
cmp
add
pop
cmp
in
inc
andl
mov
push
push
push
pop
and
add
and
gs
xorl
dec
pop
jne
or
call
call
inc
inc
sub
in
ds
sti
or
xchg
dec
inc
nop
lock
cmpsb
lahf
outsb
mov
add
mov
std
lods
jae
push
aad
cmpb
jbe
mov
cltd
mov
mov
lea
push
imul
cmp
cmp
jl
dec
clc
out
sub
jbe
inc
shl
imul
push
inc
cld
in
cmp
sbb
jmp
or
add
insb
sbb
sub
sti
push
aas
mov
xor
cmp
jbe
test
adc
ret
mov
push
ds
jg
cmp
jl
mov
push
or
shl
nop
mov
out
fistps
stos
insl
lea
push
jmp
popa
sti
fildl
adc
xchg
sub
sbb
fcomps
add
std
jbe
lret
fmull
frstor
inc
or
fidivs
fst
mov
pavgb
les
push
add
xor
xlat
faddl
insb
xor
shll
add
dec
bound
shll
bound
dec
shll
jb
inc
add
mov
sub
jmp
scas
fildl
shll
dec
ret
imul
lds
scas
scas
scas
sbb
push
enter
lods
fdivs
mov
test
mov
push
push
dec
ljmp
adc
push
repz
sti
cld
lea
cld
iret
sub
sub
ret
std
add
insl
push
in
inc
cmp
decl
jl
mov
xchg
subl
shr
dec
mov
fsubs
jmp
outsl
pop
sbb
rcrl
loope
push
fldl
add
jg
leave
sbb
jnp
jl
pusha
inc
jp
jae
xchg
ret
call
mov
inc
dec
jne
stos
push
push
push
inc
push
cmp
in
push
xlat
xor
daa
loop
shlb
adc
idivb
jne
xchg
push
js
push
pop
jle
cmp
or
and
cmp
jne
push
rclb
mov
mov
dec
scas
push
dec
cmp
and
je
adc
arpl
push
xchg
sbb
ficoms
or
jne
or
or
add
jb
add
xchg
push
sub
jmp
ret
in
push
inc
je
jmp
je
or
ret
sub
sti
xchg
cld
fldt
inc
xor
cmp
shl
lahf
inc
into
shl
fisttpll
cmp
sbb
lcall
fdiv
or
es
or
fsubs
scas
idiv
testb
je
dec
movb
jne
add
or
in
cmpb
xor
incb
in
jmp
cld
adc
mov
add
mov
shlb
and
cwtl
rol
sub
test
push
mov
and
adc
movsl
dec
ljmp
add
mov
cmpsb
mov
mov
fs
mov
outsb
gs
xor
dec
or
adc
xlat
aam
aam
mov
lds
pop
rorb
loope
add
inc
les
rcll
lods
lods
xlat
aad
jne
scas
adc
and
jne
mov
mov
mov
mov
mov
mov
mov
jne
mov
add
in
lods
mov
adc
dec
dec
xchg
push
aas
push
cld
dec
or
ret
repnz
es
sub
repnz
movsb
sub
in
lea
in
mov
jo
mov
inc
dec
repnz
mov
not
xchg
pop
xor
fmull
mov
mov
cmp
insb
neg
mov
inc
mov
pop
ret
mov
out
add
cmp
in
loope
jp
push
xchg
mov
push
push
loope
add
mov
dec
add
push
das
or
out
fistpl
push
cld
jmp
fs
pop
adc
jmp
outsl
test
pusha
jmp
push
call
dec
mov
jl
mov
cmp
or
adc
jns
inc
jmp
clc
push
outsl
xorl
push
cld
mov
loope
push
lcall
shrb
push
or
pop
or
test
sub
daa
popf
mov
mov
leave
cmp
lcall
sbb
push
mov
cmp
das
shl
and
cmp
cmp
add
cmp
xor
jmp
inc
lret
gs
mov
insl
test
inc
pop
inc
xchg
jmp
out
ja
inc
in
xchg
in
pop
out
pxor
pop
lock
mov
xor
inc
leave
jb
je
shll
cld
gs
int3
insl
rclb
jmp
mov
push
lods
pop
push
das
aam
mov
cld
ret
inc
or
std
adc
mov
jae
adc
sub
adc
mov
sub
or
loop
lcall
mov
ss
xor
xor
adc
fcoml
pusha
inc
xchg
insb
push
pop
adc
sti
adc
test
lods
adc
jbe
inc
fadds
pop
cmp
je
daa
mov
or
subb
dec
pop
js
cmc
aam
lea
into
push
push
addr16
mulps
mov
inc
push
adcl
fcoml
je
daa
rclb
or
divb
push
in
or
adc
or
ljmp
outsl
pop
cld
jp
movsl
movsw
movsb
push
ljmp
sub
sbb
pop
sub
or
testl
push
cmp
clc
mov
adc
xchg
push
mov
outsb
push
jg
pop
and
rorl
jne
push
adc
xchg
aam
test
cli
mov
xchg
arpl
call
inc
mov
jno
jecxz
cmp
jl
sbb
inc
mov
push
add
dec
aaa
mov
xor
lret
mov
jnp
pop
idiv
cmp
jle
add
jl
popa
cli
ss
lret
jle
jp
add
pop
jl
pop
push
mov
faddl
push
imull
pop
fadds
lret
cli
inc
xor
mov
sbb
cmp
xchg
stc
in
inc
movsb
movsl
cwtl
sti
jne
ds
cltd
sti
pushf
cld
popf
cld
negb
xorb
push
add
mov
add
push
fistpl
push
test
stos
pcmpgtd
insb
mov
sub
test
data16
call
sarb
je
jecxz
in
in
dec
sbb
push
out
out
call
or
cmc
inc
loopne
arpl
orb
nop
stc
int
in
and
inc
test
jne
fwait
sub
and
insb
cwtl
and
call
or
pop
xor
rclb
sbb
daa
sti
test
sub
adc
and
das
and
push
popa
gs
jnp
push
out
push
out
push
out
mov
out
or
adc
lock
xor
adc
hlt
cmc
es
jbe
scas
notb
imull
lret
imul
cmpsb
imul
pop
xor
or
jo
lcall
fcmovu
lcall
inc
outsl
jo
lcall
pushf
aam
lcall
dec
jne
push
mov
cmp
jmp
mov
jbe
sub
cmp
mov
cmp
inc
mov
lods
mov
inc
aam
pop
mov
inc
test
insb
pop
or
or
adc
push
testl
dec
pop
aad
mov
jp
dec
lahf
jmp
inc
mov
call
cmp
js
xor
adc
push
sti
leave
or
xlat
pusha
sarb
or
sbb
pop
bound
xor
adc
loope
mov
clc
sbb
mov
adc
incl
push
icebp
insl
testb
int
inc
inc
add
imul
adc
jb
mov
pop
movsb
xor
aaa
mov
and
sub
out
jns
add
inc
mov
jne,pn
cmp
je
jmp
mov
mov
xor
jmp
inc
fisubl
je
xor
dec
mov
mov
jmp
ret
loopne
scas
insl
adc
pop
adc
mov
pop
add
popf
jl
cmp
add
in
aaa
lods
pop
adc
gs
or
nop
mov
or
mov
aaa
sub
or
pop
insb
test
add
add
in
ret
jle
sub
jne
std
adc
loope
inc
pop
cmp
jae
mov
push
or
push
xchg
das
xchg
insl
or
adc
add
js
rorb
jno
jg
mov
push
jmp
loope
mov
pushf
mov
call
and
sbb
push
pusha
imul
mov
pop
pushf
stc
cmp
mov
pushf
pushf
mov
nop
pushf
pusha
pop
cmp
jmp
stos
pop
call
mov
aas
mov
mov
sub
ljmp
fcmovnu
inc
xchg
xor
dec
push
push
sbbb
and
fnstsw
or
and
out
hlt
or
and
in
pushf
jmp
mov
fcompl
mov
xor
push
dec
push
call
movsl
fmul
cmp
lds
cmovo
pop
cmp
push
stos
cmc
sbb
mov
cmc
sar
test
cmp
mov
sbb
leave
adc
add
in
pop
sbb
inc
or
in
test
andb
adc
or
imul
imul
or
or
inc
mov
mov
jecxz
or
fsubs
fnstenv
xor
pop
xlat
and
jbe
clc
out
hlt
pop
adc
xor
shll
mov
mov
ss
push
testb
fsts
push
sub
mov
pop
add
sub
mov
cmp
popf
push
test
je
in
nop
cmp
inc
iret
mov
pop
jb
push
inc
add
mov
mov
push
push
mov
loop
gs
and
mov
push
add
or
rorb
cmp
push
pop
jge
out
push
adcb
nop
call
clc
test
pop
adc
push
add
enter
and
xor
push
inc
aaa
mov
jo
fadd
push
cwtl
fdivr
in
pop
sub
sbb
adc
xchg
sbb
adc
enter
in
stc
jmp
add
fadd
nop
inc
lock
sub
adc
dec
xor
jge
sub
cmp
test
out
call
mov
pop
or
pop
fsubs
es
jae
hlt
or
cmpsb
stos
adc
jo
xlat
xor
lcall
test
rolb
in
mov
push
jmp
and
jmp
in
xor
xchg
jo
ss
and
lea
out
push
push
rol
xchg
adc
mov
add
push
fdivrl
ljmp
ficoml
jae
add
inc
enter
mov
push
js
rclb
subl
and
push
inc
mov
fadd
adc
pop
out
sub
inc
sub
and
rclb
xor
xchg
lea
or
sti
jne
cld
push
pusha
outsl
bound
sbb
test
fisubs
push
sbb
mov
sbb
add
repnz
or
hlt
add
mov
shl
clc
stc
adc
mov
sbb
mov
push
bound
in
in
out
and
ljmp
in
enter
fldl
and
cwtl
jmp
mov
push
push
inc
push
pop
push
adc
fistl
outsb
adc
ss
pushf
call
bsr
shl
mov
lods
mov
and
div
outsl
pop
mov
push
or
les
or
xor
jb
sbb
loope
sub
mov
fchs
inc
push
pop
shlb
and
add
push
sbb
inc
imul
lcall
adc
int3
jmp
int3
or
adc
xor
enter
mov
enter
mov
ror
enter
cmp
and
mov
bound
mov
push
jbe,pn
push
push
fistpl
pop
jnp
cld
xchg
neg
sbb
add
out
or
add
adc
jmp
mov
pop
jae
sub
mov
or
loope
or
rolb
push
dec
dec
adc
or
push
push
stos
rol
sub
orl
out
push
je
adc
or
cld
xor
insb
mov
je
int
xchg
cmp
sarb
jecxz
fldl
fistps
jl
inc
orb
out
mov
jbe
push
xchg
cmp
fs
shll
or
in
xor
or
add
and
call
pushl
mov
cmpb
jne
inc
or
add
or
pop
in
and
aam
dec
movsb
movsl
jle
scas
jl
imulb
mov
insl
hlt
fcmovnu
jmp
sub
jnp
imulb
insb
sti
push
xchg
insb
sbb
fstpl
inc
or
inc
mov
out
inc
xchg
push
ret
mov
fsubrl
cmp
loopne
lock
mov
pop
fcoml
and
inc
mov
add
shll
xchg
movsb
mov
enter
push
xor
cmpsb
imul
scas
imul
outsb
xor
cmpsb
imul
dec
shll
sub
adc
lock
fwait
out
and
add
push
lcall
xor
dec
imul
imul
imul
mov
cmp
imul
fimull
jne
add
xchg
xor
sti
lret
movsb
mov
movsb
and
mov
sbb
dec
les
inc
pop
sub
pushf
jle
jae
ss
adc
mov
and
and
inc
dec
call
push
popa
add
dec
inc
dec
xor
cs
jg
ljmp
inc
inc
push
inc
push
dec
or
mov
dec
loopne
mov
mov
adc
mov
xchg
shl
aam
mov
ja
mov
scas
int
ljmp
movsl
cltd
aas
add
lock
arpl
loope
into
add
test
pop
push
ss
xchg
push
inc
push
push
xor
add
add
push
xchg
sub
mov
or
add
and
and
ret
loop
adc
jb
gs
xchg
add
xor
mov
imul
jmp
push
pusha
pushf
call
mov
lea
pop
hlt
dec
xorb
add
out
adc
das
hlt
jg
mov
add
add
push
push
push
push
mov
lcall
xchg
std
out
sarb
pop
popf
popa
jmp
mov
into
scas
loope
repz
mov
fldcw
xor
push
rcrb
adcb
outsl
ljmp
in
jle
or
push
gs
lret
pop
outsl
push
sbb
mov
insl
arpl
inc
jae
arpl
jae
mov
mov
pop
into
les
mov
int3
out
mov
mov
and
or
jmp
mov
mov
inc
dec
dec
inc
inc
inc
dec
inc
pop
inc
std
jnp
insb
daa
pop
daa
aam
lret
pusha
out
ljmp
rol
mov
mov
mov
aas
jno
xchg
dec
inc
pop
mov
outsl
int3
inc
popa
arpl
and
shlb
mov
stos
inc
dec
ss
or
pusha
mov
xlat
mulb
mov
cs
outsl
outsl
ljmp
push
jg
call
fs
push
sbb
subb
fs
jne
fs
sub
push
je
insb
fs
outsb
aaa
pop
jae
jae
gs
push
mov
arpl
mov
lea
imul
arpl
sbb
outsl
jo
out
outsb
sbb
fs
add
add
outsl
je
fcmovu
in
ja
je
jns
or
add
or
js
push
insb
sti
sub
and
add
outsl
data16
and
jae
bound
mov
dec
push
push
push
inc
push
inc
pop
dec
dec
inc
push
std
mov
fisttpl
mov
imul
jg
stos
xor
xchg
lcall
adc
out
dec
stos
outsb
or
or
popa
or
add
push
add
push
add
lods
nop
fcoml
inc
add
inc
add
pop
inc
inc
call
pushl
or
and
push
jb
addr16
insl
and
outsb
outsb
outsl
aaa
loopne
pushl
and
outsb
and
inc
dec
push
and
psadbw
negb
xor
bound
leave
bound
stc
out
add
push
lcall
mov
bound
bound
in
mov
lsl
pop
or
bound
cmp
bound
out
cmp
push
imul
mov
insl
dec
add
add
jno
dec
jne
mov
adc
mov
or
js
outsb
add
adc
mov
mov
pop
add
pop
push
mulb
cmp
or
mov
add
jbe
fld
pop
push
add
shlb
in
inc
ret
mov
pop
or
idiv
xchg
or
je
jo
mov
les
pusha
int
jb
imulb
popa
add
mov
daa
je
pusha
cmp
shrb
xor
nop
add
inc
clc
add
inc
daa
jbe
jo
add
add
lock
push
pusha
andb
in
jb
pop
pusha
lahf
gs
outsl
arpl
add
push
jbe
ja
cs
jae
popa
arpl
add
pop
les
and
mov
out
mov
inc
inc
cmpsb
loopne
adc
fs
sub
shl
jg
pusha
lods
pop
sub
std
fildl
call
or
add
push
fucom
nop
jbe
jg
inc
ret
add
sbb
xor
cmpl
sti
mov
fucomi
mov
js
repz
jg
scas
jnp
jae
jmp
hlt
aad
push
les
loopne
daa
add
decl
outsl
imul
arpl
mov
sub
call
fsubs
out
out
add
ljmp
mov
mov
sbb
and
enter
mov
sti
cmp
mov
aas
jmp
xor
call
call
jg
pop
aam
add
cltd
hlt
adc
sbb
jns
fcmovne
jmp
adc
in
stc
pop
cmp
rcll
dec
test
lods
inc
cmp
xor
push
sbb
incl
jns
dec
idiv
shr
cmc
jmp
popl
jmp
fldl
dec
mov
and
mov
stc
mov
jmp
cmp
mov
sub
push
cld
jmp
jns
xchg
lret
in
jne
int
push
pop
lea
jmp
push
add
mov
adc
dec
cmp
mov
sbb
jp
fcomp
lcall
call
add
jle
jg
jns,pt
ljmp
cmc
adc
xchg
jmp
lret
pushl
mov
mov
xchg
xor
add
jno
jne
lock
and
mov
incl
or
cmp
push
mov
scas
pop
sahf
cwtl
ss
jno
jge
out
xor
sbb
ljmp
mov
dec
pop
jae
in
lods
dec
gs
mov
mov
lcall
leave
enter
imul
jne
sub
xchg
loopne
xor
out
cltd
ret
ljmp
ljmp
pop
xor
add
aaa
adcb
subb
fcmovu
mov
push
decl
outsb
ficompl
sysenter
cli
xor
cmp
mov
add
scas
decl
in
sub
cmp
xor
xor
outsb
in
sahf
addr16
addr16
fldcw
call
adc
cmp
shr
sahf
or
or
push
sbb
mov
jo
cmpsb
sbb
push
es
shlb
bound
dec
out
dec
aam
mov
mov
sub
in
insl
shll
push
fimull
es
call
stos
add
push
out
jno
dec
test
pop
or
adc
dec
lds
data16
xchg
clc
inc
test
add
fs
fcomps
pop
or
jbe
ficoms
leave
pusha
cltd
push
mov
loopne
incl
mov
outsb
sar
sbb
add
mov
jno
rcr
mov
push
jmp
call
pushl
mov
cmpsb
cmpsl
and
shlb
xor
call
mov
cmp
jle
inc
pop
rcl
mov
test
incl
mov
jmp
pop
scas
fstpl
arpl
fsubr
lea
decl
and
loop
int
arpl
iret
std
inc
push
sub
jg
fwait
cmp
mov
arpl
push
pushf
inc
sbb
sbb
out
cmp
sub
mov
xor
adc
push
insb
imul
sbb
mov
stc
xor
mov
dec
loopne
push
sub
incl
jmp
stos
and
in
jae
outsl
push
add
not
sub
pusha
jecxz
inc
imul
or
mov
xchg
pushf
push
cld
dec
aas
fs
jl
cli
jecxz
pop
scas
jg
jmp
scas
xor
fcmovnu
pop
mov
lret
mov
sub
test
out
and
pushl
enter
sbb
scas
or
xchg
sub
or
fincstp
inc
pop
inc
and
jp
mov
je
add
cmpsb
adc
mov
mov
popf
add
jo
mov
sbb
adc
out
mov
clc
addr16
cmp
jae
psubsw
jo
xchg
shlb
push
outsb
js
sti
xor
in
cs
mov
in
lahf
push
xor
imul
push
int3
mov
inc
mov
mov
inc
add
push
mov
mov
iret
add
cmp
outsl
icebp
fst
mov
inc
and
mov
adc
repz
sbb
jmp
push
sarl
sbb
sub
xlat
lds
xor
mov
xorl
loope
pop
dec
adc
mov
decl
mov
shrl
jo
mov
insl
cmc
mull
or
pop
mov
push
jl
inc
sub
mov
or
push
sub
les
dec
and
push
pop
sub
lret
adc
add
fisubs
sub
loopne
jmp
mov
fwait
lods
ljmp
lods
xchg
ret
mov
push
mov
scas
add
sub
pushl
mov
in
mov
out
sub
xor
lods
jbe
movsl
adc
sub
inc
repz
pop
push
pop
lods
mov
mov
fs
jmp
int3
test
sub
adc
leave
sub
pop
jg
leave
stos
ret
jbe
sub
add
pushl
dec
jg
lods
daa
push
xchg
cmp
in
adc
mov
sbb
jg
incl
mov
xor
sub
es
sbb
idiv
inc
jecxz
in
movsl
jns
cwtl
popf
pop
inc
xor
sbb
jb
add
hlt
push
push
fcom
decl
mov
sub
mov
sbb
leave
lcall
mov
inc
jmp
popf
popf
jbe
les
xchg
int
movsb
sarl
arpl
fmull
sub
push
adc
mov
sub
jo
inc
mov
xchg
jge
pusha
push
scas
adc
shr
out
stos
pop
cli
das
mov
add
lea
fcmovbe
jo
mov
xchg
scas
std
fisubrs
pop
mov
cs
mov
outsb
imul
sub
jmp
add
dec
and
loopne
insb
sub
mov
lcall
mov
push
mov
push
and
faddp
cmpsl
add
repnz
pop
cltd
outsl
adc
clc
dec
outsl
movsb
in
lods
mov
push
pop
lcall
add
push
mov
test
inc
adc
stos
cmp
mov
or
lret
and
dec
or
andl
ds
es
lcall
cld
incl
lahf
dec
xor
mov
push
rcl
push
fdivrp
call
lret
or
cli
adc
cmp
sahf
lret
imul
push
and
imul
test
int3
cmc
add
jae
je
inc
test
mov
add
inc
jmp
ljmp
jl
icebp
mov
and
mov
dec
outsb
xlat
dec
xchg
pop
aam
dec
xor
iret
pandn
cld
aam
dec
les
ret
ret
fcoms
dec
xor
jmp
xor
clc
nop
pusha
ljmp
bound
rclb
dec
mov
out
clc
test
lret
mov
ljmp
push
push
push
xor
lcall
mov
jge
loopne
lret
pop
or
pop
enter
outsb
gs
je
pop
clc
call
fwait
hlt
js
pop
mov
lret
cmp
ja
xchg
xchg
xchg
jno
call
jmp
subb
call
clc
or
xor
ljmp
jmp
mov
mov
movsl
les
sbb
xchg
sbb
add
xchg
les
ljmp
icebp
incl
xchg
pop
dec
add
inc
into
fiaddl
sub
dec
imul
mov
cmc
sbb
xor
inc
add
xor
into
cmpl
xor
pop
popa
mov
scas
mov
jmp
adc
outsb
jecxz
xor
and
jmp
cmp
inc
repnz
inc
repz
aad
outsl
movsw
or
ficompl
jg
xorl
cmp
or
call
jo
out
outsl
aad
cli
or
mov
jp
or
loope
loopne
xchg
data16
lret
insb
in
scas
jns
cmc
push
or
stc
lcall
out
mov
loopne
jg
je
or
stos
cli
scas
jnp
imul
jg
outsl
decl
popf
inc
sbb
xchg
mov
cmp
outsl
sti
cli
jge
ljmp
leave
icebp
xchg
xchg
lds
pop
mov
dec
xor
decl
ret
decb
jns
pop
jle
push
sahf
mov
jecxz
mov
xchg
lcall
subl
inc
adc
in
imul
pushl
cmpb
les
stc
scas
jecxz
adc
mov
mov
inc
mov
call
mov
packssdw
ss
fistps
pop
jb
mov
arpl
addr16
mov
call
sbb
fcoms
sbb
pop
jg
inc
stc
int
fists
cwtl
ficoms
out
das
icebp
jg
sarb
lods
aam
dec
xor
ss
dec
xchg
mov
pushl
aam
jle
mov
cmpl
cmp
push
xchg
cmp
seto
ljmp
add
movsl
clc
cmc
subb
pop
fwait
shll
push
mov
testl
pop
xchg
lcall
and
ja
fisubrs
mov
fldenv
push
adc
fistpl
dec
and
lea
cli
inc
sbb
pop
out
pop
loopne
ljmp
jecxz
lcall
jecxz
lret
dec
cmpsl
xchg
lock
push
test
cs
push
lcall
pushf
mov
rcrb
outsl
rcrl
push
jo
adc
mov
aad
lret
pop
jbe
jmp
and
lds
adc
in
inc
mov
inc
popf
ret
xor
jge
sub
popa
fwait
jnp
xchg
inc
pushf
leave
push
fsubrl
hlt
ljmp
cmpsb
mov
mov
nop
mov
pushf
push
mov
pushl
movsl
mov
loope
dec
lahf
cli
movl
orl
dec
clc
push
ljmp
in
cli
adc
push
cld
xchg
rorb
pusha
jg
fs
adc
xchg
icebp
lcall
icebp
pop
cs
popf
xchg
fwait
push
fsubrl
dec
popf
outsb
ja
orl
xor
jbe
pop
call
in
popf
cmp
cs
cwtl
xchg
popa
dec
in
cmpsb
scas
xchg
inc
sub
out
repz
pushl
dec
add
push
es
push
push
pop
or
jge
jns
jo
add
cmp
gs
in
jmp
dec
mov
xor
sub
fucompp
jmp
loopne
pop
std
mov
jg
lock
dec
dec
dec
xor
cmp
and
lahf
jl
cld
push
aam
into
shll
pushl
mov
cmp
out
rcrl
and
movsl
fdivs
push
mov
fsubl
movsl
incb
stos
sahf
dec
xor
icebp
mov
scas
lods
pop
test
pop
mov
clc
mov
hlt
in
mov
mov
dec
pop
pop
js
xor
lds
xor
addb
mov
cs
call
jno
pop
int
mov
ds
push
cmp
movsl
js
pop
jmp
call
jb
lock
mov
aad
cltd
inc
sbb
and
mov
and
pushl
jnp
mov
mov
inc
mov
daa
jecxz
jecxz
les
jl
lcall
inc
mov
jl
mov
pop
ljmp
hlt
push
cmpsl
scas
data16
shl
hlt
pusha
fbld
pop
pushf
testl
mov
jmp
mov
movsl
mov
fs
add
mov
in
mov
insb
ljmp
cmc
xchg
inc
and
es
sub
jmp
ret
add
mov
lcall
stc
or
xchg
jae
daa
imul
mov
into
unpckhps
fs
cmp
call
push
adc
add
adc
adc
dec
mov
mov
add
in
xor
add
test
mov
out
arpl
movsl
testb
jp
and
mov
in
mov
decl
or
scas
out
pop
mov
nop
add
or
jae
js
les
push
ja
sbb
jecxz
pop
lea
jle
or
push
loop
cli
adc
xor
adc
lahf
pop
out
mov
pushl
fldt
mov
lahf
loope
hlt
jbe
out
xor
orl
sub
mov
in
imul
pop
jl
pushf
hlt
lcall
sbb
repz
cmp
mov
mov
cmp
sub
ljmp
pop
xor
out
sub
and
xchg
int3
sti
dec
inc
jl
scas
or
lret
push
std
dec
nop
incl
dec
cli
bound
sbb
mov
push
cmc
repz
xor
jecxz
sbb
mov
mov
popf
bnd
push
ds
push
cltd
stos
leave
or
pop
movsl
cld
jg
mov
or
fildll
ds
test
shrl
ja
fsqrt
ljmp
aaa
mov
adc
push
out
icebp
aam
pusha
cli
mov
fisubrl
dec
fbstp
sub
aam
cmpsl
out
and
loopne
and
pop
inc
fstpt
fsub
mov
js
xchg
sub
xor
push
cli
std
out
adc
loop
imul
mov
mov
fs
loop
ljmp
xlat
lahf
jge
push
rclb
pop
out
mov
icebp
fstpl
fistl
and
cmp
mov
insl
leave
push
out
cmp
fimuls
std
loop
aaa
mov
sub
and
push
lcall
cli
adc
inc
shlb
pop
xor
cmp
sub
fst
imul
pop
sub
outsl
lock
jae
cmp
mov
push
arpl
cmp
mov
call
test
jecxz
jecxz
pushf
cld
push
inc
xor
mov
mov
outsl
cld
incl
test
xchg
aas
rcrb
sbbl
pop
nop
arpl
ljmp
arpl
mov
rorb
xor
repz
cmp
incl
lds
pop
fdivrp
test
out
lahf
xchg
and
jecxz
loopne
jnp
rolb
pop
and
cli
jg
cmp
hlt
cs
sbb
sbb
fidivl
data16
mov
or
iret
popa
ret
jnp
leave
call
jno,pn
cmpb
mov
mov
jle
clc
and
mov
xchg
into
sub
cld
jmp
mov
decl
jl
or
jg
scas
sub
shrl
mov
jle
cld
push
mov
out
sbb
adc
inc
sub
sti
movsl
sub
cmpsl
mov
ljmp
hlt
sub
in
add
inc
pop
gs
or
decl
stc
adc
stos
lea
pop
popf
fwait
mov
xchg
push
xor
mov
jmp
scas
pop
shl
push
sub
xchg
lods
mov
jecxz
pop
xchg
mov
popa
bound
fldt
add
pop
cli
cmp
pop
jge
mov
insb
data16
add
cmp
out
cmc
pop
mov
add
push
jmp
fcmovne
cmpsl
jl
dec
lds
pop
clc
lcall
sub
xchg
pop
cli
cmpsb
jnp
mov
xchg
push
fsubp
dec
in
lods
xchg
clc
inc
daa
dec
inc
xor
xorl
xor
loope
dec
js
nop
mov
jmp
xchg
adc
add
lcall
mov
cmp
rcr
push
jecxz
imul
incl
pop
fdivrl
xchg
rol
cmp
ja
shll
or
lahf
fdivr
dec
clc
xchg
xor
gs
sub
in
pushf
stos
mov
icebp
jge
xchg
stc
inc
push
inc
cmp
decl
cmc
push
xchg
aad
and
push
movsb
mov
pop
cmp
cmp
test
roll
test
lcall
and
sub
clc
je
ret
push
cmp
mov
test
mov
sbb
subb
out
aas
jecxz
jmp
aaa
cmp
leave
sbbb
les
dec
hlt
lcall
ficoml
cltd
outsw
testl
sub
gs
jp
fidivs
outsl
hlt
call
loopne
jb
jbe
jle
insl
and
fildll
dec
pop
loop
bound
cld
lahf
xor
in
xchg
out
daa
dec
ficompl
jne
cmp
dec
xor
xchg
fwait
pop
into
inc
dec
lods
stos
loopne
xchg
ss
or
mov
mov
mov
lcall
lret
jmp
add
gs
dec
jmp
xchg
sub
std
addl
lods
decl
sub
mov
jno
adc
jno
add
mov
iret
mov
fmuls
aaa
mov
cmpsb
cmpl
div
jp
inc
call
sar
add
mov
dec
sub
mov
inc
mov
mov
jp
sbb
cmpb
insl
ffree
out
jg
lcall
das
fistpll
jb
and
rorb
sub
sub
fdivrs
cmp
out
fimuls
dec
pushl
push
xchg
out
sahf
jg
jbe
sbb
mov
in
clc
push
pop
sbb
sub
sub
pushl
pop
test
pop
cmp
sbb
sahf
and
sub
dec
andb
mov
je
or
mov
inc
movl
ljmp
inc
inc
sub
movsb
out
in
xor
cmp
aad
repz
mov
rcrl
repz
and
push
fwait
popf
ret
or
add
decl
std
pop
xor
inc
inc
xor
and
jae
or
outsb
popa
incl
data16
incb
bound
jnp
outsl
mov
lahf
bound
daa
cmp
mov
les
pushl
cmpsb
pmaxsw
sub
dec
jne
sbb
test
repnz
decl
and
sub
xor
out
pop
mov
pop
mov
decl
sub
sbb
or
mov
xor
jg
mov
sysenter
loop
les
cmp
pop
sbb
sub
xchg
sarl
jecxz
addr16
js
push
and
lea
jl
xlat
push
sti
decl
test
jle
int3
aaa
ret
imul
mov
data16
pop
push
das
lock
jp
jne
inc
sarl
aam
sub
add
ljmp
sbb
push
push
fisttps
shlb
sbb
cmp
mov
addr16
sbb
fs
hlt
or
or
ljmp
jae
les
adc
outsl
mov
adc
call
nop
in
decl
push
dec
dec
outsb
push
lcall
xor
dec
in
dec
sarb
aaa
add
push
ds
dec
jecxz
popa
adc
xor
int3
cld
mov
cs
jmp
popa
idivl
pusha
sarl
cmpsb
mov
add
out
dec
std
fdivrl
mov
pop
test
mov
incl
inc
cmp
out
out
xor
test
lods
push
cmp
push
scas
add
decl
cmp
mov
fsubrl
push
mov
and
sbb
movsl
push
pop
pop
or
adc
sub
lods
aaa
xchg
or
jg
jb
add
cli
mov
dec
and
cmpsb
jmp
mov
mov
popa
ficomps
mov
inc
stos
outsb
push
nop
mov
inc
sahf
adc
loop
adc
nop
aad
xor
mov
orb
ljmp
movsl
xor
sbb
and
js
jne
data16
pop
cmp
mov
inc
out
mov
in
mov
lahf
push
cld
jmp
in
push
clc
movsl
sbb
jecxz
push
std
sarb
xchg
push
sbb
or
es
mov
fwait
mov
jb
xchg
lock
lds
sub
mov
xor
iret
cltd
pop
mov
icebp
cltd
adc
outsb
or
sub
call
mov
lret
xchg
dec
mov
ljmp
es
ljmp
test
mov
int3
dec
lret
push
fwait
push
adc
dec
arpl
rorb
fists
adc
xchg
aam
mov
gs
les
lock
icebp
loop
fidivrs
ljmp
cmp
adc
jno
out
cld
insl
push
mov
test
stos
jg
cmc
cmp
xor
decl
clc
xor
push
scas
lret
mov
cmp
add
pushf
insl
or
and
jns
lcall
mov
jb
fsubl
lcall
mov
cmp
pop
out
and
sar
fisttpl
ljmp
jnp
loop
out
jns
std
lea
iret
insb
fsubrs
mov
lcall
fstps
mov
jmp
sti
pop
xchg
fcompl
xchg
call
clc
jmp
test
je
pop
mulb
sub
out
lcall
cmp
scas
addl
mov
shrb
pop
push
mov
sbb
repnz
cmc
dec
pop
mov
push
push
fidivrs
lret
cltd
pop
repnz
fdiv
jge
fs
stc
xchg
out
rorl
incl
push
dec
mov
dec
repz
push
mov
dec
mov
std
aaa
cli
fistps
lea
fisttpl
stos
mov
dec
arpl
cmc
inc
lcall
fucomi
mov
sbb
ss
xor
out
mov
jno
dec
sti
add
dec
xor
shl
dec
out
mov
bound
pop
fldl
xchg
clc
jg
push
jge
mov
mov
incb
jl
cmp
out
ljmp
mov
inc
ss
jns
dec
in
int3
jo
sbb
xacquire
fbstp
into
ljmp
incl
popa
inc
out
dec
xchg
iret
aad
mov
fnstenv
jle
int3
popa
and
bswap
bound
ljmp
jne
mov
xor
popa
sahf
sub
ficompl
es
dec
sbb
lods
in
mov
out
incl
in
add
mov
adc
xchg
aas
cmp
stos
pop
clc
cld
es
test
jg
decl
dec
or
clc
outsb
adc
push
push
pop
sub
dec
cltd
imul
arpl
scas
push
inc
lock
jge
fidivrl
sub
es
sub
jmp
cmp
cld
aam
jle
lret
clc
lcall
movsl
enter
test
jecxz
ljmp
inc
cmp
lret
test
or
lock
mov
das
fmuls
dec
les
or
push
push
add
pop
jl
mov
hlt
lcall
xorl
adc
cli
push
popf
jns
inc
jecxz
scas
push
add
fcmovbe
xchg
push
shll
pop
aas
or
lret
xor
mov
mov
popa
add
push
jb
sub
push
sbb
decl
dec
bound
push
js
shr
outsb
and
xchg
loopne
pop
clc
decl
lret
dec
mov
fdivrl
into
mov
jp
pop
lea
ljmp
xchg
cmp
lret
sub
ja
pop
pushl
rclb
leave
sub
jo
inc
int
mov
jle
popf
push
shrb
pop
mov
mov
in
fcmovne
mov
cmpsl
leave
mov
lods
xchg
mov
call
and
subb
out
mov
inc
jae
or
lcall
rcr
into
xor
mov
mov
jo
or
mov
dec
fwait
test
outsl
mov
sarl
shll
xor
push
or
adc
mov
lcall
mov
cwtl
mov
je
xor
dec
xor
out
lods
and
jl
fnstcw
jbe
insl
dec
jns
mull
std
or
mov
mov
push
lock
in
push
jne
cli
mov
decl
push
je
shlb
repz
iret
mov
mov
adc
add
mov
jl
jge
pop
xchg
mov
iret
cs
pop
int3
and
in
adc
xchg
pushl
clc
jbe
out
mov
cmc
jmp
cltd
rolb
sahf
test
dec
hlt
incl
inc
xor
call
add
push
loop
xchg
xchg
imul
jg
push
and
xor
imul
aam
jge
dec
or
inc
call
sti
push
mov
andb
xor
repnz
lret
outsl
icebp
pushl
sub
xchg
jno
adc
scas
out
and
jmp
dec
outsb
xor
and
add
xor
lock
jno
or
cmpsl
loopne
sub
test
mov
es
or
incb
jb
pop
xchg
fisubs
xchg
les
inc
pushf
cmpsl
movsl
dec
jbe
fwait
cli
xor
push
adc
sti
decl
insb
add
jno
cmp
add
push
out
cmp
decl
add
repnz
pop
pop
loope
aaa
lret
mov
lea
mov
sub
or
call
xchg
ljmp
es
jecxz
and
mov
movsl
std
mov
jg
push
lahf
fstp
jo,pn
loope
push
fistl
and
jg
adcl
imul
sbb
lret
dec
sbb
mov
pop
clc
mov
pop
mov
xchg
mov
lret
or
mov
clc
push
enter
lcall
jmp
enter
loopne
test
mov
popf
add
mov
outsl
and
pushl
fadds
insl
fcos
add
inc
add
cli
clc
adc
adc
push
andb
jo
sub
mov
call
fnstsw
ljmp
shll
jp
loopne
not
xchg
stos
mov
ja
cltd
ds
incl
pop
push
sbb
lahf
sbb
adc
pop
xchg
lods
push
movb
and
decl
mov
jmp
lods
inc
dec
aam
and
mov
pushf
in
stc
outsb
fidivrl
dec
incl
jae
adc
popf
lcall
lcall
call
or
dec
lea
push
jb
xchg
add
add
decl
dec
sbb
fistpl
pop
outsb
fsubr
sbbb
lret
jae
call
and
mov
mulb
mov
xchg
jl
mov
decl
jp
pop
sahf
jb
mov
xchg
out
sbb
stos
repnz
repnz
sbb
ljmp
lds
adc
das
insb
xchg
push
test
push
repz
or
add
xor
divb
xor
fildll
mov
push
push
mov
inc
mov
jae
ljmp
inc
shlb
scas
fldcw
stc
leave
cld
scas
pop
nop
mov
lahf
pop
push
dec
push
cwtl
std
inc
ljmp
mov
pop
cmp
in
js
push
pushf
push
pop
and
idiv
das
mov
pop
or
aad
cltd
mov
ljmp
adc
and
mov
sbb
mov
insb
or
pop
jmp
call
outsb
cmc
mov
insl
xlat
xor
push
pop
push
cli
je
add
test
xchg
dec
decl
pop
test
xchg
icebp
outsb
aad
push
pop
sbb
ds
jmp
cmp
dec
jecxz
ljmp
cmc
cmp
cld
aad
rcrl
xchg
jl
ficoms
pop
mov
xchg
xchg
mov
data16
cmp
outsb
loope
orl
mov
in
sub
add
stos
leave
cmp
jmp
test
jl
fwait
popa
insb
cmp
shrl
cltd
jp
mov
cld
call
fdivl
in
pop
stc
test
inc
outsb
iret
pop
movsl
mov
outsl
lock
out
fs
lcall
jae
push
or
mov
hlt
jl
mov
iret
sbb
mov
push
jmp
out
or
pop
daa
mov
decl
sbb
int3
test
inc
mov
aas
in
jecxz
cmp
movsl
push
popa
stos
sar
jg
iret
xchg
cmp
call
add
ljmp
pop
and
ret
mov
clc
ret
jmp
jns
or
int
jmp
jg
push
pop
lds
int3
ds
les
shrl
mov
jns
push
call
jg
jg
ret
scas
ja
cmp
out
outsl
cmp
add
xchg
jmp
jb
fucomip
push
xchg
cs
movsl
push
and
cmp
pop
arpl
lods
stos
std
popf
mov
jge
ja
sub
out
xor
in
iret
fstpl
decl
sahf
xor
xor
and
jg
cmp
out
fucomip
or
lock
inc
xchg
repz
jo
fcomps
sarl
sbb
mov
push
into
sub
dec
ret
mov
dec
divb
jb
xor
cld
dec
outsl
outsl
fimull
sbb
test
dec
mov
fsub
xchg
mov
pop
notb
cwtl
jmp
loop
stc
sub
scas
fnstsw
pop
adc
jb
push
mov
pop
push
ljmp
aad
dec
xchg
adc
in
insb
inc
jae
adcl
xchg
gs
rorl
fucomip
aaa
je
cmp
sbb
mov
ss
xchg
push
fs
push
add
fildll
and
mov
fcmovb
sti
xchg
mov
loope
mov
jae
fistpll
inc
xor
aad
scas
lea
push
inc
int
negl
aad
data16
incl
or
pop
shl
stc
loope
adc
es
adc
jmp
nop
imul
insb
cmc
xor
addb
mov
adc
sahf
pop
aam
daa
lods
xor
jle
decl
das
negb
rclb
add
push
int
ds
les
push
filds
iret
outsb
push
aam
fcos
lcall
mov
push
ljmp
movaps
lods
cmp
stos
testb
mov
dec
fwait
repz
enter
incl
xor
nop
decb
and
ja
jno
dec
out
decl
sbb
sbb
cmp
pop
repnz
push
incb
add
xchg
pushl
test
dec
jp
cmp
rcrb
jo
xor
dec
cmp
loopne
dec
push
out
adc
filds
jne
scas
test
aam
push
pop
dec
out
stc
lahf
cltd
inc
dec
lcall
outsl
push
fisubs
inc
dec
mov
mov
imul
cmp
mov
xchg
incl
enter
mov
data16
and
push
fs
je
jg
outsl
cld
out
or
mov
jl
sbb
clc
call
mov
rcrl
clc
jp
or
mov
and
inc
cmp
pop
loopne
fwait
ja
mov
lahf
stos
dec
pop
sti
pop
inc
cwtl
or
mov
xor
sub
ljmp
and
xchg
add
pop
outsl
lock
cmp
inc
pop
fiadds
bound
test
popf
ret
ljmp
shrl
sbb
pop
adc
popf
mov
test
out
pop
dec
pop
insb
mov
pop
lcall
std
in
xchg
fisubrl
mov
mov
mov
leave
push
int3
jns
jb
test
cs
out
pop
out
xor
xchg
imulb
push
push
and
idiv
jg
pushf
push
push
or
sbb
cmc
movsl
hlt
pop
movsb
test
in
arpl
or
push
pop
pushl
decb
std
outsl
lock
inc
loopne
out
enter
cmp
sub
lods
call
dec
movsl
sbb
orb
jp
enter
std
test
dec
cmc
testb
sbb
mov
xchg
mov
xor
in
mov
pop
cmpl
hlt
add
in
lcall
adc
cmpsb
je
sbb
fldcw
jmp
pop
fcomp
cmpsl
dec
and
icebp
incl
sbb
mov
jbe
jnp
lahf
inc
and
mov
cmp
cmpsl
push
pop
jb
add
push
fwait
or
mov
data16
pop
mov
pop
hlt
mov
rorl
mov
in
mov
sar
fildll
lods
or
sub
push
test
or
xor
inc
xor
lahf
and
cmp
xorl
cmp
add
dec
dec
test
outsl
int
lea
clc
test
incl
out
movsl
dec
dec
int3
push
arpl
push
jb
mov
push
sbb
popa
push
xchg
scas
sahf
scas
mov
and
outsb
hlt
ljmp
pop
xchg
pop
push
les
jge
sar
inc
filds
mov
mov
jge
adc
or
pop
inc
pop
shrl
cmc
outsl
lods
pop
js
lcall
mov
loop
xor
lret
and
fwait
jge
push
cmpsb
or
mov
cld
cs
mov
push
push
xchg
popl
sti
lods
decl
cwtl
popl
push
xor
orb
data16
or
pushf
aad
jp
int3
push
xor
sub
std
mov
sahf
fstl
pop
cmpsb
int3
cmp
mov
inc
mov
ljmp
lcall
data16
inc
std
push
loop
xchg
mov
jge
xchg
das
inc
mov
lcall
lods
fcmovnbe
ja
fcmovbe
push
push
sbb
test
or
in
mov
dec
jmp
sar
call
push
out
pop
cmpb
popa
ljmp
ja
mov
test
ss
or
cld
jo
sbb
icebp
mov
es
add
xchg
dec
pushl
cmp
push
add
or
out
jg
jmp
popa
mov
push
std
jae
mov
jle
mov
decl
hlt
fimull
repnz
pop
shrl
cwtl
int
xor
mov
push
inc
ja
pop
ret
inc
jo
das
shlb
ret
sbb
mov
call
ds
daa
sbb
jmp
add
enter
jg
clc
cli
lods
je
xchg
sub
arpl
mov
je
test
push
inc
fsts
pushl
push
inc
les
fcmovne
arpl
in
aaa
shlb
adc
pushl
lahf
or
xchg
sbb
clc
mov
mov
test
movsl
es
aaa
js
ss
mov
jbe
mov
js
cmpsb
pop
jbe
aas
inc
xlat
push
mov
std
in
enter
cli
ljmp
fstpl
ss
mov
cmp
ljmp
insl
decl
mov
dec
pop
jl
hlt
test
push
mov
xchg
jmp
aad
outsl
imul
cltd
push
sub
jmp
fdivs
imul
mov
cmc
fistl
sub
xor
mov
loope
ret
cli
ljmp
push
sub
mov
lods
mov
shrl
aad
int
rclb
outsb
xlat
add
in
imul
push
inc
ljmp
mov
std
xchg
cmc
sarb
pop
rcl
and
je
int
in
cmp
les
incl
ljmp
cli
cs
dec
lret
js
test
mov
cs
aaa
movsl
cs
jecxz
dec
xor
xchg
sbb
shl
into
stc
jno
pop
jmp
stos
xchg
or
xchg
test
mov
stos
ja
push
xor
testl
incl
jmp
icebp
mov
out
shl
cli
add
cmp
jg
pop
xlat
popa
push
push
pop
xchg
lods
icebp
call
loop
cmc
jp
cmpsl
mov
adc
adc
dec
hlt
jne
and
ljmp
mov
mov
repnz
pop
test
les
les
mov
ljmp
jmp
enter
testb
mov
add
or
hlt
mov
call
push
cmpb
lret
jb
cld
lcall
and
sar
notl
test
xchg
adc
mov
mov
cmpsl
insl
cmp
cmp
push
into
and
push
repz
in
cs
inc
lods
cli
adc
loope
shll
xor
mov
fstps
pop
cli
jle
mov
icebp
pop
cli
decl
fucomip
stc
fmuls
inc
xchg
push
repz
ficomps
test
mov
pop
dec
out
dec
or
mov
dec
shrb
and
inc
lcall
add
jno
jae
push
out
hlt
inc
mov
in
mov
jmp
jnp
jno
pop
pusha
sub
in
jecxz
push
mov
jge
lock
jns
mov
in
fnstenv
arpl
mov
mov
cwtl
jp
or
dec
stos
push
insl
jo
lds
clc
fucomip
inc
mov
adc
dec
sub
movsb
fwait
mov
push
mov
lea
jae
cmpl
or
jnp
jns
xchg
dec
leave
dec
mov
aam
aam
push
lahf
jge
mov
lea
jnp
jmp
mov
pop
jmp
jle
out
mov
subl
cmp
fnstcw
js
std
stos
add
inc
pop
sahf
push
sbb
dec
inc
lods
loop
dec
ret
sub
clc
pop
loop
das
push
lds
addr16
decl
push
pop
pop
adc
pop
bound
and
insl
push
cmp
mov
cmp
or
pop
xchg
cbtw
and
movsb
insl
jb
das
pop
ret
nop
outsl
xchg
push
shl
lock
jmp
fbstp
aam
sub
push
inc
adc
mov
jge
push
ljmp
mov
mov
fmull
and
push
lahf
and
sub
jns
call
mov
jp
daa
add
paddq
dec
jbe
in
mov
sub
xor
sub
ljmp
data16
arpl
shr
inc
mov
xor
mov
jo
ljmp
std
decl
scas
shlb
rcrb
movsb
mov
inc
jbe
push
shlb
pop
dec
mov
lret
xchg
sarb
adc
cmp
icebp
xor
iret
xchg
fldcw
ljmp
cld
jo
inc
xchg
inc
add
mov
push
push
aam
fstpt
aas
jmp
jns
sub
mov
fwait
add
xlat
call
push
loop
lcall
cmp
subl
pop
out
jl
xchg
ljmp
div
out
mov
xor
xchg
arpl
jle
repnz
std
inc
decl
adc
add
cwtl
add
inc
or
xchg
ja
out
dec
pop
push
jmp
cmc
lcall
aaa
push
lret
aad
push
mov
xchg
fisubrl
cmc
xor
cmp
mov
shrb
lods
xchg
mov
arpl
xchg
movsb
data16
xor
lret
mov
ljmp
adc
mov
stc
and
es
pop
or
lret
sbb
lcall
jmp
mov
stos
lock
jae
ja
push
mov
cmp
inc
adc
add
or
mov
mov
aad
mov
adc
and
and
lock
cld
pop
or
stos
aas
in
push
sub
mov
jbe
mov
std
add
not
shll
pop
sbb
or
pushl
clc
pushl
fsubs
flds
mov
mov
cmp
jg
ljmp
insb
jmp
jbe
mov
popf
lock
vpaddusb
mov
in
lea
xchg
jg
and
lea
adc
mov
jg
out
fildll
test
mov
jmp
lret
xchg
mov
sarb
mov
mov
push
packuswb
jnp
lahf
mov
sub
lock
sbb
sub
ljmp
sub
mov
jle
xchg
pop
sub
sub
push
decl
leave
test
dec
dec
or
bound
push
das
imul
int3
lds
ffreep
fwait
sbb
scas
xchg
mov
incb
scas
push
sub
or
mov
call
jbe
lret
test
cmpsb
xor
adc
pop
mov
ret
dec
jge
and
sbb
in
fldt
and
stos
dec
mov
incb
imul
fucomip
sub
loope
and
jmp
xchg
ja
xor
ljmp
cmc
pop
mov
lret
aas
aaa
mov
repnz
jp
mov
mov
decl
aam
jmp
cmc
lret
sub
ljmp
mov
sub
xchg
aaa
cld
sbb
push
cld
push
insl
out
loop
push
int
adc
xlat
sub
icebp
movsl
aaa
sbb
in
in
and
ljmp
outsb
jmp
cmp
xor
out
in
and
mov
mov
mov
divl
fwait
enter
ficomps
mov
decl
sub
dec
lcall
outsb
sbb
out
mov
jp
adc
push
adc
mov
cmc
ret
inc
icebp
loop
cmp
fwait
pop
add
sbb
fprem
mov
add
outsl
hlt
jmp
or
sub
inc
mov
bswap
sub
stc
mulb
push
js
mov
sbb
inc
mov
xchg
mov
add
xor
iret
adc
mov
call
inc
aam
mov
aam
pop
aad
bswap
leave
scas
add
pop
pop
in
ljmp
es
mov
mov
pop
xor
push
mov
pop
loopne
imul
push
jbe
cwtl
add
popf
int
lea
sbb
mov
das
out
in
jg
jg
ja
push
and
jb
pop
lret
dec
jg
arpl
cltd
js
push
xor
cmc
adc
push
mov
stc
add
push
push
das
das
pop
ljmp
dec
repnz
push
sar
adc
mov
call
in
push
and
add
ret
in
mov
push
xorb
cs
mov
xchg
jmp
js
into
je
jns
fs
cmp
xchg
not
pop
ror
mov
call
cmp
cmp
jnp
jne
gs
mov
add
incl
in
repz
cmp
jns
nop
mov
add
incl
jmp
sti
cmp
dec
into
xor
sbb
push
sub
dec
pop
ljmp
mov
stos
mov
call
iret
insl
aaa
sub
adc
xchg
cli
in
out
cld
pop
lock
enter
fidivrl
pop
ljmp
and
inc
xchg
and
movsl
loopne
dec
das
or
pop
shrl
jg
mov
xorb
jns
stos
fdivs
rol
jl
icebp
mov
and
pop
fisubs
movsl
fisttpl
test
and
mov
rcll
or
arpl
adc
dec
iret
jg
int3
adc
lods
jmp
loope
inc
dec
push
lods
hlt
and
pop
inc
cwtl
shl
repz
js
dec
std
jmp
rol
fcmovnb
test
xor
rcr
push
imull
mov
call
stos
dec
push
rclb
in
les
push
push
add
lahf
cwtl
push
sahf
repz
jne
pop
loop
mov
push
mov
roll
adc
dec
push
xchg
xchg
xor
cmp
xor
sub
ljmp
test
idivl
in
decl
bound
adc
fnstsw
push
mov
xor
mov
roll
jne
adc
dec
negb
aam
enter
lret
mov
cmp
push
cmpsl
gs
mov
pop
push
jmp
das
icebp
call
fcmovnbe
push
xor
inc
jb
movsb
inc
fbld
cmp
dec
iret
ljmp
mov
rcrl
xchg
push
pop
jmp
mov
out
jns
or
outsl
sbb
cmpsb
mov
sbb
xchg
decl
lea
in
test
jb
and
push
sahf
rclb
xchg
lock
xchg
add
subb
pop
mov
out
jl
jns
sti
lfs
sar
inc
out
mov
bound
and
add
into
push
dec
popf
mov
jg
mov
ds
fmull
lret
mov
fadds
and
es
xchg
ss
sbb
repz
push
jp
xor
repz
jmp
inc
rorl
pushf
dec
dec
lock
mov
aaa
jbe
rcrl
sbb
lcall
ds
addr16
sbb
lods
cmp
mov
iret
call
pop
xor
mov
jg
sub
and
clc
inc
or
push
push
adc
shrb
pusha
xchg
sbb
mov
incb
sub
xchg
or
add
fstpl
mov
pop
imul
in
test
sbb
stos
mov
cmp
fists
mov
jmp
mov
xor
mov
das
lock
scas
sub
adc
jp
outsl
insb
cltd
sub
mov
sub
addb
mov
jmp
in
popa
push
andl
movsb
arpl
xor
jo
cmp
jmp
stos
enter
flds
jno
das
jo
or
inc
loopne
aam
mov
xor
ret
mov
arpl
sbb
ljmp
mov
jg
add
pusha
rcr
and
loop
xor
cmc
incl
and
jo
ds
cli
cmpsb
stc
aad
add
inc
cmp
int
imulb
mov
mov
aas
movsl
repnz
adc
and
inc
lahf
inc
in
dec
fdivrl
ror
mov
jg
lock
lds
mov
mov
xor
pushl
clc
das
lahf
xchg
mov
mov
gs
out
aam
sar
lcall
inc
nop
frstor
pop
jo
or
lahf
push
out
add
inc
jb
dec
mov
add
adc
cld
out
inc
xor
in
outsl
pop
dec
xlat
into
ljmp
xchg
mov
mov
sub
xchg
ss
mov
lds
xor
fcos
fnstsw
test
pop
mov
cld
stos
and
push
sti
icebp
cmp
or
mov
fucomip
dec
loopne
mov
cmpb
adc
stc
insl
in
test
and
lcall
mov
repnz
shl
insl
adc
movsl
lea
pop
aas
pop
xchg
sbb
ljmp
aas
lods
mov
push
pop
push
push
pop
out
dec
repnz
sahf
ds
pop
jg
je
mov
fistl
sbb
sbb
add
jbe
fucomip
pushl
inc
or
and
and
cltd
loopne
loop
ret
add
push
decl
cmp
mov
out
jbe
incb
ds
sbb
sbb
cld
mov
sub
fucomip
call
aas
pop
xchg
lret
and
daa
jae
in
adc
jecxz
add
arpl
test
movsb
lds
jp
scas
addr16
inc
nop
js
test
cmp
mov
test
push
out
xchg
imul
rcpps
cld
decl
out
fwait
mov
push
pushl
sbbl
inc
scas
dec
or
dec
out
es
xchg
xchg
cli
pop
cli
jmp
lea
into
stos
ljmp
dec
inc
inc
xlat
mov
arpl
ds
icebp
lcall
push
push
xchg
inc
rorl
es
adc
mov
push
fildl
std
mov
cmp
cmp
mov
sahf
adc
mov
ljmp
ret
cltd
jnp
inc
sbb
push
nop
clc
bound
fsubrs
pushl
jne
dec
pop
xor
add
cmp
mov
loopne
mov
loop
add
sbb
pushf
xchg
sbb
ljmp
add
scas
sbb
lcall
ret
mov
imul
or
push
sahf
test
outsl
dec
jns
outsl
loope
xchg
and
lds
les
inc
xchg
inc
rorl
mov
mov
cs
incl
mov
xchg
ljmp
add
inc
cld
inc
pop
aaa
cmc
into
leave
sub
mov
cmpsl
aad
pop
jmp
mov
js
stos
pop
mov
lds
mov
sub
push
decl
sbb
sbb
mov
pushf
dec
cli
or
mov
mov
lcall
pusha
xor
cmc
cwtl
ljmp
sub
xchg
call
xchg
xor
dec
ljmp
mov
out
sbb
int3
mov
inc
dec
ljmp
lea
mov
mov
in
sbb
notb
aad
fistpll
inc
cmc
fstl
jo
sbb
push
pop
mov
mov
int
or
daa
adc
mov
xlat
xor
ret
xor
sub
incl
in
popa
in
aas
xchg
xlat
sbb
mov
sub
je
in
adc
and
call
push
sti
imul
jl
push
bound
xlat
push
jb
incl
mov
orl
es
repz
out
jg
pop
and
arpl
or
push
ret
add
and
sti
and
jecxz
std
incl
arpl
xchg
or
popf
cmc
call
cld
jns
jg
stos
sti
cmpsl
test
push
xchg
push
sub
cld
ja
stos
pop
pop
push
lods
js
mov
lods
jmp
ret
mov
push
dec
movsl
fdivr
dec
xchg
stos
mov
fcomip
push
movsb
icebp
push
or
scas
out
pop
adc
pop
cmp
sar
ljmp
push
test
scas
dec
jp
mov
cld
or
jnp
push
jg
adc
sbb
scas
mov
push
mov
push
sbb
imul
lret
loopne
mov
pop
push
mov
daa
sbb
bound
xchg
pop
sub
pushf
pushl
nop
imull
adc
pop
pop
lock
je
add
in
notb
xchg
cli
fildl
or
pop
pop
add
outsl
fbld
cli
in
or
push
pop
inc
adc
clc
leave
mov
aas
cmp
xor
lcall
dec
mov
jl
cs
jle
pushf
push
pop
xchg
icebp
incl
and
sbb
mov
sbb
pushl
mov
or
cmp
inc
pop
incl
test
mov
test
inc
es
mov
jg
mov
in
pop
stos
pop
lods
dec
mov
adc
xchg
adcb
leave
fbstp
pop
clc
push
mov
ds
mov
jae
inc
push
and
sbb
lahf
cmp
ljmp
adc
cmc
xor
pop
and
decb
les
and
push
insl
mov
pop
cmp
pop
ss
cmp
lock
sbb
notl
push
loop
lods
push
xchg
push
or
shlb
sub
cmp
in
adc
ret
aad
cmc
scas
jg
sbb
jmp
test
jbe
hlt
mov
push
xchg
test
andl
jle
std
out
and
test
sub
mov
mov
lods
jg
fldl
mov
dec
sub
jge
xor
add
incl
mov
int3
sub
push
pop
pop
les
mov
pop
test
in
jmp
clc
push
leave
shr
jecxz
or
mov
or
lret
push
sub
cld
and
jle
or
cmp
mov
shlb
out
sbb
icebp
lods
ljmp
mov
push
sbb
mov
test
sti
mov
je
push
nop
inc
xor
xchg
fidivs
ret
in
gs
sbb
stos
rcll
mov
dec
and
test
inc
sub
add
lock
lods
inc
mov
cli
shll
add
mov
mov
sarl
jge
aaa
dec
lcall
dec
sti
sub
enter
lcall
lret
leave
jecxz
sti
je
mov
cli
sbb
xor
je
mov
cwtl
sbb
idivl
pusha
and
fcoml
dec
jnp
mov
mov
daa
iret
pushf
jns
jp
leave
jo
mul
data16
sbb
pushl
insb
popa
scas
cmp
mov
test
jle
into
aad
xor
pushl
cmp
sbb
mov
sub
in
fistpll
fdivr
out
out
sti
and
call
cmp
add
fwait
insl
imul
jle
into
repz
inc
aad
adc
and
push
mov
or
les
push
mov
daa
dec
mov
xchg
xor
pop
fs
push
jmp
clc
ja
pop
clc
scas
cmp
sti
mov
pop
iret
inc
or
lcall
jge
test
or
fwait
orb
inc
aas
mov
inc
sarl
xor
mov
in
nop
mov
outsl
fwait
push
dec
adc
lds
dec
mov
loop
or
loopne
lea
adc
mov
jae
sbb
incl
push
sahf
in
push
jge
add
dec
sub
xchg
cli
mov
push
xchg
dec
mov
int3
jb
ror
or
loopne
lods
push
jg
xor
cmp
xchg
mov
cmp
mov
imul
and
jle
sti
movsb
cmp
mov
jmp
push
cmpsb
and
aad
test
cmp
sbb
es
fs
push
push
test
sub
pusha
or
or
adc
sti
mov
jmp
int3
sub
push
incl
fwait
xor
ja
sub
push
sub
fisubrs
sbb
aaa
or
lcall
add
push
pushf
jae
jo
sbb
pop
mov
pop
xchg
jecxz
scas
fstl
mov
push
xchg
push
gs
icebp
adc
adc
pushl
fbstp
pop
cs
jmp
cwtl
dec
fs
mov
push
cli
jo
inc
push
mov
sbb
xor
incl
mov
cltd
ljmp
inc
fistps
adc
mov
cmp
icebp
jg
pushl
dec
aaa
mov
mov
push
stos
or
rcrl
jb
push
roll
mov
jecxz
jle
loope
repz
mov
mov
jmp
sarl
mov
out
push
movsl
idivl
dec
cmp
orl
movsl
inc
call
roll
jne
ja
mov
stc
lock
mov
inc
sbb
outsl
lock
xchg
sbb
mov
lret
pop
scas
pop
test
stos
lcall
cld
decl
loopne
pop
jg
in
pusha
push
or
jg
das
lret
sbb
jecxz
incl
sbb
jp
jae
iret
mov
mov
jbe
fcoml
rol
pop
sbb
imul
lea
loopne
loope
or
push
stos
jl
xor
incl
push
dec
cld
push
das
cmpsb
jp
xorb
test
stos
dec
out
pusha
or
xchg
mov
jg
dec
push
inc
mov
mov
mov
adc
stos
jae
pusha
and
ret
jmp
out
icebp
xchg
jae
js
mov
push
cmc
test
decl
push
popa
les
mov
shrb
mov
jle
cmp
mov
xlat
sahf
sub
outsb
dec
test
in
mov
xor
mov
pop
inc
rclb
inc
mov
lcall
xchg
pop
adc
cmp
ret
shlb
dec
adc
mov
push
xchg
add
movsb
sub
fstl
push
mov
and
add
mov
add
in
ret
pop
ret
out
call
lahf
fwait
push
movsb
sub
test
xor
divl
jne
stc
decl
jo
outsb
aad
shlb
pop
jmp
dec
pop
inc
push
fcom
into
fadd
and
mov
fistl
cli
inc
xchg
ret
mov
add
jo
pusha
jecxz
mov
or
call
jbe
mov
out
ds
movsl
jecxz
add
pushl
sub
push
imul
adc
das
lods
and
push
mov
pop
pop
jae
push
cld
mov
cmp
fidivrl
outsl
cli
mov
test
xor
std
outsl
icebp
mov
repnz
xchg
dec
pop
mov
pop
pop
push
or
jno
xor
xchg
loope
stos
dec
mov
ret
push
incl
xor
cmpsl
and
fildl
outsl
and
dec
push
inc
outsl
hlt
fistpl
jne
lahf
lock
stc
repnz
sbb
call
push
cmc
add
sbb
subb
lods
push
bound
xchg
stc
push
aam
jle
cmp
popa
push
fistl
pop
xchg
xchg
dec
sub
lods
mov
lcall
lock
fnstcw
push
inc
rcll
fxtract
cmc
sub
xchg
addr16
jmp
push
outsl
imul
lods
pop
aas
inc
mov
xor
pop
insl
or
xchg
cmp
fucom
das
hlt
ljmp
mov
or
sbb
or
repz
fstpt
jg
shrl
stc
sbb
ja
xor
push
lcall
fdivs
jl
stos
add
or
and
push
xor
in
and
dec
ljmp
sub
sar
mov
pusha
test
repnz
xchg
jnp
lret
jmp
daa
lods
jbe
and
inc
and
hlt
movaps
cmp
idivl
inc
dec
dec
push
mov
push
call
add
popf
jmp
cmp
test
fmull
scas
mov
inc
jbe
xchg
scas
and
pop
jno
sub
movsb
outsb
mov
inc
fldcw
call
rolb
dec
mov
or
xor
xchg
mov
test
push
lock
decl
add
loopne
rorl
xchg
cmp
int
ljmp
jns
rclb
push
xor
mov
and
mov
pop
mov
ljmp
jmp
xchg
mov
shlb
repz
out
xor
add
bound
push
and
mov
imulb
xchg
cmp
fldt
aaa
pop
mov
lods
cmp
inc
std
adc
adc
xor
sub
adc
lcall
les
push
js
inc
sbb
ja
nop
jbe
mov
pop
ja
fstp
xorl
mov
jg
cld
or
cmp
jmp
cld
call
pop
out
mov
pop
testl
addb
mov
jbe
jg
inc
add
push
lea
stc
aaa
mov
repz
and
ret
push
jg
jo
mov
sub
adc
ja
and
xchg
dec
or
mov
mov
movsl
mov
mov
roll
arpl
pop
pop
jns
in
jmp
scas
sub
lcall
xor
jne
imul
pop
aas
mov
pop
cmp
pop
outsl
ljmp
enter
jge
pop
sub
jp
leave
incl
stos
icebp
lds
push
inc
jnp
xchg
or
mov
idiv
call
push
arpl
pop
subl
mov
pop
div
sti
fstp
loop
mov
cmpsl
jmp
fnsave
xchg
fucomip
iret
and
cwtl
mov
decl
sbb
mov
insl
sub
cmp
divb
jg
mov
jns
sub
push
mov
mov
push
jo
imul
jmp
inc
inc
dec
lahf
xchg
fnstenv
mov
push
sbbl
fbld
pushl
out
add
call
inc
imul
jmp
call
or
sub
repnz
xchg
lcall
inc
in
pop
mov
pop
insb
addb
hlt
in
push
loope
ds
mov
fists
fildll
mov
cli
mov
scas
inc
push
std
cmp
jle
movsl
or
loopne
ljmp
fisubl
call
dec
popf
mov
stos
outsb
jecxz
lcall
mov
je
cmpsb
mov
adc
shr
mov
mov
inc
fbstp
out
call
fildll
lcall
mov
mov
jno
mov
test
xchg
mov
fidivrl
and
and
cmp
les
adc
idiv
pop
hlt
xchg
ret
out
and
pop
dec
popa
jmp
pop
lea
xor
xor
lahf
jbe
sub
cs
ds
mov
mov
push
push
push
mov
mov
pop
sub
push
push
mov
mov
mov
add
fisttpl
mov
mov
xor
lea
stos
stos
sbb
and
adc
repz
rdmsr
xrelease
call
test
adc
fucomi
jbe
add
lea
test
outsl
mov
rorl
add
add
daa
loopne
pushl
sti
push
push
ja
sub
or
mov
sbb
adc
push
insb
jbe
addr16
sbb
sbb
callw
sbb
add
mov
jnp
mov
jge
dec
lahf
mov
jmp
mov
jg
ficomps
or
pop
pop
pop
leave
or
and
ja
ja
mov
faddl
out
std
fwait
les
jae
fld
or
lds
fldt
pop
popa
enter
lret
lret
outsb
mov
int
into
push
outsb
mov
add
xor
xor
inc
mov
mov
cmp
pop
fdivs
fldcw
scas
fidivl
fisttpl
push
add
pop
loop
pop
xlat
jne
jecxz
add
inc
in
out
out
call
jmp
jmp
in
pop
in
xor
xlat
je
lock
pslld
repz
cmc
sbb
add
aaa
clc
stc
dec
add
std
fldt
pop
sti
js
cld
je
mov
push
call
test
adc
orb
lock
adc
pop
clc
scas
mov
or
add
rorb
outsb
or
je
jg
push
inc
add
sbb
push
mov
sbb
adc
mov
pop
push
pop
je
loopne,pn
fstpt
push
adc
or
pop
or
mov
movsb
dec
jbe
shr
pushf
data16
pop
adc
or
insl
sbb
push
addr16
fbstp
jmp
sti
jne
stos
or
add
loope
lcall
inc
lret
sbb
cmpl
in
testb
loope
jmp
cmp
push
push
push
inc
dec
pushf
je
adc
pop
ret
movsbl
push
mov
pop
jae
les
ret
jmp
push
pushl
sbb
push
push
xor
mov
test
je
mov
sbb
ljmp
lock
inc
mov
test
mov
jne
andb
ss
pop
clc
out
mov
inc
push
xor
movzbl
inc
cmp
jl
clc
pop
jg
mov
shlb
or
stc
stc
shll
add
sbb
je
sub
cmp
push
lods
jmp
add
pop
adcb
aas
mov
lock
or
clc
add
sub
or
inc
ret
stos
shlb
cmp
add
pop
cmp
in
inc
andl
mov
push
push
push
pop
and
add
and
gs
xorl
dec
pop
jne
or
call
call
inc
inc
sub
in
ds
sti
or
xchg
dec
inc
nop
lock
cmpsb
lahf
outsb
mov
add
mov
std
lods
jae
push
aad
cmpb
jbe
mov
cltd
mov
mov
lea
push
imul
cmp
cmp
jl
dec
clc
out
sub
jbe
inc
shl
imul
push
inc
cld
in
cmp
sbb
jmp
or
add
insb
sbb
sub
sti
push
aas
mov
xor
cmp
jbe
test
adc
ret
mov
push
ds
jg
cmp
jl
mov
push
or
shl
nop
mov
out
fistps
stos
insl
lea
push
jmp
popa
sti
fildl
adc
xchg
sub
sbb
fcomps
add
std
jbe
lret
fmull
frstor
inc
or
fidivs
fst
mov
pavgb
les
push
add
xor
xlat
faddl
insb
xor
shll
add
dec
bound
shll
bound
dec
shll
jb
inc
add
mov
sub
jmp
scas
fildl
shll
dec
ret
imul
lds
scas
scas
scas
sbb
push
enter
lods
fdivs
mov
test
mov
push
push
dec
ljmp
adc
push
repz
sti
cld
lea
cld
iret
sub
sub
ret
std
add
insl
push
in
inc
cmp
decl
jl
mov
xchg
subl
shr
dec
mov
fsubs
jmp
outsl
pop
sbb
rcrl
loope
push
fldl
add
jg
leave
sbb
jnp
jl
pusha
inc
jp
jae
xchg
ret
call
mov
inc
dec
jne
stos
push
push
push
inc
push
cmp
in
push
xlat
xor
daa
loop
shlb
adc
idivb
jne
xchg
push
js
push
pop
jle
cmp
or
and
cmp
jne
push
rclb
mov
mov
dec
scas
push
dec
cmp
and
je
adc
arpl
push
xchg
sbb
ficoms
or
jne
or
or
add
jb
add
xchg
push
sub
jmp
ret
in
push
inc
je
jmp
je
or
ret
sub
sti
xchg
cld
fldt
inc
xor
cmp
shl
lahf
inc
into
shl
fisttpll
cmp
sbb
lcall
fdiv
or
es
or
fsubs
scas
idiv
testb
je
dec
movb
jne
add
or
in
cmpb
xor
incb
in
jmp
cld
adc
mov
add
mov
shlb
and
cwtl
rol
sub
test
push
mov
and
adc
movsl
dec
ljmp
add
mov
cmpsb
mov
mov
fs
mov
outsb
gs
xor
dec
or
adc
xlat
aam
aam
mov
lds
pop
rorb
loope
add
inc
les
rcll
lods
lods
xlat
aad
jne
scas
adc
and
jne
mov
mov
mov
mov
mov
mov
mov
jne
mov
add
in
lods
mov
adc
dec
dec
xchg
push
aas
push
cld
dec
or
ret
repnz
es
sub
repnz
movsb
sub
in
lea
in
mov
jo
mov
inc
dec
repnz
mov
not
xchg
pop
xor
fmull
mov
mov
cmp
insb
neg
mov
inc
mov
pop
ret
mov
out
add
cmp
in
loope
jp
push
xchg
mov
push
push
loope
add
mov
dec
add
push
das
or
out
fistpl
push
cld
jmp
fs
pop
adc
jmp
outsl
test
pusha
jmp
push
call
dec
mov
jl
mov
cmp
or
adc
jns
inc
jmp
clc
push
outsl
xorl
push
cld
mov
loope
push
lcall
shrb
push
or
pop
or
test
sub
daa
popf
mov
mov
leave
cmp
lcall
sbb
push
mov
cmp
das
shl
and
cmp
cmp
add
cmp
xor
jmp
inc
lret
gs
mov
insl
test
inc
pop
inc
xchg
jmp
out
ja
inc
in
xchg
in
pop
out
pxor
pop
lock
mov
xor
inc
leave
jb
je
shll
cld
gs
int3
insl
rclb
jmp
mov
push
lods
pop
push
das
aam
mov
cld
ret
inc
or
std
adc
mov
jae
adc
sub
adc
mov
sub
or
loop
lcall
mov
ss
xor
xor
adc
fcoml
pusha
inc
xchg
insb
push
pop
adc
sti
adc
test
lods
adc
jbe
inc
fadds
pop
cmp
je
daa
mov
or
subb
dec
pop
js
cmc
aam
lea
into
push
push
addr16
mulps
mov
inc
push
adcl
fcoml
je
daa
rclb
or
divb
push
in
or
adc
or
ljmp
outsl
pop
cld
jp
movsl
movsw
movsb
push
ljmp
sub
sbb
pop
sub
or
testl
push
cmp
clc
mov
adc
xchg
push
mov
outsb
push
jg
pop
and
rorl
jne
push
adc
xchg
aam
test
cli
mov
xchg
arpl
call
inc
mov
jno
jecxz
cmp
jl
sbb
inc
mov
push
add
dec
aaa
mov
xor
lret
mov
jnp
pop
idiv
cmp
jle
add
jl
popa
cli
ss
lret
jle
jp
add
pop
jl
pop
push
mov
faddl
push
imull
pop
fadds
lret
cli
inc
xor
mov
sbb
cmp
xchg
stc
in
inc
movsb
movsl
cwtl
sti
jne
ds
cltd
sti
pushf
cld
popf
cld
negb
xorb
push
add
mov
add
push
fistpl
push
test
stos
pcmpgtd
insb
mov
sub
test
data16
call
sarb
je
jecxz
in
in
dec
sbb
push
out
out
call
or
cmc
inc
loopne
arpl
orb
nop
stc
int
in
and
inc
test
jne
fwait
sub
and
insb
cwtl
and
call
or
pop
xor
rclb
sbb
daa
sti
test
sub
adc
and
das
and
push
popa
gs
jnp
push
out
push
out
push
out
mov
out
or
adc
lock
xor
adc
hlt
cmc
es
jbe
scas
notb
imull
lret
imul
cmpsb
imul
pop
xor
or
jo
lcall
fcmovu
lcall
inc
outsl
jo
lcall
pushf
aam
lcall
dec
jne
push
mov
cmp
jmp
mov
jbe
sub
cmp
mov
cmp
inc
mov
lods
mov
inc
aam
pop
mov
inc
test
insb
pop
or
or
adc
push
testl
dec
pop
aad
mov
jp
dec
lahf
jmp
inc
mov
call
cmp
js
xor
adc
push
sti
leave
or
xlat
pusha
sarb
or
sbb
pop
bound
xor
adc
loope
mov
clc
sbb
mov
adc
incl
push
icebp
insl
testb
int
inc
inc
add
imul
adc
jb
mov
pop
movsb
xor
aaa
mov
and
sub
out
jns
add
inc
mov
jne,pn
cmp
je
jmp
mov
mov
xor
jmp
inc
fisubl
je
xor
dec
mov
mov
jmp
ret
loopne
scas
insl
adc
pop
adc
mov
pop
add
popf
jl
cmp
add
in
aaa
lods
pop
adc
gs
or
nop
mov
or
mov
aaa
sub
or
pop
insb
test
add
add
in
ret
jle
sub
jne
std
adc
loope
inc
pop
cmp
jae
mov
push
or
push
xchg
das
xchg
insl
or
adc
add
js
rorb
jno
jg
mov
push
jmp
loope
mov
pushf
mov
call
and
sbb
push
pusha
imul
mov
pop
pushf
stc
cmp
mov
pushf
pushf
mov
nop
pushf
pusha
pop
cmp
jmp
stos
pop
call
mov
aas
mov
mov
sub
ljmp
fcmovnu
inc
xchg
xor
dec
push
push
sbbb
and
fnstsw
or
and
out
hlt
or
and
in
pushf
jmp
mov
fcompl
mov
xor
push
dec
push
call
movsl
fmul
cmp
lds
cmovo
pop
cmp
push
stos
cmc
sbb
mov
cmc
sar
test
cmp
mov
sbb
leave
adc
add
in
pop
sbb
inc
or
in
test
andb
adc
or
imul
imul
or
or
inc
mov
mov
jecxz
or
fsubs
fnstenv
xor
pop
xlat
and
jbe
clc
out
hlt
pop
adc
xor
shll
mov
mov
ss
push
testb
fsts
push
sub
mov
pop
add
sub
mov
cmp
popf
push
test
je
in
nop
cmp
inc
iret
mov
pop
jb
push
inc
add
mov
mov
push
push
mov
loop
gs
and
mov
push
add
or
rorb
cmp
push
pop
jge
out
push
adcb
nop
call
clc
test
pop
adc
push
add
enter
and
xor
push
inc
aaa
mov
jo
fadd
push
cwtl
fdivr
in
pop
sub
sbb
adc
xchg
sbb
adc
enter
in
stc
jmp
add
fadd
nop
inc
lock
sub
adc
dec
xor
jge
sub
cmp
test
out
call
mov
pop
or
pop
fsubs
es
jae
hlt
or
cmpsb
stos
adc
jo
xlat
xor
lcall
test
rolb
in
mov
push
jmp
and
jmp
in
xor
xchg
jo
ss
and
lea
out
push
push
rol
xchg
adc
mov
add
push
fdivrl
ljmp
ficoml
jae
add
inc
enter
mov
push
js
rclb
subl
and
push
inc
mov
fadd
adc
pop
out
sub
inc
sub
and
rclb
xor
xchg
lea
or
sti
jne
cld
push
pusha
outsl
bound
sbb
test
fisubs
push
sbb
mov
sbb
add
repnz
or
hlt
add
mov
shl
clc
stc
adc
mov
sbb
mov
push
bound
in
in
out
and
ljmp
in
enter
fldl
and
cwtl
jmp
mov
push
push
inc
push
pop
push
adc
fistl
outsb
adc
ss
pushf
call
bsr
shl
mov
lods
mov
and
div
outsl
pop
mov
push
or
les
or
xor
jb
sbb
loope
sub
mov
fchs
inc
push
pop
shlb
and
add
push
sbb
inc
imul
lcall
adc
int3
jmp
int3
or
adc
xor
enter
mov
enter
mov
ror
enter
cmp
and
mov
bound
mov
push
jbe,pn
push
push
fistpl
pop
jnp
cld
xchg
neg
sbb
add
out
or
add
adc
jmp
mov
pop
jae
sub
mov
or
loope
or
rolb
push
dec
dec
adc
or
push
push
stos
rol
sub
orl
out
push
je
adc
or
cld
xor
insb
mov
je
int
xchg
cmp
sarb
jecxz
fldl
fistps
jl
inc
orb
out
mov
jbe
push
xchg
cmp
fs
shll
or
in
xor
or
add
and
call
pushl
mov
cmpb
jne
inc
or
add
or
pop
in
and
aam
dec
movsb
movsl
jle
scas
jl
imulb
mov
insl
hlt
fcmovnu
jmp
sub
jnp
imulb
insb
sti
push
xchg
insb
sbb
fstpl
inc
or
inc
mov
out
inc
xchg
push
ret
mov
fsubrl
cmp
loopne
lock
mov
pop
fcoml
and
inc
mov
add
shll
xchg
movsb
mov
enter
push
xor
cmpsb
imul
scas
imul
outsb
xor
cmpsb
imul
dec
shll
sub
adc
lock
fwait
out
and
add
push
lcall
xor
dec
imul
imul
imul
mov
cmp
imul
fimull
jne
add
xchg
xor
sti
lret
movsb
mov
movsb
and
mov
sbb
dec
les
inc
pop
sub
pushf
jle
jae
ss
adc
mov
and
and
inc
dec
call
push
popa
add
dec
inc
dec
xor
cs
jg
ljmp
inc
inc
push
inc
push
dec
or
mov
dec
loopne
mov
mov
adc
mov
xchg
shl
aam
mov
ja
mov
scas
int
ljmp
movsl
cltd
aas
add
lock
arpl
loope
into
add
test
pop
push
ss
xchg
push
inc
push
push
xor
add
add
push
xchg
sub
mov
or
add
and
and
ret
loop
adc
jb
gs
xchg
add
xor
mov
imul
jmp
push
pusha
pushf
call
mov
lea
pop
hlt
dec
xorb
add
out
adc
das
hlt
jg
mov
add
add
push
push
push
push
mov
lcall
xchg
std
out
sarb
pop
popf
popa
jmp
mov
into
scas
loope
repz
mov
fldcw
xor
push
rcrb
adcb
outsl
ljmp
in
jle
or
push
gs
lret
pop
outsl
push
sbb
mov
insl
arpl
inc
jae
arpl
jae
mov
mov
pop
into
les
mov
int3
out
mov
mov
and
or
jmp
mov
mov
inc
dec
dec
inc
inc
inc
dec
inc
pop
inc
std
jnp
insb
daa
pop
daa
aam
lret
pusha
out
ljmp
rol
mov
mov
mov
aas
jno
xchg
dec
inc
pop
mov
outsl
int3
inc
popa
arpl
and
shlb
mov
stos
inc
dec
ss
or
pusha
mov
xlat
mulb
mov
cs
outsl
outsl
ljmp
push
jg
call
fs
push
sbb
subb
fs
jne
fs
sub
push
je
insb
fs
outsb
aaa
pop
jae
jae
gs
push
mov
arpl
mov
lea
imul
arpl
sbb
outsl
jo
out
outsb
sbb
fs
add
add
outsl
je
fcmovu
in
ja
je
jns
or
add
or
js
push
insb
sti
sub
and
add
outsl
data16
and
jae
bound
mov
dec
push
push
push
inc
push
inc
pop
dec
dec
inc
push
std
mov
fisttpl
mov
imul
jg
stos
xor
xchg
lcall
adc
out
dec
stos
outsb
or
or
popa
or
add
push
add
push
add
lods
nop
fcoml
inc
add
inc
add
pop
inc
inc
call
pushl
or
and
push
jb
addr16
insl
and
outsb
outsb
outsl
aaa
loopne
pushl
and
outsb
and
inc
dec
push
and
psadbw
negb
xor
bound
leave
bound
stc
out
add
push
lcall
mov
bound
bound
in
mov
lsl
pop
or
bound
cmp
bound
out
cmp
push
imul
mov
insl
dec
add
add
jno
dec
jne
mov
adc
mov
or
js
outsb
add
adc
mov
mov
pop
add
pop
push
mulb
cmp
or
mov
add
jbe
fld
pop
push
add
shlb
in
inc
ret
mov
pop
or
idiv
xchg
or
je
jo
mov
les
pusha
int
jb
imulb
popa
add
mov
daa
je
pusha
cmp
shrb
xor
nop
add
inc
clc
add
inc
daa
jbe
jo
add
add
lock
push
pusha
andb
in
jb
pop
pusha
lahf
gs
outsl
arpl
add
push
jbe
ja
cs
jae
popa
arpl
add
pop
les
and
mov
out
mov
inc
inc
cmpsb
loopne
adc
fs
sub
shl
jg
pusha
lods
pop
sub
std
fildl
call
or
add
push
fucom
nop
jbe
jg
inc
ret
add
sbb
xor
cmpl
sti
mov
fucomi
mov
js
repz
jg
scas
jnp
jae
jmp
hlt
aad
push
les
loopne
daa
add
decl
outsl
imul
arpl
mov
sub
call
fsubs
out
out
add
ljmp
mov
mov
sbb
and
enter
mov
sti
cmp
mov
aas
jmp
xor
call
call
jg
pop
aam
add
cltd
hlt
adc
sbb
jns
fcmovne
jmp
adc
in
stc
pop
cmp
rcll
dec
test
lods
inc
cmp
xor
push
sbb
incl
jns
dec
idiv
shr
cmc
jmp
popl
jmp
fldl
dec
mov
and
mov
stc
mov
jmp
cmp
mov
sub
push
cld
jmp
jns
xchg
lret
in
jne
int
push
pop
lea
jmp
push
add
mov
adc
dec
cmp
mov
sbb
jp
fcomp
lcall
call
add
jle
jg
jns,pt
ljmp
cmc
adc
xchg
jmp
lret
pushl
mov
mov
xchg
xor
add
jno
jne
lock
and
mov
incl
or
cmp
push
mov
scas
pop
sahf
cwtl
ss
jno
jge
out
xor
sbb
ljmp
mov
dec
pop
jae
in
lods
dec
gs
mov
mov
lcall
leave
enter
imul
jne
sub
xchg
loopne
xor
out
cltd
ret
ljmp
ljmp
pop
xor
add
aaa
adcb
subb
fcmovu
mov
push
decl
outsb
ficompl
sysenter
cli
xor
cmp
mov
add
scas
decl
in
sub
cmp
xor
xor
outsb
in
sahf
addr16
addr16
fldcw
call
adc
cmp
shr
sahf
or
or
push
sbb
mov
jo
cmpsb
sbb
push
es
shlb
bound
dec
out
dec
aam
mov
mov
sub
in
insl
shll
push
fimull
es
call
stos
add
push
out
jno
dec
test
pop
or
adc
dec
lds
data16
xchg
clc
inc
test
add
fs
fcomps
pop
or
jbe
ficoms
leave
pusha
cltd
push
mov
loopne
incl
mov
outsb
sar
sbb
add
mov
jno
rcr
mov
push
jmp
call
pushl
mov
cmpsb
cmpsl
and
shlb
xor
call
mov
cmp
jle
inc
pop
rcl
mov
test
incl
mov
jmp
pop
scas
fstpl
arpl
fsubr
lea
decl
and
loop
int
arpl
iret
std
inc
push
sub
jg
fwait
cmp
mov
arpl
push
pushf
inc
sbb
sbb
out
cmp
sub
mov
xor
adc
push
insb
imul
sbb
mov
stc
xor
mov
dec
loopne
push
sub
incl
jmp
stos
and
in
jae
outsl
push
add
not
sub
pusha
jecxz
inc
imul
or
mov
xchg
pushf
push
cld
dec
aas
fs
jl
cli
jecxz
pop
scas
jg
jmp
scas
xor
fcmovnu
pop
mov
lret
mov
sub
test
out
and
pushl
enter
sbb
scas
or
xchg
sub
or
fincstp
inc
pop
inc
and
jp
mov
je
add
cmpsb
adc
mov
mov
popf
add
jo
mov
sbb
adc
out
mov
clc
addr16
cmp
jae
psubsw
jo
xchg
shlb
push
outsb
js
sti
xor
in
cs
mov
in
lahf
push
xor
imul
push
int3
mov
inc
mov
mov
inc
add
push
mov
mov
iret
add
cmp
outsl
icebp
fst
mov
inc
and
mov
adc
repz
sbb
jmp
push
sarl
sbb
sub
xlat
lds
xor
mov
xorl
loope
pop
dec
adc
mov
decl
mov
shrl
jo
mov
insl
cmc
mull
or
pop
mov
push
jl
inc
sub
mov
or
push
sub
les
dec
and
push
pop
sub
lret
adc
add
fisubs
sub
loopne
jmp
mov
fwait
lods
ljmp
lods
xchg
ret
mov
push
mov
scas
add
sub
pushl
mov
in
mov
out
sub
xor
lods
jbe
movsl
adc
sub
inc
repz
pop
push
pop
lods
mov
mov
fs
jmp
int3
test
sub
adc
leave
sub
pop
jg
leave
stos
ret
jbe
sub
add
pushl
dec
jg
lods
daa
push
xchg
cmp
in
adc
mov
sbb
jg
incl
mov
xor
sub
es
sbb
idiv
inc
jecxz
in
movsl
jns
cwtl
popf
pop
inc
xor
sbb
jb
add
hlt
push
push
fcom
decl
mov
sub
mov
sbb
leave
lcall
mov
inc
jmp
popf
popf
jbe
les
xchg
int
movsb
sarl
arpl
fmull
sub
push
adc
mov
sub
jo
inc
mov
xchg
jge
pusha
push
scas
adc
shr
out
stos
pop
cli
das
mov
add
lea
fcmovbe
jo
mov
xchg
scas
std
fisubrs
pop
mov
cs
mov
outsb
imul
sub
jmp
add
dec
and
loopne
insb
sub
mov
lcall
mov
push
mov
push
and
faddp
cmpsl
add
repnz
pop
cltd
outsl
adc
clc
dec
outsl
movsb
in
lods
mov
push
pop
lcall
add
push
mov
test
inc
adc
stos
cmp
mov
or
lret
and
dec
or
andl
ds
es
lcall
cld
incl
lahf
dec
xor
mov
push
rcl
push
fdivrp
call
lret
or
cli
adc
cmp
sahf
lret
imul
push
and
imul
test
int3
cmc
add
jae
je
inc
test
mov
add
inc
jmp
ljmp
jl
icebp
mov
and
mov
dec
outsb
xlat
dec
xchg
pop
aam
dec
xor
iret
pandn
cld
aam
dec
les
ret
ret
fcoms
dec
xor
jmp
xor
clc
nop
pusha
ljmp
bound
rclb
dec
mov
out
clc
test
lret
mov
ljmp
push
push
push
xor
lcall
mov
jge
loopne
lret
pop
or
pop
enter
outsb
gs
je
pop
clc
call
fwait
hlt
js
pop
mov
lret
cmp
ja
xchg
xchg
xchg
jno
call
jmp
subb
call
clc
or
xor
ljmp
jmp
mov
mov
movsl
les
sbb
xchg
sbb
add
xchg
les
ljmp
icebp
incl
xchg
pop
dec
add
inc
into
fiaddl
sub
dec
imul
mov
cmc
sbb
xor
inc
add
xor
into
cmpl
xor
pop
popa
mov
scas
mov
jmp
adc
outsb
jecxz
xor
and
jmp
cmp
inc
repnz
inc
repz
aad
outsl
movsw
or
ficompl
jg
xorl
cmp
or
call
jo
out
outsl
aad
cli
or
mov
jp
or
loope
loopne
xchg
data16
lret
insb
in
scas
jns
cmc
push
or
stc
lcall
out
mov
loopne
jg
je
or
stos
cli
scas
jnp
imul
jg
outsl
decl
popf
inc
sbb
xchg
mov
cmp
outsl
sti
cli
jge
ljmp
leave
icebp
xchg
xchg
lds
pop
mov
dec
xor
decl
ret
decb
jns
pop
jle
push
sahf
mov
jecxz
mov
xchg
lcall
subl
inc
adc
in
imul
pushl
cmpb
les
stc
scas
jecxz
adc
mov
mov
inc
mov
call
mov
packssdw
ss
fistps
pop
jb
mov
arpl
addr16
mov
call
sbb
fcoms
sbb
pop
jg
inc
stc
int
fists
cwtl
ficoms
out
das
icebp
jg
sarb
lods
aam
dec
xor
ss
dec
xchg
mov
pushl
aam
jle
mov
cmpl
cmp
push
xchg
cmp
seto
ljmp
add
movsl
clc
cmc
subb
pop
fwait
shll
push
mov
testl
pop
xchg
lcall
and
ja
fisubrs
mov
fldenv
push
adc
fistpl
dec
and
lea
cli
inc
sbb
pop
out
pop
loopne
ljmp
jecxz
lcall
jecxz
lret
dec
cmpsl
xchg
lock
push
test
cs
push
lcall
pushf
mov
rcrb
outsl
rcrl
push
jo
adc
mov
aad
lret
pop
jbe
jmp
and
lds
adc
in
inc
mov
inc
popf
ret
xor
jge
sub
popa
fwait
jnp
xchg
inc
pushf
leave
push
fsubrl
hlt
ljmp
cmpsb
mov
mov
nop
mov
pushf
push
mov
pushl
movsl
mov
loope
dec
lahf
cli
movl
orl
dec
clc
push
ljmp
in
cli
adc
push
cld
xchg
rorb
pusha
jg
fs
adc
xchg
icebp
lcall
icebp
pop
cs
popf
xchg
fwait
push
fsubrl
dec
popf
outsb
ja
orl
xor
jbe
pop
call
in
popf
cmp
cs
cwtl
xchg
popa
dec
in
cmpsb
scas
xchg
inc
sub
out
repz
pushl
dec
add
push
es
push
push
pop
or
jge
jns
jo
add
cmp
gs
in
jmp
dec
mov
xor
sub
fucompp
jmp
loopne
pop
std
mov
jg
lock
dec
dec
dec
xor
cmp
and
lahf
jl
cld
push
aam
into
shll
pushl
mov
cmp
out
rcrl
and
movsl
fdivs
push
mov
fsubl
movsl
incb
stos
sahf
dec
xor
icebp
mov
scas
lods
pop
test
pop
mov
clc
mov
hlt
in
mov
mov
dec
pop
pop
js
xor
lds
xor
addb
mov
cs
call
jno
pop
int
mov
ds
push
cmp
movsl
js
pop
jmp
call
jb
lock
mov
aad
cltd
inc
sbb
and
mov
and
pushl
jnp
mov
mov
inc
mov
daa
jecxz
jecxz
les
jl
lcall
inc
mov
jl
mov
pop
ljmp
hlt
push
cmpsl
scas
data16
shl
hlt
pusha
fbld
pop
pushf
testl
mov
jmp
mov
movsl
mov
fs
add
mov
in
mov
insb
ljmp
cmc
xchg
inc
and
es
sub
jmp
ret
add
mov
lcall
stc
or
xchg
jae
daa
imul
mov
into
unpckhps
fs
cmp
call
push
adc
add
adc
adc
dec
mov
mov
add
in
xor
add
test
mov
out
arpl
movsl
testb
jp
and
mov
in
mov
decl
or
scas
out
pop
mov
nop
add
or
jae
js
les
push
ja
sbb
jecxz
pop
lea
jle
or
push
loop
cli
adc
xor
adc
lahf
pop
out
mov
pushl
fldt
mov
lahf
loope
hlt
jbe
out
xor
orl
sub
mov
in
imul
pop
jl
pushf
hlt
lcall
sbb
repz
cmp
mov
mov
cmp
sub
ljmp
pop
xor
out
sub
and
xchg
int3
sti
dec
inc
jl
scas
or
lret
push
std
dec
nop
incl
dec
cli
bound
sbb
mov
push
cmc
repz
xor
jecxz
sbb
mov
mov
popf
bnd
push
ds
push
cltd
stos
leave
or
pop
movsl
cld
jg
mov
or
fildll
ds
test
shrl
ja
fsqrt
ljmp
aaa
mov
adc
push
out
icebp
aam
pusha
cli
mov
fisubrl
dec
fbstp
sub
aam
cmpsl
out
and
loopne
and
pop
inc
fstpt
fsub
mov
js
xchg
sub
xor
push
cli
std
out
adc
loop
imul
mov
mov
fs
loop
ljmp
xlat
lahf
jge
push
rclb
pop
out
mov
icebp
fstpl
fistl
and
cmp
mov
insl
leave
push
out
cmp
fimuls
std
loop
aaa
mov
sub
and
push
lcall
cli
adc
inc
shlb
pop
xor
cmp
sub
fst
imul
pop
sub
outsl
lock
jae
cmp
mov
push
arpl
cmp
mov
call
test
jecxz
jecxz
pushf
cld
push
inc
xor
mov
mov
outsl
cld
incl
test
xchg
aas
rcrb
sbbl
pop
nop
arpl
ljmp
arpl
mov
rorb
xor
repz
cmp
incl
lds
pop
fdivrp
test
out
lahf
xchg
and
jecxz
loopne
jnp
rolb
pop
and
cli
jg
cmp
hlt
cs
sbb
sbb
fidivl
data16
mov
or
iret
popa
ret
jnp
leave
call
jno,pn
cmpb
mov
mov
jle
clc
and
mov
xchg
into
sub
cld
jmp
mov
decl
jl
or
jg
scas
sub
shrl
mov
jle
cld
push
mov
out
sbb
adc
inc
sub
sti
movsl
sub
cmpsl
mov
ljmp
hlt
sub
in
add
inc
pop
gs
or
decl
stc
adc
stos
lea
pop
popf
fwait
mov
xchg
push
xor
mov
jmp
scas
pop
shl
push
sub
xchg
lods
mov
jecxz
pop
xchg
mov
popa
bound
fldt
add
pop
cli
cmp
pop
jge
mov
insb
data16
add
cmp
out
cmc
pop
mov
add
push
jmp
fcmovne
cmpsl
jl
dec
lds
pop
clc
lcall
sub
xchg
pop
cli
cmpsb
jnp
mov
xchg
push
fsubp
dec
in
lods
xchg
clc
inc
daa
dec
inc
xor
xorl
xor
loope
dec
js
nop
mov
jmp
xchg
adc
add
lcall
mov
cmp
rcr
push
jecxz
imul
incl
pop
fdivrl
xchg
rol
cmp
ja
shll
or
lahf
fdivr
dec
clc
xchg
xor
gs
sub
in
pushf
stos
mov
icebp
jge
xchg
stc
inc
push
inc
cmp
decl
cmc
push
xchg
aad
and
push
movsb
mov
pop
cmp
cmp
test
roll
test
lcall
and
sub
clc
je
ret
push
cmp
mov
test
mov
sbb
subb
out
aas
jecxz
jmp
aaa
cmp
leave
sbbb
les
dec
hlt
lcall
ficoml
cltd
outsw
testl
sub
gs
jp
fidivs
outsl
hlt
call
loopne
jb
jbe
jle
insl
and
fildll
dec
pop
loop
bound
cld
lahf
xor
in
xchg
out
daa
dec
ficompl
jne
cmp
dec
xor
xchg
fwait
pop
into
inc
dec
lods
stos
loopne
xchg
ss
or
mov
mov
mov
lcall
lret
jmp
add
gs
dec
jmp
xchg
sub
std
addl
lods
decl
sub
mov
jno
adc
jno
add
mov
iret
mov
fmuls
aaa
mov
cmpsb
cmpl
div
jp
inc
call
sar
add
mov
dec
sub
mov
inc
mov
mov
jp
sbb
cmpb
insl
ffree
out
jg
lcall
das
fistpll
jb
and
rorb
sub
sub
fdivrs
cmp
out
fimuls
dec
pushl
push
xchg
out
sahf
jg
jbe
sbb
mov
in
clc
push
pop
sbb
sub
sub
pushl
pop
test
pop
cmp
sbb
sahf
and
sub
dec
andb
mov
je
or
mov
inc
movl
ljmp
inc
inc
sub
movsb
out
in
xor
cmp
aad
repz
mov
rcrl
repz
and
push
fwait
popf
ret
or
add
decl
std
pop
xor
inc
inc
xor
and
jae
or
outsb
popa
incl
data16
incb
bound
jnp
outsl
mov
lahf
bound
daa
cmp
mov
les
pushl
cmpsb
pmaxsw
sub
dec
jne
sbb
test
repnz
decl
and
sub
xor
out
pop
mov
pop
mov
decl
sub
sbb
or
mov
xor
jg
mov
sysenter
loop
les
cmp
pop
sbb
sub
xchg
sarl
jecxz
addr16
js
push
and
lea
jl
xlat
push
sti
decl
test
jle
int3
aaa
ret
imul
mov
data16
pop
push
das
lock
jp
jne
inc
sarl
aam
sub
add
ljmp
sbb
push
push
fisttps
shlb
sbb
cmp
mov
addr16
sbb
fs
hlt
or
or
ljmp
jae
les
adc
outsl
mov
adc
call
nop
in
decl
push
dec
dec
outsb
push
lcall
xor
dec
in
dec
sarb
aaa
add
push
ds
dec
jecxz
popa
adc
xor
int3
cld
mov
cs
jmp
popa
idivl
pusha
sarl
cmpsb
mov
add
out
dec
std
fdivrl
mov
pop
test
mov
incl
inc
cmp
out
out
xor
test
lods
push
cmp
push
scas
add
decl
cmp
mov
fsubrl
push
mov
and
sbb
movsl
push
pop
pop
or
adc
sub
lods
aaa
xchg
or
jg
jb
add
cli
mov
dec
and
cmpsb
jmp
mov
mov
popa
ficomps
mov
inc
stos
outsb
push
nop
mov
inc
sahf
adc
loop
adc
nop
aad
xor
mov
orb
ljmp
movsl
xor
sbb
and
js
jne
data16
pop
cmp
mov
inc
out
mov
in
mov
lahf
push
cld
jmp
in
push
clc
movsl
sbb
jecxz
push
std
sarb
xchg
push
sbb
or
es
mov
fwait
mov
jb
xchg
lock
lds
sub
mov
xor
iret
cltd
pop
mov
icebp
cltd
adc
outsb
or
sub
call
mov
lret
xchg
dec
mov
ljmp
es
ljmp
test
mov
int3
dec
lret
push
fwait
push
adc
dec
arpl
rorb
fists
adc
xchg
aam
mov
gs
les
lock
icebp
loop
fidivrs
ljmp
cmp
adc
jno
out
cld
insl
push
mov
test
stos
jg
cmc
cmp
xor
decl
clc
xor
push
scas
lret
mov
cmp
add
pushf
insl
or
and
jns
lcall
mov
jb
fsubl
lcall
mov
cmp
pop
out
and
sar
fisttpl
ljmp
jnp
loop
out
jns
std
lea
iret
insb
fsubrs
mov
lcall
fstps
mov
jmp
sti
pop
xchg
fcompl
xchg
call
clc
jmp
test
je
pop
mulb
sub
out
lcall
cmp
scas
addl
mov
shrb
pop
push
mov
sbb
repnz
cmc
dec
pop
mov
push
push
fidivrs
lret
cltd
pop
repnz
fdiv
jge
fs
stc
xchg
out
rorl
incl
push
dec
mov
dec
repz
push
mov
dec
mov
std
aaa
cli
fistps
lea
fisttpl
stos
mov
dec
arpl
cmc
inc
lcall
fucomi
mov
sbb
ss
xor
out
mov
jno
dec
sti
add
dec
xor
shl
dec
out
mov
bound
pop
fldl
xchg
clc
jg
push
jge
mov
mov
incb
jl
cmp
out
ljmp
mov
inc
ss
jns
dec
in
int3
jo
sbb
xacquire
fbstp
into
ljmp
incl
popa
inc
out
dec
xchg
iret
aad
mov
fnstenv
jle
int3
popa
and
bswap
bound
ljmp
jne
mov
xor
popa
sahf
sub
ficompl
es
dec
sbb
lods
in
mov
out
incl
in
add
mov
adc
xchg
aas
cmp
stos
pop
clc
cld
es
test
jg
decl
dec
or
clc
outsb
adc
push
push
pop
sub
dec
cltd
imul
arpl
scas
push
inc
lock
jge
fidivrl
sub
es
sub
jmp
cmp
cld
aam
jle
lret
clc
lcall
movsl
enter
test
jecxz
ljmp
inc
cmp
lret
test
or
lock
mov
das
fmuls
dec
les
or
push
push
add
pop
jl
mov
hlt
lcall
xorl
adc
cli
push
popf
jns
inc
jecxz
scas
push
add
fcmovbe
xchg
push
shll
pop
aas
or
lret
xor
mov
mov
popa
add
push
jb
sub
push
sbb
decl
dec
bound
push
js
shr
outsb
and
xchg
loopne
pop
clc
decl
lret
dec
mov
fdivrl
into
mov
jp
pop
lea
ljmp
xchg
cmp
lret
sub
ja
pop
pushl
rclb
leave
sub
jo
inc
int
mov
jle
popf
push
shrb
pop
mov
mov
in
fcmovne
mov
cmpsl
leave
mov
lods
xchg
mov
call
and
subb
out
mov
inc
jae
or
lcall
rcr
into
xor
mov
mov
jo
or
mov
dec
fwait
test
outsl
mov
sarl
shll
xor
push
or
adc
mov
lcall
mov
cwtl
mov
je
xor
dec
xor
out
lods
and
jl
fnstcw
jbe
insl
dec
jns
mull
std
or
mov
mov
push
lock
in
push
jne
cli
mov
decl
push
je
shlb
repz
iret
mov
mov
adc
add
mov
jl
jge
pop
xchg
mov
iret
cs
pop
int3
and
in
adc
xchg
pushl
clc
jbe
out
mov
cmc
jmp
cltd
rolb
sahf
test
dec
hlt
incl
inc
xor
call
add
push
loop
xchg
xchg
imul
jg
push
and
xor
imul
aam
jge
dec
or
inc
call
sti
push
mov
andb
xor
repnz
lret
outsl
icebp
pushl
sub
xchg
jno
adc
scas
out
and
jmp
dec
outsb
xor
and
add
xor
lock
jno
or
cmpsl
loopne
sub
test
mov
es
or
incb
jb
pop
xchg
fisubs
xchg
les
inc
pushf
cmpsl
movsl
dec
jbe
fwait
cli
xor
push
adc
sti
decl
insb
add
jno
cmp
add
push
out
cmp
decl
add
repnz
pop
pop
loope
aaa
lret
mov
lea
mov
sub
or
call
xchg
ljmp
es
jecxz
and
mov
movsl
std
mov
jg
push
lahf
fstp
jo,pn
loope
push
fistl
and
jg
adcl
imul
sbb
lret
dec
sbb
mov
pop
clc
mov
pop
mov
xchg
mov
lret
or
mov
clc
push
enter
lcall
jmp
enter
loopne
test
mov
popf
add
mov
outsl
and
pushl
fadds
insl
fcos
add
inc
add
cli
clc
adc
adc
push
andb
jo
sub
mov
call
fnstsw
ljmp
shll
jp
loopne
not
xchg
stos
mov
ja
cltd
ds
incl
pop
push
sbb
lahf
sbb
adc
pop
xchg
lods
push
movb
and
decl
mov
jmp
lods
inc
dec
aam
and
mov
pushf
in
stc
outsb
fidivrl
dec
incl
jae
adc
popf
lcall
lcall
call
or
dec
lea
push
jb
xchg
add
add
decl
dec
sbb
fistpl
pop
outsb
fsubr
sbbb
lret
jae
call
and
mov
mulb
mov
xchg
jl
mov
decl
jp
pop
sahf
jb
mov
xchg
out
sbb
stos
repnz
repnz
sbb
ljmp
lds
adc
das
insb
xchg
push
test
push
repz
or
add
xor
divb
xor
fildll
mov
push
push
mov
inc
mov
jae
ljmp
inc
shlb
scas
fldcw
stc
leave
cld
scas
pop
nop
mov
lahf
pop
push
dec
push
cwtl
std
inc
ljmp
mov
pop
cmp
in
js
push
pushf
push
pop
and
idiv
das
mov
pop
or
aad
cltd
mov
ljmp
adc
and
mov
sbb
mov
insb
or
pop
jmp
call
outsb
cmc
mov
insl
xlat
xor
push
pop
push
cli
je
add
test
xchg
dec
decl
pop
test
xchg
icebp
outsb
aad
push
pop
sbb
ds
jmp
cmp
dec
jecxz
ljmp
cmc
cmp
cld
aad
rcrl
xchg
jl
ficoms
pop
mov
xchg
xchg
mov
data16
cmp
outsb
loope
orl
mov
in
sub
add
stos
leave
cmp
jmp
test
jl
fwait
popa
insb
cmp
shrl
cltd
jp
mov
cld
call
fdivl
in
pop
stc
test
inc
outsb
iret
pop
movsl
mov
outsl
lock
out
fs
lcall
jae
push
or
mov
hlt
jl
mov
iret
sbb
mov
push
jmp
out
or
pop
daa
mov
decl
sbb
int3
test
inc
mov
aas
in
jecxz
cmp
movsl
push
popa
stos
sar
jg
iret
xchg
cmp
call
add
ljmp
pop
and
ret
mov
clc
ret
jmp
jns
or
int
jmp
jg
push
pop
lds
int3
ds
les
shrl
mov
jns
push
call
jg
jg
ret
scas
ja
cmp
out
outsl
cmp
add
xchg
jmp
jb
fucomip
push
xchg
cs
movsl
push
and
cmp
pop
arpl
lods
stos
std
popf
mov
jge
ja
sub
out
xor
in
iret
fstpl
decl
sahf
xor
xor
and
jg
cmp
out
fucomip
or
lock
inc
xchg
repz
jo
fcomps
sarl
sbb
mov
push
into
sub
dec
ret
mov
dec
divb
jb
xor
cld
dec
outsl
outsl
fimull
sbb
test
dec
mov
fsub
xchg
mov
pop
notb
cwtl
jmp
loop
stc
sub
scas
fnstsw
pop
adc
jb
push
mov
pop
push
ljmp
aad
dec
xchg
adc
in
insb
inc
jae
adcl
xchg
gs
rorl
fucomip
aaa
je
cmp
sbb
mov
ss
xchg
push
fs
push
add
fildll
and
mov
fcmovb
sti
xchg
mov
loope
mov
jae
fistpll
inc
xor
aad
scas
lea
push
inc
int
negl
aad
data16
incl
or
pop
shl
stc
loope
adc
es
adc
jmp
nop
imul
insb
cmc
xor
addb
mov
adc
sahf
pop
aam
daa
lods
xor
jle
decl
das
negb
rclb
add
push
int
ds
les
push
filds
iret
outsb
push
aam
fcos
lcall
mov
push
ljmp
movaps
lods
cmp
stos
testb
mov
dec
fwait
repz
enter
incl
xor
nop
decb
and
ja
jno
dec
out
decl
sbb
sbb
cmp
pop
repnz
push
incb
add
xchg
pushl
test
dec
jp
cmp
rcrb
jo
xor
dec
cmp
loopne
dec
push
out
adc
filds
jne
scas
test
aam
push
pop
dec
out
stc
lahf
cltd
inc
dec
lcall
outsl
push
fisubs
inc
dec
mov
mov
imul
cmp
mov
xchg
incl
enter
mov
data16
and
push
fs
je
jg
outsl
cld
out
or
mov
jl
sbb
clc
call
mov
rcrl
clc
jp
or
mov
and
inc
cmp
pop
loopne
fwait
ja
mov
lahf
stos
dec
pop
sti
pop
inc
cwtl
or
mov
xor
sub
ljmp
and
xchg
add
pop
outsl
lock
cmp
inc
pop
fiadds
bound
test
popf
ret
ljmp
shrl
sbb
pop
adc
popf
mov
test
out
pop
dec
pop
insb
mov
pop
lcall
std
in
xchg
fisubrl
mov
mov
mov
leave
push
int3
jns
jb
test
cs
out
pop
out
xor
xchg
imulb
push
push
and
idiv
jg
pushf
push
push
or
sbb
cmc
movsl
hlt
pop
movsb
test
in
arpl
or
push
pop
pushl
decb
std
outsl
lock
inc
loopne
out
enter
cmp
sub
lods
call
dec
movsl
sbb
orb
jp
enter
std
test
dec
cmc
testb
sbb
mov
xchg
mov
xor
in
mov
pop
cmpl
hlt
add
in
lcall
adc
cmpsb
je
sbb
fldcw
jmp
pop
fcomp
cmpsl
dec
and
icebp
incl
sbb
mov
jbe
jnp
lahf
inc
and
mov
cmp
cmpsl
push
pop
jb
add
push
fwait
or
mov
data16
pop
mov
pop
hlt
mov
rorl
mov
in
mov
sar
fildll
lods
or
sub
push
test
or
xor
inc
xor
lahf
and
cmp
xorl
cmp
add
dec
dec
test
outsl
int
lea
clc
test
incl
out
movsl
dec
dec
int3
push
arpl
push
jb
mov
push
sbb
popa
push
xchg
scas
sahf
scas
mov
and
outsb
hlt
ljmp
pop
xchg
pop
push
les
jge
sar
inc
filds
mov
mov
jge
adc
or
pop
inc
pop
shrl
cmc
outsl
lods
pop
js
lcall
mov
loop
xor
lret
and
fwait
jge
push
cmpsb
or
mov
cld
cs
mov
push
push
xchg
popl
sti
lods
decl
cwtl
popl
push
xor
orb
data16
or
pushf
aad
jp
int3
push
xor
sub
std
mov
sahf
fstl
pop
cmpsb
int3
cmp
mov
inc
mov
ljmp
lcall
data16
inc
std
push
loop
xchg
mov
jge
xchg
das
inc
mov
lcall
lods
fcmovnbe
ja
fcmovbe
push
push
sbb
test
or
in
mov
dec
jmp
sar
call
push
out
pop
cmpb
popa
ljmp
ja
mov
test
ss
or
cld
jo
sbb
icebp
mov
es
add
xchg
dec
pushl
cmp
push
add
or
out
jg
jmp
popa
mov
push
std
jae
mov
jle
mov
decl
hlt
fimull
repnz
pop
shrl
cwtl
int
xor
mov
push
inc
ja
pop
ret
inc
jo
das
shlb
ret
sbb
mov
call
ds
daa
sbb
jmp
add
enter
jg
clc
cli
lods
je
xchg
sub
arpl
mov
je
test
push
inc
fsts
pushl
push
inc
les
fcmovne
arpl
in
aaa
shlb
adc
pushl
lahf
or
xchg
sbb
clc
mov
mov
test
movsl
es
aaa
js
ss
mov
jbe
mov
js
cmpsb
pop
jbe
aas
inc
xlat
push
mov
std
in
enter
cli
ljmp
fstpl
ss
mov
cmp
ljmp
insl
decl
mov
dec
pop
jl
hlt
test
push
mov
xchg
jmp
aad
outsl
imul
cltd
push
sub
jmp
fdivs
imul
mov
cmc
fistl
sub
xor
mov
loope
ret
cli
ljmp
push
sub
mov
lods
mov
shrl
aad
int
rclb
outsb
xlat
add
in
imul
push
inc
ljmp
mov
std
xchg
cmc
sarb
pop
rcl
and
je
int
in
cmp
les
incl
ljmp
cli
cs
dec
lret
js
test
mov
cs
aaa
movsl
cs
jecxz
dec
xor
xchg
sbb
shl
into
stc
jno
pop
jmp
stos
xchg
or
xchg
test
mov
stos
ja
push
xor
testl
incl
jmp
icebp
mov
out
shl
cli
add
cmp
jg
pop
xlat
popa
push
push
pop
xchg
lods
icebp
call
loop
cmc
jp
cmpsl
mov
adc
adc
dec
hlt
jne
and
ljmp
mov
mov
repnz
pop
test
les
les
mov
ljmp
jmp
enter
testb
mov
add
or
hlt
mov
call
push
cmpb
lret
jb
cld
lcall
and
sar
notl
test
xchg
adc
mov
mov
cmpsl
insl
cmp
cmp
push
into
and
push
repz
in
cs
inc
lods
cli
adc
loope
shll
xor
mov
fstps
pop
cli
jle
mov
icebp
pop
cli
decl
fucomip
stc
fmuls
inc
xchg
push
repz
ficomps
test
mov
pop
dec
out
dec
or
mov
dec
shrb
and
inc
lcall
add
jno
jae
push
out
hlt
inc
mov
in
mov
jmp
jnp
jno
pop
pusha
sub
in
jecxz
push
mov
jge
lock
jns
mov
in
fnstenv
arpl
mov
mov
cwtl
jp
or
dec
stos
push
insl
jo
lds
clc
fucomip
inc
mov
adc
dec
sub
movsb
fwait
mov
push
mov
lea
jae
cmpl
or
jnp
jns
xchg
dec
leave
dec
mov
aam
aam
push
lahf
jge
mov
lea
jnp
jmp
mov
pop
jmp
jle
out
mov
subl
cmp
fnstcw
js
std
stos
add
inc
pop
sahf
push
sbb
dec
inc
lods
loop
dec
ret
sub
clc
pop
loop
das
push
lds
addr16
decl
push
pop
pop
adc
pop
bound
and
insl
push
cmp
mov
cmp
or
pop
xchg
cbtw
and
movsb
insl
jb
das
pop
ret
nop
outsl
xchg
push
shl
lock
jmp
fbstp
aam
sub
push
inc
adc
mov
jge
push
ljmp
mov
mov
fmull
and
push
lahf
and
sub
jns
call
mov
jp
daa
add
paddq
dec
jbe
in
mov
sub
xor
sub
ljmp
data16
arpl
shr
inc
mov
xor
mov
jo
ljmp
std
decl
scas
shlb
rcrb
movsb
mov
inc
jbe
push
shlb
pop
dec
mov
lret
xchg
sarb
adc
cmp
icebp
xor
iret
xchg
fldcw
ljmp
cld
jo
inc
xchg
inc
add
mov
push
push
aam
fstpt
aas
jmp
jns
sub
mov
fwait
add
xlat
call
push
loop
lcall
cmp
subl
pop
out
jl
xchg
ljmp
div
out
mov
xor
xchg
arpl
jle
repnz
std
inc
decl
adc
add
cwtl
add
inc
or
xchg
ja
out
dec
pop
push
jmp
cmc
lcall
aaa
push
lret
aad
push
mov
xchg
fisubrl
cmc
xor
cmp
mov
shrb
lods
xchg
mov
arpl
xchg
movsb
data16
xor
lret
mov
ljmp
adc
mov
stc
and
es
pop
or
lret
sbb
lcall
jmp
mov
stos
lock
jae
ja
push
mov
cmp
inc
adc
add
or
mov
mov
aad
mov
adc
and
and
lock
cld
pop
or
stos
aas
in
push
sub
mov
jbe
mov
std
add
not
shll
pop
sbb
or
pushl
clc
pushl
fsubs
flds
mov
mov
cmp
jg
ljmp
insb
jmp
jbe
mov
popf
lock
vpaddusb
mov
in
lea
xchg
jg
and
lea
adc
mov
jg
out
fildll
test
mov
jmp
lret
xchg
mov
sarb
mov
mov
push
packuswb
jnp
lahf
mov
sub
lock
sbb
sub
ljmp
sub
mov
jle
xchg
pop
sub
sub
push
decl
leave
test
dec
dec
or
bound
push
das
imul
int3
lds
ffreep
fwait
sbb
scas
xchg
mov
incb
scas
push
sub
or
mov
call
jbe
lret
test
cmpsb
xor
adc
pop
mov
ret
dec
jge
and
sbb
in
fldt
and
stos
dec
mov
incb
imul
fucomip
sub
loope
and
jmp
xchg
ja
xor
ljmp
cmc
pop
mov
lret
aas
aaa
mov
repnz
jp
mov
mov
decl
aam
jmp
cmc
lret
sub
ljmp
mov
sub
xchg
aaa
cld
sbb
push
cld
push
insl
out
loop
push
int
adc
xlat
sub
icebp
movsl
aaa
sbb
in
in
and
ljmp
outsb
jmp
cmp
xor
out
in
and
mov
mov
mov
divl
fwait
enter
ficomps
mov
decl
sub
dec
lcall
outsb
sbb
out
mov
jp
adc
push
adc
mov
cmc
ret
inc
icebp
loop
cmp
fwait
pop
add
sbb
fprem
mov
add
outsl
hlt
jmp
or
sub
inc
mov
bswap
sub
stc
mulb
push
js
mov
sbb
inc
mov
xchg
mov
add
xor
iret
adc
mov
call
inc
aam
mov
aam
pop
aad
bswap
leave
scas
add
pop
pop
in
ljmp
es
mov
mov
pop
xor
push
mov
pop
loopne
imul
push
jbe
cwtl
add
popf
int
lea
sbb
mov
das
out
in
jg
jg
ja
push
and
jb
pop
lret
dec
jg
arpl
cltd
js
push
xor
cmc
adc
push
mov
stc
add
push
push
das
das
pop
ljmp
dec
repnz
push
sar
adc
mov
call
in
push
and
add
ret
in
mov
push
xorb
cs
mov
xchg
jmp
js
into
je
jns
fs
cmp
xchg
not
pop
ror
mov
call
cmp
cmp
jnp
jne
gs
mov
add
incl
in
repz
cmp
jns
nop
mov
add
incl
jmp
sti
cmp
dec
into
xor
sbb
push
sub
dec
pop
ljmp
mov
stos
mov
call
iret
insl
aaa
sub
adc
xchg
cli
in
out
cld
pop
lock
enter
fidivrl
pop
ljmp
and
inc
xchg
and
movsl
loopne
dec
das
or
pop
shrl
jg
mov
xorb
jns
stos
fdivs
rol
jl
icebp
mov
and
pop
fisubs
movsl
fisttpl
test
and
mov
rcll
or
arpl
adc
dec
iret
jg
int3
adc
lods
jmp
loope
inc
dec
push
lods
hlt
and
pop
inc
cwtl
shl
repz
js
dec
std
jmp
rol
fcmovnb
test
xor
rcr
push
imull
mov
call
stos
dec
push
rclb
in
les
push
push
add
lahf
cwtl
push
sahf
repz
jne
pop
loop
mov
push
mov
roll
adc
dec
push
xchg
xchg
xor
cmp
xor
sub
ljmp
test
idivl
in
decl
bound
adc
fnstsw
push
mov
xor
mov
roll
jne
adc
dec
negb
aam
enter
lret
mov
cmp
push
cmpsl
gs
mov
pop
push
jmp
das
icebp
call
fcmovnbe
push
xor
inc
jb
movsb
inc
fbld
cmp
dec
iret
ljmp
mov
rcrl
xchg
push
pop
jmp
mov
out
jns
or
outsl
sbb
cmpsb
mov
sbb
xchg
decl
lea
in
test
jb
and
push
sahf
rclb
xchg
lock
xchg
add
subb
pop
mov
out
jl
jns
sti
lfs
sar
inc
out
mov
bound
and
add
into
push
dec
popf
mov
jg
mov
ds
fmull
lret
mov
fadds
and
es
xchg
ss
sbb
repz
push
jp
xor
repz
jmp
inc
rorl
pushf
dec
dec
lock
mov
aaa
jbe
rcrl
sbb
lcall
ds
addr16
sbb
lods
cmp
mov
iret
call
pop
xor
mov
jg
sub
and
clc
inc
or
push
push
adc
shrb
pusha
xchg
sbb
mov
incb
sub
xchg
or
add
fstpl
mov
pop
imul
in
test
sbb
stos
mov
cmp
fists
mov
jmp
mov
xor
mov
das
lock
scas
sub
adc
jp
outsl
insb
cltd
sub
mov
sub
addb
mov
jmp
in
popa
push
andl
movsb
arpl
xor
jo
cmp
jmp
stos
enter
flds
jno
das
jo
or
inc
loopne
aam
mov
xor
ret
mov
arpl
sbb
ljmp
mov
jg
add
pusha
rcr
and
loop
xor
cmc
incl
and
jo
ds
cli
cmpsb
stc
aad
add
inc
cmp
int
imulb
mov
mov
aas
movsl
repnz
adc
and
inc
lahf
inc
in
dec
fdivrl
ror
mov
jg
lock
lds
mov
mov
xor
pushl
clc
das
lahf
xchg
mov
mov
gs
out
aam
sar
lcall
inc
nop
frstor
pop
jo
or
lahf
push
out
add
inc
jb
dec
mov
add
adc
cld
out
inc
xor
in
outsl
pop
dec
xlat
into
ljmp
xchg
mov
mov
sub
xchg
ss
mov
lds
xor
fcos
fnstsw
test
pop
mov
cld
stos
and
push
sti
icebp
cmp
or
mov
fucomip
dec
loopne
mov
cmpb
adc
stc
insl
in
test
and
lcall
mov
repnz
shl
insl
adc
movsl
lea
pop
aas
pop
xchg
sbb
ljmp
aas
lods
mov
push
pop
push
push
pop
out
dec
repnz
sahf
ds
pop
jg
je
mov
fistl
sbb
sbb
add
jbe
fucomip
pushl
inc
or
and
and
cltd
loopne
loop
ret
add
push
decl
cmp
mov
out
jbe
incb
ds
sbb
sbb
cld
mov
sub
fucomip
call
aas
pop
xchg
lret
and
daa
jae
in
adc
jecxz
add
arpl
test
movsb
lds
jp
scas
addr16
inc
nop
js
test
cmp
mov
test
push
out
xchg
imul
rcpps
cld
decl
out
fwait
mov
push
pushl
sbbl
inc
scas
dec
or
dec
out
es
xchg
xchg
cli
pop
cli
jmp
lea
into
stos
ljmp
dec
inc
inc
xlat
mov
arpl
ds
icebp
lcall
push
push
xchg
inc
rorl
es
adc
mov
push
fildl
std
mov
cmp
cmp
mov
sahf
adc
mov
ljmp
ret
cltd
jnp
inc
sbb
push
nop
clc
bound
fsubrs
pushl
jne
dec
pop
xor
add
cmp
mov
loopne
mov
loop
add
sbb
pushf
xchg
sbb
ljmp
add
scas
sbb
lcall
ret
mov
imul
or
push
sahf
test
outsl
dec
jns
outsl
loope
xchg
and
lds
les
inc
xchg
inc
rorl
mov
mov
cs
incl
mov
xchg
ljmp
add
inc
cld
inc
pop
aaa
cmc
into
leave
sub
mov
cmpsl
aad
pop
jmp
mov
js
stos
pop
mov
lds
mov
sub
push
decl
sbb
sbb
mov
pushf
dec
cli
or
mov
mov
lcall
pusha
xor
cmc
cwtl
ljmp
sub
xchg
call
xchg
xor
dec
ljmp
mov
out
sbb
int3
mov
inc
dec
ljmp
lea
mov
mov
in
sbb
notb
aad
fistpll
inc
cmc
fstl
jo
sbb
push
pop
mov
mov
int
or
daa
adc
mov
xlat
xor
ret
xor
sub
incl
in
popa
in
aas
xchg
xlat
sbb
mov
sub
je
in
adc
and
call
push
sti
imul
jl
push
bound
xlat
push
jb
incl
mov
orl
es
repz
out
jg
pop
and
arpl
or
push
ret
add
and
sti
and
jecxz
std
incl
arpl
xchg
or
popf
cmc
call
cld
jns
jg
stos
sti
cmpsl
test
push
xchg
push
sub
cld
ja
stos
pop
pop
push
lods
js
mov
lods
jmp
ret
mov
push
dec
movsl
fdivr
dec
xchg
stos
mov
fcomip
push
movsb
icebp
push
or
scas
out
pop
adc
pop
cmp
sar
ljmp
push
test
scas
dec
jp
mov
cld
or
jnp
push
jg
adc
sbb
scas
mov
push
mov
push
sbb
imul
lret
loopne
mov
pop
push
mov
daa
sbb
bound
xchg
pop
sub
pushf
pushl
nop
imull
adc
pop
pop
lock
je
add
in
notb
xchg
cli
fildl
or
pop
pop
add
outsl
fbld
cli
in
or
push
pop
inc
adc
clc
leave
mov
aas
cmp
xor
lcall
dec
mov
jl
cs
jle
pushf
push
pop
xchg
icebp
incl
and
sbb
mov
sbb
pushl
mov
or
cmp
inc
pop
incl
test
mov
test
inc
es
mov
jg
mov
in
pop
stos
pop
lods
dec
mov
adc
xchg
adcb
leave
fbstp
pop
clc
push
mov
ds
mov
jae
inc
push
and
sbb
lahf
cmp
ljmp
adc
cmc
xor
pop
and
decb
les
and
push
insl
mov
pop
cmp
pop
ss
cmp
lock
sbb
notl
push
loop
lods
push
xchg
push
or
shlb
sub
cmp
in
adc
ret
aad
cmc
scas
jg
sbb
jmp
test
jbe
hlt
mov
push
xchg
test
andl
jle
std
out
and
test
sub
mov
mov
lods
jg
fldl
mov
dec
sub
jge
xor
add
incl
mov
int3
sub
push
pop
pop
les
mov
pop
test
in
jmp
clc
push
leave
shr
jecxz
or
mov
or
lret
push
sub
cld
and
jle
or
cmp
mov
shlb
out
sbb
icebp
lods
ljmp
mov
push
sbb
mov
test
sti
mov
je
push
nop
inc
xor
xchg
fidivs
ret
in
gs
sbb
stos
rcll
mov
dec
and
test
inc
sub
add
lock
lods
inc
mov
cli
shll
add
mov
mov
sarl
jge
aaa
dec
lcall
dec
sti
sub
enter
lcall
lret
leave
jecxz
sti
je
mov
cli
sbb
xor
je
mov
cwtl
sbb
idivl
pusha
and
fcoml
dec
jnp
mov
mov
daa
iret
pushf
jns
jp
leave
jo
mul
data16
sbb
pushl
insb
popa
scas
cmp
mov
test
jle
into
aad
xor
pushl
cmp
sbb
mov
sub
in
fistpll
fdivr
out
out
sti
and
call
cmp
add
fwait
insl
imul
jle
into
repz
inc
aad
adc
and
push
mov
or
les
push
mov
daa
dec
mov
xchg
xor
pop
fs
push
jmp
clc
ja
pop
clc
scas
cmp
sti
mov
pop
iret
inc
or
lcall
jge
test
or
fwait
orb
inc
aas
mov
inc
sarl
xor
mov
in
nop
mov
outsl
fwait
push
dec
adc
lds
dec
mov
loop
or
loopne
lea
adc
mov
jae
sbb
incl
push
sahf
in
push
jge
add
dec
sub
xchg
cli
mov
push
xchg
dec
mov
int3
jb
ror
or
loopne
lods
push
jg
xor
cmp
xchg
mov
cmp
mov
imul
and
jle
sti
movsb
cmp
mov
jmp
push
cmpsb
and
aad
test
cmp
sbb
es
fs
push
push
test
sub
pusha
or
or
adc
sti
mov
jmp
int3
sub
push
incl
fwait
xor
ja
sub
push
sub
fisubrs
sbb
aaa
or
lcall
add
push
pushf
jae
jo
sbb
pop
mov
pop
xchg
jecxz
scas
fstl
mov
push
xchg
push
gs
icebp
adc
adc
pushl
fbstp
pop
cs
jmp
cwtl
dec
fs
mov
push
cli
jo
inc
push
mov
sbb
xor
incl
mov
cltd
ljmp
inc
fistps
adc
mov
cmp
icebp
jg
pushl
dec
aaa
mov
mov
push
stos
or
rcrl
jb
push
roll
mov
jecxz
jle
loope
repz
mov
mov
jmp
sarl
mov
out
push
movsl
idivl
dec
cmp
orl
movsl
inc
call
roll
jne
ja
mov
stc
lock
mov
inc
sbb
outsl
lock
xchg
sbb
mov
lret
pop
scas
pop
test
stos
lcall
cld
decl
loopne
pop
jg
in
pusha
push
or
jg
das
lret
sbb
jecxz
incl
sbb
jp
jae
iret
mov
mov
jbe
fcoml
rol
pop
sbb
imul
lea
loopne
loope
or
push
stos
jl
xor
incl
push
dec
cld
push
das
cmpsb
jp
xorb
test
stos
dec
out
pusha
or
xchg
mov
jg
dec
push
inc
mov
mov
mov
adc
stos
jae
pusha
and
ret
jmp
out
icebp
xchg
jae
js
mov
push
cmc
test
decl
push
popa
les
mov
shrb
mov
jle
cmp
mov
xlat
sahf
sub
outsb
dec
test
in
mov
xor
mov
pop
inc
rclb
inc
mov
lcall
xchg
pop
adc
cmp
ret
shlb
dec
adc
mov
push
xchg
add
movsb
sub
fstl
push
mov
and
add
mov
add
in
ret
pop
ret
out
call
lahf
fwait
push
movsb
sub
test
xor
divl
jne
stc
decl
jo
outsb
aad
shlb
pop
jmp
dec
pop
inc
push
fcom
into
fadd
and
mov
fistl
cli
inc
xchg
ret
mov
add
jo
pusha
jecxz
mov
or
call
jbe
mov
out
ds
movsl
jecxz
add
pushl
sub
push
imul
adc
das
lods
and
push
mov
pop
pop
jae
push
cld
mov
cmp
fidivrl
outsl
cli
mov
test
xor
std
outsl
icebp
mov
repnz
xchg
dec
pop
mov
pop
pop
push
or
jno
xor
xchg
loope
stos
dec
mov
ret
push
incl
xor
cmpsl
and
fildl
outsl
and
dec
push
inc
outsl
hlt
fistpl
jne
lahf
lock
stc
repnz
sbb
call
push
cmc
add
sbb
subb
lods
push
bound
xchg
stc
push
aam
jle
cmp
popa
push
fistl
pop
xchg
xchg
dec
sub
lods
mov
lcall
lock
fnstcw
push
inc
rcll
fxtract
cmc
sub
xchg
addr16
jmp
push
outsl
imul
lods
pop
aas
inc
mov
xor
pop
insl
or
xchg
cmp
fucom
das
hlt
ljmp
mov
or
sbb
or
repz
fstpt
jg
shrl
stc
sbb
ja
xor
push
lcall
fdivs
jl
stos
add
or
and
push
xor
in
and
dec
ljmp
sub
sar
mov
pusha
test
repnz
xchg
jnp
lret
jmp
daa
lods
jbe
and
inc
and
hlt
movaps
cmp
idivl
inc
dec
dec
push
mov
push
call
add
popf
jmp
cmp
test
fmull
scas
mov
inc
jbe
xchg
scas
and
pop
jno
sub
movsb
outsb
mov
inc
fldcw
call
rolb
dec
mov
or
xor
xchg
mov
test
push
lock
decl
add
loopne
rorl
xchg
cmp
int
ljmp
jns
rclb
push
xor
mov
and
mov
pop
mov
ljmp
jmp
xchg
mov
shlb
repz
out
xor
add
bound
push
and
mov
imulb
xchg
cmp
fldt
aaa
pop
mov
lods
cmp
inc
std
adc
adc
xor
sub
adc
lcall
les
push
js
inc
sbb
ja
nop
jbe
mov
pop
ja
fstp
xorl
mov
jg
cld
or
cmp
jmp
cld
call
pop
out
mov
pop
testl
addb
mov
jbe
jg
inc
add
push
lea
stc
aaa
mov
repz
and
ret
push
jg
jo
mov
sub
adc
ja
and
xchg
dec
or
mov
mov
movsl
mov
mov
roll
arpl
pop
pop
jns
in
jmp
scas
sub
lcall
xor
jne
imul
pop
aas
mov
pop
cmp
pop
outsl
ljmp
enter
jge
pop
sub
jp
leave
incl
stos
icebp
lds
push
inc
jnp
xchg
or
mov
idiv
call
push
arpl
pop
subl
mov
pop
div
sti
fstp
loop
mov
cmpsl
jmp
fnsave
xchg
fucomip
iret
and
cwtl
mov
decl
sbb
mov
insl
sub
cmp
divb
jg
mov
jns
sub
push
mov
mov
push
jo
imul
jmp
inc
inc
dec
lahf
xchg
fnstenv
mov
push
sbbl
fbld
pushl
out
add
call
inc
imul
jmp
call
or
sub
repnz
xchg
lcall
inc
in
pop
mov
pop
insb
addb
hlt
in
push
loope
ds
mov
fists
fildll
mov
cli
mov
scas
inc
push
std
cmp
jle
movsl
or
loopne
ljmp
fisubl
call
dec
popf
mov
stos
outsb
jecxz
lcall
mov
je
cmpsb
mov
adc
shr
mov
mov
inc
fbstp
out
call
fildll
lcall
mov
mov
jno
mov
test
xchg
mov
fidivrl
and
and
cmp
les
adc
idiv
pop
hlt
xchg
ret
out
and
pop
dec
popa
jmp
pop
lea
xor
xor
lahf
jbe
sub
cs
loop,pt
std
pusha
stc
imul
ljmp
jns
add
or
xchg
fs
or
shll
arpl
call
clc
loopne
sbb
adc
test
dec
push
mov
or
mov
inc
push
sub
pop
in
sub
pop
xor
pop
cld
decl
cmpsl
outsl
pcmpeqw
mov
mov
inc
ljmp
decl
cli
iret
xor
push
jmp
repz
scas
popa
mov
cmc
pushl
scas
js
jnp
mov
repz
ljmp
ljmp
pop
fmull
pop
xchg
call
repz
cli
bound
pop
mov
ljmp
pminsw
gs
call
cmpsb
xchg
loope
cli
inc
jle
cmp
shlb
out
adc
dec
out
sbb
pop
mov
rcll
jecxz
pop
pop
xor
repz
pop
push
lcall
sbb
inc
sahf
rorb
jno
in
pop
lret
lods
ja
cmp
outsl
call
adc
addr16
hlt
xlat
add
push
hlt
pop
testb
clc
mov
push
loop
ss
repnz
popf
enter
imul
aam
cmpsl
sbb
xor
sbbl
sbb
adc
das
std
mov
icebp
xchg
lahf
jmp
rorb
aaa
fiadds
call
xchg
xchg
mov
comiss
popf
cmc
shll
jp
in
or
mov
lea
test
gs
mov
and
pop
fmull
iret
sub
mov
imul
pop
or
fwait
inc
or
call
mov
pop
mov
sub
and
xchg
or
adc
jbe
decl
aad
movsl
fidivrl
inc
in
sbb
and
popa
pusha
test
fs
xchg
xor
sub
fs
jp
dec
jmp
sbb
xchg
and
mov
rolb
decl
cmp
idiv
pusha
int3
outsb
dec
pop
movsl
fstps
pushf
pusha
test
dec
incl
mov
and
pop
cmp
push
mov
out
push
pop
inc
iret
mov
mov
fdivrl
mov
xor
imul
js
dec
rcrb
call
inc
mov
add
cwtl
pusha
lods
push
fwait
xor
sub
sub
fstpt
mov
sub
das
adc
stos
rolb
push
leave
mov
lea
mov
in
aas
addr16
sbb
test
ljmp
cld
mov
loop
std
sub
pop
sbbl
lcall
push
shlb
sub
ret
pop
xlat
sbb
call
add
jbe
imul
stos
mov
inc
adc
pop
xor
xchg
les
call
iret
jge
mov
cli
mov
add
fildll
test
out
fdivp
xchg
cli
ljmp
dec
frstor
stos
xor
cld
mov
addr16
call
out
or
cmc
xchg
push
dec
add
or
dec
push
cwtl
xchg
xchg
cld
call
rclb
pop
loop
and
sbb
inc
rcll
cli
jmp
mov
je
mov
xchg
mov
xchg
aad
mov
fdivrl
shlb
fistps
xchg
jle
lcall
push
cmp
add
test
js
adc
addr16
inc
dec
and
and
sbb
mov
or
daa
sbb
shr
icebp
mov
xor
lret
lock
popa
xchg
mov
psrld
arpl
or
popa
es
aam
int
xchg
xchg
cli
jg
adc
call
push
stc
add
bound
lods
jge
scas
iret
shrl
dec
popa
fs
pop
test
xchg
add
add
hlt
mov
ljmp
sahf
pop
icebp
xor
xchg
in
cmp
inc
popa
lcall
ret
lods
pushl
sub
je
addr16
inc
mov
xchg
xor
clc
dec
incl
and
fwait
jl
xchg
loop
fdivrp
mov
scas
pop
jg
xchg
in
outsl
sbb
sarb
in
std
loope
mov
pop
xchg
lret
inc
jp
push
out
vpsubq
lcall
lods
cltd
pop
jp
mov
ds
mov
jb
rorb
dec
mov
jae
test
call
fdivl
inc
mov
aad
sti
pop
mov
jne
fisttpl
pop
cs
jmp
xchg
inc
cli
mov
movsb
adc
call
aam
dec
push
push
movsb
push
cld
jge
out
shrl
negb
sbb
orl
xchg
dec
cs
dec
incl
sbb
mov
mov
xchg
mov
fildll
call
adcl
stos
les
jo
inc
sub
dec
mov
jns
xchg
cli
fwait
xchg
addr16
adc
pop
stos
fucomp
out
and
lds
push
lret
jg
call
xor
pop
mov
sub
orl
mov
sub
out
cmp
xlat
popa
inc
addr16
jecxz
cmpsb
nop
xchg
xor
push
and
cld
lret
pop
pop
mov
dec
repz
sub
loop
add
mov
test
gs
push
xor
inc
and
psubw
loop
and
push
jns
jb
aad
jnp
or
decl
inc
shlb
and
js
dec
lock
imul
push
ud0
ds
push
mov
push
fnstsw
xor
fs
and
or
lds
pop
jne
movsl
xchg
sbb
mov
test
jne
stos
dec
mov
jg
call
jbe
fimuls
popf
mov
sbb
aam
outsl
cmp
or
into
and
mov
stc
fisubl
cmp
pop
or
hlt
incl
ja
or
dec
or
jecxz
and
insb
ljmp
dec
sbb
js
mov
dec
popf
or
push
mov
enter
dec
std
ja
sarb
testb
cmpsl
stos
mov
lcall
cld
jge
int3
aas
hlt
mov
data16
xor
xor
cmpb
arpl
decl
inc
fildl
ret
insl
cmp
insl
mov
ret
lods
sub
cmp
xchg
negb
dec
cmc
lret
sahf
loopne
ljmp
loop
dec
push
popa
testb
add
incl
lcall
sahf
inc
cmp
mov
jno
xor
test
inc
shl
sbb
sbb
xchg
cmpsb
fistps
cmp
cs
push
das
icebp
inc
jno
mov
aaa
call
sbb
jo
adc
or
ds
jle
pop
mov
out
repz
xchg
lcall
pushl
lock
test
pop
sub
imul
lret
push
or
jmp
jb
push
rorb
push
or
mov
sbb
repz
aas
jbe
fcomps
jmp
outsl
mov
sub
cmpl
adc
pushf
or
mov
jbe
jmp
xchg
mov
cmpsb
stos
xchg
xor
mov
incl
xchg
pop
cltd
fwait
aas
and
aaa
out
jnp
xchg
out
xchg
xchg
jge
mov
sbb
lds
scas
bound
sub
pop
dec
cwtl
add
push
cld
iret
jp
mov
loop
xchg
mov
test
or
inc
aam
clc
mov
mov
dec
ficoms
xchg
fcmovnbe
jmp
test
movsl
pushl
mov
les
js
jmp
jo
hlt
rcl
mov
or
push
test
mov
add
repz
lds
cli
cld
out
jmp
imul
cmpsb
adcl
pushf
insb
lahf
lcall
scas
sbb
pop
mov
or
adc
sarb
xchg
mov
call
cmp
cli
ss
add
xlat
shll
repz
jmp
jge
jbe
sbb
adc
int3
jmp
arpl
mov
xchg
aad
js
incl
pop
ftst
add
cmpsb
and
mov
je
dec
pop
clc
jg
add
cmp
arpl
and
mov
movsl
sbb
dec
mov
xor
sub
mov
xor
mov
inc
sbbb
out
in
fadd
mov
or
leave
inc
xorl
and
fldln2
stos
and
and
ljmp
push
pusha
lahf
jns
nop
pop
xchg
sar
mov
dec
shlb
jae
call
or
pop
xchg
xchg
iret
add
movsb
les
pop
les
test
cs
call
mov
ficomps
popf
pop
lods
dec
jecxz
fidivrs
scas
enter
flds
mov
cmpsl
out
push
sti
jns
cmp
lock
test
lock
mul
subb
fisubrs
filds
sbb
adcl
or
inc
stos
mov
insl
rorb
int3
pop
ja
mov
daa
loope
fldcw
decl
dec
scas
mov
roll
lret
out
mov
pop
rclb
je
or
sub
pop
outsb
jae
pop
lret
mov
mov
cltd
repz
pusha
repz
frstor
call
lock
scas
mov
dec
pop
fucomi
das
mov
adc
addr16
jg
inc
xchg
mov
repz
dec
imul
xor
call
cmpsl
jg
insb
mov
fists
pop
sbb
es
out
mov
push
adc
test
jno
std
std
mov
out
sbb
leave
cmc
mov
pusha
dec
cmp
jle
pop
mov
out
mov
imul
fsubs
xchg
loope
cwtl
cmp
call
fiaddl
xchg
mov
or
mov
out
xchg
or
lret
loope
sbb
in
call
call
cmp
insb
or
icebp
xchg
fwait
loope
adc
pop
aad
fists
adc
incl
xchg
divb
xchg
inc
adc
mov
data16
sub
adc
jge
clc
or
sub
mov
lea
stc
dec
add
mov
sub
ljmp
cmp
adc
lods
popf
mov
mov
ljmp
repz
cmp
scas
push
and
mov
std
adc
add
fcmovnu
cmp
mov
iret
loopne
pushf
dec
or
ja
push
dec
cwtl
lcall
lock
nop
xor
sub
and
pop
dec
pop
and
jmp
jg
push
or
aad
mov
enter
xor
iret
mov
mov
sub
dec
lahf
ljmp
mov
ret
nop
sub
pop
loopne
in
test
adc
add
jg
jne
fisubs
xor
ss
push
jae
push
cli
jae
push
mov
lds
outsl
hlt
je
out
cmpl
cmpb
sub
mov
jmp
mov
mov
or
ret
pop
xor
mov
ds
incl
idivl
aad
movsb
cmp
in
hlt
mov
call
fistps
fs
cmp
outsl
sub
inc
ss
leave
adc
ja
repnz
cli
pop
clc
outsl
or
and
fisubs
cmpsl
cld
jnp
ret
clc
dec
sahf
cld
arpl
shll
sbb
sbb
testb
stc
mov
xchg
repz
lods
fstpt
xchg
outsb
fistpll
fdiv
rorb
push
cmp
movsl
inc
out
stos
ljmp
mov
cmp
jno
cmc
jns
ljmp
aas
push
test
mov
and
inc
mov
dec
pop
imul
xchg
inc
popa
imul
jmp
dec
xchg
xor
lock
mov
data16
sahf
xchg
lret
push
pop
lcall
pop
rcl
aam
cmp
stos
dec
stc
out
stos
idivl
mov
loop
lock
jns
push
mov
je
xor
sti
pusha
call
cmp
jecxz
mov
call
jbe
pushf
test
lcall
mov
shlb
and
pop
or
xor
sar
dec
test
fmulp
pusha
lcall
mov
sub
adc
jl
xor
xchg
jl
inc
fwait
mov
jnp
jl
sbb
call
mov
fwait
inc
addr16
xchg
fwait
out
jg
jge
out
jg
jmp
push
jns
jae
or
popf
ret
fstl
xor
cwtl
mov
mov
jecxz
js
loop
fwait
pop
jb
js
cwtl
inc
xor
pushl
jp
fimull
imul
mov
ret
and
mov
leave
pop
jmp
cmp
call
cli
lcall
adc
loope
loope
lret
popa
sti
jae
mov
std
and
popf
push
ljmp
xor
jle
repnz
or
ds
mov
jbe
or
decl
in
pop
outsb
rorl
ljmp
pop
cwtl
or
jg
jp
mov
nop
jbe
mov
adc
shrl
gs
cld
lods
adc
and
cmpsl
cmpsb
sub
push
int
cli
cmc
psllw
incl
test
fisttps
ret
jnp
cmpsb
in
test
aad
lcall
add
aaa
out
cmp
testb
cld
cmc
jo
dec
sub
or
movsl
mov
adc
repnz
incl
movsl
mov
add
xor
dec
and
lcall
rol
or
nop
test
fcmovnbe
xchg
roll
ljmp
in
lret
sub
jecxz
pop
out
xchg
sub
add
cmp
jg
pop
mov
fstps
xchg
add
mov
iret
jno
dec
jg
push
adc
mov
mov
lret
mov
lcall
mov
arpl
pop
xor
ficomps
loop
js
dec
inc
mov
jp
sbb
inc
or
dec
filds
in
xor
and
fucomip
mov
push
nop
scas
jmp
xchg
jns
lahf
fiadds
notb
incl
cmp
lret
cmp
inc
jl
in
add
xchg
jecxz
and
pop
lods
bound
jg
fnstcw
outsb
mov
mov
loop
cmp
dec
adc
ficoml
pushl
lahf
out
jecxz
sbb
lods
test
add
cmp
sahf
fiadds
dec
jg
out
or
sub
jle
nop
mulps
pusha
test
std
lcall
sub
sbb
push
push
icebp
test
decl
pop
xchg
or
pop
sub
mov
jl
jle
js
test
sub
mov
ucomiss
cli
inc
movsb
pop
sub
sub
pop
or
lods
cmp
cmp
adc
or
hlt
xchg
aaa
out
inc
mov
data16
fstpt
and
stos
decb
out
dec
xlat
stos
and
mov
imul
call
cmp
mov
sub
jbe
push
nop
loopne
pushl
dec
lahf
repz
out
adc
arpl
imul
push
call
negb
mov
in
push
lea
sbb
mov
push
mov
aaa
cli
decl
jne
xorb
lret
clc
lret
fildll
out
js
js
jmp
jmp
mov
jae
decb
loope
jae
push
or
lds
cmp
or
cmpsl
mov
pushl
popf
out
test
or
test
inc
pop
pusha
jge,pn
ljmp
mov
icebp
scas
imul
test
and
inc
lods
mov
fstl
ljmp
fistps
adc
or
push
xchg
hlt
daa
sahf
stos
stos
cmc
loope
mov
mov
sub
in
mov
xor
mov
sub
adc
dec
lahf
sub
xchg
pushl
andl
std
push
imul
stos
lret
jge
imul
out
outsl
mov
adc
ficoml
fst
ljmp
std
ret
ja
hlt
nop
shll
xlat
push
negl
lock
inc
inc
lret
mov
call
int3
cmp
adc
or
loop
mov
std
outsb
xlat
or
sar
je
sub
shll
jb
lods
aaa
adc
sarb
dec
add
sub
add
push
lock
gs
jp
xchg
cli
fsts
or
fcomps
cmpb
fsts
lds
push
adc
call
clc
pushl
push
add
aas
jno
dec
and
mov
sub
ljmp
icebp
bound
and
push
xchg
pusha
ljmp
aad
sub
fwait
pop
cmp
and
jb
lea
xchg
mov
xchg
push
push
and
incl
ss
push
sbb
jle
xor
xor
adc
loope
add
and
mov
push
int
sbb
aas
mov
mov
dec
push
sub
jg
add
pop
lock
les
rclb
popl
or
std
lcall
cmc
xorl
fiadds
jg
ljmp
addb
decl
sbb
lds
dec
push
iret
sqrtps
repnz
into
js
jbe
cmpb
das
xor
ljmp
jmp
test
mov
insb
f2xm1
xchg
xor
adc
cmp
incl
cmp
insl
mov
cmp
mov
adc
sbb
icebp
jg
notb
jmp
mov
pop
jmp
mov
sbb
mov
cmp
push
stc
out
in
add
jle
push
cmpsl
mov
call
les
push
movsb
rcrl
push
outsl
out
cmc
and
add
je
push
aaa
pop
push
add
pop
mov
mov
push
lea
into
sub
sub
and
aaa
push
pop
inc
pop
cs
orl
shlb
int3
lcall
das
cld
out
fbstp
and
stos
aas
xchg
fs
rorl
lcall
lcall
mov
push
sbbl
mov
cli
mov
daa
xorl
data16
imul
xchg
push
pop
mov
out
jl
stos
push
jo
std
xchg
pop
dec
and
ljmp
in
jns
ret
push
push
loope
mov
fidivrl
cmpsb
aaa
clc
incl
out
pop
ret
inc
mov
in
leave
scas
es
bound
incl
mov
push
cmp
iret
faddl
shlb
ficompl
shlb
lret
popf
pop
xor
jbe
sub
push
add
das
add
ret
rcr
pop
push
arpl
add
ljmp
stc
sbb
shl
add
std
in
mov
clc
pop
iret
or
mov
stos
jo
incl
fldenv
cmpsb
push
into
jno
ret
scas
cld
cmc
call
lahf
pop
jbe
test
leave
pop
jo
dec
shrb
insl
sub
push
fstpl
add
das
mov
lahf
add
mov
dec
adc
movsl
ljmp
lea
dec
and
xor
dec
inc
daa
push
xchg
cli
xchg
jmp
xor
push
and
jmp
or
pop
pop
cmc
mov
dec
movsb
adc
fstl
dec
sahf
mov
call
mov
mov
cmp
lret
fisubrl
push
pop
jae
push
lds
ljmp
outsb
into
mov
scas
mov
aam
mov
or
std
nop
add
out
sub
push
scas
stos
sub
andl
vmulps
stos
jmp
dec
xchg
push
jg
dec
push
dec
mov
cmp
mov
mov
mov
jmp
test
jge
xor
dec
jmp
xchg
pop
mov
incl
mov
andb
and
dec
and
xor
sbb
icebp
dec
cltd
lcall
mov
sub
mov
adc
fstl
and
in
mov
push
mov
pop
call
push
lods
shrl
xor
lcall
gs
ljmp
andl
test
mov
or
call
dec
imul
les
xor
push
imul
decl
sbb
outsl
fsin
sub
fldcw
mov
fiadds
decl
std
adc
mov
pop
fwait
xchg
hlt
push
mov
out
jmp
incl
or
push
cld
pop
sti
jmp
int
sbb
dec
repz
mov
xor
sub
mov
stos
inc
cs
jnp
and
stos
inc
inc
pop
shrb
mov
pop
ja
lods
cmpl
inc
push
mov
mov
ljmp
jo
sti
mov
in
mov
jg
ljmp
lds
xchg
push
sub
adc
cmp
mov
or
mov
mov
fnstcw
ljmp
dec
or
call
inc
sub
lret
jb
mov
jno
nop
outsb
mov
stos
enter
data16
fsubl
add
jp
jne
sub
decl
lret
dec
push
lahf
or
nop
popa
push
xchg
ja
ds
out
aam
jg
cmp
out
adc
shlb
push
rcr
call
fwait
mov
push
mov
mov
or
and
xchg
pop
gs
mov
sbbl
gs
adc
in
cmpsb
fcmovb
popa
mov
jne
jmp
test
xor
sbb
jle
xchg
popf
aad
push
mov
sti
std
out
cmp
call
cli
imul
mov
push
imul
int3
aas
daa
push
call
out
push
push
sbb
icebp
pop
cwtl
mov
mov
pop
jno
cmp
jg
in
hlt
push
inc
fadds
outsl
mov
negb
sarl
outsl
mov
frstor
add
roll
push
add
loopne
sub
fsubs
xlat
xor
jl
push
cmp
lret
push
jl
jg
or
pop
add
jmp
jmp
xchg
out
mov
jecxz
xor
incl
or
mov
imul
pop
mov
dec
les
xchg
xchg
fcmovnbe
sub
icebp
xor
cwtl
aam
sub
das
mov
in
pop
xchg
imul
jne
mov
add
enter
lods
jl
xchg
push
jnp
test
cmp
jl
jg
cmpsb
testb
add
dec
xchg
in
and
aas
push
repnz
mov
scas
sbb
push
xchg
pop
pop
dec
xor
or
in
or
sub
aaa
cli
mov
aam
pusha
xchg
mov
add
std
imul
and
incl
mov
xchg
xor
movsl
push
inc
xchg
jle
test
xchg
pop
aaa
mov
lea
mov
sbb
test
movsl
insl
decl
inc
cmp
xor
inc
hlt
dec
test
mov
dec
push
aaa
fistpll
decl
loope
das
popa
push
fimuls
inc
mov
push
insl
mov
cmc
cmpsl
mov
mov
jno
cs
rorl
mov
inc
ljmp
imul
sub
mov
cmp
or
and
gs
jge
lcall
imul
and
jnp
dec
fildl
jns
cmp
ffreep
scas
rcrb
sub
push
out
mov
and
inc
push
mov
sahf
jo
cmc
cmp
xchg
dec
cld
or
test
in
pop
dec
movsl
cmp
sbb
push
mov
jecxz
pushl
cmp
mov
rol
aas
mov
add
jb
xchg
inc
sarb
pop
loop
out
inc
gs
out
stc
out
mov
lock
popf
push
call
or
in
ds
not
les
inc
movb
mov
inc
lods
or
ss
test
lret
insb
ret
clc
push
decl
cmp
movsb
jae
xchg
push
mov
mov
push
xlat
gs
sub
sbb
das
hlt
pop
pushf
ja
sbb
fdivrs
icebp
mov
jmp
push
sub
stos
clc
outsl
dec
ja
mov
je
pop
hlt
jecxz
lret
aaa
loope
pushf
inc
iret
scas
push
mov
test
das
icebp
test
jo
inc
jb
xor
call
call
add
mov
sahf
loope
cmp
sahf
mov
pusha
push
push
jnp
xor
bound
push
imul
cmc
lret
int3
ljmp
cmc
ljmp
sbb
repz
cmp
lock
push
call
push
js
cmp
cmp
push
mov
jl
jnp
movsb
mov
repnz
jmp
mov
sub
scas
lret
pop
sbbb
shl
or
sub
stos
aam
das
icebp
orb
adc
lret
dec
cmp
mov
jg
dec
adc
mov
push
and
cmp
jae
and
dec
add
incl
mov
xchg
mov
jl
dec
and
inc
cmp
pop
sub
outsl
outsb
xor
xchg
push
sub
jnp
push
mov
mov
mov
popf
lock
leave
dec
ss
das
icebp
ljmp
stc
push
test
jns
hlt
insl
inc
test
ret
incl
ret
imul
cmp
jg
rorb
sub
and
adc
mov
movq
nop
enter
and
mov
js
mov
insl
push
push
shl
and
push
dec
inc
inc
adc
daa
jmp
push
cmp
cs
xchg
mov
repnz
mov
add
test
movsb
sbb
or
adc
sahf
lahf
dec
mov
add
lret
aaa
loop
add
lcall
and
decl
ljmp
mov
pushf
jge
sbb
xchg
or
arpl
outsl
jmp
adc
cmp
and
orl
sahf
lcall
inc
add
pushl
pop
popf
test
inc
sahf
lods
xchg
adc
pushf
push
pop
fs
sbb
decl
and
cwtl
jo
roll
mov
lret
push
in
repnz
adcb
mov
sti
out
cwtl
add
pop
ljmp
aaa
imul
mov
dec
dec
test
push
fadds
dec
or
cmp
sub
jmp
and
mov
call
fwait
pusha
xor
fisubrs
out
movsb
sbb
or
movsb
repnz
repz
jg
int
jmp
dec
call
sub
push
xchg
pop
mov
ret
xlat
test
cld
push
mov
pop
mov
mov
sub
add
xlat
cmp
mulb
mov
cli
push
push
xor
fnstsw
jmp
test
push
sub
je
in
ret
jecxz
call
lock
inc
dec
les
loopne
jge
mov
mov
inc
jle
adc
loop
icebp
test
daa
je
in
xchg
mov
in
dec
lret
adc
mov
cmp
mov
xor
movzwl
sbb
idivb
enter
pop
xchg
outsb
adc
sbb
mov
pop
mov
mov
icebp
fiadds
push
or
lret
mov
lods
dec
ljmp
loope
fisubrs
sbb
xchg
push
mov
sbb
fsubrs
insw
sti
pop
stc
add
aaa
or
pop
add
insl
sbb
mov
jg
jp
hlt
iret
pushf
inc
inc
out
in
jg
cmp
dec
lods
std
push
ljmp
call
std
fcmovne
cmpl
sbb
add
jp
inc
rcrb
loopne
and
pushl
jbe
pushf
stc
pop
mov
xor
adc
fdivrp
mov
dec
cld
and
pop
xor
cmp
lcall
jmp
mov
inc
mov
cld
inc
mov
pop
mov
xor
pop
cli
jmp
fsubp
stos
sub
dec
gs
rcrl
jl
pushf
and
jg
in
aad
or
js
aas
pop
cmpsb
inc
push
js
sub
fadds
lcall
xchg
mov
xor
lock
add
jg
incl
xchg
aaa
inc
mov
sahf
xchg
shlb
add
ljmp
cmp
add
inc
push
loope
or
popa
mov
and
xor
push
or
movsb
adc
jo
push
mov
cmp
clc
jae
decl
or
pop
push
pop
xor
js
flds
xlat
inc
mov
cli
inc
or
push
lret
push
fildl
loopne
cmp
ss
lcall
fsub
int
jmp
enter
push
cmpsl
dec
sbbb
push
mov
aam
incl
outsb
and
data16
bound
imul
mov
ss
xlat
test
mov
cmpsl
aas
sbb
fisttps
mov
clc
jnp
neg
add
adc
outsl
icebp
rolb
loopne
mov
pop
xchg
or
std
lret
sub
lock
fdiv
adc
pushl
xbegin
mov
popa
cmp
cli
dec
loope
aaa
inc
testl
subl
mov
sub
jne
imull
lods
clc
sub
jns
dec
sbb
ljmp
data16
imul
sarl
xchg
mov
or
das
cmc
das
push
test
mov
aam
cmc
outsl
lahf
and
call
icebp
sbb
xchg
jecxz
sub
jns
sub
or
pusha
jp
sarl
dec
fiaddl
test
push
pushf
ljmp
jbe
lods
pusha
pop
ja
sbb
js
sbb
sbb
jecxz
adc
gs
and
lret
leave
scas
cld
inc
ret
sub
mov
dec
jmp
jle
jo
nop
xlat
jp
or
adc
jmp
les
cmc
loopne
xor
sti
fdivrl
jne
xchg
fcmovnb
xchg
or
mov
xor
xchg
sub
pushl
jo
or
int3
mov
shr
movsl
out
in
xor
inc
add
ss
push
aam
jmp
fwait
lcall
push
or
jge
dec
cltd
lcall
lock
lcall
cld
add
xor
outsb
repnz
leave
xchg
roll
ljmp
inc
mov
cld
sub
fcomi
lcall
es
decb
cwtl
pop
stos
lock
mov
push
pop
stos
je
adc
ljmp
outsl
fnstsw
or
bound
adc
sti
mov
cs
mov
fildll
popf
in
fwait
icebp
jno
pop
sbb
call
stc
sub
arpl
xchg
sti
ja
inc
xchg
rcrl
jmp
dec
mov
mov
pop
imul
call
fstl
push
fcoml
jne
ss
imul
sbb
and
loop
push
lcall
inc
push
push
in
mov
ljmp
lock
neg
in
lods
fs
lcall
mov
out
popa
ljmp
fs
xor
mov
cmp
push
cld
mov
xchg
jl
arpl
test
cltd
mov
scas
or
jle
das
mov
pop
lods
xchg
adc
test
popl
addr16
leave
rcrb
out
aad
cmc
jno
test
jl
jns
inc
mov
cwtl
cmc
idiv
mov
shl
fdivrp
sti
inc
es
cmpsb
ss
hlt
ljmp
jbe
ljmp
mov
aad
jecxz
adc
sbb
bound
inc
in
inc
iret
xchg
cli
ljmp
mov
cli
dec
popf
sub
call
movsb
scas
psraw
push
cld
das
cld
js
xchg
mov
xor
int
das
xchg
xchg
pop
add
mov
gs
ljmp
or
jp
pop
and
scas
and
out
cmp
lret
and
fmuls
ljmp
lcall
dec
cmp
cltd
cmp
enter
call
mov
stos
mov
mov
jg
jmp
int3
lods
pop
mov
jb
lock
jle
or
repz
addr16
out
call
mov
ds
add
adc
ds
aam
shlb
lock
lret
sarb
mov
idivl
or
xor
scas
mulb
and
insb
icebp
call
cmp
stc
movsl
xor
stos
cmpsl
std
push
js
xchg
shrl
pop
mov
push
pop
lods
inc
pop
jb
jo
fdivrs
cli
aaa
decl
mov
mov
rcll
or
dec
fisubs
pop
lock
cli
sub
insl
dec
jl
cmp
push
mov
mov
lahf
add
add
xor
ljmp
mov
shl
fisttpl
sub
in
out
xor
fiadds
xchg
push
out
xor
mov
adc
in
inc
cli
in
add
jae
lods
lock
adcb
stos
movb
mov
call
cmp
lahf
cmpsl
cmp
clc
dec
cli
decl
add
movl
dec
mov
add
xor
add
xchg
mov
stc
mov
and
in
mov
mov
mov
pusha
pusha
xchg
call
push
out
xchg
or
jns
cmp
adc
loopne
loope
addr16
incl
stos
ljmp
cld
ljmp
add
roll
add
mov
or
call
push
lods
cmpb
mov
popa
mov
mov
add
ljmp
lock
dec
dec
loope
je
jo
aam
sub
loope
nop
movsb
mov
jg
aas
js
pop
or
jns
xchg
scas
sbb
ffree
ds
fucomip
mov
pop
decb
pop
test
xchg
dec
stc
call
ja
aad
sbb
mov
add
sub
mulb
icebp
call
aas
cmp
mov
rol
es
imul
lcall
pop
jmp
cmp
aad
xchg
sub
sub
xchg
jo
jp
popf
xchg
jmp
std
call
in
or
pop
popf
cld
dec
xor
sbb
mov
aam
and
out
popa
jb
add
pop
or
xchg
lds
bnd
and
cmp
inc
push
lods
mov
repz
jb
adc
scas
xchg
cld
cmp
aad
mov
call
rcll
mov
mov
push
sub
gs
icebp
incl
cld
in
mov
and
push
call
ljmp
jle
dec
mov
pop
mov
sub
icebp
rorb
in
cmp
pushl
pushf
mov
push
repz
mov
jnp
push
sub
loope
out
nop
or
call
pop
sbb
mov
in
mov
pusha
aaa
das
idivl
sti
sbb
lcall
sti
mov
jp
fildl
clc
sub
xchg
mov
inc
mov
jg
jns
add
je
push
sbb
lea
pusha
ds
sbb
daa
mov
std
lods
out
fmuls
test
adc
pop
mov
loope
dec
std
call
jne
adc
imul
lret
scas
scas
adc
xor
std
pop
loop
jge
ret
mov
outsb
pop
dec
sti
out
leave
xlat
mov
lret
or
ljmp
pop
ret
cmp
js
xorb
cmp
inc
pusha
loopne
xor
inc
je
jmp
fildll
push
imul
mov
lock
push
ljmp
jle
lcall
rclb
cmc
sbb
mov
jg
pop
inc
mov
ret
daa
repnz
and
movsb
clc
adc
sbb
pop
pusha
dec
mov
push
loopne
xchg
push
pushf
test
cmpsb
ret
jns
cwtl
fcomi
subb
loopne
dec
dec
lea
pop
rol
xchg
cmp
pop
aad
pop
mov
jmp
jge
mov
test
push
into
je
clc
mov
fisubs
pop
mov
xchg
js
mov
mov
outsb
iret
mov
aam
cld
push
mov
movsb
mov
aam
add
inc
daa
add
call
in
shr
inc
sahf
mov
xchg
pop
movsb
jno
xor
cld
call
pop
xchg
mov
xchg
xchg
ret
xor
dec
cmc
cmp
push
push
add
cmp
mov
sti
icebp
icebp
sub
jg
mov
in
jge
data16
jb
insl
sbbl
fwait
incl
stos
mov
dec
sub
int3
loopne
dec
add
stos
add
or
pop
lds
popa
mov
and
ret
out
out
jns
lret
pop
cwtl
ljmp
push
sti
push
int3
mov
outsb
popf
ss
fwait
pushl
scas
test
pop
popf
push
imul
mov
call
in
adc
imul
sbbl
mov
push
cmp
sub
lods
sbb
cmpsb
nop
cmp
cmc
dec
leave
pop
decl
icebp
xor
cld
cmc
dec
pop
pop
fwait
out
shlb
mov
seto
mov
push
mov
mov
arpl
dec
aaa
addb
xchg
daa
dec
xchg
mov
adc
je
push
sar
fisttps
shlb
pop
in
and
inc
jno
faddl
sbb
jge
in
push
loope
adc
jg
push
sbb
int3
in
add
incl
loop
repz
push
inc
sbb
shl
aad
add
arpl
call
mov
pusha
sahf
inc
ja
pop
ljmp
lock
fisubrs
cmpsl
mull
jle
js
in
mov
adc
pop
iret
rorl
orb
call
call
adc
xor
cltd
mov
test
fimull
xor
call
pop
lds
push
mov
add
inc
xchg
cltd
push
and
shlb
mov
cmc
aam
ja
std
jmp
xor
mov
stc
fwait
jno
xchg
pop
aas
gs
arpl
ljmp
adc
or
and
xor
leave
movsb
dec
pop
cmpb
idiv
test
add
or
aam
jbe
call
ret
mov
inc
mull
loope
mov
adcl
cs
push
xchg
aam
dec
push
icebp
call
clc
test
int
xor
jne
jmp
out
movsb
in
push
mov
call
outsb
popl
push
pop
mov
add
movsb
outsb
xchg
inc
and
das
hlt
mov
mov
test
inc
in
xor
mov
aad
lcall
inc
jle
notl
in
sbb
add
push
and
push
inc
cmp
int
pop
mov
jg
jmp
addl
test
pop
loopne
mov
gs
lahf
lahf
cmp
repnz
decl
xlat
in
inc
lds
repz
pop
jge
push
inc
call
jno
pop
mov
dec
mov
insb
push
cmp
in
xchg
into
ds
in
test
roll
ficoms
jnp
sub
jg
test
lea
repz
mov
sbb
call
fidivrl
fsts
divl
pop
sbb
jg
movsb
cmpsb
adc
mov
adc
cmpsl
mov
jecxz
xor
hlt
xor
xchg
std
pushl
push
jns
adc
adc
push
ss
jbe
aaa
cmp
mov
cs
or
sub
sbb
inc
cmpsl
sub
fisubrl
xchg
lcall
mov
mov
pop
cld
dec
push
sub
jb
jmp
mov
fwait
jb
pushl
xchg
sbb
popf
sub
push
mov
xor
lcall
cs
sub
and
xchg
std
loopne
out
push
decl
cmp
push
int3
mov
icebp
push
subb
out
mov
push
or
aas
push
push
and
mov
add
out
mov
lds
jecxz
lcall
les
adcb
cmp
add
arpl
imul
mov
cmp
pop
icebp
pusha
dec
cmp
cmp
shrb
mov
pop
xchg
push
lcall
inc
scas
shl
lahf
mov
mov
xor
gs
cwtl
movsl
gs
incl
loop
lcall
ror
lcall
rclb
inc
jmp
into
jge
jmp
pop
arpl
pop
pop
sub
ljmp
mov
sbb
into
filds
push
adc
scas
cmp
decl
outsl
fsub
xlat
lock
lahf
ret
jb
jbe
repnz
inc
aas
pop
inc
in
movsl
outsb
pushl
das
sub
ret
pop
stc
xchg
icebp
adc
pop
mov
div
in
js
rcrb
pop
jg
inc
int3
sub
je
sbb
xor
sub
loop
pushl
cli
adc
std
into
xchg
inc
dec
mov
fucomip
jmp
jae
lods
ss
push
mov
pushl
fcmovbe
pop
pop
subb
adc
inc
or
mov
in
mov
sub
lcall
lods
popa
test
cs
push
stos
dec
jge
pusha
sti
gs
out
push
sub
add
mov
ljmp
xlat
gs
stos
jo
andl
in
lea
or
inc
in
jne
sarb
xor
push
cld
push
cmpsb
int3
mov
pop
or
mov
out
mov
js
mov
jne
mov
cmpsb
inc
push
aaa
mov
mov
push
pop
mov
push
jmp
jmp
or
xor
pop
imul
dec
out
and
dec
aam
push
mov
imul
cmp
and
mov
out
xchg
jo
cld
ret
std
cmp
jmp
dec
xlat
sbb
adc
rorb
jmp
cwtl
cld
sbb
enter
cmpsb
lret
test
jmp
arpl
mov
sub
pop
clc
hlt
movsb
push
in
mov
je
fxch
lcall
sahf
jbe
pushf
rorl
fs
mov
imul
mov
or
mov
pop
push
pushl
test
push
cmp
ret
fldcw
imul
jl
outsl
pusha
stc
loopne
pushl
and
rclb
mov
push
xchg
out
xor
mov
lcall
popa
pop
std
jecxz
dec
mov
lret
out
push
out
mov
xchg
shll
push
js
push
add
shlb
insl
repnz
cmpsb
test
jge
ret
inc
pushl
clc
ljmp
leave
scas
pop
mov
cmp
add
fwait
movsl
cmp
dec
call
loopne
inc
sub
mov
mov
mov
test
push
jne
and
outsl
call
or
mov
add
gs
cli
call
add
and
incl
mov
cs
xchg
add
xchg
aad
mov
jb
sub
das
and
jp
aam
xorb
imul
call
pop
mov
mov
push
icebp
pop
or
pop
std
in
xchg
push
sahf
sbb
stc
loopne
ljmp
out
shll
jp
jg
and
scas
gs
pop
jle
push
daa
icebp
mov
or
push
jns
movsl
pusha
mov
jmp
lds
inc
sub
mov
jmp
loope
fs
xlat
sub
xchg
mov
add
or
inc
into
push
bnd
loope
rcrl
call
xor
inc
mov
jl
pop
std
mov
pop
pop
cmc
adc
sub
fsub
cmpsl
dec
shl
decl
int3
adc
inc
addr16
add
iret
cmpsl
mov
mull
lret
push
xchg
icebp
cmpsl
inc
lcall
sbb
add
xchg
lcall
lahf
push
testl
or
wbinvd
sub
cmpsl
call
dec
jb
xlat
ret
dec
incl
adc
out
inc
in
cltd
cmp
mov
repz
jb
xchg
add
mov
in
orl
jnp
lcall
mov
mov
push
mov
aaa
stos
call
adc
aas
movl
test
mov
cltd
ret
dec
push
test
int3
dec
lcall
repnz
cmp
lds
inc
xchg
cmp
dec
movsb
dec
mov
sar
cli
fdiv
mov
xor
pop
arpl
ficompl
mov
mov
into
es
dec
jns
mov
inc
dec
sub
mov
mov
clc
pop
incb
xchg
aam
adc
jmp
inc
mov
mov
mov
cmpb
pop
pop
mov
in
push
xchg
mov
popf
cmp
sti
incb
lods
sub
movsb
pop
jns
loope
sub
lods
jnp
mov
decl
stc
insb
xchg
jb
pop
ret
xchg
inc
cli
leave
outsb
push
mov
sbb
adc
push
lret
cmp
and
mov
jb
pop
inc
sub
sti
mov
sub
dec
inc
xchg
es
lea
xor
insb
mov
jg
xor
dec
or
push
jecxz
cmpl
push
xor
lret
adc
decl
lret
xor
xor
adc
sub
icebp
sarl
push
xchg
jb
add
pushf
fucomip
jmp
xchg
inc
test
or
imul
push
push
mov
lcall
popa
sub
je
lahf
not
adc
adc
cs
test
paddd
pop
clc
add
mov
pop
ljmp
or
xchg
push
push
ljmp
or
fwait
pop
inc
rolb
cli
jnp
cmc
sbbb
pop
call
lahf
iret
mov
jle
loop
xchg
and
push
push
push
push
shrb
xlat
fistps
cmp
add
ljmp
jne
loope
mov
imull
mov
lcall
mov
clc
call
sbb
mov
addr16
pushl
sbb
jle
adc
outsl
stos
subl
cmpsb
hlt
pop
loope
jle
ljmp
clc
fcomi
cmc
add
bound
std
mov
push
cmp
ds
adc
icebp
stos
lock
xchg
jns
mov
sub
out
jae
imul
mov
mov
mov
xchg
xchg
push
out
push
iret
xchg
xor
rorb
mov
movsl
jae
loope
cmp
push
js
lods
dec
pop
cld
hlt
js
inc
stos
jns
mov
jno
mov
into
clc
xchg
fdivrs
fdiv
xor
call
inc
les
pop
ret
jecxz
cs
pop
call
xchg
pushl
jmp
add
dec
xchg
out
hlt
movb
adc
push
push
lcall
adc
ficoms
mov
out
movsw
outsl
rdmsr
inc
add
xchg
lcall
call
imul
aaa
jmp
inc
test
roll
cli
jmp
pop
dec
sbb
sahf
addr16
fs
add
call
jns
lret
aas
mov
fnstenv
icebp
jne
pop
arpl
call
insb
inc
mov
les
shll
dec
sub
jl
cli
pop
sbb
outsb
mov
lahf
dec
pop
push
mov
popf
ja
mov
jg
xor
roll
lret
ss
in
call
pop
xchg
cli
pop
push
jmp
sbb
dec
stos
mov
sbb
mov
stos
cmpsl
push
push
xchg
jnp
xchg
sub
xchg
push
je
xchg
imul
scas
lea
leave
or
mov
push
decl
incl
jecxz
cmp
das
add
sbb
and
sbb
sub
mull
je
add
jo
xlat
scas
fistps
push
push
std
decl
or
std
lea
cmp
cld
in
dec
dec
xor
pop
mov
das
jl
movsl
push
test
aad
xor
loop
dec
test
push
pop
cli
mov
adc
sub
mov
xchg
imulb
push
ljmp
out
repnz
xlat
sub
fstps
scas
dec
jl
lcall
jo
das
loopne
andb
or
hlt
pop
xor
mov
mov
xchg
xor
lds
stos
ds
inc
dec
ja
add
pop
std
inc
jg
inc
scas
repz
xchg
cs
incl
call
or
pop
or
jb
or
cmc
push
ds
pop
inc
jmp
loope
xor
pop
loopne
in
add
mov
and
sub
push
shl
jb
dec
mov
mov
fcomps
cwtl
aaa
pop
jo
std
mov
stc
sbb
mov
xchg
pop
inc
lcall
sub
push
fadds
mov
push
decl
mov
mov
inc
dec
or
or
test
mov
cmp
incl
or
add
fnsave
push
std
dec
pusha
xchg
mov
jp
dec
rclb
aam
test
cltd
dec
addr16
adc
pop
sti
sti
cltd
mov
or
xchg
adc
cmp
test
dec
cmpsl
xor
pop
jg
js
sbb
and
cld
adc
mov
imul
mov
ljmp
sub
fucom
insl
data16
test
clc
jmp
fbstp
lahf
pop
xchg
pushl
mov
dec
sbb
clc
shl
callw
mov
aam
scas
sahf
mov
push
arpl
push
aas
push
clc
xchg
insl
rcrb
call
and
mov
ja
mov
jg
mov
jecxz
mov
push
loopne
rcl
xor
mov
ss
addl
xchg
daa
clc
jmp
mov
mov
sbb
mov
daa
xor
call
jbe
sbb
mov
cmpsl
orb
add
popf
dec
fsts
adcl
cmp
add
and
test
add
je
pop
pop
arpl
into
xor
aam
add
in
mov
sbb
or
xchg
xor
inc
lcall
xchg
or
and
shlb
push
insl
xchg
stos
xchg
pop
clc
mov
dec
mov
out
cmp
push
mov
mov
call
jnp
std
mov
xchg
mov
bound
xor
movb
sub
dec
sbb
call
cmp
mov
loopne
cwtl
inc
pop
xchg
sbb
mov
push
nop
lods
push
imul
xchg
mov
out
mov
test
mov
mov
das
icebp
fdivrs
cltd
xchg
ret
fidivl
stc
mov
mov
arpl
jns
adc
pop
fwait
inc
lds
pushl
gs
pusha
mov
ret
outsb
daa
imulb
dec
and
adc
test
enter
outsb
mov
mov
out
adc
inc
xor
call
outsl
divb
or
cmpsl
loop
jb
pop
sbb
xchg
outsb
jle
fisubl
or
decl
mov
ss
test
pop
cwtl
lea
or
clc
xor
andl
sbb
movsl
incb
xor
outsb
cmp
pusha
icebp
mov
xor
bound
xchg
pop
push
and
stos
push
ja
out
cmpl
push
xchg
aam
test
das
cld
mov
sub
stos
xchg
and
enter
decl
out
xchg
lea
shlb
loop
std
dec
loopne
xor
cltd
into
mov
xor
ljmp
js
ja
and
ret
sub
mov
icebp
gs
sub
stos
jae
fwait
jmp
addl
jb
ljmp
stos
scas
lds
mov
xchg
mov
jbe
aam
xchg
arpl
in
pop
add
repnz
ficoml
sbb
shlb
pushf
xor
or
out
and
fdivr
pop
call
jl
jns
shl
lods
mov
enter
aas
iret
jmp
lods
or
mov
jns
ficomps
ret
xor
outsb
insb
push
pop
ret
and
xlat
add
mov
mov
call
jne
pop
push
imul
mov
adc
inc
or
dec
pop
or
pop
pop
jo
jmp
bound
and
pushl
inc
popa
mov
dec
in
pop
pop
movsb
sbb
push
mov
dec
and
fistpll
pop
scas
mov
add
jecxz
cmc
in
ljmp
mov
xor
das
lahf
jl
jg
ja
mov
pop
push
pop
mov
incl
into
ret
popa
mov
mov
cli
jmp
mov
xor
mov
or
insb
or
xchg
xchg
call
loop
mov
loop
lcall
inc
xor
lea
or
out
cltd
mov
ret
std
inc
xchg
jge
lds
incl
popa
xor
cli
rcll
xchg
pop
popf
jns
notb
dec
cld
decl
scas
xor
ret
lea
pop
sbb
mov
aaa
pop
fildl
call
les
mov
push
call
adc
in
sub
clc
jg
inc
adc
mov
mov
sbb
stos
pop
cmp
nop
mov
aaa
rclb
jne
cwtl
icebp
pop
cmp
and
mov
mov
icebp
jg
xchg
adc
jne
sub
xor
xchg
push
ljmp
xor
cmc
mov
adc
rcll
push
je
out
xorl
mov
call
jb
lcall
clc
mov
jne
loop
mov
andl
xchg
test
mov
and
sbb
aaa
mov
and
cmp
inc
jb
push
fwait
cmp
mov
jecxz
shlb
adc
pop
cmp
mov
xchg
imul
or
out
or
jae
adc
outsl
mov
jmp
push
mov
inc
jecxz
inc
movb
cmpb
cmp
push
fiaddl
mov
loop
decl
incb
mov
jbe
bsr
les
or
decl
les
push
fucomip
mov
add
mov
inc
mov
cmp
and
lahf
xchg
popa
rcrb
sbb
push
and
clc
in
ds
pop
push
push
loopne
xchg
iret
daa
or
mov
xor
ljmp
and
out
jl
xchg
mov
fsubs
mov
ror
inc
aam
fst
sarb
mov
ljmp
aam
lcall
aaa
ja
into
xchg
sti
jp
fcmovnbe
pop
xchg
inc
loop
cmpsb
in
shll
jne
mov
xor
xchg
sub
das
add
aas
loope
sub
movsb
subw
icebp
lods
dec
and
mov
cs
inc
mov
ljmp
repz
cwtl
jo
adc
fistps
test
adc
mov
mov
pushl
xor
mov
lahf
jecxz
inc
aad
fimuls
sub
pop
or
clc
inc
call
mov
clc
out
lds
xlat
not
and
jmp
jmp
shrl
sbb
dec
push
pop
xchg
add
dec
jg
sub
cmp
das
cld
lcall
push
dec
pushf
jne
das
popa
mov
mov
sub
add
sahf
inc
arpl
subl
pop
jg
clc
inc
mov
adc
mov
mov
movsb
loope
mov
fdivl
cli
decl
push
popf
mov
sub
xor
pusha
pushf
pop
out
pop
leave
add
xor
scas
jle
int
push
cs
mov
out
jo
imul
xchg
and
jg
jmp
loopne
sbb
dec
add
sub
inc
shll
xchg
inc
push
add
mov
lret
cli
xlat
jne
inc
outsb
cmp
xchg
xchg
je
lock
push
in
pop
mov
jne
popf
bound
pop
clc
push
mov
adc
gs
in
loopne
fimull
pushl
loop
dec
sti
mov
sbb
mov
mov
jl
mov
decl
es
lahf
push
popf
adc
shlb
cmp
lcall
inc
adc
shlb
mov
subb
xchg
sbb
mov
push
and
sub
imul
and
imul
stos
or
mov
xor
jl
xor
sti
mov
nop
shlb
cld
adc
ret
faddl
inc
aas
cli
cmp
jmp
sub
sub
aaa
pop
lret
sbb
xchg
leave
loop
jo
inc
movl
popf
and
mov
cmc
lret
xchg
jns
jecxz
loope
loope
clc
mov
jmp
repz
inc
dec
push
mov
pop
decl
xor
jle
ret
jl
sub
stos
dec
push
gs
jmp
test
lret
out
cmp
sbb
lcall
pushl
enter
movsb
je
insb
adc
movsb
in
pushf
incl
fdivr
xor
ret
cmpsl
inc
stos
lock
mov
mov
sbb
dec
in
mov
rorb
mov
sar
mov
xor
lea
cli
ja
je
xor
inc
sti
push
std
insl
pop
jmp
add
mov
sub
fidivs
xor
in
sub
enter
popl
lcall
pop
mov
sbb
jle
iret
lock
cmp
movsb
xor
mov
in
aas
les
inc
cmpsb
sbb
lcall
je
into
or
ret
pop
mov
sub
fldt
cmc
mov
ja
aaa
fidivl
cs
jmp
pop
sar
push
mov
adcb
mov
test
icebp
adc
into
pop
pop
hlt
repz
add
rolb
in
mov
sbbb
hlt
adc
jg
out
stc
iret
fsubrl
inc
pop
jmp
xchg
testb
xor
or
mov
dec
jne
aam
jnp
push
inc
sbb
jae
nop
mov
dec
push
call
pop
mov
adc
mov
cmp
push
addl
lcall
std
in
xlat
jmp
mov
mov
and
repz
fdivl
or
decb
cmp
mov
mov
push
xor
shrl
call
jl
push
pop
cmc
lock
add
enter
mov
xlat
inc
jne
mov
hlt
pushl
cwtl
popa
pop
mov
jle
inc
repz
jl
cmc
jmp
dec
fs
cmp
inc
fisubl
xor
xorl
or
clc
add
lock
mov
inc
cmp
jp
mov
stos
enter
jmp
xor
mov
ljmp
push
xchg
movd
inc
in
cmp
sbb
shr
mov
sub
scas
xor
movl
xchg
pop
enter
inc
sar
fucomp
sbb
lods
mov
push
sbb
stc
pop
jge
pop
incl
rorb
add
gs
into
sub
decl
call
push
icebp
sti
jnp
cmp
inc
std
jmp
mull
incb
sub
mov
cmp
jecxz
shlb
call
mov
or
loopne
fidivrl
mov
arpl
mov
popf
cli
scas
push
cwtl
mov
pop
and
xchg
add
decb
xor
pop
insl
fnstsw
decl
in
jle
scas
in
jnp
lods
jb
imul
push
pop
je
test
fisubrl
and
mov
mov
incl
mov
push
arpl
in
sub
push
and
push
adc
clc
neg
pop
xor
inc
mov
scas
loopne
or
lock
and
enter
cwtl
jle
mov
les
lahf
fcoml
push
or
std
outsl
fistl
mov
sub
xchg
and
lcall
shrb
pop
mov
nop
xchg
imul
lret
pop
cmpb
add
add
jb
in
add
cwtl
and
pop
jl
jnp
sbb
mov
xchg
cmc
mov
mov
cltd
pusha
mov
pusha
movsl
jmp
and
mov
pop
idivb
cltd
sahf
inc
lods
jmp
push
add
aaa
cli
push
shrl
int3
xor
push
test
mov
stc
xchg
xchg
loopne
ljmp
sub
ret
ss
pop
lds
inc
jg
aaa
cli
mov
inc
adc
fisubrl
iret
pusha
adc
int3
test
rclb
ss
mov
into
cmp
jg
insb
ret
xchg
push
out
dec
inc
xchg
mov
push
das
or
subl
test
pushl
cmp
mov
flds
jbe
jnp
cmp
inc
pop
dec
and
popa
mov
in
int
lret
loope
scas
inc
das
inc
test
je
add
lods
dec
mov
decl
std
pop
les
mov
jno
jl
cmc
js
jg
daa
std
lcall
call
cmp
incb
mov
js
scas
std
in
mov
cmp
push
cmp
data16
out
pop
daa
ret
inc
cmp
pop
fistl
clc
pop
dec
add
dec
clc
mov
orb
jg
lahf
xlat
and
lahf
leave
data16
mov
das
or
scas
filds
mov
jg
decl
xor
mov
and
xchg
ja
dec
cmpsl
jmp
and
push
jmp
cmpsb
xor
fwait
in
ja
pusha
pop
sahf
sub
cmp
add
pop
mov
cmc
mov
aaa
jg
add
fscale
cmp
imul
data16
push
repnz
cmp
nop
fadds
dec
pop
pop
pushl
lea
int3
dec
push
inc
and
in
pop
lret
lret
outsl
cld
pop
lcall
int
jmp
pop
loope
mov
mov
in
pop
cvttps2pi
xchg
xchg
es
jp
lcall
test
ret
fildll
orl
movl
cli
and
cmpsb
insb
xor
sbb
mov
outsb
sub
cmp
xchg
or
push
ja
fdiv
jbe
outsl
pusha
cmp
insb
push
sub
ss
stos
xchg
popa
cmp
pop
add
pusha
jo
dec
outsb
out
sbb
pop
push
lock
cs
mov
xchg
sub
dec
mov
adc
stc
jo
subb
outsl
cmc
decl
adc
jns
push
dec
cmp
add
incl
cmp
push
cmp
pop
cmp
fnstsw
imul
lcall
jae
mov
arpl
shrb
xchg
inc
fidivrl
daa
subl
sbb
stos
cltd
bound
jne
mov
int3
lahf
fadds
addr16
fcoml
call
stc
sbb
pop
xor
and
clc
jno,pt
outsl
hlt
fisttps
das
int3
xor
lods
mov
adc
jne
shrl
xchg
sbb
dec
int
jae
imul
xchg
pop
enter
dec
test
aam
daa
lods
mul
xchg
sub
mov
enter
sub
call
add
or
sub
or
in
pop
incb
ljmp
pushl
and
mov
clc
shl
pop
iret
inc
rorl
inc
xor
loopne
lcall
jnp
mov
lret
out
jo
test
push
daa
jecxz
inc
movsb
leave
cmp
mov
pop
popf
fimuls
and
dec
inc
es
divl
call
call
test
rcll
jp
jnp
ljmp
fwait
outsl
push
push
mov
js
mov
push
jns
jnp
jg
fisttps
fwait
push
add
add
pop
ljmp
movsb
scas
insl
mov
cmpsb
or
insb
lock
rorl
mov
hlt
out
fildll
fcompl
dec
lss
mov
inc
sbb
out
call
loopne
adc
imul
sub
imul
jmp
mov
test
cmpsb
aad
cmpsl
test
mov
or
cmp
idiv
fcoml
or
sbb
push
push
outsb
daa
popa
rclb
xchg
push
decl
rcrb
push
jb
arpl
pop
lock
sbb
mov
add
fisttpl
xchg
stos
mov
cmp
xor
sub
push
mov
sti
jne
ja
pop
movsl
fucomip
jg
sub
inc
fsubl
fisubrl
xor
inc
fwait
xchg
lods
decl
pushl
adc
sahf
jmp
cmc
call
stos
fsubrs
repnz
mov
cld
inc
or
rcll
icebp
out
push
push
je
dec
xor
push
ds
push
stc
scas
and
aam
ds
lcall
mov
dec
xor
mov
in
pop
xlat
outsl
push
shll
sti
adcl
mov
pop
cli
pushl
jge
jnp
dec
pop
dec
sbb
sbb
hlt
orl
fstpt
andl
push
sub
nop
lods
bswap
fdivrp
push
scas
xor
fs
ljmp
lcall
jnp
add
lods
and
pushf
fs
dec
and
pop
mov
push
pop
std
call
cli
cltd
stc
add
testb
and
pop
push
lcall
push
test
adc
mov
scas
mov
ds
jg
inc
ret
or
mov
pop
mov
xchg
pop
cld
call
dec
inc
int3
mov
push
cwtl
enter
call
pushf
cmp
movsb
xlat
inc
daa
xchg
jbe
add
add
stos
jmp
mov
mov
fwait
or
mov
dec
movsl
imul
daa
sbb
push
in
lret
pop
adc
and
addr16
decl
push
inc
stos
cli
inc
lock
jecxz
divb
xor
add
xor
adc
int3
ds
lock
mov
mov
cmp
into
lret
jno
lock
jg
mov
cli
xchg
nop
inc
add
sarb
mov
test
xchg
push
push
cmp
rolb
imul
outsb
cmpsl
cmp
jmp
sub
lea
jb
pop
pop
ljmp
jl
sarl
fldenv
gs
jae
pop
and
lcall
loope
pusha
int3
insb
mov
dec
push
dec
sub
ds
xchg
pop
ljmp
adc
insl
add
insl
xchg
pop
or
out
data16
pushl
arpl
adc
leave
jb
mov
divl
int
push
pop
cli
lcall
push
stos
pop
cmp
jbe
stos
cmp
push
or
decl
mov
mov
adc
inc
push
add
mov
inc
fdivrp
mov
jg
ljmp
sbb
jg
push
xlat
mov
addl
imul
jg
mul
add
dec
jle
cmp
pop
arpl
das
cmc
pop
cmp
inc
sbb
insl
test
push
mov
pop
sub
jbe
mov
adc
xor
mov
sbb
iret
and
push
push
push
sub
sub
push
cmp
outsb
add
ljmp
out
sbb
mov
cltd
mov
aam
fstpt
lds
incl
movsb
push
mov
loope
xor
mov
gs
lcall
xchg
or
mov
pop
in
fcomps
mov
dec
decl
call
jl
rcrl
inc
jl
dec
popa
pop
ds
push
add
nop
rcrb
movsb
inc
inc
sbb
call
clc
push
or
add
add
inc
jge
sub
pop
jnp
xchg
test
incl
lea
cwtl
mov
fwait
mov
mov
fnstsw
call
pop
mov
xchg
clc
jmp
push
jge
mov
push
incl
hlt
push
adc
jl
cmp
or
fstpt
pushf
fwait
outsl
lret
pop
stos
mov
cli
mov
ss
and
fldcw
dec
mov
jg
fs
add
mov
push
out
mov
inc
jo
incl
jg
test
push
jmp
jge
push
int
cltd
lret
and
adc
cmp
out
test
in
and
loopne
loop
mov
mov
xchg
arpl
and
xchg
test
sbb
fs
pushl
lcall
adc
lods
daa
shrl
cmp
cmp
test
jb
cltd
std
call
inc
test
fsubp
xchg
ja
lret
inc
adc
dec
cli
adc
xor
enter
in
lahf
loop
adc
mov
iret
mov
or
test
xor
outsl
std
pushl
fstpt
stc
dec
arpl
inc
xor
xor
and
mov
call
sarl
mov
out
xor
insb
sahf
lret
call
nop
push
subb
shrl
test
decl
testb
insl
or
push
xor
or
cld
aaa
or
dec
in
jecxz
cmp
mov
rol
pop
mov
sbb
sub
fisttps
or
cmc
aaa
cli
es
jp
xchg
dec
cmp
cld
jl
mov
nop
out
out
es
outsb
outsb
cmp
imul
adc
in
jg
decl
adc
add
push
lods
jne
lret
mov
das
lock
jmp
xchg
mov
ret
pop
out
iret
push
pop
js
out
dec
mov
lcall
cli
scas
mov
addl
or
sti
mov
or
pop
push
push
jnp
jmp
jmp
cs
es
push
xadd
inc
sbb
cmp
iret
pop
ss
decl
ljmp
loopne
add
xchg
int3
or
fmulp
fwait
gs
cmp
test
int3
and
or
fsubs
ljmp
sub
clc
test
pop
outsl
fsub
fmull
mov
fidivrl
sahf
sahf
cmp
repnz
mov
and
cld
jmp
clc
das
negb
dec
ret
cmpb
ja
jae
fildll
loop
lahf
cmp
pop
arpl
rclb
lods
push
push
popa
adc
cs
xor
xor
fstps
sub
jecxz
aad
mov
add
aad
mov
jl
ljmp
push
int
notb
mov
hlt
jg
fstpt
pavgw
test
fwait
aaa
decl
pop
inc
and
outsb
andl
call
shlb
out
jecxz
jg
pop
ds
lcall
cmc
push
test
push
loopne
xchg
inc
pop
popa
data16
jge
mov
add
test
cwtl
sti
lock
lcall
or
sbb
aas
inc
mov
mov
test
notl
pop
int3
rorl
imul
and
fs
jmp
adc
push
inc
repz
ja
pusha
repnz
xor
jle
out
stos
jecxz
mov
sub
loop
pop
jmp
push
xor
jb
lahf
lcall
daa
inc
push
out
add
int
stos
data16
jg
and
ljmp
or
sbb
adc
jmp
enter
pop
xchg
cmpsl
mov
fwait
mov
add
dec
sbb
jo
cmc
ljmp
cwtl
lcall
pop
fsubrs
xchg
mov
insl
pushf
push
mov
inc
pop
and
lret
imul
test
fbstp
lret
mov
mov
pop
cmp
lods
dec
outsl
inc
std
sub
xchg
stos
lds
fnstsw
decl
out
dec
sub
and
in
and
pushf
push
inc
out
clc
xchg
outsl
shll
mov
mov
mov
cltd
mov
mov
mov
inc
xor
gs
adc
adc
pushf
stos
push
ds
dec
xor
lea
jmp
mov
mov
mov
lods
xchg
or
mov
std
movsl
incb
mov
fs
dec
lds
add
cld
lcall
std
pop
mov
push
or
dec
sbb
nop
mov
pushl
clc
outsl
push
mov
idiv
push
cmp
stc
popa
inc
mov
mov
add
es
ss
xor
add
fsubp
das
hlt
xlat
fmul
mov
cmp
mov
cmp
inc
icebp
sbb
lds
movsl
idivb
call
mov
int
inc
add
push
xor
bts
mov
loop
fstpt
jle
jns
imul
pop
jle
loop
bnd
or
lcall
fnstenv
and
inc
jbe
cs
and
sbb
add
sbb
pop
sbb
jl
ss
or
xchg
ret
or
cmp
jge
add
icebp
mov
mov
dec
sar
lcall
fistpll
add
jp
mov
cmpsb
cli
sub
pop
sbb
movsl
outsb
cmc
sbb
repz
pop
sub
sbb
jmp
or
jmp
xchg
adc
js
pushl
repnz
fdivl
pop
or
push
xor
mov
sbb
addr16
int
loop
lahf
push
jmp
mov
jg
repnz
shll
lcall
cli
pop
lcall
ljmp
in
fidivrs
lret
pop
sub
sbb
inc
add
dec
mov
pushf
sti
jg
test
ror
popf
push
adc
into
add
stos
fcomi
ror
call
mov
or
addr16
jg
std
mov
call
cld
jmp
cli
mov
adc
and
sti
xchg
ds
push
push
les
pop
dec
mov
adc
lret
fisttpl
fcomip
adc
mov
mov
aad
mov
jg
and
jp
fsubp
das
cld
inc
ljmp
lahf
sub
jge
ljmp
nop
or
cltd
mov
xor
lret
int3
adc
cld
jg
pop
xchg
jno
or
js
and
lahf
or
decl
jnp
pop
xchg
loope
push
adc
jnp
das
out
daa
push
into
test
adc
pop
inc
add
adc
pop
popa
cmpsl
and
pop
dec
aas
pusha
xchg
inc
out
lahf
lret
daa
xchg
outsl
mov
mov
popf
std
lea
and
sti
sbb
mov
dec
int3
js
fiadds
das
adc
pop
xchg
push
dec
and
add
outsl
jg
orl
pop
sub
test
incl
outsl
inc
sbb
pusha
stos
lock
adc
pop
call
mov
pushl
inc
mov
add
sub
test
inc
adc
imul
mov
mov
sbb
xor
xchg
mov
mov
std
mov
arpl
mov
dec
ja
pop
cmp
jmp
cld
sti
dec
stos
inc
in
subl
xor
daa
jecxz
jg
dec
mov
aam
jb
sub
scas
sub
xor
bound
cmp
mov
jne
or
inc
xchg
test
cwtl
stc
nop
stc
shll
sub
repz
stos
and
cld
js
mov
mov
ljmp
aaa
or
enter
mov
pop
inc
dec
insb
mov
cwtl
jl
pop
cli
lods
mov
in
mov
shll
rcll
push
pop
jmp
daa
mov
icebp
jg
decl
inc
mov
adc
scas
adc
das
jbe
cmpsl
lods
cli
jp
push
nop
inc
pop
scas
hlt
inc
aaa
js
fisubrl
fldenv
jne
push
xchg
sbb
jg
das
mov
xchg
add
aas
jmp
int3
jge
cs
mov
pushl
cmpsb
jb
push
in
out
xchg
push
popa
and
and
test
fsts
adc
rolb
xchg
xor
repnz
movsl
arpl
aad
mov
jmp
mov
imul
pop
xchg
push
pop
ds
xchg
mov
ss
dec
cld
push
negl
sub
mov
fadds
call
adc
rclb
adc
ja
test
xchg
jecxz,pn
lret
outsl
lahf
mov
into
inc
dec
pop
lock
mov
call
aas
iret
cs
and
cld
andb
divb
push
xchg
into
mov
not
lret
mov
sub
out
jg
ljmp
mov
fwait
loop
adc
and
pop
fstps
sbb
push
xchg
out
fcoml
sub
pushl
decb
add
xor
lds
inc
adc
cmp
or
and
jmp
or
aas
push
lahf
push
or
lods
add
pop
sbb
mov
push
and
mov
lcall
out
cmp
pop
sbb
or
xchg
loop
jb
add
dec
add
fisubl
jno
add
std
pop
call
jb
mov
cmpsl
call
xorl
decl
xor
dec
fistps
jae
or
push
enter
pop
mov
loope
bound
cmp
sbb
das
mov
sub
cltd
aaa
cmp
fnsave
ss
dec
es
outsl
lods
mov
or
pop
pop
mov
push
mov
push
jno
das
cld
jmp
inc
fmull
int
mov
mov
nopl
std
dec
xchg
testb
dec
bound
mov
sub
outsl
dec
xor
test
pop
incl
pop
and
imulb
xchg
xchg
sub
sahf
rcl
out
adc
das
lock
dec
cmp
cs
mov
mov
pop
scas
and
sbb
add
adc
pop
sbb
int
dec
lcall
jecxz
dec
das
xor
push
adc
int
cs
vpmullw
mulb
ljmp
imul
call
std
into
lock
jge
test
mov
fucomip
call
push
adcb
cmpsl
and
mov
ds
stos
inc
outsl
sbb
std
cmpsl
andl
xchg
mov
fcmovne
fldenv
pusha
pop
hlt
ret
sub
ljmp
cmpsl
lods
push
sub
xor
dec
xor
je
mov
mov
pop
sub
clc
sub
mov
cli
or
jg
sbb
sub
decl
adc
mov
cwtl
nop
mov
pop
add
fwait
mov
ljmp
ja
mov
or
adc
daa
scas
outsl
in
out
push
sarb
test
aaa
clc
lea
mov
and
pop
sbb
cli
decl
test
lcall
mov
mov
sub
mov
push
inc
mov
js
test
fs
xor
mov
dec
mov
imul
scas
stc
sbb
je
icebp
cmp
jmp
push
push
and
popf
xchg
mov
xchg
mov
decl
fistl
xor
outsb
ficoml
fdivrp
dec
paddsb
test
call
jmp
mov
inc
xchg
pop
scas
outsb
and
pop
call
mov
mov
xor
loopne
jno
xchg
push
jl
nop
pop
loope
ljmp
scas
or
into
pop
pop
xor
fbld
loop
cmpsb
push
cmp
mov
mov
xchg
test
stos
dec
lock
push
mov
or
xchg
push
cmp
inc
test
lcall
jmp
jp
pop
jne
inc
iret
insl
orl
lcall
sub
enter
xor
mov
aas
loop
loopne
inc
sub
pushf
adc
decl
ja
fwait
loopne
xchg
jp
push
es
mov
adc
inc
stc
mov
mov
subb
xor
cmp
inc
imul
jmp
pop
jg
mov
mov
mov
out
xlat
mov
mov
ljmp
adc
lds
and
test
mov
mov
call
or
imul
jmp
or
clc
adc
push
push
mov
push
icebp
incl
sahf
stc
xor
jg
mov
mov
lods
dec
aam
cli
xor
ljmp
popf
fdivl
scas
dec
jl
inc
jbe
inc
dec
orb
fiadds
fdivr
out
mov
and
les
pushf
lods
xchg
jne
xor
clc
ret
mov
fnstcw
dec
push
xor
push
lret
mul
shrl
inc
stc
push
xchg
push
cmp
mov
or
jo
jmp
mov
popa
aaa
mov
adc
cltd
fsubl
pop
cmp
shl
xor
push
or
int
mov
inc
loopne
iret
cltd
scas
pop
inc
test
mov
push
call
xchg
cmpsl
iret
inc
inc
push
cltd
xlat
pop
mov
out
mov
lret
mov
sar
idiv
mov
fs
xor
nop
pusha
aas
sbb
pop
cs
lcall
mov
jmp
lock
dec
ficomps
mov
iret
aad
jge
repz
ret
xor
mov
mov
scas
daa
call
mov
xlat
cli
push
and
pop
shr
mov
jns
lock
pushl
xlat
mov
sti
sub
cmp
inc
inc
xor
adc
dec
divl
inc
fsub
ret
icebp
fists
stos
jo,pn
dec
fs
ja
mov
dec
dec
pusha
pop
mov
mov
mov
mov
cmp
lcall
jl
cltd
call
mov
fisubrl
ret
sbb
adc
jp
jle
sbb
lcall
leave
out
or
fwait
jb
rorb
pop
pop
in
dec
mov
lods
jno
jmp
mov
test
aas
inc
or
inc
jmp
xor
addr16
rorb
pminub
xor
mov
push
flds
insb
das
xchg
bound
lcall
out
call
inc
fistl
xchg
sub
jle
cmp
or
loop
or
mov
or
leave
js
icebp
call
mov
fstpl
push
cmp
decl
inc
icebp
lret
sub
mov
int
add
cld
jg
mov
push
lahf
leave
adc
cmp
jge
call
shlb
mov
mov
mov
cmp
lods
mov
push
sbb
pushl
testb
push
mov
fs
mov
cmp
lcall
out
pop
sub
les
inc
dec
hlt
pop
pop
mov
mov
pop
loop
std
dec
sbb
fucom
inc
xor
test
jne
inc
dec
repz
mov
lcall
mov
out
rolb
outsb
aam
and
clc
test
jae
lods
sub
clc
dec
jmp
mov
ja
jg
sub
fwait
sbb
rcrl
mov
aad
outsl
sub
xchg
sbb
fstpl
popf
dec
mov
test
sbb
cld
pushl
sbb
ret
std
test
xchg
test
mov
pop
decl
fs
cli
ja
mov
call
leave
lea
jmp
out
and
or
clc
aaa
or
rclb
mov
outsb
add
decl
shlb
xchg
ret
adc
sahf
cld
push
pop
adc
xchg
pop
jmp
rorb
mov
xor
push
jb
aas
mov
ljmp
jne
and
sbb
cmp
push
out
pop
sub
cmp
pop
adc
pop
loop
ss
jmp
mov
icebp
gs
lock
sub
int3
cli
addr16
aas
sahf
outsl
dec
inc
cmp
mov
loopne
out
jg
fldl
cld
lock
dec
mov
daa
mov
sbb
out
dec
inc
ret
fisttpl
out
xchg
and
ret
adc
jl
pop
adc
jg
cld
lcall
hlt
into
lods
adc
testb
addr16
dec
pop
sahf
sbb
push
mov
decl
inc
jmp
scas
inc
pop
leave
adc
dec
mov
adc
pushf
mov
mov
cmc
xor
dec
stos
fldt
ret
push
cmpl
aad
mov
scas
pushl
jbe
in
xor
pop
pop
mov
mov
movsb
or
lcall
jl
lret
xchg
loop
inc
ds
into
loopne
mov
stos
out
cmpsb
loope
push
mov
mov
add
in
aaa
stc
mov
pop
lahf
xor
add
incl
or
ja
push
fstl
cmp
adc
pusha
shlb
pop
mov
call
pop
lods
shlb
inc
test
push
xor
xor
call
pop
mov
js
mov
mov
sti
imul
sti
mov
push
leave
lods
dec
mov
clc
loope
push
arpl
mov
pop
loopne
jp
scas
out
cmp
sbb
sub
dec
jge
loopne
xchg
mov
cld
cmp
pop
xchg
mov
fsubrs
jnp
mov
mov
call
in
or
dec
lahf
insb
clc
dec
sti
pop
mov
jb
jno
ljmp
stos
ja
lds
scas
ret
std
dec
aam
add
cli
mov
rcrb
mov
jle
cs
xchg
mov
fisttps
cli
int
repnz
nop
lcall
cmc
and
clc
incl
lcall
cmpsl
enter
pushf
cmpsb
dec
movsl
push
lock
xchg
les
cmpl
jle
xchg
ljmp
jecxz
cmp
push
pop
cmp
pushl
sub
xor
sbb
imull
lret
pop
ljmp
mov
out
add
or
sub
jo
outsb
cmp
mov
mov
clc
sbb
cmp
adc
dec
dec
and
shrb
mov
ljmp
mov
testl
imul
cmp
loop
out
iret
xchg
mov
mov
iret
test
shl
decl
cld
loop
ljmp
xlat
fldt
arpl
out
test
jp
movsb
pop
xor
sti
je
jge
test
daa
jmp
incl
std
push
jecxz
inc
dec
scas
aam
push
xchg
in
jne
cmpsb
stc
ucomiss
out
movsb
mov
decl
mov
lods
mov
lcall
out
stc
pop
out
sarb
adc
fmuls
std
mov
xchg
in
je
mov
pushl
clc
xlat
enter
fildll
jge
sub
push
jae
shlb
sar
pushl
lods
mov
pop
adc
cld
jecxz
mov
and
cmpsb
aaa
pushl
pop
or
cmp
sti
lcall
divl
jmp
bound
popa
loop
lds
and
sbb
pop
imul
ljmp
decl
into
repz
cmp
aas
ret
fildll
jbe
in
inc
incl
mov
lds
inc
xchg
into
jbe
cmp
jecxz
sti
das
cld
pushl
nop
inc
test
dec
cmp
mov
jl
fisttpll
xchg
inc
dec
and
jecxz
xor
xor
adc
and
fistpll
xor
dec
in
mov
idivb
mov
jg
call
lods
cmp
lea
aad
rcr
incl
es
xchg
push
sbb
pop
push
xor
outsl
outsl
push
sub
loopne
les
imul
sahf
cmp
std
in
pop
fs
adcl
and
jae
lahf
daa
rorl
push
out
ret
sub
and
lea
or
mov
stc
outsl
cltd
icebp
mov
fmull
mov
pushf
xchg
lret
mov
lcall
jg
adc
jmp
je
cmpsb
xor
notl
jo
push
sub
or
or
mov
lahf
int3
insb
push
data16
mov
jg
incl
outsb
sbb
cltd
cmp
and
sbb
or
pop
sub
jg
fsubp
cmc
mov
loop
xor
lds
das
mov
inc
js
clc
ljmp
xorb
stc
sbb
ret
loopne
mov
adc
xchg
and
mov
ret
gs
add
leave
dec
js
lret
mov
mov
jmp
jo
or
cmp
std
inc
dec
out
adc
push
arpl
lret
xchg
insl
and
ljmp
mov
mov
push
in
inc
insb
push
push
sub
cmc
pusha
jne
cmp
jecxz
jne
clc
rolb
xor
hlt
sbb
xchg
mov
iret
sti
jae
lcall
incl
pop
jl
and
or
int
add
jmp
xlat
jmp
sti
testl
mov
pop
jbe
aas
and
outsb
imul
jge
sbb
cmc
mov
and
jp
dec
inc
mov
repz
clc
jmp
lock
fbstp
add
pop
push
mov
rcrb
inc
xor
cmp
xor
xchg
or
adc
or
fs
incl
shll
cli
sbb
cli
insl
xlat
mov
mov
mov
data16
test
dec
sahf
xchg
test
cwtl
call
andb
mov
sbb
jns
ljmp
fsubl
sbb
inc
movsb
inc
sbb
out
imul
xor
lods
mov
mov
xor
ret
jle
xlat
dec
fwait
daa
sahf
ftst
cmp
sub
hlt
jno
popa
cli
and
mov
dec
fmul
mov
bound
leave
fisubrs
addl
sub
fidivs
rclb
cmpsl
dec
jae
mov
nop
xbegin
lahf
jp
ljmp
mov
test
mov
sbb
push
mov
pop
mov
out
push
pushl
popa
dec
mov
ficoms
mov
or
testb
lcall
pop
sub
repz
lret
mov
pmuludq
xor
stos
aad
mov
push
je
pop
call
test
jns
push
sub
adc
jmp
or
sub
xor
repz
ret
jo
add
and
outsb
jg
pop
pop
int
jne
pop
std
mov
aas
sub
mov
lods
movsl
xchg
push
push
jmp
data16
loop
jb
dec
lods
pop
and
arpl
adc
ljmp
pop
loop
bswap
mov
sub
sub
fisubrl
in
movsb
out
xor
lods
mov
out
add
pop
mov
iret
adc
lds
xlat
lds
sub
js
mov
mov
sub
add
ljmp
cli
mov
push
xor
add
scas
call
pop
in
sub
push
jp
fimull
lcall
mov
xor
mov
xor
cld
fists
call
outsl
inc
dec
loopne
fwait
add
sbb
inc
js
and
mov
push
dec
inc
test
daa
int3
shrb
stos
sub
cld
cmp
pop
outsl
pop
lds
ljmp
mov
inc
dec
test
hlt
mov
jg
xchg
mov
add
mov
les
loop
push
ja
stos
repnz
sarw
inc
push
jne
icebp
pop
push
sbb
dec
ret
xlat
xchg
fistpl
lcall
outsb
xchg
insl
sbb
sub
add
jb
test
jecxz
jg
call
jg
pop
pop
mov
rorb
mov
ljmp
loopne
mov
mov
ja
pop
aad
outsb
pop
inc
fcompl
movsb
push
lret
inc
push
jg
in
jmp
xchg
pop
or
mov
or
mov
repnz
xor
inc
pop
cltd
mov
sbb
push
adc
xlat
out
dec
sti
cmp
enter
push
das
int
sbb
ljmp
pop
daa
mov
jae
out
clc
int
sub
add
xlat
sbb
lea
sub
aaa
and
sbb
mov
jbe
cmp
lret
test
lods
jle
fiaddl
sub
mov
outsl
sub
xchg
sub
xor
pushf
cltd
popf
fidivs
repz
jmp
mov
int
dec
repnz
insl
mov
nop
mov
clc
test
mov
jno
jmp
adc
sti
imul
adc
loope
ljmp
mov
cmc
sahf
cli
xchg
movsb
outsb
cmpb
aad
je
pushl
in
jnp
mov
cwtl
sub
inc
rol
lcall
call
repz
jnp
lcall
sbb
out
push
push
scas
and
pop
dec
xchg
pushl
into
paddw
out
jno
xsavec
pop
xchg
and
scas
dec
std
shrb
pop
repz
mov
pushl
jne
mov
sub
in
cmp
and
ljmp
sub
jge
lret
mov
adc
mov
incl
in
stos
ljmp
stc
ljmp
popa
or
xchg
push
sbb
jg
mov
pmaxsw
loop
ljmp
pop
shll
mov
sub
jns
jo
aaa
cmp
testb
pushl
cmc
jno
jmp
fdivr
enter
movsl
nop
out
dec
aas
mov
in
hlt
call
sahf
arpl
int
shrl
push
lret
out
ljmp
and
sbb
push
push
sub
lret
rcrl
adc
ljmp
push
clc
pusha
sub
sbb
sbb
adcl
pop
mov
mov
lea
nop
adc
adc
lahf
scas
arpl
cmp
out
mov
jg
sarl
scas
mov
push
pop
sbb
out
jl
dec
mov
mov
test
sahf
push
stos
jnp
cli
pop
test
push
incl
out
sub
sub
mov
popa
pop
divb
push
fldl
mov
jno
xor
push
aaa
sbb
pop
push
xor
ljmp
push
sub
shr
inc
mov
popa
aad
ret
inc
mov
or
lcall
std
push
mov
xchg
popa
loope
sbb
push
rorb
xchg
decl
cmp
or
icebp
xchg
jno
pop
pop
mov
dec
stos
and
leave
mov
inc
pop
in
movsb
lds
sub
mov
inc
xor
jg
call
out
xor
shrl
jnp
mov
jo
mov
xor
sbb
mov
or
xchg
mov
popa
roll
es
stc
jb
and
clc
jg
mov
inc
add
sub
pop
add
outsl
cmc
xchg
arpl
cwtl
addl
mov
pop
mov
orb
jmp
jbe
and
imull
dec
in
clc
sub
int3
sbb
lahf
xor
xor
pop
pop
clc
lcall
cmp
rcl
popf
or
jg
pop
pop
jae
aas
mov
stos
in
cmpsb
pop
subl
lock
aam
push
pop
sub
xchg
popf
push
push
fistpll
js
not
push
push
inc
lcall
ljmp
cs
incl
pop
loop
mov
leave
movsl
aam
mov
movsb
push
stc
and
setae
shll
incl
mov
xor
mov
pop
stos
lds
cwtl
mov
sub
mov
pop
movsl
adc
mov
adc
ss
add
cli
add
jle
mov
xchg
dec
mov
and
orl
and
push
test
insb
fstpt
mov
cmp
hlt
mov
icebp
loope
mov
pushl
das
test
fldcw
pop
icebp
inc
cmp
inc
xor
mov
inc
cmp
dec
inc
fildl
mov
cmp
and
mov
mov
les
jo
mov
clc
outsl
jl
and
jecxz
sbb
inc
mov
test
mov
stos
lcall
cld
hlt
ds
cmp
andl
popf
pusha
arpl
shl
and
pop
xchg
fimuls
jnp
ds
lods
mov
cli
ljmp
inc
mov
mov
lret
pushl
sbb
out
divb
ljmp
or
mov
leave
fisttpl
xor
fldt
addr16
and
jns
xchg
pop
cld
jmp
jl
sar
lds
rorl
mov
fnsave
dec
add
jge
sub
fwait
jo
bound
aad
stos
fsub
sbb
imul
jmp
mov
jo
adc
sbb
adc
adc
and
decl
aam
fsub
lcall
ror
nop
adc
dec
mov
stos
ljmp
sbb
jbe
mov
insb
ljmp
call
push
inc
mov
jns
adc
fldl
pushl
dec
push
mov
fs
rep
shr
jg
cmp
out
adc
or
lods
ret
sub
and
cmp
test
or
mov
xchg
jae
aam
jecxz
push
jl
fistl
decl
lret
push
outsb
femms
es
test
pushf
incl
add
mov
testl
dec
mov
test
call
push
mov
lock
mov
fstpt
cs
lahf
icebp
inc
inc
dec
jmp
aad
test
jge
pop
sahf
sbb
lcall
dec
stos
hlt
mov
mov
sub
mov
lock
decl
mov
loop
pop
push
nop
push
mov
inc
cmp
decl
in
stc
test
mov
mov
or
mov
mov
cmp
mov
out
mov
push
inc
je
ss
jg
mov
enter
push
ret
cmp
jns,pn
bound
add
popf
pop
jl
lea
icebp
push
push
add
sbb
pop
sub
mov
jle
jecxz
addr16
stos
shl
mov
test
mov
inc
call
cmp
sub
aas
mov
and
adc
jns
addl
out
fdivs
pop
xchg
or
jge
fs
dec
out
adc
int
xchg
sub
xchg
incl
data16
icebp
mov
push
mov
ret
mov
ret
pushl
mov
push
std
inc
aad
cmp
xlat
push
js
cmp
and
mov
mov
inc
dec
enter
dec
stos
mov
fs
mov
cmp
sub
out
jno
aas
aaa
cs
cld
add
and
icebp
shrl
incl
lods
fwait
repz
inc
das
add
fnstcw
pop
push
xchg
dec
lahf
fadd
jmp
inc
cli
xchg
in
std
lcall
aaa
mov
xchg
pop
dec
xor
aas
cli
or
mov
xchg
clc
sbb
dec
leave
ret
aas
gs
xchg
mov
loope
std
incl
fisubs
int3
mov
lahf
sti
adcb
imul
scas
jle
ss
push
jno
cs
cwtl
or
loopne
cmpl
aaa
shlb
push
mov
inc
sub
xor
ljmp
mov
idiv
fisubrl
jg,pt
dec
out
push
lods
push
movsl
jl
mov
jmp
xor
pop
jle
dec
jne
rclb
pop
sbb
aad
sub
pop
inc
jmp
add
mov
jnp
mov
lods
icebp
icebp
sub
mov
and
or
lds
jecxz
sub
imul
pushl
fldt
jmp
popf
mov
sbb
add
fimuls
lds
jge
pop
push
dec
movsl
xor
adc
call
jle
scas
pop
mov
test
dec
xchg
mov
in
xor
xor
push
jg
xchg
gs
mov
jg
mov
or
add
adc
jo
mov
mov
lret
outsb
mov
movb
aas
out
sbb
mull
enter
push
mov
pop
pop
mov
aam
mov
pop
pop
cmp
sbb
push
repnz
subb
lcall
std
test
mov
mov
movsb
fcompl
jmp
out
call
pop
es
lods
or
out
ret
mov
mov
mov
jo
loopne
mov
dec
xlat
lret
in
and
pushf
lcall
lcall
inc
mov
lcall
fs
addr16
mov
jp
ljmp
cmc
bound
mov
cs
mov
leave
dec
fwait
jne
subl
pop
jp
lcall
repnz
stos
xor
neg
push
add
jg
pushl
mov
inc
and
stos
in
iret
es
cltd
pop
xchg
clc
ljmp
cmp
cmpl
fcoms
popf
mov
shlb
fsubr
imul
imul
inc
sbb
lea
rcr
add
xchg
outsl
lock
ljmp
mov
xchg
icebp
jnp
in
std
loope
xor
lret
inc
das
lock
jmp
adcb
ljmp
add
stos
repnz
pop
lcall
je
sub
loopne
js
in
ljmp
xchg
pop
aaa
clc
jmp
push
inc
aam
and
or
xchg
push
fnsave
and
lret
out
out
pushl
add
out
pop
in
test
jecxz
push
aad
call
into
dec
inc
jb
popf
push
pop
sbb
pop
jmp
sub
cmp
lcall
inc
int
or
fsubl
lock
mov
hlt
and
into
testl
stc
cmc
loop
call
mov
test
pop
sub
push
aas
icebp
scas
popf
outsl
ljmp
lock
pop
jg
sbb
xchg
cltd
or
scas
lcall
aam
push
out
sub
sarl
loop
movsb
mov
cmc
and
inc
shl
mov
mov
inc
mov
xchg
lock
insb
jae,pn
aad
fucomp
push
fdivrs
sbb
adc
call
rorl
mov
popa
push
insl
iret
outsl
or
mov
xchg
dec
inc
mov
daa
je
aad
dec
xor
dec
arpl
mov
add
pushf
test
cmp
icebp
sub
mov
repz
in
jg
dec
into
loope
xchg
enter
xor
adc
gs
sub
lcall
add
fsubl
jne
and
jnp
sbb
jmp
sar
test
push
mov
or
adc
lret
lcall
outsl
xor
in
inc
add
lods
lods
push
inc
jnp
repnz
pushf
aaa
jg
inc
xchg
jle
mov
sbb
hlt
xchg
push
jp
and
mov
incl
nop
gs
stc
add
insb
jg
inc
je
jle
inc
push
cmp
jmp
jg
pop
cmp
push
push
cwtl
push
popf
add
cmc
ljmp
pusha
jb
adc
pop
fs
and
ljmp
rcr
jg
fidivrl
stc
out
repz
cltd
pop
jmp
cmp
clc
sub
pop
jmp
enter
ljmp
dec
jne
popa
push
test
stos
mov
inc
mulb
scas
fs
fwait
xor
jg
xor
out
mov
push
adc
in
cmpsl
lar
icebp
push
and
xor
xchg
repnz
call
imul
jge
xchg
outsl
dec
paddusb
in
jbe
xor
pushl
lock
and
pushf
cmp
sahf
mov
scas
or
call
fdiv
xor
loop
int
or
sbb
inc
adc
push
call
adc
push
cltd
aad
dec
pop
or
je
mov
lcall
xchg
pop
aam
lds
lock
popf
xchg
push
add
std
dec
and
dec
movsb
imull
sbb
lods
negl
xchg
out
cmc
divl
cmp
jecxz
ds
leave
and
ficompl
call
shr
cmpsl
and
pop
jecxz
and
dec
add
enter
mov
imul
mov
jge
loope
cmp
aaa
pop
xchg
xchg
jnp
add
push
add
cmp
hlt
xchg
push
pushf
mov
jp
inc
mov
in
pop
lds
imul
gs
mov
call
pushf
loope
jge
fisubrl
fsubs
mov
fisttpl
mov
aam
cld
pop
cmpsl
jnp
notl
lahf
dec
and
push
sbb
pop
jno
enter
push
jg
into
jg
ljmp
sbb
fidivs
clc
into
imul
incl
in
loope
mov
js
mov
dec
imul
xchg
xchg
jmp
mov
sub
or
xchg
mov
mov
and
sti
dec
scas
into
cmpsl
adc
mov
fbld
incl
out
or
ror
mov
mov
cmp
push
in
pop
cmpsb
pop
loop
call
je
outsl
sub
rcrl
ja
fildl
fistps
test
sub
add
and
movsl
jg
push
in
stos
lock
sbb
fistl
cmpb
lea
lds
leave
push
lods
dec
les
out
pop
hlt
lret
or
into
rcll
test
mov
faddp
data16
mov
scas
jmp
std
mov
scas
pop
mov
push
shr
loopne
cmpsb
pop
mov
add
mov
mov
or
outsl
cld
mov
push
push
adc
and
mov
cwtl
mov
outsb
mov
jp
xchg
addr16
mov
mov
cmp
or
sar
push
jmp
outsb
mov
xchg
sbb
pop
iret
jl
call
outsl
inc
adc
xchg
cmp
add
loope
cli
xor
pop
jmp
mov
push
mov
cli
inc
pop
push
adc
mov
add
sbb
jg
or
cmp
in
inc
xchg
shlb
ljmp
sti
inc
js
out
add
mov
dec
pop
push
mov
jle
adc
sbb
das
mov
jno
mov
cmp
pop
mov
pop
in
cmp
jbe
les
cmc
dec
popl
fdivl
fisubrs
scas
shll
cld
mov
sub
pop
arpl
lds
test
pop
int3
int
outsl
adc
adc
inc
sub
mov
ljmp
lds
lods
leave
pusha
clc
and
in
cmp
nop
dec
jg
decl
add
clc
aam
stos
outsb
cld
xor
ds
movb
lcall
cmpsb
std
mov
int3
pop
fidivl
rcll
cmp
sbb
dec
inc
shl
jl
jns
mov
out
test
sti
imul
xchg
repz
sar
pusha
int
jno
das
icebp
das
insl
dec
jns
movsb
rcrb
mov
sub
ss
jmp
jmp
mov
mov
mov
out
fs
stos
mov
cli
ljmp
std
jg
xor
mov
aad
pop
push
pop
lock
inc
mov
loope
mov
cli
clc
lods
adc
fildll
mov
mov
shlb
ja
sub
movsl
xlat
cmpsl
into
scas
cmp
lret
rorl
sbb
push
loop
std
fs
arpl
cmp
ljmp
jl
fnsave
lret
add
pop
sbb
xorl
mov
mov
mov
out
pop
fcompl
mov
xchg
cs
repnz
out
inc
mov
pop
outsl
ja
jmp
insl
mov
push
or
fbstp
mov
adc
scas
incl
xchg
sub
lahf
jb
enter
daa
inc
xor
nop
sarl
cmc
pop
std
adc
push
in
fldenv
outsl
cld
pushl
pushl
call
and
stos
repz
xchg
jne
push
data16
decl
daa
xor
test
adc
pop
int3
lret
aas
popf
test
sub
mov
cmp
add
loop
dec
sub
sbb
lods
lods
loop
int3
jecxz
cmp
jnp
cmp
std
call
cmp
or
jmp
neg
ret
push
adc
lret
insb
xor
mov
xchg
cmc
decl
mov
clc
or
decb
aaa
test
pop
mov
mov
rcrl
popf
push
push
lods
xor
jmp
mov
xor
pop
inc
inc
in
push
loop
filds
lods
shlb
dec
push
jmp
decl
xchg
arpl
mov
arpl
or
outsb
addr16
jg
and
aas
inc
mov
jmp
ja
das
loope
sub
mov
fs
pushl
in
xlat
insb
cmp
mov
mull
pusha
nop
fs
pusha
push
fbld
in
push
jae
lcall
bound
das
cmc
in
xor
pop
call
ljmp
movsb
adc
sub
aam
insl
xor
inc
arpl
mov
push
shll
aam
sub
clc
mov
mov
loop
sub
lea
out
loope
in
mov
mov
or
bound
loope
sub
sub
or
movsb
mov
push
mov
retw
fldt
pop
in
das
mov
repz
out
imul
sub
inc
sbb
sub
xchg
aaa
mov
enter
popa
mov
lret
cmpsb
mov
or
stos
cli
scas
out
and
cmp
xor
xor
bswap
test
call
repz
arpl
push
andl
sbbb
int
mov
jl
mov
pop
shll
mov
arpl
inc
je
aas
scas
scas
push
pop
movsl
pusha
pushf
inc
call
aaa
clc
pop
out
pop
call
fildll
mov
xchg
xchg
decl
lods
inc
je
int
rcr
stos
cmpsl
pop
es
xchg
mov
mov
sub
loope
subb
inc
sub
dec
pop
lods
adc
loopne
aad
cmp
loopne
sbb
gs
aaa
add
push
jmp
jg
call
pop
or
fdivr
lods
jb
cli
mov
lret
test
add
add
enter
in
jecxz
inc
sar
call
dec
inc
fisttpl
add
sbb
jnp
jmp
hlt
inc
pop
xchg
mov
pop
push
idiv
incl
xor
jle
pop
mov
ja
mov
inc
sbb
cs
pop
sbb
mov
lcall
iret
incb
repz
lea
push
dec
cmc
xor
iret
fdiv
dec
mov
int3
push
adc
stc
into
pop
in
imul
push
pop
lahf
inc
lock
iret
inc
inc
xchg
mov
pushl
insl
xchg
ret
movl
lock
inc
cmp
push
es
mov
scas
stc
sub
stos
xsave
mov
xor
ljmp
cmpsb
push
das
xlat
mov
push
addb
mov
jne
cmpl
mov
aas
push
hlt
mov
clc
dec
cld
call
jle
aas
aas
mov
sub
sub
mov
cli
movb
cmpsl
cmp
popf
cld
mov
push
cmp
sbb
icebp
test
ljmp
jo
jecxz
lret
cs
push
xchg
imul
fucomip
outsl
jg
dec
push
fs
lods
nop
jbe
popf
inc
ljmp
icebp
decl
cmp
cmc
push
subl
pop
push
and
mov
jp
call
cli
mov
jbe
gs
cmpsb
and
cmpsb
add
mov
cli
pushl
sahf
dec
mov
pop
jo
mov
add
in
out
add
and
add
sbb
ffreep
out
push
xlat
and
sti
adc
inc
daa
lahf
orl
fidivrs
push
cwtl
inc
imull
mov
and
repnz
sub
cmc
push
ficompl
cs
jno
mov
cmp
fs
dec
inc
nop
fcompl
jns
inc
mov
cmp
cld
imul
pusha
mov
pop
cli
jmp
push
dec
jecxz
lock
std
mov
cs
push
outsb
adc
add
test
das
cmc
mov
loopne
cmc
xor
les
sbb
jae
out
aaa
cli
jg
adc
cmp
jnp
fwait
jae
pop
sbb
in
je
jmp
sub
in
pop
or
mov
insb
movl
xchg
mov
imul
out
shrl
or
call
enter
js
push
int3
push
fimull
jae
pop
sub
mov
xlat
mov
movsl
and
inc
lahf
lcall
xchg
aad
loope
lods
sbb
or
decl
js
lods
adc
sub
pop
push
pop
pushf
movsb
lret
repz
jecxz
add
std
sub
aad
les
push
pop
insb
scas
inc
jnp
mulb
or
call
lcall
mulb
test
inc
jge
push
jne
dec
dec
test
jmp
mov
jbe
in
stc
imul
xchg
add
daa
pushf
rcl
sarl
sbb
dec
cmp
add
inc
pop
cmp
data16
test
adc
inc
loopne
fnstsw
pop
sub
dec
cmp
dec
popf
fidivrs
ljmp
mov
fsubl
and
fwait
js
pop
insb
jne
push
push
loope
mov
mov
lock
call
ja
ret
mov
clc
and
xchg
es
dec
xor
adc
jb
xchg
xor
shlb
mov
das
ja
dec
mov
xor
xchg
imul
movsb
cmp
in
mov
xor
sbb
fdivr
cmp
in
into
lcall
call
dec
sub
shrb
incl
jl,pt
lahf
mov
cli
dec
mov
dec
mov
lds
adc
jg
push
insl
imul
movsb
mov
cmp
popa
sbb
movsl
mov
mov
stos
xchg
cs
jbe
aad
into
decl
and
add
repz
insl
fistps
jne
cmp
push
test
inc
dec
add
xor
sub
ljmp
sub
mov
popa
fistpl
sub
in
inc
push
inc
dec
enter
test
pushl
mov
mov
and
dec
xchg
push
icebp
push
add
add
dec
cwtl
es
test
sbb
loopne
aas
push
mov
shl
xor
pop
xor
mov
lcall
inc
and
push
xchg
popa
daa
mov
scas
dec
inc
jo
rclb
cld
in
fwait
pop
aas
cmpsl
popf
fistpll
imul
fisttpll
repz
jg
incl
xchg
mov
pop
cltd
ret
shrl
divl
dec
cltd
adc
insl
inc
cld
ljmp
scas
mov
cmp
bound
lcall
cld
mov
jecxz
int3
mov
notb
jp
clc
repnz
enter
jmp
push
lock
add
mov
inc
flds
mov
mov
out
movb
aad
stos
popa
int3
mov
aas
sbb
std
fwait
bound
std
dec
push
cli
add
loop
push
fst
popw
fisttpl
pop
sbb
aam
pushl
push
jbe
lods
and
fwait
pop
out
jg
xchg
stos
fucomp
xchg
loopne
les
scas
push
cmp
test
xchg
imul
pop
cmp
fstps
mov
decl
pop
jne
push
and
mov
or
lods
mov
lret
cli
jmp
cwtl
mov
lret
gs
sub
test
out
incl
pop
mov
cmpsl
imul
es
inc
loop
out
pushl
js
rep
jno
arpl
imul
imul
call
dec
dec
mov
sub
ss
and
and
push
subl
call
nop
arpl
ret
ret
and
dec
push
pop
fwait
test
jp
into
test
cli
jg
jns
inc
ljmp
dec
adc
dec
lcall
ljmp
and
rclb
xor
fists
jae
scas
cmpsl
dec
mov
push
subl
and
add
jle
add
sbb
aam
xchg
add
jmp
pop
stc
out
ss
push
bound
call
jae
adc
jmp
pusha
fnsave
cmc
ja
jecxz
scas
mov
xor
lds
mov
repz
scas
add
daa
rcl
incl
lcall
test
imul
decl
idivl
jne
fstpt
les
pop
mov
inc
pop
xor
in
fsubrs
leave
orb
jns
std
push
mov
dec
pop
add
xor
adc
mov
addb
mov
jo
mov
fsubs
lods
dec
cli
roll
mov
jmp
arpl
imul
insb
jle
ljmp
arpl
fs
ret
xlat
mov
loope
aad
xchg
out
fdivrp
decl
std
pop
sub
jbe
mov
xor
aad
ss
xchg
dec
out
sub
jae
xor
mov
jmp
mov
outsb
cltd
int
ja
jmp
pop
lret
jle
mov
std
mov
jg
mov
xlat
movsb
nop
pop
jns
pusha
push
mov
pop
mov
pop
pop
mov
or
js
in
into
jnp
mov
add
lds
cmpl
adc
dec
jle
push
or
fwait
ja
test
cmp
dec
inc
sub
mov
movsb
push
adc
dec
mov
mov
mov
fs
lcall
mov
nop
les
je
sarl
sahf
lahf
pop
lahf
roll
or
ret
je
and
adc
adc
ss
lock
cmp
jo
test
lea
out
out
pushf
sbb
cmp
mov
repnz
lods
adcl
jb
and
and
std
inc
jmp
pop
or
mov
mov
lret
lret
lcall
loopne
mov
movsb
and
andl
push
cmp
ficomps
mov
int
adc
pop
jns
push
jno
inc
inc
mov
sub
outsb
pop
pop
jecxz
or
push
sub
inc
push
fdivrl
or
mov
mov
repz
add
dec
ret
pop
lods
int3
subl
test
incl
in
push
or
inc
test
lock
jg
sbb
js
movsl
out
xchg
cli
push
jge
sbb
lret
mov
jne
mov
and
js
and
and
xchg
hlt
add
sub
ljmp
std
mov
dec
test
test
or
es
decb
and
mov
jp
xorb
iret
push
cmc
cli
dec
mov
cli
cmp
aad
inc
sahf
push
inc
mov
adc
mov
dec
fyl2xp1
mov
les
xchg
or
int3
imul
clc
iret
ret
ja
out
sbb
push
cs
mov
pop
dec
mov
sub
jecxz
xor
and
aad
idiv
jp
aad
lret
filds
mov
enter
pop
cmp
insb
bound
push
xchg
out
das
mov
neg
ljmp
mov
push
and
pushf
add
cmp
pop
mov
test
rorb
mov
cmp
push
dec
aad
aas
mov
push
mov
xlat
pusha
test
call
fs
fcoml
mov
sarl
or
cmp
outsl
pop
dec
cltd
stos
push
jl
cmpsb
je
jmp
xchg
iret
xor
cld
ret
sub
int
sbb
mov
fdivrp
pop
ficoms
cmp
movsl
pop
xchg
mov
adc
dec
rcrb
or
and
jecxz
imul
das
adc
mov
fnsave
push
jg
xchg
xchg
std
test
out
in
jb
jle
test
lods
add
push
xor
and
arpl
dec
out
xor
jnp
xchg
fwait
cld
mov
push
add
xchg
out
pop
adc
cmc
stos
pop
lahf
pop
aam
dec
pop
insb
adc
xchg
and
outsl
loopne
icebp
movq
out
inc
or
fcomp
mov
aad
cli
fists
mov
clc
push
lock
add
std
sub
mov
insb
xchg
shll
sbb
incl
sbb
jmp
pop
out
sbb
into
fadds
fdivrs
pusha
mov
mov
cmpsb
adc
aaa
sbbl
icebp
mov
mov
call
movsl
pop
cmp
popf
lods
incl
inc
in
ja
pop
or
aam
mov
xor
arpl
js
xor
testl
jmp
push
out
sbb
pop
cmp
stos
push
icebp
lock
xchg
pop
loop
out
jb
mulb
sbb
insb
cmpsl
ljmp
lods
testb
sti
je
mov
add
or
cs
jne
push
jecxz
fistpll
or
jb
outsl
push
sti
lds
and
sub
jg
mov
sbb
sub
mov
jo
jmp
fsubr
lcall
ljmp
mov
adc
and
int
loope
jmp
lcall
out
lds
aad
out
mov
ja
insl
inc
fisubrs
repz
loopne
xor
sti
inc
shr
mov
call
outsl
cmc
fwait
enter
jno
push
aaa
dec
loop
lcall
loopne
sbb
jge
shl
insl
adc
mov
cmpb
sbb
xchg
sub
sub
pop
push
mov
aam
jnp
cmp
std
sar
lcall
mov
lahf
jle
pushl
pop
test
xor
push
jnp
test
aad
mov
imul
jnp
mov
jmp
xor
add
dec
sbb
jb
sarb
loop
es
decb
jnp
rclb
mov
setg
push
pop
pop
push
mov
je
sub
jmp
popa
xchg
jecxz
das
repnz
mov
pushl
jle
adc
fidivs
add
sbb
cmp
mov
incl
pop
add
mov
lcall
clc
sbb
ds
or
pop
loop
out
jg
mov
leave
jp
cmp
pushl
clc
outsl
imul
loope
imul
lea
sti
inc
pop
incl
rcrb
lods
pop
out
jge
cld
push
jnp
dec
cld
xchg
inc
jg
std
jg
call
sbb
loop
nop
cmc
idiv
mov
or
loop
scas
daa
and
daa
and
sbb
das
cmc
ljmp
cmpsb
cmp
xlat
mov
and
jne
or
aaa
fsubs
jae
stos
mov
mov
insb
mov
push
push
cld
jg
dec
bnd
andl
cmpsl
dec
iret
sbb
pop
xchg
lcall
cli
inc
mov
mov
push
jb
jnp
jg
xchg
inc
inc
inc
and
lcall
fbld
inc
loop
stos
or
mov
pop
test
inc
addr16
push
int
sahf
cmovb
icebp
decl
add
fisttpll
lret
pusha
call
pop
call
push
ret
call
mov
sub
icebp
cmpl
push
jne
add
xchg
or
xchg
test
sub
dec
dec
push
adc
jne
cmp
jne
lea
jmp
push
imul
popa
insb
inc
insb
roll
jb
or
fnsave
je,pt
arpl
xchg
add
fistps
or
mov
lea
xor
test
popf
imul
call
leave
int
mov
dec
push
mov
add
add
fimuls
sbb
push
add
pushl
das
incl
mov
adc
out
sti
add
incb
push
mov
mov
xor
or
je
js
lods
cmp
xchg
or
mov
fildl
in
mov
or
jne
and
rol
xor
add
add
and
mov
pop
pop
pop
pop
jmp
pop
dec
mov
pop
test
inc
push
sar
rep
popa
loope
rep
pop
fistl
mov
add
test
xchg
sbb
test
jge
dec
mov
mov
pop
sti
out
or
shlb
ret
adc
mov
mov
je
mov
or
jmp
mov
shr
sti
add
je
sbb
mov
sub
xor
sub
testb
sbb
std
div
or
dec
add
mov
lcall
movsl
mov
repnz
or
das
add
pop
mov
and
jmp
mov
sbb
add
outsl
test
xor
and
inc
fimuls
or
test
adc
push
and
cmp
mov
xor
popf
jle
cli
sarl
test
push
movsl
sub
ret
add
jne
add
inc
sbb
faddl
lods
add
mov
cwtl
push
jbe
stos
std
jne
and
push
add
mov
sahf
xor
fcompl
pop
push
jmp
xlat
scas
lock
sub
dec
shl
xchg
mov
incl
push
cmp
jl
js
pop
cmp
add
add
pop
jmp
xor
enter
sarl
xorl
jmp
add
inc
add
ds
jmp
jae
mov
cmp
push
push
add
pushl
dec
push
push
movups
pop
js
filds
inc
adc
jl
lock
sub
sbb
cmp
loopne
jne
inc
mov
add
inc
pop
loopne
add
mov
or
fistpll
cltd
push
pop
lods
lods
mov
loop
or
add
in
jl
mov
out
or
or
mov
or
out
adc
ret
or
push
dec
cwtl
mov
insl
sub
popa
inc
dec
mov
xor
add
fcomps
decl
adc
xor
push
in
pop
lods
mov
mov
cmpsb
imul
add
inc
js
je
fcmovb
or
jae
push
mov
punpcklwd
inc
outsl
js
add
jo
imul
inc
inc
inc
sub
and
push
dec
push
add
insl
mov
icebp
cmp
and
movq
insl
or
sub
arpl
pop
adc
mov
je
mov
xor
jns
ja
sti
outsb
popa
insl
imul
jb
cmp
push
outsl
jb
imul
push
mov
lods
or
adc
shlb
sar
jae
xor
dec
dec
out
pop
ret
add
jl
adc
popl
fmuls
fwait
xchg
and
add
xchg
sbb
push
inc
mov
lock
cmp
and
push
dec
or
das
mov
mov
ret
pop
inc
inc
mov
or
stos
xbegin
inc
adc
aaa
ds
dec
out
push
call
and
push
xchg
orb
push
sbb
or
fisttps
add
aaa
xchg
sbb
lock
and
add
sbb
ret
add
insb
clc
push
pop
lds
adc
sbb
sub
cmp
pusha
jo
mov
dec
adc
add
fistps
clts
inc
inc
in
mov
or
or
or
or
adc
adc
aas
clc
inc
adc
rcll
push
push
cmp
mov
xor
mov
mov
inc
mov
xchg
mov
adc
or
loopne
vminsd
mov
push
repz
std
mov
or
shll
mov
adc
into
shr
mov
ja
iret
and
negl
push
mov
add
loope
add
daa
in
insl
sar
mov
add
sarb
mov
ret
cwtl
or
push
push
push
xchg
push
mov
aam
add
rep
mov
jb
cltd
dec
and
xor
mov
mov
sti
sti
mov
inc
cmp
mov
jb
mov
sub
jbe
fwait
add
xor
add
mov
mov
lea
adc
sbb
fucomi
add
sbb
ja
dec
jge
insl
jge
pop
xor
cmp
filds
push
jecxz
mov
insb
jl
mov
jb
mov
mov
and
mov
add
mov
imul
fstp
adc
shr
mov
stos
outsl
loop
or
dec
faddl
add
fbstp
add
or
lea
xor
cld
xor
pop
xor
add
dec
adcb
mov
lock
mov
je
xchg
sub
push
cmp
pop
test
or
cmp
aas
mov
lea
inc
mov
cmp
enter
or
push
pop
xor
mov
js
xor
incl
jb
mov
mov
inc
mov
mov
mov
mov
push
out
fsubrp
fisubrs
lret
stc
or
adc
ret
sub
clc
sbb
push
shrb
mov
push
inc
mov
inc
jnp
aaa
out
jmp
cmp
jae
add
sbb
dec
insb
pop
std
mov
sub
xor
mov
xor
xor
rorl
cmp
fistpll
jns
cli
mov
sbb
xchg
jb
jae
xchg
inc
add
mov
lea
add
pop
ret
int
out
fidivs
xor
aas
mov
add
push
push
call
xor
rcrl
shl
add
pusha
negl
mov
ficoms
push
fsubr
mov
lea
or
or
add
shrb
xchg
push
movsl
sbb
data16
pop
repnz
jmp
lea
lea
or
inc
add
addb
ficompl
adcb
add
mov
push
test
pop
outsb
jnp
aam
or
stos
push
jmp
cs
cs
xor
int
jnp
fisubrl
cld
mov
and
xor
adc
dec
negb
cli
fistpll
sbb
adc
adc
lea
mov
call
jb
fwait
or
adc
sti
add
pop
in
sbb
jae
mov
decl
and
sbb
inc
jmp
jne
push
pop
mov
mov
rolb
jle
cmp
sti
out
mov
and
ss
adc
push
sub
daa
push
or
and
cmp
pop
mov
add
aaa
in
adc
mov
cmp
test
aad
stos
lea
sub
mov
rorb
sub
adc
cli
xchg
and
andl
mov
xchg
sbb
lods
adc
sbb
push
lea
arpl
jecxz
lret
mov
clc
pop
sub
in
pop
or
movl
xor
xchg
dec
insl
jl
loope
call
jae
fisttpl
arpl
inc
cmpsl
push
and
sub
cmp
add
and
add
aad
in
mov
icebp
shrb
movsb
fldl
leave
dec
jl
push
fs
jecxz
xor
scas
lcall
or
aad
cs
pop
aad
or
xor
push
or
out
shrb
outsl
mov
into
testb
ljmp
popa
mov
imull
adc
lret
pop
mov
cli
mov
xchg
pop
into
xor
je
cmp
jb
fnstsw
outsl
std
push
inc
add
shrb
mov
movd
mov
outsb
xor
mov
dec
aad
ss
add
or
sub
fmul
cmp
shr
test
enter
and
incb
sbb
lea
jmp
add
inc
enter
and
fadds
in
scas
add
lock
pop
ljmp
add
iret
xchg
adc
in
mov
pop
xchg
adc
lock
cli
hlt
std
mov
mov
cli
cmp
sbbb
inc
lea
cmp
scas
jae
sub
sub
inc
mov
mov
push
adc
mov
enter
arpl
jnp
test
sub
subb
and
lcall
inc
ret
int
add
xchg
xor
out
stc
and
add
inc
ljmp
jb
outsl
mov
cwtl
adc
cmc
insb
gs
popa
outsb
and
into
call
outsl
popa
fs
xchg
xchg
push
aam
enter
jmp
std
popa
jmp
mov
test
fmul
faddl
and
iret
jle
stos
movsl
psubw
sub
sub
inc
nop
lods
xor
mov
sbb
stos
call
cmp
cmp
push
smsw
or
pushf
adc
and
and
add
addb
add
dec
push
dec
mov
fadds
add
xor
push
add
inc
test
sbb
daa
adc
and
roll
pop
rcrb
jb
add
pusha
xorl
nop
daa
fstps
andb
add
cwtl
xchg
test
daa
push
imul
ret
mov
ja
repz
or
sub
int3
vpmacsww
sub
ljmp
adc
nop
push
pop
out
or
out
jmp
test
jbe
pop
cmp
lret
lcall
test
pop
movsb
out
sub
dec
rclb
jg
sti
repz
stc
fidivs
mov
mov
adc
pop
dec
mov
cmp
sub
adc
and
jmp
por
push
addr16
mov
pop
cmp
mov
sub
lcall
call
insb
arpl
push
xlat
out
movsb
xor
or
sbb
cmp
sub
ljmp
xlat
pop
push
sub
jo
xchg
lret
aaa
jg
ret
dec
and
daa
jbe
call
mov
std
popa
jl
push
ss
ja
rclb
call
dec
push
aaa
ja
aas
inc
ret
sbb
setle
ljmp
sub
mov
xlat
lahf
sahf
in
pop
and
xor
inc
daa
sub
pushl
sub
xor
mov
and
adc
cmp
mov
call
push
mov
popa
clc
stos
jb
shlb
insl
jne
xchg
fcomps
decl
adc
jnp
loope
adc
enter
pop
xor
jl
xor
nop
inc
or
ljmp
pop
sub
movsl
popa
sub
sbb
jb
outsl
fadd
fnsave
jmp
add
aas
mov
out
adc
incl
mov
mov
pop
mov
dec
and
or
or
mull
sarb
fcmovu
lods
in
jno
and
lea
incl
ljmp
cld
cld
scas
adc
mov
and
fdiv
mov
mov
xor
add
push
cwtl
mov
mov
or
insl
or
call
dec
mov
lcall
xor
pushl
cmc
pop
mov
sub
pop
cmp
out
call
xor
jae
decl
push
fists
mov
adc
imul
les
mov
jg
push
jle
stc
dec
pop
cmp
mov
test
xor
dec
lret
test
adc
jecxz
xor
gs
int3
fnstsw
out
movsb
arpl
decl
push
and
outsl
imull
mov
jne
push
mov
fldcw
push
aas
mov
int3
adcb
lret
loopne
fisttpl
sbb
lds
mov
sbb
stos
shll
aad
decl
or
sbb
aam
dec
bts
vcmpltsd
sarl
jno
mov
cli
mov
pop
lods
popa
test
popf
sbb
and
sub
ljmp
jns
mov
orb
in
xchg
jmp
ljmp
jg
or
lock
jb
ret
fdivrp
fmul
loopne
pop
loop
arpl
int
mov
sti
pop
or
mov
mov
das
insb
push
or
xchg
mov
sbb
lcall
push
mov
adc
std
cmp
and
jle
aas
popf
stos
jno
jae
mov
rcrl
clc
ljmp
jecxz
pop
push
mov
int
int
mov
pop
xor
out
add
pushl
mov
lret
pop
cmp
mov
sbbb
adc
fisubrs
push
mov
cmc
inc
dec
aad
pop
jmp
xor
lods
cld
pop
ret
int
popa
and
adc
icebp
roll
adcb
jnp
sub
inc
jmp
pop
pusha
lcall
or
out
jge
insl
cmc
lock
sarb
mov
mov
lea
repnz
mov
les
push
out
dec
xor
push
mov
test
inc
incl
sbb
mov
or
in
fnstsw
push
push
mov
jg
pop
push
clc
icebp
jno
mov
mov
nop
lock
xor
ljmp
cltd
aam
jbe
and
in
insl
adc
cmpsb
ror
xorl
sbb
ljmp
add
sub
dec
mov
ret
cwtl
jge
jl
xlat
std
adc
cmp
mov
push
shrb
iret
loopne
jle
mov
fisubrl
adc
jmp
sub
sub
mull
cmp
push
arpl
push
push
decl
daa
data16
lcall
repnz
movsb
pop
dec
mov
mov
push
imul
scas
test
je
clc
add
jg
sub
fs
hlt
mov
jmp
cwtl
mov
rcrl
push
mov
dec
pushf
scas
ja
fisttpl
mov
sub
dec
shr
and
mov
adc
decl
pop
mov
scas
push
nop
lcall
add
ljmp
in
mov
sub
jge
outsb
dec
out
lcall
js
pop
decl
mov
movsl
mov
dec
fmul
stc
pop
dec
addb
sbb
ficoms
cli
jns
js
std
fisubs
scas
mov
mov
fiaddl
mov
adc
je
inc
and
cltd
xlat
stos
fs
das
xchg
mov
sbb
pop
movsl
xchg
jbe
gs
and
jns
in
inc
add
jmp
rcrl
movsb
aaa
dec
andl
leave
xchg
scas
cmpsb
push
lods
dec
call
sbb
ss
jb
and
call
push
add
push
loope
outsl
sbb
sbb
and
clc
xchg
fmuls
xor
jo
icebp
jmp
ljmp
mov
inc
ficomps
dec
mov
cld
cmp
xor
sbb
push
xchg
in
std
and
xchg
mov
inc
xor
xchg
pop
cld
fisttps
xchg
mov
sbb
jmp
adc
ja
es
ss
enter
lahf
hlt
out
decl
repnz
into
xchg
cs
inc
in
cwtl
inc
sub
ret
pushl
mov
inc
add
inc
data16
dec
mov
or
jle
clc
iretw
std
pusha
inc
fucomip
repnz
pop
mov
mov
add
lea
pop
cmp
adc
std
or
mull
movsl
scas
aaa
repnz
fimuls
sbb
push
pop
sub
aaa
jmp
xchg
ja
or
mov
inc
cmc
out
xor
decl
cld
jns
xchg
push
leave
pushf
andb
mov
movsb
dec
lahf
cli
mov
mov
jg
cmc
cld
test
bound
or
cmp
gs
dec
test
icebp
dec
sahf
add
mov
ret
iret
mov
mov
and
mov
add
cli
imul
cs
sti
stos
aam
adc
jmp
pushf
adc
call
call
hlt
add
pop
mov
or
ficoms
out
mov
outsl
std
daa
outsb
xchg
pop
addb
and
cmp
mov
jg
inc
adc
xchg
movsb
shl
daa
sub
sbb
mov
in
jae
lcall
push
xchg
or
sbb
push
subb
xlat
xchg
subb
jg
lcall
xchg
mov
std
mov
ljmp
adc
decl
or
nop
sbb
test
inc
insl
repz
mov
pop
mov
cmp
sbb
add
jg
mov
push
outsl
mov
mulb
lea
cmp
outsl
mov
fdivrl
filds
js
cmp
int
mov
jmp
or
xchg
arpl
mov
cmp
xchg
jmp
incl
clc
sbb
xchg
push
cltd
sbb
bsr
jb
je
hlt
mov
jg
mov
sub
add
cmpsl
pop
pop
xor
mov
and
fcos
incl
test
sbb
cmp
pop
fsubrs
jecxz
iret
stos
or
mov
aam
cmp
lds
nop
pop
mov
sub
ret
mov
xchg
pop
test
pop
clc
lcall
enter
lcall
in
push
test
add
call
sarl
jb
insl
andl
icebp
push
cli
adc
sub
cmp
js
jg
lds
popf
adc
xchg
sbb
fstl
and
lcall
push
push
mov
mov
loop
movsb
push
jg
jp
jg
movsl
fsubl
fwait
push
cmpsb
pop
out
shl
ds
cmp
mov
push
subb
lahf
dec
lret
sub
aam
ljmp
lock
imul
push
inc
or
test
xor
lcall
mov
insl
or
aaa
mov
add
fiadds
fistpll
loop
push
sbb
lret
and
or
dec
mov
add
mov
test
push
adcb
pop
and
push
aaa
mov
mov
pop
mov
mov
bound
mov
mov
test
out
xor
les
cmpsb
or
ljmp
imul
add
cmpsb
mov
mov
jbe
lret
std
cs
mov
mov
ficoms
mov
sahf
add
int
ja
dec
xchg
clc
mov
das
scas
mov
mov
hlt
aaa
jecxz
mov
fnstsw
xor
adc
sub
sbb
jnp
cld
pop
jecxz
stos
or
aad
pushl
shl
jbe
inc
mov
and
xor
aaa
mov
lcall
addr16
xchg
xor
jmp
fisttpl
xor
sti
movsb
and
mov
dec
orl
lea
pop
decl
mov
fs
addr16
push
test
int3
das
ficomps
add
mov
decb
and
loope
jmp
adcl
sar
lds
pop
adc
and
jmp
push
aam
pop
push
in
mov
add
mov
sub
or
jg
mov
jne
xchg
or
aas
sarl
mov
bound
xchg
mov
call
pop
xchg
mov
mov
loopne
std
jmp
call
sub
mov
dec
sbb
mov
jno
xchg
js
sub
and
push
mov
dec
add
push
pop
sbb
cmp
jnp
pushl
sahf
movsb
inc
dec
fsubl
insl
imul
ljmp
xor
jg
out
jg
fldenv
add
mov
xchg
aad
out
dec
sbb
jle
add
daa
jo
fidivl
push
repz
lcall
pop
mov
lcall
mov
jg
push
repz
jo
nop
xor
ss
cmp
aam
mov
clc
ljmp
mov
push
pop
or
aas
jg
rcrl
incl
xchg
dec
jge
mov
mov
decl
arpl
imul
add
sub
cwtl
pop
shlb
mov
fistl
mov
jnp
mov
int
test
xor
and
dec
imul
lahf
sarb
add
dec
jp
decl
cmp
dec
lods
gs
cmp
jno
outsb
mov
negl
lret
adc
adc
das
outsb
daa
repz
adc
cmp
jge
jg
push
mov
sarl
lds
and
jnp
push
xchg
push
adc
out
mov
test
adc
mov
test
in
fsubrl
ficomps
and
fistl
xchg
outsl
adcb
out
call
dec
xor
jae
icebp
pushl
movsl
pushf
ret
das
mov
push
sbb
push
fimuls
xchg
jne
dec
and
aaa
lahf
cwtl
cmovae
dec
fwait
movsb
xchg
sbb
cmc
fcmovnu
dec
mov
nop
out
sub
push
les
pushl
clc
sub
or
inc
fisttps
xlat
outsb
in
add
pop
aam
andl
test
mov
stos
subl
shrb
push
inc
mov
cld
pop
std
jo
cwtl
jg
mov
rcrl
ljmp
cmp
les
add
push
mov
sbb
loopne
push
dec
fsubr
mov
cmp
mov
jae
fdivr
and
call
and
sbb
sahf
xor
jp
add
inc
sbb
out
push
and
ljmp
push
or
sub
xor
jbe
stos
in
sub
mov
fsubrl
orl
xchg
repz
mov
imul
and
rorb
adc
push
lcall
test
lahf
push
mov
sub
push
push
out
cmp
insb
push
jl
inc
fiadds
xchg
jl
shll
out
in
add
jnp
je
imul
add
sbb
jg
and
fs
add
rol
push
leave
pop
adc
adc
aas
xor
pushl
out
sarb
icebp
add
sbb
mov
inc
pusha
mov
fcomip
push
jg
call
in
or
dec
jno
mov
push
inc
adc
incl
push
mov
mov
inc
dec
ds
jl
cltd
jge
xor
mov
pusha
lahf
lods
push
sbb
jl
cld
xor
pop
ret
adc
ljmp
jae
pop
pop
fwait
enter
pop
xor
cmp
ret
dec
add
rol
into
into
jg
nop
jge
fcoms
sub
dec
ss
mov
pop
xchg
pop
aas
movsb
out
movsl
lea
int3
xor
daa
stos
pushf
shrb
std
mov
mov
inc
mov
pop
mov
ljmp
dec
inc
out
in
sub
xchg
and
lock
in
xor
inc
sbb
les
in
in
inc
fbstp
mov
jmp
fisubl
and
push
mov
aad
adc
incl
lods
movsb
and
icebp
lret
fdivrs
movsl
pop
dec
xor
cmc
dec
push
rcll
xor
fisubl
jae
jle
mov
sub
mov
js
call
sub
xchg
xor
mov
xchg
fistpll
adc
sub
sarl
inc
inc
int
cmp
dec
cld
lcall
in
push
jns
dec
mov
dec
push
testl
pop
movsl
inc
xchg
aam
js
scas
pop
sbb
pop
es
mov
adc
or
pop
mov
or
jmp
cmpsb
push
gs
mov
test
lret
call
sarl
xchg
jp
mov
cwtl
push
shrb
imul
push
movsb
pusha
and
mov
mov
sbb
lock
decl
and
sti
and
cmp
je
aad
mov
clc
outsl
lock
dec
jp
pop
cmp
pop
fwait
insb
push
sbb
cmp
and
pop
loopne
addr16
daa
mov
dec
stos
add
loop
xor
push
xor
xchg
call
push
scas
jo
push
adc
mov
sub
adc
xor
mov
nop
mov
xor
js
in
push
or
cmp
out
sbb
imulb
aaa
or
jo
lcall
pusha
in
pop
int3
popa
data16
inc
adc
sarb
test
daa
shrb
ljmp
mov
jge
rcl
xchg
jae
scas
or
call
popf
jns
jns
cmp
jg
inc
adc
pop
fsts
call
push
loope
cmp
ljmp
dec
dec
mov
scas
aad
test
outsb
push
movsl
and
mov
mov
dec
xchg
popf
mov
jo
xchg
mov
repnz
les
and
mov
pop
in
sbb
jo
dec
in
inc
jo
cld
call
es
push
lahf
icebp
out
outsl
and
popa
popa
push
push
xor
fisttpll
lcall
stc
out
jmp
and
pop
aad
stc
pop
cmp
push
mov
ljmp
frstor
adc
push
jge
dec
and
repnz
fsubr
ljmp
mov
data16
lea
pop
clc
xor
icebp
push
xchg
pushl
xor
jge
sbb
jns
adc
out
inc
call
mov
int
out
dec
xchg
xchg
mov
mov
fbstp
adc
cmp
sub
sub
xchg
push
add
ljmp
rep
xchg
push
jg
xlat
sbb
imul
movntss
mov
mov
enter
push
testb
out
or
or
insl
popf
lcall
cld
pushl
sub
mov
fmulp
outsb
push
loopne
xor
mov
lcall
ret
jae
popf
out
imul
ret
fs
filds
pop
lock
pop
loopne
pop
push
flds
mov
xchg
imul
icebp
inc
gs
pop
rclb
out
cli
sbb
rcl
pop
rcr
cli
jmp
mov
jnp
fwait
add
shll
xor
outsb
ss
ljmp
add
inc
clc
hlt
sbb
sub
jg
insb
cmpsb
push
dec
cmc
pop
cli
outsl
and
inc
sub
dec
stc
jecxz
xor
mov
pop
call
pop
push
shl
jecxz
inc
inc
lods
into
lds
fiadds
jmp
sbb
cwtl
cmp
in
int3
iret
push
sub
mov
or
cmp
jns
popf
ljmp
mov
scas
pusha
scas
popf
cmp
push
mov
cmp
cmc
pop
call
pop
jl
xor
hlt
pop
lea
shrl
decl
aaa
mov
pop
or
and
cld
stc
lods
xchg
aam
jecxz
aas
cmc
pop
adc
call
jge
lahf
inc
mov
pop
jns
cmp
repz
pop
insb
lret
push
fldl
push
shrl
call
xlat
cmp
xchg
shrl
cli
loope
imul
pushl
stos
subl
dec
imul
outsl
adc
out
jmp
push
mov
mov
std
sub
adc
push
es
lock
pop
jae
push
in
pop
je
and
or
daa
cmpsb
mov
push
pusha
in
mov
imul
loopne
mov
dec
dec
cld
pushl
mov
popf
xor
sub
in
movsb
clc
mov
dec
lods
aas
sub
mov
lcall
cmp
imul
enter
pop
cmp
push
mov
dec
daa
dec
in
jnp
call
lock
lock
xor
dec
or
mov
out
call
les
loop
mov
mov
jb
subb
mov
xor
xchg
cmp
xlat
jns
pop
add
shll
js
mov
sbb
pushf
incl
frstor
stos
push
add
mov
jno
lcall
mov
jge
inc
add
dec
push
cmp
ljmp
lcall
dec
mov
cmp
and
orl
xchg
jo
incl
pushl
cmpsl
std
pop
movb
jae
lret
mov
xor
daa
imul
leave
adc
mov
push
cli
jg,pn
mov
mov
mov
mov
dec
fiaddl
push
sbb
cmp
aas
cmp
sbb
sub
fsub
lcall
nop
js
popa
sti
mov
jp
dec
lock
dec
cld
outsl
pushl
mov
sbb
add
or
ljmp
lcall
pusha
shlb
jecxz
insl
in
inc
pop
or
jne
addr16
push
out
and
adc
movsl
movsl
sti
inc
push
sbb
cmp
fcmovnb
cld
rcll
call
dec
int3
xchg
cmp
adc
push
push
mov
fadd
jae
pop
icebp
sbbb
sbb
call
inc
or
push
inc
pop
sbb
das
lock
mov
aaa
cmp
shll
jp
je
cmp
mov
add
jg
aas
outsb
mov
mov
inc
jbe
daa
out
out
icebp
incl
sub
out
xchg
cmp
gs
nop
rolb
cs
jecxz
mov
incl
gs
loop
insl
jg
and
lcall
mov
cld
incl
ficoms
or
packsswb
insl
test
out
clc
ljmp
inc
cli
pop
loopne
sbb
pop
sbb
out
into
movsb
push
add
out
movsb
enter
ljmp
cld
aaa
pop
enter
pop
cmpsl
ret
dec
stos
ret
inc
aas
add
adc
inc
ljmp
ljmp
sbb
mov
stc
add
cmp
ss
scas
push
dec
and
fld
sbb
jecxz
pushl
mov
sub
stos
into
shrb
push
push
loopne
cmp
psubw
mov
sub
sub
push
pop
call
cwtl
push
and
push
jecxz
je
adc
cltd
sar
ljmp
or
enter
and
mov
push
cli
call
mov
out
movsb
ja
insb
jmp
pop
test
or
sti
mov
call
loopne
mov
adc
mov
or
enter
dec
cmpsb
pop
stos
sbb
lcall
mov
sub
test
repz
add
or
fdivl
out
dec
adc
dec
push
sbb
cmc
xchg
cli
repz
mov
and
mov
call
mov
repz
xchg
scas
push
sbb
scas
imul
cmpsl
jle
in
orl
or
pop
jecxz
lahf
pop
sub
andl
cmp
jb
jne
mov
mov
outsl
lock
outsl
test
mov
scas
nop
pushl
mov
bound
inc
das
fnsave
mov
arpl
repnz
lods
xor
push
add
mov
mov
mov
pop
or
xchg
or
adcl
in
cmpsb
xchg
ljmp
sub
inc
add
leave
add
popf
jmp
repnz
fdivs
decl
xchg
mov
rcl
mov
add
xchg
mov
mov
add
out
aaa
xchg
push
sbb
fidivs
sar
jmp
shrb
in
push
movsb
insb
rolb
outsl
inc
xchg
mov
mov
fsts
out
pusha
mov
xor
lret
xchg
in
loope
sti
jmp
sub
or
pop
ret
sub
cli
jg
jp
jno
shll
xlat
adc
cmp
clc
dec
mov
sub
frstor
inc
push
jge
mov
mov
sbb
scas
movsl
jp
ficomps
frstor
shr
and
dec
rcrl
push
data16
xchg
mov
in
sub
add
incl
incl
fiaddl
imul
dec
notl
fsubr
gs
dec
insl
cmc
ljmp
scas
lock
loope
cmp
add
pop
cwtl
in
out
mov
xchg
push
shrb
and
das
fnstsw
addr16
cltd
call
iret
xor
mov
icebp
push
and
loop
push
mov
test
mov
sub
test
int3
scas
movswl
incl
and
lahf
jg
sbb
int
pop
or
popf
xchg
andb
or
mov
clc
pop
and
push
push
lods
pushf
stos
or
test
jns
sbb
inc
cltd
jmp
pop
sbb
xor
or
mov
jg
sub
sti
sub
int
sbb
cmp
push
lds
aaa
clc
mov
lahf
cmpsb
call
push
imulb
fisttpl
inc
jg
adc
fiadds
into
or
xchg
xor
sub
pop
add
mov
sub
jns
xchg
sub
xor
cmp
mov
cli
xchg
shlb
add
in
xchg
mov
push
jo
and
orl
lcall
ffreep
pop
icebp
xchg
mov
scas
mov
icebp
mov
xor
cld
call
iret
outsl
stos
xchg
out
dec
jg
mov
outsl
mov
filds
in
xor
mov
push
adc
xchg
push
sub
mov
cmp
enter
push
cld
add
cmp
ret
pop
clc
jmp
addl
movsb
lret
jns
mov
and
test
push
jg
push
iret
fistl
inc
cmc
push
aam
sti
test
iret
xchg
inc
mov
jmp
pop
ja
push
iret
add
fs
jnp
pop
fwait
not
out
xchg
subl
fucomip
mov
insl
push
lds
sar
pop
lea
fidivrs
outsb
push
push
adc
roll
std
clc
ljmp
add
xor
mov
xchg
mov
out
mov
in
call
test
mov
shll
dec
inc
fmull
fstp
xor
std
xchg
add
into
pusha
dec
add
call
stos
repz
lahf
pop
jmp
jg
std
jne
testl
shrl
or
gs
fisttpll
jp
pop
xchg
sbb
cmp
sbb
popf
add
dec
int3
outsl
sbb
add
jmp
aas
iret
xchg
push
pop
mov
sub
pusha
rep
pop
dec
ja
ljmp
jne
jo
sub
popa
mov
and
sub
mov
cld
pushf
popa
popf
mov
lock
call
inc
test
aas
inc
dec
sarb
icebp
xchg
in
bound
pop
mov
decl
jo
adc
dec
and
inc
ja
push
push
sub
and
rorl
sub
jmp
adc
loopne
out
std
mov
sbb
ficomps
lret
aas
fidivrs
ljmp
adc
sub
outsb
xchg
mov
ret
gs
call
bound
lret
je
aad
jo
xlat
js
fstpt
and
lcall
out
push
rorb
jmp
cli
lcall
mov
loop
pop
stos
mov
mov
ljmp
decl
dec
add
jnp
jno
cmp
xchg
mov
xchg
ret
imul
lcall
stos
inc
loopne
jg
jmp
insb
incl
lahf
das
push
cmp
call
jo
inc
xchg
mov
mov
jnp
inc
inc
xchg
fwait
pop
xor
fbld
nop
xchg
pop
aam
pop
jae
jecxz
cltd
mov
add
in
dec
in
mov
loopne
lret
add
mov
shrl
loopne
lock
xchg
add
mov
add
jne
dec
pusha
call
or
sub
lret
imul
push
lods
ljmp
pop
cmc
mov
sbb
aam
cli
mov
fwait
pushl
push
cmp
mov
pop
stos
inc
xchg
repz
xor
inc
fcos
call
jae
adc
and
ja
push
aam
adc
push
pop
xchg
sbb
mov
push
clc
fbstp
cld
dec
jecxz
lea
fildll
call
shll
test
aaa
test
imul
mov
dec
iret
leave
add
xor
movsl
std
incl
gs
or
pop
xor
sahf
and
sbb
mov
es
sbb
or
enter
mov
in
or
orb
adc
pop
clc
sti
jp
cltd
mov
lods
fs
pop
xor
or
int3
test
out
test
popa
incl
xchg
lahf
lea
mov
inc
fistps
js
in
testb
dec
sub
adc
jb
and
sbb
je
sti
lds
inc
cmp
jo
pop
and
sbb
mov
sahf
sbb
or
push
cmp
cli
test
adc
lcall
call
dec
fs
dec
sarb
xchg
sub
xchg
outsl
add
data16
fbld
fmuls
jmp
sub
mov
push
mov
xchg
mov
dec
mov
imul
aam
mov
out
cwtl
xor
and
stos
jge
add
cmp
fdivrp
idiv
decl
shll
sub
mov
mov
jo
pop
sub
scas
mov
sub
call
xor
cmp
jb
insb
cwtl
mov
movsl
aas
xor
ja
jecxz
xlat
rcrl
sub
rol
aad
decl
rcr
dec
leavew
lcall
addr16
das
in
fdivrl
jp
xor
rolb
dec
es
jmp
sbb
push
aas
lock
sub
or
hlt
in
mov
xor
mov
in
popf
mov
mov
jno
mov
sub
jecxz
add
inc
or
jl
test
iret
inc
lods
push
sti
push
cmp
in
pop
mov
xor
fldcw
push
ss
mov
push
loop
imul
in
push
jl
fxtract
jnp
sub
inc
add
inc
ljmp
inc
enter
cmp
inc
mov
pop
in
sbb
sti
push
mov
xchg
repnz
data16
les
pop
cmp
cmpsl
push
mov
xlat
sbb
jno
adc
dec
fwait
or
sbb
mov
inc
repz
addr16
incl
or
test
adc
or
das
rcrb
dec
lods
add
pop
sub
jg
dec
jg
es
imul
lret
imul
cmc
cmp
pop
xchg
push
jecxz
std
int3
arpl
mov
add
sbb
outsb
std
ljmp
add
push
mov
ljmp
mov
push
fbstp
sbb
push
xor
cli
push
pop
pop
fcmovbe
out
lret
nop
jmp
mov
je
xor
pop
out
int3
and
lret
xchg
xor
enter
lods
jle
inc
mov
mov
mov
or
pop
daa
xchg
xchg
inc
mov
jmp
jl
push
inc
dec
jl
sbb
movsb
inc
add
jns
iret
fwait
cltd
and
mov
cmc
push
pop
cmpsb
je
mov
mov
xchg
inc
xchg
cmp
adc
ja
pop
mov
adc
mov
pop
mov
sub
ret
dec
ljmp
int3
js
lods
or
sbb
jbe
add
mov
add
shll
js
ret
mov
sub
iret
ss
in
fsub
cld
xchg
mov
dec
scas
insl
adc
inc
adc
into
and
loopne
push
and
das
lock
xchg
test
mov
mov
mov
cli
out
int
lret
lahf
stos
xchg
lea
push
clc
mov
mov
rclb
and
adc
pushl
in
mov
xchg
pop
scas
stos
addr16
nop
sub
shlb
call
cli
in
jb
frstor
test
rcrl
mov
leave
aas
call
inc
jp
subb
pushf
cmpsb
int
mov
or
mov
decl
xchg
sti
in
adc
push
or
mov
fdivr
inc
icebp
push
mov
sub
loopne
mov
adc
in
dec
hlt
ss
cli
scas
ret
incl
lods
gs
add
jge
mov
test
roll
pushl
cli
je
icebp
push
cmpsl
call
outsl
inc
mov
pusha
mov
push
inc
jmp
incl
hlt
or
lods
dec
inc
jmp
mov
dec
daa
pop
dec
ja
and
das
std
lcall
cmp
cld
sub
into
lock
rorb
and
mov
jbe
sbb
and
sbbb
jne
daa
and
out
aam
pushl
adc
mov
lea
call
pop
or
pop
push
outsb
das
jg
jmp
fiaddl
jmp
jb
lock
outsl
pop
fsub
cmp
jecxz
and
aam
jmp
pop
pop
add
lcall
jecxz
jmp
rcr
jb
pushl
clc
out
inc
int3
push
cwtl
nop
aad
outsl
jecxz
es
mov
push
mov
cld
push
mov
loop
cwtl
or
jmp
lds
and
xlat
mov
jnp
decl
mov
jns
pushf
and
adcl
and
movzbl
cmpsb
stos
jo
loopne
cmp
push
fwait
add
jle
mov
gs
inc
pop
ds
imul
decl
repz
mov
sub
cmp
aaa
js
nop
add
incl
movsb
jns
test
sbb
cltd
push
mov
push
jl
jbe
cli
cltd
adc
pop
and
incl
push
dec
mov
jle
xor
out
out
movsl
in
mov
add
dec
bound
jge
cmc
inc
or
incl
ror
movsb
int3
jae,pn
shr
pop
pop
pushf
or
mov
mov
ret
fs
mov
ret
ror
stos
test
pop
cmp
xchg
rcll
lcall
jge
push
add
dec
xor
ret
sbb
leave
jl
jno
icebp
leave
jne
ljmp
rcrl
popf
or
adc
cmc
enter
and
push
cmp
push
pusha
pushl
pop
je
popf
pop
inc
imul
frstor
pushl
jae
sti
insb
xor
lahf
xchg
mov
mov
jno
pop
je
inc
cld
cmpsl
dec
nop
mov
movsl
inc
ds
loope
mov
pushf
pop
jmp
xchg
outsl
mov
inc
mov
push
and
dec
push
sbb
hlt
roll
jmp
in
pushf
bound
sbb
je
cmp
pop
lods
sub
popa
jb
push
jb
ret
dec
out
loop
test
sub
push
lea
add
fidivrl
cmc
out
xor
sbb
les
add
incl
pop
jnp
add
push
jbe
xor
nopl
in
jmp
popf
push
ficomps
incb
cmp
pop
jmp
movq
inc
sub
xchg
jge
inc
iret
cmp
ficoml
xchg
inc
rol
cli
ret
mov
into
mov
aas
push
mov
fnstenv
lods
inc
mov
cli
aaa
movsl
cmp
sbb
push
lods
jp
aam
fstps
call
push
repnz
imull
in
jno
loope
mov
sbb
ljmp
jno
jno
jg,pt
jnp
sbb
cmp
loopne
add
sahf
lock
adc
jb
cmp
xchg
test
jle
ljmp
fnstsw
in
jge
hlt
mov
test
incl
jmp
lahf
xchg
jns
jecxz
repz
jne
dec
in
pop
xchg
outsb
cmp
mov
aaa
notl
push
out
orb
pop
mov
rolb
cmc
push
cwtl
mov
or
mov
dec
jb
int3
hlt
ljmp
mov
iret
mov
pop
and
and
sbb
incl
pop
aad
notl
inc
dec
push
mov
js
mov
jo
cmp
fisubl
lea
ljmp
stos
cltd
movsb
fadds
call
mov
ljmp
fstl
arpl
insb
or
add
dec
paddw
fildll
push
clc
jge
call
xchg
mov
out
clc
lcall
cmp
xor
adc
pusha
scas
pop
shlb
fsubp
dec
mov
ljmp
mov
addr16
pushfw
lods
loopne
repnz
xchg
xchg
adc
jmp
lcall
sub
push
jb
pop
in
rolb
push
ds
sti
xor
mov
dec
cltd
scas
push
push
cmc
jno
add
xchg
aas
data16
aaa
sub
lock
fsubrs
mov
incl
mov
jge
xchg
add
mov
adc
or
sar
xlat
dec
stos
jbe
mov
shrl
shlb
pushl
fsubl
jg
jecxz
cmp
in
xor
popa
pop
mov
inc
mov
mov
ror
cmp
addr16
xor
xor
mov
mov
decl
shlb
pop
test
xchg
repnz
inc
mov
sub
sbb
loop
clc
mov
and
and
lcall
ljmp
adc
push
cld
out
jg
incl
testl
loop
push
leave
inc
jg
mov
cmc
mov
sbb
imul
mov
inc
mov
adc
push
cmp
push
jo
std
scas
pop
pop
call
inc
or
test
mov
lcall
xor
dec
imul
outsl
popf
xchg
sbb
push
pop
inc
lds
cmpl
ljmp
mov
sti
aad
out
sar
jbe
cld
pop
imul
sbb
aas
lods
push
stos
icebp
ljmp
test
adc
inc
stos
loopne
dec
mov
call
mov
daa
push
shlb
mov
cmc
pop
mov
fmuls
repz
stc
ret
or
icebp
call
push
and
fidivl
in
sbbl
add
jg
mov
mov
push
cmpsb
push
mov
cltd
cmp
jmp
mov
xchg
jne
cmp
cmp
or
and
sbb
call
xchg
dec
cmp
cltd
xor
mov
in
push
mov
push
pop
shll
fistps
add
mov
sub
lcall
sarb
jg
into
mov
pop
add
imul
xor
rorb
into
and
test
xlat
mov
jns
leave
add
cmp
cmp
cmp
loope
out
ja
inc
jbe
sub
addr16
lret
pop
imul
push
mov
xchg
mov
cmp
imul
push
aam
imul
incl
rcrb
in
jl
jae
movsb
inc
xchg
out
and
xor
test
sbb
call
test
hlt
out
push
jge
clc
imul
ljmp
mov
rcrl
movsl
cmp
jecxz
dec
lahf
test
add
pushl
loopne
pop
test
icebp
push
mov
insl
mov
shlb
aaa
add
or
xor
sbb
add
repz
in
mov
popf
shlb
ljmp
fiadds
mov
inc
arpl
sbb
cld
inc
mov
or
mulps
out
cmpsl
loopne
mov
pop
bound
or
aam
decl
cli
adc
jp
daa
dec
incb
mov
sbb
bound
std
xchg
das
hlt
pushl
sub
ret
xlat
push
in
mov
pop
call
mov
dec
pop
divb
mov
sti
mov
mov
decl
aas
mov
cmp
pop
xor
lcall
dec
sbb
cmp
cmp
sub
std
inc
pushf
dec
testl
decl
or
movsb
mov
test
rcr
inc
sahf
frstor
mov
das
jecxz
add
lcall
dec
jne
push
pop
js
mov
mov
sbb
dec
loopne
inc
jle
mov
cld
jmp
decl
popf
adc
std
shlb
jg
aas
sarb
lret
adcl
add
stos
call
mov
fistpll
add
xchg
int3
jns
jae
popa
fisttpll
xchg
pop
stos
ja
and
ljmp
stos
sbb
push
aam
jg
push
jae
movsl
imulb
sar
clc
push
sub
jmp
push
dec
dec
insl
loop
jb
mov
outsb
xchg
mov
mov
inc
mov
out
inc
jne
rcll
mov
xchg
jmp
jbe
jmp
js
mov
call
sub
fs
outsl
hlt
cmp
inc
das
mov
movsb
js
inc
or
add
sub
call
sbb
mov
cmp
add
xor
popf
adc
mov
out
ss
xchg
incl
and
dec
fsub
add
mov
jge
push
mov
push
push
jns
imul
outsl
xlat
push
ljmp
call
cmpsl
mov
adc
xor
lcall
jmp
lahf
mov
push
adc
lds
push
jge
mov
cmp
pushl
dec
addr16
sahf
sbb
jmp
movsl
mov
inc
adc
ds
add
lock
or
rcrb
sub
das
incb
mov
and
mov
push
sub
ljmp
syscall
pop
pop
sbb
js
inc
popf
fsubrs
jecxz
lcall
mov
jno
pop
dec
lcall
sub
fs
cmp
jg
sti
add
mov
cmc
jbe
imull
xor
dec
out
pop
das
inc
pop
pop
pushl
clc
ds
lods
mov
cli
push
inc
xor
in
aam
in
in
mov
mov
mov
mov
jle
dec
les
rcrb
inc
pop
push
pop
adc
incl
call
inc
add
stc
outsl
mov
ss
cmpsl
lock
mov
jnp
sub
negb
dec
pop
sub
fnstenv
jg
adc
xor
adcb
cmp
xchg
xchg
xchg
lods
cli
popf
xchg
imul
pushl
imul
mov
je
jg
nop
je
jle
les
pushl
inc
pop
xchg
cs
cmp
jg
jmp
sub
imul
ss
sbb
in
aam
insl
fldcw
pop
out
sbb
dec
enter
lods
movl
scas
shl
icebp
decl
pop
in
test
test
pop
inc
test
sub
fs
mov
icebp
orl
mov
mov
mov
xor
addr16
push
or
jg
jl
addb
adc
in
mov
out
inc
sbb
inc
jo
lcall
pop
or
pop
sbb
orl
icebp
bound
push
imul
mov
loope
ds
push
cmp
xchg
jp
xchg
int3
sbb
jmp
cmpsb
mov
lcall
loopne
cmpsl
ljmp
dec
ljmp
decb
aas
roll
pop
std
arpl
loopne
pushf
leave
push
xchg
call
pop
scas
sbb
insb
mov
and
pop
jbe
mov
inc
mov
inc
call
lock
and
mov
or
std
push
mov
jmp
arpl
push
stc
pop
inc
jae
sub
mov
adc
pushf
xchg
test
push
add
add
outsl
push
in
aas
loopne
inc
lea
gs
fistpll
pop
xchg
jae
repz
cmp
call
cmpsl
int
pop
pop
xchg
pop
dec
ret
and
rcrb
test
mov
adc
lret
mov
jg
or
test
mov
xor
ljmp
gs
int
rclb
push
or
clc
xor
out
test
incl
cmp
hlt
inc
cmc
jg
pop
and
sbb
rorb
flds
aaa
dec
dec
inc
idivl
jge
lret
and
shl
pusha
lret
pusha
jmp
xchg
cwtl
cmpsb
xor
push
xor
lock
pop
mov
sbb
fsubrp
imul
das
icebp
ljmp
cmpsl
scas
in
pop
roll
shrl
test
jns
sub
outsb
dec
or
or
stc
push
mov
stos
push
fadd
call
dec
int
inc
leave
mov
sub
cld
sbb
sub
fdivrl
loop
int3
sahf
lret
lret
mov
inc
inc
jbe
add
adc
nop
shrl
cld
xor
pushl
push
adc
clc
ja
incl
dec
xor
mov
sbb
dec
push
out
leave
dec
jmp
adc
mov
decl
daa
popf
sahf
jae
push
lahf
sarl
lea
or
lret
cmc
jp
into
xchg
inc
inc
jg
decl
or
ficoms
ss
cmp
addr16
jb
call
pushl
push
out
xlat
mov
xlat
ss
add
incl
das
cmp
push
call
fistps
cli
xchg
sub
jae
insl
leave
hlt
fbld
add
cmc
aad
dec
dec
and
jno
or
mov
lods
mov
dec
push
cmp
and
pushf
push
xchg
and
ljmp
mov
jle
gs
jle
stc
push
mov
jb
cmc
inc
xor
gs
xor
hlt
rorb
pop
inc
jo
sbb
add
mov
xchg
mov
or
mov
cs
mov
mov
mov
psubusw
sarl
mov
push
clc
ss
outsl
lods
pop
cmp
outsb
push
push
adc
outsb
daa
jmp
and
addr16
cli
push
sarb
mov
bound
adc
push
fldt
cli
pop
push
xchg
mov
mov
mov
call
dec
xor
mov
mov
aam
sub
aad
mov
pop
adc
aam
sub
pop
ljmp
mov
bound
pop
mov
xor
rcr
mov
decl
push
bound
jnp
jg
enter
jb
cmovae
xchg
nop
xor
movsl
mov
shll
imul
out
pop
mov
xchg
inc
push
loopne
add
fwait
mov
sahf
mov
sub
dec
push
sub
mov
popf
stos
push
sbb
push
in
xor
in
ja
fnstcw
xor
rcl
jmp
jl
icebp
sub
push
inc
add
cli
dec
cmp
add
cmp
out
adc
rcrl
xlat
xchg
idivb
sbb
cld
fnstsw
jge
or
cmp
out
jmp
lds
cld
or
std
xor
jmp
pop
dec
dec
mov
in
cld
aaa
jg
sub
cmp
mov
ljmp
push
xor
leave
xchg
lret
cld
mov
test
push
push
int
in
inc
mov
frstor
jl
decl
pop
cmp
inc
sbb
popf
jbe
push
int3
push
jb
or
movsb
test
sahf
mov
outsl
lock
lcall
cmp
push
pusha
mov
mov
sar
dec
std
mov
xor
clc
loopne
pop
xor
xchg
leave
test
jg
outsl
fldt
sbb
mov
cltd
jmp
mov
or
cmc
jmp
mov
lret
jl
push
sti
movsl
jne
dec
cmp
arpl
xchg
sub
lods
outsl
fidivs
dec
jae
xlat
lcall
test
lret
and
cmc
inc
add
dec
fwait
in
cwtl
jns
mov
das
jo
mov
pop
dec
push
jns
push
lods
movsl
add
in
daa
bound
xchg
out
adc
mov
lret
das
int3
int
shlb
pop
push
xchg
mov
push
or
and
pop
jmp
sub
loop
rorl
sub
fists
or
mov
mov
mov
and
leave
xchg
cli
lcall
pop
data16
icebp
outsb
mov
dec
xchg
jg
push
xor
dec
imul
inc
mov
das
cmc
pop
mov
add
mov
mov
pushl
push
stos
or
nop
fwait
push
cmp
push
je
and
andb
mov
fisttpl
lret
ljmp
hlt
xchg
arpl
sub
mov
rcrb
lods
mov
inc
lret
aas
mov
push
jb
cmc
xchg
pop
mov
fisubl
loop
pop
cld
decl
push
incb
jmp
sbb
sub
cmpsb
mov
sti
aaa
fildll
and
add
sti
jns
in
adc
jle
and
fcoms
sti
test
pop
pop
sarl
xchg
push
sbb
stos
test
loop
cli
push
into
pop
cmc
sub
dec
dec
cmp
lcall
and
xchg
inc
idivl
push
or
adc
dec
data16
cmp
xor
inc
xchg
jecxz
mov
mov
scas
xchg
mov
incl
push
int3
xorb
dec
xor
mov
bnd
jmp
xor
leave
sub
das
push
out
fnstsw
mov
movsb
ljmp
inc
mov
std
call
out
fwait
lods
mov
and
out
jmp
js
mov
stos
add
data16
xchg
push
dec
scas
hlt
jp
push
test
leave
dec
jg
into
mov
stc
pop
push
and
lret
cld
add
js
jl
or
in
xor
cld
adc
aaa
mov
arpl
popf
dec
or
pushl
mov
cmp
push
ljmp
inc
sbb
aaa
clc
mov
fs
lea
icebp
mov
mov
out
in
stc
dec
adc
mov
push
inc
cli
inc
aas
dec
pop
jmp
mov
push
inc
stos
mov
fildl
ret
inc
mov
lcall
clc
push
dec
loop
cmp
jns
adc
add
ljmp
jbe
orl
testl
or
incl
sbb
jnp
ljmp
loopne
or
out
fdivr
incl
shr
sarb
inc
xchg
hlt
mov
xor
cmp
lods
iret
pop
fsubr
mov
add
iret
fdivrs
xor
jns
lcall
pop
jo
inc
mov
sub
pop
out
js
leave
call
in
icebp
test
sbb
pop
aaa
lea
out
imul
sbb
enter
repnz
sbb
lds
pop
lock
out
cltd
push
adc
std
cld
incl
movsl
fwait
jge
shl
push
add
xchg
mov
cs
aad
lcall
lcall
imul
sbb
sar
jmp
int3
mov
mov
cmp
mov
dec
cmp
inc
mov
fildll
or
call
pusha
insb
lahf
fwait
out
mov
inc
lods
xor
pop
adcl
mov
shl
lcall
jmp
push
and
mov
scas
pop
sub
mov
jl
fdivl
pop
shl
subl
decl
mov
sbb
test
push
rcr
lret
adc
mov
mov
mov
je
and
test
sbb
jns
push
xor
lcall
pushl
jp
add
in
mov
js
jne
mov
hlt
in
aad
jmp
das
aas
popf
movsb
sarl
aas
mov
loop
mov
je
nop
iret
and
popf
mov
fnstsw
pop
out
imul
mov
hlt
fildll
mov
cld
or
jp
and
cmp
idiv
mov
jnp
jp
xor
jg
test
stos
cmpl
call
pop
je
ds
fcomp
fdivl
dec
cmp
fbld
sub
push
hlt
call
mov
into
test
sti
jl
push
xor
test
call
call
pushf
xor
ljmp
js
fiadds
lods
inc
mov
add
mov
pop
or
cmp
das
cmc
test
sub
loop
lcall
insl
dec
push
stos
pushf
push
and
sub
mov
jnp,pt
test
sbb
pop
clc
incl
inc
and
lea
adc
dec
fstpl
out
mov
jg
mov
das
jns
push
lahf
push
push
outsb
sbb
dec
and
sub
jp
xor
stc
mov
pop
inc
es
sbb
les
xor
pop
ja
je
outsl
xor
push
dec
incb
jge
hlt
push
scas
or
mov
out
mov
or
pusha
out
insl
lcall
mov
inc
push
nop
test
jge
xchg
ss
scas
cmpsb
mov
jbe
movsl
mov
stos
cmpsl
jg
pushl
ja
cmp
subl
jecxz
test
xchg
mov
sti
call
cld
ret
aaa
mov
push
dec
inc
cmp
icebp
sbb
ficoml
and
ljmp
cmc
ljmp
push
mov
es
scas
push
fldcw
push
fiaddl
test
cmp
cmp
xchg
stc
sbb
sbb
popa
out
shll
imul
sahf
cmp
or
ljmp
rorl
ficomps
shl
pop
fldenv
ret
mov
inc
add
jg
push
mov
adc
push
sbb
es
xchg
fadd
pop
aaa
in
jb
jb
sbb
incl
adc
jbe
leave
mov
sub
sbb
pop
cld
jmp
adc
dec
leave
aad
loope
push
mov
fs
xchg
adc
insb
add
cmp
mov
add
cmp
sbb
sbb
test
dec
cmp
cmp
pop
repz
push
push
adc
cwtl
rcl
ljmp
sbb
mov
mov
scas
xchg
dec
xchg
jl
sahf
add
xchg
fsubrl
sahf
jbe
adc
lock
pop
and
or
fucomip
mov
jmp
std
cmp
scas
call
pusha
pop
js
decl
das
out
pusha
inc
std
pusha
addr16
rorb
stos
or
pop
movsb
mov
in
mov
loop
repz
call
mov
mov
popa
cmp
push
xor
xor
adc
sbb
add
push
in
xchg
mov
cli
out
lsl
and
fidivrl
lods
out
or
iret
outsl
sub
and
rcrb
pop
cs
xor
mov
or
mov
decl
fmul
xor
idivb
push
jbe
jo
or
mov
xchg
xchg
lods
std
cmpsl
jmp
jg
jge
mov
idivb
sub
cmp
push
rorl
int3
loopne
add
dec
in
mov
mov
call
int3
test
xor
decl
and
mov
movsl
andb
xchg
jl
inc
xor
call
test
lcall
sbbl
jmp
out
mov
cli
mov
les
sbb
cmc
repnz
cmp
jne
pusha
cmc
rolb
add
xchg
test
sbb
cmp
ret
scas
push
dec
fisttps
loopne
call
xchg
cmpsl
idivl
rolb
mov
sbb
push
pop
adc
and
push
in
xor
push
jnp
cmp
adc
add
das
adc
ret
cmpsb
xor
aaa
adc
dec
mov
lcall
mov
pop
mov
inc
out
out
repz
fisubs
cwtl
fsub
call
addr16
int3
xchg
subb
cmp
mov
lods
and
in
push
mov
das
scas
add
fistpll
notl
les
xchg
fstp
scas
adc
push
aaa
popf
ret
cmp
or
jge
sbb
int
cmp
test
out
jmp
add
outsl
or
out
les
arpl
inc
rcrl
bnd
hlt
add
pop
loopne
jmp
aas
jb
test
jo
jmp
call
mov
mov
push
incl
pop
out
out
adc
insb
push
push
push
push
or
add
fucomip
sbb
mov
mov
clc
gs
loop
seta
sub
xchg
pop
cmp
mov
mov
pop
fwait
cwtl
xorb
testb
inc
mov
pusha
pop
stc
es
jns
das
hlt
decl
lcall
int3
out
inc
cmp
mov
and
fsts
out
fidivl
cld
cmp
test
cmc
mov
and
sar
pop
call
gs
imul
insb
adc
xor
in
or
jl
ret
call
adcl
sub
stos
inc
movsl
xor
les
call
addr16
push
mov
sar
pop
mov
in
arpl
pop
cli
bound
cmp
cs
test
push
fdivs
mov
imul
in
cmp
push
bound
lea
inc
pop
fwait
sahf
in
xor
pop
js
push
mov
cwtl
or
push
das
lock
jnp
shlb
shll
std
xchg
daa
jnp
stc
rcrb
mov
int3
push
xchg
adc
or
cs
lea
je
jg
ljmp
dec
lds
mov
fbld
mov
pusha
es
inc
cltd
ss
aaa
arpl
mov
ss
or
mov
call
or
cmpsb
pop
mov
mov
and
js
adcb
rcrl
mov
fnstsw
pop
cld
sahf
lcall
wbinvd
xchg
push
dec
cmp
mov
jbe
loope
decl
mov
xor
add
push
xor
push
jno
xchg
pop
mov
incl
pop
mov
adc
jl
rcr
jne
icebp
xchg
sub
jb
xchg
ret
dec
jns
icebp
fcmovb
jl
test
mov
out
rol
cmp
ljmp
pop
mov
mov
lcall
loop
enter
and
cwtl
pushl
push
mov
xor
jnp
sahf
jns
push
rcll
fs
scas
mov
out
push
cmpsb
jno
or
pop
jg
dec
push
push
fistl
xor
xchg
jecxz
mov
mov
push
lods
sub
pop
in
pop
in
and
lods
pop
xor
pushl
mov
lods
sub
in
mov
cli
xchg
inc
push
movsb
jns
lods
adc
shll
or
popa
mov
xor
sbb
ljmp
bound
test
dec
mov
cmp
jmp
lcall
addb
xchg
jo
push
mov
dec
cwtl
adc
test
dec
dec
decl
dec
adc
ficoml
cmp
jmp
ljmp
xchg
xlat
je
add
inc
and
mov
jmp
or
xor
cmpl
aam
std
es
test
add
xor
inc
js
mov
sbb
nop
imul
pushl
mov
pop
fmuls
and
rolb
fildll
sti
fmull
fiaddl
inc
decl
dec
pop
push
loope
adc
adc
pushf
jecxz
cltd
fimull
shlb
ljmp
repnz
adc
ja
xor
adc
and
ja
mov
clc
call
mov
sti
arpl
shl
push
pop
cmpsb
aam
and
std
fcmovnb
call
les
mov
sbb
push
push
loope
or
jmp
fiadds
dec
inc
mov
mov
out
mov
cmpl
inc
std
call
jae
gs
ret
cmc
inc
pushf
mov
loop
and
pop
call
jb
add
pop
sbb
cmp
lods
stos
leave
or
pushf
mov
inc
mov
jge
fneni(8087
test
lock
inc
xchg
xchg
xchg
fbld
pushf
gs
dec
arpl
pop
push
in
bound
lcall
call
aaa
mov
add
scas
mov
dec
in
jg
jmp
mov
jbe
call
dec
jne
fdivrs
and
ljmp
push
das
hlt
lcall
fiaddl
pop
sub
clc
popf
mov
add
out
scas
popf
shrb
cli
hlt
jl
xchg
jg
lret
sarb
mov
jbe
xor
pop
stc
dec
das
xor
aad
aas
xchg
fisttpl
pusha
sub
xchg
cmp
outsl
pop
jl
pushf
nop
pop
and
rcrl
mov
mov
push
xchg
push
inc
jmp
jno
leave
add
call
mul
push
jmp
xor
into
mov
loopne
out
add
mov
xor
pushl
dec
les
mul
mov
mov
push
out
rcl
inc
add
ljmp
mov
enter
cltd
lock
jle
inc
lods
dec
pop
jge
hlt
xchg
inc
lret
test
repnz
lcall
std
out
and
xor
xchg
imul
adc
leave
shll
mov
mov
mov
movsl
test
mov
lds
jmp
pop
jno
pop
mov
outsl
pop
pop
je
popa
dec
xchg
std
pop
cli
ljmp
int
fildl
pop
pop
sar
mov
pop
mov
mov
jne
mov
pop
cmc
cmp
rclb
sbb
inc
mulb
ret
lods
xchg
sub
inc
xor
or
das
cld
outsl
out
gs
in
in
xchg
xchg
aas
addb
pop
inc
mov
inc
sti
sti
jae
cmp
sub
cmp
push
sbb
mov
incl
xorl
sub
sub
ljmp
insb
das
fiadds
or
jmp
push
rclb
loopne
decl
ret
ljmp
sbb
insb
inc
pop
pushf
or
outsl
hlt
mov
and
test
imulb
mov
jnp
jo
inc
cmp
sub
fdivs
xchg
in
int
push
aaa
clc
jmp
xchg
icebp
cmp
rolb
inc
arpl
call
mov
cmp
pop
push
in
repz
dec
loop
push
push
mov
stos
mov
adc
cmp
xchg
jmp
std
jg
adc
mov
stos
outsl
sub
repz
or
dec
out
popf
ljmp
lret
test
sub
jo
jg
add
fstps
and
lcall
decl
cwtl
push
aas
insb
cltd
mov
scas
jmp
and
pop
cmpsl
xor
inc
cmpsl
stc
outsb
test
pop
out
repnz
pusha
cmp
pop
call
sub
iret
add
aam
loope
fcoml
xor
in
movzwl
inc
pushl
clc
lods
dec
cmp
mov
insl
stos
es
out
cmp
mov
mov
data16
sub
jno
push
imul
pop
cmp
and
inc
and
mov
ret
test
xor
outsl
aam
xor
jb
out
xchg
movsl
xlat
mov
sbb
decl
ljmp
inc
xchg
ret
inc
fs
les
out
adc
add
mov
mov
dec
frstor
mull
cld
decb
aam
mov
push
test
loope
push
push
dec
add
mov
arpl
push
cld
pushl
cs
xchg
xchg
decb
xlat
xor
xor
add
lcall
aam
ret
cmpb
mov
in
jge
sbb
adc
lods
adc
outsb
xlat
hlt
repnz
jne
cmp
lock
push
aas
mov
out
jo
cmp
decl
cmpsb
dec
jp
or
inc
mov
popa
aaa
mov
scas
add
pop
test
jp
push
std
xorl
dec
push
fs
push
pop
fwait
jecxz
xor
sbb
jl
ljmp
sbb
ljmp
inc
add
outsb
repnz
outsl
movsl
lcall
nop
outsb
idivl
push
pop
lock
inc
cmp
mov
xchg
push
pop
jo,pn
sub
pop
std
fidivrl
std
dec
add
lock
mov
xor
aam
test
push
cmp
hlt
jbe
rorb
lea
into
ret
ret
loopne
lcall
fucom
rorb
outsl
add
addr16
cmp
pushl
popa
fwait
mov
push
adc
adc
cld
pop
mov
and
jecxz
subl
cmp
mov
sub
sbb
mov
add
mov
cli
inc
pop
or
or
push
hlt
jge
mov
popf
dec
cli
lret
lcall
add
sahf
notl
push
gs
mov
cs
sub
sub
ljmp
test
push
into
fcoml
loope
ret
sbb
add
sti
shlb
and
push
dec
mov
pop
add
add
imulb
lock
call
arpl
nop
ret
popa
xor
imul
vcomiss
jno
dec
fdivl
js
pop
jae
mov
xor
inc
mov
sti
fimull
add
mov
mov
mov
scas
and
mov
ret
loopne
xor
cmp
dec
addl
jg
call
movsl
das
jb
scas
fsubl
ds
dec
mov
loop
hlt
or
or
shl
dec
mov
inc
add
in
or
sarb
pop
adc
loopne
inc
jno,pt
jle
andl
lcall
movl
pop
mov
fsubs
gs
sub
xchg
jg
loope
push
xchg
pop
insb
adc
cmpsl
mov
pushf
push
and
xor
xchg
decl
adc
push
jo
std
enter
inc
mov
mov
rcrl
mov
ja
mov
jne
leave
test
adc
lret
push
daa
jge
pop
dec
out
inc
push
jp
data16
xchg
inc
sarl
data16
dec
mov
jp
adc
mov
mov
ss
mov
or
repz
idivl
decl
movsb
cli
adc
xchg
sbb
sub
cs
pop
sub
arpl
ljmp
fcomps
push
jge
xlat
mov
xlat
xchg
jmp
out
xchg
xchg
popa
popf
inc
push
push
inc
out
push
mov
sahf
xchg
fdivrl
out
push
mov
testl
jg
jmp
aas
cmp
xchg
shrl
cmc
xchg
sub
das
lock
add
cld
sbb
jle
mov
and
sub
adcl
call
shl
push
xchg
push
enter
test
pushf
push
rorb
aas
pop
ds
jl
fcomps
push
mov
adc
fbstp
cwtl
in
jecxz
jnp
push
and
adc
lea
fldenv
decl
jp
nop
fadd
jmp
ss
sub
pop
rorb
lods
cmp
dec
es
aas
shr
xchg
pop
pop
clc
jg
call
mov
std
adc
mov
inc
xor
call
add
movsl
ds
hlt
loope
lret
ja
js
push
js
insl
sbb
lcall
std
cmp
leave
imul
mov
mov
outsl
cmpsb
sub
adc
lods
or
mov
mov
scas
stos
gs
jne
pushf
mov
cmp
lcall
fsubs
cmc
loope
cwtl
stos
xorb
cmp
inc
push
leave
lds
add
add
loop
lret
push
cmp
sub
leave
jo
adc
rclb
mov
xchg
sbb
mov
retw
cltd
xor
ljmp
jo
rorb
dec
movsl
mov
icebp
pop
adc
iret
ljmp
dec
lea
sub
cmp
test
xchg
adc
in
mov
jbe
adc
rep
push
ds
sub
lcall
movsl
stos
rclb
dec
mov
cmp
in
jg
fstps
ficomps
insb
fistpl
lods
sub
mov
pop
add
pushl
lcall
add
mov
in
cmc
inc
jl
inc
pop
lds
clc
call
pop
call
hlt
test
dec
mov
xor
pushl
imul
lods
popf
sub
adc
push
faddl
push
iret
cmp
mov
incl
stc
add
jb
jmp
ljmp
out
and
clc
and
push
iret
rolb
mov
pop
arpl
fsubrp
lock
mov
and
fcom
lea
mov
pushf
decl
mov
add
repnz
lods
inc
cld
jmp
and
xchg
lods
aad
xor
scas
mov
call
jae
cmp
push
add
fcmovbe
dec
mov
sbb
loope
incl
shll
xor
out
rcr
add
fistpll
push
push
mov
roll
aad
sub
mov
cs
je
jno
mov
xchg
test
ljmp
icebp
jp
lods
cmp
mov
movhps
icebp
mov
decl
ds
adc
test
int
fsubrl
cmpb
inc
pop
fxch
bound
push
sub
out
and
loopne
je
and
lcall
mov
fs
mov
cmp
stos
add
outsb
lcall
adc
sti
mov
fstps
cmp
cmc
test
ficoml
fidivs
stos
mov
xchg
mov
fistl
addl
pop
popf
ljmp
ret
push
addr16
dec
cmp
and
pop
mov
and
das
hlt
call
imul
lret
pop
shrb
dec
scas
pop
enter
test
ficoml
movd
sub
popl
push
mov
mov
jmp
cwtl
pushf
inc
adc
pop
jns
sar
mov
pop
inc
cs
and
or
popa
shrl
sbb
jp
ljmp
sbb
loope
movsb
nop
hlt
pop
stc
xor
xchg
aam
test
sahf
inc
pushf
lods
cs
or
imul
mov
movsl
pop
cmpsb
push
adc
fistps
loopne
inc
mov
je
ljmp
pusha
fidivl
aam
mov
jecxz
mov
ljmp
and
adc
mov
addr16
inc
jle
data16
call
dec
fs
dec
fwait
add
outsb
xchg
jg
insl
jg
jmp
inc
gs
in
mov
in
dec
shl
mov
or
cli
cmp
sbb
mov
outsl
pop
xchg
push
lods
dec
jmp
pushl
clc
data16
push
fcmovnb
inc
lahf
pop
aaa
fs
cwtl
push
and
aaa
pop
mov
and
cmp
test
jb
inc
cmc
pusha
stos
lods
pop
lods
mov
incl
test
sarl
inc
int
cmc
repz
out
imul
jg
call
dec
or
mov
into
inc
cli
out
xchg
dec
nop
fucomp
sti
mov
hlt
pop
std
ljmp
fsubrs
pusha
lret
and
jg
pop
inc
mov
mov
inc
sbb
icebp
inc
mov
ljmp
ljmp
hlt
into
popa
sbb
cmp
mov
mov
mov
cmp
and
call
xchg
xchg
push
jnp
insl
cwtl
or
aaa
ja
cli
cmc
mov
les
mov
jo
aas
bound
ljmp
pop
pop
std
push
loopne
cmp
cmpsb
sbb
mov
inc
movsb
mov
cmp
cmp
push
arpl
into
mov
sub
cmp
fsubr
loopne
cmp
jle
mov
cmp
dec
xchg
lods
xor
jp
push
add
dec
and
pop
adc
stos
or
ficompl
mov
pop
dec
aam
repnz
inc
in
incl
push
inc
lahf
mov
inc
cmp
add
call
call
enter
int
inc
sbb
pop
dec
jo
push
mov
pop
js
or
inc
bound
xchg
pop
or
add
mov
cmp
scas
or
fs
push
mov
fdivrp
lahf
std
mov
scas
inc
decl
xor
popf
mov
sbb
ds
or
or
out
pop
stc
adc
int
fildl
pushf
out
imul
dec
hlt
mov
es
jg
dec
xor
rcrb
sti
xor
cmp
rclb
dec
cmp
js
dec
pop
je
sub
mov
lds
pop
stc
mov
sbb
pushf
scas
pushl
sub
notl
pop
pop
pop
inc
stos
inc
and
sub
lea
ret
arpl
pop
dec
in
pop
xor
out
jmp
fisttpll
adc
push
in
add
and
and
je
xchg
pop
cmp
cmpsb
inc
jg
jmp
sti
lods
idivl
inc
fisubl
cs
rcll
orb
inc
call
stc
scas
sbb
ds
cmpsl
cld
pop
dec
jmp
push
outsl
push
cmp
test
lock
pop
sub
icebp
ljmp
mov
lods
jmp
sahf
jecxz
es
sub
ret
inc
jle
outsl
shl
or
mov
das
aam
mov
push
jno
mov
js
insl
ret
sub
jg
dec
push
ja
in
bound
fnsave
or
lock
pop
push
data16
and
mov
lcall
mov
sbb
dec
pop
and
jp
cmc
bound
inc
mov
cmp
and
mov
add
mov
lahf
mov
int3
xchg
outsl
sbb
data16
jno
pop
mov
iret
stc
mov
movsl
add
push
push
icebp
sbb
scas
outsb
dec
fists
inc
shrl
jo
test
sbb
push
or
jecxz
fnstsw
jns
adc
testb
adc
or
gs
push
mov
lcall
and
xchg
push
rorb
popa
push
pop
ret
lcall
popa
test
fs
movl
xchg
in
daa
push
lods
ficompl
pop
out
mov
pushw
adc
ds
leave
sbb
or
push
push
or
jmp
sub
jg
sbb
insl
sub
dec
cmp
cli
add
decl
sbb
sbb
iret
push
cmp
push
cld
insb
pop
mov
cli
icebp
jmp
testl
mov
shll
ret
movsb
mov
incb
mov
cld
jo
and
jmp
sub
cmp
inc
sti
fdivrs
cwtl
and
mov
push
mov
pushl
sub
fdivrs
add
lcall
xor
test
ljmp
sbb
stc
push
lcall
cmp
mov
aas
add
fs
loopne
jl
dec
jmp
aaa
arpl
inc
cwtl
cwtl
pop
cs
imul
repnz
jg
mov
ljmp
mov
xchg
inc
adc
rcrl
inc
stos
and
pop
call
sbb
jo
dec
and
cmp
std
outsl
std
mov
enter
int
push
lds
ret
inc
sarl
dec
push
test
xchg
out
mov
inc
mov
roll
in
adc
std
push
xchg
test
mov
sub
sub
ds
xchg
insl
addr16
mov
lock
decb
sbb
or
sbb
daa
jle
sarl
repnz
ret
mov
jns
xchg
xlat
pushl
add
mov
add
pop
fdivr
mov
add
aas
sbb
push
adc
jg
cmp
pop
adc
jae
push
cmp
or
mov
stos
cmp
ret
jno
add
or
jae
repz
mov
sbb
outsl
cld
outsl
mov
and
je
mov
adc
xchg
js
lcall
sub
inc
inc
mov
or
fildll
dec
cmpsb
adcl
add
jae
das
hlt
adc
les
dec
decl
test
and
lret
push
out
aas
mov
pusha
xchg
movsl
xchg
call
ds
mov
sub
dec
jo
ljmp
cmp
xchg
dec
std
inc
jnp
out
in
test
out
imul
insl
icebp
call
das
mov
and
cwtl
mov
popa
popf
xchg
in
das
icebp
decl
ljmp
add
sub
pushf
lcall
jmp
inc
fsts
outsl
daa
inc
jnp
rorl
dec
mov
fisubl
sahf
mov
aad
sub
std
fsubl
xchg
sub
aad
push
imul
jg
test
or
lea
xchg
or
cmc
cmp
stos
sub
call
sub
push
repnz
shrb
push
mov
sbb
shr
and
mov
sub
jmp
call
or
push
jb
xchg
cmc
push
dec
jno
into
dec
cmp
out
and
jne
mov
inc
cltd
jmp
daa
or
lcall
push
xlat
dec
mov
lcall
jg
pop
outsb
mov
mov
push
mov
ud1
lret
sar
outsl
lock
pop
test
fwait
stos
sbb
mov
mov
fildll
in
inc
mov
out
sti
movsl
test
ljmp
and
inc
push
lret
adc
mov
cwtl
insl
lods
movsl
xchg
jg
lds
pop
jns
sbb
jo
or
shlb
cli
cld
and
jge
adc
pop
ret
pushl
lock
xchg
test
xor
sub
pop
and
xlat
dec
nop
ss
ficoml
dec
pop
and
and
jnp
push
sub
dec
data16
das
lock
arpl
pushl
orb
mov
xchg
test
sub
cltd
popa
decl
scas
aaa
xor
dec
xchg
inc
mov
or
lret
jb
inc
xchg
sahf
xchg
flds
mov
in
orl
gs
jg
xor
sti
insb
pop
pushf
push
dec
cmp
gs
fsubl
ljmp
fistpll
cmpsb
das
xor
lcall
inc
ret
out
dec
hlt
add
sbb
out
cmc
sub
jmp
shll
cli
lods
lcall
dec
mov
add
mov
mov
in
shl
push
popa
pushl
sahf
adc
or
or
mov
mov
mov
dec
xor
ret
mov
test
fisubrl
adc
cmp
in
cli
out
xchg
pushl
cmp
test
flds
pusha
test
mov
pushl
lcall
imul
ljmp
arpl
or
lret
sub
sub
mov
das
cmpsb
scas
sahf
stos
aam
insl
ds
fidivs
lcall
movsl
fs
push
sbb
outsl
inc
jae
xchg
aaa
sti
stos
mov
ja
add
jbe
lcall
out
mov
pushl
bound
add
push
lods
leave
xlat
and
mov
incl
xlat
xacquire
jno
scas
int
jp
dec
in
cmp
adc
mov
adcl
sbb
rcrl
je
inc
test
lahf
fbld
or
das
cld
outsb
popa
pop
dec
pop
je
and
incl
int3
push
test
cld
stos
dec
add
ljmp
jg
das
pop
divb
dec
shll
xor
add
mov
xchg
pop
pushf
das
je
movsl
loopne
jmp
adc
setbe
cmp
ljmp
dec
in
in
cmpsb
pop
sub
and
pop
addl
fsubl
or
mov
jg
inc
push
sahf
inc
fistl
or
push
movsl
push
movsb
iret
out
or
arpl
pop
outsb
loope
jle
ret
fucomi
sbb
dec
inc
stc
in
dec
dec
push
je
jne
movsl
add
les
sti
xor
xor
mov
call
adc
clc
xor
push
pop
mov
dec
pop
jae
into
pop
cmc
adc
xchg
sar
jns
sbb
popa
sbb
andb
aas
cld
ret
or
paddd
test
in
call
ss
xchg
mov
and
xchg
mov
cmc
and
push
mov
shll
call
incl
or
dec
mov
test
sub
fisubrs
push
pop
jno
and
out
or
fisubs
mov
sbbb
inc
pop
and
hlt
fistps
addb
mov
sbb
dec
fistpll
sbb
or
jg
mov
inc
sub
es
jo
dec
inc
jg
pop
cs
push
stos
cld
mov
lods
jns
jmp
iret
pop
xor
cmp
lcall
and
popf
decl
sar
xchg
pop
xchg
pop
xchg
pop
cmp
add
lcall
fidivl
je
cmp
lods
repnz
fxam
xor
inc
dec
aaa
out
cli
daa
mov
sbb
pop
fstpt
mov
or
jg
jp
aas
mov
jb
dec
xchg
pop
and
movsb
lock
das
cld
ljmp
idivl
insl
out
jg
sub
in
popf
mov
test
dec
sub
pushf
incl
push
decl
add
imul
fs
sbb
push
inc
jg
call
pop
jp
testb
popa
jbe
leave
mov
sbb
or
pushl
or
cld
hlt
xor
stos
push
fdivp
jp
mov
enter
movsl
jg
inc
ljmp
dec
jp
and
and
mov
push
dec
in
jmp
pop
lods
lcall
subl
hlt
adc
jo
jg
dec
cmp
lahf
testl
pop
xchg
push
rcrl
cmp
int3
test
add
push
ficomps
xchg
out
pop
scas
add
lods
add
dec
into
add
pop
jge
shrl
or
ret
inc
lcall
std
inc
jp
ss
mov
mov
es
pop
movsb
into
adc
inc
pop
outsl
lea
lock
aas
das
mov
mov
inc
inc
test
rcrb
jmp
pushf
cmp
adc
call
lcall
pop
flds
adc
sti
fdiv
push
cmpsb
cmp
and
int3
lock
fwait
xchg
je
mov
std
lods
or
out
push
cmc
pushf
out
lcall
aam
pop
or
ret
dec
jno,pn
into
pushf
repz
jno
notb
int
int3
and
mov
jmp
daa
addr16
call
xchg
lock
out
aas
xlat
push
cmp
out
pop
mov
xchg
outsl
add
dec
push
inc
sub
testb
insb
pop
jmp
aaa
ret
sbb
into
sub
aaa
scas
clc
push
inc
mov
jmp
and
sahf
aaa
xchg
cmp
add
mov
test
push
xor
add
mov
fdivrp
call
mov
mov
pop
jb
loop
not
imul
test
sti
and
das
hlt
pop
loop
jmp
pop
shrb
dec
out
cld
mov
mov
jo
subl
add
inc
mov
aaa
inc
test
fmul
sbb
dec
pop
mov
test
push
sub
fisubrs
push
lea
sub
sub
incl
lahf
and
mov
popa
mov
in
jmp
cli
shrl
lcall
mov
push
in
lahf
ja
or
test
mov
repz
mov
rol
mov
adc
or
jg
ljmp
pusha
adc
mov
and
pushf
mov
jle
std
jg
icebp
push
aaa
cld
aas
test
mov
add
push
or
push
ljmp
bound
ret
test
add
aas
jnp
sbb
mov
cmc
push
pop
adc
jle
mov
lcall
push
jmp
or
adc
dec
ljmp
icebp
pop
mov
ja
jge
jne
jle
stos
or
fiaddl
mov
cmp
xor
sbb
adc
fxch
dec
jg
rcrl
shlb
add
orl
addr16
daa
jbe
or
xchg
inc
sbb
orl
rorl
fnsave
cmp
incl
fwait
loope
lods
je
iret
jge
mov
loope
insl
jmp
inc
cmc
push
incl
loope
mov
xchg
in
push
enter
mov
incl
or
add
pop
or
nop
dec
push
sbb
setl
es
in
test
incl
mov
aam
imul
jp
mov
fnstsw
push
jo
in
repnz
fs
leave
cmpsl
mov
xchg
cli
movsl
mov
incl
or
mov
aam
in
pop
rcrl
jg
das
and
sbb
mov
xlat
ds
jecxz
sub
add
mov
stos
jg
rorb
pop
push
test
inc
out
xchg
ljmp
icebp
fistpll
in
pop
sbb
sub
push
lret
cmpsb
ss
cmpsl
mov
aas
pop
pop
mov
imul
shr
lock
nop
mov
push
sar
popa
adc
jp
out
ljmp
adc
movsb
dec
mov
aaa
cli
sbb
scas
movups
xchg
xor
jge
pushl
lds
pop
into
mov
mov
inc
outsl
lret
xchg
push
jns
mov
daa
mov
cltd
dec
adc
jg
xchg
dec
nop
pop
mov
mov
adcl
adc
dec
lock
out
test
push
ljmp
xor
mov
out
xor
mov
jmp
loop
mov
lret
jecxz
and
fs
daa
add
std
jg
push
mov
pushf
mov
dec
movb
dec
add
jns
sub
or
popa
push
inc
out
cmp
andb
into
mov
pop
pop
mov
test
sbb
mov
mov
or
sub
mov
push
ljmp
ljmp
inc
call
cmp
lock
ret
xchg
mov
shll
ret
mov
xor
xchg
push
dec
xor
jg
jmp
push
ficoml
or
cmpsb
mov
lcall
jb
in
inc
ljmp
jns
dec
addr16
call
call
mov
sbb
xchg
mov
xor
aam
or
ljmp
xor
ret
sbb
ficoml
scas
loope
mov
mov
adc
sbb
cli
adc
call
mov
icebp
sbb
or
mov
jecxz
adc
cltd
mov
add
push
and
lret
popa
mov
lods
xchg
ljmp
filds
and
mov
lea
fimull
push
int3
rcrl
mov
inc
pop
fwait
lahf
int3
rcrb
leave
mov
mov
cld
add
je
in
ret
testl
lret
jae
fbld
shlb
loopne
ret
adc
mov
incb
pop
jno
push
mov
jmp
mov
cmp
mov
test
addr16
push
clc
int3
or
call
sub
in
xor
jbe
dec
into
lahf
aad
or
sbb
repz
outsb
inc
shr
data16
jg
jg
and
xchg
mul
pop
sbb
adc
mov
dec
or
stos
jp
xchg
pusha
idivl
pop
loopne
movsl
push
lods
xor
xchg
cli
dec
ljmp
outsl
sub
das
hlt
decl
std
ljmp
push
fnstcw
mov
or
int
jge
mov
daa
push
imul
jns
lods
pushl
pop
in
xchg
inc
sti
mov
pop
jmp
sbb
jg
mov
in
dec
insb
sbb
inc
pop
lahf
jl
cltd
pusha
fcomip
out
mov
int
inc
cli
lcall
mov
sub
in
mov
sub
pop
sub
fisttps
jg
jae
aaa
popa
daa
mov
push
repz
insb
std
cmp
jle
rcl
iret
icebp
lcall
jbe
in
sub
sbb
les
mov
mov
loopne
pop
cmp
ljmp
push
dec
inc
je
inc
repz
jne
testb
rcr
push
fcompl
std
lcall
jb
ret
filds
in
cltd
mov
sti
loop
jg
sbb
xchg
mov
xchg
int
or
inc
std
cld
jg
or
xchg
pop
inc
ret
aas
dec
cmpsb
rcl
mov
cmp
or
dec
cmp
out
push
testb
test
cs
ljmp
out
mov
test
push
xor
fistl
add
fimuls
loopne
pop
iret
sahf
or
pop
inc
data16
ss
sar
xchg
repnz
imul
arpl
movsb
clc
or
xor
decl
ljmp
jl
pushf
mov
and
push
out
sub
decl
xchg
out
int3
sahf
inc
push
push
mov
aad
xchg
mov
outsl
fmuls
sub
enter
jbe
call
fwait
inc
addr16
out
mov
sti
push
adc
or
ljmp
mov
xor
inc
sbb
adc
ret
adc
bnd
sbb
ljmp
xchg
aas
aad
jge
clc
cmp
cmp
inc
mov
add
movsl
jg
int
ljmp
jmp
hlt
push
sahf
pop
xchg
add
mov
imul
fbstp
pop
bound
pop
push
stos
scas
es
cmp
outsl
mov
dec
lock
popf
mov
stc
add
mov
cmc
iret
fnstsw
pushl
mov
cwtl
jno
test
gs
shlb
sbb
ds
lcall
arpl
and
lahf
pop
inc
mov
push
push
xchg
movsl
mov
jg
clc
jl
lods
stos
addl
insb
js
jl
push
or
fstl
pushl
push
dec
mov
sub
xchg
adc
clc
decl
enter
aam
fdivp
movsb
adc
jmp
sbb
mov
int3
mov
out
xchg
test
jl
js
mov
fwait
inc
jecxz
pusha
xor
cmp
clc
mov
lcall
xchg
push
mov
mov
fsubr
cltd
call
leave
fcmove
std
xchg
and
decl
mov
dec
sbb
add
or
mov
add
jle
test
dec
fidivrs
je
adc
mov
add
xlat
or
imul
lcall
mov
xor
sub
outsb
dec
cld
jg
mov
mov
sbbl
aaa
imul
sub
sub
daa
fistpll
lcall
add
pop
push
out
out
xorb
ljmp
inc
mov
mov
add
aam
push
scas
popf
sbb
inc
inc
les
movsl
hlt
out
mov
sahf
dec
jl
scas
icebp
ljmp
push
ror
rcll
jg
test
call
dec
mov
in
lods
sbb
jl
loope
fwait
ret
push
cmp
push
lahf
push
in
test
sub
add
loope
pop
in
out
sub
cld
sarb
sub
imul
jmp
sbb
fbstp
jbe
xor
pop
in
cld
lds
push
xchg
ljmp
icebp
outsl
es
pusha
inc
cmp
add
push
inc
gs
xchg
and
aam
adc
std
jg
mov
dec
into
or
loopne
sbb
mov
stos
xor
lcall
and
adc
sub
xor
jns
push
xor
into
mov
pushl
mov
jecxz
test
mov
test
or
repz
js
mov
mov
and
in
jge
and
xchg
movsl
js
sbb
enter
arpl
lcall
inc
pop
mov
into
sbb
sub
iret
add
mov
and
inc
jmp
lret
xchg
pop
add
repnz
xchg
out
ss
popa
mov
and
cli
push
fadd
dec
mov
loop
dec
xor
push
popfw
cli
popf
cld
call
int3
sbb
out
std
jge
adc
mov
xchg
fs
rorb
add
xchg
clc
das
xchg
mov
cmp
xor
jmp
mov
adcb
push
cmp
mov
jge
mov
incl
inc
call
cmp
arpl
mov
dec
out
icebp
fmul
and
cs
es
adc
push
mull
cli
je
mov
sbb
dec
or
mov
into
ret
insl
push
sbb
lret
xor
lcall
mov
push
int
jp
sbb
mov
dec
xchg
icebp
shll
and
std
pushl
pusha
pop
push
stc
or
and
pop
scas
mov
loop
mov
pop
mov
sbb
pushl
inc
cld
pushl
pop
xchg
rorl
negl
cli
clc
and
sub
mov
xchg
je
inc
mov
push
or
xchg
sbb
rcrl
fmul
or
jmp
outsb
mov
pusha
jb
jg
add
adc
mov
pop
loope
lcall
jle
cmc
push
sbb
push
stc
fistl
aaa
mov
daa
add
pop
push
mov
lcall
ljmp
sub
or
lret
fwait
sub
adc
pop
jmp
inc
lahf
mov
jg
mov
sbb
and
movsb
add
rol
out
pop
sbb
lcall
stos
ret
xor
dec
scas
lcall
mov
or
fisttpll
shlb
push
call
mov
xchg
and
mov
fnstenv
ds
out
sub
pop
jmp
push
aas
lds
mov
lods
lods
mov
mov
shr
pop
xchg
loopne
mov
fwait
pop
adc
or
sbb
sbb
das
or
mov
ss
call
scas
xchg
sbb
jae
mov
lret
sub
pop
mov
out
scas
jge
cmpsl
jge
cmp
push
or
movl
push
call
pop
xchg
xchg
dec
dec
adc
sub
push
pop
fcmovb
out
jbe
push
dec
dec
adc
shl
clc
decl
test
outsl
roll
jb
dec
xor
popf
arpl
or
pop
sti
jmp
mov
jecxz
fsubl
jle
inc
movsl
push
mov
popa
clc
mov
mov
hlt
adc
pop
sub
call
insb
mov
pop
mov
adc
into
mov
xchg
fs
cmp
outsb
mov
pushf
and
sub
push
pushl
fdivr
int3
pop
xlat
xor
xor
nop
iret
push
shll
das
arpl
fisubl
imul
jmp
dec
push
repnz
out
icebp
aas
mov
lcall
push
sub
lcall
out
sub
dec
sub
sbb
mov
jg
inc
sub
out
xchg
mov
or
testb
jae
or
clc
mov
push
add
jne
out
shr
outsl
lock
aaa
aas
in
pop
addb
cld
xor
lcall
mov
pop
pop
adc
negl
ljmp
mov
call
insl
rolb
push
outsb
lahf
mov
cmp
mov
pop
iret
aam
pop
pusha
jg
sub
sub
dec
repz
xchg
popf
mov
push
jl
movb
sub
mov
sub
adc
dec
adc
sbb
shrd
mov
pop
loopne
jg
mov
pop
out
xchg
lods
rcpps
fdivl
aad
cwtl
movsl
sbb
icebp
ret
call
inc
sbb
mov
ljmp
scas
mov
dec
xchg
jmp
insl
imul
cmp
cmp
sbb
pop
lahf
adc
and
loopne
jg
mov
repz
jecxz
bound
call
outsl
jmp
and
dec
pushl
dec
cwtl
push
sub
pop
mov
cli
sub
inc
je
mov
daa
push
shl
into
jno
sub
pusha
cmp
dec
loop
inc
push
mov
test
or
push
lods
lahf
xchg
pop
roll
hlt
jle
mov
movsb
pop
jl
call
mov
das
adc
ss
sub
fwait
in
pop
fdivr
das
dec
bnd
cmp
adc
pushl
sti
adc
mov
in
rcrl
mov
and
aad
mov
loop
dec
sbb
and
sti
out
lds
dec
mov
jp
jecxz
jecxz
jp
or
mov
jnp
push
data16
lret
lahf
sbb
and
mov
mov
jg
daa
and
pop
add
add
adc
xlat
ret
and
sbb
loopne
dec
out
addr16
dec
inc
jnp
inc
mov
int3
inc
push
std
lahf
fsubrl
lahf
mov
adc
adc
and
or
jmp
aaa
mov
pop
xor
pop
adc
pop
cs
xorl
sbb
scas
mov
pop
popf
cmovl
mov
dec
fsts
pop
cmp
dec
mov
sbb
xlat
fwait
test
ljmp
test
dec
out
mov
dec
shl
sbb
pop
test
xchg
pop
pop
jns
cmc
stc
jmp
hlt
cld
insl
xor
aas
xchg
mov
sub
out
sbb
sub
add
std
xchg
shrl
mov
test
decl
sbb
or
mov
mov
subl
push
inc
xor
pushl
lock
ret
cmc
xchg
mov
fidivrl
mov
lcall
out
mov
pop
nop
cmpsl
inc
idiv
mov
sub
lcall
sbb
dec
pop
pop
imul
sbb
cli
int3
fstpl
call
call
aad
lds
test
jae
sbb
add
push
xchg
xchg
fwait
push
and
aaa
out
test
in
jg
inc
sbb
loopne
repz
jmp
fstpt
repnz
ljmp
fldenv
ljmp
ret
test
aas
mov
inc
rcrl
imul
pushl
clc
push
push
mov
icebp
cs
xor
adc
lock
jge
jo
std
jg
mov
loope
push
inc
fdivr
testb
das
in
cmp
shr
call
mov
mov
xor
lret
jb
and
push
popf
ret
pop
xchg
cmp
push
mov
jnp
jne
clc
pop
sub
loopne
jg
loopne
sti
jle
lret
or
inc
aam
adc
jecxz
cmc
xchg
cli
jmp
hlt
mov
out
push
xor
adcl
rol
mov
xchg
mov
fmull
jle
push
push
mov
push
lahf
fnsave
jmp
outsl
icebp
xchg
clc
inc
dec
nop
scas
mov
adc
jnp
ret
stc
cltd
inc
mov
mov
notb
inc
rcl
pop
fstl
push
mov
mov
xchg
xchg
mov
cmp
bnd
popa
or
lcall
dec
rclb
stos
or
push
or
nop
shlb
mov
cmp
cmp
adc
out
int
mov
push
ljmp
cmp
jbe
mov
jp
xor
push
xchg
scas
iret
inc
flds
mov
mov
pop
mov
das
xchg
es
rolb
inc
inc
mov
scas
sbb
push
xchg
push
mov
ficoms
int3
xchg
stc
test
ljmp
nop
jge
add
push
mov
aam
pop
call
leave
popa
mov
xor
stc
clc
xchg
mov
pop
stos
mov
mov
shrl
hlt
mov
aaa
adc
mov
aas
mov
pop
pop
lcall
jg
shrb
fcomps
jg
add
adc
daa
sbb
jnp
jg
lcall
xchg
dec
or
movsl
nop
hlt
dec
push
pop
rorb
xchg
dec
cli
mov
push
lcall
in
jnp
cmpsb
pushf
jns
in
filds
sub
xchg
pop
xchg
inc
jg
push
jmp
dec
ret
sbb
sbb
insb
jge
inc
iret
and
sbb
push
je
imull
in
mov
inc
push
jo
pop
xchg
decl
or
adc
jo
movsl
xchg
adc
lea
dec
jns
jbe
ljmp
aas
push
xor
inc
fnstcw
mov
inc
pop
mov
jp
mov
ljmp
cld
jmp
or
pop
cmp
test
out
mov
das
and
mov
push
loope
outsb
andl
push
ds
aaa
fchs
out
push
into
loope
addl
pop
rcrl
mov
fistl
push
mov
push
fistl
xchg
sub
mov
sti
xchg
jg
and
pop
loop
mov
scas
roll
mov
jmp
repnz
xchg
loop
sub
and
pop
xchg
adc
inc
out
inc
icebp
daa
dec
inc
in
addr16
sti
in
fsubs
addb
aaa
fucomip
ljmp
jns
jno
add
fwait
inc
out
repz
jle
xchg
sti
mov
cli
incl
repnz
lcall
cmp
sub
jp
or
icebp
incl
cld
push
inc
scas
jl
sub
or
imul
mov
cmpsb
stos
jnp
imul
dec
mov
jmp
int
inc
mov
std
cmp
inc
push
and
fdivrl
jecxz
xchg
lcall
incl
pop
test
mov
mov
add
dec
pusha
jecxz
sbb
aaa
jb
adc
decl
ljmp
inc
addb
arpl
inc
and
dec
clc
add
xor
inc
test
icebp
push
mov
ror
add
lret
shlb
mov
or
mov
stos
pop
adc
hlt
jae
fcmovne
andl
pop
pop
jbe
sub
into
mov
mov
jo
decl
in
arpl
xchg
fisttps
je
cli
inc
jecxz
fwait
xor
jno
fwait
sti
xchg
push
stos
or
ljmp
sub
cli
jbe
push
popf
mov
cmp
hlt
sbb
pushl
mov
inc
andl
pop
aam
xor
lret
pop
push
jg
push
cltd
jae
or
icebp
iret
aaa
ds
ret
sbbl
ljmp
cmp
cmpsb
adc
scas
cmp
sahf
xchg
and
pop
sub
and
mov
push
mov
ljmp
std
shrb
xor
int3
xchg
pop
lock
test
faddp
add
jmp
clc
ljmp
push
jecxz
mov
enter
dec
aaa
lea
arpl
pushl
addr16
into
xor
lcall
lcall
and
or
dec
lahf
cmc
into
xorb
pop
loopne
fsub
sbb
pop
daa
shlb
xor
inc
inc
ret
jp
cmpsb
jae
and
ficoms
call
fistpll
jns
mov
es
or
cmp
push
lods
lods
dec
jns
lods
cwtl
cmp
das
icebp
decl
inc
out
adc
test
icebp
ss
andl
bound
dec
fdivr
mov
in
sub
push
jp
mov
mov
cli
pushl
mov
xrelease
fldl
les
ljmp
cmc
adc
push
mov
sbb
dec
add
gs
and
loop
rcrb
shlb
decl
cld
js
popa
fdivrs
aam
lahf
xor
lods
pop
mov
loopne
loope
mov
incl
adc
pop
mov
mov
mov
mov
ret
ret
lret
lcall
call
xlat
add
out
mov
incl
xor
pop
repnz
icebp
cmp
xor
add
push
jne
popa
mov
xchg
push
mov
lds
mov
leave
inc
test
jg
push
fs
lock
lcall
decl
cmp
fnsave
mov
sub
xchg
orb
fwait
lahf
pop
push
mov
jbe
or
pop
std
imul
cmp
imul
mov
xor
mov
push
nop
xor
dec
std
call
shlb
sub
jb
imul
jp
in
decl
std
jo
pop
out
or
mov
mulb
nop
add
fnstcw
add
dec
in
aad
clc
fsub
pop
in
inc
test
adc
testb
aam
cmc
push
dec
std
repnz
pop
mov
imul
cli
mov
cwtl
sti
push
cmpsl
adc
inc
in
repnz
jle
jg
xor
ficompl
cli
or
mov
mov
inc
fs
call
adc
imul
and
pop
adc
sbb
jmp
cmp
das
loopne
test
mov
mov
mov
stos
mov
cli
sbb
fistps
movsb
adc
push
push
jno
xchg
xlat
pop
jbe
hlt
rcrl
in
sbb
cmp
adc
sub
jmp
stos
repnz
cli
sub
jg
data16
inc
mov
adc
pushl
aad
rcrb
add
mov
xchg
dec
mov
pop
dec
mov
aaa
stos
loopne
jge
mov
mov
sub
in
out
jmp
loopne
test
hlt
cmp
ljmp
jmp
in
sub
andps
adc
add
call
pop
std
call
adc
pop
icebp
lret
mov
jl
fucom
xchg
ficompl
data16
lcall
lret
xorl
test
jae
or
cmc
lds
inc
scas
or
movsl
jg
push
pushf
or
jnp
and
sbb
lcall
xchg
lods
orb
jns
push
daa
push
mov
pop
cmp
das
dec
sbb
popf
fucomi
ud0
out
fsubp
xor
mov
pop
iret
lret
pop
call
mov
or
call
pop
hlt
and
shll
sar
cld
notb
push
or
jmp
xchg
cli
das
adc
pop
push
cwtl
push
lcall
push
pop
cld
notb
inc
push
and
lea
ljmp
push
adc
int3
inc
mov
dec
stos
cltd
insl
xchg
add
fsubr
fbstp
dec
sbb
lahf
in
mov
push
and
std
aaa
pop
sub
mov
test
xchg
dec
lea
sbb
cmp
cmp
jb
push
xchg
test
lods
cltd
push
aam
xchg
cli
sbbb
sbb
clc
aad
fcomps
jmp
mov
add
jae
vorps
insb
imul
or
jge
xchg
insl
mov
and
decl
idivl
les
icebp
cmpsl
lods
push
adc
sub
lret
call
or
stos
lods
gs
jo
and
push
dec
add
loopne
cli
pop
pop
sub
int
sub
jae
pop
rcrl
lgs
jmp
and
ret
sti
mov
fs
aas
call
or
test
jle
pop
push
inc
pop
inc
mov
int3
ficompl
xchg
cli
inc
lcall
imul
out
cmpsl
insb
jns
pop
mov
incl
xor
xor
loopne
shrl
enter
adc
push
xor
sbb
ljmp
cmp
xlat
adc
push
movsb
and
lret
mov
push
jl
jnp
jecxz
out
bound
adc
cmp
push
aad
in
nop
cmp
ja
cs
ljmp
or
testl
sub
adc
fbstp
int
mov
aam
pushl
out
cmc
and
jo
repz
or
dec
lcall
imulb
adc
jmp
negb
dec
mov
cmp
and
loope
dec
push
repnz
mov
gs
ljmp
jne
push
aaa
sub
movsl
mov
add
repz
lahf
and
push
mov
push
mov
mov
push
mov
adc
cmpsb
cs
fwait
scas
cmpsb
ja
or
xchg
loope
push
cmp
and
jg
gs
int
aaa
mov
cmpsl
push
push
fidivl
sti
pop
adc
dec
sub
loop
dec
std
cmp
mov
lods
clc
lret
imul
sbb
or
stos
mov
lahf
xchg
jmp
test
lcall
nop
ret
cmp
sub
add
pop
and
scas
gs
jb
arpl
jae
fs
decl
mov
mov
cmp
sub
mov
inc
lcall
adc
inc
jb
mov
andl
out
pop
mov
in
lea
lret
scas
cmp
mov
fs
inc
sbb
pushl
pop
outsl
rclb
std
pushf
mov
test
decl
loop
add
or
push
in
push
xchg
sub
cmc
lock
jmp
inc
jp
mov
mov
push
lock
jmp
clc
nop
cmp
push
mov
ja
or
inc
cmpsl
movsl
or
sbb
adc
andb
push
fmuls
jg
lcall
sti
sbb
mov
int3
leave
or
adc
cmpsl
sub
int3
call
arpl
dec
shl
and
in
xchg
pop
pushf
xchg
dec
jl
push
lods
lods
movsb
mov
cmpsb
xchg
mov
aam
fcomp
xchg
or
or
pusha
aas
pop
pushl
stc
roll
mov
sbb
lret
cmp
ljmp
scas
push
xchg
mov
icebp
cli
out
scas
gs
lods
or
mov
in
jp
fsub
test
inc
insl
and
sbb
mov
ret
and
sbb
adc
aad
jmp
or
dec
push
call
decl
pop
sub
xor
ss
sbbb
sbb
pushl
mov
mov
or
mov
test
pop
repnz
sarl
pop
in
mov
mov
pop
imul
mov
fmul
and
incl
push
int
stos
jge
addr16
push
or
xchg
xchg
adc
xchg
dec
movsb
lods
decl
mov
sbb
or
mov
mov
cwtl
shrl
cmc
lods
sbb
add
and
jb
push
add
incl
into
and
icebp
or
fstl
dec
into
sahf
and
add
and
iret
bound
add
scas
and
andb
adc
and
nop
ret
in
fistl
aaa
cli
jg
xchg
mov
ja
fnstsw
sbb
mov
das
jbe
mov
pop
jb
adc
sbb
pop
fcmovnbe
adc
or
sbb
adc
pop
adc
xchg
and
mov
mov
ja
out
cmp
xor
dec
mov
adc
push
decl
fisttpll
adcl
sbb
incl
clc
lahf
iret
sbb
cmc
add
sbb
fdivl
mov
adc
jbe
test
mov
jg
mov
incl
test
cld
sbb
in
jne
xchg
popf
sti
hlt
mov
lcall
pop
mov
sti
mov
add
enter
push
cmp
filds
icebp
add
cs
fcoms
adc
arpl
lcall
std
jl
test
cmp
mov
sarb
inc
sub
pushl
iret
jl
xlat
repnz
mov
xor
repz
popa
adc
jge
and
xorb
es
ljmp
cltd
fstps
mov
cmpl
mov
cli
sahf
ficoml
mov
dec
jmp
popf
mov
cmp
mov
enter
aas
ss
cwtl
scas
jne,pn
ljmp
push
aaa
test
gs
fisttpll
dec
cltd
mov
pop
testl
jo
je
xor
ljmp
mov
push
mov
sub
test
mov
push
mov
jb
scas
xchg
loope
in
inc
pop
push
int
mov
mov
push
jl
xlat
mov
inc
ljmp
dec
fucomip
movsl
or
xchg
lret
cmp
cmp
ds
dec
mov
dec
sub
or
imul
adc
mov
movsl
mov
mov
mov
gs
jp
call
mov
sti
jmp
lea
jge
cmp
xor
sahf
aad
pop
jns
add
out
rcl
pop
shll
test
xchg
inc
fucom
mov
pop
and
les
sub
push
jno
jp
xor
das
lock
outsb
mov
adc
push
push
daa
aam
clc
mov
or
daa
dec
push
loopne
les
sub
shlb
cmp
fwait
cmc
inc
cmp
test
jge
xor
push
mov
mov
leave
cmpb
and
ljmp
dec
in
aam
xchg
lea
das
add
aam
adc
sbb
sahf
xor
pop
incl
pop
cmpb
call
sub
dec
fldl
negl
mov
xor
ret
decl
sub
jo
xchg
or
xor
icebp
cmp
jp
incl
clc
movsl
xchg
mov
jo
xor
lcall
cmp
sbb
cltd
lret
gs
cltd
pushf
and
int3
and
decl
jle
xor
inc
scas
daa
pop
scas
inc
loopne
mov
jnp
mov
ja
test
std
incl
gs
dec
test
push
cmpsl
jns
sti
mov
int
lahf
ljmp
and
mov
push
xchg
dec
call
cmc
in
cmp
shrb
adc
pop
cli
jp
or
cmp
pop
cmp
and
sub
lret
and
or
push
mov
jnp
xchg
mov
xor
sbb
push
cmc
ja
xchg
jno
pushf
dec
lcall
mov
aam
iret
jns
fsts
shlb
aam
push
push
jmp
jnp
gs
push
cmp
xor
xchg
loop
xchg
adc
push
iret
outsl
decl
sbb
movsl
jg
fnstenv
mov
jnp
les
push
loop
fisubrs
sub
iret
cmp
mov
lods
inc
cmp
mov
das
int3
leave
incb
cmp
inc
mov
xchg
inc
nop
jne
mov
incl
sub
mov
lret
imul
or
jne
dec
cli
jg
xor
mov
inc
cld
sarl
lds
adc
aas
rclb
pop
pushf
and
mov
shr
xor
mov
lcall
mov
data16
repz
sbb
enter
jae
aaa
mov
lock
sbb
mov
xchg
test
adc
fs
outsl
lret
aas
inc
cmp
add
jae
cld
mov
movsl
inc
das
mov
enter
dec
push
mov
sahf
movsl
cmpsb
adc
ljmp
push
mov
in
repz
sub
mov
mov
dec
inc
into
out
add
call
pop
shll
mov
inc
movsl
jae
in
sbb
sbb
add
adc
std
sbb
sub
sbb
bound
mov
dec
sub
js
mov
mov
jmp
dec
mov
shlb
jmp
dec
push
sub
loop
notb
imulb
mov
push
and
pop
jg
jmp
xorl
nop
stc
pusha
pop
xchg
jmp
jbe
and
add
dec
and
arpl
scas
incl
test
mov
mov
pop
sub
mov
cmpsl
and
xchg
les
andl
aas
lcall
aaa
xor
inc
int
xchg
and
sub
mov
and
loope
fidivrs
or
dec
sbb
jnp
or
bound
sar
mov
imull
gs
dec
sub
incl
push
dec
xor
mov
sub
in
popa
mov
jp
outsl
jg
xorb
shll
cli
dec
sub
mov
or
clc
clc
xchg
xchg
or
inc
jb
stc
inc
lods
inc
push
icebp
outsl
icebp
inc
adc
pop
ds
sbb
cli
mov
repz
stos
add
mov
mov
stos
in
ja
sbb
mov
xor
add
pop
pop
adc
in
mov
jnp
jecxz
jg
mov
xchg
push
fmul
call
clc
pop
mov
lcall
pushf
sti
mov
pop
ljmp
clc
cmp
xor
sub
mov
call
addr16
cmpsl
daa
vmwrite
pop
ljmp
mov
pop
adc
pop
ret
sbb
and
mov
pop
loop
ljmp
imul
icebp
test
dec
pop
xlat
popf
das
and
pop
ljmp
ja
popf
and
inc
dec
lret
aaa
into
cmp
and
call
inc
push
pop
insb
fsub
iret
mov
into
adc
cmpsl
add
pop
mov
pop
call
and
filds
cli
pop
push
daa
divb
xor
decl
sbb
jnp
sti
lahf
outsl
dec
adc
cltd
lret
addl
jnp
mov
out
testb
pop
sub
sub
adc
stos
jae
mov
rclb
pop
out
jecxz
or
lds
add
ja
xor
test
dec
jg
or
xchg
fwait
inc
test
and
jg
pop
and
dec
push
dec
dec
mov
add
ret
xor
sub
dec
inc
pop
or
mov
dec
mov
stc
fidivrl
out
sbb
inc
pushl
andb
loop
ret
les
mov
and
incl
add
pop
sub
jb
jg
jmp
je
push
pop
fisttps
push
lea
xchg
decl
jbe
dec
pop
fwait
cmp
cmp
sub
push
pop
jae
cmpsl
pop
cmp
dec
add
jmp
sub
pop
xchg
fists
pop
jno
pop
push
mov
shlb
sub
aaa
mov
stc
mov
lahf
add
inc
fisttpll
fmull
sbb
jle
leave
jo
imul
cmp
mov
mov
adc
aas
sbb
daa
dec
fisubl
clc
sbb
shlb
xchg
pop
insb
lcall
push
push
inc
rcrl
movsb
js
jmp
xor
xchg
add
ljmp
ljmp
cld
push
outsb
ret
inc
iret
nop
inc
add
sbb
cmp
pop
or
cli
mov
and
mov
lret
pop
or
push
bound
push
jno
sti
mov
push
push
out
mov
push
das
push
cmpsl
ficompl
test
adc
mov
idivb
mov
sub
push
mov
mov
push
rcrb
test
jne
dec
stos
push
jmp
or
outsl
mov
or
or
jmp
cwtl
in
sub
xchg
in
jmp
xbegin
jbe
pop
popf
jno
fsubs
add
mov
es
xchg
fucomip
lds
testl
add
ret
stos
xchg
std
xchg
clc
decl
std
mov
cli
cli
dec
loop
rorb
jno
adc
sbb
cmc
lahf
sub
decl
std
fildl
test
stos
enter
sub
push
aas
mov
jmp
xor
xor
adc
pop
jne
jg
jg
sub
lods
insl
es
xchg
popf
mov
iret
and
and
call
cli
or
sub
pop
inc
add
xchg
stc
test
rcl
adc
inc
and
call
and
mov
aas
fs
adcl
or
pop
mov
cmp
stos
call
jl
jns
adc
dec
or
sbb
sarb
sub
pop
clc
imul
mov
sti
pushl
or
repnz
lods
idivb
sar
cmp
inc
and
add
lcall
leave
inc
jbe
aad
adc
fwait
adc
repnz
movsl
jmp
pop
enter
jnp
mov
push
inc
pop
and
decl
mov
unpcklps
mov
xchg
mov
test
pop
scas
mov
dec
mov
jg
sti
pop
xor
pop
daa
js
enter
mov
ja
inc
mov
cmp
lcall
jno
cmp
arpl
clc
and
mov
jg
add
sub
movsl
out
pop
in
daa
mov
xor
cmp
jg
pop
in
insl
jno
push
hlt
jo
ficompl
jb
push
cmc
adcl
clc
inc
push
popf
xlat
mov
in
out
ret
inc
popf
in
dec
cmpsl
pop
enter
call
orb
shlb
or
insb
cwtl
sub
nop
sbb
pop
xchg
decb
shlb
repz
jno
popa
sub
mov
cs
xchg
into
pusha
shll
dec
xor
ljmp
inc
inc
push
flds
push
jne
scas
jge
lahf
jnp
mov
enter
dec
mov
fcomps
mov
and
cmpsb
sti
insl
inc
dec
cmp
mov
scas
fcmovnbe
out
mov
push
mov
jp
xor
xor
nop
lock
jmp
imul
mov
adc
fistl
sub
xchg
or
call
cmp
mov
insl
stos
cmc
ret
pusha
pop
inc
dec
sti
and
pop
cmp
nop
xchg
repnz
add
pushl
mov
lahf
data16
and
push
neg
out
sbb
and
cwtl
mov
xor
dec
adc
out
out
inc
fbld
xlat
sti
xchg
inc
mov
pop
loopne
push
aam
inc
int3
jbe
push
mov
mull
push
dec
in
lahf
xor
lcall
popl
xchg
cmp
loope
pop
fiaddl
jle
add
test
pushl
inc
adc
stc
xor
fdivl
rol
mov
inc
test
mov
cld
xor
call
xchg
add
mov
jb
xchg
movsb
sbb
dec
pushf
sbb
fstpt
jmp
jmp
push
icebp
or
cmp
in
sbb
loopne
xor
fildll
mov
ret
outsl
std
decl
fsubl
sbb
mov
mov
je
xchg
mov
mov
in
or
pop
in
test
pop
les
aad
mov
test
imul
sub
fcompl
aam
outsb
push
decl
std
flds
xchg
push
mov
aad
mov
push
xchg
jae
mov
mov
mov
mov
xchg
rcrb
pop
pop
sbb
push
loope
mov
ljmp
je
cli
mov
ret
les
sbb
or
es
fiadds
and
fildl
das
lock
rcrb
js
mov
fucomip
pop
sub
and
jmp
mov
ja
insl
xchg
pop
call
aaa
je
inc
dec
cmp
sarl
aaa
mov
cltd
lock
jmp
mov
and
cli
hlt
sbb
mov
xor
in
pop
cmp
cld
pop
mov
and
mov
mov
adc
mov
loopne
mul
sub
inc
sbb
subl
les
and
fldcw
pop
adc
mov
mov
or
ror
xchg
cli
sub
add
sahf
push
or
push
sub
sbb
icebp
lret
sub
aad
fs
outsl
hlt
call
pushf
adc
and
lahf
mov
in
pop
cmp
and
mov
add
mov
decl
sahf
mov
xchg
push
ja
stos
push
insb
and
or
push
outsl
pop
cmp
scas
push
jg
enter
mov
rolb
mov
xorl
sub
lret
bound
sbb
jp
add
cmc
jg
in
cwtl
mov
xchg
adc
shr
outsb
lcall
pop
aaa
pop
and
ljmp
cmc
test
lahf
into
stos
loopne
insl
mov
pusha
jb
xchg
pushl
mov
pop
dec
mov
jmp
data16
lds
mov
subb
inc
xchg
sbb
ret
pop
jge
mov
or
mov
int
cltd
loopne
pop
sbb
pop
sbbb
jmp
adc
pop
xor
jle
pop
jmp
orl
jg
lea
pop
cmpl
dec
ret
mov
rclb
jbe
adc
decl
fdivrs
imulb
or
ljmp
cmp
repz
pushl
mov
outsl
sbb
movsb
mov
lods
add
lea
and
xorb
imul
shlb
aaa
xchg
xchg
jecxz
repz
outsb
lret
fidivrs
adc
xor
shlb
insb
add
rcrb
xchg
leave
add
addb
cmp
mov
fidivs
jg
sub
or
sysret
aas
push
pushl
mov
js
sbb
ss
imul
data16
xchg
and
imulb
lods
ret
mov
push
js
mov
fcompl
jmp
cld
ljmp
mov
dec
push
in
lds
xor
ret
jnp
rcll
aaa
dec
arpl
or
decl
add
cs
das
adc
xlat
dec
push
nop
jecxz
ljmp
arpl
mov
popf
inc
xchg
insl
frstors
imul
jg
mov
or
inc
fwait
jecxz
xlat
cmp
sbb
mov
jmp
add
ljmp
push
xor
mov
add
jae
shrl
repz
pushl
shlb
dec
or
out
fstpl
jo
mov
lds
std
incl
outsb
xor
insl
les
ret
loope
loope
mov
jno
lock
and
sarb
in
int3
and
test
sarb
ds
and
mov
outsl
ja
jns
or
enter
mov
in
mov
daa
add
in
fstp
mov
sub
inc
and
test
cmp
jg
pop
mov
mov
dec
push
dec
dec
cmpb
mov
sbb
xchg
mov
icebp
cld
jb
add
pusha
das
cld
call
sub
das
xor
imul
xchg
pop
jno
das
inc
sar
cmpsb
fildl
movl
jg
fbld
ja
add
sbb
add
dec
outsb
pop
dec
ss
mov
jmp
lods
shl
ljmp
incb
ja
enter
xor
movsl
fldl
cmp
cmp
xor
sarl
pushf
pop
out
dec
adc
jmp
ret
adc
cwtl
cmp
fistps
lods
ljmp
add
sbb
pop
in
int
insl
aaa
in
cmpsb
mov
sbb
cmp
ret
pop
pop
mov
mov
enter
jp
in
lock
decl
xor
lods
jl
dec
fidivs
or
in
or
mov
aam
mov
aam
call
mov
negb
addr16
dec
dec
rclb
xor
out
test
xchg
mov
mov
ret
xor
insl
fwait
loop
cmp
push
sbb
pushf
ffreep
scas
sbbb
pop
cld
ljmp
hlt
inc
cmp
sub
stos
icebp
outsb
rcl
mov
jne
mov
rcrb
mov
xchg
pcmpeqd
out
jae
xlat
aam
jg
ljmp
dec
push
mov
dec
fsubp
cmp
enter
xchg
repz
out
mov
icebp
push
push
sub
adc
jg
jmp
lret
incb
sti
test
pop
mov
push
jae
mov
loopne
push
lods
dec
sub
test
push
mov
test
pop
call
jmp
dec
sbb
out
xchg
or
cltd
lods
idiv
lods
pop
ljmp
fistl
fwait
popl
mov
and
jmp
ljmp
adc
cmp
lock
jnp
int
negb
data16
sub
jg
dec
sub
xor
movsb
xchg
lods
pop
adc
leave
jge
push
push
adc
push
cld
icebp
lods
jg
push
in
dec
pop
insl
outsb
aas
push
mov
sbb
mov
sub
adc
push
cld
movsb
adc
push
dec
add
stos
or
jmp
ret
and
rcrl
pop
and
mov
xchg
xchg
pop
sbb
inc
adc
aam
inc
das
xchg
enter
xor
hlt
scas
in
lahf
xchg
mov
and
lcall
push
imul
pop
dec
aad
adc
aaa
enter
mov
decl
fs
cmc
movsb
cmpsl
dec
lods
or
push
fisttpl
loope
imul
jbe
jns
dec
mov
stc
scas
sahf
sbb
mov
mov
add
aad
dec
jnp
add
imul
outsl
lock
jne
imul
int3
ljmp
push
mov
test
mov
and
xchg
pop
test
dec
mov
lcall
aas
pushf
mov
xchg
cli
lret
lea
fildll
cmpb
test
add
and
dec
cld
fdivrp
jle
and
stos
stc
dec
sbb
mov
push
cmpsl
xchg
mov
test
mov
lock
incl
dec
dec
arpl
xchg
mov
sbb
pop
sub
pop
bound
out
nop
or
jg
add
ss
outsl
in
pop
push
cmp
enter
or
cwtl
sub
mov
outsl
cld
mov
fisubs
adc
cmp
or
mov
ja
out
adc
aaa
inc
cwtl
mov
movsl
setb
pop
pop
ljmp
daa
movsb
fs
icebp
aas
call
cld
pop
cmp
cwtl
insl
mov
cmp
ljmp
mov
pop
into
mov
inc
mov
jge
das
mov
stos
xor
cwtl
dec
inc
js
gs
js
lods
into
jg
inc
xor
stos
movsl
or
ljmp
repz
mov
sbb
mov
add
adcb
inc
add
dec
pop
pop
ret
addl
mov
pop
push
push
sub
sbb
or
xor
inc
pop
stos
call
add
cmp
jns
outsb
je
and
adc
cmp
sub
fsubr
sbb
pop
push
sub
nopl
jbe
sbb
pop
add
pop
or
adc
pop
ja
es
push
pop
and
pop
jb
or
jbe
dec
inc
pop
dec
push
or
sbb
jo
je
adc
aas
insb
jb
and
inc
gs
xchg
or
add
adc
sbb
pandn
add
adc
add
or
add
popf
cmp
sbb
sbb
add
sbb
pusha
sbb
add
fwait
rcr
sbb
sbb
sbb
or
or
outsl
push
push
add
sbb
popf
xor
push
add
rclb
test
or
add
add
add
loopne
adc
test
outsl
mov
xchg
inc
fstp
add
push
push
inc
sar
in
xchg
sub
test
pusha
jmp
loopne
clc
incl
movsb
or
lock
pop
mov
dec
call
sti
lcall
add
shrb
mov
sub
xor
insb
fs
mov
incl
dec
pop
add
sahf
sub
movsb
cwtl
adcb
mov
xchg
or
jmp
stc
xchg
test
std
mov
sub
movsb
jmp
call
cltd
inc
fld1
push
fxch
rorb
mov
negl
push
bound
mov
mov
pusha
movsb
push
xor
xor
decl
lret
push
out
enter
mov
into
out
lods
cmp
cmp
xor
ffreep
stos
int
mov
dec
or
decl
xchg
loope
push
ds
mov
dec
out
xchg
jne
and
or
cmp
insl
scas
jno
inc
dec
cld
fbld
mov
dec
mov
sahf
lcall
push
mov
lcall
bound
flds
das
and
lcall
xor
jp
xor
outsl
push
inc
cld
aas
arpl
sbb
push
fcmovnbe
or
mov
loope
enter
push
js
inc
ljmp
cmc
call
fldt
fisubs
pop
lret
std
popa
lea
dec
xchg
repz
popa
adc
jg
pushl
ret
out
not
aam
sub
ret
fdivrl
push
pop
cmp
ljmp
jno
pop
cmp
sub
xchg
imul
xor
sub
xorb
popa
jne
mov
push
push
pop
inc
fs
ret
fidivrs
jl
inc
inc
xchg
sub
xor
cmp
test
arpl
int3
xchg
xor
sbb
loopne
or
js
jb
adc
mov
sarl
xor
cmp
pop
cwtl
subb
inc
jmp
pop
or
call
aaa
std
jl
or
pushl
cli
insb
lea
mov
cmp
bound
add
pop
jecxz
shll
jmp
mov
cmp
add
mov
pop
call
mov
fisttps
aas
pop
cmpb
xchg
xor
inc
imul
lcall
and
and
out
insb
mov
in
js
bound
push
jo
loope
ficoms
incl
fstpt
insb
fucom
push
sarb
pop
sub
lcall
cmp
loopne
sbb
adc
ror
stos
jp
lods
push
fwait
jns
call
adc
stos
add
insb
dec
sbb
push
aas
test
call
mov
xchg
sar
jle
sbb
les
xchg
add
adc
pop
inc
sub
mov
test
stos
jg
cmp
es
test
cld
stos
mov
ja
das
orb
sub
or
das
add
out
movsl
push
push
movsb
gs
and
lcall
mov
adcl
leave
arpl
sti
pop
std
jecxz
movsl
test
andl
call
inc
cmp
push
aas
or
and
or
add
and
and
cmc
mov
daa
sub
push
cmp
jo
jbe
rorb
adc
test
decl
xchg
dec
jecxz
call
push
into
xor
jg
xchg
in
out
rcrb
mov
movsl
mov
scas
add
mov
jno
iret
outsb
mov
pusha
cmp
mov
dec
xor
rorb
mov
ret
call
mov
jo
adc
ret
xor
mov
js
pop
add
mov
shlb
mov
mov
hlt
sub
or
in
xchg
insb
mov
mov
fldz
sub
jge
pop
pop
test
fmull
lret
vpmacswd
loopne,pn
les
push
fildll
test
mov
sbb
aaa
pop
loopne
push
outsl
xchg
hlt
or
das
int3
popf
js
pushl
jns
or
popf
test
pop
lods
pop
stc
notl
iret
sbb
sub
push
lds
inc
jb
jmp
inc
or
imul
mov
insl
xchg
clc
cli
jnp
popa
or
cmpsl
aaa
adc
shlb
dec
stos
mov
or
jnp
cmp
arpl
jp
jns
bound
jecxz
pop
push
incl
repz
xchg
add
and
adc
lcall
xchg
subl
lock
nop
int3
mov
mov
mov
inc
pop
cmpsl
js
sahf
lcall
pushf
inc
dec
iret
scas
and
dec
cmpsb
aas
test
je
idiv
mov
in
sub
lcall
sub
outsl
loopne
pusha
jb
imul
ret
aas
fstpt
xchg
in
mov
push
aaa
out
sbb
fnstcw
adc
inc
repnz
add
dec
pop
dec
test
lock
lods
mov
test
insl
jnp
call
call
ftst
es
cld
adc
mov
sub
xchg
into
cwtl
mov
negl
ljmp
push
mov
iret
adc
outsl
push
xor
xor
mov
or
cmp
jmp
mov
daa
sbb
arpl
out
adc
lea
fsts
sub
movsl
cmc
adc
sar
jg
jmp
pusha
testb
testb
ljmp
inc
jmp
mul
push
sti
push
jg
js
mov
mov
pop
jo
mov
pop
mov
ljmp
in
push
dec
pop
stos
ljmp
xchg
lcall
test
lret
xor
out
aam
lcall
add
mov
call
nop
loop
and
inc
sbb
and
aas
setl
addr16
jmp
or
push
movsb
jae
arpl
iret
jmp
cmp
jo
sbb
das
lcall
out
cmp
ja
cmp
orb
rclb
aas
fwait
test
push
ljmp
jge
sub
mov
std
xchg
xchg
cmp
lcall
rcr
decl
cld
decl
jae
and
je,pn
mov
dec
int3
sbb
rcpps
hlt
test
sub
imul
ljmp
xor
or
mov
std
push
loop
int
push
xchg
mov
mov
jmp
xchg
push
jg
int
in
mov
testb
xor
jns
pop
jmp
outsl
out
leave
xchg
pop
mov
jmp
dec
es
push
shll
push
and
cmp
mov
incl
dec
mov
lods
add
call
sar
cmp
jg
fucomip
cs
cmp
push
inc
fisubs
dec
stc
rcll
mov
out
push
dec
sub
mov
aas
or
mov
std
out
inc
ret
cmc
sub
xchg
hlt
or
std
adc
mov
aas
add
mov
daa
dec
cli
push
fists
mov
push
cmpsb
cmc
lods
mov
xchg
or
jno
xchg
dec
xorb
inc
pop
pop
in
mov
jmp
bnd
push
ret
add
xchg
ljmp
mov
stc
outsb
dec
fsubrl
and
std
incl
int3
pop
shr
stos
or
and
gs
roll
fdivrl
jo
das
negb
fisubrl
sbb
and
cmp
jle
sti
lods
pop
xchg
imul
mov
push
popa
mov
adc
inc
push
cld
add
xor
loopne
pushl
pop
ret
cmp
out
cwtl
out
sub
sti
or
out
sub
xor
loop
mov
pop
pop
xor
std
enter
out
ret
cmc
ret
out
jno
out
adc
repz
push
jp
xor
fs
mov
cmp
inc
sbb
test
insb
sahf
sbb
ljmp
xorb
mov
and
sub
pop
loope
adc
sub
stos
adc
mov
sarb
cmpsl
cmp
mov
add
idivl
mov
call
sbb
lahf
cli
push
aaa
repnz
sar
jmp
mov
sub
out
cmc
sbb
ljmp
mov
movsl
icebp
mov
lahf
xchg
daa
add
fstps
imul
cmp
or
jns
mov
ljmp
or
jne
mov
xor
testl
push
in
ret
paddusw
jl
inc
rcr
jo
jmp
call
xchg
out
mov
movsb
inc
inc
in
xchg
imul
or
mov
xchg
or
pop
xchg
sub
inc
insl
and
jle
sub
xchg
test
ret
lea
incl
aaa
out
xor
imul
push
pop
push
lret
lcall
cld
incl
lea
aas
sbb
add
and
cmp
arpl
jge
jmp
repnz
xchg
aad
cli
inc
mov
and
rcl
pop
sub
mov
call
dec
icebp
mov
xor
in
mov
iret
and
pop
cmp
insb
std
aam
loop
call
and
jb
or
mov
test
jecxz
std
outsb
xor
xor
cs
stc
pop
lcall
sbb
and
jle
or
rcrb
sbbl
xor
dec
push
dec
aad
sarb
sbb
in
ljmp
dec
ss
ljmp
ljmp
mov
leave
addr16
enter
push
cmc
push
sub
adc
hlt
mov
ret
or
jae
jmp
dec
add
jmp
loope
out
lods
dec
or
popa
dec
push
ja
sti
mov
adc
lcall
mov
lcall
bound
pop
out
dec
hlt
ljmp
call
and
mov
xchg
push
outsb
std
mov
filds
xor
mov
scas
test
das
pop
mov
push
dec
push
cmpl
cs
imul
cld
xor
andb
inc
test
dec
outsb
nop
outsl
es
jmp
fidivrs
data16
mov
and
push
cmp
cmp
push
popl
and
loop
cld
or
std
and
dec
and
xchg
xchg
loope
lds
out
ja
test
into
mov
sbb
pop
jecxz
cmp
pop
jne
outsb
add
adc
insl
xchg
call
xchg
inc
out
int
push
mov
push
hlt
add
xchg
scas
and
push
cld
popa
fs
pop
clc
mov
lock
add
jecxz
xchg
or
jnp
jl
mov
jmp
cmp
add
outsl
ja
pop
xchg
xchg
cmc
jmp
fwait
mov
jns
rcrl
lock
adc
cli
fbstp
shlb
adc
push
add
inc
push
ficomps
mov
pop
mov
add
inc
leave
push
sbb
fwait
jge
and
jg
mov
push
lea
adc
cmc
cmp
loop
pop
fbld
and
movsb
push
push
mov
mov
arpl
or
hlt
dec
xchg
insl
popw
cmovge
cmp
out
mov
out
push
xchg
lcall
push
sbb
mov
mov
out
ret
push
jb
adc
jns
sbb
ds
xchg
lcall
and
mov
movsb
clc
mov
push
mov
push
add
mov
test
mov
rcrl
add
in
push
pushl
mov
xchg
mov
bound
ja
pushf
mov
out
ljmp
pop
in
lock
pushl
out
xlat
push
push
mov
cmp
outsl
sar
ljmp
mov
jl
xchg
xchg
adc
cmp
jmp
inc
movsl
jg
adc
int3
fmull
pushf
fimull
lods
fdivl
pop
fisubl
aad
es
mov
out
and
mul
xchg
mov
aas
mov
insb
xor
fcom
lea
mov
out
flds
into
mov
mov
test
daa
jno
inc
in
pop
pop
gs
jns
loop
outsl
push
je
lret
pop
cld
in
fs
std
test
jne
int
test
push
mov
insb
sbb
jp
lods
ljmp
xor
fld
mov
ljmp
cmp
jp
cmpsl
rolb
mov
jmp
push
xchg
dec
dec
or
movsl
mov
mov
lahf
iret
pop
push
insl
std
sub
cli
cmp
mov
out
bound
jle
repnz
test
cmpsb
jmp
imul
fs
or
std
dec
pop
pop
or
cld
lcall
adc
js
popf
stos
inc
fldt
mov
fbld
mov
lcall
cmpb
and
push
lret
jo
aaa
fistps
das
mov
lret
hlt
mov
pushl
imul
addr16
mov
mov
sbb
ret
aas
xchg
clc
cld
jg
push
pop
pop
inc
cmp
pop
repnz
jl
add
sbb
pop
xor
jmp
or
movsb
lods
xorb
jae
push
sub
jns
out
push
lods
fiaddl
sahf
mulb
aas
pop
or
or
xchg
stc
loopne
push
das
icebp
and
stos
ss
out
jge
mov
lcall
loop
aad
push
mov
rorl
mov
mov
inc
cmpsl
aas
out
sub
cld
aad
mov
stos
cmp
push
incl
das
mov
lea
mov
lcall
call
push
into
jb
int
cmpsb
mov
inc
mov
add
je
pop
insl
adc
inc
je
das
add
pushl
insl
bound
sbb
dec
shll
dec
add
sub
mov
adc
testb
jmp
mov
mov
fistpll
popa
mov
cltd
mov
mov
je
push
mov
aad
lcall
jbe
hlt
jne
inc
aam
jge
cmp
out
mov
aam
push
subl
push
std
je
iret
and
test
ss
and
test
incl
xchg
dec
mov
adc
mov
jbe
cmc
adc
ds
gs
or
cmpb
fbld
clc
adc
adc
stos
xor
in
rclb
inc
in
decl
jmp
xor
test
lods
stos
add
scas
mov
jbe
clc
lcall
sub
mov
xchg
orb
push
dec
call
and
inc
clc
mov
cmpsl
les
adc
inc
push
xchg
clc
das
cld
mov
mov
jmp
mov
lods
pop
cmpsb
push
jmp
mov
jb
nop
add
push
ljmp
cmp
adc
test
xor
cmp
popf
adc
lods
in
jg
out
pop
cli
push
cmc
out
cmpsb
mov
inc
xor
mov
decl
inc
outsb
cmp
mov
pop
xor
std
xlat
mov
mov
pop
outsl
mov
xchg
popl
xor
mov
mov
adc
xlat
pusha
call
adc
jp
pop
outsl
cmc
inc
ds
shl
movsb
and
mov
ss
mov
or
mov
pop
or
clc
dec
icebp
les
mov
das
aas
sbb
xor
out
loopne
mov
mov
jmp
mov
mov
iret
repz
test
sbb
cmp
mov
push
ds
ss
sti
mov
test
pusha
mov
in
cmp
test
pop
and
pop
in
call
enter
jp
out
enter
push
cld
leave
stos
xchg
cs
mov
dec
dec
mov
push
popf
mov
inc
and
mov
mov
negb
mov
xchg
fucomi
cmp
pusha
add
jg
fldl
xor
out
insl
inc
pop
inc
cmpsb
sub
std
jmp
add
roll
mov
jmp
jmp
inc
popf
dec
sar
outsl
std
push
or
test
or
cmp
push
stos
sbb
jg
pop
cmp
push
mov
xchg
leave
clc
lret
xchg
inc
lcall
jp
mov
dec
and
xor
std
loop
insb
cmp
cli
xor
ljmp
and
or
jns
test
mov
decl
pop
stos
inc
leave
inc
sub
jnp
adc
lret
push
in
shlb
iret
jae
clc
call
xchg
incl
movsb
cwtl
or
stos
lea
or
push
or
insl
jbe
daa
mov
cmp
rolb
jmp
dec
lahf
subl
mov
pop
jo
cwtl
jns
sti
cmpsb
pusha
ret
sbb
aas
dec
out
jmp
mov
gs
xor
cmp
sbb
push
movsb
lret
or
das
mov
incl
inc
repz
or
cmpb
call
fiaddl
repz
out
faddl
pop
sbb
out
mov
inc
aad
jmp
into
xchg
mov
push
js
adc
dec
cld
or
ljmp
inc
stc
test
js
jp
and
cmp
mov
in
jno
int3
gs
ret
mov
cli
out
pop
lds
push
fstps
pushl
add
aam
sbb
movsb
jge
out
xor
jg
incl
stc
pop
je
ljmp
std
ljmp
sti
out
pop
sbb
loope
call
pop
dec
mov
dec
aas
jp
call
insl
jnp
mov
call
adc
aam
jmp
mov
pushl
negl
xchg
cmp
jg
imul
jle
cmp
hlt
add
call
rcr
pop
rorl
mov
lea
sbb
out
xchg
mov
cmpsb
push
and
pushl
mov
xchg
and
in
imul
jge
cmpsl
cld
mov
and
nop
pop
xor
jg
add
push
cltd
mov
jg
lcall
sbbb
push
mov
mov
outsl
and
fcomp
mov
lcall
bound
jns
aas
test
pop
sarl
cwtl
jmp
sub
mov
jl
flds
push
mov
adc
inc
jb
decl
int3
xchg
ja
fnstenv
mov
jmp
mov
push
xchg
js
iret
push
or
mov
sbb
pop
jg
clc
ljmp
int3
jge
pop
cli
dec
std
inc
mov
inc
imul
adc
repnz
jo
fdivr
add
fstpl
pop
push
and
loope
stc
and
or
xchg
incl
inc
ja
push
xor
gs
and
mov
dec
out
fnstenv
fmull
fnstcw
in
sub
xor
fstpl
lods
gs
add
lcall
arpl
inc
int
std
shlb
out
mov
popf
mov
outsb
or
icebp
das
mov
decl
mov
movsb
pop
mov
sub
in
std
xchg
push
ljmp
call
and
cmp
pushf
jp
out
mov
fistps
xchg
pop
lahf
lock
fucomip
push
cmp
gs
mov
cmpsb
or
mov
and
mov
sub
ficomps
jl
shl
and
jg
dec
xchg
js
cmp
pusha
lret
cld
cmp
xchg
psllq
fldl
or
in
mov
and
cmpsl
push
adc
lods
sub
cmp
dec
ljmp
std
outsl
icebp
lcall
popf
xor
decl
cmp
ljmp
sti
enter
icebp
add
and
or
pop
mov
add
pop
enter
les
ljmp
in
mov
ret
lods
pop
jle
jnp
mov
clc
mov
div
mov
test
xchg
lods
push
scas
in
outsb
imul
mov
in
inc
testb
push
call
add
mov
cmpb
into
test
mov
in
lea
lcall
cltd
leave
push
mov
testl
xor
or
adc
cwtl
pop
fisttps
and
loope
jmp
push
mov
or
jne
sbb
mov
out
ja
pushf
and
sbb
xchg
cmpb
stc
fildll
pop
add
ss
lods
je
xchg
xor
mov
add
mov
jg
xchg
sbb
popa
mov
cs
shlb
jg
movsb
lds
aam
mov
cmpsl
push
and
lahf
xlat
xchg
pop
arpl
out
lock
ljmp
mov
push
pop
movsb
stos
aaa
mov
imul
xchg
mov
stc
repz
sti
aas
dec
sti
jmp
xchg
outsb
or
imull
push
mov
out
jg
call
mov
out
or
repz
pop
sub
or
mov
fadds
and
cmpsb
pop
xorb
fstps
push
pop
push
lahf
pop
cld
call
lahf
pop
ds
or
mov
icebp
mov
adc
xor
mov
jg
enter
ljmp
in
dec
nop
ljmp
push
decl
out
aaa
in
mov
nop
outsl
std
das
lock
inc
mov
inc
cs
cltd
add
popf
ljmp
test
cmpsl
push
sbb
mov
inc
pop
dec
pop
adc
inc
mov
fistpll
aaa
stos
popf
adc
push
mov
shrb
xor
push
sbb
xor
iret
jg
js
jg
inc
xchg
into
call
mov
sub
cmp
pushl
lahf
pop
xor
mov
inc
rcll
mov
add
js
pop
push
pop
aas
lcall
jmp
int
popf
pop
enter
into
lcall
mov
push
push
lcall
dec
add
mov
adcl
clc
decl
cmp
lret
psubsw
cwtl
fdivrl
push
xor
movsl
cmp
sbb
popf
mov
jo
loop
cld
iret
incl
int3
jae
lods
and
or
pop
lock
jmp
jle
mov
pop
ja
mov
mov
ja
arpl
pop
clc
pop
cli
xor
sbb
mov
jmp
xchg
data16
jmp
cs
pop
daa
imul
nop
int3
pop
jge
xchg
dec
fnstenv
gs
mov
jns
out
leave
mov
filds
xlat
shrb
shll
pop
pop
lcall
in
outsl
aaa
cwtl
imul
push
mov
insl
test
pop
mov
jle
sbb
clc
fistl
sbb
sbb
jge
leave
cli
sub
sbb
decl
inc
fsubr
enter
sbb
inc
and
outsl
add
lret
hlt
cmp
sahf
shl
mov
jnp
push
lcall
std
dec
jae
mov
jae
into
call
test
rcl
add
decl
mov
adc
push
lea
fnstenv
fistps
outsb
lcall
clc
pop
dec
mov
enter
xor
fiaddl
mov
call
into
mov
mov
mov
mov
xchg
ljmp
xchg
divb
jo
sbb
sbb
push
sarb
cmpsl
pop
xor
ljmp
cltd
xor
mov
ljmp
cli
dec
push
loopne
jp
call
das
lock
pushl
dec
out
add
cltd
fisubrl
cmp
in
inc
shlb
and
jge
and
push
ss
leave
repz
jo
repnz
out
mov
push
lods
dec
sbb
mov
cmp
outsl
lock
cmpsb
lods
sahf
xchg
push
test
pop
js
rolb
mov
loope
pop
std
call
aam
in
sahf
push
std
or
test
jbe
and
lcall
ror
pop
adc
ret
xchg
mov
push
lcall
loopne
push
mov
jecxz
pop
js
jae
mov
dec
arpl
ljmp
mov
mov
inc
loope
jae
add
mov
frstor
mov
jnp
into
push
jns
rcrb
mov
stc
jg
push
decl
std
lcall
addr16
ret
js
push
jnp
pop
pop
movsl
cli
mov
sub
jg
pop
pop
das
gs
out
adc
incl
or
adc
shrl
fadds
adc
pushl
sarl
cmp
dec
es
test
adc
cwtl
stos
pop
test
xchg
mov
stos
mov
mov
out
sub
push
dec
cmp
out
cli
push
jae
movsb
xorb
insl
pushf
nop
or
imulb
push
incl
pushl
ds
les
add
adc
notb
lock
jne
leave
pop
sahf
push
icebp
push
ja
fdivrs
icebp
add
clc
push
inc
or
call
cld
and
inc
sub
fucomip
mov
pop
shrb
daa
fnstsw
or
mov
mov
dec
sub
pop
repnz
add
test
and
or
idiv
mov
pop
xchg
hlt
sbb
mov
push
and
jg
shlb
xchg
outsb
iret
xchg
shl
shrb
jle
mov
out
hlt
and
jmp
sbb
jge
rol
mov
inc
dec
stos
mov
clc
cmp
inc
mov
add
ss
andl
leave
and
lcall
and
jae
test
popf
fstpt
cmpsl
std
int3
push
outsb
sub
jne
adc
cmp
sti
mov
dec
mov
mov
inc
jb
mov
clc
pusha
int
mov
mov
pop
cli
incl
lahf
push
into
mov
sbb
call
push
mov
mov
mov
jbe
sbb
les
stos
jecxz
sub
push
sub
xchg
je
inc
mov
xchg
jmp
and
xor
mov
and
jo
sub
fisttpl
daa
jno
xchg
andb
sub
jg
jmp
or
mov
pop
sub
test
dec
push
addl
xlat
adc
ljmp
push
fistps
int
int3
imul
xor
decl
mov
out
or
xorl
out
fsubl
cs
cmp
add
jmp
loopne
push
dec
add
sbbl
pop
pop
and
sbb
mov
imul
stc
int
test
out
sub
scas
fcoms
jg
loop
or
xchg
mov
pop
mov
jl
xchg
sub
hlt
ret
pop
lret
cmc
cld
dec
add
add
div
ljmp
jg
or
fsubs
sub
dec
mov
loop
rorl
push
push
incl
pop
push
lcall
loope
xor
outsb
xor
fsubs
mov
lods
mov
mov
decl
cld
push
scas
call
and
mov
cmpl
or
stc
jae
rdpmc
out
dec
rcr
and
mov
xchg
push
push
jae
jg
outsl
sub
cmp
sbb
je
pop
pop
mov
jmp
lea
jmp
int
ret
fldl
movsb
xchg
stos
mov
mov
sbbb
test
mov
lock
jmp
andl
loop
frstor
insl
aas
sbb
ljmp
jns
xchg
jg
out
imul
fcoml
leave
xchg
push
xchg
push
xor
pushl
and
je
mov
fwait
sub
sub
mov
cmc
adc
sbb
outsl
scas
sub
int3
cs
jg
lock
cmp
and
dec
into
xchg
jno
ljmp
dec
test
jne
addr16
roll
inc
aaa
inc
adc
push
call
fwait
inc
enter
mov
jns
addr16
adcb
in
lsl
adc
jmp
jmp
sbb
sbb
pop
mov
imull
in
call
push
jno
and
inc
insl
in
cli
or
lahf
je
test
movsb
inc
dec
mov
pop
cmpsl
decl
dec
enter
es
add
imul
cmp
incl
cltd
sub
jmp
adc
arpl
repnz
incl
out
mov
or
dec
sbb
jnp
imul
outsl
sub
push
mov
sbb
rorb
sbb
sarb
imul
lock
in
call
cmp
loopne
cld
andb
test
adcl
sub
mov
pop
pushl
sahf
ja
adc
mov
pop
inc
in
cmp
mulb
rclb
sbb
rorl
leave
inc
jno
lret
idivb
jno
add
xchg
shl
es
loopne
sbb
icebp
call
cmp
cmp
popa
adc
cmp
dec
clc
jp
loop
sub
outsl
xor
mov
je
cmp
mov
cmp
fcmovnu
jb
call
cmp
in
jle
cmp
inc
cmp
adc
xor
xor
dec
sbb
jg
gs
cs
pop
ss
dec
or
frstor
mov
jns
pop
das
inc
icebp
ljmp
jmp
jg
mov
nop
cld
imul
sbb
imul
xchg
call
fsubp
decb
add
cmp
mov
dec
cmp
jl
outsb
push
cmp
push
mov
adc
aaa
cli
jg
mov
insl
insb
into
aad
jg
add
inc
mov
enter
nop
pop
inc
xor
push
inc
jb
inc
or
movsb
orb
jmp
dec
sub
push
mov
bound
or
xchg
pop
incl
mov
jnp
add
repz
inc
add
push
sar
in
dec
inc
pop
xchg
stos
inc
xchg
pop
pop
pop
pop
and
mov
lahf
sarl
aas
into
imul
test
ja
outsb
stc
adc
testl
fbstp
jmp
cmc
insl
stos
repz
scas
mov
push
xchg
dec
mov
adc
add
add
push
inc
cld
xor
rcll
dec
mov
das
lock
pushl
push
dec
popf
sbb
pop
sbb
test
fidivs
sbb
ds
and
lahf
lret
lock
shll
dec
jl
or
mov
adc
call
mov
popf
mov
roll
daa
mov
jo
mov
cmp
mov
incl
add
int
xor
or
mov
fiadds
and
outsb
and
or
xchg
incl
push
out
sub
inc
mov
lock
add
or
shl
dec
pop
testl
push
out
stos
pop
shr
xor
iret
add
lock
xor
ljmp
ret
bound
in
jb
pusha
add
rorl
jno
push
mov
aad
pushf
sbb
ja
push
rorb
and
inc
call
stos
add
sbb
lea
adc
jmp
mov
fistpl
fcmovnb
sub
pop
dec
and
push
int
dec
or
push
mov
ror
xchg
and
pop
push
add
sbb
and
cmp
pushf
mov
mov
pusha
sub
cld
mov
mov
jne
dec
mov
pop
or
sbb
hlt
inc
add
cwtl
loope
enter
call
or
inc
mov
and
fstp
inc
call
pushf
pop
adc
mov
mov
add
xchg
stc
cmp
test
mov
in
test
adc
inc
andl
add
jno
and
sub
clc
movsbl
rcr
clc
inc
xor
mov
clc
cmp
push
mov
call
sub
pushf
stos
es
sub
xchg
add
add
add
push
xor
pushf
pop
mov
sub
adc
pushf
and
sbb
insl
adc
or
mov
ljmp
adcl
sbb
scas
add
xchg
mov
and
mov
fbstp
inc
lret
rcr
push
bsf
mov
xchg
and
adc
mov
std
inc
push
mov
xchg
push
inc
adc
add
fbld
incb
sbb
call
add
sub
pusha
jmp
jl
movsl
push
fnstsw
fimuls
pop
mov
cmp
inc
sbb
jl
or
pushl
or
sbb
ljmp
jmp
inc
pushf
push
call
pop
jp
icebp
jle
xchg
cmp
push
mov
test
add
dec
out
mov
or
jnp
mov
xchg
push
pusha
push
dec
add
sti
jp
jb
stc
clc
andb
pusha
inc
and
into
sbb
jp
stos
imul
pusha
stos
lahf
jle
inc
cld
pop
call
out
gs
push
add
ret
lea
push
std
mov
mov
insw
insb
aaa
jnp
lock
xor
push
loop
ret
shlb
sbb
ja
jmp
mov
mov
aam
rclb
call
add
add
lea
loop
or
mov
sub
enter
sub
not
setge
pusha
loope
imul
sbb
adc
adc
xor
jmp
icebp
inc
cmp
inc
mov
and
fmuls
push
push
mov
ss
dec
adc
sbb
push
fildll
mov
or
gs
in
and
push
mov
add
pusha
rol
call
sbb
push
sub
cltd
push
adc
test
out
movsl
rdtsc
push
mov
add
inc
aad
xchg
loope
out
std
mov
push
pusha
nop
xchg
cmp
mov
inc
pushf
test
fs
popa
sbb
ds
push
repnz
fs
xor
cmp
je,pt
mov
add
cmpsb
pop
pop
jmp
in
jmp
mov
dec
sar
pushf
test
sub
inc
sub
in
jl
push
imul
leave
insl
outsl
mov
push
or
xchg
jmp
xchg
test
sbb
pop
jge
cmc
jmp
sahf
aas
push
loope
std
xor
pushf
xor
jmp
mov
popf
add
jmp
mov
mov
add
jnp
cmpsl
std
inc
mov
loopne
pop
dec
call
pushf
fdivs
inc
data16
incl
ret
loope
call
add
inc
push
cmpsb
in
xchg
mov
mov
call
jmp
adc
or
and
mov
fnstsw
lret
andb
pop
movsb
add
sub
xor
pop
js
push
mov
test
adc
leave
inc
xor
adc
imul
lds
dec
sub
xor
inc
in
xor
dec
and
dec
call
adc
xorb
int
push
mov
sub
jmp
mov
ds
loop
cmp
mov
jae
pop
fucomp
xor
fsubr
inc
in
loopne
shrl
pop
into
jo
int
std
imul
dec
cmp
cmp
or
dec
insl
xor
movsb
cmpsb
mov
sti
sub
mov
test
mov
sbb
dec
out
fisubrl
dec
cmp
aaa
and
aas
call
push
lcall
ja
outsb
inc
sar
mov
clc
sahf
sub
push
rcl
mov
into
shlb
popf
stos
push
hlt
mov
add
out
call
pop
imul
fsubp
jo
jmp
jb
push
fldl
jnp
add
sub
aad
mov
rorl
push
mov
out
mov
push
rolb
adc
sbb
sahf
cmp
add
xchg
and
add
fldl
fildl
pop
and
mov
imul
fldl
fisttpll
jle
cmp
mov
sub
jne
out
xchg
jmp
cmp
in
add
jne
loop
jmp
cmp
mul
mov
jmp
popa
jmp
add
les
xor
dec
cmp
mov
call
ss
jae
fld
js
movsl
test
adc
inc
inc
inc
loopne
or
ss
mov
movsl
add
pop
xchg
mov
mov
xor
xchg
cli
out
sbb
bound
adcl
jno
sbb
jmp
test
sti
test
pusha
ret
stc
add
inc
arpl
xlat
push
jo
and
mov
add
stc
jb
add
sub
scas
incb
and
clc
cmp
imul
xor
push
dec
ret
lds
cmp
pusha
cmc
pop
jp
add
repnz
jnp
int
in
aam
xchg
jmp
int3
or
fildll
ds
call
shr
negb
push
sub
cmp
sti
js
xchg
mov
push
nop
mov
je
adc
cs
fdivs
adc
stc
cli
loope
xchg
aad
testb
stos
cmp
mov
loopne
and
push
lds
sub
arpl
cmp
jo
sbb
insb
dec
loope
or
xorl
pusha
lock
inc
mov
or
pusha
pushf
xor
test
addl
push
push
mov
sub
repz
cwtl
mov
repz
push
out
pop
movsl
mov
mov
test
push
loop
push
jnp
lods
mov
mov
mov
mov
push
pushf
add
aaa
xchg
imul
loopne
mov
push
mov
lods
or
loope
and
not
pusha
shrl
aam
call
fsubrs
gs
pop
mov
xchg
int3
jae
in
push
adc
fildl
outsb
xlat
inc
push
inc
jmp
pop
sbb
push
call
lock
pushf
inc
fwait
pop
push
cwtl
loope
jmp
or
cmp
or
xor
xchg
pushf
out
sbb
push
dec
or
mov
cld
add
sub
arpl
call
cmc
fstl
jg
sub
test
sbb
dec
jmp
outsb
imul
leave
lahf
pusha
rol
mov
subb
cmc
pop
mov
sbb
movsl
out
inc
ja
adc
inc
leave
shr
jg
pusha
xor
shlb
sub
add
jno
shll
insb
mov
pop
pop
popf
push
js
cmp
es
push
push
adc
add
adc
loope
cmpl
pop
add
sbb
xchg
jae
rcrl
pop
cmp
test
idiv
popa
hlt
mov
push
xchg
sbb
fucom
mov
and
pop
pop
repz
push
adc
cmpl
stc
inc
sbb
mov
rol
lock
xchg
inc
mov
xchg
jmp
movsl
test
pop
outsl
cmp
jl
push
inc
sbb
or
jl
jmp
sub
pushf
jnp
jb
nopl
cmc
push
dec
test
aam
stc
jns
xchg
sub
fstpl
inc
jb
js
clc
mov
hlt
call
push
push
ret
xor
pushf
notl
xlat
jbe
or
cmc
push
jb
sbb
mov
xorl
pop
mov
add
pop
xor
and
xchg
and
shr
test
inc
out
push
test
cmpsb
sbb
inc
cmp
cmp
call
clc
nop
ret
les
push
cltd
dec
lods
pop
mov
in
ds
mov
movsb
xlat
outsb
rcl
andb
neg
loopne
ror
inc
add
sbb
lods
lret
pop
out
cmp
roll
mov
shll
mov
in
push
jmp
add
mov
rcrl
rcll
xchg
push
xor
cmpsl
add
push
cmpsl
orb
inc
push
inc
test
loopne
xchg
aad
repnz
adc
hlt
into
cld
popa
nop
pusha
divb
jmp
hlt
js
pop
or
jp
xchg
movsl
jmp
sbb
push
dec
call
pop
cmp
add
cmpsl
nop
xor
ror
cmp
ss
jge
pop
clc
test
xor
arpl
in
in
pop
cmp
fstpt
loopne
mov
out
leave
nop
lret
pushf
push
push
sub
mov
cs
shll
clc
jmp
pushf
cli
repz
mov
scas
clc
push
dec
lods
mov
ljmp
aaa
sti
dec
inc
and
out
cmp
lret
jne
mov
or
ss
cmp
adc
sti
call
loopne
mov
rorb
and
cmpsl
push
fildl
lea
daa
cli
fists
xor
and
cli
ret
cmp
daa
push
xchg
push
movsb
nop
push
fsubp
xchg
cwtl
rorb
mov
and
push
lret
shrl
rcl
xor
add
sbb
pop
push
add
mov
fwait
js
call
mov
pop
jg
cmpsb
cmpsb
jp
or
sarb
call
push
test
mov
outsb
push
add
sbb
data16
cmp
mov
xchg
and
outsl
mov
xchg
mov
push
ja
push
lds
lea
cmp
flds
jmp
push
mov
pop
inc
push
jle
lock
test
test
cwtl
js
test
gs
dec
test
push
pushf
cld
stos
pop
mov
sub
inc
mov
insb
idivl
les
lock
imul
adc
mov
push
cwtl
add
es
inc
addb
jl
rcrl
pop
add
add
aaa
push
xor
inc
imul
mov
das
stc
mov
out
xchg
push
sub
inc
add
scas
inc
ret
lea
push
lock
push
xchg
dec
cmp
mov
add
push
push
push
xor
mov
orl
cwtl
mov
pusha
call
jle
addr16
movsl
adc
aaa
cs
push
jg
sbb
cmp
cmp
movsl
push
jg
xor
call
js
or
lock
lds
pop
add
aam
push
dec
icebp
adc
test
pusha
std
xchg
out
fbstp
movsl
out
cmp
in
push
jmp
dec
rcr
inc
sarb
inc
repnz
mov
into
push
xor
push
sub
sbb
and
enter
popa
add
push
shlb
aas
cmp
ret
test
psubb
out
ljmp
sub
jo
mov
xor
adc
fidivrs
and
or
enter
lods
sbb
daa
push
xor
jb
pop
mov
bound
fstpt
pop
loope
add
add
out
subl
lahf
mov
aad
imul
push
sub
lcall
call
mov
push
jmp
mov
rcr
push
outsl
outsl
jg
out
mov
lods
fists
out
int
cmp
ficomps
or
sub
push
push
sbb
cmc
test
pusha
xor
mov
xchg
ljmp
mov
dec
or
mov
pusha
flds
ss
push
negl
jae
test
stos
pop
mulb
push
cmp
push
mov
lds
idivl
cli
push
decl
int
cli
mov
xchg
add
xchg
or
mov
push
or
pop
shr
or
add
mov
sbb
iret
pushf
fldenv
cwtl
adc
les
es
divl
mov
jae
out
sbb
mov
es
sarb
pushf
mov
bound
in
sub
or
clc
add
pop
es
mov
addb
out
icebp
movsl
scas
outsb
adc
mov
dec
dec
xchg
call
xor
daa
mov
sti
shll
jg
test
inc
push
push
std
jmp
jmp
scas
imul
mov
push
sub
dec
mov
out
push
mov
mov
call
les
jne
dec
sbb
mov
cmpsl
xchg
outsl
pusha
inc
sub
clc
outsb
push
push
xchg
push
mov
inc
mov
mov
cmpl
insb
push
imul
lds
cmp
dec
cld
testb
push
push
push
dec
xor
bswap
mov
rolb
push
addl
pushf
ja
jo
ss
sahf
push
aad
or
lods
leave
jno
call
insl
xor
fdivrp
jl
aad
mov
stc
mov
lds
mov
popf
mov
push
mov
jb
pop
mov
xchg
shll
pop
shr
fbstp
out
sub
lods
fbstp
outsl
stc
cmp
scas
add
loope
push
arpl
mov
fstpl
icebp
jae
xor
pop
or
lds
add
dec
xor
inc
mov
pusha
pop
cmpl
push
jmp
out
addr16
adc
push
sub
cmc
inc
call
rcr
xor
mov
inc
adc
and
flds
clc
adc
push
cmp
mov
leave
aas
jmp
sbb
sbb
push
jge
sti
sar
loopne
push
adc
push
push
nop
fwait
or
dec
pop
push
xchg
xor
adc
adc
jne
jnp
and
test
mov
xchg
mov
mov
pop
add
jle
mov
sbb
jo
add
test
mov
lock
negl
push
cmpsb
xor
in
and
push
xchg
push
in
out
and
mov
out
ja
mov
mov
dec
sub
or
outsb
int3
mov
fsubr
sbb
mov
mov
jg
clc
sub
cmpb
push
push
pusha
inc
scas
aas
or
call
mov
cli
cmpsb
push
adc
jmp
addb
neg
inc
insb
stos
lcall
or
roll
fimuls
aad
push
sahf
int
std
sub
or
dec
mov
jmp
sub
sbb
sub
mov
testb
xor
sub
inc
sub
inc
push
jmp
test
lock
cmp
pop
or
outsb
pop
inc
fsub
mov
daa
xor
fists
icebp
pop
xor
cmpsb
call
and
xor
ja
push
cmp
loopne
mov
mov
push
add
shll
or
xor
push
aas
ret
arpl
stc
loop
stos
out
fldt
fstpt
push
mov
xchg
cli
pop
sbb
mov
call
mov
sti
out
xor
sbb
mov
xchg
jno
decb
pop
scas
ljmp
cmp
sbb
stos
call
fwait
shll
push
sbb
sub
js
ret
call
out
jle
pushf
hlt
sub
shlb
jmp
pushf
push
pop
iret
sub
inc
je
jmp
pusha
scas
mov
xor
mov
pop
std
pushf
insb
or
xchg
ret
jb
mov
ffreep
jmp
add
bound
push
cwtl
je
ja
in
mov
fnstcw
sbb
movsl
dec
xor
add
pushl
adc
imulb
clc
loope
out
aaa
ret
fidivl
in
sbb
incl
rcr
es
leave
sarb
dec
cs
jmp
es
loopne
jb
bswap
stos
sbb
mov
push
dec
fnstenv
jo
or
jmp
mov
js
dec
popa
add
in
pushf
shll
sub
push
hlt
sbb
std
in
fldt
je
or
mov
mov
out
push
je
inc
scas
dec
in
pop
cmp
mov
push
xchg
push
push
fimuls
stc
loop
cli
aas
or
push
sbb
incl
mov
filds
aad
out
imul
clc
cmp
inc
loopne
push
cmp
and
jmp
dec
xchg
negl
dec
fists
testl
add
daa
arpl
cmpl
inc
or
or
dec
adc
sub
dec
inc
push
arpl
mov
push
lock
std
fnstenv
addr16
movsl
call
dec
fs
sub
mov
pop
push
ss
lcall
dec
in
or
cld
and
aam
pop
enter
shlb
adc
test
sahf
sub
nop
adc
add
hlt
inc
shll
xchg
push
push
test
adc
add
push
movsb
ror
jmp
adc
inc
insl
andb
mov
ret
jle
and
jns
xchg
call
pop
stc
pop
xor
dec
lcall
jge
stc
in
dec
dec
inc
ret
and
aam
push
iret
jecxz
das
adc
test
xchg
int
mov
mov
daa
add
repz
movsb
xor
and
mov
mov
repnz
add
sbb
dec
dec
repz
jg
add
inc
mov
pop
sub
jg
dec
pop
jl
shlb
je
adc
mov
or
dec
pop
lret
out
es
test
rorl
add
fcmovnb
inc
jbe
mov
repnz
mov
fs
add
push
lods
adc
pop
pop
lea
add
sarb
int3
shrb
push
mov
push
xlat
pop
pop
mov
rorb
mov
sarl
mov
and
aam
pop
dec
loopne
and
or
or
mov
js
insl
xchg
mov
test
adc
aad
adc
cwtl
lret
adc
lock
inc
mov
lock
inc
xchg
fs
adc
ja
jno
lcall
insb
and
pop
fcomi
dec
jg
daa
mov
outsl
pop
jno
in
sbb
popf
and
aam
push
fcmovnu
jg
xlat
and
test
sar
push
add
inc
and
insl
movb
ljmp
dec
mov
repnz
sbb
inc
test
call
call
ret
js
enter
addr16
cmpsl
jg
adc
mov
jo
setl
leave
in
call
decl
ret
cs
test
lods
fwait
xor
mov
idiv
arpl
and
xor
cmp
cmpb
and
jecxz
fisubs
ffree
or
js
cltd
adc
shrb
lock
sbb
adc
fisttpl
push
inc
pop
xor
push
mov
mov
xchg
ljmp
mov
xor
inc
lea
add
pop
push
mov
loop
insl
imulb
out
mov
pop
jl
mov
mov
test
ss
ret
jae
mov
sbb
or
decb
dec
sbbb
insb
pop
jge
jmp
int3
dec
das
xor
and
aam
pop
int
fbstp
out
xchg
jmp
pop
lcall
mov
xchg
dec
dec
jbe
test
pop
push
mov
xchg
pop
movsb
xor
insl
cmp
aad
mov
std
jg
js
mov
or
sub
pop
lret
loop
add
pop
in
stos
mov
xchg
outsl
dec
jne
mov
out
aad
add
sti
jg
pop
test
rorl
inc
add
out
xchg
inc
ss
adc
mov
jg
xchg
add
jge
je
mov
rolb
addr16
gs
lock
andb
pop
pop
jp
lods
mov
addr16
mov
pop
ljmp
loope
dec
inc
adc
pop
push
inc
movsl
xchg
dec
sub
fwait
push
mov
mov
push
fsubrs
inc
xchg
push
stos
test
pop
js
pushl
mov
mov
cmp
adc
dec
pop
jl
incl
adc
into
xor
sbb
and
sbb
push
int
jo
jp
stc
mov
pushl
fnstenv
into
stos
sbb
popf
push
sbbl
incl
pop
mov
pop
clc
aad
addl
inc
jecxz
ret
inc
clc
pushl
dec
pop
sbb
or
mov
cmovnp
test
fdivr
adc
mov
pop
in
jmp
pop
loopne
incl
aad
cmp
inc
inc
sub
mov
dec
fdivrp
idiv
mov
cmp
sub
call
and
lahf
and
hlt
jmp
jb
dec
fs
push
jbe
test
les
xor
mov
mov
dec
mov
stc
cwtl
jle
inc
pop
addr16
cmp
dec
or
mov
cmp
out
and
push
enter
or
add
jg
sbb
and
mov
and
jl
in
incl
adc
mov
xchg
movsl
in
les
add
lcall
test
or
sub
das
arpl
adc
cltd
jb
or
push
in
or
clc
fistps
add
add
add
xchg
mov
lahf
adc
inc
add
out
fucomip
cld
inc
dec
outsl
jb
ret
adc
aam
mov
into
mov
dec
adc
pop
adc
dec
cmpsb
or
gs
int
dec
fildll
subl
cmp
xchg
sarl
stc
out
repz
in
stos
xchg
testl
fdivrl
loopne
and
inc
sub
data16
fimull
dec
mov
jmp
pop
cmp
adc
addb
icebp
fmuls
cli
ret
ja
pop
pushf
rol
scas
mov
in
lock
aaa
mov
and
pop
lret
pushf
adc
les
add
xchg
jbe
xchg
iret
mov
ja
push
jb
ljmp
rcll
scas
sub
jb
add
add
ss
ret
push
lds
mov
jb
add
mov
inc
test
pop
push
ficompl
lock
mov
mov
ljmp
xchg
sbb
out
inc
mov
in
scas
cltd
lcall
jg
fidivrl
ficompl
daa
cmp
sar
in
fnstcw
outsl
lcall
gs
shlb
mov
jl
stc
loopne
sti
mov
add
das
outsl
clc
test
adc
shl
push
aam
out
icebp
pop
sbbl
popf
mov
loopne
pop
aaa
xchg
addl
cli
pop
mov
repnz
adc
in
and
lret
ret
cmp
fucomi
sub
pop
les
or
xchg
adc
test
imul
daa
gs
mov
push
arpl
out
clc
mov
aad
inc
xchg
sub
mov
aad
in
jg
pop
mov
xchg
aad
nop
mov
and
rcr
adc
push
into
inc
rolb
lcall
mov
xchg
pop
push
push
lea
arpl
insb
add
mov
mov
je
xor
data16
outsl
mov
lods
arpl
ret
cltd
pop
lahf
cld
mov
cld
mov
sub
fisttps
mov
sub
incl
xor
into
in
mov
dec
xchg
lcall
pop
jp
adc
addl
xchg
lcall
or
cmpsl
aaa
jmp
out
in
mov
nop
das
xor
popa
adcb
call
stos
ljmp
out
fstpl
bound
lcall
decl
inc
lcall
mov
xchg
fwait
sub
mov
in
aaa
subl
das
out
es
iret
xchg
dec
or
les
xchg
es
sbb
adc
adc
lods
addr16
imul
repz
adc
jmp
fistl
adc
arpl
out
sub
jnp
mov
daa
outsb
test
ret
add
add
pop
pminub
repz
outsl
std
decl
into
mov
xor
push
mov
jae
in
push
cmp
push
mov
addb
hlt
out
jle
or
pop
mov
ljmp
xor
sub
icebp
rcrl
adc
sub
jmp
sbb
jnp
inc
scas
fdivs
call
push
int3
jne
inc
pusha
ja
jg
pop
inc
test
hlt
cmpsl
mov
jecxz
lods
pop
movsl
xor
inc
push
cli
adc
push
fsts
and
shrb
xor
rolb
jle
sbb
aaa
and
adc
aas
fwait
jb
and
push
mov
pop
inc
dec
pushf
movsl
sub
loope
cmc
jg
jae
cmp
out
sub
inc
fwait
or
add
js
sbb
jg
aas
das
pop
xor
cmp
mov
jle
jecxz
jne
std
pop
xchg
xor
fsub
push
and
add
setle
sbb
pop
inc
imul
xchg
mov
bound
inc
das
mov
jb
or
mov
hlt
jecxz
fsubl
mov
mov
xor
sbb
icebp
xchg
incl
popf
movsb
pushf
xchg
or
cmp
or
icebp
or
scas
adc
dec
scas
cmp
mov
xchg
leave
dec
inc
aad
js
fs
mov
mov
and
call
test
repnz
or
mov
outsb
xchg
pop
sbb
fsubrs
dec
addb
adc
test
jmp
scas
fldcw
xchg
int3
dec
in
mov
lea
ret
lock
aaa
adc
enter
pop
add
mov
cld
dec
incl
out
das
or
push
xchg
pop
test
cmc
test
and
cmp
sub
arpl
aas
sub
adc
lret
cmp
jmp
xchg
loop
push
leave
xor
and
lods
jmp
loope
dec
jb
add
lods
sbb
inc
pop
mov
add
xchg
xchg
jns
mov
or
push
aaa
adc
gs
imul
fcompl
in
leave
decl
pushl
and
push
int
xchg
popf
sub
mov
mov
scas
ljmp
out
pop
adc
inc
test
outsb
and
outsl
nop
rorb
pop
xchg
jne
call
clc
inc
adc
int3
pop
mov
pop
decl
mov
rcrb
lock
mov
mov
mov
cmp
ficoml
test
rolb
dec
jae
cmc
cwtl
and
daa
dec
test
xchg
mov
push
aas
mov
jae
add
out
add
xchg
adc
pop
cs
mov
mov
fwait
adc
sub
out
cli
iret
ret
cmpsb
das
xor
sub
and
dec
push
orl
pop
xor
ret
push
push
adc
or
and
mov
push
fildl
push
outsl
imul
dec
lret
aas
push
pop
xor
addr16
mov
jg
xor
roll
adc
jmp
loope
sbb
adc
pop
add
stos
xchg
xor
mov
fiaddl
shlb
fwait
push
adc
inc
xor
into
std
push
pop
sub
subb
cld
mov
stc
out
pop
lock
ret
in
scas
pop
test
imul
mov
dec
adc
clc
pop
push
hlt
jmp
test
iret
xor
xchg
cli
dec
mov
sub
test
jge
adc
dec
xor
pop
roll
test
jo
push
ret
xchg
adc
pop
aam
cwtl
adc
pop
loop
sbb
out
and
push
arpl
inc
ja
jmp
and
xchg
sar
lock
in
add
imul
sub
arpl
pop
mov
sbb
mov
adc
lds
insl
fldln2
shll
push
push
jne
adc
cmp
movhps
and
adc
imul
inc
add
mov
movsl
cmp
adc
push
fldt
xchg
lahf
js
fldt
fdivrs
rorb
pop
push
outsb
or
mulps
dec
lods
and
xor
inc
cmc
movsl
sbb
aaa
push
bound
inc
cmc
xchg
mov
jmp
dec
xchg
test
jmp
adc
cmp
push
pusha
movsl
xor
add
push
popfw
fstpl
loop
push
aaa
mov
popf
pop
xor
lcall
hlt
dec
xorb
insl
add
sahf
repz
repz
loop
fnstcw
pop
push
adc
sar
mov
adc
nop
jno
cwtl
sbb
imul
call
arpl
out
push
fadds
ficoms
jl
pop
add
mov
pop
inc
inc
sbb
sub
dec
shll
test
inc
insb
outsl
jae
or
push
inc
add
repnz
dec
popa
inc
jb
jb
add
add
ljmp
fildll
outsl
jne
arpl
push
jb
pop
inc
imul
fdivs
outsl
data16
or
insl
dec
xor
push
push
gs
add
push
and
sbb
outsb
rcrl
add
jo
dec
cmpl
inc
jns
push
outsl
push
imul
imul
push
je
push
outsb
insl
popa
ss
sar
push
imul
inc
mov
sbb
inc
or
xor
mov
ret
inc
dec
and
sbb
insb
inc
jb
mov
mov
je
sbb
inc
jae
ja
int
adc
outsl
ja
add
testb
ss
rcrb
and
mov
sti
in
popa
insl
gs
inc
outsb
jbe
outsl
aad
fstl
and
fiadds
jo
imul
dec
push
je
ret
pop
dec
or
je
jo
outsb
outsw
adc
mov
inc
push
push
rcr
mov
pop
mov
mov
add
orl
and
dec
imul
cmp
mov
mov
push
xchg
insl
mov
insl
popa
xchg
push
insb
cmpb
arpl
pop
and
sbb
pop
jae
ja
sbb
insl
int
or
pop
ja
lods
jae
mov
or
aas
xor
jg
pop
mov
pop
cmp
pop
pop
fs
int3
sbb
outsb
gs
or
push
sub
mov
pop
adc
mov
mov
fldt
in
aam
imul
int
jbe
jne
or
jl
push
push
je
data16
jo
cmpl
gs
popa
or
sub
pop
je
jo
xchg
cmpsl
outsl
insb
adc
jae
lret
in
sbb
push
pusha
jb
leave
or
sbb
pop
into
or
add
das
jbe
xchg
test
xchg
ds
dec
leave
popl
inc
jb
xlat
sbb
les
adc
sub
pop
add
add
je
or
aam
adc
mov
scas
mov
add
dec
push
push
add
mov
rcll
subb
je
pop
aaa
fmul
pop
sti
or
and
sbb
inc
je
or
sub
fwait
adc
daa
out
movb
mov
add
imul
xor
popa
mov
jo
sub
cwtl
add
add
add
add
add
add
add
add
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
