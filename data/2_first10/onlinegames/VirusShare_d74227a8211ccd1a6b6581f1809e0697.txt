mov
mov
push
push
push
mov
mov
pop
sub
push
push
push
xor
mov
add
mov
push
push
push
out
jg
call
fmuls
jne
push
jmp
pop
jge
or
xor
repnz
not
dec
mov
inc
int3
shrb
push
addr16
add
push
push
push
fs
mov
test
jne
mov
jmp
push
mov
push
push
sbb
test
pop
inc
pusha
mov
jae
xchg
and
sbb
pop
mov
fsubs
aam
push
cmp
push
push
jg
lods
jnp
cmp
sbb
xor
push
setne
mov
mov
pop
test
call
fs
iret
or
in
ret
ret
nop
add
insb
mov
or
push
or
add
ficompl
adc
add
or
pop
out
insl
add
shrl
add
add
fidivrs
das
add
lock
push
movl
mov
fdivrs
jle
push
push
push
or
pop
dec
pop
repz
sub
sbb
je
mov
jne
sub
sub
ja
adc
mov
jl
or
idivb
add
add
stos
stos
stos
sbb
mov
ret
scas
xchg
xor
and
addl
adc
xchg
push
xchg
push
xor
jbe
imul
sub
push
in
pop
push
push
jbe
push
movsb
sbb
jg
push
sbb
stc
mov
mov
cli
shr
rep
mov
jbe
mov
sbb
movsb
es
imul
mov
dec
sub
int
das
sub
mov
sub
testb
nop
in
and
leave
mov
or
or
ret
mov
sbb
mov
lea
ficoml
cmpsb
add
fnstsw
pushf
xorl
popa
xchg
pusha
inc
dec
or
daa
inc
adc
jmp
mov
jle
add
cltd
jns
or
adc
shrl
pop
cmpsl
add
mov
mov
sub
xchg
sbb
push
xchg
mov
jmp
dec
outsb
push
outsl
inc
test
rol
pop
insb
push
lea
jmp
sbb
push
jl
or
vmread
adc
lock
les
add
cmp
insb
xlat
sub
jne
pushf
test
je
jl
adcl
cwtl
push
push
lods
rcll
js
sbb
inc
xor
push
mov
cld
or
push
mov
xor
lock
add
sbb
pop
mov
adc
adc
add
cmp
cmp
xor
out
or
cmpsb
mov
filds
push
xchg
xor
mov
mov
xor
lahf
out
test
or
mov
xchg
dec
cli
mov
lret
cmp
int
sub
fdivr
test
int
out
mov
mov
xchg
rcrb
fisttpll
out
movl
popf
shlb
xor
popa
outsb
pop
mov
or
orl
mov
pop
cmp
out
xor
add
push
mov
add
pop
fwait
insb
icebp
jge
push
push
int
push
test
jne
bound
cmp
sub
insl
or
and
xchg
or
nop
int
xchg
in
faddl
add
int
daa
mov
push
fdivl
push
pop
sbbb
lea
js
xchg
sub
or
pop
sbb
sbb
mov
fildll
in
in
fs
pop
rolb
or
jg
dec
inc
push
add
push
and
and
add
sbb
xchg
xor
add
mov
pop
rcr
mov
and
inc
mov
mov
dec
rep
rolb
les
mov
stc
jle
pop
ss
add
les
ss
mov
push
bound
add
in
and
add
mov
jnp
sbb
xchg
lods
add
lret
inc
imul
push
mov
xorl
fwait
imul
mov
push
fnstenv
pop
loope
cltd
hlt
sub
lock
aas
popa
push
or
clc
add
xchg
andl
mov
adc
and
xchg
mov
fwait
or
mov
cld
popa
add
pop
ret
leave
adc
mov
in
push
sub
push
push
add
inc
add
int
cmp
sbb
add
mov
ret
xor
adc
sbb
int3
in
cli
arpl
rclb
add
pushf
insb
pop
adc
popf
ret
lea
pusha
daa
pop
insl
jnp
pop
nop
sbb
push
ja
and
push
lret
sub
bound
push
addr16
enter
mov
pop
sub
sbb
nop
jp
movsl
jo
js
or
cmovnp
nop
sbb
sti
and
inc
mov
push
xchg
fld
sbb
hlt
xor
notl
inc
inc
insb
loop
and
pusha
inc
or
dec
orb
movsl
movb
cmp
xchg
test
or
xor
sub
pop
pushf
pop
cmp
push
jmp
repnz
pop
inc
fs
inc
xor
enter
adc
cs
inc
les
dec
sub
mov
lea
add
and
mov
popa
xor
lock
aad
in
push
mov
add
nop
or
add
add
data16
or
jns
lret
jb
sbb
cs
test
sub
or
mov
inc
inc
mov
and
je
push
push
cmpsb
or
dec
push
mov
mov
call
cmp
sub
shll
mov
shrb
adc
cwtl
fsubrp
or
stos
fnstenv
ret
enter
add
sti
fldenv
adc
adc
inc
add
cmp
or
popl
xor
sub
stos
push
or
push
sbb
clc
pop
adc
xor
cli
dec
ret
je
push
push
inc
dec
movb
inc
int
xchg
lret
sbb
outsl
fldenv
push
xor
hlt
loop
jl
lock
xchg
dec
and
fnsave
add
pop
adcb
mov
cmpsl
ficoms
mov
jp
xor
xchg
mov
xor
or
push
xchg
addl
pop
jle
pop
notl
rclb
add
or
and
or
jne
xor
mov
jmp
mov
js
pop
int3
pop
orl
int
mov
shlb
xor
mov
or
inc
call
mov
adc
cmp
push
dec
jge
and
sbb
push
daa
mov
std
aas
inc
xchg
lea
fnsave
push
pop
pop
push
add
xor
jnp
enter
mov
jne
cmpb
insl
jg
and
inc
or
add
or
insb
fildl
and
aam
dec
movsb
dec
jns
jg
inc
rolb
je
movzwl
jmp
sub
jbe
jmp
push
pop
int3
mov
ret
jge
lcall
jge
fcoml
inc
in
mov
mov
mov
inc
cmpl
pop
mov
push
int3
idiv
jne
pop
lock
add
imulb
sub
arpl
fildl
enter
adc
or
je
add
in
or
decl
sti
adc
cs
adc
mov
inc
test
insl
enter
add
sti
pop
leave
push
push
inc
push
dec
gs
gs
xor
ud0
cld
decl
fs
imul
outsl
jo
outsb
pop
imul
stc
insb
outsl
jb
cs
bound
or
ficompl
jnp
and
pop
adc
outsl
add
fldt
imul
and
and
add
mov
add
add
fmulp
cmp
push
pop
pop
or
fistps
divb
jae
jae
bound
inc
gs
jb
jo
imul
push
pop
push
push
inc
dec
pop
inc
jne
xchg
outsb
je
outsl
add
insb
push
imul
jbe
arpl
pop
mov
sub
add
lret
fisttpl
dec
pop
arpl
jo
popa
je
cs
insb
insl
pop
jnp
push
das
sub
stos
jns
jmp
orl
jb
ss
xor
jbe
add
jae
add
out
gs
and
bound
pop
test
stos
mov
imul
into
mov
push
fsubrs
aas
inc
add
inc
add
push
mov
das
cmp
flds
sbb
ljmp
filds
adc
push
pop
mov
int
mov
push
push
jb
outsl
call
cld
jb
insl
and
aas
bound
jb
outsb
and
fs
add
and
outsb
xor
or
psubq
loop
inc
xor
push
add
pop
inc
sub
xor
mov
add
add
push
jmp
push
or
fldlg2
aaa
add
or
fs
addb
xor
or
in
mov
mov
dec
test
sbb
mov
inc
aam
nop
repz
and
pusha
inc
inc
push
inc
pop
fdiv
fdivp
sbb
stos
jb
inc
push
imul
nop
js
xchg
shrb
cwtl
repz
daa
or
gs
outsl
arpl
xor
or
push
mov
cwtl
lock
arpl
daa
fldenv
mov
rolb
mov
mov
insb
pop
rorb
mov
pop
and
enter
sbb
and
xchg
orl
add
mov
clc
hlt
xor
inc
dec
in
call
sbb
faddl
dec
push
xor
cmp
fsubs
inc
push
add
mov
mov
testb
je
movzwl
mov
sbb
arpl
jb
inc
push
int3
enter
pushf
cmp
shlb
movsl
call
xchg
cmpl
jne
push
je
push
test
mov
test
jne
jg
outsb
or
and
xor
mov
add
lea
mov
mov
mov
inc
cmp
jne
mov
mov
mov
sub
outsl
sub
ret
push
mov
stos
popf
std
pop
xor
dec
mov
mov
mov
out
insl
fstpt
mov
pop
or
add
in
mov
push
or
adc
dec
rol
xchg
push
push
mov
mov
mov
mov
add
out
mov
inc
mov
ja
or
push
or
ret
insl
filds
mov
or
inc
add
pop
jmp
cmp
jne
sbb
std
mov
cmp
jne
mov
call
insl
loope
mov
pop
pop
pop
xchg
clc
mov
mov
mov
dec
cmp
jb
mov
add
call
ja
xlat
mov
bound
jne
mov
push
sbb
ffree
jnp
cmp
cmp
aas
sub
jp
add
cs
sub
jmp
mov
inc
mov
ljmp
stc
mov
sub
mov
mov
mov
aam
sar
test
or
jmp
jle
mov
sbb
sti
jne
or
mov
mov
cmp
aad
pop
mov
fildl
adc
dec
add
lcall
mov
cmp
sarl
aam
call
and
loope
cmp
add
fldenv
clc
add
mov
mov
sbb
mov
pusha
push
dec
push
push
insl
jb
daa
jne
js
and
xchg
mov
cmp
jbe
std
sbb
outsl
in
mov
sub
jecxz
pop
mov
rorb
push
sbb
add
dec
adc
mov
pop
sbb
jae
out
ja
mov
add
sbb
cmp
je
xchg
sbb
int3
mov
push
add
cld
test
mov
inc
rolb
sbb
rcr
cmp
pop
mov
cmpl
push
xlat
mov
test
sub
or
outsl
fstpt
hlt
mov
rorb
lock
add
ret
int
xchg
pop
loop
cmp
fadd
out
add
mov
sbb
jle
add
nop
jbe
mov
cmp
mov
loopne
pushl
ret
sub
push
push
arpl
sub
call
or
push
je
fistpl
mov
lahf
mov
mov
or
outsb
popf
jmp
dec
enter
insl
imull
push
inc
test
sbb
mulb
add
mov
sbbb
jbe
test
addb
sbb
movsl
lea
cmp
clc
mov
aas
xchg
ret
dec
aaa
outsb
pop
jns
imul
and
jmp
call
push
mov
aam
sbb
in
sti
xor
or
jne
stos
call
mov
mov
jecxz
cmpl
movsl
adc
push
dec
cwtl
je
call
push
jp
pop
ja
ds
fisttps
push
cmp
add
data16
mov
xlat
test
jbe
sub
push
call
stos
int
xorl
fisttps
jne
adc
and
and
nop
dec
add
xor
daa
int3
icebp
and
test
dec
rol
and
imul
jmp
ret
dec
sbb
xlat
cmp
imul
mov
cmpl
sub
inc
dec
imul
lock
lcall
add
jg
mov
xor
mov
les
fdivrp
outsl
imul
out
cmp
jae
mov
sub
mov
cltd
jmp
cltd
imul
dec
flds
fistl
lgs
mov
jnp
xor
scas
cmp
in
popf
xor
cmp
add
lea
fwait
push
push
xor
push
stc
daa
cmp
cmpb
adc
iret
repz
gs
mov
in
adc
outsb
lcall
fdivr
adc
mov
inc
das
mov
popf
out
or
hlt
inc
cmp
cmpsb
je
mov
in
in
jne
mov
lods
sub
pop
pop
pop
mov
fs
adc
xchg
xchg
pop
adc
mov
jnp
in
sub
or
inc
jle
push
push
sbb
xor
fs
imul
sbb
adc
push
popa
nop
scas
push
xorl
jg
jne
mov
pop
xor
leave
outsb
scas
adc
push
jne
fstps
sbb
sub
shl
jl
fstpt
fistpl
push
cmp
lahf
js
adcb
stc
lods
or
cmp
mov
adc
roll
stc
add
int3
mov
jmp
push
in
div
fcmovu
pop
adc
add
dec
lods
or
ret
sub
mov
in
shll
or
std
pop
ret
adc
test
ret
aaa
cmc
in
outsl
movsb
jmp
andl
add
lcall
add
or
rclb
and
or
pop
sarb
mov
ljmp
jmp
jg
add
sub
ss
push
or
sub
or
das
sbb
xchg
dec
or
ret
decb
cmpsl
or
pop
inc
sbb
or
je
add
push
jae
stos
jle
sub
notl
test
or
add
inc
cmpsb
int3
popa
fbld
and
cmp
sbb
or
push
arpl
ficomps
loope
add
test
add
add
add
adc
xorb
pop
xor
adc
andl
cmp
or
add
and
pop
pop
push
andb
out
lea
sub
jg
clc
sub
mov
clc
or
adc
add
pop
mov
sahf
adc
fnsave
mov
and
test
movsl
jbe
outsl
fimull
arpl
inc
fisttpl
mov
lea
rclb
sub
mov
notb
add
sub
popa
push
add
arpl
movb
aaa
mov
shlb
cli
fs
hlt
sbb
or
pop
mov
sbb
pop
jmp
cli
inc
or
test
mov
sub
cmp
or
out
adc
pop
mov
sub
xchg
add
inc
or
or
adc
sub
icebp
or
adc
iret
je
xor
push
push
and
loope
inc
pop
insl
mov
mov
mov
and
enter
dec
or
xchg
adc
adc
or
pop
cmp
xor
dec
test
inc
add
push
pop
jmp
lock
or
add
jo
cwtl
sti
shr
outsl
add
orl
adc
js
inc
in
lock
fs
sbb
call
dec
and
and
subl
xor
leave
es
jmp
mov
push
jg
or
adc
or
enter
jnp
mov
data16
add
clc
mov
test
or
pop
jg
pop
inc
adc
je
pop
jmp
adc
fstl
dec
or
cltd
pop
jmp
adc
sub
jge
adc
sbb
mov
xchg
add
cmp
iret
sub
xor
fistps
push
imul
mov
sub
add
xchg
call
mov
jne
cmp
lods
sbb
dec
pop
jmp
or
sbb
out
scas
icebp
fstl
sti
clc
mov
out
jg
or
cld
jmp
and
xor
sbb
and
repnz
inc
inc
jae
mov
cmp
add
adc
adc
jg
jl
mov
je
mov
ret
scas
inc
and
popa
das
push
shlb
sub
lea
cmpl
inc
mov
dec
add
notb
sbb
or
sbb
ret
sarl
sbb
movsb
notl
add
xor
sbb
test
insl
mov
pushf
xchg
xchg
test
fmuls
sub
shl
scas
push
lea
xchg
cmp
clc
mov
movsb
push
testl
popa
push
inc
enter
and
ret
repz
mov
test
cmovb
push
cmc
or
dec
adc
mov
setbe
push
inc
mov
pop
or
or
out
ds
fiaddl
int3
mov
ret
pop
mov
andb
sub
xorl
cmp
sbb
sub
pusha
orl
fiadds
dec
cld
cmpsl
jnp
sbb
test
je
and
sbb
cmp
or
orl
jmp
in
subl
pop
jl
mov
or
adc
call
pusha
inc
rcll
xchg
pop
ret
and
and
or
ss
add
out
mov
mov
call
xlat
test
jno
cmp
clc
mov
fwait
dec
popf
lods
mov
aam
or
cmp
and
or
jge
cmp
sete
xchg
sub
lock
mov
push
fldl
dec
call
pop
and
test
mov
mov
push
pop
xchg
cli
jmp
mov
divl
in
adc
addr16
cmp
jl
sarb
push
in
or
and
adc
xor
das
dec
add
daa
add
cli
or
mov
clc
mov
xor
mov
add
pusha
push
fwait
add
add
les
or
pop
xor
popf
fbstp
loope
xor
pop
leave
xchg
rorb
dec
dec
cmp
dec
dec
add
loope
jmp
orb
push
and
cli
add
mov
ret
or
or
push
fsubr
sbb
and
jp
call
xchg
repz
xchg
dec
pop
ja
cmp
sbb
mov
add
lret
ja
xor
clc
arpl
jbe
and
jge
sbb
lock
lret
xchg
call
mov
repz
fcompl
out
mov
orb
push
cmp
adc
mov
fucomip
rolb
add
inc
lcall
je
xchg
sbb
mov
stc
leave
je
mov
xorl
enter
or
fisubrs
negb
mov
ret
sub
xchg
sbb
pop
jne
ret
out
xor
shlb
xor
lahf
ret
and
rolb
cmpsl
pop
jbe
mov
jecxz
or
sub
pushl
mov
call
add
jo
sti
xchg
mov
mov
call
xor
stos
and
adc
test
adc
push
push
call
add
xchg
jnp
jo
sbb
push
enter
cmp
fs
mov
lds
divl
je
or
sbb
js
rep
mov
or
fbstp
je
cld
lea
sbb
std
sbb
clc
fbstp
add
pop
cld
and
jb
cmp
ja
sub
mov
icebp
mov
cmp
pop
loope
mov
jbe
mov
pop
rcr
aaa
mov
cmpsl
cmpb
out
test
clc
fstpt
add
clc
es
push
sbb
sub
data16
call
jmp
jae
adc
add
or
or
xchg
adc
add
int3
shr
sbb
fdivp
push
call
insl
jne
inc
ficoms
out
lock
or
negb
es
mov
aad
popa
inc
test
aam
push
stos
add
out
push
cmp
call
xchg
push
dec
pop
mov
mov
call
mov
jno
push
pop
xor
inc
or
adc
sub
pop
jns
or
cs
loope
jbe
mov
inc
sbb
add
jmp
pop
inc
add
sub
mov
and
inc
insb
ror
mov
push
or
jge
push
insl
stos
push
or
pop
or
pop
js
fistpl
cmpl
fstpt
decl
daa
pushl
call
out
jmp
addl
push
sbb
lret
loop
pusha
lea
xchg
push
and
dec
push
test
fistpll
imul
add
out
push
dec
sub
fbstp
cmp
jbe
cmp
lea
iret
stc
inc
test
push
push
jmp
lods
inc
xor
xchg
mov
fnstenv
shlb
mov
pop
mov
adc
push
mov
mov
popa
mov
lods
inc
mov
push
fists
jmp
outsb
rcll
mov
sub
test
mov
mov
data16
pop
mov
pop
mov
xlat
pop
and
mov
popf
jmp
call
movb
mov
or
or
mov
mov
jnp
jle
dec
sub
jae
call
jp
sbb
jmp
pop
xchg
std
cmp
outsb
adc
inc
xor
cld
xchg
push
and
shll
xor
mov
pop
loope
das
ja
and
add
push
sbb
or
je
popf
out
sti
sub
xchg
imul
cmpb
lret
pop
xor
sbb
mov
shl
out
outsb
add
rep
mov
stos
pop
pop
js
jg
push
sub
mov
out
xor
loopne
or
xor
div
add
mov
inc
dec
icebp
imul
pop
adc
inc
mov
inc
lret
push
lds
nop
add
mov
pop
add
sub
and
inc
sbb
mov
inc
dec
jne
repz
adc
mov
jl
xchg
imull
xchg
iret
bound
filds
or
push
inc
sbb
je
mov
push
sub
mov
add
je
and
je
pop
je
lock
shll
daa
adc
mov
jle
add
sarb
adc
ja
cmp
ja
lea
sub
outsl
and
int
imul
push
neg
jle
mov
pop
sub
jmp
inc
and
pushf
mov
fcomip
insb
fldt
incl
dec
and
pop
insb
mov
ja
add
push
leave
cmp
aad
add
testb
dec
mov
popa
fsts
xor
adc
add
scas
mov
jo
inc
cmp
or
jp
pop
push
es
sti
test
std
or
xor
js
sub
or
push
or
lret
add
sub
push
push
mov
jae
sbb
pop
pop
jmp
push
pop
mov
lret
or
fiadds
nop
and
inc
jle
inc
js
push
cmp
call
aad
adc
mov
gs
sbb
lahf
idiv
add
xor
add
mov
or
push
push
jmp
sbb
add
das
out
adc
and
sub
mov
inc
jne
pushl
pop
jne
push
loop
and
fidivrl
shrb
add
sti
aaa
insb
icebp
test
mov
or
push
clc
lea
add
ds
inc
inc
sub
cld
in
aad
and
sti
adcb
sbb
lcall
push
xor
add
or
stos
xor
and
stc
vunpckhps
mov
shlb
clc
sbb
aas
or
das
cwtl
sub
mov
inc
push
clc
call
push
inc
pop
inc
outsl
jb
popa
outsb
fs
inc
gs
jo
imul
push
dec
popa
negl
pop
jb
popa
insb
jne
fninit
fldcw
mov
mov
push
mov
ret
adc
jbe
pushf
sahf
cwtl
xor
jno
negl
fs
pop
push
pop
push
push
push
scas
sbb
xchg
push
fwait
pop
pop
fs
lcall
pop
jl
push
push
cmp
in
outsl
gs
add
cmp
jne
mov
out
sub
add
sbb
mov
push
pop
loope
in
aaa
jae
xchg
daa
adc
loop
xchg
adc
gs
arpl
testl
mov
adc
cmpl
pop
xchg
adc
adc
outsb
cld
xchg
insb
push
enter
or
mov
icebp
jp
and
cmp
mov
xchg
cmpl
aaa
and
call
jbe
jle,pn
lcall
imul
mov
push
ret
in
lods
adc
push
rorl
cmp
lock
push
addr16
add
push
sbb
int3
mov
inc
sub
push
fcoml
outsb
imul
lods
imul
mov
mov
mov
movl
mov
data16
jecxz
and
adc
mov
adc
jmp
jbe
sub
das
je
mov
inc
add
loope
cwtl
aam
push
mov
pop
cmp
xor
into
mulb
xor
jo
or
dec
clc
or
pusha
add
ja
or
je
jb
sub
data16
pop
mov
mov
push
lea
xchg
pop
mov
inc
xchg
mov
scas
les
adc
loop
shlb
pushf
mov
or
lods
fs
lret
dec
pop
add
outsl
cmp
cmp
push
sub
jge
cmp
add
cld
idivl
je
jmp
cmp
cmp
fcomi
fistl
add
cmp
cmp
mov
jmp
mov
mov
mov
jmp
mov
jmp
bndldx
call
dec
jl
push
mov
push
mov
push
mov
jmp
mov
insl
xchg
loop
inc
mov
mov
push
sub
enter
hlt
repz
shll
rcrb
mov
js
pop
adc
je
sub
je
mov
pop
xor
xor
cs
movsb
cmp
push
adc
ret
gs
sar
scas
mov
aam
outsl
sti
cmp
in
push
jge
inc
or
test
fstps
stos
lret
add
xchg
mov
sub
mov
hlt
pop
inc
in
je
push
push
mov
cmp
push
or
fldl
sub
cmp
jle
cltd
or
add
adc
mov
inc
mov
dec
mov
cs
cmp
xor
fnsave
dec
mov
inc
fiadds
andl
adc
xor
ja
sub
inc
in
ja
ret
xor
sub
dec
mov
mov
fstps
cmp
jle
add
inc
mov
repz
push
enter
sti
push
daa
les
mov
mov
inc
rep
popl
ja
mov
shrb
orl
sti
dec
les
cmpl
fwait
lret
std
sub
sub
sub
cmp
pop
pushf
inc
or
mov
dec
and
movsl
adc
popl
add
xor
scas
or
rcll
mov
or
jl
add
sbb
dec
movb
loopne
fnstcw
insl
and
outsb
xlat
mov
rcrb
mov
add
ret
mov
cmc
cltd
not
scas
push
rcll
fildl
push
adc
das
rorl
mov
mov
cmp
loop
xchg
js
fisttpl
fildll
push
shr
dec
movsb
js
ja
xchg
xchg
inc
loope
pop
dec
ljmp
sbb
and
mov
sub
fwait
push
jo
enter
nop
push
mov
jo,pt
test
leave
adc
or
sbb
add
imull
push
sbb
bnd
lret
sbb
push
fadds
in
pop
in
sbb
pop
pop
push
or
or
mov
mov
fcomip
xor
sarl
xorl
aas
lahf
adc
shlb
mov
xchg
mov
adc
call
push
sub
lret
adc
push
dec
inc
adc
and
add
add
xor
inc
lock
test
cmp
add
adc
mov
jl
sahf
fucomp
test
cmpsl
test
add
je
cwtl
cmp
rcrl
push
clc
sbb
mull
je
mov
push
std
sti
popa
pop
jmp
jnp
lds
nop
fisubl
cmc
imul
shrb
xchg
dec
jl
lock
mov
nop
inc
clc
inc
out
pop
xchg
mov
ret
pop
mov
sub
movl
push
or
mov
jne
ja
mov
and
sbb
xlat
lods
pop
push
pop
or
sbb
cs
out
jb
add
ss
cmp
dec
jb
hlt
or
iret
or
dec
lea
jle
push
add
loopne
add
pop
mov
add
adc
pop
mov
scas
clc
out
xchg
sub
dec
leave
cmpsl
int3
push
sbb
push
cmpsl
aas
les
mov
fadds
jle
addb
lahf
mov
call
lahf
icebp
shr
sub
lret
push
mov
pop
jp
cli
js
ljmp
nop
rorl
dec
adc
sbb
add
pop
pop
pop
add
inc
add
pop
pop
jmp
or
jmp
xlat
test
scas
cld
rcrl
push
jmp
mov
pop
aas
cwtl
pop
rclb
lahf
mov
aas
mov
mov
add
jp
call
mov
cmpsl
mov
adc
call
lods
adc
stc
lret
popa
mov
js
adc
pop
je
loop
pop
mov
lcall
mov
add
mov
mov
cmp
fmull
add
ljmp
mov
sti
fldenv
jo
lret
ss
dec
mov
sti
push
push
xor
cwtl
xchg
adc
adc
pop
popa
or
pop
imul
jmp
adc
iret
or
cli
es
jne
push
pop
jae
fwait
bound
ja
in
cmp
pushl
add
dec
jmp
pusha
jae
fldt
pushf
sbb
or
into
call
jmp
add
dec
xchg
add
ja
pop
xchg
pop
lea
loopne
or
sbbb
cmp
add
sbb
push
mov
sub
ja
add
push
shr
call
pop
mov
mov
pop
cmp
jne
dec
je
in
add
push
ja
cs
add
or
loop
or
pop
jmp
fisubl
sub
inc
pop
cmp
jne
push
fisubrs
ss
out
cmp
add
jmp
pusha
jmp
push
adc
xlat
xor
sub
shr
or
cmp
rcll
inc
fistpl
jmp
test
adc
je
push
ds
cmp
fists
push
inc
push
in
cs
dec
int
or
dec
inc
cmp
fwait
sti
adc
jae
mov
aaa
or
pusha
sub
ret
cmp
dec
jl
cmp
jge
sub
xchg
jl
fnstenv
rcll
add
or
xor
jmp
mov
adc
add
xor
movsl
jnp
call
xor
dec
jl
mov
pop
mov
jle
sub
fnstcw
and
stc
mov
repnz
mov
push
push
or
or
inc
mov
inc
jle
iret
xchg
and
pop
lcall
repz
outsl
dec
out
call
mov
jo
push
fsub
insl
jmp
shr
sbb
mov
in
xchg
icebp
jl
icebp
call
pop
jb
sti
xor
call
cmp
push
lret
add
xor
test
xor
mov
pop
jmp
jmp
je
ret
mov
push
push
or
mov
dec
cwtl
xchg
or
push
lcall
scas
adc
xor
and
leave
push
invd
or
clc
out
push
bound
shrb
out
and
jl
pushl
js
inc
or
cmpsb
or
inc
jmp
sub
mov
sub
je
sbb
pop
loop
lock
xor
cs
lds
bswap
sbb
inc
jge
push
loop
andb
iret
repnz
stc
push
jb
out
jmp
mov
and
pop
sub
sbb
jmp
mov
push
or
pop
loopne
mov
jl
adcl
iret
adc
jbe
xor
mov
cltd
pop
push
xor
add
ret
xor
inc
fildl
in
dec
pop
mov
ret
or
xchg
imul
jmp
pop
cwtl
out
rcl
sbb
insb
mov
push
fisubrl
cwtl
flds
cmp
jae
xchg
xor
inc
fldl
xlat
je
or
xchg
das
jg
mov
pushf
jmp
xchg
call
cltd
mov
in
add
nop
xchg
mov
test
or
or
xchg
roll
setl
cmp
add
insb
xchg
adc
les
add
add
mov
inc
test
inc
push
test
idivl
es
cmp
fwait
dec
inc
or
push
icebp
pop
repz
jne
pop
test
adc
or
addl
repnz
mov
push
out
rcrl
call
cmp
cmp
inc
jmp
mov
push
pop
push
jl
push
cld
or
mov
lea
mov
jbe
mov
ret
jmp
jg
lock
call
push
lock
ds
lea
xchg
sub
inc
scas
test
add
inc
lock
cmc
dec
add
mov
mov
pop
lahf
jge
cmp
sub
sarl
adc
jae
ds
cmp
incl
push
and
or
cmpsb
push
and
ljmp
in
call
cmp
imull
movl
dec
popf
mov
movl
cmp
ss
add
fisubrl
cmp
in
shr
or
imul
andl
mov
or
push
icebp
jae
xchg
aam
call
repz
sub
lret
mov
cmp
cmpsb
sub
data16
pop
inc
add
test
mov
and
arpl
call
nop
out
adc
psubsb
pop
mov
mov
pop
sbb
stos
pop
pop
push
push
push
xchg
inc
push
dec
dec
sub
inc
call
sub
jp
lock
arpl
push
ljmp
vpsubsb
ss
mov
or
pop
sub
add
push
call
jns
data16
and
adc
aaa
lods
inc
mov
sub
insb
lea
dec
data16
mov
cmp
out
sub
xor
or
dec
push
adc
leave
jne
sub
add
mov
jle
mov
pop
idiv
pop
add
mov
out
mov
test
or
push
sub
add
loopne
add
add
lods
adc
test
incl
fucomip
iret
inc
sbb
push
sbb
xchg
pop
xchg
sbb
das
mov
sbb
pop
and
mov
xchg
push
sub
inc
push
fs
pusha
push
sub
push
fs
pusha
jecxz
xor
pusha
subl
ror
orl
mov
orl
lods
test
or
enter
cwtl
or
enter
mov
enter
test
jl
je
xor
jle
ja
xchg
test
mov
fs
xchg
xchg
inc
in
fsubl
addl
or
enter
addr16
fs
push
mov
mov
ljmp
and
cmc
insb
cld
aas
xor
and
shlb
mov
or
and
rorl
rorl
ret
stos
xchg
ret
mov
adc
or
xor
sbb
pop
adc
sarb
movsb
sub
mov
rcrl
das
stos
shl
or
sbb
sahf
stc
mov
adc
jbe
push
lret
pushf
nop
add
add
add
mov
mov
add
pop
fcoms
kmovb
je
push
xor
xchg
dec
dec
and
test
xor
push
pop
ja
push
fcompl
sbb
cwtl
dec
push
sti
shl
or
adc
add
cmc
add
jne
inc
cli
outsl
mov
int
pop
jbe
mov
and
mov
inc
and
dec
or
adc
out
rcrl
pop
je
jecxz
mov
xchg
mov
lret
push
call
and
sbb
in
icebp
clc
bnd
push
les
push
or
dec
pushf
jl
mov
or
das
icebp
sub
push
and
push
das
mov
stc
stos
jnp
std
xchg
scas
pop
sbb
or
push
mov
call
inc
mov
sbb
and
push
mov
push
mov
sbb
add
sub
push
iret
pushf
cltd
dec
mov
arpl
std
push
jae
inc
scas
cmc
jecxz
xor
and
stc
sub
xchg
std
xor
aas
xchg
inc
xor
xchg
inc
cld
mov
cmp
cwtl
subb
and
js
scas
testl
inc
mov
decl
stc
xor
inc
dec
mov
xor
lahf
dec
dec
and
nop
imul
xchg
jno
std
repz
and
stc
jae
mov
cmpsb
fdivr
xchg
cmp
iret
pop
and
mov
mov
in
add
not
cld
xor
sbb
das
or
mov
sarb
push
mov
mov
mov
xchg
iret
and
cld
pop
adc
imul
sbb
adc
add
and
leave
and
sub
sti
shl
enter
sbb
int
and
dec
xor
push
pop
aaa
ret
psubw
out
sub
sti
cmp
iret
and
sti
jb
aas
xchg
push
add
sti
xchg
inc
sbb
clc
mov
sbb
addr16
add
pusha
dec
mov
dec
sub
and
push
pop
mov
or
divb
stos
inc
sti
and
mov
popf
insl
push
dec
push
stc
lret
push
pop
push
push
push
cmp
lahf
and
movsb
repz
sub
in
jg
iret
fimuls
fsqrt
push
and
jns
dec
mov
jo
xchg
cmp
mov
push
jle
cld
cltd
fs
sub
ljmp
test
out
aam
jg
cmp
add
stc
jae
cmp
rcl
fstps
dec
in
add
nop
aas
dec
pop
inc
clc
jl
pop
call
sbb
gs
lods
int
push
ror
xor
and
hlt
ret
push
repnz
inc
cmp
push
int3
stc
leave
popa
jg
punpckhbw
mov
fmul
xor
push
xchg
inc
pop
dec
ret
pop
pop
gs
or
sub
popa
inc
cltd
in
aas
jge
out
incl
iret
and
test
es
jle
outsl
adc
out
cld
cmp
and
clc
xor
inc
add
push
mov
lahf
dec
push
sar
cmpb
and
cmp
cmp
mov
rcl
sub
enter
xchg
roll
pop
jns
rcll
add
push
add
or
or
inc
or
ffree
mov
pop
or
cli
stos
int
insl
shrb
push
or
fdivrl
xor
sbb
pop
rorb
mov
fwait
call
ljmp
rcll
aas
xadd
add
push
adc
add
out
mov
jbe
incl
pminsw
fdivrs
fbstp
lea
push
sbb
lea
pop
inc
stos
sbb
repnz
or
jg
fstpl
clc
jnp
lea
cmp
ja
test
pop
cmp
sbb
iret
sub
out
adc
rclb
and
pop
adc
mov
incl
mov
hlt
incb
mov
or
pop
je
mov
lret
xchg
inc
xor
or
or
aaa
repz
jge
mov
incb
outsb
das
movsb
push
mov
movsb
push
push
sub
jnp
or
jle
push
dec
sti
dec
aam
and
xchg
push
fistps
jl
jmp
call
add
jl
cmp
pop
dec
dec
pusha
outsl
das
cld
call
sub
mov
mov
in
dec
in
add
jge
movsl
add
jl
ljmp
test
sub
jne
pushl
dec
cmc
push
or
jecxz
push
addl
jnp
pusha
je
in
sbb
sbb
insl
andl
idivl
repz
mov
mov
push
pop
addb
dec
mov
out
push
loope
pop
xchg
xchg
mov
pop
in
loopne
pushf
loope
leave
pop
dec
push
in
sbb
push
fs
or
xor
pop
inc
lock
push
enter
xchg
dec
jo
dec
mov
xchg
jl
loope
inc
sub
or
movsl
les
call
decb
mov
mov
lock
cmp
and
cmpsb
dec
mov
push
jl
mov
pop
add
mov
push
and
je
mov
pop
and
push
mov
outsl
jne
sbb
adc
mov
mov
inc
arpl
inc
inc
mov
xor
in
movl
ficompl
jle
fstpt
rcll
stc
sub
rolb
push
xchg
cltd
data16
flds
insl
in
sub
mov
push
xchg
sbb
shr
and
icebp
je
mov
cwtl
push
inc
loope
fimuls
popf
lcall
hlt
int
sub
test
and
lahf
inc
adc
flds
and
mov
arpl
fiaddl
pop
mov
jecxz
shr
or
add
add
lret
xor
loopne
lea
cwtl
add
and
adc
jb
ja
xchg
fsubs
popa
mov
push
push
pop
and
lods
xchg
or
cmp
push
mov
xlat
xchg
pushf
xor
push
stos
add
fisttps
jl
inc
mov
add
out
leave
fldcw
pop
xor
pop
outsl
mov
mov
adc
or
mov
push
adc
add
fwait
sub
mov
movsl
test
lock
andb
into
scas
in
cmp
sbb
clc
cld
push
cmc
cld
or
and
push
mov
rorb
push
add
outsl
into
loopne
push
rorl
add
shll
repz
aaa
pop
in
es
inc
out
mov
add
mov
jl
xchg
dec
cld
jb
icebp
mov
dec
sbb
push
in
icebp
inc
jbe
test
inc
repnz
mov
jae
jno
or
dec
out
and
or
hlt
call
pop
xchg
fistl
out
add
adc
loop
out
cmpl
push
inc
dec
jne
mov
jge
xchg
fsub
nop
daa
dec
inc
sub
in
mov
cltd
js
and
negb
js
adc
shll
leave
xor
out
dec
dec
comiss
insb
jg
push
add
and
xor
fwait
sbb
clc
leave
mov
pushf
push
lock
sbb
cmp
sbb
and
repnz
repz
mov
pop
imul
push
sbbb
hlt
sti
cmp
sbb
jge
cs
aas
xor
mov
inc
cmp
cmp
adc
mov
lods
jmp
push
mov
test
test
mov
jg
sub
mov
fstps
lret
in
and
call
adc
lcall
cmc
adc
outsl
pop
dec
inc
adc
mov
ljmp
lret
or
or
fildl
inc
jo
adc
in
je
jnp
in
outsl
int
ror
mov
inc
inc
dec
jnp
or
push
mov
adc
js
xchg
or
enter
pusha
push
aas
inc
sub
hlt
xlat
lret
dec
jmp
xor
fiadds
imulb
dec
hlt
subl
lcall
push
flds
dec
les
mov
into
sti
add
mov
lret
mov
xchg
shlb
pop
jl
xor
mov
pop
dec
out
sub
push
fnstcw
or
leave
das
xchg
mov
add
and
fdivs
bswap
or
jae
clc
xchg
addr16
clc
std
loopne
or
push
gs
or
fsubr
pusha
mov
test
iret
clc
mov
loop
pop
jb
scas
call
pop
lds
adc
or
jmp
in
mov
sbb
adc
sbb
pop
outsb
lods
cld
jl
xor
jae
mov
adc
popa
test
mov
div
or
dec
sti
pop
fadds
fidivrs
push
push
sahf
sub
sar
dec
pop
sub
jle
xchg
sarb
xchg
adc
aam
add
jp
mov
ss
adc
sbb
push
adc
rclb
mov
fnstenv
or
sbb
je
out
and
pop
cmp
inc
jg
adc
and
jne
jmp
mov
add
jne
inc
and
pop
pop
mov
inc
push
das
xchg
jle
or
shll
jl
xorl
add
mov
push
fstp
insl
pop
clc
xor
shrl
int
mov
ret
inc
pop
andl
jb
add
lahf
fisubs
dec
bound
notb
xchg
xor
jb
popl
adc
mov
enter
call
jmp
cmp
jb
cmp
ja
sbb
stc
out
ss
sbb
sbb
ja
cltd
insb
adcl
sti
mov
test
jge
fmul
stos
xor
aaa
mov
mov
add
jp
xor
sbb
fisttps
leave
mov
mov
fmul
fnsave
sar
sti
roll
dec
push
cmp
add
inc
flds
pop
add
or
xchg
testb
cmp
mov
adc
mov
add
stc
cmp
rcrl
add
add
in
pop
in
inc
cs
pop
mov
jg
adc
jno
ja
sub
ljmp
daa
cmp
push
jns
data16
push
jle
add
aas
sub
insb
xor
cmp
outsl
cmp
bound
xor
xor
jg
repnz
cmp
outsl
xor
push
jp
jg
mov
sti
xor
cmp
add
push
add
pushl
popa
outsl
jae
sub
jno
dec
mov
in
outsl
jl
jl
jns
jne
ds
jge
pop
fs
jno
sub
jp
fs
xchg
push
xchg
loopne
mov
les
pushf
jecxz
mov
call
bound
movb
add
or
lods
jmp
shr
add
repz
sub
inc
jo
pop
jmp
jbe
or
ret
insl
int
gs
dec
adc
clc
xor
sbb
inc
dec
cmp
fst
add
sbbl
xchg
or
in
pop
int
sti
je
stos
lea
in
aaa
jp
std
mov
call
mov
push
xor
add
fcompl
mov
pushf
mov
fwait
mov
or
or
andb
inc
call
lods
dec
int
shr
das
mov
xchg
je
sbbl
mov
xchg
mov
add
inc
lock
ja
outsl
or
jb
jb
insl
cmc
imul
push
pusha
enter
lods
push
cs
sarl
dec
movsl
or
call
dec
pop
cli
inc
sbb
xchg
push
sbb
jmp
dec
mov
xor
lea
push
cld
fistl
cli
data16
mov
add
sub
fcoms
cmpb
pop
loope
push
in
into
jne
push
jne
sahf
sub
push
fdivr
lahf
popa
addr16
pop
sub
xlat
dec
jnp
xor
xor
ljmp
push
pop
or
pusha
dec
dec
push
mov
or
adc
lds
inc
jne
movsb
jg
mov
call
adc
scas
fdivs
aas
inc
or
rorb
jo
or
inc
shlb
mov
push
scas
push
jo
fldenv
jle
and
sbb
xorb
sar
pop
sbb
mov
and
sbb
aaa
ret
lea
or
arpl
out
push
call
adc
scas
mov
test
ret
or
mov
push
lret
pop
xor
inc
or
or
cmp
lret
sub
pop
test
out
aaa
insb
mov
fsubl
cmp
mov
repz
mov
inc
inc
adc
jne
repz
mov
jno
pop
xorb
jno
mov
inc
shr
jae
ljmp
dec
jmp
mov
and
push
push
call
sbb
inc
imul
mov
mov
xor
fdivp
add
mov
aas
mov
inc
cli
mov
pusha
pop
scas
cmp
and
pop
push
add
shlb
push
daa
mov
or
loope
adc
mov
sub
xchg
pusha
aas
and
push
jb
and
rcrb
lret
outsl
data16
mov
dec
imul
inc
or
ja
sub
adcl
gs
icebp
mov
in
jg
inc
jo
and
je
sbb
pop
push
dec
dec
push
inc
cs
inc
mov
push
add
das
aam
pop
push
pop
sub
lods
inc
inc
jl
add
loop
and
mov
std
ds
sbb
loope
jno
mov
pop
rcrb
adc
add
add
mov
inc
jle
pop
bound
shll
cmp
hlt
or
cmp
call
in
mov
inc
scas
fcomip
lret
loopne
or
mov
rclb
mov
in
push
pop
add
add
cwtl
sub
outsb
inc
mov
push
out
push
jg
push
adc
mov
aad
lock
fiadds
push
jnp
lea
clc
or
fnsave
or
ret
and
add
add
jne
sahf
and
iret
rcl
xor
cld
cmp
jecxz
rcrb
orl
adc
lret
imul
int
clc
bound
pusha
lods
cmp
arpl
sbb
pop
sbb
inc
mov
inc
pminsw
pop
sbb
cmc
fldt
fistpll
mov
inc
push
call
stos
push
or
mov
lcall
pop
cmpsl
arpl
sub
lcall
xchg
jae
leave
xchg
cld
add
idivl
and
push
adc
stc
int3
data16
add
sub
popf
xor
push
push
sub
inc
adc
cmp
js
jne
pop
mov
pop
add
aaa
in
loopne
aad
dec
lock
in
mov
roll
call
xor
in
jbe,pt
dec
shrb
call
sbb
ret
iret
or
cmp
bound
out
lret
mov
mov
dec
dec
dec
jne
pop
js
xchg
jl
mov
data16
addr16
push
addr16
sbb
lahf
es
loope
jnp
and
out
xchg
sbb
aam
and
loopw
icebp
push
and
and
lahf
out
rcl
scas
aam
inc
es
loop
sbb
sbb
pushf
sbb
xchg
fcompl
mov
in
cltd
in
insb
sbb
xchg
xchg
out
lea
adc
cwtl
push
sahf
cmpsl
stc
or
imul
xchg
lcall
rorl
and
jns
fcomip
sbb
adc
xchg
xor
ss
sbb
push
jns
dec
adc
adc
xlat
addr16
call
out
fstl
notb
imul
xchg
or
mov
test
testb
or
dec
imull
iret
inc
sarb
mov
insb
pop
add
add
xor
imul
sbb
sub
add
out
nop
add
add
std
daa
ds
push
cld
std
js
shlb
unpckhps
dec
ret
imul
sahf
and
idivl
ja
in
aam
or
dec
lahf
out
xlat
in
and
cld
adc
clc
jo
fnstcw
clc
cwtl
roll
vpaddusb
idivl
mov
mov
mov
in
in
dec
bnd
cmc
in
or
ret
data16
not
push
lock
push
pusha
in
fimull
add
add
lret
dec
cs
jnp
call
cli
cmp
scas
iret
call
xchg
and
mov
scas
xor
mov
mov
mov
in
xchg
fsubrp
sbb
xchg
pushl
out
adc
mov
loopne
fcmovne
xchg
loope
sub
in
clc
push
mov
cwtl
inc
dec
dec
push
pop
xorl
push
bound
and
dec
jne
out
ljmp
add
cmc
repz
es
lods
xchg
sbb
rclb
insl
jbe
jmp
mov
dec
sarl
je,pt
loopne
int
sti
int3
pop
in
pop
cwtl
add
or
repnz
mov
popa
add
insl
pop
jbe
imul
fstpt
jae
or
push
push
insb
insl
outsl
outsb
insb
icebp
push
add
arpl
inc
cmpb
inc
fsubrl
imul
pop
pop
push
outsl
mov
jo
das
das
ja
vpsubusb
xor
xor
arpl
das
jg
inc
fs
scas
push
mov
cs
or
inc
adc
pop
push
push
pop
push
mov
dec
add
test
test
push
test
mov
lock
popa
ret
xchg
push
xchg
in
mov
mov
push
push
ja
outsl
lret
call
sbb
push
adc
push
testb
and
mov
dec
add
data16
insl
movsl
movsl
icebp
jo
push
add
sub
stc
pusha
inc
invd
rcll
or
xorl
icebp
cwtl
jae
int3
cmp
xchg
pushf
insb
into
mov
iret
xor
pop
sbb
call
fldt
sbb
xlat
or
call
aam
lock
cmc
fucom
jae
fwait
and
in
mov
jae
xchg
daa
pop
or
sbb
lahf
out
icebp
sbb
je
lret
sbb
int
call
repz
adc
icebp
adc
int
repnz
es
mov
daa
lock
sbb
testb
sub
repz
sbb
sahf
int3
add
ds
enter
sbb
mov
add
and
mov
fwait
iret
and
mov
sahf
or
ja
lret
cmp
xchg
clc
cld
push
idiv
add
xchg
out
jo
xchg
in
add
int
subb
mov
loopne
ss
and
mov
loopne
pop
imul
int
mov
sahf
mov
inc
mov
das
int3
adc
and
aad
sti
jle
inc
je
sub
aam
in
leave
mov
out
out
in
lock
adc
mov
cs
in
or
fmuls
cmpl
add
nop
call
daa
jns
mov
cld
sahf
lret
dec
jb
inc
nop
lret
nop
cwtl
cmp
sahf
addr16
inc
in
in
imul
jbe
pop
aaa
es
sahf
xchg
out
loopne
inc
loopne
fbld
jne
aam
fsubrl
pop
iret
enter
adc
add
test
cmp
aam
lahf
out
and
fcomp
enter
lret
cmp
stos
shrl
jl
aaa
pop
sbb
out
aam
in
lock
dec
repnz
sbb
xchg
sbb
call
shr
jnp
shrb
cmpsl
out
fisttpl
idivb
insl
enter
in
enter
out
int3
es
int3
shl
sbb
jns
rol
in
jns
iret
enter
jecxz
mov
mov
xchg
cmp
xor
mov
sbb
mov
jns
out
repz
push
lock
repz
xchg
xchg
out
mov
mov
sahf
pushf
inc
ret
or
shlb
mov
sub
cmp
loopne
nop
iret
xor
std
fs
sub
fistl
outsl
adc
bnd
ja
adc
out
xor
jl
xchg
mov
sahf
in
cmpl
dec
jo
ja
out
das
repnz
or
jne
in
fwait
test
sbb
inc
sahf
addr16
je
pop
movsb
add
pop
movsb
mov
cmc
mov
out
sar
rcl
fistpl
out
and
mov
call
fs
aad
fs
pop
repnz
call
mov
repz
ljmp
dec
sahf
xchg
frstor
push
aaa
sarb
jae
daa
jae
mov
leave
repz
sbbl
pop
push
repz
mov
inc
jne
in
mov
enter
addr16
add
mov
sahf
int
dec
xor
iret
in
les
inc
jns
xchg
xchg
jle
dec
dec
add
dec
repnz
push
call
inc
into
jmp
nop
addr16
jae
pop
cmp
cmp
pop
cltd
les
mov
into
testl
in
xchg
add
pop
or
imul
inc
loopne
fsin
push
adcb
adc
or
leave
enter
bnd
scas
pop
xor
jl
cmp
ret
insb
xor
lds
repz
sbb
enter
mov
ljmp
dec
xor
hlt
gs
ss
mov
xor
sbb
jae
fs
push
ja
leave
push
inc
lret
mov
mov
gs
adc
jbe
rcll
aad
insb
gs
lods
dec
test
cmp
cmp
mov
jbe
in
ret
imul
push
xchg
mov
sub
mov
sbb
ja
outsb
mov
push
psubusw
xchg
das
jae
jne
jo
bound
pop
pop
nop
pop
js
insl
pop
cmp
cmp
add
jbe
push
shrl
arpl
cli
add
imul
imul
push
std
sub
mov
int3
out
inc
pop
call
stos
shll
push
pop
jbe
jns
scas
sbb
adc
ret
mov
mov
sub
and
popf
out
mov
inc
in
call
mov
es
call
push
xor
sbb
rorb
sahf
mov
push
call
mov
ret
aaa
sbb
in
loopne
adc
ret
icebp
jns
outsl
push
cld
orb
pushf
outsl
nop
or
lret
adc
cmpl
inc
imul
inc
lret
xor
mov
xchg
inc
sti
ja
xor
mov
lret
xchg
daa
fwait
dec
mov
test
lea
inc
jecxz
loopne
enter
in
loopne
pusha
jns
loopne
push
or
mov
pop
and
ljmp
mov
inc
cs
lret
call
add
xor
xchg
cmp
cmp
cmp
call
mov
adc
roll
sbb
push
repnz
shr
imul
xor
imul
inc
adcb
daa
cwtl
int
js
mov
hlt
inc
outsb
pop
push
jo
lahf
jno
js
mov
insb
mov
rorb
out
aaa
xor
xchg
daa
lcall
rdmsr
adc
xor
inc
xor
inc
inc
inc
inc
xor
outsl
mov
aaa
inc
inc
sub
inc
cmp
aaa
inc
inc
xor
inc
xor
mov
div
cmp
aaa
xor
xor
inc
inc
cmp
jb
mov
cmp
jae
sti
jae
popa
insb
mov
shrb
ja
adc
xchg
loopne
mov
xor
jle
add
mov
pop
mov
pop
inc
push
inc
inc
lret
and
pop
imul
adc
pop
sub
adc
jge
mov
inc
inc
inc
cmp
xor
pop
mov
inc
inc
inc
xor
cmp
push
xor
pop
cmp
inc
cmp
lods
fstl
xor
push
es
gs
jge
mov
leave
push
add
imul
sbb
js
cmpsl
sbb
repz
fadd
call
int
mov
add
inc
dec
xchg
adc
cmp
add
jbe
and
xor
mov
enter
sbb
mov
in
jecxz
sub
fwait
jl
mov
add
aam
jl
sub
push
mov
xchg
xor
lods
testl
jl
and
jnp
mov
gs
inc
mov
data16
imul
and
xor
push
push
sbb
jo
xor
fsubrs
xchg
inc
mov
pop
mov
xor
xor
push
or
push
loopne
aaa
test
or
inc
ljmp
inc
cmp
push
dec
xor
xor
pusha
in
fcomip
or
jg
popa
imul
dec
das
push
arpl
xor
fwait
cmc
mov
adc
jmp
or
std
mov
out
lock
in
repz
call
rorl
lock
mov
out
jl
mov
or
mov
xlat
sub
inc
add
inc
mov
xor
pop
lcall
rclb
inc
rcrb
jge
sti
int3
enter
pop
jle
loop
test
pop
push
lahf
enter
rorl
xchg
pop
enter
pop
jae
les
in
jns
out
vmwrite
pusha
push
ret
sbbb
ret
loopne
sub
xlat
mov
mov
aad
or
xor
mov
cltd
mov
pop
add
pop
add
pop
outsb
pop
movsb
push
adc
mov
lret
int3
enter
out
dec
enter
fcomp
fxch
loopne
jecxz
in
das
inc
jb
outsl
ss
xchg
and
gs
cmp
mov
popa
je
xor
xor
xor
xor
in
iret
mov
or
lcall
add
mov
jnp
bound
jg
imul
adc
add
xor
and
adc
add
adc
incl
das
daa
pop
pop
sysret
cmp
sub
sbb
in
cmp
ljmp
and
adc
add
sub
sbb
or
ds
push
push
push
daa
pop
das
getsec
pop
aas
pop
es
ljmp
push
ss
ds
and
adc
sub
xor
cmp
and
sub
xor
cmp
and
lock
ljmp
or
adc
sbb
add
or
adc
sbb
imul
pop
xor
gs
add
add
xor
addb
xor
or
or
dec
rorl
xor
xor
adc
adc
shlb
sbb
sbb
add
mov
push
adc
or
bound
push
mov
push
dec
pop
pop
or
adc
sbb
add
add
pop
jo
or
add
push
or
or
adc
jg
or
push
or
or
pop
and
pop
lock
or
add
add
or
lods
insl
lods
or
pop
xor
add
mov
fildl
divps
or
or
push
pop
or
arpl
insl
mov
add
or
add
push
push
pop
outsb
insl
fldt
push
or
aas
adc
outsl
lods
mov
imul
sbb
mov
pop
sbbl
or
lahf
or
jne
mov
femms
add
pop
or
test
pop
adc
insb
pop
inc
pop
das
add
test
inc
pop
mov
pop
jae
scas
cs
push
mov
fsubrl
cs
xor
mov
int3
or
push
or
cs
lret
addr16
add
pop
imul
and
lods
cmp
movl
add
fdivs
mov
int
adc
sub
mov
fldt
aas
push
pcmpeqd
add
shrl
imul
sbb
xchg
add
and
add
fistpl
fisttpl
mov
jne
push
sub
cmp
divl
or
or
or
mov
or
or
add
popa
das
add
or
add
scas
mov
mov
or
adc
outsl
movsb
and
inc
and
jae
cld
xor
pop
xchg
ret
insl
sbb
push
adc
sbb
mov
ljmp
xor
and
ss
das
sub
es
and
pop
add
add
or
and
xor
add
and
mov
or
mov
ljmp
mov
and
nop
xor
mov
pop
push
dec
xor
je
cmpsb
enter
and
in
shll
in
mov
pop
dec
shll
movsb
mov
int3
fdivp
add
adc
xor
roll
and
cmp
dec
shll
mov
mov
fsubl
movsb
int
out
pushf
add
pcmpgtb
dec
xlat
je
orb
xor
mov
adc
imul
cmpsb
imul
imul
pop
ja
imul
pop
je
mov
dec
shll
lods
ret
mov
inc
or
cmc
inc
add
test
ljmp
mov
add
sbb
adc
in
pop
mov
xor
imul
gs
inc
insb
fldt
mov
sbb
or
pop
xor
notb
lcall
ss
push
je
arpl
insb
fsubrs
outsl
inc
adc
mov
popa
jae
test
rcr
imul
popa
outsb
inc
sub
nop
push
cmc
js
mov
mov
popf
ljmp
xlat
outsb
divl
or
jo
sbb
scas
jl
and
and
pusha
mov
adc
dec
data16
push
je
inc
fs
imul
push
les
fwait
lods
push
test
aad
stc
bound
fs
imul
xor
data16
push
jns
inc
push
lcall
dec
cmp
xchg
mov
xor
outsl
jecxz
outsl
in
ja
cmp
popa
addr16
outsl
js
lea
jo
fcmovnu
mov
sub
jns,pt
cmp
movb
dec
loopne
inc
adc
outsb
adc
out
sub
cmp
inc
inc
add
sbb
push
or
jb
dec
jne
imul
jns
mov
shrl
inc
xor
and
jbe
push
shlb
mov
lods
test
push
outsl
push
adc
push
inc
fs
adc
insb
dec
pusha
outsl
je
outsb
addr16
sbb
add
or
shll
push
ret
inc
or
pop
leave
movsl
inc
daa
adc
int
xchg
movsb
stc
sbb
js
data16
dec
add
cli
and
sar
push
outsl
jo
popa
or
imul
adc
test
imul
outsb
adc
xchg
nop
in
xor
dec
adc
test
mov
inc
push
rolb
jne
pop
nop
bound
add
and
dec
xor
push
add
test
fnstcw
add
or
adc
sbb
and
sub
xor
cmp
inc
xor
push
xor
lcall
bound
push
jb
jp
xorb
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
pop
add
inc
xor
xor
xor
xor
xor
xor
xor
test
mov
dec
aaa
aad
fnsave
out
icebp
aaa
sti
aaa
adc
pop
cmp
dec
cmp
pop
cmp
cmp
cmpb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
pop
cmp
cmp
cmp
cmp
pop
cmp
mov
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
ret
ds
inc
ds
ds
ds
ds
xlat
jecxz,pt
jmp
push
aas
dec
aas
bound
aas
mov
xchg
aas
movsl
aas
lods
aas
mov
mov
aas
into
aas
loope
ljmp
fdivl
push
xor
xor
inc
xor
pop
or
xor
jl
test
fwait
adc
fidivl
repnz
mov
xor
xor
xor
xor
xor
xor
decl
push
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
xor
push
xor
xor
xor
xor
xor
xor
xor
xor
dec
xor
push
aaa
lcall
bound
xor
inc
cmp
lret
cmp
xor
mov
cmp
cmp
cmp
out
inc
cmp
cmp
cmp
cmp
jne
mov
aam
loop
push
xor
std
ljmp
push
ds
outsl
ds
ds
ds
pop
aas
adc
inc
aas
dec
aas
outsb
aas
mov
push
ljmp
xor
jb
xchg
xor
xor
ljmp
xor
xor
mov
les
out
jmp
cli
xor
xor
adc
sbb
xor
xor
push
jno
mov
xchg
xchg
call
lret
xor
xor
xor
xor
sub
xor
xor
xor
xor
xor
xor
pushl
xor
xor
xor
xor
xchg
add
pop
cmp
cmp
xchg
cmp
cmp
inc
ds
ds
bound
jns
mov
xchg
ds
mov
or
mov
mov
ds
ds
cmp
push
mov
jg
aas
pop
aas
lretw
jbe
jle
xchg
scas
aas
fdivrs
repz
std
aad
aas
mov
lods
sbb
and
dec
xor
pop
xor
xor
pushl
mov
shll
xor
xor
xor
xor
xor
mov
fnsave
push
jp
xorb
xor
xor
xor
xor
xor
xor
or
loop
ljmp
xor
xor
xlat
dec
decl
bound
push
jb
xorb
xor
xor
xor
xor
xor
std
pushl
xor
xor
xor
cmp
in
cmp
jae
jg
mov
loope
aad
inc
aas
fidivrs
xchg
fists
jge
adc
xor
add
das
aaa
ud0
cmp
out
cmc
test
iret
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
xlat
cmp
dec
aas
fiaddl
test
pop
idiv
sub
xor
xor
or
sbb
mov
mov
jg
xor
xor
xor
xor
xor
xor
xor
xor
jg
or
xor
xor
xor
xor
xor
xor
pushl
lret
xor
cmp
ss
or
and
es
gs
movsb
aaa
mov
aaa
call
cmp
mov
loope
jbe
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
pop
cmp
cmp
cmp
cmp
cmp
cmp
cmp
fcomip
cmp
cmp
xchg
bound
test
iret
cmp
aaa
ds
ds
jle,pt
add
ds
sbb
cmp
fnstsw
xchg
aas
movsb
data16
test
adc
xor
xor
jae
or
mov
shlb
xor
mov
xor
pushl
push
xor
xor
xor
insl
xor
js
mov
mov
xor
pop
xor
xor
out
dec
xor
pop
fistl
pop
imul
and
ss
ss
lcall
mov
int
cmc
or
and
inc
aaa
push
aaa
pop
aaa
jge
xchg
aaa
cwtl
aaa
scas
aaa
into
aaa
jmp
aaa
jmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
dec
cmp
pop
cmp
lcall
push
cmp
in
add
pop
cmp
cmp
push
cmp
jbe
adcb
lret
cmp
cmp
cmp
cmp
xlat
inc
jecxz
adc
cmp
adc
sbb
in
cmp
xor
cmp
inc
cmp
push
loope
cmp
movsb
cmp
cld
push
mov
xor
movsb
xor
je
adc
in
xor
xor
pop
dec
cmp
lea
adc
sti
adcb
adc
imul
push
pop
pop
lods
in
aaa
dec
push
int
shl
inc
roll
add
mov
or
adc
dec
inc
xor
ret
mov
out
jmp
decl
ret
mov
pop
fwait
cmp
insl
js
addl
xor
test
sbbl
or
inc
inc
push
add
popf
insb
out
mov
xor
xor
aas
or
daa
adc
test
lds
imul
sti
sub
arpl
mov
add
add
jno
adc
add
aas
insl
outsl
pop
sbb
call
aaa
and
dec
outsl
fs
pop
xor
in
popa
dec
cmp
add
fiaddl
add
fcomps
sub
test
xor
dec
gs
push
clc
popa
vpmacssww
mov
insl
or
push
push
shll
xchg
js
add
imul
arpl
jne
mov
ss
push
mov
mov
add
cwtl
pushf
cmp
aaa
outsl
bndmov
popa
or
dec
outsb
dec
les
add
lods
sbb
ret
and
xor
popf
mov
mov
add
imul
or
int3
js
jb
inc
sbb
lods
dec
fildl
repnz
ret
cmp
jae
sub
aas
xor
popa
add
clc
add
imul
insl
inc
js
xor
push
and
jl
or
or
mov
inc
jns
sti
lods
jne
ja
je
inc
push
inc
dec
test
fs
push
inc
jb
and
fdivs
inc
add
mov
xlat
or
rolb
xchg
imul
add
cmp
pop
arpl
data16
iret
aam
mov
xchg
je
dec
jo
je
ret
outsb
or
mov
or
or
xlat
xchg
mov
mov
mov
imul
push
jle
mov
data16
jae
arpl
outsb
sbb
inc
out
or
jo
jmp
jne
sbb
add
sbb
dec
or
ret
jl
ret
shll
pop
push
popf
jae
xor
imul
test
fwait
leave
jg
adc
xor
and
aas
sidtl
add
ret
xchg
and
cmp
jbe
xor
push
xor
insb
jne
and
pop
or
repnz
pusha
mov
and
push
je,pn
mov
in
or
shrl
pop
bound
sti
and
cs
insb
mov
es
add
and
in
mov
jmp
xchg
xor
push
dec
mov
inc
mov
push
in
or
add
push
dec
add
add
add
add
add
add
call
int
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
popa
jmp
