sbbl
xor
dec
call
fdivr
add
xor
xlat
lds
test
inc
mov
adc
lret
mov
mov
cld
loope
ret
mov
push
test
inc
cld
push
imul
incl
in
frndint
in
pusha
xchg
gs
jecxz
iret
shr
aaa
mov
lea
add
xchg
xchg
lock
or
rclb
lods
lcall
lea
cwtl
lcall
mov
frstor
fimull
add
cltd
xchg
xchg
lcall
xchg
xchg
sahf
xchg
fwait
call
call
mov
int
rcrl
jg
adc
cmpsl
lcall
lock
adc
dec
lock
fwait
fwait
testl
xchg
into
lret
hlt
mov
es
lret
je
jle
movsb
sub
and
idivl
jg
and
adc
pop
test
je
sub
pushl
cmp
scas
lods
cmp
mov
xor
lea
lcall
shll
xor
xor
xchg
xor
xor
das
hlt
cs
cld
sub
xchg
and
sub
sub
daa
mov
sub
enter
scas
cld
push
mov
dec
adc
sbb
sbb
mov
cld
sbb
xchg
adc
lret
fcoms
call
lock
mov
or
in
cld
or
pop
add
leave
push
mov
add
add
jg
jmp
add
jl
cld
pop
xor
subl
das
out
paddusw
or
add
pop
les
mov
test
je
adc
je
idivl
repnz
and
mov
int3
aas
adc
jb
addr16
cmp
xlat
stos
scas
and
or
test
ljmp
inc
ljmp
dec
in
jae
jmp
mov
icebp
repz
out
xor
pop
xor
add
sub
mov
mov
je
aas
bnd
cmp
dec
or
test
add
bound
and
sti
xchg
mov
xlat
dec
in
mull
test
cli
inc
or
mov
test
loop
add
testl
sar
cld
xchg
mov
daa
mov
out
icebp
test
inc
cwtl
cmp
and
ja
int3
and
or
loop
out
fbld
repz
pop
les
dec
xchg
aam
cld
xchg
movsb
mov
inc
bound
jb
scas
repz
jmp
inc
xchg
or
out
fdivrs
cmpsl
in
mov
out
dec
xchg
inc
mov
shl
jl
mov
xor
leave
cmpsl
push
dec
scas
scas
push
je
adc
scas
mov
xchg
mov
pushf
movsb
pop
xchg
es
les
adc
lds
fsubr
pop
scas
mov
xchg
mov
ljmp
xchg
ds
push
pop
xchg
jg
lret
lock
iret
je
repz
adc
cmpsl
mov
jne
mov
testl
or
mov
in
repz
test
mov
or
xchg
hlt
jecxz
adc
iret
jmp
aaa
fistps
dec
mov
jl
out
ss
lahf
add
mov
mov
loop
pushl
icebp
call
sbb
div
push
xchg
sti
cmp
dec
inc
movsb
dec
psubb
repz
push
popf
inc
ljmp
mov
xor
add
inc
out
stc
jne
sub
mov
mov
jmp
cmp
aas
lret
jecxz
fidivrs
stos
sbb
cs
dec
cld
std
mov
and
jl
daa
jl
add
jnp
ljmp
dec
dec
dec
fildl
jb
daa
mov
enter
push
cli
inc
sub
dec
aad
les
scas
fcoms
inc
adc
xchg
out
xlat
inc
mov
test
lock
repz
std
ljmp
pop
js
sbb
jmp
sbb
mov
dec
dec
pushf
cmp
mov
cmp
adc
fildll
out
and
fsubs
dec
stc
out
pop
dec
rolb
mov
movsb
cmpsb
fbld
sti
test
add
test
jae
mov
mov
addb
test
jb
mov
pop
adc
rcl
out
aas
inc
out
jb
push
repnz
push
or
cltd
push
inc
xor
lods
push
xchg
or
jo
xchg
std
xchg
jne
cld
clc
lret
xchg
fwait
adc
test
xlat
js
and
inc
jecxz
les
test
adc
cmp
xor
mov
ljmp
push
sub
les
cwtl
xlat
cli
je
in
jnp
out
test
testl
iret
andl
daa
and
inc
cmpsb
push
push
add
int3
sub
cmp
stc
add
add
fimuls
stc
sahf
std
iret
cld
mov
lret
mov
sti
mov
mov
cltd
clc
idiv
mov
decb
dec
lret
xchg
cmc
mov
pop
mov
jns
push
cmpsb
mov
jp
or
dec
cli
hlt
adc
incl
enter
ljmp
pop
imul
xchg
or
sbb
sti
pop
sbb
shl
icebp
jns
mov
rcll
cli
js
sub
mov
xor
xor
sub
xor
shll
pushf
sahf
and
xor
nop
das
xchg
ja
cs
shrl
add
inc
cli
add
in
inc
xorl
ljmp
mov
add
mov
add
adcl
ret
mov
repnz
clc
cmp
inc
jnp
lea
pushf
cmp
lock
adc
cmpl
push
xor
gs
out
inc
fwait
pop
add
daa
pop
cmpsb
sub
sub
sub
nop
nop
push
mov
sub
test
add
clc
add
dec
add
pop
ljmp
testb
or
outsl
mov
test
sub
in
aas
sub
std
push
ss
jb
xchg
cmp
xchg
fs
xchg
or
fldt
xlat
push
xchg
icebp
dec
or
pop
xchg
fs
fwait
bound
mov
and
mov
mov
dec
ss
hlt
xchg
inc
cmpb
hlt
dec
mov
push
mov
push
cmp
jmp
jns
add
dec
sub
in
mov
leave
push
aas
hlt
cmp
inc
cmp
arpl
cmp
stc
push
mov
add
push
leave
jl
inc
or
imul
popf
shl
xchg
cld
ret
lea
or
xchg
fstps
push
sbb
popf
inc
push
jb
mov
jnp
stc
pop
inc
scas
repnz
into
and
test
in
lods
fadd
xchg
push
pop
test
dec
sbbl
lds
push
pop
xor
lahf
dec
pop
push
jp
lcall
hlt
adc
adc
movhps
add
mov
ret
cltd
repz
lea
pop
loopne
pop
or
icebp
shll
mov
mov
stc
ficoml
popl
fmul
addr16
mov
loopne
scas
out
pop
sbb
daa
std
sub
xor
out
imul
subb
cli
arpl
ljmp
mov
jmp
push
hlt
rorb
test
mov
aam
je
repz
push
movsb
lahf
jbe
or
mov
test
xor
aam
inc
insl
hlt
ds
sub
mov
mov
adc
test
mov
mov
add
mov
sarl
out
dec
jmp
in
std
push
xchg
stos
stos
in
jmp
push
cld
inc
mov
pushl
movsl
outsl
xor
sti
cld
aas
stc
inc
mov
mov
stc
pop
cld
icebp
loopne
icebp
decl
xor
inc
mov
stos
xchg
xchg
add
shr
push
lea
fistps
fistps
clc
add
adc
mov
fists
repnz
fstpt
add
data16
push
push
inc
data16
cmp
shlb
dec
data16
adc
out
or
ret
clc
lods
xchg
pushf
xchg
enter
and
scas
mov
out
jbe
dec
icebp
fdivp
lahf
and
repz
clc
sar
out
cld
xor
cmovb
clc
std
call
rcll
out
clc
das
jb
in
incl
test
cmc
fs
outsl
mov
jle
fs
daa
loope
popf
mov
std
outsl
jg
dec
add
fwait
sahf
mov
jmp
and
lcall
nop
pushf
notl
std
hlt
hlt
cmp
fsubs
ja
mov
jae
mov
lret
das
sbb
xor
cmp
loopne
shrb
xchg
gs
dec
cmp
adc
iret
pop
xchg
xor
cld
aad
mov
gs
xorl
dec
xchg
gs
xchg
inc
xor
pop
xchg
gs
out
rol
mov
gs
push
inc
jno
test
fwait
stos
mov
cwtl
lcall
imul
lret
mov
scas
movsl
xchg
decl
sahf
and
insb
cli
loop
fcomp
iret
int
aad
push
xor
fdivr
xchg
push
pop
shlb
fstpl
ja
cli
cwtl
fwait
mov
fldenv
jle
xlat
jp
pop
pop
xor
imul
sub
out
jbe
fdivrp
div
xchg
or
out
xchg
sti
shll
sbb
daa
mov
test
fidivrl
arpl
std
jmp
jg
lret
in
fs
aaa
mov
lock
shl
aaa
mov
outsl
daa
pop
out
sti
pop
daa
mov
jnp
cmp
mov
iret
mov
out
jecxz
scas
pop
and
lock
gs
sub
flds
lcall
mov
stos
test
or
loope
in
repnz
ret
mov
mov
jl
out
jne
cmp
icebp
leave
mov
push
pushf
mov
mov
lcall
and
cmp
dec
scas
stc
pop
fucomi
fwait
mov
and
fldt
hlt
aas
jno
ds
sub
inc
and
adcb
fneni(8087
mov
pop
sarl
pop
xor
mov
pop
add
gs
loope
rcrl
int3
and
fwait
mov
mov
imul
int
ss
lret
jg
nop
leave
mov
mov
pop
pop
aaa
dec
and
inc
fildll
rol
sbb
lds
mov
jmp
pop
dec
in
dec
or
arpl
push
into
les
mov
ds
jnp
ljmp
out
fnstsw
add
jae
fdivrl
loope
test
cli
testb
or
inc
cld
mov
lock
or
insb
in
cltd
jmp
test
add
dec
out
test
and
je
jns
mov
adc
pop
fwait
adc
bound
je
test
xchg
lcall
lds
inc
or
cmc
dec
lock
ror
mov
mov
daa
push
imul
ret
mov
jmp
js
sub
hlt
out
cli
or
mov
adc
rclb
jns
aad
add
jbe
testb
sbb
push
or
mov
or
push
repz
subb
scas
int3
imul
sti
dec
adc
call
ljmp
mov
sbb
inc
or
cmpsb
in
add
test
ljmp
notl
xchg
cwtl
inc
stos
adc
sbb
or
loop
les
cmpsl
sub
and
xor
inc
cmpsb
loop
fdivr
in
fucomip
cli
pop
add
and
mull
push
sub
movb
mov
movsl
cmp
add
jmp
mov
adc
fsubl
fidivl
cmp
cmpl
cmp
cmp
mov
das
cmpb
jmp
pushf
inc
pushf
inc
ret
addr16
lds
or
add
pop
ret
in
cmp
test
out
inc
xchg
sbb
fldcw
sub
xchg
cmpsb
scas
dec
xchg
xor
cmp
imul
lahf
xchg
pop
sar
fwait
pop
test
jbe
or
sahf
test
sbb
fwait
nop
jbe
pop
dec
shll
iret
lcall
lea
in
hlt
xor
lcall
xchg
inc
dec
rcll
cwtl
sub
mov
and
pop
lret
push
sbb
sbb
int
outsl
add
push
ret
add
ret
sub
aaa
scas
cli
daa
scas
in
inc
das
mov
jmp
and
loop
jnp
cli
pop
xchg
not
das
xchg
xlat
dec
jmp
cmp
wbinvd
cld
clc
xor
lods
lods
cld
cmpb
push
and
pop
push
out
mov
jns
lods
mov
jae
pop
mov
and
lock
subb
mov
or
jle
repnz
cmp
cmpsb
xchg
ljmp
mov
cmp
je
cltd
jle
push
adc
xor
ret
jle
imul
insb
xchg
push
pop
lret
shl
scas
mov
mov
jbe
pop
mov
ret
jl
mov
lock
mov
xchg
sbb
je
xchg
fdivrs
mov
add
mov
jp
mov
add
repnz
loope
cmc
cld
and
dec
xchg
xlat
cld
mov
scas
mov
add
cld
decb
xchg
in
aad
xchg
mov
sahf
lock
add
mov
cld
jl,pt
std
scas
and
pop
mov
cmp
jl
adc
sbb
jmp
mov
xor
mov
jbe
fwait
push
mov
jl
jae
repz
cli
je
ja
and
and
xor
jno
mov
or
imull
adc
adcl
adc
or
adc
mov
je
imul
xchg
or
outsb
mov
cltd
out
adc
cmc
push
inc
mov
cld
mov
imul
hlt
sti
mov
mov
mov
std
mov
sbb
dec
test
pop
imul
testb
jbe
nop
inc
scas
gs
mov
outsb
cld
mov
push
xchg
sti
xchg
int
and
into
cmp
mov
mov
addb
scas
mov
daa
mov
mov
stos
lods
add
cmpsb
cld
sbb
xor
seto
jp
mov
clc
je
add
jge
in
push
pop
cld
mov
rcl
fcmovnb
cmp
mov
cmpsb
xrelease
fisttpll
add
and
xchg
ret
je
fimuls
or
jl
jecxz
cmp
push
movsb
shll
cmp
adc
mov
push
out
addb
add
mov
cli
pop
mov
cmp
lods
aas
int3
fldcw
pop
iret
or
add
cmpsl
divl
bound
dec
xchg
xchg
sti
xchg
lods
sbb
enter
mov
insb
fisubrs
adc
ja
cmc
notl
scas
add
dec
fildll
scas
pop
movl
idivl
je
ret
mov
mov
and
mov
das
aas
push
scas
movsb
in
fsub
adc
in
xlat
sub
mov
fisubs
cld
pop
rcr
add
imul
mov
jb
jmp
jmp
div
mov
mov
pop
cmp
mov
sub
inc
negl
sbb
pop
repnz
ret
mov
ds
arpl
mov
cmpsb
pushf
in
daa
adc
not
jg
lcall
xchg
push
or
or
or
pop
push
push
hlt
add
test
addr16
dec
pop
push
fisttpll
fiadds
js
add
notb
divb
je
test
ficomps
cmp
and
repnz
adc
leave
test
roll
xchg
add
jb
jle
xor
fucom
xor
stc
mov
repz
pop
out
adc
mov
out
sti
js
stc
dec
pop
call
cmpsl
iret
mov
ficoml
int
pushf
cli
mov
mov
xchg
xchg
push
cmp
aaa
cli
inc
in
pop
daa
mov
adc
ljmp
lcall
jg
ds
in
in
in
icebp
cmpsl
mov
neg
imul
push
in
push
fbld
mov
mov
xchg
fwait
xchg
lcall
and
lea
lea
nop
sahf
fwait
mov
lahf
add
add
mov
nop
fwait
mov
mov
mov
ljmp
cmp
lods
cmpsb
icebp
sahf
mov
and
repnz
fldl
xchg
mov
in
and
cmp
hlt
cld
loop
addl
test
xchg
mov
incl
xchg
test
cld
test
xchg
jecxz
lea
xchg
lcall
add
mov
cli
stos
xchg
repz
les
repnz
xchg
aam
lcall
cmp
cld
scas
mov
pushl
cmpsl
test
jb
xchg
nop
jns
mov
testl
ss
nop
mov
and
jno
cmp
dec
mov
mov
mov
mov
inc
cmpsl
dec
lahf
jo
shlb
sub
hlt
sub
roll
in
lods
cmp
xchg
xchg
or
mov
popf
pop
jmp
jo
push
psllw
int
xor
dec
loopne
je
les
xchg
xchg
data16
cmp
lods
xchg
sahf
mov
cmp
bound
filds
rorb
and
les
shl
cli
add
test
mov
lods
mov
leave
push
inc
xchg
jp
std
fmuls
stos
lods
in
and
mov
cmp
xchg
jbe
or
jns
dec
dec
dec
xchg
mov
loopne
jmp
lret
mov
adc
mov
sahf
sbbb
adc
mov
cltd
xchg
inc
das
dec
or
lods
ljmp
mov
pushf
clc
popl
sahf
pushf
jne
call
and
mov
inc
fstpl
das
mov
jae
out
in
dec
std
dec
outsb
inc
dec
mov
iret
mov
mov
data16
add
fisubrs
loop
fsubrs
mov
testb
mov
xchg
mov
push
fisubs
push
mov
add
pop
cmc
filds
test
ja
add
add
arpl
xor
pop
into
add
ljmp
mov
lahf
int
int
int
add
add
int
int
int
int
int3
ljmp
int3
mov
pusha
int3
push
int3
add
icebp
lret
loopne
add
add
lret
jae
gs
push
lret
out
lret
movsl
lret
or
lret
sti
leave
out
leave
out
pushf
leave
popa
add
mov
sub
adc
pop
cmpsl
leave
jmp
in
fcmovne
aam
leave
enter
enter
add
enter
out
fadd
int
cmpsb
sahf
xchg
movl
add
add
inc
loop
mov
les
les
test
ret
rol
ret
xchg
ret
dec
add
dec
add
inc
ret
aas
ret
fadd
enter
ret
ja
jno
imul
ret
push
ret
mov
ret
out
push
add
and
or
mov
or
cld
in
shrl
clc
push
inc
push
xchg
pop
ret
clc
lods
ret
sub
and
fmull
fisubrl
clc
mov
mov
sub
mov
lock
xchg
std
in
fucomip
lahf
lock
and
xchg
jbe
stos
push
loop
dec
fs
aaa
lods
cmpsb
dec
pop
or
lock
imulb
xchg
popf
lods
lcall
lock
push
in
pop
add
es
push
cld
xchg
mov
xchg
add
mov
cld
mov
shl
adc
cwtl
sub
jae
sub
mov
cld
pop
dec
aas
xor
mov
jg
paddw
cld
xlat
sub
mov
shrl
lret
mov
push
inc
xor
lret
jecxz
aad
int
sub
mov
mov
xchg
xorl
lret
mov
dec
cmp
mov
inc
jno
pop
jecxz
lds
sub
lea
xchg
fs
lret
mov
aad
add
xchg
imul
popaw
xchg
stc
jno
popa
outsb
lret
mov
clc
dec
cld
inc
cmp
stc
call
cmp
xor
daa
sbb
mov
cmc
loopne
cld
jecxz
iret
lret
mov
lret
lds
lret
mov
xchg
mov
bound
cld
imul
push
cmpsb
mov
xorl
cmpsl
test
dec
push
dec
nop
enter
scas
mov
xchg
mov
sub
inc
in
out
test
mov
mov
mov
loopne
and
add
cmpsb
lods
mov
stos
test
lods
mov
jge
testb
pop
cltd
mov
mov
and
test
cwtl
dec
sbb
dec
hlt
scas
mov
push
mov
aas
cmc
cmpsl
loopne
in
idiv
out
lahf
fsubl
cld
out
gs
fsub
lahf
mov
enter
mov
mov
mov
lds
leave
cld
and
cmpsl
lcall
out
int
hlt
or
shl
cld
je
call
dec
sahf
lods
cld
mov
pop
xchg
jnp
rolb
stc
hlt
es
fildll
jmp
cld
add
jns
lahf
decl
pop
pop
sbb
cld
fsubrl
jnp
jae
mov
call
lcall
push
mov
mov
sub
sar
sti
nop
mov
pop
fwait
rcll
int
cld
sub
test
rol
cld
mov
mov
jp
das
enter
mov
stos
mov
jmp
jne
lahf
in
xchg
cmpsb
mov
mov
adc
jne
lock
cld
nop
mov
lea
inc
mov
stos
xchg
xchg
scas
mov
xchg
adc
mov
mov
jl
in
sahf
xchg
fadds
scas
push
mov
mov
add
ficoml
clc
xchg
pusha
adc
mov
adc
sti
mov
xchg
push
cmp
testb
cli
in
cwtl
leave
or
js
inc
pop
sbb
mov
repnz
repz
xor
sbb
fildll
jbe
fnsave
clc
cmp
mov
mov
pop
cld
rcr
shll
cltd
aam
push
lock
cli
out
mov
mov
cwtl
xchg
aas
ja
jns
and
cmp
jle
mov
jle
cli
divb
push
dec
pop
or
mov
lods
inc
clc
pop
mov
xor
inc
add
mov
scas
std
popl
pop
ret
fdivrp
jnp
pop
out
jbe
iret
js
mov
cltd
pop
mov
cmp
test
out
add
mov
and
scas
stc
adc
sbb
dec
sahf
mov
mov
jb
cmp
push
je
aam
jl
cli
jbe
cmp
call
repz
jl
repnz
xchg
leave
aam
and
jb
mov
xchg
xor
dec
dec
inc
pop
test
mov
in
jge
mov
adc
mov
mov
repz
icebp
inc
inc
push
sub
sbb
not
in
call
and
and
fisubrl
fcmovne
add
repz
cwtl
iret
cli
inc
inc
lock
mov
out
inc
sti
cmp
shll
into
decb
or
out
jg
icebp
pushl
repnz
iret
loope
test
mov
cmp
cmpsb
jl
out
cmpsb
addl
enter
leave
scas
ss
aad
xor
sbb
out
inc
push
cmp
cmc
in
adcl
stos
cmpl
mov
pop
sbb
pop
cmpl
fisubrs
adcl
fsubrs
lret
xorl
nop
push
cmp
jle
adc
add
mov
cld
xor
jne
mov
xlat
iret
xor
iret
sbb
insb
jecxz
out
ljmp
pushf
jb
ljmp
fisttps
sub
dec
call
xchg
xlat
test
mov
and
adc
mov
mov
mov
add
sbb
mov
mov
or
jmp
lds
negl
mov
jmp
icebp
shl
mov
jl
decb
push
add
xor
jno
in
jl
mov
mov
jp
imul
mov
dec
test
out
jecxz
sub
out
add
dec
push
sub
cmp
mov
leave
daa
inc
xchg
stos
xchg
out
adc
mov
sbb
daa
dec
pop
lcall
xor
inc
fistps
repnz
in
xchg
je
cmpsb
inc
pop
cmp
jg
push
cmp
jl
xor
dec
jo
jecxz
dec
pop
dec
inc
icebp
sbbl
mov
pop
inc
mov
stos
adc
movsb
ss
mov
lahf
dec
mov
scas
dec
ror
and
decl
iret
arpl
js
iret
scas
iret
mov
fidivrs
jg
iret
dec
test
iret
dec
mov
lahf
iret
fnstsw
aad
std
add
push
mov
dec
fwait
iret
inc
out
jecxz
push
shr
inc
dec
cld
jecxz
mov
mov
jecxz
iret
jmp
mov
out
aaa
cltd
ljmp
jle
ja
xlat
test
jno
pop
inc
adc
in
shr
add
les
lar
test
mov
mov
test
cmp
adc
xchg
mov
out
pop
ja
inc
add
ret
or
out
es
cmp
scas
les
jbe
out
int
sub
test
or
mov
or
pop
pushf
or
jne
push
fldl
out
jbe
rcll
xchg
xor
scas
sub
ret
iret
xlat
inc
lret
fsub
test
sbb
xor
out
push
cmp
das
xchg
mov
or
add
cmp
push
in
test
mov
outsl
mov
notb
mov
jl
enter
popa
aam
cs
aas
movsb
sbb
repz
xchg
cmp
mov
cwtl
fistps
stc
adc
in
add
cmp
aam
into
sti
aas
pop
sti
addr16
aam
push
call
pop
push
shll
mov
stos
hlt
pop
sbbb
mov
mov
jmp
fists
or
jnp
aas
mov
js
push
aas
imul
sbb
repz
push
sbb
jne
cld
fsubrs
lds
inc
push
aas
mov
mov
aam
jne
sti
aas
push
inc
inc
or
in
out
movsl
push
mov
aas
push
mov
out
push
aas
push
bswap
cmp
test
setnp
jno
push
jg
mov
cmpl
adcb
je
xchg
sub
fdivrl
and
lahf
sti
push
out
mov
and
pop
and
fucomip
repz
jle
sbb
out
std
mov
mov
sub
pop
icebp
je
ds
addb
jb
mov
rol
mov
add
ds
loop
bnd
push
and
mov
loopne
lret
pop
mov
stc
call
in
pop
jb
jb
or
cmpsl
mov
jne
dec
adc
cmpl
hlt
sub
add
cmc
lret
cmpl
lret
jp
int
icebp
cmp
dec
cli
pop
repnz
push
movsb
and
mov
je,pt
xor
xchg
add
sub
add
sub
or
add
pop
popf
jl
out
jb
call
adc
movaps
adc
sti
cld
cltd
nop
addb
or
hlt
or
cld
out
jb
enter
sbb
or
adc
xor
test
mull
or
fsubl
jmp
arpl
and
cmpsb
add
add
adc
ds
jmp
pcmpeqb
fmull
or
adc
push
mov
pop
ror
sub
dec
or
xor
hlt
jge
ds
hlt
or
or
xchg
movsb
mov
addb
jb
in
lock
lcall
push
sbb
stos
scas
daa
add
and
sub
aas
fisubrl
add
cmp
aad
js
je
and
adc
jmp
jge
andl
sahf
sub
and
add
in
aam
in
mov
rcrb
hlt
fisubl
sbbl
loope
push
add
jp
in
sti
push
adc
sbb
add
xchg
movsb
pop
into
hlt
fnstcw
jl,pt
lret
aam
or
pop
daa
daa
addr16
adc
jmp
cmpsl
das
and
xchg
das
xlat
loopne
or
push
mov
sub
mov
lock
ret
aas
sti
dec
movsb
stos
mov
movsb
add
out
sar
aad
daa
stc
jns
push
iret
sub
cli
hlt
sarb
jbe
sbb
xchg
mov
faddl
sub
out
outsl
xchg
aaa
sub
out
imull
lret
and
xor
repz
and
add
call
in
dec
pop
cmc
and
add
add
sub
and
push
inc
mov
arpl
jno
xchg
mov
je
ret
int
mov
movsl
sahf
aam
fcomi
js
add
hlt
cmp
jmp
std
fdivp
dec
mov
cmp
dec
xchg
dec
adc
cmp
fsubl
sub
cmp
stos
je
popf
or
loop
and
hlt
sub
pop
orb
xor
aas
mov
mov
sub
adc
daa
cld
or
and
daa
or
movsl
mov
sub
ds
or
adc
mov
push
cmp
imul
adc
dec
mov
movsl
and
cmp
push
or
and
sub
jae
push
sub
js
iret
out
daa
dec
jae
jns
jmp
std
push
je
lahf
jo
das
jo
xor
dec
or
and
jle
pop
daa
sub
icebp
adc
cmpsl
xorb
dec
cmp
shll
sub
xorb
xor
dec
push
and
xchg
das
dec
sbb
push
ficoms
outsb
mov
dec
cmp
push
xchg
and
sub
enter
jo
jge
push
jmp
and
imul
js
sub
sub
icebp
daa
and
xchg
sub
negl
es
jmp
mov
dec
fisttps
sub
andb
xchg
js
dec
cli
push
sbb
xchg
jo
dec
inc
adc
dec
cmovle
adc
imul
ret
aaa
or
and
test
es
nop
cwtl
sub
dec
xor
shl
cmp
or
cmp
aad
jae
inc
xor
int3
sub
das
out
jmp
mov
ret
sti
push
dec
movsb
adc
add
int3
add
xchg
test
int
or
jge
rorl
loop
popa
loopne
rol
fstpl
xchg
cld
xor
out
mov
int3
or
mov
sbb
fildl
das
and
dec
adc
lcall
loope
add
dec
outsb
xor
in
push
xor
mov
xchg
jp
dec
lea
adc
xor
loope
call
pop
mov
cmpsl
imul
nop
lods
dec
jmp
inc
sbb
inc
jo
imull
jno
iret
cmp
imul
sbb
cld
cmp
rol
xor
sbb
and
je
and
xchg
xchg
jle
jp
iret
adc
and
sbb
cmp
into
push
xchg
icebp
add
hlt
cmpsb
inc
ja
adc
mov
jecxz
inc
sbb
add
das
sub
xchg
cmp
stos
push
and
inc
or
rorl
add
lods
sbb
xor
mov
inc
push
addr16
lcall
es
insb
jae
cld
and
xor
push
cmp
fst
push
das
in
push
stc
hlt
loope
jmp
out
int3
jg
xor
jp
dec
stc
mov
mov
xlat
lret
flds
popa
shl
pop
fsubrl
out
test
xchg
psrad
lea
insb
add
lahf
and
adc
loop
into
push
push
cmp
int3
shrb
cmp
movsb
lcall
sbb
cmp
xchg
ret
xorb
xrelease
ja
mov
loop
movsb
dec
cmp
inc
inc
roll
sbb
and
xchg
mov
adc
mov
pop
out
sbb
adc
mov
adc
xchg
in
adcl
dec
sbb
test
add
arpl
pop
sbb
add
cmc
jle
in
test
cmpsl
lahf
add
pop
adc
loopne
dec
fs
adc
divl
lods
push
sub
or
sub
sub
daa
movsl
dec
sub
pop
lret
inc
into
adc
daa
inc
cmpsb
xchg
xchg
pop
and
sub
aad
jmp
cmpb
add
push
or
mov
je
lods
inc
xchg
jb
mov
into
movsb
adcb
mov
mov
jbe
je
stos
je
repz
jl
push
repz
stos
mov
xchg
lahf
add
xchg
and
cmpsb
les
cmp
xchg
aam
test
xchg
daa
gs
scas
or
jnp,pn
rcrb
js
cmpsb
xchg
sub
add
leave
or
xchg
jge
imul
xor
movsb
push
out
ja
xor
out
icebp
jmp
xchg
push
clc
out
les
jne
jl
repz
pop
les
inc
sub
inc
leave
xchg
mov
mov
out
loop
jge
or
lds
add
jp
insl
lret
movsl
sub
jo
inc
jecxz
out
mov
mov
dec
jl
dec
and
pop
mov
adc
xchg
stos
adc
cmpsb
dec
sarb
ret
aam
scas
lea
ja
push
mov
mov
hlt
iret
in
popa
xchg
mull
inc
in
xchg
lret
dec
inc
bound
call
cmpsl
add
out
mov
cltd
sub
xchg
inc
jecxz
xorl
test
xchg
ffreep
mov
jns
adc
jnp
add
sbb
lods
push
pop
cld
movsl
jnp
jl
jmp
dec
xchg
stc
mov
dec
into
mov
pop
mov
mov
gs
cmp
in
das
inc
dec
pop
call
lods
and
push
movsl
scas
loope
loopne
and
mulb
and
inc
in
push
mov
jbe
fcomi
jmp
jnp
pop
xchg
cmp
test
adc
out
or
jnp
sti
pop
mov
inc
stos
xor
call
cld
lret
lret
les
sbb
inc
cwtl
and
shll
mov
push
xchg
cmpsb
jnp
js
call
call
in
cmp
je
hlt
xchg
ja
out
loopne
sub
mov
jg
les
fists
das
ja
or
test
bound
int3
dec
pop
cmp
cli
fists
cs
in
ljmp
dec
adc
rorb
or
sbb
jae
adc
push
adc
jp
mov
xlat
xlat
dec
inc
js
cltd
stos
inc
xchg
aas
cmpb
stos
test
loope
cmp
push
mov
clc
xchg
mov
ljmp
mov
stc
push
nop
pop
jno
pop
pop
lret
test
and
stc
adc
xchg
mov
les
scas
xor
xchg
cli
test
hlt
lret
xlat
and
inc
and
or
sbb
test
call
push
dec
in
fidivrl
mov
shll
imul
scas
ja
sti
and
xorl
fisubs
sbb
pop
nop
jb
in
test
arpl
test
and
dec
inc
cld
jb
je
mov
icebp
mov
cmp
xchg
out
out
pop
and
xlat
sbb
jb
stc
pop
js
sub
ja
in
aaa
std
xor
std
sub
and
lds
loope
jae
mov
adc
pusha
enter
enter
jnp
jb
dec
out
aaa
jbe
jb
dec
add
cmpsl
pop
mov
into
in
pop
je
movsl
shrl
mov
icebp
stos
cmp
mov
lods
push
scas
test
daa
in
test
imul
jg
lret
cmpsb
inc
test
ret
cmpsb
les
out
inc
jmp
in
ja
cmpsb
outsl
cmpsb
out
xchg
cmpl
cwtl
mov
inc
add
cld
mov
or
test
sarb
push
lock
mov
xchg
push
hlt
cmpsb
or
aad
jmp
mov
ja
lock
xchg
mov
int
aas
inc
divb
scas
scas
test
loop
adc
jecxz
lods
in
outsl
cmp
push
repz
sbb
inc
divb
push
fdivrs
adc
mov
mov
xchg
scas
cmp
imul
jb
lcall
hlt
stos
imul
xchg
mov
inc
push
adc
mov
pmulhuw
in
or
xchg
stc
es
int
out
inc
mov
bound
lcall
pop
lock
hlt
pop
in
pop
js
in
and
inc
pop
cmpsl
pop
lock
call
lock
imul
push
out
mov
cmpsb
imul
imul
imul
ja
jbe
jne
je
jae
cld
xchg
sub
shll
mov
xchg
outsb
out
arpl
dec
pop
adc
imul
mov
lds
addr16
xor
scas
and
cmpsb
mov
mov
and
and
inc
push
pop
lds
mov
mov
sbb
sbb
sbb
dec
loope
rcll
pop
inc
dec
in
dec
loope
cmc
dec
lock
hlt
push
movsb
xchg
inc
dec
in
inc
mov
in
inc
cld
mov
call
in
mov
jno
pop
in
mov
mov
daa
outsl
in
inc
mov
loop
jl
mov
addb
sub
popa
add
pminsw
pop
out
mov
xchg
cwtl
sbb
pop
out
jns
fwait
mov
addr16
xchg
fildll
or
scas
adc
xchg
lds
movsl
rorl
or
lock
sub
push
ja
jge
push
rcl
scas
cmpsl
imul
add
cmp
out
xchg
mov
mov
sbb
stos
repz
inc
xchg
popf
lock
adc
cmc
mov
jne
bnd
or
test
inc
call
in
mov
test
mov
notl
imul
cmp
add
or
pop
xchg
adc
add
hlt
je
pop
push
pushl
adc
int3
or
stos
in
jl
out
lods
sub
inc
pop
xor
sub
jle
movsl
movsb
pop
sub
pop
aam
popf
not
lds
lds
add
inc
push
repnz
push
repnz
mov
pop
dec
cmc
xchg
dec
lret
dec
add
lods
mov
in
mov
mov
dec
idivb
cli
addr16
cli
push
movsb
incl
mov
cld
or
ret
nop
sbb
mov
fwait
gs
xchg
int
int3
int
sub
sub
cmp
jns
cld
pop
lea
cmp
addb
lock
sub
jne
lock
cltd
ret
xchg
inc
sti
jecxz
mov
bound
hlt
pop
pop
mov
cmpsb
jmp
ds
mov
mov
in
adc
pop
sahf
pop
pop
pop
gs
cwtl
xchg
jb
ret
iret
pop
mov
loop
lret
aas
test
lahf
jg
or
sub
cmc
ss
clc
lret
push
incl
cmpsb
mov
pop
fnstcw
pushl
xlat
and
xlat
mov
add
pop
jne
or
push
cmp
dec
pop
arpl
dec
pop
mov
mov
fdivrp
mov
loop
negl
sbb
lcall
push
jo
or
test
sbb
mov
jbe
std
call
repz
sub
loope
ficoml
ror
das
das
ja
jnp
adc
mov
lret
rclb
xchg
fisttpl
ret
notb
in
jge
pop
sahf
enter
cmp
daa
mov
mov
jge
cmp
sar
mov
mov
pop
in
mov
pop
cmp
ret
and
xlat
cmpsl
adc
cli
ret
xlat
mov
aad
jb
aaa
vmaxps
daa
in
in
sti
nop
cld
mov
movsl
lods
cwtl
lret
mov
jmp
icebp
lahf
mov
pop
in
lret
test
cmp
out
jnp
inc
xor
mov
jge
js
in
stos
xlat
stos
scas
stos
pop
out
testl
pushf
xchg
aam
mov
loop
jge
xchg
rclb
add
shlb
mov
pop
jp
jae
add
lock
loope
sbbb
mov
cmp
dec
flds
ret
cmp
mov
js
lret
imul
or
fcomp
or
jb
subb
push
xchg
fidivrs
das
les
notb
jl
lahf
stc
loope
insb
mov
jnp
adc
cmpsb
mov
jle
out
fwait
clc
sti
adc
loope
icebp
mov
outsb
test
push
push
xchg
clc
cmpsl
pop
popf
aas
loopne
push
ja
pop
nop
cmp
pop
lahf
inc
call
imul
pop
fstpl
sbb
dec
pop
inc
icebp
aam
filds
in
and
inc
arpl
imul
int
dec
in
sti
int
in
jae
idiv
clc
mov
cmp
push
adc
in
sbb
mov
bnd
jecxz
jecxz
aas
stc
shll
push
repz
push
mov
xor
mov
int3
and
jae
inc
inc
and
cli
add
lahf
sub
lock
jbe
add
fwait
sbb
add
and
add
mov
add
hlt
inc
ret
daa
push
cmp
cmp
hlt
sub
sti
mov
ljmp
mov
loopne
add
rcrl
add
xchg
fildl
clc
data16
ficoml
fnstcw
arpl
gs
popa
mov
pop
mov
fs
loop
popf
add
lret
sahf
xchg
xchg
xchg
xchg
adc
fnstenv
lret
mov
mov
sahf
pushf
mov
lret
xchg
ret
push
in
inc
aas
loopne
hlt
cmp
push
push
gs
cmp
cmp
lds
popf
xor
fcmove
mov
sub
mov
es
loope
movsl
and
sub
cs
pop
xchg
fcomps
fidivrl
popf
aam
mov
mov
jle
pop
mov
pop
in
and
add
inc
popf
cmp
sbb
adc
or
das
adc
dec
adc
dec
loope
clc
addr16
scas
dec
movsb
cmp
mov
jecxz
cmp
xchg
aas
test
hlt
dec
sbb
xchg
xchg
mov
aas
cmp
cli
in
xlat
enter
fisttpll
sarb
add
imul
loope
daa
pop
cmpsl
mov
jno
clc
adc
leave
jno
mov
adcb
pop
adc
jg
fildl
cmp
xchg
jl
repnz
cmp
mov
mov
xor
cmp
xor
xor
sbb
fptan
addr16
xchg
mov
fiaddl
adc
loop
sub
jp
xchg
mov
adc
out
mov
cltd
addr16
push
aas
push
lock
mov
or
push
aad
or
cmp
sub
data16
loopw
or
scas
pop
sahf
xchg
mov
mov
std
stos
in
or
pop
xchg
int
gs
pushf
push
nop
sahf
lea
pushf
lea
pop
xchg
rcll
scas
popf
and
or
pusha
fcoml
sub
xchg
pop
das
rcll
sarb
cwtl
repnz
cs
pop
scas
cmpsb
in
data16
loopne
fisubrs
lcall
or
daa
push
xchg
add
loop
xchg
jae
jb
aas
std
xchg
xor
jp
pop
imul
stos
jbe
ljmp
jmp
ds
cs
push
pushf
mov
pop
incb
ja
addr16
je
hlt
daa
cmp
stc
push
or
adcb
dec
loope
jnp
lods
ljmp
fiaddl
or
xchg
aas
lock
and
or
das
enter
sti
repz
add
adc
cli
roll
pop
mov
pop
sti
sbbl
cmpsl
movb
notl
push
mov
cmpsb
insl
dec
lahf
cmc
shll
loop
test
jnp
cld
xor
pop
and
inc
add
in
popf
xorb
icebp
cmc
jne
mov
test
subb
and
jmp
xchg
jecxz
leave
dec
repnz
mov
mov
push
jg
pop
mov
mov
scas
cld
add
mov
or
mov
jbe
aas
int3
lods
mov
lret
mov
cltd
mov
sub
lcall
inc
icebp
andb
and
and
enter
sbb
sbb
xchg
adc
pop
sbb
pop
mov
loopne
xchg
xchg
xchg
sub
cld
cmpxchg
pop
xchg
gs
nop
lods
nop
sahf
xchg
xchg
in
mov
mov
sahf
jl
mov
rol
ja
fistpll
mov
or
cmpsb
cmp
pushf
mov
dec
add
pop
and
cmc
xchg
push
call
dec
mov
call
lahf
cli
adc
mov
jbe
loope
sub
cwtl
sbb
adc
stc
sti
inc
cmp
cld
lds
cmp
call
mov
in
fwait
mov
mov
les
ds
pop
bound
xor
mov
fsubrs
frstor
add
out
rolb
loope
push
cmp
mov
mov
adc
lret
mov
pop
ds
lods
jb
inc
lods
push
adcl
mov
scas
jns
jl
cmp
push
shrb
cmpsl
out
jecxz
ljmp
pop
cmpl
cmp
jg
jmp
add
add
jb
cmp
mov
cwtl
xchg
stc
in
xchg
sbb
sbb
pop
ja
ja
mov
cmp
pop
adc
adc
xchg
int3
push
out
loope
and
adc
dec
adc
pop
stc
fists
cli
jns
push
mov
repz
data16
pop
clc
fisubs
rcrl
ret
loope
test
sub
xchg
sbb
mov
dec
sub
dec
cmpb
mov
inc
jg
cli
jo
add
mov
cmp
lods
xorl
adc
out
repz
cmp
icebp
lret
pop
adc
fidivl
sub
loopne
test
mov
lods
hlt
scas
jecxz
add
cmp
mov
bound
out
test
test
cltd
add
sti
mov
incb
js
in
sahf
jno
std
add
aaa
xchg
xchg
mov
jns
mov
lods
cmp
cmpsl
lcall
push
mov
push
lahf
pushf
dec
jl
jg
jmp
stc
dec
cmp
pop
sbb
add
in
in
lcall
icebp
test
ja
mov
in
or
and
je
push
inc
xchg
in
in
aad
out
pop
nop
prefetch
or
mov
xchg
mov
shrb
cmpsb
icebp
add
or
adc
sbb
lahf
rcr
sub
sbb
pop
dec
mov
inc
cli
arpl
add
out
sub
out
mov
sahf
pushf
pop
sbb
out
pop
jl
sub
test
jmp
aas
adc
movsb
push
in
test
dec
test
stc
cld
push
repz
in
insl
add
adc
mov
xchg
rorl
jmp
cmpsb
mov
das
push
in
mov
xchg
add
xchg
cli
cwtl
fdivrl
and
push
and
and
and
mov
int
dec
lret
rcrl
push
xchg
push
sbb
xchg
push
sbb
mov
mov
push
stos
scas
stc
pop
arpl
xchg
stos
sbb
adc
lea
rcrl
mov
xchg
adc
add
daa
dec
add
sub
mov
es
dec
xor
frstor
lock
lea
and
add
adc
pop
add
push
stc
sbb
push
sbb
fcompl
add
jb
sbb
sbb
scas
pop
add
cmp
inc
xchg
cmp
ret
cmpsl
insl
lds
add
repz
imull
daa
fistpll
mov
pop
popf
lods
add
jg
xlat
mov
jecxz
sub
aaa
negb
add
add
out
call
pop
stc
aas
or
out
dec
ficoml
inc
ljmp
xor
xchg
pop
cltd
jne
stos
rclb
loopne
imul
sbb
sti
je
test
add
subb
stc
push
jp
je
mov
pop
mov
jns
subb
add
test
je
mov
shr
cmpsl
jle
repnz
bswap
push
mov
aam
inc
sbb
daa
xchg
cmp
jb
cli
push
and
ds
cs
cmp
add
fcmovnb
mov
pop
pop
out
fsubr
jbe
sahf
mov
xchg
mov
mov
loopne
out
dec
insl
cli
hlt
incb
into
inc
jns
pop
inc
adc
mov
sahf
cmp
cs
xor
xchg
jae
mov
mov
shl
mov
ret
lock
mov
arpl
and
add
in
adc
mov
repz
cltd
std
jnp
mov
ja
pop
in
cmpl
movsl
in
jns
mov
movsb
iret
ret
pop
jb
xor
ljmp
cmp
mov
dec
fsubrs
mov
aaa
jns
pop
inc
xchg
pop
ljmp
jmp
imull
ljmp
xchg
or
jg
dec
jmp
in
xchg
rcrl
das
out
and
popf
mov
test
mov
out
dec
cmpsb
add
dec
push
stc
je
xlat
fimull
add
je
repz
xlat
inc
nop
dec
sub
fcom
mov
ficompl
test
xor
nop
jmp
push
xchg
jecxz
test
pop
push
cli
cli
jle
dec
mov
pop
ljmp
sti
jbe
je
out
je
add
cmp
je
clc
test
cmp
sbb
or
int3
mov
push
mov
outsb
mov
daa
add
subb
popf
shrb
or
inc
rcrl
and
in
xchg
or
aaa
and
pop
xchg
cmc
out
fdivp
jo
xlat
mov
enter
add
pop
repnz
pop
xchg
das
call
cltd
cmc
sub
and
rorb
jle
out
cmpsb
pop
fiadds
xchg
xlat
pop
movsl
out
jmp
repnz
mov
sti
mov
mov
or
or
pushf
orl
push
adc
rol
jl
jecxz
jmp
add
pop
loope
cmp
mov
ss
int3
or
jb
std
inc
and
push
ds
lods
stos
mov
adc
xchg
and
and
nop
cltd
xchg
stc
mov
je
push
stc
jmp
das
lods
push
cmp
lock
test
fucomip
out
mov
outsl
pusha
mov
pop
push
jmp
jg
mov
aas
in
call
andl
cmp
adc
fdivs
jbe
scas
cli
push
aaa
icebp
sbb
arpl
mov
cmp
lods
cmp
cmp
jg
arpl
enter
arpl
lcall
and
imul
mov
mov
mov
jb
bnd
movsb
inc
les
sahf
clc
decl
or
inc
and
ds
scas
sub
or
mov
add
and
subl
popa
xlat
mov
xlat
inc
mov
enter
cmp
subl
cmc
push
shrb
cmpsb
inc
clc
repz
or
cmp
in
in
jl
mov
in
outsb
pusha
enter
ja
cmp
add
jle
mov
ljmp
sti
inc
aad
pop
in
ucomiss
movsl
push
dec
jbe
frstor
mov
push
mov
mov
mov
adc
scas
cwtl
jne
and
mov
mov
dec
stos
mov
shlb
pop
int3
and
outsl
std
loopne
inc
jo
lret
mov
and
ret
jbe
jmp
cmp
xchg
mov
or
xor
stos
hlt
repnz
add
adc
gs
sbb
testl
and
cld
stc
lahf
sbb
out
mov
mov
in
and
lock
icebp
loopne
fs
repz
xchg
xlat
adc
or
out
out
test
cmp
rorb
mov
out
xlat
and
jge
mov
je
pop
jg
jge
ret
cmp
cmp
xchg
mov
push
lock
mov
lcall
mov
stos
jae
dec
lds
das
cwtl
pop
in
icebp
movsb
lret
ret
scas
inc
lods
in
repz
jmp
sub
loopne
dec
jl
fisttpl
fsubp
dec
push
ja
pop
xchg
scas
mov
mov
sbb
data16
mov
dec
pop
or
push
jp
push
add
scas
cmp
jb
dec
out
rorl
push
xchg
repz
xor
inc
lods
and
sub
xchg
cmp
out
jnp
lcall
out
stos
cld
sbb
mov
lcall
fisubs
sahf
jmp
mov
push
jmp
into
imul
pop
out
lock
ds
pushf
and
jg
dec
idivb
mov
adc
add
pop
jmp
sbb
jb
decl
xchg
jo
scas
mov
ficoml
insb
dec
sarb
push
xchg
jle
inc
or
cld
stos
pop
mov
pop
out
mov
pop
push
cld
dec
lahf
mov
sbb
xor
mov
mov
mov
incl
inc
push
mov
cltd
lret
xor
pop
sbb
decl
cld
andl
cbtw
aas
out
and
call
xchg
repnz
dec
out
aaa
cmp
jbe
stos
mov
stos
das
inc
sub
js
add
ja
sub
jb
pop
dec
shrl
lods
pop
jne
jecxz
xchg
hlt
cs
xchg
mov
adc
aam
jno
out
iret
pop
xchg
hlt
cmpsb
pop
jp
xchg
cmpsb
imul
das
jne
cwtl
in
inc
dec
push
pop
mov
sti
pop
out
sub
cld
jae
or
enter
stos
leave
fldt
xchg
mov
stc
in
mov
and
xchg
cmp
mov
jge
dec
shll
stos
daa
outsl
and
scas
jmp
imull
push
xchg
jle
xlat
stc
lret
push
pop
jae
inc
sub
cli
mov
lret
daa
cli
pop
pop
inc
adcl
inc
aaa
daa
mov
push
pop
repz
jno
aam
ljmp
inc
call
cld
sub
pop
sub
lea
pop
mov
insb
jns
imul
test
sub
shlb
pause
sub
mov
sbb
repnz
or
daa
pop
inc
outsl
jecxz
icebp
jl
fildl
jno
cmp
jae,pt
and
mov
sarl
clc
inc
sti
fwait
pop
push
sub
gs
shrl
lahf
imul
mov
movsb
mov
mov
mov
das
scas
mov
and
je
xlat
scas
mov
adcl
dec
bnd
mov
sti
xor
mov
jmp
decl
test
cmc
xchg
dec
shrb
in
ds
push
mov
sahf
jecxz
inc
lcall
lock
dec
stos
pusha
mov
adc
ret
dec
scas
mov
repnz
pop
sub
inc
add
mov
pop
lock
jg
dec
clc
hlt
mov
shll
pusha
addb
hlt
xchg
xchg
mov
adc
out
sub
scas
repz
aas
add
fsub
out
and
repz
xchg
nop
in
mov
jnp
fnstenv
daa
scas
dec
iret
jo
stos
stc
or
dec
pop
sub
js
mov
fstl
pop
repz
mov
xlat
or
scas
mov
lods
nop
loop
cld
xlat
int3
lcall
sbb
xchg
scas
pop
pop
es
subb
inc
jb
jo
xchg
sti
jl
cld
iret
jmp
xchg
test
dec
jne
cmp
stos
jb
xchg
sbb
pop
xchg
jp
insl
sbb
adc
cs
mov
xchg
ret
jmp
cmc
xchg
in
lods
sub
mov
cmpsb
aam
into
mov
xchg
filds
inc
rcrl
and
stos
popa
fxch
loop
icebp
loopne
mov
into
xor
js
mov
cmc
cmp
jge
out
scas
mov
sbb
pop
iret
call
iret
repnz
aaa
outsl
negl
clc
add
iret
lahf
fildl
mull
mov
sbbb
ss
scas
lahf
fisttpl
icebp
pop
iret
fisubrl
pop
lret
stc
mov
push
stos
jp
ret
aaa
ds
fcomp
mov
pop
loopne
sbb
iret
jmp
iret
fidivrs
jae
mov
jae
mov
jnp
cmp
repz
pop
jle
or
push
mov
lret
jmp
pop
pop
mov
das
mov
or
adc
or
inc
jnp
pop
dec
out
sahf
loopne
idivl
sbb
iret
push
cmp
jno
mov
hlt
or
lock
aas
push
jmp
decl
fldenv
dec
xlat
mov
pop
add
and
bnd
sub
cmc
lret
cmc
sbbl
xor
sbb
ret
imul
sbb
std
xchg
rolb
nop
sub
ljmp
lahf
dec
sbb
subb
popf
adc
in
lods
cmp
xlat
or
fstp
xchg
sub
mov
push
sub
cmpsb
repz
mov
loop
mov
jne
mov
xor
scas
adc
jle
or
jns
cmp
stos
mov
cld
inc
mov
and
ljmp
into
pop
mov
jae
inc
adc
inc
gs
movsl
mov
cmpsb
mov
ljmp
add
outsb
xchg
fsubl
pop
lds
xchg
jecxz
adc
pmulhuw
fprem1
sarb
jl
out
xorl
jecxz
fiaddl
mov
test
xchg
outsl
sub
pop
pop
decl
cmp
sbb
pop
cmp
dec
mov
icebp
filds
iret
xlat
aas
mov
cmc
sub
sub
js
sbb
fcmovu
pop
jmp
and
cmp
loop
add
sbbb
or
out
test
repnz
lret
sar
out
cld
dec
scas
out
sub
sub
jg
and
rclb
and
lcall
mov
sbb
inc
cmp
fcmovne
cmp
hlt
in
fbstp
lahf
ljmp
xorl
ss
cltd
cmc
mov
aam
push
mov
ret
lods
sbb
pop
jl
pusha
push
jmp
jns
daa
mov
jbe
test
jge
mov
jg
mov
std
mov
sarl
jbe
sub
inc
cmp
jp
xchg
repnz
ret
sti
jp
enter
shrl
jno
xrelease
adc
nop
rcl
ljmp
jae
mov
into
mov
jae
inc
in
scas
outsl
dec
mov
scas
mov
jg
jnp
into
and
arpl
repz
jmp
cli
push
mov
je
xchg
in
outsb
inc
sub
sbb
lahf
fdivrl
add
aas
cmp
lds
outsb
and
mov
in
arpl
sbb
jle
mov
lea
pushf
cmc
addb
std
mov
sahf
mov
jmp
mov
sub
fbstp
outsl
mov
sbb
es
pushf
out
pop
dec
shll
leave
jne
or
std
clc
cmc
mov
xor
cmpsl
xchg
or
push
ja
sub
pop
dec
or
or
mov
mov
and
mov
fwait
rclb
jne
mov
sub
idivl
scas
xchg
mov
test
pop
cmp
mov
shrb
es
popf
cmp
mov
mov
jmp
push
nop
mov
fiadds
jl
push
fucomip
fcmovbe
sbb
mov
xchg
scas
nop
xchg
pop
pushl
mov
lods
mov
scas
or
mov
scas
push
jnp
dec
imul
popl
inc
and
notl
cld
cltd
lea
sbbl
xchg
xchg
arpl
test
inc
dec
mov
cltd
ss
push
add
and
loopne
std
or
nop
lcall
fs
jne
add
inc
or
enter
cltd
imul
mov
and
adc
and
stos
fnstenv
int3
popf
cmpl
mov
lods
mov
jecxz
jae
movsb
and
mov
lcall
addr16
fidivrs
and
cmc
mov
pop
inc
pop
cmp
out
movsl
mov
mov
nop
lcall
into
xchg
sbb
pop
xchg
xchg
dec
mov
in
xchg
jae
in
js
std
cltd
inc
outsb
mov
scas
lret
dec
ds
and
cmp
std
xchg
lret
int
not
dec
in
int
inc
std
pop
hlt
rclb
shll
mov
jmp
cmpsl
scas
std
mov
lahf
nop
mov
push
jle
mov
jp
std
dec
xchg
mov
loop
mov
inc
pop
std
lea
scas
idiv
push
pop
es
adcb
cli
lods
cwtl
fwait
cmpsl
jb
daa
mov
scas
cld
lcall
add
jecxz
pop
aam
insl
xor
lret
fisubs
mov
cld
test
gs
or
mov
xchg
scas
fbstp
mov
dec
out
ljmp
cmp
les
ret
add
add
pop
ret
push
ret
dec
ret
inc
ret
cmp
aaa
ret
sub
daa
ret
pop
ret
or
pop
ret
xlat
ret
sahf
ret
push
ljmp
ret
xchg
rcrl
shrl
push
rorb
shlb
rolb
and
iret
fcmove
mov
movsl
iret
insb
iret
pop
iret
push
iret
dec
iret
sbb
add
add
push
iret
clc
into
in
into
call
into
or
pop
into
cli
int
int
int
mov
add
add
int
int
int
int
int
int
int
int3
lock
loopne
ror
add
add
scas
int3
xchg
int3
jns
cmp
xor
test
lret
aam
int
jl
push
arpl
push
lret
inc
lret
cmp
nop
mov
pop
lret
mov
lret
push
lret
hlt
mov
add
pop
leave
inc
leave
cmp
or
sti
enter
enter
mov
enter
out
push
pop
fs
into
or
int
int
int
int3
mov
int3
repnz
int3
jae
inc
int3
cmp
sub
and
sbb
adc
add
inc
add
or
xor
lret
bswap
pop
lret
mov
lret
add
jns
jb
dec
lret
adc
cmc
leave
fcmovne
aam
and
or
test
enter
enter
enter
add
enter
jecxz
cmc
vpextrw
rol
ret
add
add
lds
jae
lds
inc
lds
xlat
les
les
les
add
cmp
add
sti
ret
out
fstl
inc
ret
ss
sub
and
or
cld
adc
bnd
loop
into
ret
movsl
ret
mov
andl
xchg
add
push
ret
daa
rcrl
roll
fistps
lahf
lock
call
iret
adc
add
add
pop
iret
add
sti
into
in
fmul
leave
into
mov
into
xor
into
push
into
or
sti
int
int
add
adc
int
push
int
int
lret
fcmovne
ror
int3
lret
ret
lret
mov
scas
lret
popf
lret
insb
lret
data16
or
add
cmp
sub
or
add
xchg
lret
mov
test
test
inc
ds
leave
push
leave
push
leave
aas
leave
cmp
out
enter
xchg
int
enter
jns
mov
enter
enter
enter
enter
enter
add
loop
mov
ja
push
lods
lds
imul
les
jno
daa
add
adc
or
out
into
ret
jecxz
ret
sub
add
pop
ret
call
shrl
sbb
test
stc
add
cmpb
iret
inc
iret
push
iret
add
cld
into
cmc
into
out
into
jmp
into
add
inc
and
sahf
sub
int
int3
hlt
int3
in
int3
ror
int3
leave
lret
add
out
test
xchg
leave
jge
outsb
leave
push
leave
dec
leave
pop
push
enter
movl
lock
ffreep
fadd
rol
mov
mov
sub
adc
lahf
les
add
les
jo
push
pop
les
push
les
inc
les
les
les
rclb
add
les
les
ljmp
ret
push
and
lcall
ret
xor
sbb
adc
and
pop
cld
pop
ret
xchg
les
ret
pop
or
add
ret
or
add
repnz
out
mov
shll
rcll
cld
mov
and
shl
ffree
xlat
shrb
pop
add
xchg
push
add
iret
test
popa
into
pop
into
dec
into
cmp
and
push
into
std
movb
add
imul
out
int3
call
int3
fs
pop
int3
push
int3
in
ficoms
movsb
lret
lret
jno
imul
loope
ror
mov
adc
lret
cli
leave
in
leave
xlat
leave
nop
leave
pusha
cmp
leave
das
leave
sub
add
add
cld
enter
enter
enter
enter
enter
add
enter
enter
shlb
mov
add
inc
jb
pusha
pop
sbb
adc
or
sti
in
out
cld
aaa
add
pop
pop
test
incl
test
in
in
pop
xor
cld
xchg
inc
xchg
clc
outsl
inc
test
mov
and
or
inc
ljmp
push
xlat
inc
jmp
inc
cmpl
shl
mov
mov
pop
add
ret
pop
rcrl
add
aaa
negb
and
add
inc
negl
aad
lods
fcos
ret
mov
je
std
jmp
out
and
jmp
pushf
cmp
dec
ds
mov
dec
es
and
jp
push
loope
mov
test
cmp
pop
into
jmp
out
loopne
clc
adc
stc
adc
icebp
push
inc
xchg
jl
lret
mov
jae
jg
movsl
mov
jg
mov
ror
enter
gs
les
push
dec
mov
sub
mov
xacquire
aad
adc
mov
mov
clc
fcoml
fimull
scas
mov
movsl
adc
cld
jbe
xrelease
mov
dec
add
popf
nop
sahf
lea
nop
mov
in
mov
adcb
nop
lcall
stos
mov
and
jge
mov
mov
cli
xchg
lcall
mov
lods
jg
call
cli
add
aas
stos
lret
xchg
stc
cmpsb
inc
lcall
adcb
or
repz
inc
jmp
mov
lock
jl
cld
popf
jle
pop
mov
stc
lahf
test
cmc
push
jne
aaa
test
fists
mov
dec
lock
fcomip
stc
sti
dec
push
adc
outsb
std
cmp
notl
mov
push
mov
into
pushf
adc
in
jg
push
test
out
cmc
and
jg
idivl
dec
idivl
aad
mov
loop
std
fwait
addr16
ret
mov
test
adc
testl
cmp
test
stc
adc
pop
sti
dec
lcall
add
dec
push
add
add
int
orb
lock
jle
jns,pt
or
fidivl
rcr
or
loope
jl
test
loop
sti
clc
sahf
lods
test
cmp
subb
mov
cmp
cmp
xchg
inc
je
add
leave
test
movsb
pop
add
fdiv
xchg
mov
cli
fldcw
cmp
rorl
dec
dec
and
or
xchg
sub
jg
xchg
cmpsb
sti
dec
cli
rcl
add
rolb
add
sbb
sbb
sbb
sbb
pop
xchg
xor
idivb
int3
mov
adc
bnd
fimuls
fs
mov
fldcw
jge
das
ja
push
in
inc
pop
pop
lahf
push
loopne
idivb
mov
imul
adc
adc
adc
daa
aaa
fsts
addr16
ljmp
pop
lock
std
sbb
mov
lods
pop
repnz
add
jge
mov
adc
dec
out
loop
bswap
mov
jmp
jno
cmpsl
popa
scas
enter
in
lds
dec
jnp
dec
inc
xchg
movsb
cwtl
movsl
xchg
dec
jecxz
mov
jecxz
jb
sarl
jb
sub
mov
xchg
in
out
jecxz
jb,pn
scas
inc
insl
dec
testl
push
jg
pop
pop
aad
ljmp
ja
pop
jg
fdivrp
jae
lahf
push
xchg
xlat
fidivs
sarb
add
pop
test
lcall
jg
into
into
dec
jge
mov
pop
or
fnstsw
jecxz
call
cmp
mov
cmpsl
shl
cmc
jmp
pop
adc
jae
xor
push
clc
jg
rorl
add
insl
mov
add
jge
aas
fst
ja
add
jae
aam
mov
mov
stos
push
jl
jo
push
jmp
push
ret
movsb
shlb
mov
fsubrs
mov
inc
mov
mov
fidivrs
ljmp
sbb
mov
lcall
pusha
mov
cli
decl
cli
aas
jne
xorb
mov
fwait
lret
ret
pop
cli
pop
jle
push
icebp
push
in
test
stos
inc
stos
sarl
jp
pusha
inc
inc
decl
mov
dec
xchg
repz
dec
dec
push
dec
into
std
mov
mov
fisttpll
add
xchg
stc
inc
inc
cmp
dec
sub
inc
repnz
mov
xor
in
orl
sarl
mov
ss
stc
jno
or
scas
dec
add
add
repnz
dec
outsb
jno
jle
push
cmpsl
and
add
scas
out
sub
push
negb
push
sub
jno
in
stc
push
add
outsb
outsb
jmp
push
dec
movsb
outsb
xchg
out
cli
dec
lret
xchg
push
rorl
adc
inc
pop
and
jle
hlt
and
pop
lahf
push
dec
and
xor
xlat
xchg
jg
push
pop
movsl
inc
mov
inc
scas
fwait
push
lahf
inc
imul
lock
jbe
push
sub
andl
daa
xor
jne
mov
cld
adc
addr16
mov
fwait
int
cmp
jmp
ss
xor
cld
xor
xor
xor
adc
loop
mov
mov
push
aas
inc
mov
xchg
pushf
sub
test
enter
mov
mov
mov
mov
mov
div
sub
and
xor
adc
pop
mov
adc
sti
fdivp
rorb
popf
sahf
fadds
dec
int
std
pop
pop
rcll
or
jae
push
lds
iret
xchg
in
mov
cmp
scas
fbld
dec
pop
jge
xchg
sti
pop
aas
jae
cmpb
jmp
mov
xchg
scas
cmc
xchg
mov
jg
jmp
in
cmp
push
push
cmc
sahf
pop
cmc
lods
aas
pop
stc
loopne
cmpsb
sbb
sarl
and
pop
dec
in
sbb
mov
lret
jmp
xchg
jmp
out
mov
mov
jno
repnz
xchg
incl
sarb
jge
sub
stc
daa
daa
inc
adc
fucom
ljmp
ja
mov
lea
ror
in
cmp
jbe
addr16
lret
loopne
cmp
push
jmp
fs
idivb
push
push
scas
je
lock
movsb
push
lret
test
stos
mov
icebp
repz
cli
hlt
cmpsl
add
inc
and
mov
mov
jecxz
pushf
inc
call
negl
adc
jge
cmc
div
dec
mov
jbe
add
xor
or
je
cmpsb
mov
cli
divl
test
xchg
rcr
cld
int
out
jmp
fsubrp
out
inc
mov
dec
pop
adc
iret
jmp
lcall
cli
ret
test
aaa
cmpsl
mov
filds
jle
ds
cld
hlt
jge
out
pusha
pop
inc
mov
push
iret
in
repz
sub
outsl
sbb
repnz
cmpsb
out
or
fdivs
in
ja
fcomps
repz
inc
lahf
filds
pop
stc
push
filds
in
jnp
repz
sbb
sti
fcmovnu
outsl
fcomip
mov
or
lods
in
out
dec
jg
sti
jnp
sbb
rcr
cmpsb
idivb
lahf
jl
jnp
pushf
ds
mov
mov
add
jge,pt
rolb
xchg
lcall
hlt
jp
cli
or
addr16
mov
mov
gs
aam
enter
mov
icebp
je
stos
xchg
jle
sti
popf
inc
cs
mulb
jbe
repnz
rol
pop
fimuls
ja
add
cli
mov
jle
ljmp
out
push
mov
jp
stos
pushl
mov
push
mov
mov
jge
sahf
outsb
sti
fstp
cmpsb
ret
mov
cmp
fildll
sti
and
jmp
pop
cmpsb
in
ja
jmp
cmpsl
ds
jmp
enter
cld
inc
daa
sarb
fadds
inc
cld
sarb
jb
cmp
fmul
add
dec
ds
mov
cld
inc
adc
int
in
shld
negl
leave
jge
in
pop
aad
pop
xchg
gs
ret
inc
aaa
scas
pop
shll
movsb
adc
repz
lret
xchg
hlt
into
clc
xorb
xor
cli
and
dec
mov
mov
mov
stc
or
push
or
cld
sahf
lods
inc
ds
mov
out
and
mov
pop
scas
jecxz
enter
in
xchg
fdivl
popf
decb
lock
mov
push
popf
mov
sub
test
fwait
in
sarl
aaa
popa
push
mov
in
jmp
insb
jne
daa
cmp
stos
mov
ret
add
aaa
std
test
mov
leave
pop
nop
xchg
into
jmp
xchg
cld
int3
jns
mov
mov
cmp
repnz
pushf
movsb
jg
dec
mov
movsl
mov
lcall
sbb
push
mov
jae
pop
xor
nop
out
xchg
incl
mov
jg
repnz
mov
enter
push
mov
cmp
std
mov
in
push
test
pop
mov
mov
mov
push
xor
mov
adc
sub
jmp
jg
sub
nop
sti
pop
hlt
movsb
inc
stos
xchg
adc
std
fidivl
int3
lret
gs
cwtl
mov
sbb
repnz
dec
sub
mov
sbb
inc
push
fs
lret
popf
dec
sbb
mov
inc
xchg
lcall
movsb
cmp
arpl
fcoml
mov
cld
cmpsl
sub
lret
mov
mov
cmp
xchg
insb
loopne
stos
xlat
ljmp
leave
ljmp
test
adc
es
iret
cli
add
insb
idivl
and
int3
sar
push
in
push
sbb
sub
mov
cwtl
out
popl
popf
cld
daa
and
in
xlat
push
shlb
movsb
int
cmc
xlat
mov
stos
sar
fwait
lock
clc
hlt
jl
jmp
mov
xchg
imul
xchg
push
mov
mov
pushf
fcomps
pushf
out
aas
fnstcw
mov
loopne
inc
dec
outsb
lret
and
loopne
jbe
pushf
clc
jmp
inc
repnz
ficompl
mov
fisubs
test
lcall
ds
outsb
push
enter
pop
aas
into
xor
call
fldenv
push
push
int
int
ds
add
fmul
mov
int3
and
add
and
lret
xchg
lret
push
lret
cmpsb
leave
fwait
leave
xchg
add
cmp
leave
ja
jb
dec
leave
cli
mov
ja
push
enter
paddw
add
add
cmc
mov
sub
mov
test
lds
lds
lds
lds
nop
out
add
lds
mov
ret
adc
push
iret
ret
ds
cli
cmp
ds
ret
std
shl
mov
rcrl
rcll
sarl
pop
pop
insl
scas
jmp
addr16
out
incb
lcall
mov
insb
pop
pusha
jns
lcall
xchg
es
cltd
lock
push
cltd
icebp
out
add
std
sar
dec
mul
aas
testl
dec
push
mov
push
pop
mov
cld
call
jg
pop
cmp
push
mov
shl
clc
mov
jp
ljmp
leave
bound
sti
repz
and
es
xchg
call
popa
out
repz
lret
push
mov
pop
cs
mov
push
xlat
lock
sti
lods
decl
jae
mov
sub
and
dec
out
lock
adc
adc
mov
mov
jmp
adc
jle
inc
lock
jge
les
stc
pop
loop
inc
hlt
pop
mov
xor
ret
testl
fwait
dec
loop
xlat
outsl
loope
cltd
jmp
outsl
out
imul
jecxz
aas
adc
cmpsl
dec
inc
cmp
incl
dec
pop
std
pslld
pushl
mov
lea
push
or
jmp
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
pusha
mov
mov
xor
mov
inc
cmp
jb
popa
jmp
