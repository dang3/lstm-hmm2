out
call
in
sub
andb
push
push
push
push
xor
pop
lea
fcomi
stos
push
ljmp
pop
xor
jmp
mov
pop
ja
test
add
loop
mov
dec
gs
in
in
dec
mov
xor
cs
jbe
dec
mov
insb
jmp
mov
push
call
pop
mov
jg
mov
push
push
push
push
push
mov
push
push
call
mov
and
adc
clc
lea
push
add
in
and
call
jbe
adc
adc
pop
mov
or
adc
pop
pop
pop
leave
ret
add
aaa
fstpt
push
xor
push
push
push
cmp
test
je
push
jae
adc
xor
mov
add
push
push
push
or
fwait
mov
lock
add
clc
fcomps
push
pop
mov
pop
insl
movzwl
ljmp
addr16
or
or
cmp
xor
cmp
mov
in
je
push
adc
pop
or
xor
cmp
jne
hlt
jmp
push
testb
push
pop
inc
cmp
push
cmpl
sbb
push
push
or
scas
dec
mov
adc
mov
pop
cld
sub
ret
lock
ret
repz
sub
inc
scas
ja
gs
enter
clc
inc
xchg
xor
sbb
sub
cmpl
je
adc
adc
data16
add
or
push
cmp
les
dec
and
lods
jmp
pop
push
fs
popf
insl
ret
insl
negl
test
gs
into
loopne
add
outsb
cmp
daa
push
or
add
jb
jb
sub
outsl
or
addr16
popa
add
insl
cs
lret
in
and
inc
ljmp
jb
pop
in
jae
out
pop
out
inc
lock
lcall
repz
outsb
xor
imulb
cmpsb
imul
pop
push
xor
xchg
fstp
fsubr
xchg
rep
or
push
mov
pop
mov
out
jmp
pushl
adc
adc
push
mov
ror
mov
inc
inc
dec
dec
test
jne
push
pop
jmp
lahf
xor
push
push
push
inc
push
xor
push
add
add
cmpb
subl
rclb
imul
sub
push
cmp
lret
push
jbe
push
cmp
xlat
cmpl
jne
and
fs
mov
mov
push
push
adc
pop
fcmovnbe
xor
or
adc
add
dec
scas
sub
and
jb
aas
jmp
ret
pop
pop
pop
or
mov
inc
xchg
xchg
mov
out
test
push
lea
mov
sti
mov
mov
inc
jns
mov
adc
data16
popf
cs
mov
adc
xchg
adc
xor
mov
and
fcomip
arpl
and
push
call
or
das
cld
incl
push
push
xor
mov
test
je
enter
push
push
add
test
call
imul
adc
andb
xor
sbb
inc
sbbb
cli
mov
push
mov
mov
inc
inc
test
jne
pop
adc
aad
mov
cmp
xor
rcrb
repz
gs
push
add
je
movsl
pop
lcall
fstps
add
mov
or
jne
cmpsb
fwait
lahf
lods
insb
inc
or
test
add
xchg
lret
inc
add
stos
mov
ror
in
test
push
push
test
inc
pop
jecxz
or
pop
fcmovnbe
fsincos
xor
loopne
mov
push
jb
xlat
sbb
add
mov
mov
add
dec
push
mov
in
mov
std
cmp
cmpsb
test
aaa
invd
aaa
sub
data16
xchg
xchg
jb
inc
into
loopne
xchg
jne
xchg
outsb
pushf
pushf
insb
nop
mov
fstpl
pushf
in
loope
or
int3
cld
mov
xchg
or
clc
push
jg
mov
push
push
aas
cld
and
mov
orb
mov
and
insl
adc
nop
scas
jne
push
adc
call
sbb
jae
ret
ss
test
dec
inc
push
push
push
adc
adc
inc
push
ret
dec
cmpl
ss
or
ret
in
pop
xchg
imul
addl
stc
sbb
cmpsl
test
je
les
lcall
jle
stc
loopne
jl
inc
or
xchg
lahf
adcl
pop
jb
cltd
aam
cld
xor
gs
or
pop
inc
mov
sbb
inc
ret
int3
out
lock
and
add
flds
add
or
adc
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
mov
add
addr16
jl
pusha
xor
lcall
pop
pushf
stos
mov
imul
push
pop
jbe
rcrl
xor
dec
adc
xor
jmp
adc
dec
ret
arpl
incb
pop
add
outsl
arpl
push
call
ja
push
xor
inc
bound
push
jb
jbe
insb
fildll
lahf
gs
jae
jae
gs
xor
pop
or
add
std
ljmp
and
jo
push
outsl
imul
and
add
rorb
sub
ficoml
xor
pop
arpl
fs
insb
cmp
sub
push
in
mov
fs
cmp
mov
test
pushf
add
pop
lea
or
xchg
push
jle
nop
add
inc
dec
mov
leave
dec
nop
cmp
dec
inc
dec
mov
inc
nop
push
xchg
dec
adc
dec
push
push
pusha
ljmp
add
add
nop
add
xor
mov
add
mov
add
add
pop
mov
int
mov
jg
push
jb
addr16
insl
and
outsb
outsb
outsl
je
bound
jb
outsb
and
pusha
mov
and
fs
adc
jp
fwait
out
mov
add
jl
push
setb
add
jle
out
add
xor
add
push
sti
mov
cld
daa
mov
mov
pop
jmp
push
stc
or
out
dec
push
imul
mov
push
cmp
add
or
push
xchg
xchg
out
into
or
add
add
mov
loope
add
pop
cmp
jbe
inc
and
xor
pop
in
mov
add
jo
dec
dec
pop
dec
popf
leave
pop
fs
in
and
mov
xor
add
bound
mov
sbb
xlat
push
andb
shrb
popa
je
mov
cld
fs
loopne
inc
push
push
pop
mov
xor
mov
add
jae
imul
sbb
jb
insb
outsl
arpl
sti
add
dec
mov
push
in
mov
movsb
mov
cmpsb
imul
ss
mulb
cmpsb
fadd
int3
mov
fnstenv
fsubr
add
cmpsb
imul
insb
lcall
cwtl
xor
shll
mov
imul
cmpsb
imul
imul
dec
shll
xor
lahf
mov
lahf
outsb
sarl
add
pop
cmpsl
pop
lcall
add
adc
and
cmpsb
imul
add
popf
xchg
or
dec
shll
inc
dec
xor
shll
bound
lret
mov
rorl
cmpsb
mov
je
mov
push
inc
xor
rcl
sub
sbb
add
neg
incb
and
xchg
mov
pushf
les
push
add
jge
addb
out
enter
enter
jo
mov
incl
sbb
sub
je
jb
gs
mov
xchg
dec
mov
xor
xchg
adc
popa
fs
sub
dec
jo
outsb
aaa
add
insb
inc
adc
dec
dec
dec
and
push
and
add
sub
addb
or
and
fxch
fisubrs
add
aaa
sbb
imul
insb
add
push
pop
pop
addl
or
out
add
lods
insb
addb
test
and
negl
das
pop
add
mov
ja
dec
cwtl
sub
sbb
aas
add
mov
pop
rorl
incl
and
inc
inc
leave
test
call
add
jecxz
or
sbb
pop
inc
adc
sub
pop
test
xchg
inc
pop
ret
push
dec
cmpsb
fdivl
fs
das
xor
orl
cmc
inc
decl
push
add
outsb
jmp
jae
int
xlat
adc
je
jne
jb
gs
sbb
scas
inc
or
push
sub
std
incl
mov
aas
push
inc
jb
push
and
ja
or
push
fisttps
pop
and
addr16
xor
mov
pop
popf
pushf
mov
pusha
lea
lret
mov
mov
pushf
mov
pushf
adc
jmp
arpl
push
rorb
scas
jnp
outsb
dec
sub
int
mov
push
push
dec
je
jo
clc
or
gs
inc
stos
mov
fists
lods
push
jns
scas
sbb
pop
xchg
je
outsl
outsb
xor
adc
add
pop
mov
je
jo
jne
add
pop
pop
mov
add
jb
stc
decl
popa
insl
ss
dec
inc
push
push
inc
push
inc
pop
dec
imul
outsl
data16
cmpsb
outsl
ja
and
pop
inc
jne
jb
je
jge
insl
mov
jae
pop
dec
mov
inc
popa
jb
pop
gs
ja
dec
insl
sbb
cs
mov
lock
sbb
pop
clc
pop
adc
enter
mov
lea
loop
shr
jmp
add
xchg
lea
add
lea
das
mov
mov
scas
add
and
push
push
push
call
div
std
inc
mov
dec
adc
push
push
into
sbb
leave
push
sti
adc
push
pop
pop
pop
sbb
rorl
add
stos
rolb
lcall
sbb
enter
sbb
fmuls
in
push
enter
xchg
add
mov
pop
call
dec
test
adc
xchg
adc
jo
jne
push
rep
popa
in
insb
pop
arpl
jae
cs
imul
cmp
inc
arpl
sub
add
pop
sub
lret
ret
int
mov
stos
clc
mov
jg
push
push
push
addr16
push
pop
jle
ja
pop
fs
out
mov
dec
dec
outsb
jnp
lods
inc
aaa
test
adc
jb
pop
pop
mov
pop
lahf
pushf
mov
sbb
cli
sub
mov
add
in
push
push
loopne
testl
mov
push
push
push
mov
cmpl
push
jge
push
mov
push
mov
out
fistpl
xor
or
adc
fadd
out
clc
outsl
mov
push
push
push
call
in
add
jnp
jg
decl
ljmp
or
or
movb
mov
fistpll
sti
push
push
xor
in
mov
mov
sbb
jne
inc
xchg
dec
cld
ljmp
mov
jnp
in
or
mov
xor
push
lock
rcr
or
subb
cwtl
loop
mov
or
or
add
sub
or
or
push
mov
adc
adc
push
call
xor
sbb
push
push
jbe
mov
lock
into
fidivrs
pop
adc
mov
andb
inc
or
fisttpl
xor
aas
test
pop
cmp
pop
jl
push
xor
sub
nop
mov
mov
add
cmpw
jne
dec
cmp
lret
mov
loopne
je
add
scas
lods
xor
xor
adc
adc
pushf
outsl
and
adc
dec
adcl
sbb
setno
int
xchg
push
jne
or
xlat
push
int
push
push
or
out
outsl
lcall
push
call
mov
cmp
jg
add
jge
push
push
push
pusha
lock
push
movups
push
push
and
adc
sub
xchg
or
dec
mov
pop
sbb
call
push
cwtl
sub
or
and
decl
cmpl
mov
in
mov
movl
jge
lea
movsl
add
mov
movsb
mov
inc
enter
pop
mov
push
fisttpl
and
rep
mov
dec
dec
mov
mov
or
enter
rcrl
or
mov
js
push
push
push
jmp
dec
add
cmp
andb
ja
jmp
das
pop
adc
mov
js
call
jbe
cwtl
or
xchg
push
div
add
push
inc
clc
push
fdiv
lahf
push
sub
or
jb
pop
pop
leave
addl
inc
ds
adc
and
add
lea
or
insb
in
and
or
xchg
jne
call
or
push
adc
fcmovne
in
lock
pop
jmp
adc
add
shl
push
cwtl
adc
cmp
daa
adc
lods
pop
push
fidivrl
mov
fisttpl
or
jle
xor
cmp
jle
clc
push
dec
sbb
in
ja
fsubr
mov
or
adc
je
test
cmp
lock
mov
jg
mov
and
jne
cmpl
daa
incl
mov
cmp
jne
xor
fnsave
clc
xor
das
lock
int3
clc
add
add
popa
hlt
js
rcrl
inc
cmp
mov
out
xchg
and
xchg
jmp
inc
bound
mov
ja
jne
cmpw
dec
ret
ja
add
testb
add
sbb
mov
shrl
mov
cmp
mov
aaa
ret
add
shl
out
lock
loop
push
je
incb
cmp
pop
and
jb
in
mov
fisttps
push
add
xor
sub
insl
loopne
or
xchg
orb
mov
stc
adc
jg
pop
pop
sbb
jmp
add
lcall
add
add
shl
cmp
mov
aas
inc
xor
adc
or
int3
nop
pop
and
xor
adc
adc
stc
repz
adc
pushf
push
add
cmp
call
xor
adc
xor
adc
fcoms
mov
imul
loope
std
fs
ja
xor
dec
jbe
cmpb
jne
cs
inc
cli
xor
enter
int
incl
imul
add
andl
push
dec
mov
mov
ljmp
or
lods
mov
popa
adc
and
push
add
sub
rorb
inc
cmp
jecxz
decl
shr
lea
jae
incl
cmp
pop
lret
shr
add
imul
mov
outsl
sbb
dec
or
stos
or
inc
mov
mov
jne
or
sbb
fnstsw
mov
mov
add
loop
or
adc
mov
mov
ret
add
jne
cmp
push
js,pn
flds
push
add
pop
decl
push
pop
mov
adc
jbe
outsb
bound
push
xchg
pop
jbe
or
cmp
jle
sti
not
and
push
jl
and
or
add
lea
pop
ljmp
shl
or
mov
idivb
fiaddl
pslld
cli
not
and
testl
lea
test
or
js
mov
repnz
aam
or
fisubs
fimull
inc
in
fldl
lea
pusha
stc
outsl
lods
sti
xadd
adc
pop
inc
sub
mov
and
not
aaa
xlat
fstpl
inc
fiadds
psllq
sti
outsl
in
into
mov
shr
or
add
dec
daa
idivb
mov
jg
push
fisttps
jl
sbb
mov
push
lods
loop
mov
push
push
sub
movd
not
and
shlb
adcb
sub
xchg
rcr
mov
das
outsl
lret
jecxz
sbbb
xlat
loopne
fiaddl
pop
popa
xlat
or
mov
cmp
sbb
inc
xor
fisubl
in
sub
jl
or
das
insb
pop
int3
xor
add
xchg
pop
xchg
lods
add
out
xor
add
mov
adc
jne
les
repz
lret
pop
fcomp
cwtl
subb
addl
repz
sbb
add
rcr
das
pusha
sbb
stc
test
das
pop
scas
testl
mov
pop
les
subb
lret
sbb
add
idiv
loop
movups
sarb
sub
sub
fcom
out
repnz
or
fdivrs
lods
jne
loop
mov
int
xor
les
adc
xchg
xor
or
or
xchg
jno
std
stos
lods
pop
popa
sti
mov
cld
add
and
pop
mov
enter
das
push
mov
pop
jae
pushf
cmpsb
pop
mov
xor
xchg
and
xchg
or
std
outsl
in
mov
popa
adc
add
or
mov
ljmp
and
aad
popa
imul
aam
pop
bound
sbb
add
shlb
clc
jg
jge
jbe
repz
inc
mov
rclb
push
fadds
inc
imul
hlt
push
and
clc
jb
xchg
out
fstp
repz
pop
pop
es
adc
repnz
shll
and
lock
call
lock
icebp
imull
mov
mov
hlt
pop
adc
call
pusha
mov
lods
xlat
lods
mov
in
cld
mov
adc
inc
add
jo
and
in
pop
test
out
fcoms
push
clc
cmp
into
pushf
jecxz
mov
fnstcw
shll
out
adc
scas
add
mov
mov
mov
out
loope
cld
xchg
xor
loopne
ret
inc
enter
mov
or
mov
push
fbstp
inc
fimuls
data16
sbb
push
cmp
popa
nop
lods
popf
gs
call
mov
loop
shr
or
xlat
push
fisubrs
fdivs
test
lods
pop
add
pop
das
jbe
clc
mov
daa
outsl
pop
lods
cmp
daa
sub
aad
flds
into
shrl
outsl
adc
out
js
push
dec
fisttps
sub
adc
or
xor
test
hlt
inc
cmp
jmp
add
pop
jb
lods
test
xor
mov
xor
sahf
xchg
sub
mov
and
insl
adc
fwait
fisttpl
mov
repnz
or
mov
std
mov
mov
pop
fcompl
inc
inc
ljmp
test
mov
fimuls
cltd
mov
sub
loop
fmuls
pushf
push
int3
pop
pusha
dec
mov
mov
mov
cli
xor
push
jo
gs
mov
out
or
mov
jle
sub
xchg
out
testl
imul
cli
daa
mov
icebp
mov
lret
fimuls
test
fwait
outsb
lods
push
xchg
jae
adc
fidivs
test
aaa
or
cmp
iret
mov
or
push
aas
stc
or
cmp
aam
cltd
js
pop
mov
push
les
in
jle
xlat
sub
divl
idiv
ss
in
fxch
sbb
jl
pop
je
sbb
xor
mov
fildll
ljmp
sti
mov
stos
mov
fcmovnb
and
stos
rcrb
sbb
push
or
in
inc
ret
sbb
jl
inc
int3
or
cwtl
sub
sub
or
mov
jns
and
fs
jb
hlt
andl
cld
cltd
or
lcall
lea
cmp
pop
pop
gs
sbb
ror
fwait
rcrl
or
push
inc
jae
sub
fbstp
jno
iret
das
xor
dec
jge,pt
out
call
movq
mov
adc
rcrl
test
xchg
cs
sub
out
jl
jg
call
outsl
jo
mov
dec
sbb
int
jle
push
xor
sbb
out
jecxz
andl
mov
push
adc
add
mov
ficomps
cmpb
lds
imul
xlat
sbb
insb
lods
mov
xor
out
loopne
jns
mov
ret
rcl
sub
pslld
ret
repz
pop
pop
cld
data16
xor
mov
dec
jg
sbb
out
xlat
pop
add
pop
movsb
mov
icebp
push
fisttps
push
mov
test
call
push
mov
mov
outsl
enter
dec
cld
cmpb
sarl
inc
and
sub
push
push
push
ds
or
inc
mov
mov
js
inc
xchg
adc
insb
xlat
pop
sbb
lea
xchg
lahf
push
pop
inc
addr16
iret
jge
or
jb
adc
or
jae
mov
add
sbb
cmp
jne
insl
lcall
cmpb
lea
je
push
pop
lret
stc
sub
dec
dec
xchg
and
fbstp
imul
push
fmuls
rorl
push
jl
cltd
std
lea
pop
fcompl
jmp
and
rep
sbb
dec
sbb
mov
pushf
cmpsb
mov
outsb
sbbl
call
sbb
pop
repz
ficoms
push
cld
call
xor
sub
fwait
or
in
push
mov
dec
cmp
out
or
testb
inc
orl
push
clc
pop
adc
jle
add
outsb
int
fdivrs
int3
push
loopne
jae
int3
rolb
aam
call
test
dec
std
call
sub
imul
lahf
iret
out
scas
push
or
call
gs
jl
out
das
lock
jo
hlt
or
negl
fldcw
mov
out
fisttps
mov
sbb
js
inc
pop
sarb
jnp
and
lods
mov
mov
lods
fmuls
mov
lods
cwtl
into
adc
outsb
loopne
mov
jo
jbe
fmull
inc
push
pop
jmp
ds
fneni(8087
call
sbb
lcall
in
fildl
add
dec
out
push
out
push
lock
das
xchg
dec
icebp
inc
repnz
mov
mov
das
rolb
push
xor
sahf
push
push
pop
or
dec
sub
add
rcrb
aam
sub
insl
test
jecxz
hlt
les
pushf
subb
imul
rorb
leave
xor
and
jnp
call
data16
sbb
push
push
add
adc
add
adc
adcb
push
jno
es
addb
clc
xor
insl
push
xor
test
or
imul
popa
negb
or
xor
xor
pop
sub
adc
jnp
pop
push
mov
and
mov
cmp
mov
adc
mov
mov
popl
push
push
mov
mulb
lock
adc
test
clc
sti
ret
cmpsb
popa
and
shl
orb
sub
test
dec
pop
cltd
adc
ss
sbb
inc
sbb
mov
xchg
inc
lods
mov
rolb
pusha
xlat
insl
mov
sub
add
hlt
push
shlb
xchg
insl
pop
call
mov
jmp
mov
js
inc
inc
inc
add
adc
add
xlat
pop
adc
enter
and
shrl
rorl
and
xchg
push
andw
insl
and
subl
lock
push
dec
cld
pop
jb
bound
lahf
push
push
movsl
adc
mov
cmp
cmp
mov
out
subb
jo
add
dec
dec
pop
cmp
pop
push
mov
mov
add
cmp
das
fsubrl
mov
add
xchg
push
push
int3
enter
push
mov
enter
push
aad
push
aam
sbbb
push
ficompl
cwtl
cmp
into
ja
movl
sub
cs
cld
into
dec
adc
or
add
sahf
lods
adc
jb
adc
push
add
xchg
pop
sbb
sub
add
sbb
sbb
cmp
clc
add
push
call
pop
mov
xor
mov
cmp
adc
clc
inc
adc
fmull
pop
cmp
push
lcall
clc
xor
lea
push
jo
subb
pop
dec
orb
jb
cld
movl
inc
call
rclb
xchg
and
push
je
js
ljmp
or
dec
xorb
or
inc
add
je
testl
rcr
lock
adc
hlt
loope
lods
mov
pop
jbe
pop
roll
sbb
stos
int3
iret
ret
mov
arpl
rclb
fcompl
or
roll
and
lock
cmp
hlt
ret
fdivl
sub
inc
adc
xchg
dec
jae
inc
jmp
fnstenv
rcrb
fwait
insb
jle
test
xchg
in
push
fcomps
mov
xor
and
mov
repnz
push
push
nop
rolb
loope
lret
test
adc
mov
iret
scas
push
and
push
fs
or
mov
daa
mov
fdivr
xchg
and
pushl
int
int
cmp
dec
mov
sub
fdivr
cmp
add
or
sti
sub
mov
in
push
cmp
aad
fistpl
idivb
add
xor
mov
jl
cmp
rcrl
jmp
insb
iret
mov
mov
push
cwtl
out
mov
je
cmp
mov
ret
jne
cmpl
push
icebp
cmp
ss
push
xchg
dec
xchg
data16
or
pop
mov
mov
cmp
adc
pop
adc
lods
sti
mov
pop
pop
ss
pop
jmp
call
shrl
mov
cmpb
iret
or
je
jmp
xor
idiv
xchg
or
push
sub
pop
dec
mov
lret
push
cmp
ss
mov
test
imul
push
popf
fstpt
push
push
pusha
stos
or
test
jo
push
xchg
inc
sbb
jg
mov
bound
scas
dec
or
lret
scas
insl
mov
mov
mov
mov
lret
in
mov
mov
mov
mov
jbe
imul
lret
mov
fsts
rcl
js
in
mov
insb
aam
aad
ss
imul
fsubrs
and
fcmovu
gs
jbe
xor
loopne
test
loop
jecxz
xchg
fldt
push
out
dec
out
call
jmp
insl
jae
shll
je
outsb
mov
sub
or
bound
ret
rol
add
xor
insl
xlat
xor
enter
lret
cmp
pop
xlat
sub
int3
hlt
xchg
push
xchg
xchg
mov
lcall
mov
mov
jnp
mov
mov
sub
movsb
inc
add
lcall
test
pop
mov
ds
hlt
cli
jns
lea
dec
negl
mov
push
je
shl
pop
loop
daa
cwtl
or
pop
sub
adc
add
xor
sbbb
pop
clc
cmp
jmp
lods
add
loopne
idivb
gs
leave
data16
mov
loopne
lret
mov
mov
dec
rcrb
adc
xchg
hlt
push
enter
jnp
adc
adc
cmpl
jg
lea
xor
clc
sub
push
inc
jge
sti
imull
pop
push
adc
or
shl
and
imul
shll
pop
cli
inc
and
jb
ret
sbb
daa
xchg
lds
inc
sub
divb
scas
nop
jmp
aaa
sbb
sbb
punpcklwd
nop
sbb
mov
pop
sub
aas
mov
nop
add
jns
cmp
loopne
cltd
fwait
push
hlt
cld
adc
add
arpl
inc
sub
or
sub
test
data16
jle
stos
aam
jnp
es
fists
ds
ja
addr16
push
bswap
shrb
lock
je
shr
cld
xchg
fs
outsl
fs
jg
inc
dec
adc
and
adc
stos
fadd
xchg
loopne
and
in
inc
loope
shlb
and
aas
insb
icebp
clc
inc
mov
mov
push
cmp
sbb
sub
dec
call
push
lods
xchg
jns
std
aad
inc
loope
sub
inc
jecxz
mov
insl
xchg
addr16
pusha
xchg
cmpsb
inc
out
popa
mov
dec
or
loop
test
je
adc
mov
jo
mov
std
incb
rcl
ljmp
inc
xchg
ljmp
addr16
stos
adc
out
push
out
pop
add
cmpl
lea
stc
lret
jne
push
dec
jmp
adc
clc
or
sahf
mov
add
xchg
aaa
jbe
repz
adc
jge
in
nop
sbb
test
push
mov
cwtl
test
sar
cmp
int
mov
cmp
cmp
bound
inc
mov
push
push
cmp
jae
push
call
insl
mov
push
cmpl
pushf
je
incl
ss
cmp
cmp
mov
lret
add
sub
adc
adc
inc
cmp
adc
mov
jbe
jmp
and
imul
push
and
xlat
jmp
push
add
scas
leave
insb
hlt
adc
mov
cld
call
xchg
ficoms
mov
call
sbb
fsubrl
xchg
jl
imul
popa
mov
fcmovb
dec
pop
ret
mov
xchg
jnp
pop
or
mov
test
int3
dec
imul
jp
imul
dec
push
insl
mov
lcall
fidivl
aaa
fdivs
fildl
fstp
jae
fbstp
dec
shrl
xor
xor
int
sbbl
sti
cld
imul
std
insl
jmp
lret
cmpsb
imul
ss
shll
mov
lcall
pop
pop
pop
movsb
imul
fldt
lret
in
out
mov
xchg
je
push
xor
cmpsb
jmp
xchg
icebp
shll
repnz
pop
mov
cli
mov
sbb
or
pop
xor
cmp
addr16
add
sbb
pop
add
lea
cmp
push
bound
add
hlt
add
dec
mov
sbb
xor
sbb
test
fsubs
push
inc
xchg
clc
or
sub
gs
or
push
out
lcall
imul
push
imul
mov
cs
ja
jne
repnz
cs
mov
je
int
dec
es
add
xchg
push
add
test
testb
cmp
mov
nop
scas
xchg
inc
loopne
cmp
out
mov
push
push
fsubrl
sbb
pusha
mov
stc
and
push
test
pop
and
pushl
dec
mov
mov
gs
popa
push
dec
rorb
int
popa
es
cmp
les
mov
and
ret
xor
and
call
add
test
fucomi
lea
in
xchg
cmp
and
std
and
cmp
and
rcll
push
lret
mov
push
jnp
jns
repnz
xor
inc
in
in
and
neg
jb
mov
sub
pop
push
insb
outsl
insl
push
adc
dec
in
push
or
pop
mov
push
jne
xor
and
pop
pop
adc
ljmp
ret
jmp
es
push
mov
lock
mov
jb
lcall
mov
lret
cmpsb
imul
dec
shll
mov
insl
lcall
rol
xlat
xor
mov
ret
addr16
lcall
lret
fs
shll
insl
int
das
into
iret
rcl
dec
xlat
jne
rcl
adc
or
pop
xlat
je
shll
xchg
dec
xlat
je
fstp
sbb
loopne
loope
fwait
cmpsb
imul
pop
out
ss
shl
call
jmp
insb
mov
sbb
out
fs
es
dec
shrl
outsb
repnz
shll
inc
inc
cmp
xor
js
xchg
mov
xor
pusha
mov
adc
sahf
inc
add
and
int
jmp
jae
add
cld
or
mov
enter
clc
adc
push
cmp
aaa
nop
inc
call
mov
push
mov
daa
dec
pop
xor
pushf
shl
loop
xor
sbb
loopne
pop
call
sbb
aaa
mov
sbb
or
dec
fcoml
into
xchg
fcmovnb
mov
movzbl
and
setno
sbb
btc
bsf
mov
pushf
push
xchg
mov
rolb
mov
ljmp
push
roll
inc
pushl
pusha
std
cld
cld
outsl
shrb
mov
lods
andb
adc
and
add
or
and
inc
stos
ficoml
xchg
mov
sbb
sahf
sbb
call
fmul
jecxz
and
sub
les
lods
mov
ds
cmpsb
mov
mov
cltd
idiv
mov
test
jne
adc
fisttps
cmc
add
xor
push
cld
call
adc
and
xlat
int3
adc
adc
scas
push
mov
xor
adc
add
nop
mov
inc
test
push
clc
adc
inc
or
mov
cs
push
sub
aas
sbb
add
insb
adc
push
cmp
and
je
in
jl
mov
jbe
mov
mov
ja
repnz
mov
cs
push
push
push
and
fildll
movsb
scas
dec
pushf
repz
popl
pusha
in
and
lret
scas
incl
jns
and
out
xchg
test
sbb
movsb
iret
add
in
pcmpgtd
xlat
xchg
ror
xor
rcrb
sub
sbb
xor
stos
xchg
filds
jecxz
int
push
arpl
dec
cwtl
or
xor
pop
pusha
jmp
mov
inc
in
test
mull
sti
bsr
add
sub
jns
neg
loop
decl
xor
shl
or
mov
rol
gs
jbe
outsb
imul
xor
shl
mov
test
add
sub
mov
call
aam
add
sub
pushf
sbb
fcomip
xchg
jg,pn
pop
jae
mov
clc
add
clc
stc
clc
jmp
mov
jmp
sbb
fwait
lcall
push
fsubrl
mov
cld
cmp
test
cmc
bswap
test
clc
jbe
pushf
jecxz
add
mov
pusha
cld
pop
push
in
inc
xlat
sbb
inc
iret
jbe
push
push
imul
call
jns
and
shrd
shr
int3
aad
enter
mov
mov
popf
test
aaa
add
movsl
repnz
insl
mov
or
or
imul
call
fnstsw
jmp
enter
out
cmc
fwait
jnp
jo
int
out
xor
jge
push
icebp
mov
add
call
jp
fisubrl
imul
ss
pushf
or
das
cmp
push
outsl
mov
or
cmpl
fscale
fucomip
mov
sarb
jbe
pop
lea
insl
sbb
sbb
sbb
lret
sbb
jae
cmc
cli
lds
sti
adc
xchg
push
sub
popf
stos
inc
outsl
or
test
pusha
iret
inc
xlat
adc
xor
mov
fs
inc
pop
push
sbb
int3
jae
hlt
cli
sub
add
call
mov
pop
jmp
scas
xchg
add
js
call
adc
mov
add
enter
hlt
sti
arpl
pop
sub
stos
mov
call
lds
or
int3
push
push
flds
lea
adc
emms
push
das
fs
sub
aas
cmp
cmpl
and
mov
adc
push
rolb
nop
movsb
in
fsubl
mov
or
or
add
dec
jbe
ret
jg
pop
lret
movsb
mov
push
cmp
push
mov
iret
mov
jmp
or
call
addl
mov
fdivl
or
sbb
ret
push
xor
inc
adc
inc
repz
adc
cmp
pop
repz
inc
outsb
stos
xchg
loopne
stc
xor
mov
mov
mov
jbe
push
mov
imul
push
or
mov
cmp
je
push
or
cmp
xorl
aas
fsubs
push
dec
fdivrs
fidivs
dec
aaa
cmp
sbb
cmp
je
sbb
add
and
push
sub
mov
or
sbbl
sbb
les
leave
icebp
push
lcall
sub
clc
ds
dec
adc
out
loope
mov
in
pop
add
jo
inc
mov
pop
add
add
pop
xchg
gs
rcl
fcomp
in
or
rorl
dec
push
bound
push
mov
pop
cmp
jo
xor
mov
fcoms
aad
sub
shrb
adc
je
fcmovu
mov
or
mov
pop
jb
dec
data16
inc
jl
pop
mov
pop
mov
adc
and
push
jnp
mov
test
cltd
mov
mov
jle
dec
sub
add
movsl
and
imul
mov
adc
xchg
mov
xlat
inc
and
clc
dec
xor
sub
sbb
cmp
arpl
sbb
push
ret
stos
push
or
push
push
fwait
add
sub
xchg
adc
xor
push
sub
mov
out
dec
dec
dec
dec
mov
lret
mov
push
cs
insb
xchg
and
sub
test
gs
jb
dec
shll
gs
jb
xor
shrl
gs
imul
pop
xchg
gs
je
jo
jo
xchg
in
gs
gs
out
pop
xchg
gs
inc
xchg
inc
int
imul
xor
xlat
xor
popf
sahf
lahf
mov
dec
lcall
dec
je
sbbb
fs
mov
stos
notb
jmp
mov
sub
jne
jae
gs
xorb
mov
lods
je
pop
xchg
gs
outsl
outsb
outsb
gs
pop
xchg
arpl
mov
dec
cs
xchg
in
sbb
sbb
hlt
mov
out
mov
add
jg
pop
insl
or
fisubrs
lea
sbb
jmp
jg
adc
inc
mov
add
inc
pop
cmp
sarb
sub
adc
cmp
repz
sbb
push
jmp
add
push
pop
push
pop
bound
fwait
stos
sti
je
push
lfs
add
jns
mov
js
xlat
je
insb
movsl
sti
in
inc
inc
je
lret
lods
cmpsl
fldcw
cld
repz
negb
roll
pushf
add
push
sbbb
push
jne
pop
cs
lock
daa
ror
mov
xchg
inc
add
pop
fwait
and
add
mov
add
push
add
lock
in
xchg
sbb
sbb
iret
fistpll
push
lsl
add
xchg
inc
push
add
inc
icebp
sub
movsl
roll
out
sbb
lcall
scas
sbb
push
jmp
jmp
or
cld
inc
adc
jne
je
pop
mov
sbb
icebp
shl
shl
or
das
mov
adc
dec
jnp
sbb
jno
ficompl
and
fisttpl
and
cli
xorl
adc
push
dec
loopne
sbb
fisubs
jno
andl
mov
cmpsb
jnp
sub
sub
int
fsubl
aaa
cs
mov
ret
jle
xor
pushf
xor
jmp
jle
mov
inc
or
jmp
test
pop
xor
cmp
jle
jg
movl
sbb
call
inc
call
add
gs
stos
dec
iret
inc
in
xor
aas
push
dec
xchg
gs
gs
arpl
imul
cmpsb
imul
push
cmp
sbbb
mov
loop
mov
test
push
addl
insl
push
push
cld
add
pop
push
pop
jb
mov
xchg
out
and
push
imul
sbb
std
fldenv
inc
insl
in
neg
sbb
add
inc
mov
adc
adc
cmpsb
test
xor
add
and
or
sub
push
push
sub
lods
mov
xchg
je
jle
nop
add
in
in
je
sbb
je
or
loopne
in
jle
adc
adc
adc
dec
cmp
call
jns
out
sub
mov
aas
adc
cmp
in
jo
jb
in
add
call
mov
cmpsl
in
popa
je
mov
lret
imul
mov
es
hlt
insb
cmc
imulb
mull
out
stc
cli
sti
stos
pusha
movsb
nop
cld
xchg
and
add
or
cld
pop
jne
add
arpl
and
cmp
pop
pop
imul
xor
add
jae
adc
sbb
or
sahf
mov
sbb
or
push
push
push
cld
pop
clc
push
pop
push
ficoml
das
cs
pusha
inc
sahf
inc
cli
dec
add
sbb
mov
push
fsubl
pop
bsr
push
sub
mov
mov
cmp
sub
xlat
xchg
int
and
in
cmp
push
and
int3
outsb
sbb
adc
push
dec
lock
cmp
roll
push
adc
adc
jne
dec
jae
call
test
or
jmp
push
mov
add
adc
and
cli
push
pop
add
jl
sbb
aas
popa
arpl
imul
movsb
imul
dec
shll
mov
mov
inc
mov
sub
mov
je
outsl
outsb
mov
lret
jb
js
gs
mov
lret
je
outsl
outsb
es
mov
sbb
in
pop
xchg
popa
arpl
gs
pop
xchg
cmp
jb
shrl
loope
jns
in
out
cmp
xor
call
sub
rcrb
ret
pop
shll
jp
sbb
dec
outsb
jbe
stos
outsl
outsl
jo
je
add
jns
pop
mov
aam
adc
push
movsb
xor
std
lods
inc
jno,pn
push
adc
mov
sar
pop
push
pop
and
sbb
push
or
jmp
add
add
and
pop
pop
fdivrl
fdiv
lods
sub
lcall
push
stos
sbb
pop
add
inc
cmp
fs
mov
addr16
adc
clc
pop
xor
stc
cli
sti
cld
negb
cmp
add
jne
cld
mov
or
mov
jbe
pop
lcall
inc
mov
xchg
fcoml
leave
enter
or
xchg
fdivrl
dec
inc
mov
pop
fcoml
xchg
cmp
cltd
je
mov
in
sti
mov
je
and
sbb
pop
xor
sbb
push
incl
lods
sbb
jmp
adc
xor
insl
or
mov
mov
mov
pusha
test
jecxz
xchg
shlb
leave
adcl
push
pop
clc
pop
lcall
jmp
call
lods
or
push
sbb
call
movl
mov
cmp
fstps
inc
ret
push
lock
popf
cmp
push
das
push
test
in
add
loopne
mov
fidivl
in
xor
push
daa
daa
aad
sbb
arpl
daa
shll
mov
lret
mov
insl
bound
jne
dec
pop
push
insl
aad
fdivs
cmp
cs
push
jo
gs
cwtl
adc
or
mov
addb
jg
jbe
xchg
inc
cld
in
mov
cs
insb
out
jns
imul
inc
lcall
sbb
pop
lods
hlt
cmc
push
imull
ret
test
mov
xchg
push
sbb
outsb
mov
cs
inc
cltd
sbb
inc
cmp
jb
mov
popa
movq
outsb
mov
add
ljmp
stos
pop
movsb
dec
adc
sub
inc
nop
ja
xor
xchg
fcmovne
xor
fsub
fs
dec
ror
jb
arpl
jb
xor
shll
jbe
outsl
or
aaa
insl
jne
aas
mov
call
cmp
fsubl
dec
je
push
push
daa
pop
lret
mov
lcall
xchg
aaa
test
mov
xor
cmp
xchg
pusha
cmpb
xor
mov
inc
outsl
and
inc
jne
add
fisubrs
and
outsl
sub
push
sbb
outsb
adc
stos
jp
add
sahf
shrb
dec
and
lds
sbb
test
out
mov
xchg
xchg
and
push
push
xchg
in
adc
psubd
bound
pop
and
and
inc
xor
or
mov
inc
loope
rol
sbb
mov
nop
outsb
mov
sbb
rol
aaa
and
sbb
outsb
push
xchg
add
les
nop
nop
or
mov
sbb
mov
hlt
jp
and
jo
movsb
das
cmc
hlt
insb
cmp
cmp
lock
adc
and
fdivs
arpl
xchg
add
sub
adc
outsb
je
adc
push
pop
lds
xchg
hlt
push
les
movzbl
nop
inc
push
sbb
div
jge
call
cmp
andb
cltd
scas
add
xchg
loop
jge
cmpl
add
add
push
push
mov
shll
push
xor
shll
cs
or
inc
gs
xchg
add
fs
je
cmpsb
imul
add
jb
mov
icebp
jne
or
cltd
loopne
cltd
iret
pop
cwtl
xchg
xor
and
icebp
adc
dec
mov
jne
insl
sti
pop
xchg
cmpl
sbb
xchg
inc
xchg
ret
ret
ja
mov
adc
mov
rcll
mov
sub
cmp
pop
js
jbe
dec
cmp
test
insb
adc
shlb
insl
inc
in
or
jp
xchg
das
movl
sub
push
add
sbb
mov
mov
push
push
add
dec
cmp
xchg
int
pop
fsts
and
sbb
sbb
mov
sbb
jmp
stc
fimuls
lea
xlat
lea
mov
dec
jo
push
xor
in
pop
xor
jp
push
mov
cs
into
iret
jo
cmp
das
shrb
lret
shll
insb
aad
xlat
ss
arpl
push
fisubl
jae
movsb
imul
xor
xor
xchg
arpl
insl
cmp
cmp
cmpsb
imul
cmpsb
imul
imul
push
outsl
jo
ss
pushf
xchg
out
bound
push
or
sub
fwait
sub
jo
insb
in
pop
andb
jb
jmp
mov
pop
jl
push
xor
pop
mov
repz
push
and
adc
adc
call
dec
shll
outsb
shll
je
xchg
js
pop
rorb
inc
jne
call
push
icebp
and
les
jo
sahf
xchg
pop
push
dec
xchg
subl
mov
mov
int
adc
adc
jge
out
mov
and
cmpl
je
sbb
in
hlt
lcall
call
add
push
test
cmp
and
lea
lea
xor
pop
cmp
mov
add
nop
lea
enter
lods
pop
and
mov
adc
std
imul
xchg
jbe
push
test
fdivs
scas
and
test
rolb
push
lock
mov
mov
push
fisubrs
sbb
mov
hlt
push
cltd
ds
orl
xorb
push
out
push
push
call
nop
xchg
mov
decb
pop
adc
out
iret
mov
int3
mov
shlb
jmp
mov
pop
sbb
lea
clc
and
xchg
adc
xor
mov
dec
subps
or
adc
in
push
lahf
ds
adc
adc
rcrl
cmp
add
cmp
xorl
xor
test
std
pusha
mov
cmpsb
testl
sub
fs
pop
aaa
pop
or
adc
adc
xor
push
sbbl
mov
pop
testl
test
shlb
pop
lds
inc
test
add
ud2
push
in
ds
push
xor
jo
adc
cli
mov
out
jne
call
xor
lahf
or
and
lods
in
mov
push
xor
xor
and
lsl
pop
cmp
cmp
sub
and
cmp
adc
pop
add
sub
adc
jge
mov
test
jmp
pop
adc
das
popa
mov
in
loope
icebp
inc
cltd
push
cwtl
stos
stos
cmp
call
push
mov
mov
hlt
inc
or
fs
das
add
and
add
mov
jmp
or
dec
push
rolb
jo
sbb
rcl
mov
out
or
inc
jl
add
jg
mov
cmp
mov
adc
jg
inc
inc
ljmp
insw
cmp
leave
dec
ja
cmp
nop
shlb
repnz
rclb
push
mov
jns
push
mov
xor
mov
pusha
push
push
push
lahf
sub
popa
fwait
mov
in
stc
push
xchg
ds
or
push
ja
push
mov
jne
ja
pop
push
mov
push
add
sbb
int3
in
aaa
pop
cmp
jl
inc
insl
jecxz
pop
or
mov
push
stos
pop
push
pop
test
lahf
dec
sub
or
inc
or
push
ret
popf
outsb
orps
roll
or
sub
mov
cmp
jle
lret
popa
lds
mov
out
push
sbb
push
rolb
push
pop
pop
scas
add
shl
mov
pusha
inc
pop
jbe
arpl
fdivrs
or
mov
adc
insb
mov
ds
mov
clc
js
sbb
fisttpl
es
mov
and
and
sub
push
in
mov
ljmp
xchg
int
and
sbb
cld
pop
jb
xchg
and
dec
push
mov
jno
insb
mov
rcrb
pop
clc
popf
data16
and
cld
and
dec
mov
jp
icebp
inc
push
add
fwait
addr16
sbb
in
jmp
loop
test
cmp
cmp
mov
pusha
add
mov
mov
push
addb
cmp
cmp
jl
je
fisubrs
push
jb
lock
js
add
jo
add
cmpl
mov
and
and
dec
dec
add
sub
mov
mov
add
push
inc
dec
sbb
stos
dec
dec
add
test
or
sub
dec
or
shll
movsb
xchg
mov
rolb
pop
sub
stos
inc
add
movl
add
jno
imul
mov
mov
lods
mov
mov
negl
mov
jmp
fiadds
jne
std
fcmovnbe
jmp
jle
movzwl
mov
jne
daa
add
ljmp
sarb
cli
cltd
or
pushl
add
jmp
cmp
jne
data16
sarb
jne
or
sub
add
adc
fldl
and
ljmp
mov
clc
cld
inc
inc
cmp
jl
add
jmp
roll
mov
add
push
jno
push
adc
pushf
dec
je
adc
mov
mov
adc
iret
insb
decb
je
and
mov
pushl
add
push
int3
sub
scas
clc
cwtl
sub
rclb
loopne
cmp
add
fiadds
inc
push
mov
cmp
ficoms
pop
xor
data16
scas
shl
jle
sbb
lods
push
mov
call
in
inc
pop
lahf
inc
and
ss
inc
push
cli
les
push
dec
lcall
cmp
add
mov
js
push
orl
and
pop
mov
add
dec
or
shrb
aaa
inc
testb
je
pop
inc
sub
std
inc
shr
or
mov
add
pop
pop
sti
sub
jo
push
cwtl
push
jns
xchg
mov
push
push
and
hlt
int3
xchg
mov
pop
jo
pop
pop
fnsave
les
cmp
mov
loop
mov
cmp
xlat
inc
adc
jne
nop
sbb
pop
jo
mov
jmp
and
adc
sbb
les
xor
shrl
gs
insb
outsl
int
xor
jb
jb
and
ljmp
test
outsb
mov
xor
add
jecxz
js
je
push
dec
inc
mov
cmp
or
and
push
or
xchg
outsb
or
xlat
inc
pop
mov
fsubr
out
add
int3
xlat
cltd
add
idivb
cmpl
je
addl
sar
cmpb
adc
mov
je
imul
jl
bound
xchg
or
mov
and
fisubrl
ret
ja
cmp
or
cwtl
jno
repnz
iret
adc
xor
bound
rcrl
clc
les
mov
mov
stos
push
sbb
jl
daa
sbb
jmp
push
cmp
hlt
dec
popa
add
add
lods
mov
enter
or
push
pop
adc
movsb
add
sub
test
aam
insb
or
in
push
or
xor
popa
adc
stos
or
adc
fs
lds
je
mov
push
xchg
push
bound
or
scas
mov
iret
pop
dec
jbe
or
adc
mov
and
pop
gs
push
inc
mov
fmuls
into
sbb
dec
jmp
mov
daa
pushf
js
das
cmp
and
fisttpll
shlb
jbe
sub
test
mov
xchg
and
or
adc
loope
faddl
add
in
mov
fbld
jp
adc
push
sbb
fistl
mov
or
inc
cmp
jl
popf
jno
and
sbb
mov
mov
les
jmp
push
pop
push
push
ret
repnz
les
mov
xor
out
inc
mov
push
in
push
in
push
sbb
data16
data16
push
jmp
and
aam
in
push
pusha
inc
inc
in
out
test
out
cmp
loopne
sub
enter
std
loop
jcxz
test
pushf
in
cmp
test
sbb
sbb
mov
lret
popa
data16
gs
fbstp
xor
iret
popa
jns
sbb
cs
test
and
add
ret
fdivr
ret
sub
push
lds
or
jp
fbld
lahf
inc
imul
push
cld
xlat
and
lods
pop
add
push
xlat
push
add
hlt
push
adc
push
fsubrs
and
into
out
gs
sub
sub
jo
or
mov
aas
or
mov
mov
imul
mov
call
sbb
cmc
cli
push
pop
adc
mov
call
repnz
loopne
andb
add
insb
inc
insl
gs
insb
pop
lret
mov
outsl
jb
jb
outsb
shlb
pop
in
popf
pop
adc
xor
insl
pop
scas
inc
out
dec
enterw
add
leave
std
mov
adc
dec
lret
jo
push
add
add
mov
jnp
mov
or
sub
out
push
popa
mov
lcall
mov
xchg
jbe
mov
les
mov
add
les
lds
sbb
fcomip
push
pop
outsb
test
sbb
xchg
jns
mov
aam
xor
mov
add
inc
inc
xor
dec
xor
in
je
js
add
inc
mov
call
movb
in
fcomps
inc
inc
aam
sahf
xor
push
cmp
mov
adc
sub
mov
mov
fldenv
inc
movsb
and
popf
adc
int
xchg
dec
add
sahf
inc
cmpsb
clc
les
lret
out
lahf
dec
enter
inc
cmp
clc
sti
dec
xlat
sbb
add
mov
add
inc
add
push
clc
aas
and
push
jb
arpl
jae
fs
pop
in
pushl
push
outsl
outsl
insb
push
xor
popa
jo
push
mov
incl
je
popa
insb
and
mov
sarl
jo
adc
pop
inc
insb
fiadds
add
inc
dec
gs
fldt
fldt
xchg
cmovbe
aas
arpl
sbb
jp
push
jnp
out
mov
jge
dec
outsl
fs
adc
mov
inc
add
fs
imul
fwait
sub
xlat
adc
mov
push
je
inc
jns
add
ret
push
xchg
or
and
mov
testl
into
add
sub
pop
and
cmp
movl
aad
push
gs
jo
mov
sbb
add
pop
imul
push
jbe
imul
pop
dec
pcmpeqb
xor
out
data16
push
das
push
add
gs
xor
pop
xorl
stc
jae
jne
pop
pop
popa
push
mov
dec
push
xor
push
outsl
mov
imul
push
dec
mov
add
jne
jne
jns
mov
sti
imul
push
imul
popf
push
and
outsl
jo
xchg
arpl
fucomip
imul
push
cmp
test
retw
je
pop
fcmovnu
push
outsb
addr16
add
and
insw
sti
pop
add
sbb
adc
jnp
test
fs
push
mov
push
fcomps
jo
outsl
xorb
insb
xor
mov
mov
ret
add
arpl
fbstp
fistl
push
jnp
mov
cld
enter
adc
dec
inc
push
dec
inc
add
rcr
jbe
je
aaa
push
xchg
mov
movl
js
add
insl
mov
test
add
je
ss
xor
add
lods
jnp
xchg
inc
pop
pop
and
push
ss
add
push
shll
ror
lods
test
add
movl
aad
xchg
push
push
mov
mov
or
push
or
dec
inc
lock
sbb
jns
add
je
in
xlat
or
sub
pop
lret
sub
pop
and
dec
jl
and
aam
sbb
mov
add
jne
ss
mov
imul
sub
cmc
add
adc
push
mov
nop
sbb
add
jecxz
in
sub
and
lea
or
jge
mov
adc
inc
outsb
jne
adc
sti
inc
inc
inc
push
inc
push
xchg
xlat
push
push
or
cltd
add
insl
pop
call
or
dec
lret
ljmp
xor
mov
mov
inc
fimuls
mov
fisubrl
jne
roll
imul
jbe
xchg
popa
test
mov
push
mov
push
sub
mov
insb
jns
ljmp
insl
xchg
or
mov
add
mov
stos
mov
pop
push
fstp
outsb
add
psraw
arpl
sti
cmp
sbb
sbb
xchg
ja
xor
outsl
push
and
jae
in
jge
out
mov
idivb
in
or
loope
pop
jbe
in
pusha
push
scas
xchg
add
xor
jnp
gs
ret
cmp
jmp
aaa
pop
ret
add
shll
icebp
movb
jo
push
jmp
xor
xor
mov
fstl
cli
rclb
sbb
out
push
sbb
mov
sub
jnp
mov
adc
inc
fcoml
jbe
les
xor
adc
sub
pop
xor
lret
adc
dec
inc
popf
lods
inc
loope
push
dec
das
jae
je
sub
imul
addr16
shrl
cmp
in
dec
xchg
out
push
pop
jecxz
push
dec
xchg
mov
or
push
jle
pop
and
in
push
xchg
pushf
jae
jmp
lret
adc
inc
mov
add
sbb
test
or
mov
jae
mov
add
fisttps
lods
push
pop
lods
mov
jae
dec
adc
inc
mov
inc
mov
dec
enter
in
push
adc
cmp
pop
stos
add
call
aas
and
mov
xchg
loope
insb
sub
jp
fisttpl
xor
outsl
dec
dec
and
inc
pop
fs
pushl
test
adc
inc
jo
call
rcl
sar
sub
incl
inc
lret
aad
cmp
sbbl
pop
sbb
sbb
aaa
cli
sar
pushl
in
dec
fsubrs
dec
jo
mov
fidivrl
or
cmp
or
shrl
dec
inc
cld
lcall
ljmp
xchg
in
in
leave
test
test
test
outsl
cmp
not
add
incl
pop
xor
out
repz
mov
dec
adc
xchg
lret
or
xor
push
js
mov
pushl
aam
xor
clc
push
mov
fcomip
push
enter
or
cmc
mov
call
mov
stos
jge
inc
cmp
adc
inc
mov
add
clc
notb
sub
and
pushf
sub
or
mov
push
adc
or
repnz
clc
xor
shr
mov
jecxz
add
sub
or
or
aam
push
or
push
clc
push
add
cmpsb
mov
out
add
fbld
sub
mov
adc
test
push
mov
stc
or
lds
call
hlt
sub
rclb
jg
test
and
fsubl
clc
ljmp
pop
pop
adc
call
sub
jg
sub
cmp
xor
clc
stc
xchg
insb
nop
bound
cmp
lea
mov
ret
lret
test
add
push
xor
pop
jl
in
or
pushf
in
aas
dec
stc
sbb
jne
push
rolb
lds
ret
cmp
xor
add
outsl
add
call
mov
das
adc
pop
mov
xor
insl
sti
jmp
mov
jbe
out
inc
cmpsb
sbbb
into
psadbw
pushf
sub
lea
filds
xor
sbb
mov
or
mov
cmp
sahf
cmc
pusha
test
pop
inc
fildll
jge
out
push
test
add
adc
lds
cmp
jg
popa
jle
xor
dec
ja
push
inc
rol
mov
insl
add
cmpb
push
add
fcompl
xchg
mov
fmull
jns
fcoml
and
inc
jmp
mov
imul
pusha
call
and
sub
test
outsl
add
enter
fimuls
jmp
ja
sarb
cmp
inc
xchg
dec
pusha
mov
jg
xchg
push
add
push
xor
out
lahf
add
pop
push
clc
test
data16
or
push
aad
lret
clc
js
sbb
popf
jbe
les
jecxz
inc
mov
aad
incl
fnstcw
decl
sahf
leave
dec
cs
fildl
fadds
add
pushf
cmp
push
mov
ror
jg
lock
loope
stc
or
iret
clc
add
sbb
or
pmaxub
aaa
cmp
and
lea
push
mov
enter
call
enter
test
out
pop
xor
mov
xor
mov
call
mov
mov
int3
rcl
test
lret
jmp
jmp
test
lods
call
cmp
cmp
xchg
sbbb
fisttps
dec
push
mov
push
xchg
stos
mov
mov
and
sbb
push
mov
jns
insl
xchg
mov
lea
aam
xchg
fsincos
rcl
adcb
call
pushf
pushf
clc
call
lea
cmp
call
cmp
inc
arpl
inc
and
sub
cli
cmp
fcomps
push
pop
and
ret
dec
mov
pushf
cs
fadds
jmp
aam
jmp
jb
xchg
dec
jmp
imul
cmp
ja
cld
data16
xchg
int
in
pop
sub
push
mov
xchg
xlat
or
pop
jle
int3
inc
rorb
jmp
dec
sbb
inc
xor
rcrl
fs
dec
jmp
je
lods
int
in
pusha
mov
push
clc
xor
fcoms
jnp
xchg
clc
cmc
stc
fsubr
lods
rcrl
fisubrl
lods
das
adc
clc
orl
cld
xor
cmc
aam
push
out
stc
dec
mov
shrb
and
gs
mov
divl
arpl
fsub
push
pusha
pop
cmp
push
pop
or
popa
not
xor
lcall
push
int3
and
inc
xchg
and
sbb
jmp
in
push
cld
or
dec
push
push
test
or
xchg
loope
mov
lods
sbb
xor
aaa
stos
stos
test
aad
cmc
stc
and
das
mov
sbb
scas
andb
mov
les
jle
sbb
or
out
lods
sbb
dec
add
pop
outsb
jnp
dec
rorl
xchg
std
decb
lcall
push
xor
in
and
mov
call
jnp
shrb
dec
mov
mov
xchg
shr
jo
test
cmp
cmc
sti
push
inc
cmp
shr
rorl
xor
mov
ljmp
mov
pop
pop
pop
clc
xchg
std
scas
pop
ljmp
int3
jmp
fnstsw
add
cmp
push
cmc
xor
test
add
or
stos
jmp
xchg
std
aaa
mov
call
not
stc
not
stc
jmp
into
mov
sub
adc
lods
xor
sbb
push
jmp
call
jle
cmc
add
call
xchg
insl
jmp
repnz
add
cmpsl
cmc
xorb
fcmovu
insl
or
push
xor
mov
dec
out
pop
or
lcall
test
stc
or
push
test
std
addb
and
mov
or
ss
and
in
lret
mov
xor
pusha
das
loopne
arpl
and
mov
mov
outsb
test
push
loope
movsb
imul
scas
lock
test
sbb
stos
inc
inc
mov
sub
jl
sbb
call
adc
inc
mov
jnp
add
sub
sub
xor
cmp
stc
and
push
dec
lds
cmp
adc
hlt
cmpsb
xchg
push
in
mov
or
nop
xchg
jp
mov
and
adc
push
ss
pushf
idiv
pushl
adcl
mov
push
cmp
xor
dec
fbstp
jmp
lahf
ror
popa
cmc
push
ss
sti
imul
movsl
stc
adc
leave
mov
mov
je
fwait
js
jne
mov
or
lahf
pushf
xor
inc
mov
push
xchg
push
loope
ss
loop
inc
lock
sar
call
sbb
pushf
scas
sarb
fs
enter
pop
add
clc
pop
and
mov
sub
sbb
fldenv
xchg
push
rclb
fidivs
dec
inc
out
push
mov
jecxz
fiaddl
pop
in
push
loopne
adc
in
mov
jmp
xchg
fadd
pop
bound
push
pop
jnp
pushf
iret
pusha
mov
pop
or
inc
and
pop
lea
pop
clc
or
lock
mov
push
dec
push
pop
push
jmp
leave
shr
or
xor
add
fcoms
das
dec
ret
xor
ds
dec
xchg
cwtl
data16
or
inc
hlt
cmp
rol
lods
mov
test
lahf
cld
and
rorl
iret
lret
dec
push
fcmove
shl
xchg
xor
lock
sub
push
xor
mov
mov
sub
fdivrs
mov
cmpsb
cld
jl
test
mov
popf
mov
stc
idivl
in
jmp
call
mov
jmp
add
cmp
xlat
pop
aad
movsb
push
add
sbb
xchg
movl
les
xlat
mov
cmpsb
idiv
call
pushf
push
lods
add
mov
insl
push
pushf
adcl
dec
pop
fldl
ss
push
push
xor
ds
adc
and
jmp
sub
or
cltd
sub
cld
xchg
les
sbb
pop
clc
sahf
fdivrs
cld
jno
ret
inc
sbb
test
out
pop
js
sti
bound
xor
jge
inc
xchg
sbb
jp
outsb
cmp
cmc
add
sub
cmp
mov
lcall
adc
divl
fs
fwait
pop
inc
out
sub
adc
pop
xor
add
cmp
mov
inc
aad
into
mov
xlat
dec
xchg
loopne
into
mov
pop
loop
sar
adc
popf
shl
pop
fstps
xchg
push
jae
cmp
clc
leave
in
dec
aam
rcrl
inc
push
adc
add
pop
or
mov
jle
xchg
push
cmp
sbb
nop
or
sbb
dec
xchg
out
cmp
push
insl
stos
jne
cmc
cli
bound
mov
xor
and
fsubrs
push
push
call
fsubrs
dec
jl
sbb
mov
dec
fnstenv
mov
push
cmp
push
sub
sub
dec
mov
cmc
lds
adc
jne
dec
add
xchg
test
jb
xor
shrl
daa
rcrl
popf
popa
adc
jle
sub
setb
mov
stos
or
push
pop
adc
sbb
pop
rcrb
mov
push
jle
outsl
push
add
rcrb
push
outsb
loope
or
insl
mov
mov
insb
dec
pushf
outsb
mov
ret
das
sbb
shl
mov
add
stc
rcl
sub
xchg
out
pop
mov
xchg
lods
push
pushf
subl
ja
sbb
pop
pop
mov
outsl
adc
es
outsb
movsb
push
adc
pop
or
sti
sbb
movsl
or
push
inc
and
out
test
call
mov
fidivrl
shl
pushw
or
or
sahf
cwtl
sbb
fbstp
pop
or
add
imulb
xchg
mov
pop
pop
push
sbb
mull
jne
stc
insl
mov
divps
pop
sbb
push
sbb
or
out
in
mov
or
mov
pop
or
jbe
out
or
xor
cmovb
mov
int
iret
arpl
cli
adc
outsb
fnstcw
movsl
dec
jb
lret
movzbl
pop
int
in
mov
add
insb
idivl
shrb
les
sar
cmpsl
inc
in
neg
jnp
dec
mov
fwait
jp
aaa
mov
xchg
fists
scas
fiadds
pop
fsubrp
cld
clc
das
dec
add
stos
mov
dec
adc
xor
jnp
pushl
sbbl
sarl
scas
fistpl
push
mov
cmp
dec
pop
out
outsl
ss
arpl
fistpll
cld
fdiv
fmulp
jnp
jl
jecxz
sti
fidivrs
mov
or
arpl
sub
dec
sahf
cld
addps
lahf
jg
pmulhuw
es
xlat
das
movsl
or
xlat
pop
xor
mov
cmp
cld
clc
mov
jnp
stc
mov
pop
pop
ret
test
dec
pop
or
inc
inc
xor
jg
vmread
add
dec
xor
mov
pop
dec
ret
jnp
ret
cmp
jae
ret
cmp
fsubp
cmp
pop
das
sbb
pop
ja
sbb
pop
fucomip
xchg
mov
fidivs
fistpll
mov
arpl
fwait
jge
imul
addr16
xlat
xchg
xchg
out
mov
pop
pop
pop
push
jnp
lock
mov
add
mov
inc
cmp
pop
fidivrs
sbb
popl
scas
jmp
mov
out
aas
cld
push
cmp
pusha
adcl
call
je
pop
pop
enter
popf
into
cmp
mov
jge
call
pop
std
sub
inc
push
dec
arpl
lock
add
and
sbbl
push
push
call
or
outsb
lods
scas
pop
and
or
rcll
mov
dec
jecxz
adc
pushf
push
stos
mov
lock
cld
test
sbb
sbb
out
adc
clc
jl
sbb
int
add
outsb
mov
call
stc
push
or
jmp
xchg
call
dec
xchg
add
fstl
or
ud1
xchg
jp
inc
add
jl
xchg
xchg
xor
mov
xor
sahf
jnp
fld
inc
add
stc
jbe
jg
call
mov
pusha
out
call
aam
add
jge
scas
jno,pt
insl
push
ja
das
loop
lock
sbb
mov
cwtl
stc
test
lods
fdivl
jbe
cmp
js
pop
ljmp
pop
in
cld
jle
xor
jg
loopne
dec
lea
cmpsl
add
and
mov
pop
stos
inc
ja
or
pop
rol
in
add
lahf
repz
add
test
inc
push
stc
mov
ret
pop
jg
cmp
test
adc
aas
lods
cltd
dec
sbb
cmp
out
add
fdivr
push
fwait
leave
jmp
dec
jo
ret
mov
pop
push
dec
fwait
sti
and
and
mov
and
sbb
pop
js
call
imul
add
sbb
push
inc
sub
hlt
clc
aas
loop
decl
cmp
push
adc
xchg
dec
cld
scas
jo
push
or
movsl
stos
scas
xor
les
fcomip
sbb
loope
dec
inc
shrb
roll
fcomi
mov
and
add
jno
test
out
fwait
or
ljmp
mov
sub
and
or
adc
mov
jl
mov
scas
loope
xchg
dec
mov
sub
push
fucomi
ret
mov
lods
pusha
mov
or
jmp
icebp
push
lods
std
or
je
adc
shld
daa
sbb
sub
pushf
xor
stos
ja
or
aam
sbb
sbb
test
movsb
fmul
dec
cmp
jl
loopne
and
add
shll
pop
mov
call
xchg
xor
sti
test
mov
sub
inc
dec
sbb
data16
xchg
jbe
jo
enter
scas
rcll
icebp
icebp
outsb
mov
pop
lds
inc
jbe
cmpsb
mov
cmpsl
xchg
jae
movsl
pop
int
andb
les
mov
push
mov
lret
or
jno
mov
movsb
jnp
fldenv
xchg
add
dec
ljmp
mov
in
ja
stos
lcall
rorl
imul
bound
pop
push
stos
adc
xor
or
sbb
out
push
mov
pop
notb
push
subl
xor
xor
mov
push
push
arpl
xchg
add
shrb
hlt
out
in
bnd
rcrl
adc
rolb
add
aam
sbbb
and
aam
movsb
pop
xchg
or
enter
add
in
std
test
jmp
addr16
scas
cmpsb
mov
cli
out
jne
mov
jge
iret
repz
stc
subb
dec
fwait
jle
xchg
sub
xor
nop
nop
push
repnz
sub
or
sub
push
ret
int
repz
push
pusha
shll
inc
inc
pop
mov
push
in
mov
mov
subl
adc
push
clc
ret
ljmp
sbb
adc
scas
je
xor
xchg
fstpt
pop
aas
jg
mov
arpl
scas
movsl
add
in
test
pop
sbb
or
add
call
push
sub
jle
add
cmp
orl
xor
cmc
pop
cli
ljmp
clc
and
xor
inc
dec
sar
neg
setne
mov
mov
clc
ret
shrl
loop
xlat
mov
xor
shr
pop
xor
lret
shl
cmc
jmp
or
es
setbe
ficompl
push
xchg
jmp
xor
nop
call
mov
or
xchg
ds
jmp
aaa
rcll
loop
shlb
pop
pop
or
mov
insb
js
inc
notl
cld
bnd
subb
ret
sub
add
adc
jmp
sbb
cli
mov
fadds
shlb
jmp
jnp
mov
mov
pop
or
xchg
pop
sbb
faddp
jae
jo
orl
cmp
ja
jmp
jnp
int3
xchg
or
add
jecxz
push
pop
clc
aaa
jo
clc
popf
fcmove
pop
test
push
cli
fucomi
pop
out
sub
lea
cld
push
call
aad
lock
aas
mov
sar
jmp
dec
sbb
rorl
test
pusha
movsb
sbb
test
rcll
popf
push
sti
push
movsl
clc
pop
mov
rcrb
fisubs
shlb
mov
jbe
mov
scas
mov
pusha
dec
dec
enter
and
sub
in
sar
das
neg
mov
xchg
xchg
test
pop
mov
mov
cmp
cwtl
sbb
sbb
sbb
in
inc
lods
ror
add
cltd
mov
pushf
setno
dec
insb
mov
rdtsc
cwtl
mov
fists
shll
jbe
xchg
jecxz
stc
push
pop
jo
data16
out
pop
shr
outsl
in
mov
cmp
mov
stc
cmc
sbb
xchg
adcl
dec
sub
mov
mov
mov
jmp
jp
movsl
vmovntdq
lea
jge
or
sbb
cld
call
jg
sub
pushf
stc
jmp
mov
xchg
add
mov
jmp
jbe
and
xchg
stos
xchg
fdivrs
fwait
ljmp
pop
int3
push
repnz
pushl
and
pop
sbb
mov
das
jle
jbe
out
lahf
incl
into
and
pop
and
cmp
xchg
mov
cli
nop
cwtl
push
fnop
mov
sbb
lcall
jge
repnz
cmp
pushf
subl
fsts
sub
ret
bound
jg
adcl
push
push
xchg
inc
xor
lret
jl
mov
mov
js
xchg
aaa
aam
jge
clc
sub
xchg
push
jno
imul
adc
xor
outsl
sti
mov
shll
and
test
jmp
adc
push
insb
xchg
insb
mov
add
jne
xchg
xor
rol
mov
lahf
call
test
stc
adc
dec
sub
jbe
xchg
cmp
dec
out
mov
cld
pushf
hlt
cmp
xchg
or
add
xchg
xchg
icebp
fwait
and
mov
adc
rclb
aad
xor
push
movsb
push
add
iret
sbb
mov
sahf
mov
xor
in
and
jle
shl
adc
out
std
insl
or
adc
or
movsb
and
push
cmp
push
jne
pushl
jns
leave
dec
call
cmp
inc
mov
push
fdivs
cs
sar
ljmp
push
int
jecxz
jmp
pop
lret
mov
or
out
or
lcall
std
inc
addl
data16
bound
mov
outsl
lcall
mull
adc
cs
dec
push
xchg
pop
sbb
cmc
sbb
popa
adc
sbb
cmpsb
mov
push
imul
pushl
mov
scas
push
outsl
in
loopne
lret
adc
cmpsl
leave
into
jnp
add
rcll
popf
mov
ljmp
arpl
sbb
xchg
adc
insl
dec
jg
jl
call
xchg
cmp
push
jle
push
test
in
mov
shl
arpl
add
jno
in
addl
ljmp
jne
stos
mov
mov
mov
push
jle
add
ss
out
mull
aam
call
and
fbld
cmpsl
sbb
mov
cmp
jg
add
cmp
repnz
bound
ljmp
out
rcrb
stc
movsl
ljmp
mov
insb
mov
dec
dec
int3
pop
xor
stc
fnstcw
cmpl
mov
ds
call
ja
cmpsl
cmp
test
pop
push
cmc
in
adc
push
jae
scas
or
jge
inc
call
pop
dec
lret
daa
dec
ss
push
push
testb
pop
lret
and
xchg
or
push
ret
cmpl
fmuls
inc
movsb
inc
das
sar
fucom
push
xchg
xchg
xchg
inc
mov
sbb
fldt
pushl
jle
mov
inc
mov
mov
pop
mov
pushl
sbb
mov
push
inc
push
cmp
jne
stos
mov
mov
dec
inc
stos
clc
xchg
add
nop
and
mov
mov
mov
push
test
sbb
adc
jg
decb
call
pop
dec
mov
notb
mov
fdivrp
push
pop
jb
mov
pop
add
sahf
mov
xor
sbb
aaa
jg
mov
sub
pushf
test
mov
dec
arpl
call
jmp
adc
fisubs
add
ret
sub
nop
xchg
push
pop
xor
ljmp
push
mov
mov
cmp
fucom
scas
jge
mov
sub
ljmp
out
sbb
ret
mov
in
outsb
adc
inc
mov
mov
or
lods
sbb
icebp
xchg
adc
nop
push
mov
lds
dec
jg
fbld
or
pop
xor
arpl
lea
jg
js
lcall
or
out
sub
mov
sti
outsl
movsl
sbb
jle
icebp
pop
mov
lods
jmp
mov
in
xchg
and
in
add
repnz
rolb
loope
mov
push
xchg
mov
jl
scas
dec
test
inc
mov
lcall
test
pop
test
cmpsl
pop
add
es
pop
sahf
jmp
jmp
mov
fs
xorb
shrl
dec
loope
pushf
or
out
call
cmp
insl
out
jmp
adc
sbb
sbb
fdivr
jmp
popf
mov
jne
sub
js
int
xchg
cmp
cmp
in
imul
jge
outsl
mov
pop
jmp
icebp
dec
jmp
sbb
adc
cmp
lock
jge
and
aam
mov
out
ds
sbb
lret
sti
pop
or
fdivrl
lea
cmpsb
inc
in
fs
lret
push
sub
lcall
movaps
inc
and
pop
dec
inc
mov
sbb
insl
adc
jg
push
dec
dec
cmp
fisubl
movsb
mov
and
sub
dec
sub
aaa
decb
adc
jl
sbb
enter
push
std
mov
out
call
fstl
cltd
pop
cmpsb
cmp
iret
xor
decl
mov
jp
cli
jl
sbb
out
dec
inc
inc
sub
add
adc
inc
cmc
mov
or
pop
ss
sahf
inc
push
cmpsl
jbe
mov
ja
push
in
lods
inc
mov
pop
jp
mov
jno
jb
mov
aas
cmp
or
inc
rcrb
pushl
shlb
xchg
or
mov
fistpl
into
lret
xor
fistpll
loope
jo
dec
mov
scas
add
adc
aad
xchg
mov
pop
mov
test
in
rorb
dec
mov
loopne
mov
and
push
or
lret
stos
gs
push
push
mov
mov
lcall
stos
cmp
aad
mov
add
pop
pop
fnstenv
popa
repz
cmpsl
mov
xchg
call
out
gs
pop
xlat
int3
cltd
sbb
fisubs
call
push
cmp
mov
or
ja
dec
gs
cmp
pop
or
mov
ret
out
cwtl
jo
push
sarl
push
out
sbb
xchg
mov
es
jns
mov
or
lret
pop
loop
mov
stos
adc
add
inc
push
popa
sub
cltd
cmp
lcall
cltd
cltd
jo
sub
mov
leave
adc
or
loop
jle
shlb
icebp
mov
incl
cmp
insl
insl
loop
out
aaa
jle
ljmp
out
push
mov
fisubs
xchg
mov
test
mov
mov
das
jmp
outsb
hlt
cmc
iret
pop
inc
icebp
and
xchg
mov
ret
ljmpw
testb
jb
mov
enter
sbb
pushl
decl
dec
test
or
push
pop
xor
mov
inc
enter
incl
lods
mov
pop
in
int3
clc
js
push
push
fsubrl
jge
jb
jnp
sar
inc
pushl
jmp
adc
ds
mov
inc
out
dec
cld
adc
cmp
shll
adc
outsb
in
enter
sub
pop
mov
jp
lret
fdivs
addr16
xorl
outsl
loop
mov
out
sub
es
xlat
imul
loopne
mov
mov
push
mov
push
addl
fs
dec
filds
cltd
int3
loopne
jne
rolb
dec
out
or
ret
xor
ljmp
push
enter
fstps
push
js
mov
testl
adc
pop
testl
in
mov
push
inc
std
or
rcrb
or
sbb
test
sbb
imul
loop
cli
das
sub
dec
lock
lcall
out
test
jg
shll
std
jmp
adc
push
xchg
mov
iret
aaa
das
ljmp
and
in
sbb
daa
outsb
into
aad
push
pop
loopne
mov
inc
jb
call
sbb
lock
mov
jge
mov
adc
fs
sub
push
inc
pop
ljmp
jg
decl
sbb
faddl
sub
push
clc
testb
dec
jg
das
jecxz
xor
les
push
ret
aas
push
dec
imul
and
shrb
lret
pusha
mov
xchg
ljmp
iret
daa
in
mov
xlat
nop
or
xchg
in
and
call
inc
loop
negl
std
mov
xchg
ret
inc
xor
inc
inc
push
das
clc
push
ja
test
jbe
divb
call
adc
pop
movsl
cmp
push
dec
nop
mov
cli
dec
pop
xchg
out
fisubrs
daa
sbbb
fidivs
mov
cmp
gs
fadds
mov
icebp
cmp
lret
fmulp
aam
inc
sarl
je
adc
mov
jmp
jle
aas
inc
xchg
jg
lea
mov
mov
stc
mov
sub
mov
and
fwait
sub
mov
and
xchg
dec
sti
sub
je
xchg
sub
sub
rcr
dec
xchg
inc
aaa
xor
cmc
adc
sti
outsb
lods
cmp
push
ret
and
mov
cmc
jecxz
pop
pop
int3
repz
pushl
lea
lret
jb
imul
or
xor
xchg
imul
lods
jl
mov
xchg
sti
jg
jg
insl
fistl
cmp
nop
sti
lods
push
jmp
jg
cmpsb
cs
push
sti
outsl
xchg
mov
repnz
repz
fdivp
in
incl
jecxz,pt
inc
inc
mov
push
mov
mov
ds
lds
push
push
sahf
push
lahf
gs
add
pop
daa
call
sbb
jg
scas
cli
popa
push
push
inc
mov
xor
sub
add
xorb
pop
out
aas
cld
mov
call
push
push
or
pop
cs
das
cmp
int
std
pushf
out
nop
mov
setle
sbb
push
mov
mull
addb
push
sarl
outsl
out
incl
aaa
xchg
push
lods
inc
out
in
cwtl
mov
cmp
or
call
dec
sub
stos
lret
pop
mov
sub
mov
das
icebp
call
pushl
test
add
inc
jmp
js
xchg
mov
cmpsb
in
rol
xor
dec
scas
cmp
mov
sub
dec
xrelease
call
and
in
loopne
or
dec
mov
int
adc
jge
inc
cld
movsl
outsl
std
scas
cmp
aad
inc
js
ljmp
pop
aad
lcall
fistpl
orl
cmp
outsl
adc
and
jnp
cli
incl
push
popl
loope
xor
lcall
or
pushf
daa
xchg
sbb
xor
push
ficomps
sbb
cmp
lahf
mov
push
call
clc
pushl
lea
sbb
sub
pop
hlt
mov
mov
call
dec
push
stc
push
adc
icebp
sti
gs
adc
dec
insb
add
cld
call
jno
xor
dec
and
cld
add
mov
divl
clc
inc
scas
das
sbb
mov
xchg
push
clc
out
andl
pop
adc
leave
mov
push
or
das
sub
cmpsb
fistpll
pop
xchg
inc
lods
or
scas
sub
adc
mov
add
ja
xchg
movsb
rcrb
arpl
je
push
dec
mov
addl
dec
outsl
pop
cmc
adc
mov
lcall
call
cmp
jo
mov
sub
sub
movsb
add
cmpsb
sub
mov
idivl
or
push
je
xor
mov
dec
fisubl
mov
jp
pop
clc
jg
mov
shl
or
loope
sti
lahf
mov
cli
fldt
pop
mov
and
cmc
pop
mov
jg
test
shrb
mov
and
jns
add
incl
mov
jg
popl
mov
mov
mov
movsl
incl
mov
mov
jl
nop
push
dec
fwait
cmp
imul
icebp
push
mov
aam
imul
aaa
mov
sub
out
aad
add
scas
mov
dec
in
mov
outsl
cld
sbb
add
cmp
outsb
sub
fldcw
push
cmp
icebp
inc
cld
inc
sbb
shll
testb
popa
fisubrl
dec
in
hlt
andb
aaa
mov
mov
mov
push
dec
ret
xchg
jecxz
add
and
dec
or
lcall
cmp
leave
das
mov
gs
sbb
jmp
sub
ret
push
push
cld
ret
hlt
cli
std
xchg
aad
mov
std
cmpsb
mov
push
push
int3
sar
pushl
sbb
mov
xor
push
jl
push
or
push
and
nop
push
je
pop
add
xchg
pushf
mov
dec
cltd
movsb
movsl
xchg
sti
inc
data16
scas
mov
adc
jo
pop
sub
loop
jns
imul
dec
mov
cli
sub
mov
addl
push
xor
call
jge
sahf
daa
sbb
popf
mov
sbb
xor
in
std
lock
fists
ret
cmp
fwait
and
inc
mov
iret
jne
aam
pop
xor
mov
xor
and
rcll
jg
sbb
push
xor
adc
andl
jns
test
outsl
sbb
mov
aaa
cmc
outsl
hlt
movsl
push
xchg
outsb
mov
call
ljmp
cs
cmp
push
ss
sub
mov
fldenv
outsb
xor
pushl
ds
cmp
out
jecxz
lds
xchg
jecxz
int3
or
lcall
test
clc
mov
fimull
stos
jmp
cld
push
movsb
ljmp
daa
inc
ret
pop
loopne
jg
jle
or
mov
out
loopne
mov
lahf
repnz
daa
jae
xor
out
repnz
les
daa
in
popa
fcos
jg
mov
push
push
jle
xor
adc
scas
icebp
ljmp
dec
ja
push
cmp
push
inc
test
sub
adc
nop
jne
fucompp
mov
scas
pushf
repz
sbb
pusha
test
adcb
sub
jle
add
les
cmp
pop
loope
outsl
lock
incl
jge
mov
js
mov
or
stos
nop
mov
sbb
decl
mov
ljmp
aam
ljmp
cs
iret
js
mov
jmp
mov
pop
imul
ret
jne
bound
sahf
call
loopne
xchg
int3
xor
lock
sbb
push
mov
les
pop
xor
sub
call
fstpt
mov
cmp
nop
adc
scas
mov
imul
fbstp
fwait
data16
leave
call
out
fdivrp
mov
pcmpeqd
mov
stos
pop
repnz
push
inc
push
inc
or
sbb
fidivrl
adc
xchg
sub
push
repnz
jg,pt
insl
leave
pop
cpuid
cmpsl
arpl
mov
aaa
fmuls
das
lcall
fldl
das
lock
or
mov
or
imulb
fiaddl
repz
aam
aam
decl
in
lret
movsb
inc
adc
out
push
fstpt
pop
fbld
mov
mov
and
imul
inc
mov
fidivs
sub
adc
sahf
fiadds
loopne
hlt
cltd
xlat
jl
ljmp
jmp
jp
sahf
sbb
sbb
cltd
mov
cmpsb
fnstsw
pop
mov
or
sbb
dec
fxch
insl
movsb
sbb
cld
call
or
cwtl
mov
pop
popa
mov
dec
cwtl
xor
and
mov
pushl
adc
inc
out
int3
int
mov
loop
add
rol
aaa
int3
leave
dec
jnp
das
std
cmp
es
mov
jg
xchg
add
stc
sahf
mov
loop
pop
aad
xchg
pop
int
ja
pusha
lods
mov
sbb
jns
cmc
out
je
loop
call
clc
sbb
xchg
and
arpl
push
cs
sbb
cmc
cli
jg
call
push
fdivl
or
jecxz
jae
mov
xchg
add
arpl
dec
out
xchg
mov
call
mov
mov
mov
mov
sar
jg
pushl
jns
or
lret
xchg
mov
jns
jle
adc
mov
ja
pop
call
outsb
jae
cmp
int3
insl
push
dec
lea
lret
cld
pop
fiadds
insl
in
push
int3
call
lock
movsb
jle
pushl
mov
sub
jle
jns
xchg
inc
mov
decl
movsb
or
clc
push
aam
push
lds
addr16
leave
stos
sbb
hlt
pusha
push
cmp
dec
sub
fldenv
mov
pop
call
pop
jbe
jl
mov
call
mov
lret
int
cmp
adc
xor
sub
mov
fistpl
xor
cmp
jno
rcrb
lds
imul
stos
clc
pop
call
mov
mov
jecxz
xlat
and
imul
and
and
mov
dec
das
lock
and
jmp
or
mov
cmpsb
and
test
lea
cltd
push
mov
out
push
in
in
jae
outsl
hlt
lea
fimull
push
mov
push
pusha
pop
xor
and
movsl
insb
add
imul
das
mov
mov
cmp
inc
loop
ja
or
or
push
jne
rcrb
mov
push
push
push
ja
or
loope
pop
jmp
mov
jne
ret
fisubrs
xor
xchg
loopne
pushf
fidivs
add
loope
push
inc
push
sbb
xlat
mov
cmc
sbb
sbb
call
fldl
insb
or
sub
cmp
test
adc
pop
std
call
insl
xchg
shll
push
cltd
out
pop
pop
and
add
cmpsl
and
loope
arpl
or
xchg
fwait
pop
jmp
sbb
mov
shrb
lods
data16
sarb
lds
dec
push
cld
out
sbb
stc
in
or
sbb
push
mov
ljmp
std
pop
adc
iret
xchg
jecxz
fnsave
lods
inc
xchg
inc
dec
fiaddl
arpl
mov
mov
and
mov
sbb
mov
std
decl
das
mov
mov
push
int
pop
or
fcomip
pop
jb
push
pushf
jmp
push
out
xchg
call
negb
sbb
cmp
pop
cld
popf
fildll
lahf
mov
fcomps
outsl
jg
call
xor
pop
leave
dec
fndisi(8087
aas
out
loop
aad
or
movsl
incl
sbb
rolb
sub
mulb
sub
fcoml
xor
rcll
or
mov
mov
sbb
pop
lret
out
pop
in
xor
hlt
xchg
outsl
movsb
cwtl
xor
mov
ljmp
jg
sub
push
mov
out
mov
push
into
insl
fnstenv
jg
mov
mov
jg
sub
scas
dec
fistpl
or
fwait
cvttps2pi
lcall
add
push
push
xchg
mov
jg
test
hlt
dec
dec
icebp
push
dec
push
bound
test
incl
and
iret
mov
add
test
xor
inc
aad
call
lret
push
leave
sbb
jecxz
or
je
dec
out
fs
arpl
or
lods
lret
out
add
pushf
push
or
cwtl
ds
sub
push
ds
push
add
ljmp
int
jne
and
inc
aas
add
movsb
das
sarl
mov
or
sbbb
stc
incl
fists
xchg
popa
cmc
loope
jne
aam
in
jg
mov
lcall
xchg
push
insb
sbb
pop
add
jb
insb
call
jbe
jne
cmp
mov
pop
call
cli
mov
pushf
das
stos
and
mov
rclb
imul
sub
jle
outsb
repnz
movsl
in
mov
divb
aam
ss
jae
jg
ds
out
je
movsl
adc
pop
cli
arpl
push
xchg
shll
cli
rcrb
add
jecxz
mov
xchg
cmp
shl
in
in
ss
xchg
or
lcall
jl
and
mov
pusha
mov
je
dec
lock
push
std
jno
mov
push
shll
pop
mov
fbld
dec
fsubl
mov
mov
jnp
push
xor
sub
ljmp
cmp
xorl
xor
xchg
cltd
push
cmc
mov
pop
push
mov
mov
hlt
jle
std
lret
mov
or
mov
sar
ljmp
sub
inc
pop
dec
push
xor
outsl
leave
cld
mov
sbb
add
xor
aam
mov
cmpsl
es
fimuls
incl
push
mov
jo
dec
loopne
mull
mov
cmp
test
fdivs
pop
cwtl
fcmovne
int3
pop
sub
out
cmp
fistpll
sbb
icebp
mov
or
dec
pop
incl
pop
arpl
adc
cs
repnz
jmp
outsl
lock
xor
cmpsb
cmp
dec
nop
scas
inc
or
and
call
outsl
daa
jne
icebp
pop
xlat
push
push
jae
jecxz
aam
je
pop
cmp
push
adc
addr16
sti
pop
cmp
jbe
jnp
push
lods
mov
or
frstor
aas
xor
insb
xor
test
hlt
xor
inc
push
paddd
push
xchg
and
sar
decl
pop
pop
push
cmp
pusha
cmc
xchg
idivb
xchg
pushl
sbb
sub
sub
imul
loope
arpl
hlt
mov
mov
fs
xlat
jno
xchg
and
pop
dec
sbb
mov
daa
jmp
lcall
or
negl
cmp
and
add
addr16
decl
cmp
sbb
push
xchg
sub
mov
fildll
jp
repz
cmpsl
sbb
or
inc
mov
jg
test
cli
lods
adc
adc
dec
in
ret
test
js
pop
xchg
cmp
pop
mov
sarl
jg
mov
sbb
add
cwtl
mov
clc
subb
int3
inc
sar
jg
cmp
pop
lret
add
sub
ljmp
cmp
daa
je
clc
xchg
stc
imul
xlat
jmp
cmc
inc
sbbl
push
xchg
je
or
xor
jge
fidivs
sub
or
sbb
scas
fstpl
mov
sub
mov
dec
inc
lret
pop
imulb
mov
stos
dec
out
add
sbb
fstps
std
jmp
ja
andl
xor
xor
fidivrs
jmp
cli
call
push
cli
mov
fsts
lcall
test
xchg
mov
lock
push
aad
cmc
negl
xchg
lcall
enter
sbb
ja
js
call
add
fwait
xor
clc
ljmp
incl
pop
add
and
out
mov
add
xchg
dec
lea
push
stos
rclb
dec
scas
inc
movl
mov
ja
es
mov
adcb
mov
mov
icebp
das
std
pop
pop
dec
jb
jle
xor
stos
lock
xchg
cmp
and
sbb
cmp
mov
mov
rol
pushf
push
xchg
and
nop
inc
xlat
mov
lahf
xor
idivb
jg
loopne
jo
add
cmpb
mov
xchg
inc
fdivl
scas
das
xor
and
enter
idivb
mov
rclb
add
mov
incl
dec
inc
js
movsl
and
xor
repnz
mov
icebp
in
int3
sbb
jmp
mov
loope
jne
bnd
insb
sti
jge
out
dec
mov
aaa
cltd
rcll
in
repz
push
or
in
xchg
xor
popa
ljmp
call
out
mov
and
push
insb
push
std
or
fiadds
mov
incl
push
mov
add
ret
adc
ss
pop
in
cmp
int3
lods
adc
inc
jmp
dec
xor
es
inc
aam
rcll
fdivrp
out
add
mov
iret
push
lods
inc
mov
test
rclb
and
jae
or
or
arpl
daa
int
les
fistps
cmp
cli
mov
and
inc
loopne
cmc
test
pusha
jne
pushf
outsl
ret
mov
repz
and
adc
lock
movsl
xor
jmp
add
xchg
cmpb
mov
jg
addr16
insb
sar
ljmp
sbb
cmp
adc
in
and
fisttps
inc
jmp
mov
xor
mov
push
sbb
movsl
push
dec
dec
dec
std
mov
sub
ss
test
dec
dec
cld
mov
vunpckhps
movsb
push
lea
sbb
push
js
incl
xor
in
vcvtpd2uqq
sub
xor
sub
movsl
inc
adc
dec
xchg
fdivrp
inc
stos
ret
iret
xchg
fsin
out
decl
cwtl
sub
and
das
test
mov
push
pop
ficompl
cld
incl
adc
mov
sbbb
adc
arpl
jecxz
and
mov
or
stc
dec
push
out
shll
or
iret
sbb
in
push
das
incl
scas
mov
stos
fcmovnu
xor
mov
mov
andl
loopne
test
inc
cmp
fs
outsl
repz
sbb
mov
rcrb
ljmp
je
fbld
jae
notl
into
fdivrp
incl
imul
aad
sbb
fcmovbe
in
leave
mov
pop
or
popf
incl
decl
inc
daa
sarb
jo
mov
ljmp
hlt
repnz
call
sub
in
loop,pt
mov
stc
fistl
lods
adc
cmp
es
stc
mov
out
hlt
sarb
or
call
sbb
add
xor
mov
or
add
inc
inc
enter
sbbl
ljmp
fdivs
mov
or
repnz
lds
sahf
push
cld
sub
mov
dec
pop
xor
jmp
lods
stos
or
ret
push
jmp
push
in
bound
push
stos
cmp
add
pop
decl
movl
and
test
incl
ret
pop
jo
orb
in
xor
mov
jle
iret
xchg
mov
fbstp
aas
adc
xchg
mov
dec
xchg
jge
daa
cmpsl
xchg
fidivs
or
xchg
pushl
outsb
ljmp
imul
lea
das
lret
and
in
push
lock
add
pushl
fnsave
mov
icebp
pushf
sub
rol
mov
add
sub
xchg
aad
bnd
mov
sub
fbstp
inc
repnz
adc
xchg
mov
in
pop
iret
jne
jne
test
and
nop
or
mov
inc
aad
insl
jmp
cld
xchg
and
add
xchg
sub
sub
or
mov
lea
call
mov
inc
inc
jecxz
and
aas
pop
cmp
push
loop
cvtps2pd
popa
mov
addr16
icebp
je
pop
stc
loop
and
stos
std
insw
jmp
pop
push
mov
pop
clc
inc
lock
mov
mov
mov
in
data16
xchg
push
xchg
mov
xor
xchg
test
test
adc
jg
xorb
jae
lock
ret
adc
inc
cmp
add
sahf
inc
jb
mov
push
fstpt
in
fadds
or
in
ljmp
ljmp
xchg
add
push
shlb
js
mov
jmp
pushl
push
pushf
mov
imul
add
mov
daa
das
sbb
or
test
adc
mov
into
pop
sub
mov
sbb
scas
xor
movsb
inc
out
fdivr
ljmp
dec
out
xchg
pop
pushl
sub
icebp
movsl
cmp
outsl
addr16
cmp
das
sub
jbe
push
cs
jns
jbe
sarl
in
mov
sbb
lods
cmp
das
xchg
andl
pop
cmp
jp
push
cmp
aaa
sbb
repz
sar
pushl
fwait
mov
arpl
pop
jmp
xchg
es
jle
out
mov
push
out
repz
jecxz
ret
inc
cmp
loopne
js
out
push
and
cmp
jns
js
jo
or
jmp
mov
std
test
xchg
push
imul
ljmp
insb
xor
pop
pop
ss
imul
in
sub
or
add
call
push
pop
int
mov
mov
negl
mov
mov
hlt
inc
cmpsb
mov
cmpsb
stos
and
xchg
mov
or
leave
clc
lods
mov
inc
jmp
jg
pop
fadds
mov
xchg
data16
push
ret
jl
ja
enter
cmp
inc
aaa
pop
mov
adc
jl
jge
jmp
dec
insl
and
aam
jmp
push
pop
adc
test
iret
popf
xchg
mov
adc
lods
add
xchg
mov
push
mov
dec
orb
sarb
dec
xchg
dec
mov
loop
jae
out
add
sarb
mov
pop
mov
pushf
jge
jnp
in
pushl
and
aam
pop
ret
insl
in
cs
test
repz
repz
out
mov
movsb
and
nop
sbb
mov
clc
lods
in
aaa
cli
das
insb
adc
dec
lcall
fcoms
imul
std
pushl
mov
adc
adc
shrb
jg
decl
frstor
pusha
push
mov
dec
xor
xchg
push
fidivrl
movsb
test
das
rolb
shrb
xchg
lret
mov
inc
mov
or
test
out
in
call
xchg
adc
mov
cs
and
pop
fildll
orb
mov
sub
pushl
dec
je
mov
mov
pop
loop
call
lock
sbb
jge
rcrl
push
and
aam
dec
xchg
aam
xchg
xchg
test
insb
lods
lahf
adc
into
rolb
rol
xor
out
cs
hlt
cmc
pop
aaa
and
in
sub
jno
negb
inc
insl
push
pop
mov
or
adc
enter
sub
mov
das
addr16
dec
add
dec
push
sbb
fcos
lcall
push
shrl
cs
test
loope
jge
int
outsl
sbb
movsb
inc
xchg
outsb
push
xchg
orl
gs
adc
dec
fildl
dec
push
jle
jns
call
repz
int
outsl
mov
pop
pop
rcll
adc
mov
sub
fisttpl
and
aam
push
loope
and
test
inc
xchg
test
repz
add
out
fs
sub
lods
test
cmp
imul
insl
inc
xchg
test
nop
ret
jbe
sub
ret
leave
fistpll
dec
mov
shrb
lods
sub
shrl
push
fbstp
xchg
cmpsb
pop
test
orl
cld
or
pushl
and
pusha
sarb
push
inc
and
dec
mov
mov
ret
jo
adc
ret
sub
pop
pop
mov
rclb
ja
in
call
das
outsl
pop
les
mov
push
sbb
cld
aaa
mov
mov
mov
mov
sub
cmp
cwtl
adc
inc
outsb
push
lret
lcall
and
insl
cmp
test
jecxz
loope
xor
pushw
mov
decl
jbe
xchg
ret
data16
sbb
movsb
scas
out
dec
stos
les
lea
pop
ds
mov
ret
add
sarl
mov
xchg
aam
and
mov
outsb
fldt
jg
mov
mov
ret
jns
test
shrb
leave
cld
aas
das
xlat
pop
push
mull
xchg
cld
mov
ljmp
xchg
jg
and
aam
pop
into
jmp
xlat
test
jne
cwtl
mov
mov
adc
movsb
adc
rcr
sahf
xchg
sbb
call
dec
inc
mov
scas
enter
test
stc
ljmp
stos
and
adc
ret
js
mov
mov
dec
aas
jbe
xchg
dec
incl
in
pop
fidivl
movsb
cmpsl
in
lcall
jns
lahf
adc
sahf
dec
mov
and
pop
jne
call
adc
jp,pn
inc
out
jg
lock
sbb
mov
enter
mov
push
mov
stc
jmp
pop
and
adc
iret
outsb
leave
ds
frstor
push
popa
jbe
xchg
cmp
sti
ljmp
pusha
jge
cmp
popf
xor
popa
scas
mov
repz
pushl
bound
xor
ficomps
leave
call
sti
mov
adc
inc
in
ja
push
push
jo
jecxz
mov
aas
jnp
mov
lea
ja
xor
and
and
cld
lcall
orl
outsl
movsl
arpl
fidivl
lods
loopne
cmp
ja
dec
dec
or
push
mov
push
or
mov
pop
mov
lret
jns
xchg
dec
xorl
aam
xchg
jmp
inc
xlat
rcrb
dec
add
push
js
mov
lahf
xor
iret
push
sub
adc
int
jmp
outsb
inc
aas
xor
imul
push
dec
in
jbe
xchg
or
imul
test
mov
sete
pushf
push
or
imul
jmp
jecxz
fnstenv
sbb
cs
push
push
shrl
stc
jecxz
daa
xchg
outsl
push
inc
jnp
mov
insb
in
es
aad
stc
push
rclb
jns
jno
js
pop
outsb
rcl
shlb
ror
cwtl
inc
cmp
xchg
mov
mov
inc
mov
gs
pop
add
jmp
lret
xchg
jo
pop
xlat
inc
inc
out
push
leave
pop
jp
xchg
cld
ja
cli
mov
mov
outsb
inc
ss
xor
mov
jge
inc
sub
cwtl
adc
stos
out
jle
inc
popa
mov
int
lods
sbb
sbb
mov
and
push
jmp
push
mov
ds
cld
dec
addl
cs
stc
testb
imul
jb
or
fdivrp
imulb
pushl
sbb
jge
shlb
lret
outsb
out
jb
cmpsl
outsb
lea
jg
jbe
popf
aad
xchg
data16
xor
sub
mov
int3
lea
cmp
lcall
aaa
lcall
dec
test
sbb
jb
xchg
pop
ss
dec
fdivr
dec
dec
dec
xlat
out
xor
or
pop
jg
fucomip
lcall
push
scas
xchg
adc
outsb
hlt
loope
xor
idiv
frstor
add
lcall
xor
jg
out
lcall
cltd
movb
xchg
das
addps
cmpsb
cmp
jle
add
fsubr
leave
call
andl
cs
std
in
sbb
inc
daa
sarl
add
pop
jae
mov
ret
faddp
addl
pop
leave
outsb
fnstcw
loope
aaa
pop
in
dec
sbb
ret
pusha
jne
add
cli
es
ljmp
in
or
mov
ja
mull
xchg
mov
sbb
aas
or
or
xchg
push
push
into
fildll
mov
xor
adc
fs
andb
cmp
mov
mov
fdivrs
in
call
incl
aas
or
cmp
dec
aas
dec
aas
repnz
add
adc
dec
xor
in
popf
xor
xor
xor
xor
xor
xor
jg
mov
xchg
xor
pushl
xor
adc
call
xor
xor
pop
xor
adc
pushl
lock
xor
xor
xor
loop
xor
mov
xor
xor
xor
fs
push
and
dec
add
xor
xchg
xor
xor
xor
xor
xor
cmp
sbb
dec
xor
mov
xchg
stc
xor
adc
xor
inc
sbb
pushl
imul
mov
fnsave
call
in
and
es
movsb
aaa
test
mov
test
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
mov
cmp
aaa
ds
and
arpl
jae
jle
test
out
out
aas
stc
test
pusha
cmpsl
rolb
and
xor
sti
sbb
lcall
jbe
jl
stos
xor
xor
xor
xor
xor
xor
shl
sub
xor
xor
mov
loope
out
xor
xor
push
xor
xor
lcall
call
xchg
xor
xor
xor
xor
xor
xor
xor
xor
xor
fnsave
xor
in
out
xor
push
ss
pushl
cmp
cmp
cmp
cmp
pop
cmp
cmp
cmp
cmp
xchg
cli
cmp
cmp
push
cmp
stos
cmp
ds
ds
xor
jecxz
fstpt
loop
add
sbb
push
aas
push
iret
jo
mov
xor
add
data16
lods
xor
xor
lock
cmp
inc
xor
xor
mov
jbe
jl
xchg
xor
test
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
cld
incl
xor
xor
push
aaa
xorb
cmp
ljmp
in
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jae
pop
std
cmp
cmp
cmp
cmp
cmp
cmp
cmp
pushf
cmp
cmp
cmp
fildl
ds
ds
sbb
inc
arpl
jns
cmpb
icebp
in
call
ds
mov
jl
test
xchg
in
add
xor
xor
jp
test
out
shlb
mov
xor
pop
xor
lret
aas
xor
popa
xor
jne
lock
loope
lods
test
mov
stos
xor
test
incl
inc
insb
xor
ja
ret
xor
xor
xor
xor
xor
out
sbb
dec
xor
pusha
xor
mov
popf
xor
xor
xor
incl
xor
xor
xor
xor
xor
hlt
xor
das
fbstp
push
lods
gs
lds
into
addl
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sub
xor
inc
cmp
push
ret
cmp
push
jne
cmpb
cmp
cmp
cmp
cmp
jg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
outsl
hlt
push
lock
sarb
fdivrs
icebp
cmp
add
dec
cmp
pop
cmp
outsl
cmp
mov
cmp
mov
lds
in
cmp
add
ds
and
sub
lock
std
pushl
ds
aas
in
adc
sbb
push
aas
sub
icebp
das
mov
aas
into
inc
aas
dec
aas
push
aas
pop
stc
imul
jge
aas
xchg
aas
popf
aas
mov
aas
mov
aas
fidivrl
add
jnp
scas
xchg
lret
scas
add
push
xor
xor
pop
xor
jae
mov
xor
divb
clc
outsl
pop
jo
mov
xor
push
xor
imul
outsb
push
xor
scas
lcall
xor
xor
xor
xor
jecxz
xor
xor
xor
xor
xor
loopne
in
push
xor
xor
aaa
ss
ss
nop
ss
dec
ss
out
or
data16
ja
xchg
mov
cmp
push
cmp
jl
ret
cmp
cmp
std
fistpll
out
sti
cmp
push
cmp
cmp
cmp
cmp
inc
cmp
lcall
jp
cmpl
cmpsb
cmp
cmp
cmp
mov
adc
sub
xor
add
sbb
incl
sarb
add
cmp
cmp
cmp
cmp
jg
cmp
jg
int3
and
cmp
cmp
cmp
cmp
inc
jge
jecxz
cmp
cmp
inc
cmp
and
or
adc
loope
inc
xor
cmp
cmp
dec
sub
fdivrs
scas
dec
jns
mov
add
sti
out
movsbl
pop
popf
rcrl
stc
out
out
paddd
popf
fstps
cltd
cmp
adc
push
cltd
ds
aas
stc
nop
push
aam
fcoms
dec
enter
adc
or
add
sbb
or
and
daa
pop
and
pop
test
push
ret
cmp
mov
push
xchg
in
addb
cs
ss
je
adc
jmp
jge
leave
jb
mov
pusha
push
xor
inc
mov
pop
or
xchg
sub
jb
jb
inc
add
push
push
ss
daa
inc
cmp
or
pusha
and
inc
andb
popa
jo
add
inc
mov
and
add
and
addl
std
sub
push
inc
stos
push
inc
jo
mov
sbb
sbb
mov
fcoml
inc
mov
adc
push
icebp
push
fucomi
jo
fwait
add
push
push
push
pop
inc
mov
pop
pop
pop
call
push
push
pop
mov
jmp
fwait
push
rep
or
inc
mov
scas
sub
sbb
sbbb
lds
hlt
adc
add
sub
popf
xor
icebp
mov
push
fstpt
test
adc
aam
aaa
adc
add
inc
pop
fcoms
popf
fldt
or
and
adc
jge
fdivl
fsubrs
sub
cmp
sbbb
lods
push
lods
or
mov
inc
dec
lock
mov
popa
data16
sbb
shr
ja
cmpsl
xor
pop
pop
push
jge
pop
lock
sbb
shll
setnp
loopne
sbb
jp
push
and
inc
rcr
xor
add
or
lds
ror
adc
inc
xor
xchg
adc
ret
jae
lcall
dec
pop
aaa
cmpl
pusha
mov
jo
aam
shll
popa
or
xchg
sbb
fisubs
popa
fnsave
pop
es
ds
push
mov
lret
pop
and
insb
mov
or
inc
jo
push
mov
xor
add
mov
sbbb
jb
pop
xchg
insl
xor
fs
insb
xchg
sub
lret
dec
hlt
insl
or
jae
mov
fldt
pop
xchg
dec
dec
inc
jg
repnz
sbb
adc
rorb
loopne,pn
dec
mov
inc
inc
mov
sub
inc
gs
dec
inc
sub
jo
dec
in
pop
fmul
xchg
cwtl
fwait
xor
xor
cmc
movsb
push
and
cmp
insl
loope
loopne
pop
inc
xor
inc
inc
pop
push
pushf
adc
mov
cmp
jecxz
out
add
sbb
dec
call
jp
add
or
mov
outsb
cmp
push
add
push
xchg
test
pop
push
out
sbb
enter
xor
repnz
sahf
jbe
mov
mov
cmp
xor
dec
sbb
add
cmpsl
or
sub
inc
add
and
leave
jae
pop
jecxz
or
mov
fdivrs
movsb
sub
clc
xchg
adc
adc
add
add
or
push
or
push
ret
mov
fbstp
dec
fnsave
call
outsl
maxps
or
and
push
add
push
sub
dec
lock
or
clc
stc
pop
fcomps
adc
sbb
das
testb
and
xor
out
inc
test
loope
mov
xor
mov
push
inc
push
sbb
or
out
aas
fisttpll
mov
test
add
sub
xchg
add
xchg
inc
xchg
ret
enter
lds
sbb
fstps
xor
or
adc
je
ret
andb
ds
orb
clc
inc
das
dec
xor
and
mov
insb
adc
fstl
cmp
loop
inc
add
cmp
jl
das
aas
mov
cmp
jmp
lods
and
add
lods
repz
adc
or
add
mov
inc
jg
push
and
sarl
int
or
sub
mov
inc
jb
outsl
outsb
sub
mov
gs
cs
insl
mov
es
aad
insb
sub
add
xlat
popa
add
jmp
push
fstps
or
cmc
es
xlat
xor
idiv
dec
stc
inc
cli
je
add
sbb
sti
xor
call
and
or
call
pmuludq
test
cmp
pop
add
insl
sbb
dec
movb
outsb
lcall
insb
into
xor
movsl
pop
iret
xor
shrl
xchg
movsl
fs
push
cmp
out
and
inc
aad
sar
imul
out
in
popa
aas
std
enter
lods
pop
mov
std
mov
sub
out
int
into
jns
std
inc
xlat
cltd
movsl
std
js
push
ja
dec
cmp
push
int3
add
add
icebp
lods
leave
mov
in
outsw
adc
sub
sub
xchg
fs
and
es
push
push
cmpsl
insl
inc
inc
sub
push
jge
inc
imul
dec
rcll
push
mov
and
cmp
ret
outsl
enter
fldl
mov
mov
or
outsb
orl
decl
jne
in
outsl
push
add
or
je
test
in
mov
mov
mov
test
mov
inc
sub
rol
dec
add
in
mov
mov
jbe
xor
in
in
mov
push
inc
mov
mov
mov
fs
mov
inc
sbb
jo
or
inc
xor
mov
add
and
or
insl
mov
call
daa
cld
cmpsb
fldcw
fiaddl
add
imul
add
inc
int3
fs
in
mov
iret
shrb
shll
gs
jae
adc
gs
sub
mov
and
popa
jne
daa
lret
mov
arpl
cs
push
mov
aaa
leave
gs
jno
ror
jno
insb
lcall
cmc
mulb
sub
add
and
outsl
jb
xchg
sub
xchg
orl
add
je
xor
xchg
pop
mov
in
pusha
fs
ret
cli
cltd
movsb
sbb
adc
in
or
fdiv
add
shl
xchg
inc
push
loopne
and
jnp
jno
out
std
adc
subb
cld
push
xor
test
pop
shl
movsl
cld
into
mov
das
and
je
testb
lahf
fistl
push
push
loopne
out
mov
push
call
xchg
adc
ja
push
jmp
mov
jne
push
js
fmulp
je
test
or
sbb
jle
pop
push
das
push
pusha
pop
push
mov
add
test
clc
push
add
cmpsb
mov
loopne
add
xchg
or
mov
xor
sbb
add
es
dec
sub
lock
mov
xor
xor
nop
push
ret
and
or
push
inc
fiaddl
insb
rcr
adc
dec
mov
xor
mov
add
ret
sbb
inc
push
mov
scas
or
sti
in
lea
xor
pop
mov
arpl
inc
add
insb
in
pushf
jae
or
mov
or
jo
add
mov
mov
pop
pop
add
jge
or
or
add
push
xchg
pushf
mov
lcall
xchg
inc
inc
adc
inc
dec
dec
push
stos
in
inc
add
pmulhuw
inc
les
push
adc
jns
add
push
cmp
fs
push
dec
jne
or
pop
xor
sub
jo
and
cmpsb
add
fmul
inc
sahf
and
push
loopne
sub
fs
push
cmp
mov
jmp
mov
xor
je
sbb
mov
add
outsl
cmp
je
movsbl
add
sub
jne
inc
cmp
dec
stos
lock
mov
inc
jmp
fbld
pop
mov
movsb
mov
adc
sub
lods
shll
inc
jl
add
jg
and
fstpt
cmp
shll
add
shll
out
iret
pusha
pop
rclb
mov
andb
fstl
cmp
mov
test
enter
add
sub
push
cmp
mov
divl
sub
add
jae
sub
mov
fcompl
mov
inc
mov
int3
cmp
inc
add
xor
xlat
mov
lcall
fadds
pop
inc
pop
sbb
lcall
push
pusha
cmpsb
imul
xor
out
inc
ret
cmpsb
jmp
inc
cmp
cs
pop
imul
inc
add
dec
add
pop
shrb
stos
stos
mulb
dec
dec
cmp
cmpsl
cmp
push
out
sub
sbb
pusha
pop
add
or
sub
aaa
andb
popa
jns
jne
jae
xor
andb
mov
pop
mov
push
add
jg
aaa
js
jg
outsb
xor
or
js
fwait
lahf
add
dec
inc
push
and
and
mov
mov
mov
add
dec
sub
lret
add
adc
nop
clc
inc
xchg
insb
lcall
lcall
and
push
add
or
adc
pushf
fdivrl
adc
lret
repz
or
js
mov
outsl
push
fs
nop
mov
jne
add
aaa
pop
packsswb
fnstenv
push
add
jo
mov
out
je
nop
rolb
inc
scas
popa
inc
adc
int
jno
sti
sbb
inc
or
fstpt
outsl
es
loop
fldcw
add
pop
adc
push
cmp
pop
or
ja
add
cmp
and
mov
push
outsb
jb
jl
add
and
js
dec
sbb
movsl
xchg
or
xchg
test
add
rolb
sbb
and
add
adcb
sbb
xchg
add
nop
or
jge
mov
jae
mov
push
int
xchg
subl
add
into
dec
mov
sbb
mov
push
mov
and
inc
cmp
sbb
ss
add
pop
adc
pop
mov
cwtl
pop
stos
ss
mov
inc
int3
dec
pop
or
jo
mov
jle
add
cmpsb
sti
rorl
add
or
jne
jp
orl
pavgw
pop
pop
stos
movb
arpl
or
das
aad
fs
or
or
dec
clc
je
inc
rclb
xchg
rorb
adc
xchg
push
jne
add
or
adc
mov
jbe
pop
add
adc
adc
fstpt
or
push
cmpsl
fs
enter
jne
or
ret
sbb
fisubl
pusha
fadd
adcb
int3
jle
mov
jnp
imul
or
add
xorl
bound
outsl
pop
jns
loopne
ret
jp
pop
testl
cwtl
sbb
lds
lea
jnp
outsl
jecxz
in
rcr
push
dec
mov
imul
jns
scas
lret
add
mov
inc
testb
adcb
xor
inc
cmp
push
fildll
jmp
add
xor
push
add
pop
jne
outsb
xor
mov
dec
int
aas
xlat
add
add
imul
xchg
add
mov
sub
add
cmp
lea
pop
outsb
leave
sbb
push
gs
dec
xlat
popf
or
outsb
jae
mul
pop
inc
and
xor
scas
jns
mov
add
movsl
or
and
add
addr16
pop
mov
gs
imul
out
es
push
sbb
outsb
add
adc
or
jae,pn
push
jb
cmp
fnstenv
dec
mulb
xor
mov
in
je
outsb
xchg
insb
popf
xchg
mov
adc
dec
or
lds
add
mov
sub
insl
scas
jnp
pop
xor
xor
je
mov
pop
fs
fsubs
or
daa
dec
dec
and
xlat
outsb
xchg
lods
iret
lea
adc
aaa
popa
arpl
fs
outsl
pcmpeqw
adc
jae
pop
xor
inc
push
imul
and
arpl
mov
xchg
out
add
adc
outsl
aam
pop
push
or
xor
xor
pop
and
xor
xchg
xor
xor
pop
mov
mov
xor
outsl
mov
xor
jg
clc
es
xor
repz
xor
adc
xchg
clc
jg
addr16
aaa
dec
aaa
pop
aaa
je
mov
aaa
aam
aas
cmp
cmp
jg
fildl
cmp
sarb
cmp
cmp
jo
mov
pop
xor
inc
ds
test
jle
movsl
ds
ds
xor
aas
addr16
ja
xchg
sarl
aas
aam
fwait
add
aaa
mov
push
xor
and
sub
bound
add
push
lea
or
inc
jmp
out
psubq
mov
test
jb
add
hlt
jl
xchg
fwait
out
push
sti
out
popa
pop
inc
out
flds
insb
in
flds
or
aaa
out
stc
in
stc
add
adc
dec
and
and
pop
sub
cmpb
or
push
test
outsl
adc
dec
push
iret
cmpl
and
lods
add
inc
dec
and
nop
test
js
out
repnz
inc
sub
inc
test
mov
aas
add
dec
xor
add
lcall
add
push
imul
imul
xor
cli
cs
sub
dec
lcall
in
add
fcoms
lcall
fcomp
jp
pop
sbb
pop
add
and
cwtl
xor
mov
pop
and
ret
test
dec
lcall
pop
out
and
mov
test
or
sbb
outsl
test
xchg
stos
xor
dec
push
adc
or
mov
call
push
sti
stc
mov
add
and
push
add
or
xchg
mov
jmp
in
or
and
dec
push
sbb
aad
and
adcl
or
add
inc
dec
push
and
and
and
mov
jns
and
push
xchg
es
or
inc
jne
and
addr16
insl
mov
out
pop
sub
std
out
sbb
fsubr
push
data16
call
icebp
nop
inc
cs
call
jb
cmp
mov
mov
add
call
clc
mov
lret
push
add
not
rcrb
repnz
ja
das
cld
lea
cmpl
test
ret
loopne
das
addl
inc
movsb
leave
ljmp
andb
mov
mov
inc
hlt
out
cmc
incl
incb
ljmp
xchg
mov
push
faddl
xchg
xchg
call
add
into
call
fidivrs
imul
dec
es
mov
or
cld
mov
andl
mov
fstp
sbb
orl
frstor
xchg
pop
mov
insl
pop
shr
scas
or
prefetch
sub
pmulhuw
outsb
cmp
pusha
adc
mov
cmp
pop
popa
and
add
pop
clc
daa
sub
push
dec
je
mov
inc
cmp
in
adc
jnp
mov
inc
pop
and
or
and
push
mov
repz
mov
pop
dec
rcll
imul
jmp
movl
pop
cmp
enter
adc
sbb
pop
jle
inc
add
lea
jecxz
jg
cld
mov
dec
mov
jne
es
pushl
sub
popf
hlt
inc
add
imul
jne
pop
mov
or
pop
das
push
pop
adc
mov
push
push
pop
fcoml
pop
and
sbb
and
sbb
clc
dec
mov
std
xchg
ss
clc
jle
lea
std
aaa
fcmovu
jge
cmpl
jle
cmp
jne
mov
inc
jmp
push
jnp
cmpsl
jecxz
fs
jle
mov
xor
mov
xchg
sub
mov
orb
loopne
push
mov
das
sbbb
shlb
fsubr
inc
push
push
cmpsb
in
sub
pushf
mov
sub
cltd
or
sbb
adc
pop
daa
das
xchg
add
or
push
pop
push
in
push
push
xor
jo
add
dec
stos
add
daa
lds
push
mov
sbb
xor
ss
add
out
mov
and
push
inc
aaa
mov
pop
stos
inc
inc
jg
icebp
pop
fstpt
add
push
lea
pop
mov
call
movsl
mov
jp
lods
lods
jb
dec
xor
std
idiv
clc
push
and
xchg
cmp
je
inc
add
cmp
jl
jmp
push
iret
add
mov
add
lret
addl
mov
push
mov
daa
fnstenv
std
jl
out
je
sbb
pop
pusha
fcoms
incb
adc
cwtl
and
fcomip
sbb
push
xchg
mov
cmpl
push
pop
shll
lea
jl
rcr
cmp
pop
mov
push
cmp
push
aad
jle
sbb
lret
data16
pop
les
adc
roll
cli
xor
inc
mov
and
mov
pushf
insb
and
sub
xor
and
jo
push
push
inc
sub
push
cld
or
sub
push
push
call
nop
aas
add
stc
scas
fwait
adc
xor
aas
negb
inc
int
ficomps
dec
lret
inc
lahf
add
leave
xor
es
loopne
call
jb
out
mov
loopne
and
and
rclb
push
jne
imul
adc
cmp
fisttpl
mov
jecxz
iret
test
and
and
xlat
fcomp
and
and
fcmovu
and
and
loopne
daa
iret
and
loop
loopne
aam
fwait
aas
cli
idiv
decl
int3
xor
fxch
pushf
aas
jo
sbb
gs
jae
dec
shrb
dec
andl
leave
jae
dec
aam
mov
or
rcl
nop
xchg
psrld
idiv
call
mov
xchg
pushf
and
faddl
mov
or
push
push
test
popa
in
push
cld
roll
pop
stos
add
insl
std
out
inc
mov
xchg
nop
cmp
mov
jle
sbb
add
insb
add
and
lea
das
mov
orb
mov
insl
imul
les
rorl
rcll
pop
push
dec
mov
xor
push
movsb
imul
push
popa
subb
adc
sub
aaa
adcb
add
xchg
fcmovu
nop
cmp
setg
sbb
lds
decl
mov
push
push
push
fcmovnu
adc
jo
inc
outsb
jbe
outsl
insl
lods
mov
aas
jae
and
mov
inc
addb
inc
popl
inc
dec
lret
mov
add
and
cmp
xchg
cmp
xor
and
and
sbb
dec
testl
outsl
jbe
jb
jb
mov
ret
add
pop
dec
outsb
das
fisubrl
inc
sbb
inc
jns
es
in
lods
je
outsl
insb
jae
dec
into
insb
xlat
adc
and
pop
cmc
mov
push
jne
mov
inc
je
and
xor
in
rolb
das
fdivl
cmp
adc
add
incl
imul
or
out
daa
andb
dec
mov
xchg
adc
movsl
mov
xchg
das
dec
xor
xorb
xor
xor
jno
decl
xor
xor
xor
xor
xor
xor
xor
fisttps
fdivl
jmp
aaa
mov
xchg
aaa
stos
aaa
cmp
lea
pop
jge
loop
add
adc
cmp
or
jl
mov
xchg
cmp
dec
cmp
cmp
cmp
cmp
mov
sub
mov
dec
cmp
xchg
cmp
movsb
mov
mov
cmp
adc
push
push
cltd
push
xor
and
add
movaps
mov
xor
test
inc
sbb
incb
gs
jne
arpl
lret
jle
or
or
xor
or
call
add
sbb
adcb
add
jb
sub
jmp
jne
push
popf
pop
inc
dec
or
pusha
aam
add
dec
or
pusha
sbb
inc
mov
insb
dec
mov
sub
adc
push
mov
jns
sidtl
int
add
out
cld
push
and
arpl
mov
or
and
mov
add
nop
fs
sbb
dec
add
mov
and
scas
xor
or
or
dec
lock
leave
test
fs
adc
cmp
adc
push
inc
add
cld
movsl
xchg
and
add
add
incl
add
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
