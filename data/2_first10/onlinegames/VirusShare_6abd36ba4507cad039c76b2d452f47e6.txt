stc
ja
call
in
sub
push
push
push
mov
mov
add
andb
outsl
jmp
inc
les
push
or
in
mov
gs
popa
enter
mov
jbe
lret
lret
outsl
int3
int
jb
jne
into
push
shll
shlb
xlat
insl
mov
inc
aad
add
cmp
pop
mov
mov
fldcw
fidivl
fisttpl
push
add
pop
loop
jecxz
add
inc
in
in
jmp
inc
call
imul
aaa
lock
pslld
mov
hlt
cmc
sbb
add
aaa
fbstp
cmpsb
clc
stc
dec
add
pop
sti
js
cld
je
fcmovnu
out
mov
xlat
sub
mov
jle
pop
pop
fs
pop
adc
mov
jg
movsb
adc
or
push
call
mov
jmp
mov
cmp
sbb
lea
add
call
inc
jmp
sbb
adc
call
mov
push
pop
je
cs
adc
divb
jne
or
xor
pop
pop
pop
leave
ret
or
outsb
adc
jmp
pushf
data16
pop
adc
xor
popf
xor
or
insl
mov
xor
push
addr16
mov
clc
xor
cmp
jne
mov
push
daa
xor
inc
or
fcmovnu
mov
sbb
or
jl
jb
shrb
mov
cmp
push
push
push
inc
push
adc
std
cmp
pop
ret
movsbl
push
jb
insl
mov
pop
ret
jmp
add
adc
mov
mov
je
mov
push
xor
mov
test
je
mov
sub
inc
inc
mov
test
mov
outsb
jnp
std
jne
andb
dec
ss
push
inc
push
xor
incb
push
inc
cmp
jl
clc
pop
jg
add
adc
inc
cmp
mov
and
shll
cmp
cs
test
push
push
push
or
pop
ds
pop
adcb
xorl
mov
mov
or
add
sub
mov
stos
shlb
les
fldt
fstpt
sub
andl
mov
xchg
push
push
push
push
sbb
sti
aas
out
push
add
cmpw
adc
mov
cld
or
call
inc
inc
sub
mov
inc
sbb
xchg
ret
fisttpll
nop
lock
mov
std
shrl
cld
das
cld
lea
mov
incb
mov
cltd
mov
mov
lea
push
mov
test
hlt
adc
cmp
jl
dec
mov
pop
jbe
inc
shl
fisubrl
adc
push
inc
cld
lock
clc
dec
clc
jmp
icebp
or
jmp
lods
ficoms
push
xor
cmp
idiv
in
or
test
adc
ret
mov
push
pop
cmp
jl
mov
xor
push
or
shl
nop
mov
stos
insl
pushf
mov
sbb
sbb
popa
adc
es
adc
xchg
sub
mov
fdivr
add
add
cmpsb
in
mov
add
add
push
fidivs
dec
in
loopne
mov
outsb
int3
push
add
add
cmpsb
imul
imul
cmpsb
imul
imul
push
mov
jb
adc
and
jne
xlat
jne
ret
imul
lds
sbb
insl
pusha
jne
push
enter
cltd
adc
lds
or
mov
push
push
dec
decl
push
and
in
add
aaa
cld
iret
sub
sub
mov
mov
cwtl
idiv
mov
mov
mov
subl
shr
dec
mov
sbb
jmp
outsl
pop
sbb
sbb
push
int3
les
jg
mov
das
jl
push
inc
jp
jae
xchg
or
mov
inc
imul
in
dec
jne
stos
push
sbb
adc
push
pop
add
repnz
jnp
js
movsb
adc
notb
clc
xchg
jnp
nop
push
push
js
push
jns
inc
imull
cld
adc
or
and
cmp
jne
push
sti
sub
jmp
push
add
mov
dec
cmp
and
je
adc
mov
cmc
movl
or
movsb
and
push
jns
fcoml
enter
push
sub
rcrb
cmpl
xor
pusha
inc
je
add
je
loope
dec
popa
or
ret
sub
sti
call
cmp
sarl
add
lret
cmp
dec
scas
in
sbb
mov
inc
jo
mov
lock
or
fsubs
push
cmc
dec
scas
idiv
je
dec
movb
jne
add
push
int3
rorb
stc
xor
movsb
inc
push
incb
outsl
lcall
adc
xchg
pop
loope
mov
std
cwtl
push
shlb
and
shll
mov
xor
mov
lea
and
push
ljmp
mov
or
add
mov
dec
add
and
shlb
insb
xor
pop
push
inc
mov
xlat
add
mov
pop
rorb
pop
push
push
shl
add
inc
les
pop
shll
lods
lods
pop
scas
xlat
jne
je
scas
add
dec
pop
xlat
jne
mov
mov
mov
mov
mov
mov
add
fbstp
mov
adc
xor
adc
push
cld
dec
or
sahf
repnz
es
sub
adc
or
rclb
in
inc
or
mov
cmp
mov
inc
dec
repnz
ficomps
rclb
mov
idiv
dec
cs
fmull
mov
mov
cmp
das
div
loop
pop
mov
pop
rcrl
add
arpl
push
add
cmp
and
call
jns
jbe
push
push
sbbb
loope
add
jo
jp
stos
push
das
push
outsl
pop
push
cld
jmp
and
add
push
lea
mulb
or
push
push
jmp
in
outsb
test
mov
lods
push
call
jmp
clc
or
push
outsl
xorl
push
cld
mov
xchg
hlt
push
lcall
mov
neg
push
or
fdiv
shlb
dec
sub
daa
lret
mov
sbbb
fistpl
push
sub
lock
fcomps
or
mov
sub
rcl
cmp
pusha
cmp
mov
inc
lret
gs
push
into
insl
test
inc
xchg
xchg
jmp
ja
inc
inc
sahf
in
xchg
in
pop
out
pxor
xor
inc
out
pop
lock
mov
jb
je
xor
gs
imul
addr16
std
xchg
xor
mov
subb
shrl
mov
fidivl
rep
stos
stos
pop
std
adc
lcall
int
clc
adc
sub
or
ret
inc
loop
push
push
jp
xchg
fiadds
inc
je
rol
js
push
mov
data16
push
pop
ret
ret
adc
or
cltd
sbbb
adc
xchg
and
je
adc
loopne
xchg
mov
pop
pop
arpl
insl
cmc
aam
lea
addr16
prefetcht1
fisubl
cmpl
daa
rclb
or
adc
les
or
inc
mov
pmulhw
push
fmull
and
pop
cld
cmp
out
jp
movsl
movsw
movsb
push
inc
pop
ljmp
push
cwtl
aam
daa
sbb
jbe
outsb
aas
mov
jmp
addb
sbb
clc
xchg
push
fstl
loope
mov
pop
lods
jmp
mov
xor
push
mov
pusha
push
and
mov
shrl
mov
mov
daa
cmp
cmp
sbb
data16
jle
test
pop
push
add
ss
fimuls
js
jnp
pop
idiv
cmp
jle
in
das
das
outsl
add
jl
popa
jle
jp
add
jo
fldt
pop
jl
pop
add
push
fdivl
dec
cmp
cs
pop
jecxz
lret
ds
add
ficompl
push
movsl
xchg
cli
adc
adc
cmp
std
nop
stc
adc
cmp
xchg
stc
pushf
cld
popf
movl
loopne
mov
adc
frstor
shl
push
cmp
and
lea
test
callw
data16
push
je
test
jecxz
in
dec
sbb
inc
in
out
out
call
pop
inc
jmp
arpl
push
or
in
and
push
xchg
cli
daa
inc
test
cmp
adc
cwtl
insb
cwtl
fwait
push
dec
and
stos
fcmovnb
or
incl
xor
rclb
jb
sti
test
stc
ljmp
adc
das
fs
inc
test
sbb
lods
in
gs
dec
popa
or
int
mov
mov
test
jmp
dec
gs
xor
dec
lock
inc
repnz
repz
scas
notb
imull
lcall
insb
lcall
inc
imul
or
es
shrl
fstp
fldenv
lcall
loopne
cmpsb
imul
push
imul
push
push
mov
into
xor
dec
cmp
jbe
sub
pusha
lcall
mov
cmp
cmp
inc
shrb
shll
int
fcoms
inc
aam
inc
mov
pop
jnp
mov
or
or
pop
mov
aas
push
aam
inc
adc
pop
dec
pop
cmp
js
or
cmp
jne
inc
stos
xchg
xor
scas
or
xlat
cmp
jge
or
repnz
outsl
aaa
or
pop
cmp
push
cmp
rorl
push
and
push
out
add
data16
loope
xchg
inc
inc
add
adc
sub
adc
cmp
iret
cwtl
aam
or
push
push
mov
in
shrb
pop
push
mov
sbb
xchg
aas
mov
mov
pop
pop
push
test
aas
push
inc
pop
and
nop
pop
nop
mov
adc
fisttps
push
dec
mov
push
xor
cmc
fs
adc
or
add
mov
sub
inc
insb
jle
xor
pusha
lock
fisubl
dec
insl
mov
outsl
sbbb
jae
aas
push
movb
or
push
movsb
jno
mov
add
mull
fimull
lret
addb
es
mov
movsl
jl
add
clc
das
jmp
cmc
adcb
out
movlps
out
and
sub
push
fs
loop
jns
out
and
pop
pop
mov
push
xor
int
ss
call
inc
xchg
jo
sti
shll
mov
xchg
jmp
mov
pop
outsb
push
dec
pushf
lret
std
dec
push
call
pop
rcr
sbb
inc
cmp
mov
adc
pushl
fdivr
ja
pushf
movaps
out
push
pop
jmp
imul
jmp
out
add
fdivrs
mov
rorl
or
jecxz
stos
mov
clc
lret
sbb
push
or
in
sar
mov
push
mov
adc
std
push
in
add
fcomps
or
cmp
stos
stos
stos
or
adc
pop
and
add
sbb
jecxz
je
test
push
push
fisubl
or
andb
mov
or
adc
sub
ret
dec
fwait
xlat
and
cs
subl
pop
push
xor
jge
mov
mov
bound
push
ss
adc
in
lea
mov
mov
test
sub
adc
pop
cmp
dec
pop
je
cmp
insb
push
jmp
les
cmp
sbb
pop
push
test
and
nop
fldt
mov
mov
repnz
add
in
subb
push
ror
xor
ret
inc
mov
loopne
cmpsl
pop
jge
out
push
adcb
xchg
ljmp
fnstcw
fcmovu
clc
pop
adc
push
cmp
pop
mov
cmp
sbb
and
xor
and
and
inc
aaa
fadd
push
cwtl
fdivr
jle
in
pop
sbb
adc
inc
enter
sbb
enter
and
shlb
xor
mov
mov
and
inc
adc
ret
lods
adc
push
fsubl
je
test
sub
loopne
xor
stos
ret
push
dec
pop
or
sbbb
loopne
pusha
pop
sbb
cmc
mulb
shll
xor
cwtl
call
adc
add
add
in
cwtl
xor
call
jmp
push
je
adc
jne
mov
test
inc
xlat
sbb
jbe
in
cmp
ret
push
push
sub
stos
ret
insb
cmpsb
add
pop
ljmp
or
popf
or
sbb
mov
sbb
pop
int3
repz
int
sbb
push
ja
push
stos
aaa
sub
aaa
sbb
or
loopne
mov
mov
adc
or
mov
xchg
push
jl
test
adc
or
add
mov
pusha
js
hlt
pusha
xor
jne
cld
push
adc
or
data16
ss
sbb
inc
fmull
mov
loopne
mov
push
xchg
add
mov
div
clc
stc
adc
mov
sti
sub
and
shlb
in
in
out
adc
mov
xor
in
out
bound
outsb
and
fwait
jmp
outsl
or
sbb
push
fs
out
ret
adc
add
mov
or
cli
movw
loopne
adc
or
push
sub
dec
and
pop
dec
ret
not
pop
call
adc
mov
sbb
das
push
out
hlt
dec
je
sbb
sbb
shrl
outsl
xchg
insl
arpl
sub
rolb
adc
add
mov
add
fs
mov
fs
mov
mov
mov
adc
cmp
arpl
sarb
stc
push
flds
sbb
cmpsb
sbb
mov
lods
icebp
xchg
neg
sbb
add
mov
mov
add
jb
sub
std
add
add
jae
sub
mov
or
loope
or
cmp
add
push
shrb
sub
mov
xor
mov
outsl
iret
mov
jmp
mov
add
sahf
or
clc
aaa
or
xor
mov
inc
clc
ja
lock
mov
xchg
cmp
cs
xchg
sub
in
dec
sbb
mov
sarb
orb
jbe
sub
insb
out
mov
xchg
mov
or
pushf
scas
fcmovnbe
jne
nop
add
or
push
ret
push
and
loopne
xor
and
out
jne
inc
or
add
or
jne
pop
and
aam
movsb
dec
jl
lea
mov
mul
add
movzwl
insl
hlt
fcmovnu
jmp
sub
add
imul
imul
add
cwtl
xor
cs
inc
or
popa
mov
and
cs
inc
call
aam
int3
sti
or
movb
mov
ret
xchg
xor
iret
outsl
push
inc
sbb
add
cmp
xor
xor
dec
pop
cmpsb
imul
imul
mov
sub
aas
pop
bound
dec
shll
mov
xor
ljmp
mov
sub
out
cmp
jmp
cwtl
sbb
imul
mov
cli
add
jnp
sbb
cmpsb
imul
imul
cmpsb
imul
xor
in
jne
push
fwait
punpcklwd
jg
call
pop
sbb
mov
sbb
xor
pop
es
cmpsl
loopne
ja
or
jl
test
in
incl
push
dec
inc
dec
xor
cs
insb
add
push
inc
push
dec
or
jmp
das
sti
out
add
xchg
insb
mov
mov
jg
roll
sbb
repz
into
mov
jg
jge
es
iret
movsl
das
pop
lahf
mov
push
pop
push
sti
add
aad
pop
out
mov
push
xor
push
fldlg2
pop
push
push
inc
push
push
xor
add
and
sub
cmpsl
mov
sbb
jb
gs
flds
xor
xor
pop
pop
add
testl
nop
nop
pop
mov
jge
icebp
adc
or
inc
adc
out
adc
jnp
add
add
push
push
push
push
push
mov
cmpb
add
popf
popa
jmp
testl
out
into
scas
loope
repz
mov
fldcw
xor
jnp
test
cmp
jo
jne
ret
call
mov
rcll
pop
jle
shll
test
out
mov
insl
arpl
inc
jae
arpl
jae
jle
insl
outsl
fs
aaa
mov
popf
mov
add
lock
cld
and
lcall
sub
insl
jae
je
insb
cmp
outsw
outsb
aaa
pop
jae
jae
gs
push
inc
and
push
add
adcb
push
and
push
imul
std
in
imul
arpl
sbb
outsl
jo
aaa
fnstsw
add
add
outsl
je
push
je
jbe
sti
jb
or
data16
js
push
and
ret
fcmovnu
arpl
outsl
data16
and
jnp
mov
bound
inc
dec
push
push
std
push
inc
push
inc
pop
dec
dec
inc
push
dec
mov
insl
test
add
xor
xchg
lcall
mov
mov
lea
aam
jb
cmpb
dec
push
push
add
add
add
pop
sub
ljmp
inc
add
pushl
lock
pop
mov
int
mov
push
imul
jb
insl
and
outsb
outsb
outsl
je
bound
jb
outsb
and
inc
psadbw
into
gs
out
out
psubq
cmpsl
mov
add
mov
stos
fbld
pop
mov
int
mov
mov
pop
neg
insl
pop
mov
popa
test
pop
scas
cmp
neg
jl
test
arpl
mov
imul
test
dec
add
add
pop
dec
adc
lock
fstpt
push
or
adc
shrb
sub
or
or
xchg
cmp
add
add
sbbl
sub
adc
test
pop
mov
add
shlb
sub
or
xorl
subl
or
ds
std
or
or
jb
popa
je
add
sbb
daa
sbb
or
add
test
pusha
daa
jbe
jo
add
dec
popa
pop
rolb
ja
xor
outsl
aas
ror
add
lahf
gs
outsl
arpl
fldenv
add
ja
cs
scas
jnp
clc
jae
popa
arpl
lahf
daa
or
jbe
push
mov
dec
popa
out
mov
sbb
and
loop
loopne
enter
adc
dec
loopne
mov
xor
pop
pushl
mov
xor
sub
fldt
jg
decl
fcomp
test
insl
mov
leave
in
insl
mov
mov
test
test
cld
lahf
call
xchg
mov
mov
cmp
stc
out
sub
xor
ss
xchg
sub
mov
mov
mov
lea
mov
or
adc
mov
fistps
and
ret
lds
inc
mov
mov
std
xchg
push
ret
add
decl
mov
xchg
or
adc
outsb
out
test
scas
mov
rol
sub
cmp
ja
jmp
mov
cmpsl
xor
mov
mov
sbb
sahf
mov
adc
xchg
xchg
ljmp
movsb
push
mov
ds
jb
repz
sbb
adc
xor
gs
stc
cmc
in
jnp
out
fcomi
in
gs
ja
jge
imul
insb
rcrl
stos
inc
jmp
xchg
push
mov
imul
mov
lahf
ljmp
decl
shlb
mov
mov
insb
popa
pop
mov
ret
push
clc
mov
jbe
aas
cmp
inc
mov
adc
movsl
dec
add
or
push
das
inc
push
ss
inc
outsb
nop
lcall
fcomps
cmpsb
add
dec
out
jns
and
ss
dec
int3
mov
or
call
sub
popa
fcmovu
pop
cmp
xchg
les
ret
jne
dec
mov
inc
std
jmp
popf
aam
rorb
adc
pandn
xchg
and
xchg
xchg
push
cld
cmp
rep
sbb
insb
aas
jg
xor
lds
jmp
xchg
les
aad
cld
or
push
idivl
je
jno
mov
jbe
flds
lods
popf
inc
mov
adc
jmp
sbb
sbb
std
mov
mov
inc
jp
sub
aad
movsb
lcall
stos
idivb
jge
pop
push
stos
stos
mov
jne
jecxz
dec
daa
mov
cmpsb
or
inc
push
scas
repz
les
icebp
jns
aaa
jne
xchg
adc
test
mov
cmpsb
inc
push
call
lahf
test
orl
push
adc
aaa
je
cmp
fmul
dec
insl
call
xchg
mov
hlt
jns
and
sub
outsb
ret
pop
dec
xchg
sub
test
xchg
mov
daa
xchg
or
bound
pop
aad
loop
out
in
in
daa
xchg
imul
add
xor
xor
test
cli
test
push
loope
ljmp
pop
sti
cmpsb
inc
js
imul
fsub
fdivr
pop
loope
jg
or
fstpt
jne
jo
jno
hlt
ss
shll
scas
cmp
outsl
push
lret
mov
mov
cwtl
inc
push
int3
popf
call
pop
lods
cmp
jle
sbb
or
pop
xorb
mov
dec
inc
ljmp
loop
movl
jmp
push
mov
dec
adc
enter
pop
ss
mov
xor
clc
jg
das
xchg
xchg
xor
sub
cmp
mov
icebp
cmpsb
test
xchg
jae
inc
test
cmpsl
divl
xchg
pop
and
push
inc
mov
mov
outsl
das
or
fisubrs
std
in
mov
xor
lea
cmp
repz
jbe
pop
lods
sub
fcoms
mov
add
rolb
pop
sar
lds
ret
push
roll
jbe
mov
xchg
shlb
adc
imul
mov
xlat
loopne
fisttpl
es
movsl
incl
lods
mov
icebp
vmovsd
adc
icebp
das
in
fildl
or
mov
rol
sub
decl
ja
je
scas
out
scas
rcl
push
pop
inc
xor
bnd
decl
inc
adc
lds
and
scas
je
sar
dec
cmp
xchg
or
inc
pop
pushl
jb
fists
inc
xchg
stos
inc
pop
cmp
sbb
mov
mov
push
lcall
xlat
add
mov
sbb
in
cltd
adc
repnz
pushl
hlt
push
cmp
sbb
cs
je
jp
jecxz
adc
jno
sar
into
out
inc
mov
pop
mov
mov
dec
mov
xor
cmp
mov
pop
or
sbb
pop
daa
stos
jbe
lret
mov
mov
xor
mov
xor
pushl
inc
push
mov
sbb
or
push
push
mov
mov
and
ss
pushl
jp
mov
lea
stc
jns
jnp
pop
mov
push
fcomps
jp
les
xchg
dec
les
cmp
push
jg
xchg
jbe
outsb
sub
jo
mov
add
pop
mov
lcall
jmp
filds
pushf
les
imul
xor
daa
xor
ret
cmp
std
gs
mov
and
sbb
and
test
jmp
sbb
or
dec
or
cwtl
fmuls
inc
and
mov
ffree
cmp
scas
in
dec
insb
adc
gs
mov
out
test
mov
fisttps
sub
aas
mov
jge
icebp
xchg
int
jne
mov
lcall
xchg
jl
jecxz
out
sbb
lret
inc
jl
mov
popa
hlt
enter
xor
lcall
cmp
sub
popa
subl
jns
mov
in
inc
repz
outsl
hlt
pushl
js
add
std
js
ret
mov
lds
inc
mov
incl
cmp
sub
fwait
popf
out
mov
shll
jg
or
sbb
adc
sbb
pop
mov
cmp
daa
adc
cmpsl
push
pusha
call
out
mov
wrmsr
add
sub
cld
push
xchg
cmovae
cmp
jmp
loopnew
movl
aad
fwait
scas
dec
adc
scas
adc
clc
adc
xchg
pusha
fmulp
xor
das
cld
pop
push
sub
lret
jp
hlt
pop
sub
mov
push
test
or
ficomps
es
push
popf
adc
scas
arpl
pop
jnp
rorb
mov
inc
stos
insb
repz
mov
sbb
push
push
push
and
adc
es
incb
call
ja
not
jno
rcl
fildll
nop
aam
jns
es
adc
nop
mov
sar
cmp
xchg
add
pusha
jno
lret
fwait
add
xchg
aaa
jbe
push
push
or
xlat
adc
or
mov
cwtl
cs
sbb
mov
aad
mov
stos
bound
in
insb
stos
in
inc
sbb
inc
sbb
mov
decl
push
sbb
les
sbb
push
stos
ja
xchg
cmp
jo
inc
call
cmpsb
sti
sti
inc
push
test
pop
or
mov
mov
mov
cmpsl
icebp
sahf
decl
in
cld
pop
mov
fstpt
inc
xor
dec
pushl
cmp
das
adc
push
andb
cmpb
pop
out
outsb
xchg
push
icebp
xor
push
push
rorl
repz
pop
es
and
mov
das
mov
out
ljmp
push
out
test
cmp
movsl
mov
add
inc
in
jg
sub
push
jg
lcall
mov
cmp
ss
ja
jo
addr16
mov
adc
adc
jmp
bound
dec
jb
dec
mov
push
cs
das
pop
shrb
daa
inc
inc
fdivrs
inc
cmp
jmp
rcr
roll
push
sbb
push
pop
dec
in
inc
loopne
add
loope
bound
clc
es
test
mov
out
sar
lcall
push
lret
cmpsb
or
fmul
std
mov
or
cmpsl
rcl
popa
lret
sti
lock
std
fnstsw
dec
movsb
mov
or
jmp
push
or
in
mov
call
xor
inc
pop
xlat
roll
mov
add
std
xchg
cmp
jno
mov
inc
dec
jl
lea
push
les
imul
sbb
incl
ficompl
cmc
xor
in
jmp
sub
mov
lcall
shl
cmc
xor
and
lock
test
mov
xor
push
mov
das
mov
mov
movsb
adc
cld
inc
ret
mov
push
ljmp
loope
call
pop
xchg
push
inc
inc
mov
mov
out
fxch
popf
nop
dec
leave
jge
jmp
jg
cmc
cmp
mov
roll
into
pop
mov
call
lret
aas
cmc
fbld
jne
jg
jg
in
xchg
andl
mov
ffreep
mov
test
js
mov
arpl
adc
in
rcl
punpcklbw
jno
outsl
fs
decl
popf
push
cmp
xchg
fisubs
inc
sbb
xchg
dec
clc
scas
pop
pop
imul
xchg
dec
dec
aad
pop
ror
xchg
push
pop
push
xor
hlt
mov
aad
icebp
in
fldcw
jo
fisttps
sub
push
inc
dec
sbb
xor
pop
adc
mov
call
push
mov
icebp
lods
dec
cwtl
inc
xchg
xor
int
incl
into
cli
int
inc
popa
cmpsl
add
mov
cvttps2pi
ljmp
loop
out
lahf
pushf
jle
pop
jae
fists
pop
shr
leave
push
jns
mov
sbb
stc
ss
pop
pop
cmp
lock
dec
adc
enter
pop
inc
arpl
inc
push
or
fstpt
inc
jp
adc
xor
xchg
lock
cld
ficompl
fs
imul
pushl
xorl
div
fsubs
pushf
and
mov
and
shl
jmp
mov
stos
mov
arpl
xor
addr16
cmp
jns
inc
pop
hlt
sub
push
pop
clc
jg
stc
jbe
divl
and
dec
daa
clc
mov
cmp
cmc
mov
sbb
fwait
sbb
dec
push
fwait
in
out
lods
int
push
add
cmp
fs
dec
mov
mov
incl
in
mov
daa
stos
add
mov
ret
dec
cmpsb
es
pop
in
jnp
push
pop
cli
arpl
jo
cmc
lcall
out
and
mov
fwait
nop
xchg
xor
decl
adc
repnz
cwtl
fsts
or
push
xchg
jl
and
aam
call
push
les
dec
or
call
lods
push
aam
jmp
hlt
loop
jecxz
xchg
enter
lcall
lock
sbb
scas
lea
push
adc
scas
xchg
mov
xchg
aam
lcall
movsb
jmp
jae
fbstp
out
outsl
inc
pop
sar
call
rcl
sahf
add
enter
jmp
cmc
mov
icebp
cmp
xor
lcall
or
test
incl
push
adc
adc
cmpsl
and
and
fmull
jp
shlb
sbb
lcall
push
cmpsl
xchg
es
dec
loopne
arpl
sti
mov
daa
xchg
bound
ret
sub
rorl
popf
sub
jmp
and
packssdw
test
cmc
dec
std
mov
cmp
notb
ss
pop
pop
cmp
aaa
decl
lock
adcb
fdivp
and
es
xchg
cmpsb
cmpsb
leave
mov
ljmp
call
xor
jp
cmp
clc
mov
ss
out
scas
mov
or
iret
decl
ljmp
je
xor
into
inc
push
xor
xchg
mov
in
lcall
imul
dec
faddp
adc
jp
stos
xor
fdivr
pushf
orl
lods
vminsd
aas
mov
adc
add
pop
jnp
push
jle
fidivrl
outsl
cmc
out
aaa
ss
mov
xchg
loopne
push
scas
incl
or
xchg
mov
lods
mov
dec
dec
push
cmp
push
int
in
add
dec
pop
pop
dec
test
test
xchg
add
push
repz
cmpsb
cmpsl
mov
subb
cmp
xchg
xor
ljmp
and
insb
ffreep
pop
mov
sbb
add
shrl
lcall
mov
int3
imul
mov
inc
das
fs
add
fmuls
std
push
out
xchg
push
sahf
xor
jb
out
enter
jno
subb
jmp
or
sub
sbb
sub
mov
jns
in
fadd
in
in
add
lock
fsubs
and
pop
xchg
lods
filds
movsl
lcall
mov
pop
fdivs
push
decb
int3
loopne
pop
mov
scas
cmc
mov
dec
fucomip
lcall
les
adc
bound
cmp
jne
mov
nop
loopne
and
insl
ss
mov
cmp
jg
cmp
sbb
dec
inc
jg
leave
out
mov
dec
mov
adc
cmpsl
mov
inc
dec
test
xchg
or
push
inc
adc
jge
pop
cli
decl
fsubs
mov
sub
das
flds
test
int
jg
loope
fcomip
mov
xchg
aam
sbb
lret
cld
cmp
cltd
repz
mov
movsl
xchg
ljmp
mov
les
jns
mov
in
inc
cmc
cld
mov
inc
ljmp
adc
fdivr
xchg
xchg
pushf
mov
mov
cmp
sahf
xchg
pop
mulb
cmp
insl
jmp
jo
aad
sbb
push
and
clc
inc
bnd
sub
sbb
jo
sahf
out
fs
lret
mov
adc
push
or
popa
fs
decl
addb
adc
xchg
sub
out
lret
shlb
dec
insb
mov
dec
arpl
cld
aaa
clc
loope
adc
mov
in
mov
cwtl
push
loopne
dec
cltd
pop
mov
inc
inc
fnstcw
outsl
je
inc
shrd
call
mov
dec
cmp
sub
jecxz,pt
int3
push
dec
outsl
add
push
cmp
outsb
push
inc
call
faddl
dec
pop
lret
xchg
lds
fs
cli
jmp
imul
xchg
in
mov
adc
sbb
lds
sbb
sbb
xchg
pop
add
pop
lock
push
fists
jg
push
add
dec
addr16
lds
push
push
xchg
dec
pop
and
sbb
das
push
mov
cmp
cmp
imul
adc
jae
aad
shll
lret
je
dec
xchg
add
pushl
fimuls
lcall
inc
out
clc
gs
jg
ss
ficoml
test
and
arpl
push
mov
push
mov
push
repz
inc
inc
dec
lahf
dec
stc
and
jb
mov
sub
push
fucomip
xor
gs
or
and
loope
decl
mov
cli
lods
push
mov
fdivs
xchg
in
adc
pop
fisubrl
xchg
orb
pushl
lahf
push
rorl
pop
xor
mov
sahf
and
mov
lock
or
cmp
int
or
lcall
popa
or
dec
xlat
adc
daa
pusha
gs
jg
call
push
jbe
push
in
repz
mov
xor
sarb
push
jmp
mov
or
negl
repz
hlt
ds
hlt
cld
xor
jmp
pop
jg
in
adcl
aas
push
mov
ljmp
push
call
dec
pushf
push
lods
adc
mov
rclb
adc
mov
and
fs
ljmp
sbb
into
pop
xchg
inc
mov
and
xor
fists
mov
add
int3
daa
and
push
pop
push
pushf
inc
cmp
xor
outsl
pop
movsb
data16
jle
sbb
inc
mov
sti
loope
jbe
and
test
push
in
push
inc
push
fidivrs
inc
xor
test
mov
test
lds
insl
int3
sbb
xchg
mov
dec
lods
adc
popf
jp
mov
pop
pusha
mov
subb
push
inc
imul
cmp
pushl
cmp
cmpsl
add
fs
hlt
pushl
mov
cld
push
lods
pop
adc
mov
aad
mov
ret
lods
mov
push
adc
ja
or
movsb
adc
jmp
push
aas
xchg
movsb
movsb
cmc
inc
inc
cli
pop
jecxz
out
aas
scas
cmp
ret
gs
jb
sbb
repnz
mov
dec
or
add
incl
out
xchg
bound
call
fidivrs
stos
popa
in
jno
int3
or
test
hlt
mov
mov
pop
mov
popa
push
lcall
fisubs
mov
popa
loope
pop
arpl
dec
push
aaa
imul
or
rclb
push
in
push
fwait
xor
test
in
adc
cmp
call
call
movsb
fnop
mov
fwait
pop
and
test
outsl
lock
pop
into
addr16
xchg
add
and
incl
js
push
mov
xchg
jle
imul
inc
push
inc
cmp
push
cmpsl
or
out
adc
and
call
sub
mov
jmp
outsb
add
dec
pop
iret
mov
data16
shlb
mov
sbb
das
jg
aas
mov
mov
dec
out
das
cmc
xlat
loopne
std
mov
mov
mov
unpcklps
out
jns
pop
lret
fsubr
sar
jb
sub
fwait
mov
decl
sub
hlt
sbb
dec
rcl
adc
int
adc
lock
jmp
orb
out
jg
insb
mov
push
adc
jge
out
push
gs
or
enter
das
repnz
das
fiadds
adc
dec
nop
punpckhdq
and
sbb
or
jmp
aam
add
lock
lods
xchg
xor
pusha
fs
cld
lcall
xchg
cmpb
je
out
jbe
cltd
fbstp
cmc
out
pushl
cmp
sub
add
cmp
sub
sete
enter
mov
xchg
xor
push
sbb
and
xchg
push
std
hlt
mov
xchg
pushf
cmp
cmp
jl
les
scas
pop
mov
sub
xchg
push
fisttps
cmp
xor
inc
cld
je
push
repz
outsl
pusha
and
ljmp
stos
lods
jae
cmc
mov
add
stc
test
mov
xchg
jmp
dec
mov
xchg
dec
xor
jae
add
push
enter
or
mov
ljmp
adc
mov
cmpb
std
pop
push
adc
test
pop
fdivs
mov
pop
fucomip
std
jo
daa
mov
mov
nop
fisubrs
inc
adc
pop
cmp
xchg
dec
push
mov
subb
push
enter
loope
sbb
incl
dec
andb
sub
and
movsl
lcall
out
scas
push
push
lods
rcrl
dec
push
dec
into
jnp
sahf
cwtl
test
inc
push
das
dec
mov
and
mov
push
adc
inc
jg
xchg
adc
call
or
mov
ljmp
cltd
or
mov
jecxz
clc
fbld
lcall
jecxz
push
ljmp
icebp
jl
lods
rorl
aaa
dec
int3
in
push
dec
sti
cmc
loope
pop
bound
fucomip
pushl
cld
leave
movsl
lods
aam
jmp
pop
fcmovbe
in
pop
and
mov
mov
nop
ret
cld
addl
adc
push
mov
pop
ret
mov
lret
shlb
mov
or
or
mov
rol
rorb
gs
jne
enter
push
rol
inc
incl
lret
mov
scas
xchg
or
cs
mov
adc
lcall
mull
fldt
pusha
push
lods
pop
xchg
xchg
clc
add
jbe
or
mov
cli
outsl
aaa
fisttps
xchg
xchg
add
jge
int3
hlt
xchg
xor
int
repnz
mov
sahf
jb
leave
sbb
adc
call
lcall
loopne
movsl
pop
xchg
xor
iret
mov
push
mov
pop
xor
cmpsl
jp
lahf
add
mov
inc
fwait
dec
xlat
imull
loop
pop
loop
sub
push
inc
imul
nop
push
outsb
lock
lcall
push
mov
push
fstpt
xchg
sub
push
les
outsl
je
mov
ret
sub
pop
dec
scas
push
sub
mov
cmpsl
fdiv
and
sub
xchg
and
jecxz
fists
add
shlb
test
out
leave
jmp
leave
adc
rorb
inc
jg
jnp
jl
popa
push
dec
xchg
pop
sub
scas
ds
and
nop
ljmp
out
dec
cmpb
mov
popa
xchg
lock
xlat
int3
lock
sarl
lds
lds
mov
inc
xchg
fs
je
in
inc
mov
in
and
call
ljmp
or
stos
jp
lds
add
mov
pop
into
cmpsl
incl
loope
cwtl
loope
nop
fbstp
add
mov
aas
xor
js
cld
mov
mov
sar
call
mov
xlat
call
dec
adc
sub
pop
mov
lcall
and
pusha
fldcw
bound
dec
cmp
pop
sbb
test
loopne
xchg
or
adc
ljmp
or
dec
imul
mov
cli
mov
rcr
lret
pop
pop
call
mov
insl
push
inc
inc
pop
push
fwait
xrelease
aad
sti
mov
cli
pushl
subb
and
std
in
jmp
mov
mov
sbb
cmp
cmc
mov
shrb
sbb
sbb
mov
push
aam
movb
pushl
mov
dec
sbb
cld
add
mov
and
mov
jg
call
aad
and
cwtl
jo
add
pop
test
xlat
mov
ret
push
and
or
xor
mov
inc
and
sbb
sbb
push
mov
xchg
mov
addb
mov
test
add
outsl
outsl
mov
fistpll
mov
pop
mov
inc
movsb
outsl
into
and
jo
call
out
out
popa
loop
insl
popf
inc
pop
lahf
jge
inc
mov
sbb
add
xchg
mov
out
lcall
mov
pop
repnz
mov
cmpl
out
scas
fs
push
adc
idivb
inc
fwait
test
mov
ret
and
lret
dec
adc
fdivs
sbb
std
jmp
fildll
and
rcrl
mov
mov
lahf
sbb
dec
ljmp
jbe
loopw
adc
rorl
lcall
call
mov
adc
pop
xchg
xchg
mov
jb
lea
mov
push
dec
cld
jmp
cmp
and
lahf
pop
jbe
jmp
int3
mov
fcomi
pop
jno
mov
mov
loop
icebp
pop
imul
lock
push
out
mov
jp
jge
dec
test
jns
cmp
shrb
paddq
cs
add
mov
out
cmp
pop
lods
repz
sbb
lahf
jmp
jl
in
dec
neg
sbb
xchg
push
nop
xor
leave
jle
call
inc
shl
xchg
fidivs
dec
mov
std
test
push
mov
mov
arpl
mov
fsubrs
pop
loopne
jb
insb
adc
lcall
and
dec
mov
in
iret
push
mov
lock
cmp
push
icebp
test
fsubrp
dec
jmp
mov
popf
xlat
push
shll
rep
inc
jmp
ficompl
sub
pop
gs
lcall
xor
dec
xchg
mov
fidivl
cwtl
sub
pop
cmc
jge
scas
add
jmp
mov
or
enter
mov
insb
hlt
jb
mov
pop
fwait
jge
xchg
aam
iret
rclb
call
fs
xlat
lea
in
jae
mov
jb
imul
xchg
lret
inc
jle
mov
fmull
or
xchg
pop
xlat
push
inc
jbe
or
ljmp
dec
sbb
ror
lcall
push
push
push
call
fimull
jecxz
call
jl
push
das
cmp
aaa
mov
cmc
jo
lock
jo
sub
lret
fwait
nop
fnstenv
push
or
mov
ja
into
nop
and
lods
adc
xor
mov
data16
call
mov
or
nop
fnsave
add
add
pop
imul
std
mov
shlb
jno
mov
jo
and
daa
push
idivl
gs
mov
cmp
sti
pop
daa
jb
dec
cmpsb
push
lcall
ret
outsb
pop
xor
ja
pop
fnstcw
mov
rcrb
jno
loopne
divl
ss
out
and
adc
cmc
call
inc
mov
push
xchg
add
cmp
lock
roll
outsb
sbb
ljmp
mov
dec
and
pop
and
jno
jns
fwait
je
sti
ds
jge
cmp
and
ljmp
push
xor
ljmp
lahf
xchg
jecxz
adc
das
jle
movsl
cmp
out
ret
test
out
xor
sahf
lcall
loopne
aaa
adc
add
vpcomud
std
pop
lods
movsl
loop
icebp
jne
aad
add
out
lahf
gs
mov
pushl
mov
cmp
push
loop
and
adc
dec
arpl
data16
mov
daa
loopne
mov
cli
lock
fs
dec
mov
inc
sub
int
xchg
dec
loopne
fstl
pop
mov
or
cs
gs
lcall
cmp
jp
imul
daa
ret
hlt
mov
sahf
hlt
ja
in
out
lcall
jb
std
into
aad
mov
ficompl
adcl
js
or
cmp
ret
cltd
jg
call
dec
nop
push
jns
pop
inc
sub
sbb
fsts
dec
jg
rcrl
pop
repz
jne
push
es
arpl
cli
mov
cld
das
cmc
arpl
test
cmpsb
adc
pop
pop
inc
dec
jge
idiv
call
push
mov
shll
loope
in
cmp
pop
jns
inc
stc
stos
sub
jg
sar
jge
ds
jne
pop
add
jg
stc
sti
lea
sbb
push
inc
cmc
push
push
add
sub
fcoml
loop
js
mov
into
fisttpl
adc
sub
stc
sub
jmp
pop
mov
jns
mov
jmp
dec
dec
push
pop
fwait
ljmp
pop
psubb
shlb
xchg
pop
jnp
sbb
mov
shr
fwait
imull
or
jne
or
in
lods
cltd
push
inc
jp
sub
test
push
out
sub
xchg
out
lret
sahf
or
push
outsl
and
cmpsl
jg
das
das
push
fnstsw
or
int3
add
mov
pshufw
sbb
fdivs
scas
adc
and
sbb
stc
sbb
pop
inc
fnstenv
std
repnz
loop
aad
push
cli
in
inc
pop
bound
icebp
fidivrs
mov
mov
sub
xor
stos
test
mov
movsb
sti
pop
std
popl
push
dec
cld
call
inc
dec
jo
sub
outsb
sub
and
pop
js
mov
shll
jno
mov
stos
and
shr
adcb
lcall
call
mov
xor
xor
pop
fnstenv
jo
and
mov
inc
repz
loop
in
in
lcall
jne
lcall
xor
sbb
arpl
cld
sub
pop
clc
xlat
mov
pop
cltd
jg
sbb
lock
call
call
lods
dec
int3
in
mov
cmp
movsl
or
lret
in
ja
ss
ljmp
dec
lea
imul
mov
and
mov
xor
adc
sub
call
cld
or
inc
stos
movsb
ja
xchg
pushf
xor
arpl
lret
push
lods
or
mov
jmp
ret
hlt
mov
inc
sti
in
mov
push
push
sub
decl
cld
cmp
jmp
or
enter
in
xor
sbb
mov
aaa
out
pop
sti
sti
xor
push
shr
mov
cld
inc
rcrl
pushf
ljmp
jb
stos
xor
sahf
mov
fmul
or
sahf
dec
cltd
jl
scas
pop
dec
mov
mov
ljmp
jns
out
and
mov
push
and
dec
xchg
xor
incl
mov
mov
xchg
in
cmpsb
inc
mov
push
adc
jae
and
adc
sti
xchg
loop
and
hlt
jg
lret
sbb
mov
clc
and
sar
ret
arpl
mov
xchg
cltd
sbb
pop
xor
scas
das
dec
or
fwait
loop
jo
mov
fcompl
inc
gs
dec
mov
fistpl
adc
inc
stc
cmpsl
bound
fs
sbb
push
call
outsl
pushl
int
sbb
jne
mov
repz
addr16
mov
add
incl
sbb
sbb
inc
xor
test
sbb
je
mov
sub
and
inc
push
das
std
aam
js
sarb
and
outsb
dec
sti
pop
cli
decl
and
test
add
data16
leave
xlat
or
jno
pop
jg
or
add
xchg
inc
addr16
mulb
fnstenv
mov
lcall
xchg
and
popf
adc
rep
loope
mov
adc
ja
incl
jae
jno
jecxz
hlt
mov
dec
into
jbe
xor
sub
lahf
push
lods
in
cmc
in
loope
cmp
call
addr16
test
or
out
test
dec
fadds
add
addl
loopne
out
lock
cmp
sub
ja
xchg
mov
movsl
cmp
dec
mov
outsl
imul
out
into
or
pushf
push
pop
popa
cld
aaa
mov
adc
in
sub
sub
mov
xchg
jp
lods
push
push
adc
xor
fisttps
fsubl
inc
dec
jle
dec
add
aad
rorl
mov
aam
mov
aam
cli
sub
jb
pop
pop
or
and
sub
mov
dec
mov
push
icebp
repnz
pop
pop
ds
mov
sub
add
jg
lods
notl
pop
scas
in
pop
es
pushf
fwait
xchg
pop
aam
call
mov
enter
fcmovb
xchg
clc
jnp
mov
cli
rcrl
mov
mov
jbe
xor
push
gs
xchg
aas
inc
push
stos
incl
dec
mov
das
bnd
jge
pop
aas
xchg
cltd
sbb
jg
imul
push
enter
imul
pop
jecxz
xor
iret
aas
dec
sarb
icebp
incl
push
data16
int3
iret
int3
cli
cmpsl
mov
lcall
xchg
fdivr
ljmp
sub
mov
xor
xchg
or
or
sbb
adc
inc
cltd
push
or
cmp
or
xchg
iret
xchg
aas
scas
lea
cmp
adc
notb
mov
xor
test
imul
call
test
std
es
fwait
out
sbb
mov
pop
sub
outsl
jg
adc
lahf
inc
sub
data16
cld
hlt
cwtl
mov
aaa
leave
push
sub
nop
pushf
xor
subl
pushl
sub
xor
pop
adc
jae
add
in
mov
sbb
dec
test
les
jno
out
popa
lret
je
pop
mov
and
cld
pushl
xchg
adc
jl
sbb
and
sbb
lcall
cld
jg
inc
outsl
push
test
mov
xchg
xchg
sbb
mov
cli
jg
sub
fincstp
fdivrs
jb
insb
loopne
jns
lds
aaa
imul
xor
into
mov
outsb
dec
cmp
inc
cmp
xor
das
jno
mov
call
shl
mov
les
mov
jne
mov
xor
xor
pop
enter
lcall
lret
dec
sbb
pop
pop
sbb
loopne
lods
enter
je
out
adc
cmc
xchg
mov
aas
fimull
dec
pop
ljmp
push
adc
dec
dec
ret
mov
lock
stc
lds
scas
xlat
jmp
pushf
inc
cmp
mov
cmpsl
sbb
cwtl
add
icebp
fcmovnbe
push
je
xchg
cmp
cwtl
es
mov
pop
pusha
or
xchg
je
aad
lret
xor
idivl
ljmp
std
mov
rolb
cwtl
rclb
mov
lods
shrl
cmp
cli
xor
jo
xorb
dec
sbb
cmp
mov
inc
push
scas
addr16
pushl
push
aas
pop
xor
adc
mov
cmp
dec
jbe
sub
pushl
and
or
fldt
sub
push
push
jg
movsl
stos
jae
sub
pusha
xor
or
lcall
stos
mov
jae
shrl
rcrl
sub
out
pop
movsl
pushl
test
fnsave
and
mov
stos
push
shll
push
shll
adc
or
gs
leave
lcall
xchg
leave
das
xchg
push
lods
add
rcll
mov
movsb
mov
aas
and
aad
fbld
jl
rcpps
int3
repz
jle
lret
imul
mov
sahf
cmp
movsl
jle
jae
int
flds
leave
popa
flds
incl
inc
fdivr
cmp
aas
es
push
mov
and
sti
xchg
pop
push
mov
incl
pop
divb
bt
lret
test
iret
push
nop
pop
mov
lods
push
dec
dec
shll
sbb
call
xor
pop
cli
aad
dec
test
aam
cmp
decl
incl
fldl
adc
and
mov
lahf
cwtl
sub
jecxz
or
mov
pop
or
pop
out
cltd
xor
aad
test
ds
jmp
ss
xor
jno
adc
shrl
jg
neg
stos
sbbb
testl
iret
cld
pop
pushf
in
or
push
jb
fs
mov
xor
add
add
stos
add
in
call
xor
cltd
pop
stc
jge
jmp
fwait
test
mov
les
imul
sub
xchg
sub
jge
inc
test
mov
nop
jae
xor
in
int
ljmp
push
es
shlb
decl
dec
pop
adc
jmp
scas
les
pop
dec
pop
jmp
das
scas
mov
call
call
sbb
cmpsl
sar
jae
pop
jg
inc
pop
xchg
push
xor
xchg
lcall
lods
add
mov
scas
mov
clc
push
adc
loop
mov
xor
bound
jb
sub
add
sub
pop
or
or
cmp
jmp
mov
push
and
push
mov
push
fistpll
pop
mov
aaa
dec
shlb
addr16
pop
loopne
clc
dec
incl
lods
pop
daa
xor
lea
lods
incl
int3
ficoms
and
jno
or
loop
cmp
xlat
clc
lods
jge
pushl
lods
stc
adc
stos
and
jo
jne
jno
js
idivb
js
into
in
jg
mov
filds
inc
mov
add
rol
pop
or
jg
fistl
pushf
outsl
adc
mov
fstpl
xchg
dec
lods
push
xchg
pushl
pop
jno
mov
adc
sbb
pop
sbb
fcomip
out
movsb
xor
mov
fdivl
adc
pusha
test
sub
mov
ret
out
add
add
cmp
dec
cmp
add
xor
push
ljmp
sub
lods
test
mul
cmp
jecxz
jb
out
decl
add
ja
inc
push
stos
lcall
mov
xchg
jl
dec
pushf
pop
add
pop
decb
xor
ljmp
aaa
pop
xchg
lret
in
or
pop
pop
in
xchg
mov
lods
mov
pushl
mov
arpl
jecxz
pop
imul
jmp
gs
jbe
scas
push
lret
call
lret
pop
clc
sbb
mov
and
inc
lahf
incb
mov
stos
pushl
arpl
jge
fistl
sub
mov
dec
push
inc
test
and
pushl
jne
mov
addr16
and
push
gs
mov
std
data16
dec
mov
cmp
mov
mov
decl
sbb
ficoms
sub
dec
pop
push
test
cmp
xor
mov
cmpsb
in
mov
pop
es
add
mov
xchg
xchg
adc
sti
push
ja
cmp
clc
sub
inc
js
pop
outsb
jmp
andl
ds
push
or
repnz
or
lcall
in
jmp
lahf
sbb
pop
sub
cmp
mov
into
add
or
ljmp
add
jle
cwtl
cmp
out
fsts
adc
lcall
aas
push
or
shl
mov
mov
dec
lock
cwtl
xlat
push
mov
pop
sub
inc
cli
mov
sub
lods
int3
and
aad
loope
jg
arpl
and
icebp
lcall
push
xor
adc
xor
test
pop
sub
icebp
outsb
ljmp
andl
aaa
icebp
add
les
icebp
js
movsb
push
cmc
insb
ljmp
outsl
mov
arpl
fists
cli
ds
mov
call
mov
mov
out
fistpll
iret
or
push
push
pop
into
ret
dec
testb
inc
sahf
cli
sarb
ret
or
out
xor
in
test
lcall
add
mov
and
test
ror
jae
mov
jg
xlat
xchg
mov
repz
clc
idivl
jle
jnp
jecxz
les
fucomip
pushl
xchg
pop
xor
lret
lock
out
xchg
pop
ja
movsl
pop
inc
dec
pop
cli
decl
mov
xchg
sub
dec
imul
clc
jl
pop
push
push
data16
std
incl
xor
stc
adc
or
lahf
dec
inc
cmc
push
aad
or
push
pop
fstl
ljmp
cmc
nop
dec
jl
lds
mov
mov
out
icebp
inc
jnp
and
dec
bound
push
aas
mov
inc
ljmp
lret
stc
cmc
sub
mov
mov
adc
jmp
test
cmpsb
call
jge
popf
in
jmp
scas
dec
shl
dec
das
jbe
cmp
and
repnz
fucomip
dec
ret
adc
push
jmp
aas
sbb
call
xchg
jge
jb
add
call
pop
add
loope
repz
icebp
xor
and
test
push
insl
mov
jmp
xchg
int
mov
shrb
dec
mov
cmpsb
fs
out
dec
pop
decb
std
imul
dec
dec
push
pop
add
rcrb
lods
in
fcomps
adc
and
add
ss
repnz
jo
negb
rolb
icebp
hlt
xchg
xchg
cltd
std
ljmp
test
js
imul
mov
push
call
mov
movsl
fs
push
xor
mov
mov
ljmp
es
repnz
je
test
lcall
xchg
lds
fcmovu
push
inc
and
lret
sbb
fsubrs
sbb
out
fnstsw
inc
scas
je
pop
int3
fwait
push
out
ds
cmpsl
jne
and
in
cmp
cmp
pop
fsubrp
sub
mov
mov
jmp
push
test
inc
mov
mov
scas
cmp
xchg
push
adc
and
cmp
jg
cmpsb
sti
jns
das
iret
add
int3
sbb
cmp
push
mov
mov
rorb
pop
cmc
mov
mov
cmp
xchg
mov
mov
adc
or
pop
adc
mov
mov
bound
jnp
mov
mov
or
dec
mov
ljmp
std
cld
dec
stc
out
push
out
xor
ljmp
ja
test
int3
outsb
jno
pushf
sub
rol
and
lods
movsb
sub
mov
mov
jmp
fistps
cli
shrb
xchg
add
mull
iret
fists
xlat
jl
mov
lock
dec
call
jg
add
rclb
add
lcall
repz
cmpsl
loopne
mov
incl
sub
popa
jns
fsubrl
sbb
lods
hlt
mov
insl
xor
lcall
lcall
inc
in
in
sbb
test
pop
jo
mov
std
pop
nop
push
sbb
pushl
mov
mov
int3
stos
jnp
jb
das
or
stc
mov
jmp
gs
jl
xor
sub
mov
lods
mov
int
sar
jg
int3
addr16
xlat
sbb
cmp
pop
lods
mov
and
inc
fistps
jmp
cli
pop
sti
es
cli
call
push
dec
aaa
jle
ret
gs
cltd
test
stos
ljmp
pop
cmp
sub
jbe
into
sbb
jbe
scas
inc
cmpsl
mov
imul
cltd
scas
call
icebp
mov
fs
mov
jge
dec
sbb
push
mov
incl
faddp
ret
popa
out
bound
xchg
xchg
imul
mov
pushl
clc
addr16
aas
add
add
test
pop
mov
cmpsb
or
add
mov
mov
add
data16
mov
js
filds
dec
sar
and
loop
xor
and
xchg
pushl
push
sub
sbb
mov
add
enter
movsl
jbe
dec
cmp
int3
cmpsl
cmp
jno
call
pop
jns
mov
mov
int3
push
out
adc
outsb
out
jnp
xor
sub
inc
cmp
pushf
jl
and
inc
mov
cmp
das
icebp
mov
dec
dec
jo
aas
test
inc
stc
add
mov
rorl
ljmp
xchg
cmc
dec
sbb
push
dec
pop
mov
sbb
ja
sahf
ds
pushl
mov
out
and
inc
sub
lods
mov
xchg
cmc
ljmp
mov
inc
adc
inc
loope
repnz
jecxz
cltd
lods
push
cwtl
pushf
and
jmp
push
cmp
les
std
xor
mov
iret
shr
or
lcall
xor
mov
push
rcr
bound
cmc
xchg
xor
and
imul
xor
xchg
mov
jg
fldl
faddl
jbe
sti
mov
imul
jl
jecxz
pushl
das
cmpsb
outsb
xor
jb
sti
xlat
or
xchg
loop
jbe
inc
jbe
js
inc
jmp
popf
mov
add
cmp
scas
sbbl
xchg
push
lret
xor
dec
sub
ljmp
in
mov
mov
push
mov
cmp
and
cwtl
call
jg
popf
lcall
mov
mov
jmp
imul
pop
outsb
aad
jg
lea
divb
arpl
xor
data16
xchg
loopne
scas
jp
mov
decl
and
mov
sbb
das
xor
movsl
ja
inc
dec
push
add
mov
lret
jp
icebp
push
xor
mov
enter
mov
add
addr16
je
cmp
or
sbb
ret
dec
jmp
decl
sti
out
jnp
xlat
sbb
mov
mov
decl
push
push
xor
mov
or
mov
lods
lahf
in
dec
sub
mov
in
rol
mov
into
insb
rcll
dec
xchg
fucomip
or
fstpt
mov
lock
dec
cld
mov
shll
pop
mov
mov
add
inc
cmc
mov
xchg
adc
adc
mov
dec
cs
lock
xchg
out
sub
in
pop
cli
pushl
stos
stos
cmpsb
cmp
lret
dec
pop
push
jecxz
popl
decl
es
xchg
dec
icebp
mov
jle
std
sbb
sbb
pop
loope
aad
mov
and
inc
jnp
cmp
lea
push
das
xor
jo
ja
adc
jg
mov
decl
in
iret
leave
and
jo
adc
test
add
sub
call
mov
jne
jge
or
or
popa
push
adc
daa
leave
into
pushf
test
lds
mov
or
cmp
mov
xchg
and
dec
jg
push
dec
xchg
mov
mov
dec
sbb
jecxz
fnstenv
mov
mov
test
add
push
xor
and
lds
add
or
xor
pushl
clc
testb
shll
mov
adc
mov
idiv
ljmp
data16
insb
fisttpl
xchg
cmp
out
in
out
inc
adc
out
mov
lcall
movsl
mov
aam
test
cmpb
orb
lea
je
scas
pushf
mov
pop
dec
adc
lcall
das
or
cmp
cmp
and
loop
or
test
pushf
pop
decl
mov
push
lea
cmp
in
loop
inc
aas
lods
shrl
decl
push
pop
inc
mov
roll
mov
stos
std
inc
pop
mov
jno
fnstenv
push
inc
shl
loopne
jecxz
pop
stos
sub
jg
inc
decl
jp
test
push
outsb
push
mov
addr16
ss
lcall
decl
xchg
push
mov
pusha
test
js
dec
or
call
jg
adcb
push
jle
sbbl
sub
ffreep
int
roll
fdivrs
sub
fstps
xchg
sub
sbb
xchg
fisubrs
pop
test
idiv
dec
and
mov
mov
cli
sahf
cltd
popa
xor
and
nop
mov
push
test
mov
adc
aas
and
push
inc
sbb
sbb
rcr
dec
mov
inc
push
stc
sbb
incl
adc
push
cmp
scas
xchg
fisubl
in
sub
jo
jle
pushf
xchg
sbb
lods
sti
das
sub
adc
out
std
scas
int3
inc
fcompl
ljmp
aad
push
aam
popa
mov
mull
out
call
fdivrp
or
sub
adc
fwait
loop
and
js
cmp
pop
sub
fs
sti
jnp
or
std
mov
adc
and
sbb
add
in
cli
outsl
je
in
movsl
dec
sbb
mov
fistps
push
lods
faddp
mov
movsl
andb
mov
paddsb
mov
incl
xor
dec
sub
and
mov
call
std
call
aad
push
jecxz
xchg
sub
push
sbb
mov
add
mov
jmp
jmp
mov
call
ss
jne
mov
xchg
pushf
mov
in
aaa
cli
ljmp
js
cwtl
mul
in
cwtl
arpl
pop
mov
mov
lcall
rcr
loop
jmp
jno
idiv
mov
std
mov
jg
lcall
std
dec
xor
sarl
or
mov
inc
add
sar
leave
out
sbb
mov
dec
push
popf
lds
push
add
ret
cs
mov
cmpsl
fisttpl
rcrl
cmp
mov
test
jg
testl
xchg
adc
adc
pop
in
or
mov
lret
or
or
decl
and
outsl
push
out
scas
rcll
push
mov
bound
push
cmp
dec
cwtl
pop
cmp
incl
icebp
insb
nop
andl
sub
mov
mov
jnp
js
jmp
pop
imul
aas
aas
mulb
inc
push
adc
jne
loopne
mov
in
push
rcr
cmpsb
movsl
ret
xor
inc
in
jo
mov
gs
daa
jecxz
aas
jb
addb
mov
fwait
dec
or
clc
dec
jbe
cld
mov
addr16
adc
mov
pop
lock
sbb
pop
aaa
xor
les
pop
ljmp
negl
pusha
pop
stos
icebp
dec
and
add
adc
in
pop
std
jmp
dec
dec
jo,pt
jns
mov
lock
adc
pop
fwait
jmp
icebp
mov
shrl
rcll
cld
mov
ljmp
pop
sahf
dec
aas
xor
push
xchg
push
loope
sbb
dec
cld
pop
aas
xlat
mov
jb
xor
in
lods
add
mov
call
aas
ss
dec
xor
rcrb
call
sti
adc
fisttpll
out
mov
andb
scas
xchg
sub
cmp
ljmp
jnp
dec
push
mov
pusha
pusha
jnp
aas
addr16
xlat
dec
out
out
ljmp
lcall
jne
orl
insb
stos
das
sbb
pop
adc
pop
subl
or
out
dec
push
and
loope
in
inc
mov
icebp
mov
loopne
leave
add
cmp
lcall
cmp
mov
adcl
mov
cmp
jo
test
repz
decl
jecxz
pushf
lods
mov
jne
mov
decl
mov
inc
sbb
popl
sub
into
dec
jne
int3
gs
or
jg
adc
aaa
je
pusha
sbb
sub
mov
and
mov
filds
dec
ret
cmp
sbb
and
adc
mov
loop
incl
pop
jb
inc
sub
mov
xor
ret
fildll
cmc
and
pop
inc
mov
push
pop
cmp
aaa
add
inc
ljmp
in
scas
daa
ret
xor
push
into
cmc
mov
jmp
adc
sbb
cmp
int3
insl
loop
mov
or
and
pop
imul
enter
arpl
lcall
ficomps
lahf
lahf
mov
in
xchg
shll
sbb
pop
mov
mov
sub
cmp
jno
add
and
ret
jns
mov
pop
loop
loope
decl
sbb
adc
cmpsl
lods
mov
pop
mov
mov
out
shll
enter
jl
clc
and
and
and
shl
neg
outsl
cld
jmp
push
push
dec
xor
push
in
fcoml
inc
ljmp
jns
mov
adc
movsl
xchg
cmp
popa
push
pop
adc
andb
mov
pushl
inc
xor
cwtl
fbld
stos
popa
mov
test
and
call
mov
dec
xor
xor
or
decl
sub
cld
sub
add
and
mov
mov
mov
mov
es
pushl
mov
adc
cwtl
mov
daa
add
lcall
stos
mov
bound
sahf
addr16
mov
cltd
adc
pop
loop
cld
jl
cld
fwait
sub
lea
sub
or
dec
dec
mov
daa
ret
add
sub
cmp
daa
pop
sbb
mov
dec
dec
mov
push
push
arpl
sub
sub
fdivr
inc
pushf
cwtl
imul
pop
imulb
push
mov
cmpsb
mov
mov
push
sbb
dec
inc
repnz
xor
push
daa
sbb
shll
call
jp
aad
cmc
and
mov
out
sub
jo
hlt
lahf
mov
mov
mov
ljmp
cmp
pop
dec
daa
outsl
stos
push
add
and
xor
sub
cmp
incl
daa
iret
xor
fwait
pop
loop
jp
iret
lods
push
clc
mov
icebp
sar
lcall
leave
popl
fdivr
push
mov
mov
pop
decl
ljmp
mov
adc
imul
icebp
mov
mov
and
xor
sbb
inc
in
mov
cmp
icebp
mov
dec
pop
dec
dec
jmp
mov
pop
jl
ja
mov
cmp
mov
xor
out
inc
sti
jne
push
insb
test
fldt
test
mov
popa
cmpsb
fwait
fwait
xor
loopne
cli
mov
jns
add
das
icebp
xor
xor
sbb
adc
loop
cli
sub
mov
pushf
add
or
jmp
popf
lods
cs
push
cmpsl
dec
mov
jae
out
insb
sbb
push
push
subb
outsl
imul
das
mov
cwtl
push
mov
or
sub
pop
cmp
out
add
cmpsl
fnsave
pop
inc
fistpll
mov
sahf
xor
jl
arpl
xlat
lods
push
mov
and
std
cmpl
jmp
std
mov
dec
dec
inc
sbb
imul
dec
push
test
or
jg
aam
mov
xor
xor
ljmp
jge
pop
enter
jge
pushf
cmp
pusha
push
push
ss
lods
imul
frstor
pop
sbb
es
xchg
sub
xchg
sub
mov
icebp
shl
inc
cld
pop
clc
call
lcall
pop
sub
mov
jecxz
or
int3
push
test
dec
gs
lds
mov
mov
frstor
outsb
ficompl
imull
rcrb
and
loope
outsl
sbb
mov
xlat
and
aas
inc
cli
in
jmp
push
clc
data16
lods
adc
iret
hlt
xor
rolb
pushl
or
lcall
cmp
cmpsb
aaa
xchg
jb
mov
ljmp
cmc
orb
push
pop
mov
pop
outsl
cmp
adc
in
fcompl
decl
fcmovnu
jg
or
jecxz
pop
sbb
lds
int3
icebp
icebp
outsb
ret
jg
das
cmc
jns
pop
out
out
push
scas
loope
mov
mulb
sub
loop
hlt
call
inc
push
mul
mov
subb
mov
mov
adc
xor
mov
mov
sub
lods
jle
call
es
mov
mov
xsha256
cmpsb
push
sbb
ja
sbb
in
leave
icebp
push
xchg
cld
sti
sbb
pop
cwtl
mov
addl
push
jne
mov
lret
ljmp
mov
dec
adc
orb
dec
push
cltd
sbb
dec
popf
push
jp
outsl
hlt
cmp
daa
add
cmpsb
jecxz
xchg
xor
mov
pushf
in
jno
call
incl
rolb
pop
leave
adc
fmull
jl
call
fcmovnb
or
ss
pop
dec
pop
push
out
addl
in
lods
pushf
mov
xchg
xchg
jnp
test
movb
dec
in
enter
pop
aam
mov
call
xor
sub
xchg
jnp
sub
clc
cld
repz
icebp
lods
add
call
jg
shr
rolb
fbld
cmp
cmp
aaa
in
inc
cli
mov
decl
inc
pop
fnstenv
dec
pop
aaa
pop
cltd
or
or
mov
clc
decl
push
lcall
xor
jae
mov
pushl
xor
push
xchg
push
fucomi
or
decl
test
cmc
ljmp
bound
xchg
insb
lcall
aaa
out
jge
out
das
std
incl
sbbl
pop
xor
fldt
rolb
imul
fadd
insb
sub
test
mov
adcb
add
dec
sbb
dec
jmp
sarl
inc
mov
jmp
push
adc
mov
adc
adc
dec
enter
into
repz
and
mov
sub
lahf
aas
imul
aas
incl
in
ffreep
jnp
mul
out
lcall
or
mov
mov
subb
add
pop
inc
and
les
pushl
mov
fbstp
shr
shlb
js
xor
mov
sbb
sub
mov
inc
lret
fisttps
xor
dec
push
dec
inc
lock
cmc
pop
enter
decl
andl
xchg
test
push
iret
sub
and
adc
iret
pop
aaa
cs
pop
call
xor
push
add
js
iret
idivl
push
jnp
jmp
bnd
jnp
fcmovu
mov
push
andl
push
jo
jnp
xchg
xor
out
lea
push
cmpsl
aad
sar
jg
js
push
sbb
jnp
stos
xlat
dec
insl
or
mov
lds
pop
clc
in
add
xchg
fldt
ljmp
dec
mov
push
push
jp
call
decl
movsl
mul
cld
das
pop
les
mov
fmul
mov
iret
jge
incl
inc
jg
idivl
add
insb
out
addl
mov
dec
xchg
fdivr
clc
ljmp
ret
cmp
shll
scas
test
ret
xchg
pushl
out
out
cmp
mov
xchg
mov
movsb
icebp
rep
cmp
popa
rcll
hlt
idivl
fdivs
xchg
shrb
dec
jg
mov
and
add
sub
add
call
sub
cld
mov
or
sub
in
pop
nop
mov
and
inc
outsl
ljmp
lcall
mov
outsl
imul
cltd
and
pop
fdivrp
incl
subb
and
das
orb
mov
aas
pop
mov
cld
inc
decl
inc
in
lock
push
mov
repnz
incl
insl
ds
xor
pop
je
outsl
iret
inc
jns
dec
rol
lds
pushl
xchg
inc
pop
lret
inc
cs
insl
lods
lock
arpl
jecxz
aas
xchg
stos
inc
popf
inc
repz
mov
jg
faddl
pop
cmpsb
pop
cli
movsl
pop
data16
roll
cld
sub
cld
inc
lcall
pop
jmp
add
jl
jmp
les
aaa
cltd
and
fidivs
mov
push
cmpb
add
ljmp
sbbl
frstor
sbb
aad
imul
jne
cmp
call
clc
lret
js
push
sbb
lcall
sbb
sub
test
xchg
sub
in
lcall
in
dec
lret
movb
push
fdivrp
lcall
or
push
xchg
dec
adc
inc
push
xchg
ror
push
in
xor
sti
dec
or
fucomip
call
xchg
loop
mov
aas
fisttps
jne
ss
or
out
mov
push
movb
push
pop
int
out
xlat
sub
imul
dec
mov
rcll
sub
pop
sbb
decl
shrl
add
into
and
call
ret
sbb
fadd
and
nop
das
xor
dec
ljmp
mov
lret
negb
dec
repnz
pushf
lret
jo
cltd
mov
dec
aas
adc
test
jmp
dec
jmp
dec
dec
cmp
push
mov
jg
decl
mov
jnp
fidivl
fwait
in
sub
addr16
fldcw
push
adc
ljmp
dec
fs
iret
mov
inc
pop
les
mov
adc
inc
jp
cwtl
lret
aam
clc
pushl
dec
mov
jmp
pop
js
cmp
push
jge
mov
jns
incl
jne
dec
loope
mov
imul
mov
adc
mov
or
fldt
mov
xchg
sbb
adc
out
jbe
or
scas
es
jl
sti
popf
fdivr
jg
and
fdivp
lock
push
xchg
jb
aam
mov
lds
movsw
jns
das
std
call
push
and
cs
lcall
outsb
xchg
jmp
xor
jmp
fdivl
in
jecxz
scas
aas
mov
out
push
pop
pop
fdivs
push
pop
mov
pushl
insl
adc
mov
scas
pop
sbb
mov
jb
insl
jg
jmp
cli
ja
enter
stos
dec
push
ljmp
sbb
pop
jne
imul
add
dec
ja
mov
fucomip
bound
cmp
into
out
pop
outsl
dec
jle
push
popa
fsubrl
ds
inc
js
or
stc
jp
negb
enter
test
xchg
out
fisttps
jecxz
add
incl
inc
rorl
pop
pop
pop
pushl
jne
out
push
mov
ljmp
cld
xor
popa
in
mov
cmp
stos
inc
dec
in
test
test
or
das
cld
push
xlat
addr16
ds
push
sbb
pop
add
mov
das
cld
push
mov
pop
das
loop
dec
enter
ret
cmp
cld
jmp
imul
or
cmp
push
imul
add
test
rorl
ljmp
pop
adc
and
xchg
in
decb
cmpsl
mov
dec
jecxz
mov
push
fmull
adc
stc
sub
add
xchg
outsl
and
ljmp
ljmp
int3
lock
inc
adc
fildll
pop
mov
cmp
add
pusha
in
lcall
in
frstor
out
add
pop
jo
push
fmull
or
incl
cmpl
das
daa
je
in
popf
rcrb
sahf
leave
in
mov
inc
push
or
cli
scas
aad
mov
in
inc
or
mov
jg
pop
cld
mov
cmpsl
adc
cmp
loope
mov
idiv
call
clc
iret
and
lds
andl
loope
jnp
push
add
incl
lds
and
and
loopne
icebp
shlb
jae
push
ljmp
lret
lret
fs
imul
sti
jmp
aad
inc
call
movsl
ficompl
sub
mov
fld
jg
xlat
decl
lcall
cltd
decl
mov
insl
aam
ljmp
sarl
out
jmp
push
sub
out
jae
enter
clc
lcall
frstor
push
test
mov
cld
ljmp
xor
out
popf
adc
mov
mov
cmp
std
cmp
decl
mov
xchg
xor
pop
movsb
ret
pop
ja
add
add
ljmp
add
in
sub
push
and
rcll
popf
mov
or
ljmp
shr
xor
fcoms
push
aaa
in
mov
fdivrs
dec
ss
ljmp
shrb
and
mov
push
scas
pop
jns
out
or
and
dec
cld
jle
int3
repz
mov
mov
pop
jns
mov
add
pop
mov
mov
jecxz
pop
add
mov
std
jge
mov
cmpsb
mov
adc
ljmp
icebp
decl
xor
sbb
repz
xchg
iret
scas
sub
push
std
mov
ret
les
jne
cmc
movsb
roll
and
loop
jns
fld
lods
push
jmp
and
push
fprem1
fldl2e
lock
xchg
mov
or
mov
mov
rclb
jmp
xchg
imul
or
pop
mov
pop
ret
mov
jg
xor
cld
ljmp
push
pop
jmp
fisubs
mov
lcall
push
xchg
mov
lcall
fisubs
fistps
daa
xor
out
jmp
xchg
clc
xchg
xor
aas
or
xor
mov
outsl
lock
pop
dec
dec
cmc
sahf
mov
loopne
sub
outsb
mov
stos
mov
lcall
cld
jne
or
cltd
cmp
xchg
xor
xchg
test
std
and
or
in
fidivrl
inc
sbb
xchg
cli
pushl
pop
xorb
inc
cmp
xor
mov
repz
xchg
leave
xchg
mov
cs
jl
jg
xchg
rcll
push
or
fs
and
jmp
imul
mov
mov
pop
aad
mov
inc
in
shl
xchg
imul
or
ljmp
lcall
jo
sbb
mov
jmp
ss
or
add
pushl
shll
dec
xchg
push
test
loope
fisubl
mov
inc
in
xlat
pushf
addr16
mov
sti
flds
fbstp
adcl
adc
js
hlt
sub
push
jle
sub
icebp
in
mov
mov
mov
cmp
jle
loop
xor
cs
mov
shrl
movsb
xor
adc
dec
xchg
cmp
push
or
std
dec
fldenv
fildl
pop
xchg
in
adc
insl
sub
test
loope
add
insb
das
sub
dec
jmp
adc
xor
sub
cwtl
push
add
push
lret
mov
test
mov
mov
jb
mov
das
mov
aad
cmp
lcall
pop
cltd
cmp
xlat
pop
call
mov
aaa
scas
mov
or
push
clc
gs
fwait
sbb
and
out
xorb
lds
jecxz
sar
decl
xchg
ss
mov
and
scas
pop
mov
jmp
push
pushf
pop
cmp
fmull
sub
adc
insb
jl
jg
pusha
cli
xchg
fstps
test
pop
imulb
add
mov
es
fs
decl
xchg
adc
cmp
jne
jge
loope
jp
ss
dec
loop
xchg
lret
out
repnz
call
arpl
sbb
sub
inc
pop
jbe
jge
lock
loop
movsl
ret
lea
pushl
bound
ljmp
pop
and
mov
nop
lret
call
adc
daa
negb
sbbl
ret
iret
lcall
pop
xchg
jne
pop
inc
test
dec
jbe
jg
decl
inc
inc
push
cmp
sbb
daa
dec
inc
ret
lods
jo
mov
fucomip
xchg
inc
mov
mov
sub
ficoml
sbb
mov
xor
fdiv
cmp
call
or
movsl
out
and
dec
jns
jb
xchg
cmp
mov
inc
insl
push
inc
outsl
outsl
sbb
clc
dec
dec
movsb
pop
jnp
imul
hlt
or
pop
mov
ljmp
ja
and
bound
lds
adcb
jmp
inc
adc
jmp
cld
sahf
push
cmpl
lret
dec
inc
ror
outsb
pop
js
add
sbb
xchg
push
lcall
sub
xchg
jno
xor
loopne
jmp
xor
dec
arpl
out
jae
and
in
call
clc
jmp
cmp
push
and
cs
jecxz
jg
push
jecxz
ds
cltd
pop
add
les
cmp
dec
dec
lcall
jb
or
nop
out
cld
cmp
nop
ljmp
in
push
test
add
add
adc
in
or
out
test
xchg
repz
xchg
cmpsl
out
sbb
hlt
jecxz
jmp
test
mov
and
negb
xor
lcall
insb
subb
fs
js
orl
lcall
leave
dec
mov
mov
fld1
add
in
or
lahf
pop
mov
pop
std
ljmp
sub
fsubl
sub
test
decl
add
mov
aad
bound
clc
mov
xchg
xchg
rcrb
aaa
popa
mov
cltd
dec
dec
cwtl
or
in
cli
ds
mov
repz
or
sar
ds
mov
rcll
call
je
fstpl
lea
mov
call
ds
or
add
shlb
test
jo
cs
testl
dec
xchg
inc
and
out
or
pushl
fnstcw
pop
mov
push
adc
mov
jmp
inc
outsl
callw
ds
mov
mov
lret
outsb
push
ljmp
leave
xchg
pushw
testb
push
push
xchg
in
decl
incl
adc
xchg
mov
jmp
inc
scas
test
mov
jp
decl
cmpsb
mov
ret
push
hlt
push
fnstenv
inc
fcoml
lock
cli
insb
hlt
cli
dec
add
in
jnp
testb
jg
adc
push
lret
dec
inc
pusha
lods
push
push
test
sbb
into
rorl
ror
sbb
mov
cmp
jmp
pop
or
mov
push
and
imul
cs
test
mov
fisubrl
incl
xchg
ss
pop
lea
and
ret
jge
inc
push
or
enter
enter
dec
push
je
push
nop
ret
es
cli
decl
ret
jle
call
pop
arpl
ss
mov
cli
adc
lahf
stos
movsb
call
movsl
mov
inc
fmuls
mov
jnp
mov
mov
ret
rorb
cmc
icebp
pop
inc
cmp
lcall
xor
sub
pop
cs
fs
test
cld
sbb
rolb
filds
or
bswap
imull
call
pop
aas
testb
fcomps
inc
mov
sub
xchg
std
call
js
test
mov
popa
and
mov
stc
sti
mov
push
push
ljmp
push
or
stos
jo
pop
dec
popa
gs
data16
daa
dec
repz
das
in
xchg
test
addr16
cmc
mov
test
mov
loop
loop
data16
imul
sbb
loope
sbb
mov
mov
or
sbb
in
add
dec
jg
decl
cmp
sbb
xor
mov
decl
mov
mov
mov
loope
sub
or
pop
popa
das
lcall
pop
outsl
hlt
pushl
leave
xchg
fimull
int
pop
lahf
repnz
out
push
mov
jg
sti
mov
ret
push
stos
clc
xchg
mov
sti
std
rcr
dec
adc
or
pushl
and
inc
jb
jbe
scas
filds
shlb
cmpsl
and
jmp
mov
incl
cs
hlt
sbb
cmpsb
pop
repz
mov
filds
addr16
addr16
and
fwait
imul
sub
jg
cld
cmp
shrl
fistl
and
jne
jae
movsb
sahf
dec
mov
adc
xchg
je,pn
and
dec
inc
mov
pop
add
jmp
jecxz
cwtl
cmp
mov
xor
xchg
ds
inc
inc
mov
fisubs
ljmp
push
insb
xchg
imul
test
daa
xlat
or
das
jae
add
test
pop
je
pushl
das
test
iret
arpl
mov
aaa
mov
cmp
js
out
subl
out
pop
aaa
pop
sbb
mov
cmp
mov
loop
sbb
shrl
add
cmp
add
jmp
push
inc
dec
inc
jbe
sbb
jp
mov
lcall
inc
and
test
jg
call
push
imul
rclb
outsb
loope
or
das
push
push
adc
lahf
insb
mov
cmp
adc
fwait
or
js
jp
or
sub
into
mov
mov
dec
ja
mov
lret
push
inc
ja
sub
outsl
dec
mov
adc
xchg
mov
jge
cli
decl
dec
add
and
adc
lcall
xchg
jb
mov
cmpsl
pop
ljmp
xchg
inc
jne
xor
cld
mov
jnp
aaa
pop
loop
xchg
inc
mov
fnstenv
inc
cmpsl
mov
pop
add
xor
pop
call
and
cld
xchg
cmp
and
sahf
data16
mov
imul
call
clc
sbb
fs
or
cmp
inc
pop
xor
push
lock
fistpl
call
push
lds
sub
aad
mov
cmc
pushl
jg
inc
jnp
inc
mov
mov
push
enter
outsl
shlb
scas
in
rep
or
xor
sahf
scas
fs
shr
fs
pop
loop
jmp
sbb
movsb
ljmp
inc
repnz
and
jnp
and
ret
xor
out
scas
push
jno
mov
mov
inc
jg
out
fucomip
js
jbe
cmp
jp
in
xchg
test
pop
pop
lahf
and
hlt
call
jg
test
pop
push
sub
loopne
mov
jp
xchg
ret
or
mov
cld
incl
das
mov
jle
loop
jmp
add
sub
outsl
xor
or
cmp
cmp
iret
jecxz
cs
dec
das
popf
pop
add
cmpb
mov
jge
add
push
outsb
lock
popf
jecxz
decl
sub
in
mov
repz
inc
jo
fcoml
ret
push
sti
sbb
fdivrp
mov
jns
test
jmp
imul
mov
and
sbb
lods
les
push
insl
mov
or
sbb
dec
xor
enter
sbb
mov
cwtl
into
out
jle
fwait
cmpsl
adc
sbb
inc
mov
inc
shlb
incl
das
mov
ret
daa
cld
adc
xor
cltd
sub
test
cmpsl
mov
pop
ljmp
ret
push
push
xchg
sub
loopne
lahf
jmp
in
into
mov
dec
mov
das
hlt
jg
push
nop
jp
pop
iret
mov
clc
cli
and
add
std
jecxz
lock
ss
out
mov
dec
mov
jg
je
xlat
lock
fildl
push
jnp
xor
adc
js
ret
mov
and
cld
and
xchg
std
mov
add
addr16
jmp
or
lret
pop
xor
scas
es
movsb
add
dec
das
pop
and
inc
mov
out
dec
fisubrs
stos
pushl
data16
mov
cli
cmp
jge
test
sti
fldt
test
xchg
sar
aas
jno
inc
mov
in
popa
and
pop
push
fistpl
rcll
addl
sar
arpl
inc
shl
or
push
sbb
jmp
inc
jae
out
mov
enter
push
out
shll
aas
adc
or
jnp
inc
xchg
fiadds
decl
clc
mov
xor
imul
mov
fwait
insl
cmp
lcall
or
frstor
pop
push
jns
inc
pop
ja
pop
dec
pop
xor
mov
dec
mov
push
leave
cltd
inc
jge
pop
pop
scas
sbb
mov
ljmp
in
movb
jae
and
clc
movsb
sahf
ja
aaa
clc
jmp
cld
add
mov
cli
and
cmp
or
stc
test
cmp
in
mov
outsb
insb
popf
popf
sti
mov
in
or
lock
call
adc
testb
and
rorb
out
call
add
add
int3
addl
aas
xor
std
dec
xchg
out
ljmp
pop
dec
mov
xlat
outsl
sarb
sbb
jmp
lds
rolb
dec
out
or
pop
dec
xchg
es
movsl
scas
mov
call
pop
mov
lret
or
int
ds
clc
sbb
xlat
mov
ljmp
sahf
inc
nop
jnp
jno
or
dec
nop
cmp
outsb
cwtl
xchg
pop
sub
sub
sub
jecxz
jmp
xor
fcomp
mov
sqrtps
xor
and
and
pop
dec
pop
cli
lcall
sbb
mov
xor
ja
pop
in
push
fsubr
sub
decl
xchg
and
ss
sbb
jecxz
iret
xchg
stos
mov
or
repnz
or
inc
call
push
les
inc
subb
ret
test
cli
fidivrl
mov
lret
cld
jmp
aam
push
out
ljmp
or
pop
lcall
hlt
cld
jbe
lcall
cs
mov
xchg
outsl
inc
add
push
sar
test
je
mov
in
jnp
pop
push
ret
and
jge
aaa
inc
gs
cld
lret
repnz
lods
jne
jo
mov
test
fsubs
adc
pop
pop
cld
jg
push
or
fldln2
xchg
mov
push
in
lea
fucom
lcall
mov
stos
push
jle
aam
fsub
jo
in
test
inc
sbb
lock
call
dec
push
mull
iret
loope
push
fcmovnb
jmp
call
jmp
mov
cld
cmp
xor
fwait
test
bound
inc
pop
lcall
cmp
scas
movsl
adc
dec
or
ret
pop
push
or
xor
shlb
inc
sub
mov
sarl
cmp
das
cmc
lcall
loopne
and
sbb
stos
inc
mov
push
inc
loop
ljmp
sti
fst
fisubs
xchg
add
out
outsl
sbb
call
ret
out
cmp
lods
adc
stc
lods
dec
pusha
shrb
mov
and
jmp
mov
mov
mov
xchg
sub
scas
adc
cmp
decl
jae
push
insb
insb
adc
shlb
mov
jmp
ljmp
mov
push
mov
sahf
sbb
fcomi
imul
enter
pop
aad
nop
ss
adc
aad
leave
jb
out
outsl
inc
cmp
outsl
loop
mov
aam
sbb
and
stc
inc
jg
jg
cltd
mov
das
scas
sar
jp
mov
inc
inc
cmpb
jle
in
xor
or
cltd
or
into
jae
cmp
ljmp
or
jp
mov
mov
dec
popf
cmpb
call
mov
shrb
xlat
enter
in
negb
add
imull
jl
add
adc
mov
jb
imul
call
and
cltd
aas
pop
fstps
std
cmp
loop
fcmovnu
adc
cmp
outsl
cmc
dec
test
addr16
scas
or
incl
pushl
std
clc
gs
cmp
xchg
and
dec
ret
mov
js
jge
jne
adc
sbbb
sbb
mov
xchg
aas
into
ja
aam
incl
fcomps
push
fs
or
ret
gs
mov
jg
decl
jb
xchg
mov
cmp
sti
in
jle
adcl
mov
jecxz
test
jg
inc
sarl
pop
or
and
jb
jmp
arpl
icebp
decl
jns
adc
adc
xlat
inc
fistl
jns
js
dec
xchg
sub
or
out
inc
mov
daa
mov
fdivs
scas
and
cs
ja
mov
call
or
cli
das
sub
movsl
inc
imul
sbb
jmp
shr
xchg
xlat
cld
ret
add
jg
adc
jo
xor
mulb
mov
inc
enter
pop
bound
imulb
xor
jg
out
or
call
dec
mov
xlat
sbb
jp
into
in
insl
xchg
neg
scas
incl
adcl
cmpsl
mov
jno
popa
jmp
jl
mov
sub
dec
mov
stos
mov
stos
movsb
pop
sti
mov
inc
pop
pop
std
pop
xchg
std
fstpt
push
lods
mov
ljmp
decl
pop
pop
lock
jg
movsb
sar
adc
xor
std
jg
xchg
mov
pop
sbb
dec
aaa
lret
repnz
or
insb
lcall
scas
pop
push
popf
adc
outsl
sub
leave
push
fidivrs
lods
adc
fdiv
xor
incl
fistpll
or
sub
fucomi
jle
sti
jae
mov
or
xchg
js
pop
cltd
sahf
sub
cmp
loopne
jmp
out
cwtl
aaa
xor
incl
or
imul
push
xorb
push
in
mov
push
adc
jno
inc
mov
mov
dec
dec
push
call
dec
cmpsl
push
mov
cmp
cmp
and
sahf
xchg
jne
xchg
in
adc
pop
xor
cmpsb
jp
fstl
mov
add
repz
iret
shrb
and
ficomps
sbb
aam
adc
ljmp
ljmp
cwtl
fisttpll
dec
subb
movsl
lods
push
xchg
mov
into
nop
pop
ljmp
or
sti
fwait
sbbb
mov
das
cld
ljmp
adc
mov
dec
adc
push
sar
rclb
mov
call
mov
lret
shr
cld
push
imul
sbb
mov
xchg
cmpsl
loope
and
popf
push
call
xor
dec
sbb
and
fdivs
icebp
push
cmpl
and
call
mov
push
hlt
mov
mov
out
es
jg
push
aas
insl
mov
fs
add
jg
xor
inc
ret
repz
mov
dec
lea
lods
adc
clc
stos
cmp
arpl
jge
cmp
cmc
jmp
inc
aad
fidivl
jb
mov
mov
xor
push
inc
stos
loop
aaa
jp
sbbl
test
lret
and
lcall
fbld
adc
loope
rorl
dec
loope
and
testl
fbld
decl
xchg
jae
or
sub
call
clc
in
jge
add
dec
fstpt
fs
xchg
xchg
cwtl
pop
jno
mov
jbe
scas
pop
ljmp
adcb
and
cld
and
movsl
mov
popf
stos
mov
mov
inc
jle
xor
or
out
cmp
jmp
pop
mov
aad
push
cmp
mov
pop
cwtl
mov
lea
pushf
shrl
pushl
mov
or
popf
push
test
stos
push
jg
jmp
dec
lds
mov
xchg
or
and
aad
push
jmp
push
ljmp
insl
enter
enter
push
jg
jmp
sub
push
jge
ljmp
ret
pop
sbb
outsb
cli
ja
xor
jl
adc
lcall
aaa
pop
int3
jnp
loop
add
aam
mov
jo
adc
sbb
cmp
insl
std
or
jp
and
sbb
les
das
hlt
incl
frstor
imul
ja
or
and
adc
xor
pushl
xchg
out
hlt
and
shr
xor
clc
add
aam
pop
push
fcoms
jg
ficoml
stc
ret
mov
clc
ret
mov
add
fcmovne
int3
mov
decl
mov
xchg
jbe
popw
test
lods
jne
mov
mov
pop
push
rcrl
imul
outsl
jle
cmpsl
pop
in
pop
mov
ffreep
pop
push
xor
notb
pushl
clc
call
cltd
int3
mov
push
mov
cld
scas
inc
in
lods
rcl
jecxz
imul
xchg
xchg
sub
mov
xor
mov
mov
adc
xchg
repnz
add
mov
cmpsb
sbb
das
jbe
lcall
push
mov
mov
or
cvtdq2ps
xor
cmp
mov
jg
and
ljmp
cmp
lea
or
test
push
push
or
add
lock
aad
pop
cmc
cmp
and
mov
mov
lret
xor
fwait
lahf
xor
je
fdivr
sbb
jg
sbb
jo
fcomps
sarl
push
dec
mov
scas
les
ljmp
and
pop
std
mov
call
sub
or
loope
mov
incl
xchg
xorb
mov
dec
clc
fmulp
mov
leave
fstpl
shlb
js
aam
aad
mov
mov
into
fadds
pop
sub
xor
imul
pushl
xchg
lds
pop
dec
cs
mov
pop
or
dec
jg
or
mov
in
dec
cmpsl
sub
in
jmp
jns
aad
mov
sub
mov
xchg
inc
jmp
testl
call
or
jne
adcl
xchg
jno
in
lcall
push
es
adc
or
jmp
pushl
call
loop
adc
addr16
repnz
aam
pusha
adc
sbb
push
or
mov
mov
mov
stos
sbb
sub
out
xor
sar
ljmp
nop
mov
xor
repz
test
scas
cli
mov
insb
ljmp
xor
mov
add
or
imul
stos
adc
je
inc
lock
pop
movsl
pop
pop
loop
push
cltd
mov
std
pop
mov
xor
push
cmp
cld
fwait
data16
jl
pusha
notb
leave
push
mov
cmc
call
cli
std
orb
lcall
xchg
scas
sub
test
aas
pop
adc
dec
lcall
add
sub
in
cmc
cmp
jecxz
jmp
pushl
fldt
add
jnp
push
pop
mov
pop
jle
clc
mov
ret
cmp
lea
or
sub
xchg
adc
jns
nop
sbb
sbb
std
dec
cmpsb
lcall
fcomps
mov
insl
test
fimuls
fstpt
shrb
pushl
jl
out
fidivrs
and
stc
adc
dec
shll
test
decl
in
push
inc
cmpsl
mov
test
xor
mov
mov
incl
cmpsb
outsl
xchg
lretw
and
jp
test
sbb
ja
xchg
jne
mov
ja
sbbl
inc
pop
ljmp
fstl
dec
lds
jne
decl
sbb
sbb
xor
push
jb
repnz
in
push
xor
sar
lock
push
or
hlt
loopne
outsl
push
jmp
fs
mov
ffree
inc
jnp
jle
fs
xchg
loop
popf
cld
jecxz
outsl
icebp
decl
int3
dec
int3
xor
ret
bnd
dec
mov
xor
les
sub
aad
cld
aaa
cmc
mov
pop
pop
call
shr
sti
xor
sbb
call
jmp
shlb
fisubs
leave
sahf
cvtpi2ps
jb
call
fucomip
cltd
mov
sub
or
ss
dec
mov
lcall
mov
inc
push
out
lods
xor
and
scas
xor
filds
scas
sbb
push
cli
lahf
clc
mov
rclb
sub
ss
mov
push
movsb
sbb
pop
jae,pn
push
lods
addr16
sar
pop
push
xor
fisubrl
mov
fcomp
xchg
and
loopne
out
add
stc
inc
call
ljmp
inc
hlt
mov
push
scas
xchg
push
idiv
jmp
cmp
mov
lds
ror
stos
in
mov
out
cmp
lea
jo
cmpsb
pop
jo
fimuls
es
jmp
outsl
push
pop
jg
mov
iret
into
mov
in
sub
xchg
aaa
lea
lcall
outsl
lock
pop
jl
mov
int3
out
in
and
arpl
shl
lods
int3
mov
and
mov
fbstp
in
mov
lret
dec
out
sti
or
jno
icebp
push
jae
mov
push
aad
mov
inc
loope
addb
incl
cs
test
cmp
pop
insb
mov
loop
jnp
in
cmp
cmc
faddl
lds
pop
clc
mov
push
cmp
popf
jge
stc
ja
call
in
sub
push
push
push
mov
mov
add
andb
outsl
jmp
inc
les
push
or
in
mov
gs
popa
enter
mov
jbe
lret
lret
outsl
int3
int
jb
jne
into
push
shll
shlb
xlat
insl
mov
inc
aad
add
cmp
pop
mov
mov
fldcw
fidivl
fisttpl
push
add
pop
loop
jecxz
add
inc
in
in
jmp
inc
call
imul
aaa
lock
pslld
mov
hlt
cmc
sbb
add
aaa
fbstp
cmpsb
clc
stc
dec
add
pop
sti
js
cld
je
fcmovnu
out
mov
xlat
sub
mov
jle
pop
pop
fs
pop
adc
mov
jg
movsb
adc
or
push
call
mov
jmp
mov
cmp
sbb
lea
add
call
inc
jmp
sbb
adc
call
mov
push
pop
je
cs
adc
divb
jne
or
xor
pop
pop
pop
leave
ret
or
outsb
adc
jmp
pushf
data16
pop
adc
xor
popf
xor
or
insl
mov
xor
push
addr16
mov
clc
xor
cmp
jne
mov
push
daa
xor
inc
or
fcmovnu
mov
sbb
or
jl
jb
shrb
mov
cmp
push
push
push
inc
push
adc
std
cmp
pop
ret
movsbl
push
jb
insl
mov
pop
ret
jmp
add
adc
mov
mov
je
mov
push
xor
mov
test
je
mov
sub
inc
inc
mov
test
mov
outsb
jnp
std
jne
andb
dec
ss
push
inc
push
xor
incb
push
inc
cmp
jl
clc
pop
jg
add
adc
inc
cmp
mov
and
shll
cmp
cs
test
push
push
push
or
pop
ds
pop
adcb
xorl
mov
mov
or
add
sub
mov
stos
shlb
les
fldt
fstpt
sub
andl
mov
xchg
push
push
push
push
sbb
sti
aas
out
push
add
cmpw
adc
mov
cld
or
call
inc
inc
sub
mov
inc
sbb
xchg
ret
fisttpll
nop
lock
mov
std
shrl
cld
das
cld
lea
mov
incb
mov
cltd
mov
mov
lea
push
mov
test
hlt
adc
cmp
jl
dec
mov
pop
jbe
inc
shl
fisubrl
adc
push
inc
cld
lock
clc
dec
clc
jmp
icebp
or
jmp
lods
ficoms
push
xor
cmp
idiv
in
or
test
adc
ret
mov
push
pop
cmp
jl
mov
xor
push
or
shl
nop
mov
stos
insl
pushf
mov
sbb
sbb
popa
adc
es
adc
xchg
sub
mov
fdivr
add
add
cmpsb
in
mov
add
add
push
fidivs
dec
in
loopne
mov
outsb
int3
push
add
add
cmpsb
imul
imul
cmpsb
imul
imul
push
mov
jb
adc
and
jne
xlat
jne
ret
imul
lds
sbb
insl
pusha
jne
push
enter
cltd
adc
lds
or
mov
push
push
dec
decl
push
and
in
add
aaa
cld
iret
sub
sub
mov
mov
cwtl
idiv
mov
mov
mov
subl
shr
dec
mov
sbb
jmp
outsl
pop
sbb
sbb
push
int3
les
jg
mov
das
jl
push
inc
jp
jae
xchg
or
mov
inc
imul
in
dec
jne
stos
push
sbb
adc
push
pop
add
repnz
jnp
js
movsb
adc
notb
clc
xchg
jnp
nop
push
push
js
push
jns
inc
imull
cld
adc
or
and
cmp
jne
push
sti
sub
jmp
push
add
mov
dec
cmp
and
je
adc
mov
cmc
movl
or
movsb
and
push
jns
fcoml
enter
push
sub
rcrb
cmpl
xor
pusha
inc
je
add
je
loope
dec
popa
or
ret
sub
sti
call
cmp
sarl
add
lret
cmp
dec
scas
in
sbb
mov
inc
jo
mov
lock
or
fsubs
push
cmc
dec
scas
idiv
je
dec
movb
jne
add
push
int3
rorb
stc
xor
movsb
inc
push
incb
outsl
lcall
adc
xchg
pop
loope
mov
std
cwtl
push
shlb
and
shll
mov
xor
mov
lea
and
push
ljmp
mov
or
add
mov
dec
add
and
shlb
insb
xor
pop
push
inc
mov
xlat
add
mov
pop
rorb
pop
push
push
shl
add
inc
les
pop
shll
lods
lods
pop
scas
xlat
jne
je
scas
add
dec
pop
xlat
jne
mov
mov
mov
mov
mov
mov
add
fbstp
mov
adc
xor
adc
push
cld
dec
or
sahf
repnz
es
sub
adc
or
rclb
in
inc
or
mov
cmp
mov
inc
dec
repnz
ficomps
rclb
mov
idiv
dec
cs
fmull
mov
mov
cmp
das
div
loop
pop
mov
pop
rcrl
add
arpl
push
add
cmp
and
call
jns
jbe
push
push
sbbb
loope
add
jo
jp
stos
push
das
push
outsl
pop
push
cld
jmp
and
add
push
lea
mulb
or
push
push
jmp
in
outsb
test
mov
lods
push
call
jmp
clc
or
push
outsl
xorl
push
cld
mov
xchg
hlt
push
lcall
mov
neg
push
or
fdiv
shlb
dec
sub
daa
lret
mov
sbbb
fistpl
push
sub
lock
fcomps
or
mov
sub
rcl
cmp
pusha
cmp
mov
inc
lret
gs
push
into
insl
test
inc
xchg
xchg
jmp
ja
inc
inc
sahf
in
xchg
in
pop
out
pxor
xor
inc
out
pop
lock
mov
jb
je
xor
gs
imul
addr16
std
xchg
xor
mov
subb
shrl
mov
fidivl
rep
stos
stos
pop
std
adc
lcall
int
clc
adc
sub
or
ret
inc
loop
push
push
jp
xchg
fiadds
inc
je
rol
js
push
mov
data16
push
pop
ret
ret
adc
or
cltd
sbbb
adc
xchg
and
je
adc
loopne
xchg
mov
pop
pop
arpl
insl
cmc
aam
lea
addr16
prefetcht1
fisubl
cmpl
daa
rclb
or
adc
les
or
inc
mov
pmulhw
push
fmull
and
pop
cld
cmp
out
jp
movsl
movsw
movsb
push
inc
pop
ljmp
push
cwtl
aam
daa
sbb
jbe
outsb
aas
mov
jmp
addb
sbb
clc
xchg
push
fstl
loope
mov
pop
lods
jmp
mov
xor
push
mov
pusha
push
and
mov
shrl
mov
mov
daa
cmp
cmp
sbb
data16
jle
test
pop
push
add
ss
fimuls
js
jnp
pop
idiv
cmp
jle
in
das
das
outsl
add
jl
popa
jle
jp
add
jo
fldt
pop
jl
pop
add
push
fdivl
dec
cmp
cs
pop
jecxz
lret
ds
add
ficompl
push
movsl
xchg
cli
adc
adc
cmp
std
nop
stc
adc
cmp
xchg
stc
pushf
cld
popf
movl
loopne
mov
adc
frstor
shl
push
cmp
and
lea
test
callw
data16
push
je
test
jecxz
in
dec
sbb
inc
in
out
out
call
pop
inc
jmp
arpl
push
or
in
and
push
xchg
cli
daa
inc
test
cmp
adc
cwtl
insb
cwtl
fwait
push
dec
and
stos
fcmovnb
or
incl
xor
rclb
jb
sti
test
stc
ljmp
adc
das
fs
inc
test
sbb
lods
in
gs
dec
popa
or
int
mov
mov
test
jmp
dec
gs
xor
dec
lock
inc
repnz
repz
scas
notb
imull
lcall
insb
lcall
inc
imul
or
es
shrl
fstp
fldenv
lcall
loopne
cmpsb
imul
push
imul
push
push
mov
into
xor
dec
cmp
jbe
sub
pusha
lcall
mov
cmp
cmp
inc
shrb
shll
int
fcoms
inc
aam
inc
mov
pop
jnp
mov
or
or
pop
mov
aas
push
aam
inc
adc
pop
dec
pop
cmp
js
or
cmp
jne
inc
stos
xchg
xor
scas
or
xlat
cmp
jge
or
repnz
outsl
aaa
or
pop
cmp
push
cmp
rorl
push
and
push
out
add
data16
loope
xchg
inc
inc
add
adc
sub
adc
cmp
iret
cwtl
aam
or
push
push
mov
in
shrb
pop
push
mov
sbb
xchg
aas
mov
mov
pop
pop
push
test
aas
push
inc
pop
and
nop
pop
nop
mov
adc
fisttps
push
dec
mov
push
xor
cmc
fs
adc
or
add
mov
sub
inc
insb
jle
xor
pusha
lock
fisubl
dec
insl
mov
outsl
sbbb
jae
aas
push
movb
or
push
movsb
jno
mov
add
mull
fimull
lret
addb
es
mov
movsl
jl
add
clc
das
jmp
cmc
adcb
out
movlps
out
and
sub
push
fs
loop
jns
out
and
pop
pop
mov
push
xor
int
ss
call
inc
xchg
jo
sti
shll
mov
xchg
jmp
mov
pop
outsb
push
dec
pushf
lret
std
dec
push
call
pop
rcr
sbb
inc
cmp
mov
adc
pushl
fdivr
ja
pushf
movaps
out
push
pop
jmp
imul
jmp
out
add
fdivrs
mov
rorl
or
jecxz
stos
mov
clc
lret
sbb
push
or
in
sar
mov
push
mov
adc
std
push
in
add
fcomps
or
cmp
stos
stos
stos
or
adc
pop
and
add
sbb
jecxz
je
test
push
push
fisubl
or
andb
mov
or
adc
sub
ret
dec
fwait
xlat
and
cs
subl
pop
push
xor
jge
mov
mov
bound
push
ss
adc
in
lea
mov
mov
test
sub
adc
pop
cmp
dec
pop
je
cmp
insb
push
jmp
les
cmp
sbb
pop
push
test
and
nop
fldt
mov
mov
repnz
add
in
subb
push
ror
xor
ret
inc
mov
loopne
cmpsl
pop
jge
out
push
adcb
xchg
ljmp
fnstcw
fcmovu
clc
pop
adc
push
cmp
pop
mov
cmp
sbb
and
xor
and
and
inc
aaa
fadd
push
cwtl
fdivr
jle
in
pop
sbb
adc
inc
enter
sbb
enter
and
shlb
xor
mov
mov
and
inc
adc
ret
lods
adc
push
fsubl
je
test
sub
loopne
xor
stos
ret
push
dec
pop
or
sbbb
loopne
pusha
pop
sbb
cmc
mulb
shll
xor
cwtl
call
adc
add
add
in
cwtl
xor
call
jmp
push
je
adc
jne
mov
test
inc
xlat
sbb
jbe
in
cmp
ret
push
push
sub
stos
ret
insb
cmpsb
add
pop
ljmp
or
popf
or
sbb
mov
sbb
pop
int3
repz
int
sbb
push
ja
push
stos
aaa
sub
aaa
sbb
or
loopne
mov
mov
adc
or
mov
xchg
push
jl
test
adc
or
add
mov
pusha
js
hlt
pusha
xor
jne
cld
push
adc
or
data16
ss
sbb
inc
fmull
mov
loopne
mov
push
xchg
add
mov
div
clc
stc
adc
mov
sti
sub
and
shlb
in
in
out
adc
mov
xor
in
out
bound
outsb
and
fwait
jmp
outsl
or
sbb
push
fs
out
ret
adc
add
mov
or
cli
movw
loopne
adc
or
push
sub
dec
and
pop
dec
ret
not
pop
call
adc
mov
sbb
das
push
out
hlt
dec
je
sbb
sbb
shrl
outsl
xchg
insl
arpl
sub
rolb
adc
add
mov
add
fs
mov
fs
mov
mov
mov
adc
cmp
arpl
sarb
stc
push
flds
sbb
cmpsb
sbb
mov
lods
icebp
xchg
neg
sbb
add
mov
mov
add
jb
sub
std
add
add
jae
sub
mov
or
loope
or
cmp
add
push
shrb
sub
mov
xor
mov
outsl
iret
mov
jmp
mov
add
sahf
or
clc
aaa
or
xor
mov
inc
clc
ja
lock
mov
xchg
cmp
cs
xchg
sub
in
dec
sbb
mov
sarb
orb
jbe
sub
insb
out
mov
xchg
mov
or
pushf
scas
fcmovnbe
jne
nop
add
or
push
ret
push
and
loopne
xor
and
out
jne
inc
or
add
or
jne
pop
and
aam
movsb
dec
jl
lea
mov
mul
add
movzwl
insl
hlt
fcmovnu
jmp
sub
add
imul
imul
add
cwtl
xor
cs
inc
or
popa
mov
and
cs
inc
call
aam
int3
sti
or
movb
mov
ret
xchg
xor
iret
outsl
push
inc
sbb
add
cmp
xor
xor
dec
pop
cmpsb
imul
imul
mov
sub
aas
pop
bound
dec
shll
mov
xor
ljmp
mov
sub
out
cmp
jmp
cwtl
sbb
imul
mov
cli
add
jnp
sbb
cmpsb
imul
imul
cmpsb
imul
xor
in
jne
push
fwait
punpcklwd
jg
call
pop
sbb
mov
sbb
xor
pop
es
cmpsl
loopne
ja
or
jl
test
in
incl
push
dec
inc
dec
xor
cs
insb
add
push
inc
push
dec
or
jmp
das
sti
out
add
xchg
insb
mov
mov
jg
roll
sbb
repz
into
mov
jg
jge
es
iret
movsl
das
pop
lahf
mov
push
pop
push
sti
add
aad
pop
out
mov
push
xor
push
fldlg2
pop
push
push
inc
push
push
xor
add
and
sub
cmpsl
mov
sbb
jb
gs
flds
xor
xor
pop
pop
add
testl
nop
nop
pop
mov
jge
icebp
adc
or
inc
adc
out
adc
jnp
add
add
push
push
push
push
push
mov
cmpb
add
popf
popa
jmp
testl
out
into
scas
loope
repz
mov
fldcw
xor
jnp
test
cmp
jo
jne
ret
call
mov
rcll
pop
jle
shll
test
out
mov
insl
arpl
inc
jae
arpl
jae
jle
insl
outsl
fs
aaa
mov
popf
mov
add
lock
cld
and
lcall
sub
insl
jae
je
insb
cmp
outsw
outsb
aaa
pop
jae
jae
gs
push
inc
and
push
add
adcb
push
and
push
imul
std
in
imul
arpl
sbb
outsl
jo
aaa
fnstsw
add
add
outsl
je
push
je
jbe
sti
jb
or
data16
js
push
and
ret
fcmovnu
arpl
outsl
data16
and
jnp
mov
bound
inc
dec
push
push
std
push
inc
push
inc
pop
dec
dec
inc
push
dec
mov
insl
test
add
xor
xchg
lcall
mov
mov
lea
aam
jb
cmpb
dec
push
push
add
add
add
pop
sub
ljmp
inc
add
pushl
lock
pop
mov
int
mov
push
imul
jb
insl
and
outsb
outsb
outsl
je
bound
jb
outsb
and
inc
psadbw
into
gs
out
out
psubq
cmpsl
mov
add
mov
stos
fbld
pop
mov
int
mov
mov
pop
neg
insl
pop
mov
popa
test
pop
scas
cmp
neg
jl
test
arpl
mov
imul
test
dec
add
add
pop
dec
adc
lock
fstpt
push
or
adc
shrb
sub
or
or
xchg
cmp
add
add
sbbl
sub
adc
test
pop
mov
add
shlb
sub
or
xorl
subl
or
ds
std
or
or
jb
popa
je
add
sbb
daa
sbb
or
add
test
pusha
daa
jbe
jo
add
dec
popa
pop
rolb
ja
xor
outsl
aas
ror
add
lahf
gs
outsl
arpl
fldenv
add
ja
cs
scas
jnp
clc
jae
popa
arpl
lahf
daa
or
jbe
push
mov
dec
popa
out
mov
sbb
and
loop
loopne
enter
adc
dec
loopne
mov
xor
pop
pushl
mov
xor
sub
fldt
jg
decl
fcomp
test
insl
mov
leave
in
insl
mov
mov
test
test
cld
lahf
call
xchg
mov
mov
cmp
stc
out
sub
xor
ss
xchg
sub
mov
mov
mov
lea
mov
or
adc
mov
fistps
and
ret
lds
inc
mov
mov
std
xchg
push
ret
add
decl
mov
xchg
or
adc
outsb
out
test
scas
mov
rol
sub
cmp
ja
jmp
mov
cmpsl
xor
mov
mov
sbb
sahf
mov
adc
xchg
xchg
ljmp
movsb
push
mov
ds
jb
repz
sbb
adc
xor
gs
stc
cmc
in
jnp
out
fcomi
in
gs
ja
jge
imul
insb
rcrl
stos
inc
jmp
xchg
push
mov
imul
mov
lahf
ljmp
decl
shlb
mov
mov
insb
popa
pop
mov
ret
push
clc
mov
jbe
aas
cmp
inc
mov
adc
movsl
dec
add
or
push
das
inc
push
ss
inc
outsb
nop
lcall
fcomps
cmpsb
add
dec
out
jns
and
ss
dec
int3
mov
or
call
sub
popa
fcmovu
pop
cmp
xchg
les
ret
jne
dec
mov
inc
std
jmp
popf
aam
rorb
adc
pandn
xchg
and
xchg
xchg
push
cld
cmp
rep
sbb
insb
aas
jg
xor
lds
jmp
xchg
les
aad
cld
or
push
idivl
je
jno
mov
jbe
flds
lods
popf
inc
mov
adc
jmp
sbb
sbb
std
mov
mov
inc
jp
sub
aad
movsb
lcall
stos
idivb
jge
pop
push
stos
stos
mov
jne
jecxz
dec
daa
mov
cmpsb
or
inc
push
scas
repz
les
icebp
jns
aaa
jne
xchg
adc
test
mov
cmpsb
inc
push
call
lahf
test
orl
push
adc
aaa
je
cmp
fmul
dec
insl
call
xchg
mov
hlt
jns
and
sub
outsb
ret
pop
dec
xchg
sub
test
xchg
mov
daa
xchg
or
bound
pop
aad
loop
out
in
in
daa
xchg
imul
add
xor
xor
test
cli
test
push
loope
ljmp
pop
sti
cmpsb
inc
js
imul
fsub
fdivr
pop
loope
jg
or
fstpt
jne
jo
jno
hlt
ss
shll
scas
cmp
outsl
push
lret
mov
mov
cwtl
inc
push
int3
popf
call
pop
lods
cmp
jle
sbb
or
pop
xorb
mov
dec
inc
ljmp
loop
movl
jmp
push
mov
dec
adc
enter
pop
ss
mov
xor
clc
jg
das
xchg
xchg
xor
sub
cmp
mov
icebp
cmpsb
test
xchg
jae
inc
test
cmpsl
divl
xchg
pop
and
push
inc
mov
mov
outsl
das
or
fisubrs
std
in
mov
xor
lea
cmp
repz
jbe
pop
lods
sub
fcoms
mov
add
rolb
pop
sar
lds
ret
push
roll
jbe
mov
xchg
shlb
adc
imul
mov
xlat
loopne
fisttpl
es
movsl
incl
lods
mov
icebp
vmovsd
adc
icebp
das
in
fildl
or
mov
rol
sub
decl
ja
je
scas
out
scas
rcl
push
pop
inc
xor
bnd
decl
inc
adc
lds
and
scas
je
sar
dec
cmp
xchg
or
inc
pop
pushl
jb
fists
inc
xchg
stos
inc
pop
cmp
sbb
mov
mov
push
lcall
xlat
add
mov
sbb
in
cltd
adc
repnz
pushl
hlt
push
cmp
sbb
cs
je
jp
jecxz
adc
jno
sar
into
out
inc
mov
pop
mov
mov
dec
mov
xor
cmp
mov
pop
or
sbb
pop
daa
stos
jbe
lret
mov
mov
xor
mov
xor
pushl
inc
push
mov
sbb
or
push
push
mov
mov
and
ss
pushl
jp
mov
lea
stc
jns
jnp
pop
mov
push
fcomps
jp
les
xchg
dec
les
cmp
push
jg
xchg
jbe
outsb
sub
jo
mov
add
pop
mov
lcall
jmp
filds
pushf
les
imul
xor
daa
xor
ret
cmp
std
gs
mov
and
sbb
and
test
jmp
sbb
or
dec
or
cwtl
fmuls
inc
and
mov
ffree
cmp
scas
in
dec
insb
adc
gs
mov
out
test
mov
fisttps
sub
aas
mov
jge
icebp
xchg
int
jne
mov
lcall
xchg
jl
jecxz
out
sbb
lret
inc
jl
mov
popa
hlt
enter
xor
lcall
cmp
sub
popa
subl
jns
mov
in
inc
repz
outsl
hlt
pushl
js
add
std
js
ret
mov
lds
inc
mov
incl
cmp
sub
fwait
popf
out
mov
shll
jg
or
sbb
adc
sbb
pop
mov
cmp
daa
adc
cmpsl
push
pusha
call
out
mov
wrmsr
add
sub
cld
push
xchg
cmovae
cmp
jmp
loopnew
movl
aad
fwait
scas
dec
adc
scas
adc
clc
adc
xchg
pusha
fmulp
xor
das
cld
pop
push
sub
lret
jp
hlt
pop
sub
mov
push
test
or
ficomps
es
push
popf
adc
scas
arpl
pop
jnp
rorb
mov
inc
stos
insb
repz
mov
sbb
push
push
push
and
adc
es
incb
call
ja
not
jno
rcl
fildll
nop
aam
jns
es
adc
nop
mov
sar
cmp
xchg
add
pusha
jno
lret
fwait
add
xchg
aaa
jbe
push
push
or
xlat
adc
or
mov
cwtl
cs
sbb
mov
aad
mov
stos
bound
in
insb
stos
in
inc
sbb
inc
sbb
mov
decl
push
sbb
les
sbb
push
stos
ja
xchg
cmp
jo
inc
call
cmpsb
sti
sti
inc
push
test
pop
or
mov
mov
mov
cmpsl
icebp
sahf
decl
in
cld
pop
mov
fstpt
inc
xor
dec
pushl
cmp
das
adc
push
andb
cmpb
pop
out
outsb
xchg
push
icebp
xor
push
push
rorl
repz
pop
es
and
mov
das
mov
out
ljmp
push
out
test
cmp
movsl
mov
add
inc
in
jg
sub
push
jg
lcall
mov
cmp
ss
ja
jo
addr16
mov
adc
adc
jmp
bound
dec
jb
dec
mov
push
cs
das
pop
shrb
daa
inc
inc
fdivrs
inc
cmp
jmp
rcr
roll
push
sbb
push
pop
dec
in
inc
loopne
add
loope
bound
clc
es
test
mov
out
sar
lcall
push
lret
cmpsb
or
fmul
std
mov
or
cmpsl
rcl
popa
lret
sti
lock
std
fnstsw
dec
movsb
mov
or
jmp
push
or
in
mov
call
xor
inc
pop
xlat
roll
mov
add
std
xchg
cmp
jno
mov
inc
dec
jl
lea
push
les
imul
sbb
incl
ficompl
cmc
xor
in
jmp
sub
mov
lcall
shl
cmc
xor
and
lock
test
mov
xor
push
mov
das
mov
mov
movsb
adc
cld
inc
ret
mov
push
ljmp
loope
call
pop
xchg
push
inc
inc
mov
mov
out
fxch
popf
nop
dec
leave
jge
jmp
jg
cmc
cmp
mov
roll
into
pop
mov
call
lret
aas
cmc
fbld
jne
jg
jg
in
xchg
andl
mov
ffreep
mov
test
js
mov
arpl
adc
in
rcl
punpcklbw
jno
outsl
fs
decl
popf
push
cmp
xchg
fisubs
inc
sbb
xchg
dec
clc
scas
pop
pop
imul
xchg
dec
dec
aad
pop
ror
xchg
push
pop
push
xor
hlt
mov
aad
icebp
in
fldcw
jo
fisttps
sub
push
inc
dec
sbb
xor
pop
adc
mov
call
push
mov
icebp
lods
dec
cwtl
inc
xchg
xor
int
incl
into
cli
int
inc
popa
cmpsl
add
mov
cvttps2pi
ljmp
loop
out
lahf
pushf
jle
pop
jae
fists
pop
shr
leave
push
jns
mov
sbb
stc
ss
pop
pop
cmp
lock
dec
adc
enter
pop
inc
arpl
inc
push
or
fstpt
inc
jp
adc
xor
xchg
lock
cld
ficompl
fs
imul
pushl
xorl
div
fsubs
pushf
and
mov
and
shl
jmp
mov
stos
mov
arpl
xor
addr16
cmp
jns
inc
pop
hlt
sub
push
pop
clc
jg
stc
jbe
divl
and
dec
daa
clc
mov
cmp
cmc
mov
sbb
fwait
sbb
dec
push
fwait
in
out
lods
int
push
add
cmp
fs
dec
mov
mov
incl
in
mov
daa
stos
add
mov
ret
dec
cmpsb
es
pop
in
jnp
push
pop
cli
arpl
jo
cmc
lcall
out
and
mov
fwait
nop
xchg
xor
decl
adc
repnz
cwtl
fsts
or
push
xchg
jl
and
aam
call
push
les
dec
or
call
lods
push
aam
jmp
hlt
loop
jecxz
xchg
enter
lcall
lock
sbb
scas
lea
push
adc
scas
xchg
mov
xchg
aam
lcall
movsb
jmp
jae
fbstp
out
outsl
inc
pop
sar
call
rcl
sahf
add
enter
jmp
cmc
mov
icebp
cmp
xor
lcall
or
test
incl
push
adc
adc
cmpsl
and
and
fmull
jp
shlb
sbb
lcall
push
cmpsl
xchg
es
dec
loopne
arpl
sti
mov
daa
xchg
bound
ret
sub
rorl
popf
sub
jmp
and
packssdw
test
cmc
dec
std
mov
cmp
notb
ss
pop
pop
cmp
aaa
decl
lock
adcb
fdivp
and
es
xchg
cmpsb
cmpsb
leave
mov
ljmp
call
xor
jp
cmp
clc
mov
ss
out
scas
mov
or
iret
decl
ljmp
je
xor
into
inc
push
xor
xchg
mov
in
lcall
imul
dec
faddp
adc
jp
stos
xor
fdivr
pushf
orl
lods
vminsd
aas
mov
adc
add
pop
jnp
push
jle
fidivrl
outsl
cmc
out
aaa
ss
mov
xchg
loopne
push
scas
incl
or
xchg
mov
lods
mov
dec
dec
push
cmp
push
int
in
add
dec
pop
pop
dec
test
test
xchg
add
push
repz
cmpsb
cmpsl
mov
subb
cmp
xchg
xor
ljmp
and
insb
ffreep
pop
mov
sbb
add
shrl
lcall
mov
int3
imul
mov
inc
das
fs
add
fmuls
std
push
out
xchg
push
sahf
xor
jb
out
enter
jno
subb
jmp
or
sub
sbb
sub
mov
jns
in
fadd
in
in
add
lock
fsubs
and
pop
xchg
lods
filds
movsl
lcall
mov
pop
fdivs
push
decb
int3
loopne
pop
mov
scas
cmc
mov
dec
fucomip
lcall
les
adc
bound
cmp
jne
mov
nop
loopne
and
insl
ss
mov
cmp
jg
cmp
sbb
dec
inc
jg
leave
out
mov
dec
mov
adc
cmpsl
mov
inc
dec
test
xchg
or
push
inc
adc
jge
pop
cli
decl
fsubs
mov
sub
das
flds
test
int
jg
loope
fcomip
mov
xchg
aam
sbb
lret
cld
cmp
cltd
repz
mov
movsl
xchg
ljmp
mov
les
jns
mov
in
inc
cmc
cld
mov
inc
ljmp
adc
fdivr
xchg
xchg
pushf
mov
mov
cmp
sahf
xchg
pop
mulb
cmp
insl
jmp
jo
aad
sbb
push
and
clc
inc
bnd
sub
sbb
jo
sahf
out
fs
lret
mov
adc
push
or
popa
fs
decl
addb
adc
xchg
sub
out
lret
shlb
dec
insb
mov
dec
arpl
cld
aaa
clc
loope
adc
mov
in
mov
cwtl
push
loopne
dec
cltd
pop
mov
inc
inc
fnstcw
outsl
je
inc
shrd
call
mov
dec
cmp
sub
jecxz,pt
int3
push
dec
outsl
add
push
cmp
outsb
push
inc
call
faddl
dec
pop
lret
xchg
lds
fs
cli
jmp
imul
xchg
in
mov
adc
sbb
lds
sbb
sbb
xchg
pop
add
pop
lock
push
fists
jg
push
add
dec
addr16
lds
push
push
xchg
dec
pop
and
sbb
das
push
mov
cmp
cmp
imul
adc
jae
aad
shll
lret
je
dec
xchg
add
pushl
fimuls
lcall
inc
out
clc
gs
jg
ss
ficoml
test
and
arpl
push
mov
push
mov
push
repz
inc
inc
dec
lahf
dec
stc
and
jb
mov
sub
push
fucomip
xor
gs
or
and
loope
decl
mov
cli
lods
push
mov
fdivs
xchg
in
adc
pop
fisubrl
xchg
orb
pushl
lahf
push
rorl
pop
xor
mov
sahf
and
mov
lock
or
cmp
int
or
lcall
popa
or
dec
xlat
adc
daa
pusha
gs
jg
call
push
jbe
push
in
repz
mov
xor
sarb
push
jmp
mov
or
negl
repz
hlt
ds
hlt
cld
xor
jmp
pop
jg
in
adcl
aas
push
mov
ljmp
push
call
dec
pushf
push
lods
adc
mov
rclb
adc
mov
and
fs
ljmp
sbb
into
pop
xchg
inc
mov
and
xor
fists
mov
add
int3
daa
and
push
pop
push
pushf
inc
cmp
xor
outsl
pop
movsb
data16
jle
sbb
inc
mov
sti
loope
jbe
and
test
push
in
push
inc
push
fidivrs
inc
xor
test
mov
test
lds
insl
int3
sbb
xchg
mov
dec
lods
adc
popf
jp
mov
pop
pusha
mov
subb
push
inc
imul
cmp
pushl
cmp
cmpsl
add
fs
hlt
pushl
mov
cld
push
lods
pop
adc
mov
aad
mov
ret
lods
mov
push
adc
ja
or
movsb
adc
jmp
push
aas
xchg
movsb
movsb
cmc
inc
inc
cli
pop
jecxz
out
aas
scas
cmp
ret
gs
jb
sbb
repnz
mov
dec
or
add
incl
out
xchg
bound
call
fidivrs
stos
popa
in
jno
int3
or
test
hlt
mov
mov
pop
mov
popa
push
lcall
fisubs
mov
popa
loope
pop
arpl
dec
push
aaa
imul
or
rclb
push
in
push
fwait
xor
test
in
adc
cmp
call
call
movsb
fnop
mov
fwait
pop
and
test
outsl
lock
pop
into
addr16
xchg
add
and
incl
js
push
mov
xchg
jle
imul
inc
push
inc
cmp
push
cmpsl
or
out
adc
and
call
sub
mov
jmp
outsb
add
dec
pop
iret
mov
data16
shlb
mov
sbb
das
jg
aas
mov
mov
dec
out
das
cmc
xlat
loopne
std
mov
mov
mov
unpcklps
out
jns
pop
lret
fsubr
sar
jb
sub
fwait
mov
decl
sub
hlt
sbb
dec
rcl
adc
int
adc
lock
jmp
orb
out
jg
insb
mov
push
adc
jge
out
push
gs
or
enter
das
repnz
das
fiadds
adc
dec
nop
punpckhdq
and
sbb
or
jmp
aam
add
lock
lods
xchg
xor
pusha
fs
cld
lcall
xchg
cmpb
je
out
jbe
cltd
fbstp
cmc
out
pushl
cmp
sub
add
cmp
sub
sete
enter
mov
xchg
xor
push
sbb
and
xchg
push
std
hlt
mov
xchg
pushf
cmp
cmp
jl
les
scas
pop
mov
sub
xchg
push
fisttps
cmp
xor
inc
cld
je
push
repz
outsl
pusha
and
ljmp
stos
lods
jae
cmc
mov
add
stc
test
mov
xchg
jmp
dec
mov
xchg
dec
xor
jae
add
push
enter
or
mov
ljmp
adc
mov
cmpb
std
pop
push
adc
test
pop
fdivs
mov
pop
fucomip
std
jo
daa
mov
mov
nop
fisubrs
inc
adc
pop
cmp
xchg
dec
push
mov
subb
push
enter
loope
sbb
incl
dec
andb
sub
and
movsl
lcall
out
scas
push
push
lods
rcrl
dec
push
dec
into
jnp
sahf
cwtl
test
inc
push
das
dec
mov
and
mov
push
adc
inc
jg
xchg
adc
call
or
mov
ljmp
cltd
or
mov
jecxz
clc
fbld
lcall
jecxz
push
ljmp
icebp
jl
lods
rorl
aaa
dec
int3
in
push
dec
sti
cmc
loope
pop
bound
fucomip
pushl
cld
leave
movsl
lods
aam
jmp
pop
fcmovbe
in
pop
and
mov
mov
nop
ret
cld
addl
adc
push
mov
pop
ret
mov
lret
shlb
mov
or
or
mov
rol
rorb
gs
jne
enter
push
rol
inc
incl
lret
mov
scas
xchg
or
cs
mov
adc
lcall
mull
fldt
pusha
push
lods
pop
xchg
xchg
clc
add
jbe
or
mov
cli
outsl
aaa
fisttps
xchg
xchg
add
jge
int3
hlt
xchg
xor
int
repnz
mov
sahf
jb
leave
sbb
adc
call
lcall
loopne
movsl
pop
xchg
xor
iret
mov
push
mov
pop
xor
cmpsl
jp
lahf
add
mov
inc
fwait
dec
xlat
imull
loop
pop
loop
sub
push
inc
imul
nop
push
outsb
lock
lcall
push
mov
push
fstpt
xchg
sub
push
les
outsl
je
mov
ret
sub
pop
dec
scas
push
sub
mov
cmpsl
fdiv
and
sub
xchg
and
jecxz
fists
add
shlb
test
out
leave
jmp
leave
adc
rorb
inc
jg
jnp
jl
popa
push
dec
xchg
pop
sub
scas
ds
and
nop
ljmp
out
dec
cmpb
mov
popa
xchg
lock
xlat
int3
lock
sarl
lds
lds
mov
inc
xchg
fs
je
in
inc
mov
in
and
call
ljmp
or
stos
jp
lds
add
mov
pop
into
cmpsl
incl
loope
cwtl
loope
nop
fbstp
add
mov
aas
xor
js
cld
mov
mov
sar
call
mov
xlat
call
dec
adc
sub
pop
mov
lcall
and
pusha
fldcw
bound
dec
cmp
pop
sbb
test
loopne
xchg
or
adc
ljmp
or
dec
imul
mov
cli
mov
rcr
lret
pop
pop
call
mov
insl
push
inc
inc
pop
push
fwait
xrelease
aad
sti
mov
cli
pushl
subb
and
std
in
jmp
mov
mov
sbb
cmp
cmc
mov
shrb
sbb
sbb
mov
push
aam
movb
pushl
mov
dec
sbb
cld
add
mov
and
mov
jg
call
aad
and
cwtl
jo
add
pop
test
xlat
mov
ret
push
and
or
xor
mov
inc
and
sbb
sbb
push
mov
xchg
mov
addb
mov
test
add
outsl
outsl
mov
fistpll
mov
pop
mov
inc
movsb
outsl
into
and
jo
call
out
out
popa
loop
insl
popf
inc
pop
lahf
jge
inc
mov
sbb
add
xchg
mov
out
lcall
mov
pop
repnz
mov
cmpl
out
scas
fs
push
adc
idivb
inc
fwait
test
mov
ret
and
lret
dec
adc
fdivs
sbb
std
jmp
fildll
and
rcrl
mov
mov
lahf
sbb
dec
ljmp
jbe
loopw
adc
rorl
lcall
call
mov
adc
pop
xchg
xchg
mov
jb
lea
mov
push
dec
cld
jmp
cmp
and
lahf
pop
jbe
jmp
int3
mov
fcomi
pop
jno
mov
mov
loop
icebp
pop
imul
lock
push
out
mov
jp
jge
dec
test
jns
cmp
shrb
paddq
cs
add
mov
out
cmp
pop
lods
repz
sbb
lahf
jmp
jl
in
dec
neg
sbb
xchg
push
nop
xor
leave
jle
call
inc
shl
xchg
fidivs
dec
mov
std
test
push
mov
mov
arpl
mov
fsubrs
pop
loopne
jb
insb
adc
lcall
and
dec
mov
in
iret
push
mov
lock
cmp
push
icebp
test
fsubrp
dec
jmp
mov
popf
xlat
push
shll
rep
inc
jmp
ficompl
sub
pop
gs
lcall
xor
dec
xchg
mov
fidivl
cwtl
sub
pop
cmc
jge
scas
add
jmp
mov
or
enter
mov
insb
hlt
jb
mov
pop
fwait
jge
xchg
aam
iret
rclb
call
fs
xlat
lea
in
jae
mov
jb
imul
xchg
lret
inc
jle
mov
fmull
or
xchg
pop
xlat
push
inc
jbe
or
ljmp
dec
sbb
ror
lcall
push
push
push
call
fimull
jecxz
call
jl
push
das
cmp
aaa
mov
cmc
jo
lock
jo
sub
lret
fwait
nop
fnstenv
push
or
mov
ja
into
nop
and
lods
adc
xor
mov
data16
call
mov
or
nop
fnsave
add
add
pop
imul
std
mov
shlb
jno
mov
jo
and
daa
push
idivl
gs
mov
cmp
sti
pop
daa
jb
dec
cmpsb
push
lcall
ret
outsb
pop
xor
ja
pop
fnstcw
mov
rcrb
jno
loopne
divl
ss
out
and
adc
cmc
call
inc
mov
push
xchg
add
cmp
lock
roll
outsb
sbb
ljmp
mov
dec
and
pop
and
jno
jns
fwait
je
sti
ds
jge
cmp
and
ljmp
push
xor
ljmp
lahf
xchg
jecxz
adc
das
jle
movsl
cmp
out
ret
test
out
xor
sahf
lcall
loopne
aaa
adc
add
vpcomud
std
pop
lods
movsl
loop
icebp
jne
aad
add
out
lahf
gs
mov
pushl
mov
cmp
push
loop
and
adc
dec
arpl
data16
mov
daa
loopne
mov
cli
lock
fs
dec
mov
inc
sub
int
xchg
dec
loopne
fstl
pop
mov
or
cs
gs
lcall
cmp
jp
imul
daa
ret
hlt
mov
sahf
hlt
ja
in
out
lcall
jb
std
into
aad
mov
ficompl
adcl
js
or
cmp
ret
cltd
jg
call
dec
nop
push
jns
pop
inc
sub
sbb
fsts
dec
jg
rcrl
pop
repz
jne
push
es
arpl
cli
mov
cld
das
cmc
arpl
test
cmpsb
adc
pop
pop
inc
dec
jge
idiv
call
push
mov
shll
loope
in
cmp
pop
jns
inc
stc
stos
sub
jg
sar
jge
ds
jne
pop
add
jg
stc
sti
lea
sbb
push
inc
cmc
push
push
add
sub
fcoml
loop
js
mov
into
fisttpl
adc
sub
stc
sub
jmp
pop
mov
jns
mov
jmp
dec
dec
push
pop
fwait
ljmp
pop
psubb
shlb
xchg
pop
jnp
sbb
mov
shr
fwait
imull
or
jne
or
in
lods
cltd
push
inc
jp
sub
test
push
out
sub
xchg
out
lret
sahf
or
push
outsl
and
cmpsl
jg
das
das
push
fnstsw
or
int3
add
mov
pshufw
sbb
fdivs
scas
adc
and
sbb
stc
sbb
pop
inc
fnstenv
std
repnz
loop
aad
push
cli
in
inc
pop
bound
icebp
fidivrs
mov
mov
sub
xor
stos
test
mov
movsb
sti
pop
std
popl
push
dec
cld
call
inc
dec
jo
sub
outsb
sub
and
pop
js
mov
shll
jno
mov
stos
and
shr
adcb
lcall
call
mov
xor
xor
pop
fnstenv
jo
and
mov
inc
repz
loop
in
in
lcall
jne
lcall
xor
sbb
arpl
cld
sub
pop
clc
xlat
mov
pop
cltd
jg
sbb
lock
call
call
lods
dec
int3
in
mov
cmp
movsl
or
lret
in
ja
ss
ljmp
dec
lea
imul
mov
and
mov
xor
adc
sub
call
cld
or
inc
stos
movsb
ja
xchg
pushf
xor
arpl
lret
push
lods
or
mov
jmp
ret
hlt
mov
inc
sti
in
mov
push
push
sub
decl
cld
cmp
jmp
or
enter
in
xor
sbb
mov
aaa
out
pop
sti
sti
xor
push
shr
mov
cld
inc
rcrl
pushf
ljmp
jb
stos
xor
sahf
mov
fmul
or
sahf
dec
cltd
jl
scas
pop
dec
mov
mov
ljmp
jns
out
and
mov
push
and
dec
xchg
xor
incl
mov
mov
xchg
in
cmpsb
inc
mov
push
adc
jae
and
adc
sti
xchg
loop
and
hlt
jg
lret
sbb
mov
clc
and
sar
ret
arpl
mov
xchg
cltd
sbb
pop
xor
scas
das
dec
or
fwait
loop
jo
mov
fcompl
inc
gs
dec
mov
fistpl
adc
inc
stc
cmpsl
bound
fs
sbb
push
call
outsl
pushl
int
sbb
jne
mov
repz
addr16
mov
add
incl
sbb
sbb
inc
xor
test
sbb
je
mov
sub
and
inc
push
das
std
aam
js
sarb
and
outsb
dec
sti
pop
cli
decl
and
test
add
data16
leave
xlat
or
jno
pop
jg
or
add
xchg
inc
addr16
mulb
fnstenv
mov
lcall
xchg
and
popf
adc
rep
loope
mov
adc
ja
incl
jae
jno
jecxz
hlt
mov
dec
into
jbe
xor
sub
lahf
push
lods
in
cmc
in
loope
cmp
call
addr16
test
or
out
test
dec
fadds
add
addl
loopne
out
lock
cmp
sub
ja
xchg
mov
movsl
cmp
dec
mov
outsl
imul
out
into
or
pushf
push
pop
popa
cld
aaa
mov
adc
in
sub
sub
mov
xchg
jp
lods
push
push
adc
xor
fisttps
fsubl
inc
dec
jle
dec
add
aad
rorl
mov
aam
mov
aam
cli
sub
jb
pop
pop
or
and
sub
mov
dec
mov
push
icebp
repnz
pop
pop
ds
mov
sub
add
jg
lods
notl
pop
scas
in
pop
es
pushf
fwait
xchg
pop
aam
call
mov
enter
fcmovb
xchg
clc
jnp
mov
cli
rcrl
mov
mov
jbe
xor
push
gs
xchg
aas
inc
push
stos
incl
dec
mov
das
bnd
jge
pop
aas
xchg
cltd
sbb
jg
imul
push
enter
imul
pop
jecxz
xor
iret
aas
dec
sarb
icebp
incl
push
data16
int3
iret
int3
cli
cmpsl
mov
lcall
xchg
fdivr
ljmp
sub
mov
xor
xchg
or
or
sbb
adc
inc
cltd
push
or
cmp
or
xchg
iret
xchg
aas
scas
lea
cmp
adc
notb
mov
xor
test
imul
call
test
std
es
fwait
out
sbb
mov
pop
sub
outsl
jg
adc
lahf
inc
sub
data16
cld
hlt
cwtl
mov
aaa
leave
push
sub
nop
pushf
xor
subl
pushl
sub
xor
pop
adc
jae
add
in
mov
sbb
dec
test
les
jno
out
popa
lret
je
pop
mov
and
cld
pushl
xchg
adc
jl
sbb
and
sbb
lcall
cld
jg
inc
outsl
push
test
mov
xchg
xchg
sbb
mov
cli
jg
sub
fincstp
fdivrs
jb
insb
loopne
jns
lds
aaa
imul
xor
into
mov
outsb
dec
cmp
inc
cmp
xor
das
jno
mov
call
shl
mov
les
mov
jne
mov
xor
xor
pop
enter
lcall
lret
dec
sbb
pop
pop
sbb
loopne
lods
enter
je
out
adc
cmc
xchg
mov
aas
fimull
dec
pop
ljmp
push
adc
dec
dec
ret
mov
lock
stc
lds
scas
xlat
jmp
pushf
inc
cmp
mov
cmpsl
sbb
cwtl
add
icebp
fcmovnbe
push
je
xchg
cmp
cwtl
es
mov
pop
pusha
or
xchg
je
aad
lret
xor
idivl
ljmp
std
mov
rolb
cwtl
rclb
mov
lods
shrl
cmp
cli
xor
jo
xorb
dec
sbb
cmp
mov
inc
push
scas
addr16
pushl
push
aas
pop
xor
adc
mov
cmp
dec
jbe
sub
pushl
and
or
fldt
sub
push
push
jg
movsl
stos
jae
sub
pusha
xor
or
lcall
stos
mov
jae
shrl
rcrl
sub
out
pop
movsl
pushl
test
fnsave
and
mov
stos
push
shll
push
shll
adc
or
gs
leave
lcall
xchg
leave
das
xchg
push
lods
add
rcll
mov
movsb
mov
aas
and
aad
fbld
jl
rcpps
int3
repz
jle
lret
imul
mov
sahf
cmp
movsl
jle
jae
int
flds
leave
popa
flds
incl
inc
fdivr
cmp
aas
es
push
mov
and
sti
xchg
pop
push
mov
incl
pop
divb
bt
lret
test
iret
push
nop
pop
mov
lods
push
dec
dec
shll
sbb
call
xor
pop
cli
aad
dec
test
aam
cmp
decl
incl
fldl
adc
and
mov
lahf
cwtl
sub
jecxz
or
mov
pop
or
pop
out
cltd
xor
aad
test
ds
jmp
ss
xor
jno
adc
shrl
jg
neg
stos
sbbb
testl
iret
cld
pop
pushf
in
or
push
jb
fs
mov
xor
add
add
stos
add
in
call
xor
cltd
pop
stc
jge
jmp
fwait
test
mov
les
imul
sub
xchg
sub
jge
inc
test
mov
nop
jae
xor
in
int
ljmp
push
es
shlb
decl
dec
pop
adc
jmp
scas
les
pop
dec
pop
jmp
das
scas
mov
call
call
sbb
cmpsl
sar
jae
pop
jg
inc
pop
xchg
push
xor
xchg
lcall
lods
add
mov
scas
mov
clc
push
adc
loop
mov
xor
bound
jb
sub
add
sub
pop
or
or
cmp
jmp
mov
push
and
push
mov
push
fistpll
pop
mov
aaa
dec
shlb
addr16
pop
loopne
clc
dec
incl
lods
pop
daa
xor
lea
lods
incl
int3
ficoms
and
jno
or
loop
cmp
xlat
clc
lods
jge
pushl
lods
stc
adc
stos
and
jo
jne
jno
js
idivb
js
into
in
jg
mov
filds
inc
mov
add
rol
pop
or
jg
fistl
pushf
outsl
adc
mov
fstpl
xchg
dec
lods
push
xchg
pushl
pop
jno
mov
adc
sbb
pop
sbb
fcomip
out
movsb
xor
mov
fdivl
adc
pusha
test
sub
mov
ret
out
add
add
cmp
dec
cmp
add
xor
push
ljmp
sub
lods
test
mul
cmp
jecxz
jb
out
decl
add
ja
inc
push
stos
lcall
mov
xchg
jl
dec
pushf
pop
add
pop
decb
xor
ljmp
aaa
pop
xchg
lret
in
or
pop
pop
in
xchg
mov
lods
mov
pushl
mov
arpl
jecxz
pop
imul
jmp
gs
jbe
scas
push
lret
call
lret
pop
clc
sbb
mov
and
inc
lahf
incb
mov
stos
pushl
arpl
jge
fistl
sub
mov
dec
push
inc
test
and
pushl
jne
mov
addr16
and
push
gs
mov
std
data16
dec
mov
cmp
mov
mov
decl
sbb
ficoms
sub
dec
pop
push
test
cmp
xor
mov
cmpsb
in
mov
pop
es
add
mov
xchg
xchg
adc
sti
push
ja
cmp
clc
sub
inc
js
pop
outsb
jmp
andl
ds
push
or
repnz
or
lcall
in
jmp
lahf
sbb
pop
sub
cmp
mov
into
add
or
ljmp
add
jle
cwtl
cmp
out
fsts
adc
lcall
aas
push
or
shl
mov
mov
dec
lock
cwtl
xlat
push
mov
pop
sub
inc
cli
mov
sub
lods
int3
and
aad
loope
jg
arpl
and
icebp
lcall
push
xor
adc
xor
test
pop
sub
icebp
outsb
ljmp
andl
aaa
icebp
add
les
icebp
js
movsb
push
cmc
insb
ljmp
outsl
mov
arpl
fists
cli
ds
mov
call
mov
mov
out
fistpll
iret
or
push
push
pop
into
ret
dec
testb
inc
sahf
cli
sarb
ret
or
out
xor
in
test
lcall
add
mov
and
test
ror
jae
mov
jg
xlat
xchg
mov
repz
clc
idivl
jle
jnp
jecxz
les
fucomip
pushl
xchg
pop
xor
lret
lock
out
xchg
pop
ja
movsl
pop
inc
dec
pop
cli
decl
mov
xchg
sub
dec
imul
clc
jl
pop
push
push
data16
std
incl
xor
stc
adc
or
lahf
dec
inc
cmc
push
aad
or
push
pop
fstl
ljmp
cmc
nop
dec
jl
lds
mov
mov
out
icebp
inc
jnp
and
dec
bound
push
aas
mov
inc
ljmp
lret
stc
cmc
sub
mov
mov
adc
jmp
test
cmpsb
call
jge
popf
in
jmp
scas
dec
shl
dec
das
jbe
cmp
and
repnz
fucomip
dec
ret
adc
push
jmp
aas
sbb
call
xchg
jge
jb
add
call
pop
add
loope
repz
icebp
xor
and
test
push
insl
mov
jmp
xchg
int
mov
shrb
dec
mov
cmpsb
fs
out
dec
pop
decb
std
imul
dec
dec
push
pop
add
rcrb
lods
in
fcomps
adc
and
add
ss
repnz
jo
negb
rolb
icebp
hlt
xchg
xchg
cltd
std
ljmp
test
js
imul
mov
push
call
mov
movsl
fs
push
xor
mov
mov
ljmp
es
repnz
je
test
lcall
xchg
lds
fcmovu
push
inc
and
lret
sbb
fsubrs
sbb
out
fnstsw
inc
scas
je
pop
int3
fwait
push
out
ds
cmpsl
jne
and
in
cmp
cmp
pop
fsubrp
sub
mov
mov
jmp
push
test
inc
mov
mov
scas
cmp
xchg
push
adc
and
cmp
jg
cmpsb
sti
jns
das
iret
add
int3
sbb
cmp
push
mov
mov
rorb
pop
cmc
mov
mov
cmp
xchg
mov
mov
adc
or
pop
adc
mov
mov
bound
jnp
mov
mov
or
dec
mov
ljmp
std
cld
dec
stc
out
push
out
xor
ljmp
ja
test
int3
outsb
jno
pushf
sub
rol
and
lods
movsb
sub
mov
mov
jmp
fistps
cli
shrb
xchg
add
mull
iret
fists
xlat
jl
mov
lock
dec
call
jg
add
rclb
add
lcall
repz
cmpsl
loopne
mov
incl
sub
popa
jns
fsubrl
sbb
lods
hlt
mov
insl
xor
lcall
lcall
inc
in
in
sbb
test
pop
jo
mov
std
pop
nop
push
sbb
pushl
mov
mov
int3
stos
jnp
jb
das
or
stc
mov
jmp
gs
jl
xor
sub
mov
lods
mov
int
sar
jg
int3
addr16
xlat
sbb
cmp
pop
lods
mov
and
inc
fistps
jmp
cli
pop
sti
es
cli
call
push
dec
aaa
jle
ret
gs
cltd
test
stos
ljmp
pop
cmp
sub
jbe
into
sbb
jbe
scas
inc
cmpsl
mov
imul
cltd
scas
call
icebp
mov
fs
mov
jge
dec
sbb
push
mov
incl
faddp
ret
popa
out
bound
xchg
xchg
imul
mov
pushl
clc
addr16
aas
add
add
test
pop
mov
cmpsb
or
add
mov
mov
add
data16
mov
js
filds
dec
sar
and
loop
xor
and
xchg
pushl
push
sub
sbb
mov
add
enter
movsl
jbe
dec
cmp
int3
cmpsl
cmp
jno
call
pop
jns
mov
mov
int3
push
out
adc
outsb
out
jnp
xor
sub
inc
cmp
pushf
jl
and
inc
mov
cmp
das
icebp
mov
dec
dec
jo
aas
test
inc
stc
add
mov
rorl
ljmp
xchg
cmc
dec
sbb
push
dec
pop
mov
sbb
ja
sahf
ds
pushl
mov
out
and
inc
sub
lods
mov
xchg
cmc
ljmp
mov
inc
adc
inc
loope
repnz
jecxz
cltd
lods
push
cwtl
pushf
and
jmp
push
cmp
les
std
xor
mov
iret
shr
or
lcall
xor
mov
push
rcr
bound
cmc
xchg
xor
and
imul
xor
xchg
mov
jg
fldl
faddl
jbe
sti
mov
imul
jl
jecxz
pushl
das
cmpsb
outsb
xor
jb
sti
xlat
or
xchg
loop
jbe
inc
jbe
js
inc
jmp
popf
mov
add
cmp
scas
sbbl
xchg
push
lret
xor
dec
sub
ljmp
in
mov
mov
push
mov
cmp
and
cwtl
call
jg
popf
lcall
mov
mov
jmp
imul
pop
outsb
aad
jg
lea
divb
arpl
xor
data16
xchg
loopne
scas
jp
mov
decl
and
mov
sbb
das
xor
movsl
ja
inc
dec
push
add
mov
lret
jp
icebp
push
xor
mov
enter
mov
add
addr16
je
cmp
or
sbb
ret
dec
jmp
decl
sti
out
jnp
xlat
sbb
mov
mov
decl
push
push
xor
mov
or
mov
lods
lahf
in
dec
sub
mov
in
rol
mov
into
insb
rcll
dec
xchg
fucomip
or
fstpt
mov
lock
dec
cld
mov
shll
pop
mov
mov
add
inc
cmc
mov
xchg
adc
adc
mov
dec
cs
lock
xchg
out
sub
in
pop
cli
pushl
stos
stos
cmpsb
cmp
lret
dec
pop
push
jecxz
popl
decl
es
xchg
dec
icebp
mov
jle
std
sbb
sbb
pop
loope
aad
mov
and
inc
jnp
cmp
lea
push
das
xor
jo
ja
adc
jg
mov
decl
in
iret
leave
and
jo
adc
test
add
sub
call
mov
jne
jge
or
or
popa
push
adc
daa
leave
into
pushf
test
lds
mov
or
cmp
mov
xchg
and
dec
jg
push
dec
xchg
mov
mov
dec
sbb
jecxz
fnstenv
mov
mov
test
add
push
xor
and
lds
add
or
xor
pushl
clc
testb
shll
mov
adc
mov
idiv
ljmp
data16
insb
fisttpl
xchg
cmp
out
in
out
inc
adc
out
mov
lcall
movsl
mov
aam
test
cmpb
orb
lea
je
scas
pushf
mov
pop
dec
adc
lcall
das
or
cmp
cmp
and
loop
or
test
pushf
pop
decl
mov
push
lea
cmp
in
loop
inc
aas
lods
shrl
decl
push
pop
inc
mov
roll
mov
stos
std
inc
pop
mov
jno
fnstenv
push
inc
shl
loopne
jecxz
pop
stos
sub
jg
inc
decl
jp
test
push
outsb
push
mov
addr16
ss
lcall
decl
xchg
push
mov
pusha
test
js
dec
or
call
jg
adcb
push
jle
sbbl
sub
ffreep
int
roll
fdivrs
sub
fstps
xchg
sub
sbb
xchg
fisubrs
pop
test
idiv
dec
and
mov
mov
cli
sahf
cltd
popa
xor
and
nop
mov
push
test
mov
adc
aas
and
push
inc
sbb
sbb
rcr
dec
mov
inc
push
stc
sbb
incl
adc
push
cmp
scas
xchg
fisubl
in
sub
jo
jle
pushf
xchg
sbb
lods
sti
das
sub
adc
out
std
scas
int3
inc
fcompl
ljmp
aad
push
aam
popa
mov
mull
out
call
fdivrp
or
sub
adc
fwait
loop
and
js
cmp
pop
sub
fs
sti
jnp
or
std
mov
adc
and
sbb
add
in
cli
outsl
je
in
movsl
dec
sbb
mov
fistps
push
lods
faddp
mov
movsl
andb
mov
paddsb
mov
incl
xor
dec
sub
and
mov
call
std
call
aad
push
jecxz
xchg
sub
push
sbb
mov
add
mov
jmp
jmp
mov
call
ss
jne
mov
xchg
pushf
mov
in
aaa
cli
ljmp
js
cwtl
mul
in
cwtl
arpl
pop
mov
mov
lcall
rcr
loop
jmp
jno
idiv
mov
std
mov
jg
lcall
std
dec
xor
sarl
or
mov
inc
add
sar
leave
out
sbb
mov
dec
push
popf
lds
push
add
ret
cs
mov
cmpsl
fisttpl
rcrl
cmp
mov
test
jg
testl
xchg
adc
adc
pop
in
or
mov
lret
or
or
decl
and
outsl
push
out
scas
rcll
push
mov
bound
push
cmp
dec
cwtl
pop
cmp
incl
icebp
insb
nop
andl
sub
mov
mov
jnp
js
jmp
pop
imul
aas
aas
mulb
inc
push
adc
jne
loopne
mov
in
push
rcr
cmpsb
movsl
ret
xor
inc
in
jo
mov
gs
daa
jecxz
aas
jb
addb
mov
fwait
dec
or
clc
dec
jbe
cld
mov
addr16
adc
mov
pop
lock
sbb
pop
aaa
xor
les
pop
ljmp
negl
pusha
pop
stos
icebp
dec
and
add
adc
in
pop
std
jmp
dec
dec
jo,pt
jns
mov
lock
adc
pop
fwait
jmp
icebp
mov
shrl
rcll
cld
mov
ljmp
pop
sahf
dec
aas
xor
push
xchg
push
loope
sbb
dec
cld
pop
aas
xlat
mov
jb
xor
in
lods
add
mov
call
aas
ss
dec
xor
rcrb
call
sti
adc
fisttpll
out
mov
andb
scas
xchg
sub
cmp
ljmp
jnp
dec
push
mov
pusha
pusha
jnp
aas
addr16
xlat
dec
out
out
ljmp
lcall
jne
orl
insb
stos
das
sbb
pop
adc
pop
subl
or
out
dec
push
and
loope
in
inc
mov
icebp
mov
loopne
leave
add
cmp
lcall
cmp
mov
adcl
mov
cmp
jo
test
repz
decl
jecxz
pushf
lods
mov
jne
mov
decl
mov
inc
sbb
popl
sub
into
dec
jne
int3
gs
or
jg
adc
aaa
je
pusha
sbb
sub
mov
and
mov
filds
dec
ret
cmp
sbb
and
adc
mov
loop
incl
pop
jb
inc
sub
mov
xor
ret
fildll
cmc
and
pop
inc
mov
push
pop
cmp
aaa
add
inc
ljmp
in
scas
daa
ret
xor
push
into
cmc
mov
jmp
adc
sbb
cmp
int3
insl
loop
mov
or
and
pop
imul
enter
arpl
lcall
ficomps
lahf
lahf
mov
in
xchg
shll
sbb
pop
mov
mov
sub
cmp
jno
add
and
ret
jns
mov
pop
loop
loope
decl
sbb
adc
cmpsl
lods
mov
pop
mov
mov
out
shll
enter
jl
clc
and
and
and
shl
neg
outsl
cld
jmp
push
push
dec
xor
push
in
fcoml
inc
ljmp
jns
mov
adc
movsl
xchg
cmp
popa
push
pop
adc
andb
mov
pushl
inc
xor
cwtl
fbld
stos
popa
mov
test
and
call
mov
dec
xor
xor
or
decl
sub
cld
sub
add
and
mov
mov
mov
mov
es
pushl
mov
adc
cwtl
mov
daa
add
lcall
stos
mov
bound
sahf
addr16
mov
cltd
adc
pop
loop
cld
jl
cld
fwait
sub
lea
sub
or
dec
dec
mov
daa
ret
add
sub
cmp
daa
pop
sbb
mov
dec
dec
mov
push
push
arpl
sub
sub
fdivr
inc
pushf
cwtl
imul
pop
imulb
push
mov
cmpsb
mov
mov
push
sbb
dec
inc
repnz
xor
push
daa
sbb
shll
call
jp
aad
cmc
and
mov
out
sub
jo
hlt
lahf
mov
mov
mov
ljmp
cmp
pop
dec
daa
outsl
stos
push
add
and
xor
sub
cmp
incl
daa
iret
xor
fwait
pop
loop
jp
iret
lods
push
clc
mov
icebp
sar
lcall
leave
popl
fdivr
push
mov
mov
pop
decl
ljmp
mov
adc
imul
icebp
mov
mov
and
xor
sbb
inc
in
mov
cmp
icebp
mov
dec
pop
dec
dec
jmp
mov
pop
jl
ja
mov
cmp
mov
xor
out
inc
sti
jne
push
insb
test
fldt
test
mov
popa
cmpsb
fwait
fwait
xor
loopne
cli
mov
jns
add
das
icebp
xor
xor
sbb
adc
loop
cli
sub
mov
pushf
add
or
jmp
popf
lods
cs
push
cmpsl
dec
mov
jae
out
insb
sbb
push
push
subb
outsl
imul
das
mov
cwtl
push
mov
or
sub
pop
cmp
out
add
cmpsl
fnsave
pop
inc
fistpll
mov
sahf
xor
jl
arpl
xlat
lods
push
mov
and
std
cmpl
jmp
std
mov
dec
dec
inc
sbb
imul
dec
push
test
or
jg
aam
mov
xor
xor
ljmp
jge
pop
enter
jge
pushf
cmp
pusha
push
push
ss
lods
imul
frstor
pop
sbb
es
xchg
sub
xchg
sub
mov
icebp
shl
inc
cld
pop
clc
call
lcall
pop
sub
mov
jecxz
or
int3
push
test
dec
gs
lds
mov
mov
frstor
outsb
ficompl
imull
rcrb
and
loope
outsl
sbb
mov
xlat
and
aas
inc
cli
in
jmp
push
clc
data16
lods
adc
iret
hlt
xor
rolb
pushl
or
lcall
cmp
cmpsb
aaa
xchg
jb
mov
ljmp
cmc
orb
push
pop
mov
pop
outsl
cmp
adc
in
fcompl
decl
fcmovnu
jg
or
jecxz
pop
sbb
lds
int3
icebp
icebp
outsb
ret
jg
das
cmc
jns
pop
out
out
push
scas
loope
mov
mulb
sub
loop
hlt
call
inc
push
mul
mov
subb
mov
mov
adc
xor
mov
mov
sub
lods
jle
call
es
mov
mov
xsha256
cmpsb
push
sbb
ja
sbb
in
leave
icebp
push
xchg
cld
sti
sbb
pop
cwtl
mov
addl
push
jne
mov
lret
ljmp
mov
dec
adc
orb
dec
push
cltd
sbb
dec
popf
push
jp
outsl
hlt
cmp
daa
add
cmpsb
jecxz
xchg
xor
mov
pushf
in
jno
call
incl
rolb
pop
leave
adc
fmull
jl
call
fcmovnb
or
ss
pop
dec
pop
push
out
addl
in
lods
pushf
mov
xchg
xchg
jnp
test
movb
dec
in
enter
pop
aam
mov
call
xor
sub
xchg
jnp
sub
clc
cld
repz
icebp
lods
add
call
jg
shr
rolb
fbld
cmp
cmp
aaa
in
inc
cli
mov
decl
inc
pop
fnstenv
dec
pop
aaa
pop
cltd
or
or
mov
clc
decl
push
lcall
xor
jae
mov
pushl
xor
push
xchg
push
fucomi
or
decl
test
cmc
ljmp
bound
xchg
insb
lcall
aaa
out
jge
out
das
std
incl
sbbl
pop
xor
fldt
rolb
imul
fadd
insb
sub
test
mov
adcb
add
dec
sbb
dec
jmp
sarl
inc
mov
jmp
push
adc
mov
adc
adc
dec
enter
into
repz
and
mov
sub
lahf
aas
imul
aas
incl
in
ffreep
jnp
mul
out
lcall
or
mov
mov
subb
add
pop
inc
and
les
pushl
mov
fbstp
shr
shlb
js
xor
mov
sbb
sub
mov
inc
lret
fisttps
xor
dec
push
dec
inc
lock
cmc
pop
enter
decl
andl
xchg
test
push
iret
sub
and
adc
iret
pop
aaa
cs
pop
call
xor
push
add
js
iret
idivl
push
jnp
jmp
bnd
jnp
fcmovu
mov
push
andl
push
jo
jnp
xchg
xor
out
lea
push
cmpsl
aad
sar
jg
js
push
sbb
jnp
stos
xlat
dec
insl
or
mov
lds
pop
clc
in
add
xchg
fldt
ljmp
dec
mov
push
push
jp
call
decl
movsl
mul
cld
das
pop
les
mov
fmul
mov
iret
jge
incl
inc
jg
idivl
add
insb
out
addl
mov
dec
xchg
fdivr
clc
ljmp
ret
cmp
shll
scas
test
ret
xchg
pushl
out
out
cmp
mov
xchg
mov
movsb
icebp
rep
cmp
popa
rcll
hlt
idivl
fdivs
xchg
shrb
dec
jg
mov
and
add
sub
add
call
sub
cld
mov
or
sub
in
pop
nop
mov
and
inc
outsl
ljmp
lcall
mov
outsl
imul
cltd
and
pop
fdivrp
incl
subb
and
das
orb
mov
aas
pop
mov
cld
inc
decl
inc
in
lock
push
mov
repnz
incl
insl
ds
xor
pop
je
outsl
iret
inc
jns
dec
rol
lds
pushl
xchg
inc
pop
lret
inc
cs
insl
lods
lock
arpl
jecxz
aas
xchg
stos
inc
popf
inc
repz
mov
jg
faddl
pop
cmpsb
pop
cli
movsl
pop
data16
roll
cld
sub
cld
inc
lcall
pop
jmp
add
jl
jmp
les
aaa
cltd
and
fidivs
mov
push
cmpb
add
ljmp
sbbl
frstor
sbb
aad
imul
jne
cmp
call
clc
lret
js
push
sbb
lcall
sbb
sub
test
xchg
sub
in
lcall
in
dec
lret
movb
push
fdivrp
lcall
or
push
xchg
dec
adc
inc
push
xchg
ror
push
in
xor
sti
dec
or
fucomip
call
xchg
loop
mov
aas
fisttps
jne
ss
or
out
mov
push
movb
push
pop
int
out
xlat
sub
imul
dec
mov
rcll
sub
pop
sbb
decl
shrl
add
into
and
call
ret
sbb
fadd
and
nop
das
xor
dec
ljmp
mov
lret
negb
dec
repnz
pushf
lret
jo
cltd
mov
dec
aas
adc
test
jmp
dec
jmp
dec
dec
cmp
push
mov
jg
decl
mov
jnp
fidivl
fwait
in
sub
addr16
fldcw
push
adc
ljmp
dec
fs
iret
mov
inc
pop
les
mov
adc
inc
jp
cwtl
lret
aam
clc
pushl
dec
mov
jmp
pop
js
cmp
push
jge
mov
jns
incl
jne
dec
loope
mov
imul
mov
adc
mov
or
fldt
mov
xchg
sbb
adc
out
jbe
or
scas
es
jl
sti
popf
fdivr
jg
and
fdivp
lock
push
xchg
jb
aam
mov
lds
movsw
jns
das
std
call
push
and
cs
lcall
outsb
xchg
jmp
xor
jmp
fdivl
in
jecxz
scas
aas
mov
out
push
pop
pop
fdivs
push
pop
mov
pushl
insl
adc
mov
scas
pop
sbb
mov
jb
insl
jg
jmp
cli
ja
enter
stos
dec
push
ljmp
sbb
pop
jne
imul
add
dec
ja
mov
fucomip
bound
cmp
into
out
pop
outsl
dec
jle
push
popa
fsubrl
ds
inc
js
or
stc
jp
negb
enter
test
xchg
out
fisttps
jecxz
add
incl
inc
rorl
pop
pop
pop
pushl
jne
out
push
mov
ljmp
cld
xor
popa
in
mov
cmp
stos
inc
dec
in
test
test
or
das
cld
push
xlat
addr16
ds
push
sbb
pop
add
mov
das
cld
push
mov
pop
das
loop
dec
enter
ret
cmp
cld
jmp
imul
or
cmp
push
imul
add
test
rorl
ljmp
pop
adc
and
xchg
in
decb
cmpsl
mov
dec
jecxz
mov
push
fmull
adc
stc
sub
add
xchg
outsl
and
ljmp
ljmp
int3
lock
inc
adc
fildll
pop
mov
cmp
add
pusha
in
lcall
in
frstor
out
add
pop
jo
push
fmull
or
incl
cmpl
das
daa
je
in
popf
rcrb
sahf
leave
in
mov
inc
push
or
cli
scas
aad
mov
in
inc
or
mov
jg
pop
cld
mov
cmpsl
adc
cmp
loope
mov
idiv
call
clc
iret
and
lds
andl
loope
jnp
push
add
incl
lds
and
and
loopne
icebp
shlb
jae
push
ljmp
lret
lret
fs
imul
sti
jmp
aad
inc
call
movsl
ficompl
sub
mov
fld
jg
xlat
decl
lcall
cltd
decl
mov
insl
aam
ljmp
sarl
out
jmp
push
sub
out
jae
enter
clc
lcall
frstor
push
test
mov
cld
ljmp
xor
out
popf
adc
mov
mov
cmp
std
cmp
decl
mov
xchg
xor
pop
movsb
ret
pop
ja
add
add
ljmp
add
in
sub
push
and
rcll
popf
mov
or
ljmp
shr
xor
fcoms
push
aaa
in
mov
fdivrs
dec
ss
ljmp
shrb
and
mov
push
scas
pop
jns
out
or
and
dec
cld
jle
int3
repz
mov
mov
pop
jns
mov
add
pop
mov
mov
jecxz
pop
add
mov
std
jge
mov
cmpsb
mov
adc
ljmp
icebp
decl
xor
sbb
repz
xchg
iret
scas
sub
push
std
mov
ret
les
jne
cmc
movsb
roll
and
loop
jns
fld
lods
push
jmp
and
push
fprem1
fldl2e
lock
xchg
mov
or
mov
mov
rclb
jmp
xchg
imul
or
pop
mov
pop
ret
mov
jg
xor
cld
ljmp
push
pop
jmp
fisubs
mov
lcall
push
xchg
mov
lcall
fisubs
fistps
daa
xor
out
jmp
xchg
clc
xchg
xor
aas
or
xor
mov
outsl
lock
pop
dec
dec
cmc
sahf
mov
loopne
sub
outsb
mov
stos
mov
lcall
cld
jne
or
cltd
cmp
xchg
xor
xchg
test
std
and
or
in
fidivrl
inc
sbb
xchg
cli
pushl
pop
xorb
inc
cmp
xor
mov
repz
xchg
leave
xchg
mov
cs
jl
jg
xchg
rcll
push
or
fs
and
jmp
imul
mov
mov
pop
aad
mov
inc
in
shl
xchg
imul
or
ljmp
lcall
jo
sbb
mov
jmp
ss
or
add
pushl
shll
dec
xchg
push
test
loope
fisubl
mov
inc
in
xlat
pushf
addr16
mov
sti
flds
fbstp
adcl
adc
js
hlt
sub
push
jle
sub
icebp
in
mov
mov
mov
cmp
jle
loop
xor
cs
mov
shrl
movsb
xor
adc
dec
xchg
cmp
push
or
std
dec
fldenv
fildl
pop
xchg
in
adc
insl
sub
test
loope
add
insb
das
sub
dec
jmp
adc
xor
sub
cwtl
push
add
push
lret
mov
test
mov
mov
jb
mov
das
mov
aad
cmp
lcall
pop
cltd
cmp
xlat
pop
call
mov
aaa
scas
mov
or
push
clc
gs
fwait
sbb
and
out
xorb
lds
jecxz
sar
decl
xchg
ss
mov
and
scas
pop
mov
jmp
push
pushf
pop
cmp
fmull
sub
adc
insb
jl
jg
pusha
cli
xchg
fstps
test
pop
imulb
add
mov
es
fs
decl
xchg
adc
cmp
jne
jge
loope
jp
ss
dec
loop
xchg
lret
out
repnz
call
arpl
sbb
sub
inc
pop
jbe
jge
lock
loop
movsl
ret
lea
pushl
bound
ljmp
pop
and
mov
nop
lret
call
adc
daa
negb
sbbl
ret
iret
lcall
pop
xchg
jne
pop
inc
test
dec
jbe
jg
decl
inc
inc
push
cmp
sbb
daa
dec
inc
ret
lods
jo
mov
fucomip
xchg
inc
mov
mov
sub
ficoml
sbb
mov
xor
fdiv
cmp
call
or
movsl
out
and
dec
jns
jb
xchg
cmp
mov
inc
insl
push
inc
outsl
outsl
sbb
clc
dec
dec
movsb
pop
jnp
imul
hlt
or
pop
mov
ljmp
ja
and
bound
lds
adcb
jmp
inc
adc
jmp
cld
sahf
push
cmpl
lret
dec
inc
ror
outsb
pop
js
add
sbb
xchg
push
lcall
sub
xchg
jno
xor
loopne
jmp
xor
dec
arpl
out
jae
and
in
call
clc
jmp
cmp
push
and
cs
jecxz
jg
push
jecxz
ds
cltd
pop
add
les
cmp
dec
dec
lcall
jb
or
nop
out
cld
cmp
nop
ljmp
in
push
test
add
add
adc
in
or
out
test
xchg
repz
xchg
cmpsl
out
sbb
hlt
jecxz
jmp
test
mov
and
negb
xor
lcall
insb
subb
fs
js
orl
lcall
leave
dec
mov
mov
fld1
add
in
or
lahf
pop
mov
pop
std
ljmp
sub
fsubl
sub
test
decl
add
mov
aad
bound
clc
mov
xchg
xchg
rcrb
aaa
popa
mov
cltd
dec
dec
cwtl
or
in
cli
ds
mov
repz
or
sar
ds
mov
rcll
call
je
fstpl
lea
mov
call
ds
or
add
shlb
test
jo
cs
testl
dec
xchg
inc
and
out
or
pushl
fnstcw
pop
mov
push
adc
mov
jmp
inc
outsl
callw
ds
mov
mov
lret
outsb
push
ljmp
leave
xchg
pushw
testb
push
push
xchg
in
decl
incl
adc
xchg
mov
jmp
inc
scas
test
mov
jp
decl
cmpsb
mov
ret
push
hlt
push
fnstenv
inc
fcoml
lock
cli
insb
hlt
cli
dec
add
in
jnp
testb
jg
adc
push
lret
dec
inc
pusha
lods
push
push
test
sbb
into
rorl
ror
sbb
mov
cmp
jmp
pop
or
mov
push
and
imul
cs
test
mov
fisubrl
incl
xchg
ss
pop
lea
and
ret
jge
inc
push
or
enter
enter
dec
push
je
push
nop
ret
es
cli
decl
ret
jle
call
pop
arpl
ss
mov
cli
adc
lahf
stos
movsb
call
movsl
mov
inc
fmuls
mov
jnp
mov
mov
ret
rorb
cmc
icebp
pop
inc
cmp
lcall
xor
sub
pop
cs
fs
test
cld
sbb
rolb
filds
or
bswap
imull
call
pop
aas
testb
fcomps
inc
mov
sub
xchg
std
call
js
test
mov
popa
and
mov
stc
sti
mov
push
push
ljmp
push
or
stos
jo
pop
dec
popa
gs
data16
daa
dec
repz
das
in
xchg
test
addr16
cmc
mov
test
mov
loop
loop
data16
imul
sbb
loope
sbb
mov
mov
or
sbb
in
add
dec
jg
decl
cmp
sbb
xor
mov
decl
mov
mov
mov
loope
sub
or
pop
popa
das
lcall
pop
outsl
hlt
pushl
leave
xchg
fimull
int
pop
lahf
repnz
out
push
mov
jg
sti
mov
ret
push
stos
clc
xchg
mov
sti
std
rcr
dec
adc
or
pushl
and
inc
jb
jbe
scas
filds
shlb
cmpsl
and
jmp
mov
incl
cs
hlt
sbb
cmpsb
pop
repz
mov
filds
addr16
addr16
and
fwait
imul
sub
jg
cld
cmp
shrl
fistl
and
jne
jae
movsb
sahf
dec
mov
adc
xchg
je,pn
and
dec
inc
mov
pop
add
jmp
jecxz
cwtl
cmp
mov
xor
xchg
ds
inc
inc
mov
fisubs
ljmp
push
insb
xchg
imul
test
daa
xlat
or
das
jae
add
test
pop
je
pushl
das
test
iret
arpl
mov
aaa
mov
cmp
js
out
subl
out
pop
aaa
pop
sbb
mov
cmp
mov
loop
sbb
shrl
add
cmp
add
jmp
push
inc
dec
inc
jbe
sbb
jp
mov
lcall
inc
and
test
jg
call
push
imul
rclb
outsb
loope
or
das
push
push
adc
lahf
insb
mov
cmp
adc
fwait
or
js
jp
or
sub
into
mov
mov
dec
ja
mov
lret
push
inc
ja
sub
outsl
dec
mov
adc
xchg
mov
jge
cli
decl
dec
add
and
adc
lcall
xchg
jb
mov
cmpsl
pop
ljmp
xchg
inc
jne
xor
cld
mov
jnp
aaa
pop
loop
xchg
inc
mov
fnstenv
inc
cmpsl
mov
pop
add
xor
pop
call
and
cld
xchg
cmp
and
sahf
data16
mov
imul
call
clc
sbb
fs
or
cmp
inc
pop
xor
push
lock
fistpl
call
push
lds
sub
aad
mov
cmc
pushl
jg
inc
jnp
inc
mov
mov
push
enter
outsl
shlb
scas
in
rep
or
xor
sahf
scas
fs
shr
fs
pop
loop
jmp
sbb
movsb
ljmp
inc
repnz
and
jnp
and
ret
xor
out
scas
push
jno
mov
mov
inc
jg
out
fucomip
js
jbe
cmp
jp
in
xchg
test
pop
pop
lahf
and
hlt
call
jg
test
pop
push
sub
loopne
mov
jp
xchg
ret
or
mov
cld
incl
das
mov
jle
loop
jmp
add
sub
outsl
xor
or
cmp
cmp
iret
jecxz
cs
dec
das
popf
pop
add
cmpb
mov
jge
add
push
outsb
lock
popf
jecxz
decl
sub
in
mov
repz
inc
jo
fcoml
ret
push
sti
sbb
fdivrp
mov
jns
test
jmp
imul
mov
and
sbb
lods
les
push
insl
mov
or
sbb
dec
xor
enter
sbb
mov
cwtl
into
out
jle
fwait
cmpsl
adc
sbb
inc
mov
inc
shlb
incl
das
mov
ret
daa
cld
adc
xor
cltd
sub
test
cmpsl
mov
pop
ljmp
ret
push
push
xchg
sub
loopne
lahf
jmp
in
into
mov
dec
mov
das
hlt
jg
push
nop
jp
pop
iret
mov
clc
cli
and
add
std
jecxz
lock
ss
out
mov
dec
mov
jg
je
xlat
lock
fildl
push
jnp
xor
adc
js
ret
mov
and
cld
and
xchg
std
mov
add
addr16
jmp
or
lret
pop
xor
scas
es
movsb
add
dec
das
pop
and
inc
mov
out
dec
fisubrs
stos
pushl
data16
mov
cli
cmp
jge
test
sti
fldt
test
xchg
sar
aas
jno
inc
mov
in
popa
and
pop
push
fistpl
rcll
addl
sar
arpl
inc
shl
or
push
sbb
jmp
inc
jae
out
mov
enter
push
out
shll
aas
adc
or
jnp
inc
xchg
fiadds
decl
clc
mov
xor
imul
mov
fwait
insl
cmp
lcall
or
frstor
pop
push
jns
inc
pop
ja
pop
dec
pop
xor
mov
dec
mov
push
leave
cltd
inc
jge
pop
pop
scas
sbb
mov
ljmp
in
movb
jae
and
clc
movsb
sahf
ja
aaa
clc
jmp
cld
add
mov
cli
and
cmp
or
stc
test
cmp
in
mov
outsb
insb
popf
popf
sti
mov
in
or
lock
call
adc
testb
and
rorb
out
call
add
add
int3
addl
aas
xor
std
dec
xchg
out
ljmp
pop
dec
mov
xlat
outsl
sarb
sbb
jmp
lds
rolb
dec
out
or
pop
dec
xchg
es
movsl
scas
mov
call
pop
mov
lret
or
int
ds
clc
sbb
xlat
mov
ljmp
sahf
inc
nop
jnp
jno
or
dec
nop
cmp
outsb
cwtl
xchg
pop
sub
sub
sub
jecxz
jmp
xor
fcomp
mov
sqrtps
xor
and
and
pop
dec
pop
cli
lcall
sbb
mov
xor
ja
pop
in
push
fsubr
sub
decl
xchg
and
ss
sbb
jecxz
iret
xchg
stos
mov
or
repnz
or
inc
call
push
les
inc
subb
ret
test
cli
fidivrl
mov
lret
cld
jmp
aam
push
out
ljmp
or
pop
lcall
hlt
cld
jbe
lcall
cs
mov
xchg
outsl
inc
add
push
sar
test
je
mov
in
jnp
pop
push
ret
and
jge
aaa
inc
gs
cld
lret
repnz
lods
jne
jo
mov
test
fsubs
adc
pop
pop
cld
jg
push
or
fldln2
xchg
mov
push
in
lea
fucom
lcall
mov
stos
push
jle
aam
fsub
jo
in
test
inc
sbb
lock
call
dec
push
mull
iret
loope
push
fcmovnb
jmp
call
jmp
mov
cld
cmp
xor
fwait
test
bound
inc
pop
lcall
cmp
scas
movsl
adc
dec
or
ret
pop
push
or
xor
shlb
inc
sub
mov
sarl
cmp
das
cmc
lcall
loopne
and
sbb
stos
inc
mov
push
inc
loop
ljmp
sti
fst
fisubs
xchg
add
out
outsl
sbb
call
ret
out
cmp
lods
adc
stc
lods
dec
pusha
shrb
mov
and
jmp
mov
mov
mov
xchg
sub
scas
adc
cmp
decl
jae
push
insb
insb
adc
shlb
mov
jmp
ljmp
mov
push
mov
sahf
sbb
fcomi
imul
enter
pop
aad
nop
ss
adc
aad
leave
jb
out
outsl
inc
cmp
outsl
loop
mov
aam
sbb
and
stc
inc
jg
jg
cltd
mov
das
scas
sar
jp
mov
inc
inc
cmpb
jle
in
xor
or
cltd
or
into
jae
cmp
ljmp
or
jp
mov
mov
dec
popf
cmpb
call
mov
shrb
xlat
enter
in
negb
add
imull
jl
add
adc
mov
jb
imul
call
and
cltd
aas
pop
fstps
std
cmp
loop
fcmovnu
adc
cmp
outsl
cmc
dec
test
addr16
scas
or
incl
pushl
std
clc
gs
cmp
xchg
and
dec
ret
mov
js
jge
jne
adc
sbbb
sbb
mov
xchg
aas
into
ja
aam
incl
fcomps
push
fs
or
ret
gs
mov
jg
decl
jb
xchg
mov
cmp
sti
in
jle
adcl
mov
jecxz
test
jg
inc
sarl
pop
or
and
jb
jmp
arpl
icebp
decl
jns
adc
adc
xlat
inc
fistl
jns
js
dec
xchg
sub
or
out
inc
mov
daa
mov
fdivs
scas
and
cs
ja
mov
call
or
cli
das
sub
movsl
inc
imul
sbb
jmp
shr
xchg
xlat
cld
ret
add
jg
adc
jo
xor
mulb
mov
inc
enter
pop
bound
imulb
xor
jg
out
or
call
dec
mov
xlat
sbb
jp
into
in
insl
xchg
neg
scas
incl
adcl
cmpsl
mov
jno
popa
jmp
jl
mov
sub
dec
mov
stos
mov
stos
movsb
pop
sti
mov
inc
pop
pop
std
pop
xchg
std
fstpt
push
lods
mov
ljmp
decl
pop
pop
lock
jg
movsb
sar
adc
xor
std
jg
xchg
mov
pop
sbb
dec
aaa
lret
repnz
or
insb
lcall
scas
pop
push
popf
adc
outsl
sub
leave
push
fidivrs
lods
adc
fdiv
xor
incl
fistpll
or
sub
fucomi
jle
sti
jae
mov
or
xchg
js
pop
cltd
sahf
sub
cmp
loopne
jmp
out
cwtl
aaa
xor
incl
or
imul
push
xorb
push
in
mov
push
adc
jno
inc
mov
mov
dec
dec
push
call
dec
cmpsl
push
mov
cmp
cmp
and
sahf
xchg
jne
xchg
in
adc
pop
xor
cmpsb
jp
fstl
mov
add
repz
iret
shrb
and
ficomps
sbb
aam
adc
ljmp
ljmp
cwtl
fisttpll
dec
subb
movsl
lods
push
xchg
mov
into
nop
pop
ljmp
or
sti
fwait
sbbb
mov
das
cld
ljmp
adc
mov
dec
adc
push
sar
rclb
mov
call
mov
lret
shr
cld
push
imul
sbb
mov
xchg
cmpsl
loope
and
popf
push
call
xor
dec
sbb
and
fdivs
icebp
push
cmpl
and
call
mov
push
hlt
mov
mov
out
es
jg
push
aas
insl
mov
fs
add
jg
xor
inc
ret
repz
mov
dec
lea
lods
adc
clc
stos
cmp
arpl
jge
cmp
cmc
jmp
inc
aad
fidivl
jb
mov
mov
xor
push
inc
stos
loop
aaa
jp
sbbl
test
lret
and
lcall
fbld
adc
loope
rorl
dec
loope
and
testl
fbld
decl
xchg
jae
or
sub
call
clc
in
jge
add
dec
fstpt
fs
xchg
xchg
cwtl
pop
jno
mov
jbe
scas
pop
ljmp
adcb
and
cld
and
movsl
mov
popf
stos
mov
mov
inc
jle
xor
or
out
cmp
jmp
pop
mov
aad
push
cmp
mov
pop
cwtl
mov
lea
pushf
shrl
pushl
mov
or
popf
push
test
stos
push
jg
jmp
dec
lds
mov
xchg
or
and
aad
push
jmp
push
ljmp
insl
enter
enter
push
jg
jmp
sub
push
jge
ljmp
ret
pop
sbb
outsb
cli
ja
xor
jl
adc
lcall
aaa
pop
int3
jnp
loop
add
aam
mov
jo
adc
sbb
cmp
insl
std
or
jp
and
sbb
les
das
hlt
incl
frstor
imul
ja
or
and
adc
xor
pushl
xchg
out
hlt
and
shr
xor
clc
add
aam
pop
push
fcoms
jg
ficoml
stc
ret
mov
clc
ret
mov
add
fcmovne
int3
mov
decl
mov
xchg
jbe
popw
test
lods
jne
mov
mov
pop
push
rcrl
imul
outsl
jle
cmpsl
pop
in
pop
mov
ffreep
pop
push
xor
notb
pushl
clc
call
cltd
int3
mov
push
mov
cld
scas
inc
in
lods
rcl
jecxz
imul
xchg
xchg
sub
mov
xor
mov
mov
adc
xchg
repnz
add
mov
cmpsb
sbb
das
jbe
lcall
push
mov
mov
or
cvtdq2ps
xor
cmp
mov
jg
and
ljmp
cmp
lea
or
test
push
push
or
add
lock
aad
pop
cmc
cmp
and
mov
mov
lret
xor
fwait
lahf
xor
je
fdivr
sbb
jg
sbb
jo
fcomps
sarl
push
dec
mov
scas
les
ljmp
and
pop
std
mov
call
sub
or
loope
mov
incl
xchg
xorb
mov
dec
clc
fmulp
mov
leave
fstpl
shlb
js
aam
aad
mov
mov
into
fadds
pop
sub
xor
imul
pushl
xchg
lds
pop
dec
cs
mov
pop
or
dec
jg
or
mov
in
dec
cmpsl
sub
in
jmp
jns
aad
mov
sub
mov
xchg
inc
jmp
testl
call
or
jne
adcl
xchg
jno
in
lcall
push
es
adc
or
jmp
pushl
call
loop
adc
addr16
repnz
aam
pusha
adc
sbb
push
or
mov
mov
mov
stos
sbb
sub
out
xor
sar
ljmp
nop
mov
xor
repz
test
scas
cli
mov
insb
ljmp
xor
mov
add
or
imul
stos
adc
je
inc
lock
pop
movsl
pop
pop
loop
push
cltd
mov
std
pop
mov
xor
push
cmp
cld
fwait
data16
jl
pusha
notb
leave
push
mov
cmc
call
cli
std
orb
lcall
xchg
scas
sub
test
aas
pop
adc
dec
lcall
add
sub
in
cmc
cmp
jecxz
jmp
pushl
fldt
add
jnp
push
pop
mov
pop
jle
clc
mov
ret
cmp
lea
or
sub
xchg
adc
jns
nop
sbb
sbb
std
dec
cmpsb
lcall
fcomps
mov
insl
test
fimuls
fstpt
shrb
pushl
jl
out
fidivrs
and
stc
adc
dec
shll
test
decl
in
push
inc
cmpsl
mov
test
xor
mov
mov
incl
cmpsb
outsl
xchg
lretw
and
jp
test
sbb
ja
xchg
jne
mov
ja
sbbl
inc
pop
ljmp
fstl
dec
lds
jne
decl
sbb
sbb
xor
push
jb
repnz
in
push
xor
sar
lock
push
or
hlt
loopne
outsl
push
jmp
fs
mov
ffree
inc
jnp
jle
fs
xchg
loop
popf
cld
jecxz
outsl
icebp
decl
int3
dec
int3
xor
ret
bnd
dec
mov
xor
les
sub
aad
cld
aaa
cmc
mov
pop
pop
call
shr
sti
xor
sbb
call
jmp
shlb
fisubs
leave
sahf
cvtpi2ps
jb
call
fucomip
cltd
mov
sub
or
ss
dec
mov
lcall
mov
inc
push
out
lods
xor
and
scas
xor
filds
scas
sbb
push
cli
lahf
clc
mov
rclb
sub
ss
mov
push
movsb
sbb
pop
jae,pn
push
lods
addr16
sar
pop
push
xor
fisubrl
mov
fcomp
xchg
and
loopne
out
add
stc
inc
call
ljmp
inc
hlt
mov
push
scas
xchg
push
idiv
jmp
cmp
mov
lds
ror
stos
in
mov
out
cmp
lea
jo
cmpsb
pop
jo
fimuls
es
jmp
outsl
push
pop
jg
mov
iret
into
mov
in
sub
xchg
aaa
lea
lcall
outsl
lock
pop
jl
mov
int3
out
in
and
arpl
shl
lods
int3
mov
and
mov
fbstp
in
mov
lret
dec
out
sti
or
jno
icebp
push
jae
mov
push
aad
mov
inc
loope
addb
incl
cs
test
cmp
pop
insb
mov
loop
jnp
in
cmp
cmc
faddl
lds
pop
clc
mov
push
cmp
popf
jge
shrb
dec
lret
lds
xchg
mov
data16
ljmp
out
loopne
repz
aam
push
mov
cmp
ljmp
xor
scas
fmull
xchg
adc
rcl
sub
leave
push
or
sbb
ljmp
add
xor
sbb
lds
cmp
loope
out
or
scas
mov
mov
mov
test
ljmp
push
jo
jns
jg
push
rcrb
or
and
push
cltd
and
insl
mov
xchg
insl
jne
inc
ss
incl
cmpl
xchg
je
pop
sbb
xchg
inc
arpl
push
je
stos
jmp
sbb
jnp
mov
stos
fimull
incl
sbb
mov
mov
test
mov
xchg
and
das
in
and
arpl
aad
jg
cs
pop
outsb
popf
shl
jmp
cmp
mov
ss
mov
jg
mov
jg
jo
test
inc
mov
adc
movsb
mov
ljmp
push
fidivl
jge
rol
or
test
pop
sbb
das
push
loopne
fs
testl
cmp
cwtl
lcall
decl
outsb
lods
lret
stc
divl
arpl
mov
mov
lods
lcall
and
repz
adc
xchg
mov
cmp
call
jae
js
aaa
cwtl
adc
mov
pop
mov
xor
adc
outsl
push
clc
dec
and
mov
lahf
into
lcall
aas
and
in
push
out
pop
das
xchg
mov
insb
and
ljmp
movsb
xor
sar
pushl
into
xchg
jbe
aaa
testb
add
xor
push
fistps
incl
sbb
or
mov
aam
ss
fs
in
rolb
ljmp
lock
inc
stos
fisttpll
clc
cmp
lds
adc
inc
mov
fdivrs
sti
jbe
cmp
popa
and
int
jp
inc
ljmp
data16
repz
mov
and
or
in
push
ljmp
xor
insl
mov
mov
imul
mov
pop
call
lret
int3
popl
std
mov
imul
cmp
push
and
xor
aas
stos
inc
fs
daa
xchg
and
cwtl
mov
into
cli
fisttps
mov
movsl
sub
sub
or
lea
jae
jl
out
icebp
xchg
lret
push
outsb
outsl
icebp
mov
push
push
idivb
sub
cld
mov
push
and
fsubrl
rcl
imul
dec
jmp
inc
outsl
jnp
btr
dec
cmp
outsb
into
xor
pushl
imul
push
addr16
sub
in
pusha
scas
xchg
and
enter
lahf
jbe
clc
decl
lock
dec
jmp
or
jbe
movsb
sbb
and
xchg
jns
ja
and
movsl
shr
loopne
ja
shlb
outsl
mov
jae
and
pushl
pop
and
xchg
mov
cmp
jno
xchg
insl
inc
and
mov
jne
inc
cmp
jl
sahf
into
cmp
pop
call
mov
cltd
fidivrs
lcall
pop
mov
data16
push
dec
jle
call
sti
sahf
xor
incl
xor
fistpll
sti
div
pop
jmp
stc
jmp
mov
daa
or
outsb
ljmp
jp
and
add
jae
xor
rclb
out
mov
movsbl
sub
xchg
sbb
jp
mov
lock
je
sub
das
icebp
lcall
add
sub
sbb
xor
fsubrp
sahf
je
and
stos
lcall
out
cmp
bnd
pop
repnz
subb
jge
mov
data16
cmp
push
data16
jg
scas
pop
inc
mov
ja
or
out
aam
nop
pop
popf
scas
push
fwait
lret
cmc
int3
adc
jmp
mov
pop
pop
sti
add
addr16
xchg
dec
xchg
xor
xor
jmp
pop
dec
xchg
cltd
xchg
rcrl
fnstenv
imul
and
incb
xchg
jle
cmc
or
ljmp
ljmp
push
dec
xor
loopne
dec
mov
mov
mov
jmp
cmp
xchg
stos
filds
push
repnz
jno
lcall
idivb
loop
push
mov
xchg
sub
aam
jecxz
jns
std
mov
inc
sbb
lods
add
xor
mov
cmp
ljmp
jns
pop
into
push
movsb
inc
sbb
sub
in
scas
mov
pop
fisubrl
mov
lret
sub
in
pop
cmp
mov
rcll
fists
clc
incl
mov
aaa
push
sub
jne
roll
ljmp
jmp
sub
mov
sub
push
cwtl
or
stc
fdivl
incl
int3
in
dec
lods
pop
add
and
js
sub
mov
pop
pop
ja
sub
ja
inc
aad
dec
lcall
pusha
mov
outsl
sbb
jg
mov
mov
xchg
cmc
sbb
testl
jbe
inc
nop
scas
pop
or
outsb
adc
decl
jle
mov
cmp
leave
aas
pop
cmp
fnsave
daa
mov
decl
jg
into
lods
xchg
xchg
ret
cwtl
fildl
gs
lock
xor
dec
inc
mov
push
fdivrs
jmp
lods
bound
jne
jl
push
das
or
jecxz
pop
loop
call
inc
push
push
test
adc
push
out
stos
jp
inc
xor
adc
push
lock
incl
cmp
jp
and
ja
mov
js
xchg
sbb
cmpsl
cltd
test
in
ljmp
fxch
je
cli
xlat
repz
outsb
bnd
fdivr
mov
test
cmp
icebp
jl
lret
imul
jge
out
icebp
mov
outsl
faddl
sti
adc
mov
outsb
fisttps
ljmp
es
ret
xchg
pop
adc
lahf
jle
push
test
sbb
sbb
repnz
adc
aad
xchg
sub
dec
cld
lcall
test
cld
cmp
lods
mov
xor
cmp
lock
enter
mov
frstor
xchg
shll
test
icebp
pop
call
lcall
push
cmp
loope
cmp
dec
push
sbb
sbb
push
popf
outsl
and
mov
mov
daa
cmp
jmp
or
pop
shlb
or
test
lcall
jns
push
and
ljmp
mov
int3
fstpt
mov
cs
dec
pop
pop
scas
jecxz
sbb
mov
dec
mov
mov
or
in
lcall
dec
dec
or
rcll
repnz
xchg
call
ljmp
mov
push
mov
and
push
aaa
jmp
xorl
sub
outsb
movsb
cmp
gs
mov
add
cli
and
sahf
inc
xor
push
mov
push
sub
push
in
jecxz
insl
cs
inc
mov
inc
jmp
inc
inc
in
and
in
push
call
gs
enter
push
xor
cli
inc
bound
mov
or
ds
gs
leave
movsl
mov
sub
xor
pop
stc
add
mov
pop
sub
pop
xor
orb
jmp
dec
lea
and
popaw
int3
push
sbb
ljmp
fmuls
movsl
jg
imul
cmc
mov
jmp
imul
cmp
mov
cmp
push
adc
inc
cld
sub
lret
fucomip
mov
xchg
jge
sbb
inc
adc
popa
adc
insl
pop
sbb
jg
inc
mov
repz
call
sbb
adc
jp
std
mov
inc
sub
jp
or
cmp
pop
jle
push
test
jo
jmp
mov
into
test
push
pop
insb
lcall
pop
adc
lock
ljmp
sbb
ljmp
push
std
decl
inc
out
mov
js,pt
push
lret
push
xor
or
mul
sbb
or
mov
push
stc
aad
xchg
js
cmpsl
leave
pop
xchg
jne
mov
divb
ficompl
fldenv
xchg
faddl
mov
sub
fldt
push
inc
jle
decl
pop
pop
aas
add
out
jnp
xchg
mov
ja
jo
cwtl
iret
push
adc
dec
pushl
add
jecxz
xchg
ja
imul
sti
stos
negb
movsl
add
push
mov
mov
outsb
cmp
ja
jnp
cmc
sbb
add
mov
fsubp
jg
sahf
insl
pop
sbb
cmp
in
cmp
cmp
ljmp
lds
outsb
lods
inc
xchg
ja
into
pop
pop
cltd
popa
jb
ljmp
xchg
push
push
loopne
call
fsubrl
sub
push
and
and
adc
and
outsl
negl
cld
ljmp
jp
ret
push
lods
inc
mov
ss
iret
imul
lcall
test
sbb
mov
mov
mov
xor
sti
fcomip
rol
lcall
mov
and
xchg
test
sbb
call
xor
shlb
aas
cmpl
adc
and
imul
jge
jmp
jg
push
sti
mov
push
lds
pop
xor
fcmovnb
sub
mov
insb
mov
outsl
hlt
add
movsb
incb
or
xchg
cli
imul
pushl
test
jle
lret
push
inc
inc
stc
add
in
push
cmp
data16
fsub
sbbb
incl
gs
loopne
fsubl
sbb
aad
icebp
jmp
cmp
xchg
sbb
dec
jl
push
jecxz
gs
adcl
sarl
call
in
and
lret
testb
inc
jmp
inc
push
sbb
jecxz
sub
jne
in
hlt
lods
out
jp
ljmp
das
cmc
dec
iret
int3
into
lock
fdivp
and
outsl
out
xchg
xor
lcall
dec
fcoms
ret
push
sbb
test
insb
push
xor
aaa
jae
mov
mov
jno
and
cmp
imulb
mov
add
test
push
imul
sbb
je
xor
nop
mov
call
adc
out
sub
adc
cmc
adc
mov
pop
push
push
rcrl
xor
mov
stos
and
arpl
dec
and
jns
lods
sahf
fwait
xchg
jle
pop
cwtl
dec
fstl
test
push
ret
in
jg
push
shlb
loopne
jmp
sbb
push
jmp
push
inc
adc
xor
sbb
pushl
cmp
sub
sub
imull
mov
lcall
sub
scas
jb
pop
xchg
dec
inc
shrb
idivl
iret
dec
mov
lcall
mov
dec
jno
repnz
imul
cmp
push
iret
pusha
jb
xchg
das
lret
pushl
sub
jmp
out
cmpl
sbb
and
decl
imul
sub
and
mov
push
sbb
call
mov
incl
mov
cmc
sbb
xchg
cmpsl
fstpt
jg
scas
jne
push
xchg
xor
pop
add
int
les
inc
data16
call
popa
ret
inc
lea
std
js
arpl
pop
lcall
adc
test
call
cld
dec
push
push
sub
out
lock
mov
cmc
sub
stos
jne
ja
jl
outsb
std
lcall
xchg
cld
xor
hlt
xorb
cmpsl
lret
shr
xchg
ljmp
stos
syscall
dec
jns
mov
int3
aaa
call
mov
sub
dec
mov
lcall
cmpsl
test
lret
pop
xchg
dec
sbb
inc
pop
jae
inc
lcall
das
icebp
lret
leave
pusha
mov
stc
insb
lods
mov
fsubrl
push
dec
xor
shlb
pop
lahf
rorb
ljmp
enter
call
sbbb
mov
lahf
aaa
inc
leave
sub
pop
jno
test
call
pushf
subw
cmp
sahf
rorb
ljmp
cmc
decl
sub
sub
jmp
cmp
stos
cltd
mov
add
rorb
lea
pushl
sbb
sbb
pop
dec
push
fmull
sbb
push
xchg
pop
mov
xchg
lcall
lock
xor
jmp
inc
leave
ljmp
jg
xchg
mov
lret
sbb
mov
dec
pop
jp
pop
shr
mov
xor
loope
sub
decl
dec
and
test
xchg
xchg
test
mov
fnsave
insl
subb
shl
sub
sbb
pop
pop
jg
push
aam
in
push
scas
aaa
mov
test
jge
mov
test
jg
cmc
jns
ljmp
cwtl
pshufw
flds
repnz
fcmovb
mov
pop
mov
test
inc
mov
bound
or
loope
adc
sbb
xor
pop
loopne
loope
repnz
push
push
sub
scas
cltd
shlb
idivb
ss
aad
mov
and
loope
mov
cmpb
lahf
call
sbb
fstpl
inc
add
lcall
aas
sub
pop
arpl
jmp
sbb
mov
addr16
in
pop
dec
jbe
cmpsb
sub
sahf
aad
call
xchg
mov
pushf
xchg
sub
lcall
mov
leave
loopne
sbb
sbb
imul
xor
push
fsubr
movsb
sub
call
xor
movsb
xchg
or
add
pop
aas
fsts
shrl
jo
pop
pop
std
push
jno
repz
stos
mov
mov
mov
cwtl
and
adc
cmp
cld
lcall
loope
incl
pusha
cmp
cltd
and
mov
int3
ss
push
cltd
or
fwait
mov
scas
push
xchg
popf
cwtl
jmp
outsl
hlt
jnp
clc
mov
lds
mov
xchg
jge
outsb
inc
cmp
dec
push
sbb
cmc
ljmp
push
adc
or
mov
popf
xchg
adc
cmp
iret
push
inc
ret
xchg
mov
mov
cmp
ljmp
lock
inc
shll
out
xchg
push
dec
cld
and
int3
mov
mov
pushl
push
lcall
cmpsl
jle
adcb
lcall
dec
xor
aas
test
mov
mov
xchg
outsl
aam
add
jl
incl
aam
fwait
out
cmp
out
mov
popl
pop
adc
pop
mov
and
adc
add
clc
cmc
in
push
mov
mov
cmp
popa
into
pop
jge
leave
push
jp
pop
cli
addr16
cltd
ljmp
pushf
mov
mov
sbb
xor
ljmp
inc
xchg
add
adc
fistpll
mov
sbbl
or
inc
pushf
and
xor
add
cmpsl
mov
mov
popa
mov
or
mov
xchg
inc
mov
mov
jo
outsl
adc
jb
push
leave
pusha
dec
push
fdivrp
jmp
jmp
lcall
cmp
mov
lds
decl
dec
or
or
mov
ret
lahf
pushf
aas
xor
xchg
sub
ljmp
and
dec
stc
rorb
cmc
cltd
gs
mov
jno
push
jge
inc
or
mov
aam
and
outsl
adc
pop
fidivl
fsubl
fldl
aaa
sub
outsb
orl
pop
sbb
and
jne
dec
inc
addb
hlt
ss
ljmp
or
mov
or
mov
adc
enter
pop
cltd
sub
mov
das
mov
sbb
fwait
mov
in
lcall
cld
push
je
dec
cmp
insb
mov
ret
pop
sub
rcrl
jno
adc
hlt
cmp
mov
decl
ljmp
push
xor
bt
adc
pop
push
xchg
insl
popa
in
movsb
mov
lea
fnstsw
xorl
xchg
push
mov
cltd
adc
push
or
sbb
dec
cmpl
jg
fcompl
in
pushf
pop
cmp
dec
nop
xchg
jne
neg
cmp
dec
fcmovbe
movsl
call
jmp
jae
lret
fcmovnb
pop
inc
mov
stc
inc
cmpsl
xor
cmp
push
mov
pop
cld
inc
test
add
out
cmp
mov
testb
mov
push
adc
jg
ljmp
mov
add
xchg
cli
lea
sub
fdivs
dec
iret
orl
xor
shll
push
fs
jl
xchg
ljmp
stos
popa
xor
aas
mov
sti
subb
scas
dec
int
les
aas
adc
mov
jp
mov
shll
pop
loop
mov
fisubs
popf
es
xchg
test
add
sbb
inc
lods
out
xchg
jmp
inc
xchg
into
dec
fidivs
dec
test
jl
testl
add
pop
leave
cmp
sahf
rcll
and
ret
xchg
into
jmp
wbinvd
sbb
std
fdivl
inc
adc
pop
popa
jl
es
movsl
push
mov
mov
sbb
ljmp
lods
aas
pop
sub
scas
sub
icebp
cmpsb
dec
arpl
pop
jno
incl
fldenv
sbb
jmp
pop
fildll
jbe
fwait
aad
test
xchg
pop
les
cmc
out
loope
mov
xlat
pop
fcompl
pmaxsw
pop
jns
stos
mov
lods
pop
lock
add
mov
jl
pop
bswap
scas
jge
pop
cli
pop
jmp
rcrb
sbb
daa
scas
js
ss
mov
ucomiss
adc
call
mov
test
leave
stos
mov
sbb
subb
out
mov
cli
idiv
dec
inc
pusha
or
dec
mov
popf
cld
sbb
aad
pop
fsubs
adc
mov
sbb
or
pop
sbb
or
ss
inc
pop
fdivrp
mov
inc
jns
sbb
int3
dec
inc
inc
push
xchg
xlat
mov
notl
adc
push
jns
in
or
cs
ljmp
xlat
jge
jmp
in
aaa
cmovl
add
loopne
mov
inc
dec
jge
dec
jmp
in
jg
xor
mov
push
incl
ret
jle
imul
cld
popa
stos
push
scas
outsb
jle
in
and
mov
in
lahf
xchg
sub
sbb
jmp
pop
jge
popf
add
aad
dec
das
mov
dec
call
decl
ja
push
sub
inc
adc
jl
xchg
aas
mov
js
push
les
push
int
mov
leave
ljmp
sub
scas
std
pop
inc
xor
xchg
push
and
mov
mov
push
mov
pop
mov
call
pop
mov
stc
pop
aas
int
in
push
cwtl
xchg
nop
cmpsb
sar
xchg
pushl
pop
xchg
jnp
shll
jne
xchg
cmp
aaa
xchg
pop
ljmp
jge
push
and
ja
or
jae
jmp
shlb
shlb
clc
lcall
addr16
and
mov
and
pop
sub
aas
push
pop
xor
jo
mov
adc
lcall
addr16
stos
imul
rclb
xor
ret
adc
pushl
adc
xor
leave
cwtl
popf
add
pop
sub
sbb
call
inc
or
add
arpl
push
jb
insb
xor
mov
sub
ror
cltd
jecxz
or
dec
xchg
cmpsb
dec
dec
mov
mov
cs
pushf
xor
or
mov
enter
test
ljmp
lock
xor
fucomip
cmpsb
cli
stos
adc
mov
loopne
cld
jnp
stos
inc
xchg
test
loope
stos
pop
popf
fsts
pop
push
inc
push
push
enter
stc
hlt
mov
jae
sbb
or
jp
icebp
lahf
rorl
pop
sti
ljmp
hlt
push
jecxz
pop
outsb
ja
jbe
mov
in
insl
int
icebp
fbstp
inc
or
lds
daa
mov
sub
xchg
push
aam
jnp
mov
pop
sbb
sti
pop
mov
in
outsl
sub
call
mov
cmpsl
arpl
rcl
cmp
pop
sahf
add
cmp
ljmp
ja
push
je
push
pusha
std
and
jp
add
mov
xchg
jge
pop
xor
fisubs
jmp
sbb
sbb
xor
mov
sub
and
push
mov
lcall
xchg
out
or
mov
jbe
push
scas
dec
js
pop
mov
pushl
cmp
and
cs
add
or
jmp
push
jb
mov
or
pop
repz
xor
leave
xor
shll
jmp
adc
bound
mov
and
push
dec
je
adc
lcall
ja
inc
ss
dec
pop
dec
cmp
out
push
mov
and
jne
minps
mov
xor
mov
push
add
xchg
adc
outsl
mov
jno
dec
pushl
lea
repnz
push
mov
ljmp
fidivs
jne
adc
add
sahf
ljmp
je
lret
pushf
cmpsl
xchg
push
inc
jg
mov
and
jmp
mov
sub
js
fcomps
repz
outsb
insb
sub
adc
aad
stos
adc
daa
mov
jp
aaa
mov
mov
mov
push
xor
and
test
mov
icebp
lcall
movsb
inc
lret
das
hlt
decl
inc
aaa
das
xchg
mov
or
and
inc
mov
mov
jg
cltd
addr16
push
mov
rorl
cmp
cmp
inc
pop
and
cld
jmp
out
or
fcmovu
pop
loop
lds
fucomi
push
xor
lods
daa
push
or
mov
add
popa
cmp
pushf
loopne
lods
lods
pop
or
push
inc
pop
xor
ljmp
lea
mov
lea
pop
gs
xchg
outsl
call
dec
ds
jg
aad
movsb
iret
lods
push
add
fsub
fmull
xor
jg
pop
lea
mov
cltd
test
iret
daa
dec
in
in
and
incl
daa
sahf
movsl
mov
xchg
sbb
lcall
insb
aas
or
jge
test
int
sti
or
xchg
dec
mov
incl
int
mulb
push
and
sub
ljmp
sahf
mov
and
out
xor
xchg
mov
mov
in
mov
add
stc
stos
push
aad
push
outsb
dec
into
mov
cwtl
cmp
push
jp
xor
dec
xchg
xchg
clc
ljmp
pushl
push
xor
adc
push
stos
ret
dec
push
push
mov
cmp
cmp
mov
icebp
mov
jp
pushl
inc
sub
addr16
out
ret
mov
sbb
push
jbe
hlt
test
push
add
lcall
jmp
xor
mov
push
cmp
or
xor
repnz
sub
lock
in
pop
adc
das
aaa
out
jle
jne
decl
fnstenv
inc
pop
repnz
lcall
pop
push
cmc
sbb
ficomps
fidivrl
fnsave
push
stc
cmp
das
push
jo
sti
scas
mov
inc
stos
ljmp
shr
jmp
pop
push
xlat
xchg
adc
shl
jle
add
cld
mov
fwait
mov
call
out
pop
adc
cwtl
ds
push
outsb
pushl
push
in
fstpl
fsubrl
mov
pop
insl
xor
and
jmp
decl
aaa
leave
xchg
int
neg
mov
movsb
push
mov
mov
mov
pop
aam
test
push
xor
lret
pop
mov
or
xchg
iret
bswap
add
pushl
push
icebp
or
sti
pop
adc
incb
aaa
lcall
or
roll
mov
movsl
call
test
xlat
add
jg
popf
and
in
dec
mov
jg
pop
push
jg
jmp
mov
dec
mov
addl
out
mov
xor
popf
in
and
clc
das
out
push
popa
lds
insl
clc
test
fldt
dec
dec
cmp
and
call
cmpsb
hlt
cmc
push
notb
add
lret
jo
add
sub
pop
push
pop
cmp
dec
adc
stos
xchg
mov
lods
das
jl
insb
mov
lods
xchg
sbb
sti
dec
fucomip
push
adcb
lahf
pop
idivb
jbe
lcall
jmp
cld
data16
inc
pop
dec
dec
and
repnz
pop
sbb
repz
pushf
lret
inc
mov
jmp
push
cmc
shrb
and
add
cmp
cmc
shlb
push
mov
adc
push
lock
cli
push
pushl
cmp
inc
roll
out
mov
scas
cwtl
into
fsubr
mov
jb
incl
movsl
iret
fadds
inc
aad
bound
dec
lcall
push
mov
lea
out
mov
sbb
roll
jl
in
call
clc
xor
add
sub
in
xor
ljmp
icebp
sub
cmpsl
out
cmp
in
sub
das
stc
adc
mov
mov
in
inc
pop
mov
or
ja
xchg
out
jmp
je
push
leave
mov
pop
mov
imul
mov
jae
lcall
xor
jecxz
repnz
inc
or
mov
or
mov
aad
adc
imull
aam
mov
std
call
cli
fsubrp
push
std
repz
cmpsb
add
mov
mov
dec
std
lcall
lock
ljmp
mov
xor
imul
idiv
jne
lcall
cmp
mov
lock
inc
repz
cli
decl
fldt
jns
aad
addl
test
add
mov
mov
pushl
or
mov
cmp
xor
sub
jns
lods
xor
outsl
cld
mov
sub
ds
jbe
mov
sub
mov
das
gs
mov
pusha
mov
pop
lea
fs
dec
cld
mov
jecxz
in
push
dec
repnz
popf
mov
cmc
inc
mov
jg
jg
or
mov
mov
adc
sub
and
jbe
lock
mov
inc
push
xchg
fcmovnbe
insw
mov
ret
xor
sbb
ret
call
push
dec
rcrb
test
mov
pop
out
mov
inc
cmpsl
sbb
sbb
jns
cmpb
rorl
push
sub
aaa
pop
pop
sub
bound
sub
mov
mov
in
mov
nop
shrl
dec
jnp
jg
jns
les
pop
clc
movsl
jmp
call
repnz
repz
jnp
sub
dec
jb
lock
incl
jnp
in
mov
stc
cmp
aam
inc
repnz
fildll
rorb
cli
jns
jg
jecxz
pop
or
mov
push
xor
dec
add
mov
jecxz
gs
mov
stos
pop
mov
mov
xchg
test
jmp
test
out
call
push
sahf
pop
cmpsl
lcall
add
movsl
and
ret
pop
insb
push
orb
out
push
shrl
aaa
sub
mov
adc
jnp
fsts
in
sub
cmp
inc
popl
movsl
or
pop
ja
cmp
mov
xchg
inc
imul
mov
sub
push
mul
negb
ja
pop
sbb
jecxz
push
push
fnstenv
outsl
icebp
or
fnstenv
jbe
lods
ja
jg
sahf
xchg
rcrl
mov
scas
mov
and
dec
test
pop
inc
cli
mov
and
or
sub
mov
cmp
cs
out
pushl
mov
jne
adc
push
pop
mull
push
lret
test
jecxz
pop
aas
ja
mov
jg
pop
enter
sbb
mov
stos
jmp
js
pushl
pushl
and
cltd
mov
jbe
dec
and
xchg
ds
jg
pushl
in
mov
out
xchg
jns
dec
shl
ret
fwait
loope
mov
incl
and
lds
mov
or
inc
jle
xchg
xor
mov
ja
add
out
insb
in
fcmovb
inc
mov
test
pushl
inc
xor
xor
lret
adc
addb
push
test
pusha
fcmovne
push
psraw
inc
popf
pop
xor
pushl
incl
mov
push
test
inc
xor
push
xor
fstpl
cs
xor
inc
fildl
dec
fnsave
sbb
testb
test
push
in
in
pusha
js
int3
aad
cmc
call
adc
mov
out
sbb
ljmp
out
push
xchg
mov
leave
add
push
inc
dec
popf
push
cmp
imul
test
push
daa
jbe
incl
test
push
xchg
out
mov
shlb
cltd
loope,pn
xor
das
hlt
lea
push
cmp
popf
push
mov
loopne
hlt
call
rcrb
sub
movsl
xor
and
jnp
call
sti
mov
push
lcall
and
dec
mov
jbe
stc
test
lret
ljmp
lret
outsb
test
jo
lret
xchg
inc
push
mov
out
leave
push
sbb
js
call
mov
adc
outsb
mov
inc
ss
out
lahf
add
mov
mov
sub
mov
mov
jmp
dec
pop
es
imul
mov
test
incl
jnp
sti
adc
pop
and
pop
mov
jb
in
inc
aam
leave
jg
jg
scas
hlt
nop
sti
jnp
movl
loope
adc
stc
and
mov
outsb
or
std
or
fs
pop
lcall
lahf
cmp
lds
pop
jbe
gs
jae
mov
or
insl
inc
outsb
pop
clc
sub
pop
lods
stos
fidivl
loopne
mov
pop
or
push
jbe
nop
cmc
cmp
sar
dec
cmp
push
test
insb
pop
push
pop
lret
cmpl
in
jno
fsts
mov
pop
inc
dec
aad
test
idivl
jle
fisttps
pop
std
push
lcall
loop
cmc
outsb
sti
and
inc
jl
in
sub
inc
cmpsb
push
mov
fwait
js
sahf
dec
aas
xchg
lahf
cmc
adc
mov
dec
lds
sub
stos
or
int
push
cwtl
pusha
fcoms
arpl
jno
mov
sub
gs
aam
sti
sbb
xchg
mov
shlb
mov
out
inc
dec
push
jnp
cmpsb
push
sbb
xchg
jecxz
cmpsb
push
jb
iret
or
repz
ret
push
int3
add
and
push
xor
jl
mov
and
and
outsb
imul
sbb
repnz
imul
sbb
add
repnz
mov
loope
inc
or
mov
add
mov
dec
add
decl
ja
gs
jno
fbstp
push
sbb
scas
sub
es
xlat
or
cmp
incl
cld
mov
jecxz
add
ss
push
jl
dec
xor
pushl
lahf
xor
rol
repnz
fs
mov
and
mov
cmc
inc
gs
and
fs
pop
mov
stc
adc
xchg
cmp
sahf
sbb
in
lods
push
pop
pop
or
cld
aas
shl
or
call
inc
out
adc
int
sbb
push
mov
dec
mov
outsl
fstpt
sbb
sbb
pushl
fs
sub
inc
aam
imul
ret
call
fbld
dec
xlat
je
aaa
loopne
int3
shlb
mov
lods
scas
stos
lcall
jg
pushf
adc
xchg
lahf
and
ja
push
inc
mov
mov
adc
loop
ret
bound
cmp
push
shrb
loop
mov
ljmp
lret
mov
icebp
add
arpl
dec
div
xchg
adc
cmpsb
pusha
fistps
and
mov
sbb
lods
push
and
jne
or
test
lods
pop
xchg
cltd
add
call
outsl
add
das
dec
into
addl
sub
cmp
sti
cmp
and
incl
cld
mov
cmc
fldl
push
xor
lock
jecxz
push
xor
xor
out
mov
jno
or
and
inc
mov
inc
sub
mov
mov
leave
pop
or
sub
call
adc
jle
gs
stc
cmp
loop
fstl
shrb
pop
call
dec
inc
inc
ret
iret
bound
push
sub
or
inc
lcall
jle
cmp
cmpsl
cmp
loope
mov
loope
adc
cld
pushl
hlt
jge
sti
mov
or
pop
lock
out
mov
es
adc
and
std
lcall
fbld
mov
add
cmp
out
pop
pop
ljmp
imul
mov
inc
mov
xacquire
xchg
inc
mov
incl
mov
int3
test
xchg
xchg
mov
js
sarb
mov
insl
ss
fs
adc
aaa
pop
fwait
xlat
add
xchg
js
dec
pop
hlt
incl
jmp
xchg
cmp
mov
jo
cli
jae
xchg
loop
cmc
dec
sbb
inc
daa
cmp
and
imul
add
nop
adc
ljmp
mov
ds
ret
addl
pusha
push
mov
xchg
fwait
mov
daa
or
push
xchg
adcb
push
stos
mov
mov
jle
jmp
movl
jbe
mov
mov
jnp
sbb
add
or
cmpsb
xchg
adc
ljmp
mov
out
push
imulb
jno
rorb
inc
mov
fwait
pop
pop
pushf
jecxz
pop
mov
jo
popf
pop
out
sub
clc
push
stos
in
mov
xchg
xchg
out
mov
decl
lock
movsb
out
loop
das
push
sarb
cmpsl
pushl
incl
inc
shll
daa
push
lods
lret
xchg
mov
fmull
xchg
cs
xchg
sub
push
pushl
sahf
das
cwtl
jmp
mov
imul
jne
jg
lcall
jne
aas
adc
test
shll
add
ljmp
mov
pop
lea
ljmp
sar
mov
test
ljmp
test
hlt
push
lcall
xchg
mov
rdpmc
sub
sbb
mov
or
ljmp
ret
push
lods
mov
pop
sbbl
jp
pusha
sbb
into
or
cmp
idiv
fucomip
mov
and
push
sbb
clc
jmp
lcall
decl
sub
pop
mov
jl
outsb
mov
aad
pop
rcrl
jg
out
cltd
cmp
iret
adc
movsb
jg
push
test
test
lcall
add
jns
mov
cmp
les
mov
push
and
test
lcall
mov
loop
nop
mov
cmp
push
cmc
ljmp
aas
addr16
inc
lods
push
cli
hlt
unpckhps
inc
dec
decl
rcrl
lock
movsb
pop
add
sbb
fcmovnu
jns
mov
adc
and
nop
add
or
jg
test
jmp
daa
dec
pop
mov
faddl
sbb
push
test
adc
daa
mov
mov
dec
shl
roll
mov
cmc
clc
enter
sub
sub
jl,pt
cmpsb
int3
clc
push
outsl
out
insl
xchg
mov
outsl
cld
aaa
xor
push
pop
lcall
xchg
loop
sub
adc
fidivrl
ljmp
fxam
pop
cwtl
xor
mov
movsl
mov
pop
add
push
dec
push
pop
cld
addr16
std
mov
nop
pop
nop
xlat
pop
and
mov
sar
jns
adc
mov
imul
decl
mov
das
jg
cmp
mov
mov
or
mov
outsb
mov
xchg
ret
lret
sub
ds
addl
push
mov
cmp
jns
inc
fiadds
mov
lock
jne
sbb
sbb
lcall
out
or
pop
pop
lock
mov
sub
imul
roll
adcl
pushf
pop
pushl
jle
and
mov
jns
cltd
sahf
out
es
stos
xchg
rcrl
call
jne
stos
jmp
iret
por
sub
cmpsb
and
adc
or
cmpsl
test
add
stos
push
lods
int
fst
shll
incl
jmp
add
stc
xchg
jmp
cmp
lcall
cmovp
cli
fsubs
cld
arpl
loope
xor
mov
xchg
clc
inc
xor
sub
shll
lcall
sub
aad
rcrb
testb
push
outsl
jl
mov
push
add
ljmp
push
outsb
xchg
cmp
pop
push
shl
fldl
bound
push
mov
idiv
mov
or
aad
jle
pop
ffreep
cmp
xor
out
arpl
test
mov
sarl
mov
dec
mov
shll
sbb
jae
clc
call
dec
jle
mov
mov
sub
aas
out
in
adc
fistpll
cmp
inc
dec
inc
push
mov
gs
sti
dec
addr16
sbb
mov
imul
hlt
xor
jmp
cwtl
bound
add
lcall
fnop
in
decl
cld
outsl
out
fs
bound
pop
out
pop
mul
jmp
call
cmp
cmp
cmp
ja
aas
testb
outsb
adc
stos
dec
nop
ja
add
std
outsl
fisttps
jo
inc
enter
test
fldl
fsubrp
fsubp
mov
or
mov
push
fnsave
xor
jecxz
ljmp
or
or
add
mov
cmpsl
call
inc
dec
decl
push
cmp
lret
sarb
test
in
shll
mov
call
jb
outsb
pop
sub
std
movsl
mov
pop
push
adc
push
push
div
pminsw
pushl
mov
out
adc
mov
sub
push
jecxz
imul
fsubrl
test
lcall
push
inc
aam
mov
mov
cmp
or
lcall
repz
dec
ljmp
fldt
ror
adc
sti
decl
push
cmc
fcomip
mov
mov
out
adc
gs
mov
sti
jmp
push
dec
cmpsl
sub
sarl
popa
aam
mov
adc
incl
push
xor
adc
sbb
cltd
mov
addl
int3
ljmp
loope
movsb
and
dec
xor
jecxz
xchg
bound
xlat
cltd
jo
xchg
jo
ret
jecxz
call
js
and
movsl
adc
ljmp
data16
push
cmp
ljmp
xor
outsl
inc
in
inc
and
stc
inc
and
sbb
outsl
and
dec
inc
cs
pop
cld
pop
mov
xor
out
xchg
pushf
jo
arpl
sbb
pushl
push
out
ss
dec
fdivl
lahf
test
dec
imul
cmp
clts
pusha
addr16
cmpsl
pop
cmp
dec
adc
testb
mov
mov
push
shll
mov
sub
jnp
sub
aam
sub
cli
js
add
xor
cli
lock
inc
xchg
cwtl
xchg
ljmp
std
fdivrs
add
adc
imul
jb
cmp
decl
outsb
pop
add
jbe
sub
dec
nop/reserved
or
test
ds
add
popa
loopne
mov
push
ds
popa
rcrl
popf
outsb
pushf
das
in
lcall
aas
filds
mov
adc
jnp
sub
in
push
adc
sbb
add
push
pushl
push
or
jl
idivl
inc
cmp
out
dec
xchg
mov
add
or
sbbb
lds
shll
add
insb
in
mov
xchg
sub
aaa
std
pop
decl
incl
dec
hlt
sbb
jb
lock
add
dec
aas
jmp
lods
jb
cmc
sbb
lcall
lret
adc
nop
imul
mov
stos
repnz
loopne
add
out
mov
popf
lret
jo
stc
inc
je
fnstsw
pop
ljmp
les
bound
imul
xchg
cmp
mov
ficompl
inc
ljmp
or
outsl
int
into
or
push
ljmpw
decl
fisubrl
and
bound
loop
xchg
clc
jb
int3
gs
es
jae
inc
xchg
pop
jp
sti
xchg
clc
pop
and
jae
ret
ss
xchg
mov
bound
mov
push
xchg
mov
lds
ret
xor
mov
lcall
lret
xchg
and
decl
pusha
dec
mov
mov
fwait
and
push
addb
std
sbb
jmp
push
jmp
fidivrl
dec
jecxz
push
stos
popf
jge
jno
mov
hlt
cmp
jo
mov
mov
nop
lcall
mov
fucomi
cmp
pop
sub
cmpsb
inc
and
data16
icebp
mov
cli
addb
dec
fnstcw
out
and
fldcw
decl
mov
sti
in
idivl
shrl
fisttpll
rcrl
incl
sbb
lea
fmuls
pop
and
inc
mov
ljmp
mov
xchg
push
repnz
popa
adc
jmp
adc
in
mov
fnstsw
add
outsb
mov
jp
sbb
pushl
rcll
pop
sub
xor
cld
push
mov
negl
cld
pushl
insl
stc
dec
xor
or
push
xor
mov
jle
pop
cmc
ljmp
lock
sbb
inc
mov
movsl
mov
cmp
lcall
insl
sti
call
push
mov
arpl
push
clc
mov
adc
mov
dec
pop
mov
loopne
jnp
fcoml
fsubr
lcall
xor
aam
dec
pop
insb
outsb
mov
and
shlb
fwait
push
or
xor
xchg
scas
call
mov
mov
mov
in
xor
test
sub
ljmp
push
outsb
je
arpl
cmp
or
cs
cmp
nop
and
dec
jge
pop
adc
mov
sbb
jg
mov
jne
and
iret
cmc
loope
sahf
push
xchg
xor
decl
fadd
jmp
xchg
loopne
dec
gs
pop
adc
push
jmp
push
pushl
mov
lds
mov
mov
aas
mov
movsl
mov
call
jmp
andb
or
dec
cli
loopw
mov
and
imul
int
imul
aam
fisubl
mov
jmp
xchg
inc
std
out
popf
dec
mov
imul
dec
pop
stos
adc
cmp
decl
xor
out
movsb
xor
sub
ss
xchg
pop
incl
pop
inc
mov
sbb
jne
lock
pop
rcll
and
lret
pop
mov
add
loop
decl
mov
jno
out
or
addb
cli
inc
iret
outsl
hlt
decl
lret
pop
cmpb
pushf
fcmovnb
add
mov
mov
mov
clc
lods
nop
sub
lods
cmp
push
aam
mov
repz
jbe
jnp
mov
mov
sbb
pop
clc
mov
mov
test
dec
adc
pop
pop
add
cli
decl
and
test
in
lret
rol
ljmp
std
add
call
inc
pushf
jl
loop
rcrl
mov
aam
jge
jae
ficomps
mov
in
push
sti
sbb
or
ljmp
pop
in
pusha
and
push
bound
imul
or
xor
adc
popf
add
sub
out
pushf
rcl
cmc
mov
and
pop
sahf
loopne
fdivrl
ljmp
into
je
aad
insb
xchg
and
mov
xor
mov
xchg
and
cmp
mov
nop
movsb
inc
fidivl
or
mov
decl
insb
mov
mov
jmp
mov
js
inc
arpl
mov
xchg
mov
data16
xchg
neg
lret
je
xor
add
mov
cld
cwtl
sub
pop
jg
addb
movsl
sahf
inc
or
pop
int3
ja
sti
xor
sti
call
addr16
fstl
nop
rcrb
add
lret
lds
and
mov
cltd
and
call
xchg
jno
roll
jle
xor
xchg
dec
and
sub
and
ret
int
out
dec
mov
sbb
jb
incl
pop
ret
mov
and
mov
ss
insl
out
pop
movsb
shlb
sbb
inc
aas
inc
push
pop
or
jno
psubw
and
aaa
orb
inc
lods
aad
insb
mov
popa
mov
sbb
push
xor
dec
push
gs
hlt
pop
clc
decl
popf
sub
scas
xcrypt-cbc
cmpsl
adc
in
ds
scas
xchg
loope
test
mov
in
fldcw
call
push
xor
jnp
push
cltd
push
sbb
pushl
mov
push
mov
arpl
xchg
decb
gs
push
xchg
push
mov
dec
lds
lea
stos
mov
mov
subb
inc
and
jecxz
add
test
sbb
inc
or
decl
xchg
sbb
sar
inc
or
push
in
pop
sarb
std
cld
stc
dec
pushf
pop
test
rorl
pusha
xchg
or
das
pop
cmp
mov
push
ss
add
jmp
and
push
dec
ficoms
ss
mov
jbe
xchg
adc
xor
clc
xor
push
sub
fistpl
std
outsb
mov
rorl
sub
or
movsb
pop
cli
call
mov
cmpsl
pop
xchg
sbb
int3
sub
shlb
rcll
inc
ret
in
jl
lcall
and
jns
stos
dec
push
imulb
cmpsl
sahf
js
cli
push
cmp
jb
push
sbb
jge
adc
or
sarl
mov
adc
mov
adc
cs
inc
mov
outsb
rcrl
and
ljmp
dec
pop
mov
jg
mov
cmp
pop
idivb
sbb
jg
test
mov
mov
push
jecxz
inc
lcall
sub
cs
cmp
sar
xor
imul
lcall
lahf
xchg
ret
subb
aad
mov
dec
dec
ds
in
add
loopne
jb
push
cmp
sbb
push
shl
push
and
inc
aam
scas
push
mov
inc
cld
in
pop
add
ds
and
fmul
out
jns
mov
lods
fdivrp
aaa
cli
cld
push
insb
push
and
cmp
add
push
pop
cmp
cmp
cwtl
outsl
jp
orl
xor
mov
push
and
xchg
enter
jg
repnz
xor
cltd
jge
pop
fdivrs
outsl
movsb
push
cmc
pop
nop
test
sub
stos
enter
mov
sbb
mov
hlt
cmp
lea
les
loope
mov
push
xorl
pop
clc
xor
xor
cmp
enter
jbe
push
sbb
cli
mov
cmp
dec
push
iret
mov
shl
jo
enter
insb
scas
in
xor
js
js
stos
xchg
rol
arpl
adc
mov
pop
push
pusha
jbe
cld
aam
xchg
or
mov
mov
and
mov
xor
add
incl
fdivrl
int3
stos
add
lods
repz
in
or
aam
int3
data16
dec
cwtl
out
dec
leave
in
decl
mov
sbb
cmp
mov
lock
aaa
or
dec
call
in
into
shl
cmp
mov
mov
cmp
movsl
fwait
inc
ja
lods
mov
pop
insb
ljmp
push
jmp
cmp
aad
mov
lods
pop
out
sbb
out
insb
mov
stos
jb
subb
in
stc
shrl
insl
cmp
adc
rcrl
imul
push
aaa
imul
jnp
mov
or
fldcw
mov
cmp
repnz
call
xor
xor
outsb
ljmp
jbe
daa
pop
das
in
cmp
mov
scas
cmp
lcall
and
outsl
in
or
pop
add
negl
jbe
aaa
jae
stc
jle
loopne
rorl
sbb
jmp
mov
fwait
movsb
cmpsb
pop
xchg
daa
cmp
outsb
stos
mov
aam
adc
clc
lcall
mov
push
out
push
addr16
mov
xor
mov
lahf
and
jmp
sub
add
push
pop
clc
mov
or
cmp
sbb
repz
ljmp
ljmp
aam
fdiv
fs
or
out
rclb
ret
mov
call
mov
mov
push
add
call
scas
inc
ljmp
lock
mov
test
push
adc
inc
rcrb
adcl
mov
inc
daa
adc
pop
mov
aam
sti
in
cwtl
js
pop
test
icebp
dec
out
mov
jmp
scas
es
hlt
add
outsb
xchg
cs
pop
cmp
rcrl
adc
cld
call
fstpt
jecxz
mov
xchg
or
jnp
rorb
jb
outsl
xchg
jno
decl
faddl
adc
negl
sahf
mov
cmp
mov
mov
fsubrs
adc
and
lock
sti
mov
fidivrs
sbb
orl
scas
jo
adcl
sbb
dec
hlt
push
xor
scas
sbb
cwtl
lret
fwait
test
outsl
mov
or
inc
nop
fistpl
lods
and
lahf
adc
sbb
lcall
outsl
fidivs
dec
repz
aaa
ljmp
outsl
xor
mov
mov
mov
out
pop
fildll
out
shlb
push
sbb
rclb
dec
aam
andb
xchg
lea
pop
push
incl
cmp
or
outsb
pop
jl
pop
test
xlat
pop
push
daa
test
leave
cmpsl
jp
jg
aas
std
lods
cmpsl
jbe
shlb
xor
push
iret
lret
sar
push
call
ljmp
std
adc
stc
lahf
shrl
jmp
es
lcall
mov
stos
mov
cmpsb
sub
dec
push
jl
cs
ljmp
fld
jmp
pop
or
pop
add
aas
mov
jle
dec
jns
out
outsb
adc
dec
and
mov
hlt
sub
mov
sar
clc
dec
jbe
idivl
imul
push
inc
call
jae
pop
adc
xchg
pop
push
outsb
mov
xchg
inc
stc
push
icebp
ljmp
and
ljmp
hlt
fists
sub
sub
dec
pushw
sbb
loopne
adc
into
lahf
sbb
pushf
lods
in
ss
sbb
jg
decl
das
jbe
jmp
mov
sbb
adc
es
pop
loop
cmp
pop
rol
test
push
int3
push
insl
inc
mov
std
pop
pop
add
pop
jmp
sub
xchg
arpl
fdivr
jmp
subl
xorl
push
cmp
mov
jno
imul
or
push
push
insb
or
loop
out
call
lcall
mov
mov
lret
xor
jl
sub
mov
outsl
popf
stc
inc
or
cmp
dec
fwait
sub
test
adc
in
mov
add
dec
xor
cmc
decl
mov
dec
stos
popf
or
lock
je
inc
in
or
or
outsl
pop
push
fs
sub
out
cli
sahf
repz
cwtl
stc
xchg
pop
pop
ljmp
cltd
sbb
pop
imul
dec
pushf
mov
lahf
fs
lock
fcoms
mov
and
aad
mov
add
xor
test
xchg
int
enter
mov
loope
dec
lea
mov
jmp
loop
and
and
dec
xchg
push
xor
fiaddl
or
pop
cli
jmp
shlb
cltd
sbb
in
jmp
and
addl
push
jg
sub
pop
sub
test
lahf
aas
push
repnz
fistps
pop
imul
mov
sub
cmc
into
subb
je
pop
incl
std
mov
push
lcall
dec
sub
imul
mov
mov
pushl
jecxz
inc
cmc
sarl
mov
pop
inc
mov
orb
jmp
mov
lret
pop
jne
jl
mov
mov
out
jecxz
lcall
je
inc
sub
repnz
out
out
shrl
xchg
mov
jg
ss
enter
gs
cmp
and
or
lds
jo
call
mov
jmp
xor
lock
icebp
inc
xchg
sbb
xor
out
clc
pop
add
iret
cmp
cli
decl
dec
sub
fidivs
xor
pop
imul
shlb
push
mov
pushl
pushf
add
sub
push
iret
dec
movsb
mov
lcall
lcall
or
xchg
aaa
jnp
nop
ss
mov
aas
test
loope
pop
mov
mov
sbb
add
pop
stc
out
cmpsb
cli
sarb
xchg
js
in
and
mov
pop
fidivrs
dec
imul
pop
loopne
cli
lcall
std
push
loopne
sbb
cmp
test
sbb
sbb
call
rcrb
out
push
add
enter
add
scas
dec
into
hlt
inc
in
ret
sub
and
mov
lret
and
dec
xchg
cmp
cli
jg
add
pop
stos
dec
in
jnp
sbb
xchg
icebp
shlb
fildl
int3
test
pop
adc
add
mov
mov
pop
push
add
inc
faddp
and
mov
adc
lcall
jnp
rorb
add
outsl
hlt
mov
push
push
cmp
adc
jp
push
loopne
and
cli
jmp
hlt
movb
fmull
loopne
out
push
mov
mov
incl
in
xchg
in
xor
es
popa
hlt
incl
push
sbb
pop
je
xor
iret
xchg
addb
push
fisubs
fildll
push
push
std
enter
adc
fldcw
push
call
callw
mov
dec
pusha
loop
xchg
outsb
xor
cmp
pop
clc
call
enter
add
ret
push
lods
aas
daa
mov
pop
cmp
pushf
push
loope
mov
pop
sbb
mov
adc
jg
aam
push
call
push
jo
pushl
in
mov
clc
jno
fsubs
into
sbbb
stos
stc
lods
jae
aad
and
outsl
hlt
or
and
and
and
sti
jo
mov
mov
lcall
cltd
cmpl
lahf
out
jb,pn
push
mov
inc
mov
fnstsw
jmp
dec
cmpsb
pop
shlb
mov
std
adc
jo
arpl
rol
test
mov
xor
mov
or
adc
das
mov
jmp
in
imul
sbb
mov
aam
push
xchg
lcall
adc
popa
mov
andb
lods
lahf
insl
in
call
incl
cmp
fisubl
dec
fisttpll
inc
and
pusha
insb
pop
mov
xchg
pop
aam
adc
and
mov
mul
repnz
aaa
adc
mov
pop
cmp
push
or
sub
mov
sbb
in
pop
outsb
movl
cld
mov
stc
xor
add
sbb
ljmp
adc
inc
outsl
aas
sbb
jbe
sbb
sbb
fldl
test
add
mov
xor
pop
jae
or
fdiv
scas
nop
call
add
inc
or
or
mov
mov
fneni(8087
lret
loop
jg
pop
aad
popf
push
mov
icebp
jecxz
out
mov
out
notl
mov
test
ret
push
clc
leave
data16
adc
or
pop
mov
pop
dec
lea
out
in
stos
movsb
adc
int
pushl
mov
cwtl
into
adc
js
fwait
out
and
psubsw
adc
pop
in
fwait
cmp
fst
sub
xor
decl
call
cmp
stc
adc
mov
xorb
push
jle
repnz
sub
inc
jg
pop
loop
sub
fists
popa
mov
sbb
xchg
ret
mov
scas
daa
imul
sub
push
dec
scas
pop
xchg
loop
inc
push
xor
mov
jmp
out
sbbb
das
xor
push
pop
nop
xchg
and
mov
push
les
inc
lds
sub
call
aad
loop
lea
cli
shl
ret
xchg
sbb
les
pop
mov
pushf
adc
test
jp
addr16
mov
addr16
sar
das
mov
subb
mov
push
mov
jg
mov
movsb
out
inc
movsl
xchg
mov
fs
addl
ljmp
or
pop
iret
sub
xchg
dec
jl
or
in
or
mov
sbb
pop
fucomp
xchg
out
adc
dec
push
jmp
jo
push
lcall
das
cli
repz
or
test
out
arpl
add
scas
push
mov
addl
inc
cltd
dec
fs
pop
xor
in
and
jmp
sub
mov
adc
or
andb
popa
cltd
loopne
jge
dec
stc
adcb
jp
cld
jno
mov
decl
mov
adc
dec
cmpsb
pop
xchg
xchg
fisttpll
ljmp
hlt
add
sbb
lds
mov
enter
pushl
and
mov
stos
rcll
push
test
ljmp
sbb
mov
lods
cwtl
jg
daa
outsb
adc
add
mov
dec
cmp
sbb
pop
cmp
inc
das
stos
pop
push
pop
cmp
mov
add
fs
iret
mov
flds
lods
and
sbb
ret
add
adc
sub
add
rorl
sbb
push
cmc
or
jns
xchg
adc
mov
sub
aaa
pand
mov
mov
sub
fwait
push
lock
jg
mov
push
mull
rorl
leave
jno
fcomi
sub
lret
hlt
mov
mov
dec
xchg
mull
jmp
dec
push
jg
mov
outsb
and
mov
inc
test
inc
outsb
outsb
movsl
leave
cmp
push
aaa
inc
xchg
lcall
mov
xchg
inc
arpl
out
xchg
aad
aas
outsb
sbb
stos
mov
mov
mov
mov
outsb
push
mov
mov
inc
jle
adc
xchg
mov
mov
dec
in
mov
movd
nop
inc
out
incl
xor
rol
jl
es
pushf
lea
icebp
xor
pop
sar
decl
shrl
push
push
mov
sbb
mov
das
cld
jg
push
mov
cmpsb
loop
or
testb
call
cs
out
aam
addr16
shrl
cmpsl
daa
mov
jnp
ss
das
scas
aad
adc
decl
cmpsb
mov
cwtl
jp
xchg
dec
sbb
sub
dec
std
jp
in
daa
int3
lcall
lret
pop
mov
pop
cmp
mov
or
loop
push
pop
mov
xchg
xchg
hlt
icebp
push
sub
rolb
dec
imul
lcall
push
inc
dec
sub
std
in
cmp
jge
clc
mov
icebp
xchg
pop
ljmp
adcb
icebp
daa
scas
test
sbb
ss
scas
daa
and
push
xor
lods
js
out
out
pop
lods
sub
jne
adc
sub
mov
xchg
dec
imulb
jmp
mov
adc
out
leave
cld
loope
mov
sbb
repz
outsb
imul
shrb
adc
mov
mov
inc
pop
leave
test
pop
scas
xchg
pop
xchg
xchg
add
scas
dec
mov
shrb
jmp
mov
popf
and
and
mov
xchg
pop
fdiv
lcall
jne
xchg
sbb
and
mov
ss
insb
xchg
cmp
dec
pushl
or
shll
cld
arpl
pop
pop
clc
inc
incl
filds
mov
cmp
xchg
mov
dec
and
fwait
int
cmp
xor
call
in
fisttpl
adcb
enter
cmpsl
scas
aas
cmpsl
repz
pop
clc
ret
xor
xor
insb
and
fsts
sbbb
add
test
roll
pop
inc
shrb
insl
mov
repnz
mov
call
or
rol
icebp
pop
push
std
rolb
adc
dec
movsb
cmp
call
jmp
aas
aad
int3
push
ja
inc
mov
fisubrl
andl
push
jae
out
lcall
pop
adc
push
dec
ja
mov
fstl
icebp
adc
fdivr
das
hlt
incl
idivb
push
jb
inc
push
and
add
sbb
xchg
decl
pop
sbb
pushf
aaa
pop
cmp
sub
shll
mov
sub
decl
sti
dec
lods
and
out
add
mov
inc
repnz
push
inc
cmpb
xchg
mov
lods
mov
cwtl
adc
shrl
mov
jo
mov
inc
or
pop
mov
pop
sbb
jl
push
mov
clc
sbb
out
sar
pushl
jno
mov
mov
out
rolb
jmp
stos
mov
push
and
cltd
jns
mov
incl
dec
outsb
add
jbe
icebp
cmp
popa
int3
je
aad
jne
push
cmc
cli
insb
pop
clc
pushl
mov
xchg
inc
or
add
dec
push
push
jne
scas
dec
pop
jo
sub
adc
sub
adc
mov
fcmovbe
jecxz
mov
xchg
cmp
jg
mov
push
fldcw
or
mov
dec
sub
lcall
lcall
inc
mov
push
cs
sub
cmc
or
ret
call
dec
cs
imul
dec
scas
mov
pop
loope
sbb
mov
jg
cmp
jmp
inc
xchg
push
addr16
adc
jno
ljmp
orb
repz
int
cmp
inc
ljmp
icebp
inc
xchg
mov
jp
scas
rcrl
jl
jns
cmp
popf
add
enter
icebp
test
pop
mov
mov
and
push
ret
cs
lods
inc
adc
inc
scas
in
aaa
ja
xlat
mov
and
loope
out
mov
and
cmp
sub
pop
or
inc
mov
hlt
fnstsw
rclb
xlat
inc
roll
jo
fyl2xp1
xor
sbb
cld
call
sub
cmp
mov
lods
out
rorl
decl
aaa
fistps
mov
jno
or
fistpl
add
push
inc
addr16
std
mov
jg
ljmp
icebp
sub
lock
imul
xchg
daa
insb
mov
es
fildll
cld
dec
add
sbb
jne
jae
lcall
repz
fucomip
lcall
push
jo
imul
js
ret
repz
outsl
inc
mov
negb
dec
nop
push
cmp
push
loopne
cmp
rcrb
and
fisubrs
lods
dec
cmp
ss
xor
mov
jne
sahf
dec
cmc
push
incl
lret
hlt
pop
lret
movq
pop
mov
cmpsl
mov
pop
jno
xchg
dec
push
xchg
sti
daa
cli
mov
imul
test
inc
dec
test
call
inc
add
sti
xor
jmp
scas
mov
sub
lock
loopne
add
fisttpll
and
pop
clc
pop
outsb
test
ds
fs
setb
sbb
clc
jg
call
dec
aas
pop
mov
xor
jae
and
call
lret
nop
and
or
push
cltd
rcll
data16
jne
jne
inc
inc
xchg
ret
sbb
xchg
in
and
sbb
push
shl
mov
lret
jl
out
mov
incl
jae
and
cmp
clc
or
and
ljmp
lock
or
stos
in
fistpll
and
xchg
dec
ret
lods
inc
mov
xor
mov
push
mov
dec
test
pop
mov
in
pop
incl
xlat
xchg
jge
push
cmpl
cld
jge
outsl
int
lods
dec
std
outsl
lock
cld
mov
fsubrl
scas
mov
cs
cltd
jg
adc
add
sbb
xor
pop
ljmp
pop
shl
inc
insl
mov
mov
sub
out
sbb
movsb
mov
fidivs
imul
xor
hlt
ja
push
popf
cltd
push
jo
in
xchg
fsubrs
xchg
pop
aas
inc
lcall
bound
leave
pop
sbb
pop
fwait
sbb
arpl
andl
lret
mov
les
jmp
dec
imul
jnp
pop
push
add
lret
outsl
daa
cwtl
cld
adc
jmp
aas
mov
or
mov
xchg
sbb
inc
gs
notl
mov
xor
push
adc
pop
mov
mov
jnp
stos
or
push
cltd
fsubr
aaa
add
incl
add
shl
lret
daa
or
fxam
mov
loop
leave
inc
ljmp
icebp
mov
stos
outsb
push
jl
mov
ret
rol
repnz
xor
incl
jbe
dec
into
add
je
ljmp
stos
sarb
mov
push
lea
orb
outsl
adc
movsb
pop
mov
insl
xor
jecxz
lcall
push
or
sbbb
and
aas
adc
enter
shlb
notrack
mov
mov
sub
mov
jl
and
jns
inc
xor
ljmp
add
lahf
sahf
scas
pop
xlat
stos
push
cld
sahf
call
fsts
mov
lods
lcall
std
dec
int
addr16
fs
into
shlb
scas
sbb
sarb
jg
inc
roll
sti
lret
pushf
mov
in
xor
jae
sbb
subl
mov
mov
aad
call
addl
out
and
fldt
mov
mov
and
and
mov
mov
add
adcl
sahf
lret
xchg
ja
clc
ljmp
mov
enter
fsubr
push
out
and
out
aas
xor
pop
add
xchg
or
pop
shrl
jmp
push
ljmp
hlt
imul
and
ljmp
mov
dec
jmp
add
cld
mov
leave
sub
inc
sbb
inc
mov
cmp
insb
add
negb
cmp
mov
and
aad
jmp
fldenv
test
mov
scas
xchg
push
xor
out
xchg
cmc
rcrl
and
data16
push
sbb
sub
jmp
cmp
sub
orl
push
mov
incl
mov
inc
fidivs
adc
pop
ljmp
repz
jg
lcall
gs
push
loopne
jmp
lds
xor
aaa
enter
push
loop
incl
subb
xchg
lods
cmpsl
inc
imul
lcall
les
mov
sbbl
call
dec
pop
lcall
loop
in
dec
push
push
into
test
sub
loopne
fnstsw
sub
jae
adcb
fstpl
ja
and
call
loop
ret
data16
std
das
mov
incl
sahf
ja
rcrb
mov
sbb
aam
cmp
fisttpl
jnp
iret
inc
imul
fdivrl
les
mov
lcall
cwtl
popa
or
dec
sub
xor
test
mov
iret
xor
filds
nop
rorw
fs
pushl
sub
xchg
imul
shll
mov
jmp
pop
insb
sub
xchg
shl
dec
cli
int
rorl
pusha
and
mov
pushf
adc
ljmp
test
pop
jno
xchg
pop
arpl
cmp
outsb
sahf
repnz
sbb
jns
jne
lock
adc
or
cmp
mov
jns
repz
push
mov
ret
scas
ss
jle
jb
xor
shll
mov
icebp
xchg
popf
dec
pop
xlat
jae
jns
ret
jnp
pop
ljmp
jg
jg
push
or
lret
pop
test
lahf
inc
dec
or
jmp
push
pop
jmp
sbb
jne
push
cmpsl
mov
scas
jne
mov
push
pop
mov
push
ljmp
xor
jo
or
and
daa
ds
pop
rcrl
or
lock
stos
jno
aam
sub
incl
fwait
mov
imul
pusha
into
pusha
mov
ja
repnz
cmp
clc
jmp
mov
add
sub
mov
decl
movsl
call
xor
sbb
imull
jge
test
sbb
cwtl
jns
incl
jmp
pop
jmp
and
ret
sub
lretw
mov
inc
and
rcll
incl
jl
sub
ljmp
pop
cmp
popf
xchg
clc
pop
ljmp
adc
jl
jb
das
js
hlt
sbb
jge
mov
mov
fcomps
leave
mov
adc
fnsave
mov
aad
loop
xchg
inc
pop
cmp
sar
into
cli
fsqrt
or
ljmp
movsl
sti
int
push
and
iret
pop
std
push
jg
js
inc
and
out
sub
dec
out
pushf
outsb
pop
and
mov
lock
adc
xchg
lea
mov
in
cmp
pushl
cli
pop
adc
pop
scas
xchg
cmp
fbld
xchg
xchg
push
sbb
jmp
fsts
mov
cmp
insb
inc
int3
cmp
push
mulps
inc
xchg
test
dec
push
push
mov
xlat
cli
push
inc
ficoml
std
frstor
mov
cmp
cltd
jp
or
hlt
xchg
iret
enter
pop
add
mov
in
cmpb
aas
enter
dec
repnz
jns
lahf
pop
int
fbld
imul
jne
ljmp
icebp
call
shrb
repz
add
mov
sti
inc
cld
dec
call
popa
in
xchg
dec
paddsw
or
or
pop
ret
hlt
xchg
into
sub
or
xor
or
sub
les
icebp
mov
pushl
cli
hlt
pop
in
inc
inc
push
out
sub
fmull
mov
daa
rorl
pop
or
mov
in
xchg
cld
bnd
mov
in
mov
jg
in
int
inc
or
mov
filds
cwtl
decl
roll
or
das
pop
iret
add
or
jno
inc
and
dec
fisubrl
push
out
ret
stos
ret
mov
loope
ret
jg
xlat
int3
out
stc
test
std
loop
pop
std
jmp
test
out
es
xor
mov
xor
pushl
scas
rcl
mov
int3
in
cmpsb
pop
xor
movsb
loopne
sub
cs
sbb
jecxz
idiv
mov
sarl
aaa
push
jae
lret
enter
test
add
lods
int
movsb
lods
sti
mov
scas
mov
mov
clc
mov
into
fcoml
sub
repnz
lock
leave
sub
inc
jno
in
sub
jb
call
jg
js
fidivs
pop
xchg
mov
shrb
out
rcr
repnz
call
pushf
mov
pop
in
mov
dec
add
mov
dec
testb
dec
xchg
pop
mov
xor
push
dec
jne
divb
cmp
ds
gs
popf
fchs
ljmp
adc
push
popf
js
xlat
jmp
jb
lds
cmc
and
mov
xor
rol
sub
aad
aaa
and
cld
lds
jp
push
mov
rclb
iret
mov
mov
les
imul
sbb
imul
sbb
ljmp
movsl
or
mov
lock
sbb
jecxz
inc
aas
aas
cs
inc
mov
and
sbb
mov
ljmp
inc
popf
jb
mov
adcb
gs
mov
imull
decl
inc
stc
sub
std
push
nop
cmpsb
fsubrl
mov
fldcw
fsubr
ljmp
fsubs
idivl
movsb
xor
jg
incb
lahf
hlt
ret
mov
orl
std
outsl
lock
jmp
push
in
pop
mov
stos
and
ret
mov
pop
xchg
xchg
inc
decl
xchg
xchg
outsb
sbb
lock
cli
inc
sub
das
push
call
pop
into
sti
bswap
mov
mov
ljmp
cmp
insl
push
bnd
decl
pusha
out
jo
sbb
push
neg
add
clc
incl
loopne
dec
in
and
fistl
mull
xchg
sub
jp
push
jp
pop
js
pushl
out
insl
lods
mov
rolb
je
stc
inc
ret
and
dec
fdivrp
call
loopne
mov
add
xchg
mov
adc
jae
lahf
jle
outsb
mov
xor
bound
pop
iret
stos
sub
mov
movsb
inc
out
xchg
sub
adc
xor
and
aaa
clc
fucomip
pop
sub
xchg
das
and
pop
inc
lcall
call
clc
call
jle
outsb
stos
sbb
or
pop
jno
loope
ds
incl
and
push
jnp
jo
push
lret
inc
pop
inc
repz
shl
outsl
push
repz
add
inc
jg
cmp
movl
xor
xor
test
decl
std
and
sbb
jbe
inc
test
mov
xchg
mov
repz
pop
pop
ljmp
outsb
fldl
test
shl
xchg
inc
lret
call
jge
ja
pop
movsl
rcll
lcall
push
test
imul
incl
test
sbb
out
xchg
je
lret
push
std
jno
out
mov
decl
out
mov
scas
aam
ja
xchg
pushf
jg
cmp
jmp
movl
xchg
in
cmp
pop
pop
jae
cmp
inc
pop
adc
pop
call
stos
cmp
mov
jno
push
jge
aaa
xchg
movsl
dec
pop
mov
add
cltd
ss
xlat
sub
loop
notl
push
imulb
jnp
icebp
jbe
sbb
call
dec
scas
dec
loop
mov
mov
and
pop
and
mov
cs
ficoms
decl
dec
or
xor
sbb
sbb
jns
out
push
xor
in
gs
and
jg
sahf
test
aaa
fstl
xor
sub
add
mov
jbe
or
mov
jbe
xchg
mov
movsl
or
adc
and
in
dec
lods
movsl
cmpsb
int3
add
test
gs
inc
gs
or
mov
loop
les
icebp
clc
push
dec
adc
pushl
jmp
lock
push
or
sub
inc
out
dec
add
mov
adc
pop
lret
mov
jns
cmp
test
mov
lods
add
xor
mov
flds
pop
adc
popf
insb
mov
push
mov
outsb
xor
fucomip
into
clc
enter
dec
xchg
insl
notb
icebp
sub
orb
mov
push
mov
xchg
ficoml
or
inc
xor
mov
dec
pop
jl
fcompl
sub
fnstsw
ljmp
out
in
xchg
xor
les
inc
jge
outsl
outsl
decl
std
mov
or
mov
int3
or
mov
enter
outsb
xchg
call
popl
enter
and
inc
pslld
lea
test
mov
mov
inc
mov
aas
xchg
add
lahf
ljmp
cld
xchg
and
in
or
jg
sbb
jo
push
jg
push
pop
cli
push
xor
imul
movsl
jns
add
fadd
sar
fistpl
nop
test
or
sbb
sub
pop
push
cs
sbb
pop
clc
pushl
dec
mov
jno
sbb
add
mov
adc
les
ljmp
xor
std
clc
cmp
mov
xchg
mov
cmp
sub
mov
aad
fisubs
lahf
rcll
cmpsb
loope
rolb
or
or
jp
mov
jne
enter
aam
dec
in
aaa
pop
out
and
mov
fucomip
test
xor
pop
les
ljmp
data16
in
mov
repz
loop
fcmovnu
loopne
add
mov
jb
mov
lret
or
pushl
xor
test
cmp
aas
and
pop
stc
jge
shll
daa
inc
ljmp
hlt
sbb
leave
stc
jecxz
sti
dec
push
out
cmp
sub
lcall
repz
xchg
scas
mov
imul
mov
sahf
dec
int3
mov
add
inc
loopne
data16
xchg
push
xchg
mov
cmp
outsl
call
inc
cmp
pop
push
les
sbbb
jno
fildll
ljmp
lret
loopne
sbb
cltd
movsb
in
or
decl
out
sets
cmp
lods
and
sbb
push
ds
movsl
lock
idiv
dec
jg
inc
jo
adc
je
sbb
call
jle
decl
adc
xchg
pop
sarb
pushl
stos
adc
mov
pop
cld
daa
fimull
push
jge
pop
repnz
and
pop
xchg
clc
pop
std
call
call
jl
push
loopne
mov
pop
ss
jg
das
push
and
pushf
add
imul
test
decl
pop
push
imul
add
popf
mov
mov
js
std
and
out
pushl
sarl
dec
movsb
mov
push
mov
sub
inc
stos
subl
xchg
jecxz
pop
adc
cmp
dec
repz
orb
sarw
movsl
mov
mov
orb
xchg
jl
add
add
mov
mov
movsb
ljmp
push
and
xor
aaa
and
inc
ljmp
dec
bound
mov
mov
xchg
cli
out
sarl
xchg
roll
filds
jne
add
dec
sahf
push
enter
ljmp
dec
jno
cltd
cld
test
jae
xchg
leave
xor
jle
cmp
es
sbb
decl
loopne
les
cld
inc
popa
in
sbbl
mov
push
or
jg
jmp
mov
pop
cwtl
insb
addr16
mov
dec
jno
shll
decl
fdivl
jmp
fimull
test
scas
test
vmovsldup
popa
mov
je
int
popa
push
pop
in
mov
mov
mov
pusha
push
cmpb
mov
outsl
dec
dec
xor
add
and
jecxz
xor
arpl
jmp
sbb
mov
fcomi
xchg
push
xchg
fdecstp
adc
push
decb
insb
mov
mov
call
lcall
jmp
insb
pop
dec
imul
sar
call
pop
out
cmp
cli
repz
cwtl
jle
inc
push
fdivrs
xor
stc
add
mov
iret
popa
lock
add
lock
sub
testl
aaa
sub
into
push
fcompl
mov
cmp
ds
imul
dec
jnp
mov
or
das
inc
lock
mov
push
jno
jmp
xchg
sub
mov
push
pop
je
cmp
mov
or
dec
std
ljmp
mov
or
cld
xchg
fcoms
into
jne
jbe
or
ja
cmc
ljmp
cmp
in
sti
movsl
bound
push
mov
mov
pushl
cs
pusha
testl
add
movsb
add
push
dec
andl
jecxz
add
cmp
mov
push
test
or
adc
fidivl
ljmp
sbb
xor
adc
or
fimuls
pop
fsubrs
pusha
cmp
arpl
filds
mov
hlt
push
mov
scas
sub
out
pop
icebp
inc
adc
jb
jnp
lds
js
fisubs
dec
mov
fnstenv
xor
push
mov
xor
leave
std
inc
xchg
pop
lret
sbb
ljmp
inc
add
dec
arpl
imul
pop
mov
sbb
int3
jge
fwait
mov
inc
mov
or
xchg
sub
fildll
ljmp
shl
lea
xor
jge
bound
pop
repz
les
add
test
mov
dec
inc
outsb
pop
xchg
mov
pop
daa
fucomip
lods
mov
mov
mov
or
je
push
sbb
aas
fidivrs
xchg
divl
cmp
mov
or
mov
pop
nop
adc
fwait
fists
clc
decl
and
test
mov
callw
decl
pushl
inc
loop
mov
push
in
pop
or
xchg
push
mov
insl
sti
push
fbstp
mov
mov
cltd
ffree
cmp
test
shrl
outsl
hlt
cld
lods
ds
movsl
pusha
sbbl
incb
pushl
fcomps
mov
pop
lds
popa
rol
xor
incl
scas
xor
xor
cmp
pop
aas
add
aas
ss
xchg
nop
mov
adc
and
sbb
bound
mov
lods
ds
fucom
adc
inc
test
push
or
decl
movsl
jae
push
leave
pop
mov
mov
xor
jmp
mov
cwtl
icebp
push
imul
js
aas
push
mov
clc
out
ficompl
loop
pop
js
mov
call
mov
pusha
pushl
fdivrs
inc
imul
or
or
inc
jne
pop
fdivrp
fcmove
gs
pusha
es
jmp
mov
lods
xchg
mov
outsb
test
mov
ret
stc
lahf
cmp
push
add
mov
jg
mov
mov
cmpsl
push
rclb
ror
popw
dec
shrl
call
fisttps
dec
or
in
cltd
jae
lea
xchg
sbb
pushl
jnp
add
adc
popf
mov
mov
and
pop
or
push
push
jb
mov
data16
sbb
sbb
adc
rcll
int
ficompl
adc
inc
das
cmp
lcall
lods
cmp
lret
cs
cmpsb
push
jecxz
jg
fdivr
aam
outsb
dec
sub
jg
mov
jge
jnp
fs
jns
into
dec
xor
cwtl
test
shl
mov
add
lods
dec
stos
pop
jg
mov
cmp
in
scas
dec
movsb
stos
movsl
in
inc
ds
stos
fs
ss
sbb
jmp
daa
lret
xchg
cmp
in
and
je
sbb
fists
mov
sbb
gs
ds
sbb
pop
cmp
xchg
gs
push
xchg
sbb
xchg
daa
ljmp
sub
hlt
sarb
lcall
mov
aaa
sti
add
in
pushl
push
xlat
push
jae
scas
cmc
sub
mov
push
sahf
push
int
pop
in
incl
incl
ss
pop
pop
clc
cmp
xlat
loope
add
or
jge
dec
daa
or
push
movsl
pushl
push
or
jbe
sub
mov
shrb
push
sbb
ja
xorl
call
jb
cltd
dec
test
das
std
push
shlb
aas
pop
mov
jg
popa
mov
xacquire
mov
movsb
stos
test
push
js
ret
data16
outsl
addr16
xchg
cltd
push
mov
inc
jmp
dec
aad
sub
add
es
rcrl
or
jbe
in
incl
xchg
jg
cmp
lds
push
loope
cmp
outsb
pop
aaa
out
bound
jns
lcall
mov
inc
lcall
xchg
dec
ds
cli
rcrl
jle
ret
pop
lcall
mov
xchg
clc
pop
call
pop
sub
lcall
stos
jae
mov
push
mov
test
push
clc
push
dec
call
out
jbe
jp
pop
mov
in
pusha
lods
pusha
xchg
sbbb
dec
call
mov
mov
and
lea
cmp
call
jae
jno
push
das
xchg
icebp
push
aas
add
cmp
jns
add
mov
rcll
test
icebp
out
nop
jno
jge
addr16
mov
xlat
lcall
ljmp
and
ljmp
push
mov
in
test
in
jg
pop
cld
das
mov
into
xchg
popf
sarb
push
add
divl
pop
cltd
rcrb
push
aaa
out
push
jae
rcrb
cmpsl
jg
pop
sahf
das
aad
lcall
dec
cmc
pop
and
xor
jecxz
mov
push
pop
or
call
scas
fucomi
dec
aas
mov
dec
sbb
mov
and
out
xchg
aad
jno
push
fbstp
push
fildll
loope
jns
cld
stc
push
jo
arpl
adc
jg
xor
rcr
shr
out
notl
jmp
repz
fidivs
call
addr16
mov
cmp
repnz
xchg
scas
imul
idiv
fildll
loope
mov
adc
ret
adc
ja
loop
out
ljmp
mov
outsl
mov
aad
add
mov
enter
mov
jg
jg
popf
mov
call
insb
cmp
cltd
inc
mov
jl
push
xchg
lods
inc
outsl
fistps
fs
stos
sbbl
bnd
in
and
pushf
push
jmp
or
ret
imul
xchg
ljmp
decb
ja
cmp
add
cld
sbb
inc
fucomp
jg
out
jl
inc
mov
push
cld
cmc
ret
ucomiss
ljmp
in
push
cmp
pop
xchg
sbb
xor
push
mov
scas
pop
lock
cld
ljmp
es
mov
ficompl
mul
jae
xchg
cmp
pop
pushf
leave
and
sbb
push
paddd
mov
mov
adc
sbb
push
scas
sbb
sahf
mov
jnp
out
mov
mov
xchg
jbe
incl
test
jmp
push
xor
mov
pop
fs
test
dec
data16
incl
rclb
movsb
cmpsb
dec
pusha
mov
add
std
adc
add
sti
loope
mov
mov
mov
mov
leave
pushf
cli
stos
push
mov
in
rcrb
jmp
arpl
jl
fists
in
cmp
loope
mov
stc
mov
testl
cmc
mov
subl
decb
fucomip
inc
stos
lods
outsb
aad
push
inc
roll
sub
out
sti
lcall
movsb
test
test
push
push
sbb
mov
push
clc
jg
or
adc
loop
repz
lds
fnsave
jnp
cmc
jg
ljmp
or
inc
inc
sub
jbe
icebp
mov
push
popa
scas
imul
jnp
inc
push
sahf
test
test
jle
shl
sub
aad
cmp
ljmp
cmc
jmp
cmp
mov
add
clc
xchg
insb
jp
inc
mov
sar
mov
mov
mov
inc
and
or
jmp
mov
call
mov
lret
pop
cltd
xor
into
clc
add
call
mov
dec
mov
xchg
or
mov
mov
cmp
call
jmp
cmp
lret
sub
into
fistpl
mov
add
es
incl
gs
out
mov
fimull
ljmp
call
data16
jmp
hlt
fcmovnbe
or
mov
scas
ret
ja
mov
andb
xchg
cli
cld
jg
stos
lods
cmp
mov
add
xchg
cmpsl
cmpb
sti
push
fnstsw
call
inc
shrb
insb
push
xor
and
mov
push
adc
nop
sub
ret
imul
cmp
push
fs
aaa
cs
ljmp
inc
insl
daa
cmpsb
sub
mov
pushl
add
push
roll
mov
pushf
adc
mov
or
imul
cmp
iret
inc
fcomip
insb
psrlq
mov
dec
into
out
ds
shr
repz
sbb
add
mov
cmpsl
je
sarb
jo
scas
daa
pop
loop
mov
adc
xor
push
rclb
subb
insb
in
scas
add
mov
fwait
mov
loopne
pop
dec
mov
insb
mov
in
push
or
ljmp
pmaxsw
or
jg
push
adc
cmc
movl
pop
mov
repz
icebp
decl
pop
lret
inc
insb
and
push
cwtl
loop
lahf
sub
pop
or
push
jo
xor
loope
pushf
cmp
push
lea
sarb
cmp
js
xlat
pop
nop
shll
mov
pop
pop
mov
call
call
or
gs
adc
mov
jp
jne
call
sbb
xchg
sub
stos
push
in
ja
in
rorb
ljmp
lock
fwait
leave
pop
aam
mov
lcall
xor
test
adc
jno
fcmovu
mov
lcall
test
push
arpl
jg
cld
idivb
xor
push
call
sbb
cld
sub
dec
adc
lcall
pop
cmp
lret
das
mov
pop
bound
lock
pop
shl
ljmp
sbb
xor
mov
dec
xor
popf
jge
mov
in
add
xchg
push
pushf
mov
das
ljmp
idivl
pop
xchg
pop
cmp
cli
out
pop
arpl
fsubr
fimuls
lock
pop
cmp
popa
scas
add
decl
iret
xchg
sti
adc
arpl
push
pop
aad
inc
and
dec
pop
pop
out
dec
pop
mov
daa
lahf
call
jle
mov
sbb
mov
int3
mov
inc
popf
sahf
mov
add
push
fstpl
mov
pop
insb
and
adc
push
sbb
cmp
pushl
cmp
xor
xchg
xchg
fcomp
jmp
dec
jg
mov
mov
jmp
pop
div
push
out
out
hlt
out
aam
mov
nop
outsl
shll
mov
iret
test
fs
jg
pop
xchg
mov
and
lret
and
movsl
cmp
lods
jl
mov
pushl
bound
pusha
pop
add
jnp
sahf
jmp
mov
ljmp
popa
lcall
sbb
mov
cmp
sar
ljmp
frstor
prefetchwt1
popa
inc
cli
mull
push
lcall
jns
cmc
or
mull
pop
out
and
push
mov
jmp
inc
xchg
adc
ror
mov
xchg
adc
lock
movsl
sub
adc
lcall
or
stc
cld
pop
movsl
add
lea
call
repz
pop
stc
or
jo
call
and
fs
vmaxpd
pop
lret
popa
jmp
mov
inc
test
gs
incl
mov
addr16
pop
hlt
dec
mov
cli
fnstsw
mov
fbld
ret
xor
and
mov
mov
ret
outsl
mov
cld
or
test
or
int
sbb
rolb
add
add
xor
cmp
lcall
push
test
push
inc
jnp
cmp
pop
stos
pop
jg
repnz
lcall
mov
mov
jb
mov
xchg
mov
pop
pushf
out
pop
cmp
cmp
loop
xor
ss
pop
jnp
popa
stc
aad
ljmp
rclb
sahf
lods
test
and
jbe
rcr
xchg
and
add
mov
filds
pop
jl
and
cwtl
xchg
dec
inc
pop
mov
ss
pop
idiv
shl
movsl
pushl
push
fldl
pop
mov
dec
xor
push
adc
cmp
inc
pop
sbb
std
je
cmpb
in
xchg
sarb
pop
cwtl
sbb
pushf
jae
inc
scas
push
add
lcall
push
subl
popa
xchg
in
test
test
dec
jns
and
dec
push
ffreep
mull
pop
insb
mov
push
aas
sti
leave
testl
jp
xchg
xchg
pop
or
fwait
add
and
push
jmp
cmp
cmp
mov
les
pmullw
pop
mov
or
jmp
clc
call
sbb
pop
pop
xchg
imul
mov
stos
mov
inc
rcll
repnz
push
pushl
out
cmpsb
and
lds
cmp
mov
mov
iret
sbb
mov
incb
inc
inc
fisubs
cmp
fs
dec
xchg
or
in
rorb
jl
adc
icebp
imul
cmp
xlat
pop
mov
int
sub
repnz
dec
jmp
dec
jo
test
repnz
pop
dec
mov
xor
jg
daa
movsb
out
xor
iret
ret
loop
in
push
scas
pop
mov
lret
jmp
in
xchg
xor
inc
fisttpll
or
mov
lock
rclb
cli
fptan
cmp
decl
sub
jbe
adc
iret
xorl
lods
dec
xchg
nop
popf
mov
mov
mov
pop
fbld
jmp
clc
mov
adc
push
pusha
sub
mov
xchg
decl
jecxz
jg
mov
inc
fs
push
fldcw
push
fiadds
inc
dec
pop
clc
call
pop
sub
aam
cs
popa
push
mov
fimuls
call
push
or
outsb
arpl
mov
cs
push
mov
or
xchg
mov
xchg
idivb
mov
ljmp
inc
mov
push
adc
jno
mov
stos
call
aaa
je
dec
push
push
cmp
lods
sub
iret
dec
pop
mov
adc
stos
inc
fcmovu
xor
pop
clc
lcall
add
mov
leave
pop
or
mov
fwait
lods
jno
jg
sub
and
outsl
inc
xchg
mov
dec
fcmovu
add
sub
ljmp
or
push
and
xor
mov
lcall
aam
addl
mov
adc
cmp
xchg
or
sub
dec
call
fnstsw
pop
fidivl
cs
xor
xchg
sub
adc
xchg
mov
loop
pop
jmp
jge
xchg
jl
mov
add
fwait
mov
mov
andb
cmp
add
add
sbb
pushl
ret
out
int3
loop
aad
jle
cmp
imul
pushl
cmp
push
imul
pop
jbe
lcall
dec
mov
mov
jmp
stc
lock
jle
in
sbb
jmp
mov
icebp
adc
hlt
test
jp
pushf
sti
pushf
cltd
adc
xchg
inc
pop
mov
adc
call
pop
sub
or
jb
daa
push
fcmovbe
adc
fmull
popa
test
cmp
pushl
nop
mov
fisttps
xor
cmc
mov
jno
cmp
das
cmpsl
flds
js
mov
js
loop
in
dec
inc
and
jg
rorb
push
cli
rolb
je
xchg
add
popa
or
call
addr16
loopne
inc
xor
or
stc
shl
ret
scas
xchg
xchg
je
clc
call
enter
push
jne
aaa
jg
mov
popf
and
mov
pushf
in
cmpsl
or
popa
and
xor
or
push
jne
test
movsl
and
mov
shll
or
clc
cmp
call
mov
ret
icebp
cmp
mov
fxch
cmp
dec
jnp
and
mov
sar
mov
push
xchg
xor
scas
add
dec
xchg
jnp
aam
adc
dec
aad
add
rcll
sub
pop
pusha
test
incl
int3
or
and
mov
iret
mov
imul
pop
pop
ds
sbb
mov
inc
fnsave
lods
lcall
aaa
clc
sub
push
dec
mov
jnp
sbb
outsb
aam
ret
rcr
ljmp
or
and
mov
std
pop
jg
fmulp
mov
push
cmp
out
add
mov
mov
jmp
pop
mov
push
pushl
adc
inc
inc
mov
out
mov
pushl
hlt
xchg
cmp
aam
aas
jno
jnp
bound
mov
jge
movsl
imul
scas
and
mov
pushl
mov
cltd
cmpsl
push
test
push
cmp
gs
inc
mov
sub
sbb
test
pop
ljmp
imul
mov
adc
idiv
movsl
jle
roll
add
ss
aaa
mov
cld
pop
cld
mov
sbb
xchg
insl
fistl
pop
inc
cmpsb
jo
cmp
mov
dec
das
mov
in
fs
jg
sti
nop
pop
push
and
xchg
lods
xchg
and
decl
xchg
ret
mov
test
les
mov
dec
outsl
lock
or
xlat
pop
fdiv
lea
in
mov
mov
mov
mov
rorb
test
xor
and
xchg
sub
mov
adc
pusha
mov
lret
pushl
ljmp
bound
sub
add
sahf
jae
out
stc
mov
xor
xchg
aaa
clc
mov
push
sbb
pop
xchg
lods
mov
inc
push
mov
incl
lds
aam
lcall
inc
outsb
mov
mov
or
jns
and
mov
xchg
iret
pop
pop
jbe
push
adc
pushl
in
cmc
sbb
or
pop
ret
lahf
fildll
das
outsb
push
push
clc
dec
cmp
xchg
sbb
xlat
inc
mov
ljmp
in
nop
hlt
push
cli
inc
xchg
fnstsw
call
pop
add
cmp
dec
pop
aam
jg
jmp
lds
and
dec
insb
addr16
rcrb
aam
mov
test
dec
hlt
aas
adc
pop
shll
cmp
jmp
enter
test
sbb
sub
ljmp
dec
mov
mov
mov
jb
fldl
int3
push
div
daa
pop
shl
dec
push
cmpsl
xor
cs
add
add
push
jl
and
loop
or
hlt
mov
in
mov
jae
cwtl
cmp
jns
xlat
arpl
in
push
clc
aad
call
push
xor
dec
loop
sbbl
add
js
inc
dec
xorb
jg
test
mov
and
cmp
cmp
cli
mov
fucom
inc
mov
pop
stos
lock
fcomps
mov
jmp
push
int
das
sub
adcb
xchg
sbb
cmp
push
adcl
sbb
sbb
into
or
push
jae
addr16
je
pop
fadds
out
rorb
push
aaa
and
dec
imul
mov
enter
sub
incl
movsb
mov
add
outsl
icebp
lock
testb
or
jnp
inc
lock
push
int
shr
dec
sahf
pusha
fcmovne
xor
adc
cld
lods
and
adc
cmp
test
jg
xchg
out
xor
push
dec
push
outsl
stos
or
mov
pop
das
xor
in
xchg
call
call
ljmp
loop
repnz
xor
aad
mov
jmp
sub
cmp
in
fcoms
pop
ret
stos
fcoml
hlt
mov
cld
push
in
dec
sbb
sbb
pushl
popf
fidivrs
icebp
mov
out
adc
mov
cmpsl
or
shll
mov
jg
push
aam
loope
xor
out
sbb
js
lock
cmp
lock
mov
incl
into
xchg
es
jb
adc
jb
xchg
xor
shlb
mov
das
mov
xchg
adc
and
mov
jne
jmp
sub
xorb
das
hlt
pushl
out
scas
cltd
ljmp
imul
mov
mov
mov
push
incl
jg
stc
repz
jge
jmp
stc
jmp
push
cld
fbld
jo
push
adc
das
js
movsl
xchg
lock
lea
pusha
mov
add
fs
mov
pushl
lds
and
hlt
sbb
adc
shrl
in
out
pusha
ljmp
mov
and
xchg
scas
jl
nop
jle
nop
xchg
ret
pop
cli
jmp
lock
mov
mov
fcoms
sub
mov
fadd
push
cmp
dec
test
cmc
inc
inc
loope
gs
mov
adc
ljmp
or
adc
and
aaa
dec
xor
sub
aaa
cmc
call
mov
jmp
insl
scas
cmp
call
push
fildl
inc
mov
decl
dec
jmp
jns
cs
jae
sub
xor
add
decl
push
or
push
mov
and
and
mov
pusha
dec
adc
add
inc
js
roll
addr16
xchg
mov
fs
scas
jo
push
je
lcall
adc
cmpsb
mov
cwtl
mov
rcrb
mov
mov
aad
loopne
mov
push
cltd
mov
mov
cmp
add
insb
mov
cmovo
sub
popf
inc
pusha
jge
enter
mov
incl
data16
push
sbb
lahf
add
pop
outsb
xchg
outsb
add
mov
sbb
aam
sarb
incl
test
mov
mov
xchg
lret
mov
push
loope
lock
sti
mov
loopne
sbb
in
ret
jl
in
aas
stos
cmp
cltd
lret
ljmp
push
shll
jae
ljmp
pushf
pop
test
mov
hlt
push
mov
cli
mov
lcall
xchg
lret
xor
ljmp
cmc
test
test
cmp
adc
mov
mov
xchg
decl
sahf
pop
icebp
adc
inc
ja
rol
xchg
rcrb
mov
int3
mov
in
jb
pushl
or
mov
pop
push
out
or
in
js
pusha
or
jmp
fwait
lret
xchg
inc
mull
cmp
pop
pop
dec
shl
pushl
out
mov
or
ljmp
ret
mov
mov
add
lcall
pushf
ljmp
pop
mov
push
mov
mov
mov
mov
rcrl
fbld
jb
sbb
roll
inc
adc
scas
pop
iret
jno
jo
repnz
push
shl
aas
and
popf
xorb
call
pop
int
xor
scas
rcrb
test
sar
xchg
fcomip
call
cmc
call
out
inc
jne
lcall
ror
fld
xor
cli
outsl
icebp
adc
call
sbb
jns
outsl
xchg
decl
inc
jne
and
mov
sbb
xchg
movsl
or
pop
mov
mov
ljmp
daa
loopne
movsb
mov
jl
add
cld
jnp
aas
mov
lcall
add
xlat
in
mov
ljmp
fsincos
mov
rclb
cmpsl
icebp
call
ds
scas
pop
sub
mov
jecxz
cmp
sub
sbb
popa
lock
decl
and
outsb
push
aaa
fwait
cmp
mov
xor
dec
out
sub
outsl
and
out
movsb
jae
cmp
lods
out
sub
push
lds
jae
push
jp
cmp
shl
cld
dec
std
mov
mov
cld
incl
push
xchg
inc
jno
shll
mov
mov
ljmp
movl
or
cmp
lcall
inc
push
not
fsubp
jle
popa
adc
shr
nop
fcoms
movsl
xchg
add
xor
xchg
xchg
mov
push
dec
out
mov
jmp
pushl
and
vxorps
inc
into
sahf
jne
ds
hlt
idiv
xchg
cltd
xchg
jg
mov
call
js
push
xchg
or
xchg
mov
jmp
shrb
das
or
cmp
jo
sbb
jo
shll
decl
int
aam
cld
xchg
and
pop
lods
mov
pop
pop
gs
jmp
and
das
and
adc
mov
cmp
pop
sbb
jmp
lock
iret
xor
mov
mov
ljmp
add
add
popa
dec
dec
sub
out
inc
outsb
outsl
sbb
lret
das
jo
mov
mov
jle
in
or
dec
ret
out
mov
pop
clc
ljmp
sbb
pop
pusha
sbb
aam
rcll
icebp
mov
pusha
ror
xchg
add
mov
jo
mov
xor
das
adc
jle
xchg
push
push
sbb
and
ljmp
push
loopne
fstpl
dec
mov
bound
arpl
clc
xchg
cli
decl
loope,pn
adc
xchg
xor
es
decl
aam
hlt
ja
add
add
pop
cld
jmp
add
sub
into
loope
or
or
jns
add
or
in
adc
enter
neg
dec
mov
lea
mov
sbb
push
sub
fwait
divl
cmp
pop
dec
test
and
jmp
in
out
jge
mov
ljmp
call
aam
adc
jp
dec
lret
imul
push
sub
ljmp
xchg
lock
mov
or
fwait
pop
je
sub
adc
cmp
cmp
mov
sub
mov
mov
call
push
pushl
into
push
push
mov
icebp
mov
xlat
inc
test
inc
rclb
icebp
fs
ljmp
mov
jecxz
add
push
cmp
mov
cltd
outsl
sub
movsb
scas
pop
mov
jb
icebp
in
pop
notb
sahf
xlat
fsubrl
add
lahf
or
cmp
fs
pusha
jbe
cli
out
xor
adc
clc
push
nop
outsb
push
and
daa
rorl
xchg
ljmp
rorl
test
mov
cmpsb
pop
jmp
aam
push
jae,pt
jmp
data16
push
jns
mov
inc
daa
xlat
cmc
dec
xchg
jg
xchg
jne
lods
adc
mov
and
mov
jb
icebp
xchg
pop
repz
mov
das
daa
pop
pop
pop
icebp
push
cs
call
adc
cmc
std
inc
add
sahf
shll
xor
inc
inc
fwait
jge
decb
bnd
insl
test
ljmp
sbb
lods
xlat
push
jecxz
imul
xor
sbb
lret
lods
imul
pushl
dec
push
mov
scas
pop
mov
cwtl
pop
pop
mov
sti
imul
cltd
mov
sub
lods
imul
or
sbb
sbbl
pop
sar
push
and
dec
xor
mov
stos
adc
dec
mov
leave
out
lea
or
divb
mov
inc
jne
or
pop
push
dec
out
xor
in
hlt
jne
jg
push
mov
adc
push
sbb
das
leave
call
adc
pop
mov
pop
cli
lods
adc
stos
sbb
pop
push
shrb
dec
icebp
fildl
int
jb
adc
dec
in
mov
mov
addb
dec
and
aas
push
xor
adc
xlat
sarl
jmp
aaa
mov
incl
pop
imul
mov
lea
in
sbb
cli
mov
jg
popa
insl
push
add
leave
cmpsb
cmp
fldcw
add
sbb
sbb
cli
cwtl
lods
faddl
adc
ss
jg
inc
inc
mov
fwait
imul
push
adc
jnp
lods
loopne
outsb
inc
aaa
sub
ljmp
mov
sbb
xor
cmpsl
sbb
push
outsl
mov
jp
lret
ljmp
mov
and
test
xor
in
test
or
jmp
pop
or
pop
dec
jg
shlb
cmp
movsb
mov
pushw
incl
mov
mov
pusha
idivl
push
mov
out
rcl
cli
jmp
dec
jl
xlat
inc
xor
or
mov
jg
mov
mov
int
sub
scas
inc
movsl
lods
mov
mov
pushl
pop
lcall
adcb
jae
mov
sub
mov
push
repnz
mov
in
or
jmp
lcall
scas
and
sahf
jl
add
rcr
mov
lahf
mov
arpl
enter
xchg
sar
outsl
mov
in
sbb
jg
jno
mov
out
outsb
mov
decl
ljmp
ret
push
mov
and
hlt
aas
sbb
xchg
dec
hlt
jmp
and
jnp
jle
sub
out
inc
daa
ficoms
mov
cmp
push
incl
das
push
leave
xchg
outsb
imul
dec
sti
test
insb
bound
movsl
dec
add
mov
into
test
push
decl
sub
addr16
ja
int3
jo
sbb
jle
jmp
mov
cmp
rcrb
scas
jmp
cmpsb
mov
inc
jnp
and
insb
push
ja
icebp
fnsave
or
and
pushf
jle
ljmp
lods
mov
xchg
mov
ljmp
into
push
mov
cwtl
call
aam
ja
jmp
push
ret
call
in
out
add
dec
jne
fldl
mov
sbb
jbe
mov
mov
scas
mov
call
mov
fnstcw
push
push
push
adc
jne
add
cmp
jne
lea
jmp
push
imul
insb
ret
cs
mov
or
je
arpl
out
fdivrp
out
or
je
int
test
mov
loopne
mov
jp
or
cmpsb
pop
add
ja
pop
inc
inc
call
jle
push
mov
pusha
xchg
add
add
pushl
fldl
mov
add
pushl
push
push
call
jbe
mov
lods
xor
test
fldl
sbb
push
push
push
push
mov
inc
mov
xor
fisttpl
leave
je
js
lods
cmp
xchg
or
insl
call
out
add
dec
jmp
mov
or
add
imull
rol
jo
add
add
aaa
lock
into
pop
pop
pop
pop
jmp
pop
dec
mov
add
mov
sar
rep
popa
loope
rep
pop
movsb
outsl
add
test
ret
ret
test
jge
dec
sbb
mov
dec
or
or
fisubrs
call
je
mov
shr
mov
popf
adc
mov
mov
ja
dec
je
mov
or
jmp
xchg
mov
jmp
sti
add
je
add
push
out
and
sub
or
mov
sbbb
sbb
mov
orl
dec
sub
rorl
adc
repnz
or
das
add
inc
or
decl
stos
jmp
mov
sbb
or
or
or
fadds
mov
lods
dec
test
ja
test
add
xlat
mov
insl
xor
sbb
cli
rorl
ja
in
test
push
movsl
sub
ret
add
jne
add
add
push
mov
mov
cli
jne
and
pop
jae
sbb
dec
pop
addr16
scas
mov
fildl
push
jmp
clc
in
fcomps
xlat
cmp
dec
shl
arpl
call
push
mov
mov
add
mov
add
pop
lea
jmp
sub
sarl
adc
push
mov
jmp
add
fld
adc
adc
jmp
mov
mov
cmp
push
push
add
mov
ja
dec
push
push
movzwl
add
sbb
lea
btl
pop
loopne
inc
sub
inc
or
clc
jne
inc
mov
add
loopne
add
nop
out
shll
or
imul
xorb
cltd
push
pop
lods
lods
mov
loop
or
add
in
jl
shll
jne
pop
mov
sbb
frstor
cmp
ret
or
push
dec
xor
fldt
mov
out
or
test
mov
add
fs
call
sbb
pop
push
lea
in
xchg
lods
pop
jnp
repnz
mov
cmpsb
imul
and
push
inc
js
je
mov
inc
mov
jae
push
dec
jbe
pushl
popa
addr16
outsl
js
add
jo
push
je
or
std
outsl
decl
inc
inc
push
and
push
dec
push
add
and
mov
or
jb
movq
inc
std
push
pop
imul
jne
and
stos
popa
je
jbe
mov
fs
fwait
imul
packssdw
jb
cmp
insl
mov
imul
push
mov
or
adc
shlb
test
jae
xor
decb
jmp
xchg
pop
ret
add
jl
inc
inc
mov
add
lods
mov
xchg
mov
fadds
push
push
stos
and
mov
insb
ss
and
push
pop
das
push
mov
in
ret
inc
cmp
repnz
adc
add
mov
jg
and
sub
push
call
stc
jnp
mov
push
xchg
and
push
push
sbb
mov
lret
or
cld
mov
das
ret
es
aaa
add
addr16
add
mov
add
insb
push
pop
or
or
adc
sbb
sub
dec
aaa
or
cmp
pusha
jo
mov
add
jnp
shll
add
ljmp
push
inc
inc
or
or
or
or
or
movups
adc
adc
rcll
push
add
dec
add
xor
mov
mov
inc
subl
inc
adc
fdivrp
insl
jl
shl
and
mov
lahf
std
mov
decb
cmp
jae
pop
mov
adc
into
in
pop
ja
shr
mov
inc
add
push
or
loope
mov
add
daa
sar
mov
mov
add
insl
orb
or
fidivrs
stos
push
push
push
xchg
push
mov
sbb
lock
div
fisttpl
cmp
and
pop
loope
jbe
xor
mov
mov
pop
add
cmp
mov
jb
mov
pop
pusha
je
sub
inc
or
or
adc
and
leave
outsl
fstl
jecxz,pt
mov
lea
adc
lock
mul
add
sbb
ja
mov
push
pop
xor
cmp
mov
mov
fildll
dec
mov
jb
mov
jl
out
or
and
mov
mov
mov
pop
cmp
or
adc
shr
mov
stos
sub
fwait
js
and
orl
dec
add
fs
lock
or
lea
xchg
push
lea
pushl
pop
pop
xor
sbb
adcl
leave
test
push
in
and
mov
push
je
xchg
push
out
mov
push
sbb
iret
out
mov
lea
inc
mov
cmp
enter
sub
push
lcall
fdivs
push
jb
mov
mov
loope
xor
inc
mov
mov
add
loop
push
scas
ret
xor
fsubrp
pop
lret
stc
or
adc
jp
ret
clc
sbb
inc
mov
sub
push
inc
mov
out
jmp
mov
jnp
cmp
jae
add
sbb
dec
ljmp
shrl
xor
mov
xor
fcomip
xor
adc
or
into
js
icebp
mov
mov
cli
mov
sbb
outsb
ret
lea
jae
xchg
inc
add
mov
or
pop
ret
or
xor
aas
fucomi
fidivs
push
call
xor
mov
and
mov
adc
clc
cmp
and
pop
xchg
lea
push
push
lret
fsubr
mov
mov
or
out
inc
lcall
mov
pusha
xor
add
movsl
or
add
dec
lea
in
sub
inc
add
addb
push
add
dec
add
adc
sbbb
test
aam
hlt
aam
mov
pop
add
pop
xchg
ss
cs
lea
in
xchg
push
call
and
xor
sub
or
or
adc
adc
lea
mov
push
mov
call
jmp
out
push
adc
ret
xor
std
sbbb
jae
mov
add
and
sbb
nop
pusha
jne
push
pop
mov
mov
jbe
rolb
jle
cmp
fcomi
int
and
dec
and
ss
adc
mov
push
or
inc
or
adc
mov
add
aaa
in
adc
mov
lea
sbb
push
call
test
and
push
push
call
sbb
and
cmc
sub
andl
mov
das
cmp
adc
sbb
push
out
rorb
push
lea
sub
movsb
inc
aas
jecxz
pop
xchg
imul
pop
ss
pop
or
or
inc
jmp
mov
adc
xchg
dec
adc
clc
inc
ret
call
jae
fisttpl
je
inc
cmpsl
push
and
sub
cmp
pop
or
das
loopne
roll
inc
stos
in
mov
sbb
sbbl
movsb
ss
mov
or
insl
sub
cmpsb
xor
scas
aam
insl
lods
xor
aad
pop
jb
adcl
daa
into
xor
push
or
iret
fsubrl
pop
ljmp
sub
ljmp
ret
outsb
jmp
add
xchg
fwait
pop
jmp
jl
sub
xchg
xor
sarb
je
cmp
jb
fnsave
push
xchg
push
outsl
std
push
inc
add
mov
jle
cmp
sbb
inc
lret
mov
dec
aad
lods
insl
outsb
jmp
clc
or
sub
pop
lods
mov
enter
out
or
and
std
add
sbb
jmp
add
mov
push
pusha
mov
pop
inc
loop
in
pop
pop
push
xchg
fdiv
jae
aam
mov
clc
sahf
or
sub
adc
xchg
adc
loopne
hlt
jmp
mov
cmc
ja
sbbb
inc
lea
cmp
scas
jae
pop
clc
outsl
pop
shrb
roll
adc
mov
test
mov
enter
mov
je
cmp
sub
subb
and
lcall
inc
test
and
iret
sub
and
stc
and
add
and
fs
aaa
fcmovb
fcoms
dec
outsl
cmc
insb
gs
popa
outsb
and
hlt
frstor
adc
fs
xchg
mov
pusha
aaa
enter
sub
and
in
call
test
fsubs
xor
mov
iret
mov
bnd
stos
movsl
packsswb
sub
filds
hlt
inc
nop
lods
addr16
mov
testl
negl
jns
push
testl
daa
shlb
inc
add
testl
add
add
clc
or
arpl
rorb
push
adc
fadds
sub
les
pop
les
in
pusha
mull
rorl
pop
sti
xor
and
inc
testl
xor
daa
rorb
push
sbb
jb
add
rorb
test
adc
xchg
lea
adc
shlb
cmp
test
sbb
and
mov
mov
ret
mov
jo
cmp
jbe
mov
jg
adc
push
add
or
cmp
mov
insb
les
loop
xor
adc
xchg
dec
mov
call
mov
add
arpl
movsl
cmp
clc
mov
push
mov
adc
orb
inc
or
mov
imul
adc
or
in
mov
clc
test
pop
adc
adc
rorl
add
call
ss
stos
adc
pop
movsb
xchg
outsb
lea
pop
mov
psrlw
shrb
into
jmp
lea
out
in
xchg
mov
inc
mov
add
insb
mov
mov
cmp
jbe
xchg
mov
push
push
js
ja
rorb
push
pushl
mov
mov
adc
cs
jbe
push
mov
call
mov
adc
inc
sbb
test
lahf
or
shrl
push
imul
testl
push
lea
clc
xchg
out
addr16
pushfw
cli
ret
js
jmp
lock
add
and
mov
or
lret
add
inc
cmp
jl
add
cmp
addb
in
lds
arpl
cmpb
inc
mov
cwtl
sbb
push
push
aaa
fimull
jmp
or
shll
push
adc
movsl
clc
incb
add
push
loop
or
cwtl
clc
cmpsl
stc
stos
or
cltd
fiadds
call
aas
repnz
lea
daa
or
pop
rorl
mov
inc
inc
cmp
push
shll
loope
xor
cld
call
add
dec
mov
lods
icebp
jge
cmpl
cli
sub
mov
pop
and
jg
call
add
mov
push
ss
mov
add
icebp
mov
jne
add
mov
or
iret
jmp
push
sbb
push
inc
push
js
mov
add
outsl
and
cmp
mov
cmc
cmp
or
mov
sbb
test
mov
test
je
dec
js
loopne
xor
lods
rcrl
lret
movzwl
test
jle
test
jbe
sbb
add
xor
cmp
sub
shl
inc
andl
clc
aaa
cs
imul
lea
divl
push
idiv
imul
sbb
push
rorl
loope
test
jne
push
ljmp
adc
enter
inc
insl
sbb
and
imul
dec
mov
jle
xchg
je
push
add
push
aaa
ja
push
aad
sub
jge
xor
sub
js
inc
sti
dec
clc
jne
mov
pushf
cmc
push
std
xchg
add
arpl
or
mov
or
mull
aam
sbb
int3
dec
stos
inc
push
lea
lea
push
mov
cs
sub
das
cmp
cmp
jbe
adc
xchg
je
movsl
mov
or
mov
adc
add
add
pop
or
sub
test
je
icebp
jbe
push
cltd
or
inc
cmp
mov
sbb
sbb
add
lock
ljmp
sub
test
add
mov
mov
inc
xchg
mov
mov
xor
push
in
xchg
inc
dec
and
cmp
inc
std
xchg
jecxz
scas
ret
mov
sbb
test
sarl
push
pop
mov
dec
divb
cli
clc
sbb
flds
ja
sbb
sbb
jmp
cmp
push
mov
or
call
mov
int
mov
xchg
sbb
mov
cmp
jne
cmpsb
pop
in
int
add
add
in
and
jp
sti
pop
sub
adc
cmp
adc
dec
scas
pusha
and
jb
jmp
xchg
mov
call
clc
pop
jne
decl
mov
sub
mov
call
mov
movl
push
inc
call
jb
jb
pop
cmp
and
hlt
cld
lods
in
das
and
pop
or
jle
fists
dec
adc
xor
jl
cmp
jg
movswl
add
shl
or
cmp
jg
adc
adc
mov
inc
mov
or
sub
push
sub
sar
fwait
out
add
or
aaa
jmp
dec
inc
inc
and
icebp
dec
insl
mov
adc
imul
cmpsl
and
cmpsb
cmp
data16
rorl
sub
cltd
adc
cmp
imulb
pop
insb
lea
push
sbb
add
ret
push
lock
cmp
and
enter
sub
adc
mov
or
mov
test
orl
push
push
xor
fmuls
sub
je
nop
add
inc
popa
pop
shlb
adc
sbb
rorl
lock
scas
add
movsb
je
lea
mov
push
cltd
cmc
inc
call
fistl
mov
push
pop
xchg
mov
mov
and
mov
pop
icebp
lea
cmpl
je
icebp
lret
add
call
push
out
xor
stc
sbb
dec
addb
jmp
ret
test
shlb
xlat
push
imul
clc
inc
push
push
cmpsb
imul
hlt
jbe
loop
call
jb
test
test
sub
mov
leave
sbb
push
and
mov
mov
push
add
aad
pop
adc
out
pop
imul
stos
adc
loop
mov
pusha
data16
lea
or
pop
movsb
aaa
push
pop
sbb
and
popa
leave
stc
nop
ja
inc
push
push
or
push
lock
pop
mov
xchg
jae
inc
adc
inc
and
aam
out
sbb
in
mov
ret
out
clc
push
clc
test
sbb
mov
scas
adc
movsl
sbb
lcall
data16
test
or
sbbl
pop
lock
xor
les
mov
mov
sarb
ret
inc
lock
shrb
idiv
and
xchg
push
iret
rorb
shll
fs
cmp
ret
jg
aad
into
lock
or
push
jmp
push
sub
lds
push
jmp
mov
xchg
mov
xchg
pop
call
clc
pushf
imul
push
pusha
ret
mov
sti
clc
add
mov
and
pop
int
xor
mov
adc
inc
push
sub
mov
bound
imulb
pusha
aaa
push
call
int
or
cmp
cmc
push
loope
mov
fstpt
jmp
pop
push
pushf
pushf
cwtl
cmp
mov
xor
push
jmp
test
mov
mov
imulb
aam
into
or
mov
inc
mov
cmp
aam
sbb
jbe
pop
ret
adc
push
mov
sub
cmp
popw
jle
and
sbb
sbb
xchg
cmp
pop
call
fs
ljmp
inc
push
shlb
or
insb
addr16
in
call
adc
mov
mov
cwtl
dec
fucomi
jle
jmp
call
insb
lods
hlt
dec
movsl
sub
adc
mov
or
sub
lcall
fs
xchg
xchg
sub
lahf
lcall
xchg
in
rcll
cmpsb
jmp
sbb
mov
adc
insl
jg
gs
cmp
in
or
push
movaps
or
das
pusha
ret
int3
sbb
cmp
sbb
mov
sbb
shrb
cmp
lock
add
jl
dec
ret
or
or
inc
add
movsl
loope
loopne
jl
xor
jge
push
mov
xor
mov
or
pusha
call
fdivrl
mov
add
cld
jmp
lock
loop
xor
pop
movsb
pop
add
adc
call
sarb
sbb
arpl
addr16
into
out
adc
je
inc
mov
adc
or
mov
mov
sub
sbb
push
add
call
push
or
idiv
pushl
negl
cli
and
add
lds
push
cmp
xchg
push
les
mov
movsb
mov
mov
stos
stos
cmpsl
xlat
std
roll
shrl
inc
inc
adc
cmp
add
sbb
mov
cmp
pop
imul
adc
inc
or
inc
and
push
xchg
add
sbb
ja
scas
je
mov
add
mov
testb
inc
jb
mov
or
jae
dec
daa
xchg
test
rorb
icebp
std
mov
lock
xor
and
mov
dec
rorl
test
or
flds
fidivs
jbe
sbbl
add
add
mov
inc
mov
pop
or
out
push
int3
dec
add
sub
fmuls
mov
push
call
cmp
jo
loope
mov
push
pop
pop
insb
inc
ja
outsl
push
imul
and
loopne
xchg
push
orb
cmp
stos
sbb
imul
test
cmpsb
imul
lcall
scas
sbb
xchg
cmp
cmpl
push
test
call
pusha
mov
xor
mov
js
loopne
mov
push
jb
cld
sbb
inc
lret
push
lock
cmp
mov
das
sbb
adc
jne
jo
out
out
sub
icebp
negb
and
aad
adc
shll
adc
jge
test
jbe
fcmovu
or
jge
xor
cltd
sets
jae
sbb
xchg
xchg
insl
push
mov
push
adc
scas
mov
into
idivb
pop
push
setbe
lea
call
pop
mov
fsubrs
and
lea
insl
jp
lahf
mov
jecxz
add
leave
pop
arpl
lock
fiaddl
xlat
rcll
pusha
jmp
punpcklbw
push
add
mov
cmp
lds
xor
movsb
xor
outsl
gs
fcomi
push
sbb
mov
jge
fcoms
mov
clc
push
jbe
adc
dec
fsubl
clc
adc
jae
lahf
jne
push
push
ss
or
pop
xor
sbb
mov
pop
mov
outsb
cmp
int3
lcall
or
insb
ds
sub
pop
mov
jl
mov
and
push
push
or
shlb
loope
test
mov
mov
inc
sbb
push
pushf
push
mov
push
push
push
js
inc
add
xor
mov
les
les
insb
adc
scas
popa
xlat
xor
add
xor
push
mov
scas
jmp
mov
ss
pop
inc
add
repz
std
add
mov
pusha
outsb
inc
or
out
xchg
out
xchg
nop
adc
sbb
arpl
pop
addr16
jno
jl
xor
shrb
adc
repz
mov
push
jbe
aaa
into
add
dec
fadds
test
lock
add
dec
rolb
or
or
or
mov
adc
inc
xchg
fcomps
jb
cmc
negl
mov
dec
pop
sub
fdivs
mov
cmp
and
xchg
ret
sbbl
jge
popf
fadd
jno
mov
gs
push
jle
push
flds
inc
cmp
jmp
insb
cmpsb
aaa
fdiv
mov
or
dec
fstl
test
inc
push
inc
sbb
pop
loopne
or
add
or
and
mov
push
mov
sti
xor
push
aaa
ds
add
sahf
sbb
sbb
add
mov
lret
dec
scas
cmp
aad
int
iret
leave
cwtl
stos
adc
aad
xchg
mov
mov
push
outsl
mov
xchg
sbb
mov
cwtl
push
cwtl
jo
add
xor
fldcw
and
dec
mov
sarb
or
xor
adc
push
push
sbb
and
cs
daa
clc
sarl
sub
sub
cli
adc
add
movsb
cwtl
mov
mov
push
adc
or
out
dec
inc
int3
int
mov
add
outsb
fwait
lods
lcall
add
sbb
pop
sti
hlt
cltd
test
ror
xor
cmp
enter
pusha
adc
pop
inc
fcomps
inc
adc
dec
sbb
xor
lea
push
popa
scas
rolb
cmp
cwtl
adc
adc
pop
je
sub
mov
mov
adc
jae
sbb
cmp
and
jle
mov
rcll
je
fs
lret
adc
insb
out
sbb
mov
imul
or
adc
push
xlat
mov
lods
rcll
and
cld
push
dec
adc
cmp
insb
add
xor
push
add
add
xchg
or
sbb
push
dec
fisubrl
out
xchg
add
sbb
popf
mov
je
popf
xchg
dec
pop
movsl
mov
fsubrs
mov
pop
roll
jg
pop
jmp
jae
xchg
adc
adc
call
xchg
call
lea
xchg
adc
imul
jg
pusha
push
and
add
cmpb
cwtl
adc
fbld
push
pop
cmp
out
push
inc
popa
push
adc
cli
mov
sbb
bound
push
or
push
aaa
pop
xchg
jmp
mov
push
push
or
push
dec
push
and
push
aaa
mov
faddl
or
sbb
mov
sub
ss
sbb
mov
pop
mov
cs
lret
jnp
push
cwtl
inc
push
push
test
ds
fcompl
int3
call
cmp
pop
inc
stos
xor
lret
push
inc
pop
mov
clc
mov
aas
and
imul
jae
sbb
dec
or
jbe
shr
in
and
adc
pop
push
ja
mov
cmp
movb
call
add
mov
sbb
aad
cmp
test
mov
call
jne
in
jne
insb
mov
push
or
inc
inc
xor
or
orl
sbb
push
inc
call
push
jecxz
and
mov
xor
out
fisubl
push
pop
call
cmp
je
sub
mov
hlt
sbb
imul
sub
jno
aam
fildl
out
pop
push
lock
xchg
pusha
mov
mov
in
lret
jg
setnp
and
cld
jge
inc
pop
aam
dec
mov
test
dec
rcrl
cmp
mov
jo
idiv
mov
adc
add
orb
and
lods
ss
repz
fldenv
jge
std
mov
cmp
jne
or
nop
xorb
ja
add
dec
repz
sti
rcl
xchg
popa
sti
mov
adc
sub
je
int
push
fwait
push
pop
mov
push
cmc
mov
shlb
enter
or
insb
xor
sub
push
xor
and
sahf
or
jb
in
outsb
xchg
mov
mov
loopne
push
in
sbb
push
lods
call
mov
sub
adc
enter
cmpsl
pop
jbe
enter
in
insl
in
or
push
aas
enter
outsl
xchg
call
movzwl
orb
lock
mov
ja
aas
inc
mov
pop
adc
pop
push
repnz
faddl
jae
jmp
push
jns
or
add
ja
push
jge
push
loop
popf
insl
inc
clc
out
inc
mov
arpl
adc
push
lea
jae
pop
mov
std
sub
insl
outsl
mov
jae
test
adc
in
sbb
inc
add
add
cmp
in
rcrb
je
cmp
sub
push
fisttpll
mov
divb
cmp
pop
add
mov
lock
pop
stos
xchg
push
cli
sbb
or
adc
orb
cli
push
iret
call
repnz
mov
jae
cli
jg
dec
leave
test
mov
sbb
shrb
jge
fldt
daa
add
cmp
inc
ss
jle
mov
sbb
push
cmp
mov
into
sub
push
mov
mov
test
adc
mov
push
ja
movsl
je
adc
jge
insb
ret
clc
push
rcrl
loop
xor
xor
sti
pushf
in
add
mov
clc
jne
mov
cmp
lock
pusha
jbe
or
sbb
clc
push
push
mov
in
xor
hlt
call
test
clc
jle
push
ljmp
and
adc
jle
push
jne
and
clc
jg
xor
clc
aaa
lret
xchg
sbb
or
insl
cmpsl
and
sub
and
mov
push
jo
hlt
jmp
sbb
cs
pop
cmove
or
cmp
adc
xor
add
lods
jb
pop
shll
loop
or
or
shrl
shr
adc
fimull
sub
icebp
or
pop
loopne
push
mov
mov
scas
sbb
mov
or
stc
adc
or
sub
imul
inc
loopne
scas
adc
pop
mov
cli
icebp
pushl
call
fsubrs
pushl
stos
sti
or
lods
mov
ss
pop
or
dec
mov
adc
cmp
push
incl
mov
clc
mov
mov
nop
fwait
ja
jmp
into
imul
add
mov
mov
outsl
lods
enter
add
xor
lea
add
testb
sbb
lock
movsl
inc
incl
popa
sub
mov
mov
mov
ja
icebp
pop
xorl
movsl
xor
mov
or
and
push
jne
mov
rolb
mov
movsb
sub
or
mov
or
or
fld
ljmp
fsub
and
or
mov
sahf
mov
loopne
pop
jne
jle
pop
jne
and
fsubs
hlt
xor
or
mov
inc
pop
pop
aaa
or
jl
pop
or
jno
jbe
or
or
adc
sbb
sub
cmp
xchg
push
aam
add
jbe
movzwl
jge
inc
sti
xchg
fsubs
aam
mov
scas
and
add
mov
mov
call
in
lds
mov
pop
or
pop
jbe
mov
and
push
mov
mov
ret
mov
mov
mov
fistpl
in
shl
xor
loop
mov
or
les
or
xor
pusha
outsb
icebp
pushf
mov
pop
in
and
pop
fs
fldcw
sarl
inc
and
into
fldl
jno
mov
push
call
jns
into
dec
push
lret
adc
pusha
icebp
stos
xchg
and
into
adc
setns
cmpsb
sti
lock
push
push
iret
add
mov
into
mov
and
sbb
add
cmp
add
or
lret
xor
xchg
clc
cmp
mov
psubusw
lea
jns
movsl
add
lds
xchg
bound
xorb
in
loope
lds
movsl
pop
addb
test
push
fs
mov
bound
stos
shrl
xchg
punpckhwd
movsb
ss
mov
clc
ret
add
ret
cmpsb
call
lds
lss
cmp
dec
test
test
arpl
pop
inc
sub
popa
xchg
pop
dec
adc
mov
push
sbb
cs
add
mov
mov
or
pop
xorl
push
fsubl
inc
lds
in
mov
into
and
faddl
loop
and
add
mov
iret
xchg
mov
mov
in
bound
sbb
push
adc
test
pop
mov
insb
mov
sbb
ret
in
xor
push
insl
cmpsl
sub
inc
jmp
shll
jge
push
mov
daa
xor
dec
dec
insb
adc
add
xlat
cmpsl
addr16
jb
push
sbb
xchg
imul
cltd
scas
jmp
clc
or
fcoms
push
or
or
mov
or
mov
xor
imul
push
clc
mov
addr16
nop
inc
inc
push
mov
mov
addl
scas
into
push
push
lret
push
pusha
pop
int3
pop
cs
jle
push
xor
rolb
sub
lock
jae
mov
repz
add
inc
xor
jle
dec
push
push
mov
in
push
mov
mov
mov
dec
or
lea
or
mov
fucomp
leave
jne
mov
mov
jo
dec
and
push
jb
mov
mov
rolb
orl
pusha
hlt
cmp
push
insl
fldt
xor
push
stc
add
mov
test
push
xchg
and
push
xchg
cmp
mov
lods
ds
shr
xor
add
repz
add
adc
mov
mov
inc
push
rolb
jecxz
mov
loope
aad
or
jmp
mov
jecxz
idiv
jne
or
jbe
je
xchg
xchg
rcrb
inc
pushf
inc
inc
pop
aaa
lock
popf
rcl
iret
sbb
pslld
or
push
pop
or
mov
jle
movsl
sbb
dec
add
aas
add
test
add
out
andb
mov
jmp
jnp
pop
push
inc
lods
dec
add
mov
cmp
cmpsb
call
in
out
push
ss
mov
push
aaa
nop
add
pushf
pusha
jg
js
dec
mov
sbb
jne
xor
inc
push
rol
mov
adc
xor
dec
aad
in
add
xchg
push
jl
je
dec
lock
faddl
lock
or
repnz
roll
add
push
and
mov
mov
cmp
pushf
jl
inc
cli
std
loopne
inc
push
and
mov
int3
add
sbb
adc
pop
sbb
sbb
sbb
push
and
sbb
cmp
sub
jnp
inc
add
call
sbb
jo
inc
les
jnp
inc
test
and
add
push
js
push
cmp
insb
inc
add
jo
js
add
mov
or
cmpb
hlt
ds
or
mov
sbb
sbb
lahf
cli
lcall
adc
push
or
daa
aam
mov
xchg
xchg
jg
lds
loop
add
xchg
adc
inc
or
cmp
jae
xor
cmpb
loope
pop
add
nop
inc
mov
push
inc
sbb
xchg
add
and
pop
xor
repnz
inc
add
xor
sbb
adc
xor
xor
or
cmp
xor
xor
xor
sub
int3
repz
or
inc
add
int
stos
lret
inc
add
rcr
mov
imulb
data16
inc
sub
dec
push
js
push
pop
adc
inc
scas
scas
fwait
pop
in
add
push
imul
adc
xor
jne
inc
shrl
dec
pop
push
shll
jo
mov
xor
pushf
cmpsb
scas
mov
shll
ljmp
roll
add
push
mov
scas
sub
stos
push
decl
mov
mov
in
cmp
insl
lcall
or
xor
shrl
adc
dec
add
add
aas
test
adc
add
outsb
or
mov
outsb
xor
jo
popa
xlat
aad
daa
cmp
inc
popl
icebp
jp,pn
cwtl
rclb
fmuls
pop
orb
jmp
dec
jbe
or
dec
xlat
cld
adc
daa
push
movb
vmread
jne
jbe
nop
add
sbb
add
jae
filds
push
inc
insb
outsl
jae
add
add
addl
daa
add
inc
sbb
add
xchg
dec
jg
adc
rcrl
mov
inc
jb
jb
add
gs
repz
xlat
mov
xor
jae
jne
outsl
push
adc
imul
imul
add
cmp
mov
push
adc
mov
pop
test
shll
je
cmp
mov
insl
inc
dec
inc
push
dec
inc
dec
push
inc
stos
pusha
mov
mov
ss
jecxz
inc
lcall
pop
mov
push
mov
add
insb
jle
fcmovb
and
xchg
or
push
cli
loope
pop
pop
add
add
mov
gs
mov
or
outsl
jbe
mov
es
popa
adc
lods
loop
pop
push
pop
push
xorb
add
imul
mov
sub
outsb
or
pop
in
insl
in
mov
int3
add
mov
push
cmp
and
xchg
cmp
arpl
jbe
or
or
js
lret
dec
or
xchg
pop
dec
pop
inc
je
bound
pop
dec
add
int
lods
insl
adc
pop
aas
std
outsb
or
scas
je
and
cmovno
fstpt
insl
lea
bnd
or
jmp
fwait
subl
popf
cmp
out
or
pop
and
add
fwait
popf
lea
or
xor
clc
mov
out
je
jo
mov
outsb
fisubrl
data16
addl
imulb
repz
xor
jp
xchg
xchg
fistpll
push
xlat
jg
sub
inc
jns
repnz
cli
add
loopne
add
jp
outsl
mov
add
imul
fucomp
xchg
rorl
pushl
jbe
insb
xor
push
notb
daa
xor
mov
push
dec
adc
imul
sbb
mov
test
sub
add
mov
outsl
or
jo
outsw
inc
addl
add
decl
and
add
fstl
adc
pusha
sub
push
arpl
cmp
xchg
imul
ja
out
dec
add
pop
mov
int3
xor
popa
cld
mov
and
stos
pop
pop
cmp
in
and
xchg
js
call
outsl
mov
scas
jae
push
scas
scas
aam
data16
lods
test
daa
dec
xchg
adc
stos
lgs
lcall
pop
adcl
incl
sub
push
mov
mov
rcl
mov
incl
xchg
add
test
rcl
int
orl
lock
push
add
mov
lods
ja
shl
jae
daa
inc
mov
packsswb
or
and
les
jnp
js
pop
jns
push
push
or
mov
mov
sti
mov
scas
cmpsl
cmp
bound
je
dec
lock
push
dec
dec
push
sub
dec
inc
inc
jns
pop
push
add
fsubs
jne
sub
hlt
push
cwtl
daa
das
xchg
insl
inc
mov
mov
cmp
cmp
pushl
incl
idivb
mov
mov
dec
mov
iret
out
in
mov
jae
mov
sbb
call
loop
jns
pop
add
sub
aaa
rol
loop
rcll
idiv
add
adc
sub
daa
mov
into
jl
add
imul
aas
cmp
xor
xor
das
mov
xchg
add
mov
lock
inc
pop
int3
icebp
push
push
andb
mov
int3
sbb
sub
imul
cmc
mov
mov
in
lret
hlt
out
jl
jmp
daa
or
mov
pusha
fs
or
xchg
mov
sub
pop
xor
add
xchg
call
enter
pop
test
leave
jle
scas
adc
in
loopne
jl
fldenv
stc
int3
adcb
aas
mov
mov
inc
fsubs
and
mov
stc
scas
push
fsubrp
push
call
in
and
andb
out
mov
fldcw
dec
inc
jge
in
stos
xor
popa
in
ljmp
inc
loope
into
stos
xchg
mov
xor
std
in
inc
xchg
push
int3
mov
scas
lock
pop
negb
inc
repz
pop
js
pop
lret
nop
shl
mov
mov
cs
psubw
ret
gs
sahf
sahf
es
sub
lods
aad
dec
hlt
mov
outsb
cmpsb
xor
inc
aam
sbb
cld
lret
leave
into
and
outsl
pop
ret
or
imulb
pop
repnz
aas
inc
sahf
scas
faddl
loope
adc
xchg
pop
sti
cmp
gs
mov
mov
outsl
add
xor
pop
and
sbb
loope
cltd
jg
decl
lahf
mov
push
int3
fimuls
xchg
addl
in
call
sub
mov
movsb
jg
loop
mov
nop
add
xor
int
mov
loopne
enter
lahf
push
jmp
test
push
bound
out
xchg
loope
addl
cmpl
sub
negb
aad
pop
inc
daa
dec
cld
push
push
ja
ret
jle
xchg
push
test
dec
shlb
ljmp
out
daa
jg
pushl
nop
ljmp
jle
add
rclb
mov
pop
call
psubq
icebp
xor
daa
push
push
dec
sbb
add
sbb
jg
lahf
adc
xchg
pushl
movsl
inc
dec
xchg
repnz
xor
or
mov
ret
mov
test
jg
xchg
ss
xor
call
jno
movsl
mov
lcall
lahf
and
out
jae
outsl
sbb
dec
xor
repnz
add
xchg
mov
test
call
pop
repz
loopne
out
scas
xchg
incl
and
sbb
adc
xor
sbb
leave
push
or
movsl
pushl
cmpsb
imull
pop
adc
pusha
mov
js
ljmp
jo
lret
shrl
xchg
mov
push
shll
push
sbb
jne
lock
or
and
or
adcb
sub
test
mov
fs
pushl
pusha
fsubrl
out
push
roll
lret
lret
cmp
inc
lock
in
dec
push
incl
fisttps
dec
adc
mov
mov
jns
add
mov
xlat
fistl
test
mov
push
jae
aas
fs
jecxz
int3
hlt
insb
clc
call
enter
or
movsl
filds
movsl
pop
mov
cmpsb
dec
sbb
pop
or
fisubrs
jecxz
ljmp
cmc
inc
push
adc
aas
push
clc
icebp
jl
iret
jnp
push
gs
aad
sbb
jno
or
lcall
adc
adc
jecxz
test
pop
into
mov
fisubrs
call
jo
push
cmpsb
pop
test
aad
mov
pop
into
call
aaa
cmp
mov
std
jmp
into
cs
dec
pop
push
jno
ret
jne
outsl
jle
adc
bsr
das
pop
inc
mov
clc
mov
push
fcmovnbe
mov
insl
shrl
or
sub
stos
test
mov
cmpsb
imul
push
test
ljmp
cld
pop
sbb
jns
out
push
ja
sub
popa
push
fcompl
jg
arpl
inc
orl
mov
inc
stos
shll
sbbb
jge
adc
lcall
fisttpl
pop
jb
es
inc
mov
xchg
stc
cmp
cmc
lcall
add
inc
int3
adc
push
decl
sub
fcmovnbe
fsubrs
push
jno
sub
call
jg
xor
inc
and
test
in
and
adcl
in
call
cmpsl
mov
sub
fstps
jg,pt
mov
xchg
push
push
pop
pop
xchg
bnd
jmp
int3
jmp
xor
sti
mov
jb
sbb
adc
jp
jmp
int
jecxz
mov
imul
out
mov
fldenv
jb
adc
sahf
or
and
out
rcl
or
call
xor
loop
push
push
or
xor
jmp
mov
ret
je
lret
mov
pusha
dec
pop
aad
lcall
mov
addl
aas
cmp
stos
dec
cmp
mov
repz
decl
pop
fcmovne
fdivs
pop
mov
mov
aas
jge
cwtl
adc
jle
int
xorb
fs
psubq
mov
push
insl
clc
ss
sarl
cli
bnd
cli
pushl
lods
adc
jne
add
ds
les
movsb
mov
call
or
mov
rcll
ljmp
test
lahf
inc
and
dec
je
pop
outsl
jo
adc
cmc
out
push
dec
stos
stc
pop
loop
lcall
mov
push
icebp
xchg
pop
rolb
fistl
je
xor
imul
das
push
loop
sub
stc
lock
fnsave
cltd
cmp
test
ljmp
adc
push
push
xchg
mov
xchg
adc
sbb
inc
clc
aaa
jb
push
mov
jmp
outsb
push
adc
ret
add
cmp
data16
pop
sbb
sbb
call
add
loop
xchg
xchg
or
dec
cld
adc
out
mov
cmpl
inc
incl
pop
in
test
into
mov
jmp
adc
fxam
jecxz
dec
test
mov
cmp
sbb
fsincos
jecxz
push
repz
shll
jns
lcall
lret
test
push
push
fwait
cld
sub
sub
outsl
inc
icebp
pop
sub
cmpsb
frstor
dec
sbb
push
xchg
ljmp
cmp
and
mov
push
cli
js
xor
push
xlat
sub
cmp
xchg
cmp
fildll
fists
sbb
ljmp
mov
add
icebp
lcall
xchg
das
add
das
addr16
aam
push
ret
ja
inc
xchg
mov
pop
or
test
dec
mov
insb
fwait
push
dec
scas
cltd
out
jle
mov
sbb
dec
inc
pop
push
jl
movsb
sub
call
scas
div
dec
out
stos
jge
cmp
mov
cli
inc
xor
hlt
mov
mov
lcall
test
mov
jne
push
add
dec
mov
xchg
xor
mov
mov
xchg
mov
cld
xor
ret
dec
lea
mov
out
mov
ljmp
movsb
ss
repnz
push
fwait
into
fsubrs
pusha
pop
frstpm(287
js
mov
adc
push
clc
decl
xor
fdivs
lcall
outsl
or
or
push
pop
out
or
jg
sub
push
cmc
out
mov
xor
ljmp
sti
mov
popa
sbbl
or
sbb
pushf
sbb
mov
or
dec
or
fildll
sbb
or
push
ficoml
dec
jno
mov
and
outsl
popf
push
push
loopne
xor
lcall
test
mov
cmpsb
dec
push
push
add
js
pop
ss
and
cld
pop
loopne
mov
arpl
test
jg
mov
ljmp
loopne
and
push
adc
std
call
fwait
sbb
loope
pop
decl
std
psubusw
adc
mov
xor
shlb
cs
dec
jns
jae
cli
xchg
jb
push
int3
sbb
in
stos
loopne
sub
push
push
jmp
test
decl
mov
mulb
ja
inc
push
dec
cmp
jg
lcall
sub
xchg
stos
xlat
test
push
clc
repnz
jge
cmc
lea
cmpsb
jmp
jbe
adc
pop
and
loope
jne
inc
cli
mov
jmp
lcall
push
ss
inc
xchg
cmp
push
jecxz
xor
xor
sub
xor
jne
pop
into
dec
imul
push
call
adc
fildll
ficoms
in
sub
push
add
aam
std
call
mov
mov
sbb
or
adc
and
incl
lock
pop
inc
fistl
sti
pop
ja
repz
lock
leave
mov
inc
jmp
test
xorb
xor
lods
sbb
imul
cli
sub
ret
xor
dec
sub
jmp
push
adc
push
inc
int
jg
mov
xchg
pop
cltd
and
sahf
ljmp
pop
call
mov
xor
xor
cmpsb
ljmp
call
mov
outsb
xchg
rcrl
jg
das
mov
sbb
out
inc
jno
jno
xchg
aas
pop
pop
ja
fsubp
stc
inc
pusha
loopne
in
call
movsl
inc
jecxz
add
ret
cmp
pop
inc
push
xchg
jmp
xlat
fdivrl
add
mov
or
xchg
clc
jle
cmpsb
les
inc
mov
cmp
xchg
mov
iret
add
stos
call
aam
add
pop
push
mov
add
lcall
nop
repnz
xor
inc
sbb
or
out
call
jno
in
aaa
lahf
dec
inc
cmpsb
and
popa
cld
out
and
fimuls
adc
mov
call
sub
in
in
mul
adc
push
rcr
pop
push
fld
rcll
es
test
iret
lret
js
test
inc
xchg
movsl
dec
testl
sbb
push
jg
push
scas
shrl
inc
ds
inc
jnp
sub
fldt
std
adc
and
push
push
test
cld
lcall
lcall
call
or
mov
enter
xchg
inc
mov
incl
jb
ja
adc
clts
sar
ljmp
scas
mov
jge
incb
in
pop
and
or
jnp
dec
or
mov
das
sub
lcall
cmp
add
popa
sarb
mov
mov
sub
sub
clc
sarl
sub
sbb
or
pusha
stos
xchg
push
ss
inc
jp
test
call
dec
ljmpw
insl
mov
lea
pop
mov
jmp
xlat
mov
cmp
jmp
andnps
xchg
cmp
call
sbb
addb
lahf
xchg
jmp
ret
and
add
imulb
cmp
inc
xor
dec
sahf
sbb
test
adc
incl
mov
adc
inc
and
decl
sbb
lods
js
or
xor
add
mov
pop
out
sbb
scas
call
fistpl
fs
add
shl
aad
lds
dec
sbb
loop
incl
mov
fwait
test
adc
and
clc
cmp
int
xchg
incl
pushl
repnz
sbb
add
inc
lds
ljmp
cs
imul
in
imulb
fistpll
sbbl
es
adc
leave
mov
outsb
lret
mov
call
add
out
cmp
loop
ja
xor
pop
mov
testb
notl
mov
outsl
inc
icebp
movsl
pusha
pop
lock
scas
cmp
fsubl
dec
pop
ror
lahf
arpl
stc
rol
inc
and
inc
sbb
ljmp
sub
std
jp
nop
xchg
pop
mov
xchg
mov
mov
paddd
sbb
out
outsb
or
dec
adc
jnp
jle
push
gs
mov
adc
push
mov
push
mulb
jno
mov
je
ret
push
xchg
retw
insb
xor
adc
add
je
lea
xchg
stos
sub
mov
dec
lds
jp
ret
inc
cld
xchg
mov
add
in
mov
mov
cli
std
inc
fcmovb
xchg
lcall
aaa
ret
cmp
and
dec
inc
outsl
sub
insb
xor
pop
inc
and
scas
incl
pop
dec
pop
and
cmp
mov
xchg
aam
mov
sbb
or
sbb
dec
call
ljmp
push
lds
dec
xchg
pshufw
in
iret
xor
pusha
mov
loop
decl
hlt
xor
cmpsb
xlat
imul
aad
xchg
xchg
cmp
fists
mov
ror
mov
pop
pop
mov
std
cmpsl
cmp
lret
pop
cltd
pop
adc
sub
mov
inc
ret
add
jmp
shll
jb
push
negb
incl
pop
push
je
push
shl
fildl
sbb
lahf
lret
sbb
cmpsb
jns
jo
add
ja
mov
orl
inc
ret
sbb
ret
jle
in
mov
or
lcall
jns
mov
dec
adc
inc
add
subl
inc
fnstcw
push
std
add
add
jns
jb
sbb
call
or
cmp
in
je
sub
jg
mov
push
loopne
cli
enter
mov
dec
inc
jb
iret
adcl
mov
and
push
jg
mov
and
dec
add
jmp
pushl
mov
mov
pop
jae
xor
jae
aad
xchg
ljmp
or
dec
cs
shll
and
std
insl
fidivrs
decl
inc
mov
push
xor
cmp
inc
xor
pop
cmpsl
insb
pop
test
call
push
test
inc
test
xchg
test
xor
call
rcll
cltd
jns
mov
cmpsl
outsl
faddl
mov
dec
pop
mov
movsl
loop
xchg
mov
sbb
fildl
lds
xor
add
aaa
test
inc
adc
mov
jmp
leave
mov
add
mov
jg
adc
dec
cmp
jge
lahf
dec
ss
xchg
or
fwait
loope
sbb
push
aas
cmc
outsl
jg
stos
in
push
jno,pt
ret
aas
pop
mov
pop
pop
popf
mov
push
cmpsb
sbb
mov
or
cld
jmp
popf
cmp
and
leave
push
cmp
loopne
enter
incl
mov
and
les
add
mov
popa
in
xor
mov
movsl
or
lea
loope
test
rcll
inc
dec
mov
jmp
adc
lret
ret
shrb
mov
pop
dec
test
xchg
daa
dec
xlat
loope
fldenv
fnstsw
pop
mov
lahf
stc
or
bound
mov
and
lods
mov
jg
scas
fdivrs
jo
mov
jg
mov
push
test
mov
gs
das
add
and
div
mov
repz
add
adcl
fsts
out
lcall
inc
lock
adc
add
mov
push
adc
dec
add
push
push
jno
dec
add
hlt
cmpsb
add
add
xchg
fsubr
dec
or
std
stos
add
xor
idiv
das
je
cwtl
cmpsb
sub
ret
add
add
lcall
and
sub
and
mov
inc
dec
jnp
inc
jl
mov
xlat
hlt
pop
push
jnp
negb
add
jmp
ds
inc
xor
dec
push
sbb
out
cs
pushl
cld
in
rorb
jl
mov
cmp
out
add
fisubrl
or
lock
pusha
cs
xchg
cltd
push
dec
orl
mov
and
ret
cmpsl
fst
sbb
cli
mov
out
loop
mov
xor
clc
sbb
or
lcall
aaa
mov
xor
sahf
dec
imul
mov
pop
mov
xor
cmc
incl
mov
jmp
adc
pop
mov
dec
das
lds
or
or
loopne
push
jp
push
mov
cs
aam
ljmp
scas
mov
inc
sbbb
and
push
sub
fcmovnbe
sub
inc
subb
cld
xchg
imul
mov
cmp
cmp
push
fistpll
jo
movsb
sbb
sti
pop
js
add
mov
push
push
ljmp
ljmp
jae
lods
dec
cli
mov
inc
dec
push
in
xor
pop
inc
push
mov
mov
pop
cmp
mov
jle
inc
dec
mov
and
or
cmp
sub
mov
or
dec
movsb
shlb
lock
mov
lcall
add
outsl
or
jge
add
or
lcall
dec
push
incl
jg
add
cmp
inc
cmp
movsl
jg
pop
cld
add
ror
jb
jge
mov
and
cmp
aas
xchg
sbb
mov
dec
add
rolb
adc
adc
dec
cld
pushl
pop
jp
push
cmp
xor
lcall
mov
jne
dec
in
into
in
jbe
test
call
pop
int
rcr
jns
sahf
and
fisubs
mov
pusha
push
pop
inc
pop
inc
inc
pop
loopne
inc
add
mov
jle
lahf
push
jmp
cmp
insb
mov
xchg
and
mov
mov
outsl
icebp
mov
adc
sbb
or
push
xchg
testb
fisttpll
mov
lret
into
lds
jg
mov
stc
sbb
pop
push
ja
dec
je
jecxz
hlt
in
out
test
inc
cmp
inc
xor
mov
push
or
sub
into
lock
loope
adc
pop
aad
js
ljmp
popa
and
mov
rolb
or
in
ljmp
and
jnp
xor
lcall
in
sub
jle
shlb
mov
gs
ret
mov
incl
ljmp
and
shl
clc
bound
dec
dec
lcall
mov
scas
push
mov
out
xor
pop
cmp
dec
insb
cld
decl
mov
insl
lret
cmpsb
push
loop
xchg
inc
js
imul
xor
inc
cld
pop
mov
push
aaa
stc
push
ret
mov
dec
or
andl
aaa
out
sub
loopne
lcall
jbe
mov
xor
adc
imul
in
test
int3
jp
push
sahf
jecxz
sar
xchg
xor
roll
and
decl
jb
or
leave
push
insl
and
cmp
popa
or
std
dec
lret
cmpsl
jecxz
sbb
xchg
push
incl
xchg
stc
insl
or
clc
outsb
cmp
and
call
not
push
sub
idivl
call
mov
sub
shll
mov
pop
jae
in
ds
jmp
pop
sub
les
xchg
and
ljmp
shll
or
mov
push
ret
in
in
mov
jle
shll
pop
std
pushl
imul
outsl
pushf
insl
gs
test
cmpsb
or
std
mov
fidivrl
pop
xchg
cmp
mov
xchg
xchg
jbe
adc
lea
inc
pop
or
mov
enter
fmull
aaa
and
pop
insl
mov
addl
xor
faddl
add
jb
dec
and
pushf
lock
decl
call
xor
aam
xor
mov
pop
movsl
jo
add
push
cmp
icebp
mov
aam
push
sbb
scas
pop
js
mov
pop
pop
lods
fdivs
call
inc
sub
cmp
fildll
gs
bound
loopne
clc
jmp
dec
pop
leave
out
lret
leave
push
xchg
inc
add
cli
inc
jns
js
mov
scas
std
push
cmp
sar
inc
mov
xor
xor
imul
ljmp
xor
mov
add
pop
in
and
test
sbb
ret
popf
popa
jae
hlt
dec
out
jge
or
pop
cmpsb
or
outsb
pop
mov
or
mov
jmp
add
xchg
inc
arpl
xor
pop
inc
sbb
xchg
fsts
fldt
dec
sti
pushl
or
data16
xor
mov
decl
push
cmp
lods
dec
fcomps
pop
mov
adc
jg
ds
xor
sarb
out
jno
ret
loope
pop
push
cmp
sbb
dec
lret
clc
sub
incl
mov
rcll
and
insb
jae
mov
mov
pushl
ret
pop
pushf
lret
shrl
outsb
xchg
les
add
pushl
mov
sti
sub
inc
and
lcall
lods
insl
pop
mov
aam
dec
mov
imul
imul
mov
xchg
adc
sbb
inc
shr
mov
adc
mov
or
lock
mov
cmp
cmp
fsubrl
decl
jae
jo
jns
loopne
mov
mov
popf
xchg
test
jae
cmp
decl
push
movsl
mov
out
mov
adc
test
jecxz
mov
jnp
cli
jmp
fs
adc
ffreep
cmp
in
fcompl
push
dec
add
call
out
and
push
icebp
inc
stc
jnp
jg
out
or
sbb
and
sbb
add
in
imul
stos
dec
fnstcw
xor
sahf
gs
and
outsb
and
sub
stc
adc
sub
mov
clc
es
stc
das
scas
jmp
mov
mov
xor
lahf
cmp
lock
add
or
mov
push
dec
cmp
adc
icebp
fcompl
fiaddl
jp
mov
lahf
aam
xlat
pushf
hlt
je
cmc
xchg
dec
test
add
jns
loop
icebp
aaa
mov
cmp
sti
push
xor
idivl
push
lcall
ud0
mov
sub
sub
or
nop
push
push
cwtl
cs
repnz
clc
fisubrl
mov
call
xchg
and
xor
push
mov
sbb
xor
sbb
mov
call
insl
cli
mov
push
testb
sbb
adc
push
push
pop
jb
decl
inc
jae
fdiv
outsb
test
cmpsl
xor
int
mov
call
mov
rclb
jb
movb
outsl
add
out
rclb
sub
arpl
lcall
stos
mov
jle
cs
dec
inc
or
data16
sti
jae
mov
out
mov
add
cli
lret
push
cmp
or
shll
idivb
cmpsb
xchg
in
mov
sbb
mov
lea
mov
into
inc
dec
mov
cld
dec
push
sub
lcall
mov
sbb
popa
mov
pop
sub
cmc
inc
das
bound
dec
in
int
out
pslld
stos
les
std
call
adc
mov
mov
or
and
lcall
jae
xchg
out
adc
push
xor
lcall
and
iret
inc
push
test
or
roll
pop
mov
jb
movl
sbb
les
inc
test
fnsave
scas
inc
dec
jbe
xor
shrl
jg
out
pop
inc
loopne
ret
jo
dec
mov
mov
jg
repnz
mov
jns
ret
cmpl
das
je
mov
xor
sub
inc
decl
das
or
cli
mov
jmp
mov
icebp
into
xchg
lcall
icebp
pushl
pop
ljmp
cmp
push
jecxz
lds
fisttpl
or
out
sub
call
fmuls
inc
sbb
push
xor
call
out
dec
sbb
pop
mov
and
in
adcb
xor
or
fst
inc
ss
jbe
call
inc
hlt
leave
stos
sub
mov
xor
jnp
mov
fucomip
test
or
iret
add
mov
pop
xchg
decl
lods
sbb
rorb
cs
scas
repnz
pop
cmp
push
add
incl
adc
bound
inc
call
inc
adc
jns
sti
outsb
push
lea
sub
sub
sub
std
or
push
mov
in
inc
fiadds
adc
mov
ljmp
imul
adc
aad
xor
mov
cld
incb
call
test
ljmp
movsb
mov
outsb
mov
jle
cmp
or
ljmp
hlt
decl
dec
push
mov
xchg
jl
cs
lahf
xor
mov
mov
sbb
andl
dec
icebp
pusha
jg
xchg
add
fistpl
outsl
lock
stc
ja
arpl
lahf
pushl
movsl
xchg
mov
in
orb
call
inc
jmp
repz
das
imul
pop
ret
mov
enter
adc
pop
xor
inc
into
xchg
push
jmp
mov
repnz
adc
ror
fsubrl
mov
jg
push
and
dec
int3
movsb
in
repnz
and
icebp
in
aas
inc
shr
ljmp
sub
add
mov
outsl
adc
cli
loopne
and
xchg
jmp
cmp
outsb
lock
loop
call
decl
ficomps
mov
in
push
add
cwtl
cltd
cli
ljmp
fdivp
idiv
xor
xchg
cli
and
mov
out
into
sub
jge
call
mov
loope
loopne
push
inc
out
mov
add
and
out
icebp
neg
pop
sahf
mov
idiv
sar
jmp
stos
clc
mov
fistpl
push
mov
xchg
or
mov
ja
add
clc
lea
mov
cmpsb
fdivr
sbb
into
dec
push
insl
mov
test
fwait
pushf
jg
mov
icebp
test
pushf
sub
dec
lret
and
test
pushl
paddsb
bnd
sbb
xor
mov
xor
sbb
addr16
aas
test
aam
in
cmp
pop
cmp
or
pop
fmull
inc
incb
into
xor
outsb
imul
push
and
inc
stos
int3
imul
inc
in
adc
stos
jecxz
push
je
jmp
mov
bound
pushf
pop
mov
pop
rcr
addr16
mov
push
push
les
hlt
mov
adc
or
xchg
dec
jecxz
enter
or
call
push
outsb
popf
inc
out
ja
mov
lret
fwait
sub
mov
push
rorb
popa
stos
loope
es
stos
data16
xchg
pop
push
popa
jl
lock
ljmp
icebp
pushl
inc
adc
push
dec
xchg
sahf
ret
outsl
sbb
insb
mov
push
ljmp
cmc
incl
ja
cmpsb
movsl
jae
mov
popa
xor
sti
cmp
ljmp
out
and
fmul
gs
aas
push
xchg
pop
inc
dec
jmp
pusha
sub
ffree
push
mov
das
mov
xchg
jp
xchg
mov
jge
jno
pop
dec
jge
xchg
dec
inc
decb
jp
decl
lods
xlat
jecxz
cmp
jbe
subb
es
in
or
repnz
pop
jmp
test
fisttpll
add
lret
pop
jp
test
loopne
in
xchg
jge
add
adcb
mov
ljmp
dec
pop
pop
xor
fsts
sbb
sub
push
cmp
pop
loopne
dec
mov
sbb
mov
dec
sub
mull
addr16
inc
decl
sub
jns
xchg
mov
mov
sub
aaa
aaa
insl
mov
sbb
fdivp
dec
ljmp
or
cmp
ds
test
jge
mov
mov
mov
outsb
lods
jecxz
pushl
clc
jb
hlt
rep
outsl
sarb
leave
cltd
xchg
insl
pop
mov
imul
push
mov
fisttpll
push
cmpsb
pop
fwait
push
push
fsubrl
mov
sar
lahf
mov
loopne
lcall
adc
xor
push
sub
scas
mov
cmpsl
xchg
pop
xchg
push
lods
push
mov
lds
mov
iret
dec
in
and
test
inc
xorb
cmp
cmp
cli
lcall
push
mov
jb
sbb
out
or
cwtl
sarb
arpl
or
out
test
pop
jp
adc
test
lcall
pushf
ret
inc
hlt
mov
adc
bound
neg
xchg
in
jae
xchg
mov
or
dec
dec
shll
pusha
popf
int3
sub
das
jle
or
inc
nop
ds
ljmp
or
rorb
ficoml
ljmp
ljmp
insb
cmpsl
mov
push
div
jbe
jmp
movsb
sbb
imul
jg
push
lock
push
xor
cmp
mov
ja
add
aaa
outsb
ds
js
mov
mov
jns
fwait
add
jbe
add
mov
clc
lahf
jge
dec
fwait
jl
push
mov
cmp
push
mov
cwtl
sahf
mov
fwait
cli
jae
mov
sbb
sbb
ret
inc
jnp
xchg
int
mov
pop
out
scas
pop
aad
jge
or
sbb
pop
aam
fucomip
push
or
sti
lock
mov
stos
push
lret
mov
mov
lcall
lea
mov
pop
jecxz
mov
and
pop
and
adcl
popa
xlat
daa
jecxz
cmp
dec
jg
int
jno
std
call
cli
mov
mov
push
lds
push
sbb
std
mov
pop
inc
jno
mov
adc
popa
lea
lds
and
fists
pop
dec
ljmp
xchg
movsl
jb
imul
adc
fsubrs
inc
cmp
mov
xchg
aas
sub
xchg
dec
lret
jb
and
aad
mov
mov
adc
scas
pushf
movsb
push
aaa
fidivrl
add
cmp
loop
addr16
ds
imul
decl
call
mov
sbb
and
repz
sub
das
cs
cmp
into
daa
insl
inc
test
sarb
aaa
xlat
into
mov
xor
mov
add
and
jg
xchg
inc
cmp
jp
shll
and
jmp
jecxz
mov
jmp
stos
daa
shl
sbb
push
std
daa
aad
nop
cmp
or
jmp
add
mull
stos
add
lcall
mov
adc
popf
push
hlt
mov
fimull
xor
lcall
pushl
js
xor
nopl
and
push
out
mov
lcall
inc
insl
sub
call
lcall
inc
push
test
mov
insl
push
and
jp
mov
loopne
cmp
in
je
mov
imul
fbld
or
xchg
mov
xchg
nop
push
out
and
cmp
lcall
outsb
sahf
mov
enter
decb
fsubr
sbb
ja
and
push
gs
mov
xchg
mov
fistpll
out
or
mov
adc
sti
inc
pop
mov
adc
cmp
and
cmp
das
pop
cld
out
pop
jnp
cwtl
add
push
sahf
sub
push
incl
adc
xchg
pandn
sahf
ljmp
push
xor
jg
ds
mov
lret
sbb
loope
cli
inc
sub
out
jmp
les
and
inc
cmp
ret
cmp
mov
jmp
popf
test
jge
cmp
imulb
sbb
jmp
pop
lea
pop
fidivrs
inc
jg
jecxz
test
rep
add
arpl
sbb
or
add
stos
stos
xor
cli
dec
and
out
xchg
lcall
push
out
or
roll
cmc
decl
dec
push
shlb
mov
pop
push
outsl
dec
or
pop
stos
pop
ja
mov
andb
call
aad
add
jg
cmc
mov
jno
xchg
inc
inc
fwait
daa
fimuls
adcb
dec
or
jno
mov
cmp
push
fistpll
mov
insl
lcall
pop
shll
cmp
inc
outsb
adc
fadds
add
push
icebp
cltd
lea
push
or
aam
imul
sbb
inc
ljmp
aad
lret
inc
addb
inc
neg
cli
das
or
mov
sahf
mov
dec
loop
lcall
pop
and
rol
jns
push
cmp
pop
push
lds
xchg
jmp
cmp
pop
idivb
mov
xchg
sbb
dec
out
pop
adc
popl
jbe
call
sbb
xchg
pop
out
cmp
ret
jecxz
xchg
add
aam
pop
pop
mov
inc
repnz
inc
cli
test
jle
sbb
xchg
mov
push
call
cmc
les
and
fdivrp
es
xor
divb
mov
pushl
adc
lods
adc
ficompl
pushf
push
test
mov
aas
cmpsb
subb
pop
out
xor
shrl
sbb
mov
testl
push
jmp
dec
cmp
aam
push
fbstp
int
and
sti
jne
mov
pop
fdivr
cmp
clc
or
iret
shlb
xchg
imul
mov
in
loop
inc
pop
ss
jg
lods
pop
jmp
sbb
lods
lahf
cmp
fcoml
pop
notb
jb
pushf
dec
pop
pop
jp
dec
or
neg
ljmp
cmp
jg
adc
inc
jecxz
aaa
ret
incl
std
or
or
push
cmp
pop
std
push
pop
std
mov
inc
add
in
fwait
in
add
fwait
in
cmp
icebp
xchg
aaa
dec
repnz
fists
bound
in
fs
ss
mov
iret
xchg
push
push
cmp
mov
aas
lret
movsl
ret
scas
adc
outsl
insb
push
fsts
pop
aaa
pop
incl
aas
or
mov
jle
dec
xor
in
mov
dec
leave
xor
lods
mov
mov
pop
xchg
cmp
repz
pop
add
ss
ja
aas
in
call
les
mov
sti
adc
xor
pop
fisubrs
and
add
lock
arpl
ss
sbb
ljmp
mov
test
pop
lods
push
cltd
imul
pop
loopne
sbb
mov
jle
adc
ud0
jmp
ljmp
or
shrb
or
pusha
dec
movsl
outsl
sbb
pushf
xor
clc
lcall
daa
pop
insl
xchg
pushf
pop
xor
xorb
jl
pop
in
or
gs
pop
pop
into
movb
dec
pop
cmp
notb
xlat
sti
mov
add
out
das
sti
dec
fnsave
push
and
ret
mov
cwtl
outsb
mov
mov
out
and
sbb
shlb
add
fsub
orl
jmp
xlat
push
inc
mov
and
adc
jmp
repz
jg
stos
push
mov
add
sub
lea
sbb
mov
adc
jg
mov
cld
or
popa
and
decl
and
mov
xor
test
imul
jg
rolb
cmpsl
jecxz
aaa
jmp
ljmp
pusha
adc
jne
aam
push
test
lcall
jle
scas
adc
jl
lea
outsl
cmc
inc
popa
jb
mov
or
leave
adc
mov
aas
mov
pushl
add
adc
das
rcl
test
xchg
cmp
push
hlt
cmp
shl
inc
shll
push
cmp
sahf
push
scas
and
push
loop
jg
push
pop
mov
jno
je
lds
jge
lods
xchg
decl
scas
lds
jo
aad
mov
call
xchg
inc
xor
nop
push
add
mov
stc
or
push
pop
mov
sbb
clc
jp
pop
mov
pop
dec
or
negl
pop
pop
mov
hlt
inc
test
je
mov
imul
decl
dec
push
scas
roll
mov
sub
aam
adc
in
je
pop
fdiv
decl
repnz
mov
lods
das
jmp
pop
sub
jo
jb
int3
mov
ljmp
das
roll
std
jl
xchg
adc
mov
add
adc
sub
cmp
push
or
gs
pushl
hlt
adc
inc
call
push
leave
mov
sbbl
mov
inc
add
jg
mov
cmp
mov
fcmovne
stos
pushaw
js
dec
inc
adc
imul
pop
lret
ret
pushf
inc
decl
push
jo
push
or
xchg
int3
sub
inc
test
iret
sbb
fisubs
lods
into
xor
in
lcall
sub
imul
xor
xchg
mov
data16
decl
jge
and
sahf
out
push
pop
jp
aad
pushf
mov
or
mov
pop
mov
mov
jmp
dec
lods
add
scas
movsb
sbb
sahf
jecxz
push
pop
jae
stos
cmpsl
test
dec
mov
jg
jg
scas
int
cmp
push
das
test
add
pushl
pop
xchg
cmp
cwtl
inc
fisubrs
pop
add
mov
mov
lds
pop
incl
adc
out
mov
pop
mov
out
cmp
mov
fistl
pop
adc
call
dec
dec
xor
shl
shlb
or
pop
rcrb
mov
or
imul
push
imul
stos
add
dec
lock
dec
mov
mov
xchg
sbb
cwtl
insl
xchg
cmp
je
cli
adc
xchg
adc
sbb
mov
dec
bound
push
mov
and
fbld
pop
cmp
pop
in
adcl
cmpsb
out
idiv
pushl
aaa
in
fists
mov
add
das
fsubs
fs
in
dec
lcall
dec
cmpsl
mov
push
sbb
xor
pop
xchg
sbb
hlt
add
mov
jge
pushl
push
out
ficomps
push
cmpsl
cmpsb
mov
call
mov
idiv
dec
cmp
test
add
push
mov
push
push
adc
xchg
push
pusha
or
lock
mov
cmp
jns
add
fsubr
add
xchg
xchg
arpl
ret
push
lahf
fisttps
mov
je
cmp
and
stc
stc
repz
cmp
sbb
xchg
cmp
repz
insl
fdivr
push
add
push
mov
and
std
jmp
mov
divl
mov
xchg
jne
pusha
adc
dec
aaa
out
or
or
xor
es
in
sbb
ds
pop
sub
cld
jns
inc
add
push
add
pop
ja
or
rolb
std
stos
incl
popa
mov
pop
sbb
mov
ret
mov
cmp
jno
bound
movsl
subb
call
pop
repnz
daa
inc
aaa
inc
repz
cmp
ds
negb
sub
adc
cmpsb
insl
dec
test
add
stc
jno
ljmp
sub
cmp
movsb
or
repz
dec
lds
xlat
nop
xor
xchg
jecxz
dec
es
or
aam
ljmp
adc
aam
out
std
daa
cmp
push
bound
xor
push
pop
dec
push
imul
out
lret
cwtl
aad
popa
mov
clc
push
mov
outsl
hlt
dec
movsl
cmp
pop
mov
or
push
idivl
decl
stc
testb
push
stc
pushf
xor
scas
sub
dec
addr16
dec
ds
mov
inc
mov
call
aas
mov
jp
or
in
mov
out
or
cmp
inc
and
call
out
lea
scas
lods
data16
aam
mov
arpl
out
es
fucomip
call
mov
xchg
repnz
jbe
cmp
and
push
insl
fmuls
mov
lahf
xchg
pushl
push
xor
lea
mov
push
imul
ljmp
push
xchg
lcall
sub
inc
loopne
jp
mov
shr
leave
jno
adc
ds
jg
daa
and
dec
loopne
inc
mov
test
cld
dec
in
fsubl
lods
pushl
push
cmc
xor
pop
or
loope
popa
mov
je
push
fnstcw
fcmovbe
insl
cmpsl
mov
test
pop
mov
cwtl
outsl
add
mov
cld
mov
ja
jne
clc
inc
pop
das
popa
push
sbb
decl
decl
ljmp
cmp
cmpsl
add
mov
cmp
jge
fldcw
punpckhwd
xor
decl
push
sbb
icebp
add
loopne
out
aam
jns
lods
xor
jle
jb
mov
cmpsl
lods
decl
jbe
scas
push
mov
test
add
mov
pop
cmp
xchg
jmp
cwtl
sbb
jns
incb
lcall
mov
adc
xchg
jae
ljmp
pop
pop
fists
pop
in
nop
pop
push
inc
xchg
and
test
jmp
outsb
jg
push
loop
add
dec
std
scas
lods
test
sar
jg
mov
adc
out
sub
add
adc
ljmp
std
sahf
scas
aam
cwtl
stos
lods
les
cmp
push
pop
mov
mov
lock
decl
mov
lock
fcompl
xchg
mov
call
cltd
pushf
dec
jae
dec
ret
cld
mov
lcall
dec
inc
data16
mov
jb
addr16
or
xchg
inc
pop
decl
xor
into
lock
movb
sbbb
clc
mov
out
hlt
loopne
aaa
lock
sbbl
rcl
call
xchg
or
addr16
push
movsb
cwtl
addps
insl
add
adc
data16
xchg
cli
mov
lock
adc
push
lods
push
or
pop
push
and
popa
notb
mov
ljmp
fwait
and
sbbl
xor
pop
outsl
mov
add
push
fcmovb
aas
sub
xchg
inc
cmp
out
outsb
pop
cmp
jl
flds
jno
testl
or
ljmp
incl
outsb
sahf
mov
rcrb
stos
imul
incl
int3
inc
in
ja
hlt
sti
cmpsb
dec
jo
cmp
pop
jbe
aad
enter
cli
ljmp
or
sub
xchg
repz
cmp
out
ljmp
aad
rcl
fwait
xchg
sbb
mov
cmp
cmpb
mov
das
lock
fcmovnb
xor
iret
push
jb
inc
push
jmp
xchg
push
insb
xchg
jl
and
ljmp
icebp
fmull
mov
loop
pop
jp
xchg
in
mov
stos
mov
push
iret
inc
mov
lret
cs
sub
xor
pop
jnp
dec
std
call
mov
mov
xchg
mov
mov
sbbb
inc
lock
push
mov
ljmp
outsl
mov
fidivrs
inc
pop
outsb
repz
mov
and
adc
add
aam
mov
decl
inc
dec
sbb
jmp
test
les
or
push
add
lcall
ljmp
push
negb
mov
mov
cmpl
dec
mov
pop
ja
pop
jmp
adc
test
fbstp
mov
int
inc
fidivrs
push
jg
jg
pop
cli
les
mov
lcall
xor
cmc
ljmp
ja
and
mov
mov
pop
cli
sbb
cmpsl
movsl
jae
mov
jb
jmp
ret
cbtw
xchg
and
jbe
inc
dec
xchg
je
jmp
jns
movsl
xor
or
mov
call
dec
fldt
add
jmp
dec
in
lret
outsl
shl
mov
jae
xchg
jb
icebp
mov
movsl
push
sar
out
outsl
push
sar
jno
icebp
fistps
cmp
mov
xor
xchg
push
subl
stos
dec
stc
imul
int3
orb
sub
lcall
in
or
shlb
or
push
push
pop
ljmp
or
mov
in
mov
out
std
mov
rcrb
push
mov
int3
fldl
popf
repz
and
ja
mov
cltd
ljmp
mov
cmp
idiv
ljmp
inc
xor
add
cwtl
fs
jne
mov
pop
dec
loopne
dec
sbb
xchg
out
pop
dec
movsl
or
and
jp
jbe
movsb
add
add
decl
inc
aaa
aam
int3
xor
jo
call
mov
ds
es
pop
aas
jmp
enter
testl
subl
lods
stos
adc
sarb
popf
into
dec
idivb
xor
push
jl
jecxz
das
cld
lcall
std
lds
ss
insl
gs
dec
hlt
xchg
jne
push
pop
add
loopne
loop
incl
xabort
cltd
jmp
jae
cmpsb
repnz
mov
sub
jge
cmp
lcall
das
cmpsl
fists
inc
imul
mov
mov
out
push
iret
or
push
pop
pop
ljmp
pushl
insl
dec
jle
pop
sbb
stos
addl
xchg
or
jg
incl
cli
mov
lock
scas
jnp
sub
adc
cld
ljmp
inc
loope
test
push
add
fwait
xor
mov
dec
adc
jmp
ljmp
mov
call
aam
adc
adc
push
jb
arpl
out
int
dec
loop
dec
jmp
scas
jbe
dec
push
pop
addr16
ja
loopne
jne
jp
ffree
mov
jg
cmp
pop
cmp
rcll
push
dec
mov
mov
mov
adc
icebp
mov
adc
lock
mov
insb
jge
and
lods
mov
jnp
mov
fidivrs
inc
pop
pop
sar
jp
decl
outsb
jmp
jnp
movsb
rcrl
movsb
test
pop
cli
pop
js
xor
test
dec
int
mov
mov
pop
mov
ljmp
sbb
push
stos
rorb
cli
cmp
and
push
sub
test
xchg
push
pop
ss
ljmp
mov
dec
and
mov
cmp
test
add
sub
xor
call
jle
loop
stos
inc
sti
jo
sbb
insl
and
ja
rolb
push
xchg
xor
incl
push
pop
jo
mov
stos
test
jno
int
cmpb
int
push
ljmp
pop
arpl
ljmp
icebp
inc
or
lcall
rclb
and
sub
mov
xchg
sub
js,pt
jno
xchg
cld
sub
sarb
in
xor
xlat
jg
adcb
cwtl
push
xchg
adc
or
cmp
fnsave
in
adc
push
mov
sbb
ljmp
fwait
incb
lcall
aad
and
ljmp
or
cmp
iret
incl
pusha
inc
clc
sti
cmp
sub
mov
adc
dec
pop
outsb
jge
cld
out
jle
dec
filds
mov
std
mov
sub
stos
xor
test
mov
dec
jle
pop
xor
scas
sub
sbb
mov
jb
sub
mov
add
mov
lcall
arpl
push
mov
adc
push
jae
insl
aaa
fstl
sbb
and
fcoml
mov
xchg
lds
cmp
jmp
outsl
jg
xor
stos
pop
mov
jnp
sbb
pop
cmp
xchg
test
jmp
or
fiaddl
das
xchg
mov
add
lcall
or
icebp
aam
or
xchg
mov
cs
mov
sbb
mov
push
xchg
dec
pusha
dec
sbbl
mull
push
ljmp
cmp
adc
mov
cwtl
mov
pop
daa
pusha
push
lock
pushl
lock
imul
into
xchg
add
fisubrs
fdivrs
popf
jg
call
push
sub
arpl
mov
mov
decl
ficomps
push
sub
ss
enter
xchg
stc
mov
sbb
incl
mov
xor
je
jno
jb
ljmp
inc
loop
stos
jns
mov
mov
wbinvd
pop
push
jmp
mov
enter
inc
cmc
jne
cld
enter
loope
adc
aad
incl
cmp
mov
aaa
xor
pop
pop
cli
mov
lahf
outsl
xor
movsb
das
push
push
addl
mov
fldt
jnp
ss
int
dec
jmp
pop
pop
cs
and
imul
shl
dec
ret
pusha
incl
push
je
or
call
xorl
cs
xor
popf
je
adc
pop
dec
adc
movsl
stos
mov
mov
xchg
mov
xor
inc
icebp
rcr
xchg
fisttps
push
out
dec
sarl
data16
pop
je
xor
jecxz
cmp
stc
pop
clc
jg
enter
inc
pop
cmp
push
out
xor
sbb
push
push
xor
bound
sbb
pop
ljmp
decl
add
rcrb
xor
xor
pop
xor
jmp
stos
pop
jl
xchg
ja
in
xchg
mov
vmovdqu
clc
int3
movsl
arpl
inc
jb
sbb
and
sub
loope
aam
xchg
mov
popf
aam
and
cmpsb
or
pop
loopne
outsl
push
leave
cld
rolb
mov
inc
fadds
pushl
sbb
lea
xlat
jecxz
xor
movsl
mov
icebp
lods
out
scas
adc
or
xor
dec
inc
push
inc
or
lock
jp
mov
out
js
sub
stos
mov
rcll
fisubl
mov
xchg
sti
loop
xlat
pop
jnp
out
jmp
pop
stos
loop
adc
pusha
call
aaa
stc
dec
and
push
insl
cmp
mov
imul
and
cli
push
cwtl
popa
sub
and
pusha
daa
aam
inc
add
add
mov
cmp
jg
call
xchg
sbb
sub
fldl2t
mov
inc
pop
std
or
jns
add
pusha
push
out
outsb
leave
jg
mov
mov
inc
vsubss
pop
push
inc
test
jge
scas
lret
xchg
aaa
clc
lcall
sbb
fnstenv
mov
or
jmp
xchg
xor
and
sahf
push
mov
sar
call
jl
negl
cli
inc
fisubrs
inc
inc
daa
cmpb
std
adc
mov
pop
jb
aam
mov
adcl
push
jg
inc
mov
mov
mov
xor
lcall
pop
inc
cli
call
lcall
jne
fucom
outsb
mov
lock
fbstp
pushf
stc
and
neg
jns
xor
lcall
mov
insl
addb
mov
decl
add
mov
fcompl
scas
stos
popa
ja
sbb
pop
das
cmp
sbb
xchg
inc
imul
inc
pop
cmpsb
inc
push
push
outsb
lods
or
cld
pushf
xlat
inc
std
incl
aas
out
xor
and
bound
push
sub
mov
mov
pop
add
lahf
repnz
inc
cmp
insb
push
pusha
mov
decb
lcall
xchg
push
lahf
scas
stc
stc
xchg
cmp
shll
ljmp
jmp
sub
fucomp
cltd
pop
fs
and
jmp
pushl
jbe
or
mov
cmp
dec
xchg
adc
sub
stos
gs
add
fs
enter
decl
xchg
mov
pusha
pop
pop
xchg
movsb
xor
jmp
int3
add
lock
jnp
fiadds
mov
addr16
mov
rorl
dec
xlat
or
jg
outsl
in
push
cwtl
pop
xor
jecxz
rorb
data16
jg
pushl
pop
fisubrl
fidivs
shrl
sbb
mov
sbb
adc
outsl
scas
jle
sub
mov
cld
mov
add
add
outsl
cmp
jmp
adc
shlb
popf
bound
or
int
pop
jle
int
push
and
mov
jns
lret
ret
cld
decl
jecxz,pn
pcmpgtd
adc
add
inc
sub
loopne
les
data16
int
inc
pushf
repz
call
movsb
sub
jae
movb
movsl
xchg
cltd
cmp
dec
jmp
decl
mov
je
jno
sarl
rcrl
mov
jb
push
ret
ficomps
push
loope
mov
imul
js
in
jge
mov
sar
dec
incl
jno
xor
stos
adc
jmp
lea
jns
push
and
xor
cmpsl
pushl
lret
adc
mov
cld
sbb
or
or
addr16
cs
mov
ljmp
lea
fmuls
xchg
out
dec
icebp
sub
cmp
popf
js
pop
push
scas
sar
decl
in
adc
imul
jnp
mov
movsl
mov
jmp
xor
pop
movsb
adc
std
aaa
fdivrl
xchg
xor
leave
je
and
incl
jb
mov
stos
mov
fisttps
push
dec
mov
in
scas
insb
cmc
scas
test
dec
or
hlt
jg
xchg
lret
mov
aam
pop
movsl
sahf
out
xor
pop
xchg
push
pop
lcall
push
test
inc
out
packssdw
jle
adc
das
ret
inc
jmp
jo
shll
add
mov
repz
lcall
hlt
add
rolb
pop
mov
push
or
icebp
push
jg
xchg
pushl
dec
divb
lods
into
cmpsb
sbbb
pop
mov
sarl
lock
insl
sub
jp
aas
push
mov
inc
repz
call
decl
aaa
mov
xchg
test
jne
adc
push
mov
ljmp
pop
gs
pushf
push
or
adc
enter
push
push
inc
and
aaa
clc
inc
and
in
aad
scas
call
jge
into
into
scas
xchg
mov
icebp
cmpb
psubd
inc
aas
ss
dec
insb
jg
pushl
adc
sbb
add
dec
fdivrl
movsl
add
lcall
outsl
jl
cwtl
mov
jmp
jae
gs
scas
sti
pop
mov
push
adc
dec
jno
mov
mov
cmp
mov
aad
jle
mov
pop
arpl
enter
adc
inc
pop
xchg
lcall
jno
aad
out
decb
in
xlat
nop
movsl
subl
and
xlat
stos
cmp
out
cvtps2pi
enter
jl
adc
fcmovnb
mov
mov
loop
pop
adc
push
cmp
cmp
or
mov
and
scas
pop
inc
cmp
outsb
push
ss
jl
in
flds
add
mov
ror
scas
iret
cmp
pop
lea
and
sub
ret
out
test
fisubs
mov
sti
push
mov
pop
das
inc
push
jecxz
daa
loopne
cld
jg
enter
cmp
fnsave
pop
ss
xor
je
scas
mov
or
sarl
decl
and
dec
ds
clc
push
cmp
pop
and
mov
fwait
inc
sbb
mov
shll
jmp
xchg
xchg
jmp
adc
push
add
rep
stos
pop
pop
decl
jg
jmp
loop
jg
or
pop
xchg
adc
mulb
scas
das
loop
movsl
cmp
lahf
test
cltd
prefetch
or
lods
loope
and
lret
pushl
mov
mov
mov
jge
dec
jle
lods
test
inc
loopne
sbb
icebp
push
pop
into
and
imul
adc
push
dec
incl
cwtl
clc
xorl
xchg
lods
rorb
out
aas
jnp
das
ficomps
inc
mov
popl
ss
ss
push
push
dec
lcall
push
and
xchg
frstor
adc
test
push
dec
movsl
sbbb
decl
xor
out
lds
out
lea
cmp
mov
decl
dec
aad
dec
mov
pop
int3
enter
jmp
and
cs
xchg
mov
iret
and
and
jb
dec
xchg
add
mov
int3
cwtl
iret
add
loop
mov
sub
imul
ljmp
sub
cmpsb
rcrl
inc
repz
popa
mov
nop
ljmp
jo
inc
gs
test
cmpsl
in
cmp
jae
sub
fistps
scas
int3
popf
dec
fdivrs
jmp
pushf
pushf
adc
sub
sub
incl
sub
lods
mov
sub
or
add
jb
mov
inc
push
mov
decl
mov
es
loop
arpl
rorl
xchg
lds
pop
fldcw
dec
mov
aas
mov
xorb
pop
bnd
or
xchg
movsl
cmc
incl
sti
stc
push
jmp
pop
pushf
in
ret
aas
andl
jg
fldcw
das
insl
adcl
pop
inc
lret
ss
mov
and
dec
mov
push
inc
dec
outsb
sbb
out
sbb
test
pop
mov
lds
push
cwtl
push
sub
add
scas
fdivl
lcall
in
jl
xchg
mov
add
stos
cmc
ds
lock
mov
jmp
loope
mov
xchg
jge
dec
pop
aam
jle
popa
push
rcl
mov
outsl
mov
mov
cld
jecxz
and
aaa
push
incl
xor
or
xor
jns
sub
lcall
loope
push
jbe
lock
xor
push
ret
leave
mov
aad
hlt
or
and
cli
jge
adc
jg
ljmp
mov
cmp
sub
std
frstor
repz
cmp
sub
cmp
pop
or
popf
or
cmp
inc
test
push
divl
ljmp
lock
ja
divb
mov
adc
loope
pop
sbb
dec
cmp
sarl
shrl
adc
pop
clc
push
mov
inc
cmp
pushf
mov
cmp
adc
sbb
mov
adc
notl
jle
pop
aaa
inc
ret
xorb
incl
jmp
mov
jne
jge
test
push
leave
pop
lret
mov
xor
mov
mov
ja
pop
dec
roll
ljmp
add
xchg
push
sub
mov
xor
fwait
jb
call
sahf
jbe
ljmp
jo
pop
aaa
lods
lock
mov
or
mov
jmp
movsb
out
mov
cwtl
xchg
or
incl
jae
adc
sub
lea
inc
out
push
push
cmc
dec
in
jmp
in
adc
push
jb
call
xor
adc
push
sbb
push
aaa
bound
movsl
jg
insl
jg
jmp
out
leave
push
out
mov
out
pop
jmp
adc
leave
js
mov
or
or
mov
mov
sub
inc
lods
incl
cmpl
dec
cwtl
in
wrmsr
push
aad
push
pushf
call
cltd
sub
mov
jl
push
incb
inc
push
mov
mov
xchg
les
adc
add
pop
pop
or
not
fucomip
or
iret
scas
mov
mov
ds
call
jge
cmp
xor
xor
insb
cmp
sbb
inc
stc
cmp
pop
imul
decl
in
dec
sbb
aad
or
cld
lea
mov
fnstsw
mov
mov
shll
adcl
out
mov
inc
rol
out
cmp
popf
add
mov
push
or
ret
inc
scas
jg
jae
insl
mov
or
push
xchg
lock
jg
rcl
in
lock
push
sbb
in
das
ret
loopne
push
jae
lcall
ja
inc
mov
mov
std
cmp
mov
sbb
leave
push
pop
add
shlb
mov
sub
push
daa
ss
dec
cli
fsubl
jno
dec
add
mov
ret
sbb
jle
push
add
xchg
inc
push
cwtl
inc
cmp
jl
out
and
ficoms
test
bound
mov
mov
movsb
add
cmp
icebp
insl
push
stos
xchg
dec
and
ss
bnd
insb
cld
out
aas
mov
in
in
leave
or
pushl
cli
lods
stc
pusha
xchg
pusha
cmpsl
push
add
jns
hlt
push
pushl
and
outsl
pop
xor
lock
push
jge
cli
rol
loope
jns
or
addr16
in
lods
lahf
xor
ljmp
xor
or
fstps
mov
mov
ljmp
popf
mov
jmp
xor
cltd
add
xchg
test
mov
push
sti
mov
jg
xchg
loope
mov
mov
sahf
bound
loope
call
push
sub
clc
cmp
call
sbb
cmp
mov
call
fisubl
sbb
shrb
adc
push
add
fistpll
ja
sti
push
repnz
pushf
dec
adc
mov
push
dec
adc
add
mov
xchg
fmulp
or
mov
mov
xlat
shl
ljmp
lcall
dec
lcall
dec
pop
arpl
out
scas
pop
in
mov
sbb
pushl
xchg
arpl
adc
cmp
sbb
orb
scas
dec
das
gs
ds
inc
sub
daa
add
shlb
jg
add
pushf
fsts
mov
adcb
lock
jl
inc
adc
lcall
inc
mov
test
arpl
ds
mov
shll
pushl
xchg
mov
and
pop
dec
push
sub
movsl
cwtl
push
dec
mov
cs
addr16
and
pop
shlb
and
call
sbb
incb
mov
stmxcsr
lret
pop
xchg
mov
pop
push
cltd
scas
jae
fsubrl
stos
jbe
fbld
mov
ljmp
mov
xchg
leave
xlat
sub
mov
std
or
test
add
test
sbb
mov
jae
repz
das
inc
test
xchg
jns
adc
stos
ret
icebp
test
xor
xchg
ret
mov
jnp
push
lock
aam
jmp
test
inc
cmpsb
sahf
jno
push
loope
jle
sub
jg
cmp
cmp
gs
pushl
aam
nopl
cli
or
and
repnz
cmp
add
inc
mov
sbb
jns
movsl
sbb
mov
mov
push
mov
add
adc
pop
lret
push
xchg
jmp
rcll
das
lock
mov
bound
repz
jmp
mov
je
jb
lcall
decl
test
stos
jae
mov
lock
lcall
pushl
nop
jnp
push
adc
shll
int3
or
in
fsubs
jbe
leave
daa
incl
test
inc
lds
mov
shr
xlat
push
sbb
mov
ljmp
mov
and
pop
or
lds
push
ds
mov
ljmp
add
push
sbb
jge
jp
lds
mov
mov
fbld
test
cmpb
mov
rorl
sar
push
lea
pusha
pop
popa
and
jl
xchg
xchg
dec
and
mov
aad
xchg
lcall
int3
bound
out
incl
into
aas
test
lcall
stc
adc
pop
jmp
incl
sub
es
push
and
pop
out
sub
mov
dec
adc
incl
cmpsl
adc
hlt
fs
inc
dec
and
out
loopne
call
imul
add
shr
incl
lods
shll
cmp
jne
adc
js
mov
fists
sbb
jge
xor
ret
jo
jb
xchg
aad
push
add
pop
loop
jmp
jnp
sti
dec
test
std
sub
clc
pop
push
jne
in
mov
push
jecxz
sti
push
jb
and
decl
mull
adc
loope
enter
inc
sub
pushf
je
jmp
hlt
push
pop
or
xor
mov
push
mov
cmp
pop
lea
push
rcrl
sub
sti
pop
jge
int3
stc
cmp
lods
jle
sbb
push
call
sub
push
inc
push
outsl
hlt
out
clc
aad
jg
push
pop
or
outsl
xchg
pop
xor
xor
sbb
xor
cmpl
inc
fisubl
fucomi
sbb
adc
mov
dec
mov
jbe
cmp
pop
fdivrl
repnz
cld
jge
push
pop
test
in
adc
dec
pushl
adc
mov
jl
push
in
adc
rorb
lcall
jle
decl
sbb
mov
pop
popa
push
cs
inc
push
aad
mov
mov
mov
icebp
ret
in
mov
mov
mov
xor
lret
sub
out
sub
mov
repnz
test
sbbb
or
mov
push
popf
ljmp
mov
pop
iret
mov
sub
aam
cmp
xchg
add
subb
add
add
lret
dec
stos
in
call
pop
ljmp
adc
leave
subl
movb
ss
bound
sbb
in
mov
inc
lcall
mov
inc
movsl
inc
adc
ds
xor
push
jl
lahf
repz
out
pushf
out
leave
mov
int3
and
xor
mov
add
cmp
mov
cld
ret
aad
je
mov
test
and
fadds
std
push
cltd
sbb
ret
xlat
decl
sbb
sbb
insb
push
incb
shrb
hlt
jge
mov
incl
push
daa
pop
push
stc
idivb
fiaddl
cmp
sti
jb
inc
cmc
inc
in
sub
lods
call
clc
test
sahf
js
dec
add
ds
mov
inc
mov
mov
mov
fucomp
daa
mov
int3
sbbb
mov
jns
dec
jae
movsb
jae,pt
dec
push
jns
push
test
pop
repnz
push
loope
aaa
sub
jg
push
jecxz
xor
aas
lea
bound
das
lock
std
push
bound
jns
inc
ja
mov
xor
pushl
adc
push
inc
push
fisubl
lcall
sbb
lods
pushf
xor
pop
inc
xchg
lods
cmp
xchg
ds
std
mov
cmp
cli
pop
loop
mov
popf
adc
and
das
add
in
and
scas
push
stos
stc
pop
jp
popf
xor
std
cmp
sbb
jl
addb
cmp
push
mov
test
enter
inc
in
insb
rep
leave
icebp
enter
add
ret
mov
or
pop
in
fwait
test
add
decl
add
lcall
mov
or
notl
and
sbb
scas
push
fidivrs
and
jmp
jno
inc
jle
jnp
pushl
mov
xchg
mov
add
das
loopne
mov
mov
sti
int
fmull
dec
test
push
lods
clc
jecxz
mov
outsb
std
pop
loopne
pop
mov
sub
jbe
pusha
mov
movsb
jg
call
lahf
sbb
js
mov
push
std
jmp
in
aaa
ret
adc
sar
test
mov
stos
repz
adc
jmp
adc
test
jne
incl
sbb
inc
pushf
adc
xlat
sbb
enter
mov
pusha
jb
repz
jae
lods
xchg
lret
pop
push
push
pop
std
mov
jmp
ret
mov
mov
cmp
push
dec
ret
dec
and
enter
cmpsl
jbe
cld
pop
loop
and
stc
cld
mov
and
mov
xchg
scas
and
xchg
movsl
adc
inc
cmp
fidivl
adc
jg
pop
es
xchg
ja
sub
xchg
sar
mov
inc
cli
jg
or
testb
xor
inc
call
sbb
mov
dec
pop
adc
loopne
ljmp
dec
mov
sbb
add
fdiv
inc
inc
ficoml
cli
lcall
fcomip
pop
xor
test
scas
inc
dec
jb
test
jbe
pushf
ret
mov
leave
cmp
std
add
pushf
stos
push
movsl
pusha
xor
xchg
xor
outsb
cmp
pushl
divb
mov
addr16
push
push
nop
push
je
cmp
xchg
fsin
or
lcall
mov
xchg
sub
ret
repnz
popf
test
rcrb
sti
cmp
lods
push
repz
mov
call
sub
lret
add
mov
mov
xchg
ds
add
cmp
or
fnstcw
add
cli
call
stos
ffree
xchg
adc
and
mov
fmull
sar
into
or
pop
mov
shll
pop
sbb
lcall
call
test
pop
sub
lea
inc
cmp
enter
lcall
mov
jne
push
jno
sub
inc
push
cmp
js
inc
push
fnstenv
mov
mov
sbb
or
cmp
test
and
add
inc
add
fidivl
mov
mov
dec
add
xchg
add
ja
adc
pop
fs
mov
arpl
and
jns
negb
inc
cld
jae
data16
insl
mov
and
mov
xor
je
inc
inc
or
pop
mov
popl
inc
ret
sbb
add
cmp
xor
or
or
pop
mov
mov
add
adc
sub
mov
adc
add
mov
add
xor
cmp
and
or
sbb
cmp
pop
pop
sbb
sub
outsb
je
push
sub
aaa
xlat
mov
jbe
sbb
pop
add
out
or
adc
pop
push
pop
and
pop
out
jo
jb
or
xchg
sbb
push
ja
xlat
insl
or
sbb
adc
aas
insb
jb
lret
sbb
or
adc
sbb
sti
cli
add
adc
add
adc
add
or
in
add
sbb
sbb
add
fwait
lods
int3
push
iret
aaa
sbb
fdivrs
lods
add
sbb
sbb
sbb
or
or
outsl
rorb
adcl
sbb
pop
in
stos
add
sbb
push
lret
adc
add
or
add
pop
or
add
add
sbb
in
daa
adc
jge
sbb
dec
nop
ljmp
mov
aam
mov
and
popf
sbb
fstpl
imul
inc
in
inc
rolb
and
mov
pushf
in
cli
mov
pushf
js
xor
movsl
xlat
pop
cmpsl
lahf
dec
stos
mov
gs
add
xchg
into
mov
xor
iret
pop
or
arpl
jmp
jae
in
fbstp
push
pushl
sub
rcll
bound
pop
dec
dec
jno
in
cmpsl
mov
dec
mov
adc
jno
pop
mov
cmpsb
inc
leave
inc
loope
xorl
mov
pop
adc
jmp
aam
mov
idivl
mov
outsb
call
sbb
neg
sub
roll
test
push
sbb
xchg
pop
mul
stos
jo
jmp
adcl
cwtl
loopne
jl
xchg
and
test
out
ss
lods
icebp
push
pushf
mov
cmc
push
movsbl
bt
adc
pop
add
mov
cmp
mov
js
add
fidivrs
pusha
movw
aas
and
adc
std
inc
add
pushf
mov
movsb
push
add
or
jb
ljmp
repz
mov
pop
adc
in
add
mov
lods
lods
mov
outsl
aas
stos
pop
pushf
mov
jmp
pop
sbb
shlb
call
jbe
ljmp
sub
sti
inc
bswap
add
arpl
in
sbb
lret
sbb
pushf
jmp
rcrb
add
and
sub
addl
pushf
pusha
fs
pop
add
call
shll
aad
push
call
xor
mov
clc
call
pop
outsb
imul
rorl
and
add
nop
push
cmc
addl
outsb
sub
cwtl
ljmp
sbb
sbb
mov
pushf
call
adc
loopne
mov
dec
sub
rcrl
fsubr
arpl
call
divl
pop
cmc
xor
pop
mov
sub
cmpsb
enter
pushf
add
jbe
out
call
call
ja
push
fbstp
add
dec
pusha
pusha
pop
flds
adc
ljmp
out
mov
lods
or
and
ljmp
pop
xchg
mov
push
ja
jmp
add
pushl
sti
lea
mov
std
clts
add
cmp
mov
sub
or
fstpl
add
cld
xchg
ljmp
call
push
xchg
add
inc
fcmove
inc
mov
pusha
and
shlb
add
imul
push
sbb
imul
lea
int3
or
push
add
pop
or
or
mov
outsb
loope
add
mov
add
mov
and
lahf
add
pop
xchg
aaa
sbb
ret
fs
popa
testl
jo
and
cwtl
inc
orl
mov
pushf
pusha
xchg
push
push
fistpl
sub
cmp
or
outsb
inc
push
scas
add
int
sub
ds
pusha
insl
xor
adc
jle
int
or
std
call
jle
xor
shr
cmpsl
jmp
outsb
int3
cli
pop
mov
pusha
push
mov
iret
sbb
call
les
aas
outsb
jmp
mov
xor
call
or
inc
scas
jecxz
adc
adc
mov
cmp
ds
fcmovnbe
in
push
mov
inc
xchg
adc
add
shrb
ficoms
sub
mov
gs
push
movd
lea
lcall
jl
sahf
sub
inc
bnd
shll
icebp
push
mov
out
jae
inc
stos
enter
sbb
movsl
cwtl
daa
cmpb
add
pushf
pushl
and
ret
ss
mov
loope
lret
push
incl
dec
adc
sar
xor
xchg
mov
enter
and
xor
dec
add
adc
outsl
fists
inc
mov
pop
fst
scas
push
and
lret
insl
sbb
call
inc
jmp
lds
pop
mov
pushf
clc
push
add
xor
arpl
inc
repnz
cwtl
jmp
data16
ret
jne
scas
or
sbb
sbb
add
mov
mov
mov
or
pop
sbb
mov
rorl
je
int
sahf
aad
pop
pop
js
push
in
inc
jmp
shrb
sub
and
and
dec
insb
jmp
ret
push
pushf
mov
add
imul
fwait
rcrl
push
nop
mov
inc
imull
jmp
jl
mov
das
inc
es
arpl
add
iret
inc
stos
call
das
mov
dec
pop
xor
xchg
outsb
sarl
movsl
push
or
mov
cli
fdivrp
fcomps
lea
push
mov
mov
xor
adc
and
jno
call
pop
test
xor
fisubrs
nop
xlat
ds
outsl
and
jle
add
inc
orb
jl
sbb
hlt
into
sub
jle
mov
xor
pop
je
fcoms
push
sub
jl
int3
repnz
jb
adc
in
push
shlb
and
inc
adc
ss
cs
xchg
xchg
aas
pop
inc
cld
mov
pop
sbb
decl
sub
add
stc
call
pop
pop
jne
add
mov
cmp
call
cmp
mov
call
sub
lods
inc
jnp
iret
stc
add
pop
fsts
push
mov
mov
xchg
jmp
push
jb
adc
mov
xor
jl
inc
pusha
mov
mov
mov
imul
jmp
mov
call
sub
aas
add
push
push
cli
pmaxsw
xchg
popf
mov
jnp
sub
cld
add
inc
pop
in
push
pop
jno
loope
and
jge
mov
test
test
sub
jns
push
jmp
cmc
ljmp
or
cmpb
sti
mov
mov
call
sbb
or
rolb
jnp
loop
adc
in
xor
insb
sbb
jp
call
cwtl
mov
push
adcl
jbe
xor
stc
call
lods
push
inc
arpl
je
bswap
push
inc
stos
adc
roll
push
or
xor
les
lock
out
and
mov
test
addl
push
xorl
arpl
pop
and
sbb
int
pop
outsl
pushf
jle
and
push
mov
rol
lods
jmp
add
loope
sar
sbb
lahf
ss
cmp
and
ja
std
mov
xchg
or
add
cmp
xor
pushf
push
push
lods
cmp
jb
and
imul
mov
dec
cmp
dec
mov
scas
inc
call
shr
push
mov
jmp
in
sbb
xchg
negl
loop
dec
add
push
mov
push
addb
imul
shll
and
and
outsb
sbb
jmp
lcall
jnp
icebp
cld
push
mov
in
mov
movsl
cmp
push
fisttps
inc
jmp
mov
inc
adc
mov
fistps
sbb
sbb
push
dec
aad
and
dec
mov
fsubrs
jbe
push
cmp
cmc
xor
pushf
pusha
scas
call
sbb
lock
lds
add
or
jo
or
pop
aaa
lea
cmp
mov
dec
ss
push
pusha
out
jbe
dec
xchg
pop
jmp
dec
sbb
sbb
ret
outsl
and
add
jb
add
rcr
cmc
pop
out
add
rcl
inc
sbb
sbb
add
jnp
andl
nop
sti
add
popa
sbb
iret
ljmp
aas
cmc
mov
imul
fs
xor
jle
loop
push
lods
pop
pop
outsb
and
inc
sub
lods
pop
and
or
roll
xor
dec
xchg
xor
daa
data16
out
push
rcrl
pop
xor
testl
call
pushf
and
pop
fidivrs
call
lret
and
jmp
adc
lds
jmp
lods
cmp
sub
lea
pop
lret
push
and
adc
mov
pop
lahf
mov
ficomps
lahf
pusha
pop
pusha
sbb
ret
das
xchg
xchg
in
pop
dec
imull
cmp
lock
mov
sbb
or
lea
popf
clc
fadd
addr16
out
xor
clc
dec
mov
andl
movsl
sub
dec
lock
push
clc
push
or
cmpb
jns
ret
dec
cmp
lahf
cmp
pop
mov
les
push
jge
cmp
pushf
pop
jge
shl
mov
mov
loope
pop
lcall
addr16
mov
out
push
dec
gs
mov
pop
popf
cltd
sahf
add
mov
add
mov
fs
faddl
dec
ret
outsb
pop
pop
popa
pop
dec
lea
shlb
mov
inc
das
fisttps
cmp
mov
cli
push
lock
adc
sub
cmp
bound
call
sub
lea
and
ret
stos
addr16
sarl
pop
pop
push
gs
sti
or
sbb
dec
mov
mov
mov
jg
lahf
call
adc
push
sub
push
xor
pushl
sbb
pusha
pop
daa
pusha
inc
jmp
xchg
xchg
jne
sub
or
adc
ror
into
aaa
inc
and
call
push
std
testl
jmp
adc
loop
push
xorl
jl
jo
ds
adc
loope
add
mov
add
shr
pusha
call
sbbl
arpl
inc
pop
mov
xor
jo,pn
pushf
push
sar
mov
push
mov
mov
rorl
push
ret
popf
sbb
pop
movsb
fmuls
pop
fisttpll
inc
lods
or
std
jns
jge
ret
mov
cmpsl
into
ss
dec
test
push
or
add
les
add
rorb
dec
push
pop
xor
xorl
ret
cmp
loop
outsl
in
dec
int3
and
jo
mov
loopne
xor
pop
cmp
dec
sub
enter
dec
adc
add
mov
insl
push
pop
xchg
div
pop
std
std
call
andl
inc
repnz
int
insl
jno
mov
call
insl
ss
int3
lahf
in
sub
jno
dec
dec
in
and
aam
push
enter
fldenv
call
test
int
addl
js
in
xchg
push
lods
aam
movsl
ds
decl
lret
jb
ror
jmp
sbb
inc
insl
adcb
ret
jl
gs
mov
mov
and
insl
add
pop
mov
jge
in
clc
mov
pop
les
call
and
test
es
xchg
icebp
and
movsb
inc
mov
push
movsl
movsb
jne
repnz
cmp
cmc
ret
cwtl
mov
adc
inc
mov
sub
pushl
inc
lahf
dec
into
ret
and
or
pop
and
loopne
mov
loope
dec
dec
cmpsb
pop
push
int
fildll
xlat
sub
test
negl
push
add
aaa
fcomi
push
ret
stc
repnz
out
test
aad
sub
mov
fildl
icebp
pop
andl
insl
jne
insl
ret
dec
ds
out
popf
das
insl
adc
mov
pop
rol
adc
das
mov
jge
aaa
mov
insl
dec
data16
aam
pop
test
out
outsl
mov
test
insl
xchg
rol
mov
aad
xor
xchg
xchg
inc
push
scas
inc
adc
pop
test
mov
pop
fimuls
sti
out
imul
movsb
add
mov
ror
jge
insb
add
insl
test
out
pop
gs
loopne
fistps
jb
dec
fildl
jmp
pop
pop
outsl
mov
sbb
or
mov
add
adc
xchg
jecxz
mov
test
call
call
mov
mov
xchg
imul
lock
dec
out
into
aas
or
cmp
xchg
pop
mov
pop
cmp
jbe
js
decl
in
js
inc
aam
pop
shrl
and
mov
or
into
sbb
lods
iret
aam
bound
jg
mov
add
xbegin
mov
xlat
dec
insl
xchg
dec
test
aad
jno
jne
popf
mov
das
or
adc
pop
and
popf
dec
xchg
pop
dec
dec
lods
mov
mov
push
pop
ret
dec
lahf
es
jge
pushl
push
push
add
shlb
cmpsb
scas
fs
inc
out
decb
loop
xchg
fsubs
xchg
subb
dec
mov
ljmp
sahf
mov
ret
jle
ficoml
into
pop
insl
and
and
fldt
lock
hlt
xchg
add
jl
in
dec
inc
lods
pushl
aam
push
into
insl
roll
clc
fcmovnb
test
add
xchg
xor
pop
mov
add
xor
dec
movsb
aam
cmp
loop
push
insl
movsl
lea
fisttps
pusha
add
jnp
clc
inc
pop
shlb
sbb
enter
insl
xchg
or
inc
insl
lret
test
clc
inc
jo
into
sbb
dec
adc
jbe
dec
in
aam
push
add
fsubrl
nop
out
test
jge
jl
stos
cltd
dec
jecxz
fwait
jg
xchg
outsl
sub
pushl
push
lods
mov
or
lret
push
jl
or
shrl
jg
mov
arpl
mov
ret
ja
cld
enter
and
pop
cli
jg
outsl
out
dec
insl
daa
push
movq
std
jge
outsl
icebp
decl
and
fstpl
xchg
shrl
adc
test
out
js
or
aaa
add
shrb
stos
and
pushl
imul
mov
aam
lods
lock
push
and
cmp
gs
push
leave
xchg
mov
jns
cs
out
mov
into
mov
adc
or
push
out
jae
loope
or
mov
pushl
sbb
pop
push
add
out
cld
subl
mov
pop
test
movsl
xchg
xchg
dec
xchg
in
sub
add
or
mov
fistpll
sbb
decb
fwait
cs
jmp
outsl
outsl
cmpsb
dec
dec
aad
movsl
push
nop
in
loopne
popl
cmp
cmp
inc
jl
mov
scas
and
add
pusha
mov
jg
sub
pop
sub
add
dec
insb
addb
jbe
das
cld
lcall
fcmove
xchg
enter
std
push
aaa
mov
mov
dec
ret
xchg
pop
clc
jg
mov
push
dec
mov
mov
lds
fucomip
sub
decl
push
ret
into
xchg
aam
or
jnp
or
test
xlat
and
fbld
jmp
out
ficoms
and
inc
inc
jns
fwait
outsb
ljmp
std
xchg
xchg
sub
in
cmp
push
leave
arpl
dec
pushf
test
out
lods
and
cmpsb
sbb
lea
xchg
jbe
sub
jne
lcall
scas
jg
xchg
mov
adc
pushl
add
adc
cmc
inc
ljmp
sub
ljmp
push
jb
stos
add
rolb
mov
dec
pop
push
adc
pop
adc
dec
test
scas
in
cltd
xor
inc
aad
repnz
retw
inc
or
ljmp
test
nop
xlat
stc
loope
div
lfs
cmp
adc
ljmp
push
aad
out
outsl
xorb
popf
les
xor
cld
lcall
inc
xor
inc
jae
repz
inc
mov
incl
sahf
adc
mov
sub
add
fwait
adc
in
cmp
pusha
fwait
inc
lock
das
mov
out
imul
stc
push
arpl
mov
scas
inc
shll
jle
jae
jno
xor
mov
push
push
jle
sub
jle
cmp
arpl
fnstenv
or
stos
push
in
fnstcw
imul
pop
decb
js
xchg
mov
mov
sub
ljmp
sbb
sub
leave
push
sbbl
mov
jg
sbb
pop
aas
pop
out
adc
test
push
in
mov
gs
lret
loop
movb
adc
mov
aaa
cld
jg
in
stos
rol
test
jmp
push
popa
adc
clc
xchg
mov
push
fsts
repnz
mov
sbb
lock
ss
out
lea
xor
cld
dec
orb
inc
sub
adc
jecxz
xor
or
push
push
mov
sahf
mov
and
adc
sbb
dec
in
pop
push
lea
pop
arpl
ret
mov
loop
inc
inc
push
mov
inc
gs
add
xchg
ljmp
dec
ret
or
cwtl
dec
cvtpi2ps
movsl
bound
push
into
test
ud0
lcall
sub
push
cmpl
dec
mov
adc
lcall
cld
mov
xchg
add
loopne
loope
xor
sub
in
cmpsb
xchg
lcall
and
adc
leave
mov
das
call
pop
clc
sbb
jle
dec
scas
mov
xor
dec
inc
aad
outsl
cld
lcall
imul
xor
fiadds
call
in
mov
jae
add
push
adc
das
adc
jb
les
xchg
xor
push
frstor
int
std
pop
pop
sub
pop
and
stos
mov
rol
std
clc
push
mov
cmpsl
dec
test
daa
push
insl
movsb
jg
sahf
add
push
stc
stos
out
das
or
popa
xchg
adc
lret
push
les
cwtl
daa
insb
sbb
sub
repz
sub
pop
arpl
jecxz
inc
in
movsl
sahf
ljmp
jne
and
adc
push
call
les
xchg
es
push
or
or
mov
jae
jge
pop
mov
inc
xchg
loopne
add
stos
cmpsl
jns
xchg
mov
outsl
lock
call
enter
lcall
ljmp
xor
push
push
pop
scas
fwait
pushf
clc
jb
sub
orb
push
fcmovnbe
adc
or
jo
dec
cmpsb
or
addr16
vandpd
cmc
ljmp
pusha
inc
add
icebp
xchg
fdivr
in
out
in
mov
jmp
mov
loope
mov
adc
pop
mov
mov
mov
rcl
xchg
sarl
mov
sub
mov
stc
test
addl
pop
mov
out
mov
xchg
and
pop
iret
xchg
xor
push
cltd
test
pop
das
adc
sbb
dec
pop
addr16
arpl
lret
jno
in
aas
je
mov
inc
sub
and
mov
cs
push
lds
icebp
aad
xchg
out
cmpsb
out
push
add
movsb
sbb
lods
jecxz
jge
icebp
pop
in
push
mov
repz
mov
xchg
mov
add
xor
sbb
loope
xchg
scas
pop
jecxz
add
cltd
pop
jo
stos
sahf
xchg
js
and
mov
fwait
pop
sbb
mov
jg
dec
mov
stos
and
imul
xchg
jle
sbb
push
xor
stc
loop
clc
outsl
mov
jmp
lods
pop
or
adc
rcr
clc
pop
or
and
shl
dec
bound
mov
ret
ja
out
push
mov
xchg
xor
subb
cmc
mov
dec
pop
leave
push
ljmp
mov
mov
mov
int3
inc
add
mov
movsb
loopne
cmp
sbb
ss
cmp
dec
sub
repnz
add
dec
and
pop
jb
test
movsb
pop
sar
imul
adc
stc
movaps
fistps
into
lods
sbb
in
popa
loope
xor
push
and
jmp
clc
sbb
stc
jae
xchg
mov
add
or
jmp
aaa
imul
std
lods
xchg
lcall
fdivl
jnp
paddd
push
sbb
icebp
inc
mov
mov
inc
imul
pusha
inc
mov
fiadds
stc
in
pop
rcrl
clc
mov
sub
loop
inc
adc
cmp
jg
pop
out
push
inc
clc
push
push
fsubrs
int3
ret
dec
out
fists
sbb
lock
ret
lock
pop
dec
mov
lcall
and
xlat
add
out
and
sub
adc
jnp
adc
add
enter
loope
xchg
sub
adc
xchg
shlb
ljmp
sbb
mov
jl
and
fcom
push
incl
lcall
inc
mov
push
adc
aas
out
pop
or
lock
mov
mov
in
aas
and
jno
call
jecxz
into
sub
leave
jl
pop
add
cmpsl
xchg
pop
aam
ficompl
mov
or
jge
fwait
mov
adc
icebp
add
sbb
pop
in
or
addr16
int
pop
pop
popa
test
mov
orb
cld
ljmp
pop
dec
xor
xchg
shlb
xor
test
ss
cmp
aas
push
xor
cld
fisttpll
mov
cli
enter
adc
cmp
insl
xchg
iret
xor
fldz
and
pop
pushf
pop
loop
aaa
adc
push
je
sahf
gs
adc
insl
push
sub
loopne
outsl
and
mov
out
stc
lcall
adc
inc
push
sarl
lcall
les
jg
mov
mov
cmpsb
xchg
sub
pop
jb
pop
into
scas
sbb
cwtl
shrb
jecxz
dec
mov
dec
jge
jae
jp
mov
add
iret
inc
inc
adc
pushw
cmc
jg
test
adc
jge
mov
lcall
test
jno
int
cmp
adc
mov
and
dec
lods
repz
xor
aas
addr16
lds
pop
sub
insb
xor
xchg
lcall
test
xchg
rorl
in
xchg
movsb
icebp
mov
push
mov
cmp
and
jge
loopne
mov
es
test
ret
out
push
aaa
xchg
ret
test
lret
push
inc
imul
adc
dec
das
out
mov
jg
jecxz
sub
pop
popf
repz
xchg
dec
push
in
lcall
mov
outsb
or
push
arpl
inc
rcll
jae,pn
fidivrl
xor
das
jno
add
sub
inc
cmc
add
imul
inc
leave
adc
in
arpl
std
sarl
and
je
shrb
test
pushl
mov
adc
roll
insl
add
js
int3
adcl
jg
das
pop
dec
push
ret
or
fldt
das
je
mov
das
jnp
adc
inc
mov
cmp
xchg
loopne
jo
int
xor
xor
fimuls
clc
fildll
sub
repnz
jmp
test
adc
rcrb
inc
das
daa
push
rcll
mov
rol
push
ljmp
xchg
into
jne
in
push
cmp
cmp
dec
push
sbb
jge
dec
sbb
imul
neg
mov
mov
and
push
into
imul
jnp
and
enter
sbbl
mov
arpl
test
ljmp
int3
mov
mov
push
repz
ret
addr16
mov
ljmp
jns
ljmp
nop
adc
data16
jge
push
in
inc
push
shlb
mov
push
or
test
into
pop
inc
in
or
mov
jg
popf
cmp
icebp
sti
nop
aaa
nop
stos
dec
fmull
fdivs
mov
mov
push
das
cmc
decl
fucomp
outsl
imul
add
cmp
sbb
dec
pop
movsl
push
addr16
arpl
insb
sbb
mov
mov
xchg
push
jno
xchg
in
xor
call
mov
loop
push
arpl
outsl
clc
sbb
lea
popa
ja
lret
add
mov
repnz
ss
sbb
les
push
mov
mov
or
rolb
adc
sahf
inc
push
sub
stos
ljmp
mov
sub
mov
push
jo
dec
jmp
sub
call
sub
call
mov
mov
push
jmp
aam
jb
push
push
dec
into
stos
pop
lea
jmp
in
cmp
in
inc
xchg
fimull
push
clc
stc
bt
repz
cmpb
ljmp
cmp
sub
imul
push
or
cwtl
lds
adc
or
jl
lahf
call
stos
mov
push
shll
push
adc
pusha
mov
xchg
and
cltd
mov
add
jmp
or
mov
jbe
dec
mov
call
pushf
pop
call
lods
sti
inc
mov
cmpl
pop
div
add
xor
push
jg
xchg
clc
jle
lock
jmp
add
mov
sbb
nop
cmpsb
xchg
adc
mov
jge
lahf
mov
je
jle
cld
add
jg
push
call
sbb
xchg
rcrl
adc
mov
fdiv
out
push
sub
and
nop
push
mov
ror
jmp
add
lcall
add
and
jg
add
bt
push
test
jmp
in
imul
mov
jo
mov
pushf
jmp
out
mov
adc
daa
add
adc
or
mov
push
push
pusha
mov
ret
push
xorb
mov
in
mov
stc
pushf
push
mov
movsl
shlb
rcll
call
push
push
fistpll
stc
ret
stc
adc
les
push
test
stc
call
rcr
or
or
or
loope
out
jmp
ljmp
sub
xchg
test
or
sub
sub
xor
les
add
xchg
lea
pushw
sahf
icebp
dec
addr16
push
call
add
sbb
roll
xor
push
loopne
cmp
in
mov
cwtl
push
sbb
push
inc
ret
fucomi
push
xchg
sub
xor
jp
pop
std
hlt
jecxz,pt
mov
dec
inc
test
lea
and
scas
sub
rcll
ds
and
mov
sbb
movsl
xchg
imul
movsb
or
dec
jmp
aaa
jl
or
mov
mov
fs
in
out
clc
icebp
jmp
dec
push
out
and
xchg
jle
cmpsl
in
mov
and
test
in
add
cld
imul
lea
push
pusha
rep
cld
push
mov
call
pushf
sub
loopne
aam
jb
and
push
call
inc
inc
xchg
or
shll
lea
mov
loopne
pop
call
pusha
das
fdivrl
call
inc
mov
stc
rorl
call
xor
clc
pushf
call
in
fidivrs
inc
aad
mov
divl
incb
js
jmp
xchg
sub
das
jp
movb
jmp
lret
pushf
pop
shrl
stos
add
imul
out
add
divl
loopne
add
inc
mov
lret
xchg
mov
jmp
xchg
push
fistpll
adc
js
mov
and
sub
daa
repnz
pop
jmp
cli
mov
loopne
sub
jl
sbb
ss
imul
out
cli
nop
cmp
nop
insb
ud1
arpl
push
pushf
ds
or
in
pop
or
aad
inc
cld
mov
and
pusha
mov
inc
and
mov
push
pop
test
adc
loope
jmp
lods
ret
sar
lret
out
cmp
and
push
stos
jmp
fnstcw
xor
xchg
jmp
dec
sub
test
jbe
inc
lods
sub
orb
jae
testl
sub
stc
call
lret
sti
hlt
sbb
pusha
call
fsubr
jo
sti
add
sti
mov
cmpl
jmp
cmpsl
loopne
push
adc
jno,pt
lods
add
push
mov
out
adc
ret
jl
and
cmp
addr16
test
add
or
ja
loopne
subb
filds
jge
mov
inc
fwait
adc
pop
lret
call
lcall
or
adc
test
fcmovu
xchg
icebp
ljmp
push
lock
and
es
xchg
je
sbb
jbe
push
adc
dec
insl
mov
daa
ret
jae
xchg
ljmp
adc
imul
in
jmp
cld
in
jge
leave
in
or
mov
aam
pop
insl
stos
lcall
mov
cmpsb
jb
fwait
loope
mov
inc
jbe
jecxz
mov
adc
xor
mov
or
test
aas
in
sbb
inc
mov
ret
js
call
cmp
sti
out
or
pop
in
xlat
rcrb
fstpt
in
imul
shll
pop
aam
push
into
xor
xchg
mov
test
mov
mov
xor
push
in
push
loopne
jne
dec
bound
adc
insl
idiv
outsl
icebp
mov
sub
and
mov
std
sub
add
push
or
cmpsb
lahf
lock
outsl
in
jge
test
and
aam
pop
int3
insl
in
es
call
sbb
dec
add
aam
idivb
movsl
fstl
jge
rcrb
sbb
aas
sbb
dec
push
outsb
mov
jl
add
inc
int3
inc
add
sbb
iret
or
dec
and
mov
jg
loopne
aas
mov
je
sub
push
mov
aam
xor
adc
lcall
call
xchg
cs
int
push
inc
out
insl
mov
call
stos
je
rol
lods
xchg
loopne
adc
inc
insl
add
ljmp
xchg
popa
dec
mov
ret
jl
pop
stos
ret
or
sarb
notl
jge
out
scas
outsl
dec
push
jns
inc
idiv
in
mov
inc
aam
pop
dec
cmp
xor
mov
cli
lea
pop
xchg
test
add
lods
in
or
sbb
xchg
or
orb
insl
and
aaa
insl
in
mov
ret
dec
sarl
les
adcb
xchg
and
insl
push
cmpb
dec
in
enter
add
xchg
push
lret
and
jle
push
mov
stc
pop
xchg
mov
and
test
push
loopne
aam
or
mov
fiaddl
std
lret
mov
insl
pop
adc
out
xchg
xchg
and
ljmp
mov
ret
jae
ficoms
and
icebp
mov
lock
pusha
xor
iret
in
fnstsw
jmp
ret
mov
and
aam
push
ret
insl
out
shrl
dec
xchg
xchg
aaa
test
or
xchg
xchg
xchg
into
mov
inc
ss
insl
mov
cwtl
fdiv
aaa
popa
rcr
xor
rolb
fadds
lcall
xchg
imul
jo
and
sbb
das
loopne
push
daa
pop
prefetchwt1
pop
insb
insl
loopne
lock
jge
test
dec
sbb
aaa
decb
adc
std
xchg
add
fisubrs
roll
outsl
cmpsb
aad
outsb
sbb
mov
or
repnz
fbld
add
insl
or
faddl
insl
fnstenv
ret
inc
sbb
int3
mov
or
pop
pop
dec
sub
insb
mov
or
add
mov
outsl
xor
push
xchg
dec
call
fwait
outsl
cs
fstl
repz
xchg
mov
adc
movsl
in
xchg
mov
mov
mov
rcrb
pop
inc
mov
inc
xchg
adc
je
movsl
fbld
clc
out
hlt
xor
bound
jl
into
mov
inc
insl
cmp
movaps
xor
int
ljmp
add
and
mov
pop
or
jno
xlat
mov
loopne
inc
add
and
add
iret
sub
test
pop
or
xorl
cmp
mov
push
adc
inc
cmc
dec
test
xor
mov
aad
cmpsb
aad
inc
lock
mov
fimuls
stc
out
dec
cmc
mov
xchg
shr
jmp
cli
xor
jmp
cmp
fists
xlat
call
ret
jmp
jb
pop
mov
xchg
xbegin
fists
decl
nop
das
push
frstor
lahf
mov
out
and
dec
std
call
fidivrs
clc
jnp
adc
pop
and
push
lock
adc
jl
inc
fs
sbb
dec
pop
jecxz
jge
xchg
jmp
incl
and
inc
push
scas
mov
mov
out
adc
push
icebp
sbb
jge
in
jns
push
lods
push
mov
push
jb
adc
movsb
jnp
mov
loope
jns
adc
movsb
dec
andl
sub
pop
test
test
pushl
sbb
and
mov
mov
iret
fcomi
sbb
mov
and
mov
inc
aad
lds
or
imul
shrl
mov
pop
cwtl
push
jge
sti
mov
push
filds
pop
out
jo
jmp
insl
call
mov
sub
cmp
add
orb
icebp
cmp
inc
clc
das
sar
fists
outsl
mov
in
or
and
push
int
jae
sti
lahf
pop
pop
clc
or
loopne
cmp
mov
std
daa
and
pop
sti
sar
aas
das
jae
out
daa
inc
ficoml
decb
lcall
add
mov
add
lds
movsl
cmc
outsb
lahf
imul
lcall
pop
xorb
inc
dec
inc
loope
dec
popf
insl
inc
divl
cmp
lock
jge
popf
insb
add
mov
jns
pushl
mov
add
mov
push
and
leave
pop
ljmp
xchg
xchg
fsub
pop
xchg
aaa
cld
aam
mov
jp
fwait
xchg
xlat
je
inc
movsb
pushl
ljmp
cs
mov
pusha
cwtl
lret
aad
bound
sti
fiadds
stc
lahf
lahf
jmp
cld
mov
cwtl
shl
mov
scas
and
push
lock
jmp
dec
data16
xchg
int3
mov
cmp
sub
ret
js
test
inc
incl
in
sub
dec
das
mov
adc
fs
sub
rorl
ficomps
inc
or
hlt
les
mov
sbb
adc
sub
arpl
jns
push
jmp
cs
push
jp
pop
xor
jb
mov
sub
ret
sbb
rcll
test
jb
or
stos
sbb
in
jae
insl
loope
push
push
ljmp
movsl
jbe
xor
je
cmpsl
cld
jg
out
ljmp
or
dec
mov
fldt
pop
mov
or
adc
inc
scas
in
das
insb
std
outsl
add
xor
lds
aad
or
cmpsb
movsb
iret
jg
das
xchg
fnsave
push
mov
push
or
in
and
jge
ret
addr16
add
nop
pop
and
pop
cmc
es
fwait
dec
out
pop
xor
xor
mov
inc
mov
scas
test
dec
sub
jae
xchg
inc
pushl
das
add
cwtl
adc
repnz
xchg
loopne
lret
adc
xchg
call
lods
jns
lahf
and
jbe
incl
adc
mov
sbb
repz
loope
cmp
std
pop
mov
ja
or
jne
xchg
pop
xor
jg
clc
rcrb
jb
or
add
int
loope
ficompl
sbb
jl
std
and
inc
loopne
or
movsl
jl
dec
xchg
pop
jno
aad
mov
jmp
sub
or
xchg
fldt
shl
xchg
or
mov
pop
stos
ja
and
ljmp
testb
outsb
leave
xor
ret
aad
xor
jnp
ljmp
lock
stc
ljmp
push
pop
inc
ljmp
pop
js
addr16
lahf
rclb
adc
push
ffree
jg
ljmp
hlt
push
push
fstps
in
pop
xor
pop
jge
and
loopne
inc
and
xchg
dec
pop
xchg
and
jge
iret
mov
ljmp
fwait
mov
and
into
or
clc
add
aam
lcall
int
and
iret
ljmp
arpl
or
adc
sarl
out
stos
jl
jne
inc
cmp
xor
int
shl
pop
incl
and
pop
repnz
movsl
sbb
ljmp
lea
out
push
dec
xor
mov
cld
dec
ljmp
inc
aas
loope
xor
cmp
in
orl
adc
pop
mov
or
dec
lods
xchg
pop
loopne
sub
adc
jg
push
adc
jns
dec
cmpsb
inc
mov
pop
stos
ljmp
enter
push
enter
or
mov
repz
cmp
rorb
mov
mov
test
loope
dec
nop
sarb
jg
fcoml
dec
and
cli
inc
jo
lcall
add
mov
sarb
cmp
dec
jecxz
repz
dec
lcall
mov
fildll
enter
test
or
nop
lcall
lock
mov
iret
and
int
jb
in
imul
fsts
out
push
imul
add
add
into
icebp
imul
mov
rcrb
inc
loop
mov
jae
in
push
pop
jecxz
xorb
lock
insb
or
mov
fcoml
clc
sub
aaa
repnz
lods
mov
mov
js
fsubrs
jg
mov
insb
sbb
icebp
inc
lods
xchg
push
in
clc
decl
cld
cltd
cmp
dec
pop
push
dec
aad
inc
loopne
sub
fimuls
decl
lock
adc
add
lds
adc
jg
shrl
mov
sub
inc
imul
mov
jecxz
push
aas
out
mov
sbb
dec
arpl
jle
inc
incl
das
hlt
inc
mov
jg
pop
and
push
out
add
cmp
iret
xchg
adc
lock
testb
shl
add
and
push
arpl
leave
inc
mov
call
jns
inc
inc
popa
and
jbe
jne
je
mov
hlt
mov
push
rcrl
enter
fnstcw
cwtl
out
inc
inc
add
into
mov
test
clc
popa
push
pop
mov
inc
insb
or
xchg
mov
decl
add
adc
cmp
in
insb
sub
sub
stc
push
lret
xchg
xchg
mov
mov
dec
xor
lret
and
dec
lock
imul
mov
push
mov
fs
and
addl
out
lods
ret
pop
sti
cmc
xchg
mov
out
scas
inc
and
icebp
adc
shll
bound
push
xchg
sbb
fsubp
and
stos
jg
mov
icebp
dec
shll
mov
lea
dec
mov
pop
stc
das
cld
pushl
mov
vcvtss2si
pop
rcrl
test
jg
addr16
adc
jmp
jbe
loop
loop
aas
adc
inc
in
icebp
pop
cmp
je
and
fdivs
push
pushl
and
inc
int3
inc
or
out
cld
dec
xchg
sbbb
push
addr16
add
std
arpl
nopl
insb
add
mov
clc
lods
mulps
inc
sbb
push
lret
pop
cmpl
imul
xchg
js
cmp
adc
jge
xlat
and
std
dec
scas
mov
mov
inc
inc
push
movsb
das
mov
lock
fwait
jge
and
aaa
cld
decl
xchg
xchg
push
cmp
lret
adc
push
or
push
dec
push
sub
jbe
fcompl
nop
inc
pop
cmp
add
inc
test
xor
xacquire
mov
js
int
dec
mov
sbb
jge
dec
jge
pop
ret
cltd
xor
push
rcl
xchg
lahf
adc
es
jmp
rolb
in
adc
cwtl
incl
dec
mov
stos
jo
adc
and
mov
mov
stc
cvtps2pi
mov
int
out
stc
lea
aas
jge
jg
push
cmp
jecxz
insb
add
jno
xchg
mov
jg
lock
dec
in
ljmp
cmp
cmpsl
das
mov
adc
jp
inc
lds
fwait
mov
adc
inc
cmpsb
loop
in
fnstcw
insl
xchg
leave
inc
inc
aad
jp
and
int
mov
test
pop
mov
dec
test
out
aas
lock
mov
loop
shlb
test
xlat
jmp
rorl
pop
inc
in
movsl
or
push
jne
sbb
jmp
inc
add
decb
incl
xlat
outsb
mov
inc
enter
popf
inc
mov
push
xchg
adcl
fs
adc
loop
call
sub
adc
dec
or
incl
pop
xchg
andb
pop
jns
jecxz
sub
ljmp
stos
inc
adc
lds
add
adcb
add
orl
add
push
sub
jb
cmp
inc
imul
data16
subl
or
push
push
gs
push
and
adc
sbb
loop
pop
inc
add
je
inc
sbb
imul
jg
outsl
push
imul
imul
xchg
je
push
outsb
insl
popa
jo
imul
ret
enter
mov
inc
or
lds
adc
adc
in
mov
decl
test
pop
push
test
je
mull
je
cmp
hlt
stos
pusha
outsl
sub
jo
sbb
mov
in
mov
jnp
popa
insl
gs
inc
outsb
jbe
outsl
aad
push
adc
fstl
imul
popa
cli
dec
or
xchg
xor
nop
test
jno
cmp
add
add
inc
xchg
inc
xchg
test
orl
jle
cltd
packsswb
outsl
push
adc
sbb
adc
add
out
pop
jb
or
inc
mov
aas
aas
xor
inc
pop
push
add
cmp
orl
sub
add
push
mov
add
and
sub
pushf
add
lcall
add
add
push
xchg
add
add
mov
lcall
inc
adc
inc
je
out
add
adc
cmp
push
lds
inc
leave
addb
mov
xchg
push
or
add
movntps
or
out
add
add
inc
pop
rolb
add
mov
lcall
cmpsl
sub
mov
sbb
sbb
push
add
push
fs
inc
jb
sti
add
ret
add
daa
in
addb
adc
daa
fdivs
mov
xorb
or
xor
insl
jo
push
lahf
dec
sbb
outsb
and
pop
call
add
mov
add
incl
add
add
add
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
