out
call
in
sub
andb
push
push
push
push
xor
pop
lea
fcomi
stos
push
ljmp
pop
xor
jmp
mov
pop
ja
test
add
loop
mov
dec
gs
in
in
dec
mov
xor
cs
jbe
dec
mov
insb
jmp
mov
push
call
pop
mov
jg
mov
push
push
push
push
push
mov
push
push
call
mov
and
adc
clc
lea
push
add
in
and
call
jbe
adc
adc
pop
sbb
outsl
fisttps
pop
pop
pop
leave
ret
add
add
mov
mov
push
push
xchg
sub
and
data16
jbe
pop
popf
fadd
add
in
mov
je
mov
lcall
push
or
mov
ror
jge
sti
daa
pop
inc
pop
inc
aaa
and
mov
mov
jle
sub
lea
push
push
push
sbb
pop
dec
mov
or
xchg
daa
xor
clc
add
in
push
fists
push
rol
or
fxch
lock
add
push
pop
sbb
or
adc
movsb
mov
fdivr
cmp
lock
cmp
je
push
adc
clc
sbb
pop
or
inc
clc
cmp
or
push
lret
insl
or
push
xorb
je
lea
or
scas
dec
mov
pop
je
jbe
pop
out
cmp
pop
xor
or
shrb
adc
dec
mov
lods
lea
jo
push
push
scas
fildl
or
pop
or
mov
fstps
or
pop
test
cmp
adcl
add
adc
push
sub
mov
sbb
or
jno
sti
sti
int3
dec
inc
cmp
outsl
insl
out
pop
dec
mov
and
jbe
fldcw
push
mulb
divb
or
enter
cltd
add
add
fnstcw
cld
push
adc
leave
fadds
fucom
rol
inc
testb
movsb
adc
out
in
rclb
lock
mov
test
mov
or
out
in
mov
pusha
push
mov
mov
dec
or
decl
je
mov
mov
ror
mov
inc
inc
dec
dec
test
jne
push
pop
and
fldenv
in
xor
mov
pop
mov
add
mov
movl
pop
pop
mov
or
fwait
xchg
add
lret
jnp
add
cld
cltd
dec
clc
pushl
sbb
jecxz
cmp
jge
sub
cmp
adc
and
fs
leave
std
std
push
and
xlat
mov
sbb
cmp
adc
add
adc
aaa
dec
scas
mov
and
cmp
jb
out
ds
pop
push
mov
mov
cwtl
imul
lea
or
nop
in
in
mov
jae
testl
testl
sub
mov
cli
adc
dec
sub
por
xchg
lods
inc
or
mov
fistpl
mov
cmpb
inc
add
adc
cwtl
stc
sub
ss
inc
push
adc
mov
mov
xor
mov
test
je
enter
push
push
add
pop
int3
icebp
outsl
sub
andb
xor
cmp
mov
push
inc
push
jne
mov
mov
mov
inc
inc
test
jne
push
lods
out
pop
sub
push
mov
xor
inc
mov
pop
xchg
cmp
cld
push
push
std
dec
mov
dec
imul
lcall
popa
add
pop
lcall
add
sub
popw
or
cld
fstps
inc
or
xchg
dec
test
inc
add
stos
mov
mov
imul
xor
add
push
cmp
in
jmp
sbb
push
push
and
in
je
push
pusha
adc
lahf
push
push
pop
testl
lret
mov
sti
leave
std
mov
jl
mov
xor
jo
mov
std
lret
insl
mov
mov
jnp
mov
push
mov
sbb
add
push
pop
sar
pop
int3
jae
inc
in
inc
xchg
rcll
xchg
xchg
sbb
cmp
dec
loop
into
pop
iret
imul
in
and
push
rclb
dec
loop
mov
out
cmpl
mov
adc
add
idivl
mov
nop
push
insl
xor
push
int
jnp
push
lcall
ud2
mov
mov
and
push
push
out
mov
or
push
mov
ret
fistpl
push
cmp
outsl
imull
add
lret
in
je
jae
pop
sti
sbb
xor
pop
sarb
enter
pop
daa
pop
add
hlt
xlat
cmpsb
mov
jo
subl
bound
pop
xlat
lcall
fcomp
xchg
or
lock
nop
ljmp
and
push
or
cmpl
insl
ret
dec
push
push
xor
mov
push
jl
sti
or
cmpsl
addr16
jl
or
or
cmp
push
jp
xchg
xor
pusha
push
adc
push
daa
inc
jl
mov
gs
in
in
jb
fsubrl
out
pop
out
call
insb
fwait
in
gs
cs
out
and
jle
inc
out
pop
pop
lock
xor
cmc
pop
test
or
mov
add
lods
xchg
or
or
sub
inc
lcall
mov
dec
xchg
je
enter
adc
add
mov
dec
jo
adc
xor
sub
add
push
sbb
adc
adc
stos
test
inc
inc
inc
push
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
addl
in
jmp
add
xor
adc
sub
imul
imul
mov
divb
inc
push
xor
dec
shll
nop
sahf
cmpsb
imul
cmpsb
imul
xchg
inc
mov
add
xor
cld
sti
nop
add
outsl
arpl
je,pn
insw
addr16
cmp
jmp
xor
xor
inc
bound
push
jb
jbe
insb
gs
jae
mov
je
insl
xor
pop
add
push
dec
pop
dec
and
pushw
gs
add
fdivr
outsl
imul
fs
adc
adc
punpckhbw
data16
in
sarl
imul
insl
fs
fisubl
aaa
xchg
cmp
aaa
stos
lcall
mov
add
xchg
adc
inc
adc
scas
add
add
inc
dec
xor
xor
fs
insb
inc
push
push
dec
inc
dec
mov
add
push
xchg
loop
inc
sub
add
leave
mov
repz
add
add
dec
pop
nop
inc
add
or
insb
mov
or
mov
int
mov
imul
jb
addr16
insl
and
outsb
outsb
outsl
je
bound
jb
outsb
psadbw
imul
insl
outsl
fs
push
sbb
stc
out
psubq
jnp
and
and
mulb
mov
adc
addr16
jae
test
sbb
and
stc
fs
and
repz
xchg
and
arpl
push
inc
fisttps
stc
outsl
adc
add
dec
loopne
and
add
dec
ja
or
add
add
and
add
add
fiadds
add
in
int3
and
push
xor
pop
mov
sahf
or
dec
pop
call
ret
mov
add
push
cld
or
add
bound
adc
sti
add
ja
nop
add
int
fs
je
push
fcoml
mov
push
push
pop
mov
popf
popf
xor
cld
pushf
daa
dec
arpl
cmpsb
jnp
xor
adc
push
mov
gs
outsl
arpl
sti
mov
or
xchg
insb
push
add
lcall
rolb
pushf
imul
je
pop
daa
xor
add
hlt
and
mov
je
imul
shrl
cmpsb
fdivp
push
pop
adc
dec
pusha
jbe
xchg
xor
shll
mov
lret
gs
pushw
sub
ds
shll
adcb
mov
lcall
and
push
imul
cmpsb
mov
pop
ja
cmpsb
enter
inc
add
je
shll
adc
sbb
cmp
cld
and
and
pop
out
jl
addr16
xor
cmp
xor
push
jb
das
call
dec
fmull
and
xor
shll
push
pop
outsb
shll
xchg
sahf
cmp
mov
int3
and
movsb
and
add
imul
dec
mov
push
addb
pop
ja
iret
stos
out
mov
dec
rorl
aas
addl
jb
gs
pop
leave
hlt
dec
add
add
push
gs
fs
sub
dec
jo
outsb
push
jb
inc
jle
jo
adc
dec
dec
dec
dec
inc
push
ds
xor
pop
push
push
data16
fisttps
push
dec
inc
push
push
inc
push
inc
pop
dec
cld
aaa
mov
outsl
data16
push
imul
fidivs
jne
pop
pop
push
pop
jae
outsl
outsb
sbb
push
inc
fistpl
inc
sbb
add
add
or
orb
mov
xchg
add
aaa
sbb
movsb
imul
add
push
pop
pop
or
fidivl
and
add
sbb
mov
adc
add
jbe
and
add
pop
add
insb
mov
sbb
popa
mov
aas
mov
aas
add
mov
sbb
pop
rorl
incl
and
add
add
xor
sbb
inc
lods
mov
and
insb
test
pop
inc
push
or
or
lret
xor
sbb
mov
stos
pop
das
xor
add
and
pop
xor
inc
test
bound
or
imul
incb
outsl
add
jae
push
packsswb
je
jne
jb
gs
sbb
pop
push
incl
pop
xlat
sub
add
push
inc
jb
push
and
cld
das
ja
or
push
mov
sti
pop
and
sub
insb
add
sbb
repnz
fisttpll
pushf
pusha
pushl
mov
pushf
movl
jle
sbb
fstps
add
call
xchg
shlb
mov
cmp
arpl
data16
mov
jo
jb,pn
cltd
push
xchg
in
xchg
sbb
sbb
xor
sub
or
dec
es
pop
dec
push
jg
dec
mov
in
pop
jno
gs
inc
dec
xor
outsl
je
ja
jns
rcl
xor
je
mov
xor
imul
jl
pusha
incl
or
pop
add
add
and
push
mov
jne
add
dec
lret
add
jb
fildl
std
arpl
popa
insl
mov
push
clc
outsl
jb
inc
popa
jb
pop
cmp
pop
xor
cmc
jb
add
or
aas
roll
ja
jb
mov
idiv
mov
jmp
add
cmpb
push
add
mov
mov
clc
pop
sub
jns
lds
inc
sbb
adc
add
sbb
lock
aam
inc
aaa
lret
mov
das
pusha
jmp
mov
pop
add
or
push
xchg
arpl
pushl
add
into
mov
stos
leave
push
sarl
and
lock
mov
cmp
aaa
pop
stos
lods
imul
aas
pop
pop
add
mov
sbb
pop
sbb
adc
cmc
xor
jae
dec
jns
mov
rcr
mov
mov
mov
mov
sbb
pop
sti
xlat
xchg
pushl
sbb
add
cli
sub
sub
fstpl
push
add
in
push
push
cmp
jecxz
and
mov
push
push
mov
decl
cld
add
inc
mov
push
mov
push
mov
shll
pop
imul
lea
adc
or
inc
in
repnz
cld
push
push
push
call
dec
in
add
mov
sub
sub
fildll
sti
mov
movb
inc
or
movb
sti
push
push
jbe
lea
call
imul
not
inc
pop
orl
dec
jmp
push
pop
ret
mov
rdpmc
rclb
or
lock
push
mov
jne
or
add
or
adc
imul
aaa
stos
and
es
call
xor
sbb
cmpsb
sti
in
or
mov
lock
insb
into
pop
adc
add
mov
andb
mov
mov
or
push
aas
test
pop
cmp
pop
jl
push
aaa
insb
pop
mov
nop
repnz
and
repnz
inc
aaa
jns
add
in
pop
add
add
xchg
pop
popa
data16
sub
jge
rclb
loopne
in
push
push
add
push
and
add
nop
imul
sahf
fcoms
xchg
push
test
xchg
aaa
mov
pop
push
and
test
jne
ret
data16
dec
pop
jne
dec
cmp
lret
leave
jne
sub
add
pop
push
fidivrl
sub
and
inc
xchg
and
sbb
cmpb
and
enter
jo
adc
pop
jne
or
push
ret
push
push
add
mov
push
testb
jnp
divl
and
push
push
sbb
nop
adc
or
ss
push
push
and
pop
mov
cmp
sbb
shld
das
mov
pop
div
pop
sbb
call
push
or
and
pop
sub
dec
adc
ljmp
nop
or
movsw
mov
xchg
xchg
aaa
movsl
movsb
mov
jo
xor
push
adc
push
mov
mov
or
pusha
and
sbb
std
pop
dec
pop
mov
dec
and
xor
add
cmp
call
sbb
inc
mov
add
not
xor
xor
inc
cmp
or
imul
pop
cmp
adc
or
jg
aas
cmp
ja
inc
inc
jno
push
ds
adc
push
and
scas
or
mov
or
push
jae
push
mov
push
sub
adc
cmp
jb
pop
pop
pop
pop
and
add
add
enter
and
insb
nop
and
xchg
mov
int
add
test
and
nop
in
adc
adc
adc
leave
pop
js
and
je
and
add
cmpl
and
add
mov
push
ficoml
xchg
pop
popa
push
adc
dec
negb
or
nop
int3
data16
cmp
pop
inc
cs
sbb
inc
jecxz
lock
pushf
insb
das
pop
and
push
adc
cmp
rcll
add
in
cli
sbb
in
pop
stc
mov
mov
or
lret
adc
icebp
std
lock
jae
and
in
cld
femms
xor
xchg
mov
mov
push
push
sbb
and
pop
or
sbb
mov
clc
jne
and
popf
mov
adc
cmp
xor
ds
lret
repz
push
jae
cmc
shrb
negl
popf
insb
int
outsl
and
cli
push
cs
shrb
std
mov
dec
dec
stos
push
cmp
repz
xor
xchg
push
int3
mov
cwtl
xchg
sti
push
pop
dec
xlat
and
arpl
rorb
pop
pop
cmp
jge
add
jle
push
cmp
lcall
adc
push
mov
cmp
ja
push
pop
loopne
jge
mov
outsl
cmp
je
test
outsl
test
inc
movsb
mov
incl
jo
push
in
jne
loopne
lock
daa
incl
mov
cmp
or
push
mov
push
inc
clc
xor
lcall
testb
add
popa
hlt
add
rcrl
mov
mov
cmp
mov
cltd
mov
idivb
lods
and
fistpl
es
ss
cmp
stos
sub
mov
ja
jne
hlt
scas
icebp
movsl
data16
or
or
testb
add
mov
js
rolb
mov
cmp
cmp
cmp
jbe
loop
fimuls
xor
sub
mov
leave
cmc
push
je
jns
popa
loopne,pt
stos
insl
popa
pop
and
mov
jge
fcomi
mov
jmp
adc
sti
movb
jmp
add
sbb
call
mov
push
inc
call
jbe
cltd
pop
mov
idiv
adc
jg
sbb
jmp
andb
push
add
add
sar
in
mov
enter
cld
dec
nop
and
test
push
les
pop
and
nop
and
rclb
jo
jo
adc
fwait
test
push
jno
mov
cmp
dec
pop
in
test
and
xor
and
fucomi
xor
pop
cmp
push
xor
dec
jbe
cwtl
clc
fistpll
movb
inc
cmp
jb
call
cmp
or
andl
fst
call
lcall
push
xor
out
mov
and
add
push
ret
ret
add
aaa
inc
cmp
jecxz
call
add
cmp
loopne
cmp
das
mov
incl
lret
shr
add
imul
icebp
testb
push
arpl
inc
ret
inc
mov
mov
push
js
ret
sar
sbb
das
mov
pop
fcmovnbe
mov
mov
dec
shl
or
sbb
mov
mov
fildl
jne
cmp
lods
inc
call
es
cs
pop
decl
stos
pop
jne
mov
pop
bound
push
xchg
pop
jbe
sti
dec
cwtl
cmp
sti
not
and
push
jl
push
jl
and
or
add
lea
cmp
pushl
xchg
shr
shl
or
mov
add
repnz
idiv
not
and
testl
mov
push
in
fnstsw
adc
out
push
js
add
push
je
jge
or
fisubs
fimull
add
sti
lret
jg
lea
shr
shl
push
pop
inc
fstpl
outsl
sub
mov
and
not
cmp
add
aaa
xlat
psllq
mov
shr
mov
sti
or
repz
dec
daa
pop
jg
push
idivb
add
lea
sbb
std
ljmp
push
daa
jle
not
and
sub
and
outsl
lret
adc
movb
jecxz
sbbb
xlat
lock
das
loopne
fiaddl
fidivl
imul
adc
test
xor
imul
add
das
insb
in
sub
sbbl
int3
xor
add
inc
std
sbb
add
out
mov
and
cli
sbb
out
mov
rolb
fcomp
cwtl
subb
lret
fucomi
sbb
add
rcr
stc
test
sbb
pusha
adc
pop
scas
testl
sti
mov
pop
les
fldt
mov
mov
jmp
sarb
lret
addl
repnz
mov
fcom
add
out
fdivrs
pop
int
or
les
cmp
arpl
adc
xor
jns
jl
or
or
xchg
jno
std
sti
mov
fisubrs
push
cld
and
fidivrs
pop
aas
pushf
fistps
das
push
mov
cmpsb
pop
mov
pop
add
sub
jnp
fmuls
xchg
or
and
or
popa
adc
insb
lcall
add
or
mov
ret
ja
out
jbe
and
aad
aam
pop
bound
push
imul
sbb
shl
cld
ret
add
and
jg
jge
dec
cmp
inc
shlb
pop
or
fadds
hlt
push
and
rcrb
clc
jb
repz
pop
pop
es
and
lcall
clc
dec
sarl
and
push
xchg
lods
xchg
push
and
call
mov
icebp
imull
mov
imul
call
xlat
lods
mov
fdivs
push
adc
add
rorb
lea
pop
and
js
int
clc
cmp
mov
in
mov
fnstcw
out
adc
jmp
add
aaa
outsl
mov
mov
out
loope
out
sbb
loopne
ret
mov
enter
aaa
or
dec
xlat
mov
fbstp
dec
or
sbb
imul
or
fnstenv
outsl
sbb
mov
adc
inc
loop
rcr
je
out
or
fcmovbe
fdivs
aaa
add
sbb
pop
add
mov
xlat
mov
daa
lret
repz
int3
aad
flds
outsl
adc
jae
movl
iret
cmp
mov
cmp
or
data16
repnz
xor
test
lcall
test
iret
das
mov
call
divb
adc
or
cs
js
xchg
out
fadd
and
insl
adc
inc
out
in
sti
xor
mov
repnz
or
in
or
call
in
inc
inc
fwait
sub
out
ljmp
xchg
lods
aam
cmp
dec
jmp
jb
pop
mov
mov
int3
mov
sbb
pusha
dec
mov
cli
lock
fidivl
xchg
rcrb
mov
mov
mov
or
mov
in
sbb
jle
sub
test
ret
lock
lock
hlt
out
dec
fimuls
imul
aam
xchg
jae
orl
cmpsb
adc
fidivs
test
or
sbb
das
pop
imul
push
aas
sbb
cmp
rcrb
fstps
push
lret
test
jle
ja
div
xchg
xor
jp
jl
pop
fnstenv
mov
jecxz
pushl
xchg
gs
lods
les
arpl
jne
cli
mov
mov
mov
add
sub
cmc
ret
push
or
in
sbb
jl
repz
push
xchg
ljmp
inc
push
or
es
mov
jns
and
fwait
xchg
push
hlt
cmp
pusha
fstps
scas
ja
mov
mov
ret
pop
pop
gs
pop
jo
lret
sbb
rcrl
repz
int3
or
push
or
dec
mov
pop
ja
jno
dec
outsb
xor
repz
out
call
unpckhps
sbb
adc
rcrl
test
sub
movsb
or
jg
call
scas
dec
jle
outsl
jecxz
jp
jb
sbb
sbb
int
dec
inc
jb
pop
fistpl
loopne
sub
jecxz
jp
ret
pusha
call
push
adc
add
pop
fdivl
mov
arpl
push
test
imul
sbb
repnz
sub
mov
ret
fisubrs
mov
movswl
in
add
repz
rclb
xor
dec
mov
pop
jge
lods
fcmovbe
pop
xlat
pop
add
pop
movsb
mov
pop
push
testl
and
out
inc
js
and
cli
push
mov
mov
arpl
mov
jge
cmp
jl
js
sub
push
outsb
in
push
push
testb
xor
or
test
nop
sub
js
adc
push
xlat
pop
fisubrl
jle
movsl
pop
mov
addr16
inc
pop
inc
lods
lock
mov
mov
into
mov
fcomi
ljmp
add
sbb
cmp
sarb
dec
jne
pop
pop
or
mov
ljmp
icebp
jne
shr
ljmp
je
sbb
mov
cmp
je
movsbl
fstpt
add
sub
jne
inc
cmp
jne
cmp
sub
push
ljmp
xor
add
pop
or
push
shr
lea
jl
add
jg
jns
insl
ljmp
stc
shll
iret
pusha
fildl
jbe
mov
pop
rclb
fstl
andb
xor
lret
mov
jmp
sub
mov
inc
js
mov
mov
fidivrl
adc
jmp
js
dec
and
rep
jecxz
aaa
or
fnsave
stc
jne
push
lea
adc
adc
je
pop
rcl
push
test
nop
push
shll
mov
faddl
sub
pop
mov
or
cld
call
sub
div
lods
js
sarb
cld
dec
cmp
sbb
out
or
testb
shrl
or
adc
xorb
adc
pop
popf
pop
dec
mov
stos
jnp
mov
mov
int3
push
loopne
pop
int3
rolb
aam
fdivrl
neg
call
push
push
push
add
adc
data16
jne
inc
jl
push
or
call
repz
push
jo
sahf
jns
and
gs
or
popf
lods
adcl
lret
mov
mov
add
add
js
call
sbb
cmp
or
dec
mov
lods
movsb
dec
ja
mov
inc
lods
outsb
les
fimuls
cli
enter
rclb
ret
mov
pop
adc
or
adc
insb
pop
outsb
movb
in
dec
out
push
sti
in
mov
icebp
inc
repnz
mov
mov
add
pusha
sub
or
lcall
cli
pop
add
and
sub
aam
dec
loope
adc
add
pusha
hlt
jmp
test
add
and
or
and
push
mov
inc
and
dec
sbb
inc
decb
sbb
jge
push
push
push
fsubrl
adc
sub
jbe
stc
adc
int3
mov
ret
xchg
je
das
xor
adc
sbb
clc
adc
push
cwtl
in
xor
inc
int3
or
imul
push
movhps
mov
push
xor
sbb
jne
in
mov
mov
cwtl
por
sub
jge
add
sub
popa
and
pop
jmp
icebp
inc
lea
pushf
adc
imul
sub
inc
sbb
jbe
stos
xor
sbb
or
xchg
clc
add
jle
lock
shrl
shlb
cmp
stos
sub
pop
call
iret
hlt
mov
add
lods
inc
inc
inc
inc
jmp
mov
jb
fucomi
or
pop
sub
enter
add
mov
push
mov
push
repnz
pop
mov
cmova
adc
andl
mov
cmp
push
dec
cld
pop
cmp
scas
loope
andb
bound
jno
push
pop
adc
cmp
mov
or
mov
out
fcmovnu
mov
dec
dec
pop
cmp
pop
push
arpl
jb
mov
cmp
das
fsubrl
jmp
xor
xchg
push
orb
dec
data16
xchg
push
mov
imul
push
aad
push
loopne
shrl
push
ficompl
cwtl
cmp
out
xchg
cmp
add
pop
add
or
fstpl
dec
lcall
inc
add
sahf
and
xchg
sub
jb
adc
int3
out
pop
push
xorb
adc
mov
lea
cmp
jle
sub
jne
add
push
call
shl
and
mov
cmp
adc
pusha
ficomps
clc
inc
push
pop
cld
call
shlb
push
lods
orb
sub
push
jo
addb
add
or
pop
pop
into
sti
dec
mov
cmpsb
xor
inc
or
movsb
mov
or
cmp
xchg
xchg
inc
js
push
testb
repnz
clc
mov
cmp
mov
push
and
xor
nop
jl
pop
adc
mov
sbb
loope
les
jbe
pop
stos
int3
and
inc
xor
xor
adc
or
clc
jae
int
fcompl
or
enter
sub
jae
or
mov
cmp
faddl
ret
and
ret
jae
inc
push
fnsave
adcb
mov
jle
test
fstpl
fistl
leave
push
xor
scas
mov
in
push
insl
ds
mov
call
push
push
jbe
xchg
nop
scas
pop
mov
or
and
ret
addr16
lea
and
jo
enter
dec
mov
scas
fcomp
sub
mov
pop
xchg
mov
pushl
cmp
pop
shrb
mov
dec
shrl
adc
mov
sti
sub
mov
sbb
pop
add
jmp
notb
insl
into
xor
pop
jl
addr16
clc
cmp
mov
mov
mov
or
pushf
inc
out
pop
cmp
push
int3
decl
int3
cmp
sti
ja
cmpl
cmpl
scas
or
push
jo
mov
jo
add
sbb
pop
dec
enter
cmp
jae
and
std
divb
pop
jo
xchg
in
sbb
pop
adc
jne
mov
cmpsl
pop
jmp
call
sub
cmp
add
inc
sti
pop
xor
dec
pusha
subb
sub
push
sub
pop
dec
xchg
xor
mov
in
aaa
and
or
sbb
dec
cmp
mov
test
push
push
decb
sarb
pop
push
jo
push
sub
jge
jno
sbb
jg
leave
lods
lret
in
fldcw
scas
insl
mov
mov
pop
cs
push
mov
mov
mov
mov
xchg
lret
in
mov
mov
mov
jmp
and
fs
mov
rcl
js
shlb
insb
aad
xlat
pop
fsubrs
and
fcmovu
gs
loopne
test
insb
mov
jecxz
pop
in
push
fdivs
lret
insl
out
dec
out
call
lcall
jo
imul
je
rol
jbe
ss
ret
rol
xor
mov
add
xor
enter
insl
xlat
lret
cmp
int3
hlt
xchg
push
xchg
push
cwtl
cltd
lcall
fwait
pushf
adc
sub
int
mov
mov
cmpsb
xor
test
push
test
data16
cmc
div
clc
ds
sub
mov
mov
stos
sbbl
shrb
add
pop
shlb
int3
mov
loopne
push
scas
or
push
fdivs
aaa
xor
in
shl
lret
pop
cwtl
int3
and
int
jmp
out
cmp
lret
ds
cltd
pop
xorb
and
pop
dec
shlb
adc
xchg
pop
cmp
cmp
cmc
adc
mov
stos
jge
pop
push
or
jg
lea
mov
push
inc
dec
xchg
xchg
pop
jge
sti
dec
ds
movsl
into
adc
push
inc
shl
xor
imul
fcoml
pop
cli
inc
ret
mov
leave
scas
sbb
mov
push
inc
sub
jb
cwtl
aaa
sbb
fs
dec
movsl
jmp
sbb
mov
inc
fdivrs
call
mov
nop
repnz
jbe
sbb
gs
or
shrl
andb
loopne
push
jno
and
pop
jp
daa
mov
mov
xchg
push
jno
adc
fdivrs
into
loopne
out
test
inc
or
mov
dec
aaa
push
daa
lock
fwait
jmp
mov
mov
push
dec
adc
sbb
cmp
dec
les
add
xor
outsb
inc
inc
ds
aaa
or
sub
insl
or
adc
jno
popa
subl
filds
fcoms
add
cwtl
andb
push
fnstenv
and
mov
loope
push
incl
lock
pop
xor
int3
push
aaa
add
pop
mov
mov
scas
sarb
dec
mov
or
push
add
xor
fcomip
lret
xor
fiadds
or
pop
femms
inc
pop
sbb
ret
lret
adc
ret
add
fcomps
adc
int3
shl
out
cmpl
add
aas
jnp
mov
fs
jmp
imul
pop
adc
test
clc
std
loope
in
popf
movsb
push
aad
or
xchg
push
xchg
aaa
fsubs
cmp
add
cmp
fwait
xchg
mov
mov
cmp
cmpb
and
sbb
push
mov
jo
jns
call
inc
push
push
push
in
cmp
mov
add
sbb
push
mov
fwait
push
adc
or
add
cld
xchg
adc
jl
xor
sub
call
jmp
push
js
add
outsl
scas
fs
or
ret
call
in
andl
jb
push
loope
fwait
ror
fsubrl
loopne
filds
adc
mov
daa
icebp
pop
sbb
mov
xchg
fisubs
add
and
lret
and
push
int3
dec
int
dec
pop
ss
jp
imul
shll
dec
push
imul
fidivl
fildl
push
data16
fidivs
fbstp
cmpsb
imul
pusha
pop
std
cli
sti
cld
std
insl
xlat
insb
int
mov
mov
fnstenvs
push
mov
mov
mov
rcll
pop
pop
mov
xorb
enter
pop
jb
xor
in
out
mov
lcall
jmp
lcall
or
xor
jb
icebp
and
dec
xor
jo
inc
sub
cmp
cli
mov
adc
fnsave
out
pop
aam
shlb
and
test
mov
or
push
xor
enter
rcrl
hlt
xor
xor
sbb
enter
in
int
add
push
adc
shr
fldcw
out
dec
sub
mov
lret
imul
pop
push
outsb
fs
jb
out
ja
jne
bnd
lcall
insb
rorb
mov
mov
pop
dec
push
push
roll
jno
or
cmp
cmp
scas
hlt
inc
cmp
insl
jecxz
sub
push
fsubrl
sbb
or
fsubl
sub
loope
cmp
mov
xor
fldcw
lret
cli
cs
adc
sarb
xor
shll
inc
mov
and
in
add
hlt
ret
sbb
call
add
adc
in
test
xor
xchg
clc
lock
jge
cmp
and
leave
mov
push
lret
mov
mov
fistl
sbb
hlt
in
adc
lods
stos
enter
inc
test
iret
push
and
adc
dec
in
push
or
sub
or
jne
xor
and
mov
out
ljmp
mov
push
call
push
inc
int3
mov
shll
cmp
pop
jae
mov
mov
mov
cmpsb
pop
ss
mov
mov
mov
lcall
mov
xor
rol
adc
les
imul
outsb
pop
leave
outsb
fwait
gs
lret
fs
int
das
into
bound
cmpsb
pop
iret
rcl
rcl
adc
or
pop
xlat
aaa
fsubs
fcmovu
ja
mov
dec
mov
mov
jae
loop
lcall
pop
out
call
jmp
in
daa
in
lcall
fs
es
push
repnz
loopne
imul
dec
andb
xchg
mov
mov
cs
push
sbb
sub
adc
jae
aad
aaa
fwait
scas
pop
cld
or
mov
clc
push
fsub
mov
lock
cmp
lods
and
adc
or
mov
js
loop
fcompl
out
fst
mov
loop
dec
xchg
pop
call
ret
or
mov
inc
sbb
adc
call
mov
mov
mov
pusha
pushf
push
mov
imulb
hlt
bt
add
push
call
inc
and
pushl
call
cmp
cmp
jg
loop
add
ds
repnz
outsb
loopne
repz
test
sbb
add
and
add
or
lcall
stos
sbb
mov
mov
sbb
cs
add
jmp
js
mov
dec
fnstcw
jno
jg
push
jge
ds
loop
ljmp
or
rcrb
lcall
outsl
adc
add
enter
xor
push
cld
call
jbe
das
loop
dec
imul
pushf
adc
push
or
dec
gs
xchg
les
push
xor
or
pop
mov
inc
dec
sar
sbb
ret
bound
arpl
std
mov
in
push
jmp
js
adc
test
pop
or
cmp
push
pop
jp
cwtl
loop
push
ss
sbb
mov
lock
call
xor
sbb
push
push
out
js
lods
cs
push
push
dec
shlb
push
add
pop
mov
test
mov
in
cmc
mov
fmuls
mov
pop
jo
inc
or
pushf
pusha
mov
movsl
cmc
jg
outsb
idiv
jmp
lods
and
pushf
hlt
xor
js
push
xchg
in
add
lods
aad
inc
pop
push
ret
push
add
cmp
xchg
outsl
sub
push
or
push
push
stc
mov
inc
push
lahf
cwtl
sbb
cmp
out
pop
push
jno
push
jg
jl
sbb
popa
repz
insb
shr
push
add
call
adc
mov
dec
insl
sub
ret
loope
daa
pop
sub
aam
lahf
adc
test
insl
add
test
test
outsl
fnstsw
aam
lods
leave
push
hlt
in
jmp
or
fildll
filds
dec
je
pushf
mov
sub
jmp
mov
add
cs
pop
dec
es
add
mov
insl
and
push
mov
ss
out
mov
xor
cmpsb
push
sbb
pop
pusha
aas
pop
sub
jmp
imull
lods
adc
push
cmp
pushf
mov
sub
sub
daa
arpl
cmp
fildl
movsl
mov
callw
pusha
fwait
mov
cmc
nop
cmp
fisubl
fsubr
fcmovbe
cmp
ret
push
jmp
aaa
adc
rorl
or
daa
dec
shr
aas
sub
rcr
push
enter
mov
lahf
sub
les
inc
xor
popf
xor
sbb
clc
aas
mov
lret
cld
adc
push
cld
cld
sub
mov
cli
adc
mov
and
in
lods
inc
lea
xchg
sbb
fidivrs
adc
mov
mov
sbb
push
invd
sub
cmp
fdiv
cli
sub
test
call
or
adc
je
negl
enter
in
clc
std
and
sub
sti
popf
out
mov
dec
call
adc
push
push
fisubs
cmp
and
pop
add
sub
js
push
psadbw
xorl
rolb
nop
xorl
js
clc
sub
popa
or
cmp
ret
out
xchg
inc
sub
mov
add
mov
into
ret
cmpsb
add
sbb
cld
adc
aam
jbe
mov
push
pop
ret
fcmovnu
pop
jmp
jmp
inc
repnz
jo
dec
pop
loope
push
adc
js
push
xor
shrl
inc
add
sub
mov
scas
cmp
data16
dec
les
ja
mov
xor
popa
inc
adc
push
xchg
cmp
fidivrl
adc
push
cmpb
dec
jl
ret
mov
loope
lea
add
mov
inc
fldl
sub
push
push
fwait
loop
gs
rol
rol
imul
iret
jnp
push
sti
cmp
sbb
mov
sahf
mov
mov
inc
mov
adc
pop
rol
push
push
push
mov
lock
fidivs
xchg
mov
push
and
dec
fildl
inc
or
ret
loope
xchg
mov
lea
repnz
leave
hlt
hlt
jo
jbe
sarl
jbe
rorb
inc
mov
popa
inc
add
aas
add
or
mov
hlt
push
pop
mov
sbb
pop
dec
push
inc
push
lock
and
fmul
arpl
adc
pop
jp
dec
inc
push
pop
cmp
add
xor
sbb
adc
inc
ret
cmp
add
data16
movsb
mov
lods
and
xchg
mov
std
xchg
and
push
dec
mov
jne
cmpsl
fisubs
iret
jne
les
push
jl
sbb
cmpsb
cmp
mov
or
fists
bound
movsl
xor
cltd
xchg
inc
xchg
mov
mov
sahf
daa
int
leave
pushf
pushf
pop
jl
mov
xchg
cmp
cmpsb
leave
pop
jle
xchg
iret
leave
std
std
jp
and
push
ljmp
push
in
push
xor
xchg
inc
fists
into
mov
and
call
add
inc
xchg
push
mov
jg
sbb
std
push
mov
cld
sub
int
scas
sbb
or
sbb
js
jae
push
xlat
xor
divl
faddl
test
clc
sbb
stos
out
arpl
lcall
movl
sti
sbb
pushf
xor
daa
push
sbb
xchg
xlat
int3
sbb
jp
pop
ds
ret
test
inc
ljmp
mov
pop
outsw
outsb
je
inc
gs
jae
int
xchg
fsubrl
lret
inc
jp
mov
pop
or
in
cmp
adc
lods
aaa
push
mov
mov
cli
mov
pop
and
inc
or
sarl
fs
outsb
insl
addr16
int3
out
jb
xor
xor
or
movsl
cs
gs
js
es
add
jb
lcall
cld
cwtl
sbb
mov
dec
cmp
sbb
test
jns
sub
push
shrl
xchg
mov
icebp
adc
je
add
movl
jne
jge
arpl
mov
push
sbbb
aas
or
add
lret
push
cmp
stc
dec
nop
and
call
es
out
in
sbbb
xorl
push
add
mov
or
ljmp
mov
hlt
adc
add
or
adc
push
inc
dec
xchg
jae
sbb
popf
cmp
pop
ja
je
orl
push
pop
pop
aas
add
hlt
mov
aas
fsubs
push
dec
fdivrs
fidivs
dec
fnstsw
sbb
cmp
testl
mov
shrb
hlt
sbbb
push
je
fwait
mov
add
inc
push
add
rcrl
hlt
in
pop
jne
hlt
cmp
in
adc
clc
xor
sarl
push
test
push
fwait
xlat
cmp
shrl
lds
xchg
lods
shl
sub
pop
xchg
gs
rcl
fcomp
mov
rclb
nop
pop
add
or
adc
and
sbb
ret
xchg
and
loopne
cvtps2pd
bound
and
sarb
push
adc
sahf
xchg
or
and
jb
dec
scas
test
adc
cld
cmp
pushf
mov
inc
call
fwait
or
add
cltd
mov
negl
mov
pop
movsl
and
fs
xor
fstl
mov
adc
inc
rcl
inc
and
incl
je
xor
inc
je
lock
fnsave
sbb
inc
mov
mov
add
or
xchg
mov
mov
xor
or
xor
push
jno
dec
dec
xor
rol
dec
pushf
dec
inc
push
lods
xor
fs
insb
mov
addr16
insb
gs
xchg
gs
cs
add
insb
mov
movsl
fcoml
outsb
je
push
jb
jbe
mov
mov
push
movsl
pop
cs
push
gs
lret
scas
stos
push
lods
lods
loopne
lret
mov
lret
je
jo
jo
sub
mov
outsb
push
gs
sub
outsb
mov
das
roll
aam
fnstenv
dec
rorl
lea
mov
nop
inc
xchg
gs
pushf
js
xchg
xchg
xchg
xchg
inc
push
cwtl
js
pop
xchg
movsl
push
je
dec
aaa
cmp
fnstsw
cmp
xlat
xor
roll
jecxz
in
shll
mov
mov
jmp
insl
mov
lgs
inc
jbe
shrl
mov
inc
mov
pop
mov
sbb
les
in
xchg
xchg
xchg
in
mov
lock
xor
pop
pop
clc
loopne
push
sub
jg
std
inc
adc
inc
clc
adc
cmp
cmp
sub
mov
adc
mov
pop
lahf
xor
imul
push
mov
push
push
rep
shrd
call
push
mov
aaa
sbbl
sahf
icebp
cmc
scas
in
je
push
adc
adc
insb
mov
loop
je
mov
loop
ds
sub
or
imul
cld
repz
out
add
orl
ja
push
mov
adc
cmp
or
add
mov
shl
jne
pop
cld
aam
push
cwtl
outsb
push
inc
mov
testb
sbb
sbb
sahf
lret
mov
test
incb
or
bound
adc
push
jne
faddl
andl
pop
or
rcrl
scas
jle
jne
call
sbb
shrb
jp
or
sahf
dec
aad
pop
movsl
jl
bound
fldl
test
movsb
mov
mov
and
shlb
add
fsubs
add
imul
sarb
sbb
mov
mul
or
sub
sub
pusha
sub
push
fdivp
ss
mov
cmp
inc
js
jmp
clc
push
mov
outsl
jnp
mov
das
pushf
xor
jmp
jle
or
arpl
inc
push
scas
cmp
scas
cltd
in
in
xor
popf
aam
jg
push
lds
mov
inc
rclb
sub
add
mov
sbb
and
or
sub
andb
push
in
or
add
xchg
sub
pcmpeqb
sbb
xchg
or
jle
adc
add
jg
push
push
push
cmp
mov
das
sub
and
push
jmp
aas
adc
add
iret
scas
and
sbb
in
lods
mov
ja
gs
add
push
cmpl
xchg
enter
imul
je
gs
xchg
in
insb
outsl
arpl
dec
fs
es
pop
jae
sbb
popa
cmp
jg
jmp
push
or
int3
jmp
mov
dec
xchg
push
and
sbb
pop
jne
scas
push
dec
orb
daa
xchg
push
shrl
push
imul
jae
adc
jle
or
enter
sahf
jns
sbb
xor
scas
stc
or
push
push
sbb
cld
pop
clc
push
pop
pop
xchg
lods
push
push
das
push
cs
or
add
imul
xchg
mov
fisttpll
bsr
addb
mov
sub
mov
push
mov
push
mov
aad
push
mov
and
pop
mov
push
rorl
push
cwtl
add
mov
or
cmp
push
das
stc
inc
sub
imul
test
jae
call
cwtl
jb
sbb
mov
adcb
lods
or
shll
aas
popa
arpl
push
xor
adc
shll
sub
popa
or
dec
shll
jne
stos
and
mov
push
aas
popa
arpl
xchg
xchg
outsl
outsb
gs
gs
xchg
gs
imul
es
shlb
aas
popa
arpl
lret
leave
imul
lret
outsb
push
loopne
loope
jns
test
in
out
imul
arpl
xor
sub
outsb
imul
or
jp
xor
shll
es
and
jae
dec
je
add
pusha
mov
sbb
aam
adc
les
bsf
or
sahf
std
lock
adc
pop
lock
enter
rep
inc
or
and
push
fstpl
orl
pop
push
add
call
rcr
pop
jns
imul
mov
mov
fdivr
jge
pop
jmp
xor
cli
inc
xchg
or
jo
sub
popa
dec
shll
cli
sti
cld
lock
adc
sbb
sbb
into
mov
rclb
xor
push
aad
xchg
std
mov
and
xor
adc
xor
sub
mov
ret
dec
inc
mov
stc
mov
cmp
sbb
repz
mov
je
cmp
mov
mov
add
test
push
incl
pop
dec
cmpb
jns
push
call
int
jb
pop
addr16
lock
xlat
mov
pop
icebp
jle
dec
add
mov
mov
pop
rol
mov
pusha
cmp
shlb
call
adcl
dec
cmp
xor
fistpl
or
adc
test
jle
jne
push
mov
cltd
push
cmp
lret
mov
lods
es
test
icebp
or
xchg
xor
xchg
add
loopne
enter
inc
in
pop
inc
in
adc
add
outsl
sub
mov
jae
insl
bound
dec
pop
push
mov
insl
repz
cmp
sbb
push
jo
mov
jns
pusha
inc
sbb
jns
mov
dec
push
cmp
cld
in
imul
cmpsb
imul
imul
pushw
stos
cmc
add
xchg
repz
repnz
dec
push
cmc
inc
xor
push
mov
lods
adc
or
pop
lret
xchg
pusha
inc
fs
xor
aam
xchg
sub
fdivl
ds
cmp
mov
pop
shrb
push
and
pop
ljmp
insl
cmp
jbe
movl
cmp
fisubs
lcall
pop
hlt
je
and
fs
adc
push
cltd
in
fildll
sbbb
imul
pop
pop
add
jle
add
jb
sub
sbb
sbb
addr16
ficomps
jl
or
mov
test
cmp
or
mov
jnp
and
xchg
mov
test
jns
adc
insb
and
movsb
add
clc
cmc
popa
mov
adc
push
icebp
mov
pop
sbb
and
sub
notb
sbbb
pusha
fisttpl
testb
pop
xor
adc
lods
sahf
adc
jmp
dec
dec
dec
xor
push
jb
push
pand
jmp
adc
and
pop
dec
add
iret
jbe
xor
pop
pop
rcrb
jo
inc
jl
clc
cld
pop
bound
iret
sub
test
jle
mov
decl
jae
lea
push
shl
add
add
imul
int
lahf
shll
xor
push
imul
xchg
and
sbb
mov
aad
das
xor
xchg
sbb
and
gs
adc
sbb
clc
add
or
adc
insb
test
hlt
gs
push
lea
arpl
pop
stos
mov
repz
or
inc
xchg
out
pop
out
fdivr
add
xor
lods
hlt
cld
andb
daa
ljmp
sub
out
xor
add
mov
push
sbb
aas
clc
pushl
ret
push
fistl
fs
pop
add
mov
jb
xor
push
test
outsb
and
out
mov
stc
cmp
incb
popf
mov
pop
dec
pop
ret
push
lods
push
push
push
push
mov
mov
in
cmp
pop
mov
imul
push
cmp
pop
notl
mov
jbe
das
pop
notb
sbb
aam
cmp
stos
fstps
push
push
lcall
or
add
inc
jns
ret
xor
cmp
call
push
lds
jb
call
nop
andl
dec
into
bound
sbb
and
xor
inc
sub
dec
enter
mov
loopne
pop
add
or
repnz
insb
testl
ds
out
shrb
mov
fwait
call
int3
jp
aad
data16
ss
clc
pop
cmovl
adc
sub
icebp
xor
mov
jmp
mov
cmp
lcall
inc
ds
and
pop
sbb
cmp
xor
mov
pop
and
enter
fnsave
fcoms
and
xor
and
pop
outsb
or
test
mov
push
clc
ret
inc
lcall
sbb
mov
push
cmp
and
daa
cmp
cmp
jb
pop
mov
add
push
xor
and
add
cld
hlt
imul
lcall
xor
cs
insb
xlat
jb
pop
outsb
popa
cmp
arpl
jbe
or
xor
arpl
outsl
sbb
or
insl
jne
in
outsl
adc
fiaddl
scas
jecxz
add
mov
in
pop
fwait
je
push
push
cld
stos
mov
out
jno
inc
repnz
jnp
test
mov
hlt
push
xchg
or
dec
pop
imul
out
pusha
cmpb
loop
xchg
imul
imul
movsl
mov
out
ror
mov
dec
mov
aas
subb
add
imul
popf
rolb
pusha
mov
nop
xchg
xor
nop
dec
and
fsubl
inc
push
nop
mov
cmpsl
xchg
pop
js
jne
push
push
push
cwtl
mov
push
lock
pop
cld
jo
mov
push
inc
call
inc
xchg
or
mov
hlt
xchg
cmc
hlt
loope
push
xor
sub
rorl
add
int3
push
test
add
mov
add
dec
jno
xchg
adc
lret
push
stos
mov
mov
xchg
pop
faddl
je
clts
jmp
push
pop
clc
test
cmc
jge
fmull
and
sub
dec
test
addb
pop
add
mov
push
shll
jo
dec
shll
imul
fs
insb
push
inc
sub
mov
gs
fs
shll
jb
add
xor
dec
outsb
outsw
pop
pop
dec
cmp
xor
cmp
pop
outsb
icebp
jne
add
sbb
xchg
xchg
xchg
fisubs
dec
adc
jne
test
cmpl
or
enter
xchg
xchg
test
pop
lret
dec
xor
xchg
adc
into
cmp
sbb
ljmp
and
sbb
pop
add
mov
push
xlat
rclb
and
sbb
addr16
sbb
rcr
mov
and
push
enter
lea
shl
sbb
sub
stos
xor
jle
push
jae
cmp
fisubrl
cmp
cmp
repz
aaa
cmp
adc
sub
sbb
scas
xchg
out
adc
mov
imul
or
cmc
cmp
lea
xlat
lea
or
addr16
fisubl
dec
js
inc
xlat
je
fimull
or
std
adc
inc
idivl
and
sub
mov
push
fisubrs
mov
sbb
add
pushf
insb
les
jb
lret
mov
lret
pop
dec
imul
daa
outsl
mov
je
shlb
outsl
je
lret
mov
jae
push
in
push
gs
dec
dec
outsl
mov
popf
sub
popa
jg
lret
mov
lret
pop
dec
push
dec
inc
popa
das
popa
mov
arpl
sbb
and
mov
ret
data16
lods
and
dec
test
mov
fldenv
mov
xor
pop
mov
mov
cs
xor
cltd
mov
insl
ss
mov
dec
mov
adc
mov
xchg
adc
jne
mov
leave
cmpsb
fnstcw
int3
les
fmul
mov
addr16
loopne
add
into
testb
pop
add
loope
inc
adc
inc
push
add
jno
mov
cmpsl
in
into
pop
pop
popa
add
and
cwtl
and
jo
les
int3
push
mov
nop
push
les
loope
mov
into
fs
mov
ficompl
inc
push
xchg
jo
shr
xor
or
imul
jne
and
ljmp
add
cmp
sbb
in
out
out
ds
lock
rcrb
flds
shll
je
in
xchg
movsl
outsl
aam
stc
pop
stc
mov
jb
stc
fdivr
fyl2xp1
lret
inc
push
stos
adc
testl
clc
leave
dec
push
jb
clc
fdivr
and
jns
aam
aad
fdivr
sbb
adc
fsincos
cmp
outsb
mov
and
test
out
or
sti
mov
neg
sbb
add
movb
fs
test
lods
pop
lcall
movsl
cmp
scas
or
insb
dec
ss
mov
mov
mov
xchg
jmpw
mov
jb
popa
mov
ja
mov
in
mov
out
fs
lahf
mov
xchg
mov
jmp
cmpsb
nop
das
imul
in
fs
xchg
aad
or
in
in
xchg
pop
xchg
dec
xchg
cwtl
out
insb
in
cltd
lcall
dec
xchg
imul
into
ljmp
out
in
mov
scas
sub
adc
clc
inc
sahf
pop
bnd
fdivr
mov
push
enter
popf
fdivr
mov
pop
test
mov
pop
xor
pushf
test
pop
popa
nop
outsb
test
and
es
pop
mov
in
cmp
stc
pop
dec
stc
push
and
inc
xor
popf
cmp
sub
add
test
pop
mov
inc
mov
or
aas
xor
rorl
into
cmp
mov
add
jmp
repnz
dec
fisttps
jle
stos
mov
cmp
jl
fsubrp
mov
add
jg
inc
cmp
jl
cmp
daa
lds
out
mov
push
push
push
dec
adc
je
dec
cmp
das
dec
shll
fs
jbe
dec
shll
dec
rorl
bound
arpl
cmp
xor
xor
sarl
das
data16
dec
shll
das
jno
dec
shll
insb
imul
popa
jae
call
imul
dec
shll
jo
das
das
shll
jno
dec
shll
xor
xor
outsl
imul
shll
cmp
xor
shll
das
data16
sub
inc
shll
xor
mov
lret
mov
insw
jno
cwtl
pop
lcall
sbb
mov
jo
mov
mov
loop
mov
ja
nop
add
stos
sbb
adc
pop
jb
xchg
xchg
and
leave
je
xor
shll
das
das
or
imul
dec
shll
cmp
xor
xor
arpl
shll
xor
movsl
or
xor
cs
cmp
mov
icebp
mov
jne
push
nop
sub
lods
das
and
sub
adcb
pusha
fwait
lods
in
add
xor
call
repnz
add
add
dec
popf
sbb
xchg
xor
adc
mov
xchg
jo
mov
ja
cmpl
jne
cmp
cmp
mov
sbb
je
jl
mov
push
mov
stos
test
or
lcall
mov
mov
dec
adc
sbb
and
mov
repnz
mov
mov
xor
xchg
mov
test
cli
jp
mov
mov
pop
inc
out
fcompl
push
cmp
cli
xchg
or
arpl
push
mov
mov
add
pop
in
adc
pop
jne
shrl
bound
arpl
or
lods
push
pop
aam
iret
push
lea
adc
ss
int
mov
sub
test
loopne
jne
and
sbb
push
cmp
ret
xor
or
dec
decl
mull
pusha
mov
push
mov
add
push
rorl
xor
add
push
jo
add
mov
or
pop
mov
imul
lcall
or
loope
inc
xchg
gs
xchg
outsl
insl
bound
push
pop
xchg
gs
jae
jb
popa
mov
xchg
gs
addl
imul
pushf
sub
shl
inc
fs
insb
daa
add
dec
movzbl
pop
mov
mov
mov
lcall
or
addr16
ror
or
shrl
cmpsb
imul
imul
jmp
in
je
inc
test
ficoml
in
jl
orb
push
add
sbb
inc
mov
and
and
mov
adc
sbb
mov
fldl
ret
call
xor
mov
sub
mov
enter
ss
or
ja
xchg
mov
xlat
inc
sbb
xor
mov
repnz
sbb
roll
pop
lock
sbb
jl
add
repnz
subb
or
iret
and
sbb
cs
addb
clc
fxtract
sbb
fistl
test
cmp
mov
in
out
cmp
clc
add
dec
ret
jmp
cmp
leave
or
jmp
adc
or
not
adc
xchg
add
movl
inc
xor
cmp
and
andb
cmpsl
push
mov
inc
aas
mov
adc
fsubs
lahf
mov
sbb
cmpl
xchg
mov
movl
pop
cltd
call
aad
add
or
addr16
rolb
jne
push
int
pop
mov
mov
pop
pop
push
inc
push
pop
sbb
inc
cmp
mov
call
mov
inc
sbb
and
test
mov
hlt
mov
mov
mov
mov
fcomp
jo
jo
push
xor
pop
xchg
adc
nop
pop
cmpsl
fsubrl
lcall
sbb
outsl
dec
jb
negl
aas
mov
stc
pop
cmp
jge
cmp
push
push
js
xchg
mov
jge
mov
sbb
mov
outsb
pop
jne
mov
mov
data16
mov
mov
add
push
lret
cmp
mov
inc
ss
mov
jbe
xchg
push
push
stos
fwait
scas
cmpsb
mov
push
pop
fs
rcrb
outsb
gs
jbe
lods
addb
xor
cmpsb
mov
fs
lcall
out
jmp
ljmp
out
pop
nop
mov
push
repz
lods
dec
jp
push
cmc
push
outsb
fs
inc
sub
xchg
shll
pmullw
jb
mov
sbb
mov
shll
jge
sbb
imul
leave
fmuls
jo
jne
xchg
cmc
and
jne
movl
xchg
or
jp
push
jmp
sbb
mov
or
ds
mov
stos
or
inc
jmp
push
inc
movsb
inc
add
fstps
push
or
add
push
push
shl
jne
pop
mov
lods
fldl
push
mov
test
fsubl
js
sbb
in
sbb
cmp
orb
cmp
sub
cmpsb
lods
hlt
sbb
cmp
mov
in
lcall
arpl
and
dec
shlb
sub
test
dec
add
or
fsubl
pop
mov
iret
cmp
pop
push
push
or
mov
adc
xor
test
lods
std
dec
shll
push
xlat
decl
jp
add
js
negl
push
ljmp
mov
loope
mov
addr16
int3
mov
in
or
mov
pushf
jo
cmp
xchg
mov
mov
push
leave
cwtl
pushf
in
in
int3
cltd
shrb
push
pop
xor
dec
sbb
mov
pop
pop
xor
ret
mov
or
int3
int
dec
jno
inc
out
pop
lcall
rorb
stos
add
pop
jne
cmc
cmpw
add
jns
add
and
sqrtps
sub
jl
add
sarl
je
cmp
sbb
cmpb
push
jg
js
add
jo
add
cmpl
mov
imul
push
lea
push
adc
jns
add
add
mov
add
push
inc
shll
mov
inc
sub
divl
out
dec
or
rorl
xor
mov
jle
add
rolb
jnp
sbb
jno
mov
shll
das
lods
inc
mov
xor
jno
add
fisttpll
pop
inc
test
pusha
lea
shr
jle
movzwl
shlb
pop
mov
shr
test
je
addl
add
jne
loope
adc
fldt
pop
cmpsl
inc
lar
adc
lock
fimull
dec
out
push
sub
pop
or
jecxz
and
shlb
push
add
pop
jae
lea
mov
pop
pop
add
and
jl
add
jmp
dec
push
sub
outsb
insb
xor
push
repz
mov
jno
push
loopne
dec
ja
fcomps
je
adc
loop
sub
jbe
inc
adc
iret
jo
sbb
inc
js
pop
shll
pop
pushl
add
push
scas
clc
add
sub
add
and
sub
pop
push
mov
mov
adc
outsb
mov
mov
dec
jl
add
sbb
lods
push
mov
call
mov
adc
mov
loope
pushf
push
inc
mov
scas
sub
add
ret
xor
loopne
aad
lcall
cmc
cld
shlb
add
mov
push
insb
ss
lea
ret
cmp
sub
in
xchg
fcmove
std
movb
testb
je
pop
inc
sub
les
jmp
and
loopne
stos
or
or
adc
lods
cmp
jb
cs
data16
int3
push
adc
mov
test
or
add
inc
lds
inc
push
mov
sub
mov
cmp
jne
loope
les
dec
cmpsl
stc
pop
jmp
and
ret
push
or
sub
xchg
movsl
int
js
insb
pop
add
xchg
cs
inc
cmp
push
lds
push
xor
push
aaa
fcompl
in
insb
or
mov
pop
mov
adcb
jno
in
sbb
sub
in
dec
dec
push
or
jle
jne
insl
xor
in
in
jbe
ljmp
mov
mov
popa
push
add
add
mov
push
pushf
push
sub
popa
sbb
fcoms
jb
xchg
mov
int3
js
xchg
icebp
ja
imul
in
movsl
jo
lods
hlt
push
mov
inc
push
int3
stos
sub
cltd
jne
add
inc
push
pushl
ja
negl
jl
jecxz
cmp
xchg
out
pusha
xor
xor
pop
shrl
pop
sbb
mov
sbb
in
jge
sti
add
fstl
or
pusha
adc
adc
pop
jmp
inc
and
push
fcompl
jbe
fcoml
adc
add
xchg
bound
call
mov
mov
sahf
fmull
add
mov
add
sarb
adc
jbe
xor
rolb
and
mov
cmp
push
cmc
sbb
jle
push
xor
in
mov
std
jae
adc
xor
add
mov
and
popl
addr16
fisubrs
adc
and
lahf
sbb
mov
incb
std
adc
sbb
xlat
aad
andb
push
pop
push
sub
mov
loopne
aam
sub
test
and
inc
sub
into
arpl
inc
inc
inc
outsb
imul
inc
cs
mov
icebp
ljmp
jle
inc
jae
jmp
std
loop
jcxz
or
out
in
jne
popf
in
jmp
repnz
dec
gs
add
gs
gs
mov
xchg
js
xor
xor
lret
mov
je
popa
jns
inc
je
mov
repz
adc
int3
mov
add
sub
sbb
jge
out
mov
test
cld
mov
mov
rcrl
sub
mov
add
add
es
mov
ljmp
jno
sub
jbe
xor
insl
sub
or
sub
mov
mov
ss
jg
lock
push
mov
in
call
stos
sbb
push
test
subb
inc
or
cmpsl
ret
sub
ret
and
push
gs
xchg
gs
insb
outsl
shll
xchg
jb
int3
loope
imul
dec
jecxz
jnp
data16
xor
pop
sbb
shll
cli
fstpl
mov
mov
xchg
repnz
call
or
ja
ja
mov
xor
mov
dec
fbstp
sbb
mov
fiaddl
cmp
sbb
xchg
pop
mov
mov
sbb
or
adc
pop
fstl
test
jge
inc
mov
arpl
test
rcl
add
fcoml
cmp
sbb
fisttps
adc
aad
or
sub
mov
jl
insb
movsb
pop
int3
add
test
mov
cmp
add
repz
cld
inc
and
and
pop
add
into
sbb
mov
push
sbb
jae
int3
xchg
les
inc
and
or
mov
pushf
adc
add
insb
mov
fcompl
and
push
enter
or
mov
add
cwtl
scas
cmp
xor
push
dec
add
jp
sub
add
pop
add
jb
arpl
jae
fs
call
pop
adc
gs
outsl
outsl
insb
push
xor
popa
jo
push
idivl
imul
and
mov
fdivrs
ss
adc
pop
inc
insb
push
insb
adc
cwtl
add
inc
fnsave
testb
cs
cmovbe
aas
arpl
push
imul
sarl
add
dec
outsl
fs
adc
outsl
xchg
and
dec
outsl
popa
fs
imul
popa
jb
movq
in
mov
in
push
jb
inc
pop
or
gs
push
insl
rorl
je
inc
jns
add
or
popa
packssdw
and
mov
jb
adc
mov
dec
into
add
or
mov
rcr
and
gs
js
ja
cmp
outsl
jb
outsb
and
push
push
mov
gs
outsl
outsb
push
pop
jae
xor
dec
sbb
push
adcb
test
inc
push
jae
out
pusha
scas
add
es
mov
push
sub
push
push
push
pop
cmp
daa
inc
cmp
pop
imul
andb
arpl
or
pcmpeqb
and
lock
fldenv
push
das
clc
add
pop
or
sub
ds
push
sbb
push
gs
je
mov
sarl
jae
sub
loope
hlt
sub
push
gs
sbb
push
cmpl
bound
fdivl
addb
sbb
pop
xlat
ficoml
dec
xor
adc
mov
push
jne
jb
xorl
inc
je
adc
loope
outsl
jae
outsl
std
mov
loope
insl
inc
add
jns
fbld
arpl
and
adc
xchg
mov
gs
jbe
mov
movw
int3
add
or
mov
push
jno
mov
sbb
dec
test
jbe
pusha
cmp
inc
sub
insb
add
add
inc
ret
imul
popa
adc
insl
or
arpl
add
add
arpl
insl
movsb
mov
fsts
push
sbb
test
decb
push
dec
inc
pop
lods
add
fldt
jo
je
aaa
push
jae
aam
or
add
popa
mov
shrl
mov
add
jb
fs
popa
xor
ret
pop
lahf
inc
jnp
inc
imul
push
aaa
xchg
add
push
mov
shll
fiadds
or
mov
mov
dec
sub
gs
lods
frstor
push
push
push
mov
push
dec
xchg
int
addr16
or
mov
push
js
adc
movl
push
arpl
sti
ljmp
sub
sub
cmp
jge
pop
and
mov
aaa
jns
add
sbb
rcll
jne
add
jne
push
and
cli
outsb
popa
xchg
pop
adc
push
movsb
jne
sub
icebp
xor
outsl
jecxz
in
pop
add
xchg
mov
mov
icebp
xor
jb
cltd
loope
out
cmp
adc
push
stc
jae
inc
outsb
jne
push
sub
inc
push
inc
push
mov
or
movsb
pop
cltd
add
insl
jp
push
jmp
arpl
ror
fcompl
pop
inc
jb
adc
js
add
mov
pop
je
add
pop
adc
jae
jb
sbb
data16
xlat
xor
popa
movsl
mov
pop
daa
cmp
bound
notb
or
test
punpckhwd
mov
or
and
aas
xor
pop
push
add
jmp
loope
jae
nopl
fdivl
sbb
push
mov
fbstp
mov
aaa
testb
lds
adc
sub
jnp
outsb
sub
or
loope
pop
jbe
insb
xchg
xchg
add
xor
ret
cmp
adc
insb
ja
dec
xchg
mov
sbbb
jecxz
or
orl
push
mov
insl
loop
outsl
adc
jg
pop
xor
sub
push
push
jge
mov
add
mov
cmp
inc
mov
jbe
push
inc
pop
xor
sub
loope
loop
inc
dec
push
dec
sub
jo
je
inc
dec
bts
mov
jmp
mov
loop
inc
pop
not
call
es
jo
cmp
decb
inc
push
mov
jg
mov
icebp
movsl
pusha
js
out
fldl
lret
inc
xor
push
inc
scas
fdivs
jo
or
push
xchg
ret
add
fsts
bsf
rcrb
adc
pop
mov
mov
cmp
add
jle
shll
pop
test
outsb
add
inc
ljmp
fdivl
and
aaa
aas
jb
cmpsb
jp
les
dec
xchg
cmp
mov
repnz
clc
jne
mov
push
aam
jo
cld
push
jo
shrl
ret
ljmp
dec
pop
mov
add
aam
rcrl
jmp
rcrl
cmp
mov
xor
sar
fidivl
dec
sbb
xor
cmp
mov
out
add
sar
mov
roll
cmc
shlb
ret
dec
jl
mov
and
xor
dec
lea
mov
ret
int
fcmovbe
push
pusha
loope
and
lcall
lcall
fidivl
sub
mov
xchg
les
cmp
sbb
aas
mov
or
clc
cmc
jg
incl
inc
mull
std
and
mov
pop
sub
dec
inc
xchg
push
movsb
ss
fisubrs
std
lcall
out
fstps
dec
and
and
mov
mov
stos
inc
add
mov
arpl
sbb
popl
mov
pusha
sbb
mull
popl
movsl
loop
insl
and
mov
rclb
add
mov
cmc
fistl
das
add
outsb
notl
push
sbb
inc
aaa
push
add
dec
pushf
pop
add
add
dec
push
mov
aad
mov
push
xchg
sub
adc
adc
add
rol
push
dec
pop
test
enter
inc
inc
lds
mov
add
lods
ljmp
jmp
stos
cli
push
in
stc
add
invd
popa
neg
adc
add
shl
jmp
inc
and
fnstsw
fcmovnu
jmp
mov
sbb
or
xor
mov
or
cmc
in
mov
test
sahf
bsr
mov
mov
scas
cmp
ret
push
push
test
cwtl
cmc
loopne
inc
jge
cmp
add
es
out
outsl
inc
pop
inc
push
inc
inc
jmp
mov
lds
adc
jmp
mov
mov
ja
mov
subw
or
adcl
add
imul
add
push
pushf
mov
inc
push
pushf
stos
outsb
mov
xchg
pushf
call
xorb
sarl
test
addb
fildll
mov
pusha
lea
ret
outsb
mov
mov
cmp
or
mov
push
pop
adcl
add
lods
setb
rolb
jg
or
add
pushf
shr
ret
aaa
jmp
outsb
imul
je
incl
add
out
ljmp
fimull
adc
call
jmp
out
stos
lcall
imul
mov
cmp
mov
call
pusha
in
add
out
inc
xor
pusha
dec
test
fcoml
cld
bound
cmp
and
and
pusha
or
jmp
je
mov
inc
jge
subb
pushf
out
jbe
ret
out
outsb
mov
pushl
mov
pushf
cmc
clc
pushf
sub
rorl
es
std
sub
in
mov
in
aam
mov
adc
mov
sbb
clc
mov
cmp
push
jmp
or
les
fstpt
fwait
shlw
icebp
mul
pusha
mov
jmp
cli
add
jecxz
jg
jbe
aas
or
lea
stos
or
std
inc
sbb
pop
xchg
push
inc
mov
pushl
adc
mov
xchg
rolb
repz
mov
call
push
inc
fnstsw
mov
pushf
push
roll
insl
lcall
sbb
outsl
mov
loop
out
sub
add
mov
cmpsl
xlat
inc
imul
pop
xor
out
stos
jecxz
mov
call
push
popa
paddusb
outsb
andl
notl
rolb
adc
inc
data16
out
jecxz
push
test
pusha
not
je
mov
movsl
nop
lahf
push
and
sub
inc
test
add
call
cwtl
pushf
inc
xor
test
cmp
rcl
and
icebp
insl
loope
rcr
or
stos
add
lcall
stc
imul
ret
jle
jmp
pop
pushf
sub
add
shlb
notb
push
xchg
pushf
shlb
stos
ljmp
mov
aaa
fisubl
adc
setns
mov
fsub
ret
sub
call
cmp
rorb
add
test
pusha
arpl
scas
pusha
stos
inc
push
cwtl
movsl
pushf
in
rcrl
jmp
pop
jbe
test
inc
sub
stos
or
arpl
sub
into
mov
dec
nop
sub
imul
lods
out
dec
cwtl
adc
jb
push
pop
push
stos
add
lcall
imul
cld
dec
add
inc
push
cmc
push
data16
add
cli
push
fnstenv
sbb
call
popa
pop
clc
fwait
into
sbb
dec
sete
test
arpl
lods
ja
loope
clc
or
call
add
fcomps
loop
in
imul
pusha
rorl
mov
idivl
pop
shll
dec
insb
mov
push
ds
out
push
icebp
or
ja
negl
pushf
arpl
js
mov
cli
inc
adc
and
cwtl
fsubr
push
stc
pop
push
xlat
in
leave
scas
imul
jl
cmp
std
icebp
incl
lock
clc
add
add
adc
and
dec
sub
lea
sub
call
ds
call
or
xchg
out
sbb
ds
fwait
decl
rcrb
test
bswap
adc
jbe
cld
imul
xchg
clc
xor
and
dec
outsl
sar
call
add
mov
or
test
sub
lret
fst
clc
xor
add
mov
aad
mov
cmpsb
add
ret
out
cmpsl
pop
idiv
add
jmp
aad
call
clc
lea
or
xor
mov
les
icebp
adc
mov
cmpsb
adcb
and
adc
addr16
out
pop
out
fisubs
or
cmc
jmp
mov
sbb
scas
or
cmc
dec
shll
jg
push
test
and
xchg
inc
cld
rclb
mov
repz
movsl
jp
lret
mov
lock
out
int
mov
adc
outsb
repnz
cs
icebp
mov
idiv
or
out
insb
mov
xchg
call
inc
notl
js
cmp
and
out
xor
pop
jns
dec
pop
jmp
cwtl
dec
inc
jg
cmp
add
adc
nop
outsl
repnz
aas
fldenv
neg
jnp
out
inc
xor
xchg
mov
ret
and
leave
in
pop
in
aaa
repnz
mov
outsl
jb
das
jae
imul
ret
ja
aaa
mov
les
jnp
out
cmp
mov
pop
mov
out
mov
pop
mov
jecxz
popl
imul
jnp
inc
outsl
push
xor
stc
mov
jmp
dec
out
fiadds
mov
in
out
lahf
dec
pop
push
bnd
inc
stc
neg
mov
arpl
out
cmpsl
addr16
addr16
imul
fstps
sbb
ret
cmp
add
cmpsb
in
add
out
sbb
lods
out
jecxz
aaa
pop
das
jnp
cwtl
std
xor
cmpsl
mov
add
aas
outsl
leave
ja
push
jg
jmp
out
sbb
aaa
push
ja
aaa
jnp
fsts
mov
mov
or
inc
dec
testl
idivb
pop
pop
dec
out
sbb
ret
aas
fistpll
pop
fiadds
jnp
scas
repnz
cmp
fwait
mov
push
out
out
lock
jg
idiv
pushf
xchg
ficoms
fidivrs
sub
push
out
push
pshufw
xor
daa
pavgw
sbb
dec
cmpsl
jg
add
cmc
pop
pop
mov
mov
pushf
push
mov
movsl
push
sar
addr16
sbb
push
or
clc
leave
call
dec
sub
mov
loopne
test
dec
cli
pop
adc
daa
mov
call
push
aaa
add
not
test
jmp
mov
fs
lahf
lret
mov
sets
dec
call
add
sub
push
outsb
enter
je
lock
pop
mov
rcr
shlb
cmc
lcall
mov
pcmpgtd
lcall
rcll
clc
mov
sbb
repz
test
mov
leave
aam
out
lods
pop
pusha
or
add
xor
data16
inc
push
jmp
sbb
call
imull
imull
add
sar
loope
sbb
call
dec
stos
test
jne
sub
shlb
lret
hlt
adc
or
pop
test
mov
cmp
pusha
xor
cmp
roll
add
xor
lcallw
cmp
or
pop
pusha
insl
sub
dec
test
jmp
adc
out
fistpl
inc
push
stc
enter
mov
in
shl
cmp
add
cmpsb
push
push
ljmp
pop
xor
pop
ja
and
jmp
jl
and
sbb
lods
scas
cmc
xor
fnsave
je
jbe
lock
mov
jle
xchg
addr16
sub
cli
std
shl
push
mov
add
mov
add
sub
out
data16
jae
sub
mov
repz
mov
sub
jl
pusha
pop
scas
push
jnp
sub
movsl
lahf
adc
add
or
data16
ret
lea
mov
cmp
insb
lea
call
and
sbb
push
pop
xchg
adc
dec
mov
jge
aaa
mov
xchg
adc
mov
mov
int
popf
mov
shl
mov
test
test
stc
and
jmp
loope
sub
shl
add
sbb
stc
xor
pop
mov
mov
das
rorb
pop
xchg
sbb
rorb
int3
subl
ss
push
popa
in
xchg
insb
cli
loop
addr16
mov
sub
mov
jbe,pn
and
stos
in
pop
inc
icebp
ja
fneni(8087
aaa
pop
call
test
scas
mov
mov
notl
movsl
push
data16
sbb
js
add
rcrl
cmp
sbb
xchg
or
mov
push
xlat
std
sbb
mov
mov
aad
cmc
dec
sbb
cmpsl
ret
in
push
cmp
xchg
enter
cmpb
or
jp
mov
test
fdiv
jne
or
and
clc
clc
out
sbb
mov
insb
xchg
call
icebp
gs
adc
aad
or
lcall
add
icebp
pop
mov
lea
pop
test
aam
lea
pop
jne
pop
cmp
call
aas
pop
cmp
pop
gs
pop
daa
aas
insb
dec
mov
cmp
inc
iret
push
pop
sbbl
mov
jge
les
or
mov
das
add
inc
mov
adc
push
jp
xchg
adc
jns
or
jl
add
cmp
mov
xor
fdivrl
stos
aam
jo
clc
cwtl
xor
mov
sbb
outsb
call
jno
adc
push
push
shl
push
push
mov
sub
popa
test
pusha
es
pop
push
scas
dec
xchg
push
push
or
mov
ret
aam
out
jmp
scas
or
pusha
or
mov
test
sbb
dec
inc
push
ljmp
data16
pop
outsb
pop
mov
or
pop
rol
jmp
btr
pop
movl
lods
inc
jmp
cld
out
ret
repz
sub
outsb
mov
adc
inc
fidivs
cmp
pop
push
pop
insl
fwait
jge,pt
call
add
lock
mov
or
jg
ja
test
add
sbb
ja
rolb
test
add
lods
add
mov
test
inc
ret
pushl
push
sub
push
push
push
movsl
or
js
jbe
mov
movsl
add
sbb
sbb
pop
call
lock
or
dec
not
mov
xor
xchg
lahf
sbb
testb
aad
mov
aad
out
add
iret
neg
sub
dec
in
xor
shl
cli
ja
out
insb
mov
notl
fnstenv
mov
loopne
inc
out
decb
jo
mov
or
rol
adc
or
cli
or
cmpsb
lahf
rcr
test
xor
lea
mov
fbstp
push
push
mov
jo
xchg
test
xchg
negl
icebp
call
orl
push
out
xchg
movsb
pusha
stc
jno
sub
inc
stos
sbb
dec
sub
mov
dec
push
ret
fucomi
push
fwait
test
aad
inc
insl
add
mov
sub
jg
adc
stc
or
or
dec
push
push
cmc
loopne
inc
sub
pusha
out
sub
mov
or
adc
add
rolb
in
cmp
jg
mov
pop
adc
call
std
or
cmc
call
mov
mov
or
push
sub
arpl
push
xchg
xchg
arpl
fdivl
fldln2
push
cmpsb
inc
in
fiaddl
pusha
movsl
dec
add
in
imul
pusha
mov
add
add
call
shll
add
jmp
add
loop
ljmp
fiaddl
sbb
push
loopne
jmp
icebp
les
mov
and
jo
push
jne
shlb
add
cmp
mov
lahf
xchg
arpl
loope
lds
rolb
mov
add
pop
out
ljmp
pop
stos
aas
neg
push
lds
or
inc
imul
push
push
push
or
sub
shll
imul
mov
mov
sbb
es
testb
inc
insb
outsb
and
aam
push
test
lret
mov
mov
cmp
scas
and
fdivr
xor
aaa
dec
adc
mov
xchg
repnz
fs
and
xchg
xorl
mov
pop
or
adc
pushf
mov
pop
and
pop
sbb
inc
mov
mov
arpl
mov
mov
call
fwait
mov
lock
call
mov
push
adc
jmp
pop
cld
lret
mov
stc
jmp
cmp
push
adc
cli
shr
ja
cmp
shl
inc
mov
aaa
mov
lea
test
sbb
out
mov
scas
add
xor
sub
mov
pop
mov
mov
pop
mov
mov
fildll
and
iret
pusha
mov
std
ja
pop
andps
std
rcrb
leave
test
add
cld
call
fbstp
push
das
push
sub
sbbl
out
into
jo
rcll
cmpsl
aas
cwtl
js
push
call
adc
fdivl
sarb
cmpsb
pop
mov
pusha
push
in
insb
into
inc
cltd
ret
sbb
or
push
dec
push
sti
inc
and
push
cmp
fsubrl
lret
push
mov
xchg
mov
ds
inc
inc
pop
mov
stc
and
push
pop
pop
test
cltd
lahf
inc
adc
push
outsl
mov
pop
fisubrl
icebp
call
dec
mov
push
ret
or
or
inc
jmp
inc
testb
push
imul
push
jnp
cwtl
pop
jmp
leave
shll
add
xchg
sbb
out
fcomp
cmp
lahf
mov
popa
loopne
pop
fs
mov
push
push
pop
add
inc
pop
inc
sbb
pop
scas
aad
repnz
and
std
push
xlat
out
in
les
sti
out
sub
dec
je
pop
lock
add
xchg
and
mov
and
and
cmp
push
clc
stos
call
xor
push
jge
add
cmp
sub
xchg
popf
test
cli
test
xchg
or
aam
push
loop
mov
orl
mov
jmp
cmp
adc
call
mov
cmp
outsb
jno
sbb
mov
enter
xchg
adc
repnz
ja
ljmp
into
js
pop
xor
clc
push
sub
lret
outsb
scas
stos
pushf
pushf
push
sbb
std
loope
stc
fprem
cmp
imul
fwait
xchg
push
pusha
bnd
in
or
scas
mov
fsubrs
and
sbb
xchg
jo
adc
movsb
jmp
aad
xchg
pushf
pop
cwtl
push
push
cld
sub
jmp
stc
out
packssdw
mov
xor
add
rolb
or
pusha
jmp
icebp
pop
push
das
jo
adc
xor
lods
leave
push
cld
lods
test
jo
nop
mov
popa
jmp
pusha
dec
dec
icebp
add
fimull
js
or
push
shl
dec
pop
fldenv
or
clc
adc
test
fnstcw
cmp
aad
sbb
push
cmc
out
call
adc
push
call
cmpsb
sbb
pop
fsub
ror
mov
inc
push
cmp
jnp
lds
dec
fcmovnbe
push
ficomps
sbb
dec
std
sbb
out
sti
pop
jl
mov
call
clc
mov
idivl
out
inc
or
push
ret
sub
xor
mov
inc
add
ljmp
ljmp
decl
ss
sbb
push
call
call
ljmp
jnp
rorb
xor
cmp
pop
sbb
cmp
sbbl
cmc
inc
test
lock
lods
jne
js
sti
jne
cmpsb
jmp
imul
and
pop
fbstp
adc
mov
jl
xor
sbb
mov
sub
movlps
aas
loope
mov
ds
xor
mov
fsubr
or
into
call
add
xlat
sti
rorl
add
cltd
push
pop
roll
scas
adc
movsl
xchg
xor
inc
fistpll
xchg
lock
mov
jns
jno
push
out
xchg
push
jmp
jmp
out
push
call
orl
mov
jge
dec
cmp
sbb
mov
pop
mov
add
push
sub
je
add
push
pop
fcomi
outsl
cwtl
or
push
push
jmp
cmp
mov
jno
into
rcrb
pop
mov
inc
mov
jmp
mov
and
call
sbb
cmp
and
push
in
dec
call
push
dec
lret
inc
lods
mov
xchg
les
sub
imull
imul
loope
lock
cli
into
lds
xor
stos
inc
nop
fcompl
add
sarb
cwtl
jb
xor
outsb
cld
and
outsb
jecxz
pushf
outsl
mov
test
hlt
mov
cmc
push
push
push
xor
or
push
stc
jmp
cmpb
insb
push
and
ficompl
sub
call
sbb
call
xor
xor
popa
jmp
xor
jp
xchg
stc
and
jmp
shlb
daa
inc
fcmovnbe
inc
xchg
inc
lock
dec
mov
adc
sub
jo
xor
incl
add
xchg
sub
fcomp
enter
mov
das
inc
ja
lcall
pop
int
cmp
scas
movsl
xchg
pushf
xchg
pop
dec
jae
sub
sbb
stc
outsl
cld
pushl
jl
cmp
je
sbb
hlt
xchg
push
pop
sub
loopne
xchg
jnp
mov
xchg
cld
jbe
popa
fisubl
cmp
insb
loope
addl
adcb
loope
xchg
clc
ljmp
lods
nop
jle
lds
cld
push
cmp
test
out
lret
jno
inc
lcall
mov
cmp
scas
xchg
sbb
sub
sub
xchg
dec
hlt
testb
sar
pop
clc
mov
dec
push
jo
cwtl
pop
cmp
js
lock
jg
fistl
jno
jae
inc
sbb
inc
insb
scas
cli
fcoms
ret
sbb
jmp
xor
jecxz
xlat
fsubr
data16
aaa
xor
sbb
push
adc
push
pop
std
jmp
sbb
imul
sbb
insb
push
call
sbb
adc
or
adc
call
fmulp
and
jmp
cmpsl
push
data16
loope
mov
cmp
jno
sbb
jns
jle
pop
jnp
mov
xor
and
push
sbb
repnz
mov
out
leave
test
shll
in
jge
mov
lcall
std
mov
stos
shl
pop
fs
push
fwait
ljmp
push
fisttpll
dec
mov
icebp
aas
lods
arpl
cmc
or
daa
cmp
es
test
in
lods
decb
enter
in
jg
dec
sub
fs
lret
pushl
inc
imul
cld
fcomp
mov
inc
xchg
cmp
dec
pop
jb
xchg
std
sub
pushl
push
push
int3
jg
pop
fsts
pop
adc
loope
sbb
mov
mov
pop
nop
fwait
stc
xchg
jmp
mov
jae
xorl
int
rcl
fldt
mov
jge
aas
push
inc
xlat
push
push
test
jbe
sub
dec
imul
in
call
imul
stc
push
xor
pop
pop
pop
pop
inc
mov
scas
lods
cmpsb
mov
mov
mov
popa
cmc
out
push
outsb
ret
rcl
stos
jns
cwtl
adc
sbb
mov
lock
orl
push
in
xor
test
and
cmp
sub
in
sti
mov
push
jns
push
mov
fiadds
pop
push
aad
mov
lcall
pushf
lods
mov
sub
sar
ja
aas
popf
imul
icebp
inc
cmpl
add
sbb
jg
pop
sbb
rcrl
sbb
insl
jmp
mov
movsb
idivb
mov
cmp
lds
mov
ds
sub
test
inc
or
les
push
pushl
inc
rcll
adc
xchg
mov
mov
lret
mov
popa
push
xchg
scas
sbb
push
cmp
cmp
add
movsb
push
inc
cmp
jl
mov
andb
dec
xchg
in
mov
cmpsl
push
aaa
gs
adc
cs
push
mov
nop
xchg
imul
lret
mov
outsb
mov
xchg
loopne
mov
mov
subl
push
and
sahf
inc
jge
mov
imul
lcall
mov
std
jbe
push
push
lds
cmp
inc
out
lcall
mov
inc
cmp
cmp
bound
dec
mov
rorb
out
incl
jnp
mov
sub
jne
xchg
push
cmp
popa
and
mov
imul
adc
dec
xor
insb
stc
inc
aam
stos
js
pop
clc
lcall
mov
and
call
sbbb
or
or
jmp
adc
mov
jmp
adc
cmp
pop
sub
jne
xchg
inc
sbb
xchg
call
or
pop
arpl
xchg
mov
push
dec
ds
in
js
andl
pop
sbb
mov
fimull
outsb
xchg
jg
ret
cltd
push
scas
gs
push
dec
pushf
jbe
xor
test
mov
in
mov
dec
push
mov
fbstp
xchg
bnd
pop
pop
jge
sbb
mov
aas
idiv
call
jp
xor
je
mov
sti
mov
arpl
stos
cmp
loopne
lret
ja
fsubs
lahf
cmp
fistpl
mov
jp
inc
cli
cltd
mov
leave
popf
mov
jmp
pusha
and
jg
mov
cmpsl
mov
push
loop
adc
push
dec
inc
dec
ljmp
sbb
dec
fdivrl
fcmovnu
frstor
fdivrs
jmp
push
ljmp
sbb
cmp
and
mov
rcr
add
scas
push
dec
test
push
cmp
inc
xchg
ss
js
fbstp
dec
js
jmp
mov
and
cld
clc
out
out
test
mov
lea
xor
sbb
add
mov
lret
xor
xor
aad
and
push
ljmp
addl
cs
and
lods
pushl
test
pop
push
inc
outsb
lods
push
in
add
mov
pop
push
jg
call
int3
fdivrs
dec
repnz
test
xor
cmp
das
jmp
loop
mov
popf
mov
icebp
pop
das
xchg
ss
pop
es
jg
bound
js
loop
xchg
cmp
jecxz
dec
cld
ud2
lcall
pop
mov
pop
shll
data16
sub
int3
lahf
ret
push
mov
mov
pusha
mov
jmp
xchg
addl
push
push
xlat
pop
inc
insl
iret
push
inc
in
fildll
mov
push
in
std
lds
ficomps
jae
ljmp
push
negb
sti
pop
loopne
mov
mov
mov
mov
sbb
sti
ja
cmp
in
aaa
mov
test
pop
jle
out
insb
mov
mov
mov
jmp
repnz
lds
scas
call
nop
scas
or
les
cli
out
aam
dec
xchg
sub
fstps
popf
push
mov
sub
jmp
jg
adc
pop
pusha
inc
jmp
clc
push
jns
aas
add
pushf
push
sbbl
std
push
sahf
push
sbb
sub
cld
nop
ljmp
cmpsl
push
mov
jg
decl
cmp
xchg
dec
ja
out
pop
pop
adc
push
sbb
cmp
test
cli
xchg
insb
mov
cmpsl
mov
mov
and
sbb
je
xchg
inc
enter
fbld
xor
cmp
stc
loopne
mov
add
icebp
shlb
ljmp
lds
fwait
lds
es
lcall
out
jge
dec
out
sub
lret
lods
dec
cld
jle,pn
mov
ljmp
jmp
ljmp
int
shlb
loop
mov
jge
sbb
das
std
aam
fld
lret
pop
sub
inc
jae
gs
daa
out
ret
sub
cmpsb
outsl
add
popf
in
das
out
sub
int3
cmp
sub
push
jmp
or
out
adc
loopne
mov
sbb
std
outsb
iret
push
clc
dec
and
mov
sub
dec
sbb
movsl
cli
sub
or
xchg
fdivrl
push
cli
out
lret
push
rcrb
mov
sub
jnp
lcall
call
dec
adc
sarb
cmpsl
mov
pop
xor
mov
push
out
dec
jo
rol
mov
pop
xor
and
ljmp
aam
fsubrp
xor
loopne
testb
lahf
int3
enter
inc
ljmp
ret
pop
int
xlat
jns
jno
mov
fdivrs
ficoml
mov
lcall
push
push
xchg
push
mov
push
pop
sbb
cltd
add
nop
xor
and
fisubs
cs
mov
sbb
ret
imull
push
cmp
or
out
aam
sahf
lods
sub
shrl
mov
sub
dec
fildll
xchg
and
jecxz
jae
mov
lcall
dec
shlb
insl
adc
hlt
inc
push
or
add
push
push
jb
and
in
cld
inc
pop
es
repz
mov
loop
scas
fdivrs
ljmp
sub
cmp
repnz
pusha
sub
jmp
test
outsb
andl
adc
aaa
clc
call
scas
mov
sbb
lods
imull
add
sub
cmpl
push
pop
jle
imul
dec
inc
ret
pop
lret
push
sti
pop
in
sbb
mov
call
shll
inc
rol
fwait
or
sub
shl
xor
mov
mov
push
lock
sti
addr16
bound
pushl
stc
insb
outsl
lods
das
adc
jne
push
leave
jne
stos
and
or
cmp
cld
mov
shll
xchg
mov
mov
push
enter
test
fucomip
mov
lods
mov
daa
adc
pop
sbb
cmp
sub
sarl
xchg
addr16
loop
pop
jg
push
mov
and
push
sbbl
xchg
jmp
leave
loopne
add
aaa
imul
gs
sbb
cmp
mov
dec
push
test
in
dec
call
popf
fldl2t
push
clc
test
shll
je
lret
arpl
fcoml
or
cmc
adc
clc
adc
xchg
and
jp
and
outsb
fnstsw
lcall
inc
lcall
mov
imul
dec
push
sar
loop
lret
and
sub
jmp
dec
repnz
popa
push
jmp
push
icebp
or
add
rcrl
push
mov
scas
push
test
adc
movsl
lahf
mov
fsub
mov
mov
push
repnz
outsl
jne
out
jne
mov
lock
push
sbb
sarb
jg
out
mov
fcomp
hlt
dec
mov
inc
daa
lcall
lcall
mov
pop
mov
mov
ds
add
pop
or
push
call
mov
cmc
sbb
ss
dec
xor
pop
push
dec
cltd
lds
mov
sbb
notb
cmpsl
and
push
cld
fidivs
add
push
inc
iret
cmpsb
cmp
jg
mov
sbb
mov
bound
push
mov
test
add
ljmp
pop
dec
adc
push
js
xor
sbb
push
push
loopne
in
jecxz
inc
jns
loopne
sbb
cli
adc
xchg
lahf
mov
das
lock
into
adc
or
adc
sub
pop
lea
sbb
rcrl
mov
repnz
in
xchg
cmpsb
outsl
jne
jmp
in
cmp
sbb
push
out
adc
mov
mov
inc
es
mov
push
sahf
aas
xchg
pop
jo
add
adc
movsl
sbb
push
jp
adc
push
lods
push
call
loopne
js
xor
mov
enter
incb
sbb
mov
push
adc
jg
lret
call
pop
xchg
rclb
loop
leave
cld
pop
cmp
xlat
fldl
cmp
dec
lds
pop
or
iret
aam
sub
pop
mov
cmp
std
dec
fdivr
decl
add
out
sbb
sarl
cwtl
push
push
pushf
push
pushl
xchg
xchg
mov
jns
or
aas
fwait
xlat
and
jecxz
jg
in
sbb
cmp
imul
mov
sub
push
sub
sar
ljmp
fcmovne
repnz
dec
and
nop
push
lret
xor
test
mov
movsl
lret
pop
sti
shll
mov
sbb
cmp
mov
sub
pusha
repnz
repnz
outsb
adc
icebp
pop
incl
sbb
lods
push
stos
test
cltd
and
insl
add
popf
dec
jge
insl
xor
in
decl
lcall
and
stos
popa
and
mov
rcll
jg
xchg
add
xor
popa
push
in
arpl
add
mov
in
dec
xor
out
inc
lcall
or
xchg
jp
sub
div
push
push
loop
pop
into
cmp
dec
push
or
cmp
lcall
cmp
fnstenv
test
lret
push
xchg
mov
ljmp
cmp
inc
mov
insb
orb
mov
outsb
mov
jne
fs
jle
adc
out
je
rcrl
icebp
test
mov
outsl
ret
negb
ljmp
repnz
add
push
xchg
pop
ljmp
push
cmp
cs
insl
jl
cmp
repz
jmp
arpl
mov
dec
push
adc
sar
add
test
jg
out
xchg
aas
stos
out
mov
loopne
adcb
pop
aaa
popa
repnz
cmpsb
test
mov
mov
fwait
imul
jmp
dec
mov
shrl
ljmp
inc
lods
jne
add
pop
dec
adc
scas
sbb
push
cmpsl
cld
jg
jmp
aas
and
adc
sbb
adc
jmp
mov
sub
aaa
lock
shrb
decl
std
inc
jne
pop
and
xchg
out
xchg
lret
jmp
ljmp
lock
scas
jnp
outsb
jb
cs
xchg
repz
rorb
out
sbb
out
clc
stos
int
mov
mov
imul
lds
jg
dec
pop
out
jnp
fdivrl
decl
sub
cli
pusha
fcmove
lret
sbb
pop
scas
repnz
das
mov
enter
mov
je
out
cltd
mov
jns
sbbl
add
adc
mov
or
pop
jp
loope
adc
test
pop
xchg
mov
idiv
adc
lds
jnp
add
outsb
mov
inc
inc
into
mov
xchg
and
cmp
cmp
fisubrl
lcall
call
clc
sbb
and
dec
mov
mov
call
pop
push
clc
ljmp
clc
mov
sbb
push
inc
shll
sub
test
pop
clc
or
dec
cmp
mov
add
inc
cmc
jg
outsb
mov
loopne
push
and
push
push
nop
fcmovnb
out
ljmp
cli
jae
push
dec
adc
ficomps
cmc
mov
das
cmp
mov
mov
and
test
test
lret
shrl
stc
fstpl
fisubl
adc
dec
xchg
popl
push
xchg
fldt
and
mov
mov
movb
adc
mov
cmc
mov
ret
adc
orb
icebp
lcall
jo
fnstcw
mov
sti
cmp
jnp
and
pop
jl
pop
mov
in
hlt
mov
mov
mov
push
and
push
jmp
adc
mov
adc
push
jge
pop
pop
in
pop
xchg
andb
dec
call
sub
dec
push
mov
jp
sbb
lock
jno
movsl
mov
call
pop
rcrl
mov
xchg
and
ficoml
fs
mov
or
cltd
loope
int
das
std
jmp
gs
jb
xor
aaa
adc
adc
js
inc
insb
lods
rcrb
loop
mov
push
push
xchg
xchg
out
mov
sub
bound
xchg
scas
sbb
push
bound
cmc
icebp
popf
mov
leave
mov
in
notrack
decl
in
pushf
into
mov
dec
push
cld
scas
adc
lcall
call
andb
dec
add
adc
ret
rolb
mov
pop
or
outsl
jmp
test
mov
adc
ljmp
xorb
xchg
fdivp
std
fdivp
out
cmp
jno
adc
adc
sbb
dec
push
jg
lods
ret
rcrb
inc
rorl
movsb
call
adc
sahf
icebp
xor
outsl
jae
push
js
dec
and
leave
and
xor
xchg
push
pop
mov
lret
pop
push
cs
lcall
sub
out
jle
sub
repz
sbb
xchg
xchg
popa
repz
sub
inc
jg
decl
add
xchg
pushf
cmp
inc
jge
mov
jg
jmp
cmc
dec
xchg
mov
fsubs
insb
mov
js
dec
pop
inc
stc
mov
mov
das
cli
cmpsl
or
enter
pushf
pop
pop
cld
rcrb
pop
loop
mov
int
inc
inc
or
mov
int
test
je
push
fstps
aam
mov
sbb
stos
mov
adc
pop
addl
popa
push
jno
in
cli
test
or
push
mov
sbb
xchg
inc
mov
cmp
pop
xchg
das
xchg
cmp
jge
mov
mov
hlt
lret
loopne
decl
iret
sbb
repz
mov
xchg
fistpl
pop
sbb
lods
test
sub
mov
popa
jne
adc
pop
lock
cmp
pop
clc
decl
bound
or
sub
lret
stc
and
insb
ljmp
mov
mov
mov
dec
dec
frstor
mov
inc
faddp
push
pusha
push
std
testb
mov
fsts
test
xor
ja
push
or
ficompl
test
sub
and
push
outsl
adc
sbb
jo
out
or
ja
mov
movsb
sbb
nop
dec
leave
xor
std
mov
sbb
pop
cmp
adc
movsl
rorl
test
fwait
or
cmp
xchg
pusha
ret
mov
dec
sub
outsb
test
mov
pop
rcll
out
arpl
imul
xchg
add
je
nop
push
insl
shrb
stos
sar
mov
push
fadd
fsubr
test
in
clc
orl
movsb
add
rclb
mov
lcall
fadds
push
push
call
clc
leave
dec
dec
or
pop
loop
aaa
aaa
lret
pop
cli
call
mov
fidivrl
outsb
xchg
jns
xor
sahf
cmpsw
xlat
lods
jge
je
and
jns
inc
inc
outsl
mov
and
mov
cmp
mov
fstps
pop
mov
dec
std
idiv
decl
pop
jbe
shrb
inc
dec
mov
xchg
push
cmpsb
push
cld
lock
mov
movsl
dec
js
out
or
push
movsb
pop
jne
jae
mov
mov
shrb
inc
ja
daa
dec
sub
fcmovnu
mov
xchg
fdivrs
pusha
inc
pop
ljmp
iret
arpl
jbe
lcall
xlat
adc
add
stos
clc
icebp
xchg
aam
mov
sbb
call
incl
add
clc
loope
and
mov
sbb
xor
daa
repz
pusha
mov
mov
cmp
mov
inc
pop
clc
fsubl
and
shll
scas
xchg
fmul
stc
cmp
in
rorb
xchg
ud0
incl
sete
mov
add
push
addr16
sti
mov
mov
push
mov
repz
inc
pushf
mov
mov
sub
mov
data16
cli
pushl
push
cltd
pop
std
add
outsb
lods
sub
pop
xchg
and
mov
mov
push
in
mov
cmp
mov
mov
cli
fwait
pop
cmp
sbb
sti
add
mov
lret
adc
inc
aaa
std
pusha
leave
sub
fmul
add
mov
sub
enter
xor
outsl
call
cs
data16
imul
add
inc
jle
lcall
imul
push
rorl
lods
pop
pop
sub
mov
fwait
cmp
mov
xchg
inc
pop
inc
cmp
roll
xchg
enter
fsubs
mov
aad
and
mov
aam
testb
jmp
push
xchg
mov
test
jns
jecxz
shrl
icebp
dec
and
mov
ljmp
xchg
fmull
mov
aas
pop
jbe
in
pushl
pop
cmc
sub
fsts
dec
or
ds
cmc
jle
jnp
lcall
push
popf
jns
ret
mov
int
mov
sub
inc
dec
sbb
aaa
xor
xor
shlb
mov
adc
add
add
inc
ja
mov
mov
mov
ja
jae
cmc
pop
push
adc
call
jo
add
das
inc
cmp
jb
xlat
jae
jge
ret
call
pop
mov
mov
adc
jo
mov
and
adc
insb
inc
insl
shrl
mov
call
dec
push
xchg
cltd
pusha
push
mov
push
mov
jbe
out
shrb
aas
jbe
pop
inc
pop
or
jle
add
lea
push
aad
and
add
push
sbb
fidivrl
int
sub
or
xchg
shrb
inc
add
lock
call
push
add
push
fcoml
lret
xchg
mov
cmpsl
incl
out
ds
rcl
and
notl
cmc
and
into
data16
add
jnp
fldenv
andb
test
imul
test
pusha
push
adc
arpl
mov
pushf
iret
and
mov
push
pop
mull
ret
pop
mov
mov
sub
rorb
mov
imull
pop
nop
push
fwait
arpl
inc
in
mov
lret
mov
inc
adc
imul
mov
push
cmp
lock
jl
leave
pop
xor
out
push
push
cmpsl
xchg
das
cld
mov
std
lahf
inc
inc
aam
pushf
ljmp
imul
lcall
in
ds
cmc
and
lcall
leave
lea
enter
inc
mov
insl
mov
add
pop
arpl
out
into
negb
mov
out
and
movsbl
repz
bnd
push
ret
leave
js
fiaddl
lcall
mov
stos
pushf
les
in
pop
dec
xchg
incl
incl
aaa
aam
int
sbb
fldenv
std
dec
push
push
mov
adc
lock
in
mov
dec
outsb
xchg
dec
into
adc
xor
adc
ljmp
fistps
jne
aam
sahf
in
push
aam
pop
outsb
dec
in
adc
adc
jmp
sbb
jmp
sbb
aaa
pop
xchg
loopne
ja
dec
fcomps
xchg
mov
inc
push
sbb
out
iret
je
jg
icebp
psubb
xchg
mov
pop
mov
inc
jle
jl
add
cmp
xchg
push
nop
mov
inc
cmpl
inc
loop
cli
xchg
cmp
in
pop
aas
fs
jg
inc
stos
sbb
adc
inc
test
xor
jmp
add
call
out
call
rclb
fnsave
jbe
xchg
sub
andb
ret
jecxz
jmp
pop
mov
mov
test
or
aaa
das
mov
shll
cwtl
enter
mov
adc
outsl
sbb
loopne
repz
leave
pusha
loop
stos
std
add
jp
divl
fiaddl
outsl
lcall
test
lock
sub
cltd
and
test
jmp
ret
jmp
ljmp
pop
out
outsl
jl
adc
mov
incl
shll
shr
pop
mov
ljmp
leave
imul
cmp
xchg
mov
mov
cmp
movsb
push
adc
pop
inc
add
pushl
cmp
xor
cmc
lahf
jne
pop
sbb
shl
lods
pop
or
cli
push
data16
mov
inc
push
adc
jge
bound
xor
stos
aad
xchg
sbb
decb
dec
movsl
mov
repnz
mov
out
push
ret
and
xor
iret
dec
mov
fcomp
push
xchg
loop
mov
pop
std
jg
out
jmp
push
fistl
leave
xor
fdiv
scas
and
xchg
insl
pop
call
decl
sbb
sub
mov
das
cmp
inc
idiv
jg
stos
cli
push
mov
add
push
sub
xor
jae
cli
jle
dec
sub
ljmp
xchg
dec
mov
rcrl
push
sbbb
lods
int
jge
ret
das
icebp
cmc
inc
mov
outsb
add
jg
imulb
adc
out
outsl
or
inc
shl
lods
xor
cli
out
rcrl
or
clc
incl
rcl
mov
or
sbb
inc
xchg
dec
popf
movsl
mov
cmp
inc
add
inc
sub
popa
imul
pop
jb
test
push
loope
dec
sti
jnp
jg
xor
cmp
cs
aad
pop
jp
mov
loop
adcb
mov
jns
mov
sti
pop
mov
ret
ja
dec
dec
fisttps
sbb
ja
add
add
stos
fwait
loop
cli
test
push
sub
int3
outsl
outsl
cmpsb
inc
enter
cmc
inc
and
cmpsl
ljmp
push
mov
stos
icebp
sahf
mov
adc
inc
popa
pop
fdivr
jge
lea
dec
sub
test
movsl
sub
sub
jg
xchg
inc
cmp
movsb
popa
sub
outsl
lret
ja
das
jnp
sub
jle
jg
add
inc
pop
lret
sub
adc
adc
sub
shlb
cmc
xchg
xor
mov
mov
lds
es
into
ficoml
push
pop
mov
imul
out
lcall
mov
push
incl
xor
push
xchg
mov
pop
xor
lods
aad
insb
dec
or
cmc
xor
mov
ja
bound
jecxz
push
cs
xor
mov
mov
xchg
or
mov
out
jecxz
sti
pop
out
lcall
sub
nop
inc
fsubrl
pop
xchg
sbb
test
icebp
sar
sub
enter
dec
test
push
xor
xchg
cli
gs
adc
call
pop
addl
pop
xchg
mov
shr
xchg
out
mov
add
adc
mov
push
ja
shrd
xchg
fnstsw
jle
mov
adc
pop
xor
pushl
push
mov
xchg
xchg
add
loopne
fcmovnu
lods
pop
add
dec
sub
clc
dec
adc
stos
jne
test
xor
jno
sti
add
je
mov
lea
cmpsl
sbb
addr16
dec
mov
lahf
or
adc
into
xchg
int3
imul
ljmp
sahf
add
inc
sbb
imul
jno
push
dec
insl
mov
clc
jbe
pop
insl
xor
xchg
jo
cmc
dec
inc
call
xchg
or
cmp
outsb
xor
push
paddd
test
dec
mov
test
aas
mov
aad
lret
push
and
jp
inc
mov
ds
pop
adc
sbb
aam
and
push
sahf
movsb
pop
stos
push
dec
xchg
or
and
out
or
jmp
xchg
incl
push
mov
jb
loope
lahf
or
cmc
sti
das
mov
pop
iret
cltd
mov
add
pop
sub
push
iret
sub
cwtl
js
cli
paddw
jb
in
stc
notl
ret
pop
add
hlt
clc
mov
leave
mov
icebp
inc
mov
mov
pushl
outsl
adc
pop
adc
and
jne
mov
daa
lcall
ljmp
popf
jo
mov
mov
and
rdmsr
loopne
adc
pop
push
fucomip
inc
sbb
add
xchg
and
pushf
sbb
les
mov
or
cmp
cmp
stos
test
push
push
leave
stos
stc
fst
lahf
dec
gs
out
and
es
inc
sahf
cmp
int3
out
out
je
je
in
test
loop
test
sbb
stos
sub
imul
ljmp
and
push
ljmp
incb
jmp
es
mov
push
les
add
sti
jmp
push
lahf
sbbb
sti
dec
lea
stos
in
mov
cmpsl
repz
ret
shlb
jo
repz
in
push
mov
pusha
test
rcll
pop
std
std
mov
xchg
gs
jmp
cwtl
inc
ret
les
and
pushf
mov
xor
xor
jp
jg
mov
in
sub
std
and
aam
push
ret
iret
jecxz
daa
adc
pushl
lea
dec
push
push
inc
or
in
xchg
push
lods
les
test
outsl
addr16
push
enter
inc
insl
cmpsl
jg
mov
mov
jge
ret
jnp
mov
mov
stc
push
ja
mov
loopne
das
lods
dec
jge
pop
in
or
and
aam
push
lret
call
adc
test
int
mov
push
ret
add
dec
jno
cmpsb
mov
push
sbb
cmp
dec
lcall
adc
pop
push
push
jnp
and
jmp
dec
adc
leave
outsb
incl
loope
xor
dec
jg
sub
lods
fidivrl
movsb
lods
ljmp
mov
shlb
xor
mov
lcall
mov
mov
xchg
fisubl
adcl
mov
lcall
xchg
and
ret
jle
imul
rorb
sub
cld
inc
push
dec
stos
loopne
push
mov
sub
icebp
push
int
jg
pop
int3
out
and
test
push
in
lcall
pop
add
dec
fsubr
iret
idivb
xor
inc
mov
and
pop
filds
aaa
xchg
outsl
test
sahf
in
jbe
mov
into
leave
fistps
push
mov
dec
int3
pop
dec
in
cmp
mov
sahf
aam
pop
lret
insl
aam
dec
mov
cmpsb
ja
mov
loope
jns
sbb
cmc
rep
push
stos
mov
jmp
mov
push
mov
fildl
xchg
ljmp
jo
push
scas
inc
xchg
cmp
int3
iret
lea
popa
push
insl
or
pop
and
fdivrp
mov
cwtl
dec
dec
adc
loop
sub
test
add
in
add
adc
jbe
arpl
shrl
int
ret
mov
add
insl
lods
adc
test
inc
jns
dec
lds
and
pop
pushf
pop
ror
mov
pop
jge
mov
inc
pusha
and
aam
pop
iret
in
and
test
ljmp
shr
lods
add
mov
rorl
scas
xchg
add
xchg
lahf
mov
add
jl
xlat
mov
mov
sti
shlb
pop
les
or
add
sarl
jg
loopne
scas
mov
mov
and
aam
push
mov
in
fbld
jb
pop
test
in
lcall
jmp
jno
movsb
mov
movsl
je
stc
add
enter
xchg
or
rol
and
aad
sbbl
out
ret
jne
stc
xchg
mov
std
and
push
pop
push
xor
repnz
and
in
jge
and
dec
dec
adc
outsl
fdivrl
mov
dec
fildll
fistl
insl
mov
push
jle
add
mov
push
clc
pop
push
mov
pop
jg
mov
nop
pop
sbb
xchg
push
sbb
fcmovnb
repz
shrb
pop
pop
pop
mov
pop
scas
mov
pop
sbb
push
js
in
pop
push
lret
xchg
mov
loop
in
xchg
mov
dec
xchg
add
leave
jecxz
das
std
or
movsb
and
sarl
mov
cwtl
xor
sbb
ljmp
lcall
push
ret
push
xchg
mov
pusha
mov
adc
int
xor
outsb
ss
cmp
and
push
mov
sahf
fwait
ljmp
movsb
scas
lcall
stos
jl
xchg
pop
cmpsl
mov
mov
lcall
out
lcall
mov
call
xorl
sahf
fnstcw
decl
mov
or
push
ja
mov
cmp
adc
les
cmp
pushl
jne
es
mov
dec
inc
jbe
xchg
add
arpl
fidivl
cmpsl
in
sbb
jno
inc
sbb
in
pushl
and
and
lahf
or
or
xchg
sbb
push
jne,pt
cli
jmp
cs
fisttpl
add
cs
aaa
cmpsb
pop
mov
xchg
fisubrs
std
xchg
call
jo
or
pop
je
repnz
sub
sub
adc
lcall
ljmp
xor
jl
rcr
das
in
pop
jbe
xchg
cmp
addr16
cmp
jmp
ret
push
insb
mov
mov
xchg
add
jecxz
sti
rolb
iret
call
pop
out
inc
cltd
call
andl
out
sar
cltd
mov
mov
mov
fcmovb
sub
jp
data16
lds
or
call
push
test
int3
int
jae
enter
xchg
adc
lds
and
repnz
popf
inc
dec
jmp
into
pop
add
push
rolb
jg
lods
je
push
mov
enter
mov
rorl
inc
pop
cli
call
add
pop
jo
sub
movsl
pop
adc
jmp
inc
outsb
mov
loope
xor
and
mov
enter
jne
xchg
cmpsl
incl
stos
fcmovne
ja
cmp
xor
cmp
xchg
push
push
mov
call
repz
sahf
shrl
lea
scas
sahf
cmp
jmp
mov
mov
mov
push
sbb
jb
aaa
mov
call
or
jp
mov
arpl
out
ljmp
inc
stos
or
daa
sub
shrl
mov
nop
pusha
add
test
pop
into
mov
and
filds
cs
xchg
jns
je
outsl
std
sbb
pop
push
pop
jl
jnp
pop
ljmp
mov
adc
fnsave
lret
cmp
js
mul
jb
pushl
xor
fidivl
dec
stos
addr16
pop
cmp
outsl
dec
incl
lea
or
leave
dec
xchg
call
lds
or
jg
jl
pusha
and
inc
mov
dec
addb
push
rclb
js
mov
pop
sbb
repz
cmp
loope
xor
call
and
dec
push
jbe
xchg
jle
xor
movsb
movsl
in
aad
out
mov
dec
mov
dec
push
jae
push
or
jle
cmp
pop
xchg
jg
lcall
jno
xchg
sub
aad
stc
cwtl
daa
push
push
pop
incl
insb
mov
das
dec
mov
lret
lret
outsb
or
aas
int
insl
xchg
loope
test
xchg
loop
jne
push
fucomi
sbb
xor
in
jb
lret
dec
dec
movsl
xchg
mov
or
inc
mov
adcb
xor
hlt
mov
fsubl
fsts
fcomip
or
out
push
outsl
leave
ss
stos
sub
nop
xchg
outsb
push
aaa
loope
xor
fnsave
lret
sub
mov
data16
jb
out
mov
cmp
icebp
pop
bound
xchg
call
rcll
push
add
lahf
icebp
ret
pop
mov
sarb
jo
jae,pn
push
shr
leave
fwait
push
aad
mov
add
fnsave
adc
sub
dec
ds
xor
cmp
inc
aas
dec
aas
push
aas
pop
aas
fs
push
aas
js
test
mov
cmpsb
aas
stos
aas
fidivrl
call
push
add
call
xor
xor
mov
xchg
xor
xor
xor
xor
xor
dec
xor
std
das
aad
test
xor
in
divl
sti
xor
xor
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
call
fildll
xor
xor
xor
xor
ljmp
mov
and
cs
scas
ss
fwait
or
pushl
lods
aaa
fnstenv
sbb
sub
enter
cli
cmp
cmp
test
insb
xchg
je
xor
lds
ljmp
jp
test
pushf
aaa
mov
mov
cmp
cmp
cmpl
into
cmp
cmc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
xchg
cmp
inc
jmp
cmp
bound
cmp
xchg
jg
mov
add
jbe
sub
rorl
idiv
jg
xor
xor
xor
xor
xor
das
cld
fistps
xorl
xor
xor
xor
xor
xor
or
xor
loope
pushl
js
xorl
fwait
xor
xor
xor
xor
xor
mov
cld
jg
xor
pop
xor
jge
test
das
cli
xor
pushl
sbb
and
ss
imul
ss
subl
aaa
repnz
cmp
jb
mov
cwtl
cmp
jp
inc
cmp
loopne
loopne
cmp
cmp
xchg
lea
popa
in
pushl
xor
and
sub
inc
cmp
outsb
cmp
cmpb
cmp
cmp
fsts
cmp
cmp
cmp
cmp
sti
ds
ds
mov
xchg
ds
ds
ror
inc
ljmp
fnstcw
mov
xor
xor
xor
xor
xor
mov
jg
mov
xor
xor
xor
xor
icebp
pop
std
mov
xorl
ss
adc
pushl
xor
pop
aaa
popa
aaa
jb
jnp
mov
xchg
aaa
cltd
pop
aaa
mov
shll
aaa
outsl
lock
call
and
cmp
jne
or
push
cmp
dec
cmp
cmp
idiv
pop
std
cmp
pop
cmp
cmp
cmp
cmp
sbb
pop
cli
push
cmp
pop
sbb
cmp
cmp
cmp
cmp
cmp
cmp
sti
out
clc
incl
cmp
ds
dec
aas
push
shrl
sarb
in
jmp
add
loopne
hlt
add
sbb
and
push
xor
jo
jns
repnz
cld
xor
xor
xor
xor
xor
push
xor
xor
xor
lods
xor
in
xor
out
pushl
xor
sub
cmp
imul
aaa
inc
aaa
dec
aaa
pop
aaa
mov
pop
cmp
cmp
cmp
inc
mov
sub
xor
cmp
inc
cmp
jae
sbbl
aaa
test
cmp
decl
mov
cmp
xchg
cmp
cmp
cmp
cmp
jmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
in
incl
cmp
pop
ds
cmpb
lods
ds
mov
lds
into
loope,pt
repnz
scas
and
das
aas
sarb
aas
out
aas
cmc
cmc
lcall
sbb
dec
xor
mov
mov
xor
xor
hlt
add
cmp
cmp
inc
xor
adc
ffreep
pushf
xor
xor
xor
xor
xor
xor
xor
push
xor
push
jb
mov
test
mov
xchg
xor
add
xor
fnstsw
outsl
and
xor
xor
xor
lods
xor
loope
das
std
jg
xor
xor
xor
xor
xor
xor
iret
xor
xor
xor
xor
xor
xor
clc
sbb
xor
xor
inc
dec
xor
jle
xor
icebp
xor
cs
ss
out
aaa
js
cmc
fcomip
aaa
jge
sbbl
aaa
ret
aaa
out
aaa
adc
cs
cmp
sbb
mov
adc
cmp
aaa
adc
aas
cmp
aas
aas
sahf
aas
enter
xlat
ja
sbb
push
test
xor
sbb
mov
mov
mov
xor
popa
fbstp
xor
xor
xor
insl
call
xor
sub
xor
mov
xor
xor
jae
xor
add
sbb
cmp
cmp
push
cmp
cmp
cmp
mov
scas
cmp
cmp
mov
or
cmp
cmp
pop
cmp
cmp
in
decl
cmp
cmp
mov
call
cmp
mov
cmp
cmp
cmp
fwait
mov
lret
pop
cmp
sub
pop
cmp
cmpl
cmp
iret
test
cmp
ds
cli
sbb
xchg
push
jo,pt
jp
jg
mov
mov
mov
ds
sti
outsb
aas
mov
adc
loopne
sbb
outsl
mov
push
xor
jnp
lea
sahf
fnstcw
insl
jg
dec
sbb
test
xor
bound
imul
sub
xchg
jns
xor
ljmp
mov
xor
ss
aaa
push
aaa
mov
jecxz
aaa
lods
aaa
mov
mov
aaa
loop
out
in
aaa
pop
cmp
cmp
icebp
cmp
mov
jae
ret
das
lock
cmp
cmp
cmp
push
sbb
int
cmp
cmp
std
push
cmp
mov
cmp
jo
cmpb
cmp
cmp
cwtl
sbb
mov
cmp
in
icebp
jmp
push
or
pop
or
mov
xor
xor
fdivrl
insb
jo
push
das
cmp
add
adc
pushl
jns
mov
cltd
add
mov
mov
pop
pop
popf
rcrl
setno
stc
decb
popf
fstps
cltd
cmp
add
out
cltd
ds
aas
repnz
add
fisttps
sub
sbb
or
add
add
and
xchg
xor
in
mov
daa
pop
and
pop
js
pop
stc
add
add
subl
in
inc
movsl
stos
cs
rcrb
add
and
fs
and
add
add
iret
dec
cmp
jnp
or
loope
mov
and
jb
inc
add
add
jae
daa
inc
dec
adc
add
insb
adc
int3
sub
and
cs
addb
add
jns
movsb
xor
inc
and
inc
and
xchg
fwait
and
add
in
and
jl
and
push
add
repnz
add
in
repnz
inc
and
add
cmpb
stos
sbb
cmpl
add
leave
xor
test
inc
sub
notb
cmp
addb
pop
jp
mov
imul
mov
push
sub
mov
xor
add
jl
and
sub
push
stc
add
stos
adc
in
cwtl
adc
and
inc
and
inc
and
pop
xor
jl
and
dec
sub
mov
xor
repnz
mov
and
add
out
in
sub
adc
psubw
adc
add
leave
add
xor
adc
fnstcw
fisubs
xor
push
pop
or
xor
adc
cmp
and
out
nop
daa
cmpsl
nop
xor
xor
repz
sahf
mov
xor
xchg
repnz
inc
and
xor
xor
inc
jo
push
mov
cmp
pop
pop
xchg
orb
repz
jnp
test
aaa
test
sub
xor
add
sub
xor
adc
enter
add
mov
and
cmp
out
add
xor
adc
pop
adc
or
xor
adc
sahf
and
xchg
add
and
jns
pop
inc
and
add
popf
push
pop
mov
add
hlt
push
rep
or
add
iret
sub
inc
push
popa
and
movsb
and
add
js
int3
insb
lret
adc
out
mov
mov
add
cmp
leave
or
les
pop
pushf
cmp
mov
fcoms
cmp
ret
mov
dec
je
sub
push
xlat
cmp
jae
test
pop
mov
popf
push
inc
dec
lock
add
jne
sbb
shr
mov
dec
pop
pop
push
out
mov
lock
sbb
pusha
or
jno
and
sub
hlt
xor
add
lret
push
out
adc
mov
and
xchg
adc
and
cld
inc
or
aaa
add
fwait
push
aam
pusha
mov
out
sbb
and
jno
pusha
mov
sbb
ficomps
inc
lods
xor
andl
xor
mov
cli
push
leave
mov
les
pop
push
inc
sbb
jecxz
inc
aaa
add
add
hlt
imul
pushf
sub
adc
mov
inc
mov
jge
insl
sub
je
insl
jae
je
mov
sbb
dec
pushf
lds
or
xor
arpl
or
rorb
enter
dec
xchg
gs
insl
insl
gs
je
imul
imul
push
inc
fsubl
call
aam
inc
sub
shl
pop
inc
or
and
push
lahf
lcall
cmp
dec
sub
movsb
or
or
dec
call
xor
adc
or
in
je
cmp
repnz
jnp
mov
push
push
out
inc
push
cltd
and
inc
push
and
or
and
pop
jns
lea
lea
push
fs
dec
sbb
jne
sbbb
add
in
and
push
xchg
negb
pop
mov
or
dec
xor
bound
outsl
clc
lods
xor
sub
js
or
mov
pusha
mov
sbb
sbb
sbb
cmp
ret
push
dec
and
push
or
inc
jmp
xchg
jmp
dec
or
pop
or
mov
fs
pop
sbb
pop
ljmp
ljmp
lret
mov
cs
push
push
cmp
stc
call
inc
add
cmp
nopl
xchg
mov
aaa
call
pop
out
adcb
and
add
or
or
mov
repnz
mov
pop
inc
jne
or
in
jb
lret
mov
popa
outsl
outsb
gs
mov
jae
cs
push
sbbb
ss
xlat
popa
jne
je
gs
arpl
cmp
lcall
movb
pop
and
or
jg
je
sti
xor
call
sbb
rorl
mov
adc
hlt
sub
rol
jae
mov
dec
gs
popf
ror
leave
leave
lret
int3
pushf
lds
adc
push
into
jp
pushf
pushf
pushf
pushf
rcl
rcl
or
loopne
cmp
jmp
std
imul
fmull
aas
std
dec
xlat
pushf
enter
test
bound
int3
sub
or
xlat
jns
std
inc
std
js
pop
fisttpl
mov
push
daa
xchg
js
jne
add
lcall
jo
pusha
sahf
xchg
jns
sti
mov
sti
insl
fdivs
fldcw
push
push
inc
sub
dec
xor
push
fwait
mov
add
mov
push
jge
or
imul
sbb
push
fisttpll
mov
scas
aad
xor
rorb
dec
icebp
inc
fistpl
testl
or
sbb
mov
outsb
orl
cmpsb
in
enter
add
adc
sub
adc
mov
push
call
pop
push
xor
and
jmp
cmp
mov
ds
and
dec
push
ljmp
and
inc
add
mov
xor
cltd
lcall
pop
xchg
push
pop
sbb
sbb
inc
je
nop
push
xchg
std
pop
inc
mov
xchg
std
xchg
std
xchg
std
xchg
std
test
cmpsl
and
gs
xchg
test
js
insb
outsl
shll
mov
dec
mov
add
mov
js
in
inc
and
inc
rol
add
mov
push
xchg
iret
lock
sbb
xchg
or
lods
and
lods
insl
test
push
shll
pop
cld
std
in
xor
or
xor
pop
andb
ja
xor
aaa
pop
repz
hlt
cmc
test
inc
jp
call
inc
add
xchg
xor
lock
fmull
inc
fs
pop
xchg
gs
outsl
add
mov
gs
jae
adc
jns
mov
mov
jne
sub
mov
arpl
lcall
mov
jno
imul
imul
js,pn
mov
dec
aad
imul
insb
outsl
jb
cs
mov
xor
rolb
add
cs
ss
dec
out
out
call
xchg
push
add
repz
aas
pop
add
movsb
add
fs
in
add
sbb
lret
call
lds
inc
nop
scas
pop
shrb
and
adc
dec
and
pop
popf
dec
xchg
mov
jge
fcoml
adc
jmp
mov
mov
leave
or
out
sub
xor
xchg
addr16
in
push
sbb
repnz
outsb
or
cmc
mov
icebp
mov
sbb
adc
or
orb
or
cmpsb
sbb
sbb
push
inc
ret
mov
repnz
push
aam
add
sub
outsb
fmuls
fstps
add
pop
or
pop
adc
sbb
add
mov
enter
mov
shlb
jmp
out
pop
add
cltd
in
lea
subl
add
inc
mov
ja
rcrb
and
adc
dec
mov
cltd
adc
stc
out
push
sbb
ror
jg
sub
adc
add
daa
add
dec
into
loop
sti
fsubrs
xor
pop
mov
push
stos
js
insb
in
or
or
adc
jg
repz
mov
pop
pop
or
inc
mov
neg
sbb
push
jns
sahf
inc
addb
inc
and
add
mov
add
inc
and
cltd
adc
add
inc
and
mov
fwait
pop
inc
and
popa
inc
rorb
push
and
mov
lret
mov
gs
rolb
pmulhuw
out
movsb
add
dec
and
movsb
mov
cmpsb
sbb
add
xchg
or
leave
sbbb
popa
dec
xor
lcall
xor
testl
adc
jmp
fildll
jae
sub
mov
or
loope
data16
pop
sub
and
pop
mov
and
stos
add
cmpsb
imul
fmuls
in
pop
push
inc
and
lcall
pusha
insb
je
lcall
or
sub
cmpsb
shl
lock
fmulp
dec
shll
mov
jb
inc
jae
xchg
add
jle
cmp
scas
sbb
stos
pop
add
cmpsb
imul
xor
xor
int3
fiadds
cmp
xor
adc
dec
jo
and
dec
inc
nop
cmp
add
pop
fsubrs
or
outsl
pop
or
sub
pop
movsl
bound
idivb
popa
jns
jne
jae
xor
lods
or
jge
popa
dec
call
push
js
imul
mov
dec
inc
push
jg
jae
sub
push
push
dec
sub
xchg
dec
xchg
rorb
ret
and
mov
divb
sub
inc
adc
leave
test
xchg
sbb
xchg
dec
jae
xchg
movsb
inc
enter
cwtl
and
or
popf
or
pop
dec
inc
pop
sbb
mov
stc
les
orb
add
adc
adc
dec
inc
and
xchg
add
popf
add
mov
mov
jge
sbb
or
sbb
xchg
add
ret
subl
inc
icebp
push
inc
dec
add
ss
movsl
sbb
push
rcr
mov
outsb
outsw
es
mov
adc
lods
mov
pop
fsts
pop
push
addr16
push
inc
xor
es
lcall
outsb
pusha
mov
outsb
jb
and
push
in
outsl
js
movsb
movsb
or
xlat
and
jno
adcb
popl
movsb
or
test
dec
adc
leave
stos
push
ret
add
mov
pop
push
aas
push
adcb
sub
arpl
loopne
or
insl
insl
dec
jae
adc
inc
cmp
dec
fnsave
in
inc
add
outsb
mov
or
pusha
add
popa
add
jns
dec
ss
push
dec
es
and
push
sbb
xchg
test
nop
roll
adc
pop
cld
imul
mov
imul
imul
pop
shll
xor
jge
add
ror
add
ret
push
pushw
addl
mov
notl
mov
addl
or
sbb
sbb
out
ret
dec
scas
pop
adc
and
mov
push
jne
xchg
jg
bound
lcall
push
pop
jp
xchg
push
in
adc
jne
sbb
jae
or
add
shlb
pop
lock
jnp
dec
or
mov
int3
inc
jnp
addr16
fmuls
jns
jae
insl
pusha
cmpsb
fdivs
xchg
outsl
pop
mov
insb
pop
push
xor
inc
or
je
data16
loop
add
xor
push
adc
stc
pavgw
shrb
imul
data16
addb
add
das
bound
xor
orb
int
pop
add
add
xor
lret
add
push
xor
fistpl
or
or
jne
cmovns
add
decb
lds
imul
outsb
inc
mov
or
pop
adc
add
jb
pushf
mov
pop
jecxz
or
jns
and
mov
jne
lea
jecxz
inc
and
pop
movsb
jmp
xor
jae
and
repz
lcall
inc
add
lea
xor
gs
jmp
xlat
inc
imul
xchg
pop
ss
xor
add
sti
adc
out
inc
add
push
jb
mov
imul
add
popa
xchg
mov
popf
xchg
pop
dec
or
ds
popf
addr16
jne
add
pop
adc
xchg
pop
xor
add
sub
mov
outsb
jae
pop
fs
or
push
fwait
in
sub
dec
dec
imul
push
daa
sbb
icebp
mov
test
sbb
dec
je
dec
or
fwait
and
xor
cmp
gs
imul
and
mov
cmpsl
dec
fidivl
add
lods
mov
push
es
call
hlt
pushl
cmp
xor
xor
shlb
xor
xor
mov
xor
repz
xor
xor
mov
fwait
xor
xor
xor
push
fldenv
lea
cmpsl
xor
loope
xor
divb
aam
mov
add
or
or
stos
xor
jg
mov
fwait
ss
lcall
aaa
orb
mov
cmp
cmp
push
cmp
add
add
xor
cmp
cmp
cmpl
ljmp
cmp
lods
cmp
cmp
cmp
lret
cmp
cmp
stos
cmp
and
or
jne
clc
jo
cmp
dec
decl
pushl
dec
xor
xchg
xchg
xor
xor
xor
xor
jne
jg
test
mov
call
iret
xor
xor
xchg
sub
int
pop
fimuls
xor
scas
ss
call
ss
fwait
jmp
sub
movsl
call
lret
cmp
iret
cs
sub
dec
sub
xor
xor
inc
pop
sub
xor
sbb
nop
xchg
and
adc
subb
sbbb
lret
bound
xor
lret
adc
orb
punpckhbw
or
push
add
ljmp
jae
jne
pop
sbb
xchg
std
xchg
or
jecxz
je
rcrb
cmp
inc
inc
add
adc
aas
add
add
adc
call
add
jbe
pop
pop
push
nop
sbb
dec
movaps
adcb
and
add
inc
or
and
adc
pushf
popa
dec
sarb
es
stc
cld
xchg
add
inc
adc
rolb
stos
add
and
adc
or
fs
call
add
mov
lods
shld
adc
repz
sidtl
dec
mov
aaa
pop
and
sub
insb
inc
add
flds
xorb
adc
nop
push
add
dec
adc
xor
and
daa
xchg
xchg
or
add
xchg
test
and
sub
jb
dec
push
dec
add
ror
cmp
push
daa
push
add
orb
dec
add
and
add
add
add
inc
add
add
add
popa
add
call
int
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
