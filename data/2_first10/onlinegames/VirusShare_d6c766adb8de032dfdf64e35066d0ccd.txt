outsb
add
add
add
add
add
add
add
add
and
scas
xchg
loop
pushf
xor
data16
inc
xor
sub
test
cmp
jae
sub
xchg
orb
outsb
mov
push
out
push
loop
pop
lods
push
dec
add
insl
adc
pop
out
cmpsl
pop
in
sbb
add
mov
icebp
idiv
loope
inc
jmp
out
into
mov
dec
cmp
lret
adc
mov
xchg
and
cmp
cld
push
fwait
ss
insb
pusha
jb
xor
push
je
push
mov
and
in
fwait
cli
mov
iret
adc
sti
mov
push
xchg
jmp
shlb
adc
sub
mov
fsubl
lret
cltd
clc
pop
mov
fnsave
jno
mov
int3
mov
pop
pop
decl
fisttpll
imul
ljmp
rclb
insl
mov
mov
cld
cmp
lods
negb
bound
push
adc
dec
je
mov
nop
fcomp
int
ljmp
push
cli
pop
int
in
js
lea
leave
sbb
out
pop
ljmp
mov
into
jmp
mul
sbb
jmp
loopne
and
pop
insl
clc
adc
sub
mov
jno
mov
popf
std
push
gs
mov
xchg
dec
mov
sarb
push
sbb
add
cmp
test
daa
mov
nop
sbb
jmp
test
cli
pandn
cli
sbb
stc
inc
cmp
test
data16
out
andl
outsb
decl
inc
adc
cmp
loopne
das
out
aaa
nop
mov
or
mov
cmc
push
cmp
in
add
sub
xor
mov
jecxz
cli
repz
xchg
or
test
push
xchg
sahf
add
push
call
inc
cmp
push
jo
push
push
clc
dec
xorl
xor
fcmovnu
mov
inc
inc
mov
jns
std
out
or
lcall
test
movsb
in
push
sbb
and
lahf
xor
xchg
in
insl
adc
mov
mov
stos
clc
int
inc
retw
adc
pop
and
lahf
add
aaa
lret
stos
sub
push
mov
mov
sahf
add
fs
xchg
and
test
cmc
inc
ret
push
or
or
jo
jns
cmpsb
pop
js
or
repnz
scas
add
sbb
ja
lods
cmpsb
loop
decb
jmp
push
pop
dec
xor
gs
push
ljmp
jno
xor
stc
mov
push
xor
fists
push
and
sub
dec
rcrl
div
loope
mov
add
dec
cmp
cmc
mov
out
adc
mov
xchg
mov
push
and
pop
fisubl
cmp
pop
out
aad
ror
aad
or
imul
mov
sbb
mov
out
add
orl
pop
call
enter
sub
xchg
jne
add
xchg
dec
jo
dec
push
sbb
push
enter
ljmp
mov
mov
aas
dec
xor
inc
mov
shll
jg
xchg
inc
popf
mov
mov
dec
packuswb
clc
pushw
clc
mov
call
cli
sub
add
dec
sub
sub
jo
xchg
or
xlat
stc
inc
push
pop
push
jnp
cmpsl
shr
test
push
shr
dec
lcall
lcall
mov
enter
shll
push
sarb
test
cs
xchg
rcr
pop
lcall
xor
push
inc
ljmp
gs
mov
pop
sub
rolb
cmpsl
test
pop
call
xlat
ja
mov
jecxz
ret
jle
cmp
cmc
and
cwtl
sbb
pusha
and
lret
jmp
lahf
scas
int
push
sub
dec
pop
inc
pop
push
sbb
es
push
stc
adc
in
pop
sti
ret
xor
mov
or
add
mov
push
fcomps
sub
sub
and
hlt
dec
xchg
bound
cmp
sbb
mov
sub
into
into
xor
mov
notl
fadds
gs
adc
and
or
jae
mov
push
sbb
cmp
xchg
xchg
push
inc
insb
xchg
lods
test
xor
mov
in
test
xchg
push
fcmovnu
dec
pop
mov
pop
lock
fwait
mov
cmp
add
outsb
mov
mov
cmp
leave
xor
ds
xchg
fiaddl
mov
pusha
or
out
mov
scas
cmp
into
test
sahf
dec
sbb
arpl
cmpsl
mov
and
loopne
or
rorl
pop
fstl
pop
cmp
sbb
call
adc
sub
rep
push
add
movsb
pusha
scas
cld
enter
cs
iret
adc
and
inc
mov
subb
xchg
pop
mov
push
jl
dec
enter
loope
jl
insb
call
test
jecxz
pop
mov
and
jmp
cli
mov
inc
or
mov
push
jb
scas
insb
jae
es
cmp
mov
lea
sub
repz
sti
stos
in
xor
in
idivb
adc
and
hlt
sub
push
imul
and
sbb
xchg
in
je
loop
xchg
test
imul
mov
outsl
pop
outsl
inc
mov
out
sbb
jnp
data16
mov
sbb
in
xchg
pop
ret
push
icebp
in
mov
mov
out
cmpsb
xor
rclb
sti
add
jle
js
xor
cmp
iret
add
pop
loope
fisubrl
sbb
dec
std
sbb
jmp
scas
mov
pop
iret
mov
mov
mov
pop
dec
cmp
push
jae
or
sarl
fstpt
jecxz
loopne
enter
in
cmp
stos
mov
fsubs
add
jo
jmp
hlt
adc
jle
and
cmp
sub
mov
adc
fistps
pop
push
jp
sbb
pop
push
ret
sub
movsl
adc
jg
cmc
dec
jl
into
cmp
out
pop
jns
cmp
cmp
adc
and
inc
sub
es
pop
mov
mov
in
push
mov
fiaddl
add
data16
arpl
movsb
inc
sti
jne
sbb
push
jb
add
cmc
add
push
xor
out
mov
int
jnp
sub
sbb
rcr
call
mov
push
pop
add
mov
adcb
and
push
rcrl
fsts
push
divb
push
cmp
push
cltd
jmp
popf
lods
enter
add
movsl
mov
int3
and
sub
xchg
mov
cmp
push
shrb
sarl
jp
jmp
outsb
pop
loop
add
out
sub
in
push
pop
iret
test
mov
fsts
stos
jle
lods
inc
enter
inc
jmp
pop
ja
push
or
jns
into
imul
push
sbb
popf
cmp
adc
jbe
lret
pop
clc
xlat
pushf
mov
sub
dec
inc
outsl
push
adc
adc
cwtl
insl
mov
incb
and
and
insb
adc
hlt
cmpsb
fwait
inc
addr16
mov
mov
mov
iret
loopne
jle
cmp
add
ljmp
outsb
mov
pop
sub
xchg
inc
nop
xchg
pop
add
mov
out
test
in
pop
ds
and
mov
jno
popf
ficompl
dec
mov
lea
sti
dec
daa
xchg
movsl
jnp
in
push
sbb
mov
js
in
popf
sti
fs
and
pop
pop
mov
lock
or
inc
push
aaa
mov
testl
or
xchg
fldenv
les
pop
mov
xchg
dec
ja
outsb
xchg
ds
out
ljmp
adc
mov
mov
push
add
mov
adcl
mov
pop
lock
lcall
sub
push
addl
pop
pop
mov
data16
sti
mov
ret
ja
lret
insb
shl
shlb
das
push
jne
xchg
orl
gs
sahf
fadds
test
and
loopne
das
lahf
aas
fistl
jle
jl
cmp
mov
cs
cmpsb
or
repz
lcall
test
xchg
or
idiv
mov
lcall
scas
test
iret
xor
outsb
xor
xchg
fs
jmp
sub
mov
sub
shrb
mov
mov
scas
cltd
jae
jg
roll
inc
and
pop
sar
movsl
data16
add
jl
jle
fsts
add
mov
clc
cmp
dec
fwait
mov
ret
jne
das
cmp
roll
nop
or
xchg
cmp
dec
cmp
mov
cmp
push
aam
adc
dec
jl
push
pop
imul
pop
ret
jecxz
in
hlt
push
test
xchg
mov
jbe
lea
sub
stos
rcr
mov
dec
push
in
mov
aad
jnp
xlat
roll
cmp
rorb
test
inc
xor
out
vmovapd
pop
mov
mov
jo
add
out
mov
sbb
pop
mov
out
lret
inc
adc
push
stc
dec
xlat
adc
scas
cmp
out
or
lahf
jecxz
inc
jl
fistl
int3
je
xor
push
mov
sub
fnstsw
xchg
xchg
inc
cld
pop
jmp
rcll
push
inc
sub
das
stos
cmp
movb
pop
lcall
fildll
arpl
lcall
cmc
xchg
add
adc
js
test
add
sarl
imul
adc
pushf
lods
and
sub
into
cli
das
mov
movl
ret
stc
sbb
jb
test
mov
mov
cmc
insb
aad
adc
aaa
xchg
cmpsl
jb
mov
and
add
adc
or
and
idivb
sbb
outsl
setne
jo
push
sub
cmp
cmp
mov
cmc
repz
cmc
sbb
push
arpl
inc
pop
push
jecxz
sub
pop
cmp
repz
test
push
xor
mov
lahf
adc
sbbl
add
mov
xor
mov
imul
xchg
aam
ret
jb
sbb
pop
icebp
clc
jl
lret
xor
sub
sub
paddq
fs
in
xchg
fnsave
repz
or
aam
jle
mov
enter
js
mov
lret
jge
mov
mov
xor
push
aad
xchg
push
subb
movl
mov
fisttps
and
mov
les
rolb
aaa
idivl
or
sbb
js
fisubrl
xchg
push
in
popf
cmp
xchg
fs
xchg
pop
ret
cmp
mov
out
addr16
cmp
movsb
inc
cmp
mov
jbe
or
sub
sub
add
js
push
cmp
jae
lods
pop
mov
xor
and
mov
negl
cmp
ficoms
loopne
jmp
cwtl
dec
mov
inc
aad
ja
jbe
sub
fadds
sbb
dec
ss
adc
movsl
inc
pop
adcb
js
inc
fsubl
jne
and
jge
insl
inc
inc
scas
ror
jg
xchg
mov
dec
and
rorl
jno
sub
js
xchg
jecxz
icebp
fdivrl
outsl
dec
hlt
sti
jne
gs
mov
sbb
icebp
ficomps
mov
test
cmp
jle
cmp
mov
into
push
int
xor
mov
push
or
inc
outsb
cmp
fucomp
dec
lea
xchg
jno
mov
aad
fistpl
mov
outsl
pushf
jmp
cmp
ljmp
aad
push
dec
enter
push
pop
mov
pop
sub
push
vmovntps
mov
lea
and
test
cmpsb
movsl
push
jbe
es
cmp
fs
repnz
nop
xchg
lods
int3
lods
pop
sarb
cmpsl
jns
jb
mulb
rcl
adc
shlb
fiadds
jl
inc
in
adcb
sarl
mov
push
jae
in
les
xchg
xor
bound
sbb
add
cld
lods
inc
aam
mov
mov
cli
xchg
fisttpl
movsb
stc
ret
js
mov
and
leave
pop
mov
in
jecxz
mov
aaa
btc
movsl
loopne
ljmp
inc
fisubrl
dec
jecxz
mov
icebp
fidivs
xchg
sahf
add
sahf
cli
mov
xchg
das
fdivrl
leave
cwtl
xchg
nop
scas
mov
ds
and
pmuludq
or
mov
inc
mov
lea
in
mov
xchg
enter
ss
movb
cmpsb
xchg
dec
int
pusha
lods
jge
shll
push
sar
dec
enter
hlt
roll
dec
push
clc
inc
push
in
aas
xchg
roll
mov
mov
aaa
xor
bound
or
jo
movsl
add
mov
mov
mov
or
cli
push
inc
mov
test
pusha
fimull
xor
lcall
insb
into
mov
add
mov
imul
or
and
ret
ds
jo
jbe
mov
pusha
lods
fnstcw
push
negl
aam
subl
lods
out
cwtl
mov
inc
push
in
sahf
fildll
mov
fdivl
sbb
mov
jno
icebp
xor
imul
imul
ljmp
mov
mov
mov
mov
or
jle
jmp
sahf
es
jnp
iret
mov
mov
inc
or
xchg
add
subb
pop
lods
push
inc
and
in
testl
imul
aas
roll
jnp
inc
and
cmpb
xorb
ficompl
lfs
subb
cld
jno
enter
in
scas
xchg
sub
sbb
jno
or
fistpll
arpl
sub
ja
jnp
popa
aaa
pop
add
stos
out
adc
out
pop
mov
inc
mov
jge
es
shll
repnz
mov
and
push
rclb
cmp
mov
xor
popa
pop
jnp
xchg
lret
xchg
pop
scas
imul
lods
lock
int3
fs
movsl
xrelease
movsb
mov
cmp
sub
fistl
and
lret
push
jno
test
out
mov
jmp
jmp
mov
dec
fidivs
mov
arpl
aam
push
pop
inc
cmp
test
mov
mov
xor
int3
std
push
cltd
cltd
inc
cmpsb
out
lahf
pop
add
aas
aam
jno
mulb
add
dec
add
add
xchg
in
int3
arpl
adc
adc
cmp
nop
outsl
dec
sbb
popf
mov
cmpsl
or
or
fmull
jg
repz
mov
sub
icebp
sbb
sub
push
inc
call
jecxz
mov
sub
or
int
outsl
jecxz
stc
mov
sub
imul
sbb
sub
scas
mov
divb
orl
inc
gs
mov
cltd
cli
lock
sti
mov
lcall
inc
cmp
sbb
shrb
imul
imul
test
adc
fucomi
cli
sub
sbb
fisubrs
xor
mov
jg
fwait
loope
mov
jmp
mov
jnp
add
mov
and
cwtl
inc
dec
in
xorl
mov
leave
jae
dec
aaa
inc
in
scas
pop
mov
jle
dec
push
lods
cli
xchg
repnz
add
sub
out
adc
leave
rorl
dec
stc
out
rorl
push
mulb
xor
and
sub
lock
in
outsb
xchg
adc
mov
add
int
xchg
insl
es
push
push
adc
data16
repnz
rcrl
cmpsb
out
xor
test
lret
sub
xchg
jb
and
mov
cld
xor
push
fcmovnb
pop
sub
rorb
xlat
pop
sub
std
lcall
insb
std
dec
fst
add
scas
cmp
sbb
int
jp
inc
ffree
xchg
fadds
jae
mov
cmp
mov
into
in
add
xor
or
loope
cmp
pushf
inc
fwait
mov
fcmovu
xchg
cld
and
sahf
fsubl
cmp
scas
mov
mov
cmpsb
loop
repz
sbb
filds
jg
or
test
sbbb
jle
mov
ja
push
add
push
in
lret
mov
adc
scas
daa
js
inc
test
sar
icebp
push
imul
es
lock
and
icebp
shlb
insl
call
jae
sbb
inc
xlat
incb
mov
push
movsl
mov
sub
icebp
pop
iret
xchg
sbb
jecxz
lds
sub
ret
std
mov
adc
ss
addr16
and
mov
mov
daa
or
fwait
ret
dec
ds
cmp
mov
fnstenv
mov
push
mov
sbbl
xchg
popa
hlt
ss
push
sbb
test
jne
xor
lcall
or
icebp
sar
scas
jge
js
cmovno
loop
or
pop
inc
scas
jmp
repnz
xor
insl
mov
addr16
mov
daa
imul
or
into
enter
leave
shll
pop
jno
aad
and
xchg
loope
test
jl
packuswb
mov
shl
rclb
push
cmp
loopne
lods
dec
daa
std
or
insb
test
or
jle
push
xchg
dec
imul
popf
and
mov
dec
cmpsb
mov
insb
and
outsl
lds
mov
subl
insb
or
push
mov
xchg
pop
lods
lahf
pop
aam
scas
ja
mov
and
mov
jnp
sub
push
clc
adcl
or
subb
call
sbb
test
mov
push
loope
fwait
cmp
pop
fmulp
out
sbb
add
pop
in
add
dec
jo
call
inc
shrb
inc
sti
ret
cld
push
mov
andb
inc
sbb
xor
test
repnz
in
xchg
or
test
mul
lahf
vpmacssdd
xchg
mov
std
and
dec
sbb
xchg
test
scas
std
push
pop
sahf
or
shlb
inc
lahf
fcmovu
mov
cltd
scas
fs
jg
sbb
inc
mov
imull
lods
jbe
adc
into
ror
jnp
addb
pop
nop
nop
ja
jge
add
icebp
lods
je
jns
xchg
fimull
out
adc
xor
sbb
pop
insl
int3
cld
jo
mov
test
cmp
cwtl
add
cltd
in
icebp
xor
xlat
push
test
jno
mov
mov
sti
mov
orb
es
int3
or
sub
cmp
mov
es
jecxz
repnz
mov
push
out
addl
pop
cmp
push
adc
and
lahf
inc
js
sbb
insl
adc
jle
shlb
clc
add
adc
cmc
leave
outsl
cmp
mov
inc
adc
je
int
xchg
mov
je
pop
push
movsb
lods
jmp
dec
ret
mov
sub
xlat
popa
mov
sti
adc
clc
out
inc
cmp
and
subb
xchg
imul
je
mov
add
out
jne
imul
jae
in
push
int
or
test
jbe
icebp
sbb
lock
out
dec
sbb
ja
pusha
test
jecxz
xchg
ret
into
lea
cmpsl
pop
push
pushf
aam
xor
lret
jns
insb
mov
cli
sbb
lock
ret
popf
jns
mov
loope
add
testb
push
inc
xchg
pop
adc
jg
rclb
sbb
jl
inc
ljmp
xchg
das
repz
mov
ret
xor
jmp
pop
sbb
xchg
push
xchg
cmpsl
sbb
jae
subl
mov
scas
mov
dec
in
pop
das
jp
xor
movsl
push
jg
es
sub
enter
mov
jbe
dec
mov
fcoms
mov
je
cmp
jmp
push
add
fwait
mov
daa
icebp
sub
ror
mov
shlb
rcr
idivl
sub
imul
cmp
mov
jl
loope
in
xchg
fwait
inc
xchg
mov
loopne
dec
push
or
imul
or
xor
shrb
pop
repnz
fisttpll
mov
addb
repz
push
pusha
lret
xor
ret
cmpsl
jp
jb
aaa
mov
jl
outsb
mov
sbb
jg
aam
dec
inc
add
adc
gs
in
mov
aad
test
dec
jle
int
cs
xor
jl
push
out
sub
fdivp
push
fidivl
sub
test
bound
mov
xchg
daa
iret
inc
hlt
pop
repz
mov
mov
sti
shlb
inc
addr16
or
shl
push
leave
push
lret
jmp
fdivrp
ja
pop
xrelease
add
dec
test
or
repnz
imul
incl
clc
call
xor
clc
inc
test
dec
mov
icebp
loopne
scas
xchg
lret
loopne
or
mov
fildll
stos
data16
dec
adc
pop
jb
xchg
icebp
jb
scas
push
mov
jge
lea
outsb
gs
mov
frstor
in
pop
pop
lret
jl
pop
cwtl
dec
and
sti
pop
cmpsl
push
scas
ja
jno
out
mov
and
pop
andb
push
pushl
mov
xor
mov
push
inc
inc
xor
or
jnp
xchg
fdivrs
adc
push
lahf
xor
xor
xor
out
sub
lret
jge
mov
mov
mov
xchg
lahf
aam
inc
push
mov
mov
gs
pop
ret
sub
sub
test
bound
dec
or
cli
adc
scas
mov
aaa
push
test
das
dec
xchg
data16
aas
inc
mov
stc
dec
inc
push
shll
add
dec
cmp
jle
sahf
or
push
sbb
pushf
pop
aas
xchg
add
add
fmuls
add
imul
mov
lock
ja
lods
fsubrl
aam
cmp
or
icebp
xchg
jg
test
sub
popf
dec
push
jmp
test
fisttps
insl
add
aaa
dec
or
ret
jb
scas
stos
add
sub
push
and
enter
or
test
push
es
and
inc
ret
push
jecxz
lahf
js
jae
jbe
das
fcoml
add
jp
push
stc
add
or
dec
adc
pop
xchg
jae
add
lret
outsl
cwtl
data16
stos
xor
fnstsw
cld
or
sub
sub
out
movsb
outsb
scas
stc
jno
daa
sbb
pop
cmp
mov
xchg
test
insb
inc
clc
dec
into
push
out
scas
das
idiv
shll
pop
or
pusha
add
inc
adc
rolb
sbb
pop
cmc
stos
das
adc
jmp
dec
out
cld
cmp
int
dec
xchg
inc
xchg
sbb
stos
mov
xor
inc
int3
stos
mov
or
cmp
ja
jge
movsb
fidivl
es
sub
stc
mov
inc
mulb
je
stos
lahf
fnstenv
push
cltd
rcl
inc
ljmp
hlt
popf
cmp
xlat
xlat
hlt
incl
aad
jge
repz
inc
aam
int3
idivb
push
cwtl
out
mov
call
push
mov
and
in
pop
std
das
sub
nop
sub
and
and
outsl
mov
jle
addr16
sub
out
and
in
out
aam
mov
mov
dec
leave
cmp
rep
sbb
add
shll
xchg
mov
xchg
push
cmp
sbb
js
mov
repnz
fmull
out
repnz
mov
sub
sbb
xlat
add
mov
xchg
add
aam
repnz
sbb
mov
mov
xchg
cld
pop
ret
js
test
or
dec
add
ret
je
stc
push
or
cwtl
notb
dec
pop
ret
mov
ds
mov
icebp
paddsb
or
cmp
pop
loop
jae
outsl
dec
push
mov
sahf
lods
jne
or
ret
pop
dec
outsl
cltd
out
push
add
xchg
add
xor
jmp
sbb
or
cli
inc
adc
repnz
test
jle
sub
adc
stos
add
push
pop
dec
sbb
jge
jmp
cwtl
mov
ja
add
add
mov
in
test
enter
js
xor
cmp
add
jge
dec
mov
imul
or
xchg
add
scas
nop
nop
scas
jg
sti
and
mov
mov
pusha
stos
in
imul
gs
ds
stos
adc
and
fldt
sub
popf
adc
lcall
pop
sbb
push
icebp
mov
push
jne
jae
shll
jns
xchg
xor
adc
mov
jbe
repz
negb
popa
out
inc
xchg
fwait
adc
adc
xchg
push
bound
shrb
pop
jp
hlt
xchg
std
dec
add
in
inc
mov
fwait
test
sbb
fdiv
or
cmp
frstor
or
sub
adc
aam
icebp
in
xchg
jno
aas
xchg
decb
cld
jae
arpl
mov
xor
test
push
aad
les
in
faddl
xor
cmc
push
sahf
adc
push
lret
outsl
pusha
mov
sbb
dec
xor
out
push
bound
cli
push
pop
or
daa
mov
cmp
enter
frstor
cmp
stos
sti
dec
rolb
add
cmp
in
cltd
mov
rol
mov
pushf
xor
sub
and
xor
mov
push
mov
xor
adc
mov
lcall
cwtl
cld
mov
push
test
sbb
in
std
std
cli
sahf
lods
lock
scas
daa
into
fnstenv
rsqrtps
xchg
scas
xor
inc
iret
ds
push
aam
adc
push
mov
jmp
testl
fisubl
stc
push
ds
jnp
jmp
mov
adc
mov
lret
sub
sbb
lret
outsb
fwait
pop
out
paddq
repnz
faddl
mov
mov
mov
sbb
fisttpl
push
lods
xchg
int
pop
in
jl
mov
add
imulb
xchg
add
xchg
fmull
inc
cmp
xchg
lcall
cmc
xor
mov
inc
sbb
dec
das
or
jb
jb
add
fsubr
int3
adc
loope
xor
movsb
mov
test
fdivr
sahf
in
lea
mov
imul
out
cmp
push
mov
cmp
in
cmp
test
inc
pop
mov
or
dec
mov
lcall
xor
mov
sbb
subl
xchg
push
adc
dec
in
lret
out
inc
fwait
jns
scas
xor
pop
or
xchg
push
cmp
lcall
in
es
mov
andps
ja
sbb
sub
inc
sti
lock
push
fs
rorl
inc
aad
mov
mov
or
mov
in
mov
psllq
jmp
dec
test
nop
mov
rorl
out
out
shlb
lahf
lods
xor
and
push
fdivrs
int
outsl
sub
std
pop
jb
mov
dec
sub
insl
fstl
frstor
pop
fs
lahf
test
dec
int
xchg
cmp
add
jnp
adc
and
cmp
cmc
mov
repnz
mov
jno
xor
and
mov
loope
data16
loopne
push
mov
aas
push
sbb
mov
test
orl
push
or
gs
xchg
push
iret
subl
jmp
aaa
ljmp
add
mov
into
pop
sub
xchg
faddl
in
shrl
pusha
outsb
push
xlat
test
testb
sub
rcll
insb
mov
jle
push
cmp
push
lret
mov
ret
dec
xchg
or
call
push
pop
cmp
in
roll
mov
mov
jmp
add
stc
call
add
mov
in
pop
insl
test
and
jns
into
ds
movsl
cmp
cmp
mov
iret
cmp
adc
push
adc
sbb
insl
lds
mov
pusha
sbbl
xor
push
cmp
add
mov
mov
inc
mov
add
xor
cmc
or
or
aam
lds
pushw
fsts
mov
outsb
loopne
and
sbb
cmc
jae
rcr
xchg
scas
sub
sahf
fs
mov
loopne
dec
pop
jne
jmp
sti
fwait
xor
dec
push
xor
sub
jl
int
xchg
pop
add
xor
xchg
lahf
leave
dec
mov
imul
out
mov
and
pop
push
jl
lret
or
mov
mov
mov
fcmovb
push
cmp
push
filds
cmp
lcall
mov
fiaddl
mov
dec
scas
mov
jl
rep
in
cs
icebp
pop
ret
addr16
lods
lock
xor
stos
test
adc
cmp
push
inc
dec
xor
shl
mov
xchg
push
xor
push
divb
pop
sbb
ljmp
cmpsb
pop
movsb
js
cmpsb
mov
std
lahf
cmc
nop
sub
jnp
sahf
cld
icebp
outsb
lods
cld
inc
popa
insb
out
adc
and
inc
inc
mov
ja
std
add
scas
pop
iret
add
push
or
int
cmp
pop
pop
cld
sti
jnp
mov
adc
inc
sbb
sbb
fmull
data16
sti
ret
loop
rcrl
lds
adc
arpl
dec
and
mov
mov
ror
mov
loope
xchg
push
nop
sub
push
push
stos
or
hlt
push
jbe
dec
test
cmp
ljmp
dec
xchg
dec
mov
fs
arpl
cld
pusha
and
sarb
and
sbb
xchg
shll
insb
jno
icebp
repnz
sbb
push
clc
stos
jecxz
adc
clc
popf
push
fwait
outsb
sbb
lods
jge
or
or
arpl
mov
lea
inc
nop
and
and
out
insl
or
or
mov
sbb
frstor
and
inc
test
lahf
xchg
adc
push
dec
clc
fsubp
mov
loop
outsb
ds
xchg
mov
and
or
repz
insl
repnz
into
xchg
pop
lock
inc
adc
test
sbb
jae
iret
xchg
or
andl
ljmp
test
loopne
push
jae
or
cmp
cmp
inc
pop
and
push
loope
nop
test
jae
or
pushf
or
dec
sti
fldenv
jge
fisubl
pop
sti
push
es
in
cmp
lcall
sub
mov
push
inc
rcr
out
xor
mov
sbb
xchg
shlb
and
inc
addr16
push
push
ret
mov
lods
adcb
or
jb
ljmp
or
rolb
jp
sbb
into
ss
data16
push
cmp
adc
ret
and
sahf
add
jo
mov
adc
add
repnz
enter
mov
pop
xchg
cli
aad
push
bt
ficompl
stos
xor
lcall
sarb
inc
sahf
push
jle
or
push
imulb
dec
sbb
hlt
pop
out
stos
scas
les
or
adc
dec
insb
mov
nop
jnp
mov
push
jnp
mov
add
push
xchg
sub
cmp
add
cmp
add
out
dec
popf
scas
iret
aam
pushf
dec
sub
mov
pop
std
xchg
daa
lcall
pop
mov
icebp
inc
ljmp
in
test
inc
test
adcb
and
fcoml
xchg
mov
shlb
scas
add
into
lds
dec
lret
mov
dec
sub
adc
insl
xor
aaa
xchg
call
push
add
inc
cs
or
inc
inc
in
inc
lcall
iret
mov
std
cmpb
or
ret
popa
movsb
aad
pop
popl
scas
xchg
mov
push
out
pop
mov
sub
jno
in
leave
divl
cmp
outsl
ret
out
mov
cmp
mov
insb
es
dec
aam
cld
add
decb
jp
je
ljmp
lods
cmpsb
jl
jle
rcl
jnp
push
inc
lret
aam
in
adc
int
leave
inc
push
shufps
push
adc
or
cli
sbb
in
and
add
pop
mov
mov
mov
into
adc
push
cld
or
sub
push
popa
xchg
mov
test
daa
mov
imul
test
or
outsl
es
loopne
cli
loop
rcrl
xchg
cmpsl
sbb
aaa
adcb
sub
pop
xlat
dec
and
fstcw
and
je
mov
mov
mov
pop
inc
push
ret
xchg
out
dec
ficompl
jmp
hlt
push
test
scas
outsl
in
xchg
xchg
mov
mov
dec
pushf
xor
fmuls
mov
mov
dec
addr16
js
xchg
lds
and
dec
adc
or
mov
add
jns
iret
adc
add
sbb
cltd
jae
cmp
lret
cltd
xchg
stos
iret
shr
lea
mov
in
mov
mov
orl
call
in
jle
clc
or
xchg
sbb
adc
push
lret
mov
orb
or
mov
and
daa
and
cmp
pop
stc
xor
ror
roll
push
add
vpaddd
sub
into
and
aaa
push
nop
add
jecxz
icebp
fdivl
in
mov
xor
pusha
ror
cld
sbb
mov
call
cld
xchg
push
stc
fisttpl
pop
sbb
arpl
pop
shrb
add
cltd
test
in
loopne
outsl
add
mov
mov
mov
ljmp
ret
movsl
adc
xor
pop
dec
js
jle
mov
push
push
xchg
int3
jge
fsubrs
movsl
mov
jge
imul
cmp
or
adc
data16
mov
dec
out
cmp
mov
xor
lods
out
ss
push
inc
mov
shl
ffreep
inc
ljmp
pop
aam
ret
iret
addl
lea
out
mov
xor
xor
repz
push
ja
aad
arpl
pop
adc
lret
stc
add
jnp
dec
mov
cmp
jp
stc
aad
sbb
xor
sbb
cwtl
sub
popa
sub
xor
jno
adc
push
add
stos
push
fidivl
adc
mov
mov
cld
stos
repnz
test
flds
xchg
cmp
nop
sbb
aad
sbb
mov
mov
imul
lahf
ja
mov
scas
push
stc
bound
push
pushf
shlb
jg
sbb
movsb
fsubl
cwtl
jbe
mov
repnz
cmp
aad
mov
idivl
mov
dec
into
addr16
out
and
add
push
aas
and
cmp
sti
fstpl
inc
dec
dec
mulb
cmc
mov
nop/reserved
add
in
sbb
in
jb
push
mov
mov
inc
xchg
js
xchg
mov
idivl
mov
jo
mov
into
fsubp
les
push
iret
sbb
loopne
fwait
sbb
mov
sar
jo
push
dec
nop
cld
and
bound
shlb
dec
dec
xchg
dec
push
pop
sbb
lock
sarl
fmull
mov
mov
aam
cmp
rcl
je
pusha
push
inc
mov
cltd
addr16
cli
mov
add
inc
std
loope
inc
bound
sbb
and
and
fcmovb
and
jae
in
popf
fwait
and
sti
pop
pop
push
bound
lret
and
rolb
sbb
addr16
cmp
add
roll
add
adc
push
pop
test
fmull
in
push
sub
and
push
mov
adc
jle
dec
xor
pushw
in
sbb
lods
jb
add
stos
pop
mov
xchg
pop
in
sbb
pop
imul
stos
sub
ret
mov
push
es
jb
xchg
pusha
jp
pop
mov
cli
pop
push
sub
dec
jl
call
addr16
scas
lcall
ds
cmp
movsb
inc
popa
mov
mov
jbe
imul
adc
out
roll
imul
push
push
jnp
mov
call
jp
add
inc
jae
pop
ds
xchg
das
lret
mov
jg
loopne
imul
lcall
add
push
or
mov
iret
imul
inc
mov
mov
fcomps
std
xchg
add
cs
sub
mov
inc
andl
or
jecxz
xorb
fwait
cmp
pop
insb
mov
jg
mov
adc
inc
rcrb
cli
lock
fs
xchg
cmc
dec
cmp
mov
in
loope
mov
ss
and
adc
push
xchg
mov
out
sarb
lock
pop
outsb
fisubl
jle
sub
cli
mov
jmp
into
pop
add
mov
adc
roll
sub
add
incl
xchg
loopne
jnp
inc
shlb
mov
jg
inc
inc
stc
jg
sbb
mov
fs
int
test
or
int3
sbb
pop
jmp
push
cmpsl
cmp
push
dec
cmp
push
mov
jle
adc
xor
subb
sbb
push
inc
imul
daa
cmpsb
fdivrs
popf
les
jge
adc
aam
repz
push
outsl
pop
pop
test
pop
xchg
adc
and
add
das
mov
jno
rcrb
jae
testb
mov
and
fldenv
cmp
in
enter
mov
mov
dec
cmp
mov
in
add
scas
ds
pop
fsubs
push
cmp
addr16
push
mov
out
inc
fcmovnu
stos
mov
mov
and
xor
inc
sbb
jnp
inc
inc
std
dec
rcll
cs
sub
out
fisubs
cmp
mov
aaa
test
sti
insb
xchg
dec
pop
xchg
pop
dec
push
jg
into
idivl
xlat
push
test
stos
add
xor
add
or
and
fnstcw
sbb
lahf
sub
cmp
nop
sub
stos
cli
repnz
cltd
rcr
adc
sbb
out
sbb
lcall
push
cmp
mov
add
or
push
dec
shl
pop
jo
loop
mov
fldcw
push
out
push
adc
ljmp
jp
jmp
fs
jle
xchg
sbb
loope
push
fdivrs
adcb
ja
cmc
cs
call
repnz
xlat
iret
pop
adc
daa
stc
xchg
mov
sarb
mov
das
mov
sub
repnz
push
jno
mov
imul
jmp
mov
lret
mov
add
xchg
imull
inc
or
out
add
dec
jg
imul
out
ljmp
les
mov
out
into
pusha
outsl
sbb
repnz
lds
out
mov
dec
mov
sub
je
add
push
nop
mov
lock
cld
in
movsb
mov
add
mov
push
hlt
xchg
stos
nop
xor
lods
fcomps
push
jmp
aaa
and
in
adc
imul
xor
add
es
or
aaa
int3
mov
jno
in
pop
dec
add
fistpll
in
lret
xor
dec
movsl
or
push
lods
fisttpll
inc
int3
jae
cmp
inc
xorps
cld
not
jle
das
and
stc
in
pop
out
loop
daa
cltd
movsl
mov
xor
jns
arpl
popa
sub
jno
cmpsb
fldcw
pop
mov
mov
sub
sub
xchg
cli
push
mov
push
xlat
in
pop
cmpsb
test
imul
add
sub
pop
lods
mov
mov
jge
mov
pop
push
jmp
push
fldenv
dec
psraw
out
sti
mov
ja
jge
mov
mov
or
loopne
pop
daa
jge
dec
into
lcall
lds
sarb
xchg
add
cmp
out
icebp
push
pop
xor
xchg
push
push
cmp
jae
pop
popf
inc
xchg
sub
lock
xor
ss
mov
push
inc
push
or
leave
fwait
daa
test
movsb
or
mov
jp
inc
outsb
in
in
arpl
repz
mov
call
xorl
repnz
in
aas
in
adc
daa
pop
push
push
mov
arpl
mov
movsl
adc
ret
mov
in
faddl
or
mov
push
jbe
and
or
test
mov
jmp
fwait
loop
or
mov
cmp
rorl
test
das
addb
call
jb
inc
lods
addr16
cld
iret
or
dec
jbe
adc
enter
enter
lods
push
fistpll
mov
and
pop
sti
jb
rcl
xchg
xlat
xchg
xor
pop
pop
adc
ret
nop
lret
int
imul
ljmp
movsb
sbb
pop
or
loope
xchg
jge
mov
sub
daa
pop
test
mov
sbb
aad
xchg
call
arpl
mov
fmuls
sahf
xchg
jne
ret
sbb
add
lds
lcall
loopne
into
and
fisubl
insb
test
push
mov
mov
es
or
fsubrl
jbe
push
clc
sbb
mulb
ret
xchg
insl
fisttps
push
in
and
mov
mull
and
insl
xor
push
lret
or
add
orl
or
mov
stc
sub
in
lret
ljmp
and
ds
xchg
jmp
mov
or
ja
mov
push
add
ja
jg
stos
inc
dec
mov
addr16
push
cld
and
in
inc
stc
rorl
dec
fisttpll
ja
std
or
rcl
sbb
das
and
mov
xchg
fldl
pusha
sub
sbb
outsb
pop
loop
in
popf
sub
mov
or
gs
adc
xchg
mov
xor
mov
sbb
add
mov
clc
pop
leave
inc
mov
stc
stos
sti
xchg
pop
jge
mov
lea
pop
sub
movsb
stos
push
dec
jmp
push
ja
or
in
out
lret
inc
lock
call
push
xor
push
lret
sbb
push
lcall
lea
cmp
push
add
xchg
cmp
jne
dec
fidivl
lret
xor
and
inc
sub
jae
xchg
fsubl
or
pop
adc
cmpsb
mov
mov
fsubr
cmpsl
in
ljmp
mov
mov
jl
sbb
xor
mov
fldt
mov
out
fimull
or
pusha
int
xchg
jge
cwtl
pop
sbb
pop
cwtl
and
mov
xor
xchg
ret
in
or
lahf
dec
xor
cld
push
mov
ret
jg
cmp
stc
mov
and
subl
sbb
fwait
push
pop
movsl
dec
mov
or
shll
test
or
push
test
add
aas
test
iret
lea
mov
shlb
push
gs
cli
lds
mov
flds
sub
xor
movsl
mov
out
enter
bound
push
pop
push
lret
lea
loope
es
es
aad
xchg
fmuls
mov
daa
mov
xchg
sbb
mov
loope
adc
stos
cmp
jno
inc
fisttpl
popa
stos
sub
sub
jle
stos
inc
or
push
and
cmp
push
bound
js
imul
mov
sub
jnp
scas
adc
push
aam
jb
arpl
inc
mov
popa
daa
or
dec
or
pop
pushf
out
add
popa
and
sub
push
les
sbb
ljmp
mov
push
ret
fdivp
in
sbb
mov
stos
icebp
add
push
call
movsl
in
sub
cmp
imul
test
not
sahf
or
cmp
inc
imul
or
jmp
ds
mov
into
mov
xchg
sbb
mov
lahf
cld
loope
cmp
imull
aad
popf
xor
outsb
push
scas
stc
pushf
pop
mov
sub
jl
xchg
sub
push
rcll
adc
push
adc
test
xchg
add
xor
daa
pop
aam
jge
cmp
test
sub
adc
test
stc
dec
cmp
setnp
movsl
push
mov
lods
mov
cmp
repz
add
loopew
push
lods
js
mov
iret
out
outsb
vaddss
imul
decb
pop
mov
bound
andb
xor
and
cli
xor
std
mov
out
pusha
jmp
mov
shl
scas
add
xchg
cld
aad
mov
cmpsl
cmp
scas
xor
insl
inc
and
cmp
mov
shll
pop
push
pop
push
stos
lret
xor
leave
fsubl
mov
ja
inc
imul
jp
inc
mov
incl
sub
lret
push
dec
ficoms
sbb
aad
mov
scas
fcompl
lcall
gs
int
pop
push
jne
insl
in
pop
arpl
aas
stos
sbb
enter
pop
fnstenv
lea
mov
dec
inc
jo
push
pop
rorl
dec
outsb
inc
sti
add
adc
outsb
dec
gs
iret
fstl
xchg
lods
in
sbbb
cmpsb
lcall
inc
inc
mov
out
call
std
pop
daa
pop
push
aas
push
test
inc
lcall
cmc
add
les
insl
mov
decl
push
jl
sbb
hlt
mov
out
iret
dec
clc
dec
out
sub
insl
ss
jmp
enter
aas
sti
lret
xchg
push
adc
into
mov
fstl
rorb
mov
cmp
sbb
mov
adc
loope
mov
xor
lahf
jo
and
push
cld
xorb
arpl
push
cmp
cmpsl
or
cmpsb
mov
hlt
jmp
fxch
hlt
add
jge
push
mov
clc
xor
pop
add
cmpsb
mov
stos
movsl
push
pop
es
rorb
jl
mov
jnp
ret
sub
pop
mov
fstl
push
std
outsb
push
aad
rcr
mov
insl
adc
imul
shlb
fistpl
and
test
dec
cmpsl
std
sub
sub
outsb
push
sbb
cmc
xchg
mov
mov
shl
mov
cmp
repz
mov
mov
pop
adc
movsb
pop
insl
or
inc
mov
sbb
mov
loop
push
or
sbb
lods
gs
push
jb
dec
mov
cmp
pop
fidivrl
sti
pusha
ja
inc
in
push
rorb
shl
fmuls
cltd
pop
mov
jg
data16
out
cmp
mov
scas
push
aas
cmpsl
ds
sub
cmc
mov
dec
pop
adc
xchg
das
pop
iret
mov
lret
pop
and
and
lret
xor
fdiv
mov
out
xchg
imul
sahf
xor
jbe
fs
aas
fcomps
popaw
out
inc
jns
push
cmp
mov
inc
jae
repz
cmp
cmp
rcr
inc
das
jbe
pop
sub
adc
dec
mov
lods
xchg
or
ret
jbe
roll
ds
test
sbb
ljmp
xchg
mov
mov
dec
xchg
je
imul
sbb
or
call
outsl
xor
sbb
cmpsb
push
mov
cmp
push
push
adc
mov
cmp
test
cmp
stos
aas
out
lcall
sbb
add
gs
fstl
dec
outsl
in
int3
sub
xor
mov
push
shll
mov
and
mov
orl
rorb
dec
mov
daa
jae
shrl
xchg
mov
inc
sahf
mov
adc
push
mov
lret
xchg
std
pop
mov
pop
xchg
mov
insl
cmp
pusha
mov
iret
std
jno
fimull
fisubrl
dec
sbb
aam
mov
push
xorb
add
inc
cmp
pop
push
dec
imul
dec
int3
dec
inc
outsb
jp
in
sahf
add
xor
int
test
or
repz
std
sub
mov
pop
loope
pop
mov
test
xor
stos
pop
outsl
jg
adc
cmp
jb
in
mov
sbb
shl
rorb
pop
xlat
mov
cmpsb
out
loop
popf
movsl
jns
push
lret
inc
les
lahf
adc
cmc
mov
xor
pop
clc
xor
mov
sbb
push
push
or
adc
xor
sub
enter
cs
adc
mov
rcll
mov
mov
and
cmp
sub
jge
xchg
rcrl
out
stc
adc
xchg
sub
push
inc
mov
outsl
pop
icebp
adc
xor
pop
pop
mov
pop
sbb
sub
sbb
aaa
pop
sub
jne
xor
xchg
push
or
popf
pusha
inc
add
mul
loopnew
es
push
pop
jge
jle
dec
pop
xchg
repz
xchg
into
lods
cmpsb
ljmp
pushf
cmpb
push
inc
pusha
sbb
push
xor
addr16
loope
xor
xor
out
lock
aam
jge
incl
lcall
dec
push
jecxz
adc
repz
push
cwtl
scas
mov
add
sbb
cmp
loop
add
rcrb
jb
das
ja
in
sub
fs
inc
sbb
cmp
xchg
repnz
cmp
push
cmp
test
cli
push
xchg
sar
xchg
sub
cmovg
lret
sbb
daa
push
dec
inc
dec
and
cmc
jmp
testb
pop
cmp
mov
mov
call
jbe
cmp
jne
lea
popa
jae
xor
and
or
in
jb
xor
les
rorb
pop
fs
xchg
and
daa
mov
and
mov
adc
xor
ret
jp
mov
std
sbb
repnz
xlat
cmc
sbb
and
sbb
inc
js
mov
mov
and
icebp
aad
inc
andl
in
pop
lods
mov
lret
imulb
aaa
or
lea
xchg
lahf
decb
push
or
mov
push
stos
je
data16
sub
cmp
sub
sub
jae
repz
xchg
je
aaa
movsb
aaa
adc
jo
cmp
xchg
sbb
mov
in
idiv
or
repz
lea
push
mov
sub
mov
repnz
push
adc
sti
mov
add
dec
call
xchg
dec
xor
xor
test
sbb
jno
int3
lret
jle
mov
mov
mov
pusha
les
out
adc
xlat
les
mov
sbb
xchg
sbb
stos
jno
cwtl
inc
mov
out
cmp
cmp
mov
test
mov
imul
mov
cmp
shlb
inc
ret
mov
into
dec
jnp
mov
adc
fdivrl
pop
sub
neg
inc
pop
movsl
adc
jnp
jecxz
std
or
add
pop
sbb
psrlw
and
xchg
mov
out
cltd
xchg
adc
xor
aaa
jno
cmp
cmc
cmp
mov
jbe
mov
lods
adc
insl
push
std
dec
add
sahf
ret
insb
lock
pop
push
and
inc
mov
sub
adc
cmp
pop
add
inc
mov
pop
push
push
mov
dec
call
mov
sub
sub
xor
dec
divb
push
push
inc
testl
push
jnp
add
idivl
and
add
je
outsl
cwtl
fs
mov
sbb
jo
les
inc
ret
mov
cmpsb
xlat
xor
mov
test
adc
adc
sbb
shl
jae
clc
fs
mov
aas
movsb
pop
sti
xor
and
pop
mov
mov
fadd
aam
aas
popa
jp
and
and
pop
aam
stos
jo
pop
scas
jo
clc
push
mov
xchg
js
neg
out
sub
arpl
and
push
test
mov
imul
dec
cmp
xlat
idiv
into
pop
sarl
cld
sbb
mov
fs
inc
xor
jp
movsb
cmp
pop
push
add
mov
fimuls
sbb
dec
movsb
mov
jp
cmpsb
and
ficompl
ljmp
rorb
fldenv
adc
clc
aas
enter
add
mov
sbb
xchg
mov
pop
incb
jge
out
pop
repnz
ret
lret
fnsetpm(287
rcrl
xor
ljmp
ffree
sti
ljmp
mov
pop
pop
rcrl
push
aas
sub
leave
mov
bound
insl
rcr
repnz
fbstp
mov
outsl
jge
push
xor
pop
add
into
xor
test
inc
or
sub
andb
mov
inc
leave
adc
mov
in
and
sbb
mov
and
adc
push
adc
test
cltd
aad
dec
push
jne
pop
and
pop
or
mov
out
mov
popf
and
jmp
aam
lds
flds
gs
dec
ss
mov
call
iret
add
fdivs
add
and
mov
mov
push
xor
mov
aam
cli
nop
addb
enter
outsl
mov
aas
jbe
jp
or
enter
sbb
test
aad
out
xor
pop
mov
xor
xchg
push
cmp
adcb
dec
pop
scas
das
ss
pushf
xor
inc
or
mov
mov
scas
lods
cmp
xchg
sbb
lods
sub
inc
repz
mov
adc
jbe
mov
push
pop
push
test
mov
scas
jno
and
mov
mov
jns
mov
push
sbb
pop
mov
sbb
push
mov
xchg
sahf
add
imul
hlt
repnz
data16
push
jns
inc
inc
push
into
and
add
cmpsb
fldt
notb
or
or
or
and
add
es
jge
xchg
mov
mov
jp
push
adc
mov
and
sbb
push
xor
mov
lock
scas
fnstsw
inc
ja
ret
mov
js
loop
movsb
mov
js
inc
sbb
sar
pop
mov
jns
mov
shl
adc
mov
cld
pop
and
lods
sub
lret
jb
das
dec
and
jmp
lea
xorb
fldl
ret
or
and
sbb
test
and
mov
sbb
mov
lcall
xchg
xor
cltd
inc
pop
das
xchg
outsb
mov
sbb
add
sbb
movsb
push
fs
xchg
mov
or
push
cs
insb
pop
mov
push
mov
stc
loope
and
lods
xchg
out
sub
je
dec
xchg
xor
cmp
add
fsubs
ficoml
popf
jl
sti
jb
pop
into
adc
mov
xor
sbb
icebp
push
xchg
cmp
xchg
push
das
in
push
ja
xchg
ljmp
pop
lea
pop
arpl
mov
jnp
cli
adc
jl
inc
int
sbb
xchg
add
fucomi
cs
out
or
fistpll
in
and
pop
and
stc
inc
sbb
cmp
popa
icebp
sub
mov
fiadds
and
xlat
paddd
dec
hlt
push
inc
sub
add
loope
jmp
xchg
pop
daa
xchg
loop
imul
insb
cmp
fistpl
or
stos
dec
daa
test
add
push
in
mov
int
jmp
lds
fsubs
out
inc
inc
pusha
out
icebp
and
lea
pop
jl
mov
out
subb
pop
sahf
rcl
pop
or
push
mov
je
pop
push
into
scas
mov
and
pusha
data16
sub
ljmp
jne
icebp
loope
lahf
and
mov
sbb
dec
xchg
aaa
out
test
arpl
mov
sub
es
jbe
mov
inc
sub
hlt
add
mov
fwait
arpl
outsl
add
adc
mov
out
enter
movsl
leave
mov
xor
mov
test
fsts
arpl
stos
scas
sub
and
xor
sarl
loope
jne
into
out
aas
popa
and
lods
xchg
loopne
inc
mov
out
push
shlb
sub
nop
add
cmpsb
or
jnp
fidivrl
xor
jo
test
stc
fbld
and
xchg
xchg
in
mov
hlt
xor
mov
scas
stc
out
call
ljmp
lock
shrl
mov
gs
jno
sti
push
cmp
cmp
dec
mov
sub
jnp
out
jae
in
mov
ficoms
fisubl
xor
mov
addr16
xchg
sarl
or
push
cmp
pop
add
adc
scas
inc
lahf
repz
jo
or
jne
je
fdivrl
xchg
jne
or
leave
iret
sub
adc
sahf
aaa
aaa
mov
cmp
pop
aas
mov
mov
pop
scas
and
cmc
dec
in
ljmp
pop
lret
insl
in
sub
mov
loopne
stos
jmp
xor
xchg
imul
dec
jnp
mov
out
push
popf
test
sahf
xchg
push
fsubr
push
push
lods
sbb
and
dec
xchg
das
mov
mov
loopne
mov
or
ret
fsubs
and
inc
movsb
loopne
xor
xor
test
or
rcr
cs
or
mov
out
mov
gs
gs
int3
stos
mov
test
lock
jmp
addl
mov
adc
dec
loopne
fs
add
lds
loop
add
xlat
shld
inc
mov
movsl
pop
sbb
push
aas
lods
out
popa
sbb
push
jecxz
scas
cmp
cwtl
mov
fwait
adc
pop
pop
dec
dec
popa
jae
ficompl
cmc
int
scas
iret
mov
pop
mov
in
mov
jle
add
addl
mov
pop
xchg
jl
fstps
pop
sbb
xor
push
inc
insl
std
in
shll
xchg
push
lods
xchg
cwtl
push
and
sub
push
popa
mov
add
test
movsb
cmp
jmp
dec
jb
es
push
insb
orl
cwtl
pop
inc
fsubrs
rolb
jo
cmp
cwtl
repz
push
cmpl
push
mulb
adc
dec
jns
pop
in
mov
shlb
imul
cli
push
xchg
lret
mov
call
dec
xchg
pop
addr16
pop
cmp
inc
or
sub
mov
push
push
add
sbb
pop
cmpsb
jge
xchg
out
jle
or
scas
mov
ljmp
out
or
push
xor
xor
mov
push
inc
xor
mov
push
stc
mov
or
push
inc
out
dec
call
movsl
addr16
stos
pusha
or
cmc
xor
or
mov
adc
mul
mov
xchg
cmpsb
rcrb
mov
pop
jp
mov
movl
inc
lods
clc
addl
or
lret
ss
popf
mov
loope
sarb
daa
add
test
jecxz
push
fs
movsb
or
mov
mov
or
cli
push
and
push
cld
js
stos
adc
bound
movb
out
xchg
mov
mov
mov
mov
loop
in
ljmp
aas
test
daa
dec
push
gs
cwtl
mov
mov
ret
push
repz
mov
xor
dec
sbb
pushf
andl
inc
cmpsb
rcll
loope
mov
jge
mov
repz
or
pushf
and
cmpsb
xchg
xchg
or
push
and
in
mov
push
and
out
orl
addr16
rcrb
mov
insl
xor
mov
and
lcall
scas
aad
leave
call
push
popf
pop
adc
daa
repnz
pop
sbb
inc
cltd
push
sbb
shl
lock
push
xchg
push
clc
lock
movsl
jmp
mov
dec
mov
pop
push
dec
inc
lret
adc
jle
sub
lret
and
imul
dec
jp
loop
mov
mov
cltd
int
fsts
pop
mov
loop
sbb
push
jp
in
icebp
xchg
out
testl
or
adcl
mov
xor
jbe
or
sbb
push
andl
jmp
jg
pop
xchg
jle
enter
push
mov
fistpll
test
jp
imul
mov
add
jle
mov
push
imul
jecxz
adc
hlt
out
pop
dec
dec
add
test
cmpsb
push
in
or
icebp
je
fldcw
jl
jge
jbe
sub
mov
mov
sub
leave
sub
mov
hlt
stos
rorb
cli
sub
xchg
mov
shl
jns
insl
and
jmp
or
sbb
mov
cs
cmp
sbb
xor
adc
mov
cmpsl
fwait
xor
ja
cli
add
jae
xor
pusha
mov
cmp
xor
scas
lret
or
cmp
out
pop
in
mov
outsb
cmpsl
in
rolb
jo
sahf
rol
fstl
popf
in
cs
sub
fsubrs
add
push
inc
dec
hlt
ficoml
loop
scas
push
std
lock
mov
xchg
xor
cmc
out
pop
je
xchg
stc
or
nop
xor
ficoml
mov
pop
jns
ret
repnz
icebp
pop
pusha
fwait
inc
sti
rcr
cmp
push
add
ss
xchg
mov
fwait
mov
orb
outsb
jo
push
fs
jb
cmp
mov
fidivl
imul
adc
adc
lods
fdivrp
js
xor
jg
mov
xchg
mov
iret
push
aas
lock
xor
adc
adc
leave
push
dec
fsts
ljmp
xor
mov
lret
xchg
lods
push
jo
xor
and
aaa
sbb
adc
outsl
pop
mov
std
mov
loope
mov
stos
cmc
inc
loopne
rcll
jg
sub
sub
dec
insb
mov
mov
push
sahf
std
addl
lret
lea
inc
mov
mov
mov
cwtl
rclb
jge
jg
xor
loopne
push
icebp
push
xchg
xor
inc
js
push
imul
push
ljmp
dec
push
bound
int3
out
aas
sub
shrl
add
dec
sbb
add
dec
cmp
jl
mov
cmp
mov
xor
xchg
cmovle
mov
jl
sti
cmp
sti
and
in
nop
iret
cmp
adc
dec
ljmp
inc
bound
jne
enter
repnz
xchg
jae
inc
fdiv
jae
fs
dec
push
cltd
cli
or
mov
dec
lds
jg
pop
mov
test
movsbl
mov
ljmp
jmp
and
jmp
rol
das
fstps
es
pop
outsl
push
ljmp
xchg
xor
arpl
aas
push
fcoml
xchg
jmp
mov
jbe
aaa
pop
arpl
incl
xor
ret
mov
out
sbb
sub
cmp
adc
fwait
jge
mov
mov
stos
sbb
loope
loope
popf
cld
pop
dec
mov
fiaddl
mov
jae
add
cltd
in
mov
cltd
daa
sbb
ss
xchg
decl
add
mov
out
or
inc
cmpsb
cltd
mov
push
ret
inc
push
iret
lret
pop
mov
xchg
insb
inc
popf
push
and
negb
dec
and
out
hlt
pop
test
inc
sub
pop
adc
stos
mov
xchg
sub
repnz
enter
sub
popa
inc
call
daa
lcall
loopne
nop
pop
sbb
scas
cs
arpl
fs
shlb
push
call
test
jnp
mov
jb
pop
ret
data16
in
push
pop
fadds
sbb
push
test
lret
or
leave
ss
or
jno
or
sahf
or
pop
cmp
into
adc
mull
mov
popa
or
mov
add
dec
mov
lahf
fidivrs
aaa
frstor
addb
sbb
dec
pop
add
inc
insl
pop
mov
or
fbstp
jecxz
adc
add
push
ljmp
mov
inc
jne
movsb
sets
mov
sbb
and
mov
fistl
pop
mov
ficompl
pop
and
jne
fidivs
mov
pop
dec
adc
sub
insb
insb
dec
jmp
inc
pop
dec
cmp
std
leave
dec
jbe
pop
cmpsl
popa
ja
and
movsl
dec
ret
arpl
xlat
pop
cli
dec
mov
push
add
pop
push
jle
fwait
aad
popa
mov
xor
mov
out
dec
and
pop
js
aas
mov
xor
xchg
adc
push
xchg
fisubs
inc
fbstp
sbb
leave
and
out
fnstsw
pop
cwtl
outsb
das
adc
cld
inc
lret
mov
pop
mov
loopne
in
mov
mov
mov
shrl
cli
out
cmpb
inc
cmp
sbb
mov
sarl
fisubl
mov
mov
push
xlat
sub
mov
adc
jne
or
push
jmp
sbb
mov
cmpsl
pop
add
scas
cli
enter
shl
popf
sub
fsubl
test
dec
push
lods
push
fwait
inc
dec
sarb
xor
dec
mov
hlt
ret
lret
clts
sub
inc
mov
lahf
fbld
fsubl
out
daa
testb
mov
push
and
into
jecxz
shrl
dec
add
cmpb
repnz
cmpl
add
aas
adc
outsl
mov
movb
jae
cs
or
call
movsl
rcrl
mov
add
loope
hlt
add
lock
roll
ret
ror
aad
aam
sti
sbb
out
mov
les
loope
sub
outsl
push
lods
pop
adc
idiv
shrb
stc
int3
fidivl
es
lret
push
jmp
div
push
cmp
sub
jecxz
xchg
fisubl
xor
rcrl
add
and
sti
test
xor
mov
and
dec
std
cld
push
jbe
push
and
in
scas
sub
add
popa
mov
and
insl
jne
jp
xchg
jp
push
xor
add
sahf
jne
mov
fldlg2
and
mov
or
rcrl
cltd
jle
xchg
shr
adcl
imulb
jmp
push
xor
mov
or
inc
push
ret
or
mov
push
mov
mov
lods
jl
adc
jns
inc
orl
inc
mov
sub
pop
inc
inc
sub
rorl
add
or
sbb
adc
inc
or
faddl
push
mov
push
mov
xchg
loopne
add
pushl
cmpl
sub
jl
jle
ror
cld
inc
hlt
test
insl
push
pop
sbb
dec
mov
sbb
popa
sahf
clc
lods
gs
sbb
int3
jecxz
cs
push
and
jmp
fisttpl
cwtl
inc
xchg
mov
loop
xchg
pop
seta
shl
dec
scas
jecxz
fbstp
popf
cld
and
or
jo
sbb
mov
lahf
arpl
sti
loopne
push
cli
lods
scas
jmp
sub
sti
mov
loop
sub
shl
test
xor
mov
xchg
jmp
shlb
or
sbb
or
cmpsl
push
inc
das
mov
mov
loop
sbb
pop
jb
jb
cld
or
int
repnz
jno
xchg
xchg
mov
mov
mov
cs
mov
and
mov
cmp
dec
dec
pop
jecxz
stos
test
jns,pt
dec
mov
movsl
xor
pop
push
dec
inc
ret
mov
mov
add
movsb
popf
jns
sub
xchg
cmpsb
push
push
int3
or
push
mov
add
add
mov
add
xorb
add
add
add
add
add
add
addb
add
add
add
push
add
add
push
add
add
add
add
add
add
js
add
add
add
add
add
nop
add
add
insb
add
add
add
add
inc
add
add
inc
add
dec
add
add
add
add
or
add
sbb
add
xor
add
add
add
shlb
add
cld
mov
add
imul
gs
xor
cs
insb
add
add
add
dec
outsl
popa
fs
imul
add
add
inc
gs
jb
arpl
fs
jae
add
add
add
push
imul
insb
insb
outsl
arpl
add
add
jb
jne
insb
inc
jb
add
xchg
nop
ret
mov
popa
add
arpl
loope
int3
in
dec
sbbb
nop
sub
or
dec
add
xor
pop
or
in
jb
jne
cmp
or
dec
xchg
rolb
icebp
pop
or
clc
repnz
push
add
xorps
cli
inc
out
inc
aam
cmp
mov
loopne
dec
jecxz
call
add
sbb
ss
pop
in
hlt
jne
in
jge
int3
es
mov
je
mov
pop
jno
rep
in
dec
or
push
sub
enter
jge
mov
shl
or
inc
outsl
dec
mov
sbb
orb
xchg
or
xchg
int3
pop
hlt
iret
data16
and
and
roll
inc
stos
add
pop
sub
fwait
int
adc
popf
or
loopne
incl
js
or
setg
dec
out
or
scas
icebp
cmp
cmp
jg
icebp
cmp
mov
icebp
xor
xchg
push
hlt
and
dec
aam
mov
call
inc
add
imul
add
pop
lea
dec
cmp
repz
ds
sub
call
or
push
sub
shll
nop
pop
push
jne
and
or
pop
outsb
mov
and
movsb
cmpsb
pop
or
sbb
out
repz
or
js
pop
scas
mov
rolb
addps
sub
mov
jbe
xor
mov
push
add
add
cli
mov
or
incl
jmp
popa
andb
pop
xchg
and
bound
adc
je
cwtl
lock
cmpsl
outsb
or
or
lahf
test
adcl
add
mov
or
cmp
cltd
or
insl
std
add
je
sahf
adc
push
imul
rol
ljmp
or
adc
outsb
lods
and
inc
inc
jns
fldl
push
cltd
dec
fmull
pop
cwtl
and
sbb
adc
jge
dec
xchg
jmp
pop
movl
add
lea
or
pop
daa
push
mov
test
cmp
push
mov
clc
adcl
es
cmpsb
sub
cmpsb
mov
mov
jae
mov
sbb
bound
inc
pop
sub
mov
add
xor
in
mov
lea
push
clc
test
adc
push
jmp
mov
pop
jmp
sbb
dec
js
pusha
fmull
test
jp
dec
jae
mov
pop
lea
mov
dec
fstp
jne
out
imul
je
add
pop
push
sbb
loope
out
mov
inc
sbb
mov
mov
loop
enter
enter
sub
adc
or
mov
or
xor
xor
jmp
mov
inc
bound
mov
or
popa
jno
or
les
sub
andb
push
pushf
bound
test
sbb
das
xor
pop
rorb
fsubs
lock
cwtl
adc
sbb
inc
inc
mov
sbb
repz
jl
movsb
cs
sar
inc
jecxz
pop
decl
push
push
nop
or
incb
mov
sbb
gs
sbb
out
insl
add
jb
js
cld
in
xchg
lock
lea
mov
adc
shlb
push
imul
or
sub
inc
dec
cli
jo
fimull
mov
shl
lret
stc
xchg
jecxz
push
adc
add
push
mov
decb
jo
mov
adc
add
call
jno
push
sub
jne
lea
mov
and
or
jge
dec
test
adc
dec
adcl
mov
adc
push
dec
data16
or
jl
add
sahf
push
and
inc
mov
es
xchg
test
lock
lret
add
mov
pop
inc
dec
addb
dec
cmp
sbb
jb
xchg
pop
adc
mov
mov
sbb
mov
stos
add
push
cltd
push
pop
divl
cmp
pop
jl
push
mov
push
mov
xchg
fstpt
enter
fs
loop
xchg
leave
fldl
fildl
push
call
cld
add
mov
lea
sbb
sbb
jo
adc
lea
test
orb
or
dec
test
push
inc
add
mov
roll
jl
pushf
or
sub
inc
shlb
xor
or
clc
xor
or
add
xor
mov
imul
push
add
inc
test
sbb
mov
push
add
les
add
add
pop
push
outsl
mov
pop
sbb
and
sbb
push
sbb
inc
loope
adc
cmpsl
sbb
push
aaa
cmp
push
push
push
push
push
call
in
mov
mov
or
add
sub
outsl
das
fisubrs
xorb
pusha
insb
lea
sub
cmpl
je
push
jae
test
jecxz
mov
sbb
rep
jle
pop
mov
outsl
add
push
pop
lret
sbb
dec
nop
xor
mov
sbb
inc
cltd
cmp
mov
lods
or
mov
or
lret
xchg
nop
add
jle
xor
leave
je
add
add
test
push
xchg
fisubs
cmp
dec
inc
repnz
test
shll
adc
inc
add
call
imul
addb
pop
or
pop
ret
nop
lock
cld
xchg
and
call
jmp
adc
jne
rorb
lret
push
call
inc
push
sarb
add
pop
sti
daa
jbe
add
ret
push
xor
stos
pop
add
ret
in
fildll
leave
mov
pop
mov
sub
rcll
jo
nop
cmp
add
std
pusha
loope
push
hlt
cltd
cmp
repz
loop
adc
push
fisttpl
add
je
xor
sub
int
push
jmp
lret
shlb
test
dec
lret
inc
push
pop
push
xor
jle
leave
push
xor
inc
add
cmp
sub
sub
or
andl
mov
xlat
jne
push
cmp
in
or
or
adc
into
scas
add
jns
inc
jmp
pop
pop
mov
mov
jb
add
push
ret
sbb
sbb
dec
jne
jl
scas
lods
jge
adc
cmp
mov
leave
fdivs
les
es
or
pushf
roll
rep
loopne
and
xor
jnp
add
cli
iret
movsb
push
push
sbb
stos
adc
test
fidivl
cmp
ret
adc
decb
add
lock
push
push
lea
fdivrs
test
or
bound
ret
add
outsb
inc
adc
enter
mov
pop
or
xor
sub
dec
push
hlt
push
lcall
adc
jle
into
push
in
iret
rol
enter
flds
adc
adc
lret
call
jge
jne
stc
jmp
inc
ficompl
add
out
fwait
loopne
sub
pushf
movsl
dec
pop
push
jb
jne
inc
or
sub
xor
roll
scas
in
add
scas
dec
cmpb
pop
mov
xchg
je
add
out
inc
xor
mov
jle
test
and
push
add
push
push
call
sbb
mov
adc
lds
jbe
lret
lods
lret
faddl
inc
mov
mov
xor
pop
cmpxchg
in
jae
push
adc
add
les
jbe
imul
inc
mov
cmc
adcb
and
add
push
rolb
add
lods
loop
sbb
inc
sbb
pop
andl
add
lea
addr16
xor
mov
stos
inc
movsl
sbb
scas
inc
imul
std
xor
icebp
mov
enter
sbb
cmp
loop
jmp
mov
cld
inc
rorb
push
rol
cmp
mov
add
daa
hlt
iret
sub
jmp
push
lea
mov
leave
inc
jae
adc
add
call
sbb
js
gs
push
push
loopne
mov
and
mov
or
and
mov
xor
jb
imul
cwtl
insb
xor
loopne
vmread
push
xchg
xlat
jae
pop
inc
insb
mov
add
outsb
fs
out
pop
dec
jo
adc
je
mov
sbb
loopne
pop
imul
cmp
stos
push
or
mov
cmp
sub
loope
mov
add
pusha
mov
mov
cld
mov
xor
movsb
mov
call
jae
xor
call
jae
xor
call
jae
mov
inc
mov
call
adc
jae
jne
stos
jmp
call
sub
jne
call
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
lods
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
sub
mov
popa
ret
insb
mov
add
mov
stos
add
enter
int3
mov
inc
add
mov
add
mov
lea
mov
mov
mov
movb
add
sub
mov
xor
ret
mov
popl
add
push
push
push
push
push
push
lea
mov
push
mov
push
push
pushl
push
mov
add
mov
call
pop
mov
push
push
mov
mov
add
mov
mov
mov
add
mov
mov
add
mov
add
lea
push
push
push
call
pop
pop
add
mov
push
mov
mov
add
sub
mov
mov
mov
call
mov
mov
mov
pop
jmp
add
push
push
push
call
mov
pop
pop
pop
pop
pop
pop
jmp
