imul
call
in
sub
push
push
lea
push
xor
push
mov
add
sbb
ss
int
jmp
jo
insb
in
jne
dec
mov
out
jae
out
cs
es
mov
int
push
call
mov
cmp
je
shlb
inc
push
push
insb
lahf
out
xchg
ret
inc
push
lds
data16
je
dec
enter
lret
in
jnp
cs
inc
push
int
into
arpl
outsl
fldt
jbe
shrl
shlb
shll
call
jg
ds
cmp
pop
mov
js
movsb
movsb
iret
repz
movsl
cmpsb
cmpsl
test
stos
cmp
repz
lods
lods
scas
scas
repz
repz
mov
mov
fnstcw
iret
mov
mov
xchg
mov
xor
mov
mov
repz
idivb
loope
jmp
lea
push
push
cld
push
call
pushl
dec
push
jo
in
jle
clc
push
mov
sbb
cld
dec
dec
cmp
push
fcmovu
movsb
jbe
lea
pushl
and
popa
add
rcrb
inc
add
sti
fisttpl
jb
jmp
mov
imul
add
lea
movsl
add
mov
or
pop
pop
pop
leave
ret
pop
imul
add
inc
mov
add
mov
push
fwait
int
lds
out
gs
jb
shrl
xor
xor
repz
ds
cmp
testb
loop
sahf
data16
jecxz
push
in
in
out
movsb
fnstcw
ljmp
je
lea
inc
gs
hlt
pop
cmp
mov
or
or
add
inc
imul
push
mov
sarb
mov
mov
roll
ret
ficoms
sti
add
xor
and
push
mov
mov
pop
lahf
loopne
aaa
mov
xor
cmp
xor
mov
jge
sub
data16
mov
incb
jp
cmp
adc
in
jge
mov
push
push
adc
clc
sbb
rol
adc
pop
int3
sbb
je
mov
out
ds
das
mov
and
int3
in
vpaddsb
cld
jp
pop
add
adc
addr16
data16
repz
repz
fcomp
fcmovu
add
cmp
shlb
jp
sub
adc
fs
imul
sub
jb
lcall
js
jns
dec
repz
jp
inc
jnp
aaa
es
sarb
cmpsl
adc
jl
int
inc
xorl
fwait
int
mov
inc
xchg
push
mov
inc
stos
add
mov
test
push
cs
xchg
adc
mov
cmc
jns
nop
push
adc
popa
xchg
jbe
jns
xchg
gs
xchg
xchg
xchg
jge
negl
out
fwait
inc
outsb
pushf
popf
insb
fstps
mov
sahf
gs
shrb
push
imulb
out
enter
out
jae
int3
je
mov
imul
jo
rcrb
andl
sahf
scas
iret
repz
imul
jae
mov
mov
jne
in
xor
cmpsl
mov
in
push
inc
fcompl
mov
insb
dec
or
add
shrb
push
data16
or
dec
jns
adc
push
jne
adc
xchg
cmpsl
repnz
pop
addr16
gs
sahf
lret
inc
das
pusha
push
sub
fs
xlat
pop
fs
call
lea
mov
mov
mov
push
xor
add
insl
outsb
outsl
add
mov
addl
subb
inc
addb
aas
cmp
pusha
jl
les
in
in
addl
rcl
pop
popf
pop
jo
jmp
sbb
fistps
mov
lret
push
xchg
repz
je
dec
push
mov
repz
cld
add
cmp
jg
or
jl
or
das
popa
sbb
add
xor
pop
sbb
mov
mov
push
vmread
insl
mov
push
mov
movsb
push
lret
decl
mov
in
imul
loope
stos
stos
ss
loopne
xchg
adc
test
sti
add
cmp
in
cmp
fstpl
ret
mov
lock
or
sub
je
mov
dec
push
insb
outsl
imul
das
insl
popa
jne
adc
je
sarl
adc
insb
addr16
or
jge
add
inc
push
jne
popa
outsb
addr16
sbb
popa
outsb
jne
clc
lds
lret
sbb
pop
ficomps
pop
insl
subb
push
xor
cmp
js
fidivrl
pop
repz
je
sbb
add
addr16
adc
or
or
add
pop
mov
sub
jo
rcr
into
sbb
xor
pop
dec
cmp
or
push
push
in
xchg
ja
sbb
nop
incl
push
mov
pop
jmp
outsb
cli
test
fsts
add
out
push
adc
pushf
fcmovu
and
loopne
inc
mov
sahf
je
data16
adc
js
cmp
loopne
ds
sub
dec
test
je
push
jg
or
sbb
lods
xorl
push
or
sbb
pop
push
pusha
pandn
pop
sbb
sub
ljmp
and
sub
fiaddl
sbb
push
popa
pusha
sbb
or
and
decb
and
mov
decb
rorl
xor
cmp
cmp
dec
imul
cmp
addr16
push
ja,pt
cmp
sysenter
dec
sti
mov
inc
push
inc
adc
sarb
inc
jmp
sub
dec
or
dec
outsb
and
pop
push
dec
and
xor
gs
insb
outsl
jb
dec
shll
shll
push
data16
dec
popa
imul
jmp
aad
mov
imul
cmpsl
cltd
je
mov
mov
mov
movsb
xor
xor
mov
stos
cmp
and
and
or
and
or
test
es
xchg
out
inc
daa
sub
leave
dec
repz
sub
inc
push
icebp
mov
jns
lcall
xor
lcall
fwait
int
fildl
in
inc
out
inc
out
push
and
imul
mov
add
adc
testl
int
cmp
sub
or
or
stc
sbb
or
test
insb
rcpps
sub
aaa
adc
cmpsl
cmp
xor
movlhps
pop
push
sbb
dec
sbb
ret
sbb
mov
gs
lcall
pusha
or
mov
mov
lds
push
mov
mov
lcall
cmp
repz
xchg
xchg
cwtl
cltd
dec
cs
mov
lcall
xor
je
sub
fs
push
sub
nop
call
call
bound
imul
mov
bound
sbb
lcall
mov
insl
sub
imul
fnstenv
dec
mov
fisubl
jb
fstp
cs
mov
insb
fbld
loope
loop
sbb
push
rorb
cmpsb
inc
push
jo
outsb
push
dec
shll
gs
pop
inc
cmp
xchg
cmp
out
mov
jae
jb
mov
popa
insb
mov
jne
jns
jb
js
popf
push
sbb
fs
rsqrtps
add
xor
push
pop
push
and
fwait
popa
push
leave
push
pusha
arpl
stos
flds
or
shrl
addr16
outsl
pop
mov
xor
int
pop
lock
loopnew
mov
xor
js
add
xor
jo
je
push
sbbl
mov
push
mov
xor
add
shlb
xor
mov
psllw
push
dec
push
hlt
and
insl
mov
or
clc
jne
jle
dec
jae
int3
mov
mov
xchg
jmp
lcall
movsb
and
ret
mov
push
sbb
test
ret
lock
lret
ljmp
movsb
mov
lea
cmp
cld
adc
sar
push
add
gs
inc
mov
adc
xchg
test
pusha
mov
xor
cmp
xor
adc
pop
scas
data16
sub
shl
push
test
jne
outsl
xor
popa
mov
sbb
loope
push
cs
jns
xchg
or
sub
loopne
mov
std
pop
lahf
pop
dec
xchg
in
lcall
xor
pop
sub
push
sti
xor
sti
mov
inc
pushf
clc
and
cmp
mov
out
cmp
nopl
aam
dec
jnp
mov
adc
or
fmull
rclb
into
movsb
cltd
icebp
imul
push
mov
add
push
cwtl
outsb
hlt
push
lret
test
add
idiv
ja
cmpl
sub
add
inc
ret
push
mov
faddl
push
movsb
cs
push
cmp
cmpsl
scas
imul
sti
inc
call
loop
mov
pushf
cmp
out
imul
jge
icebp
in
jb
dec
dec
cmpw
jne
push
es
sbb
pop
jne
jle
pop
das
imul
aam
mov
push
ja
ficoml
adc
jbe
adc
stos
loopne
test
addb
mov
cmp
out
push
call
jo
and
test
jne
and
jns
rcr
mov
xor
pop
stos
jo
arpl
decb
stos
jne
test
cmp
into
lock
pop
repnz
repz
dec
shll
stc
cli
push
cmpsb
add
gs
shll
loopne
gs
test
add
dec
shll
out
mov
add
mov
dec
inc
mov
xor
pop
test
rorb
cmp
iret
clc
sbb
sub
or
or
bound
les
das
sub
sbb
sbb
sbb
aas
insb
xor
xchg
xor
mov
push
sub
aad
test
push
ret
rcrl
into
cmc
std
sbb
lock
hlt
or
bound
stos
cmp
push
fnsave
mov
mov
stc
jne
popa
jmp
push
xchg
outsl
mov
pusha
lods
sti
insb
lea
push
push
in
stc
in
stc
aas
cmp
ja
test
mov
mov
lret
insl
adc
xchg
jnp
rolb
stc
clc
sub
cld
lock
in
idivb
jmp
stos
mov
ret
mov
push
inc
je
push
fs
lcall
test
sarb
dec
mov
or
lea
jnp
aad
and
popa
in
or
push
nop
test
cmc
push
add
aaa
xlat
push
cmp
xor
adcl
dec
push
fs
out
sahf
and
je
jo
jecxz
sahf
push
outsb
fs
imul
jne
pop
repnz
pop
hlt
repz
fs
js
mov
fdivp
loopne
jne
arpl
mov
into
sub
loopne
je
xchg
jnp
adc
shll
popa
xor
pushf
repnz
push
fdiv
shrl
cli
sti
push
mov
push
stos
mov
jne
sbb
push
add
or
data16
jns
dec
adc
mov
jle
mov
mov
int3
icebp
mov
clc
sbb
je
push
paddw
xchg
adc
pop
adc
fiaddl
pop
push
pop
js
mov
je
mov
xor
setno
adc
fwait
adc
jmp
orb
hlt
push
xor
push
cmp
out
push
dec
dec
dec
xchg
dec
lcall
cld
std
inc
shlb
mov
xor
gs
lods
jb
scas
imul
mov
push
mov
sahf
data16
mov
mov
pushf
mov
test
xor
jo
xor
inc
dec
dec
jo
outsb
andb
jno
imul
jae
test
xchg
cmpsl
jge
out
xchg
xchg
cwtl
push
jl
sahf
out
lahf
lcall
lahf
insb
lahf
out
mov
xchg
movsb
js
push
shll
inc
ret
xchg
pop
mov
push
fs
gs
cmpsb
imul
lcall
inc
shll
je
js
imul
cmp
movsb
outsb
arpl
mov
addr16
fsub
rcr
sbb
dec
xchg
mov
aam
dec
jae
mov
cmp
pop
cmp
aas
ret
test
les
fiaddl
shll
dec
sarl
mov
add
rcl
fsubs
dec
dec
rcr
in
icebp
aas
movb
xor
call
mov
cmp
cwtl
mov
xchg
ljmp
xorb
imul
cmc
jecxz
imul
dec
or
std
ljmp
dec
loopne
shlb
cmpb
scas
pusha
aaa
xlat
lea
add
and
leave
or
inc
jl
sub
jmp
bound
popf
cmp
jmp
pop
push
and
rorl
fmul
or
lret
mov
mov
idiv
xchg
cmp
cmp
je
xchg
push
sahf
arpl
jl
jle
add
pop
inc
cmp
jl
push
and
lock
sub
inc
lea
push
cli
mov
adc
mov
enter
ja
pop
stos
scas
fisubrl
sbb
in
pushf
or
or
push
push
xor
je
push
xchg
mov
jp
je
sbb
pop
mov
push
jae
loopne
fcompl
lods
mov
xchg
add
rol
bound
incb
lret
jl
sbb
or
mov
sbb
push
movsl
xor
cmpsl
mov
pushl
push
adc
mov
adc
xchg
sbb
inc
push
xor
adcb
or
dec
push
inc
cmp
adc
cmp
outsb
and
nop
xor
js
fwait
ja
out
push
pushf
pop
mov
pop
pop
jbe
jo
add
outsb
dec
dec
shll
cmpsb
jmp
or
lcall
popa
push
dec
imul
imul
xchg
push
xor
xchg
gs
inc
jb
xchg
cmpsb
imul
sarl
js
shll
aad
out
sahf
neg
xlat
xor
fcmovu
jns
jnp
fidivs
lea
mov
pop
bound
push
xor
push
addl
shll
pop
pop
sbb
xor
xor
xor
pop
imul
push
push
pop
imul
inc
gs
addr16
bound
jl
lret
cmpsb
imul
mov
add
adc
push
or
sbb
addb
push
imul
movsb
sbb
adc
test
fisubrs
sub
mov
jns
sub
rorb
push
loopne
mov
xchg
xor
and
push
push
aaa
decb
push
xor
jmp
xor
in
and
loopne
mov
adc
ret
jge
or
pop
cmpsl
sarl
jne
add
mov
dec
mov
iret
repz
cld
std
call
or
pop
push
lea
cmpsl
push
ror
sbb
jl
int3
jle
add
fdivs
mov
or
sbb
aas
daa
insl
cs
or
jb
das
mov
les
jl
xchg
or
mov
pop
pusha
jmp
mov
mov
fidivrs
insl
cmp
push
mov
xor
pop
je
cmp
je
inc
shr
jne
add
subl
std
movb
loope
scas
les
or
push
adc
jg
lret
and
jae
xor
mov
mov
mov
divb
or
mov
cmp
jbe
mov
nop
pop
mov
mov
cmp
scas
rolb
or
cli
jne
push
jmp
hlt
in
nop
push
arpl
and
inc
and
dec
shrl
gs
jb
jne
mov
or
enter
and
outsb
jmp
sbb
xor
mov
dec
mov
sub
test
push
adc
in
or
pop
jne
and
inc
ja
adc
pop
cltd
nop
mov
cmpsl
outsb
push
jne
xchg
cmpl
xlat
rcrl
xor
repz
inc
cmp
push
lcall
jnp
imul
mov
lret
js
fnstcw
push
inc
adc
fldl
mov
inc
mov
xchg
stc
add
add
push
std
mov
mov
add
xor
cmp
and
or
int3
gs
push
jno
add
or
push
push
inc
jb
or
dec
xor
bound
or
dec
pop
sbb
or
push
push
leave
jne
out
sub
ret
les
sbb
or
ljmp
std
add
sub
jl
aas
pop
cmp
dec
mov
imul
cmp
xor
xor
mov
mov
xor
jns
cmpsl
ret
repz
enter
lret
int3
sahf
data16
into
iret
cmp
shl
mov
aam
aad
xor
lahf
out
sahf
xlat
fcomp
fcmovu
fdivl
imul
mov
loope
mov
out
jecxz
xor
js
out
jae
jmp
jns
cmpsb
sahf
cmp
repz
jae
ss
cmc
jae
loopne
sahf
div
clc
pushf
stc
xor
stos
aad
and
jecxz
cmp
jecxz
call
dec
fs
je
inc
rolb
add
test
push
addl
xchg
xor
aad
and
test
inc
mov
roll
adc
fwait
jl
and
das
and
in
sahf
dec
pop
jg
std
es
std
or
daa
dec
mov
fcmovnu
jne
cli
aas
scas
push
cwtl
sbb
std
cmp
jne
mov
das
push
lea
js
lods
inc
fsub
repnz
mov
or
add
shll
jae
xor
lea
dec
cmp
aad
lock
aas
xor
in
pop
rorl
je
cmp
pop
popf
xorl
lea
xor
or
ja
faddl
mov
enter
mov
je
push
out
std
lock
icebp
repnz
out
repz
or
test
jne
cli
stc
and
outsb
xor
xor
fsubl
arpl
in
popa
lret
insb
fistl
xchg
jb
outsl
xchg
jo
js
cmpsl
xchg
xchg
pushw
cwtl
cltd
fcomps
fwait
pushf
popf
sahf
lahf
ret
lods
aam
mov
js
scas
inc
lea
xchg
push
push
push
inc
test
je
aam
divl
lods
scas
push
negl
mov
mov
ss
hlt
mov
je
xor
mov
in
fs
dec
fs
shll
dec
jo
dec
shll
gs
or
xor
mov
cwtl
movsb
imul
les
push
mov
jb
jns
data16
xchg
xlat
fcomp
fimull
pushf
or
in
fsubrl
push
and
jl
inc
sub
inc
nop
mov
jb
repnz
sahf
out
out
pop
ret
es
aam
mov
clc
rclb
and
jmp
in
pop
xchg
sub
ds
jmp
adc
jecxz
push
jb
in
andl
or
push
mov
pop
inc
dec
mov
or
cmp
mov
into
cmp
std
mov
into
je
cmp
jne
mov
mov
mov
mov
movsb
jb
add
mov
push
or
sbb
add
pop
mov
cmp
push
lret
or
imul
insl
mov
in
subb
in
push
sbb
pop
sbb
dec
xor
gs
gs
xor
cmpsb
imul
inc
mov
mov
push
outsl
insb
fidivrl
fsubrl
sbb
dec
mov
push
or
ljmp
pop
sar
lock
js
sub
je
daa
jbe
mov
push
loopne
lods
inc
cmp
mov
mov
mov
pop
push
maxps
add
mov
add
cmp
xor
or
jb
lret
sub
jo
mov
xor
fsubs
mov
sub
shlb
arpl
cs
push
cmpsb
fs
pop
sti
and
or
jmp
test
or
push
sub
pusha
push
mov
pop
add
shr
sbb
test
fcomps
adc
mov
sub
imul
adc
scas
sbb
mov
mov
push
jmp
in
mov
mov
mov
cwtl
cmp
test
mov
or
faddl
push
jle
mov
loope
dec
repnz
pop
bnd
fwait
in
jnp
push
movl
inc
lahf
mov
xor
fs
sbb
add
ljmp
cmp
lock
jge
mov
mov
push
ss
add
or
xor
mov
xchg
mov
and
es
in
dec
push
sub
adc
mov
ja
jmp
lods
shrb
mov
sar
inc
lock
ret
ret
les
stc
sahf
cmpsl
mov
rcll
jp
inc
test
in
cmp
in
push
in
test
jl
out
lea
sub
icebp
icebp
daa
dec
sub
stos
or
xchg
xchg
or
mov
loope
sahf
loop
es
call
or
mov
push
clc
or
mov
mov
mov
cmp
int3
int3
hlt
push
jge
fwait
xchg
cmc
inc
notb
mov
clc
push
add
add
jle
push
push
pop
rclb
cmpsb
add
mov
inc
fs
mov
sub
rolb
rcll
add
dec
mov
mov
daa
aam
aad
or
add
addb
or
add
movsl
clc
xor
jns,pn
push
push
addr16
and
and
push
mov
sbb
mov
pop
pop
pop
mov
dec
imul
dec
pop
jb
jl
and
push
mov
lock
pop
inc
nop
or
or
pop
push
lods
push
out
jae
into
inc
aaa
fdivrl
add
sti
inc
mov
or
aas
jb
xchg
cmpsl
test
ss
test
leave
ss
adcl
sbbl
inc
and
jb
aam
in
xchg
add
enter
mov
xchg
pop
daa
cmp
mov
pop
cmp
nop
adc
nop
arpl
lret
scas
clc
pop
and
in
mov
lods
ret
pusha
mov
pushl
ss
add
add
xor
pusha
ja
cmp
ja
incl
jne
xor
mov
cmp
jne
push
inc
adc
shr
mov
push
add
sbb
js
sbb
xor
mov
mov
xchg
dec
lea
mov
sbb
into
jb
jns
psrad
or
sub
push
jg
in
jne
call
jge
fisttpl
test
adc
cmp
pop
ja
in
mov
add
xor
add
lock
push
fstp
inc
fcomps
or
out
sbb
xor
test
bound
movsbl
aas
jnp
sti
cmp
sbbl
pop
jb
ja
psubd
loopne
push
inc
jbe
jl
inc
cwtl
adc
lcall
lahf
loope
cmp
adc
push
add
lcall
push
sbb
dec
cld
lock
pop
mov
inc
mov
push
and
test
movsb
les
lods
push
mov
insb
xlat
xchg
inc
push
mov
and
xlat
jnp
xchg
xor
fs
pop
sbb
add
aas
out
sahf
add
popa
je
insb
sbb
jae
outsl
jl
imul
xor
cmpsb
pop
xlat
fdivs
inc
fnstenv
fcmovu
jbe
fwait
push
mov
xchg
fldl
cmp
mov
arpl
sahf
pop
xor
dec
cwtl
cmp
cmpsb
and
ljmp
rolb
push
imul
lahf
pop
hlt
dec
push
cmc
jo
imull
dec
rcll
jb
arpl
daa
dec
shll
dec
push
gs
shll
insl
imul
ljmp
jns
out
lock
inc
xchg
js
fldt
sbb
fcompl
jnp
mov
into
xlat
lahf
push
xchg
cwtl
add
push
mov
rol
cmp
push
test
add
xor
or
sub
out
test
xchg
cli
popa
jl
or
or
jl
cmp
lcall
xchg
pop
jp
or
dec
and
sar
dec
push
stc
lahf
or
jne
lea
insl
xlat
out
mov
or
dec
je
sbb
and
movsl
cld
cmpsb
cs
add
add
push
cmpsb
xor
pop
daa
bound
cmp
xor
adc
cld
jno
pop
cmp
pusha
pop
add
add
xor
mov
pop
or
addr16
push
in
jae
call
into
fcmovb
andb
add
add
jg
or
out
and
jg
jp
pusha
stc
loopne
je
push
sub
data16
jb
fadds
push
das
pop
xor
jge
jae
adc
push
push
jnp
sub
push
sbb
inc
das
addr16
subb
mov
jns
loopne
adc
loope
inc
and
rcr
int3
add
hlt
or
negb
dec
cmp
mov
push
aaa
pop
mov
or
mov
jbe
or
loopne
sahf
movl
out
shll
lahf
addr16
pop
clc
aas
cld
inc
jp
mov
push
push
lcall
mov
das
lock
jo
push
and
sub
jbe
or
sub
neg
pop
fdivs
push
adc
or
push
pop
inc
ja
iret
push
pop
adc
push
aas
add
int
ja
add
pusha
mov
mov
pop
cmp
jbe
mov
sub
outsb
add
jae
sub
add
pxor
or
jne
xor
add
popa
pop
aas
ja
or
roll
pop
les
add
add
imul
adc
adc
lea
cld
pop
jb
add
sbbb
pop
mov
jnp
and
lahf
pop
mov
clc
add
cmp
jl
push
mov
jb
and
repz
mov
loope
dec
imul
lock
sbb
xchg
testb
punpcklbw
sarb
adc
les
push
mov
outsl
pop
loope
enter
pop
cmp
jne
sbb
xor
jmp
mov
test
add
push
test
or
insl
in
cs
clc
mov
sahf
mov
jg
inc
and
adc
roll
and
mov
pusha
adc
mov
mov
cmpxchg
dec
das
adc
jge
je
int
cltd
push
enter
push
push
push
push
cmp
inc
bound
rcrb
inc
lock
cld
xchg
xlat
sti
jge
xchg
xor
cld
cmp
ja
pop
neg
push
sub
cmp
add
xor
hlt
push
adc
lcall
jp
sar
lods
hlt
mov
test
fistpll
add
inc
xorb
div
xor
push
inc
dec
xchg
shrb
lock
outsl
cltd
xor
inc
inc
xchg
dec
mov
out
pop
inc
hlt
inc
pop
inc
cmp
jl
fldenv
lock
fdivs
dec
lock
mov
push
pop
push
and
enter
lods
ret
push
push
cmp
mov
pop
xor
and
jbe
sbb
mov
je
jl
xor
xchg
push
pop
clc
or
and
mov
mov
sbb
mov
adc
xchg
mov
adc
rep
popf
fisubrl
dec
pop
incl
ret
inc
cmp
jl
rol
icebp
pop
mov
call
js
nop
adc
enter
push
adc
fistl
or
dec
insb
xchg
adc
shlb
push
imul
mov
and
data16
fisubrl
jbe
int3
push
add
sbb
push
push
outsb
xchg
rcll
jb
into
lea
testl
out
push
mov
incb
push
popa
adcb
movb
paddd
sub
sub
mov
movb
mov
add
sti
push
push
pop
popf
outsb
pop
sbb
cmp
in
mov
sub
push
or
js
hlt
sbb
stos
xor
cltd
cmc
fwait
xor
daa
mov
push
push
sbb
lret
int3
pop
add
daa
jle
lahf
out
rorb
cmpl
je
aaa
or
mov
xchg
test
add
rorl
lods
push
jne
mov
sbbb
rcll
je
jp
inc
pusha
push
mov
or
pop
data16
movsl
cld
pushf
test
call
ss
ret
in
insl
das
push
fs
jo
addr16
push
sti
or
lahf
loop
add
je
ret
xchg
out
mov
pop
ja
in
xor
xchg
inc
and
cmp
adc
adc
adc
das
in
mov
add
ds
or
pop
push
rolb
sbb
cmp
and
nop
mov
and
rolb
push
andb
shll
insb
jmp
aam
sbb
fisttpll
out
adc
jecxz
fwait
ret
pop
out
dec
and
mov
les
push
mov
mov
or
pusha
add
xor
fbld
mov
adc
sbb
or
sahf
lret
jmp
imul
filds
rclb
push
jp
and
inc
and
push
pop
cmp
push
push
push
push
pop
rolb
es
or
push
dec
cld
add
pop
inc
rorl
sbb
mov
or
fdivrs
xchg
jp
sbb
xor
add
outsb
test
jne
ret
cmpw
push
mov
cmp
lret
push
inc
dec
add
lock
in
adc
adc
mov
addr16
in
push
loop
divl
adc
pop
cmp
dec
fsubr
add
xor
push
mov
mov
cmp
movb
cmp
jb
pop
sbb
or
loop
or
je
decl
jmp
out
jmp
mov
adc
jne
mov
add
add
add
test
fadd
inc
insb
ret
add
mov
mov
mov
mov
xor
ja
aaa
subl
fcompl
mov
adc
adc
rorb
dec
xchg
je
mov
xor
or
jb
shlb
mov
jo
lock
icebp
shlb
je
shll
dec
jo
jge
dec
gs
inc
int
insb
test
rorb
adc
sbb
jne
mov
dec
outsb
data16
and
sub
outsb
je
xor
xor
gs
popa
or
and
inc
insb
push
dec
dec
cwtl
in
mov
cmpsb
imul
adc
je
insb
xor
inc
shrl
test
push
and
popa
outsb
fs
xchg
push
imul
imul
faddl
imul
cmp
mov
rcll
add
test
in
in
push
jbe
add
push
jns
jl
mov
je
test
inc
add
mov
lock
rcrb
sbb
insb
dec
ret
adc
hlt
add
imul
std
push
pop
pop
lea
jb
movsbl
cmp
je
dec
jmp
mov
pop
dec
or
pop
sarb
sti
call
mov
leave
je
mov
inc
inc
jmp
andb
inc
dec
outsl
xchg
test
shlb
pop
mov
push
mov
testl
inc
jp
cmp
pop
jne
cmpb
dec
inc
sub
jmp
or
add
sub
jmp
xlat
in
jo
push
pop
mov
dec
push
add
lret
subl
clc
jge
movsl
shr
cmp
lcall
push
incl
decb
xor
inc
jp
mov
adc
jmp
add
pop
cld
test
mov
je
ret
adc
inc
jmp
push
mov
mov
cmp
sbb
test
jne
pop
pop
jo
cmp
push
lret
ljmp
mov
mov
ret
and
je
idivl
push
jae
mov
pop
clc
das
pop
push
adc
sarl
ret
mov
cwtl
aaa
dec
in
rol
and
iret
cmp
shl
pop
sbb
movsb
cld
fwait
pusha
les
jo
mov
jg
sbb
test
fadds
cmp
imul
sbb
add
movzwl
mov
loope
xor
mov
add
in
add
cmp
jae
cmp
jb
mov
mov
push
mov
sub
pop
mov
inc
add
aad
orl
jg
sbb
cltd
mov
andb
js
jns
js
cmp
pop
mov
xchg
xchg
js
and
fisttpl
ret
fwait
inc
xor
or
push
ror
mov
mov
dec
jmp
popf
xchg
adc
fnsave
mov
xor
xor
pusha
repnz
pop
in
push
mov
incl
mov
add
imull
movsb
in
call
ja
test
jecxz
je
cmp
adc
or
push
lret
mov
sub
mov
in
mov
add
in
cmp
or
insb
pusha
outsb
movsl
test
and
and
xchg
cmp
int
mov
or
cs
dec
inc
call
movsl
mov
nop
adc
jecxz
mov
mov
in
inc
decl
jne
je
xor
or
gs
mov
imul
dec
mov
add
insl
fs
or
into
sbb
cmpsb
mov
xchg
lock
mov
inc
clc
insb
xor
mov
push
inc
cs
adc
imul
dec
dec
movsb
inc
jg
incl
mov
xlat
jo
movsl
imul
push
add
sbb
push
fnstcw
mov
mov
cmp
sbb
adc
sbb
cmpsl
jb
sub
pop
adc
sub
mov
push
sarb
push
mov
sbb
testl
mov
sub
push
xor
mov
movsl
push
negb
das
and
mov
mov
mov
push
mov
nop
imul
outsl
mov
push
pop
sbb
in
mov
arpl
test
std
mov
and
pop
ret
mov
and
into
mov
je
out
or
add
xor
enter
icebp
sarl
and
mov
daa
xchg
movl
inc
or
inc
repz
pop
pop
xorb
push
push
add
aaa
jbe
hlt
dec
shlb
mov
mov
pop
push
sub
dec
fcmovnu
sti
sbb
add
pop
push
pop
push
push
add
cmp
jne
push
cmp
push
rorl
add
out
in
mov
bound
push
pushf
pushf
clc
frndint
push
add
pop
mov
lret
popa
jmp
push
sub
pushl
pop
pusha
aas
xchg
add
sbb
jl
fsubrs
sub
incb
mov
add
pop
mov
xor
push
pop
stos
jae
push
pop
sbb
jp
cld
movsbl
jns
jbe
dec
mov
pop
in
sti
sub
fmull
je,pn
cmp
jge
call
sbb
andb
add
mov
lock
daa
add
jnp
pusha
shll
dec
push
mov
push
mov
enter
adc
pop
cmc
or
inc
push
scas
fs
jmp
idiv
mov
mov
cmpb
sarb
sub
inc
inc
mov
sbbl
xor
and
jbe
andb
pop
insb
sub
and
ljmp
imulb
sti
pop
jb
xlat
pop
jae
out
mov
cmpsb
in
dec
or
ret
in
sbb
test
rclb
add
mov
hlt
push
push
clc
pop
lock
fadds
es
push
mov
rorl
xor
mov
in
sub
inc
sub
pop
sbb
dec
add
push
add
call
and
je
mov
mov
movw
hlt
data16
ret
inc
lret
sarl
les
pop
mov
mov
mov
loopne,pn
ss
js
cmpb
std
rcll
inc
mov
cmpl
push
fsubrl
xchg
or
insb
cwtl
mov
movsl
pop
jno
subl
lods
stc
mov
fistpl
cmpl
and
js
add
mov
xchg
add
add
std
xchg
or
lret
or
jb
xchg
pop
packsswb
lcall
clc
add
pop
clc
js
mov
dec
pop
cmpb
fsubs
mov
aam
jnp
sub
testb
and
push
loop
push
shrb
add
add
frstor
lea
push
push
xchg
pop
test
push
push
xchg
shrb
pop
int
out
andl
or
aas
adc
call
test
or
or
rcll
add
adc
jne
cltd
subb
mov
mov
sbb
mov
and
aam
mov
out
in
repz
das
test
push
into
jmp
movsb
or
xor
test
mov
jg
xchg
loopne
fdivrl
rorb
pop
sbb
repz
sub
sbbl
dec
or
imul
cmp
cmpsb
imul
and
ret
test
jmp
mov
ret
push
lods
adc
lcall
in
jbe
lods
jbe
sub
jp
inc
mov
inc
and
jmp
or
es
aaa
in
leave
clc
add
xor
jns
mov
xor
sbb
test
mov
xor
stos
fiadds
jne
cmp
je
and
mov
aam
adc
adc
xchg
cmpsb
jb
hlt
sbb
mov
xor
inc
or
rcll
test
adc
or
lea
mov
inc
and
ret
mov
push
push
ret
int3
in
fnstcw
add
pusha
addb
popf
int3
push
cmp
pop
orb
adc
jmp
divb
jae
mov
les
mov
mov
mov
mov
pop
or
dec
dec
jmp
push
mov
jmp
mov
fsubr
dec
daa
bound
add
mov
add
pop
push
pop
pop
cmp
cmp
popf
testb
pop
aas
push
push
pop
pop
inc
repz
movsl
mov
pop
inc
jl
sbbb
pop
ljmp
rolb
xchg
sbb
adc
push
or
bound
subb
jbe
call
add
ljmp
ja
jmp
pop
out
out
out
fcmovnu
mov
out
add
pop
repnz
add
lock
dec
iret
imul
mov
repz
lret
imul
fwait
cmpsl
mov
in
outsb
fstl
mov
add
insl
dec
adc
mov
and
jbe
das
mov
jecxz
inc
fucom
daa
arpl
insl
sub
fnstcw
ja
rcr
popa
aas
fdivl
clc
daa
sbb
popf
and
outsb
pop
cmpl
ret
mov
xchg
dec
fdivrl
les
fbstp
clc
std
loope
mov
mov
shll
pop
sbb
subl
fildll
fnsave
imul
insb
repz
je
out
jb
pop
outsb
lahf
addr16
filds
int
daa
jb
pop
jnp
in
aas
std
add
dec
fs
out
divb
out
fistl
mov
sbbl
ja
pop
push
push
add
add
or
mov
jnp
es
sub
add
mov
inc
push
mov
in
lea
push
mov
inc
aas
mov
mov
push
emms
neg
scas
mov
dec
stc
mov
dec
jge
mov
jbe
pop
lcall
jb
inc
insl
add
push
das
adc
dec
call
out
push
das
inc
xor
sbb
mov
lods
popf
popf
cmp
xchg
in
add
dec
lcall
push
ja
jg
mov
out
out
inc
out
hlt
scas
sbb
adc
or
pop
in
and
daa
pop
aas
mov
adc
mov
filds
popf
outsl
aaa
cmp
das
dec
out
mov
xchg
cmpsl
sahf
ret
inc
fistl
mov
pop
pop
out
xor
xor
ret
and
pop
sti
dec
xor
out
les
out
dec
xor
dec
in
ja
mov
je
jge
js
xor
mov
fidivs
xchg
rcr
xchg
loope
subl
jmp
and
scas
mov
sti
mov
enter
pop
out
add
and
fcmovnbe
add
stos
push
pop
mov
stos
es
mov
sahf
and
sub
mov
sub
es
call
scas
cmp
ret
push
and
push
add
pusha
in
movsl
testl
sub
pop
jbe
imul
loope
lret
iret
dec
les
add
mov
sub
aas
fistps
jo
loopne
mov
fisubrs
mov
and
pop
cmpl
dec
add
lock
mov
cmp
dec
cmp
sahf
sub
cmp
fs
insb
mov
out
shrl
out
lahf
jmp
add
jge
ja
dec
loope
add
lcall
xor
fildll
hlt
sti
xor
pop
xlat
int3
aam
es
dec
cld
es
in
cld
jnp
roll
lret
inc
out
popf
xchg
rcr
xchg
aaa
inc
xchg
or
and
fisubs
ds
mov
jle
jmp
dec
mov
leave
in
jmp
sub
test
in
xchg
loope
outsb
mov
fdivr
mov
pop
add
sar
js
dec
or
mov
or
cs
lahf
repnz
push
and
or
int
mov
inc
gs
pusha
sbb
sti
mov
imul
insb
je
gs
add
das
js
call
xor
pop
rol
iret
mov
mov
into
icebp
fsub
mov
mov
daa
lret
jle
push
dec
cmp
das
xchg
or
ret
out
inc
clc
insl
jns
gs
inc
pop
push
je
insl
outsl
outsb
das
push
push
dec
pop
cld
testl
jo
ja
dec
adc
insb
pop
pop
sar
xor
cs
insb
jnp
push
dec
outsl
fs
gs
imul
dec
popa
insl
gs
jb
popa
je
push
push
sbb
insb
outsl
sahf
dec
popa
pop
mov
jl
push
mov
imul
loopne
lods
in
push
or
je
outsb
mul
mov
sbb
dec
or
push
pop
mov
popa
add
sub
clc
jp
insb
popa
and
xor
inc
arpl
jo
inc
outsb
arpl
cltd
sbb
addr16
and
in
inc
inc
lods
popa
jne
mov
sbb
mov
sub
imul
inc
pop
rep
adc
imul
cwtl
pop
jo
cmp
imul
mov
cs
jae
outsb
sahf
insb
ds
outsl
mov
sub
jb
pop
jo
ja
pop
orl
cmp
das
sub
xor
xor
jg
pusha
in
xor
cli
cmp
pop
ja
sub
jb
jo
pusha
rcrb
gs
test
inc
inc
scas
nop
push
push
add
add
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
mov
out
int
pusha
add
outsl
jae
dec
popa
outsb
fs
gs
gs
jne
jb
imulb
ljmp
push
jb
arpl
jae
sub
gs
imul
fcmovu
jbe
dec
outsl
popa
fs
sbb
je
inc
imul
jns
gs
jo
popa
je
sbb
je
jb
jne
in
mov
push
push
imul
dec
jne
je
inc
jns
fld
pushf
fldenv
push
imul
push
jb
popa
adc
sub
xor
push
outsl
sbb
jb
dec
mov
inc
insb
mov
jno
std
popf
fwait
sbb
push
push
fidivs
clc
xor
imul
lods
cmp
dec
sbb
pop
cmpsl
popa
jae
aaa
out
or
jb
jo
loopne
add
je
mov
inc
inc
lods
adc
jbe
add
jae
jbe
data16
sub
insb
inc
daa
loope
movsl
mov
mov
bound
mov
loope
mov
adc
clc
insb
mov
dec
js
outsl
jo
or
bound
jo
jle
ja
mov
gs
jge
jo
pop
push
arpl
jb
jnp
push
insl
enter
out
jo
mov
adc
pminub
fidivrs
or
cltd
movups
je
in
xor
addb
pop
pushf
loop
popa
or
dec
dec
mov
pop
mov
insl
arpl
imul
jbe
jp
outsl
pop
ja
pop
jbe
ja
int3
ret
mov
imul
adc
jo
dec
sahf
imul
jne
add
jnp
mov
pop
jl
push
repnz
std
sbbl
inc
js
xchg
call
lahf
sub
aas
xor
inc
push
inc
pop
dec
cmpsl
fnstsw
xor
sbb
cmp
lret
fs
outsb
rclb
pusha
mov
jle
in
mov
pop
fstpt
cmp
popa
push
jecxz
push
clc
loop
sbb
inc
and
ja
cmp
in
insl
jg
ja
repnz
xor
sti
incl
or
jae
pushl
xor
xor
dec
jo
or
adc
push
pop
or
and
sub
lcall
es
mov
sbb
xchg
xor
or
or
pop
sbb
adc
pushl
adc
push
or
adc
adc
or
inc
add
lock
pop
ljmp
or
lock
add
pop
push
add
sub
xor
and
sbb
outsl
call
or
pop
sbb
cmp
movsb
push
pop
adc
lock
adc
add
cmp
adc
xor
adc
sbb
and
push
push
or
pop
or
pop
or
lcall
mov
pop
adc
push
or
lock
movsb
push
or
or
outsl
add
or
push
push
xor
adc
push
sub
or
adc
add
push
or
lods
jge
push
fisubrs
and
adc
addr16
testb
lcall
push
es
pop
sub
fistpll
mov
sbb
or
aas
or
xor
adc
push
adc
sub
xor
in
in
imul
or
or
dec
adc
dec
push
lock
or
and
mov
or
loopne
cmp
or
adc
xor
adc
push
or
mov
daa
pop
sub
sbb
jb
or
pop
push
ss
adc
daa
mov
and
push
and
push
sbb
dec
adc
sbb
ljmp
jg
test
sub
pop
insl
jge
cmp
add
popf
prefetch
es
xchg
scas
or
cmp
je
cmp
fisttpl
jg
and
inc
adc
cs
pop
loope
add
decl
jle
aam
jno
mov
xor
daa
inc
pop
adc
adc
daa
mov
dec
fdivrp
mov
pop
push
adc
inc
pop
jl
pop
inc
sbb
inc
pushf
lock
add
xchg
int
push
xor
inc
push
unpcklps
inc
or
mov
mov
or
lock
adc
inc
mov
dec
add
dec
pop
loopne
and
mov
sbb
daa
dec
or
ja
pop
push
adc
add
fstps
cmp
mov
mov
jge
sub
bound
push
lock
shlb
enter
nop
add
jp
outsl
jne
cmp
xor
sbb
iret
and
cs
add
popa
mulb
out
or
inc
add
dec
dec
sahf
cmpsl
mov
orb
mov
insb
imul
jae
rclb
outsb
inc
cmp
mov
pop
in
mov
dec
inc
add
or
jg
je
aam
xor
add
sub
incl
add
add
add
add
jne
pusha
mov
lea
push
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
popa
xor
ret
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
