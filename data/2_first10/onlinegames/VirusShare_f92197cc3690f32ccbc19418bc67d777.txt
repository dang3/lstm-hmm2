insb
aas
mov
out
and
add
and
and
dec
shll
xchg
test
in
add
sbb
cmp
imul
xor
cmpsb
mov
clc
and
data16
and
sbbl
xorl
jbe
fwait
mov
cmpsl
addb
aas
add
ret
pushl
gs
xor
cs
insb
add
or
ficoml
sbb
push
gs
bound
push
jb
jbe
insb
gs
fcomi
jg
pop
jae
jae
gs
and
inc
inc
add
filds
jo
push
gs
outsl
imul
add
adc
adc
bound
xor
cs
jnp
out
jg
xor
pop
imul
insl
fs
aas
fisttpll
add
je
pop
outsl
arpl
bound
sbb
jle
cmp
push
sbb
xor
daa
push
mov
sub
dec
ja
andl
faddl
out
std
rclb
xor
jl
inc
add
add
or
lds
mov
or
popa
enter
insl
xchg
fcmovne
push
add
outsl
int3
int
pop
into
push
iret
rorb
shll
xor
shll
jbe
jb
aam
aad
xlat
pop
fdivs
mov
fidivl
fisttpl
push
pop
loope
lcall
inc
in
and
add
fwait
scas
out
call
imul
in
pop
in
aaa
lock
repnz
div
clc
gs
stc
dec
pop
cli
sti
js
je
mov
out
ficoms
xlat
sub
mov
pop
adc
aaa
sbb
dec
mov
xor
mov
ljmp
je
push
push
call
mov
jmp
mov
cmp
jne
xor
jmp
popa
insb
sti
arpl
movl
fsin
dec
test
je
sbb
fstpt
imul
jne
push
or
mov
sbb
iret
das
inc
mov
adc
cmp
jne
outsl
clc
fwait
out
mov
or
pop
pop
leave
ret
mov
in
sbb
fnstcw
imul
push
push
imul
pop
cmp
hlt
push
push
pop
loope
xor
clc
add
and
push
push
sbb
js
push
lock
cltd
add
add
push
pop
insb
pop
push
jae
pop
movzwl
push
push
stos
mov
fdivr
lock
cmp
je
push
adc
or
test
sbb
clc
cmp
adc
push
push
sub
lret
insl
add
inc
cmp
je
pop
mov
outsl
loope
sbb
movsl
sbb
ss
mov
jecxz
pop
in
sbb
pop
ret
xchg
sub
xor
inc
mov
ss
xchg
xor
mov
lods
jo
push
push
scas
inc
adc
mov
jge
or
push
adcl
mov
sbb
sbb
mov
cmp
adcl
push
dec
dec
ja
inc
addb
push
sbb
jmp
push
jno
dec
inc
imul
xor
xor
jge
add
mov
mov
and
jo
sub
lods
fnstsw
dec
test
je
adc
call
rorl
icebp
pop
loop
out
negb
dec
in
adc
mov
pop
and
push
add
cs
cmp
cwtl
fstps
adc
aas
jnp
lret
enter
ja
jmp
sbb
icebp
push
cmp
fcom
lds
jno
popa
mov
std
adc
push
fdivr
call
adc
mov
psrld
mov
inc
inc
dec
dec
test
jne
push
in
cmp
pop
jmp
lds
shlb
and
push
jecxz
shl
mov
mov
add
inc
cmpb
inc
fadds
test
add
mov
mov
cld
aad
pop
clc
inc
and
aaa
outsb
push
rcl
jl
sub
pop
adc
daa
push
mov
stc
push
dec
sub
outsl
push
add
adc
xabort
in
les
out
inc
js
lock
mov
ret
in
inc
mov
cmp
subb
pop
or
mov
cwtl
pop
adc
call
rcrl
pop
pop
nop
scas
mov
jp
std
add
xor
arpl
stc
je
or
out
mov
repz
lea
andb
push
pop
lea
jcxz
stos
stos
mov
loopne
adc
idivb
movl
adc
mov
or
fdivrp
maxps
pop
push
sahf
mov
pop
call
mov
cmp
push
xor
lret
cwtl
xor
adc
ficoml
xor
mov
std
adc
int
test
adc
or
pop
mov
pop
pop
pop
pop
mul
fldt
pop
push
cld
pop
jmp
in
in
cmp
or
inc
fisttpll
xor
push
push
std
imul
jb
insb
push
add
je
popa
mov
dec
mov
xor
pop
add
mov
dec
inc
add
pop
pop
mov
daa
or
jne
insb
inc
or
xchg
or
clc
test
ja
mov
mov
int
sahf
in
push
test
add
add
scas
ret
adc
xchg
add
inc
sbb
je
push
hlt
lret
ja
add
in
pop
testl
dec
xchg
leave
pusha
ficomps
mov
icebp
stos
push
xor
add
std
enter
imul
push
mov
iret
cmp
sahf
cld
les
fnstenvs
lods
jb
rclb
outsb
in
pop
fldenv
pop
int
ja
xor
into
iret
push
rorb
mov
insb
rcl
or
mov
xor
cs
xor
dec
mov
js
mov
filds
mov
adc
clc
js
mov
push
add
scas
mov
loope
or
cltd
int
iret
mov
pushl
js
mov
jae
xchg
mov
and
mov
fucompp
mov
fs
outsl
lret
in
mov
stc
jae
pop
sti
insl
jbe
add
xor
cmp
or
clc
cmc
sub
shrb
pop
mov
fsts
insb
icebp
xlat
xor
in
data16
push
movsl
fcomps
in
adc
data16
call
mov
das
and
das
sbb
cld
into
push
dec
sar
or
adc
dec
or
pop
cmp
xor
sub
push
call
mov
sar
fistpll
sbb
int3
push
push
jbe
fldt
stos
jl
call
mov
daa
cmp
shrl
push
loope
out
js
shll
outsl
je
ss
out
and
and
lock
xchg
cmp
and
inc
or
test
xlat
vdivsd
jo
fs
not
insb
cwtl
sub
or
pop
outsl
or
mov
and
aaa
scas
je
adc
xchg
or
fs
mov
jnp
jmp
jne
int3
add
xchg
add
cwtl
pushf
pop
push
cmp
lds
sub
dec
mov
in
sub
mov
or
loope
push
inc
and
add
ret
dec
movsb
inc
in
xchg
sbb
adc
and
and
scas
xchg
loop
adc
adc
and
rorw
dec
inc
dec
dec
and
ja
stc
add
dec
inc
dec
jb
push
dec
addb
fisubrl
inc
outsl
add
push
adc
sbb
addl
adc
dec
add
dec
pop
nop
add
push
pop
ss
mov
inc
clc
add
pop
mov
int
mov
adc
js
outsl
addr16
insl
and
outsb
outsb
lock
in
ljmp
and
and
outsb
and
inc
dec
push
and
fs
clts
ss
xchg
push
sbb
idivl
dec
add
outsb
mov
add
vmaxps
pop
jge
xor
test
xor
jnp
inc
fs
ds
mov
bound
repz
xchg
out
pop
out
call
dec
add
push
mov
add
add
jge
dec
jne
out
loopne
push
and
add
lods
mov
add
jnp
das
add
or
add
mov
fwait
add
add
inc
xchg
in
ja
ja
mov
outsb
and
and
add
or
pop
popf
fildll
bound
mov
sbb
push
add
fs
je
pop
xchg
xchg
xor
loopne
pusha
xchg
lock
push
push
pop
sar
xchg
daa
out
lock
dec
arpl
inc
or
push
je
cwtl
pusha
add
xor
and
and
fldenv
je
jb
insb
outsl
arpl
or
ja
or
or
xchg
bound
and
add
mov
popf
insl
jle
das
cmpsb
or
dec
shll
cmp
cmpsb
imul
inc
lcall
mov
mov
loop
or
sbb
inc
push
pusha
dec
shll
mov
xor
fsubr
cli
or
imul
imul
imul
mov
fmulp
mov
dec
rorl
aas
add
sbb
jle
add
xchg
insb
pop
nop
mov
lock
dec
shll
addl
loopne
xor
xlat
xor
or
adc
sbb
shll
dec
push
jmp
ss
pusha
push
mov
add
mov
mov
fs
dec
cmp
jp
mov
movhps
orb
aad
dec
outsl
jae
xor
iret
dec
shll
jbe
bound
push
xchg
lret
ss
aas
ja
ja
filds
and
je
je
sbb
loope
dec
inc
sub
in
jg
daa
push
gs
fs
sub
dec
je
jo
jne
mov
sbb
outsl
inc
aaa
dec
jo
outsb
push
jb
adc
mov
dec
dec
add
jl
jnp
and
add
lret
addb
add
or
aaa
sbb
sbb
cmpsb
jns
pusha
add
pop
sub
add
push
pop
pusha
mov
inc
add
mov
and
add
add
fistps
lcall
sbb
and
idivl
test
add
ss
and
mov
ja
xchg
xor
aas
mov
aas
add
fsubs
mov
rorl
incl
and
add
sub
inc
push
xchg
adc
ss
inc
sub
test
lea
fs
cmpsb
pop
das
xor
orl
adc
rolb
lds
or
imul
scas
sub
packsswb
je
jne
jb
je
negl
inc
or
push
punpcklbw
sub
add
push
inc
mov
mov
pop
ja
or
push
mov
jae
pop
and
pusha
mov
jo
pop
xor
push
sbb
sarb
or
pop
add
pop
stc
pop
insl
add
pop
cs
add
imul
arpl
popa
insl
xchg
push
dec
inc
push
push
inc
push
inc
dec
adc
incl
jle
data16
imul
push
inc
jne
or
jbe
jb
je
sub
dec
fwait
shl
std
lea
jb
inc
popa
jb
push
aas
dec
ljmp
sub
inc
movsb
jae
aaa
xor
test
and
mov
lret
sbb
inc
push
je
insb
nop
je
fistpll
nop
jns
outsl
and
outsl
push
cmp
je
mov
loopne
jae
popa
dec
push
push
subl
mov
imul
insl
lea
jg
jno
inc
cwtl
cmpsl
fisubrl
je
xor
jle
cmp
outsl
je
push
jns
xchg
and
je
lahf
jne
dec
pop
sub
popa
jne
arpl
sbb
inc
ficoml
mov
push
vmaxss
les
mov
pushf
lea
jmp
test
jge
xor
das
insl
imul
outsl
cs
jae
adc
push
test
gs
arpl
pop
rorb
add
adc
fidivl
mov
xor
xor
xor
outsl
push
pshufw
fcmovnu
imul
or
pop
jecxz
leave
pop
or
addr16
inc
pop
arpl
imul
lods
or
loope
insb
insl
cmc
and
add
pop
jbe
mov
mov
shl
das
lret
pop
into
in
dec
sahf
cmp
std
mov
sarb
or
insb
pop
mov
popa
or
insl
push
shl
add
ret
add
jne
mov
and
fs
fwait
xchg
roll
pusha
or
cmpsl
mov
dec
dec
icebp
cmpsl
ljmp
out
add
scas
inc
mov
lret
dec
cs
jns
jge
jp
jle
in
xchg
pop
lret
pop
adc
adc
nop
clc
pushl
or
sbb
pushf
fstpl
push
add
iret
add
push
push
pusha
and
std
mov
sub
dec
sarl
call
push
push
adc
fisttpl
movb
mov
sub
sub
mov
add
push
std
out
push
push
push
call
dec
cld
lcall
jmp
add
mov
xor
stos
into
test
dec
lock
stc
test
aas
adc
stos
std
jae
mov
add
scas
mov
push
push
and
int
push
push
call
lea
movb
sub
sub
cld
ret
push
add
lea
ja
fiadds
mov
sub
inc
sub
ret
mov
test
push
fwait
push
or
mov
push
mov
xchg
loopne
or
add
adc
addl
lcall
push
fistpl
cmp
cs
pop
insl
in
pop
adc
mov
andb
mov
or
sbb
lret
in
push
aas
clc
jb
pop
cmp
pop
jl
xchg
js
out
push
repz
sbb
add
pop
xor
adc
test
adc
adc
adc
out
inc
enter
lock
sub
rcrb
or
and
in
pushf
xor
adc
ds
add
or
add
sbb
dec
aas
or
push
push
add
add
and
adc
lcall
adc
mov
or
xchg
push
and
call
add
cmpw
jne
dec
cmp
lret
pusha
add
cmp
leave
inc
push
arpl
inc
ds
xor
adc
add
sbbb
jae
adc
push
add
adc
xor
adc
fs
adc
jno
xchg
or
out
add
je
cmp
outsb
pop
mov
je
jbe
mov
and
divl
adc
pop
cmp
ja
jge
add
fnsetpm(287
or
jae
repnz
loopne
push
or
or
inc
jmp
cmp
jb
sub
sub
push
mov
sbb
mov
jp
adc
jmp
lret
dec
scas
jo
in
or
sub
lods
ror
sbb
lods
push
mov
int
push
push
cmp
fcoms
push
lock
mov
push
jle
daa
imul
sbb
and
push
push
aaa
or
dec
add
call
adc
pop
push
sub
sbb
cmp
push
push
call
inc
xchg
leave
mov
fisubs
mov
dec
xchg
outsl
out
xchg
sbb
ds
enter
sub
ret
icebp
pop
pmovmskb
dec
add
cmp
pop
invd
adc
or
mov
pop
cwtl
mov
xor
mov
mulb
fcomi
movsl
add
mov
movsb
mov
mov
sbb
arpl
pop
mov
rep
xorb
je
cmpsl
mov
dec
dec
cmp
mov
sub
mov
rorl
mov
rolb
in
or
sarl
push
mov
add
mulb
mov
pop
or
sbb
cli
jecxz
add
lds
sbb
cmpsb
cmpsb
mov
stc
jmp
test
xor
cltd
add
cs
clc
call
mov
repnz
jbe
push
xchg
lods
addl
mov
jle
lock
hlt
pop
and
outsl
jmp
pop
call
adc
pop
fcmovnb
jne
stos
lock
cmp
jbe
mov
das
cmp
pop
jb
push
pop
pop
fcmovnu
cmp
xor
add
mov
ficoml
add
pop
or
add
stos
xor
out
adc
andw
mov
outsb
fwait
adc
insl
add
cld
pop
jb
xor
push
push
push
mov
call
fadds
insb
add
push
sub
xor
xchg
lahf
sti
mov
out
mov
lea
cmp
or
xchg
clc
and
mulb
mov
int3
fcmovnu
adc
cld
call
sarl
or
setle
cltd
out
add
push
jo
loope
call
and
xlat
movl
mov
ljmp
call
out
or
rolb
dec
and
in
add
je
add
pop
xor
ds
xor
adc
adcb
jg
in
repnz
add
xorb
adc
adc
fiadds
stc
cmpl
enter
jg
xor
adc
mov
add
cwtl
cmp
pop
inc
mov
push
arpl
cli
push
mov
shll
cs
mov
push
pop
jmp
into
cmp
cmp
rorl
push
scas
pushf
loopne
inc
dec
enter
adc
adc
push
das
hlt
dec
jmp
or
shlb
shlb
add
cmp
xor
lret
and
outsl
rorb
fsubp
je
and
add
mov
add
fistpl
in
push
jmp
adc
add
xor
sbb
call
add
sti
scas
les
xor
pop
inc
idiv
adc
mov
call
inc
jmp
andb
mov
jmp
push
adc
fidivl
shlb
inc
add
and
adc
mov
xor
adc
and
xchg
cld
daa
and
add
push
call
adc
and
and
and
outsb
out
cld
lock
adc
fists
mov
xor
fimull
fistps
push
adc
jo
fdivr
test
or
aas
sbb
icebp
mov
imul
add
andl
jmp
or
inc
sub
and
or
ja
std
and
add
push
lods
test
mov
inc
jge
lock
push
mov
shrl
and
aas
cmp
jae
jo
in
add
inc
pop
lret
shr
add
stos
leave
add
inc
push
mov
sbb
clc
fisttps
mov
dec
push
pop
jne
adc
sbb
pop
mov
jo
mov
add
loop
or
adc
or
pop
add
jne
xor
sub
enter
push
movsl
adc
data16
bound
jg
in
movsb
pop
jbe
or
cmp
mov
not
and
mov
mov
push
jl
and
or
add
lea
mov
xlat
sbb
shr
mov
aaa
divb
add
repnz
not
and
cmpl
or
adc
arpl
shr
sub
or
js
repnz
aam
mov
aaa
mov
or
fisubs
fimull
add
mov
and
out
xadd
adc
pop
inc
sub
lods
xchg
lcall
mov
and
not
cmp
add
repz
jle
mov
mov
shr
or
add
insl
jmp
testl
add
mov
sbb
mov
push
lods
loop
mov
push
add
hlt
mov
not
and
sub
and
mov
imul
sub
xchg
rcr
mov
roll
or
pop
popa
jle
lods
lock
or
mov
adc
test
imul
scas
roll
mov
mov
pusha
les
sbbl
int3
mov
imul
std
sbb
add
out
into
push
pop
pop
xor
add
sbb
and
les
repz
fcomp
cwtl
subb
sbb
add
rclb
mov
cwtl
fisubrs
pusha
adc
pop
scas
iret
insl
arpl
testl
cmpsb
mov
stc
ficompl
sub
pop
sti
sub
int
loop
movups
sub
fcom
add
lret
fdivrs
pop
fbld
mov
les
aaa
and
nop
imul
xor
repnz
or
xchg
jbe
out
cwtl
std
stos
lods
es
add
cld
and
fidivrs
imul
add
aaa
das
push
mov
cmpsb
and
mov
xor
sub
xchg
ret
jg
out
or
popa
adc
add
or
mov
xchg
push
pop
mov
mov
sbb
pop
bound
sbb
imul
add
shlb
clc
jg
jns
mov
inc
mov
rclb
sbb
outsb
or
fadds
hlt
push
and
repnz
fdiv
push
pop
pop
es
adc
repnz
shll
and
mov
xchg
out
call
mov
icebp
imull
mov
imul
call
xlat
lods
mov
fdivs
push
adc
add
rorb
lea
pop
and
js
int
clc
cmp
mov
in
mov
fnstcw
out
adc
popf
pop
cwtl
or
stos
mov
stc
out
mov
mov
out
loope
out
sbb
loopne
mul
mov
ret
inc
enter
aaa
or
pop
neg
ret
mov
push
fbstp
popa
fimuls
xchg
xor
adc
adc
gs
call
inc
adc
adc
out
or
fcmovbe
fcomps
fisubrs
add
sbb
lock
aam
mov
das
jbe
enter
outsl
pop
lods
and
sub
aad
flds
outsl
adc
shrl
movl
push
cmp
fwait
in
lret
mov
or
xor
test
xor
pusha
sbb
test
sahf
pop
jb
xor
mov
xor
sahf
mov
pop
js
sub
mov
popf
insl
adc
inc
sti
into
fwait
fbstp
or
in
sbb
fcomip
xor
ss
fdivrl
add
pop
test
adc
cltd
jb
pushf
mov
sub
fmuls
stc
ss
out
jno
cli
loopne
iret
mov
xchg
rcrb
mov
imul
xlat
mov
jle
sub
jae
sub
pop
insl
mov
rcrb
lock
cli
daa
mov
fsubp
sbb
fidivl
cmc
test
cwtl
fstpl
jae
adc
fidivs
test
js
pop
out
cmp
pop
sahf
add
or
push
aas
repnz
cmp
rcl
fstps
jmp
les
in
mov
divl
idiv
ss
in
mov
aaa
jp
jl
pop
je
dec
aaa
jl
xchg
pushl
or
aam
gs
lods
sbb
cmp
cli
mov
aaa
sbb
sbb
adc
pop
mov
sub
push
or
in
mov
or
int3
or
mov
push
or
bnd
inc
mov
stos
adc
lret
lock
hlt
add
push
fidivrs
mov
adc
xor
xor
sbb
mov
gs
sbb
rcrl
or
lock
int3
or
push
mov
pop
pop
or
ja
jno
sahf
pop
rorb
hlt
out
call
pmaxub
fwait
adc
in
rcrl
test
and
out
jmp
dec
xor
cmp
push
dec
jle
outsl
jecxz
pusha
jnp
push
jp
sbb
int
cld
xchg
stos
xor
sbb
out
jecxz
jp
inc
aaa
xchg
fcmovnb
cmp
mov
push
adc
add
mov
mov
jle
test
lret
jp
xlat
sbb
fstps
xor
cmp
loopne
mov
fiaddl
mov
and
lret
adc
repnz
repz
cs
int
xchg
roll
dec
mov
xchg
mov
pop
jge
xlat
pop
add
pop
movsb
mov
ja
add
inc
or
or
prefetch
mov
sub
push
and
push
mov
mov
jg
aaa
cmpb
sarl
sub
push
push
jns
ret
and
test
push
push
data16
xor
or
adc
adc
xlat
pop
fisubrl
pop
mov
mov
inc
pop
inc
push
clc
mov
test
nop
iret
pop
pop
mov
mov
into
pop
mov
mov
push
adc
add
sbb
cmp
rcrb
xchg
sbb
ret
push
pop
loopne
dec
sub
push
xor
and
add
fcoms
push
cld
pusha
test
cmp
jbe
lea
aaa
in
aas
sub
mov
inc
add
cmp
mov
pushl
jmp
imul
add
lea
mov
popf
lea
js
add
outsb
in
add
test
push
loopne
pop
int3
pushf
jae
fcmovnbe
add
fsubr
mov
lcall
es
adc
test
movsl
cmpsl
imul
insl
add
in
gs
jl
out
das
lock
jo
hlt
gs
clc
int3
imul
neg
lock
loope
insl
addr16
mov
push
pushf
fisttps
mov
idivl
js
rep
call
sbb
les
insb
aas
mov
roll
insl
lods
mov
je
fcmovnbe
inc
lods
outsb
fimuls
fmull
inc
push
pop
mov
repnz
loopne
mov
mov
adc
fistl
push
ds
push
lret
lods
push
xorl
add
dec
out
lret
mov
xchg
push
out
push
inc
dec
inc
pop
adc
sub
pop
repz
test
les
push
filds
cld
push
cmp
inc
pusha
fnstenv
fwait
push
cmp
push
sbb
inc
out
pop
cltd
test
int3
add
and
and
push
xor
lods
inc
ljmp
jne
call
mov
dec
or
xchg
and
aas
hlt
mov
add
stc
clc
mov
call
test
mov
xor
sub
pop
sub
sub
xor
shl
or
xor
imul
push
adc
popa
out
insl
lods
outsb
adc
leave
mov
lret
mov
dec
lock
mov
mulb
inc
adc
pushf
sarb
in
out
jle
xrelease
jmp
sbb
popf
sti
jmp
push
je
dec
dec
cmpw
jne
pop
push
arpl
inc
add
cmp
add
mov
ret
mov
mov
sub
in
add
callw
and
mov
insl
or
or
inc
jnp
lock
aad
jbe
cmp
inc
or
jo
add
or
fmuls
push
push
je
xchg
cmp
fisttpll
mov
dec
or
inc
add
je
cmp
jne
push
iret
enter
jo
push
outsl
dec
pop
pop
add
mov
and
jbe
ja
loopne
nop
xchg
call
add
fdivl
xchg
add
loopne,pt
cmp
pop
push
loopne
cs
cmp
fiadds
pusha
cmp
mov
sub
inc
ljmp
nop
test
jmp
test
stos
in
jno
xchg
mov
push
and
pop
pop
leave
mov
sbb
push
nop
push
fisubrs
or
mov
cmp
push
push
and
mov
and
add
sub
mov
fsubr
cwtl
mov
je
insb
scas
clc
cmp
mov
call
dec
and
scas
ret
sub
decb
xor
mov
adc
jge
sti
sub
mov
add
jno
adc
jg
std
and
hlt
sbb
lods
and
enter
add
cmp
and
pushf
push
mov
or
rcrl
mov
cmp
mov
mov
imul
or
ficompl
sbb
sti
je
jo
push
push
inc
addr16
jp
xorb
add
pop
mov
mov
xchg
in
sbb
pop
adc
pop
pop
call
aaa
jmp
add
mov
cmpb
inc
nop
push
imul
jmp
pop
mov
idiv
xchg
adc
xor
jmp
dec
mov
mov
movsb
add
push
pop
popf
test
jo
add
das
adc
fsubl
push
push
fdivrs
mov
push
sbb
jg
jb
insb
push
scas
insl
cs
lret
in
addr16
mov
mov
mov
in
mov
jb
gs
lret
mov
mov
pop
mov
hlt
mov
gs
pop
xchg
gs
outsl
jb
and
fcmovu
gs
jbe
mov
xlat
dec
test
loop
jecxz
xchg
fldt
push
out
dec
out
call
jmp
insl
jae
shll
je
xor
fldcw
xor
mov
rol
add
xor
fldt
leave
lret
cmp
int3
mov
xchg
push
xchg
xchg
mov
mov
cltd
lcall
insl
mov
cld
mov
mov
pop
outsb
mov
inc
add
mov
pop
cmpsl
test
push
test
pop
shll
idiv
ds
hlt
cli
adc
lea
aam
pop
pcmpeqb
shlb
push
cwtl
inc
daa
cwtl
or
pop
xor
andl
int3
bound
mov
pop
aaa
inc
in
push
jb
fists
mov
sub
in
lods
data16
clc
dec
and
or
or
scas
or
pop
dec
rcrb
sub
jne
pop
xchg
jae
mov
cs
stos
push
loop
divb
adc
lods
in
fists
fidivrl
out
shrb
jg
sub
sar
int3
push
inc
lods
xor
fnstcw
sti
fs
mov
call
shl
and
sarl
out
lret
xchg
pushf
pop
cli
inc
ret
sti
lcall
or
push
push
mov
dec
aaa
inc
sub
ret
adc
insb
stos
pop
and
les
jle
push
ret
jmp
mov
inc
xchg
dec
pop
nop
repnz
mov
call
daa
add
lret
sub
enter
fsubrs
clc
std
sbb
adc
lret
mov
lock
pop
push
xchg
frstor
push
mov
push
das
cli
lock
push
xor
pop
and
shld
jecxz
je
lret
imulb
cld
mov
fistpll
sbb
inc
adc
and
or
pop
ret
mov
mov
aas
or
sbbl
out
adc
sub
inc
daa
sahf
adc
sub
sbb
cmp
xor
mov
jl
loopew
push
add
jmp
lock
mov
hlt
mov
in
mov
dec
mov
addr16
sbbb
and
fldl
mov
cmp
mov
ret
cmp
adc
mov
movl
mulb
cmp
lret
push
lret
shlb
nop
xor
cmp
scas
aaa
leave
push
push
fsubl
jl
in
pop
hlt
adc
or
push
aam
add
aaa
fsub
add
cmp
cmp
push
rcr
xor
xchg
mov
xor
push
mov
mov
mov
bndstx
fiadds
rorl
jne
clc
cs
push
insl
xlat
adc
and
xchg
test
adc
flds
or
add
int
addr16
adc
jmp
and
sbb
cmp
push
and
xlat
jmp
push
js
push
mov
scas
fs
or
cmpb
stos
and
sarl
push
cmp
xchg
scas
pop
add
out
or
call
push
jl
ss
or
xchg
sbb
push
mov
fcmovb
jo
ret
cmp
enter
mov
roll
cld
jl
mov
lret
dec
outsl
jp
cmpsl
insb
shll
dec
push
mov
outsb
dec
imul
ja
sbb
fildl
fstp
jae
fistps
loopne
xor
mov
xor
sti
cld
mov
sbb
icebp
lcall
mov
shll
mov
jmp
mov
dec
adc
int3
push
outsb
fs
scas
or
xor
xor
enter
adc
leave
pop
pop
lret
popa
lret
mov
lret
js
push
xor
pop
ss
inc
jb
xor
and
cmp
cli
mov
shrl
loopne
push
xor
enter
sbb
rol
sbb
pop
push
dec
sbb
or
pop
push
pop
and
add
movb
or
in
xor
push
sub
in
jecxz
lock
jmp
loop
andb
addb
in
mov
rcrb
push
imul
insl
ja
scas
aam
lret
add
sbb
cmp
fnstcw
ljmp
fxch
ret
sbb
fstp
inc
sub
int
push
mov
ljmp
xor
mov
add
dec
inc
pop
fadds
dec
inc
jae
int3
rclb
ds
xor
cmp
cmpsb
xor
out
outsl
or
sbb
loopne
in
add
rcrb
in
sahf
cmpsb
pop
data16
fdivr
fildl
jg
xchg
clc
lock
jge
lds
and
jg
xlat
or
pop
xor
dec
xchg
repz
jbe
fcoml
inc
lock
les
or
jle
sub
adcb
push
pop
push
adc
push
insb
outsl
sub
push
or
jne
fcompl
sbb
and
out
pop
pop
adc
or
test
aaa
in
out
xor
push
mov
sbb
lret
xor
push
icebp
lock
cld
cmp
jge
push
movsl
movsb
cmp
hlt
out
push
inc
cmp
pop
popf
data16
std
xor
and
data16
int
add
adc
dec
movsl
push
add
pop
push
adc
and
xchg
pop
rcrl
jl
xor
inc
movzbl
xorl
divb
or
cmc
inc
aas
sbb
std
andb
pusha
adc
push
idiv
and
je
cmpsb
sub
clc
add
add
adc
dec
fwait
in
xor
push
icebp
popa
in
fldt
repz
shll
repz
gs
dec
rcll
test
popa
jo
xor
shll
jb
dec
outsb
xor
inc
shll
ret
sub
rorl
icebp
jne
fs
out
aam
cltd
adc
cwtl
xchg
test
xchg
xchg
jae
inc
js
dec
mov
movsb
pop
push
pop
mov
inc
xchg
xchg
push
xchg
push
popa
adc
mov
and
fdivrs
adc
call
out
lods
xor
xchg
ss
inc
cmp
add
push
sub
sub
fidivrl
imul
aas
inc
in
sub
lea
inc
in
jl
push
cmpsb
mov
cmp
iret
inc
lcall
push
popf
mov
dec
dec
or
push
fldcw
jne
dec
in
pusha
mov
fsts
dec
adc
sub
sbb
int3
push
xor
push
mov
cmpsl
xchg
xchg
dec
and
mov
push
xlat
lea
or
ficoms
ret
jmp
sbb
les
push
aas
mov
idiv
mov
xor
jns
or
and
mov
idivb
add
mov
mov
lret
xchg
push
push
in
insb
imulb
sub
and
data16
adc
add
jg
movsb
fimuls
sub
js
mov
pop
adc
inc
inc
popa
mov
push
add
push
inc
add
and
fs
jl
mov
xor
pushf
cmp
push
shll
ljmp
push
cmc
cmp
nop
fnclex
cmp
ja
ljmp
jmp
jae
adc
add
std
sub
jns
lods
lcall
and
enter
push
mov
stos
push
js
out
pop
mov
push
mov
or
lods
lret
push
ds
cmp
daa
add
jae
push
pushl
or
lcall
or
movsb
test
mov
inc
mov
fmuls
add
fcoml
cmp
int
mov
popf
sahf
adc
mov
movsb
shrl
cmpsb
movsl
cmpsb
cmpsl
jo
test
stos
stos
es
jae
xchg
gs
xchg
cmp
cmp
dec
and
cmpsb
imul
cmpsb
imul
cmp
cmpsb
pop
outsb
push
shrb
enter
mov
int3
int
inc
iret
jae
jmp
cmpsb
imul
or
pop
cmpsb
imul
dec
rol
imul
shll
imul
jae
xor
add
popa
scas
jo
and
fs
push
xor
jg
jae
inc
or
xor
cmp
add
sahf
or
mov
xor
xchg
xor
cltd
mov
inc
sbb
iret
test
mov
out
dec
jecxz
or
shlb
in
add
push
push
dec
iret
and
inc
xchg
ret
sub
dec
gs
push
push
rolb
fsubs
inc
nop
mov
jl
lea
mov
or
adc
je
mov
mov
dec
pop
into
leave
push
mov
aaa
push
std
or
mov
jle
push
sub
icebp
xchg
pop
or
sbb
inc
mov
imul
mov
cmp
int
or
vmovntps
testb
pop
xchg
stos
push
sub
fsts
insl
mov
adc
sbb
ja
popf
cmp
repnz
or
pushl
or
pop
fwait
adc
lret
into
ja
sub
aam
inc
mov
bound
jge
inc
lret
adc
lea
inc
fildl
outsb
mov
fxch
cwtl
out
addr16
ds
fstpt
sahf
movl
push
iret
add
adc
push
cmp
mov
cs
rorb
frstor
cltd
mov
mov
push
cmc
fwait
adc
std
rclb
in
cmpsl
and
add
sahf
scas
pop
int3
cmpps
testl
xor
fsubrl
and
dec
mov
mov
or
std
push
push
or
mov
inc
sbb
call
mov
xchg
popf
jl
pop
sqrtps
mov
or
outsb
inc
cmp
adc
push
mov
inc
pop
clc
std
stc
mov
pop
jnp
mov
xchg
dec
inc
adc
cltd
lea
jge
test
add
cmpl
push
addr16
inc
mov
inc
inc
mov
imul
xchg
sbb
mov
loope
jnp
jo
dec
hlt
inc
mov
pop
std
push
mov
cli
ds
mov
aas
pop
mov
cmp
test
jne
push
adc
out
jno
push
ret
fcmovu
cmp
sbb
adc
fucomip
push
push
int
mov
and
mov
pop
mov
sbb
push
clc
call
pop
jge
fs
pop
mov
aas
out
jge
push
rep
or
cld
mov
pop
rolb
repz
test
or
lock
je
lods
loope
mov
xorl
mov
mov
or
dec
jnp
push
push
jo
fdivrs
lods
adc
xor
add
aam
sti
into
push
adc
cs
sbb
fldl
lods
push
adc
insb
xor
adc
add
mov
jne
cwtl
in
fs
iret
out
out
pop
pop
push
jne
xchg
adc
push
shlb
lock
sub
xchg
sbb
scas
jmp
jae
outsb
insl
std
lock
cmp
sub
daa
sub
dec
mov
adc
scas
pop
mov
add
mov
decb
jp
rcrl
es
and
scas
jnp,pt
fsubp
jnp
rcrl
lcall
dec
mov
sbb
add
stos
add
pusha
push
stos
dec
xchg
add
mov
int
jb
fs
insb
cld
insb
dec
insl
dec
adc
shrb
jne
sub
adc
insb
cmc
insb
dec
dec
add
sub
rorl
loopne
sbb
dec
insl
sub
leave
mov
inc
je
dec
dec
rcrl
inc
insb
cwtl
gs
popa
mov
shlb
adc
push
scas
add
add
shl
and
inc
mov
decl
sbb
push
cmp
lea
cs
add
aaa
dec
mov
jecxz
data16
push
adc
sahf
jne
les
lret
dec
outsb
insl
out
add
push
addr16
insl
add
out
aam
leave
mov
int3
outsb
xchg
call
mov
and
jne
inc
inc
cmc
stc
addr16
add
jne
mov
inc
into
add
es
push
xchg
ds
sbb
cmp
push
mov
sub
scas
dec
sbb
pop
int
lret
ds
ss
push
ljmp
call
scas
sub
sbb
bound
cmp
push
sbb
aad
mov
call
aad
push
push
pop
push
pusha
adc
sub
test
nop
lock
call
fs
push
fdivrs
fidivs
push
push
lcall
mov
pop
bound
dec
test
out
adc
cmp
add
fisttpll
and
or
mov
pshufw
inc
mov
stc
fimuls
xor
test
les
mov
js
jge
jns
jo
cmp
xlat
cmp
ficoml
push
punpckhdq
stos
lahf
push
lret
cmp
adc
cmp
int
xor
popf
les
mov
dec
sar
sub
mov
lret
int3
rcl
fcomp
in
subb
call
dec
add
enter
rcrl
mov
sbb
and
adc
scas
test
jl
inc
jb
rorb
inc
test
arpl
insl
scas
adc
ja
mov
xchg
push
mov
lods
pop
dec
mov
gs
jb
push
test
aam
rol
aaa
outsl
mov
mov
push
aaa
insb
mov
add
idiv
popa
loope
ljmp
stos
and
lods
or
loope
xor
add
mov
insb
sub
and
les
dec
mov
dec
lock
push
ss
cmp
push
ret
add
fwait
cmp
in
adc
sub
xchg
push
enter
out
gs
ss
dec
dec
dec
dec
pop
xchg
gs
inc
push
cs
xorl
insb
movsb
addr16
mov
adc
insb
jne
cs
insb
insb
jnp
sbb
push
stos
pop
and
imul
mov
xlat
xor
movsb
push
movsl
cmpsb
pop
cmpsl
pcmpeqd
pop
test
test
lods
gs
xchg
add
je
gs
push
pusha
jo
dec
jo
xchg
gs
xchg
outsb
push
gs
gs
inc
aam
mov
cmpsb
imul
pop
xlat
mov
es
shrl
js
xchg
xchg
xchg
xchg
int
xchg
inc
push
cwtl
js
lcall
je
inc
xor
in
es
fists
gs
and
jne
jae
out
cmpsb
imul
mov
jb
pop
xlat
insb
lgs
inc
mov
sub
mov
arpl
mov
enter
adc
lods
aaa
into
enter
mov
mov
jb
cmp
sahf
adc
cmp
cld
mull
and
cli
test
mov
pop
mov
jno
push
ret
jne
xchg
mov
mov
addr16
dec
cmp
pop
call
inc
and
jmp
add
sbb
push
xchg
gs
mov
je
adc
mov
and
xchg
sub
ljmp
mov
jbe
fistpll
movsb
or
repz
mov
or
pop
inc
loopne
sbb
jne
fs
or
push
das
jo
subl
add
cwtl
insb
mov
test
push
push
test
hlt
enter
xorb
cmp
xchg
bound
dec
jge
sti
aas
orl
jae
jb
mov
adc
inc
pop
orl
jne
outsb
mov
lock
call
stc
ret
or
jbe
mov
cmc
add
xchg
push
jae
cmp
jb
pop
je
outsl
inc
incl
les
and
ljmp
jb
and
ja
outsb
popf
sub
xor
cs
fs
insb
jb
arpl
pop
mov
arpl
jg
insl
jne
bound
and
adc
rcrl
push
imul
filds
mov
and
gs
dec
ljmp
xchg
mov
push
or
push
pop
and
leave
out
mov
mov
push
mov
and
pop
stos
pop
mov
and
or
jle
enter
pushf
loope
sub
pushf
lock
sub
call
fdivl
mov
mov
or
jne
je
ror
jne
jb
sbb
pop
aaa
nop
repz
mov
jmp
and
pop
or
loope
call
push
iret
pop
jns
rcll
jnp
rorl
out
jmp
and
jmp
dec
rol
jb
popa
cltd
arpl
shll
outsl
xchg
outsb
cmp
dec
shll
insl
clc
es
shll
aam
dec
shrl
cmp
mov
cmp
testb
mov
call
std
ljmp
adc
push
sahf
inc
xlat
cmp
jae
iret
std
fwait
and
aas
arpl
je
xchg
sub
outsb
adc
gs
je
outsl
jae
bound
lcall
aas
in
inc
mov
sbb
sbb
lahf
subb
dec
sbb
andb
sub
mov
loopne
out
xor
fcomps
rolb
enter
fbstp
int
aas
mov
shrl
lcall
rcrl
lahf
mov
call
lock
mov
loopne
pop
sub
rclb
jae
popa
arpl
imul
lret
jo
adc
cmp
sbb
sahf
hlt
xchg
xorb
repnz
cmp
xchg
and
add
mov
or
xchg
push
or
shll
add
fs
cltd
movsb
jb
jmp
lret
push
cld
inc
scas
push
mov
push
imul
je
nop
cmpsb
imul
xor
and
pop
sbb
jne
adc
je
daa
dec
mov
rorl
pop
jbe
mov
incb
out
ss
call
push
cmp
shr
insl
iret
push
push
xchg
fdivr
or
inc
das
addr16
lret
popa
mov
push
add
loope
lods
fucomi
cmpl
cmc
inc
dec
pop
fstp
xchg
cmp
push
pop
lahf
adcb
neg
sbb
inc
mov
adc
cmp
daa
xor
sub
mov
adc
loopne
pop
or
pop
xadd
in
xor
hlt
or
std
lock
clc
test
push
mov
pop
jmp
push
pop
rorb
xor
adc
movsb
dec
add
loopne
push
addl
insl
test
pushf
sahf
sarb
dec
xor
rorl
fs
xor
add
mov
int
sub
or
nop
xchg
push
mov
in
mov
sbb
cs
std
enter
fidivs
adc
cmp
pop
jae
call
das
test
std
mov
js
or
or
cltd
std
cwtl
aaa
cwtl
and
jmp
mov
lret
mov
je
outsl
outsb
lret
mov
lret
cmp
imul
mov
insb
imul
aas
lods
scas
scas
push
mov
imul
imul
lcall
or
jo
ret
les
cmpsb
imul
jne
test
xchg
int3
fidivrs
gs
xchg
gs
arpl
xchg
gs
xchg
outsb
cmp
xchg
xchg
gs
jb
jns
cmp
mov
xor
popa
mov
out
data16
xor
shrl
outsb
imul
push
std
sub
dec
xchg
add
dec
jne
adc
jmp
push
and
enter
sbb
jmp
nop
adc
cwtl
jns
adc
cwtl
dec
outsl
adc
nop
shr
mov
inc
push
mov
mov
xor
xor
sbb
dec
sti
jne
call
negb
lods
jb
add
xor
arpl
sub
aas
sub
mov
sub
outsl
add
mov
xchg
cli
les
aas
arpl
leave
mov
imul
pushf
je
jo
outsl
andl
pop
fiaddl
jne
cltd
stc
jl
sbbl
rep
or
inc
in
lcall
divb
cltd
popa
popa
ret
or
cwtl
sbb
clc
cmpsb
imul
imul
outsl
imul
xchg
cli
jo
sub
xchg
jmp
ljmp
push
push
int
jl
call
inc
xchg
push
aad
push
mov
std
vpcmpeqd
and
jp
sbb
xor
pusha
fisttpll
shll
stos
pusha
sbb
jnp
test
jns
mov
insw
call
pop
jmp
sti
xchg
lods
cmc
repnz
stos
aad
cmp
add
mov
lds
or
and
cld
js
push
pushl
jne
and
out
mov
rorb
pmaxub
push
sarb
push
adcl
or
cmp
jl,pn
add
test
fwait
push
add
push
movl
cli
cmpsl
jge
dec
sar
inc
rclb
mov
sarb
jbe
pop
mov
jne
ret
insb
cmp
push
je
push
push
ss
add
mov
inc
pop
xchg
jmp
xchg
mov
pop
fstpl
test
add
test
js
roll
leave
ljmp
xor
push
daa
mov
push
int
andb
rcll
adc
je
or
fldenv
jmp
addl
out
ja
ds
imul
imul
mov
mul
cld
pop
loop
jecxz
in
adc
cld
pop
aam
mov
out
xchg
jo
mov
je
call
addb
xor
iret
dec
cmp
mov
cmp
iret
add
and
scas
add
fdivr
xor
sbb
xchg
stos
xor
adcl
xlat
cmp
xor
mov
jb
faddl
pop
and
add
icebp
and
push
push
fistpl
lods
add
mov
mov
push
rolb
jb
cmp
pop
sbb
or
sub
js
cmpsb
add
jae
inc
pop
cmpb
pop
cmp
jle
mov
rcr
mov
add
pop
cmp
jl
jne
cmp
lcall
xchg
rorb
lea
push
mov
data16
adc
roll
cmp
hlt
jle
jge
movsbl
lea
push
aad
lock
ja
in
out
jmp
sbb
jne
or
mov
aaa
inc
ss
aas
or
dec
dec
inc
add
gs
dec
dec
xchg
sbb
ds
std
add
jge
inc
cmp
stos
cmp
add
in
or
inc
insb
sbb
cmp
aam
push
dec
adc
or
ret
inc
sub
and
cld
cs
mov
je
ss
fisttps
lea
push
int
mov
pop
pop
cmc
sbb
jg
or
xchg
bound
mov
sub
jne
aad
adc
mov
add
or
in
jne
jmp
mov
nop
add
les
call
shll
add
mov
pop
jle
pop
aad
outsl
cmpl
jne
or
mov
push
jae
sub
test
push
cmpb
or
mov
mov
test
adc
cld
repnz
or
xchg
fdivl
adc
and
mov
mov
adc
in
fcoml
in
xor
fistpl
test
add
sbb
pusha
push
aad
cli
mov
or
clc
sahf
and
or
pop
push
pop
push
mov
lret
add
outsb
lret
mov
daa
push
test
sub
sbb
call
push
dec
fildl
insl
add
insb
jno
call
and
add
and
xchg
repnz
adc
fldl
lods
pusha
int3
call
xchg
nop
mov
xor
enter
ss
lcall
add
cs
mov
mov
mov
in
push
enter
jmp
ret
dec
les
pop
enter
call
lea
xor
fdivl
cwtl
mov
add
and
stos
subb
xchg
ljmp
ss
cmp
out
call
imul
sti
pop
out
add
xor
fistl
flds
add
loope
jne
stc
xchg
mov
mov
loope
dec
aam
xor
dec
pop
mov
cmpl
dec
les
call
cs
cmp
loopne
mov
decl
dec
mov
add
call
or
push
stos
add
push
lods
scas
test
repnz
in
shlb
loopne
mov
or
or
cmpsb
fldcw
dec
pushf
mov
fnstenv
mov
fnstenv
movsl
add
fisttpll
or
movsb
and
cmc
int3
imul
jne
pop
shll
inc
lods
fstpl
and
test
or
and
in
sub
pop
fldenv
push
xchg
lea
data16
dec
push
lcall
in
out
lods
clc
clc
mov
inc
out
push
add
lret
or
mov
out
dec
mov
push
int
mov
or
clc
xchg
std
mov
cmp
cli
mov
and
daa
in
pop
mov
arpl
xchg
xchg
or
jg,pn
and
out
and
push
lret
mov
lret
mov
lea
mov
dec
mov
call
leave
daa
add
dec
xchg
adc
jmp
ficoml
mov
popf
cmpsl
jbe
sbb
and
dec
fmul
push
jne
lods
or
iret
push
frstor
jl
mov
insl
jb
cmp
call
cmp
movsb
stc
push
movsb
and
sbb
jae
mov
loope
sbb
ret
mov
rcrb
jnp
mov
dec
loope
cld
dec
lods
fwait
xchg
jmp
fdivrs
arpl
mov
les
cmp
cmpsb
add
mov
in
mov
ss
aaa
ret
pusha
sti
shlb
inc
out
inc
sub
bound
lcall
add
or
adc
sub
pop
cmp
outsb
loope
arpl
mov
mov
sarb
push
adc
adc
add
or
call
aaa
data16
push
jg
in
push
loope
popa
je
jg
add
lods
mov
mov
test
push
shrl
add
cmp
sbb
cs
cmovo
outsb
sbb
subb
int3
dec
and
psubd
mov
push
xor
lock
lods
mov
lret
mov
mov
adc
push
sbb
push
mov
lea
fcompl
adc
sbb
out
xchg
add
jno
adc
or
and
or
sub
push
xchg
xchg
mov
pusha
movb
xor
pusha
leave
inc
pop
ljmp
push
jbe
jmp
lar
adc
push
push
xor
mov
push
test
jbe
push
mov
push
push
pop
xorb
in
pop
mov
mov
arpl
xor
cmpb
mov
jmp
dec
mov
arpl
jae
or
in
xor
xor
mov
sti
jnp
push
push
mov
and
mov
pop
push
hlt
xor
sub
scas
xor
aas
cs
and
aam
pop
lret
lea
jl
or
pop
push
call
adc
mov
cltd
js
xorb
sub
mov
ret
push
xor
mov
je
xchg
add
jb
cmp
cmp
fsubs
pop
imul
pop
inc
mov
rclb
pop
and
leave
scas
mov
arpl
clc
cmpsl
sbb
jnp
pop
dec
xlat
enter
test
arpl
add
js
mov
fs
adc
mov
inc
jg
mov
test
and
push
aas
cmp
mov
fs
mov
shll
sbb
ss
js
xor
cmpsb
cmp
xchg
add
int3
xchg
sub
js
add
scas
stos
jnp
jmp
mov
sarl
fwait
add
sub
xchg
mov
or
pop
or
aam
fldl
iret
sub
sub
sbb
dec
jne
cmp
in
adc
mov
std
adc
sbb
lock
jecxz
and
ficoml
sub
adc
adc
xchg
shll
push
or
iret
mov
idiv
and
je
dec
jne
cmp
or
jmp
adc
mov
clc
fstpl
adc
fwait
inc
jae
pop
push
cmpsl
pop
lret
stos
add
into
mov
sub
xchg
bound
sbb
call
lock
add
mov
cmp
pop
mov
icebp
es
and
std
jbe
sub
jne
adc
adc
mov
xchg
mov
call
iret
ret
iret
icebp
sub
adc
cmpsl
pop
mov
push
push
ss
sahf
popf
movsl
xor
sub
mov
data16
xor
fs
ds
adc
jbe
adcb
adc
mov
add
and
push
push
aaa
test
adc
pcmpgtw
mov
ret
rorl
sub
or
jae
jbe
cwtl
std
fpatan
adc
add
adc
sarl
sbb
sbb
call
sub
jle
add
push
jns
xchg
dec
mov
data16
jne
push
sbb
add
daa
push
test
mov
adc
add
lds
and
mov
sub
test
or
int3
pushf
sarl
sbb
movsb
push
lea
jo
repnz
mov
xor
mov
mov
leave
leave
mov
xlat
or
mov
stc
cmp
adc
push
inc
add
je
mov
adcl
insl
and
dec
sbb
add
cmp
jp
cmp
mov
sub
adc
adc
mov
or
add
jne
mov
or
std
pop
cs
jmp
shr
add
pop
lea
iret
test
shl
mov
inc
call
das
inc
dec
inc
out
jmp
adc
mov
pop
mov
adc
mov
mov
sbb
ja
dec
sub
pmulhw
mov
xor
mov
and
pusha
dec
cld
mov
stos
push
pop
cmp
call
pushf
addr16
xor
and
lods
bound
popf
add
push
inc
out
ret
aas
and
and
cmp
and
dec
dec
lods
fwait
dec
in
xor
or
fwait
aaa
lcall
in
or
je
inc
imul
adc
repz
mov
cmp
ret
scas
adc
xor
in
push
mov
andl
mov
push
or
push
inc
lcall
outsl
outsb
pop
xchg
or
addr16
imul
mov
mov
pop
add
adc
jbe
pop
adc
test
add
mov
mov
xchg
bound
fsubr
cmp
jae
push
mov
pop
adc
push
dec
sbbb
pushf
in
or
cmpsl
mov
jle
cmp
je
cmp
xchg
cmpsl
mov
outsl
mov
imul
add
pop
lahf
fisubl
mov
int3
test
imul
lock
fs
push
into
popf
lods
shll
cmpsb
je
orb
pop
les
idiv
dec
push
mov
orb
fwait
mov
lea
shll
xorb
test
call
xor
inc
ljmp
rolb
push
mov
vorps
add
sbb
or
adc
bound
and
movsl
inc
add
sbb
fstpt
popa
mov
loopne
jg
mov
push
and
push
push
cmp
sbb
or
and
cmpsb
mov
sub
jbe
mov
std
push
add
and
sub
add
and
lea
stc
or
ss
clc
ljmp
movsl
icebp
inc
repnz
js
mov
dec
ror
call
clc
pushf
mov
adc
and
xor
test
or
sub
gs
add
sbb
sub
or
and
adc
xchg
pushf
cltd
mov
mov
jne
inc
ss
sub
lods
cmpsl
loopne
cmp
cbtw
stos
mov
xor
cmp
icebp
or
mov
push
xchg
aaa
ss
pop
mov
pop
inc
into
mov
jl
or
and
or
cmp
mov
cmp
test
jb
test
mov
adcl
jne
das
aam
in
jbe
ljmp
cmp
cmpb
leave
cmpw
call
cmpl
push
cmpsb
or
sbbb
sbb
xchg
cmp
call
cmp
cmp
cmc
push
jno
sbb
cmpb
cmp
jge
jo
add
cmpl
clc
add
xchg
imul
push
cmp
pusha
stc
add
lea
jge
data16
fisttps
push
inc
cmp
cmp
cmp
pop
bound
rcrl
or
shl
or
pop
loop
out
mov
add
add
rclb
outsl
pop
push
push
adc
jne
jge
imul
dec
sbb
das
lods
xor
mov
fmull
jmp
lahf
add
fisttpll
pop
add
sbbl
fbld
jno
shr
jle
movzwl
popa
jne
aad
push
je
add
movl
icebp
jle
mov
add
inc
lar
data16
lock
popf
sub
sub
insl
inc
adc
ja
cmp
mov
jbe
lcall
adc
inc
inc
and
cmp
xchg
add
jmp
orb
push
cmpsl
inc
shrb
loopne
repz
inc
mov
push
push
jno
push
inc
enter
fcomps
imul
loop
inc
adc
iret
jmp
xchg
jle
lea
pop
mov
pushl
add
push
scas
clc
loop
in
mov
in
sub
loope
inc
push
and
and
in
jne
add
push
mov
or
data16
jo
mull
out
sbb
pop
rorl
inc
loope
xor
jno
inc
aaa
pushl
lcall
xor
ss
les
cmpb
sbb
jmp
push
sbb
jae
and
mov
fsubs
adc
jge
mov
pop
mov
mov
and
fcmove
std
movb
testb
je
pop
inc
sub
rolb
rorb
ss
jecxz
or
mov
push
push
adc
push
push
pop
out
lds
sub
xor
push
xchg
mov
mov
arpl
xor
mov
sub
mov
cmp
sub
cmpb
insb
push
push
adc
push
scas
mov
mov
add
gs
insb
insb
adc
daa
jb
xchg
cs
mov
mov
pop
iret
mov
popf
js
mov
in
call
or
mov
mov
cmp
dec
call
pusha
ds
cld
or
andl
pop
add
addl
shrb
xor
sub
lock
add
divb
mov
inc
mov
les
inc
call
lds
mov
pop
dec
mov
faddl
or
adc
pop
pop
data16
je
pop
bound
push
test
and
push
add
or
cltd
out
aam
je
and
movsb
popf
or
cmpsb
jb
cmp
push
xchg
cltd
clc
stos
jmp
lea
pop
ja
adc
mov
in
push
sbb
sbb
xor
jl
jecxz
cmp
jno
sbb
adc
mov
xchg
push
cmp
loopne
out
call
jge
or
or
xchg
clc
xor
xor
lods
mov
or
popf
test
aaa
scas
mov
fmul
sahf
jbe
fcompl
dec
pop
adc
je
mov
fwait
add
imulb
xchg
mov
sub
mov
push
cmp
std
jb
cmp
inc
je
push
neg
inc
and
mov
cli
mov
outsb
daa
dec
adc
jmp
mov
or
mov
push
push
rcrb
andl
push
push
mov
lcall
push
lods
lods
decb
mov
ret
cltd
add
divl
xor
sbb
jmp
adc
xorb
sbb
adc
inc
andl
std
adc
sbb
es
add
scas
call
mov
call
push
mov
mov
xor
cmp
inc
les
add
xor
repnz
les
lds
dec
mov
dec
outsb
enterw
push
mov
addr16
inc
xor
xor
int
aas
pop
ds
dec
fcompl
std
sar
daa
dec
aaa
jb
std
ret
ret
les
ss
ss
mov
scas
inc
or
ss
sub
xor
data16
mov
xchg
lods
mov
jb
push
sbb
add
pop
test
add
enter
or
push
test
or
sub
loope
dec
in
xchg
pop
enter
cld
fcompl
mov
mov
adc
inc
cmp
sub
push
mov
and
push
cltd
das
or
adc
adc
push
int
push
sub
push
out
subl
inc
add
push
ss
inc
cmp
ljmp
pop
test
das
ret
mov
adc
adc
lods
push
mov
rcrl
pop
je
push
push
dec
loopne
clc
pop
dec
pop
xor
movsl
aam
jno
add
xchg
sub
icebp
gs
pop
xchg
gs
insb
outsl
jb
jb
pusha
xchg
gs
in
and
push
adc
sub
inc
cmc
mov
cmp
push
jmp
dec
outsb
dec
sahf
adc
mov
and
leave
std
or
jne
mov
fimuls
push
mov
push
sbb
fstpl
mov
adc
pop
push
adc
inc
add
lahf
outsb
lret
js
movsl
inc
icebp
call
mov
lahf
xor
sbb
jne
lcall
jmp
cmpb
lret
pop
dec
rol
gs
or
or
and
push
and
out
and
add
iret
xchg
int3
jl
orb
nop
pop
nop
inc
les
xchg
jg
fwait
mov
and
enter
and
enter
cmp
inc
iret
out
enter
inc
xor
xor
add
xorb
and
adc
mov
in
mov
daa
inc
dec
inc
aad
mov
sahf
mov
in
cmp
mov
xor
lret
in
rclb
loopne
push
or
lea
enter
call
add
imul
inc
jb
arpl
jmp
mov
popa
jbe
int3
inc
shrb
inc
and
push
mov
cmp
pushl
arpl
jae
fs
shlb
adc
xor
jne
aaa
cld
popa
jo
push
push
imul
sbb
xor
cmp
ss
shrb
inc
insb
insl
pop
cld
mov
push
jae
push
mov
jmp
bound
jb
inc
packsswb
scas
stos
ljmp
fistpl
jnp
sbb
sbb
fs
mov
push
cmc
adc
cmpb
je
insb
inc
loope
mov
jg
out
movsb
add
push
outsb
movsl
cwtl
inc
and
imul
jg
dec
and
inc
jns
add
mov
mov
or
and
mov
out
popa
je
add
dec
aas
add
or
jb
stos
sbb
xchg
gs
js
mov
outsl
jb
outsb
and
push
fldl
jnp
push
push
gs
outsl
push
sbb
lods
int3
dec
sbb
mov
orb
dec
add
jge
and
pop
mov
mov
jo
push
push
in
add
ret
inc
cmp
mov
mov
pop
ret
andb
sub
mov
daa
dec
pcmpeqb
and
xor
xchg
push
das
mov
pop
sbb
ficoml
push
push
gs
scas
mov
xorl
mov
or
or
sbb
ret
adc
jbe
add
cmp
xchg
sub
fmuls
fs
fadds
push
mov
inc
ss
adc
mov
mov
insl
inc
add
jns
mov
lock
outsl
fs
rcr
mov
xor
outsb
push
ret
loope
pop
cwtl
loope
imul
pop
cmpsl
arpl
insl
fcoml
adc
add
mov
dec
imul
rorw
dec
test
insb
sbb
insl
mov
imul
sbb
xchg
add
push
outsb
push
loopne
pop
and
fdiv
jp
inc
push
dec
inc
ss
push
adc
add
jo
xchg
mov
addr16
push
add
fisttpl
insb
popa
pop
push
bound
sbb
addr16
fs
ret
call
dec
inc
gs
mov
and
dec
in
sub
jae
mov
out
jno
mov
test
insl
js
adc
movsl
jae
adc
add
nop
add
push
rorb
pop
aaa
insb
lea
dec
adc
gs
aad
push
push
push
negb
push
cmpsl
mov
nop
es
adc
popa
inc
sub
movl
push
push
or
push
not
mov
sub
bnd
sti
pop
and
jae
sub
pusha
outsl
outsb
sbb
pop
add
add
mov
imul
sub
jne
mov
ret
fdivl
fcmovnu
pop
sub
loope
imul
or
jnp
xor
inc
mov
adc
and
gs
adc
inc
outsb
add
in
jne
jno
or
jne
sub
jne
shll
pop
shlb
cmp
popa
arpl
add
std
mov
and
inc
push
inc
push
out
add
add
sti
mov
cmp
bound
pop
fstpt
cltd
add
insl
rcrb
jnp
sbb
ror
testb
or
mov
pop
jnp
or
cltd
ss
mov
add
mov
xchg
popa
test
jne
ficoms
sbb
or
or
add
add
add
sbb
sub
jge
cmc
in
xchg
mov
jo
push
das
add
fistpl
das
mov
mov
ljmp
push
add
loopew
addr16
xor
dec
sbb
xchg
bound
outsb
cwtl
lods
insl
arpl
in
or
xchg
repz
dec
dec
add
fildll
xorb
mov
mov
jne
mov
pop
add
push
negb
pop
xor
sbb
sbb
subb
push
mov
adc
jae
push
xor
xor
int3
push
pop
adc
ljmp
dec
pop
xchg
push
dec
inc
dec
push
dec
xchg
push
xlat
leave
sbb
je
scas
adc
loopne
mov
movb
mov
push
cmp
jmp
decl
lret
jmp
mov
pushl
jmp
xor
and
add
rcll
addb
mov
mov
add
or
dec
xchg
sbbl
test
popa
add
add
push
repnz
adc
dec
add
add
pop
test
xchg
push
fidivs
cmp
retw
pop
cmp
aad
jmp
lcall
shrd
mov
cmc
pop
mov
pop
shr
pop
jnp
cld
sbb
pop
adc
add
call
stos
jg
pusha
pushf
popl
cld
in
add
jmp
or
sbb
pop
ljmp
mov
sarb
daa
mov
rol
flds
mull
mov
bt
or
in
lods
or
and
fnstsw
test
add
inc
push
call
sti
out
mov
jmp
mov
sub
pop
call
mov
imulb
cmp
mov
mov
jns
sub
or
test
std
or
lcall
movsb
pop
test
mov
testw
mov
xchg
repnz
mov
cmp
cmp
stc
fnstsw
popf
pushf
mov
add
add
jmp
mov
pusha
lahf
push
pushf
fcmovnb
xor
sbb
inc
pushf
push
push
push
sbb
push
cltd
xchg
adc
inc
fdivr
mov
mov
ss
adc
aas
xchg
lods
mov
push
cld
pop
in
aaa
loopne
sbb
xor
push
or
testl
test
ja
neg
test
addr16
jp
scas
popf
xor
or
out
jl
jmp
out
mov
sub
or
mov
add
and
jmp
clc
add
mov
popf
adc
call
xchg
scas
jmp
aad
add
pusha
sub
mov
pusha
pop
xor
mov
clc
mov
mov
clc
bswap
mov
jmp
cld
sbb
mov
and
jmp
fwait
dec
jns
je
ret
xor
popl
test
outsb
ret
mov
fcompl
pusha
rcr
mov
jbe
popa
std
fidivl
sub
lock
push
add
movsb
lock
bswap
mov
loope
aad
mov
mov
inc
sbb
out
loopne
sbb
jle
call
pop
add
push
jmp
in
sbb
push
inc
push
mov
lcall
sbb
cmp
push
jle
pop
stos
popa
add
push
jmp
cmc
clc
add
lock
pop
or
or
mov
stc
jmp
push
cli
pusha
pop
and
sub
mov
pop
push
dec
arpl
jae
jmp
fmuls
in
sub
or
test
cmc
cmp
stc
imul
jg
test
cmc
stc
fsubrl
jecxz
sbbl
rcll
aaa
inc
cmp
rclb
mov
scas
imul
or
aas
cld
mov
mov
push
cld
std
mov
mov
and
cmp
xor
push
sbb
or
loopne
or
xchg
inc
push
outsb
inc
popa
mov
push
pusha
push
imul
out
jmp
adc
dec
jmp
push
push
dec
fstl
outsb
inc
mov
sub
lock
push
mov
pop
xchg
aam
push
pop
cli
jg
rol
cli
add
fcoms
ret
lret
cs
adc
xor
push
mov
add
xchg
and
bound
mov
dec
loopne
testl
jmp
std
stos
ljmp
data16
xlat
out
fldl
mov
sub
enter
in
decb
sub
clc
jmp
pushf
add
stc
jne
in
jle
push
jmp
fcom
cli
pushf
or
adc
push
mov
and
in
ja
lret
xor
sub
dec
cli
add
outsb
mov
call
push
or
out
cmp
add
cmp
popf
test
jae
push
dec
dec
std
imul
pop
sub
movsb
mov
lret
hlt
or
in
sbb
mov
adc
cmp
stc
push
insl
popa
mov
dec
pushf
inc
pusha
fwait
xor
xor
rol
aad
cwtl
daa
mov
popa
loope
fs
add
cli
popa
sub
call
dec
test
data16
aas
mov
jmp
fidivl
sar
leave
stc
ret
adc
bound
ret
outsb
pusha
mov
xchg
mov
push
out
inc
mov
push
repz
ss
adc
mul
mov
cld
mov
xchg
add
xlat
cmp
inc
push
aam
jmp
pop
sarb
xor
sbb
addl
xlat
adc
mov
adc
call
inc
mov
cmp
cmp
insb
or
add
xlat
out
stc
pushf
inc
loope
aaa
dec
fistpll
push
insl
pop
xlat
xchg
mov
or
pop
add
add
in
je
into
xchg
test
aaa
mov
iret
cmp
stc
rol
cmpl
jmp
shr
jmp
xor
sbb
pop
aas
popa
imul
orl
inc
push
or
pop
loopne
cld
push
js
out
push
and
inc
lods
in
loopne
test
cmp
mov
add
popf
push
filds
or
bound
cld
jmp
jb
inc
push
jns
cwtl
jmp
fisttpll
sbb
sbb
cmc
push
jmp
fstl
into
xor
ret
lea
xor
fmull
sarl
add
pusha
mov
sarl
clc
jmp
xor
add
push
dec
push
incl
test
fistpll
mov
mov
lcall
push
or
or
stos
adc
aaa
mov
fisttps
mov
outsl
lock
out
cld
scas
mov
mov
adc
movsl
test
jne
sbb
xor
pushl
test
cwtl
pop
push
fstp
jne
stc
xor
push
xlat
push
sahf
addr16
in
je
incl
push
or
adc
mov
and
mov
inc
pop
lcall
lcall
pop
jno
xchg
das
or
fcoml
sub
jnp
jmp
mov
out
pop
decl
add
jge
imul
inc
pslld
popf
sbb
pop
call
jb
jo
mov
and
aaa
clc
loop
lods
add
movsb
jl
inc
loope
mov
dec
inc
popl
rcrl
call
xchg
fidivrl
xchg
cmp
dec
int3
push
mov
fisubl
mov
inc
test
mov
out
pop
not
fsubl
rcrl
sub
pop
test
insl
cmp
push
pop
stos
mov
test
add
loop
pop
push
insl
jns
setge
cmpsb
xchg
push
lret
lea
pusha
xorl
cltd
push
in
fucomi
adc
cmpsl
jle
shrb
adc
je
orl
mov
mov
scas
pushf
cmp
call
inc
rcl
cmp
lea
push
cmp
jns
cld
sar
ss
pusha
push
push
sbb
xchg
jmp
orb
shl
lea
xchg
mov
ljmp
rcll
in
icebp
ror
lea
mov
cmpsl
adc
shl
pushf
sub
call
or
push
dec
mov
mov
enter
aam
fistps
stc
or
inc
pop
dec
sbb
or
rorl
shl
sub
add
lock
lea
ljmp
test
cld
repz
out
xlat
pop
mov
push
adc
shl
ds
outsl
loop
outsb
add
out
daa
push
pushf
and
or
jl
xor
cmp
pop
or
or
mov
imul
clc
fnstsw
sbb
clc
add
vcvttpd2dqy
push
xor
cmp
movsl
mov
fwait
movsl
lret
enter
dec
inc
xchg
pop
sahf
stc
popf
cli
cmp
jg
dec
jne
push
dec
loope
inc
ret
in
fstl
adc
filds
shr
mov
inc
cmpsl
ss
cmpsl
push
test
dec
rcl
setle
imul
into
cmc
shl
and
pop
adc
adc
jmp
arpl
outsb
push
je
push
js
jmp
push
call
call
add
ret
js
fimuls
icebp
add
call
outsb
xchg
xor
jo
sar
pand
out
not
test
arpl
fisubrl
decl
mov
sub
aam
scas
call
ja
outsb
or
test
sti
orl
jnp
push
das
sbb
jne
mov
jecxz
fwait
add
or
xchg
stc
loopne
lock
mov
out
xlat
ss
dec
pushf
cmp
testb
push
fs
push
out
push
xor
jbe
push
stos
xor
push
jne
jmp
in
stc
rolb
ror
into
push
pusha
and
mov
shlb
mov
jmp
cmp
or
pop
push
cmp
adc
push
sbb
in
push
cli
jnp
add
cmp
xorl
jae
insb
mov
mov
testb
mov
popf
pusha
leave
mov
push
fwait
cmc
add
mov
push
test
lret
mov
inc
call
sbb
xchg
clc
and
lods
sarb
in
sub
call
pop
or
jbe
dec
pop
cld
in
pusha
push
cmp
aaa
sbb
sbb
jl
pusha
clc
in
mov
pop
incb
pushf
inc
xchg
in
push
call
xchg
lea
jns
jns
mov
ljmp
mov
aaa
pop
jnp
aad
cli
je
mov
or
lret
std
shl
pop
pop
jmp
jmp
call
fsubr
jne
ret
sbb
xorl
mov
jle
test
je
popa
jmp
jno
cmp
pop
xor
or
sub
mov
rsqrtps
mov
rcll
test
or
iret
ror
dec
jmp
decl
mov
jmp
adc
arpl
inc
pop
shrl
xor
int
mulb
test
push
cmp
lea
sub
pop
mov
push
mov
outsb
into
add
sar
cmp
rol
dec
xchg
or
pop
outsl
outsl
fldt
pop
rol
add
pop
movb
xchg
test
in
lds
push
out
cmp
mov
push
xor
cwtl
rorb
mov
rol
sbb
cmp
cwtl
inc
in
ss
adc
sub
aad
shr
add
faddl
add
ja
in
dec
pop
iret
or
aaa
cwtl
fsub
into
clc
jmp
mov
pop
into
mov
out
inc
lea
ja
lret
fcomps
push
pop
push
leave
adc
in
insl
lds
xor
shl
or
out
add
push
cli
out
popa
cmp
pusha
loope
inc
lret
pushf
jno
inc
add
xor
pop
add
sub
cmp
loope
fstp
stos
loope
call
sti
cmp
or
in
mov
js
jo
mov
ss
mov
push
sbb
cmp
stos
jmp
or
rorl
sti
xchg
mov
mov
mov
neg
mov
push
xor
insb
fcom
rolb
out
setnp
clc
dec
lock
cmc
mov
or
jb
pop
outsb
bswap
and
shr
fsubs
ret
mov
inc
add
inc
fmuls
pusha
ret
sub
shrl
jp
test
ljmp
xor
in
jmp
stos
sahf
add
lods
mov
or
mov
mov
and
jno
or
add
cmp
test
or
push
xor
hlt
popf
rorb
adc
ret
mov
mov
mov
sub
sub
ret
xchg
movsb
add
or
andb
sbb
xchg
xor
out
ret
call
jmp
lock
adc
mov
call
dec
aas
fisttps
movsl
out
outsb
ja
insb
test
int
dec
mov
pop
mov
push
and
ja
out
xchg
mov
pop
outsl
mov
test
lahf
rol
clc
not
xchg
push
push
mov
aad
jmp
jmp
cmpb
mov
or
jge
cs
push
inc
inc
rclb
cmp
repnz
or
sbb
fstl
negl
sub
inc
jp
lahf
pop
push
xor
mov
pop
mov
repnz
fistl
pop
lock
xchg
push
lock
loopne
xchg
xor
cmc
xchg
cmp
mov
std
stc
push
jmp
roll
loopne
pusha
mov
pushf
mov
push
xchg
jmp
add
mov
mov
mov
jbe
xchg
imul
les
rclb
jmp
inc
sbb
scas
call
ret
aam
push
sar
and
sub
iret
std
mov
andl
rcl
jg
decl
push
ror
push
rol
jmp
jl
shl
jmp
cmp
test
pop
mov
or
pop
push
dec
mov
add
mov
mov
jl
lea
test
jp
fistpll
inc
mov
adc
cmp
sar
and
mov
rolb
push
repnz
clc
inc
adc
fcomi
ss
sbb
pop
clc
pop
xchg
std
ljmp
jbe
mov
ret
sar
pop
shlb
shl
mov
out
out
cli
mov
cli
sub
repnz
pusha
inc
icebp
adc
stc
nop
js
add
into
xor
sub
push
call
subb
and
testb
or
add
mov
not
mov
mov
lcall
xchg
lea
jmp
push
pop
jg
push
push
push
inc
cmp
fimuls
inc
mul
cli
js
adc
pusha
fs
pusha
sub
push
or
push
dec
mov
leave
fsubrl
inc
movsb
push
or
test
mov
xchg
adc
call
gs
add
cld
add
xchg
cmp
mov
cmc
data16
fnstsw
jbe
call
fdivr
or
incl
xlat
sub
call
inc
dec
fistps
and
test
popf
in
xor
arpl
daa
adc
jle
ss
sub
push
testl
add
pop
int
xchg
lret
leave
sbb
push
or
jmp
out
push
cs
imul
push
sbb
std
cli
ret
fdiv
fisubrs
add
sbb
lret
fdivrp
mov
cli
rdpmc
aas
ja
dec
jle
pop
cld
push
pop
nop
pop
stos
or
stc
xchg
arpl
test
xchg
xchg
mov
jnp
subl
aas
pop
fmull
jnp
daa
jl
or
addr16
or
jae
iret
sub
dec
aas
jnp
mov
lret
mov
xor
inc
in
mov
sbbl
ret
ficomps
xor
sbb
int
adc
aas
sub
pushl
mov
mov
or
insb
repz
and
sbb
std
es
pop
ja
add
aas
xor
fsub
aas
dec
mov
out
lock
cmp
or
adc
out
in
mov
or
pop
jnp
mov
arpl
iret
fsubp
mov
push
inc
out
int
sbb
outsl
sahf
add
aas
pop
js
or
xchg
mov
testl
imul
lock
sub
das
or
addr16
aas
push
lock
mov
aas
fsubp
lock
adc
fidivrs
negl
dec
out
aas
push
ja
jle
sbb
push
mov
mul
outsl
pop
cmpsb
or
mov
or
adc
out
icebp
fidivrs
xor
cmpsl
sbb
dec
or
or
outsl
sbb
add
scas
outsl
sbb
mov
pop
sti
jge
or
sub
out
xchg
icebp
es
add
jmp
and
sbb
pop
ret
lahf
outsl
mov
push
jno
dec
lods
repz
jl
jbe
stos
pusha
mov
ds
mov
lods
adcl
stc
sub
cmc
test
por
repnz
lods
and
cmpsl
insb
cmpsb
and
ret
jns
xchg
outsb
mul
call
or
or
xchg
sub
shl
mov
ds
cmc
add
call
repz
dec
stos
aad
cmp
sub
iret
push
push
divl
inc
lds
aaa
shrl
loopne
loop
inc
push
push
adc
outsb
ret
push
mov
addb
mov
or
in
xor
sbb
xor
fbld
in
push
lcall
hlt
ret
push
lea
and
push
or
jg
aam
ljmp
clc
push
cwtl
lock
pusha
loopne
jp
jge
cmp
sbb
xor
in
adc
dec
jmp
adc
call
inc
pusha
imul
out
mov
adc
cmp
fyl2xp1
sub
mov
in
xchg
or
xchg
sbbl
sbbb
push
pushf
pop
lock
sbb
out
jnp
out
add
mov
shlb
sub
add
push
arpl
or
adcb
add
cmp
movsl
iret
add
shr
add
or
push
cmc
mov
xor
cmp
pop
lahf
sti
pushf
lock
jae
push
in
add
call
add
loope
sbb
dec
sbb
pop
cmp
cmp
add
fiadds
loopne
loope
adc
lahf
push
call
mov
adc
jg
pop
push
shr
loop
orl
stos
push
pop
cmp
push
jl
inc
scas
in
loope
ret
mov
sbb
push
jmp
pop
cmc
mov
dec
mov
dec
lds
adc
fadds
daa
rol
pop
loop
mov
fnstenv
gs
clc
test
sbb
je
jo
outsb
pusha
mov
jmp
pop
inc
jmp
mov
icebp
mov
jecxz
mov
push
call
xor
adc
add
inc
pop
ljmp
xchg
ret
sbb
inc
mov
fnstcw
jmp
call
adc
out
sbb
stc
pop
jne
push
inc
push
repz
mov
push
add
pop
das
or
addr16
filds
lea
sbb
notb
cli
or
js
fcmovu
in
cmp
clc
ffree
push
lret
jne
sarl
cmp
cltd
js
gs
inc
jg
pop
mov
fstpt
dec
out
xor
xchg
call
test
mov
in
jle
pop
jb,pn
loop
push
mov
jae
adc
push
sbb
test
mov
lea
fisubs
daa
mov
stc
adc
int3
std
fcmovnb
sub
xlat
ljmp
adc
inc
dec
shlb
rcl
push
incb
fsubs
loope
mov
setne
aaa
xor
loop
test
ljmp
jmp
jb
in
imul
cwtl
movsl
push
mov
loopne
call
xor
sahf
mov
push
push
push
inc
outsb
hlt
ret
sbb
adc
ss
stos
dec
jne
icebp
sbb
fstpt
fstps
test
pop
mov
mov
xchg
jle
dec
jmp
jo
mov
idivb
pop
sbb
aad
dec
xor
ss
icebp
dec
or
add
movsl
roll
sub
dec
jnp
hlt
ja
cmp
jne
mov
orb
loope
imul
jmp
test
es
jbe
popa
pop
push
and
cmp
leave
sbb
dec
and
pop
xlat
fmuls
lods
mov
mov
push
test
arpl
sub
xlat
xor
fadds
mov
cs
decl
mov
push
adc
int
mov
dec
int3
sahf
push
or
movsl
push
and
cltd
inc
stc
jg
jmp
sub
xor
lret
pop
scas
leave
sub
xor
sub
mov
pushf
xor
shrb
push
repz
and
pop
in
clc
std
js
js
lret
jne
inc
xor
iret
add
push
mov
mov
scas
cmpsl
jp
icebp
out
scas
cmp
ljmp
sahf
aad
lret
xor
mov
xchg
aas
mov
add
or
mov
push
push
jnp
sbb
ds
int3
jno
jl
repz
jnp
rolb
ljmp
add
fidivrs
out
insb
mov
mov
dec
sbb
lret
sbb
cmp
xchg
jp
add
sbb
mov
inc
dec
pop
pop
and
inc
sub
not
push
inc
je
shrl
rol
add
adcl
push
inc
add
out
out
lock
ficompl
mov
mov
test
hlt
push
hlt
add
push
push
shlb
pop
fimuls
add
imull
xorl
push
aad
mov
rcrb
pop
dec
ja
sbb
pop
into
mov
push
push
xor
sub
inc
pop
mov
loop
jge
clc
stos
push
cltd
jne
cltd
dec
cmp
lock
add
mov
int
lds
cmc
sub
add
sub
dec
gs
repz
decl
adc
pop
ja
outsl
and
std
repz
and
jns
stc
add
push
ds
call
fildll
pop
jns
sub
push
sbb
cltd
lock
sahf
push
decl
jno
pop
in
gs
inc
inc
inc
bound
jo
push
jle
mov
ret
pop
inc
pop
rcrl
mov
cltd
sub
pushl
mov
sub
out
or
add
adc
je
add
in
ljmp
and
push
jecxz
inc
push
jnp
es
mov
inc
decl
int3
pusha
mov
icebp
std
jp
movsl
sarb
cli
jge
aas
or
clc
out
push
push
push
xchg
fwait
movb
sub
aaa
ljmp
adc
push
iret
push
jns
hlt
mov
das
adc
and
sub
sub
inc
pop
shrb
loope
aas
test
and
mov
pushf
xchg
jae
call
xor
cmp
xchg
pop
shrb
adc
jo
xchg
sar
incl
movsb
xchg
jge
nop
pop
add
push
adc
frstor
adcl
cs
ret
aam
lcall
mov
push
cmp
mov
mov
mov
repz
hlt
dec
pop
jecxz
xor
mov
jmp
mov
and
fsubrp
das
movsb
aas
test
jle
in
ljmp
inc
pop
or
push
je
popa
mov
aas
sbb
loope
or
push
iret
outsb
cmp
js
leave
popa
push
mov
dec
xor
iret
xchg
test
insb
jnp
cmp
dec
stos
jo
inc
mov
aaa
mov
adc
rolb
dec
jle
cmc
mov
movsl
or
dec
xchg
xlat
push
aas
dec
andl
outsb
aad
mov
cmp
mov
rol
dec
das
imul
repz
dec
cmpsb
repnz
add
in
das
inc
pop
test
inc
mov
out
xlat
mov
push
lock
std
xchg
outsb
dec
mov
ret
jge
push
jns
int
sub
mov
pop
repnz
pushl
stos
cld
std
jge
cltd
in
or
mov
push
enter
shll
call
test
inc
fstl
add
loopne
inc
push
ljmp
inc
push
mov
std
inc
mov
fsubs
jmp
sbb
dec
insl
mov
add
and
cmp
incl
add
enter
push
mov
in
repnz
jge
sub
ljmp
sub
lcall
or
xchg
shll
add
sub
mulb
enter
decl
loop
ror
fiadds
xchg
xchg
push
in
jo
das
lret
incl
cs
leave
jg
sub
pop
adc
push
cld
jg
mov
dec
dec
inc
and
aam
push
fbld
adc
incl
sub
mov
inc
outsb
arpl
lods
movsb
jne
mov
xchg
lret
sbb
test
pop
andb
or
rorb
mov
repnz
fisttpll
data16
testl
jo
shrl
jg
xchg
frstor
push
mov
dec
xchg
nop
sub
fidivl
movsb
cmpsl
jmp
dec
stos
test
jg
aas
inc
pop
rorl
xchg
dec
inc
inc
and
stc
lcall
decb
dec
call
lcall
data16
das
jg
fdivrs
mov
outsl
sti
push
std
dec
pop
loopne
or
cs
xchg
dec
cld
dec
push
pop
sbb
mov
jle
popf
out
call
mov
ret
jbe
jecxz
into
iret
iret
jge
addr16
jns
push
out
add
pop
jge
mov
jno
dec
inc
lcall
push
and
aam
pop
shl
sub
test
xor
adc
in
pop
lcall
push
sub
adc
cmpsb
je
pop
stos
lods
mov
sar
jl
sbb
and
rcrb
rorl
inc
xchg
addr16
mov
ret
jnp
repz
or
popa
mov
nop
ss
pushf
pushl
mov
enter
and
aam
pop
jecxz
sub
push
test
mov
mov
inc
and
push
push
xor
mov
jge
or
mov
les
loopne
adc
dec
adcl
lret
inc
cmp
push
add
iret
ljmp
pop
pop
jns
das
aas
ja
enter
jge
cmp
roll
and
aam
pop
int
cld
call
adc
imul
add
and
inc
mov
inc
xor
fbstp
aam
fdivrl
xchg
or
xlat
and
and
dec
pop
mov
cltd
flds
les
mov
aas
xor
pop
pop
daa
js
in
ljmp
ljmp
outsb
sbb
loope
cmp
dec
jmp
arpl
idiv
int
fidivrl
movsb
mov
jnp
in
dec
and
test
jp
incl
addr16
push
mov
xor
sub
cs
mov
shr
adc
push
cmpsl
sbb
lcall
mov
imul
push
hlt
fisttpll
xchg
loop
push
ja
sub
inc
inc
pop
icebp
dec
mov
mov
mov
xchg
arpl
das
jecxz
pusha
jg
mov
rol
popf
outsb
subl
iret
pop
xorps
das
fdivrl
icebp
cmp
pop
and
jmp
repnz
pop
into
out
fstpl
mov
test
xchg
outsb
mov
push
inc
inc
inc
movsb
insl
inc
mov
pusha
clc
mov
or
das
jne
jecxz
aad
pop
test
sub
int3
and
jp
jns
xor
iret
pop
pop
es
push
pop
into
dec
daa
inc
mov
lret
dec
aaa
xchg
sbb
dec
adc
mov
loopne
pop
pushl
and
test
cmp
xchg
icebp
inc
into
icebp
cmp
loope
mov
fisubrs
and
pop
mov
inc
pop
cs
rclb
push
lcall
fistpll
ja
daa
pop
adc
into
outsb
arpl
dec
push
mov
dec
push
outsl
jle
call
nop
pop
insb
in
sbb
movsb
scas
in
ljmp
aas
js
jg
pushl
xchg
or
fdiv
imul
cmc
cltd
call
add
mov
add
out
rcll
lcall
mov
outsb
notl
mov
lret
xchg
inc
outsl
sti
repz
jmp
jl
jg
jmp
push
inc
jp
xchg
push
jmp
cmpsb
out
ds
fisubrs
subb
cld
dec
data16
lahf
jp
std
xchg
sub
adc
int3
outsb
test
add
in
mov
dec
popf
jbe
pushf
push
outsb
movsl
insb
sbb
xor
jp
stos
pop
ret
ljmp
xchg
xchg
std
or
cmpsb
loopne
jle
mov
das
std
in
xchg
aad
insl
cs
je
shr
test
mov
mov
scas
scas
shlb
dec
fdivr
lcall
inc
sub
pop
js
and
jle
cmp
lcall
arpl
inc
ja
push
jp
sub
pop
outsl
in
pop
mov
lret
adc
sub
push
xchg
jmp
pushw
mov
dec
jg
ja
cs
and
mov
lock
addr16
xchg
aas
push
lea
pop
cvtdq2ps
dec
es
pop
cmp
stc
sbb
enter
addl
adc
cmp
bound
aaa
cs
mov
mov
insb
lock
xor
lods
lea
sysexit
ds
in
adc
sub
adc
jmp
inc
dec
aaa
fisttpl
add
or
fildll
dec
sub
clc
call
and
loope
xor
dec
test
pushf
cwtl
outsl
lds
fidivl
cli
add
ror
inc
mov
inc
test
pushl
adc
fwait
jl
nop
and
aad
call
leave
out
loop
cs
ss
fsubrl
orb
inc
dec
mov
movsb
fcmovnb
bnd
sets
or
out
test
push
aaa
in
sbb
adc
mov
stc
lret
addr16
das
cld
fistpl
jmp
mov
out
ljmp
mov
lret
outsb
divb
scas
insb
push
mov
dec
mov
xchg
xor
aaa
icebp
pushl
movsb
stos
out
dec
stos
mov
jmp
fbstp
mov
shll
xchg
or
aas
decl
push
jo
outsb
push
leave
call
andl
mov
dec
or
repnz
push
jp
mov
mov
cli
or
call
aas
inc
and
push
xchg
aaa
icebp
incl
daa
mov
pop
push
scas
jmp
cmp
stos
adc
pop
incb
xchg
loopne
dec
xchg
int3
mov
jge
incl
iret
push
aas
and
sbb
insb
int
ja
sub
dec
scas
xchg
aam
push
lds
xlat
add
test
xchg
into
jecxz
adc
mov
add
lock
dec
mov
add
call
dec
adc
inc
adc
jg
mov
rcll
jbe
cmc
mov
jne
pop
lcall
daa
lret
cmp
jnp
notb
push
outsl
call
xchg
je
lds
fidivrl
pop
inc
stos
jp
aaa
dec
jmp
std
mov
xchg
mov
push
mov
es
rcrb
into
and
rcl
xadd
aaa
std
rorl
or
andb
iret
push
and
xchg
push
inc
fildl
pop
adc
inc
dec
adc
test
or
jp
xorl
lahf
xchg
in
jle
cmpsb
cs
std
and
or
pop
insl
pop
lock
movsl
mov
insl
jge
icebp
dec
dec
inc
jmp
lret
xchg
aaa
mov
xor
sarl
add
xchg
adc
push
or
outsb
xchg
iret
or
adcb
bound
fstpl
add
int3
ds
ds
ds
or
adc
aas
sbb
and
sub
xor
cmp
inc
aas
dec
aas
push
aas
pop
aas
fs
push
aas
mov
or
adc
inc
xor
push
xor
xor
xor
ja
xorb
xor
jb
pushl
xchg
mov
mov
xor
xor
xor
xorb
xor
xor
pushl
hlt
xor
xor
xor
xor
stos
xor
ret
xor
lock
movsl
xor
xor
inc
ss
cmpsb
xlat
arpl
push
jmp
xchg
cmp
cmp
cmp
cmp
cmp
cmp
outsb
cmp
mov
icebp
cmp
cmp
cmp
sub
jns
mov
sub
cmp
inc
cmp
ljmp
jbe
jl
lods
cmp
cmp
cmp
cmp
ljmp
mov
insb
push
and
in
mov
aaa
ja
jge
xchg
cmp
adc
ss
cs
cmp
cmp
fwait
fistpl
je
fst
cmp
cmp
cmp
dec
cmp
pop
jg
cmp
sarb
aad
loopne
in
sbb
push
cmp
jo
test
mov
mov
cmp
sti
cmp
sub
add
push
aaa
cmp
das
pop
xor
call
stos
xor
xor
xor
xor
xor
xor
xor
mov
xor
inc
xor
jbe
xorl
xor
mov
mov
push
dec
xor
xor
xor
xor
xor
xor
xor
xor
jns
jg
test
cmc
pushl
cld
xor
xor
xor
dec
enter
fnstenv
xor
pop
xor
mov
jle
xchg
xor
mov
mov
xor
pushl
divl
jnp
mov
pushl
push
cmp
pushl
cmp
cmp
cmp
cmp
cmp
cmp
mov
pop
decl
cmp
cmp
cmp
cmp
dec
std
cmp
cmp
cmp
cmp
cmp
popa
cmp
cmp
sbb
lcall
or
xor
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
pushl
jns
fnstsw
pop
ds
dec
ds
ds
bound
cmpb
mov
xchg
idivl
pop
pop
clc
ds
aaa
aas
inc
aas
dec
aas
pop
aas
jae
jo
fdivs
pushl
cmp
xor
xor
mov
dec
lahf
xor
xor
xor
xor
xor
xor
xor
xor
xor
ret
xor
inc
xor
push
xor
jb
js
mov
cld
fistps
xor
aaa
ss
xorl
shlb
ss
and
push
aaa
jo
mov
aaa
pop
out
data16
cmp
cmp
add
xchg
out
outsb
lock
repz
cmp
jne
lea
cwtl
cmp
out
cmp
sbb
cmp
cmp
cmp
cmp
cmp
cmp
movsl
hlt
cld
cmp
cmp
inc
cmp
aas
cmp
jb
call
aas
test
mov
aas
ja
jno
outsl
add
xor
pop
xor
ljmp
in
xor
xor
xor
xor
xor
xor
xor
xor
shlb
xor
xor
fcomip
jmp
add
or
xor
xor
xor
xor
xorb
xor
lcall
les
int3
xor
xor
test
or
das
out
adc
sbb
dec
sar
pushl
pop
aaa
xlat
aaa
loop
jmp
cmp
cmp
cmp
cmp
cmp
dec
std
jmp
std
cmp
cmp
cmp
cmp
cmp
aaa
negl
lods
sbb
loope
dec
cmp
cmpl
mov
mov
push
cmp
cmp
pushl
cmp
cwtl
cmp
cli
cmp
push
ds
and
sub
sbb
ret
pusha
ds
ds
jno,pt
nop
mov
ds
dec
xlat
fdivrl
or
xor
nop
pop
pushf
dec
mov
ja
xor
xorb
xor
imull
xor
inc
into
xor
pop
xor
xor
xor
xor
jno
js
jle
mov
scas
xor
xor
xor
lock
incl
xor
xor
xor
mov
lahf
js
mov
mov
aaa
dec
aaa
push
call
mov
aaa
lret
aaa
add
cmp
cmp
inc
cmp
cmp
cmp
je
jns
sub
cmp
cmp
clc
enter
loopne
repz
cmp
cmp
cmp
cmp
ljmp
add
cmp
jns
cmpb
cmp
cmp
or
cmp
inc
cmp
jg
mov
cmp
icebp
cmp
cmp
xchg
cmp
pop
cmp
cmp
cmp
lcall
cmp
cmp
cmp
cmp
cmpl
sbb
jge
jg
cmp
cmp
cmp
cmp
pop
cmp
cmp
jae
icebp
ja
cmp
cmp
cmp
dec
sarb
cmp
cmp
push
push
cmp
pushl
hlt
cmp
push
cmp
jle
test
incl
sarl
cmp
cmc
pushl
xor
mov
cmpl
outsl
mov
popf
and
test
mov
ds
ds
outsl
clc
lcall
clc
or
in
aas
ds
dec
aas
pop
aas
jbe
mov
aas
mov
fwait
sbb
xor
xor
jb
jge
test
mov
call
xor
xor
adc
sub
test
scas
xor
fwait
lcall
xor
xor
lea
cmpsl
xor
xor
xor
xor
xor
xor
rdpmc
adc
scas
mov
rorl
push
xor
imul
xorl
xchg
xor
dec
lds
out
clc
pop
mov
inc
xor
out
icebp
lods
inc
ss
sub
push
ss
jge
xchg
ss
add
fldenv
jg
test
ja
aaa
xchg
aaa
xchg
adc
roll
sti
cmp
mov
and
cmp
xchg
cmp
cmp
cmp
cmp
cmp
rol
lods
cmp
outsl
fnstcw
xor
fwait
cmp
cmp
cmp
cmp
cmp
dec
cmp
sbb
cmp
inc
ds
ds
ds
aas
and
inc
aas
mov
mov
rorl
lret
out
xor
mov
jg
lret
sbb
daa
xor
xor
xor
dec
xor
push
xor
lcall
incb
xor
xor
xor
xor
xor
xor
xor
decl
push
xor
xor
xor
xor
xor
pop
xor
incl
sbb
lret
xor
xor
xor
mov
lock
push
xor
xor
xor
jmp
sar
pushl
xor
xor
xor
xor
xor
xor
xor
xor
psubd
rcr
dec
sbb
push
int3
loopne
pop
mov
add
add
sbb
cmp
loop
ficoms
cmp
cmp
add
push
gs
pop
int
out
das
adcl
ljmp
sbb
adc
aaa
push
pop
nop
mov
mov
mov
jge
je
dec
pop
shlb
sti
mov
mov
adc
cmp
jno
inc
inc
iret
testl
repnz
cld
push
cld
sub
das
inc
mov
pusha
add
mov
jo
add
cs
mov
add
sbb
jnp
add
aaa
add
xchg
adc
cmp
pop
mov
popf
lret
adc
out
mov
incb
jb
jb
add
inc
and
inc
xchg
xor
sbb
push
push
dec
inc
and
shrl
and
xor
pusha
shlb
adc
mul
out
jle
pop
add
mov
lcall
das
cmp
fmulp
mov
shll
inc
adc
pusha
xorl
lret
shll
cli
arpl
sarb
adc
push
inc
in
jae
add
mov
inc
push
and
out
or
add
js
lock
ja
dec
adc
in
gs
sub
push
push
inc
and
and
and
lock
add
inc
and
cmp
and
and
in
xchg
and
and
or
cmpsl
nop
inc
and
and
mov
and
sub
xchg
add
add
jb
jns
or
mov
jb
cmp
and
or
add
and
or
sub
cwtl
aam
mov
dec
and
and
cltd
and
or
xchg
xor
push
dec
negb
aas
push
and
test
sbb
sub
and
idivb
inc
stos
cmpsb
sub
push
adc
xchg
insl
imul
mov
push
sub
jbe
xor
fcompl
xchg
pop
sbb
mov
add
adc
cs
fcomps
mov
scas
adc
add
or
cli
dec
fsubp
insl
xchg
pop
sub
std
push
fildl
and
adc
and
cmp
inc
and
call
out
sti
std
filds
insl
inc
sub
dec
sbb
push
cmp
pop
ret
daa
or
xchg
sbb
and
push
and
jb
inc
and
mov
push
enter
stos
or
lret
add
mov
pop
xchg
mov
add
inc
shll
push
mov
jo
xor
push
and
insb
mov
add
push
adc
and
inc
add
cmp
jl
inc
pop
mov
mov
lock
mov
inc
scas
xchg
icebp
idiv
sbb
mov
icebp
addr16
mov
cwtl
mov
push
test
jne
pop
pop
push
sbb
push
mov
imul
sbb
sbb
mov
mov
stos
sbb
sbb
inc
inc
mov
jb
or
adc
lods
std
enter
jae
std
scas
std
jnp
push
lds
std
pop
and
sbb
std
mov
mov
mov
jb
bound
cmpsb
imul
add
and
popa
jmp
aam
inc
cmp
push
mov
jmp
out
mov
push
cmp
adc
mov
stc
mov
push
or
add
ret
mov
pop
mov
fcomps
fs
jb
gs
xchg
outsl
outsb
outsb
bound
pop
xchg
jae
cs
shll
fldenv
dec
outsb
insb
popa
pop
xchg
gs
jne
arpl
add
xchg
gs
aaa
rcll
sbb
loopne
sub
subl
push
add
fs
xchg
insb
outsl
jb
movsb
or
sbb
fisubl
enter
xchg
shlb
jne
inc
movups
sub
jmp
and
xor
sbb
and
push
xchg
ret
xchg
decl
mov
push
fmull
xbegin
dec
push
adc
sub
adc
out
fadds
xor
push
add
push
jns
ret
in
adc
outsl
aaa
or
sbb
stos
enter
add
outsb
mov
xor
aam
add
fdivs
ja
inc
sarl
loopne
sbb
add
inc
fwait
add
sbb
lods
es
dec
add
pop
lahf
and
mov
cwtl
data16
or
ja
add
mov
push
sbb
movsbl
and
cmovs
call
es
lock
movsb
cwtl
xchg
cmpl
neg
pop
push
into
push
pop
xor
pop
mov
pop
jbe
or
movl
or
mov
lods
dec
or
jo
add
sbb
pop
add
dec
add
add
or
pop
repnz
or
and
and
and
xor
dec
enter
enter
dec
and
repnz
push
and
push
add
cmp
mov
sbb
xor
daa
pop
insb
xchg
pop
andb
pushf
adc
xor
shrb
or
add
xor
rclb
xor
repnz
xchg
rclb
inc
xor
popa
push
sub
jg
inc
or
pop
push
xchg
rcrl
lret
push
xor
mov
xchg
pop
andl
mov
inc
fcomip
xchg
mov
inc
jae
cmp
mov
add
nop
jae
push
adc
cmp
jb
and
sbb
inc
outsl
js
push
movsb
add
add
dec
and
add
inc
mov
sbbl
lret
icebp
xor
incb
subl
mov
adc
std
cmc
and
sub
mov
mov
lods
mov
xchg
adc
push
les
insb
cmp
mov
add
subl
dec
pop
xchg
int
int3
adc
pop
sub
insl
sub
sbb
and
push
imul
push
sbb
xorb
cwtl
xor
ss
pop
inc
int3
shll
or
jo
jmp
xlat
je
jle
add
dec
shll
leave
add
inc
xchg
and
cmp
add
out
dec
lea
lods
int
or
cmpsb
or
outsb
es
add
or
sbb
insl
jo
dec
rcll
inc
lds
lret
adc
mov
setb
jbe
push
adc
inc
stc
adc
push
ret
inc
test
push
xlat
fs
mov
jne
or
mov
adc
sbb
mov
xchg
adcb
call
jnp
xor
mov
les
addl
jo
xchg
or
insb
pop
adc
or
sub
je
xor
negb
js
dec
lret
fdiv
adc
stc
add
sub
imul
jns
add
neg
add
mov
in
sub
outsl
adcb
enter
xor
scas
mov
pop
xchg
aam
int3
add
lret
cmp
push
sub
jmp
ja
cmp
dec
add
cmovns
inc
or
add
imul
mov
add
xlat
or
add
push
stos
mov
pop
je
into
push
push
gs
testl
xor
jecxz
fwait
jmp
pop
inc
and
xor
jae
int
rclb
and
popa
jns
popa
insl
cwtl
jns
and
add
addr16
gs
imul
ss
push
sub
push
adc
int3
xor
and
and
xor
add
xchg
insb
popf
mov
ret
xchg
pop
dec
or
lds
jge
jo
popf
addr16
mov
add
xchg
pop
xor
xor
mov
inc
push
sub
frstor
or
daa
es
or
xlat
outsb
jae
addr16
xchg
mov
daa
jbe
mov
inc
aaa
daa
fs
outsl
and
pcmpeqw
jae
pop
ja
adc
inc
push
fistl
pop
imul
and
in
test
outsb
push
insb
cmpsl
xchg
adc
out
add
mov
aas
stos
inc
shlb
xor
mov
add
xor
xor
cld
decl
xor
mov
xor
xor
xor
xor
xor
inc
pop
xorb
xor
fs
lea
mov
inc
cld
pushl
cmp
inc
aaa
insl
aaa
je
mov
scas
aaa
mov
cmp
adc
cmp
jg
lcall
cmp
outsl
mov
dec
cmp
in
cmp
aas
xchg
cld
ljmp
xchg
mov
lret
cmp
cmp
cmp
cmp
sarb
loop
adc
inc
ds
ds
test
add
stos
fs
push
inc
dec
sub
sbb
add
fcmovbe
add
push
adc
sbb
pop
mov
dec
inc
lret
sbb
pminsw
inc
mov
add
dec
add
and
add
mov
pop
mov
dec
test
xor
popa
inc
inc
jae
out
daa
add
jbe
mov
mov
test
add
mov
jl
dec
mov
adc
add
andb
xchg
jne
and
ds
xchg
add
aam
push
or
and
dec
stos
mov
sbb
add
imul
insb
dec
int
and
mov
adc
mov
xchg
nop
das
or
out
add
inc
xchg
add
insb
xchg
sbb
out
add
adc
inc
inc
add
jmp
push
fs
hlt
inc
mov
mov
add
xor
mov
nop
push
ror
push
push
mov
sbb
inc
nop
hlt
pusha
pop
dec
xchg
negb
add
outsl
xor
add
and
add
add
add
add
inc
add
call
int
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
