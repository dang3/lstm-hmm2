imul
pop
push
lcall
int
imul
pop
xlat
xor
sbb
add
repnz
shll
add
sahf
and
xor
mov
pop
sbb
jle
lahf
dec
gs
gs
xor
cs
insb
push
push
push
jae
sbb
jae
gs
push
mov
fistpl
jo
outsb
sub
add
ja
fnstsw
outsl
push
je
jns
or
add
or
fistpll
xor
inc
arpl
outsl
data16
std
sti
ret
bound
cmp
bound
dec
push
inc
dec
push
mov
push
imul
inc
gs
jne
sbb
pop
xor
ljmp
outsl
imul
adc
and
imulb
push
push
mov
mov
push
mov
sub
andb
lea
push
push
in
mov
icebp
push
mov
cs
hlt
cmc
inc
idivb
adc
arpl
mov
jne
je
paddb
and
push
lret
mov
out
call
sbb
call
adc
int
mov
ror
ret
pushl
and
test
mov
or
push
push
pusha
pushf
popf
inc
inc
nop
inc
std
fsubr
sti
popa
nop
movzwl
push
ss
or
or
pop
mov
and
cmp
pop
adc
gs
and
pop
or
leave
cmp
jne
dec
sbb
shr
cmpb
jne
cmpb
jne
cmp
jbe
xorb
out
out
mov
jb
les
push
pop
pop
pop
pop
pop
lcall
aas
mov
mov
negb
or
sahf
pop
push
push
push
add
ja
sbb
adc
ljmp
fisttpll
incl
imul
daa
lea
push
push
or
jae
gs
je
mov
aad
sub
mov
dec
sub
adc
fwait
add
lea
lcall
insl
out
mov
in
pop
dec
adc
fucomp
sbbb
push
add
faddl
orl
push
and
in
aaa
test
pop
xor
pop
rcpps
testl
add
adcb
cmp
xchg
add
cld
push
adc
xlat
mov
adc
push
mov
push
or
push
outsl
call
cmpl
jne
jnp
sub
cld
mov
in
fisttpll
push
or
push
dec
pop
pop
lock
sub
mov
and
sub
add
mov
mov
cmp
push
or
xlat
or
gs
push
dec
jne
push
cwtl
sub
ret
xchg
mov
test
push
or
js
lcall
lea
clc
add
ja
jnp
stos
mov
push
lods
cmp
dec
mov
push
arpl
jge
enter
mov
popa
jnp
and
sbb
mov
in
imulb
insb
cmpsl
pop
mov
push
sbb
xor
push
mov
push
int
adc
adc
cltd
in
sub
cld
add
sbb
adc
inc
and
inc
jnp,pn
hlt
adc
adc
mov
adcb
cmpsb
inc
or
push
gs
cli
lock
adc
imul
addr16
pop
outsb
mov
aaa
cmp
call
ret
rorl
push
push
push
push
scas
ret
fs
pop
std
movl
fisttpl
sbb
adc
fstpt
push
cmp
cmp
push
xor
cmpsl
icebp
imul
xchg
out
mov
dec
arpl
je
jmpw
mov
imul
in
ja
mov
cs
sbb
adc
and
lock
imul
neg
add
fimuls
xor
outsb
fbld
loope
mov
daa
loop
jecxz
mov
arpl
cld
out
js
or
imul
push
idivl
add
dec
pushf
mov
dec
push
outsl
dec
push
in
in
into
imul
call
cmp
std
ljmp
jo
xchg
aam
pop
push
push
push
add
fnstsw
push
adc
test
mov
jbe
push
sti
in
nop
ds
popa
outsb
push
roll
pop
rolb
push
inc
dec
dec
lret
jbe
pop
pop
sbb
out
or
and
pop
sti
into
adc
call
and
sub
pop
inc
sbb
addl
fadd
inc
pop
cmp
push
pop
jbe
xchg
push
push
call
jbe
out
inc
adc
adc
push
cmp
shll
mov
neg
inc
clc
dec
negl
lock
jbe
pop
push
push
xor
or
gs
mov
aam
sbb
jmp
loope
or
pusha
xor
and
sbb
adc
ret
insl
scas
mov
int3
add
pusha
shll
rorl
cmp
and
jb
sub
fildll
jae
sub
mov
or
loope
or
inc
jg
int3
imul
and
xor
and
pop
push
adc
add
push
inc
push
dec
pop
add
push
dec
jecxz
sub
inc
dec
push
ds
cs
dec
dec
add
mov
add
lea
pop
push
aas
pop
jbe
mov
mulb
data16
cltd
cltd
fisubs
mov
data16
push
sar
mov
fisubs
add
push
unpckhps
adc
add
or
pop
or
or
inc
add
add
adc
inc
lar
sub
add
imul
jg
jg
out
pop
roll
lcall
or
cmp
mov
push
or
sbb
scas
pop
adc
test
cmp
addb
rorb
add
mov
idivb
xor
add
and
sub
in
mov
in
repz
xchg
or
jne
ja
add
mov
pop
jbe
das
jnp
testl
sbbl
pop
mov
push
cmp
push
and
xor
ljmp
add
dec
mov
mov
jbe
into
data16
adc
mov
add
adc
jbe
fwait
mov
out
cmpsb
dec
add
adc
or
iret
push
data16
adc
stos
adc
add
cli
add
mov
add
or
xchg
arpl
fsubrs
sti
xor
test
and
add
inc
push
test
add
cmpsb
cwtl
add
add
shrl
in
cmp
rcl
mov
mov
imul
jmp
cmpsb
ljmp
cmp
add
jo
and
lcall
ljmp
fisubs
lcall
add
mov
mov
and
mov
in
lcall
rclb
aas
lcall
add
lcall
add
in
repnz
or
negl
fs
xor
shll
inc
into
pop
adc
dec
shrl
cmp
push
cmp
movsl
dec
mov
sub
jg
or
adc
push
or
sbb
push
mov
in
adc
inc
adc
aas
xchg
or
ud2
push
add
mov
jmp
sti
adc
fdivrp
and
xor
add
and
pop
push
adc
or
outsb
inc
pop
inc
dec
daa
and
add
xor
ss
and
adc
xor
aaa
jnp
or
sub
mov
jmp
xor
daa
xor
cmp
je
adc
xor
mov
in
add
xor
xor
and
adc
nop
adc
sbb
add
addr16
cmp
add
inc
or
add
insl
pop
mov
movsl
or
idivl
xchg
aaa
aaa
test
dec
or
mov
push
cmp
cmp
sub
cmp
insb
sub
pop
movhps
push
push
add
out
add
add
push
push
inc
adc
push
pop
fbld
cld
inc
push
pop
add
push
add
and
mov
sbb
dec
jle
mov
orl
ficomps
adc
pop
leave
adc
add
int3
lds
push
jg
sbb
fdivrs
jb
cmp
dec
cmp
mov
add
movl
xchg
adc
add
add
push
jecxz
mov
dec
cltd
add
inc
jno
das
mov
jbe
xchg
pop
or
dec
outsb
or
xor
xor
mov
mov
add
ss
out
xchg
lret
insl
fistl
mov
or
mov
lahf
setl
popf
add
daa
cltd
jae
jl
ss
xchg
cltd
adc
cs
jle
add
add
mov
movsl
push
jbe
outsb
mov
xor
ds
shr
mov
xchg
and
add
adc
mov
popa
sahf
aas
out
in
xchg
bound
mov
jle
jb
insb
sbb
cwtl
mov
xlat
insb
mov
mov
lcall
adc
enter
add
add
imulb
jb
filds
xchg
jbe
jmp
ds
or
cltd
cmpsb
imul
flds
subb
pop
addb
or
mov
insl
mov
pop
mov
lcall
out
loop
mov
mov
out
lcall
xor
push
cmpsb
aas
jmp
fwait
or
int
sahf
fwait
adc
into
lods
jge
int
aas
pop
push
lahf
fwait
or
add
arpl
push
sub
into
cmp
mov
adc
or
jo
neg
out
adc
mov
adc
push
addr16
sub
aaa
sub
ja
in
push
dec
push
mov
sub
inc
enter
addr16
xlat
fsubl
shll
push
xchg
addr16
lcall
mov
aas
pop
or
mov
daa
push
xor
scas
fstpt
fadds
out
inc
pop
je
push
mov
xor
add
xchg
in
lods
cld
xchg
jle
sbbb
enter
xchg
out
cmp
xchg
mov
adc
push
mov
sub
xor
outsl
mov
jno
and
cltd
shrl
mov
iret
push
xchg
cmp
and
adc
lea
cmp
popf
pop
xor
sbb
mov
dec
clc
out
sti
xor
cmp
dec
cmpsb
inc
sub
outsl
scas
std
imul
movsl
in
lock
sub
loope
and
in
sahf
fmull
lcall
sbb
cli
sti
es
mulb
pop
testb
mov
fsubrl
adc
sbb
or
mov
fidivrl
aaa
mov
add
mov
fs
xchg
adc
sub
cmp
stos
mov
inc
insl
mov
cmp
jb
test
in
out
fs
js
outsl
cs
lcall
fcmovne
xchg
sahf
mov
in
addr16
jecxz
fistpl
outsl
add
sbb
inc
out
addr16
jecxz
adc
jbe
testl
loop
push
daa
sub
mov
cmp
xor
mov
pusha
scas
int
xor
lods
or
xchg
or
or
push
mov
mov
inc
mov
mov
pop
push
xlat
cmp
sub
aam
xchg
xchg
jne
xlat
jne
andl
add
xlat
jne
orb
aaa
xchg
xor
sete
xchg
xchg
xchg
lcall
cmp
add
add
cmpsl
outsl
adc
pop
mov
shrb
lds
jmp
sti
orb
and
mov
or
insb
hlt
xor
sahf
adc
cs
lea
sbb
adcb
test
jmp
insb
loope
cli
xor
insl
rcrl
mov
push
aas
daa
fildll
sub
mov
lea
lea
sbb
or
lcall
add
fsub
lock
adc
out
fld
inc
test
cs
xor
xchg
sub
mov
and
mov
movsl
xor
iret
adc
lea
repnz
or
or
repnz
xchg
and
jae
jbe
mov
xlat
adc
push
std
sbb
sbb
xor
cltd
and
dec
icebp
adc
in
cmp
je
mov
arpl
inc
insb
sarb
or
mov
and
leave
pop
shrl
insl
and
mov
arpl
pop
jg
pop
dec
neg
pop
pop
nop
sbb
mov
mov
outsb
add
push
pop
fdivr
shrb
jae
das
sahf
cltd
imul
nop
lea
xor
aaa
dec
outsb
les
pop
and
gs
or
outsb
push
mov
imulb
and
mov
cmp
outsb
add
fildl
outsb
dec
in
adc
jecxz
adc
push
mov
loop
adc
dec
xchg
in
xor
and
loop
out
ja
xchg
out
popa
nop
or
sbb
rcrb
outsb
and
jae,pt
pop
cmp
orl
and
cmp
outsb
adc
xor
movsb
das
dec
testl
inc
mov
adc
add
xor
pushf
dec
ret
in
aaa
aad
mov
cmp
xchg
push
ljmp
arpl
out
dec
adc
xor
aam
sarl
gs
adc
cmp
outsb
or
ss
outsb
ja
cli
jae
shlw
fdivrs
dec
pushf
sbb
js
push
jbe
push
in
xchg
jg
test
push
sahf
mov
jbe
and
mov
dec
mov
cltd
shll
sbb
pop
call
ja
aam
xchg
aas
arpl
xor
int
push
add
cmp
adc
xchg
push
mov
xorb
push
mov
mov
inc
call
fstpt
imul
push
jmp
sti
sbb
in
or
add
push
lahf
ficompl
sti
fdivl
fsubrl
data16
inc
sbb
test
ret
ret
mov
jnp
mov
ss
dec
ret
pop
popf
inc
pop
or
xor
sbb
jne
and
pop
and
mov
bound
mov
or
and
nop
or
adc
sbb
cltd
mov
xchg
loop
sbb
push
sbb
jb
rolb
addr16
insb
insl
data16
inc
je
pusha
shlb
xlat
or
lcall
jnp
daa
mov
fnsave
xchg
daa
adc
scas
adc
lea
mov
sbb
imul
jae
sub
lcall
xchg
mov
mov
jbe
push
pop
add
sub
pop
add
adc
inc
push
rcrb
mov
xchg
cmpsb
mov
inc
mov
sbb
mov
adc
xor
popa
add
inc
or
scas
inc
loop
loope
ja
inc
pushf
ss
inc
xchg
xor
jo
dec
push
push
outsl
jns
jp
pop
ficoms
jo
mov
inc
mov
loope
inc
sbb
jae
mov
fwait
cltd
mov
pop
pop
add
sbb
hlt
aas
shr
mov
aas
xchg
lahf
out
sbb
fistpl
sbb
sbb
sbb
jne
xor
jge
das
aas
sbb
add
cltd
in
add
loopne
push
adc
cmpsb
add
xor
dec
call
clc
cwtl
add
cmp
jne
imul
pop
xlat
xor
xor
shll
cmp
das
sub
sub
and
ss
and
xor
shll
cmp
and
add
cmp
rcll
test
xchg
mov
xchg
push
or
pusha
rcrl
jb
push
out
xor
aam
ljmp
jno
lea
xor
cmp
pop
cs
xchg
inc
push
sbb
push
xchg
or
xor
or
std
outsb
popl
jns
mov
aas
xor
mov
mov
in
mov
xchg
dec
in
lahf
bound
cmp
jmp
gs
cmp
xor
adc
mov
ljmp
jnp
inc
or
aaa
sbb
push
cltd
imul
inc
mov
push
jo
mov
mov
jbe
push
jp
ja
pusha
and
xor
xor
jp
xor
popa
add
lret
inc
sub
mov
fwait
add
ss
add
in
rcll
adc
fstps
jae
imul
addl
mov
cmpsb
or
or
mov
imul
or
scas
ret
or
adc
inc
ret
ss
adc
xor
mov
aad
xchg
mov
cwtl
mov
add
and
cmp
fisttpll
aam
jnp
es
scas
xor
sahf
push
cmp
divb
div
pop
lret
insb
jle
sub
arpl
jle
mulb
aad
ss
test
xor
std
aaa
in
sub
cmpsl
xor
jp
test
repnz
pushf
in
ret
xchg
xor
add
out
gs
pop
in
mov
aaa
push
pushf
mov
sbb
in
ja
mov
data16
aaa
push
or
popw
loope
mov
cmpsl
es
mov
and
xchg
movsb
bound
mov
push
pushf
xor
call
sahf
test
inc
aaa
lcall
push
push
cmpl
sbb
push
sbb
lods
jge
cmp
inc
mov
addr16
movsb
je
mov
jp
faddl
mov
cmp
in
lods
popa
pusha
or
adc
adc
cmp
popf
mov
mov
push
push
fs
pushf
dec
repnz
loop
mov
popf
fsubrl
mov
dec
pop
xor
mov
or
mov
adc
ja
cmp
jle
daa
mov
sub
lahf
insl
shlb
mov
push
sbb
insl
dec
mov
cmp
or
pop
imul
subb
outsl
sbb
mov
adc
ret
lahf
push
adc
or
out
dec
and
dec
jp
cmp
dec
push
xor
popa
pop
jle
and
pop
or
mov
popf
push
ret
js
test
adc
or
pop
cmp
imul
ret
lea
pop
and
icebp
or
pop
xor
push
inc
dec
ja
je
into
orb
jo
sti
movsl
scas
or
xor
mov
das
or
outsl
ret
mov
out
sbb
lea
cmp
testb
push
in
and
mov
mov
fucomp
das
pop
lea
in
or
and
arpl
sbb
adc
xor
or
test
mov
xlat
es
push
push
insl
rorb
hlt
std
imul
pop
jne
xchg
sarl
cmpsb
inc
mov
pop
out
pop
sbb
jp
jns
sbb
sbb
mov
push
imul
jb
or
sti
neg
xchg
push
ss
or
jb
ret
test
and
mov
mov
pop
imul
push
mov
inc
call
sub
cmpsl
fmull
sub
sbb
fnstsw
adc
mov
lds
add
and
pusha
xchg
mov
xchg
aad
imul
jns
rclb
mov
adc
mov
jp
lds
xorl
or
and
insl
ret
xchg
push
xchg
ljmp
push
es
or
dec
enter
mov
mov
jge
mov
mov
pop
push
cmp
xchg
add
fadds
sbbw
sub
jae
inc
or
sub
mov
mov
jecxz
dec
addr16
dec
decb
fsubrs
out
shr
ret
pushf
in
out
pushf
pop
out
pushf
fdiv
popf
cmp
popf
mov
push
int
sub
sti
or
add
adc
movl
rclb
shrb
roll
sub
push
int3
push
adc
int
lret
enter
sub
inc
xlat
push
or
add
aaa
rorb
popf
dec
shlb
sarl
ss
fistps
jmp
sub
inc
fadds
xor
out
in
insb
or
movsl
shll
insb
imul
or
in
scas
jbe
pop
lods
push
xor
sbb
cmpsl
loop
test
les
pusha
mov
stos
push
adc
shlb
fcoms
rcr
jg
or
in
jne
mov
jecxz
cltd
add
sbb
mov
ljmp
jb
imul
das
mov
les
dec
mov
shrb
rcrb
testb
sahf
pop
in
data16
mov
cltd
or
pushf
jle
cmp
adc
inc
mov
jbe
pop
divl
lods
pop
popf
int3
jb
test
lcall
js
sbb
fucom
mov
pop
and
jle
fldl
jmp
cmp
popf
or
jbe
dec
adc
out
sbb
aaa
sbb
pusha
push
jmp
loopne
adc
and
imul
shll
ljmp
adc
sub
movsl
xor
frstor
test
scas
xchg
das
pop
pop
outsb
ja
je
adc
push
in
push
lahf
mov
mov
inc
adc
bound
mov
pop
loopne
fldenv
or
xchg
adc
dec
out
mov
push
jg
cmp
in
scas
pop
jae
push
add
stos
jae
out
imul
nop
pop
dec
inc
in
fs
lock
mov
or
push
in
repz
mov
in
push
cmp
add
and
out
mov
fcomps
cmp
ss
in
std
push
and
adc
push
mov
in
cltd
idivb
pop
pusha
inc
mov
rcrl
add
idivb
lahf
mov
mov
pop
mov
adc
and
ss
push
fstp
ss
ss
fidivs
gs
xchg
fstpl
cmp
mov
neg
std
movsl
jns
jb
stos
add
ljmp
and
sbb
ret
add
test
mov
lods
mov
lea
in
cmp
adc
jmp
stos
outsb
xor
lods
ljmp
or
out
loopne
mov
in
pop
cmp
add
insb
repnz
push
jmp
jmp
das
xor
imull
mov
dec
data16
mov
or
or
ds
mov
iret
pop
mov
rorb
jbe
shrb
jp
or
imulb
sbb
outsl
jb
cmpsb
bound
pushf
or
mov
pcmpgtw
and
imul
loopne
fistpll
push
in
sub
dec
ss
insb
stos
push
xor
es
ljmp
in
xchg
stos
imul
test
in
das
lock
and
push
in
xchg
xor
out
xor
pop
adc
fwait
or
movsb
push
push
mov
fildll
adc
ss
jecxz
gs
sahf
mov
stos
jle
inc
push
xor
je
cmp
dec
out
stos
adc
pop
cmpsl
jae
and
in
mov
nop
and
sbb
adcl
bound
push
js
push
andl
inc
xchg
in
inc
mov
adc
adc
movsb
ja
mov
or
jo
lods
fsubrp
movsl
dec
and
ja
jo
js
aad
ja
inc
pop
jae
or
scas
sqrtps
ret
dec
push
add
or
mov
shrl
cld
leave
call
sbb
xchg
pushf
xor
scas
mov
sub
aaa
and
jge
cwtl
popa
aas
xchg
mov
loope
lea
add
imul
sub
iret
mov
mov
add
and
jbe
inc
clc
xor
xor
pop
jg
jns
imul
sbb
mov
inc
lods
aas
or
add
or
mov
subb
xchg
test
fcmovnu
mov
scas
sbb
sub
sbb
jle
jle
add
mov
xor
fnsave
loopne
dec
sub
xchg
mov
or
and
cmpsl
test
dec
mov
mov
outsl
add
pusha
adc
xor
push
mov
popa
mov
or
push
or
mov
test
add
enter
and
sbbl
icebp
jb
adc
cltd
out
mov
ja
jbe
into
cs
pop
mov
clc
daa
jecxz
jecxz
cs
cs
lret
ss
sbb
enter
mov
shrb
mov
mov
xor
ds
lds
jp
lret
adc
cld
dec
iret
sbb
sbb
negl
loopne
nop
out
inc
inc
mov
and
sub
inc
pop
std
test
aam
pop
jnp
adc
jb
xchg
ret
sbb
icebp
icebp
sbb
pop
fcompl
sbb
sbb
rorl
pop
or
in
pop
push
andb
sti
jb
xchg
addr16
or
xchg
out
loop
outsb
mov
mov
xor
in
add
push
lahf
lcall
or
mov
mov
or
cltd
and
lahf
dec
shll
in
outsb
rcrw
xor
mov
cmpsb
inc
jmp
add
mov
out
sbb
rcll
pusha
ja
cli
push
lods
int3
pop
adc
lea
in
cmp
imul
sub
rorl
ss
mov
movsb
sbb
neg
push
aas
test
imul
jb
mov
xchg
fistl
inc
mov
scas
mov
icebp
cmpsl
xor
lods
in
sahf
mov
fstps
xor
gs
pusha
jecxz
test
decl
adc
cmp
fimull
jmp
adc
in
xchg
adc
int
push
mov
adc
xor
fisubrl
inc
movsl
inc
inc
push
pusha
adc
adc
fmull
adc
push
scas
test
in
mov
add
ss
and
adc
xor
test
jge
adc
fistl
and
hlt
test
ret
imul
push
mov
or
loopne
mov
mov
data16
sbb
cmp
and
mov
scas
test
nop
dec
jge
in
out
inc
inc
es
cmpsl
cmp
cltd
shll
lcall
ret
add
nopl
iret
jns
je
cmp
popa
mov
push
frstor
or
xor
js
pop
ret
pop
jl
popf
gs
inc
mov
rcrb
xchg
lock
insl
mov
es
popa
jb
adc
sub
stos
dec
sub
lcall
sbb
or
adc
xor
xor
bndmov
ret
mov
aam
test
add
loopne
icebp
and
jae
add
js
lret
cmpsb
jl
clc
sahf
mov
adc
inc
or
pop
popf
test
in
jae
xor
adc
out
repz
lahf
fwait
adc
test
scas
jle
fsts
fists
bound
jb
lret
mov
loopne
add
xchg
inc
xor
jg
fmull
xlat
insl
sarb
scas
pop
or
cmp
pop
lret
dec
ficoms
mov
ss
adc
xor
mov
xor
cmp
ljmp
testl
inc
or
clc
dec
push
mov
jns
xchg
mov
test
jno
test
mov
mov
sub
mov
shl
push
push
fcmovu
mov
mov
stos
jmp
test
mov
or
ss
push
and
iret
outsl
pop
and
pop
subl
roll
cmpsb
cmp
jbe
test
add
fsubrs
or
mov
fstps
rcrb
andb
cmp
jo
push
mov
sub
movsl
ljmp
fwait
add
cwtl
xor
or
fcoms
xchg
arpl
inc
push
sbb
outsb
add
mov
jno
dec
sbb
js
iret
sar
cs
scas
mov
je
sbb
or
cmp
push
jp
faddl
mov
or
repz
cmp
or
ljmp
mov
sub
repz
dec
cmc
sti
inc
orl
sbb
and
sbb
in
sbb
pop
or
sub
jae
repz
dec
mov
and
xchg
mov
addr16
out
xchg
push
cmpsb
call
ficompl
mov
into
mov
xchg
sbb
and
out
push
jb
pop
roll
push
mov
arpl
fmull
xor
cmp
push
add
mov
andl
dec
mov
mov
sub
jbe
xchg
pop
fistl
and
jnp
fcoms
xchg
cwtl
pop
sbb
mov
push
cmpsl
mov
mov
andb
pop
popa
mov
inc
xor
fs
mov
gs
inc
and
int3
data16
mov
adc
std
add
ret
pop
fstps
adc
push
mov
xchg
add
mov
add
mov
sbb
xor
adc
push
sbb
mov
rol
rcr
aas
xor
push
lods
pusha
ffree
fbstp
fnstenv
jne
xor
push
pop
dec
cmc
add
sub
sub
jnp
push
sub
inc
mov
jo
call
push
or
test
mov
adc
scas
outsb
mov
fidivrs
jno
cli
xchg
xchg
ja
rorb
std
xor
mov
mov
dec
repnz
lahf
fwait
out
inc
jge
lea
adc
ds
jnp
shll
add
es
push
mov
mov
call
leave
pop
bound
sub
divl
bound
cli
jg
cwtl
insb
add
add
push
or
adc
jmp
lret
xchg
xchg
test
inc
pop
roll
scas
mov
xchg
lock
lds
subl
jecxz
fwait
outsl
jmp
mov
jno
xor
fadd
mov
mov
jnp
push
inc
mov
mov
adc
not
mov
pop
ss
push
mov
cmp
int
dec
inc
push
rorl
sbb
ret
adc
push
testb
popf
xchg
inc
mov
push
jo
add
fistl
and
push
and
inc
ja
sub
cld
pop
or
into
fs
enter
fisubrl
ja
add
shl
cmp
push
rol
or
xchg
stos
adc
je
cmp
jmp
xor
mov
jb
out
jnp
jmp
pop
adc
xor
xor
fsubrp
add
xchg
xchg
mov
push
mov
mov
aam
in
or
add
add
sub
mov
and
out
push
mov
addr16
mov
mov
adcb
or
push
and
push
mov
sbb
push
ret
or
mov
cmp
loope
inc
fcomps
adc
mov
push
sbb
adc
cmp
or
xchg
push
ds
and
imul
int
lock
push
scas
cmp
outsb
pop
mov
mov
adc
lods
pop
test
roll
fcoms
aas
in
mov
mov
fdiv
xchg
mov
add
push
adcb
ss
mov
mov
pop
and
movsb
outsb
add
jle
sahf
out
add
push
jb
pop
out
mov
mov
adc
dec
sub
mov
lea
fistpll
cmp
sub
stos
cltd
jae
in
xlat
inc
mov
inc
push
add
enter
jbe
jp
and
inc
stos
add
pop
pop
jmp
aas
idiv
mov
or
jecxz
pop
adc
neg
xorb
and
imul
sahf
inc
or
es
jb
jp
jle
push
data16
dec
jb
add
movsb
stos
add
daa
push
adc
push
daa
mov
sahf
nop
into
sbb
aaa
cmp
inc
push
mov
sub
jb
cmp
inc
std
adc
and
adc
daa
add
adc
jg
fbstp
sub
pop
add
adc
adc
daa
syscall
sub
nopl
repz
jnp
fbstp
or
add
or
or
or
imul
adc
adc
shll
cmp
dec
mov
sub
adc
jg
in
mov
adc
xor
pop
sbb
or
adc
imul
or
sub
or
stc
adc
lock
in
pushl
push
sub
push
adc
or
testb
sbb
push
sub
jge
or
or
stos
insl
fnstsw
push
adc
mov
pop
fcomi
sbb
pop
insl
sub
xor
jo
int
jne
sbb
inc
mov
mov
add
adc
xor
rdpmc
gs
or
adc
fs
xor
or
inc
xchg
fildll
push
sub
and
insl
jbe
jg
xor
add
and
iret
mov
insl
pushl
mov
or
test
pop
lods
adc
jnp
or
imul
test
negb
and
push
adc
add
add
or
pusha
out
or
fucomi
fbstp
xor
adc
pop
or
or
sbb
push
adc
ja
or
ja
push
or
jmp
setne
and
push
inc
pop
movsb
out
imul
xor
enter
insl
adc
sahf
das
imulb
cmpsl
inc
xor
sbb
cmp
adc
add
test
add
push
pop
fdivs
push
aaa
ret
push
add
or
or
cmp
pop
inc
popa
arpl
jnp
or
rolb
mov
xchg
adc
add
push
cmp
xor
mov
stos
mov
jnp
frstpm(287
data16
inc
test
mov
mov
adc
jg
stos
fistpll
and
push
enter
adc
sbb
lret
mov
xchg
inc
test
xor
add
mov
jl
pop
fs
cwtl
rcr
dec
cmpsb
adc
insb
pop
or
or
test
mov
sbb
xchg
mov
adc
in
xor
adc
and
addr16
out
pusha
addr16
xor
addr16
adc
push
lods
xor
mov
add
adc
cmp
push
cmovbe
push
adc
data16
push
adc
adc
xchg
xor
ss
dec
add
outsb
cmpsb
cmpxchg
jmp
push
arpl
fs
notl
pop
stos
into
data16
mov
lods
adc
fcoml
mov
mov
cmp
sahf
outsl
jae
cmp
or
pop
imul
arpl
shlb
sbb
mov
fs
pop
pop
push
mov
daa
ds
popf
imul
addr16
das
bt
push
inc
sub
sub
ror
mov
dec
xchg
jne
je
ficoms
inc
push
insb
or
sub
fdivp
ret
data16
or
outsb
das
sub
adc
adc
and
add
add
mov
jae
subl
je
data16
out
iret
jbe
add
addb
pop
fdivs
add
xor
mov
pop
add
mov
sub
xchg
sub
fs
push
or
scas
loop
jne
nop
cmpsb
aad
adc
loopne
xchg
add
ret
arpl
xlat
jne
shll
or
pop
dec
shll
add
fists
adc
jns
pop
mov
test
into
imul
popa
roll
cltd
stos
pusha
data16
push
mov
data16
jb
test
cmpsl
data16
insb
mov
mov
movsl
and
xor
and
loop
add
mov
or
popf
adc
adc
aaa
addl
pop
and
and
adc
pop
pop
xchg
xor
adc
adc
or
popa
adc
ret
outsb
mov
mov
das
or
mov
jg
pop
or
add
mov
add
jge
insl
mov
or
lgdtl
sbb
rcrl
pop
mov
or
adc
jp
adcb
addr16
or
outsl
cmpsb
sbb
outsb
int
ficoms
sbb
std
fisttpll
movups
add
adc
sub
xor
add
push
outsb
sbb
adc
or
add
inc
pop
mov
mov
add
adc
jbe
pop
pop
rol
sbb
fadd
add
pop
xlat
push
pop
outsb
mov
sbb
testb
in
gs
push
add
sbb
outsb
sbb
push
xor
test
or
mov
fidivs
mov
insl
cs
push
jne
cld
fmul
insl
sub
jbe
shrd
sub
pop
dec
jbe
insl
daa
xor
insl
sub
and
pop
mov
push
pop
mov
inc
xchg
scas
pop
andl
cmp
scas
sbb
add
pop
cmovp
and
loopne
imul
scas
add
sub
add
cmp
jecxz
ss
mov
or
outsb
pop
cld
in
daa
cmp
add
cmpsb
scas
movsb
insb
fcmovne
and
xor
ljmp
les
add
outsb
lds
or
add
cmpsb
imul
ss
xlat
stos
fdivrs
je
jmp
cmpsb
dec
fimuls
pop
pop
sub
cmp
sbb
cli
lret
jne
roll
stos
xchg
das
clc
add
dec
shll
dec
js
and
stc
pop
add
ret
ret
cmp
sbb
xor
lret
ret
adc
mov
add
cli
cmpps
or
jecxz
add
lcall
sbb
imulb
cmpsb
imul
scas
imul
cmpsb
imul
fldenv
ret
cmp
push
inc
pushf
out
jmp
gs
jb
outsl
add
or
insb
mov
xchg
inc
xchg
mov
cmpsb
fildl
add
sbbb
shrl
lods
rolb
mov
xchg
into
mov
lods
fnstenv
test
mov
ljmp
aaa
xor
sub
das
dec
shl
and
dec
adc
push
sub
mov
out
xor
and
xor
and
sbb
sub
and
cmp
cmpsb
or
outsb
add
adc
push
and
and
sub
pop
or
sub
lock
inc
adc
inc
mov
mov
adc
mov
or
mov
das
cmp
adc
add
add
push
push
sbb
xchg
inc
xor
adc
sti
mov
fsubs
add
add
or
pop
inc
add
or
mov
mov
mov
push
inc
dec
push
dec
insb
mov
or
ret
stos
add
and
sub
adc
adc
xorb
adc
aaa
adc
or
outsl
popa
outsl
cmc
mov
adc
or
test
add
out
das
pop
push
icebp
jo
pop
mov
rolb
out
sub
adc
pop
orb
jbe
adc
js
call
push
data16
xchg
shrb
add
orl
es
xchg
inc
add
add
mov
add
mov
aam
nop
add
xchg
das
adc
data16
add
ret
pop
das
mov
fs
push
add
nop
xor
outsb
outsl
add
mov
cltd
add
xorb
leave
inc
flds
add
xor
xchg
mov
mov
pop
test
daa
pop
or
xchg
movsl
add
sbb
push
data16
pop
mov
fnstenv
pop
xor
add
mov
pop
sti
jle
dec
sub
lds
add
push
adc
add
out
daa
add
mov
jae
adc
or
or
dec
push
dec
push
sbb
pop
popa
sub
dec
and
push
outsl
pop
mov
and
pop
push
dec
inc
mov
fiaddl
and
and
imul
inc
and
outsb
add
adc
sbb
cmp
jg
dec
or
dec
push
add
adc
pop
push
adc
add
push
or
push
test
dec
or
push
popa
or
dec
je
sbb
sahf
shlb
push
or
fiaddl
fstps
dec
dec
dec
xchg
inc
sbb
lock
xor
push
dec
data16
notb
add
adc
addl
or
sub
in
push
pusha
inc
add
enter
pop
cmp
inc
cmp
push
push
data16
enter
movsl
stos
mov
inc
fsub
jnp
ss
sub
das
add
pop
sbb
mov
xor
add
add
data16
outsl
jg
aas
cwtl
xor
adc
ret
adc
xor
push
mov
test
add
sbb
inc
adc
ss
pop
adc
lock
cmp
dec
mov
insb
lahf
pop
xor
sub
adc
mov
movsb
and
les
ret
mov
stos
mov
and
mov
push
add
add
add
adc
mov
and
sub
ret
mov
dec
xchg
xchg
inc
push
add
sbb
add
divb
sub
or
or
sub
adc
mov
pop
cs
test
jbe
cmp
call
mov
add
add
sub
daa
jg
ja
xchg
std
or
jnp
pushf
ja
mov
movsl
clc
sbb
popl
push
pop
orb
arpl
xor
pop
xor
mov
repz
cmp
ss
dec
cmp
lret
mov
sahf
loopne
cmp
int
and
call
mov
addr16
adc
and
inc
cmp
testb
jbe
cmp
mov
es
out
fsubs
xor
add
or
sbb
mov
xor
mov
pop
insb
xor
adc
imul
das
add
jb
bound
add
jb
mov
sub
pop
sub
mov
inc
je
cmp
push
into
or
roll
adc
rolb
nop
push
xchg
fstl
push
sub
mov
adc
lock
sbb
sbb
lret
xor
sub
mov
xchg
inc
inc
orb
bound
and
roll
and
push
mov
mov
inc
xor
arpl
mov
std
testb
push
adc
fisubrs
jno
add
clc
sub
jne
in
scas
mov
xchg
cmp
mov
lds
lea
sub
orb
xchg
adc
out
sbb
and
outsl
lea
xchg
aam
sti
aas
adc
and
and
leave
sets
pop
mov
mov
jbe
sbb
std
adc
cmp
pop
arpl
loope
or
orl
in
push
lret
mov
xor
push
xor
sub
and
sub
sahf
sarl
sbb
push
adc
pop
xchg
jb
xorb
sub
pop
imul
adc
and
aas
je
arpl
daa
xchg
ss
fnsave
dec
xor
fnstsw
mov
pop
dec
cltd
mov
push
cmp
pusha
push
cmpsb
xchg
mov
arpl
sbb
ss
lds
sbbl
jo
push
mov
mov
jl
pop
outsl
imul
jo
hlt
adc
xchg
lcall
jp
pop
sub
outsb
aaa
fmull
and
pop
xchg
jae
or
jmp
mov
sub
or
ret
imul
lea
push
into
inc
int
xorl
cmp
xchg
mov
mul
sub
cltd
jae
lcall
xor
jecxz
add
push
push
jae
in
xchg
insl
jmp
push
lds
lea
jne
or
in
push
jno
jg
jg
cmpsb
cmp
and
or
xchg
dec
push
xor
lcall
in
movsb
popa
push
mov
and
push
push
ljmp
pop
sahf
arpl
imul
addr16
mov
mov
mov
xchg
and
adc
mov
mov
xchg
xchg
sub
push
mov
shlb
mov
cwtl
mov
jg
pop
orl
sbbb
shlb
subl
jg
mov
cmp
mov
mov
mov
inc
rol
mov
lret
mov
lret
jbe
xor
mov
jmp
mov
ret
mov
jle
jbe
jb
mov
xor
shll
test
test
add
vpshufhw
ljmp
je
aaa
aas
xlat
aam
aad
cmp
fldt
or
aaa
add
xchg
fiadds
mov
mov
fsubl
add
xor
fmuls
andl
mov
pcmpgtd
or
xor
mov
jb
outsb
cs
push
pop
push
xchg
fstpt
mov
mov
sbb
and
fwait
mov
es
or
mov
data16
adc
mov
test
sbb
adc
mov
andb
lds
cltd
sbbb
int
xchg
lock
mov
outsb
shll
lods
push
loope
inc
testl
arpl
mov
adcb
pusha
insb
and
pop
pop
add
inc
push
les
and
in
jp
dec
mov
pop
sub
cs
push
adc
fimull
out
add
jb
pusha
adc
adc
dec
pop
es
addr16
arpl
addr16
xchg
and
xor
leave
pop
das
cmpsl
into
je
mov
dec
lea
pop
inc
dec
dec
repnz
cmpsb
jo
daa
daa
stc
outsb
mov
pop
and
insb
in
mov
addr16
and
je
xchg
inc
sahf
and
push
out
inc
aam
dec
inc
cltd
push
lret
pop
scas
sbbb
xor
sub
push
aaa
lret
hlt
pop
sarb
add
or
inc
mov
cmpb
sub
push
scas
lds
adc
sbb
mov
adc
scas
jp
ret
loope
adc
jb
cmp
mov
push
inc
outsb
fistl
sub
sbb
testl
sbb
mov
aad
sbb
adc
push
sbb
push
jnp
mov
and
and
jo
shrw
push
insl
mov
into
data16
movsl
dec
stos
mov
imul
push
cmpsb
out
inc
es
sbb
in
push
outsl
inc
mov
adc
and
push
push
mov
xor
jge
fucomip
scas
lock
es
testb
loopne
daa
lds
outsb
inc
pop
mov
cmp
leave
add
pop
or
pushf
pop
scas
mov
fisttpl
lds
arpl
dec
fadds
push
jg
jp
xchg
and
pop
in
out
or
lock
mov
bound
mov
push
push
push
inc
and
xor
sbb
push
xor
ffree
scas
push
pop
pop
cmp
jns
and
push
jno,pn
push
dec
push
cmp
out
sub
adc
and
sbb
jb
call
or
ljmp
fnstenv
data16
lret
in
or
dec
jbe
lock
mov
movl
inc
sahf
daa
sbb
xor
add
outsb
or
jo
sub
sbb
sub
inc
bound
mov
bound
stos
inc
xor
es
lods
push
popa
push
arpl
sbb
pop
bound
and
jmp
addr16
jb
notl
movsl
and
push
pop
pop
add
insl
mov
lods
shrl
and
dec
cmp
inc
push
testb
xchg
and
inc
add
add
xchg
adc
mov
sbb
int3
add
ljmp
sub
cmp
outsl
inc
jle
cmp
adc
lds
movsl
imul
iret
jge
xor
adc
fwait
mov
mov
inc
adc
push
out
sbb
xchg
mov
in
sbb
or
insb
add
sbb
sbb
and
mov
mov
cltd
push
add
and
mov
dec
sar
push
imul
fsubl
add
imul
idivl
adc
fmuls
fmuls
arpl
pop
clc
fildl
pop
push
pop
mov
ret
cmp
inc
jle
inc
xor
mov
leave
inc
cmp
mov
and
cmpsl
movsb
es
leave
dec
sahf
into
imul
jbe
orb
inc
fisubrl
mov
es
add
imul
dec
es
mov
sbb
scas
xorl
inc
adc
imul
xorl
inc
fbld
ret
lods
and
mov
push
or
sub
testl
ret
inc
sbb
dec
hlt
cmp
addr16
and
push
lea
and
sahf
ret
in
push
mov
xchg
mov
sbb
shrl
cmpsl
mov
loopne
add
fstpl
mov
gs
xor
addr16
lock
add
pop
or
xchg
mov
jbe
jl
je
incl
daa
push
inc
sub
testb
xchg
mov
jno
mov
and
jns
pusha
push
in
and
cmpsb
jo
fs
or
and
fidivs
dec
aas
and
xchg
je
inc
mov
enter
xor
jbe
in
push
iret
mov
inc
or
push
flds
out
pop
or
adc
cmp
imul
mov
jg
sub
icebp
xchg
xchg
cmp
pop
push
int
mov
sti
pop
push
int3
test
xchg
mov
mov
pop
inc
adc
xlat
ret
mov
scas
lea
push
fcmovne
sbb
data16
hlt
scas
adc
jl
aaa
inc
jbe
ds
sbb
or
xor
jo
aad
jp
xor
push
add
mov
xchg
adc
mov
inc
scas
jnp
out
adc
inc
and
lcall
mov
mov
mov
inc
or
in
cli
es
ficoml
cltd
push
lret
loope
jmp
pop
jl
imul
pop
or
push
insl
sub
jb
xor
xor
mov
dec
push
mov
lds
aam
mov
push
sbb
lret
repz
cmp
outsl
jne
add
ret
push
cltd
jmp
inc
or
pop
mov
adc
adc
inc
mov
sets
fwait
or
movb
and
inc
xchg
jbe
jne
mov
xchg
sbb
dec
xlat
pop
xchg
pop
xchg
xchg
jne
pushf
cmp
jne
enterw
adc
jb
nop
outsb
fs
xor
lcall
xor
push
jle
jno
or
nop
shrl
lock
rcr
rclb
cli
sahf
dec
in
mov
and
in
add
jns
ss
bound
adc
cltd
jg
jmp
clc
inc
out
cmpb
fldl
cmp
pushf
je
sahf
and
xor
xor
ljmp
outsb
pop
scas
adc
sbb
xchg
rorb
mov
mov
jmp
inc
aaa
shlb
aaa
inc
test
out
adc
subb
in
lods
sub
sbb
insl
sbb
xor
sub
ret
jne
cld
mov
test
stos
lcall
cmp
xor
xchg
in
mov
mov
pop
add
stos
ret
aaa
test
adc
fwait
sub
dec
cs
inc
cmp
xchg
xchg
mov
lods
stos
test
push
xor
mov
cld
or
xor
sbb
dec
lds
lods
movsl
push
cmc
iret
sbb
xchg
jmp
outsb
xchg
popa
test
sub
in
or
pop
in
inc
lds
push
xor
cmpsb
inc
push
inc
fmull
mov
dec
stos
enter
dec
or
out
sbb
fidivrl
xchg
ret
in
ds
fcoms
mov
xchg
imul
fldt
inc
sub
repz
out
pop
add
xchg
call
les
inc
aas
aaa
cmp
out
mov
out
add
pop
cmp
ja
sub
imul
or
xor
movsl
nop
arpl
xor
ja
or
mov
or
inc
pop
stos
add
fwait
xchg
fucomip
ljmp
xchg
sub
xchg
adc
cmp
aas
jmp
loopne
scas
adc
imul
mov
outsl
sub
inc
sub
adc
pop
scas
in
in
fucomp
in
adc
bound
adc
out
adc
es
add
jbe
adc
shrb
sbb
sahf
sti
fisttpl
inc
out
bound
jne
out
pop
fsts
in
sti
out
outsb
sbb
popa
inc
shr
enter
push
adc
lock
mov
push
sbb
pop
xor
jne
or
push
adc
outsb
filds
in
mov
xlat
stos
inc
loopne
test
aaa
out
rorl
int
fsubrp
push
movl
outsb
and
push
jl
lods
adc
decb
mov
sahf
mov
aas
pop
cmpsl
adc
mov
scas
adc
xor
popa
out
bound
out
add
into
lret
mov
push
in
and
and
outsb
insl
jmp
push
bound
ds
pop
xlat
fisubs
lea
and
sub
jge
sti
sub
jb
sub
jb
icebp
push
insb
pop
in
xchg
or
in
es
inc
mov
add
push
push
and
ficomps
mov
sahf
or
adc
adc
cwtl
jnp
mov
push
outsl
lea
lods
icebp
mov
jb
out
xchg
arpl
jns
imul
test
icebp
sub
aas
in
mov
daa
adc
cmp
jb
jecxz
addr16
or
movsl
cmp
inc
lcall
adc
mov
push
in
inc
mov
sub
mov
push
jb
sarl
adc
push
sti
ja
outsb
pop
pop
jb
and
cs
pop
lea
jg
jbe
dec
jne
data16
aaa
sub
in
adc
sbb
out
pop
sbb
mov
fs
pop
fldz
jae
adc
lea
fldenv
pop
divb
cs
insl
data16
xchg
sbb
sti
shl
add
data16
icebp
push
ljmp
sub
adc
lods
jp
adc
in
xchg
add
out
push
jecxz
adc
sbbl
stos
nop
jge
adc
mov
or
lcall
push
rorl
inc
into
push
cmp
jne
es
lds
sbb
jl
arpl
in
jns
cmpsb
sbb
cltd
xor
sub
cmp
cli
movsl
je
cs
add
int
pop
aaa
add
jae
adc
sub
add
sub
and
dec
in
adc
mov
fdivs
into
xor
add
pop
adc
inc
leave
jbe
lcall
xor
pop
pusha
or
mov
cmp
ja
mov
or
jbe
mov
out
cs
cs
js
lods
jnp
push
mov
scas
push
adc
jnp,pn
pusha
insl
adc
pop
popa
lea
daa
out
pop
sbb
sbbl
stc
pusha
lea
pusha
sub
push
jp
inc
pop
rol
lock
jp
cmp
inc
xchg
inc
rcrl
in
sbbb
subl
rolb
mov
decb
in
jecxz
addr16
fldenv
mov
cwtl
sub
mov
data16
or
adc
and
enter
in
jbe
stos
jmp
insl
or
dec
and
mov
push
add
and
jmp
fisttpl
lret
dec
stc
in
pop
mov
xor
pusha
fistl
sbb
mov
pop
and
or
ljmp
mov
xor
jl
mov
xor
mov
xor
xor
bound
cwtl
mov
mov
ljmp
pop
mov
rorl
xorl
push
inc
xor
push
lock
movsl
add
pop
sub
dec
sub
lods
out
cmpb
loopne
daa
ss
push
int
add
pop
aad
xor
jle
pusha
in
imul
or
ror
push
pop
lea
imul
pop
jge
or
pop
test
adc
jns
addl
jb
push
fsub
adc
popf
fwait
cld
insl
mov
push
mov
in
jb
pop
jb
outsl
lret
gs
int
jle
ja
add
sbb
lds
icebp
mov
add
gs
inc
test
insl
loope
xchg
push
jo
or
mov
inc
mov
test
adc
aaa
fisubl
int3
xchg
addr16
popa
push
loope
in
jbe
mov
jnp
mov
mov
jb
xor
mov
aad
subb
push
xor
sbb
out
stos
sub
cmp
orb
jmp
push
sub
xor
xor
aam
inc
scas
fcomps
mov
fadds
testb
fdivs
mov
xchg
cmpsb
ficomps
pop
cmpsb
inc
pop
adc
fmul
adc
xchg
mov
xor
fcoms
stos
or
pusha
arpl
sub
push
fisubrs
leave
std
enter
ret
cmp
mov
push
inc
in
sbb
enter
lods
push
mov
jge
jne
adc
and
inc
iret
aam
into
jp
pusha
mov
fnstcw
xor
cmp
bound
sti
add
sbb
mov
mov
in
pop
loopne
addb
xorb
push
mov
mov
sahf
push
pop
cmp
sub
pop
addr16
mulb
sbb
or
xchg
gs
push
js
sbb
adc
add
mov
das
push
jae
xor
jmp
inc
pop
add
lock
or
sbb
gs
cmp
outsb
aas
xor
mov
stos
popf
in
sub
stos
out
inc
pop
lods
ljmp
cld
outsb
nop
mov
jg
and
in
mov
push
jle
mov
mov
pop
push
jle
cmp
xor
sbb
xor
jp
das
xchg
adc
jge
adc
sahf
js
es
jp
sahf
xchg
adc
out
into
subb
jmp
data16
loope
pop
jle
fadds
and
mov
dec
push
fdiv
xchg
mov
stc
out
and
adc
pop
aam
shlb
jo
fxsave
mov
int
fdivrs
ds
mov
mov
mov
sub
call
cmp
sarb
scas
xchg
and
jne
hlt
cmp
sub
or
adc
popa
gs
cmpsb
call
jmp
ret
inc
xchg
adc
jbe
fs
inc
pushf
or
jmp
mov
ja
enter
add
pop
dec
adc
mov
das
mov
mov
aam
add
loop
rol
insl
inc
imul
jnp
icebp
in
adc
jecxz
pop
scas
push
xor
jp
pop
pushf
aaa
addb
sub
sbb
int
orb
jnp
sti
pop
cmp
add
roll
sbb
xlat
insl
sub
inc
adc
mov
dec
push
lea
mov
mov
jge
add
mov
scas
daa
out
pop
out
sbb
adc
test
mov
pop
ljmp
cmpsl
mov
pop
nop
jo
loop
ret
pop
mov
and
inc
and
or
insl
xor
imul
push
outsl
cmp
je
out
add
clc
pop
and
shrl
cmp
mov
mov
add
push
repnz
in
push
jmp
push
pop
repz
sbb
push
call
add
aad
cmp
inc
mov
sti
outsb
add
gs
sahf
es
fimull
pop
jle
adc
or
or
out
pop
push
in
mov
loope
mov
fs
pop
outsb
mov
and
movsb
fstpt
and
out
outsb
leave
and
sub
dec
push
cmp
jl
stos
inc
jmp
sbb
add
mov
mov
adc
lahf
lahf
cmpsl
or
mov
cmpsl
gs
dec
cs
cmp
nop
add
or
and
and
add
add
xor
out
shlb
and
jbe
push
and
push
add
and
aad
roll
ret
inc
sbb
and
dec
add
ss
xchg
jo
cmp
ja
jmp
outsb
push
xchg
seto
add
mov
cmp
jbe
setns
xor
xlat
or
stos
sbb
push
stc
imulb
mov
pop
outsl
fisttpl
jae
xchg
test
fstps
adc
les
and
mov
data16
inc
push
leave
out
and
test
adc
nop
sahf
jns
shlb
jbe
mov
dec
dec
xchg
adc
cmp
adc
sahf
adc
nop
dec
jo
xchg
adc
adc
mov
push
lea
pop
movsb
jnp
push
jle
addr16
add
push
negl
adc
out
shll
jle
jo
mov
popf
cmpsl
mov
lock
xchg
jb
push
push
mov
push
or
xor
fstps
mov
and
adc
pop
into
outsb
loop
pusha
insl
adc
pusha
aad
mov
repz
fmuls
jge
in
sbb
mov
ss
mov
subl
pushf
dec
pusha
pop
and
imul
xor
add
sbb
fimuls
idivb
bound
insb
pop
addl
insl
sub
sbb
mov
loope
adc
mov
ljmp
or
push
inc
pop
or
es
sbb
dec
add
add
cmp
xchg
xor
jge
xor
out
dec
adc
lea
ret
mov
bound
inc
popa
or
cwtl
mov
or
inc
es
sub
pop
push
inc
test
inc
add
jnp
or
pop
pop
ljmp
xchg
mov
sti
jno
xchg
pop
and
mov
adc
xor
adc
mov
sbb
outsl
add
push
xchg
sbb
pop
add
sbb
insl
jb
cmc
and
and
jle
inc
inc
in
out
lods
jb
dec
adc
jl
stos
lods
mov
adc
xchg
jae
sbb
lock
mov
adc
addr16
test
shrb
stos
aad
hlt
stos
pop
cmpsl
xor
fldcw
mov
pop
icebp
mov
xchg
jb
mov
mov
andl
aas
xor
adc
stos
push
fs
mov
sbb
push
and
fmull
cli
pop
add
mov
adc
push
mov
imulb
jmp
or
daa
mov
pop
out
lds
lcall
jne
jp
mov
dec
fwait
jecxz
pop
jo
pop
bswap
fstps
push
xor
sti
cmp
mov
mov
inc
data16
cmp
sbb
jne
ss
and
nop
mov
aas
aas
inc
sti
ljmp
dec
out
enter
cmpsb
add
leave
cli
and
int
enter
fisubrl
mov
mov
mov
pop
fwait
testl
arpl
pop
cmp
mov
jae
cmp
xor
xor
test
lods
pop
fistps
sahf
mov
sbb
fnstcw
enter
lahf
out
inc
push
sbb
jle
mov
cmpsl
jl
dec
inc
movl
and
xor
cmp
insb
test
adc
cmp
bound
adc
xchg
insl
or
outsl
cmpsl
xchg
jle
jmp
dec
inc
out
lods
aaa
leave
popa
mov
pop
add
lods
inc
adc
mov
pop
add
or
pop
jecxz
ss
mov
fucom
inc
ret
pop
sbb
or
ja
imul
cltd
orl
ficomps
and
ret
in
adc
and
ja
mov
mov
cltd
lea
fsubs
jbe
jne
out
dec
clc
std
jb
inc
out
arpl
mov
pop
stos
mov
cmp
mov
stos
xor
fbstp
jle
sbb
ss
lods
in
push
lds
bound
stos
inc
lods
cmp
ds
fisubrs
imul
add
inc
ljmp
mov
test
pop
sub
inc
xor
ljmp
aam
xchg
xor
xor
pop
xchg
imul
inc
mov
jp
pop
in
inc
adc
cmp
mov
dec
xor
dec
lock
cltd
dec
lea
dec
adc
sub
push
or
imul
sub
sub
mov
mov
mov
xchg
or
or
xchg
inc
and
jg
pop
daa
jle
cli
or
ss
std
adc
mov
mov
sub
push
dec
pop
sbb
pop
adc
sbb
push
jnp
roll
insl
fwait
mov
jge
jg
orb
jmp
mov
add
test
pop
rolb
nop
and
lods
cmp
rolb
outsl
shll
push
test
xchg
in
inc
mov
sarb
aad
mov
xchg
sahf
jb
add
rolb
pushf
pop
popf
push
mov
insl
inc
lcall
call
ret
mov
mov
in
in
pop
pop
test
insl
mov
push
inc
jle
push
xchg
mov
shlb
mov
fcmovnu
ss
mov
xor
xor
sub
inc
into
loop
stos
sbb
fmuls
xor
int3
mov
xchg
enter
mov
cwtl
outsb
mov
push
cltd
mov
lahf
fisttpll
add
mov
out
stc
jl
add
js
jae
xchg
test
pop
orb
pop
pop
cmp
daa
cmpsb
jle
or
jecxz
rcll
xchg
push
mov
ljmp
pop
sub
js
sbb
adc
aam
jb
fucomp
subl
repnz
addr16
mov
insl
cmp
jnp
lret
into
out
add
sarl
into
arpl
adc
mov
xlat
ret
or
jmp
inc
subl
scas
mov
push
add
xor
push
dec
sbb
xchg
xchg
aas
sti
xor
sbb
fists
add
mov
aaa
inc
push
push
adc
push
xchg
and
cltd
mov
mov
addb
fs
xchg
inc
lds
jecxz
movsl
pop
jbe
add
jg
mov
inc
cmpsb
lcall
data16
dec
bound
les
or
ljmp
mov
push
sbb
push
pop
fwait
xor
and
push
pop
sbb
mov
and
push
push
mov
sbb
cmpsb
or
add
cmp
xchg
pop
adc
sub
xor
pop
cmp
jae
pop
mov
adc
or
fwait
sbb
jp
pop
xchg
fldt
adc
mov
add
adc
sub
add
pop
hlt
rcrb
push
push
add
sbb
push
push
mov
push
mov
enter
mov
mov
stos
cpuid
inc
push
or
jle
adc
jbe
lods
dec
jmp
adc
dec
test
repz
add
or
or
push
sti
rcrb
rcll
call
aaa
jle
aas
jle
dec
pop
cmp
push
mov
jecxz
mov
out
xchg
cmp
out
xchg
sub
xor
repnz
cmp
push
orb
xchg
ss
aaa
repz
mov
or
and
cmp
jbe
jbe
adc
add
ret
jo
and
cmp
mov
and
out
jmp
aas
jnp
push
xor
jp
mov
insl
aaa
xor
pop
or
or
xor
dec
mov
jecxz
bswap
mov
pusha
cmp
mov
adc
lret
or
sbb
repnz
jne
pop
adc
jne
pop
mov
push
out
add
cs
in
add
adc
jb
sub
add
or
out
fldt
push
add
pop
ljmp
xor
divb
imull
cmp
pop
repnz
aaa
icebp
adc
pop
add
incb
cli
push
sti
clc
adc
add
add
inc
les
lds
jmp
in
ret
and
rorb
daa
into
pop
iret
cmp
test
out
sub
and
dec
test
add
dec
mov
push
call
inc
mov
sub
xchg
add
mov
xor
lret
mov
and
or
add
xlat
fst
stc
aad
push
jne
mov
rorb
shll
rcrb
shrl
adc
fidivs
push
cmp
adcl
push
adc
xor
in
cli
mov
mov
push
stos
xor
and
or
xor
out
sbb
lea
movsl
pop
addb
add
xor
mov
movsb
fisubs
add
xor
ret
ficompl
or
lods
dec
fmuls
rorb
adc
inc
or
addr16
lock
jge
xor
lds
fsts
and
roll
aas
repz
adc
ret
and
je
lea
loop
xchg
hlt
rcr
pop
push
scas
dec
mov
mov
stos
ficompl
mov
in
mov
push
repnz
imul
stos
ljmp
push
jb
sbb
add
or
xor
enter
sbb
sub
xchg
dec
adc
bound
fcoms
lahf
insl
aaa
mov
adc
or
and
adc
movsl
pop
and
push
xor
mov
mov
xchg
pop
rol
pop
jle
or
cmp
sub
add
mov
adc
pop
mov
arpl
push
or
inc
insb
mov
xchg
enter
test
pop
icebp
int
subb
adc
mov
ffree
inc
adc
push
push
xchg
stos
test
inc
out
lahf
fdivrs
pop
data16
mov
adc
xchg
jmp
or
fmul
outsb
push
push
or
dec
push
aam
fisttpll
mov
sub
push
das
sub
push
int
pop
lcall
adc
pop
add
push
xor
shrb
push
xor
add
call
aas
cltd
dec
fcmovnb
in
in
cmp
cmp
cmp
push
mov
or
add
cmp
dec
add
push
or
addr16
or
and
add
dec
adc
out
jbe
jne
mov
mov
mov
mov
cs
pusha
fisubrl
mov
or
orb
mov
mov
add
shll
push
push
xlat
mov
dec
push
add
sbb
pop
xor
sub
shlb
xchg
xlat
xchg
lods
mov
mov
lea
jo
push
xlat
je
mov
adc
push
or
push
mov
daa
pushf
dec
push
xor
push
pop
push
pop
mov
push
adc
push
xor
lcall
pop
jmp
pop
sub
pop
push
push
sub
jbe
pop
faddl
pop
push
es
or
clc
daa
mov
and
frstor
push
adc
and
mov
loope
stos
adc
push
negl
mov
pop
lods
add
add
cmp
cmp
add
add
mov
or
or
in
or
or
adc
sbb
push
hlt
or
repnz
repz
icebp
push
push
sbb
adc
inc
rcl
jne
push
mov
sub
lret
cli
dec
shll
fdivrp
add
push
add
out
push
xorb
fistl
mov
pop
scas
push
lods
in
lcall
adc
adc
cmpsb
imul
xor
lcall
or
testb
jb
movl
mov
ret
pushf
inc
adc
adc
cmp
ds
adc
xor
push
popa
pop
push
sbb
mov
push
mov
and
or
dec
sbb
mov
jnp
js
inc
orb
dec
or
int3
out
test
mov
fcompp
bound
ja
xor
orb
mov
sahf
cmc
push
mov
test
xlat
mov
xor
push
cmp
sbb
xchg
xchg
dec
pop
das
mov
cwtl
fisttpll
mov
xchg
push
pop
jge
sbb
xchg
dec
stos
push
fdivrs
xchg
mov
shrl
test
dec
add
dec
decb
xor
repnz
sub
add
es
inc
ja
or
mov
pop
pop
divl
jae
aas
fdivs
mov
inc
loop
int3
sbb
test
sti
pop
xchg
xchg
pop
mull
aad
adc
or
insb
ret
and
loop
sti
fmull
dec
cmpsl
mov
mov
mov
xchg
int3
jno
das
add
inc
cmp
adc
push
cs
insb
sbb
pop
and
add
lea
pop
jge
push
ret
gs
lea
fistpl
in
xchg
mov
rolb
mov
dec
mov
push
aaa
jle
push
aas
add
mov
mov
lock
dec
sub
mov
out
jmp
mov
pushf
inc
xchg
cmp
xchg
rcrb
fwait
xchg
sbb
or
sub
xor
xor
scas
ja
pop
add
gs
mov
lds
cs
push
test
dec
jmp
adc
cmpb
xchg
mov
inc
lods
dec
cwtl
bound
sbb
lds
jle
sbb
mov
inc
mov
sbb
in
xchg
xadd
shrb
xchg
js
dec
add
and
mov
orb
add
sub
aas
enter
aas
add
loopne
in
gs
pushl
mov
add
test
push
adc
jb
mov
fisubl
mov
ret
mov
out
call
add
rol
or
mov
mov
insl
mov
repz
dec
addr16
inc
adc
sub
jl
sub
xor
stc
roll
inc
fadds
xchg
stos
bound
lds
add
sub
bound
cmp
mov
cmc
aas
test
pop
and
in
loopne
add
add
adc
popf
cs
fcoms
jg
shr
mov
or
xor
xor
add
flds
xor
test
lea
jb
insl
jbe
hlt
push
dec
sub
pop
loopne
data16
mov
push
bound
inc
mov
sub
dec
mov
and
push
rcrl
push
push
subl
loopne
aam
inc
and
das
inc
aad
inc
or
or
add
or
add
movsl
mov
outsl
loopne
sbb
ljmp
push
std
fs
roll
xor
ret
and
pop
cmpsl
in
rcrb
cmp
cmp
adc
xchg
push
cmpsl
mov
xor
push
in
mov
sub
bound
lds
push
imul
mov
loop
imul
in
rorb
cmpsb
jnp
cmpsb
or
lcall
sar
dec
mov
clc
xor
mov
inc
adc
add
das
xor
movsb
std
xchg
pushf
nop
push
adc
testl
jb
mov
dec
out
es
nop
inc
adc
ljmp
dec
cwtl
mov
popf
or
or
cs
add
mov
jne
inc
sbb
dec
call
loope
aam
push
test
cmp
sahf
test
sahf
outsl
movsb
stos
stc
push
inc
push
fnsave
or
push
cs
pop
push
xor
fmul
divb
popa
fwait
jo
int3
or
ja
sbb
push
cmp
add
xchg
mov
add
and
icebp
rorb
sahf
or
pop
or
imul
push
and
ret
in
popa
lea
adc
sub
es
dec
lea
mov
cmpsb
mov
pop
outsl
push
cmpsb
adc
cmpsb
push
adc
cmpsb
push
out
pusha
or
das
aas
and
shld
movsb
and
cld
ja
jge
test
cmpsb
cmpsb
cmp
cmpsl
mov
popl
data16
mov
add
xor
testb
data16
bound
jae
xor
cmc
xor
xchg
faddl
in
dec
call
cmp
int3
xchg
sbb
adc
xlat
nop
xor
jp
mov
sub
or
jno
std
xchg
add
jle
add
in
adc
push
jge
sbb
mov
hlt
hlt
sub
push
push
mov
mov
fimull
or
sti
add
adc
je,pn
repz
add
mov
aas
or
push
ljmp
and
mov
in
inc
inc
mov
cmpsb
ret
adc
jne
mov
push
or
push
mov
sub
cltd
sub
jae
movsb
add
pop
xor
add
lahf
push
mov
push
ret
das
mov
cld
lcall
in
add
das
jbe
adc
or
ss
pop
loop
inc
adc
nop
push
jo
sbb
js
adc
ficoms
mov
mov
or
aam
and
and
jbe
inc
data16
push
sbb
add
arpl
insl
push
data16
pop
xchg
dec
add
cmp
and
out
popa
lahf
fmul
inc
push
ficomps
loopne
pop
cmc
es
filds
jo
mov
pop
testb
jo
stos
jbe
adc
or
fadd
dec
mov
push
les
or
ret
ret
dec
push
sub
push
outsb
into
mov
call
or
ja
in
sbb
andb
gs
mov
xor
lret
jbe
add
or
icebp
push
xchg
xchg
adc
andl
pop
sahf
inc
push
sbb
xchg
or
push
adc
xchg
add
sbb
and
push
std
cmp
inc
jle
cmp
out
jl
jns
into
mov
out
xor
sub
inc
int
aam
pop
or
pop
inc
xor
sbb
daa
rolb
insl
dec
ljmp
xchg
jl
add
or
jl
adc
das
push
jb
xor
sbb
sbb
add
mov
add
rcll
mov
outsb
add
jne
cwtl
or
add
insl
jmp
jno
shlb
mov
cmpsl
int
sub
mov
mov
mov
stos
or
mov
xchg
or
xor
arpl
nop
sbb
and
or
sarb
mov
test
sub
adc
pop
and
inc
aaa
adc
or
addl
xchg
out
adc
xorl
arpl
sysret
icebp
or
enter
repnz
or
aas
push
dec
imul
inc
dec
dec
ss
inc
push
sbb
in
cld
sbb
in
ss
push
and
inc
arpl
pop
inc
xchg
inc
mov
fsubs
jne
add
dec
pop
insb
fs
or
add
imul
sbb
add
testl
cwtl
lcall
sub
ds
push
pop
mov
xchg
in
add
push
ffreep
stc
jmp
adc
cmp
inc
iret
sbb
sub
xor
sbb
cltd
mov
mov
push
incb
out
dec
addr16
lret
mov
lret
pop
pop
inc
inc
adc
inc
mov
or
adc
add
jmp
lcall
iret
lcall
pop
lret
pop
enter
scas
imul
xlat
pop
aam
aad
sarb
rcl
lods
ficoms
fists
mov
fstl
fisubl
add
mov
pop
cmpsb
cmpsl
cmpsb
jmp
movsl
adc
ja
fldt
lret
mov
ficoml
or
scas
imul
test
test
cltd
mov
pop
mov
mov
scas
jmp
mov
mov
mov
adc
push
cmp
mov
xchg
xchg
invd
dec
shll
inc
add
jl
mov
mov
scas
imul
jmp
sbb
into
sbb
lcall
cmp
stos
test
idivb
cld
sbb
cltd
push
jmp
adc
jno,pt
push
mulb
xor
mov
icebp
or
adc
add
or
ds
cltd
sub
ss
je
or
loopne
aaa
cmpsb
fsubs
push
push
add
jb
add
pop
xor
mov
jo
push
scas
mov
addr16
lods
mov
adcb
pop
mov
sbb
jbe
je
add
aaa
mov
xor
or
cli
mov
or
or
sbb
xor
inc
addr16
iret
inc
sti
add
mov
pop
cmp
xor
mov
mov
mov
mov
inc
add
jl
cmp
push
adc
mov
fsts
aaa
scas
stos
sbb
outsb
adc
sub
adc
and
push
cmp
add
mov
scas
pop
or
pusha
adc
outsb
mov
sbb
dec
scas
dec
or
stos
add
scas
sub
mov
test
stos
inc
sub
dec
pop
add
out
xor
insb
stos
test
mov
jmp
add
or
ret
test
es
xor
jle
ja
mov
lcall
loopne
insl
btr
pushf
pusha
sub
int
adc
mov
push
xor
xchg
aas
ss
sub
xor
fsubrs
loop
add
ret
xchg
loopne
pusha
xchg
ss
outsl
lods
or
xor
addr16
and
fldl
inc
cltd
xchg
adc
dec
cmpsl
subl
sahf
aaa
xor
sbb
bound
mov
adc
push
outsl
adc
inc
int
mov
stos
test
jne
add
jge
lock
xor
xlat
das
jge
cmp
sub
hlt
and
xor
or
orb
test
dec
inc
cmp
adc
push
push
add
mov
mov
adc
xchg
sbb
scas
or
cmpsb
jmp
or
add
add
sub
add
daa
inc
add
imul
imul
cmpsb
or
adc
inc
xor
roll
imul
xor
shll
adc
adc
cmp
xor
das
or
or
mov
sbb
mov
das
or
pop
pop
sbb
add
or
inc
fstp
or
push
push
xor
enter
pop
add
pcmpeqd
enter
sti
mov
pop
jbe
jbe
dec
push
dec
dec
push
jne
sbb
push
adc
or
adc
fs
or
daa
and
or
test
addr16
adc
in
inc
or
adc
jbe
inc
jmp
sbb
sub
pushf
pushf
popf
popf
pop
add
add
popf
popf
lea
lods
sbb
sbb
sbb
mov
inc
or
out
out
add
mov
mov
lret
or
adc
adc
sbb
ljmp
sbb
xor
xchg
or
call
cmp
sub
pop
and
test
adc
adc
push
pop
movl
ficoms
xlat
aam
add
leave
fidivl
fadds
shll
fxch
cmpsb
shll
insb
push
xlat
jne
mov
subb
scas
fwait
add
repnz
mov
jmp
or
adc
add
mov
adc
add
pop
sti
jmp
xchg
mov
inc
xchg
mov
ret
gs
or
pop
mov
mov
push
stos
push
xor
dec
mov
xchg
inc
push
jns
mov
lahf
mov
fimuls
xor
push
mov
dec
or
lock
gs
xor
leave
adc
add
xchg
dec
mov
pop
movsl
push
adc
or
mov
adc
or
or
dec
ss
rolb
scas
or
sbb
jb
jle
lcall
add
xor
mov
adcb
xchg
or
mov
mov
add
dec
mov
stc
adc
rorb
and
jmp
jae
rorb
mov
jo
jmp
jb
mov
addl
or
xor
mov
dec
or
adc
cli
arpl
mov
mov
xor
inc
cmp
inc
fbld
mov
lcall
fstps
sub
arpl
loopne
call
clc
mov
and
les
sahf
or
xchg
ja
cmp
loop
test
push
je
and
xchg
lcall
ss
pop
aad
push
cmp
ds
cmp
mov
sub
inc
das
mov
xchg
sbb
inc
mov
add
in
xor
mov
in
and
xchg
popf
jbe
cs
dec
or
mov
out
clc
out
jge
cs
cmp
add
out
cmp
xorb
or
or
in
push
mov
jb
test
sub
jbe
loopne
pop
hlt
mov
stos
mov
ljmp
pop
jae
and
shrl
scas
je
ds
call
sub
adc
push
call
repnz
mov
or
xchg
mov
mov
and
adc
pop
add
mov
jae
int3
xor
sbb
push
fisttpll
sbb
add
mov
sti
outsb
or
xchg
push
inc
mov
inc
add
and
mov
xchg
xor
cmpsb
xor
and
pcmpeqd
sub
mov
or
and
addl
inc
adc
cs
mov
cmpsl
cwtl
jle
mov
add
and
inc
xchg
xchg
add
mov
imul
std
cltd
pop
sbb
adc
fidivs
inc
lods
test
sub
adc
movsl
mov
arpl
adc
and
roll
outsl
lcall
adc
pop
mov
jbe
test
lock
fadds
mov
ja
ret
clc
clts
comiss
add
xchg
mov
loopne
call
xlat
push
fnsave
out
lds
dec
arpl
movsl
jmp
movsb
flds
pop
adc
sub
lods
and
or
arpl
mov
pop
and
ss
nop
addr16
es
mov
push
adc
out
cmc
mov
add
sahf
pop
jnp
das
ljmp
sub
mov
inc
push
push
add
out
xor
cmpsl
jb
adc
add
sub
push
and
jbe
xor
jle
xor
lods
sbb
push
clc
scas
sahf
sub
sbb
or
sub
push
cld
add
jne
out
mov
sbb
sub
sub
movsl
dec
das
pusha
rclb
mov
mov
lds
shrl
mov
xchg
popf
inc
mov
xchg
or
xchg
inc
movsl
push
icebp
sbb
inc
filds
shll
out
add
insb
or
mov
scas
or
scas
imul
setbe
xchg
pop
xchg
or
es
or
xchg
mov
add
sahf
pop
lahf
adc
popf
lcall
test
lsl
add
in
fs
add
jle
sbbb
add
adc
out
pop
sbb
mov
fcmovnu
fwait
data16
das
jecxz
jl
loope
xlat
mov
pop
pusha
mov
mov
aad
int
pop
add
xor
scas
jmp
nop
sbb
adc
loope
cmpb
ret
mov
std
mov
push
cmpsb
jo
pop
in
push
aas
insb
pop
jno
sbb
loope
xchg
in
pop
add
bound
cld
sub
std
enter
cld
mov
cmp
cmp
cs
add
push
pop
stos
or
inc
js
sbb
out
or
jnp
lcall
pop
or
inc
es
sbb
sub
sub
dec
or
sbb
adc
add
inc
clc
addb
popf
mov
insb
or
xchg
and
shlb
clc
add
cli
ljmp
push
and
dec
in
pop
std
imul
movsb
addb
mov
xor
push
les
hlt
imul
adcb
test
jp
dec
add
out
push
outsb
pop
dec
mov
inc
dec
cmp
addb
adc
bnd
push
mov
add
sub
fwait
dec
inc
shll
inc
or
adc
xor
add
imul
mov
lds
ret
mov
rcrb
into
cvttps2pi
jb
mov
pop
inc
jb
jno
outsl
xor
inc
pop
rorl
mov
wbinvd
dec
shll
add
xor
adc
or
sbb
scas
mov
xor
sub
mov
xor
xlat
inc
mov
mov
mov
xor
add
adc
dec
mov
xchg
sub
daa
std
push
sub
movsb
cmp
test
inc
cmp
loopne
ss
push
dec
daa
fimuls
scas
push
fwait
mov
sub
adc
adc
or
jmp
pop
aaa
or
and
leave
lea
jbe
or
shll
test
mov
addl
fwait
orl
or
mov
xchg
pusha
orb
xadd
sti
and
push
jno
adc
addr16
xchg
sbb
fsubrs
rolb
cmp
ss
or
ficompl
shlb
mov
cmp
popf
sahf
lods
rcr
adc
cwtl
adc
ja
fwait
dec
jmp
aas
xchg
mov
jns
lcall
insb
inc
fsubr
pushf
mov
dec
cwtl
jecxz
inc
jmp
orb
ss
popf
adc
cmpsb
arpl
loope
roll
cmp
cli
sbb
setne
push
mov
mov
and
fidivs
mov
imul
pop
dec
loopne
cmp
push
add
cltd
scas
repz
sarb
imul
sbb
or
mov
rcll
mov
mov
xchg
or
inc
sub
pop
mov
aad
xchg
jb
orb
sub
xchg
add
int3
and
or
pusha
push
fistps
popf
mov
flds
push
xor
inc
push
mov
push
arpl
insl
in
lcall
jecxz
sub
stos
sub
or
pop
movsb
out
jg
mov
loopne
mov
pop
and
daa
out
inc
out
adc
add
mov
int3
push
or
inc
inc
adcb
cmpsb
in
bound
jecxz
pop
out
xor
mov
push
jle
stos
sbb
push
pop
jb
loopne
adc
jl
outsl
mov
sbb
rcll
inc
cltd
push
in
aad
ret
adc
sbb
and
push
je
xchg
add
stos
bound
rclb
or
mov
sti
add
outsl
jbe
loopne
sbb
movlps
test
nop
movsb
ja
roll
push
inc
sub
mulb
jno
cmovbe
xorb
add
aad
xchg
mov
fisttpl
adc
test
cmp
or
fadd
mov
movsl
movl
in
or
and
cld
sahf
pop
pop
inc
lea
adc
mov
push
cmpsb
dec
adc
pop
push
iret
leave
sub
mov
cmp
sbb
lea
aaa
ljmp
or
adc
mov
push
lahf
or
adc
push
cs
pop
aam
push
sub
push
and
sub
xor
cmp
pop
ret
idiv
and
sbb
out
mov
ret
mov
cmp
jle
push
dec
and
ret
arpl
inc
mov
pop
mov
mov
ljmp
and
mov
inc
mov
inc
nop
dec
inc
mov
pusha
movb
pop
imul
xor
add
add
jge
pusha
cmpsb
or
data16
loopne
mov
or
pop
lcall
xor
pop
mov
out
mov
and
in
mov
mov
jecxz
in
shll
xchg
push
sub
jns
sub
mov
roll
and
or
cmp
in
mov
cmpsb
inc
push
in
stos
ss
inc
dec
push
scas
scas
adc
pop
jbe
fadds
adc
cltd
sbb
adc
adc
mov
and
push
inc
cltd
inc
movsb
add
adc
icebp
jmp
pop
stos
mov
push
jg
add
scas
adc
sub
add
jnp
cmc
push
sahf
lods
jmp
shrb
inc
dec
fldl
leave
lcall
inc
push
out
xchg
mov
rolb
mov
mov
lea
jle
and
add
in
data16
adc
jne
outsl
out
xchg
sti
adc
or
adcb
lds
add
iret
mov
out
pop
test
fbstp
mov
daa
sbb
mov
mov
loopne
out
fists
shlb
adc
lods
orb
adc
lahf
sbbb
push
lock
or
daa
push
shrb
jmp
add
and
bswap
dec
and
out
gs
and
push
fs
adc
add
ss
iret
xchg
and
inc
adc
pop
mov
mov
inc
add
pop
aaa
test
lds
push
cs
add
add
pop
addl
jo
andb
repnz
pusha
adc
push
add
lret
mov
enter
adc
scas
orb
and
dec
clc
or
add
mov
imul
adc
orb
lret
cmp
or
adc
pusha
inc
sub
xor
loope
sub
data16
inc
jmp
push
sub
xor
movsl
and
adc
add
sub
mov
mov
xor
and
add
and
fstpt
or
inc
fwait
sbb
je
mov
add
sub
idivb
sbb
xchg
shrl
and
add
mov
add
dec
dec
mov
or
adc
lret
add
ud1
dec
add
loopne
shll
mov
dec
jns
cmp
adc
sbb
insb
inc
push
pop
adc
es
cmpsl
xchg
push
sar
or
add
and
andb
or
lret
arpl
push
mov
mov
test
fdivr
bound
imul
mov
push
or
fcomp
cs
sarl
xchg
or
aas
shlw
adc
lods
data16
mov
pop
xor
arpl
rdpmc
gs
fistl
jecxz
cmpsl
add
or
or
ret
adcl
push
lods
add
xor
adc
sbb
jg
imul
push
xor
add
std
push
add
jbe
dec
bound
sbb
mov
arpl
pop
adc
mov
pop
movsl
shlb
dec
test
ljmp
mov
mov
push
adc
or
fdivs
lss
fwait
stos
orb
push
cmp
clc
outsl
xlat
add
es
daa
and
ds
les
pop
add
ss
push
rcll
mov
inc
imul
and
xor
sub
lods
or
data16
push
pop
test
mov
inc
inc
inc
mov
mov
call
push
mov
pop
ret
pop
rcrb
pop
mov
pop
mov
pop
xchg
pop
xchg
aaa
icebp
sti
pop
sahf
pop
lcall
push
jbe
mov
out
inc
push
push
cmp
push
inc
push
push
push
cmp
out
out
push
mov
mov
mov
incl
push
nop
push
fwait
push
gs
insl
push
je
jle
jnp
pop
push
and
push
cmp
push
call
push
sbb
push
cmc
push
push
clc
push
lds
push
movsb
push
mov
mov
push
es
les
push
call
push
bound
push
jb
loopne
notl
push
adcl
daa
push
out
ljmp
push
jo
mov
push
dec
push
add
cs
ss
sbb
push
aad
fcoms
push
scas
push
test
mov
call
push
mov
pop
jo
pop
dec
pop
pop
pop
and
pop
cmp
pop
pop
pop
jmp
pop
out
pop
repnz
ret
pop
rcrl
pop
test
pop
xchg
pop
popf
pop
insl
pop
jo
js
push
pop
lcall
aaa
pop
cmp
pop
add
pop
pop
pop
in
pop
cmc
pop
cld
pop
pop
fcomps
pop
test
pop
cwtl
pop
jmp
imul
pop
dec
pop
pop
pop
and
pop
pop
adc
cld
pop
iret
pop
leave
pop
rcrl
ljmp
pop
popa
pop
imul
pop
push
pop
pop
pop
and
sub
xor
ds
add
push
pop
call
pop
in
loope
repnz
lcall
pop
fistpl
pop
mov
mov
pop
nop
pop
pop
pusha
pop
insl
pop
pushl
jo
jnp
inc
pop
dec
pop
push
pop
pop
pop
pop
pop
and
pop
xor
pop
add
pop
or
pop
lcall
out
loopne
jmp
pop
pop
rcrb
rcrb
pop
cmpsl
pop
scas
pop
test
mov
mov
pushl
jge
inc
pop
dec
pop
push
pop
push
pop
xor
pop
lock
sti
pop
inc
pop
push
pop
pop
pop
sub
pop
push
pop
call
pop
out
out
pop
jmp
pop
rcrb
pop
cmpsl
pop
push
pop
and
pop
jecxz
lods
pop
mov
mov
test
pop
test
call
push
loopne
notl
push
rcll
push
mov
xchg
push
lahf
push
bound
push
stc
mov
push
imulb
ds
or
push
sbb
push
call
push
scas
ljmp
cld
call
push
mov
push
push
arpl
push
das
push
sub
pop
push
repnz
mov
push
rclb
lods
push
test
inc
push
sub
push
mov
sbb
mov
push
ficoml
push
outsb
push
sub
pushl
push
out
mov
push
hlt
adc
push
stc
push
rcll
ficoms
push
test
call
push
imul
jp
inc
push
push
push
aas
push
or
push
mov
push
jae
jnp
push
pop
mov
pushl
lret
xchg
pop
bound
pop
or
negl
fstpl
mov
pop
arpl
decl
jmp
stc
pop
into
pop
fstps
pop
sbbl
outsl
jg
pop
aaa
pop
out
pop
icebp
pop
cli
pop
scas
or
pop
out
out
pop
xchg
sub
call
inc
pop
and
pop
pop
pop
loope
mov
pop
repz
cld
sbb
sbb
clc
mov
xor
mov
mov
lock
push
fcoms
push
mov
xor
arpl
sbb
push
xor
push
xorps
push
sti
sti
push
lret
push
mov
outsl
push
test
test
push
push
cmpsl
push
xchg
push
fcoms
push
pop
push
jmp
cld
mov
xchg
push
sahf
push
fwait
push
push
push
adc
push
outsb
pop
push
pop
in
pop
ficomps
sbb
dec
test
inc
pop
sub
mov
mov
pop
cmp
pop
aad
scas
pop
xchg
pop
xchg
pop
and
and
adc
cmp
pop
leave
das
pop
out
pop
rcrb
xchg
fwait
pop
dec
mov
pop
sti
pop
pop
ret
push
das
fists
cld
push
enter
rcll
push
push
sub
add
lcall
push
bound
push
pop
push
out
push
notl
push
inc
push
pop
push
adc
stc
push
mov
push
add
push
cmc
push
pop
cli
outsl
clc
push
lds
push
dec
push
add
int3
push
xor
pop
movlps
aaa
mov
pop
arpl
ds
push
pop
clc
pop
cmpsl
pop
mov
fbstp
imul
cmp
push
mov
push
fistpl
call
push
jns
daa
push
xchg
push
inc
push
cs
mov
push
dec
push
add
cld
jg
push
scas
push
inc
push
pop
push
xor
push
sbb
push
das
push
aaa
push
cmp
iret
push
addr16
outsl
mov
push
xor
pop
mov
cmpsl
pop
test
clc
lcall
or
ret
pop
lods
pop
mov
mov
pop
push
pop
adc
lock
ret
mov
fstl
dec
inc
jo
jnp
or
pop
fucomip
push
loopne
pop
data16
push
aam
jl
push
es
and
mov
push
or
push
jmp
icebp
push
fcoml
pop
ljmp
jb
dec
or
loope
jg
dec
push
xor
sbb
mov
inc
push
dec
stos
adc
ljmp
pop
adc
pop
repz
aad
fstps
pop
mov
pop
gs
insb
pop
inc
pop
mov
pop
jecxz
pop
add
pop
scas
pop
sbbl
ljmp
std
mov
pop
push
pop
mov
call
pop
cmp
pop
push
loope
jg
pop
sbb
pop
mov
pop
gs
jg
push
pop
xor
or
inc
imul
push
and
push
mov
or
adc
nop
lea
push
int
fists
push
mov
jge
inc
pop
dec
pop
or
or
pop
out
ljmp
clc
ljmp
mov
pop
jne
dec
pop
dec
pop
push
pop
add
jg
xchg
fcomi
pop
cli
pop
mov
pop
mov
pop
add
pop
sub
loop
mov
mov
jg
push
ret
pop
sub
sub
pop
inc
pop
dec
fcomip
pop
xchg
and
xor
pop
in
movsb
pop
mov
mov
cmp
lcall
pop
xchg
pop
nop
pop
lcall
pop
jb
jl
inc
pop
inc
outsl
jno
dec
adc
xor
sub
add
and
mov
out
mov
data16
das
sub
comiss
loope
andl
or
addr16
pop
inc
testb
xlat
add
insl
pop
dec
fs
lock
xor
push
jne
pop
or
outsb
xor
pop
add
xlat
jne
arpl
or
add
cmp
lods
ss
adc
pop
in
mov
pop
and
sub
ja
addr16
fwait
fwait
and
xor
cmpps
aaa
or
fisttps
mov
aaa
mov
xor
imul
or
ffreep
xor
push
insw
dec
sbb
push
lods
adc
push
add
push
data16
mov
or
sub
add
int
movsl
adc
xor
mov
add
add
dec
xchg
mov
jne
push
popa
add
dec
xlat
jne
gs
xor
pop
lret
add
or
pusha
add
adc
push
ja
iret
or
iret
lea
adc
daa
add
test
out
or
pop
add
adc
fadds
sub
ja
out
pop
jns
in
and
xor
arpl
jmpw
or
iret
add
shll
outsb
bound
outsl
inc
aaa
rolb
mov
adcb
xchg
push
sahf
push
imul
flds
lds
inc
inc
push
rcll
ja
jns
pop
push
in
icebp
rcll
push
pop
push
cmp
add
push
aam
ss
push
daa
pop
jmp
loope
xor
mov
pop
imul
cmp
out
in
pop
repz
roll
add
aam
test
push
cld
mov
pop
dec
pop
das
pop
xor
or
pop
test
sar
add
inc
pop
pop
pop
stc
pop
int
test
pop
add
das
sar
out
std
pop
mov
pop
negb
pop
iret
loope
pop
mov
dec
mov
jmp
rcr
mov
push
jg
add
push
push
push
pop
push
sub
pop
out
fistl
add
cmc
adc
sub
sbb
push
sbb
cmc
fildll
mov
mov
push
push
call
lock
ds
add
xchg
mov
and
push
xchg
push
call
incl
es
add
push
leave
push
rclb
push
lea
or
push
call
cld
fstl
fbstp
pop
sbb
pop
jle
das
pop
ss
jg
push
sbb
pop
pop
test
pop
cmpb
inc
pop
dec
sub
jecxz
cmp
pop
ficomps
ljmp
lahf
mov
pop
cs
loopne
clc
pop
or
pop
fcompl
pop
in
cmpsl
mov
mov
jne
jne
incl
mov
push
scas
sbb
or
add
cmp
and
pop
pop
lods
clc
add
test
les
mov
inc
xchg
pop
pushf
jnp
lea
rcl
add
lods
pop
xchg
iret
dec
out
ss
adc
rorb
pop
and
pop
cld
pop
loope
call
pop
ficompl
pop
mov
xchg
pop
cwtl
pop
imul
es
add
pop
out
pop
rcll
out
mov
jl
inc
push
cmp
push
out
mov
mov
mov
push
nop
push
push
push
mov
push
xor
push
push
rcll
mov
ja
js
inc
push
push
push
icebp
insl
or
loopne
leave
push
rclb
adc
push
dec
adc
out
shlb
lcall
mov
adcl
push
mov
push
addr16
ja
test
cli
push
push
xor
mov
outsl
js
pop
mov
push
push
sbb
in
out
push
adc
push
clc
push
ret
push
dec
sub
add
sub
insl
jmp
jl
add
je
outsl
fs
gs
popa
outsb
fs
mov
gs
arpl
dec
outsl
popa
fsts
jp
outsl
cmovbe
sbb
cmp
imul
mov
mov
push
outsl
and
jb
and
popf
sbb
popa
and
outsl
jae
pusha
outsl
rorl
jae
sbb
out
adc
jae
adc
jb
push
push
in
je
inc
push
inc
outsb
jbe
outsl
outsb
mov
in
push
insb
push
popa
test
inc
imul
cmovne
or
mov
outsl
jo
jo
adc
les
std
inc
mov
or
jb
mov
inc
fs
add
insl
jbe
rorl
pop
insb
jnp
inc
outsb
pop
insl
popa
insb
popa
arpl
sbb
test
or
mov
xchg
ss
cmp
inc
popf
push
inc
and
dec
push
lea
add
lea
xchg
dec
mov
loopne
or
push
or
popw
jmp
push
ret
push
add
add
inc
pop
insl
ret
sbb
add
pop
pop
add
xchg
or
adc
pop
sti
fcompl
push
or
orl
add
add
sbbb
mov
and
fs
popa
pop
fimuls
in
add
push
les
in
cs
dec
add
movsl
lods
adc
add
or
add
or
dec
add
incl
add
add
add
call
int
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
