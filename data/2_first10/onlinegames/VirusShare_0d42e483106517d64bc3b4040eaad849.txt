xor
addb
mov
add
mov
push
mov
shlb
inc
and
push
sbbl
fdivl
test
ja
shlb
std
lahf
hlt
pushw
rcrl
jbe
test
int
mov
shr
sahf
jae
out
jae
lret
vpslld
or
repnz
enter
xchg
mov
cmc
std
sbb
repz
mov
adc
hlt
lods
ret
shll
mov
ret
sbb
push
mov
ja
push
cmp
cmpsb
adc
test
sub
jbe
or
aad
mov
iret
or
and
dec
je
test
out
test
insb
xor
movsb
fistpl
out
push
sarb
es
pop
mov
popa
bound
mov
or
push
push
adc
jp
jle
xor
jo
xor
jle
cmp
sbb
add
cmp
mov
cmpsl
cs
mov
push
rolb
sbb
jns
mov
mov
stc
pop
and
decb
icebp
xchg
lahf
sub
ljmp
add
fcomps
mov
push
sbb
jg
add
xlat
sub
mov
iret
aad
mov
mov
movsl
add
movsl
sub
shlb
adc
dec
das
pop
ret
repz
in
push
imul
sbb
cmp
cmpsb
rcl
push
pop
ret
rol
push
adc
cmp
sti
add
ja
push
push
loopne
cmpsl
xchg
cli
jle
cli
aas
inc
scas
mov
pop
call
adc
enter
pop
das
mov
push
or
mov
add
cmp
inc
adc
jge
jp
xchg
adc
pop
mov
ret
sub
je
cltd
dec
mov
jns
jmp
test
repz
clc
ret
mov
jecxz
ds
lret
ret
fnsave
jbe
pop
xchg
mov
jp
cmp
xchg
or
fsubrl
adc
mov
mov
cmp
mov
mov
data16
cmp
lods
mov
mov
and
pop
test
gs
add
test
xchg
rorl
xchg
out
cmpsl
xor
xchg
mov
insl
dec
mov
imull
cmp
inc
inc
xlat
inc
rolb
fldl
mov
lods
and
xor
rcr
cmc
sub
add
cltd
xlat
lea
or
iret
nop
push
inc
sub
push
push
int
sbbl
mov
mov
pop
xchg
ja
jb
out
shrb
call
test
jle
pushf
jae
dec
push
lds
or
sub
mov
push
fs
mov
es
push
enter
xor
sbb
xor
repz
xor
es
hlt
and
ret
pop
inc
insl
pop
cmc
mov
push
xchg
mov
andl
ds
test
jne
and
fistps
int3
es
sub
sub
in
dec
popf
shlb
sub
mov
das
pop
in
jno
mov
mov
pop
lock
ret
push
jle
cmpsl
xor
dec
or
je
clc
outsb
cmc
int3
in
cmp
adc
cmp
add
daa
jae
lret
push
test
adc
iret
sti
pop
push
int
pop
mov
mov
pushf
lea
pop
xchg
fwait
mov
push
xchg
loopne
sbb
xchg
cli
push
xchg
dec
mov
add
jecxz
clc
pop
mov
loopne
xlat
add
sbb
mov
add
iret
push
stos
xchg
push
loop
sarl
sub
pushf
testb
xor
mov
inc
dec
popf
push
xchg
je
gs
nop
xorb
gs
aad
movsb
sbb
mov
fdivrp
or
pop
addr16
mov
cmp
dec
adc
mov
push
es
adc
in
stos
dec
imul
push
enterw
lahf
call
dec
xchg
inc
outsl
xor
mov
mov
loope
arpl
jmp
movsb
outsb
pop
sbb
clc
addr16
or
sbb
aam
cmp
pop
fcoms
addr16
cmp
inc
mov
arpl
aam
mov
popa
pop
xchg
loop
push
mov
mov
push
xchg
data16
jnp
dec
fstpl
ret
cld
or
pop
jle
stc
push
call
and
push
xchg
lods
sahf
std
mov
mov
jno
jns
push
fs
cmpb
mov
mov
pushf
lods
leave
cmpsl
insb
mov
mov
into
fimull
mov
mov
mov
jbe
scas
lret
cld
inc
mov
int3
jmp
add
fsubrs
jbe
sub
dec
ret
icebp
leave
dec
xor
insl
jl
inc
mov
push
out
add
mov
cmp
mov
sahf
imul
dec
icebp
sub
call
push
jae
les
sub
cli
repnz
daa
mov
inc
fs
ja
aas
pop
sub
fdivs
out
fcoms
dec
mov
xchg
jg
push
and
ss
clc
nop
inc
aaa
mov
jno
arpl
jns
and
pushf
mov
rcrb
adc
jb
xor
and
or
scas
cmp
jo
mov
dec
inc
lods
push
xor
cmc
and
add
mov
mov
nop
es
aam
jl
sub
jne
mov
fistl
adc
push
pushf
cmpsb
frstor
jbe
jb
fwait
mov
xchg
mov
mov
cs
ljmp
cmpsb
cmp
fcmove
adc
xor
jo
pop
cmp
jmp
hlt
sbb
cld
int
push
pop
dec
adc
jmp
or
int3
mov
and
or
mov
or
mov
mov
and
clc
dec
add
xchg
xchg
jne
lret
jno
insl
add
jmp
aas
xor
cmc
and
fidivs
std
xor
mov
outsb
test
sub
movsl
jg
sub
push
pop
cli
adc
mov
dec
scas
enter
pop
pusha
insl
dec
pop
sahf
faddl
data16
lahf
jo
push
mov
fs
shrl
in
adc
xlat
sub
movsb
icebp
push
dec
mov
add
pop
sub
jbe
jo
sahf
xlat
lret
jle
mov
insl
jns
mov
add
xor
sarb
imul
or
gs
arpl
dec
dec
add
int3
jle
dec
jns
jno
pop
jge
and
push
cmp
les
or
ss
cmp
loope
dec
xchg
lods
mov
aam
cmp
mulb
into
or
hlt
insl
xor
mov
fstps
mov
and
or
push
jg
shl
insl
fwait
mov
inc
mov
out
jmp
or
xor
lods
jnp
dec
movsb
adc
xchg
or
xor
mov
and
push
repz
dec
insb
insb
sbb
xchg
roll
sarl
mov
sub
int3
push
xor
testb
int3
repz
sbb
fwait
add
fiadds
clc
lret
cmp
aad
push
decb
cltd
sub
push
mov
popf
jns
pop
icebp
mov
lret
roll
add
decb
or
jmp
and
test
int3
into
xchg
mov
adc
je
repz
loop
jg
out
cmp
rclb
data16
xchg
call
xor
push
sub
out
into
cld
fimuls
xor
adc
push
lea
ficoml
sub
lea
outsb
popa
sti
stc
aaa
sbbb
outsb
scas
adcl
enter
inc
loop
jle
jne
out
jg
je
push
lret
shll
push
xchg
jns
daa
jecxz
cmc
loopne
fcompl
xchg
fsubs
mov
les
sbb
cmpsb
ret
or
mov
adc
sub
in
push
sub
mov
imul
and
addr16
dec
out
xor
aam
shlb
repnz
xchg
aaa
jl
aam
iret
mov
imul
sbb
inc
and
daa
push
jns
ss
mov
push
repnz
sahf
arpl
ljmp
jne
mov
pop
sti
adc
stc
push
lds
ja
xlat
mov
xchg
xchg
popa
mov
int3
sub
in
or
bound
sbb
sub
dec
lods
out
insl
sub
daa
sub
pop
testl
xor
fcompl
clc
lcall
mov
cmpsl
popa
jmp
push
aas
cmpsb
inc
push
jmp
pop
add
and
pop
scas
icebp
jo
mov
dec
leave
lcall
xor
mov
cmp
dec
add
and
xchg
cmc
sub
lret
sub
mov
js
pop
stos
lock
push
mov
nop
fisttpll
addr16
and
mov
arpl
scas
in
ja
pop
cmpsl
shll
lret
or
lock
xor
loope
add
aaa
jno
add
xlat
outsb
daa
dec
shlb
jge
xchg
insl
aam
sahf
push
test
lods
cltd
mov
test
into
in
data16
shlb
jo
or
push
cmp
xlat
and
sbb
mov
xchg
aaa
push
xor
and
ja
popa
aam
jae
mov
sbb
repnz
mov
ret
into
cltd
and
or
jbe
and
inc
sti
lds
gs
scas
cmp
cmp
sarl
andb
cld
aas
inc
pushf
gs
mov
push
in
push
dec
mov
xlat
pop
mov
lods
xlat
bound
sahf
cmp
jo
les
jle
out
dec
sub
or
fiadds
test
pop
inc
int3
push
push
fsubrs
inc
lret
ret
ret
cmc
outsb
or
gs
sub
or
lahf
dec
fimuls
mov
js
in
sbb
test
push
jmp
gs
pop
js
jbe
and
push
push
inc
lret
cmp
popf
and
push
bound
push
jg
mov
nop
and
rcll
inc
js,pn
push
repnz
xor
sarb
loopne
shlb
sahf
dec
jne
sub
xchg
push
std
leave
mov
negl
pop
and
out
add
outsb
add
jne
pop
push
mov
push
fwait
xor
sub
jg
ret
int3
adc
sbbb
js
inc
cs
in
rclb
mov
cld
imul
outsb
xchg
and
cmp
mov
jnp
aam
mov
push
pop
iret
jae
in
inc
xchg
jb
jecxz
sbb
movsl
and
enter
mov
pop
pop
sets
sbb
sbb
push
iret
je
cld
dec
xchg
cmp
or
scas
push
dec
pop
dec
aad
fcomps
outsb
xor
pop
aas
in
or
inc
dec
inc
adc
or
mov
and
pusha
pop
sarb
out
xlat
or
lcall
adc
or
fstpl
cmp
mul
dec
icebp
sti
pop
insl
push
mov
imul
cmp
xchg
ds
pop
cmp
fmul
jg
int3
and
loop
push
sub
clc
int
cld
xchg
lea
sbb
xor
imul
sbb
jecxz
adc
lds
sahf
jp
js
into
xchg
enter
push
pop
repnz
mov
jb
cli
aad
mov
xor
movsl
enter
or
xchg
dec
fs
adc
xchg
and
xchg
jge
loopne
out
clc
jmp
rcrl
sbbl
mov
nop
rcr
repz
cli
les
pop
lock
pop
xlat
mov
jg
test
ljmp
iret
jecxz
dec
inc
fdivr
adc
xchg
nop
mov
xchg
in
xor
mov
sbb
stos
lret
sahf
in
fsubrl
imull
pop
les
mov
xlat
push
ljmp
in
mov
xchg
sub
and
lods
jecxz
lea
jecxz
cs
imul
lahf
adc
xor
jne
pop
lret
xor
inc
test
cmc
ljmp
inc
sub
jmp
add
sub
xchg
popa
cmpsl
lods
push
add
insb
pushf
inc
addl
pop
mov
lret
mov
mov
sub
test
popf
push
shrl
scas
adc
push
mov
nop
mov
fsubrl
arpl
out
testb
xchg
cli
mov
lock
ds
fnstenv
sti
and
rorb
cmc
in
inc
jecxz
dec
xor
mov
mov
leave
imul
daa
mov
daa
dec
xchg
mov
xchg
xor
std
scas
pop
clc
cmp
lcall
or
mov
ja
push
xchg
movsb
add
xchg
xchg
fsts
xchg
push
inc
mov
push
cltd
adc
xor
in
popf
loop
mov
addr16
cld
mov
mov
mov
outsb
out
jae
inc
shll
pop
sub
lock
outsl
add
cltd
add
add
ret
outsb
xchg
mov
icebp
in
inc
or
lcall
rolb
xor
and
adc
out
in
and
add
loope
ja
mov
mov
add
sbb
push
inc
and
push
out
pop
or
test
in
mov
lzcnt
iret
cmp
push
fisttpll
xchg
xchg
pop
pop
push
data16
push
inc
xchg
pusha
mov
dec
aam
jl
xchg
pop
stos
shl
sub
inc
xchg
xchg
psubsb
cmc
sbb
movsb
push
into
pop
adc
loop
lds
bound
mov
xchg
and
push
mov
rorl
fmull
scas
es
cmp
cmpsl
mov
das
or
test
jl
push
pop
insl
jns
divl
inc
stc
pop
pop
pop
mov
pop
push
sti
sub
cmp
sbb
push
mov
aaa
jg
pop
inc
mov
push
xchg
inc
ja
mov
sub
mov
out
adc
repnz
ret
or
and
pop
iret
addr16
out
insb
push
movsb
sub
rorb
and
ljmp
mov
cmpsb
aam
into
arpl
es
jae
push
sbb
jge
add
mov
cli
jno
cmp
in
mov
xchg
scas
push
negl
cmp
nop
incl
xchg
jno
cmp
dec
pop
mov
adc
xor
shll
push
jmp
arpl
sti
cmp
dec
in
fdivp
stos
into
mov
jb
mov
jle
pop
in
cld
sbb
pop
roll
shrl
dec
sub
pop
sarb
fbld
xor
cs
pop
push
fucomi
mov
mov
in
jne
and
jb
mov
sub
pusha
cs
push
outsb
lcall
or
adc
push
pop
rcrb
jb
jle
jecxz
pop
mov
js
mov
das
jg
mov
jg
or
cltd
call
fwait
cmp
push
je
mov
pop
jo
or
iret
cltd
sbb
xor
and
mov
mov
push
test
adc
insb
out
lahf
xchg
dec
inc
and
jle
cmp
xlat
cs
jno
sub
cli
mov
int3
xchg
and
pop
and
fstps
dec
stc
pop
sbb
inc
cli
out
mov
imulb
mov
outsl
fnstenv
incb
xchg
sbb
rcll
lcall
in
cmp
and
divb
int
out
lock
in
sub
outsl
insl
mov
xchg
pop
mov
cmpsl
sub
leave
je
sbb
jg
and
add
mov
jo
test
das
adc
mov
xchg
fdivrl
xor
cmp
inc
mov
shll
ret
stos
add
pop
loopne
into
in
xchg
jmp
mov
jo
inc
xorl
loope
fcomps
into
loop
ds
mov
shll
inc
imul
mov
lea
jp
add
jge
jge
inc
xchg
pop
movsl
outsb
pop
mov
rcrb
jbe
push
fwait
ss
sbb
sbb
out
cmp
jns
dec
jb
in
cmc
xchg
jne
ret
stos
pusha
cmp
mov
xor
outsb
dec
cltd
mov
imull
stos
stos
pushf
xchg
repnz
jo
jbe
push
mov
test
inc
jns
fsubrp
pushf
xor
clc
add
xor
pop
pop
lods
cld
and
lds
add
cltd
push
jge
and
arpl
and
mov
mov
and
rcr
insb
gs
sbb
mov
dec
fwait
pop
and
xchg
arpl
jne
lock
jecxz
and
insb
fldcw
test
mov
ja
xchg
mov
adc
adc
mov
clc
dec
adc
dec
cli
icebp
lock
xchg
pop
cmp
or
imul
negb
insl
arpl
mov
xchg
lock
pop
fisubrl
xchg
ret
loope
test
inc
out
mov
lds
add
in
arpl
test
aas
sub
adc
ret
xchg
daa
mov
loop
rol
lcall
jnp
lahf
pop
xlat
lahf
aam
imul
pop
or
repz
hlt
pop
sub
push
ret
pop
decl
in
add
fcompl
mov
xor
enter
stos
cmp
ja
cli
inc
jp
mov
xor
test
mov
bound
je
test
aad
cmpsb
mov
sti
loop
fildl
jbe
stos
aam
cmpsl
cmpsb
cmp
cmp
ja
xor
mov
jne
adc
ja
or
insb
popf
mov
push
sub
fldcw
into
imul
xchg
push
loopne
shll
std
pop
int3
jmp
pop
xchg
push
mov
xchg
xor
jle
jo
outsl
xlat
or
in
xchg
xchg
lcall
dec
jg
cmp
xor
ret
aaa
test
lcall
pop
xlat
das
or
mov
and
sbb
shl
test
lret
shlb
xchg
les
pop
shl
add
mov
lret
jl
aad
fsts
movsl
jp
sbb
imul
ljmpw
pop
dec
fwait
mov
cmc
ja
fcmovnbe
mov
cmp
push
pop
cs
jne
inc
jmp
inc
lcall
pop
cmp
ficoms
mov
sub
inc
xchg
mov
cli
test
inc
scas
inc
pop
enter
inc
sti
sahf
sub
mov
in
clc
fwait
stos
sti
jae
or
cmp
sub
xor
cmp
sub
pushf
mov
dec
lcall
pop
xlat
imul
sub
mov
mov
dec
push
sub
sbb
jl
dec
in
out
mov
or
xchg
mov
lahf
mov
jg
jne
in
cmp
lock
out
cld
test
and
sbb
into
rcll
pop
mov
xchg
add
ja
jle
neg
loopne
mov
loope
adc
inc
pop
push
mov
sbb
cmp
sti
fwait
and
xchg
add
jo
jge
add
push
gs
pop
pop
inc
ret
iret
pop
mov
test
push
cmp
xchg
fsub
std
jecxz
fsub
jle
jbe
jae
aas
fs
dec
pop
jb
divb
cli
lret
push
pop
scas
xlat
gs
pop
lahf
mov
shlb
jns
xchg
int
mov
dec
push
enter
adc
sbb
pop
mov
mov
adc
in
inc
insl
sub
jp
adc
xor
cmp
cmp
icebp
push
pop
mov
dec
inc
jmp
add
btc
jmp
xor
add
jp
fwait
xor
lahf
imul
push
lods
add
aam
jmp
adc
shrb
ret
les
mov
add
mov
pushf
outsl
dec
lcall
cltd
cmp
mov
lahf
xchg
jbe
jae
inc
jo
lcall
fisubrs
dec
jmp
sub
gs
cmp
sbb
pusha
cmp
mov
sub
int3
jb
jo
xchg
cmp
push
int
addr16
sub
and
aam
cltd
cmp
cmp
inc
dec
insl
jbe
jle
in
mov
test
cs
stc
ja
daa
mov
icebp
loop
lds
mov
lods
xlat
sub
pop
mov
call
jmp
das
out
lret
jg
clc
in
mov
adc
test
jge
xor
xor
pop
cmp
inc
movsb
out
in
xchg
push
jno
popf
push
cmp
call
cmp
data16
aad
lds
aaa
movsl
ljmp
int
aaa
sub
lret
adc
jo
xchg
pop
pop
mov
pop
mov
add
enter
adc
inc
iret
in
mov
lods
cmp
adc
adc
jnp
aas
jnp
dec
cltd
mov
mov
repnz
xor
pop
add
leave
sbb
mov
inc
inc
loop
lea
dec
inc
daa
shl
sub
push
mov
jbe
mov
lahf
fs
cmp
xor
inc
pop
mov
cmp
fisttpl
xchg
mov
div
push
test
inc
loopne
mov
scas
lea
push
jl
xchg
je
xchg
pop
and
xlat
inc
insl
movaps
cmp
stos
rep
jg
mov
in
mov
xor
pop
push
xchg
gs
push
xchg
push
movsl
test
xor
cltd
and
mov
daa
repz
out
push
loop
add
je
push
rorl
in
out
dec
jns
mov
cmp
cmp
cmp
jns
lahf
pop
rep
rorl
jb
fldenv
imul
cmpsb
repz
rorl
or
rorl
mov
or
js
push
jne
js
jp
xchg
mov
and
xchg
adc
xchg
lret
jbe
stos
cmpb
cmp
lret
cmp
lds
mov
pop
icebp
add
fldl
push
rol
add
jle
mov
inc
jl
stc
out
ljmp
mov
dec
pusha
mov
cmp
xchg
pop
jne
and
js
int
mov
scas
xchg
int3
stos
lahf
cwtl
pusha
imul
mov
icebp
faddp
sti
sbb
out
jo
ret
ret
xchg
in
sbb
test
push
ffree
std
loope
popf
addr16
lods
jg
xor
push
sub
cmp
or
dec
cltd
lahf
jmp
jb
repz
sbb
sub
and
sub
mov
dec
xchg
sub
rcrb
sbb
aam
inc
in
movsb
lods
gs
push
repnz
mov
lcall
mov
insb
push
jp
and
mov
aad
jmp
nop
or
movsl
sub
jle
xchg
ljmp
mov
lods
jg
aaa
and
push
mov
xorl
dec
push
xchg
inc
adc
ljmp
inc
pop
and
aam
sti
lcall
rorb
rclb
push
mov
sbb
lds
sbb
ret
lods
shl
inc
push
jge
or
lock
movsb
or
inc
and
das
stc
add
ficompl
xor
test
sbb
jl
js
or
pop
pop
adc
mov
dec
subb
leave
call
push
fistl
xchg
mov
xlat
in
sub
cltd
sbbl
xchg
sub
cmp
sti
dec
mov
cwtl
push
xchg
dec
movb
out
or
and
adc
mov
sbb
popf
rcrl
aaa
pop
mov
fsubrl
mov
adc
sbb
stc
sub
push
in
mov
mov
ds
stos
dec
mov
in
adc
sbb
jo
add
xchg
pop
outsl
lret
imul
sbb
or
mov
out
mov
out
push
mov
jl
xorl
ss
std
dec
mov
in
scas
push
in
call
mov
cmpsb
jmp
add
adc
data16
sbb
aaa
rolb
xchg
pop
xor
xchg
subl
das
repnz
xor
loopne
and
sbb
pusha
jns
iret
xor
xor
push
maskmovq
mull
ret
mov
inc
scas
leave
fstl
add
gs
jnp
xor
in
mov
pop
ret
cli
pushf
jg
xchg
cld
and
sahf
mov
jmp
cmpsb
enter
loopne
pop
loope
pop
ss
sti
out
mov
rolb
je
mov
pop
or
xchg
mov
aam
cltd
lahf
pushf
rolb
mov
out
loop
jne
pop
out
and
mov
bound
nop
cltd
stc
popl
push
xlat
loope
jg
dec
xor
adc
gs
xor
adc
xchg
and
fcmovb
pusha
call
das
daa
test
and
mov
xchg
call
xchg
sbb
cld
mov
rcll
mov
and
dec
fiaddl
movsb
je
imul
xor
stos
leave
jnp
outsb
rcrl
sbb
incb
sub
addr16
in
insl
test
fmull
mov
sbb
fwait
mov
cli
sti
mov
jmp
push
sub
inc
incb
xchg
cltd
cmpl
or
mov
mov
jns
dec
aad
cmp
xor
adc
xchg
dec
push
rcrl
jne
iret
mov
mov
cmp
inc
bound
test
push
cli
dec
sarb
xor
in
add
in
frstor
jp
aam
dec
sub
addr16
data16
loop
or
loopne
cmp
sub
inc
ficoms
inc
ret
bound
mov
jl
xor
jp
pop
movsb
sbb
push
cltd
ja
enter
cltd
mov
aas
mov
dec
mov
pop
notb
sub
lods
cs
mov
dec
adc
and
cwtl
cmpsb
xor
push
lea
sub
push
icebp
jns
jg
inc
xor
lock
cmp
stc
inc
repz
sti
push
push
dec
ja
jbe
and
mov
and
cmp
jl
icebp
and
xchg
cmpsl
das
pop
mov
mov
pop
add
test
test
xchg
or
pop
pop
inc
sub
iret
xor
sbb
jp
adc
flds
iret
test
lcall
lret
pop
mov
ljmp
adcl
fcmovbe
scas
inc
sub
jns
repz
notb
addr16
pop
shrl
push
mov
cmp
push
mov
adc
fnstenvs
cmpb
loop
rcl
fbld
sbbl
mov
outsl
movsl
inc
inc
xchg
dec
lea
add
xchg
std
and
or
or
rorl
inc
dec
push
and
fsubrs
jmp
mov
into
arpl
lods
dec
jns
push
lods
scas
ret
cs
popf
jecxz
jmp
push
cli
scas
shlb
insb
sbbl
mov
fwait
lods
lahf
lret
insl
test
int
mov
inc
pop
packssdw
and
push
test
dec
add
or
int
add
nop
pmullw
jno
aam
rcr
cltd
push
lcall
mov
mov
mov
leave
dec
repz
sub
ss
pop
fwait
jmp
dec
and
mov
xchg
jp
mov
push
mov
test
movsl
mov
push
out
ljmp
in
fists
jecxz
insb
imul
or
mov
das
leave
mov
cmp
mov
jnp
dec
lds
inc
pop
movsl
out
or
in
test
inc
shrl
aad
les
lahf
dec
jae
adc
aaa
or
jmp
sub
push
orb
or
jg
inc
mov
mov
mov
xchg
negb
arpl
mov
movhps
jae
push
loope
push
sbb
xchg
mov
jno
sbb
popa
dec
aas
sub
push
inc
push
adc
loopne
jae
dec
inc
dec
rcrl
xor
loopne
cmpsl
pop
xchg
je
or
mov
inc
cwtl
loop
and
jo
mov
jg
sbb
lock
sub
jp
ja
rcrl
in
cmpsl
add
fistpl
int
jno
jae
subb
mov
cmpsl
es
shlb
mov
icebp
push
jae
xor
loopne
add
push
adc
and
cld
pushf
fmulp
loopne
imul
call
imul
jns
mov
shrb
adc
xchg
rcrl
adc
das
outsl
shrl
adc
sbb
or
mov
in
xchg
cltd
mov
push
mov
pop
xchg
sbb
pop
pop
pop
mov
add
mov
inc
cltd
daa
fwait
mov
sub
lret
inc
stos
or
scas
aad
aad
in
pop
cmp
mov
cltd
push
mov
sbb
roll
ljmp
mov
movsl
insb
jbe
aad
xchg
xchg
dec
movsb
orl
cmp
sub
xor
pop
lea
cmpsb
sarb
fs
pop
or
decb
in
mov
xchg
rcl
pop
pusha
insl
mov
add
cli
pop
sbb
jae
adc
ljmp
add
sbb
dec
inc
xchg
xlat
dec
xor
jecxz
decb
xchg
aad
test
ss
loopne
pop
sub
push
push
les
sbb
sub
fwait
inc
pop
cmpsb
xchg
mov
add
mov
pop
ljmp
movsb
stc
jl
pop
ret
xor
xor
les
push
decb
mov
push
add
inc
mov
adc
jecxz
subb
pop
cmpsl
mov
and
lahf
clc
lret
push
add
push
je
rcrl
dec
js
xchg
in
sub
mov
cmpsb
out
adc
mov
sub
cmp
int
pop
dec
xchg
stos
ss
push
jmp
lods
dec
push
movsl
push
add
adc
cltd
pop
in
xorb
jne
lds
loop,pn
ds
cli
in
xchg
ja
and
add
insb
add
xchg
lret
mov
mov
aas
shll
mov
jae
mov
arpl
pop
and
in
push
inc
inc
stos
dec
jne
fstps
stos
mov
loope
out
fimuls
jnp
cmp
fnsave
psubsb
add
sahf
or
adc
pop
jmp
mov
jl
lret
cli
adc
xor
dec
repz
cld
insl
sbb
leave
fisttps
mov
sbb
aaa
inc
je
das
add
dec
jo
shl
rorl
enter
push
in
sti
xchg
or
mov
insb
enter
lahf
adc
pop
in
jmp
push
sub
sahf
negl
pushf
jo
xchg
xor
cmp
xor
xor
push
jmp
je
outsb
movsb
sub
push
aas
stos
cmpsb
addr16
pop
mov
unpckhps
sti
enter
dec
xchg
mov
xlat
xchg
rcll
out
inc
call
inc
divb
or
and
and
pop
rorb
shll
clc
jbe
mov
cltd
pop
and
push
sub
sti
mov
sub
fidivs
mov
fwait
cli
push
jo
repnz
add
fs
outsl
and
jmp
pop
int
mov
pop
dec
xchg
add
sbb
lods
jns
add
popf
sub
addb
idivb
mov
inc
cltd
ds
bound
mov
inc
scas
xchg
bound
inc
movsb
cltd
cmp
loop
aaa
repnz
pop
iret
push
jmp
pop
and
mov
pinsrw
cld
push
adc
and
in
imul
mov
idivb
sub
jae
xchg
mov
movq
push
cmpsb
lea
adc
adc
fisubrs
repnz
mov
rcrb
ds
les
push
mov
jg
rolb
sbb
sbb
addb
inc
popf
fidivrs
icebp
mov
fsubl
and
fnsave
lock
inc
xchg
test
push
mov
test
loope
xchg
sbb
js
lock
cmp
lock
inc
ss
dec
popf
and
cmp
lods
add
jb
movsl
inc
dec
cmc
jl
adc
push
cmpsb
mov
popa
fisttpl
movsb
gs
mov
xchg
imul
scas
or
mov
imul
ficoml
mov
imul
mov
dec
xor
xor
xor
stc
repz
leave
idivb
imul
mov
div
sti
std
leave
lds
sub
loop
ret
adc
or
inc
loope
mov
add
test
adc
test
stos
inc
movsl
sbb
add
imul
or
xor
aaa
cs
xlat
mov
jnp
push
into
mov
pop
jnp
jl
test
mov
mov
jecxz
and
sbb
lret
jae
aam
xchg
pushf
ja
pop
xchg
push
icebp
mov
aas
dec
adc
mov
xchg
lea
xor
test
pop
addb
icebp
sbb
inc
nop
xchg
mov
and
push
pop
mov
add
leave
lcall
lcall
and
repz
stos
pushf
popf
lret
inc
aas
jnp
pop
jno
sub
lock
mov
imul
lods
push
mov
dec
aaa
adc
inc
les
and
loopne
inc
repz
lcall
dec
xlat
xchg
into
pop
les
scas
fstl
jg
add
movb
mov
inc
xor
int
mov
mov
psubsw
stos
sub
fstpt
push
sub
jmp
lds
xorl
aam
pop
fcmove
jae
sbb
mov
push
testb
loope
dec
or
lret
negl
adc
or
push
imul
mov
or
jno
mov
jb
cmp
lret
and
xlat
int
stos
add
rolb
pop
cmpsl
pop
std
adc
aam
adc
mov
mov
mov
pslld
add
out
add
sub
mov
xor
and
dec
dec
pop
dec
outsb
lds
jmp
inc
pop
sbb
pop
inc
or
insl
test
in
dec
scas
and
imul
scas
out
cmc
jp
and
insl
enter
sbb
mov
push
or
pop
xchg
cld
lods
dec
loope
pusha
scas
aad
jo
lret
fmuls
inc
jmp
shlb
add
fdivp
repnz
cmovns
pusha
mov
in
push
lods
shlb
es
imul
sub
je
imul
test
ret
sahf
out
xchg
mov
push
cwtl
mov
fadd
push
repnz
cmpl
xlat
push
mov
loopne
gs
mov
pop
xor
jno
dec
pop
and
icebp
imul
lcall
jle
jne
ss
popa
cld
fsubp
cld
imul
cmp
sahf
fsts
mov
mov
adc
jns
fisubrl
mov
mov
and
sti
mov
sbb
push
adc
fsubrs
mov
push
xchg
and
aam
mov
push
cli
pop
sub
pop
or
cmpl
clc
xor
xlat
fs
fwait
xor
xchg
sbb
dec
xor
and
inc
sahf
les
stc
sbb
adc
mov
cmp
adc
xor
push
bound
pop
pop
xchg
lods
in
inc
and
push
mov
or
pushf
leave
or
into
je
sub
lds
in
mov
xchg
mov
mov
jg
rol
lock
scas
or
daa
lcall
cltd
sti
push
push
aaa
or
movsb
repnz
std
pushf
das
mov
sbbl
inc
or
jnp
sub
add
imul
into
and
push
cmpsl
iret
push
adc
cmp
add
xchg
stos
fiadds
jb,pn
add
xor
faddl
jmp
test
les
pop
cltd
push
jne
out
lcall
mov
neg
aaa
mov
inc
or
dec
inc
lea
outsb
data16
cmp
mov
ficompl
mov
xchg
mov
popf
dec
cli
fstpl
xchg
rorl
insl
ss
je
std
mov
jb
xor
push
inc
call
pusha
cmp
add
loope
jge
loop
mov
icebp
and
mov
pop
inc
rolb
ret
dec
fnsave
leave
test
fidivrs
adc
mov
mov
adc
test
jo
mov
mov
mov
mov
cltd
pop
dec
aaa
inc
push
fdivp
inc
mov
in
push
add
movsb
rcl
xor
lds
scas
dec
jns
js
test
clc
sbb
mov
jge
cmp
xor
mov
mov
call
xchg
mov
xor
dec
mov
cmpsb
jo
and
xlat
sbb
idiv
dec
sbb
lea
pop
mov
xor
jp
movsl
sbbb
mov
jo
add
jae
xor
roll
cwtl
add
cmpl
jl
cmpsl
fisttps
insl
sbb
xchg
pop
inc
sti
sbb
dec
inc
adc
stos
sbb
shll
jns
adc
mov
fs
pxor
pushf
insl
addr16
inc
cmpsl
in
mov
imul
push
sub
dec
xlat
xchg
iret
scas
jp
lahf
ss
roll
imul
xor
xchg
in
test
fiaddl
mov
add
fimull
and
xchg
dec
inc
dec
inc
scas
adc
loopne
test
cmpb
sub
sub
xchg
dec
out
mov
adc
and
lcall
repnz
ret
cmp
into
dec
cmp
mov
jae
sti
test
stos
scas
adc
or
jo
sub
mov
lods
bound
xchg
jle
pop
xor
les
inc
clc
sub
pop
rcrl
je
insb
std
lods
xchg
mov
cli
bound
popa
daa
cmp
out
or
inc
test
cmpsb
fxch
enter
test
mov
push
mov
pusha
sub
xchg
or
ss
and
in
bound
ljmp
fwait
mov
and
es
mov
sbbb
mov
push
mov
push
fwait
ljmp
fcmovnb
scas
push
jb
mov
lods
ret
mov
clc
shrb
xrelease
ficompl
cmp
mov
mov
mov
cmc
scas
jl
std
push
sbb
in
scas
out
enter
aam
popf
out
add
daa
pushf
lods
push
insl
add
or
rcr
cmp
mov
daa
outsb
cmpsb
data16
jne
in
outsb
jecxz
xchg
adc
fstps
lcall
insl
ja
mov
xchg
adcl
divl
test
std
xchg
jl
inc
pop
push
cmp
and
xor
sub
mov
cli
mov
jg
lods
lods
dec
test
and
ret
adc
push
jle
imul
mov
leave
das
int3
rclb
lea
mov
inc
cltd
cmc
into
adc
xor
xchg
loope
cmpsb
cmp
fnstcw
cmc
inc
repnz
decl
push
dec
jno
mov
mov
push
cltd
incl
mov
push
mov
fiadds
shll
clc
lret
js
pop
nop
sbb
int3
push
lahf
outsl
test
pushfw
shll
pop
mov
lret
adc
push
sbb
xchg
loopne,pt
sub
ficomps
imul
lock
hlt
call
dec
cmp
repz
dec
mov
adc
xlat
je
add
or
mov
mov
push
xor
dec
jbe
out
jbe
std
push
insb
push
test
pop
shll
push
repnz
mov
cmp
and
sarb
mov
jns
xor
repnz
inc
stc
decb
cmp
daa
roll
movsl
dec
imul
mov
mov
xchg
sbbl
imul
pusha
test
push
inc
push
iret
dec
stos
subb
sub
dec
mov
insb
pop
xlat
jne
sti
sbb
xor
sbb
dec
mov
ret
xchg
mov
cmc
mov
out
cwtl
pop
addr16
lahf
sti
popf
sbb
jno
test
cltd
jns
mov
adcb
xor
inc
icebp
fiadds
fildll
cmp
pop
or
stos
mov
jb
or
in
mov
aaa
sti
add
scas
movsl
sbb
out
loopne
popf
out
adc
repnz
and
fldt
add
outsb
inc
shrb
jnp
xchg
arpl
into
test
mov
xchg
sahf
cmp
in
add
pusha
das
cmpsl
mov
xchg
jnp
and
inc
fcomp
aam
xor
cmp
test
hlt
push
adc
fisubl
cmpsb
ror
mov
stos
sub
int
push
test
int3
ja
xchg
push
mov
pop
repnz
je
test
xor
pop
outsb
sub
adc
mull
aas
std
cli
xchg
cmc
test
lcall
nop
imul
nop
pusha
call
jmp
push
ret
call
jmp
mov
add
sub
cmpl
mov
jne
lea
push
call
mov
mov
lea
push
push
call
stos
mov
scas
jne
cmp
jne
lea
jmp
push
imul
insb
insb
outsl
arpl
push
imul
jb
add
jb
jne
insb
push
jb
je
arpl
mov
or
je
mov
xchg
mov
lea
cmpl
je
push
push
push
push
call
mov
mov
add
je
push
push
push
push
call
mov
push
mov
add
pushl
pushl
push
push
call
mov
cmp
jne
incb
push
push
push
push
mov
sub
mov
xor
or
je
js
lods
cmp
je
jmp
cmp
je
inc
dec
jmp
mov
jmp
cmpb
jne
and
rol
sub
mov
add
add
sub
jmp
pop
pop
pop
pop
jmp
mov
mov
add
mov
sar
rep
mov
and
rep
pop
push
push
pushl
call
add
cmpl
jne
push
push
pushl
call
mov
or
je
mov
xchg
mov
mov
sub
je
mov
shr
xor
mov
add
cmpl
je
mov
sub
shr
mov
add
add
mov
shr
cmp
je
cmp
je
cmp
je
jmp
mov
and
add
jmp
mov
and
add
jmp
mov
and
add
jmp
orw
add
loop
jmp
mov
mov
or
je
add
lods
or
je
add
mov
lods
stos
jmp
mov
mov
add
mov
test
je
add
mov
push
call
test
jne
push
call
mov
movl
mov
mov
test
jne
mov
add
add
mov
mov
add
add
test
je
test
jne
add
inc
inc
push
and
push
pushl
call
test
pop
jne
test
jne
push
mov
add
push
push
lea
push
push
jmp
and
mov
cmp
jne
push
mov
dec
shl
mov
mov
mov
add
mov
add
pop
jmp
push
mov
add
push
push
lea
push
push
jmp
mov
addl
jmp
mov
mov
mov
add
mov
jmp
mov
mov
add
push
push
push
push
push
pushl
push
call
pushl
push
movzwl
movzwl
lea
lea
lods
test
je
add
cmp
loopne
jne
inc
push
push
push
testb
je
shll
testb
je
shll
testb
je
shll
pushl
add
push
call
pop
lods
lods
mov
loop
call
pop
mov
push
add
pop
or
mov
popa
jne
mov
ret
push
ret
mov
lea
push
push
call
mov
lea
push
call
mov
lea
push
push
call
mov
mov
lea
push
push
call
call
add
pop
push
lea
push
push
push
call
push
call
imul
gs
xor
cs
insb
add
imul
jae
jne
gs
xor
fs
insb
add
jae
popa
addr16
outsl
js
add
jo
imul
dec
inc
inc
inc
push
and
push
dec
push
add
and
outsl
arpl
jne
and
je
jns
jo
imul
arpl
insb
and
je
bound
insb
outsl
arpl
gs
and
and
popa
insl
imul
and
jb
jb
and
and
imul
and
jne
and
je
bound
insb
outsl
arpl
gs
and
and
popa
insl
imul
and
jb
jb
and
mov
pushf
lods
or
je
xor
mov
shr
jae
xor
dec
jne
jmp
xchg
pop
ret
add
inc
add
adc
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
nop
push
add
jo
add
inc
add
rolb
add
add
add
pusha
add
loopne
rolb
add
add
pusha
add
loopne
loopne
add
incl
add
mov
sub
lea
push
call
mov
mov
push
push
lea
call
test
jne
or
add
ret
mov
lea
push
push
lea
call
test
jne
or
add
ret
mov
add
ret
add
add
add
push
pop
or
or
adc
sbb
sub
cmp
pusha
jo
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
or
or
or
or
or
or
movups
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
push
mov
push
mov
push
cmp
jb
push
mov
mov
mov
inc
mov
mov
mov
mov
shl
and
or
mov
add
mov
mov
mov
cmp
jae
pop
mov
mov
mov
sub
shr
mov
sub
and
shr
add
pop
mov
pop
pop
ret
mov
mov
mov
mov
lea
mov
add
ret
sub
push
push
push
mov
push
mov
mov
xor
lea
xor
rep
mov
cmp
mov
jbe
xor
mov
mov
lea
inc
inc
cmp
mov
jb
mov
mov
mov
mov
mov
xor
mov
movl
mov
lea
mov
mov
shl
add
cmp
mov
ja
mov
mov
mov
add
cmp
mov
mov
jl
mov
mov
mov
mov
shr
mov
and
sub
add
mov
mov
mov
mov
mov
mov
shl
mov
shr
rep
mov
mov
and
rep
mov
mov
mov
add
inc
dec
add
cmp
mov
mov
mov
jge
cmp
je
pop
pop
pop
xor
pop
add
ret
mov
xor
test
jbe
mov
mov
test
je
mov
and
mov
mov
xor
mov
mov
lea
inc
mov
mov
inc
cmp
jb
pop
pop
pop
mov
pop
add
ret
push
push
push
mov
push
mov
cmpl
jb
mov
mov
inc
mov
mov
mov
mov
shl
and
or
mov
add
mov
mov
mov
cmp
jae
mov
mov
mov
sub
shr
mov
and
cmp
jae
mov
mov
shr
xor
mov
mov
jmp
cmp
jae
cmp
sbb
add
jmp
cmp
jae
mov
jmp
cmp
jae
mov
jmp
cmp
jae
mov
jmp
cmp
sbb
add
mov
mov
add
mov
mov
mov
sub
sub
pop
shr
mov
add
mov
pop
pop
mov
pop
ret
push
push
push
mov
xor
xor
lea
mov
push
call
mov
pop
mov
add
shl
add
inc
cmp
jb
mov
lea
push
push
call
push
push
lea
call
push
push
lea
call
push
push
lea
call
mov
pop
pop
add
pop
ret
mov
mov
mov
push
mov
lea
mov
movl
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
rep
mov
stos
call
pop
ret
sub
push
mov
push
push
lea
push
push
mov
call
test
jne
mov
mov
rep
stos
xor
push
mov
call
mov
inc
cmp
jb
lea
lea
push
mov
call
test
jne
pop
pop
pop
pop
add
ret
xor
mov
call
cmp
jae
mov
mov
add
and
mov
inc
jmp
jne
push
mov
call
add
test
jle
cmp
jge
mov
dec
mov
inc
test
jg
jmp
cmp
jne
push
mov
call
add
jmp
push
mov
call
add
test
jle
cmp
jge
movb
inc
dec
test
jg
cmp
jl
lea
lea
push
call
test
jne
pop
pop
pop
pop
add
ret
lea
lea
push
call
test
jne
pop
pop
pop
pop
add
ret
lea
push
lea
call
test
jne
pop
pop
pop
pop
add
ret
movb
xor
cmpb
jne
inc
cmp
jb
jmp
movb
mov
lea
mov
rep
pop
pop
pop
mov
pop
add
ret
call
nop
pop
sub
ret
sub
mov
push
push
push
movl
mov
push
xor
test
mov
mov
jbe
lea
call
cmp
jae
mov
mov
mov
inc
inc
mov
mov
jmp
cmp
jae
add
mov
and
shr
lea
cmp
mov
jne
lea
call
mov
xor
push
call
mov
pop
cmp
jb
mov
mov
inc
mov
mov
mov
mov
shl
and
or
mov
add
mov
mov
mov
cmp
jae
mov
mov
mov
sub
add
shr
mov
mov
sub
and
shr
xor
push
call
mov
pop
mov
add
add
mov
mov
mov
xor
push
call
mov
pop
test
mov
je
cmp
jb
mov
lea
cmp
jb
mov
mov
shl
mov
inc
mov
mov
mov
mov
and
add
or
mov
cmp
mov
mov
jae
mov
mov
mov
sub
add
shr
mov
mov
sub
and
shr
lea
call
add
lea
jmp
cmpl
jb
mov
mov
shl
mov
inc
mov
mov
mov
mov
and
add
or
mov
cmp
mov
mov
jae
mov
mov
mov
sub
add
shr
mov
mov
sub
and
shr
add
cmp
jae
mov
test
je
mov
mov
jmp
mov
mov
lea
mov
mov
mov
mov
mov
inc
lea
cmp
mov
jae
mov
sub
inc
mov
mov
mov
cmp
jb
mov
add
mov
mov
jmp
mov
call
test
je
cmp
jb
mov
mov
pop
pop
pop
mov
pop
add
ret
pop
pop
pop
xor
pop
add
ret
or
add
aad
add
out
add
stc
incl
add
add
add
jb
gs
xor
cs
insb
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
incl
add
add
add
add
add
add
add
xchg
add
add
add
add
gs
xor
fs
insb
add
jbe
jb
cs
insb
add
jbe
jo
xor
cs
insb
add
add
add
add
add
add
add
add
jo
imul
add
je
imul
push
gs
insb
outsl
jae
dec
gs
