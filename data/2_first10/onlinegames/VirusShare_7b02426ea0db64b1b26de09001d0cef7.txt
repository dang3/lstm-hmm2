out
call
in
sub
andb
push
push
push
push
xor
pop
lea
fcomi
stos
push
ljmp
pop
xor
jmp
mov
pop
ja
test
add
loop
mov
dec
gs
in
in
dec
mov
xor
cs
jbe
dec
mov
insb
jmp
mov
push
call
pop
mov
jg
mov
push
push
push
push
push
mov
push
push
call
mov
and
adc
clc
lea
push
add
in
and
call
jbe
adc
adc
pop
mov
or
adc
pop
pop
pop
leave
ret
add
aaa
fstpt
push
xor
push
push
push
cmp
test
je
push
jae
adc
xor
mov
add
push
push
push
or
fwait
mov
lock
add
clc
fcomps
push
pop
mov
pop
insl
movzwl
ljmp
addr16
or
or
cmp
xor
cmp
mov
in
je
push
adc
pop
or
xor
cmp
jne
hlt
jmp
push
testb
push
pop
inc
cmp
push
cmpl
sbb
push
push
or
scas
dec
mov
adc
mov
pop
cld
sub
ret
lock
ret
repz
sub
inc
scas
ja
gs
enter
clc
inc
xchg
xor
sbb
sub
cmpl
je
adc
adc
data16
add
or
push
cmp
les
dec
and
lods
jmp
pop
push
fs
popf
insl
ret
insl
negl
test
gs
into
loopne
add
outsb
cmp
daa
push
or
add
jb
jb
sub
outsl
or
addr16
popa
add
insl
cs
lret
in
and
inc
ljmp
jb
pop
in
jae
out
pop
out
inc
lock
lcall
repz
outsb
xor
imulb
cmpsb
imul
pop
push
xor
xchg
fstp
fsubr
xchg
rep
or
push
mov
pop
mov
out
jmp
pushl
adc
adc
push
mov
ror
mov
inc
inc
dec
dec
test
jne
push
pop
jmp
lahf
xor
push
push
push
inc
push
xor
push
add
add
cmpb
subl
rclb
imul
sub
push
cmp
lret
push
jbe
push
cmp
xlat
cmpl
jne
and
fs
mov
mov
push
push
adc
pop
fcmovnbe
xor
or
adc
add
dec
scas
sub
and
jb
aas
jmp
ret
pop
pop
pop
or
mov
inc
xchg
xchg
mov
out
test
push
lea
mov
sti
mov
mov
inc
jns
mov
adc
data16
popf
cs
mov
adc
xchg
adc
xor
mov
and
fcomip
arpl
and
push
call
or
das
cld
incl
push
push
xor
mov
test
je
enter
push
push
add
test
call
imul
adc
andb
xor
sbb
inc
sbbb
cli
mov
push
mov
mov
inc
inc
test
jne
pop
adc
aad
mov
cmp
xor
rcrb
repz
gs
push
add
je
movsl
pop
lcall
fstps
add
mov
or
jne
cmpsb
fwait
lahf
lods
insb
inc
or
test
add
xchg
lret
inc
add
stos
mov
ror
in
test
push
push
test
inc
pop
jecxz
or
pop
fcmovnbe
fsincos
xor
loopne
mov
push
jb
xlat
sbb
add
mov
mov
add
dec
push
mov
in
mov
std
cmp
cmpsb
test
aaa
aaa
sub
data16
xchg
xchg
jb
inc
into
loopne
xchg
jne
xchg
outsb
pushf
pushf
insb
nop
mov
fstpl
pushf
in
loope
or
int3
cld
mov
xchg
or
clc
push
jg
mov
push
push
aas
cld
and
mov
orb
mov
and
insl
adc
nop
scas
jne
push
adc
call
sbb
jae
ret
ss
test
dec
inc
push
push
push
adc
adc
fwait
or
fldt
or
adc
loopne
imul
addl
sar
fwait
sar
sbb
add
ljmp
mov
popf
jle
stc
in
in
jl
inc
or
xchg
lahf
adcl
pop
jb
cltd
fcomp
cld
xor
gs
or
pop
inc
mov
sbb
inc
ret
int3
out
lock
and
add
flds
add
or
adc
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
mov
add
addr16
jl
pusha
xor
lcall
pop
pushf
stos
mov
imul
push
pop
jbe
rcrl
xor
dec
adc
xor
jmp
adc
dec
ret
arpl
incb
pop
add
outsl
arpl
push
call
ja
push
xor
inc
bound
push
jb
jbe
insb
gs
cld
lcall
jae
gs
xor
pop
add
push
dec
pop
dec
and
sti
filds
and
jo
push
outsl
imul
and
sbb
dec
pop
or
daa
imul
andl
cs
insb
cmp
sub
push
in
xchg
or
xchg
cmp
mov
cmpl
ljmp
push
jle
nop
add
inc
dec
mov
leave
dec
nop
cmp
dec
inc
dec
mov
inc
nop
push
xchg
dec
adc
dec
push
push
pusha
ljmp
add
add
nop
add
xor
mov
add
mov
add
add
pop
mov
int
mov
jg
push
jb
addr16
insl
and
outsb
outsb
outsl
je
bound
jb
outsb
and
pusha
mov
and
fs
push
sbb
jbe
jnp
fwait
out
mov
add
add
je
and
jle
out
and
jae
test
push
sti
mov
mov
fs
and
adc
or
out
dec
push
imul
and
adc
push
out
loopne
and
out
in
or
push
or
add
and
xchg
xchg
add
add
mov
das
add
aaa
fwait
fs
or
and
sub
fnsave
mov
inc
test
dec
pop
mov
popf
mov
xor
add
jb
and
push
clc
add
mov
sti
bound
pop
mov
xlat
push
subb
shrb
popa
je
dec
js
jp
lahf
mov
push
push
pop
lahf
xchg
cmpsb
fwait
mov
add
arpl
imul
shlb
sbb
add
jb
insb
outsl
arpl
sti
add
dec
mov
push
out
mov
movsl
mov
sub
lret
cmpsb
imul
add
pop
mov
lcall
dec
push
and
mov
roll
sub
dec
bound
shll
fwait
movsl
fnstenv
mulb
xor
shrl
sub
dec
pusha
shll
mov
dec
int3
loopne
add
lcall
mov
aam
mov
mov
imull
mov
add
int
jmp
mov
rcrl
lods
mov
fcompl
ss
push
add
movsl
orb
test
mov
cmpsb
imul
cmpsb
shll
sub
fnstenv
mov
mov
ljmp
pusha
lcall
or
mov
or
add
push
addb
lcall
es
cmpsb
adc
pop
mov
cmp
add
std
dec
pusha
sub
je
jb
gs
mov
push
pop
mov
lds
push
gs
fcos
rcr
inc
sub
dec
jo
outsb
push
jb
inc
adc
sub
dec
dec
inc
push
and
shlb
pop
rolb
or
or
or
inc
add
xchg
add
aaa
sbb
pusha
flds
shlb
inc
add
jl
mov
add
test
test
flds
add
and
fisttps
pop
flds
sbb
jno
sub
and
testl
das
pop
add
pop
ss
and
add
or
aas
mov
aas
add
pop
inc
fsubs
mov
decl
fwait
mov
add
test
adc
cltd
sub
push
xchg
xchg
inc
xchg
mov
ss
inc
test
add
ret
lret
lea
fadds
das
xor
pusha
and
adc
movq
add
or
outsl
add
jae
repz
push
packsswb
je
jne
jb
gs
sbb
jmp
js
push
gs
punpcklbw
pop
add
push
inc
jb
push
and
ja
int
sbb
or
push
mov
jae
pop
and
addr16
inc
mov
mov
or
sbb
bswap
dec
rcl
pusha
and
lea
dec
mov
call
sti
mov
inc
sub
jmp
lds
jmp
xchg
or
imul
push
lret
mov
je
jo
lahf
jno
gs
mov
js
add
push
jo
add
je
outsl
outsb
mov
popl
daa
mov
add
mov
je
jo
jne
pop
in
mov
add
pop
add
jb
arpl
popa
insl
cmp
jg
dec
inc
push
push
inc
push
inc
pop
dec
imul
cmpsb
outsl
ja
insl
mov
jae
dec
push
pop
inc
jne
jb
je
xor
pop
dec
mov
ja
jb
inc
popa
jb
pop
addr16
arpl
jge
cs
mov
lea
mov
cmp
sti
cmp
ja
jb
mov
jmp
add
cmpb
lahf
addr16
ja
add
mov
mov
clc
outsl
lds
stc
inc
loop
inc
sbb
adc
test
sbb
inc
dec
sbb
or
inc
mov
or
jmp
cmp
xchg
arpl
pop
jae
outsl
jnp
repz
add
into
mov
stos
add
cmp
iret
cmp
mov
add
mov
idiv
mov
cmp
push
push
push
sbbb
addr16
xchg
push
outsb
pop
mov
mov
xchg
dec
dec
dec
inc
call
mov
lods
push
mov
std
pop
fildll
adc
pop
sbb
cli
sub
mov
add
in
push
push
aaa
pop
ja
push
and
mov
add
adc
push
mov
cmpl
push
mov
push
mov
push
mov
rorl
mov
adc
in
inc
in
push
push
std
mov
in
dec
in
add
movb
mov
sub
sub
mov
movb
outsl
mov
or
or
movb
sti
push
push
imul
inc
call
imul
jbe
mov
ljmp
in
or
mov
add
push
lock
inc
shrb
cwtl
push
fstpt
divb
or
negb
outsb
into
or
imul
adc
adc
jle
cmp
insb
and
lcall
push
movzbl
xor
in
rcll
cs
pop
xchg
insl
in
sbb
adc
inc
or
mov
pop
inc
pop
cmp
pop
jl
push
aaa
sub
in
pop
mov
mov
movsb
test
jne
ret
cmpw
loop
dec
pop
jne
mov
add
cmpl
push
and
jl
inc
jle
xor
adc
and
adc
mov
loopne
faddl
and
clc
nopl
xlat
xchg
nop
pushl
jne
ret
pushf
or
push
int
jne
out
push
push
or
and
call
mov
orl
idiv
add
add
jge
push
push
push
sbb
aas
movups
pop
insl
push
push
push
and
pop
mov
xchg
inc
mov
dec
mov
insl
insb
push
push
pop
sbb
call
push
or
jbe
mov
dec
pop
push
out
lea
lock
add
mov
or
movsl
movsb
mov
mov
sti
rep
jb
fisttpl
cmp
dec
mov
or
or
enter
cmp
std
enter
pop
mov
push
mov
outsl
insb
aam
xor
cmp
ja
jmp
mov
adc
adc
inc
push
idivl
jbe
in
lea
add
push
inc
clc
push
and
sub
or
add
mov
pop
leave
cmpl
xor
adc
sbb
in
and
or
and
in
fxch
pop
xchg
or
push
adc
cmp
xchg
js
mov
pop
jmp
cmp
je
mov
adcl
mov
xchg
pop
push
ret
cmp
mov
ljmp
jle
xor
cmp
jle
clc
in
sbb
in
jle
jecxz
ja
shr
fwait
or
adc
je
test
lock
call
mov
incl
repnz
mov
push
in
jne
cmpl
daa
incl
mov
cmp
jne
xor
test
insl
inc
push
inc
clc
xor
jge
fnstcw
hlt
add
rcrl
jl
inc
cmp
mov
fcoms
jmp
leave
cmp
pushf
mov
inc
and
pop
jbe
xor
adc
scas
xchg
das
mov
ja
jne
cmpw
ja
dec
jmp
ret
mov
rcll
add
mov
aaa
ret
add
repnz
pop
cmp
pop
int
push
je
add
or
ds
pop
and
xor
inc
into
mov
push
jmp
adc
mov
add
xor
pop
or
or
call
iret
sub
pop
inc
ljmp
fcomip
stc
adc
jg
pop
pop
sbb
jmp
andb
mov
add
add
add
shl
and
pop
ljmp
xor
adc
pop
adc
sub
stos
in
mov
and
rclb
adc
pop
fwait
push
mov
fucomp
loope
leave
mov
lcall
xor
adc
xor
adc
hlt
imul
cld
or
adc
lsl
es
movb
inc
cmp
jb
mov
cmp
mov
imul
add
andl
or
sti
shrl
ja
xor
adc
jo
out
outsb
add
push
add
fmuls
or
fs
cmp
jecxz
push
fstpt
filds
cmp
loopne
cmp
jae
incl
lret
loopne
mov
shr
add
imul
mov
dec
or
fcmovnb
or
lods
or
inc
mov
mov
jne
rol
inc
loope
lahf
sbb
jmp
mov
add
or
rcll
cli
or
test
mov
lds
jne
cmp
push
cs
push
jns
add
pop
decl
jae
mul
stos
pop
sbb
mov
jbe
push
xchg
pop
jbe
or
cmp
sti
cli
divb
decb
jl
and
or
add
lea
fucomi
xlat
sbb
shr
shl
or
mov
add
mov
shll
repnz
not
and
testl
lea
test
or
js
add
test
outsl
push
aam
or
fisubs
fimull
add
pop
or
lea
shr
shl
push
imul
mov
inc
sub
mov
and
not
cmp
fistps
add
repz
mov
out
mov
or
repz
dec
daa
pop
jg
push
adc
xchg
sbb
mov
push
push
mov
mov
loop
jmp
inc
mov
not
and
shlb
adcb
sub
xchg
rcr
mov
addr16
pop
roll
mov
sbbb
test
popa
xlat
or
mov
pop
ret
mov
adc
test
roll
mov
mov
sbbl
test
jle
int3
xor
add
add
mov
xor
add
sbb
in
popf
adc
jne
les
repz
pop
fidivs
out
fcomp
cwtl
subb
addl
repz
imull
pop
rcr
das
pusha
adc
into
das
das
pop
scas
testl
ret
repz
cmpsb
pop
les
subb
add
push
faddl
idiv
loop
movups
test
sub
sub
fcom
add
or
fdivrs
dec
push
xlat
mov
outsl
mov
adc
cmp
stc
xor
or
or
lock
fcoml
lods
es
fisttpl
and
fidivrs
cmp
enter
das
push
mov
cmpsb
xor
xchg
cmp
sub
dec
lds
xchg
or
fidivrs
scas
and
or
popa
adc
add
or
cs
loopne
ljmp
and
aad
negb
pop
bound
sbb
imul
add
shlb
clc
jg
mov
mov
cmp
inc
rclb
push
mov
or
fadds
hlt
push
and
clc
data16
fisubrs
pop
pop
es
adc
mov
or
imul
push
and
lock
insl
fwait
andl
xchg
icebp
imull
outsl
fisubrs
mov
hlt
pop
adc
call
jnp
lcall
mov
vmovdqu
pusha
adc
inc
add
rorb
in
mov
mov
mov
cmp
int3
cmp
fnstcw
ds
jg
or
add
mov
mov
mov
out
outsl
pop
repz
and
sbb
loopne
ret
out
mov
lret
inc
enter
aaa
or
mov
push
push
ret
shlb
fimuls
out
xlat
sbb
push
cmp
imul
call
mov
adc
inc
loop
shr
or
xlat
loope
or
jmp
rcrb
push
cmc
out
aam
mov
not
lcall
int3
aad
int
cld
sbb
add
adc
movl
xchg
dec
fisttps
lret
repz
adc
or
xor
mov
mov
cmp
jmp
add
mov
pop
test
xor
mov
lcall
xchg
mov
fadd
and
insl
adc
mov
sti
xor
mov
repnz
mov
cmp
std
mov
mov
ret
mov
ljmp
outsl
addr16
add
mov
fimuls
sub
loop
fmuls
pop
push
int3
pop
pusha
dec
mov
pop
pop
xchg
loop
xor
pop
mov
jle
jo
mov
out
dec
jge
sti
or
mov
jle
sub
jae
mov
add
sbb
lock
cli
daa
mov
cmp
fidivl
cmc
test
jmp
jae
adc
fidivs
sub
ret
or
fcmove
repnz
cmp
or
push
scas
lock
aas
sbb
cmp
rcl
fstps
xchg
out
jbe
les
in
jae
bnd
divl
idiv
ss
xchg
in
mov
jl
pop
je
loope
mov
dec
pushl
or
aam
pop
mov
mov
cmp
cli
leave
rcl
mov
mov
stos
mov
adc
stos
rcrb
sbb
push
or
ret
je
ret
sbb
jl
inc
int3
or
push
xchg
ljmp
inc
push
or
sbb
or
stos
mov
jb
pop
mov
out
cmp
adc
xor
aas
enter
cmp
pop
pop
gs
sbb
mov
sbb
int3
or
xor
lret
or
ja
repnz
adc
rorb
hlt
out
call
out
fcmovne
unpckhps
sbb
jmp
test
dec
faddp
inc
jae
jg
call
outsl
pop
fcmovne
insl
jecxz
jp
sbb
int
xchg
pop
add
loopne
sub
sbb
jp
ret
mov
ljmp
fdivl
jmp
add
dec
mov
pop
out
sbb
xlat
sbb
ficompl
mov
fdivs
lret
or
ret
xor
aam
rcl
sbb
pslld
ret
repz
rclb
xor
hlt
xchg
lods
jno
xor
out
xlat
pop
add
pop
sub
mov
mov
push
mov
test
mov
push
mov
mov
or
orb
cmp
outsl
hlt
pop
cmp
jl
js
sub
push
push
push
mov
inc
or
and
cltd
pop
sbb
push
insb
js
sbb
aaa
xlat
adc
mov
outsb
lea
mov
pop
mov
lahf
inc
pop
inc
addr16
iret
imull
adc
or
jl
adc
add
sbb
cmp
jne
fists
add
cmp
lea
je
push
inc
int
sub
dec
je
ret
and
insl
ja
dec
imul
push
fmuls
rorl
push
jl
cltd
fistpll
jmp
and
rorl
scas
aam
stos
cmp
sbb
imul
xlat
clc
outsb
dec
in
pop
jns
or
popa
pop
ficoms
push
cld
call
lods
cmp
jbe
lea
pushl
mov
mov
xchg
or
dec
cmp
out
push
pusha
sti
jmp
imul
lea
push
or
xor
clc
addb
pop
adc
push
sub
mov
faddl
pop
int3
rolb
aam
cmp
pop
fsubr
and
xchg
push
dec
pop
jo
push
std
call
cmpsl
imul
das
test
or
call
popa
ljmp
push
cltd
out
bnd
hlt
gs
divl
lds
inc
mov
fisttps
mov
fsubl
call
push
pop
add
sbb
pop
or
mov
insl
bound
jbe
jns
lods
outsb
fldenv
push
or
mov
ret
cltd
inc
push
pop
cs
pop
and
and
xchg
in
add
in
push
push
movb
xchg
fildl
dec
out
push
out
push
lock
push
fdivrs
icebp
inc
repnz
mov
mov
push
jp
shlb
push
push
lret
data16
add
xchg
push
aam
sub
insl
and
hlt
or
push
dec
add
and
or
inc
sub
lret
cmp
and
jnp
call
sti
adc
cmc
in
push
push
push
add
adc
add
xor
add
clc
fwait
loope
mov
movsb
cmp
xchg
je
pop
lret
imul
jo
or
push
int3
jbe
cmp
fistpl
lods
adc
push
adc
ret
push
mov
sbb
lods
mov
jns
or
push
jmp
mov
roll
push
mov
pop
lock
adc
and
jl
std
push
and
pop
or
lea
pop
adc
and
cltd
adc
sub
sbb
inc
sbb
jbe
ret
mov
mov
pop
add
jle
lock
hlt
in
sbb
jbe
push
push
mov
call
dec
sbb
push
mov
hlt
lods
inc
inc
inc
inc
lock
fcmovnu
mov
jb
pop
jmp
cmp
jne
icebp
add
mov
repnz
adc
roll
pop
into
insb
inc
or
push
andw
mov
mov
jg
insl
add
cld
pop
jb
imul
bound
clc
sbb
movsl
adc
cmp
mov
mul
pop
out
subb
cmp
je
dec
dec
cli
lods
jae
pop
cmp
pop
push
arpl
pop
add
cmp
xchg
push
cmpsb
ret
push
imul
dec
push
mov
push
aad
shrl
push
fcmovu
sbb
inc
sbb
movl
addl
mov
pop
dec
xchg
inc
add
mov
push
adc
int
mov
push
push
andb
sub
into
and
mov
lea
cmp
push
ret
subl
xchg
and
push
jnp
sti
mov
cmp
adc
clc
inc
push
pop
icebp
imul
jb
jbe
or
mov
xor
jo
push
jo
adc
ss
sahf
or
mov
cld
movl
push
inc
call
sbbl
or
push
je
js
push
push
dec
xorb
or
inc
add
je
cmp
jne
push
movd
fcomp
and
cmp
filds
les
jbe
pop
stos
int3
cmp
cmp
add
mov
clc
insb
insb
push
jae
push
or
enter
jno
push
and
mov
test
jne
fsubl
fidivs
sub
inc
mov
xchg
call
jmp
les
rolb
add
test
xchg
in
mov
cmp
mov
mov
test
mov
inc
and
sbb
inc
inc
mov
push
nop
sbb
loopne
jne
fcoml
mov
and
cli
lock
mov
testl
fisubrl
nop
fld
or
pop
mov
pop
add
mov
push
jg
cmp
pushl
cmp
cmp
fs
movsb
leave
andb
mov
outsl
or
sti
sub
mov
aad
insl
pop
scas
push
or
mov
add
xor
mov
jl
cmp
fldl
sbb
mov
sahf
imul
push
cwtl
fnstsw
dec
je
cmp
mov
sbb
cmpl
out
cmp
jae
cmp
je
jo
push
push
jne
xchg
sbb
fcompl
pop
mov
mov
xchg
in
sbb
pop
adc
pop
pop
call
jne
pop
jmp
call
mov
cmpb
sub
gs
xor
std
je
jmp
pop
and
push
cmpsl
idiv
xchg
adc
sbb
dec
mov
fisttps
add
lods
loope
or
lahf
loope
shll
push
clc
inc
pop
sahf
mov
fwait
push
pusha
stos
or
decl
pop
push
fildl
xor
leave
lods
jb
pop
lods
push
insl
mov
cs
lret
in
push
mov
mov
mov
mov
in
mov
gs
mov
and
mov
mov
push
fsts
rcl
js
shlb
insb
jbe
mov
aam
aad
xlat
pop
fsubrs
fsub
dec
xor
loope
gs
pop
in
mov
jb
push
out
dec
out
call
cmpsb
imul
imul
mov
or
ret
rol
shrl
xor
lds
mov
leave
lret
insl
cmp
hlt
xchg
push
xchg
ss
xlat
xor
cwtl
cltd
lcall
fwait
pushf
adc
sub
push
mov
mov
mov
add
test
push
test
es
cmc
div
clc
ds
lret
stc
hlt
cli
jns
lea
and
pop
mov
ljmp
or
pop
iret
int3
pop
sbb
jb
adc
test
xor
repnz
shl
lret
pop
cld
cmp
xchg
lret
out
jmp
out
sbb
in
testl
dec
lcall
pop
mov
sub
jne
pop
xchg
xchg
movsb
pop
cs
xchg
cmp
enter
rcl
mull
xor
out
shrb
lea
sar
sub
push
inc
push
lcall
ds
pop
sub
int3
push
add
loopne
sub
sbb
imul
xor
pushf
pop
cli
inc
ret
mov
test
in
insl
ror
push
inc
sub
adc
xor
fnstenv
movsl
jmp
sbb
mov
adc
cmp
aas
pop
mov
nop
nop
repnz
sti
shlb
or
adc
andb
int
xorl
add
daa
mov
and
jno
mov
mov
subl
shr
aas
loope
scas
jae
out
loop
inc
or
mov
and
daa
lock
outsb
arpl
inc
mov
outsb
fs
adc
sbb
cmp
adc
inc
mov
add
outsb
in
jecxz
xor
test
aaa
or
push
sarb
icebp
clc
inc
popf
mov
jae
rclb
add
xor
or
and
pop
mov
incl
lock
sbb
mov
adc
ss
xor
adc
xchg
lcall
pop
ret
bound
dec
push
ljmp
xor
loop
shll
adc
or
pcmpeqw
sbb
insl
jl
lods
rcr
pusha
cwtl
ret
sub
mov
out
push
movsb
lds
mov
testl
cmpsl
rorb
shlb
fs
mov
in
movl
in
std
add
sbb
lock
icebp
cmp
add
test
ret
inc
rclb
inc
mov
cmp
int3
bound
dec
testl
jae
pop
ret
or
pop
cs
push
ss
or
xorb
negb
pop
js
inc
adc
fldenv
rclb
or
out
sub
or
adc
popa
and
and
scas
mov
call
jmp
push
add
scas
fs
ss
add
cld
dec
sbb
jle
dec
mov
and
out
sbb
data16
jbe
fcmovnu
sub
xchg
jl
cmp
test
mov
ret
dec
pop
ret
mov
xchg
sarb
fisubs
ret
ret
mov
push
int3
dec
rol
gs
into
jp
imul
insb
popa
push
dec
push
imul
das
fsubs
ja
fldt
imul
imul
lcall
cld
int
insb
mov
insl
mov
mov
dec
shll
mov
mov
cmpsb
imul
gs
xor
xchg
push
outsb
fs
mov
xor
enter
mov
mov
pop
lret
in
out
mov
pop
cs
jmp
mov
pop
inc
jb
icebp
add
push
jb
inc
mov
inc
pusha
push
js
fnsave
mov
aam
push
cmp
shrb
sbb
xor
ret
pop
rcrl
hlt
add
xor
xor
lods
pop
mov
mov
mov
rclb
jmp
fldcw
out
add
sub
lret
cmpsb
imul
imul
xchg
lret
in
outsl
out
ja
jne
repnz
imul
xor
fs
fwait
insb
insb
je
push
sbb
xchg
lret
inc
pushf
jge
push
roll
cmp
mov
adc
into
cwtl
scas
mov
loopne
sahf
push
ja
jb
push
fsubrl
sbb
xor
lret
loope
sbb
or
pop
testb
adc
decl
dec
outsl
cmp
mov
pop
popa
push
dec
sarb
or
pop
xor
das
cmp
and
in
add
loope
xor
hlt
aam
mov
fwait
test
in
test
xor
xchg
clc
lock
jge
cmp
and
leave
mov
push
lret
mov
mov
fistl
sbb
hlt
in
adc
lods
stos
enter
inc
test
iret
push
and
adc
dec
in
push
or
sub
or
jne
xor
and
mov
out
ljmp
mov
push
call
push
inc
int3
mov
shll
cmp
pop
jae
mov
mov
mov
cmpsb
pop
ss
mov
mov
mov
lcall
mov
xor
rol
adc
les
imul
outsb
pop
leave
outsb
fwait
gs
lret
fs
int
das
into
bound
cmpsb
pop
iret
rcl
rcl
adc
or
pop
xlat
aaa
fsubs
fcmovu
ja
mov
dec
mov
mov
jae
loop
lcall
pop
out
call
jmp
in
daa
in
lcall
fs
es
push
repnz
loopne
imul
dec
andb
xchg
mov
mov
cs
push
sbb
sub
adc
jae
aad
aaa
fwait
scas
pop
cld
or
mov
clc
adc
loopne
and
nop
jb
push
cmp
lods
and
xchg
or
icebp
push
jne
popa
mov
das
push
pushf
xor
cmp
jno
loop
ss
pop
call
or
adc
add
inc
sbb
adc
adc
cltd
enter
pusha
push
mov
adc
push
and
mov
pop
inc
jmp
outsb
mov
repz
and
adc
mov
jg
cmp
pop
lea
xchg
sarl
sub
shrb
cmpsl
mulb
nop
lods
orb
xor
repz
jge
and
push
xor
fildl
or
and
cmpsl
aaa
mov
jge
jbe
rolb
popf
add
bound
outsl
jmp
jmp
insb
xor
stos
xchg
jbe
jge
ljmp
movsbl
add
rcrb
stc
mov
outsb
xor
outsl
adc
std
sbb
xor
call
dec
push
bound
sbb
insl
lods
add
cmovb
movsl
repnz
les
fcoms
icebp
sahf
sarb
mov
dec
mov
or
push
add
push
sbb
push
push
pushf
mov
int3
and
outsl
add
jmp
test
adc
je
mov
lods
mov
xchg
xor
mov
adc
mov
mov
and
mov
movsb
and
jle
not
das
aas
or
xchg
pushf
stos
inc
push
dec
cmp
in
pop
or
call
mov
jmp
lea
pusha
cwtl
and
jmp
rolb
jecxz
add
shl
outsl
cmp
stc
pushf
mov
pop
popf
loope
jg
add
sbb
lcall
sub
fistpl
push
inc
jae
xor
mov
inc
mov
lods
sahf
or
pop
push
jbe
xchg
push
pusha
xlat
cltd
and
or
sub
ljmp
add
movsl
insb
call
lods
pop
xor
mov
sti
rol
clc
push
pusha
fidivs
or
push
xchg
ja
cmp
fsubr
rorb
pushf
data16
mov
jmp
in
cltd
cmp
mov
inc
xor
or
imul
jmp
mov
sbb
cld
mov
shl
ret
testl
data16
outsl
fldt
pusha
pushf
jbe
mov
mov
pop
dec
jmp
cmp
mov
mov
negl
call
sub
or
mov
stc
xchg
pop
cmp
cmp
jmp
test
xor
test
aaa
pushf
mov
arpl
out
push
stos
fisttpl
inc
cmp
push
mov
clc
arpl
add
xor
add
jo
ret
sbb
jbe
push
stc
enter
sahf
mov
mov
sar
pushf
call
outsl
mov
seto
shl
fsubl
js
clc
mov
mov
jne
mov
push
add
inc
popf
pushf
jo
jmp
pushf
test
sbb
aas
std
mov
adc
xor
add
sbb
cld
dec
aas
xor
cmc
cli
hlt
add
loop
popf
stos
inc
outsl
out
jecxz
fisttps
je
adc
jnp
adc
popa
pop
fs
out
fcomps
inc
pop
push
mov
jae
jae
fdiv
cli
sub
xor
mov
and
shl
pop
stos
sub
dec
add
testl
std
inc
enter
das
cmc
sti
sub
sti
out
mov
mov
call
push
lahf
fwait
add
push
push
push
add
cmp
dec
xor
jg
adc
test
adc
and
mov
adc
push
rolb
nop
movsb
mov
jae
mov
js
clc
sub
popa
or
cmp
cs
push
lcall
add
or
jl
in
pop
push
push
or
in
ds
dec
aam
or
cmpsl
push
pop
ret
mov
jp
test
or
repz
bound
inc
rcll
shr
stc
rorl
inc
divb
fstpl
ds
hlt
sarb
out
in
xchg
stos
xchg
xlat
cmp
imul
data16
sbb
pop
mov
je
push
or
mov
mov
pop
pop
cmpsb
push
sti
rolb
dec
push
leave
cmp
dec
fdivrs
fidivs
dec
push
sbb
cmp
je
repz
xlat
push
sub
movb
sbb
rorb
jb
mov
pop
push
je
mov
mov
loop
mov
push
xchg
jge
mov
and
cs
add
adc
rcll
push
cmp
stos
push
ret
xor
dec
sub
add
add
push
clc
popa
lret
mov
lret
sub
rcl
xlat
lret
mov
fcomp
in
call
add
fdivs
inc
adc
jo
xor
push
mov
dec
sbb
inc
mov
jnp
mov
rcll
adc
rcrl
lcall
stos
sbb
inc
lret
cli
ficoml
pop
push
mov
pop
jb
dec
daa
negb
insb
sar
or
sub
push
jl
call
push
loop
or
ljmp
loope
call
cmp
and
inc
jo
mov
adc
sub
js
inc
and
push
mov
xchg
sub
sub
sub
faddp
ss
push
ret
mov
adc
adc
push
push
or
out
sub
add
add
fistl
push
xchg
gs
xchg
dec
dec
dec
dec
inc
push
push
xchg
gs
cs
insb
add
jo
sub
mov
insb
jne
cs
xor
insb
insb
mov
mov
je
jbe
mov
push
jb
mov
push
cs
pop
cmpsl
push
gs
pop
stos
stos
push
lods
lods
pop
dec
shll
dec
jo
dec
shll
fldt
dec
shll
das
roll
aam
dec
shrl
mov
mov
mov
sub
dec
xchg
xchg
xchg
xchg
inc
push
cwtl
imul
roll
push
fisttps
je
loopne
loope
loop
in
dec
mov
xor
mov
mov
data16
mov
lgs
mov
mov
mov
inc
mov
arpl
sbb
and
and
in
mov
rcr
adc
in
or
jg
jo
cmp
adc
push
fdivrp
fisubrl
popa
sub
lods
and
adc
jmp
nop
stos
jne
imul
xor
andl
ud0
shl
enter
push
jmp
push
pop
and
inc
xor
lret
sti
je
push
adc
mov
shrb
roll
inc
xchg
imul
push
sub
je
mov
movsb
imul
repz
adc
loopne
mov
add
push
add
or
pop
cmpsb
loopne
mov
adc
add
insb
cmpsl
mov
dec
pop
aad
jmp
or
loopne
sub
outsb
enter
orl
add
jns
scas
out
subb
sbb
push
aas
add
add
add
or
ja
adc
push
int
hlt
out
call
daa
ret
fdiv
inc
je
sbb
jne
inc
jmp
pop
or
mov
popa
add
jne
cld
jp
or
sahf
sbb
adc
movsl
cmc
icebp
lock
mov
movsb
dec
cmc
pop
cltd
hlt
add
fisubl
jnp
sbb
push
fisttpl
lods
cmp
mov
mov
jae
je
subl
cwtl
fdiv
sub
mov
aad
push
rorl
sub
push
sub
add
clc
fildll
inc
push
cmp
jmp
out
mov
jle
and
cmp
pop
xor
stos
sub
popf
add
scas
inc
jg
cld
mov
addb
add
or
pop
je
adc
pop
mov
ja
pop
or
sub
push
push
sub
movb
inc
add
popf
add
xchg
xchg
mov
pcmpeqb
sbb
je
or
xchg
xchg
add
jl
pop
jg
push
outsb
insb
dec
jb
push
push
cmp
das
sub
or
jmp
aas
adc
mov
mov
sahf
sbbl
andb
sub
pop
test
andb
fistps
mov
lret
leave
push
or
imul
cmp
sub
mov
outsl
arpl
xor
push
pop
or
test
cld
jo
movsb
dec
out
ds
or
sbb
jmp
das
inc
jbe
xchg
push
and
dec
pop
jne
mov
or
test
cmp
insb
push
push
xchg
add
and
mov
adc
out
or
push
adc
cmp
ss
cmp
sbb
or
out
or
cld
pop
mov
push
pop
push
xor
sbb
or
mov
lock
cmp
jge
mov
add
addb
fdivrs
push
jecxz
push
sub
or
push
adc
mov
lods
sub
cli
push
mov
ljmp
and
aaa
mov
push
push
cwtl
add
rorl
mov
push
mov
sub
inc
das
jne
imul
mov
rorl
adc
dec
shrl
mov
add
sahf
cmp
popa
movsb
shlb
arpl
outsb
cmp
mov
gs
or
dec
shll
imul
shll
and
mov
je
xchg
gs
imul
gs
arpl
je
sub
outsb
es
sub
aam
shrb
aas
popa
arpl
imul
leave
gs
loopne
loope
jns
imul
lcall
loope
dec
rorl
je
ret
outsb
imul
cmp
jp
dec
shll
mov
dec
shll
sbb
or
shlb
jmp
shlb
repnz
adc
sahf
sbb
std
mov
adc
pusha
enter
stc
sti
push
cmp
insb
and
push
sub
call
jne
pop
jne
xchg
stos
adc
jnp
and
adc
fdivrl
fcoml
test
pop
inc
ss
dec
jno
fdivr
outsb
and
call
in
popf
fdivr
lods
movsb
and
enter
jb
lcall
sti
pop
ja
lods
cld
lock
sbb
outsl
into
jne
inc
mov
cld
in
into
add
adc
push
mov
jle
pop
int
and
and
ret
and
xchg
pop
xchg
orb
push
cmp
popa
adc
inc
dec
fdivrl
fcoml
stc
sbb
jns
pop
insl
inc
shrb
pop
jle
mov
mov
decl
scas
adc
lock
jmp
jns
push
call
xchg
cmp
addr16
mov
xlat
mov
xor
jle
lea
cmp
out
insl
sbb
mov
popa
call
ret
enter
jl
xor
ret
scas
stos
lds
sbbl
jne
push
mov
arpl
mov
xor
push
imul
into
sub
and
and
inc
loope
loopne
movb
lcall
xchg
xchg
ljmp
xor
xchg
imul
insl
bound
jne
movsb
subl
repz
ljmp
jo
bound
add
sbb
pusha
inc
daa
and
dec
mov
mov
in
mov
pop
and
jns
xor
shll
insb
outsl
rcrl
and
outsb
mov
pop
shr
push
stos
cmc
inc
imul
repz
sbb
jo
adc
mov
clc
icebp
xchg
cmp
add
imul
lods
jmp
in
jecxz
sub
mov
test
icebp
ljmp
mov
int
adc
sub
mov
ja
xor
je
in
cs
fs
xor
dec
shll
jbe
jb
int
dec
shll
outsw
insl
hlt
orb
jne
mov
xor
lret
rclb
cld
pop
mov
jp
je
push
push
lods
dec
jl
mov
lcall
lods
aaa
test
mov
imul
lods
xor
fimuls
cmp
pop
inc
dec
and
cmc
add
and
pop
sarl
sbb
pop
inc
sub
xchg
sub
sbb
or
std
inc
cmp
andb
push
sbb
or
shlb
rcll
dec
and
lds
cmp
xchg
testl
scas
loope
jbe
xchg
and
push
push
xchg
lock
sldt
bound
push
gs
nop
add
jne
addr16
mov
hlt
mov
movsb
xchg
hlt
jae
xchg
jnp
push
xor
add
mov
adc
add
out
int3
ljmp
pop
fcmovnu
add
xchg
pop
jmp
les
mull
inc
inc
movzbl
push
sbb
div
hlt
jle
cld
cmp
andb
bound
dec
rcll
mov
and
push
clc
add
add
sarb
dec
dec
jo
insb
jo
xor
shll
imul
pop
aad
push
inc
gs
pushf
sub
inc
fs
je
shll
dec
outsb
lock
outsl
mov
or
icebp
jne
add
add
pop
cwtl
xchg
add
sbb
xchg
repz
pop
mov
pop
mov
and
rcrb
enter
xchg
xor
pop
dec
addb
lock
stos
push
das
adc
gs
push
outsb
outsl
add
rolb
jo
inc
cmp
sbb
fmull
ret
ret
xchg
andb
or
mov
test
in
xchg
xchg
xor
fcompl
stos
push
inc
outsb
add
xor
sub
in
push
and
cld
mov
bound
jmp
int3
adc
sub
out
jne
dec
cmp
sub
fsts
inc
xlat
fwait
popf
adc
dec
shl
pop
pop
test
inc
fs
lea
in
xlat
lea
mov
outsl
mov
jle
mov
cmpb
std
idiv
xor
cmp
inc
cmp
jl
and
and
sub
sub
dec
push
fldcw
lcall
gs
xchg
das
je
fs
in
cmp
cs
cmp
xor
fstp
fildll
loope
pop
mov
mov
loop
arpl
in
insl
push
out
imul
pop
jmp
dec
mov
mov
in
in
outsb
push
out
out
adc
jp
pusha
xlat
jne
icebp
repnz
jae
pop
cmc
insb
lcall
imull
popa
jae
movq
sti
leave
xor
fnstenv
lcall
dec
rcl
rcrb
gs
cmp
das
imul
bound
lcall
xor
push
imul
imul
cmpsb
imul
gs
push
test
mov
jp
frstor
insw
jno
aad
or
xor
and
sub
dec
enter
daa
jmp
add
sub
sbb
sahf
vpshab
mov
or
shl
push
pop
popa
mov
int
and
scas
outsb
xor
mov
add
mov
push
dec
mov
inc
jnp
call
call
and
mov
cmpl
hlt
aam
cli
jne
cmp
cmp
jl
jge
rcrb
lea
push
mov
cmp
jge
std
cmp
add
mov
mov
and
push
movsb
mov
in
mov
mov
lea
dec
repnz
stc
inc
and
and
icebp
stos
inc
mov
lds
es
mov
sbb
xor
pop
idivl
push
push
ja
fwait
jmp
adc
cmp
sahf
adc
andl
loop
insb
inc
fwait
and
push
pop
lret
shll
mov
lock
sub
cmp
daa
push
cmpsl
popf
in
push
xchg
and
cmp
ret
cwtl
xchg
subl
and
mov
shlb
jecxz
sub
repz
das
xlat
flds
pushl
or
push
mov
andl
push
sbbl
inc
inc
in
xorl
push
cmpsb
imul
mov
pop
popf
jb
loope
inc
lret
mov
lret
outsl
insl
bound
push
sub
mov
jae
jb
popa
gs
mov
gs
xchg
imul
loop
pop
mov
pop
inc
fs
lcall
mov
mov
mov
adc
bsf
mov
mov
inc
rorl
adc
shll
imul
pop
insl
push
in
jb
xchg
push
dec
pop
insl
jge
adc
movsb
push
inc
or
aaa
aas
lcall
adc
shlb
mov
and
fwait
xor
dec
push
out
movsl
fwait
scas
mov
inc
outsb
xor
or
cmpl
xor
sbb
mov
cmp
mov
xor
jmp
insb
or
lock
enter
mov
adc
jne
or
mov
imul
movsl
loop
sbb
cs
lcall
sbb
and
mov
adc
add
dec
ret
jmp
mov
jne
xchg
mov
ljmp
push
or
clc
and
movl
and
sbb
dec
or
inc
cmpsl
testl
adc
mov
jae
pop
or
jecxz
lahf
mov
pop
in
enter
cmpl
mov
push
inc
add
xor
loopne
xorb
and
or
push
nop
int
pop
pusha
xchg
mov
pop
inc
push
pop
orb
sbb
call
or
adc
jnp
jle
pop
stos
push
sub
push
mov
in
in
fcomp
jo
jo
push
popf
xchg
cmp
inc
inc
adc
and
fsubrl
xorl
and
jno
dec
popa
jb
negl
aas
mov
in
sahf
xor
pop
cmp
jge
loopne
sbb
push
push
out
loopne
mov
mov
sub
pop
mov
test
jecxz
jmp
fildl
cmp
dec
jo
sbb
mov
add
push
lret
or
push
cmpsb
je
fs
xchg
xchg
add
jge
lcall
jne
push
push
stos
fwait
pop
cmpsb
stos
jmp
pop
fs
shrb
cmpsb
imul
push
ficomps
gs
push
outsb
fs
outsl
cmpsb
jmp
call
jbe
fucomi
dec
inc
in
in
and
jbe
mov
dec
push
hlt
push
mov
or
fs
xor
cwtl
jmp
sbb
sbb
fldcw
adc
push
xor
or
add
mov
sbb
dec
dec
pop
add
pop
xchg
or
cmc
dec
push
or
sbb
xor
popa
push
or
cwtl
or
xchg
inc
call
std
flds
inc
add
mov
mov
or
push
cwtl
mov
lods
and
sbb
je
insl
push
jmp
sbb
and
int3
or
jge
xchg
and
cmp
sti
or
and
call
cmpsb
scas
and
mov
jmp
in
push
inc
xchg
int
jne
call
or
or
pop
dec
fsubs
mov
test
jg
mov
out
push
push
add
xorl
mov
insl
and
je
add
in
pusha
ds
mov
sarb
js
outsb
mov
mov
addr16
clc
xchg
pop
xchg
jne
mov
popf
ds
lods
sbb
scas
mov
and
leave
cmpsb
mov
cwtl
mov
addr16
push
pop
push
repz
cwtl
mov
test
cmp
subb
push
cli
ds
int
loopne
add
out
pop
ret
in
insl
push
jmp
sbb
fcoml
cmpw
cmp
add
and
jne
add
lret
in
es
bound
mov
inc
cmp
jl
je
inc
or
cmp
push
jb
add
jo
lock
clc
push
lods
jb
dec
or
adc
mov
push
imull
push
repnz
or
mov
sti
or
fisttps
push
inc
dec
fwait
orb
sti
mov
cmp
pop
movsl
fidivrs
stos
and
add
or
mov
mov
jp
add
xchg
add
sarb
ffreep
adc
jne
mov
sub
mov
lods
out
mov
icebp
cmp
add
sahf
out
mov
inc
push
fdivrl
movsl
pusha
lea
shr
jle
rcr
mov
daa
add
ljmp
shlb
aas
jne
mov
icebp
push
rcll
add
movsl
insl
mov
data16
lock
loop
push
add
jne
inc
adc
xor
xlat
pop
mov
xor
outsb
adc
mov
adc
sub
cld
jl
stos
inc
cld
xchg
add
jmp
andb
mov
push
repz
jnp
pop
fnsave
push
fcompl
ja
push
loop
inc
adc
iret
sub
adc
je
ds
sub
iret
pushl
add
push
scas
clc
rcrl
and
or
loope
inc
nop
push
inc
mov
cmpsl
lret
adc
mov
mov
andl
jle
xchg
or
std
sbb
pop
lods
push
mov
call
popf
sub
lahf
inc
aaa
pushl
lcall
xchg
or
or
sti
les
push
xchg
dec
push
rclb
shll
das
mov
cltd
cld
sbb
adcb
push
int3
lds
addl
pop
mov
lea
add
inc
cmp
or
fwait
sti
testb
je
pop
inc
sub
filds
jmp
and
or
and
add
inc
sub
xor
jecxz
xchg
mov
fnsave
enter
push
adc
push
andb
mov
xchg
roll
push
mov
stos
cmpsl
xor
and
outsb
push
sub
mov
fsub
adc
fisttpll
sub
pop
dec
pop
or
in
adc
gs
xchg
in
js
outsl
gs
imul
pop
mov
jb
outsb
fs
xchg
and
das
sub
rclb
pushf
loopne
inc
sub
sub
mov
in
push
or
pop
ret
mov
out
pop
mov
push
pop
mov
ret
jl
fcmovnbe
ret
std
mov
je
addl
adc
xchg
mov
cmc
add
add
sahf
pusha
inc
jo
pop
imul
sbb
and
push
out
push
popa
cmp
or
icebp
mov
rclb
lods
loopne
iret
adc
ret
dec
sub
inc
add
mov
mov
pushf
les
jne
sub
fucomp
sbb
sbb
jne
aad
jl
mov
or
add
arpl
adc
sub
es
add
push
call
dec
adc
lea
pop
push
push
insb
or
aad
clc
mov
fisttpll
cwtl
stos
or
jne
push
lahf
add
sbb
in
shll
into
pop
dec
cmpsb
test
icebp
aam
insl
jo
fsubrl
pop
jnp
mov
mov
int3
add
mov
or
mov
jno
cmp
in
mov
inc
xchg
push
mov
cmc
gs
frstor
fwait
adc
jmp
mov
inc
dec
movsl
pop
mov
jle
lret
movsl
loop
push
pop
in
cmpsb
in
mov
xchg
movb
lahf
imul
mov
cli
stos
lods
loope
mov
jl
push
fisubrs
adc
xchg
or
das
inc
cmp
jl
pop
sbb
mov
test
or
scas
or
jmp
push
ret
bound
and
push
and
out
and
adc
pop
inc
add
arpl
in
mov
addl
and
pusha
imul
dec
jmp
in
shlb
data16
adc
pop
xchg
fwait
jmp
std
jae
std
int
rorb
in
jae
scas
push
cmp
push
xchg
popa
sub
leave
mov
data16
sub
mov
xor
xor
lret
leave
mov
jns
js
cmp
ficoml
push
jb
ret
andl
push
pop
out
or
jnp
mov
push
fdivrl
nop
es
xlat
push
mov
js
xlat
and
mov
or
mov
push
adc
js
push
mov
push
mov
dec
popf
in
cld
xor
pop
sub
adc
pop
inc
xor
xor
mov
add
xchg
es
mov
cmp
push
adc
jle
push
or
and
pop
stc
or
push
repz
movsl
roll
or
or
fs
xchg
gs
insb
outsl
xchg
gs
xchg
jb
jb
gs
adc
pop
in
jnp
scas
popf
or
dec
add
leave
insl
enterw
ret
sbb
pop
xchg
jbe
popa
mov
rolb
cmp
mov
add
test
jae
shl
imul
mov
inc
push
popa
pop
hlt
pop
adc
lock
mov
fsubrs
les
mov
cmp
or
test
fisubl
inc
sbb
fildll
push
pop
fwait
push
lret
int3
jmp
xor
sbb
fdivrl
inc
inc
xor
xor
dec
dec
js
jae
pop
xor
enter
int3
in
call
enter
fdiv
xchg
mov
inc
jns
lahf
adc
movsb
fwait
add
cmp
int3
movsb
and
and
or
lahf
enter
and
aam
inc
xorb
andb
imul
cltd
pushf
imul
or
add
add
lock
push
or
jb
arpl
jae
fs
ljmp
daa
pop
adc
gs
outsl
outsl
insb
push
xor
popa
jo
push
outsl
je
xchg
push
imul
and
mov
inc
cmp
ss
adc
pop
add
insb
cmp
add
mov
mov
inc
dec
gs
xchg
cmovbe
aas
mov
mov
imul
sarl
add
dec
outsl
fs
adc
mov
add
fs
aaa
pop
std
imul
jg
xlat
adc
mov
jg
add
fs
push
je
inc
jns
xor
or
and
aas
lods
pop
roll
jb
cmp
mov
mov
sub
rorb
lods
xor
int3
xchg
add
push
ja
jg
add
cmp
push
mov
sbb
mov
or
ret
gs
fidivrs
dec
pcmpeqb
xor
data16
fucom
push
das
push
add
scas
mov
cs
stc
cs
jae
popa
push
shlb
or
mov
in
sbb
xor
imul
or
addr16
mov
push
jne
jns
mov
es
imul
imul
mov
into
fiadds
outsl
jo
xchg
fucomip
imul
out
or
jbe
jnp
insl
mov
push
outsb
addr16
add
or
dec
adc
sub
mov
imul
push
mov
call
fimull
loopne
outsl
addb
add
add
inc
inc
mov
imul
insl
sbb
push
dec
xor
xor
mov
jge
jne
ret
add
arpl
fisttps
push
outsb
push
cld
cmpl
mov
push
dec
inc
push
dec
inc
jbe
pop
adc
jo
je
and
rcr
aaa
push
arpl
negb
add
popa
mov
lret
or
push
jb
fs
xchg
xor
and
cs
ret
std
inc
pop
pop
and
lahf
pop
xchg
add
push
shll
mov
xchg
fiadds
lock
outsb
mov
pop
xchg
cltd
and
push
push
hlt
data16
mov
push
dec
pop
adc
cli
int3
push
or
push
adc
bound
sbb
add
je
sbb
jo
jb
lret
sub
sub
pop
and
mov
inc
and
sbb
inc
inc
dec
mov
add
jne
ljmp
fistl
cmc
add
adc
nop
sbb
push
movsb
jne
and
push
xor
pop
add
mov
mov
jge
mov
adc
and
addr16
inc
decb
inc
outsb
jne
inc
inc
push
inc
push
xchg
push
push
sbb
cltd
add
xlat
pop
call
testb
push
jb
adc
jecxz
add
fimuls
mov
push
loope
add
mov
roll
imul
add
dec
xchg
jecxz
in
movsb
popa
addr16
push
or
outsb
insb
jns
fisubrs
inc
fistl
xor
add
mov
xchg
aad
push
lret
inc
arpl
add
xchg
loope
jae
pand
sbb
xchg
ja
xor
outsl
push
and
fcompl
jnp
dec
out
mov
mov
outsb
sub
or
loope
pop
or
cwtl
xchg
jbe
mov
ficomps
xor
add
imul
dec
sbb
push
call
dec
adc
comiss
push
mov
sbb
inc
outsl
nop
rcrb
fistl
insb
test
push
sbb
in
push
das
out
mov
adc
mov
arpl
xor
push
popa
insb
add
mov
adc
xor
add
leave
or
dec
inc
dec
push
dec
sub
push
xlat
je
and
bts
cli
adc
jmp
mov
hlt
add
sub
sub
add
cwtl
jmp
push
push
inc
push
cmc
clc
or
push
push
fstpt
fsubrs
rcrb
jb
outsl
jg
jmp
sbb
lret
sbb
scas
fdivrs
push
movsb
stos
add
test
mov
sub
sub
xor
rcrl
out
adc
mov
mov
add
pop
inc
dec
push
adc
dec
test
unpcklps
mov
ljmp
push
push
and
jg
pop
mov
cmc
pusha
xchg
pop
cmp
leave
inc
sub
jmp
std
fs
aad
adc
pop
adc
ja
sub
jae
mov
cs
jmp
imul
mov
jnp
stos
pop
xor
sbb
sbb
and
fidivl
push
pop
jb
incl
sub
push
int
or
mov
sbb
cmp
add
dec
fstl
jp
fcomi
mov
push
loope
jecxz
mov
stos
push
mov
xchg
lcall
jb
cmp
sbb
test
sarb
adc
imul
fsubrl
js
lcall
cmp
ss
pop
xor
cwtl
insb
mov
leave
lret
out
call
aam
lea
mov
movsl
loopne
mov
lock
test
das
add
rol
aaa
rcl
frstor
in
popa
test
stc
mov
sub
or
loop
call
hlt
jg
lock
mov
call
cmp
add
mov
jno
push
xchg
pop
and
jmp
stc
and
or
xlat
pushf
dec
inc
dec
divb
rol
sub
fiaddl
push
push
jmp
shr
dec
mov
repnz
add
jnp
inc
add
neg
stc
test
push
clc
ja
mov
stc
xor
cmp
stc
pusha
xor
stc
clc
or
add
decl
xchg
sti
enter
sub
shl
not
xchg
ss
shr
pop
rcl
sbb
jmp
pop
or
jbe
std
iret
dec
jmp
add
mov
add
fsubl
call
lock
mov
out
stc
mov
sar
or
sbb
test
sbb
stc
daa
pusha
pushf
imul
mov
push
testl
aaa
add
ja
stc
push
pop
add
or
push
lds
mov
xchg
test
mov
mov
js
outsl
adc
flds
xor
add
pop
xlat
add
and
mov
sar
ror
imul
mov
sub
ss
sbb
push
inc
sbb
shr
and
pop
mov
ret
call
lea
sti
push
sub
push
push
pushf
sahf
inc
jmp
mov
xor
dec
inc
and
pop
mov
pop
dec
jge
or
lret
xor
inc
das
mov
push
xchg
shr
popf
sti
in
or
mov
add
and
mov
sub
jmp
mov
loope
and
cmp
fs
add
sub
xchg
pushf
fisttpl
ss
xorb
or
mov
shlb
jmp
les
jnp
or
mov
not
shl
cmpl
loope
jne
pop
add
inc
mov
insl
arpl
sbb
sbbb
into
shl
adc
ficomps
inc
xor
call
or
jle
pushf
cs
jne
test
push
mov
xor
adc
adc
and
inc
in
push
pop
jo
int3
fcomp
xchg
inc
fdivp
mov
add
dec
fsubrp
std
add
js
pop
or
or
sarl
add
mov
jmp
push
or
add
mov
push
push
icebp
xor
inc
test
fisubrl
xchg
or
push
or
mov
xor
pushf
jmp
test
sub
pushf
cmp
and
cmp
adc
js
outsb
mov
repz
cmp
mov
cmp
add
stc
mov
cmp
out
stc
lret
gs
cmp
or
ret
int
fists
push
jnp
jmp
fisttpl
jmp
mov
rcrb
push
push
sbb
jl
ljmp
repnz
mov
pusha
and
jne
add
mov
mov
stc
test
xor
sahf
call
setns
and
sub
jbe
test
test
loopne
cltd
call
out
pop
incl
fwait
xor
aad
adc
jle
jle
lock
inc
add
xchg
ret
adc
fadds
lds
mov
stos
outsl
mov
pop
push
xor
sub
call
sub
push
lock
or
mov
stos
xchg
and
pop
sar
aad
add
cmp
xchg
mov
int
stc
xchg
or
pushf
cmpsl
test
jmp
addr16
push
or
push
cmp
out
pop
jle
lea
rcll
mov
call
push
push
xlat
sub
movsl
mull
arpl
mov
sub
xchg
ret
mov
call
arpl
mov
lock
sub
icebp
cmp
dec
insb
call
mov
ss
mov
jge
xchg
std
pop
js
jg
cli
jmp
sar
xor
and
inc
into
mov
push
jmp
pop
shr
add
cmp
outsb
in
pushl
ret
popa
leave
aad
loope
pushf
push
call
fistpl
sti
xchg
scas
pop
lret
pop
dec
call
stc
stc
out
jg
stc
xchg
imul
adc
aas
sbb
ret
cmp
lahf
xor
cmpsl
ja
sbb
mov
test
sub
jne
sbb
outsb
jge
imul
les
cmp
xchg
loopne
mov
xchg
dec
aam
aam
leave
rol
jmp
sti
and
sub
fadd
add
add
xchg
push
iret
repnz
push
outsl
mov
inc
add
xchg
stc
jnp
lret
mov
or
pop
out
jmp
push
rcrb
fneni(8087
mov
cmovp
jbe
shl
mov
adc
aaa
ret
cmp
loope
add
aaa
out
rcl
cmc
lea
repz
jg
inc
fwait
lds
fnstenv
ret
lea
call
jbe
mov
mov
aaa
negl
fcompl
scas
xlat
mov
cmc
cmpsl
stc
test
and
shrd
test
cmp
push
or
cmpsl
outsl
dec
call
jb
xchg
das
mov
jp
dec
data16
dec
lods
and
jae
push
ss
pop
fdivr
mull
int
inc
bound
aaa
or
cmp
mov
fisubrs
sbb
push
test
push
pusha
xchg
sub
dec
xor
test
mov
pop
aaa
call
lcall
cs
repnz
cmp
jb
into
cmp
mov
fcmovnbe
insl
pusha
and
inc
enter
mov
fcomi
and
pop
pop
push
sarb
adc
jmp
mov
std
mov
adc
clc
in
aaa
xchg
stc
call
push
subl
sti
cmp
call
addl
shl
mov
xor
cmp
pand
xor
mov
daa
sbb
in
jo
and
ljmp
xor
or
es
inc
fnop
fsubl
xor
dec
cld
sub
push
stc
data16
or
lods
mov
incl
xor
stos
test
sub
dec
xor
cmp
push
scas
daa
add
adc
add
pop
add
push
clc
je
push
xchg
sti
test
test
add
push
dec
inc
filds
popf
push
or
xchg
or
shl
or
mov
test
jg
setae
push
setge
jns
test
and
adc
pop
mov
mov
out
push
mov
pop
loopne
pushf
sbb
sahf
out
daa
sub
push
push
xor
jb
lds
or
adc
ret
insl
and
popa
iret
xchg
push
sub
xor
mov
cs
sub
pusha
pusha
push
aad
or
std
mov
push
jnp
dec
inc
aas
sub
test
push
sub
xchg
mov
inc
pop
fisttps
inc
and
popa
imull
jmp
fs
neg
sub
call
push
and
test
call
xchg
jnp
inc
mov
dec
pop
mov
push
int3
jge
cmp
cmp
inc
clc
jbe
sti
mov
sub
mov
cli
test
in
in
or
sub
clc
cmc
lods
dec
loope
or
pushf
in
clc
or
cmp
incl
jo
ljmp
bswap
xor
adc
add
aaa
push
mov
jbe
testl
lods
loop
sbb
lea
jg
xorl
pushl
fildl
insl
sbb
fdivrp
imulb
stos
incb
inc
outsl
in
or
mov
xchg
insb
pop
out
jmp
aas
jle
leave
push
pop
mov
ja
test
pop
jno
push
not
cmp
and
testb
sub
lcall
mov
ss
pop
cmc
xchg
dec
adc
mov
pushf
or
es
sub
shll
cmp
addr16
mov
sub
rolb
test
pop
push
repz
stc
lcall
pusha
pop
jmp
inc
cmp
xchg
cmp
push
lea
push
aam
mov
arpl
rcrb
shlb
sbb
fwait
ss
imul
ljmp
mov
mov
pushf
nop
sar
push
sar
shll
fildll
shl
call
inc
cld
mov
and
in
lcall
jb
das
icebp
cmpsb
or
mov
je
outsb
call
or
push
inc
lret
add
xchg
roll
leave
jno
sub
lret
add
mov
push
push
xor
sbb
movsl
add
addr16
pop
push
jnp
dec
test
jge
loope
push
and
stos
push
das
out
inc
shrb
scas
lret
mov
xor
or
inc
add
inc
out
call
shll
add
mov
sar
jl
adc
aad
std
pop
jg
loope
adc
dec
push
in
push
popf
cli
pop
xchg
jmp
cmp
cwtl
clc
cmp
out
or
aas
ja
pop
jns
test
push
mov
incb
pop
inc
mov
xchg
aaa
and
inc
pushf
push
test
out
jae
sub
ss
lret
insl
js
jmp
mov
inc
sub
mov
stc
loopne
push
xlat
dec
adc
dec
lea
or
iret
jno
es
push
ret
scas
mov
insl
sub
inc
not
fcmovbe
pop
lret
cmc
loope
jo
loope
mov
es
outsl
mov
fsincos
popf
adc
fdiv
or
xlat
push
test
pushf
jg
cmp
ja
jmp
lods
aas
aas
jnp
inc
and
fistps
xchg
outsb
add
rolb
rclb
shrb
fdiv
jmp
sub
test
or
shr
push
call
int
cbtw
pushf
mov
mov
aaa
xor
frstor
lret
fdivr
repnz
leave
clc
iret
pop
xor
mov
cmp
pushf
dec
xor
xorb
adc
js
jae
cwtl
movsl
lret
cli
xor
jo
hlt
jmp
sar
call
imul
repnz
psubsb
pop
rep
sub
or
sbb
mov
and
mov
fiadds
lret
fldcw
mov
pop
mov
or
pop
movsl
mov
fstps
sub
mov
gs
mov
cltd
into
inc
es
push
sbb
ja
imul
mov
stc
clc
push
xlat
sbb
mov
mov
mov
add
mov
sbb
sub
cwtl
rolb
add
sub
push
lods
sub
xor
mov
or
mov
adc
push
ja
pushl
imulb
add
je
add
sub
orb
xor
pop
pushf
pop
pop
jns
or
xchg
jb
and
daa
dec
push
fdivrl
mov
frstor
daa
sub
jae
jno
iret
lds
das
outsl
arpl
pop
das
xchg
fistps
xor
push
js
dec
sahf
in
mov
jecxz
imul
xor
pop
in
xor
fldl
das
xor
out
mov
pop
add
jge
fistpll
pop
mov
mov
pop
fbstp
iret
jg
ja
idivb
jbe
outsb
jl
imul
je
mov
mov
setge
cld
pop
jno
bsf
mov
ljmp
dec
sbb
or
jae
add
sub
jnp
orl
sbb
and
fidivrs
sahf
xor
jnp
imul
out
cmp
out
dec
xor
lock
iret
xchg
adc
jnp
fwait
pop
lahf
or
push
out
sbb
push
dec
fnstcw
testl
pop
mov
outsl
cmpsl
mov
jle
cmp
popl
jnp
sbb
seta
jge
sbb
sbb
faddp
sub
cmp
lahf
pxor
movntq
ffreep
jno
scas
aas
fnstcw
cmp
mov
neg
jnp
imul
hlt
fsubp
mov
xchg
pop
pop
outsl
push
outsl
jb
add
jb
fstpt
lcall
neg
mov
fwait
pop
fwait
mov
out
xor
test
aas
mov
lock
xchg
sub
rol
aaa
sub
dec
cmp
push
cs
cmp
lret
xor
loopne
sbb
dec
cmc
jmp
or
lock
lea
jmp
rclb
mov
push
lock
aaa
cmp
mov
dec
jb
push
sti
aaa
loope
sbb
mov
cmp
pusha
pop
mov
jmp
shr
stc
mov
clc
call
pop
dec
pop
sbb
roll
cmc
pushl
adc
pop
clc
xorl
in
loopne
in
cmovb
lods
rclb
mov
in
jne
loopne
and
call
iret
iret
xchg
std
call
cmp
mov
or
pusha
or
fidivs
and
sbb
out
sbb
cs
daa
lcall
xor
inc
and
loopne
and
in
or
xor
fsubrp
xchg
xor
shl
pushf
push
je
clc
and
xchg
and
frstor
mov
loope
sahf
loopne
sbb
shll
loopne
test
iret
mov
in
mov
mov
mov
mov
push
sub
rol
xor
loopne
mov
icebp
push
repz
cli
xchg
clc
aaa
icebp
out
mov
inc
adc
repz
movsl
cmc
sete
clc
aas
sbb
fisttpll
int
lea
xadd
or
fnsave
lods
push
std
mov
mov
cld
inc
pop
call
inc
cmp
push
pop
js
mov
push
mov
pushf
sbb
push
xchg
add
add
std
and
inc
cmp
stc
xor
call
stc
add
push
clc
ret
push
cwtl
push
push
call
insl
in
inc
xchg
push
mov
or
push
jns
push
xlat
fldl
loope
push
sbb
push
loop
lea
int
mov
add
addr16
stc
cmp
fcompl
loopne
pusha
push
cmc
ret
imulb
mov
add
mov
arpl
les
push
jns
push
sti
scas
sbbb
jnp
repz
fidivs
adc
ret
stc
jmp
call
mov
mov
pushf
cmp
mov
cmp
int3
xor
insb
fsubrl
loopw
mov
dec
shll
cmp
fsubrl
in
call
dec
out
nop
clc
stc
xor
outsl
std
fnsave
or
clc
pushf
xor
imul
scas
ja
out
dec
mov
dec
and
call
jg
setbe
mov
shlb
pop
jp
jmp
loop
cld
jg
dec
lea
bsf
xor
inc
not
inc
pushf
rol
setp
jne
in
outsb
adc
decb
mov
xchg
outsl
inc
cmp
cmc
mov
push
call
and
dec
mov
lea
xchg
push
push
jle
mov
testl
stc
test
pusha
loope
stos
fstl
insb
stc
ja
dec
mov
les
jle
lock
sub
sbb
cmpsb
inc
dec
mov
inc
mov
pusha
arpl
das
dec
xor
aam
dec
ret
test
xlat
sbb
pop
xor
aaa
sbb
aad
add
pushf
stc
stc
stc
mov
xor
cmp
or
mov
or
or
xor
mov
inc
aam
loopne
sti
dec
popf
sti
cli
cmp
sti
push
shrb
out
shlb
pop
pushf
pusha
notb
xchg
dec
jo
mov
adc
testb
lds
mov
mov
xchg
test
icebp
add
pop
lea
jne
xor
mov
sbb
imul
int
frstor
push
sub
aad
jmp
clc
xchg
jae
jmp
dec
call
aad
pop
repnz
shrb
mov
jl
cmc
cld
or
clc
pop
fwait
or
adc
push
mov
jmp
loopne
int3
dec
pop
std
movsl
mov
out
mov
pop
pop
sub
adc
mov
movsl
shl
add
pushf
xlat
adc
mov
hlt
jmp
cmc
ljmp
jg
orb
mov
pusha
push
out
jbe
int3
cmp
jmp
mov
pop
inc
cmp
add
call
sub
int
lods
dec
lret
outsb
xchg
repz
and
push
or
mov
pushl
sub
iret
add
insb
incl
mov
cmp
xchg
cmp
scas
sbb
mov
fcmovnu
push
inc
xchg
push
loop
cld
cmp
sbb
icebp
clc
incl
cmc
pop
dec
cmp
or
adc
fst
loop
push
sub
call
imulb
test
adc
in
xchg
test
movsl
jmp
and
mov
insl
push
popf
mov
int
push
icebp
fs
cmp
xchg
movsl
or
sbb
fistpll
ret
fists
das
pop
pusha
insl
mov
xor
addb
fisttps
gs
decl
flds
aas
ljmp
xchg
lock
sti
lock
push
or
shll
push
cmpsb
xchg
subl
inc
xchg
cld
mov
lods
outsl
lock
mov
xlat
scas
mov
xor
mov
pushl
out
mov
mov
xchg
mov
stc
lahf
loop
mov
sti
lahf
pusha
adc
adc
add
aaa
ret
mov
mov
or
xor
cmp
sbb
push
jno
movsb
sti
stos
shll
xchg
dec
daa
js
in
shlb
clc
inc
out
sti
mov
repnz
adc
jp
inc
rcrb
add
sti
ret
mov
arpl
cltd
notb
sbb
mov
jae
addr16
and
fists
int3
pushf
hlt
jae
xchg
push
iret
test
adc
push
adc
pop
jo
jl
sbb
or
xor
adc
movsl
xchg
or
stos
xchg
pop
std
loopne
sbb
ficomps
push
xchg
arpl
ja
jge
sbb
andb
pushf
or
les
pop
pop
repz
push
int3
cwtl
pop
clc
inc
mov
ja
lock
sbb
xchg
aas
das
mov
cmp
cli
imull
dec
inc
lret
fs
pop
leave
xchg
adc
dec
or
daa
out
jle
adc
inc
insl
sbb
test
cltd
pop
call
fbld
jns
stc
and
enter
enter
sub
imul
mov
cmpsb
inc
xchg
addr16
xchg
stos
iret
jo
xchg
je
pop
push
scas
sub
jmp
xor
jge
mov
insl
pop
jl
ror
movsl
mov
out
jp
les
or
adc
outsl
xor
outsb
add
pop
lea
repz
add
jmp
gs
fwait
sub
clc
call
lds
inc
or
addb
lahf
int
add
cmp
mov
fbld
pop
mov
jae
ja
rcl
call
jp
stos
cmp
add
cltd
pop
daa
clc
mov
push
fadd
pop
ljmp
das
push
inc
add
inc
push
stc
mov
xchg
jl
daa
hlt
sahf
mov
and
imul
fadd
leave
xor
popf
xchg
and
push
cmp
or
fildll
sbb
xor
lcall
jle
inc
xchg
scas
test
lods
and
fisubs
iret
and
mov
jae
ljmp
ds
sahf
pop
dec
xor
sub
and
adc
mov
jge
sub
imul
add
mov
aaa
jle
dec
sbb
addr16
sbb
dec
dec
sub
sub
es
das
hlt
jg
sbb
jns
jbe
fwait
cmpsb
loop
ret
jb
mov
mov
aaa
ljmp
pop
mov
jmp
in
lock
aam
or
dec
std
incl
mov
roll
movsl
adc
ffreep
push
nop
into
mov
mov
and
xor
cmc
lods
jecxz
cmc
sbb
inc
sahf
std
mov
mov
movsb
test
sarl
loop
lock
cs
cmp
mov
xchg
imul
pop
sub
js
pop
stc
subl
call
and
push
adc
ds
jl
cltd
andl
push
mov
cmp
scas
cmc
ljmp
lea
js
jecxz
test
jg
push
cld
js
lret
fildl
jge
xchg
push
jmp
xchg
cmp
jg
ljmp
xchg
rorb
inc
leave
push
or
into
mov
jmp
push
xlat
and
inc
push
loope
andb
nop
and
xor
arpl
xchg
jp
cmpsl
push
xchg
movsl
push
push
test
add
mov
loopne
ficomps
cmc
mov
sbb
js
add
fisttps
cwtl
jecxz
das
in
pop
sti
jg
jge
pop
fildll
xchg
pop
xchg
gs
repnz
jmp
push
shlb
int3
rolb
fbstp
pop
push
adc
movsl
jg
and
mov
fdivr
call
xor
jg
inc
sbb
sbb
nop
inc
int
mov
in
loope
mov
lahf
in
fnsave
jmp
mov
les
mov
push
int
mov
cli
jae
test
pushl
xor
sbb
dec
cmpsb
or
or
imul
out
adc
out
cmp
cmpsl
cld
jb
fs
out
loop
insb
push
mov
ljmp
mov
dec
or
inc
cmp
ret
push
cmp
inc
in
sub
push
push
imul
add
leave
nop
or
sub
divl
fwait
mov
adc
fildll
call
into
test
jg
bound
outsl
mov
lods
fcomps
insb
xor
aaa
icebp
int3
mov
sub
mov
pop
cmpsl
call
stos
daa
dec
adc
fisttps
push
add
stc
cwtl
imul
add
or
inc
std
scas
or
and
jno
xor
mov
jge
imul
leave
daa
pop
cmpsb
add
call
dec
ror
pop
mov
jg
loopne
test
or
incb
lds
and
push
mov
mov
jnp
int
push
dec
xlat
mov
and
pusha
out
roll
iret
add
fld
inc
mov
outsl
sahf
enter
push
and
inc
add
xchg
add
inc
hlt
mov
dec
out
mov
decb
xchg
sub
das
jbe
jecxz
loope
mov
jl
sub
pop
mov
dec
and
lds
stc
cmpb
or
sahf
outsb
xchg
lock
pushl
shrl
pop
in
mov
es
lcall
ljmp
sbb
adc
scas
sbb
loope
ret
mov
mov
std
mov
mov
xchg
incl
dec
push
leave
vaddpd
jne
inc
cmp
jnp
repz
cmp
call
out
mov
outsl
sbb
icebp
add
sub
mov
jae
push
arpl
jmp
xchg
cwtl
jbe
imull
loop
pop
fstpl
out
clc
push
cmpsl
fs
pop
push
bound
daa
loope
ljmp
in
aad
sbb
xchg
pop
mov
movsl
xor
pop
pop
and
loopne
incl
sub
aam
xor
jbe
push
jns
lret
stos
xchg
add
sub
test
dec
sti
dec
inc
xchg
in
outsb
popa
imul
inc
inc
cltd
dec
ja
fcmovu
andl
cmpsl
pusha
mov
sahf
movsl
ljmp
push
pop
jle
lcall
mov
sti
or
mov
pop
hlt
pop
adc
add
lret
fidivrl
push
mov
adc
jle
lock
loope
lods
aas
vpmulhw
insb
stos
mov
mov
pop
outsl
inc
pop
rolb
jbe
out
loop
stc
call
fists
dec
lahf
xor
test
jb
mov
idivl
pushl
imul
lea
inc
pushf
out
movsb
out
stc
adc
negl
or
ljmp
inc
std
jns
inc
pop
fwait
in
push
mov
test
xchg
js
push
imul
ret
jecxz
mov
mov
rcrl
inc
pop
inc
movsb
dec
or
mov
and
std
aas
aaa
jle
mov
cmp
pushf
or
cwtl
add
push
ja
pop
pusha
in
xor
push
sub
mov
fsub
call
fldcw
or
fnsave
mov
lcall
fsts
mov
std
adc
inc
adc
pusha
add
xchg
and
ljmp
push
in
nop
adc
inc
cmp
js
cmp
int
and
jns
std
pushl
fdivrl
lahf
push
and
add
mov
add
mov
jmp
clc
or
push
pop
jb
cmp
xor
push
in
cmc
or
idivb
mov
mov
mov
push
mov
xor
xor
insl
xchg
call
lret
xor
ljmp
lock
xchg
jo
imul
dec
add
cmp
std
mov
scas
mov
xchg
fs
inc
sub
bound
pop
cli
fbstp
or
enter
dec
enter
pop
or
or
xor
movsl
cmp
cmpsb
add
lods
inc
jb
mov
leave
repnz
xlat
lock
push
subps
sbb
or
pushl
mov
pop
in
lret
dec
ja
xchg
push
jne
call
jg
xor
jmp
push
jo
cmpsb
jmp
daa
mov
or
inc
call
test
mov
pop
xlat
mov
mov
cli
mov
inc
jae
cmp
jae
mov
xchg
mov
daa
pop
inc
movsb
divl
xchg
fildl
jne
dec
cmp
stos
popf
pop
out
ljmp
psrld
push
jecxz
cmp
decb
mov
dec
pop
call
cmc
pop
mov
lcall
roll
inc
repz
mov
xor
dec
add
mov
rcl
dec
inc
lahf
popa
xchg
call
or
insb
pop
mov
wbinvd
movl
imul
in
int
and
mov
push
int3
pop
incl
dec
xchg
lds
cmp
mov
lods
push
mov
jmp
inc
xchg
or
stos
dec
mov
enter
cmp
daa
stos
xchg
and
loopne
dec
push
movb
ret
ficompl
mov
in
divl
mull
mov
push
pop
aad
mov
enter
clc
outsl
arpl
loopne
fucom
or
xor
adc
ljmp
insl
push
fidivl
xchg
data16
xchg
inc
sub
jg
mov
xchg
mov
pop
subb
or
lds
das
out
dec
mulb
fwait
hlt
cmc
push
cltd
pushf
sub
push
xchg
ljmp
lcall
arpl
pop
jl
sub
push
enter
and
jbe
or
jmp
ja
inc
jl
ja
icebp
xorl
inc
jl
aam
dec
cld
jno
push
sahf
popa
xchg
lcall
popa
nop
sbbb
mov
mull
decb
and
xor
fsub
fldl
pop
fwait
loop
sahf
push
cli
cmp
fnstsw
push
out
data16
aaa
or
lea
adc
jl
out
incl
fsubp
sbb
nop
jmp
jne
stos
arpl
mov
decl
cmp
or
or
mov
add
mov
es
fwait
js
jo
and
add
movb
add
es
lret
adcb
ret
lock
jnp
aaa
test
pushl
outsb
push
adc
inc
xor
addr16
inc
gs
daa
lret
jns
sub
jecxz
sub
shlb
dec
cmpsb
mov
lret
lods
stc
adc
mov
mov
pop
loop
mov
outsb
dec
or
adc
jmp
and
jnp
mov
cmp
test
jmp
add
xorl
or
jle
in
and
lea
lea
std
or
popa
mov
insl
sub
mov
push
stos
hlt
inc
adcb
or
imul
xchg
mov
inc
jbe
icebp
movsb
ds
popl
mov
in
lock
loope
scas
pop
mov
aaa
popa
pop
clc
daa
data16
out
call
sbb
jne
xor
imul
outsl
std
push
cmp
or
sub
call
insb
enter
mov
cmpsl
xchg
pushl
popl
push
jnp
xchg
leave
clc
jb
out
stos
pop
sbb
mov
decl
gs
push
aaa
fucomp
cmpl
pushf
lahf
daa
imul
xor
cld
jmp
pop
fadd
cs
or
push
mov
leave
rclb
xchg
add
xchg
loopne
in
jmp
mov
mov
lods
and
jae
test
pushl
shrb
mov
cli
dec
dec
pop
mov
push
xchg
mov
sbb
decl
xchg
push
sub
sbb
popa
sub
call
inc
jne
jo
jno
cmp
fcomps
stos
dec
out
push
or
mov
or
mov
fiadds
push
push
lock
cld
cmp
lcall
jecxz
mov
cmp
cmp
inc
inc
and
and
lcall
pop
out
lds
dec
imul
insl
mov
mov
push
movsb
popa
hlt
in
in
xor
call
ljmp
jg
lea
inc
std
sub
pop
jb
jmp
pop
pop
mov
ret
cli
test
xor
mov
lods
mov
adc
push
int3
pop
pop
cmp
fucomip
decl
cmp
lahf
and
test
addl
jne
ret
std
ljmp
push
insl
push
pop
data16
xor
jmp
les
fsincos
in
repz
fsub
push
jmp
in
push
sub
ror
ljmp
daa
sbb
outsb
test
add
dec
scas
loop
orb
sub
mov
in
xchg
sub
inc
mov
popf
and
loopne
push
mov
call
mov
sub
or
cld
sub
into
cmpsb
inc
jl
std
cmp
cmp
xlat
and
lds
movsb
addb
in
icebp
jge
pop
js
jae
jge
xchg
subl
mov
call
sahf
inc
push
movsb
movsl
xorl
mov
sub
hlt
xor
jge
dec
gs
mov
mov
mov
inc
add
mov
pop
jmp
mov
repz
rcll
lods
xchg
push
andb
sbb
stos
push
rcl
pop
sub
jecxz
fdivl
xchg
adc
incb
pop
jle
loopne
test
add
adc
pop
jae
cmp
mov
pop
add
inc
pop
jbe
sub
mov
push
sub
jecxz
icebp
xor
sbb
sbb
lgdtl
fnstenv
lods
xchg
lcall
push
fld
data16
lret
push
ss
les
push
in
sbb
decl
jge
lods
push
mov
inc
loop
scas
cltd
dec
and
repnz
xlat
xchg
roll
lcall
jno
adcl
cld
cmpsb
sahf
sti
inc
pop
cmpsl
mov
into
add
stc
cmp
or
aad
jae
lea
mov
fs
lgs
or
mov
movsb
or
cld
decl
stos
push
rorl
push
loope
gs
pop
cmp
aam
cmpb
int3
pop
mov
lods
ljmp
test
mov
jmp
mov
insb
jl
push
fldt
shlb
ds
mov
lods
dec
push
sub
aad
pop
call
jmp
imul
cmpsb
xchg
movsb
jmp
in
outsl
decl
cmp
cmpl
cltd
jg
mov
push
call
mov
ret
jmp
push
xchg
sub
cmp
mov
fwait
in
inc
nop
das
scas
int3
decl
and
sar
bound
or
pop
loopne
lods
sub
outsb
cltd
add
jg
add
xchg
or
outsl
jmp
nop
xchg
dec
fisttpl
cmpsb
mov
xlat
xchg
stc
xor
movsl
insb
mov
mov
fs
jne
xchg
pop
lds
in
dec
pushf
adc
cld
pop
int
mov
add
call
ja
lea
test
call
fsin
inc
push
add
in
sbb
lret
inc
dec
cmp
or
outsb
jns
aad
jg
dec
adc
jae
and
nop
std
jg
cmp
pop
cld
imulb
icebp
jae
adcl
test
sbb
and
sub
mov
mov
out
cs
jl
shlb
int
push
scas
mov
fs
out
inc
icebp
cs
lahf
xchg
fidivrl
pop
mov
cmc
aaa
test
push
inc
lcall
cld
lcall
imulb
mov
mov
adc
lods
dec
shlb
cs
jg
lcall
sbb
adc
aaa
sbb
mov
mov
jecxz
in
cmp
mov
inc
repnz
dec
sarw
push
cmp
xchg
call
stos
sub
hlt
dec
xchg
or
push
int
jp
sub
repnz
xchg
arpl
inc
fisttpl
jge
xchg
rclb
mov
sbbb
inc
xor
arpl
enter
lcall
stos
insl
icebp
pushl
and
sbb
cmp
or
pusha
sbb
cs
sbb
cld
incl
dec
push
rorl
jge
in
cli
mov
mov
add
sbb
mov
out
call
and
pusha
fistpl
ljmp
jg
push
pop
adc
fistps
insl
pop
sahf
inc
xor
int
fadds
stc
sub
dec
std
add
insb
mov
mov
cmp
movsb
mov
fcomip
mov
sbb
popf
pop
dec
clc
mov
mov
xchg
pop
bound
xor
mov
call
push
cmp
mov
pop
xchg
dec
in
sub
data16
lods
sbb
call
or
ret
ss
sub
sar
pushl
sbb
dec
dec
fidivrs
sahf
loop
jp
push
push
and
pop
jnp
lret
mov
jl
add
jmp
aad
or
outsl
sbb
outsb
lds
movsb
insb
rclb
fisttps
mov
inc
shr
fbld
add
inc
adc
andb
test
jp
xor
xor
adcl
add
ss
sbb
or
mov
cmpsb
arpl
push
sbb
aaa
adc
sbb
and
inc
daa
inc
loop
cmp
leave
lods
enter
dec
adc
push
loope
aad
add
imul
andb
daa
and
in
das
fsubr
pop
or
sti
xor
jl
or
lods
jg
or
dec
dec
movsb
mov
cmp
loope
pop
sbbb
xlat
mov
filds
jmp
iret
jmp
jb
mov
lea
mov
sbb
add
ljmp
ljmp
mov
fdivr
jmp
in
ja
xor
or
push
es
fdivrl
push
loope
call
xchg
das
insb
adc
repz
leave
aam
jns
lods
lock
lcall
stc
decl
sbb
movsb
sarb
adc
movsl
lock
dec
pop
rcrb
gs
testb
mov
inc
xlat
sbb
mov
cmpsb
hlt
pop
push
inc
mov
xor
aad
inc
fnstsw
dec
scas
or
ds
push
loopne
sbb
faddl
jecxz
js
fdivl
pop
inc
and
jl
roll
std
mov
lods
shrl
and
loopne,pt
push
cmpsb
cltd
and
test
xchg
cmp
mov
xor
add
lahf
arpl
xor
mov
repz
mov
add
mov
cmp
int3
push
dec
les
jmp
rorl
fdiv
stc
arpl
sbb
mov
std
hlt
testb
dec
mov
mov
daa
in
xchg
cltd
das
lahf
and
or
in
nop
scas
sbb
out
lret
mov
sahf
dec
dec
lods
clc
sub
jecxz
xchg
cmp
call
cwtl
adc
sar
pop
insb
xchg
jns
lds
and
add
outsb
stc
cld
loop
ljmp
jecxz
inc
pop
sbb
rorb
inc
lods
sti
in
add
mov
les
push
mov
mov
push
mov
sbb
pop
enter
mov
dec
xchg
inc
decl
xor
inc
outsb
xor
ret
push
mov
aaa
push
push
push
ss
push
ret
or
dec
pusha
jl
xor
out
mov
loopne
call
cmp
xor
adc
mov
pop
mov
mov
xor
fmuls
push
jmp
rolb
push
mov
icebp
fsubrl
ret
add
sbb
fistps
pushf
xchg
push
cs
mov
jnp
xchg
jmp
sub
movsb
cmp
sbb
call
in
in
jp
arpl
inc
out
fldl
iret
push
pop
mov
fidivs
out
xchg
cs
ljmp
lahf
cmpsb
mov
stc
jp
inc
lret
js
mov
rolb
adc
ljmp
iret
mov
repnz
or
cld
loopne
jg
filds
iret
lods
cli
popf
outsb
mov
js
and
jns
sub
mov
mov
sub
jmp
push
loope
pushf
push
pop
icebp
das
fistpll
mov
shlb
add
repz
clc
outsl
dec
push
repnz
xor
mov
jg
inc
aad
lret
loopne
inc
lret
jae
mov
pop
add
leave
mov
adc
out
sbb
inc
repnz
testb
call
adc
xor
or
cmp
mov
aas
neg
push
addb
lahf
jmp
sub
adc
push
mov
pop
push
lret
mov
dec
mov
dec
xchg
mov
fnsave
inc
jbe
mov
outsb
rclb
popf
cmpb
call
cmp
xlat
mov
cs
cmpsb
decl
or
ljmp
enter
js
sbb
xchg
std
mov
out
loop
es
cmc
xchg
mov
movsl
daa
cltd
rolb
leave
add
das
or
stos
decl
jae
imul
xor
inc
lea
adc
fnsave
ljmp
pop
clc
xchg
ret
shrb
cld
aaa
mov
test
ret
out
fwait
cltd
dec
insb
add
in
jg
iret
pop
jge
outsb
shll
js
sar
incl
sub
aas
ja
mov
fsubrl
mov
jae
mov
incl
push
jmp
xchg
and
mov
add
out
mov
jmp
mov
das
xchg
and
pop
leave
and
clc
inc
add
jb
pop
clc
jmp
mov
stc
sbb
add
cmp
pop
push
push
jge
in
push
mov
aad
aaa
mov
xlat
adc
mov
xchg
push
in
xor
call
js
sbb
insb
jne
scas
mov
mov
add
cli
mov
mov
dec
push
inc
push
jb
lds
push
pop
push
mov
outsl
sub
and
jb
dec
or
pop
loop
insl
bound
daa
push
jns
pushf
jle,pn
fwait
mov
ljmp
pusha
test
mov
iret
jae
mov
stos
lret
test
cli
xchg
int3
xlat
sub
test
test
pop
or
lock
sbb
fnsave
mov
lods
jne
pop
jb
push
aas
cmp
ds
in
outsl
cmc
enter
mov
sub
cmp
push
push
outsl
cmc
fwait
ja
aam
pop
cmpsl
hlt
mov
repnz
adc
dec
std
push
cmp
and
xchg
in
inc
jg
inc
ja
in
filds
rcrb
push
xchg
or
popl
lahf
int3
push
loopew
incl
add
adc
jae
ds
xor
popf
lea
call
sti
rolb
dec
imul
push
and
xor
das
loope
mov
std
push
push
fidivrl
cmp
cltd
fimuls
out
inc
lcall
inc
notb
xchg
int3
ja
daa
cli
push
jecxz
xor
mov
imul
or
inc
adc
xor
cmp
adcl
aaa
nop
push
jge
movsb
shrl
or
jbe
pop
lret
xchg
add
aas
mov
push
outsl
out
sar
fnsave
into
jno
js
and
mov
jo
cwtl
pop
xchg
mov
jle
mov
dec
outsb
jno
mov
push
das
and
les
loop
lahf
jp
push
or
test
ja
sub
push
jno
sbbb
mov
jmp
pusha
call
pop
dec
test
int
in
mull
jbe
jmp
pop
jle
sub
add
pop
es
jg
decl
xor
jb
daa
sbb
push
sahf
jo
mov
stc
es
repnz
cs
pop
push
cli
mov
lods
adc
jbe
xlat
xchg
loop
lahf
mov
mov
movsl
adc
sar
movsl
aad
jo
pop
cmp
jbe
pop
dec
jl
pop
xchg
pushl
test
out
adc
insb
movsb
test
pop
mov
fistps
orl
cmp
xchg
in
clc
jmp
jnp
daa
int
inc
jns
mov
pushf
sub
push
xchg
cld
xchg
push
lock
mov
and
movsb
stos
fs
sbb
add
sbb
xchg
pop
loopne
mov
icebp
xchg
push
xchg
ds
imulb
inc
mov
pushl
shlb
repnz
xchg
cld
jp
dec
into
out
lock
dec
mov
imul
cmp
cmc
push
xchg
jge
decl
xor
jns
jle
pop
sbb
shrl
lret
aaa
xor
cwtl
addl
dec
or
and
pushf
jg
imul
adc
inc
add
ret
add
fwait
call
jp
push
sub
pusha
and
test
addr16
lcall
jge
or
pop
jbe
push
pushl
bnd
jo
out
xchg
xor
push
xor
inc
std
jl
cmpsl
mov
cmpsl
out
dec
pop
mov
enter
jmp
mov
push
bound
test
outsl
shr
inc
and
idiv
decl
push
addr16
jb
xor
xchg
fmuls
sub
sar
pushl
std
mov
inc
inc
das
xchg
pushf
push
mov
sbb
cwtl
sbb
sub
sbb
std
jmp
mov
test
cltd
xchg
subb
and
jmp
mov
int3
and
mov
mov
inc
pusha
push
test
negb
les
ds
fnstsw
adc
div
ss
fwait
push
cmp
imul
jb
iret
xchg
data16
sub
incl
insl
xchg
dec
pop
pop
or
push
movsb
das
cmc
sbb
pop
daa
jo
dec
adc
mov
call
scas
mov
lret
nop
xor
pop
loopw
xor
bound
and
je
xchg
out
call
enter
jne
sub
add
fdivrs
xchg
or
and
jmp
jno
scas
in
cmc
fcomps
and
and
add
in
or
psrld
or
adc
adc
jg
cwtl
jnp
push
addr16
movsl
shlb
mov
xor
loop
jg
cmpsl
mov
and
pop
sahf
mov
test
pop
lcall
sbb
lret
lods
add
out
cmp
daa
enter
std
ljmp
arpl
xchg
sbb
and
in
xchg
mov
inc
cld
and
fucomip
mov
loop
in
das
push
push
xor
sub
das
js
faddl
test
das
lock
cmp
mov
mov
mov
adc
outsb
xor
pop
mov
dec
push
lcall
push
lret
adcl
mov
fldlg2
mov
mov
aaa
mov
mov
mov
mov
in
int3
insl
movsl
dec
push
mov
cmp
fwait
jle
les
mov
or
fists
xchg
xchg
push
mov
xor
inc
push
mov
mov
mov
lcall
sbb
pop
das
out
xor
movsb
push
xchg
pop
cmpsl
mov
in
inc
add
push
xchg
iret
mov
outsl
std
insl
xor
add
jp
lcall
mov
mov
lock
sbb
js
push
mov
insb
sbb
jg
jns
push
add
adc
outsl
in
shrb
jbe
fbstp
push
movsl
sbb
andl
sub
xchg
mov
stos
ficoms
adc
aas
cli
mov
jno
or
pop
roll
jl
push
ljmp
xchg
enter
cmp
ss
cwtl
and
xor
sbb
xchg
adc
popf
add
cmp
cmpb
lcall
fcomip
mov
sub
push
and
sbbb
pop
dec
cmpsb
jg
pushl
loop
vcvtps2pd
addb
iret
or
jo
push
mov
test
dec
in
fwait
les
icebp
sub
bnd
xor
incl
imul
shrl
clc
loop
aaa
mov
rclb
cmpsb
sub
xor
push
sbbl
loop
ret
test
js
xlat
sbb
mov
pop
mov
mov
adc
cmc
stos
fidivs
inc
addl
jae
pop
jmp
sahf
cld
clc
not
cld
cld
jbe
ret
cli
sub
add
sub
mov
adc
dec
ja
cmp
loopne
aaa
mov
out
aas
or
call
jle
jo
mov
xor
push
cmp
push
or
sbb
cmp
lea
sub
pop
dec
arpl
mov
outsl
mov
sub
push
pop
in
xchg
adc
fdivr
push
mov
icebp
jae
mov
xchg
xchg
filds
repz
or
ret
inc
sub
ljmp
insl
test
sbb
aas
loop
fiaddl
mov
mov
outsl
jmp
push
daa
push
push
dec
adc
outsl
std
jmp
shr
out
mov
mov
push
lock
std
std
adcb
mov
jg
jmp
daa
pusha
mov
mov
lock
fnstsw
jge
jle
in
sbb
xchg
and
aam
pop
or
mov
ljmp
add
add
fwait
adc
out
inc
in
xchg
push
xchg
lds
dec
ret
mov
inc
jae,pn
inc
insl
mov
shlb
jo
dec
daa
mov
lcall
and
daa
pop
sub
mov
pop
lods
int
je
in
jmp
call
and
aam
push
ret
cs
test
add
stc
lcall
ljmp
lods
xor
jl
xor
or
fcmovb
pop
rcr
lahf
jge
sbb
inc
fistl
dec
and
jae
enter
adc
jg
es
jno
pop
out
inc
pop
pushl
xor
jns
push
call
mov
push
pop
shr
aaa
mov
test
inc
ds
add
lods
je
xchg
sbb
pop
stc
repnz
mov
or
xchg
mov
dec
xchg
outsl
rcrl
and
cmp
or
mov
jle
call
subb
or
sarl
icebp
lret
ljmp
dec
ljmp
daa
test
popf
popf
and
cmp
add
jl
lcall
movsl
and
outsb
inc
pusha
push
mov
decl
pop
mov
ret
jbe
mov
mov
adc
push
xchg
xlat
fistl
push
or
jl
jge
leave
in
enter
and
aam
pop
leave
pop
mov
xchg
push
inc
test
mov
out
cltd
and
fistpll
imulb
adc
into
mov
bnd
and
aam
daa
xchg
outsb
loopne
mov
dec
add
iret
scas
jge
insb
adcl
cmpsl
pop
cld
xchg
scas
sbb
fdiv
inc
mov
dec
jecxz
aam
push
mov
fisubl
test
xchg
popa
out
leave
add
adc
xchg
das
jg
test
or
or
push
mov
inc
clc
call
in
loop
jbe
sub
and
mov
dec
or
pop
dec
fistpll
fisubl
in
sub
call
popf
lahf
xchg
rcrl
fidivrs
les
cltd
jecxz
cmpsl
aam
in
movsl
mov
ret
adc
mov
adc
dec
jmp
data16
pop
ret
jle
inc
movsl
lret
les
and
xchg
fcomi
iret
lret
add
and
adcb
jge
add
in
decl
dec
dec
bound
aam
push
dec
in
and
cld
pushl
sahf
add
hlt
inc
push
sbb
mov
fnstsw
sub
cmp
mov
xchg
lret
lahf
xchg
out
cmpb
push
rcr
sub
pop
or
add
cld
lret
ljmp
jl
jge
mov
loope
aam
pop
aam
push
lret
sar
dec
mov
test
divb
test
popf
mov
inc
aam
lret
fbstp
push
and
add
or
push
rorb
ljmp
xchg
insl
sbb
add
cmp
pop
jg
imul
ja
shll
push
or
sub
lret
mov
sub
dec
sub
push
into
dec
outsl
cmc
jmp
loop
sub
xchg
popf
add
inc
inc
pop
out
cmpsb
mov
xor
fdivl
cmp
subb
fisttpll
aad
lcall
inc
mov
or
mov
push
xlat
sahf
inc
sub
mov
inc
iret
outsb
inc
cmp
ja
jne
and
mov
dec
and
xor
bound
jmp
in
ja
sbb
pushl
fimull
lcall
push
adc
pushl
call
sbb
mov
imulb
into
shrl
dec
aaa
into
sbb
data16
pop
mov
cltd
and
or
outsb
jae
aas
loope
xor
imul
icebp
dec
out
lret
imul
fidivrl
movsb
mov
pop
ret
dec
jl
icebp
mov
cmpb
xchg
mov
fisubrs
xchg
fld1
mov
mov
iret
xchg
fimull
adcl
adc
leave
push
in
inc
ds
les
data16
mov
lcall
jmp
xor
aaa
leave
outsb
inc
loope,pt
xor
incl
frstor
popa
push
mov
dec
inc
jbe
fwait
jmp
fidivl
movsb
cmpsl
in
inc
stos
rol
cmp
incl
xchg
mov
lds
repnz
pop
scas
outsb
sahf
mov
xchg
xorl
cs
std
xchg
shr
jmp
jg
mov
push
int3
pop
jl
push
mov
iret
test
enter
adc
ret
dec
outsb
cmpb
outsb
push
mov
jbe
popf
pop
popa
in
sahf
fidivrl
movsb
cli
movsl
int
lods
in
jp
stos
add
xchg
pop
jmp
xchg
sarb
nop
insl
push
std
fists
sbb
dec
pop
std
stc
mov
cs
repz
fucomi
test
push
pop
dec
enter
push
mov
add
in
jmp
fucomp
mov
les
aaa
in
clc
frstor
fs
mov
in
fbstp
jbe
xchg
and
insb
fidivl
movsb
mov
inc
int3
mov
das
mov
mov
nop
cmp
fistl
inc
stc
inc
pop
mov
fiadds
iret
aas
lcall
es
pop
mov
or
mov
stc
call
fnsaves
shrl
jae
daa
shrb
jb
lahf
sti
aaa
arpl
mov
dec
jns
pop
sahf
xchg
insl
and
lcall
lcall
loope
inc
test
fwait
or
pop
inc
int
pusha
push
sub
dec
inc
pop
call
icebp
jg
jp
cs
test
aaa
jle
fldcw
test
mov
aas
incl
lahf
jae
js
hlt
repz
jg
pop
shrl
jb
arpl
and
push
mov
outsl
lcall
aaa
cld
jb
loop
into
inc
or
lret
popa
mov
sbb
lahf
and
jb
xchg
mov
push
sahf
test
dec
daa
mov
lret
rorb
aam
dec
jl
dec
loope
xor
push
pop
push
lret
lahf
xor
out
lret
das
insl
cld
jg
call
xor
jl
xchg
ds
dec
rcrl
aaa
pushl
nop
cmp
popa
shrl
shlb
lahf
lcall
cmp
sahf
or
aaa
cmpsb
jge
jo
adc
call
sub
out
sbbb
pushf
cmpsb
out
sbb
ljmp
movsl
mov
fwait
mov
mov
lret
imulb
cmp
outsb
adc
cli
push
mov
jg
and
sbb
cmp
dec
addr16
mov
stc
aas
sahf
cmpb
and
pop
add
push
test
pop
push
call
and
imulb
jne
ss
aad
or
push
ljmp
ret
data16
sub
xorb
fisttpl
jp
cmp
daa
mov
jb
jbe
jle
mov
mov
xor
scas
loop
stos
iret
lods
movsl
aas
ds
unpckhps
xchg
sbb
loopne
mov
lods
jo
lret
repz
stos
pusha
pop
test
mov
push
arpl
out
aam
imul
mov
cmp
call
cmp
cmp
add
or
adc
sbb
and
sub
inc
ds
jp,pt
mov
xor
push
aas
mov
cltd
in
aas
leave
aas
aas
fnstsw
add
inc
push
xchg
sbb
jg
xor
dec
xor
xor
xor
xor
xor
xor
xor
xor
dec
cld
lcall
xor
cmp
jp
xorl
sbb
sub
cmp
inc
xor
std
ljmp
cmc
xor
or
and
ds
xor
xor
xor
xor
ds
dec
add
xor
aaa
xor
lcall
les
fnsave
in
xor
xor
xor
xor
xor
ja
movsb
xor
xor
xor
aaa
xor
fistpll
inc
xor
xor
inc
xor
xor
xor
xor
cli
lcall
xor
xor
xor
add
or
adc
sbb
dec
ss
ss
ss
call
clc
pop
hlt
mov
aaa
icebp
aaa
daa
aad
call
cmp
pop
lcall
cmp
cmp
cmp
mov
fidivrs
jmp
out
cmp
cmp
cmp
cmp
cmp
clc
test
cmc
cmp
cmp
test
gs
call
cmc
ds
ds
aas
add
pop
aas
jb
js
cmpsl
aas
lods
movsl
mov
aas
jb
pop
loope
out
aas
notb
add
and
inc
xor
pushl
jb
mov
xchg
xor
xor
xor
xor
xor
xor
xor
fs
add
pushl
int
in
sti
xor
xor
xor
xor
lcall
pushl
adc
push
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
cs
aaa
adc
dec
aaa
popf
aaa
dec
cmp
cmp
mov
adc
cmp
cmp
cmp
cmp
cmp
cmp
xchg
clc
outsl
sbb
sahf
cmp
or
cmp
pop
clc
lods
enter
ds
sbb
inc
aas
push
aas
gs
cwtl
aas
lret
mov
mov
call
and
mov
lcall
xor
dec
xor
mov
loope
decl
mov
xor
fs
xor
xor
xor
xor
xor
iret
cli
pop
pop
mov
xor
xor
idiv
jg
xchg
pop
aaa
ljmp
pop
cmp
xor
cmp
inc
stos
call
mov
and
cmp
jbe
xchg
les
cmp
cmp
pushl
cld
cmp
cmp
cmp
cmp
cmp
xchg
push
cmp
cmp
cmp
cmp
cmp
decl
cmp
cmp
cmp
cmp
cmp
sarb
outsl
jbe,pt
aas
jle,pt
mov
ds
cmp
aas
bound
push
and
or
sahf
aas
test
in
lock
fdivrl
push
xor
xor
xor
mov
or
xor
xchg
xor
decl
xor
jns
xor
jb
jge
test
lret
xor
xor
sbb
and
aaa
sahf
aaa
lods
gs
clc
int3
aaa
shll
fdivl
aaa
add
fdivl
pusha
pop
cmp
cmp
std
add
cmp
lcall
cld
xchg
pushf
cmp
mov
mov
cmp
cmp
cmp
cmp
dec
cmp
push
cmp
cmp
pop
mov
cmp
test
mov
cmpsl
aas
cmp
cmp
cmp
cmp
cmp
cmp
test
xchg
push
cmp
cmp
fnstsw
icebp
cmp
ds
aas
mov
iret
aas
fidivrs
jmp
shl
nop
and
add
adc
xor
mov
ja
xchg
mov
sahf
xor
mov
xor
xor
mov
xor
jo
jle
cwtl
xor
das
cltd
mov
xor
out
xchg
dec
mov
xor
xor
xor
jbe
ret
mov
call
hlt
xor
xor
xor
mov
xor
lods
ss
sub
aaa
inc
aaa
pop
aaa
fs
jge
in
movhps
mov
scas
int
fstpt
lock
cmp
cmp
outsl
cmp
cmpb
cmp
xchg
lcall
cmp
cmp
cmp
cmp
pop
cli
cmp
cmp
cmp
cmp
jg
sub
sub
cmp
jae
jns
xchg
mov
cmp
cmp
sbb
lcall
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
xor
jg
or
add
pop
cmp
jo
cmpb
aas
xchg
lock
lods
cmp
mov
or
or
mov
mov
ret
ss
aaa
je
lods
cmp
cmp
fsts
adc
xor
cmp
add
inc
add
leave
fdivrs
mov
jge
xchg
mov
pop
pop
popf
rcrl
jl
int
paddd
popf
fstps
cltd
cmp
mov
cltd
ds
jb
sub
aas
adc
mov
or
add
sbb
pop
and
xchg
xor
in
mov
daa
pop
and
pop
ret
cmp
add
aaa
mov
inc
sub
adc
jmp
jge
xchg
in
adc
mov
jp
lret
pop
jnp
or
lock
jb
jb
inc
add
mov
and
inc
jne
sbb
and
adc
adc
lds
mov
inc
lds
mov
pushf
add
sbb
add
mov
inc
xor
je
add
push
inc
inc
inc
mov
clc
jl
adc
pusha
rcr
adc
cs
andb
insl
mov
or
std
leave
or
sbb
mov
dec
add
movsl
or
inc
mov
sbb
adc
lcall
or
int
push
data16
cmp
mov
pushf
or
lods
mov
mov
adcb
add
cmp
xchg
or
test
rclb
test
adc
aam
mov
adc
fcoms
or
mov
je
sub
cmp
add
fsubrs
outsl
int3
jge
sub
cmp
jnp
inc
add
lods
int3
xor
mov
fisttpll
adc
add
fistpl
jne
sbb
shr
cmp
addr16
ja
pop
push
mov
stc
fidivs
sbb
es
inc
adc
das
mov
xor
add
sub
or
mov
sbb
xor
mov
aas
cmpl
jbe
lcall
or
mov
fwait
inc
movsb
pusha
mov
pusha
out
jnp
shll
xchg
sbb
fidivs
pop
outsl
and
stos
mov
lret
jnp
repnz
or
leave
es
les
sbb
add
add
inc
adc
hlt
imul
insl
add
divl
fistpl
lods
xchg
xor
fs
sub
push
add
lret
inc
adc
inc
mov
sub
sbb
dec
test
insb
daa
roll
sub
adc
mov
or
rorb
sbb
loopne
sub
mov
mov
xchg
sub
mov
dec
dec
inc
add
xor
dec
cwtl
popa
insl
and
mov
and
inc
xor
cmc
movsb
push
dec
insl
loope
add
shl
pop
inc
xor
test
mov
mov
jle
sahf
mov
push
inc
lahf
jecxz
out
add
aaa
dec
call
add
inc
mov
std
xchg
call
or
jg
ret
add
add
push
push
in
leave
test
out
sbb
pop
push
cmp
xor
mov
jns
sbb
adc
push
push
push
nop
add
cmp
add
add
and
clc
inc
dec
mov
movb
mov
xchg
in
jbe
mov
fcoms
clc
xchg
adc
adc
adc
insl
inc
cmp
cmp
push
xchg
push
or
push
ret
or
add
xor
xor
mov
fcomps
or
int3
or
outsl
push
aas
das
or
aad
or
pushf
or
js
mov
pop
popa
or
pop
das
jno
mov
sub
out
sub
adc
mov
pop
or
push
insb
nop
ret
adc
sbb
sub
cmp
fisttpll
mov
adc
add
and
and
adc
push
cmp
lds
ret
fstps
leave
xchg
inc
mov
pushf
insl
or
and
ja
movsb
lods
std
push
popf
orb
repnz
pop
clc
inc
das
jge
mov
fsubrs
inc
movsb
cmp
xchg
push
cld
idivl
fisttps
mov
mov
mov
or
sub
inc
shrl
add
bound
fcoml
jg
push
and
xlat
mov
cmpb
in
inc
xchg
gs
xchg
jb
outsl
outsb
xchg
gs
xchg
gs
cs
or
cli
fs
push
add
jne
mov
push
shlb
and
adc
cs
fs
daa
je
sti
xor
call
ficoms
jne
add
daa
or
adc
hlt
pop
je
pusha
in
cmp
lret
enter
dec
movb
shrb
outsb
int3
int
insb
sub
shrb
xor
xor
popf
sub
shrb
shll
jmp
cmp
lret
add
imul
gs
test
popa
aas
std
enter
addr16
imul
int3
sub
or
int
test
inc
std
js
lds
mov
dec
aad
xchg
fidivrs
addr16
enter
lods
leave
mov
ret
cmp
in
popa
jp
push
adc
push
inc
sub
pop
pusha
leave
fs
xor
lcall
ja
cmp
rolb
nop
cmp
je
mov
mov
pop
jp
inc
push
ret
adc
push
sub
dec
sti
vrsqrtps
jmp
sbb
dec
push
decl
jne
in
sbb
stc
shrb
ret
xor
test
sub
rcl
imul
jne
je
mov
daa
enter
mov
ret
inc
push
pop
cmpb
mov
popa
add
jno
in
in
mov
mov
push
mov
ret
sbb
jb
std
mov
adc
lods
dec
std
push
ficoml
out
dec
test
add
xor
dec
xor
cmp
call
sbb
call
add
lret
inc
xchg
xor
outsb
daa
popa
add
shrb
outsb
xor
shll
shll
jae
adc
pop
lret
mov
lret
outsb
insb
popa
jne
leave
jb
sub
push
sahf
mov
jno
xchg
and
mov
hlt
cmc
mulb
xchg
gs
imul
xchg
outsl
jb
lods
fldenv
pop
js
loop
arpl
cmp
push
or
je
xor
enter
and
out
dec
fcmovb
mov
adc
xor
dec
xor
or
fs
add
cltd
xchg
inc
push
leave
ffree
inc
inc
cmp
adc
je
ds
add
pop
cltd
cmp
cld
es
pusha
dec
mov
movsl
cld
lcall
push
inc
je
sub
inc
push
addr16
fadds
ds
shl
push
jae
cmp
jp
xchg
adcl
mov
add
push
js
icebp
jbe
add
or
sbb
cltd
pop
push
das
int
cmpsb
in
add
mov
jge
aam
add
fdivr
push
add
jnp
fstps
add
xchg
or
inc
add
hlt
test
jl
dec
inc
and
mov
push
fstpl
rcrb
sbb
fistpl
push
push
les
bound
mov
adc
mov
adc
insl
add
dec
mov
rclb
jp
stos
cmp
mov
sete
neg
test
leave
pop
mov
arpl
cmp
cmp
inc
add
jae
or
mov
js
decb
mov
add
nop
mov
pop
pop
sti
inc
call
or
or
add
adc
pop
and
das
cmp
inc
pusha
inc
inc
lcall
inc
push
leave
xor
or
repz
push
les
addb
xor
and
loope
shll
mov
xor
add
test
and
jo
and
cmp
push
jnp
add
fcoml
nop
xchg
mov
scas
xor
push
cmp
aad
mov
mov
jmp
mov
cmp
je
sbb
stos
ja
mov
mov
filds
fldt
sti
jne
inc
cmp
jne
cmp
je
mov
inc
jmp
filds
push
adc
mov
ret
in
outsl
inc
sbb
leave
inc
cmp
jl
add
mov
aad
jg
and
or
stc
mov
fucom
stc
shll
add
shll
lret
mulw
pop
mov
andb
xor
xor
mov
test
mov
add
idivl
adc
jb
sub
outsl
jg
test
pop
jae
sub
mov
or
loope
inc
push
add
int3
cmp
inc
popa
xor
inc
cmpsl
shll
test
fsubr
xchg
addr16
add
pop
sbb
add
cmpsb
imul
imul
insb
shll
mov
inc
dec
inc
lcall
and
adc
cmpsb
jmp
inc
add
dec
add
ljmp
out
ret
dec
dec
push
lds
mov
push
push
push
scas
and
je
adc
or
jl
or
test
mov
dec
popa
jns
jne
jae
lods
nop
mov
xor
mov
stos
popa
fs
sub
pop
stos
push
sub
js
jg
addr16
in
outsb
xor
or
js
dec
mov
inc
dec
dec
inc
push
sub
push
push
mov
or
inc
mov
pop
ror
das
add
dec
sub
out
int
pop
inc
nop
clc
inc
in
lcall
dec
inc
jo
and
inc
fs
ret
add
test
inc
mov
inc
add
inc
add
push
dec
adc
repz
adc
pop
xchg
outsl
movsb
test
push
fistps
add
arpl
popa
inc
xlat
and
in
sbb
add
mov
jne
and
adc
insl
or
aaa
jno
sti
sbb
imulb
jmp
outsb
outsw
es
mov
loope
or
pop
adc
and
cmp
or
sti
add
lcall
aaa
mov
push
mov
push
outsb
jb
and
andb
outsl
js
and
mov
xchg
add
xchg
cmp
adc
inc
roll
pusha
add
and
and
cltd
pop
add
andb
xor
dec
adc
inc
imul
push
cltd
insl
insl
dec
jae
stos
pop
mov
mov
ss
xchg
cmp
add
xlat
xor
add
js
ss
cltd
add
jmp
fwait
insb
or
and
sbb
push
sbb
jmp
leave
add
adc
pop
dec
shrl
stos
ss
mov
pop
shll
pop
jmp
shll
mov
pushf
mov
sti
roll
pop
or
leave
add
or
add
jecxz
lea
adc
add
jne
cmp
or
dec
clc
je
inc
rclb
xchg
rorb
adc
xchg
push
jne
add
dec
mov
inc
bt
jbe
inc
add
adc
adc
fstpt
or
push
cmpsl
fs
enter
jne
or
ret
sbb
fisubl
pusha
fadd
adcb
int3
jle
xor
jnp
imul
or
add
xorl
bound
outsl
pop
jns
loopne
ret
jp
pop
testl
cwtl
sbb
lds
lea
jnp
outsl
jecxz
in
rcr
push
dec
mov
imul
jns
scas
lret
add
mov
inc
testb
adcb
xor
inc
cmp
push
fildll
jmp
add
xor
push
add
pop
jne
outsb
xor
mov
dec
int
aas
xlat
add
add
imul
xchg
add
mov
sub
add
mov
jb
addr16
pop
pop
jb
inc
push
gs
shlb
or
fistpl
jecxz
inc
and
xor
imul
scas
jae
and
popa
jns
ret
int3
arpl
add
addr16
aaa
insl
or
jo
imul
jnp
inc
push
ja
fcmovnbe
add
adc
or
jb
cmp
fsts
xor
sbb
xchg
insb
popf
sti
bound
xchg
pop
dec
or
lds
add
jb
popf
addr16
mov
je
jmp
sub
xor
fucom
mov
sub
fldenv
or
daa
dec
dec
leave
es
or
xchg
jmp
arpl
push
daa
jbe
mov
fcomps
fs
outsl
pcmpeqw
test
dec
je
and
jne
pop
dec
xor
pop
imul
arpl
in
add
mov
mov
insb
cmpsl
xchg
out
add
aad
add
adc
pushf
lcall
xor
xor
xor
sub
xor
inc
xor
xor
xor
xor
xor
loop
incl
xor
xor
xor
xor
xor
xor
xor
xor
adc
xchg
ss
sub
aaa
mov
imul
pop
mov
adc
sbb
inc
cmp
pop
ret
test
mov
mov
lahf
imul
and
mov
loope
in
pop
mov
ds
ds
xor
aas
addr16
ja
xchg
sarl
aas
aam
clc
pop
cmp
fwait
dec
xor
push
xor
and
inc
and
jo
xor
or
or
inc
test
loopne
sti
pop
xchg
rorl
flds
push
hlt
out
push
sti
out
jl
xchg
out
popa
pop
inc
out
fsts
fwait
xchg
jns
xorb
inc
lock
divl
out
or
adc
add
adc
or
add
add
add
pusha
and
pop
push
test
pop
and
movsl
outsl
iret
push
dec
inc
push
and
and
add
loopne
repnz
adc
mov
mov
daa
adc
push
mov
test
outsb
sbb
add
movhps
imul
cmpsb
imul
imul
popf
xor
xor
pop
in
imul
nop
lcall
scas
int3
jp
pop
sbb
dec
xlat
or
add
inc
sbb
dec
or
pop
add
incl
and
ret
test
dec
lcall
out
and
fwait
outsl
lds
ss
lods
or
sbb
outsl
mov
imul
adc
inc
das
mov
xchg
adc
add
or
and
daa
and
inc
test
adc
add
in
jb
adc
push
or
jns
scas
jmp
xor
adc
sub
aad
repz
inc
add
mov
adc
and
and
mov
and
push
enter
pop
and
or
adc
or
lds
stc
push
das
call
out
sbb
fsubrs
cmp
or
push
cld
and
mov
ds
icebp
nop
call
call
add
pop
hlt
add
mov
pop
in
add
call
mov
mov
xlat
rcrb
bnd
lahf
add
jnp
jne
mov
jne
sbb
push
mov
movsb
leave
push
pop
lahf
andb
mov
push
push
outsl
sub
add
sub
inc
mov
xor
mov
push
push
xchg
mov
xorb
or
adc
push
sub
cmp
jl
rorl
aas
pop
push
sbb
mov
lahf
dec
ret
mov
push
dec
xor
push
popf
sbb
xchg
jmp
out
ds
mov
scas
or
setnp
or
ret
lea
in
outsb
cmp
movsl
in
sbb
cmp
pop
popa
jle
add
pop
clc
daa
pop
roll
negb
dec
jbe
xor
inc
cmp
in
adc
rcrl
sbb
and
jecxz
shlb
or
and
dec
out
mov
repz
call
rcrl
cli
jmp
movl
pop
cmp
and
scas
push
adc
jge
mov
sbb
enter
or
mov
incl
mov
dec
mov
jne
es
pushl
sub
mov
popf
hlt
inc
add
add
mov
imul
mov
pop
cmpsb
mov
pop
das
fcoml
mov
pop
mov
mov
and
in
pop
pop
loopne
sbb
clc
dec
call
inc
mov
jg
mov
jle
lea
jo
inc
sub
or
scas
popl
jne
mov
inc
nop
add
fnstenv
sbb
jle
mov
xor
je
inc
nop
and
sub
lcall
mov
cmpsb
movl
jmp
pop
mov
inc
and
adc
rolb
and
test
adc
pop
daa
add
add
stos
mov
xor
cld
jns
call
push
adc
daa
lds
pop
add
mov
out
mov
int
push
das
ss
sub
dec
aam
pop
out
cmp
add
add
sbb
inc
pop
fstpt
add
push
lea
int
jne
pop
mov
rep
mov
pop
ficomps
lods
jb
dec
xor
decl
mov
or
sarb
pop
jl
jmp
push
mov
imul
js
fadd
clc
push
add
out
das
mov
jbe
xor
fcomi
je
mov
je
xchg
add
and
inc
ljmp
cwtl
and
or
xchg
mov
sti
add
mov
push
lea
or
cmp
pop
mov
push
mov
push
int
fnstsw
sbb
in
push
negb
sbb
call
xchg
inc
lcall
or
add
push
or
leave
and
sub
xor
mov
int3
jo
xchg
and
jno
push
mov
push
push
call
loop
aas
add
in
fdivp
int3
stc
clc
adc
movsl
and
inc
int
fidivs
add
sbb
inc
lahf
add
addr16
mov
dec
repnz
call
push
in
fidivrs
loopne
dec
test
and
xchg
mov
add
imul
adc
jns
fistpl
sbb
sbb
fstp
fistps
sbb
sbb
loope
jecxz
sahf
or
in
aam
inc
inc
inc
inc
xlat
fcomp
inc
inc
inc
inc
fcmovu
inc
inc
inc
inc
loopne
dec
sahf
inc
inc
loop
loopne
test
idiv
decl
int3
xor
je
cltd
cmp
sbb
lret
inc
sub
inc
xchg
movsb
dec
andl
xchg
out
nop
aam
mov
sbb
rcl
and
pop
in
sub
call
adc
cmp
and
mov
imul
or
jmp
popa
in
push
cld
mov
sbb
stos
sbb
sbb
out
adcb
mov
movsb
or
mov
lea
pusha
scas
inc
mov
mov
inc
movb
mov
shlb
adc
add
push
movsb
imul
sub
movsb
imul
shlb
ror
outsb
cwtl
mov
mov
stos
aaa
or
add
cmp
adc
dec
or
clc
setg
bound
jno
pop
sub
arpl
outsb
or
notb
inc
outsb
jbe
outsl
outsb
xchg
aas
nop
pop
fnstenv
jae
jle
xor
add
addb
lret
mov
inc
andl
jg
or
inc
jo
stos
xchg
add
test
sub
mov
mov
sub
jbe
imul
add
pop
dec
outsb
das
fiaddl
sbb
out
adc
insb
jae
dec
scas
and
add
add
jle
xor
stos
add
sbb
and
xor
mov
das
pop
aaa
fmul
fdivl
add
enter
fcomps
fdivl
mov
or
out
daa
push
sbb
xor
insl
xor
push
scas
lods
pop
inc
nop
mov
xor
xor
xor
xor
xor
xor
xor
addr16
xor
xor
call
mov
ss
aaa
mov
xchg
aaa
stos
aaa
cmp
dec
jg
loop
in
cmp
mov
cmp
and
loop
cmp
add
cmp
call
cmp
cmp
cmp
aaa
inc
cld
jg
xchg
bound
dec
cmp
cwtl
test
or
ja
adc
out
xchg
addl
push
push
and
fadds
push
ja
push
jp
xchg
xchg
push
out
outsl
mov
gs
jne
arpl
in
mov
inc
sti
or
mov
mov
pushf
or
orl
jg
or
sbb
or
add
push
push
mov
xor
xchg
push
popf
rcll
add
dec
pusha
inc
add
pusha
shrl
dec
stos
pusha
sbb
sti
roll
lock
insb
dec
sub
frstor
mov
je
inc
inc
adc
in
sbb
add
int
add
into
das
push
and
arpl
mov
xchg
inc
subl
adc
rorb
jl
daa
scas
mov
push
or
or
dec
call
lret
leave
test
fs
adc
daa
dec
mov
adc
pop
inc
outsb
push
dec
add
nop
and
xchg
and
add
add
add
add
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
