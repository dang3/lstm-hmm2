mov
inc
and
and
add
in
sub
movsl
in
jle
out
incl
push
push
push
pop
xor
lea
lock
stos
stos
stos
and
stos
sti
popf
popf
int
dec
call
jmp
out
ja
jne
dec
lea
pop
hlt
pop
jg
std
out
add
xor
test
mov
jle
xor
adc
out
fildll
inc
call
lea
ss
push
ljmp
mov
push
je
mov
push
call
outsl
fmul
testb
in
loop
inc
xchg
fstl
insb
pop
xchg
push
pop
mov
jmp
add
push
inc
cmp
mov
mov
xor
ret
pop
push
or
pop
leave
ret
push
in
pop
push
push
jp
push
mov
mov
imul
cld
add
sbb
jmp
mov
ss
jo
insb
in
jne
jae
out
cs
icebp
es
mov
call
lock
rcr
je
xor
inc
push
push
xchg
mov
ds
ret
inc
push
lds
je
mov
data16
dec
enter
lret
cmpsl
insl
ss
inc
push
int
into
arpl
outsl
jbe
jmp
shlb
shll
jb
xchg
pop
cmp
pop
out
mov
mov
js
movsb
movsb
movsl
sahf
out
sahf
cmpsb
cmpsl
test
stos
stos
jns
out
lods
lods
scas
scas
mov
jns
out
mov
mov
in
shrl
mov
xchg
mov
out
mov
gs
loope
jmp
imul
push
push
cld
push
call
scas
clc
pop
add
clc
push
or
jge
sbb
cld
dec
dec
cmp
xor
and
popa
or
sbb
or
outsl
sar
in
dec
cmp
jb
jmp
mov
imul
add
xor
movsl
add
adcb
cli
inc
or
pop
pop
mov
inc
pop
pop
enter
mov
test
add
insb
push
pushf
dec
dec
push
xchg
jne
jae
data16
out
gs
jb
xor
xor
insb
iret
repz
hlt
cmc
testb
shl
loop
jecxz
push
in
in
int
out
out
call
pxor
ja
je
lea
fdivs
lahf
fcomps
sbb
ret
mov
in
mov
inc
push
push
push
mov
shlb
sahf
mov
mov
roll
cs
pop
ret
sbb
fstpt
mov
push
mov
mov
in
adcl
xchg
inc
adc
sti
fbld
mov
sub
sub
cmp
jb
in
out
mov
adc
mov
push
push
adc
clc
aaa
enter
or
rcrb
dec
je
mov
jns
ds
das
mov
shr
pop
push
and
jp
pop
fcmovne
and
add
add
push
iret
repz
data16
xlat
fcomp
cmp
repz
fcmovnu
fstp
push
sub
repnz
test
rcrl
adc
or
lcall
sub
jns
cmpsl
jns
jbe
ja
repz
lcall
inc
sarb
jge
insl
jle
int
aaa
jg
adc
inc
xorl
subl
test
dec
imul
mov
inc
mov
push
xchg
stos
add
mov
jns
cs
cld
mov
mov
adc
popa
xchg
jbe
gs
xchg
negl
cwtl
cltd
mov
jge
fwait
inc
outsb
pushf
popf
insb
into
sahf
gs
dec
push
fstps
test
les
mov
leavew
jne
lret
lahf
imulb
int3
je
int
jb
iret
testb
jo
shrb
sahf
iret
repz
lcall
jns
sahf
scas
inc
pushf
imul
in
scas
mov
pop
mov
in
xor
arpl
mov
push
inc
push
ss
sbb
fcompl
or
add
jns
dec
push
data16
or
and
repnz
pop
popa
pop
lret
xchg
addr16
gs
inc
das
movsb
repnz
sahf
pusha
push
jo
cmp
imul
jb
ds
jne
push
lea
mov
push
xor
inc
pop
mov
daa
sub
loopne
test
jp
orl
mov
and
inc
dec
mov
hlt
add
in
or
imul
sub
cmc
ljmp
sahf
fistps
sbb
dec
ror
cmp
or
mov
pop
je
dec
push
mov
mov
push
rclb
cmp
jg
or
mov
pop
fldcw
jl
add
mov
cwtl
push
lcall
cwtl
jo
pushl
lret
pop
adc
push
mov
daa
pop
lcall
movsb
push
mov
xor
mov
in
adc
popa
cmpb
adc
xor
test
sti
popa
inc
xchg
in
cmp
dec
mov
or
sbb
mov
dec
lock
or
and
stc
and
lea
cmpl
sti
jmp
jne
cmpl
jne
adc
je
imul
stc
jae
clc
addr16
or
jge
add
and
aas
jmp
addr16
sbb
popa
outsb
jne
movl
pop
cs
xor
cmp
cmpsb
push
test
cmp
je
ret
inc
mov
jge
les
push
add
add
or
call
cmp
loope
add
daa
sbb
into
dec
cmp
lret
fdivr
or
adc
adc
clc
jle
inc
push
push
in
in
movzwl
cmpsb
xchg
mov
mov
add
xchg
mov
add
add
mov
fsubs
add
jo
loop
mov
push
sti
fisubs
popf
inc
push
push
sub
out
loopne
ds
in
dec
test
je
push
sbb
push
jmp
ds
fsubr
dec
and
pop
mov
sbbb
mov
pop
mov
mov
sahf
cmp
cld
aad
and
push
xchg
push
popa
pusha
or
and
decb
and
cld
jae
subl
xor
cmp
dec
cmp
out
inc
cmp
addr16
lahf
out
aas
cmp
mov
inc
mov
inc
adc
or
testb
jbe
jmp
and
push
dec
outsb
dec
shll
cld
mov
gs
shll
gs
dec
shll
gs
xor
ror
dec
push
push
popa
imul
xchg
shlb
aam
imul
lcall
je
mov
mov
cmp
movsb
xor
xor
out
cmpsb
cmpsl
test
stos
sarb
lods
cmp
push
and
adc
and
cwtl
mull
daa
xor
xor
sub
leave
sub
btsl
adc
das
xor
xor
xor
xor
mov
movsl
xor
xor
fldcw
inc
out
inc
out
push
lock
xor
sahf
icebp
repnz
add
es
testl
sub
or
or
int
lcall
push
adc
adc
adc
fwait
popa
movsb
jns
adc
movlhps
lea
ss
push
sbb
cmpsl
cmp
sbb
cmpsb
cltd
movsb
es
arpl
jae
or
mov
jb
fcmovb
mov
lds
push
mov
repz
nop
xchg
xchg
xchg
xchg
xchg
mov
repz
xchg
cwtl
cltd
dec
cs
insb
pushf
popf
call
xor
je
sub
inc
inc
scas
sub
nop
call
call
bound
xchg
shll
inc
out
pop
fs
gs
lcallw
imul
movsb
jns
push
imul
xchg
push
bound
push
scas
fnstenv
out
xor
fstp
xchg
int
fs
loope
loop
addl
inc
hlt
push
push
rorb
imul
push
shll
arpl
into
enter
lret
fucom
jo
cltd
adc
mov
jae
jb
xchg
lret
in
jne
insb
push
xchg
lret
sbbb
inc
inc
scas
popf
das
js
popf
push
dec
mov
dec
rsqrtps
inc
rorb
sarb
push
push
int
lcall
pop
aaa
pop
sbb
push
addr16
outsl
pop
mov
and
adc
pop
lock
je
mov
xor
xor
jo
inc
sub
add
test
sarb
lods
lods
lea
push
adc
mov
or
mov
lea
dec
sub
mov
mov
clc
notb
push
hlt
and
push
add
insl
clc
jne
jle
dec
jae
int3
mov
mov
xchg
jmp
lcall
movsb
and
ret
mov
push
sbb
cmp
lock
lret
ljmp
aam
pop
lea
cld
adc
sar
push
add
gs
inc
fcoms
adc
or
sub
lcall
mov
push
push
xchg
xor
fs
jne
cmpsb
arpl
xchg
adc
sti
clc
mov
sbb
push
call
mov
pusha
cmp
repz
cli
inc
mov
ret
mov
loop
lcall
xor
repnz
push
sti
xor
shr
and
jbe
stc
jmp
inc
mov
mov
sti
fmull
pop
add
pop
mov
pushf
in
icebp
test
fimull
push
sbb
pop
js
enter
add
push
ss
js
hlt
test
add
push
cmpsl
ja
cmpl
sub
stos
pop
add
inc
faddl
push
movsb
jmp
mov
inc
mov
cmpsl
loop
ret
loopne
loopne
mov
out
mov
sti
inc
or
out
out
pushl
je
cmp
jb
dec
dec
cmpw
jne
push
es
mov
jg
pop
jne
dec
inc
xorb
sahf
hlt
xchg
xchg
or
movsb
sbb
mov
dec
dec
inc
loop
mov
jb
rolb
mov
pop
popa
inc
mov
in
jae
cmpsb
loop
push
call
jne
and
add
jecxz
ljmp
add
sbb
decl
xor
pop
sar
mov
pushf
or
push
xorl
imul
div
roll
cli
add
xchg
inc
xor
shrb
imul
push
loopne
jmp
in
fiadds
jne
rclb
inc
cmp
add
sarb
rcrl
or
cmp
push
jl
adcb
and
xchg
cmp
fldcw
sub
pop
lea
fwait
sbb
rorl
cmpsl
ljmp
divb
loope
test
push
sub
sbb
into
cmc
std
hlt
or
sbb
push
fcomp
enter
in
aad
scas
xor
pop
fsubrl
sbb
add
test
scas
enter
push
push
mov
in
stc
in
stc
aas
mov
popf
loopne
data16
sub
or
add
jmp
in
popf
dec
stc
clc
gs
cld
movsb
orl
lock
in
adc
inc
pop
fsubrl
xor
je
inc
je
push
pop
cmpsb
popw
or
adc
clc
test
je
fiadds
sbb
dec
mov
or
out
mov
sub
xor
pop
jne
clc
and
ret
js
jnp
test
inc
das
je
mov
loopne
pop
sub
add
clc
or
sbbb
and
iret
jae
push
xor
je
jo
cmp
repz
outsb
shrb
imul
xor
ds
fs
js
mov
sbb
loopne
jne
arpl
mov
idiv
push
push
into
je
pop
lock
push
pop
fldl
popa
xor
pushf
xchg
push
stc
dec
cli
sti
push
mov
xor
inc
clc
xor
add
fildll
push
jp
push
adc
mov
jle
pop
ja
nop
loopne
loopne
sbb
je
push
mov
std
or
xchg
pop
adc
jae
ds
cmp
mov
je
mov
fldcw
xor
add
adc
subl
pop
mov
push
xor
push
and
dec
jmp
iret
rorl
inc
push
es
shll
std
ljmp
sub
push
outsb
gs
lods
xor
jnp
jb
scas
push
scas
es
mov
fwait
dec
sti
mov
push
mov
gs
mov
inc
int
mov
mov
sub
lcall
dec
push
mov
gs
sahf
add
repz
roll
dec
sti
cmp
cwtl
push
jl
lcall
iret
repz
lahf
mov
data16
mov
movsl
cmpsb
sbb
mov
push
fs
add
hlt
mov
dec
shll
inc
lcall
je
xor
dec
xor
outsb
je
imul
outsb
arpl
lret
int3
addr16
sbb
lcall
je
dec
mov
sbb
lds
adc
jo
inc
shll
push
push
add
shll
fsub
rol
dec
push
call
mov
jno
insb
mov
orl
in
pop
push
push
in
movsb
daa
sbb
sub
out
mov
jg
cmp
add
lea
jg
inc
mov
insl
mov
sub
push
nop
mov
pop
push
sbb
ds
mov
adc
sub
add
int
call
adc
lret
mov
outsb
mov
pop
push
and
arpl
into
or
sti
scas
lock
mov
idiv
xchg
testl
xchg
push
sahf
fbstp
add
pop
inc
cmp
jl
push
and
or
je
gs
inc
lea
das
je
stos
push
bound
adc
daa
jo
add
lods
push
or
xchg
outsl
or
push
je
cmc
mov
inc
push
xchg
mov
enter
dec
lea
mov
movb
mov
adcl
sbb
push
inc
and
xchg
add
ljmp
bound
incb
stos
jl
sbb
or
mov
sbb
push
test
xchg
mov
pushl
push
adc
mov
adc
xor
xchg
sbb
inc
push
xor
adcb
sub
dec
or
cmp
mov
dec
ret
push
mov
or
push
pushf
jns
mov
push
push
jo
in
outsb
dec
inc
xor
xor
popa
insl
gs
outsl
jp
imul
imul
imul
mov
xor
lcall
jb
push
lcall
and
divl
in
sarb
shll
aad
ficompl
xor
fcmovu
fsub
cmp
xor
lea
mov
pop
inc
pop
push
push
inc
shll
insl
gs
shll
pop
xor
shll
xor
movsl
xor
mov
insl
mov
pop
movsb
imul
inc
lcall
imul
lcall
xor
sub
fists
mov
addb
imul
nop
xchg
bound
adc
adc
jnp
sub
sub
jns
sub
dec
xor
mov
push
rorb
push
push
push
fdivr
cmp
dec
scas
pop
mov
jmp
xor
mov
xor
push
push
mov
rclb
ret
outsb
push
bnd
jge
or
pop
sahf
push
test
jne
add
mov
mov
aas
iret
sti
cld
std
call
or
cmp
js
cmpsl
push
cmp
cli
sbb
pop
adc
add
push
loope
in
ror
dec
mov
or
sbb
aas
daa
insl
cs
or
jb
int3
mov
mov
mov
enter
adcb
cld
mov
pusha
mov
mov
fidivrs
insl
cmp
push
mov
xor
pop
je
cmp
je
inc
shr
jne
add
subl
std
movb
loope
scas
les
or
push
adc
jg
lret
and
xor
mov
mov
mov
divb
or
nop
adc
fdivs
mov
nop
pop
mov
mov
cmp
scas
rolb
or
cli
jne
push
jmp
hlt
in
jo
arpl
and
inc
and
dec
shrl
gs
jb
jne
mov
or
mov
jb
and
outsb
jmp
sbb
xor
mov
or
sbb
into
cmp
sub
pusha
and
sub
sahf
jl
addl
or
adc
pop
cltd
mov
aam
nop
push
jne
xchg
push
pop
outsb
mov
jle
push
mov
fiaddl
jno
inc
cmp
push
lcall
jnp
dec
pop
adc
sub
lret
dec
inc
dec
cmp
pop
inc
inc
das
jbe
loopne
push
inc
mov
add
inc
add
push
push
std
pop
sub
jmp
insl
pushf
pop
mov
mov
jge
ss
or
sub
mov
or
pop
inc
xor
push
cmp
or
dec
xor
ss
or
jns
cmp
sbb
dec
mov
mov
mov
fdiv
sbb
inc
jg
fmull
aam
sub
adc
add
popf
xor
xchg
pop
dec
shr
outsl
and
sub
pop
cmpsb
cltd
fs
pop
clc
xor
inc
mov
leave
stc
mov
enter
add
imul
pop
pop
adc
int3
push
dec
in
and
cld
and
mov
cld
jl
and
dec
cs
call
lods
pusha
xor
pop
add
pop
jmp
int3
add
and
pop
pop
data16
in
je
sbb
rcrl
xor
mov
icebp
and
sbb
push
mov
mov
loopne
fildl
add
mov
inc
jbe
pusha
dec
xchg
rcll
in
es
sbb
shll
cmp
xor
es
mov
ret
mov
xor
popf
pop
bound
pop
aad
cmp
and
rolb
cmpsb
sbb
mov
fs
xor
push
es
shll
jae
shll
cmp
xor
xor
loope
loop
iret
repz
in
out
jl
cmpsl
stc
call
in
cmpsb
imul
inc
lcall
imul
imul
cmpsb
out
or
add
dec
mov
and
das
inc
sub
mov
stc
addl
mov
js
push
sub
xor
jo
jo
daa
sbb
push
test
mov
or
dec
ds
shll
imul
outsb
cmp
lcall
adc
cmp
xchg
sbb
scas
cmc
sub
or
jno
pop
call
cmp
push
cmp
outsb
lea
sbb
or
xchg
into
scas
jne
push
xchg
insb
pop
testl
xor
cmpsl
f2xm1
icebp
repnz
or
add
push
inc
cmp
push
iret
call
popf
jbe
dec
push
push
test
dec
movsb
cmp
testb
lcall
jb
cmpsl
lea
outsb
lods
scas
push
scas
sarl
int
es
ss
mov
jae
mov
inc
mov
mov
and
fs
mov
call
xchg
xor
jo
pop
jo
push
shll
gs
imul
gs
lea
jb
popa
xor
sahf
out
test
xlat
fcomp
fimull
pushf
loopne
fcmovnu
pop
inc
adc
fsubr
push
sbb
pop
pop
xor
jl
jne
mov
shrb
inc
ret
repz
ret
enter
cmp
xchg
adc
sbb
push
cmp
adc
xlat
scas
push
add
push
cld
jbe
mov
shrb
and
pop
into
les
or
shrb
jp
adc
andb
mov
xor
arpl
xor
xor
cs
scas
sqrtps
or
pushf
clc
pop
shr
jmp
sub
or
rol
cmp
pop
add
jmp
sbb
xor
es
insl
neg
sbb
inc
pop
shll
cmpsb
pop
movl
push
push
outsb
lahf
xchg
cs
inc
and
add
adc
pusha
idivl
shrb
rorl
scas
rcrl
add
lret
push
lret
inc
sbb
push
ja
add
xor
imul
jno
push
repz
inc
and
fbld
inc
inc
cmp
pusha
mov
into
call
pop
je
lea
repz
xchg
lahf
or
cld
hlt
adc
hlt
push
dec
sti
cmp
stos
push
idiv
cmp
shld
roll
jmp
je
push
fwait
movsb
sub
mov
repz
jl
or
and
mov
xchg
imul
push
mov
inc
idiv
lea
incl
int3
in
push
jp
repz
mov
lods
loopne
mov
icebp
out
popa
xchg
lret
or
rcll
dec
or
negb
push
fsts
sahf
fisubl
push
or
iret
xlat
nop
lods
jp
push
and
ds
jnp
jl
push
sub
add
shll
sarb
and
cmp
in
lea
in
inc
out
adc
mov
push
cmp
enter
or
out
stos
push
push
xchg
les
cmpsl
cmp
sub
lret
lret
adc
dec
jno
or
pop
cmpsl
pop
push
insb
ss
imul
pop
test
iret
add
rorb
sbb
add
mov
dec
rolb
movsl
push
addr16
sahf
fs
fs
dec
mov
mov
mov
pop
ja
outsl
repnz
call
stos
xchg
inc
pop
ljmp
ja
push
push
xor
lret
cmp
aas
push
sarb
mov
pop
push
mov
push
in
cld
pusha
add
movsb
je
enter
movsb
cld
jmp
cmp
std
sbb
xorb
xchg
enter
fadd
inc
xlat
jnp
mov
sbb
jl
and
jb
enter
add
enter
cwtl
pop
jnp
pop
stc
and
xorb
push
cmp
jnp
mov
xchg
cmp
fcom
inc
mov
nop
fsubr
std
lock
xchg
mov
sub
out
ret
pusha
mov
mov
mov
pop
xor
mov
ja
cmp
jne
xor
mov
cmp
jne
push
inc
adc
shr
mov
icebp
divb
leave
cmpb
adc
rorb
popf
cmp
xchg
cld
xor
cmp
or
sbb
into
jb
push
jg
jb
dec
popa
jmp
fistl
sub
test
sbb
mov
test
pop
out
in
icebp
jg
clc
push
pop
ja
jb
popa
orl
or
fsubs
jge
fstp
pop
mov
imulb
jbe
ja
dec
clc
movsbl
cltd
test
fwait
dec
cli
movsb
pushl
pop
jb
lea
push
fimull
xlat
jge
dec
divl
adc
mov
sbb
and
fucomip
adc
push
outsb
dec
ret
inc
push
lds
aam
add
aas
loopne
cmp
mov
js
movsl
mov
push
and
push
jmp
jo
lods
andl
insb
xchg
stc
icebp
scas
movsb
cs
pop
or
dec
repz
xor
test
and
aas
arpl
je
outsl
outsb
cmp
je
insb
outsl
lcall
jne
and
jae
sbb
in
cwtl
test
pushl
dec
mov
dec
xchg
cwtl
inc
inc
mov
mov
dec
cmp
inc
data16
or
icebp
sub
and
cmpsb
dec
shll
sarl
clc
mov
call
dec
jo
outsb
push
jb
mov
xor
gs
imul
movsb
imul
out
jmp
in
out
out
jbe
adc
lock
call
gs
xchg
cmpsb
imul
push
loopne
ss
mov
fsubrs
and
mov
adc
rclb
scas
xlat
test
leave
arpl
nop
pushf
mov
or
dec
xchg
push
outsb
fwait
lock
push
jge
fisttpll
or
sub
sbbb
int
in
popa
jl
or
or
jl
cmp
lret
cmp
enter
stos
push
fbstp
dec
and
stc
lahf
mov
adc
lea
pop
sub
imul
lods
cmp
or
sub
jne
popf
push
cld
mov
ja
rorl
in
add
cmp
xor
cmp
add
icebp
loopne
aas
inc
pop
push
mov
and
xchg
call
mov
inc
mov
lea
mov
pop
pop
aaa
test
add
pop
rclb
inc
cmp
addl
ret
add
lods
push
testb
mov
jns
out
adc
ret
xchg
pusha
stc
rolb
je
push
sub
mov
and
loopne
pop
push
das
and
mov
cli
xchg
jo
icebp
lret
push
push
push
enter
xor
andb
add
aad
pop
and
loope
inc
xor
sbb
mov
add
or
ds
test
pop
jbe
cmp
int3
ja
lea
cmp
insl
mov
addl
or
mov
in
push
push
inc
lock
xchg
es
lcall
jb
mov
jnp
andnps
sbb
jo
andb
sub
enter
jbe
or
sub
mov
inc
je
jbe
adc
or
push
pop
inc
mov
adc
push
jbe
mov
xor
loope
mov
dec
call
outsb
mov
add
insl
add
jae
sub
add
sbb
jbe
sub
add
push
xchg
cmp
lods
sbb
lods
fnstcw
addb
pop
les
add
or
in
incl
add
dec
lock
pop
in
inc
shll
in
in
stc
mov
jnp
sub
add
mov
sbb
mov
dec
mov
dec
je
add
cwtl
mov
sub
mov
add
dec
cltd
aad
or
daa
dec
mov
pop
jmp
adc
pop
imul
push
into
or
mov
cmp
andb
loope
jmp
adc
sub
add
xor
add
dec
dec
pusha
mov
or
divb
in
jb
adc
imul
xlat
adc
addl
jno
sbb
push
addr16
and
mov
mov
mov
jge
je
inc
pop
or
cld
outsb
push
subl
push
push
push
add
mov
cmp
out
sbb
mov
inc
cld
xchg
xlat
fucomp
fistpl
cld
cmp
ja
pop
neg
push
sub
mov
lahf
sbb
mov
sbb
daa
notl
arpl
movsb
push
jp
sar
test
jo
or
cmp
inc
xorb
loope,pn
div
xor
cwtl
sub
xor
fdiv
xor
mov
mov
pop
inc
hlt
inc
pop
inc
cmp
jl
fldcw
fisttpll
loopne
stos
jl
cmp
sbb
test
pusha
push
push
adc
pop
cmp
outsb
fmul
inc
loopne
enter
loopne
outsb
imul
je
mov
hlt
div
ss
clc
or
loop
inc
test
dec
ret
mov
mov
bound
mov
jmp
adc
int
scas
push
repz
popf
pop
incl
add
cmp
cs
mov
pop
mov
or
sbbb
cmpl
push
mov
daa
loopne
and
fcompl
push
imul
insb
push
jb
je
lret
gs
fidivrl
push
test
push
cmp
adc
adc
adc
loope
push
push
pusha
out
pop
mov
push
fcomip
or
pushf
pop
movb
sub
xorl
mov
movb
mov
add
push
push
nop
dec
inc
add
fildl
cmp
cmp
in
mov
lods
or
pop
test
mov
xor
ret
sbb
icebp
dec
sets
daa
cmp
sub
add
push
sub
adc
leave
ret
clc
cld
push
add
push
shll
in
adc
xchg
and
push
shll
push
add
mov
test
outsl
jge
add
xchg
in
dec
stos
test
xchg
cmp
jge
xor
hlt
inc
hlt
sbb
sbb
fnstcw
ret
repnz
xor
dec
push
jns
pop
into
add
pop
pop
cmpsl
sbb
push
dec
mov
es
sbb
push
push
mov
mov
rclb
add
in
dec
mov
xor
cmpsb
imul
cmpsb
imul
imul
pop
mov
mov
add
and
lcall
xor
xor
cmpsb
imul
out
icebp
bnd
xor
sti
xlat
lea
push
movsb
pop
jmp
sbb
or
and
mov
imul
push
insb
jne
loop
push
add
addb
fs
add
add
imul
mov
cmp
in
mov
test
mov
push
or
enter
mov
xlat
enter
mov
js
aas
adc
mov
mov
test
add
pushf
dec
and
pop
dec
aas
add
movsb
dec
xor
fistps
xchg
mov
scas
les
notl
mov
adc
js
gs
jecxz
mov
xchg
shll
jp
xchg
dec
arpl
pop
dec
xchg
lods
and
push
push
outsb
push
and
mov
jne
adc
fidivs
test
ficompl
dec
or
push
clc
mov
js
xchg
push
insb
add
imul
outsb
inc
shll
movsb
jb
int3
je
lcall
outsl
insb
push
gs
jo
xor
push
test
jae
xor
push
inc
outsl
je
dec
xor
sub
arpl
mov
inc
dec
cmp
repz
cs
outsb
lock
repnz
repz
cmc
div
clc
mov
dec
loope
dec
mov
xor
xor
push
push
dec
and
dec
add
mov
sub
fildl
or
mov
xor
dec
cmp
or
mov
jp
fstl
orl
mov
jecxz
fildl
mov
xor
and
je
inc
inc
fs
xor
shll
imul
or
sub
sbb
jo
movb
jmp
push
outsl
or
mov
shll
outsl
imul
and
push
imul
xor
mov
mov
push
shlb
outsb
ret
lods
les
dec
xor
fs
xor
shll
je
outsl
mov
outsb
push
lcall
jbe
mov
addr16
mov
push
mov
add
adc
int3
test
cmpsl
arpl
nop
enter
iret
repz
je
jne
jb
int3
dec
pushf
outsb
fstl
dec
xchg
and
arpl
fcomp
imul
sahf
or
into
rolb
imul
mov
mov
xchg
nop
jne
loopne
mov
sub
je
mov
push
and
push
gs
and
dec
xchg
push
push
sbb
jne
sub
mov
mov
add
push
sbb
or
push
ret
clc
cli
ljmp
inc
test
jne
ret
cmpw
jne
mov
add
cmpl
mov
mov
inc
stos
pushf
add
enter
cmp
pop
lea
outsb
movsb
cmp
je
and
cmp
je
and
je
cmp
ja
push
fbld
jge
adc
jae
fcompl
mov
mov
outsl
push
adc
adc
movb
cmp
jb
pop
sbb
or
je
filds
loop
sbb
lock
int
or
sub
cmp
enter
adc
enter
bsr
adc
daa
pop
enter
adc
mov
add
lret
add
stc
xchg
jo
sub
cmp
jae
mov
dec
and
mov
cmp
push
add
cmp
lcall
pusha
rorb
mov
rcll
movsb
push
mov
push
test
gs
mov
dec
jo,pn
cmp
rcl
lock
icebp
ret
je
xchg
or
xchg
out
sahf
dec
jo
outsb
push
mov
subl
sbb
jo
push
lcall
dec
outsb
cmp
loop
dec
data16
imul
inc
lcall
ret
scas
pop
cli
mov
iret
repz
and
je
jb
iret
repz
gs
insb
xor
rep
jae
gs
and
dec
shll
fs
jecxz
call
imul
imul
and
fs
adc
rol
sbb
mov
enter
rol
arpl
imul
test
cmp
push
xchg
adc
aaa
and
movl
mov
call
and
insb
fcmovnb
adc
arpl
sub
in
scas
imul
xor
jb
cmp
or
dec
and
je
dec
jmp
and
or
jg
sub
pop
shlb
ret
test
je
mov
inc
inc
nop
xor
jmp
andb
mov
test
or
test
je
movb
inc
mov
adc
mov
jp
cmp
jo
inc
sub
jo
int
xor
shr
pop
adc
jbe
pop
mov
dec
push
insb
in
add
lret
inc
push
cmp
jge
clc
lcall
gs
fnstenv
fucomp
pop
sti
sub
mov
cmp
xor
cmp
mov
jb
xor
push
add
leave
mov
je
das
clc
sbbb
add
clc
push
mov
mov
inc
inc
test
ds
lock
pop
mov
rorb
push
cmp
jge
push
clc
xorb
aaa
dec
cld
andb
inc
inc
aaa
inc
push
cmp
inc
push
out
imul
xor
imul
add
dec
shll
insb
sbb
or
jmp
fmuls
pop
or
bound
sbb
add
pop
mov
pop
scas
idiv
add
xchg
add
jecxz
jns,pt
lcall
imul
outsl
jb
add
repz
jno
rcll
jno
movsb
cld
dec
cmp
or
arpl
cli
jnp
mov
js
jle
xor
cmp
mov
inc
cmp
mov
mov
pop
or
idiv
int
mov
dec
push
adc
sarl
ret
mov
add
sbbb
stos
and
jbe
mov
sbb
xchg
pop
lret
or
xor
pop
addl
sbb
lods
std
inc
add
movzwl
mov
orl
push
add
cmp
jae
cmp
jb
push
mov
fwait
scas
xor
cmp
push
mov
repnz
iret
cmc
adc
iret
push
sbb
xor
push
push
jbe
push
jmp
sub
imul
jecxz
inc
push
jmp
ret
dec
mov
cmpsl
dec
scas
fcmovnb
inc
mov
mov
adc
or
push
ror
mov
and
jmp
hlt
adc
adc
mov
sub
insb
lcall
repnz
iret
xchg
imul
sub
adc
testl
pop
xor
xchg
dec
aaa
sbb
mov
mov
or
les
push
lods
cwtl
jp
adc
xchg
cmp
lret
mov
lahf
in
repnz
xchg
push
jl
fsubl
xor
fwait
ret
inc
mov
jmp
sub
xchg
call
pop
push
adcl
sbbl
cli
in
inc
decl
jne
cmp
lret
inc
jmp
add
imul
and
xor
cmp
dec
cmpsb
lock
or
inc
jge
scas
and
mov
jbe
pop
adc
add
sub
jno
adcl
movb
adc
je
mov
dec
inc
ds
imul
ljmp
inc
mov
cld
jo
idivb
imul
push
add
sbb
push
test
inc
sub
adc
jmp
notb
inc
jo
jbe
adc
jle
sbb
inc
and
imul
enter
mov
mov
inc
in
enter
push
mov
sbb
sub
mov
pusha
mov
pop
lock
pop
fildll
and
inc
fnstsw
andb
addb
lcall
outsl
cs
jo
in
movb
cwtl
pop
cmc
or
xor
clc
adc
clc
clc
add
xor
mov
stos
jecxz
pop
mov
cld
inc
adc
sub
xchg
and
rcrb
push
inc
xor
shll
shlb
imul
inc
aam
or
push
in
mov
inc
data16
loop
pop
jae
das
loop
push
xor
je
hlt
nop
xor
jno
outsl
push
xchg
add
inc
sub
ret
or
xchg
or
rcrb
jmp
push
sbb
shlb
lahf
jl
mov
rorl
gs
dec
shll
imul
shll
inc
imul
jb
je
sbb
push
or
push
jl
pop
movb
or
test
cltd
fistpl
subl
cli
mov
xchg
jae
jmp
inc
lcall
bound
push
sub
imul
je
mov
test
lea
xchg
sub
nop
pop
mov
ljmp
popf
stos
stos
sub
add
xchg
outsl
fisubrl
out
xchg
sbb
ret
cmp
ds
cmp
jl
popf
pop
cwtl
add
add
pop
test
dec
and
push
fadd
sbb
nop
xchg
fstp
pushf
pop
inc
test
xchg
std
xchg
pop
mov
xchg
in
mov
inc
sub
lcall
jo
loopne
cmpsb
fstpl
pop
ss
shrb
int
cmpsb
sub
inc
call
rolb
imul
mov
movb
rcll
imul
roll
lods
or
movsb
inc
aam
xlat
or
mov
inc
cs
ljmp
mov
clc
inc
jbe
gs
movsb
imul
dec
pop
lock
popf
dec
jnp
data16
scas
pop
out
push
mov
mov
je
aaa
call
lds
popf
or
mov
cmp
mov
adc
push
sub
push
lods
out
xor
mov
pop
or
or
inc
rol
call
mov
jnp
inc
outsb
in
test
test
add
inc
or
mov
fcmovne
mov
jns
push
add
aaa
push
mov
mov
xor
push
mov
dec
push
sub
dec
xchg
mov
mov
add
pop
push
pop
push
push
add
push
cmp
push
pushf
xor
add
mov
bound
call
lods
std
sbb
add
pop
or
lret
popa
jmp
or
ljmp
add
pop
or
testb
cmc
sub
mov
hlt
push
or
push
or
dec
push
js
cld
cmp
mov
mov
into
in
or
inc
jae
sti
sub
je
cmp
loope
mov
aad
rolb
and
mov
imul
lahf
pop
and
daa
add
push
mov
and
lock
mov
inc
popf
cmp
mov
lock
clc
dec
jl
adc
andb
inc
push
loopne,pn
xlat
js
xlat
jmp
cmp
and
neg
cmpb
sarb
add
fs
mov
add
push
rorb
adc
data16
add
jbe
andb
loopne
lcall
add
cltd
imul
sti
ret
or
adc
scas
les
movsb
dec
and
add
add
ret
xchg
in
rclb
hlt
xchg
rorb
lods
hlt
hlt
push
clc
icebp
arpl
icebp
mov
mov
xor
mov
push
test
and
sbb
out
aad
mov
add
push
xor
call
sbb
cli
std
pop
ficoml
inc
rolb
fs
stos
fadd
sarl
les
adc
push
push
sub
or
mov
ret
xor
jne
push
pop
sbb
or
add
lods
ret
cmp
jp
or
mov
data16
mov
popf
jno
xchg
jno
cmp
mov
pop
jle
clc
pop
cmpl
push
sbb
mov
mov
inc
adc
je
mov
movsb
or
nop
cmp
mov
arpl
mov
shl
in
pop
enter
call
bound
mov
pop
roll
aam
push
jne
imulb
rcll
and
push
test
lock
add
add
imul
dec
sub
sub
cwtl
std
addb
gs
popa
sub
cmpsb
rcrl
push
jge
or
xor
je
adc
jmp
xor
out
popa
inc
pushl
data16
je
movsl
mov
and
fcomps
cmpsl
aam
adc
jecxz
arpl
push
mov
ja
jl
andb
dec
mov
adc
jg
xchg
loopne
fsubl
or
loopne
push
repz
xor
push
add
enter
dec
and
mov
push
jae
xor
test
xor
mov
dec
insb
outsl
gs
jae
cmpsl
imul
aaa
mov
adc
test
sub
pop
xchg
andb
dec
mov
in
add
hlt
je
mov
cmp
add
add
cmc
adc
xor
leave
mov
mov
add
mov
push
test
pop
mov
test
hlt
xor
divl
cmp
imul
mov
imul
iret
jne
cmpsb
hlt
sbb
inc
or
sub
xchg
int3
lret
in
jnp
pusha
mov
popa
and
adc
idivl
add
or
lods
mov
lahf
pop
mov
arpl
fistps
push
push
ret
jns
popa
jo
insb
je
jb
pop
pop
pusha
fs
xchg
call
pop
push
daa
sub
add
jnp
sarb
decl
popf
testb
push
nopl
push
insl
pop
mov
fidivrl
inc
jmp
out
pop
inc
je
js
fstps
dec
loop
lds
das
pop
and
adc
rcrl
xlat
dec
cmp
inc
inc
add
in
add
ljmp
pop
out
out
out
fcmovnu
mov
out
jns
sub
addl
jle
mov
iret
imul
adc
dec
push
fwait
les
xchg
xlat
add
bound
mov
add
insl
pusha
lret
leave
decl
mov
mov
mov
pop
jbe
fldl
daa
arpl
repnz
mov
insl
sub
shrb
mov
loope
daa
sbb
popf
and
jg
daa
outsb
pop
cmpl
jae
daa
lahf
mov
daa
jo
mov
jns
daa
jne
std
loope
mov
mov
mov
and
out
out
idivl
repnz
jo
cmpsl
scas
es
push
out
in
xor
push
fmull
or
out
lahf
addr16
fcomip
loopne
testb
adc
jb
fnstcw
std
add
in
mov
out
fistl
in
sbb
lcall
push
pop
cwtl
das
out
add
add
jnp
sarl
sub
daa
pop
fnstsw
scas
add
inc
push
mov
xchg
dec
add
push
mov
jnp
pop
es
add
mov
ja
emms
testl
jns
pop
stc
mov
dec
jge
mov
in
mov
mov
inc
scas
cwtl
pop
sbb
add
push
call
sub
in
out
push
pop
cmpl
sbb
mov
lods
popf
popf
cmp
lret
in
mov
add
enter
dec
mov
xor
jg
out
inc
out
cmp
popa
hlt
scas
hlt
mov
lock
pop
aas
mov
ret
out
inc
pop
outsb
js
scas
filds
sub
dec
daa
dec
cmp
out
mov
inc
fcomi
lds
mov
xchg
insb
xor
std
pop
fimuls
xor
out
dec
xor
or
in
ja
out
mov
je
xor
imul
xchg
fninit
lret
lods
fwait
jl
ss
jb
xorl
ds
movsl
sti
dec
mov
or
scas
push
pop
sub
fcmovnu
inc
mov
and
add
stos
push
pop
mov
lret
and
lret
and
inc
pop
xor
sub
es
or
inc
call
scas
or
push
and
pop
fiadds
push
add
cltd
sbb
push
fadds
push
loopne
push
fdivrp
push
pop
jbe
imul
int3
iret
dec
es
sti
or
sti
std
ljmp
es
fistps
and
lea
sub
and
testl
add
in
sbb
lock
sahf
cmp
cmc
or
orb
decl
jno
lret
shll
mov
push
das
out
lahf
iret
jmp
add
out
add
adc
sti
loope
pop
ja
cs
cltd
gs
hlt
sti
xor
fsubl
pop
dec
inc
fcomps
or
jnp
sarl
bound
mov
aas
lahf
leave
or
int3
lea
ja
adc
xchg
iret
lahf
sbb
mov
mov
leave
in
jmp
sub
test
in
xchg
loope
outsb
mov
fdivr
addb
loop
jmp
adc
and
push
imul
add
pop
xor
jae
and
scas
sti
add
push
addr16
pop
push
and
or
imul
fmull
inc
inc
add
dec
pusha
push
in
jmp
mov
je
outsb
fs
jne
je
gs
add
std
mov
dec
das
js
xor
xor
aas
popa
arpl
outsb
cmp
out
jo
data16
ja
rol
iret
mov
mov
into
icebp
cmp
pop
ja
enter
aaa
daa
push
push
dec
cmp
clc
lret
das
out
or
mov
js
out
inc
fmuls
push
push
dec
outsl
addr16
fistps
inc
pshufw
jae
jne
fs
push
test
cmp
insb
xor
sbb
fcoml
inc
dec
outsl
fs
inc
imul
sbb
incl
enter
popa
je
push
push
or
inc
cmp
outsl
dec
popa
pushf
sbb
rcr
add
dec
cwtl
je
mov
mov
push
push
push
push
or
bound
ljmp
je
in
jle
cmp
add
sub
in
mov
mov
popa
das
xor
xor
inc
arpl
jo
inc
jo
pop
shrl
mov
addr16
and
dec
cwtl
inc
inc
lods
popa
mov
popa
mov
sub
imul
das
and
adc
imul
cltd
pop
jo
loope
sub
imul
insl
jae
mov
les
sub
jb
pop
add
ja
or
sbbl
sub
xor
xor
push
dec
push
push
mov
inc
or
xorl
ja
sub
mov
ficompl
gs
adc
shlb
adc
and
mov
sub
and
test
pop
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
and
and
pushl
lahf
or
gs
outsl
fs
gs
fucomi
mov
insb
gs
push
jb
jbe
je
or
imul
sti
iret
aas
bnd
outsb
addr16
jne
jb
outsb
je
gs
dec
fs
out
in
out
inc
dec
imul
sbb
push
or
arpl
or
insb
outsl
jae
push
inc
je
bound
imul
mov
gs
jo
fsubrl
inc
gs
into
outsb
iret
cs
sbb
inc
lcall
outsl
insl
dec
outsl
adc
popa
jb
ss
jb
sbb
dec
jo
scas
push
outsl
dec
js
dec
data16
js
jo
insb
repnz
lods
loopne
xor
stc
outsl
mov
fnstsw
popa
insl
jmp
imul
dec
xor
jns
data16
sub
jae
cmp
outsb
inc
adc
jns
mov
fsubrs
dec
mov
inc
push
std
dec
bound
arpl
push
arpl
or
outsl
decb
xor
fcmovnb
mov
inc
push
xchg
jbe
mov
sub
jae
xor
add
jns
clc
movl
jbe
xor
mov
je
rcr
and
jne
xchg
xchg
insl
repz
pop
pop
jbe
outsb
jo
je
je
and
loop
clc
push
popf
pop
pop
inc
js
loopne
jnp
pusha
xchg
xchg
and
movsl
push
adc
or
xor
mov
popa
pop
fmul
mov
sub
mov
into
pusha
gs
inc
pop
outsb
dec
ja
jae
fidivs
outsb
lea
xor
fld
and
xor
sub
push
fstps
or
pop
test
jo
pop
push
inc
xor
bound
ljmp
cmpsb
clc
jae
or
gs
insb
arpl
outsl
nop
std
decl
pop
inc
push
inc
pop
dec
inc
pop
cmc
nop
sub
jnp
fdivrl
ud0
mov
aas
lahf
mov
sub
push
outsb
push
outsl
outsl
imul
hlt
or
inc
js
and
inc
inc
xchg
inc
inc
int3
push
fs
sub
jg
ja
add
xchg
dec
push
insb
popa
sahf
test
push
xor
jge
sub
pop
incl
or
mov
adc
xor
xchg
push
incl
adc
push
pop
or
and
sub
or
push
sbb
mov
lcall
movups
dec
push
or
push
or
adc
or
pop
or
and
or
inc
add
lock
pop
or
lock
add
pop
push
add
std
jmp
pop
and
sbb
or
pop
sbb
cmp
movsb
push
pop
adc
mov
add
movlps
add
adc
xor
adc
sbb
and
fdivrs
fildl
push
or
pop
or
pop
or
pop
adc
push
or
lock
scas
je
movsb
push
or
or
aaa
add
or
push
push
xor
adc
push
jbe
das
clc
sub
or
adc
push
or
fsubrl
outsl
pop
cld
divb
sub
or
jmp
jae
cs
cmp
in
push
lock
and
cmp
adc
sbb
or
push
mov
mov
xor
adc
push
adc
sub
xor
push
cvttps2pi
loopne
mov
or
or
adc
or
shrl
or
in
sbb
adc
xor
adc
push
or
ss
jno
sbb
add
js
or
pop
lock
pop
adc
das
daa
or
es
sbb
inc
adc
sbb
das
clc
mov
pop
sbb
sbb
data16
call
insl
jge
cmp
add
addl
pop
shlb
add
sub
mov
adc
adc
jg
outsl
sbb
and
inc
adc
inc
test
pop
add
in
mov
loop
cs
pop
or
add
jle
push
rcll
notb
jno
mov
xor
sbb
or
dec
adc
lods
sub
or
inc
fidivrs
add
stc
add
cs
mov
mov
fmuls
sbb
push
adc
inc
pop
jl
pop
inc
sbb
add
lock
add
or
cs
ja
mov
jmp
add
adc
or
lock
cs
fs
push
inc
sub
add
or
add
scas
sbb
out
rcrl
pusha
push
or
sub
pop
add
pminub
dec
ficomps
cmp
psrlw
loopne
push
pop
inc
jb
test
adc
add
jo
jl
je,pn
fiadds
pop
and
add
mov
adc
popa
idivb
mull
in
or
inc
add
dec
leave
repz
dec
dec
xor
orb
jge
pop
shrb
insl
popa
outsl
push
aad
push
add
sti
add
add
xchg
cmp
shlb
jl
es
fnstenv
ss
inc
sub
mov
and
xchg
incl
add
add
jne
pusha
mov
lea
push
or
jmp
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
popa
xor
ret
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
