out
call
in
sub
andb
push
push
push
push
xor
pop
lea
fcomi
stos
push
ljmp
pop
xor
jmp
mov
pop
ja
test
add
loop
mov
dec
gs
in
in
dec
mov
xor
cs
jbe
dec
mov
insb
jmp
mov
push
call
pop
mov
jg
mov
push
push
push
push
push
mov
push
push
call
mov
and
adc
clc
lea
push
add
in
and
call
jbe
adc
adc
pop
sbb
outsl
fisttps
pop
pop
pop
leave
ret
add
add
mov
mov
push
push
xchg
sub
and
data16
jbe
pop
popf
fadd
add
in
mov
je
mov
lcall
push
or
mov
ror
jge
sti
daa
pop
inc
pop
inc
aaa
and
mov
mov
jle
sub
lea
push
push
push
sbb
pop
dec
mov
or
xchg
daa
xor
clc
add
in
push
fists
push
rol
or
fxch
lock
add
push
pop
sbb
or
adc
movsb
mov
fdivr
cmp
lock
cmp
je
push
adc
clc
sbb
pop
or
inc
clc
cmp
or
push
lret
insl
or
push
xorb
je
lea
or
scas
dec
mov
pop
je
jbe
pop
out
cmp
pop
xor
or
shrb
adc
dec
mov
lods
lea
jo
push
push
scas
fildl
or
pop
or
mov
fstps
or
pop
test
cmp
adcl
add
adc
push
sub
mov
sbb
or
jno
sti
sti
int3
dec
inc
cmp
outsl
insl
out
pop
dec
mov
and
jbe
fldcw
push
mulb
divb
or
enter
cltd
add
add
fnstcw
cld
push
adc
leave
fadds
fucom
rol
inc
testb
movsb
adc
out
in
rclb
lock
mov
test
mov
or
out
in
mov
pusha
push
mov
mov
dec
or
decl
je
mov
mov
ror
mov
inc
inc
dec
dec
test
jne
push
pop
and
fldenv
in
xor
mov
pop
mov
add
mov
movl
pop
pop
mov
or
fwait
xchg
add
lret
jnp
add
cld
cltd
dec
clc
pushl
sbb
jecxz
cmp
jge
sub
cmp
adc
and
fs
leave
std
std
push
and
xlat
mov
sbb
cmp
adc
add
adc
aaa
dec
scas
mov
and
cmp
jb
out
ds
pop
push
mov
mov
cwtl
imul
lea
or
nop
in
in
mov
jae
testl
testl
sub
mov
cli
adc
dec
sub
por
xchg
lods
inc
or
mov
fistpl
mov
cmpb
inc
add
adc
cwtl
stc
sub
ss
inc
push
adc
mov
mov
xor
mov
test
je
enter
push
push
add
pop
int3
icebp
outsl
sub
andb
xor
cmp
mov
push
inc
push
jne
mov
mov
mov
inc
inc
test
jne
push
lods
out
pop
sub
push
mov
xor
inc
mov
pop
xchg
cmp
cld
push
push
std
dec
mov
dec
imul
lcall
popa
add
pop
lcall
add
sub
popw
or
cld
fstps
inc
or
xchg
dec
test
inc
add
stos
mov
mov
imul
xor
add
push
cmp
in
jmp
sbb
push
push
and
in
je
push
pusha
adc
lahf
push
push
pop
testl
lret
mov
sti
leave
std
mov
jl
mov
xor
jo
mov
std
lret
insl
mov
mov
jnp
mov
push
mov
sbb
add
push
pop
sar
pop
int3
jae
inc
in
inc
xchg
rcll
xchg
xchg
sbb
cmp
dec
loop
into
pop
iret
imul
in
and
push
rclb
dec
loop
mov
out
cmpl
mov
adc
add
idivl
mov
nop
push
insl
xor
push
int
jnp
push
lcall
ud2
mov
mov
and
push
push
out
mov
or
push
mov
ret
fistpl
push
cmp
outsl
imull
add
lret
in
je
jae
pop
sti
sbb
xor
pop
sarb
enter
pop
daa
pop
add
hlt
xlat
cmpsb
mov
jo
subl
bound
pop
xlat
lcall
fcomp
xchg
or
lock
nop
ljmp
and
push
or
cmpl
insl
ret
dec
push
push
xor
mov
push
jl
sti
or
cmpsl
addr16
jl
or
or
cmp
push
jp
xchg
xor
pusha
push
adc
push
daa
inc
jl
mov
gs
in
in
jb
fsubrl
out
pop
out
call
insb
fwait
in
gs
cs
out
and
jle
inc
out
pop
pop
lock
xor
cmc
pop
test
or
mov
add
lods
xchg
or
or
sub
inc
lcall
mov
dec
xchg
je
enter
adc
add
mov
dec
jo
adc
xor
sub
add
push
sbb
adc
adc
stos
test
inc
inc
inc
push
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
addl
in
jmp
add
xor
adc
sub
imul
imul
mov
divb
inc
push
xor
dec
shll
nop
sahf
cmpsb
imul
cmpsb
imul
xchg
inc
mov
add
xor
cld
sti
nop
add
outsl
arpl
je,pn
insw
addr16
ss
jmp
xor
xor
inc
bound
push
jb
jbe
insb
gs
jae
mov
je
insl
xor
pop
add
inc
push
dec
dec
and
pushw
gs
add
fdivr
outsl
imul
fs
adc
adc
punpckhbw
data16
in
sarl
imul
insl
fs
fisubl
aaa
xchg
cmp
aaa
stos
lcall
mov
add
xchg
adc
inc
adc
scas
add
add
inc
dec
xor
xor
fs
insb
inc
push
push
dec
inc
dec
mov
add
push
xchg
loop
inc
sub
add
leave
mov
repz
add
add
dec
pop
nop
inc
add
or
insb
mov
or
mov
int
mov
imul
jb
addr16
insl
and
outsb
outsb
outsl
je
bound
jb
outsb
psadbw
imul
insl
outsl
fs
push
sbb
stc
out
psubq
jnp
add
add
testb
push
lcall
test
sbb
add
stc
fs
add
repz
xchg
add
arpl
push
inc
outsl
xchg
add
nop
mov
dec
loopne
and
add
in
mov
or
add
add
dec
clc
fiadds
pop
fisubrs
or
and
sub
jbe
popa
lret
pop
inc
push
daa
dec
pop
dec
add
aas
dec
pop
mov
nop
and
test
nop
scas
rolb
push
bound
cmpl
mov
jnp
shrb
popa
je
jle
adc
dec
ret
sbb
cs
push
push
pop
adc
ss
into
cld
test
shrb
jae
xor
imul
imul
add
nop
dec
push
call
inc
pop
pop
ss
xor
and
adc
or
pop
imul
pop
daa
cmpsb
imul
lcall
lcall
enter
or
xor
shrl
cmp
jb
out
dec
adcb
add
xchg
dec
shll
ljmp
cmpsb
imul
cmpsb
imul
imul
add
xor
mov
ds
shll
pop
outsb
shll
cli
push
outsb
add
je
test
or
jne
cmp
dec
push
pop
cmpsb
jae
shrl
lahf
add
xchg
sahf
test
mov
imul
popf
in
mov
adc
and
dec
xlat
mov
dec
call
xor
add
jg
dec
outsb
je
jb
gs
popa
mov
mov
dec
xchg
sbb
push
gs
fs
enter
sub
dec
jo
outsb
push
jb
inc
adc
cld
xchg
inc
inc
dec
dec
dec
dec
inc
push
and
jl
and
push
data16
fildl
mov
inc
push
push
inc
push
inc
pop
dec
mov
outsl
jmp
je
push
imul
pop
inc
jne
repz
outsl
pop
pop
push
pop
jae
outsl
outsb
sbb
cmp
insb
xor
inc
add
fstps
or
add
add
xchg
add
aaa
sbb
pusha
add
add
add
mov
pop
add
adc
adc
fs
add
and
fbld
insb
add
inc
popa
mov
add
xor
adc
add
insb
fldcw
add
and
xchg
pop
leave
or
add
pop
or
ljmp
insb
testb
in
adc
dec
sbb
inc
test
mov
sbb
xchg
pop
lret
push
fstps
fistl
ret
xor
ret
dec
bound
xor
stos
jg
or
add
das
jae
and
imull
push
outsl
je
pusha
popl
mov
movb
mov
in
ljmp
fs
jmp
add
or
inc
outsl
or
inc
xchg
arpl
push
add
pop
je
jo
and
je
add
arpl
sub
addl
xor
sub
lods
and
inc
add
fdiv
insl
and
push
push
dec
dec
jp
inc
test
dec
mov
in
notl
jge
dec
sub
je
ja
jns
sbb
inc
shll
and
mov
add
imul
add
in
fistpll
or
aas
mov
mov
jae
jae
and
push
xchg
and
add
pop
rcrl
mov
add
mov
popa
insl
add
aaa
push
jg
outsl
jb
inc
popa
jb
pop
arpl
imul
fidivl
gs
fnstsw
outsl
mov
jne
sub
xchg
xorb
fisttps
int
or
mov
push
test
sahf
aaa
pushf
lock
adc
insb
jnp
cmp
arpl
int
mov
in
cld
faddp
clc
pop
or
mov
enter
xchg
mov
mov
stos
mov
and
or
dec
xor
negl
add
xor
test
cmc
popa
or
sbb
inc
outsl
jne
enter
sub
sub
insl
lods
repnz
jne
xor
inc
mov
cmp
add
fwait
ljmp
dec
cs
out
mov
add
push
adc
mov
mov
jne
mov
push
xor
mov
out
decl
or
roll
stc
pop
adc
cli
add
jae
fdivrp
fucomip
mov
or
jmp
xor
ret
and
and
subb
or
bound
pop
add
les
or
call
out
mov
adc
or
mov
loopne
movb
cld
push
and
xchg
fdivr
jg
clc
lcall
add
shr
mov
push
shl
push
push
mov
xchg
mov
in
mov
mov
push
mov
call
push
call
clc
push
outsl
std
add
sbbl
out
add
mov
call
out
outsl
movsl
and
ret
add
and
xor
mov
pop
leave
ret
push
or
call
int
lahf
stos
sub
push
call
pop
bound
mov
push
push
movl
loope
fistpl
dec
or
inc
in
jne
mov
xor
add
add
or
lea
push
cmp
test
adc
xor
mov
lahf
adc
cmp
jns
addr16
sbb
and
addr16
and
and
fstpt
add
orl
push
jmp
pushf
cld
sub
adc
and
jmp
add
cmp
pop
jmp
adc
mov
dec
xlat
mov
adc
mov
ret
cmc
adc
fdivl
call
pop
test
or
mov
fcoml
push
cmp
or
inc
cmp
adc
xchg
push
xor
dec
js
mov
xchg
push
push
xor
push
js
je
pop
sub
adc
movsl
aas
fxch
sahf
insb
decb
jmp
adc
push
sahf
in
fstl
and
decl
lcall
jnp
fmuls
and
add
out
iret
or
push
repnz
bound
dec
repz
mov
cmp
in
ljmp
push
add
fs
decb
and
mov
icebp
sti
call
push
push
xor
mov
cld
nop
pusha
rorl
clc
or
push
push
hlt
sub
icebp
decl
xchg
in
add
movb
mov
sub
sub
or
push
jmp
or
in
mov
nop
push
inc
inc
call
fcomp
lods
popf
mov
dec
out
in
into
mov
ret
mov
fistl
mov
movzwl
test
cwtl
out
inc
in
or
jo
decl
and
or
xchg
adc
and
pop
jle
xor
sbb
push
movzbl
adc
inc
call
cs
pop
outsl
sti
outsl
mov
push
mov
andb
mov
or
push
mov
fsubrl
inc
pop
sbb
jl
push
aaa
push
inc
add
outsb
pop
mov
nop
mov
push
push
jle
pusha
add
xchg
inc
repnz
pusha
add
jo
and
pop
add
or
aaa
jmp
repnz
xor
clc
add
pop
call
mov
or
adc
lods
adc
aaa
mov
cs
or
pushf
test
jne
addw
idivb
dec
pop
jne
dec
cmp
lret
inc
adc
jl
add
stc
xchg
fcoms
and
rorb
mov
or
cmpsl
rcr
nop
and
enter
aaa
mov
push
xor
or
xor
push
push
add
pop
jecxz
mov
push
adcl
idiv
add
add
jge
push
push
push
sbb
pop
mov
xor
adc
push
push
and
xchg
sbb
pop
mov
cmp
in
jnp
or
mov
sbb
call
push
or
mov
adc
and
decl
or
lea
out
or
movsw
mov
movsb
mov
xchg
out
clc
xchg
enter
mov
in
mov
sti
rep
jb
xor
fistpl
xchg
dec
dec
mov
or
pusha
and
sbb
std
pop
dec
pop
mov
dec
and
in
xchg
pop
add
cmp
sarl
push
mov
add
shr
push
shll
sbb
flds
pop
or
sbb
cmp
pop
mov
mov
ja
sub
xchg
jno
xchg
in
or
mov
jbe
mov
or
push
xchg
push
mov
push
sub
divl
pop
pop
pop
shrb
call
adc
add
dec
pop
and
in
and
dec
nop
and
lahf
adc
dec
leave
pop
nop
add
and
pop
nop
and
loopne
nop
adc
push
pop
nop
and
push
and
push
nop
and
sbb
cld
inc
fs
and
push
fisubrl
add
push
jae
dec
mulb
call
sub
add
data16
or
js
das
fs
dec
sbb
adc
fildll
add
mov
and
mov
sub
dec
aaa
fistpl
adc
add
adc
movsl
mov
push
jo
clc
rcl
or
scas
or
js
and
sub
pop
add
or
add
xor
cmp
shlb
adc
inc
add
add
in
add
adc
cmp
std
lock
adc
lock
or
insl
xor
mov
jl
ljmp
packuswb
pop
sbb
add
jle
mov
add
add
push
mov
clc
popf
loopne
in
jo
add
shrd
sahf
pop
mov
jns
hlt
imul
imul
and
imul
cld
jae
jbe
insb
std
lret
enter
or
stos
xor
mov
push
aad
shl
cli
lods
pop
mov
jb
push
mov
xchg
mov
jl
test
sub
cmp
dec
mov
push
cmp
jle
mov
dec
sbb
cld
hlt
cmp
ja
lods
call
cmp
je
test
pop
fiaddl
sarl
decb
jg
inc
hlt
mov
push
in
jne
cmpl
daa
inc
insl
imul
cld
bound
sbb
push
add
clc
xor
cmpsl
cs
ljmp
hlt
pushl
cmp
outsb
fbld
sahf
inc
cmp
mov
xchg
or
negb
ret
or
cmp
mov
sub
jge
fildl
ja
jne
cmpw
lods
ja
or
or
testb
add
sub
or
inc
xchg
mov
ljmp
inc
mov
or
cmp
rcrb
mov
cmp
sar
inc
push
xor
mov
or
inc
cmp
jne
or
mov
add
sub
psrad
dec
leave
out
add
mov
shr
fistpl
lock
decl
lds
leave
jne
or
test
je
mov
shr
xor
test
lods
subl
ret
je
pop
loop
fsubrs
mov
adc
ljmp
sub
add
inc
shl
or
mov
and
xchg
adc
adc
test
jp
loope
sbb
cmp
je
cmp
repz
add
outsl
mov
fistl
or
or
jmp
loopne
mov
sbb
bound
mov
sti
jbe
jg
imul
dec
or
lods
jge
or
mov
cmpsl
cltd
test
pusha
lahf
and
add
je
add
add
rorl
pop
add
mov
and
out
rolb
inc
jne
or
push
pop
pop
pop
ret
jmp
loopne
rcrb
rol
mov
jno
mov
cmp
dec
shlb
aaa
ret
add
push
fidivs
hlt
rcll
dec
push
je
dec
dec
out
pop
and
mov
lods
je
push
jmp
adc
movb
jmp
add
sbb
call
cs
or
jmp
pop
loopne
out
pop
dec
sub
pop
inc
idiv
adc
jg
sarl
inc
jmp
andb
test
push
mov
push
mov
push
cmp
adc
adc
stos
mov
nop
and
ja
nop
pop
rclb
adc
push
stos
and
jo
mov
in
mov
test
orl
imul
pop
arpl
adc
aaa
jbe
cmpb
xor
inc
cmp
jb
mov
or
cmpl
pusha
add
insb
or
inc
sub
in
dec
mov
and
or
imul
adc
and
lods
mov
dec
adc
inc
cli
in
mov
adc
in
push
add
cmp
mov
aas
cmp
jae
incl
lret
jbe
add
lock
jo
imul
mov
hlt
inc
sub
outsl
pop
cmp
inc
mov
mov
jne
rorl
sbb
jge
mov
in
jo
mov
add
loop
rcll
cli
or
test
dec
jne
cmp
cmpsl
push
jle
ljmp
mov
fldt
mov
xchg
pop
jbe
or
cmp
pop
sti
pop
testl
and
or
add
mov
or
mov
js
xlat
sbb
ljmp
out
mov
add
repnz
not
divb
mov
add
lea
insl
outsl
out
test
or
js
add
push
aam
cs
in
test
inc
fisubs
fimull
add
lea
mov
out
xadd
adc
pop
inc
sub
mov
and
in
not
cmp
add
repz
sub
rorl
push
shr
or
add
dec
ljmp
mov
fildll
sub
xchg
sbb
fstpt
mov
push
lods
loop
mov
push
or
lahf
jle
not
and
sarb
or
adc
movb
mov
fidivl
add
loopne
mov
sbbb
or
mov
pop
adc
sbb
inc
xor
out
mov
or
or
sbbl
int3
xor
add
sub
xor
out
or
and
cli
sbb
les
repz
xlat
rolb
fcomp
cwtl
subb
addl
repz
not
fisubrs
jbe
popa
jnp
adc
pop
scas
testl
sti
mov
pop
les
and
sbb
idiv
loop
mov
repnz
sub
fdivs
add
frstor
mov
pop
mov
inc
pop
xor
les
adc
sbb
or
xor
ja
sub
or
or
xchg
jno
std
stos
fdivrs
xchg
and
outsb
pop
push
fidivrs
pop
aaa
fmull
out
das
push
mov
cmpsb
pop
mov
xor
add
sub
xchg
cmp
ret
popa
adc
cs
jecxz
and
mov
jo
loopne
ljmp
pop
add
and
aad
aam
mov
out
mov
bound
sbb
movl
loopne
lret
repz
inc
mov
rclb
push
fadds
inc
imul
hlt
push
and
clc
jb
xchg
out
fstp
repz
pop
pop
es
adc
repnz
shll
and
xchg
out
call
lock
imull
mov
mov
hlt
pop
adc
call
pusha
mov
lods
xlat
lods
mov
in
cld
mov
adc
inc
add
jo
and
in
pop
test
out
fcoms
push
clc
cmp
into
pushf
jecxz
mov
fnstcw
shll
out
adc
scas
add
mov
mov
mov
out
loope
cld
xchg
xor
loopne
ret
inc
enter
mov
ret
mov
push
mov
popl
mov
int
cld
cwtd
xlat
sbb
push
and
insl
cmp
gs
jnp
jns
call
inc
loop
shr
or
mov
fdivs
test
imul
in
mov
mov
mov
push
and
sub
mov
sbb
add
adc
movl
xchg
dec
fisttps
fidivrs
mov
adc
or
jge
test
pusha
sbb
mov
sub
test
xor
mov
leave
test
xchg
mov
cs
js
lds
popa
popf
insl
outsb
aaa
mov
adc
inc
sti
xor
mov
repnz
and
or
in
mov
outsb
fcomip
xor
mov
fs
push
sbb
xchg
mov
movsl
imulb
cltd
jb
repz
jb
lret
sub
int3
pop
pusha
dec
mov
out
jno
cli
xor
ds
mov
jae
lock
out
or
mov
jle
sub
jae
mov
add
out
mov
lock
out
das
pop
dec
mov
mov
fidivl
cmc
mov
test
out
aam
xchg
jae
adc
mov
xor
mov
add
or
mov
jbe
push
aas
sbb
cmp
rcl
mov
out
jbe
les
in
jle
ja
idivl
outsl
call
in
clc
jl
pop
je
sub
pushl
or
jge
clc
cmp
lods
les
xor
mov
mov
insb
sbb
stos
mov
stos
rcrb
sbb
mov
repnz
sbb
jns
loope
jl
inc
int3
or
inc
push
or
movsb
mov
jns
and
repz
jb
hlt
cmp
sub
cltd
or
les
aas
cmp
pop
pop
or
stc
push
sbb
rcrl
fisubrs
xchg
int3
or
push
or
ja
jno
dec
insl
data16
jge,pt
out
call
unpckhps
mov
adc
rcrl
test
sub
jmp
dec
xor
in
out
loopne
scas
dec
jle
outsl
jecxz
jp
addb
xor
outsb
repz
fistpl
loopne
sub
jecxz
jp
sti
ffree
cmp
mov
add
add
ja
mov
div
out
cmpb
lds
jp
in
dec
arpl
sbb
repnz
imul
loopne
mov
fwait
in
xor
aam
rcl
sub
getsec
pop
mov
repnz
repz
rclb
shl
jmp
xor
mov
pop
jge
pop
cli
lret
out
xlat
pop
add
pop
movsb
mov
lods
fstl
inc
or
or
pop
sarb
xor
roll
cmp
dec
mov
mov
decl
sarl
sub
push
push
push
je
adc
jmp
jmp
xor
or
xlat
sub
mov
jle
cmp
mov
lahf
inc
pop
inc
addr16
iret
out
pop
loope
jb
adc
or
stc
mov
push
add
sbb
cmp
jne
xor
dec
mov
cmpsl
push
jge
fcmovnbe
cmp
mov
jmp
cmp
je
idivb
mov
cmp
je
movsbl
add
sub
jne
inc
cmp
jne
cmp
push
add
inc
sub
mov
sbb
fisubrl
push
das
inc
adc
mov
ljmp
add
jg
mov
or
stc
stc
shll
add
mull
insl
je
rcrl
mov
andb
addb
imul
in
dec
adc
lea
inc
js
mov
jno
mov
jmp
data16
jmp
and
rep
loopne
mov
or
sti
outsb
pop
push
dec
sub
jne
push
lea
adc
add
test
pop
movsl
js
pop
lea
mov
push
add
cs
sarl
jo
or
fisubs
mov
daa
mov
lods
fidivl
stos
mov
mov
xchg
test
pop
je
or
orb
out
shr
insl
jmp
push
shrb
sub
lock
and
rclb
push
sbb
inc
mov
push
outsb
fs
adc
sbb
sarl
dec
mov
jmp
add
lds
cmpsl
xor
enter
or
or
sub
rclb
fwait
aam
icebp
sbb
cltd
push
fcoms
add
mov
mov
xlat
and
popa
mov
lods
xchg
jp
add
bound
sbb
push
push
mov
adc
sbb
jb
xchg
sbbb
push
cmp
fstpt
int3
jae
push
insl
clc
std
or
adc
jmp
cmp
mov
mov
adc
sbb
xor
push
inc
stos
les
xchg
ret
pop
cmc
sub
push
push
jl
sbb
mov
sub
popf
js
mov
movb
add
and
mov
adc
mov
xchg
dec
shll
mov
mov
pop
mov
mov
adc
fldt
mov
enter
xor
lret
fs
int
das
into
lcall
rcl
shr
lcall
pop
xlat
aaa
fdivs
fcmovu
ja
imul
ficomps
fnstsw
jae
loop
mov
lcall
out
mov
ljmp
insb
fwait
cmpsb
jmp
icebp
push
pop
xlat
repz
sbb
divb
jo
in
clc
inc
add
inc
cli
cmp
dec
mov
scas
jg
xchg
mov
mov
test
sbb
and
xchg
adc
cld
jae
lods
rolb
inc
mov
mov
sbb
mov
adc
pop
mov
push
adc
aaa
ljmp
sbb
sbb
push
mov
push
shrb
push
add
mov
cld
pop
call
fmull
lea
cmp
mov
push
jbe
jmp
loop
loop
pushf
test
add
fiadds
jmp
mov
push
push
push
xor
cmpsl
sarb
mov
mov
jle
dec
or
add
jo
pushf
pop
xor
xchg
insb
insb
aaa
call
jne
nop
push
mov
fadds
jge
and
inc
mov
jmp
jmp
call
rolb
sbb
add
in
dec
loope
dec
cld
call
and
inc
pop
fisttpll
push
pop
mov
ds
data16
pop
add
mov
fsubrs
stc
lret
daa
cld
movsl
test
mov
add
enter
inc
call
dec
call
flds
jb
scas
aas
repz
les
scas
lea
into
and
and
fdivs
mov
or
and
mov
pop
mov
call
orb
jmp
fidivl
bswap
mov
push
push
dec
pop
cmp
test
push
icebp
bound
pop
aas
sbb
cmp
dec
fs
out
push
jo
call
pop
pop
jne
repnz
cmp
andb
jmp
mull
aam
push
cli
out
cmp
jp
ret
data16
stc
not
mov
push
sbb
lret
enter
xchg
rcll
notb
jle
loopne
inc
jmp
fsubr
fidivl
sbb
sti
mov
mov
cmpsl
pushf
add
fwait
cmp
mov
add
or
dec
xchg
outsl
inc
add
xchg
fbld
jg
cmp
mov
cmc
pusha
xor
cmp
xchg
decl
mov
mov
cmp
mov
lret
mov
jge
sub
push
inc
jne
sub
imul
std
mov
dec
push
ret
push
cmpl
sbb
mov
imul
fadd
sti
mov
inc
jmp
imull
push
sbb
iret
adcb
or
lds
ror
jl
add
xchg
mov
inc
insl
xlat
mov
fstpl
mov
and
xor
pop
clc
adc
call
out
testl
add
jmp
stc
and
or
std
mov
jns
fnstsw
mov
fdivrl
xchg
sbb
test
roll
sbb
in
xchg
adc
adc
call
shr
sbbl
mov
or
lods
test
das
imul
pop
pop
pusha
xor
and
icebp
lcall
call
sbb
cli
mov
cmp
movsb
sbb
fwait
scas
int
push
sub
push
xchg
mov
jae
ret
mov
mov
jne
inc
test
lock
or
push
xor
outsb
adc
iret
inc
lds
std
mov
cmc
cli
adc
lahf
and
cmp
test
jb
sbb
lods
and
ret
mov
adc
or
ja
jmp
inc
pop
int
sub
test
hlt
cli
sub
fbstp
mov
mov
adc
inc
stc
pop
pxor
xchg
int3
and
inc
sbb
inc
stc
std
or
fs
std
cmc
sti
sub
sti
jnp
addl
call
fisubs
pop
xchg
push
push
cmc
pusha
outsb
jnp
cmpsb
adc
psubsb
call
xchg
inc
push
cmc
pusha
sub
push
enter
adc
push
rolb
nop
cmp
jl
fisttps
add
xchg
sbb
jg
call
icebp
fcompl
clc
inc
sti
add
mov
push
f2xm1
adc
ret
jmp
adc
jo
sbb
add
es
lcall
inc
loope
pop
inc
jg
call
lds
adc
adc
sub
out
fnstcw
sti
cmp
sarb
ja
in
data16
fistpll
ret
enter
fadds
jle
adc
push
adcb
sub
sub
pop
push
mov
cmp
or
inc
cmc
pop
mov
inc
aad
call
push
push
cmp
mov
jne
adc
jnp
cmpl
sbb
cli
aas
aas
sahf
mov
push
jmp
iret
add
xchg
mov
cwtl
mov
push
mov
fcmovnu
xor
lock
xor
adc
stos
sbb
les
add
mov
enter
dec
hlt
into
cmpl
inc
jle
push
sbb
loope
leave
inc
pop
dec
inc
dec
add
inc
pop
add
or
cld
ds
push
mov
push
sbb
ljmp
or
mov
cwtl
adc
cmp
dec
call
pop
xor
aaa
add
repz
adc
jmp
rorl
cmp
bound
fcomps
and
movsb
mov
andb
inc
test
std
loop
je
mov
push
and
fcoml
jg
and
add
xor
in
sti
call
push
jmp
add
lea
arpl
loopne
pop
or
movsl
xor
sub
dec
negb
fs
lcall
icebp
pop
xor
idivb
mov
mov
iret
leave
and
loopne
scas
and
pop
add
popf
xor
mov
and
push
daa
xor
mov
fcom
cmp
jo
inc
jge
stos
pop
inc
pop
add
ljmp
mov
testb
inc
fwait
pop
insl
adc
mov
sbb
fwait
sti
imul
push
pop
out
and
cmpl
inc
add
mov
idivb
sbb
arpl
cmp
sti
add
movl
sti
sbb
pushf
xor
sub
jle
daa
push
xlat
fisubrs
int
sbb
ds
xlat
fdiv
cmpsb
or
xor
test
add
hlt
lret
in
clc
pop
stc
data16
outsl
sti
fisubrl
pop
push
or
and
adc
leave
mov
lods
hlt
cwtl
out
adc
push
xchg
xchg
nop
out
mov
sahf
pop
mov
push
sbb
jne
adc
ret
testb
inc
mov
cli
mov
loopne
cmp
cmpsl
cmp
enter
outsl
outsb
repz
xor
jb
xor
int
jl
xor
or
pop
out
sub
js
pushl
int3
push
pop
xchg
lcall
fst
test
insb
jle
mov
fs
mov
leave
mov
jns
jns
jmp
je
add
je
insb
xchg
add
jmp
push
xor
cmp
mov
mov
dec
rsm
pop
pop
ret
addl
orb
repnz
fdivr
ljmp
nop
and
repnz
repnz
adc
xchg
and
insl
pusha
adcb
push
andb
mov
or
adc
mov
stc
scas
or
cmpsl
sub
push
pop
filds
loope
mov
and
ljmp
je
pop
xlat
push
push
xor
pop
hlt
xchg
insl
pop
sbb
inc
xchg
call
fdivrs
es
fidivs
dec
push
arpl
cmp
sahf
sbbb
and
and
xor
into
les
xchg
or
fsts
loopne
dec
push
or
je
data16
and
in
mov
add
aaa
cmp
mov
xchg
push
mov
adc
adcb
or
test
jno
cmp
cs
pop
pop
cs
jg
sar
movl
enter
sub
int3
rcl
fcomp
in
mov
das
call
pop
add
or
sub
lret
lret
faddl
mov
add
jo
stc
lea
std
inc
mov
push
adc
rol
push
pop
and
aaa
sarb
push
pop
adc
sbb
mov
enter
nopl
dec
les
push
mov
adc
aas
inc
xchg
mov
pop
les
inc
lock
pushf
cmp
inc
call
jnp
mov
mov
mul
xchg
push
loop
das
adc
cmp
nop
xor
mov
mov
inc
dec
xlat
dec
hlt
insl
fmuls
and
xor
add
dec
lock
fnsave
or
negl
push
ret
insb
scas
xchg
repz
mov
mov
in
arpl
es
cmp
mov
outsl
or
fistl
push
dec
dec
shll
inc
push
aaa
shll
adc
addr16
fldt
ljmp
dec
shrl
jne
out
jae
lock
repnz
repz
movsl
pop
pushf
in
imul
int
jmp
mov
movsb
push
movsl
cmpsb
int
fnstenv
cmpsl
push
gs
lea
push
lods
lods
mov
je
xchg
gs
je
dec
jo
gs
xchg
outsb
push
gs
fnstenvs
gs
roll
aam
int
imul
fs
xlat
xor
xchg
gs
shll
popa
pushf
js
xchg
xchg
xchg
mov
ss
xchg
xchg
xchg
inc
push
cwtl
js
leave
mov
inc
lcall
mov
loopne
loope
mov
jecxz
in
ds
cmpsb
imul
mov
jb
pop
xlat
insb
lgs
inc
das
mov
lcall
inc
mov
int
mov
mov
mov
or
mov
mov
mov
test
loopne
cmc
clc
jne
lret
xor
js
clc
adc
add
lcall
aam
cmpsl
adc
and
mov
scas
xchg
pop
imul
push
mov
cs
rep
shrd
dec
or
aam
push
mov
fwait
shrb
xbegin
je
push
adc
adc
sti
mov
gs
dec
icebp
addb
leave
fwait
dec
sub
movsb
or
cmpsb
and
xor
push
adc
xorl
ja
push
mov
bound
jne
xchg
shlb
popa
or
bound
mov
add
leave
inc
orl
call
enter
mov
sbb
dec
push
sbb
fs
leave
jle
xor
add
call
subl
call
push
rolb
daa
in
test
add
sbb
jp
cld
jne
call
sbb
push
mov
jp
or
ret
mov
jnp
test
xchg
jno
data16
cmp
mov
lahf
jnp
mov
sbb
mov
push
adc
jecxz
sbb
sub
fcmovnu
inc
cmp
incl
dec
std
clc
push
cmp
xor
pushf
xor
jmp
jle
ret
sbb
in
and
pop
add
popf
mov
xor
sbb
xor
jg
xor
jp
mov
fildl
sbb
pop
je
mov
inc
adc
fldenv
pop
xchg
out
pop
or
sub
inc
cmp
sub
lods
popa
call
add
je
repnz
sbb
jl
sbb
repnz
jle
adc
adc
lret
push
push
into
adc
das
pusha
sahf
out
and
sbb
adc
cmp
sbb
int3
add
scas
sbb
in
lahf
adc
andb
sbb
mov
mov
add
pop
xchg
cmp
outsb
cmp
je
je
outsl
xchg
pop
xchg
arpl
jne
inc
xor
xor
pop
iret
lea
jmp
jmp
int3
or
sbb
dec
xchg
or
inc
jbe
and
dec
pop
jne
scas
pop
xchg
push
dec
das
std
daa
mov
xchg
mov
xor
in
inc
add
adc
cmpb
inc
je
loopne
or
push
js
fistpl
repz
stc
or
mov
cld
pop
clc
push
mov
push
jns
pop
push
das
push
mov
dec
pop
lahf
rorl
jns
inc
shrb
or
pop
jge
mov
add
adc
cmp
pop
add
sub
outsb
push
push
fcomi
les
push
mov
dec
push
mov
fldcw
pop
mov
push
push
cwtl
add
in
mov
cmp
dec
push
rcl
adc
mov
testl
test
push
test
pop
aam
xchg
call
xor
cs
add
movsl
dec
adc
popa
movsb
fnstcw
popa
shll
xor
imul
cmp
scas
gs
pop
cs
scas
mov
mov
mov
and
pop
mov
mov
mov
outsb
repnz
popa
pop
xchg
gs
arpl
outsb
pop
xchg
cmp
arpl
gs
xchg
gs
outsl
outsb
shrl
aam
dec
shll
xlat
xor
fcmovne
mov
jbe
fsubl
fidivs
loopne
mov
xchg
jb
loop
jecxz
in
push
shll
out
imul
xor
sub
outsb
sbb
cmpsb
imul
lcall
outsb
cmpsb
imul
fistpl
dec
je
add
push
in
jbe
jmp
or
jmp
mov
cmpsb
inc
movsb
add
aaa
cmp
pop
dec
lods
push
adc
mov
and
into
and
sbb
cmp
push
loop
outsl
rorl
add
jne
pop
push
add
sub
xlat
fucom
cltd
movsb
stc
cmpsb
fdivrl
fcoml
test
inc
ss
sbb
shrb
call
in
popf
fdivr
lods
movsb
and
enter
jb
lcall
sti
push
lock
sbb
xor
mov
into
mov
cld
ss
sahf
xor
mov
pop
dec
and
lods
xchg
xor
adc
add
xchg
sbb
push
ret
dec
inc
mov
stc
mov
cmp
sbb
repz
mov
je
cmp
mov
mov
test
push
incl
jmp
bnd
dec
cld
push
xchg
orl
inc
mov
pop
mov
aam
cmp
jle
js
add
call
popa
fildl
adc
loopne
add
xor
pop
insb
scas
stc
jmp
call
arpl
or
fistpl
clc
or
rcrb
push
jle
xchg
dec
inc
and
int3
push
pushf
ja
xchg
inc
cmp
jecxz
aad
add
nop
xchg
xchg
std
jg
cld
dec
addr16
in
std
outsb
popa
dec
rcl
xor
je
imul
cmp
shll
outsl
addr16
sbb
dec
imul
fwait
push
jne
dec
loopne
mov
mov
cmovs
mov
dec
push
push
cmp
mov
rcll
idiv
fwait
jle
lds
insb
mov
xor
ret
pop
jge
shll
mov
jb
or
subl
adcb
outsl
xchg
ret
mov
add
add
add
cmc
add
mov
pop
inc
lret
adc
and
mov
ljmp
pop
add
enter
fbld
cmp
xor
out
daa
or
jmp
gs
jle
adc
imul
pop
pop
add
jle
xchg
nop
sub
mov
or
inc
ds
jo
jl
or
adc
pop
mov
inc
testl
and
mov
lds
dec
adc
out
enter
andb
pop
xchg
clc
cmc
shll
mov
jecxz
adc
push
icebp
push
pop
fstpl
sbb
xchg
enter
notb
pusha
fcmovne
pusha
imulb
add
sahf
stos
or
lock
xor
nop
loopne
jnp
jmp
ficomps
dec
xor
cmp
fcmovnb
ret
jmp
adc
xor
pop
dec
jbe
xor
popa
push
insb
pop
pop
xchg
inc
jl
pusha
stos
lds
stc
clc
popa
adc
decl
cld
iret
sub
test
jle
mov
sbb
shrl
cmc
loopne
add
and
or
ja
into
shll
sbb
rorb
push
dec
and
cmpsb
fildl
out
das
sbb
das
xor
and
sbb
and
push
adc
imul
push
clc
add
cli
jae
sub
sbb
add
cmp
cwtl
fistps
push
in
push
fistpll
jne
jmp
sub
into
jl
jns
in
push
clc
fdivr
add
xchg
ds
cld
andb
daa
ljmp
xlat
and
lods
or
add
cs
clc
mov
push
in
sbb
pushl
ret
push
mov
or
add
ss
mov
xor
cmp
inc
and
lcall
fwait
mov
pop
dec
sub
push
out
push
push
push
push
mov
lahf
or
adc
mov
sahf
mov
push
pop
mov
and
insb
scas
mov
mull
mov
jbe
das
pop
negb
cmp
mov
pop
mov
mov
leave
or
add
push
cmp
jb
ljmp
lods
scas
pop
add
movsb
jb
cli
add
adcl
cmp
ja
sbb
and
sbb
sbb
jnp
xor
jb
jmp
xchg
jb
cmp
jbe
pop
arpl
pop
fdiv
jns
cmp
and
and
and
jmp
mov
sub
ss
sub
pop
pop
mov
pop
dec
add
mov
pop
mov
pop
cmp
hlt
mov
cmp
scas
add
sbb
xorl
and
clc
mov
cmp
push
and
loopne
push
mov
in
pushl
das
imul
xchg
loopne
roll
in
rorb
int3
push
push
adc
ljmp
adc
jbe
mov
mov
push
jne
mov
ljmp
in
inc
jl
sub
movb
cwtl
dec
and
add
cld
hlt
sub
shl
pop
push
xorb
daa
lret
mov
pop
xor
add
fsubl
pop
call
cmp
gs
jae
cli
arpl
jbe
arpl
dec
shll
outsl
insl
jne
fldl
rcl
mov
jecxz
pop
dec
imulb
mov
shlb
add
idivl
jb
fs
mov
call
stc
shl
mov
pop
pop
xor
xchg
inc
dec
pop
pusha
cmpb
add
and
pop
shl
add
cld
popa
jmp
and
into
jo
xchg
sub
mov
add
jp
pushf
or
sub
pop
inc
repnz
int3
sub
sub
gs
inc
add
loopne
ret
dec
and
inc
push
fs
mov
add
inc
push
adc
pop
pop
sahf
cmp
push
gs
jecxz
jecxz
loopne
aam
enter
add
or
sub
jnp
xor
bound
dec
dec
sbb
mov
movsl
movsb
loop
js
jo
jae
dec
ficomps
jnp
inc
sub
mov
sub
xchg
sbb
pop
mov
iret
xchg
mov
rcrl
push
fcoms
movsb
sti
stos
mov
push
pop
clc
notl
inc
push
div
aam
enter
xorl
mov
push
cmp
push
clc
stos
lods
sbb
add
mov
push
dec
shll
push
xor
popa
jo
cs
adc
shll
sbb
sub
mov
je
fs
dec
rcl
jb
gs
dec
add
xor
outsw
pop
test
adc
mov
lods
jmp
xor
icebp
jne
add
out
pop
cwtl
xchg
xchg
je
and
pop
cmp
pop
adc
jne
lock
push
pop
mov
xchg
xchg
push
xchg
dec
rcrb
addr16
daa
icebp
pop
jns
add
call
rcrb
stc
outsb
inc
cmp
add
pop
or
push
lret
pop
test
inc
fcompl
sbb
adc
mov
mov
sub
push
outsb
clc
add
hlt
add
or
inc
xlat
imul
jle
push
jae
push
psubw
cmp
cmp
xorb
sbb
push
adc
sub
cmp
adc
xor
dec
pop
pop
mov
ficoms
decl
push
lea
jmp
xlat
lea
add
inc
mov
lods
mov
mov
cmpsb
mov
mov
cmp
jp
enter
add
enter
dec
add
mov
lret
inc
sub
loopne
outsl
daa
or
ja
pop
cs
sbb
fcomps
fisubrl
lcall
jae
mov
je
push
imul
jae
cmpsb
arpl
push
in
push
mov
mov
xchg
gs
insl
pop
dec
push
xchg
gs
xchg
dec
inc
popa
arpl
xchg
xchg
xchg
push
in
sbb
inc
mov
mov
pcmpgtd
cmpb
into
adc
enter
iret
cld
inc
popf
or
les
jnp
cs
xor
cltd
and
mov
mov
dec
repz
insb
adc
xchg
push
lea
fisubl
jne
mov
mov
popf
insb
lcall
out
or
aaa
xor
add
lcall
out
insb
out
xchg
mov
stos
sarb
mov
mov
adc
inc
mov
jno
fmull
mov
inc
xor
cs
bound
iret
lret
test
movl
loopne
pusha
jnp
iret
mov
jecxz
ret
arpl
enter
call
imul
gs
and
add
add
ljmp
aaa
in
in
out
out
lds
addl
ds
lock
rcrb
sarb
xor
je
outsl
aam
stc
pop
and
sbb
stc
xlat
stc
fdivr
fnstcw
push
stos
fucom
pop
mov
vunpcklps
inc
dec
repnz
clc
leave
clc
fdivr
and
cmp
aam
aad
push
cmpb
sti
fsincos
fmul
ret
cmp
and
idivb
jo
rorl
adc
outsb
fistps
sti
dec
neg
sbb
add
dec
mov
aaa
movb
stos
xor
stos
jne
outsb
daa
dec
ja
and
mov
mov
je
insb
mov
mov
sub
fxch
mov
push
mov
jb
pushf
sub
shlb
ja
mov
mov
rorb
insl
lahf
fxch
rcrb
mov
leave
mov
popf
sub
nop
das
imul
popf
popf
or
xchg
dec
xchg
lea
test
leave
rcrb
xchg
push
jo
pushf
pushf
pushf
pushf
mov
xor
mull
lret
inc
sahf
add
clc
adc
cld
cmpb
aam
in
leave
and
daa
hlt
leave
pop
test
pmulhuw
leave
mov
leave
pushf
insb
daa
loop
aam
xchg
popa
nop
sbb
test
sub
aas
pop
pop
stc
pop
pop
in
in
cmp
stc
push
inc
or
jl
out
stc
fmuls
stc
add
cmpsl
aam
test
shll
xor
lods
xlat
or
add
xor
iret
mov
or
test
add
jmp
mov
nop
mov
shlb
push
pop
xchg
je
cmp
das
arpl
insb
insb
jae
lcall
jb
jns
lcall
jp
imul
imul
cmpsb
imul
cmpsb
imul
imul
mov
mov
dec
mov
xor
dec
int3
fldenv
je
cmp
lcall
insb
jae
imul
imul
inc
lcall
lcall
cmp
xor
ja
cmpsb
jmp
pshufw
add
loope,pn
adc
lret
std
xor
je
jae
insb
imul
cli
sti
cld
or
jl
push
jmp
nop
add
in
outsb
out
icebp
lds
pop
dec
xor
sbb
cmpsb
imul
cmp
imul
imul
imul
cmpsb
imul
insb
jb
push
jae
cmp
popf
lds
das
or
sub
mov
pop
jae
stos
mov
add
pop
mov
mov
pop
or
mov
addr16
outsl
popa
adc
inc
inc
fcmovnb
push
or
daa
push
out
setnp
movsl
arpl
or
mov
jl
addb
mov
out
pop
or
and
add
push
call
fildl
lcall
dec
ds
call
insl
dec
jl
pushf
pusha
lea
popf
sub
add
cmpps
iret
les
gs
pop
xchg
cld
mov
inc
repz
in
mov
sbb
add
mov
xor
scas
sbb
call
pop
movsl
cmp
or
mov
xor
call
cmp
xor
ret
jmp
sbb
enter
add
mov
pop
shlb
andb
push
cmp
add
fcoml
mov
xchg
addr16
ret
stc
imul
xor
fimuls
or
add
add
pusha
loope
jnp
out
cmp
mov
ja
lret
jnp
mov
and
jo
adc
xchg
jmp
adc
jle
jno
xor
add
lods
ret
scas
mov
lods
sub
arpl
je
cs
das
mov
mov
ja
sub
jb
sbb
cld
or
icebp
push
or
cltd
aaa
lock
call
jl
fisttpll
mov
popf
out
jecxz
sti
call
add
mov
inc
xchg
add
mov
push
es
push
dec
lock
clc
dec
int3
push
mov
js
pop
push
sti
sub
sub
mov
sbb
pusha
in
jae
xchg
jl
test
push
jge
adc
sbb
sbb
inc
inc
dec
cmp
rorl
add
push
lds
je
dec
shll
popa
jb
pop
aas
dec
rorl
js
shrb
pop
repnz
mov
decb
xor
sbb
push
repnz
lcall
pop
inc
imul
imul
add
pop
xchg
gs
xchg
push
gs
imul
push
push
gs
gs
xchg
imul
pop
dec
int3
jno
cmpsb
inc
popa
cwtl
add
ljmp
je
dec
je
xlat
or
rorb
pop
imul
jmp
add
jmp
nop
jmp
push
jl
cmc
jp
push
inc
push
lock
icebp
add
dec
cmp
cmp
inc
jnp
adc
add
and
test
stos
mov
dec
jg
or
jb
inc
cmp
lea
sbb
cmpb
js
js
loopne
jge
jo
add
cmpl
mov
stc
imul
push
lea
cmpsb
push
les
add
mov
add
push
inc
dec
sbb
cmpsb
lea
sub
divl
lcall
dec
or
sarl
ss
add
mov
sub
stos
inc
add
movl
add
jno
imul
jne
xor
mov
lods
out
sub
mov
cmpsl
mov
mov
mov
add
shr
jle
bndldx
shlb
daa
add
mov
xchg
das
test
je
cmp
or
ljmp
add
jmp
cmp
jne
data16
or
jne
or
sub
testb
or
into
jae
push
add
outsb
adc
fildll
inc
inc
inc
cmp
jl
add
jmp
or
pop
push
push
adc
jae
push
add
inc
mov
dec
out
xchg
push
jno
push
xchg
addl
fsubr
outsb
imul
jg
mov
inc
xor
xor
mov
pushl
add
mov
stos
test
clc
push
test
cmp
sub
loope
pop
push
mov
inc
xor
mov
cmp
push
imul
andl
testl
sbb
pop
lods
push
mov
call
mov
out
inc
inc
xor
lcall
popa
popf
insl
pop
sub
ljmp
add
test
mov
mov
in
push
push
out
sub
pop
ja
rcrb
shl
or
push
orl
mov
mov
mov
or
and
inc
cmp
testb
je
pop
inc
sub
lds
jmp
and
gs
xor
sbb
adc
adc
jnp
jo
cs
inc
int3
push
adc
mov
push
hlt
call
push
jnp
ret
sbb
test
push
lock
ficoml
sarl
or
jne
nop
sbb
or
xor
adc
sub
add
pop
mov
add
lret
leave
mov
jo
outsl
gs
jb
push
xchg
js,pn
cwtl
test
loopne
in
std
jbe
sub
ret
or
jp
sub
mov
jae
arpl
lahf
mov
repz
testb
addl
repnz
popf
add
cmp
inc
lcall
inc
mov
leave
ret
fistpl
addl
aam
adcl
addr16
mov
fwait
orl
icebp
fistpl
ret
fimull
adcb
imull
add
push
cmp
idivl
push
sbb
pop
ja
or
or
push
cmp
cwtl
xchg
out
pusha
add
call
pop
cs
xchg
andb
sbb
shll
mov
jge
sti
inc
xchg
inc
adc
or
dec
and
inc
aad
xchg
dec
push
call
xor
ss
push
mov
jne
push
scas
pop
dec
xchg
bound
xchg
fistl
push
fisubrl
pop
mov
and
jbe
ljmp
pop
lock
add
sarl
in
push
mov
fucomp
mov
daa
loopne
adc
push
rcll
popf
xlat
pop
in
add
mov
movsb
cs
xchg
fstpt
pop
xor
inc
insb
adc
pop
cmpsl
ret
inc
nopl
mov
pop
and
jae
and
aam
xchg
sub
ljmp
push
cmpsb
push
or
sbbl
stos
inc
or
cltd
test
stc
andb
and
sbb
pop
xor
arpl
sbb
sbb
imul
sbb
gs
stos
push
repz
notb
dec
pop
test
dec
xchg
outsb
in
std
loop
jcxz
inc
jmp
out
push
jne
popf
in
xor
xorl
xor
gs
addr16
les
gs
lret
xor
xor
lret
cmp
popa
jns
cs
xor
or
test
pop
sbb
enter
sbb
xor
cmp
sbb
add
icebp
mov
push
insb
push
mov
jl
pusha
jnp
push
xlat
jp
xor
add
enter
es
pop
cmp
pushf
mov
push
fstps
mov
mov
xor
inc
dec
push
and
push
sub
inc
jg
cmpb
imul
call
mov
sub
and
mov
add
pop
jb
and
fs
sub
xor
fwait
sub
in
mov
enter
gs
pop
xchg
gs
outsl
jb
shlb
jecxz
sub
lock
pusha
add
xor
jle
scas
lock
rcrb
nop
mov
adc
mov
pushf
in
cwtl
enter
cmpsb
or
sarl
sub
dec
or
dec
jle
std
or
xchg
pop
mov
mov
or
fmul
fs
inc
push
gs
rorb
inc
mov
lcall
add
lods
or
mov
rcr
loopne
arpl
inc
sbb
fists
xchg
adc
int3
jmp
out
add
test
xchg
pop
int3
add
inc
inc
mov
pusha
fs
and
jns
pushf
pop
enter
mov
add
ficompl
pusha
add
xchg
into
mov
fadds
or
daa
pop
mov
nop
or
or
push
into
or
arpl
shll
lcall
test
xor
adc
jmp
arpl
gs
js
xlat
jg
mov
jb
and
dec
outsb
imul
gs
std
popf
fstpt
push
sub
add
dec
gs
jbe
sub
xchg
push
add
outsb
in
push
bound
push
push
xor
js
sysenter
add
inc
add
je
dec
fstps
and
add
mov
addr16
sbb
div
sbb
push
jb
mov
out
aas
fldenv
inc
imul
aas
mov
outsl
outsl
insb
push
push
outsb
popa
jo
push
push
and
out
jbe
jne
je,pt
push
mov
dec
dec
ss
adc
pop
inc
insb
roll
sbb
aad
fidivs
arpl
inc
add
push
xor
jnp
sti
out
das
adc
jge
dec
outsl
fs
adc
inc
stos
dec
outsl
lods
dec
imul
movq
mov
push
push
xor
mov
test
sub
popa
sub
sbb
jne
or
and
xlat
xor
add
dec
into
add
inc
imul
or
bound
sub
outsl
ja
push
fisubrs
inc
sbb
dec
bound
push
and
aad
gs
xor
inc
cwtl
mov
push
or
push
ret
xchg
add
in
stos
call
push
push
mulb
inc
cmp
adc
mov
mov
popa
mov
or
jno
pop
loope
dec
pcmpeqb
and
pusha
xchg
adc
outsb
ss
das
clc
add
push
mov
aad
add
sub
cmp
sbb
jne
je
mov
negb
fsubrl
aam
or
push
or
add
jbe
xchg
outsl
clc
push
imul
ljmp
enter
outsl
imul
sub
inc
add
mov
dec
mov
sub
jo
insl
fistpll
imul
jnp
stos
popa
pop
jl
arpl
pushf
or
popa
push
jo
adc
fucomi
adc
push
mov
pop
aas
movsl
aaa
imul
sbb
adc
es
out
push
fiaddl
sbb
outsl
mov
insb
add
dec
jae
ret
sti
add
push
ret
add
mov
imul
std
cld
sbbl
lret
ss
inc
push
dec
inc
fstpt
adc
jo
mov
data16
add
jae
popa
addr16
adc
aad
push
push
push
cmp
push
sti
mov
inc
inc
dec
or
add
fisubrl
xor
sub
es
cmc
add
adc
popa
js
dec
testb
outsb
mov
mov
aam
mov
dec
gs
or
faddp
pop
xor
jb
cmp
out
idivl
adc
roll
insl
push
ja
adc
push
inc
push
mov
xlat
rclb
push
cltd
add
insl
jp
xchg
or
mov
gs
cmp
inc
jb
mov
cld
cmp
or
pop
inc
xlat
aam
ret
pop
adc
pop
ss
push
incl
xchg
dec
xchg
popa
jge
or
xchg
mov
bound
cmp
ja
std
bound
imul
jo
sub
pop
mov
add
imul
fstp
test
aas
fcomps
inc
pop
push
add
out
jmp
mov
rdmsr
push
dec
pextrw
xor
je
mov
outsb
jo
aaa
push
ss
jb
pop
mov
ret
daa
mov
mov
dec
add
imul
dec
add
dec
pop
adc
imul
shr
std
cmp
fistpl
jnp
mov
pushf
call
mov
jmp
data16
mov
ja
outsl
pop
stc
test
jmp
movsl
call
ret
sbb
ret
enter
mov
mov
cltd
sub
jge
jo
orb
bound
shrl
test
and
xor
and
stc
scas
jmp
sub
sub
xor
jmp
add
sarl
imul
test
stos
add
add
mov
test
sub
add
xchg
inc
inc
jmp
sub
mov
or
inc
adc
and
inc
idiv
bswap
stos
sub
cmp
add
and
enter
jl
std
aaa
add
popf
push
inc
push
clc
call
xchg
in
jmp
mov
es
pop
xor
out
andl
jmp
pop
shrl
mov
jecxz
icebp
fs
rcll
mov
and
das
or
xchg
imul
sub
fistpl
ret
aad
xor
lods
lods
mov
fdivrp
fstl
popf
pop
jg
fdivrs
or
mov
loop
data16
xchg
icebp
out
jb
sti
push
incl
cwtl
test
sub
outsl
jnp
fildll
sub
data16
mull
jbe
jbe
lcall
push
xor
dec
sbb
mov
cld
fwait
cmp
inc
sbb
jo
shlb
data16
cld
lcall
movb
pop
ss
sub
jle
sub
xor
push
in
inc
rcrb
repnz
sbb
pushf
mov
cmp
add
shrl
adc
scas
lret
outsl
ja
mov
mov
call
fimull
dec
adc
inc
push
add
daa
push
insl
test
pushf
les
setl
je
and
push
pop
inc
insb
and
pushf
pushf
out
stc
enter
jmp
inc
add
jbe
cli
sti
sub
mov
loopne
xchg
std
idiv
xchg
push
jmp
aam
rcr
pop
clc
mov
jo
mov
aad
outsb
push
or
pushf
call
mov
js
sti
mov
sub
pop
jo
add
xchg
leave
and
jmp
aam
mov
and
mov
cwtl
pop
ljmp
mov
pop
pop
jmp
push
sbb
shl
cmc
lea
stc
push
aam
mov
mov
cmp
mov
fstp
sbb
pushf
push
push
push
xor
test
je
int
call
out
ds
scas
sbb
lret
push
mov
cmp
stos
and
movsb
cld
data16
adc
shl
cld
pop
dec
testb
std
push
aam
cmp
cs
fcmovnu
mov
cmp
cwtl
mov
add
call
fnsave
pop
cmpsl
icebp
mov
pushf
shl
call
cs
enter
add
cmc
out
fistps
inc
clc
pusha
cmp
neg
mov
and
cmp
dec
stc
iret
jb
add
ret
cmp
subb
push
inc
mov
cwtl
pushl
cmp
test
adc
adc
cmp
sbb
fmuls
outsl
dec
push
pushf
aaa
cmc
xor
sub
fisttpll
mov
in
add
pusha
call
faddl
out
add
adc
xchg
ds
imul
mov
lock
sub
adc
add
out
pop
ror
sbb
and
mov
sub
pop
clc
mov
rcl
jmp
mov
call
arpl
mov
xchg
xlat
and
mov
dec
mov
or
cmp
pop
mov
xchg
fstps
jmp
pop
jno
stos
outsb
adc
or
ret
mov
test
mov
cmc
stc
stc
push
jmp
jne
pop
xor
lea
or
add
jg
arpl
loope
and
adcb
or
lock
insb
or
inc
ret
lea
xchg
movsb
push
pop
mov
sub
or
ficomps
cmpsb
or
outsb
xor
rcrb
aaa
insb
js
mov
jns
jl
shl
pop
outsb
or
testl
int
ret
dec
xor
mov
jbe
hlt
add
pop
scas
loope
lret
fiaddl
test
enter
mov
mov
pop
jmp
or
mov
nop
rorb
mov
cli
insb
mov
ss
mov
push
and
or
outsb
mov
add
xor
out
rclb
sbb
lds
nop
jne
jge
jg
or
icebp
cmc
dec
jno
sbb
call
push
sbb
fisttpll
in
out
dec
lds
sbb
jmp
clc
rol
ror
arpl
incb
jl
xor
cmc
arpl
out
push
jmp
ja
sbb
ret
not
jmp
push
cmpsl
fistpll
xor
mov
cld
call
xchg
add
and
shlb
int
push
inc
sub
pop
sub
inc
push
pushf
mov
insb
pusha
aas
in
and
shlb
sbb
mov
or
icebp
in
cld
xor
test
mov
cmc
cmp
pusha
cmc
sub
mov
clc
clc
pop
ret
fdiv
clc
stc
sub
mov
sarl
sbb
pushf
test
ret
clc
push
dec
cld
pop
xor
jp
mov
push
rorl
pushf
shlb
loopne
icebp
rclb
cmp
movsb
in
stc
and
call
add
imul
add
jg
jmp
loop
mov
mulb
or
adc
mov
fisttpl
or
push
sub
call
pusha
mov
je
push
pushf
mov
mov
cmp
mov
xor
sti
pop
fidivrs
dec
push
nop
sub
xchg
js
push
add
leave
psraw
mov
ja
std
dec
mov
push
call
ds
pop
dec
outsb
test
cltd
dec
sarl
ljmp
sub
inc
popa
mov
or
ror
sub
or
loop
sbb
pop
push
mov
call
outsb
xchg
or
pop
sub
sbb
out
mov
xor
mov
pop
push
cmpb
imull
add
fwait
dec
lret
pop
lods
inc
inc
and
pop
pop
push
jmp
jge
pop
inc
jg
add
cld
shl
rcll
xor
push
rorl
ficomps
push
into
daa
movsb
leave
add
std
cmp
in
lock
jmp
cmc
cmp
or
rorb
push
clc
cmp
sub
shlb
in
jg
sub
imul
ret
push
lea
rorl
mov
jmp
js
sbb
sti
scas
mov
hlt
jecxz
stc
xor
call
cmp
dec
push
push
jmp
popa
clc
jne
orb
xchg
dec
dec
adc
xchg
fwait
out
pop
fcomi
shl
fnstenv
xchg
push
pop
stc
pop
test
or
ret
in
insb
callw
in
jbe
dec
xor
inc
dec
call
std
data16
pop
pop
dec
add
jmp
cld
and
or
jmp
ljmp
mov
inc
loopne
pop
mov
mov
cmpsl
call
sbb
mov
cmp
dec
scas
lret
out
std
sub
negl
jl
lahf
ja
clc
cmovg
mov
mov
or
out
pop
and
push
jge
leave
cwtl
inc
xchg
xor
and
sub
cmp
adc
scas
mov
outsl
into
cmp
and
jmp
js
mov
or
lock
out
dec
or
paddw
add
mov
jmp
shr
jnp
add
imul
incl
inc
or
setb
add
add
inc
test
insb
scas
ret
mov
add
ds
imul
scas
aam
cld
mov
push
and
aaa
jmp
stos
jno
imul
sbb
fnstsw
fsubs
int3
rclb
cmpsb
stos
ret
add
pop
and
fcoml
pushf
xchg
test
jmp
pop
test
add
pop
mov
out
push
pushf
addr16
int
push
dec
add
xor
std
iret
pusha
xor
sub
sbb
adcb
inc
cmp
cmp
pop
or
aas
icebp
add
subb
mov
lds
mov
sbb
adc
xchg
push
jl
pop
xchg
rolb
mov
sub
sbb
mov
jmp
stos
pop
outsl
cmp
cld
lock
adc
and
cld
or
aas
or
sbb
cmp
lahf
lahf
shll
sti
decb
mov
inc
jmp
cmc
pushf
test
data16
xchg
mov
ljmp
clc
cmc
cwtl
xchg
pushf
sbb
pop
add
loope
pop
das
aas
mov
mov
aaa
cmp
rcl
fcoml
ffreep
mov
outsb
stc
cmp
mov
adc
push
and
es
ss
push
cmpsb
testb
cmc
push
pop
shl
cmp
std
int3
push
sbb
add
adc
gs
inc
dec
push
sarb
flds
pop
inc
mov
rol
pop
dec
shr
jg
mov
fs
rcl
mov
fstpt
jg
add
into
sbb
lret
xor
and
shl
ret
mov
and
rcl
rolb
outsb
push
bt
jmp
int3
scas
pop
add
jmp
outsl
jno
mov
popf
enter
out
xchg
scas
sbb
or
mov
jmp
ss
es
pop
ror
shl
xor
and
mov
mov
or
into
xor
fdivs
or
lea
arpl
pop
fbld
mov
mov
aam
mov
and
dec
push
push
and
imul
xorl
bound
mov
mov
sub
scas
test
not
adc
sbbl
mov
js
leave
pusha
xchg
and
faddp
lock
sbb
repnz
dec
in
mov
loopne
dec
sbb
mov
mov
cmp
movsb
ret
loop
scas
cmp
and
mov
mov
push
cmp
xchg
pop
in
aas
add
jmp
pop
xor
ljmp
das
insb
lock
jg
cmp
add
jmp
push
loopne
in
pushf
or
or
lds
and
sub
adc
test
xchg
xlat
sbb
test
sub
int
sub
pop
enter
mov
sub
push
pop
push
ficoml
repnz
aad
xor
mov
and
pop
pop
adc
stc
fcomi
cmova
je
jo
ds
push
inc
vsubss
cltd
mov
lret
sarb
jmp
jo
push
orb
sbb
xor
fstl
daa
clc
stos
cmc
xor
push
xchg
aad
mov
jmp
and
xchg
or
mov
repnz
pop
push
sbb
dec
xor
ret
lret
and
inc
sbb
push
cmc
mov
loope
adc
sbbb
callw
xor
sbb
cmp
test
mov
pop
ljmp
lret
movsl
dec
jo
cmp
andb
xchg
imul
insl
aam
fldl
add
cld
pop
loop
test
cmp
dec
xor
jae
pop
push
mov
jmp
or
cli
and
insb
call
and
xlat
fwait
pop
mov
and
and
add
inc
and
jnp
mov
dec
roll
loop
mov
leave
dec
and
dec
or
dec
xchg
mov
pop
cs
sahf
push
mov
mov
mov
sar
dec
maskmovq
negl
aaa
adc
mov
pop
dec
lods
jnp
pop
arpl
mov
out
mov
dec
bound
xchg
jg
std
fsubrp
flds
aas
dec
cwtl
xchg
jnp
lods
mov
pop
xlat
sbb
xor
dec
daa
xchg
into
rorl
jne
nop
daa
dec
and
int
adc
pop
mov
fbstp
in
pop
testl
daa
arpl
fwait
mov
pop
mov
in
dec
add
idivl
icebp
imul
sahf
jnp
pop
fistpl
mov
out
adc
jmp
cmpsl
fiadds
pop
add
xlat
ret
jnp
test
cmovae
neg
in
mov
add
push
mov
jg
in
adc
fisubs
fistps
ss
insb
mov
shrl
dec
cmp
fwait
push
inc
cltd
adc
mov
dec
popf
mov
cmpsl
or
icebp
loope
push
out
iret
repz
imul
pop
jae
scas
getsec
aaa
popa
or
xchg
add
mov
rol
out
sbb
push
dec
sbb
dec
jle
xchg
push
fidivrs
in
scas
pop
cwtl
lret
cmovg
pop
dec
push
dec
cmp
jbe
xchg
das
pop
dec
sub
repnz
loope
aas
inc
mov
and
movq
cmp
repnz
lret
push
mov
sbb
mov
lahf
push
jg
imull
out
daa
dec
test
xor
loope
ret
aaa
ja
mov
str
mov
xchg
mov
ja
sbb
adc
inc
shl
pusha
in
mov
xor
ss
sub
or
push
call
fisubl
jb
pop
hlt
and
arpl
inc
sub
add
push
popf
lods
or
jmp
scas
fwait
std
lret
imul
add
inc
jmp
fcomi
inc
add
mov
and
gs
dec
je
pcmpgtb
push
push
mov
push
div
push
jg
in
jmp
aaa
jg
das
cmc
daa
cltd
mov
mov
ret
bts
pop
rdtsc
add
fdivp
ret
dec
add
add
popf
jmp
dec
mov
loopne
mov
or
sar
dec
add
mov
test
call
add
mov
jge
sbb
cld
mov
iret
push
mov
pop
add
loopne
pop
fsts
xor
xchg
mov
cwtl
scas
std
cmp
std
icebp
das
rorb
sbb
loope
push
daa
add
sub
or
psubsw
mov
jge
add
fs
mov
cli
add
imul
imul
and
es
mov
sbb
sub
dec
js
cmp
std
mov
arpl
and
mov
enter
mov
cmp
jmp
rcrb
push
out
stc
adc
push
clc
or
ja
push
xor
cli
shl
cmp
mov
add
imul
xor
ror
xor
stc
das
test
insl
mov
das
inc
xchg
loope
movsb
jp
fsubr
push
out
icebp
xor
in
mov
mov
mov
push
mov
xchg
jb
xor
fwait
jno
xchg
std
fcmovnbe
into
inc
cld
xchg
or
out
fildll
rcrl
call
inc
xchg
cmp
addb
iret
and
sar
ret
sbb
lods
xlat
or
out
enter
dec
mov
pop
insl
cmc
les
or
xor
push
pop
loope,pt
iret
inc
testb
clc
sahf
shl
pop
pop
cli
or
rcl
into
push
mov
mov
addr16
xor
pusha
lods
sbb
adc
xchg
pusha
frndint
lods
ss
repnz
dec
pop
aas
sar
rcl
push
stos
push
rcrb
fcoms
and
es
push
stos
pop
cmpsb
add
pop
cld
dec
pushl
pusha
sbb
out
lock
adc
push
rcll
adc
je
sub
hlt
pop
popf
rcrb
push
cli
sbb
shlb
mov
cmpsl
ja
data16
sbb
lcall
aam
call
test
ficoml
out
fcoml
repz
jmp
pop
mov
xor
bound
jb
or
cmpsl
or
ja
loope
in
fstps
and
push
push
mov
mov
pop
cmp
ror
mov
cmc
sahf
movsl
shr
shl
mov
dec
xchg
push
fcomi
je
ficomps
outsb
js
mov
stc
jmp
push
je
ljmp
enter
fldl
js
xor
jmp
mov
test
mov
add
andl
imul
push
add
push
jno
imul
ja
rcrb
sbb
shl
lds
and
inc
jmp
ret
add
cmp
or
mov
pushf
push
xlat
jg
arpl
adc
pop
sbb
add
stos
addl
push
sbb
outsl
loopne
mov
dec
stos
jo
jmp
cmpsl
hlt
ljmp
mov
dec
repnz
dec
cs
mov
jne
sub
lcall
cmp
adc
or
fs
inc
je
jae
and
call
mov
add
call
sbb
mov
lcall
sti
xchg
dec
mov
add
int3
ficomps
xor
mov
cli
inc
mov
sahf
roll
cwtl
ljmp
and
pop
cli
ljmp
and
mov
or
or
xchg
mov
movsb
push
cli
je
add
jg
je
sahf
and
rol
sahf
xchg
jae
loope
and
mov
xchg
enter
sub
fidivrs
push
rorb
dec
mov
ffree
ljmp
hlt
mov
mov
cmp
ret
dec
dec
icebp
outsl
mov
cmp
ljmp
xchg
pusha
cmp
and
xchg
lock
in
insb
es
mov
xchg
lcall
jg
inc
adc
shrl
in
jb
pop
xchg
in
out
outsl
inc
cli
mov
and
adc
mov
pop
dec
cmp
loopne
mov
je
fsubl
mov
dec
adc
pusha
sti
cltd
enter
in
fldenv
fcomps
xchg
cmp
mov
lahf
pop
or
jmp
and
pop
ds
push
aad
mov
ds
filds
sub
hlt
push
addr16
jmp
out
in
mov
inc
push
shrb
cmp
jmp
or
mov
ret
inc
data16
push
cmp
jg
fmulp
cwtl
xchg
cli
cmc
ds
add
fdivrs
sahf
mov
add
jmp
or
add
adc
pushf
inc
push
or
movsb
xor
mov
into
inc
mov
clc
or
pop
or
jbe
inc
cmp
movsl
pop
adc
ret
pop
test
repnz
bound
pop
dec
adc
ljmp
jg
lea
rcll
imul
sbb
lret
xchg
sbb
mov
dec
cmp
pushl
cmp
lock
fiaddl
data16
inc
cmp
das
sbb
ss
fistpll
pop
xchg
add
stos
inc
pop
addl
add
adc
jge
aas
cld
push
clc
mov
aam
stos
pop
jg
ret
jle
add
pushl
arpl
shl
or
inc
or
rclb
fcomip
fiadds
sub
shrb
lret
dec
sbb
push
cmp
jne
xchg
dec
or
iret
mov
push
aaa
or
into
and
scas
xor
push
rcrb
repz
mov
fimuls
cmp
out
ljmp
fstpl
xor
dec
and
xor
dec
adc
nop
adc
add
mov
mul
scas
xchg
push
mov
add
push
pmaddwd
mov
sbb
std
mov
add
cmp
js
and
in
incl
mov
sub
adc
into
add
sbb
inc
xor
popf
popa
sbb
push
push
stc
mov
cmpsb
jo
cld
ret
dec
or
out
shlb
stc
dec
add
mov
inc
adc
mov
inc
sbb
not
js
hlt
fdivrp
ljmp
fsubrl
jge
daa
xor
loopne
ficoml
rcrb
fstp
jns
ljmp
int
sbb
aam
cld
call
add
stos
xchg
cmp
orb
repnz
aad
mov
nop
xor
dec
adc
stos
adc
lret
push
push
call
sbb
inc
jle
push
inc
fwait
pop
dec
popf
lea
jns
call
call
xor
stc
mov
sbb
test
or
test
add
sub
in
rorl
inc
mov
sub
lcall
lcall
out
test
roll
jle
pushf
push
jns
jb
aam
pop
mov
jg
and
push
scas
mov
and
cmpsl
sub
not
mov
push
lock
adc
lds
sub
fstpl
ficompl
rep
bound
jg
inc
push
icebp
mov
and
xchg
movsb
outsb
push
cltd
fs
mov
jmp
outsl
pop
imul
and
mov
sub
mov
xchg
pushf
lcall
test
lds
pandn
pop
dec
pop
sbb
stc
addr16
inc
scas
pop
fisttpll
incl
fildl
xchg
fwait
push
mov
insl
add
or
xchg
lret
dec
repnz
decl
mov
jno
popf
lret
jno
mov
jnp
in
ficoms
aaa
or
rep
ljmp
lahf
xchg
dec
inc
aad
mov
pop
icebp
mov
sub
pop
jecxz
dec
pop
pop
insb
ss
fmul
push
or
inc
adc
scas
rcll
je
ret
sti
ljmp
mov
popa
daa
ja
and
inc
pop
lea
xchg
incb
push
and
add
out
scas
movsl
xchg
imul
cmp
mov
shll
sub
sbb
sbb
call
sub
loope
mov
pop
cld
inc
pop
imul
sbb
pop
das
sbb
out
ror
movsl
js
int3
test
jge
mov
call
ret
inc
call
das
movsb
into
repz
shll
cld
negb
add
mov
pushf
push
pop
lods
pusha
fistpl
in
jmp
fnsave
ds
cs
loop
mov
and
ljmp
loop
int
add
mov
jnp
lods
cltd
outsl
sub
icebp
mov
dec
push
mov
xor
inc
sub
adc
mov
jmp
mov
dec
lea
call
dec
inc
inc
ljmp
arpl
mov
das
in
ds
push
sub
lods
jl
scas
movsl
out
add
jb
in
call
test
mov
mov
ss
mov
pushf
sub
int
cld
xchg
push
push
js
jmp
cmp
sub
inc
add
stc
in
aad
xchg
hlt
in
adc
ljmp
mov
sub
dec
fistpl
repnz
sbb
test
inc
add
mov
sbb
mov
loop
push
jp
mov
clc
in
js
fwait
aaa
jg
mov
lods
mov
stos
jns
mov
call
cltd
xchg
imul
sar
xor
repz
or
pop
pop
cli
shrb
outsb
xor
roll
sub
int
mov
lcall
andb
push
mov
sub
ljmp
fwait
mov
push
gs
mov
jl
loope
popa
outsl
pop
cli
pop
push
jg
xor
ret
ljmp
add
popf
popf
pop
pop
std
jecxz
xorl
shll
fs
add
and
out
mov
je
xchg
jecxz
jae
cld
mov
das
fmulp
xorl
jbe
fs
mov
xor
and
in
lea
outsb
pop
dec
cld
push
or
mov
or
fdivrl
out
popf
jg
addr16
mov
jmp
mov
xchg
divl
xchg
inc
push
and
mov
inc
pop
xor
sbb
and
test
inc
or
fidivs
push
sarb
mov
adc
add
into
popf
mov
and
or
mov
fidivs
push
adc
fistl
ljmp
mov
push
pop
int
jecxz
imul
pop
cmp
call
cli
aam
psrlq
addb
mov
cmp
and
xchg
cmp
mov
sahf
mov
cli
cli
ljmp
int3
lcall
stos
mov
cmp
repz
xchg
mov
fidivs
or
mov
in
les
les
xor
xchg
push
pop
inc
cltd
xchg
mov
decl
xchg
and
fldcw
pop
test
stos
inc
test
pushf
or
sti
push
les
sahf
sahf
xchg
xlat
mov
fcmovu
jle
sbb
and
jle
sub
lds
push
xchg
pusha
adc
sub
sbb
lds
lahf
idivl
fsubl
dec
jb
inc
insl
push
aad
sbb
imul
adc
add
sbb
test
and
outsl
insl
roll
fs
xchg
xchg
xchg
jns
dec
fldt
std
aaa
jmp
push
int
fistps
icebp
iret
repnz
cli
decl
dec
or
lret
loopne
add
test
mov
repz
dec
mov
cli
in
mov
cmp
in
test
lods
ret
add
or
divb
and
push
mov
push
pushl
xor
repnz
add
pop
iret
push
bnd
xor
shrb
pop
fistpl
decb
or
or
test
dec
xchg
xor
sbbl
dec
or
popa
out
xchg
push
into
xor
cmpsb
js
rorl
in
decl
lret
jb
jp
mov
xor
or
inc
xchg
pop
std
xchg
dec
sbb
sarl
mov
test
addr16
cmp
incl
pop
js
push
pop
test
ss
movsb
xchg
push
xchg
mov
fdivl
mov
mov
dec
sub
inc
jg
das
hlt
inc
sbb
inc
in
jae
mov
movsl
cmp
decl
or
fmul
mov
jns
inc
fadd
je
les
loope
rclb
cmc
dec
push
in
in
ret
and
imul
daa
add
jbe
addl
sub
mov
lods
rcll
mov
mov
add
arpl
decl
hlt
enter
cs
jmp
adc
lods
push
or
mov
sub
aaa
xchg
sub
out
mov
repnz
cmp
add
int3
xchg
mov
inc
filds
loopne
loopne
push
xchg
and
jecxz
outsl
icebp
aaa
inc
aas
sbb
repz
xchg
mov
push
adc
sbb
ror
stos
std
dec
mov
adc
in
rclb
mov
xor
mulb
pop
push
xor
std
inc
mov
aad
mov
test
pop
or
sahf
int3
out
std
mov
outsl
sbb
push
repnz
mov
cmp
and
sbb
dec
and
jecxz
int3
addb
inc
cmpsb
aaa
out
dec
xchg
fdivs
mov
push
mov
dec
es
je
cmp
test
pushl
sbb
cmpsl
xchg
out
mov
dec
mov
aas
mov
ss
call
mov
mov
popf
mov
hlt
call
fidivl
pop
dec
mov
jmp
adc
daa
add
mov
fists
add
cmpsl
jge
mov
in
stos
sti
mov
lods
sbb
pop
daa
sbb
adc
pushf
lret
ljmp
sub
fs
mov
dec
test
jb
test
mulb
sbb
lahf
sti
pop
sbb
es
pushf
push
enter
in
fsts
and
pushf
xor
testb
add
call
mov
clc
sbb
fstpl
fstpt
and
adc
add
push
jbe
mov
mov
outsb
inc
scas
push
lock
int
daa
push
adc
pop
imul
inc
add
push
adc
xchg
mov
outsb
sbb
push
push
xlat
mov
jp
mov
or
lds
jae
call
cmp
xchg
xchg
stos
call
pushf
ret
cmpsb
in
push
adc
incl
pop
xchg
cmp
and
pop
add
out
movb
ss
fisubs
inc
incl
lea
call
push
fwait
jae
sub
ret
xchg
mov
ljmp
adc
incl
adc
mov
adc
mov
xor
cld
repnz
dec
dec
fdivs
push
xor
stc
xlat
test
pop
cli
jg
and
jl
adc
cmpsb
pop
cmp
cld
inc
call
jp
subl
repz
out
push
dec
mov
daa
stc
push
insb
sub
pop
pusha
test
sarl
fistps
pop
movsb
hlt
cmp
fcomps
xchg
repnz
mov
aad
dec
aaa
mov
call
push
adc
push
or
dec
ja
mov
je
rol
mov
xor
mov
jecxz
leave
mov
mov
adc
cwtl
dec
sub
cs
dec
test
lods
cs
adc
test
popf
push
inc
ds
faddl
idivl
and
stos
lock
mov
aam
pushf
test
jg
test
ljmp
xor
loopne
xchg
cli
xchg
dec
cmp
cwtl
sbb
or
punpcklwd
fcmovnb
fcomps
inc
inc
or
push
and
lret
lods
push
and
arpl
cmp
add
in
lcall
in
jne
xor
adc
lods
gs
lea
jae
cwtl
pop
int
push
fldcw
pop
jmp
lret
icebp
inc
std
cmc
scas
movsl
cs
outsl
fisttps
mov
cmp
in
orb
mov
in
sbb
in
dec
cmpsb
cmpsb
dec
pop
testl
lock
sbb
add
mov
lods
aaa
das
std
pop
test
dec
insb
or
adc
pop
lock
xchg
inc
sbb
lods
jle
int3
cmpsb
xchg
jle
add
mul
xchg
outsb
lock
je
inc
or
mull
ss
out
pop
jg
lret
mov
inc
mov
imul
incl
ljmp
fstl
push
hlt
or
and
cwtl
mov
insb
jae
jge,pn
in
mov
fildl
inc
mov
imul
pop
and
adc
outsb
push
pop
lret
fldenv
inc
fcoml
out
leave
mov
stc
mov
fsin
jmp
and
shrb
ret
out
ret
scas
popf
test
jmp
push
ja
int
jmp
std
mov
pusha
mov
and
shl
mov
cmp
mov
in
jmp
lcall
xor
cmpsl
push
or
pop
or
ja
sbb
jmp
sbb
int3
adc
ljmp
sbb
adc
sbb
jecxz
and
xchg
sbb
mov
int
gs
adc
outsl
jg
fsub
or
scas
mov
pop
mov
add
into
out
fadd
stos
repz
mov
stos
sbb
xchg
test
mov
jne
clc
adc
mov
inc
xchg
push
out
mov
pushl
or
cli
clc
mov
push
xchg
in
mov
inc
arpl
xchg
dec
iret
loop
das
hlt
inc
test
pushf
cltd
and
mov
push
dec
daa
adc
xlat
mov
int
movsl
vaddss
dec
in
jmp
push
mov
jmp
xchg
inc
cmp
lock
inc
xor
sub
or
jnp
notl
add
out
ja
in
in
outsb
fsubr
dec
jns
gs
ror
push
inc
cmp
fadd
xchg
xor
inc
test
inc
cld
pop
std
push
pusha
jmp
icebp
pop
loopne
mov
or
adc
jne
inc
adc
decl
adc
ret
or
jnp
mov
cmp
xor
mov
push
dec
cmp
call
clc
repnz
andb
mov
sbb
bound
stos
mov
clc
pop
jb
mov
push
jns
in
push
lcall
test
decl
jg
mov
mov
int3
es
push
and
adc
jno
jbe
adc
and
cmc
mov
pop
sbb
pop
out
lahf
pop
das
mov
cmpsl
xchg
pop
idivb
mov
jne
daa
pop
pop
fisttps
mov
dec
mov
outsl
lret
ficoml
ficomps
fs
xchg
mov
adc
mov
jne
ds
push
cmp
add
sti
jg
add
cmp
jmp
out
mov
dec
sbb
mov
jg
push
cmpsb
add
pop
es
adc
in
scas
push
and
sbb
int
cltd
xchg
or
shl
loope
aaa
cli
incl
or
movsl
sub
mov
subl
outsl
hlt
insl
stc
dec
test
mov
pushf
out
fcmovb
jle
ljmp
sbb
into
xchg
dec
xor
test
pop
outsl
xor
push
and
mov
ljmp
inc
jnp
iret
mov
jae
sub
or
xor
shlb
arpl
in
repz
lods
ljmp
push
ja
xchg
add
loopne
incl
sub
mov
fbstp
out
out
jge
xor
decb
fcomip
pusha
inc
cmp
lock
aam
call
adc
xchg
loopne
mov
xchg
push
icebp
lds
dec
inc
cltd
jno
xor
test
andl
inc
jl
cmp
add
lea
fs
loopne
mov
in
mov
call
pop
ds
push
subb
stos
lret
or
ret
aaa
adc
dec
push
lret
mov
adc
test
inc
lret
mov
inc
popa
cmp
loope
add
sub
cmp
in
rcr
inc
xor
shrb
jmp
push
pop
jno
mov
loop
pop
adc
sub
mov
cs
filds
lcall
mov
mov
enter
hlt
lcall
inc
mov
leave
mov
adc
push
jnp
cmp
adc
repnz
mov
bound
cld
push
fucomip
push
push
push
sub
aad
insl
aaa
loope
jmp
mov
push
cmp
rep
arpl
pop
dec
sbb
jle
cmpsb
or
rol
clc
das
push
clc
test
and
rcrl
loopne
jmp
stos
cs
fistps
or
loopne
nop
outsb
xor
adc
inc
dec
jo
add
pop
push
mov
loop
inc
test
dec
pop
in
mov
jo
mov
or
dec
call
outsl
in
sbb
push
cld
and
stos
xchg
jbe
not
ret
ss
jg
add
fcomip
fdivs
outsb
rclb
subb
hlt
lret
call
ss
adcb
sub
pop
jne
call
jmpw
push
loop
sar
jmp
sub
jmp
int3
pushf
inc
push
ljmp
test
push
fsubrs
stos
mov
add
fistpl
jmp
rcll
mov
gs
sub
leave
std
or
xor
mov
out
cmpsb
mov
jno
xor
icebp
ror
mov
hlt
loop
mov
popf
pop
cmp
into
lret
mov
sbb
outsl
setg
mov
out
nop
pusha
push
cs
or
push
outsl
nop
fs
out
lock
outsl
jmp
aam
movsb
jbe
pop
sub
jnp
mov
inc
cs
pop
pop
loop
push
pop
filds
adc
repz
mov
mov
in
adc
inc
sbb
push
arpl
sub
ljmp
test
xchg
xchg
andb
mov
or
mov
adc
push
out
or
andl
loopne
push
xchg
sti
call
rorb
shlb
movsl
stos
mov
mov
es
cs
dec
fdivr
lods
aas
xchg
dec
xor
fisubs
mov
lock
inc
xchg
sub
xchg
mov
push
fistps
mov
push
push
pop
fwait
push
inc
pop
nop
jg
mov
cmpsl
mov
mov
lcall
sub
mov
add
rol
lods
xchg
inc
push
ds
cmc
arpl
ffreep
lods
mov
movsb
mov
ficoml
mov
push
repnz
sbb
inc
push
push
jecxz
out
jno
scas
xchg
jg
jae
call
push
adc
sub
mov
bound
dec
or
andb
es
movsl
test
jnp
cmpsl
ss
and
call
xor
pop
xor
xchg
loopne
push
sub
shr
out
add
and
or
xor
rorl
imul
push
ret
and
icebp
and
ds
bound
icebp
adc
es
clc
dec
pushl
out
scas
push
dec
cmpb
jle
push
adc
fisubrl
rcrb
sti
xlat
pop
push
repnz
adc
push
push
lods
fimuls
ljmp
add
xchg
pop
dec
pop
out
lahf
ja
pop
icebp
push
cmp
jge
adc
sti
or
lods
nop
bound
divb
das
nop
mov
lret
sbb
stos
out
or
or
daa
aam
mov
adc
jge
pop
dec
sub
call
sub
inc
in
out
xor
sbbl
aad
adc
sub
arpl
cli
fstpt
jecxz
imul
xlat
bound
jb
push
pop
mov
sub
lock
jo
and
push
call
shlb
push
xor
in
pushl
push
lret
xchg
inc
xchg
xchg
jle
decb
js
jl
decl
jno
jne
sbb
push
aaa
cmc
mov
das
and
sbb
cwtl
test
outsl
cmp
out
cmp
sub
mov
movsl
fiaddl
push
dec
xor
xor
dec
aas
bound
mov
lcall
sar
xor
push
push
lret
push
iret
dec
push
mov
test
pop
push
mov
outsb
sti
pushf
xchg
mov
sti
pushl
jle
xchg
jg
cmp
fldt
ret
imul
jge
repnz
mov
jne
cmp
in
mov
cmp
xchg
xchg
pop
and
ret
push
hlt
inc
in
outsl
bound
cmc
sbb
adc
fdivrs
call
mov
xchg
cmpsb
int
popf
mov
cli
mov
inc
dec
sub
or
sbb
fstpt
dec
sub
jecxz
inc
sbb
mov
scas
fistpl
jno
inc
mov
inc
dec
ss
cli
lcall
mov
inc
jle
jp
sbb
pop
push
fcoml
cmp
stos
popl
cmpsl
xlat
jecxz
sbb
pusha
cmc
mov
jg
cmp
add
mov
neg
lahf
lret
test
les
mov
sbb
lret
mov
mov
push
inc
and
push
movl
test
jg
push
mov
push
ds
movsb
pop
loopne
mov
fdivl
pop
not
lods
decl
ljmp
stc
leave
xor
enter
cmp
inc
shlb
shlb
xchg
or
push
ljmp
inc
jnp
loop
dec
loope
cs
pusha
cmp
movsl
test
loop
pop
clc
pushl
fcomps
adc
sub
in
into
loopne
xchg
cltd
lods
mov
sahf
je
aas
sbb
or
jg
xchg
das
inc
inc
mov
mov
push
cmpsl
push
pop
sub
xchg
rcll
jg
stc
jecxz
lcall
and
mov
pop
push
or
test
jg
mov
jae
push
inc
enter
test
mov
push
and
xchg
lret
add
mov
popf
out
xor
or
popa
rol
xchg
scas
fnsave
push
mov
out
sarl
push
dec
mov
cmp
subl
cmp
hlt
stos
xchg
shl
jg
lcall
psubw
mov
pop
inc
add
adc
das
jo
clc
xchg
shrb
shrb
push
jmp
xchg
xor
decl
and
mov
jb
dec
cs
push
subb
mov
sub
jg
hlt
scas
test
cmp
mov
sub
mov
mov
jle
dec
jg
mov
pop
xchg
pop
sub
icebp
incl
adc
lods
mov
sub
fucomip
ja
pop
jbe
fnstenv
out
mov
sar
cltd
push
cmp
scas
into
sahf
pusha
sbb
or
ljmp
lock
sti
aad
fsts
mov
dec
add
call
mov
mov
enter
js
movsl
ljmp
and
rorl
es
ret
adc
out
lods
rorl
sarl
aaa
clc
lcall
data16
jle
xor
jmp
cmc
jg
cli
out
ret
lret
test
cmpsl
inc
sbb
and
ficomps
aas
lcall
xlat
lahf
sbb
mov
addl
mov
add
mov
sub
push
sahf
xor
fdiv
cwtl
popf
ja
xchg
push
sbb
xchg
push
mov
stc
mov
mov
jb
test
mov
enter
icebp
pop
call
cwtl
xlat
sub
fcomps
sub
std
incl
xchg
lods
in
sub
lea
cmp
push
add
mov
sub
lock
jae
in
cwtl
xor
ret
aad
mov
das
jno
mov
faddp
mov
jmp
xor
hlt
ret
jmp
insl
es
and
xchg
xchg
pop
ret
call
cli
aas
cmp
pop
loopne
arpl
cmp
adc
or
adc
jecxz
adc
xor
cli
push
in
or
mov
pop
ss
push
adc
aaa
outsb
push
cld
je
lods
popf
cwtl
pop
clc
outsl
je
and
shrl
jecxz
lds
mov
pop
pushf
pop
data16
call
dec
stos
xor
stos
mov
mov
lea
adc
mov
lds
out
or
mov
loopne
adc
xchg
mov
cmp
mov
push
inc
cmp
hlt
pop
call
jl
xor
xor
mov
mov
shlb
jg
push
xchg
cmpsb
sbb
mov
cmp
divl
fcmovnu
lds
sub
int
popf
addl
xchg
call
add
addr16
fmul
sbb
cmpsb
pop
pop
cs
das
cwtl
add
jmp
mov
fisubrl
jp
inc
xchg
xchg
insl
daa
push
pushf
or
or
push
push
shrb
out
push
rcl
xlat
mov
mov
repnz
fcomps
cs
mov
incl
arpl
aam
push
js
cmp
lret
enter
mov
das
mov
repnz
ja
lds
jecxz
test
js
mov
daa
shll
int3
cmpsb
shrb
sti
lcall
lods
fisubl
cltd
dec
pop
xorl
bound
jg
inc
sbb
lret
pop
cmp
iret
das
icebp
in
outsl
mov
ret
test
and
jp
scas
mov
mov
aaa
mov
insl
cld
repz
insl
push
sbb
add
pop
and
in
movsb
je
sub
cs
xor
out
dec
cld
incl
rcll
pop
dec
cmp
stc
out
cs
mov
push
sbb
loopne
bound
xor
in
add
pushf
sbb
adc
mov
dec
jo
add
aas
jl
shll
jle
mov
imul
add
out
call
shl
fisttps
and
clc
mov
dec
xor
clc
mov
das
icebp
fildl
sub
mov
jle
jmp
aas
das
jp
lock
mov
sbb
scas
sti
cmp
out
fistl
aaa
bound
push
fwait
cwtl
mov
inc
add
add
jge
xor
or
cmp
lret
sbb
cmc
lea
mov
loope
aaa
arpl
inc
mov
add
mov
loop
xchg
push
repnz
fdivrl
xchg
int3
idivl
jae
ja
pop
inc
sbb
add
sub
mov
stos
and
pop
mov
mov
outsl
stos
rcrl
mov
jmp
mov
fisubrl
adc
jle
fdivrs
mov
stc
jg
push
jg
or
in
cmp
into
outsb
in
loope
aas
outsl
arpl
mov
dec
pop
cs
pushl
sahf
fs
movsl
insb
aas
fidivrl
movsb
movsb
call
lret
sbb
pop
and
aas
mov
xorb
add
inc
lea
clc
repnz
push
pop
ljmp
xchg
fsubl
and
rorb
fimuls
flds
push
lock
jg
lcall
std
std
adcl
or
jnp
out
iret
rorb
sub
add
lcall
ss
cld
lahf
mov
in
mov
cmp
push
push
lcall
mov
sbb
mov
pop
fldl
sbbb
cmpsb
iret
jecxz
xchg
std
lcall
mov
loopne
ret
enter
jo
jmp
adc
inc
insl
mov
xchg
das
lret
ljmp
mov
ret
jo
rcrl
push
adc
aas
daa
shl
mov
push
fmuls
ljmp
in
call
sub
mov
pop
and
popa
inc
mov
inc
mov
xchg
xchg
and
mov
orb
add
sub
incl
xchg
insb
mov
dec
dec
cmpsb
into
ret
lahf
push
push
xchg
pop
mov
cmp
jge
cmp
loope
dec
inc
mov
adc
push
int
mov
mov
lcall
xor
adc
out
outsl
jbe
and
jmp
hlt
inc
or
out
arpl
fiadds
aaa
aas
xchg
xchg
insb
scas
add
jb
movl
insl
jno
add
mov
das
out
pop
push
sbb
jge
mov
dec
inc
scas
and
aam
push
lret
fsubl
adc
test
stc
call
loope
fs
jge
movsl
je
push
jb
stc
or
fstl
daa
das
mov
fmull
mov
ret
mov
jg
push
dec
das
jge
outsb
shll
aas
mov
mov
in
inc
lea
insl
ljmp
mov
test
mov
add
mov
ss
dec
xchg
jmp
xchg
mov
int3
sbb
dec
andb
jg
cld
inc
mov
jns
clc
xor
lret
and
aaa
pop
mov
mov
dec
lahf
mov
in
clc
dec
dec
icebp
and
aam
into
insl
cld
jg
fisubrs
and
insl
jno
lcall
sbb
mov
leave
lret
lods
mov
push
pop
adcl
mov
sti
incl
incl
mov
mov
test
ret
mov
out
add
pop
js
adc
lods
jge
mov
dec
jne
call
out
fisubrl
adc
test
cmp
incb
out
sbb
ret
sub
popa
ret
dec
inc
stos
inc
lds
jmp
pushf
jl
test
inc
xor
dec
out
mov
ret
mov
dec
mov
rol
int
pusha
loope
xor
ja
push
sti
ret
lahf
int3
mov
and
insl
add
jg
loopne
xchg
push
aad
pop
pushf
roll
popf
add
mov
inc
or
insl
je
add
add
fstl
in
insl
fcompl
fisttpl
daa
leave
mov
icebp
decl
ret
jge
xchg
mov
lret
scas
mov
and
incl
push
nop
in
mov
cwtl
dec
dec
gs
aam
push
shlb
sub
outsb
xchg
xor
lret
stos
je
xchg
andl
mov
dec
sub
pop
cmp
pop
inc
pop
add
js
or
dec
in
jns
mov
outsb
and
jmp
add
fcmovnu
and
outsl
jmp
jbe
lds
aad
lcall
xchg
push
mov
test
adc
inc
stc
adc
cmpsb
lahf
shll
inc
enter
inc
jg
xor
dec
mov
mov
jno
dec
data16
jp
lock
jo
iret
outsb
xchg
loope
xor
popa
push
mov
decl
jbe
xchg
fsubl
jbe
cmp
inc
stos
lock
mov
mov
sbb
aad
sub
xor
scas
cs
or
fists
std
decl
cld
dec
lea
mov
leave
mov
xor
outsb
push
xabort
stc
call
adc
mov
mov
outsb
xchg
loope,pt
cmp
mov
outsb
jb
dec
jbe,pn
xchg
xor
imul
fdivl
xchg
cld
xor
or
fwait
js
pop
std
data16
xor
lock
lcall
dec
outsb
cmc
mov
mov
cmpb
sub
es
fcomp
test
and
cltd
or
push
jae
das
mov
jg
dec
scas
gs
mov
xchg
outsb
out
xor
bound
mov
dec
mov
outsb
xchg
insb
cmc
fidivl
movsb
mov
in
inc
stos
and
xchg
lods
stc
loope
out
test
in
jge
push
aaa
push
mov
loope
xchg
decl
call
adc
stos
loope
fmuls
sbb
pop
repnz
out
dec
imul
sub
sub
call
cmpsl
into
outsb
fidivrs
loope
jle,pt
sub
push
dec
js
ja
mov
outsb
fidivrl
movsb
cmpsl
out
jg
push
stos
push
int
jl
decl
cmp
pop
js
jo
jo
adc
jle
fld1
add
aad
adcl
fnstcw
dec
mov
inc
xchg
dec
push
ret
data16
mov
decl
fnsave
daa
out
das
dec
outsb
mov
loope
xor
dec
inc
jbe
xchg
cld
addr16
arpl
lret
mov
test
mov
aaa
cwtl
sbb
in
stc
or
pop
es
jne
call
xor
cs
mov
stc
mov
ljmp
pop
pop
dec
inc
shrl
add
pop
jle
lahf
mov
bswap
jl
sub
fstpl
fbstp
lock
lret
jb
and
incl
std
mov
jno
dec
xor
pop
mov
pushl
stos
xor
xlat
sbb
ds
pop
mov
ds
in
pop
and
jmp
decl
and
shl
cmpsb
jg,pn
mov
rcrl
inc
push
jmp
out
push
rclb
sub
shlb
mov
outsb
xor
inc
jecxz
jge
inc
frstor
ds
mov
xchg
ret
mov
sti
lea
cmp
int
sub
icebp
lahf
popa
lea
decl
das
mov
push
xor
fiadds
xchg
jnp
lcall
data16
mov
ja
push
jnp
or
in
lret
scas
mov
mov
clc
mov
outsb
mov
loope
xor
frstor
outsl
push
mov
dec
mov
outsb
aad
fucom
out
lahf
jecxz
or
shll
in
out
outsb
mov
and
popa
cmpsb
and
adc
inc
test
repz
pop
adc
pop
mov
fisttpl
jmp
call
cli
mov
into
pop
js
cmp
inc
push
sub
sbb
decl
nop
mov
outsb
add
jae
dec
frstor
insb
push
mov
sbb
sub
lcall
out
xor
dec
stos
ret
leave
ja
test
mov
dec
xor
mov
push
mov
pop
sahf
rcrb
cs
pop
andb
outsl
jb
sbb
leave
sarb
stc
inc
nop
and
push
sarb
lods
cmp
sar
cmp
adc
sbb
and
sub
inc
ds
ds
xchg
ds
rorl
stos
ds
mov
ds
idivb
cld
xor
mov
push
aas
mov
aas
add
mov
fucomip
xorb
xor
xor
xor
xor
xor
xor
xor
xor
outsl
sub
nop
xor
xor
xor
xor
xor
ljmp
xor
xor
xor
scas
xor
xor
xor
xor
xor
mov
sbb
aas
xor
ret
adc
inc
ss
imul
incl
xchg
movsb
ss
into
ss
sub
xor
aaa
jg
nop
aaa
xchg
aaa
mov
mov
pushl
fdivs
icebp
aaa
inc
cmp
cmp
loop
cmp
cmp
cmp
cmp
cmp
inc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
aaa
fildl
mov
dec
dec
aaa
mov
xchg
cmp
cmp
jg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
call
push
ds
ds
ds
ds
ds
aas
or
xchg
pop
cmc
dec
push
or
xchg
xor
xor
dec
xor
jp
rorb
xor
xor
xor
xor
xor
xor
cmp
call
jmp
mov
fbld
pop
aaa
data16
jb
jge
mov
aaa
aaa
xlat
aaa
fidivs
in
ljmp
incl
cmp
cwtl
cmp
cmp
popa
cmp
cmp
pop
jg
fstpt
xchg
xlat
cmp
sbb
daa
cmp
cmp
push
cmp
push
cmp
cmp
cmp
cmp
cmp
test
int3
jns
mov
aas
xchg
aas
mov
aas
mov
decl
clc
test
dec
xor
insb
xor
xor
incl
xor
xor
xor
lds
sbb
xor
pop
and
xchg
xor
xor
xor
pop
xor
mov
xor
fidivs
aaa
cltd
aaa
stos
aaa
aaa
out
cmp
fwait
jae
pushl
and
cmp
jne
jnp
cmpl
lds
cmp
cmp
cmp
cmp
cmp
cmp
cmp
fnstcw
sti
jg
out
pushl
cmp
cmp
jle
test
mov
into
cmp
cmp
cmp
cmp
mov
ljmp
stos
aaa
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jl
cmp
fnstcw
sub
cmp
jb,pt
xchg
ds
jmp
aas
push
aas
outsb
aas
jne
cwtl
aas
int3
aas
repnz
lock
loopne
clc
mov
dec
xor
insl
xor
scas
incl
aas
hlt
xor
or
pop
xor
sub
xor
dec
xor
jmp
xor
mov
mov
lret
xor
xor
xor
xor
xor
xor
mov
add
call
xor
xor
xor
xor
imul
pushl
jns
xchg
xor
xor
xor
xor
xor
xor
push
xor
xor
xorb
xor
hlt
dec
pop
jecxz
inc
xor
add
data16
xor
xor
xor
xor
icebp
inc
in
xor
xor
xor
pusha
fidivs
fcomip
clc
ss
add
sbb
cmp
inc
stc
imull
das
cmp
push
inc
or
bound
xchg
cmp
aas
push
loope
jmp
pushf
xor
xor
xor
xor
xor
xor
outsl
lock
jg
xor
xor
xor
xor
xor
xor
xor
xor
xor
mov
mov
cs
out
hlt
xor
xor
outsl
lcall
xor
stos
xor
push
mov
adc
inc
push
ss
jmp
outsb
ss
jp
xorl
loopne
or
jnp
out
decl
add
cmp
rorl
cmp
pop
incl
cmp
cmp
cmp
cmpsl
outsb
mov
cmp
cmp
mov
jno
xchg
cmp
sarl
imul
jmp
mov
aas
jb
ja
cmpsl
aas
mov
mov
fidivs
ljmp
stos
or
adc
das
adc
inc
xor
pop
jg
sbb
mov
xor
xor
xor
fisttps
xor
xor
xor
xor
mov
aaa
xor
xor
xor
xor
xchg
loope
fdivl
call
xor
xor
rcrl
loopne
in
push
cld
outsl
out
xor
xor
xor
xor
lahf
cmp
inc
sub
or
cmc
int
sub
inc
xor
xor
test
cmp
pop
inc
gs
addr16
aaa
daa
add
sub
stos
fcomps
idivb
lret
rcrb
jnp
mov
cltd
aas
pop
pop
popf
cmpb
rcrl
outsl
mov
cmp
popf
fstps
cltd
cmp
add
out
aas
leave
inc
add
jl
inc
mov
sbb
or
add
add
push
cmpb
fdivs
or
pop
js
pop
xor
inc
repnz
mov
and
cmp
push
add
ss
aaa
loopne
cs
or
pop
jle
sub
nop
jmp
jge
inc
gs
sahf
popf
dec
fs
and
add
cmp
jnp
or
and
jb
lret
cmovbe
repz
daa
ret
push
out
adc
or
sub
ret
add
adc
jmp
nop
fdivrl
and
add
pop
add
jl
and
push
add
pop
enter
inc
and
lahf
xchg
cmpsl
nop
sbb
add
or
and
and
add
add
hlt
cld
pop
inc
adc
in
in
add
addb
xchg
dec
leave
lods
pop
imul
xchg
push
vpcmpeqb
and
fldcw
push
push
sbb
jl
and
and
push
nop
and
adc
nop
add
inc
and
xorl
sub
xchg
xchg
mov
jl,pn
and
adc
jmp
mov
and
add
mull
sbb
adc
enter
jmp
idivl
add
xor
insl
out
testb
adc
add
or
xor
int
adc
and
and
out
cmp
test
add
add
pop
repnz
add
add
xor
xchg
lahf
xor
and
leave
or
xor
adc
das
addl
ret
lods
xchg
adc
fcoms
repz
push
jmp
dec
jo
aaa
and
add
sbb
and
arpl
fistl
rolb
xor
jmp
pushf
nop
xchg
jl
xor
xor
xor
sbb
add
repnz
xchg
addb
inc
and
enter
and
mov
push
pop
mov
mov
or
movsl
or
cmp
int3
pusha
jp
pushl
lock
and
add
ret
int3
mulb
adc
outsb
mov
mov
add
mov
jnp
les
ja
leave
or
les
arpl
mov
mov
fcoms
inc
shl
cmp
adc
push
sub
push
xlat
cmp
mov
test
push
lods
jnp
push
inc
dec
lock
outsb
fcmovnb
int3
add
sbb
shr
out
testb
dec
pop
pop
push
sti
insb
pop
lock
sbb
pusha
or
jno
and
loope
hlt
xor
add
mov
sbb
push
jno
mov
jmp
lcall
xchg
adc
and
jbe
or
mov
out
sbb
inc
inc
sbb
shll
mov
sbb
in
jno
inc
ficomps
andl
enter
xor
pop
mov
and
decb
mov
mov
or
repnz
hlt
imul
push
xor
fs
dec
add
jae
fisttpl
gs
insb
sbb
dec
add
mov
jb
inc
icebp
inc
jg
mov
in
or
rorb
nop
loopne
loope
shll
gs
dec
dec
shll
gs
add
xor
insl
gs
rol
faddl
mov
pop
push
jns
adc
ds
popf
cmp
cmp
out
add
add
dec
call
adc
push
call
mov
popf
je
cmp
jno
dec
push
testl
jmp
enter
mov
enter
xor
stc
add
xor
sahf
push
cmp
xor
dec
mov
cmp
add
sbb
mov
inc
repz
adc
push
xchg
negb
pop
push
jno
pop
dec
xor
mov
xor
sub
js
or
xor
push
cld
inc
inc
xor
xchg
or
jle
leave
ret
in
repnz
clc
std
inc
mov
cmp
xchg
cmp
je
jmp
or
xchg
dec
inc
es
sbb
push
icebp
push
std
in
jl
push
ljmp
or
mov
push
push
cmp
jecxz
inc
jmp
cmp
idivl
fisttps
mov
sbb
jl
lock
ja
pop
xchg
mov
mov
repz
add
insb
sub
and
sub
mov
mov
pop
xchg
fldcw
push
shl
outsb
jae
sub
lock
repnz
mov
insb
xlat
popa
push
fs
xchg
gs
arpl
inc
shll
loop
lret
mov
mov
arpl
or
jbe
fs
sti
xor
call
pop
xor
addr16
inc
lcall
sub
je
dec
mov
leave
lret
mov
int
into
jp
cmp
cmp
rcl
rcrb
cmp
mov
sub
dec
movb
sbb
sbb
imul
int3
sub
or
into
jns
std
inc
std
das
mov
data16
ja
xor
icebp
push
aad
jne
add
push
cwtl
loopne
incl
xchg
sti
mov
sti
sbb
dec
outsb
pop
push
push
inc
sub
mov
fs
xor
data16
add
dec
push
outsl
ret
jge
inc
shll
inc
mov
jns
jne
and
popf
sar
js
ljmp
inc
movsl
ljmp
sti
les
orl
decl
jne
in
lock
and
push
in
lods
and
push
mov
inc
leave
mov
jmp
insb
cmpb
js
ds
incb
inc
mov
xchg
inc
inc
inc
inc
xchg
xchg
xchg
xchg
fs
mov
addr16
inc
jo
popf
mov
xchg
mov
jb
fxch
nop
push
xchg
std
pop
xchg
std
inc
mov
xchg
std
xchg
std
xchg
std
xchg
std
pop
cs
dec
lret
mov
jnp
js
jo
in
mov
mov
lcall
shrb
icebp
inc
ret
cmpsb
xor
xchg
cmp
inc
shll
inc
rclb
dec
xor
cmp
mov
dec
xchg
call
insl
test
xchg
and
cld
dec
or
sar
in
xor
push
out
pop
aaa
pop
and
ja
repz
hlt
inc
jp
xor
div
call
loopne
insb
movsl
inc
js
inc
xor
sub
pop
or
cli
inc
shll
xchg
xchg
xchg
cwtl
push
inc
fwait
insl
cltd
outsb
add
fwait
sub
jae
jns,pn
xchg
gs
outsb
insb
pop
xchg
gs
popa
jne
arpl
rol
fs
shll
jno
outsl
or
xor
imul
enter
gs
dec
xchg
gs
outsl
jb
rorl
gs
shrb
mov
cmp
das
jmp
outsl
lcall
in
out
std
xchg
push
add
pop
add
fwait
out
and
add
aam
add
fxch
and
enter
mov
xorb
scas
pop
jmp
adc
mov
xchg
mov
or
jmp
rol
in
and
pop
inc
mov
mov
mov
arpl
or
mov
lds
fldt
push
xchg
xchg
mov
repnz
cmp
iret
jge
or
sub
mov
adc
jne
or
aad
adc
hlt
jbe
dec
or
sbb
and
jle
xor
add
repnz
push
or
add
fmuls
das
push
and
loopne
add
pop
insl
xchg
sbb
repz
mov
hlt
es
enter
mov
shlb
pop
add
fistpl
and
push
sbb
mov
ret
js
mov
add
and
shlb
aaa
dec
mov
push
ja
push
push
stc
out
int3
jg
bound
xor
sbb
or
ja
call
into
cmp
sbb
leave
pop
mov
push
fstpt
inc
fdivrs
or
mov
or
jo
shlb
add
mov
pop
pop
out
mov
inc
sbb
push
repnz
push
sub
enter
and
test
sbb
mov
je
loopne
adc
nop
cmpsl
inc
add
inc
and
pop
push
inc
popf
pop
inc
and
or
inc
xchg
mov
xchg
jl
push
push
and
or
jmp
and
jns
pop
out
movsb
add
movsb
hlt
pop
enter
sbb
push
and
mov
leave
jnp
push
add
subl
mov
inc
pushf
int3
add
idiv
adc
sub
add
dec
test
enter
mov
mov
jge
cwtl
inc
and
add
std
add
add
fdivs
or
mov
pop
push
inc
and
ss
push
xor
shll
insb
je
cwtl
shll
shl
cmpsb
imul
cmpsb
imul
shll
add
shll
dec
pop
bound
jne
xchg
dec
stos
pop
add
xor
cmp
xor
add
pop
xor
mov
adc
fwait
xor
add
xor
inc
pop
dec
dec
jo
adc
and
adc
mov
or
call
mov
outsl
pop
or
sbb
jo
outsl
lock
outsl
jne
jae
adcb
imul
jge
mov
lcall
js
imul
lods
js
push
dec
pop
clc
mov
push
dec
inc
push
sub
push
push
dec
sub
adc
adc
xchg
pop
ss
divb
adc
rolb
in
adc
inc
mov
movsb
inc
push
xchg
enter
movsb
or
jns
dec
sbb
test
xchg
ja
inc
and
cmpb
addb
adc
inc
nop
adc
aaa
xchg
and
popa
mov
dec
or
fwait
mov
pop
packsswb
add
sbb
in
sbb
mov
inc
xor
mov
test
pusha
or
sbb
pop
test
adc
cltd
jno
movsl
in
or
insl
sbb
push
or
fisubl
mov
or
adc
push
addr16
inc
jae
cmp
popa
stos
adc
lcall
outsb
pusha
mov
outsb
jb
and
adc
mull
push
dec
adc
roll
sub
push
and
and
push
add
mov
add
mov
mov
dec
push
repz
cld
inc
add
cmp
insl
insl
dec
jae
addb
jp
dec
push
push
xor
add
inc
xlat
or
add
punpcklbw
in
add
add
es
inc
lcall
xor
sbb
cld
aaa
pop
xchg
or
fsubs
test
mov
shrl
out
lock
cld
add
dec
sbb
sub
ss
shll
pop
out
clc
or
imul
xor
jge
add
mov
add
jle
add
xchg
lock
adc
add
test
fwait
dec
ss
mov
push
push
add
pop
push
ret
or
pop
lea
sub
jb
jne
sbb
sbb
shufps
stos
pop
adc
addl
adc
jne
or
add
pop
in
popa
lea
mov
sbb
push
xor
jnp
int3
xor
bound
arpl
movq
jae
jo
jp
sbbl
dec
ret
push
xor
loop
lret
je
add
fistpl
data16
xor
je
shrb
cltd
stc
cmovno
imul
dec
outsl
sbb
jae
jmp
pop
or
pop
sbb
xor
imul
mov
insb
sub
xor
fistpl
pop
or
add
xlat
jne
dec
inc
cmovns
add
xchg
int
out
imul
jmp
add
xor
loope
sub
add
push
inc
addr16
pop
jecxz
mov
jns
and
mov
cmp
xor
jecxz
inc
jmp
insl
add
outsb
inc
jae
and
mov
popa
jns
popa
and
ss
cmp
add
addr16
xlat
jne
jg
inc
imul
xchg
or
notl
sbb
sub
add
push
jmp
gs
jb
cmp
fnstenv
xor
popa
lea
outsb
xchg
insb
popf
xchg
pop
iret
jge
scas
dec
or
lds
popf
sbb
or
addr16
pop
adc
xchg
xchg
outsb
jae
pop
xor
xor
cmpsb
fcmovnu
gs
push
sub
shll
insb
or
daa
dec
dec
sub
fs
xlat
outsb
xchg
mov
jl
in
push
daa
jbe
mov
ret
fs
outsl
pcmpeqw
lret
je
and
xor
inc
push
imul
and
arpl
loope
push
insb
cmpsl
xchg
out
add
sbb
xchg
lock
cli
push
dec
scas
es
xor
xor
jg
xor
inc
xor
cli
xor
pusha
xor
lea
stos
xor
xor
xor
xor
jns
mov
fwait
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
sub
out
divb
xor
incl
xor
dec
ss
jg
mov
fwait
ss
aaa
xorb
aaa
pushf
aaa
mov
ljmp
cmp
cmp
push
cmp
cmp
cmp
cmp
cmp
cmp
cmpl
xchg
mov
lods
cmp
cmp
cmp
aaa
mov
insl
cmp
out
cld
cmp
adc
fisttpll
clc
jo
cmp
dec
xor
jp
mov
xor
xor
xor
xor
jne
jg
test
mov
lahf
xor
and
xchg
sub
or
xor
add
fbld
ss
out
divb
and
aaa
mov
cmp
cli
pushl
cmp
cmp
cmp
cmp
cmp
cmp
cmp
add
std
sbb
xor
sub
add
xchg
and
inc
jno
nop
xchg
and
and
xchg
or
mov
fcoms
mov
mov
adc
out
push
popa
add
pop
inc
add
sbb
pusha
add
testb
jae
jne
pop
gs
inc
outsl
data16
hlt
xchg
add
sbb
push
push
inc
stos
add
push
push
test
sub
mov
rcr
es
add
jbe
in
int
pop
pop
dec
movlps
add
add
or
dec
imul
sub
xchg
test
xchg
add
adc
push
leave
pushf
es
stc
inc
cmpsl
pop
pop
cld
popf
add
je
imul
rolb
stos
dec
stos
addb
add
add
mov
lods
sub
sbb
jle
repnz
sidtl
outsb
or
cmp
aaa
aaa
pop
push
and
add
dec
add
push
insl
and
adc
xor
dec
mov
xchg
push
dec
and
or
xchg
sub
call
jnp
and
push
call
les
dec
add
cmp
and
adc
jbe
leave
mov
add
add
orb
andb
inc
add
add
add
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
