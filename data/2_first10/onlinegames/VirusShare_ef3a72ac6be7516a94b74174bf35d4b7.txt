sbbl
cmpsl
cld
mov
pop
pop
xchg
gs
dec
aas
das
sbb
xor
sarl
sub
mov
jae
gs
push
sub
mov
dec
cmp
sbb
mov
lahf
cld
scas
ror
gs
add
jns
insl
cld
arpl
incl
out
jmp
add
mov
lea
rcrl
js
js
xchg
repnz
stos
mov
out
adc
add
lcall
lea
cwtl
lcall
lcall
mov
fimull
xchg
lcall
xchg
xchg
sahf
adc
dec
adc
out
lcall
daa
mov
iret
enter
mov
iret
cmpsl
lcall
ret
jmp
lock
fwait
fwait
shlb
testl
pushf
adc
enter
pushf
in
add
es
lret
je
jle
xchg
idivl
jg
and
movsb
sub
adc
pop
test
mov
test
por
push
lods
cmp
mov
lcall
aaa
mov
hlt
xor
push
movsb
shll
xchg
xor
and
push
sub
mov
xchg
inc
xchg
sub
sub
daa
mov
es
enter
mov
cld
push
mov
cld
mov
mov
sbb
mov
rorb
cld
adc
call
mov
lret
or
and
mov
or
pop
push
mov
add
dec
add
cld
add
xchg
scas
add
jl
cld
pop
cmp
pushf
adc
out
mov
pop
aaa
out
jo
int3
or
pop
les
mov
add
imulb
je
adc
je
idivl
mov
int3
aas
adc
jb
addr16
cmp
adc
pushf
cli
xlat
stos
scas
test
ljmp
movsb
dec
and
inc
ljmp
jmp
dec
and
and
in
icebp
repz
out
pop
rolb
mov
or
mov
je
aas
repnz
mov
jl
jecxz
insb
ljmp
add
sti
xchg
mov
inc
or
in
test
adc
mov
test
loop
inc
mov
mov
cmp
xchg
stc
paddw
decl
dec
adc
cld
xchg
mov
dec
mov
dec
icebp
test
inc
int3
and
or
loop
inc
dec
xor
fbld
pop
les
test
shrl
or
dec
xchg
loop
out
jl
mov
jb
and
mov
scas
repz
jmp
sbb
movsb
dec
mov
fdivrs
mov
popf
test
call
mov
and
sub
lcall
stos
les
push
test
repz
fsubr
repnz
out
pop
scas
jae
sub
cmpsl
dec
iret
in
xor
test
data16
mov
xlat
bnd
repz
loopne
repnz
jo
dec
shlb
testl
cmpsl
pop
dec
inc
in
in
repz
cmp
jns
enter
sti
movsl
xor
int3
addr16
xchg
hlt
jecxz
inc
mov
neg
lcall
aaa
leave
sahf
ss
mov
dec
mov
hlt
idiv
mov
fwait
mov
out
cmp
pop
push
adc
and
or
clc
fcomip
je
push
popf
dec
cmp
sub
in
stos
jmp
add
pop
jp
out
stc
jne
sub
mov
mov
jmp
loopne
sbb
aas
jge
fidivrs
stos
dec
pmulhw
dec
jp
cld
std
ljmp
iret
jmp
lock
ljmp
jmp
jb
push
stos
pop
in
xchg
xchg
lods
out
cli
inc
sub
and
jb
ja
cli
movsl
in
mov
aad
pop
or
fildl
dec
test
cmp
aam
pop
add
outsl
ljmp
push
pop
and
cmp
ds
mov
scas
and
mov
lods
cmp
inc
mov
mov
mov
mov
stos
fsubs
pop
enter
out
pop
dec
shrb
or
or
sti
test
add
repnz
add
sub
mov
mov
or
lods
test
jb
jmp
scas
sti
jg
pop
out
aas
inc
out
inc
adc
loopne
inc
push
repnz
cltd
push
inc
xor
lods
push
daa
and
add
xchg
or
movsb
jne
cld
js
and
clc
lret
xchg
push
ljmp
xlat
dec
mov
pop
popa
inc
jecxz
ds
pop
and
cmp
dec
test
loope
mov
ljmp
cli
sub
iret
test
adc
lods
dec
cmpsl
xchg
ljmp
jns
out
cmp
dec
call
jne
cmpsl
mov
adc
and
sub
add
xchg
jae
adc
sub
cmp
test
inc
pop
cmpsb
add
dec
lret
movsb
dec
stc
fimuls
mov
lret
mov
cld
mov
mov
lret
lcall
mov
mov
mov
xchg
cmc
mov
pop
jmp
cmpsb
mov
add
cmpsl
jbe
dec
cli
hlt
adc
pushf
loope
lods
pushl
cld
ljmp
ss
imul
into
sbb
scas
or
out
inc
ljmp
hlt
jno
inc
fwait
or
sub
add
aaa
cli
mov
adc
in
stc
xor
xor
rorl
dec
xor
js
xchg
ja
cs
lods
in
xchg
in
inc
add
add
adc
mov
xchg
sub
jb
ljmp
test
cld
add
mov
ds
aas
cli
lret
xchg
mov
cmp
inc
jnp
lea
cltd
clc
je
pushf
cmp
lock
pop
loop
add
xor
popf
xor
mov
fwait
pop
add
imul
in
sub
push
sub
xchg
repnz
aas
inc
test
add
add
push
ljmp
cltd
add
push
or
pop
push
xor
xlat
das
xchg
inc
push
and
inc
dec
xlat
inc
and
insl
jb
adc
hlt
xchg
dec
test
or
fcoml
hlt
leave
xlat
push
xchg
hlt
in
fcomi
dec
or
mov
nop
cmpsl
xchg
gs
xchg
mov
mov
shrb
mov
hlt
xchg
push
int
cmp
ds
cmp
sub
jg
jmp
cmp
jmp
and
cmpb
add
mov
jns
xchg
push
cmp
daa
push
jl
aaa
xchg
jae
pushf
shr
xchg
add
push
mov
shll
outsl
add
scas
daa
dec
adc
stc
pop
mov
popf
shl
xchg
cld
ret
jno
popf
subl
fnsave
jnp
ja
scas
insl
jl
ds
mov
popf
inc
add
jb
scas
stc
pop
inc
scas
cmp
xchg
mov
push
ret
out
je
cmp
in
lods
fadd
fwait
dec
pop
jns
cs
sbbl
lds
inc
pop
xor
int3
jl
jno
adc
popl
push
adc
adc
movhps
ret
inc
jle
enter
pop
repz
or
sub
int3
mov
mov
ficoml
dec
enter
add
mov
xor
sub
jge
lahf
ret
jmp
hlt
daa
std
sub
out
xor
out
jae
outsl
jb
jl
outsl
cli
imul
scas
ret
sbb
sub
rorb
test
mov
aam
je
repz
push
movsb
lahf
jbe
sbb
mov
std
daa
push
xchg
in
xor
mov
fcoms
jl
mov
mov
aad
cmpsl
dec
ja
add
and
mov
mov
mov
cmc
imul
push
nop
mov
sti
stos
cmpsl
cmp
mov
std
jmp
push
push
repnz
in
cld
ljmp
pushl
lahf
jl
inc
sti
cld
add
inc
loopne
mov
pop
cld
icebp
loopne
icebp
decl
xor
inc
mov
stos
xchg
add
push
nop
cwtl
lea
xchg
xchg
nop
mov
popf
lcall
mov
mov
fists
repnz
fstpt
imul
cld
push
push
inc
data16
cmp
loopne
adc
dec
data16
adc
testl
xchg
enter
adc
scas
mov
out
jbe
dec
icebp
fdivp
dec
adc
es
stc
repz
clc
sar
out
cld
lcall
call
lahf
push
aad
out
clc
pop
cmp
stc
incl
test
jp
mov
mov
sti
mov
push
or
popf
mov
add
lahf
jg
rcrl
aas
in
lods
add
adc
lea
cmp
std
jecxz
fcomps
hlt
mov
ds
into
or
das
sbb
xor
fs
loopne
rclb
sar
cmp
adc
iret
add
aad
mov
mov
gs
xchg
gs
dec
inc
xor
push
xchg
mull
mov
push
inc
pop
cmpsl
jno
test
fwait
stos
mov
cwtl
gs
imul
sub
xchg
sahf
sar
into
and
cli
loop
dec
fidivl
dec
fisttps
iret
int
aad
int3
fstl
rclb
addr16
or
cli
xchg
ret
mov
in
fldenv
inc
xlat
jle
xlat
jp
pop
xor
imul
data16
repz
or
in
out
out
xchg
idiv
shll
frndint
cmc
jmp
test
jmp
mov
jmp
arpl
jmp
mov
jmp
out
fs
jmp
aaa
out
jmp
stc
jmp
out
daa
mov
out
jecxz
mov
pop
and
daa
xor
dec
mov
cmc
add
ficoml
int
test
or
test
xor
ret
mov
jl
out
jne
cmp
stc
mov
test
scas
cmp
sub
lock
inc
add
rcl
cmp
stos
pushf
and
in
lahf
dec
scas
stc
pop
fucomi
xchg
out
jnp
mov
sub
inc
lahf
js
aas
sub
mov
rorb
mov
pop
sbb
in
gs
xor
sbb
pop
add
lret
sbb
push
fbld
repz
int3
and
mov
fwait
fwait
dec
imul
lret
jg
les
out
lods
pop
pop
aaa
dec
and
in
inc
stc
pop
rolb
mov
jmp
add
dec
xlat
mov
loop
sti
notb
mov
out
mov
mov
scas
outsb
sbb
lahf
jnp
mov
lock
faddl
inc
ret
inc
out
idivl
pop
cli
testb
or
cmp
cld
mov
insb
int3
jne
in
test
add
adc
cwtl
dec
out
je
jns
mov
inc
mov
pop
fwait
rclb
bound
xchg
xchg
mov
loope
adc
lcall
inc
out
cli
sbb
test
dec
pop
fidivrs
test
push
lods
adc
mov
ret
mov
hlt
cs
inc
jbe
add
int3
inc
sub
hlt
jle
pop
test
js
dec
lock
test
adc
push
xchg
aad
add
jbe
mulb
cmp
and
push
or
clc
or
aad
call
pusha
mov
int3
imul
sti
dec
adc
call
ljmp
mov
dec
in
inc
or
cmpsb
in
add
test
mov
notl
adc
pop
stos
adc
inc
js
sub
pop
iret
loop
lret
iret
cli
push
push
and
xchg
sub
loop
fdivr
in
fistpll
and
mull
xchg
sbb
xchg
mov
jp
movsl
cli
mov
rol
xlat
mov
inc
aas
mull
fidivl
lret
pop
jge
stos
jl
or
adc
cmpb
jmp
dec
and
addr16
jmp
inc
lret
add
pop
ret
in
cmp
xor
add
repnz
dec
push
and
lods
std
xchg
cmpsb
scas
dec
xchg
dec
dec
loop
shlb
or
cmp
mov
lahf
xchg
pop
sar
fwait
pop
test
inc
mov
and
clc
sbb
fwait
nop
jbe
pop
shll
xchg
shll
rcrl
xchg
lret
shll
xchg
xchg
lret
and
cwtl
lret
mov
clc
and
pop
lret
push
sbb
sbb
int
outsl
add
push
mov
xor
dec
sub
aaa
scas
cli
daa
scas
in
inc
mov
shll
jmp
or
cli
pop
xchg
not
lret
in
shr
sub
xor
inc
ret
xor
lods
lods
cld
cmpb
adc
out
stc
adc
aad
push
out
out
push
div
cmpsb
jns
stos
jecxz
mov
pop
and
or
subb
pop
pop
add
jl
sub
jmp
fcomi
xchg
mov
mov
je
cltd
jle
inc
add
xor
ret
jle
idivb
in
mov
push
scas
popf
pusha
jbe
pop
push
les
add
mov
lock
and
out
xorb
jl
in
dec
add
mov
mov
push
repnz
loope
cmc
cld
add
and
je
cld
mov
scas
mov
add
cld
jg
lods
in
aad
xchg
mov
cmp
sbbb
jl,pt
std
scas
and
pop
fildll
jl
sti
jl
adc
sbb
add
iret
cmp
mov
mov
jbe
fwait
push
aas
and
adc
repz
cli
je
ja
or
out
jno
mov
add
lahf
jb
imull
adc
adcl
test
cmp
adc
mov
je
imul
and
movsb
xchg
cltd
outsb
mov
cltd
out
adc
cmc
xchg
nop
bound
hlt
sti
mov
mov
loope
std
mov
sbb
adc
pop
pop
imul
testb
jbe
in
jmp
cld
mov
outsb
cld
mov
push
xchg
and
cld
mov
mov
xchg
je
sbb
mov
or
leave
mov
mov
stos
lods
add
cmpsb
cld
sbb
xor
add
sbbl
je
add
pop
and
rcll
cld
mov
rcl
fildl
popl
add
mov
cmpsb
xrelease
ja
mov
je
xlat
cmp
xchg
mov
int3
je
aaa
add
jl
jecxz
cmp
push
pop
jne
movsb
stc
pop
adc
movsl
sub
popf
in
xor
enter
lods
out
mov
gs
pushf
pushf
std
dec
jle
cld
lods
arpl
test
cmp
icebp
xor
xchg
xchg
sti
xchg
int3
lods
sbb
mov
insb
ficoms
mov
add
cmc
notl
scas
add
mov
mov
cli
and
cmp
cmp
mov
je
jns
je
ret
mov
or
movsb
mov
pop
xor
fsub
adc
repnz
inc
iret
je
adc
mov
or
cld
pop
jecxz
dec
out
fldl
mov
clc
or
jmp
jmp
repnz
imul
pop
mov
pop
cmp
mov
fbstp
addr16
clc
fucomp
jle
pop
repnz
and
and
ret
arpl
jne
cmp
mov
cmpsb
adc
jb
dec
not
jg
xlat
data16
cmpsb
imul
test
daa
or
or
pop
push
push
jle
subl
add
mov
std
inc
test
dec
mov
jl
shr
add
notb
test
lea
pushf
dec
xor
mov
repnz
pop
shr
iret
pop
xchg
sbb
sub
and
cli
xor
mov
dec
adc
mov
xchg
mov
or
push
sti
js
cli
add
fs
add
xchg
aaa
jae
add
aas
dec
dec
dec
shll
repnz
cli
inc
in
pushf
in
lcall
jg
jg
fcompl
enter
shl
in
rol
lahf
in
mov
stc
adc
xchg
neg
push
in
push
fbld
mov
mov
xchg
fwait
xchg
lcall
mov
pushf
mov
mov
add
xchg
popf
lea
sbb
nop
fwait
mov
add
mov
xchg
lcall
dec
rorb
xchg
rol
cmpsb
icebp
sahf
mov
sub
pop
jmp
mov
loop
xchg
xor
in
xchg
mov
sub
cwtl
xchg
loop
jnp
test
xchg
mov
sbbb
test
xchg
jecxz
lea
and
jl
xchg
lcall
lcall
fwait
enter
les
lea
lock
lret
dec
cld
scas
mov
and
and
pushl
jb
xchg
nop
jns
mov
testl
ss
nop
mov
sub
xchg
rcrb
xchg
mov
fdivs
fidivrs
jge
pop
mov
leave
sub
and
mov
sub
cltd
stc
lcall
and
xchg
xchg
repz
mov
popf
pop
jp
dec
clc
jmp
jo
int
xor
aad
lea
stos
nop
nop
xchg
xchg
data16
out
xchg
sahf
mov
sahf
out
jns
mov
dec
mov
jle
rorb
decl
les
pop
dec
jp
shl
test
mov
lods
mov
aam
ret
rcll
std
fmuls
and
lods
in
call
nop
adc
lcall
mov
mov
iret
xchg
jp
jl
dec
lret
mov
pushf
nop
mov
sbbb
stos
mov
cltd
xchg
dec
and
sbb
lods
ljmp
jp
xchg
inc
mov
sub
ljmp
and
out
inc
jnp
test
cmc
cwtd
dec
outsb
jbe
mov
sub
xchg
xlat
int3
in
data16
cmc
dec
push
dec
add
fsubrs
idivb
std
push
std
dec
jo
mov
xchg
mov
push
into
fdivs
mov
mov
add
xchg
into
test
ja
push
arpl
xor
pop
into
add
ljmp
push
iret
int
mov
lahf
int
int
int
int
int
int
int
int3
ljmp
add
int3
mov
int3
push
int3
add
icebp
lret
loopne
lret
jae
gs
push
lret
out
lret
movsl
das
add
add
xchg
lret
jo
adc
sti
leave
out
leave
out
pushf
leave
popa
leave
cmp
sub
adc
pop
add
add
leave
jmp
in
fcmovne
aam
leave
enter
enter
enter
enter
fadd
add
add
cmpsb
sahf
xchg
movl
inc
loop
mov
les
les
test
ret
rol
ret
xchg
ret
dec
ret
inc
ret
aas
ret
fadd
enter
or
add
ret
imul
ret
push
ret
or
scas
incb
add
stc
punpckhdq
arpl
and
lahf
insl
cli
das
clc
push
mov
cli
sub
ret
enter
cli
and
or
sbb
and
and
popl
cli
adc
cli
sub
push
mov
sub
lock
jecxz
test
pop
mov
pop
inc
mov
dec
inc
cmp
ds
stos
push
call
clc
sub
or
std
fdivrs
in
jae
aas
push
cwtl
lods
pushl
xchg
dec
mov
je
aas
add
cwtl
clc
push
pop
aas
enter
push
fists
cld
imul
rol
mov
inc
sti
cld
adc
xor
inc
push
outsl
xchg
inc
aam
xchg
inc
adc
fstl
sarl
inc
push
pop
cld
div
in
inc
fdivrl
dec
inc
mov
lret
sbb
sti
dec
in
lret
mov
cld
xlat
shll
mov
addr16
aas
xor
mov
daa
lret
or
dec
aam
fldcw
mov
mov
clc
jnp
mov
lret
mov
gs
dec
cmp
gs
loope
xchg
gs
xchg
mov
pop
xchg
gs
insl
push
xor
gs
xor
cld
frstor
jae
gs
push
cld
jg
mov
mov
and
adc
lahf
dec
add
inc
xchg
cld
xchg
mov
and
inc
cmp
mov
push
jns
sar
cld
shll
cwtl
cld
test
lret
mov
lret
pop
push
dec
aas
aaa
sub
mov
sub
shrl
sti
shl
out
decl
xor
cmp
inc
cld
test
pop
mov
sub
inc
mov
stc
insb
and
or
fildll
mov
pushf
mov
mov
iret
mov
mov
mov
inc
mov
in
test
out
test
lahf
test
mov
ds
lods
cltd
pushf
mov
lods
mov
stos
test
cld
inc
xchg
shrd
jge
cltd
mov
rcr
stos
mov
xlat
aas
or
shl
pop
cwtl
enter
jg
scas
mov
jp
cld
jg
mov
neg
jmp
mov
lahf
pusha
idiv
cld
out
popa
aas
gs
lahf
mov
in
cld
mov
outsl
ds
mov
mov
fbld
and
cmpsl
hlt
lcall
js
int
std
shr
cld
lods
idiv
pop
jmp
dec
jb
sahf
ss
mov
es
xchg
jnp
inc
std
fildll
push
clc
notl
cld
add
sbb
jns
incl
scas
or
cld
stos
int
insb
xchg
jnp
jae
js
mov
mov
sahf
loopne
mov
cmp
repz
jg
cmpsl
pop
in
lahf
sarb
cmp
mov
in
mov
test
jb
call
mov
mov
scas
lock
cmp
and
adc
push
lcall
xchg
test
loopne
shr
add
add
fbstp
hlt
mov
inc
xor
mov
cwtl
lock
cltd
ds
in
iret
int
cld
and
jl
mov
mov
jno
clc
in
ficompl
xchg
jmp
call
imulb
outsl
inc
add
nop
lea
rclb
or
int
xchg
out
pop
cmc
clc
mov
stos
rcrb
mov
addb
xchg
mov
dec
cld
nop
mov
lcall
xlat
dec
mov
xchg
mov
mov
xchg
lock
mov
or
mov
or
mov
ret
lods
nop
clc
xchg
mov
inc
xlat
in
lds
cli
or
int
int3
push
dec
in
xchg
adc
xchg
aam
pushf
xchg
pusha
xor
repnz
scas
add
dec
push
adc
cltd
xchg
cwtl
rorl
push
ds
xchg
mov
fucom
dec
and
movsb
mov
or
mov
ret
push
clc
xor
aaa
add
sub
flds
aad
xor
ljmp
sbb
icebp
mov
mov
inc
mov
and
arpl
mov
fs
loope
hlt
fnstsw
sti
rolb
mov
movsb
adc
mov
dec
js
xchg
testb
jae
jae
add
hlt
in
dec
sbb
arpl
mov
arpl
inc
adc
test
inc
dec
lahf
dec
test
mov
adc
stc
jne
push
roll
call
cmp
push
dec
aam
jl
cli
jbe
jl
cmp
add
add
xchg
outsl
enter
pop
add
push
popa
cmp
jg
aaa
out
out
pop
mov
loop
sub
mov
pop
movsl
xchg
repnz
stc
jbe
dec
mov
test
sbb
inc
add
sti
cmp
push
sub
jl,pn
push
scas
incb
xchg
cmp
jb
mov
dec
adc
pop
test
sub
rcrl
cmp
dec
dec
pop
push
xchg
push
enter
mov
lret
repz
or
dec
cwtl
hlt
negl
jae
shll
out
mov
fcmovne
add
mov
jecxz
xchg
inc
lock
mov
out
sbb
xchg
shll
loopne
decb
adc
jg
icebp
pushl
repnz
iret
loope
dec
loopne
shll
mov
cmpsb
addl
cmpsb
insl
aad
stos
or
cmp
shrb
push
mov
adc
push
mov
clc
push
cmpsl
mov
out
sub
pop
jne
in
pop
mov
iret
mov
insl
aad
pop
jg
sbb
push
mov
ja
push
lret
aad
fsubrs
nop
add
sbb
cltd
jle
push
mov
cld
xor
adc
xor
iret
int
iret
das
pop
int3
mov
fistpl
out
test
scas
lea
adc
jg
cmp
mov
add
mov
adc
les
mov
mov
and
jmp
outsl
addb
sbb
sbb
hlt
cmp
xchg
jne
out
sbb
jmp
add
and
icebp
shl
mov
jl
decb
mov
sahf
jns
je
jl
xchg
mov
insb
icebp
imul
imul
cmp
mov
sub
add
cli
sti
jmp
fstl
das
imul
xchg
dec
loope
icebp
ljmp
je
mov
idivl
mov
mov
test
out
cli
sbb
icebp
xchg
out
dec
xchg
push
mov
mov
aaa
cmc
jb
cvtps2pd
cltd
pop
xchg
sbb
daa
inc
dec
repz
inc
pop
pop
out
pushf
fsubl
cli
andl
inc
or
jg
cmp
aas
xor
pop
dec
xchg
adc
inc
inc
loopne
in
repnz
mov
lock
sub
stos
test
ljmp
sub
mov
push
lahf
jmp
in
cmc
inc
and
xchg
mov
push
rcll
ja
hlt
inc
inc
imul
adc
dec
mov
repz
les
and
psrld
decl
cmpsb
mov
dec
xchg
enter
adc
clc
pop
adc
mov
cmp
mov
and
std
or
mov
mov
loop
out
cmpsb
lea
hlt
and
in
and
aaa
mov
je
cld
test
dec
jno,pt
mov
mov
mov
es
sub
in
test
jl
mov
mov
jl
add
adc
test
add
movsb
ljmp
iret
scas
scas
cld
mov
aam
sahf
push
sar
lret
daa
mov
add
notl
mov
int3
addr16
or
mov
out
enter
add
int
adc
enter
lds
xchg
jle
jl
fidivrs
out
fld
in
orb
inc
push
sbb
in
or
scas
cmp
setbe
lea
push
push
mov
push
pop
into
sbb
adc
or
cld
cmp
lods
pop
notl
inc
xlat
dec
add
clc
idiv
cmp
iret
jne
xchg
sbb
and
pop
test
sbb
shr
mov
cmp
pop
cmp
xchg
hlt
stos
insb
mov
stos
iret
faddp
jg
jnp
jg
sbb
jecxz
or
iret
mov
iret
into
ja
pop
push
mov
loop
mov
iret
xchg
jnp
sub
fmull
mov
sbb
push
xchg
lea
mov
fidivrs
xlat
lea
stc
push
hlt
xchg
imul
lock
jecxz
cmp
adc
and
movsb
pushf
ja
adc
in
or
fidivrs
add
lar
call
inc
pop
out
sub
xchg
lret
int3
shll
filds
iret
repz
xchg
imul
xchg
add
out
jns
xchg
scas
jecxz
lahf
xchg
xchg
stc
pop
js
out
cmp
call
out
xlat
scas
outsb
jmp
sbb
mov
inc
cltd
xchg
dec
adc
cli
mov
or
imul
fldl
mov
push
pop
mov
leave
xchg
xor
scas
aas
mov
mov
ret
iret
out
push
pop
jmp
fucomip
pop
ficomps
add
sbb
movsl
iret
pop
aam
xor
pop
das
aas
adc
popf
hlt
cmp
lret
cmpsl
mov
push
loope
jnp
fcomip
push
test
lret
sbb
cltd
mov
sub
mov
jl
enter
popa
int
xchg
jle
sbb
repz
stos
inc
xchg
add
mov
cwtl
loopne
adc
xchg
enter
in
das
cli
cmp
aam
mov
sti
aas
pop
sti
sub
cltd
aam
sahf
push
hlt
scas
inc
push
shll
mov
stos
hlt
pop
sbbb
mov
mov
call
int
jmp
ficoms
jnp
stos
lahf
bound
cmp
ficoms
mov
stos
aas
rep
fildll
ret
jnp
cmpsl
les
je
mov
aaa
mov
stos
pop
lret
sti
stos
sti
and
xchg
out
movsl
push
fwait
or
fsubrs
xor
ja
stos
push
bswap
push
nop
inc
push
fiadds
cmpsb
mov
int3
ss
pmulhuw
into
fldcw
mov
add
in
mov
push
je
xchg
sub
fdivrl
add
sti
inc
imul
mov
int
fucomip
and
or
ficoml
jle
mov
jmp
std
mov
cmpsl
mov
xor
ds
jb
popl
adc
pop
rol
mov
add
ds
loop
mov
mov
ss
lods
jbe
add
ds
loopne
mov
stc
call
jb
in
arpl
jb
or
add
and
jne
aas
sti
ds
jb
xchg
push
add
sti
mov
and
repz
mov
cmp
repnz
movsb
xchg
loop
mov
je
add
and
cmpsb
mov
add
sub
and
out
fcoml
cld
out
jb
cmp
pop
cmp
xchg
adc
enter
sti
cld
cltd
scas
or
add
or
hlt
or
cld
out
jb
enter
xor
or
adc
addr16
test
mull
hlt
cli
cmpsb
or
xchg
jmp
and
cmpsb
ds
ds
jmp
cmpsl
mov
and
or
sub
and
and
lock
ror
adc
inc
ds
xchg
mov
ds
hlt
or
or
and
adc
xchg
inc
cld
and
in
lock
je
adc
repz
add
stos
or
pop
dec
add
or
aas
fidivrl
add
mov
sbb
jmp
adc
cld
sub
cmpl
dec
cmp
and
jmp
in
mov
rcr
inc
mov
sbb
jl
push
add
into
loope
push
add
or
es
sti
push
adc
ds
std
out
into
hlt
and
jl,pt
lret
pop
daa
daa
adc
xchg
adc
jmp
inc
jl
jl
and
xlat
and
pop
pavgb
dec
rclb
sub
or
jg
aas
cmpsb
loope
xchg
sti
dec
movsb
stos
mov
sahf
out
dec
or
cld
aad
daa
stc
sub
cli
cmp
daa
cli
inc
sub
movsl
jnp
movsl
adc
or
cmp
fucomp
outsl
xchg
adc
outsl
pop
je
sub
and
sub
les
mov
push
dec
loop
aaa
push
cld
stos
add
add
pop
mov
adc
mov
mov
je
pop
inc
and
cmp
fcomi
js
call
add
cmp
jmp
std
fdivp
dec
mov
cmp
inc
xchg
stos
cmpsl
cmp
fsubl
sub
cmp
stos
je
popf
or
loop
and
hlt
sub
pop
orb
xor
aas
mov
mov
sub
adc
daa
cld
or
and
daa
or
movsl
mov
sub
ds
or
adc
cmc
faddl
push
cmp
imul
jmp
cmp
push
or
push
xchg
jae
push
sub
iret
and
dec
jae
jns
call
mov
das
jo
adc
jo
inc
loopne
sbb
sub
icebp
pop
jp
sbb
ds
xchg
and
dec
shll
sub
xorb
aam
jo
dec
fists
and
sub
mov
dec
sbb
push
fisubrs
lcall
dec
xchg
and
out
popf
aaa
jo
sub
enter
jo
inc
jp
imul
cmp
and
xchg
js
sub
sub
icebp
xchg
lcall
fsubl
es
je
jmp
mov
movsb
sbb
and
inc
cli
mov
and
push
sbb
xchg
jo
jg
lcall
adc
mov
adc
or
mov
test
push
add
es
nop
cwtl
sub
icebp
cmp
sub
cmp
xor
jae
mov
cmp
sub
das
out
push
mov
dec
setg
ret
sti
push
add
int3
add
pop
pop
jp
jle
mov
jge
ja
jecxz
jge
shl
xchg
cmpsl
inc
adc
rcr
bound
add
in
jb
mov
mov
adc
fildl
and
int3
dec
fs
or
mov
push
mov
cmp
loope
xor
in
push
xor
push
and
mov
or
loope
call
dec
xchg
pop
or
mov
sbbb
loop
dec
jmp
inc
push
adc
sbb
sub
pop
adc
iret
cmp
sbb
push
mov
wrmsr
xchg
add
jp
adc
je
and
int3
and
iret
adc
and
lcall
into
push
pop
mov
call
ja
dec
out
xor
adc
mov
jecxz
mov
xchg
pop
hlt
xor
cmp
sbb
sbb
push
inc
inc
or
xor
sbb
mov
mov
mov
in
repz
dec
mov
lcall
mov
insb
jae
sub
enter
out
mov
in
das
daa
cmc
call
push
out
sub
dec
xchg
int3
jg
dec
stc
mov
mov
bnd
sbbl
imul
jb
cmp
xchg
lea
int3
loopne
pop
insb
add
adc
loop
into
int3
dec
xchg
lret
sub
shrb
dec
ret
cmp
movsb
lcall
pop
inc
sub
sub
xorb
sbb
sbb
and
jae
inc
inc
roll
sbb
and
loop
out
mov
mov
ds
in
adc
mov
push
test
test
nop
mov
stc
test
movsl
or
int3
mov
out
sbb
mov
sub
add
cmc
test
lock
adc
pop
adc
loopne
out
divl
dec
and
lods
push
sub
sbb
sub
dec
or
sub
daa
pop
lret
inc
into
lea
pop
and
lahf
imul
sub
out
lock
xchg
cmpb
dec
mov
xchg
push
jns
je
lods
mov
into
movsb
addb
lcall
mov
scas
xchg
jb
adc
repz
pop
loopne
shrl
mov
stc
je
xchg
test
lahf
iret
mov
jg
pop
add
andb
xchg
xchg
mov
xchg
in
scas
or
jmp
les
jnp
sub
add
fstl
subl
mov
push
xchg
outsl
xor
scas
xor
xor
cmp
icebp
clc
out
les
mov
and
out
pop
jecxz
hlt
xchg
test
arpl
loopne
scas
int
pop
shlb
gs
lods
dec
out
lods
and
icebp
xabort
aam
test
and
test
mov
mov
jecxz
sub
sbb
xchg
or
pop
ljmp
je
sub
jb
pop
cmpsb
in
adc
in
adc
movsb
test
movsl
dec
out
mov
jp
jl
test
scas
xchg
jl
cmp
pop
sub
stc
iret
sbb
push
adc
out
sbb
xor
push
push
xorl
repnz
adc
cwtl
adc
or
or
lcall
xchg
cli
fists
pop
arpl
jae
fs
and
pop
pop
gs
jbe
mov
add
shll
xchg
pop
inc
cmpsl
pushl
scas
adc
movsb
lods
xchg
popf
and
xlat
dec
inc
push
pop
and
ja
xor
add
xchg
cmp
dec
mov
js
jns
mov
insl
aaa
ret
or
cmp
and
dec
stos
lods
test
jl
lret
addr16
mov
lock
mov
mov
xchg
jg
lret
outsb
sbb
cmc
mov
fcmove
lret
ret
pop
mov
scas
xchg
push
repz
popa
lock
push
loop
jp
insl
lods
jmp
mov
pushf
scas
xchg
scas
jns
jnp
add
call
xor
mov
add
xchg
ret
scas
sub
icebp
out
cld
ret
jg
sti
and
push
inc
sti
ficompl
les
jb
lret
xchg
popa
inc
das
jge
aam
bound
add
jb
out
lea
notb
cltd
pusha
aas
lahf
mov
sub
testb
js
daa
jmp
fdivs
mov
stos
mov
into
in
inc
push
js
jp
dec
jmp
push
or
fwait
aas
cld
test
add
jno
ljmp
popf
fdivp
pop
mov
push
add
inc
les
mov
loope
push
jge
push
inc
sti
cltd
loope
add
inc
add
rol
or
icebp
pushf
cltd
je
sti
cltd
ret
mov
adc
pop
cli
inc
leave
xchg
dec
jae
dec
sbbl
shll
ljmp
dec
movsb
cmp
dec
sbb
mov
xor
ret
outsb
cmp
jl
jle
fs
pusha
xchg
adc
test
mov
add
adc
mov
mov
mov
sti
ret
rorb
fsubl
adc
inc
lock
enter
iret
fcoms
pop
stos
stc
pop
xor
dec
and
neg
xchg
outsl
insb
pop
mov
dec
mov
jmp
js
xchg
jle
gs
mov
aaa
rcrl
cli
rcrl
lock
and
jmp
jmp
mov
or
stos
and
cmp
mov
adc
or
sub
xchg
insl
jp
push
mov
dec
dec
sarl
dec
add
out
repnz
jl
xchg
jecxz
jecxz
xor
pop
fwait
mov
ja
les
je
push
imul
dec
mov
ret
cmc
lahf
jae
and
lret
repz
in
fdivs
fiaddl
pop
hlt
sbb
pop
in
lret
or
lahf
std
inc
mov
inc
inc
fxtract
leave
fs
in
cmp
sub
cltd
iret
add
dec
inc
shrb
xchg
loopne
xor
push
iret
push
loopne
inc
loopne
repnz
iret
sub
pop
out
ret
in
pop
pop
filds
mov
je
arpl
jb
cld
adc
sbb
cwtl
lods
add
adc
mov
xor
dec
fimuls
clc
sti
mov
pop
and
int
in
aas
mov
outsl
decl
pop
adc
dec
jb
shrb
push
xor
xor
jmp
pop
dec
fiaddl
imul
testb
mov
cli
pop
xlat
push
sub
xchg
je
add
inc
ret
sub
std
mov
push
inc
add
insb
cltd
mov
xchg
adc
ja
out
test
adc
test
je
lods
inc
out
jle
pop
ror
xchg
filds
jecxz
push
and
bound
lcall
jp
add
lods
add
add
in
cmpl
lahf
and
ret
subb
inc
mov
xchg
cld
push
mov
xchg
dec
cwtl
push
test
dec
mov
mov
lcall
mov
inc
hlt
inc
faddl
cld
inc
xchg
inc
fwait
lcall
lcall
xchg
nop
lea
cmpsb
rcrl
cmpsb
imul
imul
dec
aad
insl
xchg
mov
sahf
xchg
xchg
mov
aas
leave
stc
mov
ds
push
inc
mov
adc
cmp
cmp
add
iret
shlb
vunpcklps
dec
xor
imul
push
pop
addr16
dec
arpl
pop
and
mov
pusha
sar
pop
xchg
pop
out
push
xchg
pop
pop
fstpl
mov
std
dec
adc
pop
movsl
push
iret
test
shll
mov
pop
mov
jae
ja
push
repnz
ffree
mov
das
jge
lahf
mov
cmp
jl
lret
cmpsb
and
pop
mov
dec
call
sub
cld
mov
cmp
call
xor
push
jecxz
int3
into
daa
hlt
stos
cltd
shll
ds
push
pop
lcall
push
hlt
fistl
test
jnp
pop
dec
lcall
mov
stc
pusha
mov
push
lds
out
dec
sbb
mov
int
jo
cmp
adc
aam
cs
or
push
out
andb
out
mov
cs
fistl
xchg
add
pop
dec
fmul
mov
sbb
lret
cmp
mov
fwait
hlt
sub
scas
mov
out
jbe
adc
enter
mov
adc
jecxz
out
or
cmp
xchg
in
cli
cmp
mov
pop
fimull
ds
out
mov
out
clc
push
xlat
mov
add
or
cld
lods
out
fcmove
dec
xchg
movl
out
mov
daa
xchg
fcmovb
xlat
xchg
or
xchg
cld
daa
mull
xlat
icebp
pop
shl
popf
cmp
arpl
dec
xchg
cs
sbb
rcrb
ljmp
cli
jno
ret
mov
mov
jns
bsr
mov
mov
dec
mov
push
ljmp
inc
popl
jl
popf
mov
pop
adc
scas
bound
loope
lea
dec
jg
ss
in
out
fs
mov
fsubr
arpl
test
xchg
jnp
sahf
sub
ret
rcr
sahf
xor
pop
pop
dec
sbb
mov
in
sbb
lods
aas
cwtl
les
cld
movsl
dec
jnp,pt
add
dec
xchg
je
lret
mov
xchg
jbe
mov
gs
dec
testl
pop
and
std
cmc
and
and
add
jl,pn
fwait
leave
ss
pop
add
and
rcrb
xchg
fwait
adcl
cmpsl
or
sahf
insb
ljmp
xchg
dec
xor
fistl
dec
fistps
iret
out
test
mov
add
je
jp
xchg
test
jbe
popf
inc
add
out
dec
or
icebp
les
adc
mov
and
and
mov
pop
into
mov
in
mov
test
xchg
add
mov
repz
xor
les
notb
fisubl
into
mul
jecxz
in
rep
fisttpl
movsl
pop
roll
adc
dec
nop
push
div
or
cli
div
jge
dec
sti
fdivrl
jnp
ret
aad
xchg
je
push
inc
or
jl
push
cmpsl
notl
hlt
ja,pt
out
leave
mov
out
pop
in
rcrl
pop
sub
jl
idivb
push
lahf
stc
push
js
inc
cmp
mov
push
mov
shll
test
mov
es
pop
mov
xchg
cld
sub
mov
fwait
nop
mov
and
and
andb
mov
mov
pop
and
leave
iret
mov
movsb
fbld
pop
jbe
roll
lret
add
add
xchg
inc
mov
mov
gs
xchg
stos
stos
mov
mov
inc
mov
jb
jbe
cmp
outsl
daa
mov
cmp
cmp
cmp
xchg
inc
daa
mov
mov
mov
mov
mov
shr
mov
adc
mov
or
out
out
pop
add
pop
stc
push
push
jmp
jmp
push
adc
mov
loopne
loop
paddusw
push
add
stc
cmpsl
daa
test
sub
call
fdivl
call
sbb
call
into
push
cmp
jmp
in
mov
jge
sarb
or
jmp
out
jns
test
pop
pop
arpl
push
pop
or
push
in
xchg
mov
and
aas
and
imul
je
dec
sti
sbb
xchg
mov
movsb
out
out
gs
je
aam
add
fs
pop
pop
rol
xor
xchg
adc
lahf
lret
decb
outsl
xchg
mov
sar
add
lahf
dec
call
iret
jmp
adc
testl
jns
loopne
sbb
dec
hlt
adc
int3
sbb
jmp
pop
filds
jo
popa
sti
inc
sbbb
and
dec
inc
cmp
mov
es
cmp
test
aam
leave
popf
aaa
mov
push
jp
out
sbb
aam
dec
dec
cmpb
xlat
mov
adc
hlt
dec
scas
cmc
test
mov
lods
add
sub
in
jno
ljmp
dec
mov
mov
adc
fnstcw
or
outsl
out
in
std
mov
inc
add
jb
or
mov
add
arpl
stc
push
outsl
out
mov
mov
xchg
xchg
insl
dec
add
out
adc
jl
in
addr16
mov
inc
scas
dec
mov
pop
jge
fwait
scas
sti
fidivrl
dec
xsave
std
mov
imul
cmp
dec
int
or
aad
clc
pop
or
jl
or
aas
jle
loopne
xchg
scas
jle
cld
outsb
std
xchg
and
loope
jl
jge
add
ljmp
cld
adc
mov
ds
inc
test
fs
mov
ds
xor
xchg
xor
hlt
push
sahf
pop
push
pushf
mov
or
adc
or
or
pop
lcall
jnp
sub
sbb
jae
mov
movsb
pop
int3
push
cltd
mov
fisttpl
xorb
adc
ss
data16
sub
push
fildll
mov
nop
mov
cmpsb
mov
ds
dec
test
mov
mov
js
js
fsubs
rcll
mov
jmp
mov
das
pushf
in
mov
push
leave
cli
inc
dec
cmp
mov
loope
ret
xor
das
repz
cmc
inc
roll
daa
addr16
out
mov
iret
cmp
xchg
ret
addr16
lods
pushf
pushl
leave
xchg
jmp
push
xor
shrb
xchg
mov
mov
mov
ljmp
aam
jae
orps
in
loop
mov
adc
fidivl
sub
jb
outsb
push
sub
scas
dec
pushf
scas
in
jmp
jno
jb
imull
out
and
les
dec
out
cmp
and
pop
mov
cli
jg
out
leave
cmpsb
dec
xor
and
jbe
jae
cmc
out
int3
fnsave
fdiv
dec
fisttpl
test
icebp
push
ja
mov
cli
cld
jp
out
or
mov
out
sub
call
loopne,pt
sub
xchg
mov
cltd
inc
cwtl
and
call
and
repz
int3
out
pop
aaa
sarb
or
call
or
icebp
mov
xchg
ja
shrl
inc
je
loopne
inc
mov
les
cmpsb
andl
loop
dec
test
pop
in
iret
popf
icebp
test
loope
mov
jmp
outsl
jecxz
and
fisubrs
lods
adc
out
pop
cmp
fsts
push
popa
faddl
sahf
jmp
sti
imul
push
jecxz
gs
out
imul
push
jmp
iret
daa
dec
aaa
rolb
fsqrt
mov
dec
xchg
push
push
scas
cld
inc
pop
stc
inc
testl
sahf
test
pop
ret
adc
scas
fdivr
adc
pop
fsts
cwtl
add
jmp
aaa
and
pop
jl
mov
dec
inc
repnz
jnp
push
lock
lret
aam
inc
mov
je
mov
fcos
add
jns
es
push
addr16
mov
ret
xor
rorl
pop
xchg
inc
dec
in
push
push
push
inc
pop
push
inc
push
clc
push
call
dec
gs
adc
call
dec
dec
dec
push
pop
adc
dec
push
inc
in
inc
inc
pop
lret
mov
inc
inc
in
inc
xchg
lret
mov
fsts
lret
xchg
scas
xchg
in
xor
mov
shlb
mov
mov
call
sub
sub
sub
mov
enter
inc
and
and
push
fldenv
out
rcll
pop
xchg
fimull
notl
adc
adc
adc
dec
daa
mov
push
inc
or
int
in
shl
pop
mov
mov
add
cmp
jp
and
arpl
in
jns
insl
lahf
iret
push
cli
sbbb
mov
push
sbb
popa
jbe
and
in
hlt
gs
lahf
inc
cld
add
xchg
clc
xchg
test
aam
adc
cltd
fneni(8087
lcall
jb
je
stc
das
outsl
xchg
test
dec
dec
xor
scas
repz
cmp
mov
cmp
mov
scas
scas
ss
fisttpll
xchg
xor
nop
mov
add
mov
popf
mov
imul
pop
pop
mov
in
or
cld
adc
push
add
sarl
divb
cs
mov
movsl
ljmp
add
mov
bound
clc
sbb
in
add
int3
aas
or
mov
outsl
cld
popa
jle
cld
dec
ds
jns
outsl
test
rorl
test
lods
jl
cmp
xchg
mov
out
sub
test
dec
ljmp
aam
mov
pop
sbb
call
adc
lock
lcall
test
sahf
daa
xchg
out
movsb
lods
jmp
jl
mov
inc
mov
mov
cmp
lods
in
in
test
cld
jae
jmp
cmp
mul
ret
fwait
sarb
sub
fdivrl
push
and
xlat
js
cmc
aaa
mov
das
std
sub
and
nop
jl
daa
std
pop
xchg
das
aad
mov
test
fistpll
push
add
into
aad
sub
out
cli
push
mov
dec
mov
sti
xor
in
add
cltd
pop
pop
stos
ret
sbb
insb
mov
xchg
aas
imul
xchg
sbb
lods
and
mov
push
cmove
push
push
mov
lea
lret
add
mov
outsl
cmpsb
out
xchg
out
cltd
shr
jne
outsl
pop
mov
loopne
add
lahf
bsf
or
test
shrb
mov
push
or
movsb
testl
mov
pop
and
fiaddl
xchg
mov
int
les
int
push
mov
cmp
inc
enter
in
imul
dec
jbe
or
adc
lcall
xchg
or
xchg
gs
push
mov
mov
stos
roll
add
fists
fwait
stc
inc
push
mov
pop
adc
adc
push
adc
push
adc
rorl
in
in
or
je
mov
pop
scas
clc
lret
mov
mov
mov
mov
sub
lcall
mov
mov
jle
iret
dec
push
inc
mov
lahf
cwtl
mov
pop
xchg
gs
lcall
mov
mov
mov
int
mov
je
push
and
lds
cld
jb
jno
jo
outsl
mov
mov
arpl
mov
fldcw
imul
repnz
data16
gs
fbstp
mov
fwait
lods
lcall
sbb
sbb
sbb
mov
mov
gs
lcall
pop
xchg
xchg
lcall
mov
daa
loop
aaa
cmpsl
pop
pop
hlt
ja
enter
daa
imul
ja
lods
iret
pop
loop
xor
pop
jecxz
push
mov
add
test
xchg
sti
lock
pop
push
mull
add
dec
pop
outsl
sti
imul
xlat
jns
adc
pop
mov
xchg
xchg
mov
lret
pop
jnp
rolb
cmpsb
or
lock
out
ja
ja
cmpb
mov
dec
xlat
jge
into
popa
popf
addl
mov
mov
movsl
and
leave
adc
mov
bound
mov
cmc
mov
pop
fimuls
sub
bnd
or
push
ja
cli
in
mov
test
testb
sahf
js
sahf
inc
fwait
pop
mov
scas
cli
cld
add
add
out
mov
cmpsl
and
sti
hlt
ret
hlt
je
int3
add
mov
enter
fxch
out
inc
xor
cmp
out
jle
iret
xchg
cli
popf
imulb
pushl
mov
sbb
shrl
xchg
dec
cld
mov
mov
sti
dec
mov
stc
out
lods
mov
in
sbb
cmp
arpl
cld
mov
adc
or
loope
mov
mov
sbb
mov
int
int3
push
cmp
jmp
jns
jmp
pop
lea
jmp
imul
sub
div
adc
cltd
sub
mull
dec
mov
ja
pop
lds
add
cmpsl
cmpsb
jmp
pop
pop
pusha
test
mov
jbe
daa
adc
sahf
pop
pop
pop
sbb
or
daa
ret
iret
pop
push
loop
fbstp
dec
mov
push
cli
lahf
jg
or
inc
pushf
xchg
ss
clc
mov
jns
jg
outsl
rcll
dec
leave
pushl
mov
testb
and
push
mov
sub
iret
aam
push
fxch
or
sub
or
jb
pop
dec
pop
mov
dec
fsubl
lea
xchg
enter
das
stos
lret
mov
fldl
jo
iret
out
js
xor
in
lock
mov
xchg
push
iret
in
sub
pop
fidivrl
push
pop
adc
lods
pop
scas
lcall
sahf
pushf
mov
ljmp
rcr
cmp
adc
paddq
loopne
xchg
push
dec
adc
push
or
or
fmull
ficoml
mov
sub
clc
je
add
mov
mov
push
cmpsl
jo
out
mov
jg
aas
leave
ret
outsl
cld
out
sub
add
enter
fwait
icebp
popf
pop
nop
xor
xor
and
add
nop
push
js
sar
dec
mov
adc
xchg
gs
dec
and
outsl
and
inc
push
mov
in
xchg
leave
inc
sbb
mov
cmp
test
cld
ljmp
or
jnp
icebp
sbb
cli
ret
xlat
mov
lret
arpl
call
adc
cld
mov
cli
repnz
xor
xor
sub
xor
or
das
jns
hlt
movsl
mov
mov
push
data16
xor
pushl
arpl
xor
cwtl
fcoml
pushf
scas
sahf
mov
nop
outsl
test
out
mov
jg
mov
jge
xor
gs
ss
adc
add
add
mov
in
std
cmp
loop
jg
jb
scas
sarb
cli
xor
stc
lock
std
push
mov
jae
mov
push
mov
scas
adc
jle
mov
or
loope
pop
rolb
xchg
loop
fidivrs
lret
mov
and
filds
arpl
jno
mov
das
or
iret
lods
out
fsubrl
fldenv
mov
add
data16
leave
mov
pop
mov
mov
mov
incl
test
inc
jno
cwtl
sub
xchg
push
xlat
cmp
jmp
ljmp
pushf
fdiv
and
sti
flds
pop
cmpsb
mov
add
or
and
bound
clc
mov
loopne,pt
or
ja
pop
xchg
inc
pop
popf
cmp
testb
sti
je
sub
cmc
lret
int3
fdivp
sbb
inc
pop
movsl
cmp
jecxz
jno
adc
jmp
dec
int
ja
std
jge
or
ljmp
mov
mov
in
je
xor
jecxz
lahf
inc
arpl
dec
mov
ret
mov
in
ja
mov
or
jae
inc
sub
and
lahf
sub
inc
jmp
adc
adc
shlb
mov
stc
sbb
outsl
inc
and
mov
ret
in
or
push
sub
sti
les
lea
lcall
mov
pop
mov
jl
idiv
add
outsl
pop
test
jecxz
lock
incl
cmp
addr16
or
les
bound
popa
les
pop
les
inc
pop
xchg
lock
lret
pop
rcrb
xchg
adc
rclb
fmull
fdivrs
push
lcall
cmp
stos
dec
sbb
pop
adc
inc
popf
inc
inc
lds
roll
push
inc
int
mov
ds
adc
hlt
cmp
cmp
jns
pop
xchg
cmp
jnp
popf
xor
popf
sub
mov
push
mov
daa
sub
add
and
lret
mov
pop
xchg
imul
fcomps
fcomip
dec
mov
aam
mov
sub
and
jl
test
sub
insl
std
in
mov
mov
xchg
sub
out
and
icebp
das
adc
mov
adc
xchg
jl
mov
jecxz
adc
lock
xor
mov
xchg
cmp
xchg
push
loop
cmp
cli
pop
push
stc
pop
adc
cmp
push
idivl
repnz
and
fldenv
clc
pop
ret
mov
jg
sti
xchg
pushf
movsl
lods
jg
rorl
cmp
loopne
imul
lret
ret
std
mov
cmp
sub
cmp
xor
jae
repnz
cwtl
cmp
movsb
sub
and
mov
lret
dec
pop
dec
push
and
push
jecxz
loop
lock
dec
es
movl
mov
std
sbb
add
cmpsb
push
inc
aad
or
and
dec
sahf
loopw
or
jnp
xchg
addr16
adc
mov
pop
xchg
int
lret
cld
cmp
nop
sahf
lea
pushf
lea
aad
lret
xchg
fwait
lcall
rorl
pop
addb
in
jge
popf
xchg
fcmovnb
adc
bndldx
icebp
cmp
xor
mov
scas
lret
sub
mov
jne
iret
cmp
add
loop
repz
xchg
pop
xchg
pop
imul
mov
inc
and
popa
pop
or
movsl
sbbb
in
jbe
idivl
rep
adc
hlt
and
fisttpll
dec
into
push
stc
add
xchg
push
mov
sbb
ret
mov
leave
in
xor
test
lahf
testl
push
lods
jl
sti
repz
cli
rcll
and
adc
adcl
sti
pop
aas
add
fwait
mov
lods
cmp
imull
mov
xchg
sti
sarb
iret
lods
ficomps
xor
insb
movsl
pop
pop
enter
test
mov
dec
pop
inc
cmc
lret
cmp
and
dec
xchg
cmp
aad
test
call
jecxz
cmp
ljmp
jns
insb
test
push
jb
insl
mov
mov
mov
xchg
stc
sbb
lahf
xchg
xor
pop
mov
cmp
adc
inc
out
and
stc
xchg
xor
lods
cli
je
out
fcoml
and
test
mov
stc
pop
jae
pop
xchg
lret
testb
inc
sbb
jnp
jecxz
iret
out
into
inc
mov
add
cld
xchg
sbb
cs
or
movsb
out
cmpsl
in
inc
jg
idivl
aas
jmp
cltd
inc
imul
idivl
ja
out
ljmp
cmp
gs
sti
imul
and
fidivs
inc
negb
outsl
in
stc
aas
jecxz
add
mov
add
mov
in
push
jge
push
lcall
or
push
or
push
sarl
into
inc
add
sub
fcoms
icebp
mov
lock
push
scas
ds
in
inc
mov
lcall
je
cmpsb
cmc
in
ljmp
adc
or
adc
test
loop
cwtl
dec
lea
xchg
xlat
xchg
dec
sahf
enter
out
dec
mov
aas
aas
mov
icebp
xchg
pop
sbb
hlt
mov
fisttps
pushf
jmp
out
mov
sti
xchg
add
pop
repz
ficoml
js
fsts
movsb
xchg
sarl
data16
das
rorb
jne
add
test
aas
int
cli
push
leave
inc
jp
add
mov
fwait
push
mov
pop
imul
inc
mov
stc
xchg
ficomps
add
shll
insb
repz
add
scas
stc
pop
lods
jbe
insb
insb
insb
insb
pushf
nop
xchg
lea
insb
lcall
jecxz
pop
xchg
nop
fs
out
ficomps
adc
scas
add
sub
dec
mov
mov
aaa
frstor
pushf
cmpsl
and
and
jl
sbb
add
fmuls
stc
sbb
xor
add
aaa
outsb
pushf
scas
pop
add
add
xor
push
outsl
pop
loope
repz
addb
dec
ljmp
divb
jne
jp
mov
cmp
add
in
sub
cld
out
sbbb
test
sarb
iret
incb
xor
cs
dec
xchg
cld
repnz
mov
rorb
loopne
imul
repz
es
out
test
testl
movsb
add
je
mov
mov
add
jp
push
mov
pop
test
je
sbb
add
mov
shr
cmpsl
pop
bswap
and
scas
inc
push
jb
mov
mov
stc
and
loope
jb
cli
push
int3
cs
cmp
test
add
fcmovnb
mov
fadd
xchg
cmp
jbe
sahf
mov
and
out
dec
mov
test
je
lcall
clc
cmp
cmpsl
sahf
cmp
cs
xor
xchg
jae
mov
stos
or
inc
mov
ret
lock
mov
notb
cs
sub
jmp
out
mov
jns
push
std
jnp
xor
xchg
scas
mov
popf
jl
in
jns
mov
push
jbe
inc
pop
jb
xor
cmp
cmp
xchg
mov
in
dec
and
xchg
pop
in
loopne
xchg
dec
movsb
aaa
jns
dec
pop
xchg
xchg
mov
push
pop
mov
mov
add
pop
int3
add
or
xchg
cli
test
or
cmpsb
pop
mov
jge
inc
mov
movsb
outsb
test
orb
mov
out
dec
cmpsb
stc
je
xlat
fisubl
add
je
repz
xlat
loopne
shl
sbb
mov
insl
lahf
test
ja
push
movsb
xor
popl
push
xchg
jecxz
daa
jmp
push
mov
cmp
rorb
sti
jbe
je
out
je
je
clc
sub
and
test
cmp
jecxz
mov
daa
enter
mov
outsb
mov
aaa
lret
xorb
lock
scas
inc
addr16
sbbb
mov
in
mov
je
dec
sbb
daa
fbld
and
jg
shrb
jmp
out
loope
out
int
xlat
mov
outsl
outsb
cld
jecxz
negl
pop
cmc
xchg
or
cwtl
out
dec
dec
xchg
sbb
jl
mov
pop
addr16
adc
cmpsb
pop
sub
scas
adc
movsb
xchg
xlat
pop
and
stos
cmp
decl
sti
mov
setne
push
or
orl
add
jecxz
jmp
add
pop
pusha
cmpsl
cmp
mov
fwait
cli
and
or
jb
mov
push
lock
ds
cmpsb
push
int3
adc
add
xchg
stc
mov
je
mov
lods
xchg
push
stc
push
cmp
lock
insl
fucomip
out
pusha
mov
jmp
xchg
repz
outsl
push
xor
mov
mov
les
adc
andl
popa
fdivs
jbe
scas
cli
js
inc
pop
push
divl
das
mov
mov
sub
cmp
and
cmp
nop
out
fstpt
arpl
enter
int
out
jnp
mov
daa
adc
test
pop
adc
mov
and
mov
jl
movsb
inc
adc
loop
dec
mov
aas
dec
out
or
js
and
out
scas
sub
add
cltd
fadd
and
andl
popa
xchg
push
in
xlat
mov
enter
cmc
xchg
loope
cltd
orl
mov
repz
inc
shll
out
or
cmp
enter
loope
les
jle
pusha
cmp
decb
xchg
je
dec
fmull
cltd
add
ljmp
xchg
push
push
inc
jbe
and
cmpsl
in
sub
push
repz
shrl
xchg
inc
mov
test
jmp
cwtl
mov
mov
rcll
push
cmc
out
lret
out
mov
leave
cmp
sbb
lret
add
sub
push
loop
dec
ret
jbe
jmp
cmp
cmpsl
call
jns
int3
or
leave
in
add
mov
icebp
scas
cwtl
or
or
inc
lret
inc
in
lahf
sub
xor
jecxz
in
and
lock
in
repz
jge
call
js
adc
out
test
lock
mov
pcmpeqw
xlat
lea
add
mov
shr
cmp
daa
addr16
mov
xor
mov
sub
mov
sub
in
xchg
repz
out
jecxz
aaa
jle
out
lret
ret
jns
fdivs
scas
daa
mov
divb
add
mov
mov
fisttpl
cmp
fsubp
pop
mov
daa
iret
scas
mov
lea
sbb
mov
arpl
xor
pop
dec
pop
jp
push
add
jl
scas
cmp
cmc
bound
jge
push
xchg
lret
out
sahf
pop
sti
jecxz
push
cwtl
iret
xor
out
in
sbb
mov
xchg
cmp
lcall
pop
stos
cld
fidivs
fiaddl
pop
dec
in
cmp
sub
sahf
jmp
mov
pop
ja
mov
pop
cltd
pop
into
cmp
mov
xchg
dec
xchg
mov
lock
jnp
outsl
loop
jnp
cmp
jnp
call
add
out
sub
or
jnp
daa
cmpl
test
mov
pop
fildll
cmp
stos
xchg
cmp
cmp
decl
lcall
mov
or
jecxz
dec
incl
sbb
mov
xor
mov
cmpb
xchg
jne
enter
lock
faddp
mov
jo
lahf
stc
les
je
mov
aaa
mov
stc
scas
jmp
mov
adcb
dec
mov
fidivrl
lock
sub
hlt
bnd
fnstcw
or
mov
pushf
rorl
mov
cmc
mov
scas
in
inc
dec
hlt
stos
negl
lods
mov
jb
sar
mov
mov
mov
jmp
out
inc
and
les
jne
dec
shl
in
aam
mov
fcompl
das
jmp
mov
mov
fwait
lds
dec
jl
push
ja
lods
frstor
iret
and
mov
cwtl
scas
inc
scas
iret
jb
out
mov
aas
pop
ja
lods
incl
mov
je
push
fbstp
aam
in
mov
pop
out
repz
sti
fistps
leave
popf
mov
mov
lcall
cmp
or
mov
inc
mov
adc
pop
inc
repz
cmp
fstps
cli
stos
aam
imul
clc
xchg
xchg
cmc
repnz
je
js
aas
ss
inc
shrl
ds
push
mov
and
pop
push
cmc
xlat
lret
nop
in
ss
mov
pop
sub
inc
call
stos
in
adc
fs
das
jno
mov
lret
jnp
or
push
in
pop
jmp
push
xchg
lahf
add
fucom
xchg
sub
jg
pop
clc
adcb
repz
std
xor
icebp
pushl
adc
imul
and
mov
std
and
xchg
aam
std
push
rcrb
add
xchg
jae
cld
cmp
adc
outsl
adc
jbe
jbe
icebp
mov
dec
xchg
cmp
jl
or
xor
jb
scas
pop
gs
xchg
out
mov
pop
mov
scas
divb
mov
repnz
add
dec
int3
mov
push
xchg
jbe
adc
std
push
int
imull
jb
das
rolb
pusha
mov
daa
and
into
hlt
pop
fildll
sub
bound
imul
dec
je
dec
xchg
cmpsb
outsb
aas
icebp
pop
std
pop
pop
lcall
repz
lods
mov
xor
xor
xor
scas
sub
xchg
xor
jg
les
roll
rcrb
test
lahf
cmp
int3
outsb
adc
cmpsb
jb
pop
shlb
mov
add
inc
dec
mov
cmpsl
cmpsl
adc
stc
adc
mov
or
pop
icebp
rorb
ss
das
idivb
or
loope
pop
mov
insl
xchg
dec
pop
ret
in
pop
out
sbb
ret
xchg
clc
sbb
sbb
arpl
out
pop
mov
push
hlt
jno
sbbb
call
pop
leave
mov
dec
push
out
xchg
movsb
imul
test
pop
add
jge
nop
ss
iret
cmc
sbb
cmc
mov
push
add
mov
loope
sbb
mov
divl
pop
repz
imul
ficoml
fwait
sbb
daa
call
sbb
xchg
cli
out
movsb
push
dec
pop
les
test
pop
or
mov
into
iret
daa
js
addr16
jecxz
pop
es
test
sti
dec
push
pop
cmpsl
stc
add
ljmp
fidivrl
inc
insb
xchg
pop
dec
xchg
jecxz
aaa
daa
fwait
inc
xchg
imul
int3
out
dec
cmpsl
bound
repz
iret
cmpsl
iret
vsubss
ljmp
pop
pop
sub
sub
xlat
fsubs
cli
pop
xlat
out
mov
mov
cli
jmp
movsb
mov
fstp
dec
add
cmp
lahf
daa
pusha
daa
adc
or
scas
lods
in
clc
fwait
inc
mov
or
push
cltd
xchg
aaa
sub
add
fmul
das
pop
pop
jae
mov
ja
les
adcb
jbe
pop
mov
mov
mov
adc
paddw
add
repnz
add
pop
out
xchg
jge
mov
out
lret
jnp
jp
subb
xchg
jmp
lods
std
lahf
cld
pslld
cmc
cmp
pushf
repz
movsl
cs
sahf
dec
add
mov
mov
scas
repz
xchg
bound
scas
ss
mov
out
mov
xchg
movb
cli
out
in
repz
popf
cmp
mov
cmp
loope
lahf
ss
das
dec
hlt
in
jnp
xor
aaa
dec
adc
lock
ja
cld
mov
out
xchg
jmp
idivl
out
inc
jo
js
sbb
lods
stos
test
mov
jo
out
sub
xchg
loop
aaa
cmpsl
add
movsl
ret
iret
loop
cmpsb
ja
icebp
push
jle
cwtl
pop
rclb
jbe
test
cmp
lret
out
xrelease
mov
popf
and
adc
cmpsl
fildll
cmp
in
mov
xchg
jl
dec
jns
shrb
and
fistl
fsubl
mov
cmpsl
sbb
xor
in
lods
jno
je
dec
call
adc
adc
push
xchg
scas
mull
scas
mov
adc
and
mov
imul
and
inc
and
lcall
jmp
roll
xchg
and
inc
daa
push
lods
mov
sub
cmpsb
test
inc
mov
mov
popf
out
dec
enter
xchg
fsubr
outsl
sti
aas
and
pop
xchg
mov
pushf
ret
mov
movsb
mov
fwait
adc
pop
scas
sti
test
xchg
outsl
ret
inc
or
xchg
jl
xor
adc
lahf
jle
ret
jecxz
mov
mov
adc
and
out
push
mov
lock
lds
stos
adc
add
adc
sub
inc
negl
cmp
aaa
sti
fsubp
lds
aaa
jo
cmpsl
inc
inc
push
imul
cmc
mov
in
mov
fcomp
lea
ljmp
popa
add
loope
lret
dec
mov
dec
add
pop
call
out
mov
imul
insb
scas
dec
pop
iret
pop
sbbb
mov
add
popl
rorl
jmp
loop
xchg
push
add
dec
scas
adc
pop
and
stc
loop
ret
icebp
lods
lods
enter
sbb
stos
pop
pop
nopl
xor
push
push
and
popa
cltd
outsb
aaa
jmp
in
xor
icebp
push
movl
fcomps
daa
or
inc
ja
jb
cmpsl
jmp
inc
fiadds
xor
cmp
imul
inc
pop
ficomps
loop
fnstcw
loop
cmpsb
mov
cmpsl
out
dec
xor
pop
stos
js
repnz
leave
testl
push
push
test
mov
jg
js
jae
fs
sti
loope
cmp
test
stc
pop
mov
xchg
jmp
inc
iret
sbb
push
loope
jge
lahf
xlat
out
fisubrl
testl
cmpl
inc
mov
mov
cmp
jl
out
adc
jge
and
dec
dec
popf
in
mov
or
cs
xchg
pop
imul
sub
mov
in
das
in
std
ret
aam
subl
sub
pop
and
xor
rolb
addr16
lods
out
out
push
xlat
fucom
insb
cli
xchg
mov
fsubrs
pop
pop
xchg
in
fists
das
das
std
repnz
mov
xor
arpl
sub
jmp
inc
and
ja
pop
pop
stc
jb
repz
dec
cmp
arpl
pop
data16
fcmovb
out
dec
inc
add
cmp
fdivr
or
and
cmp
repz
push
jl
in
in
cld
xor
push
add
jl,pt
testb
rcll
shl
out
sti
mov
jns
and
sub
xlat
iret
in
push
sub
sti
out
outsl
jl
mov
enter
push
sti
cld
mov
ja
cmc
xor
stc
pusha
mov
std
xchg
std
cmpsl
jb
jg
jp
mov
imul
loopne
adc
sub
add
add
cli
or
sub
add
in
cmpsb
mov
jl
mov
je
in
scas
fists
repz
in
jecxz
lret
add
and
sti
inc
jp
icebp
xchg
lret
rcll
xlat
stos
cwtl
sub
lods
jge,pt
xor
daa
push
push
xor
fadds
out
imul
sub
and
cmc
pop
daa
stos
add
inc
push
ret
xchg
aas
mov
je
mov
mov
shrb
out
pop
lahf
pop
jmp
mov
dec
sti
cmp
stos
notl
mov
cmp
iret
inc
jae
stc
mov
or
ret
cwtl
push
mov
cmp
push
sbb
call
sub
cltd
or
jae
cmp
mov
es
cmpsl
dec
std
mov
xchg
pushf
cwtl
and
in
dec
leave
pusha
fcmovb
out
xchg
or
ret
jb
enter
or
int3
leave
iret
xchg
mov
push
ret
xlat
jnp
repz
inc
jecxz
sbb
push
sub
std
div
jmp
cmc
sub
jmp
aas
dec
mov
push
lahf
iret
rcrb
outsl
scas
dec
inc
iret
sub
push
iret
xor
fstpt
dec
or
xchg
stc
mov
pusha
mov
scas
jecxz
cmc
pop
pop
cmpsb
stc
dec
xlat
push
jg
push
mov
dec
jecxz
dec
or
cld
fdivr
cmp
sti
fcmovne
dec
or
mov
pop
lret
into
dec
ffreep
out
cmc
out
cwtl
dec
pop
ret
adc
cld
jmp
sarl
jns
cli
jmp
xchg
nop
inc
sahf
fdivr
shlb
daa
and
jg
stc
pop
sti
inc
clc
mov
or
push
sahf
enter
cli
mov
fcmovb
pusha
repnz
repz
iret
insb
pop
out
fisttpll
sub
movsl
add
lods
out
push
xor
pop
pop
jp
add
jge
fwait
cmpsl
inc
in
sub
lret
cmc
sbbl
loope
pop
cmc
daa
ret
adc
jmp
dec
inc
aaa
stc
in
std
mov
mov
xchg
sub
xchg
in
adc
pop
outsl
mulb
mov
sbbb
not
pmaddwd
rcr
jns
cs
sti
shll
dec
shl
mov
aam
idivb
jne
cmp
jne
xlat
stc
sbb
adc
subb
jns
cmp
mov
ret
sbb
testl
inc
inc
mov
scas
push
adc
cld
dec
jae
xor
in
mov
cmpsb
sbb
xor
dec
sub
fdivr
inc
enter
outsb
xchg
fsubl
pop
lds
mov
in
jg
xchg
into
xchg
cmc
sarb
xor
jecxz
repnz
push
jge
adc
xchg
out
call
cmp
sbb
fcmovne
dec
sti
ss
into
xlat
loope
mov
sbb
xlat
fcomip
xchg
iret
aam
aad
into
jno
jmp
and
mov
into
jge
pop
inc
loope
xchg
out
inc
sub
movsl
mov
out
test
jge
mov
fistpll
jge
popa
sar
mov
pop
sub
lahf
mov
jge
fiaddl
lcall
sti
or
inc
cmp
xchg
sbb
and
sbb
aaa
add
je
iret
popf
cli
fnstenv
mov
cmp
add
imul
mov
bound
cmpsb
jns
imulb
add
idivl
mov
jge
mov
and
inc
cli
add
inc
cmp
ret
sub
mov
mov
dec
mov
shrl
jg
jecxz
pop
out
and
loopne
fbld
aaa
int
dec
mov
fisubl
cli
jae
outsl
in
outsl
jmp
sti
in
arpl
fmul
leave
ljmp
inc
jb
or
repz
xlat
mov
ror
out
cltd
mov
pop
dec
out
jno
cmc
in
dec
movsb
orl
dec
movsb
and
cmp
xchg
push
cld
sub
hlt
fsubs
mov
sbb
dec
in
inc
inc
mov
daa
xor
cmpsl
pop
mov
in
pop
decl
std
inc
out
repz
out
jbe,pt
out
push
insb
incl
negb
ds
scas
std
mov
sti
mov
sahf
mov
cwtl
mov
ret
neg
imul
out
ds
and
jge
loop
ficomps
sti
aam
mov
mov
inc
jno
sbb
clc
mov
std
fidivrs
imul
lret
das
xor
pop
or
mov
jmp
xchg
fistl
call
mov
std
hlt
jnp
jns
jmp
dec
push
jbe
cli
cs
adc
seta
notl
pop
cmp
lods
adc
mov
lods
stos
out
lods
lcall
xchg
mov
sahf
call
mov
negl
jl
mov
jns
mov
movsb
in
scas
outsb
out
cmp
out
sarl
inc
rol
jbe
ds
ljmp
out
xor
xchg
fadds
mov
mov
xchg
mov
mov
nop
popl
fidivrs
and
mov
mov
mov
mov
fistl
dec
sahf
and
jae
cli
jns
xchg
cwtl
mov
xchg
mov
cltd
inc
lahf
cmp
xchg
into
enter
call
call
fidivrs
aam
leave
add
dec
out
sti
in
and
cltd
mov
sub
cmp
xchg
dec
pushl
ja
xchg
js
in
pop
mov
sti
ficompl
shrl
push
sub
mov
mov
dec
rcl
mov
icebp
pop
mov
dec
and
stc
pop
mov
sahf
cwtl
mov
shrl
hlt
cmp
scas
mov
jp
mov
mov
and
lods
out
out
inc
hlt
jp
adc
std
sahf
mov
xchg
inc
aad
cmpsb
fimull
leave
cmp
mov
out
sti
test
jae
pushl
cwtl
cmp
lcall
jne
cmpsl
in
push
out
jns
adc
cwtl
idivl
xchg
add
xchg
fidivrs
fcmovnbe
jge
or
idiv
cmpsl
out
loopne
adc
inc
notb
cwtl
roll
stc
cli
mov
mov
lret
loop
jle
std
cltd
cmp
test
cmp
push
mov
mov
divb
mov
sub
loope
std
mov
and
and
ret
mov
dec
mov
int3
dec
adc
lods
and
movsl
lock
mov
out
out
out
pusha
and
xchg
popf
lret
hlt
sbb
xchg
pop
adc
jl
and
jp
cwtl
std
in
ds
std
in
ja
mov
mov
pushf
std
jl
push
lock
mov
je
out
dec
xchg
jl
sbb
sub
inc
jp
fistpl
stos
lahf
xchg
in
xchg
push
ror
cmp
mov
cmp
into
call
mov
jb
mov
adc
das
adcl
mov
mov
in
fcoms
ficomps
lock
xor
ljmp
notb
jge
sub
jnp
aaa
lock
das
in
push
hlt
dec
notl
mov
lea
testl
pop
mov
out
test
idiv
hlt
incl
subb
fwait
rcll
jnp
ja
imul
add
add
pop
rcll
roll
shll
sub
daa
rorl
add
aad
add
rorb
rcl
mov
pmaddwd
add
iret
js
inc
iret
sbb
bswap
cmp
cs
sbb
into
rcll
add
cwtl
int
int
int
int
int
int
int
int3
rcrb
add
or
int3
lret
test
mov
lret
or
lret
arpl
push
lret
dec
lret
cmp
lret
adc
add
add
add
jmp
mov
lret
es
or
cld
enter
enter
enter
enter
add
enter
enter
enter
mov
ja
es
adc
or
loop
add
add
rol
leave
dec
sub
sbb
or
add
mov
sahf
lds
vpinsrw
mov
movsl
les
jge
jb
push
les
xor
sub
xor
je
add
inc
or
inc
leave
outsl
enter
enter
xchg
add
addb
dec
movl
int
pop
jle
dec
cmp
xor
adc
or
add
and
int
jns
pop
lds
dec
lds
adc
or
mov
mov
out
mov
ret
cmpsb
ret
mov
insb
ret
ss
call
ret
sbb
inc
sarb
and
add
std
hlt
dec
aam
jg
je
add
add
pop
iret
sub
adc
scas
into
cmpsl
into
xchg
into
mov
push
int
int
int
int
int
int
int
ds
add
sub
add
mov
or
int3
outsb
int3
arpl
pop
int3
dec
int3
aaa
lock
push
int3
std
lret
out
mov
stos
lret
cmpsb
lret
pushf
and
add
lret
xchg
or
lret
imul
push
lret
sbb
in
lret
ror
mov
add
add
jnp
jne
outsl
lret
pop
lret
dec
lret
cmp
xor
ljmp
mov
inc
enter
repnz
test
jns
sbb
pop
pop
push
cmp
mov
pushf
movb
add
xchg
jno
data16
pop
push
aas
cmp
cs
and
test
mov
lds
sub
xchg
hlt
inc
std
ret
clc
ret
bnd
fadd
mov
ret
gs
inc
ret
daa
inc
push
add
ret
push
ret
movnti
ret
cmp
and
test
scas
rcl
enter
sbb
stos
shll
xor
sub
repz
fcmovnb
lret
shlb
pop
pop
iret
in
into
frstor
xchg
into
mov
das
into
mov
int
add
add
cmp
pop
int
int
int3
dec
int3
xor
and
cli
lret
ljmp
lret
cmp
add
add
lret
pop
lret
or
leave
pop
xchg
enter
add
mov
enter
enter
enter
enter
loope
fcoms
add
add
dec
movl
adc
pop
movl
insb
pusha
push
dec
xor
jp
adc
sub
sbb
push
stos
clc
iret
mov
lods
lds
add
inc
lds
mov
jae
imul
les
ret
cmp
mov
fs
push
ret
add
xchg
add
dec
mov
sbb
cs
pusha
rclb
rorb
shlb
pop
rorb
push
and
sub
xchg
iret
cmpl
iret
insb
iret
push
iret
dec
iret
cmp
xor
sub
adc
pushf
xchg
sub
and
int
int
mov
ljmp
jp
push
int3
dec
int3
in
fmul
and
push
lret
add
scas
lret
movsb
lret
lret
cmp
lret
sbb
adc
lret
cmc
leave
inc
push
add
out
mov
cmpsl
leave
xchg
leave
mov
or
push
leave
sub
and
add
in
push
leave
jnp
add
enter
lret
mov
inc
incl
orb
loopne
fcmovnb
dec
les
sbb
lea
ret
fs
aaa
or
add
ret
and
ret
adc
or
std
ret
out
int3
ret
mov
sarl
add
rcrb
shr
outsl
dec
and
add
ljmp
int
int
int
int
int
cmp
int3
hlt
lret
adc
adc
dec
sub
adc
lret
lods
lret
fwait
bound
push
add
repz
mov
enter
enter
enter
outsb
movsb
push
nop
pop
add
jb
scas
jae
push
rol
popf
pop
add
add
xchg
lds
push
lds
lds
out
loopne
rol
lret
les
les
add
js
les
jno
pop
les
inc
les
les
les
les
les
les
jae
pusha
in
ret
ffreep
fcmovb
rol
ret
ret
lods
inc
lcall
ret
test
jne
insl
sbb
ret
in
ffreep
scas
ret
pushf
ret
pop
add
add
ret
pop
ret
adc
push
ret
faddp
mov
cmpsl
cmp
lahf
enter
int3
dec
sarl
das
shll
cmp
pop
rorl
clc
cmp
rcr
fcmovb
sbb
add
enter
rol
mov
rolb
push
hlt
jmp
push
inc
inc
shrb
push
rclb
pop
int3
pop
or
add
enter
out
iret
out
fmulp
ror
iret
ret
iret
lods
iret
test
mov
iret
jl
cmp
iret
jae
gs
dec
iret
inc
xchg
cmp
ss
xor
sub
sbb
or
lock
jg
add
cwtl
in
xlat
into
lret
into
mov
cwtl
into
mov
jle
pop
add
cmp
pusha
into
pop
into
inc
into
xor
sub
sbb
int
and
add
int
int
int
cwtl
jbe
pop
int
int
int
int3
mov
mov
int3
jle
imul
and
adc
dec
jmp
lret
jle
js
add
add
lret
and
pop
lret
lock
cltd
lret
pop
lret
dec
lret
pop
add
pusha
sub
and
pop
lret
push
lret
hlt
add
jp
push
jecxz
fldl
lret
leave
mov
leave
movsl
leave
cltd
leave
xchg
add
and
cwtl
or
leave
enter
or
add
repnz
loope
lret
scas
cmpsb
movb
nop
pop
inc
adc
xchg
lds
lds
lds
add
repnz
xchg
pusha
dec
les
les
les
stc
ret
fwait
ret
mov
jp
pusha
add
and
ret
pop
ret
cli
xchg
mov
ret
or
cli
shl
fadd
rol
mov
add
shrl
roll
inc
sarl
dec
verr
ret
lods
shlb
pop
sarb
dec
add
fucomp
mov
ror
iret
mov
scas
iret
popf
iret
push
in
fs
mov
dec
iret
inc
iret
cmp
iret
and
cs
aad
repz
ja
dec
incl
mov
cmp
adc
pop
mov
inc
add
cld
xchg
inc
xchg
clc
outsl
inc
test
mov
inc
inc
push
adc
in
inc
mov
das
push
xlat
inc
jmp
inc
addl
push
pop
mov
lock
cwtl
std
add
mov
fldcw
add
repz
incl
lahf
jmp
stc
fistpll
xlat
sub
fisttps
rorl
lahf
mov
cld
pop
decl
divb
mov
enter
outsl
clc
std
inc
ljmp
jmp
pushf
in
dec
cmp
fsub
fcomps
add
and
mov
cwtl
test
or
cld
pop
leave
mov
and
push
test
jne
les
cld
inc
push
jl
gs
les
jg
movsl
mov
cmp
pop
rcl
enter
sub
test
cld
push
dec
mov
sub
pop
adc
xchg
aad
or
xlat
mov
jge
decl
mov
mov
sti
aam
cmpsb
out
pop
insl
inc
daa
stc
mov
jle
mov
lret
mov
cmp
add
fbstp
mov
scas
push
and
nop
lcall
stos
outsb
dec
jne
cli
inc
lock
hlt
mov
mov
add
fildll
jl
xchg
jmp
stos
cld
ljmp
mov
adcb
or
repz
inc
jmp
mov
stos
push
out
sbb
jl
cmc
loope
cld
or
sbb
push
scas
fnstsw
mov
jle
stos
jb
mov
jp
pop
lock
inc
sti
ds
cmp
jge
pop
add
hlt
jne
adc
je
notl
mov
scas
mov
pushl
xchg
mov
cmpsl
in
pop
lea
xchg
aas
inc
ja
stos
add
stc
cs
jmp
fsts
mov
inc
daa
dec
fwait
addr16
ret
mov
mov
adc
jl
or
jecxz
xlat
mov
jg
mov
stos
stc
cmp
das
sti
sarb
adc
add
dec
push
push
mov
dec
mov
int
orb
lock
jl
sti
insl
clc
fcompl
jne
add
or
fcmovbe
fdivrs
int3
and
ffreep
stos
clc
inc
ljmp
mov
js
daa
subb
sub
adc
test
xor
movsb
ret
jmp
xchg
xchg
jae
fwait
insb
mov
cmp
inc
xlat
icebp
jecxz
cld
or
loop
xchg
idivl
xchg
xchg
fisttps
lcall
imul
sbb
cs
cltd
sbb
sbb
cmpsl
pop
mov
xor
xor
adc
adc
ja
ljmp
adc
mov
ja
pop
push
adc
mov
sbb
cs
mov
addr16
xchg
mov
lret
mov
mov
adc
pop
jp
xchg
addr16
jmp
jo
pop
fcomip
pop
clc
push
insb
push
ds
std
sti
fsubr
adcb
push
sub
les
or
add
sti
dec
enter
out
sti
js
jmp
mov
pop
adc
lds
mov
xchg
movsb
cwtl
movsl
mov
dec
adc
ja
js
int
adc
jb
mov
jb
xchg
jg
push
cmp
sbb
pop
mov
shll
out
cli
inc
addr16
xlat
xchg
push
cmp
xchg
pop
inc
push
mov
lret
fisubrs
out
in
add
clc
orb
fldt
sti
into
into
push
inc
scas
mov
shll
dec
jecxz
aas
call
fidivrs
push
sbb
fbstp
icebp
out
lock
xor
lret
sbb
loope
les
mov
int3
sbbb
dec
incl
mov
dec
insl
mov
add
imul
scas
push
clc
sti
or
mov
jge
pop
mov
lods
fucomip
jo
or
or
in
mov
out
mov
lods
mov
mov
out
mov
rol
in
mov
js
or
decl
cli
mov
sarl
pop
xchg
fisubl
mov
in
scas
stos
adc
inc
out
inc
cld
stos
inc
stos
shrl
jp
out
inc
cmp
cmp
hlt
xchg
stc
dec
push
into
fistpll
sub
xor
out
out
test
into
fbstp
fisttpll
add
dec
stc
inc
inc
cld
inc
cmp
movsl
test
pop
mov
lret
and
orl
dec
out
pop
in
clc
dec
stc
lea
daa
dec
add
dec
add
out
and
dec
repnz
dec
ja
cmp
and
add
dec
in
fwait
test
outsb
outsb
add
or
les
xchg
push
stc
push
add
lahf
mov
dec
in
push
out
jecxz
loope
pop
pop
push
rorl
mov
inc
pop
and
roll
fsubl
lcall
lock
movsb
xlat
xchg
leave
inc
inc
xlat
sahf
inc
mov
out
jle
push
cmc
inc
notl
ljmp
adc
fisttpl
test
push
jl
cmp
pop
cmp
out
shrb
lahf
mov
xchg
pop
movsb
pop
lret
aaa
jns
out
xor
push
xor
xor
xor
incl
jp
jno
cmc
lea
inc
hlt
js
fs
inc
outsl
inc
xchg
aam
mov
inc
enter
aad
enter
xchg
mov
mov
jg
ljmp
enter
sub
test
mov
adc
cmpb
fstpt
fadds
mov
jb
dec
pop
shl
inc
fwait
xchg
push
out
or
into
xchg
sti
sarl
dec
shl
jb
int
cmp
fcmovnb
xlat
out
imul
sub
aas
clc
jns
lret
ffreep
jo
mov
mov
clc
jmp
in
cmp
mov
jmp
push
and
or
dec
icebp
push
rclb
stos
cmpsb
in
pop
mov
lret
imul
xchg
shr
out
shrb
repnz
push
mov
jge
sub
and
daa
cmpsl
jp
cmc
pop
out
sub
call
iret
stos
icebp
xchg
cltd
inc
hlt
mov
dec
in
cmp
jbe
sti
and
mov
xor
pop
loope
idivb
jmp
xchg
stos
sti
je
ficomps
mov
test
call
dec
aas
lahf
sti
lret
push
cmpsl
cli
das
and
add
mov
sub
int3
mov
mov
mov
div
div
dec
lahf
int3
mov
fwait
cli
out
stos
ds
sub
cmpsb
mov
cli
divl
sarl
imul
xchg
sarl
jae
scas
mov
mov
mov
aaa
cld
jl
mov
jne
loope
dec
xor
int
cmp
cli
xchg
xchg
lret
xchg
cld
push
popf
xlat
repz
jg
inc
sti
mov
push
iret
cld
sub
push
fcom
cld
mov
mov
cld
sub
popf
in
fcomip
leave
cld
sub
test
ljmp
mov
cmpsl
in
sahf
jmp
xlat
movsb
jbe
push
idivl
add
pop
imul
loop
mov
cmp
sub
and
mov
cmp
popf
mov
shlb
in
call
jnp
jecxz
lea
fcomps
aam
mov
sub
icebp
je
stos
xchg
inc
cmpsl
cmp
xchg
jbe
dec
out
push
mov
nop
and
gs
popa
ljmp
and
mov
mov
xchg
mov
xchg
ja
mov
push
mov
mov
xor
fnsave
lahf
stos
outsb
fsubrs
inc
out
notb
in
jl
dec
fcmovnu
call
xchg
dec
into
ja
enter
lock
xchg
inc
lahf
cld
inc
daa
sarb
inc
cli
xchg
mov
cld
sarb
mov
ljmp
test
sub
cld
ss
mov
call
cld
test
in
pop
aad
ret
sub
mov
inc
aaa
scas
pop
movsb
push
cmpsb
leave
mov
pop
repz
hlt
xchg
inc
into
clc
xorb
stc
cli
in
jbe
adc
movsb
cmp
cmp
imul
stc
pop
jmp
or
in
jmp
ljmp
cmc
push
shlb
xchg
movsb
cmp
in
addr16
dec
hlt
fdivl
in
scas
mov
decb
mov
push
repz
test
push
sub
rorl
movsb
cmp
in
out
or
jmp
stos
mov
jb
jmp
in
xor
ja
test
mov
dec
repnz
nop
xchg
and
cltd
jne
jns
mov
ja,pt
cmp
repnz
sub
lods
and
add
mov
ljmp
mov
push
mov
cwtl
xchg
xchg
lret
out
xchg
mov
daa
sub
add
out
jg
enter
std
mov
dec
push
pop
lahf
cmp
std
scas
in
cli
dec
incl
cli
lret
sub
mov
mov
lock
mov
sar
sti
adc
decb
nop
sti
pop
inc
cld
or
movsb
sar
fidivl
lods
push
ds
mov
xor
xchg
clc
sbb
repnz
mov
cmp
cld
lret
adc
xchg
or
mov
shl
fs
call
adc
sahf
xchg
fdivr
mov
cmpsb
cwtl
mov
popf
movsb
push
adc
xchg
enter
xchg
insb
mov
loopne
stos
xlat
ljmp
leave
push
dec
xchg
ficomps
mov
fstpl
into
iret
cli
xchg
adc
fs
int3
xchg
push
xchg
bound
loopne
hlt
cwtl
mov
popf
out
popl
cwtl
jo
call
xlat
push
int
fs
inc
xchg
cmc
xlat
mov
mov
lock
clc
hlt
xchg
jge
mov
jo
cmpsb
dec
cmp
xchg
push
cmp
and
mov
fwait
loopne
notl
pushf
decl
fidivrs
lret
icebp
shrl
mov
loopne
jbe
mov
loopne
inc
ficompl
call
xchg
test
lcall
mov
movsb
cmpsb
lret
add
adc
int
fisubs
filds
or
fcoms
ficomps
sbb
and
add
add
xchg
lret
push
lret
cmpsb
leave
fwait
leave
xchg
leave
ja
jb
dec
leave
dec
ja
mov
enter
mov
enter
mov
jp
xor
sub
adc
add
lds
lds
lds
mov
push
lds
fwait
ret
xchg
ret
adc
ret
std
movsl
notl
iret
ret
popl
pop
ret
std
shl
mov
shr
sti
add
pop
rcll
rcrl
addr16
fsubr
or
aam
xchg
aam
mov
pop
gs
movsb
lods
dec
adc
std
fimull
nop
cltd
lock
rol
xor
inc
push
push
jae
inc
dec
fistpll
cmp
imul
mov
pop
xchg
mov
inc
mov
stos
pop
jp
loop
pop
pop
scas
shll
mov
lret
inc
push
negb
aas
shl
mov
stos
mov
ds
lds
pop
repz
repnz
mov
decl
jnp
cld
icebp
cld
aaa
incb
nop
adc
repz
lock
sbb
cs
imul
mov
aad
push
cmpsl
ds
aam
lock
pop
push
stc
cltd
loop
pop
mov
dec
mov
frstor
push
hlt
sti
lods
and
fwait
push
loope
lahf
cli
jle
pxor
test
lcall
aas
mov
cmp
mov
and
mov
ljmp
jg
add
jmp
add
inc
add
call
int
jmp
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
pusha
mov
mov
xor
mov
inc
cmp
jb
popa
jmp
