out
call
in
sub
andb
push
push
push
push
xor
pop
lea
fcomi
stos
push
ljmp
pop
xor
jmp
mov
pop
ja
test
add
loop
mov
dec
gs
in
in
dec
mov
xor
cs
jbe
dec
mov
insb
jmp
mov
push
call
pop
mov
jg
mov
push
push
push
push
push
mov
push
push
call
mov
and
adc
clc
lea
push
add
in
and
call
jbe
adc
adc
pop
sbb
outsl
fisttps
pop
pop
pop
leave
ret
add
add
mov
mov
push
push
xchg
in
and
data16
jbe
pop
popf
fadd
add
in
mov
je
mov
lcall
push
or
mov
ror
jge
sti
daa
pop
inc
pop
inc
aaa
fsubr
mov
mov
jle
sub
lea
push
push
push
sbb
pop
dec
mov
or
xchg
daa
xor
clc
add
in
push
fists
push
rol
or
fxch
lock
add
push
pop
sbb
or
adc
movsb
mov
fdivr
cmp
lock
cmp
je
push
adc
clc
sbb
pop
or
inc
clc
cmp
or
push
lret
insl
or
push
xorb
je
lea
or
scas
dec
mov
pop
je
jbe
pop
out
cmp
pop
xor
or
shrb
adc
dec
mov
lods
lea
jo
push
push
scas
fildl
or
pop
or
mov
fstps
or
pop
test
cmp
adcl
add
adc
push
sub
mov
sbb
or
jno
sti
sti
int3
dec
inc
cmp
outsl
insl
out
pop
dec
mov
and
jbe
fldcw
push
mulb
divb
or
enter
cltd
add
add
fnstcw
cld
push
adc
xchg
icebp
add
popf
andl
leave
cmp
xchg
adc
enter
jnp
jb
jmp
and
or
mov
pop
jmp
lds
or
iret
push
jno
mov
jge
pusha
fdivr
fists
push
adc
push
mov
ror
mov
inc
inc
dec
dec
test
jne
push
in
cmp
pop
jmp
lds
rolb
popa
mov
sbb
mov
add
inc
cmpb
jg
cmp
je
add
and
pop
jecxz
or
clc
inc
and
ljmp
adc
adc
add
daa
push
jno
and
ljmp
fldt
mov
push
adc
or
add
decl
fisttps
inc
xor
lock
push
les
inc
mov
and
lods
jmp
or
mov
daa
test
pop
lods
add
xchg
addr16
pop
pop
pop
pusha
and
sbb
stc
cmp
in
lea
push
adcl
lea
add
sti
mov
add
sti
xchg
lea
sbb
adc
pop
and
add
jnp
pop
add
xor
test
cmp
sub
pop
cmp
ret
push
push
sahf
mov
pop
les
xor
xor
lock
dec
sub
scas
pop
fldenv
xlat
push
xor
adc
sub
test
adc
sbb
pop
mov
in
ja
pop
pop
pop
lcall
mov
mov
inc
test
stc
sub
dec
push
inc
push
sub
imul
decl
js
clc
mov
enter
push
push
add
sub
andb
xor
cmpb
je
inc
push
jne
mov
mov
ret
mov
inc
inc
test
jne
pop
xchg
pop
add
packsswb
jmp
adcl
cld
xchg
imul
ljmp
in
fadds
add
je
popa
imul
xchg
imul
popw
mov
jmp
or
roll
jg
xchg
or
pop
test
inc
add
leave
rep
mov
or
add
push
cmp
sysenter
pop
and
add
dec
inc
repz
inc
sbb
je
push
pusha
jno
sbb
pusha
pop
testl
and
leave
std
mov
jo
adc
das
pop
stos
cmp
or
or
fs
push
jae
pop
outsb
add
dec
push
mov
cmp
add
sub
pop
int3
inc
dec
mov
flds
dec
cmp
int
pop
iret
and
loop
in
roll
rorb
sub
dec
aam
outsl
or
js
jp
jb
cmp
mov
adc
jl
cmpl
xchg
and
push
push
fisubrs
or
mov
xchg
rclb
ror
mov
add
and
mov
outsl
dec
mov
add
push
cmp
cs
or
clc
je
jae
pop
mov
adc
shl
xor
xchg
int
pop
jg
or
popf
insb
dec
enter
xchg
js
shrl
xor
stos
ss
adc
adc
pop
imul
push
adc
xchg
xchg
sub
fcomp
xchg
push
into
lock
fldt
inc
sbb
mov
or
imul
andl
push
arpl
sub
jl
addr16
ficoms
push
sub
popf
cmpsl
cmc
or
push
jp
pusha
cmp
xchg
xor
adc
or
fsts
inc
jl
in
sbb
in
out
pop
out
fwait
in
mov
ljmp
xlat
insb
or
out
and
pop
pop
lock
push
mov
pop
test
pop
jp
inc
or
outsb
inc
mov
push
xchg
or
pop
sub
int
fsts
xchg
push
repnz
push
divb
dec
dec
je
adc
add
sbb
ja
dec
mov
ret
jmp
xor
int3
add
outsb
and
mov
add
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
pop
adc
and
mov
add
add
xor
sbb
lcall
push
pop
outsb
subb
imul
add
xor
cmp
cmpsb
imul
jmp
out
fiadds
rol
daa
mov
adc
dec
shll
push
add
jo
jge
stos
add
outsl
arpl
je
data16
stc
jg
insl
addr16
xor
cmp
inc
bound
push
jb
jbe
insb
gs
dec
addr16
jae
jae
gs
xor
pop
add
inc
push
dec
dec
and
out
add
push
gs
outsl
imul
fs
int
pop
rclb
data16
std
insl
in
cs
and
insl
gs
jo
imul
push
xchg
cmp
aaa
stos
mov
in
sbb
ret
scas
in
adc
sbb
cmp
inc
adc
stos
add
dec
inc
dec
dec
inc
cs
insb
dec
add
dec
jle
push
dec
inc
dec
push
xlat
or
call
jno
push
pop
sub
jmp
push
add
add
out
pop
nop
inc
add
mov
inc
call
push
add
int
mov
imul
popa
pushl
arpl
outsb
outsl
je
bound
jb
outsb
and
inc
dec
push
and
fs
or
fidivrl
add
repz
punpckldq
pop
movsb
and
pop
movsb
inc
gs
sub
push
daa
push
pop
out
arpl
dec
movsb
pop
gs
push
mov
push
stos
push
inc
dec
add
dec
adc
out
in
fneni(8087
mov
or
add
and
cmp
adc
add
fs
jnp
pop
or
and
jnp
mov
xor
pop
push
shrb
outsb
dec
pop
in
sahf
mov
and
ss
repnz
fadds
push
rolb
pusha
out
imull
bound
pop
je
xlat
push
and
cs
je
sbb
aas
sbb
fldlg2
jp
loopne
inc
push
push
and
mov
add
xor
aas
shrb
jae
xor
pop
rcrb
mov
gs
outsl
arpl
sti
xor
dec
push
fiaddl
js
test
repnz
fwait
loop
cmpsb
imul
imul
mov
int3
add
lock
adc
sub
inc
pop
push
jle
stos
mov
mov
repnz
imul
imul
mov
push
movsl
push
and
dec
shll
mov
dec
rcr
test
lcall
insb
pop
dec
sub
lret
cmpsb
imul
shll
andb
jae
inc
jg
pop
add
fcmovnb
add
xor
mov
cmpsl
xor
shrl
pop
jo
test
xor
rorl
shll
in
je
and
jae
cmpsb
out
add
frstor
incl
jmp
add
xorl
gs
mov
push
jmp
xchg
dec
xchg
fs
mov
popa
fs
sub
pop
divb
jo
jne
jns
outsw
inc
aaa
dec
jo
and
jb
adc
inc
dec
adc
dec
dec
inc
push
and
out
push
pop
push
data16
bound
dec
inc
push
push
inc
push
inc
fdivr
mov
pop
dec
pushf
jb
outsl
data16
push
imul
push
pop
inc
jne
or
pop
jae
mov
outsb
sbb
or
inc
std
inc
add
push
pop
orb
jnp
adc
movsb
imul
mov
add
push
pop
push
or
fiadds
add
test
cmpsb
xchg
or
sbb
and
inc
or
xchg
add
pop
mov
ret
shlb
ja
aas
and
aas
add
pop
rcr
or
test
sub
mov
mov
gs
mov
and
inc
inc
sbb
fistpl
push
enter
lcall
rorb
or
pop
xor
mov
inc
das
jae
and
addr16
pushf
jmp
sub
lods
mov
mov
outsl
insl
insl
test
dec
popa
ss
xor
adc
arpl
mov
hlt
arpl
inc
je
jo
fcomps
nop
fdivs
sbb
dec
push
mov
sbb
fs
dec
andb
inc
hlt
or
dec
jbe
push
dec
push
push
inc
or
jno
imul
xor
outsl
je
ja
inc
adc
push
jns
shll
cmp
xor
add
xchg
mov
jae
inc
and
jnp
add
std
into
enter
pop
arpl
popa
insl
gs
fildl
iret
dec
mov
inc
popa
jb
mov
push
sti
pop
arpl
sbb
fistps
jo
outsb
imul
out
or
fadd
adc
insb
jae
or
stos
mov
lods
mov
int
ret
cld
mov
aaa
xlat
movsl
mov
or
fdivp
add
inc
or
mov
xchg
cld
dec
leave
mov
or
in
or
outsl
ljmp
add
sbb
mov
push
mov
lea
jmp
cmp
adc
in
add
cmp
mov
add
xchg
mov
clc
clc
pushf
mov
cmp
bt
sub
div
dec
mov
pop
push
call
orl
or
in
adc
push
loop
sub
repnz
xchg
or
clc
mov
adc
insl
xchg
cwtl
cwtl
call
push
arpl
outsb
insl
arpl
or
dec
out
std
int
mov
xbegin
mov
rol
enter
leave
dec
mov
and
mov
stos
bound
mov
pop
scas
add
cmp
fwait
pop
mov
lea
fcompl
fs
das
xchg
xor
sub
scas
xchg
xor
sub
xorl
xor
out
inc
ljmp
jns
in
lods
lea
add
bound
mov
cmpl
mov
push
xor
mov
mov
xor
roll
pop
jle
ja
jl
cmp
pop
jae
mov
or
jmp
or
rol
andl
aas
fldt
push
pop
add
les
or
call
cmp
adc
sarb
add
mov
add
pusha
and
push
cs
sti
int
mov
push
call
pop
jne
xor
jmp
mov
push
shll
loopne
push
push
mov
or
in
jge
movl
mov
call
mov
call
clc
push
sub
push
lea
sti
fwait
sti
fistl
adc
mov
call
add
mov
fdivrs
pop
mov
pop
pop
leave
ret
dec
pushl
out
mov
dec
shrb
sbb
ds
sbb
dec
loopne
cmpsb
clc
aaa
mov
push
push
movl
out
jle
ffree
mov
dec
or
inc
in
jne
call
call
incl
pop
add
lea
ds
sti
lcall
adc
sbb
insb
arpl
pcmpeqb
mov
dec
iret
repnz
sbb
and
and
ret
sub
or
test
ds
inc
orl
push
jmp
adc
addr16
pop
and
jmp
add
push
sbb
add
or
lea
pop
push
ret
or
mov
in
ret
cmc
adc
loopne
shr
inc
adc
sub
mov
loope,pt
mov
xor
push
cmp
pop
push
add
and
sahf
sbb
mov
xchg
push
push
add
les
je
cli
daa
fcomi
mov
add
movsl
aas
decb
jmp
ja
mov
adc
push
adc
mov
addr16
repz
lcall
cld
and
ret
adc
insl
hlt
push
repnz
je
jmp
push
ds
mov
xor
ljmp
testl
mov
mov
pop
icebp
sub
mov
gs
add
inc
xor
pop
push
add
lea
adc
gs
xor
clc
sub
in
push
add
adc
cld
pop
loopne
cmp
aaa
mov
sub
sub
push
add
push
jmp
add
inc
add
sti
push
jge
fidivs
lea
call
mov
inc
pop
orl
in
insl
and
ret
mov
imul
mov
or
aaa
loopne
ss
push
pop
or
cltd
int
push
xchg
or
push
adc
jp
mov
cmp
fildll
in
sbb
push
movzbl
shrl
adc
or
pusha
pop
clc
add
fisttpl
mov
andb
mov
or
push
aas
cmp
pop
sbb
jl
push
aaa
push
pop
mov
mov
nop
jl
stc
xchg
push
loope
add
lret
pop
add
repnz
nop
jo
and
jbe
add
pop
adc
lea
jmp
bnd
xchg
dec
test
mov
fs
add
and
mov
imul
jbe
xchg
push
in
push
xchg
aaa
jne
loope
or
pushf
test
jne
outsl
fbld
pop
jne
dec
cmp
lret
shlb
ja
add
dec
adc
sbb
and
add
je
rorb
and
or
js
xor
adc
mov
push
test
fsts
xor
push
push
in
xor
cmp
push
out
outsl
mov
cmp
jg
add
jge
push
push
push
pusha
lock
rcll
and
pop
pop
insb
jl
mov
add
push
das
mov
inc
dec
xor
push
or
push
and
lcall
imul
push
mov
lock
mov
arpl
add
mov
movsb
mov
fistpl
sbb
in
jle
mov
lock
or
fldt
inc
movsb
dec
dec
mov
xor
mov
xor
sbb
mov
mov
movsb
outsl
jb
sbb
mov
dec
and
lret
mov
shll
push
or
sarl
push
mov
std
in
fiaddl
ret
xor
xor
inc
cmp
or
sbb
push
lods
dec
dec
xor
aam
xor
rolb
ja
inc
arpl
loope
mov
jbe
mov
daa
add
push
mov
dec
fisubrs
negl
push
sub
adc
cmp
jb
pop
stos
lds
popa
pop
pop
lds
add
jle
inc
add
daa
stc
add
xor
adc
adc
pop
nop
pop
icebp
adc
add
adc
nop
nop
dec
pusha
xor
adc
lret
pop
xor
adc
lahf
in
pop
xor
adc
adc
xor
adc
and
add
push
sub
mov
lret
insb
xor
adc
and
jp
inc
adc
lret
fwait
popa
xor
jo
adc
jl
nop
add
dec
insl
sub
negl
sbb
mov
jl
jne
inc
push
adc
inc
int
cmp
rcrb
test
out
imul
arpl
cmp
or
sub
or
add
xor
cmp
jmp
sbb
xor
pop
sbb
and
pop
sbb
adc
rolb
in
adc
adc
in
int3
add
test
mov
adc
cwtl
jl
loope
mov
push
push
aad
push
add
xchg
insl
add
pusha
into
lcall
adc
xor
lods
push
cmp
adc
jg
hlt
shrb
data16
sub
negl
outsl
and
int
sub
cli
push
cs
fs
insb
out
in
sub
lret
enter
adc
push
xor
push
aad
shl
cli
mov
adc
push
sti
push
mov
es
cmpsl
xlat
and
test
mov
add
jle
push
cmp
jle
mov
dec
sbb
pop
clc
cmp
ja
leave
call
adc
mov
add
lock
decb
outsl
dec
inc
hlt
mov
push
in
jne
cmpl
daa
mov
loopne
pusha
mov
cmp
jg
sbb
mov
inc
clc
xor
push
lods
pop
clc
jmp
andl
mov
imul
sbb
addr16
inc
cmp
mov
xchg
fstpl
mov
and
push
cwtl
sbbl
pushl
popa
xorl
lock
ja
jne
xchg
cmc
scas
cld
cmpl
ja
or
or
or
add
inc
movsb
or
in
xchg
and
inc
mov
or
cmp
negb
mov
cmp
sar
fmuls
adc
push
or
inc
cmp
jne
fcmovnu
push
outsl
or
sub
psrad
dec
fdivl
add
mov
cmpb
jmp
fistps
or
and
inc
test
jne
or
test
je
mov
shr
xor
test
mov
pop
and
es
or
test
dec
cld
sbb
je
cs
xor
std
fildll
pop
shlb
loope
or
mov
and
push
fdivrs
xchg
adc
adc
test
jp
test
pop
sbb
aad
push
cmp
adc
add
push
pusha
fistpl
adc
fdivl
push
sbb
bound
sbb
add
test
or
outsl
outsl
adc
rorb
and
fistl
insb
add
je
add
in
out
sub
mov
and
mov
and
xchg
add
mov
inc
jne
call
push
jl
pop
pop
pop
ret
jmp
addr16
xchg
adc
push
push
add
sbb
add
pop
shlb
push
ret
add
loop
out
or
loopne
push
je
pop
mov
pop
ret
push
pop
cmp
jmp
adc
testb
jmp
add
sbb
inc
jae
mov
jbe
lea
push
inc
call
jbe
push
cmp
idiv
adc
jg
sbb
inc
incl
jmp
andb
xlat
imul
adc
mov
ds
nop
jo
call
xchg
cld
inc
mov
xor
adc
adc
adc
cmp
in
push
test
call
jle
xor
pop
add
xor
adc
and
mov
adc
push
push
cwtl
pop
xchg
rcrl
push
inc
cmp
jecxz
pop
cld
add
and
sub
fs
ja
xor
loope
jecxz
mov
cmpb
xchg
add
jl
cmp
jb
in
jmp
movsb
shrl
or
jg
inc
andl
fisttpl
adc
ljmp
mov
adc
add
shll
add
add
ret
inc
jge
and
push
mov
shll
cmp
loopne
cmp
jae
incl
lret
or
lea
enter
or
push
mov
pop
addl
sbb
mov
decl
pop
jne
adc
lea
jge
jecxz
sbb
iret
jo
mov
add
loop
cmp
sub
or
inc
jecxz
jne
xor
mov
pop
pop
decl
stos
pop
outsb
scas
mov
pushf
bound
push
ffreep
jbe
xchg
pop
jbe
or
cmp
sti
not
and
mov
mov
push
jl
and
or
add
lea
mov
xlat
sbb
shr
mov
idivb
fiaddl
push
repnz
not
and
testl
lea
test
int
outsl
out
push
js
add
push
aam
or
das
in
neg
and
or
lea
shr
in
mov
shl
push
pop
inc
sub
mov
and
not
fistps
cmp
add
repz
mov
rorl
push
shr
or
add
dec
daa
pop
insl
fstpt
push
fisttps
jl
sbb
cli
push
lods
loop
mov
push
push
or
fcomip
shlb
push
xor
and
adcb
sub
xchg
rcr
ret
lret
sbb
xlat
loopne
fiaddl
pop
popa
xlat
or
mov
popf
fildll
sbb
inc
xor
or
or
or
int3
xor
add
in
sub
out
xor
add
cs
out
or
adc
jne
les
repz
mov
xlat
adc
fcomps
addl
repz
fptan
and
not
fisubrs
pusha
xorb
jle
shrb
pop
scas
testl
std
fmull
sub
dec
sbb
pop
push
loop
jae
sub
sub
fcom
jns
cmp
add
xlat
pop
mov
frstor
mov
repz
xor
les
adc
iret
testl
rorl
xchg
sub
xchg
jno
std
stos
lods
push
fdivrs
es
add
and
mov
outsb
pop
fidivrs
pop
aaa
das
push
mov
fmull
out
jns
pop
mov
xor
add
or
cmp
jnp
cmp
jecxz
jbe
lock
mov
ret
mov
ret
out
push
and
aad
aam
pop
bound
mov
out
sbb
shl
pop
mov
clc
jg
scas
in
xchg
out
dec
cmp
inc
rclb
push
fadds
test
lcall
jb
sub
mov
pop
es
adc
repnz
adc
inc
shll
and
fsubs
fldz
call
insl
fwait
aaa
pop
imul
das
call
out
loop
xlat
lods
mov
sbb
push
adc
add
rorb
in
sub
outsl
aam
and
clc
cmp
jae
cmpsl
pop
jge
cli
fnstcw
ds
jg
or
add
xchg
dec
stos
mov
mov
mov
pop
jl
out
loope
out
sbb
loopne
ret
fidivl
repnz
enter
or
mov
jmp
fbstp
repz
test
xchg
insb
in
mov
cmp
gs
stc
out
sub
in
adc
inc
loop
shr
sbb
fdivs
lock
sbb
out
push
aam
mov
int
jp
daa
push
and
data16
sti
sub
aad
flds
outsl
adc
jae
movl
sahf
in
mov
lea
or
insb
pop
xor
xor
test
fstpl
cmp
sbb
test
xor
in
and
cmpb
divb
adc
or
cs
js
repnz
adc
inc
sti
xor
in
mov
repnz
or
in
mov
call
in
inc
inc
ljmp
inc
push
sbb
xchg
mov
push
adc
cltd
jb
lret
pop
sub
push
int3
pop
pop
xchg
outsl
jecxz
dec
mov
cli
xor
rcrb
mov
sti
pop
mov
jae
or
mov
stc
pop
jl
jle
sub
jae
mov
data16
testl
imul
mov
mov
mov
fidivl
sbb
cmp
test
xchg
jae
ret
out
sub
xor
jmp
add
lret
fcmove
or
push
aas
sbb
cmp
xchg
scas
lock
aam
cltd
js
jbe
bnd
dec
les
in
mov
mov
ss
in
clc
jl
pop
mov
xchg
in
je
dec
pushl
idivb
aam
gs
lods
les
pop
mov
ljmp
mov
mov
stos
shr
push
mov
sbb
push
inc
in
stc
test
sbb
jl
inc
int3
or
inc
adc
xchg
in
or
sub
aaa
es
stos
adc
int
mov
hlt
cmp
mov
in
xchg
cld
cltd
or
fistl
xlat
mov
ret
mov
pop
gs
sbb
rcrl
or
lock
int3
or
push
push
ja
jno
cltd
in
and
out
call
int
mov
lock
pop
test
out
jmp
dec
xor
mov
scas
dec
jle
outsl
jecxz
jp
push
mov
dec
sbb
int
mov
fistpl
loopne
sub
jecxz
jp
xor
ret
mov
mov
in
inc
add
mov
xlat
fwait
or
sbb
lea
ja
mov
xchg
lods
mov
xor
out
loopne
mov
sbb
mov
insb
xor
pslld
ret
repz
shl
inc
mov
xchg
roll
dec
mov
pop
insl
jmp
xlat
pop
add
pop
movsb
mov
mov
mov
xor
pop
call
and
inc
js
cmp
lds
mov
jg
jge
cmp
jl
push
pop
sub
push
push
push
call
pop
data16
mov
insb
js
adc
xlat
adc
inc
pop
fisubrl
jle
test
xchg
push
lahf
inc
pop
inc
test
nop
iret
pop
pop
mov
mov
into
ljmp
add
ja
stc
pop
sbb
cmp
jne
pop
popa
adc
xlat
sbb
push
cmp
jecxz
cli
repnz
jne
shr
cmp
je
in
jg
outsl
mov
cmp
je
movsbl
add
sub
jne
inc
cmp
jne
testb
jmp
add
add
clc
adcb
movsb
pop
adc
inc
mov
inc
jl
add
jg
adc
inc
cmp
inc
idivl
shll
add
je
ror
iret
pusha
pop
rclb
mov
andb
fstl
cmp
jnp
dec
jecxz
jo
adc
lea
inc
js
mov
fiaddl
sarl
adc
call
sbb
popf
lret
add
stos
pop
pop
push
outsb
pop
loopne
aaa
or
dec
sub
jne
sarb
jb
adc
add
lea
test
pushf
nop
rolb
add
lcall
or
push
and
lods
fisubs
mov
mov
mov
sbb
mov
test
pop
je
or
jo
aaa
testb
mov
inc
inc
sub
xlat
in
or
adc
push
daa
lock
rclb
push
sbb
in
ss
and
xchg
mov
sbb
jbe
push
dec
adc
xorb
sub
idivl
test
ss
bswap
pop
xorl
xor
inc
add
inc
out
xor
sbb
testb
or
fdivl
std
push
fistl
mov
stos
aas
push
pop
sbb
and
sbb
cmp
insl
adc
jmp
xchg
pop
in
imul
hlt
or
nop
cmp
imul
mov
test
insb
pop
dec
cmp
ret
or
xchg
xchg
addr16
mov
movsb
or
mov
fdivrl
ss
rcrb
test
icebp
fsubl
mov
mov
dec
loopne
pop
fcoms
cmp
iret
inc
adc
addr16
push
dec
push
dec
push
or
leave
data16
mov
inc
dec
adc
mov
mov
mov
xor
mov
je
adc
add
inc
push
pop
call
cmp
icebp
mov
add
test
add
in
cmc
scas
jno
xchg
hlt
add
cmc
and
push
pop
lock
stos
or
and
out
scas
sbb
lahf
hlt
push
pusha
sbb
out
dec
jl
mov
stos
cld
call
jle
scas
int
pop
inc
and
mov
test
incl
add
clc
neg
push
xor
cmc
stc
sub
jg
pop
cmc
cwtl
pushf
sub
data16
pusha
add
jmp
ljmp
sbb
ficoms
inc
call
pop
mov
mov
jo
cwtd
add
loop
movzwl
cltd
idiv
mov
aad
push
divl
pop
sbb
arpl
sahf
cld
call
inc
test
mov
mov
sbb
or
nop
cmp
hlt
cmc
cld
iret
addl
nop
hlt
or
rep
aad
mov
adc
outsb
inc
inc
ret
addr16
mov
cli
call
pop
lock
andb
pusha
pushl
call
jae
push
push
or
inc
rolb
rep
sbb
mov
adc
es
in
pop
aad
inc
sub
arpl
push
imul
imul
xchg
pop
adc
rcrb
lock
mov
stos
je
lea
ret
pop
jge
in
push
adc
xor
lock
sbb
push
out
outsl
ja
fwait
sbb
mov
and
xchg
pop
inc
mov
stc
sub
or
dec
sub
test
sub
cli
and
and
xchg
inc
ret
push
mulb
setl
push
xor
in
add
cmp
jb
xchg
jae
adc
jo
jmp
shll
in
out
insb
out
lock
insl
mov
icebp
fs
hlt
cmc
mov
shll
idiv
stc
insl
adc
push
cld
fs
jmp
out
loopne
fimuls
sbb
jl
sub
add
mov
mov
cmp
pushf
or
ja
rorb
jno
sbb
or
fimull
mov
stc
add
dec
inc
lahf
lods
shrl
das
daa
sbb
mov
shl
and
or
sub
idiv
mov
cmp
sub
movsl
jmp
gs
sub
test
ljmp
mov
push
xor
jmp
hlt
movsl
or
fs
testb
aam
or
dec
jecxz
call
jae
fnstcw
inc
adc
adc
mov
subw
mov
lret
cmp
inc
pop
adc
adc
or
sbb
mov
mov
in
fisttpl
movb
popl
pop
or
cmp
shr
dec
mov
dec
mov
xor
decb
int
adc
sbb
ljmp
out
out
mov
mov
mov
imull
pop
pop
jmp
outsl
fbstp
and
and
add
push
imul
out
imul
mov
int
mov
jbe
into
cmpsl
pop
jmp
fdiv
or
roll
jmp
dec
jle
cmc
mov
std
gs
push
pop
and
aas
xor
xlat
les
push
adc
icebp
xchg
push
pushf
sbb
idivb
sub
jno
adc
push
jmp
and
nop
mov
pop
roll
pushl
ret
jmp
js
xchg
scas
ja
push
inc
pop
push
fcomip
mov
pop
mov
push
push
adc
sti
and
ljmp
aaa
mov
pop
iret
sbb
cmp
or
fs
push
in
popf
push
push
leave
pop
mov
mov
stc
and
xor
sub
mov
dec
xchg
sbb
cmp
in
enter
insb
cmp
fistps
and
testb
xor
sub
dec
js
cmp
rclb
xor
out
dec
sub
inc
ret
mov
push
clc
aas
gs
mov
jmp
adc
or
push
or
stc
decb
clc
repnz
sbb
clc
incb
ja
add
xor
orl
lods
shrb
add
cmp
mov
mov
ja
mov
sub
fistpll
ret
cltd
xchg
repz
jb
dec
sub
out
push
mov
ss
call
aam
push
insb
test
lods
add
cld
sbb
cmp
jp
inc
aad
cld
push
pusha
jge
cmp
sbb
cmp
jne
mov
add
mov
sbb
sarb
aas
sahf
mov
shr
jmp
stos
jbe
popa
adc
inc
xchg
and
add
cmpl
fidivs
xchg
outsl
jae
cs
pop
push
mov
adc
pop
add
les
sti
inc
mov
repnz
leave
inc
pop
hlt
hlt
pusha
stc
sarb
pop
hlt
push
clc
aad
push
inc
add
pusha
mov
jns
inc
clc
outsb
mov
aam
and
push
dec
push
hlt
je
add
test
dec
clc
inc
and
in
and
dec
inc
notl
nop
cmp
add
push
add
pop
cli
adc
mov
dec
jmp
dec
ret
jns
jbe
inc
add
rcrl
pusha
and
leave
push
xor
xor
cmp
cmc
sbb
sub
pop
shrb
and
out
add
daa
dec
inc
pop
rcrl
mov
mov
dec
dec
dec
ss
cld
inc
xchg
ror
mov
clc
std
inc
stc
int
and
pop
mov
jecxz
mov
add
mov
and
cmpsb
leave
pop
repnz
and
push
lds
xor
ss
push
leave
inc
data16
sbb
xor
push
and
xchg
fbstp
xchg
addb
mov
fidivrs
loop
mov
mov
enter
loop
push
data16
xchg
mov
int
sbb
and
mov
xor
push
je
add
out
push
test
sbb
arpl
aam
sub
cmp
add
sbb
push
inc
sti
sbb
pushf
sbb
bound
jle
daa
push
mov
out
xlat
push
and
aas
imul
ds
cmpsb
or
xor
nop
xchg
test
jb
rorb
clc
pop
stc
data16
outsl
dec
insl
xchg
lret
sti
outsb
cld
je
pop
mov
add
and
push
lret
inc
sahf
xchg
lods
hlt
cwtl
inc
adc
inc
xchg
xchg
nop
xor
mov
push
sbb
jne
adc
ret
testb
aaa
inc
fiadds
mov
push
cmpsl
add
cmp
repnz
insl
outsl
outsb
jl
mov
mov
lahf
stc
xor
or
mov
js
pushl
inc
in
lcall
fst
test
lcall
push
fs
mov
leave
inc
pop
call
fildl
add
add
aas
cmp
lret
je
add
jmp
push
outsb
addr16
add
jne
data16
sub
stos
pop
pop
ret
add
add
jle
ud1
call
pop
enter
and
mov
xor
pop
enter
aad
ja
outsb
rcr
mov
lock
inc
scas
mov
fidivl
insl
jg
push
add
pop
stc
test
nop
push
pop
loope
mov
and
add
mov
jge
je
push
jge
push
push
pop
pop
mulb
adc
mov
add
push
call
outsl
xor
fdivrs
fidivs
push
push
imul
adc
bound
add
xchg
mov
loopne
sub
pop
adc
and
mov
mov
or
test
andb
popf
push
or
cmpsb
cmp
sahf
js
repz
adc
jne
pushf
add
aad
push
cmovne
xor
and
int3
ret
std
cmp
orl
xor
les
fistpl
les
stos
or
add
xchg
gs
rcl
fcomp
mov
lds
fdivrs
add
inc
add
sbb
mov
sbb
and
lea
into
in
mov
dec
loopne
adc
mov
sub
mov
scas
out
sub
adc
pop
jp
dec
pushf
push
push
adc
or
and
mov
dec
adc
lock
loope
pop
test
out
xor
push
movsb
sbb
jnp
xchg
loop
fdivrl
mov
test
aas
adc
hlt
cmp
and
imul
loope
xor
add
inc
das
xlat
ljmp
sbb
xor
push
lods
jnp
dec
pop
ss
push
ret
inc
fs
adc
xor
or
sub
es
pop
add
cmp
outsb
pop
push
xor
push
or
push
dec
dec
dec
dec
xor
shll
fldt
shrl
addr16
mov
jb
jo
in
jne
out
jae
daa
xor
repnz
jmp
pop
pushf
popf
push
sahf
jmp
in
lahf
gs
jb
mov
jne
mov
push
movsl
cmpsb
pop
cmpsl
push
gs
jbe
jb
inc
stos
stos
push
lods
lods
push
mov
int3
jb
dec
lds
mov
lcall
cs
dec
int3
push
or
into
jno
iret
rorb
rcrl
shrb
roll
aam
mov
mov
xor
inc
xchg
gs
pushf
cmpsb
imul
pop
outsb
fwait
xchg
xchg
inc
push
cwtl
js
lcall
fcmovu
fcompl
fucomp
mov
fnstsw
cmp
inc
loop
imul
ds
mov
lcall
jb
xchg
fdivs
mov
or
mov
mov
mov
inc
sarl
mov
enter
or
aaa
into
enter
mov
mov
jo
sbb
clc
add
into
adc
enter
cld
sbb
or
sub
pop
mov
mov
shlb
push
iret
pop
inc
xlat
jne
push
jne
push
pop
das
popf
lea
nop
cmp
xchg
lcall
mov
mov
xchg
das
aaa
lock
sahf
pop
sti
je
dec
push
mov
or
mov
loop
je
sbb
cltd
add
sub
es
mov
cld
repz
push
sbb
stos
mov
push
mov
sub
mov
xor
xor
es
add
rcrb
lahf
stc
data16
add
in
inc
mov
pop
ja
mov
jae
test
sub
push
jg
sbb
push
aas
lods
lsl
lock
subl
imul
cmp
pop
inc
pop
aaa
cmp
jbe
mov
ds
mov
imul
cmp
jb
pop
sbb
push
icebp
nop
dec
sub
add
pop
jne
outsl
add
cmpsl
pop
and
or
test
push
jmp
inc
and
sar
or
sahf
leave
mov
inc
or
hlt
jne
iret
data16
stos
adc
push
xchg
out
fiaddl
inc
xor
adc
xchg
call
je
test
sub
cmc
clc
loopne
loop
leave
and
mov
jmp
pop
ja
fld1
ret
dec
push
and
mov
push
sbb
push
lods
inc
sub
push
and
mov
push
mov
add
je
mov
and
or
sub
dec
xor
or
xor
cmp
inc
das
outsl
add
je
sbb
adc
or
lret
lret
lret
jl
push
jle
adc
adc
pop
push
inc
in
sti
popf
or
jns
out
sub
mov
aas
adc
add
and
rcrl
test
in
pushf
in
jle
jl
sub
stos
dec
push
jl
push
jg
push
sub
lret
mov
lret
popa
arpl
outsb
lret
mov
daa
je
jae
insb
leave
leave
mov
outsl
arpl
fsubrl
push
je
das
or
pmuludq
jmp
das
sbb
cmp
rcll
rcrb
shlb
scas
sub
in
insb
mov
and
add
mov
and
and
jle
or
in
or
push
push
iret
cmp
sbb
or
out
or
pop
cld
pop
clc
test
sahf
push
pop
xor
in
mov
das
cs
pop
leave
das
lahf
inc
mov
dec
add
mov
popf
lock
jge
mov
add
mov
mov
fsubrs
adc
pop
push
adc
shrb
sub
pusha
and
mov
rcr
and
aaa
mov
push
push
cwtl
add
jecxz
adc
jb
adc
aaa
pop
in
dec
push
adc
leave
int3
jne
push
jae
call
ret
or
fcoml
xor
mov
call
and
add
dec
or
imul
or
xor
arpl
fisttpl
lods
jb
scas
mov
gs
mov
mov
mov
jmp
mov
mov
mov
lcall
mov
mov
mov
xlat
insb
mov
lds
mov
cmpsb
imul
lcall
iret
rcl
rclb
fwait
cmpsb
pop
aam
xlat
je
dec
shll
fs
shll
je
outsl
jns
or
es
push
call
cmpsb
aas
popa
arpl
imul
lcall
jb
jp
lcall
cmp
and
sbb
or
push
movsb
aaa
jmp
aam
cwtl
push
jns
adc
or
cltd
dec
lods
push
adc
add
loope
popa
sarb
div
inc
add
daa
popf
jp
adc
jne
call
insb
dec
sahf
pop
cli
popf
fdivrl
cld
mov
mov
push
push
mov
lods
push
lds
lahf
mov
int3
fsubrl
xorl
cmpsb
imul
sti
cld
andl
ret
lock
sbb
iret
xor
and
std
xlat
in
pop
push
pop
push
mov
fcmovnbe
jmp
push
sarl
xor
adc
push
mov
adc
and
lcall
fadd
and
xchg
stc
fld
inc
mov
jnp
repz
fwait
insl
cmp
cmp
mov
mov
incl
scas
pushf
ja
jge
push
call
pop
fsubrs
xchg
push
mov
fmul
je
or
push
sub
fwait
mov
insl
in
fsubl
fdivr
shlb
fildl
adc
pop
addb
pop
jmp
scas
mov
push
add
cwtl
sbb
push
mov
inc
sub
mov
cmp
cmpl
xchg
ja
call
daa
and
addl
jg
enter
cld
in
mov
outsb
popa
arpl
imul
imul
cmpsb
imul
call
pop
daa
je
dec
sub
mov
int3
in
mov
repz
nop
mov
pop
decb
jbe
mov
imul
adc
inc
in
repz
xchg
sbb
rcll
mov
add
add
and
ljmp
sbb
scas
adcb
jae
or
in
jecxz
in
in
cs
fs
mov
call
arpl
jb
arpl
fmull
outsw
insl
jne
imul
push
enter
ja
rcrl
jmp
jmp
das
mov
sbb
push
lds
mov
jnp
mov
cmp
adc
test
mov
jge
xchg
or
pop
mov
mov
mov
or
and
add
aad
insl
jp
pop
imulb
push
in
into
and
cmp
fiadds
sub
es
push
adc
cmp
or
sbbl
lret
out
adc
nop
dec
and
lods
mov
fldl
push
mov
jecxz
pop
stos
sub
xchg
push
push
push
mov
pop
mov
or
jne
loopne
shlb
inc
push
inc
es
sub
xchg
mov
hlt
aam
fiadds
sbb
mov
sbb
and
jnp
pop
and
push
cmp
push
icebp
test
ficoml
mov
aam
push
test
pop
jmp
aam
pmuludq
inc
movzbl
pop
clc
xor
and
mov
out
xor
and
addb
and
push
pop
rcl
add
add
push
or
lods
imul
mov
fnstenv
icebp
popa
pop
repnz
cmc
div
insb
or
lcall
popa
jo
lcall
jae
dec
mov
cmpsb
outsb
outsw
sub
cmc
aad
test
icebp
movsb
jae
in
xor
nop
inc
push
sbb
shll
dec
push
outsl
jne
test
pop
sarb
dec
push
dec
inc
enter
xchg
xor
add
ss
lret
and
adc
sbb
mov
add
xchg
aad
inc
xchg
test
pop
cmp
push
xchg
cmp
ret
and
test
xchg
stos
inc
cltd
out
cvtdq2ps
test
xchg
in
sbb
shrb
sub
in
push
mov
inc
and
sub
push
jle
xor
movsb
cmpb
cmp
cmp
fsts
push
enter
int3
push
fists
pop
xchg
out
sbb
mov
xchg
xchg
dec
decl
push
lea
arpl
lea
pop
add
add
fldl
push
sbb
int
or
std
add
cmp
in
xor
enter
mov
shrl
xchg
lea
cmc
xor
jne
outsl
push
jmp
xchg
mov
xlat
fcomps
fisubrl
xor
jae
arpl
jae
inc
shll
imul
outsb
outsl
ja
shlb
push
sbb
popa
xor
shll
shll
push
add
sbb
inc
mov
mov
aaa
leave
data16
js
btrl
pop
int3
int3
add
cmp
adc
fprem
and
mov
lcall
cs
ret
ds
xor
mov
inc
cs
scas
mov
push
cvtdq2ps
aad
loop
subl
lea
fisubl
mov
mov
fldl
enter
lcall
mov
fistpl
push
or
pop
push
add
xor
jp
xchg
cmpsb
ljmp
adc
std
sarb
inc
adc
outsl
push
or
and
push
rep
sti
movsb
lods
add
lcall
mov
adc
or
mov
movsl
jnp
inc
daa
and
test
mov
xchg
mov
movb
or
fisubrl
lcall
push
frstor
fisubrs
jns
cmp
loopne
loope
and
ds
mov
in
inc
out
lahf
movsl
cmp
je
push
daa
movsl
fnstcw
jmp
pushf
ljmp
xor
popa
fcmovnbe
mov
pop
sub
push
sub
xor
mov
arpl
imul
xor
inc
sub
into
mov
dec
imul
std
leave
inc
mov
rcrb
jp
push
data16
gs
xor
xchg
inc
ror
cmp
in
mov
lret
sub
fs
ja
and
into
arpl
in
rcl
lcall
and
xor
sbb
sbb
sbb
sbb
mov
pop
or
mov
inc
push
pop
imul
lcall
adc
mov
movsl
push
outsl
jo
jno
jns
cmp
pop
jb
je
cmp
cmpsl
jne
jbe
adc
sbb
mov
into
into
dec
mov
fdivrs
and
roll
dec
ret
lea
mov
xchg
orl
outsb
int
push
jo
pop
testb
or
xor
into
sbb
push
movsb
pushl
ds
jmp
enter
lcall
dec
inc
mov
lcall
pusha
aaa
popa
in
fs
je
mov
fnstsw
xchg
cmp
push
ja
jb
int
mov
scas
jae
je
mov
add
sbb
mov
cmp
or
lcall
mov
cli
push
mov
call
cli
arpl
ljmp
or
testl
inc
mov
adc
addl
pop
test
cmpsl
psrld
dec
out
adc
outsl
mov
xchg
inc
rolb
xor
dec
and
js
add
or
mov
ljmp
pop
mov
lods
pop
pusha
dec
insb
or
int3
int
jmp
stc
sahf
jmp
ret
loopne
inc
pop
loope
xchg
dec
insb
ss
std
cmpsl
frstor
inc
inc
cmp
jno
je
jne
jmp
leave
rorb
xor
jae
out
repnz
ds
rorb
sar
roll
addr16
shrb
aam
cmp
aad
pop
stc
xlat
stc
fdivr
fsubl
inc
mov
stc
push
jns
cmp
hlt
mul
cmp
aaa
adc
clc
leave
clc
faddl
repnz
cld
aam
push
leave
aad
fdivr
fsincos
bswap
and
popf
pop
pop
ja
inc
mov
test
fisubrl
pop
js
push
or
sbb
add
xor
subl
or
lods
divb
lods
and
cmp
mov
insb
mov
mov
popf
popf
insb
sbb
leave
shrb
mov
mov
popf
sub
pushf
mov
sahf
dec
insl
popf
sub
leave
lahf
mov
pushf
pushf
pushf
pushf
dec
mov
leave
rorb
xchg
aad
fsts
pop
xchg
dec
enter
xchg
cwtl
cltd
lcall
test
imul
mov
mov
leave
leave
leave
leave
mov
int3
fwait
mov
push
fcomp
int3
adc
clc
in
and
fdivr
mov
cli
mov
fdivr
int3
pop
test
cmp
pushf
les
xchg
and
xchg
add
pop
sub
mov
es
pop
test
pop
mov
fnstcw
hlt
push
insb
or
add
into
pusha
hlt
inc
push
hlt
fdivr
cli
hlt
sbb
std
push
lods
xchg
jp
jle
loopne
add
adc
sti
or
mov
out
pop
pop
scas
mov
jmp
clc
jl
pop
nop
add
fs
jno
nop
or
ret
jmp
jbe
leave
and
xor
sbb
push
lahf
mov
mov
mov
mov
mov
add
pop
mov
adc
idivb
call
and
cli
push
push
and
test
ja
ret
push
sub
sbb
and
cltd
fstpt
in
add
sub
je
fldt
jmp
and
cld
xor
call
cmpsb
mov
call
dec
ds
lods
sbb
clc
mov
insl
dec
jb
in
and
nop
and
lahf
push
jbe
add
cmpps
inc
les
outsb
jbe
mov
push
push
cmp
sub
lods
or
and
mov
mov
xor
ja
adc
scas
push
sbb
inc
es
int
add
sub
fiaddl
or
adc
iret
stos
adc
push
cmpl
out
xor
and
add
jg
add
fmuls
and
jmp
leave
xchg
sbb
and
into
sub
and
movsb
aas
add
sbb
push
xor
pop
push
insb
fsubr
and
shll
scas
rclb
lock
jnp
out
push
les
cwtl
push
jmp
sub
aam
outsb
arpl
addb
arpl
cltd
push
and
push
mov
mov
lret
jb
sbb
sub
jl
or
icebp
push
push
call
cs
and
xor
pop
ja
sbb
dec
call
add
out
mov
or
mov
js
out
add
andb
int3
pop
iret
scas
push
mov
jmp
pop
ljmp
dec
xor
leave
jno
jl
test
clc
cmp
in
nop
xchg
in
movsb
lods
loopne
adc
push
push
sub
mov
outsl
data16
ja
sub
mov
jb
pop
dec
jle
das
lret
gs
xor
push
mov
add
mov
dec
sub
call
push
mov
sub
xchg
sub
push
xchg
gs
xchg
je
imul
pop
dec
outsb
insb
imul
gs
push
gs
pop
xchg
je
imul
fists
addr16
outsb
inc
outsl
negb
das
cmpsb
fistpll
add
je
dec
je
sbb
or
bound
ljmp
mov
adc
fldcw
inc
sub
push
shlb
mov
push
enter
adc
pop
cmpw
cmp
cmp
adc
testl
rclb
and
mov
inc
cmp
jl
jb
inc
cmp
lea
cmpb
js
js
ljmp
add
cmpl
mov
push
or
imul
push
xchg
or
mov
push
mov
push
or
fisttps
push
inc
dec
mov
sub
sbb
push
add
sub
pusha
je
dec
lcall
dec
or
dec
icebp
mov
enter
aaa
cli
pop
add
sbb
rclb
aas
add
ffreep
adc
jne
mov
sub
mov
lods
int
inc
hlt
push
mov
mov
jae
or
pop
jg
in
test
lea
shr
jle
movzwl
mov
mov
jne
daa
add
add
test
cmp
pop
or
fisttps
adc
add
jmp
cmp
jne
data16
fisttpl
fimuls
add
or
sub
mov
enter
fwait
add
and
mov
int3
outsb
adc
mov
test
inc
inc
cmp
jl
add
jmp
test
push
ret
xchg
mov
add
mov
adcl
push
or
test
jmp
dec
je
pushf
in
pushw
push
aam
outsb
inc
adc
loope
outsb
mov
mov
jle
lea
pop
test
das
mov
pop
pushf
cld
add
push
scas
clc
sub
sub
inc
rclb
loope
js
add
add
push
pop
lds
xor
mov
aad
pop
lea
sbb
cmp
add
push
call
ss
loopne
inc
aaa
pushl
lcall
xor
xchg
xor
dec
insl
pop
adc
les
movl
add
push
push
or
or
pop
sub
mov
fcompl
mov
addb
fadds
jge
ja
mov
xchg
ret
mov
or
fwait
sti
lea
testb
je
pop
inc
sub
mov
and
mov
pop
or
sti
push
mov
sbb
mov
enter
push
add
data16
xchg
mov
mov
cmp
mov
mov
daa
push
outsb
adc
notl
cmp
jne
inc
in
loopne
sbb
sub
mov
jae
fmuls
and
in
sub
xorb
lret
sub
insb
outsl
gs
lret
mov
js
gs
mov
push
push
push
push
or
shrb
sub
vmovshdup
or
xor
add
mov
jae
arpl
lahf
mov
or
and
std
add
add
inc
lea
push
xor
sahf
push
leave
sub
movsl
mov
add
fidivs
adc
and
jp
or
or
xchg
rolb
call
push
or
mov
mov
ret
and
mulb
push
ja
push
sub
movsb
sbb
out
aad
outsb
adc
cltd
jne
push
shlb
push
sbb
sbb
cltd
lods
mov
push
cmp
add
js
adc
dec
inc
cwtl
xor
sub
outsl
xchg
add
in
test
fdivrl
pop
mov
or
cmp
call
push
or
lock
orl
sahf
push
rcll
jbe
mov
out
add
cmpsl
push
fsubrl
call
mov
lock
pop
lods
jbe
lds
pop
push
mov
pop
sbb
add
adc
rclb
in
movsb
fwait
xor
add
and
fisttpll
inc
pop
popf
sbb
jle
mov
mov
mov
jp
pop
or
fwait
cmc
add
pop
cmpsl
mov
bound
mov
sbb
jnp
loop
lret
mov
inc
push
add
add
cmp
lods
push
or
add
or
mov
xor
loopne
enter
add
iret
decb
inc
iret
pop
xor
enter
pop
ror
lret
and
and
int
aas
repz
pop
cmp
js
rcrb
ret
ret
les
ss
lret
push
loope
lcall
lret
mov
jae
gs
mov
lret
fs
lahf
xor
mov
xor
lcall
js
cmp
pop
push
jne
and
inc
sbb
fwait
rorb
call
divl
in
ret
inc
dec
loopne
mov
adc
adc
cmp
pop
fs
mov
rolb
push
mov
adc
and
push
or
repz
daa
cmp
mov
push
mov
loopne
dec
or
push
xor
sbb
stc
xor
sub
ret
and
xor
shrl
sub
mov
xor
cli
sbb
andb
push
lock
add
icebp
movb
push
les
sub
ljmp
testl
aam
lret
mov
lret
gs
insb
outsl
jb
lret
mov
gs
gs
and
in
jge
scas
inc
fstl
lock
ljmp
jp
int3
out
cmpsb
mov
and
adc
std
mov
adc
leave
std
cld
mov
and
or
subb
jmp
fwait
sub
fldl
ret
clc
mov
test
ds
sbb
cltd
sub
or
popa
add
cmpsb
push
sti
hlt
jmp
mov
add
push
mov
push
sbb
aad
mov
sbb
fbld
aas
or
jae
fs
add
leave
lcall
int3
add
insb
sub
xchg
xor
adc
repnz
pushf
das
enter
mov
les
gs
mov
or
add
adc
cmp
xchg
lret
movsb
xor
cmpsl
or
mov
gs
in
inc
test
cmp
adc
ja
pop
ja
pop
mov
jbe
push
dec
xorb
fs
gs
sar
arpl
gs
js
gs
mov
and
jb
and
dec
outsb
imul
gs
jb
mov
sub
add
dec
gs
jbe
int3
adc
dec
lods
add
pop
cmp
arpl
xor
dec
gs
mov
mov
nop
mov
je
dec
fstps
and
add
mov
addr16
cltd
mov
div
or
jb
mov
out
aas
fldenv
inc
imul
aas
mov
outsl
outsl
insb
push
push
outsb
popa
jo
push
push
and
out
jbe
jne
je,pt
push
mov
dec
dec
ss
adc
pop
inc
insb
roll
sbb
aam
fidivs
arpl
inc
pop
lcall
out
das
adc
jge
dec
outsl
fs
adc
mov
lea
dec
outsl
lods
or
mov
jb
jb
movq
mov
push
xor
mov
push
xchg
mov
sbb
jne
or
and
sbb
int
jb
adc
add
or
mov
inc
inc
sub
lods
mov
ja
inc
sbb
dec
xor
ret
bound
push
push
gs
xor
lea
inc
sbb
inc
cmp
mov
add
mov
sub
push
push
push
push
cmp
adc
popa
mov
sub
sahf
int
daa
jno
pcmpeqb
and
int
pop
punpcklbw
ret
push
ret
shrl
fists
stc
je
lret
insl
mov
sub
fsubrl
hlt
sub
mov
mov
inc
xchg
popa
fsubs
loope
xchg
outsl
clc
push
imul
xor
insl
and
cmpsl
outsl
imul
movsb
sub
xor
dec
mov
loope
sub
insl
fistpll
nop
in
inc
mov
imul
fdivrs
or
inc
clc
imul
aad
push
mov
imul
aas
pushf
insl
sbb
adc
inc
add
popa
or
fldt
outsl
mov
dec
jae
ret
mov
imul
in
add
arpl
imul
movd
std
xchg
lret
ss
jecxz
push
lock
push
dec
inc
push
lods
add
scas
cld
shrb
jae
data16
add
jae
insl
inc
movsb
loope
addr16
dec
push
sbb
ret
ficoml
cmp
pop
cmc
pop
push
add
xor
jo
adc
adc
mov
leave
jne
repnz
or
xor
pop
add
ljmp
gs
or
nop
xor
jb
xor
idivl
and
xchg
in
xchg
outsb
jne
push
popl
fadd
ja
add
dec
jne
fsubr
fdivs
jo
inc
popa
arpl
filds
mov
and
inc
push
inc
push
add
clc
cmp
cltd
add
insl
mov
xchg
or
mov
rcrl
lret
pop
ret
daa
xorb
add
or
pop
addr16
pop
pop
adc
cmp
data16
mov
int3
dec
xchg
popa
shll
inc
sahf
daa
cmp
jns
imul
mov
in
cmp
test
in
hlt
inc
mov
fwait
aas
aas
xor
inc
pop
push
add
pmulhrw
out
jne
dec
pextrw
xor
loope
jbe
js
insb
mov
jo
ret
dec
dec
add
out
adc
inc
or
lea
daa
and
addr16
jae
sti
scas
or
outsl
cmp
dec
pop
iret
push
dec
fstl
push
and
jmp
or
cmpsb
loop
jmp
push
xlat
or
mov
add
stos
dec
insb
adc
das
bt
mov
call
jge
fdivs
jo
or
pop
ljmp
and
clc
mov
jbe
scas
cltd
pop
or
bound
pop
jb
jp
add
add
pusha
dec
stos
xor
sub
or
stos
and
fs
jmp
cmp
xor
sub
xor
add
pushf
pop
jbe
loopne
lds
in
pop
dec
mov
dec
aas
push
cmp
inc
int
sub
mov
xor
jmp
popl
repz
mov
out
or
inc
pop
push
and
or
jb
out
bound
jmp
lods
sarb
cmpsb
loope
cmovg
jg
sbb
jne
adc
add
out
pop
push
cmp
movsl
ret
mov
xlat
hlt
mov
pop
inc
pusha
imul
ljmp
call
sahf
cltd
int3
fcmovbe
inc
mov
mov
adc
inc
sarb
in
pop
int3
cltd
insl
inc
incl
cltd
imul
int
xlat
stos
add
dec
jp
cmp
push
jle
test
call
lcall
sub
mov
cmc
add
jg
cli
test
fidivs
bswap
dec
lea
lea
ljmp
cmp
fimuls
mov
add
shrd
mov
jmp
push
or
stos
clc
and
adc
xchg
mov
shrl
or
insl
negl
and
enter
sbb
data16
dec
dec
push
adc
dec
inc
pusha
dec
shlb
rol
sar
sub
adc
ret
dec
and
aam
add
add
push
sbb
jmp
inc
scas
scas
or
pushf
push
in
out
mov
adc
cmpsb
adc
or
mov
adc
ja
xor
dec
sub
mov
pushf
cmc
sub
cmc
pushf
lods
mov
adcb
movsl
cli
aam
aaa
ror
or
add
push
sub
not
add
cmp
stc
neg
out
imul
call
ret
pop
xor
fdiv
pushl
mov
fwait
dec
gs
loop
imulb
sub
dec
push
mov
or
mov
jmp
sti
negl
adc
jg
cmpsl
aad
jle
out
pop
push
jb
xor
mov
out
jae
pop
shrb
into
nop
push
stos
jb
data16
bound
pushf
mov
inc
jmp
fwait
in
push
and
test
test
cmpsl
int3
cbtw
pusha
bound
mov
pushf
aaa
push
call
inc
mov
jmp
push
icebp
pop
sbb
dec
add
lods
sbb
lods
aas
mov
or
push
popf
outsb
adc
mov
push
push
sub
call
or
data16
test
dec
setae
cmp
jae
push
push
pushf
das
add
add
jmp
fdivl
mov
cs
cmp
jb
clc
mov
inc
cmp
jmp
mov
jle
jle
sti
inc
and
xor
fisttpll
inc
sbb
pop
push
push
push
or
add
inc
in
outsb
inc
mov
inc
call
mov
lahf
lock
add
andl
scas
mov
mov
dec
xor
rorb
mov
call
call
decb
xchg
pop
mov
fistl
lret
add
xlat
xchg
push
xchg
and
sub
mov
inc
jl
push
pushf
xor
fisttps
jmp
add
lea
adc
test
sub
pushf
mov
fcomp
call
ficomps
xor
mov
and
icebp
xor
fistpl
lea
enterw
lock
jmp
adc
in
sti
addr16
push
pop
in
cld
fstp
data16
scas
js
mov
pop
pop
outsb
mov
in
pop
pop
or
jns
and
jb
cmp
pop
pop
pop
cmp
mov
pop
dec
arpl
lret
dec
push
pop
pop
push
adc
pusha
fisttps
pop
add
push
imul
mov
cmpsl
inc
pusha
pop
push
int
negb
mov
lret
jle
daa
addl
mov
aam
jmp
pop
outsl
xor
pop
or
pop
ja
jecxz
pop
aaa
sti
or
and
lock
dec
repz
adc
fwait
addr16
pop
mov
mov
bound
lahf
push
out
outsl
pop
repnz
inc
fincstp
faddp
fistps
lahf
pop
mov
ja
pop
push
ret
add
cmpsl
fs
out
int
fldt
push
imul
stc
xor
lock
fcomi
arpl
dec
push
jnp
xor
das
mov
out
sbb
jae
cmp
mov
add
mov
push
arpl
xchg
ret
cmp
stos
or
out
inc
js
ja
pop
adc
neg
popa
divb
pop
add
inc
jnp
mov
imul
fildl
push
fidivrs
xlat
add
repz
aas
fistpll
mov
mov
loope
xchg
mov
mov
loope
pop
inc
addr16
jecxz
or
maxps
fsubp
mov
lahf
dec
jnp
mov
shrl
mov
mov
fwait
sub
stos
aas
add
sub
movsl
or
add
jmp
mov
shl
add
dec
divl
mov
xchg
sbb
ljmp
dec
fidivs
rorl
cmp
mov
pushf
aaa
not
pushf
pop
fcomip
pushf
pop
loopne
les
into
pop
lods
hlt
or
fwait
jnp
fisttpl
sbb
or
push
push
jmp
cli
and
xor
cmp
xchg
outsl
cld
popf
or
clc
push
inc
call
out
cs
pusha
pop
sbb
out
pop
adc
jmp
cmc
adc
aam
mov
fidivrs
mov
push
andl
insb
push
jnp
ja
std
pusha
mov
es
and
test
push
insl
jbe
sti
pushf
loopne
jmp
mov
fcom
hlt
data16
lock
scas
push
or
add
mov
ss
cmp
adc
cmp
les
mov
push
pop
cmp
call
clc
dec
mov
clc
push
shl
mov
rolb
xchg
clc
das
enter
sub
stc
push
push
clc
stc
ret
mov
fdivr
es
cmc
jmp
and
xlat
mov
cwtl
repnz
in
pushw
xor
mov
pushf
cmp
sub
jmp
into
testl
imull
fsubl
sub
mov
sub
mov
dec
add
push
push
fsubrl
mov
mov
mov
rcl
test
mov
not
test
jne
cmpb
divl
clc
rclb
push
shl
push
add
mov
fists
jb
adc
push
lea
mov
or
sub
mov
fcmovbe
xorb
xchg
call
xchg
mov
mov
pop
lahf
insl
in
jmp
jo
test
sub
icebp
jb
sub
jg
mulb
movsl
out
adc
mov
jne
not
mov
in
stc
clc
add
test
jne
cmc
or
movsb
jne
loope
push
ror
les
sti
inc
fwait
inc
fistps
pop
inc
inc
and
fstpt
rorl
dec
xchg
add
setge
iret
sub
les
rcl
xor
shll
mov
push
test
push
sbb
popa
mov
mov
add
push
mov
mov
jmp
push
mov
push
fcomps
adc
cli
or
rcl
sub
call
repnz
xchg
xchg
mov
or
rcl
neg
testl
adc
xlat
repnz
fyl2x
sbb
jle
dec
test
jecxz
and
in
or
popf
xchg
ret
pop
pop
dec
jne
push
mov
mov
pop
movsl
dec
cmp
pop
jg
xchg
enter
or
rorb
xor
aam
adc
cmc
sti
push
jmp
push
test
jmp
call
adc
push
bound
rep
or
inc
jmp
test
cmp
pusha
dec
xor
jnp
movsl
pushf
jne
jl
std
mov
mov
sbb
dec
mov
mov
push
call
jecxz
icebp
fiaddl
inc
rcrl
push
jecxz
sbb
adc
nop
mov
shld
push
imul
lock
lock
stc
adc
in
jo
adcb
add
jae
cmpsb
push
adc
shlb
xchg
in
push
cmpsl
ja
jno
mulb
pushf
int
cltd
and
into
or
and
sbb
fisubrs
enter
fcoms
cmp
push
jae
sbb
mov
sub
sub
mov
jecxz
add
pop
mov
imul
movsl
loop
cmc
movsb
shl
mov
dec
inc
enter
roll
cmp
mov
mov
call
or
outsl
shr
clc
outsl
xor
mov
jle
adc
test
mov
mov
ficompl
add
jge
insb
dec
pop
sub
push
jb
popf
enter
inc
stc
pushf
sub
adc
cmp
cli
xor
push
mov
or
inc
js
or
sbb
fwait
or
sub
lods
sbb
mov
out
push
hlt
inc
sar
cmc
shl
call
xchg
in
js
frstor
xor
sub
mov
jmp
pushl
and
aam
sbb
adc
xor
jns
cmp
adc
pop
dec
out
xor
adc
xor
fimuls
xchg
sti
nop
movsb
xchg
mov
push
push
inc
fnstcw
or
mov
lods
xchg
mov
pushf
js,pn
mov
sar
je
ret
cmp
jmp
fsubrs
mov
push
mov
mov
loopne
jbe
scas
lret
pop
nop
or
add
outsb
std
push
jg
lahf
sbb
fadds
inc
gs
fwait
mov
sar
cmp
pushf
ja
mov
adc
and
fildl
ljmp
pop
mov
push
mov
xchg
jnp
jnp
or
not
mov
or
les
ja
inc
sub
jb
adc
rcr
mov
dec
sbb
jnp
mov
sub
mov
stc
pusha
rorl
je
jecxz
or
jmp
or
pushf
inc
sbb
cli
push
repnz
push
mov
lret
imul
cmc
inc
pop
inc
pop
stc
sahf
sar
aaa
pop
add
out
sub
jae
xchg
xor
jne
add
or
ret
popf
xor
popf
jo
sub
sbb
dec
lahf
xorb
ljmp
cwtl
mov
lock
sbb
fists
ret
aaa
jnp
mov
push
inc
adc
test
lods
incb
cwtl
adc
or
sub
out
shlb
cmpsl
cmc
sahf
test
pop
cli
push
cmc
push
mov
rcrl
daa
cmp
or
jbe
repnz
push
shl
inc
adc
bound
outsl
sbb
push
dec
cmp
fwait
sub
xchg
sub
pop
addr16
cmp
push
imul
outsb
or
mov
daa
arpl
fnstsw
pop
pusha
insl
enter
cmp
mov
out
imulb
mov
add
add
sub
cmp
test
outsb
pushf
and
push
xor
add
lret
jns
push
aaa
clc
rcr
sti
pop
fstpt
out
leave
xchg
lea
enter
fwait
pop
loopne
jnp
lds
sub
dec
xchg
in
and
lea
dec
aas
pop
pop
popa
leave
push
out
insl
clc
pop
frstor
wbinvd
call
mov
bound
pop
lock
or
incl
outsl
cld
rol
insl
loope
leave
mov
shr
out
dec
scas
icebp
inc
repnz
jmp
fists
cmp
jmp
cmp
and
mov
out
lea
adc
rcl
test
dec
jg
fiaddl
mov
imul
xchg
or
jmp
jmp
xor
inc
xchg
pcmpeqb
adc
xor
arpl
call
inc
test
mov
pop
inc
or
cli
inc
sub
clc
fbstp
pop
loopne
add
pop
les
addps
sbbl
lea
js
xchg
and
insl
jecxz
aaa
enter
jmp
sub
mov
and
sbb
cld
xlat
sbb
into
or
out
add
mov
testl
mov
pop
dec
sahf
inc
pop
decl
sbb
xchg
cli
lea
jp
sbb
data16
adc
pop
sub
push
std
in
xor
jmp
xor
loopne
pusha
jnp
add
push
and
ljmp
xor
arpl
xor
push
dec
pusha
push
test
dec
jmp
sub
mov
bound
adc
xor
or
push
enter
in
cli
mov
movsb
repz
push
pop
pop
call
xchg
xlat
movb
dec
jmp
xchg
mov
pusha
xor
or
sbb
dec
lods
testb
mov
in
xchg
in
adc
mov
fs
mov
mov
sbb
xor
mov
repnz
into
cmp
lods
inc
sbb
loope
xchg
push
cmp
jmp
call
mov
stos
rorl
stc
mov
cmovb
adc
jmp
lock
xchg
imul
mov
inc
or
int
shrb
cmp
pop
enter
push
orb
pop
divl
add
lods
pop
inc
cmp
pop
sub
lock
jmp
and
mov
pop
sub
sub
loop
cmp
fistpl
je
mov
push
pushf
or
or
inc
ret
rclb
or
xor
add
pop
mov
rol
repnz
jle
ss
test
les
dec
imul
cmc
pop
arpl
jge
push
mov
movsb
adc
pop
dec
fiaddl
ds
or
clc
lret
mov
cmp
enter
inc
push
in
or
or
cli
cmc
ror
sub
lahf
lds
loope
inc
clc
mov
in
dec
cmp
mov
sbb
lods
dec
jmp
out
or
stos
fbstp
cmp
dec
jae
mov
loope
mov
fs
cmp
adc
outsl
in
scas
push
sub
sbb
cld
jnp
adc
loop
outsb
sub
pusha
ret
add
hlt
scas
rclb
inc
fiaddl
outsb
jge
push
inc
setg
or
daa
ror
scas
out
sub
rolb
jmp
mov
scas
sub
and
pop
fstpl
pushf
adc
movsl
shrb
xor
add
aaa
add
adc
xchg
jo
mov
mov
clc
and
jle
cmp
or
sbb
shl
or
pop
mov
mov
xlat
or
sub
int
into
push
mov
fwait
jg
sub
push
mov
loopne
rcll
test
rolb
int3
lahf
fcoml
push
add
cmp
sbbl
rcll
mov
or
imulb
push
vmovaps
imul
inc
subl
lods
loop
imul
shrb
add
adc
inc
sub
or
negl
add
repz
jbe
int
cmp
fsts
add
outsl
ret
ds
push
push
mov
xor
mov
rcr
dec
push
push
clc
popf
lock
call
js
out
or
inc
call
jb
add
mov
loop
js
testb
icebp
push
sbb
pop
outsb
pusha
sbb
adc
mov
mov
add
test
jbe
push
dec
jns
jecxz
xchg
sbb
xor
sub
xlat
adc
incl
incl
cmp
loop
out
fimull
in
fimuls
ljmp
add
jno
or
or
loop
fdivr
ret
das
shll
enter
mov
pop
sbb
push
data16
pop
pop
lea
enter
fcmovb
add
push
dec
ret
sbb
push
sbb
lea
cs
lret
jmp
mov
data16
jbe,pn
cltd
sbb
hlt
cld
daa
js
aas
lea
lcall
cmp
xchg
pushf
mov
and
cmpsb
pusha
jmp
inc
rcrl
in
jmp
fucomi
add
sbb
test
pusha
cmc
jmp
shl
jle
fildl
incl
cmp
cmpsl
add
push
jmp
dec
cmp
cmc
sub
mov
pushf
adc
loope
jno
add
xchg
pop
aad
or
stc
clc
mov
cmp
jle
push
call
mov
iret
push
mov
push
dec
filds
cmpl
shrb
push
out
shr
leave
data16
adc
mov
in
in
enter
or
repnz
or
ficomps
testl
shrb
mov
call
decl
dec
sbb
pop
cmpsl
pop
mov
inc
popf
leave
ja
int
adc
xchg
clc
pop
ljmp
push
sub
and
incl
lea
pop
jmp
popf
jb
int
pop
fnsave
mov
fistps
addb
test
sahf
sub
mov
pusha
mov
lahf
push
pushl
movsb
enter
xor
cmp
aad
fs
mov
dec
insb
pop
add
adc
decl
clc
mov
out
jno
sub
ss
dec
dec
ss
dec
and
dec
pop
pop
pop
repz
add
lods
push
leave
scas
pusha
scas
inc
lods
mov
dec
jg
fs
insb
data16
jp
scas
hlt
insl
insb
nop
clc
mov
adc
stos
popa
mov
inc
les
pop
outsb
mov
jae
mov
mov
mov
sub
pushl
cmp
jo
stos
pop
out
push
xor
sahf
xchg
jg
inc
int3
jmp
push
mov
dec
movsl
pop
std
jg
vphaddubw
mov
mov
mov
mov
lds
rolb
push
mov
push
in
frstor
out
stos
test
movsl
pop
cmpsb
and
mov
lea
loopne
xor
sbb
jl
cmp
jae
mov
and
test
dec
xor
pushf
or
pop
ret
outsl
pushf
or
movsb
cmp
push
test
add
or
pusha
sar
mov
sbb
loop
decb
push
out
and
push
push
jmp
or
fistpl
lcall
adc
pop
push
ret
lea
xor
incl
pushl
push
std
mov
cs
mov
mov
nop
incl
loop
mov
mov
imul
imul
shll
jg
mov
mov
jl
stos
sub
mov
int3
xor
leave
sahf
add
jg
mov
sub
add
pushf
pop
out
ret
aam
mov
mov
jmp
test
mov
cmp
sbb
test
inc
and
adc
repz
add
fbld
sbb
xor
outsb
inc
fisubrl
hlt
ljmp
mov
fcoml
cld
stos
mov
fbld
and
mov
lret
or
cmp
cs
and
test
adc
jmp
int
outsl
icebp
push
push
dec
dec
aas
mov
xchg
push
fsubs
hlt
lcall
lcall
pop
out
lret
sahf
mull
cs
cmpsb
add
jae
pop
mov
mov
lcall
push
shrb
sub
or
mov
cmp
outsb
push
xchg
dec
shll
call
das
movsb
imul
mul
rorl
mov
fldl2t
and
jle
into
outsb
inc
or
js
movsl
adc
jge
add
adc
add
lcall
push
pop
out
icebp
addr16
sbb
jle
mov
int
outsl
push
xchg
popf
pop
mov
xchg
mov
or
jo
push
cli
jg
mov
cmp
xor
loope
lods
sbb
leave
pop
xchg
test
mov
jo
mov
pop
imul
mov
fsub
stos
xor
push
xor
cmpb
ljmp
adc
xchg
mov
jg
mov
xor
decl
mov
sub
xor
dec
fsubr
jecxz
popa
jnp
adc
jp
ret
insb
sbbb
and
adc
push
cmpsl
in
mov
jo
or
cld
lahf
insb
cltd
incb
jae
cld
jmp
ja
dec
cmpsb
jmp
jae
pop
negl
push
adc
and
loopne
inc
and
jno
push
test
or
add
mov
sbb
mov
lcall
call
push
pop
aad
push
cmp
ds
ret
bound
jae
pop
and
push
jp
inc
cs
pop
or
out
inc
push
cwtl
xor
test
clc
ljmp
out
add
xchg
fbld
gs
jg
cmp
test
and
mov
sub
xchg
xchg
push
out
sti
lcall
pop
or
scas
and
lcall
mov
mov
popa
jl
pushl
insl
jae
xchg
addr16
popa
mov
popa
mov
call
adc
sarb
xchg
sub
outsb
fisttpl
fwait
lret
ffreep
out
js
and
pop
lahf
adc
jmp
pop
fcomi
jmp
xchg
out
mov
in
push
imul
ss
in
ja
idiv
lcall
in
cld
scas
jns
sbb
sub
sbb
add
incl
mov
loopne
fadds
pop
pop
inc
shlb
xor
scas
mov
add
test
mov
lods
mov
pop
pop
aam
dec
fsubrs
cld
jmp
xchg
into
arpl
sub
ds
xchg
jae
add
aaa
js
daa
push
dec
addl
dec
out
and
cmpsb
ljmp
cld
xor
in
push
mov
push
shll
stos
movsb
lcall
cmpl
mov
scas
int3
faddp
cmp
lcall
lret
clc
not
add
and
or
movsl
daa
jmp
jge
or
adc
popa
cli
cmp
xchg
adc
xchg
fnstsw
add
jmp
sub
jmp
dec
loopne
andl
or
adc
xchg
and
adc
aam
incl
jp
cmpsl
inc
andb
enter
xchg
flds
cwtl
addr16
jg
jecxz
xor
loop
sub
sbb
mov
push
mov
loop
inc
xor
jmp
sbb
testl
insl
mov
xorb
insl
daa
cld
pop
jmp
mov
pop
pop
cli
jae
sub
cmp
xlat
and
cmc
stos
mov
adcb
sbb
xor
mov
mov
push
xorl
mov
iret
xchg
lock
cld
popf
mov
insl
incb
xor
pop
sbb
andl
sub
clc
and
pop
loop
ljmp
or
mov
popf
repnz
in
push
repnz
movsb
hlt
jmp
sbb
sub
or
lds
mov
in
xchg
je
push
repnz
jnp
pop
imul
ss
fistpl
fildl
xor
xor
mov
mov
lea
movsl
sbb
movsl
xchg
sti
test
ds
cld
mov
sbbb
jmp
dec
mov
pusha
stos
test
sbb
inc
loopne
outsb
orb
and
mov
test
ljmp
movsl
outsl
mov
cmp
fistl
test
adc
jmp
test
out
lret
into
sbb
pop
jg
cmp
sub
mov
ja
nop
mov
or
dec
dec
mov
dec
repnz
xor
test
sbb
daa
lcall
mov
xor
push
push
xlat
lock
push
daa
mov
dec
xchg
push
jp
test
das
scas
cmp
or
aam
daa
add
mov
orl
mov
imul
jecxz
or
xchg
mov
push
jns
cltd
jae
mov
xor
mov
mov
xor
jg
mov
stos
add
cwtl
aas
cmpsb
stc
pushf
fwait
jns
and
js
jmp
adc
cmpsb
clc
mov
arpl
iret
repz
cli
decl
fisttpl
lds
aam
inc
cmp
daa
jno
inc
mov
xlat
cwtl
insb
jae
out
push
dec
popa
jbe
in
mov
sarl
jmp
cli
call
neg
push
addb
cmp
mov
outsl
jae
lods
call
dec
fists
sti
sbb
sbb
mov
pushl
mov
jmp
nop
scas
lods
shll
jg
jg
xor
inc
sbb
out
push
inc
int
xor
aaa
das
adc
clc
lea
inc
mov
js
fbld
inc
fdivrp
and
mov
imulb
pop
arpl
jle,pn
adc
pop
jno
gs
pop
dec
int
dec
inc
xchg
pop
mov
das
sbb
shlb
icebp
adc
je
sbb
test
icebp
inc
test
add
pop
fs
mov
sbb
xchg
out
js,pt
loopne
jg
sbb
push
or
rol
push
pop
push
arpl
imul
leavew
ficompl
jbe
mov
push
inc
add
inc
push
mov
jo
xor
mov
dec
pushf
leave
test
std
das
decl
std
push
pushf
and
cmp
cmpl
ret
jno
pushf
int3
lret
mov
pop
outsb
xorl
xchg
call
push
popf
decl
frstor
pop
mov
call
mov
cmp
inc
movsl
mov
sub
mov
cmp
dec
ds
lea
mov
push
inc
mov
addr16
imul
jle
stc
test
jecxz
xor
mov
lret
cltd
mov
call
add
jg
incl
dec
cltd
cs
sbb
add
xorl
jp
dec
pop
mov
lods
push
add
loopne
inc
and
enter
mov
and
jns
mov
out
cmp
push
and
mov
aaa
sbb
fistps
in
cltd
mov
xor
jne
mov
mov
sbb
dec
pop
add
push
pop
cmp
sub
call
fldt
xchg
inc
in
movsl
mov
incl
dec
sub
push
arpl
ds
hlt
out
ret
arpl
sbb
lds
pushf
movnti
jmp
dec
psubd
stos
mov
fcoml
daa
orb
stos
mov
lock
mov
mov
sbb
jge
bound
and
add
leave
fmull
adc
lret
stc
in
sbb
bound
out
inc
int3
cmp
fiadds
rol
mov
jl
les
add
fs
leave
sub
add
add
mov
mov
leave
lahf
movsl
or
mov
mov
fsubs
loop
cmc
xchg
mov
insw
adc
sub
mov
jl
iret
jb
testb
imul
lret
inc
xor
ret
fnstenv
add
ret
rcrb
repz
mov
add
incl
cmp
mov
sub
pop
dec
jecxz
cmc
fnsave
hlt
ljmp
and
lcall
ret
int
jmp
roll
lret
push
mov
fs
and
add
pop
fdivl
or
xor
mov
int3
pushf
insl
hlt
repz
mov
test
xlat
inc
std
paddsb
jg
push
xchg
scas
movsl
sub
repnz
ljmp
dec
adc
cltd
push
imulb
add
pop
into
fwait
and
ret
mov
jmp
push
jg
add
push
pusha
mov
adc
jg
sub
icebp
xchg
int
cld
rclb
jno
pop
cs
ficompl
ljmp
ss
xchg
mov
lcall
cld
jmp
int
into
call
lods
ror
sbb
shlb
sbb
call
jmp
mov
loop
out
arpl
lret
pop
pop
bnd
mov
push
xchg
sbb
lcall
stos
xlat
std
mov
push
pop
adc
xchg
inc
adc
mov
dec
sbb
jmp
aam
adc
lds
shll
xchg
test
pushf
adc
push
jne
test
cmp
dec
or
jp
xor
sub
cmp
jecxz
fcoms
inc
fsubl
lcall
lret
shl
ljmp
add
adc
cmp
sub
and
mov
mov
test
cli
xchg
jb
imul
lret
idivb
sti
jmp
lret
and
mov
cmp
jmp
aam
into
or
lock
jmp
ss
pop
cmp
add
inc
sarb
in
insl
or
pop
pop
and
push
cmp
outsb
or
aad
lock
pushl
rcll
adc
sbb
sbb
pop
inc
and
mov
ljmp
inc
jno
insl
fwait
dec
pop
movhps
pop
mov
call
aas
imulb
jno
and
xchg
sbb
push
call
sub
in
movswl
mov
add
push
call
xor
ljmp
lahf
mov
das
ss
repz
mov
mov
ljmp
mov
cs
push
movsb
xlat
jno
scas
nop
cmp
aam
mov
sbb
in
inc
or
das
sub
lcall
sbb
push
shr
stos
popa
loope
inc
push
testb
nop
xorl
je
and
btc
xor
pop
or
xor
icebp
das
cld
or
popa
pop
add
iret
fcoml
pusha
push
sub
repz
fldl
sub
xor
xor
mov
mov
fmuls
and
jmp
fsubrl
sbb
in
test
ss
cmp
mov
sub
inc
mov
rcrl
pop
ljmp
mov
jnp
push
mov
out
jne
repz
ret
xchg
xor
dec
frstor
cld
mov
pop
or
dec
fdivrp
loopne
xchg
xchg
mov
jge
mov
std
lret
push
ljmp
inc
or
jp
add
test
or
mov
sti
addb
icebp
or
jns
inc
lock
call
mov
sbb
or
leave
test
lods
inc
insl
mov
lahf
push
xchg
in
out
mov
shrb
dec
pop
loope
ret
popa
imul
jmp
jmp
je
stos
nop
ss
sbbl
and
fidivrl
jg
inc
jge
or
jecxz
jae
lret
xchg
xchg
add
jle
push
lea
ja
or
mov
pop
ljmp
and
jmp
jecxz
pusha
ret
fidivs
repz
outsb
dec
rcll
xchg
cwtl
sahf
inc
xchg
jg
or
js
in
movsl
leave
mov
loope
movsl
divb
sub
sbb
sbbb
dec
push
mov
jmp
mov
xor
pop
jmp
subb
stos
out
jl
cmp
dec
mov
lock
sub
xlat
cmpsb
sub
inc
in
mov
push
decl
std
mov
pop
int
notl
inc
ja
call
pop
push
jae
stc
push
out
xor
push
mov
decl
jp
out
rorb
sahf
mov
icebp
sbb
ss
cmp
mov
in
pushl
xchg
mov
cmp
jg
cmc
imul
mov
aam
leave
inc
ret
jmp
pop
or
mov
xor
adc
sahf
cmp
call
mov
lcall
inc
dec
pop
imul
lods
add
cmp
jo
mov
shrl
inc
loopne
dec
pushl
fcmovbe
divl
in
cmp
cmp
nop
xor
jns
arpl
xchg
mov
adc
jno
popa
into
cmpl
lods
cmp
and
mov
imul
mov
add
jl
call
pop
lods
imul
popf
xchg
dec
push
in
xor
pushl
push
sti
jge
mov
out
push
stos
push
xchg
xchg
inc
mov
push
dec
jmp
in
mov
rcr
push
fnstcw
or
pop
incl
call
inc
fdivr
xor
sbb
xchg
mov
xchg
add
xlat
repz
ret
lcall
add
bound
stos
or
bound
daa
jecxz
xchg
push
xchg
fldcw
pop
jle
pushl
rclb
cmp
fstpl
mov
pop
clc
lds
pusha
out
pushf
inc
lret
mov
cmpsb
cli
out
mov
push
ljmp
push
stc
popf
fwait
insl
ja
mov
or
mov
ret
mov
xchg
arpl
lret
stc
out
outsl
jl
cmp
xchg
ljmp
incl
loop
inc
pop
adc
mov
mov
push
adc
iret
icebp
int3
fcmovbe
pushf
jnp
loope
mov
xor
mov
mov
adcl
shll
repnz
mov
dec
dec
or
xchg
int3
pop
push
jecxz
dec
lcall
pushl
sub
mov
in
push
in
mov
in
lret
clc
movsl
dec
push
scas
std
mov
xchg
mov
out
ror
sbb
orl
hlt
pushl
popa
sbb
jae
loope
push
std
xchg
push
iret
sub
push
push
sub
push
loope
inc
sbb
ljmp
fistpll
jns
mov
mov
inc
mov
add
inc
fstpt
add
dec
jne
pop
sub
icebp
hlt
sbb
cmc
dec
aaa
sub
mov
sbb
les
sahf
aam
cld
mov
in
dec
lock
ja
orl
or
fstp
jg
xor
xor
outsl
icebp
cmpl
jmp
imul
push
ret
jne
mov
adc
and
outsb
push
loop
ja
add
or
fcoml
lcall
out
pop
out
push
call
std
push
jbe
adc
pop
test
xor
std
call
inc
out
sarl
sahf
js
sbb
add
or
out
outsl
nop
lea
fidivrl
hlt
mov
and
stos
int3
sub
mov
nop
adc
rorl
cli
icebp
cmp
popf
adc
in
pushl
je
dec
mov
enter
sub
mov
inc
in
add
adc
hlt
call
inc
ficompl
push
repz
push
loopne
inc
lret
in
pop
mov
sub
xor
pop
mov
mov
call
shrl
shlb
mov
push
mov
in
xchg
mov
push
xor
jo
xchg
dec
int3
cmp
mov
rclb
inc
stos
dec
add
movsb
pop
jmp
in
or
loope
fiadds
rcl
out
sbb
test
fdivrs
movsb
mov
add
fistpll
das
xor
mov
ds
pushf
mov
xor
out
inc
push
and
mov
in
fcomip
cmp
adc
pop
inc
lock
arpl
or
jge
into
sbb
sub
xchg
pushf
cmpb
out
pop
push
xor
mov
orps
xchg
pop
pusha
roll
call
pop
xor
pcmpgtw
pop
std
std
mov
xchg
push
mov
ret
jae
push
lcall
iret
pop
pop
adc
cltd
adc
pop
adc
addr16
lods
pop
jge
sbb
adc
lcall
loopne
dec
in
aam
ret
jmp
popf
out
mov
orl
add
jecxz
in
xchg
push
jbe
fs
mov
shrb
jmp
adc
inc
insl
mov
push
mov
ret
xchg
xchg
in
jb
push
ja
fildll
xlat
pop
repnz
pushl
out
pushf
insl
jge
mov
mov
dec
dec
ja
je
push
push
ret
out
fsubrs
adc
push
lods
fwait
xor
mov
mov
xchg
jbe
subl
cmc
test
int3
test
pop
stc
repnz
in
in
sbb
dec
andb
ret
js
jmp
xchg
decl
mov
pop
fucom
lock
das
fmull
jb
call
fisubl
aam
pop
loopne
mov
fwait
incl
and
add
or
arpl
test
xchg
outsl
decl
mov
fistpl
inc
test
es
stc
lcall
and
lret
aaa
into
mov
add
xlat
in
xchg
pushl
adc
cld
int
jo
in
dec
dec
dec
outsl
and
push
insl
out
aaa
mov
test
lea
add
inc
push
sahf
add
lods
test
cmp
pop
fidivs
push
and
sti
dec
lcall
hlt
inc
push
dec
push
jge
inc
mov
mov
in
mov
dec
adc
into
outsb
inc
cmp
jp
xor
sub
mov
dec
mov
ficomps
dec
fsubr
pushl
out
cmp
mov
andl
addb
fs
cmp
pop
cmp
add
fisubl
cmp
in
pushl
push
jle
dec
dec
mov
imul
enter
jns
cmp
push
sar
leave
rorl
insb
or
stos
aaa
pusha
rcr
or
jge
lea
ja
in
pop
shll
aam
hlt
mov
call
sub
test
pop
cmp
pop
add
and
les
enter
scas
xor
push
xchg
pop
rolb
cwtl
adc
fimull
pop
incl
mov
ret
jle
mov
std
es
popa
add
pop
rcll
inc
pop
insb
lods
jge
dec
in
cwtl
mov
jg
stc
adc
push
pop
enter
xchg
es
test
cli
mov
cmp
jle
out
fsub
shl
inc
mov
xchg
inc
cwtl
cmp
pop
dec
pushl
repnz
mov
inc
test
mov
ret
cmp
pop
cli
jns
mov
sub
cmpl
pop
sub
adc
jle
out
dec
push
jmp
daa
adc
test
inc
lea
add
arpl
out
and
stos
push
and
mov
test
mov
jo
xlat
aas
inc
pop
push
push
les
mov
sbb
mov
adc
lds
jmp
decl
loope
cmp
jbe
xchg
pusha
gs
ret
movsb
mov
fwait
pop
adc
cmpsl
sub
loope
stc
cmpl
push
aam
loopne
cld
pop
sahf
call
pop
pop
and
fmul
lret
or
sahf
aad
test
arpl
lds
inc
es
int3
jg
sub
int
xchg
or
pop
fincstp
lock
scas
jne
in
sbb
enter
jg
ret
aam
pop
jmp
sub
add
mov
sbb
add
data16
mov
jl
fdivrs
and
fadds
cmpsl
out
push
int
je
out
ljmp
pushl
mulb
mov
outsb
imul
frstor
fs
mov
mov
xor
lahf
pop
imul
ljmp
mov
lret
lea
leave
add
xchg
je
mov
push
pop
call
lcall
mov
push
rorb
mov
push
inc
pop
mov
call
jns
leave
push
jl
jo
pop
pushl
mov
jo
loope
cmp
jmp
gs
mov
lea
inc
fidivrl
jmp
jb
lds
dec
insb
stc
subl
scas
cmp
cmpl
test
decl
push
adc
mov
scas
sarl
cltd
jmp
dec
cmpsl
rorb
js
out
mov
pop
xor
mov
inc
jo
mov
mov
in
xor
andl
bound
sahf
leave
push
lahf
jmp
aaa
fidivl
movsb
cmpsb
out
inc
stos
bswap
pop
fmull
pop
sbb
ljmp
or
ljmp
push
nop
outsb
sahf
push
imul
or
xchg
ljmp
mov
sub
fistl
cltd
push
int
jb
loope
pop
pop
sbb
xorl
repnz
outsb
mov
std
incl
dec
insb
jbe
fwait
test
push
fs
sub
push
mov
or
adc
shll
xchg
ja
jbe
push
in
in
push
mov
jb
cs
jbe
leave
dec
pop
cltd
dec
out
push
iret
push
ja
jae
pop
andps
adc
lret
and
push
mov
jmp
jbe
lahf
pushf
push
aaa
movsb
scas
out
jp
imul
das
hlt
incl
cmp
lret
xchg
pop
pop
push
pop
xchg
jb
stc
call
inc
cs
fldl
sub
addr16
pop
rolb
or
push
xchg
mov
aas
lret
and
mov
pop
push
aaa
outsb
cmp
jb
push
mov
dec
adc
repnz
pushl
xchg
stos
outsb
inc
insb
or
ljmp
fmull
mov
incl
xchg
mov
lret
dec
enter
mov
call
call
xor
loop,pn
jbe
fmuls
xchg
mov
jmp
das
and
ffree
int3
frstor
decb
aaa
nop
cmc
ljmp
or
xor
xchg
fwait
fmuls
inc
and
aam
pop
out
shlb
lcall
lcall
lods
add
mov
lds
and
cld
test
call
adc
dec
jne
or
sub
lods
ret
jbe
or
mov
outsb
mov
jle
jg
xlat
rclb
mov
dec
inc
xchg
inc
das
sarl
outsb
out
fisubrl
push
jne
int
jmp
cs
xchg
addl
pop
push
sbb
iret
xchg
mov
pop
adc
addr16
jl
faddl
call
dec
xlat
dec
jg
add
push
jnp
adc
das
cmpsb
data16
and
adc
lret
call
pop
lret
outsb
and
xchg
mov
sahf
into
addr16
aas
std
jg
push
loope
dec
stos
out
leave
mov
cmp
push
mov
sub
iret
pop
imul
sbb
dec
jne
call
pop
jecxz
jg
test
push
stc
pushf
ficomps
leave
outsb
xor
scas
push
inc
pop
add
pop
jl
pop
outsl
ror
add
nop
daa
and
pop
push
loope
xor
frstor
outsb
mov
sahf
dec
insl
adc
cmp
stos
movsl
ret
xlat
in
fnstenv
aas
mov
cltd
stc
jp
call
mov
inc
push
lret
push
dec
xchg
aam
push
add
jg
cs
sub
insb
sarb
dec
cmp
xchg
ds
incl
mov
mov
push
les
enter
stc
or
push
aas
sub
ss
call
mov
add
dec
aas
aaa
pop
aas
popa
aas
outsb
aas
je
xchg
aas
pushf
aas
lods
aas
int
outsl
mov
aas
jmp
aas
add
aam
xor
xor
xor
xor
incl
or
xor
xor
xor
xor
xor
xor
xchg
fnstenv
push
xor
xor
xor
xor
xor
add
outsl
hlt
xor
xor
out
xor
xor
cmpsb
xor
jg
pushl
cmpsl
xor
shlb
cld
xor
jg
ret
ss
add
push
decl
pushl
sub
xor
inc
aaa
dec
aaa
popa
aaa
jb
mov
aaa
out
icebp
aaa
sub
cmp
jg
decl
push
cmp
xchg
cmp
cmp
cmp
lock
push
cmp
add
cmp
cmp
cmp
cmp
add
inc
cmp
mov
leave
cmp
cmp
jbe
test
cmp
adc
sbb
ds
jg
push
stos
roll
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
push
jne,pt
popa
mov
mov
adc
jmp
inc
xor
jno
add
adc
xor
xor
xor
xor
xor
inc
sahf
xor
outsb
ss
imul
xchg
ss
getsec
push
aaa
pop
cli
outsl
std
push
aaa
repz
cmp
cmp
je
incl
cmp
cmp
cmp
cmp
daa
cmp
cmp
cmp
mov
sbb
ljmp
cmp
pop
cmp
jns
and
pop
cmp
jp
cmp
in
out
aad
mov
pop
push
cmp
cmp
cmp
cmp
cmp
cmp
insl
fistpll
out
sbb
push
ds
cmpl
jo
jg
scas
cld
outsl
xor
xchg
xchg
xor
xor
xor
xor
xor
push
pushl
cld
pushl
pop
xor
xor
rorl
xor
mov
xchg
xor
jg
pushl
ja
mov
xor
sysexit
out
xor
adc
sbb
das
ss
ss
ss
ss
ss
ss
xor
cmp
cmp
sahf
cmp
cmp
ja
xchg
cmp
mov
xor
mov
cmp
loope
pushl
mov
mov
cmp
cmp
cmp
cmp
cmp
mov
lret
cmp
cmp
cmp
cmp
test
cmp
cmp
cmp
cmp
cmp
sar
pushl
cmp
cmp
cmp
cmp
cmp
sbb
push
enter
cmp
out
in
cmp
pop
ds
test
stos
ds
ds
jmp
ds
aas
inc
aas
push
aas
out
sti
adcb
jg
test
mov
mov
xor
int
xor
insl
pop
pushl
iret
xor
xor
xor
xor
xor
xor
xor
mov
inc
cmp
cmp
cmp
cmp
cmp
aaa
ds
ds
ds
jmp
push
fwait
ds
ds
xlat
ds
ds
push
outsl
cli
mov
cmp
inc
aas
dec
aas
pop
aas
addr16
jo
jbe
test
aas
movsl
aas
jmp
test
mov
cmp
aas
std
aas
mov
push
ljmp
xor
xor
xor
xor
xor
xor
lahf
cli
xor
xor
xor
pusha
xor
mov
negb
mov
mov
xor
xor
lea
aad
cld
mov
shlb
je
nop
mov
fcomip
dec
pushl
push
aaa
bound
imul
sub
cmp
cmp
outsl
fdiv
cmp
cmp
cmp
cmp
movsb
cmp
imul
mov
inc
cmp
cmp
mov
cmp
cmp
cmp
cmp
cmp
mov
in
in
cmp
jae
adc
cmp
inc
cmp
cmp
stc
pop
sbb
cmp
cmp
cmp
cmp
jae
mov
cmp
ljmp
mov
jl
nop
cmp
jmp
ds
scas
cmp
mov
nop
ds
ds
mov
test
xor
loop,pt
call
jnp
iret
rorb
loopne
cmp
dec
add
adc
lods
aas
dec
xor
sbbb
mov
stos
fdivrs
mov
cltd
add
fdivs
mov
pop
pop
popf
rcrl
bswap
aaa
fistpll
cltd
cmp
popf
fstps
cltd
cmp
or
repz
cltd
ds
aas
xchg
xchg
out
mov
cld
gs
sbb
or
add
add
cmp
and
inc
outsb
mov
mov
pop
and
pop
js
pop
xor
adc
adc
pop
cmp
mov
pop
adc
loopnew
cs
dec
inc
fiadds
sub
nop
jmp
gs
add
and
fs
xor
or
cmpb
or
in
loope
sub
arpl
repz
dec
jae
daa
inc
mov
cmp
insb
adc
mov
or
or
pop
add
repnz
or
loopne
mov
enter
test
add
jl
mov
push
add
addb
cmp
mov
add
stos
sbb
add
mov
inc
and
add
hlt
cld
and
inc
repnz
adc
xchg
dec
leave
subl
pop
and
cmp
out
inc
push
xchg
pop
jb
inc
mov
xor
nop
adc
push
nop
pop
leave
add
stos
adc
add
and
jns
insb
inc
jo
pushf
mov
jl,pn
and
and
xchg
mov
inc
push
leave
add
inc
adc
add
adc
push
call
in
cld
rclb
add
outsl
je
xor
adc
data16
add
push
add
sti
adc
and
popa
adc
and
dec
dec
add
add
add
int
test
xor
xor
movsb
or
and
inc
xor
xor
add
add
adc
fs
and
inc
push
mov
sub
sub
or
and
mov
mov
inc
in
push
les
and
cmp
das
add
adc
add
repz
jae
adc
xor
xor
test
and
jns
das
or
adc
add
and
inc
pop
inc
add
inc
repnz
push
cltd
in
ja
push
pop
mov
mov
or
movsl
or
inc
adc
outsb
jp
pushl
and
cmc
test
adc
rdpmc
or
adc
out
mov
dec
or
aaa
or
mov
fstl
leave
or
les
into
sbb
push
movsl
mov
fcoms
cmp
ret
push
hlt
popf
les
xlat
cmp
jae
test
push
mov
jmp
inc
dec
lock
add
jne
sbb
shr
lea
mov
push
popf
out
std
lcall
fldenv
cmp
fwait
or
jno
adc
mov
ret
scas
rcl
jno
adc
or
jno
mov
sub
sahf
xor
insb
outsb
jnp
adc
and
dec
cwtl
or
popa
push
mov
fistpll
lock
shll
mov
add
popa
fsub
push
andl
bnd
lea
add
cli
setb
jns
decb
les
add
sbb
mov
imul
push
xor
sub
fs
insb
jbe
cmpb
frstor
adc
sbb
mov
cs
add
inc
icebp
inc
jg
mov
sub
or
rorb
mov
shll
jecxz
cwtl
gs
dec
xor
shll
xorb
daa
or
xor
aam
or
bound
inc
inc
cmpsb
ret
xor
mov
and
push
loopne
jle
lea
dec
sub
add
xor
jae
dec
call
and
fcompl
je
cmp
jno
fcomp
sbb
pop
push
dec
nop
cmp
jmp
nop
lret
and
mov
in
or
in
and
outsb
sbb
imul
orl
dec
sbb
inc
mov
or
stc
shl
loop
pop
or
imul
or
pop
jno
pop
dec
in
bound
clc
lods
xchg
sub
dec
pop
inc
call
inc
inc
out
cmp
lcall
adc
add
push
mov
jne
or
pusha
and
jp
je
je
jmp
inc
popa
jmp
stos
jmp
test
repz
or
mov
inc
sbb
inc
mov
icebp
push
std
push
ljmp
lret
cmp
mov
push
push
fwait
pop
movsb
cmp
jecxz
inc
add
ret
xor
idivl
fisttps
mov
pop
mov
fdiv
call
mov
push
test
lods
add
or
cmp
xchg
mov
mov
add
mov
gs
adcb
popa
addr16
xchg
gs
outsl
outsb
outsb
jae
lret
push
add
lock
cs
in
repnz
aad
insb
xlat
popa
pop
xchg
test
cmpsl
jne
arpl
xchg
gs
sub
fnstsw
loope
js
fcmovne
mov
bound
fs
sti
int
xor
xor
call
addr16
fsubrs
rorl
mov
and
hlt
sub
mov
gs
or
int3
adc
pop
pushf
vxorpd
jp
mov
rclb
mov
test
pop
fs
pop
dec
inc
std
add
std
aas
enter
add
mov
bound
aam
jne
add
incl
lret
ret
add
xchg
xchg
inc
mov
pop
xchg
insb
ret
mov
jl
lock
mov
xor
push
jp
fisttpl
rolb
loop
cwtl
shll
mov
ret
and
cmp
ret
xchg
dec
adc
mov
add
or
push
adc
in
int3
sbb
dec
push
decl
jne
nop
xchg
xchg
inc
push
add
sub
lock
and
cmc
xchg
in
push
push
inc
inc
in
dec
add
sbb
mov
push
nop
xchg
inc
inc
inc
inc
xchg
xchg
xchg
xchg
in
inc
inc
xchg
xchg
mov
in
lcall
sbb
pop
xchg
push
sahf
inc
ror
add
std
lea
je
sbb
push
inc
mov
xchg
std
pop
xchg
std
xchg
std
xchg
std
in
xchg
and
mov
pop
cs
dec
jnp
js
jo
insb
mov
mov
mov
cmpsb
mov
icebp
add
jo
add
andb
inc
rol
add
push
mov
mov
mov
xchg
or
lods
insl
test
stc
jns
imul
lcall
insb
add
je
out
outsl
ja
lcall
cmc
mulb
and
mull
jo
add
jmp
xchg
dec
lcall
jmp
outsb
or
cli
inc
xchg
fs
int
imul
xchg
sub
cs
inc
rorl
mov
mov
outsb
insb
popa
jne
mov
lret
outsb
arpl
imul
lcall
imul
js
lret
mov
cwtl
fildll
js
es
mov
outsl
jb
cmpsb
pop
lcall
fwait
cmpsb
imul
sub
mov
push
add
int
dec
aas
pop
add
movsb
add
nop
int
repz
aam
add
fs
data16
fxch
call
lds
push
adc
shlb
fwait
je
push
mov
jne
xchg
mov
jge
testl
and
pop
pop
inc
cmpsl
out
pusha
mov
jmp
leave
or
out
stos
dec
xlat
fcomps
pop
xchg
xchg
mov
push
sbb
repnz
mov
pop
repnz
out
out
sub
push
dec
push
push
jne
adc
adc
pop
sahf
or
sbb
into
call
xchg
or
dec
repnz
push
aam
add
fmuls
adc
or
add
pop
or
rep
fistpl
sbb
add
es
enter
and
lock
shlb
inc
adc
pop
add
push
mov
enter
add
cmpb
mov
mov
pop
test
aaa
dec
mov
cltd
adc
stc
inc
xor
adc
mov
fistl
push
into
add
divl
pop
mov
push
stos
js
fsin
fisttpl
or
mov
or
jo
add
shl
xchg
mov
pop
pop
or
inc
inc
push
out
mov
mov
pmulhuw
inc
push
inc
mov
push
xchg
inc
sbb
in
xchg
inc
loopne
adc
push
xchg
adc
adc
inc
push
sub
inc
std
pop
inc
orb
push
leave
sub
mov
lds
pop
inc
sub
cmpl
add
adc
xchg
sbb
cmpsb
sbb
and
jb
push
sbb
add
insb
ss
dec
adc
inc
mov
fldenv
idiv
adc
sub
add
dec
test
enter
mov
mov
jl
cwtl
and
push
rorb
cwtl
inc
mov
lcall
repnz
orl
pop
push
lcall
ss
push
pusha
imul
imul
shll
cmpsb
lcall
jb
inc
jae
cmpsb
jmp
mov
cmp
lcall
xchg
lcall
add
xor
test
pop
xor
fwait
mov
leave
sub
aaa
cmp
xor
inc
push
mov
pop
pop
dec
dec
jo
lcall
adc
and
or
or
fisttpl
rcll
or
movsl
bound
pop
adc
dec
popa
jns
jne
jae
xor
mov
xor
push
push
popl
pop
sti
sbb
imul
lahf
push
ret
push
dec
push
dec
inc
push
or
lock
push
push
dec
sub
rorb
add
pusha
lods
inc
fdiv
mov
jns
sbb
mov
leave
out
jo
test
xchg
sbb
xchg
dec
jae
xchg
movsb
inc
enter
cwtl
and
fldcw
addb
jecxz
add
shlb
xchg
push
pop
xchg
adc
sub
icebp
add
movsb
add
jge
xor
cmp
xorl
iret
or
jmp
mov
inc
or
cmc
daa
and
inc
dec
sbbb
ss
movsl
sbb
push
xchg
add
fisubl
mov
or
adc
push
addr16
inc
jae
cmp
popa
stos
adc
lcall
outsb
pusha
mov
outsb
jb
and
push
arpl
js
movsb
mov
adc
and
jno
xchg
push
rolb
add
or
mov
inc
sbb
andb
mov
test
and
xor
jg
sbb
insl
insl
dec
jae
or
xor
dec
iret
cmp
les
add
inc
pop
aaa
fcomp
inc
add
or
pusha
add
popa
add
jns
sub
imul
or
insb
daa
ja
sbb
aaa
pop
xchg
das
enter
add
mov
or
cmpsb
sub
mov
dec
shl
pop
out
clc
or
scas
jmp
or
pop
jge
add
call
add
clc
or
addl
adc
jp
add
insb
jl
inc
scas
or
push
push
push
add
sbb
leave
pop
adc
and
add
xchg
lea
jne
jns
mov
shufps
ljmp
inc
lock
mov
in
adc
jne
mov
in
or
add
cmp
lock
mov
xchg
sbb
test
jne
dec
insb
arpl
outsl
jns
jae
jo
out
xor
outsl
pop
jns
pop
fcmovu
imul
mov
or
pop
fcmovnb
in
inc
xor
je
sub
cmovno
imul
add
sbb
jae
adc
xor
adcb
xor
das
test
add
aas
pusha
push
mov
movsb
ret
adc
add
pop
add
jmp
pop
test
inc
cmovns
popf
jg
mov
jae
shrb
sub
mov
jne
sub
add
outsb
stos
in
dec
inc
addr16
pop
je
into
shl
cmc
or
testl
xor
jecxz
fwait
jmp
pop
inc
and
xor
jae
int
rclb
and
popa
jns
popa
insl
cwtl
jns
and
add
addr16
gs
imul
out
jne
push
and
sub
sti
adc
or
jb
cmp
fsts
xor
sbb
xchg
insb
popf
sti
bound
xchg
pop
dec
or
lds
sbbb
lahf
popf
addr16
pop
adc
out
aaa
sub
xor
mov
lret
and
sub
jbe
dec
insl
or
daa
dec
mov
orw
xlat
outsb
xchg
clc
pop
mov
daa
jbe
mov
xchg
test
pcmpeqw
je
and
xlat
popf
movsl
test
pop
outsl
fs
mov
push
mov
and
jmp
jmp
xchg
xor
in
out
add
add
call
rolb
push
xor
xor
xor
xor
inc
xor
shlb
xor
xor
pusha
xor
stos
xor
xor
xor
xor
sub
mov
fwait
xor
sti
pop
xor
xor
xor
xor
fisttps
xor
xor
aad
xor
xor
xor
xor
sub
call
stos
xor
cli
decl
aaa
xorb
aaa
pushf
aaa
mov
cmp
cmp
push
cmp
push
cmp
sub
adc
sbb
cmp
pop
shrb
outsl
ret
cmp
out
cmp
cmp
stos
sub
inc
lret
cld
cmp
mov
jo
dec
xor
jp
xchg
clc
aaa
mov
xor
xor
xor
xor
jne
jg
test
mov
lahf
mov
xor
xor
xor
xchg
sub
incl
in
xor
sub
push
ss
ss
ss
divb
and
aaa
xor
fwait
jmp
sub
xor
cmp
cmp
mov
std
mov
fdivrl
loop
and
sub
addl
add
add
or
lea
mov
outsb
adc
nop
xchg
and
push
push
push
cwtl
xor
call
add
sub
push
inc
adc
mov
cmp
pusha
add
pop
and
mov
jae
jne
negb
imul
inc
outsl
unpckhpd
pop
jecxz
cmp
add
and
add
push
or
push
mov
pop
mov
mov
add
jbe
outsb
fsubr
push
pop
pop
dec
cmovo
adc
mov
roll
or
and
add
inc
out
nop
insb
pushf
es
jno
test
and
stos
mov
stos
dec
stos
xor
imul
test
pop
sbb
push
pushf
out
mov
mov
in
and
sub
repnz
test
pop
sub
push
enter
add
xchg
mov
jne
lds
inc
sub
inc
sbb
mov
pop
adc
jo
push
leave
inc
adc
and
add
rclb
push
add
shlb
daa
and
sbb
sbb
add
or
add
add
add
nop
add
add
add
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
