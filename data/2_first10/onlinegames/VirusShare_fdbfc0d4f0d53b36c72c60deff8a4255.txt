out
call
in
sub
andb
push
push
push
push
xor
pop
lea
fcomi
stos
push
ljmp
pop
xor
jmp
mov
pop
ja
test
add
loop
mov
dec
gs
in
in
dec
mov
xor
cs
jbe
dec
mov
insb
jmp
mov
push
call
pop
mov
jg
mov
push
push
push
push
push
mov
push
push
call
mov
and
adc
clc
lea
push
add
in
and
call
jbe
adc
adc
pop
sbb
outsl
fisttps
pop
pop
pop
leave
ret
add
add
mov
mov
push
push
xchg
sub
and
data16
jbe
pop
popf
fadd
add
in
mov
je
mov
lcall
push
or
mov
ror
jge
sti
daa
pop
inc
pop
inc
aaa
and
mov
mov
jle
sub
lea
push
push
push
sbb
pop
dec
mov
or
xchg
daa
xor
clc
add
in
push
fists
push
rol
or
fxch
lock
add
push
pop
sbb
or
adc
movsb
mov
fdivr
cmp
lock
cmp
je
push
adc
clc
sbb
pop
or
inc
clc
cmp
or
push
lret
insl
or
push
xorb
je
lea
or
scas
dec
mov
pop
je
jbe
pop
out
cmp
pop
xor
or
shrb
adc
dec
mov
lods
lea
jo
push
push
scas
fildl
or
pop
or
mov
fstps
or
pop
test
cmp
adcl
add
adc
push
sub
mov
sbb
or
jno
sti
sti
int3
dec
inc
cmp
outsl
insl
out
pop
dec
mov
and
jbe
fldcw
push
mulb
divb
or
enter
cltd
add
add
fnstcw
cld
push
adc
leave
fadds
fucom
rol
inc
testb
movsb
adc
out
in
rclb
lock
mov
test
mov
or
out
in
mov
pusha
push
mov
mov
dec
or
decl
je
mov
mov
ror
mov
inc
inc
dec
dec
test
jne
push
pop
and
fldenv
in
xor
mov
pop
mov
add
mov
movl
pop
pop
mov
or
fwait
xchg
add
lret
jnp
add
cld
cltd
dec
clc
pushl
sbb
jecxz
cmp
jge
sub
cmp
adc
and
fs
leave
std
std
push
and
xlat
mov
sbb
cmp
adc
add
adc
aaa
dec
scas
mov
and
cmp
jb
out
ds
pop
push
mov
mov
cwtl
imul
lea
or
nop
in
in
mov
jae
testl
testl
sub
mov
cli
adc
dec
sub
por
xchg
lods
inc
or
mov
fistpl
mov
cmpb
inc
add
adc
cwtl
stc
sub
ss
inc
push
adc
mov
mov
xor
mov
test
je
enter
push
push
add
pop
int3
icebp
outsl
sub
andb
xor
cmp
mov
push
inc
push
jne
mov
mov
mov
inc
inc
test
jne
push
lods
out
pop
sub
push
mov
xor
inc
mov
pop
xchg
cmp
cld
push
push
std
dec
mov
dec
imul
lcall
popa
add
pop
lcall
add
sub
popw
or
cld
fstps
inc
or
xchg
dec
test
inc
add
stos
mov
mov
imul
xor
add
push
cmp
in
jmp
sbb
push
push
and
in
je
push
pusha
adc
lahf
push
push
pop
testl
lret
mov
sti
leave
std
mov
jl
mov
xor
jo
mov
std
lret
insl
mov
mov
jnp
mov
push
mov
sbb
add
push
pop
sar
pop
int3
jae
inc
in
inc
xchg
rcll
xchg
xchg
sbb
cmp
dec
loop
into
pop
iret
imul
in
and
push
rclb
dec
loop
mov
out
cmpl
mov
adc
add
idivl
mov
nop
push
insl
xor
push
int
jnp
push
lcall
ud2
mov
mov
and
push
push
out
mov
or
push
mov
ret
fistpl
push
cmp
outsl
imull
add
lret
in
je
jae
pop
sti
sbb
xor
pop
sarb
enter
pop
daa
pop
add
hlt
xlat
cmpsb
mov
jo
subl
bound
pop
xlat
lcall
fcomp
xchg
or
lock
nop
ljmp
and
push
or
cmpl
insl
ret
dec
push
push
xor
mov
push
jl
sti
or
cmpsl
addr16
jl
or
or
cmp
push
jp
xchg
xor
pusha
push
adc
push
daa
inc
jl
mov
gs
in
in
jb
fsubrl
out
pop
out
call
insb
fwait
in
gs
cs
out
and
jle
inc
out
pop
pop
lock
xor
cmc
pop
test
or
mov
add
lods
xchg
or
or
sub
inc
lcall
mov
dec
xchg
je
enter
adc
add
mov
dec
jo
adc
xor
sub
add
push
sbb
adc
adc
stos
test
inc
inc
inc
push
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
addl
in
jmp
add
xor
adc
sub
imul
imul
mov
divb
inc
push
xor
dec
shll
nop
sahf
cmpsb
imul
cmpsb
imul
xchg
inc
mov
add
xor
cld
sti
nop
add
outsl
arpl
je,pn
insw
addr16
xor
jmp
xor
xor
bound
push
jb
jbe
insb
gs
jae
mov
je
insl
xor
pop
add
push
push
push
inc
and
pushw
gs
add
fdivr
outsl
imul
fs
adc
adc
punpckhbw
fs
in
sarl
imul
insl
fs
fisubl
aaa
xchg
cmp
aaa
stos
xor
nop
or
add
xchg
adc
inc
adc
scas
add
add
inc
dec
xor
xor
fs
insb
inc
push
push
dec
inc
dec
mov
add
push
xchg
loop
inc
sub
add
leave
mov
repz
add
add
dec
pop
nop
inc
add
or
insb
mov
or
mov
int
mov
imul
jb
addr16
insl
and
outsb
outsb
outsl
je
bound
jb
outsb
psadbw
imul
insl
outsl
fs
push
sbb
stc
out
psubq
add
add
je
in
in
inc
outsb
mov
pop
xchg
addr16
jo
test
sbb
mov
sbb
in
daa
lret
pop
cli
fs
in
pop
mov
out
xchg
in
dec
push
imul
push
stc
outsl
adc
add
dec
loopne
and
add
dec
ja
or
add
add
push
and
add
add
fiadds
add
in
int
and
sub
pop
gs
mov
xor
dec
pop
or
and
addl
pop
sti
adc
dec
add
bound
pop
das
adc
sti
mov
add
fs
enter
popa
dec
mov
test
pop
inc
cs
push
push
pop
inc
and
popf
cld
test
shrb
jae
xor
ja
dec
rcll
stos
pusha
add
jbe
jg
jb
insb
outsl
arpl
sti
add
fs
inc
pop
fwait
cmpsb
pop
js
das
arpl
sbb
cli
jo,pn
shrl
into
mov
adc
lds
or
push
lret
xchg
dec
shrl
ss
cs
mov
add
in
add
sbb
cmpsb
imul
cmpsb
imul
insl
lcall
sub
jmp
mov
add
mov
dec
shrl
testb
sbb
dec
xor
shll
data16
sahf
testb
aaa
dec
shll
dec
nop
lcall
jbe
imul
add
je
push
xchg
mov
scas
mov
rcr
pop
push
add
das
cmpsb
imul
imul
mov
clc
add
or
push
mov
shrl
cmp
imul
mov
cmpsb
xchg
xchg
ret
jae
decl
imul
movhps
addb
cmpsb
jmp
or
push
add
push
cli
xor
xor
sub
cmp
add
adc
add
je
jb
gs
fsts
dec
adc
idivb
xor
gs
fs
sub
dec
jo
outsb
push
jb
inc
adc
aaa
add
inc
dec
dec
dec
dec
inc
push
loopne
push
icebp
and
push
data16
fldl
dec
inc
push
push
inc
push
inc
pop
dec
or
jg
fcmovnu
jp
data16
push
imul
pop
inc
jne
in
jge
pop
imul
jae
outsl
outsb
sbb
or
xchg
and
subl
adcb
or
add
or
lahf
jns
mov
xchg
add
aaa
sbb
sbb
cmpsb
pusha
add
add
mov
pop
add
ljmp
and
popa
sub
pusha
fistps
decl
or
and
testl
das
pop
add
lret
mov
adc
aas
mov
aas
add
pop
or
mov
popa
mov
insb
incl
and
add
sbb
adc
inc
fmul
cmp
xchg
inc
xchg
pop
mov
inc
pop
inc
sub
xor
fistpl
add
stos
nop
mov
mov
sbb
pop
pop
das
xor
sbb
add
and
pop
xor
maskmovq
imull
das
or
imul
add
jae
out
xor
arpl
je
jne
jb
gs
sbb
mov
push
sub
add
lcall
sarb
push
inc
jb
push
and
ja
or
push
mov
jg
das
jae
pop
and
addr16
xor
out
rorw
or
mov
add
push
add
mov
jmp
add
and
fsubr
insb
hlt
sbb
add
add
daa
shrl
das
fwait
icebp
mov
gs
push
push
shlb
imul
mov
mov
out
sbb
xor
arpl
pushw
je
es
add
jb,pn
jb
push
xchg
in
add
sbb
xor
sub
inc
pop
jb
dec
xor
push
dec
dec
ret
fucomi
lea
and
jno
gs
inc
dec
mov
xor
outsl
je
ja
jns
stos
ss
push
je
mov
mov
imul
jl
or
flds
aas
mov
daa
outsb
inc
insl
loope
pop
jae
mov
test
addr16
pop
cs
push
jg
xchg
jb
pop
jb
arpl
popa
insl
pushl
inc
fisttpl
ja
jb
inc
popa
jb
or
mov
jae
dec
insb
mov
gs
in
adc
inc
mov
movsl
test
push
fs
insl
fcomi
dec
fs
out
popa
sub
adc
outsb
imul
or
adc
or
pop
in
test
pop
sbb
adc
outsl
int
pusha
push
pusha
dec
test
or
call
dec
imul
mov
push
cmpsb
insl
mov
jo
icebp
insb
lods
jbe
mov
imul
adc
das
clc
xor
cmpsl
pop
into
mov
dec
imul
test
pop
stos
jae
gs
pop
inc
in
fs
push
stos
je
cmp
xor
call
dec
in
arpl
cmp
or
pop
jnp
push
mov
mov
ja
ljmp
mov
xlat
rol
cli
mov
leave
mov
sbb
std
pushl
ret
mov
mov
mov
leave
scas
aad
and
imulb
pop
sar
out
xor
sarl
mov
mov
mov
mov
mov
loopne
mov
mov
and
std
xlat
jecxz
shll
lock
shll
mov
pushl
rolb
lock
enter
in
xlat
ffreep
in
mov
std
mov
xlat
or
mov
mov
dec
mov
aad
rcl
mov
loope
in
lret
cli
fadd
leave
mov
int
int3
in
iret
ret
mov
pop
sub
jg
lahf
enter
rcl
enter
mov
aad
mov
leave
ffreep
lods
shr
insl
call
lds
movl
std
sti
divl
cmp
jecxz
lods
pop
mov
mov
mov
lds
loope
into
loop
rol
xlat
adc
leave
dec
scas
ror
fistpll
sti
jnp
mov
mov
cmp
shrl
std
rcrb
ret
les
movsl
out
cmpsl
shr
les
dec
fadd
iret
mov
fxch
lret
mov
sbb
mull
adc
iret
sbb
std
in
insl
adc
leave
xlat
in
leave
out
fcmovnu
jbe
out
push
rcl
mov
mov
outsb
insl
loope
out
sub
mov
cmp
cld
sub
mov
ret
das
push
icebp
mov
pop
jnp
test
cmpsl
stos
push
mov
das
pop
pushf
ja
scas
fsubrs
lods
sub
pop
mov
ss
mov
pop
in
frstor
fimull
and
sbb
mov
xlat
dec
dec
dec
inc
stos
cs
jg
mov
push
mov
lret
dec
cmpsb
cmp
mov
ret
jg
mov
addl
dec
add
outsb
das
bound
in
sbb
pushf
fstpl
mov
add
in
push
push
and
fisttps
mov
mov
pop
sub
push
push
push
mov
outsb
mov
mov
lea
push
push
pushl
add
mov
mov
or
call
or
call
jmp
push
push
xor
adc
ss
xor
orl
push
pop
jmp
add
mov
negb
xor
mov
jne
repnz
or
adc
andl
xchg
loopne
pop
jnp
mov
push
mov
mov
add
xor
mov
push
push
push
call
ljmp
in
add
inc
jmp
sub
mov
movb
inc
mov
jbe
or
movb
sti
push
push
inc
lods
insl
outsl
in
call
loopne
pop
insl
dec
and
in
push
outsb
aaa
cwtl
push
call
fcompl
or
inc
adc
imul
ja
and
es
call
jb
ret
outsl
mov
or
mov
lock
mov
or
xchg
pop
lock
add
mov
fwait
in
insl
incl
inc
or
aas
jo
pop
inc
mov
adc
mov
mov
nop
pop
dec
adc
fcomps
addl
add
addl
xor
pop
xchg
adc
add
add
popa
data16
ja
or
inc
add
pop
rclb
push
push
fcoml
or
in
and
dec
nop
daa
mov
shlb
pop
mov
adc
aaa
out
cs
pop
push
and
test
jne
ret
cmpw
jne
ja
fists
dec
cmp
lret
and
mov
pop
pop
adc
xor
and
out
nop
adc
and
sbb
push
add
sbb
fwait
add
enter
popa
into
mov
jne
or
xorl
or
dec
adc
sarl
in
je
or
divl
adc
pop
cmp
ja
addr16
fidivs
add
or
jae
cmc
mov
mov
sti
outsl
mov
adc
ljmp
jb
sub
sub
or
insl
addl
or
dec
sbb
inc
xchg
mov
mov
movsl
aas
lea
or
push
jmp
xchg
xor
ss
cwtl
jmp
or
push
add
mov
mov
mov
call
mov
cmp
jg
add
jge
push
push
jmp
sbb
popa
adc
push
push
push
and
mov
mov
dec
ret
ds
fs
loop
sbb
jo
pop
mov
push
or
js
adc
inc
lods
dec
or
xchg
cmp
mov
movsl
add
or
movsl
movsb
mov
jo
jnp
in
pop
mov
lock
jb
jnp
jmp
dec
dec
mov
or
fs
sbb
pop
pop
dec
pop
mov
dec
and
xor
add
cmp
repnz
or
sarl
push
mov
add
not
xor
xor
inc
cmp
sub
push
jg
mov
jl
pop
push
mov
aad
sarb
cmp
lock
push
adc
adc
cmp
jnp
loope
and
mov
mov
push
push
jae
addr16
jnp
push
xchg
clc
push
sub
adc
cli
jb
pop
pop
pop
push
add
call
stc
add
inc
adc
in
enter
and
sahf
sldt
in
repnz
and
and
cmp
stc
cmp
adc
js
and
nop
dec
enter
and
inc
xchg
and
ss
mov
push
sub
pop
repnz
and
daa
cmpl
adc
or
aas
sub
jnp
loopne
fmuls
fstps
loopne
cwtl
push
mov
in
in
add
cwtl
cmp
test
xor
cld
mov
add
in
add
pop
shr
cmp
adc
xchg
pop
int3
add
movsb
xabort
pop
adc
cmp
xchg
ds
ljmp
scas
in
push
notl
push
nop
mov
add
add
rclb
clc
popf
addr16
adc
adc
adc
lcall
insl
jns
jae
cmc
data16
negl
outsl
and
cli
push
cs
fs
fistpl
cld
insb
std
lret
push
daa
je
enter
cmp
mov
xor
jb
jb
cli
in
sti
push
int
ss
dec
xlat
and
bound
cli
push
jo
imul
sbb
out
sbb
ljmp
mov
push
xchg
sbb
stc
pushf
lds
or
jns
scas
push
testl
pop
push
and
dec
add
lods
sub
cwtl
into
gs
into
sarb
clc
mov
fildl
ja
jne
data16
or
or
or
sub
shr
push
jae
or
mov
cmp
or
jbe
add
ret
add
pop
push
cmpsl
negb
je
dec
mov
add
imul
lods
sub
aaa
testb
jnp
jmp
adc
jmp
add
mov
icebp
or
xchg
fbstp
ss
pop
hlt
sub
pop
inc
idiv
adc
hlt
push
or
jg
sbb
jmp
andb
mov
jmp
xor
push
inc
add
fidivrl
enter
adc
xchg
mov
add
mov
les
add
push
sbbb
lahf
jmp
mov
xchg
bswap
das
lods
nop
and
inc
xchg
and
ss
push
push
sarl
loope
clc
fs
ja
xor
dec
jbe
cmpb
lahf
movb
jl
cmp
jb
data16
mov
imul
add
andl
push
or
inc
sub
ja
xor
imul
adc
mov
ja
add
dec
adc
sbb
popa
loope
cmp
jecxz
push
add
hlt
call
loopne
cmp
jae
incl
lret
shr
mulb
or
cmc
inc
push
mov
jg
push
ljmp
mov
mov
mov
sarl
lea
in
aaa
pop
fcomps
rorb
rolb
or
shl
mov
jmp
cli
or
jne
cmp
inc
lods
inc
mov
push
cmpsb
inc
xchg
pop
mov
sbb
stos
pop
leave
inc
fldenv
push
incb
jbe
or
cmp
xlat
and
adc
push
jl
and
or
add
lea
movsl
fcmovbe
sbb
out
or
mov
add
mov
and
not
and
testl
das
hlt
aaa
push
mov
inc
test
or
js
add
push
mov
outsb
jnp
mov
or
fisubs
fimull
add
stc
outsl
pop
aam
pushf
cmp
jo
and
out
xadd
adc
pop
mov
sub
mov
and
not
push
or
lods
std
out
add
repz
mov
jne
push
shr
or
add
dec
daa
pop
jg
push
outsl
sub
xchg
sbb
mov
push
lods
sti
fcmovnu
xchg
loop
mov
push
push
hlt
mov
not
and
sub
mov
popa
shlb
sub
jns
mov
xchg
rcr
mov
roll
into
mov
popa
fiaddl
mov
or
adc
test
mov
add
ret
inc
or
xor
or
inc
std
sbb
add
out
cmp
popa
xor
add
sbb
lret
lret
jne
les
repz
fcomp
cwtl
subb
mov
pop
or
and
not
ficomps
sahf
popa
das
pusha
adc
pop
scas
testl
sti
mov
pop
les
subb
add
imul
mov
mov
adc
sub
and
push
fdivs
out
repnz
pop
mov
pop
aaa
or
rcrl
fbld
int
and
nop
imul
xor
jl
cmp
or
or
mov
fidivrs
jno
std
stos
lods
es
insl
pop
popa
sti
add
and
fidivrs
mov
aaa
das
push
mov
cmpsb
add
pop
mov
xor
or
or
cmp
and
or
insb
lcall
popa
adc
add
or
mov
mov
jbe
ret
add
and
aad
aam
fcomp
ja
pop
bound
sbb
icebp
lods
shl
add
and
jg
jge
dec
mov
inc
mov
rclb
push
fadds
hlt
mov
pop
xor
daa
clc
jb
repz
pop
es
adc
repnz
dec
sarl
shll
xor
mov
fbld
out
call
xchg
icebp
imull
mov
mov
hlt
pop
adc
call
xlat
lods
xor
in
popa
mov
fcoml
cmp
inc
add
mov
xor
in
pop
and
int
adc
clc
cmp
jecxz
xor
mov
fnstcw
out
jmp
or
add
outsb
fbstp
int
and
sbb
das
mov
ret
inc
enter
xlat
mov
ret
mov
push
fbstp
inc
fimuls
xchg
sahf
hlt
adc
cmp
outsl
sbb
call
inc
and
loop
shr
or
xlat
lea
mov
add
sbb
lock
aam
mov
popf
cld
repz
and
sub
aad
flds
outsl
addr16
inc
xchg
iret
cmp
lcall
dec
sub
sub
or
xor
test
lds
andb
das
mov
xor
mov
xor
jno
adc
xchg
out
or
lds
popa
popf
insl
adc
int
in
push
inc
sti
xor
mov
repnz
or
lods
insb
out
in
mov
mov
sub
out
or
movsb
inc
push
sbb
aam
cmp
test
pop
mov
loop
fmuls
into
push
int3
pop
pusha
dec
mov
fidivl
sbb
mov
lock
mov
out
or
sti
sbb
xlat
mov
jle
sub
mov
sbb
lock
cli
daa
mov
mov
addr16
xor
test
cmpsb
pop
imul
jae
adc
fidivs
test
aaa
or
cmp
lret
repz
or
push
aas
mov
sarb
cmp
aam
cltd
js
lds
popf
pop
jbe
les
in
into
xor
ja
idiv
ss
push
mov
xchg
jp
jl
pop
je
xchg
xor
gs
lods
les
cli
mov
add
sti
mov
stos
mov
adc
stos
rcrb
sbb
push
or
or
sbb
jl
inc
int3
or
repz
ljmp
inc
push
or
outsl
dec
sub
stos
adc
lock
pusha
fxch
fwait
hlt
cmp
adc
xor
aas
and
ja
cmp
pop
pop
gs
sbb
shl
pop
jo
or
lock
int3
or
rcrl
push
or
ja
lret
repz
mov
dec
jge,pt
out
call
setnp
sbb
pop
inc
movsb
or
test
dec
jns
pop
int
jg
call
outsl
sbb
das
mov
push
jp
sbb
int
pop
jb
xor
sbb
out
jecxz
pusha
call
ret
mov
ljmp
fdivl
mov
enter
cmpb
lds
jae
mov
sbb
imul
repnz
fcomp
sub
xor
fiaddl
mov
in
jns
pslld
ret
repz
mov
roll
dec
rcrb
mov
pop
jge
xlat
pop
add
pop
movsb
push
add
inc
or
or
inc
mov
mov
insl
inc
js
push
test
push
mov
mov
mov
mov
jge
cmp
jl
js
sub
push
outsb
in
push
push
testb
cmp
cmp
dec
push
insb
js
adc
sub
xlat
pop
fisubrl
jle
popf
mov
pop
inc
ret
xchg
addr16
iret
jb
adc
fbstp
adc
adc
add
sbb
cmp
jne
pop
sub
test
cmpsl
push
cmp
mov
mov
xor
sbb
mov
mov
outsl
cmp
je
movsbl
add
sub
jne
inc
cmp
jne
cmp
inc
test
in
add
add
jmp
inc
sbb
adc
aaa
ljmp
or
jg
cmp
mov
adc
inc
cmp
shll
addr16
mov
rcrl
lret
notw
mov
andb
xor
in
imul
sub
pop
addb
jno
mov
insl
jl
inc
adc
jmp
mov
loope
rep
jecxz
aaa
or
outsb
pop
loopne
dec
sub
jne
push
lea
adc
adc
je
pop
movsb
jmp
sbb
push
ljmp
call
lods
incl
dec
pop
mov
or
mov
call
sub
jnp
push
jl
sar
je
cld
dec
cmp
or
jmp
imul
lea
lret
add
lock
clc
pop
adc
and
lcall
test
push
pop
mov
loopne
pop
int3
rolb
aam
call
out
lcall
imul
clc
adc
data16
imul
ja
std
push
or
call
out
stc
in
gs
das
lock
jo
hlt
pusha
andb
imul
fnsave
lods
pushf
mov
fistps
or
pusha
mov
add
mov
jnp
and
xchg
mov
mov
lods
jne
dec
mov
sub
outsb
les
cmp
fwait
dec
mov
inc
push
call
sbb
or
call
sbb
jb
insl
fistpll
in
push
push
movb
in
dec
out
push
in
xchg
lret
in
push
lock
icebp
inc
repnz
mov
mov
pop
in
subb
xor
sub
or
add
hlt
xor
repz
cmp
loope
fstl
hlt
sub
iret
roll
sbb
and
or
xchg
sbb
push
adc
xorl
cmp
or
inc
pushf
xor
fdivp
xor
lods
inc
pushf
nop
paddb
add
out
int
fs
xor
cmp
xchg
je
lea
popa
testb
mov
sub
push
mov
push
clc
lods
jo
adcl
adc
mov
rcll
adc
sub
push
pop
idivl
dec
mov
sbb
in
cmp
bound
cmpsl
push
add
popa
mov
push
adc
lea
add
add
das
adc
mov
push
add
pushf
sub
sbb
jbe
sbb
xor
clc
add
or
cmp
lock
hlt
push
fldt
jbe
cmp
jmp
pop
call
sub
adc
sub
hlt
lods
inc
inc
inc
inc
out
shll
cmp
pop
jb
pop
sahf
outsb
mov
jne
icebp
add
mov
repnz
sub
mov
addr16
adc
andl
mov
cmpl
push
dec
cld
pop
jb
add
jno
push
pop
sub
js
adc
cmp
mov
subb
repz
mov
dec
dec
pop
cmp
cld
mov
mov
add
cmp
pusha
ror
cmp
xchg
push
xchg
scas
sub
nop
js
xor
push
mov
push
aad
add
xchg
cmp
fcmovu
cmp
lods
ja
movl
addl
mov
dec
addr16
inc
add
mov
push
adc
int
mov
push
push
orb
sub
into
and
mov
lea
cmp
call
push
in
xchg
and
mov
add
push
outsb
call
fcomps
cmp
jle
or
mov
xor
out
sub
adc
fidivs
pop
into
cmpsb
xchg
sti
enter
mov
inc
call
movsb
mov
inc
js
cmp
or
push
je
js
clc
fldl
xorb
or
inc
add
xor
lock
mov
push
pop
xor
fbld
call
int
add
pop
jbe
pop
test
sbb
stos
int3
add
pop
and
add
ret
fcompl
or
enter
roll
or
fsubrl
cmp
fmull
cmc
ret
cmp
and
ret
adc
add
inc
jmp
xor
aaa
fldenv
cmpb
push
mov
in
mov
lcall
fldt
std
xor
sbb
push
nop
stos
insb
stos
and
gs
loopne
test
push
sbb
adc
mov
xchg
mov
loope
cwtl
and
les
fld
or
pop
mov
pop
add
mov
push
jg
cmp
pushl
cmp
cmpsb
mov
pop
or
fwait
dec
sub
adc
pop
mov
xor
sub
mov
sbb
or
lods
std
or
mulb
pushf
xor
fs
jl
cmp
mov
in
push
mov
or
pushf
sti
into
testb
decl
int3
cmp
ja
cmpl
cmpl
scas
or
out
cmp
je
ret
pop
sbb
sub
pop
or
or
sbb
lea
std
stos
xchg
mov
je
cmp
pop
pop
call
pop
das
jmp
call
mov
cmpb
sub
dec
arpl
cmp
mov
jmp
pop
fisubrl
cld
xchg
adc
add
inc
sub
pop
dec
mov
pop
xchg
xor
movsb
or
in
aaa
ss
mov
test
dec
adc
lahf
push
sub
push
pusha
stos
or
mov
push
jo
push
lds
xor
outsb
xchg
int
leave
lods
lods
push
insl
in
mov
push
mov
mov
pop
cs
lret
mov
mov
mov
mov
mov
mov
and
mov
pop
mov
rcl
js
shrl
lret
shlb
insb
aam
aad
mov
mov
xlat
pop
fsubrs
and
fcmovu
xor
loopne
test
loop
jecxz
pop
mov
jbe
in
push
out
dec
out
call
jmp
insl
jae
lcallw
outsb
je
insb
or
shll
xlat
ret
rol
add
xor
ror
leave
lret
cmp
int3
hlt
shll
jb
push
xchg
xchg
mov
mov
cltd
lcall
jnp
fldt
mov
mov
mov
mov
mov
cmpsb
xor
cmpsb
imul
divb
jmp
idiv
ds
hlt
cli
jns
lea
mov
test
je
mov
cmpsb
or
dec
popa
or
repz
lcall
jo
into
push
insl
loope
xor
lret
pop
test
and
int3
jmp
mov
loopne
idivb
in
mov
nop
lcall
jmp
dec
rcrb
adc
xchg
jnp
or
enter
dec
insl
je
mov
stos
orl
pop
mov
out
shrb
enter
clc
cmp
inc
jge
sti
push
movsl
leave
pop
adc
movsl
popa
lahf
movsl
push
push
shl
and
mov
into
imul
xor
push
outsb
leave
inc
ret
sbb
daa
mov
lds
inc
sub
fisubs
scas
nop
jmp
aaa
sbb
push
mov
jmp
in
add
mov
adc
cmp
aas
mov
nop
mov
je
repnz
sti
gs
jmp
xor
pop
andb
add
int3
jno
and
mov
or
xchg
sub
push
stos
mov
je
cmp
rcl
pop
in
push
xchg
fdivrs
into
or
adc
sarb
daa
lock
mov
and
dec
sarb
xchg
fwait
jmp
push
xchg
adc
mov
cmp
push
dec
imul
pop
push
outsb
pop
insb
andl
pop
mov
inc
push
push
popa
fbstp
jl
inc
mov
push
jb
loope
sahf
inc
or
mov
pop
pop
mov
xor
lock
fiadds
pop
ror
lea
sbb
inc
xor
rcrl
mov
xchg
lcall
pop
ret
mov
pop
cmp
adc
xor
fcomip
shll
adc
sub
ficomps
mov
inc
mov
lods
push
push
xchg
cmc
sub
push
es
mov
rol
rcll
fcompl
nop
add
push
add
faddp
icebp
add
in
dec
cmp
loopne
fs
jmp
imul
mov
adc
add
clc
popf
mov
xchg
std
out
pop
aad
sbb
rorl
push
pop
xchg
and
cmp
lea
loopne
and
dec
jb
xchg
mov
mov
call
test
cmpb
mov
andl
add
pop
cs
push
and
adcb
pushf
nop
fcomp
pusha
out
incl
xor
push
call
xor
adc
pop
or
adc
jmp
and
xor
inc
imul
outsl
scas
fs
lea
je
xor
mov
ficoms
mov
ss
das
jbe
fcmovnu
sub
in
add
jmp
mov
pop
ret
mov
mov
loop
fisubs
rcl
cmp
test
js
push
int3
dec
int
jp
shll
iret
imul
dec
shll
push
imul
mov
ja
fildl
sbb
cmpsb
fbstp
xor
xor
std
sbb
cli
sti
cld
std
insl
mov
xor
add
sarl
xor
mov
outsb
shlb
pop
xor
or
enter
pop
lret
xchg
lret
insl
xlat
in
out
mov
jmp
ljmp
or
icebp
repnz
nop
loopne
jo
mov
fsubl
sahf
jecxz
cwtl
mov
addr16
pushf
and
or
push
shrb
mov
shll
and
and
dec
and
add
bound
sbb
cld
int
add
push
insb
scas
push
adc
or
dec
out
dec
cli
sub
lret
cmp
cmpsb
imul
mov
in
outsl
out
ja
fdivs
lock
bnd
ljmp
insb
insb
je
pop
rorb
sahf
in
dec
xchg
and
pop
push
add
xor
mov
push
cmp
or
call
cs
inc
loopne
jb
push
fsubrl
aam
cmpsl
ret
sbb
sarb
adc
xor
idiv
lcall
pop
shlb
js
xor
das
inc
fdivrl
in
xor
bound
loope
aam
mov
inc
add
in
adc
addr16
out
push
movsb
xor
xchg
clc
lock
jbe
data16
jge
cmp
and
cmpsl
and
push
lret
mov
xchg
repnz
enter
in
in
dec
lock
mov
enter
adc
iret
push
pop
mov
push
adc
dec
in
push
or
mov
xor
cmp
es
test
jae
ret
jmp
es
push
sbb
stc
js
mov
aad
je
and
outsb
adc
mov
lcall
mov
cmpsb
imul
dec
rol
rol
adc
les
mov
enter
mov
lret
fs
int
das
into
bound
rcl
rcl
adc
or
pop
xlat
aaa
fcomp
lcall
fdivl
mov
sbb
loopne
loope
jecxz
lcall
out
call
jmp
in
daa
in
sbb
mov
out
fs
es
stos
outsb
repnz
sbbl
cmp
mov
mov
mov
cs
dec
insl
pusha
mov
adc
jae
aad
fsubrl
cld
or
mov
ds
jae
inc
fsubr
imul
out
addr16
out
push
adc
call
or
mov
lds
mov
push
out
push
cltd
pop
call
mov
inc
icebp
lea
add
inc
sbb
adc
je
inc
jmp
mov
lea
shll
test
cmp
add
cmp
lahf
mov
sub
call
push
dec
jmp
cmp
bswap
cmp
stc
cmc
cmp
add
mov
stc
out
call
xchg
dec
mov
cmp
add
jge
and
add
or
and
mov
insb
jo
jmp
jnp
add
pop
push
out
call
int
daa
lock
cmpl
cli
fistpl
push
cmpb
add
add
clc
mov
idiv
mov
jae
divl
cmpsb
jne
adc
add
xor
xor
fucomp
hlt
aad
call
xor
mov
jbe
mov
xor
aas
leave
push
addb
in
sub
or
daa
pushf
popl
jmp
fisubl
pop
xor
jg
ret
add
adc
jmp
lret
insl
ljmp
test
push
loop
push
sbb
jge
je
bound
mov
bound
jbe
push
push
lods
out
add
repnz
adc
xor
push
jle
xchg
cmovle
nop
inc
push
lods
jg
or
or
and
sub
sbb
mov
or
sub
xchg
call
dec
add
jg
loope
or
mov
scas
mov
cmp
add
shrl
test
dec
and
pushf
jbe
sbb
inc
dec
mov
mov
mov
cwtl
push
xchg
outsb
mov
into
xchg
push
mov
add
repz
sbb
cs
lock
jmp
mov
dec
out
cmp
push
or
jnp
adc
mov
add
ret
mov
push
scas
jmp
icebp
add
pushf
xchg
cwtl
fwait
pusha
and
or
roll
lds
add
xor
jne
dec
and
lahf
rcrb
xrelease
mov
ret
cmp
pop
sub
imul
clc
jmp
add
je
shlb
out
mov
aas
repz
push
xor
shrl
push
dec
jg
jne
xor
push
push
cmp
xor
data16
dec
outsl
into
add
not
dec
sar
cmc
push
push
aam
mov
mov
aam
mov
add
pop
ss
jo
push
inc
add
and
sbb
mov
pushl
lret
cmc
pushf
xor
pusha
cmp
cmp
xchg
scas
sti
scas
mov
add
add
test
or
push
add
jb
pop
outsb
test
sub
or
std
jns
inc
dec
sbb
aas
std
cld
mov
pop
adc
repnz
sub
imul
sbb
lds
sbb
fdivl
inc
lods
rcl
adc
insl
ja
mov
inc
pop
push
repnz
test
xlat
hlt
cli
push
dec
out
sub
jg
insb
hlt
or
daa
adc
cmp
negl
ja
ss
sti
sub
or
in
sti
mov
movsl
or
add
jae
into
mov
push
push
jecxz
adc
cmp
call
pop
jg
xchg
imull
adc
push
mov
mov
mov
enter
add
xor
mov
fisttps
add
leave
xchg
sbb
xchg
cmp
ds
sbb
fwait
aas
clc
or
push
xor
jl
in
sbb
fsubrp
ret
mov
adc
out
pop
mov
call
ret
fildll
pop
pusha
pusha
call
repz
adc
jo
test
call
rcll
aam
outsl
stc
sarl
add
lock
mov
push
loopne
pop
scas
push
cmp
daa
mov
leave
xchg
inc
jl
repnz
push
lret
mov
pop
mov
fcoms
loope
insb
mov
dec
aas
inc
cmp
cmp
xor
mov
inc
mov
lds
or
mov
leave
test
repnz
dec
mov
jl
or
jl
dec
sbb
add
inc
adc
mov
push
inc
jae
push
xchg
pop
shlb
addr16
fwait
loop
or
xchg
cmp
jl
pushf
jmp
decb
sahf
pop
stos
or
jae
inc
add
ljmp
mov
fwait
jg
add
jne,pt
or
inc
sti
lret
mov
sbb
push
movb
or
shll
push
aam
dec
call
xor
sub
add
shl
mov
aad
mov
push
sti
or
les
scas
int
jne
adc
sti
ror
shr
sbb
fs
sahf
stos
sub
jnp
mov
popa
por
adc
gs
das
push
push
cmp
ds
xor
jnp
in
rcrb
sbb
push
test
or
pushf
jb
pop
scas
xchg
inc
cmc
and
xchg
sub
hlt
hlt
mov
hlt
push
adc
into
adc
adc
inc
add
fistl
outsb
mov
out
jo
inc
dec
sbb
inc
adc
js
inc
or
cmp
cmp
mov
add
pop
adc
sbb
xchg
aaa
xor
adc
add
ret
adc
jmp
insb
decb
cld
mov
sub
movsb
mov
xchg
and
add
movsb
xor
push
je
arpl
push
add
and
pusha
insl
stc
fmull
push
cs
add
pusha
xchg
fcoml
lods
xchg
jmp
insb
cmp
fstps
jmp
jl
xor
enter
lea
ds
mov
jle
fiaddl
je
ja
push
sub
push
enter
testb
xor
call
xchg
lods
sbb
inc
mov
loopne
loope
test
es
mov
outsl
or
and
popa
fsub
jns
mov
scas
sbb
or
sbb
out
cmpsl
dec
mov
cmp
xor
aaa
push
je
add
push
shl
adc
xor
push
or
lcall
movl
sti
sbb
pushf
xor
xchg
arpl
jne
push
xlat
or
jnp
push
scas
pop
lock
ds
pop
pop
jae
cmpsb
or
xor
pop
jns
lea
and
test
xchg
pop
outsw
outsb
je
mov
push
pop
pop
cmp
out
and
lock
in
fists
call
in
dec
lret
imul
adc
in
aaa
outsb
sub
inc
in
or
cli
mov
sbb
cmpsl
cmp
lahf
add
insl
outsl
sbb
sbb
outsb
insl
addr16
imul
xor
or
xchg
data16
gs
js
incl
add
pop
cmpsb
lret
aas
data16
sbb
inc
fadd
cli
in
fs
sbb
test
jns
cmp
mov
jns
icebp
adc
je
add
jmp
out
insb
xchg
in
xor
mov
mov
push
addb
pop
pop
ret
jb
repnz
leave
decl
gs
and
cmp
push
xor
cmp
rcr
pushf
sbb
call
repnz
push
mov
scas
pop
testl
push
add
cmpsl
add
test
or
jo
nop
adc
pop
ficoms
jb
cmp
je
xorl
popf
jne
push
push
pop
pop
hlt
sub
add
push
xchg
inc
dec
cmp
push
push
dec
fdivrs
fidivs
dec
ljmp
cmp
mov
les
and
or
mov
xor
or
je
add
loop,pn
fistl
leave
lods
clc
sahf
fadds
xchg
push
or
sub
push
bswap
sbb
sbbb
inc
mov
inc
pop
repnz
insl
cmp
lds
pop
cmpsl
fldcw
xchg
insl
pop
subl
or
add
rcrb
gs
aam
fsub
call
sub
add
pop
add
or
mov
sbb
jne
and
inc
mov
inc
mov
push
and
jns
mov
add
in
xchg
popf
or
push
pop
adc
les
xchg
push
enter
add
jb
dec
enter
dec
test
sbb
out
inc
inc
lock
adc
inc
mov
jnp
mov
mov
testl
cmp
loopne
test
and
mov
jmp
sub
adc
inc
loop
fsubrl
incl
je
xor
lahf
cmovge
push
frstor
lret
ss
push
ret
mov
je
add
pop
or
adc
daa
js
pop
xchg
movsl
js
or
fistl
push
dec
cmpsb
imul
inc
cltd
cmpsb
imul
push
pop
addr16
lret
mov
adc
cs
xchg
int3
mov
insb
mov
movsl
lret
mov
add
outsb
je
mov
mov
mov
pop
xlat
sub
cmpsb
pop
cmpsl
push
gs
sub
stos
push
lods
lods
pop
xchg
fnstcw
je
jo
gs
xchg
gs
outsb
push
gs
aaa
pop
xchg
jno
gs
roll
fwait
cmpsb
imul
pop
shrl
mov
gs
inc
push
es
insl
shll
xchg
inc
push
lret
push
xor
cwtl
js
lcall
sub
inc
push
fistps
cmp
inc
loop
in
lcall
push
mov
mov
int
imul
imul
add
sub
mov
mov
mov
mov
and
enter
sbb
sub
aad
jmp
push
lock
push
or
cmp
or
push
jmp
movsb
inc
jle
shll
adc
stos
pop
inc
int
pop
cltd
shl
int3
inc
enter
mov
dec
jg
rep
shrd
test
movsl
pop
mov
pop
rcll
mov
in
je
push
adc
lock
imul
pusha
inc
cmp
aam
sti
leave
mov
push
leave
sub
or
movsb
sbb
dec
mov
cld
repz
adc
jnp
pusha
or
sbb
das
xchg
adc
js
aam
or
in
rclb
lock
cmpsb
xor
jne
push
loopne
mov
dec
add
sub
jge
cmp
js
or
push
aas
push
lsl
lods
jp
cmp
cmp
bound
out
push
jge
xor
in
out
lret
adc
sbb
jmp
icebp
jne
call
sbb
cld
jp
or
sahf
test
ljmp
insl
xchg
jne
jno
inc
rorl
in
push
lahf
pop
sarl
xorl
pop
jae
je
andl
fldcw
sub
push
sub
jnp
fisttpl
sub
add
adc
popa
dec
std
clc
push
cmp
das
pushf
xor
jmp
jle
and
sub
mov
mov
int3
sub
mov
cmp
add
dec
add
lock
fcoms
stos
or
pop
je
pop
xchg
mov
ret
push
and
or
xchg
out
or
adc
adc
and
ficomps
xchg
add
je
sbb
outsl
setne
jl
push
jle
cwtl
add
das
adc
adc
scas
push
push
mov
cmp
sub
add
jns
and
push
jmp
aas
sbb
cmp
adc
cmp
xor
add
sti
icebp
xchg
loop
lods
in
andb
mov
stos
cmpl
jl
sub
mov
imul
jb
gs
outsl
arpl
es
push
and
inc
clc
ret
jmp
sbb
jmp
push
lods
xor
dec
mov
and
sub
mov
and
jnp
add
xor
cmp
daa
int3
fldt
sbb
sbb
adc
pop
test
or
iret
or
push
js
in
xor
pop
or
js
add
push
dec
testb
push
call
daa
add
pusha
mov
sub
push
lcall
pop
xor
cld
and
mov
add
cvtps2pd
andb
dec
push
lcall
pusha
xor
lock
push
push
jmp
outsl
inc
push
mov
cmp
sti
push
mov
and
sbb
in
push
cwtl
add
addr16
jb
cmp
push
out
and
and
testl
in
mov
test
es
mov
or
or
pop
add
enter
popa
push
xchg
arpl
outsb
cmp
scas
bound
popa
imul
subb
es
and
mov
arpl
lret
mov
je
outsl
outsb
gs
mov
js
gs
mov
lret
mov
outsl
outsb
es
test
aas
popa
xchg
xchg
gs
arpl
cmp
fs
loopne
loope
dec
mov
loop
jecxz
in
xor
call
cmpsb
jmp
je
ret
outsb
imul
cmp
imul
imul
jmp
or
fsubr
sbb
push
in
or
jmp
mov
xchg
mov
push
adc
fisubl
pop
rorl
pop
push
push
jne
jne
xor
out
add
frstor
cmpl
jg
fsubrl
pop
movsb
pop
inc
ss
mov
jne
cmp
call
and
das
lods
movsb
xchg
je
jb
mov
imul
or
sbb
sbb
into
mov
call
lods
aaa
cmp
ret
sahf
push
pop
push
mov
mov
int
and
aaa
pop
bndstx
aaa
xchg
jge
or
sub
mov
test
lcall
fmull
fcoml
jbe
pop
or
out
jg
cmp
cmp
mov
mov
push
incl
scas
push
ja
jge
push
inc
popa
or
ja
not
bound
push
pop
mov
adc
cmp
inc
jb
push
mov
fsubl
fcmovnb
pop
leave
call
popa
fildl
cld
fnstsw
add
xor
pop
jmp
call
fwait
imul
arpl
push
mov
or
mov
add
sbb
in
push
jno
les
je
loop
mov
add
in
nop
inc
loope
loopne
cmp
xchg
aas
dec
xor
mov
sub
add
mov
lret
mov
insl
bound
jne
dec
pop
push
insl
out
fdivs
cmp
inc
std
push
jo
outsl
mulb
mov
cmp
sbb
add
jg
fnstcw
mov
mov
jns
shrl
gs
insb
outsl
imul
pop
dec
ss
push
mov
pusha
and
stos
test
mov
inc
adc
mov
and
adc
mov
and
pop
mov
and
jle
movsl
enter
bound
mov
outsb
cmp
lds
xor
aas
test
push
notl
mov
jbe
movl
cmc
add
mov
pop
dec
adc
popa
xchg
mov
add
pop
add
enter
xchg
xor
enter
xor
jmp
gs
int3
jle
adc
imul
pop
pop
add
jle
xchg
cmp
sbb
or
inc
ds
xor
or
clc
xor
or
testl
fisubs
jp
test
stc
js
std
in
cmpsb
int3
repz
adc
pop
andb
sbb
xor
mov
push
adc
push
icebp
push
addr16
xlat
pop
sbb
xchg
mov
push
pusha
fucomi
sbb
lea
dec
add
push
sbb
mov
imul
adc
cmp
outsb
loope
jmp
dec
add
sbb
cmp
fucomi
movlps
imul
xor
jbe
shlb
and
push
or
push
mov
pop
sar
mov
je
iret
sub
test
jle
mov
decl
add
push
shl
add
clc
sub
add
insl
xor
or
sbb
push
mov
mov
and
push
and
sbb
and
push
and
xor
sbb
sbb
and
and
dec
adc
adc
outsl
cli
jno
push
lock
cmp
hlt
gs
push
mov
push
fistps
cmp
or
sti
adc
lods
sbb
jg
xchg
out
pop
out
fdivr
add
xor
lods
hlt
cld
andb
daa
ljmp
xorl
jge
lock
mov
dec
mov
push
sbb
aas
clc
pushl
ret
push
fistl
fs
pop
add
mov
jb
xor
push
or
jb
push
in
das
out
insl
pop
repz
decb
mov
pop
dec
shrl
lods
push
push
push
push
mov
inc
lret
in
cmp
pop
ja
roll
cltd
pop
call
pop
cmp
sub
fs
mov
jmp
mov
pop
divb
mov
pop
int
insb
xor
push
push
push
push
dec
add
push
push
fistl
pop
inc
cmp
jb
call
lods
scas
pop
add
movsb
jb
jbe
inc
pusha
mov
into
bound
repz
enter
cs
nop
out
sbb
insl
xchg
push
jb
fsubr
sbb
arpl
pop
fdivrl
iret
xchg
inc
mov
jns
jle
cs
mov
jl
call
negb
ss
jmp
mov
pop
pusha
add
jecxz
mov
inc
div
jb
push
rcrl
pop
mov
cmp
cmp
sbb
jo
jecxz
mov
pushf
pop
jmp
cmp
xor
xor
pop
and
mov
jmp
mov
mov
mov
and
jmp
jno
inc
mov
loopne
ja
or
push
push
hlt
jnp
cltd
push
jbe
mov
lcall
jne
sub
adc
sbb
pop
mov
adc
scas
add
and
add
inc
mov
cld
hlt
jecxz
push
pop
inc
shll
xor
xor
shll
xor
fs
insb
lret
sub
cmp
arpl
lcall
arpl
addb
jne
mov
cmp
lods
jecxz
jo
mov
pop
mov
jecxz
mov
adc
stc
or
stos
idivl
jb
test
jo
dec
fnstcw
mov
mov
sarl
hlt
iret
enter
fsubl
vmovups
fldt
pop
push
jg
pusha
xchg
push
sti
sub
shlb
sub
add
les
push
leave
mov
call
test
lret
test
scas
inc
nop
dec
mov
enter
push
or
mov
shl
cmp
dec
lds
jne
push
negb
sub
cmp
mov
popa
pop
mov
ss
add
add
pop
inc
lock
popf
mov
hlt
movsl
movsb
xor
jp
hlt
or
lock
dec
pop
pushf
sub
xor
add
adc
add
sahf
xchg
loop
das
je
lea
test
mov
faddl
inc
movzbl
cmp
clc
testl
adc
push
push
inc
stos
pop
inc
xchg
sahf
inc
scas
push
clc
and
push
aad
push
mov
fcoms
imul
imul
cmpsb
imul
gs
gs
fs
cmpsb
imul
jae
test
lcall
sahf
jp
loope
dec
xor
je
mov
add
xor
and
inc
add
outsl
jne
in
fwait
lds
scas
lods
popf
dec
push
dec
sbb
inc
xchg
push
xchg
or
in
xchg
adc
pushf
jns
sbb
cmpsb
sub
xchg
outsb
cs
mov
add
add
inc
shrb
sub
test
mov
stos
push
rol
rcll
sub
in
push
shll
push
daa
sahf
push
hlt
xor
adc
aad
data16
jle
push
add
push
cmp
cmp
pop
repz
fsts
fwait
popf
insb
sub
sbb
or
pop
pop
pop
ficoms
xchg
dec
decl
push
lea
arpl
lea
sub
and
loop
mov
aad
add
repnz
mov
enter
mov
insb
push
mov
je
xchg
xchg
lea
jb
pop
fs
xchg
gs
imul
ljmp
or
dec
outsl
ja
mov
jae
push
in
push
imul
xchg
push
popa
or
xchg
gs
push
dec
inc
popa
in
dec
xchg
arpl
sbb
or
xchg
gs
mov
arpl
data16
hlt
mov
int3
add
mov
adc
push
mov
mov
icebp
pop
int
push
cs
enter
xor
cltd
mov
mov
fsts
mov
adc
mov
mov
jne
mov
xchg
dec
mov
mov
les
mov
mov
into
push
sarb
lcall
inc
add
rclb
ret
adc
sbbl
add
jno
mov
or
in
into
pop
ljmp
sbb
arpl
outsl
xor
imul
movl
push
dec
mov
and
arpl
inc
jge
shr
and
inc
inc
lret
gs
cmp
inc
je
jmp
and
jmp
in
in
sbb
sbb
out
ds
fnstcw
sbb
cwtl
jae
shll
shlb
jb
fcoms
stc
xlat
stc
inc
mov
fdivr
fyl2xp1
iret
lret
push
stos
adc
mul
xchg
es
clc
leave
clc
enter
fdivr
aam
in
daa
jns
cli
fdivr
fsincos
outsb
sbb
adc
cmp
xchg
in
and
test
icebp
sti
out
or
loop
dec
neg
sbb
add
test
fs
lcall
outsl
stos
jne
xchg
lods
pop
lods
outsb
and
movsl
cmp
mov
insb
mov
dec
ss
mov
mov
push
mov
xchg
jmpw
mov
mov
fs
xchg
outsb
in
pushf
mov
sahf
xchg
out
fs
lods
mov
mov
fs
das
imul
aad
or
in
in
xchg
dec
xchg
cwtl
cltd
xchg
out
insb
in
test
into
into
into
dec
xchg
mov
in
jmp
lea
fwait
sub
testl
repz
sahf
pop
fdivr
and
cli
bnd
enter
cld
mov
test
and
pop
sbb
or
divb
mov
nop
loopne
test
push
in
int
es
pop
pop
stc
bound
fstps
stc
push
inc
or
inc
cmp
inc
xor
stc
or
add
push
cmc
add
call
imulb
push
and
sbb
sahf
xor
lods
add
in
cmpsl
adc
or
enter
jmp
inc
xchg
into
mov
in
jns
push
sbb
mov
test
pusha
outsb
movsl
mov
xchg
and
pop
push
pop
adc
in
addr16
pop
pause
int
push
sahf
jne
inc
sahf
sbb
sub
and
call
call
pop
pop
call
push
or
mov
jb
enter
pop
jne
icebp
je
cmp
bound
dec
shll
jae
jns
shll
imul
popa
outsb
shlw
dec
shll
arpl
inc
shll
das
pop
pop
mov
arpl
xorb
shll
jp
insb
imul
lret
pusha
aaa
jo
test
ljmp
shll
int3
loope
je
imul
imul
cmpsb
imul
imul
imul
cmpsb
imul
imul
sbbl
das
xor
fs
insl
in
push
inc
ret
scas
xlat
dec
lcall
arpl
jp
shrl
nop
fsubl
lock
mov
gs
test
imul
shll
cmp
das
jae
xorl
cmp
test
xor
xor
shll
cmp
or
xor
xor
xor
int
pop
lcall
cmp
lods
mov
sbb
inc
and
and
loop
pop
push
jno
addr16
cs
add
mov
add
arpl
xchg
xlat
adc
popf
scas
test
outsl
test
and
inc
enter
pop
pop
push
or
shrb
push
xor
movsl
add
sub
push
loopne
jae
repnz
sbb
mov
and
lock
in
jns
add
punpckhbw
sbb
orb
loop
out
fiadds
xor
je
pop
inc
mov
mov
call
fstps
or
pop
inc
sub
push
icebp
adc
fstps
aad
add
loope
test
call
mov
add
pop
pop
negl
sbb
mov
je
test
bound
cmpsb
imul
dec
paddb
imul
sbb
lea
fcoms
jge
jnp
or
fdivrs
or
or
add
push
xor
lock
dec
test
inc
add
or
ficomps
jmp
mov
sbb
push
xchg
mov
les
jbe
and
xchg
inc
stos
sbb
push
push
mov
or
lods
call
add
aaa
and
push
xchg
pavgb
or
adc
iret
iret
mov
jae
and
add
pop
mov
xor
adc
sub
sub
cmp
push
pop
mov
cmc
cmp
xchg
push
or
push
das
mov
jns
push
and
repz
cmc
sub
sbb
shl
lea
enter
ljmp
insl
daa
in
stos
push
mov
out
mov
in
sahf
xchg
repz
xor
int
jo
pop
pop
sub
sub
sbb
lods
jmp
adc
or
xor
xchg
andb
ret
adc
xchg
lret
insl
pop
scas
mull
cmpsl
shrl
mov
stos
lods
std
call
push
pop
sbb
andl
sahf
push
mov
mov
adc
movsl
mov
lea
movsl
mov
fnstsw
sub
push
mov
jp
out
mov
nop
add
call
ja
dec
xor
js
mov
pop
or
shrb
push
push
je
imul
push
xchg
les
fcmovnbe
add
xchg
mov
insb
sbb
push
push
fcmovnu
int
ss
xchg
in
call
out
bound
sbb
insb
add
sahf
pop
outsb
call
ja
pushl
or
pop
adcl
pop
xchg
sub
fdivs
lcall
rcll
mov
add
mov
faddl
int3
mov
mov
insl
js
nop
mov
mov
fisttpl
aaa
in
sub
add
ret
cmp
lcall
push
call
add
mov
loope
cmp
fistl
stos
adc
xor
mov
in
jecxz
ss
push
lock
icebp
pop
xchg
hlt
push
cmc
notl
add
and
loopne
je
dec
cmpsl
outsl
add
xchg
lods
pusha
or
test
je
mov
gs
jmp
jae
negl
in
in
dec
sarl
icebp
repnz
xlat
mov
lea
inc
out
fnsave
mov
and
adcl
add
push
sbb
xchg
adc
movsb
test
inc
imul
cmp
incl
pop
push
push
mov
cmp
adc
jl
aas
fbld
push
xchg
bound
cmp
or
cmp
std
call
stc
jne
clc
push
in
out
stc
outsb
adc
push
in
push
cs
jg
push
lock
pusha
push
push
call
paddq
mov
data16
jae
loope
push
mov
sub
pop
out
dec
add
addl
stos
ss
icebp
mov
test
insb
adc
movsb
xchg
push
fstp
or
jo
call
xchg
pop
mov
xor
cmp
adc
add
inc
and
call
cmc
daa
sbb
lods
orb
adc
mov
les
fistps
fwait
insb
out
mov
sbb
push
lret
inc
inc
mov
pop
cmp
mov
outsl
dec
sub
or
cmpl
lods
add
sbb
jo
data16
in
mov
jae
or
add
mov
adc
in
xor
inc
sarb
cmp
orb
pop
insl
sarb
push
push
andl
std
sti
mov
adc
and
loopne
jle
and
and
xchg
xchg
int3
and
adc
cmpsl
sti
jmp
push
mov
stos
sbbl
js
add
inc
ret
jo
jmp
pushf
fsubl
sub
inc
fldcw
shlb
jmp
dec
xor
fdivr
xor
std
and
jp
fcoml
pop
dec
dec
sbb
movsb
lret
add
push
lds
pusha
sti
adc
push
sbb
add
add
xor
mov
xlat
sbb
jge
add
or
and
jmp
mov
push
push
repz
mov
mov
mov
mov
xchg
faddp
pushf
rcrb
push
ja
adcl
and
push
mov
fucom
inc
adc
add
xor
cmpsl
test
call
adc
or
lret
test
xchg
push
dec
cs
je
xchg
gs
jb
cs
inc
fs
xchg
gs
fs
addr16
xchg
in
jb
push
popa
xchg
gs
xchg
outsb
gs
cs
shlb
ja
gs
mov
push
test
mov
fcoml
inc
aam
daa
xchg
dec
adc
xchg
sbb
out
enter
sti
das
or
adc
push
call
fs
mov
clc
dec
sub
jl
jmp
jne
adc
negb
mov
dec
and
ljmp
xlat
xor
pushf
xchg
sti
scas
fstpl
push
mov
or
mov
fsubl
pop
mov
repnz
lahf
sahf
add
mov
sub
repz
pushf
push
adc
lods
cmp
nop
cmp
push
mov
mov
adc
iret
sbb
push
clc
cs
add
mov
sbb
xor
xor
sbb
push
sub
fsubs
and
or
add
cli
mov
mov
mov
push
xor
lds
test
in
mov
fwait
jecxz
insl
popa
mov
sbb
int
mov
insb
sub
mov
stc
or
push
lock
mov
xor
mov
pop
jmp
cwtl
or
mov
cmp
mov
xor
sub
and
and
or
push
enter
clc
mov
sbb
mov
out
and
sti
add
jecxz
mov
insb
fs
out
inc
sub
fwait
sbb
enter
lahf
xorl
lods
jmp
je
sahf
add
mov
je
pop
sahf
add
pusha
das
dec
add
add
sub
mov
and
sbb
out
insb
aad
or
adc
adcb
ja
xchg
mov
adc
dec
cmp
cmp
mov
lods
idivl
push
icebp
inc
add
stos
fucomip
inc
cmp
jl
je
inc
cmp
scas
cmpb
mov
mov
add
jo
testl
dec
or
imul
push
lret
mov
add
pop
or
sti
push
lret
or
fisttps
push
inc
pop
sub
cmp
add
sub
mov
mov
sbb
or
roll
fisubrl
mov
aas
popa
pop
add
adcl
mov
aas
push
bound
adc
lods
mov
mov
add
mov
cmp
mov
sti
mov
push
jnp
lea
shr
jle
movzwl
mov
jne
movsl
call
shr
test
je
cmp
sbb
or
adc
add
jbe
push
pop
inc
lar
data16
lock
jne
mov
dec
out
push
sub
inc
lods
add
ret
or
loopne
inc
mov
int3
outsb
adc
mov
stos
sub
inc
movsb
jl
add
jmp
pop
add
push
aam
jo
push
add
sbb
pushl
jno
push
inc
aam
out
add
push
mov
push
scas
in
mov
adc
iret
add
sbb
loope
test
mov
cld
add
push
call
jb
sub
or
sub
and
mov
ja
xchg
inc
push
mov
mov
lods
inc
push
pusha
lcall
xor
sbbb
add
adc
pop
lods
jl
call
out
inc
cmp
jbe
pushl
lcall
and
out
cmp
movsb
mov
xchg
les
mov
orl
adc
push
fsubl
loopne
loop
cld
les
inc
jecxz
or
call
mov
push
in
jge
clc
stos
dec
add
ja
push
les
xchg
inc
cmp
adc
and
inc
sub
pop
inc
shr
testb
mov
adc
pop
orb
ret
add
inc
cmp
cmc
pop
testl
push
mov
push
adc
mov
mov
mov
mov
es
mov
push
lock
adc
sarl
mov
xchg
or
and
adc
sub
mov
gs
subl
lret
mov
gs
pop
push
jne
adcl
hlt
outsl
jbe
adc
push
sub
jne
mov
inc
stos
clc
or
repnz
xchg
inc
cmp
mov
iret
testb
into
xchg
subl
and
cwtl
in
jne
addr16
fldl2e
dec
mov
nop
insb
adc
rorl
lea
pop
mov
push
or
mov
or
adc
mov
out
push
aam
mov
call
je
cwtl
hlt
mov
and
enter
mov
sbb
dec
je
adc
or
clc
inc
ret
push
shr
mov
mov
daa
push
pushf
mov
xor
sbb
loope
dec
data16
push
cmp
sbb
and
add
test
sub
or
jo
jne
adc
inc
jecxz
scas
shrl
mov
stos
lods
dec
push
adc
add
roll
fdivl
and
ja
lcall
mov
xchg
lcall
pop
fnsetpm(287
mov
scas
mov
nop
mov
cs
popf
jnp
outsl
add
dec
push
stos
pop
add
push
mov
dec
mov
adc
movsb
stos
das
call
pop
mov
add
push
push
lea
jno
mov
mov
cwtl
jle
stos
push
into
pushf
cmp
lods
decb
add
cwtl
out
xor
je
push
je
xchg
and
inc
das
insl
add
inc
cmp
jl
mov
sbb
sbb
js
push
shrl
mov
call
adc
sub
cld
lock
stos
dec
and
out
decb
outsl
outsb
mov
cs
mov
in
push
jne
out
push
out
mov
pop
loopne
jae
sub
enter
or
adc
mov
pop
sbb
popa
push
lret
jb
shlb
js
lret
mov
and
xor
lods
mov
popa
jns
cs
jmp
inc
rep
test
adc
ret
inc
dec
fdivr
sbbl
adc
and
sarb
push
mov
push
jo
pop
pop
xor
and
mov
cmp
loop
hlt
or
cmp
fisubl
push
mov
push
mov
dec
push
and
or
add
xor
fcomps
fsubrs
inc
xor
shlb
ss
push
mov
adc
stos
mov
pop
push
jp
pop
andnps
and
xor
xchg
nop
cmpsl
mov
sub
mov
add
lret
mov
in
gs
insb
outsl
lcall
loopne
loope
loope
mov
pop
data16
pop
out
push
xor
add
mov
add
or
push
mov
adc
or
mull
jnp
dec
push
push
in
leave
sub
push
add
test
ss
xchg
das
sub
sar
shlb
and
mov
fs
push
sbb
or
sbb
push
jnp
push
addr16
aad
or
lahf
insb
inc
mov
inc
mov
push
mov
js
test
pop
pop
int
jne
sbb
fildll
mov
rol
sbb
or
dec
adc
xchg
xchg
int
push
jmp
and
insb
fwait
xchg
mov
cwtl
mov
int3
aam
addr16
add
and
fists
xor
xor
stc
jl
xchg
sub
in
and
insb
sub
sub
cs
fcoml
add
pop
das
or
add
cmp
xor
adc
mov
cmp
xorb
mov
mov
test
mov
or
cltd
inc
add
cld
lahf
push
inc
inc
push
jb
arpl
jae
decl
sub
add
outsl
outsl
insb
push
xor
push
outsb
popa
jo
push
add
jb
jne
insb
and
in
outsb
arpl
push
add
jo
xor
mov
dec
adc
push
jo
insb
call
xchg
insl
outsl
push
dec
gs
xchg
cmovbe
mov
and
jp
std
notl
insb
push
xchg
inc
add
dec
outsl
fs
mov
sub
adc
adc
add
movsb
add
jg
jnp
movsb
add
imul
push
inc
and
sub
mov
and
imul
or
test
int
fs
sub
aaa
dec
into
add
add
or
lea
inc
or
js
ja
jnp
mov
int
and
push
push
xchg
push
rolb
gs
outsl
ja
imul
mov
push
orb
jg
int3
inc
roll
es
lock
sub
push
push
push
imul
sbb
inc
lods
mov
in
pop
ret
andb
arpl
divb
jno
dec
pcmpeqb
and
pop
sbbl
das
clc
add
mov
add
sub
das
ja
sbb
push
gs
je
lret
insl
mov
sub
fsubrl
hlt
sub
loopne
sbb
gs
sbbl
loope
pop
out
jae
add
adc
imul
dec
inc
inc
sbb
or
sbb
mov
push
push
jne
jns
adcl
inc
mov
imul
xor
add
jo
cmpsl
fbstp
arpl
jne
insb
enter
pop
mov
fs
dec
xchg
insw
push
unpckhps
lods
lea
pop
add
fdivs
sbb
fstps
add
or
cmp
pushf
in
xchg
xor
cmpsl
adc
insl
leave
sti
outsb
fstps
xor
dec
jae
sbb
xor
je
int3
add
insb
gs
inc
lcall
ss
mov
imul
push
pop
adc
adc
push
dec
inc
lods
add
jo
je
aaa
push
mov
icebp
add
insb
popa
xchg
push
lods
loope
xlat
adc
xor
jb
fs
popa
xor
iret
add
mov
std
inc
pop
pop
and
push
addr16
add
push
shrl
lea
xor
add
mov
fdiv
popa
addr16
aad
push
outsb
popa
in
push
push
mov
push
xchg
pop
ret
insb
or
add
xchg
fnstcw
sbb
add
je
inc
adc
sub
and
add
imul
sub
sub
fisttpl
out
dec
pop
and
jae
mov
sbb
pop
pushf
mov
lods
add
jne
cwtl
imul
mov
adc
push
jo
xchg
fcoml
jne
push
movsb
jne
outsl
mov
aad
and
pop
add
sbb
push
mov
fstpt
out
cmp
inc
icebp
jb
cmp
or
jae
adc
ss
outsb
jne
push
ja
xor
pop
inc
inc
push
inc
push
mov
pop
js
lds
and
or
adc
gs
mov
xor
jb
adc
out
popa
daa
mov
pop
shll
sub
sbbl
insl
arpl
insw
xchg
dec
popa
mov
mov
pop
daa
cmp
insl
sub
bound
notb
in
scas
mov
cmp
lods
adc
imul
adc
inc
pop
push
add
mov
inc
pop
mov
arpl
nopl
xlat
cltd
xor
dec
sbb
mov
int
and
dec
fwait
jnp
out
out
mov
out
mov
cmp
adc
add
mov
mov
xor
test
mov
ret
cmp
pop
sub
ret
add
dec
push
push
add
sbb
sqrtps
push
dec
pop
inc
mov
insl
loop
outsl
orl
pop
add
fcompl
pop
add
push
push
cmpsb
or
and
push
cmp
push
add
push
addb
lcall
or
inc
dec
push
dec
sub
sub
popa
inc
dec
bts
or
jmp
jmp
mov
jle
pop
push
jmp
pop
test
cmpsb
aas
cwtl
stc
push
cmp
clc
lea
fwait
add
das
xchg
jmp
sub
sub
clc
fisttpll
rorb
mov
icebp
add
cmc
mov
mov
bound
mov
xor
and
sub
push
mov
mov
jnp
cmp
or
pop
jb
inc
xchg
dec
or
and
stos
and
or
push
test
mov
inc
inc
pop
pushf
ret
stos
daa
jmp
pop
loop
sti
ret
sub
add
fdivrs
dec
in
jnp
add
mov
push
ffreep
cwtl
cmpsb
test
lods
pop
lret
ret
pop
mov
adc
nop
call
outsl
ljmp
inc
aaa
inc
mov
jge
push
loopne
fdivr
mov
mov
lea
mov
repnz
call
mov
cli
jmp
sub
std
shl
xchg
and
mov
or
into
nop
ljmp
push
jge
repnz
cmp
fbld
cltd
pop
inc
inc
test
pushl
xchg
push
add
cmp
jnp
mull
push
cmp
push
sahf
inc
inc
pop
mov
xchg
incl
icebp
cmp
jg
stos
adc
push
int3
push
sbb
mov
xor
mov
in
mov
test
fldenv
rcrl
inc
ljmp
lds
rorl
sub
clc
jne
mov
cmp
pushf
sub
jg
cwtl
xchg
test
aaa
inc
lock
mov
ljmp
outsb
sub
rolb
lahf
mov
mov
mov
inc
inc
data16
les
push
cwtl
or
adc
inc
mov
dec
jmp
sub
add
sar
cmpl
jno
not
mov
icebp
call
shll
pusha
push
add
lods
popf
imul
je
dec
das
inc
pop
jmp
adc
pusha
pop
xchg
std
adc
into
call
cmp
neg
test
mov
out
mov
add
pushf
jmp
pushf
pushf
push
xor
adc
dec
dec
jmp
jl
cld
jmp
add
loop
shl
sub
pushf
test
mov
sub
sub
mov
sbb
pushf
call
shl
mov
out
cmp
stc
pusha
add
push
call
stos
mov
jne
das
cltd
mov
push
or
add
mov
jp
mov
push
pop
or
icebp
test
hlt
out
push
call
adc
pusha
push
daa
cmpsb
sbb
cmp
mov
mull
out
fiadds
push
outsl
adc
jns
in
outsb
cmp
mov
push
mov
mov
rcrb
adc
aas
cs
lret
mov
sahf
push
cmp
or
mov
out
mov
mov
popl
inc
jb
std
and
inc
and
adc
jl
add
outsb
and
daa
fwait
in
adc
pop
ds
adc
sub
jb
faddl
mov
pop
adc
leave
push
sub
adc
dec
sahf
es
jbe
iret
pop
out
cs
aam
stos
ds
adc
popf
fcompl
cmp
or
imulb
add
sbb
jb
std
dec
cmpsb
add
sub
and
std
ficomps
lods
xor
shlb
mov
outsl
xchg
and
xlat
mov
xor
xchg
fistpll
push
inc
pop
jmp
shrb
fidivrs
jecxz
aas
inc
cmpsb
inc
aaa
cmp
mov
mull
mov
lret
sub
fldcw
cmp
out
xor
into
sub
xor
mov
out
mov
adc
pop
jae
xchg
mov
push
mov
pop
fwait
pop
out
mov
aaa
dec
loope
fidivrs
repz
outsl
mov
sub
or
fimuls
arpl
fidivrs
out
inc
pop
arpl
loope
ja
fistpl
addr16
das
xlat
fwait
lock
push
xchg
pop
sbb
adc
cmp
jl
out
or
pop
jle
jo
imul
mov
fisubs
pop
jnp
ret
arpl
fucomi
sub
jg
scas
out
int
jnp
pop
inc
lahf
cmp
lock
pop
pop
inc
lahf
pop
push
outsl
repnz
jns
cmp
xchg
aas
mov
xchg
cmp
dec
ja
out
das
out
push
jae
mov
jnp
scas
cmpsl
call
pop
mov
adc
jecxz
out
das
iret
jae
loope
ficomps
mov
mov
xchg
not
shr
add
enter
sub
fistpll
add
aas
xorl
and
ljmp
jo
cmp
push
mov
test
call
add
fs
into
cmp
out
jp
mov
jp
pop
test
add
aaa
lock
aad
push
clc
data16
jmp
sbbb
pushf
rcl
cmc
mov
lock
add
jmp
mov
push
mov
or
sbb
aad
jno
sub
push
imul
cmp
add
filds
fists
cltd
lret
sub
jmp
seta
ffree
subl
sti
push
call
out
mov
dec
setnp
mov
pop
bswap
pop
jg
rdtsc
xor
ja
popf
mov
cwtl
jmp
or
ja
xor
mov
test
pop
cmc
loop
rcrl
adc
in
and
shr
adcl
pop
orl
mov
aas
inc
lea
std
mov
and
jmp
ljmp
shl
in
outsl
mov
add
shl
cmc
mov
push
mov
jg
pusha
sub
xchg
stc
adc
jl
jmp
rcl
out
mov
sahf
push
jae
ret
jl
and
mov
outsl
inc
stc
test
add
roll
sar
xor
mov
movsb
rolb
mov
and
pusha
stc
pop
pusha
jmp
int
push
cmovs
subl
jmp
pop
jo
ja
enter
sar
loopne
mull
sti
pop
je
pusha
call
jle
push
outsb
ss
dec
mov
popa
or
lock
out
outsb
testl
sub
and
or
jmp
mov
and
push
pusha
pop
mov
mov
pop
xchg
aas
outsb
lea
daa
call
pop
pusha
mov
pushf
push
mov
aas
cmpsl
neg
adc
xor
add
mov
push
inc
negl
mov
add
cmp
jns
add
xor
mov
pop
testl
inc
adc
push
popa
cmp
fistpl
push
inc
rclb
add
ret
lret
xor
sti
mov
pop
or
add
push
xor
int3
or
scas
insl
rcll
dec
mov
pop
iret
and
aas
push
mov
xor
data16
test
mov
push
jmp
dec
rcrb
in
scas
adc
push
push
sbbl
lods
add
xchg
push
or
push
clc
bound
fadd
mov
jno
jmp
stc
dec
push
aas
pop
sub
or
mov
mov
outsl
add
mov
gs
call
stos
loop
data16
movb
test
pop
cwtl
dec
pop
fldl
cmpsb
jp
arpl
adc
pop
dec
int3
pusha
jb
xchg
push
mov
iret
in
and
fs
mov
ja
cwtd
or
ss
jmp
or
lret
push
jmp
test
adc
xor
mov
xor
or
pushf
sbb
sbb
mov
ljmp
mov
divb
and
movsl
icebp
pop
lea
ljmp
clc
clc
not
test
cmp
dec
cld
sbb
cmp
push
loop
push
push
out
push
shlb
pushf
stc
stc
cmc
push
test
adc
std
call
fldz
clc
cmc
add
dec
push
call
mov
sbb
add
sub
push
incb
mov
enter
mov
or
lods
stc
aas
ret
jle
js
cmc
test
dec
fdiv
stc
push
mov
mov
xchg
xchg
push
mov
out
sti
fimull
xlat
outsb
mov
test
pushf
ja
mov
xchg
and
xor
loope
sub
pop
push
in
arpl
std
cmp
and
test
incl
sbb
scas
loope
call
sub
xlat
rorb
ror
push
mov
mov
push
or
sbb
jp
ljmp
std
ljmp
add
sub
enter
lods
iret
or
xor
sub
rcr
or
mov
out
scas
std
pop
or
mov
test
xchg
inc
mov
push
xor
push
push
call
pushf
sub
jecxz
inc
call
inc
hlt
stos
in
popa
xor
sbb
mov
out
mov
and
pop
or
test
or
inc
or
vpunpckhbw
lock
clc
push
mov
sbb
sbb
xchg
ror
loopne
loope
jo
cmovne
xchg
in
sarb
insb
jne
mov
incb
cmp
inc
stos
mov
or
add
insl
shlb
enter
das
cmc
inc
cmpl
jmp
cmpsb
inc
pop
aam
mov
mov
inc
scas
mov
and
fbstp
and
in
imulb
xor
ret
dec
jp
jo
jp
jl
sarb
fsts
sub
pushf
push
add
in
lods
sti
ljmp
xlat
adc
imul
rcr
inc
call
pop
js
push
mov
in
mov
mov
xor
push
in
fisttpl
clc
mov
and
ror
setg
cli
and
or
not
call
sahf
push
or
aas
out
decb
stos
loope
inc
jmp
xrelease
mov
fidivs
mov
pop
push
pusha
push
rorl
xchg
adcl
pop
cmp
dec
sub
adc
out
inc
xchg
or
sbb
dec
int
mov
fsubr
jle
cmp
loopne
call
add
test
rorb
test
add
and
and
add
cli
jmp
or
loop
push
dec
call
dec
mov
ja
or
push
loopne
adc
stc
ds
mov
adcl
movsb
mov
sti
bnd
cmp
idivl
or
mov
jno
cmpsl
and
popa
stos
daa
jg
shll
inc
mov
pushf
out
adc
sbb
fsubrs
cmp
ljmp
cmp
adc
xchg
inc
adc
insb
insl
js
push
push
or
enter
xchg
sub
xchg
sub
dec
in
icebp
loopne
ja
jmp
xor
rol
cmp
cmp
cmpsb
fwait
xor
sbb
add
orl
int3
mov
cld
mov
push
add
call
mov
mov
adc
jae
and
insb
mov
or
cmc
leave
arpl
sarb
or
pushf
stc
sbb
test
mov
push
jmp
jns
mov
outsl
jge
jmp
xlat
lea
jae
xchg
mov
roll
popf
repz
mov
push
mov
lock
scas
loope
les
fiaddl
lret
insb
or
mov
pushf
arpl
aam
cmovnp
mov
int
inc
call
sbb
cmpsl
mov
insl
clc
pop
cwtl
mov
sub
lock
setbe
inc
cwtl
cmp
outsb
push
stc
mov
pop
pusha
pop
sub
pop
mov
mov
sbb
xchg
dec
das
pop
cltd
cmpsb
xchg
outsl
pop
push
ss
mov
push
les
pop
pop
popf
shl
test
adcl
pusha
ljmp
into
xchg
repnz
mov
push
adc
cmpsb
push
adc
adc
dec
stc
or
xchg
sub
xor
sub
lods
test
ror
sar
test
push
into
call
lods
out
aaa
add
shl
call
sarb
inc
xor
sub
xchg
or
pushf
lock
push
mov
push
movsl
fistl
push
or
div
xchg
jmp
dec
lret
jmp
test
jmp
xchg
sbb
testl
sub
call
test
add
cmc
mov
clc
call
mov
xor
push
ja
scas
and
ret
mov
inc
add
or
aad
lds
push
call
or
loopne
leave
adc
sub
add
int
sub
inc
jecxz
icebp
scas
lods
stc
or
insl
int
xchg
push
imul
xor
rorl
pop
popf
mov
inc
jecxz
dec
add
fiaddl
mov
mov
lret
adc
dec
imull
adc
mov
adcb
push
jp
stos
adc
pusha
ljmp
mov
add
push
stc
call
shr
rcrl
push
mov
leave
mov
repnz
es
rcl
push
lret
rcrb
pusha
mov
lret
or
fistpll
std
pop
jmp
jmp
loopne
shl
aaa
fiaddl
jle
leave
jle
movsl
loope
stc
clc
into
aas
in
js
cmpsb
xor
clc
call
push
push
aaa
les
add
fiadds
insb
and
add
adc
daa
jbe
dec
pop
ret
stc
push
repnz
pop
incb
aas
or
shr
sub
push
outsb
mov
pop
cli
and
mov
call
pushf
xchg
addr16
popa
imull
pop
lods
push
jmp
add
rolb
xlat
sub
pop
add
adc
divl
and
add
lods
inc
pop
adc
pop
stc
ja
enter
and
pop
pop
jb
push
xor
mov
mov
in
leave
lcall
sub
cltd
leave
and
ljmp
push
std
adc
mov
call
inc
in
shlb
mov
jle
cmp
cwtl
ret
cmc
jnp
push
xchg
jno
add
inc
sub
inc
mov
or
mov
cli
adc
mov
or
pop
mov
cmpsb
lret
mov
pop
pusha
or
push
popl
pop
fld
cmpsl
jle
lahf
xor
adc
mov
out
sub
lock
inc
cmp
cmp
add
mov
or
test
jb
dec
sub
xor
ficoms
icebp
or
rorb
js
or
push
or
shrb
addb
mov
out
inc
int
aas
fcoml
mov
pushf
movsl
sbb
fucomip
mov
mov
and
lret
shll
sarb
clc
stos
jle
add
mov
bound
stos
sti
sub
pop
jmp
cmpsb
push
and
mov
je
mov
push
sub
mov
gs
xlat
scas
call
jmp
jmp
push
xor
or
jnp
stc
cmpsl
jp
jle
pop
pop
push
js
rcrl
psubsb
movb
ljmp
mov
pop
mov
sbb
jmp
das
mov
aaa
ret
in
xchg
xchg
shll
fidivl
jl
ds
jae
add
les
inc
push
clc
and
clc
cmp
pusha
mov
or
lea
sbb
insb
lret
jbe
rol
ror
sarl
mov
pop
lret
cmc
xchg
shrb
sbb
ja
loope
iret
push
mov
fisttpl
push
cli
call
jmp
ljmp
call
outsl
mov
icebp
sbb
pushf
xor
test
mov
xchg
dec
loopne
popa
pop
inc
in
sbb
or
ja
imul
mov
sar
sub
jmp
inc
repnz
enter
dec
in
loopne
cmp
inc
fldl
jno
int
inc
or
adcb
jo
inc
mov
inc
or
push
lea
nop
xchg
push
cmp
scas
popa
dec
lods
push
push
push
neg
cmp
jne
jge
fiaddl
inc
adc
xchg
jmp
xor
dec
and
xor
inc
add
xlat
xchg
or
std
call
roll
int3
testl
scas
sub
aad
les
mov
jmp
movb
sub
add
xor
cmp
stos
pushf
jne
in
clc
xlat
iret
add
aaa
jmp
mov
fldl
sbb
pop
pop
cltd
sbb
rolb
cmp
mov
add
mov
or
sub
xchg
xor
push
dec
adc
inc
and
dec
mov
and
aas
pushf
push
and
shl
mov
xor
lods
outsb
jp
xchg
stc
ds
cmp
pop
push
cld
popa
push
push
stc
push
fistl
test
pushf
popf
enter
mov
hlt
out
mov
int3
es
xchg
mov
sbb
jb
out
adc
or
adc
or
shll
negb
fiadds
aas
icebp
ret
sti
inc
xor
fmuls
test
and
or
xor
mov
shlb
xchg
sub
push
mov
or
fs
loope
push
cmp
dec
es
rcrl
adc
je
fwait
sub
xor
mov
or
in
sahf
add
std
pop
push
mov
ds
test
mov
call
push
sub
loopne
cwtl
jmp
push
cmp
fsubrl
inc
int3
bound
push
mov
xor
pop
push
jle
test
nop
std
adc
mov
icebp
add
jmp
mulb
shlb
jge
movsl
clc
fsubrs
scas
fldenv
stc
xchg
cmp
sub
incb
jg
aam
mov
or
jo
cmc
stc
stc
callw
repz
arpl
stos
sbb
repz
jmp
lods
aam
sub
cmp
adc
jmp
cmpb
push
ljmp
push
pop
je
pushf
cmp
out
clc
popa
or
out
call
mov
fisttps
cmc
ret
int3
jne
fsubs
test
cmc
ljmp
enter
jae
add
mov
cli
fidivrl
push
fimuls
lret
test
add
cltd
add
jne
lahf
sbb
clc
mov
push
negl
ss
mov
std
sbb
test
cmc
xor
mov
aaa
jnp
add
clc
push
sbbb
sti
stos
pop
push
int
pop
jo
jmp
idiv
test
dec
rorb
mov
cmpsb
push
loop
adc
jno
jecxz
pop
push
jmp
mov
push
in
cli
out
insb
popa
dec
es
push
adc
push
cmp
jmp
jo
xbegin
cs
cli
mov
add
sbb
out
jge
adc
std
dec
mov
sbb
xchg
pop
pop
fadd
mov
call
sbb
out
and
and
movb
outsl
fwait
rclb
push
pop
into
push
add
mov
call
test
nop
dec
pop
orl
popa
adc
std
xor
push
pop
rorb
clc
xor
in
lea
jmp
stc
cmp
push
mov
and
push
jnp
ret
mov
leave
inc
mov
xchg
add
out
sub
or
add
cmp
pop
lret
sbb
das
jmp
call
call
fdivl
pop
jb
push
aas
pop
clc
push
pop
stc
dec
cmp
cmp
int
pop
test
dec
jnp
fistl
push
sub
call
adc
shr
aam
mov
xchg
mov
pop
mov
pop
jae
movsb
push
cmpsb
pop
lock
iret
inc
movsl
ds
scas
add
aam
mov
push
push
and
jl
icebp
cli
stos
lcall
mov
call
or
add
lods
ret
icebp
enter
and
fidivs
mov
out
cmc
cmp
cmc
jmp
aam
mov
add
xchg
js
stos
subl
push
ret
mov
mov
xlat
aas
jae
jmp
lret
sub
mov
xor
mov
call
push
test
pop
xchg
jne
push
pushf
stc
mov
aaa
repnz
lds
icebp
rorl
outsl
stos
or
add
or
add
jl
cwtl
add
mov
mov
cmp
cli
lahf
call
add
mov
jbe
loope
jl
int3
mov
xchg
outsl
add
lea
add
faddp
negl
xchg
mov
mov
rcl
dec
outsl
nop
loope
sbb
movsb
ficompl
xor
mov
push
cmc
fistpll
xor
repnz
fwait
cmpb
mov
or
lret
aad
aad
and
jg
mov
fadd
jbe
arpl
sub
push
xchg
xor
adc
cmp
movsl
jle
test
stc
daa
push
xchg
adc
and
mov
pop
xchg
sub
aas
xor
push
dec
clc
or
jbe
scas
pop
aas
cmp
push
xor
push
jmp
lock
int3
out
nop
je
xchg
push
jmp
mov
cmp
push
hlt
push
dec
add
not
daa
inc
cli
push
jmp
hlt
test
push
pushf
scas
mov
stos
loopne
je
adc
push
push
out
lock
pop
cmp
enter
xor
daa
inc
call
xchg
cmpsb
les
out
pop
out
imul
mov
jb
push
stos
mov
push
inc
push
call
cld
enter
cmp
add
pop
jp
mov
push
popf
inc
and
frstor
aad
imul
fistl
and
mov
cmpsb
dec
outsl
retw
outsl
push
push
std
jg
dec
divl
cld
decl
mov
aas
dec
jmp
pushf
sti
ret
pushf
push
std
fildll
frstor
xchg
sbb
xchg
mov
jne
in
decl
cwtl
jns
add
popa
test
pop
mov
stc
and
ret
inc
or
int
mov
lea
cmp
hlt
mov
dec
add
enter
in
push
dec
mov
mov
out
cmpl
mov
je
bnd
mov
inc
mov
mov
pop
or
mov
outsl
icebp
sub
pop
push
in
push
adc
and
shrb
mov
sahf
popa
in
je
inc
add
shll
pushw
xchg
sbb
xor
stc
cmp
inc
pusha
cs
stc
lahf
fwait
data16
out
sbb
sub
sar
scas
jmp
pop
mov
jmp
in
stos
jbe
ljmp
mov
fnop
das
xchg
daa
mov
jg
xchg
mov
jmp
sub
mov
sbb
dec
cmp
inc
test
push
dec
xchg
jmp
repnz
jl
out
hlt
sti
and
jbe
cmpl
mov
adc
or
pusha
cmpb
or
loop,pn
mov
adc
dec
pushf
jnp
and
das
and
insb
adc
xor
inc
call
cmp
jns
sahf
adc
int3
stc
cli
lcall
stos
pop
adc
jmp
insl
sti
insb
jmp
mov
inc
leave
sbb
xchg
loope
cli
out
jg
and
push
mov
fistps
inc
xchg
ljmp
mov
pop
mov
cmp
stos
push
push
inc
cmp
scas
popf
aaa
add
cmp
ret
decl
inc
mov
cmp
cmp
and
nopl
stos
idiv
outsl
add
mov
sbb
adc
movsb
adc
jg
push
leave
fmuls
cld
fst
xor
pop
jno
cs
dec
sub
mov
inc
inc
ljmp
add
aad
mov
or
cmp
ja
xchg
jnp
mov
fs
mov
mov
not
lods
shll
popf
sbbl
out
add
outsl
cmp
popa
jmp
pusha
or
ja
icebp
jle
out
jb
push
xlat
bound
decl
push
daa
and
cli
mov
inc
sbb
data16
pop
cmp
jg
adc
imul
lcall
lock
mov
ljmp
ja
jle
mov
rorb
xor
jle
pop
adc
mov
push
ja
jg
sbb
fisubs
jmp
notl
jg
repz
jle
icebp
loope
hlt
cmc
popa
jae
or
dec
dec
loope
jle
mov
test
inc
mov
or
xlat
cmpsl
js
sub
icebp
dec
insl
cmc
jne
lahf
call
ja
loope
mov
and
sbb
scas
lret
pop
dec
daa
xchg
push
pop
ljmp
inc
xchg
xor
cltd
and
test
mov
xor
mov
push
xchg
mov
bound
or
sbb
jp
shl
sbb
test
mov
ja
das
dec
gs
addr16
lcall
pop
jmp
mov
aas
pop
xchg
pop
enter
fxtract
jp
mov
ljmp
push
mov
cmc
out
inc
fmuls
repnz
mov
aaa
pop
ja
js
sbb
arpl
int3
andb
add
lcall
xor
xchg
pop
rcrl
cmp
add
mov
pop
or
mov
cmc
paddd
sub
push
add
out
mov
mov
movsb
cmp
jg
mov
clc
inc
push
ret
int3
dec
mov
mov
je
jl
rclb
popa
scas
fistpl
sbb
sarb
sti
pushl
pop
jp
mov
fst
sahf
mov
lcall
lret
fimuls
out
incl
stc
sahf
mov
mov
movsl
jle
loopne
cld
shl
xchg
rclb
xor
mov
lock
xor
fstpt
mov
mov
xchg
or
mov
mov
ret
add
mov
push
dec
pop
pop
imul
out
lret
ret
mov
ljmp
lret
push
mov
inc
mov
je
shrb
mov
xchg
outsl
call
xchg
repz
fwait
test
outsb
gs
cmp
ljmp
push
jns
data16
out
push
call
bound
or
push
add
lds
sbb
mov
scas
popa
pop
das
pushf
decl
dec
loop
and
adc
mov
jp
and
dec
dec
arpl
ret
push
sbb
lea
incb
sbbl
adc
fistps
push
ja
mov
fbstp
dec
popfw
lock
cwtl
cmp
xor
stos
addb
fstpl
test
je
nop
mov
call
mov
jp
inc
inc
or
movsl
cmp
mov
iret
fs
jns
pop
test
call
xchg
add
loop
cmpsl
add
lock
cli
lcall
cld
or
cs
or
mov
jno
mov
sbb
and
xchg
add
mov
bound
lcall
daa
andb
gs
es
mov
test
mov
ljmp
inc
je
mov
adc
mov
bound
jne
mov
outsb
push
ss
cmp
fdivs
lret
push
jbe
lcall
pop
jmp
outsl
stc
sbb
ljmp
test
push
pop
mov
mov
insb
xor
inc
mov
push
sub
fnsave
and
scas
dec
int3
adc
popa
mov
and
cmpsl
cs
add
stos
inc
aad
fidivs
mov
ljmp
lcall
inc
cmp
add
sbb
and
fs
xor
std
lcall
popf
jns
jg
pusha
or
sbb
test
push
add
lret
fimull
in
mov
or
cmp
dec
in
scas
mov
xchg
or
jle
loope
mov
sub
rolb
cmp
xchg
jae
pop
sti
xchg
pop
mov
mov
imul
mov
imulb
cld
xchg
xlat
add
fdivr
xchg
add
adc
ret
fs
call
or
sbbb
sub
loop
mov
xor
xor
mov
inc
inc
out
sub
iret
flds
inc
pop
xchg
addr16
scas
fucomp
fdiv
mov
jg
sub
jl
or
mov
jbe
sub
sub
int
cmc
call
in
xor
sahf
mov
dec
mov
push
push
flds
dec
jmp
xchg
rcll
cmp
mov
in
xchg
mov
popa
aad
lret
nop
insb
rol
cmp
and
sahf
fldt
call
xchg
jmp
arpl
dec
out
jg
fistpll
mov
out
lret
lret
mov
and
in
adc
ret
jp
mov
adc
pop
xchg
enter
loop
ljmp
imul
xor
out
insl
jmp
jg
lods
pop
dec
je
pop
outsl
jnp
ret
sbb
mov
nop
imul
inc
jno
adc
das
add
cwtl
add
jle
scas
sbb
sahf
lock
rolb
and
pushl
dec
ret
addr16
jne
add
aas
ret
fwait
movsl
or
push
stc
mov
shrb
ret
sub
mov
cs
jmp
in
insl
cmp
xchg
test
mull
mulps
aam
adc
imul
mov
js
ja
stos
shrb
jb
mov
jge
decl
mov
lods
aas
or
lcall
or
mov
mov
in
repz
push
stos
mov
and
mov
imul
pop
addr16
subl
stc
or
ja
loop
pop
or
push
xlat
or
mov
jmp
sahf
add
jo
fstps
popf
pushf
shrb
jl
das
in
mov
lods
sbb
aam
in
sbb
or
hlt
pushf
dec
xlat
and
sub
lods
push
loopne
les
push
pop
xor
pop
jg
addr16
in
push
cmp
decl
push
fsubrp
jg
jns
lods
sub
lds
sbb
fisttpll
push
cmpsb
mov
leave
ljmp
push
js
aaa
inc
jb
rorl
dec
jmp
je
mov
bound
js
arpl
mov
pop
orb
add
push
mov
lock
clc
cmp
dec
dec
std
lcall
xchg
mov
dec
or
incl
loope
out
cs
ret
sub
or
mov
rcl
lahf
jns
mov
loope
std
cmpsl
ret
mov
sbb
push
sbb
ficoms
arpl
lret
lahf
adc
incl
mov
jg
es
sete
incl
out
subl
imul
add
dec
adc
call
enter
mov
loop
inc
push
sbb
jg
imul
add
cmpl
hlt
jmp
pop
cli
out
lea
jl
subb
cmp
jmp
xchg
mov
std
addl
sahf
add
xchg
seta
dec
std
pop
mov
push
mov
pop
mov
push
xor
xchg
notb
sbb
in
sbb
ud0
pushl
ret
dec
popf
xchg
hlt
rolb
jns
xchg
inc
push
or
js
inc
xchg
fdiv
stos
dec
hlt
jno
ljmp
flds
push
pop
lret
sbb
xor
dec
ds
insl
sbb
icebp
push
jg
aam
bound
sbb
pop
jmp
jg
call
scas
sub
and
pop
mov
ret
fdiv
sub
fwait
push
pusha
in
outsl
and
jecxz
sar
jmp
sub
mov
adc
fcmovnb
ljmp
cmp
lds
lret
xor
adc
mov
jg
call
dec
notb
jecxz
inc
push
outsl
in
shr
orl
rorl
cmc
call
mov
test
fadds
push
call
xchg
jmp
nop
sub
sarl
push
mov
inc
fwait
cmp
incl
std
scas
push
dec
pusha
rcl
scas
mov
adc
shll
std
mov
call
cmpsl
jbe
pop
mov
in
jmp
sub
cli
stos
mov
je
add
mov
arpl
jb
shll
inc
out
mov
sbb
sbb
out
incl
xlat
cld
sub
pop
lock
jp
xor
dec
out
and
jns
cld
xchg
sbb
or
push
aaa
mov
test
ret
mov
ljmp
mov
cmp
aad
cli
jp
mov
or
push
and
sub
adc
in
outsl
movsb
push
jg
push
jmp
test
loope
hlt
xchg
mov
sti
decl
sbb
xchg
es
adc
jl
adc
int
push
jmp
mov
cltd
jp
inc
push
cli
add
mov
ret
pop
frstor
ljmp
jecxz
int
psubb
cmp
int3
dec
stc
leave
data16
jg
and
popf
xor
test
mov
push
pop
mov
repnz
ljmp
adc
jne
or
cmpsb
mov
cmpsl
js
loopne
xchg
test
lea
jmp
mov
mov
xor
adc
js
lock
push
mov
cmp
xchg
testw
in
fsubrs
mov
add
dec
sbb
add
pop
std
pushl
mov
insb
in
das
push
bound
and
xchg
mov
dec
sbb
or
out
fidivs
add
aaa
pop
ss
loopne
pop
push
sub
leave
sub
iret
fstpt
vpxor
gs
aaa
dec
in
loop
call
jecxz
daa
dec
aaa
lcall
cwtl
mov
sbb
mov
ljmp
cmp
push
push
jl
sbb
mov
mov
in
das
fadd
and
daa
rclb
and
addb
lds
jecxz
cmc
ja
out
push
and
or
mov
lret
inc
jge
or
mov
jmp
mov
xchg
cmp
cli
jp
daa
dec
sahf
sahf
mov
adc
dec
movsl
loopne
rclb
jmp
leave
jo
test
scas
sub
jno
decl
leave
sbb
popf
mov
push
push
mov
push
and
ljmp
sbb
std
rorl
lea
fwait
call
sbb
dec
jo
mov
sub
inc
iret
fstl
pushf
lds
mov
divl
call
outsl
adc
pusha
push
in
mov
lahf
sbb
or
scas
mov
ljmp
inc
mov
stos
sahf
push
sub
mov
adc
xor
mov
in
lcall
inc
dec
out
idivb
jnp
mov
and
rorb
sbb
dec
jg
ret
sbb
mov
not
pop
mov
add
ret
ret
push
mov
push
jg
dec
sub
add
js
aaa
fidivrs
test
aam
push
enter
cld
cli
jo
dec
repnz
popa
test
repz
movsl
or
xchg
mov
inc
mov
push
jo
test
stos
mov
repnz
push
rorl
fildll
subb
mov
cli
cmp
in
jg
in
int
push
call
xchg
leave
popf
jmp
popf
inc
enter
adc
sub
sub
ljmp
mov
das
jmp
lea
push
jne
mov
not
dec
dec
outsl
cld
dec
les
push
cmc
cmp
cmp
cs
or
jg
mov
in
fldl
in
sbb
je
loop
mov
pop
dec
push
movsb
push
push
sub
push
incl
mov
xor
push
sub
xor
decl
std
xchg
push
cwtl
and
or
in
lods
add
jb
rcll
out
mov
xchg
lea
addr16
jnp
and
fmul
wbinvd
lods
push
or
rcrl
xlat
aas
cld
jno
pop
in
jb
fisttpll
lret
inc
pop
push
addr16
mov
jb
sub
mov
adc
adc
or
xor
imul
inc
dec
cld
decl
dec
add
stos
enter
dec
pop
pop
aaa
andl
sbb
xchg
mov
aaa
cli
iret
cmp
add
push
int3
mov
mov
std
push
xchg
dec
jbe
or
sbb
in
cmp
cs
xchg
psllw
lods
jno
outsl
cmp
cmp
ss
out
or
sti
insb
cwtl
mov
sbb
and
push
pusha
addr16
sub
das
lock
jb
int
mov
outsl
mov
dec
or
neg
cmp
mov
push
shlb
mov
xchg
jp
ret
mov
mov
cmpsl
cmp
jne
pop
mov
dec
shrl
pop
xor
leave
jne
mov
cli
pushl
ljmp
inc
sbb
idiv
mov
cwtl
adc
iret
jge
inc
sarl
pop
or
fstps
ljmp
cmp
imulb
iret
ljmp
sbb
mov
sbb
cmp
sbb
shll
lcall
inc
cs
sub
fisubrl
jg
dec
mov
or
enter
call
std
das
out
or
or
fsubs
frstor
inc
mov
pushf
divl
push
cmp
popa
repz
cld
lcall
or
xor
imul
fdivrs
add
lcall
or
loopne
jmp
fidivl
or
push
dec
sbb
hlt
xchg
jle
arpl
xchg
lea
dec
int3
mov
mov
push
pusha
xchg
icebp
push
add
outsb
mov
mov
mov
xorb
sub
mov
mov
nop
fdivrl
fdivs
cltd
xchg
jg
mov
outsl
mov
fwait
inc
lahf
out
das
dec
dec
jne
inc
in
ret
in
loopne
sub
ljmp
mov
xchg
cwtl
adc
cmpsb
and
pop
pop
sbb
out
dec
aad
jg
mov
dec
outsb
add
dec
int
shll
jg
clc
fwait
in
pushl
cmp
sti
in
outsb
push
lds
pop
xchg
shll
test
ficoml
ficompl
or
ljmp
mov
jmp
pop
cmp
fwait
pusha
in
movsl
mov
aas
lods
test
cmc
push
clc
decl
add
insb
pusha
jb
mov
xor
lods
xor
mov
insl
scas
add
push
cmp
and
out
loope
out
mov
jge
dec
cmp
ljmp
push
xor
dec
push
pushf
fwait
popa
jns
mov
ja
jmp
lods
inc
xor
push
sbb
adc
mov
jp
or
popl
jmp
cmpsb
inc
mov
add
movl
push
lcall
inc
pop
mov
jnp
pop
insl
scas
idivl
dec
cmp
mov
jecxz
inc
jecxz
repz
jp
pop
std
jmp
mov
mov
ds
orl
cmp
inc
jbe
jne
and
js
jp
mov
scas
sub
loop
out
movsl
xchg
pop
mov
pop
sub
rol
or
and
jb
mov
sbbb
incl
shll
mov
arpl
pop
inc
cmp
mov
pushf
push
lahf
jnp
or
int
pop
sub
jg
sub
roll
stc
cmpsl
adc
jae
das
out
clc
in
mov
loop
loope
cmpsb
mov
pop
jp
or
mov
cmp
or
lods
insb
dec
push
out
pop
scas
dec
bound
lds
jnp
out
jg
push
dec
adc
sahf
lahf
jg
jg
lea
xor
nop
push
sub
xchg
sub
jb
notl
aaa
jg
xchg
ljmp
std
adc
testb
cmpsl
cwtl
mov
pop
xor
aaa
pushl
cwtl
movsb
mov
cs
addr16
clc
adc
test
das
xchg
imull
hlt
or
popf
xchg
sub
mov
mov
sbbb
jle
cmp
iret
pop
dec
sti
sahf
in
mov
cld
outsb
mov
mov
and
ja
int
lcall
sbb
lods
enter
push
ljmp
or
lock
cld
aad
jl
rol
dec
xchg
jle
sahf
mov
sar
incl
fsubl
fisttpll
and
sahf
jb
mov
call
ret
outsb
push
xor
sar
incl
int3
hlt
mov
dec
or
mov
cmpsl
xchg
insb
jp
add
outsl
mov
push
mov
in
xchg
pusha
add
fwait
ljmp
lods
dec
mov
fwait
adc
add
jo
fcomps
ljmp
notb
jg
cmp
adc
xlat
jl
and
js
aaa
or
filds
jbe
imul
lods
sarb
add
std
fisubrl
pop
movsl
or
xchg
inc
xor
sub
pop
out
out
jnp
mov
ljmp
and
and
mov
aad
sbb
lods
stc
cmp
out
out
dec
ret
xchg
imul
lock
push
inc
setbe
jle
ds
xlat
shrl
das
call
mov
sub
fwait
jne
push
jnp
fwait
sub
fistpll
mov
mov
into
jle
shll
popf
stos
in
loop
ja
sbb
and
es
hlt
inc
jg
push
hlt
inc
xor
dec
hlt
cmc
stos
sub
add
loopne
movsb
dec
fbstp
cmp
xchg
lcall
std
push
int
pop
ja
shll
cmp
das
adc
cmpsl
std
xchg
mov
je
and
xchg
pand
sub
or
sbb
push
add
and
je
cmp
pop
lcall
imul
cmp
enter
stc
test
adc
sar
inc
pop
ljmp
cmp
pop
cli
std
imull
std
in
lret
or
rol
pusha
mov
fists
mov
jp
push
adcb
leave
aaa
sti
into
dec
into
jae
cli
out
mov
out
adc
push
push
mov
push
dec
int3
arpl
add
stc
pop
out
and
lcall
inc
push
inc
jg
in
inc
xchg
jmp
and
es
mov
das
lock
xchg
cmp
jge
insl
push
lods
pop
or
jmp
inc
dec
pushf
sub
xchg
mov
data16
push
and
push
insl
inc
jb
jnp
fldl
pop
push
sub
iret
xchg
icebp
push
and
rcrb
cmp
jmp
sub
notb
or
adc
into
cmpsb
cld
xor
push
outsb
lcall
mov
cmc
in
dec
push
pusha
mulb
loop
cmp
xlat
pop
add
mov
jg
dec
outsb
push
push
arpl
lahf
xchg
es
hlt
jnp
mov
fucomi
popf
push
pop
pusha
inc
lcall
or
pop
pop
adc
mov
pop
int3
sbb
mov
push
xor
sbb
inc
xor
sub
loopne
cmp
test
hlt
loopne
add
popf
popa
sbb
decl
dec
pop
mov
mov
stc
sub
xor
xor
das
jg
inc
push
clc
hlt
ja
test
mov
imul
test
subb
lret
cltd
daa
push
mov
jmp
mov
testl
pop
movsl
sub
leave
cmp
mov
sub
fs
mov
xchg
jg
pop
dec
inc
sbb
aaa
pop
ja
add
jne
mov
hlt
mov
inc
fisttps
mov
std
jb
xlat
xchg
cmp
pop
cli
or
cs
cmc
pushl
inc
mov
jmp
pop
mov
test
call
jns
out
loopne
aad
pop
fcompl
mov
out
inc
lcall
or
add
pop
mov
inc
out
push
ds
sarl
pop
dec
fnsave
icebp
pop
jae
cmc
ljmp
das
cld
jns
sub
filds
int3
mov
cmp
push
dec
cs
push
jb
sbb
scas
pop
scas
add
test
repz
jns
imul
mov
xor
adc
mov
ljmp
fmul
cwtl
mov
mov
mov
inc
adc
lods
test
dec
push
adc
out
jmp
test
xchg
ror
dec
call
inc
andl
ss
movsb
or
into
pop
cmp
scas
mov
into
jnp
mov
aam
and
popa
adc
xchg
cmp
jg
mov
cmpsl
es
cmp
lret
jg
jmp
sub
cli
mov
sub
arpl
stos
aas
and
push
mov
std
mov
push
scas
sbb
or
or
mov
cmp
cld
sub
jo
fidivrs
fistpl
cwtl
pop
pop
push
lret
arpl
incb
pusha
outsl
mov
mov
mov
out
inc
pusha
call
push
jg
loope
jno
mov
call
fsubrl
hlt
xorb
das
test
push
ss
add
incl
cmpsl
sub
push
adc
pop
imul
dec
xor
rcll
and
pop
push
mov
decl
in
addr16
inc
dec
mov
pushl
shrl
dec
test
sbb
xchg
pop
fisttps
cmp
les
jmp
xlat
sahf
dec
mov
xchg
out
mov
lock
mov
ja
jo
outsl
icebp
das
cmc
pusha
mov
or
jnp
pop
fstpt
cmc
or
lods
pop
xor
jno
test
push
xchg
xchg
sub
pushl
shll
adc
mov
je
ja
and
and
dec
push
sbb
mov
mov
mov
lcall
add
ret
jne
sub
pusha
xor
mov
imul
push
mov
mov
mov
iret
cmpsb
fstl
add
std
inc
xor
movsl
jb
and
outsb
out
ljmp
mov
mov
dec
aam
das
lods
add
outsl
jno
mov
xor
cltd
inc
hlt
mov
shrb
mov
scas
cld
cmp
fwait
rolb
mov
loopne
push
lcall
xchg
sub
cld
decl
adc
ss
jb
dec
in
mov
ud0
jg
std
jbe
xor
out
and
std
adc
leave
out
outsb
arpl
out
sti
ljmp
fistpl
xor
repnz
sbb
fdivl
shlb
in
adc
xchg
ljmp
icebp
pushl
scas
lahf
dec
dec
dec
ljmp
cs
push
push
cmp
rol
call
mov
inc
push
cmpsl
adc
mov
mov
mov
mov
ljmp
xchg
cmc
call
test
mov
loop
mov
sub
add
jmp
pushl
push
movsl
adc
or
addr16
mov
jno
movsb
icebp
sub
rclb
dec
adc
shrb
lock
jne
xchg
imul
lds
inc
pop
in
pop
cmp
mov
cwtl
dec
iret
push
pop
and
adc
sub
iret
sbb
xlat
and
adc
lret
cmp
loopne
inc
pusha
jge
add
mov
shl
iret
mov
call
add
push
mov
dec
add
or
xchg
aaa
ret
cli
mov
and
push
mov
jl
in
xchg
stos
gs
jecxz
es
ljmp
icebp
cmp
jecxz
insb
mov
or
and
out
or
and
std
or
jle
add
or
cmp
in
stos
pop
or
sbb
mov
pop
add
in
outsl
push
jmp
sub
mov
inc
mov
std
popf
cmp
outsl
icebp
mov
sbb
into
xchg
hlt
cs
and
and
xchg
cli
pushl
mov
out
rol
lods
iret
cltd
push
lods
pop
aas
addr16
jmp
mov
add
sub
mov
and
outsl
cmp
add
mov
push
cld
sbb
pop
adc
stc
pop
adc
mov
cmp
ja
add
jb
fidivrl
inc
daa
stos
loope,pn
insb
movsb
fwait
lods
adcb
dec
cld
and
repz
dec
mov
mov
fcmovbe
scas
adcl
aaa
and
mov
dec
mov
mov
push
imul
lcall
or
das
hlt
mov
scas
test
or
sahf
mov
pop
fildl
jle
xchg
xchg
mov
fucomi
or
out
call
pushl
rolb
popa
shrl
dec
inc
iret
shll
dec
notb
shrb
std
ljmp
pop
jmp
fs
jno
dec
xchg
and
lcall
aam
aad
sti
sbb
cs
add
into
jmp
les
fcompl
mov
mov
popf
sbb
imul
nop
sbb
out
cmp
cld
xchg
sub
jns
icebp
mov
sbb
rol
push
loop
mov
xchg
loop
jbe
lea
pop
sub
xchg
inc
pop
or
sub
outsl
pusha
jle
jg
test
dec
sub
sub
dec
cmp
cmp
cld
lods
clc
inc
dec
dec
pop
mov
mov
decl
xor
fisttpl
xchg
and
mov
out
fs
out
clc
decl
ret
pop
movsb
lcall
xchg
popl
je
mov
add
loopne
notb
mov
push
mov
fwait
sbb
pushl
clc
lcall
mov
adc
inc
lds
add
pop
and
in
jbe
xchg
sti
leave
fidivs
and
pop
les
popf
sahf
sbb
call
imul
rorb
cmpsb
xchg
fwait
lahf
fstps
and
pushl
jecxz
sbb
fndisi(8087
inc
bound
and
jb
pop
xchg
les
nop
mov
aaa
clc
jmp
mov
cld
add
xchg
inc
insb
negl
push
or
pop
push
stc
jp
mov
mov
mov
adc
push
cmp
loopne
xchg
mov
loope
icebp
out
push
xchg
adc
sti
outsl
nop
adc
ljmp
mov
fnstsw
inc
outsl
inc
mov
mov
ret
mov
int3
mov
push
call
daa
ror
fistpll
outsb
icebp
hlt
ret
xchg
mov
ss
ret
stos
daa
or
ljmp
jg
push
ret
mov
inc
lea
push
dec
int3
mov
imul
gs
adc
mov
outsl
mov
lods
xchg
into
stos
pop
pop
mov
dec
ja
jmp
adc
xor
inc
lods
xor
rcrb
cmpsl
cmp
jg
sbbl
or
mov
scas
xchg
push
clc
xchg
mov
int
dec
mov
setl
decl
mov
in
in
dec
std
lcall
mov
pop
xchg
dec
xchg
lea
cli
call
loopne,pn
mov
jmp
and
jae
cwtl
jns
fistpll
call
js
ret
out
loop
ds
daa
inc
lret
aaa
sarl
aas
aad
jl
jbe
mov
stos
pusha
jmp
mov
or
adc
clc
outsl
cld
mov
adc
jne
mov
bound
fidivrl
test
test
dec
dec
push
pushl
out
jbe
mov
aas
daa
enter
cwtl
push
cmp
test
std
or
fabs
jl
xlat
xchg
xchg
jmp
mov
mov
ja
sarb
and
sbb
movsl
or
aas
cmp
repz
jg
jmp
or
inc
jge
jae
data16
inc
pop
ret
stc
pop
cld
call
add
rorl
sti
jae
mov
and
or
rol
adc
dec
lcall
pop
lock
call
xor
fsubr
jge
cld
into
jmp
imul
cmp
pop
or
xor
repz
das
cld
ljmp
pop
or
push
push
in
ja
cli
sub
mov
inc
xor
mov
inc
js
hlt
inc
pop
int
ja
mov
push
add
int3
addr16
mov
dec
push
bound
testb
loopne
and
stos
in
sub
ljmp
jmp
aam
in
loope
push
fisubs
cld
outsb
notb
xchg
cmp
insl
cmp
call
dec
or
lret
xor
push
xlat
mov
ret
xchg
out
add
cli
mov
inc
mov
mov
cmp
jmp
adc
adc
das
mov
pop
rorl
mov
jbe
lret
push
aaa
jmp
into
add
sbb
mov
jl
pop
idiv
dec
xorl
aam
xchg
mov
jp
xlat
ret
nop
mov
jl
stos
cs
loop
ja
test
push
mov
icebp
pop
pop
outsl
jbe
outsl
ret
adc
xchg
jnp
dec
pushl
and
jns
xor
nop
pop
mov
jns
aaa
mov
decl
or
aam
adc
rcrl
insb
repz
incl
mov
pop
push
das
lea
test
pop
jge
ja
test
fdivl
push
insb
push
mov
or
jmp
cld
in
jmp
mov
and
dec
xchg
shll
cmp
xlat
mov
pop
jp
popa
int
xor
or
repz
push
pop
jnp
stos
inc
fwait
pop
mov
mov
jecxz
mov
sbb
inc
call
jnp
adc
ja
outsb
xor
fadd
mov
cmpsl
movsl
sub
dec
jl,pn
pop
loopne
ds
sub
fists
js
les
or
pop
decb
les
inc
in
imul
pop
jns
imul
push
push
sahf
int3
jle
jg
inc
movsb
loopne
sub
imul
nop
pop
push
out
dec
test
push
out
cmpsb
xchg
sti
movups
aam
enter
inc
ljmp
sbb
sbb
inc
sbb
cld
fldt
ror
mov
scas
ja
outsl
cld
decl
in
jge
cltd
cmp
and
jne
push
xlat
hlt
call
fwait
cltd
scas
mov
sub
lods
enter
pop
xchg
jg
ljmp
or
cld
out
mov
push
jns,pt
lret
cmc
fnstsw
inc
hlt
xchg
call
xor
mov
sbb
rcrl
fidivs
aad
jno
push
adc
ret
mov
sbb
mov
leave
mov
xchg
sar
jl
lock
xor
pop
arpl
pusha
mov
mov
ret
test
mov
mov
cmp
mov
les
bound
cmp
aaa
sub
popa
sarl
decl
mov
sbb
mov
cmp
cmc
mov
jl
push
push
lcall
idiv
jbe
roll
push
insl
ja
addr16
add
jl
pop
mov
xchg
mov
inc
sbb
pop
loope
jle
or
negb
cmp
fs
test
cli
pop
div
inc
mov
jle
push
repnz
call
jmp
mov
stc
andb
or
lods
icebp
pushl
mov
cmpsb
int
loop
out
push
or
and
int3
pop
mov
mov
cli
imul
stos
ss
in
add
push
pop
sub
lcall
in
sbb
jno
scas
jmp
or
ds
jg
inc
shl
jae
mov
loope
mov
mov
adc
lods
rcrl
in
ljmp
ss
push
lock
inc
inc
pop
or
jp
iret
movsb
addr16
ljmp
mov
cmc
shrl
add
repnz
sbb
and
fstpt
fwait
inc
pushl
xchg
push
rorl
insl
xor
movsb
xchg
sub
hlt
outsl
mov
fldl
inc
mov
push
mov
push
inc
mov
in
dec
or
pushl
gs
fs
in
adc
js
repz
fmuls
ljmp
out
test
outsl
jle
inc
lret
mov
jmp
xor
xlat
xor
movsb
jg
and
decb
into
or
fdivrs
cmp
pop
js
rorl
xor
inc
cmpsl
dec
inc
adc
insb
arpl
lret
jbe
add
aas
mov
icebp
ffreep
loop
xchg
imul
loope
or
sbb
loopne
scas
push
int
pushf
jmp
es
jo
iret
icebp
add
xchg
fistps
mov
inc
mov
leave
pop
cmp
mov
xor
xchg
cmpsb
stc
std
fdivrl
xchg
jnp
mov
push
pop
pop
inc
and
add
into
imul
lea
xchg
mov
clc
sub
mov
xor
dec
adc
lock
movsl
dec
or
adcl
push
add
fwait
push
cmp
mov
loop
in
ret
mov
aaa
fstpl
xor
fbstp
dec
sar
mov
leave
mov
rolb
enter
xchg
push
lcall
pop
insb
data16
fnstsw
inc
inc
je
jno
ret
fisttpl
mov
xchg
clc
out
dec
in
xchg
inc
xchg
xchg
mov
test
ret
data16
cli
inc
test
jo
pop
jl
and
jle
ds
decl
addr16
xor
adc
dec
fwait
nop
or
xchg
or
ljmp
fs
bound
mov
shlb
xlat
mov
ret
lahf
mov
xor
mov
out
jmp
dec
fs
leave
mov
push
rclb
clc
jg
mov
ss
jp
push
sub
ret
mov
lods
cld
ljmp
cmc
dec
cmp
push
mov
jmp
fs
lcall
out
icebp
iret
cwtl
push
insb
bound
dec
outsb
inc
push
cmp
mov
or
rep
aaa
lahf
inc
mov
mov
aam
pop
or
mov
loop
lods
pop
stos
sbb
cmp
push
pop
jg
or
lock
std
std
lea
xchg
pusha
cmp
call
jae
or
shrb
sub
push
pushf
mov
pop
loope
xor
or
fistpl
jl
jge
cmp
cwtl
dec
dec
xchg
cmp
pop
pop
iret
add
jmp
es
call
test
mov
xchg
add
cmc
test
adcl
stos
adc
xor
add
rorb
enter
flds
in
insl
xchg
arpl
mov
ret
jnp
inc
pop
ljmp
addr16
jmp
add
clc
scas
lods
jge
jb
in
fmuls
ret
jg
mov
call
xchg
pop
test
in
nop
inc
inc
mov
add
imul
jmp
push
cld
mov
cmp
int
aas
adc
inc
repnz
jmp
mov
out
ret
jb
dec
call
daa
insb
adc
dec
lret
add
add
jbe
in
test
inc
in
and
jg
aam
push
adc
test
lods
lahf
mov
lret
inc
mov
das
ljmp
fwait
add
mov
iret
mov
mov
push
mov
call
jecxz
ffreep
or
jae
mov
rol
cmp
dec
lret
add
pop
lret
ja
xchg
pop
int3
cmp
xchg
mov
je
jmp
aam
push
loope
daa
adc
test
lods
xchg
inc
xor
aam
push
xchg
xchg
das
incl
xchg
push
dec
xchg
push
and
decl
push
lcall
push
enter
ja
pop
pop
sub
ja
sub
lcall
adc
ret
outsb
mov
imul
mov
jbe
std
lcall
pop
insl
push
inc
fidivl
inc
stos
je
sub
ljmp
add
nop
fildll
data16
ds
jns
sub
mov
cs
lock
test
xchg
imul
jle
xchg
hlt
lock
daa
fs
add
fistps
jl
repnz
pop
inc
dec
dec
dec
and
aam
pop
shl
das
adc
lahf
inc
test
in
lea
add
hlt
inc
mulb
mov
or
int3
mov
push
adc
dec
insl
lea
push
ret
stc
incl
jo
dec
imul
push
divl
lret
repnz
jge
xchg
dec
clc
and
aam
pop
lret
in
loop
add
jnp
push
pop
movl
lcall
mov
inc
mov
xchg
das
jg
stos
movsb
cmc
gs
mov
add
mov
pop
roll
decl
mov
ret
jg
cmp
rcrb
div
jmp
inc
pop
add
popf
jge
cltd
in
mov
inc
pushl
push
les
test
cwtl
loope
scas
jmp
aam
in
sbb
in
pop
cmp
inc
jmp
lret
js
mov
daa
dec
push
rcll
push
mov
iret
pushl
adcb
and
adc
lds
cmp
js
sbb
sub
push
dec
lock
pushf
and
aaa
jmp
movsb
stos
ljmp
cmp
orl
push
cmp
ljmp
lock
shr
push
cmc
jmp
sbb
jnp
jmp
jmp
lea
out
add
and
sbb
repnz
mov
loopne
push
outsl
sub
jns
in
pushl
js
inc
arpl
jmp
xchg
test
mov
call
add
faddl
mov
int3
mov
lcall
ret
loopne
adc
inc
inc
pop
out
push
ret
pop
xchg
jle
lcall
mov
js
dec
sub
xor
jo
xchg
lcall
dec
js
rcll
fidivl
popf
in
stos
dec
stos
data16
testl
scas
mov
cmpsb
add
lcall
std
push
dec
xchg
fsubrp
adc
cs
iret
inc
rcrl
daa
fisubrs
push
rclb
std
mov
movnti
adc
shrl
loope
cmp
frstor
out
ljmp
mov
dec
mov
popf
adc
imul
cmp
sahf
lret
cmpsl
fmul
out
incl
cmp
xchg
fimull
imul
in
call
aas
call
out
push
scas
fstps
mov
shrl
sub
into
pop
jno
dec
jmpw
mov
ret
sub
mov
outsb
jb
xor
dec
ljmp
and
jbe
lcall
loop
inc
stos
push
into
pop
sub
lret
ljmp
xchg
das
dec
cmpb
add
daa
data16
into
xor
iret
xchg
aad
addl
or
test
jle
sarb
ret
adc
lods
and
lret
jp
cmpsl
add
fisttps
lret
in
dec
cmpsb
and
aam
ret
subl
nop
push
mov
insl
xchg
loope
dec
sub
mov
xchg
cmpl
push
xor
xor
loopne
pop
fildl
pop
jle
fidivs
or
pop
js
icebp
mov
scas
incl
scas
push
and
int3
outsb
int3
jp
das
addr16
mov
repnz
incl
dec
bnd
lahf
andl
test
cmp
inc
stos
rcrb
push
pop
ljmp
lea
or
sub
push
jnp
push
adc
in
xor
sub
test
scas
mov
ret
ja
adc
mov
loopne
and
repnz
sub
sbb
mov
addr16
aam
pop
decl
adc
test
insl
xchg
icebp
mov
pop
add
das
jg
bound
inc
push
scas
mov
fcomp
xchg
les
pop
das
lcall
push
ret
mov
mov
and
incl
push
inc
cmc
xor
dec
jnp
xlat
aas
fildll
lcall
stos
fidivrl
in
loopne
lret
pop
lods
xchg
jg
mov
filds
cmp
jbe
cmp
dec
jmp
sub
cmp
inc
mov
jns
sbb
jecxz
push
dec
mov
sahf
pop
add
pop
jne
push
mov
aas
cli
mov
mov
sub
sub
xlat
shrb
loope
xor
rorl
jbe
cwtl
ja
and
lret
fidivl
scas
out
stos
inc
stos
mov
mov
test
std
daa
lcall
add
mov
push
xchg
into
jle
sub
pusha
mov
mov
out
pop
mov
cmp
jb
inc
aaa
push
push
lds
data16
mov
jmp
lea
inc
mov
shl
idiv
fnstsw
js
and
dec
mov
movsw
push
fidivrl
jb
jno
test
inc
stos
outsb
xchg
cmp
mov
repz
call
or
and
decb
or
movsl
jb
movsl
sbb
ret
addr16
fldt
repnz
cld
fisubs
or
mov
pop
pusha
enter
mov
pushl
cmp
adc
jbe
lahf
jo
xchg
jmp
mov
xor
out
inc
stos
add
ja
xor
or
mov
add
lock
add
out
inc
mov
rorb
adc
mov
stc
mov
cmp
push
or
xor
xor
xor
xor
xor
xor
xor
or
adc
mov
decl
xor
cmp
inc
xor
data16
cltd
xor
xor
xor
xor
pushl
ljmp
shlb
out
xor
xor
cli
aaa
clc
incl
dec
xor
cwtl
xor
xor
filds
add
adc
and
sub
cmp
inc
aaa
push
aaa
ret
aaa
or
cmp
jb
jnp
mov
cltd
cmp
cmp
cmp
cmp
cmp
xchg
xchg
cmp
pop
clc
cmp
cmp
cmp
cmp
cmp
dec
cmp
lcall
sub
cmp
sub
cmp
cmp
insb
in
cmp
cmp
cmp
cmp
cmp
cmp
cmp
add
aam
pop
mov
cmp
xchg
cmp
cmp
cmp
push
cmp
jb
pop
cmp
mov
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
fnstsw
lret
lods
fstpt
or
iret
cmp
or
or
incl
aas
dec
aas
addr16
insb
aas
ja
aas
mov
mov
add
add
aaa
sarb
lods
ss
xor
xor
xor
mov
dec
xor
xchg
xor
xor
xor
xor
xor
xor
cltd
xor
lods
xor
xor
aaa
ss
ss
ss
pop
aad
mov
aaa
clc
adc
jno
test
xchg
cmp
jmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
idiv
das
mov
sbb
sarb
cmp
cmp
cmp
cmp
cmp
cmp
frstor
dec
popf
cmp
cmp
xlat
sbb
pushl
cmp
cmp
cmp
cmp
hlt
cmp
cmp
xor
aas
cmp
arpl
js
mov
cmp
and
inc
ds
ds
ds
jbe,pt
jge
xchg
xchg
ds
dec
insb
fcmovnbe
fnstenv
jne
jge
mov
push
xor
xor
dec
xor
xor
xor
xor
in
xor
xor
xor
xor
xchg
ss
ss
or
shl
jmp
aaa
and
mov
lods
pushl
out
aaa
cld
aaa
add
or
adc
and
sub
xchg
outsb
cmp
mov
je
or
push
cmp
leave
cmp
cmp
cmp
insl
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
push
cmp
cmp
and
test
les
std
mov
ds
xlat
jg,pt
mov
aas
enter
jg
jg
xor
xor
dec
xor
xor
js
mov
mov
cld
sbb
xor
xchg
xor
xor
cmc
jmp
xor
xor
xor
xor
xor
cmc
xor
xor
es
outsl
call
je
jns
movsb
int
aaa
test
les
in
adc
idiv
ljmp
leave
mov
sbb
cmp
jnp
cmpb
cmp
cmp
add
cmp
cmp
lods
insl
std
sub
pusha
cmp
dec
mov
xchg
ds
pushl
negl
popf
cmpsl
lods
ds
push
aas
pop
aas
sub
xor
das
fnsave
aas
push
aas
pop
aas
xchg
shl
iret
cmp
lret
pop
xor
pushl
dec
xor
xor
xor
dec
xor
bound
imul
mov
ret
xor
fnsave
dec
int
lock
xor
arpl
jp
mov
xchg
xor
pusha
xor
xor
xor
xor
xor
out
inc
xor
xor
fbstp
shll
pop
xor
pop
cli
pushl
xor
cmp
push
imul
mov
xchg
ss
ss
ss
sbb
fdivs
call
in
push
out
cs
lret
cld
fcomip
call
arpl
xchg
aaa
lcall
aaa
aaa
loopne
call
cld
pushl
jne
paddsw
cmp
cmp
cmp
cmp
push
cmp
ja
out
sar
cmp
adc
sub
xor
inc
cmp
push
stos
cmp
fucom
movsl
mov
cmp
cmp
sub
aas
ljmp
mov
cmp
adc
sbb
cld
dec
aaa
std
cmp
cmp
cmp
sarl
mov
sbb
daa
cmp
xchg
add
int
incb
aas
dec
aas
jns
add
add
xor
inc
cmp
mov
xor
xor
xor
jbe
jg
pop
jge
xor
xor
cmp
push
ja
std
pushl
fs
jno
jl
mov
xchg
ss
daa
ja
cmp
ja
ja
cmp
push
cmp
test
mov
cmp
stos
cmp
clc
jg
cld
cmp
cmp
cmp
cltd
sahf
push
cmp
lods
cmp
ljmp
popf
xchg
loop
sti
cmp
les
sarl
shll
pop
clc
pushl
aas
cmpb
aas
xchg
aas
mov
rcll
and
test
xchg
add
dec
xor
pop
xor
insb
xor
decl
mov
mov
xor
xor
movsl
in
xor
xor
xor
std
dec
xorl
xor
xor
jg
aad
xor
xor
xor
xor
xor
xor
std
call
ljmp
xor
xor
int
fdivl
in
icebp
xor
xor
xchg
mov
call
xor
xor
call
xor
inc
ss
outsl
aad
shl
ja
mov
cmc
mov
shll
ss
ss
fbstp
aaa
or
pop
aaa
and
xor
cmp
inc
aaa
dec
aaa
push
aaa
pop
aaa
imul
cmc
pushl
jbe
jl
mov
xchg
aaa
lahf
aaa
movsl
aaa
iret
aaa
xlat
aaa
fdivl
loope
out
in
xchg
mov
jecxz
repz
mov
and
fmull
std
ljmp
js
cmpl
cmp
cmp
cmp
cmp
cmp
cmp
aad
pop
test
cmp
cmp
stc
sub
cmp
call
cmp
mov
nop
cmp
cmp
in
and
insl
add
sub
inc
cmp
cmp
cmp
sbb
cmc
and
sahf
call
mov
das
ds
ds
ds
aas
push
mov
lock
aas
aaa
aas
xchg
aas
cmpsb
aas
mov
sarb
xlat
andl
test
jg
mov
xchg
xor
xor
xor
xor
cld
adc
jg
inc
xor
pop
xor
insl
xor
jge
xchg
or
scas
sub
xor
xor
outsl
sbb
cli
xor
xor
inc
stos
pop
in
pop
decl
xor
jbe
mov
xor
xor
pop
xor
xor
xor
fcomip
pop
incl
insl
xor
xor
xor
mov
jne
xor
fcomip
pushl
xchg
xor
test
mov
mov
xor
in
pop
loopne
imul
divb
outsb
cmp
or
xor
adcb
pop
push
cmp
nop
adc
test
adc
xchg
inc
add
xchg
or
jns
mov
jg
rcrb
cltd
aas
pop
pop
popf
rol
stc
out
mov
rcrl
cltd
cmp
popf
fstps
outsl
test
ds
add
sub
repnz
fisttps
das
xchg
xchg
mov
and
xor
and
inc
daa
and
sub
inc
js
pop
xor
add
subb
inc
sub
nop
insl
aaa
loopne
jge
cs
add
je
sbb
int3
test
pop
in
push
repnz
fs
and
add
cmp
jnp
sbb
or
and
jae
arpl
repz
and
xchg
daa
inc
fists
add
in
inc
add
xchg
add
js
and
and
xchg
iret
inc
and
test
add
in
and
jl
and
push
add
repnz
add
in
repnz
inc
and
add
cmpb
stos
sbb
cmpl
add
leave
xor
test
inc
subb
adc
cmp
addb
pop
jp
mov
imul
mov
push
sub
stos
and
pop
xor
in
jns
jl
and
sub
push
stc
add
stos
adc
in
cwtl
adc
and
inc
and
inc
and
pop
xor
jl
and
inc
or
aas
ret
add
nop
sbb
and
add
jb
push
leave
out
adc
xchg
adc
add
adc
add
xor
insl
push
insb
sahf
insl
outsl
data16
add
or
xor
adc
popf
int
mov
out
enter
ret
add
add
jns
dec
pop
add
add
xor
inc
jb
stc
inc
inc
and
dec
nop
pushf
nop
xor
xor
mov
jne
mov
sbb
lods
xchg
adc
adc
inc
in
movsl
add
ret
mov
adc
and
add
scas
add
and
lahf
lret
inc
jle
adc
add
mov
and
and
push
and
xor
xor
daa
in
xor
xor
adc
add
and
inc
and
and
les
push
add
inc
cmp
pop
data16
mov
or
movsl
or
jp
pushl
jmp
mov
add
pop
lods
test
inc
icebp
js
adc
outsb
popa
or
and
leave
fstpt
les
pop
jae
movsl
mov
push
ja
sbb
ret
mov
push
adc
sbb
popf
mov
mov
fnstsw
dec
mov
push
inc
dec
lock
data16
adc
add
ja
jae
sbb
shr
cmp
pop
fisubs
mov
push
jne
sbb
mov
stc
fldenv
loopne
add
mov
xor
or
lock
lds
add
mov
jnp
xor
mov
in
int
hlt
and
sub
or
xchg
int3
jge
rolb
shll
ret
push
fwait
or
bound
es
ds
out
inc
xor
pop
and
cmovp
pop
in
decb
int3
or
dec
inc
fldl
repnz
hlt
imul
lcall
fs
insb
insb
pop
xchg
lods
mov
dec
insl
insl
or
jae,pn
je
push
sub
insb
pop
insb
dec
addr16
gs
inc
jg
mov
sbb
or
rorb
jb
loopne
loop
cmpsb
jmp
gs
dec
imul
imul
pop
fwait
mov
test
sbb
add
loopne
pop
inc
and
and
inc
lahf
call
cmp
dec
sub
sub
jle
imul
pop
cld
xor
adc
or
in
je
cmp
pop
lea
jnp
mov
push
push
out
inc
push
cltd
and
inc
push
and
or
cs
pop
jns
outsb
adc
fimuls
cmp
nop
sbb
or
mov
jb
add
lods
lcall
pop
pop
jno
mov
xor
fcoml
std
sub
mov
or
mov
leave
ret
adc
divl
ja
sbb
sbb
and
call
jp
clc
std
inc
xor
xchg
xchg
daa
test
dec
jmp
or
leave
enter
pop
sbb
or
inc
push
icebp
push
sbb
pcmpeqw
push
ljmp
and
hlt
and
dec
cmp
add
fistpll
inc
add
cmp
jl
adc
or
lcall
repz
lods
add
pop
or
jg
add
dec
cmp
dec
in
mov
mov
add
in
push
jb
xchg
xchg
gs
outsl
outsb
gs
xchg
gs
je
gs
es
aad
insb
xlat
fdivs
call
fisubl
push
mov
cmp
loop
insl
xlat
insb
or
cmc
mulb
idiv
or
mov
dec
stc
inc
cli
je
sti
xor
call
pop
xor
addr16
inc
lcall
sub
je
dec
mov
leave
lret
mov
int
into
jp
cmp
cmp
rcl
rcrb
in
cmp
jp
std
imul
add
scas
cmp
mov
sbb
imul
int3
sub
or
into
jns
std
inc
std
das
mov
data16
ja
xor
icebp
push
aad
jne
add
push
cwtl
loopne
incl
xchg
sti
mov
sti
sbb
dec
outsb
pop
push
push
inc
sub
mov
fs
xor
data16
add
dec
push
and
je
jge
inc
cltd
cmp
loopne
loop
je
jns
jne
or
xor
ret
or
call
push
push
cmp
cwtl
adc
orl
decl
jne
in
jnp
cld
aas
lret
and
push
in
gs
hlt
xchg
push
call
adc
inc
inc
and
jmp
insb
js
rcll
xor
xor
xchg
xor
xor
arpl
cwtl
cltd
lcall
pop
xchg
push
sbb
orl
xor
xchg
arpl
dec
nop
push
xchg
std
pop
xchg
std
cmp
enter
std
xchg
std
xchg
std
in
test
jnp
js
jo
sub
lret
mov
mov
mov
mov
stos
mov
adc
std
icebp
add
adc
mov
mov
adc
or
out
xor
pop
stos
leave
nop
sti
sbb
xchg
or
lods
insl
test
mov
push
pop
jns
mov
lcall
xor
cs
out
jmp
sbb
push
dec
outsl
lcall
push
add
sub
data16
je
add
pushf
sbb
sub
sub
add
push
mov
add
push
es
jns,pn
add
fs
gs
xchg
outsb
insb
popa
jne
arpl
shlb
or
mov
mov
jno
xor
xor
imul
js
fistps
xchg
imul
xchg
gs
cs
lret
mov
push
shlb
es
fs
out
call
sub
add
cmp
add
movsb
add
add
cmp
aam
add
les
call
cltd
mov
push
scas
ffree
push
push
cmc
rclb
fwait
popf
sub
and
mov
fstpl
mov
jge
cwtl
lods
faddl
or
add
inc
loopne
cmp
mov
arpl
js
leave
or
out
sbb
sub
xor
outsb
addr16
push
sbb
repnz
or
mov
loop
pop
push
mov
adc
adc
jne
adc
mov
hlt
or
sub
sbb
sbb
rcll
jle
dec
aaa
fisttps
xchg
push
aam
add
fmuls
push
xor
repz
add
pop
or
call
inc
int
out
inc
and
mov
shlb
pop
inc
mov
sub
outsl
push
add
add
js
mov
sbb
add
mov
adc
dec
mov
int3
adc
stc
out
mov
lcall
jnp
hlt
add
xchg
rorb
jnp
orl
or
fadd
push
stos
js
or
mov
mov
dec
or
jo
add
idivl
pop
pop
or
inc
sbb
add
adc
enter
inc
and
mov
mov
subl
inc
and
cltd
adc
or
stos
adc
push
inc
in
mov
or
arpl
nop
or
or
push
push
scas
sbb
or
pusha
inc
and
jns
pop
out
movsb
add
movsb
hlt
pop
enter
sbb
push
or
jne
push
lds
xchg
int
add
leave
lcall
cmp
adc
sub
add
in
pop
jae
sub
mov
or
loope
mov
xchg
xor
cwtl
inc
and
add
je
inc
cwtl
inc
and
stos
add
dec
or
mov
pop
push
inc
and
ss
dec
shll
test
lods
ret
out
lcall
ret
imul
int
fs
jae
xchg
add
dec
jbe
dec
pop
bound
frstor
dec
stos
pop
add
or
xor
xor
add
mov
aaa
andl
lahf
aaa
xor
xor
mov
addl
sub
inc
inc
adc
nop
push
or
popf
jg
outsl
pop
or
mov
bound
and
adc
je
mov
fsubrs
popa
dec
push
push
imul
jp
notl
or
push
dec
jae
push
in
inc
push
sub
push
push
dec
sub
sub
add
push
adc
mul
gs
or
inc
adc
rolb
dec
ss
mov
movsb
inc
add
adcl
sub
push
insl
mov
fistl
dec
test
dec
stos
and
mov
adc
movsb
or
scas
sub
adc
lods
popa
pop
packsswb
loop
cmp
adc
ret
sbb
sbb
loope
adc
add
add
adc
stos
mov
movsl
sbb
outsl
sti
inc
jae
or
es
mov
imul
adc
andb
push
addr16
cmp
mov
sbb
jae
push
adc
add
jb
and
inc
jns
outsl
js
xchg
mov
dec
imul
inc
sbb
inc
adc
test
mov
or
jp
pop
push
and
jmp
and
mov
sub
adc
and
in
sbb
insl
dec
jae
inc
dec
push
icebp
jg
shll
in
inc
add
or
pusha
add
popa
add
jns
cmp
cmp
inc
and
sbb
fs
cld
aaa
pop
xchg
test
xlat
jge
push
mov
lock
cld
add
dec
sbb
imul
cmpsb
imul
imul
dec
xlat
or
pop
jge
add
dec
inc
add
add
xorl
add
mov
or
or
inc
dec
scas
inc
imul
out
adc
and
jb
jne
cmp
xorb
jg
pop
test
loop
bound
xchg
test
clc
push
in
fnstenv
jp
cmp
jne
or
shlb
sbb
adc
jnp
mov
dec
or
inc
push
add
jnp
add
push
dec
fadd
fsubrs
xorl
fisubrs
outsl
pop
jns
pop
push
pop
push
mov
loop
lret
je
add
fistpl
data16
xor
je
shrb
cltd
stc
cmovno
imul
dec
outsl
sbb
jae
lods
loopne
or
xor
add
xor
lcall
push
mov
imul
mov
xor
or
push
fsubrs
add
fldlg2
cld
mov
jae
nop
outsb
sbb
add
pop
or
or
dec
mov
add
jecxz
mov
jns
and
mov
cmp
xor
jecxz
inc
jmp
insl
add
outsb
inc
jae
and
mov
popa
jns
popa
and
ss
cmp
add
addr16
xlat
jne
jg
inc
imul
xchg
or
notl
int3
mov
sub
inc
fisubl
mov
xor
leave
push
sub
popa
fwait
pop
lea
je
outsb
xchg
insb
popf
jge
scas
imul
sbb
jo
or
iret
mov
adc
fstpl
sub
xor
fsubl
sub
sub
cmp
or
daa
dec
fldenv
dec
imul
push
daa
jbe
mov
dec
test
bswap
test
and
jmp
push
ret
push
aaa
xor
imul
and
jne
jmp
xchg
sbb
xchg
jbe
mov
lock
push
shr
push
xor
xor
ljmp
outsl
shlb
xor
xor
pusha
xor
lea
mov
xor
xor
xor
fwait
mov
filds
xor
xor
cmp
mov
mov
shll
into
incl
cli
out
divb
xor
xchg
xor
fisttps
ss
mov
inc
aaa
xorb
aaa
pushf
aaa
mov
call
inc
cmp
xchg
jmp
jecxz
cmp
jp
cmpl
hlt
inc
aam
lods
cmp
pop
adc
cmp
lret
cmp
cmp
stos
cmp
or
jne
clc
decb
cli
mov
dec
xor
jp
divb
adc
push
incl
and
jg
mov
lahf
xor
xor
ljmp
fnsave
xchg
sub
fnstenv
add
ss
push
ss
mov
divb
and
mov
lds
cmp
incl
cmp
cmp
cmp
inc
orl
orb
and
xchg
and
xchg
add
add
or
sub
xchg
and
les
and
sbb
add
or
sub
jae
jne
pop
sbb
inc
outsl
pavgw
mov
rolb
mov
add
push
mov
cmp
and
add
call
and
jbe
pop
pop
dec
add
sub
punpckhwd
xchg
mov
push
imul
inc
dec
add
pusha
or
add
mov
iret
pushf
es
int
xchg
mov
cld
popf
add
add
adc
xor
dec
stos
cwtl
les
or
addl
or
push
mov
add
je
lods
outsb
and
xchg
mov
out
add
jg
aaa
fstps
and
mov
repnz
and
movsb
addb
xor
fwait
add
nop
js
pop
xor
sub
or
call
bound
push
mov
popa
jb
adc
leave
mov
push
daa
jp
sbb
add
or
add
add
add
add
add
add
popa
add
call
int
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
