mov
mov
mov
mov
push
mov
pop
push
push
mov
pop
ret
nop
add
pusha
push
push
mov
mov
mov
mov
pop
pop
cld
pusha
mov
test
je
xor
mov
inc
jmp
popa
xor
mov
movsb
mov
call
mov
jae
xor
call
jae
xor
call
mov
jae
mov
inc
mov
call
adc
jae
jne
stos
jmp
call
sub
jne
call
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
lods
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
mov
call
adc
call
jb
ret
sub
mov
popa
ret
inc
or
xchg
jo
xchg
inc
inc
inc
add
xor
cmpl
pop
sbb
jne
int3
pop
lock
call
add
hlt
jae
push
jmp
mov
mov
mov
add
push
stos
mov
int3
dec
adc
mov
sarl
sbb
leave
cmp
je
sbb
mov
shl
or
inc
inc
xchg
cmp
pop
xor
and
sub
jge
sbb
jbe
push
add
xor
ret
sahf
or
add
movl
jae
mov
push
mov
sbb
loope
int
xchg
test
shr
imul
fdivrs
pop
addl
xorb
shr
add
pushl
xchg
add
lea
sub
or
test
fmuls
jl
add
lock
xor
cmp
rcrl
and
xor
jo
xchg
fdivs
mov
sbb
pop
adc
shl
pushf
ficoms
decl
xor
mov
ljmp
add
push
mov
sub
shl
test
decl
sbb
rolb
mov
lea
dec
or
cmp
xor
sub
jae
insb
cli
add
or
nop
les
mov
jp
sub
xchg
pop
xchg
aaa
xchg
jmp
adcb
xor
xchg
mov
pop
sahf
hlt
mov
xor
inc
and
add
adc
or
gs
and
filds
rolb
fwait
adc
sub
push
enter
dec
or
jp
push
shrl
add
sbb
and
add
inc
cmp
inc
fmull
call
and
rcl
jecxz
setge
dec
and
stc
stc
add
enter
jmp
filds
mov
inc
mov
xor
test
xlat
inc
xchg
enter
xorl
shll
sub
andl
jmp
clc
or
jns
enter
and
inc
icebp
add
pop
dec
insb
mov
adc
pop
sbb
inc
mov
add
mov
mov
test
xorb
sbb
and
inc
or
mov
mov
lock
pop
sub
push
mov
mov
xchg
mov
adc
inc
add
mov
adc
jmp
cltd
in
xor
nop
ss
test
adc
jmp
cmpsl
push
pop
ret
shll
pushl
shrb
and
mov
adc
push
and
dec
sbb
inc
dec
mov
push
inc
or
hlt
jb
adc
or
into
or
mov
sbb
lea
or
inc
xor
xchg
adc
or
aam
dec
add
les
mov
mov
sbb
shrl
inc
adc
mov
sti
loop
sarb
push
push
aam
pop
movsl
cmc
inc
push
add
cmp
test
xor
cli
shr
mov
cmp
adc
xlat
mov
fwait
aam
or
cwtl
shl
jmp
sub
xor
adc
xor
mov
bound
adc
pop
mov
pop
cmp
out
mov
pop
loopne
lea
pop
inc
sti
add
inc
jmp
pop
lcall
bound
and
cmc
shr
popf
movsb
sub
lods
lret
xor
xor
inc
adc
out
test
adc
lea
test
cmp
inc
cmp
jl
inc
lods
shll
dec
or
add
lcall
rcrb
mov
push
sbbb
push
dec
ds
add
and
dec
addr16
pop
rorl
cmp
jb
sub
or
push
psllq
add
out
enter
stos
pop
test
xchg
movsb
xor
mov
adc
jmp
popa
shlb
sub
inc
insl
sub
xchg
sub
lea
jge
mov
gs
adc
lea
jmp
cli
pop
inc
mov
je
inc
push
mov
mov
jae
mov
dec
divl
push
enter
xorl
sbb
loope
or
subb
jecxz
mov
adcb
pushf
jne
mov
push
loope
or
mov
pop
pop
leave
ret
addb
inc
add
call
adc
add
xchg
add
imul
add
adc
add
add
add
add
add
add
add
sbb
add
add
push
add
add
add
add
add
cmpb
add
add
add
add
add
add
push
add
add
xor
add
add
add
add
jle
add
nop
movsb
add
add
add
les
mov
jmp
pusha
push
mov
sub
xor
movl
movl
movl
movl
mov
mov
pusha
mov
mov
mov
mov
mov
mov
mov
add
add
mov
lea
mov
mov
mov
add
dec
nop
test
nop
je
lea
mov
add
push
push
mov
add
mov
pop
repz
test
pop
jne
mov
add
mov
movzwl
mov
add
mov
add
mov
jmp
movl
popa
mov
xor
cmp
je
mov
cmp
je
lea
push
push
movb
movb
movb
movw
nop
nop
movw
nop
nop
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
nop
nop
mov
nop
nop
call
nop
add
inc
add
add
pop
mov
sub
push
push
mov
push
push
push
call
pop
mov
push
push
push
push
inc
mov
push
push
push
mov
add
mov
mov
add
mov
pop
mov
mov
add
push
mov
add
call
push
push
mov
push
push
call
pop
push
push
push
pushl
push
push
push
mov
push
push
call
pop
push
push
push
pushl
pushl
mov
push
push
pushl
push
pushl
mov
add
push
push
push
mov
call
pop
mov
add
mov
mov
push
mov
push
mov
push
mov
push
xor
mov
rep
mov
lods
mov
lods
mov
add
lods
mov
rep
dec
jne
pop
pop
pop
mov
test
je
mov
inc
sub
cmp
ja
mov
cmp
jne
xor
bswap
add
sub
stos
loop
push
lods
test
je
mov
add
push
call
mov
lods
test
jne
lods
test
je
sub
lods
test
jne
sub
push
push
call
stos
jmp
and
push
push
call
stos
jmp
pop
pop
ret
add
fimuls
cmpsl
sub
jp
loope
jl
fbld
sbb
adc
xchg
popf
dec
repnz
daa
pop
jno
insl
lret
jl
lods
xchg
inc
call
gs
nop
sub
addr16
jecxz
int3
or
sub
enter
jb
push
mov
and
mov
stc
out
xor
adc
add
insb
adc
out
pop
mov
sbb
outsb
stc
insb
sbb
lods
inc
jecxz
cltd
stos
out
lcall
push
dec
outsl
sti
idivl
or
mov
test
adc
xchg
sub
xchg
nop
dec
jecxz
rcrl
jnp
repz
rolb
sub
je
cmp
fisubrl
outsl
and
fisubrl
xor
push
sti
icebp
mov
lods
fbld
dec
ret
pop
xchg
cmpsl
mov
fcomps
mov
in
mov
cltd
mov
lret
std
ss
sbb
xor
sbb
add
fnstsw
andl
mov
loop
cmpsl
or
aaa
xchg
cmpsl
clc
test
sub
mov
into
fwait
add
or
rol
ljmp
push
sahf
loope
scas
call
into
sbb
dec
push
and
bound
test
les
fadd
cmp
dec
popl
inc
xor
sub
mov
sub
adc
sbb
sbb
into
mov
mov
imulb
fnsave
int3
mov
jge
mov
ss
popf
or
jns
inc
arpl
push
shll
mov
push
out
mov
outsb
fisttpll
jmp
out
iret
push
add
pop
movsl
insl
xor
add
leave
insl
xchg
std
add
imul
inc
dec
mov
xor
push
insb
shrb
fistl
lahf
lret
loop
dec
sbb
jl
cmc
in
or
pop
in
sti
out
inc
cmp
inc
push
je
add
inc
test
push
test
scas
es
mov
emms
dec
cmpsb
pusha
pusha
mov
push
xchg
xchg
xchg
movsb
sbb
xchg
cmp
xchg
xchg
popl
jp
cltd
loopne
push
aaa
inc
insb
out
and
fs
mov
jns
cmpsb
sub
push
dec
inc
push
jae
sub
inc
fs
xchg
fwait
mov
bound
sbb
mov
adc
xor
inc
in
fnstsw
fs
aas
pushf
addr16
jne
mov
fwait
leave
cmp
out
lret
lods
in
ret
paddsw
ljmp
jbe
andb
sub
aas
cmp
or
jp
and
xchg
mov
xchg
ss
cmp
cmc
callw
int3
push
sahf
ja
mov
insl
in
test
inc
shrb
sti
bound
mov
mov
popf
movsl
lock
out
and
fstps
push
imul
leave
fidivs
leave
push
sbb
mov
int3
fldenv
cwtl
imul
lahf
adc
and
sbb
cld
nop
imul
leave
mov
mov
fiadds
inc
stc
sarb
.byte
mull
.byte
repz
add
add
sbb
add
add
push
add
add
add
add
add
cmpb
add
add
add
add
add
add
push
add
add
xor
add
add
add
add
jle
add
nop
movsb
add
add
add
les
mov
jmp
pusha
push
mov
sub
xor
movl
movl
movl
movl
mov
mov
pusha
mov
mov
mov
mov
mov
mov
mov
add
add
mov
lea
mov
mov
mov
add
dec
nop
test
nop
je
lea
mov
add
push
push
mov
add
mov
pop
repz
test
pop
jne
mov
add
mov
movzwl
mov
add
mov
add
mov
jmp
movl
popa
mov
xor
cmp
je
mov
cmp
je
lea
push
push
movb
movb
movb
movw
nop
nop
movw
nop
nop
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
nop
nop
mov
nop
nop
call
nop
add
inc
add
add
pop
mov
sub
push
push
mov
push
push
push
call
pop
mov
push
push
push
push
inc
mov
push
push
push
mov
add
mov
mov
add
mov
pop
mov
mov
add
push
mov
add
call
push
push
mov
push
push
call
pop
push
push
push
pushl
push
push
push
mov
push
push
call
pop
push
push
push
pushl
pushl
mov
push
push
pushl
push
pushl
mov
add
push
push
push
mov
call
pop
mov
add
mov
mov
push
mov
push
mov
push
mov
push
xor
mov
rep
mov
lods
mov
lods
mov
add
lods
mov
rep
dec
jne
pop
pop
pop
mov
test
je
mov
inc
sub
cmp
ja
mov
cmp
jne
xor
bswap
add
sub
stos
loop
push
lods
test
je
mov
add
push
call
mov
lods
test
jne
lods
test
je
sub
lods
test
jne
sub
push
push
call
stos
jmp
and
push
push
call
stos
jmp
pop
pop
ret
add
fimuls
cmpsl
sub
jp
loope
jl
fbld
sbb
adc
xchg
popf
dec
repnz
daa
pop
jno
insl
lret
jl
lods
xchg
inc
call
gs
nop
sub
addr16
jecxz
int3
or
sub
enter
jb
push
mov
and
mov
stc
out
xor
adc
add
insb
adc
out
pop
mov
sbb
outsb
stc
insb
sbb
lods
inc
jecxz
cltd
stos
out
lcall
push
dec
outsl
sti
idivl
or
mov
test
adc
xchg
sub
xchg
nop
dec
jecxz
rcrl
jnp
repz
rolb
sub
je
cmp
fisubrl
outsl
and
fisubrl
xor
push
sti
icebp
mov
lods
fbld
dec
ret
pop
xchg
cmpsl
mov
fcomps
mov
in
mov
cltd
mov
lret
std
ss
sbb
xor
sbb
add
fnstsw
andl
mov
loop
cmpsl
or
aaa
xchg
cmpsl
clc
test
sub
mov
into
fwait
add
or
rol
ljmp
push
sahf
loope
scas
call
into
sbb
dec
push
and
bound
test
les
fadd
cmp
dec
popl
inc
xor
sub
mov
sub
adc
sbb
sbb
into
mov
mov
imulb
fnsave
int3
mov
jge
mov
ss
popf
or
jns
inc
arpl
push
shll
mov
push
out
mov
outsb
fisttpll
jmp
out
iret
push
add
pop
movsl
insl
xor
add
leave
insl
xchg
std
add
imul
inc
dec
mov
xor
push
insb
shrb
fistl
lahf
lret
loop
dec
sbb
jl
cmc
in
or
pop
in
sti
out
inc
cmp
inc
push
je
add
inc
test
push
test
scas
es
mov
emms
dec
cmpsb
pusha
pusha
mov
push
xchg
xchg
xchg
movsb
sbb
xchg
cmp
xchg
xchg
popl
jp
cltd
loopne
push
aaa
inc
insb
out
and
fs
mov
jns
cmpsb
sub
push
dec
inc
push
jae
sub
inc
fs
xchg
fwait
mov
bound
sbb
mov
adc
xor
inc
in
fnstsw
fs
aas
pushf
addr16
jne
mov
fwait
leave
cmp
out
lret
lods
in
ret
paddsw
ljmp
jbe
andb
sub
aas
cmp
or
jp
and
xchg
mov
xchg
ss
cmp
cmc
callw
int3
push
sahf
ja
mov
insl
in
test
inc
shrb
sti
bound
mov
mov
popf
movsl
lock
out
and
fstps
push
imul
leave
fidivs
leave
push
sbb
mov
int3
fldenv
cwtl
imul
lahf
adc
and
sbb
cld
nop
imul
leave
mov
mov
fiadds
inc
stc
sarb
ljmp
and
test
fldcw
aas
sbb
in
inc
in
jp
sub
push
push
inc
push
sbb
int
iret
es
std
adc
dec
xor
lock
mov
pushf
fldt
xor
lret
pushf
int
add
adc
sbb
mov
mov
cmp
adc
push
cmpsl
jl
icebp
iret
mov
xchg
push
push
sub
and
aad
int3
inc
add
xor
inc
cmp
movsb
dec
ds
mov
bound
cs
dec
in
test
sbb
mov
jmp
adc
mov
insb
mov
cwtl
je
jge
jbe
movsl
xorl
xchg
mov
ret
sub
in
outsl
sub
ret
xchg
jmp
imul
orl
mov
add
jae
cmp
sti
inc
mov
xor
mov
stc
ljmp
cld
inc
xchg
mov
rcl
jnp
sbb
sub
clc
imul
mov
int
cld
pop
sbb
icebp
clc
push
dec
stc
int3
outsl
in
cwtl
xor
stc
xor
imul
aaa
jnp
mov
jmp
iret
rol
fwait
jb
dec
push
test
ret
shrl
adc
cmp
inc
push
movsb
and
pop
cmc
sbb
push
aam
jmp
lods
rolb
sbb
jnp
lret
dec
mov
les
cmp
and
and
in
pusha
or
push
pusha
pop
aad
push
out
es
.byte
add
add
sbb
add
add
push
add
add
add
add
add
cmpb
add
add
add
add
add
add
push
add
add
xor
add
add
add
add
jle
add
nop
movsb
add
add
add
les
mov
jmp
pusha
push
mov
sub
xor
movl
movl
movl
movl
mov
mov
pusha
mov
mov
mov
mov
mov
mov
mov
add
add
mov
lea
mov
mov
mov
add
dec
nop
test
nop
je
lea
mov
add
push
push
mov
add
mov
pop
repz
test
pop
jne
mov
add
mov
movzwl
mov
add
mov
add
mov
jmp
movl
popa
mov
xor
cmp
je
mov
cmp
je
lea
push
push
movb
movb
movb
movw
nop
nop
movw
nop
nop
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
nop
nop
mov
nop
nop
call
nop
add
inc
add
add
pop
mov
sub
push
push
mov
push
push
push
call
pop
mov
push
push
push
push
inc
mov
push
push
push
mov
add
mov
mov
add
mov
pop
mov
mov
add
push
mov
add
call
push
push
mov
push
push
call
pop
push
push
push
pushl
push
push
push
mov
push
push
call
pop
push
push
push
pushl
pushl
mov
push
push
pushl
push
pushl
mov
add
push
push
push
mov
call
pop
mov
add
mov
mov
push
mov
push
mov
push
mov
push
xor
mov
rep
mov
lods
mov
lods
mov
add
lods
mov
rep
dec
jne
pop
pop
pop
mov
test
je
mov
inc
sub
cmp
ja
mov
cmp
jne
xor
bswap
add
sub
stos
loop
push
lods
test
je
mov
add
push
call
mov
lods
test
jne
lods
test
je
sub
lods
test
jne
sub
push
push
call
stos
jmp
and
push
push
call
stos
jmp
pop
pop
ret
add
fimuls
cmpsl
sub
jp
loope
jl
fbld
sbb
adc
xchg
popf
dec
repnz
daa
pop
jno
insl
lret
jl
lods
xchg
inc
call
gs
nop
sub
addr16
jecxz
int3
or
sub
enter
jb
push
mov
and
mov
stc
out
xor
adc
add
insb
adc
out
pop
mov
sbb
outsb
stc
insb
sbb
lods
inc
jecxz
cltd
stos
out
lcall
push
dec
outsl
sti
idivl
or
mov
test
adc
xchg
sub
xchg
nop
dec
jecxz
rcrl
jnp
repz
rolb
sub
je
cmp
fisubrl
outsl
and
fisubrl
xor
push
sti
icebp
mov
lods
fbld
dec
ret
pop
xchg
cmpsl
mov
fcomps
mov
in
mov
cltd
mov
lret
std
ss
sbb
xor
sbb
add
fnstsw
andl
mov
loop
cmpsl
or
aaa
xchg
cmpsl
clc
test
sub
mov
into
fwait
add
or
rol
ljmp
push
sahf
loope
scas
call
into
sbb
dec
push
and
bound
test
les
fadd
cmp
dec
popl
inc
xor
sub
mov
sub
adc
sbb
sbb
into
mov
mov
imulb
fnsave
int3
mov
jge
mov
ss
popf
or
jns
inc
arpl
push
shll
mov
push
out
mov
outsb
fisttpll
jmp
out
iret
push
add
pop
movsl
insl
xor
add
leave
insl
xchg
std
add
imul
inc
dec
mov
xor
push
insb
shrb
fistl
lahf
lret
loop
dec
sbb
jl
cmc
in
or
pop
in
sti
out
inc
cmp
inc
push
je
add
inc
test
push
test
scas
es
mov
emms
dec
cmpsb
pusha
pusha
mov
push
xchg
xchg
xchg
movsb
sbb
xchg
cmp
xchg
xchg
popl
jp
cltd
loopne
push
aaa
inc
insb
out
and
fs
mov
jns
cmpsb
sub
push
dec
inc
push
jae
sub
inc
fs
xchg
fwait
mov
bound
sbb
mov
adc
xor
inc
in
fnstsw
fs
aas
pushf
addr16
jne
mov
fwait
leave
cmp
out
lret
lods
in
ret
paddsw
ljmp
jbe
andb
sub
aas
cmp
or
jp
and
xchg
mov
xchg
ss
cmp
cmc
callw
int3
push
sahf
ja
mov
insl
in
test
inc
shrb
sti
bound
mov
mov
popf
movsl
lock
out
and
fstps
push
imul
leave
fidivs
leave
push
sbb
mov
int3
fldenv
cwtl
imul
lahf
adc
and
sbb
cld
nop
imul
leave
mov
mov
fiadds
inc
stc
sarb
ljmp
and
test
fldcw
aas
sbb
in
inc
in
jp
sub
push
push
inc
push
sbb
int
iret
es
std
adc
dec
xor
lock
mov
pushf
fldt
xor
lret
pushf
int
add
adc
sbb
mov
mov
cmp
adc
push
cmpsl
jl
icebp
iret
mov
xchg
push
push
sub
and
aad
int3
inc
add
xor
inc
cmp
movsb
dec
ds
mov
bound
cs
dec
in
test
sbb
mov
jmp
adc
mov
insb
mov
cwtl
je
jge
jbe
movsl
xorl
xchg
mov
ret
sub
in
outsl
sub
ret
xchg
jmp
imul
orl
mov
add
jae
cmp
sti
inc
mov
xor
mov
stc
ljmp
cld
inc
xchg
mov
rcl
jnp
sbb
sub
clc
imul
mov
int
cld
pop
sbb
icebp
clc
push
dec
stc
int3
outsl
in
cwtl
xor
stc
xor
imul
aaa
jnp
mov
jmp
iret
rol
fwait
jb
dec
push
test
ret
shrl
adc
cmp
inc
push
movsb
and
pop
cmc
sbb
push
aam
jmp
lods
rolb
sbb
jnp
lret
dec
mov
les
cmp
and
and
in
pusha
or
push
pusha
pop
aad
push
out
es
jne
cwtl
insb
ret
lcall
sbb
sbb
icebp
leave
and
imul
in
out
in
inc
dec
outsl
cmp
inc
add
pop
icebp
adc
movsb
int3
adc
dec
pushf
pop
mov
lret
shll
xlat
rcrb
mov
push
aad
icebp
sub
mov
js
fistpll
dec
cmc
dec
loop
jno,pn
xchg
or
adc
arpl
in
bound
iret
in
inc
lds
sub
xor
fisttpl
cli
jae
cmp
or
std
pop
fmull
mov
flds
loope
push
aaa
add
out
fldcw
int3
dec
stc
mov
pop
and
fnsave
sahf
sub
adc
popa
dec
or
insb
outsb
mov
inc
or
cmp
rcrb
and
cmp
inc
add
pop
xchg
inc
mov
in
mov
pushf
pop
popa
fmul
aam
push
xor
cs
dec
in
js
cmpl
adc
rolb
push
clc
mov
jl
mov
out
sbb
bound
inc
int3
push
aad
adc
test
adc
push
aaa
fsubrl
mov
cmpsb
pop
jp
stos
dec
stc
hlt
inc
clc
lock
mov
mov
std
xchg
mov
rcrb
mov
les
scas
pop
mov
mov
cmp
rorb
fidivrl
adc
test
cmc
or
in
pop
shll
inc
xlat
add
mov
cli
push
shrb
out
adc
cs
dec
out
inc
ret
mov
jb
adc
dec
add
int3
pushf
fwait
mov
adc
and
sub
xchg
pop
mov
repz
leave
dec
mov
fdivrs
dec
lea
or
jne
xor
out
sar
adc
mov
scas
in
fsubs
add
cmc
push
test
loop
cwtl
lret
jb
addr16
and
jmp
ss
mov
popa
stos
out
inc
ljmp
push
add
ret
xchg
roll
lock
sbb
cmp
and
mov
adc
add
sar
mov
or
push
cmp
cltd
mov
dec
ret
xchg
aaa
outsl
ds
cmp
pop
jge
cmp
orl
jmp
xor
int3
lds
dec
in
cld
fsubs
inc
inc
lret
scas
dec
or
lea
xchg
sbb
and
mov
xchg
push
xor
add
mov
fsubl
jnp
xor
rorb
sbbl
int
and
scas
adc
test
test
dec
xor
std
push
movsb
les
inc
inc
outsl
into
loopne
cmp
xchg
fs
jbe
inc
das
js
cwtl
das
outsb
push
dec
call
or
pusha
push
aas
cmp
push
mov
xor
testb
jle
mov
cmp
xor
fidivrs
mov
mov
cmp
or
or
cmpsl
jo
pop
sbb
loopne
decb
nop
jnp
dec
movsb
jno
aaa
xchg
xor
xchg
inc
in
add
out
pop
inc
aad
jle
aas
mov
xor
push
enter
icebp
push
jno
imulb
xor
rcrl
or
mov
cmp
pop
cmp
fwait
aad
inc
and
inc
call
lret
pcmpgtd
stos
mov
imul
add
push
mov
or
icebp
addr16
cli
in
adc
mov
add
cmp
repnz
mov
mov
add
pop
lret
pop
xor
repz
rclb
call
push
add
in
out
and
stc
cli
mov
je
jmp
test
out
pop
mov
in
inc
dec
xchg
pop
outsl
mov
cmp
mov
cmpsl
push
cmc
xor
pop
cmp
popf
into
add
and
imul
je
and
scas
sahf
mov
iret
cmpsb
xor
and
shl
movsl
cld
dec
sub
shlb
movsl
lods
repnz
add
pop
lret
jl
push
xlat
dec
outsl
pop
fnstcw
loopne
add
testb
xor
and
lea
sub
mov
mov
into
clc
stc
aam
dec
cltd
aad
push
popa
hlt
inc
mov
sub
mov
cwtl
or
xchg
ds
push
jle
ret
push
add
jl
sub
imul
jne
dec
dec
mov
xor
out
add
pop
iret
dec
and
subb
sbb
jl
mov
nop
mov
cwtl
repnz
jp
les
sub
dec
and
inc
out
packuswb
popa
sub
loopne
or
xor
cmpsl
in
mov
sbb
cmc
mov
xchg
pusha
rsm
dec
fs
and
dec
lods
out
das
and
call
nop
and
push
and
sahf
xchg
fildll
repnz
cs
sbb
pushf
add
sti
jge
out
stos
adc
mov
cmp
test
pop
pop
push
mov
hlt
pop
clc
lea
cmp
int3
movsb
popa
les
inc
xchg
mov
dec
rcrl
push
dec
cmp
mov
sbb
std
inc
and
jns
mov
mov
out
test
sbb
in
idiv
inc
add
outsl
xor
addr16
iret
stos
test
movsb
mov
push
sar
pop
movsb
mov
inc
fwait
mov
jp
iret
xchg
out
and
sti
sbb
jecxz
loop
lahf
inc
or
push
bound
xor
xchg
movsl
or
xor
cmp
adc
sub
inc
jnp
das
push
sbb
rcll
or
out
insb
in
push
cmp
cmp
cmp
xor
cmpsb
add
mulb
mov
jae,pn
mov
dec
sub
inc
push
std
es
sbbb
xchg
gs
dec
dec
mov
jnp
jmp
sub
lret
dec
push
popa
push
lods
mov
mov
clc
jbe
sub
out
out
mov
push
adc
cld
in
jae
xchg
push
and
xor
mov
out
movsl
mov
dec
pop
adc
insb
mov
cmp
and
mov
into
push
xor
jb
jg
sti
addr16
sbb
ss
mov
shlb
notl
mov
stos
imull
push
enter
jle
std
lcall
lods
lcall
jno
inc
adc
jno
jl
xor
pop
pop
sbb
or
sub
or
aad
aas
lcall
xor
out
dec
xchg
sub
rcll
stc
int
das
adc
mov
xorl
dec
jle
imul
inc
and
mov
cmp
cmp
fsubr
cmp
cmp
xchg
xor
shl
mov
jmp
xchg
test
inc
outsb
sub
jmp
int3
insb
sbb
punpcklbw
das
lcall
subb
xchg
addb
mov
ja
std
sarl
push
lock
les
in
mov
add
mov
bound
loope
sbb
push
popf
push
sbb
je
adc
dec
adc
push
call
ds
mov
mov
mov
inc
shrb
mov
fs
mov
je
out
sbbl
jne
mov
lods
mov
es
ss
fdivl
xchg
mov
lcall
pop
push
mov
mov
dec
jge
cmc
sub
push
fdivrs
xor
mov
sbb
sub
sub
std
out
mov
pop
shl
add
pop
cmp
loope
leave
loop
jns
test
cmp
cmovs
jb
aas
in
jbe
rcrl
arpl
inc
jl
out
mov
jge
orl
jge
or
xchg
lcall
xchg
push
popa
cmc
ficoms
xchg
test
psubw
roll
push
dec
inc
aas
faddl
mov
sbb
cmp
dec
pop
or
jae
cwtl
push
stc
sbb
sbb
in
inc
daa
cmpsl
rorl
pop
bound
sbb
aas
test
cmp
push
test
pop
cmpsb
fs
inc
dec
mov
mov
mov
xchg
mov
jbe
push
out
cltd
jbe
cmp
xchg
lds
dec
jmp
add
ret
fisubs
push
movsl
pop
mov
cltd
or
stos
add
pop
ret
mov
test
daa
movsl
jge
dec
fsubrs
mov
xchg
xor
aam
je,pn
shlb
sbb
cs
and
leave
cli
mov
sub
xchg
jge
mov
push
push
aad
mov
sub
gs
add
cltd
out
in
pop
add
dec
fwait
adc
pop
in
addr16
sbb
xchg
les
adc
or
out
mov
adcl
out
mov
sahf
dec
mov
sarb
adc
out
push
mov
inc
cmp
stc
add
adc
mov
xchg
stos
outsl
jno
fadds
out
cmp
js
enter
rcll
ds
mov
cltd
lods
jno
mov
cmp
pop
into
stos
inc
loopne
jle
and
or
aas
mov
mov
inc
mov
nop
subl
mov
add
pop
mov
les
fsubp
mov
les
iret
das
out
xchg
cmp
hlt
xor
je
lock
xor
sarl
mov
sbb
lods
outsb
mov
iret
lcall
gs
test
mov
iret
push
push
in
out
add
jb
inc
push
lods
lcall
hlt
fidivrl
push
test
lret
sbb
lcall
sti
or
adc
mov
fnstenv
idivb
jo
add
or
scas
addr16
lcall
push
idivb
xor
mov
shlb
cwtl
ja
push
popf
nop
jno
sbb
cmpsl
jle
mov
fs
cmp
in
cmp
mov
mov
push
insb
repnz
adc
cmp
pop
push
iret
fcmovnb
and
loope
mov
jmp
stos
cltd
add
inc
fcompl
aaa
inc
ljmp
in
mov
sub
pushf
ljmp
xchg
out
add
xchg
or
cmpsl
arpl
out
mov
popa
cmp
sbb
jecxz
adc
jae
rcrl
es
dec
std
shrl
scas
or
xor
jmp
lcall
add
int3
mov
or
stos
xchg
jl
sub
and
fstpt
sbb
adc
test
out
mov
or
push
pop
rcrb
fistpll
in
dec
lds
xchg
xchg
jnp
movq
adc
sbb
mov
jno
cmp
ret
dec
repnz
xchg
add
call
pushf
int
jo
inc
fdivrl
cvtps2pd
push
sbb
jmp
cld
pop
lahf
aad
and
std
push
xchg
in
lret
cmp
and
push
out
jns
in
pushf
cmp
ljmp
in
sbb
pusha
jp
push
rclb
imul
rorb
or
mov
jne
xchg
fstp
aad
fidivl
cmp
sub
xchg
scas
and
out
pop
pop
or
aas
mov
fsubr
jo
cld
sub
cwtl
jp
rcrl
rclb
mov
sub
shll
and
pop
pop
cltd
push
cmp
add
das
mov
cwtl
jmp
sbb
push
and
push
inc
bound
clc
pop
mov
dec
sbb
jp
std
mov
inc
or
das
mov
and
mov
int
sub
popf
or
add
lods
insl
lds
cmp
jecxz
dec
mulb
out
adc
fdivs
ljmp
jmp
lret
sub
cmp
pop
loopne
sub
sbbl
add
daa
in
rcr
lea
outsb
mov
pop
in
cmp
add
popa
adc
addr16
inc
xlat
hlt
mov
cmp
testl
jae
je
idivl
push
hlt
addr16
call
jg
push
sahf
repnz
clc
and
dec
fists
jle
lds
cmpxchg
adc
or
pop
mov
adc
lcall
movsl
js
in
sbb
mov
ljmp
pushf
movsl
sti
mov
xchg
xchg
jmp
add
mov
cmp
or
xchg
not
loope
stc
out
cmpsl
rol
dec
or
repz
pop
into
leave
lret
orl
jmp
jno
jae
into
icebp
in
stos
dec
sub
inc
lcall
inc
sbb
xlat
inc
sbbb
cmpsl
aad
pushf
test
pop
push
cmp
xchg
pop
mov
stos
fmull
sub
insb
inc
adcl
scas
mov
mov
mov
add
test
sub
es
cld
jno
cwtl
mov
sbb
lock
jp
fimuls
leave
rol
push
push
lea
push
andl
push
xchg
dec
inc
xor
cmpsb
dec
cwtl
nop
add
jnp
aam
ret
popf
imul
pop
xchg
repz
inc
pop
clc
decb
mov
cwtl
jns
cs
dec
test
repz
test
sub
mov
and
or
stos
or
cmp
adc
mov
stos
fimull
lds
lock
in
mov
xchg
shlb
jns
and
setbe
movsb
inc
push
enter
pushf
lret
mov
jecxz
adc
shld
loope
sbb
push
ljmp
cltd
xchg
and
movsl
scas
fidivl
adc
jno
data16
in
int3
sbb
jno
adc
and
sub
sbb
fwait
push
cwtl
mov
and
push
aas
out
icebp
dec
xchg
or
sub
push
xor
mov
jae
ret
lret
mov
icebp
inc
sub
ds
add
addr16
dec
into
es
ljmp
outsl
cmp
test
cwtl
mov
inc
imul
out
mov
out
popa
repz
call
jle
lock
cmp
cld
cs
cmp
mul
add
stos
push
or
xchg
cmp
push
xor
or
mov
test
sbb
out
dec
jecxz
pusha
sub
lret
add
pop
xchg
jg
or
mov
arpl
fdivrl
lcallw
mov
add
pop
pop
stc
jecxz
push
aam
ja
mov
xor
mov
in
adc
adc
add
push
mov
jge
cmp
hlt
fldlg2
cmp
mov
lret
xchg
les
es
addr16
lods
repz
cmp
mov
xchg
or
add
pinsrw
jg
leave
sub
std
and
or
pop
xor
aaa
fdivrl
insl
mov
and
mov
sbb
cmp
cmp
aad
jb
mov
xor
pop
push
testl
push
dec
repnz
test
repz
sub
or
mov
imul
adc
mov
mov
mov
shll
roll
scas
pop
lret
or
clc
imul
mov
and
inc
xor
test
mov
adc
outsl
mov
xor
sti
mov
push
mov
test
orl
ss
repnz
inc
mov
cmpb
es
mov
xor
aaa
cli
dec
mov
shrl
imul
push
sbb
in
sbb
mov
ja
jle
arpl
xchg
and
mov
scas
and
aad
into
cmp
xor
xchg
repnz
mov
ja
fistpll
cmpsb
loop
jg
mov
daa
out
cmpsb
arpl
dec
mov
jns
mov
std
jg
sub
pusha
insl
out
sub
jmp
adc
imull
mov
sub
jo
adc
mov
jae
mov
daa
fmull
xor
push
ja
lods
and
add
icebp
and
ds
mov
push
cwtl
inc
adc
sbb
pop
jle
daa
mov
lcall
outsb
test
xor
jns
fs
nop
dec
sbb
push
mov
addl
nop
mov
mov
cwtl
mov
cmp
mov
add
shlb
xor
and
adc
or
cmp
ss
jecxz
add
pushf
test
test
arpl
or
sti
je
cs
mov
xor
mov
pop
add
es
lcall
ss
aad
xchg
mov
cwtl
xchg
cmp
adc
xor
adcb
ret
sbb
and
test
bound
jmp
inc
mov
shrl
or
pop
mov
dec
xor
xor
and
test
jg
pusha
orb
cmpsl
jmp
jnp
clc
or
cs
xchg
push
nop
arpl
inc
gs
mov
push
lock
test
mov
shll
mov
sbb
sub
subl
inc
out
iret
sub
mov
pusha
xor
loop
mov
xor
xchg
dec
lret
rorl
mov
pop
pop
jle
imul
cltd
cwtl
dec
jle
adc
adc
dec
or
popf
add
xor
cmc
sbbb
add
adc
xor
inc
push
sbb
or
int
rcrl
add
pop
aad
scas
and
nop
shr
sbb
mov
rdmsr
mov
movsb
push
aad
out
jl
mov
leave
sub
sbb
ret
lahf
pop
out
or
fidivl
jne
fwait
push
fwait
repnz
ss
jp
insl
scas
shll
inc
cli
lcall
aad
adc
fsts
rcl
cmc
xchg
jb
subb
xchg
inc
and
and
mov
and
xchg
in
mov
sbb
mov
das
mov
xor
adc
and
fsubs
mov
adc
or
sbb
inc
jo
jns
mov
xor
mov
leave
outsb
flds
out
das
add
xchg
jg
add
xlat
sub
leave
scas
repnz
push
xor
mov
pushf
mov
sub
fs
ja
xor
rcrl
in
into
xchg
loop
pop
xlat
jmp
cmpsb
fadd
inc
rcl
testl
and
out
sub
jno
mov
add
sbb
add
in
mov
testb
cmp
pop
mov
jle
jnp
inc
adc
lret
addr16
lods
push
aam
loope
pop
jbe
push
gs
dec
xor
xor
scas
mov
xor
sbb
stc
sbb
and
xchg
push
fs
cmp
in
xor
sub
mov
cwtl
popf
mov
rorb
int3
sbb
or
cmc
jno
jb
inc
push
lods
sub
scas
imul
and
decb
jbe
mov
inc
add
mov
mov
cmp
add
mov
cmpsl
je
mov
push
pop
mov
pop
add
pop
mov
cmpsb
cwtl
and
sahf
fmuls
jae
push
xchg
shl
fdecstp
enter
cmpsl
dec
hlt
popa
pushf
cli
packsswb
cmp
xchg
and
or
push
xchg
or
leave
fdivl
test
sbb
mov
jbe
mov
cld
lret
outsl
cs
jb
scas
mov
gs
stos
add
bound
jnp
dec
lds
cmc
add
or
rorb
mov
stos
pop
mov
sbb
xor
shll
test
lcall
push
push
call
or
and
fs
jne
sbb
stos
fmull
fdivl
popf
das
shlb
jne
push
mov
inc
jecxz
cld
clc
push
push
scas
xor
mov
and
pusha
adc
test
or
mov
jno
cltd
lahf
mov
data16
sbb
push
cmp
cmp
xchg
fwait
and
jle
imull
fiadds
pop
pop
jb
push
pop
inc
dec
cmp
cmc
into
cmp
mov
iret
stos
and
popf
lahf
sub
daa
push
dec
dec
outsl
xchg
mov
fbstp
mov
bound
dec
sub
sbb
fwait
lcall
shr
call
cmp
ret
mov
jecxz
into
xchg
mov
mov
or
sbb
cmpsb
pop
pusha
outsb
jg
sar
gs
popa
jmp
cmp
popa
ja
enter
bound
cwtl
lock
lds
mov
shll
cmpsb
xchg
into
lret
int
cwtl
add
aaa
push
xor
push
xor
fists
push
dec
sub
sbb
lret
jo
lcall
add
and
push
testb
sub
xchg
iret
bound
adc
jb
subl
out
adc
les
inc
mov
loope
lcall
sub
xchg
out
clc
mov
adc
and
jo
jmp
lods
cltd
gs
pop
push
pop
bound
subl
out
dec
insb
xor
push
mov
or
int
scas
push
and
or
sbb
mov
mov
xchg
jae
sbb
in
rorb
nop
dec
insb
push
in
and
pop
xorl
xor
adc
andl
js
mov
adc
pop
call
cmpsb
fbld
icebp
xor
rcr
mov
fwait
mov
ja
adc
movsb
lock
inc
pop
pop
xor
push
lahf
movsb
jge
jnp
test
hlt
mov
pop
mov
push
sbb
push
cltd
fisubs
push
cmp
daa
test
sbb
add
popf
ljmp
repnz
sti
lea
test
sti
xor
pop
dec
icebp
pop
jb
add
fdivs
pop
lods
daa
dec
ret
push
lret
xchg
ret
loop
xlat
out
std
mov
xor
lea
mov
mov
test
pushf
adc
enter
js
inc
rcrl
hlt
aas
sub
out
cld
popa
inc
push
ds
xchg
imul
push
jg
adc
enter
adc
jmp
test
call
popf
xchg
fdivl
add
xchg
and
pop
jp
addr16
iret
rcl
push
out
lahf
mov
dec
jge
ds
lret
fwait
in
data16
aam
jns
test
mov
adc
mov
ljmp
mov
jl
cmp
mov
int3
adc
cmp
int
mov
data16
fsub
test
std
mov
xchg
pop
push
roll
iret
jp
add
sbbb
lods
lock
js
jl
jl
cmp
cltd
lcall
sbb
xchg
iret
fcmovnb
sub
call
inc
popf
adc
cmp
xchg
mov
jmp
dec
aad
ds
into
adc
sbb
mov
xor
lret
imul
mov
and
sbb
mov
or
rcrl
mov
dec
xor
mov
arpl
xchg
movb
cmp
rcpps
sbb
in
andb
xchg
loopne
fbld
adc
lds
add
in
out
or
loop
nop
mov
sti
divb
cmp
sbb
xor
push
mov
leave
pop
and
cwtl
pop
loop
test
inc
ficomps
mov
sbb
das
ret
mov
push
test
lcall
std
jns
jmp
cmp
into
pop
fs
adc
xchg
push
stos
jge
jb
cmp
pop
outsl
mov
sub
ds
stos
xor
inc
push
stos
push
jl
or
dec
jmp
pop
dec
pop
jl
sub
popa
pop
fcmovnbe
jmp
arpl
aaa
xchg
cmp
iret
cmp
dec
lret
mov
pop
xchg
push
lret
imul
jo
push
lods
or
mov
fbstp
pop
mov
aam
pop
inc
jmp
lds
and
push
push
in
test
andb
popfw
sbb
jle
sbb
outsl
jmp
es
lods
arpl
jb
dec
jne
mov
adc
push
push
movsb
fwait
inc
sub
ja
sbb
jb
sbb
push
subb
rol
or
sbb
imul
adc
jnp
mov
sub
in
or
je
xor
adc
sti
xor
xchg
shr
cwtl
push
lret
lods
outsl
rcrl
pusha
in
push
mov
mov
add
test
aaa
push
pop
mov
out
mov
push
mov
jbe
test
sbb
ljmp
int3
jbe
jbe
xchg
fs
pop
xchg
fwait
xlat
pop
lock
adc
inc
cltd
cli
pop
movsl
mov
pop
stos
xchg
rorl
aad
aas
push
aas
sbb
xchg
inc
insl
dec
push
xchg
dec
push
repnz
push
cld
pop
sbb
xchg
cmc
fs
lods
jo
aaa
int3
mov
and
lods
push
sbb
dec
cli
pop
xchg
mov
popf
sub
cwtl
pop
inc
pop
loope
sbb
inc
out
adc
jnp
cwtl
xor
jg
hlt
aaa
mov
fistpl
movsb
repnz
loopne
cmc
pop
adc
jle
rcrb
sub
std
cld
fstpt
fcmove
and
notl
push
mov
jo
dec
sub
out
out
pop
int3
stos
in
cmp
jmp
dec
xchg
sahf
lcall
jae
psubusw
jbe
nop
cmp
dec
dec
rol
pop
push
sub
ret
fwait
inc
jg
fistpl
mov
xchg
mov
adc
add
sahf
lret
sub
sub
insb
cmp
push
cmpb
gs
dec
jbe
fadd
dec
xchg
test
test
xor
inc
push
arpl
mov
inc
mov
insl
pop
dec
mov
lods
shrb
dec
stos
mov
cmp
adc
sub
adc
rcrb
cld
push
repnz
fisttpl
popa
stc
or
addr16
cltd
test
ljmp
ficomps
arpl
nop
imul
add
push
lret
sarb
daa
dec
jno
push
inc
jne
mov
mov
dec
inc
jmp
int3
leave
test
sbb
imul
shl
fucomi
test
jmp
lods
rorb
repz
xchg
dec
imul
push
adc
cmp
adc
lea
sub
inc
rorl
or
pop
or
out
ss
loopne
stos
repnz
mov
or
mov
inc
xor
add
cmp
lods
jl
mov
cld
jne
jb
rcl
xchg
cmp
inc
rcrl
call
or
es
mov
or
sahf
dec
and
lahf
push
aam
xchg
nop
movsl
inc
xchg
add
inc
sbb
add
inc
outsb
insb
fidivrs
sbb
jbe
cs
lds
inc
and
sub
in
pop
sub
fidivrl
pop
out
push
pop
sbbb
jns
ljmp
cwtl
jg
mov
sub
adc
in
adc
clc
jg
imulb
lretw
addr16
jnp
adc
pop
pop
add
mov
sbb
inc
inc
faddp
and
aaa
fisttpl
sub
mov
sub
nop
mov
out
rolb
fadds
test
cltd
fmull
inc
push
cmp
xchg
pop
sub
jecxz
jmp
dec
shrl
jb
clc
add
jno
testl
movsb
xor
ljmp
addl
add
push
sbb
dec
stos
mov
or
movsb
lods
sub
movsb
out
mov
jae
mov
rcll
pop
mov
mov
imul
jp
push
js
outsl
xorb
and
test
inc
and
mov
and
inc
mov
cwtl
pusha
lcall
call
jle
aam
jo
out
mov
in
mov
in
cli
roll
jmp
adc
sbb
mov
adcl
cwtl
lods
add
ljmp
or
mov
mov
pop
mov
adc
mov
cmp
cmp
loope
lahf
pop
mov
lahf
xor
rcrl
sbb
hlt
js
adc
cmpsl
mov
jg
add
in
nop
insl
mov
push
das
sbb
inc
call
bswap
das
or
cmpsl
aas
lods
xchg
and
add
dec
mov
or
and
scas
idivl
add
jmp
movsl
dec
hlt
mov
lret
mov
daa
pop
mov
les
mov
out
mov
mov
pusha
test
jno
jge
xchg
in
cmp
into
pushf
sbb
mov
jle
in
jo
and
iret
popf
push
fildl
xchg
push
xorb
cmc
push
scas
mov
mov
mov
jp
mov
hlt
mov
int
xor
adc
leave
inc
jne
fstp
xchg
data16
repz
imul
cli
outsb
pop
inc
push
pop
sub
and
icebp
mov
lds
movsl
sbb
dec
push
enter
lods
rorl
ja
test
stos
xor
xchg
lcall
imul
rcr
push
lds
nop
rcrl
out
imul
push
test
into
std
inc
mov
pop
xor
seta
mov
inc
sub
mov
dec
push
fs
cmp
add
jp
xor
jno
aas
sub
inc
stos
fwait
cmc
mov
iret
sbb
jbe
js
sub
insb
out
cmp
add
sub
popa
test
mov
push
shlb
jns
jge
push
cmp
repnz
notl
adc
xchg
in
jno
popa
jp
in
push
or
scas
lcall
add
insl
syscall
negl
sarb
outsl
and
push
subl
jl
cli
jns
rcrl
sbb
shll
shrb
mov
mov
mov
loop
pushf
push
imul
hlt
data16
dec
lret
je
mov
test
pop
movsb
pop
cmp
jb
lret
lods
imul
push
and
je
aam
cmp
bound
and
test
sti
pop
imul
jb
jnp
jae
fsubrp
in
mov
rclb
lods
or
add
push
or
scas
insl
inc
inc
dec
mov
shll
dec
sub
repnz
push
xchg
addr16
jecxz
pop
enter
decb
cmpsb
dec
shll
mov
data16
lcall
mov
mov
or
adc
data16
jl
stos
ror
xor
cltd
mov
mov
in
jl
pop
sub
pushf
mov
adc
ret
paddsb
mov
jae
and
xchg
xor
mov
nop
mov
mov
pop
andb
inc
sbb
mov
adc
ror
push
es
mov
dec
cmp
jecxz
mov
fldcw
push
or
bound
leave
rcrl
in
test
andb
daa
mov
dec
push
add
inc
fistps
call
xor
shl
cmpsb
ss
mov
mov
push
pop
lcall
mov
cmpsl
fdivrs
int3
cmpsb
outsb
sbb
cmp
jge
call
cltd
and
adc
rcrb
cmp
imul
mov
shl
fsubp
inc
inc
aam
es
es
ss
push
add
lret
sbb
or
push
cmc
std
jne
and
push
pop
popa
into
or
push
icebp
lods
inc
out
leave
jbe
xor
fstpl
xor
fwait
test
or
cli
insb
in
fcomps
data16
pusha
mov
sahf
insb
pop
sub
mov
out
mov
pop
sub
jne
xor
imul
loope
jmp
dec
xor
jne
xchg
mov
jae
imul
out
test
jne
sbb
jb
pop
sahf
daa
xchg
arpl
mov
lods
jp
addr16
xlat
aaa
mov
xchg
adc
je
xchg
movsb
int3
shlb
insl
add
mov
movsb
arpl
push
jnp
pop
mov
loop
or
mov
int
jp
loope
test
iret
orb
sbb
mov
mov
cmp
add
out
enter
and
stos
pop
sub
xor
mov
int3
movsb
lods
cli
test
adc
push
lds
maxps
idivl
fidivl
bound
and
jp
out
sub
jmp
cwtl
cmp
xor
icebp
addr16
xor
jns
adcl
or
aad
mov
lret
push
lahf
test
loope
test
popa
sbb
jg
lcall
xlat
sub
in
xor
repz
sub
xor
ret
or
xchg
fcoml
xchg
mov
push
push
dec
add
inc
pop
mov
addr16
lods
dec
out
xchg
enter
rcr
mov
adc
mov
mov
xchg
neg
or
jne,pt
cmp
jmp
in
cmp
and
lock
lahf
fldenv
into
ja
xor
movsb
sub
nop
in
aad
jno
inc
cmp
ret
inc
repnz
mov
mov
mov
xchg
or
sub
and
lods
mov
jae
jecxz
pop
sbb
outsl
adc
addr16
or
mov
inc
adc
mov
push
xlat
sbb
rorb
sbb
adc
dec
jne
roll
jnp
loope
jg
in
aas
push
hlt
mov
pop
mov
neg
xor
in
mov
pusha
push
stc
divl
sahf
scas
arpl
hlt
outsb
clc
sub
out
sbb
adc
lods
lea
push
jbe
das
xor
cwtl
mov
rcrb
inc
jp
lea
xchg
setnp
fdivrl
xchg
push
fisubrl
cmp
daa
sarl
jmp
mov
dec
orl
dec
test
pop
push
aas
aad
loop
loopne
dec
ret
push
and
gs
push
inc
sub
out
shll
dec
mov
adc
and
outsb
mov
add
fistpll
bound
outsb
fldcw
lock
sub
inc
stos
mov
lcall
jecxz
mov
mov
clc
mov
cmpsb
aas
jl
cmp
pop
mov
and
shll
movsl
inc
dec
push
int
rorl
and
lods
push
sub
addr16
insb
pop
lds
aaa
xor
sbb
pop
mov
pop
es
test
lods
mov
jle
mov
and
sub
sbb
leave
ds
fcoms
stos
insl
stos
out
mov
push
cld
daa
pusha
jg
adc
shrb
dec
sub
fstp
mov
adc
lret
jmp
lea
loop
movsl
in
mov
xor
push
or
shl
ss
sbb
pop
popa
mov
xor
dec
andl
mov
mov
add
jns
sbb
ss
pushl
cld
scas
arpl
lods
xchg
movsb
dec
jg
imul
pop
xchg
pop
shl
pusha
sbb
jmp
test
mov
xchg
movsl
enter
mov
aam
ret
push
ret
imul
inc
xor
adc
es
outsl
aam
push
cmc
cmc
gs
adc
loopne
push
ret
loope
aad
pop
ja
jae
cmp
mov
pop
ret
cmpsb
jbe
or
test
jmp
cmp
stos
sub
dec
adc
clc
push
dec
push
pusha
cmp
push
int
out
aas
jg
bound
adc
ret
push
pop
xlat
jo
lret
test
sub
push
sbbl
ds
roll
mov
jne
or
pop
outsb
and
adc
ffreep
cmp
sbb
mov
sbb
jno
mov
jae
shll
rolb
clc
test
mov
fwait
int3
scas
add
shr
inc
lret
mov
inc
push
in
inc
mov
jg
cmp
mov
mov
roll
mov
fisubrl
rcrl
mov
in
lcall
mov
sbb
icebp
clc
push
je
and
rolb
je
rcrl
aaa
in
ljmp
inc
xor
sahf
icebp
and
pop
push
iret
dec
inc
je
jns
and
mov
push
insb
dec
cmpsl
pop
push
push
in
mov
in
imul
or
outsl
div
mov
cmpsl
or
inc
rcrb
sub
fisubl
dec
cwtl
xor
dec
sahf
int
mov
ja
jmp
push
data16
sbb
into
sbb
or
push
add
cli
sub
ficomps
stos
cs
lahf
or
xchg
data16
int3
addb
push
adc
mov
and
sbb
std
lods
jno
bsf
aas
mov
mov
shl
push
inc
mov
sbb
inc
add
loop
data16
mov
testb
loopne
push
add
dec
push
adc
test
fbstp
lcall
cli
popl
test
jno
adc
pushf
or
out
add
icebp
loope
stos
lea
push
ja
or
and
daa
and
dec
jmp
loope
nop
cmp
and
sti
or
in
mov
sub
xchg
sahf
dec
pop
push
push
lods
mov
cmpb
xchg
out
push
mov
push
fldcw
xchg
and
mov
clc
movsb
cmc
adc
or
mov
outsb
arpl
arpl
ret
shrl
dec
frstor
sbb
sbb
ds
lock
sub
dec
add
mov
xor
gs
and
lcall
mov
mov
aam
fnstcw
lods
jno
test
push
pop
push
pop
mov
out
stos
ret
cmp
test
xchg
leave
fisubl
cmc
inc
jno
in
cs
clc
push
fwait
shll
cli
cmc
sbbl
adc
mov
xchg
xchg
xorb
mov
nop
lods
lock
aas
push
sar
or
fildll
or
cmpsb
xchg
aas
shll
cltd
inc
jmp
xchg
lea
into
push
sbb
add
shrl
mov
inc
daa
xchg
aam
jns
test
cs
ja
shrb
divb
insb
sub
inc
bound
jnp
mov
out
cmpsl
and
ljmp
jns
cmpl
arpl
insb
or
pop
sti
push
push
xchg
mov
shrl
fwait
xchg
or
pop
sub
pop
aam
xor
fcmovnbe
push
mov
mov
inc
test
inc
loopne
xchg
mulb
and
fists
in
out
lcall
jo
into
mov
xchg
cmpl
pop
mov
sbb
and
out
test
push
dec
add
rcrb
xchg
xchg
aaa
out
arpl
jle
mov
out
xor
loop
movsl
mov
cld
pop
pusha
in
sahf
test
and
cmp
pop
push
repz
sub
mov
adc
rorl
jbe
jmp
inc
jg
popf
add
or
xchg
lret
in
popf
enter
inc
mov
cmp
mov
and
lods
pusha
adc
and
les
orb
add
push
add
cmpl
stc
mov
int3
cmpl
pop
in
mov
pop
xchg
aaa
adc
dec
aad
mov
pop
std
inc
out
aam
cld
inc
dec
mov
scas
in
imul
clc
out
sbb
and
adc
or
pop
cmp
cmpsl
jp
andl
in
xchg
lds
pop
out
clc
jle
int3
sub
jbe
mov
cli
test
loope
dec
imul
pop
xor
jne
fisttpl
mov
js
adc
mov
or
or
jo,pt
cli
sub
cs
inc
aad
or
fidivs
loopne
aaa
fists
dec
pop
pusha
bound
in
loopne
punpckldq
iret
movsl
cmp
jle
xchg
add
out
cmp
sbb
hlt
xchg
cmp
scas
xor
inc
push
xchg
push
dec
lret
mov
arpl
leave
ja
cmpsb
xchg
inc
pop
jae
lock
test
mov
sbb
sbb
pusha
sub
gs
sub
push
test
cmp
cmp
or
loopne
repnz
mov
xlat
push
loopne
add
pushf
adc
sbb
cmc
aaa
and
xchg
jo
sub
ja
cwtl
lahf
ss
outsl
sub
and
sbb
jge
sub
jnp
inc
std
sub
lret
adc
jl
push
sbb
lds
xor
mov
push
jnp
mov
je
xor
out
popa
dec
loopne
mov
or
mov
or
ret
cmp
aad
mov
imul
pusha
push
gs
stos
mov
daa
in
jge
mov
insb
loope
jecxz
mov
adc
inc
mov
andb
mov
loope
icebp
rcrl
jmp
cmpsb
movsl
out
shrb
test
pusha
das
aad
jnp
sbb
flds
xor
mov
fwait
push
add
cwtl
cmp
test
sub
jno
xchg
icebp
jl
cld
inc
inc
jb
gs
inc
bound
cmp
in
cmp
sbb
pop
jmp
pop
stos
or
mov
cltd
mov
mov
pop
mov
push
movsl
pop
sarb
ret
pop
adc
push
adc
insb
dec
lret
lods
jns
fdiv
xor
shll
xchg
xor
inc
iret
jl
bound
pop
cmp
xor
xor
movsb
lret
and
inc
adc
xchg
mov
sti
sbb
fistps
adc
push
jl
cmpsb
mov
lret
mov
pop
aam
xlat
nop
xlat
sbb
fcmove
inc
std
dec
dec
loopne
mov
ds
dec
or
fsubr
push
and
mov
daa
cmp
scas
callw
push
movsl
mov
sub
mov
push
out
rol
daa
adc
adc
cmc
les
jno
fucomp
hlt
mov
xchg
pop
les
and
js
loopne
shl
rclb
aaa
dec
imul
ljmp
ret
inc
fstpt
roll
movsl
int3
inc
shll
cmp
push
popf
cmp
test
adc
xor
dec
and
inc
push
cltd
pop
jge
mov
push
arpl
xor
pop
movsb
gs
ficoml
leave
pop
mov
cmp
in
mov
pusha
push
outsl
sbb
loop
inc
popf
jae
es
pop
testb
cmc
mov
loope
xchg
lret
dec
push
dec
push
insl
cmp
rcll
je
dec
xor
lock
xchg
clc
inc
outsb
outsb
xor
stos
mov
int
or
add
jns
add
lods
mov
movsb
test
fwait
xchg
add
and
enter
pop
mov
andb
mov
or
mov
pushf
leave
dec
cmp
lret
nop
movsb
bound
push
scas
les
rcl
nop
push
mov
ja
cld
loopne
xchg
pushf
je
push
cmpsb
mov
inc
adc
xor
or
jno
mov
hlt
jecxz
dec
int
lahf
out
push
sti
mov
pop
dec
push
stos
or
shl
sub
fcomps
aam
add
xchg
je
xor
jnp
cmpsb
leave
enter
imul
pop
rol
jl
and
sub
adc
arpl
mov
xor
xor
fistl
jg
sub
hlt
dec
jo
xor
and
sbb
push
in
jae,pn
push
lret
lods
aad
inc
pop
scas
out
pop
popf
and
dec
addr16
fisubrl
roll
mov
aas
jae
ss
shrb
push
pop
scas
cld
aad
cld
push
sbb
test
sub
mov
in
shrb
ja
push
mov
je
lods
addr16
mov
orb
movsl
sbb
xor
jp
aam
or
jno
int
jnp
xchg
or
sub
out
js
in
add
repnz
pusha
xchg
lahf
cmpsl
icebp
loop
mov
or
add
inc
pop
cltd
sti
push
mov
adc
ficomps
jl
pop
std
cltd
sub
jmp
gs
fwait
add
bound
loopne,pn
fwait
lret
jns
jmp
lds
jle
ja
push
fs
jle
jecxz
push
arpl
pop
movsb
and
dec
sbb
lcall
push
sub
cmc
jle
stc
test
jle
add
xchg
xchg
push
les
jbe
jno
lods
mov
loopne
fdivl
mov
insl
mov
add
rorl
push
pushf
addr16
arpl
inc
pop
aas
ja
std
mov
movsb
cmp
pop
iret
decb
dec
mov
cmp
sub
jae
push
sbbb
fisubrs
sbb
inc
adc
sbb
inc
sub
push
insb
sbb
lret
xchg
mov
dec
into
mov
test
push
sub
mov
lock
push
adc
xchg
sub
inc
ljmp
xchg
aam
xchg
sub
add
cmp
xchg
adc
cmp
jmp
aam
ficoml
mov
fstl
fst
or
or
cmp
lds
xchg
add
insl
es
inc
push
inc
repz
loop
inc
insb
lds
or
push
xor
push
dec
fnstenv
jecxz
out
inc
fbstp
jns
mov
out
push
dec
xor
sub
divb
sub
clc
hlt
mov
jecxz
or
scas
hlt
popa
add
cmc
stos
loopne
inc
mov
stos
pop
push
push
arpl
inc
mov
inc
xor
sub
push
xchg
cmpsl
cmp
rclb
xor
jle
les
pop
sti
in
test
adc
out
adcb
push
into
lcall
adc
add
cmpsb
xchg
push
fsubrs
sub
in
inc
pop
rclb
jle
movsb
sub
jae
sbb
xchg
xchg
adc
sub
or
clc
sbb
pop
fcmovnu
cli
dec
out
loop
shrb
jns
adc
insb
and
sub
xchg
sub
lds
imul
out
sbb
mov
loope
ret
fstpl
adc
rclb
mov
out
mov
dec
mov
insl
rorl
sbb
sbb
push
inc
or
pop
mov
inc
sbb
mov
inc
pusha
cmp
mov
or
sub
inc
cli
es
loope
xchg
mov
popf
jmp
test
je
in
out
les
mov
stos
aaa
leave
adc
push
aad
pop
push
or
xchg
je
sub
loope
jmp
scas
add
mov
out
mov
shrb
fistps
pop
cmpsl
stos
incl
mov
out
lcall
testb
push
lea
and
cmc
mov
jnp
test
daa
or
lret
popf
pop
push
push
ficoml
test
cmp
ret
xor
fdiv
js
xor
xlat
fs
push
dec
xlat
pop
mov
jl
aad
inc
mov
jg
in
cmp
adc
in
fwait
ret
cmp
push
cmpsl
sbb
imul
pop
inc
ret
push
scas
fdivrl
inc
outsl
movl
mov
adc
mov
and
fs
test
cmp
aas
js
mov
fidivl
pop
inc
and
sub
lods
adc
movsb
mov
cwtl
pop
aam
mov
int
sub
pop
jg
scas
aam
pushf
test
lods
xchg
dec
dec
rep
lock
jne
scas
jb
mov
mov
push
pusha
xchg
mov
jns
or
push
mov
call
add
pop
dec
mov
mov
mov
test
negb
xchg
jb
jle
mov
pop
inc
xor
cmpsb
outsl
jmp
xlat
ret
push
outsl
xchg
ja
sub
push
mov
mov
push
sbb
sbb
jno
adc
lahf
xchg
in
out
xchg
lods
add
jo
xor
jbe
les
pop
dec
aas
outsl
mov
cs
inc
xchg
add
mov
les
cmp
sub
xor
std
push
cld
sbb
inc
and
xorl
mov
push
sub
mov
xchg
mov
imul
push
push
movsb
pop
sub
mov
mov
push
pop
cmc
js
mov
pop
dec
ja
xchg
rcll
xchg
mov
push
out
cmpsl
mov
notl
stos
pusha
jecxz
hlt
xchg
mov
aam
cwtl
dec
dec
andb
jg
testl
xor
ss
or
loop
pop
out
adc
mov
fdivp
clc
lods
dec
jge
loopne
add
sti
inc
or
gs
or
bound
fdivs
xchg
sub
jb
dec
arpl
add
mov
je
nop
mov
inc
xchg
adc
push
leave
pop
sbb
fstpl
mov
aam
test
xchg
and
daa
enter
push
andl
shr
inc
or
into
lock
lret
mov
or
add
sub
xor
sbb
sub
mov
leave
adc
add
cltd
mov
dec
xor
push
icebp
mov
daa
repnz
jb
adc
cld
jbe
pop
mov
scas
imul
int
xor
xor
pop
stos
dec
sub
xor
push
ljmp
or
add
inc
fdivrs
sub
mov
shll
gs
sbb
lahf
out
pop
lock
push
dec
cmpsb
notl
and
mov
imul
pop
cmp
push
rorl
mov
ficomps
sub
cmp
imul
inc
jne
jb
in
inc
push
push
inc
push
pop
test
ret
jmp
pop
add
dec
fmull
popa
bound
mov
cmc
mov
xor
adc
addr16
lods
push
and
inc
lahf
fmuls
mov
add
xchg
in
and
mov
pop
fs
push
xchg
pushf
cwtl
mov
mov
shll
sub
jb
jecxz
sbb
dec
adc
mov
iret
add
mov
inc
mov
movsb
lahf
lea
jae
push
ror
sbb
dec
dec
dec
dec
jo
adc
push
fidivrl
sbb
mov
mov
nop
into
insb
sahf
add
push
fdivr
sub
fcoms
popa
inc
jnp
add
add
sbb
fcmovb
fwait
mov
cld
cli
orl
push
iret
inc
insl
sahf
jl
je
sub
jle
orl
jl
hlt
int
lods
lret
ret
jbe
xchg
mov
cli
dec
daa
out
inc
rorl
adc
cwtl
ret
iret
mov
ja
jmp
xchg
lds
mov
pop
sti
mov
mov
add
stos
mov
mov
scas
notl
nop
pop
xchg
dec
and
lds
stos
jg
call
push
lret
aaa
adc
jb
mov
jb
lahf
out
cmpsl
dec
adc
add
mov
add
ja
sub
xor
ficoms
int3
jo
xchg
lock
cmp
stos
dec
jae
sub
pop
mov
lods
cmp
insl
jbe
loopne
scas
fnstcw
or
mov
pop
pop
fimull
call
imul
push
sti
mov
xlat
mov
push
pushf
sbb
xchg
push
cmp
data16
outsl
je
int3
push
pop
test
inc
pop
aaa
pop
inc
jp
push
sub
add
push
add
cmpsl
cmc
sahf
or
cmp
push
repz
inc
add
pop
mov
add
inc
mov
fwait
rcrb
clc
imul
xor
je
xlat
je
cli
call
jg
mov
and
cmovne
mov
lock
mov
mov
imul
push
jno
and
movsb
mov
stos
out
addl
or
jl
rep
adcb
lock
cmp
mov
mov
adc
divb
add
int3
das
into
pusha
lret
ret
mov
push
shlb
fistl
outsb
loope
jb
push
push
insb
data16
adc
sbb
dec
popa
adcl
and
fwait
aam
mov
and
rcrb
xchg
sahf
dec
stos
sahf
cmc
jl
or
shll
jecxz
mov
test
iret
push
jb
in
sbb
test
add
sahf
test
out
jge
and
jae
adc
in
int3
pusha
xchg
dec
loope
push
cmp
adc
sahf
push
dec
and
inc
clc
cmp
mov
aad
jmp
cmp
push
call
mov
pop
xchg
xchg
loop
xlat
pop
xor
pop
jecxz
cmpsb
add
jo
sub
andl
and
cmp
jecxz
cmp
shrb
sbb
cmpsl
pop
cwtl
pop
push
stc
xor
fsts
popa
es
cmc
rorl
mov
enter
pop
ficomps
adc
xchg
mov
dec
sub
dec
lock
jmp
aaa
adc
lahf
cwtl
imul
jo
out
jno
sbb
xor
or
xor
dec
sbb
and
xor
pusha
mov
xchg
pop
mov
pop
mov
and
div
sub
out
inc
xchg
js
arpl
xchg
stc
call
outsb
jge
popf
xor
pop
lret
sahf
or
insb
fdivl
jnp
cmp
add
cmp
jo
mov
out
add
mov
adc
xchg
mov
popa
mov
mov
cmp
lods
rcrl
lods
out
add
sub
pop
adc
push
dec
mov
aam
sar
lret
mov
pop
inc
out
iret
mov
std
jae
mov
lock
adc
push
aaa
negb
insl
or
bound
jle
add
data16
xchg
jg
cld
enter
stos
cld
pushl
add
js
pop
jae
dec
sti
mov
jo
pop
push
sbb
sub
dec
fldcw
push
or
ja
push
cmp
popa
test
popa
mov
add
pop
sbb
aaa
call
loope
jge
mov
mov
mov
dec
pop
adcl
cmpb
or
sbb
mov
push
push
mov
outsb
cmpl
stos
cwtl
fisubrs
push
push
or
mov
xor
mov
outsb
and
pop
pop
and
inc
or
mov
add
mov
mov
xchg
pop
dec
into
leave
cmp
mov
push
or
stc
jge
fwait
test
lds
addr16
movsb
mov
mov
out
int3
scas
sbb
loope
testl
cltd
mov
push
out
and
jl
repz
xchg
push
repz
pop
aaa
not
mov
push
add
lret
lahf
inc
lods
in
aad
mov
daa
mov
mov
add
mov
jno
ret
dec
pop
push
cmp
lret
test
mov
vpor
mov
inc
lret
sti
cmp
std
jnp
pop
in
sbb
jns
cmp
movsl
add
ja
rcrl
cld
negl
or
jae
mov
xor
rclb
aaa
lods
and
xchg
push
fildll
mov
adc
test
popa
mov
mov
repnz
dec
loopne
inc
call
aaa
fisubs
icebp
add
out
push
lcall
adc
xchg
aam
push
call
sbb
mov
dec
push
idivb
adc
adc
push
rclb
mov
cmp
rcl
jg
sbb
push
jo
add
addr16
fnsave
mov
inc
jbe
out
nop
ja
flds
outsb
jmp
dec
sub
cmp
cmp
jmp
fidivs
lock
sub
sbb
mov
inc
add
repnz
subl
bndstx
mov
jno
js
and
das
leave
movsl
dec
popf
imul
mov
dec
cmp
mov
loop
xor
into
mov
test
mov
es
out
pop
inc
push
out
cmp
jbe
mov
scas
sti
loope
outsl
adc
fadds
inc
and
fs
or
add
movsb
push
int3
hlt
cmp
cmpsl
adc
arpl
cli
pop
shll
mov
scas
ror
mov
inc
mulb
pop
fldt
mov
stos
jae
mov
and
cmp
shrb
push
test
inc
xor
fmuls
out
sahf
jae
push
xchg
xlat
inc
movsb
mov
cmp
gs
sbb
sar
jbe
out
sarb
lods
hlt
push
cwtl
push
test
mov
lods
in
lahf
sub
or
insl
pop
addr16
in
movsl
aaa
sub
mov
insl
and
jecxz
cmp
cmp
clc
arpl
add
js
xchg
xor
xor
pop
ss
xor
fbstp
imul
jecxz
or
sbb
pop
loopne
sub
lea
mov
rcrl
push
ja
in
mov
mov
xchg
xchg
andb
push
adc
hlt
frstor
data16
nop
das
mov
push
test
jns
clc
stos
clc
test
dec
mov
pop
jp
sbb
pop
pop
push
push
ror
push
add
sub
inc
sti
inc
pop
xchg
mov
jnp
pop
cltd
or
cmp
cmc
sub
pop
call
mul
in
nop
pop
or
mulb
scas
std
aas
aas
enter
pop
cmp
sbb
out
pop
jge
leave
add
xchg
mov
jb
pop
adc
and
jnp
lock
pusha
negb
pop
sti
inc
sti
lret
arpl
or
jp
out
jo
sbb
pop
cld
cmc
cmp
mov
mov
imul
stos
jae
and
jno
out
inc
add
push
sub
imul
mov
divb
dec
mov
push
mov
inc
mov
add
lahf
add
push
pop
xor
aad
xor
adc
or
mov
shll
shrl
push
test
xchg
mov
and
dec
dec
pop
popf
jno
inc
xor
jb
dec
mov
ss
jae
aam
mov
cld
loopne
mov
push
xlat
mov
icebp
mov
nop
movsl
lcallw
pop
lea
div
or
mov
push
inc
pop
mov
sbb
push
push
cwtl
sbb
mov
sbb
adc
sub
push
add
push
pop
mov
test
imul
inc
addr16
pop
cmpl
jae
popf
push
pop
jge
sbb
pop
xor
out
and
lock
lret
push
sarl
into
xchg
mov
popa
push
bound
cltd
adc
or
push
movsl
add
pop
jle
sbb
adc
dec
push
into
cs
xchg
add
xchg
add
xchg
leave
and
jno
push
mov
les
pop
stc
pop
or
mov
jp
stc
mov
sahf
mov
mov
jb
scas
stos
cmp
push
mov
stos
add
std
divl
into
and
pop
imul
sbb
xchg
pushf
sub
mov
pop
add
inc
call
jo
jge
xor
out
xor
push
pop
orl
jle
in
and
inc
fidivs
sbb
mov
fwait
imul
push
cmc
lds
in
mov
das
imul
lea
mov
inc
xor
movsl
dec
mov
out
and
addb
sub
xchg
jo
stc
test
repnz
mov
imul
xchg
xchg
push
cmc
shr
mov
push
pop
jno
sbb
push
add
out
pop
cmp
addr16
pop
mov
outsl
dec
fwait
add
cmp
push
xchg
shll
out
movsb
and
inc
or
orl
nop
add
icebp
sbb
pop
call
dec
mov
out
arpl
pop
hlt
xor
mov
inc
and
mov
sub
cmp
add
pushf
iret
adc
xorl
xchg
dec
pusha
mov
fsubl
mov
xchg
int3
addb
test
cwtl
mov
pop
xchg
cmp
push
mov
insb
jb
jl
jne
jns
in
ds
add
inc
xchg
adc
xor
faddl
push
clc
mov
mov
sbb
arpl
cmp
sbb
cmpsl
jmp
jae
popf
enter
out
in
push
lahf
rclb
mov
ljmp
iret
pop
push
cs
and
in
mov
ja
cmp
call
cltd
adc
xchg
mov
sub
pusha
sbb
in
push
test
dec
fimuls
jecxz
dec
sbb
jbe
mov
mov
lcall
xlat
dec
stos
sbb
je
xchg
shrb
xchg
nop
lods
pop
pusha
out
dec
adc
jle
bound
je
subl
pop
aas
fdivrs
add
adc
mov
add
mov
xchg
adc
mull
or
mov
adc
mov
or
inc
xchg
jge
cmp
mov
jecxz
stos
loope
mov
add
add
pop
lods
leave
push
mov
sbb
add
fistpll
xchg
sub
lret
testb
mov
scas
jg
mov
dec
stc
xor
arpl
cmpsb
sbb
je
icebp
popf
je
pop
imul
sub
cmpl
jno
repnz
bound
push
jmp
cmp
xor
arpl
or
dec
inc
inc
jb
call
adc
repnz
xor
or
stos
insl
nop
mov
ss
cmc
xchg
push
jecxz
jbe
mov
dec
push
testl
adc
call
aaa
sbb
jns
jecxz
dec
mov
mov
aaa
mov
jmp
add
jnp
add
loopne
jae
cmp
cltd
ret
clc
out
test
lock
push
jl
je
inc
fnstenv
lcall
stos
fnstenv
loopne
addr16
cmp
xlat
add
cmp
repz
movsb
fldenv
xor
jge
movsl
cmp
movb
or
push
xor
jo
or
divb
mov
imulb
cmp
push
xlat
out
shll
not
add
add
sbb
add
add
push
add
add
add
add
add
cmpb
add
add
add
add
add
add
push
add
add
xor
add
add
add
add
jle
add
nop
movsb
add
add
add
les
mov
jmp
pusha
push
mov
sub
xor
movl
movl
movl
movl
mov
mov
pusha
mov
mov
mov
mov
mov
mov
mov
add
add
mov
lea
mov
mov
mov
add
dec
nop
test
nop
je
lea
mov
add
push
push
mov
add
mov
pop
repz
test
pop
jne
mov
add
mov
movzwl
mov
add
mov
add
mov
jmp
movl
popa
mov
xor
cmp
je
mov
cmp
je
lea
push
push
movb
movb
movb
movw
nop
nop
movw
nop
nop
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
nop
nop
mov
nop
nop
call
nop
add
inc
add
add
pop
mov
sub
push
push
mov
push
push
push
call
pop
mov
push
push
push
push
inc
mov
push
push
push
mov
add
mov
mov
add
mov
pop
mov
mov
add
push
mov
add
call
push
push
mov
push
push
call
pop
push
push
push
pushl
push
push
push
mov
push
push
call
pop
push
push
push
pushl
pushl
mov
push
push
pushl
push
pushl
mov
add
push
push
push
mov
call
pop
mov
add
mov
mov
push
mov
push
mov
push
mov
push
xor
mov
rep
mov
lods
mov
lods
mov
add
lods
mov
rep
dec
jne
pop
pop
pop
mov
test
je
mov
inc
sub
cmp
ja
mov
cmp
jne
xor
bswap
add
sub
stos
loop
push
lods
test
je
mov
add
push
call
mov
lods
test
jne
lods
test
je
sub
lods
test
jne
sub
push
push
call
stos
jmp
and
push
push
call
stos
jmp
pop
pop
ret
add
fimuls
cmpsl
sub
jp
loope
jl
fbld
sbb
adc
xchg
popf
dec
repnz
daa
pop
jno
insl
lret
jl
lods
xchg
inc
call
gs
nop
sub
addr16
jecxz
int3
or
sub
enter
jb
push
mov
and
mov
stc
out
xor
adc
add
insb
adc
out
pop
mov
sbb
outsb
stc
insb
sbb
lods
inc
jecxz
cltd
stos
out
lcall
push
dec
outsl
sti
idivl
or
mov
test
adc
xchg
sub
xchg
nop
dec
jecxz
rcrl
jnp
repz
rolb
sub
je
cmp
fisubrl
outsl
and
fisubrl
xor
push
sti
icebp
mov
lods
fbld
dec
ret
pop
xchg
cmpsl
mov
fcomps
mov
in
mov
cltd
mov
lret
std
ss
sbb
xor
sbb
add
fnstsw
andl
mov
loop
cmpsl
or
aaa
xchg
cmpsl
clc
test
sub
mov
into
fwait
add
or
rol
ljmp
push
sahf
loope
scas
call
into
sbb
dec
push
and
bound
test
les
fadd
cmp
dec
popl
inc
xor
sub
mov
sub
adc
sbb
sbb
into
mov
mov
imulb
fnsave
int3
mov
jge
mov
ss
popf
or
jns
inc
arpl
push
shll
mov
push
out
mov
outsb
fisttpll
jmp
out
iret
push
add
pop
movsl
insl
xor
add
leave
insl
xchg
std
add
imul
inc
dec
mov
xor
push
insb
shrb
fistl
lahf
lret
loop
dec
sbb
jl
cmc
in
or
pop
in
sti
out
inc
cmp
inc
push
je
add
inc
test
push
test
scas
es
mov
emms
dec
cmpsb
pusha
pusha
mov
push
xchg
xchg
xchg
movsb
sbb
xchg
cmp
xchg
xchg
popl
jp
cltd
loopne
push
aaa
inc
insb
out
and
fs
mov
jns
cmpsb
sub
push
dec
inc
push
jae
sub
inc
fs
xchg
fwait
mov
bound
sbb
mov
adc
xor
inc
in
fnstsw
fs
aas
pushf
addr16
jne
mov
fwait
leave
cmp
out
lret
lods
in
ret
paddsw
ljmp
jbe
andb
sub
aas
cmp
or
jp
and
xchg
mov
xchg
ss
cmp
cmc
callw
int3
push
sahf
ja
mov
insl
in
test
inc
shrb
sti
bound
mov
mov
popf
movsl
lock
out
and
fstps
push
imul
leave
fidivs
leave
push
sbb
mov
int3
fldenv
cwtl
imul
lahf
adc
and
sbb
cld
nop
imul
leave
mov
mov
fiadds
inc
stc
sarb
ljmp
and
test
fldcw
aas
sbb
in
inc
in
jp
sub
push
push
inc
push
sbb
int
iret
es
std
adc
dec
xor
lock
mov
pushf
fldt
xor
lret
pushf
int
add
adc
sbb
mov
mov
cmp
adc
push
cmpsl
jl
icebp
iret
mov
xchg
push
push
sub
and
aad
int3
inc
add
xor
inc
cmp
movsb
dec
ds
mov
bound
cs
dec
in
test
sbb
mov
jmp
adc
mov
insb
mov
cwtl
je
jge
jbe
movsl
xorl
xchg
mov
ret
sub
in
outsl
sub
ret
xchg
jmp
imul
orl
mov
add
jae
cmp
sti
inc
mov
xor
mov
stc
ljmp
cld
inc
xchg
mov
rcl
jnp
sbb
sub
clc
imul
mov
int
cld
pop
sbb
icebp
clc
push
dec
stc
int3
outsl
in
cwtl
xor
stc
xor
imul
aaa
jnp
mov
jmp
iret
rol
fwait
jb
dec
push
test
ret
shrl
adc
cmp
inc
push
movsb
and
pop
cmc
sbb
push
aam
jmp
lods
rolb
sbb
jnp
lret
dec
mov
les
cmp
and
and
in
pusha
or
push
pusha
pop
aad
push
out
es
jne
cwtl
insb
ret
lcall
sbb
sbb
icebp
leave
and
imul
in
out
in
inc
dec
outsl
cmp
inc
add
pop
icebp
adc
movsb
int3
adc
dec
pushf
pop
mov
lret
shll
xlat
rcrb
mov
push
aad
icebp
sub
mov
js
fistpll
dec
cmc
dec
loop
jno,pn
xchg
or
adc
arpl
in
bound
iret
in
inc
lds
sub
xor
fisttpl
cli
jae
cmp
or
std
pop
fmull
mov
flds
loope
push
aaa
add
out
fldcw
int3
dec
stc
mov
pop
and
fnsave
sahf
sub
adc
popa
dec
or
insb
outsb
mov
inc
or
cmp
rcrb
and
cmp
inc
add
pop
xchg
inc
mov
in
mov
pushf
pop
popa
fmul
aam
push
xor
cs
dec
in
js
cmpl
adc
rolb
push
clc
mov
jl
mov
out
sbb
bound
inc
int3
push
aad
adc
test
adc
push
aaa
fsubrl
mov
cmpsb
pop
jp
stos
dec
stc
hlt
inc
clc
lock
mov
mov
std
xchg
mov
rcrb
mov
les
scas
pop
mov
mov
cmp
rorb
fidivrl
adc
test
cmc
or
in
pop
shll
inc
xlat
add
mov
cli
push
shrb
out
adc
cs
dec
out
inc
ret
mov
jb
adc
dec
add
int3
pushf
fwait
mov
adc
and
sub
xchg
pop
mov
repz
leave
dec
mov
fdivrs
dec
lea
or
jne
xor
out
sar
adc
mov
scas
in
fsubs
add
cmc
push
test
loop
cwtl
lret
jb
addr16
and
jmp
ss
mov
popa
stos
out
inc
ljmp
push
add
ret
xchg
roll
lock
sbb
cmp
and
mov
adc
add
sar
mov
or
push
cmp
cltd
mov
dec
ret
xchg
aaa
outsl
ds
cmp
pop
jge
cmp
orl
jmp
xor
int3
lds
dec
in
cld
fsubs
inc
inc
lret
scas
dec
or
lea
xchg
sbb
and
mov
xchg
push
xor
add
mov
fsubl
jnp
xor
rorb
sbbl
int
and
scas
adc
test
test
dec
xor
std
push
movsb
les
inc
inc
outsl
into
loopne
cmp
xchg
fs
jbe
inc
das
js
cwtl
das
outsb
push
dec
call
or
pusha
push
aas
cmp
push
mov
xor
testb
jle
mov
cmp
xor
fidivrs
mov
mov
cmp
or
or
cmpsl
jo
pop
sbb
loopne
decb
nop
jnp
dec
movsb
jno
aaa
xchg
xor
xchg
inc
in
add
out
pop
inc
aad
jle
aas
mov
xor
push
enter
icebp
push
jno
imulb
xor
rcrl
or
mov
cmp
pop
cmp
fwait
aad
inc
and
inc
call
lret
pcmpgtd
stos
mov
imul
add
push
mov
or
icebp
addr16
cli
in
adc
mov
add
cmp
repnz
mov
mov
add
pop
lret
pop
xor
repz
rclb
call
push
add
in
out
and
stc
cli
mov
je
jmp
test
out
pop
mov
in
inc
dec
xchg
pop
outsl
mov
cmp
mov
cmpsl
push
cmc
xor
pop
cmp
popf
into
add
and
imul
je
and
scas
sahf
mov
iret
cmpsb
xor
and
shl
movsl
cld
dec
sub
shlb
movsl
lods
repnz
add
pop
lret
jl
push
xlat
dec
outsl
pop
fnstcw
loopne
add
testb
xor
and
lea
sub
mov
mov
into
clc
stc
aam
dec
cltd
aad
push
popa
hlt
inc
mov
sub
mov
cwtl
or
xchg
ds
push
jle
ret
push
add
jl
sub
imul
jne
dec
dec
mov
xor
out
add
pop
iret
dec
and
subb
sbb
jl
mov
nop
mov
cwtl
repnz
jp
les
sub
dec
and
inc
out
packuswb
popa
sub
loopne
or
xor
cmpsl
in
mov
sbb
cmc
mov
xchg
pusha
rsm
dec
fs
and
dec
lods
out
das
and
call
nop
and
push
and
sahf
xchg
fildll
repnz
cs
sbb
pushf
add
sti
jge
out
stos
adc
mov
cmp
test
pop
pop
push
mov
hlt
pop
clc
lea
cmp
int3
movsb
popa
les
inc
xchg
mov
dec
rcrl
push
dec
cmp
mov
sbb
std
inc
and
jns
mov
mov
out
test
sbb
in
idiv
inc
add
outsl
xor
addr16
iret
stos
test
movsb
mov
push
sar
pop
movsb
mov
inc
fwait
mov
jp
iret
xchg
out
and
sti
sbb
jecxz
loop
lahf
inc
or
push
bound
xor
xchg
movsl
or
xor
cmp
adc
sub
inc
jnp
das
push
sbb
rcll
or
out
insb
in
push
cmp
cmp
cmp
xor
cmpsb
add
mulb
mov
jae,pn
mov
dec
sub
inc
push
std
es
sbbb
xchg
gs
dec
dec
mov
jnp
jmp
sub
lret
dec
push
popa
push
lods
mov
mov
clc
jbe
sub
out
out
mov
push
adc
cld
in
jae
xchg
push
and
xor
mov
out
movsl
mov
dec
pop
adc
insb
mov
cmp
and
mov
into
push
xor
jb
jg
sti
addr16
sbb
ss
mov
shlb
notl
mov
stos
imull
push
enter
jle
std
lcall
lods
lcall
jno
inc
adc
jno
jl
xor
pop
pop
sbb
or
sub
or
aad
aas
lcall
xor
out
dec
xchg
sub
rcll
stc
int
das
adc
mov
xorl
dec
jle
imul
inc
and
mov
cmp
cmp
fsubr
cmp
cmp
xchg
xor
shl
mov
jmp
xchg
test
inc
outsb
sub
jmp
int3
insb
sbb
punpcklbw
das
lcall
subb
xchg
addb
mov
ja
std
sarl
push
lock
les
in
mov
add
mov
bound
loope
sbb
push
popf
push
sbb
je
adc
dec
adc
push
call
ds
mov
mov
mov
inc
shrb
mov
fs
mov
je
out
sbbl
jne
mov
lods
mov
es
ss
fdivl
xchg
mov
lcall
pop
push
mov
mov
dec
jge
cmc
sub
push
fdivrs
xor
mov
sbb
sub
sub
std
out
mov
pop
shl
add
pop
cmp
loope
leave
loop
jns
test
cmp
cmovs
jb
aas
in
jbe
rcrl
arpl
inc
jl
out
mov
jge
orl
jge
or
xchg
lcall
xchg
push
popa
cmc
ficoms
xchg
test
psubw
roll
push
dec
inc
aas
faddl
mov
sbb
cmp
dec
pop
or
jae
cwtl
push
stc
sbb
sbb
in
inc
daa
cmpsl
rorl
pop
bound
sbb
aas
test
cmp
push
test
pop
cmpsb
fs
inc
dec
mov
mov
mov
xchg
mov
jbe
push
out
cltd
jbe
cmp
xchg
lds
dec
jmp
add
ret
fisubs
push
movsl
pop
mov
cltd
or
stos
add
pop
ret
mov
test
daa
movsl
jge
dec
fsubrs
mov
xchg
xor
aam
je,pn
shlb
sbb
cs
and
leave
cli
mov
sub
xchg
jge
mov
push
push
aad
mov
sub
gs
add
cltd
out
in
pop
add
dec
fwait
adc
pop
in
addr16
sbb
xchg
les
adc
or
out
mov
adcl
out
mov
sahf
dec
mov
sarb
adc
out
push
mov
inc
cmp
stc
add
adc
mov
xchg
stos
outsl
jno
fadds
out
cmp
js
enter
rcll
ds
mov
cltd
lods
jno
mov
cmp
pop
into
stos
inc
loopne
jle
and
or
aas
mov
mov
inc
mov
nop
subl
mov
add
pop
mov
les
fsubp
mov
les
iret
das
out
xchg
cmp
hlt
xor
je
lock
xor
sarl
mov
sbb
lods
outsb
mov
iret
lcall
gs
test
mov
iret
push
push
in
out
add
jb
inc
push
lods
lcall
hlt
fidivrl
push
test
lret
sbb
lcall
sti
or
adc
mov
fnstenv
idivb
jo
add
or
scas
addr16
lcall
push
idivb
xor
mov
shlb
cwtl
ja
push
popf
nop
jno
sbb
cmpsl
jle
mov
fs
cmp
in
cmp
mov
mov
push
insb
repnz
adc
cmp
pop
push
iret
fcmovnb
and
loope
mov
jmp
stos
cltd
add
inc
fcompl
aaa
inc
ljmp
in
mov
sub
pushf
ljmp
xchg
out
add
xchg
or
cmpsl
arpl
out
mov
popa
cmp
sbb
jecxz
adc
jae
rcrl
es
dec
std
shrl
scas
or
xor
jmp
lcall
add
int3
mov
or
stos
xchg
jl
sub
and
fstpt
sbb
adc
test
out
mov
or
push
pop
rcrb
fistpll
in
dec
lds
xchg
xchg
jnp
movq
adc
sbb
mov
jno
cmp
ret
dec
repnz
xchg
add
call
pushf
int
jo
inc
fdivrl
cvtps2pd
push
sbb
jmp
cld
pop
lahf
aad
and
std
push
xchg
in
lret
cmp
and
push
out
jns
in
pushf
cmp
ljmp
in
sbb
pusha
jp
push
rclb
imul
rorb
or
mov
jne
xchg
fstp
aad
fidivl
cmp
sub
xchg
scas
and
out
pop
pop
or
aas
mov
fsubr
jo
cld
sub
cwtl
jp
rcrl
rclb
mov
sub
shll
and
pop
pop
cltd
push
cmp
add
das
mov
cwtl
jmp
sbb
push
and
push
inc
bound
clc
pop
mov
dec
sbb
jp
std
mov
inc
or
das
mov
and
mov
int
sub
popf
or
add
lods
insl
lds
cmp
jecxz
dec
mulb
out
adc
fdivs
ljmp
jmp
lret
sub
cmp
pop
loopne
sub
sbbl
add
daa
in
rcr
lea
outsb
mov
pop
in
cmp
add
popa
adc
addr16
inc
xlat
hlt
mov
cmp
testl
jae
je
idivl
push
hlt
addr16
call
jg
push
sahf
repnz
clc
and
dec
fists
jle
lds
cmpxchg
adc
or
pop
mov
adc
lcall
movsl
js
in
sbb
mov
ljmp
pushf
movsl
sti
mov
xchg
xchg
jmp
add
mov
cmp
or
xchg
not
loope
stc
out
cmpsl
rol
dec
or
repz
pop
into
leave
lret
orl
jmp
jno
jae
into
icebp
in
stos
dec
sub
inc
lcall
inc
sbb
xlat
inc
sbbb
cmpsl
aad
pushf
test
pop
push
cmp
xchg
pop
mov
stos
fmull
sub
insb
inc
adcl
scas
mov
mov
mov
add
test
sub
es
cld
jno
cwtl
mov
sbb
lock
jp
fimuls
leave
rol
push
push
lea
push
andl
push
xchg
dec
inc
xor
cmpsb
dec
cwtl
nop
add
jnp
aam
ret
popf
imul
pop
xchg
repz
inc
pop
clc
decb
mov
cwtl
jns
cs
dec
test
repz
test
sub
mov
and
or
stos
or
cmp
adc
mov
stos
fimull
lds
lock
in
mov
xchg
shlb
jns
and
setbe
movsb
inc
push
enter
pushf
lret
mov
jecxz
adc
shld
loope
sbb
push
ljmp
cltd
xchg
and
movsl
scas
fidivl
adc
jno
data16
in
int3
sbb
jno
adc
and
sub
sbb
fwait
push
cwtl
mov
and
push
aas
out
icebp
dec
xchg
or
sub
push
xor
mov
jae
ret
lret
mov
icebp
inc
sub
ds
add
addr16
dec
into
es
ljmp
outsl
cmp
test
cwtl
mov
inc
imul
out
mov
out
popa
repz
call
jle
lock
cmp
cld
cs
cmp
mul
add
stos
push
or
xchg
cmp
push
xor
or
mov
test
sbb
out
dec
jecxz
pusha
sub
lret
add
pop
xchg
jg
or
mov
arpl
fdivrl
lcallw
mov
add
pop
pop
stc
jecxz
push
aam
ja
mov
xor
mov
in
adc
adc
add
push
mov
jge
cmp
hlt
fldlg2
cmp
mov
lret
xchg
les
es
addr16
lods
repz
cmp
mov
xchg
or
add
pinsrw
jg
leave
sub
std
and
or
pop
xor
aaa
fdivrl
insl
mov
and
mov
sbb
cmp
cmp
aad
jb
mov
xor
pop
push
testl
push
dec
repnz
test
repz
sub
or
mov
imul
adc
mov
mov
mov
shll
roll
scas
pop
lret
or
clc
imul
mov
and
inc
xor
test
mov
adc
outsl
mov
xor
sti
mov
push
mov
test
orl
ss
repnz
inc
mov
cmpb
es
mov
xor
aaa
cli
dec
mov
shrl
imul
push
sbb
in
sbb
mov
ja
jle
arpl
xchg
and
mov
scas
and
aad
into
cmp
xor
xchg
repnz
mov
ja
fistpll
cmpsb
loop
jg
mov
daa
out
cmpsb
arpl
dec
mov
jns
mov
std
jg
sub
pusha
insl
out
sub
jmp
adc
imull
mov
sub
jo
adc
mov
jae
mov
daa
fmull
xor
push
ja
lods
and
add
icebp
and
ds
mov
push
cwtl
inc
adc
sbb
pop
jle
daa
mov
lcall
outsb
test
xor
jns
fs
nop
dec
sbb
push
mov
addl
nop
mov
mov
cwtl
mov
cmp
mov
add
shlb
xor
and
adc
or
cmp
ss
jecxz
add
pushf
test
test
arpl
or
sti
je
cs
mov
xor
mov
pop
add
es
lcall
ss
aad
xchg
mov
cwtl
xchg
cmp
adc
xor
adcb
ret
sbb
and
test
bound
jmp
inc
mov
shrl
or
pop
mov
dec
xor
xor
and
test
jg
pusha
orb
cmpsl
jmp
jnp
clc
or
cs
xchg
push
nop
arpl
inc
gs
mov
push
lock
test
mov
shll
mov
sbb
sub
subl
inc
out
iret
sub
mov
pusha
xor
loop
mov
xor
xchg
dec
lret
rorl
mov
pop
pop
jle
imul
cltd
cwtl
dec
jle
adc
adc
dec
or
popf
add
xor
cmc
sbbb
add
adc
xor
inc
push
sbb
or
int
rcrl
add
pop
aad
scas
and
nop
shr
sbb
mov
rdmsr
mov
movsb
push
aad
out
jl
mov
leave
sub
sbb
ret
lahf
pop
out
or
fidivl
jne
fwait
push
fwait
repnz
ss
jp
insl
scas
shll
inc
cli
lcall
aad
adc
fsts
rcl
cmc
xchg
jb
subb
xchg
inc
and
and
mov
and
xchg
in
mov
sbb
mov
das
mov
xor
adc
and
fsubs
mov
adc
or
sbb
inc
jo
jns
mov
xor
mov
leave
outsb
flds
out
das
add
xchg
jg
add
xlat
sub
leave
scas
repnz
push
xor
mov
pushf
mov
sub
fs
ja
xor
rcrl
in
into
xchg
loop
pop
xlat
jmp
cmpsb
fadd
inc
rcl
testl
and
out
sub
jno
mov
add
sbb
add
in
mov
testb
cmp
pop
mov
jle
jnp
inc
adc
lret
addr16
lods
push
aam
loope
pop
jbe
push
gs
dec
xor
xor
scas
mov
xor
sbb
stc
sbb
and
xchg
push
fs
cmp
in
xor
sub
mov
cwtl
popf
mov
rorb
int3
sbb
or
cmc
jno
jb
inc
push
lods
sub
scas
imul
and
decb
jbe
mov
inc
add
mov
mov
cmp
add
mov
cmpsl
je
mov
push
pop
mov
pop
add
pop
mov
cmpsb
cwtl
and
sahf
fmuls
jae
push
xchg
shl
fdecstp
enter
cmpsl
dec
hlt
popa
pushf
cli
packsswb
cmp
xchg
and
or
push
xchg
or
leave
fdivl
test
sbb
mov
jbe
mov
cld
lret
outsl
cs
jb
scas
mov
gs
stos
add
bound
jnp
dec
lds
cmc
add
or
rorb
mov
stos
pop
mov
sbb
xor
shll
test
lcall
push
push
call
or
and
fs
jne
sbb
stos
fmull
fdivl
popf
das
shlb
jne
push
mov
inc
jecxz
cld
clc
push
push
scas
xor
mov
and
pusha
adc
test
or
mov
jno
cltd
lahf
mov
data16
sbb
push
cmp
cmp
xchg
fwait
and
jle
imull
fiadds
pop
pop
jb
push
pop
inc
dec
cmp
cmc
into
cmp
mov
iret
stos
and
popf
lahf
sub
daa
push
dec
dec
outsl
xchg
mov
fbstp
mov
bound
dec
sub
sbb
fwait
lcall
shr
call
cmp
ret
mov
jecxz
into
xchg
mov
mov
or
sbb
cmpsb
pop
pusha
outsb
jg
sar
gs
popa
jmp
cmp
popa
ja
enter
bound
cwtl
lock
lds
mov
shll
cmpsb
xchg
into
lret
int
cwtl
add
aaa
push
xor
push
xor
fists
push
dec
sub
sbb
lret
jo
lcall
add
and
push
testb
sub
xchg
iret
bound
adc
jb
subl
out
adc
les
inc
mov
loope
lcall
sub
xchg
out
clc
mov
adc
and
jo
jmp
lods
cltd
gs
pop
push
pop
bound
subl
out
dec
insb
xor
push
mov
or
int
scas
push
and
or
sbb
mov
mov
xchg
jae
sbb
in
rorb
nop
dec
insb
push
in
and
pop
xorl
xor
adc
andl
js
mov
adc
pop
call
cmpsb
fbld
icebp
xor
rcr
mov
fwait
mov
ja
adc
movsb
lock
inc
pop
pop
xor
push
lahf
movsb
jge
jnp
test
hlt
mov
pop
mov
push
sbb
push
cltd
fisubs
push
cmp
daa
test
sbb
add
popf
ljmp
repnz
sti
lea
test
sti
xor
pop
dec
icebp
pop
jb
add
fdivs
pop
lods
daa
dec
ret
push
lret
xchg
ret
loop
xlat
out
std
mov
xor
lea
mov
mov
test
pushf
adc
enter
js
inc
rcrl
hlt
aas
sub
out
cld
popa
inc
push
ds
xchg
imul
push
jg
adc
enter
adc
jmp
test
call
popf
xchg
fdivl
add
xchg
and
pop
jp
addr16
iret
rcl
push
out
lahf
mov
dec
jge
ds
lret
fwait
in
data16
aam
jns
test
mov
adc
mov
ljmp
mov
jl
cmp
mov
int3
adc
cmp
int
mov
data16
fsub
test
std
mov
xchg
pop
push
roll
iret
jp
add
sbbb
lods
lock
js
jl
jl
cmp
cltd
lcall
sbb
xchg
iret
fcmovnb
sub
call
inc
popf
adc
cmp
xchg
mov
jmp
dec
aad
ds
into
adc
sbb
mov
xor
lret
imul
mov
and
sbb
mov
or
rcrl
mov
dec
xor
mov
arpl
xchg
movb
cmp
rcpps
sbb
in
andb
xchg
loopne
fbld
adc
lds
add
in
out
or
loop
nop
mov
sti
divb
cmp
sbb
xor
push
mov
leave
pop
and
cwtl
pop
loop
test
inc
ficomps
mov
sbb
das
ret
mov
push
test
lcall
std
jns
jmp
cmp
into
pop
fs
adc
xchg
push
stos
jge
jb
cmp
pop
outsl
mov
sub
ds
stos
xor
inc
push
stos
push
jl
or
dec
jmp
pop
dec
pop
jl
sub
popa
pop
fcmovnbe
jmp
arpl
aaa
xchg
cmp
iret
cmp
dec
lret
mov
pop
xchg
push
lret
imul
jo
push
lods
or
mov
fbstp
pop
mov
aam
pop
inc
jmp
lds
and
push
push
in
test
andb
popfw
sbb
jle
sbb
outsl
jmp
es
lods
arpl
jb
dec
jne
mov
adc
push
push
movsb
fwait
inc
sub
ja
sbb
jb
sbb
push
subb
rol
or
sbb
imul
adc
jnp
mov
sub
in
or
je
xor
adc
sti
xor
xchg
shr
cwtl
push
lret
lods
outsl
rcrl
pusha
in
push
mov
mov
add
test
aaa
push
pop
mov
out
mov
push
mov
jbe
test
sbb
ljmp
int3
jbe
jbe
xchg
fs
pop
xchg
fwait
xlat
pop
lock
adc
inc
cltd
cli
pop
movsl
mov
pop
stos
xchg
rorl
aad
aas
push
aas
sbb
xchg
inc
insl
dec
push
xchg
dec
push
repnz
push
cld
pop
sbb
xchg
cmc
fs
lods
jo
aaa
int3
mov
and
lods
push
sbb
dec
cli
pop
xchg
mov
popf
sub
cwtl
pop
inc
pop
loope
sbb
inc
out
adc
jnp
cwtl
xor
jg
hlt
aaa
mov
fistpl
movsb
repnz
loopne
cmc
pop
adc
jle
rcrb
sub
std
cld
fstpt
fcmove
and
notl
push
mov
jo
dec
sub
out
out
pop
int3
stos
in
cmp
jmp
dec
xchg
sahf
lcall
jae
psubusw
jbe
nop
cmp
dec
dec
rol
pop
push
sub
ret
fwait
inc
jg
fistpl
mov
xchg
mov
adc
add
sahf
lret
sub
sub
insb
cmp
push
cmpb
gs
dec
jbe
fadd
dec
xchg
test
test
xor
inc
push
arpl
mov
inc
mov
insl
pop
dec
mov
lods
shrb
dec
stos
mov
cmp
adc
sub
adc
rcrb
cld
push
repnz
fisttpl
popa
stc
or
addr16
cltd
test
ljmp
ficomps
arpl
nop
imul
add
push
lret
sarb
daa
dec
jno
push
inc
jne
mov
mov
dec
inc
jmp
int3
leave
test
sbb
imul
shl
fucomi
test
jmp
lods
rorb
repz
xchg
dec
imul
push
adc
cmp
adc
lea
sub
inc
rorl
or
pop
or
out
ss
loopne
stos
repnz
mov
or
mov
inc
xor
add
cmp
lods
jl
mov
cld
jne
jb
rcl
xchg
cmp
inc
rcrl
call
or
es
mov
or
sahf
dec
and
lahf
push
aam
xchg
nop
movsl
inc
xchg
add
inc
sbb
add
inc
outsb
insb
fidivrs
sbb
jbe
cs
lds
inc
and
sub
in
pop
sub
fidivrl
pop
out
push
pop
sbbb
jns
ljmp
cwtl
jg
mov
sub
adc
in
adc
clc
jg
imulb
lretw
addr16
jnp
adc
pop
pop
add
mov
sbb
inc
inc
faddp
and
aaa
fisttpl
sub
mov
sub
nop
mov
out
rolb
fadds
test
cltd
fmull
inc
push
cmp
xchg
pop
sub
jecxz
jmp
dec
shrl
jb
clc
add
jno
testl
movsb
xor
ljmp
addl
add
push
sbb
dec
stos
mov
or
movsb
lods
sub
movsb
out
mov
jae
mov
rcll
pop
mov
mov
imul
jp
push
js
outsl
xorb
and
test
inc
and
mov
and
inc
mov
cwtl
pusha
lcall
call
jle
aam
jo
out
mov
in
mov
in
cli
roll
jmp
adc
sbb
mov
adcl
cwtl
lods
add
ljmp
or
mov
mov
pop
mov
adc
mov
cmp
cmp
loope
lahf
pop
mov
lahf
xor
rcrl
sbb
hlt
js
adc
cmpsl
mov
jg
add
in
nop
insl
mov
push
das
sbb
inc
call
bswap
das
or
cmpsl
aas
lods
xchg
and
add
dec
mov
or
and
scas
idivl
add
jmp
movsl
dec
hlt
mov
lret
mov
daa
pop
mov
les
mov
out
mov
mov
pusha
test
jno
jge
xchg
in
cmp
into
pushf
sbb
mov
jle
in
jo
and
iret
popf
push
fildl
xchg
push
xorb
cmc
push
scas
mov
mov
mov
jp
mov
hlt
mov
int
xor
adc
leave
inc
jne
fstp
xchg
data16
repz
imul
cli
outsb
pop
inc
push
pop
sub
and
icebp
mov
lds
movsl
sbb
dec
push
enter
lods
rorl
ja
test
stos
xor
xchg
lcall
imul
rcr
push
lds
nop
rcrl
out
imul
push
test
into
std
inc
mov
pop
xor
seta
mov
inc
sub
mov
dec
push
fs
cmp
add
jp
xor
jno
aas
sub
inc
stos
fwait
cmc
mov
iret
sbb
jbe
js
sub
insb
out
cmp
add
sub
popa
test
mov
push
shlb
jns
jge
push
cmp
repnz
notl
adc
xchg
in
jno
popa
jp
in
push
or
scas
lcall
add
insl
syscall
negl
sarb
outsl
and
push
subl
jl
cli
jns
rcrl
sbb
shll
shrb
mov
mov
mov
loop
pushf
push
imul
hlt
data16
dec
lret
je
mov
test
pop
movsb
pop
cmp
jb
lret
lods
imul
push
and
je
aam
cmp
bound
and
test
sti
pop
imul
jb
jnp
jae
fsubrp
in
mov
rclb
lods
or
add
push
or
scas
insl
inc
inc
dec
mov
shll
dec
sub
repnz
push
xchg
addr16
jecxz
pop
enter
decb
cmpsb
dec
shll
mov
data16
lcall
mov
mov
or
adc
data16
jl
stos
ror
xor
cltd
mov
mov
in
jl
pop
sub
pushf
mov
adc
ret
paddsb
mov
jae
and
xchg
xor
mov
nop
mov
mov
pop
andb
inc
sbb
mov
adc
ror
push
es
mov
dec
cmp
jecxz
mov
fldcw
push
or
bound
leave
rcrl
in
test
andb
daa
mov
dec
push
add
inc
fistps
call
xor
shl
cmpsb
ss
mov
mov
push
pop
lcall
mov
cmpsl
fdivrs
int3
cmpsb
outsb
sbb
cmp
jge
call
cltd
and
adc
rcrb
cmp
imul
mov
shl
fsubp
inc
inc
aam
es
es
ss
push
add
lret
sbb
or
push
cmc
std
jne
and
push
pop
popa
into
or
push
icebp
lods
inc
out
leave
jbe
xor
fstpl
xor
fwait
test
or
cli
insb
in
fcomps
data16
pusha
mov
sahf
insb
pop
sub
mov
out
mov
pop
sub
jne
xor
imul
loope
jmp
dec
xor
jne
xchg
mov
jae
imul
out
test
jne
sbb
jb
pop
sahf
daa
xchg
arpl
mov
lods
jp
addr16
xlat
aaa
mov
xchg
adc
je
xchg
movsb
int3
shlb
insl
add
mov
movsb
arpl
push
jnp
pop
mov
loop
or
mov
int
jp
loope
test
iret
orb
sbb
mov
mov
cmp
add
out
enter
and
stos
pop
sub
xor
mov
int3
movsb
lods
cli
test
adc
push
lds
maxps
idivl
fidivl
bound
and
jp
out
sub
jmp
cwtl
cmp
xor
icebp
addr16
xor
jns
adcl
or
aad
mov
lret
push
lahf
test
loope
test
popa
sbb
jg
lcall
xlat
sub
in
xor
repz
sub
xor
ret
or
xchg
fcoml
xchg
mov
push
push
dec
add
inc
pop
mov
addr16
lods
dec
out
xchg
enter
rcr
mov
adc
mov
mov
xchg
neg
or
jne,pt
cmp
jmp
in
cmp
and
lock
lahf
fldenv
into
ja
xor
movsb
sub
nop
in
aad
jno
inc
cmp
ret
inc
repnz
mov
mov
mov
xchg
or
sub
and
lods
mov
jae
jecxz
pop
sbb
outsl
adc
addr16
or
mov
inc
adc
mov
push
xlat
sbb
rorb
sbb
adc
dec
jne
roll
jnp
loope
jg
in
aas
push
hlt
mov
pop
mov
neg
xor
in
mov
pusha
push
stc
divl
sahf
scas
arpl
hlt
outsb
clc
sub
out
sbb
adc
lods
lea
push
jbe
das
xor
cwtl
mov
rcrb
inc
jp
lea
xchg
setnp
fdivrl
xchg
push
fisubrl
cmp
daa
sarl
jmp
mov
dec
orl
dec
test
pop
push
aas
aad
loop
loopne
dec
ret
push
and
gs
push
inc
sub
out
shll
dec
mov
adc
and
outsb
mov
add
fistpll
bound
outsb
fldcw
lock
sub
inc
stos
mov
lcall
jecxz
mov
mov
clc
mov
cmpsb
aas
jl
cmp
pop
mov
and
shll
movsl
inc
dec
push
int
rorl
and
lods
push
sub
addr16
insb
pop
lds
aaa
xor
sbb
pop
mov
pop
es
test
lods
mov
jle
mov
and
sub
sbb
leave
ds
fcoms
stos
insl
stos
out
mov
push
cld
daa
pusha
jg
adc
shrb
dec
sub
fstp
mov
adc
lret
jmp
lea
loop
movsl
in
mov
xor
push
or
shl
ss
sbb
pop
popa
mov
xor
dec
andl
mov
mov
add
jns
sbb
ss
pushl
cld
scas
arpl
lods
xchg
movsb
dec
jg
imul
pop
xchg
pop
shl
pusha
sbb
jmp
test
mov
xchg
movsl
enter
mov
aam
ret
push
ret
imul
inc
xor
adc
es
outsl
aam
push
cmc
cmc
gs
adc
loopne
push
ret
loope
aad
pop
ja
jae
cmp
mov
pop
ret
cmpsb
jbe
or
test
jmp
cmp
stos
sub
dec
adc
clc
push
dec
push
pusha
cmp
push
int
out
aas
jg
bound
adc
ret
push
pop
xlat
jo
lret
test
sub
push
sbbl
ds
roll
mov
jne
or
pop
outsb
and
adc
ffreep
cmp
sbb
mov
sbb
jno
mov
jae
shll
rolb
clc
test
mov
fwait
int3
scas
add
shr
inc
lret
mov
inc
push
in
inc
mov
jg
cmp
mov
mov
roll
mov
fisubrl
rcrl
mov
in
lcall
mov
sbb
icebp
clc
push
je
and
rolb
je
rcrl
aaa
in
ljmp
inc
xor
sahf
icebp
and
pop
push
iret
dec
inc
je
jns
and
mov
push
insb
dec
cmpsl
pop
push
push
in
mov
in
imul
or
outsl
div
mov
cmpsl
or
inc
rcrb
sub
fisubl
dec
cwtl
xor
dec
sahf
int
mov
ja
jmp
push
data16
sbb
into
sbb
or
push
add
cli
sub
ficomps
stos
cs
lahf
or
xchg
data16
int3
addb
push
adc
mov
and
sbb
std
lods
jno
bsf
aas
mov
mov
shl
push
inc
mov
sbb
inc
add
loop
data16
mov
testb
loopne
push
add
dec
push
adc
test
fbstp
lcall
cli
popl
test
jno
adc
pushf
or
out
add
icebp
loope
stos
lea
push
ja
or
and
daa
and
dec
jmp
loope
nop
cmp
and
sti
or
in
mov
sub
xchg
sahf
dec
pop
push
push
lods
mov
cmpb
xchg
out
push
mov
push
fldcw
xchg
and
mov
clc
movsb
cmc
adc
or
mov
outsb
arpl
arpl
ret
shrl
dec
frstor
sbb
sbb
ds
lock
sub
dec
add
mov
xor
gs
and
lcall
mov
mov
aam
fnstcw
lods
jno
test
push
pop
push
pop
mov
out
stos
ret
cmp
test
xchg
leave
fisubl
cmc
inc
jno
in
cs
clc
push
fwait
shll
cli
cmc
sbbl
adc
mov
xchg
xchg
xorb
mov
nop
lods
lock
aas
push
sar
or
fildll
or
cmpsb
xchg
aas
shll
cltd
inc
jmp
xchg
lea
into
push
sbb
add
shrl
mov
inc
daa
xchg
aam
jns
test
cs
ja
shrb
divb
insb
sub
inc
bound
jnp
mov
out
cmpsl
and
ljmp
jns
cmpl
arpl
insb
or
pop
sti
push
push
xchg
mov
shrl
fwait
xchg
or
pop
sub
pop
aam
xor
fcmovnbe
push
mov
mov
inc
test
inc
loopne
xchg
mulb
and
fists
in
out
lcall
jo
into
mov
xchg
cmpl
pop
mov
sbb
and
out
test
push
dec
add
rcrb
xchg
xchg
aaa
out
arpl
jle
mov
out
xor
loop
movsl
mov
cld
pop
pusha
in
sahf
test
and
cmp
pop
push
repz
sub
mov
adc
rorl
jbe
jmp
inc
jg
popf
add
or
xchg
lret
in
popf
enter
inc
mov
cmp
mov
and
lods
pusha
adc
and
les
orb
add
push
add
cmpl
stc
mov
int3
cmpl
pop
in
mov
pop
xchg
aaa
adc
dec
aad
mov
pop
std
inc
out
aam
cld
inc
dec
mov
scas
in
imul
clc
out
sbb
and
adc
or
pop
cmp
cmpsl
jp
andl
in
xchg
lds
pop
out
clc
jle
int3
sub
jbe
mov
cli
test
loope
dec
imul
pop
xor
jne
fisttpl
mov
js
adc
mov
or
or
jo,pt
cli
sub
cs
inc
aad
or
fidivs
loopne
aaa
fists
dec
pop
pusha
bound
in
loopne
punpckldq
iret
movsl
cmp
jle
xchg
add
out
cmp
sbb
hlt
xchg
cmp
scas
xor
inc
push
xchg
push
dec
lret
mov
arpl
leave
ja
cmpsb
xchg
inc
pop
jae
lock
test
mov
sbb
sbb
pusha
sub
gs
sub
push
test
cmp
cmp
or
loopne
repnz
mov
xlat
push
loopne
add
pushf
adc
sbb
cmc
aaa
and
xchg
jo
sub
ja
cwtl
lahf
ss
outsl
sub
and
sbb
jge
sub
jnp
inc
std
sub
lret
adc
jl
push
sbb
lds
xor
mov
push
jnp
mov
je
xor
out
popa
dec
loopne
mov
or
mov
or
ret
cmp
aad
mov
imul
pusha
push
gs
stos
mov
daa
in
jge
mov
insb
loope
jecxz
mov
adc
inc
mov
andb
mov
loope
icebp
rcrl
jmp
cmpsb
movsl
out
shrb
test
pusha
das
aad
jnp
sbb
flds
xor
mov
fwait
push
add
cwtl
cmp
test
sub
jno
xchg
icebp
jl
cld
inc
inc
jb
gs
inc
bound
cmp
in
cmp
sbb
pop
jmp
pop
stos
or
mov
cltd
mov
mov
pop
mov
push
movsl
pop
sarb
ret
pop
adc
push
adc
insb
dec
lret
lods
jns
fdiv
xor
shll
xchg
xor
inc
iret
jl
bound
pop
cmp
xor
xor
movsb
lret
and
inc
adc
xchg
mov
sti
sbb
fistps
adc
push
jl
cmpsb
mov
lret
mov
pop
aam
xlat
nop
xlat
sbb
fcmove
inc
std
dec
dec
loopne
mov
ds
dec
or
fsubr
push
and
mov
daa
cmp
scas
callw
push
movsl
mov
sub
mov
push
out
rol
daa
adc
adc
cmc
les
jno
fucomp
hlt
mov
xchg
pop
les
and
js
loopne
shl
rclb
aaa
dec
imul
ljmp
ret
inc
fstpt
roll
movsl
int3
inc
shll
cmp
push
popf
cmp
test
adc
xor
dec
and
inc
push
cltd
pop
jge
mov
push
arpl
xor
pop
movsb
gs
ficoml
leave
pop
mov
cmp
in
mov
pusha
push
outsl
sbb
loop
inc
popf
jae
es
pop
testb
cmc
mov
loope
xchg
lret
dec
push
dec
push
insl
cmp
rcll
je
dec
xor
lock
xchg
clc
inc
outsb
outsb
xor
stos
mov
int
or
add
jns
add
lods
mov
movsb
test
fwait
xchg
add
and
enter
pop
mov
andb
mov
or
mov
pushf
leave
dec
cmp
lret
nop
movsb
bound
push
scas
les
rcl
nop
push
mov
ja
cld
loopne
xchg
pushf
je
push
cmpsb
mov
inc
adc
xor
or
jno
mov
hlt
jecxz
dec
int
lahf
out
push
sti
mov
pop
dec
push
stos
or
shl
sub
fcomps
aam
add
xchg
je
xor
jnp
cmpsb
leave
enter
imul
pop
rol
jl
and
sub
adc
arpl
mov
xor
xor
fistl
jg
sub
hlt
dec
jo
xor
and
sbb
push
in
jae,pn
push
lret
lods
aad
inc
pop
scas
out
pop
popf
and
dec
addr16
fisubrl
roll
mov
aas
jae
ss
shrb
push
pop
scas
cld
aad
cld
push
sbb
test
sub
mov
in
shrb
ja
push
mov
je
lods
addr16
mov
orb
movsl
sbb
xor
jp
aam
or
jno
int
jnp
xchg
or
sub
out
js
in
add
repnz
pusha
xchg
lahf
cmpsl
icebp
loop
mov
or
add
inc
pop
cltd
sti
push
mov
adc
ficomps
jl
pop
std
cltd
sub
jmp
gs
fwait
add
bound
loopne,pn
fwait
lret
jns
jmp
lds
jle
ja
push
fs
jle
jecxz
push
arpl
pop
movsb
and
dec
sbb
lcall
push
sub
cmc
jle
stc
test
jle
add
xchg
xchg
push
les
jbe
jno
lods
mov
loopne
fdivl
mov
insl
mov
add
rorl
push
pushf
addr16
arpl
inc
pop
aas
ja
std
mov
movsb
cmp
pop
iret
decb
dec
mov
cmp
sub
jae
push
sbbb
fisubrs
sbb
inc
adc
sbb
inc
sub
push
insb
sbb
lret
xchg
mov
dec
into
mov
test
push
sub
mov
lock
push
adc
xchg
sub
inc
ljmp
xchg
aam
xchg
sub
add
cmp
xchg
adc
cmp
jmp
aam
ficoml
mov
fstl
fst
or
or
cmp
lds
xchg
add
insl
es
inc
push
inc
repz
loop
inc
insb
lds
or
push
xor
push
dec
fnstenv
jecxz
out
inc
fbstp
jns
mov
out
push
dec
xor
sub
divb
sub
clc
hlt
mov
jecxz
or
scas
hlt
popa
add
cmc
stos
loopne
inc
mov
stos
pop
push
push
arpl
inc
mov
inc
xor
sub
push
xchg
cmpsl
cmp
rclb
xor
jle
les
pop
sti
in
test
adc
out
adcb
push
into
lcall
adc
add
cmpsb
xchg
push
fsubrs
sub
in
inc
pop
rclb
jle
movsb
sub
jae
sbb
xchg
xchg
adc
sub
or
clc
sbb
pop
fcmovnu
cli
dec
out
loop
shrb
jns
adc
insb
and
sub
xchg
sub
lds
imul
out
sbb
mov
loope
ret
fstpl
adc
rclb
mov
out
mov
dec
mov
insl
rorl
sbb
sbb
push
inc
or
pop
mov
inc
sbb
mov
inc
pusha
cmp
mov
or
sub
inc
cli
es
loope
xchg
mov
popf
jmp
test
je
in
out
les
mov
stos
aaa
leave
adc
push
aad
pop
push
or
xchg
je
sub
loope
jmp
scas
add
mov
out
mov
shrb
fistps
pop
cmpsl
stos
incl
mov
out
lcall
testb
push
lea
and
cmc
mov
jnp
test
daa
or
lret
popf
pop
push
push
ficoml
test
cmp
ret
xor
fdiv
js
xor
xlat
fs
push
dec
xlat
pop
mov
jl
aad
inc
mov
jg
in
cmp
adc
in
fwait
ret
cmp
push
cmpsl
sbb
imul
pop
inc
ret
push
scas
fdivrl
inc
outsl
movl
mov
adc
mov
and
fs
test
cmp
aas
js
mov
fidivl
pop
inc
and
sub
lods
adc
movsb
mov
cwtl
pop
aam
mov
int
sub
pop
jg
scas
aam
pushf
test
lods
xchg
dec
dec
rep
lock
jne
scas
jb
mov
mov
push
pusha
xchg
mov
jns
or
push
mov
call
add
pop
dec
mov
mov
mov
test
negb
xchg
jb
jle
mov
pop
inc
xor
cmpsb
outsl
jmp
xlat
ret
push
outsl
xchg
ja
sub
push
mov
mov
push
sbb
sbb
jno
adc
lahf
xchg
in
out
xchg
lods
add
jo
xor
jbe
les
pop
dec
aas
outsl
mov
cs
inc
xchg
add
mov
les
cmp
sub
xor
std
push
cld
sbb
inc
and
xorl
mov
push
sub
mov
xchg
mov
imul
push
push
movsb
pop
sub
mov
mov
push
pop
cmc
js
mov
pop
dec
ja
xchg
rcll
xchg
mov
push
out
cmpsl
mov
notl
stos
pusha
jecxz
hlt
xchg
mov
aam
cwtl
dec
dec
andb
jg
testl
xor
ss
or
loop
pop
out
adc
mov
fdivp
clc
lods
dec
jge
loopne
add
sti
inc
or
gs
or
bound
fdivs
xchg
sub
jb
dec
arpl
add
mov
je
nop
mov
inc
xchg
adc
push
leave
pop
sbb
fstpl
mov
aam
test
xchg
and
daa
enter
push
andl
shr
inc
or
into
lock
lret
mov
or
add
sub
xor
sbb
sub
mov
leave
adc
add
cltd
mov
dec
xor
push
icebp
mov
daa
repnz
jb
adc
cld
jbe
pop
mov
scas
imul
int
xor
xor
pop
stos
dec
sub
xor
push
ljmp
or
add
inc
fdivrs
sub
mov
shll
gs
sbb
lahf
out
pop
lock
push
dec
cmpsb
notl
and
mov
imul
pop
cmp
push
rorl
mov
ficomps
sub
cmp
imul
inc
jne
jb
in
inc
push
push
inc
push
pop
test
ret
jmp
pop
add
dec
fmull
popa
bound
mov
cmc
mov
xor
adc
addr16
lods
push
and
inc
lahf
fmuls
mov
add
xchg
in
and
mov
pop
fs
push
xchg
pushf
cwtl
mov
mov
shll
sub
jb
jecxz
sbb
dec
adc
mov
iret
add
mov
inc
mov
movsb
lahf
lea
jae
push
ror
sbb
dec
dec
dec
dec
jo
adc
push
fidivrl
sbb
mov
mov
nop
into
insb
sahf
add
push
fdivr
sub
fcoms
popa
inc
jnp
add
add
sbb
fcmovb
fwait
mov
cld
cli
orl
push
iret
inc
insl
sahf
jl
je
sub
jle
orl
jl
hlt
int
lods
lret
ret
jbe
xchg
mov
cli
dec
daa
out
inc
rorl
adc
cwtl
ret
iret
mov
ja
jmp
xchg
lds
mov
pop
sti
mov
mov
add
stos
mov
mov
scas
notl
nop
pop
xchg
dec
and
lds
stos
jg
call
push
lret
aaa
adc
jb
mov
jb
lahf
out
cmpsl
dec
adc
add
mov
add
ja
sub
xor
ficoms
int3
jo
xchg
lock
cmp
stos
dec
jae
sub
pop
mov
lods
cmp
insl
jbe
loopne
scas
fnstcw
or
mov
pop
pop
fimull
call
imul
push
sti
mov
xlat
mov
push
pushf
sbb
xchg
push
cmp
data16
outsl
je
int3
push
pop
test
inc
pop
aaa
pop
inc
jp
push
sub
add
push
add
cmpsl
cmc
sahf
or
cmp
push
repz
inc
add
pop
mov
add
inc
mov
fwait
rcrb
clc
imul
xor
je
xlat
je
cli
call
jg
mov
and
cmovne
mov
lock
mov
mov
imul
push
jno
and
movsb
mov
stos
out
addl
or
jl
rep
adcb
lock
cmp
mov
mov
adc
divb
add
int3
das
into
pusha
lret
ret
mov
push
shlb
fistl
outsb
loope
jb
push
push
insb
data16
adc
sbb
dec
popa
adcl
and
fwait
aam
mov
and
rcrb
xchg
sahf
dec
stos
sahf
cmc
jl
or
shll
jecxz
mov
test
iret
push
jb
in
sbb
test
add
sahf
test
out
jge
and
jae
adc
in
int3
pusha
xchg
dec
loope
push
cmp
adc
sahf
push
dec
and
inc
clc
cmp
mov
aad
jmp
cmp
push
call
mov
pop
xchg
xchg
loop
xlat
pop
xor
pop
jecxz
cmpsb
add
jo
sub
andl
and
cmp
jecxz
cmp
shrb
sbb
cmpsl
pop
cwtl
pop
push
stc
xor
fsts
popa
es
cmc
rorl
mov
enter
pop
ficomps
adc
xchg
mov
dec
sub
dec
lock
jmp
aaa
adc
lahf
cwtl
imul
jo
out
jno
sbb
xor
or
xor
dec
sbb
and
xor
pusha
mov
xchg
pop
mov
pop
mov
and
div
sub
out
inc
xchg
js
arpl
xchg
stc
call
outsb
jge
popf
xor
pop
lret
sahf
or
insb
fdivl
jnp
cmp
add
cmp
jo
mov
out
add
mov
adc
xchg
mov
popa
mov
mov
cmp
lods
rcrl
lods
out
add
sub
pop
adc
push
dec
mov
aam
sar
lret
mov
pop
inc
out
iret
mov
std
jae
mov
lock
adc
push
aaa
negb
insl
or
bound
jle
add
data16
xchg
jg
cld
enter
stos
cld
pushl
add
js
pop
jae
dec
sti
mov
jo
pop
push
sbb
sub
dec
fldcw
push
or
ja
push
cmp
popa
test
popa
mov
add
pop
sbb
aaa
call
loope
jge
mov
mov
mov
dec
pop
adcl
cmpb
or
sbb
mov
push
push
mov
outsb
cmpl
stos
cwtl
fisubrs
push
push
or
mov
xor
mov
outsb
and
pop
pop
and
inc
or
mov
add
mov
mov
xchg
pop
dec
into
leave
cmp
mov
push
or
stc
jge
fwait
test
lds
addr16
movsb
mov
mov
out
int3
scas
sbb
loope
testl
cltd
mov
push
out
and
jl
repz
xchg
push
repz
pop
aaa
not
mov
push
add
lret
lahf
inc
lods
in
aad
mov
daa
mov
mov
add
mov
jno
ret
dec
pop
push
cmp
lret
test
mov
vpor
mov
inc
lret
sti
cmp
std
jnp
pop
in
sbb
jns
cmp
movsl
add
ja
rcrl
cld
negl
or
jae
mov
xor
rclb
aaa
lods
and
xchg
push
fildll
mov
adc
test
popa
mov
mov
repnz
dec
loopne
inc
call
aaa
fisubs
icebp
add
out
push
lcall
adc
xchg
aam
push
call
sbb
mov
dec
push
idivb
adc
adc
push
rclb
mov
cmp
rcl
jg
sbb
push
jo
add
addr16
fnsave
mov
inc
jbe
out
nop
ja
flds
outsb
jmp
dec
sub
cmp
cmp
jmp
fidivs
lock
sub
sbb
mov
inc
add
repnz
subl
bndstx
mov
jno
js
and
das
leave
movsl
dec
popf
imul
mov
dec
cmp
mov
loop
xor
into
mov
test
mov
es
out
pop
inc
push
out
cmp
jbe
mov
scas
sti
loope
outsl
adc
fadds
inc
and
fs
or
add
movsb
push
int3
hlt
cmp
cmpsl
adc
arpl
cli
pop
shll
mov
scas
ror
mov
inc
mulb
pop
fldt
mov
stos
jae
mov
and
cmp
shrb
push
test
inc
xor
fmuls
out
sahf
jae
push
xchg
xlat
inc
movsb
mov
cmp
gs
sbb
sar
jbe
out
sarb
lods
hlt
push
cwtl
push
test
mov
lods
in
lahf
sub
or
insl
pop
addr16
in
movsl
aaa
sub
mov
insl
and
jecxz
cmp
cmp
clc
arpl
add
js
xchg
xor
xor
pop
ss
xor
fbstp
imul
jecxz
or
sbb
pop
loopne
sub
lea
mov
rcrl
push
ja
in
mov
mov
xchg
xchg
andb
push
adc
hlt
frstor
data16
nop
das
mov
push
test
jns
clc
stos
clc
test
dec
mov
pop
jp
sbb
pop
pop
push
push
ror
push
add
sub
inc
sti
inc
pop
xchg
mov
jnp
pop
cltd
or
cmp
cmc
sub
pop
call
mul
in
nop
pop
or
mulb
scas
std
aas
aas
enter
pop
cmp
sbb
out
pop
jge
leave
add
xchg
mov
jb
pop
adc
and
jnp
lock
pusha
negb
pop
sti
inc
sti
lret
arpl
or
jp
out
jo
sbb
pop
cld
cmc
cmp
mov
mov
imul
stos
jae
and
jno
out
inc
add
push
sub
imul
mov
divb
dec
mov
push
mov
inc
mov
add
lahf
add
push
pop
xor
aad
xor
adc
or
mov
shll
shrl
push
test
xchg
mov
and
dec
dec
pop
popf
jno
inc
xor
jb
dec
mov
ss
jae
aam
mov
cld
loopne
mov
push
xlat
mov
icebp
mov
nop
movsl
lcallw
pop
lea
div
or
mov
push
inc
pop
mov
sbb
push
push
cwtl
sbb
mov
sbb
adc
sub
push
add
push
pop
mov
test
imul
inc
addr16
pop
cmpl
jae
popf
push
pop
jge
sbb
pop
xor
out
and
lock
lret
push
sarl
into
xchg
mov
popa
push
bound
cltd
adc
or
push
movsl
add
pop
jle
sbb
adc
dec
push
into
cs
xchg
add
xchg
add
xchg
leave
and
jno
push
mov
les
pop
stc
pop
or
mov
jp
stc
mov
sahf
mov
mov
jb
scas
stos
cmp
push
mov
stos
add
std
divl
into
and
pop
imul
sbb
xchg
pushf
sub
mov
pop
add
inc
call
jo
jge
xor
out
xor
push
pop
orl
jle
in
and
inc
fidivs
sbb
mov
fwait
imul
push
cmc
lds
in
mov
das
imul
lea
mov
inc
xor
movsl
dec
mov
out
and
addb
sub
xchg
jo
stc
test
repnz
mov
imul
xchg
xchg
push
cmc
shr
mov
push
pop
jno
sbb
push
add
out
pop
cmp
addr16
pop
mov
outsl
dec
fwait
add
cmp
push
xchg
shll
out
movsb
and
inc
or
orl
nop
add
icebp
sbb
pop
call
dec
mov
out
arpl
pop
hlt
xor
mov
inc
and
mov
sub
cmp
add
pushf
iret
adc
xorl
xchg
dec
pusha
mov
fsubl
mov
xchg
int3
addb
test
cwtl
mov
pop
xchg
cmp
push
mov
insb
jb
jl
jne
jns
in
ds
add
inc
xchg
adc
xor
faddl
push
clc
mov
mov
sbb
arpl
cmp
sbb
cmpsl
jmp
jae
popf
enter
out
in
push
lahf
rclb
mov
ljmp
iret
pop
push
cs
and
in
mov
ja
cmp
call
cltd
adc
xchg
mov
sub
pusha
sbb
in
push
test
dec
fimuls
jecxz
dec
sbb
jbe
mov
mov
lcall
xlat
dec
stos
sbb
je
xchg
shrb
xchg
nop
lods
pop
pusha
out
dec
adc
jle
bound
je
subl
pop
aas
fdivrs
add
adc
mov
add
mov
xchg
adc
mull
or
mov
adc
mov
or
inc
xchg
jge
cmp
mov
jecxz
stos
loope
mov
add
add
pop
lods
leave
push
mov
sbb
add
fistpll
xchg
sub
lret
testb
mov
scas
jg
mov
dec
stc
xor
arpl
cmpsb
sbb
je
icebp
popf
je
pop
imul
sub
cmpl
jno
repnz
bound
push
jmp
cmp
xor
arpl
or
dec
inc
inc
jb
call
adc
repnz
xor
or
stos
insl
nop
mov
ss
cmc
xchg
push
jecxz
jbe
mov
dec
push
testl
adc
call
aaa
sbb
jns
jecxz
dec
mov
mov
aaa
mov
jmp
add
jnp
add
loopne
jae
cmp
cltd
ret
clc
out
test
lock
push
jl
je
inc
fnstenv
lcall
stos
fnstenv
loopne
addr16
cmp
xlat
add
cmp
repz
movsb
fldenv
xor
jge
movsl
cmp
movb
or
push
xor
jo
or
divb
mov
imulb
cmp
push
xlat
out
shll
not
repz
mov
popf
push
ret
mulb
push
sbb
add
push
imul
loop
mov
clc
es
sub
fs
cwtl
inc
add
gs
sbb
loope
adc
inc
xchg
outsb
lcall
call
xor
lock
nop
scas
dec
and
push
sbb
movsb
ret
xchg
das
lcall
or
mov
aam
or
fimull
imul
stos
cli
sarl
and
pop
pop
dec
enter
fmull
mov
nop
clc
rcr
inc
sub
in
jecxz
dec
dec
cmp
mov
mov
xlat
inc
push
xchg
fldt
adc
sbb
pop
or
jg
aaa
push
roll
imul
fisttpl
ja
popf
pop
shlb
add
notl
push
mov
aam
andl
xchg
jg
pop
sbb
dec
mov
mov
pushf
inc
pop
push
loop
sub
jns
dec
and
pop
icebp
das
jno
xlat
xchg
jns
sub
xchg
nop
pusha
popf
aaa
mov
sbb
mov
jnp
subl
leave
fsubs
mov
stc
pusha
jb
sbb
xlat
test
ja
xor
loopne
mov
dec
aas
mov
lock
push
addr16
jne
jnp
js
fcmovbe
ret
out
dec
or
add
stos
mov
sub
xchg
loopne
dec
cmp
in
std
lahf
arpl
fadds
popa
dec
push
in
mov
pop
cmpsb
mov
test
cs
sarb
pop
adcb
les
mov
mov
aaa
mov
cmp
adc
mov
mov
jg
pushf
sbb
sub
scas
mov
sub
loopne
ljmp
cmp
push
ljmp
push
adc
pop
inc
mov
fs
pushf
lret
test
stos
lea
out
jns
jge
push
in
enter
dec
pop
jmp
jno
xchg
push
xchg
mov
sub
push
cmpsl
jo
lcall
mov
insl
lods
ds
je
mov
xor
mov
add
fs
mov
loope
daa
sbbl
push
lock
out
out
add
mov
loopne
in
scas
cltd
cmc
jbe
popf
jo
lret
sbb
movl
cwtl
jns
cmp
dec
bound
pop
xor
mov
imul
add
inc
cmp
mov
push
fisubl
push
ret
pusha
jnp
adc
arpl
andb
adc
cmp
push
mov
aam
push
pop
sbb
loopne
lahf
mov
call
stos
xor
sub
mov
and
pusha
pop
test
mov
mov
fisttps
das
test
iret
push
ud2
mov
lret
push
push
cmpsl
outsl
mov
clc
aam
dec
mov
push
fcomps
mov
xor
call
xchg
mov
xor
pop
inc
jl
xor
aas
inc
push
fcmovnb
popa
mov
or
xchg
mov
sbb
cli
lods
and
xchg
dec
out
fwait
fs
add
pop
fldl
sti
cmpsl
cwtl
nop
sbbb
ss
push
inc
es
mov
xchg
sbb
mov
mov
lahf
lock
add
test
mov
xchg
shrb
cmc
jae
pop
cmp
xchg
cmp
cmpsl
xchg
cmp
jnp
fldcw
mov
xor
decl
dec
mov
mov
xchg
hlt
stc
into
mov
js
daa
rcrb
pop
in
xchg
xlat
call
jmp
xchg
repnz
mov
cwtl
lahf
enter
xchg
cs
imul
subl
add
sub
ror
sub
repz
pop
cltd
jne
or
les
mov
adc
dec
sub
in
xor
into
push
shr
and
lock
ja
loopne
push
popa
xchg
sbb
data16
imul
and
popf
mov
xchg
xchg
mov
cwtl
pop
push
jl
fwait
sub
rclb
lods
ret
mov
add
dec
mov
inc
cmc
xchg
inc
sbb
jge
sub
dec
mov
mov
or
adc
outsb
adc
lods
je
jmp
loop
leave
pushf
mov
popf
mov
lock
adc
add
repz
sub
fwait
dec
fwait
jbe
int
ret
lock
fwait
and
xchg
lea
out
sbbb
push
in
add
cmp
jae
xorl
inc
out
inc
fs
out
les
push
jge
jo
or
fildll
outsl
lret
inc
xchg
mov
or
movsl
or
out
or
inc
popl
lods
and
stos
icebp
jb
pop
ss
cmp
mov
mov
sbbb
pop
push
scas
xor
in
lock
insl
lret
push
sub
movsb
mov
std
jb
jns
leave
cltd
mov
testl
cli
outsl
xor
push
test
fbstp
jle,pt
popf
jne
or
stos
ja
insb
jg
mov
bound
cmp
cmc
insb
mov
repz
push
xorb
jns
pop
mov
insb
push
ror
pop
icebp
cli
jl
mov
xchg
sbb
mov
cld
push
sbb
roll
and
sahf
jl
sahf
lods
xor
adc
inc
lock
ret
adc
in
sub
aas
fstl
xlat
loop
adc
loop
lret
push
lret
adc
cmp
cmp
inc
inc
sub
inc
adc
rcl
xchg
out
into
sub
push
in
sbbb
scas
stc
std
stc
sbb
bnd
fs
push
pop
push
xor
not
mov
mov
push
xchg
or
cmp
lret
nop
ss
cmp
push
push
mov
xor
add
scas
ret
test
mov
in
xchg
lds
jno
loop
cmp
jnp
or
xor
xchg
aaa
outsb
push
iret
leave
ret
sbb
sub
or
clc
xchg
add
nop
sbb
mov
cli
inc
cmp
add
in
push
and
into
add
add
jmp
lds
jg
mov
mov
sub
outsb
int
adc
insb
stc
xor
or
lret
mov
into
outsl
jnp
jge
in
mov
stc
testb
and
add
out
bound
mov
adc
xchg
fnstsw
ret
faddl
adc
in
movsb
fisubrl
jle
jecxz
xor
mov
jp
shll
mov
xor
mov
push
outsl
jp
mov
sbb
cmp
and
fildll
pop
push
outsl
sub
lods
divb
mov
lcall
jmp
and
jg
popa
mov
sbb
push
jb
hlt
xchg
sub
xchg
out
daa
loop
mov
sarb
enter
cmpsl
fcomps
arpl
adc
cmpsb
inc
xchg
pop
ljmp
mov
sar
aaa
arpl
rcl
inc
dec
popf
mov
bound
pop
ja
in
xlat
xor
sbb
movsb
lret
or
push
repnz
lods
push
push
jo
push
adc
or
mov
mov
jne
aas
cmp
enter
cmc
outsb
insl
jae
sarb
dec
or
inc
add
add
or
push
and
loopne
cmp
sub
stos
inc
cmp
and
push
mov
fnstenv
pop
movl
sub
shlb
xlat
xorb
aas
rcrb
enter
das
add
fmull
insb
push
mov
push
jb
jo
and
adc
adc
fidivrl
stos
mov
mov
xor
movsb
ret
push
inc
mov
sbb
sbb
sbb
lods
xchg
push
sub
xor
les
sbb
ja
lods
cld
lret
adc
bnd
inc
insb
sub
dec
rcll
mov
mov
out
push
aaa
inc
test
imul
xchg
dec
and
std
or
sub
cli
xlat
lods
jno
jecxz
lret
iret
adc
sahf
repnz
into
js
cmc
cmp
loop
mov
rcrb
sbb
push
or
inc
subl
dec
insb
mov
pop
sar
nop
push
push
sbb
and
add
enter
das
movsl
sbb
adc
or
jbe
adc
cmp
stos
aaa
sbb
pop
jecxz
cmpsb
loope
fadds
popa
inc
in
or
repnz
xor
test
scas
xor
dec
cmpsb
sub
dec
fwait
sub
xor
mov
push
mull
pusha
mov
fcomps
insl
pop
mov
and
inc
arpl
sbb
xchg
aad
bnd
push
mov
inc
cmpsb
lcall
push
sbb
ja
pop
dec
inc
inc
add
jne
sub
je
and
loope
push
mov
xchg
or
xchg
mov
lock
add
popf
pop
mov
lahf
add
mov
mov
push
in
pop
xchg
adc
mov
movsl
lea
xchg
mov
mov
ret
jnp
std
push
bound
fildl
mov
mov
loop
wrmsr
or
jl
pop
sahf
ss
mov
enter
push
dec
mov
inc
orl
gs
mov
push
mov
lcall
insl
lods
aad
inc
add
adc
fsubrp
repnz
ficomps
cwtl
lds
das
cmp
ja
fsts
lret
push
jae
loopne
dec
notl
lret
adc
sub
or
or
dec
xchg
and
sub
decb
push
add
mov
sbb
mov
int3
pop
iret
adc
insb
mov
or
shrl
or
iret
lahf
negl
and
subl
scas
xor
stos
or
dec
ret
ds
lock
das
movsl
adc
mov
dec
scas
mov
push
pop
movsl
pop
sub
pop
inc
lods
adc
lcall
jae
cmpsb
jp
add
jle
xchg
lock
fcomps
adc
dec
cltd
jecxz
cmp
jbe
sub
lods
inc
sahf
mov
movsb
add
subl
add
push
and
xchg
jae
fldt
les
fwait
fwait
testl
jbe
notb
xor
loope
repz
push
dec
out
sbb
cmp
daa
jecxz
pop
jae
inc
push
jp
cs
mov
push
mov
jb
sbb
insl
lret
jns
and
adc
test
dec
inc
inc
in
out
repz
jno
daa
into
pop
mov
xor
ficomps
lcall
