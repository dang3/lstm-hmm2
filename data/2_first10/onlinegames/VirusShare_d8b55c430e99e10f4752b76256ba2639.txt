ja
add
add
add
add
sub
inc
icebp
fwait
sub
mov
mov
fnstcw
fadds
inc
xchg
or
dec
adc
ja
popf
les
push
movsl
adc
cmpsb
sub
inc
mov
adc
lret
ret
je
iret
lahf
mov
cld
cli
jecxz
mov
cld
dec
das
mov
sbb
push
outsb
pusha
xchg
cmpsb
inc
jle
lea
test
xchg
mov
ret
xor
fnstenv
lock
push
mov
sbb
scas
xchg
mov
out
inc
sar
xor
in
xchg
in
out
adc
cmp
push
inc
sarl
xor
add
mov
inc
subb
sbb
mov
popa
iret
in
aas
xchg
sbb
jns
sbb
and
mov
daa
push
or
xchg
push
cli
popf
push
or
ljmp
push
nop
or
dec
outsb
or
push
sbb
shll
sbb
loope
or
inc
push
lcall
sbb
or
fidivrs
push
loopne
imul
pop
mul
xlat
repz
jnp
push
mov
mov
jg
push
jecxz
jcxz
mov
xor
fstpl
test
in
push
ds
or
cli
fs
adc
mov
shll
ja
xlat
test
gs
jns
dec
xchg
fisubrl
adc
cmpb
rclb
or
fwait
cmp
adc
ljmp
jecxz
and
mov
mov
pop
jmp
icebp
fcoml
imul
push
dec
pop
mov
aaa
fcomi
lret
sti
add
pop
jae
fstl
icebp
and
ljmp
iret
lock
xchg
push
lahf
subb
filds
stc
mov
test
dec
xor
push
pop
jno
sbb
or
pop
test
inc
mov
or
mov
pop
orb
add
call
bound
push
cmp
movsb
jns
mov
xor
or
call
xlat
rcr
jne
inc
mov
pusha
inc
pop
xchg
sbb
mov
popl
xchg
jg
and
mov
aad
push
jbe
xchg
dec
jo
and
shl
push
aad
in
pop
xchg
xor
pushf
cwtl
mov
lds
popf
cld
and
outsl
xchg
icebp
xor
mov
mov
dec
fs
dec
mull
cmp
not
pushf
sub
repnz
arpl
data16
and
bnd
div
dec
xor
lods
lock
fwait
push
loopne
jo
cmpsl
aad
inc
clc
popa
jp
rolb
and
data16
loop
bswap
jbe
or
dec
ret
out
push
adc
loope
xchg
push
ljmp
std
ret
push
mov
pop
xor
add
jbe
fldt
inc
cmp
add
scas
jae
dec
test
jbe
push
js
xor
adc
sahf
mov
jge
popa
push
xchg
frstor
int3
mov
pushf
mov
push
test
out
ret
pusha
pop
test
lods
call
iret
jnp
push
or
scas
jecxz
out
lret
test
xchg
gs
cmp
shll
mov
adc
aam
add
cmpsb
sbb
xor
lds
cli
jmp
sub
push
push
pop
js
test
and
lds
aas
push
adcl
repnz
push
js
arpl
mov
jge
pop
mov
lds
fstpl
fistl
hlt
jle
xchg
pop
pop
xchg
fadds
cmp
push
insl
and
jb
xchg
mov
shl
mov
mov
jns
xchg
add
jbe
or
push
pop
data16
inc
jmp
inc
pop
adc
gs
mov
lea
aaa
mov
adc
fs
jge
cmp
add
gs
xchg
and
sbb
add
mov
ret
test
inc
pop
lock
mov
loopne
cmp
pushf
mov
out
adc
in
shr
sub
adc
cs
cwtl
test
mov
push
xor
dec
cmp
lods
lret
jle
roll
call
roll
push
andb
shll
int
lcall
clc
call
mov
push
out
pop
scas
shlb
je
jae
xlat
ret
jb
out
mov
enter
int
dec
lahf
push
push
xchg
outsb
and
add
scas
fidivs
xor
ret
fsubrl
inc
out
xor
aad
inc
fists
sbb
vunpcklps
sub
or
sbb
mov
push
or
je
pop
jbe
pop
repnz
inc
pop
popa
mov
mov
and
adc
jg
jne
leave
sbb
xchg
data16
adc
dec
dec
das
jo
pop
and
dec
xchg
inc
and
adc
inc
xchg
jge
pop
stc
sbb
xchg
add
andl
cld
cmp
xchg
xor
push
jns
in
insl
xchg
lods
push
lods
xchg
and
pop
shr
dec
arpl
les
aaa
in
mov
int
out
sub
sub
cmp
sbb
stos
js
shlb
cli
inc
pop
divb
test
cli
cmp
repz
in
insb
movb
fisubl
negb
les
or
push
into
mov
sub
cltd
es
cmp
push
jnp
inc
cs
popf
dec
mov
push
sub
jo
iret
jle
test
cwtl
xchg
lret
test
pop
lock
data16
mov
roll
sub
push
in
outsb
stos
mov
dec
popf
retw
inc
mov
dec
mov
fwait
and
cmp
outsl
daa
aas
inc
xchg
mov
jle
addr16
imul
lret
jmp
pop
outsl
pop
and
shrb
sbb
jecxz
push
lahf
dec
jl
mov
pop
les
bound
fcmovnb
add
outsl
xchg
out
mov
fistpll
nop
daa
daa
jbe
mov
rcll
xor
scas
sti
mov
inc
call
dec
mov
int
fs
repz
fldcw
pop
xlat
dec
insl
pmullw
fistpl
adc
and
jbe
jle
subl
jbe
lret
dec
jo
push
pushf
and
nop
jp
test
out
xor
in
in
out
lret
pop
dec
cmp
insl
jns
jp
or
mov
mov
std
aaa
push
mov
jp
js
jae
lods
xlat
scas
jb
aas
lret
jne
inc
push
pusha
sar
jmp
psllq
xor
call
add
aaa
xor
inc
xchg
xchg
or
push
out
jle
dec
cltd
adc
push
mov
xor
fs
xchg
lea
dec
xlat
sbb
into
mov
sub
nop
test
mov
add
add
jecxz
pop
sub
out
mov
xchg
sahf
and
push
bound
sahf
push
sbb
pop
jl
dec
dec
test
push
mov
jns
mov
mov
mov
scas
mov
xchg
or
rolb
adc
and
mov
pop
out
add
test
pop
xchg
ret
repz
xlat
int3
push
cli
lea
or
aas
fs
xor
sbb
sub
adc
pop
sbb
sti
pop
jo
xor
add
lret
dec
xor
sahf
inc
pop
inc
jb
inc
mov
fisttpl
lcall
shlb
lahf
xor
jg
add
or
test
iret
pop
sub
jecxz
bound
lahf
mov
enter
sub
mov
fstl
jb
sub
loope
icebp
andb
jmp
aad
dec
push
or
sbb
mov
arpl
jne
push
int
dec
and
pop
dec
cmp
ret
lret
sahf
ja
add
adc
push
sub
int3
fsub
xchg
add
sub
das
test
aaa
xor
and
dec
ret
xchg
pop
push
ret
jne
inc
sbb
ds
mov
stos
mov
pop
mov
add
testl
inc
cmpsb
gs
sbb
mov
stos
dec
pop
xchg
push
jmp
xchg
lods
shlb
aaa
daa
sbb
mov
loopne,pn
sahf
push
push
mov
or
sbb
inc
cld
push
xchg
mov
mov
ljmp
por
add
jne
repz
xor
nop
aaa
out
xchg
dec
lock
mov
and
rorl
ret
jg
mov
sub
bound
rorb
inc
scas
sub
and
cwtl
pop
mov
movsl
or
aam
and
in
mov
ss
inc
mov
mov
mov
push
add
sub
pop
pop
dec
xchg
out
and
xor
push
lret
sub
pop
scas
aad
xchg
cmp
add
cltd
add
dec
frstor
aaa
mov
xchg
jecxz
mov
adc
mov
sbb
push
sub
rolb
call
fwait
addr16
out
mov
lods
jmp
sahf
dec
cmpsb
out
and
xchg
mov
das
pop
sti
test
jecxz
pcmpgtw
inc
xchg
lock
fwait
loopne
or
dec
xchg
shlb
jbe
aas
pop
cmpsl
pop
jg
lcall
adc
pop
mov
insl
enter
sub
fisttpll
stc
js
in
add
adcl
xor
je
les
mov
popa
outsl
fcompl
or
mov
cld
popf
daa
pushf
mov
xor
mov
sub
mov
popa
cmp
inc
sbb
mov
inc
and
test
xor
fcoml
int3
mov
dec
dec
adc
call
jne
adc
mov
es
movb
leave
sub
push
jbe
pop
mov
mov
repnz
lods
xchg
sub
dec
push
enter
inc
jle
scas
dec
repnz
add
rcr
out
dec
push
repnz
out
rcl
fwait
mov
lcall
sbb
cwtl
xchg
addr16
scas
pop
pop
push
adc
mov
test
pop
call
sub
outsb
es
sbb
ficompl
ret
add
pop
les
adc
or
cltd
jmp
fidivs
push
int
mov
mov
scas
and
loopne
in
adc
sbb
cmp
fsubrs
lods
lcall
xor
pop
cmc
icebp
pop
aaa
shlb
sub
ficoml
insb
and
jl
int3
xchg
shll
int
fcmovbe
inc
push
fwait
sub
pop
pop
lahf
shll
mov
xor
mov
jne
clc
adcl
jno
push
xlat
outsl
push
scas
push
fstpl
pop
mov
test
xor
pop
inc
enter
xor
push
stos
cmp
mov
notb
test
inc
movsl
sub
bound
std
stc
test
ja
pop
lods
clc
ret
cwtl
movsb
mov
sub
jo
lods
test
gs
or
adc
fidivs
jg
sbb
pop
pop
adc
notb
push
push
cs
je
push
pop
sub
cmp
addl
pop
sbb
sti
adc
dec
and
lahf
jns
dec
jns
icebp
stc
insl
fwait
ljmp
mov
sub
out
cmp
jecxz
mov
add
ja
rol
sub
push
pop
lock
lcall
cld
dec
dec
cmp
lock
mov
dec
or
xchg
shll
mov
pusha
and
or
cwtl
jle
mov
and
sarl
das
pop
fadd
jno
pop
mov
xchg
dec
adc
aam
and
cmpsl
jnp
xor
scas
lods
mov
movsb
hlt
jle
out
enter
and
push
ljmp
loope
test
push
jae
and
mov
mov
mov
adc
jge
arpl
sub
fcmovnb
movsb
cli
out
arpl
mov
mov
cmpsb
sbb
push
add
mov
dec
insl
das
jnp
xor
enter
jno
outsb
push
loop
xor
jge
movsb
jns
and
xlat
pop
inc
enter
sbb
movb
push
pop
add
aam
add
xchg
xchg
out
lahf
das
test
cwtl
jae
push
jbe
fldl2t
lcall
mov
push
xchg
mov
fnstsw
cmpsb
xchg
stos
xchg
push
iret
call
push
loope
sub
or
ror
jle
xor
es
lods
inc
adc
cmp
shll
outsl
and
popa
imul
dec
xchg
and
in
jo
jb
xchg
push
adc
mov
adc
jo
jl
dec
xchg
bound
rcr
xor
xlat
or
cmp
pusha
test
adc
adc
mov
aaa
in
test
mov
pop
cmpb
mov
imul
loopne
insb
push
lods
mov
das
sbb
cs
iret
cli
cmp
ja
dec
sbb
fidivrs
mov
js
or
lock
out
mov
pop
icebp
mov
es
xor
les
in
pop
in
mov
and
fucomp
lds
in
adc
or
gs
lret
cmp
jbe
daa
mov
mov
stos
dec
jb
add
pop
dec
pop
sub
add
sti
fdivrp
dec
aam
fmul
cmpsb
or
xor
lds
or
sub
mov
mov
shlb
sbb
fs
and
pop
jle
pop
cli
push
mov
push
gs
jno
add
xor
and
inc
adc
int3
push
push
int
sub
test
popa
fldenv
sbb
push
adc
add
popa
or
cmpsl
inc
imul
lock
test
fmul
lea
sub
jl
sti
ficompl
add
and
cmp
xor
popa
xlat
mov
xchg
dec
daa
mov
xchg
jbe
lcall
or
pop
xchg
jecxz
cmp
iret
into
push
sub
ljmp
lret
shl
aaa
into
xor
push
fbld
mov
loopne,pn
mov
xchg
inc
or
push
cmp
or
cmp
push
pop
mov
mov
mov
jge
cmpsl
inc
mov
sbb
xor
jo
cmp
or
inc
xor
daa
mov
push
int3
repz
clc
loop
pop
push
shlb
rcll
out
pusha
das
stc
pop
mov
shlb
xor
imul
outsl
cmp
inc
push
dec
push
add
mov
lcall
out
out
dec
inc
push
lds
mov
cmpl
mov
mov
leave
push
or
test
and
adc
sub
xor
dec
imul
sbb
cmp
fs
and
or
xor
jne
cmp
mov
jne
lds
aam
call
call
mov
jp
shlb
push
adcb
mov
cli
repnz
outsb
mov
adc
xchg
add
les
jb
or
scas
mov
movsl
mov
sbb
xchg
push
mov
test
cmp
push
incl
cmp
sti
sub
push
and
or
jno
pusha
add
roll
push
ret
mov
cmp
inc
mov
arpl
or
cmp
bound
fdivrp
push
inc
clc
or
lret
imul
test
jno
test
in
sbb
js
adc
mov
xor
das
mov
dec
pop
jbe
fwait
in
pusha
imul
test
and
push
jmp
cmc
sbb
push
xor
movsl
sbb
gs
jbe
fisttps
and
aas
mov
je
inc
ss
push
mov
ret
inc
imulb
ja
mov
mov
pop
jp
loop
or
adc
ret
fwait
inc
sub
imul
imul
sub
ficomps
orl
cmp
add
jo
sub
mov
out
cmpsb
mov
das
xor
pop
aad
incb
cmpl
and
pop
mov
adc
jg
push
xor
and
adc
and
dec
cmp
push
testb
popw
out
push
xor
mov
in
xor
hlt
sbb
dec
jge
xor
dec
mov
push
js
sub
ret
les
or
fistpll
rclb
mov
in
mov
mov
jle
sarl
and
stos
cli
jne
jg
out
xor
inc
stc
mov
outsl
sub
movsb
push
add
icebp
mov
cmp
das
dec
mov
sbb
xchg
jbe
sub
jl
push
cs
rorl
mov
dec
cmp
add
stos
pop
outsl
or
icebp
adc
xchg
inc
dec
sub
dec
mov
jecxz
jbe
add
push
movsl
push
std
inc
test
dec
pop
mov
lcall
dec
dec
push
dec
and
or
out
rclb
sbb
das
stos
aad
inc
mov
movsb
hlt
adc
iret
stos
mov
dec
push
xchg
jnp
lods
xchg
lods
fwait
popf
mov
in
mov
repz
and
sbb
or
or
xchg
jno
pmulhw
sub
mov
arpl
fisttpll
push
cmp
mov
or
pop
sbb
repz
cli
xchg
fwait
sbb
xchg
insl
xchg
dec
sbb
std
adc
les
sbb
sbb
xor
cli
push
jnp
sarl
arpl
push
cmp
test
cmpsl
or
divl
mov
mov
loopne
fwait
xor
cmp
jnp
pop
lcall
jns
and
rolb
mov
inc
mov
jo
xor
push
jl
add
adc
adc
mov
rcr
sub
inc
mov
jbe
sub
add
ljmp
test
movsl
mov
inc
mov
sbb
loope
add
mov
lahf
andb
daa
inc
add
orl
adc
dec
adc
jp
loop
scas
sub
add
aaa
or
insl
mov
sub
aam
out
add
out
call
cmpsl
mov
push
outsl
addr16
nop
xor
xchg
sbb
fwait
rolb
testl
push
cwtl
test
mov
movsl
out
mov
data16
insl
inc
outsl
add
adc
imul
movsl
add
cmpsl
ret
cmp
movl
mov
mov
pop
xor
test
int
dec
pop
insb
inc
xor
jo
dec
push
lret
push
cmp
call
jbe
lcall
push
jnp
lret
orb
jae
sub
add
mov
adc
movsl
push
xchg
out
fadds
bound
repnz
lret
jae
popf
das
inc
mov
jp
imul
dec
sbb
ljmp
cmpsb
mov
test
inc
aas
aaa
push
lea
je
daa
sbb
das
imul
imul
mov
dec
add
cmp
cmp
or
loop
lcall
arpl
arpl
shrb
jns
sbb
jne
ret
cmp
xchg
dec
sti
stos
pop
ja
mov
into
jp
rcl
ficoms
scas
adc
push
adc
js
or
loope
pop
notb
aad
mov
mov
pop
fwait
lahf
cmp
sbb
mov
int
out
xor
push
gs
mov
cmp
mov
jo
push
inc
les
lea
xor
jmp
test
mov
sub
gs
mov
ret
inc
jno
mov
mov
rorl
aaa
iret
mov
xor
cltd
sarb
xchg
pop
push
repz
xlat
stos
push
imul
test
dec
clc
movsl
call
push
push
jg
leave
in
pop
addb
loope
rcl
mov
or
xlat
xor
ja
dec
aas
notl
stc
bsr
les
ret
push
dec
shl
mov
adc
ret
push
push
mov
stos
test
fildl
jmp
call
mov
xchg
subb
cmp
cli
cmp
std
xchg
rclb
jl
cmpsl
mov
push
fadds
loope
or
js
insl
loopne
cmpsb
dec
mov
sub
addr16
add
adc
mov
push
ja
arpl
int
lods
lods
cmp
inc
sub
clc
cmp
add
add
pusha
in
xor
or
mov
mov
loop
cmpsb
sub
fildll
movsl
dec
rclb
sbb
stos
fnstenv
pop
sbb
dec
lahf
push
scas
out
xor
std
lods
ret
xor
mov
adc
xor
aas
incl
inc
test
mov
lea
clc
cmp
mov
pushf
add
xchg
dec
mov
cmp
xlat
rolb
jmp
loop
test
std
js
cmpsb
push
test
mov
xchg
mov
xchg
and
addb
push
cmp
inc
lds
or
push
and
out
aas
movsl
add
inc
out
or
add
rcrb
repnz
push
sbb
cmpsl
ret
push
loopne
ja
pop
mov
ret
test
fildl
adc
loopne
or
push
fistl
or
rorb
pop
incl
ds
pop
cmp
cld
es
adc
sbb
int
push
pop
pop
mov
xor
mov
xor
ss
lock
lret
data16
mov
pop
repz
stos
les
mov
add
data16
icebp
mov
mov
and
jo
imulb
movsb
imul
lahf
js
cmp
or
rolb
or
jnp
mul
in
stc
scas
test
shr
sub
popf
cld
les
pop
in
movsb
pop
jmp
adc
xchg
lahf
xor
cwtl
aam
mov
xchg
test
addr16
and
popf
jle
ret
xchg
neg
shr
mov
push
test
jno
cli
push
pop
fldcw
mov
pop
pop
sbb
das
sub
stos
xor
xlat
iret
popf
nop
push
pop
sbb
clc
mov
imull
les
fimuls
mov
in
mov
into
dec
mov
movsb
dec
in
push
xchg
mov
in
leave
adc
shll
pop
loop
fnstsw
or
mov
aas
jmp
jle
mov
xchg
int3
jmp
mov
xchg
dec
dec
enter
mov
pop
lahf
jp
cmp
fcoml
sarb
hlt
fwait
lods
scas
cwtl
pop
sub
ja
xchg
and
xchg
test
mov
mov
or
jns
xor
xchg
cmc
push
pop
ljmp
xor
arpl
fsubl
adc
jecxz
rcr
aaa
and
leave
jg
inc
out
fwait
cmp
clc
lods
mov
subb
punpckldq
inc
test
fisubs
cwtl
test
arpl
add
pop
cmp
or
or
inc
adc
ljmp
addb
xchg
xchg
fsubl
inc
sbb
into
or
mov
test
clc
addr16
fbld
pop
mov
or
xchg
lock
push
pushl
mov
xor
mov
push
inc
inc
outsl
insl
jo
arpl
int3
or
jno
jae
out
fwait
out
mov
xchg
dec
add
std
add
cmp
js
mov
jne
cmp
movsb
inc
repnz
outsl
insb
sarb
addr16
and
inc
pop
sbb
push
outsb
fistps
in
xchg
cmp
imulb
decb
lods
in
insb
nop
mov
push
add
pop
insl
pop
jb
movsb
jo
rcrb
mov
or
adc
adc
rorl
sbb
mov
push
adc
lods
or
xchg
ss
jnp
fsubl
sti
jmp
sbbb
add
push
faddl
int
inc
filds
mov
rolb
xchg
pusha
fisubrs
xor
and
lock
pop
mov
mov
into
test
jb
sbb
xor
stc
sbb
and
inc
xorb
addl
inc
cmp
sbb
inc
push
add
stos
jae
scas
cltd
add
sahf
push
scas
loopne
test
push
notb
nop
nopl
jmp
xchg
out
push
inc
mov
xchg
cmpsl
mov
cmc
push
xor
vcvtsd2ss
call
dec
cld
push
mov
jge
call
push
fcomps
mov
addr16
dec
mov
mov
and
xor
add
lods
xlat
into
dec
push
mov
xor
jo
lds
roll
adc
fdivs
xchg
js
adcl
lods
aad
push
jl
in
ret
jnp
orb
mov
mov
or
mov
rcrw
pop
rorb
cmp
jns
lods
jns
mov
daa
inc
and
cmc
pushf
jnp
and
mov
xchg
sbb
inc
adc
inc
push
adc
or
outsb
push
sarb
mov
or
inc
jo
adc
insl
pop
je
mov
pop
aas
notb
mov
inc
sbb
or
sbb
inc
xchg
add
mov
jne
ds
fstpt
mov
in
insl
stc
gs
cmc
sub
mov
push
inc
mov
or
mov
sbb
xor
or
sub
outsl
or
cmp
adc
int
sbb
iret
leave
ljmp
cmpsl
pop
jns
and
push
mov
sbb
sub
arpl
inc
mov
insl
xchg
bound
ret
and
cmp
or
adc
sarl
and
shlb
pop
jmp
mov
ja
mov
nop
cmpl
shl
inc
neg
cmp
bound
xchg
mov
fdivl
jo
lcall
aaa
imul
dec
loope
add
std
mov
cmp
or
mov
cmp
rclb
adc
mul
pop
adc
cmp
dec
or
adc
aad
mov
in
loope
jno
xor
sahf
dec
mov
mov
jnp
mov
adc
mov
ss
fwait
cmpsb
cmp
push
cmp
sbb
ret
daa
nop
push
xorl
mov
cmpsb
adc
push
mov
test
cmp
push
aam
jle
in
in
hlt
mov
sti
push
and
mov
imul
out
mov
ret
adc
in
flds
adc
imul
cmc
xor
dec
shrl
ficoms
aaa
push
stc
sub
bound
xor
mov
pop
sbb
sub
mov
jo
lahf
jp
pop
shrl
push
aam
sub
inc
jbe
dec
daa
pop
pop
jg
dec
cmp
mov
insl
cmp
in
cmp
cwtl
xchg
cld
pushf
gs
dec
xchg
test
int3
mov
out
jbe
adc
and
push
xor
jle
aad
addr16
push
ljmp
outsb
xor
insl
adc
pushf
jns
mov
les
dec
dec
adc
insb
cmpsl
out
leave
mov
and
sbb
aam
or
sbb
cmp
pop
mov
pop
outsb
in
jns
dec
lock
psubusb
popf
cli
mov
xchg
pop
rcll
pop
shl
cmp
insl
and
into
mov
and
fdivs
fbld
in
aam
xlat
movsb
fistl
jle
mov
arpl
mov
mov
adc
dec
mov
or
and
cmc
xchg
inc
sarl
loopne
scas
sub
stos
and
adc
sahf
sub
movsb
inc
jb
loope
lret
cltd
pop
mov
jne
lds
cwtl
jnp
adc
out
push
xchg
ds
cmp
push
jl
fstpl
shll
sub
and
sbb
das
xor
xor
out
fmull
push
xchg
or
bound
stos
xchg
cmc
inc
mov
cli
cs
pop
jge
mov
cmp
clc
ds
jnp
mov
test
mov
test
mov
dec
lds
add
js
xor
lods
imul
add
sbb
mov
rol
add
imul
fidivrl
lcall
in
lret
and
mov
mov
xchg
dec
push
jg
loope
aad
jno
mov
shlb
stos
xchg
in
push
lret
sbb
out
dec
cltd
inc
popf
pop
push
bound
jg
es
cmp
in
xchg
lahf
inc
mov
fsubrl
jne
or
push
sbb
pop
push
addr16
insl
inc
pop
sub
aas
cmp
cli
mov
adc
in
std
rolb
in
je
lea
out
fldl
and
push
pop
or
mov
dec
lahf
jle,pn
jns
and
cmpsl
pop
enter
fldenv
xor
pop
pop
ret
int
pusha
inc
inc
sbbb
arpl
cmp
test
mov
dec
push
jo
adc
rclb
xor
push
mov
iret
mov
ficomps
andl
dec
push
adc
push
add
push
fbld
jb
fcomps
dec
mov
imul
ds
mov
leave
sarb
sbb
cli
fisubrs
mov
push
fistl
inc
es
push
shl
and
xchg
pop
add
cmpsb
and
pop
mov
or
dec
mov
enter
sub
xchg
adc
push
push
in
and
jp
in
lahf
stos
sbb
pop
iret
lock
pop
nop
cmp
xor
sahf
nop
int3
push
sahf
dec
xchg
fwait
out
repnz
dec
leave
dec
int3
ret
repz
fdiv
out
xchg
sbb
jno
jecxz
test
jg
inc
push
loope
sub
jnp
mov
or
je
sub
pop
jl
lret
clc
pop
cmp
mov
add
push
or
rcrl
fstl
out
xchg
mov
push
dec
adc
cmp
std
and
pop
repnz
push
pop
mov
ret
leave
cli
sahf
xchg
or
pop
xchg
and
mov
rcr
pop
jg
inc
fldenv
sub
shl
add
pushf
cmpsl
xchg
sbb
cmp
mov
dec
adc
sbb
leave
push
pusha
add
je
lods
leave
mov
sub
aam
js
andb
popf
pop
mov
ficoms
std
xchg
mov
xchg
xchg
scas
sarb
pop
adc
test
imul
icebp
xchg
daa
jle
dec
cmp
pusha
jb
dec
pop
lret
mov
aam
mov
mov
stc
xor
xchg
daa
sbb
mull
repnz
jecxz
fs
bound
int3
rcll
idivb
mov
sti
cmp
or
push
das
mov
insl
insb
and
fisttpl
test
mov
fadd
lcall
jp
jg
rep
daa
or
aas
push
xchg
sti
sub
jle
jno
or
cmp
jmp
lock
add
aaa
notb
dec
out
imull
stos
fmull
jo
mov
bound
cmp
adc
lahf
inc
jmp
shl
addr16
xor
inc
lahf
hlt
mov
je
sbb
in
inc
out
inc
icebp
push
pop
imul
or
es
push
hlt
sub
lea
pop
lods
ret
add
add
repnz
cmc
aas
xchg
sbb
in
orb
inc
pop
jge
dec
xor
insb
push
int3
inc
jmp
leave
add
cmp
aaa
scas
mov
mov
jle
push
aas
out
shll
insb
xchg
xor
std
outsl
rolb
cltd
add
decb
inc
fcomps
andb
pop
mov
int
or
or
pop
sbb
les
clc
shll
repz
outsl
mov
aam
loope
ljmp
jnp,pn
mov
sub
leave
push
js
jo
popf
lcall
lds
mov
mov
and
repnz
test
dec
mov
push
jmp
sbb
pop
mov
shrb
and
pop
out
enter
dec
push
popf
std
or
inc
mov
mov
gs
in
js
pop
mov
and
jno
pop
or
push
fs
stos
jo
stc
out
ror
repz
cmp
movsb
movsb
or
call
loopne
mov
inc
pop
test
ja
pop
xchg
and
sbb
lcall
stc
mov
dec
loop
in
sarb
cld
xor
or
ss
sub
mov
popa
sub
sbb
dec
arpl
push
loop
xor
fisttpll
addr16
add
dec
arpl
or
mov
pusha
mov
orl
xchg
xchg
negl
lcall
hlt
push
nop
jae
stos
push
test
pushf
inc
es
sub
subb
or
xlat
cli
mov
shrb
push
adc
daa
adc
fidivrs
and
sahf
int3
sub
addb
in
cmpsb
xchg
mov
mov
sub
aad
imulb
mov
daa
pop
pop
mov
xor
inc
aad
mov
fildll
insb
insb
xor
dec
jns
or
xchg
ss
mov
arpl
test
push
xchg
rcl
inc
sbb
in
mov
jne
in
mov
pop
push
pop
cs
mov
mov
pop
push
lret
aaa
dec
jmp
xlat
movsb
jae
popa
fsubs
lock
pusha
lods
push
inc
push
mov
popf
sti
sub
jno
mov
lods
xor
fistpl
lahf
or
ss
leave
fsubp
adc
jge
push
inc
popa
inc
out
orl
sub
cmp
mov
or
push
mov
lret
stos
xor
push
push
xchg
jge
inc
sbb
pop
sbb
mov
mov
jae
adc
add
les
lcall
inc
push
bound
mov
flds
or
jb
aas
sbb
jne
pop
test
in
or
out
les
dec
mov
jecxz
hlt
dec
pop
jecxz
fnstenv
dec
xchg
push
mov
jecxz
sbb
xchg
rclb
cmp
xchg
das
sti
ljmp
cmpsl
lahf
cmp
or
pop
jnp
push
fmull
call
pop
xchg
mov
shrl
daa
rolb
sbb
outsb
inc
dec
call
cmp
mov
mov
mov
jecxz
aad
pop
mov
jl
jecxz
addr16
add
add
test
and
popa
pop
or
mov
inc
outsl
movb
test
fmuls
dec
into
xchg
push
test
push
jle
pop
imul
or
mov
sub
cmc
mov
add
or
sbb
in
jnp
cwtl
inc
addr16
fistpl
iret
and
sub
mov
inc
es
sbb
aaa
das
add
fcomps
pop
mov
out
dec
xchg
pop
cmp
mov
mov
std
in
cmp
pop
sbb
and
jge
popa
adc
cmp
mov
orb
push
je
mov
into
cmpsb
imul
add
add
cmpl
movsl
sarl
test
data16
mov
push
insl
movsl
mov
lret
push
and
negl
jl
cld
fcompl
arpl
dec
pop
cmp
lds
inc
je
dec
leave
sbb
lock
mov
xor
repz
inc
js
daa
out
push
test
mov
enter
fs
cmp
in
pop
push
dec
jle
jb
dec
mov
mov
inc
adc
xor
xchg
mov
push
cmp
jb
int3
int
ss
test
lahf
stos
iret
ret
movsb
push
sahf
lret
push
loope
stc
push
psubd
js
dec
and
fcoms
cwtl
inc
es
mov
push
scas
loopne
testl
dec
popf
mov
mov
xorl
fistps
into
sbb
cld
mov
int
jns
push
jne
dec
pop
repnz
repz
push
ret
xor
out
mov
dec
faddp
push
inc
or
fidivs
pushf
mov
add
data16
nop
jae
jbe
xor
sahf
jge
add
fisttpll
mov
test
dec
aaa
std
fwait
add
mov
xchg
sub
shll
pushf
xchg
popf
pop
cmp
push
aas
push
pop
test
data16
dec
in
cmp
xchg
dec
stos
xor
jmp
imul
iret
arpl
mov
push
inc
into
adc
dec
xor
sbb
loopne
jne
pop
add
and
sbb
in
jg
xchg
xchg
insl
sbb
out
fs
mov
xchg
add
imul
sahf
rol
mov
cltd
xchg
dec
insb
pop
jns
in
mov
pop
lods
mov
sub
and
inc
pop
pop
cltd
or
lcall
hlt
mov
mov
jg
jg
leave
decb
je
rcrl
add
scas
cmp
and
fadd
inc
insb
inc
das
stos
mov
push
repz
loop
adc
dec
adc
out
pop
or
insb
mov
or
enter
imul
ss
lods
insb
xor
pop
inc
adc
rorl
sbb
mov
sub
cmp
pop
add
and
cli
mov
pop
mov
jbe
mov
shlb
jl
cmpsb
inc
push
iret
cwtl
jl
pop
enter
shlb
cwtl
repz
add
push
outsl
movsl
ja
call
adc
into
ljmp
mov
ret
xor
pop
pop
pop
mov
sbb
mov
out
dec
repnz
cwtl
jnp
dec
push
loope
ret
outsb
sub
lock
ja
subl
incl
sub
data16
nop
xchg
or
movsl
or
adc
clc
mov
xor
loope
ret
push
pushf
in
sbb
fnstenv
enter
lahf
ret
ljmp
inc
loop
nop
fcoml
insb
pop
mov
cmc
arpl
std
push
mov
cmp
dec
xor
int
push
xor
jbe
dec
push
movsb
adc
and
scas
mov
jo
in
cmp
cld
aam
fldl
jg
test
cwtl
jmp
jmp
imulb
and
fcmovu
shll
lods
xor
mov
shrb
push
rol
push
movsb
pop
imul
or
xor
xchg
cmp
sub
mov
imul
push
jle
repz
pusha
sbbb
clc
jnp
pushf
xor
dec
inc
mov
xor
cmpsl
jmp
std
cmpsb
fwait
inc
cli
dec
mov
pop
aad
dec
push
dec
lret
popa
test
jp
stos
sub
mov
add
xchg
bound
lds
jmp
jno
cmp
enter
inc
or
add
pop
sbb
outsl
cmpsl
mov
lods
jnp
outsb
movb
popa
roll
mov
mov
mov
fwait
cmp
popl
popl
andb
or
pop
jnp
mov
mov
cmp
cmp
cmpsb
adc
clc
aaa
into
loop
sbb
movsb
dec
xorl
or
jmp
pop
rolb
pop
enter
jge
jae
stos
jle
ss
nop
add
ljmp
sbb
fadd
cmp
in
sbb
std
repnz
mov
mov
sub
out
xor
repz
jle
lret
cwtl
add
add
mov
int3
pop
lds
lret
pop
sub
pushf
fmul
sub
out
cmp
and
xchg
rcrl
xchg
jg
ljmp
push
sbb
cmpsb
xchg
add
leave
pmullw
pop
dec
imul
adc
pop
out
and
xchg
jne
push
xor
mov
push
xchg
mov
shrb
sub
cmp
mov
sti
arpl
rcll
sbb
aam
in
loop
xchg
cmp
outsb
cmp
sbb
jbe
pop
shll
xchg
pusha
mov
xor
adc
pop
nop
subl
or
mov
mov
lcall
mov
shlb
ret
pushf
mov
mov
sub
fs
adc
dec
std
cmp
sbb
mov
dec
push
lods
ljmp
cmp
mov
sbb
lods
imul
jbe
mov
add
fmul
xchg
jbe
xchg
xchg
adc
inc
xor
xchg
and
jl
ss
jge
mov
imul
inc
and
and
pop
bound
pop
lahf
jae
notb
or
fld
push
shl
ret
jmp
push
mov
dec
ljmp
aas
jne
mov
loop
adc
xchg
out
mov
push
sub
in
mov
cmp
jp
fwait
sahf
adc
push
hlt
icebp
xchg
pop
in
xor
inc
mov
icebp
push
stos
ret
stos
out
ljmp
sti
movsb
cmp
jmp
push
repz
insl
add
cli
test
test
cmp
pop
cmp
mov
adcl
sti
stos
mov
fs
lcall
aaa
adc
sti
ss
jge
rol
test
xchg
dec
cs
enter
enter
mov
and
mov
or
push
test
lea
xor
cmp
in
xchg
outsb
leave
or
pop
insb
das
sahf
cltd
xchg
sub
pop
lret
xchg
mov
push
insb
adc
sbb
mov
jg
mov
pop
cld
mov
push
lock
add
std
xchg
push
mov
fistpl
nop
stos
clc
sahf
mov
loope
cmp
sub
outsb
mov
dec
sub
repz
pusha
repnz
pusha
dec
and
les
hlt
repz
xlat
xchg
cli
xlat
push
xchg
jne
aam
gs
fdivrs
outsl
ds
jge
sub
scas
icebp
xor
sub
pop
mov
out
scas
stc
inc
ja
nop
unpckhps
pop
out
in
lods
fcmove
sub
das
add
enter
into
outsl
sbb
xor
cmp
xor
push
popl
fisttpll
sub
add
jo
inc
ret
ffreep
xor
ret
in
or
adcb
lahf
inc
sbbl
fldl
pop
dec
out
adc
leave
xor
stos
cld
fs
mov
sar
pop
fstpl
mov
xchg
lock
jb
xchg
shr
push
push
xor
or
jb
cmpsl
mov
xchg
mov
xchg
xchg
mov
xchg
incl
push
or
roll
xchg
add
scas
out
xor
cmp
int
add
cmp
mov
xor
orb
fisubl
cmp
adc
in
nop
jl
cld
inc
and
lea
sbb
repz
jecxz
push
pop
in
sub
sub
mov
orb
adc
jbe
xchg
lahf
jecxz
std
jno
dec
and
aas
sub
push
cmp
xchg
push
adc
and
pushl
js
out
add
imul
jnp
pop
pop
scas
adc
push
repnz
mov
jle
xor
mov
adc
jb
dec
and
ret
jp
iret
leave
xor
pop
mov
add
mov
int3
inc
sbb
mov
jl
pop
xchg
in
das
sbb
icebp
push
add
xchg
xorb
or
xchg
movntq
repnz
ja
imul
test
mov
insb
mov
or
and
sub
inc
adc
or
add
popf
add
test
xor
mov
insb
jnp
lea
je
mov
adcl
out
lret
mov
jno
in
sbb
hlt
int
xor
add
sbb
sbb
push
aad
sub
mov
sub
std
jae
dec
push
xchg
cmp
mov
mov
ds
ds
push
cmc
push
inc
xchg
loope
insb
les
cmp
or
inc
xor
in
into
arpl
mov
xor
or
inc
ds
rol
dec
imul
lret
add
aam
push
and
inc
cmp
cmp
jp
mov
inc
xchg
insl
sbb
dec
lahf
pop
add
mov
dec
roll
insl
mov
push
stc
rcrl
sub
lahf
sub
loop
or
push
mov
ret
packssdw
scas
jno
mov
mov
jp
xor
int3
inc
push
cmp
adc
fdiv
adc
sub
nop
inc
or
cmc
fs
cld
cwtl
in
and
xchg
sub
add
push
filds
or
dec
in
call
cmp
inc
movsb
dec
jge
arpl
fdivs
mov
cmp
fs
jno
stos
mov
mov
adc
pushf
lods
lods
xchg
test
nop
insb
xor
cmp
test
mov
arpl
pop
int3
and
mov
and
les
inc
cmp
xchg
hlt
xor
test
testb
notl
sbb
rep
inc
sub
fnstsw
pop
or
cld
add
mov
bound
sbb
inc
les
test
shrb
rcrb
sahf
cmp
aam
sub
xor
push
adc
fldenv
cmp
imul
inc
fcomps
repnz
xor
shl
jbe
mov
push
push
sbb
pextrw
sub
negl
xchg
mov
and
dec
je
cltd
cli
adc
ficompl
jle
jo
mov
insl
pop
addr16
stos
shl
mov
imul
sbb
xor
sti
outsb
xor
mov
xlat
mov
cmp
or
mov
es
mov
mov
fimull
stc
aas
or
fstpl
repz
jne
fwait
cmp
pop
mov
mov
cmc
adc
lock
aam
sbbl
mov
lcall
ja
test
dec
cli
arpl
sbb
gs
popa
out
and
lret
out
fwait
in
sti
jno
dec
or
cmc
fsubrs
mov
xchg
dec
xor
ss
add
jle
fisubl
out
jbe
sahf
std
leave
and
inc
push
shlb
push
bound
sub
sti
and
push
or
mov
dec
jmp
scas
das
push
sti
into
pop
les
jne
dec
or
call
lea
and
mov
test
rcrl
mov
into
imul
push
mulb
mov
push
push
mov
dec
pop
in
pop
lret
sbb
inc
mov
pop
std
leave
sbb
cmpsl
and
cmp
push
movsl
out
or
outsl
popf
jg
dec
test
aaa
pop
mov
sub
adc
mov
js
jp
xlat
cwtl
loopne
push
les
lods
dec
lret
add
pop
icebp
xchg
and
push
sbb
push
push
sti
and
mov
in
gs
repz
jg
cmp
subl
js
pop
cltd
and
cwtl
fcompp
in
and
stos
cs
pusha
stc
fnstcw
int3
sbb
mov
pop
daa
aam
and
and
outsl
lret
popf
pop
pop
adc
lea
add
popf
cltd
sbb
popf
push
xchg
mov
xchg
data16
fwait
jno
jmp
mov
rcrl
aam
xchg
movsl
pop
dec
fcmovbe
mov
scas
cmpsl
pop
iret
push
nop
xchg
hlt
xlat
call
aas
adc
cld
xor
icebp
jle
push
xor
stc
jl
jmp
insl
cli
dec
xchg
cmpsb
shlb
or
and
jae
or
mov
sub
add
in
sub
sbbb
or
sbb
leave
decl
test
insl
and
push
andb
xchg
cli
jb
psllq
divl
xlat
and
or
cwtl
jecxz
jp
imul
bound
ss
insl
enter
faddl
adc
xchg
mov
enter
adc
or
or
pop
je
loopne
ds
fists
imul
push
cmpsb
sbb
push
jle
in
cmp
sub
cmpsb
mov
mov
add
mov
add
pop
inc
cmp
xchg
xchg
rcr
ret
fs
scas
xchg
and
xchg
mov
adc
out
and
cmp
ret
or
leave
cmp
imul
add
inc
jbe
icebp
jl
and
dec
dec
lods
ljmp
dec
lods
push
mov
jb
test
xorb
pop
insb
mov
bound
push
sub
mov
dec
jmp
pop
insb
hlt
adc
dec
es
or
data16
cmp
cmpsb
sahf
pop
xor
adc
sbb
sbb
lret
sub
mov
aad
daa
outsb
rorl
mov
or
aad
sub
push
jg
xor
popa
push
add
add
call
insb
mov
dec
rcll
outsb
dec
dec
mov
fwait
jmp
inc
shlb
fidivl
aam
jmp
scas
mov
mov
mov
daa
rorl
lret
push
dec
adc
mov
rolb
dec
iret
mov
js
orl
or
mov
mov
push
repz
shr
sub
test
gs
orl
movsl
stos
andl
mov
mov
sbb
xchg
xor
xchg
cmp
inc
ret
or
sbb
cmpsl
call
cmp
lea
aas
in
neg
repz
jns
in
std
xchg
pop
jnp
dec
pop
jge
mov
sbb
fnsave
xor
popa
cmp
adc
sti
lds
mov
ljmp
clc
movsl
pop
mov
scas
mov
and
test
out
sub
neg
lahf
sbb
mov
pop
fisttpll
xor
andl
xchg
shl
insl
mov
push
push
int3
mov
insl
adc
mov
mov
and
movzbl
mov
mov
mov
add
inc
push
sbbb
popa
pop
add
scas
lods
insl
arpl
lret
movb
orb
leave
loope
cs
sbb
lahf
rcr
or
mov
sub
or
cld
lahf
mov
les
xchg
gs
mov
rorl
and
scas
rol
mov
imul
icebp
jns
add
mov
call
xor
dec
inc
push
daa
sbb
jae
jbe
mov
mov
xchg
stos
push
test
sbb
jge
xor
loop
fidivl
add
ret
sub
jo
pop
lock
lret
cmp
jb
fstpl
repz
pop
ds
mov
and
jp
in
ffreep
imul
rcll
inc
pop
xor
hlt
movsl
jbe
cltd
sbb
or
adc
ljmp
or
jl
fstpt
jo
add
mov
testb
insl
std
call
test
and
movsl
pop
cmc
lock
fldt
je
xchg
pusha
int3
rcrb
add
pusha
cmpsl
cmc
sbbb
mov
gs
test
stc
mov
mov
in
inc
das
add
daa
sti
and
push
fstps
stos
or
das
push
dec
and
dec
mov
repz
mov
movsb
pushf
cwtl
mov
ret
scas
sub
call
test
dec
movsb
imul
sbb
dec
fildll
and
out
gs
int
mov
loopne
in
cld
mov
repz
inc
inc
fwait
add
cmpb
gs
sub
jg
and
shl
push
popa
xor
iret
pop
jbe
cmp
imul
lock
and
add
xor
paddd
push
addr16
call
in
mov
fdivrs
div
adc
cmp
add
pop
xchg
mov
call
push
scas
mov
sub
pop
push
xchg
mov
dec
sbb
pushl
mov
clc
adc
add
dec
mov
pop
cmp
or
pop
aas
xor
fwait
movsl
xor
adc
xor
and
cwtl
rcrb
and
pusha
mov
jle
sub
insb
mov
and
mov
jne
decl
jbe
jmp
lahf
cwtl
arpl
xor
mov
loop
pop
insl
enter
iret
sub
data16
imul
inc
pushf
jmp
dec
jns
cmp
test
xrelease
mov
out
lret
mov
lea
ret
out
mov
push
jnp
cmp
cli
icebp
and
lcall
dec
fadds
cmp
outsb
test
mov
ljmp
xchg
leave
pusha
out
lods
adc
jnp
or
std
jb
cltd
dec
into
or
xchg
test
sar
daa
dec
insl
jg
sbb
shrb
adc
pop
inc
cmpsb
mov
repz
cmp
cmp
test
sub
cmpsl
in
mov
movsb
hlt
out
pop
push
cmp
or
xor
nop
outsb
mov
push
mov
out
xchg
xchg
lea
sub
cs
out
notl
iret
insb
dec
lret
jecxz
sub
mov
cli
nop
or
add
loope
inc
sbb
dec
xor
xchg
fs
jae
jp
fs
inc
dec
ret
mov
jg
xor
imul
movsb
mov
and
xchg
lds
stc
pop
and
movsb
nop
inc
sbb
push
sub
loope
xor
aam
enter
cli
insb
into
mov
fdivrs
int
les
bound
mov
push
es
xchg
cmp
insl
fs
insb
popa
sub
push
push
jg
and
out
sarl
and
shlb
sahf
pop
mov
xor
jnp
jl
sbb
test
sub
arpl
jecxz
outsb
adc
inc
sti
mov
imul
test
add
sti
inc
out
inc
jp
addr16
arpl
lea
popf
pop
into
cmp
out
shll
or
or
int3
mov
xchg
shrb
out
ljmp
add
cmp
sbb
pop
jl
lods
mull
sahf
bound
push
mov
hlt
sbb
addr16
or
shll
ljmp
and
nop
rolb
pop
sub
call
lods
loopne
xchg
xchg
and
je
cmp
push
cld
mov
push
dec
sarb
pop
hlt
ret
cmp
jecxz
push
jg
in
shr
cmp
jo
sbbb
pop
pop
subl
xchg
mulb
push
pop
vandps
mov
mov
loop
sub
jmp
dec
jno
or
mov
dec
jl
push
ret
dec
push
pop
aad
xchg
jmp
cs
jbe
sbb
add
negl
adc
mov
mov
idivb
adc
lds
rcll
push
fucompp
sbb
cli
adc
fcoms
sbb
xchg
aam
jae
sarl
jmp
mov
in
repnz
mov
sub
mov
jmp
rcrb
cmp
in
push
fwait
xor
push
sbb
sub
lock
xchg
jecxz
lret
paddq
adc
inc
add
das
adc
popf
adc
cmpsl
xchg
arpl
jno
dec
dec
jle
out
push
roll
int
int3
cmc
insb
xchg
repnz
pop
xchg
xlat
icebp
jmp
mov
cld
imul
stos
outsl
or
cmpb
aas
mov
pop
mov
pop
std
lahf
movsl
and
pop
lock
pop
push
jb
clc
pop
or
inc
dec
cmp
int3
enter
jb
js
shl
dec
divb
bound
dec
repnz
test
xor
xor
ss
xor
cmp
insb
xchg
mov
xor
incb
mov
subb
jp
dec
lcall
test
and
sahf
pop
sbb
push
fcoml
sbb
out
and
into
mov
aaa
mov
dec
cmp
mov
sub
inc
xor
loope
aaa
pop
test
imul
fistpll
andb
test
pusha
fwait
add
aas
push
mov
fs
or
push
arpl
test
jg
jne
pusha
pop
in
cmp
jge
push
jae
adc
pop
int3
outsb
jg
and
mov
and
lods
mov
inc
xor
inc
ljmp
xor
cwtl
insb
mov
or
xor
sbb
enter
mov
repnz
movsb
dec
cmpsb
mov
inc
pop
cmpsb
cmp
sub
cmpb
nop
ljmp
imul
pop
cmp
adc
aas
jmp
data16
mov
int
add
cmp
mov
pushl
mov
out
outsl
mov
fistpll
cltd
dec
push
outsl
and
sti
lods
lods
xor
sete
jbe
frstor
test
insb
and
add
stos
sarl
dec
adc
xor
bound
dec
cmc
push
cwtl
mov
stos
call
add
mov
rcll
fwait
jmp
ficomps
lods
pop
insb
dec
nop
inc
xchg
inc
out
test
xor
and
mov
pop
push
out
mov
jmp
mov
rcll
cli
call
ret
inc
cltd
dec
adc
xlat
adc
mov
pusha
xchg
mov
je
loop
test
arpl
fwait
xchg
jg
scas
or
mov
nop
and
int3
pop
repz
insl
mov
stc
pop
leave
repnz
add
fwait
mov
mov
lahf
xor
lahf
out
fwait
and
push
cmpb
imulb
pop
mov
mov
add
in
cmp
xlat
jnp
leave
inc
pop
mov
cs
scas
push
adc
jmp
dec
pop
arpl
rcll
cmp
outsb
jbe
aas
sbb
aaa
or
sub
fmuls
sahf
push
mov
out
cs
mov
jb
xchg
lock
inc
push
fmul
sub
jno
repnz
sub
push
fists
sub
adc
sub
popa
inc
sbb
push
out
cli
cmp
cmpb
fisubrs
sti
sub
rorl
pop
out
jcxz
rcrl
sub
filds
or
test
sbb
and
ret
mov
add
mov
xor
and
push
call
stos
or
xor
mov
stos
inc
sub
test
insl
shrl
in
in
imul
dec
mov
push
ljmp
pop
or
and
mov
icebp
sbb
dec
out
mov
outsl
jecxz
pop
fsubrp
jle
aaa
jmp
push
scas
cmp
call
movsb
jb
fwait
jns
add
cmp
push
data16
mov
out
jmp
push
mov
lods
xorl
cmc
cli
sbb
orl
xor
cmp
movsb
movsl
add
scas
es
into
inc
mov
inc
and
jge
dec
ret
lds
and
mov
ljmp
mov
in
xorl
sarb
xchg
std
adc
xor
into
cmp
dec
scas
cwtl
lods
bound
inc
ficompl
dec
repnz
push
aam
inc
cmp
mov
imul
lock
pop
ffreep
sbb
ds
and
cmpsl
shrb
push
call
sub
pop
and
test
arpl
test
push
adc
ds
call
pushf
test
pusha
dec
addr16
jmp
dec
sbb
fldenv
pop
sbb
je
xchg
sbb
mov
sti
sub
loope
mov
add
shlb
add
xor
dec
add
pop
mov
ret
call
xchg
add
fcmovne
inc
push
lret
pop
jecxz
adc
js
sar
fistpll
das
sti
jle
bound
jg
gs
lds
push
cltd
int
leave
push
pop
into
dec
into
fcoml
decl
jno
js
js
out
repz
sbb
xor
popf
lds
dec
jne
sbb
adc
sub
rdpmc
pushf
push
dec
xchg
jb
icebp
pop
outsl
out
lcall
addb
mov
add
rcrl
mov
add
sub
fwait
mov
sarb
pusha
ret
xchg
inc
mov
shlb
mov
scas
out
xor
in
pop
jge
shr
out
xchg
mov
mov
xchg
stc
cli
dec
xchg
imul
iret
and
xchg
xchg
dec
or
xor
dec
cwtl
enter
dec
decb
dec
xchg
inc
out
popf
xchg
xchg
dec
test
jnp
sbb
adc
adc
adc
xor
adc
fcompl
mov
jmp
adc
int3
sub
jle
mov
inc
outsb
and
xchg
cwtl
arpl
xchg
or
add
jae
inc
mov
xor
xchg
insl
push
fsubrs
sub
orl
pop
out
jne
push
xor
ret
mov
dec
cmpsb
outsb
js
orb
mov
movsb
xchg
pop
dec
sbb
test
stc
xor
jmp
dec
mov
and
mov
pop
fnstenv
out
adc
fld
out
fcoml
jae
ret
adc
jl
lds
dec
mov
push
xor
or
ljmp
mov
pop
dec
cwtl
shll
cmp
and
int3
divl
in
mov
dec
int
xchg
in
or
lcall
in
mov
les
mov
pop
int3
cmp
mov
setge
cmp
in
inc
les
lock
lcall
cltd
out
xor
out
mov
outsb
push
and
pop
or
add
xchg
ret
pop
lret
in
jnp
push
mov
sub
push
out
ret
adc
insl
ret
into
ss
mov
jb
add
and
fstl
movsl
sub
jae
mov
sbb
shll
test
add
cmpsl
xor
fdivr
and
sub
push
xor
push
sti
stos
rorl
push
xchg
cmp
xor
sahf
es
es
test
mov
push
in
stc
fidivrl
out
sbb
adc
mov
mov
int
cld
mov
sbb
cs
and
mov
bswap
mov
popf
lahf
push
and
and
and
into
xchg
cmc
jg
adc
sub
fsts
out
jae,pt
xchg
mov
iret
lea
lahf
sbb
sub
ret
enter
hlt
cli
pop
cmp
lock
mov
mov
popa
xchg
in
ficompl
dec
sbb
cld
pop
clc
push
frstor
xor
out
in
lcall
jp
ss
mov
test
mov
lret
inc
jl
pop
fbstp
mov
loope
lret
jne
loop
add
xchg
ja
aad
cmp
loopne
jb
or
inc
and
xchg
scas
jb
shr
in
sub
xchg
lcall
mov
or
nop
mov
cli
sbb
xor
push
push
enter
nop
add
xchg
mov
xor
pop
loop
lea
xor
inc
push
xchg
mov
outsl
popf
push
es
mov
in
out
jnp
and
aad
xor
es
movsl
sub
xor
cmp
in
daa
mov
rcrb
mov
bswap
int3
sub
shlb
inc
outsb
fs
nop
filds
inc
repz
js
xchg
dec
and
ret
test
push
and
add
std
mov
dec
mov
subl
cmpsb
inc
and
notl
adc
dec
xchg
mov
push
or
in
mov
addr16
imul
fsubs
test
insl
loopne
xchg
popf
xchg
adc
jecxz
sub
mov
rolb
dec
lock
push
lods
adc
push
jp
jb
or
outsl
pop
push
and
in
adc
adcb
pushf
out
cld
pop
jne
mov
mov
add
add
pop
push
daa
sub
sbb
mov
sbbb
add
scas
dec
ret
pop
lock
push
mov
sbb
cmc
pop
sbb
cmp
mov
incb
push
in
fs
hlt
movsb
lods
subl
jb
lcall
inc
mov
inc
gs
repnz
ss
xlat
lret
xor
cmp
fwait
push
pop
adc
test
jno
dec
cld
test
insb
pop
lods
insl
gs
subl
fmuls
adc
ljmp
mov
out
test
movsb
push
xchg
sbb
arpl
lds
adc
sarb
in
add
roll
xchg
jb
push
cmpsb
xchg
xchg
out
stc
pushf
imul
push
in
inc
sarl
mov
push
fldl
dec
xchg
test
cmp
mov
pop
mov
loope
pop
imul
xor
int3
and
pop
mov
xor
mov
cmp
and
mov
mov
mov
cmp
dec
inc
es
gs
fdivrl
xchg
or
or
or
in
out
lahf
mov
loope
dec
xchg
mov
fisttpl
mov
ret
pop
andl
inc
xchg
dec
xor
and
arpl
push
inc
xchg
scas
inc
jo
mov
sub
fldcw
out
mov
mov
dec
vmaxps
mov
inc
or
mov
loop
mov
sti
sbb
xor
lret
sti
sbb
fadds
cmp
fwait
in
cmpb
push
or
jp
jp
bound
fildll
fisttps
xchg
dec
mov
push
xchg
jne
pop
lret
ret
inc
fists
mov
clc
ss
movsb
dec
push
sub
shl
shlb
pop
out
pop
subl
or
les
scas
scas
or
inc
or
mov
mov
imul
sbb
cmc
xlat
loop
mov
or
pop
adc
or
cmpsb
xchg
cmp
mov
jecxz
inc
xchg
mov
adc
lret
jno
jecxz
cmc
jg
xchg
out
shrl
ret
mov
xorl
fldcw
fmul
cmp
lret
lcall
out
sahf
dec
and
xchg
push
mov
lods
sbb
adc
or
insl
scas
sahf
test
pusha
xchg
push
and
jecxz
xchg
pop
mov
fbld
cmp
rcll
addr16
adc
ret
xchg
mov
add
pop
fbld
testb
stos
rcrl
lock
xchg
aad
loopne
mov
stc
dec
jle
ret
inc
lods
jbe
call
pushf
mov
push
cltd
pop
test
shrl
and
pop
daa
sub
push
mov
pop
outsb
xchg
jmp
roll
add
pop
xor
pop
xlat
mov
stos
jae
sbb
fldl
fsubs
cmpb
shl
lods
inc
aaa
pop
out
popa
mov
mov
iret
sahf
and
sub
imul
orb
jl
cwtl
and
pop
stos
cld
repz
stc
stos
pop
les
jecxz
jge
pop
or
movsl
sub
mov
pop
loopne
sub
gs
loopne
scas
add
cmp
sub
lret
lea
adc
dec
jge
fs
scas
mov
pop
mov
push
pop
inc
add
lahf
add
rcll
push
test
arpl
pop
movsl
mov
jge
pusha
loopne
rcrl
and
lods
jne
push
imul
cmpsl
jnp
mov
inc
mov
mov
jb
sbb
in
inc
sub
xchg
adcl
lds
jp
jmp
outsb
mov
pop
mov
jbe
or
nop
sub
jle
sub
enter
add
push
data16
out
jmpw
inc
lret
sub
stc
fs
dec
sbb
movsb
sbb
xchg
xor
mov
dec
inc
test
mov
cmpsb
dec
mov
xchg
les
sbb
daa
inc
aam
jmp
mov
mov
mov
daa
div
fs
fdiv
or
push
ss
pushf
adc
movsl
je
add
mov
std
mov
sub
adc
pop
stc
imul
ret
imul
xor
lret
xchg
mov
aam
mov
aam
into
dec
adc
pop
mov
stos
lds
shrl
repz
sbb
out
dec
or
and
stos
sbb
dec
xchg
test
jecxz
mov
add
dec
addr16
into
outsl
clc
jg
and
insl
sbb
lock
xor
shr
mov
gs
mov
mov
and
and
push
push
push
hlt
fcmovnbe
fsubs
call
loope
mov
sbb
andb
fstpl
pop
mov
orl
ljmp
inc
mov
test
jb
jbe
sub
clc
int
mov
subb
imul
dec
out
cmp
mov
mov
push
add
call
and
call
inc
incb
xchg
mov
mov
cmp
xor
push
xor
mov
mov
push
or
pushf
mov
cmc
ret
push
jecxz
jecxz
ds
or
sub
je
rcrb
adc
mov
enter
or
and
sti
fildll
mov
imul
and
pop
sub
add
fwait
into
adc
ficompl
stos
mov
rcrb
test
and
repz
adc
lret
mov
loop,pn
sbb
mov
adc
adc
js
aas
pop
mov
lret
addl
in
push
ja
jg
mov
mov
cmp
notb
xchg
int
lahf
sar
mov
ja
inc
dec
sbb
lds
cli
fstpl
adc
and
negl
sti
testb
mov
xchg
jae
xor
test
inc
add
fnstcw
add
add
divl
mov
inc
pop
push
mov
cmp
jp
jecxz
js
incl
xor
addr16
fwait
ret
pop
out
jl
cmp
and
xlat
negl
xchg
and
adc
int3
repnz
es
test
mov
fldt
sub
stc
and
js
movsl
pop
or
in
in
punpcklbw
pop
lods
outsb
and
into
stos
lods
dec
fs
xlat
nop
cltd
cli
adc
mov
push
addr16
adc
pop
mov
imul
lods
or
jne
inc
push
int3
and
cmpsb
fcmovu
test
sub
icebp
cs
es
bound
mov
flds
push
stos
out
mov
sbb
mov
cld
ljmp
pop
mov
gs
add
jbe
mov
mov
notb
aad
xor
xor
scas
loopne
inc
das
push
lods
adc
fstps
mov
adc
ljmp
out
icebp
imulb
sbb
push
mov
sbb
jmp
push
les
add
jmp
jmp
push
je
inc
nop
pop
xchg
flds
jnp
faddl
cmp
ja
es
push
sbb
jp
jl
dec
aam
inc
int3
push
push
mov
orl
int3
stc
xchg
movsb
pop
cltd
jo
lock
and
cmpsl
sub
out
lea
mov
push
cltd
cmp
pop
nop
fwait
popa
sbb
sahf
leave
and
lret
push
jae
dec
mov
enter
jp
stos
cs
mov
inc
mov
sub
aas
jmp
jle
loopne
mov
cli
inc
sti
std
add
dec
pusha
scas
sahf
rcl
sub
pop
insl
js
pop
push
push
outsb
das
sbb
sbb
mov
lcall
xchg
and
clc
pop
imul
mov
jmp
mov
pop
int
and
outsl
or
or
test
in
sub
in
imul
in
in
outsl
cld
shll
or
js
dec
mov
lock
ljmp
cmpsl
clc
js
pop
icebp
pop
fcomi
mov
mov
push
push
mov
inc
xor
add
xchg
lret
pop
and
lods
inc
jmp
shrb
sbb
ja
and
ljmp
addr16
mov
sbb
das
hlt
pop
sub
insl
popf
or
mov
add
push
xor
dec
repz
xlat
or
fwait
jg
mov
cs
adc
mov
inc
outsb
gs
clc
fisubrs
add
negl
sub
push
cwtl
inc
sub
pop
jne
dec
lds
sbb
adc
mov
rcr
pop
pop
cmp
sbb
testb
lods
sti
lods
push
mov
mov
add
pop
movsb
aas
push
mov
loop
dec
mov
mov
ljmp
orl
push
xchg
or
sbb
inc
jns
shll
jno
mov
jns
sbb
push
iret
pushf
out
popa
xchg
xor
loope
inc
xchg
cmp
aaa
or
mov
mov
sbb
pusha
ficompl
mov
rolb
pushf
mov
inc
mov
std
pop
or
sbb
cld
jbe
bswap
mov
pop
pop
callw
arpl
sti
inc
push
cmp
cli
xchg
cld
mov
push
mov
pusha
or
lret
aaa
out
sbb
add
xchg
daa
cmpl
push
mov
cmp
mov
or
dec
jg
mov
in
jo
ljmp
lods
sbb
or
sbb
mov
xor
adc
insb
and
sub
mov
test
xlat
popa
xchg
rclb
sbb
add
fdivrl
jecxz
sub
sbb
popf
hlt
shrb
and
jl
js
xchg
and
cmp
cwtl
sub
and
hlt
int3
inc
movsb
or
lds
jl
loop
push
mov
test
fmul
adc
and
arpl
dec
out
add
pop
inc
lahf
fldt
pushf
and
cmc
push
push
jns
inc
lds
je
xor
cs
ret
dec
pop
mov
xor
fmull
sbb
jnp
jae
movsb
outsb
or
dec
pop
cmc
cmp
sbb
mov
push
enter
push
adc
fidivs
xchg
inc
imul
and
nop
fstps
nop
jo
xchg
leave
xchg
and
aaa
dec
pop
test
add
push
les
and
xchg
iret
lods
mov
mov
out
mov
jo
pop
ficomps
mov
push
jo
enter
inc
icebp
adc
push
mov
test
jg
arpl
pop
sbb
pusha
popa
lock
call
cmc
lock
xchg
dec
movsb
xor
mov
and
lods
dec
or
js
movsb
jne
dec
aas
dec
jl
in
jb
mov
xor
lcall
out
das
xchg
icebp
movsb
in
scas
sar
sbb
outsl
sbb
ljmp
shll
sbb
scas
in
xor
sbb
cwtl
inc
jmp
or
inc
jp
inc
or
int
scas
test
ljmp
fadds
mov
repz
das
lahf
lret
pop
es
test
in
mov
cltd
movsb
jle
cli
lahf
and
xor
jle
push
mov
sbb
rol
fucomi
and
jg
mov
sub
mov
or
adc
inc
mull
stos
push
jno
jmp
pop
arpl
and
cmp
in
ljmp
add
and
jns
sub
add
ret
mov
repz
xchg
rcll
je
adc
sti
fcmovnu
dec
cs
xchg
sbb
incb
jge
out
add
jp
dec
push
stos
push
dec
mov
es
and
or
fstl
insb
dec
subl
add
push
test
sub
repz
jcxz
test
sub
cli
into
bound
push
adc
sbb
or
cmp
xchg
xor
enter
ljmp
jmp
addr16
lret
xor
in
cwtl
mov
popf
add
dec
ljmp
fwait
dec
cmpsl
cmp
lods
jb
pop
jo
adc
stc
mov
scas
mov
sub
pop
or
mov
stos
sub
dec
bound
sub
loopne
xor
cs
mov
sub
or
int3
aaa
cs
mov
mov
push
mov
sti
jl
mov
add
mov
xor
rcrb
dec
pushf
push
jns
jbe
jne
dec
sbb
loope
test
and
es
pop
rcl
sbb
fadds
repz
lret
add
adc
test
in
lahf
pop
inc
xchg
hlt
mov
push
inc
mov
pop
or
mov
fdivl
test
imul
stos
ja
in
inc
or
jne
sub
popf
adc
rolb
into
pop
adc
push
sahf
in
xchg
dec
dec
iret
xchg
fistpll
mov
stc
jae
pusha
push
outsl
hlt
aaa
dec
dec
push
add
lret
in
call
mul
cmpb
mov
xor
and
cli
dec
in
xchg
icebp
into
or
jbe
and
xlat
sarb
cmp
or
aam
ret
adc
arpl
push
pop
push
pop
and
sbbl
pusha
sbb
mov
leave
outsl
mov
lcall
fildl
aas
or
bound
pop
xchg
insb
out
lock
inc
cmp
insl
dec
and
dec
stos
sbb
xchg
out
icebp
xchg
in
and
push
daa
push
and
sub
inc
inc
xor
shrl
aaa
and
stos
mov
push
cmp
out
add
cmpsl
fistl
pushf
shrl
int
aas
stos
jp
in
jl
add
outsb
hlt
xchg
fwait
nop
jo
push
insl
mov
or
inc
cmpsb
out
push
mov
mov
inc
loopne
scas
jg
inc
inc
xor
bound
sub
loopne
incl
xchg
mov
into
jge
cmp
add
and
xchg
jge
push
aam
test
push
dec
adc
outsb
mov
aas
or
jo
jbe
loope,pt
or
roll
xchg
sub
add
imul
or
int3
or
cltd
test
jmp
xor
insb
mov
cmpb
jecxz
fdivrs
lods
cmp
add
cwtl
cltd
fbstp
jmp
imul
icebp
xchg
imull
push
or
scas
mov
jb
sbb
adc
out
or
sub
gs
mov
push
cmpsl
mov
or
push
icebp
inc
icebp
out
dec
dec
xchg
inc
dec
xchg
sbb
push
add
sub
cmp
fldcw
dec
cmp
pop
leave
pop
sub
push
movsb
jl
inc
aas
jae
mov
jmp
sub
sub
push
leave
in
cld
into
mov
aam
out
into
add
iret
int3
jmp
dec
data16
dec
cmp
loopne
sub
cli
lods
xlat
inc
cli
and
ja
dec
pop
ficomps
in
fimull
jbe,pt
sub
dec
stc
dec
xchg
jl
test
ds
ror
lret
ret
and
or
cmp
adc
push
cmp
icebp
outsl
and
sbb
movsl
jmp
ret
loop
movsb
aas
dec
xlat
pop
jo
sub
andl
int
xchg
stc
mov
push
iret
repz
jno
shlb
pop
pop
pop
mov
inc
ja
movsb
inc
or
jnp
mov
je
xor
loop
data16
and
push
int
and
xchg
testb
fstps
frstor
shlb
out
dec
sbb
ret
stos
jae
aaa
arpl
xlat
jae
fstps
imul
adc
iret
popa
pop
sbb
jnp
cltd
mov
ret
test
add
sub
fidivs
and
test
fxch
xchg
jno
test
mov
fsubrp
push
insl
xor
andl
jp
push
add
stc
xchg
inc
dec
inc
mov
adcl
lock
std
frstor
push
daa
or
push
std
mov
mov
pushl
out
adc
push
add
bound
cwtl
icebp
clc
inc
movsb
stos
fistpl
sti
mov
pusha
hlt
inc
mov
cmp
dec
std
and
stc
jle
mov
pop
add
es
ss
xchg
mov
and
cmp
fisubrs
mov
addl
pop
push
imul
aas
inc
jne
inc
cli
out
call
nop
popa
ds
push
and
imul
mov
mov
bound
sbb
cld
fiadds
inc
add
add
cmp
add
add
add
xor
add
mov
add
add
add
addb
add
add
add
nop
add
sub
add
mov
pop
add
loopne
add
or
add
add
add
or
add
push
add
movb
add
add
add
add
add
push
add
cmp
add
or
add
add
add
xchg
add
cmp
add
or
add
add
add
add
ljmp
add
add
add
add
add
add
add
ret
mov
add
add
add
push
add
addb
add
js
add
add
add
or
add
add
dec
adc
add
add
add
add
add
sbb
add
add
add
add
loopne
add
add
add
or
add
add
add
add
and
add
or
dec
add
add
dec
add
dec
add
add
add
add
adc
add
add
add
or
add
add
add
add
add
add
dec
add
sub
add
and
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
addb
add
addb
rcr
add
add
add
or
add
or
adc
adc
push
push
push
add
sbb
and
and
sub
sub
push
push
push
add
dec
add
inc
add
cmp
add
jl
add
push
push
add
add
add
movb
out
add
add
add
add
cltd
add
add
add
add
xor
add
xor
add
add
cltd
xor
add
xor
add
xor
add
data16
xor
add
add
cltd
data16
int3
data16
jmp
add
cltd
add
xor
add
cltd
cltd
add
int3
cltd
add
lcall
add
xor
add
data16
add
cltd
int3
add
int3
int3
add
dec
add
incw
add
incl
add
add
add
add
add
xor
cltd
add
add
add
add
add
add
xor
add
xor
add
xor
cltd
xor
add
xor
add
xor
add
xor
xor
add
xor
cltd
xor
int3
xor
jmp
add
cltd
xor
xor
xor
cltd
cltd
xor
int3
cltd
xor
lcall
xor
xor
xor
data16
xor
cltd
int3
xor
int3
int3
xor
dec
xor
xor
xor
pushw
add
pushl
add
pushl
add
add
xor
data16
data16
add
incl
data16
xor
xor
data16
data16
xor
pushl
data16
data16
data16
data16
data16
cltd
data16
cltd
data16
data16
cltd
data16
cltd
data16
int3
data16
int3
data16
int3
data16
int3
data16
jmp
xor
data16
jmp
incl
int3
add
add
add
cltd
cltd
add
add
add
add
add
cltd
add
xor
add
cwtd
add
cwtd
add
cltd
add
cwtd
add
xor
add
cltd
add
cltd
cltd
add
cltd
cltd
add
int3
cltd
add
int3
cltd
add
data16
int3
cltd
add
int3
cltd
add
lcall
add
cltd
add
lcall
add
add
add
add
add
add
add
xor
add
int3
add
xor
add
xor
add
data16
add
data16
add
cltd
add
data16
add
cwtd
add
cltd
int3
add
cltd
int3
add
int3
add
cltd
int3
add
cltd
int3
add
int3
int3
add
int3
int3
add
int3
add
int3
int3
add
int3
int3
add
dec
add
dec
add
cltd
add
dec
add
dec
add
add
add
incl
cltd
add
add
xor
add
xor
add
incl
cltd
xor
add
xor
add
xor
add
incw
xor
add
int3
add
incw
jmp
add
cltd
incl
xor
incl
cltd
cltd
incl
int3
cltd
incl
lcall
incl
xor
incl
data16
incl
cltd
int3
incl
int3
int3
incl
dec
incl
xor
incl
dec
add
incl
jmp
add
data16
jmp
data16
jmp
add
incl
movsl
add
add
pop
add
ja
xchg
xchg
add
lret
lret
add
xlat
xlat
add
fstp
add
jecxz
add
ljmp
clc
clc
clc
add
sti
lock
addb
add
add
incl
add
add
add
add
add
incl
incl
add
add
ljmp
add
ljmp
xor
add
add
mov
add
add
ljmp
pop
xor
lahf
inc
add
in
mov
add
ljmp
pop
xor
lahf
lahf
lahf
inc
add
mov
imul
add
out
out
pop
pop
mov
lahf
repnz
add
mov
imul
out
out
out
out
pop
mov
repnz
in
mov
imul
ljmp
add
repnz
out
out
inc
in
mov
imul
mov
add
add
in
in
in
out
out
inc
in
mov
imul
ljmp
add
add
lock
in
in
inc
in
mov
imul
repnz
lahf
pop
pop
add
out
idiv
lock
out
inc
in
incl
imul
ljmp
jae
out
testl
in
incl
in
imul
ljmp
mov
incl
in
incl
imul
imul
pop
push
push
jae
loope
mov
inc
pop
pop
pop
pop
pop
add
add
in
incl
div
div
ljmp
mov
add
add
pop
out
in
add
add
incl
div
div
add
jmp
loope
mov
in
in
in
in
in
pop
pop
in
add
add
incl
div
div
add
in
in
in
in
jmp
in
add
add
in
in
in
in
add
div
testl
in
in
in
in
in
in
in
in
in
in
in
in
out
in
add
add
ljmp
div
add
out
or
in
ljmp
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
in
add
in
in
in
in
in
in
in
ljmp
incl
in
add
add
add
add
ljmp
in
incl
add
add
add
add
add
add
pop
in
in
ljmp
incl
sti
jp
xor
xor
dec
dec
dec
add
pop
in
add
incl
in
incl
ret
pop
jp
xor
xor
dec
dec
add
pop
in
add
in
in
in
in
in
add
add
pop
jp
xor
xor
dec
add
pop
in
add
cld
cld
add
add
cld
cld
cld
add
add
in
incl
ret
pop
ret
pop
jp
xor
xor
add
pop
in
add
cld
cld
add
cld
cld
cld
cld
cld
cld
add
add
incl
pop
ret
pop
ret
pop
jp
xor
xor
incl
in
add
cld
cld
add
cld
cld
add
cld
cld
add
add
incl
jp
ret
pop
ret
pop
jp
xor
add
pop
in
add
cld
cld
add
add
add
cld
cld
add
add
incl
jp
pop
ret
pop
ret
pop
jp
xor
incl
in
add
cld
cld
add
add
cld
cld
cld
add
add
in
incl
jp
jp
ret
pop
ret
sti
jp
add
pop
in
add
cld
cld
add
cld
cld
cld
add
add
add
in
incl
add
add
add
add
add
add
pop
in
add
cld
cld
add
cld
cld
add
cld
cld
add
add
incl
in
add
cld
cld
add
cld
cld
cld
cld
cld
cld
add
add
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
add
incb
inc
clc
add
shlb
shlb
jg
add
jg
add
aas
rolb
aas
rolb
aas
rolb
aas
rolb
aas
rolb
aas
rolb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
js
add
cmp
add
cmp
add
cmp
add
js
add
clc
add
xor
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
addb
add
addb
rcr
add
add
add
or
add
or
adc
adc
push
push
push
add
sbb
and
and
sub
sub
push
push
push
add
dec
add
inc
add
cmp
add
jl
add
push
push
add
add
add
movb
out
add
add
add
add
cltd
add
add
add
add
xor
add
xor
add
add
cltd
xor
add
xor
add
xor
add
data16
xor
add
add
cltd
data16
int3
data16
jmp
add
cltd
add
xor
add
cltd
cltd
add
int3
cltd
add
lcall
add
xor
add
data16
add
cltd
int3
add
int3
int3
add
dec
add
incw
add
incl
add
add
add
add
add
xor
cltd
add
add
add
add
add
add
xor
add
xor
add
xor
cltd
xor
add
xor
add
xor
add
xor
xor
add
xor
cltd
xor
int3
xor
jmp
add
cltd
xor
xor
xor
cltd
cltd
xor
int3
cltd
xor
lcall
xor
xor
xor
data16
xor
cltd
int3
xor
int3
int3
xor
dec
xor
xor
xor
pushw
add
pushl
add
pushl
add
add
xor
data16
data16
add
incl
data16
xor
xor
data16
data16
xor
pushl
data16
data16
data16
data16
data16
cltd
data16
cltd
data16
data16
cltd
data16
cltd
data16
int3
data16
int3
data16
int3
data16
int3
data16
jmp
xor
data16
jmp
incl
int3
add
add
add
cltd
cltd
add
add
add
add
add
cltd
add
xor
add
cwtd
add
cwtd
add
cltd
add
cwtd
add
xor
add
cltd
add
cltd
cltd
add
cltd
cltd
add
int3
cltd
add
int3
cltd
add
data16
int3
cltd
add
int3
cltd
add
lcall
add
cltd
add
lcall
add
add
add
add
add
add
add
xor
add
int3
add
xor
add
xor
add
data16
add
data16
add
cltd
add
data16
add
cwtd
add
cltd
int3
add
cltd
int3
add
int3
add
cltd
int3
add
cltd
int3
add
int3
int3
add
int3
int3
add
int3
add
int3
int3
add
int3
int3
add
dec
add
dec
add
cltd
add
dec
add
dec
add
add
add
incl
cltd
add
add
xor
add
xor
add
incl
cltd
xor
add
xor
add
xor
add
incw
xor
add
int3
add
incw
jmp
add
cltd
incl
xor
incl
cltd
cltd
incl
int3
cltd
incl
lcall
incl
xor
incl
data16
incl
cltd
int3
incl
int3
int3
incl
dec
incl
xor
incl
dec
add
incl
jmp
add
data16
jmp
data16
jmp
add
incl
movsl
add
add
pop
add
ja
xchg
xchg
add
lret
lret
add
xlat
xlat
add
fstp
add
jecxz
add
ljmp
clc
clc
clc
add
sti
lock
addb
add
add
incl
add
add
add
add
add
incl
incl
add
pop
add
in
incl
cli
add
add
add
in
pop
add
pop
pop
incl
cli
pop
pop
add
add
add
pop
add
pop
pop
pop
add
sti
sti
add
add
add
pop
add
pop
pop
sti
add
pop
pop
add
add
add
incl
in
sti
pop
sti
incl
pop
add
add
add
incl
pop
in
sti
sti
incl
pop
pop
pop
add
in
incl
pop
pop
add
add
add
in
in
pop
add
in
in
add
pop
in
in
in
in
in
in
in
in
pop
add
in
pop
pop
in
pop
pop
pop
pop
pop
pop
pop
in
add
in
in
in
in
pop
in
outsl
jp
xor
in
add
add
in
in
outsl
in
push
xor
in
add
cld
add
in
in
in
outsl
in
jp
xor
in
add
cld
add
add
in
outsl
jp
in
push
in
add
cld
add
add
in
outsl
dec
dec
dec
dec
dec
in
add
cld
add
add
in
lock
add
add
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
add
or
test
add
add
adc
add
add
or
push
add
add
add
add
js
insb
and
jb
imul
xor
and
arpl
imul
inc
sub
je
outsb
fs
insb
outsl
outsb
gs
and
ds
jae
insl
bound
js
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
insl
popa
outsb
imul
jb
imul
xor
ds
jae
gs
bound
fs
je
je
or
and
insl
gs
jo
and
and
outsl
arpl
jae
jb
jb
push
je
jb
cmp
and
and
jb
imul
xor
xor
xor
or
and
gs
xor
and
ds
je
jne
je
outsb
outsw
and
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
or
and
arpl
imul
and
and
cmp
gs
gs
gs
jb
jbe
insb
gs
or
and
and
and
gs
gs
gs
js
arpl
imul
insb
and
gs
cmp
jne
jb
inc
fs
imul
je
jb
and
inc
arpl
jae
cmp
jae
and
cmp
jb
jno
gs
gs
js
arpl
imul
insb
ds
and
and
jb
jno
gs
gs
jb
jbe
insb
gs
or
and
jae
arpl
imul
cmp
je
jne
je
outsb
outsw
ds
jae
gs
bound
in
and
add
and
add
and
add
and
add
add
add
add
add
fsubl
add
mov
add
add
jb
gs
xor
cs
insb
add
add
add
dec
outsl
popa
fs
imul
add
add
inc
gs
jb
arpl
fs
jae
add
add
add
push
imul
insb
insb
outsl
arpl
add
add
jb
jne
insb
inc
jb
add
pop
jmp
add
pop
loopne
jle
loope
jge
fwait
adc
dec
ja
mov
mov
outsb
js
add
or
dec
add
xor
pop
or
in
jb
jne
cmp
or
dec
stc
cmp
addr16
add
rolb
pop
push
mov
push
inc
fcmovbe
jecxz
xor
jge
cli
add
mov
add
mov
loopne
dec
dec
push
jne
add
inc
or
pop
pop
ror
jge
push
call
sbb
xor
mov
push
jecxz
rep
aaa
mov
push
test
pop
enter
jne
pusha
push
or
mov
add
loop
or
pushl
sub
lock
cmp
sbb
xor
pop
pop
pop
leave
ret
jb
and
adcb
loope
add
or
xchg
jae
and
orb
xor
or
loopne
xchg
ds
out
or
or
cmpl
jo
test
sub
xor
sub
cltd
subl
dec
aam
jmp
inc
fmull
add
inc
add
imul
add
pop
lea
lods
or
insb
lahf
in
inc
lock
push
call
or
sub
hlt
shll
nop
push
push
jne
and
addr16
mov
and
xchg
cmpsb
inc
pop
jne
sbb
inc
out
mov
or
repz
fadds
decl
int
xchg
adc
mov
fmuls
adc
je,pt
sub
jae
sbb
jmp
jo
and
xchg
test
jne
ss
into
adc
sub
lock
pushf
outsb
sub
xor
lock
adc
in
and
add
mov
cmp
cmpsb
or
inc
jmp
xor
pop
insl
sti
add
mov
cmp
push
mov
rol
ljmp
push
cmpsb
iret
lea
xchg
mov
lods
incb
mov
xor
pop
push
xor
or
wrmsr
dec
js
xor
mov
push
nop
xchg
jmp
sub
inc
mov
ror
shr
repz
fcmovnu
or
push
push
lea
push
push
rol
adc
subl
mov
clc
xor
lcall
cmpsb
push
ret
mov
movsb
mov
mov
push
inc
push
jae
inc
push
mov
jmp
loopne
xchg
push
aas
inc
push
adc
jnp
leave
movsb
hlt
add
popf
rorl
mov
pop
or
mov
lea
or
jmp
cwtl
sub
popf
jno
sub
jo
lods
adc
repnz
adcb
jmp
adc
xor
dec
jp
in
nop
mov
xchg
pop
repnz
dec
out
jne
out
pushl
push
add
sbb
push
loope
sti
and
sbb
adc
fcmovb
outsb
and
repnz
pop
jecxz
and
insl
add
or
jmp
lods
and
add
adc
adc
popa
adc
mov
les
sub
jmp
in
test
leave
or
es
shl
int
push
sti
fcoms
and
add
idivl
andb
sbb
xor
xchg
jmp
repz
mov
insb
movsb
cs
mov
sbb
add
cli
xchg
ljmp
out
incb
mov
and
outsl
addr16
sbb
out
insl
add
jb
js
std
sub
cmp
push
adc
outsb
dec
xchg
mov
mov
and
shlb
mov
jne
sub
out
nop
jo
fimull
mov
shl
lret
stc
es
adc
add
ret
jge
pop
sti
popa
add
mov
adc
add
call
jno
push
sub
jne
lea
mov
and
or
jge
dec
test
adc
dec
adcl
mov
adc
jb
inc
aad
dec
data16
or
jl
add
sahf
push
and
inc
mov
es
adc
clc
push
push
jno
hlt
add
fidivs
and
sub
add
mov
pop
dec
hlt
mov
inc
xchg
mov
inc
sahf
mov
push
sbb
mov
sbb
subb
xor
inc
ret
lcall
out
jne
mov
inc
add
cltd
push
pop
divl
cmp
pop
jl
push
mov
push
xchg
cltd
mul
jge
mov
in
movsb
daa
or
xchg
add
add
push
call
xchg
push
mov
cld
lea
ds
ror
xorl
or
call
addb
or
pop
mov
cmp
push
dec
rcll
jo
inc
add
sub
js
add
and
cmp
or
push
xor
mov
xor
and
sub
rorl
mov
add
test
fildl
ds
les
mov
movsl
sbb
adc
imul
push
and
add
pop
push
ja
pop
xchg
pop
cmovs
clc
and
push
push
shlb
push
pop
sub
lea
add
add
sub
mov
fidivs
xchg
repnz
lods
stos
nop
add
add
jae
test
out
push
xor
and
aam
repz
out
pop
sbb
add
outsl
add
jge
ljmp
or
call
xor
mov
sbb
jecxz
and
xchg
popa
aaa
and
push
call
and
pmulhuw
adc
js
test
sub
push
cmp
addl
je
mov
lea
mov
cld
mull
push
xorb
and
lea
push
and
das
orl
fs
loop
les
shrb
sbb
test
lret
mov
inc
or
aaa
ficoms
and
push
dec
inc
mov
movb
add
pop
int
and
inc
and
push
call
lods
and
cmovl
or
add
pop
pop
pop
pop
ret
les
and
cld
mov
pop
sub
loopne
push
add
adc
xchg
and
aad
push
mov
sbb
xchg
sti
sbb
push
push
negl
ret
push
enter
xor
pop
add
add
in
and
leave
push
loope
pop
clc
sub
pop
sarl
je
hlt
ja
xchg
out
push
add
inc
shrl
fadds
mov
ficompl
bound
xchg
enter
inc
pop
leave
in
data16
nop
dec
in
lods
icebp
popa
idivl
add
fiaddl
out
setae
or
cmp
mov
mov
roll
dec
enter
movsl
jbe
jae
shll
adc
add
orb
hlt
push
and
nop
mov
push
sbb
call
push
xor
add
je
les
dec
xor
push
jmp
mov
ud2
mov
adc
out
cmp
dec
xchg
insb
push
scas
cld
inc
ds
adc
testb
cmp
jge
xchg
push
inc
loopne
rolb
or
sub
pop
dec
je
dec
mov
xor
sub
ret
and
or
rclb
xchg
inc
push
push
add
pushf
jae
cmc
int3
inc
jmp
enter
mov
cmp
sub
sub
pop
or
js
shlb
aam
cmp
ret
in
add
jbe
push
loopne
cmpsl
incb
dec
add
push
aad
imul
pop
std
sti
ljmp
inc
mov
je
loopne
popa
push
jge
sub
daa
clc
rcll
add
movsl
mov
ds
call
add
xor
movsb
push
fcmovbe
xchg
stos
lret
pop
sub
cmp
inc
ret
jne
mov
dec
pushf
mov
push
lock
push
dec
push
xchg
fsubl
sub
lea
outsb
inc
dec
sub
loope
dec
mov
pop
xchg
and
jl
dec
add
mov
sub
push
dec
lahf
or
and
push
push
testb
in
pop
rclb
inc
je
mov
inc
jne
adc
adc
fildl
mov
lret
sbb
nop
cli
cmp
jne
push
stc
jmp
fidivrl
inc
icebp
movl
sub
pushf
dec
mov
fiaddl
stos
inc
or
push
nop
dec
add
xchg
dec
andb
pop
sub
and
or
dec
or
push
test
and
push
push
push
es
call
sbb
mov
ret
adc
dec
mov
or
adc
mov
adc
mov
push
mov
hlt
in
test
cmp
jmp
and
fdivrl
mov
push
adc
rcrb
testb
mov
in
mov
jg
test
and
jmp
mov
add
cmp
clc
cmp
lret
xor
pop
es
push
dec
push
stos
dec
add
enter
mov
xchg
jne
cld
push
pusha
mov
rcrb
sub
insl
mov
call
cmp
adcl
xor
pop
movsl
xchg
or
adc
add
inc
cmp
mov
jl
sbb
rcrl
cmp
cltd
push
lea
cmp
sti
or
add
sbb
and
inc
jbe
sub
shlb
mov
and
xchg
out
testl
push
insl
jae
bound
sbb
jo
insb
imul
sbb
gs
jae
adc
fsubrl
pop
push
push
arpl
pushl
xor
outsb
iret
je
bound
sti
imul
sbb
andb
frstor
jmp
jbe
mov
dec
in
sti
stc
popa
addr16
inc
outsl
cmp
cmp
je
data16
cmp
int
cmpl
push
dec
nop
mov
push
fs
mov
push
sbb
inc
sahf
je
test
push
insb
sbb
jl
imul
iret
hlt
arpl
hlt
mov
jbe
sbb
cltd
bound
xchg
inc
xchg
pop
pop
mov
ror
or
xchg
cmp
mov
imul
mov
movsl
sbb
push
aam
add
je
and
jl
sub
mov
xor
movsb
mov
call
jae
xor
call
jae
xor
call
jae
mov
inc
mov
call
adc
jae
jne
stos
jmp
call
sub
jne
call
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
lods
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
sub
mov
popa
ret
push
and
add
add
add
test
add
lods
and
add
add
mov
and
add
lea
mov
mov
mov
movb
add
sub
mov
xor
ret
mov
popl
add
push
push
push
push
push
push
lea
mov
push
mov
push
push
pushl
push
mov
add
mov
call
pop
mov
push
push
mov
mov
add
mov
mov
mov
add
mov
mov
add
mov
add
lea
push
push
push
call
pop
pop
add
mov
push
mov
mov
add
sub
mov
mov
mov
call
mov
mov
mov
pop
jmp
add
push
push
push
call
mov
pop
pop
pop
pop
pop
pop
jmp
