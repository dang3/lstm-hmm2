sbbl
mov
iret
incl
xchg
gs
imul
xchg
sbb
in
fcmovnbe
lds
stos
fwait
xorl
lret
mov
pop
dec
aaa
sub
cltd
les
xchg
gs
add
mov
incl
jmp
add
mov
lea
rcrl
js
js
xchg
repnz
stos
mov
out
adc
add
lcall
lea
cwtl
lcall
lcall
mov
imul
xchg
fwait
call
cwtl
xchg
xchg
sahf
xchg
fwait
call
inc
test
cwtl
popf
mov
into
lret
xchg
lcall
cli
adc
lock
lock
imul
mov
xchg
clc
test
popf
lea
mov
in
add
loope
iret
lret
je
jle
xchg
idivl
inc
lret
fwait
lcall
je
mov
and
add
test
por
scas
lods
cmp
mov
sbb
sahf
aaa
mov
hlt
xor
xchg
cld
xor
xor
xchg
xor
xor
das
hlt
cs
cld
sub
adc
and
mov
les
call
and
and
aam
enter
scas
cld
push
mov
sbb
sbb
and
push
mov
fcoms
mov
enter
or
mov
or
or
pop
or
cld
add
add
xchg
push
xchg
dec
subb
pop
cmp
subl
aaa
out
paddusw
or
add
sub
pop
les
mov
test
je
adc
je
idivl
mov
int3
aas
and
dec
add
jb
addr16
cmp
xlat
stos
scas
test
ljmp
aas
mov
in
ljmp
inc
inc
lret
cmpsb
mov
icebp
repz
out
pop
fsubl
xchg
and
add
xor
cmp
repnz
movsb
ss
jl
jecxz
rorb
insb
ljmp
test
inc
bound
out
repz
notl
je
jbe
stc
pop
cli
adc
ficomps
test
cmp
xchg
stc
orl
xchg
mov
mov
loopne
dec
mov
inc
xor
add
int3
and
or
loop
out
fbld
pop
in
loope
les
pushf
xor
xchg
cld
xchg
movsb
mov
jl
dec
mov
test
jmp
mov
movsb
adc
fdivrs
mov
jge
scas
jg
ret
mov
movsb
pop
das
dec
mov
push
jmp
pushf
mov
repz
dec
dec
lret
xor
in
pop
scas
jae
ds
jae
scas
sub
iret
in
xor
xchg
push
shl
mov
call
bnd
repz
xchg
nop
jp
cmpsl
mov
testl
loopne
or
pop
in
inc
repz
dec
cmp
dec
cmpsl
sti
movsl
iret
and
jmp
jecxz
inc
fwait
lock
pop
mov
fistps
xchg
mov
jl
ss
cmp
mov
out
mov
hlt
negl
jnp
dec
pushl
jmp
pusha
imul
ret
dec
push
inc
and
dec
and
repz
push
jp
repnz
out
mov
in
stos
jmp
outsb
out
stc
jne
sub
mov
mov
cmp
loopne
sbb
cmp
stos
dec
adcl
std
ljmp
iret
jmp
lock
ljmp
loopne
std
fildl
jb
push
stos
in
xchg
add
mov
inc
sub
mov
mov
movsl
in
mov
aad
xlat
inc
int3
fildl
dec
test
dec
inc
aam
pop
or
outsl
ljmp
push
pop
and
cmp
ds
mov
scas
and
mov
lods
cmp
call
test
aam
fildll
sub
stos
fsubs
arpl
sbb
shr
pop
dec
shrb
push
adc
das
test
inc
mov
mov
sti
aas
into
add
and
jb
jae
mov
mov
or
lods
test
jb
dec
dec
sti
jg
pop
out
aas
inc
out
adc
jb
push
repnz
cltd
push
inc
xor
lods
push
xchg
xor
inc
xchg
or
jne
cld
cmp
adc
lret
cmp
jl
dec
mov
andl
test
sub
cmp
and
int
xor
cmpsl
pop
jmp
mov
pop
iret
test
adc
cmpsl
rorl
aad
jnp
das
lds
call
jne
cmpsl
mov
or
xchg
mov
test
cmpsb
push
push
add
leave
mov
cmpsb
repz
cmp
test
and
add
push
and
fimuls
pop
cmpsb
gs
iret
cld
mov
cmpsb
gs
lcall
cmpsb
inc
idiv
mov
xchg
cmc
mov
hlt
inc
hlt
stc
xor
jl
xor
dec
cli
hlt
adc
jb
scas
lods
pushl
cld
ljmp
ss
imul
pop
sbb
scas
or
repz
ljmp
hlt
cmp
mov
shll
sub
stc
adc
jb
stc
xor
xor
shll
pushf
xor
inc
xchg
ja
cs
lods
repnz
dec
repnz
inc
cli
add
mov
inc
addr16
push
xchg
sub
jb
ljmp
test
cld
add
mov
ds
aas
cli
in
inc
lret
cmp
inc
jnp
lea
pushf
cmp
lock
add
add
xor
popf
xor
fmull
pop
add
mov
lret
int3
sub
sub
and
push
sub
xchg
repnz
add
lea
addr16
push
ljmp
cltd
add
push
or
fsubrl
or
outsl
xlat
das
xchg
inc
push
xchg
inc
stc
sub
inc
xor
ss
xchg
dec
test
add
fcoml
hlt
leave
imul
dec
or
xchg
mov
nop
ror
mov
xchg
mov
dec
insl
iret
rolb
inc
stos
mov
xchg
hlt
xchg
push
out
fwait
pushf
or
hlt
dec
ds
leave
popf
rorb
lret
cli
je
add
xchg
arpl
bnd
mov
inc
sarl
add
in
mov
cmp
inc
lahf
push
cmp
xchg
push
jl
aaa
xchg
jae
dec
jmp
stc
push
mov
nop
int3
aaa
cmp
lcall
or
popf
shl
xchg
cld
ret
mov
pop
loopne
cltd
mov
ss
lahf
stc
mov
popf
inc
add
jb
scas
stc
pop
inc
scas
pushf
inc
pop
mov
pop
push
ret
out
mov
lods
fadd
fwait
scas
mov
sbbl
mov
loopne
sbb
push
ds
mov
roll
mov
adc
movhps
ret
inc
jle
in
out
push
or
xchg
pop
int3
cmp
push
out
jmp
inc
add
fdivrp
ret
sub
mov
jmp
je
loopne
hlt
xor
fidivrl
fidivl
xor
hlt
lock
xchg
outsl
out
imul
xorb
jmp
push
hlt
sar
int
and
cmpsl
call
je
repz
je
mov
push
cmp
arpl
fisttps
in
jnp
mov
scas
jp
aam
dec
fwait
ds
mov
mov
xchg
jge
stos
aad
mov
mov
fildll
scas
mov
mov
jmp
call
xchg
out
std
stos
stos
es
incl
fcom
fwait
cld
ljmp
pushl
ja
repz
sti
cld
add
inc
loopne
stc
aas
stc
mov
loopne
icebp
shr
nop
add
dec
divb
fiadds
mov
stos
xchg
xchg
inc
lea
add
sahf
xchg
xchg
nop
mov
popf
lcall
std
mov
nop
fwait
lcall
repnz
fstpt
or
cld
push
pushf
rorb
clc
cmp
data16
dec
and
or
data16
adc
inc
data16
clc
lods
xchg
pushf
xchg
and
out
or
pop
scas
mov
out
dec
inc
adc
jbe
dec
icebp
fdivp
stc
repz
cmovb
out
cld
cli
clc
std
rcll
clc
scas
repz
daa
ds
out
clc
stc
outsl
das
jb
pop
test
mov
fs
loope
leave
or
popf
mov
popf
aas
jg
rcrl
lcall
jmp
pop
cmp
lea
adc
jecxz
les
hlt
hlt
fdivrs
pop
inc
into
cld
jae
sbb
leave
jge
add
loopne
ror
mov
xchg
cld
push
dec
cmp
adc
mov
daa
std
iret
add
aad
mov
mov
mov
lret
mov
dec
inc
xor
sub
mull
mov
mov
test
fwait
stos
inc
adc
mov
lret
lcall
imul
xchg
jge
scas
movsl
xchg
jmp
mov
and
jge
dec
cltd
movsb
outsl
add
iret
int
aad
int3
sub
mov
and
ret
mov
in
insb
shll
scas
popl
inc
xlat
jle
xlat
jp
sub
xchg
out
repz
xchg
out
test
data16
lret
push
shl
in
out
repz
leave
sti
sti
shll
insb
cli
jmp
aam
jmp
outsb
jmp
cmpb
in
sbb
cld
jmp
repz
mov
bnd
sbb
jmp
cld
jmp
out
daa
aam
jecxz
mov
pop
and
daa
xor
dec
mov
cmc
add
ficoml
int
test
or
test
xor
ret
mov
jl
out
jne
cmp
stc
mov
test
scas
cmp
sub
lock
inc
add
rcl
cmp
stos
pushf
and
in
lahf
dec
scas
stc
pop
fucomi
xchg
out
jnp
mov
sub
inc
lahf
js
aas
sub
mov
rorb
mov
pop
sbb
in
gs
xor
sbb
pop
add
lret
sbb
push
fbld
repz
int3
and
mov
fwait
fwait
dec
imul
lret
jg
les
out
lods
pop
pop
aaa
dec
and
in
inc
stc
pop
rolb
mov
jmp
add
dec
xlat
mov
loop
sti
notb
mov
out
mov
mov
scas
outsb
sbb
lahf
jnp
mov
lock
faddl
inc
ret
inc
out
idivl
pop
cli
testb
or
cmp
cld
mov
insb
int3
jne
in
test
add
adc
cwtl
dec
out
je
jns
mov
inc
mov
pop
fwait
rclb
bound
xchg
xchg
mov
loope
adc
lcall
inc
out
cli
sbb
test
dec
pop
fidivrs
test
push
lods
adc
mov
ret
mov
hlt
cs
inc
jbe
add
int3
inc
sub
hlt
jle
pop
test
js
dec
lock
test
adc
push
xchg
aad
add
jbe
mulb
cmp
and
push
or
mov
shrb
scas
add
cltd
iret
scas
int3
imul
sti
dec
adc
cmp
mov
cmp
fstpt
push
in
inc
or
cmpsb
in
add
test
lret
shl
cmc
xlat
mov
mull
xchg
std
pop
stos
adc
ret
sub
pop
iret
loop
dec
pop
js
cli
push
push
bound
loop
fdivr
in
cmc
mov
and
mull
fcompl
sbb
inc
dec
and
lahf
lock
movsl
cli
dec
rorl
mov
mov
mov
in
repz
ljmp
cwtl
loopne
lcall
cmp
icebp
dec
repz
ret
addr16
pusha
jno
cli
lds
lods
pop
ret
in
cmp
sub
test
out
repnz
mov
cltd
push
sub
inc
adc
mov
cmp
imul
lahf
xchg
pop
sar
fwait
pop
test
cmp
loope
jbe
clc
sbb
fwait
nop
cmpsb
imul
mov
imul
rcll
imul
lcall
lret
and
inc
xchg
and
cwtl
cld
and
and
pop
lret
push
inc
in
pop
sbb
outsl
add
add
xchg
push
ret
divl
scas
cli
daa
scas
in
jl
mov
jl
jmp
lds
and
cli
pop
xchg
imulb
scas
lahf
push
shr
sub
xor
pop
sbb
clc
xor
lods
lods
cld
mov
cmp
adc
aad
push
out
mov
jns
lahf
out
jge
jae
pop
mov
cmp
subb
ljmp
sub
aam
sti
cmp
fcomi
xchg
shlb
dec
mov
mov
or
cltd
jle
and
ret
fldcw
mov
shl
mov
popf
pusha
jbe
and
or
mov
mov
lock
sub
out
xorb
or
adc
mov
mov
adc
testl
loope
xchg
and
and
cld
and
mov
scas
mov
bound
cld
in
aad
xchg
mov
roll
cld
sahf
in
idiv
jl,pt
std
scas
and
pop
int
push
loopne
clc
jl
sti
jl
adc
sbb
dec
jbe
cmp
mov
mov
jbe
adc
dec
fwait
push
mov
repz
cli
je
ja
pop
inc
cmp
jl
out
jno
mov
adcl
nop
lock
stc
je
mov
ds
mov
je
and
and
imul
out
cltd
outsb
mov
cltd
out
test
and
pmaddwd
mov
imul
hlt
sti
mov
mov
loope
std
mov
sbb
leave
lret
imul
testb
xchg
mov
mov
cld
mov
test
xchg
mov
jnp
mov
and
cld
or
add
dec
push
cmp
mov
dec
inc
hlt
add
mov
and
hlt
in
out
sbb
je
add
push
cld
cmp
push
pop
cld
mov
rcl
fstpt
and
jecxz
push
cmpsb
xrelease
xchg
push
scas
jbe
mov
mov
xchg
mov
int3
je
adc
repz
jecxz
cmp
push
jp
or
and
shr
xchg
in
xor
enter
jnp
mov
pushf
jae
sub
cmp
lods
arpl
fmull
ljmp
fmuls
xchg
xchg
sti
xchg
lods
xor
lock
sbb
mov
insb
fiadds
into
cmp
cmc
notl
scas
add
imul
ja
add
daa
fcmovnb
cmp
loop
fnstenv
mov
or
movsb
mov
sub
mov
in
lock
iret
je
dec
dec
mov
cld
pop
jmp
cltd
xchg
fldl
mov
loop
aaa
jmp
jmp
das
enter
inc
pop
mov
pop
cmp
sarb
jge
mov
inc
loopne
scas
sti
negl
inc
mov
arpl
mov
or
test
test
jg
xlat
lcallw
xchg
sub
mov
clc
pop
push
push
hlt
cli
cltd
cpuid
add
mov
notl
mov
orl
jmp
imulb
aaa
bound
je
pushf
dec
iret
mov
fdivr
repnz
pop
dec
mov
sbb
mov
jle
xor
rcrl
jmp
scas
pop
out
push
mov
or
inc
sti
js
cli
repz
cli
lods
mov
ficoml
or
cli
mov
cmp
cmp
cmp
aaa
cli
inc
in
push
dec
pop
jle
push
aas
fstpt
dec
push
mov
xor
in
int3
test
rcl
in
dec
xor
in
in
mov
cld
leave
jmp
in
push
filds
jbe
cld
movsb
lret
mov
mov
inc
mov
xchg
fwait
xchg
lcall
nop
pushf
mov
nop
add
repnz
fwait
mov
popf
lea
sbb
nop
aas
or
mov
lcall
mov
rol
cmpsb
in
je
icebp
sahf
mov
fldl
xchg
mov
xchg
lock
in
xchg
mov
sub
hlt
cld
loop
jnp
test
add
rcrl
test
xchg
jecxz
lea
cwtl
fidivs
mov
xchg
mov
cli
xchg
es
adc
push
aam
lcall
in
cld
scas
mov
xchg
xchg
out
pushl
jb
xchg
nop
inc
adc
jns
mov
testl
mov
adc
mov
cmp
push
xchg
dec
sahf
dec
mov
mov
lock
or
lock
jo
out
jb
shlb
sub
das
inc
ljmp
vfrczss
lods
cmp
xchg
xchg
repz
mov
popf
push
loop
ds
jmp
jo
int
xor
jmp
les
shrb
out
xchg
sahf
mov
out
fsubrp
mov
adc
adc
or
les
xchg
push
inc
pushf
shl
test
mov
lods
mov
cmc
hlt
lock
inc
push
std
fmuls
and
cltd
cmp
lods
in
call
inc
mov
xchg
lcall
mov
mov
and
jp
lahf
movsb
ror
mov
pushf
nop
mov
es
push
sahf
sbbb
stos
mov
cltd
xchg
adc
dec
xchg
pop
lods
ljmp
sbb
xchg
inc
mov
sahf
pushf
jne
call
ljmp
push
lcall
in
les
std
jp
pop
out
outsb
jbe
and
xchg
iretw
mov
in
data16
mov
xchg
lock
fsubrs
idivb
std
testb
mov
mov
into
lret
test
fdivs
mov
ljmp
add
test
ja
push
arpl
xor
pop
into
add
ljmp
add
add
int
int
int
int
int
int
int3
ljmp
int3
add
add
mov
pusha
int3
push
int3
add
icebp
lret
loopne
lret
jae
gs
push
lret
out
lret
movsl
lret
jp
add
or
lret
sti
leave
out
leave
out
pushf
leave
popa
leave
cmp
sub
adc
pop
cmpsl
add
add
leave
jmp
in
fcmovne
aam
leave
enter
enter
enter
enter
fadd
int
cmpsb
add
add
sahf
xchg
movl
inc
loop
mov
les
add
add
test
ret
rol
ret
xchg
ret
dec
ret
inc
ret
aas
ret
fadd
enter
ret
push
add
ret
jno
imul
ret
push
ret
or
jp
add
subb
or
nop
or
inc
shr
insl
pop
das
clc
push
mov
pop
sub
adc
inc
dec
push
pop
and
or
sbb
pop
sub
movsl
or
push
popl
pop
adc
pop
sub
cmpsl
or
mov
sub
clc
imul
test
clc
pop
mov
dec
mov
xchg
push
sbb
sti
mov
mov
aas
adc
push
clc
dec
jmp
shll
pushl
jl
jge
jl
aas
add
cmpsl
lret
aas
shlb
sub
push
cld
outsl
shrb
jg
fisttpl
cld
sti
sub
mov
cld
xor
push
pushl
leave
mov
imul
push
adc
mov
repz
jmp
icebp
mov
pop
pop
push
cld
or
lds
dec
movsb
cld
ffree
mov
pop
xchg
movsl
xchg
subl
xchg
gs
xchg
das
and
xchg
gs
cld
int
scas
cltd
gs
xchg
subl
dec
cmp
sbb
xchg
gs
push
cld
xlat
lds
gs
xorl
aaa
gs
xchg
sbb
std
sub
cld
loope
push
inc
pop
xchg
ret
scas
xor
pop
xchg
gs
arpl
mov
gs
xlat
jmp
add
or
pop
push
cld
xor
bound
adc
mov
loopne
inc
mov
xor
in
ja
or
mov
mov
jno
sub
mov
pop
push
aas
xor
mov
sbb
add
xchg
inc
icebp
cld
out
ror
mov
mov
popf
stc
nop
lret
mov
inc
adc
cld
jge
xor
mov
xchg
sub
push
mov
push
xchg
gs
movsl
fld
xchg
dec
mov
fwait
mov
dec
nop
push
mov
ret
mov
sub
mov
mov
push
stc
cmpsl
or
scas
adc
repnz
mov
mov
cld
std
iret
push
mov
add
pop
cltd
pushf
mov
lods
mov
stos
test
lods
mov
and
lahf
lea
cltd
mov
cli
daa
xor
xlat
test
jmp
test
pop
cwtl
pushf
int3
fbld
dec
idiv
out
mov
icebp
xlat
hlt
loopne
xchg
sti
lahf
fdivr
pusha
cwtl
sti
jl
idiv
cld
out
xor
mov
lahf
mov
mov
mov
int
cmp
fists
cmpsl
and
cmpsl
and
cld
or
out
mov
cld
jmp
dec
cld
dec
out
leave
rorl
imul
fildll
push
clc
notl
cld
add
daa
dec
clc
incl
fnstenv
cld
mov
insb
mov
js
mov
mov
rcr
loopne
add
repz
in
hlt
jg
shl
aam
std
dec
fcmove
clc
fucomip
add
int
lock
test
xchg
cmc
inc
scas
jmp
outsb
nop
decl
adc
scas
lock
decl
lock
loop
mov
loopne
add
sub
rolb
mov
dec
dec
add
hlt
mov
mov
mov
lock
daa
and
in
iret
int
cld
aas
add
xor
fimull
mov
test
clc
in
jmp
fisttpl
insl
mov
outsl
and
mov
nop
lea
sar
cli
mov
mov
int
cmc
clc
scas
xchg
cmp
mov
stos
rcrb
mov
sub
movsb
dec
mov
mov
mov
add
stos
xchg
dec
fwait
out
and
into
dec
mov
mov
cmpsl
hlt
dec
ja
int3
stc
rcrl
push
and
dec
xchg
cld
dec
mov
mov
clc
jbe
pop
je
je
dec
lock
inc
inc
stc
add
xchg
je
sti
jb
repz
jb
jl
ja
jl
jl
add
addl
mov
fwait
add
fwait
jbe
je
add
cmp
je
out
jg
je
pcmpeqd
js
outsl
push
movsl
loopnew
outsl
adc
fbld
cmp
cmc
cltd
notl
notl
testb
fdivs
dec
sub
hlt
mov
mov
pop
call
js
clc
or
jmp
repnz
daa
daa
hlt
js
pushf
pop
test
mov
ljmp
add
jmp
loope
push
sbb
popa
stos
mov
ds
negl
pop
scas
mov
mov
cmp
xor
adc
nop
push
sahf
lock
out
mov
lock
pop
jbe
fbstp
add
shll
cld
dec
sbb
arpl
mov
or
shrb
jmp
fsubr
mov
pop
jbe
xor
lahf
add
xchg
sahf
cmc
icebp
jmp
hlt
add
pop
or
fstpt
inc
jb
insl
xchg
inc
jb
mov
fldt
inc
imul
loopne
xor
pop
xchg
xchg
mov
jns
fadds
add
dec
cmpsb
cmpsb
movsl
add
je
jle
sti
cmp
or
xor
je
mov
jl
sti
mov
addl
add
in
je
push
jbe
fnstsw
adc
aam
dec
std
insl
cmp
cld
xchg
outsl
sbb
and
xchg
xchg
sub
xchg
call
sti
cmp
or
fwait
gs
ja
jmp
jmp
sub
inc
in
scas
fisttps
jl
out
ret
inc
test
inc
mov
je
test
add
adc
push
inc
add
std
test
jbe
dec
jb
movsl
mov
adc
movsb
and
jl
jle
test
pop
bnd
jp
ljmp
dec
add
jb
loopne
adc
scas
cmp
push
jbe
push
pop
adc
mov
jl
cli
jbe
dec
sbbb
jne
stos
inc
into
jge
jmp
scas
addr16
negb
jb
adc
or
pop
jnp
jb
pop
and
in
hlt
xchg
cmp
in
add
mov
mov
dec
jmp
subb
int3
add
and
cli
pop
jmp
test
ljmp
out
jb
mov
clc
xchg
lock
adc
and
lock
shl
dec
or
repnz
jo
sbbl
jl
push
mov
jbe
xchg
cld
adc
subl
std
adc
sti
cwtl
mov
cmpsb
jecxz
repnz
popf
cmpsb
adc
mov
xchg
imull
push
add
xchg
or
dec
jns
pop
out
rcl
pop
push
fnsave
aam
inc
movsl
jmp
shll
mov
iret
in
int3
loop
mov
imul
in
popa
insl
scas
test
je
aam
mov
xchg
das
and
aad
jle
sahf
or
lock
out
call
add
add
jle
add
add
inc
rcll
adc
test
dec
cmp
out
cmp
push
mov
pop
imulb
ret
daa
mov
shlb
cli
xor
scas
push
jb
add
sub
lahf
sub
mov
jns
lcall
mov
rcrb
sub
xchg
in
inc
out
sbb
cmp
push
je
aam
jl
cmp
das
and
cmp
pop
repnz
xchg
mov
and
pop
push
lcall
pop
test
mov
lahf
outsl
mov
nop
xchg
xchg
push
enter
mov
dec
out
repnz
sbb
imul
jae
jge
jae
inc
lret
fistl
jecxz
xchg
inc
scas
jae
inc
pop
mov
repz
out
xchg
xchg
loopne
decb
and
jg
icebp
pushl
repnz
loope
mov
inc
mov
addl
enter
inc
cmpsb
je
lods
mov
popf
mov
cli
cmpsb
mov
jg
jecxz
clc
mov
jne
sbb
out
out
std
test
cmp
hlt
aaa
fidivrl
mov
mov
mov
imul
rorl
sbb
je
fistl
mov
xchg
std
inc
ret
insl
mov
aas
stos
iret
add
iret
mov
imul
fstpt
std
fiadds
xchg
mov
ljmp
repnz
movsb
hlt
pushf
sahf
test
add
cld
xchg
push
pop
fisttpl
sub
incb
fstl
push
popf
dec
xchg
jmp
loope
icebp
imul
shll
mov
xchg
mov
test
out
popa
ljmp
mov
xor
add
out
jb
inc
inc
test
adc
cvtps2pd
cltd
pop
inc
pop
repz
popf
fcoml
pop
out
inc
test
andl
lock
jg
mov
aas
xor
pop
dec
ds
imul
dec
repnz
mov
lock
icebp
lret
loop
xchg
sub
mov
js
xor
jp
rol
mov
scas
in
inc
sub
repnz
pop
sbbb
xchg
stos
jbe
jns
dec
xchg
ljmp
inc
adc
cli
repz
testl
sarb
filds
xor
adc
clc
pop
adc
out
mov
in
dec
xchg
test
std
or
mov
loopne
and
loop
out
cmpsb
lea
cmpsb
and
sbb
mov
paddb
jno
adc
aaa
push
push
sbb
or
cld
in
test
jl
mov
xchg
mov
jl
std
test
add
mov
stc
and
sti
jl
sahf
aas
mov
inc
out
xchg
pop
pop
bound
incb
stc
and
jno
push
in
int3
jmp
xchg
mov
flds
add
adc
enter
lds
inc
cli
icebp
jno
fsubp
xchg
fnstenv
fiadds
jne
cld
mov
fprem1
ljmp
pop
mov
add
and
ret
pop
inc
mov
dec
into
sbb
cld
cmp
lods
pop
add
notl
jmp
jg
jne
mov
test
les
sbb
ficoms
fsts
testb
jne
setae
les
xlat
clc
dec
lods
ja
incl
iret
mov
insb
mov
xchg
outsl
mov
stos
into
aam
jle
jae
stos
into
faddp
mov
xchg
outsl
iret
push
pop
dec
mov
lds
xchg
imul
jle
data16
out
xor
lea
cld
pushf
mov
inc
outsl
mov
arpl
cli
jle
jp
pop
lcall
negl
int3
pop
mov
ror
cltd
lcall
aad
shrl
arpl
fidivs
inc
xor
and
mov
mov
ljmp
dec
in
cmp
imul
insl
cmpsl
ret
jp
fsubp
les
adc
ja
adc
xchg
gs
jno
push
add
aaa
fisubl
lahf
lar
inc
out
arpl
add
hlt
sbb
out
push
repz
xchg
popf
lock
out
das
jecxz
into
xchg
jp
lret
aas
sub
out
stos
call
aam
loop
and
inc
leave
shl
rcrl
xchg
or
mov
or
or
bound
fwait
add
js
mov
xor
add
aaa
mov
xchg
addr16
scas
xor
or
jl
mov
shll
bound
jg
mov
rclb
outsl
sbb
push
test
shl
lret
leave
mov
loope
push
int
push
or
nop
std
pop
orl
push
dec
cmp
mov
je
or
mov
mov
in
jbe
test
jnp
les
int3
jbe
inc
cmpb
mov
scas
adc
stc
and
sbb
mov
mov
jb
xchg
lods
mov
jmp
add
mov
ficompl
jecxz
cwtl
jne
inc
addb
je
outsb
adc
ret
dec
push
fildl
daa
ficoms
mov
movsl
scas
jbe
mov
mov
ficomps
fdivrl
mov
jbe
cmp
pop
pop
inc
das
adc
or
inc
and
add
vucomiss
out
jne
jg
mov
sub
sub
idiv
adc
jl
lock
jmp
mov
enter
hlt
sti
jb
enter
hlt
aas
push
cli
push
out
cmp
add
jg
mov
hlt
cmp
cmp
out
aaa
ds
idivl
fisttps
cmp
nop
inc
clc
fmulp
sub
hlt
cmp
roll
jp
jmp
jge
clc
push
dec
add
jle,pt
dec
mov
xor
jns
adc
and
out
mov
push
out
mov
jnp
popa
test
or
wrmsr
jecxz
sub
push
cli
mov
repz
dec
std
and
idiv
lock
repnz
out
repz
push
fistps
sbb
jne
fdivrl
cmp
test
ds
push
das
or
jl
stc
out
hlt
jbe
cmp
mov
pop
add
jb
push
std
pusha
fdiv
sti
rclb
mov
adc
je,pt
iret
jle
in
icebp
aam
sub
sarl
rorb
das
or
cltd
mov
mov
std
dec
shlb
sti
jbe
push
hlt
jns
outsl
push
add
cld
daa
mov
ret
mulb
enter
fisubl
xchg
mov
nop
sub
push
jle
pop
xchg
icebp
mov
mov
pop
push
fcmove
and
sbb
stc
adc
in
sbb
cmp
aam
into
sti
ficompl
sub
pop
sti
cmp
mov
scas
inc
aam
and
push
shll
mov
jle
ljmp
out
mov
lcall
iret
std
int
mov
dec
ja
out
lahf
lret
lahf
out
inc
sub
je
mov
cmp
ja
sahf
out
out
je
mov
les
xor
inc
pop
cmp
fisttpll
mov
in
or
cld
cmpsb
out
in
out
movsl
outsl
rcrb
xchg
out
push
cmp
test
mov
dec
xchg
movsl
push
mov
test
roll
sbbl
ljmp
ret
into
fnstcw
sti
into
cmpl
lea
adc
push
hlt
jle
fdivrl
jbe
testl
mov
int
fucomip
repz
and
std
fidivrl
mov
jmp
cmp
out
or
and
inc
cs
jb
jl,pn
rol
mov
add
or
inc
enter
mov
push
mov
jbe
std
xor
jecxz
pop
mov
jne
ja
stc
call
mov
out
inc
and
jne
aas
sti
ds
jecxz
in
add
mov
and
in
dec
lret
mov
test
pop
mov
repnz
mov
in
test
mov
dec
and
or
faddl
icebp
sub
or
add
out
jb
cmp
push
sub
xchg
addr16
sub
adc
call
cld
cltd
scas
or
add
or
hlt
or
cld
out
jb
enter
xchg
shrb
mov
xor
leave
or
test
mull
hlt
cli
cmpsb
or
xchg
jmp
and
cmpsb
ds
ds
jmp
cmpsl
mov
and
or
sub
pop
nop
push
inc
mov
pop
ror
adc
inc
xor
jmp
or
or
and
cmc
inc
cld
and
in
lock
je
add
shl
adc
add
stos
cmc
loop
test
sub
fisubl
cld
in
stos
in
aad
js
je
and
dec
sbb
jmp
jge
je
jg
ljmp
and
cmp
nop
aam
in
mov
shr
lret
and
adc
dec
or
mov
push
add
ljmp
adc
sbb
add
jmp
fnstcw
jl,pt
lret
pop
dec
dec
lret
daa
addr16
adc
jmp
xchg
xchg
and
das
and
icebp
jp
das
xlat
loopne
or
push
add
dec
pusha
and
je
pop
mov
or
sti
dec
movsb
stos
mov
dec
dec
xor
sar
aad
daa
stc
sub
cli
cmp
daa
cli
inc
sub
mov
sbb
faddl
movsl
iret
stos
cmp
fucomp
outsl
xchg
js
mov
lret
and
daa
xchg
mull
insb
mov
push
adc
stos
jns
sar
stos
add
hlt
push
dec
fiadds
and
pop
mov
aaa
cld
clc
in
arpl
jno
xchg
out
xor
andl
push
dec
fcomi
js
sub
sub
cmp
jmp
std
fdivp
dec
mov
imul
dec
adc
xchg
movsb
push
cmp
fsubl
sub
stos
mov
popf
or
loop
jns
hlt
sub
clts
faddl
andb
mov
call
cld
mov
scas
pop
shll
mov
popf
in
icebp
sub
ds
or
adc
cmc
fsubl
dec
push
pop
and
adc
dec
mov
lret
cmp
push
or
push
xchg
jae
push
sub
iret
and
dec
jae
jns
call
mov
das
jo
adc
jo
inc
loopne
sbb
sub
sbb
jp
pop
xchg
dec
enter
daa
es
dec
shll
sub
lea
xor
dec
inc
mov
dec
mov
and
das
dec
sbb
push
lcall
pop
dec
cmp
jnp
aaa
jo
clc
enter
je
cmp
jo
in
cmp
pop
stos
iret
shll
ja
xchg
cld
xor
or
in
icebp
call
negl
es
repnz
mov
je
mov
mov
and
push
sbb
push
xchg
js
xchg
jo
dec
cmovle
inc
adc
lcall
fcmovnbe
imul
jo
or
je
shll
mov
out
std
nop
cwtl
sub
icebp
pop
dec
xor
cmp
mov
or
mov
jb
jae
and
cmp
sub
das
out
push
mov
in
lahf
jecxz
sti
push
add
push
dec
movsb
mov
add
jle
mov
pop
xchg
test
jge
jge
shl
xor
loop
xchg
rcr
bound
mov
mov
xor
repz
sbb
fildl
arpl
das
and
or
dec
adc
dec
out
int3
mov
dec
lods
add
xor
in
push
xor
mov
lea
or
or
loope
adc
xor
call
pop
mov
cmpsl
into
repz
jo
xchg
pop
inc
inc
inc
inc
sbb
push
cmp
inc
sub
iret
cmp
ret
xchg
nop
imul
or
cmp
scas
jne
rclb
sbb
and
and
jp
iret
pop
xchg
xchg
jle
sub
insl
mov
jmp
and
push
xchg
cmpsb
mov
ja
adc
dec
leave
sub
shl
mov
inc
sbb
xchg
cmp
call
data16
inc
or
lds
add
lods
sbb
push
sub
cld
in
jmp
ret
lcall
stc
jb
mov
frndint
and
or
pop
out
mov
cmp
in
stc
hlt
loope
cmp
daa
jmp
jg
dec
stc
fnstenv
jp
aad
bnd
lret
sbbl
scas
cmp
popa
push
out
test
xchg
and
loop
lea
insb
add
adc
loop
push
cltd
lahf
ljmp
dec
cmp
cmp
movsb
lcall
scas
scas
sub
sub
andb
xor
jo
mov
cmp
mov
loop
inc
inc
roll
adc
lock
or
xlat
dec
xchg
loop
out
adc
mov
xchg
out
sbb
adc
mov
push
dec
adc
xchg
push
nop
mov
stc
test
xchg
shlb
ss
add
pop
sbb
add
cmc
test
jle
in
les
pop
adc
pop
adc
cmpsl
lahf
adc
loopne
out
divl
hlt
inc
jge
lods
push
sub
sbb
mov
test
sub
sub
daa
pop
lret
inc
xchg
movsl
dec
sub
adc
daa
pop
and
jp
int3
cmp
aad
push
out
jmp
jp
dec
hlt
rolb
jmp
adc
into
lods
mov
pop
inc
xchg
jb
movsb
adcb
mov
pop
cs
je
stos
je
repz
repz
clc
lea
add
lahf
adc
mov
ds
xchg
xchg
ja
mov
mov
push
jmp
cmpsl
enter
xchg
bnd
xchg
cmpsl
and
scas
pop
adcl
pop
push
xchg
outsl
xor
scas
xor
ja
stc
out
icebp
clc
out
les
mov
and
out
lcall
test
mov
arpl
mov
divl
clc
cmpsb
lods
mov
adcb
push
icebp
xabort
aam
test
add
or
ds
xchg
mov
mov
adc
nop
jecxz
sbb
xchg
or
pop
ljmp
pop
lret
je
cmpsb
in
pop
scas
insb
stos
pop
pop
xchg
and
pop
jns
mov
inc
push
sub
aas
cmp
shll
mov
scas
cli
mov
push
push
add
push
cmpsb
ljmp
mov
jg
gs
add
xchg
cmc
dec
scas
aam
sub
mov
in
iret
sbb
andb
repnz
adc
in
test
jle
test
loopne
loope
dec
lods
lods
jmp
cmp
ja
xlat
jo
out
fs
adc
mov
or
fcoms
sub
notb
cltd
dec
das
xchg
mov
stos
cld
or
stos
scas
repnz
pusha
xor
daa
lcall
push
andl
pop
lcall
roll
ret
inc
mov
sbb
psadbw
xlat
lcall
jp
add
inc
sarb
jge
pop
mov
jle
into
jg
out
xchg
cmp
xor
test
mov
cmovns
xor
leave
movsb
xchg
imul
lahf
and
jnp
test
pushf
adc
mov
push
pop
divl
clc
inc
hlt
inc
call
jl
lret
sub
mov
das
cmc
xchg
je
xor
enter
xor
pop
cmp
stc
ljmp
in
fcompl
mov
or
clc
bound
add
fstps
test
notb
out
jmp
fstpt
lods
scas
push
mov
adc
jne
xor
daa
jmp
ds
aas
ss
cmp
loop
mov
jae
xchg
pop
in
mov
insb
decb
dec
test
cld
test
fstpt
in
jne
out
in
test
into
sbb
adc
mov
mov
mov
fucomi
push
jge
push
inc
sti
add
add
mov
cltd
jl
lds
cltd
je
sti
cltd
ret
jns
lret
and
ficoml
into
sub
adc
das
shlb
and
sub
sub
cmc
jmp
and
clc
mov
pop
or
in
out
outsb
cmp
call
lods
pusha
inc
inc
dec
dec
dec
and
test
mov
mov
jno
mov
adc
mov
mov
mov
sti
ret
rorb
aaa
push
out
inc
inc
js
lock
nop
add
in
mov
jmp
xchg
mov
sub
jmp
lods
scas
jg
test
mov
pop
icebp
cmpsl
sub
jg
aaa
jbe
add
ds
add
rcl
and
stos
and
aam
mov
adc
mov
mov
out
jge
lret
daa
enter
std
jp
mov
dec
dec
test
cmp
jno
dec
add
out
cmpsl
call
jecxz
outsl
icebp
mov
insb
out
ss
bound
ja
repnz
test
hlt
sbb
add
into
loop
iret
mov
cmc
jae,pt
rcrl
in
fdivs
fisubl
movsl
pop
movb
pop
add
add
pop
and
inc
dec
cmpsb
sti
push
mov
shr
xchg
dec
lahf
in
daa
fwait
and
add
dec
inc
rclb
and
lds
mov
sub
daa
in
call
and
jge
test
inc
jecxz
je
arpl
inc
pop
xorl
arpl
movsb
test
dec
fimuls
fwait
cmc
inc
hlt
pop
mov
pop
insl
jns
push
hlt
outsl
decl
dec
ljmp
lahf
rol
adc
mov
cmpsb
out
xchg
fsubl
enter
mov
sbb
scas
inc
push
xchg
mov
clc
pop
jno
adc
pop
xlat
sarb
add
inc
jg
cmp
insb
mov
push
inc
add
ds
inc
lret
insb
out
test
iret
popa
scas
mov
clc
mov
cmpsl
pop
jb
out
lods
jae
sub
filds
jecxz
ret
inc
inc
mov
jg
stos
and
std
int
test
xchg
and
rol
mov
out
loop
lahf
lahf
iret
xchg
xor
push
inc
mov
push
mov
xchg
dec
cwtl
dec
test
dec
mov
mov
xchg
inc
mov
mov
inc
hlt
jbe
xchg
inc
inc
faddl
cld
inc
xchg
ja
cmpsb
imul
xchg
xchg
nop
lea
imul
and
cmpsb
imul
xchg
movsb
imul
imul
adc
mov
adc
femms
or
inc
xchg
or
aas
sarb
sub
in
dec
adc
iret
mov
cmp
es
shll
iret
iret
iret
iret
lds
xor
push
sarl
bound
fstpl
xor
mov
sti
cld
cmp
rdtsc
mov
dec
xchg
cmpsb
jg
xlat
int
out
ljmp
ret
jl
enter
inc
adc
pinsrw
std
cli
pop
xchg
push
arpl
mov
dec
cltd
shll
cwtl
cs
fs
mov
add
jb
lock
and
mov
push
outsl
xor
jmp
out
in
lcall
jne
inc
and
or
test
int
jo
dec
sbb
jb
aam
dec
repnz
ds
call
xchg
xor
out
repnz
ret
in
sub
cs
fistpl
filds
sub
hlt
xor
jp
add
imul
ds
mov
pop
imul
es
enter
jle
lods
adc
pop
adc
jecxz
xor
cmp
add
lea
iret
push
js
and
ljmp
jge
outsl
ja
jo
stos
fs
sbb
or
cmp
or
cltd
es
addr16
inc
stos
ret
out
mov
les
daa
xlat
hlt
popf
dec
sub
xchg
xchg
cld
daa
mov
jg
clc
pop
mov
popf
mov
ja
cmpsl
rcrb
push
scas
ja
in
mov
pop
test
and
mov
cmp
movsb
cmp
inc
jge
psrlq
incb
sub
mov
std
pop
adc
inc
iret
dec
inc
rcl
negl
push
mov
cltd
lret
adc
repnz
inc
addl
incl
cmpsb
jmp
xchg
xchg
sub
xor
pop
pop
outsb
push
sub
out
sbb
mov
cld
movsl
inc
lods
mov
add
orl
jmp
xor
lret
rcrl
xchg
gs
cmp
in
mov
adc
test
and
sbb
jg
testl
and
cltd
pop
rol
cli
sub
lcall
pop
or
in
mov
pop
ljmp
mov
cli
and
adc
jl
fisttpl
inc
xchg
adc
pop
mov
cmp
inc
sti
aas
in
pop
push
and
subb
pop
pop
sub
inc
jmp
cmp
cld
pop
rorb
inc
xor
sbbl
gs
test
dec
mov
cli
in
xchg
push
popa
pop
ja
cmp
inc
or
mov
inc
sarb
imul
xchg
shll
pop
jb
cmpsb
sbb
aad
aas
test
ffree
jnp
cmp
jge
out
out
dec
je
test
mov
fidivl
notl
pop
add
adc
sbb
lcall
lahf
cs
pushf
test
inc
push
ret
push
adc
xchg
rcrb
or
or
jg
ss
mov
dec
pop
ret
pop
xchg
addr16
incb
sub
lods
lock
jae
cld
dec
scas
add
loope
fcomi
out
inc
test
scas
xchg
fwait
fwait
push
xchg
imul
ljmp
mov
clc
jl
int
pop
or
or
xchg
cmpl
cs
std
fxch
push
sti
mov
mov
mov
fistl
adc
gs
jge
add
adc
pop
jbe
rclb
jns
les
cltd
ljmp
sahf
jl
dec
jbe
imul
xchg
imul
mov
pop
in
rcrb
ja
lock
sub
cltd
lock
std
mov
mov
sub
ja
cmp
int
or
cli
data16
addr16
imul
pop
mov
nop
mov
add
test
mov
mov
js
cmp
sarl
cmpsl
and
mov
mov
pop
cmp
lret
out
aam
js
sbb
mov
in
std
loope
ret
jp
jo
stc
std
das
gs
sarb
mov
out
push
jmp
divl
push
test
cmp
sub
into
stc
push
sbbl
cwtl
shrb
outsb
frstor
jmp
push
jmp
mov
es
in
loop
sub
pop
lret
add
dec
xchg
enter
imul
scas
lcall
sub
imull
out
push
les
scas
cmp
push
fisttpll
ret
imul
mov
das
xchg
pusha
cli
icebp
add
pop
ja
mov
sahf
jno
cmc
in
repnz
pop
addr16
push
mov
test
push
cmp
fidivs
jp
clc
fsubl
loop
out
or
mov
stc
xor
xchg
call
stc
rorl
das
xchg
jno
cltd
inc
mov
jb
mov
push
xchg
or
dec
inc
jg
daa
cmp
test
hlt
xchg
ja
adc
xchg
out
loopne
gs
adc
push
fwait
cmpsb
andl
loop
ds
mov
subb
aas
icebp
sub
bound
out
lods
add
std
push
pop
out
pop
dec
hlt
fsts
loop
popa
fadd
push
jmp
sti
imul
stc
push
out
imul
outsl
shlb
iret
daa
dec
jbe
add
cli
mov
dec
xchg
dec
ds
lock
pop
stc
xchg
mov
mov
xor
es
and
dec
cld
jno
mov
es
push
jmp
add
out
aas
pop
in
test
or
out
repnz
jnp
lcall
imul
pop
mov
pop
into
mov
shrl
mov
and
fiaddl
frstor
cld
fisubl
push
movsb
shll
clc
popa
in
pusha
pop
lret
and
hlt
pop
in
pop
mov
pop
in
pop
pop
lret
mov
movsl
push
in
push
push
sub
mov
push
call
mov
dec
test
sub
lret
dec
dec
dec
inc
in
inc
pop
push
mov
in
inc
xchg
popf
test
sub
call
popfw
sub
mov
cmp
mov
mov
push
xchg
xchg
ret
adc
xor
xor
shlb
mov
adc
das
mov
hlt
sub
hlt
sub
daa
es
push
jle
and
and
and
fisttps
pop
rcrb
fnstenv
sub
int
fimull
rcll
fcoms
stc
inc
push
push
in
adc
ljmp
les
in
in
pop
test
dec
add
call
sbb
sbb
jae,pn
stos
push
push
cli
dec
jo
repz
lock
and
xor
xor
add
lea
ror
test
mov
divb
mov
mov
xorb
adc
push
outsl
daa
or
add
dec
xor
scas
repz
jo
aaa
daa
cli
mov
jae
stc
mov
scas
scas
ss
push
mov
xchg
pop
pop
in
and
pop
lock
jmp
or
call
cmpsb
jns
dec
push
push
push
sbbl
test
adc
pop
push
mov
imulb
ljmp
addr16
and
mov
icebp
cli
mov
ljmp
mov
outsl
pop
adc
test
mov
jno
mov
es
ret
and
test
push
ds
popf
xchg
xchg
mov
or
add
xchg
cli
test
jns
inc
push
ljmp
das
in
scas
dec
lret
repz
stc
mov
orl
mov
mov
ds
test
add
imul
cmpsl
jmp
cmpsl
pop
lret
cmp
jl
jb
in
test
jno
test
sbb
adc
icebp
stc
das
jno
je
leave
ret
out
in
jnp
sarb
pop
outsl
pop
jg
mov
and
and
jl
cmc
aaa
cmpsb
dec
jmp
std
sub
fiadds
popf
and
sub
nop
mov
jns
shlb
stos
negl
out
mov
add
dec
mov
jmp
xlat
scas
int3
mov
lret
push
mov
mov
mov
scas
mov
cmp
mov
jo
ljmp
mov
fucomip
xor
add
mov
scas
insl
mov
jp
aad
mov
jae
out
mov
sti
clc
iret
xor
test
pop
pushw
lock
or
push
test
shrb
hlt
cmpsb
cmp
fstpt
push
or
aad
test
sarb
pop
stos
and
xchg
mov
int
jns
cld
add
or
leave
jecxz
movsl
mov
outsl
cmp
cs
gs
add
add
mov
xlat
stc
sub
mov
mov
mov
mov
xor
mov
stos
sarl
gs
mov
test
mov
in
mov
adc
rorl
in
in
or
rorl
inc
int
sub
das
adc
mov
mov
lea
lret
mov
lea
dec
lret
xchg
lcall
mov
mov
lret
mov
lret
lcall
out
mov
inc
mov
ja
jbe
jne
sub
jae
cld
jb
jno
jo
xchg
outsb
pop
mov
xchg
inc
arpl
insl
mov
imul
mov
lds
leave
pop
pop
push
stos
gs
xchg
mov
stc
fwait
lods
lcall
sbb
sbb
sbb
mov
mov
mov
mov
sub
lcall
mov
xchg
lcall
mov
daa
fwait
fwait
push
mov
or
ja
in
fwait
fwait
daa
outsl
dec
ljmp
loop
xor
xor
or
add
xlat
jmp
dec
xchg
lds
imul
xor
fidivrl
clc
jmp
inc
out
fldt
pop
mov
test
lret
pop
pandn
or
lock
out
adc
enter
ja
subb
movsb
lods
scas
lcall
mov
lods
out
sti
movnti
scas
and
stos
je
mov
ljmp
pop
fsts
mov
mov
repnz
call
out
push
ja
mov
inc
inc
cli
in
mov
test
das
call
les
cld
sub
add
out
je
sub
push
cld
cmp
adc
cmp
xchg
jp
stos
xor
aaa
pop
push
add
into
pop
or
in
dec
mov
loopne
ror
cld
jg
std
or
insb
cld
test
pop
sbb
pop
jl
popf
or
rcll
mov
popf
or
cltd
xchg
pop
sti
dec
sbb
shrl
adc
lea
iret
add
dec
idivb
cli
loopw
cld
and
adc
or
loope
mov
mov
das
pop
mov
int
int3
push
cmp
jmp
mov
pop
lea
mov
mov
lock
xchg
inc
lock
cltd
add
mov
sahf
xor
add
cmpsb
add
pop
arpl
lods
nop
push
mov
xor
pop
aaa
mov
ljmp
push
ret
popa
out
enter
stc
les
dec
mov
lret
mov
mov
lahf
jg
or
loop
jl
fcmovnu
clc
rcrl
hlt
mov
rcrb
aaa
repz
xlat
and
xlat
mov
gs
rcrl
mov
mov
mov
cmp
cwtl
or
lcall
pop
mov
adc
cmp
enter
jnp
in
adc
in
lret
fbstp
fcmovne
pop
loope
add
in
movsb
sahf
negl
jb
je
in
fnsave
jp
mov
scas
jae
bound
xchg
mov
adc
into
mov
paddq
jno
int
loopne
xchg
push
or
lret
repnz
push
or
sub
xchg
loopne
call
scas
dec
mov
mov
clc
adc
sarb
jg
inc
leave
fcomp
std
loope
fistps
mov
mov
fwait
icebp
popf
pop
lahf
xor
xor
and
add
nop
push
js
rorb
dec
mov
adc
xchg
gs
mov
xchg
sub
mov
mov
es
or
adc
sbb
mov
in
mov
and
add
and
jg
cli
ret
xlat
cli
les
arpl
mov
daa
test
aas
cld
mov
xor
pand
fdivrs
mov
aad
fisttps
mov
lods
ret
mov
pop
xchg
clc
cmp
jnp
sbbb
stos
pop
loope
jge
dec
add
pop
xor
cmp
push
sub
xchg
filds
and
cmp
xchg
ret
mov
sub
je
out
daa
jmp
aas
data16
and
mov
sbb
dec
pusha
xor
xchg
iret
xor
mov
negb
cli
or
adc
mov
aas
dec
fsubp
inc
and
xor
hlt
or
inc
lock
jbe
add
shlb
jecxz
aaa
adc
jb
inc
and
lea
dec
add
faddp
xor
mov
push
ror
leave
sub
sti
push
lds
push
pop
mov
mov
jmp
adc
or
mov
push
mov
outsb
inc
xchg
mov
mull
call
add
ficoml
mov
xor
arpl
adc
clc
pusha
adc
clc
pop
gs
adc
xchg
pop
hlt
pop
sub
repnz
pop
xchg
fcoms
fdivrs
fiaddl
ds
popf
dec
adc
pop
adc
inc
popf
inc
inc
lds
roll
push
inc
int
mov
ds
xchg
adc
fdivrs
cmp
jns
pop
xchg
cmp
fistl
popf
xor
popf
sub
lret
mov
daa
mov
and
aam
loopne
das
mov
and
pop
xchg
sub
adc
fdivr
adc
notl
sbb
cltd
mov
jge
lods
popf
test
shrb
sarb
cli
or
in
mov
mov
cld
push
aas
mov
aam
das
adc
lds
sbb
repnz
ljmp
mov
push
dec
xor
jmp
sbb
jecxz
cmp
push
stos
dec
pop
jbe
movsl
pop
fidivrs
xchg
cld
loope
addb
jae
iret
mov
mov
das
clc
pop
clc
iret
sbb
testl
das
fdivr
sub
in
cmp
xchg
xchg
aas
stc
jle
mov
lahf
gs
mov
ss
mov
xor
xor
mov
movsb
sub
imul
mov
loopne
imul
lods
mov
loop
lock
cmpl
je
pop
aaa
std
dec
jae
rclb
aam
inc
mov
add
iret
data16
loopw
pop
repnz
or
mov
or
stc
jae
sub
or
pop
xchg
int
nop
sahf
jmp
xchg
lea
sub
sub
sbb
xchg
fwait
lcall
or
xor
sti
inc
cmpsb
jne
mov
and
xor
dec
sub
mov
icebp
out
adc
mov
xchg
push
lcall
in
push
je
into
cmp
adc
jge
or
jmp
xchg
or
movsl
jb
int3
aas
mov
jl
push
in
jns
xchg
fwait
push
mov
dec
or
push
pushf
mov
loop
add
pop
ret
in
jbe
divl
hlt
xor
lahf
cmp
adcb
xchg
pop
ljmp
pop
sub
inc
mov
or
lods
sbb
stc
or
nop
testl
out
sti
inc
rolb
and
aas
cli
roll
pop
out
rcll
clc
and
sti
movb
notl
pop
push
subb
sarb
mov
out
jg
out
adc
cli
dec
or
dec
lret
ss
hlt
inc
jle
mov
jno
int3
pop
and
add
pop
sub
iret
xor
pop
movsl
cli
repz
push
inc
cmp
xchg
xchg
and
cli
adc
mov
lret
cmc
push
mov
push
ret
push
jno
scas
cld
mov
xlat
call
xor
cmpsl
lea
mov
mov
pop
xchg
lods
nop
cltd
mov
xchg
lea
sub
call
lahf
sub
sbb
sub
outsl
inc
sbb
pop
mov
aas
mov
jle
cltd
sub
dec
xchg
cmc
push
push
and
xchg
push
fmuls
test
inc
push
pop
or
or
or
cld
fldenv
jl
out
adc
lcall
mov
adc
push
aaa
hlt
dec
inc
add
inc
jb
cmc
xchg
mov
rorb
lcall
xor
dec
cli
js
inc
cmp
mov
adc
pop
jge
loop
xor
or
call
setg
test
in
pop
or
adc
xor
dec
loopne
testl
call
jp
add
lcall
sahf
adc
hlt
loop
hlt
cmp
xor
icebp
pusha
mov
pop
es
andb
incb
cmp
mov
cmp
scas
push
sarb
stc
jo
out
lods
pop
stc
cmp
cmp
mov
sbb
mov
pop
mov
jae
push
and
xchg
adc
adc
xchg
int3
and
ds
jnp
adc
dec
adc
mov
fdivr
sarl
fiaddl
je
icebp
jge
pushf
mov
mov
pop
clc
or
idivl
popf
jo
push
pop
loopne
xchg
test
cmc
add
cld
in
sti
pop
fs
fsts
lahf
ljmp
js
in
inc
jg
je
lahf
jecxz
push
sahf
inc
ja
inc
sub
pop
sub
int3
hlt
ljmp
test
ret
cmpsb
sti
gs
jmp
mov
xchg
inc
sti
imul
sub
inc
jmp
fsin
loopne
incb
cmp
iret
cmp
fwait
fwait
fwait
push
mov
aad
fwait
sahf
mov
fbld
mov
sub
xchg
mov
push
dec
loopne
mov
add
in
bound
push
iret
cmc
dec
lock
ljmp
ljmp
pop
adc
mov
jecxz
iret
out
mov
aas
sbb
add
int
add
cs
jb
movl
lods
repz
stos
daa
jns
aas
dec
js
fisttpl
fdiv
mov
and
pop
cmp
fcomip
xchg
jbe
sbb
fisubs
pushf
pop
dec
dec
cmpsb
out
mov
fbld
jns
mov
repz
add
movsb
xchg
roll
jo
cmp
inc
aad
mov
add
mov
add
mov
lea
mov
xchg
and
push
rcrl
pushf
sbb
sbb
xchg
ljmp
mov
cmp
inc
sahf
aas
stos
scas
stc
pop
jle
sbb
sbb
cmp
sbb
fdivrs
sbb
cmp
mov
dec
pushf
mov
mov
ret
xor
and
sub
daa
aaa
adc
daa
dec
frstor
and
lea
add
mov
xchg
adc
add
push
stc
sbb
dec
cmp
push
sbb
imul
sbb
cmp
sbb
scas
pop
add
add
cmp
adcl
mov
repz
push
inc
lahf
aam
mov
iret
lods
in
insl
ljmp
adc
mov
in
int3
pop
add
dec
cli
out
in
fistpll
loop
scas
pop
and
lea
sbb
xchg
cld
repnz
mov
push
std
cmp
or
testl
dec
push
jp
je
mov
pop
mov
addb
jnp
push
mov
pop
test
je
sbb
add
mov
shr
cmpsl
pop
bswap
and
popl
jo
aam
mov
sahf
je
daa
and
loope
jb
cli
push
int3
cs
cmp
pushf
push
fs
fcmovnb
mov
fsubr
jbe
mov
mov
fchs
jnp
mov
fsubp
jb
popf
cli
test
and
dec
sti
dec
inc
cmp
cmpsl
sahf
cmp
adc
loopne
jmp
xor
xchg
jae
mov
mov
ret
lock
lock
into
mov
cs
sub
mov
out
pop
aad
mov
jnp
dec
cld
pop
testl
cld
push
mov
in
jns
mov
xor
inc
pop
jb
jne
out
js
dec
into
mov
cmp
push
jl
cmp
and
movsb
aaa
sub
repnz
je
test
out
mov
add
and
xchg
dec
repz
lahf
nop
mov
lret
jmp
int3
mov
jb
adc
dec
push
mov
push
and
cmpsb
stc
je
xlat
fimull
add
xchg
dec
sub
je
repz
xlat
loopne
sarl
stc
mov
popf
lahf
test
or
push
xchg
jecxz
in
cli
push
inc
test
cmpsb
je
jg
add
adcb
jnp
inc
pop
jbe
sti
jbe
and
add
scas
je
je
clc
test
cmp
or
das
pop
xlat
fidivl
je
jp
call
out
dec
xchg
cmp
les
daa
enter
adc
inc
test
mov
push
std
mov
and
cli
xchg
xchg
notb
adc
cmc
out
dec
xlat
mov
testl
aaa
negl
filds
mov
push
cwtl
pop
add
xchg
pop
push
dec
jp
dec
mov
add
inc
cmpsb
pop
ljmp
xlat
pop
movsl
out
jge
and
cmp
mov
mov
inc
jo
cmp
orl
out
pop
rol
jl
jecxz
jmp
add
negb
or
mulb
or
cmp
int3
sub
push
lock
ds
and
inc
fisubs
int3
adc
je
cltd
xchg
stc
imul
je
push
stc
push
cmp
cmp
out
int
sub
out
mov
neg
jl
repz
jmp
push
pushf
inc
jg
mov
dec
cmpb
stc
les
andl
popa
fdivs
stos
addl
push
idivl
sub
bound
daa
mov
xor
adc
cmp
cmp
out
adc
enter
jnp
cmp
and
mov
aaa
jecxz
jne
jl
cmp
or
mov
in
movsb
inc
mov
cmp
pop
mov
aas
dec
out
or
mov
sbb
sub
sbb
and
adc
roll
xlat
mov
scas
adc
cmp
adc
sub
jbe
cmc
push
shlb
out
or
cmp
cld
cs
call
xchg
les
jmp
jmp
cmpsl
repz
roll
cltd
add
ljmp
clc
lret
and
loope
aas
push
push
pop
jbe
stos
push
imul
xchg
test
and
cld
test
jmp
cwtl
mov
mov
icebp
ret
push
mov
xchg
adc
out
cmp
mov
lret
mov
add
push
ret
jbe
jmp
cmp
lret
ja
lds
ds
in
shlb
mov
icebp
scas
cwtl
out
and
adc
xchg
inc
in
lahf
or
dec
movsl
sbb
ljmp
call
jp
in
repz
cld
mov
jle
jns
or
shr
test
cmp
scas
xchg
and
out
xlat
pop
xorb
add
cmp
je
cmp
daa
addr16
mov
dec
mov
and
mov
lcall
mov
leave
aam
out
cmp
outsl
cmp
lret
ret
in
or
scas
pushf
mov
sti
je
test
jae
xchg
mov
cmp
xchg
fsubp
pop
fsubrs
pop
mov
xchg
sbb
mov
ds
cltd
pop
dec
pop
jp
push
add
cmp
das
js
rcr
push
xchg
xchg
test
out
sahf
cmp
xchg
lods
mov
sub
sahf
mov
xchg
lcall
pop
stos
cld
sub
pop
mov
lcall
fisubs
cli
xchg
dec
scas
shl
jmp
sbb
pop
idivl
aaa
into
scas
scas
lods
jmp
icebp
icebp
add
pushf
xchg
test
leave
lock
out
jmp
lods
adc
hlt
mov
lock
cmpsl
fdiv
ret
xor
repnz
xchg
mov
test
push
insb
cli
ljmp
mov
push
pop
das
into
leave
aas
cli
pop
pop
ljmp
scas
lods
pop
fistps
lock
add
ljmp
orl
sbb
xchg
jmp
xchg
arpl
dec
shl
mov
ret
test
popa
imul
pusha
and
jmp
xchg
mov
in
xlat
mov
daa
cli
mov
pop
stc
imul
les
pop
mov
das
xchg
jne
and
xor
xchg
mov
and
cmp
xchg
jo
inc
mov
and
pop
or
add
and
out
sub
idivb
lahf
roll
dec
fdivs
sbb
ljmp
sbb
adc
xor
insb
out
in
movsb
lods
addr16
cmp
jmp
pop
mov
ret
mov
pop
lahf
clc
jmp
jecxz
fwait
sti
and
dec
outsb
in
rclb
test
and
test
add
adc
inc
pop
ja
test
test
cltd
jle
cwtl
std
repnz
arpl
lahf
repnz
cltd
xor
inc
sbb
jb
mov
sub
movntq
sub
mov
pushl
sbb
in
mov
add
icebp
mov
pop
ror
out
and
aas
dec
mov
jnp
ret
fmulp
leave
out
insl
add
insl
adc
push
pop
sub
add
mov
test
mov
push
ljmp
push
test
xorb
xchg
xchg
push
sti
popa
ljmp
or
out
mov
lahf
adc
arpl
lea
notl
cld
pop
out
cmp
int3
sub
mov
xor
adc
add
pop
aaa
cld
or
add
aam
fwait
mov
xchg
push
pop
fwait
stc
sub
cmpsb
arpl
jmp
lahf
xchg
mov
rcl
dec
aad
adc
imull
add
aad
stos
lret
inc
mov
shlb
mov
je
inc
add
loope
repnz
inc
and
jle
or
and
ret
mov
jb
and
ret
iret
and
movb
mov
jae
sub
ret
stos
repz
in
jne
pop
dec
daa
arpl
jecxz
jb
loope
and
inc
enter
and
ss
outsl
cmp
std
lds
idiv
jns
loopne
cmc
frstor
push
sbb
mov
test
cld
xchg
aas
push
fcomip
xchg
or
shr
jmp
insb
addr16
cltd
mov
in
xorl
dec
mov
in
aas
dec
in
int
mov
int3
push
fisttpll
jb
stc
aaa
daa
jmp
fimuls
in
std
cmpsl
fwait
sbb
lret
dec
cmp
xchg
ljmp
push
pop
mov
pop
push
out
insb
ds
cmpsb
mov
and
push
push
push
pop
cmp
sub
ds
mov
xor
shl
mov
jg
fbld
mov
push
into
adc
xor
cli
adc
and
call
outsb
push
jge
inc
pop
neg
dec
out
mov
mov
lock
mov
xchg
cli
sti
add
lds
fdivs
enter
in
sti
andl
mov
sub
mov
in
in
bnd
aas
lea
sbb
outsl
insb
add
ret
pop
push
xor
sbb
adc
and
int
jo
stos
outsb
orl
mov
pop
into
call
cli
aad
call
or
mov
daa
xchg
das
mov
inc
aas
add
jnp
dec
test
pop
push
jl
or
iret
pop
shrb
scas
push
inc
jg
pop
into
test
or
cmpb
test
mov
xchg
cmp
pushf
push
aas
or
sti
xor
cmp
ret
pop
push
jns
xor
lret
pop
sar
pop
fmuls
dec
fmuls
pop
sbb
sbb
les
jg
xchg
inc
in
jl
ja
pop
out
aas
cs
jns
jecxz
out
cmp
fstpt
fadds
sarb
and
dec
jl
mov
psubb
stos
inc
inc
push
dec
je
cmpsb
loopne
pop
ret
inc
pushf
and
push
jb
testl
mov
ret
mov
ret
or
push
ret
sbbl
pop
sysret
mov
xchg
push
sub
xchg
mov
push
out
adc
mov
into
dec
or
mov
dec
xchg
pop
mov
adc
mov
cmp
iret
mov
cltd
push
mov
subl
out
push
or
mov
add
sti
mov
cmp
cld
inc
xchg
std
mov
fstpt
ret
lret
scas
mov
sub
mov
fldenv
out
cmpsl
nop
push
aas
lods
in
cmc
hlt
scas
push
les
jl
sub
les
bnd
adc
ret
rcr
push
cmp
xchg
sti
and
rcll
decl
into
lea
mov
das
jmp
outsl
lods
inc
mul
into
cmp
sub
mov
mov
iret
sbb
or
jmp
dec
test
jp
ja
lods
clc
jmp
fcmovnu
into
jae
lods
jmp
stos
push
insl
cld
ja
jg
pop
xor
shl
std
mov
xor
pop
cld
incl
iret
dec
or
mov
sarb
mov
repz
pop
fistpll
popf
call
or
mov
lret
repz
cs
sahf
sub
mov
dec
dec
cmpsb
push
pusha
cli
inc
mov
sti
sbb
scas
mov
daa
test
push
bnd
out
shrl
jno
xchg
fldenv
loop
lods
fistpll
push
cmp
mov
loope
jg
jp
cli
fs
cmpsl
and
and
lods
loop
cmc
lret
cmc
sbbl
loope
scas
out
cmp
cmc
pushf
stc
in
std
mov
mov
out
out
xchg
shll
sti
notl
adc
sti
mov
inc
jl
fmull
cmp
cli
cmpsl
iret
push
je
repz
ret
jg
ret
mov
mov
enter
mov
xor
ljmp
xor
jmp
scas
daa
out
xchg
data16
out
xchg
adc
pop
cwtl
pop
mov
fucomp
shll
dec
mov
out
xchg
dec
movsb
sub
xor
hlt
pop
add
inc
add
xchg
cwtl
stos
lret
fildl
movsb
je
lea
cld
jp
sbb
cmc
filds
and
xchg
fildll
pop
shll
das
in
addl
in
lods
add
mov
repz
testl
xor
scas
pop
int
out
adc
mov
fstl
sbb
loop
or
int
jl
fsubs
inc
and
jmp
jne
lds
sub
mov
out
adc
out
mov
aaa
mov
iret
dec
out
outsl
insl
jecxz
into
pop
push
popf
fstpt
ds
es
js
outsl
fnstenv
jg
jge
dec
repnz
and
sahf
iret
mov
sub
shrb
push
mulb
shlb
cs
out
imulb
mov
fidivrl
outsl
mov
push
idivl
sbb
add
add
jge
es
lcall
rol
and
sti
rcrl
cmp
jge
das
leave
mov
cli
clc
in
mov
ja
pop
mov
xorl
shll
jno
jb
or
push
ja
jnp
mov
mov
add
xlat
cmpsb
dec
sub
mull
or
mull
gs
aam
test
jp
mov
pop
cmp
jp
cld
movsb
cwtl
pop
je
jp
stos
das
pop
out
cmp
mov
and
jbe
negl
mov
aam
outsw
aas
out
or
sarl
push
jmp
movsb
sti
dec
cmpsl
aaa
fidivrl
ret
mov
into
push
jmp
dec
xor
repnz
fbstp
daa
dec
in
inc
mov
or
arpl
out
xchg
test
lock
cli
sti
jmp
out
out
mov
scas
flds
ret
mov
mov
nop
call
push
in
mov
stos
mov
fadds
push
decb
jno
mov
in
lahf
dec
adc
and
xor
sub
into
les
sbb
repz
icebp
jecxz
sti
in
mov
and
sar
fdecstp
adc
test
aad
fwait
mov
pop
mov
fstpl
fdivr
cmpb
xchg
cmc
lods
rcrl
sahf
mov
mov
int
popf
cld
sub
iret
pop
jg
xor
test
jg
add
rcr
mov
aas
pop
push
loop
cmc
mov
sahf
xchg
aas
mov
and
jge
mov
pushf
out
pop
push
hlt
test
leave
out
inc
jno
xchg
std
clc
xchg
stc
std
push
jg
cmp
divb
cli
fcomps
mov
xchg
cmp
xchg
fwait
xchg
adc
cmp
in
dec
imul
jmp
stos
pop
sub
xchg
xchg
mov
cmc
dec
pop
pushl
decl
loop
js
shrb
stos
out
cli
daa
mov
and
mov
jnp
cld
nop
cmpsb
nop
mov
mov
push
fistps
xchg
aas
aad
in
scas
nop
xchg
jno
mull
call
cmp
mov
mov
lds
push
mov
and
scas
inc
mov
pop
sti
idivl
xchg
pop
lea
mov
pop
stos
mov
outsb
push
and
in
xchg
out
mov
push
dec
dec
adcb
xchg
mov
mov
dec
arpl
xchg
mov
in
cltd
jae
jns
add
lret
in
sti
leave
loop
ljmp
fistpl
lahf
in
stc
mov
or
das
out
enter
cltd
mov
adc
movsb
pop
pusha
pop
out
or
test
aam
dec
lahf
mov
ljmp
cwtl
lods
mov
ficompl
dec
mov
fldz
mov
push
mov
and
adc
sti
dec
mov
xchg
sub
pushf
scas
mov
jge
clc
hlt
xchg
out
lret
pop
sarb
lods
out
movsb
fdivp
js
sub
sahf
adc
or
aad
adc
or
ficoml
mov
dec
call
jb
mov
jg
adc
sub
movsb
xor
test
jle
sarl
cmp
mov
mov
jns
adc
cwtl
out
sbb
repnz
lock
cmp
cmc
lahf
mov
lret
or
jge
stc
outsl
fbstp
addl
mov
jge
jle
in
xchg
xchg
arpl
cmp
sahf
cmp
lret
dec
or
cmp
idivb
ds
xchg
push
ljmp
mov
jle
enter
imulb
mov
inc
daa
sub
mov
sub
int3
sub
movsl
lock
cwtl
inc
xor
int
mov
insb
or
lret
hlt
sbb
xchg
cmpsl
and
and
idivb
mov
jns
pop
xchg
ficomps
pushl
outsb
push
xor
pop
std
clc
inc
test
jge
pushf
notl
mov
mov
push
out
jbe
fdivr
sti
call
idivl
jns
in
loopne
ljmp
fwait
das
jl
pop
das
les
nop
maskmovq
dec
xchg
fsubrp
call
or
jno
in
xlat
arpl
cmp
into
mov
mov
cmp
lods
xchg
push
test
leave
xchg
add
jbe
mov
mov
mov
nop
std
stc
sub
loop
test
dec
negl
repnz
testb
or
inc
mov
jnp
adc
lock
out
mov
lahf
es
pop
loop
cltd
mov
inc
mov
jge
sti
sahf
pop
aad
imul
out
daa
lcall
pop
add
add
ret
iret
shll
mov
sarb
shrb
rcrb
rorb
jg
std
pop
sarb
aaa
rolb
add
push
iret
mov
iret
push
iret
add
repz
ror
into
mov
add
add
mov
test
mov
into
xchg
gs
pop
into
dec
into
cs
adc
or
add
nop
mov
int3
fcmovne
mov
test
int3
push
int3
out
lret
call
lret
enter
mov
or
lret
outsb
lret
lret
lret
je
dec
lret
insl
leave
leave
push
leave
cmp
int3
pop
leave
repz
add
enter
enter
enter
enter
movl
add
push
movl
add
icebp
loope
int3
fwait
shufps
lds
vpinsrw
ret
les
imul
add
add
dec
les
les
les
mov
ret
add
pop
ret
sbb
enter
retw
daa
add
add
inc
ret
and
sbb
mov
mov
rol
stos
shlb
repnz
xor
hlt
into
loope
inc
pop
pop
call
test
add
nop
scas
fisubrl
mov
xchg
int
int
int
int
ret
mov
or
add
jmp
rcr
into
shll
in
shlb
dec
shlb
lahf
add
iret
ror
mov
iret
fs
pop
iret
ss
push
inc
add
xor
es
and
into
sahf
into
cltd
shlb
int
int
add
add
int
int
int3
test
leave
lret
mov
add
lret
jmp
leave
or
leave
xor
sbb
out
ror
insl
enter
enter
enter
add
movsl
outsl
movl
loopne
into
pop
cmpsb
lahf
jae
data16
push
dec
movb
add
inc
movb
sub
or
test
aad
lret
lds
add
pop
lds
dec
lds
lds
lds
addb
add
mov
xchg
les
les
pop
les
inc
les
les
mov
les
les
fcmovnb
rol
cmpsb
ret
jg
sbbb
xor
lahf
ret
dec
ret
ret
out
mov
outsl
shll
xor
sub
sbb
mov
sarb
repnz
hlt
iret
fcmovne
ror
into
iret
iret
test
pushf
add
out
sub
fxch
leave
into
mov
or
jmp
cmp
int3
nop
imulb
mov
lret
movlps
add
lret
das
lret
adc
stc
lret
inc
lret
sbb
leave
loop
iret
add
xchg
scas
mov
pop
leave
bswap
add
pop
add
loop
or
inc
repz
in
xchg
movb
inc
das
sub
stc
add
add
fld
rol
push
lds
inc
lds
lds
lds
lds
jns
insl
and
add
sub
and
sbb
add
ret
ret
test
jno
push
ret
fwait
ret
or
rol
mov
ret
jle
ja
add
dec
add
shr
fcomps
mov
rolb
shlb
rcrb
add
imul
orl
in
out
loopne
add
and
push
fcmove
aad
lret
int
int
int
int
int
int
int
int
add
mov
int
int
int
cld
xchg
int3
mov
lods
lret
mov
lret
pop
lret
push
lret
push
lret
dec
shrb
lret
xor
jmp
lret
ror
add
add
lret
lods
lret
mov
jl
pop
lret
ds
and
adc
push
lret
dec
stc
add
mov
jb
leave
lahf
leave
mov
jae
pop
enter
enter
jns
cmp
push
dec
mov
xchg
jbe
cmc
adc
and
lcall
ret
ljmp
pushf
rorl
add
inc
shll
shll
sti
shl
fcmovnb
aad
into
sarb
pushf
push
push
jns,pn
sub
iret
iret
jbe
add
add
sub
and
sbb
into
stc
int3
pop
int3
fmul
ret
lret
sahf
lret
xchg
jle
stos
lret
insb
lret
push
jno
ds
and
push
add
out
enter
enter
mov
enter
xchg
inc
enter
enter
add
enter
jmp
loope
test
xchg
mov
add
jne
xchg
sahf
mov
sbb
push
fadd
incl
adc
mov
cmpsl
mov
ds
cmp
xor
and
adc
or
push
add
xor
loope
fadd
mov
lds
lds
add
add
push
lds
and
pop
push
cli
out
ffreep
fadd
mov
sahf
les
les
les
adc
lock
push
add
jmp
out
loopne
ret
mov
ret
outsb
add
subb
gs
push
ret
dec
ret
cs
rol
mov
roll
popa
rcll
roll
rcrl
add
in
shr
loope
out
cmp
fadd
rol
shlb
xor
aad
mov
mov
add
mov
movsb
imul
xor
adc
or
cmpsb
add
pop
add
ja
jo
push
int3
inc
int3
cld
lret
test
mov
js
jb
lretw
pop
lret
mov
mov
xlat
lret
fwait
lret
ja
pop
lcall
sub
mov
enter
enter
enter
mov
mov
popf
scas
mov
addl
jbe
addr16
ds
sub
and
mov
xchg
mov
popa
pop
enter
movb
or
in
mov
lds
dec
lds
cmp
jle
lds
lds
lds
xlat
int
rol
les
int3
test
les
out
nop
mov
imul
mov
ud0
pop
mov
orl
cld
xchg
inc
xchg
clc
outsl
inc
test
mov
inc
ljmp
inc
mov
das
push
xlat
inc
jmp
inc
addl
push
pop
mov
lock
sahf
xor
xchg
aad
or
push
loope
cwtl
clc
aad
std
lahf
jmp
movsb
fisttps
stc
jae
stc
daa
mov
es
idivb
aaa
loope
cmc
jmp
xor
repz
add
jl
push
mov
lahf
jl
mov
leave
out
clc
insl
std
and
jae
lods
int
clc
lds
aad
into
or
cmp
icebp
dec
xchg
and
out
loopne
out
into
daa
test
fsubr
cs
inc
push
jl
lret
mov
mov
jg
movsl
mov
ja
cmp
gs
les
pop
cld
push
dec
mov
sub
inc
clc
xchg
adc
in
into
loopne
pop
pop
and
mov
mov
stc
sti
fcomps
mov
gs
sti
call
mov
or
stc
sti
fbstp
mov
add
mov
nop
lcall
out
dec
stos
lods
loopne
loopne
pop
hlt
mov
mov
cli
xchg
lcall
mov
lods
jg
incl
sub
cmpsb
inc
incl
add
mov
or
repz
inc
jmp
pop
jmp
loop
lret
mov
sar
pop
pop
cmp
cmp
out
xchg
or
cmp
daa
jg
fisttps
cmc
clc
fwait
cmc
pusha
adc
sti
sti
aam
jmp
cli
arpl
push
mov
shlb
dec
pop
mov
jmp
in
lcall
push
cmpsl
in
popf
call
push
aas
add
or
loop
adc
cwtl
int3
jg
scas
iret
mov
mov
addr16
cmp
sbb
ret
stos
push
adc
jecxz
add
jge
orb
jle
loopne
cmp
adc
dec
lcall
dec
push
shlb
push
mov
mov
int
orb
jp
add
lock
or
in
flds
mov
test
out
mov
outsb
lods
test
mov
stc
jl
jnp
subb
repz
stc
mov
repnz
and
test
xor
movsb
mov
xchg
or
add
fdiv
xchg
mov
mov
insl
cmp
test
cld
or
aad
xchg
imul
stc
ds
xchg
testl
pop
and
imul
sbb
das
xchg
jl
sbb
sbb
cmpsl
fmull
mov
cld
adc
cli
jne
jge
cld
cmovb
mov
ja
pop
and
ja
testl
idivb
sbb
out
das
lret
and
sub
inc
lcall
addr16
leave
dec
out
xchg
add
fs
mov
cmp
pop
filds
std
sti
lea
fidivs
jo
in
rol
add
mov
adc
mov
icebp
jbe
enter
imul
xlat
xor
mov
hlt
lds
dec
xlat
sti
dec
inc
xchg
movsb
cwtl
movsl
sbb
in
fwait
mov
adc
ja
negl
lea
adc
jb
jl
cmpsl
das
test
arpl
jb
jmp
mov
jle
test
cli
cli
dec
jge
jb
xchg
jnp
ficomps
pop
sbb
lret
fiadds
xlat
fiadds
lahf
in
add
rclb
int
test
mov
scas
xchg
lret
and
push
inc
pop
pop
or
lock
inc
lods
mov
pop
roll
icebp
sti
js
cmc
jmp
loope
inc
std
xor
xor
inc
adc
or
mov
sbb
pop
mov
ja
jae
pop
jne
insl
mov
stos
fisubrl
jmp
in
cmp
jb
mov
popa
mov
imull
mov
idivl
ffreep
ret
fisubrs
ljmp
sbb
ss
mov
outsb
fwait
in
ss
push
cli
cmp
pop
xchg
jns
outsl
xor
mov
fistps
stos
nop
fistpl
inc
cld
stos
or
shrl
in
push
ja
cmp
xchg
stc
jl
dec
sbb
cmp
out
ffreep
in
dec
dec
fisttpll
or
and
sar
inc
inc
xchg
adc
cld
inc
repnz
mov
pushf
dec
adc
xchg
adc
push
outsb
pushf
xor
add
sbb
dec
add
dec
repnz
dec
call
push
cmpsl
and
push
testl
fcoml
push
push
daa
dec
dec
idiv
push
stc
push
add
push
add
jnp
dec
sbb
dec
sarl
adc
gs
xchg
rcl
adc
out
jnp
and
movsl
or
fldpi
lahf
pushl
movsb
mov
dec
push
or
mov
call
inc
imull
mov
sub
dec
data16
and
cmp
rcll
fidivrs
idivb
call
fwait
mov
mov
pop
aaa
mov
ss
xor
fidivrs
insb
xor
inc
jns
and
dec
enter
stos
insb
inc
mov
mov
push
fs
test
enter
enter
ljmp
das
mov
xchg
xchg
pop
mov
and
les
lcall
sbb
sbb
ja
adc
mov
push
out
jp
inc
dec
dec
ss
mul
pop
rcll
or
mov
jns
in
popf
sub
rol
out
cmp
mov
mov
fistl
rcll
ffreep
jb
aad
popa
lret
scas
cmc
xchg
mov
scas
fsubr
dec
in
cmp
ljmp
ja
push
loopne
pop
neg
out
fisttps
mov
mov
jmp
push
cmpsb
xor
mov
push
push
xchg
out
mov
pop
adc
xchg
incl
subb
stc
push
push
lods
dec
daa
daa
pop
pop
push
mov
adc
mov
cmc
out
or
adc
jp
xorb
loopnew
dec
shll
sub
fadd
xchg
loope
sub
cmp
lahf
mov
cmp
lods
repnz
pop
pop
ljmp
pop
push
cmpsl
push
xchg
jecxz
mov
adcb
int3
push
test
jbe
pushf
cmp
inc
loopne
mov
cmc
div
dec
mov
jbe
pop
cmp
aam
cli
out
or
je
cmpsb
mov
cli
divl
jae
popa
imul
xchg
sarl
jae
scas
mov
mov
out
dec
pop
adc
jg
fcmovu
pushl
call
cwtl
fisttps
xchg
jg
stos
jae
fwait
xchg
cld
out
in
pop
lret
push
inc
sti
mov
xor
iret
in
outsl
andl
jg
rorl
sti
jg
and
mov
ja
fdivr
push
repz
popf
xchg
in
and
outsl
sti
fs
lahf
filds
sahf
out
and
cmpsl
in
shrb
jle
jg
add
std
std
ljmp
loop
sti
outsl
ja
negb
jg
fsubrp
pop
mov
mov
scas
sub
fnsave
xchg
dec
pop
div
cmp
adc
jecxz
lea
pushf
adcl
je
stos
xchg
lea
aas
inc
ds
nop
xchg
int
imul
outsl
ja
mov
cmp
out
xor
xchg
or
sbbb
xchg
mov
mov
fistpll
push
mov
push
repz
mov
outsb
out
insl
mov
stc
ljmp
ja
fdivrp
cmpsl
ds
or
mov
div
lahf
cld
inc
daa
rcr
inc
icebp
mov
xchg
sarb
cmp
lret
xor
lret
in
xchg
dec
clc
test
sub
adc
fistpll
in
shld
gs
jbe
mul
in
pop
aad
gs
xchg
dec
ret
inc
aaa
scas
push
xchg
gs
pop
movsb
adc
repz
inc
xchg
je
xchg
hlt
into
clc
subb
push
jbe
in
xchg
scas
adc
repnz
shr
hlt
pop
icebp
mov
movsl
lret
lret
or
mulb
lcall
pop
shlb
scas
ret
dec
fcmovbe
test
daa
pushl
enter
fdivl
pop
sbb
out
mov
jp
lock
mov
sti
scas
push
out
xchg
jecxz
jbe
adc
xor
mov
cmc
in
ja
pushf
or
repnz
stos
mov
into
in
stos
in
test
popa
sar
add
nop
xchg
and
popf
jle
jmp
inc
repnz
mov
cmp
repnz
xchg
mov
fmull
movsl
sbb
ljmp
mov
push
mov
mov
out
xchg
je
jge
in
pop
outsb
add
jg
enter
fdivr
clc
sti
imul
lahf
pop
xchg
aam
cmp
std
scas
in
push
test
xchg
mov
mov
mov
push
adc
mov
hlt
incl
adc
xchg
dec
ja
data16
nop
sti
pop
hlt
movsb
repz
test
sar
fidivl
fildll
mov
sbb
xchg
mov
sbb
fsubl
jmp
popf
dec
sbb
push
adc
call
lcall
jmp
sahf
xchg
mov
push
sahf
fdivr
mov
in
and
mov
xchg
dec
xchg
fdivrs
stos
jg
xchg
adc
ljmp
leave
push
mov
ljmp
leave
jbe
mov
iret
cli
jg
aas
inc
dec
nop
and
int3
xchg
push
and
hlt
cwtl
out
jg
adcb
inc
bound
in
pop
inc
ror
xlat
push
int
xchg
xchg
cmp
mov
sahf
out
leave
sub
xchg
clc
hlt
xchg
fdiv
hlt
leave
daa
mov
xchg
jo
xchg
mov
fmuls
in
mov
loopne
lock
fiadds
pushf
decl
bound
lret
and
loopne
les
xchg
jbe
mov
inc
push
ficompl
negb
xchg
xchg
test
lcall
jg
push
sti
incl
cmp
or
int
int
testl
int
push
push
int
int
int
int3
mov
lcall
sub
and
icebp
add
and
movsb
xchg
lret
push
lret
cmpsb
leave
fwait
leave
xchg
leave
ja
xchg
jb
dec
leave
enter
enter
enter
adc
xchg
xor
pop
enter
adc
add
add
sbb
lds
lds
vcmppd
add
jne
aad
out
ret
iret
ret
sbb
pop
mov
add
repnz
mov
rcrl
rcll
rcl
mov
push
fnstenv
cld
out
decb
cmp
lods
lcall
loopne
mov
inc
fstp
mov
imul
nop
cltd
lock
rcr
mov
sar
rorl
aam
in
aas
push
fcomps
fidivrl
mov
scas
dec
cld
cld
fistps
repz
jns
call
pop
cltd
leave
stc
sti
ljmp
in
stc
mov
mov
repz
lret
jl
jecxz
std
jns
adc
pop
mov
das
fisttps
repnz
jle
push
or
loope
aam
mov
dec
mov
cmp
daa
lahf
cmp
cmp
xchg
test
out
inc
rcrb
popf
ss
decl
in
dec
dec
push
cwtl
js
ret
lock
pop
or
out
loop
pop
mov
or
decb
loop
insb
shr
fwait
push
loope
leave
jl
test
out
dec
lahf
cli
imul
cmp
in
aas
pop
xor
mov
adc
pop
popf
mov
idiv
jg
incl
jmp
add
inc
add
call
int
jmp
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
pusha
mov
mov
xor
mov
inc
cmp
jb
popa
jmp
