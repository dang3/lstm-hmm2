fnstcw
sti
es
push
add
add
imul
insb
lcall
dec
je
shll
jo
push
cwtl
shll
in
shll
add
sub
cmpsb
jmp
adc
test
cmpsb
imul
int3
add
sbb
push
add
aas
add
jb
gs
xor
cs
insb
add
pop
push
or
sbb
in
je
pop
sbb
outsb
je
cs
bound
push
jb
jbe
fidivrl
imul
jae
jae
and
pop
or
mov
add
pushw
gs
outsl
imul
fs
cs
lret
pop
adc
jbe
mov
cmp
gs
and
imul
rorl
fs
add
je
pop
cmpl
bound
xor
cmp
cmp
add
xor
ss
push
mov
sub
or
push
push
push
push
xor
pop
xor
lea
mov
mov
adc
stos
stos
stos
adc
adc
fstp
sbb
jne
push
push
adcb
add
fcmovnu
out
je
ds
push
push
call
or
cld
in
or
aas
xor
mov
push
call
add
cmp
je
xchg
adc
pop
je
adc
cwtl
sub
aad
sti
int
aaa
cmp
xchg
test
pop
jmp
push
or
std
ss
pop
pop
pop
leave
ret
hlt
push
pushw
movsl
faddl
out
std
add
mov
test
mov
or
lds
mov
or
popa
enter
insl
xchg
fcmovne
push
add
outsl
int3
int
pop
into
push
iret
rorb
shll
xor
shll
jbe
jb
aam
aad
xlat
pop
fdivs
mov
fidivl
fisttpl
push
pop
loope
lcall
inc
in
and
add
fwait
scas
out
call
imul
in
pop
in
aaa
lock
repnz
div
clc
ret
insl
stc
dec
pop
cli
sti
js
je
out
std
add
fimuls
sub
mov
fidivs
dec
mov
jmp
and
mulb
cmp
je
push
push
call
in
test
jg
add
jne
push
jmp
jp
push
arpl
cwtl
movl
orl
es
lods
fsts
pushf
pop
adc
jne
pushl
frstor
out
movups
or
iret
aas
pop
cld
xchg
outsl
negb
inc
rclb
mov
jne
push
lods
std
nop
daa
lds
push
mov
mov
mov
push
jnp
inc
lret
xchg
into
jl
push
push
mov
mov
push
clc
add
push
push
sbb
jne
or
push
lock
arpl
leave
add
cmp
pop
push
cli
into
pushf
jmp
stos
int
mov
cltd
mov
xor
repz
push
adc
or
loope
xorb
and
push
push
cmp
mov
pop
add
inc
cmp
jo
in
and
sbb
movsl
sbb
mov
in
sbb
mov
sub
xchg
pop
inc
push
shlb
ss
xchg
jmp
fucomi
pop
imul
adc
push
fidivrl
pop
or
into
adcl
xchg
lods
shl
push
mov
fistpl
push
cmp
adc
clc
je
xor
push
sbb
out
xchg
jno
push
cli
ds
inc
cmp
jge
lods
mov
pop
je
or
push
and
test
fwait
adc
push
call
pop
mov
hlt
lcall
into
insb
sbb
in
loope
pop
and
frstor
lock
cmp
cmp
dec
push
sub
and
dec
imul
mov
mov
int3
cmp
add
mov
lods
loope
and
jno
mov
fimuls
dec
or
adc
iret
sbb
push
mov
ror
mov
inc
inc
dec
dec
test
jne
push
pop
jmp
lds
and
fnstenv
shrb
pop
push
jecxz
mov
add
mov
cmp
sti
fcmovnb
int
jno
mov
cld
sbb
or
inc
and
loope
jecxz
testb
movsb
sub
mov
push
mov
pusha
fcomps
sub
mov
mov
cltd
shl
inc
je
daa
cmpl
push
jno
insb
mov
push
pop
or
cmp
cwtl
pop
incl
int3
mov
mov
jae
ret
shlb
pop
std
add
xor
and
stc
jo
jp
ja
or
je
repz
loopne
mov
add
movsl
loopne
add
into
loopne
mov
lret
stos
push
insb
out
stc
insb
adc
call
add
jle
jnp
xor
adc
push
xchg
or
ficomps
into
mov
sbb
shl
call
push
pusha
into
xor
xor
lret
adc
xor
scas
xlat
inc
or
jp
in
std
int
fwait
mov
div
fisubl
mov
sbb
xor
pop
pop
pop
negb
mov
xchg
push
cmp
arpl
pop
or
inc
fstl
std
in
sub
outsb
ljmp
shrb
add
je
popa
add
sub
shrb
pop
add
add
sub
popw
or
insb
int
push
jne
insb
inc
or
sbb
ja
pop
mov
in
mov
push
test
aaa
pop
jnp
add
add
cmp
loop
fmul
sahf
test
adc
push
xorl
leave
pop
cwtl
and
std
test
test
int
test
adc
pop
mov
std
dec
push
mov
imul
cld
pop
sar
mov
jae
fxch
lods
jb
shrb
xor
cmp
xor
pop
int
into
iret
push
ja
xor
shrb
or
xor
xor
cs
dec
mov
gs
js
mov
xor
stc
jns
stc
pop
iret
ljmp
idivl
mov
enter
shrb
loope
mov
push
loop
cli
mov
or
mov
enter
jnp
int3
fdivrl
sti
and
mov
or
clc
ficoml
fs
cs
pop
outsl
outsb
ds
je
jae
dec
pusha
mov
insb
data16
int
pop
sbb
insb
movsb
jnp
pop
or
idivl
sbb
push
cmp
movd
xor
push
int
movsl
adc
add
clc
call
and
popf
lea
das
push
dec
sar
mov
movsb
mov
xchg
dec
adc
fwait
jge
jbe
push
call
push
bound
xchg
sbb
sti
iret
int3
push
fstpt
inc
mov
nop
jae
jbe
mov
gs
adc
cmp
push
icebp
pop
imul
lcall
or
out
pop
mov
call
lock
and
test
xlat
cmp
repz
mov
xchg
jo
notl
aaa
imul
cmp
imull
pop
xor
pusha
gs
aad
inc
mov
lods
mov
adc
and
cwtl
int3
add
test
mov
pop
cld
mov
dec
inc
jb
sub
fistpl
imul
mov
or
loope
adc
sub
ret
aas
test
sbb
mov
and
fcoms
dec
push
push
daa
sbb
inc
push
lods
dec
or
inc
dec
dec
pop
imul
dec
inc
dec
xor
lods
add
inc
sub
inc
rclb
fsubs
add
mov
push
add
cmpsb
mov
add
nop
add
cwtl
add
mov
inc
call
in
pop
mov
int
mov
imul
addr16
insl
and
outsb
outsb
outsl
je
bound
jb
outsb
and
inc
dec
push
and
ja
outsl
fs
xchg
push
pushf
outsl
repnz
out
nop
lea
pusha
xchg
rolb
stos
jae
aam
jae
push
sti
out
shll
daa
repz
sti
jnp
mov
stc
in
testb
inc
mov
push
inc
dec
add
pop
cli
cld
dec
fstp
mov
adc
mov
or
add
out
add
xchg
adc
add
test
pop
add
or
insb
fstps
pop
inc
fsts
mov
add
push
xor
jle
jne
add
bound
mov
in
jge
add
into
out
popa
push
pop
jl
jle
or
sbb
loopne
inc
push
push
pop
mov
out
mov
or
gs
outsl
arpl
dec
dec
sarl
test
inc
push
dec
pushl
add
lcall
sbb
test
out
insb
mov
mov
add
lcall
scas
test
cmpsb
fstps
mov
ljmp
movsl
and
cmp
xor
rorl
mov
mov
fsubr
clc
xchg
dec
shrl
movsb
or
xor
shll
pop
jo
xchg
shll
aam
scas
pop
ss
lock
or
mov
lcall
negl
ss
add
outsb
repnz
cwtl
mov
negl
clc
stos
jae
lcall
sbb
out
xor
scas
imul
shl
out
clc
or
push
cmpsb
imul
imul
outsb
mov
andl
pop
test
lret
je
roll
enter
or
dec
mov
addb
dec
xlat
jl
pushf
mov
rcrb
and
push
scas
cmc
imul
sbb
pop
subl
adc
gs
fs
sub
dec
je
jo
jne
jns
out
pop
mulb
inc
aaa
dec
jo
push
jb
adc
call
push
dec
dec
add
nop
xchg
mov
pop
push
fwait
dec
add
or
and
fxch
fisubrs
add
aaa
sbb
imul
insb
add
push
pop
pop
inc
add
scas
insb
add
add
and
lods
insb
addb
test
and
negl
das
pop
add
mov
ja
dec
cwtl
sub
sbb
aas
add
mov
pop
rorl
incl
and
inc
inc
leave
test
call
add
jecxz
or
sbb
pop
inc
adc
sub
pop
test
xchg
inc
pop
ret
das
lcall
xor
add
and
pop
xor
inc
test
bound
or
imul
cli
add
ja
adc
je
jne
jb
scas
jnp
add
sbb
pop
push
pop
mov
imul
pop
add
push
fisttps
mov
pop
ja
or
push
mov
jae
pop
and
push
addr16
xor
push
sbb
pusha
aas
stos
shll
pop
add
fildll
aas
jmp
dec
inc
inc
bound
aaa
fs
test
fldpi
cmp
orl
mov
shlb
pop
push
jbe
inc
jne
jb
mov
fisttps
inc
outsl
outsb
je
outsl
insb
je
or
fists
bound
jb
and
outsl
jne
sbb
push
cmp
push
cmp
push
push
call
imul
push
sbb
sub
divl
cwtl
cmpsl
fstps
je
xor
je
pop
jns
xchg
pop
je
sti
std
lods
imul
sub
outsb
pusha
bound
cli
pop
pop
insb
popa
jne
arpl
gs
or
stos
or
insl
mov
add
pop
dec
push
add
inc
push
dec
inc
popa
stc
insl
push
outsb
loopnew
lret
lea
push
push
push
push
or
lds
enter
call
lods
out
sbb
pop
into
mov
or
test
fidivs
push
repz
cmovno
lock
rclb
imul
daa
sbb
arpl
jae
arpl
add
and
inc
add
cmp
xchg
and
add
xorl
push
out
fwait
add
or
fidivs
push
pop
mov
fs
repz
sbb
rorb
stos
aam
and
lea
ret
fdiv
cwtl
aas
das
pushf
add
push
repnz
inc
rcrl
pop
and
cs
mov
or
add
add
in
sbb
pushf
fstpl
push
add
outsb
outsl
mov
jo
ds
mov
sti
mov
mov
andl
inc
jge
mov
pop
sti
cs
push
mov
lea
adc
and
or
inc
lcall
in
push
push
call
in
add
movb
mov
sub
sub
mov
shll
fcmovnb
push
or
or
movb
sti
mov
jmp
inc
call
divb
imul
orl
cs
mov
rol
mov
xchg
push
popf
insl
lock
inc
jne
test
cwtl
push
iret
or
or
cs
jns
stos
and
xchg
and
lcall
int
out
mov
mov
lock
cmp
adc
mov
andb
mov
or
mov
aas
out
pop
inc
pop
cmp
pop
jl
push
aaa
shlb
pop
pop
sub
jecxz
or
leave
and
xor
adc
pop
mov
in
and
xor
adc
cmp
jg
xor
adc
adc
push
push
rorb
and
add
or
and
add
xor
adc
xor
adc
dec
ds
les
add
scas
sbb
adc
adc
add
pop
xor
pop
dec
jecxz
xor
adc
dec
push
and
inc
xor
jecxz
lea
xorps
push
stc
and
pushf
xor
dec
pop
add
adc
lods
push
mov
cltd
push
and
jg
jb
dec
add
cmpw
jle
dec
add
lret
data16
inc
push
cld
nop
cmovs
adc
add
shr
xchg
sbb
ds
add
sbb
adc
into
cli
cwtl
or
sarb
mov
std
fldt
mov
and
divl
adc
pop
cmp
ja
in
insl
mov
in
in
xor
xchg
loopne
jg
sbb
cmp
out
jmp
cmp
jb
sub
inc
loope
or
addl
or
dec
sbb
lods
ljmp
or
ret
jmp
jmp
iret
push
sar
add
fs
cmp
push
mov
push
add
rcrb
jge
push
push
mov
sti
sarb
sub
ret
dec
push
mov
js
or
xchg
or
insb
sbb
mov
sub
mov
dec
xor
lea
movsl
add
addr16
int
mov
movsb
mov
mov
push
jle
mov
adc
je
movsb
jmp
or
sahf
xchg
aaa
inc
mov
xchg
mov
or
mov
std
dec
push
mov
and
push
or
sarl
push
insl
mov
mov
add
mulb
sbb
flds
pop
or
jmp
outsl
xlat
jl
pop
insl
jecxz
add
jecxz
add
or
ljmp
pop
push
nop
adc
clc
adc
mov
call
sub
outsb
xor
aas
pop
jbe
fwait
js
cwtl
stc
inc
in
ljmpw
add
jle
lock
mov
or
icebp
mov
fucomi
push
pop
call
adc
jmp
shll
mov
inc
inc
inc
jmp
outsl
pop
das
cmp
pop
jb
adc
cltd
mov
ja
cmp
jne
xor
add
mov
scas
cmp
jmp
or
add
adc
sub
and
add
mov
subl
dec
cld
pop
jb
js
cmp
mov
sbb
imul
fcoms
jbe
std
push
sub
adc
ss
add
sub
or
es
lret
testb
clc
and
negb
and
pusha
jp
adc
in
pop
cmp
fucomip
enter
cmp
jge
xor
lsl
push
jo
adc
fdivs
pop
or
movl
mov
call
out
sbb
or
or
cmpl
insb
xor
adc
add
test
add
add
stc
xorb
adc
bswap
aas
int3
jl
add
js
add
rolb
adc
das
push
inc
int3
or
lock
sbb
sub
dec
jle
int3
mov
add
cmp
fwait
dec
push
xor
cmp
push
fdivr
pop
dec
adc
and
ljmp
mov
push
push
mov
inc
ss
push
pop
jmp
movd
mov
sbb
roll
shrl
repnz
or
adc
adc
shr
add
add
mov
jbe
add
ret
rorb
mov
xor
lret
and
outsl
rcr
testb
or
in
je
and
int3
mov
fwait
stos
jb
dec
aaa
push
jmp
adc
mov
enter
pop
sub
xor
cs
loop
or
mov
mov
cmpsb
sub
pop
inc
idiv
adc
push
loope
call
inc
pop
andb
mov
or
hlt
add
add
add
cmp
je
cld
inc
or
xor
adc
add
dec
pop
repnz
movsb
outsb
cld
cmp
adc
push
push
inc
adcb
fcoml
add
ljmp
outsb
mov
adc
adc
inc
dec
or
inc
mov
pop
outsb
fimull
into
and
int
clc
fs
ja
xor
frstor
mov
cmp
es
sub
or
outsb
or
icebp
mov
insl
push
ljmp
add
inc
andl
or
jmp
sub
and
or
imul
mov
add
push
add
jle
test
icebp
inc
jge
lock
mov
shr
aad
push
cmp
loopne
cmp
jae
incl
xchg
pop
jo
lret
shr
add
stos
leave
icebp
inc
push
dec
add
mov
clc
fbld
dec
push
pop
jne
adc
lods
ss
sbb
rorb
sub
add
loop
or
adc
or
clc
roll
fdivl
nop
sub
cmc
mov
je
cs
inc
ds
lcall
jno
cwtl
cmp
mov
outsl
inc
clc
mov
not
and
push
jl
and
or
add
xchg
xchg
clc
lea
mov
shr
mov
or
add
push
repnz
not
and
clc
fcmovnu
sub
testl
mov
arpl
rcr
fldl
push
js
repnz
aam
jge
fisttpl
inc
fisubs
fimull
add
sti
lret
jg
lea
shr
shl
push
pop
inc
fstpl
outsl
sub
mov
and
not
cmp
add
aaa
xlat
psllq
mov
shr
mov
sti
or
repz
dec
daa
pop
jg
push
add
xchg
sbb
mov
push
lods
lret
pop
adcl
jle
hlt
mov
mov
popa
sti
not
and
sub
and
pop
mov
das
adc
movb
jecxz
or
push
jns
add
pop
fiaddl
outsl
popa
xlat
or
mov
adc
xor
fisubl
fistps
or
les
sbbl
int3
sub
xchg
inc
std
sbb
add
or
test
xor
add
sbb
cs
out
adc
jne
les
repz
fdiv
repnz
fcomps
addl
repz
mull
xchg
rcr
das
pusha
adc
fdivl
jbe
pop
scas
testl
sbb
les
subb
add
pop
iret
repnz
add
subl
sub
fcom
add
cmp
fdivrs
pop
dec
inc
imul
xlat
mov
sbb
les
adc
sub
and
xor
or
or
insb
xchg
xchg
jno
std
stos
lods
es
pop
push
fdivrs
push
cld
and
fidivrs
outsb
adc
add
aaa
das
push
mov
cmpsb
add
fmull
pop
mov
xor
push
aad
or
cmp
mov
fiadds
or
popa
adc
add
or
pop
mov
mov
ret
mov
sarl
mov
bound
mov
popa
sbb
add
and
jg
pop
sbb
inc
mov
rcrb
push
fadds
hlt
push
and
mov
jb
repz
pop
pop
es
adc
rcl
push
repnz
shrl
or
movsb
and
fstps
jmp
lock
imul
insl
icebp
imull
mov
out
aaa
pop
adc
call
xlat
lods
mov
adc
xchg
mov
shlb
jge
repz
adc
add
iret
outsl
fistpl
fimull
out
fcoms
mov
cmp
mov
jle
jae
fnstcw
out
adc
leave
test
mov
insb
fstp
mov
mov
out
loope
out
sbb
loopne
jle
lcall
add
pop
aaa
scas
jne
insl
or
mov
push
fbstp
inc
fimuls
xchg
mov
adc
adc
sbb
call
int
inc
loop
shr
or
xlat
in
int
fdivs
test
rcrb
clc
ret
cmc
out
out
cld
cld
not
lcall
flds
outsl
addr16
int
adc
movl
cmpsb
dec
fisttps
sub
adc
or
xor
test
mov
pusha
sbb
test
and
cli
mov
xor
lcall
js
repnz
popa
popf
insl
adc
mov
sti
xor
mov
repnz
or
in
mov
call
in
inc
xchg
in
mov
inc
push
sbb
xchg
fisubrl
xchg
mov
fimuls
cltd
pop
sub
fmuls
jecxz
int3
pop
pusha
dec
mov
cli
jle
pop
pop
xor
push
jo
mov
push
mov
or
mov
pop
jl
jo
jle
sub
jae
ret
inc
mov
rcrb
lock
daa
mov
jno
mov
fidivl
cmc
test
shrl
out
sub
xor
js
pop
out
mov
in
cmp
or
push
pop
loope
lods
aas
sbb
cmp
rcl
fstps
into
sub
push
in
out
in
mov
ss
sub
jns
in
clc
jl
pop
je
ret
xlat
insb
cmp
xor
in
jnp
push
lods
les
cli
xchg
subl
jp
fstpt
inc
and
stos
rcrb
sbb
push
or
test
call
jl
inc
int3
or
push
xchg
ljmp
inc
push
or
aaa
es
mov
stos
adc
mov
lock
mov
in
hlt
cmp
adc
xor
aas
xchg
in
cmp
cmp
pop
pop
gs
sbb
jns
sub
rcrl
int3
or
push
or
ja
in
and
jge,pt
out
call
int
mov
unpckhps
sbb
and
test
pop
test
dec
mov
jg
call
outsl
push
mov
fninit
push
jp
sbb
int
das
mov
sbb
out
jecxz
je
mov
cmp
mov
ljmp
fdivl
mov
adc
dec
mov
lds
jp
xlat
sbb
mov
mov
xor
out
loopne
outsl
xchg
sbb
xor
aam
rcl
sub
jb
cmp
pslld
ret
repz
mov
insb
pop
rclb
xor
jmp
xor
out
xlat
pop
add
pop
movsb
mov
xlat
insl
mov
inc
or
or
and
mov
mov
js
cmp
mov
mov
inc
xchg
jl
js
rcrl
push
push
add
dec
call
daa
hlt
ss
xor
inc
insb
js
adc
inc
inc
insb
xlat
pop
fisubrl
insl
push
push
lahf
inc
pop
inc
adc
push
iret
pop
pop
mov
mov
xchg
outsl
sti
mov
adc
adc
add
sbb
shlb
je
cmp
jne
xchg
sbb
or
mov
pop
adcb
pushf
push
xor
mov
mov
pop
pop
cmp
movsl
mov
call
sub
js
aaa
mov
inc
add
and
mov
sbb
out
or
testb
mov
mov
popf
lea
or
adc
cmp
xchg
int3
insl
neg
push
push
push
test
mov
xlat
mov
add
pop
add
inc
shlb
pop
cmp
xor
jge
push
xor
push
pop
or
in
call
xor
xchg
data16
or
or
jb
push
sbb
dec
int3
arpl
xchg
fiaddl
push
cmp
mov
mov
mov
hlt
xchg
hlt
mov
outsl
scas
jno
in
call
mov
imul
mov
shrb
add
aam
fsubs
das
fsubrl
int3
repz
fidivs
loopne
loop
in
outsl
ret
scas
cmp
jnp
fwait
sti
test
mov
call
test
pusha
std
sub
test
dec
call
les
ret
icebp
adc
mov
mov
enter
enter
js
pop
push
push
xchg
mov
push
jnp
or
cmp
out
jne
test
cwtl
dec
or
mov
int3
call
inc
in
pop
xor
lock
ret
xor
or
mov
rorl
adc
insb
mov
dec
idiv
lahf
int3
cmp
int3
out
inc
adc
pusha
mov
lret
repnz
setge
cld
das
cmp
push
mov
sub
push
lcall
mov
or
fcoms
adc
or
je
les
mov
and
pushf
test
loope
and
and
add
jge
adc
push
iret
idivb
sbb
adc
cmp
mov
jmp
outsl
aas
mov
cmp
je
dec
dec
cmpw
jne
pop
mov
arpl
inc
add
cmp
add
pop
sub
push
and
in
pusha
inc
ds
cmovs
lcallw
mov
outsl
xchg
fistpl
cmovno
ljmp
add
addl
pop
inc
shr
add
mov
je
xchg
cmp
testb
jl
mov
cmp
je
cmp
jne
push
insl
int
mull
pop
cmpsl
push
outsl
shr
add
jmp
mov
mov
stos
push
enter
mov
daa
idivb
sub
push
or
mov
enter
xor
das
sub
cs
data16
adc
outsl
inc
test
cmp
fnstsw
pop
jg
ret
adc
mov
mov
mov
mov
push
sbb
std
movsl
jp
popa
mov
mov
stos
inc
bound
push
nop
xlat
fcoml
mov
cmp
int
and
pop
sbb
or
outsb
mov
sbb
in
je
fimuls
pop
cmp
xchg
sti
sbb
arpl
dec
mov
sub
fistps
add
xor
test
mov
das
push
fninit
ss
std
and
mulb
insl
xor
loop
lods
int
loopne
gs
clc
clc
cmp
push
in
sbb
mov
or
rcrl
mov
movsl
jno
cmp
mov
mov
fisubrl
scas
or
ss
jle
jge
mov
jo
push
push
lea
mov
flds
clc
or
pop
mov
data16
je
cmp
sbb
data16
hlt
pop
call
call
mov
pop
test
cmpb
sti
repz
inc
je
jmp
pop
mov
idiv
xchg
adc
or
pop
dec
mov
in
lret
mov
std
push
mov
leave
inc
mov
fwait
cmpb
mov
push
push
js
popf
test
arpl
inc
push
inc
mov
pushf
inc
sbb
jbe
insb
pusha
je
lods
lods
push
xchg
lret
in
insl
mov
mov
mov
mov
in
mov
push
mov
mov
mov
xchg
lret
mov
mov
lods
sub
mov
dec
xchg
gs
xchg
gs
insb
outsl
jb
mov
pop
gs
and
fidivl
gs
dec
dec
test
mov
mov
loop
jecxz
pop
in
push
out
dec
mov
fwait
in
inc
call
mov
insl
in
jae
out
out
sub
icebp
mov
je
repz
dec
fdivl
dec
ret
rol
add
xor
xor
mov
enter
mov
xchg
insl
lret
cmp
int3
hlt
cmc
call
shlb
idiv
mov
movsb
sbb
stc
fidivs
dec
adc
xor
add
test
mov
add
rol
pop
push
mov
loopne
mov
mov
ds
jmp
xchg
mov
gs
lret
mov
dec
dec
rcr
cmp
cmpsb
inc
lcall
lahf
fsubs
movsb
jnp
movsb
cmpl
jg
inc
std
sti
lea
rcl
pop
push
inc
leave
enter
sti
dec
rcrl
pop
repnz
shl
scas
dec
mov
and
cli
arpl
outsb
dec
outsb
xchg
ret
fistl
test
test
pusha
inc
mov
insb
aaa
sub
jmp
sbb
js
jnp
mov
dec
cs
test
xchg
fstps
or
cmp
movsl
ret
add
dec
mov
inc
test
hlt
cld
add
cmc
insl
sub
std
sbb
popa
add
sahf
or
ja
dec
sub
int3
stos
pop
cmp
fsub
hlt
cltd
loope
dec
dec
fcomps
adc
or
les
imul
mov
sub
aaa
jmp
fildll
testb
les
mov
and
add
adc
das
aam
inc
or
out
decb
es
lret
mov
sub
pop
in
pusha
sub
sbb
adc
cmp
imul
fdivr
mov
inc
adc
jns
fsubrp
test
cmpl
ficoms
jmp
repnz
sbb
rclb
addr16
xor
sbbb
cmp
jl
sbb
call
ret
sub
stc
outsb
jne
mov
ficoms
movl
popa
fnstsw
int3
xchg
jmp
or
in
and
cmpw
sub
cli
cmpsb
fstps
sti
mov
pop
adc
clc
ds
xor
adc
cmp
cmp
mov
push
sub
shlb
dec
push
add
cmp
adc
pop
fstl
adc
out
mov
mov
test
cmp
push
sub
pop
mull
cmp
jae
dec
lcall
in
fdivs
fsubr
or
mov
push
xor
cmp
call
xor
and
mov
push
test
in
js
call
andb
add
adc
pop
jb
cs
andl
les
hlt
out
sbb
test
mov
jmp
jge
fistpl
test
mov
adc
insb
mov
sbb
adc
and
add
fs
add
idivb
add
je
movsb
xor
sbb
cmp
push
mulb
cmp
cli
mov
sbb
inc
js
push
lds
in
insb
xchg
sbb
filds
mov
adc
mov
add
insb
dec
xor
cmp
movl
jne
sbb
mov
xlat
aam
mov
imul
andb
aam
cs
imul
js
xor
xchg
pop
lods
sbb
jne
or
push
fwait
cmp
push
or
fmuls
or
push
call
mov
rol
xchg
xchg
scas
push
push
sub
insl
mov
add
add
outsl
dec
addr16
imul
sbb
imul
add
shlb
jmp
adc
mov
ja
cmp
push
mov
sbbl
stos
push
iret
lea
and
loopne
fnstcw
out
cwtl
jl
add
lcall
orl
dec
jle
into
iret
add
mov
add
das
je
shrb
mov
sti
data16
mov
or
push
dec
test
cld
and
imul
push
push
pop
sub
pop
movups
adc
fmull
je
idivl
pop
sub
cmp
shlb
xchg
std
andb
out
addb
mov
lret
push
cmp
sbb
xor
adc
mov
subb
push
inc
mov
cmp
pop
stc
dec
cwtl
es
dec
in
inc
dec
dec
clc
std
dec
cmpsl
cmp
ficomps
xor
aaa
adc
sbb
sub
and
loopne
xor
mov
adc
lds
and
and
push
jecxz
inc
pop
jo
mov
fwait
inc
addb
popf
pusha
mov
dec
call
push
cmp
sub
cmp
lock
jo
dec
test
pushf
mov
nop
push
sbb
fbstp
pop
out
movsb
lahf
jmp
ss
cmp
inc
push
cmp
fs
loop
aaa
jno
push
ret
sbb
sbb
add
push
sbb
jmp
lret
roll
sbb
iret
xchg
mov
pop
mov
sbb
push
call
and
push
mov
push
add
pop
mov
insb
cmpsb
iret
imulb
rep
or
mov
mov
pop
add
call
adc
loope,pt
inc
mov
test
adc
dec
jnp
and
mov
in
cmp
inc
fwait
scas
les
clc
aam
lret
ss
xor
push
sbb
js
adc
insb
sarl
je
out
cmp
in
cmp
int
push
pop
pop
push
cmp
and
sbb
and
push
xchg
mov
push
cmc
in
or
mov
adc
xchg
shlb
scas
jmp
mov
lock
inc
out
and
sub
cld
sub
cmp
mov
cmp
nop
popf
sti
pop
pop
mov
and
mov
pop
sbb
sbb
sbb
mov
xor
es
ds
fisubrs
push
jnp
je
and
xchg
mov
les
push
xor
mov
imul
cmc
insl
insl
lret
mov
xchg
outsb
fs
insb
lret
mov
adc
dec
insl
insl
dec
add
mov
outsb
jae
popa
mov
lret
mov
insb
insb
dec
dec
inc
cltd
das
dec
les
mov
js
lahf
rorb
nop
loopne
dec
sub
lret
mov
insl
inc
je
dec
ja
mov
inc
insb
cwtl
gs
add
xor
insl
sub
ret
dec
mov
xor
mov
call
lret
loopne
or
les
lahf
cmp
lea
jl
cmp
cs
ret
aaa
dec
sbb
jecxz
sbb
xorl
fwait
sti
pop
push
add
push
addr16
insl
les
out
jge
shrb
mov
mov
pop
sbb
ljmp
push
jne
mov
jb
rorb
inc
stc
cmc
daa
mov
xchg
test
cmp
sar
mov
incb
sbb
hlt
out
sbb
mov
stc
sbb
stc
or
jnp
push
mov
push
pop
cmp
jo
sbb
fldl
pop
cmp
and
in
push
push
pop
push
pusha
cmp
sub
test
nop
lock
call
push
mov
push
and
je
push
push
add
imul
sub
add
test
mov
add
jne
hlt
push
mov
setge
dec
sbb
rorl
nop
out
test
push
test
or
mov
les
fdivrs
iret
xor
add
mov
adc
mov
xor
wbinvd
push
lods
jge
adc
add
in
sbb
lods
mov
clc
xchg
sub
mov
add
rcl
fcomp
fiadds
pop
in
call
dec
enter
adcl
mov
je
xor
mov
test
inc
subl
mov
insb
imulb
or
das
add
xchg
pop
fwait
adc
lods
mov
push
pop
mov
xor
jp
jb
push
test
pop
int
test
jnp
xor
adc
inc
mov
pop
jnp
mov
cltd
mov
testl
jle
pop
hlt
cmp
and
enter
in
xor
add
sub
and
or
sub
pop
push
dec
lock
sbb
inc
mov
jne
sbb
push
xorl
int
dec
sub
push
xor
mov
pop
mov
dec
sub
mov
inc
push
cs
inc
lcall
xchg
gs
mov
insb
jne
js,pn
gs
fs
insb
jg
fwait
lods
cmp
popf
outsb
cmc
sahf
pop
mov
ss
gs
jb
mov
pop
jbe
movsb
push
movsl
cmpsb
pop
cmpsl
push
mov
sbb
pop
test
lods
gs
pop
shrb
lret
mov
lret
jo
jo
outsb
push
lds
inc
xor
mov
fwait
shrb
roll
aam
mov
dec
rorl
lea
mov
es
lcall
xchg
xchg
xchg
lcall
push
cwtl
js
lcall
fcmovu
fcompl
dec
pop
fwait
scas
fstl
fists
gs
dec
shll
imul
xlat
xor
mov
or
xlat
xor
mov
arpl
pop
push
arpl
jge
push
or
xor
mov
adc
mov
jns
mov
std
std
arpl
xchg
adc
xor
jp
mov
adc
mov
push
shl
jne
outsb
push
mov
loopne
cmp
pusha
cmp
pop
mov
je
ret
mov
jmp
push
pop
inc
push
rorl
xchg
gs
mov
pop
je
jbe
xor
push
cltd
outsb
iret
lods
lock
je
add
sub
mov
cli
or
cmp
movsb
or
repz
sbb
or
sbb
ja
push
mov
pusha
jo
push
push
popa
add
add
pop
pusha
pusha
cmp
push
arpl
hlt
sub
or
or
push
rcll
sti
push
cwtl
and
mov
add
lods
mov
mov
dec
addr16
or
insb
mov
sahf
push
in
jmp
ffree
call
or
xchg
pop
or
mov
outsl
fistl
inc
cmp
jb
inc
incl
ja
movb
add
mov
mov
hlt
sub
inc
shll
xor
pop
cs
int
in
cs
fs
pop
jmp
jbe
pushf
insb
adc
leave
push
lahf
insw
jne
enter
or
rcrb
or
sarb
mov
jbe
leave
popa
mov
call
int
jge
or
movsl
mov
and
cmp
push
fcmove
int3
push
mov
add
pusha
cmpb
xlat
leave
and
inc
popa
jmp
mov
iret
sbb
sub
mov
call
sti
or
xor
mov
clc
xchg
mov
push
jne
jb
and
push
movsb
sti
ret
push
push
sbb
dec
popa
lcall
pop
sbb
xor
or
and
mov
xchg
bnd
and
dec
pop
nop
loopne
aas
push
imul
je
lcall
jo
jae
andl
imul
cmpsb
imul
add
stos
testb
and
jp
cmp
add
inc
popf
xchg
stos
cmp
xlat
inc
int3
pop
ljmp
and
aas
arpl
je
xor
rorl
cmp
xor
shll
jae
jne
add
cld
lcall
aas
pop
sbb
in
mov
fldl
decl
in
movsb
add
shrl
sahf
daa
lds
mov
jne
fcomps
rolb
test
cld
std
sbb
mulb
cmp
pop
mov
iret
xchg
and
lock
xor
xchg
inc
sbb
ret
int3
pop
aas
and
insb
or
int3
sub
or
das
sub
dec
shll
enter
je
outsl
and
xor
imul
cmp
add
and
call
loopne
in
dec
ror
in
je
cmpl
inc
jbe
pop
push
or
or
test
das
ja
xchg
sahf
inc
jp
mov
lea
jg
stos
stos
imul
jo
mov
jnp
pop
jno
jmp
hlt
add
int3
inc
rcrb
sbb
xchg
and
pop
push
cmp
jns
cmp
xor
sarb
mov
fs
jge
mov
inc
pop
adcb
push
xadd
ljmp
icebp
or
pushl
cmp
mov
sub
jmp
movsl
push
and
dec
rcrb
aam
push
lcall
movb
rcrl
loopne
adc
inc
mov
cmp
jl
inc
adc
dec
push
xor
gs
mov
fmull
cld
adc
mov
inc
enter
fdivrl
mov
fistpll
or
das
add
std
add
fidivs
adc
es
call
inc
jl
cld
stos
clc
xchg
mov
and
or
std
cwtl
inc
lcall
dec
cltd
lcall
popf
sahf
lahf
mov
mov
jb
movsl
jne
jb
cmpsb
imul
xor
rcl
pop
stos
dec
lods
lods
scas
scas
imul
mov
cmpsb
imul
in
lcall
rol
ret
imul
lcall
lret
int3
pop
xchg
or
jae
popa
cmp
arpl
lret
lcall
je
imul
add
fwait
testb
pop
out
data16
dec
shll
jp
outsb
dec
fsubl
push
std
and
dec
mov
pop
adc
add
dec
jne
or
jmp
enter
push
shr
sbb
jmp
xor
xchg
dec
pop
cwtl
xchg
aad
movsb
pop
nop
adc
shll
aam
xor
sbb
fdivp
jne
call
negl
push
or
xchg
call
sbb
jl
xchg
js
sbb
ss
cwtl
and
sub
jns
and
out
cli
les
mov
arpl
shll
sub
addr16
jo
andl
pop
imul
cmp
mov
bnd
add
sbb
scas
leave
inc
daa
xchg
lods
and
or
testb
ss
lcall
clc
popa
imul
popa
arpl
or
popa
jb
xchg
gs
fdivs
sub
mov
call
jmp
pop
in
je
out
jns
out
sbb
pop
cmp
push
xchg
jb
lock
pop
pop
daa
jo
push
cmpsl
push
pop
lea
and
push
xor
and
lock
inc
mov
imul
sbb
scas
enter
cmp
mov
insl
call
adc
fs
and
imul
sti
cmpsl
dec
jge
sub
mov
in
mov
or
and
push
in
push
clc
mov
and
jne
push
insb
add
xor
sbb
in
psubb
pop
or
mov
fidivs
add
sarb
jl,pn
pop
jb
das
add
jl
mov
add
out
loopne
adc
add
cli
cmpsl
jge
mov
stos
jb
push
sbb
jle
push
push
and
fmull
test
inc
into
aad
push
push
ja
scas
mov
call
out
dec
inc
adc
ret
mov
ror
and
rcrb
inc
or
mov
bound
loope
push
inc
pop
push
sbb
in
fadd
lcall
push
in
test
mov
cmp
xchg
xchg
out
call
xchg
test
mov
cltd
xchg
xchg
in
in
out
jne
jmp
jae
ds
sbb
xchg
popfw
addr16
je
xchg
arpl
outsl
mov
cld
cmp
enter
cld
movsl
cld
cmpsb
cld
jns
out
push
cmpsl
cld
stos
loopne
paddsb
sbb
cmp
lods
jmp
xchg
adc
jmp
in
ret
popf
cwtl
lea
mov
lcall
pop
xor
bound
dec
fsubp
mov
call
xchg
push
lock
shl
xchg
fildll
or
ror
std
jmp
jnp
cld
sbb
movq
lds
inc
aad
push
ficompl
mov
adc
mov
adc
lahf
cs
int3
push
fwait
clc
mov
pop
popf
call
cmp
jg
push
nop
and
lock
call
sbb
ficoms
fdivrl
push
mov
call
sub
dec
ljmp
fisttpl
test
mov
and
push
loopne
das
hlt
movsb
push
push
push
movsb
call
jmp
mov
andl
add
cmp
jge
mov
cmp
push
push
push
imul
ds
cmp
out
imul
or
imul
imul
sub
push
push
inc
pop
inc
cs
add
push
lock
dec
cmp
pmuludq
mov
jnp
iret
call
mov
rcl
pop
mov
outsb
dec
test
push
les
pop
pop
repnz
gs
adc
jae
sbb
into
mov
lock
adc
push
or
adc
xchg
and
xor
add
cmp
or
clc
add
ret
enter
insl
je
movsl
call
mov
movsl
push
movsw
and
mov
dec
jo
cmpsl
iret
dec
push
pop
sbb
clc
or
mov
iret
or
pop
or
lcall
push
mov
push
sarb
or
inc
mov
add
mov
mov
icebp
addb
lret
jb
xchg
repz
mov
loop
cmp
jnp
popf
push
push
and
jp
mov
sbb
cmp
add
dec
and
xor
fsubs
and
xor
or
add
sbb
pop
out
cmp
jnp
push
mov
push
idivb
cmpl
jbe
jl
mov
and
mov
push
stc
push
mov
sbb
sbb
xchg
cmpsb
fwait
or
adc
and
push
push
mov
test
add
push
std
into
mov
sub
pop
push
and
je
faddl
push
cmp
or
js
add
shll
stos
xor
mov
scas
push
push
faddl
mov
daa
mov
push
fnstenv
bound
xor
insb
scas
out
pop
je
orb
pop
xchg
mov
std
popa
dec
popa
jo
xchg
xor
cmp
mov
mov
es
mov
outsb
mov
nop
pop
mov
leave
mov
inc
cmp
adc
repz
and
imul
pop
xor
aaa
push
cli
adc
stos
mov
pusha
testl
outsb
je
xor
loopne
pop
addr16
add
shrb
xchg
daa
jo
imul
xor
mov
repz
fmuls
cwtl
sub
mov
bound
testb
insb
ret
inc
push
test
test
add
adc
push
cmp
sbb
xor
pop
jmp
mov
jae
dec
jbe
sub
adc
decb
call
inc
adc
inc
lods
push
mov
dec
mov
mov
inc
jmp
add
cmp
jo
jno
pop
jo
sbb
outsb
insl
insb
sub
mov
pushf
cmp
push
femms
and
test
addl
lret
inc
sbb
push
outsb
and
sub
mov
push
push
daa
lret
mov
cs
mov
shll
fs
lret
adc
xor
je
gs
sub
sub
outsw
loopew
mov
jmp
lds
fs
inc
push
xchg
xchg
xchg
adc
dec
mov
in
xor
stos
or
sbb
inc
xchg
push
xchg
or
dec
pusha
pushf
sub
mov
inc
ja
mov
mov
jo
xchg
mov
and
and
push
and
rorl
popf
repnz
add
xlat
sahf
cmp
inc
sub
jl
xor
fsubl
and
pop
loope
imul
mov
mov
mov
dec
lods
and
rcll
pushf
mov
and
sub
mov
push
sub
inc
push
sub
adc
mov
mov
ficomps
mov
and
adc
inc
out
data16
lds
adc
xchg
out
fwait
inc
inc
and
inc
or
test
iret
and
call
sbb
ja
adc
ljmp
dec
cld
test
sub
lret
in
cmp
jae
es
stos
adc
fdivs
mov
jo
pop
xchg
test
cmp
gs
xchg
jb
and
xchg
gs
cmp
cmp
bound
lcall
bound
inc
es
ljmp
imul
dec
je
cmpsb
and
sub
or
jne
outsb
xor
xlat
jb
and
mov
roll
lret
mov
lret
es
and
mov
jae
inc
inc
stos
dec
hlt
sub
scas
in
xchg
add
in
mov
push
or
es
and
pop
mov
adc
shlb
pop
adc
and
cmp
and
xor
ja
lea
ds
int3
xor
and
pop
lea
ja
push
push
jne
rol
aam
jo
sbb
dec
cmpb
int3
sub
inc
jge
jb
dec
sahf
shll
rorl
mov
inc
or
mov
aas
jge
push
fmull
aam
testb
pop
and
push
inc
outsl
fwait
adc
or
push
push
mov
sub
push
dec
lahf
adc
xlat
cli
dec
andb
out
adc
cmp
xchg
movsl
pusha
pop
mov
or
push
ret
dec
jmp
pop
fbstp
sub
scas
les
mov
cld
inc
cltd
pushf
mov
push
or
sbb
inc
das
mov
arpl
dec
mov
lea
cltd
in
dec
push
inc
pop
insb
test
je
and
add
testb
jne
push
push
lret
jl
std
ret
inc
add
and
or
push
fwait
pop
push
imul
or
and
jnp
addr16
push
sbb
push
mov
test
fcmovbe
lea
mov
push
out
aam
test
lock
lea
cmp
es
mov
or
add
mov
and
xor
int
mov
adc
out
or
and
sub
dec
dec
lret
pushl
cmp
jl
add
jg
mov
cmp
jl
aaa
inc
cmp
idivb
inc
inc
incl
jl
xchg
daa
mov
xor
push
jo
loopne
loop
das
cmp
fmuls
pop
ja
adcl
imul
add
subb
sbb
sbb
mov
pop
cld
loopne
xchg
das
loop
mov
or
jns
in
sbb
nop
pusha
adcb
or
or
push
mov
mov
mov
roll
inc
inc
xor
cmpw
les
dec
cmp
cmp
mov
addr16
cmp
cmpl
push
mov
movb
inc
js
je
mov
add
cmpl
sbb
jb
or
imul
push
fimuls
in
sbb
repnz
add
mov
inc
jo
mov
dec
jmp
inc
dec
sbb
jb
adc
inc
xlat
sbb
xor
es
or
roll
pop
adcl
or
ret
add
movl
fisttpl
mov
sub
mov
lods
enter
jge
mov
lahf
add
je
xlat
mov
adc
fistpll
jno
shr
jle
movzwl
mov
jne
lea
out
movl
ljmp
add
jmp
cmp
jne
pop
cmp
mov
lock
jne
or
sub
fildl
mov
call
jo
pop
cmp
xchg
xor
outsb
adc
mov
dec
push
hlt
outsl
rolb
add
dec
add
insl
or
add
push
push
add
push
repz
mov
pop
leave
pushl
jno
push
dec
xor
shll
dec
je
adc
loop
subb
inc
adc
iret
iret
negb
test
das
je
and
mov
pushl
add
push
scas
test
sar
add
call
push
mov
subb
loope
stos
and
lock
push
mov
xlat
or
addr16
sbb
cli
xor
lea
jbe
adc
pop
jmp
in
std
popa
adc
mov
hlt
lret
cmpl
sbbb
mov
jne
mov
les
push
idiv
xor
adc
jge
daa
subb
cld
lods
xor
jno
lea
mov
mov
fwait
add
push
int
mov
dec
mov
icebp
mov
xchg
inc
cmp
testb
je
pop
adc
sub
or
sbb
adc
es
pop
pop
sti
sbb
daa
lds
pop
xor
out
enter
push
adc
mov
push
mov
mov
decl
nop
and
mov
push
sub
mov
dec
ret
jne
nop
sbb
dec
or
pop
in
jmp
and
cmp
xor
sub
mov
jo
jb
and
dec
push
int3
js,pn
xchg
stos
lods
stos
push
pop
or
ljmp
pop
push
cwtl
rol
into
mov
push
call
imul
test
inc
mov
movsl
dec
rep
pop
mov
or
ss
sbbl
ltr
jns
dec
ret
and
xor
call
jo
divl
pop
mov
jno
daa
and
or
or
inc
xchg
cmp
dec
or
add
pop
xchg
gs
xchg
outsw
outsb
je
pop
jae
xchg
and
mov
outsb
xor
fnsave
mov
into
insb
adc
subl
and
loopne
xchg
sub
movsb
pop
movsb
add
imul
push
jmp
sti
jne
mov
push
call
push
pop
ja
negl
jl
jecxz
cmp
xchg
out
pusha
xor
xchg
push
adc
cmp
cwtl
add
call
sub
sbb
faddl
jo
or
aam
push
das
jbe
arpl
sub
push
mov
mov
push
cmp
pop
ret
data16
add
mov
fcompl
loopne
rorb
xlat
lods
jae
imul
mov
int
adc
cld
push
mov
and
rcrb
and
push
cltd
fadds
xor
je
cmp
hlt
dec
aaa
jnp
push
mov
daa
sub
or
adc
jmp
mov
inc
mov
or
test
inc
andps
movsb
subl
add
or
fmuls
push
adc
xchg
fbstp
test
adc
push
outsb
add
ja
inc
xor
push
loopne
push
xchg
aad
lea
sbb
cmp
inc
mov
jl
sub
lods
jnp
pop
xor
cmp
add
inc
ja
sbbl
mov
jg
cmp
stc
mov
ds
xchg
pop
mov
lds
imul
mov
xchg
lret
test
sbb
int3
int
aas
lods
jnp
mov
pop
std
rolb
enter
or
xchg
out
jne
pop
mov
xor
mov
lret
jae
data16
sbb
inc
mov
repz
xor
mov
xor
lcallw
std
dec
data16
or
stos
jne
jnp
mov
js
xchg
jo
sub
fs
add
mov
mov
stos
cmc
inc
movsb
ds
dec
cmc
and
pop
push
nop
mov
and
cmpl
sbb
mov
rclb
sahf
adc
push
int
ljmp
clc
xor
push
notb
sub
cmp
add
xor
test
inc
call
lock
add
les
add
pop
push
dec
jne
stos
fs
js
test
leave
adc
shlb
pop
xor
aam
xchg
mov
rcl
aas
gs
xchg
gs
js
insb
outsl
jb
pop
xchg
gs
gs
mov
dec
ljmp
iret
int
nop
hlt
add
fnstsw
xor
daa
adc
xor
cmp
and
xor
movsb
mov
mov
or
lret
in
sahf
loopne
sbb
mov
sub
rorl
add
and
push
cwtl
adc
pop
pop
push
pushf
add
pop
outsl
lock
mov
test
lret
inc
ds
or
cmp
push
gs
jmp
jmp
nop
je
vaddsd
inc
mov
jb
addb
cmp
jne
dec
sbb
dec
fs
dec
jl,pn
adc
push
sbb
jl
nop
dec
stos
push
outsl
or
inc
leave
sbb
mov
les
sahf
and
jo
js
popa
inc
pusha
dec
jl
and
xorb
dec
dec
aaa
sbb
xor
cmp
lock
out
enter
mov
xor
ds
sahf
xor
clc
xor
xor
inc
jns
test
cmpsl
das
mov
mov
xor
jb
mov
xchg
popf
add
lods
cmp
mov
out
int
or
adc
inc
lcall
jb
inc
loop
decl
and
and
dec
outsb
imul
pop
idivl
inc
jb
arpl
push
gs
ljmp
gs
jbe
pop
add
dec
cltd
and
pop
xor
inc
scas
push
adc
add
push
sar
dec
lahf
push
jb
arpl
jae
fs
lods
mov
push
cmp
fidivrl
xor
push
outsb
popa
jo
push
add
jb
jne
push
jnp
out
and
mov
ljmp
add
inc
insb
hlt
adc
adc
push
jp
lods
or
inc
fs
xchg
jge
imul
packsswb
scas
mov
and
fdivr
fistpl
mov
sbb
sbb
fs
sub
mov
insl
adc
ret
sti
mov
sbb
jb
or
mov
cmc
adc
test
adc
push
mov
dec
and
inc
jns
add
or
popa
sub
push
arpl
mov
mov
into
add
dec
dec
add
or
inc
lods
insl
add
stos
daa
test
push
shll
xchg
gs
nop
jno
push
fisubrs
inc
outsl
jb
outsb
and
push
push
pop
test
outsl
push
lods
lods
loopne
fwait
int3
dec
sbb
push
insb
sub
push
sti
mov
jo
inc
push
mov
ja
inc
sub
pop
ret
shll
cmpsl
rclb
jno
imul
xor
punpcklbw
push
das
fmul
dec
or
imul
push
add
fadds
push
orb
or
and
jg
scas
adc
push
test
sub
popa
fildll
and
xchg
xchg
pop
imul
shll
inc
outsl
mov
dec
cwtl
mov
jo
movsl
mov
and
imul
outsb
aas
ret
pushf
insl
or
shll
sbb
or
xchg
jne
and
arpl
add
imul
imul
push
add
sahf
sbb
leave
pushf
imul
cmp
test
mov
sbbl
dec
push
imul
push
outsb
push
sarl
inc
mov
push
dec
inc
mov
lods
add
jo
je
cmpsl
lods
and
mov
sahf
fisubrl
adc
sbb
sbb
fs
mov
sbb
subl
or
sbb
mov
inc
sub
fmuls
pop
sub
add
sbb
inc
cmp
popa
addr16
pushw
pop
jecxz
jbe
push
sarb
inc
lcall
mov
xor
sbb
add
je
inc
adc
sub
mov
push
sbb
insl
sub
pop
lret
and
int
ficomps
and
aam
sbb
mov
add
sub
fisubrl
xchg
sub
cmc
das
adc
pusha
mov
ret
jne
arpl
mov
pop
sub
imul
and
adc
jnp
cltd
loope
lea
inc
inc
xchg
ficoms
mov
dec
xor
movsl
jmp
fisubrl
push
cltd
jne
mov
arpl
jo
or
outsb
mov
popa
arpl
andb
dec
inc
inc
push
inc
push
into
arpl
add
jmp
insb
fistpl
mov
jne
loope
add
insl
mov
xchg
or
xor
pop
push
pop
xchg
push
int3
xor
xor
pop
cmpsb
scas
pop
push
pop
adc
mov
mov
add
inc
xchg
popa
pushf
xor
fwait
arpl
jecxz
sarb
inc
lds
out
imul
out
ret
outsb
sub
add
cmc
push
jo
outsl
imul
add
mov
jnp
cmp
xor
aas
xor
jmp
pop
loopew
nopl
fdivl
sbb
push
lea
outsb
cwtl
in
or
mov
jbe
xchg
dec
add
fimuls
ja
dec
push
push
mov
cmp
sbb
push
fsubrs
or
mov
push
imul
inc
ja
push
and
addr16
mov
jecxz
sbb
and
push
cwtl
xor
shll
int3
push
adc
fcoml
sbb
adc
adc
insb
inc
sub
pop
sub
jle
push
push
dec
inc
dec
push
dec
xchg
xlat
pop
int
pop
daa
je
jno
addr16
inc
mov
aad
ror
inc
adc
and
cmpsb
lret
scas
jmp
cmp
cmp
inc
pop
or
xor
flds
push
repnz
adc
in
aad
xor
add
js,pt
test
cld
decl
movsb
ds
mov
mov
ds
fdivrs
idivb
sti
sub
cmp
mov
aas
dec
mov
lock
inc
in
mov
shlb
add
and
xor
pop
xor
xchg
xor
xor
fwait
xor
xor
xor
xor
incl
xor
xor
xor
xor
adc
xor
pushl
js
xchg
repz
lds
out
push
aaa
int
jmp
divl
adc
cmp
cmp
cmp
pop
cmp
ja
mov
lcall
cmp
cmp
cmp
jl
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
pop
cmp
push
mov
fbstp
lret
pop
hlt
add
sbb
test
fdivs
loopne
aaa
cmp
js
mov
cmp
push
cmp
js
mov
cmp
cmp
ljmp
cmp
cmp
cmp
ja
cmc
cmp
cmp
cli
cmp
cmp
cmp
cmp
cmp
call
jecxz,pt
out
ds
aas
dec
aas
push
aas
cltd
aas
movsb
aas
mov
jg
das
pushf
dec
das
add
push
jno
xchg
xor
push
pushl
nop
xor
xor
xor
xor
xor
xor
xor
xor
xor
jmp
xor
jmp
lock
xor
xor
or
aaa
cld
jg
jnp
xchg
mov
scas
xor
xor
xor
xor
xor
xor
or
pop
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
imul
dec
xor
lcall
xor
in
xor
push
ss
pushl
aaa
mov
lcall
aaa
std
aaa
sub
adc
cmp
cmp
clc
call
cmp
cmp
cmp
insl
pop
test
lcall
outsl
sbb
cmp
cmp
cmp
lcall
jmp
cmp
mov
loope
popa
cmp
cmp
cmp
cmp
jae
xchg
cmp
mov
out
cmp
push
jo
xchg
ds
inc
mov
arpl
xor
push
mov
push
xor
dec
xor
xchg
xor
xor
xor
xor
xor
pop
enter
xor
pop
xor
xor
or
xor
out
clc
cmpsl
xor
xor
xor
xor
xor
pop
xlat
xor
xor
jbe
jecxz
xor
fidivl
das
xor
xor
lret
xor
add
or
sbb
and
sub
ds
ss
xorl
outsl
or
ss
xchg
ret
aaa
lret
aaa
sub
cmp
cmp
mov
mov
lock
iret
cmp
cmp
cmp
cmp
cmp
decl
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jmp
or
pop
ds
cs
gs
insb
cld
jg
jnp,pt
movsl
ds
fnstcw
loope
daa
push
pop
cmp
jge
cmp
xor
xor
jmp
mov
nop
xor
pushl
std
pushl
std
xor
xor
xor
xor
arpl
xor
imul
cwtl
mov
cld
pushl
cmpsl
xor
xor
xor
xor
pop
scas
xor
outsl
pushl
popa
xor
mov
enter
xor
xor
xor
xor
add
or
xor
shll
push
jne
cld
pushl
jnp
movsb
ss
ss
and
das
aaa
fs
outsl
aaa
jl
xchg
xchg
add
fnsave
mov
aaa
loope
out
aaa
hlt
aaa
pushl
or
cmp
movsb
cmp
dec
cmp
cmp
test
xchg
cmp
test
ret
and
cmp
cmp
cmp
cmp
sub
cmp
inc
cmp
outsb
cmp
cmp
cmp
loopne
cmp
cmp
xor
aaa
cmp
test
dec
cmp
cmp
addr16
cmp
sub
pushl
and
cmp
insb
cmp
cmp
test
ret
aas
scas
aas
mov
mov
aas
sarb
fdivrs
fidivrs
idivb
nop
and
pushl
pop
xor
xor
jg
test
mov
fwait
xor
xor
fildll
arpl
insb
xor
xor
xor
xor
xor
dec
xor
mov
pushl
or
adc
push
xor
xor
xor
xor
xor
fbstp
fidivs
sbb
jle
lods
ss
shlb
jecxz
sub
cs
xor
aaa
mov
mov
dec
cmp
sti
std
movsl
cmp
xor
stc
lds
add
and
add
scas
mov
cmp
jo
xchg
out
xor
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cli
testb
call
cmp
xor
cmp
cmp
ljmp
jnp
cmpb
ds
ds
ds
ds
ds
jns,pt
cmpl
mov
aas
and
inc
aas
pop
aas
jp
xchg
aas
stos
aas
lret
jg
sbb
push
xor
sub
add
dec
xor
scas
mov
push
cwtl
xor
xchg
mov
mov
xor
mov
pop
add
or
xchg
add
lock
push
sbb
adc
mov
jns
adc
nop
mov
mov
je
mov
pop
shrb
sti
mov
mov
fisttpll
jno
add
or
mov
adc
addl
cmp
rolb
fstps
and
outsl
and
push
mov
lock
mov
add
enter
jb
add
sarl
cmp
mov
push
jb
jb
add
and
pop
mov
nop
and
ja
daa
add
andb
ss
mov
cmpsb
xor
mov
push
jbe
jmp
push
pop
out
xor
xor
out
add
mov
xor
mov
cmpsb
imul
sub
aas
adcb
lcall
mov
cmp
js
push
push
add
mov
jbe
add
aas
jae
add
or
cmpb
in
xorl
xor
adc
push
dec
dec
adc
jg
inc
push
sub
push
push
inc
and
or
push
and
dec
mov
xchg
jb
and
and
push
leave
out
enter
or
dec
and
and
mov
and
push
enter
add
in
repnz
mov
in
jb
and
add
dec
push
and
std
or
or
pop
and
pop
push
cwtl
fldenv
and
in
repnz
and
enter
xor
add
pop
rclb
pushf
and
or
jb
push
and
sahf
dec
sbb
call
cmp
movsl
mov
pop
out
and
imul
push
xor
push
pop
ds
xchg
push
add
add
out
test
pop
and
inc
jno
test
inc
push
inc
inc
fcomps
inc
mov
scas
adc
divl
aaa
pop
add
fistpl
add
pop
js
mov
or
add
adc
les
inc
and
push
or
jge
pop
add
inc
pop
push
int
insl
sbb
push
cmp
adc
sbbb
push
jb
and
push
sub
inc
and
subl
les
stos
or
leave
mov
push
dec
pop
dec
push
adc
xchg
inc
sub
sbb
dec
add
or
add
cltd
in
add
add
jge
call
jg
enter
inc
add
cmp
jl
sahf
inc
mov
mov
call
idiv
mov
rcrl
jnp
mov
addr16
mov
xchg
push
pop
outsw
mov
pop
dec
jne
pop
push
pop
add
das
xchg
and
adc
pop
mov
mov
mov
push
mov
int
mov
outsb
and
arpl
lods
std
push
xor
scas
std
scas
push
mov
mov
push
mov
mov
push
std
mov
mov
mov
stos
pop
add
pop
in
cli
mov
mov
data16
ja
test
xor
fs
lods
cld
jo
mov
scas
arpl
push
mov
mov
js
fldcw
xchg
jo
les
dec
push
add
js
movsl
stos
pop
lods
in
sub
jne
cmp
shll
mov
add
cmp
adc
pop
jl
insb
aaa
repz
rolb
add
push
lea
push
ret
mov
mov
and
addr16
mov
outsl
outsb
outsb
gs
lret
leave
mov
js,pn
sub
mov
xor
popa
jne
sub
mov
arpl
jb
mov
js
add
jno
mov
imul
sarl
mov
lret
insb
outsl
jb
and
xorb
mov
adc
call
in
test
xchg
pop
push
mov
and
je
push
shll
mov
imul
pushf
int3
test
push
pop
mov
push
and
inc
pop
push
sbb
in
push
inc
mov
inc
gs
and
sbb
sbbb
fildl
adc
push
add
out
cmp
sub
adc
sbb
jecxz
or
jnp
mov
xchg
addb
mov
add
fcomp
mov
or
or
mov
xchg
imul
clc
dec
and
mov
add
cmp
cwtl
in
add
sbb
sbb
or
adc
js
push
add
mov
dec
push
imul
dec
mov
pop
add
sub
xor
mov
cmp
sete
add
or
xor
pop
mov
arpl
inc
add
mov
or
or
adc
adc
call
pop
pop
add
rorb
popa
xchg
mov
and
and
repz
and
adc
adc
push
mov
enter
mov
cmp
pop
and
push
add
cmp
mov
enter
sti
add
dec
in
cmp
adc
xchg
insb
lcall
jae
into
fwait
adc
dec
mov
bound
fmull
pop
mov
push
or
add
and
dec
and
adc
sub
cmpsl
xor
sub
nop
mov
xchg
push
or
test
dec
jno
add
inc
jae
repz
mov
xor
stc
mov
fsubrs
mov
push
outsb
jb
and
adc
outsl
js
push
xchg
xor
mov
bound
std
jg
add
imul
xlat
or
icebp
xor
push
add
insl
dec
jae
lods
les
mov
adc
sbb
and
dec
push
lds
vmovlpd
add
or
xchg
aad
adc
add
in
pop
push
ss
push
add
xor
in
cmpsb
mov
mov
xor
xchg
and
insb
pop
inc
jnp
cmp
xchg
roll
fdiv
xor
lcall
cmpsb
sub
cmp
enter
insb
lcall
and
xlat
je
imul
pop
jge
add
leave
add
adc
dec
les
adc
repnz
clc
push
lods
jno
adc
xchg
xorb
dec
dec
les
test
cwtl
mov
add
lds
sbb
dec
rcll
add
sbb
imul
movhlps
cmp
inc
mov
fstpt
mov
push
xlat
adc
enter
jne
or
repz
in
xchg
mov
ret
adcb
xor
jnp
imul
inc
adc
cmpsb
fcoms
xorl
fisubrs
jns
pop
adc
cmp
push
mov
inc
push
sbbb
pop
add
dec
inc
jnp
adc
outsb
dec
lret
stc
add
imul
dec
outsl
sbb
flds
pop
hlt
inc
add
sbb
mov
pop
add
pop
xchg
test
add
dec
les
add
xchg
adc
std
pop
add
add
into
aas
xlat
jne
dec
add
add
sbb
xchg
int
jae
stos
add
pop
or
add
inc
add
addr16
mov
mov
or
fucomp
and
mov
xlat
jne
jecxz
inc
and
xor
pop
movsb
jmp
jae
and
popa
jns
repz
movsl
popa
and
add
xlat
lea
or
jo
imul
ss
push
mov
cld
push
adc
pop
lds
jb
cmp
mov
pop
xor
xor
add
sbbb
mov
popf
xchg
pop
dec
or
ds
popf
addr16
jne
add
dec
adc
xchg
pop
xor
lods
jnp
imul
adc
inc
push
popa
xor
out
pop
fs
or
fwait
or
dec
imul
push
daa
jbe
push
ljmp
fs
and
adc
jne
je
xchg
adc
and
xor
ja
imul
and
push
cwtl
jmp
inc
rorb
add
addb
push
aaa
shlb
lcall
mov
or
adc
xor
push
xchg
xor
xor
pushl
inc
xor
xor
xor
xor
xor
xor
xor
xorb
dec
sti
xor
fs
lea
mov
cmp
inc
aaa
insl
aaa
je
mov
call
aaa
scas
aaa
mov
cmp
outsb
cmp
outsl
add
cli
cmp
les
into
cmp
cmp
ljmp
and
inc
cmp
cmp
cmp
cmp
cmp
cmp
icebp
cmp
jo
xchg
cmp
add
or
cmp
pop
daa
test
adc
lcall
ds
or
xor
push
adc
subb
es
add
or
or
add
push
adc
inc
imul
sbb
dec
inc
sbb
pusha
fldcw
dec
outsl
data16
add
inc
jo
add
add
roll
roll
add
pop
sbb
pusha
mov
testb
adc
nop
or
inc
jo
add
mov
sub
add
xchg
xor
add
sub
add
add
sbb
loope
mov
inc
adc
and
dec
add
or
insb
add
add
stos
into
stos
rorl
jns
adc
adc
push
out
adc
dec
rorb
int
mov
sbb
fistpl
mov
sub
add
pop
call
add
push
test
movsb
push
inc
add
add
pop
mov
add
and
push
adcb
nop
mov
sbb
jmp
rcrb
sub
push
cmp
pop
nop
sbb
xchg
mov
push
inc
je
cmp
ret
inc
out
ds
inc
add
xchg
repnz
add
add
add
or
incl
add
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
