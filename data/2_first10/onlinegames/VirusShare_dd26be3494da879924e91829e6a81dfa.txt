idiv
call
in
sub
push
push
push
push
xor
pop
xor
lea
mov
in
aaa
adc
stos
stos
stos
adc
repnz
mov
adc
mov
out
or
pop
adc
mov
jae
sbb
push
call
push
fildll
int3
cld
push
and
leave
push
cmp
push
in
in
addr16
sbb
and
xor
xor
pop
adcb
push
cmp
and
adc
inc
and
clc
sub
push
popa
lret
es
pop
and
and
notl
inc
mov
insl
gs
adc
pushf
add
fistl
push
push
inc
and
outsl
mov
add
add
shr
mov
lea
ret
push
fcomp
push
xor
or
rorb
lods
cmp
mov
inc
in
movb
push
add
jo
cli
gs
outsb
mov
insl
mov
outsb
push
in
jae
in
push
mov
icebp
xor
repnz
cs
fs
imulb
dec
mov
jge
xor
fcoml
loopne
lea
lret
data16
pusha
loop
sbb
in
in
fldt
jne
out
out
inc
inc
jmp
incl
mov
pop
push
push
lea
push
stc
rcrb
movsb
jp
add
mov
in
mov
jbe
sbb
stos
dec
push
stos
gs
lcall
in
lcall
mov
sbb
mov
mov
mov
pop
xlat
mov
rol
inc
scas
jmp
retw
ljmp
sbb
leave
lret
dec
scas
jmp
xchg
pop
rolb
shl
fwait
scas
jmp
aam
aad
add
inc
fcomp
inc
mov
fisubrl
fcoml
fnstsw
cli
xor
rcrl
jecxz
call
or
sbb
insb
negb
call
push
mov
pop
adc
dec
push
adc
ss
pop
fsub
adc
push
icebp
fbstp
pop
dec
pop
test
je
push
xlat
aaa
jmp
mov
cmp
pop
outsb
insb
adc
mov
movl
call
test
je
pop
mov
jne
fucomp
push
fildl
pop
cmp
and
lcall
arpl
or
mov
scas
outsl
std
pop
pop
pop
leave
ret
inc
adcl
pop
sbb
push
test
pop
lods
das
dec
sbb
outsb
insb
lock
outsb
fwait
data16
xlat
fsubrs
adc
fisubl
dec
mov
fldt
dec
jo
imul
outsl
arpl
jmp
push
inc
insb
dec
xor
and
popa
outsb
fdivl
cs
mov
mov
mov
shrb
lcall
sbb
lds
cmpsb
imul
dec
cmpsl
int3
sbb
mov
test
lods
pop
or
inc
or
loope
push
push
jae
xchg
add
mov
push
clc
mov
mov
inc
cltd
out
mov
aaa
cld
adc
add
xor
lods
shll
pop
sbb
xor
mov
aaa
add
jne
push
pop
jmp
inc
hlt
mov
out
push
in
add
shr
notl
loopne
adc
in
jne
movl
xchg
push
sbb
jp
push
mov
sub
inc
pop
xorl
ret
divb
lea
cmp
or
out
insb
loope
cmp
je
dec
jmp
repnz
daa
or
fisttpll
adc
leave
je
mov
inc
inc
jmp
andb
and
sbb
pop
or
test
je
cmpb
xchg
fmuls
mov
inc
stos
sub
out
mov
mov
or
cmp
fstpt
jg
jo
adc
inc
push
jmp
add
in
pop
sbb
shr
push
leave
or
jae
cmp
or
jne
inc
push
mov
in
fsts
popf
clc
mov
andl
pop
clc
call
xor
jbe
sti
sub
mov
cmp
jne
incl
jge
pop
mov
cmp
pop
jb
xor
mov
mov
mov
add
leave
jne
jo
cmpb
outsl
mov
std
clc
inc
inc
jmp
adc
notl
mov
sbb
push
mov
mov
inc
inc
test
jne
pop
xor
fnstenv
mov
inc
xor
jne
adc
add
pop
test
push
iret
xchg
cmp
add
push
push
movb
sub
xchg
pop
adcl
leave
or
daa
and
arpl
pop
mov
jl
sti
ja
add
insb
cld
mov
mov
mov
push
clc
add
cmp
adc
dec
adc
cmp
jae
jb
cwtl
pop
pop
inc
sbb
mov
pop
cmpl
mov
xor
mov
mov
add
ljmp
pop
test
andl
sbb
sbb
or
add
fbstp
orl
fdivs
cmp
movsl
mov
inc
je
cmp
sub
xor
inc
add
andb
jnp
mov
sub
sub
aaa
jmp
push
xor
push
cli
int3
xchg
bound
andb
adc
xor
xor
push
jnp
xchg
xchg
adc
jne
sbb
shlb
xchg
ss
pop
adc
push
inc
pop
imul
or
adc
push
pop
loop
ja
or
dec
inc
push
shll
add
aaa
inc
imul
mov
movl
adc
mov
dec
sbb
stos
or
sbb
cmp
xor
or
mov
jle
dec
xchg
clc
add
in
mov
movsl
mov
stos
xchg
pop
sbb
adc
ljmp
out
mov
mov
add
shll
aam
hlt
stos
in
in
fdivl
xor
cld
loopne
hlt
lea
or
sub
push
sbb
sti
add
xor
push
jbe
push
sub
mov
mov
push
shlb
subl
cmp
jb
jmp
mov
test
adc
pop
inc
test
and
jne
retw
push
jns
aad
or
jmp
push
or
sbb
push
adc
push
pop
orb
xor
mov
dec
shll
gs
int
xorl
imul
fildll
je
cmpsb
imul
cmpsb
imul
push
imul
int
repnz
pop
repz
jnp
insl
ja
sub
stc
dec
cli
inc
sti
fwait
mov
cld
cmp
gs
cmc
ret
cmp
sbb
clc
or
or
leave
cmp
sbb
sub
adc
andb
pop
cmp
gs
mov
leave
adc
add
pop
mov
movsl
cs
lret
inc
inc
add
cmp
popa
lret
sti
adc
decb
out
leave
incb
inc
cld
jae
xchg
scas
or
dec
and
pop
das
push
xchg
fimull
mov
or
mov
xchg
push
cmp
xor
aaa
jnp
rorl
and
or
and
mov
cs
inc
daa
mov
int
add
jb
int
iret
inc
test
popa
rcl
ss
cs
push
aad
xor
cmpsl
adc
or
push
clc
dec
gs
jo
nop
cs
gs
xor
xor
fs
cs
jg
cmc
outsl
repnz
jns
jne
mov
sti
or
dec
dec
clc
sar
push
mov
jg
mov
pushf
fwait
adc
pop
and
push
daa
es
sbb
test
popf
push
aas
push
add
inc
push
mov
xor
cs
sbb
jo
dec
fsub
pop
fadds
mov
mov
fnstenv
fcmovu
pop
fdivl
lcall
fnstsw
sub
orb
pop
adc
add
pop
mov
out
mov
xchg
out
add
scas
in
jns
cld
mov
dec
enter
std
popa
adc
rclb
adc
sbb
mull
cmp
ret
fcmovu
imul
push
jecxz
out
movsb
imul
rcll
ret
lock
iret
adc
cmp
inc
adc
adc
adc
ficoms
iret
mov
test
push
dec
mov
aam
clc
dec
cs
inc
outsb
adc
jne
cmp
jne
dec
cmp
and
repnz
popf
cltd
xchg
daa
push
xchg
mov
insb
push
jns,pn
jmp
daa
sbb
iret
ror
push
pushf
adc
ja
adc
into
je
jo
sbb
subl
xchg
push
pop
adc
xchg
mov
mov
pop
sbb
adc
pop
push
js
push
orl
lock
out
es
hlt
mov
mov
and
add
test
mov
push
inc
mov
sub
fs
pop
aam
inc
lods
lcall
shll
inc
imul
mov
or
cmpsb
imul
xor
push
jae
jne
fstp
cmp
fnstsw
loope
nop
movsl
push
push
jno
fs
pop
inc
inc
inc
cld
enter
ja
outsb
mov
fistpll
push
xlat
and
xor
dec
aam
call
jmp
fmuls
in
or
ret
push
xor
push
test
movb
out
lods
or
push
sbb
sub
or
push
outsb
mov
jae
fcoml
int3
inc
ret
xor
sbb
call
pusha
push
pop
daa
je
or
inc
inc
dec
cmpsl
adc
outsb
adc
xchg
inc
adc
int3
mov
in
push
nop
nop
mov
stos
lock
dec
sarb
lods
cltd
call
aaa
or
pushf
push
and
test
adc
cmp
andb
popf
insb
and
mov
cmp
outsl
pusha
adc
ds
push
inc
add
add
loop
or
insb
or
mov
popa
xchg
pop
lods
push
popf
mov
call
inc
aad
mov
cmpl
jp
fwait
cltd
jp
test
and
mov
xor
sbb
fcoms
sbb
add
adc
insb
out
dec
sub
sub
add
push
dec
cs
lock
push
or
lock
or
mov
jp
flds
lock
loopne
hlt
shll
dec
outsl
dec
shll
gs
imul
push
js
popa
insl
gs
scas
inc
js
andnps
mov
lret
jo
popa
je
dec
sub
mov
outsb
insb
imul
cs
lret
gs
dec
shll
dec
gs
bound
addr16
shll
jb
jbe
in
cmp
insb
gs
add
push
inc
or
ja
add
push
in
lds
mov
push
and
push
enter
push
lods
pop
push
scas
sbb
iret
or
in
inc
cli
push
push
test
in
dec
cld
dec
push
sub
inc
pop
jb
std
clc
inc
clc
pop
repnz
negl
mov
add
notb
lret
gs
xchg
imul
imul
rol
int3
inc
out
lcall
f2xm1
rep
jecxz
mov
cmpsb
lcall
sbb
mov
or
fs
sub
mov
je
dec
add
mov
lret
outsb
insb
imul
sub
js
lds
inc
neg
mov
pop
inc
je
adc
and
roll
xchg
cmpsb
loopne
mov
scas
scas
fsts
mov
add
xchg
mov
dec
or
fmul
xor
sbb
adc
call
out
push
out
mov
roll
dec
sti
mov
or
xor
inc
stc
push
cmp
cmpsb
jns
adc
bound
cmpsb
sbb
int
mov
ss
mov
sbb
loopne
outsl
pop
and
inc
sbb
jnp
and
xchg
jo
pop
fmull
fmuls
inc
stc
je
mov
xor
cmc
xchg
and
xorl
push
in
sub
stc
sbb
push
adc
pop
lcall
rolb
cld
pop
push
divl
imul
insl
pop
jmp
push
addr16
or
inc
jb
call
add
rclb
xchg
sub
mov
push
sub
mov
lea
scas
mov
lret
dec
ret
loopne
aaa
xor
cwtl
dec
fcoms
lds
sbb
ret
mov
push
push
sbb
adc
mov
jnp
inc
add
js
bound
mov
in
xorl
mov
lods
or
push
or
jmp
dec
ret
inc
inc
adcl
imul
sbb
add
outsl
add
inc
jnp
push
adc
enter
inc
cmp
and
cmp
movsb
or
and
clc
shrb
outsl
or
mov
sub
cmp
and
nop
lahf
and
movaps
sub
mov
sbb
mov
mov
mov
fiadds
test
adc
ss
sbb
jo
movl
les
inc
lret
ret
ret
fildl
and
pop
in
xchg
lcall
sbb
sbb
push
sti
push
pop
push
adc
pop
testl
xorl
jnp
mov
pop
sbb
pop
add
pop
xor
push
mov
push
or
xor
inc
and
xor
lea
icebp
imul
ret
jbe
lret
push
dec
xor
jmp
ficoml
insl
push
jne
jo
mov
cmp
mov
mov
and
sbb
in
fs
or
cmp
outsb
nop
add
fcomi
fildll
movzwl
cmp
jl
pop
nop
sahf
daa
dec
xor
out
out
or
dec
inc
mov
add
push
cmp
nop
int3
rcl
fsubs
mov
dec
pop
or
pop
pop
out
adc
out
mov
jne
jl
pop
push
outsb
sbb
xor
pushl
into
push
lret
mov
lret
adc
adcb
adc
data16
xchg
mov
sbb
cld
cmp
sbb
repz
test
outsl
or
aaa
mov
cli
sub
mov
add
scas
rclb
pop
or
out
in
and
push
mov
pop
movl
fdivrs
jg
lea
mov
pop
sub
mov
mov
lods
incw
mov
mov
inc
sub
push
sub
mov
je,pn
xor
add
xor
movb
sbb
syscall
data16
sbb
lcall
push
cs
inc
stos
sub
insb
call
push
lock
sbb
push
push
rolb
or
sbb
js
adc
or
ret
push
test
cmpsb
fs
jno
movsl
push
mov
cmp
adc
sbb
push
adc
mov
ret
add
jl
add
mov
pop
mov
lea
mov
jae
and
pop
icebp
andb
add
sub
push
push
test
rolb
ds
xor
xorb
ss
xchg
mov
lock
mov
adc
inc
add
es
lea
lahf
outsb
test
inc
out
lea
adc
aas
outsl
mov
cmp
push
add
jbe
mov
ljmp
mov
pop
mov
mov
mov
and
mov
cs
xchg
or
lea
jl
mov
ret
jmp
inc
imul
mov
inc
mov
xorb
movsb
jo
cs
push
add
or
adc
adc
and
jg
cmp
sbb
inc
add
push
sbb
pop
jmp
add
push
pop
in
aam
cld
add
lret
pop
push
sahf
pop
cltd
push
dec
mov
cmp
jmp
std
fs
add
jl
add
or
jns
add
pop
push
cmpsl
lret
outsb
cwtl
lahf
dec
push
jne
sbb
pusha
ret
es
int3
and
stc
sbb
dec
ja
mov
pop
push
insl
ds
jmp
mov
cmp
pop
adc
ret
push
imul
xor
popf
iret
jne
dec
mov
push
and
enter
sbb
add
inc
sbb
mov
sbb
adc
cmpw
jne
test
cmp
stos
jbe
inc
sub
mov
hlt
jbe
mov
cmp
cld
lds
addl
sub
fstpl
fwait
jmp
jbe
sub
movsl
dec
mov
inc
and
popa
or
mov
cwtl
lods
jge
jne
icebp
and
mov
push
add
cmp
adc
sub
push
jo
cmpsl
xchg
popa
mov
mov
and
fldcw
mov
movsb
mov
lods
xorl
scas
mov
add
test
xchg
pop
cld
and
repz
jne
add
sbb
int
push
sbb
mov
xchg
mov
js
test
sti
jae
pop
adc
xorl
xor
push
ret
sbb
and
inc
sub
push
in
roll
mov
insb
sbb
mov
xlat
dec
ja
add
push
jno
push
and
sbb
orb
xchg
loopne
stos
jl
add
xchg
test
sahf
jae
data16
pop
xchg
outsl
jae
fs
cmp
add
out
sahf
jmp
inc
push
sbb
xlat
add
cwtl
add
cmpl
sub
xchg
jne
sbb
sbb
popf
shlb
xor
mov
loopne
cli
push
js
sbb
mov
push
and
arpl
ret
adc
jg
aaa
jp
decb
inc
add
or
add
mov
pushl
push
and
and
push
xor
ficoml
adc
cld
or
fs
pop
orb
push
or
dec
enter
stos
jo
outsb
imul
lret
mov
cmpsb
jae
push
imul
insb
inc
insb
pop
outsb
daa
lret
insb
outsl
inc
cmp
js
xlat
jne
jb
push
xchg
xchg
ds
cmp
pop
cltd
insl
lcall
pop
mov
insl
dec
cmpsb
push
test
test
stos
push
stos
jge
dec
lods
scas
push
in
lcall
mov
mov
mov
lret
push
movsl
push
push
shlb
mov
sbb
ss
inc
orb
lret
and
test
scas
cmp
mov
lock
adc
jne
je
mov
push
push
mov
add
ss
iret
rclb
cld
cmp
fldlg2
mov
std
adc
and
jl
outsl
insb
dec
insb
xor
adc
stos
jne
das
jmp
or
xor
dec
roll
pop
and
cwtl
hlt
mov
push
push
daa
inc
add
jle
insl
negb
testb
notb
adc
into
pop
adcl
addb
mov
daa
pop
cld
push
inc
gs
lret
mov
lret
jne
push
jb
jbe
jb
sub
insb
addr16
cs
loope
pop
fistpl
repz
subb
insb
pop
adc
mov
mov
add
push
sbb
add
daa
mov
arpl
loopne
jl
bound
sub
push
push
mov
mov
xchg
call
frstor
push
adc
cmp
in
inc
nop
jle
pop
cs
jl
adc
shll
add
or
js
fwait
cmp
ss
xchg
or
xor
loopne
fwait
popa
jns
xchg
gs
add
in
out
in
shlb
push
jno
and
sub
dec
arpl
outsl
mov
imul
imul
gs
xchg
gs
insl
outsl
outsb
or
je
cs
repnz
shll
outsl
lcall
aam
aad
lcall
dec
inc
pop
sub
cmpsb
imul
ret
mov
pop
xlat
les
lds
add
and
inc
fldt
add
enter
and
or
and
sbb
hlt
mov
adcl
fcomps
leave
xchg
bound
dec
or
enter
mov
mov
mov
int3
sub
mov
cmc
sahf
add
sbb
stc
sar
aam
add
cli
pusha
xchg
inc
push
leave
sti
jo
mov
add
inc
inc
adc
sti
popa
aam
push
xor
fsubrs
adc
aam
cmp
nop
adcl
cli
mov
popf
adc
dec
fldcw
mov
dec
xor
add
inc
mov
ret
add
add
pop
cmp
fsub
xchg
push
adc
mov
lret
mov
inc
popa
arpl
lods
mov
xor
mov
or
mov
ja
repnz
push
or
cmp
sahf
push
aaa
pusha
xchg
adc
pop
add
clc
sbb
lds
mov
lock
lea
sub
pushf
pop
add
loop,pn
push
cmp
fdivl
sbb
test
adc
adc
mov
arpl
int3
cld
adc
xchg
sbb
inc
es
push
mov
xor
sar
and
sbb
mov
incl
inc
aam
shl
outsb
adc
xchg
inc
adcb
cmp
and
fwait
shrl
out
pop
cli
es
cmp
je
cltd
xor
popa
outsl
fs
add
jle
adc
test
in
cli
in
cli
in
sti
jle
nop
out
sti
cld
std
ja
cld
pop
enter
cld
clc
stc
std
notl
lcall
adc
mov
hlt
mov
adc
lods
js
push
fnstsw
adc
cli
lock
lock
dec
lock
jb
cld
cld
adc
les
movsl
push
fldenv
lret
sbb
adc
fcoms
and
jle
clc
std
pop
pop
int
adc
cld
push
add
mov
loop
cltd
fsubrl
push
cmp
mull
jmp
add
in
adc
mov
or
loope
arpl
push
mov
push
mov
jge
add
mov
lea
movb
arpl
hlt
jo
pusha
outsl
xlat
outsb
mov
mov
add
inc
cld
adc
shll
int3
inc
and
xor
mul
inc
add
add
cmp
xor
dec
pop
jo
nop
cmpsb
xchg
dec
shll
rolb
inc
xor
xlat
sub
sub
xor
push
shll
mov
mov
in
lcall
in
push
test
dec
xlat
popf
xchg
adc
cmp
xor
roll
push
pop
outsb
dec
shll
movsb
mov
cld
adc
push
inc
pop
and
push
xor
inc
add
sarb
sub
test
loopne
jg
inc
mov
inc
pop
rolb
jg
add
xor
cs
insb
popa
mov
add
inc
push
or
jbe
inc
adc
and
or
pop
and
outsl
je
je
jns
imul
gs
jae
pop
add
arpl
outsl
data16
addr16
and
je
insl
jo
imul
aaa
test
add
dec
push
push
pop
insl
fwait
out
pop
adc
je
js
arpl
cmp
aaa
stc
dec
mov
gs
outsl
pop
inc
gs
imul
inc
je
imul
push
in
fildl
je
bound
dec
inc
push
push
inc
push
inc
pop
push
outsb
arpl
fwait
sti
pushl
push
mov
cmpl
jne
pusha
nop
nop
call
call
out
nop
inc
dec
add
sbb
or
rclb
pop
notl
inc
fsubrs
push
fdivl
arpl
fs
sbb
push
and
daa
jns
jo
add
inc
push
add
pop
or
fstpt
lea
adc
mov
add
pusha
test
nop
in
or
out
mov
mov
repnz
push
mov
incl
pop
repz
push
pop
jne
mov
sbb
jle
jne
push
jl
sbb
cli
mov
add
jmp
pop
mov
xchg
xor
aam
push
hlt
cmp
je
jp
je
lea
push
push
lret
mov
insb
mov
fs
imul
adc
test
rclb
pop
pop
clc
pop
jmp
lahf
or
call
nop
add
nop
jmp
pop
pop
ja
ret
outsl
sbb
or
pop
mov
pop
mov
add
dec
and
rcll
pop
js
add
add
incb
dec
inc
cmp
inc
add
or
leave
inc
mov
dec
pop
negb
dec
push
call
popa
fs
lea
inc
jb
popa
mov
daa
hlt
xor
jae
arpl
jnp
rep
jae
fs
cmp
push
push
dec
mov
imull
in
roll
jae
push
cmpsb
push
adc
cmp
jbe
stos
enter
cmp
inc
cltd
pop
notl
push
xor
add
jbe
lock
pop
les
or
inc
outsb
adc
push
xchg
decl
add
inc
add
dec
pop
mov
add
nop
inc
add
mov
inc
loopne
push
pop
pop
lock
mov
int
mov
imul
pushl
insl
and
outsb
outsb
outsl
je
bound
jb
outsb
and
inc
dec
push
and
pop
sti
sub
or
in
clc
and
jl
xchg
fcmovu
lcall
jb
into
ficoms
sbb
into
lret
jb
dec
ficomps
movl
push
or
add
dec
mov
add
add
add
adc
push
xor
jo
or
cmp
add
add
mov
fwait
pop
or
push
xor
jnp
mov
pop
push
lock
push
pop
push
xchg
test
js
sbb
cmp
push
pop
pop
jo
iret
fistl
loop
fs
jmp
cli
pusha
jb,pn
sbb
add
inc
or
daa
pop
movsl
and
test
daa
popa
mov
or
and
enter
push
sbb
lahf
shlb
jb
fs
daa
imul
gs
outsl
arpl
add
cmpsb
push
inc
pop
lret
add
jg
lock
cmp
inc
daa
inc
fbstp
gs
lret
mov
je
push
push
jb
popa
outsl
inc
sbb
sbb
dec
push
cltd
mov
loopne
lret
enter
or
add
jp
cmp
xchg
and
and
mov
call
mov
cltd
inc
mov
mov
xchg
mov
adc
or
mov
pop
sti
mov
insl
xor
cwtl
sub
xor
mov
stos
mov
dec
stc
in
push
mov
cmp
subb
out
les
inc
xchg
add
push
sub
ss
mov
add
and
add
sbb
movsl
icebp
push
xchg
mov
popf
adc
inc
dec
pop
mov
cmpb
pop
lds
add
add
push
jbe
mov
or
call
xor
or
ficoms
jle
mov
jle
lret
test
fisttps
je
mov
xor
outsb
jae
push
push
pop
xor
je
mov
stos
pushf
fildl
in
faddl
ljmp
add
das
dec
push
sub
enter
jmp
adc
cmp
pop
pushf
shrl
test
sbb
push
push
mov
add
push
fistl
mov
jno
sub
imul
jp
jae
lock
repnz
mov
repz
dec
popa
or
and
mov
or
imul
gs
insl
popa
pop
xchg
mov
xchg
and
adc
jecxz
sarl
mov
enter
je
movsb
movsb
movsl
cmpsb
gs
mov
cmpsl
jo
inc
gs
gs
xchg
je
insl
popa
addr16
gs
xchg
inc
outsb
arpl
dec
fistpll
jp
mov
gs
jne
shll
lds
add
xchg
or
or
dec
mov
clc
push
xor
cld
push
mov
cmpsl
sbb
lea
pushl
cmpsl
lret
xor
cmp
outsb
cld
mov
dec
cmp
out
adc
add
lcall
add
dec
or
dec
lds
adc
outsl
out
shl
test
mov
and
enter
inc
mov
sti
push
mov
ds
jb
pop
call
xor
or
ret
fnstsw
or
xchg
or
mov
push
mov
push
imul
mov
ss
push
jl
mov
push
pop
xor
add
mov
in
inc
addr16
cmp
and
jne
sbb
fs
lahf
push
sub
jae
pop
xchg
gs
imul
xchg
gs
je
imul
popa
inc
js
outsl
pop
stos
lods
dec
sub
cs
cmc
scas
push
mov
mov
mov
xor
inc
pusha
xchg
shrl
mov
xor
adc
ss
mov
lret
gs
insl
popa
addr16
ret
add
vshufps
and
call
mov
inc
xchg
fstp
fbstp
dec
shll
insb
jne
push
mov
test
call
sbb
dec
sub
call
dec
mov
inc
xchg
enter
lret
jo
sub
push
inc
inc
imul
jae
insl
popa
addr16
cmpsl
ret
sahf
call
push
xor
pop
push
mov
xor
sbb
mov
aam
push
xchg
push
int
mov
pusha
jne
adc
jo
cmpsb
cmp
mov
push
imul
dec
repz
insl
add
je
jbe
js
dec
repz
jp
jl
mov
jo
in
orb
test
add
aas
lea
or
cmp
js
or
sbb
and
call
shll
sbb
out
inc
mov
int3
sbb
cmp
push
inc
int3
mov
xchg
cwtl
or
xchg
jle
pop
or
mov
push
sbb
movsb
add
sahf
imul
lcall
xor
icebp
repnz
add
xchg
and
and
push
mov
fildll
inc
lds
je
arpl
fmull
js
rol
in
mov
addl
cmp
or
testl
pop
mov
or
mov
out
sub
inc
or
inc
pop
xor
inc
arpl
call
loope
and
out
push
mov
popf
je
nop
adc
cwtl
clc
xor
dec
outsl
fistpl
movb
or
jnp
mov
dec
jno
insl
or
mov
scas
add
pop
or
or
or
xchg
push
push
jnp
data16
push
popf
xchg
push
mov
clc
stos
xor
sbb
cmp
mov
add
imul
cmpsb
imul
cmpsb
imul
xor
push
sub
inc
test
lods
mov
push
sbb
lock
stos
lret
jg
inc
jo
cltd
sub
jne
call
shlb
mov
aaa
add
dec
add
add
xor
add
rcr
xor
or
leave
call
scas
adc
cmp
dec
pop
add
nop
addr16
sahf
pop
add
iret
pop
mov
pop
repnz
imul
cmp
mov
xor
shll
outsl
outsb
data16
pop
outsb
andl
cs
pop
jo
rcl
imul
dec
dec
inc
dec
inc
mov
inc
mov
lcall
les
test
dec
sbb
mov
cmp
ret
push
les
xchg
sub
and
jmp
ucomiss
outsb
and
xor
inc
pop
sub
lods
push
push
jmp
packssdw
mov
or
sbb
lods
inc
adc
dec
jo
imul
mov
push
rorl
dec
sbb
fcmovne
mov
xchg
push
dec
dec
push
hlt
pop
push
sub
jne
mov
bound
out
dec
imul
aas
fldt
sub
clc
loopne
or
pop
call
dec
add
fst
sar
dec
outsb
sub
and
sbb
cmp
xor
push
negl
sub
call
sbb
and
pop
dec
or
lret
mov
inc
dec
push
in
daa
mov
xchg
dec
std
push
and
int3
jl
inc
xchg
push
aas
or
sbbb
add
jbe
outsb
pusha
sub
push
push
pop
and
roll
add
rcr
dec
cmp
test
mov
sahf
inc
jle
sub
cld
xor
sub
push
addl
repnz
lock
outsb
mov
fsts
pop
mov
enter
add
inc
jp
leave
aam
fdivrs
inc
cmp
or
fcomp
pop
pushf
pushf
sub
adc
arpl
imul
push
cmp
adc
repnz
add
or
fdivr
cmp
mov
aam
int
push
imul
or
mov
cmp
mov
loope
xchg
sub
jae
cmp
gs
outsl
outsl
dec
out
mov
cmpsb
imul
xchg
andl
add
neg
rcl
adc
and
ja
jae
xor
dec
xor
xor
add
insb
hlt
arpl
add
adc
outsb
inc
arpl
ja
out
fistpl
sti
call
mov
push
mov
lcall
xor
nop
push
inc
dec
in
dec
call
xor
int3
mov
xor
in
mov
mov
out
ja
loopne
xor
add
mov
push
loope
or
push
sub
inc
iret
enter
outsl
outsb
mov
lret
mov
jb
insb
insb
outsb
mov
lret
gs
fs
adc
ret
xor
add
ja
push
mov
cwtl
dec
xlat
incl
fsubr
test
aam
sub
or
je
repnz
lea
push
ret
insb
paddq
test
cmp
das
add
xlat
xor
or
mov
jle
or
mov
dec
add
int3
sub
pop
add
in
decl
enter
or
jmp
push
sbb
imul
imul
or
add
cmpl
push
jmp
fsubr
dec
shll
andb
test
mov
call
pop
testb
cmp
cmp
les
mov
inc
cmp
dec
addr16
xlat
insb
mov
int3
int
adc
into
lds
or
stos
mov
imul
lea
lahf
cmpsb
imul
popf
xchg
lock
jl
mov
sbb
outsl
leave
adc
xor
mov
enter
mov
ja
cs
adc
adc
shl
pop
test
push
mov
in
fsubs
sub
add
inc
and
push
sbb
jns
cmp
fs
xchg
and
insb
and
cmp
dec
xor
inc
sahf
int
inc
sbb
adc
aas
fs
int3
push
pop
push
pop
incl
mov
push
push
push
ret
repz
leave
js
fwait
outsl
pop
adc
call
cmpb
push
inc
in
and
mov
dec
xlat
inc
sbb
fistpl
aas
xor
and
cmpsb
jmp
rcll
ret
les
sti
fs
shll
cmp
dec
inc
xorl
and
je
es
xlat
and
shll
fnstenv
sbb
fcmovnu
fstp
cmpsb
imul
xor
lcall
lcall
xor
lcall
jae
imul
cmpsb
jmp
ss
imul
jl
xor
int
cmp
inc
push
call
sub
mov
push
stc
push
inc
inc
ss
xor
push
gs
inc
ds
and
and
and
xor
std
test
xchg
iret
dec
sar
cld
sar
out
dec
lods
aaa
sar
push
inc
out
cmp
je
sti
js
adc
adc
pop
sarl
aam
sbb
mov
and
inc
xor
push
or
cwtl
jno
cmpl
sub
and
sbb
xor
fucomi
bound
fsubrs
lcall
bswap
ja
outsb
aad
xor
mov
int
mov
mov
in
mov
repz
enter
xor
std
insb
sub
out
std
addb
fistpll
dec
adc
xor
and
iret
inc
add
jno
xchg
lcall
add
inc
xchg
roll
or
gs
call
and
mov
out
sbb
inc
outsl
xlat
dec
sub
and
or
std
add
mov
push
mov
jne
push
mov
test
pop
inc
pop
mov
mov
jbe
cmp
jb
add
ja
pushl
mov
adc
dec
icebp
inc
iret
sub
xlat
sbb
jne
adc
sbb
sbb
push
cs
dec
inc
add
and
inc
adc
sub
nop
scas
insb
jg
rorb
inc
inc
mov
adc
scas
mov
cmp
ss
arpl
xor
pop
sti
jmp
jo
adc
mov
mov
jae
or
imul
sub
aam
je
outsl
outsb
sub
mov
cmp
dec
rol
test
addr16
and
jae
fildl
sub
jmp
pushf
lcall
mov
pop
mov
mov
shll
inc
sub
mov
pushf
or
inc
shll
loop
mov
push
ficompl
cvttps2pi
jmp
inc
lcall
cmpsb
imul
mov
stos
fs
stos
lods
lods
xlat
scas
imul
xlat
mov
sahf
mov
mov
int3
shrl
jbe
out
xor
sub
inc
sub
gs
sub
mov
inc
jne
outsb
popf
sub
push
add
fwait
insb
inc
inc
arpl
loopne
fsubs
int
loope
insb
loop
cwtl
and
mov
push
sub
adc
dec
push
sub
ljmp
rclb
daa
inc
out
jmp
imul
lcall
ror
mov
div
clc
clc
pusha
xor
inc
pop
add
mov
cmpsb
loope
cmp
jb
jae
subb
outsb
data16
call
sbb
daa
pop
int
movsb
arpl
jmp
xor
inc
imul
movsb
and
dec
rcrl
xor
pop
or
xor
and
cmpsb
imul
imul
lods
fcomps
push
pop
orl
cwtl
xchg
xchg
xchg
jp
int
xchg
jmp
mov
outsl
test
scas
push
and
dec
xchg
xchg
sbb
outsl
rcl
inc
add
incl
jl
mov
cmpsb
repz
add
add
fs
outsb
js
outsl
outsb
mov
mov
cmp
inc
add
cld
cmp
js
cmp
iret
jb
adc
and
lea
out
adc
lods
mov
or
cmp
jb
mov
pusha
push
adc
push
xor
adc
push
fcomps
shlb
cmpsb
mov
je
imul
je
jae
imul
rcll
fcomp
fcmovu
leave
push
push
sbb
insb
xchg
xchg
sbb
arpl
stos
mov
mov
push
shr
or
push
mov
sbbb
arpl
adc
or
dec
shll
in
xor
shll
call
xor
shr
in
out
out
pop
adc
lock
fadd
push
mov
testl
into
test
mov
adc
mov
jmp
cmpl
es
xor
lods
cmp
orb
push
push
mov
pop
or
gs
fisubrl
dec
adcb
inc
jmp
fcoml
in
cmp
rcr
adc
jle
add
add
leave
adc
mulb
sub
mov
and
mov
aaa
jp
xor
js
and
mov
adc
lods
cmp
and
mov
sub
fyl2xp1
pop
sbb
mov
mov
cmp
fucom
dec
adc
je
push
mov
into
insl
mov
dec
addr16
insl
dec
out
xor
jp
fsub
add
adc
jne
cs
fsubrs
test
push
shll
sbb
imulb
mov
cli
in
pop
jo
lods
stc
jne
insl
cmp
in
std
jmp
imull
cmp
daa
stc
in
repz
repz
and
cltd
hlt
movsb
mulb
xchg
pushf
cmc
mov
mov
jg
jmp
sbb
push
push
iret
in
sbb
xchg
rep
mov
imul
or
mov
es
ljmp
sub
push
pop
push
mov
lds
cwtl
dec
adc
push
and
test
cmpsl
cli
mov
adc
or
mov
pushf
or
mov
mov
sbb
mov
sbb
shl
mov
cld
cmp
clc
sub
and
push
or
or
lods
push
cs
cmpb
movl
cmp
pop
push
pop
dec
adc
insl
pop
dec
mov
dec
addr16
push
pop
ja
xor
mov
cmp
popa
push
mov
dec
mov
jb
gs
xor
jbe
imul
ja
push
push
imul
mov
dec
rcl
mov
insb
pop
outsl
jb
shll
gs
push
add
inc
lcall
pop
fwait
pop
stos
inc
arpl
sarb
insl
jae
popa
imul
sub
scas
lcall
mov
mov
mov
add
mov
mov
in
mov
mov
inc
xor
mov
loop
mov
push
cmp
popf
pushf
jo
cmp
rcrb
inc
inc
push
push
xor
sub
inc
outsl
inc
inc
mov
mov
inc
sub
dec
push
inc
mov
dec
jo
xor
in
jbe
ret
dec
jl
push
dec
ja
dec
jae
push
popa
push
loope
pop
js
lahf
push
imul
out
in
in
insb
insl
outsb
and
dec
xchg
arpl
dec
jb
jae
cmp
xorb
jbe
cmp
cmp
js
jns
jp
pop
ds
lea
outsl
lock
arpl
mov
xor
test
jb
sub
js
or
cltd
testl
in
sbb
cmpl
mov
pop
jbe
sahf
xor
pop
lock
fninit
test
fnstcw
xchg
imul
insl
lcall
je
mov
cmp
gs
gs
xchg
jb
xor
fs
pop
adc
mov
and
or
xchg
js
js
push
or
mov
lock
fiaddl
push
cld
je
mov
outsb
scas
bswap
jbe
inc
pop
addr16
mov
pop
fsts
adc
sbb
cmc
lods
jmp
sub
enter
std
or
and
leave
jb
mov
lods
aas
aaa
fsubl
add
push
push
test
mov
push
repz
or
sub
push
sub
fstps
cmp
and
xrelease
inc
mov
mov
push
mov
insb
rcl
js
fwait
sbb
dec
inc
mov
loopne,pn
cmp
popa
gs
data16
lods
or
mov
cwtl
in
sub
test
and
rol
and
xor
pop
in
mov
hlt
jno
dec
fadd
jl
sbb
insb
push
fsubrs
ss
std
daa
or
sti
push
xchg
jge
and
sti
lds
and
mov
mov
xor
and
popf
pop
jns
icebp
loopne
and
sbb
enter
repnz
fs
test
jmp
cmpl
mov
adc
mov
jne
or
add
pop
sub
inc
xchg
mov
add
loopne
loopne
xor
ljmp
mov
push
icebp
cmp
je
fistpll
neg
nop
pop
dec
dec
cmpw
jne
pop
adc
jg
pop
jne
add
and
inc
pushl
sti
or
inc
push
pop
or
or
add
xchg
stos
pop
or
enter
subl
cmp
out
and
sub
test
shlb
add
and
cmp
pop
es
mov
xor
or
ret
push
int3
push
icebp
jae
mov
ror
mov
xor
shll
idiv
stc
cli
add
aam
inc
les
mov
pop
push
dec
jb
jne
xor
pop
push
mov
cmp
dec
outsl
ja
and
mov
mov
in
adc
sar
pop
das
mov
icebp
add
shrb
add
push
adcl
or
addr16
push
push
mov
sub
add
mov
testb
pop
clc
adc
ljmp
sbb
pop
or
or
dec
je
mov
outsb
fs
gs
xchg
gs
jno
gs
iret
dec
popf
gs
js
and
addb
lock
cltd
bound
jbe
mov
pop
lock
push
loopne
push
mov
jge
clc
inc
popa
mov
decb
in
add
fnstenv
test
mov
or
push
push
sti
or
xor
cmp
mov
pop
push
mov
or
pushf
add
sbb
push
push
pop
xchg
mov
pop
adc
pusha
stos
pusha
ret
mov
xor
pusha
dec
outsb
cmp
gs
jb
je
xchg
xchg
gs
jb
inc
imul
lcall
cmpsb
imul
mov
lcall
mov
lcall
lret
jb
jo
call
jno
popf
pushf
sub
jae
dec
mov
inc
lcall
je
pop
xchg
xorb
outsb
fs
shll
inc
cli
sti
cld
std
lret
push
shll
dec
outsb
or
sub
jb
fsubrs
mov
je
cs
mov
adc
arpl
xor
sbb
pushf
sub
rorl
xor
out
jle
sbb
enter
sub
dec
pop
cmp
add
xor
enter
add
sbbb
cmp
fnstenv
rcl
fcomp
shl
gs
loopne
in
call
inc
or
jne
push
and
cmpb
sub
jne
repnz
jo
rcll
xor
xchg
sub
in
mov
mov
inc
push
push
popa
and
jmp
je
push
add
pxor
leave
jno
inc
enter
out
in
ret
push
adc
xor
inc
mov
aas
addr16
mov
into
rorb
fcomi
stc
inc
jle
and
pop
pop
fnsave
je
rcll
ljmp
sub
xlat
scas
in
aam
xor
shl
add
sub
xor
rorb
add
push
shlb
mov
mov
cli
es
dec
xor
lock
and
cmc
jo
mov
push
jns
sub
scas
sbb
adc
or
jae
les
xchg
outsl
sub
lret
mov
cmp
sub
mov
jae
jne
cmp
int3
and
jnp
pop
cmp
jp
repnz
mov
fadds
fs
push
sbb
xchg
aam
xor
ret
pop
cmp
aam
mov
inc
jb
cld
lret
mov
sbb
dec
push
icebp
mov
dec
inc
call
sub
push
xor
jae
xor
lcall
pop
and
je
psadbw
idivl
add
add
add
test
push
cmpsl
and
cli
push
fsubr
or
dec
bound
adc
ds
fcoml
or
addl
add
cmpsl
and
fcmovnb
and
or
cmp
jl
add
jg
mov
cmp
jl
cmp
jo
adc
jl
inc
test
pusha
into
dec
ficoml
cld
xchg
or
test
aad
push
je
fsubr
idivb
inc
int
xchg
push
fs
iret
je
xchg
test
cmpl
dec
push
lea
jmp
aas
aad
sub
pop
adc
das
pop
call
fdivrl
or
aad
cmpb
and
sub
inc
sbb
lods
out
push
jg
push
xor
jmp
in
jae
es
insb
fnstcw
aaa
imul
test
movsb
subl
xchg
xorl
jne
and
jae
insl
bound
and
xor
jp
and
xchg
add
in
out
pop
xchg
gs
out
lock
repnz
gs
cmc
div
or
xor
adc
and
leave
jbe
in
arpl
mov
pop
push
push
clc
jns
jp
pop
inc
sub
jo
jae
mov
popa
leave
mov
dec
scas
rcll
fs
cmpsb
stos
sbb
jp
push
cmp
push
mov
inc
or
in
cmp
mov
jl
add
push
insb
or
inc
or
orb
and
xchg
pop
lcall
sbb
leave
mov
icebp
cmpsb
imul
push
pop
enter
sub
sub
cmp
jp
push
jmp
push
xchg
gs
xchg
push
inc
arpl
jne
xchg
gs
outsb
je
fs
fnstsw
data16
or
hlt
cmpsb
imul
stc
mov
call
push
mov
and
and
outsb
xor
xor
xchg
in
mov
enter
mov
ss
add
dec
fdivrs
xchg
xchg
add
idiv
nop
out
inc
dec
jbe
add
movsb
pop
mov
xorl
cmpl
push
inc
pop
xor
and
subb
mov
dec
lea
mov
xor
into
mov
les
or
mov
ljmp
sbb
in
in
into
sub
dec
pop
in
or
push
enter
in
sti
adc
add
stos
dec
sbb
addb
sub
pop
add
sbb
inc
ret
into
cltd
or
mov
mov
test
jo
sbb
pusha
mov
jne
add
outsl
movsl
mov
and
call
dec
dec
inc
pushf
sub
inc
repnz
mov
dec
hlt
adc
xchg
sbb
push
ret
adc
push
loope
sarb
cmp
stos
cmp
inc
outsl
fs
je
push
sbb
add
jbe
jbe
dec
enter
dec
sahf
popa
inc
test
mov
jnp
jne
cwtl
sub
xor
push
sbbb
adc
je
cltd
add
test
pop
mov
pop
cmp
cmp
sub
aaa
mov
cmp
lods
sub
adc
shlb
mov
bound
sub
dec
sub
ss
mov
mov
loope
and
adc
dec
lods
enter
test
cmp
sbb
adc
push
cmc
mov
sbb
push
test
ds
pop
sbb
and
gs
sbb
les
call
shll
fs
sub
addr16
je
dec
insb
imul
outsb
gs
jne
or
ret
addr16
jo
shlb
andps
lock
sbb
push
xchg
daa
leave
sub
fldcw
sub
add
imul
scas
jecxz
mov
sub
fcoml
jns
fcomps
jnp
dec
cld
mov
fsubrl
push
cmp
xlat
add
adc
outsl
hlt
leave
enter
sarl
or
push
pop
inc
jmp
push
lahf
cmp
adc
lahf
sti
push
les
xor
enter
sahf
ds
sub
push
push
mov
mov
xchg
sub
inc
sub
js
mov
hlt
div
sbb
adc
loop
xor
cld
stos
or
repz
cs
add
pop
adc
push
clc
sbb
cmp
dec
popf
imul
add
div
in
mov
add
mov
lock
loope
shlb
cmp
sbb
push
inc
ds
aam
ds
add
or
mov
sbb
mov
mov
push
mov
addr16
dec
inc
shlb
pop
int3
and
or
jno
add
js
mov
mov
push
divb
inc
js
rep
incl
ret
js
pop
mov
or
cmc
stos
cmpsl
stc
jo
and
dec
adc
xor
idiv
int3
pop
dec
shll
rcl
xor
shll
aam
xlat
cmp
aam
mov
cmp
test
push
imul
lods
popa
insb
push
jb
gs
xchg
outsl
je
arpl
jb
sbb
mov
or
mov
lods
stos
push
mov
cmp
mov
les
js
call
cmp
in
ret
mov
inc
mov
push
hlt
and
out
push
inc
add
in
lea
loopne
test
ljmp
sbb
pop
push
faddl
add
push
mov
fs
pop
or
or
or
cmpsb
and
xor
add
push
int3
popa
pop
mov
sbb
and
sub
leave
xchg
mov
xchg
imul
jge
add
test
jmp
lds
push
push
inc
repnz
roll
lock
in
fdivrl
shll
gs
dec
shll
gs
fsubl
cmp
fs
jne
call
or
sar
call
out
in
pop
loop
or
mov
dec
xchg
pushf
add
lods
lds
adc
lret
mov
pop
jae
jae
gs
mov
insl
adc
push
or
add
fiaddl
call
lds
or
call
fnstenv
or
rolb
push
jb
cmc
mov
sbb
adc
dec
push
pop
outsb
insb
or
jb
popa
xor
inc
cmp
adcb
inc
jb
gs
xchg
gs
je
push
push
jb
popa
js
in
or
in
rclb
or
rorl
test
pop
sbb
and
add
or
in
push
in
popa
orl
outsb
or
test
mov
mov
cmc
je
repnz
push
int3
push
lods
lock
adc
add
inc
mov
add
mov
test
insl
or
stos
fs
and
shll
sbb
fisttps
pop
repnz
cmp
dec
sbb
loop
sbb
xor
movsb
mov
je
xor
dec
inc
imul
xor
imul
jb
pop
icebp
xchg
les
adc
sub
push
cmp
push
movsl
sub
into
insb
xchg
sbb
push
jnp
or
cmp
filds
mov
dec
cmp
lret
pop
roll
inc
push
lahf
xchg
adc
push
loope
or
adc
lods
cmp
je
adc
pop
jnp
outsb
hlt
cmp
ja
jge
add
or
jae
outsb
mov
mov
mov
cmp
arpl
out
cmp
inc
jmp
adc
push
sub
je
outsb
sub
mov
dec
adc
in
int
adc
fldl
or
jmp
movsb
pop
adc
push
cmpsl
sub
js
outsb
adc
mov
jne
push
incl
sbb
loopne
in
shll
adc
jns
cmp
lock
and
cmp
jb
add
rorb
orb
cmp
add
jg
pop
gs
or
test
je
fsubp
jo
negl
jg
adc
call
stos
or
adc
jns
std
daa
arpl
pop
mov
ret
mov
xor
rcrl
lods
push
jo
lret
mov
sar
or
cs
mov
lret
inc
add
daa
dec
les
outsb
je
or
enter
dec
adc
outsb
jb
shlb
gs
sub
mov
dec
jo
outsb
push
fldcw
mov
jo
gs
xchg
gs
jo
jne
pop
stos
xchg
gs
dec
outsb
mov
jne
data16
add
imul
gs
and
cmp
or
inc
adc
push
or
addb
sub
sub
adc
dec
sub
mov
mov
outsb
sub
inc
popf
je
inc
insb
outsl
es
aam
jae
sahf
dec
xchg
mov
popa
test
pushf
mov
mov
add
into
enter
lods
or
loopne
lods
pop
cwtl
inc
cmp
dec
lret
ja
mov
jbe
mov
lods
cmpsb
imul
ret
and
ret
push
dec
outsb
leave
mov
aam
mov
gs
imul
je
nop
cmpsb
imul
pop
ss
jo
outsb
push
cmp
pop
jb
dec
scas
dec
cmp
push
out
pop
fsts
les
push
mov
loopne
push
push
jge
adc
test
dec
cmp
es
jle
adc
pop
hlt
jg
lea
mov
push
test
fldenv
cltd
mov
xor
shrb
fcmovnbe
aam
sbb
cmpsl
lods
popa
fmul
stos
mov
push
add
sbb
int3
mov
or
push
test
add
jae
ljmp
ljmp
nop
push
fwait
clc
daa
adc
push
inc
sub
sbb
in
add
xor
adcl
in
and
push
pop
out
or
fwait
inc
rcrb
sub
insb
mov
in
rorl
call
outsl
lock
or
or
pusha
and
xorb
gs
push
add
add
outsl
ds
enter
push
add
or
add
lahf
inc
ds
add
add
daa
stc
add
push
into
add
idiv
inc
and
call
add
dec
fidivrs
jo
adc
pushl
jle
inc
or
mov
mov
stc
clc
neg
popa
or
add
push
fnstsw
adcb
adc
outsl
mov
jae
mov
fnsave
dec
inc
daa
clc
cld
jmp
js
or
or
std
or
adc
lds
pusha
cmovl
mov
push
mull
mov
lds
add
adc
pshufw
icebp
inc
lock
je
jle
add
pop
sub
pop
out
out
loope
addb
clc
pop
in
or
dec
data16
and
push
je
push
dec
aad
fidivrl
out
jbe
sarb
js
fcomp
jle
in
xor
push
add
push
clc
push
call
xor
mov
adc
pop
or
sub
pop
mov
xor
mov
fistps
add
mov
rclb
lock
call
push
cmpsb
daa
xor
das
jl
les
or
xlat
adc
cmp
sub
xor
test
sbb
data16
divb
das
adc
cmc
adc
lods
je
jmp
aam
cmp
imul
popa
outsl
adc
shlb
popa
jo
cld
jl
adc
test
test
test
stos
jl
and
sbb
in
mov
mov
out
and
daa
sbb
or
shll
inc
jnp
cwtl
jno
pop
add
mov
mov
shlb
jl
cmp
inc
fsub
xor
arpl
xchg
xorl
or
in
jne
fcmovne
mov
scas
sub
mov
mov
adc
add
add
mov
lods
cli
pop
mov
cli
ret
sub
adc
adc
in
push
insl
sbb
inc
add
mov
fnstsw
je
or
push
mov
sub
mov
cmpb
pop
jnp
leave
sbb
popa
xchg
pop
jge
adc
xor
mov
pop
sbb
roll
ret
push
sti
nop
nop
pop
add
outsl
push
sbb
call
and
ja
mov
or
lods
pop
push
xchg
or
daa
push
push
and
xchg
sbb
sbb
enter
ss
iret
fcoml
sbbl
cmp
les
je
ja
xor
imul
imul
xlat
xor
adc
and
push
pcmpgtd
adc
add
jae
imul
in
lcall
jae
fisubrl
data16
and
cmpsb
imul
imul
cmpsb
imul
push
imul
lcall
mov
xchg
arpl
sub
add
xchg
xchg
lret
ret
fmull
add
imul
repnz
push
outsb
push
jle
imul
push
fwait
outsl
bnd
pop
or
or
mov
jae
push
cwtl
jnp
mulb
out
and
pop
movsb
pop
test
inc
ja
popa
jl
shrb
rcr
jo
mov
add
in
jb
fcom
incb
inc
aaa
add
insb
gs
fnstsw
insl
gs
gs
add
add
popa
jo
insb
and
das
push
jb
gs
adc
lcall
xchg
mov
jbe
je
sbb
push
je
outsb
addr16
insl
pop
mov
jae
arpl
outsb
inc
ret
sbb
js
xor
inc
pusha
jae
dec
popa
outsb
fs
add
add
sbb
or
jp
mov
insl
push
dec
daa
popaw
xor
lods
mov
push
es
imul
jb
mov
fildl
jmp
pop
lods
data16
dec
jo
push
mov
add
gs
insl
aad
adc
xchg
fdivs
cmp
fwait
outsl
mov
jae
push
imul
js
sub
fs
lahf
push
outsl
ret
test
je
inc
jns
add
dec
popa
and
aaa
iret
mov
mov
xchg
in
jne
cmp
sub
cmp
lock
or
imul
outsl
loope
sub
adc
mov
and
jb
or
jnp
sbb
inc
dec
imul
cmp
add
jb
data16
in
mov
insb
stos
jae
push
jno
insb
negb
xchg
leave
mov
imul
add
adc
scas
add
push
je
inc
push
dec
or
lds
push
add
mov
fldt
je
xchg
popa
xchg
sub
fstl
aas
aas
xor
sbb
push
add
mov
insl
cmpsl
pand
sbb
xchg
cmp
insb
outsb
outsl
push
push
xchg
pop
shll
idivl
add
lret
aad
jbe
das
lret
jo
pop
push
out
insl
fisttpl
outsb
or
xor
jecxz
rorb
or
dec
add
in
sbb
add
int
divb
inc
cmp
pop
int3
fcomp
in
pop
jne
ja
fs
add
insl
imul
sbb
cmp
mov
imul
outsb
xchg
mov
xor
cmpsl
mov
inc
sub
rorl
bound
jae
xlat
sub
mov
inc
ja
push
insb
adc
pop
jmp
inc
outsl
aaa
cmp
sbb
insl
jmp
mov
pop
imul
fsub
lods
sbb
out
inc
inc
fnstsw
out
jne
add
or
and
sub
jg
add
cmpsb
pop
push
sbb
sub
pop
xor
sub
loope
add
popa
pop
pop
imul
add
imul
sbb
fistpll
mov
xlat
and
pushf
cld
stc
leave
mov
aad
lret
xor
xor
addr16
lea
jnp
xchg
pop
mov
add
add
pop
push
pop
neg
shll
xor
das
das
sbb
cli
cs
addr16
pop
add
pop
loopne
bound
lret
dec
je
jo
outsb
fs
gs
fisttpl
arpl
fnstcw
mov
add
and
mov
lds
jp
dec
mov
iret
in
pop
or
push
inc
push
add
fwait
insl
mov
jne
call
xor
xor
xor
xor
xor
xor
xor
xor
js
jle
pushf
xor
xor
xor
xor
xor
push
ss
ss
ss
mov
mov
aaa
aaa
das
cmp
cmp
cmp
cmp
cmp
cmp
clc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
mov
les
sarb
pop
adc
sbb
sub
stos
ds
sbb
jns
aas
cli
sbb
xchg
xor
xor
push
adc
xor
or
adc
cmpsl
pushl
mov
sti
xor
xor
xor
xor
xor
xor
push
xor
imul
mov
lcall
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
or
pushl
push
xorl
fidivs
call
sbb
and
aaa
xorb
aaa
out
divb
ljmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
mov
sarl
fdivrl
push
cmp
std
ljmp
cmp
cmp
adc
and
cmp
cmp
cmp
cmp
cmp
ds
sbb
sub
das
ds
ds
ds
ds
mov
xchg
ds
lds
in
ds
aas
mov
mov
xchg
xorl
inc
xor
pop
xor
xor
lcall
xor
xor
xor
xor
mov
xor
mov
stos
xor
xor
mov
mov
dec
aaa
inc
cmp
pop
cmp
dec
cmp
cmp
cmp
cmp
cmp
nop
cmp
cmp
cmp
cmp
cmp
cmp
cmp
add
sub
pop
push
mov
mov
ds
jo,pt
jecxz
adc
xor
adc
xor
xor
xor
out
pushl
inc
xor
test
fbstp
in
xor
xor
mov
pop
pushl
cld
pushl
loopne
in
push
xor
jno
cwtl
xor
inc
xor
xor
xor
ret
icebp
xor
xor
xor
xor
xor
xor
xor
xor
jno
mov
pushl
jbe
fwait
ss
ss
xor
mov
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
push
cmp
ljmp
jb
jge
fidivrs
or
adc
pop
cmp
cmp
push
cmp
jae
jg
mov
jg
add
sbb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cs
cmp
dec
bound
jbe
lahf
ds
aas
icebp
xchg
push
outsl
pop
xor
or
xor
xor
call
xor
xor
xor
xor
xor
lock
out
jmp
outsl
xor
xor
xor
xor
xor
xor
icebp
movsb
xor
xor
test
jmp
xor
xchg
ss
aaa
arpl
aam
loope
cmp
cmp
fbstp
outsb
cmovo
dec
cmp
mov
mov
cmp
lock
ret
xchg
cmp
cmp
xor
je
cmp
aas
int3
aas
repz
pushf
pusha
xor
xor
cmp
decl
xor
sub
cmp
xor
xor
and
xor
and
xor
dec
hlt
outsl
jmp
push
and
insb
xor
jl
xor
xor
inc
lea
shlb
or
or
inc
popa
push
std
adc
fdivl
loopne
fsts
xchg
fstl
jl
and
repnz
jg
outsb
jbe
jb
outsb
insl
dec
push
popa
jb
popa
bound
add
mov
mov
outsl
fldenv
or
dec
push
fdivs
aaa
imul
adc
push
outsl
popa
xor
mov
mov
xor
lods
push
jns
insb
dec
jno
insl
inc
adc
or
mov
inc
insb
jne
push
data16
add
pop
rolb
add
fwait
pop
push
divb
push
or
pop
or
jbe
faddp
hlt
inc
jae
push
add
adc
add
add
add
pop
gs
outsl
jo
jo
dec
icebp
sbb
or
xchg
pop
add
add
imul
inc
shlb
fwait
add
push
pop
mov
mov
xchg
dec
addr16
cmp
push
and
push
jnp
or
addr16
gs
fidivrs
add
fwait
pop
sbb
sbb
dec
das
mov
fsubrl
dec
outsb
outsw
and
out
push
fwait
sub
mov
xchg
xchg
popf
xor
filds
jo
jnp
ret
pop
adcl
out
int
or
sbb
andb
inc
js
cltd
sbb
int3
mov
aaa
push
xchg
lods
mov
arpl
adc
add
xor
add
and
repz
lmsw
jl
sbb
fwait
xchg
sub
add
sbb
dec
addb
les
and
push
inc
aam
fldcw
aad
xor
adc
adc
push
out
int3
add
pusha
test
stos
call
frstor
outsb
inc
sub
add
xchg
nop
add
add
add
add
add
call
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
