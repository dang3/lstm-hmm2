std
ljmp
sub
mov
rclb
push
lea
rep
mov
fistl
lea
push
push
call
mov
std
div
test
lea
pop
push
adc
mov
adc
test
je
pop
in
testb
add
mov
mov
lea
enter
test
shr
repz
push
movsl
mov
push
loope
push
rep
call
movb
jmp
pop
pop
pop
pop
add
fadd
nop
add
jne
in
add
add
pop
dec
enter
fbstp
idiv
adc
subb
add
push
lea
fsubrs
adc
lock
jne
out
in
xlat
mov
dec
pop
bound
adc
ja
insb
add
sbb
add
jbe
pop
ja
push
adc
pushf
lock
leave
inc
jne
fistpll
dec
push
push
or
mov
cmp
sub
push
adc
pop
jmp
pushf
and
mov
push
outsl
gs
sub
push
mov
sub
push
push
adc
call
insl
jae
mov
adc
fs
push
imul
lods
test
jp
or
fcompl
push
sub
and
sbb
and
mov
int3
imull
dec
es
stos
add
mov
add
aas
das
sbb
sahf
adc
xlat
add
mov
test
cmpsb
inc
xchg
and
inc
and
cmp
lea
adc
pop
movsb
jecxz
test
inc
push
sub
mov
imul
out
cld
fcoms
outsl
sub
and
fld
cmp
rclb
fldenv
jo
enter
cmp
and
aaa
cwtl
sub
jecxz
add
dec
or
mov
push
sub
je
adc
out
int
outsl
xor
push
push
push
push
mov
push
pop
xchg
mov
cmp
fsubrl
push
subb
cmp
outsb
pop
or
sub
sbb
xor
push
sbb
jl
add
int3
movsl
ret
xor
out
jnp
dec
push
hlt
add
push
das
and
lahf
sub
fstpt
es
add
xor
and
jg
iret
mov
inc
inc
cmp
jl
mov
jo
jge
pop
xor
mov
out
mov
aas
jge
sub
or
adc
mov
and
incl
repnz
mov
and
dec
or
in
mov
je
and
mov
mov
cltd
idivl
ja
pop
mov
mov
aaa
mov
ret
dec
push
popa
cld
ss
mov
pop
negb
or
je
push
inc
das
int3
std
mov
pop
ret
sarl
cmp
fisttps
xchg
add
mov
cmpl
sti
push
xor
test
arpl
jbe
pusha
lahf
lds
xchg
adc
fwait
lea
mov
adc
and
mov
jecxz
repz
dec
or
cmp
or
scas
cltd
mov
sub
inc
and
mov
xor
push
add
inc
pop
std
ficoms
xor
add
sbb
mov
sub
sti
jb
rcrl
mov
dec
push
and
jmp
pop
ret
add
pop
xor
jns
inc
clc
mov
movl
pop
aas
and
or
and
mov
inc
and
push
push
cmp
sti
mov
push
push
mov
dec
mov
push
mov
push
dec
push
ja
das
outsl
pop
cltd
or
pop
inc
dec
push
inc
dec
cmp
dec
dec
shr
int
mov
nop
inc
push
lea
push
cmp
mov
adc
add
je
jbe
cmp
sub
jne
sub
clc
or
push
adc
cltd
lahf
mov
lea
sub
mov
add
jne
je
je
jnp
in
pushf
sbb
ret
popf
std
dec
or
sbb
push
mov
aaa
and
icebp
mov
test
jo
dec
hlt
push
adc
shll
loop
in
das
jne
jbe
lret
fnstcw
es
sbb
push
adc
mov
mov
jno
adc
fildll
adc
or
jno
pop
sub
in
add
sbb
cmp
pusha
sub
fisttpl
mov
mov
fidivrl
sar
ret
jae
fsubr
ret
mov
insb
cmp
ja
les
dec
or
mov
adc
js
sti
mov
orl
enter
ljmp
push
push
lret
add
je
cmp
jb
sub
mov
subb
insb
jl
pop
xor
shr
add
sub
pop
out
mov
mov
mov
pop
fs
and
or
mulb
fisttps
pop
mov
and
sbb
std
and
shrl
arpl
sub
dec
inc
rol
push
push
iret
pusha
lods
sbb
lea
dec
push
dec
or
das
leave
je
jmp
cmp
xor
std
add
xchg
ret
pusha
inc
xchg
rcrb
cmp
das
xchg
rorb
pop
pop
clc
and
pop
mov
pop
neg
sbb
pop
and
and
add
sbb
pop
pop
sti
ret
pop
or
and
push
xor
dec
dec
pop
pusha
imul
pop
into
rorb
cli
adc
cmp
jb
mov
mov
dec
lea
jmp
das
fistl
fs
sub
sub
mov
mov
outsb
cmove
mov
ret
xlat
mov
cmp
jb
adc
dec
mov
jne
xor
inc
enter
pop
push
int
add
xor
adc
add
push
aad
pop
adc
fidivrl
mov
incb
jb
pop
pushl
dec
push
lea
shl
xor
mov
ret
out
in
add
rcll
lahf
jae
mov
jno
mov
mov
insl
fiaddl
adc
inc
cs
jmp
add
pop
fcoms
jns
fisttpl
out
jnp
xor
insl
outsb
fnsave
mov
inc
fsubl
or
pusha
xor
jmp
test
inc
or
lds
cmp
ret
or
mov
mov
pop
xchg
cmp
daa
out
adc
imulb
add
mov
inc
mov
imul
or
dec
pop
sarb
and
adc
sbb
fisttpll
cmp
and
fucom
mov
xor
jae
lods
jbe
cmp
and
push
adc
test
cmp
and
cmp
or
pop
ja
mov
jge
push
arpl
outsl
lcall
or
or
push
int3
popf
cmp
cwtl
fisttpll
and
xchg
cwtl
push
add
xorl
add
fwait
insl
inc
push
and
pop
loop
cmp
xor
or
sbb
loope
xchg
movsb
ret
imul
lret
ret
jno
push
jae
and
rol
out
push
pop
pop
adc
shr
xor
ret
push
mov
pop
xchg
sub
iret
mov
js
sub
neg
fnstsw
ret
ja
fbstp
dec
call
jecxz
inc
inc
xor
add
shl
aaa
xor
sbb
ret
jb
push
sbb
push
sub
and
sbb
mov
out
pop
jne
fs
jo
xchg
pop
xor
add
dec
dec
add
adc
outsb
xchg
pop
xchg
aaa
mov
mov
xchg
data16
movw
nop
mov
sbb
inc
sbb
jl
xor
dec
cmp
cwtl
dec
mov
sbb
push
push
pop
dec
cmpsl
fwait
xorl
xchg
aad
xchg
mov
and
add
idivb
push
xchg
inc
and
mov
inc
or
pop
pop
in
loopne
sbb
pop
pop
dec
scas
xchg
pop
adc
daa
sbb
call
mov
push
inc
je
push
inc
dec
outsl
jo
outsb
sbb
mov
sahf
pop
lea
rcr
jmp
push
sub
add
or
mov
sahf
sub
lea
into
inc
sub
sub
cltd
xchg
test
cmp
jb
rol
pop
insb
dec
cmp
mov
sub
divb
inc
adc
cmp
mov
divb
sub
or
or
testl
addb
adc
nop
ret
mov
inc
or
xor
pop
push
add
xor
or
ret
mov
in
rcr
ret
cmp
jle
inc
ja
mov
adc
jge
xchg
or
aam
mov
push
xor
sub
std
mov
cmp
jbe
cmp
mov
mov
insb
and
and
cwtl
js
fucomi
ja
vunpcklps
fildll
xor
jecxz
mulb
pop
mov
sbb
rorl
out
mov
jg
add
xchg
add
pusha
aaa
push
fisttpl
adc
and
xor
add
and
sub
outsl
jmp
and
in
test
fisttpl
icebp
mov
shll
add
or
imul
adc
sbb
and
dec
mov
add
pop
cmpsl
in
add
xor
mov
adc
scas
adc
lret
push
sub
and
mov
mov
sbb
push
das
mov
lods
pop
mov
je
xlat
ds
js
jae
int
adc
or
push
cmp
int3
push
mov
add
xor
out
outsb
adc
test
add
testb
add
jo
jae
int
cmp
xchg
loopne
xor
dec
jo
pop
and
sbb
dec
push
sbb
adc
int
or
rolb
xchg
std
push
loope
sub
test
cltd
cmp
ja
ret
mov
mov
fisttpl
pop
dec
sbb
sub
and
pop
pop
sbb
dec
and
jne
add
inc
or
jb
js
jo
jne
push
xor
dec
jae
lret
push
fildl
ja
cmpsb
iret
cmc
adc
js,pn
lea
jns
pop
mov
adc
xchg
mov
movb
loopne
adc
fs
mov
jge
daa
lea
clc
adc
push
dec
cmp
jne
and
mov
insb
inc
dec
popa
inc
push
pushw
ret
fstps
cmovbe
and
xchg
mov
pop
fdivl
sbb
or
or
jo
and
flds
push
mov
add
sahf
data16
pop
mov
sbb
je
test
test
mov
lahf
add
cmp
add
bound
ret
mov
fnstsw
add
sbb
inc
xor
lea
sub
mov
sbb
or
and
pop
insl
pop
mov
dec
inc
dec
mov
pop
or
pop
pusha
cmp
add
mov
add
jge
shrl
xor
or
divl
in
in
mov
cmp
inc
pop
jle
cmp
or
cmp
jle
jne
push
and
pop
pop
mov
sbb
push
push
call
sub
in
cmp
cld
add
das
in
push
sbb
stos
js
neg
aam
jmp
ds
inc
push
insl
sti
divb
jl
add
jg
push
mov
and
sub
adc
ret
sub
imul
push
and
cwtl
nop
adc
pop
cli
iret
fildll
or
add
push
stos
les
adc
add
or
mov
add
out
sbb
jge
in
test
mov
cmp
pop
dec
or
dec
jg
cmpl
jne
test
shrb
or
and
xlat
inc
add
push
jo
lea
xor
cmc
mov
sbb
inc
icebp
adc
pop
adc
inc
adc
scas
sub
adc
ss
int3
pop
jnp
jmp
bound
cmc
jecxz
jbe
sub
out
adc
ljmp
loop
lds
push
add
inc
pop
sti
pop
clc
cmp
sbb
test
je
cmp
push
scas
je
inc
push
add
je
es
add
mov
mov
aad
xor
stos
jp
push
sub
test
in
addb
arpl
push
add
adc
out
sbb
pop
add
loopne
shr
outsl
mov
div
xchg
nop
and
idivl
jo
dec
pop
movl
jmp
sbb
sub
sar
jo
insl
jmp
repz
jbe
push
add
sub
pop
ss
push
pop
ret
add
fs
mull
add
out
cld
jbe
jge
in
or
push
push
push
int
imul
pop
jecxz
pop
lahf
sub
andps
fs
pop
mov
cmp
pop
adc
inc
inc
pop
jb
std
mov
loopne
push
inc
sbb
je
sbbl
mov
xchg
or
ja
outsb
sbb
jns
repz
in
and
out
loopne
repnz
adc
jb
adc
lds
aaa
mov
popa
push
call
jbe
adc
mov
outsl
xchg
or
in
mov
push
push
add
dec
ds
std
push
xorl
fsubs
adc
add
popa
lret
and
jl
in
adc
imul
aaa
rclb
push
sub
in
jbe
mov
bound
push
sbb
or
push
sbb
pusha
mov
lcall
push
ret
adc
and
cli
xchg
psrld
loop
or
push
cmp
adc
inc
sti
aaa
mov
pop
enter
inc
adc
jbe
dec
neg
outsl
push
adc
push
push
imul
and
shlb
out
inc
pop
adc
dec
mov
adc
push
sbb
popa
out
lds
or
push
push
push
fsubs
lods
imul
fstps
ret
cld
adc
xchg
or
xorb
je
xchg
and
pop
add
and
pusha
not
adc
loope
xchg
insl
add
lret
push
or
mov
pop
add
xor
xor
dec
add
push
add
test
xchg
popf
add
lcall
xchg
sbb
cmp
mov
shr
sub
xchg
ret
outsb
or
add
xorl
mov
xor
or
adc
add
sub
popf
add
adc
mov
jmp
add
out
and
daa
adc
or
and
mov
xchg
rcll
add
cmp
push
xchg
fs
test
xor
xchg
mov
push
jnp
inc
mov
or
jno
xor
roll
es
sub
xchg
push
add
sub
mov
add
mov
and
xor
push
xlat
lods
or
push
cmc
rorl
ljmp
jns
cmp
insl
scas
cmp
sti
or
pop
sbb
sbb
mov
pop
mov
mov
fidivs
stc
push
or
out
stc
ja
mov
ja
das
fisttps
insb
adc
lock
jmp
icebp
xchg
or
test
dec
cmc
push
jge
lods
ret
sahf
add
adc
adc
in
loopne
orl
idivl
mov
inc
aam
pusha
cmp
lea
xor
roll
jp
and
testb
pusha
xor
push
mov
lret
lea
xchg
jg
dec
inc
inc
lea
inc
dec
dec
mov
in
jmp
add
adc
dec
jl
sub
das
cmp
xchg
nop
pop
insb
inc
sbb
cwtl
test
adc
call
sti
cmp
mov
pop
sub
dec
mov
inc
sbb
and
or
or
push
call
cwtl
mov
in
jbe
cld
or
fndisi(8087
data16
pusha
cmp
inc
xor
insl
mov
and
cmp
pop
and
addr16
cmp
test
pop
mov
sbb
sub
mov
push
jp
push
test
pop
inc
sub
mull
xor
jne
pop
push
lea
cmp
jae
pop
inc
popa
fs
es
ljmp
pop
mov
lea
mov
dec
push
data16
out
and
loopne
cli
aad
inc
push
in
adc
jnp
lret
mov
pop
add
xor
roll
add
add
test
inc
jmp
pusha
pop
inc
enter
pop
jg
dec
mov
or
stc
enter
pop
cmp
ljmp
push
pop
aaa
ljmp
inc
inc
sbb
push
dec
inc
push
clc
cmp
dec
jne
nop
pop
mov
sbbb
add
or
lock
sbb
addb
dec
ljmp
push
dec
xchg
jns
or
fs
push
pop
jae
leave
dec
dec
push
push
mov
jge
push
pop
lea
push
xor
fstl
dec
push
jb
sub
mov
sub
push
pop
xchg
adc
sub
mov
mov
xchg
lods
outsb
adc
push
mov
faddl
int3
stos
pusha
ret
pop
mov
das
and
or
imul
push
pop
jne
xchg
or
cmc
and
jbe
aam
push
dec
dec
test
fs
ja
test
aam
test
inc
neg
push
mov
dec
jg
sub
mov
hlt
out
int3
mov
push
shr
or
sbb
pop
jae
jb
adc
push
mov
pop
mov
and
mov
mov
dec
imul
dec
leave
dec
xor
dec
xor
jnp
inc
sub
in
mov
dec
test
sbb
add
and
inc
test
sub
icebp
test
adc
push
mov
push
inc
mov
popa
mov
fisubl
fcom
pop
sbb
fcomp
jp
jmp
sub
in
cmp
scas
push
adc
push
push
and
orl
fs
dec
cmp
dec
xchg
xor
dec
nop
add
mov
dec
pop
ret
jnp
or
xchg
sbb
push
or
mov
adc
cmp
rorb
testl
inc
iret
fisubrl
enter
cmp
js
test
pop
xchg
push
sub
sbb
push
cld
lock
and
jae
mov
mov
inc
cmp
adc
mov
push
fwait
and
loopne
adc
leave
sbb
xor
push
cmp
cmp
jbe
jp
adc
call
sbb
mov
and
cmp
loopne
jmp
adc
cmp
jo
dec
loop
mov
js
xor
mov
inc
mov
outsl
mov
mov
and
jb
pop
mov
test
xchg
pusha
and
outsl
pop
pop
mov
sub
dec
rcrl
add
loopne
js
je
or
add
cmpb
sub
enter
lods
xchg
sbb
fdivl
add
lret
jne
addb
js
dec
adc
adc
inc
sbb
pop
ljmp
dec
fs
or
jmp
nop
push
hlt
test
stc
add
lds
cmp
dec
int3
lock
adc
xchg
in
lds
inc
ret
ret
cmp
sbb
mov
xchg
and
mov
cmpsl
jp
adc
xor
outsb
insl
or
mov
push
push
inc
pop
pop
pop
lcall
and
mov
push
sbb
xor
sub
loopne
pushf
adc
mov
mov
pop
adc
push
ja
stos
sahf
jl
insb
and
pop
sarb
dec
je
or
ljmp
fnstcw
push
loop,pt
cs
sbb
lret
jo
je
fdivrs
xlat
push
push
adc
or
rorb
jns
lret
xlat
dec
cltd
push
and
ret
push
push
roll
test
push
neg
sbb
aad
stc
or
aas
rorb
call
imul
add
xor
mov
pop
xchg
iret
push
mov
sbb
mov
adcb
in
sub
sub
mov
pop
sub
lret
cmpsb
pop
ss
sub
jg
sub
ss
cs
shrl
xor
add
xor
push
cmp
cmp
cmp
imul
das
sbb
movl
dec
cmp
stc
mov
push
add
pop
pop
mov
sbbb
jae
daa
mov
push
or
sub
jmp
pop
mov
xor
in
ret
sub
jne
out
mov
loop,pn
mov
jne
push
sbb
jb
or
push
ficompl
jnp
icebp
jl
jge
pop
dec
jnp
movsb
and
movl
jle
dec
and
sub
dec
ficoml
aaa
mov
add
test
stc
sub
sbb
enter
and
lods
sbb
pop
and
inc
mov
fisubl
add
mov
mov
cmp
mov
fldt
add
mov
aaa
pop
adc
cmp
insb
rclb
push
jge
or
dec
inc
mov
jle
mov
mov
sub
sbb
int3
adc
xor
or
scas
xor
imul
adc
insb
jo
xchg
jnp
sbb
pop
ret
jg
fidivl
iret
or
adc
call
test
repz
cmp
out
out
mov
jb
mov
adc
mov
jmp
aad
loop
dec
push
cmp
mov
add
push
icebp
pop
or
xchg
repnz
xchg
enter
clc
sbb
enter
sti
jb
and
movsl
in
sbb
add
addr16
fcomi
sbb
pushf
adc
dec
jne
ss
outsb
je
or
inc
mov
std
mov
div
mov
ja
pop
shl
pop
pusha
pop
sbb
push
mov
pop
rorb
fidivrl
add
jne
push
ja
pop
dec
repz
or
mov
xchg
push
add
fnstcw
xchg
dec
add
int
lret
jge
outsl
mov
jle
xchg
mov
sahf
icebp
push
mov
shl
outsb
push
mov
ljmp
cwtl
or
mov
or
mov
inc
mov
lods
mov
sub
inc
sbb
mov
sub
pop
repz
xrelease
pop
pop
popf
nop
inc
jmp
popa
insb
add
push
outsl
pop
nop
xchg
mov
add
xchg
or
orb
push
mov
mov
jno
call
jmp
push
js
add
push
scas
mov
sbb
adc
push
movhlps
movsb
sti
xor
add
sahf
ljmp
or
mov
insl
out
outsl
add
icebp
mov
jg
pop
jmp
lea
sarl
cmp
ja
cmpsl
mov
adc
mov
sub
jmp
mov
aaa
mov
lea
jle
mov
xchg
sub
ss
xchg
push
or
in
mov
or
xor
mov
adc
sub
xor
or
xor
add
xor
inc
imul
xchg
push
lods
mov
jnp
add
mov
xchg
xchg
in
shl
sahf
pop
mov
lods
adc
outsb
or
push
cmpsb
loope
sahf
arpl
les
xchg
in
ret
sahf
xchg
loop
lods
xchg
jb
dec
jb
filds
mov
in
mov
sub
sbb
xorl
mov
mov
add
or
sub
mov
aad
andb
int
sub
adc
adc
cmp
adc
inc
mov
inc
imul
xlat
ficoml
fadds
jle
sbb
cmp
xor
sbb
insb
jmp
jb
xor
xchg
mov
test
push
xchg
jmp
or
mov
or
dec
inc
outsb
hlt
sarl
pop
je
mov
inc
mov
or
and
inc
pushf
adc
outsb
or
dec
mov
adc
or
sub
addl
data16
pop
pop
jl
mov
clc
jmp
push
mov
fcom
sti
cmp
jl
push
push
lock
xlat
jl
xor
dec
adc
mov
jmp
push
sbb
mov
pop
xchg
dec
push
pop
insb
ret
adc
inc
xchg
dec
push
mov
jl
scas
dec
dec
fstl
cli
fdivrl
mov
cmp
lods
in
add
std
jge
inc
add
push
loop
mov
test
test
jb
int3
dec
xchg
cmp
xchg
fldl
scas
add
add
inc
mov
mov
mov
movsl
xchg
or
lea
xchg
aam
iret
fldcw
fwait
mov
fdivrs
loope
xor
rcl
fisttpll
push
push
push
push
rorl
cwtl
xor
or
pop
faddp
cmp
nop
insl
sub
jmp
jg
idivb
jmp
mov
mov
loope
mov
shll
sbb
jae
sbb
sub
ja
inc
mov
sub
stc
imul
adc
mov
jbe
pop
mov
loope
frstor
mov
xchg
out
cmp
sub
sbb
insb
nop
nop
mov
or
loop
mov
add
arpl
dec
push
jmp
push
jge
jl
and
xor
mov
mov
xorb
sub
push
mov
inc
cmp
ss
ret
adc
adc
xor
outsb
adc
rclb
xchg
cmp
cld
jl
cmp
jle
pop
cwtl
enter
adc
jae
pop
cmp
jg
xchg
and
xorb
jl
stc
sub
shrb
cmp
inc
push
add
dec
cmpsl
ja
adc
add
xchg
push
and
push
imul
daa
jp
sbb
adc
add
stos
stos
inc
mov
arpl
mov
mov
insl
cmp
mov
mov
jne
insb
dec
adc
pop
mulb
movsl
outsb
aas
pop
add
push
out
add
shll
cmp
mov
ds
inc
stos
sub
inc
add
in
ss
dec
cld
dec
lds
xor
sarb
jg
lea
mov
mov
fsubr
sub
shl
mov
mov
mov
pushf
fisttpl
pop
xlat
fstl
pop
adc
pop
jae
push
nop
jge
orb
das
ljmp
cli
fildl
or
push
sub
push
mov
push
dec
or
add
shl
pop
inc
jne
mov
jl
imul
add
rorb
testb
sub
cmpsb
pop
mov
movb
rcll
and
jg
add
movsl
negl
push
mov
shlb
aaa
cmpsb
sub
dec
outsb
sbb
push
sbb
mov
cwtl
mov
mov
jbe
jne
dec
mov
mov
xlat
inc
adc
jmp
mov
fwait
push
mov
sbb
insl
push
mov
add
pop
hlt
add
mov
or
mov
add
sbb
es
inc
in
push
imul
add
add
inc
std
dec
mov
outsb
cmp
jge
add
outsb
js
popf
ja
sub
push
outsb
xor
je
aad
pop
xorl
fdivrs
mov
repz
mov
mov
xchg
scas
push
clts
or
xchg
outsl
lret
sub
push
cs
xchg
inc
xchg
pop
inc
mov
and
push
jg
jle
add
xchg
gs
jle
mov
mov
cmp
mov
cmc
mov
mov
pop
pop
pop
pop
xchg
jle
sbb
inc
popa
movaps
adcb
or
cld
push
enter
cmp
vsubpd
add
dec
cmp
mov
pop
jne
cmp
outsb
mov
mov
and
inc
iret
xchg
xchg
outsb
xor
imul
pop
sbb
jp
xchg
mov
adc
test
sbbl
sbb
cmp
leave
xorb
popa
mov
xchg
test
add
xchg
push
inc
lret
push
sbb
rcr
mov
stc
jmp
inc
dec
pop
cmp
ja
or
xorl
dec
cmp
mov
or
rolb
mov
mov
sarb
push
jle
xchg
xor
mov
js
xchg
sub
cmp
js
lret
cmp
iret
out
pop
mov
shrl
push
xchg
mov
mov
mov
pusha
pop
jp
jne
into
mov
test
ficoml
ret
push
adc
or
add
sub
addw
int3
sub
rol
pop
lock
xchg
xchg
inc
add
mov
mov
xchg
add
jne
cli
or
and
ss
leave
push
mov
mov
inc
or
push
add
inc
mov
dec
or
cmc
int
inc
mov
fistps
orb
xchg
xor
jecxz
add
out
inc
jmp
jecxz
popa
rol
insb
add
mov
dec
mov
mov
loop
mov
fs
int3
pop
mov
nop
cwtl
push
sbb
bound
pop
adc
inc
add
pop
test
pop
mov
cmpsb
push
cmp
test
sbb
xchg
mov
shlb
inc
das
nop
xchg
or
push
pop
xor
cmp
nop
xor
lret
cmp
inc
ret
fs
push
pop
push
data16
lods
lds
iret
adc
push
push
xor
xchg
addb
scas
mov
fwait
out
mov
fstpt
icebp
cmp
jle
fsubs
sbb
cmpsb
call
mov
or
push
pop
int3
test
push
cmpsb
cwtl
lret
fsub
out
push
scas
popf
in
cmp
jo
lods
daa
fs
mov
xor
fwait
or
idivb
add
movsb
ret
cmp
fidivrs
lret
pop
xchg
mov
mov
xchg
jo
dec
or
jmp
push
mov
andl
jmp
mov
shr
icebp
cmpb
mov
mov
jp
cmpsl
or
mov
popa
push
xor
inc
mov
or
sbb
jns
sbb
les
popf
aam
into
enter
sbb
mov
cmp
loopne
outsb
add
xchg
push
lock
enter
out
xchg
loope
adc
xor
lret
ja
mov
adcb
in
add
inc
bound
inc
jle
xchg
add
mov
and
pop
lea
sub
lods
inc
xor
push
rorb
cmp
rcrb
dec
jne
push
sbb
in
sbb
std
cmp
pop
pop
jge
mov
inc
sub
inc
xor
rorl
shr
cmp
pop
sbb
pop
inc
pop
mov
pop
mov
ret
push
push
shl
and
or
shr
shl
dec
in
adc
call
xchg
jle
cmp
jo
inc
pop
xor
sub
mov
cltd
sarl
xor
xor
inc
pop
sub
push
xchg
data16
push
add
add
push
sbb
dec
dec
je
xchg
push
lock
aad
aad
inc
aam
adc
lods
mov
rcl
jle
enter
rolb
xlat
or
aad
adc
and
into
or
sahf
pop
ficompl
add
sbb
add
mov
push
inc
mov
pop
add
dec
je
ret
xor
push
xor
test
aaa
ret
iret
add
add
movsb
sbb
not
je
testb
push
insb
lcall
mov
xor
or
nop
mov
clc
outsl
push
xor
inc
dec
jne
cmp
nop
aam
mov
out
shr
mov
cmp
aam
mov
inc
inc
loope
jecxz
push
xlat
jbe
sbb
int3
aas
rorb
push
lock
mov
push
cld
push
or
int
inc
and
sbb
jl
lods
cmp
add
push
mov
and
ret
clc
xor
lea
mov
xchg
add
rcr
lret
aam
jne
bound
and
cld
xchg
xor
ds
or
mov
add
in
pop
mov
adc
dec
and
and
xchg
push
sbb
shll
mov
iret
cmp
roll
pop
sub
mov
mov
inc
dec
push
push
xchg
sbb
dec
add
xchg
sbb
fmuls
xlat
adc
dec
pop
dec
cs
or
sbb
test
mov
adc
mov
xor
imul
cmp
xchg
sub
dec
mov
sbb
push
push
mov
sbb
inc
cmp
lcall
or
sti
and
aam
or
lret
adc
ret
or
add
inc
adc
sub
and
iret
jnp
clc
fs
cmp
out
sub
pop
js
inc
ss
test
push
test
js
jmp
negl
fidivrs
pop
mov
dec
and
add
and
jne
lock
fists
push
jns
sarb
and
push
je
jmp
fdivs
mov
xor
pop
push
repz
jbe
add
mov
and
add
lea
insl
stc
repnz
xor
add
adc
bnd
xor
sbb
and
mov
jnp
je
xor
xor
pop
jae
sti
dec
jae
loop
in
push
dec
xlat
push
in
mov
adc
pop
cs
out
cmp
call
sub
mov
and
sub
pushl
sbb
pop
sub
lds
mov
out
mov
lds
out
or
cmp
jae
and
sti
mov
pop
sub
mov
xchg
pop
dec
ss
ss
mov
call
movsl
fs
inc
sbb
into
sub
sub
jbe
mov
fs
fnsave
ljmp
mov
mov
add
icebp
push
mov
ljmp
pop
jne
lret
pop
add
pop
push
and
jbe
mov
outsb
outsl
mov
push
jmp
and
mov
inc
inc
inc
or
ret
int
sbb
jmp
mov
arpl
es
inc
repz
inc
push
mov
push
in
mov
push
cmp
jae
mov
popf
push
loopne
call
fwait
cld
add
push
sub
cmp
pop
jmp
test
je
movl
adc
adc
ret
arpl
or
inc
and
mov
mov
inc
pusha
clc
lea
ret
mov
es
sub
add
xor
lock
out
adc
imul
inc
js
mov
lods
and
loopne
js
and
rep
jbe
add
inc
stos
test
aad
mov
incl
lea
dec
jne
xchg
stc
and
mov
jo
mov
test
and
mov
pop
mov
dec
jns
pop
jae
cmp
xchg
push
js
and
subb
or
mov
stos
sub
add
push
adc
or
mov
or
and
aad
scas
or
das
mov
ret
mov
fwait
insl
dec
cmp
sar
jbe
jae
sbb
insb
arpl
and
outsl
push
cmp
idivl
aaa
stos
int
cmp
sub
jno
jle
cli
popa
in
cmp
cmc
sub
inc
pop
shrl
jno
mov
sti
jne
insb
cmp
je
outsl
add
pop
add
or
ret
xchg
jbe
push
mov
pop
sub
pushaw
and
sub
mov
sbb
fldl
inc
push
lds
mov
or
jbe
sub
aas
dec
pop
or
int3
int
inc
in
pop
xor
adc
ss
into
sub
add
scas
imul
add
leave
dec
xor
push
std
mov
xlat
fmull
sub
hlt
loopne
adc
cld
push
ja
imul
jnp
insb
pop
jl
outsl
sbb
adc
rorb
sub
lock
xchg
jge
jbe
ja
int
inc
adc
sub
fisttps
xchg
or
mov
sbb
pusha
data16
adc
les
or
enter
cmpsb
and
outsl
insl
inc
lods
std
xor
mov
test
je
mov
mov
lea
and
add
adc
push
and
jge
incb
cmp
and
push
cmp
out
add
test
jne
xchg
mov
test
add
inc
pop
sbb
je
fistl
mov
cmp
fadds
add
adc
cltd
mov
shrb
pop
cmp
adc
mov
lret
aad
shll
lea
ds
sub
and
sub
rcll
sbb
in
sbb
rcll
ret
pop
lods
aaa
or
nop
fstpt
jb
rolb
mov
add
xchg
xchg
xchg
add
push
daa
shll
scas
and
mov
mov
out
pop
jo
xchg
jae
movb
xchg
into
fdivl
ljmp
add
pop
mov
and
ds
push
xor
jle
pop
aaa
shr
cmc
or
mov
dec
dec
lret
push
or
mov
test
jns
mov
xchg
aam
add
pop
jle
push
mov
arpl
xor
jg
addl
clc
lea
loopne
divl
ljmp
add
clc
dec
cmp
adc
cmp
je
test
iret
adc
or
push
inc
jecxz
push
or
les
test
pop
jg
stc
xor
lock
iret
xor
js
or
testl
and
or
out
xorb
pop
pop
je
inc
cld
cmp
je
sar
ss
out
cmp
je
test
je
pushf
adc
lods
fnsave
jmp
sub
testl
jle
push
sub
or
inc
call
add
lea
jmp
add
pop
fimuls
cmpb
les
decl
mov
js
sbb
and
pop
xchg
sub
and
push
mov
pop
xor
ret
ljmp
iret
int3
push
or
sbb
mov
push
jnp
jmp
push
jnp
mov
and
fildl
call
icebp
cmpsb
pop
ds
inc
cmpsl
ret
xchg
or
fsubr
insb
or
mov
aaa
jo
jns
outsl
pop
rorl
push
insl
jle
mov
mov
jne
or
dec
xor
cmp
inc
mov
fwait
out
fdivr
sbb
arpl
add
pusha
cmp
rclb
jbe
mov
xor
bound
jge
loope
rolb
aas
movzwl
push
pop
sbb
jp
scas
fldenv
sub
and
pushf
mov
sarb
or
mov
ljmp
mov
cmp
add
lret
insb
aad
rorl
repz
and
aaa
fcoms
pop
and
sbb
in
xor
jg
loopne
mov
cs
clc
rcrb
cmp
mov
adc
fisubrs
mov
adc
adc
xchg
push
aas
push
and
fbstp
and
or
jo
out
cld
adc
int3
adc
filds
pop
fidivs
hlt
jns
push
push
lods
inc
adc
xchg
and
pop
aas
ss
mov
add
inc
xchg
push
jne
push
jg
push
lods
outsb
mov
fucomip
xlat
mov
jmp
jnp
xchg
loope
push
sbb
lock
sti
mov
push
out
or
cld
jbe
adc
cmp
addr16
leave
push
or
add
test
and
lret
xor
adc
pop
add
data16
add
mov
decb
and
sbb
out
or
test
or
adc
lock
adc
adcb
inc
pop
lcall
pop
mulw
or
push
je
pushf
stos
pop
mov
dec
testb
sti
std
sub
add
adc
xor
mov
sub
xor
incl
sar
repz
mov
lea
jmp
mov
cld
dec
adc
inc
add
fidivs
jl
xor
mov
mov
jmp
popa
sbb
mov
test
in
lahf
orl
sub
adc
icebp
ret
pop
mov
pop
adc
in
dec
xchg
dec
inc
xor
sbb
outsb
pop
loope
push
inc
add
in
add
mov
fistl
sbb
mov
imulb
icebp
dec
les
adc
mov
and
add
jg
movsbl
mov
lods
ret
mov
int
je
add
pop
xchg
les
movsl
mov
test
sub
mov
inc
dec
clc
call
faddl
aam
pop
aaa
dec
outsb
xchg
mov
gs
cmp
je
mov
dec
int
mov
mov
inc
cmp
or
or
adc
xchg
inc
xchg
addb
jbe
sbb
mov
jge
lods
jnp
idivl
daa
mov
mov
mov
shr
jmp
mov
clc
pop
rolb
push
aaa
dec
insl
jns
imul
je
ja
sbb
add
adc
and
lcall
adc
jle
xor
push
inc
inc
enter
jb
sbb
and
cltd
or
gs
imul
add
xchg
in
add
pushf
pop
jo
add
sbb
xchg
loopne
push
push
clc
addr16
add
adc
sti
or
push
pop
call
add
jo
insb
adc
test
fidivrl
xor
aad
pusha
sub
sti
je
mov
clc
sbb
test
insb
pop
scas
dec
hlt
dec
sbb
or
fiadds
mov
dec
xchg
or
and
out
inc
jmp
and
les
and
mov
fnstenv
lods
int
clc
sub
pop
or
cltd
pop
sahf
js
cmc
xor
sub
test
in
ret
xchg
andb
ds
mov
aam
je
add
je
dec
stc
fstpt
pop
cmp
pop
mov
lock
ds
and
aas
sub
sub
pop
pop
push
mov
jae
push
xchg
push
or
push
and
imul
push
adc
insl
lcall
clc
jle
mov
testl
and
add
xor
jnp
je
mov
push
jmp
push
push
xchg
ljmp
or
dec
mov
inc
dec
inc
pop
mov
mov
mov
adc
daa
sbb
push
pop
orl
pop
and
or
adc
call
test
inc
insb
push
inc
sub
repnz
ret
sub
add
popf
push
mov
loope
loopne
aaa
lods
aas
aaa
aaa
push
mov
shl
daa
cmp
rol
mov
sar
inc
sbb
lea
or
or
es
insl
cmp
push
js
xchg
int
outsl
mov
adc
inc
ljmp
mov
or
inc
jmp
inc
and
cmp
push
cld
push
inc
adc
and
sbb
mov
mov
push
cmp
lcall
lds
je
cmp
sbb
add
popa
or
rcrb
cmp
repnz
jmp
pop
shll
je
xchg
sbb
mov
add
js
rorb
loopne
fisubl
out
test
in
push
or
mov
jge
sbb
idiv
shl
cmpl
dec
les
or
mov
das
call
test
lock
mov
xchg
push
push
sbb
add
add
adc
or
jge
add
int
mov
mov
jmp
push
sub
jnp
jb
xchg
add
jae
sbb
pop
xlat
push
push
or
add
sbb
add
lods
enter
cld
test
xor
test
mov
stc
lods
sub
or
je
and
fdivl
sub
add
sbb
adc
sub
es
movsl
adc
ljmp
push
adc
xor
push
fs
mov
mov
pop
jae
inc
add
mov
lea
add
mov
fnstenv
aaa
dec
jle
lea
push
cmp
pop
add
dec
fildl
adc
mov
lock
ja
add
movsl
mov
jmp
aaa
dec
insb
test
ficoms
fadd
and
dec
test
add
or
dec
shrl
push
add
test
imul
pop
mov
js
adc
mov
loopne
out
incl
hlt
pop
or
dec
orl
mov
lahf
into
loopne
test
mov
sarb
adc
mov
mov
cmpl
pop
and
pop
sub
pop
mov
cmp
es
in
xor
push
inc
sbb
ss
dec
inc
xlat
jl
dec
loop
ret
xor
je
cwtl
jmp
mov
arpl
in
push
mov
cld
sbb
sbb
ljmp
adc
fisttpl
add
repnz
xchg
pop
and
push
add
push
orb
adc
and
ja
add
push
cmp
jmp
cltd
in
sub
dec
push
dec
lock
addb
and
popf
std
sub
xor
push
lea
cmp
ds
lock
mov
xchg
sub
ret
in
pop
filds
xchg
sbb
adc
idiv
and
adc
xchg
dec
jge
ret
cmp
stos
jae
push
adc
sahf
movb
jge
xchg
arpl
bound
and
sub
imul
arpl
ljmp
add
add
testb
push
popa
sbb
or
sbbl
insl
mov
dec
enter
add
fwait
in
add
push
cmp
jge
xor
sub
add
js
outsb
jg
adc
dec
jne
mov
xor
jge
mov
shlb
cmp
pusha
adc
repnz
aas
dec
cmp
lea
and
add
in
aad
repz
mov
pusha
popa
push
rol
or
scas
and
xor
cmpsb
mov
inc
lahf
and
data16
push
test
lock
je
jmp
outsl
push
dec
jo
mov
cmp
or
lea
cmp
adc
sub
inc
add
or
adc
jp
idivb
jne
mov
inc
pop
adc
inc
jg
popa
popa
fiaddl
jecxz
fistl
mov
or
inc
or
mov
xor
add
jmp
pop
or
sbb
fildl
sub
daa
cmp
jne
dec
mov
cmp
cmp
std
add
call
fadd
or
pop
cmp
or
fwait
or
push
or
call
jbe
mov
push
xor
ret
cmp
cs
jnp
sub
ss
outsb
dec
adc
jbe
add
aaa
jne
pop
incl
mov
add
adcb
jnp
mov
mov
push
aas
mov
dec
das
mov
cmp
mov
mov
clc
xchg
sub
jle
imul
insb
mov
jecxz
mov
or
daa
and
push
int3
test
push
xor
lea
fstpl
sbb
adc
andl
lret
sub
jge
mov
mov
sub
add
adc
and
pop
es
inc
cmp
mov
mov
and
sbb
cmp
mov
inc
inc
or
jmp
or
notb
inc
sbb
inc
push
and
add
inc
addl
add
gs
insb
push
fidivrs
jne
jae
or
imul
test
scas
mov
inc
sub
pop
pop
enter
loope
lock
adc
add
or
sti
adc
inc
jmp
xchg
sub
mov
jo
xchg
inc
cmp
or
jecxz
popa
fdivrs
add
or
jle
sbb
sbb
mov
dec
in
in
filds
movb
inc
mov
jne
cmpb
cmpl
mov
out
push
sub
addr16
sub
dec
sbb
sbb
scas
int
or
adc
pop
sbb
gs
xor
push
and
add
leave
mov
rorl
insl
adc
sub
negb
lea
shrb
je
arpl
pop
push
and
sub
aam
sti
pop
ljmp
andl
lcall
or
stos
xchg
ss
ret
push
jae
sub
or
jne
push
repnz
das
pop
lea
mov
pop
push
lds
push
insb
call
dec
add
xor
and
and
mov
adc
pop
add
add
pop
ret
jmp
movsl
xchg
mov
test
outsl
sti
adc
je
inc
cmp
add
sub
inc
push
push
pop
rclb
stos
sti
cmpsb
cmpsb
andb
orb
push
dec
cmp
and
lcall
inc
push
orb
xchg
sbb
stos
in
xor
addl
adcb
mov
cs
or
loope
pop
rcl
les
inc
jne
mov
mov
or
in
mov
lea
jl
jbe
xor
gs
push
mov
cmp
jle
pop
lea
andb
mov
jo
sarl
insb
mov
les
inc
mov
jle
jb
je
mov
outsl
lea
roll
add
jne
movsl
jo
mov
mov
repz
pop
test
das
mov
sbb
shr
inc
inc
lahf
fwait
jl
push
xchg
js
iret
in
cmp
push
fdivs
cmp
add
mov
negb
mov
dec
inc
aam
cmpsb
mov
mov
pop
push
data16
mov
adc
orb
les
xlat
imul
add
ljmp
fwait
mov
adc
jle
push
mov
pop
pop
sub
cmp
jne
cmp
das
aad
or
sbb
sbb
mov
mov
cmp
test
bound
and
push
insl
out
daa
fwait
nop
js
cmpl
daa
jno
or
or
push
xor
scas
cs
pop
out
xor
sti
in
cmp
sub
lea
cmp
rolb
popa
jl
cmp
jg
sub
mov
inc
cmp
jne
shrb
push
ds
leave
push
cwtl
mov
sbb
dec
arpl
sets
out
dec
pop
or
adc
push
sbb
push
addr16
push
push
jl
pop
je
push
mov
loope
or
xor
arpl
pop
jne
push
pop
cmp
loope
aam
push
push
and
jge
lcall
jb
lock
push
push
pop
lds
add
mov
shll
push
jmp
add
testl
inc
rclb
mov
sbb
push
in
or
xchg
mov
pop
shl
jl
inc
or
insb
push
cmp
imulb
jp
pushf
pushf
ss
pop
mov
outsl
dec
testl
add
pmuludq
mov
mov
insl
push
push
lock
pushl
pop
jle
jbe,pn
xor
dec
icebp
cmp
sub
sub
aaa
mov
mov
insl
pop
lock
pop
jl
add
adc
rol
sti
in
fbstp
push
or
ret
popl
xor
mov
fs
jno
add
push
sub
push
inc
add
add
sbb
xorb
fldt
add
imul
ret
int3
push
inc
xor
pop
inc
xor
jnp
xor
or
cld
mov
dec
testl
in
orb
mov
fsts
cli
jnp,pn
shll
mov
mov
inc
push
push
lea
test
pop
pop
inc
or
int3
lods
stos
jnp
js
and
and
pop
int
sbb
leave
push
jo
insl
fimuls
mov
push
or
or
sbb
mov
ljmp
aas
loop
and
push
inc
mov
adcl
cs
mov
loope
lock
mov
lock
or
ljmp
mov
cld
ds
mov
sbb
adc
lock
ds
out
fisubl
inc
cmp
push
fisubrs
mov
xchg
sbb
sbb
pop
sbb
sub
jo
fstpt
es
test
jne
icebp
adc
pop
xchg
pop
sti
data16
adc
dec
jmp
or
mov
test
inc
fistpll
sub
aaa
cmp
mov
sbb
add
push
testl
push
fisttps
lea
push
or
cltd
sti
and
mov
rcll
sbb
aad
adc
cwtl
daa
cld
call
pop
imul
jns
xor
and
ljmp
aam
sbbl
add
dec
push
fs
inc
shll
add
jp
inc
xchg
shll
jp
fldenv
hlt
mov
mov
add
outsl
xor
cmpb
fsubs
adc
sub
sub
and
pop
rcll
loope
imul
push
xor
sub
adc
hlt
jns
shr
iret
imul
inc
int
sbb
cltd
decb
adc
out
adc
and
add
in
lds
or
ret
jne
loopne
mov
aas
jbe
push
pop
mov
mov
mov
push
mov
mov
add
and
shrb
pop
mov
andl
cmp
fs
and
pushf
mov
scas
shrb
cltd
call
lea
pop
add
dec
pop
push
push
or
mov
or
pop
sarl
lods
in
jecxz
hlt
mov
filds
clc
adc
sti
add
je
pop
cmp
outsb
imul
dec
fiadds
roll
mov
jle
cmp
adc
cmp
je
enterw
xor
sbb
cld
fbstp
lret
shr
not
and
add
pop
lea
mov
sbb
mov
push
inc
int
mov
dec
cltd
dec
jbe
or
lret
mov
dec
dec
jne
pop
dec
jge
cmp
push
loop
sbb
mov
pop
shrl
or
pop
xor
lret
push
mov
cs
add
mov
or
mov
inc
mov
jae
in
xchg
mov
push
cmovo
pop
jne
sbb
sbb
sub
and
sub
ljmp
mov
ss
ljmp
adc
data16
loope
pop
or
loope
or
or
adcb
fwait
mov
pop
xor
wbinvd
push
or
cmp
andl
and
decb
or
fadds
sarl
orl
or
js
imul
imul
adc
adc
repz
push
outsb
scas
shl
enter
fstl
shrl
xchg
in
push
lea
test
rorl
loope
xor
cmp
and
insl
or
push
and
mull
pop
je
andb
push
ret
subb
pop
pop
mov
aaa
and
stc
add
cmp
jge
into
decl
or
mov
jmp
mov
cmpl
fisttpl
cmp
cmp
xchg
or
and
mov
or
std
rclb
pop
cld
sbb
cltd
nop
out
ja
jne
mov
cmp
es
mov
out
jne
and
es
pushf
mov
jmp
es
in
sbb
push
add
je
jnp
jne
pop
pop
ret
sbb
inc
test
imul
sbb
and
mov
ficoml
cli
adc
in
popa
lahf
test
pop
nop
inc
mov
mov
adc
xchg
in
jo
push
fldl
orl
pop
mov
mov
pop
push
stos
mov
cmp
xlat
je
mov
add
dec
dec
push
into
xor
push
fs
lret
in
incb
testl
cs
cs
push
dec
cmpl
outsb
sub
negl
dec
jno
lods
bound
jge
add
std
int
loope
mov
in
and
mov
push
cltd
fiadds
decb
jne
jns
and
jmp
lds
sub
adc
cwtl
sub
inc
sub
pop
je
jp
jg
jl
or
and
or
or
icebp
fdiv
outsb
in
mov
mov
add
mov
fs
sub
fistpl
xchg
or
adc
mov
pop
mov
into
shr
or
or
das
fcmovnb
ds
sub
sub
mov
mov
in
mov
xchg
mov
subl
xchg
pop
add
mov
jne
add
and
adc
cld
lahf
shlb
lea
jne,pt
scas
shl
sbb
sbb
mov
push
outsl
adc
dec
xchg
fisubrs
inc
add
add
inc
mov
mov
sbb
push
test
xchg
nop
addl
mov
bound
enter
les
or
add
push
inc
mov
xor
inc
sub
push
fldcw
push
sbb
adc
jbe
stc
lods
mov
xor
lds
sub
push
add
add
cmpb
xchg
testb
mov
fcmovnb
dec
loopne
ret
mov
imul
push
or
adc
call
push
sti
test
out
iret
push
mov
addb
xchg
jmp
jbe
lea
inc
rcrb
movb
ja
jl
dec
repnz
cld
push
movl
lock
push
out
and
jge
movl
sbb
inc
std
dec
or
inc
jmp
in
ret
mov
or
popl
sahf
inc
inc
mov
aas
jecxz
inc
inc
mov
or
hlt
shl
fstpt
mov
and
ret
ret
stos
js
rolb
dec
int3
mov
mov
sbb
mov
sub
sub
sub
or
pusha
clc
ret
adc
add
daa
or
stos
pminub
sbb
add
jp
lock
jno
insb
mov
sbb
mov
mov
xor
clc
insl
cmp
add
lea
mov
hlt
jle
or
adc
imul
and
dec
inc
mov
mov
std
xchg
adc
sarl
icebp
xchg
cmp
push
movsl
call
add
cmp
jae
orb
pop
add
movl
adc
daa
push
nop
adc
cmp
push
les
cld
int3
adc
cmp
or
or
sqrtps
dec
insb
pop
inc
mov
push
scas
test
push
xchg
jb
push
sub
mov
lods
pushl
cmp
fldt
addr16
push
aas
mov
rolb
add
jns
test
outsl
adc
inc
pop
sbb
push
fs
sbb
push
jmp
std
cs
sub
jge
test
pop
dec
mov
je
cmpl
pop
or
in
push
inc
and
fxch
ret
or
push
cli
out
pop
xor
ss
movsb
je
lods
insl
mov
sbb
pop
lea
mov
mov
aaa
push
xchg
sbb
add
movb
sub
aaa
data16
xor
cmpsl
test
xchg
add
call
loope
jb
dec
fmuls
and
data16
lock
push
sub
pop
rol
sti
inc
or
add
pusha
inc
add
bound
add
push
enter
mov
or
mov
add
and
cmp
add
pop
jmp
adc
and
push
adc
fsubrl
pop
fwait
xor
setbe
push
mov
inc
and
imul
fwait
jle
or
ret
stc
jae
mov
ffreep
mov
xlat
cmp
jl
cmp
jbe
push
xor
xchg
sbb
push
add
arpl
jb
jns
popf
pop
jle
mov
jae
mov
cmp
jl
dec
add
cld
dec
sbb
dec
cmpl
jb
mov
mov
inc
cmp
cmp
or
pop
mov
mov
push
mov
or
adc
aas
insl
pop
testb
or
mov
xor
testl
ja
cmp
sbb
fadds
adc
pop
divb
mov
add
mov
push
lret
repnz
cli
dec
mov
shlb
mov
adc
int
push
orb
fcom
cld
mov
inc
pushf
mov
out
imul
jmp
ss
mov
movsl
loop
cmp
sbb
repnz
sbb
sbb
lret
mov
sub
sub
push
or
lea
and
xor
je
hlt
mov
sub
mov
push
sbb
jne
mov
sub
pop
and
sub
lea
push
mov
cli
sub
or
cmc
inc
or
lea
push
ret
mov
popa
jb
pop
mov
mov
pop
add
sub
jae
mov
arpl
push
mov
inc
push
dec
hlt
aas
jno
cmpsl
add
cmpb
aad
mov
adc
repz
sbb
das
jl
add
cmp
inc
inc
dec
push
jae
loope
pop
test
dec
imull
jbe
mov
sbbb
lahf
jnp
insl
in
repz
jae
lea
divl
jp
aam
insl
push
xor
fdivl
pop
and
sub
fistl
or
stos
sbb
negl
or
shr
ret
sub
in
or
jb
out
jmp
lcall
rcrb
mov
and
push
mov
pxor
and
cmp
rcll
in
jae
ret
sub
out
sahf
push
icebp
jmp
testb
je
push
xchg
jne
fists
scas
pop
movb
add
dec
or
ret
add
mov
sbb
xor
xchg
push
or
xchg
xchg
pop
jmp
pop
andb
faddl
adc
or
sbb
pushf
mov
jl
lods
xchg
int
mov
mov
insl
roll
shll
sbb
mov
fldl
mov
push
and
es
mov
add
into
jle
ret
mov
push
push
and
xchg
xchg
mov
xorb
cmp
mov
inc
cld
nop
out
cs
sahf
in
outsb
imul
decb
dec
adc
or
mov
cmp
push
or
pop
mov
movb
inc
mov
rorb
cmp
inc
int3
xchg
adc
lea
hlt
adc
imul
inc
lods
fnsave
jl
or
fistl
mov
mov
pop
push
pop
cmp
xchg
inc
and
mov
adc
lea
mov
adc
or
xchg
xor
ficompl
sub
sbb
pushf
popf
mov
lret
je
xor
or
and
sbb
cmp
adc
rorl
mov
insb
sbb
addl
jle
test
inc
mov
or
cmp
mov
rcrb
lea
mov
icebp
mov
and
pop
adc
or
fnstsw
adc
loopne
push
pop
pop
add
or
mov
mov
mov
insl
cmp
mov
and
lods
stos
and
outsl
stos
adc
xor
inc
mov
sbb
rclb
jne
sbb
sbb
stos
cmp
push
jl
dec
loopne
pop
nop
es
ret
xchg
push
lock
orl
xor
inc
incb
xor
push
mov
push
cmpb
arpl
int3
scas
loop
xchg
add
shl
flds
lock
add
inc
push
jne
adc
mov
mov
push
shll
ret
call
sub
xchg
and
jns
xchg
sub
push
ja
jmp
dec
mov
mov
call
ret
or
adc
push
push
pop
sbbb
sbb
insl
or
cmp
rcrb
dec
xchg
gs
loop
sbb
call
or
mov
sbb
outsb
adc
xchg
push
ss
adc
pop
in
add
or
pop
or
mov
jne
jne
and
or
shr
inc
jbe
push
in
push
lds
popf
jne
push
fcmovnbe
ljmp
pause
mull
jp
lea
out
jb
cmp
ja
ja
or
sub
dec
dec
pop
mov
iret
outsl
call
outsb
push
outsb
fsubrs
aaa
jmp
outsb
fwait
and
adc
fdivs
jne
adc
push
or
fst
mov
mov
or
fisubl
or
adc
iret
mov
xchg
add
mov
inc
jb
dec
shlb
inc
sbb
dec
scas
mov
test
push
fwait
ljmp
mov
lcall
fucomi
push
or
mov
lea
cmp
je
scas
xor
js
ss
push
mov
aaa
cwtl
push
pop
and
pop
mov
mov
test
rep
stos
mov
mov
jge
xchg
mov
dec
out
mov
shrl
xor
xchg
fadd
sbb
push
add
aam
dec
cld
adc
cmp
cwtl
xchg
shll
inc
subl
xchg
adcb
mov
xchg
andb
nop
inc
inc
stos
cmc
inc
inc
cmpb
lds
push
sbb
mov
or
add
jo
dec
mov
in
mov
lea
shld
ret
mov
jns
xchg
test
sbbl
cmp
pushf
cmp
cs
or
push
jo
lea
add
or
fwait
xor
add
push
add
inc
ret
jnp
mov
and
inc
js
lods
popa
dec
jo
and
inc
in
adc
push
pop
ss
dec
sub
or
dec
je
add
ja
insb
xchg
icebp
add
in
or
adc
pop
xor
aaa
inc
mov
stos
mov
mov
mov
inc
mov
push
mov
cld
sti
xor
push
xor
mov
in
cmc
std
pop
or
add
hlt
mov
movb
fistps
push
push
lea
mov
dec
int3
adc
outsl
sub
mov
inc
mov
push
stos
adc
loop
stos
inc
inc
mov
mov
sub
mov
lea
jle
mov
push
mov
fnstenv
and
sbb
pop
leave
enter
sar
push
out
pop
pop
lret
push
insl
mov
je
push
cli
fidivs
jg
adc
nop
shr
sbb
je
add
and
mov
sbb
cmp
mov
outsb
cwtl
adc
add
stos
dec
fcmovnu
add
mov
in
int
lret
jb
jp
push
and
and
loopne
pop
push
jo
dec
mov
push
or
pop
cld
sub
adc
inc
sub
cli
push
inc
loopne
add
or
sbb
cmp
xchg
pushf
xor
and
push
jns
imul
std
jmp
sub
or
sbb
inc
shll
xor
out
lds
rclb
pop
sahf
addr16
lods
adc
das
lea
divb
ret
pop
push
js
jno
cmp
data16
inc
insb
dec
push
cmpsl
or
mov
cltd
dec
adc
inc
push
or
sarl
decb
sbb
clc
test
mov
outsl
inc
ljmp
rep
jmp
mov
jns
push
enter
xchg
xlat
in
lcall
cld
xchg
nop
add
movsl
ss
mov
push
mov
pop
jae
pop
mov
inc
add
mov
mov
dec
sub
sub
fsubs
enter
nop
and
inc
aas
mov
dec
add
idivl
shrl
sbb
inc
mov
mov
pop
dec
shll
lock
shll
hlt
clc
clc
cld
inc
lods
rorb
sbb
fbld
insb
xlat
clc
or
lock
mov
adc
pop
jae
popf
pop
insb
ss
stc
adc
or
leave
and
mov
jmp
mov
outsb
jnp
std
jecxz
ja
lcall
leave
and
cltd
stc
sub
cmpsb
jmp
xchg
cltd
sub
sbb
cmp
pusha
pop
ja
insb
insl
add
outsl
add
dec
push
mov
xchg
ss
in
out
add
add
mov
pop
and
sub
js
sbbl
pop
ja
jg
add
int3
aam
adc
dec
fsub
negl
lcall
adc
or
or
ja
inc
lcall
adc
pop
sbb
sub
xchg
mov
int3
xchg
loopne
xchg
andl
or
adc
dec
adc
les
inc
and
push
jns
test
push
dec
mov
lea
lods
imul
jle
cmp
push
unpckhps
mov
scas
aam
push
rcrl
cmp
xor
cs
or
push
stos
out
jle
mov
lds
jp
mov
cmc
dec
adc
and
xor
lea
xor
js
mov
iret
fdivrs
adc
pop
mov
cmp
jne
mov
adc
add
lods
test
inc
inc
xor
mov
hlt
mov
and
or
mov
add
push
cmp
pop
xor
or
push
nop
sub
add
and
dec
aad
lods
adc
aaa
mov
and
ss
jne
xchg
sub
in
or
shll
scas
push
mov
icebp
add
out
stos
add
cmp
int
mov
cltd
decb
in
inc
xor
push
icebp
push
sub
or
add
loop
inc
test
sbb
add
cltd
sub
cmp
daa
testb
and
pop
ja
sbb
adc
das
not
mov
leave
pusha
xlat
into
pop
sbb
jne
add
jb
cmp
cmp
clc
fists
insb
add
pushf
lahf
mov
mov
lds
pop
xor
adc
fisttpll
rcrb
imul
adc
cmp
mov
xor
cmc
inc
pop
je
inc
jmp
push
jne
lea
mov
dec
sub
into
aad
filds
cmp
jne
mov
xor
mov
adc
mov
mov
xor
pop
push
inc
lock
push
out
lea
or
add
fists
jecxz
and
push
add
aam
mov
fildl
cmpsb
fsubrs
cmp
ja
push
cmc
lea
dec
dec
not
cmpsl
loop
daa
jp
mov
cmp
mov
popf
dec
sub
jae
js
mov
or
loope
inc
add
or
sbb
push
je
inc
push
sub
test
mov
movsb
or
add
inc
sub
cmp
je
push
mov
jl
mov
rorb
or
dec
mov
popa
js,pn
faddl
jo
loopne
or
jmp
sbb
ljmp
add
inc
je
pushl
test
ret
mov
jne
jmp
imul
pop
movsw
jg
ja
sbb
aas
and
inc
mov
sbb
adc
push
cmp
sahf
stos
sub
xchg
push
cs
sub
mov
lret
xchg
movhps
sbb
inc
or
cmp
sbb
push
and
add
push
adc
cmpsb
ja
push
or
pop
pop
inc
mov
test
xchg
push
leave
xchg
pop
enter
lahf
pop
mov
fcompl
rcrb
mov
roll
push
sub
and
imul
out
and
dec
mov
and
add
adc
xchg
pop
loopne
nop
mov
call
mov
and
xchg
mov
pusha
mov
push
pushf
xor
shll
lods
mov
repz
loopne
and
clc
mov
add
add
ret
pushf
inc
popa
loope
and
fyl2xp1
cmp
sub
inc
push
sub
out
add
lret
and
roll
mov
int
dec
pop
cmpsb
jnp
rep
xchg
and
lcall
or
mov
andb
or
add
ss
aas
pop
pop
xorb
jnp
jb
add
ja
pushf
or
mov
mov
mov
pop
adc
lret
jbe
xor
cmpl
mov
cmp
or
mov
add
xor
pop
in
pop
je
dec
loopne
ficomps
inc
mov
mov
cmc
jmp
mov
shrb
test
xchg
or
pop
jae
testb
push
test
int3
sarl
sbb
push
or
pop
inc
fsubl
dec
cmc
xchg
push
arpl
xor
pop
ja
int
or
jns
mov
add
cs
jno
sarb
pusha
addl
add
adc
aas
push
cmp
addb
clc
adc
cmp
and
pusha
cmp
and
sbb
push
mov
in
push
or
add
out
push
xchg
rcll
jle
mov
call
pop
ret
inc
inc
fs
lahf
lcall
mov
pushl
shll
arpl
andl
inc
jmp
aad
jl
pop
loop
or
xchg
pop
pop
adc
fisubl
mov
inc
mov
xchg
into
fsubs
sbb
scas
push
cmp
stos
lea
pop
clc
inc
movsl
cmp
aaa
test
xor
mov
add
ljmp
inc
add
jge
jno
cs
add
std
shr
pop
cmp
fmull
xor
push
fsubrl
popa
xchg
subb
stc
aaa
inc
bswap
dec
cmp
or
or
add
sbb
clc
adc
add
sbb
or
add
mov
add
dec
or
fnsave
cmp
push
pop
loopne
inc
jns
push
push
or
adc
sub
and
push
mov
add
mov
lock
rcll
xor
cmc
jmp
sti
js
bound
pop
je
mov
out
dec
jmp
fadds
roll
mov
jp
and
mov
push
stos
jae
inc
inc
add
and
outsl
and
cmp
test
pop
inc
sbb
cld
sahf
mov
push
enter
fsubrl
lds
mov
mov
imul
fdivl
fsubl
jne
fisubl
push
hlt
dec
in
sbb
mov
mov
inc
lods
testl
ds
mov
fidivrl
inc
orb
adc
jg
add
or
int3
cld
add
loopne
dec
xor
cmp
pop
neg
je
push
fs
je
mov
mov
in
jne
add
push
mov
lock
mov
aad
mov
je
push
jno
test
ds
inc
mov
stos
dec
sbbb
cmpsb
dec
dec
repz
jne
sub
pusha
dec
rcrb
jle
ljmp
lea
push
pushf
insb
and
push
pop
push
push
movsl
and
jb
mov
rcrb
inc
xor
sub
loopne
mov
inc
sub
shlb
add
xor
addr16
xor
push
xchg
pop
sbb
sbb
xor
inc
movsl
push
sbb
test
insl
arpl
outsl
das
adc
in
pop
mov
sarb
imul
sub
push
pop
sbb
repz
in
loope
clc
xlat
cmp
adc
or
into
and
jl
ffreep
popa
jl
cmpsb
call
adc
sti
mov
nop
faddl
push
mov
fiadds
test
mov
sbb
or
andb
pop
fldcw
mov
or
inc
jmp
iret
loop
mov
or
mov
fisttpll
lods
jmp
add
add
ror
shrl
ja
or
lock
scas
mov
inc
jmp
push
ret
or
rcll
pop
sub
pop
incb
std
std
hlt
mov
add
data16
or
sbb
imul
lock
inc
or
inc
or
out
test
add
inc
es
push
clc
in
sti
add
orl
and
iret
dec
iret
or
sbb
mov
data16
orb
add
xor
loop
mov
aas
inc
fs
and
mov
sbb
adc
movsb
negl
or
cmp
mov
inc
stos
push
add
les
nop
sbb
incl
fidivs
and
push
movsl
imulb
call
in
mov
leave
fs
add
xchg
in
test
pop
pop
jno
lock
sbb
xor
xchg
xor
push
push
mov
test
sbb
push
in
ret
subw
cmp
inc
sub
fildl
rcr
xor
jmp
sub
fists
add
fs
sti
mov
gs
xor
and
jo
jb
addr16
pop
push
mov
and
popa
outsb
sub
and
imul
and
lock
daa
add
loop
lods
or
or
push
ss
mov
or
pop
add
add
jnp
int
mov
pop
or
nop
andb
add
add
lds
lods
xor
add
adc
ja
pop
add
add
adc
jae
inc
pop
testl
jo
xor
shl
cmpsb
mov
pusha
and
xor
sbbb
loopne
addps
fbstp
pop
cmp
js
rolb
adc
adc
mov
mov
xor
rorl
add
adc
adc
shll
je
enter
dec
shll
add
fwait
out
xor
call
cwtl
add
pop
push
jl
fmul
pop
jg
cmpsb
imul
cmpsb
imul
cmpsb
imul
imul
cmpsb
imul
scas
imul
cmpsb
imul
cmpsb
imul
cmpsb
imul
cmpsb
imul
cmpsb
imul
imul
imul
mov
push
mov
push
call
movsb
imul
xor
imul
xchg
cmpsb
inc
loop
sbb
jns
shrb
lcall
dec
or
adc
xor
or
jne
lret
dec
shll
dec
rorl
ljmp
xor
fisubrl
xor
shll
or
shlb
push
adc
jae
xor
xor
arpl
cmpsb
and
xor
addl
xorl
dec
rorl
imul
or
dec
shll
dec
notb
rorl
pop
ja
into
shll
pop
xchg
pop
pop
sahf
or
aas
fisubrs
sti
pop
rorl
das
mov
dec
sbb
shll
xchg
xchg
and
xchg
shll
xchg
test
dec
cltd
fstps
dec
xchg
lds
sbb
and
xchg
xchg
aad
xchg
cmc
int
dec
xchg
popf
fs
xchg
std
and
xchg
mov
sbb
xchg
and
mov
lret
dec
xchg
jmp
dec
xchg
mov
sti
xchg
and
xchg
cmpsl
out
sbb
testl
fs
xchg
filds
aas
add
mov
add
cmpsl
sbb
adc
add
repnz
sbb
inc
pop
out
sbb
sbb
das
jg
adc
and
sbb
adc
add
subl
in
pop
push
popa
pusha
sahf
in
sahf
add
xor
or
pop
shl
add
call
or
imul
lods
lahf
add
add
repnz
lock
xlat
xor
mov
in
aam
enter
mov
sub
mov
add
sbb
add
push
xchg
and
mov
inc
push
add
or
or
enter
or
add
ret
pop
or
or
or
cmpsb
imul
lcall
sbb
pop
imul
imul
imul
cmpsb
imul
cmpsb
imul
imul
cmpsb
imul
cmpsb
imul
imul
cmpsb
imul
cmpsb
imul
imul
cmpsb
imul
cmpsb
imul
imul
cmpsb
imul
cmpsb
imul
imul
cmpsb
imul
cmpsb
imul
imul
cmpsb
imul
cmpsb
imul
imul
cmpsb
imul
imul
xchg
push
cmpsb
imul
imul
cmpsb
imul
cmpsb
imul
imul
cmpsb
imul
cmpsb
imul
imul
cmpsb
imul
cmpsb
imul
imul
cmpsb
imul
cmpsb
imul
imul
cmpsb
imul
cmpsb
imul
imul
cmpsb
imul
cmpsb
imul
imul
mull
inc
add
pusha
adc
xor
rcll
jo
dec
dec
shll
cmp
dec
shll
inc
and
adc
xor
je
inc
addl
shll
arpl
xor
xorl
shll
sbb
dec
shll
push
push
xor
shll
add
or
shll
sbb
dec
adc
sbb
cltd
pop
mov
add
or
add
xchg
inc
push
imul
and
or
push
pmaxsw
sub
add
lcall
dec
xchg
sbb
sbb
push
and
inc
cmp
fnsave
jbe
add
adc
xor
adc
push
pop
sbb
inc
leave
push
sbb
sub
mov
mov
cmpsl
xor
rcl
or
or
adc
xor
rcrl
sbb
sub
dec
shll
jo
or
xor
shl
neg
jnp
outsl
imul
fidivrs
mov
dec
inc
jg
and
cmp
inc
add
popa
push
out
mov
les
hlt
push
xor
xchg
fs
xor
fdivrl
jmp
jmp
mov
rclb
mov
sub
mov
sbb
dec
jno
push
fiadds
test
ficompl
jmp
mov
hlt
movl
imul
fucomip
std
in
leave
mov
add
insb
push
arpl
psubd
or
cmp
lcall
imul
addr16
add
aam
dec
std
test
movsl
cli
test
xor
insb
cwtl
mov
leave
mov
lods
jecxz
fdivs
jne
filds
or
shrl
call
neg
push
adcb
push
popa
sarb
and
mov
cltd
xchg
mov
jmp
add
or
or
and
or
adc
stos
sbb
jg
ljmp
fdivl
jno
mov
adc
out
mov
ljmp
movsl
in
lahf
xor
mov
js
dec
jle
cwtl
push
cli
jmp
mov
cmp
fs
add
hlt
push
imul
insb
sbb
xor
call
daa
insb
jnp
add
shl
adcb
cmc
fnstenv
adc
ljmp
cld
fistps
ficoml
gs
aam
pop
popa
mov
into
in
pushl
pop
sub
bsf
inc
movsl
fisttps
xchg
fsubs
inc
shll
jmp
outsb
xor
mov
sarb
add
in
add
pop
call
stos
leave
jl
fnstsw
add
daa
lea
mov
and
pushl
aam
mov
push
stc
ficomps
leave
fldcw
and
xlat
pop
cmp
ljmp
pop
mov
mov
mov
pushl
je
inc
aad
scas
ja
popf
adc
push
fdivl
or
test
fs
ds
dec
ljmp
test
push
or
push
in
decl
xchg
daa
scas
add
xchg
sar
jmp
add
inc
push
imul
xorb
sbb
push
imul
aam
loopne
ljmp
push
jbe
jp
adc
dec
frstor
fistpll
mov
mov
call
aad
mov
call
xchg
shll
push
repnz
addr16
cmpsb
fldl
mov
aas
dec
ss
fisubrl
or
scas
testb
pusha
jp
inc
ret
out
pusha
fists
addr16
mov
pushl
jns
imul
andl
shrb
ss
push
xchg
ja
int3
add
mov
jmp
das
es
lds
or
sub
mov
cmpsl
call
ret
shlb
ljmp
ret
es
pushf
mov
insl
add
ss
jmp
addr16
jg
jb
push
testb
mov
jnp
sbb
xchg
or
call
in
out
fdivrl
fisttpl
aam
roll
clc
mov
push
int
mov
mov
loope
mov
ja
mov
out
jge
push
dec
cmp
pop
inc
ljmp
int3
adc
sahf
gs
clc
sar
imul
push
js
or
call
or
dec
ret
cmp
cmpsl
notl
pusha
rorb
imul
push
scas
fdivr
lcall
fldenv
filds
cmp
aaa
push
scas
mov
fidivrs
mov
jmp
repnz
inc
mov
push
cmpsb
mov
sarb
sub
push
mov
jp
mov
jmp
popa
les
sbb
xchg
sub
aaa
mov
or
sbb
add
sub
incl
sbb
andb
ret
push
sub
hlt
ja
incl
xchg
inc
dec
or
ret
call
hlt
jecxz
dec
mov
dec
jle
mov
decl
sbb
xchg
ret
and
push
shll
js
inc
out
popa
push
xlat
scas
cs
mov
call
cwtl
sbb
test
sbbb
sub
test
lcall
out
insb
insb
fistpll
inc
aam
push
pop
int
and
xchg
jecxz
lahf
mov
inc
mov
popa
ja
mov
jmp
call
call
gs
fisubrl
inc
inc
sub
imul
std
pushl
scas
imul
out
pop
sub
sub
pop
or
sbb
repz
fbstp
push
jo
das
mov
xchg
sub
xchg
lcall
xor
pop
nop
sti
mov
test
jns
test
cmp
jns
jae
dec
call
cli
inc
inc
cmp
ficomps
dec
jns
inc
jle
jmp
sbb
or
mov
and
or
hlt
mov
or
xchg
lea
cld
or
pop
dec
int3
pop
dec
xor
inc
mov
outsb
lret
push
pop
mov
ljmp
aas
lea
push
cwtl
xlat
ficoms
test
loope
xchg
lret
loop
lcall
jb
out
imul
push
inc
lahf
test
pop
adc
push
sbb
adc
and
inc
and
cmp
and
jl
or
push
fs
dec
mov
loope
lcall
cmpsl
xor
mov
lods
out
sarb
mov
adc
ljmp
adc
jle
push
jns
das
mov
and
je
or
push
mov
dec
push
jo
gs
out
jle
repz
mov
xchg
rcl
cmp
cli
mov
js
mov
test
cwtl
cmpl
test
mov
mov
scas
adc
decl
out
pop
push
insb
hlt
inc
int
fldcw
push
ret
adc
add
inc
ljmp
ja
clc
incl
ss
push
out
mov
mov
movsl
test
jno
mov
ja
fldcw
pop
push
dec
sub
or
sub
ds
lcall
lahf
cwtl
mov
nop
bound
xchg
push
push
hlt
out
les
out
aad
fdecstp
jmp
lea
and
pushf
sub
sub
jg
lods
dec
jo
outsl
sbb
sub
loope
fisubs
lds
push
call
jmp
gs
in
mov
movsb
ret
addr16
test
mov
lahf
fdivrp
cmp
repz
jnp
call
cmp
mov
or
stos
mov
sbb
icebp
adc
sub
outsl
cld
pushl
xor
mov
jo
cmc
shrb
addl
mov
arpl
loope
ror
mov
stc
xlat
loopne
adc
mov
jo
popf
mov
test
jmp
add
insb
cmp
les
adc
inc
cwtl
dec
add
sar
xchg
cli
call
lret
bound
cmp
popf
cmpsl
push
mov
xchg
adc
lcall
dec
cld
cltd
bound
fcoms
into
pop
dec
loope
push
jle
push
xchg
sub
int3
bound
mov
call
xchg
xor
call
mov
pop
lods
ret
outsb
xchg
dec
insb
das
mov
adc
sbb
clc
test
sub
adc
jns
movsl
push
decl
sbb
mov
mov
repnz
out
mov
mov
or
jle
xchg
aas
mov
adc
out
loopne
lcall
imul
pop
jle
aaa
or
jbe
dec
divl
lahf
adc
jb
and
std
jmp
ret
aam
add
inc
add
test
jmp
lret
idiv
incl
mov
lea
push
adc
cmp
test
or
stc
sbb
call
call
sahf
or
es
leave
in
push
ja
pop
sub
lcall
lods
or
sbb
fildll
sbb
repnz
adc
dec
jae
incl
call
adc
cmp
and
push
mov
pop
loopne
dec
cmp
sub
cmp
icebp
decl
clc
or
cmp
inc
aas
or
cmp
add
call
pop
outsl
jge
aaa
ss
fidivl
test
xchg
xor
imul
fnstsw
xor
in
daa
leave
pop
sub
decl
and
mov
and
sub
sub
jmp
sub
ds
sbb
sub
lcall
das
rorb
jno
decl
fdivl
and
push
jbe
icebp
pop
je
fwait
aad
js
mov
decl
dec
jg
or
jl
je
jns
push
inc
js
mov
jnp
cs
lods
xchg
fdivrp
cmp
nop
adc
pop
pushl
in
ja
add
push
or
bound
insl
arpl
sub
shr
sar
call
xlat
cmpsb
gs
fs
imul
dec
pop
mov
mov
call
jns
dec
cld
arpl
dec
lret
or
xchg
mov
dec
movsl
fstpl
inc
scas
lock
incl
inc
testb
shll
inc
xor
inc
jae
cmovo
out
inc
sbb
push
pushl
push
ds
mov
mov
clc
push
mov
adc
push
aad
mov
pop
fists
lea
and
in
pop
cld
movsb
pop
js
pop
add
sub
ljmp
insl
das
lods
pop
sbbb
loope
jno
loopne
iret
mov
fldenv
cmp
imul
out
addr16
mov
in
dec
es
mov
out
push
sahf
mov
in
in
das
call
mov
and
jmp
pop
imul
in
sar
sahf
insb
xchg
cmp
call
sub
sbb
sbb
sti
inc
les
clc
dec
jmp
decl
adc
es
inc
icebp
xchg
inc
or
mov
xchg
test
jmp
js
push
aaa
mov
fidivrl
jecxz
fstpt
mov
shlb
cmc
fucom
dec
aaa
faddl
fmuls
xlat
out
test
fsubr
aam
mov
aad
movsb
shlb
into
mov
jmp
rcrl
and
adc
pop
lds
xchg
pushf
les
fcmovb
dec
inc
sbb
int3
push
push
ret
xchg
ret
mov
adc
xchg
call
lret
lahf
lds
adc
decl
leave
je
inc
int3
inc
insl
xchg
sbb
ror
mov
xchg
ja
insl
nop
cs
incl
xchg
sbb
jmp
xchg
stos
push
fs
repnz
clc
movl
lods
jle
xchg
adc
pushf
mov
outsl
fcoms
add
xor
lcall
xor
dec
mov
or
in
popf
orb
ljmp
inc
mov
mov
mov
mov
adc
fdivr
incl
arpl
pop
xchg
shl
test
into
add
stos
stc
outsb
movsb
ljmp
dec
adc
scas
adc
lods
sbb
xor
inc
aas
mov
jmp
repz
cmp
popf
xchg
mov
mov
sbb
mov
cmpsl
inc
mov
int
clc
pushl
cmp
dec
mov
mov
pop
dec
adc
mov
popa
xchg
mov
and
mov
in
xor
mov
jmp
mov
out
scas
mov
push
xchg
bound
pop
imul
cltd
popf
out
inc
lds
outsl
add
hlt
xlat
mov
push
xor
loopne
adc
lahf
push
sbb
xor
call
adc
jno
lods
inc
enter
lods
cmpsl
addr16
or
outsl
into
int
jg
xchg
adc
jg
sti
mov
aas
sahf
rcrb
xchg
mov
mov
leave
inc
jp
ds
jg
ljmp
mov
mov
xchg
add
das
or
in
xchg
loop
test
xchg
in
xchg
outsl
hlt
fstpl
iret
aas
sub
adc
ljmp
inc
push
mov
sub
les
and
push
sahf
movq
or
cld
jg
or
jge
aad
rcr
rcrb
cmc
call
rol
sbb
daa
sbb
mov
stos
mov
imul
dec
test
adc
pop
aas
test
or
sbb
jg
xor
mull
adc
test
loope
jg
mov
ret
push
rolb
pop
test
test
std
cmp
adc
loopne
jle
push
das
lret
jnp
dec
ja
decl
or
jae
movl
cmc
cwtl
outsl
inc
nop
call
cld
jle
data16
sbb
ficoml
fnstsw
dec
daa
mov
out
mov
mov
mov
cmpl
fdivr
js
sub
pop
outsb
xchg
add
cmp
and
std
or
push
pusha
inc
mov
clc
or
test
push
shl
hlt
jmp
mov
fwait
push
add
in
mov
dec
leave
xor
stc
fistl
inc
arpl
adc
push
mov
aaa
pop
in
push
loope
inc
jmp
pop
loop
dec
and
mov
clc
inc
addb
jg
pop
jmp
cltd
scas
ljmp
mov
in
pop
shl
jmp
stc
sbb
ljmp
bound
inc
xchg
out
xor
xor
pop
call
in
sub
push
in
cmp
pop
cmp
das
or
outsb
xor
or
xchg
movsb
loope
mov
sub
sbb
decl
cmc
scas
repz
xor
mov
xchg
and
pop
cs
dec
rol
std
shlb
pop
xchg
idivl
sub
mov
icebp
and
pushl
pusha
jle
cmc
mov
out
mov
pop
push
mov
ret
mov
flds
ljmp
and
push
arpl
popa
stc
and
push
mov
roll
outsb
mov
incl
or
sub
movsl
adc
bswap
fsts
xchg
sar
test
lods
cmp
sbb
and
xorb
fcoms
add
mov
fwait
leave
jae
and
movsb
push
inc
xchg
sbb
test
pop
adc
out
dec
jbe
mov
push
into
lea
inc
fsubr
inc
clc
fs
jns
stc
xor
xchg
inc
fidivl
jmp
incl
mov
mov
lock
imul
daa
test
call
cs
mov
call
mov
loope
into
jecxz,pn
or
imulb
aas
add
subl
negb
lcall
dec
cwtl
ds
icebp
and
subb
aam
into
mov
iret
test
jg
pop
es
outsb
mov
cli
decl
lret
sbb
loope
push
adc
cmpl
dec
adc
mov
jle
andb
cltd
adc
decl
add
mov
jno
ds
outsl
sub
mov
add
xchg
out
jg
mov
push
cs
dec
rolb
pop
outsb
sti
ret
neg
jmp
cmpsl
call
test
or
xchg
popa
mov
fdivrp
ja
xor
call
cltd
or
pop
insl
les
scas
hlt
xor
push
fisttpl
fdivrl
push
xchg
rcr
mov
mov
sub
jl
out
sub
lcall
fs
and
repz
inc
ficomps
fcmovbe
jge
fucom
jmp
aam
push
ljmp
test
adc
imul
mov
in
adc
pop
dec
arpl
insb
fsqrt
ljmp
icebp
arpl
and
dec
imul
in
addr16
cmp
ljmp
icebp
jmp
rorl
aam
rorb
dec
xor
mov
insb
fstpt
call
lods
mov
insb
jecxz
fistps
or
pop
fnstenv
lods
push
lds
dec
xlat
push
cmpb
hlt
mov
mov
and
mov
movsl
movaps
mov
or
inc
or
mov
or
and
outsl
jl
pop
push
sbb
cmp
add
jno
ljmp
cwtl
shlb
mov
mov
mov
mov
pop
lahf
mov
xchg
mov
leave
loop
adc
push
cwtl
sbb
sbb
push
decl
sub
arpl
dec
ljmp
test
fdiv
bound
dec
insb
push
xchg
in
sbb
movsl
jnp
or
shl
std
decl
les
mov
adc
mov
jl
fstpl
incl
decl
dec
gs
mov
push
sub
mov
mov
xor
dec
fbld
xlat
movsb
rol
insl
rcl
hlt
sti
inc
imul
cld
lods
mov
pusha
mov
jae
add
pop
fisttpll
jno
daa
add
mov
or
inc
jmp
xchg
mov
and
mov
aam
into
popa
in
pop
fdivrp
push
sub
leave
cwtl
mov
jg
shl
xlat
test
pop
mov
pop
cs
xorl
insb
lods
in
mov
mov
add
lcall
call
pushl
add
es
jecxz
or
xchg
cmp
pop
test
decl
iret
or
add
mov
setae
mov
push
idiv
ljmp
bound
adcb
insb
ss
imul
aam
jbe
shrl
loopne
call
fisttpll
mov
out
stc
pop
mov
inc
pusha
mov
aad
mov
call
fadd
les
repnz
sarl
addr16
pop
cli
pushl
ss
fmuls
sbb
dec
testb
fbld
ret
jg
jmp
test
fists
outsb
mov
inc
imul
outsl
call
cli
call
mov
int3
or
xchg
mov
push
mov
lds
mov
sub
ret
cmpsl
mov
iret
xor
sahf
mov
mov
scas
sbb
in
arpl
add
or
decl
ss
jb
test
add
xchg
mov
jp
jnp
sub
xchg
rorb
inc
aad
jns
out
mov
fcmovnu
and
aam
inc
push
fiaddl
incl
mov
ja
sbb
ljmp
push
cmp
adc
or
sahf
clc
bound
shll
push
insb
iret
inc
mov
or
adcl
ret
push
jmp
popa
shlb
testl
ja
scas
jmp
faddl
decl
data16
fdivrs
lock
mov
iret
jg
mov
jmp
lret
mov
pop
clc
call
cmpsb
mov
xlat
push
xchg
push
ficoms
and
fldenv
cs
aam
jmp
mov
sub
xchg
mov
mov
mov
sub
lcall
rcrb
xor
bound
lds
call
cmpsl
xchg
xchg
enter
rol
mov
mov
hlt
fxch
lods
mov
or
scas
jle
add
lcall
cwtl
sbb
dec
ret
push
fldenv
adc
jo
popa
out
inc
xchg
jmp
cli
call
push
aaa
mov
adc
cwtl
mov
add
sbb
mov
pop
mov
test
ja
pop
fs
sbb
int3
dec
pop
push
sahf
xchg
test
mov
inc
and
call
shl
ret
fiadds
neg
lds
inc
inc
lahf
jmp
imul
jbe
std
imul
sub
or
incl
or
sbb
insl
filds
repz
pop
pop
mov
jo
jno
imul
pop
call
sbb
jne
pop
mov
sti
push
test
jns
ljmp
cmp
jns
push
test
fisubrs
cmp
jg
jns
jmp
dec
sub
xchg
adc
mov
jg
call
cmp
hlt
dec
or
call
lea
or
xor
cli
bound
mov
push
mov
lea
xchg
xchg
push
xchg
cwtl
push
test
jg
shl
lret
xchg
jb
xlat
pop
imul
inc
push
mov
pop
dec
test
jmp
and
jo
cmp
std
imul
add
and
xchg
scas
mov
loope
jmp
xor
std
pusha
lods
and
scas
mov
shr
lahf
adc
or
jmp
rclb
ljmp
ja
das
aas
jns
ss
mov
or
je
adc
xor
movsl
mov
jns
fidivs
out
xor
out
std
lcall
inc
mov
int3
lret
mov
lcall
js
cmpsl
gs
cmp
sbbl
or
lret
mov
pop
dec
inc
hlt
insb
push
insl
fnstcw
int
ret
decl
inc
and
shrl
ja
adcb
out
movsl
add
decl
cld
incl
pop
mov
cwtl
pop
fsts
ss
icebp
call
daa
pop
dec
add
mov
icebp
ljmp
bound
lds
out
hlt
push
out
jmp
aad
sub
mov
test
xor
imul
in
shll
lods
clc
pop
sbb
inc
sub
data16
loope
jmp
repz
mov
in
test
int3
outsl
icebp
pop
push
lds
sbb
dec
call
imul
or
stos
test
jg
sbb
mov
pop
adc
pushl
ja
dec
jo
mov
imul
jp
xorl
pop
mov
lret
cli
xlat
dec
sar
lea
loope
psubw
loopne
sub
lea
or
lcall
mov
pop
inc
sbb
insb
cmp
push
test
cwtl
inc
jle
ljmp
push
test
dec
lret
addl
push
cmpsl
popf
stos
adc
xchg
fsub
push
add
cld
dec
xor
bound
into
jns
fmuls
dec
pop
and
shll
push
jnp
sub
sub
mov
call
pop
jle
in
inc
gs
dec
xchg
outsb
jne
mov
call
or
inc
push
aas
sub
in
mov
sbb
mov
repnz
mov
mov
out
and
loope
or
mov
aas
xchg
mov
jo
and
xor
cmp
pop
clc
ja
fsubl
test
pop
hlt
out
sub
testl
cli
jg
scas
pop
adc
xor
jg
inc
push
add
pop
push
test
push
lret
ret
lea
dec
push
test
decl
adc
psrlw
or
push
out
loope
sbb
fs
xchg
push
or
ljmp
mov
pop
mov
sbb
lods
pop
cli
lcall
in
popa
fwait
sbb
mov
adc
cwtl
call
dec
cmpsb
adc
pushl
xchg
adc
xor
push
mov
in
cmp
loopne
sub
cmp
xchg
mov
decl
clc
mov
xchg
cmp
pop
pop
pop
aaa
pushf
jge
xor
std
add
lcall
test
test
xchg
aad
xor
imul
push
frstor
in
pushl
ss
xchg
daa
ljmp
bound
and
or
jmp
cltd
and
and
adc
mov
pusha
inc
sub
decl
jno
jno
hlt
sub
jbe
cs
enter
mov
shlb
divl
pop
scas
jb
pushl
ja
and
sub
rcl
inc
jle
fdivrl
dec
mov
decl
or
bound
jns
je
js
and
mov
std
ret
cli
insb
mov
xchg
cli
ficoms
nop
jmp
incl
pop
push
repz
arpl
popa
sub
jmp
rcll
xlat
aam
fs
mov
dec
xlat
lret
and
mov
mov
mov
fisubs
dec
sbb
lret
dec
pop
mov
dec
lcall
lcall
inc
dec
testb
inc
int
inc
inc
addps
dec
out
inc
decl
push
addr16
jne
ds
mov
or
rorb
adc
push
mov
cmp
pop
and
pop
in
xchg
xchg
pop
sub
add
inc
pop
pop
icebp
ljmp
sbb
loop
iret
out
jecxz
movsl
push
cmp
pop
ljmp
sub
fsts
addr16
jp
add
out
in
paddsb
in
pusha
hlt
popa
call
in
mov
jmp
ss
imul
rcl
xchg
insb
jg
or
sbb
sub
fdivrs
stc
sahf
les
pop
ljmp
dec
bnd
lock
adc
or
cmc
lret
sub
testb
jg
ljmp
mov
mov
jecxz
fidivs
mov
and
fdivl
dec
in
imul
test
fdivs
mov
movsb
add
mov
movsl
shlb
pop
lds
adc
pushf
xchg
daa
fisubrl
jle
sbb
ret
int3
ret
xchg
cmp
rcl
mov
lret
dec
scas
test
pop
lahf
enter
test
lods
leave
or
icebp
int3
inc
pop
je
xchg
iret
rcl
into
add
lock
nop
insl
cld
ja
sub
xchg
jmp
ds
xchg
fs
stos
loopne
xchg
and
repnz
loopne
cmp
iret
pushf
cmp
xchg
popf
cli
jns
ljmp
outsl
and
add
dec
lcall
xor
decl
mov
sbbb
mov
orb
mov
lcall
mov
sbb
int3
push
test
arpl
aad
or
test
mov
jmp
into
stos
movsb
outsb
stc
scas
jmp
jl
sub
dec
lods
outsl
lods
adc
sbbl
movsb
mov
mov
inc
mov
cmp
mov
mov
pushl
mov
sbb
mov
cmpsl
mov
mov
fisttpl
cmpxchg
mov
punpckldq
xlat
lock
lock
push
mov
xchg
gs
sbb
push
outsl
fistpl
fidivrl
mov
or
mov
mov
out
decl
jmp
push
aaa
fdivp
xor
xlat
cmp
or
outsl
mov
filds
mov
fucom
fbstp
pop
arpl
push
push
sbb
jg
call
adc
fistpll
enter
lods
jne
or
cmp
es
lods
jg
sub
mov
xchg
rcrb
jg
mov
and
xor
pop
or
addr16
xchg
shrb
mov
cmp
in
pop
or
pop
lock
in
xchg
xchg
cmp
mov
fucomip
fisttpl
jno
aas
ljmp
jecxz
in
sbb
push
mov
push
sub
mov
pop
and
sub
sahf
push
dec
jg
outsl
test
or
cld
test
rcrb
lahf
rorb
mov
lahf
xchg
sbb
daa
sub
stos
xchg
cli
mov
and
xchg
test
call
mov
test
pop
xor
rcll
iret
rcrl
cld
ljmp
lret
mov
ret
pusha
test
shl
sbb
pop
call
mov
cmp
out
imul
dec
das
push
ret
ja
imul
bswap
mov
popa
add
mov
das
lock
cwtl
cmc
cld
sar
nop
out
push
hlt
fidivl
sbb
mov
inc
sub
jmp
mov
cmp
jg
sarb
xchg
outsb
pop
hlt
cmp
testl
and
sub
pusha
push
or
jg
mov
fbld
fucomip
inc
cs
addr16
daa
pushl
jno
dec
mov
xorb
inc
out
imul
pushf
roll
push
and
in
aaa
lret
pop
loope
scas
dec
push
incl
xchg
and
push
aaa
out
lock
push
add
inc
clc
and
popf
and
pop
mov
in
ljmp
scas
xor
in
pop
mov
push
in
pop
inc
scas
mov
in
sbb
bound
and
mov
inc
or
mov
aam
push
stc
mov
in
pop
cmp
incl
or
or
cmp
mov
mul
movsb
add
sub
scas
cmc
ret
jbe
mov
lcall
std
mov
sbb
dec
scas
cs
add
push
movsw
notl
cld
sbb
sub
jns
nop
xchg
in
icebp
repnz
imul
cmc
xlat
jle
out
rorl
clc
pushl
push
jp
jmp
sbb
mov
decl
arpl
and
stc
popa
lcall
mov
lcall
lods
mov
ss
dec
lcall
xchg
loope
xchg
call
fxch
sub
inc
andb
jne
jp
adc
scas
dec
jae
fwait
push
jmp
inc
std
lods
cmp
jbe
out
push
into
icebp
mov
inc
lea
call
ljmp
jns
inc
xchg
push
xor
es
jmp
in
mov
jmp
sbb
push
decl
cld
mov
fwait
push
test
fistl
cs
push
es
mov
call
mov
adc
push
ja
cs
adc
out
mov
incl
jbe
pop
notb
dec
jmp
ds
insb
addb
aam
popa
inc
mov
stos
jle
mov
ljmp
cmp
es
jl
mov
pop
sbb
decl
repz
in
test
adcl
ja
mov
ret
add
cmp
cltd
lcall
in
or
pushw
cmpsl
fidivl
sub
fisubrs
sarl
dec
or
lock
out
mov
mov
push
inc
sarb
dec
sti
outsb
pop
sub
push
addr16
push
hlt
jmp
je
into
jp
mov
push
icebp
and
mov
lods
push
dec
popa
jb
and
gs
and
imul
lahf
or
or
adcb
pop
inc
pop
orb
cmp
fmuls
mov
push
jae
lcall
addl
nop
and
add
adc
xchg
inc
push
sbb
adc
cwtl
jge
ja
movl
mov
out
sbbl
pusha
mov
and
imul
fistps
add
add
push
add
add
or
pop
stc
add
add
add
add
in
ja
xchg
add
shll
sbb
add
gs
push
add
in
jmp
add
pop
push
add
add
add
addb
add
test
push
pop
mov
pop
bswap
aaa
out
pop
and
add
pusha
push
jo
or
dec
sbb
mov
loopne
aas
outsb
xchg
push
in
aaa
nopl
mov
inc
dec
dec
inc
inc
dec
pop
dec
inc
inc
push
pop
push
inc
dec
inc
inc
push
inc
inc
pop
sub
push
push
inc
push
push
aaa
lock
lock
je
insl
fidivrs
mov
inc
mov
adc
add
lret
fimull
enter
inc
dec
dec
inc
adc
jecxz
jbe
push
xor
cmp
sub
insb
je
xor
imul
push
daa
fcmove
aaa
outsb
outsl
je
add
inc
and
popa
and
mov
and
insb
outsl
ja
cmp
enter
outsb
aaa
ss
cmp
leave
je
xor
mov
sub
jb
jne
xor
sub
mov
insb
sub
imul
js
das
pop
push
fsub
pop
pop
sub
pop
add
pop
push
gs
xor
pcmpgtb
arpl
cmp
cmpl
push
and
insl
mov
nop
insl
lods
je
mov
mov
imul
mov
mov
add
and
add
addr16
insl
and
pop
inc
popa
insl
ss
xor
dec
xor
mov
sub
lahf
imul
sub
sahf
xchg
fstl
addr16
jae
xor
lds
outsb
subb
cmp
mov
adc
dec
sub
pop
cmp
push
imul
push
mov
pop
bound
addr16
popa
push
inc
push
and
push
aam
sbb
sbb
add
add
pop
and
loope
fistps
inc
gs
popa
xor
jbe
push
scas
mov
sub
jne
adc
push
xchg
fs
gs
popa
repnz
outsl
push
arpl
and
or
popa
add
in
clc
cmp
cld
pop
add
cltd
cmpsl
popf
cmpsl
sbb
mov
inc
fs
jo
popl
xchg
adc
cmpsl
and
or
push
push
mov
push
gs
jo
inc
inc
inc
inc
ss
mov
sub
xor
or
inc
xchg
je
mov
xor
xor
adc
lods
insl
ljmp
daa
inc
xor
aaa
inc
sbb
insl
aaa
cli
data16
sub
adc
xor
push
mov
inc
ss
inc
cmp
inc
je
xor
test
sub
add
dec
arpl
inc
daa
test
nop
add
dec
dec
mov
in
or
sbb
imul
adcl
ret
jbe
mov
push
lret
push
lgs
push
outsl
dec
popa
bound
xchg
mov
cmp
pop
rclb
rorb
das
repnz
testb
jae
je
popa
mov
sbb
aaa
mov
xchg
lods
arpl
pop
insl
lahf
sbb
and
scas
insl
fs
pop
xchg
stos
jae
insl
bound
in
xchg
insb
jae
push
sbb
or
roll
sbb
xchg
sti
je
jo
daa
insb
dec
push
mov
push
sbb
pop
dec
popa
je
add
add
sub
and
mov
xchg
sub
pop
ja
sub
popf
inc
xor
jb
mov
xor
das
adc
out
mov
inc
sbb
bound
push
mov
ja
outsl
jae
mov
addr16
cmp
outsl
cmpsb
fldenv
mov
mov
das
sub
sbb
cmc
inc
sub
gs
ljmp
push
scas
mov
mov
int
jae
pop
sub
aam
add
or
dec
add
adc
mov
jbe
add
sbb
pop
cmp
outsb
nop
pop
mov
add
or
fs
add
lea
push
fs
push
mov
inc
xchg
xchg
sbb
push
or
mov
xchg
insl
and
xchg
sbb
call
aas
test
or
fnstenvs
out
lcall
sbb
lcall
fsub
shll
movsb
jns
shll
cmp
cmp
xor
test
add
mov
mov
pop
icebp
test
sub
add
add
inc
sbb
scas
loopne
inc
xchg
push
icebp
cmp
add
adc
leave
xor
add
add
int3
movsl
inc
push
jo
inc
jb
inc
insl
inc
es
xor
sub
inc
es
pop
dec
add
test
nop
or
adc
add
sbbb
sbb
cmp
mov
add
add
das
movsb
add
enter
jns
and
iret
lahf
lahf
sbbl
mov
test
inc
or
das
inc
mov
test
fistps
mov
in
call
decb
mov
ficompl
pop
pop
fisubrl
xor
pop
sub
rcr
fsubp
stc
stos
jle
outsl
and
adc
imul
cmpsb
imul
inc
push
sbb
sbb
push
or
pop
xorps
adc
sbb
or
add
pop
and
push
inc
inc
push
xor
pop
push
pop
push
pop
jmp
jnp
pop
insl
stos
and
lcall
roll
in
xorb
cmp
nop
addl
dec
sahf
mov
fsubs
mov
into
pop
xlat
test
in
or
pop
add
mov
add
inc
sbb
pop
push
adc
adc
add
iret
pop
mov
xor
lock
inc
imul
push
inc
adc
imul
adc
jae
dec
popa
outsb
fs
or
fstpt
or
sbb
xor
push
push
js
jb
lahf
mov
dec
outsl
fs
ltr
push
testb
adc
jno
addr16
push
push
mov
adcl
inc
add
fs
mov
outsb
outsw
adc
insl
insl
pop
dec
aaa
and
inc
int
js
xchg
or
mov
mov
or
mov
insb
aam
or
mov
push
lahf
mov
xchg
in
gs
jne
sbb
cmp
outsb
push
jo
pop
push
add
ret
loope
inc
mov
test
sbb
or
imul
dec
jne
test
pop
sub
mov
mov
push
addr16
jne
xchg
xor
test
adc
inc
push
popa
mov
add
inc
es
xchg
lods
popf
adc
outsl
jns
mov
lcall
clc
push
je
or
pop
andb
push
pop
or
adc
mov
xor
dec
push
lods
or
pop
test
add
dec
inc
dec
or
fs
dec
sub
test
adc
xchg
push
xlat
das
cmp
insl
aaa
test
dec
jns
xchg
fadds
es
insb
jne
push
addb
clc
gs
mov
push
jne
in
cmp
inc
push
inc
dec
add
jae
repz
mov
or
push
mov
add
pop
aaa
sti
into
push
mov
inc
or
add
nop
pop
inc
das
pop
xorb
cmpl
push
xchg
cmp
int3
jmp
lods
or
adc
test
jbe
nop
mov
aam
cs
fwait
and
ds
add
inc
idivb
inc
lock
pop
daa
negb
jb
jb
jmp
daa
jae
sub
and
dec
and
aam
add
add
adc
and
add
add
add
inc
add
call
int
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
and
add
pusha
add
addb
add
add
add
cmp
add
add
add
add
add
push
add
add
add
addl
add
add
add
add
add
nop
add
add
add
adc
add
mov
add
add
add
add
add
add
and
add
add
add
add
add
add
dec
pusha
ljmp
scas
mov
cmpsl
scas
mov
mov
xor
add
add
add
mov
jmp
out
idiv
out
idiv
repz
std
call
jno
add
add
add
add
or
add
or
add
add
add
add
add
or
adc
push
or
adc
call
jecxz
inc
aad
inc
aad
call
jecxz
lcall
jno
sbb
mov
add
add
add
add
add
add
adc
jno
sbb
cmp
bndldx
xchg
adc
lea
push
scas
mov
pushl
ljmp
mov
mov
fdivr
mov
ftst
lcall
pop
imul
sbb
mov
add
pop
sbb
sub
pop
and
add
add
add
add
pop
and
xchg
mov
cmp
inc
incl
pop
mov
jecxz
inc
in
mov
aad
popf
mov
decl
mov
mov
lcall
fwait
stos
decl
int
lcall
jb
and
aaa
scas
mov
sti
jmp
push
sub
add
add
pop
and
call
lahf
sub
push
dec
cmp
test
mov
call
xchg
test
jb
fwait
lcall
mov
dec
pop
js
aas
push
jb
cmp
pop
jp
cmp
cmp
and
inc
ljmp
jge
cmpsb
mov
dec
xlat
in
out
out
cmc
sti
lcall
push
and
add
add
push
adc
insl
ja
pushl
xchg
and
idivb
decl
arpl
jnp
mov
lcall
xchg
dec
pusha
jnp
inc
pop
jnp
push
outsl
mov
pop
jbe
lcall
xchg
pushl
dec
pop
call
lcall
pop
call
cmp
jl
xchg
ljmp
aad
out
repz
ljmp
cmp
add
add
aaa
inc
into
xchg
inc
inc
cmp
insb
push
and
adc
sub
cmp
cmp
jb
push
insb
xchg
adcb
decl
cmp
cmp
outsb
decl
cmp
inc
cmp
inc
cmp
jmp
pop
and
dec
push
incl
ret
lret
sub
add
add
call
scas
jns
cld
shll
sbb
sbb
adc
sub
bound
decl
jbe
pop
sub
and
push
ljmp
inc
pusha
ljmp
lcall
dec
frstor
cmp
dec
cmp
fildll
xchg
into
mov
ljmp
xor
inc
push
insb
ljmp
mov
lods
mov
aas
dec
pop
jmp
add
add
pop
and
decl
mov
inc
cmp
mov
daa
call
sbb
ljmp
dec
push
sub
ljmp
inc
popa
ljmp
inc
arpl
inc
inc
cmp
cld
sarb
inc
cmp
hlt
mov
cmp
sbb
dec
call
test
and
pop
decl
jp
jo
xchg
lcall
stos
mov
adc
mov
add
add
or
outsl
dec
rcr
decl
mov
inc
call
nop
adc
xor
and
inc
popa
ljmp
inc
pusha
lcall
cmp
decl
cmp
call
aas
pushl
dec
outsl
pushl
dec
incw
jne
inc
pop
je
pop
outsl
xchg
nop
fwait
stos
inc
lret
sar
inc
dec
pop
loope
add
add
adc
and
pushf
movsb
lods
mov
cmpsb
mov
incl
mov
cld
mov
and
pop
or
decl
adc
dec
ljmp
xor
iret
lcall
idivb
xor
ljmp
outsb
call
xchg
incl
jb
jbe
test
inc
lret
mov
movhps
add
add
add
add
add
or
add
push
and
in
inc
rcr
jmp
movsb
mov
incl
mov
cli
mov
and
lcall
and
incl
push
out
mov
dec
cmp
ret
ljmp
push
insl
cmp
jns
incl
jge
call
mov
loop
jnp
xchg
incl
or
cmp
add
adc
xor
shll
jns
push
jle
in
repnz
inc
shl
ljmp
mov
jmp
mov
clc
mov
lcall
and
pushl
ds
jmp
inc
ds
dec
cmp
test
incl
lahf
mov
mov
lods
ljmp
mov
ljmp
lret
aam
call
jmp
jns
arpl
ljmp
ss
int3
mov
mov
cld
out
cmc
cld
fucomip
icebp
call
loopne
call
fsubr
dec
fsubr
dec
fsubr
dec
xlat
out
fwait
cmpsl
mov
mov
mov
call
lcall
movsb
jl
dec
cmp
jnp
addr16
fsubr
call
fsubrp
jmp
jmp
xchg
scas
ljmp
orb
fs
lahf
pushl
xchg
sahf
mov
pushl
cltd
mov
inc
int3
sar
int3
sar
lret
ror
mov
mov
int3
inc
leave
sar
mov
mov
call
stos
sub
dec
cmp
frstor
test
lret
leave
sar
imul
mov
ljmp
xchg
mov
pushl
xchg
mov
pushl
jl
decl
mov
dec
into
sar
int3
into
sar
int
sar
int3
iret
sar
int
sar
int
sar
int3
iret
sar
mov
sar
fs
mov
rcl
dec
rcl
ljmp
mov
std
sarl
dec
cmp
call
pushl
rcl
jl
mov
decl
mov
insb
stos
mov
cltd
lret
aam
insb
lods
mov
dec
xchg
ljmp
mov
test
xchg
sti
std
push
cli
cld
push
stc
cld
jmp
jmp
xor
pushl
sti
std
clc
cli
std
out
repnz
lcall
inc
dec
cmp
lds
sub
dec
lret
ja
cmpsb
jmp
mov
test
cltd
mov
jg
jbe
cmpsl
jmp
stos
lods
incl
scas
mov
jno
test
mov
sar
rol
idiv
std
jmp
clc
in
repz
out
cmc
incl
mov
xor
mov
xlat
repnz
fucomi
bnd
lock
xchg
mov
std
sarl
cmp
call
fwait
sub
aas
xor
push
decl
sar
rcr
loop
ljmp
jmp
out
rcr
sahf
stos
mov
stos
mov
ljmp
cmp
or
nop/reserved
and
std
out
cmc
clc
jmp
icebp
cmc
pushl
mov
std
ret
cmp
dec
inc
xor
pop
jg
incl
mov
decl
jns
inc
ds
cld
sarl
mov
jp
jecxz
arpl
in
lods
sub
pop
dec
pop
call
es
pop
outsl
jg
iret
fneni(8087
mov
out
jmp
jmp
in
hlt
cli
js
call
sbb
xchg
adc
and
and
add
add
add
add
sbb
mov
into
sar
loope
idiv
shl
repnz
mov
cmp
push
aas
and
nopl
pushl
jp
decl
lods
jmp
cmp
jmp
cmp
jbe
xchg
fdivs
xor
xchg
lcall
sub
lcall
jp
jns
mov
call
out
jmp
icebp
stc
pushl
adc
pop
or
adc
jbe
fucomi
idiv
mov
lea
dec
cmp
in
mov
decl
pop
decl
sbb
jmp
aas
pop
pushl
xchg
inc
dec
cmp
lret
cmp
jmp
mov
dec
mov
clc
mov
and
sbb
sub
aaa
dec
pop
call
shl
call
out
pushl
mov
add
add
add
add
sub
dec
lcall
jmp
ljmp
mov
std
shll
clc
sarb
mov
sub
call
mov
dec
cmp
scas
jge
incl
xchg
pushl
enter
int
pop
jno
push
mov
cmp
mov
and
decl
jne
movsl
mov
sbb
cs
add
add
sbb
cmp
mov
aam
mov
mov
mov
cmp
sti
mov
xor
mov
sub
inc
cmp
dec
cmp
nop
imul
pushl
vsqrtsd
inc
clc
mov
cmp
dec
cmp
mov
xor
jmp
jae
add
or
or
lcall
lcall
pushl
ret
mov
mov
mov
push
mov
cmp
dec
cmp
lea
jmp
inc
jmpw
mov
incl
movsb
nop
in
mov
inc
cmp
sti
sarl
push
inc
and
call
adc
add
add
push
push
cmp
rcr
jmp
mov
fdivr
xchg
mov
incl
xlat
decl
mov
ljmp
mov
dec
notrack
inc
pop
lcall
mov
sar
ja
mov
lods
mov
cmp
dec
cmp
dec
out
cmc
cli
ljmp
cmp
add
add
add
add
xlat
push
clc
cld
fucompp
repz
fucompp
mov
fsubr
ljmp
popf
ret
outsl
lea
push
mov
clc
mov
push
incl
mov
fdivrp
mov
cmpsb
mov
dec
xchg
xor
stc
fcmovu
fdivrp
daa
xor
add
add
add
add
iret
xlat
std
jmp
xchg
fwait
push
cli
std
jmp
repz
fldl2e
repz
loopne
mov
test
xchg
lcall
mov
call
out
jmp
out
idiv
lock
cld
decl
inc
push
pushl
loope
cmp
add
add
add
add
shll
push
pusha
call
sbb
xchg
dec
pop
jmp
cld
std
inc
rcl
jmp
repnz
loopne
cmc
call
loop
dec
loopne
fdivp
cmc
jmp
hlt
stc
push
sti
std
push
cmc
idiv
mov
cmp
push
adc
dec
pop
ljmp
ljmp
add
add
add
add
adc
test
or
inc
add
add
add
add
adc
and
lcall
mov
out
clc
jmp
cmc
clc
push
sti
std
incl
jno
lcall
aaa
lret
and
push
add
add
or
inc
adc
test
add
pop
add
add
pop
or
cmp
clc
std
clc
std
std
call
insl
incl
or
add
add
add
add
daa
xor
mov
orl
incb
and
test
add
add
add
add
lock
lock
inc
add
loopne
add
rolb
pop
rolb
add
add
add
add
pop
rolb
pop
rolb
add
add
add
add
add
add
add
add
add
add
pop
loopne
add
loopne
add
rolb
add
add
add
add
pop
lock
psubb
pop
push
ud0
test
stos
incl
rcl
jmp
out
mov
xchg
xchg
call
incl
add
incl
test
stos
incl
rcl
jmp
out
mov
xchg
xchg
call
incl
add
incl
test
stos
incl
rcl
jmp
out
mov
xchg
xchg
call
incl
add
incl
test
stos
incl
rcl
jmp
out
mov
xchg
xchg
call
incl
add
incl
test
stos
incl
rcl
jmp
out
mov
xchg
xchg
call
incl
add
incl
test
stos
incl
rcl
jmp
out
mov
xchg
xchg
call
incl
add
incl
test
stos
incl
rcl
jmp
out
mov
xchg
xchg
call
incl
add
incl
test
stos
incl
rcl
jmp
out
mov
xchg
xchg
call
incl
add
incl
test
stos
incl
rcl
jmp
out
mov
xchg
xchg
call
incl
add
incl
test
stos
incl
rcl
jmp
out
mov
xchg
xchg
call
incl
add
incl
test
stos
incl
mov
push
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
fdivrp
mov
xchg
xchg
call
incl
add
incl
test
stos
incl
xchg
xchg
lcall
pushf
lcall
pushf
lcall
pushf
lcall
pushf
lcall
pushf
lcall
pushf
lcall
pushf
lcall
pushf
lcall
pushf
lcall
pushf
lcall
pushf
lcall
pushf
lcall
pushf
lcall
pushf
lcall
pushf
lcall
pushf
lcall
pushf
lcall
pushf
lcall
pushf
ljmp
mov
xchg
call
incl
add
incl
test
mov
fwait
fwait
fwait
lcall
lcall
lcall
lcall
lcall
lcall
lcall
lcall
lcall
lcall
lcall
lcall
lcall
lcall
lcall
lcall
lcall
lcall
lcall
lcall
lcall
lcall
lcall
lcall
mov
xchg
xchg
call
incl
add
incl
test
mov
mov
scas
scas
mov
scas
scas
mov
scas
scas
mov
scas
scas
mov
scas
scas
mov
scas
scas
mov
scas
scas
mov
scas
scas
mov
scas
scas
mov
scas
scas
mov
scas
scas
mov
scas
scas
mov
scas
scas
mov
scas
scas
ljmp
scas
scas
ljmp
scas
scas
ljmp
scas
scas
ljmp
scas
scas
ljmp
scas
scas
ljmp
scas
scas
ljmp
mov
incl
add
incl
test
xchg
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
jle
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
data16
incl
add
incl
test
cmp
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
and
decl
dec
decl
dec
ljmp
sub
push
push
push
cmp
cmp
dec
dec
dec
decl
dec
call
sbb
dec
decl
dec
pushl
xor
incl
add
call
push
call
incl
add
incl
test
cmp
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
push
push
inc
rol
rol
ljmp
outsb
call
adc
decl
rol
mov
mov
xor
dec
dec
inc
rol
rol
jp
jp
add
add
push
push
push
call
incl
add
incl
test
cmp
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
push
push
inc
rol
rol
ljmp
outsb
call
adc
decl
rol
mov
mov
xor
dec
dec
inc
rol
rol
jp
jp
add
add
push
push
push
call
incl
add
incl
test
cmp
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
xor
mov
jne
decl
or
mov
jne
pushl
and
pushl
sub
mov
dec
dec
decl
add
outsb
push
push
call
incl
add
incl
test
test
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
call
push
incl
add
incl
test
lods
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
mov
test
call
push
incl
add
incl
cltd
cltd
jmp
cmpsl
cmpsl
jmp
cmpsl
cmpsl
jmp
cmpsl
cmpsl
jmp
cmpsl
cmpsl
jmp
cmpsl
cmpsl
jmp
cmpsl
cmpsl
jmp
cmpsl
cmpsl
jmp
cmpsl
cmpsl
jmp
cmpsl
cmpsl
jmp
cmpsl
cmpsl
jmp
cmpsl
cmpsl
jmp
cmpsl
cmpsl
jmp
cmpsl
cmpsl
jmp
cmpsl
cmpsl
jmp
cmpsl
cmpsl
jmp
cmpsl
cmpsl
jmp
cmpsl
cmpsl
jmp
cmpsl
cmpsl
jmp
cmpsl
cmpsl
jmp
cmpsl
cmpsl
jmp
cmpsl
cmpsl
jmp
mov
add
add
jge
jge
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
push
push
push
incl
add
call
xlat
xlat
call
xlat
xlat
call
xlat
xlat
call
xlat
xlat
call
xlat
xlat
call
xlat
xlat
call
xlat
xlat
call
xlat
xlat
call
xlat
xlat
call
xlat
xlat
call
xlat
xlat
call
xlat
xlat
call
xlat
xlat
call
xlat
xlat
call
xlat
xlat
call
xlat
xlat
call
xlat
xlat
call
xlat
xlat
call
xlat
xlat
call
xlat
xlat
call
xlat
xlat
call
xlat
xlat
call
xlat
xlat
call
xlat
xlat
call
xlat
xlat
call
xlat
xlat
call
xlat
xlat
call
xlat
xlat
call
xlat
xlat
call
xlat
xlat
call
xlat
xlat
call
xlat
xlat
call
xlat
xlat
call
xlat
xlat
call
xlat
xlat
call
xlat
xlat
call
xlat
xlat
call
xlat
xlat
call
xlat
xlat
call
xlat
xlat
call
xlat
xlat
call
xlat
xlat
call
xlat
xlat
call
xlat
xlat
call
xlat
xlat
call
xlat
xlat
jmp
in
ljmp
incl
add
incl
add
incl
add
incl
add
add
add
add
add
xor
add
add
and
test
add
add
mov
mov
add
mov
add
add
aam
add
loop
add
repnz
add
mov
add
add
add
mov
add
add
add
push
dec
inc
dec
xor
cs
dec
dec
add
inc
dec
dec
xor
cs
insb
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
inc
js
je
jb
arpl
jae
add
push
push
js
arpl
gs
add
mov
or
gs
pop
adc
sub
add
and
cld
es
or
jmp
push
stos
mov
pop
xorl
pushf
jge
and
mov
stc
cmp
out
fsubp
std
add
leave
and
and
fwait
pop
push
mov
xchg
jno
push
cmp
sbb
sub
xor
jno
pop
inc
jns
lahf
cli
xchg
aam
cmp
lock
clc
incl
push
xchg
push
enter
ljmp
cwtl
push
cmpsl
mov
das
shrb
movsl
cmp
jno
lods
out
pop
mov
jb
es
xchg
xor
mov
lret
out
js
xchg
mov
push
xchg
imul
popf
ud2
bnd
rclb
subl
dec
pop
stos
cmc
cmpsb
lock
dec
out
int
in
mov
inc
pop
fwait
sub
push
push
inc
hlt
mov
inc
daa
into
in
sbb
jecxz
mov
in
push
or
stos
cs
loopne
rolb
inc
out
inc
cmp
pop
outsl
movsl
cmp
xchg
mov
xor
out
jmp
push
jo
mov
hlt
imul
movsb
mov
xor
inc
jp
xchg
lods
test
test
stos
outsb
inc
sbb
bound
stos
dec
xchg
in
data16
jno
cmp
cmp
pushf
andl
push
test
int
mov
inc
push
inc
and
negl
ds
xchg
cmp
xchg
pop
add
sub
es
fistpl
fucomi
jne
outsl
jno
jbe
adc
pop
mov
aas
lahf
bound
jecxz
mov
dec
mov
adc
sbb
movsb
sbb
xchg
dec
and
outsb
fnstcw
sti
xorb
cmpsl
shlb
mov
in
aaa
fildll
mov
dec
xor
mov
mov
xlat
out
inc
inc
mov
add
mov
and
jp
sbb
add
gs
lods
dec
inc
call
pop
aas
mov
fidivl
lods
lods
jmp
lret
cmp
arpl
pusha
je
andl
adc
scas
xchg
mov
lcall
sbb
in
mov
mov
mov
insb
sarb
mov
or
andb
pop
pushf
lds
fld
xchg
icebp
push
xor
cmp
push
out
sbb
mov
sub
data16
inc
int3
push
dec
imul
ss
jle
cmp
pushf
pusha
cmp
pop
int
mov
daa
xchg
dec
sbb
aas
lods
mov
cmp
jnp
or
mov
fs
int
test
pushf
mov
cld
int
imul
addl
adc
mov
pop
test
push
jo
pop
in
jg
sbb
dec
mov
call
add
mov
pop
pushf
mov
scas
push
sub
and
idivb
cmp
dec
cld
int
inc
push
sub
add
outsb
xchg
loop
mov
cmp
mov
or
pop
push
push
jno
xchg
dec
shll
js
xor
mov
fistl
inc
aam
or
je
cld
sbb
rcrl
or
test
cmpb
jl
outsl
xor
push
mov
pop
mov
lods
shr
xlat
icebp
pop
inc
int3
pop
les
jnp
inc
pop
scas
cmp
add
dec
icebp
and
mov
push
lahf
add
push
push
mov
lock
nop
ds
and
inc
mov
pop
pop
pop
inc
add
fnsave
push
mov
fisubl
movsl
add
and
rcr
es
jmp
daa
xor
js
fmuls
xor
imul
cli
cmp
cmp
pusha
loopne
mov
inc
sti
subl
rol
inc
inc
sbb
or
xor
mov
sbb
and
nopl
test
xlat
gs
aaa
jle
mov
stos
out
adc
jnp
push
dec
sub
push
xchg
adc
or
sti
addr16
inc
std
test
and
stos
mov
mov
add
mul
xchg
inc
pusha
jo
jbe
and
loop
js
lret
in
insb
cmp
inc
imul
popf
inc
lret
sbb
adc
lock
cld
stos
push
imul
scas
push
xchg
xor
js
int3
cmp
out
push
incb
nop
ret
mov
push
xchg
nop
cmp
insb
je
rclb
mov
mov
outsb
cmp
jmp
inc
fstpt
jg
jae
aad
or
ds
inc
pusha
fistpll
shlb
jbe,pn
es
mov
xor
cmpl
or
push
ljmp
xlat
popa
add
daa
cmp
cmp
xchg
xor
insb
stc
imul
lcall
insl
cld
jno
lret
sbb
imul
mov
dec
mov
loope
xor
ljmp
mov
subl
mov
push
test
pop
stos
rorb
cld
xor
sbb
inc
xorb
imul
inc
xchg
fs
inc
add
xor
mov
pop
dec
jmp
mov
shr
mov
add
sub
rorb
add
outsl
sub
or
xor
pop
pop
gs
shrb
cs
popa
add
dec
mov
mov
mov
lods
inc
dec
xor
call
out
mov
mov
dec
cmp
dec
dec
mov
mov
jl
and
push
adc
sbb
in
jmp
push
jl
pusha
jo
cmc
gs
pop
aaa
ret
xor
xchg
rcrl
out
imul
push
stc
push
sahf
ret
mov
pop
mov
cmp
cmp
stos
lods
aas
dec
fistpl
mov
shrl
xor
xchg
rorb
pop
imull
or
jmp
pusha
lods
xchg
sahf
sbb
das
mov
adcb
out
mov
push
in
out
pop
dec
sbb
fsubp
movsl
data16
jo
xchg
mov
xor
aaa
stos
dec
mov
mov
xchg
sub
or
jmp
xlat
test
dec
ret
subl
jg
xchg
or
inc
xchg
jnp
sahf
scas
addl
outsl
adc
imul
loop
sarb
bound
les
test
mov
or
jg
and
inc
mov
aam
inc
lods
sbb
mov
cli
adc
sub
repnz
mov
stos
pushf
xor
xchg
xchg
out
stos
pop
push
loope
and
or
dec
daa
sub
dec
cmp
in
sbbb
xlat
out
gs
popa
call
push
shrb
push
addb
jecxz
xchg
lret
push
jne
sub
fcoml
roll
xchg
sub
movsb
movsb
jno
add
es
cmc
dec
xlat
jmp
popa
fwait
test
mov
cld
insb
jmp
mov
fcoml
sbb
inc
xor
int
cmp
mov
jecxz
add
pop
pop
insb
out
lods
sti
test
in
sbb
inc
mov
inc
ret
xchg
pop
mov
popa
adc
mov
bound
lods
cmp
sub
addb
rolb
pop
stos
mov
xlat
jo
dec
daa
cs
mov
arpl
xchg
mov
push
push
and
jne
pop
mov
mov
hlt
iret
cld
mov
mov
movb
clc
mov
push
lea
jae
dec
mov
mov
and
jp
add
push
jns
notl
jl
jo
xor
sub
mov
popf
push
cld
dec
adc
mov
push
mov
adc
ret
ljmp
pop
and
mov
loopne
stos
sub
jae
inc
das
cmpsl
xchg
js
cmp
out
mov
sbb
xchg
add
sti
pop
add
mov
repz
mov
sub
mov
das
mov
fwait
lahf
jns
push
mov
hlt
jne
pop
dec
insl
sarl
sub
jnp
pop
sub
mov
mov
in
mov
enter
fnstsw
pop
hlt
mov
rolb
jns
or
jne
cmp
or
sbb
xchg
faddl
pop
bound
xor
shlb
inc
orb
push
mov
mov
adc
scas
push
and
int3
xor
push
dec
aaa
test
dec
mov
sub
call
int3
xchg
jno
add
scas
mov
fdivs
or
and
mov
xchg
outsb
push
dec
cmp
inc
mov
adc
jo
daa
loope
flds
ficoms
fisubl
lock
in
and
dec
lahf
cmpsb
stos
mov
inc
wrmsr
sahf
imul
js
lcall
sbb
out
inc
mov
jmp
and
and
sub
xor
ss
jae
xchg
pop
pop
xor
xor
repz
lods
push
insb
popf
inc
xor
fucomi
pop
and
inc
xchg
jg
xchg
push
pop
push
jg
enter
mov
jns
inc
dec
push
pop
fsubs
dec
xchg
orb
imul
imulb
repnz
shlb
add
fbld
sbb
adcl
mov
sbb
jne
es
mov
xor
int3
dec
sub
icebp
cmpb
adc
push
inc
enter
fiaddl
sbb
call
mov
jecxz
imul
enter
lahf
pop
test
bound
movsl
daa
adc
pushf
daa
cmc
lods
inc
mov
push
es
mulb
fldl
inc
cltd
mov
pop
mov
or
inc
xchg
out
adc
fadds
xor
into
xchg
or
mov
mov
aad
imulb
xchg
jl
movsl
and
testb
imul
sbb
mov
test
jne
mov
shl
cmpsl
push
adc
add
je
mov
sbb
inc
xorb
and
dec
pushf
dec
xchg
sbb
fisttps
loop
cltd
jge
dec
xor
jns
jmp
insl
fcmovb
aad
sti
cmpsb
ds
mov
and
pop
mov
enter
mov
xchg
cs
jle
push
lahf
inc
lahf
or
test
add
mov
cs
adc
adc
xchg
loop
sub
jnp
sub
inc
adc
es
sub
imul
pop
mov
push
dec
adc
pop
call
mov
in
rorl
dec
or
stos
mov
adc
rorl
jae
mov
cli
mov
fdivl
jno
mov
xor
mov
mov
xchg
pushf
adc
addb
adc
in
enter
adc
xor
pop
jnp
mov
dec
sub
pop
xchg
mov
pusha
outsb
roll
or
jge
cld
popf
mov
clc
sbb
test
adc
cmp
testl
adc
mov
or
pop
leave
pop
das
inc
stos
push
das
push
mov
cltd
or
cmp
fsubs
mov
into
cli
inc
add
jl
pop
and
mov
fistps
sahf
pop
sbb
gs
mov
add
faddl
out
jle
dec
jg
push
ret
add
out
inc
push
clc
add
insb
and
push
test
addr16
movsb
ret
ret
fsubs
xchg
xchg
dec
addr16
xchg
xchg
or
nop
dec
or
cmpsl
test
mov
aaa
hlt
dec
mov
scas
cmpsb
xor
pop
sub
daa
jbe
cltd
sub
cltd
imul
pop
fs
cmp
lock
in
mov
adc
xchg
adc
push
sahf
mov
pop
inc
or
dec
stc
adc
xchg
mov
ret
jp
arpl
leave
fs
mov
or
push
inc
imul
int
push
cmp
cltd
mov
cmp
add
subb
adc
cmp
jmp
push
sbb
and
mov
jg
std
mov
xchg
mov
icebp
stos
jp
sub
push
sbb
lods
jge
fs
or
xchg
lret
aaa
clc
pop
push
sub
xor
adc
adc
or
dec
int
mov
lea
pushf
lods
cmc
push
add
cmp
outsb
out
xchg
jp
lds
pop
dec
outsb
add
xchg
scas
and
sub
xor
scas
or
shlb
xor
mov
outsb
and
sar
xor
add
dec
inc
bound
sub
push
jmp
or
xor
dec
std
jle
out
loope
cmc
pusha
xchg
out
cmpsl
testb
cmpsl
push
xor
jle
push
mov
push
mov
lret
add
jns
into
lahf
subl
inc
fs
xor
mov
arpl
xlat
cmp
stos
add
and
leave
cs
xor
imul
or
push
rcll
int3
rcrl
mov
dec
pop
gs
daa
add
lret
fistpl
cmp
outsl
dec
daa
aaa
ljmp
shl
sahf
pop
push
push
xchg
mov
and
aaa
mov
jb
bound
push
or
xor
das
cmp
rcll
into
pop
rcr
dec
loop
or
mov
adc
pop
pop
leave
pop
aaa
xor
je
dec
adc
pop
fsubrl
mov
xor
daa
jo
dec
mov
push
or
jae
ja
ja
in
movsb
mov
imul
cmpsb
xchg
jecxz
add
and
push
push
and
jg
aad
fbld
mov
scas
inc
outsb
roll
and
dec
push
mov
notb
xchg
fstps
movsl
ja
negb
movsl
cmpsb
mov
xchg
dec
add
stos
loopne
mov
aaa
loopne
mov
nop
mov
jp
push
aad
ja
enter
test
lock
cmp
pushf
adc
lods
bnd
push
pop
sbb
jmp
push
add
adc
gs
outsl
add
int
xchg
icebp
sti
rclb
cld
and
pop
sub
es
out
xor
jbe
jae
shll
pop
sbb
jl
addl
cmp
in
mov
aas
push
test
mov
cmpsb
dec
movsb
mov
or
pop
mov
nopl
mov
push
xchg
xlat
scas
and
sub
ds
dec
xchg
and
call
js
jne
inc
sbb
mov
jno
pop
hlt
lret
jl
hlt
push
out
fimull
in
cli
rolb
fnstsw
cmpsb
mov
clc
mov
xchg
sarl
movb
pop
lahf
lret
add
scas
test
popa
add
mov
sbb
bound
rolb
jle
lods
sti
mov
fucomp
add
loope
xchg
lods
lret
pand
jns
ljmp
jno
sub
loopne
xchg
pop
insb
dec
xor
sub
daa
loop
xchg
or
xchg
fwait
ss
jecxz
ret
imul
sbb
arpl
int
aad
dec
test
sub
push
dec
jbe
mov
mov
insb
fsubl
xchg
frstor
sub
or
in
shll
push
in
sti
filds
or
dec
rol
pop
cwtl
test
lcall
je
outsb
repz
sbb
mov
mov
orb
mov
adc
stos
lret
add
mov
out
push
test
stc
mov
stos
loope
mov
push
lods
pop
mov
lods
in
scas
aas
push
pop
or
mov
mov
pop
inc
aaa
fadd
aas
xchg
sbb
sbb
pop
adc
push
sar
insl
mov
out
jl
xchg
in
inc
mov
mov
jl
movzwl
jge
push
dec
pop
or
sarb
jp
cmp
movb
mov
or
sub
popa
cld
notb
xor
loope
mov
jg
movsl
push
arpl
cmp
inc
je
ret
lods
sar
clc
js
test
cmp
push
and
sub
mov
sbb
xor
or
inc
insl
sub
jecxz
jge
out
aaa
cmc
addl
loope
sbb
cmp
mov
xorb
or
xrstor
xor
xor
dec
cmc
push
and
sti
in
fadds
xchg
insb
xchg
loope
mov
dec
adc
mov
inc
pop
push
fstpt
mov
cmpsl
xor
ficoms
adc
pop
lock
and
inc
cmp
test
outsb
add
pop
jnp
push
push
fisubl
push
jge
xchg
sarl
rcrl
ja
or
jg
lods
xor
addr16
enter
dec
fs
data16
push
out
es
push
adc
adc
mov
repnz
pop
testb
clc
mov
sbb
scas
js
lahf
mov
lods
jae
int3
cmp
fistpll
sub
movsl
jge
or
cmp
mov
sar
fimuls
aam
movsb
push
jns
aas
nop
adc
cmp
inc
adc
mov
lods
lret
arpl
test
xchg
je
jno
imul
inc
xchg
jo
mov
xlat
adc
repnz
out
out
push
inc
shll
xor
inc
and
add
and
clc
aas
lea
mov
add
pop
pop
insb
loopne
pop
cli
jecxz
dec
je
dec
push
and
cmpsl
lods
jl
iret
lcall
jecxz
mov
cmp
push
jl
fs
and
inc
push
sbb
push
dec
cmpsl
sbb
das
or
xchg
push
divl
push
sbbb
jg
int
orb
fwait
mov
sbb
add
sbb
fsubrl
outsl
das
aam
push
les
movsl
inc
outsb
jns
jg
xor
cmp
mov
cmp
pop
or
jg,pn
mov
xchg
pushf
cmp
xchg
pushf
xor
pop
aam
fistps
or
xchg
xlat
out
cmp
sti
add
mov
dec
sbb
ret
add
imul
push
bound
hlt
out
cld
arpl
rorb
xchg
call
push
mov
xchg
fsubs
mov
jne
or
push
aas
and
int
push
test
xor
push
inc
lcall
sbb
arpl
xchg
daa
mov
adc
pushf
lods
add
xchg
xchg
out
cmp
add
sarb
pop
shlb
xorl
mov
sub
mov
cltd
enter
adc
mov
leave
insl
mov
pop
push
add
lods
mov
mov
mov
pushf
in
adc
repnz
push
push
nop
pop
cmp
fcompl
sahf
cltd
and
data16
mov
or
or
out
jmp
pushf
jno
cmp
les
mov
test
cltd
jnp
jp
fcoms
js
call
push
nop
aas
mov
clc
mov
insb
ljmp
xchg
jo
dec
dec
nop
mov
mov
mov
jg
cmc
jmp
leave
cli
mov
ret
testb
mov
popf
in
pop
mov
xchg
mov
pop
leave
pop
mov
lret
and
dec
in
leave
icebp
and
cmp
inc
pop
std
dec
ljmp
mov
mov
pop
cli
and
mov
inc
pushw
adc
push
mov
mulb
call
jns
xchg
std
and
hlt
pop
mov
aas
out
adc
mov
inc
in
gs
xchg
pop
push
pop
insb
inc
hlt
hlt
push
pop
int3
das
adc
push
pop
mov
jae
inc
lret
push
xor
mov
jge
pop
mov
imul
mov
movsb
sbb
pop
adc
aaa
aad
les
mov
sbb
xlat
loope
pop
inc
loope
adc
dec
mov
jb
insb
nop
add
mov
sub
mov
cmp
fistpl
or
xchg
lahf
mov
call
dec
xchg
dec
add
and
frstor
out
or
cld
cmp
call
inc
enter
movsb
mov
mov
dec
lahf
gs
aam
add
dec
cmp
xor
outsb
sub
stc
out
js
mov
dec
cmp
test
cmovns
and
dec
lahf
cmp
pop
subl
mov
testl
je
sbb
sub
mov
push
mov
mov
lds
push
mov
rcrb
push
xlat
imul
out
aad
popl
popa
cmp
cmp
mov
and
rorl
roll
stos
cmp
dec
pop
into
leave
pop
repz
mov
fildll
and
fs
adc
add
sbb
xor
xchg
ja
mov
push
aas
inc
jle
xchg
mov
add
mov
arpl
mov
movsl
xor
out
and
lea
dec
dec
push
insl
outsb
xchg
pop
mov
or
push
dec
testb
pop
enter
daa
sub
ud2
lea
xlat
mov
daa
icebp
aad
or
mov
add
fnstcw
xchg
ss
daa
outsl
mov
sahf
pop
shrl
push
inc
mov
clc
mov
repnz
pop
dec
insl
push
pop
pushl
push
cltd
xchg
popa
mov
int3
jge
imul
jae
lods
dec
dec
lret
sbb
jmp
inc
and
sub
daa
fsubrl
push
jle
push
mull
pop
cmp
mov
push
in
mov
addr16
sub
inc
and
fs
je
add
and
xchg
lods
out
push
cmpsl
push
outsl
cwtl
adc
adc
sbb
cmp
fistpll
pop
and
lock
andl
inc
push
cli
scas
inc
outsl
sub
jecxz
pop
in
xor
outsb
cmpsl
cld
sbb
pusha
mov
js
ja
push
jo
inc
stos
in
lock
lea
mov
push
push
cmpsl
adc
pop
scas
dec
cmp
and
mov
fadd
das
loope
call
rcrb
and
pop
mov
push
sub
insl
xor
mov
jge
push
dec
xchg
sub
cmp
nop
add
fcom
aaa
inc
pop
dec
test
push
jne
add
ss
dec
or
pop
scas
jbe
in
add
push
xchg
or
push
xchg
test
xorl
cmp
faddp
cli
cmc
leave
out
ret
lret
loopne
movsb
xchg
pop
data16
fldl
push
or
adcb
push
add
lcall
iret
fisubl
cwtl
mov
and
xor
cld
cmp
stos
in
int3
loope
xchg
sbb
cmp
gs
mov
cwtl
rorb
stc
scas
jmp
ret
popf
arpl
jno
jle
repnz
das
pushl
jl
adc
jne
into
mov
adc
xchg
sarl
or
inc
inc
fsubs
test
sarb
daa
xchg
fnstsw
push
je
mov
je
sbb
push
shll
ds
arpl
imul
mov
aam
lock
icebp
mov
sarb
imul
test
sub
int3
test
pop
xchg
push
mov
fstpt
sub
clc
mov
popf
push
inc
daa
add
adcb
test
mov
lret
lret
outsl
call
cmp
mov
sub
mov
inc
inc
movsl
into
fstl
inc
addr16
imul
insb
cmp
jb
xor
out
loope
fldcw
call
adcl
imul
xchg
sar
cmc
sbb
jae
inc
mov
cli
push
xchg
pop
int3
loop
out
jecxz
leave
push
xchg
das
mov
push
ret
and
jmp
cmp
xchg
addr16
clc
fmulp
pop
xchg
or
fwait
andl
out
jae
sub
add
in
push
ficomps
loop
lds
xchg
inc
pusha
loope
sbb
push
inc
push
sbb
dec
stc
adc
cli
xchg
xchg
inc
sbb
int
jne
jns
sub
jmp
sbb
ret
sti
call
call
std
cmp
fs
push
adcl
call
jbe
fcoms
dec
push
mov
mov
test
or
loope
mov
xor
adc
fnstenv
bnd
lods
in
xor
hlt
movsb
fnstcw
imul
mov
enter
fcomps
nop
stc
or
test
pusha
push
pop
or
loope
mov
cltd
push
dec
adc
push
push
movsb
faddl
fildl
sti
int3
insb
mull
pop
pop
hlt
mov
in
jmp
adc
loop
jmp
mov
cmp
roll
mov
fcoms
pop
jne
xchg
xor
push
cmp
push
add
add
inc
push
cmp
jl
test
iret
jb
jno
xor
xchg
or
ss
bound
fadds
push
inc
mov
xchg
or
rclb
pop
mov
imul
sbb
push
orl
leave
dec
jo
mov
sbb
imull
xchg
adc
addb
lods
shl
push
pop
mov
popa
outsl
fmul
adc
mov
ret
jno
jle
push
dec
jle
incl
stos
add
mov
jg
je
pop
in
call
sub
xor
or
pusha
mov
out
sub
add
arpl
and
push
repnz
pop
std
icebp
xchg
out
outsb
mov
out
jns
leave
pop
loopne
sub
add
and
sbb
add
clc
in
add
push
mov
push
mov
arpl
push
pop
repnz
lahf
mov
dec
push
sti
nop
fsubs
add
xchg
or
mov
mov
and
push
push
sarl
dec
pop
jmp
lods
xor
movsl
lods
xchg
xchg
mov
test
sub
movsl
filds
cmp
inc
ljmp
inc
add
dec
add
jecxz
jmp
xor
or
inc
inc
xor
add
adc
jle
dec
xchg
cmp
push
sub
bound
or
ljmp
out
sbb
jmp
mov
seta
repnz
add
lret
push
ja
mov
outsl
cmp
pushf
cmp
fbstp
xor
cmp
adc
jg
jmp
adc
pushf
sub
push
arpl
pop
mov
mov
push
pop
sub
out
cld
lods
add
movsl
dec
push
cmc
rolb
ret
sbb
imull
lcall
adc
lahf
sub
pushf
pop
test
pop
lret
adc
bound
push
mov
inc
pop
and
and
in
mov
popa
push
cltd
ds
jae
out
jp
push
push
std
mov
mov
cwtl
push
sub
xchg
insl
mov
mov
negl
fcoml
xchg
out
push
push
imul
test
fdivs
sahf
adc
rcrl
mov
jge
int3
mov
nop
roll
stc
iret
sub
test
and
mov
inc
cmpb
dec
in
jmp
push
fwait
lock
and
xor
pop
mov
sub
les
jp
lahf
fcmovnu
inc
aas
cmp
out
xor
pop
in
push
fimuls
in
popa
fdivrs
cwtl
enter
mov
cli
sub
inc
movsl
arpl
repnz
jmp
out
mov
and
push
mov
mov
lock
cld
call
sbb
sti
dec
adc
cmp
dec
pop
mov
xchg
xor
jp
fldcw
mov
pop
orb
xchg
mov
dec
popa
outsl
lret
add
xchg
sbb
lret
and
or
in
jb
lds
push
loopne
rcrl
mov
mov
cld
dec
andb
cmp
imul
mov
inc
sub
jno
xorl
int
movb
mov
or
imul
sub
jmp
jnp
xor
push
mov
lea
outsb
test
jle
and
sub
mov
inc
xchg
out
jecxz
sbb
cmp
sbb
add
and
pop
int
push
test
sub
fldenv
sub
xorb
mov
mov
movsl
jmp
push
lods
fidivl
out
es
xchg
icebp
add
pop
fcmovnb
mov
arpl
jbe
je
rorl
mov
andb
lret
leave
add
in
repnz
mov
sub
mov
xchg
pushf
pop
add
loopne
out
scas
adc
add
ret
outsb
mov
scas
xor
imul
jge
mov
mov
daa
test
iret
mov
inc
pop
cli
subb
mov
and
cwtl
nop
dec
mov
xchg
gs
xchg
lock
aam
pusha
inc
xchg
ss
pop
das
movsb
fs
and
inc
daa
jns
test
stc
xlat
pop
ljmp
fidivl
cmc
cmp
out
add
rorl
iret
mov
sbb
int
mov
mov
adc
and
cmp
sahf
push
inc
ret
and
xchg
enter
shlb
jno
notl
es
jecxz
pop
iret
dec
push
push
mov
mov
mov
and
dec
jl
mov
in
mov
mov
pushf
test
test
or
pop
sbb
pop
gs
jecxz
xor
stos
daa
outsl
outsb
or
dec
pusha
dec
adc
jge
ljmp
rclb
pop
clc
and
xor
stos
dec
cld
leave
dec
xor
ds
jmp
pushf
mov
pushf
ja
enter
or
xor
cmp
sbb
insl
in
add
add
pop
add
xchg
sbb
stos
imul
or
add
mov
mov
out
fxtract
imul
sahf
pop
aad
outsb
js
ss
fidivrs
ds
jns
mov
pop
cld
lods
sti
rcrb
inc
cmc
scas
bound
and
and
test
pop
push
into
sahf
les
jno
data16
xor
xchg
sbb
push
aas
mov
movsl
push
inc
mov
faddl
push
ds
cmp
or
fsubrp
imul
out
cmp
xchg
imul
loope
pop
cwtl
xchg
jnp
aaa
jg
lea
adc
dec
aad
sarb
or
scas
sub
fildl
mov
mov
pop
cmp
inc
and
xor
xor
roll
movsb
test
pop
inc
adc
in
enter
xchg
lock
sub
or
sub
xor
aas
movsb
aad
pop
test
daa
xlat
push
std
lods
mov
xchg
sub
fsubl
sbb
outsl
shlb
add
mov
lret
lds
push
mov
mov
inc
js
lock
imul
xor
int3
or
sbb
mov
lahf
sbb
lea
dec
iret
inc
iret
test
xlat
push
cltd
test
in
lret
lods
shrb
leave
ja
mov
and
cmpsb
mov
gs
dec
jo
mov
xchg
cmp
or
jp
and
insl
pop
mov
add
out
in
fcompl
or
jns
stc
or
jne
leave
fsubs
popf
sar
nopl
and
lods
aaa
and
sbb
ss
dec
add
inc
std
mov
sub
dec
dec
mov
adc
lds
push
lock
cmp
mov
jbe
gs
outsl
test
pop
test
rorb
pop
inc
xchg
xchg
iret
xorl
adc
data16
out
cmp
cld
xchg
out
xor
xor
push
sub
jne
cltd
ret
mov
mov
orl
cmpsb
mov
push
lahf
and
mov
hlt
ljmp
or
mov
xorl
mov
cmpsb
jmp
xchg
inc
add
ja
mov
adc
pop
pop
sbb
and
xchg
mov
adc
pop
insl
enter
fcmovb
daa
xchg
xchg
fists
repnz
and
or
and
mov
mov
cmp
test
and
jl
add
pop
data16
sub
and
jl
sbb
out
push
cmp
in
out
sbb
mov
mov
sub
cld
vpor
leave
je
shll
enter
xchg
fnsave
sbb
pop
dec
and
inc
vprotq
xor
ret
iret
push
repz
sbb
mov
or
iret
fdivp
sbb
addr16
loop
mov
xchg
out
mov
daa
xchg
xlat
sub
or
into
jbe
and
out
mov
lcall
fidivrs
sub
pusha
mov
imul
xchg
imul
push
mov
dec
dec
mov
jle
iret
ret
push
or
xchg
mov
rolb
jecxz
sbbb
shll
lea
pop
and
js
mov
jo
adc
icebp
xlat
outsl
ficoml
aam
or
shl
mov
mov
test
push
lahf
dec
jp
jne
pop
mov
push
aaa
mov
out
push
test
pop
sbb
xchg
xchg
ja
jae
jbe
inc
dec
sbb
imul
rcr
ficompl
pop
insl
mov
dec
jb
mov
adc
imul
cmp
ds
je
ja
xor
push
add
and
sbb
xor
sbb
or
sbb
jae
ds
dec
nop
popl
push
aad
mov
lock
cmpsl
jge
in
mov
ficomps
pusha
les
sub
arpl
cltd
dec
nop
sub
cs
cltd
lret
cld
mov
fsts
xor
pop
inc
or
das
mov
lds
jns
shrb
sbb
pop
mov
mov
adc
cmp
pusha
jnp
es
fwait
lret
mov
data16
je
popf
mov
pop
sub
and
add
pop
or
dec
or
mov
out
or
sub
mov
sub
and
loope
xchg
xor
jg
addr16
xlat
in
std
sub
lret
dec
fistl
jmp
in
inc
les
jge
sahf
addl
inc
or
sti
pop
lock
xor
les
sbb
popl
xorb
adc
lret
mov
out
out
loopne
sti
jnp
js
push
ret
mov
pushf
cmp
and
loope
sti
adc
sbb
cmpsb
icebp
clc
sbbl
fdivl
movsb
lods
enter
mov
mov
cmpl
jne
lret
mov
sub
dec
mov
clc
adc
insl
inc
mov
aam
push
movsb
stos
xor
leave
add
ret
xor
scas
es
stos
mov
jp
mov
push
in
cltd
sbbb
inc
mov
rclb
in
cmpsb
cli
fstps
jno
jnp
mov
jnp
in
hlt
dec
or
test
cwtl
dec
nop
pop
cmp
out
and
add
pushf
aas
loopne
mov
nop
icebp
mov
js
push
cmp
pop
cmc
pushf
push
inc
jge
push
jne
xor
dec
mov
sbb
adc
sarl
jb
pop
cmpsl
inc
adc
insl
cli
call
pop
or
add
jg
fisubrl
push
popw
inc
xchg
or
jg
in
ja
xchg
and
fwait
cmp
fistpll
mov
add
pop
pop
lods
mov
mov
in
jg
lahf
push
mov
js
stos
and
and
mull
loop
dec
pop
cmp
adc
add
mov
fs
aas
pusha
and
sbb
push
aad
psllw
push
in
data16
dec
and
decb
lahf
dec
xor
and
into
clc
fimull
sbb
std
jl
in
inc
rolb
adc
arpl
movsl
and
lcall
push
faddl
stc
loope
dec
jbe
push
ljmp
mov
out
sbb
xchg
cmp
mov
inc
fldt
mov
inc
arpl
pop
imul
aad
add
in
xchg
xchg
lods
xorb
and
sbb
jg
dec
ja
and
adc
in
insb
int
add
push
mov
mov
jo
inc
adc
xchg
sub
lods
cld
pop
icebp
mov
dec
add
adc
enter
cwtl
lock
push
add
inc
jno
xor
test
cli
adc
jmp
loopne
faddp
lods
adc
xor
adc
decb
pop
push
xor
xor
add
in
push
pushf
mov
cmp
daa
sbb
sub
pop
inc
mov
jmp
cwtl
jo
or
push
in
jno
adc
es
std
repnz
jne
aad
pop
push
idivb
jp
add
pop
test
adcb
sub
pop
fs
mov
rcrb
push
push
mov
pushf
pusha
dec
fisubrs
push
push
sbb
arpl
testb
sub
dec
loop
fwait
fwait
or
adc
into
stos
xchg
mov
mov
push
xchg
movsl
ficompl
mov
imul
fs
imul
sbb
adc
inc
es
repnz
xchg
out
popa
cmp
pop
mov
lret
sbb
push
jb
outsb
push
inc
imul
add
xchg
roll
push
clc
int
push
nop
xor
int
jl
mov
add
out
pop
adc
sub
stos
inc
dec
xchg
sbb
push
ret
icebp
mov
aas
fcom
in
addl
or
inc
in
mov
push
daa
sbb
xchg
call
mov
push
add
fcoml
cli
pmuludq
fsubs
movsl
jbe
test
sti
enter
lods
push
int3
lods
inc
imul
fisttpll
push
in
mov
or
sbb
cmp
aaa
orb
mov
lods
sub
sbb
mov
cmp
arpl
addr16
cmc
nop
or
mov
jb
dec
push
mov
jb
mov
enter
inc
pop
scas
mov
das
cmp
scas
loope
inc
loope
push
adc
inc
xchg
lock
cmp
arpl
loope
jnp
xchg
lods
xor
cmpsb
pop
sub
mov
fldcw
addr16
lcall
fs
mov
pop
mov
gs
sbb
jle
jo
and
cmpsl
jb
popf
dec
dec
xchg
ja
pop
and
sbb
xlat
or
rclb
jmp
out
pop
add
insb
push
pop
cld
in
bnd
push
popf
jns
mov
mov
mov
lret
arpl
movsb
mov
push
into
fs
or
fxch
mov
pusha
cli
lods
sbb
pusha
out
mov
sbb
add
daa
fwait
sub
std
sarl
int
iret
outsb
mov
insb
sub
mov
xchg
xchg
pop
rcrb
imul
cmp
pushf
pop
int3
xor
jmp
imul
rcl
ret
rclb
sbb
fwait
xor
sbb
pop
inc
adc
ja
push
inc
add
rcrl
in
test
frstor
mov
lods
push
push
lds
mov
pop
jecxz
jns
xchg
test
hlt
and
out
call
jp
mov
adc
lods
fabs
data16
ss
sub
in
xchg
nop
jnp
les
jns
or
ljmp
icebp
ret
jp
insb
jmp
addr16
ret
les
loopne
std
rorb
mov
cld
lret
lcall
push
xchg
jb
rcrb
pop
xchg
ja
jecxz
iret
jle
cmp
in
or
adc
xchg
mov
das
popf
jp
test
shrb
jns
xchg
addr16
addl
cmpsl
xor
cmpb
cmp
push
mov
lods
mov
ljmp
cltd
js
aad
test
mov
inc
popa
add
mov
fs
ret
mov
or
in
dec
inc
pop
xlat
jp
sub
cmp
cmpsl
dec
inc
fsts
mov
sub
jle
popa
jo
out
fwait
dec
stos
jmp
test
in
cmp
inc
mov
pop
dec
pop
cmp
xorb
cmp
test
mov
sub
xor
or
mov
outsb
dec
ja
rolb
jno
xor
jno
xchg
xchg
outsb
fdiv
dec
mulb
xor
sub
scas
inc
mov
fucomp
jno
insb
loopne
or
mov
mov
mov
icebp
pop
mov
mov
push
shll
lods
dec
imul
movsl
or
cmp
add
jmp
mov
jecxz
mov
test
outsb
adc
jle
mov
inc
dec
leave
cmp
out
cli
inc
icebp
push
outsb
clc
cmp
mov
popf
cld
pop
fsubrs
mov
fcmovb
sti
insl
jp
jne
cmp
in
and
adc
pop
int
jnp
mov
mov
fs
roll
hlt
outsb
es
imul
or
adc
lods
clc
lahf
inc
mov
scas
cli
rcrl
int3
das
ret
xchg
xor
pop
lcall
imul
les
lds
mov
dec
ficomps
pop
mov
or
outsl
lret
or
fiaddl
and
and
cmp
daa
les
dec
ja
xchg
rol
jmp
sarl
lret
lock
pushf
and
stc
pop
dec
jne
dec
and
dec
jg
jp
mov
cwtl
test
jg
mov
popf
jl
mov
mov
xlat
fnstenv
or
fnstsw
and
and
mov
jns
jg
clc
loopne
test
hlt
adc
adc
xchg
sbb
out
mov
ret
xchg
adc
shlb
pop
mov
lahf
mov
arpl
ja
popl
notb
aas
mov
imul
inc
push
push
adc
inc
sub
dec
insl
or
call
sub
and
sub
js
hlt
in
cmp
imul
mov
cmp
mov
adc
sbb
sbb
ds
mov
jecxz
imul
or
aam
xor
cmp
or
jno
shlb
subl
ret
push
mov
orl
xor
outsl
or
aas
pop
jne
dec
mov
and
adc
inc
std
movsb
sub
iret
xor
ljmp
mov
sbb
jg
jle
fwait
pop
popf
shr
sub
mov
mov
mov
cwtl
jns
ret
cmp
and
clc
mov
jo
xchg
hlt
das
xchg
out
int
imulb
pop
roll
nop
pop
rolb
fbld
mov
sub
dec
xor
in
out
sbb
andl
outsb
dec
in
sbb
fstpt
ret
sarl
jae
popf
jg
mov
shll
mov
mov
push
jmp
lock
nop
sbb
ljmp
adcb
or
mov
cs
idivl
fwait
add
push
xchg
pushf
xchg
call
or
mov
aaa
repz
lcall
mov
out
in
clc
divb
je
xor
aaa
xchg
fcomip
ret
mov
imul
into
adc
or
xchg
mov
sbb
ret
add
gs
dec
lret
pushf
xchg
call
xchg
dec
flds
jl
out
adc
push
or
mov
negl
lea
insb
dec
out
mov
ret
dec
movsb
sub
shll
lea
sarl
in
sub
in
cmp
push
fs
test
adc
ss
insb
push
add
loope
push
sbbl
sbb
loope
pop
movsb
pop
mov
dec
imul
out
inc
or
cmp
pop
or
cmp
arpl
std
scas
sbb
fsub
nop
test
mov
push
int3
adc
fisttps
and
cmp
xchg
in
inc
push
das
das
int
dec
jno
inc
jne
adc
dec
arpl
push
ljmp
sbb
rcll
or
sti
inc
mov
mov
in
cmp
mov
bound
dec
mov
push
leave
xor
sbb
negb
fstl
data16
cs
sub
inc
adc
inc
ljmp
xchg
rcrl
fisubs
cltd
xor
and
cmc
leave
aad
mov
and
lret
mov
and
sub
mov
xor
mov
icebp
cld
outsb
sbb
sbb
xor
in
daa
dec
xchg
lock
lea
inc
data16
dec
arpl
push
cwtl
cmpsl
iret
push
push
cltd
lret
jnp
in
lock
lcall
roll
int
enter
mov
mov
mov
xchg
test
and
rorb
out
adc
jb
jle
in
mov
adcl
cmpsb
sub
cmp
in
mov
jp
sbb
mov
dec
scas
dec
cld
push
iret
xchg
jnp
ret
cli
arpl
sti
push
data16
add
shrb
dec
cltd
cmp
xchg
idivb
jp
or
cmp
add
cmpsl
adc
ss
js
or
sti
jno
js
mov
sbb
push
insb
inc
and
pop
rorb
imul
addb
jg
mov
cmp
mov
ja
jae
push
stos
cmc
cmp
addr16
jnp
lahf
pop
mov
cmp
push
sahf
loopne
loope
fbld
pop
test
in
add
and
dec
jnp
xlat
pop
pop
into
jl
adc
into
pop
xor
mov
add
loop
fsubs
sbb
pop
add
xor
out
pop
test
stc
lds
mov
mov
js
mov
pop
cmp
mov
pusha
and
xchg
jne
fildll
outsb
jp
jp
arpl
imul
icebp
mov
insb
ljmp
xchg
jno
mov
push
dec
cmp
daa
and
sahf
pop
ds
lcall
cmp
xchg
pusha
clc
dec
inc
cs
adc
xor
dec
mov
shlb
push
jl
jb
fisubs
int
sbb
fsubs
outsl
and
lock
fbld
not
incb
push
lcall
xlat
test
sub
pop
out
push
subl
retw
add
movsb
lret
dec
sbb
pop
clc
jp
fwait
pop
adcl
adc
iret
inc
xor
xorb
outsl
dec
loop
lods
test
push
sti
jns
xor
cmpsb
imul
xor
lret
pop
divb
xchg
lock
test
rolb
pop
in
mov
loopne
jge
lds
cmp
sahf
in
in
data16
sahf
aam
sbb
in
dec
sti
pop
enter
cmpsb
addr16
enter
mov
and
test
inc
arpl
mov
outsb
jo
call
das
mov
add
and
xchg
fs
sbb
jnp
repnz
aaa
mov
inc
push
mov
stos
lock
testl
addb
lahf
mov
repnz
shrl
cmp
repnz
pop
pop
adc
mov
movsb
jle
push
leave
xor
sub
mov
cltd
lods
xor
iret
jne
loopne
cmp
jp
subb
incb
hlt
push
ret
cmpsb
ds
movsb
push
cmp
sbb
adc
das
jbe
rcl
inc
jae
xor
add
add
xchg
outsb
mov
and
cmp
or
out
sub
call
movsl
lea
ljmp
cmp
push
shll
xchg
add
xchg
jae
int3
jle
arpl
xor
xor
lock
cmp
push
repz
mov
mov
ja
mov
add
mov
mov
sbb
push
adc
icebp
jo
mov
mov
jbe
push
push
xor
sbb
jg
sbb
xchg
repnz
or
iret
inc
add
je
pop
xchg
pop
inc
or
mov
insb
xor
and
cmpsb
dec
sbb
mov
addb
aaa
ds
inc
mov
test
or
xchg
lods
xor
mov
sarb
mov
addr16
add
lret
mov
in
cmp
or
xchg
cmpsb
mov
push
aaa
cs
mov
call
or
mov
cmp
mov
scas
scas
cmp
adc
rorl
jecxz
sbb
mov
out
cmp
inc
push
push
arpl
add
jl
movsl
nopl
insb
aad
dec
xchg
ljmp
xchg
hlt
adc
aad
mov
adc
hlt
std
ljmp
sub
mov
rclb
push
lea
rep
mov
fistl
lea
push
push
call
mov
std
div
test
lea
pop
push
adc
mov
adc
test
je
pop
in
testb
add
mov
mov
lea
enter
test
shr
repz
push
movsl
mov
push
loope
push
rep
call
movb
jmp
pop
pop
pop
pop
add
fadd
nop
add
jne
in
add
add
pop
dec
enter
fbstp
idiv
adc
subb
add
push
lea
fsubrs
adc
lock
jne
out
in
xlat
mov
dec
pop
bound
adc
ja
insb
add
sbb
add
jbe
pop
ja
push
adc
pushf
lock
leave
inc
jne
fistpll
dec
push
push
or
mov
cmp
sub
push
adc
pop
jmp
pushf
and
mov
push
outsl
gs
sub
push
mov
sub
push
push
adc
call
insl
jae
mov
adc
fs
push
imul
lods
test
jp
or
fcompl
push
sub
and
sbb
and
mov
int3
imull
dec
es
stos
add
mov
add
aas
das
sbb
sahf
adc
xlat
add
mov
test
cmpsb
inc
xchg
and
inc
and
cmp
lea
adc
pop
movsb
jecxz
test
inc
push
sub
mov
imul
out
cld
fcoms
outsl
sub
and
fld
cmp
rclb
fldenv
jo
enter
cmp
and
aaa
cwtl
sub
jecxz
add
dec
or
mov
push
sub
je
adc
out
int
outsl
xor
push
push
push
push
mov
push
pop
xchg
mov
cmp
fsubrl
push
subb
cmp
outsb
pop
or
sub
sbb
xor
push
sbb
jl
add
int3
movsl
ret
xor
out
jnp
dec
push
hlt
add
push
das
and
lahf
sub
fstpt
es
add
xor
and
jg
iret
mov
inc
inc
cmp
jl
mov
jo
jge
pop
xor
mov
out
mov
aas
jge
sub
or
adc
mov
and
incl
repnz
mov
and
dec
or
in
mov
je
and
mov
mov
cltd
idivl
ja
pop
mov
mov
aaa
mov
ret
dec
push
popa
cld
ss
mov
pop
negb
or
je
push
inc
das
int3
std
mov
pop
ret
sarl
cmp
fisttps
xchg
add
mov
cmpl
sti
push
xor
test
arpl
jbe
pusha
lahf
lds
xchg
adc
fwait
lea
mov
adc
and
mov
jecxz
repz
dec
or
cmp
or
scas
cltd
mov
sub
inc
and
mov
xor
push
add
inc
pop
std
ficoms
xor
add
sbb
mov
sub
sti
jb
rcrl
mov
dec
push
and
jmp
pop
ret
add
pop
xor
jns
inc
clc
mov
movl
pop
aas
and
or
and
mov
inc
and
push
push
cmp
sti
mov
push
push
mov
dec
mov
push
mov
push
dec
push
ja
das
outsl
pop
cltd
or
pop
inc
dec
push
inc
dec
cmp
dec
dec
shr
int
mov
nop
inc
push
lea
push
cmp
mov
adc
add
je
jbe
cmp
sub
jne
sub
clc
or
push
adc
cltd
lahf
mov
lea
sub
mov
add
jne
je
je
jnp
in
pushf
sbb
ret
popf
std
dec
or
sbb
push
mov
aaa
and
icebp
mov
test
jo
dec
hlt
push
adc
shll
loop
in
das
jne
jbe
lret
fnstcw
es
sbb
push
adc
mov
mov
jno
adc
fildll
adc
or
jno
pop
sub
in
add
sbb
cmp
pusha
sub
fisttpl
mov
mov
fidivrl
sar
ret
jae
fsubr
ret
mov
insb
cmp
ja
les
dec
or
mov
adc
js
sti
mov
orl
enter
ljmp
push
push
lret
add
je
cmp
jb
sub
mov
subb
insb
jl
pop
xor
shr
add
sub
pop
out
mov
mov
mov
pop
fs
and
or
mulb
fisttps
pop
mov
and
sbb
std
and
shrl
arpl
sub
dec
inc
rol
push
push
iret
pusha
lods
sbb
lea
dec
push
dec
or
das
leave
je
jmp
cmp
xor
std
add
xchg
ret
pusha
inc
xchg
rcrb
cmp
das
xchg
rorb
pop
pop
clc
and
pop
mov
pop
neg
sbb
pop
and
and
add
sbb
pop
pop
sti
ret
pop
or
and
push
xor
dec
dec
pop
pusha
imul
pop
into
rorb
cli
adc
cmp
jb
mov
mov
dec
lea
jmp
das
fistl
fs
sub
sub
mov
mov
outsb
cmove
mov
ret
xlat
mov
cmp
jb
adc
dec
mov
jne
xor
inc
enter
pop
push
int
add
xor
adc
add
push
aad
pop
adc
fidivrl
mov
incb
jb
pop
pushl
dec
push
lea
shl
xor
mov
ret
out
in
add
rcll
lahf
jae
mov
jno
mov
mov
insl
fiaddl
adc
inc
cs
jmp
add
pop
fcoms
jns
fisttpl
out
jnp
xor
insl
outsb
fnsave
mov
inc
fsubl
or
pusha
xor
jmp
test
inc
or
lds
cmp
ret
or
mov
mov
pop
xchg
cmp
daa
out
adc
imulb
add
mov
inc
mov
imul
or
dec
pop
sarb
and
adc
sbb
fisttpll
cmp
and
fucom
mov
xor
jae
lods
jbe
cmp
and
push
adc
test
cmp
and
cmp
or
pop
ja
mov
jge
push
arpl
outsl
lcall
or
or
push
int3
popf
cmp
cwtl
fisttpll
and
xchg
cwtl
push
add
xorl
add
fwait
insl
inc
push
and
pop
loop
cmp
xor
or
sbb
loope
xchg
movsb
ret
imul
lret
ret
jno
push
jae
and
rol
out
push
pop
pop
adc
shr
xor
ret
push
mov
pop
xchg
sub
iret
mov
js
sub
neg
fnstsw
ret
ja
fbstp
dec
call
jecxz
inc
inc
xor
add
shl
aaa
xor
sbb
ret
jb
push
sbb
push
sub
and
sbb
mov
out
pop
jne
fs
jo
xchg
pop
xor
add
dec
dec
add
adc
outsb
xchg
pop
xchg
aaa
mov
mov
xchg
data16
movw
nop
mov
sbb
inc
sbb
jl
xor
dec
cmp
cwtl
dec
mov
sbb
push
push
pop
dec
cmpsl
fwait
xorl
xchg
aad
xchg
mov
and
add
idivb
push
xchg
inc
and
mov
inc
or
pop
pop
in
loopne
sbb
pop
pop
dec
scas
xchg
pop
adc
daa
sbb
call
mov
push
inc
je
push
inc
dec
outsl
jo
outsb
sbb
mov
sahf
pop
lea
rcr
jmp
push
sub
add
or
mov
sahf
sub
lea
into
inc
sub
sub
cltd
xchg
test
cmp
jb
rol
pop
insb
dec
cmp
mov
sub
divb
inc
adc
cmp
mov
divb
sub
or
or
testl
addb
adc
nop
ret
mov
inc
or
xor
pop
push
add
xor
or
ret
mov
in
rcr
ret
cmp
jle
inc
ja
mov
adc
jge
xchg
or
aam
mov
push
xor
sub
std
mov
cmp
jbe
cmp
mov
mov
insb
and
and
cwtl
js
fucomi
ja
vunpcklps
fildll
xor
jecxz
mulb
pop
mov
sbb
rorl
out
mov
jg
add
xchg
add
pusha
aaa
push
fisttpl
adc
and
xor
add
and
sub
outsl
jmp
and
in
test
fisttpl
icebp
mov
shll
add
or
imul
adc
sbb
and
dec
mov
add
pop
cmpsl
in
add
xor
mov
adc
scas
adc
lret
push
sub
and
mov
mov
sbb
push
das
mov
lods
pop
mov
je
xlat
ds
js
jae
int
adc
or
push
cmp
int3
push
mov
add
xor
out
outsb
adc
test
add
testb
add
jo
jae
int
cmp
xchg
loopne
xor
dec
jo
pop
and
sbb
dec
push
sbb
adc
int
or
rolb
xchg
std
push
loope
sub
test
cltd
cmp
ja
ret
mov
mov
fisttpl
pop
dec
sbb
sub
and
pop
pop
sbb
dec
and
jne
add
inc
or
jb
js
jo
jne
push
xor
dec
jae
lret
push
fildl
ja
cmpsb
iret
cmc
adc
js,pn
lea
jns
pop
mov
adc
xchg
mov
movb
loopne
adc
fs
mov
jge
daa
lea
clc
adc
push
dec
cmp
jne
and
mov
insb
inc
dec
popa
inc
push
pushw
ret
fstps
cmovbe
and
xchg
mov
pop
fdivl
sbb
or
or
jo
and
flds
push
mov
add
sahf
data16
pop
mov
sbb
je
test
test
mov
lahf
add
cmp
add
bound
ret
mov
fnstsw
add
sbb
inc
xor
lea
sub
mov
sbb
or
and
pop
insl
pop
mov
dec
inc
dec
mov
pop
or
pop
pusha
cmp
add
mov
add
jge
shrl
xor
or
divl
in
in
mov
cmp
inc
pop
jle
cmp
or
cmp
jle
jne
push
and
pop
pop
mov
sbb
push
push
call
sub
in
cmp
cld
add
das
in
push
sbb
stos
js
neg
aam
jmp
ds
inc
push
insl
sti
divb
jl
add
jg
push
mov
and
sub
adc
ret
sub
imul
push
and
cwtl
nop
adc
pop
cli
iret
fildll
or
add
push
stos
les
adc
add
or
mov
add
out
sbb
jge
in
test
mov
cmp
pop
dec
or
dec
jg
cmpl
jne
test
shrb
or
and
xlat
inc
add
push
jo
lea
xor
cmc
mov
sbb
inc
icebp
adc
pop
adc
inc
adc
scas
sub
adc
ss
int3
pop
jnp
jmp
bound
cmc
jecxz
jbe
sub
out
adc
ljmp
loop
lds
push
add
inc
pop
sti
pop
clc
cmp
sbb
test
je
cmp
push
scas
je
inc
push
add
je
es
add
mov
mov
aad
xor
stos
jp
push
sub
test
in
addb
arpl
push
add
adc
out
sbb
pop
add
loopne
shr
outsl
mov
div
xchg
nop
and
idivl
jo
dec
pop
movl
jmp
sbb
sub
sar
jo
insl
jmp
repz
jbe
push
add
sub
pop
ss
push
pop
ret
add
fs
mull
add
out
cld
jbe
jge
in
or
push
push
push
int
imul
pop
jecxz
pop
lahf
sub
andps
fs
pop
mov
cmp
pop
adc
inc
inc
pop
jb
std
mov
loopne
push
inc
sbb
je
sbbl
mov
xchg
or
ja
outsb
sbb
jns
repz
in
and
out
loopne
repnz
adc
jb
adc
lds
aaa
mov
popa
push
call
jbe
adc
mov
outsl
xchg
or
in
mov
push
push
add
dec
ds
std
push
xorl
fsubs
adc
add
popa
lret
and
jl
in
adc
imul
aaa
rclb
push
sub
in
jbe
mov
bound
push
sbb
or
push
sbb
pusha
mov
lcall
push
ret
adc
and
cli
xchg
psrld
loop
or
push
cmp
adc
inc
sti
aaa
mov
pop
enter
inc
adc
jbe
dec
neg
outsl
push
adc
push
push
imul
and
shlb
out
inc
pop
adc
dec
mov
adc
push
sbb
popa
out
lds
or
push
push
push
fsubs
lods
imul
fstps
ret
cld
adc
xchg
or
xorb
je
xchg
and
pop
add
and
pusha
not
adc
loope
xchg
insl
add
lret
push
or
mov
pop
add
xor
xor
dec
add
push
add
test
xchg
popf
add
lcall
xchg
sbb
cmp
mov
shr
sub
xchg
ret
outsb
or
add
xorl
mov
xor
or
adc
add
sub
popf
add
adc
mov
jmp
add
out
and
daa
adc
or
and
mov
xchg
rcll
add
cmp
push
xchg
fs
test
xor
xchg
mov
push
jnp
inc
mov
or
jno
xor
roll
es
sub
xchg
push
add
sub
mov
add
mov
and
xor
push
xlat
lods
or
push
cmc
rorl
ljmp
jns
cmp
insl
scas
cmp
sti
or
pop
sbb
sbb
mov
pop
mov
mov
fidivs
stc
push
or
out
stc
ja
mov
ja
das
fisttps
insb
adc
lock
jmp
icebp
xchg
or
test
dec
cmc
push
jge
lods
ret
sahf
add
adc
adc
in
loopne
orl
idivl
mov
inc
aam
pusha
cmp
lea
xor
roll
jp
and
testb
pusha
xor
push
mov
lret
lea
xchg
jg
dec
inc
inc
lea
inc
dec
dec
mov
in
jmp
add
adc
dec
jl
sub
das
cmp
xchg
nop
pop
insb
inc
sbb
cwtl
test
adc
call
sti
cmp
mov
pop
sub
dec
mov
inc
sbb
and
or
or
push
call
cwtl
mov
in
jbe
cld
or
fndisi(8087
data16
pusha
cmp
inc
xor
insl
mov
and
cmp
pop
and
addr16
cmp
test
pop
mov
sbb
sub
mov
push
jp
push
test
pop
inc
sub
mull
xor
jne
pop
push
lea
cmp
jae
pop
inc
popa
fs
es
ljmp
pop
mov
lea
mov
dec
push
data16
out
and
loopne
cli
aad
inc
push
in
adc
jnp
lret
mov
pop
add
xor
roll
add
add
test
inc
jmp
pusha
pop
inc
enter
pop
jg
dec
mov
or
stc
enter
pop
cmp
ljmp
push
pop
aaa
ljmp
inc
inc
sbb
push
dec
inc
push
clc
cmp
dec
jne
nop
pop
mov
sbbb
add
or
lock
sbb
addb
dec
ljmp
push
dec
xchg
jns
or
fs
push
pop
jae
leave
dec
dec
push
push
mov
jge
push
pop
lea
push
xor
fstl
dec
push
jb
sub
mov
sub
push
pop
xchg
adc
sub
mov
mov
xchg
lods
outsb
adc
push
mov
faddl
int3
stos
pusha
ret
pop
mov
das
and
or
imul
push
pop
jne
xchg
or
cmc
and
jbe
aam
push
dec
dec
test
fs
ja
test
aam
test
inc
neg
push
mov
dec
jg
sub
mov
hlt
out
int3
mov
push
shr
or
sbb
pop
jae
jb
adc
push
mov
pop
mov
and
mov
mov
dec
imul
dec
leave
dec
xor
dec
xor
jnp
inc
sub
in
mov
dec
test
sbb
add
and
inc
test
sub
icebp
test
adc
push
mov
push
inc
mov
popa
mov
fisubl
fcom
pop
sbb
fcomp
jp
jmp
sub
in
cmp
scas
push
adc
push
push
and
orl
fs
dec
cmp
dec
xchg
xor
dec
nop
add
mov
dec
pop
ret
jnp
or
xchg
sbb
push
or
mov
adc
cmp
rorb
testl
inc
iret
fisubrl
enter
cmp
js
test
pop
xchg
push
sub
sbb
push
cld
lock
and
jae
mov
mov
inc
cmp
adc
mov
push
fwait
and
loopne
adc
leave
sbb
xor
push
cmp
cmp
jbe
jp
adc
call
sbb
mov
and
cmp
loopne
jmp
adc
cmp
jo
dec
loop
mov
js
xor
mov
inc
mov
outsl
mov
mov
and
jb
pop
mov
test
xchg
pusha
and
outsl
pop
pop
mov
sub
dec
rcrl
add
loopne
js
je
or
add
cmpb
sub
enter
lods
xchg
sbb
fdivl
add
lret
jne
addb
js
dec
adc
adc
inc
sbb
pop
ljmp
dec
fs
or
jmp
nop
push
hlt
test
stc
add
lds
cmp
dec
int3
lock
adc
xchg
in
lds
inc
ret
ret
cmp
sbb
mov
xchg
and
mov
cmpsl
jp
adc
xor
outsb
insl
or
mov
push
push
inc
pop
pop
pop
lcall
and
mov
push
sbb
xor
sub
loopne
pushf
adc
mov
mov
pop
adc
push
ja
stos
sahf
jl
insb
and
pop
sarb
dec
je
or
ljmp
fnstcw
push
loop,pt
cs
sbb
lret
jo
je
fdivrs
xlat
push
push
adc
or
rorb
jns
lret
xlat
dec
cltd
push
and
ret
push
push
roll
test
push
neg
sbb
aad
stc
or
aas
rorb
call
imul
add
xor
mov
pop
xchg
iret
push
mov
sbb
mov
adcb
in
sub
sub
mov
pop
sub
lret
cmpsb
pop
ss
sub
jg
sub
ss
cs
shrl
xor
add
xor
push
cmp
cmp
cmp
imul
das
sbb
movl
dec
cmp
stc
mov
push
add
pop
pop
mov
sbbb
jae
daa
mov
push
or
sub
jmp
pop
mov
xor
in
ret
sub
jne
out
mov
loop,pn
mov
jne
push
sbb
jb
or
push
ficompl
jnp
icebp
jl
jge
pop
dec
jnp
movsb
and
movl
jle
dec
and
sub
dec
ficoml
aaa
mov
add
test
stc
sub
sbb
enter
and
lods
sbb
pop
and
inc
mov
fisubl
add
mov
mov
cmp
mov
fldt
add
mov
aaa
pop
adc
cmp
insb
rclb
push
jge
or
dec
inc
mov
jle
mov
mov
sub
sbb
int3
adc
xor
or
scas
xor
imul
adc
insb
jo
xchg
jnp
sbb
pop
ret
jg
fidivl
iret
or
adc
call
test
repz
cmp
out
out
mov
jb
mov
adc
mov
jmp
aad
loop
dec
push
cmp
mov
add
push
icebp
pop
or
xchg
repnz
xchg
enter
clc
sbb
enter
sti
jb
and
movsl
in
sbb
add
addr16
fcomi
sbb
pushf
adc
dec
jne
ss
outsb
je
or
inc
mov
std
mov
div
mov
ja
pop
shl
pop
pusha
pop
sbb
push
mov
pop
rorb
fidivrl
add
jne
push
ja
pop
dec
repz
or
mov
xchg
push
add
fnstcw
xchg
dec
add
int
lret
jge
outsl
mov
jle
xchg
mov
sahf
icebp
push
mov
shl
outsb
push
mov
ljmp
cwtl
or
mov
or
mov
inc
mov
lods
mov
sub
inc
sbb
mov
sub
pop
repz
xrelease
pop
pop
popf
nop
inc
jmp
popa
insb
add
push
outsl
pop
nop
xchg
mov
add
xchg
or
orb
push
mov
mov
jno
call
jmp
push
js
add
push
scas
mov
sbb
adc
push
movhlps
movsb
sti
xor
add
sahf
ljmp
or
mov
insl
out
outsl
add
icebp
mov
jg
pop
jmp
lea
sarl
cmp
ja
cmpsl
mov
adc
mov
sub
jmp
mov
aaa
mov
lea
jle
mov
xchg
sub
ss
xchg
push
or
in
mov
or
xor
mov
adc
sub
xor
or
xor
add
xor
inc
imul
xchg
push
lods
mov
jnp
add
mov
xchg
xchg
in
shl
sahf
pop
mov
lods
adc
outsb
or
push
cmpsb
loope
sahf
arpl
les
xchg
in
ret
sahf
xchg
loop
lods
xchg
jb
dec
jb
filds
mov
in
mov
sub
sbb
xorl
mov
mov
add
or
sub
mov
aad
andb
int
sub
adc
adc
cmp
adc
inc
mov
inc
imul
xlat
ficoml
fadds
jle
sbb
cmp
xor
sbb
insb
jmp
jb
xor
xchg
mov
test
push
xchg
jmp
or
mov
or
dec
inc
outsb
hlt
sarl
pop
je
mov
inc
mov
or
and
inc
pushf
adc
outsb
or
dec
mov
adc
or
sub
addl
data16
pop
pop
jl
mov
clc
jmp
push
mov
fcom
sti
cmp
jl
push
push
lock
xlat
jl
xor
dec
adc
mov
jmp
push
sbb
mov
pop
xchg
dec
push
pop
insb
ret
adc
inc
xchg
dec
push
mov
jl
scas
dec
dec
fstl
cli
fdivrl
mov
cmp
lods
in
add
std
jge
inc
add
push
loop
mov
test
test
jb
int3
dec
xchg
cmp
xchg
fldl
scas
add
add
inc
mov
mov
mov
movsl
xchg
or
lea
xchg
aam
iret
fldcw
fwait
mov
fdivrs
loope
xor
rcl
fisttpll
push
push
push
push
rorl
cwtl
xor
or
pop
faddp
cmp
nop
insl
sub
jmp
jg
idivb
jmp
mov
mov
loope
mov
shll
sbb
jae
sbb
sub
ja
inc
mov
sub
stc
imul
adc
mov
jbe
pop
mov
loope
frstor
mov
xchg
out
cmp
sub
sbb
insb
nop
nop
mov
or
loop
mov
add
arpl
dec
push
jmp
push
jge
jl
and
xor
mov
mov
xorb
sub
push
mov
inc
cmp
ss
ret
adc
adc
xor
outsb
adc
rclb
xchg
cmp
cld
jl
cmp
jle
pop
cwtl
enter
adc
jae
pop
cmp
jg
xchg
and
xorb
jl
stc
sub
shrb
cmp
inc
push
add
dec
cmpsl
ja
adc
add
xchg
push
and
push
imul
daa
jp
sbb
adc
add
stos
stos
inc
mov
arpl
mov
mov
insl
cmp
mov
mov
jne
insb
dec
adc
pop
mulb
movsl
outsb
aas
pop
add
push
out
add
shll
cmp
mov
ds
inc
stos
sub
inc
add
in
ss
dec
cld
dec
lds
xor
sarb
jg
lea
mov
mov
fsubr
sub
shl
mov
mov
mov
pushf
fisttpl
pop
xlat
fstl
pop
adc
pop
jae
push
nop
jge
orb
das
ljmp
cli
fildl
or
push
sub
push
mov
push
dec
or
add
shl
pop
inc
jne
mov
jl
imul
add
rorb
testb
sub
cmpsb
pop
mov
movb
rcll
and
jg
add
movsl
negl
push
mov
shlb
aaa
cmpsb
sub
dec
outsb
sbb
push
sbb
mov
cwtl
mov
mov
jbe
jne
dec
mov
mov
xlat
inc
adc
jmp
mov
fwait
push
mov
sbb
insl
push
mov
add
pop
hlt
add
mov
or
mov
add
sbb
es
inc
in
push
imul
add
add
inc
std
dec
mov
outsb
cmp
jge
add
outsb
js
popf
ja
sub
push
outsb
xor
je
aad
pop
xorl
fdivrs
mov
repz
mov
mov
xchg
scas
push
clts
or
xchg
outsl
lret
sub
push
cs
xchg
inc
xchg
pop
inc
mov
and
push
jg
jle
add
xchg
gs
jle
mov
mov
cmp
mov
cmc
mov
mov
pop
pop
pop
pop
xchg
jle
sbb
inc
popa
movaps
adcb
or
cld
push
enter
cmp
vsubpd
add
dec
cmp
mov
pop
jne
cmp
outsb
mov
mov
and
inc
iret
xchg
xchg
outsb
xor
imul
pop
sbb
jp
xchg
mov
adc
test
sbbl
sbb
cmp
leave
xorb
popa
mov
xchg
test
add
xchg
push
inc
lret
push
sbb
rcr
mov
stc
jmp
inc
dec
pop
cmp
ja
or
xorl
dec
cmp
mov
or
rolb
mov
mov
sarb
push
jle
xchg
xor
mov
js
xchg
sub
cmp
js
lret
cmp
iret
out
pop
mov
shrl
push
xchg
mov
mov
mov
pusha
pop
jp
jne
into
mov
test
ficoml
ret
push
adc
or
add
sub
addw
int3
sub
rol
pop
lock
xchg
xchg
inc
add
mov
mov
xchg
add
jne
cli
or
and
ss
leave
push
mov
mov
inc
or
push
add
inc
mov
dec
or
cmc
int
inc
mov
fistps
orb
xchg
xor
jecxz
add
out
inc
jmp
jecxz
popa
rol
insb
add
mov
dec
mov
mov
loop
mov
fs
int3
pop
mov
nop
cwtl
push
sbb
bound
pop
adc
inc
add
pop
test
pop
mov
cmpsb
push
cmp
test
sbb
xchg
mov
shlb
inc
das
nop
xchg
or
push
pop
xor
cmp
nop
xor
lret
cmp
inc
ret
fs
push
pop
push
data16
lods
lds
iret
adc
push
push
xor
xchg
addb
scas
mov
fwait
out
mov
fstpt
icebp
cmp
jle
fsubs
sbb
cmpsb
call
mov
or
push
pop
int3
test
push
cmpsb
cwtl
lret
fsub
out
push
scas
popf
in
cmp
jo
lods
daa
fs
mov
xor
fwait
or
idivb
add
movsb
ret
cmp
fidivrs
lret
pop
xchg
mov
mov
xchg
jo
dec
or
jmp
push
mov
andl
jmp
mov
shr
icebp
cmpb
mov
mov
jp
cmpsl
or
mov
popa
push
xor
inc
mov
or
sbb
jns
sbb
les
popf
aam
into
enter
sbb
mov
cmp
loopne
outsb
add
xchg
push
lock
enter
out
xchg
loope
adc
xor
lret
ja
mov
adcb
in
add
inc
bound
inc
jle
xchg
add
mov
and
pop
lea
sub
lods
inc
xor
push
rorb
cmp
rcrb
dec
jne
push
sbb
in
sbb
std
cmp
pop
pop
jge
mov
inc
sub
inc
xor
rorl
shr
cmp
pop
sbb
pop
inc
pop
mov
pop
mov
ret
push
push
shl
and
or
shr
shl
dec
in
adc
call
xchg
jle
cmp
jo
inc
pop
xor
sub
mov
cltd
sarl
xor
xor
inc
pop
sub
push
xchg
data16
push
add
add
push
sbb
dec
dec
je
xchg
push
lock
aad
aad
inc
aam
adc
lods
mov
rcl
jle
enter
rolb
xlat
or
aad
adc
and
into
or
sahf
pop
ficompl
add
sbb
add
mov
push
inc
mov
pop
add
dec
je
ret
xor
push
xor
test
aaa
ret
iret
add
add
movsb
sbb
not
je
testb
push
insb
lcall
mov
xor
or
nop
mov
clc
outsl
push
xor
inc
dec
jne
cmp
nop
aam
mov
out
shr
mov
cmp
aam
mov
inc
inc
loope
jecxz
push
xlat
jbe
sbb
int3
aas
rorb
push
lock
mov
push
cld
push
or
int
inc
and
sbb
jl
lods
cmp
add
push
mov
and
ret
clc
xor
lea
mov
xchg
add
rcr
lret
aam
jne
bound
and
cld
xchg
xor
ds
or
mov
add
in
pop
mov
adc
dec
and
and
xchg
push
sbb
shll
mov
iret
cmp
roll
pop
sub
mov
mov
inc
dec
push
push
xchg
sbb
dec
add
xchg
sbb
fmuls
xlat
adc
dec
pop
dec
cs
or
sbb
test
mov
adc
mov
xor
imul
cmp
xchg
sub
dec
mov
sbb
push
push
mov
sbb
inc
cmp
lcall
or
sti
and
aam
or
lret
adc
ret
or
add
inc
adc
sub
and
iret
jnp
clc
fs
cmp
out
sub
pop
js
inc
ss
test
push
test
js
jmp
negl
fidivrs
pop
mov
dec
and
add
and
jne
lock
fists
push
jns
sarb
and
push
je
jmp
fdivs
mov
xor
pop
push
repz
jbe
add
mov
and
add
lea
insl
stc
repnz
xor
add
adc
bnd
xor
sbb
and
mov
jnp
je
xor
xor
pop
jae
sti
dec
jae
loop
in
push
dec
xlat
push
in
mov
adc
pop
cs
out
cmp
call
sub
mov
and
sub
pushl
sbb
pop
sub
lds
mov
out
mov
lds
out
or
cmp
jae
and
sti
mov
pop
sub
mov
xchg
pop
dec
ss
ss
mov
call
movsl
fs
inc
sbb
into
sub
sub
jbe
mov
fs
fnsave
ljmp
mov
mov
add
icebp
push
mov
ljmp
pop
jne
lret
pop
add
pop
push
and
jbe
mov
outsb
outsl
mov
push
jmp
and
mov
inc
inc
inc
or
ret
int
sbb
jmp
mov
arpl
es
inc
repz
inc
push
mov
push
in
mov
push
cmp
jae
mov
popf
push
loopne
call
fwait
cld
add
push
sub
cmp
pop
jmp
test
je
movl
adc
adc
ret
arpl
or
inc
and
mov
mov
inc
pusha
clc
lea
ret
mov
es
sub
add
xor
lock
out
adc
imul
inc
js
mov
lods
and
loopne
js
and
rep
jbe
add
inc
stos
test
aad
mov
incl
lea
dec
jne
xchg
stc
and
mov
jo
mov
test
and
mov
pop
mov
dec
jns
pop
jae
cmp
xchg
push
js
and
subb
or
mov
stos
sub
add
push
adc
or
mov
or
and
aad
scas
or
das
mov
ret
mov
fwait
insl
dec
cmp
sar
jbe
jae
sbb
insb
arpl
and
outsl
push
cmp
idivl
aaa
stos
int
cmp
sub
jno
jle
cli
popa
in
cmp
cmc
sub
inc
pop
shrl
jno
mov
sti
jne
insb
cmp
je
outsl
add
pop
add
or
ret
xchg
jbe
push
mov
pop
sub
pushaw
and
sub
mov
sbb
fldl
inc
push
lds
mov
or
jbe
sub
aas
dec
pop
or
int3
int
inc
in
pop
xor
adc
ss
into
sub
add
scas
imul
add
leave
dec
xor
push
std
mov
xlat
fmull
sub
hlt
loopne
adc
cld
push
ja
imul
jnp
insb
pop
jl
outsl
sbb
adc
rorb
sub
lock
xchg
jge
jbe
ja
int
inc
adc
sub
fisttps
xchg
or
mov
sbb
pusha
data16
adc
les
or
enter
cmpsb
and
outsl
insl
inc
lods
std
xor
mov
test
je
mov
mov
lea
and
add
adc
push
and
jge
incb
cmp
and
push
cmp
out
add
test
jne
xchg
mov
test
add
inc
pop
sbb
je
fistl
mov
cmp
fadds
add
adc
cltd
mov
shrb
pop
cmp
adc
mov
lret
aad
shll
lea
ds
sub
and
sub
rcll
sbb
in
sbb
rcll
ret
pop
lods
aaa
or
nop
fstpt
jb
rolb
mov
add
xchg
xchg
xchg
add
push
daa
shll
scas
and
mov
mov
out
pop
jo
xchg
jae
movb
xchg
into
fdivl
ljmp
add
pop
mov
and
ds
push
xor
jle
pop
aaa
shr
cmc
or
mov
dec
dec
lret
push
or
mov
test
jns
mov
xchg
aam
add
pop
jle
push
mov
arpl
xor
jg
addl
clc
lea
loopne
divl
ljmp
add
clc
dec
cmp
adc
cmp
je
test
iret
adc
or
push
inc
jecxz
push
or
les
test
pop
jg
stc
xor
lock
iret
xor
js
or
testl
and
or
out
xorb
pop
pop
je
inc
cld
cmp
je
sar
ss
out
cmp
je
test
je
pushf
adc
lods
fnsave
jmp
sub
testl
jle
push
sub
or
inc
call
add
lea
jmp
add
pop
fimuls
cmpb
les
decl
mov
js
sbb
and
pop
xchg
sub
and
push
mov
pop
xor
ret
ljmp
iret
int3
push
or
sbb
mov
push
jnp
jmp
push
jnp
mov
and
fildl
call
icebp
cmpsb
pop
ds
inc
cmpsl
ret
xchg
or
fsubr
insb
or
mov
aaa
jo
jns
outsl
pop
rorl
push
insl
jle
mov
mov
jne
or
dec
xor
cmp
inc
mov
fwait
out
fdivr
sbb
arpl
add
pusha
cmp
rclb
jbe
mov
xor
bound
jge
loope
rolb
aas
movzwl
push
pop
sbb
jp
scas
fldenv
sub
and
pushf
mov
sarb
or
mov
ljmp
mov
cmp
add
lret
insb
aad
rorl
repz
and
aaa
fcoms
pop
and
sbb
in
xor
jg
loopne
mov
cs
clc
rcrb
cmp
mov
adc
fisubrs
mov
adc
adc
xchg
push
aas
push
and
fbstp
and
or
jo
out
cld
adc
int3
adc
filds
pop
fidivs
hlt
jns
push
push
lods
inc
adc
xchg
and
pop
aas
ss
mov
add
inc
xchg
push
jne
push
jg
push
lods
outsb
mov
fucomip
xlat
mov
jmp
jnp
xchg
loope
push
sbb
lock
sti
mov
push
out
or
cld
jbe
adc
cmp
addr16
leave
push
or
add
test
and
lret
xor
adc
pop
add
data16
add
mov
decb
and
sbb
out
or
test
or
adc
lock
adc
adcb
inc
pop
lcall
pop
mulw
or
push
je
pushf
stos
pop
mov
dec
testb
sti
std
sub
add
adc
xor
mov
sub
xor
incl
sar
repz
mov
lea
jmp
mov
cld
dec
adc
inc
add
fidivs
jl
xor
mov
mov
jmp
popa
sbb
mov
test
in
lahf
orl
sub
adc
icebp
ret
pop
mov
pop
adc
in
dec
xchg
dec
inc
xor
sbb
outsb
pop
loope
push
inc
add
in
add
mov
fistl
sbb
mov
imulb
icebp
dec
les
adc
mov
and
add
jg
movsbl
mov
lods
ret
mov
int
je
add
pop
xchg
les
movsl
mov
test
sub
mov
inc
dec
clc
call
faddl
aam
pop
aaa
dec
outsb
xchg
mov
gs
cmp
je
mov
dec
int
mov
mov
inc
cmp
or
or
adc
xchg
inc
xchg
addb
jbe
sbb
mov
jge
lods
jnp
idivl
daa
mov
mov
mov
shr
jmp
mov
clc
pop
rolb
push
aaa
dec
insl
jns
imul
je
ja
sbb
add
adc
and
lcall
adc
jle
xor
push
inc
inc
enter
jb
sbb
and
cltd
or
gs
imul
add
xchg
in
add
pushf
pop
jo
add
sbb
xchg
loopne
push
push
clc
addr16
add
adc
sti
or
push
pop
call
add
jo
insb
adc
test
fidivrl
xor
aad
pusha
sub
sti
je
mov
clc
sbb
test
insb
pop
scas
dec
hlt
dec
sbb
or
fiadds
mov
dec
xchg
or
and
out
inc
jmp
and
les
and
mov
fnstenv
lods
int
clc
sub
pop
or
cltd
pop
sahf
js
cmc
xor
sub
test
in
ret
xchg
andb
ds
mov
aam
je
add
je
dec
stc
fstpt
pop
cmp
pop
mov
lock
ds
and
aas
sub
sub
pop
pop
push
mov
jae
push
xchg
push
or
push
and
imul
push
adc
insl
lcall
clc
jle
mov
testl
and
add
xor
jnp
je
mov
push
jmp
push
push
xchg
ljmp
or
dec
mov
inc
dec
inc
pop
mov
mov
mov
adc
daa
sbb
push
pop
orl
pop
and
or
adc
call
test
inc
insb
push
inc
sub
repnz
ret
sub
add
popf
push
mov
loope
loopne
aaa
lods
aas
aaa
aaa
push
mov
shl
daa
cmp
rol
mov
sar
inc
sbb
lea
or
or
es
insl
cmp
push
js
xchg
int
outsl
mov
adc
inc
ljmp
mov
or
inc
jmp
inc
and
cmp
push
cld
push
inc
adc
and
sbb
mov
mov
push
cmp
lcall
lds
je
cmp
sbb
add
popa
or
rcrb
cmp
repnz
jmp
pop
shll
je
xchg
sbb
mov
add
js
rorb
loopne
fisubl
out
test
in
push
or
mov
jge
sbb
idiv
shl
cmpl
dec
les
or
mov
das
call
test
lock
mov
xchg
push
push
sbb
add
add
adc
or
jge
add
int
mov
mov
jmp
push
sub
jnp
jb
xchg
add
jae
sbb
pop
xlat
push
push
or
add
sbb
add
lods
enter
cld
test
xor
test
mov
stc
lods
sub
or
je
and
fdivl
sub
add
sbb
adc
sub
es
movsl
adc
ljmp
push
adc
xor
push
fs
mov
mov
pop
jae
inc
add
mov
lea
add
mov
fnstenv
aaa
dec
jle
lea
push
cmp
pop
add
dec
fildl
adc
mov
lock
ja
add
movsl
mov
jmp
aaa
dec
insb
test
ficoms
fadd
and
dec
test
add
or
dec
shrl
push
add
test
imul
pop
mov
js
adc
mov
loopne
out
incl
hlt
pop
or
dec
orl
mov
lahf
into
loopne
test
mov
sarb
adc
mov
mov
cmpl
pop
and
pop
sub
pop
mov
cmp
es
in
xor
push
inc
sbb
ss
dec
inc
xlat
jl
dec
loop
ret
xor
je
cwtl
jmp
mov
arpl
in
push
mov
cld
sbb
sbb
ljmp
adc
fisttpl
add
repnz
xchg
pop
and
push
add
push
orb
adc
and
ja
add
push
cmp
jmp
cltd
in
sub
dec
push
dec
lock
addb
and
popf
std
sub
xor
push
lea
cmp
ds
lock
mov
xchg
sub
ret
in
pop
filds
xchg
sbb
adc
idiv
and
adc
xchg
dec
jge
ret
cmp
stos
jae
push
adc
sahf
movb
jge
xchg
arpl
bound
and
sub
imul
arpl
ljmp
add
add
testb
push
popa
sbb
or
sbbl
insl
mov
dec
enter
add
fwait
in
add
push
cmp
jge
xor
sub
add
js
outsb
jg
adc
dec
jne
mov
xor
jge
mov
shlb
cmp
pusha
adc
repnz
aas
dec
cmp
lea
and
add
in
aad
repz
mov
pusha
popa
push
rol
or
scas
and
xor
cmpsb
mov
inc
lahf
and
data16
push
test
lock
je
jmp
outsl
push
dec
jo
mov
cmp
or
lea
cmp
adc
sub
inc
add
or
adc
jp
idivb
jne
mov
inc
pop
adc
inc
jg
popa
popa
fiaddl
jecxz
fistl
mov
or
inc
or
mov
xor
add
jmp
pop
or
sbb
fildl
sub
daa
cmp
jne
dec
mov
cmp
cmp
std
add
call
fadd
or
pop
cmp
or
fwait
or
push
or
call
jbe
mov
push
xor
ret
cmp
cs
jnp
sub
ss
outsb
dec
adc
jbe
add
aaa
jne
pop
incl
mov
add
adcb
jnp
mov
mov
push
aas
mov
dec
das
mov
cmp
mov
mov
clc
xchg
sub
jle
imul
insb
mov
jecxz
mov
or
daa
and
push
int3
test
push
xor
lea
fstpl
sbb
adc
andl
lret
sub
jge
mov
mov
sub
add
adc
and
pop
es
inc
cmp
mov
mov
and
sbb
cmp
mov
inc
inc
or
jmp
or
notb
inc
sbb
inc
push
and
add
inc
addl
add
gs
insb
push
fidivrs
jne
jae
or
imul
test
scas
mov
inc
sub
pop
pop
enter
loope
lock
adc
add
or
sti
adc
inc
jmp
xchg
sub
mov
jo
xchg
inc
cmp
or
jecxz
popa
fdivrs
add
or
jle
sbb
sbb
mov
dec
in
in
filds
movb
inc
mov
jne
cmpb
cmpl
mov
out
push
sub
addr16
sub
dec
sbb
sbb
scas
int
or
adc
pop
sbb
gs
xor
push
and
add
leave
mov
rorl
insl
adc
sub
negb
lea
shrb
je
arpl
pop
push
and
sub
aam
sti
pop
ljmp
andl
lcall
or
stos
xchg
ss
ret
push
jae
sub
or
jne
push
repnz
das
pop
lea
mov
pop
push
lds
push
insb
call
dec
add
xor
and
and
mov
adc
pop
add
add
pop
ret
jmp
movsl
xchg
mov
test
outsl
sti
adc
je
inc
cmp
add
sub
inc
push
push
pop
rclb
stos
sti
cmpsb
cmpsb
andb
orb
push
dec
cmp
and
lcall
inc
push
orb
xchg
sbb
stos
in
xor
addl
adcb
mov
cs
or
loope
pop
rcl
les
inc
jne
mov
mov
or
in
mov
lea
jl
jbe
xor
gs
push
mov
cmp
jle
pop
lea
andb
mov
jo
sarl
insb
mov
les
inc
mov
jle
jb
je
mov
outsl
lea
roll
add
jne
movsl
jo
mov
mov
repz
pop
test
das
mov
sbb
shr
inc
inc
lahf
fwait
jl
push
xchg
js
iret
in
cmp
push
fdivs
cmp
add
mov
negb
mov
dec
inc
aam
cmpsb
mov
mov
pop
push
data16
mov
adc
orb
les
xlat
imul
add
ljmp
fwait
mov
adc
jle
push
mov
pop
pop
sub
cmp
jne
cmp
das
aad
or
sbb
sbb
mov
mov
cmp
test
bound
and
push
insl
out
daa
fwait
nop
js
cmpl
daa
jno
or
or
push
xor
scas
cs
pop
out
xor
sti
in
cmp
sub
lea
cmp
rolb
popa
jl
cmp
jg
sub
mov
inc
cmp
jne
shrb
push
ds
leave
push
cwtl
mov
sbb
dec
arpl
sets
out
dec
pop
or
adc
push
sbb
push
addr16
push
push
jl
pop
je
push
mov
loope
or
xor
arpl
pop
jne
push
pop
cmp
loope
aam
push
push
and
jge
lcall
jb
lock
push
push
pop
lds
add
mov
shll
push
jmp
add
testl
inc
rclb
mov
sbb
push
in
or
xchg
mov
pop
shl
jl
inc
or
insb
push
cmp
imulb
jp
pushf
pushf
ss
pop
mov
outsl
dec
testl
add
pmuludq
mov
mov
insl
push
push
lock
pushl
pop
jle
jbe,pn
xor
dec
icebp
cmp
sub
sub
aaa
mov
mov
insl
pop
lock
pop
jl
add
adc
rol
sti
in
fbstp
push
or
ret
popl
xor
mov
fs
jno
add
push
sub
push
inc
add
add
sbb
xorb
fldt
add
imul
ret
int3
push
inc
xor
pop
inc
xor
jnp
xor
or
cld
mov
dec
testl
in
orb
mov
fsts
cli
jnp,pn
shll
mov
mov
inc
push
push
lea
test
pop
pop
inc
or
int3
lods
stos
jnp
js
and
and
pop
int
sbb
leave
push
jo
insl
fimuls
mov
push
or
or
sbb
mov
ljmp
aas
loop
and
push
inc
mov
adcl
cs
mov
loope
lock
mov
lock
or
ljmp
mov
cld
ds
mov
sbb
adc
lock
ds
out
fisubl
inc
cmp
push
fisubrs
mov
xchg
sbb
sbb
pop
sbb
sub
jo
fstpt
es
test
jne
icebp
adc
pop
xchg
pop
sti
data16
adc
dec
jmp
or
mov
test
inc
fistpll
sub
aaa
cmp
mov
sbb
add
push
testl
push
fisttps
lea
push
or
cltd
sti
and
mov
rcll
sbb
aad
adc
cwtl
daa
cld
call
pop
imul
jns
xor
and
ljmp
aam
sbbl
add
dec
push
fs
inc
shll
add
jp
inc
xchg
shll
jp
fldenv
hlt
mov
mov
add
outsl
xor
cmpb
fsubs
adc
sub
sub
and
pop
rcll
loope
imul
push
xor
sub
adc
hlt
jns
shr
iret
imul
inc
int
sbb
cltd
decb
adc
out
adc
and
add
in
lds
or
ret
jne
loopne
mov
aas
jbe
push
pop
mov
mov
mov
push
mov
mov
add
and
shrb
pop
mov
andl
cmp
fs
and
pushf
mov
scas
shrb
cltd
call
lea
pop
add
dec
pop
push
push
or
mov
or
pop
sarl
lods
in
jecxz
hlt
mov
filds
clc
adc
sti
add
je
pop
cmp
outsb
imul
dec
fiadds
roll
mov
jle
cmp
adc
cmp
je
enterw
xor
sbb
cld
fbstp
lret
shr
not
and
add
pop
lea
mov
sbb
mov
push
inc
int
mov
dec
cltd
dec
jbe
or
lret
mov
dec
dec
jne
pop
dec
jge
cmp
push
loop
sbb
mov
pop
shrl
or
pop
xor
lret
push
mov
cs
add
mov
or
mov
inc
mov
jae
in
xchg
mov
push
cmovo
pop
jne
sbb
sbb
sub
and
sub
ljmp
mov
ss
ljmp
adc
data16
loope
pop
or
loope
or
or
adcb
fwait
mov
pop
xor
wbinvd
push
or
cmp
andl
and
decb
or
fadds
sarl
orl
or
js
imul
imul
adc
adc
repz
push
outsb
scas
shl
enter
fstl
shrl
xchg
in
push
lea
test
rorl
loope
xor
cmp
and
insl
or
push
and
mull
pop
je
andb
push
ret
subb
pop
pop
mov
aaa
and
stc
add
cmp
jge
into
decl
or
mov
jmp
mov
cmpl
fisttpl
cmp
cmp
xchg
or
and
mov
or
std
rclb
pop
cld
sbb
cltd
nop
out
ja
jne
mov
cmp
es
mov
out
jne
and
es
pushf
mov
jmp
es
in
sbb
push
add
je
jnp
jne
pop
pop
ret
sbb
inc
test
imul
sbb
and
mov
ficoml
cli
adc
in
popa
lahf
test
pop
nop
inc
mov
mov
adc
xchg
in
jo
push
fldl
orl
pop
mov
mov
pop
push
stos
mov
cmp
xlat
je
mov
add
dec
dec
push
into
xor
push
fs
lret
in
incb
testl
cs
cs
push
dec
cmpl
outsb
sub
negl
dec
jno
lods
bound
jge
add
std
int
loope
mov
in
and
mov
push
cltd
fiadds
decb
jne
jns
and
jmp
lds
sub
adc
cwtl
sub
inc
sub
pop
je
jp
jg
jl
or
and
or
or
icebp
fdiv
outsb
in
mov
mov
add
mov
fs
sub
fistpl
xchg
or
adc
mov
pop
mov
into
shr
or
or
das
fcmovnb
ds
sub
sub
mov
mov
in
mov
xchg
mov
subl
xchg
pop
add
mov
jne
add
and
adc
cld
lahf
shlb
lea
jne,pt
scas
shl
sbb
sbb
mov
push
outsl
adc
dec
xchg
fisubrs
inc
add
add
inc
mov
mov
sbb
push
test
xchg
nop
addl
mov
bound
enter
les
or
add
push
inc
mov
xor
inc
sub
push
fldcw
push
sbb
adc
jbe
stc
lods
mov
xor
lds
sub
push
add
add
cmpb
xchg
testb
mov
fcmovnb
dec
loopne
ret
mov
imul
push
or
adc
call
push
sti
test
out
iret
push
mov
addb
xchg
jmp
jbe
lea
inc
rcrb
movb
ja
jl
dec
repnz
cld
push
movl
lock
push
out
and
jge
movl
sbb
inc
std
dec
or
inc
jmp
in
ret
mov
or
popl
sahf
inc
inc
mov
aas
jecxz
inc
inc
mov
or
hlt
shl
fstpt
mov
and
ret
ret
stos
js
rolb
dec
int3
mov
mov
sbb
mov
sub
sub
sub
or
pusha
clc
ret
adc
add
daa
or
stos
pminub
sbb
add
jp
lock
jno
insb
mov
sbb
mov
mov
xor
clc
insl
cmp
add
lea
mov
hlt
jle
or
adc
imul
and
dec
inc
mov
mov
std
xchg
adc
sarl
icebp
xchg
cmp
push
movsl
call
add
cmp
jae
orb
pop
add
movl
adc
daa
push
nop
adc
cmp
push
les
cld
int3
adc
cmp
or
or
sqrtps
dec
insb
pop
inc
mov
push
scas
test
push
xchg
jb
push
sub
mov
lods
pushl
cmp
fldt
addr16
push
aas
mov
rolb
add
jns
test
outsl
adc
inc
pop
sbb
push
fs
sbb
push
jmp
std
cs
sub
jge
test
pop
dec
mov
je
cmpl
pop
or
in
push
inc
and
fxch
ret
or
push
cli
out
pop
xor
ss
movsb
je
lods
insl
mov
sbb
pop
lea
mov
mov
aaa
push
xchg
sbb
add
movb
sub
aaa
data16
xor
cmpsl
test
xchg
add
call
loope
jb
dec
fmuls
and
data16
lock
push
sub
pop
rol
sti
inc
or
add
pusha
inc
add
bound
add
push
enter
mov
or
mov
add
and
cmp
add
pop
jmp
adc
and
push
adc
fsubrl
pop
fwait
xor
setbe
push
mov
inc
and
imul
fwait
jle
or
ret
stc
jae
mov
ffreep
mov
xlat
cmp
jl
cmp
jbe
push
xor
xchg
sbb
push
add
arpl
jb
jns
popf
pop
jle
mov
jae
mov
cmp
jl
dec
add
cld
dec
sbb
dec
cmpl
jb
mov
mov
inc
cmp
cmp
or
pop
mov
mov
push
mov
or
adc
aas
insl
pop
testb
or
mov
xor
testl
ja
cmp
sbb
fadds
adc
pop
divb
mov
add
mov
push
lret
repnz
cli
dec
mov
shlb
mov
adc
int
push
orb
fcom
cld
mov
inc
pushf
mov
out
imul
jmp
ss
mov
movsl
loop
cmp
sbb
repnz
sbb
sbb
lret
mov
sub
sub
push
or
lea
and
xor
je
hlt
mov
sub
mov
push
sbb
jne
mov
sub
pop
and
sub
lea
push
mov
cli
sub
or
cmc
inc
or
lea
push
ret
mov
popa
jb
pop
mov
mov
pop
add
sub
jae
mov
arpl
push
mov
inc
push
dec
hlt
aas
jno
cmpsl
add
cmpb
aad
mov
adc
repz
sbb
das
jl
add
cmp
inc
inc
dec
push
jae
loope
pop
test
dec
imull
jbe
mov
sbbb
lahf
jnp
insl
in
repz
jae
lea
divl
jp
aam
insl
push
xor
fdivl
pop
and
sub
fistl
or
stos
sbb
negl
or
shr
ret
sub
in
or
jb
out
jmp
lcall
rcrb
mov
and
push
mov
pxor
and
cmp
rcll
in
jae
ret
sub
out
sahf
push
icebp
jmp
testb
je
push
xchg
jne
fists
scas
pop
movb
add
dec
or
ret
add
mov
sbb
xor
xchg
push
or
xchg
xchg
pop
jmp
pop
andb
faddl
adc
or
sbb
pushf
mov
jl
lods
xchg
int
mov
mov
insl
roll
shll
sbb
mov
fldl
mov
push
and
es
mov
add
into
jle
ret
mov
push
push
and
xchg
xchg
mov
xorb
cmp
mov
inc
cld
nop
out
cs
sahf
in
outsb
imul
decb
dec
adc
or
mov
cmp
push
or
pop
mov
movb
inc
mov
rorb
cmp
inc
int3
xchg
adc
lea
hlt
adc
imul
inc
lods
fnsave
jl
or
fistl
mov
mov
pop
push
pop
cmp
xchg
inc
and
mov
adc
lea
mov
adc
or
xchg
xor
ficompl
sub
sbb
pushf
popf
mov
lret
je
xor
or
and
sbb
cmp
adc
rorl
mov
insb
sbb
addl
jle
test
inc
mov
or
cmp
mov
rcrb
lea
mov
icebp
mov
and
pop
adc
or
fnstsw
adc
loopne
push
pop
pop
add
or
mov
mov
mov
insl
cmp
mov
and
lods
stos
and
outsl
stos
adc
xor
inc
mov
sbb
rclb
jne
sbb
sbb
stos
cmp
push
jl
dec
loopne
pop
nop
es
ret
xchg
push
lock
orl
xor
inc
incb
xor
push
mov
push
cmpb
arpl
int3
scas
loop
xchg
add
shl
flds
lock
add
inc
push
jne
adc
mov
mov
push
shll
ret
call
sub
xchg
and
jns
xchg
sub
push
ja
jmp
dec
mov
mov
call
ret
or
adc
push
push
pop
sbbb
sbb
insl
or
cmp
rcrb
dec
xchg
gs
loop
sbb
call
or
mov
sbb
outsb
adc
xchg
push
ss
adc
pop
in
add
or
pop
or
mov
jne
jne
and
or
shr
inc
jbe
push
in
push
lds
popf
jne
push
fcmovnbe
ljmp
pause
mull
jp
lea
out
jb
cmp
ja
ja
or
sub
dec
dec
pop
mov
iret
outsl
call
outsb
push
outsb
fsubrs
aaa
jmp
outsb
fwait
and
adc
fdivs
jne
adc
push
or
fst
mov
mov
or
fisubl
or
adc
iret
mov
xchg
add
mov
inc
jb
dec
shlb
inc
sbb
dec
scas
mov
test
push
fwait
ljmp
mov
lcall
fucomi
push
or
mov
lea
cmp
je
scas
xor
js
ss
push
mov
aaa
cwtl
push
pop
and
pop
mov
mov
test
rep
stos
mov
mov
jge
xchg
mov
dec
out
mov
shrl
xor
xchg
fadd
sbb
push
add
aam
dec
cld
adc
cmp
cwtl
xchg
shll
inc
subl
xchg
adcb
mov
xchg
andb
nop
inc
inc
stos
cmc
inc
inc
cmpb
lds
push
sbb
mov
or
add
jo
dec
mov
in
mov
lea
shld
ret
mov
jns
xchg
test
sbbl
cmp
pushf
cmp
cs
or
push
jo
lea
add
or
fwait
xor
add
push
add
inc
ret
jnp
mov
and
inc
js
lods
popa
dec
jo
and
inc
in
adc
push
pop
ss
dec
sub
or
dec
je
add
ja
insb
xchg
icebp
add
in
or
adc
pop
xor
aaa
inc
mov
stos
mov
mov
mov
inc
mov
push
mov
cld
sti
xor
push
xor
mov
in
cmc
std
pop
or
add
hlt
mov
movb
fistps
push
push
lea
mov
dec
int3
adc
outsl
sub
mov
inc
mov
push
stos
adc
loop
stos
inc
inc
mov
mov
sub
mov
lea
jle
mov
push
mov
fnstenv
and
sbb
pop
leave
enter
sar
push
out
pop
pop
lret
push
insl
mov
je
push
cli
fidivs
jg
adc
nop
shr
sbb
je
add
and
mov
sbb
cmp
mov
outsb
cwtl
adc
add
stos
dec
fcmovnu
add
mov
in
int
lret
jb
jp
push
and
and
loopne
pop
push
jo
dec
mov
push
or
pop
cld
sub
adc
inc
sub
cli
push
inc
loopne
add
or
sbb
cmp
xchg
pushf
xor
and
push
jns
imul
std
jmp
sub
or
sbb
inc
shll
xor
out
lds
rclb
pop
sahf
addr16
lods
adc
das
lea
divb
ret
pop
push
js
jno
cmp
data16
inc
insb
dec
push
cmpsl
or
mov
cltd
dec
adc
inc
push
or
sarl
decb
sbb
clc
test
mov
outsl
inc
ljmp
rep
jmp
mov
jns
push
enter
xchg
xlat
in
lcall
cld
xchg
nop
add
movsl
ss
mov
push
mov
pop
jae
pop
mov
inc
add
mov
mov
dec
sub
sub
fsubs
enter
nop
and
inc
aas
mov
dec
add
idivl
shrl
sbb
inc
mov
mov
pop
dec
shll
lock
shll
hlt
clc
clc
cld
inc
lods
rorb
sbb
fbld
insb
xlat
clc
or
lock
mov
adc
pop
jae
popf
pop
insb
ss
stc
adc
or
leave
and
mov
jmp
mov
outsb
jnp
std
jecxz
ja
lcall
leave
and
cltd
stc
sub
cmpsb
jmp
xchg
cltd
sub
sbb
cmp
pusha
pop
ja
insb
insl
add
outsl
add
dec
push
mov
xchg
ss
in
out
add
add
mov
pop
and
sub
js
sbbl
pop
ja
jg
add
int3
aam
adc
dec
fsub
negl
lcall
adc
or
or
ja
inc
lcall
adc
pop
sbb
sub
xchg
mov
int3
xchg
loopne
xchg
andl
or
adc
dec
adc
les
inc
and
push
jns
test
push
dec
mov
lea
lods
imul
jle
cmp
push
unpckhps
mov
scas
aam
push
rcrl
cmp
xor
cs
or
push
stos
out
jle
mov
lds
jp
mov
cmc
dec
adc
and
xor
lea
xor
js
mov
iret
fdivrs
adc
pop
mov
cmp
jne
mov
adc
add
lods
test
inc
inc
xor
mov
hlt
mov
and
or
mov
add
push
cmp
pop
xor
or
push
nop
sub
add
and
dec
aad
lods
adc
aaa
mov
and
ss
jne
xchg
sub
in
or
shll
scas
push
mov
icebp
add
out
stos
add
cmp
int
mov
cltd
decb
in
inc
xor
push
icebp
push
sub
or
add
loop
inc
test
sbb
add
cltd
sub
cmp
daa
testb
and
pop
ja
sbb
adc
das
not
mov
leave
pusha
xlat
into
pop
sbb
jne
add
jb
cmp
cmp
clc
fists
insb
add
pushf
lahf
mov
mov
lds
pop
xor
adc
fisttpll
rcrb
imul
adc
cmp
mov
xor
cmc
inc
pop
je
inc
jmp
push
jne
lea
mov
dec
sub
into
aad
filds
cmp
jne
mov
xor
mov
adc
mov
mov
xor
pop
push
inc
lock
push
out
lea
or
add
fists
jecxz
and
push
add
aam
mov
fildl
cmpsb
fsubrs
cmp
ja
push
cmc
lea
dec
dec
not
cmpsl
loop
daa
jp
mov
cmp
mov
popf
dec
sub
jae
js
mov
or
loope
inc
add
or
sbb
push
je
inc
push
sub
test
mov
movsb
or
add
inc
sub
cmp
je
push
mov
jl
mov
rorb
or
dec
mov
popa
js,pn
faddl
jo
loopne
or
jmp
sbb
ljmp
add
inc
je
pushl
test
ret
mov
jne
jmp
imul
pop
movsw
jg
ja
sbb
aas
and
inc
mov
sbb
adc
push
cmp
sahf
stos
sub
xchg
push
cs
sub
mov
lret
xchg
movhps
sbb
inc
or
cmp
sbb
push
and
add
push
adc
cmpsb
ja
push
or
pop
pop
inc
mov
test
xchg
push
leave
xchg
pop
enter
lahf
pop
mov
fcompl
rcrb
mov
roll
push
sub
and
imul
out
and
dec
mov
and
add
adc
xchg
pop
loopne
nop
mov
call
mov
and
xchg
mov
pusha
mov
push
pushf
xor
shll
lods
mov
repz
loopne
and
clc
mov
add
add
ret
pushf
inc
popa
loope
and
fyl2xp1
cmp
sub
inc
push
sub
out
add
lret
and
roll
mov
int
dec
pop
cmpsb
jnp
rep
xchg
and
lcall
or
mov
andb
or
add
ss
aas
pop
pop
xorb
jnp
jb
add
ja
pushf
or
mov
mov
mov
pop
adc
lret
jbe
xor
cmpl
mov
cmp
or
mov
add
xor
pop
in
pop
je
dec
loopne
ficomps
inc
mov
mov
cmc
jmp
mov
shrb
test
xchg
or
pop
jae
testb
push
test
int3
sarl
sbb
push
or
pop
inc
fsubl
dec
cmc
xchg
push
arpl
xor
pop
ja
int
or
jns
mov
add
cs
jno
sarb
pusha
addl
add
adc
aas
push
cmp
addb
clc
adc
cmp
and
pusha
cmp
and
sbb
push
mov
in
push
or
add
out
push
xchg
rcll
jle
mov
call
pop
ret
inc
inc
fs
lahf
lcall
mov
pushl
shll
arpl
andl
inc
jmp
aad
jl
pop
loop
or
xchg
pop
pop
adc
fisubl
mov
inc
mov
xchg
into
fsubs
sbb
scas
push
cmp
stos
lea
pop
clc
inc
movsl
cmp
aaa
test
xor
mov
add
ljmp
inc
add
jge
jno
cs
add
std
shr
pop
cmp
fmull
xor
push
fsubrl
popa
xchg
subb
stc
aaa
inc
bswap
dec
cmp
or
or
add
sbb
clc
adc
add
sbb
or
add
mov
add
dec
or
fnsave
cmp
push
pop
loopne
inc
jns
push
push
or
adc
sub
and
push
mov
add
mov
lock
rcll
xor
cmc
jmp
sti
js
bound
pop
je
mov
out
dec
jmp
fadds
roll
mov
jp
and
mov
push
stos
jae
inc
inc
add
and
outsl
and
cmp
test
pop
inc
sbb
cld
sahf
mov
push
enter
fsubrl
lds
mov
mov
imul
fdivl
fsubl
jne
fisubl
push
hlt
dec
in
sbb
mov
mov
inc
lods
testl
ds
mov
fidivrl
inc
orb
adc
jg
add
or
int3
cld
add
loopne
dec
xor
cmp
pop
neg
je
push
fs
je
mov
mov
in
jne
add
push
mov
lock
mov
aad
mov
je
push
jno
test
ds
inc
mov
stos
dec
sbbb
cmpsb
dec
dec
repz
jne
sub
pusha
dec
rcrb
jle
ljmp
lea
push
pushf
insb
and
push
pop
push
push
movsl
and
jb
mov
rcrb
inc
xor
sub
loopne
mov
inc
sub
shlb
add
xor
addr16
xor
push
xchg
pop
sbb
sbb
xor
inc
movsl
push
sbb
test
insl
arpl
outsl
das
adc
in
pop
mov
sarb
imul
sub
push
pop
sbb
repz
in
loope
clc
xlat
cmp
adc
or
into
and
jl
ffreep
popa
jl
cmpsb
call
adc
sti
mov
nop
faddl
push
mov
fiadds
test
mov
sbb
or
andb
pop
fldcw
mov
or
inc
jmp
iret
loop
mov
or
mov
fisttpll
lods
jmp
add
add
ror
shrl
ja
or
lock
scas
mov
inc
jmp
push
ret
or
rcll
pop
sub
pop
incb
std
std
hlt
mov
add
data16
or
sbb
imul
lock
inc
or
inc
or
out
test
add
inc
es
push
clc
in
sti
add
orl
and
iret
dec
iret
or
sbb
mov
data16
orb
add
xor
loop
mov
aas
inc
fs
and
mov
sbb
adc
movsb
negl
or
cmp
mov
inc
stos
push
add
les
nop
sbb
incl
fidivs
and
push
movsl
imulb
call
in
mov
leave
fs
add
xchg
in
test
pop
pop
jno
lock
sbb
xor
xchg
xor
push
push
mov
test
sbb
push
in
ret
subw
cmp
inc
sub
fildl
rcr
xor
jmp
sub
fists
add
fs
sti
mov
gs
xor
and
jo
jb
addr16
pop
push
mov
and
popa
outsb
sub
and
imul
and
lock
daa
add
loop
lods
or
or
push
ss
mov
or
pop
add
add
jnp
int
mov
pop
or
nop
andb
add
add
lds
lods
xor
add
adc
ja
pop
add
add
adc
jae
inc
pop
testl
jo
xor
shl
cmpsb
mov
pusha
and
xor
sbbb
loopne
addps
fbstp
pop
cmp
js
rolb
adc
adc
mov
mov
xor
rorl
add
adc
adc
shll
je
enter
dec
shll
add
fwait
out
xor
call
cwtl
add
pop
push
jl
fmul
pop
jg
cmpsb
imul
cmpsb
imul
cmpsb
imul
imul
cmpsb
imul
scas
imul
cmpsb
imul
cmpsb
imul
cmpsb
imul
cmpsb
imul
cmpsb
imul
imul
imul
mov
push
mov
push
call
movsb
imul
xor
imul
xchg
cmpsb
inc
loop
sbb
jns
shrb
lcall
dec
or
adc
xor
or
jne
lret
dec
shll
dec
rorl
ljmp
xor
fisubrl
xor
shll
or
shlb
push
adc
jae
xor
xor
arpl
cmpsb
and
xor
addl
xorl
dec
rorl
imul
or
dec
shll
dec
notb
rorl
pop
ja
into
shll
pop
xchg
pop
pop
sahf
or
aas
fisubrs
sti
pop
rorl
das
mov
dec
sbb
shll
xchg
xchg
and
xchg
shll
xchg
test
dec
cltd
fstps
dec
xchg
lds
sbb
and
xchg
xchg
aad
xchg
cmc
int
dec
xchg
popf
fs
xchg
std
and
xchg
mov
sbb
xchg
and
mov
lret
dec
xchg
jmp
dec
xchg
mov
sti
xchg
and
xchg
cmpsl
out
sbb
testl
fs
xchg
filds
aas
add
mov
add
cmpsl
sbb
adc
add
repnz
sbb
inc
pop
out
sbb
sbb
das
jg
adc
and
sbb
adc
add
subl
in
pop
push
popa
pusha
sahf
in
sahf
add
xor
or
pop
shl
add
call
or
imul
lods
lahf
add
add
repnz
lock
xlat
xor
mov
in
aam
enter
mov
sub
mov
add
sbb
add
push
xchg
and
mov
inc
push
add
or
or
enter
or
add
ret
pop
or
or
or
cmpsb
imul
lcall
sbb
pop
imul
imul
imul
cmpsb
imul
cmpsb
imul
imul
cmpsb
imul
cmpsb
imul
imul
cmpsb
imul
cmpsb
imul
imul
cmpsb
imul
cmpsb
imul
imul
cmpsb
imul
cmpsb
imul
imul
cmpsb
imul
cmpsb
imul
imul
cmpsb
imul
cmpsb
imul
imul
cmpsb
imul
imul
xchg
push
cmpsb
imul
imul
cmpsb
imul
cmpsb
imul
imul
cmpsb
imul
cmpsb
imul
imul
cmpsb
imul
cmpsb
imul
imul
cmpsb
imul
cmpsb
imul
imul
cmpsb
imul
cmpsb
imul
imul
cmpsb
imul
cmpsb
imul
imul
mull
inc
add
pusha
adc
xor
rcll
jo
dec
dec
shll
cmp
dec
shll
inc
and
adc
xor
je
inc
addl
shll
arpl
xor
xorl
shll
sbb
dec
shll
push
push
xor
shll
add
or
shll
sbb
dec
adc
sbb
cltd
pop
mov
add
or
add
xchg
inc
push
imul
and
or
push
pmaxsw
sub
add
lcall
dec
xchg
sbb
sbb
push
and
inc
cmp
fnsave
jbe
add
adc
xor
adc
push
pop
sbb
inc
leave
push
sbb
sub
mov
mov
cmpsl
xor
rcl
or
or
adc
xor
rcrl
sbb
sub
dec
shll
jo
or
xor
shl
neg
jnp
outsl
imul
fidivrs
mov
dec
inc
jg
and
cmp
inc
add
popa
push
out
mov
les
hlt
push
xor
xchg
fs
xor
fdivrl
jmp
jmp
mov
rclb
mov
sub
mov
sbb
dec
jno
push
fiadds
test
ficompl
jmp
mov
hlt
movl
imul
fucomip
std
in
leave
mov
add
insb
push
arpl
psubd
or
cmp
lcall
imul
addr16
add
aam
dec
std
test
movsl
cli
test
xor
insb
cwtl
mov
leave
mov
lods
jecxz
fdivs
jne
filds
or
shrl
call
neg
push
adcb
push
popa
sarb
and
mov
cltd
xchg
mov
jmp
add
or
or
and
or
adc
stos
sbb
jg
ljmp
fdivl
jno
mov
adc
out
mov
ljmp
movsl
in
lahf
xor
mov
js
dec
jle
cwtl
push
cli
jmp
mov
cmp
fs
add
hlt
push
imul
insb
sbb
xor
call
daa
insb
jnp
add
shl
adcb
cmc
fnstenv
adc
ljmp
cld
fistps
ficoml
gs
aam
pop
popa
mov
into
in
pushl
pop
sub
bsf
inc
movsl
fisttps
xchg
fsubs
inc
shll
jmp
outsb
xor
mov
sarb
add
in
add
pop
call
stos
leave
jl
fnstsw
add
daa
lea
mov
and
pushl
aam
mov
push
stc
ficomps
leave
fldcw
and
xlat
pop
cmp
ljmp
pop
mov
mov
mov
pushl
je
inc
aad
scas
ja
popf
adc
push
fdivl
or
test
fs
ds
dec
ljmp
test
push
or
push
in
decl
xchg
daa
scas
add
xchg
sar
jmp
add
inc
push
imul
xorb
sbb
push
imul
aam
loopne
ljmp
push
jbe
jp
adc
dec
frstor
fistpll
mov
mov
call
aad
mov
call
xchg
shll
push
repnz
addr16
cmpsb
fldl
mov
aas
dec
ss
fisubrl
or
scas
testb
pusha
jp
inc
ret
out
pusha
fists
addr16
mov
pushl
jns
imul
andl
shrb
ss
push
xchg
ja
int3
add
mov
jmp
das
es
lds
or
sub
mov
cmpsl
call
ret
shlb
ljmp
ret
es
pushf
mov
insl
add
ss
jmp
addr16
jg
jb
push
testb
mov
jnp
sbb
xchg
or
call
in
out
fdivrl
fisttpl
aam
roll
clc
mov
push
int
mov
mov
loope
mov
ja
mov
out
jge
push
dec
cmp
pop
inc
ljmp
int3
adc
sahf
gs
clc
sar
imul
push
js
or
call
or
dec
ret
cmp
cmpsl
notl
pusha
rorb
imul
push
scas
fdivr
lcall
fldenv
filds
cmp
aaa
push
scas
mov
fidivrs
mov
jmp
repnz
inc
mov
push
cmpsb
mov
sarb
sub
push
mov
jp
mov
jmp
popa
les
sbb
xchg
sub
aaa
mov
or
sbb
add
sub
incl
sbb
andb
ret
push
sub
hlt
ja
incl
xchg
inc
dec
or
ret
call
hlt
jecxz
dec
mov
dec
jle
mov
decl
sbb
xchg
ret
and
push
shll
js
inc
out
popa
push
xlat
scas
cs
mov
call
cwtl
sbb
test
sbbb
sub
test
lcall
out
insb
insb
fistpll
inc
aam
push
pop
int
and
xchg
jecxz
lahf
mov
inc
mov
popa
ja
mov
jmp
call
call
gs
fisubrl
inc
inc
sub
imul
std
pushl
scas
imul
out
pop
sub
sub
pop
or
sbb
repz
fbstp
push
jo
das
mov
xchg
sub
xchg
lcall
xor
pop
nop
sti
mov
test
jns
test
cmp
jns
jae
dec
call
cli
inc
inc
cmp
ficomps
dec
jns
inc
jle
jmp
sbb
or
mov
and
or
hlt
mov
or
xchg
lea
cld
or
pop
dec
int3
pop
dec
xor
inc
mov
outsb
lret
push
pop
mov
ljmp
aas
lea
push
cwtl
xlat
ficoms
test
loope
xchg
lret
loop
lcall
jb
out
imul
push
inc
lahf
test
pop
adc
push
sbb
adc
and
inc
and
cmp
and
jl
or
push
fs
dec
mov
loope
lcall
cmpsl
xor
mov
lods
out
sarb
mov
adc
ljmp
adc
jle
push
jns
das
mov
and
je
or
push
mov
dec
push
jo
gs
out
jle
repz
mov
xchg
rcl
cmp
cli
mov
js
mov
test
cwtl
cmpl
test
mov
mov
scas
adc
decl
out
pop
push
insb
hlt
inc
int
fldcw
push
ret
adc
add
inc
ljmp
ja
clc
incl
ss
push
out
mov
mov
movsl
test
jno
mov
ja
fldcw
pop
push
dec
sub
or
sub
ds
lcall
lahf
cwtl
mov
nop
bound
xchg
push
push
hlt
out
les
out
aad
fdecstp
jmp
lea
and
pushf
sub
sub
jg
lods
dec
jo
outsl
sbb
sub
loope
fisubs
lds
push
call
jmp
gs
in
mov
movsb
ret
addr16
test
mov
lahf
fdivrp
cmp
repz
jnp
call
cmp
mov
or
stos
mov
sbb
icebp
adc
sub
outsl
cld
pushl
xor
mov
jo
cmc
shrb
addl
mov
arpl
loope
ror
mov
stc
xlat
loopne
adc
mov
jo
popf
mov
test
jmp
add
insb
cmp
les
adc
inc
cwtl
dec
add
sar
xchg
cli
call
lret
bound
cmp
popf
cmpsl
push
mov
xchg
adc
lcall
dec
cld
cltd
bound
fcoms
into
pop
dec
loope
push
jle
push
xchg
sub
int3
bound
mov
call
xchg
xor
call
mov
pop
lods
ret
outsb
xchg
dec
insb
das
mov
adc
sbb
clc
test
sub
adc
jns
movsl
push
decl
sbb
mov
mov
repnz
out
mov
mov
or
jle
xchg
aas
mov
adc
out
loopne
lcall
imul
pop
jle
aaa
or
jbe
dec
divl
lahf
adc
jb
and
std
jmp
ret
aam
add
inc
add
test
jmp
lret
idiv
incl
mov
lea
push
adc
cmp
test
or
stc
sbb
call
call
sahf
or
es
leave
in
push
ja
pop
sub
lcall
lods
or
sbb
fildll
sbb
repnz
adc
dec
jae
incl
call
adc
cmp
and
push
mov
pop
loopne
dec
cmp
sub
cmp
icebp
decl
clc
or
cmp
inc
aas
or
cmp
add
call
pop
outsl
jge
aaa
ss
fidivl
test
xchg
xor
imul
fnstsw
xor
in
daa
leave
pop
sub
decl
and
mov
and
sub
sub
jmp
sub
ds
sbb
sub
lcall
das
rorb
jno
decl
fdivl
and
push
jbe
icebp
pop
je
fwait
aad
js
mov
decl
dec
jg
or
jl
je
jns
push
inc
js
mov
jnp
cs
lods
xchg
fdivrp
cmp
nop
adc
pop
pushl
in
ja
add
push
or
bound
insl
arpl
sub
shr
sar
call
xlat
cmpsb
gs
fs
imul
dec
pop
mov
mov
call
jns
dec
cld
arpl
dec
lret
or
xchg
mov
dec
movsl
fstpl
inc
scas
lock
incl
inc
testb
shll
inc
xor
inc
jae
cmovo
out
inc
sbb
push
pushl
push
ds
mov
mov
clc
push
mov
adc
push
aad
mov
pop
fists
lea
and
in
pop
cld
movsb
pop
js
pop
add
sub
ljmp
insl
das
lods
pop
sbbb
loope
jno
loopne
iret
mov
fldenv
cmp
imul
out
addr16
mov
in
dec
es
mov
out
push
sahf
mov
in
in
das
call
mov
and
jmp
pop
imul
in
sar
sahf
insb
xchg
cmp
call
sub
sbb
sbb
sti
inc
les
clc
dec
jmp
decl
adc
es
inc
icebp
xchg
inc
or
mov
xchg
test
jmp
js
push
aaa
mov
fidivrl
jecxz
fstpt
mov
shlb
cmc
fucom
dec
aaa
faddl
fmuls
xlat
out
test
fsubr
aam
mov
aad
movsb
shlb
into
mov
jmp
rcrl
and
adc
pop
lds
xchg
pushf
les
fcmovb
dec
inc
sbb
int3
push
push
ret
xchg
ret
mov
adc
xchg
call
lret
lahf
lds
adc
decl
leave
je
inc
int3
inc
insl
xchg
sbb
ror
mov
xchg
ja
insl
nop
cs
incl
xchg
sbb
jmp
xchg
stos
push
fs
repnz
clc
movl
lods
jle
xchg
adc
pushf
mov
outsl
fcoms
add
xor
lcall
xor
dec
mov
or
in
popf
orb
ljmp
inc
mov
mov
mov
mov
adc
fdivr
incl
arpl
pop
xchg
shl
test
into
add
stos
stc
outsb
movsb
ljmp
dec
adc
scas
adc
lods
sbb
xor
inc
aas
mov
jmp
repz
cmp
popf
xchg
mov
mov
sbb
mov
cmpsl
inc
mov
int
clc
pushl
cmp
dec
mov
mov
pop
dec
adc
mov
popa
xchg
mov
and
mov
in
xor
mov
jmp
mov
out
scas
mov
push
xchg
bound
pop
imul
cltd
popf
out
inc
lds
outsl
add
hlt
xlat
mov
push
xor
loopne
adc
lahf
push
sbb
xor
call
adc
jno
lods
inc
enter
lods
cmpsl
addr16
or
outsl
into
int
jg
xchg
adc
jg
sti
mov
aas
sahf
rcrb
xchg
mov
mov
leave
inc
jp
ds
jg
ljmp
mov
mov
xchg
add
das
or
in
xchg
loop
test
xchg
in
xchg
outsl
hlt
fstpl
iret
aas
sub
adc
ljmp
inc
push
mov
sub
les
and
push
sahf
movq
or
cld
jg
or
jge
aad
rcr
rcrb
cmc
call
rol
sbb
daa
sbb
mov
stos
mov
imul
dec
test
adc
pop
aas
test
or
sbb
jg
xor
mull
adc
test
loope
jg
mov
ret
push
rolb
pop
test
test
std
cmp
adc
loopne
jle
push
das
lret
jnp
dec
ja
decl
or
jae
movl
cmc
cwtl
outsl
inc
nop
call
cld
jle
data16
sbb
ficoml
fnstsw
dec
daa
mov
out
mov
mov
mov
cmpl
fdivr
js
sub
pop
outsb
xchg
add
cmp
and
std
or
push
pusha
inc
mov
clc
or
test
push
shl
hlt
jmp
mov
fwait
push
add
in
mov
dec
leave
xor
stc
fistl
inc
arpl
adc
push
mov
aaa
pop
in
push
loope
inc
jmp
pop
loop
dec
and
mov
clc
inc
addb
jg
pop
jmp
cltd
scas
ljmp
mov
in
pop
shl
jmp
stc
sbb
ljmp
bound
inc
xchg
out
xor
xor
pop
call
in
sub
push
in
cmp
pop
cmp
das
or
outsb
xor
or
xchg
movsb
loope
mov
sub
sbb
decl
cmc
scas
repz
xor
mov
xchg
and
pop
cs
dec
rol
std
shlb
pop
xchg
idivl
sub
mov
icebp
and
pushl
pusha
jle
cmc
mov
out
mov
pop
push
mov
ret
mov
flds
ljmp
and
push
arpl
popa
stc
and
push
mov
roll
outsb
mov
incl
or
sub
movsl
adc
bswap
fsts
xchg
sar
test
lods
cmp
sbb
and
xorb
fcoms
add
mov
fwait
leave
jae
and
movsb
push
inc
xchg
sbb
test
pop
adc
out
dec
jbe
mov
push
into
lea
inc
fsubr
inc
clc
fs
jns
stc
xor
xchg
inc
fidivl
jmp
incl
mov
mov
lock
imul
daa
test
call
cs
mov
call
mov
loope
into
jecxz,pn
or
imulb
aas
add
subl
negb
lcall
dec
cwtl
ds
icebp
and
subb
aam
into
mov
iret
test
jg
pop
es
outsb
mov
cli
decl
lret
sbb
loope
push
adc
cmpl
dec
adc
mov
jle
andb
cltd
adc
decl
add
mov
jno
ds
outsl
sub
mov
add
xchg
out
jg
mov
push
cs
dec
rolb
pop
outsb
sti
ret
neg
jmp
cmpsl
call
test
or
xchg
popa
mov
fdivrp
ja
xor
call
cltd
or
pop
insl
les
scas
hlt
xor
push
fisttpl
fdivrl
push
xchg
rcr
mov
mov
sub
jl
out
sub
lcall
fs
and
repz
inc
ficomps
fcmovbe
jge
fucom
jmp
aam
push
ljmp
test
adc
imul
mov
in
adc
pop
dec
arpl
insb
fsqrt
ljmp
icebp
arpl
and
dec
imul
in
addr16
cmp
ljmp
icebp
jmp
rorl
aam
rorb
dec
xor
mov
insb
fstpt
call
lods
mov
insb
jecxz
fistps
or
pop
fnstenv
lods
push
lds
dec
xlat
push
cmpb
hlt
mov
mov
and
mov
movsl
movaps
mov
or
inc
or
mov
or
and
outsl
jl
pop
push
sbb
cmp
add
jno
ljmp
cwtl
shlb
mov
mov
mov
mov
pop
lahf
mov
xchg
mov
leave
loop
adc
push
cwtl
sbb
sbb
push
decl
sub
arpl
dec
ljmp
test
fdiv
bound
dec
insb
push
xchg
in
sbb
movsl
jnp
or
shl
std
decl
les
mov
adc
mov
jl
fstpl
incl
decl
dec
gs
mov
push
sub
mov
mov
xor
dec
fbld
xlat
movsb
rol
insl
rcl
hlt
sti
inc
imul
cld
lods
mov
pusha
mov
jae
add
pop
fisttpll
jno
daa
add
mov
or
inc
jmp
xchg
mov
and
mov
aam
into
popa
in
pop
fdivrp
push
sub
leave
cwtl
mov
jg
shl
xlat
test
pop
mov
pop
cs
xorl
insb
lods
in
mov
mov
add
lcall
call
pushl
add
es
jecxz
or
xchg
cmp
pop
test
decl
iret
or
add
mov
setae
mov
push
idiv
ljmp
bound
adcb
insb
ss
imul
aam
jbe
shrl
loopne
call
fisttpll
mov
out
stc
pop
mov
inc
pusha
mov
aad
mov
call
fadd
les
repnz
sarl
addr16
pop
cli
pushl
ss
fmuls
sbb
dec
testb
fbld
ret
jg
jmp
test
fists
outsb
mov
inc
imul
outsl
call
cli
call
mov
int3
or
xchg
mov
push
mov
lds
mov
sub
ret
cmpsl
mov
iret
xor
sahf
mov
mov
scas
sbb
in
arpl
add
or
decl
ss
jb
test
add
xchg
mov
jp
jnp
sub
xchg
rorb
inc
aad
jns
out
mov
fcmovnu
and
aam
inc
push
fiaddl
incl
mov
ja
sbb
ljmp
push
cmp
adc
or
sahf
clc
bound
shll
push
insb
iret
inc
mov
or
adcl
ret
push
jmp
popa
shlb
testl
ja
scas
jmp
faddl
decl
data16
fdivrs
lock
mov
iret
jg
mov
jmp
lret
mov
pop
clc
call
cmpsb
mov
xlat
push
xchg
push
ficoms
and
fldenv
cs
aam
jmp
mov
sub
xchg
mov
mov
mov
sub
lcall
rcrb
xor
bound
lds
call
cmpsl
xchg
xchg
enter
rol
mov
mov
hlt
fxch
lods
mov
or
scas
jle
add
lcall
cwtl
sbb
dec
ret
push
fldenv
adc
jo
popa
out
inc
xchg
jmp
cli
call
push
aaa
mov
adc
cwtl
mov
add
sbb
mov
pop
mov
test
ja
pop
fs
sbb
int3
dec
pop
push
sahf
xchg
test
mov
inc
and
call
shl
ret
fiadds
neg
lds
inc
inc
lahf
jmp
imul
jbe
std
imul
sub
or
incl
or
sbb
insl
filds
repz
pop
pop
mov
jo
jno
imul
pop
call
sbb
jne
pop
mov
sti
push
test
jns
ljmp
cmp
jns
push
test
fisubrs
cmp
jg
jns
jmp
dec
sub
xchg
adc
mov
jg
call
cmp
hlt
dec
or
call
lea
or
xor
cli
bound
mov
push
mov
lea
xchg
xchg
push
xchg
cwtl
push
test
jg
shl
lret
xchg
jb
xlat
pop
imul
inc
push
mov
pop
dec
test
jmp
and
jo
cmp
std
imul
add
and
xchg
scas
mov
loope
jmp
xor
std
pusha
lods
and
scas
mov
shr
lahf
adc
or
jmp
rclb
ljmp
ja
das
aas
jns
ss
mov
or
je
adc
xor
movsl
mov
jns
fidivs
out
xor
out
std
lcall
inc
mov
int3
lret
mov
lcall
js
cmpsl
gs
cmp
sbbl
or
lret
mov
pop
dec
inc
hlt
insb
push
insl
fnstcw
int
ret
decl
inc
and
shrl
ja
adcb
out
movsl
add
decl
cld
incl
pop
mov
cwtl
pop
fsts
ss
icebp
call
daa
pop
dec
add
mov
icebp
ljmp
bound
lds
out
hlt
push
out
jmp
aad
sub
mov
test
xor
imul
in
shll
lods
clc
pop
sbb
inc
sub
data16
loope
jmp
repz
mov
in
test
int3
outsl
icebp
pop
push
lds
sbb
dec
call
imul
or
stos
test
jg
sbb
mov
pop
adc
pushl
ja
dec
jo
mov
imul
jp
xorl
pop
mov
lret
cli
xlat
dec
sar
lea
loope
psubw
loopne
sub
lea
or
lcall
mov
pop
inc
sbb
insb
cmp
push
test
cwtl
inc
jle
ljmp
push
test
dec
lret
addl
push
cmpsl
popf
stos
adc
xchg
fsub
push
add
cld
dec
xor
bound
into
jns
fmuls
dec
pop
and
shll
push
jnp
sub
sub
mov
call
pop
jle
in
inc
gs
dec
xchg
outsb
jne
mov
call
or
inc
push
aas
sub
in
mov
sbb
mov
repnz
mov
mov
out
and
loope
or
mov
aas
xchg
mov
jo
and
xor
cmp
pop
clc
ja
fsubl
test
pop
hlt
out
sub
testl
cli
jg
scas
pop
adc
xor
jg
inc
push
add
pop
push
test
push
lret
ret
lea
dec
push
test
decl
adc
psrlw
or
push
out
loope
sbb
fs
xchg
push
or
ljmp
mov
pop
mov
sbb
lods
pop
cli
lcall
in
popa
fwait
sbb
mov
adc
cwtl
call
dec
cmpsb
adc
pushl
xchg
adc
xor
push
mov
in
cmp
loopne
sub
cmp
xchg
mov
decl
clc
mov
xchg
cmp
pop
pop
pop
aaa
pushf
jge
xor
std
add
lcall
test
test
xchg
aad
xor
imul
push
frstor
in
pushl
ss
xchg
daa
ljmp
bound
and
or
jmp
cltd
and
and
adc
mov
pusha
inc
sub
decl
jno
jno
hlt
sub
jbe
cs
enter
mov
shlb
divl
pop
scas
jb
pushl
ja
and
sub
rcl
inc
jle
fdivrl
dec
mov
decl
or
bound
jns
je
js
and
mov
std
ret
cli
insb
mov
xchg
cli
ficoms
nop
jmp
incl
pop
push
repz
arpl
popa
sub
jmp
rcll
xlat
aam
fs
mov
dec
xlat
lret
and
mov
mov
mov
fisubs
dec
sbb
lret
dec
pop
mov
dec
lcall
lcall
inc
dec
testb
inc
int
inc
inc
addps
dec
out
inc
decl
push
addr16
jne
ds
mov
or
rorb
adc
push
mov
cmp
pop
and
pop
in
xchg
xchg
pop
sub
add
inc
pop
pop
icebp
ljmp
sbb
loop
iret
out
jecxz
movsl
push
cmp
pop
ljmp
sub
fsts
addr16
jp
add
out
in
paddsb
in
pusha
hlt
popa
call
in
mov
jmp
ss
imul
rcl
xchg
insb
jg
or
sbb
sub
fdivrs
stc
sahf
les
pop
ljmp
dec
bnd
lock
adc
or
cmc
lret
sub
testb
jg
ljmp
mov
mov
jecxz
fidivs
mov
and
fdivl
dec
in
imul
test
fdivs
mov
movsb
add
mov
movsl
shlb
pop
lds
adc
pushf
xchg
daa
fisubrl
jle
sbb
ret
int3
ret
xchg
cmp
rcl
mov
lret
dec
scas
test
pop
lahf
enter
test
lods
leave
or
icebp
int3
inc
pop
je
xchg
iret
rcl
into
add
lock
nop
insl
cld
ja
sub
xchg
jmp
ds
xchg
fs
stos
loopne
xchg
and
repnz
loopne
cmp
iret
pushf
cmp
xchg
popf
cli
jns
ljmp
outsl
and
add
dec
lcall
xor
decl
mov
sbbb
mov
orb
mov
lcall
mov
sbb
int3
push
test
arpl
aad
or
test
mov
jmp
into
stos
movsb
outsb
stc
scas
jmp
jl
sub
dec
lods
outsl
lods
adc
sbbl
movsb
mov
mov
inc
mov
cmp
mov
mov
pushl
mov
sbb
mov
cmpsl
mov
mov
fisttpl
cmpxchg
mov
punpckldq
xlat
lock
lock
push
mov
xchg
gs
sbb
push
outsl
fistpl
fidivrl
mov
or
mov
mov
out
decl
jmp
push
aaa
fdivp
xor
xlat
cmp
or
outsl
mov
filds
mov
fucom
fbstp
pop
arpl
push
push
sbb
jg
call
adc
fistpll
enter
lods
jne
or
cmp
es
lods
jg
sub
mov
xchg
rcrb
jg
mov
and
xor
pop
or
addr16
xchg
shrb
mov
cmp
in
pop
or
pop
lock
in
xchg
xchg
cmp
mov
fucomip
fisttpl
jno
aas
ljmp
jecxz
in
sbb
push
mov
push
sub
mov
pop
and
sub
sahf
push
dec
jg
outsl
test
or
cld
test
rcrb
lahf
rorb
mov
lahf
xchg
sbb
daa
sub
stos
xchg
cli
mov
and
xchg
test
call
mov
test
pop
xor
rcll
iret
rcrl
cld
ljmp
lret
mov
ret
pusha
test
shl
sbb
pop
call
mov
cmp
out
imul
dec
das
push
ret
ja
imul
bswap
mov
popa
add
mov
das
lock
cwtl
cmc
cld
sar
nop
out
push
hlt
fidivl
sbb
mov
inc
sub
jmp
mov
cmp
jg
sarb
xchg
outsb
pop
hlt
cmp
testl
and
sub
pusha
push
or
jg
mov
fbld
fucomip
inc
cs
addr16
daa
pushl
jno
dec
mov
xorb
inc
out
imul
pushf
roll
push
and
in
aaa
lret
pop
loope
scas
dec
push
incl
xchg
and
push
aaa
out
lock
push
add
inc
clc
and
popf
and
pop
mov
in
ljmp
scas
xor
in
pop
mov
push
in
pop
inc
scas
mov
in
sbb
bound
and
mov
inc
or
mov
aam
push
stc
mov
in
pop
cmp
incl
or
or
cmp
mov
mul
movsb
add
sub
scas
cmc
ret
jbe
mov
lcall
std
mov
sbb
dec
scas
cs
add
push
movsw
notl
cld
sbb
sub
jns
nop
xchg
in
icebp
repnz
imul
cmc
xlat
jle
out
rorl
clc
pushl
push
jp
jmp
sbb
mov
decl
arpl
and
stc
popa
lcall
mov
lcall
lods
mov
ss
dec
lcall
xchg
loope
xchg
call
fxch
sub
inc
andb
jne
jp
adc
scas
dec
jae
fwait
push
jmp
inc
std
lods
cmp
jbe
out
push
into
icebp
mov
inc
lea
call
ljmp
jns
inc
xchg
push
xor
es
jmp
in
mov
jmp
sbb
push
decl
cld
mov
fwait
push
test
fistl
cs
push
es
mov
call
mov
adc
push
ja
cs
adc
out
mov
incl
jbe
pop
notb
dec
jmp
ds
insb
addb
aam
popa
inc
mov
stos
jle
mov
ljmp
cmp
es
jl
mov
pop
sbb
decl
repz
in
test
adcl
ja
mov
ret
add
cmp
cltd
lcall
in
or
pushw
cmpsl
fidivl
sub
fisubrs
sarl
dec
or
lock
out
mov
mov
push
inc
sarb
dec
sti
outsb
pop
sub
push
addr16
push
hlt
jmp
je
into
jp
mov
push
icebp
and
mov
lods
push
dec
popa
jb
and
gs
and
imul
lahf
or
or
adcb
pop
inc
pop
orb
cmp
fmuls
mov
push
jae
lcall
addl
nop
and
add
adc
xchg
inc
push
sbb
adc
cwtl
jge
ja
movl
mov
out
sbbl
pusha
mov
and
imul
fistps
add
add
push
add
add
or
pop
stc
add
add
add
add
in
ja
xchg
add
shll
sbb
add
gs
push
add
in
jmp
add
pop
push
add
add
add
addb
add
test
push
pop
mov
pop
bswap
aaa
out
pop
and
add
pusha
push
jo
or
dec
sbb
mov
loopne
aas
outsb
xchg
push
in
aaa
nopl
mov
inc
dec
dec
inc
inc
dec
pop
dec
inc
inc
push
pop
push
inc
dec
inc
inc
push
inc
inc
pop
sub
push
push
inc
push
push
aaa
lock
lock
je
insl
fidivrs
mov
inc
mov
adc
add
lret
fimull
enter
inc
dec
dec
inc
adc
jecxz
jbe
push
xor
cmp
sub
insb
je
xor
imul
push
daa
fcmove
aaa
outsb
outsl
je
add
inc
and
popa
and
mov
and
insb
outsl
ja
cmp
enter
outsb
aaa
ss
cmp
leave
je
xor
mov
sub
jb
jne
xor
sub
mov
insb
sub
imul
js
das
pop
push
fsub
pop
pop
sub
pop
add
pop
push
gs
xor
pcmpgtb
arpl
cmp
cmpl
push
and
insl
mov
nop
insl
lods
je
mov
mov
imul
mov
mov
add
and
add
addr16
insl
and
pop
inc
popa
insl
ss
xor
dec
xor
mov
sub
lahf
imul
sub
sahf
xchg
fstl
addr16
jae
xor
lds
outsb
subb
cmp
mov
adc
dec
sub
pop
cmp
push
imul
push
mov
pop
bound
addr16
popa
push
inc
push
and
push
aam
sbb
sbb
add
add
pop
and
loope
fistps
inc
gs
popa
xor
jbe
push
scas
mov
sub
jne
adc
push
xchg
fs
gs
popa
repnz
outsl
push
arpl
and
or
popa
add
in
clc
cmp
cld
pop
add
cltd
cmpsl
popf
cmpsl
sbb
mov
inc
fs
jo
popl
xchg
adc
cmpsl
and
or
push
push
mov
push
gs
jo
inc
inc
inc
inc
ss
mov
sub
xor
or
inc
xchg
je
mov
xor
xor
adc
lods
insl
ljmp
daa
inc
xor
aaa
inc
sbb
insl
aaa
cli
data16
sub
adc
xor
push
mov
inc
ss
inc
cmp
inc
je
xor
test
sub
add
dec
arpl
inc
daa
test
nop
add
dec
dec
mov
in
or
sbb
imul
adcl
ret
jbe
mov
push
lret
push
lgs
push
outsl
dec
popa
bound
xchg
mov
cmp
pop
rclb
rorb
das
repnz
testb
jae
je
popa
mov
sbb
aaa
mov
xchg
lods
arpl
pop
insl
lahf
sbb
and
scas
insl
fs
pop
xchg
stos
jae
insl
bound
in
xchg
insb
jae
push
sbb
or
roll
sbb
xchg
sti
je
jo
daa
insb
dec
push
mov
push
sbb
pop
dec
popa
je
add
add
sub
and
mov
xchg
sub
pop
ja
sub
popf
inc
xor
jb
mov
xor
das
adc
out
mov
inc
sbb
bound
push
mov
ja
outsl
jae
mov
addr16
cmp
outsl
cmpsb
fldenv
mov
mov
das
sub
sbb
cmc
inc
sub
gs
ljmp
push
scas
mov
mov
int
jae
pop
sub
aam
add
or
dec
add
adc
mov
jbe
add
sbb
pop
cmp
outsb
nop
pop
mov
add
or
fs
add
lea
push
fs
push
mov
inc
xchg
xchg
sbb
push
or
mov
xchg
insl
and
xchg
sbb
call
aas
test
or
fnstenvs
out
lcall
sbb
lcall
fsub
shll
movsb
jns
shll
cmp
cmp
xor
test
add
mov
mov
pop
icebp
test
sub
add
add
inc
sbb
scas
loopne
inc
xchg
push
icebp
cmp
add
adc
leave
xor
add
add
int3
movsl
inc
push
jo
inc
jb
inc
insl
inc
es
xor
sub
inc
es
pop
dec
add
test
nop
or
adc
add
sbbb
sbb
cmp
mov
add
add
das
movsb
add
enter
jns
and
iret
lahf
lahf
sbbl
mov
test
inc
or
das
inc
mov
test
fistps
mov
in
call
decb
mov
ficompl
pop
pop
fisubrl
xor
pop
sub
rcr
fsubp
stc
stos
jle
outsl
and
adc
imul
cmpsb
imul
inc
push
sbb
sbb
push
or
pop
xorps
adc
sbb
or
add
pop
and
push
inc
inc
push
xor
pop
push
pop
push
pop
jmp
jnp
pop
insl
stos
and
lcall
roll
in
xorb
cmp
nop
addl
dec
sahf
mov
fsubs
mov
into
pop
xlat
test
in
or
pop
add
mov
add
inc
sbb
pop
push
adc
adc
add
iret
pop
mov
xor
lock
inc
imul
push
inc
adc
imul
adc
jae
dec
popa
outsb
fs
or
fstpt
or
sbb
xor
push
push
js
jb
lahf
mov
dec
outsl
fs
ltr
push
testb
adc
jno
addr16
push
push
mov
adcl
inc
add
fs
mov
outsb
outsw
adc
insl
insl
pop
dec
aaa
and
inc
int
js
xchg
or
mov
mov
or
mov
insb
aam
or
mov
push
lahf
mov
xchg
in
gs
jne
sbb
cmp
outsb
push
jo
pop
push
add
ret
loope
inc
mov
test
sbb
or
imul
dec
jne
test
pop
sub
mov
mov
push
addr16
jne
xchg
xor
test
adc
inc
push
popa
mov
add
inc
es
xchg
lods
popf
adc
outsl
jns
mov
lcall
clc
push
je
or
pop
andb
push
pop
or
adc
mov
xor
dec
push
lods
or
pop
test
add
dec
inc
dec
or
fs
dec
sub
test
adc
xchg
push
xlat
das
cmp
insl
aaa
test
dec
jns
xchg
fadds
es
insb
jne
push
addb
clc
gs
mov
push
jne
in
cmp
inc
push
inc
dec
add
jae
repz
mov
or
push
mov
add
pop
aaa
sti
into
push
mov
inc
or
add
nop
pop
inc
das
pop
xorb
cmpl
push
xchg
cmp
int3
jmp
lods
or
adc
test
jbe
nop
mov
aam
cs
fwait
and
ds
add
inc
idivb
inc
lock
pop
daa
negb
jb
jb
jmp
daa
jae
sub
and
dec
and
aam
add
add
adc
and
add
add
add
inc
add
call
int
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
