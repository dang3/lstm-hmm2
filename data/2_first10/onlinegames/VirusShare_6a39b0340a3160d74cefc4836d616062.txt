fnstcw
sti
adc
sub
dec
and
bound
jle
lcall
enter
and
xor
shll
ds
pop
je
xor
roll
cmpsb
pop
ss
into
fidivrl
and
sbb
dec
outsb
fwait
or
and
and
jp
movsb
jmp
cwtl
lahf
mov
sbb
aas
add
ss
aas
dec
gs
gs
xor
cs
insb
add
or
push
push
jae
sbb
inc
bound
push
jb
jbe
mov
sti
imul
jns
je
insl
and
inc
inc
add
jae
add
push
gs
outsl
imul
add
fistpll
add
jbe
xor
cs
jne
arpl
xor
pop
imul
insl
jns
jbe
fs
add
je
pop
outsl
arpl
pop
jnp
bound
xor
cmp
cmp
push
sbb
xchg
inc
sbb
aaa
and
in
sub
fnstsw
andb
out
std
rclb
xor
mov
inc
add
add
or
lds
in
mov
popa
enter
push
in
pop
outsb
add
outsl
int3
int
pop
into
push
iret
rorb
shll
xor
shll
aad
xlat
pop
fdivs
mov
mov
fisttpl
push
pop
loope
imul
inc
in
and
add
insl
mov
inc
daa
ljmp
in
pop
in
aaa
lock
repnz
xchg
int
stc
dec
pop
cli
sti
js
je
mov
fidivrs
call
jle
pop
adc
fbld
mov
xor
mov
mov
je
push
push
call
mov
jmp
mov
cmp
jne
xor
jmp
testl
sub
call
sti
test
je
sbb
outsb
imul
lods
pop
adc
jne
push
or
mov
sbb
iret
das
pop
stc
data16
inc
adc
cmp
jne
mov
loope
mov
pop
pop
pop
leave
ret
mov
in
sbb
fs
mov
xchg
adc
push
push
imul
jl
inc
mov
push
push
insl
test
xor
clc
add
pop
jnp
in
push
sbb
js
push
lock
data16
push
pop
insb
pop
push
int3
insl
jl
mov
adc
push
stos
mov
arpl
lock
cmp
je
push
adc
or
adc
clc
cmp
adc
push
push
sub
push
js
jnp
into
mov
push
push
or
movsl
sbb
jecxz
cmp
ss
in
sbb
pop
ret
dec
mov
mov
sbb
pop
fildl
sub
lods
fldenv
pop
jo
push
push
scas
inc
adc
negb
jo
push
adcl
mov
insl
fs
inc
test
mov
cli
daa
adc
push
dec
and
xchg
or
add
sbb
cmpsb
mov
pushl
dec
inc
lods
mov
mov
add
pop
mov
or
out
and
push
testb
je
adc
call
push
loop
addr16
mov
push
aad
and
push
je
xchg
mov
cmp
out
jnp
adc
aas
xchg
inc
cs
sbb
std
pop
jmp
or
cmp
mov
icebp
push
lds
or
lods
loope
bound
call
test
psrld
mov
inc
inc
dec
dec
test
jne
pop
fldenv
push
pop
jmp
lds
shl
or
push
jecxz
insl
mov
add
cmp
xor
sti
decl
test
add
and
aad
pop
clc
inc
and
inc
jnp
sbb
add
jl
jae
mov
adc
daa
push
aaa
in
int3
fistpll
sub
jg
push
bound
or
push
in
les
out
inc
jl
sbb
jbe
push
in
inc
mov
mov
push
pop
or
cmp
cwtl
pop
and
in
or
sub
divl
loope
pop
pop
shlb
add
std
add
leave
sbb
div
fucomp
or
je
repz
lea
inc
jnp
movsl
loopne
add
lea
out
or
mov
loopne
adc
cmp
add
add
xor
test
adc
fidivrs
or
sbb
shl
mov
xchg
fsubr
pop
and
ss
xor
lret
pushf
imul
mov
xlat
inc
xor
mov
std
adc
adc
mov
and
mov
or
pop
pop
negb
cld
pop
jmp
lods
jge
jmp
rcrb
or
imul
xchg
in
xchg
outsb
ljmp
pushl
xchg
imul
pop
imul
sub
jmpw
popw
or
jne
int
jg
insb
inc
or
test
jb
aam
ja
pop
mov
fistpl
in
push
test
add
sbb
xchg
mov
xchg
dec
inc
repz
loop
sbb
je
push
rcrl
data16
adc
pop
imull
shlb
xchg
or
xchg
sarl
sbb
movsb
icebp
les
std
stos
push
std
enter
mov
cld
std
dec
push
mov
iret
outsb
int
aas
cmp
push
pop
sar
fucom
data16
lods
jb
gs
cltd
imul
fldenv
out
imul
iret
push
out
imul
imul
imul
mov
data16
stc
cwtl
mov
lods
out
call
mov
jns
pop
jnp
sub
je
push
push
fwait
cmp
mov
or
mov
xchg
xor
xchg
and
add
and
mov
inc
imul
fs
in
rorl
outsb
ds
je
jae
in
les
pop
sti
bound
push
cmp
pop
xor
and
insb
movsb
cmp
outsb
and
cmp
int
mov
subb
or
fldenv
data16
call
mov
lods
and
jnp
jbe
xchg
push
or
cmp
outsw
dec
repz
or
jmp
addr16
pusha
jbe
cmp
ds
outsl
mov
fsubr
sub
outsl
sar
sahf
sbb
cmp
pop
mov
cmp
jl
call
jbe
adc
push
daa
cmp
sbb
add
imul
insl
nop
gs
out
and
cmp
fistpll
pop
lock
cmp
cmp
test
icebp
stos
idivl
sbb
fnstcw
mov
sbb
xor
lretw
adc
ret
fwait
or
in
insl
enter
enter
cmp
lock
cmpsb
dec
dec
sti
out
mov
push
ret
ljmp
frstor
or
in
lea
vhsubps
loop
dec
push
jb
sub
and
jae
sub
mov
or
loope
xchg
mov
addl
jbe
push
or
and
and
push
mov
add
and
ret
dec
push
dec
inc
dec
dec
inc
pop
ja
stc
add
dec
inc
dec
xchg
inc
push
dec
addb
fisubrl
inc
outsl
and
popa
or
lock
sbb
andl
push
add
add
nop
add
push
pop
ss
mov
inc
call
push
add
dec
ljmp
adc
js
outsl
addr16
insl
and
outsb
outsb
lock
in
ljmp
and
and
outsb
and
inc
dec
push
and
fs
clts
and
dec
inc
or
cld
aaa
outsb
mov
testl
hlt
pop
mov
or
jbe
dec
push
jnp
inc
xchg
push
push
or
sub
pop
daa
sbb
xchg
out
pop
sbb
inc
or
dec
push
imul
mov
inc
dec
add
sbb
dec
adc
int3
pop
loopne
push
and
add
adc
mov
in
dec
clc
pop
add
add
or
ror
xchg
add
xor
pop
gs
out
flds
xorb
in
xchg
mov
add
sub
out
push
enter
cmp
bound
arpl
ror
sbb
shrb
popa
je
sbb
ss
xchg
mov
loopne
inc
push
push
pop
sar
repz
insb
mov
shrb
jae
xor
mov
or
pusha
add
data16
xor
sbb
gs
outsl
arpl
and
pop
dec
dec
mov
or
inc
dec
imul
imul
int
out
daa
cs
add
out
mov
insl
lcall
and
flds
mov
shl
lock
sub
dec
shll
stos
mov
enter
mov
imul
ds
cmpsb
imul
imul
dec
shrl
sub
push
shll
pushf
lods
mov
into
fsubrl
add
lcall
out
scas
sahf
insl
lcall
scas
out
mov
int
flds
clc
or
and
lcall
push
sbb
jmp
sub
add
xor
cmpsb
imul
cmpsb
imul
mov
subl
jnp
mov
insb
pop
inc
mov
xchg
sahf
xor
movsb
fs
mov
push
je
push
mov
fiadds
mov
pushf
test
xlat
mov
adcl
mov
je
fldcw
dec
sub
notl
fs
sub
dec
je
jo
jne
fdivrl
fstpt
outsw
inc
aaa
dec
jo
outsb
push
jb
adc
adc
dec
add
jl
mov
add
add
add
or
fcmovnu
fwait
lea
sbb
dec
sarl
pusha
add
or
pop
test
enter
inc
dec
and
and
fistps
test
add
sbb
mov
ret
shlb
ja
aas
and
aas
add
pop
rcr
or
test
sub
mov
mov
gs
mov
and
inc
inc
sbb
fistpl
push
enter
lcall
jae
mov
cmpsb
pop
das
xor
enter
add
and
pop
test
pop
in
xor
ud2
push
add
out
mov
outsl
add
adc
je
xlat
jne
stc
jne
jb
gs
sbb
pop
add
jne
push
sub
add
mov
push
inc
jb
push
and
ja
or
push
mov
jae
pop
or
and
addr16
xor
push
sbb
in
inc
xor
xchg
jg
and
jp
pop
cs
test
test
mov
les
dec
popa
insl
xchg
push
dec
inc
push
push
inc
push
inc
dec
adc
pop
call
je
imul
dec
push
inc
jne
jb
call
push
sub
dec
fwait
ja
jb
jge
std
testl
and
pusha
pop
or
dec
ja
adc
xor
push
stos
or
push
neg
xor
cli
repz
push
push
push
inc
xor
arpl
push
push
mov
es
jo
dec
testb
jb,pn
jb
arpl
movsb
ljmp
lret
add
push
push
push
imul
dec
push
push
ja
into
divl
push
mov
inc
inc
xor
insl
push
dec
aad
divl
cli
imul
btc
push
ljmp
lock
jne
adc
jo
gs
pop
jne
jno
addr16
dec
jmp
test
and
push
push
mov
jns
fs
aas
popa
cmp
jne
imul
cld
dec
push
or
xchg
mov
push
into
pop
xchg
xor
fsubl
jae
and
mov
stos
pop
pop
and
lahf
pop
jo
fs
aad
cmc
cwtl
fsubr
xchg
pop
cmpb
andb
or
pop
sub
mov
xbegin
std
jg
lock
mov
mov
xlat
rol
cli
mov
leave
mov
daa
dec
cmpsb
sbb
ret
mov
mov
mov
mov
scas
aad
and
daa
mov
out
xor
rcl
mov
mov
cld
adc
into
fidivl
bound
cmpsb
mov
and
std
xlat
jecxz
shll
mov
mov
fisttpl
jg
leave
enter
in
xlat
ffreep
in
mov
lock
or
sti
ret
mov
mov
mov
lock
push
jg
aad
rcl
mov
loope
in
lret
cli
fadd
leave
mov
iret
ret
cmp
mov
out
jecxz
lahf
fcmovne
enter
mov
aad
mov
leave
ffreep
lods
shr
insl
outsl
and
mov
loop
movl
mov
fistpll
cmp
jecxz
lods
pop
mov
mov
mov
mov
loopne
loope
into
loop
rol
xlat
adc
test
decb
scas
ror
fistpll
dec
fsubrp
add
cmp
shrl
std
rcrb
ret
jnp
jg
cmpsl
mov
out
cmpsl
shr
les
inc
ffreep
fadd
iret
mov
fxch
lret
mov
into
test
test
inc
addr16
adc
lds
out
fcmovnu
push
rcl
mov
lret
mov
mov
out
mov
je
mov
mov
or
mov
ret
das
push
das
insb
js
bound
call
cs
pop
pop
dec
sbb
jo
dec
add
pop
lcall
sub
test
push
cld
pop
cmc
fs
xchg
xchg
mov
nop
add
dec
dec
dec
inc
fbstp
fistpl
sbb
sub
add
loopne
pop
push
dec
in
inc
scas
inc
xchg
in
xchg
pop
mov
pop
fistpl
pop
jb
data16
adc
xchg
xchg
shrb
pop
sbb
pushf
fstpl
fistpl
out
dec
push
push
adc
mov
and
fs
mov
in
or
mov
xor
mov
stos
or
adc
lea
pop
or
or
fstl
call
cmp
and
push
push
sub
adc
xor
orl
imul
ret
mov
rorb
fnstenv
xor
and
andl
stos
push
push
xchg
test
fcomps
push
mov
add
mov
push
push
push
call
sub
dec
jmp
sub
mov
clc
jbe
fcmovnb
push
or
or
movb
sti
push
push
scas
aaa
inc
inc
call
scas
mov
imul
mov
fldt
test
cwtl
push
call
xor
push
or
sbbl
scas
and
add
and
dec
ret
outsl
mov
or
mov
lock
pushf
mov
rcrb
adc
mov
andb
mov
mov
or
push
aas
mov
cmp
pop
jl
add
mov
xchg
cmp
xor
adc
push
nop
cld
inc
xor
adc
add
dec
jle
aas
les
add
enter
popa
add
outsb
int3
adc
lock
dec
cmp
leave
and
mov
add
sarb
xor
adc
loopne
sbb
or
push
push
push
and
fsubl
and
movsb
xor
adc
adc
mov
xchg
xchg
push
and
pop
std
in
mov
cmpl
dec
cmp
lret
test
jne
inc
push
xchg
push
xor
adc
add
push
je
sbb
sbb
add
mov
adc
inc
jne
or
inc
leave
xor
cmp
outsb
sti
test
dec
pop
mov
je
and
divl
fidivs
xlat
jg
je
cmp
ja
pushf
add
or
jae
in
call
repnz
loopne
push
or
or
inc
jmp
cmp
jb
test
sub
decl
jnp
lahf
lcall
or
pushf
ficoml
lret
add
sub
or
push
push
push
mov
mov
xor
add
add
push
push
push
sbb
lret
adc
fstl
push
push
push
and
pop
mov
sbbl
dec
ret
fnstcw
dec
fbstp
sbb
orb
push
ss
fidivrl
test
fstpt
mov
lock
add
mulb
movsl
mov
movsb
mov
inc
mov
push
jle
mov
arpl
movsb
repz
sbbb
ss
sti
or
int3
or
dec
dec
daa
ss
enter
movsb
pop
dec
pop
mov
decb
rolb
or
sarl
mov
cli
in
mov
add
notb
sbb
flds
pop
or
add
jmp
add
lds
nop
sbb
cltd
insb
jmp
loope
add
push
pminub
dec
clc
call
sub
mov
jbe
mov
inc
in
mov
or
cmp
jle
lock
cltd
out
jbe
loop
and
push
sbb
mov
call
adc
sbb
insl
add
mov
inc
inc
inc
jmp
hlt
mov
cmp
pop
jb
vmulss
cmp
jne
pusha
xor
xor
add
mov
xchg
sarl
sahf
int
pop
add
adc
andw
mov
dec
mov
subl
std
ja
push
dec
cld
pop
jb
fsubs
or
pop
outsl
cmp
imul
fadds
lods
enter
rclb
fxch
divb
test
mov
std
xchg
out
mov
lea
cmp
pop
pop
xchg
clc
and
pushf
sti
mulb
mov
repz
cltd
push
inc
push
pop
cld
call
outsb
mov
fucomip
gs
addr16
sti
lsl
push
jo
loope
call
sar
mov
pop
or
movl
push
jb
in
or
clc
out
or
lahf
xor
and
xor
adc
xor
adc
adc
repnz
test
add
xorb
adc
and
xor
adc
stc
and
js
add
je
add
addb
and
xor
push
enter
enter
and
xor
adc
pop
cwtl
fwait
dec
push
rcrl
cmp
xor
aas
pushf
dec
push
mov
test
inc
adc
sbb
mov
pushf
mov
jne
push
pop
jmp
adc
scas
into
cmp
loopne
shlb
cmpsl
jg
loopne
outsl
sbb
nopl
nop
mov
rorl
clc
inc
add
adc
ret
imul
ja
lock
ret
push
pop
add
pop
jae
push
and
enter
push
lret
fcoms
add
hlt
pop
inc
dec
ret
add
add
pushf
fdivp
das
sbb
jbe
add
ret
add
lahf
xor
sbb
je
cmp
je
and
sti
xor
push
push
xchg
xor
aaa
push
jmp
adc
testb
les
xor
mov
call
or
xchg
lret
sub
cltd
pop
inc
idiv
adc
idiv
pop
test
sbb
jmp
andb
mov
jmp
xor
mov
cs
mov
leave
bsf
add
mov
and
add
cs
and
adc
mov
fcoml
add
dec
and
push
cs
lock
adc
fstpt
cwtl
pop
das
pop
cs
aaa
in
inc
mov
popf
cs
mov
and
cli
or
add
fs
ja
xor
mov
cmpb
shlb
pop
movb
inc
jne
icebp
in
jmp
push
icebp
mov
imul
add
andl
lahf
outsb
sti
fists
adc
ljmp
or
imul
fcmovne
popa
adc
and
push
add
pusha
loope
adc
inc
jge
pop
mov
decb
loopne
rol
lea
loopne
cmp
jae
incl
add
mov
shr
add
stos
leave
pop
adc
push
mov
sbb
jecxz
imul
inc
mov
mov
jne
adc
sbb
repnz
jo
mov
add
loop
or
adc
or
push
add
jne
xor
or
in
push
negb
jmp
sub
call
inc
cmpsb
bound
jg
jbe
incl
cwtl
cmp
xlat
and
push
jl
mov
adc
repz
add
lea
outsl
aam
push
scas
shr
mov
add
fucomi
push
cli
not
and
testl
lea
test
push
outsb
jnp
mov
aam
or
outsl
mov
inc
fisubs
fimull
add
lea
ljmp
xadd
adc
pop
inc
sub
mov
and
not
out
pop
sub
inc
fiadds
psllq
std
xor
into
mov
shr
or
add
dec
jmp
fcmovbe
daa
pop
jg
push
lea
mov
jl
sbb
cli
mov
jg
imul
hlt
mov
not
and
sub
in
sub
adc
movb
lret
fidivl
add
loope
sbb
pop
popa
xlat
or
mov
xchg
adc
sbb
inc
xor
jo
add
or
imul
sbbb
add
test
sbb
add
out
in
mov
cli
sbb
ss
les
repz
fcomp
cwtl
subb
xor
fiadds
add
rcr
into
das
insb
iret
das
pusha
adc
pop
scas
testl
sti
mov
pop
les
lcall
add
pop
push
loop
negb
add
sub
jns
inc
nop
fmuls
data16
pop
out
test
mov
les
adc
xor
mov
rorl
fcoml
fmuls
out
stos
lods
es
add
fnsave
fidivrs
pop
into
outsl
lods
pop
aaa
das
push
mov
cmpsb
pop
mov
add
mov
cmp
xchg
sub
or
mov
outsl
in
popa
adc
add
or
mov
jne
push
in
ret
and
and
aad
ret
mov
and
sbb
add
shlb
clc
jg
sub
dec
cmp
inc
rclb
lods
xor
add
push
and
clc
pop
mov
repz
pop
pop
es
adc
lods
and
movsb
push
pop
mov
mov
aad
shlb
lock
outsl
mov
mov
insl
mov
adc
cmp
sbb
loop
xlat
lods
mov
mov
adc
inc
add
rorb
fbstp
pop
and
out
dec
lods
clc
cmp
mov
fnstenv
mov
enter
jg
or
movsl
xchg
and
stos
mov
mov
xor
shl
int
and
sbb
loopne
ret
cld
xchg
mov
inc
enter
aaa
or
mov
pop
jmp
push
fbstp
xor
sbb
mov
inc
pushw
jp
gs
fwait
aaa
or
call
inc
loop
insl
adc
or
xlat
fdivs
faddl
sbb
xorb
cld
xor
enter
in
in
stos
daa
sub
aad
flds
outsl
adc
cmp
xchg
dec
fists
les
mov
adc
js
jge
or
xor
test
mov
sbb
test
xor
mov
call
divb
adc
xor
cs
js
lds
popa
popf
insl
adc
inc
sti
xor
mov
jns
jno
repnz
or
in
mov
sub
divl
mov
inc
inc
ljmp
xchg
sbb
xchg
mov
push
adc
cltd
jb
xchg
mov
outsb
repz
pusha
mov
ffreep
dec
mov
cli
xor
rcrb
mov
xchg
mov
jae
or
mov
repnz
xor
jle
sub
jae
mov
int
in
testl
imul
fdivl
dec
fisubs
fidivl
sbb
cmp
test
xchg
jae
ret
out
sub
xor
jmp
add
lret
fcmove
or
push
aas
sbb
cmp
xchg
scas
lock
aam
cltd
js
jbe
bnd
dec
les
in
mov
mov
ss
in
clc
jl
pop
mov
xchg
in
je
dec
pushl
idivb
aam
gs
lods
les
pop
mov
ljmp
mov
mov
stos
shrb
mov
push
or
in
sbb
repnz
ret
addb
push
xchg
ljmp
inc
push
adc
leave
or
mov
jns
and
out
push
jb
hlt
cmp
pop
mov
or
popf
mov
mov
ret
pop
pop
gs
fmul
repnz
sbb
rcrl
mov
or
push
or
arpl
fbstp
jno
dec
fcmovne
repnz
jge,pt
out
call
unpckhps
sbb
adc
rcrl
test
sub
jmp
dec
xor
lret
insl
faddp
call
outsl
jecxz
jp
pop
add
int
dec
xchg
fsub
xchg
fistpl
loopne
sub
jecxz
jp
negb
sbb
ljmp
add
ja
mov
out
jmp
mov
lds
jp
ficompl
ja
mov
xor
out
loopne
mov
sahf
aaa
lret
xor
aam
rcl
sub
movq
ret
repz
rclb
jno
lds
xor
jmp
hlt
xchg
out
xlat
pop
add
pop
movsb
mov
xor
or
or
pop
mov
inc
js
cmp
or
push
xor
cmp
outsl
cmc
pop
cmp
jl
js
sub
push
push
push
out
ljmp
nop
sub
test
cmp
fs
xlat
adc
test
hlt
pop
fisubrl
jle
sbb
push
lahf
inc
pop
inc
test
nop
iret
pop
pop
mov
mov
into
ljmp
add
outsb
stc
pop
sbb
cmp
jne
xchg
mov
mov
loopne
push
push
pop
pushf
push
xor
mov
fs
xchg
pop
pop
repz
cmp
push
cld
call
inc
or
ljmp
cli
mov
or
dec
cmp
out
or
testb
push
fmull
call
mov
pop
adc
stc
add
pop
jnp
gs
outsb
int
push
loopne
pop
int3
rolb
aam
xchg
jae
fsubr
dec
cmp
xchg
jmp
mov
in
subb
aad
cltd
jl
push
or
out
flds
in
gs
das
lock
jns
lahf
push
jo
hlt
gs
imul
insb
sbb
pushf
mov
pushf
or
mov
cs
test
js
rep
call
ficoms
jnp
jbe
pusha
mov
int
mov
lods
mov
fadds
lods
outsb
les
cwtl
into
push
loope
mov
fmull
divl
inc
push
pop
pop
push
pop
dec
xor
roll
call
push
in
dec
mov
push
push
push
ds
push
push
call
add
dec
out
push
out
push
pop
jge
and
mov
xchg
sub
add
lds
inc
add
out
xor
scas
push
cs
mov
xor
push
sbb
inc
adc
mov
add
and
or
pop
mov
adc
push
and
mov
hlt
call
sbb
mov
cmp
push
xor
adc
in
cmpb
stc
in
clc
out
sbb
cmp
je
add
xor
scas
xor
jmp
sub
shrl
or
xor
or
test
push
movhps
daa
addl
sbb
push
dec
call
inc
aaa
and
or
sahf
push
xchg
or
push
sti
adc
xrelease
jmp
sbb
cmp
ja
lcall
je
dec
dec
cmpw
jne
pop
push
arpl
inc
add
cmp
cmp
shrl
mov
push
pop
sub
jmp
pop
andps
je
mov
push
out
xchg
lret
mov
cwtl
cmp
inc
addl
mov
mov
or
insl
in
xchg
push
je
xchg
cmp
in
dec
or
inc
add
je
cmp
jne
push
and
inc
in
insb
punpckhbw
push
or
or
lret
or
rcr
in
and
jbe
ja
loopne
enter
incl
add
pop
daa
testb
fcoml
xchg
cmp
das
sub
cs
cmp
hlt
push
xchg
or
pusha
cmp
aad
pop
mov
lds
xor
orl
fbld
fldt
arpl
mov
mov
dec
sbb
dec
fs
sbb
push
nop
or
insl
cwtl
dec
fsubp
add
sbb
cs
and
mov
mov
mov
mov
in
in
daa
mov
imul
sub
xchg
xor
sub
dec
mov
mov
adc
mov
sti
sub
mov
lods
std
cmp
inc
add
xor
mov
lods
fmul
call
cmp
imulb
and
pushf
insb
iret
std
jbe
mov
inc
push
enter
in
decl
int3
cmp
mov
ret
jne
cmpl
testb
and
ss
into
cmp
mov
push
pop
dec
les
jae
push
sub
pop
mov
push
cld
out
loopne
in
sbb
pop
push
pop
mull
mov
jmp
call
mov
cmpb
lahf
pop
dec
dec
je
jmp
in
push
es
mov
push
insb
sarb
jmp
dec
mov
aaa
push
inc
push
cmp
ss
mov
sti
dec
mov
mov
push
pop
call
jge
jnp
fimull
jo
push
lret
dec
sbb
jbe
sub
jg
cs
lret
in
insl
mov
mov
mov
mov
in
mov
push
mov
mov
mov
xchg
lret
mov
mov
insb
push
jmp
fs
scas
gs
lret
mov
jo
outsl
jb
mov
lret
gs
and
fcmovu
lcall
mov
test
loop
pop
mov
gs
pop
in
push
out
dec
out
jmp
jmp
insl
cmpsb
imul
mov
je
rol
xor
xor
rol
add
xor
xor
mov
leave
lret
pop
mov
mov
cmp
hlt
xchg
push
xchg
xchg
mov
push
cwtl
cltd
lcall
imul
cld
mov
mov
mov
mov
fldt
cmpsb
xor
test
push
test
lcall
stc
jo
pop
call
lea
push
and
pcmpeqb
rolb
sub
pop
pushf
add
jl
aaa
fcoml
dec
mov
pop
aaa
inc
push
in
in
pop
je
cs
and
xchg
sar
xchg
insb
xchg
dec
ds
ret
dec
mov
scas
or
pop
insb
dec
rolb
mov
arpl
cmpsl
test
testl
out
xchg
ljmp
sub
sar
xor
dec
inc
jbe
inc
jge
sti
fs
cmp
adc
push
mov
cs
into
imul
jbe
shl
pushf
pop
cli
inc
ret
mov
test
mov
inc
sub
nop
jmp
aaa
xor
dec
cwtl
adc
movsl
jmp
sbb
inc
fmuls
ret
jmp
adc
push
mov
nop
repnz
mov
push
add
sbb
movsl
popl
xor
inc
inc
stc
push
repz
cld
cmp
sub
sub
std
cmpsl
mov
mov
fdivl
fsubrs
dec
sbb
add
repz
xor
mov
pop
mov
or
cld
push
cld
mov
inc
testl
pop
testb
and
sbb
sahf
mov
aam
out
cmp
or
or
out
sbb
inc
adc
push
xchg
int
adc
sub
sbb
das
pusha
push
mov
data16
sbb
mov
lds
repnz
xlat
inc
adc
test
das
jbe
inc
adc
mov
data16
sbb
sarb
and
std
out
pop
lods
inc
cmp
jl
jns
mov
sbb
xchg
jge
data16
lea
adc
outsl
add
faddp
add
add
inc
test
fnstsw
fcomp
mov
or
in
outsl
loopne
roll
push
sahf
insl
add
push
jl
in
jecxz
ss
iret
inc
aam
ret
out
adc
cmp
mov
outsb
push
xchg
cmp
cld
pop
xor
push
cld
jbe
mov
test
jnp
jnp
cmpb
or
andl
add
clc
cs
pushf
xor
lods
push
jge
clc
in
ja
xlat
adc
lock
adc
push
sbb
xchg
add
sub
jo
push
adc
adc
cmp
pand
and
push
xlat
or
shll
jmp
mov
scas
dec
xchg
fs
loope
adc
mov
scas
cmp
andl
mov
push
mov
inc
xor
ss
or
pop
outsb
adc
lods
jge
mov
ret
cmp
adc
movsb
mov
cmc
cld
cld
lret
mov
add
imul
insb
insb
popa
push
in
xor
dec
push
imul
outsb
ja
fildl
fstpl
jae
fbstp
xor
xchg
sbb
cli
mov
cmpsb
imul
decb
xor
mov
mov
mov
mov
mov
imul
xor
fs
pop
xor
in
mov
pop
pop
lret
mov
lret
dec
popa
js
push
sub
xor
pop
inc
add
icebp
repnz
xor
xor
mov
fsubl
sahf
jecxz
cwtl
mov
cltd
pop
and
sbb
pop
push
sbb
xchg
cld
mov
cmp
add
push
pop
push
hlt
sbb
dec
mov
in
insb
mov
sbb
call
orb
notl
lahf
loop
andb
xchg
or
icebp
loope
shll
je
imul
scas
cmp
insl
andb
and
fnstenv
popf
test
call
push
aam
test
mov
clc
imull
cmpsl
inc
dec
xchg
int
push
loopne
cwtl
lods
fs
out
test
add
add
xchg
int
mov
notl
xor
add
daa
xor
push
out
outsl
or
mov
or
add
call
dec
das
int3
inc
ret
fwait
aam
mov
call
and
lds
subl
jg
xlat
or
sub
rcrl
in
mov
dec
xchg
repz
inc
adc
outsb
in
in
adc
stos
lret
out
or
cs
out
push
pop
pop
mov
mov
adc
dec
in
push
or
and
jne
xor
and
ja
dec
jo
and
xor
test
hlt
push
mov
sbb
mov
lock
xchg
pop
lea
push
movsl
movsb
cmp
hlt
fistpl
and
sub
ds
mov
cmpb
in
fiaddl
add
pop
mov
imul
push
pop
push
out
mov
cmp
push
push
test
inc
movzbl
or
dec
clc
div
cmc
pop
xlat
into
and
cmp
adc
andb
push
or
loope
idiv
and
inc
mov
xchg
out
add
add
gs
mov
mov
outsb
dec
jo
or
insb
lock
popa
pop
pop
cs
repnz
divb
insb
repz
gs
push
shll
je
dec
shll
outsb
test
pusha
xor
ret
ret
lcall
jne
add
popf
adc
cwtl
xchg
xchg
cmp
enter
jae
icebp
or
outsl
mov
lods
fs
pop
fmull
dec
inc
xchg
xchg
xchg
xchg
cmp
mov
arpl
or
adc
call
dec
aas
hlt
xchg
ss
inc
cmp
add
inc
idivl
sub
lods
movsl
sbb
or
inc
in
sub
es
in
jl
stos
dec
jno
sub
outsb
cmp
sahf
test
leave
adc
imul
jle
push
cwtl
jnp
stos
push
aaa
push
cmp
cmp
cwtl
das
dec
fsts
fs
sub
sbb
rcll
cld
pop
cmpsl
mov
xchg
lods
xchg
xchg
dec
mov
arpl
imul
or
mov
adcl
out
je
call
pop
pop
xchg
jo
test
mov
push
mov
js
jge
inc
mov
lods
test
cmp
cmp
mov
negl
push
push
enter
nop
jp
pushf
cmp
xchg
adc
aaa
mov
fistl
adc
ds
adc
cs
push
repz
xchg
sbb
daa
lods
pop
mov
mov
imulb
and
push
es
mov
mov
mov
jle
push
cmp
mov
inc
jecxz
dec
or
in
mov
sub
xchg
fisttpll
pop
nop
push
push
lods
ds
cmp
adc
mov
fdiv
mov
iret
fcomps
in
sbb
push
sub
push
mov
lret
mov
mov
push
in
jo
mov
and
fdiv
mov
adc
adc
jmp
add
adc
push
push
insb
stc
push
jne
sbb
add
aad
jg
jl
mov
jecxz
in
pusha
xchg
in
push
loope
cmp
call
inc
fdiv
sbb
mov
mov
es
mov
and
std
int
pop
pusha
mov
xchg
std
xchg
sti
aas
and
movaps
xchg
add
js
out
cmpsb
ss
mov
push
mov
or
add
lods
jg
mov
sbb
out
jge
push
daa
add
lcall
cmc
sbb
xor
sbb
insl
sbb
or
scas
test
ljmp
bound
jae
cld
sub
dec
mov
popa
cmp
jae
shll
lahf
mov
mov
cmpsb
jo
test
gs
xchg
and
cmp
gs
es
fsubs
jae
insb
cmp
cmpsb
imul
cmpsb
imul
push
fs
das
enter
xchg
outsb
leave
lret
int
lcall
rcl
shrb
adc
or
pop
xlat
aaa
je
imul
xor
shrl
and
dec
or
cmp
and
aam
dec
sarl
jo
and
shlb
jae
or
jae
inc
inc
cmp
and
mov
mov
push
mov
mov
sbb
pusha
jo
smsw
ret
xor
or
std
xor
insb
sti
push
push
fucomip
int
push
sub
xor
icebp
jb
call
mov
push
push
rolb
cmp
cmp
jl
lea
xor
mov
js
jo
je
sub
push
dec
pop
into
leave
lods
inc
je
push
std
jo
iret
in
cmc
dec
hlt
psubusb
inc
add
jne
cld
test
or
popa
sbb
imul
cmp
mov
out
aam
lods
adc
sbb
push
fsubrl
fcoml
fnstenv
jae
dec
cmpsl
mov
or
inc
icebp
into
mov
cmc
loop
nop
add
adc
and
cmpb
xorb
adc
scas
in
shlb
inc
mov
pop
xchg
push
pushl
push
jg
cmp
jne
adc
and
sub
jmp
push
sub
mov
mov
mov
adc
sbb
and
mov
fisttpl
add
shl
ljmp
add
add
fildl
xchg
test
outsl
and
inc
add
test
hlt
fmuls
push
sub
and
into
imul
and
jns
inc
clc
je
mov
xor
push
call
xor
xor
or
rclb
in
mov
adc
lcall
push
pop
es
les
bnd
ret
adc
jmp
push
fmul
test
and
mov
dec
xor
repnz
shlb
and
or
inc
ficoml
sbb
rol
add
jne
in
aam
and
cmpsl
or
sqrtps
pop
insb
mov
insb
pop
pop
pushf
push
cmp
in
repnz
fists
cld
cmp
hlt
push
push
into
mov
fs
pusha
std
std
lret
rcrl
adc
divb
into
mov
mov
mov
dec
je
call
lea
orl
xchg
or
mov
leave
mov
int
shrl
gs
sbb
mov
pop
and
jne
cmp
or
cmc
lcall
push
rorb
movl
xlat
xor
sbb
arpl
push
cwtl
out
ss
int
es
sti
adc
sbb
stos
add
push
inc
push
test
jmp
mov
daa
loopne
mov
inc
das
enter
mov
stc
or
push
push
loop
mov
adc
add
inc
cmp
adc
sbb
pop
add
aad
dec
or
pop
pop
add
xchg
mov
dec
shr
cmp
push
push
push
fdivrs
fidivs
push
sbb
sbb
dec
jle
aad
adc
push
ja
loopne
out
push
mov
je
adc
sbb
push
rclb
push
xchg
mov
pavgw
mov
insb
test
push
aad
add
decl
insl
add
mov
imull
xor
pop
test
push
nopl
cmc
mov
xchg
nop
push
push
cmp
adc
xlat
imul
les
insl
pop
push
add
sub
gs
xchg
int3
rcl
fcomp
in
stos
cs
or
lret
jbe
add
sub
and
dec
aad
adc
mov
fcomi
sbb
push
inc
and
mov
push
stos
inc
scas
sbb
dec
inc
cwtl
call
and
aam
add
mov
jae
xor
aaa
negb
dec
xchg
push
push
cld
xchg
test
rcrl
inc
dec
pop
nop
pop
adc
clc
pop
jnp
mov
pop
xor
cltd
mov
idiv
jle
and
cmp
imul
scas
and
in
xor
add
icebp
pop
out
inc
and
xor
mov
jle
mov
ret
add
push
and
inc
or
fiaddl
cli
dec
test
js
hlt
push
xor
push
gs
xchg
add
dec
xchg
gs
xchg
dec
inc
push
cs
sub
push
pop
insb
lea
lret
mov
pushf
jo
insb
jne
xor
mov
cs
insb
jmp
call
imul
imul
cmpsb
imul
inc
pop
std
lods
jp
je
dec
shll
jbe
jo
outsb
xor
shll
gs
gs
in
subb
inc
inc
aam
mov
mov
ret
mov
es
imul
mov
xchg
inc
push
cwtl
js
inc
lcall
je
xor
fnstsw
cmp
inc
pop
shll
out
out
shll
push
mov
mov
mov
scas
imul
mov
mov
imul
inc
mov
shlb
shlb
mov
xor
xchg
les
hlt
mov
lea
xor
fdivr
mov
push
cmp
mov
add
pushf
adc
lret
std
cld
sbbl
bound
jmp
ret
jo
mov
inc
adc
sbb
add
mov
into
inc
cmp
divb
push
sub
pop
mov
je
jl
mov
loope
pop
xchg
gs
push
in
stos
jp
xchg
je
mov
add
sbb
sub
jae
loop
je
negl
pusha
lock
sub
loopne
ss
or
add
scas
mov
outsl
test
jne
cmp
orl
ds
jl
push
add
mov
jg
cli
test
sub
or
subl
shll
or
xchg
sbb
dec
aad
sub
add
sub
orl
or
push
lock
call
or
adc
or
shl
or
mov
cld
push
push
fstp
mov
add
cmp
jb
inc
incl
inc
mov
add
push
inc
lret
lea
add
hlt
and
and
lret
mov
bound
xor
mov
and
fs
out
insb
jb
arpl
in
or
cli
xchg
add
jne
es
out
inc
sar
lcall
fildl
add
or
jecxz
je
out
rcrb
and
or
mov
into
cmp
mov
jb
fs
aad
adc
inc
mov
cmp
aaa
inc
mov
and
popa
jmp
xor
out
inc
enterw
sub
pusha
addb
inc
sub
std
std
jecxz
jbe
xor
mov
clc
mov
jne
jne
jb
and
ret
push
push
cmp
cmp
and
loopne
inc
loope
cmpl
call
sub
inc
bound
sub
pusha
aam
and
adc
loopne
aas
popa
nop
cmpsb
andl
cmpsb
imul
push
clc
es
imul
imul
pusha
je
stos
mul
andb
scas
cmp
add
cmp
jns
std
leave
incb
mov
cmp
jae
inc
lcall
xchg
gs
subb
addr16
xchg
gs
jo
jae
jne
fsubs
mov
and
in
bound
inc
sbb
std
add
adc
in
movsb
add
pop
add
pop
dec
push
stos
testb
neg
sbb
add
add
cmp
and
xchg
lcall
lock
orl
inc
int
sub
and
pop
aas
rcll
pop
insb
or
aas
push
inc
js
and
push
push
push
lcall
je
imul
add
add
pusha
xchg
xor
sar
rcrb
inc
mov
insl
adc
cli
je
cmpl
decb
or
sbb
clc
das
ja
xchg
xor
push
adc
inc
cmp
divb
lea
jg
stos
stos
imul
sub
pop
mov
test
fwait
push
adc
gs
pop
xchg
and
orb
pop
add
cld
add
push
gs
add
bound
xor
repz
inc
cmp
jge
mov
hlt
pop
movups
pushf
out
fwait
mov
loopne
sahf
aaa
xor
pop
loope
and
mov
cmp
and
pop
sarb
adc
push
push
jl
movb
in
adc
adc
jne
mov
pop
lods
inc
rorl
xchg
xchg
inc
xor
sbb
fdivrl
and
sub
and
mov
cmc
cld
mov
adc
aaa
test
or
add
fidivs
adc
repnz
lret
es
call
and
clc
cmp
test
or
std
andl
and
xchg
gs
popa
arpl
pop
xchg
imul
xchg
gs
gs
imul
xchg
outsb
gs
lods
scas
fstl
call
fwait
bound
mov
imul
mov
or
xor
mov
jo
ret
dec
push
push
int3
lret
mov
add
sub
mov
imul
lret
mov
jae
jb
mov
jne
fwait
adc
jle
push
mov
ret
lds
jb
jp
ss
lcall
xchg
mov
add
dec
jne
or
add
mov
jmp
push
shr
sbb
cmp
cwtl
xchg
dec
adc
inc
xor
leave
pushf
push
push
sbb
cmp
call
push
aaa
icebp
negl
push
xor
jp
lcall
add
sarb
rclb
and
adc
jmp
add
leave
mov
push
xorl
arpl
cmp
addr16
jo
outsl
pop
mov
andl
jne
clc
adc
mov
sbb
mov
adcl
xchg
xorl
sub
clc
lods
inc
in
incb
imul
cltd
ss
sbb
lcall
je
jb
mov
imul
xchg
movsl
mov
je
ds
aaa
pop
jb
in
fs
cs
lea
je
xchg
fdivs
out
jns
out
sbb
pop
and
cld
push
inc
mov
lock
and
je
mov
fs
pop
and
push
xor
and
cld
xor
push
mov
imul
sbb
pop
inc
push
imul
insl
call
adc
sub
lods
lods
imul
std
push
movsl
je,pt
mov
add
mov
or
and
iret
test
jge
jne
push
int
je
adc
sub
adcb
sub
xor
notl
mov
jge
or
xchg
jle
fildl
cmp
jmp
sti
mov
fucomp
js
call
adc
add
shrb
imul
data16
push
push
cmp
mov
sbbl
push
or
fmul
pop
push
pop
rolb
ljmp
loopne
sahf
loope
push
sbb
movl
xlat
loopne
loope
bt
jmp
adc
and
in
and
insl
out
out
gs
addr16
add
dec
ljmp
push
in
in
out
into
xchg
out
ja
ds
pop
lcall
push
frstor
cmp
fildll
loope
xchg
and
pop
loop
jecxz
in
sub
out
in
out
adc
cmc
stos
mov
jecxz
jo
je
call
out
mov
ret
mov
or
push
pusha
lods
add
test
sarb
fdivr
test
mov
xchg
stos
inc
add
movsb
pop
pop
test
mov
adc
xor
adc
out
pop
mov
mov
fsubs
add
pop
pause
push
test
sbb
or
sbb
xchg
xchg
cmp
addb
and
pop
ds
xchg
stos
push
lds
jno
dec
jo
jno
js,pn
lods
movsl
sub
jns
push
sub
loop
mov
enter
loopne
addr16
and
sbb
mov
xor
or
iret
add
jecxz
jmp
nop
sub
cli
lahf
test
repnz
incb
dec
sbb
push
in
in
orl
xchg
dec
jo
sbb
nop
push
jbe
sti
fdivl
dec
pop
push
int3
aas
idiv
xchg
adcb
inc
push
push
mov
call
daa
xchg
or
ja
sbb
and
enter
scas
push
adc
xchg
jg
subl
or
cwtl
mov
popf
test
pop
pop
ja
xor
mov
mov
lcall
sti
adc
push
aas
cwtl
sbbl
shll
ret
adc
scas
xchg
lret
in
mull
mov
mov
sub
shr
imul
mov
xor
js
das
fstpt
sbb
mov
mov
in
aam
add
push
ss
in
lods
lea
inc
scas
and
mov
lret
in
fldenv
mov
data16
mov
mov
mov
insb
arpl
fs
rcrb
xchg
movsl
aad
int3
push
mov
mov
add
shr
int
fcmovnbe
inc
or
push
xlat
fmul
call
fwait
jae
pop
pop
insb
add
fs
fxch
or
inc
jl
jmp
xchg
out
fsubrs
ljmp
mov
mov
rol
pop
ss
mov
enter
mov
fs
add
mov
lcall
shll
out
push
and
out
dec
or
stc
push
call
sub
pushf
xlat
call
stos
imul
xchg
leave
je
call
xchg
test
inc
lahf
in
cmp
xor
pop
inc
int3
sub
loop
clc
jecxz
lret
or
mov
jne
add
repnz
lods
call
call
mov
fwait
mov
and
jecxz
in
mov
pop
xor
jge
jbe
mov
inc
xchg
cmp
add
call
mov
cwtl
adc
push
addr16
push
stc
cmp
loopne
push
arpl
push
mov
lcall
and
jne
sub
jns
jl
inc
cltd
push
push
adc
lds
icebp
jmp
stos
insl
mov
movsl
mov
add
adc
mov
test
in
aaa
je
add
insb
loopne
mov
jle
insb
inc
jne
xchg
subb
out
pusha
aad
data16
cmpl
ja
daa
fcompl
adc
in
and
mov
add
jbe
inc
or
or
sbbl
out
enter
mov
add
pop
aam
adc
jne
sub
cmp
cs
out
adc
insb
data16
jge
je
sti
ficompl
xchg
jecxz
pop
cmp
lds
push
push
mov
jmp
sub
mov
mov
lahf
mov
subl
xor
cmpsl
mov
ret
push
pusha
sbb
pop
mov
push
rcl
insb
cs
push
fiadds
idivb
adc
push
andl
outsl
fdivl
push
sti
adc
mov
mov
stos
or
adc
pop
mov
in
mov
adc
sbb
mov
loop
out
arpl
xchg
mov
xchg
dec
rorl
adc
dec
call
lock
xchg
push
inc
push
push
sub
pop
cmp
dec
and
jmp
repz
das
jno
fadds
cmc
ss
mov
aad
mov
add
pushf
call
data16
lcall
or
mov
cmp
mov
jmp
mov
and
rol
out
add
repnz
mov
jns
lds
mov
data16
mov
mov
pushf
pushf
mov
cmp
cmp
mov
pushf
push
xchg
push
adc
jmp
stc
fcmovnb
push
sub
mov
add
jl
ljmp
pop
jmp
sahf
mov
shll
je
sub
xorl
jb
mov
xor
inc
sub
mov
inc
fs
addr16
leave
mov
popa
arpl
outsb
gs
jg,pn
sub
popa
outsb
jae
jb
ss
test
stc
push
nop
add
daa
aad
sbb
push
sti
adc
inc
sbb
in
jbe
push
push
test
xchg
dec
mov
aad
xor
ficoml
fnsave
hlt
inc
rcr
pop
mov
leave
cmc
xchg
xor
mov
push
dec
test
or
fdivrs
imul
mov
decb
fildl
mov
out
fnsave
xchg
movsbl
push
add
or
out
into
and
add
pop
imul
add
sbb
loope
jae,pt
sbb
ds
xor
and
push
jl
fiadds
mov
addr16
mov
aam
pop
stos
push
js
or
jbe
stos
sbb
cs
subb
adc
jle
pop
mov
pop
rorb
es
addl
xor
pop
adcl
add
push
mov
jg
cltd
mov
cmpsb
sbb
cmp
jmp
fiaddl
addps
cmp
cmp
movsl
adc
mov
daa
je
sub
neg
push
sub
adc
sbb
test
mov
and
mov
pop
cld
std
or
or
lock
pop
insl
test
fs
in
or
add
mov
xchg
xor
lods
dec
leave
sub
push
ss
je
inc
sub
loopne
data16
jo
rolb
mov
or
je
pop
fdivrs
lcall
loope
add
adc
es
jmp
sbb
mov
cmpsl
lcall
stos
std
ret
jmp
mov
mov
cltd
in
and
out
pushf
inc
mov
sarb
sbb
cmpl
jmp
in
nop
je
jae
add
jns
pop
pop
dec
out
inc
sahf
inc
inc
cmp
in
nop
xchg
sub
adc
jl
or
sti
add
aas
and
int
fdivrl
jecxz
sbb
enter
movsb
pushf
cmp
xor
mov
pop
fwait
and
orl
pop
test
outsb
je
pop
mov
pop
rcrb
cmp
mov
inc
mov
pop
mov
js
fs
fdivrs
pop
pop
ret
push
mov
and
jnp
pop
in
sub
adc
push
pusha
mov
insb
or
jns
test
or
cmpw
cmp
cmp
addl
jl
sub
movsb
dec
inc
iret
cmp
icebp
cmp
test
cmp
and
jb
std
mov
jge
jo
add
cmpl
mov
add
sbb
in
add
push
lods
sbb
or
add
mov
mov
fldt
add
push
inc
dec
sbb
data16
sbb
sub
pop
shlb
sar
adc
mov
add
mov
movl
mov
mov
adc
jne
mov
sub
mov
lods
outsb
cmp
mov
in
jmp
mov
pop
inc
in
mov
lcall
jle
movzwl
mov
jle
mov
add
add
test
je
adc
ss
add
and
outsl
or
adc
pop
inc
lar
push
dec
out
ss
or
jne
or
sub
fdivs
mov
dec
or
or
pusha
js
mov
inc
lea
pop
mov
inc
inc
addr16
add
push
rolb
cmp
jae
push
rolb
aaa
leave
push
jno
test
mov
inc
fmull
cs
je
adc
loop
inc
adc
mov
mov
jle
lea
jl
xchg
xor
add
push
scas
rcrl
sub
mov
loope
mov
push
mov
popa
rcrl
mov
jp
lock
xor
andl
jle
sbb
into
add
jb
popl
call
jae
push
lahf
inc
aaa
pushl
lcall
or
fistl
xor
mov
je
pushf
test
ret
adc
sub
cmp
stc
adc
push
mov
dec
pop
jge
je
inc
mov
or
and
inc
cmp
testb
je
pop
inc
shrb
inc
shr
add
into
adc
adc
pop
inc
push
push
fmuls
add
jge
aaa
stos
pop
or
mov
int3
insb
lea
push
push
xchg
mov
mov
jns
sbb
add
push
or
sub
mov
loop
jge
and
insb
in
or
and
push
mov
sub
gs
insb
jb
addb
pop
push
ljmp
mov
jle
xchg
lea
sub
pop
out
dec
push
or
repnz
rorb
gs
inc
sbb
sbb
push
in
mov
or
or
jbe
testb
les
addl
popa
xor
nopl
xor
addr16
outsb
push
mov
inc
adc
cmp
imul
les
cs
ljmp
lahf
lret
icebp
or
xchg
test
adc
or
outsl
mov
je
pop
cmp
and
push
mov
out
adc
adc
push
jbe
cmp
and
or
pop
adc
lock
les
in
inc
lock
push
or
or
jne
neg
push
mov
inc
out
xchg
sub
or
test
loopne
pushf
push
sbb
rorl
test
test
add
sub
sbb
fmull
xorb
test
adc
push
or
adc
je
mov
cmp
sbbl
scas
loop
dec
push
jnp
sbb
xchg
adc
aaa
lods
push
push
out
mov
repz
add
xchg
or
pop
outsb
mov
ret
mov
insl
arpl
ret
mov
jl
fsubr
jbe
je
cmp
push
inc
inc
call
popf
je
xor
dec
adc
jmp
mov
popf
sti
pop
nop
in
icebp
sbb
jle
push
push
rcrl
mov
mov
push
pop
stos
push
ret
cltd
xor
and
cwtl
add
stos
mov
xor
insl
aaa
stos
ds
je
push
jmp
adc
icebp
sbb
adc
cmp
jl
jno
insl
add
sbb
int3
mov
rcpps
push
dec
call
mov
and
adc
push
sub
add
scas
mov
dec
or
or
arpl
lds
outsb
pop
lcall
leave
inc
inc
mov
lret
int3
and
into
aas
push
jb
sahf
arpl
std
rolb
daa
dec
aaa
ret
ret
les
fmuls
mov
lds
push
xchg
mov
xlat
pusha
ss
mov
lret
xor
data16
mov
mov
sub
jb
shlb
jns
es
mov
gs
dec
sbb
das
mov
or
or
sub
orl
mov
ret
lods
adc
cmp
pushf
pushf
xchg
jg
mov
push
adc
das
or
adc
cmp
cwtl
mov
push
or
push
int
xorl
xor
mov
aaa
dec
xor
sub
add
xor
xor
lea
dec
mov
testb
add
cmpsl
and
shlb
pusha
loopne
repnz
jo
ret
adcb
movsl
aam
and
xchg
gs
imul
xchg
gs
jb
jb
gs
adc
jb
mov
adc
dec
sbb
test
sub
mov
outsl
add
mov
bnd
rorl
adc
cld
stos
add
add
mov
mov
es
sbb
push
or
pusha
aaa
inc
push
push
enter
xchg
sub
mov
andl
out
inc
mov
popf
xor
shlb
lcall
jmp
flds
filds
or
and
rclb
add
iret
int
adc
pop
add
inc
sahf
and
into
enter
add
xchg
cwtl
in
orb
push
aas
sahf
frstor
adc
or
sub
inc
inc
and
sub
in
jge
inc
sbb
cmp
xor
fxam
repnz
mov
xor
adc
shlb
sub
cmp
pop
lods
movsb
push
mov
int3
lret
mov
cmp
add
xchg
adc
xor
in
and
xchg
pop
sub
sbb
add
jne
lods
pop
and
mov
inc
jb
arpl
push
arpl
push
negb
push
push
add
jbe
out
inc
jne
pop
push
add
xor
push
adcb
add
mov
push
jb
arpl
jae
fs
inc
xchg
push
subl
push
call
jo
xor
popa
jo
push
add
jb
jne
ja
imul
push
leave
add
sbb
or
xchg
mov
adc
lods
mov
aas
inc
fs
jge
dec
outsl
popa
fs
imul
push
cmc
xchg
inc
arpl
out
ljmp
adc
sbb
fs
adc
stos
cli
pop
pop
inc
roll
add
jb
mov
jg
repz
pushw
inc
dec
or
insl
imul
inc
push
and
ret
pop
mov
jns
add
or
and
repz
mov
into
add
dec
ficoml
imul
add
sbb
and
sub
popa
inc
outsl
jb
pop
in
loope
outsb
and
push
push
push
gs
outsl
insb
sbb
lods
popf
int3
inc
mov
sbb
sbb
add
or
mov
fnstsw
aad
push
sub
push
mov
pop
mov
push
jbe
mov
cmp
pop
ret
cmp
fisubl
loopne
inc
jno
dec
bswap
dec
lods
jo
inc
inc
and
xchg
add
rcrl
das
lods
lea
dec
and
xlat
pop
fcomps
push
add
gs
add
pop
enter
xchg
mov
shlb
add
sarl
lahf
in
push
outsl
imul
adc
pop
mov
fs
or
push
sbbl
mov
data16
mov
inc
outsl
jmp
ja
add
jns
mov
lods
mov
push
rorb
adc
loope
add
pop
adc
jne
push
ret
pushf
insl
or
or
sub
mov
ds
pop
add
shlb
add
pushf
add
imul
sbb
es
test
push
mov
stos
adc
mov
jae
insl
shll
pop
push
dec
movl
insl
movsb
push
cmp
ja
bnd
inc
push
dec
inc
insl
mov
xor
lods
add
jo
je
inc
ds
ja
outsl
insb
popa
sbb
adcb
fsubs
ss
ret
addr16
fs
xchg
push
ja
inc
addr16
jge
lods
jnp
pop
pop
and
cmp
lods
fisttps
mov
adc
fiadds
cmp
push
sbb
pop
dec
int3
popa
addr16
aad
mov
push
push
push
mov
es
fwait
jno
jns
or
mov
adc
inc
outsl
sbb
add
je
xor
pop
mov
jb
out
dec
fsts
mov
sbb
mov
leave
fistpl
sbb
jae
sub
fisubrl
inc
dec
mov
add
push
mov
add
xchg
fcompl
sub
jne
push
adc
or
push
mov
imul
gs
lds
stos
jnp
out
xor
jae
cmp
and
addr16
rorb
insl
movsl
jmp
divl
shll
in
mov
arpl
jo
inc
popa
arpl
add
pop
lods
and
inc
push
into
inc
out
add
mov
add
or
jns
or
cltd
add
jnp
fistl
insl
mov
xchg
or
ss
push
js
xor
sarb
into
mov
jnp
test
pop
adc
inc
dec
fcmovb
pusha
add
xchg
inc
popa
rcr
sti
bound
lea
jne
or
or
dec
jae
mov
mov
cld
mov
sub
dec
adc
cmc
push
jo
push
and
cmp
add
das
mov
mov
lods
aas
aas
xor
inc
pop
push
add
addr16
jmp
nopl
sbb
fdivl
bound
mov
mov
or
sbb
dec
mov
sti
dec
add
sub
insb
ja
dec
push
push
xor
add
push
dec
cmp
gs
insl
not
sbb
fbld
pop
sub
pop
add
push
push
mov
adc
inc
xor
push
xor
xor
imul
inc
leave
ljmp
mulb
imul
dec
inc
dec
push
dec
xchg
adc
popa
int
pop
dec
adc
mov
sub
mov
cmp
call
aad
push
sub
shlb
add
jmp
int
lock
out
call
sar
jmp
sub
inc
std
loop
lret
or
xor
inc
and
add
test
or
mov
movsl
pop
mov
push
sahf
mov
cld
add
test
add
xor
add
aas
push
xchg
movsbw
pushf
pusha
ror
rol
rol
incl
sar
neg
not
mov
inc
call
incb
or
jmp
sbb
push
test
pushf
push
add
fsubs
jmp
adc
adc
test
inc
add
pushf
popl
ss
mov
outsl
stos
lock
and
pop
add
loope
or
xor
clc
sar
lods
call
adc
cmp
mov
and
adc
jecxz
push
lods
ja
jmp
shll
mov
add
dec
jmp
loop
test
divps
mov
push
pushf
xor
adc
insl
sub
push
aaa
xor
pusha
mov
xchg
sti
push
or
adc
lock
cmp
in
and
fmull
push
sbb
jmp
mov
push
and
sti
jmp
cmp
add
push
add
pusha
mov
in
jmp
notl
cld
cmp
pushf
push
clc
pop
fists
inc
xorl
mov
sbb
testl
add
cmp
inc
negl
notb
xor
lods
jge
mov
lahf
xchg
dec
xchg
not
mov
push
mov
push
mov
pop
bswap
add
repnz
inc
test
loop
cmp
mov
ds
idiv
sub
push
mov
ror
lret
cmpb
fsubr
xchg
jnp
push
pop
outsb
out
ja
shr
jmp
cmc
push
ror
mov
fdivr
out
sbb
not
clc
cmc
call
mov
sbb
adc
out
jg
clc
call
jecxz
les
test
sbb
test
je
bound
les
insb
out
in
rcl
and
or
jnp
mov
cmp
arpl
xor
subb
call
not
and
decl
xchg
lcall
cmc
add
call
cli
call
jmp
outsb
in
push
jecxz
stc
test
fs
xchg
sbb
jge
sbb
sti
neg
sbb
pop
js
and
adc
or
cmc
push
cs
or
jmp
add
push
pop
inc
stos
mov
loop
ljmp
shl
movsb
xchg
mov
popa
fisttpl
jg
or
cli
and
xchg
push
adc
push
xchg
stc
or
xor
inc
cmc
in
push
sbb
fucomp
pop
xchg
pushf
jmp
push
add
sbb
ss
push
js
push
pop
sarl
in
mov
sbb
repnz
jmp
mov
dec
repz
mov
mov
pop
xor
mov
movsl
aad
push
sub
mov
int
mov
add
pop
adc
incb
rcrb
cmpsb
jmp
out
and
sbb
test
call
movb
cmp
out
adc
adc
repnz
and
cltd
sbb
in
std
cmp
stos
xsavec
or
call
mov
or
je
mov
test
xchg
aas
jge
sbb
pushf
push
sub
pop
sbb
mov
or
cld
loope
loopne
bsf
rol
popa
mov
lea
test
test
push
mov
ds
mov
ror
setl
loopew
clc
fcmovnu
adc
pushf
push
sbb
std
push
mov
mov
or
mov
inc
call
clc
mov
enter
add
clc
ret
cmc
dec
or
lea
lds
sbb
sahf
jae
call
sub
pop
add
les
sbb
pop
jmp
xor
and
lahf
adc
mov
mov
push
xor
jmp
outsl
jmp
rcl
loopne
and
dec
mov
in
shlb
subps
jge
inc
shl
add
mov
sahf
mov
ret
aam
insl
data16
mov
out
inc
loope
jae
lods
flds
pop
scas
neg
pop
gs
outsl
sbb
pop
adc
aas
test
jmp
pop
test
jo
jmp
xchg
shl
dec
mov
sti
jae
ret
fidivrl
adc
pop
mov
mov
aad
inc
add
add
or
pusha
ss
fdivs
nop
stc
cmp
mov
ljmp
jmp
in
rorb
mov
mov
das
sti
sub
xor
loope
xchg
jmp
mov
pop
div
or
xlat
add
ret
mov
repnz
jns
cli
cmc
stc
sbb
xor
mov
lcall
sbb
pop
add
add
ja
mov
sub
mov
mov
add
cltd
xor
mov
imul
pushf
rcr
sti
xor
sarb
loopne
inc
test
testb
cwtl
je
mov
mov
mov
cld
xchg
neg
lds
loope
mov
mov
lret
adc
inc
push
loope
mov
dec
push
pop
push
jmp
or
push
adc
decl
adc
jo
loopne
in
daa
aad
enter
adc
das
icebp
xor
push
into
iret
xchg
call
push
and
jecxz
or
add
mov
call
xor
ret
pop
pop
aam
sbb
mov
xchg
ss
mov
lret
mov
jmp
cmp
jmp
dec
pushf
ja
inc
loope
into
push
push
or
je
mov
jg
pushl
rorb
adc
jp
jecxz
loop
outsl
jb
push
jne
xchg
insl
nop
in
daa
add
lcall
scas
inc
divl
das
fsubs
mov
divl
frstor
dec
jno
out
cmp
mov
imul
inc
xchg
pop
movsl
jne
xchg
pusha
sub
and
mov
js
mov
data16
mov
inc
jg,pn
lock
cmc
push
pop
jg
fidivs
addr16
xchg
fistpl
mov
in
icebp
leave
rol
pop
cs
xchg
js
out
pop
dec
sar
push
icebp
les
push
or
hlt
jle
cmp
xchg
lock
lea
popw
in
ja
push
test
jbe
sarl
xor
jmp
pop
pop
icebp
inc
or
cmc
cmc
aas
cmc
inc
adc
out
mov
mov
gs
xor
neg
mov
adc
xor
pop
rorb
je
sbb
dec
in
bound
mov
sub
ja
jmp
mov
fisubl
shll
xchg
mov
test
add
mov
push
push
test
pop
leave
out
in
mov
dec
xchg
pop
cmp
sarl
push
pushf
mov
aas
icebp
push
out
stos
out
cwtl
aaa
adc
mov
sti
adc
jmp
adc
dec
inc
gs
push
shll
nop
push
adc
xlat
leave
test
push
mov
sbb
lea
mov
call
out
in
mov
pusha
push
push
pop
shll
jb
cmp
das
cld
or
jmp
mov
jmp
mov
lods
push
push
frstor
or
je
push
pusha
faddl
dec
jne
jo
bound
pusha
inc
in
jg
pop
push
pushf
xchg
aad
xchg
lret
scas
std
sub
out
icebp
sbb
cmp
gs
cs
push
adc
cmpsl
dec
mov
xor
das
adc
daa
mov
adc
popl
xor
sar
int
mov
rcpps
sub
and
das
dec
jae
cmp
repnz
or
mov
arpl
fstpl
pop
adc
lahf
mov
sub
mov
rcll
idivb
fistpll
push
sbb
sub
xchg
fnsave
jnp
pop
aas
and
mov
xchg
xor
repnz
aas
mov
loopew
ficomps
or
out
sub
and
aas
jae
add
push
stos
daa
xor
aaa
fstpt
jecxz
aas
xor
notl
stos
aas
mov
inc
stos
pop
imul
cmp
jnp
aas
daa
dec
pop
aas
mov
jnp
xlat
push
pop
sub
pop
ret
pop
ret
pop
incl
mov
daa
addr16
pop
and
js
das
aas
jecxz
ja
das
fadd
loope
lret
cmp
xchg
sti
out
sbb
outsl
bndstx
mov
ret
stos
jg
ret
mov
xchg
adc
jnp
lock
fildll
aas
jo
sbb
cmpsl
xor
loope
ret
loope
xor
and
fnstcw
mov
fincstp
ja
lods
mov
nop
xor
jnp
jg
in
jo
out
pop
aas
xor
pop
jmp
and
mov
jg
js
sub
neg
jnp
arpl
jae
pop
pop
ja
dec
js
mov
jecxz
and
cld
sub
pushf
xchg
push
dec
mov
sub
scas
jns
cmp
mov
clc
ljmp
push
add
loop
rolb
sbb
mov
push
pop
jmp
ja,pt
and
jmp
mov
cmp
push
or
xor
push
dec
lret
or
sti
std
add
cld
push
cld
jne
mov
push
jle
cmp
loope
push
pop
or
cmc
xor
out
sub
mov
pusha
jnp
or
pusha
in
mov
jo
decb
sbb
jl
jmp
in
mov
cmp
clc
out
pop
push
jl
arpl
mov
add
add
inc
pusha
add
lock
adc
mov
fdivr
fnsave
leave
ljmp
push
xchg
stc
jl
jle
adc
call
clc
and
mov
or
cli
pop
mov
outsb
add
or
push
jg
addl
add
fsubs
dec
mov
lods
ljmp
ss
pushf
lcall
popa
mov
pushf
cmc
not
push
cmc
and
ffree
adc
mov
sbb
filds
mov
inc
adc
or
enter
loop
lret
fiaddl
add
not
clc
ror
incb
xchg
stos
pop
out
in
xor
xor
in
pop
and
stos
stc
stc
fcompl
out
cld
lods
js
clc
and
mov
andb
std
test
loop
adc
xchg
jl
push
add
cmpsb
pusha
call
ljmp
in
and
and
pusha
icebp
and
cwtl
push
incb
pop
dec
push
shrl
jns
push
push
xchg
inc
jo
je
adc
call
shlb
in
or
push
faddp
mov
ss
addr16
pop
sbb
mov
pop
add
xchg
idivl
notl
adc
push
add
pushf
xchg
loopne
dec
rol
neg
inc
fcomi
fcmovb
cli
pop
mov
rcrl
out
dec
cld
push
add
out
add
ret
xchg
cmp
push
xor
shlb
pop
mov
and
ret
lret
daa
fisubl
not
rcl
stc
ss
adcl
adc
shrb
data16
imul
movsb
push
loop
and
addl
xor
shrl
sub
sbb
out
dec
mov
rcll
pop
push
call
sub
add
sti
in
push
mov
sub
ret
pusha
cmpl
ss
xor
adc
popa
cmp
add
lods
leave
popf
call
and
push
data16
insl
xchg
push
dec
mov
mov
in
or
call
jl
mov
sub
sub
sbb
xor
cmp
lea
mov
xchg
sub
call
test
mov
mov
lea
call
sbb
outsb
in
xor
mov
sub
mov
xor
insb
nop
mov
in
pusha
push
jne
mov
mov
test
cmp
outsl
mov
sar
xchg
rcrb
cli
sub
test
and
mov
push
cmc
mov
push
sbb
sbb
or
pushf
mov
sbb
pop
mov
push
ret
push
push
add
jnp
and
inc
push
fadd
sti
outsl
pusha
roll
in
jmp
out
inc
ror
negb
xor
pop
mov
mov
mov
std
xor
adc
clc
sub
jbe
lds
xchg
outsb
int
lea
push
call
xor
push
les
xchg
push
sbb
outsl
sbb
jmp
mov
adc
shl
test
in
xor
loope
cmpsl
or
cmp
call
add
in
rolb
imul
pop
scas
fnstenv
ds
insb
in
hlt
movsb
clc
jnp
rorl
lock
mov
lods
outsb
add
lock
rcr
testl
faddl
dec
xchg
fisttpl
and
aaa
xchg
test
lock
jbe
jl
pusha
test
mov
mov
sbb
push
arpl
mov
in
stos
sbbb
or
shr
pusha
cld
or
pop
mov
push
pushl
mov
loopne
or
pusha
mov
pop
inc
ret
mov
push
repnz
cmpsl
cmp
sbb
clc
xor
clc
clc
jle
mov
fistps
bound
lds
jmp
loopne
je
lock
ss
lea
cmc
cmp
cmp
insl
cltd
lea
mov
jle
rcr
or
lea
or
pop
push
sub
aaa
cmpsb
pop
clc
cmp
in
lea
shl
sbb
or
hlt
fdivrl
sub
iret
sub
pop
call
hlt
repnz
mov
into
stc
fwait
inc
jb
jle
mov
leave
and
cld
ja
loopne
sub
mov
lock
test
ror
loop
test
pop
ret
or
mov
insb
lock
and
test
outsb
adc
push
push
sti
sbb
cmp
ret
jmp
test
popa
jecxz
adc
pop
mov
call
daa
les
divl
loopne
stos
out
out
push
adc
mov
xchg
popf
pushl
ja
inc
xor
into
sar
test
pop
mov
popf
popa
mov
ja
repnz
pop
sti
test
sar
inc
or
pop
bswap
pop
or
rol
adc
ficompl
add
insl
call
fbstp
ljmp
sti
test
lea
pop
add
ficomps
lretw
int3
cmp
mov
sbb
mov
cld
fcomp
stc
imul
imul
cli
cltd
pop
jmp
int
or
pop
cmpsb
pop
adcl
jae
mov
in
lods
mov
adcb
push
cmp
xchg
sbb
dec
adc
rorb
fprem1
daa
jmp
fadds
cli
addr16
ret
rorl
dec
xchg
dec
test
xor
out
out
addr16
enter
loopne
push
mov
mov
jbe
cmp
sti
lret
pusha
add
jmp
ja
add
test
push
push
mov
jb
mov
jae
add
jp
and
call
std
inc
insl
jmp
mov
xor
jae
test
call
out
dec
cmp
shll
cmp
popa
call
sub
pop
shrb
cmp
jae
and
rorl
push
add
frstor
cld
mov
lock
push
mov
icebp
mov
mov
imul
and
push
jmp
push
pop
test
fldt
movsl
mov
xchg
lea
jo
push
lret
imul
loope
stc
push
jmp
push
inc
push
sbb
push
aaa
clc
ds
adc
cmp
cmp
jmp
ret
pop
imul
pop
and
popf
addb
cmp
jae
out
pop
dec
jmp
jle
mov
mov
into
mov
test
gs
sub
mov
add
dec
or
or
aam
jbe
mov
mov
adc
das
mov
xchg
xor
repnz
pop
xchg
std
mov
and
fisttpll
sbb
sbb
movsb
inc
pushl
pusha
fstps
iretw
mov
jno
stos
inc
mov
popa
ljmp
out
ljmp
movsb
push
sahf
push
push
fldcw
insb
bound
mov
sbb
and
incl
scas
aaa
xchg
pop
push
lret
and
jmp
int3
lahf
ret
sbb
dec
ja
cmp
add
push
add
mov
es
pop
mov
sahf
leave
daa
sub
incb
rcr
dec
icebp
pop
xor
jnp
into
aam
lret
jg
decl
sbb
flds
loop
fwait
push
dec
stos
or
dec
sub
cli
lahf
sub
inc
or
jg
lcall
jmp
pop
lods
jbe
mov
push
xchg
test
inc
cmp
xchg
ljmp
push
das
js
incl
stc
adc
dec
sbb
xchg
insb
movsl
loope
mov
outsl
stos
imul
decl
ljmp
mov
in
into
fldt
fidivs
imul
call
pushf
jne
pop
out
das
das
pop
shrl
loope
xor
jnp
sub
sbb
sti
jmp
ficompl
rolb
mov
push
mov
sub
stos
xchg
cmpl
sbb
add
decl
sti
add
inc
pop
cmpsb
sub
int
sahf
or
and
std
lahf
jg
push
outsb
inc
xchg
mov
mov
cmp
shlb
ds
jo
sarb
jg
jle
push
in
lahf
ja
xor
push
popf
xor
jg
mov
aas
repz
pop
bound
sub
dec
aam
aas
ret
fiaddl
movsl
jmp
dec
andb
sub
sub
jo
mov
jo
cmp
xchg
insb
sub
add
cli
test
add
mov
sub
popf
push
mov
pushf
pop
stos
imul
test
dec
ja
lahf
cmp
sti
iret
incb
mov
add
cmp
jns
popf
lcall
mov
jg
pop
xor
loope
mov
lahf
jecxz
jecxz
jne
mov
gs
in
repz
ja
testl
mov
adc
pop
inc
sti
ss
push
inc
xor
fists
rcrb
ja
pop
mov
movsb
incl
fdivrs
decl
std
scas
jno
call
jae
dec
jo
out
adc
test
sbb
stc
and
xchg
sbb
inc
mov
dec
xchg
aam
int3
mov
dec
mov
imul
sbb
insb
nop
pop
dec
sbb
jb
pop
or
adc
mov
sbb
sub
push
mov
add
mov
pushl
sbb
or
stos
mov
jg
into
and
mov
adc
out
xchg
jo
jae
jg
sub
jae
push
mov
pop
pop
lcall
divl
mov
jmp
fmulp
pop
cmp
mov
movsb
sbb
or
ret
xlat
cmp
pop
pushf
inc
and
mov
ljmp
jnp
rolb
mov
sbb
out
inc
std
xchg
jnp
aad
push
xchg
fldenv
ljmp
adc
loope
dec
push
js
cmp
ss
jo
divl
pushl
lea
push
mov
add
stc
pop
push
mov
call
push
add
imul
sbb
and
fcmovu
mov
fdivrs
rcll
dec
in
sub
and
aad
clc
mov
jl
jns
decl
sub
xchg
xchg
mov
hlt
sub
mov
pop
xchg
mov
mov
rcll
add
mov
loop
hlt
xchg
incl
lods
jno
mov
pop
sub
mov
mov
insl
call
cli
pushl
fnstsw
push
movsl
xchg
out
sub
cmp
test
cli
mov
xchg
cmp
xchg
ljmp
sbb
push
loop
push
push
jns
dec
sub
inc
jg
leave
movsb
jno
cwtl
shrb
pop
dec
mov
loope
mov
pop
stc
and
mov
adc
call
inc
push
sub
rcr
inc
mov
pop
sub
aam
fildll
movsb
montmul
dec
pop
xor
in
fistps
dec
int3
sbb
pop
jle
decl
dec
mov
mov
cmpsl
test
sbb
mov
aas
mov
mov
in
xchg
daa
xor
push
inc
sub
fldt
js
shl
or
insb
mov
inc
add
mov
scas
mov
push
imul
pop
xor
push
cld
outsl
sahf
stc
iret
mov
adc
fcoms
sub
popf
inc
sti
jl
loopne
jl
pop
lret
cmp
faddp
and
or
lods
outsl
push
adc
ja
daa
scas
cmpsl
xchg
mov
mov
ret
pop
xorl
push
sub
inc
fidivl
mov
ljmp
xor
loopew
ret
jnp
mov
jp
mov
enter
ljmp
cld
cld
xor
sub
adc
adc
std
xchg
cmpsl
clc
jo
xor
ljmp
cmpsb
rorb
push
sbb
imul
cltd
neg
adc
sub
divl
sub
lcall
ds
jge
hlt
lahf
sub
cmp
push
xchg
mov
pop
dec
or
cmp
in
lds
add
xchg
mov
jno
push
mov
fwait
hlt
adc
lods
leave
fnstcw
sub
jecxz
loopne
out
call
sbb
icebp
adc
mov
ja
ret
push
mov
xchg
mov
cmp
pop
lahf
jae
ds
adc
nop
in
and
jmp
aas
lsl
pop
mov
stc
shlb
jmp
mov
lahf
push
ficompl
insl
cwtl
pop
repnz
fdiv
loope
addr16
sbb
stos
icebp
lret
vandnpd
inc
repz
mov
ljmp
hlt
mov
mov
aaa
insl
aad
cmp
cs
out
test
jno
adc
lods
int
mov
ss
mov
rolb
pop
sti
jb
push
aam
dec
aas
inc
out
mov
das
insb
jecxz
insl
ss
ds
mov
or
fdivs
out
or
dec
std
push
pop
pop
call
dec
out
es
mov
dec
mov
inc
cltd
mov
push
dec
test
cmpsl
ret
pop
call
cld
jle
in
or
mov
cmp
jle
pop
leave
or
push
and
adc
loope
scas
adc
lahf
das
dec
dec
cmp
sti
hlt
mov
cmp
xor
mov
pop
sub
incl
pop
and
adc
shlb
dec
loop
mov
mov
xchg
repnz
aad
test
clc
inc
lods
stc
imul
sbb
fucomip
inc
addb
test
jns
mov
inc
shrb
insl
pusha
sbb
outsb
inc
outsb
jae
incl
xchg
push
xchg
sbb
push
xor
outsb
mov
adc
push
mov
popf
pop
aaa
push
scas
pop
jecxz
adc
push
dec
fsubs
xor
lock
fnstsw
xchg
mov
cli
sub
rclb
and
fwait
mov
pop
and
and
lods
mov
incl
pop
lcall
sbb
lcall
ret
lock
mov
and
push
mov
in
cmp
repnz
movsb
imull
loop
mov
push
pusha
out
xor
test
push
call
adc
push
lea
xchg
outsb
imul
push
jg
dec
pop
sub
nop
mov
xchg
mov
loopne
dec
sub
xor
addb
in
daa
daa
cltd
cmp
lock
cmc
xchg
repz
test
fdivs
jmp
cli
loop
in
das
jle
inc
jno
or
arpl
das
ret
pop
pop
loop
ljmp
icebp
fwait
addb
xor
lahf
out
popf
jne
mov
out
inc
mulb
pusha
std
push
rcrb
xchg
mov
jns
push
adc
lock
mov
repz
add
jns
mov
scas
sbb
lods
orl
cmpb
cli
mov
fistpll
xchg
rclb
decl
push
outsl
or
mov
mov
xchg
enter
mov
pusha
pop
lea
hlt
mov
xchg
xor
into
pusha
fcmove
xor
shl
pop
push
imul
loopne
and
mov
dec
filds
ljmp
ljmp
dec
and
das
or
sbb
push
outsl
repz
arpl
xor
mov
out
outsl
cld
out
sbbb
push
cs
rcrl
and
rolb
mov
mov
stos
enter
sub
aam
call
inc
clc
push
fsubr
gs
cld
adc
rcl
arpl
les
mov
fsts
mov
push
lock
std
std
addb
or
jns
and
and
mov
pop
mov
xchg
rclb
or
ljmp
in
js
inc
cltd
movsb
aam
pop
int3
add
loopne
and
test
aaa
jmp
xchg
add
mov
mov
sub
test
mov
pushl
enter
rorl
mov
outsb
repnz
ret
je
sarb
stc
mov
notl
dec
pusha
insl
sbb
or
jge
in
enter
stc
push
aam
pop
into
insl
jmp
xchg
xchg
xlat
test
std
xchg
mov
sub
xchg
mov
inc
movsb
test
test
sbb
add
push
fildll
lcall
push
js
test
mov
sub
dec
dec
sub
sub
outsb
push
cli
jg
xor
frstor
push
mov
and
fidivrl
movsb
lods
loope
dec
stos
call
pop
lahf
inc
dec
mov
stos
mov
xchg
add
test
clc
jl
push
xchg
push
pop
call
sbb
mov
jmp
xchg
fcmovne
leave
adc
lret
mov
movsl
leave
ret
mov
insl
hlt
push
decb
jecxz
incl
insl
lea
pusha
test
enter
sub
xor
ds
cmpsb
out
lcall
loope
dec
mov
and
inc
cs
mov
bnd
xchg
inc
or
mov
pop
in
jge
call
incl
dec
inc
mov
jg
fldcw
test
test
add
dec
add
jnp
inc
jbe
mov
mov
mov
call
loope
loope
insb
adc
inc
in
mov
xchg
imul
pusha
xchg
in
or
and
or
pop
in
lcall
out
lods
jge
jl
in
cwtl
dec
dec
jecxz
pop
aam
push
iret
lock
in
fsubrs
push
adc
fwait
adc
pop
add
lcall
xchg
shll
fcoml
xlat
inc
pop
in
repnz
aas
xchg
adc
dec
xor
mov
in
xchg
or
sub
mov
test
cli
and
aam
loope
adc
test
pop
or
xchg
popa
rorl
add
insl
outsl
jg
jp
jbe
lds
sbbl
loopne
adc
dec
jmp
or
xlat
mov
mov
daa
imul
xchg
lea
push
pop
adc
iret
int3
sbb
cld
mov
jge
scas
aam
push
shr
sub
test
shl
inc
xor
xchg
add
xor
sar
in
aaa
leave
pop
andb
rorb
lock
incl
fbld
jae
dec
xchg
int3
lds
jge
popa
add
decl
mov
das
insb
popf
jmp
scas
and
aam
push
ret
mov
repnz
insl
in
and
xchg
add
pushl
push
aam
inc
push
leave
cmpsb
stos
inc
mov
push
jae
xchg
push
stc
cmp
faddl
out
push
iret
push
jle
scas
mov
mov
and
lret
ljmp
pusha
addr16
outsb
test
pop
frstor
popa
mov
addr16
xchg
fbld
jg
ljmp
fidivl
movsb
call
iret
xchg
mov
dec
mov
fwait
or
xchg
cld
pushl
mov
mov
xchg
andl
idivl
imul
fdivs
mov
data16
push
clc
inc
psubusw
or
outsl
std
loop
pushf
jne
les
loope
int3
fsubrp
outsl
cmpsb
jmp
push
lahf
jg
xchg
pop
mov
add
jns
addr16
push
dec
sarb
bound
add
mov
jg
cmc
push
cmp
jge
rcrl
inc
mov
jno
pop
push
ret
shll
adc
lret
fwait
es
lea
xchg
add
es
inc
cmpsl
iret
jbe
les
aas
ljmp
add
inc
incl
push
push
pop
jp
fwait
mov
scas
push
mov
pop
inc
lock
lret
cmp
js
push
mov
dec
adc
insl
xchg
cmp
fs
fidivl
movsb
scas
loop
inc
stos
pop
lret
jns
pushl
mov
test
xor
jmp
div
rcrb
ds
stc
call
mov
clc
call
adc
mov
push
movsb
inc
shlb
inc
pop
mov
in
mov
or
aad
pop
fsubrl
dec
dec
jmp
cmpsb
in
jns
mov
lret
ljmp
test
push
pop
jae
mov
mov
add
aaa
into
outsb
outsl
ret
mov
bound
mov
test
xchg
out
cli
pushl
movsb
cmpsl
loope
dec
stos
scas
enter
jg
out
xor
xchg
or
sti
jg
push
sbb
sbbb
scas
mov
call
and
xor
jmp
adcb
mov
lods
addr16
imul
mov
inc
jge
xor
nop
int3
pop
insl
dec
sub
dec
push
pusha
loope
jmp
cmpsb
jmp
cmp
pop
negl
add
jns
lock
pop
clc
mov
das
enter
jo
inc
imul
frstor
addr16
mov
outsl
decl
jbe
xchg
and
data16
xor
test
mov
sbb
das
dec
or
mov
cwtl
or
adc
adc
push
in
jle
lcall
incl
fwait
jbe
fldt
shlb
test
ljmp
lock
pop
sti
insl
addl
push
ja
and
dec
inc
lods
inc
push
jle
das
aas
cmpsb
loop
stc
dec
movl
jg
inc
std
inc
mov
mov
and
adc
jmp
push
lret
cmp
mov
dec
cmp
pushf
cwtl
bound
or
cmp
or
mov
xchg
inc
pop
orl
push
js
lcall
lods
push
bound
push
mov
outsb
xchg
insb
xchg
rol
ljmp
inc
pop
sbb
fbstp
jg
pop
shlb
inc
mov
mov
pop
cmc
jo
push
cmpsb
xor
lret
decl
inc
lret
scas
jmp
xor
in
ljmp
mov
ret
jp
movsl
pop
lret
frstor
insb
adc
pop
push
stc
repnz
in
inc
daa
cld
dec
stc
in
sbb
mov
jge
shrb
xchg
pop
loopne
adc
cmp
inc
add
xor
pusha
ret
jae
pushl
mulb
mov
mov
lea
fldl
push
inc
inc
outsb
fcomps
or
push
jg
call
xor
adc
ljmp
loope
aaa
push
jle
push
adc
or
mov
stos
fidivrl
movsb
mov
add
cmpl
lea
push
xor
cs
iret
std
lock
xchg
lods
push
outsb
fnstsw
adc
mov
fnstsw
xchg
iret
fs
push
testb
dec
cmp
jle
stos
in
bnd
sub
and
pop
outsb
jmp
cmp
sbb
fisttpl
or
pop
jnp
lfs
leave
ljmp
std
jl
cmpsb
lcall
fstpl
cmp
mov
bound
incb
xor
les
mov
jns
mov
pop
or
test
mov
cs
push
fld1
jle
fisttpl
xchg
clc
das
jno
cs
xchg
imul
rol
jb
pushl
mov
addr16
cmc
dec
lret
repz
cld
call
fcmovnb
push
sub
inc
in
aas
ficomps
xor
mov
push
mov
push
rcrb
sahf
mov
mov
cs
insb
std
pop
pop
push
lret
outsb
ret
inc
jno
repnz
outsl
push
mov
add
aad
mov
cmp
push
xlat
in
jns
push
mov
ds
insl
dec
aaa
push
adc
adc
pop
pop
leave
call
stc
mov
sti
xor
push
fcmove
test
ljmp
mov
gs
fbstp
inc
std
fdivr
jge
inc
popa
icebp
aad
ret
pop
into
mov
aam
jg
mov
repnz
jle
jmp
cmpsb
jmp
mov
add
add
pop
jg
pusha
sti
das
decl
and
adc
ret
outsb
inc
ja
xchg
frstor
pusha
push
mov
fistpll
loope
cmp
insb
test
in
jmp
incl
cmpb
xor
sahf
sub
mov
pop
into
call
cs
inc
mov
fdivr
mov
in
jl
decl
jmp
fidivs
mov
fs
push
repz
dec
pusha
lock
fdivrp
mov
movsb
rcrl
and
dec
inc
inc
lods
pop
jmp
std
xor
fidivrl
gs
mov
push
ret
jp
lahf
js
push
pop
iret
int3
dec
cmp
arpl
divl
out
aas
insb
mov
or
aam
push
xbegin
aam
fwait
mov
test
mov
xchg
xchg
adc
push
add
in
mov
add
lcall
movsl
out
fiaddl
add
shr
nop
dec
push
test
mov
inc
jmp
xor
sbb
and
sub
xor
cmp
inc
xor
push
das
hlt
xor
xor
add
test
mov
cmpsb
pushl
stos
xor
xor
xor
xor
xor
jb
xorb
xor
xor
xorl
mov
call
xchg
xor
xor
xor
xor
xor
pop
xor
cmpsl
xor
inc
xor
or
sub
xlat
and
push
aaa
push
aaa
pop
aaa
push
aaa
xchg
aaa
idiv
jmp
aaa
lret
aaa
call
cmp
cmp
cmp
adc
cmp
call
cmp
cmp
fnstsw
idivb
adc
push
cmp
cmp
or
out
idivl
cltd
and
cmp
cmp
cmp
sub
cmp
test
mov
cmp
or
push
test
add
fs
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
scas
cmp
xchg
ds
add
add
dec
aas
ret
aas
add
and
jmp
out
sahf
xor
xor
xor
xor
pop
xor
mov
outsl
lock
mov
xor
xor
xor
push
xor
fdivl
xor
decl
xor
xor
xorl
xor
leave
xor
aam
push
ss
sub
cmp
push
ss
xchg
mov
xchg
outsl
lock
pushl
fwait
ss
mov
shlb
ss
out
pop
aaa
dec
sbb
data16
mov
push
mov
mov
aaa
ret
aaa
aam
fdivl
out
out
aaa
cmc
aaa
outsl
clc
cld
aaa
add
dec
cmp
mov
cmp
cmp
cmp
sbb
jne
xchg
cmp
pushl
cmp
cmp
cmp
cmp
cmp
pop
cmp
test
fwait
cmp
sar
sarl
fdivrs
loop
clc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sbbl
cmp
cmp
cmp
inc
ds
jp,pt
jg
test
mov
sarb
lock
sbb
sub
jp
xchg
aas
pushf
aas
pop
clc
push
das
pop
cmpsl
aas
mov
aas
loop
cli
and
iret
jae
xor
xor
xor
xor
xor
xor
xor
xor
xor
jecxz
lcall
xchg
lahf
xor
xor
xor
mov
jg
pop
xor
sub
nop
xor
xor
xor
xor
xor
mov
xor
pushl
xor
in
lock
js
scas
ss
lcall
aaa
add
adc
and
cmp
jbe
test
cwtl
cmp
clc
inc
cmp
cmp
cmp
cmp
cmp
pushf
cmp
cmp
or
or
jecxz
cld
sbb
cmp
cmp
cmp
cmp
mov
mov
cmp
cmp
pop
cmp
cmp
cmp
test
cmp
cmp
cmp
decl
fistpll
cmp
insb
cmp
mov
fs
out
ja
inc
aas
jl
mov
loopne
out
hlt
aas
in
jmp
jmp
xor
xor
xor
mov
xor
push
xor
jb
jl
xorb
xor
pop
xor
xor
xor
xor
pop
xor
insl
xor
mov
mov
xor
xor
stc
cmc
icebp
call
mov
xor
xor
xor
xor
xor
jg
fildll
cmp
inc
ss
cmp
cs
xor
dec
addr16
mov
outsl
aaa
jbe
out
stc
sti
or
adc
cmp
cmp
dec
cmp
jg
jmp
xchg
cmp
push
cmp
bound
insb
cmp
jnp
cmp
hlt
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jmp
cmp
cmp
dec
filds
out
cmp
cmp
cmp
pop
cmp
insl
cmp
pushf
das
lock
lock
cmp
or
in
sbb
and
call
ds
mov
mov
seto
mov
xor
push
xor
push
out
xlat
or
jg
xor
ljmp
mov
mov
xor
xor
leave
xor
ret
xor
jns
mov
pop
xor
mov
xor
pushl
xor
xor
xor
icebp
sbb
int
adc
insl
xor
nop
mov
mov
xor
xor
repz
push
loope
cli
pop
pop
sub
cs
mov
xorl
lock
test
std
ss
aas
xor
dec
jp
jg
xchg
sti
aaa
mov
shll
aaa
loopne
aaa
sbb
aas
cmp
cmp
push
ret
mov
dec
sub
push
rcl
mov
cmp
cmp
cmp
aas
cmp
jle
cmp
pop
les
push
jmp
sti
cmp
cmp
cmp
cmp
cmp
dec
cmp
pusha
cmp
jl
cmp
jns
xchg
xchg
cmp
cmp
jge
clc
outsl
ljmp
cmp
cmp
cmp
jnp
cmp
cmp
clc
decl
cmp
sbb
cmp
cmp
fs
outsl
cmp
push
stos
cmp
iret
cmp
sbb
cmp
ds
mov
ds
inc
aaa
fdivp
ds
ds
ds
jl
mov
mov
ds
ds
ds
loopne
in
pop
aas
test
mov
pop
jg
inc
xor
insb
xor
xor
or
shll
or
pop
addl
sbb
pushl
divb
std
xor
xor
xchg
lea
xor
aad
xor
xor
xor
xor
xor
adc
cs
lea
push
ss
jno
jns
xchg
mov
mov
cmc
fbstp
in
lock
ljmp
clc
aaa
add
or
adc
sbb
add
cmp
cmp
cmp
jg
cmp
jge
stos
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
ljmp
cmp
in
cmp
jge
cli
aaa
cld
fildll
cmp
popa
cmp
xchg
cmp
cmp
or
pop
cmpsb
lcall
push
cmp
cmp
cmp
push
cmp
cmp
rcrb
xor
or
xor
xor
or
in
clc
cmp
or
orb
inc
xchg
call
lds
add
mov
sarb
mov
and
fbstp
stos
mov
mov
mov
mov
testl
incl
popf
sbb
or
or
or
add
pusha
add
and
pop
pop
fadds
pop
js
add
aaa
add
dec
out
popf
add
pop
add
push
push
add
add
jae
arpl
dec
fldenv
ret
inc
and
inc
enter
scas
sub
push
push
and
sub
add
cmp
pusha
xchg
dec
shr
cld
or
and
imul
push
js
xor
roll
shll
or
dec
shrl
sbb
sub
adc
lcall
loopne
pop
jae
imul
cmpsb
fnstenv
add
or
mov
add
cmp
xchg
sahf
dec
xlat
or
jae
add
pop
add
xor
scas
xchg
out
hlt
or
xor
dec
dec
inc
and
or
push
xor
negb
sub
subl
or
in
jg
mov
popa
jns
jne
jae
xor
cmp
push
mull
push
push
add
xor
addr16
fnsave
jmp
cmp
cmp
stos
cli
or
daa
inc
push
imul
push
push
inc
and
sub
fisubrl
adcb
cmp
cmpsl
test
sub
movsl
add
cmp
push
pop
mov
add
iret
imulb
rep
or
mov
test
mov
add
test
fdivr
jo
lock
mov
dec
orb
lea
rorl
mov
mov
cmovno
mov
test
adc
call
push
shll
aam
mov
xlat
cmp
pop
fsts
push
lods
popf
add
inc
data16
cmp
add
xchg
in
popa
je
inc
cwtl
in
fs
ja
addr16
pop
pop
push
lahf
addb
mov
daa
push
mov
lock
add
mov
imulb
mov
aas
neg
sub
dec
dec
mov
cmpl
psubusw
inc
aad
mov
or
xchg
xor
inc
cld
sub
in
sub
xor
mov
lock
pop
mov
and
mov
mov
es
sbb
sbb
int3
inc
je
jnp
inc
lods
scas
jnp,pt
lret
pop
and
fsubp
mov
push
movsb
or
mov
stos
push
add
sbb
mov
hlt
imul
outsb
xchg
sub
cs
fs
insb
pop
push
and
insl
rclb
je
insb
add
dec
adc
lret
dec
inc
jg
lea
pop
aas
mov
rclb
and
xchg
gs
insl
xchg
cmp
je
dec
inc
cmpsb
imul
inc
lcall
stos
xchg
push
in
push
aaa
push
mov
loopne
inc
jo
inc
lret
and
mov
and
lea
std
sub
adc
jle
divb
dec
call
in
adc
sahf
andb
fnstsw
jg
pop
lea
push
enter
addr16
mov
jmp
mov
nop
inc
es
xor
adc
js
test
adc
pop
out
testb
and
jmp
xchg
dec
sbb
cmp
push
lret
jge
or
xchg
inc
rolb
std
pop
push
push
cmp
in
pop
push
mov
lods
jno
adc
add
inc
call
pop
sbb
cltd
or
dec
xor
orb
inc
xor
sbb
push
add
pop
pop
push
scas
test
jmp
ss
adc
sub
std
cmc
fsubs
mov
mov
sbb
or
and
push
push
inc
ja
xchg
lahf
and
flds
rorb
or
add
or
test
add
lock
push
in
and
inc
add
cmp
jl
lret
sbb
push
or
call
push
mov
enter
lods
repz
lods
repz
inc
les
add
loope
and
add
mov
jbe
or
adc
popa
outsl
outsb
gs
mov
jae
cs
xchg
add
int
fnstcw
xlat
fdivs
arpl
push
shlb
pop
xchg
sub
loope
js
fs
xchg
arpl
fs
mov
test
cmp
movsb
aam
cmp
push
inc
push
cmpsl
pfnacc
xor
loop
gs
outsb
adc
xchg
xchg
mov
mov
xchg
xor
fs
rcl
adc
int3
cmp
shl
dec
mov
pop
add
incl
popa
aas
std
shlb
leave
imul
int3
sub
or
xor
std
js
inc
repz
push
push
mov
mov
int3
add
mov
pop
insb
pop
aaa
mov
test
jge
jne
sbb
flds
sub
loopne
insb
dec
test
push
jnp
mov
pop
mov
inc
push
loop
adc
cmp
je
jp
xchg
inc
sub
jne
leave
ret
ficoms
add
adc
into
fsubl
adc
orl
decl
jne
mov
xor
aaa
xor
adc
cld
add
or
mov
and
cmp
in
iret
lods
push
dec
pusha
add
and
and
and
stos
and
and
lods
lods
scas
scas
enter
dec
mov
pop
mov
pop
dec
fadds
insl
mov
xlat
pop
scas
sbb
movsl
inc
addr16
dec
cmpsb
dec
je
test
test
std
pop
stos
std
stos
std
lods
std
xchg
pop
and
lods
or
js
mov
cs
jo
insb
rcl
jb
xor
mov
movsl
cs
inc
test
dec
iret
add
and
mov
mov
add
loopne
jbe
or
lcall
jno
lret
mov
fsubr
add
fs
dec
xchg
gs
outsl
add
gs
xchg
add
je
insb
adc
gs
fs
lret
mov
insb
popa
jne
leave
mov
lret
arpl
jb
lret
add
mov
jno
insb
add
out
lret
mov
cs
xchg
add
gs
mov
outsl
gs
pop
out
sbb
js
jo
pop
mov
popa
and
clc
push
or
je
and
ds
and
sbb
or
ror
stc
lods
jnp
sbb
xlat
fsubl
clc
mov
xchg
daa
shrb
movsb
mov
mov
and
pop
leave
mov
jno
ljmp
je
add
pop
sub
orb
cld
cmc
add
mov
pop
push
xor
mov
xchg
test
sbb
or
outsl
testl
or
sahf
add
call
pop
jmp
cltd
out
mov
roll
jne
push
jns
int
jb
and
ret
or
rcll
jns
push
pop
xor
fistps
cmp
add
sub
xor
imul
add
and
or
lret
lahf
aaa
push
fwait
sbb
repnz
andb
mov
aam
pop
pop
mov
out
push
dec
inc
xor
mov
push
adcb
and
push
dec
sahf
and
add
push
lock
cltd
add
loopne
sbb
pop
lea
mov
arpl
xor
pop
mov
pop
movl
mov
outsb
or
or
add
lock
mov
mov
adc
dec
add
testl
adc
push
enter
xor
sub
call
sub
add
jns
lret
or
pop
and
and
inc
ds
shlb
and
and
sub
sarl
and
push
inc
inc
mov
jb
and
jns
das
mov
dec
and
add
daa
add
fs
lock
add
dec
sub
add
pushf
in
push
push
insb
and
and
in
mov
and
or
adc
jo
test
sub
adc
xor
inc
add
inc
pop
leave
pop
and
std
std
add
add
add
and
add
and
dec
inc
dec
cld
and
sahf
std
leave
and
inc
xor
or
adc
dec
dec
incb
push
std
xor
in
fwait
and
add
and
jb
jns
push
and
leave
add
inc
and
and
inc
dec
andb
and
nop
add
cmp
mov
fnstcw
outsb
add
and
xor
push
and
cld
push
add
leave
pop
pusha
mov
iret
or
push
dec
adc
add
adc
xchg
int
and
test
dec
adc
pop
enter
adc
cmp
or
adc
adc
fwait
sub
inc
jo
mov
add
and
les
nop
dec
xchg
repnz
fs
pushf
add
aaa
add
mov
dec
es
test
adc
mov
dec
lcall
je
in
add
cmp
cmp
or
push
dec
mov
add
push
sbb
pusha
add
or
push
fs
sub
xchg
adc
jmp
dec
inc
add
mov
mov
sub
inc
scas
cltd
inc
push
rolb
lea
movsb
mov
inc
aad
adcb
mov
sub
lcall
push
outsl
test
lods
adc
adc
push
jae
pop
xchg
pop
addr16
ret
daa
mov
add
pusha
mov
lahf
push
mov
push
outsb
jb
jge
shrb
mov
js
aaa
and
xchg
xchg
add
dec
cmpsb
mov
jno
push
shrb
push
incl
add
insl
dec
jae
gs
cmp
adc
mov
xchg
aad
mov
push
push
xchg
adcb
jae
adc
mov
jmp
adc
and
mov
xchg
mov
adc
inc
roll
popf
lods
addl
cmp
xchg
addl
cmp
sbb
mov
xor
sub
xor
or
fcmovne
fidivrs
es
stos
in
enter
inc
cmp
cmp
lcall
push
int
push
mov
pushf
push
dec
shll
inc
pop
mov
xlat
je
insb
test
lret
xchg
pop
frstor
clc
dec
xlat
jmp
cmc
leave
add
inc
inc
jmp
or
add
xor
push
push
pop
pop
adc
stos
or
ja
or
mov
inc
add
push
add
popa
int
push
popa
or
mov
push
jne
jae
pop
inc
fists
scas
punpckhbw
jbe
cmp
sub
and
fildll
push
adc
jmp
lds
sbb
adc
pusha
fadd
sbb
adcb
jle
xchg
sub
jnp
imul
push
pop
call
adc
or
adcb
pop
jns
pop
add
sub
popf
gs
push
jns
inc
xor
xor
pop
stos
jo
adc
outsb
dec
lret
stc
aas
inc
imul
pushf
outsl
sbb
daa
add
loope
add
in
adcb
xor
jo
add
mov
pusha
jo
dec
leave
int3
add
xor
loope
shll
add
add
repz
jne
cmovns
add
decb
gs
jae
ja
inc
mov
or
dec
inc
insl
mov
adc
mov
dec
pop
adcl
cmp
cmp
xor
jne
lea
jecxz
inc
and
pop
movsb
jmp
xor
jae
and
mov
movsl
popa
and
add
mov
sbb
or
fucomp
mov
outsb
es
push
sti
pop
gs
sub
out
add
jb
cmp
mov
pop
xor
xor
add
mov
scas
imul
insb
popf
xchg
pop
dec
or
sbb
jo
popf
addr16
fstpl
rcrb
sub
shlb
add
ss
push
sub
or
mov
push
sub
dec
dec
imul
push
daa
mov
lahf
sbb
mov
mov
outsl
pcmpeqw
jae
mov
or
xor
inc
push
fistpl
mov
sbb
mov
inc
push
mov
push
arpl
mov
xchg
out
add
dec
adc
and
pushf
outsl
adc
cmp
push
xor
xor
add
and
xor
xor
mov
aad
pop
xor
xor
xor
xor
xor
cld
xor
fisttpll
ss
ss
push
icebp
pop
sti
ss
sbb
cmp
decl
lds
xor
cmp
cmp
subb
ljmp
fcos
test
add
jg
cmp
cmp
cmp
cmp
loope
in
sbb
jg
xchg
lahf
cmpsl
fstpt
pop
aas
insb
aas
cmpb
aas
lahf
cli
mov
aas
mov
fidivrl
aas
test
fwait
bound
jno
jp
mov
jp
aaa
test
scas
sub
xor
ja
mov
mov
fwait
in
aaa
mov
push
or
pushl
lret
xor
xor
xor
pop
je
fildll
ficoml
test
xor
xor
xor
xor
xor
and
insb
xor
out
xor
ja
mov
dec
push
pop
arpl
jne
add
ss
rorl
fidivl
loopne
add
add
and
sub
aaa
sti
test
add
lret
add
fstpt
push
adc
sub
pop
sbb
popf
and
cmp
bsr
pop
into
or
push
and
and
push
dec
dec
push
scas
add
add
stos
add
mov
push
test
pusha
push
ret
mov
add
jbe
mov
mov
sbbl
mov
test
test
fcmovu
insb
fmuls
xchg
dec
sbb
mov
add
xchg
mov
sub
addl
lcall
shll
push
add
fwait
inc
daa
clc
add
pandn
push
mov
sub
push
cmpsl
sbb
mov
and
sbb
add
add
and
add
jns
inc
add
sbb
mov
mov
add
and
nop
mulb
jmp
cmpl
sbb
adc
or
inc
mov
sbb
shrb
clc
sbb
add
and
jl
add
add
add
add
add
add
add
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
