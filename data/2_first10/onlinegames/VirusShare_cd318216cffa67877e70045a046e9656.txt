sbbl
mov
iret
incl
xchg
gs
imul
xchg
sbb
in
fcmovnbe
lds
stos
fwait
xorl
lret
mov
pop
dec
aaa
sub
cltd
les
xchg
gs
add
mov
incl
jmp
add
mov
lea
rcrl
js
js
xchg
repnz
stos
mov
out
adc
add
lcall
lea
cwtl
lcall
lcall
mov
imul
xchg
fwait
call
cwtl
xchg
xchg
sahf
xchg
fwait
call
inc
test
cwtl
popf
mov
int
rcrl
cmpsl
lcall
cli
adc
lock
lock
imul
mov
xchg
clc
test
popf
lea
mov
in
add
loope
iret
lret
je
jle
xchg
idivl
inc
lret
fwait
lcall
je
mov
and
add
test
por
scas
lods
cmp
mov
sbb
sahf
aaa
mov
hlt
xor
xchg
cld
xor
xor
xchg
xor
xor
das
hlt
cs
cld
sub
adc
and
mov
les
call
and
and
aam
enter
scas
cld
push
mov
sbb
sbb
and
push
mov
fcoms
mov
enter
or
mov
or
or
pop
or
cld
add
add
xchg
push
xchg
dec
subb
pop
cmp
subl
aaa
out
paddusw
or
add
sub
pop
les
mov
test
je
adc
je
idivl
mov
int3
aas
and
dec
add
jb
addr16
cmp
xlat
stos
scas
test
ljmp
aas
mov
in
ljmp
inc
inc
lret
cmpsb
mov
icebp
repz
out
pop
fsubl
xchg
and
add
xor
cmp
repnz
movsb
ss
jl
jecxz
rorb
insb
ljmp
test
inc
bound
out
repz
notl
je
jbe
stc
pop
cli
adc
ficomps
test
cmp
xchg
stc
orl
xchg
mov
mov
loopne
dec
mov
inc
xor
add
int3
and
or
loop
out
fbld
pop
in
loope
les
pushf
xor
xchg
cld
xchg
movsb
mov
jl
dec
mov
test
jmp
mov
movsb
adc
fdivrs
mov
jge
scas
jg
ret
mov
movsb
pop
das
dec
mov
push
jmp
pushf
mov
repz
dec
dec
lret
xor
in
pop
scas
jae
ds
jae
scas
sub
iret
in
xor
xchg
push
shl
mov
call
bnd
repz
xchg
nop
jp
cmpsl
mov
testl
loopne
or
pop
in
inc
repz
dec
cmp
dec
cmpsl
sti
movsl
iret
and
jmp
jecxz
inc
fwait
lock
pop
mov
fistps
xchg
mov
jl
ss
cmp
mov
out
mov
hlt
negl
jnp
dec
pushl
jmp
pusha
imul
ret
dec
push
inc
and
dec
and
repz
push
jp
repnz
out
mov
in
stos
jmp
outsb
out
stc
jne
sub
mov
mov
cmp
loopne
sbb
cmp
stos
dec
adcl
std
ljmp
iret
jmp
lock
ljmp
loopne
std
fildl
jb
push
stos
in
xchg
add
mov
inc
sub
mov
mov
movsl
in
mov
aad
xlat
inc
int3
fildl
dec
test
dec
inc
aam
pop
or
outsl
ljmp
push
pop
and
cmp
ds
mov
scas
and
mov
lods
cmp
call
test
aam
fildll
sub
stos
fsubs
arpl
sbb
shr
pop
dec
shrb
push
adc
das
test
inc
mov
mov
sti
aas
into
add
and
jb
jae
mov
mov
or
lods
test
jb
dec
dec
sti
jg
pop
out
aas
inc
out
adc
jb
push
repnz
cltd
push
inc
xor
lods
push
xchg
xor
inc
xchg
or
jne
cld
cmp
adc
lret
cmp
jl
dec
mov
andl
test
sub
cmp
and
int
xor
cmpsl
pop
jmp
mov
pop
iret
test
adc
cmpsl
rorl
aad
jnp
das
lds
call
jne
cmpsl
mov
or
xchg
mov
test
cmpsb
push
push
add
leave
mov
cmpsb
repz
cmp
test
and
add
push
and
fimuls
pop
cmpsb
gs
iret
cld
mov
cmpsb
gs
lcall
cmpsb
inc
idiv
mov
xchg
cmc
mov
hlt
inc
hlt
stc
xor
jl
xor
dec
cli
hlt
adc
jb
scas
lods
pushl
cld
ljmp
ss
imul
pop
sbb
scas
or
repz
ljmp
hlt
cmp
mov
shll
sub
stc
adc
jb
stc
xor
xor
shll
pushf
xor
inc
xchg
ja
cs
lods
repnz
dec
repnz
inc
cli
add
mov
inc
addr16
push
xchg
sub
jb
ljmp
test
cld
add
mov
ds
aas
cli
in
inc
lret
cmp
inc
jnp
lea
pushf
cmp
lock
add
add
xor
popf
xor
fmull
pop
add
mov
lret
int3
sub
sub
and
push
sub
xchg
repnz
add
lea
addr16
push
ljmp
cltd
add
push
or
fsubrl
or
outsl
xlat
das
xchg
inc
push
xchg
inc
stc
sub
inc
xor
ss
xchg
dec
test
add
fcoml
hlt
leave
imul
dec
or
xchg
mov
nop
ror
mov
xchg
mov
dec
insl
iret
rolb
inc
stos
mov
xchg
hlt
xchg
push
out
fwait
pushf
or
hlt
dec
ds
leave
popf
rorb
lret
cli
je
add
xchg
arpl
bnd
mov
inc
sarl
add
in
mov
cmp
inc
lahf
push
cmp
xchg
push
jl
aaa
xchg
jae
dec
jmp
stc
push
mov
nop
int3
aaa
cmp
lcall
or
popf
shl
xchg
cld
ret
mov
pop
loopne
cltd
mov
ss
lahf
stc
mov
popf
inc
add
jb
scas
stc
pop
inc
scas
pushf
inc
pop
mov
pop
push
ret
out
mov
lods
fadd
fwait
scas
mov
sbbl
mov
loopne
sbb
push
ds
mov
roll
mov
adc
movhps
ret
inc
jle
in
out
push
or
xchg
pop
int3
cmp
push
out
jmp
inc
add
fdivrp
ret
sub
mov
jmp
je
loopne
hlt
xor
fidivrl
fidivl
xor
hlt
lock
xchg
outsl
out
imul
xorb
jmp
push
hlt
sar
int
and
cmpsl
call
je
repz
je
mov
push
cmp
arpl
fisttps
in
jnp
mov
scas
jp
aam
dec
fwait
ds
mov
mov
xchg
jge
stos
aad
mov
mov
fildll
scas
mov
mov
jmp
call
xchg
out
std
stos
stos
es
incl
fcom
fwait
cld
ljmp
pushl
ja
repz
sti
cld
add
inc
loopne
stc
aas
stc
mov
loopne
icebp
shr
nop
add
dec
divb
fiadds
mov
stos
xchg
xchg
inc
lea
add
sahf
xchg
xchg
nop
mov
popf
lcall
std
mov
nop
fwait
lcall
repnz
fstpt
or
cld
push
pushf
rorb
clc
cmp
data16
dec
and
or
data16
adc
inc
data16
clc
lods
xchg
pushf
xchg
and
out
or
pop
scas
mov
out
dec
inc
adc
jbe
dec
icebp
fdivp
stc
repz
cmovb
out
cld
cli
clc
std
rcll
clc
scas
repz
daa
ds
out
clc
stc
outsl
das
jb
pop
test
mov
fs
loope
leave
or
popf
mov
popf
aas
jg
rcrl
lcall
jmp
pop
cmp
lea
adc
jecxz
les
hlt
hlt
fdivrs
pop
inc
into
cld
jae
sbb
leave
jge
add
loopne
ror
mov
xchg
cld
push
dec
cmp
adc
mov
daa
std
iret
add
aad
mov
mov
mov
lret
mov
dec
inc
xor
sub
mull
mov
mov
test
fwait
stos
inc
adc
mov
lret
lcall
imul
xchg
jge
scas
movsl
xchg
jmp
mov
and
jge
dec
cltd
movsb
outsl
add
iret
int
aad
int3
sub
mov
and
ret
mov
in
insb
shll
scas
popl
inc
xlat
jle
xlat
jp
sub
xchg
out
repz
xchg
out
test
data16
lret
push
shl
in
out
repz
leave
sti
sti
shll
insb
cli
jmp
aam
jmp
outsb
jmp
cmpb
in
sbb
cld
jmp
repz
mov
bnd
sbb
jmp
cld
jmp
out
daa
aam
jecxz
mov
pop
and
daa
xor
dec
mov
cmc
add
ficoml
int
test
or
test
xor
ret
mov
jl
out
jne
cmp
stc
mov
test
scas
cmp
sub
lock
inc
add
rcl
cmp
stos
pushf
and
in
lahf
dec
scas
stc
pop
fucomi
xchg
out
jnp
mov
sub
inc
lahf
js
aas
sub
mov
rorb
mov
pop
sbb
in
gs
xor
sbb
pop
add
lret
sbb
push
fbld
repz
int3
and
mov
fwait
fwait
dec
imul
lret
jg
les
out
lods
pop
pop
aaa
dec
and
in
inc
stc
pop
rolb
mov
jmp
add
dec
xlat
mov
loop
sti
notb
mov
out
mov
mov
scas
outsb
sbb
lahf
jnp
mov
lock
faddl
inc
ret
inc
out
idivl
pop
cli
testb
or
cmp
cld
mov
insb
int3
jne
in
test
add
adc
cwtl
dec
out
je
jns
mov
inc
mov
pop
fwait
rclb
bound
xchg
xchg
mov
loope
adc
lcall
inc
out
cli
sbb
test
dec
pop
fidivrs
test
push
lods
adc
mov
ret
mov
hlt
cs
inc
jbe
add
int3
inc
sub
hlt
jle
pop
test
js
dec
lock
test
adc
push
xchg
aad
add
jbe
mulb
cmp
and
push
or
mov
shrb
scas
add
cltd
iret
scas
int3
imul
sti
dec
adc
cmp
mov
cmp
fstpt
push
in
inc
or
cmpsb
in
add
test
lret
shl
cmc
xlat
mov
mull
xchg
std
pop
stos
adc
ret
sub
pop
iret
loop
dec
pop
js
cli
push
push
bound
loop
fdivr
in
cmc
mov
and
mull
fcompl
sbb
inc
dec
and
lahf
lock
movsl
cli
dec
rorl
mov
mov
mov
in
repz
ljmp
cwtl
loopne
lcall
cmp
icebp
dec
repz
ret
addr16
pusha
jno
cli
lds
lods
pop
ret
in
cmp
sub
test
out
repnz
mov
cltd
push
sub
inc
adc
mov
cmp
imul
lahf
xchg
pop
sar
fwait
pop
test
cmp
loope
jbe
clc
sbb
fwait
nop
cmpsb
imul
mov
imul
rcll
imul
lcall
lret
and
inc
xchg
and
cwtl
cld
and
and
pop
lret
push
inc
in
pop
sbb
outsl
add
add
xchg
push
ret
divl
scas
cli
daa
scas
in
jl
mov
jl
jmp
lds
and
cli
pop
xchg
imulb
scas
lahf
push
shr
sub
xor
pop
sbb
clc
xor
lods
lods
cld
mov
cmp
adc
aad
push
out
mov
jns
lahf
out
jge
jae
pop
mov
cmp
subb
ljmp
sub
aam
sti
cmp
fcomi
xchg
shlb
dec
mov
mov
or
cltd
jle
and
ret
fldcw
mov
shl
mov
popf
pusha
jbe
and
or
mov
mov
lock
sub
out
xorb
or
adc
mov
mov
adc
testl
loope
xchg
and
and
cld
and
mov
scas
mov
bound
cld
in
aad
xchg
mov
roll
cld
sahf
in
idiv
jl,pt
std
scas
and
pop
int
push
loopne
clc
jl
sti
jl
adc
sbb
dec
jbe
cmp
mov
mov
jbe
adc
dec
fwait
push
mov
repz
cli
je
ja
pop
inc
cmp
jl
out
jno
mov
adcl
nop
lock
stc
je
mov
ds
mov
je
and
and
imul
out
cltd
outsb
mov
cltd
out
test
and
pmaddwd
mov
imul
hlt
sti
mov
mov
loope
std
mov
sbb
leave
lret
imul
testb
xchg
mov
mov
cld
mov
test
xchg
mov
jnp
mov
and
cld
or
add
dec
push
cmp
mov
dec
inc
hlt
add
mov
and
hlt
in
out
sbb
je
add
push
cld
cmp
push
pop
cld
mov
rcl
fstpt
and
jecxz
push
cmpsb
xrelease
xchg
push
scas
jbe
mov
mov
xchg
mov
int3
je
adc
repz
jecxz
cmp
push
jp
or
and
shr
xchg
in
xor
enter
jnp
mov
pushf
jae
sub
cmp
lods
arpl
fmull
ljmp
fmuls
xchg
xchg
sti
xchg
lods
xor
lock
sbb
mov
insb
fiadds
into
cmp
cmc
notl
scas
add
imul
ja
add
daa
fcmovnb
cmp
loop
fnstenv
mov
or
movsb
mov
sub
mov
in
lock
iret
je
dec
dec
mov
cld
pop
jmp
cltd
xchg
fldl
mov
loop
aaa
jmp
jmp
das
enter
inc
pop
mov
pop
cmp
sarb
jge
mov
inc
loopne
scas
sti
negl
inc
mov
arpl
mov
or
test
test
jg
xlat
lcallw
xchg
sub
mov
clc
pop
push
push
hlt
cli
cltd
cpuid
add
mov
notl
mov
orl
jmp
imulb
aaa
bound
je
pushf
dec
iret
mov
fdivr
repnz
pop
dec
mov
sbb
mov
jle
xor
rcrl
jmp
scas
pop
out
push
mov
or
inc
sti
js
cli
repz
cli
lods
mov
ficoml
or
cli
mov
cmp
cmp
cmp
aaa
cli
inc
in
push
dec
pop
jle
push
aas
fstpt
dec
push
mov
xor
in
int3
test
rcl
in
dec
xor
in
in
mov
cld
leave
jmp
in
push
filds
jbe
cld
movsb
lret
mov
mov
inc
mov
xchg
fwait
xchg
lcall
nop
pushf
mov
nop
add
repnz
fwait
mov
popf
lea
sbb
nop
aas
or
mov
lcall
mov
rol
cmpsb
in
je
icebp
sahf
mov
fldl
xchg
mov
xchg
lock
in
xchg
mov
sub
hlt
cld
loop
jnp
test
add
rcrl
test
xchg
jecxz
lea
cwtl
fidivs
mov
xchg
mov
cli
xchg
es
adc
push
aam
lcall
in
cld
scas
mov
xchg
xchg
out
pushl
jb
xchg
nop
inc
adc
jns
mov
testl
mov
adc
mov
cmp
push
xchg
dec
sahf
dec
mov
mov
lock
or
lock
jo
out
jb
shlb
sub
das
inc
ljmp
vfrczss
lods
cmp
xchg
xchg
repz
mov
popf
push
loop
ds
jmp
jo
int
xor
jmp
les
shrb
out
xchg
sahf
mov
out
fsubrp
mov
adc
adc
or
les
xchg
push
inc
pushf
shl
test
mov
lods
mov
cmc
hlt
lock
inc
push
std
fmuls
and
cltd
cmp
lods
in
call
inc
mov
xchg
lcall
mov
mov
and
jp
lahf
movsb
ror
mov
pushf
nop
mov
es
push
sahf
sbbb
stos
mov
cltd
xchg
adc
dec
xchg
pop
lods
ljmp
sbb
xchg
inc
mov
sahf
pushf
jne
call
ljmp
push
lcall
in
les
std
jp
pop
out
outsb
jbe
and
xchg
iretw
mov
in
data16
mov
xchg
lock
fsubrs
idivb
std
testb
mov
mov
into
lret
test
fdivs
mov
ljmp
add
test
ja
push
arpl
xor
pop
into
add
ljmp
add
add
int
int
int
int
int
int
int3
ljmp
int3
add
add
mov
pusha
int3
push
int3
add
icebp
lret
loopne
lret
jae
gs
push
lret
out
lret
movsl
lret
jp
add
or
lret
sti
leave
out
leave
out
pushf
leave
popa
leave
cmp
sub
adc
pop
cmpsl
add
add
leave
jmp
in
fcmovne
aam
leave
enter
enter
enter
enter
fadd
int
cmpsb
add
add
sahf
xchg
movl
inc
loop
mov
les
add
add
test
ret
rol
ret
xchg
ret
dec
ret
inc
ret
aas
ret
fadd
enter
ret
push
add
ret
jno
imul
ret
push
ret
or
jp
add
subb
and
cld
push
sbb
lahf
insl
jbe
clc
push
mov
jbe
lods
mov
jbe
adc
inc
dec
push
jbe
fmull
test
push
jbe
clc
movsl
or
push
popl
jbe
or
shl
and
cmpsb
or
inc
push
xchg
std
push
lock
cld
in
call
pusha
lock
xor
pop
dec
mov
iret
pop
inc
cmp
ds
stos
push
jmp
sub
or
std
fdivrs
out
jge
stos
jb
lods
movsl
lock
insb
lahf
popf
je
aas
add
test
aas
enter
test
cmc
cld
jne
lret
bound
mov
aad
imul
mov
aam
hlt
stos
cld
mov
sub
popa
push
lcall
lds
push
int
addr16
dec
xor
xchg
gs
and
lret
mov
lret
mov
xchg
test
mov
jne
dec
cmp
mov
or
push
insl
cld
gs
xchg
gs
imul
sub
xor
add
mov
lret
mov
stos
popf
lea
lret
mov
pop
mov
rorl
notl
push
lock
cmp
mov
inc
pop
outsl
jge
sahf
sub
mov
mov
push
in
mov
dec
cld
sub
cltd
sub
clc
or
add
dec
clc
dec
lret
mov
dec
xchg
inc
cld
cmp
sub
mov
and
cmc
cld
mov
lret
mov
loope
int
mov
scas
movsl
fwait
xchg
xchg
int3
mov
jg
incl
and
in
sub
icebp
push
inc
clc
loope
jns
and
sbb
jmp
leave
mov
mov
movsl
fld
xchg
dec
jg
dec
iret
rorb
std
in
mov
push
nop
mov
mov
in
stos
or
or
mov
xchg
stc
cmpsl
imulb
adc
repnz
out
test
mov
mov
iret
sub
cltd
pushf
mov
push
sahf
popf
cmpsb
lods
mov
stos
test
lods
mov
jg
and
cltd
mov
mov
imull
pop
mov
push
scas
dec
int3
fbld
rcrl
loopne
ffreep
pop
testl
sub
out
repz
push
lahf
push
lahf
mov
mov
lahf
jl
mov
aas
fimuls
std
fistps
cld
and
mov
cmpsl
and
js
dec
or
sarb
mov
xlat
dec
fwait
jnp
cld
mov
cmp
inc
jl
adc
div
outsl
into
lahf
clc
notl
faddl
scas
scas
lea
xlat
add
cld
mov
insb
mov
cmp
dec
jmp
loopne
fidivrs
incl
loop
cmp
jg
iret
stos
stc
sub
push
das
fimull
clc
fucomip
mov
int
lock
test
xchg
pop
push
aam
mov
sub
lock
add
mov
lcall
dec
clc
mov
loopne
aam
loopne
add
cmpsl
inc
add
fbstp
hlt
mov
cmp
mov
cwtl
lock
cmpsb
dec
mov
clc
iret
int
popa
repnz
cmpsl
cld
fisubrl
xlat
or
cld
mov
lods
int3
test
out
dec
mov
stos
adc
jmp
add
mov
cld
into
fidivrs
int3
pushf
xchg
xchg
fs
inc
mov
cmp
add
pop
push
out
rcrl
jbe
mov
xchg
cld
loop
rorb
pop
xchg
fildl
fcomi
hlt
dec
filds
jb
fistl
je
scas
push
adc
mov
cmp
test
adc
mov
xchg
cmc
jmp
cmc
je
ljmp
and
jl
mull
jecxz
test
je
jmp
scas
sti
je
rcl
xchg
push
test
clc
std
loopne
shl
push
js
in
push
inc
inc
sti
cld
mov
lock
lds
cmp
add
mov
stos
cmp
pushf
cmp
fwait
jb
or
add
idivl
aam
jl
loopne
fnsave
loopne
outsl
out
in
mov
and
inc
in
ficoms
inc
jmp
in
test
sub
in
enter
xchg
notl
loopne
xchg
in
xchg
fists
loopne
test
in
aam
xchg
mov
add
or
stos
mov
out
add
aaa
stos
mov
dec
sub
mov
push
mov
jne
fs
test
testb
inc
outsl
sti
pop
fnstsw
lahf
stos
in
pop
xor
cmp
sub
pop
cmp
mov
jecxz
add
into
and
inc
adc
les
mov
roll
out
jp
lock
hlt
sub
dec
call
lock
js
sub
add
hlt
cmpsl
cld
dec
sbb
arpl
mov
in
psubq
loopne
xlat
ret
in
movq
add
scas
cmc
mov
sbb
xchg
std
in
lcall
test
imul
xchg
xchg
xor
ljmp
inc
sti
xchg
sbb
imul
imul
xchg
int
enter
clc
scas
cs
int3
pop
out
and
dec
pop
push
dec
add
shll
pop
lock
sarb
push
or
jecxz
ja
scas
dec
inc
fcomp
sahf
out
inc
dec
adc
test
mov
scas
pop
or
xchg
mov
test
xchg
mov
push
inc
add
mov
scas
pmaddwd
cmpsb
movsl
repnz
daa
add
sti
lahf
mov
cpuid
mov
subl
les
mov
jl
sti
mov
adcl
mov
or
je
push
jbe
fnstsw
adc
insl
cmp
sbb
xchg
pop
xchg
stc
xchg
push
xchg
push
hlt
xor
and
gs
ja
jmp
jle
jp
adc
movlps
inc
push
sub
leave
test
sub
inc
outsb
xchg
pop
add
adc
inc
lods
ds
std
pop
add
jbe
dec
jb
pop
fisubrs
or
sbb
ja
je
pop
sbb
pop
sbb
and
cli
aam
idivb
adc
jns
push
jbe
add
lret
pop
cmp
jbe
dec
sbbb
inc
out
mov
push
mov
cmpsb
mulb
faddl
in
stos
or
pop
movsb
popf
mov
jbe
xchg
shr
and
dec
pop
mov
jp
push
adcb
mov
int3
add
ja
dec
jmp
out
jmp
adc
pop
test
and
dec
out
mov
inc
cmp
lock
mov
clc
mov
lock
shl
clc
f2xm1
fildl
repnz
cli
jl
push
mov
cwtl
loopne
repz
adc
out
out
fbstp
arpl
std
adc
sti
jecxz
test
imul
jb
and
mov
cmp
mov
sub
das
push
mov
cmc
in
shr
into
xor
iret
shlb
out
cmp
popa
jle
out
cmp
mov
push
sbb
mov
sub
mov
mov
aad
add
xchg
sub
xchg
out
sbb
cmp
push
nop
enter
sub
jl,pn
cmp
cmp
repz
and
repnz
repz
idivb
and
mov
add
test
xor
rcrl
jb
rep
fdivs
xchg
int3
inc
adc
enter
mov
and
arpl
icebp
mov
negl
jmp
sti
fiadds
out
jge
pushf
xchg
fisttpl
jecxz
xchg
inc
lock
mov
jle
xchg
repz
push
cmp
icebp
jne
dec
icebp
loopne
repnz
repz
loope
call
lea
addl
enter
lods
fs
mov
xchg
mov
jae
fcomip
xchg
jecxz
jnp
in
scas
xchg
out
out
movsb
mov
dec
out
xchg
in
mov
xchg
iret
inc
iret
xchg
dec
ss
notb
jg
imul
lds
jecxz
into
inc
sub
nop
xor
jle
jmp
add
xor
les
inc
rcll
scas
iret
or
iret
mov
lret
push
repz
fisttps
ljmp
pushf
stc
jecxz
imul
sti
pop
loopne
cmp
movsl
test
xchg
lahf
jecxz
add
fistl
sub
jmp
fnstsw
xlat
push
jecxz
andb
loope
icebp
mov
imull
aad
stc
and
test
loopne
clc
popa
into
test
sub
mov
cmp
lock
sbb
jb
sub
and
test
cvtps2pd
cltd
pop
inc
aas
repz
inc
dec
leave
dec
cmp
inc
in
or
inc
ja
pop
js
mov
jg
call
mov
xor
pop
dec
mov
lods
inc
icebp
inc
dec
repnz
fsubl
lock
out
arpl
cmp
jp
stc
or
xlat
in
jmp
outsb
xor
mov
loop
push
mov
push
sbb
sbb
dec
fstpt
jecxz
aas
and
inc
sub
adc
cli
repz
testl
scas
add
cmpsb
mov
dec
fists
clc
pop
dec
push
dec
rclb
xlat
out
mov
test
std
movsb
xchg
xchg
or
mov
loop
mov
mov
sub
cmpsb
aaa
les
mov
cld
jno,pt
aaa
push
sub
idiv
sub
in
je
adc
test
jl
mov
add
pop
adc
jl
std
test
add
movsb
in
lds
ljmp
jns
push
aam
insb
lods
jb
mov
add
out
adc
mov
stos
movsb
fwait
iret
dec
xchg
cli
add
jne
mov
jb
enter
mov
bound
std
in
fiadds
jne
cmc
pop
or
cld
mov
in
lcall
sub
sub
jmp
push
pop
into
sbb
cld
cmp
enter
and
pop
loopne
add
clc
idiv
cmp
iret
jne
movsb
test
push
mov
les
sbb
std
xchg
mov
aaa
into
xchg
xor
out
jecxz
xchg
hlt
les
jp
mov
iret
jecxz
cld
aaa
jg
or
into
cld
lea
iret
sbb
insl
iret
mov
test
hlt
mov
mov
js
mov
aaa
cld
xchg
sub
outsl
iret
addr16
imul
mov
cmpsl
movb
leave
jecxz
jb
jb
repz
fisubs
sub
out
dec
cmp
ss
ljmp
mov
jge
mov
sbb
cli
push
push
adc
clc
aam
inc
adc
in
or
repz
add
arpl
ljmp
push
scas
inc
aaa
pop
out
sub
iret
sub
fs
repz
push
sub
out
xchg
jmp
mov
out
or
iret
outsb
add
xchg
rcll
inc
lock
add
or
mov
or
gs
cltd
or
gs
nop
push
fldl
adc
bound
mov
add
iret
jle
aaa
mov
movsb
push
fdivr
iret
iret
jle
in
pop
stos
imul
jnp
fistpll
test
jg
mov
pop
adc
lret
adc
movb
inc
std
pop
orl
mov
push
sub
or
mov
mov
rorl
add
jmp
mov
jnp
les
add
mov
mov
scas
adc
mov
fs
add
mov
mov
daa
lods
mov
pop
inc
mov
xchg
jle
push
sahf
jmp
pusha
jecxz
cmp
and
andl
test
cwtl
das
cli
adc
cmpsl
xor
add
lcall
push
mov
inc
or
add
lea
mov
pop
hlt
cmp
ja
movsb
mov
out
jnp
add
and
mov
mov
ljmp
xor
mov
nop
push
fistps
add
mov
hlt
sti
jb
enter
hlt
aas
push
cli
push
out
add
xor
jg
mov
hlt
cmp
cmp
out
aaa
ds
idivl
fisttps
cmp
or
sbb
push
hlt
cmp
roll
xchg
push
xchg
aaa
imul
lock
and
jle
sarl
xor
jns
dec
add
push
out
mov
jnp
popa
test
push
clc
jecxz
sub
push
cli
mov
repz
dec
arpl
idiv
arpl
and
cmp
out
repz
push
fistps
in
aaa
fdivrl
cmp
test
ds
push
das
or
jl
stc
out
hlt
jmp
ficompl
jge
dec
push
std
pusha
fdiv
sti
ficoml
mov
adc
je,pt
inc
and
aam
sub
sub
cld
das
cmp
jg
cltd
mov
ljmp
dec
ja
sti
jl
cld
jns
iret
lret
mov
inc
inc
jne
ret
mulb
enter
fisubl
xchg
mov
nop
popf
dec
icebp
push
jle
rclb
xor
out
inc
daa
and
loopne
adc
adc
in
sub
cmp
aam
into
sti
ficompl
sub
pop
sti
scas
hlt
mov
scas
inc
aam
movsb
sbb
ja
mov
data16
mov
repnz
ja
hlt
pop
repz
add
adc
jg
decl
std
int
mov
cli
aaa
xor
loop
jl
loop
cs
aas
mov
inc
cli
cmp
lock
cli
mov
fwait
les
mov
pop
lock
push
fstp
push
lea
int
push
stc
adc
dec
stos
push
in
pop
mov
pop
movsl
push
mov
test
nop
add
add
ss
lock
into
fnstcw
sti
into
mov
mov
mov
mov
sub
sub
mov
jbe
xchg
add
scas
imul
mov
int
fucomip
repz
sahf
in
std
fidivrl
mov
jmp
pop
jmp
mov
add
add
ds
jb
jl,pn
rol
mov
add
or
jbe
aaa
loop
mov
push
mov
scas
daa
jne
repz
pop
jmp
sbb
mov
stc
call
mov
sub
cmpsl
add
jne
aas
sti
ds
and
in
mov
and
das
mov
lret
or
lods
sbb
cmp
popf
push
movsb
outsb
mov
cli
xchg
in
js
mov
add
sub
add
sub
or
add
out
jb
call
je
ds
dec
fnstsw
sti
cld
cltd
inc
add
mov
sub
shl
or
cld
out
jb
enter
mov
or
adc
enter
cmp
test
mull
adcb
jmp
arpl
and
cmpsb
adc
ds
jmp
pcmpeqb
fmull
or
push
inc
dec
mov
pop
ror
adc
sub
dec
pop
inc
xor
hlt
or
or
xchg
movsb
mov
inc
cld
and
in
lock
dec
rclb
push
sbb
stos
loop
test
and
sub
inc
dec
shl
ficoml
cld
in
stos
in
aad
js
and
and
sbb
jmp
jge
je
and
sahf
sub
and
push
push
mov
mov
dec
das
rcr
faddl
ljmp
into
loope
xor
mov
push
adc
scas
inc
ljmp
jl
dec
ljmp
jl
dec
lret
lret
pop
daa
daa
addr16
adc
loop
xchg
dec
jmp
das
and
adc
push
or
dec
pusha
and
push
add
je
pop
mov
cmp
jg
aas
sti
dec
movsb
stos
mov
or
cld
aad
daa
daa
in
jl
sub
das
fisttpll
mov
mov
fildl
and
stos
cmp
fucomp
outsl
ret
mov
imull
lret
and
sub
and
add
stos
jns
push
push
dec
hlt
push
dec
adc
stos
add
add
sub
xor
in
mov
cld
clc
pusha
arpl
jno
xchg
sbb
mov
xchg
jp
out
mov
dec
sub
movsl
das
cmp
jmp
adc
inc
sbb
fdivp
dec
mov
ds
dec
adc
ljmp
sub
stos
je
popf
or
loop
jns
hlt
dec
mov
hlt
sub
andb
cltd
mov
aas
mov
mov
xchg
xor
mov
daa
cld
or
adc
mov
movsl
mov
adc
lahf
xchg
or
adc
push
push
cmp
xchg
pop
xchg
push
pop
fcoml
pop
dec
mov
in
xchg
cmp
push
or
shrb
pop
jae
push
sub
out
sahf
je
daa
dec
jae
adc
jns
jmp
std
lahf
jo
das
jo
dec
or
fisubl
jle
pop
daa
sub
icebp
pop
jp
add
daa
hlt
insb
and
dec
shll
sub
inc
xchg
lcall
inc
movsb
lds
and
das
dec
sbb
dec
push
xchg
xor
ficoms
outsb
pop
dec
cmp
cmp
clc
enter
cmp
in
cmp
aad
imul
xchg
js
sub
sub
icebp
out
adc
negl
es
jns
mov
mov
je
movsb
out
inc
mull
and
push
daa
test
xchg
jo
dec
cmovle
and
pop
pop
adc
fucomi
mov
cmp
or
je
imul
jnp
es
nop
cwtl
sub
icebp
movsb
sbb
jo
mov
test
je
jne
aad
jae
xchg
push
and
mov
das
out
push
mov
jb
lahf
jecxz
sti
push
add
and
push
mov
add
jle
mov
cs
ret
hlt
jge
shl
sbb
testl
cs
dec
jle
mov
int3
lret
inc
pop
pop
mov
sbb
fildl
mov
pop
xchg
and
int3
dec
adc
cmpsb
jae
out
mov
add
imul
xor
mov
lea
or
or
loope
mov
mov
or
mov
ror
repz
cmp
jg
sbb
sub
iret
cmp
loope
enter
or
cmp
xlat
cmp
call
adc
xchg
cmpsl
mov
cwtl
int3
and
scas
dec
dec
aas
iret
adc
and
sbb
and
push
xchg
pop
xchg
js
cmpsb
inc
ja
adc
movsl
in
lods
shl
mov
and
cmp
inc
push
and
inc
or
bound
pop
sbbl
adc
xchg
mov
adc
mov
lcall
jl
pop
xchg
mov
insb
jle
sub
out
mov
sahf
and
das
in
push
stc
hlt
loope
repnz
hlt
jb
out
int3
jg
dec
stc
insb
sbb
mov
jmp
in
pop
inc
lock
pushf
xchg
xor
out
test
xchg
xchg
pop
jno
lea
insb
add
adc
and
int3
dec
loop
into
push
push
sub
and
in
shrb
cmp
movsb
lcall
xlat
scas
sub
sub
adc
push
in
insl
xor
jo
mov
cmp
cmp
mov
roll
adc
lock
or
jmp
ret
xchg
loop
out
adc
mov
lret
out
sbb
adc
mov
push
and
loop
test
push
nop
mov
stc
test
in
ror
leave
add
arpl
pop
sbb
add
cmc
test
aas
das
jb
cmp
loope
mov
dec
pop
adc
loopne
out
divl
cli
inc
jge
lods
push
sub
sbb
lds
cmp
or
daa
pop
lret
inc
lret
shlb
daa
pop
and
jp
int3
cmp
aad
sub
hlt
cltd
lock
dec
jp
xorb
jns
je
lods
mov
mov
movsb
adcb
mov
pop
and
pop
scas
stos
je
repz
jl
push
repz
add
xchg
lahf
inc
fidivrs
andb
mov
mov
aaa
test
xchg
xchg
gs
scas
or
mov
enter
addb
pop
cmpsl
add
dec
scas
pop
repnz
jb
xchg
jge
mov
cmpsb
mov
mov
scas
inc
adc
xor
out
icebp
clc
out
das
bound
and
out
movsl
jge
jb
test
pop
pop
ret
mov
ja
adc
push
clc
cmpsb
lods
inc
mov
xabort
aam
test
add
rclb
movsb
add
mov
mov
jecxz
sbb
xchg
or
pop
xchg
jle
mov
lods
pop
xor
test
cmpsb
in
rcrb
xlat
scas
testb
and
and
inc
xchg
push
inc
std
aas
cmp
jmp
arpl
lods
loope
in
stos
push
dec
mov
stos
push
xchg
lret
sbb
gs
add
xchg
cmc
xchg
pop
lods
dec
lahf
push
mov
leave
fmul
mov
addb
hlt
pop
repnz
adc
in
or
mov
jle
test
loopne
loop
xchg
lods
lods
jmp
lret
pushl
out
or
fisttps
xchg
and
insb
or
fcoms
pop
aam
das
cltd
dec
das
xchg
inc
inc
push
inc
xchg
xchg
cli
sub
sub
and
and
stos
sbb
nop
or
inc
inc
ret
inc
mov
hlt
jecxz
jp
jnp
pop
push
xlat
mov
adc
mov
adc
fidivrs
int
jle
add
sub
rolb
sbb
xchg
xchg
xor
leave
dec
rolb
movsb
xchg
imul
js
fisubs
aas
mov
sbb
mov
clc
iret
and
ror
jl
lret
sub
jae
mul
xchg
je
xor
call
flds
xor
pop
imul
pop
out
cmp
les
and
mov
lahf
mov
dec
call
clc
bound
add
cmpsl
pushl
jb
notb
add
and
sub
scas
loope
push
mov
scas
call
jmp
arpl
arpl
jae
jp
sbb
movsb
lock
dec
test
cld
test
xchg
int
pop
fldt
in
in
test
into
testb
sbb
bound
xor
or
mov
xor
and
push
inc
sti
cltd
loope
lea
lds
add
icebp
pushf
cltd
je
sti
cltd
ret
mov
cli
fdivrl
xchg
inc
ficoml
in
pop
sti
xor
dec
pop
daa
and
sbb
inc
inc
push
clc
mov
addr16
xchg
nop
and
mov
clc
test
adcb
test
mov
in
jle
mov
jno
mov
mov
mov
mov
ret
rorb
push
rclb
dec
cltd
sbb
nop
or
movsb
pop
gs
xor
fildl
mov
push
mov
pop
and
jmp
mov
decl
aaa
jbe
sbb
cli
push
hlt
mov
add
jmp
add
mov
stos
and
aam
mov
adc
outsl
xchg
outsb
stos
bound
xchg
dec
nop
rorl
std
jp
jns
repnz
jns
dec
sbb
sbb
add
out
push
sbb
sub
xchg
jecxz
outsl
icebp
and
cltd
bound
dec
bound
hlt
adc
xlat
test
addr16
add
test
fistpll
mov
lods
cmc
jae,pt
ror
jge
and
dec
fisubl
inc
pop
movb
out
mov
jno
rolb
leave
jl
wbinvd
rol
sar
mov
in
aaa
fwait
iret
std
and
dec
inc
rclb
fwait
mov
adcb
jno
lods
dec
loopne
movsb
cli
and
iret
das
xor
fcoms
cmp
outsl
filds
push
and
pop
je
arpl
jb
cld
arpl
cmc
or
mov
sub
and
dec
fimuls
rorl
and
jmp
and
out
faddp
and
pop
adc
dec
inc
leave
shrb
xchg
fcmovnb
aaa
sbb
dec
lcall
cwtl
fstl
dec
test
leave
orl
clc
clc
pop
jno
cld
sub
cli
pop
xlat
and
jecxz
ffree
add
inc
ret
ffree
fidivrs
push
inc
add
das
shr
inc
jmp
insb
out
test
mov
clc
mov
cmpsl
lods
out
jbe
test
jmp
filds
jecxz
ret
inc
mov
and
dec
cmpl
add
pop
inc
icebp
xchg
xchg
mov
cltd
inc
ja
popf
sub
xchg
mov
push
and
cld
push
mov
xchg
xor
lea
cwtl
dec
test
dec
inc
mov
scas
dec
lea
inc
mov
mov
lea
inc
hlt
inc
faddl
cld
inc
xchg
in
in
push
ja
inc
pop
lcall
xchg
nop
lea
xor
lcall
jmp
int
pop
mov
xor
shll
sahf
xchg
xchg
mov
aad
pop
xchg
inc
xchg
cld
xlat
jp
in
adc
jp
or
aas
sarb
sub
notl
mov
cmpsb
imul
iret
iret
iret
lahf
movsb
imul
imul
jne
mov
push
bound
fildll
test
pop
cmpsl
daa
jp
das
scas
out
aas
rol
sahf
cmpsb
xchg
cmpsb
jg
pop
je
and
out
xchg
out
ret
out
lock
std
adc
gs
das
push
dec
out
call
push
inc
push
sub
cltd
shll
jl
mov
mov
xchg
jne
in
jb
lock
and
dec
jg
mov
pop
mov
bswap
ljmp
add
mov
int
jo
dec
sbb
jb
mov
add
ds
pop
scas
mov
gs
jnp
out
leave
adc
cmp
cs
fldt
leave
aam
sub
jge
test
add
add
jno
mov
jnp
inc
inc
sarb
inc
mov
lahf
mov
lahf
decb
xchg
ds
pop
adc
jecxz
sarl
inc
jmp
les
inc
inc
pop
xchg
pop
stc
sbb
iret
push
js
pop
cmc
lret
jle
out
enter
shl
int
mov
add
mov
pop
sub
iret
jp
lret
inc
lret
ret
js
repz
out
mov
mov
push
mov
and
out
sub
jne
jmp
jmp
cmp
ja
outsl
fisttps
scas
xor
fucom
notl
or
ja
int3
sbb
enter
xchg
cli
hlt
movsb
mov
dec
imull
jge
lds
sub
xor
pop
adc
sti
cld
cmpsb
inc
dec
iret
dec
jg
testb
in
pushl
inc
push
mov
flds
cmp
jae
out
nop
inc
arpl
inc
incl
cmpsb
jmp
fisubrs
fdivrs
inc
aad
sti
ja
pop
sti
sbb
cmpsb
mov
in
cwtl
std
and
cld
movsl
dec
mov
dec
xchg
pop
jmp
and
mov
xchg
adc
repz
cli
in
mov
mov
xchg
insl
cwtl
and
and
in
jg
clc
and
rcrl
sbbl
cltd
pop
popf
pop
lcall
mov
inc
pop
loop
pop
ljmp
xlat
daa
sbb
mov
fistpl
pushf
push
pop
pop
mov
icebp
cld
mov
fcoms
movb
sub
fsubrp
iret
dec
inc
jmp
add
xchg
mov
dec
pop
flds
repz
mov
add
fadds
in
mov
fnsave
push
out
inc
or
add
xchg
ret
test
imul
xchg
shl
cli
or
movsb
sub
sbb
xchg
lahf
cmc
testl
inc
das
cmp
iret
pushf
mov
je
test
mov
fidivl
notl
and
cmpsb
cmpsb
nop
notl
adc
jne
adc
fstps
xchg
pop
int3
aaa
jg
outsl
call
jg
jl
repnz
sub
addl
xor
hlt
jp
sti
mov
daa
sub
mov
mov
lock
xchg
cmp
mov
repz
dec
cs
out
pop
ja
cmp
ja
out
jmp
mov
call
lahf
cmpsl
mov
sahf
cli
test
push
lahf
or
or
push
out
push
xchg
call
stc
lds
add
jo
sbbl
xor
aam
push
xchg
jg
jmp
mov
in
pop
adc
or
in
jae
hlt
inc
mul
movsb
mov
dec
test
fwait
cmpsb
andl
inc
sti
pop
cs
test
aad
jecxz
out
pop
inc
gs
xor
movntq
out
lods
sbb
out
jecxz
dec
add
enter
lock
push
in
lret
dec
mov
mov
pop
fabs
stc
adc
shl
pop
push
adc
sbb
setle
adc
dec
push
std
sub
pop
stos
test
je
test
addr16
testl
mov
aas
sub
repz
jb
cmovg
mov
xor
xchg
int
andb
and
xchg
mov
ficomps
jl
sti
adc
test
hlt
ljmp
out
mov
cmp
shl
leave
daa
push
sti
arpl
lock
add
jbe
imul
push
xchg
and
mov
and
gs
in
test
cmc
cmp
cld
fnsave
icebp
cmp
jg
fistl
pop
outsb
fmulp
aaa
mov
pop
push
xchg
xchg
xchg
jl
xlat
push
cmc
aaa
std
xor
std
sub
and
loope
lods
and
pop
pop
push
es
int
jb
fidivl
or
dec
out
jb
dec
jge
orl
cs
lcall
leave
jle
fsts
je
jns
mov
inc
sbb
cmp
jg
pushf
das
pushf
adc
inc
test
gs
pop
jb
mov
cmpl
mov
jae
and
scas
addr16
test
lods
mov
adc
nop
data16
or
test
rclb
or
js
test
push
or
rcrl
sarb
sbb
xchg
mov
int
rcrb
push
std
ljmp
mov
lods
in
outsl
fbld
jmp
pop
out
mov
icebp
mov
ljmp
rorl
int
sahf
stc
adc
xchg
mov
mov
sub
add
add
sbb
xchg
mov
adc
mov
lret
dec
adc
xchg
dec
sbb
int
push
and
test
arpl
pop
cmp
pop
add
inc
push
adc
pop
hlt
pop
in
pop
js
in
pop
cmpsl
pop
mov
dec
adc
push
call
lock
scas
push
lcall
mov
mov
mov
lcall
fdivl
hlt
xor
push
mov
inc
adc
mov
mov
je
inc
push
xchg
push
jae
jb
jno
jo
outsl
mov
mov
arpl
mov
fldcw
imul
repnz
data16
gs
inc
xor
mov
mov
push
inc
pop
push
scas
and
pop
lds
mov
push
sbb
sbb
sbb
cmpsb
jmp
lcall
lcall
lcall
adc
pushf
pop
in
scas
test
int
sub
daa
jmp
dec
ljmp
fdivs
popa
jl
lretw
add
add
sub
mov
xor
pop
cli
xchg
ror
jbe
sub
rol
mov
arpl
inc
movsl
ret
fnsave
xchg
xchg
xchg
test
fstpl
pop
inc
aas
sub
lock
xchg
mov
push
ja
insl
scas
cmpsl
push
lahf
rcr
lods
scas
lcall
fwait
cwtl
lods
out
push
movlps
das
lcall
mov
dec
inc
xchg
add
inc
pop
mov
outsb
repz
mov
arpl
lret
sti
popa
pop
test
or
in
mov
test
rorl
aas
sbb
add
dec
cmp
dec
sub
jns
adc
stc
add
int3
es
je
pop
push
add
out
sub
in
iret
ljmp
lahf
popa
ss
sbb
push
jle
mov
push
pop
popa
mov
adc
add
jb
inc
push
adc
sti
dec
loop
xchg
repnz
shl
mov
out
inc
movsb
push
iret
imul
cli
loopw
dec
cmpsl
gs
pandn
mov
push
and
add
or
loope
gs
test
pop
push
push
jle
mov
xchg
lds
int3
int
sbb
mov
push
cld
pop
lea
loop
push
xchg
add
adc
leave
and
out
lock
cltd
jl
xor
in
mov
mov
cmp
xchg
add
mov
iret
add
pop
arpl
mov
mov
inc
xor
jne
mov
pop
out
mov
ret
inc
pop
popa
enter
mov
fstpt
push
mov
or
dec
fcmovnb
cli
test
rcl
fisubl
sti
or
sti
jecxz
pop
cltd
dec
xlat
and
je
mov
into
pop
push
jno
pop
mov
push
mov
mov
add
sub
popa
cmp
jmp
mov
mov
xor
push
cmp
enter
cmc
pop
fbld
adc
sub
mov
stc
and
pop
popa
add
jae
jb
div
sbb
jmp
je
lods
cmpsl
scas
lret
repnz
pushf
push
jns
das
mov
adc
push
adc
cmp
ret
paddq
loopne
sub
cmp
xchg
push
sbb
mov
mov
lret
lret
fisubrl
mov
xchg
fs
adc
add
add
mov
clc
pop
cmp
out
fiaddl
icebp
fwait
adc
add
jo
xor
das
jbe
cmp
ss
xor
pop
nop
push
adc
adc
adc
dec
adc
cmp
ret
mov
mov
enter
inc
pop
inc
push
sub
faddl
add
sti
movsb
sbb
inc
js
jbe
sbb
into
lea
jecxz
je
lret
je
jg
cli
ret
xlat
mov
cli
cli
mov
clc
repz
or
mov
daa
in
cld
dec
int
mul
int
and
repz
xchg
pop
dec
add
inc
push
sbb
jnp
in
mov
mov
in
xchg
aam
xchg
outsl
hlt
or
or
in
add
xchg
xchg
cmp
jnp
adc
pop
xchg
pop
fucomip
cltd
push
out
pop
xchg
loope
pop
cmp
or
daa
into
add
inc
iret
gs
mov
xchg
out
adc
add
add
ss
outsl
pop
add
aad
hlt
insl
test
ror
iret
scas
outsl
outsb
xor
adc
in
add
mov
sbb
xor
leave
inc
shll
sti
mov
or
or
or
pop
rolb
faddl
lock
cmp
jb
div
cs
mov
repz
jae
loop
hlt
popa
add
sbbb
mov
clc
sbb
push
or
in
mov
js
inc
pop
call
ljmp
scas
and
jb
subb
push
xchg
dec
mov
outsb
cmc
stos
idiv
rorl
or
mov
leave
pop
add
mov
icebp
cmpsb
mov
mov
cli
out
sbb
xchg
out
push
xchg
sbb
sub
out
shrl
fimull
and
mov
jl
gs
fs
repnz
xchg
pusha
mov
xchg
pop
das
mov
mov
mov
fcomps
pop
xchg
push
fcoms
sub
mov
push
call
rclb
jns
repnz
push
stos
dec
sbb
mov
sahf
pushf
mov
nop
xchg
ret
loop
sub
and
cmp
mov
popf
aaa
shrb
repnz
xor
int3
jl
rcrb
flds
xchg
sub
es
or
inc
and
and
and
and
and
pop
xchg
jge
call
daa
shrl
in
aam
mov
out
cmp
lods
aas
lds
push
movsb
jbe
arpl
jb
in
dec
mov
sbb
repnz
icebp
cld
push
mov
dec
adc
jns
lock
push
xor
ds
adc
add
pop
clc
jecxz
mov
stc
sbb
jl
arpl
add
fcomi
mov
imulb
mov
fmull
mov
gs
out
lcall
into
aas
xchg
xchg
pop
outsb
test
and
pop
int
adc
inc
mov
cmp
loop
mov
ret
cli
pop
adc
std
icebp
and
cld
in
ret
lret
sub
inc
jo
rcll
lret
ret
or
xchg
xchg
das
lds
mov
mov
fnsave
enter
test
out
inc
add
cmp
cmp
cmp
fs
xor
cmpsb
sub
xor
cmp
sub
ret
and
sbb
lock
test
es
push
fs
fmull
repz
lret
repnz
enter
dec
mov
ficoml
hlt
sete
outsl
negb
and
lea
sbb
lcall
or
push
leave
das
add
cmp
imul
xchg
dec
in
popf
and
cld
mov
and
fwait
sar
repnz
jecxz
inc
adcb
incb
js
dec
out
hlt
daa
in
fld
xor
add
pop
cli
loop
iret
int3
mov
jo
insl
out
push
pop
fcom
inc
out
rcr
into
sub
and
stc
xor
inc
lahf
testl
das
lock
jl
sti
repz
les
adc
inc
cli
roll
pop
mov
pop
addr16
mov
and
cli
imull
push
cmpsb
mov
or
xchg
pop
pop
jo
in
and
pop
lock
pop
iret
push
lret
testb
pop
jmp
and
mov
mov
push
xchg
xlat
xor
das
stc
pop
xor
sbbb
hlt
daa
test
stc
rorl
jecxz
cmp
pop
fmull
fcmovbe
sub
ret
notl
jmp
mov
xor
push
jne
mov
sub
jg
mov
outsl
lods
nop
cltd
mov
mov
mov
pop
daa
aad
and
call
and
and
sub
fcomps
inc
loopne
xor
cmp
nop
je
loopne
xchg
ds
jge
xchg
fisttpll
nop
lods
clc
or
pop
or
or
mov
jl
mov
add
std
movsl
loop
ds
jle
add
dec
add
dec
jbe
out
push
add
cmc
xchg
aas
mov
mov
fs
ret
lcall
decb
and
test
dec
sar
cwtl
jge
mov
cmp
xchg
jne
cmp
aas
std
popa
xchg
cmp
push
add
aam
mov
in
push
aaa
xor
loope
inc
stos
pushf
dec
and
cmp
dec
fnstenv
out
cmp
sahf
and
gs
push
cltd
hlt
out
fs
ds
xchg
ret
movsl
sti
jnp
es
lods
jb
subl
push
aaa
clc
xor
mov
scas
or
pop
cmp
push
rclb
std
inc
lahf
pop
out
out
cmp
out
or
mov
jge
stc
arpl
ds
sbb
pop
sub
sub
and
sub
rcll
adc
xchg
das
div
and
and
adc
dec
adc
imul
adc
orb
bound
mov
pop
clc
push
jo
pop
idivl
rcrl
scas
fnstenv
add
jmp
push
cmp
adc
hlt
in
outsb
aaa
push
in
cmp
in
jge
jecxz
mov
aas
dec
sub
int3
hlt
ljmp
jmp
mov
mov
or
sbb
lods
pop
mov
sub
int3
adc
dec
incb
adc
std
add
int
sub
imul
int
sahf
int
cli
mov
xchg
mov
sti
pop
stos
lret
mov
jl
xchg
fstps
and
pop
jno
mov
add
out
fidivs
repz
test
in
daa
ljmp
dec
fldenv
ss
lods
sub
lret
pop
pop
int3
cmp
cmp
iret
out
popf
cmpsb
and
jmp
add
popa
test
stos
sbb
lods
repz
sahf
call
out
fstpt
fsubrl
aaa
xchg
fcomip
xchg
xchg
cmp
pop
jge
daa
out
cmpsb
out
mov
pop
icebp
add
fdiv
cmp
repz
add
fnstenv
cmp
jne
add
popf
jecxz
sub
add
add
and
and
xchg
and
cmpsb
gs
mov
rcrl
cmpsb
sbb
sbb
xchg
movsb
sbb
js
add
adc
stos
scas
stc
pop
jae
mov
mov
fsubs
sbb
cmp
lcall
mov
cmp
push
dec
xchg
adc
mov
daa
jmp
add
push
int3
mov
sub
mov
aaa
es
test
or
and
aaa
mov
add
in
stc
sbb
pushf
cwtl
adc
sbb
imul
sbb
sbb
sbb
dec
add
adc
xchg
xchg
pop
push
daa
add
out
lock
push
and
iret
lods
mov
in
insl
ljmp
mov
in
int3
pop
add
cli
lret
scas
dec
mov
jmp
xchg
out
jg
test
mov
dec
jmp
sub
jge
fistpll
pop
loopne
imul
jae
xchg
outsb
je
test
testl
push
jp
je
mov
pop
mov
shr
test
push
mov
arpl
pop
lret
outsl
outsl
je
mov
shr
cmpsl
cli
xchg
enter
iret
push
jbe
aam
and
stc
je
or
push
int3
mov
cld
cmp
add
fcmovnb
mov
pop
lods
mov
fistpl
dec
inc
add
mov
loopne
out
dec
in
mov
test
popf
inc
orb
pop
xchg
cld
xcrypt-ctr
cmpsl
sahf
cmp
cs
xor
xchg
jae
mov
add
and
mov
ret
lock
mov
pop
scas
sub
cs
sub
hlt
sub
mov
repz
mov
not
xchg
add
mov
in
pop
imul
aaa
jns
mov
pop
jb
das
pop
fisttpll
or
decb
mul
push
dec
fwait
test
xchg
in
jp
xchg
test
aaa
jns
mov
inc
je
test
pop
jmp
dec
push
push
or
fidivrl
dec
repz
aam
and
loope
xchg
or
cmpsb
sbb
mov
sub
jb
stos
test
mov
push
std
test
out
dec
cmpsb
stc
je
xlat
ficoml
add
test
adc
je
repz
xlat
loopne
sarl
sub
test
cmp
movsb
xor
xchg
out
mov
cmpsb
je
outsb
shrl
or
ljmp
inc
pop
jbe
sti
jbe
je
out
je
je
clc
push
add
jb
je
mov
int3
das
pop
out
mov
dec
nop
adc
push
mov
outsb
mov
adcb
enter
cmc
loope
les
sub
jnp
in
add
scas
dec
pop
decl
fbld
pop
enter
divb
test
rcll
jbe
out
cs
fdivp
add
mov
enter
add
pop
repnz
pop
xchg
das
stos
stos
push
cwtl
pop
cltd
pop
cld
daa
xlat
ret
pop
mov
inc
add
inc
xchg
jae
cmpsb
pop
ljmp
xlat
or
imul
out
or
sti
mov
ret
cmp
andl
insl
mov
mov
and
add
mov
cmpsl
cmp
mov
or
scas
nop
int3
sub
push
lock
hlt
and
push
int3
adc
je
orb
nop
cltd
xchg
stc
mov
je
push
stc
mov
or
xchg
pandn
out
mov
cwtl
outsl
ds
push
jmp
jg
mov
aas
in
call
andl
add
dec
outsl
popa
fdivs
jbe
scas
cli
push
aaa
ficomps
dec
vgetmantsd
sbb
test
cmpsl
rcrl
arpl
enter
popa
inc
out
jnp
mov
aaa
cs
fsub
add
or
shrb
fiaddl
cs
loope
out
cs
outsl
mov
aas
dec
and
inc
cmp
or
sbb
sbb
scas
sub
add
and
andl
mov
test
mov
out
cltd
sub
push
orl
sbb
out
or
cmp
sti
shrl
out
jmp
ljmp
mov
sub
pop
mov
add
clc
ds
sub
outsl
mov
and
loope
push
shlb
lcall
xchg
test
or
cmp
mov
test
jmp
cwtl
mov
ds
stc
mov
or
dec
push
sub
xchg
adc
cwtl
xchg
inc
iret
in
lret
push
cmp
push
popf
call
xchg
add
jbe
jmp
cmp
mov
xor
xor
add
mov
icebp
scas
cwtl
iret
loop
sub
std
in
inc
in
cmpsb
push
dec
stc
lahf
sbb
mov
cmpsl
int3
xorl
jp
in
popl
fstl
mov
mov
pop
out
test
cmp
xor
jmp
sarb
mov
je
scas
aas
sar
push
ret
fstps
cmp
inc
mov
jmp
push
lock
mov
jp
jp
adc
cmp
insl
lds
cmp
cmp
icebp
movsb
lret
ret
scas
lods
in
repz
mov
jmp
sub
mov
xchg
dec
xchg
mov
dec
xchg
fsubp
mov
jge
mov
sbb
in
mov
ds
push
ds
dec
pop
jp
push
add
jp
stc
adc
cmp
xlat
ljmp
addb
repz
pop
dec
ljmp
lods
mov
in
mov
push
ljmp
lcall
pop
xor
inc
dec
stos
cld
sbb
xchg
ljmp
mov
and
mov
sbb
jnp
xlat
xor
aas
aaa
aas
push
aas
push
inc
daa
scas
ds
pop
cwtl
pushf
clc
cmpsl
iret
daa
inc
leave
cs
dec
mov
das
jnp
sub
out
push
adc
iret
adc
sbb
mov
lcall
mov
imul
dec
push
call
add
ds
jg
ja
addr16
mov
stc
fildll
cmp
mov
pop
and
push
fnstcw
inc
xor
hlt
jmp
jbe
call
rcrl
mov
in
pop
xchg
aaa
dec
dec
jnp
icebp
dec
xchg
ret
jbe
cmp
dec
lahf
mov
icebp
jl
in
and
test
jae
adc
adcl
cmovno
out
mov
repnz
ffreep
xor
fwait
outsl
pop
mov
dec
daa
xchg
test
xchg
lds
or
out
mov
jbe
jmp
int3
out
pop
movsl
pusha
and
repnz
out
test
outsb
xor
shl
lret
mov
orb
jbe
hlt
ret
lret
ret
repnz
pop
aaa
cmp
mov
mov
lahf
pmulhuw
and
test
in
hlt
pop
lea
or
pop
inc
fsubrp
insl
dec
pop
pop
pop
mov
dec
pop
jecxz
imul
out
rcr
xchg
into
cmp
outsb
lock
fidivl
iret
mov
int
xchg
negl
pop
inc
xchg
les
or
test
loope
out
xchg
stc
xchg
sbb
and
insb
mov
mov
stc
pop
arpl
ss
cmp
dec
gs
push
mov
mov
insl
mov
cmp
imul
push
dec
ret
sub
xorl
lahf
arpl
stc
add
cli
and
push
add
xor
hlt
fbstp
push
mov
das
jo
adc
sbb
fdivr
mov
ljmp
fidivl
xchg
inc
into
lods
insl
leave
cmpsb
cmpsb
fmuls
imul
cmc
mov
adcb
loop
pop
sub
icebp
daa
gs
rolb
or
jecxz
ja
mov
cmpsl
mov
lret
pop
pushf
xor
repnz
cli
dec
mov
inc
push
aas
dec
sbb
fdivrs
cli
stos
das
jmp
sub
out
push
push
popf
push
daa
cmc
lods
lods
pop
xchg
jne
roll
pop
fwait
sub
or
dec
sub
leave
pop
lahf
adc
sahf
cmpsl
dec
sbb
iret
xor
push
scas
pop
out
popa
fnsave
lahf
lods
mov
mov
mov
test
adc
into
scas
repz
fildll
repz
mov
mov
lahf
into
adc
xchg
js
dec
leave
leave
jb
mov
adc
cmp
int3
push
cli
lods
mov
xchg
loopne
mull
cld
push
pop
sub
xchg
fdivp
notl
sbb
movsb
mov
in
mov
loopne
loopne
dec
outsl
scas
jmp
rcr
cld
xchg
scas
fists
fsubrl
fistps
inc
lahf
adc
nop
lock
repnz
pop
popf
mov
and
movsl
out
shr
inc
push
frstor
lock
add
lods
push
pop
jo
mov
sub
jo
dec
cmpsl
lock
jecxz
jne
in
add
adc
cmpsb
imul
lcall
mov
jmp
mov
push
mov
in
dec
dec
dec
dec
mov
lret
mov
mov
inc
inc
sub
in
inc
scas
inc
in
inc
inc
lret
mov
inc
or
in
ds
mov
in
cmp
movsb
mov
call
lret
mov
mov
xor
sub
aam
call
sub
in
sub
sub
daa
popf
mov
loopne
enter
dec
and
and
xchg
pushf
in
sbb
rcrb
sbb
push
pop
xchg
gs
fimull
lods
sahf
add
pminub
out
js
and
adc
mov
xchg
xor
fsubl
sbb
pop
outsl
dec
xchg
cmp
adc
fiadds
add
movsl
jp
pop
lock
outsl
jg
shll
push
das
pop
daa
sbbb
xlat
fnstcw
movsb
dec
mov
hlt
fwait
scas
repz
call
out
adc
lret
sub
aas
fistps
mov
pushf
and
loop
cli
fsubrs
inc
push
sub
xchg
jbe
pop
call
lock
orl
push
aad
inc
and
lock
outsb
xchg
dec
push
cld
scas
xchg
fisubl
mov
stc
jmp
lahf
mov
daa
jne
push
sub
mov
jbe
pusha
pop
pushf
repz
out
in
loop
imul
jecxz
xchg
fstpl
mov
and
jg
mov
and
stos
idiv
jno
and
test
xor
mov
push
and
das
sti
dec
cmpsl
call
in
jno
pop
roll
mov
mov
icebp
cld
repz
mov
rol
cmp
and
add
sbb
xor
xchg
mov
call
out
addr16
movsl
iret
bnd
in
test
cmc
mov
mulb
mov
ret
je
fcmovnu
ljmp
sbb
stos
mov
cmp
cld
in
dec
jecxz
jnp
hlt
stos
in
sbb
inc
outsl
add
mov
leave
mov
pop
fidivrs
in
cltd
add
int3
lods
mov
jno
pop
roll
stos
jbe
hlt
jns
xor
push
push
mov
movups
cli
cmpb
mov
jl
inc
aad
call
movsb
push
int
jl
fwait
cmp
mov
loop
aas
push
lods
filds
into
jecxz
mov
iret
adc
mov
pop
sbb
into
xchg
mov
filds
das
mov
clc
outsl
iret
inc
iret
cmp
sahf
aas
neg
mov
fldcw
mov
into
sbb
stc
incl
filds
fnstcw
cld
dec
sub
shll
aas
fists
lcall
inc
fidivrs
fcmovne
dec
orl
into
fbld
shl
repz
ljmp
cmp
xlat
sti
ljmp
jmp
pop
nop
ljmp
add
std
or
stos
inc
fsub
inc
inc
jb
loope
sub
push
scas
inc
lock
mov
insb
repnz
pop
out
jno
xchg
fstps
cmpsb
cli
lock
lods
dec
aad
cmp
gs
mov
mov
mov
push
sbb
mov
loop
cmc
lret
cmc
sbbl
fcompl
call
xchg
xor
mov
lret
stc
in
std
mov
mov
mov
ja
mov
fcoms
xchg
adc
cli
std
or
xlat
js
inc
fcomps
xchg
xchg
repz
in
lds
loopne
repz
mov
mov
movsl
mov
dec
das
js
mov
ja
mov
add
push
mov
dec
pop
mov
fld
push
icebp
cltd
sti
sbb
in
pusha
into
cmp
in
mov
xchg
dec
movsb
sub
ja
in
addb
loop
hlt
popl
dec
jmp
inc
je
jge
mov
fildl
insl
test
mov
rcrl
clc
mov
shrb
pop
shll
idivl
sub
call
fistpl
out
cmp
les
cld
rcr
inc
cmpsb
cmc
jecxz
int
mov
fcomps
into
fstl
bound
sbbb
mov
cmp
testb
out
scas
pop
mov
popf
shrl
jecxz
adc
pop
lcall
incl
dec
mov
into
pop
fdivs
mov
push
lret
xchg
aaa
mov
sbb
into
mov
filds
stos
xlat
loopne
push
subl
daa
xchg
pop
ud0
pop
out
negb
mov
addr16
not
jg
and
test
sub
outsl
push
cmpsl
jmp
lock
in
and
shl
sahf
sbb
inc
cmp
lds
clc
insl
je
in
mov
mov
arpl
push
loop
aaa
add
jp
scas
fiadds
jl
push
jl
cmp
icebp
mov
jns
in
test
cmc
mov
daa
pop
cltd
out
ja
xchg
mov
aad
mov
jbe
cmp
and
mov
jp
je
jp
cs
in
stos
das
pop
mov
fistpll
adc
push
dec
jnp
mov
mov
aas
dec
cmpsl
fidivs
out
or
mov
movsl
jg
jl
mov
jno
add
fcmove
cli
sarl
iret
sub
int
jecxz
into
arpl
dec
shlb
in
push
mov
jmp
add
or
jge
shlb
int
out
cli
int
int
xlat
rcr
iret
mov
int3
int
pop
decl
xor
cli
ja
aas
push
in
hlt
push
push
shll
mov
add
inc
rcr
das
in
aas
cmp
lds
das
lret
les
decl
int3
cld
test
call
in
iret
push
leave
cld
dec
jecxz
xor
jg
fcomip
test
cmp
fwait
test
stos
cli
push
mov
pop
out
fdivr
lock
movsb
mov
ror
lods
or
std
mov
sahf
mov
into
mov
js
popf
cld
push
lcall
jp
aas
mov
or
mov
shl
dec
rcr
mov
jecxz
push
sahf
out
jle
fwait
xchg
repz
cli
add
xchg
shll
out
pop
and
mov
leave
ja
aas
xchg
js
clc
add
or
dec
cli
fcomps
scas
cmp
dec
outsl
ljmp
lcall
int
mov
std
hlt
out
iret
push
fucompp
fbstp
scas
sub
std
and
mull
mov
ret
mov
test
shrb
out
cli
mov
daa
mov
mov
out
jnp
cmpsb
nop
mov
fldt
push
mov
andb
mov
nop
xchg
loop
sti
ret
icebp
lcall
repnz
mov
mov
adc
fildl
xchg
mov
xchg
mov
sub
nop
popl
push
and
xchg
rolb
pop
mov
roll
daa
fwait
mov
loopne
int3
sti
sti
adc
lcall
jge
cmpsl
jbe
bnd
and
jmp
out
enter
cltd
out
aas
dec
mov
mov
mov
xchg
outsl
mov
lahf
lahf
out
iret
or
addr16
sub
sub
lcall
push
aas
test
push
and
dec
xchg
dec
ficompl
ljmp
xchg
mov
lahf
jmp
fisubrs
int3
sahf
cmp
mov
into
lods
hlt
iret
incl
hlt
pop
out
sbb
mov
lods
out
mov
jo
mov
sahf
push
popf
in
xchg
movsb
aad
inc
rcrb
mov
push
pop
out
call
mov
mov
dec
jmp
outsl
cwtl
xlat
popf
into
and
mov
enter
int
or
ret
pop
ret
fbld
lcall
ficoms
call
sahf
jb
jns
cmp
cmc
push
cmc
cmpsl
mov
mov
jnp
jbe
into
xchg
adc
das
add
lret
mov
in
jb
cmp
xchg
xchg
jb
std
cltd
inc
outsb
cmp
nop
and
decb
cmp
test
idivb
ds
xchg
xlat
xchg
xchg
test
ljmp
sub
inc
std
mov
shrb
loop
daa
dec
inc
cmp
mov
mov
movsl
lock
cwtl
jb
and
xor
out
push
lret
xchg
xchg
nop
loope
sbb
xchg
addr16
fisubs
ss
jns
xor
pop
xchg
std
add
xor
pop
std
clc
pop
test
stos
sti
jae
cmpsb
cmc
in
cmpsl
cli
lock
addr16
lds
mov
jle
in
lea
inc
mov
in
jg
cltd
xlat
xchg
shrb
jb
test
mov
dec
f2xm1
cmc
stc
mov
mov
mov
mov
scas
test
push
ds
cwtl
lock
xor
sub
dec
dec
ljmp
mov
jnp
or
dec
icebp
div
repz
mov
mov
out
ficompl
dec
ficompl
jmp
push
outsl
std
mov
push
in
jp
inc
mov
out
daa
out
cmpsl
jge
incl
sarb
sub
cmpps
rol
mov
xchg
pop
add
add
pop
ror
mov
stos
shlb
mov
xchg
jnp
ja
add
cli
inc
test
mov
iret
sbb
add
iret
cli
into
in
xlat
into
int3
into
ret
into
mov
into
cmpsl
into
mov
into
insb
into
data16
push
into
xor
into
sbb
adc
push
into
aas
cmpsb
int
int
int3
loop
mov
int3
jl
add
add
jne
ror
mov
jnp
push
lret
dec
lret
je
imul
aas
lret
cli
leave
ror
leave
jg
add
jg
jb
imul
leave
es
sbb
or
mov
add
add
fidivrl
imul
enter
enter
enter
enter
rol
mov
add
add
aad
push
lock
lret
lds
lds
lds
inc
lds
lds
add
add
mov
les
pop
les
bnd
loopne
flds
add
enter
scas
ret
sahf
ret
xchg
ret
cs
sbb
test
and
faddp
mov
sar
dec
pop
adc
iret
mov
add
iret
dec
iret
cmp
das
iret
adc
pop
iret
out
into
jmp
les
arpl
push
ret
dec
ret
xor
ret
adc
fld
enter
pop
rorl
pop
rcrl
or
cmp
mov
mov
inc
shrb
and
sbb
adc
mov
iret
pop
iret
add
add
push
iret
mov
mov
je
push
into
cmp
add
mov
inc
int
int
int3
jmp
lret
dec
lret
pop
lret
filds
add
cld
lret
lods
lret
popa
lret
out
loopne
lret
leave
mov
stos
pop
leave
jmp
enter
in
enter
movsb
add
in
loopne
popa
inc
mov
pushf
xchg
movl
popa
dec
movl
xlat
lret
ljmp
add
add
pop
dec
cmp
or
add
vpextrw
int
rol
add
add
lds
cmp
and
sbb
mov
lods
les
les
aas
les
les
les
add
les
lock
ret
movsl
ret
ret
add
ret
push
ret
cmp
sbb
inc
in
add
and
ffree
sub
clc
ror
mov
rcrl
or
cli
shl
fisubl
stos
xlat
cld
sub
mov
add
notb
ljmp
into
or
into
into
push
into
xor
sbb
adc
add
int
int
int
int
int
int
int
int
stc
int3
outsl
int3
add
add
int3
pop
int3
dec
int3
inc
int3
sub
and
adc
push
int3
add
lock
fcmovne
lret
mov
lret
xchg
lret
xchg
add
add
cmp
xor
mov
lret
add
jno
pop
leave
push
leave
loop
push
aam
pushf
add
add
inc
xor
sub
mov
sbb
les
les
pop
xor
add
add
stc
ret
call
ret
sub
add
ret
xchg
ret
es
sub
add
inc
adc
roll
test
and
jge
je
rcrb
rorb
sarb
xchg
rolb
xchg
jae
stc
iret
out
iret
add
fsubrl
into
pop
into
mov
int
int
int
int3
lret
int3
inc
int3
xor
lret
ljmp
lret
cmp
adc
fldl
and
cmp
xchg
inc
jl
jne
outsl
imul
inc
add
add
sub
and
cmp
lds
je
insl
lds
inc
lds
and
call
ret
shr
xlat
ror
aad
mov
aas
rolb
adc
xchg
mov
pop
inc
push
iret
cld
into
in
jbe
add
jg
jo
pop
into
pop
into
inc
push
and
sbb
int
int
das
mov
int
ret
int
int
cmp
add
int
int
int
int
int
int
int
int
int
int
int
int
int
pop
add
push
adc
or
add
int3
icebp
int3
jge
add
aad
iret
int3
mov
push
sbb
test
int3
xchg
cld
test
or
int3
jo
jge
fdivrl
mov
sub
add
enter
adc
or
test
fmul
lret
mov
lret
jne
insl
lret
inc
push
add
lret
cmp
xor
sub
and
sbb
lock
fmulp
shl
movsb
lret
xchg
lret
fdivrl
xchg
ja
pusha
mov
call
mov
pop
enter
enter
movl
pop
ret
movl
fcmovnbe
enter
mov
cmp
adc
in
add
lds
lds
lds
mov
arpl
sub
and
adc
add
adcb
pop
inc
rol
cwtl
ret
jne
pop
ret
cmp
aad
xchg
pop
sbb
cmpsb
rcrl
sub
and
rclb
and
push
jl
out
add
pop
iret
lret
iret
iret
and
sbb
push
iret
dec
out
push
in
pop
adc
sbb
int
xchg
or
int
mov
xchg
jle
adc
cli
int3
out
int3
out
int3
inc
int3
mov
inc
movsl
int3
xchg
ret
insl
int3
push
int3
push
int3
call
lahf
pop
fs
nop
lret
xchg
jae
ficompl
add
add
xlat
shrb
jg
jns
jae
insl
lret
sldt
lret
pop
lret
test
in
fnstcw
outsb
cld
int
shl
scas
lcall
testl
or
loopne
in
pop
mov
xchg
inc
xchg
clc
outsl
inc
test
xor
cltd
inc
ljmp
push
xlat
inc
jmp
outsb
rorb
out
push
pop
mov
lock
lods
sti
add
lahf
add
ret
pop
jnp
loope
cwtl
sti
aaa
imulb
lahf
lcall
movsb
fisttps
shl
mul
lahf
loopne
iret
cld
pop
decl
imul
es
lock
std
inc
ljmp
jmp
orl
pop
negl
add
sti
out
and
loope
out
ljmp
lods
or
cmp
daa
es
push
out
loopne
clc
adc
mov
sti
mov
sub
fdivr
jl
cld
jg
and
mov
mov
ror
enter
in
jge
pop
cld
push
dec
jnp
gs
mov
lahf
and
adcb
sub
aad
in
into
jae
add
loopne
mov
mov
into
loope
mov
sub
sbb
xchg
data16
jbe
add
lret
daa
mov
nop
sahf
lea
js
stos
or
in
mov
loope
add
lcall
std
xchg
stos
lods
loopne
sarl
mov
mov
cli
xchg
lcall
mov
pop
pop
call
jne
out
jge
or
stc
cmpsb
inc
lcall
sbb
in
adcb
or
repz
inc
jmp
lret
call
mov
bnd
jge
mov
sti
cli
popf
out
inc
or
fisttps
aaa
filds
dec
shlb
std
in
sub
cmp
movsl
je
notl
mov
xor
lds
adc
xchg
lock
into
frstor
sub
pushf
jmp
iret
inc
stos
cmp
jnp
sbb
std
sar
mov
cmp
das
dec
push
adc
daa
cld
jmp
jecxz
sub
sub
push
mov
push
stc
xlat
shll
out
push
mov
or
dec
push
push
mov
add
int
orb
lock
or
ljmp
jne
mov
mov
add
fdivrs
adc
test
loop
test
repz
jae
cmc
mov
lret
mov
cmp
sti
jge
xchg
inc
dec
mov
movsb
fld
leave
test
add
fdiv
xchg
mov
jg
out
cmp
mov
sbb
ljmp
div
xchg
pop
lahf
out
xchg
and
dec
pop
add
cld
inc
xchg
jbe
sbb
sbb
sbb
sbb
fsubr
adc
pop
xchg
mov
pop
dec
cld
adc
adc
push
push
mov
out
hlt
pop
hlt
das
ja
fisubrs
fistps
pop
cmc
lahf
sub
cld
sbb
jg
push
mov
mov
mov
lahf
sub
xchg
rclb
loopne
mov
pop
pop
jns
aad
aas
cmp
je
icebp
cmp
test
je
scas
xchg
pop
jne
push
mov
jecxz
testb
stos
les
in
adc
jl
mov
adc
mov
jmp
icebp
jmp
inc
mov
aaa
popa
sahf
in
hlt
lds
xlat
imul
movsl
aaa
popa
scas
push
push
dec
adc
ja
outsl
mov
push
push
out
aaa
jb
mov
xchg
jb
out
xchg
cwtl
out
inc
mov
mov
out
dec
push
jge
ja
sti
pop
push
mov
pop
mov
jae
out
mov
xlat
fiadds
lahf
in
add
rcrb
pop
test
call
jg
jp
scas
in
and
pop
push
out
jne
jecxz
stos
icebp
in
jge
lods
mov
cmp
cmc
es
dec
jmp
xchg
hlt
repz
ds
popa
sahf
leave
dec
insb
sbb
lods
push
jnp
xor
std
push
mov
ja
add
jmp
sub
clc
in
idiv
cmp
adc
repnz
push
cmp
aad
rorl
jge
add
inc
aaa
push
xlat
mov
jecxz
mov
mov
fdivl
out
mov
rol
in
lea
loopne
ss
decl
cli
mov
xchg
dec
pop
jecxz
icebp
sbb
ret
pop
cli
push
jle
push
icebp
push
in
inc
cld
stos
inc
stos
rcll
and
cmpsl
adc
cmp
xchg
stc
dec
push
outsb
idivl
mov
dec
decl
outsb
divl
fisttpll
add
dec
stc
inc
inc
cld
inc
cmp
movsl
test
pop
mov
lret
and
orl
dec
out
jge
push
clc
dec
stc
lea
daa
dec
add
dec
add
cli
and
dec
repnz
dec
sbb
addr16
push
cmpsl
dec
add
jns
test
fcoml
out
je
push
push
dec
pushf
xor
test
push
add
mov
aam
mov
pop
push
rorl
adc
inc
pop
and
jle
hlt
and
pop
xchg
push
dec
and
mov
xchg
jg
push
pop
and
pop
xlat
sar
lahf
push
sub
stos
xchg
mov
fildl
and
cmp
out
in
sub
scas
xchg
dec
mov
fwait
lods
and
sub
lods
cmp
mov
xor
xor
xor
frstor
outsb
outsl
xchg
jne
jno
dec
enter
clc
addl
sub
inc
sub
inc
out
subl
aas
enter
xchg
mov
xchg
mov
mov
fildll
and
sub
lcall
push
popf
sbb
adc
fdivp
push
lcall
fadds
dec
pushf
fmull
out
or
sbb
ja
fsubrl
lahf
mov
mov
mov
rcll
popf
pop
aas
clc
sub
jb
test
xchg
mov
and
dec
aad
subb
adc
cmc
sahf
pop
jbe
or
inc
shll
sarl
and
in
dec
aad
xchg
out
mov
jmp
int
in
out
hlt
lea
mov
repnz
mov
incl
cmp
xchg
stc
daa
daa
in
mov
nop
outsb
push
xchg
and
call
icebp
cmc
clc
xchg
or
in
cmp
pop
test
pcmpeqd
and
mov
xchg
loope
mov
cmp
div
xor
fimuls
les
test
pop
sub
or
insl
push
xchg
cmpsl
add
mov
adc
pop
push
test
jbe
pushf
mov
mov
incl
and
div
dec
mov
jbe
fdivrp
push
lock
cli
out
or
je
cmpsb
mov
xor
mov
sti
repz
out
push
xchg
shl
out
outsl
out
jmp
ljmp
aas
mov
test
lock
jg
into
aam
push
xchg
xchg
jg
jne
out
cmp
dec
add
and
rorb
inc
push
iret
cld
sub
push
fcom
cld
mov
jmp
sti
fdivs
in
ja
fcomps
cld
sub
test
jmp
fisttps
cmpsl
in
sahf
out
mov
pop
negl
xlat
mov
imul
fsubp
lret
pop
notl
insb
lods
push
and
mov
out
cmp
dec
mov
pop
rcl
movsb
es
call
jnp
jecxz
lea
lock
aam
mov
sub
icebp
je
stos
xchg
inc
mov
fsubr
xchg
jl
xchg
out
push
mov
fsubrl
hlt
popa
ljmp
and
lcall
xchg
mov
xchg
ja
mov
push
mov
aas
fildll
mov
negl
mov
out
not
xlat
in
jl
dec
fistl
call
xchg
dec
dec
jge
or
cld
div
loop
xchg
inc
lahf
cld
inc
daa
sarb
inc
cli
xchg
mov
cld
sarb
cmpsl
sub
fmul
call
sub
cld
ss
scas
sub
cld
idiv
mov
lret
and
cld
pop
aad
ret
inc
lret
mov
lret
aaa
scas
pop
movsb
adc
lret
hlt
into
clc
jle
inc
pop
xorb
jbe
scas
pop
scas
scas
adc
repnz
mov
enter
or
push
xchg
jl
data16
ljmp
push
shlb
das
leave
ja
push
std
daa
dec
and
mov
lcall
mov
out
mov
insl
mov
ja
push
out
leave
icebp
cmp
adc
cwtl
inc
or
rorl
mov
out
jns
push
dec
mov
mov
pusha
jb
push
in
test
cmp
mov
xchg
popfw
movsb
push
jmp
nop
lods
iret
popf
dec
mov
fmul
je
inc
repnz
idiv
inc
ficoml
insb
mov
stos
in
ljmp
mov
push
mov
cmp
jbe
nop
out
xchg
decl
cs
in
jg
das
decl
lret
enter
mov
sub
std
scas
test
push
test
and
mov
mov
out
add
mov
adc
mov
decb
loop
pop
hlt
movsb
sar
mov
mov
jns
mov
dec
cwtl
mov
sbb
rorb
nop
sbb
inc
mov
cld
lret
popf
dec
sbb
mov
fcoml
mov
call
pop
sahf
faddl
gs
mov
cld
popf
mov
orb
and
call
loopne
stos
xlat
ljmp
and
in
push
mov
jg
rorb
and
and
jp
mov
js
call
mov
cwtl
out
popl
incl
cwtl
jo
in
xlat
push
mov
xchg
cmc
xlat
call
and
stos
sar
fwait
lock
clc
dec
cmp
xchg
hlt
xchg
fdivs
xchg
xchg
jo
xchg
push
dec
scas
fmuls
mov
xchg
lock
xchg
mov
dec
push
in
lods
and
loopne
jbe
leave
mov
inc
fisubl
lahf
adc
sti
call
xchg
test
scas
enter
sahf
xor
dec
sti
xor
outsb
dec
aas
into
ja
jle
xor
int
int
int
pop
cli
sbb
push
int
pushf
fmul
mov
pop
inc
int3
lret
mov
and
dec
jge
icebp
lret
xchg
lret
sub
add
fcmovne
cmpsb
leave
fwait
leave
sbb
leave
ja
dec
leave
enter
enter
add
movsb
inc
enter
enter
add
call
sub
adc
add
lds
lds
lds
add
push
lds
mov
ret
adc
ret
iret
ret
jle
cli
cmp
in
mov
test
shll
out
fdivrp
add
pop
rcll
rcrl
and
out
pop
enter
inc
lods
lcall
lahf
cld
sbb
inc
loope
dec
std
inc
std
dec
loop
xor
xlat
nop
cltd
lock
repnz
sbb
not
arpl
jg
fs
cmc
inc
dec
std
data16
repnz
cmp
cld
mov
negb
dec
sti
push
icebp
or
js
decb
jge
movsb
mov
pop
cltd
aas
jg
pop
leave
cmpsl
mov
insl
outsl
xchg
fisubrl
push
stc
jl
in
outsl
pop
mov
jnp
dec
repnz
imul
adc
decl
jnp
dec
lds
cmp
popl
and
out
mov
push
add
call
pop
mov
cmp
test
fistpl
pop
clc
lock
pop
adc
hlt
add
mov
loope
decb
xchg
or
sarl
push
loope
cltd
dec
pop
test
out
stc
push
jg
test
hlt
gs
ds
fdivrs
pop
cmpsb
sub
cli
cmp
cld
sub
fadds
popf
pushl
in
lcall
ljmp
incl
jmp
add
inc
add
call
int
jmp
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
pusha
mov
mov
xor
mov
inc
cmp
jb
popa
jmp
