fdivrl
sti
scas
and
movb
and
push
and
xor
mov
sub
dec
pop
dec
shll
mov
jne
shll
ljmp
dec
xlat
dec
and
cmp
scas
jnp
insb
js
and
add
insl
cwtl
and
add
and
imul
call
dec
gs
gs
xor
xor
fs
insb
add
or
out
jg
sbb
inc
bound
push
jb
jbe
insb
gs
pop
jae
jae
gs
and
inc
inc
add
pushaw
lret
ljmp
gs
outsl
imul
add
adc
adc
bound
xor
cs
and
std
pop
imul
push
arpl
fs
outsl
cmp
fcmovne
arpl
bound
xor
or
cmp
and
pop
sbb
xor
sub
imull
andl
andb
out
std
loopne
mov
jl
inc
add
add
or
lds
mov
or
popa
enter
insl
xchg
fcmovne
push
add
outsl
int3
int
pop
into
push
iret
rorb
shll
xor
shll
jbe
jb
aam
aad
xlat
pop
fdivs
mov
fidivl
fisttpl
push
pop
loope
lcall
inc
in
and
add
fwait
scas
out
call
imul
in
pop
in
aaa
lock
repnz
div
clc
gs
stc
dec
pop
cli
sti
js
je
mov
out
ficoms
xlat
sub
mov
pop
adc
aaa
sbb
dec
mov
xor
mov
ljmp
je
push
push
call
mov
jmp
mov
cmp
jne
xor
jmp
popa
insb
sti
arpl
movl
fsin
dec
test
je
sbb
fstpt
imul
jne
push
or
mov
sbb
iret
das
inc
mov
adc
cmp
jne
outsl
clc
fwait
out
mov
or
pop
pop
leave
ret
mov
in
sbb
fnstcw
imul
push
push
imul
pop
cmp
hlt
push
push
pop
loope
xor
clc
add
and
push
push
sbb
js
push
lock
cltd
add
add
push
pop
insb
pop
push
jae
pop
movzwl
push
push
stos
mov
fdivr
lock
cmp
je
push
adc
pop
or
test
sbb
cmp
adc
push
push
sub
lret
insl
add
inc
cmp
sbb
loope
sbb
movsl
adc
ss
mov
jecxz
pop
in
adc
pop
ret
xchg
sub
xor
inc
mov
ss
xchg
xor
mov
lods
jo
push
push
scas
inc
push
test
jo
push
adcl
mov
sbb
sbb
mov
cmp
adcl
push
dec
dec
ja
inc
addb
push
sbb
fwait
jmp
push
jno
dec
inc
imul
xor
xor
pop
ja
mov
pop
je
or
sub
lods
fnstsw
inc
test
je
adc
call
rorl
icebp
pop
loop
out
negb
dec
in
adc
mov
or
gs
adc
cmp
cwtl
fstps
adc
aas
xor
enter
daa
sbb
fimuls
loopne
or
icebp
push
cmp
fcom
lds
jno
popa
mov
std
adc
push
fdivr
call
adc
mov
psrld
mov
inc
inc
dec
dec
test
jne
push
in
cmp
pop
jmp
lds
shlb
and
push
jecxz
shl
mov
mov
add
inc
cmpb
inc
fadds
test
add
mov
mov
cld
aad
pop
clc
inc
and
aaa
outsb
push
rcl
jl
sub
pop
adc
daa
push
mov
stc
push
dec
sub
pop
pop
add
adc
xabort
in
les
out
inc
pop
or
jbe
mov
ret
in
inc
mov
cmp
subb
pop
or
ja
mov
daa
cwtl
pop
les
adc
mov
js
cmpl
inc
mov
pop
and
dec
shlb
add
std
add
arpl
mov
sbb
jge
ja
repz
lea
andb
rolb
lea
sahf
iret
out
stos
mov
loopne
adc
mov
add
xor
test
jecxz
push
or
fdivrp
maxps
pop
push
sahf
mov
pop
call
jbe
les
push
xor
lret
test
xor
scas
jbe
mov
xlat
inc
into
xor
fldlg2
sub
sub
push
in
imul
mov
aas
sub
pop
mov
pop
pop
pop
pop
testb
push
xor
cld
pop
jmp
pop
outsb
outsl
jmp
rcrb
or
fstl
lcall
outsb
ljmp
xchg
fildl
add
je
popa
lcall
pop
add
pop
lcall
popw
fstps
jne
insb
inc
or
xor
cld
mov
inc
ja
addr16
jge
pop
mov
outsb
imulb
push
add
add
sbb
add
fwait
cmp
in
adc
adc
add
in
sbb
arpl
xchg
sar
out
enter
jmp
ja
leave
imul
fs
int3
je
imul
rorb
int3
clc
insl
mov
push
cltd
pop
flds
sti
adc
sti
cld
mov
sbb
sti
fcomp
xchg
int
cld
std
dec
push
mov
xor
xchg
mov
dec
mov
cld
mov
arpl
jb
push
lds
fldenv
out
xlat
cmp
sarb
rcl
or
sub
xor
cs
sub
shlb
js
mov
int3
jb
clc
cwtl
mov
adc
call
lods
test
scas
mov
shrb
loope
or
jae
push
ss
dec
xchg
insb
les
fisubl
neg
cwtl
mov
ss
and
push
neg
fwait
pop
fs
mov
clc
je
jae
cwtl
shlb
sti
mov
into
bound
xor
jg
imul
idivl
fisttpll
mov
test
fldcw
xor
push
xor
mov
je
clc
add
clc
lods
jbe
popf
lea
adcl
jnp
aaa
movsb
pushf
or
insl
mov
mov
mov
call
push
bound
mov
clc
xchg
and
test
sar
jb
iret
sar
clc
sar
mov
push
push
mov
or
xchg
outsl
jbe
push
adc
cmp
cmp
popf
push
cmpsb
imul
insl
nop
gs
out
and
push
add
call
adcl
hlt
cmp
negl
xchg
shll
xchg
xor
and
hlt
fs
mull
or
sbb
xchg
cmp
aaa
gs
adc
ret
loopne
dec
dec
scas
cli
mov
jle
subl
and
jne
int3
add
or
pushf
sbb
push
cmp
lea
adc
jmp
in
adc
sub
mov
or
loope
or
push
fadds
inc
faddp
dec
movsb
inc
cmpsb
in
adc
mov
rclb
mov
sbb
or
push
dec
inc
dec
dec
in
test
push
dec
inc
dec
and
aam
inc
push
dec
cs
outsl
lds
or
push
sub
subl
add
and
add
push
add
add
enter
nop
add
enter
mov
inc
loopne
push
pop
mov
jg
js
int
mov
imul
jmp
arpl
outsb
outsl
je
bound
jb
outsb
and
inc
dec
push
and
fs
fmuls
and
imul
mov
mov
mov
ljmp
dec
repz
xchg
outsl
out
cli
jmp
sub
push
imul
out
inc
add
loope
mov
popf
std
gs
and
add
or
cld
pop
sub
pop
adc
add
lret
xchg
pushf
push
add
push
xor
jnp
cmp
pop
push
add
fnstcw
dec
call
popl
mov
add
push
fsubrs
bound
add
jae
inc
adc
cmp
frndint
shrb
popa
je
rclb
adc
fdivs
gs
outsl
arpl
inc
and
sbb
inc
ljmp
in
push
mov
in
xchg
movsb
xor
shll
in
add
imul
imul
imul
cmpsb
jmp
sbb
cs
pop
shll
fs
inc
imul
add
js
pop
outsb
xor
inc
mov
push
xor
daa
and
pop
rcr
pop
and
and
mov
push
idivb
rorb
inc
in
fs
add
xor
mov
hlt
fdivrl
and
filds
and
adc
and
adc
lahf
add
cmp
lahf
add
and
inc
and
adc
and
cmp
add
inc
out
stc
test
enter
fdivs
and
adc
add
inc
sahf
nop
dec
movsb
and
adc
add
inc
or
aaa
sub
dec
inc
ja
push
sub
sbb
mov
fmull
leave
add
lcall
fdivrs
adc
push
popa
mov
jge
divl
push
pop
jmp
adc
mov
pcmpgtd
mov
add
orl
pop
rcr
loopne
lea
mov
mov
xchg
arpl
decb
ret
and
or
je
into
flds
pusha
mov
and
xchg
push
inc
fs
adc
jbe
mov
or
push
mov
inc
ja
pop
sub
pop
pop
leave
xchg
icebp
sub
out
andb
inc
cmpsl
xchg
push
clc
std
jae
arpl
loop
ret
pop
stos
xor
mov
xor
outsb
xchg
xchg
dec
sub
push
enter
xchg
clc
mov
or
call
adc
std
push
insb
pop
adc
adc
ds
addb
adc
adc
push
and
jecxz
xor
test
add
cmp
jl
or
shr
or
push
mov
push
idiv
mov
int3
insb
outsl
enter
jnp
icebp
cmpsb
sti
jle
addr16
mov
xchg
pop
pushf
mov
arpl
dec
jne
pop
call
sub
dec
ja
push
jmp
inc
inc
loope
cmp
or
loope
sbb
mov
test
dec
mov
pop
mov
xchg
sbb
cmp
cmp
add
mov
addl
xorb
mov
outsb
mov
sub
ror
push
hlt
push
inc
lock
sbb
dec
jno
neg
pop
repnz
mov
data16
shll
xor
incb
add
sub
adc
or
cmp
movl
neg
pop
sbb
dec
mov
or
add
out
inc
mov
push
mov
xchg
fsubr
into
xor
mov
add
cs
push
sbb
call
jmp
mov
test
aam
or
call
pusha
jecxz
rolb
cmp
fisubs
pop
add
adc
or
hlt
or
jb
adc
jl
fcomp
dec
out
out
int3
jg,pt
or
cmp
insb
mov
cmp
cmp
scas
outsl
mov
mov
or
ss
mov
testl
pop
push
mov
cmp
jo
lds
jnp
ret
push
pusha
push
mov
push
mov
cmc
enter
add
mov
lret
gs
insb
jb
mov
lret
gs
gs
cs
fisttpl
cltd
mov
xor
ja
imul
pop
fcmovnu
frstor
sub
push
rcll
loopne
loope
jecxz
ret
in
cld
mov
movsb
sti
in
adcb
add
sbb
cmp
inc
call
add
push
or
in
cwtl
pop
add
and
push
jmp
sub
scas
sbb
mov
call
mov
mov
push
shr
stc
sub
cs
insl
jmp
add
mov
vmwrite
cmc
das
popf
mov
add
cmpl
fbstp
dec
cmp
cmp
or
dec
daa
rcrl
sub
xchg
outsb
mov
mov
inc
cmp
jl
je
fiaddl
inc
cmp
sub
cmpb
js
pushl
mov
daa
cmpl
jb
dec
or
leave
je
add
jp
iret
push
aas
or
add
mov
push
popf
or
fisttps
ret
fbstp
sbb
mov
mov
adc
test
insl
jbe
popa
sbb
add
cld
test
rolb
cld
jge
mov
add
sbb
cltd
mov
adc
mov
mov
mov
lods
inc
cmpl
fisttpl
add
cmpl
std
outsb
dec
mov
gs
and
lea
shr
shlb
mov
mov
mov
jne
daa
add
ljmp
shlb
cli
add
push
or
adc
xchg
mov
lar
data16
lock
jne
or
not
push
sub
add
aad
outsl
or
shl
or
cmpsl
xchg
xor
adc
in
cmp
clc
inc
mov
mov
std
sbb
xchg
add
jmp
add
imul
push
repz
jbe
push
mov
mov
dec
xorb
and
adc
outsb
inc
or
popf
mov
add
lcall
fcomip
and
mov
pushl
add
push
scas
clc
add
fildl
and
sub
sbb
mov
pop
or
push
mov
mov
jl
je
dec
push
sbb
andl
jle
sbb
icebp
test
call
call
int3
insb
aaa
pop
adc
lcall
xor
push
add
adc
pop
fwait
nop
pop
xor
inc
pop
or
mov
cmp
push
out
imul
xor
and
int3
mov
or
push
xorl
push
mov
dec
sti
lea
mov
or
inc
testb
je
ficompl
pop
inc
sub
icebp
insb
push
sbb
or
adc
xor
sti
gs
int
insl
push
mov
loopne
pushf
cld
inc
xchg
test
push
push
xchg
mov
mov
add
lock
lcall
or
sti
inc
test
lahf
cmp
nop
sbb
dec
jnp
jmp
ss
mov
and
or
subb
mov
jo
lret
mov
insb
outsl
jb
jb
das
lret
mov
gs
je
push
sahf
add
data16
mov
and
pop
pop
push
sbb
cld
or
loopne
clc
or
or
jl
mov
mov
mov
add
ret
movsl
pop
imul
fs
mov
lret
jne
push
in
and
leave
rcrb
scas
pop
adc
jg
dec
arpl
mov
or
cvtps2pd
mov
adc
and
mov
je
popf
xchg
mov
aas
les
enter
xchg
add
mov
xor
mov
cs
adc
cs
arpl
or
inc
sbb
int3
stos
push
pop
pop
xor
inc
insb
outsl
jae
dec
popa
outsb
fs
cmp
inc
xchg
ljmp
call
outsl
arpl
fs
jne
add
fs
imul
jg
jns
and
fs
inc
pop
fdiv
sarl
popa
insl
gs
xor
ja
mov
popa
je
and
insl
xorl
cvtps2pi
add
outsb
mov
mov
add
or
jb
sub
mov
jle
test
push
or
inc
ds
js
nop
add
imul
jb
sub
dec
bound
arpl
mov
gs
outsl
add
jae
sub
orb
adc
addb
imul
push
add
lea
xchg
dec
jo
mov
mov
push
xchg
outsl
ja
inc
xor
mov
test
mov
jne
mov
sti
mov
pcmpeqb
and
insb
mov
pusha
push
das
dec
outsb
add
push
pushw
gs
jge
xor
pop
jo
ret
or
imul
dec
fwait
bound
pop
push
js
xor
inc
int
orb
inc
sub
push
outsl
outsl
insb
dec
mov
sbb
popa
jo
push
push
ret
inc
popf
dec
push
orl
ja
add
out
cmp
mov
push
dec
inc
push
dec
inc
es
mov
lods
add
jo
pop
retw
push
push
mov
packssdw
pop
pop
add
jne
or
pop
mov
mov
outsb
sbb
outsl
adc
push
jo
pop
inc
push
xor
sti
shll
arpl
popa
jge
sub
rolb
mov
dec
outsb
data16
xchg
mov
movsl
add
add
std
outsb
aaa
insb
fstpt
inc
arpl
jo
inc
popa
arpl
fcmovbe
sub
push
inc
inc
push
mov
add
or
xchg
mov
sub
push
cltd
add
insl
popf
insl
ret
sbb
lds
ret
or
pop
inc
arpl
adc
ja
xor
dec
stos
and
jno
inc
mov
xor
jnp
mov
xchg
xor
xchg
lcall
pushl
adc
xor
xor
jno
mov
cmpsl
xor
xor
xor
xor
xor
xor
jno
lahf
xor
xor
xor
xor
xor
pushl
xor
xor
xor
pop
xor
xor
adc
sbb
arpl
sahf
ss
decl
std
ss
ss
ss
pop
ss
sbb
and
sub
ss
inc
aaa
push
aaa
pop
aaa
sti
jmp
aaa
jg
or
adc
and
xor
pop
cmp
imul
cmp
addb
jg
sbb
cmp
imul
movsb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
mov
mov
cmp
add
xchg
call
out
psubq
xchg
add
add
clc
add
mov
iret
scas
cltd
out
daa
cmc
add
jnp
add
incl
add
cmp
shll
cmp
notb
aad
roll
add
cmp
add
ja
mov
iret
sbb
add
stos
cs
push
xor
pop
aad
add
lods
adcl
subl
xchg
pop
loopne
mov
pop
cmc
push
jb
xchg
or
das
or
adc
rolb
cmpsb
imul
insb
lcall
push
ja
imul
dec
shll
mov
ds
and
cmpsb
pop
ss
ljmp
cmpsb
imul
cmpsb
imul
adc
and
dec
dec
shll
stos
mov
fsubr
cld
or
insb
lcall
pushf
lret
shll
push
inc
fnstenvs
lret
cmpsb
imul
insl
mov
rolb
sbb
sub
jmp
inc
dec
pop
pusha
pop
push
insb
fwait
cmpsb
inc
add
roll
out
push
dec
shll
push
fs
shll
jbe
mov
test
mov
dec
rcr
in
inc
shl
mov
fmul
mov
or
add
add
mov
push
addb
cmpsl
push
ss
imul
rclb
movsl
dec
add
je
pop
adc
cmp
add
add
je
push
jne
jns
stos
gs
scas
inc
aaa
in
push
divb
adc
push
dec
dec
add
push
mov
xchg
or
add
lret
aaa
sbb
fadds
lahf
xchg
cmpsb
jns
mov
adc
sbb
pusha
sub
inc
lcall
mov
add
addb
pop
add
rclb
inc
add
push
ret
sbb
and
lret
add
or
push
and
add
mov
xchg
int
add
xor
pop
and
xchg
mov
add
pop
rcr
adc
in
data16
and
add
lret
mov
dec
es
xchg
lea
pop
xchg
mov
xchg
pop
inc
fildl
or
add
and
and
mov
sbb
outsl
cmpsb
pop
enter
das
xor
xor
and
pop
xor
ud2
push
sbb
add
aad
ja
ljmp
arpl
mov
xchg
punpcklwd
jmp
scas
js
push
sub
add
incl
push
inc
jb
push
and
ja
or
push
mov
jae
and
addr16
sub
push
sbb
pop
add
add
pop
pop
cs
add
lret
outsl
das
pop
push
or
push
adc
sti
push
inc
push
inc
dec
adc
outsl
divw
push
sub
incl
pop
dec
fwait
ja
jb
inc
popa
jb
push
push
imul
call
call
push
testl
xor
mov
mov
mov
sbb
dec
push
push
ss
sbb
fwait
jle
jno
mov
lea
sub
js
je,pn
xor
fincstp
xor
push
gs
insl
daa
push
add
jne
mov
push
cld
jns
jae
arpl
jns
cmp
clc
jne,pn
js
jecxz
inc
sbb
pop
and
lea
or
xchg
ret
rclb
push
and
add
push
push
mov
push
std
mov
add
xchg
pop
mov
push
outsl
push
imul
or
xorl
les
pop
rorb
cwtl
mov
push
push
add
fiaddl
jb
mov
mov
rcll
push
add
adc
mov
adc
and
shll
add
or
fwait
lea
mov
lea
and
add
or
sub
movsb
sbb
inc
pop
sbb
and
inc
lcall
and
or
xor
or
add
aas
nop
sbb
imul
add
add
lea
test
js
lea
mov
mov
sbb
jg
out
push
sti
aam
adc
add
mov
pop
pop
out
out
out
fcmovnu
mov
fucomp
cmp
out
lock
jle
aas
dec
iret
imul
movsb
pop
and
repz
push
fwait
bound
cmpsl
mov
adc
cld
arpl
insl
daa
adc
mov
and
and
jbe
dec
pusha
mov
adc
mov
sub
rcr
loope
fsubrs
popa
adc
out
popf
and
outsb
in
sbb
mov
leave
mov
daa
daa
jo
mov
aaa
inc
daa
jne
std
loope
mov
andl
push
mov
mov
mov
mov
push
sbb
jae
xchg
outsb
adc
cmp
sbbl
mov
repz
in
mov
add
adc
jb
mov
and
fstps
fs
out
fistl
dec
xlat
mov
sub
mov
out
lods
cmp
arpl
mov
jnp
loope
fbstp
add
or
mov
loope
xchg
movsl
add
mov
mov
es
xchg
std
cmp
mov
testl
repz
daa
stc
mov
dec
jge
mov
repnz
dec
movl
insl
add
push
popa
test
or
sti
out
div
push
call
dec
sbb
mov
lods
mov
xchg
out
popf
cmp
xchg
pusha
popl
mov
dec
insl
xchg
mov
mov
jg
xor
in
add
idivl
push
add
mov
mov
adc
mov
or
orb
arpl
pop
dec
ja
sbb
ret
inc
fnsetpm(287
or
lds
pop
pop
out
xchg
push
sbb
or
lods
sti
daa
xor
mov
sbb
es
cmp
mull
pop
in
fists
arpl
fildll
aaa
add
getsec
ja
jmp
jecxz
ss
repnz
cmp
loope
xorl
mov
repz
lahf
xor
xor
aas
sub
xchg
mov
xchg
mov
and
add
stos
push
pop
mov
jmp
add
dec
and
inc
xchg
das
test
mov
sarb
hlt
jmp
out
scas
push
lods
mov
inc
notl
movsl
jnp
movsl
inc
jnp
mov
jo
cmpsl
jmp
dec
xorl
pop
xchg
scas
iretw
daa
mov
sbb
std
ljmp
dec
jge
add
fistps
and
rorl
sub
and
pop
in
xchg
add
fldl
cwtl
cmpsl
std
dec
cmp
jae
and
mov
mov
add
fildl
decb
jbe
mov
and
jl
loope
add
cmp
xor
push
out
jp,pn
imull
dec
sbb
adc
adc
add
loopne
mov
dec
cmp
fisttpll
ret
lahf
fs
jge
addr16
sbb
add
or
adc
test
mov
mov
leave
in
jmp
xchg
add
and
aam
fildll
inc
jb
je
and
jbe
jo
sbb
push
dec
lea
mov
fs
and
jo
and
shrb
dec
ja
movb
adc
into
mov
call
mov
stos
pop
xor
xor
jp
mov
or
mov
mov
leave
iret
mov
mov
int3
lods
roll
jg
int3
loope
mov
ret
fdivl
hlt
push
out
jp
inc
sub
or
inc
shlb
jnp
adc
xor
dec
push
out
inc
inc
dec
pop
and
add
mov
jb
cwtl
cmovl
addl
test
test
leave
in
mov
mov
rol
push
pushf
pushl
cli
sub
mov
add
pop
mov
mov
push
cwtl
cli
cwtl
addr16
push
jl
icebp
sbb
sbb
mov
add
lahf
mov
sbb
in
fucomi
fiaddl
dec
in
add
jp
adc
inc
decl
ljmp
add
cli
jbe
sub
sub
inc
add
sti
push
push
mull
fiadds
imul
push
cld
mov
ficompl
and
fidivl
cwtl
xor
adcl
mov
jnp
out
mov
or
mov
and
and
mov
pop
insb
dec
mov
lds
int3
or
mov
xor
cmp
cs
pop
sti
outsl
pop
sub
add
mov
andb
mov
or
push
aas
mov
pop
fistl
pop
cmp
push
aaa
insb
pop
jle
or
call
add
jl
dec
xor
adc
add
and
nop
lahf
les
add
enter
mov
pop
aaa
int3
adc
jp
dec
xor
push
add
inc
add
jo
sub
add
test
push
and
arpl
add
add
cmpw
cmp
lret
das
cmpl
ret
int3
or
mov
pop
push
and
mov
push
imulb
into
pop
push
or
adc
mov
test
test
outsb
sub
jg
in
iret
je
jmp
cmp
je
adc
pop
cmp
ja
jge
mov
in
in
xor
xchg
loopne
push
aaa
add
or
inc
jmp
cmp
jb
sub
je
mov
fistl
addl
or
push
push
xchg
mov
or
ret
imul
mov
xor
mov
outsb
or
push
mov
enter
pushf
add
cmc
fstpt
add
jge
push
cs
imul
fildl
fistpl
push
push
and
push
call
dec
ret
xlat
insl
lods
test
insb
dec
jno
sbb
pop
push
sbbb
js
xchg
pop
sub
mov
testl
jge
movsl
add
mov
mov
movsl
movsb
mov
in
in
enter
mov
mov
mov
movsb
mov
les
inc
cmp
ror
mov
pop
inc
mov
enter
movsb
pop
dec
pop
mov
push
mov
test
xor
add
mov
adc
clc
call
xchg
add
and
xchg
add
mov
or
cmp
jle
lock
hlt
push
pop
daa
pop
mov
xor
push
pop
call
icebp
cmpsb
lods
jge
jne
faddl
hlt
cmp
inc
inc
mov
mov
jb
sub
clc
mov
fstpt
enter
sub
shrl
xchg
rcrl
cmp
in
pop
mov
push
ljmp
popf
loopne
fistl
subl
dec
cld
pop
jb
jmp
pop
es
pop
jne
shll
push
sub
or
leave
add
push
or
divb
call
jne
inc
mov
push
std
xchg
out
mov
push
push
aaa
cmp
jne
and
idivl
mulb
mov
insb
out
and
inc
push
pop
jmp
jle
cld
call
dec
add
jmp
add
push
jo
mov
ja
outsb
loope
call
pop
jbe
fscale
or
movl
ret
clc
inc
or
jmp
nop
dec
dec
cmpsl
je
add
jo
add
add
into
xchg
add
mov
push
adc
pushf
nop
daa
adcb
jns
xchg
js
sub
mov
mov
add
cmpsl
add
nop
push
add
jne
xor
xchg
push
or
pcmpgtb
aam
xor
jb
jns
push
mov
mov
sub
pop
addl
xor
jle
xor
jg
cld
fstpt
pop
adc
push
mov
cmp
ja
loopne
push
sbb
push
sbb
cmp
je
test
push
fadds
and
jns
inc
hlt
mov
push
fstpt
sub
daa
pop
mov
cmp
jne
and
push
insl
push
inc
clc
xchg
mov
inc
int
cmpsl
imul
xchg
dec
ret
inc
add
cmp
sahf
inc
cmp
and
loopne
mov
inc
adc
push
neg
inc
cmc
pminub
nopl
mov
cmp
daa
lahf
clc
cltd
add
adc
and
sub
push
xor
leave
cmp
adc
addl
lea
and
shll
dec
adc
fcoms
add
les
hlt
scas
fimull
shlb
aaa
ret
push
je
add
ss
or
mov
dec
xchg
fldcw
push
push
pop
enter
into
fidivs
push
jmp
adc
add
xor
and
imul
or
dec
in
pop
push
xchg
popa
mov
addr16
pop
inc
idiv
push
jecxz
stc
adc
jg
sbb
jmp
andb
aam
outsb
push
loope
xor
dec
enter
ds
add
mov
mov
add
dec
pop
repnz
test
pop
add
push
call
repnz
fcoml
add
mov
add
pushf
stc
adc
adc
adc
adc
ficomps
jmp
inc
mov
jmp
and
or
pop
clc
fwait
push
clc
fs
ja
xor
mov
cmpb
xchg
loope
mov
jl
or
icebp
in
incl
imul
add
andl
in
jg
jbe
or
inc
sub
and
or
and
add
push
pusha
loope
outsb
add
lock
jge
pop
pop
loop
out
mov
mov
shrl
cmp
loopne
neg
aas
cmp
jae
incl
lret
shr
add
dec
xor
loop
clc
pop
inc
push
mov
push
sbb
mov
dec
push
pop
jne
adc
lock
xor
lea
sbb
sti
mov
adc
mov
mov
add
loop
or
adc
or
mov
add
jne
lea
or
fsts
push
add
aas
stos
pop
call
inc
cmp
sti
movsl
pop
jne
or
fwait
sti
not
and
push
pop
jl
pop
jl
and
or
add
lea
xchg
push
out
shr
mov
and
add
repnz
not
and
lock
testl
mov
test
mov
js
repnz
aam
outsl
mov
outsb
or
fisubs
fimull
add
lea
and
out
xadd
adc
pop
inc
sub
lock
and
not
cmp
add
repz
xor
into
mov
shr
or
add
cs
jne
daa
pop
jg
push
mov
sbb
mov
push
lods
loop
pop
stos
sti
cli
mov
push
push
xchg
jle
not
and
pop
test
adcb
sub
inc
mov
fidivl
add
aaa
fsubrs
sbbb
or
pop
imul
sbb
inc
xor
scas
roll
mov
test
sbb
pop
int3
xor
add
add
out
ja
bnd
and
cli
sbb
imul
rolb
fcomp
cwtl
subb
jns
out
sbb
add
rcr
mov
pusha
adc
pop
scas
testl
sti
mov
pop
les
subb
add
pop
push
stos
addr16
loop
movups
subl
push
fcom
add
cmp
fdivrs
pop
dec
inc
imul
xlat
mov
sbb
les
adc
sub
and
xor
or
or
push
xchg
xchg
jno
std
stos
lods
scas
mov
jo
add
and
outsl
lods
fnsave
enter
das
push
mov
mov
pop
mov
xor
add
and
xchg
outsl
in
mov
or
popa
adc
add
or
in
mov
mov
mov
shl
ljmp
jne
and
aad
aam
pop
bound
ret
sbb
shl
add
and
xor
clc
jg
sti
dec
cmp
sbb
iret
inc
rclb
push
fadds
hlt
push
ja
lods
xor
fdiv
push
pop
pop
andb
push
repnz
sarl
out
and
fstps
jmp
lock
imul
sbb
imull
mov
out
aaa
pop
adc
call
xlat
lods
mov
adc
xchg
mov
shlb
jge
repz
adc
add
iret
outsl
fistpl
fimull
out
fcoms
mov
cmp
mov
jle
jae
fnstcw
out
adc
leave
nop
pop
or
stos
mov
fisubrs
mov
mov
out
loope
out
sbb
loopne
jle
lcall
add
pop
aaa
scas
jne
insl
or
mov
push
fbstp
inc
fimuls
xchg
mov
adc
adc
sbb
call
int
inc
loop
shr
or
xlat
in
int
fdivs
test
rcrb
clc
ret
cmc
out
out
cld
cld
not
lcall
flds
outsl
addr16
int
adc
movl
cmpsb
dec
fisttps
sub
adc
or
xor
test
mov
pusha
sbb
test
and
cli
mov
xor
lcall
js
repnz
popa
popf
insl
adc
mov
sti
xor
mov
repnz
or
in
mov
call
in
inc
xchg
in
mov
inc
push
sbb
xchg
fisubrl
xchg
mov
fimuls
cltd
pop
sub
fmuls
jecxz
int3
pop
pusha
dec
mov
cli
jle
pop
pop
xor
push
jo
mov
push
mov
or
xlat
mov
xlat
loop
jo
jle
sub
jae
aaa
or
ret
lock
sub
ljmp
mov
xor
test
xchg
or
cmpsb
pop
jae
adc
fidivs
test
orl
out
cmp
imul
pop
or
push
aas
sbb
pop
mov
rcl
fstps
test
push
in
mov
xor
ss
in
jb
mov
clc
jl
pop
je
dec
testl
gs
lods
les
cli
cmp
cli
mov
mov
add
xor
sub
cmc
ret
rcrb
sbb
push
or
in
repz
addb
push
xchg
ljmp
inc
sub
lret
push
or
pop
sahf
outsl
dec
mov
stos
adc
fwait
xchg
lock
hlt
cmp
xchg
cld
cltd
or
mov
scas
xlat
mov
ret
pop
jo
lret
pop
gs
sbb
rcrl
or
lock
int3
or
push
or
sbb
repz
dec
jge,pt
out
call
unpckhps
fwait
xchg
sbb
pop
test
or
jg
jns
pop
push
call
outsl
jecxz
jp
sbb
das
dec
sbb
int
jb
pop
jb
fistpl
loopne
sub
jecxz
jp
pusha
call
fsubs
enter
add
mov
scas
aaa
pop
mov
lds
jp
sbb
ja
mov
xor
pop
imul
out
loopne
mov
aaa
test
xor
aam
rcl
sub
fldenv
pslld
ret
repz
rol
test
mov
mov
push
dec
mov
pop
fcmovbe
pop
mov
out
xlat
pop
add
pop
movsb
mov
js
data16
push
or
or
pop
insb
inc
add
push
mov
mov
inc
xchg
dec
cld
cmpb
sarl
ljmp
push
push
push
testb
inc
scas
mov
arpl
insb
js
cmovne
adc
fidivl
lea
out
lahf
inc
clc
mov
pop
pop
inc
test
nop
iret
pop
pop
mov
mov
in
sti
push
ror
or
add
sbb
cmp
jne
xchg
sbb
stos
stos
inc
lea
mov
pushf
push
xor
test
incl
cltd
pop
cmp
mov
cld
call
sub
xchg
mov
mov
je
inc
add
cmp
out
or
testb
mov
fcoml
addr16
jne
mov
lea
lods
sbb
add
pop
jnp
gs
outsb
int
push
loopne
pop
int3
rolb
aam
xchg
jae
fsubr
popa
cmp
xchg
jmp
and
fldt
pop
aad
mov
mov
out
add
repz
in
add
in
gs
das
iret
cmp
iret
lock
jo
hlt
gs
popf
lods
subb
cmp
lret
mov
pushf
or
aam
inc
jge
test
js
fdivrp
inc
fwait
call
sbb
adc
mov
pop
dec
lock
mov
aam
cmp
les
int3
push
in
or
pop
outsb
and
enter
pusha
loopne
push
inc
jbe
adc
adc
pop
push
mov
or
xor
in
dec
lret
push
pop
cs
push
out
push
inc
dec
inc
mov
mov
pop
mov
mov
xor
pop
mov
pushf
jae
add
repz
mov
sbb
push
dec
push
push
sbb
dec
mov
lret
pop
int3
add
and
pushf
or
pop
push
xchg
jmp
and
xor
out
adc
sbb
push
add
clc
dec
mov
adc
sbb
decb
xchg
pop
push
imul
sahf
add
cmp
in
mulb
push
subb
das
sub
push
mov
test
adc
insl
or
imul
push
movhps
dec
push
add
je
add
cmp
test
sub
mov
add
nop
or
push
dec
es
test
ds
or
fstl
sti
adc
cmp
mov
jmp
ja
pushl
push
je
dec
dec
cmpw
jne
pop
push
arpl
shrl
inc
add
cmp
add
mov
mov
mov
pop
sub
jmp
int3
enter
inc
and
ret
dec
mov
mov
push
aad
inc
jl
pop
sbb
aad
jbe
cmp
dec
ja
movl
push
push
mov
push
or
push
je
xchg
ljmp
cmp
testb
mov
cmp
je
fbstp
repnz
cmp
jne
push
pop
addps
xor
pop
sbb
add
jbe
ja
hlt
and
stos
loopne
pop
pop
daa
inc
enter
xchg
faddl
xlat
fdivl
loopne
jo
push
xchg
cmp
sete
icebp
das
outsl
fdivrl
adc
dec
inc
adc
push
faddl
pop
fs
adc
andb
or
pop
cli
test
stos
in
mov
mov
mov
mov
pop
mov
mov
sbb
fs
mov
push
nop
or
loopne
mov
mov
cmp
scas
push
and
int3
xchg
imul
rorb
mov
sbb
mov
cwtl
pop
cmpsl
push
shrb
call
dec
mov
xor
sub
xor
mov
adc
int
xor
sub
mov
loop
jg
std
and
push
add
bound
insb
int
insl
pop
sarl
mull
push
mov
mov
fsubrl
lea
rcrl
decl
int3
cmp
mov
mov
fdivrl
scas
or
lods
sub
jae
mov
push
jnp
push
push
pop
dec
sarb
inc
mov
dec
and
std
lds
loopne
xchg
in
sbb
pop
jne
jp
push
pop
pop
call
call
sub
cmp
sub
inc
dec
inc
and
jmp
in
shrb
mov
mov
jmp
les
mov
dec
mov
jg
stos
and
movsb
add
sbb
xor
pop
popf
test
add
xor
push
push
mov
mov
decl
int
sbb
mov
nop
xchg
lret
in
scas
insl
mov
mov
mov
mov
jb
pop
cs
mov
mov
mov
mov
mov
hlt
jb
outsb
mov
gs
xchg
gs
js
insb
outsl
jb
fsts
and
fcmove
mov
fcmovnu
gs
aam
test
loop
scas
fnstenv
jecxz
pop
in
push
out
dec
out
mov
xchg
inc
call
xchg
insl
shll
imul
sub
pop
mov
ret
rol
add
xor
enter
scas
pop
outsb
fcmovne
cmp
int3
hlt
xchg
push
xchg
xchg
mov
mov
mov
lcall
mov
adc
mov
mov
outsb
fwait
mov
inc
mov
insl
mov
movsl
cmpsb
xor
test
push
test
int
cmc
div
clc
ds
mov
cli
jns
lea
add
cmp
cmp
mov
shlb
aas
or
pop
cmp
shll
loopne
mov
movsb
std
pop
aaa
nop
mov
sbb
pop
fs
test
sbb
insb
xchg
ret
pop
dec
data16
lds
xor
xchg
dec
scas
dec
mov
mov
dec
rolb
pop
xchg
jae
hlt
mov
test
adc
cmp
insl
loope
mov
mov
out
shrb
sar
mov
lcall
sti
push
sub
adc
jo
negb
mov
loopne
xchg
imul
pop
cwtl
inc
shll
scas
fcoml
sbb
daa
sarl
xchg
cwtl
mov
pusha
aaa
xor
adc
movsl
adc
add
jmp
sbb
mov
adc
cmp
jmp
mov
nop
repnz
aaa
lcall
xor
inc
les
fcompl
adc
cld
nop
addr16
les
push
cmc
cld
mov
mov
mov
xor
ljmp
add
fcomps
adc
lds
mov
or
cld
push
cld
xor
dec
testl
inc
adc
and
jl
mulb
pop
pop
notb
jo
pop
aas
mov
aas
or
or
out
into
sub
xor
popf
adc
sub
sbb
xor
mov
out
int
insl
cld
sbb
cmp
inc
xchg
loopew
adc
test
loop
mov
in
or
jnp
sbb
insl
mov
pop
cmpsl
inc
cmp
jl
jns
cmp
bound
scas
inc
notl
jge
xor
lcall
movl
mov
cmp
xchg
jmp
or
loopne
and
jnp
cmpl
outsl
leave
push
push
ss
in
pop
hlt
adc
adc
lds
fsubl
iret
fcomps
cmp
push
dec
lret
xchg
cmp
push
xbegin
mov
xor
jg
mov
mov
out
jg
cmp
jae
popa
sub
mov
jge
cmpsl
xchg
cmpsb
cld
call
ljmp
mov
insb
inc
outsb
iret
pop
or
inc
mov
add
cmpsb
cmp
add
add
push
and
pop
mov
xlat
mov
scas
add
lock
fs
loope
push
xor
push
push
cmp
inc
mov
mov
push
pop
or
ss
or
stos
adc
lea
ret
jo
ret
nop
mov
mov
fs
idivl
cld
test
mov
pop
cmpl
rol
imul
dec
push
imul
fidivl
fildl
frstor
jae
fbstp
xor
xor
xor
mov
lcall
shll
lcall
mov
add
dec
mov
xor
mov
outsb
dec
shll
xor
mov
leave
pop
pop
lret
lret
mov
dec
popa
js
push
outsl
outsb
xor
pop
inc
andb
repnz
cmp
and
mov
mull
out
add
mov
cltd
pop
daa
add
sbbb
sbb
nop
and
shlb
pusha
pop
add
ss
push
pop
push
hlt
dec
enter
mov
in
fcomps
add
xor
int
rcll
jmp
xchg
andb
inc
adc
adc
loope
shll
shlb
stos
dec
shll
outsl
ja
inc
rolb
scas
rcr
lcall
fsts
dec
rorl
sub
aam
or
sbb
sub
push
call
push
push
popf
movsl
adc
imul
or
add
pop
cmp
dec
adc
dec
adc
mov
jae
pusha
or
rclb
es
xor
push
push
mov
or
xor
loopne
in
fiadds
ret
mov
jmp
xchg
clc
lock
lock
or
jg
cmpsl
and
jl
push
mov
push
or
dec
xchg
repz
ror
xchg
inc
in
in
lock
xor
inc
test
sub
adc
xor
adc
dec
mov
or
jne
xor
dec
jo
and
pop
ljmp
xor
adc
jp
hlt
push
mov
cltd
add
std
lock
icebp
movhlps
lea
push
movsl
movsb
cmp
cmp
loope
hlt
pushf
nop
and
add
sub
add
add
adc
and
add
push
mov
sarl
push
push
adc
push
push
lock
mov
test
and
div
push
insb
das
enter
lock
push
subb
and
in
and
call
clc
add
add
out
push
dec
lea
insb
mov
jo
imul
xor
xlat
data16
insb
repz
gs
shll
test
popa
jo
dec
shll
dec
outsb
addb
out
push
jb
nop
out
aam
jne
add
inc
push
sbb
xchg
jno
jecxz
xchg
jae
mov
fcom
mov
inc
fmull
dec
xor
and
inc
xchg
or
xchg
ds
addr16
adc
icebp
mov
sahf
hlt
xchg
not
mov
cmp
add
push
mov
outsb
xor
add
pushf
ss
pop
sbb
or
inc
in
sub
arpl
inc
in
jl
stos
push
cmpsb
pop
rolb
sbb
cmp
inc
lcall
push
popf
mov
jne
sub
jle
push
int3
cmp
push
cmp
cmp
fsts
ss
xor
sbb
xor
xor
sub
xchg
dec
pop
push
jmp
stc
sbb
orb
or
je
mov
imull
adc
data16
nop
mov
pop
mov
sbb
pop
les
push
mov
mov
inc
jbe
js
jb
pop
es
jbe
push
mov
dec
lret
in
fsincos
sub
adc
jle
out
push
mov
cwtl
mov
jb
loope
xor
xor
pop
mov
and
outsl
mov
pushf
clc
std
push
sysenter
cltd
adc
xchg
add
test
fxch
dec
jle
nop
pop
arpl
sbbb
dec
sahf
xor
inc
gs
dec
or
inc
inc
sbb
and
fadds
xor
loopne
cmp
or
in
in
or
nop
adc
and
loope
cld
add
lcall
ljmp
in
sbb
adc
xorb
push
in
pop
push
or
dec
push
loope
sti
cmpsb
loopne
pusha
jle
mov
push
aaa
sarb
xchg
fdiv
mov
ss
lret
das
adcl
stos
xchg
xchg
add
enter
jl
mov
push
mov
int
mov
adc
call
xor
ss
pop
sub
mov
adc
lds
es
insb
add
shlb
mov
push
lcall
xchg
lcall
add
pop
mov
lock
pop
mov
imul
add
sti
dec
jno
flds
pop
push
daa
add
push
lods
scas
fsts
mov
sbb
data16
or
inc
cmpxchg
cwtl
out
pop
fmuls
add
outsb
lret
inc
cmpsl
popa
cmp
jae
mov
popf
sahf
adc
cmpsb
mov
movsl
cmpsb
imul
mov
lds
cmp
sub
es
ret
dec
shll
cmp
xor
es
cmp
and
pop
aam
dec
and
dec
shrl
das
enter
lret
int3
xor
xlat
xor
into
inc
iret
jae
rcl
jne
rcl
rcll
aam
aad
pusha
shll
fcmovu
jo
lcall
and
movsb
imul
cmpsb
cmp
imul
sbb
jae
lcall
es
inc
test
jae
repz
mov
cmpsl
test
or
xchg
incb
ret
jmp
leave
verr
fistpl
or
adc
sti
adc
push
int
pusha
nop
xchg
sti
sub
outsb
paddw
fdivl
push
push
rolb
fadds
jl
lea
mov
or
adc
je
arpl
int3
sub
leave
aad
into
aaa
push
std
jge
mov
xchg
jns
push
or
pop
outsl
pop
ljmp
cwtl
adcl
mov
je
das
enter
mov
stc
or
je
sti
add
shl
or
stos
loop
adc
push
push
stos
js
lock
inc
fs
jns
or
push
pop
jno
ljmp
jp
sbb
call
fdivrs
dec
push
in
push
shll
push
push
lahf
cmp
push
iret
das
test
push
mov
sub
mov
stc
je
adcl
pop
jge
sbb
das
cmp
test
lock
test
push
sub
push
xor
jl
xor
or
aas
jecxz
mov
rorl
sub
push
psubsb
sub
cmp
xchg
fstpt
aas
cmpsl
fnstcw
lds
add
or
sub
mov
add
rcl
fcomp
sub
call
leave
add
lock
push
movsb
jb
jns
push
mov
jl
xor
mov
xor
adc
inc
and
adc
sub
into
or
mov
or
xchg
adc
les
fistpll
dec
mov
test
dec
pop
cmp
pop
adc
inc
rcrb
jnp
clc
and
idiv
push
jle
movsl
hlt
cmp
jo
scas
and
in
xor
pop
jmp
add
fistl
je
xor
mov
mov
add
sbb
push
ret
sub
aam
adc
mov
or
in
lcall
js
mov
push
xor
push
pop
xchg
gs
dec
dec
dec
dec
inc
gs
xchg
gs
cs
insb
jo
insb
inc
fisubl
jo
sub
push
popf
insb
jne
cs
insb
insb
xchg
call
fwait
adc
lcall
outsb
gs
lcall
gs
pusha
lcall
shlb
je
xor
shll
dec
jo
outsb
push
xorb
xor
mov
das
roll
aam
mov
mov
mov
nop
inc
xchg
gs
js
cmpsb
imul
mov
cwtl
js
lcall
je
inc
dec
xlat
xor
cmp
inc
loop
or
xor
in
ds
mov
dec
shll
mov
mov
lgs
or
outsl
mov
mov
arpl
rol
arpl
xor
rorb
int3
mov
fcomp
lea
xor
mov
mov
cmp
mov
jae
cmpsb
std
cld
movsl
je
fs
adc
lret
mov
sbb
push
mov
loopne
and
outsb
pusha
insb
xor
je
test
pop
mov
rcll
mov
mov
movsw
pop
fcompl
push
pop
rclb
sahf
lock
outsb
sbbl
adc
pop
mov
orb
je
ljmp
sbb
or
mov
scas
mov
mov
mov
or
push
sbb
pop
icebp
inc
xchg
pop
push
push
jmp
and
sbbl
in
jmp
cmc
xor
or
in
sbb
pop
negb
add
bound
dec
testb
fldenv
pop
andl
jnp
fcoml
ret
call
xchg
fdiv
inc
fcomip
add
jno
mov
or
cld
push
push
in
inc
cmp
or
mov
jb
inc
lret
or
add
in
add
pop
sub
call
or
push
dec
shll
pop
xor
fs
insb
insb
mov
insb
add
jb
jbe
pushf
insb
inc
je
arpl
jl
push
out
insl
jne
sub
sub
enter
dec
pop
inc
sub
mov
push
les
mov
in
lcall
cmp
test
mov
push
sbb
ret
popa
xorl
hlt
dec
or
jle
xor
and
inc
popa
jmp
shrb
jg
and
enter
sbb
dec
daa
cmp
test
divb
rcrb
pop
xor
lea
call
sbb
jne
jne
jb
out
inc
je
fcmovnb
push
aaa
sbb
jns
push
jmp
and
loopne
cmp
or
loope
sahf
jns
cmp
lcall
dec
push
loopne
and
das
and
xor
shll
outsl
outsb
cmp
shll
jo
jae
pusha
and
jne
add
enter
aas
mov
in
sbb
jae
negl
dec
adc
mulb
mov
andb
ds
jecxz
lds
std
mov
mov
addb
inc
sbbb
jo
cmp
int3
neg
rcrb
pop
push
xor
jecxz
sbb
adc
pop
aaa
xor
cs
int
pop
push
shlb
inc
lods
xchg
test
push
push
push
lcall
je
lcall
subb
jne
and
adc
shrl
rolb
lcall
cmc
sbbb
je
cmpl
orl
mov
xchg
into
repz
loopne
div
adc
xor
stos
stos
imul
shll
or
push
pop
jno
mov
cmp
pusha
inc
fcompl
xchg
and
fs
sub
pop
xchg
pop
jne
add
mov
sahf
xchg
xor
int
lock
adc
loopne
pop
jge
add
rorl
imul
stc
or
fcoms
push
mov
hlt
or
push
and
flds
in
push
jl
and
daa
add
loopne
ret
loope
cmp
ret
mov
call
push
cmp
push
lret
int3
rorl
gs
inc
dec
mov
cmp
enter
sub
cmc
cld
jb
sbb
mov
pop
jb
mov
ljmp
jl
sbb
jb
adc
repnz
lret
es
call
xchg
jo
push
jg
xchg
or
enter
or
std
sub
inc
cwtl
and
pop
xchg
jae
popa
arpl
xchg
gs
outsl
outsb
cmp
xchg
gs
imul
dec
xchg
outsb
gs
lods
scas
je
orb
mov
bound
mov
scas
fnstenv
mov
pop
rol
dec
shll
ret
ret
shrb
jne
int3
sub
jne
cmc
aas
lahf
popa
arpl
xor
mov
outsl
cmc
outsb
cmp
fs
jb
rorl
xor
es
or
sub
ret
xor
inc
or
data16
sbb
dec
sarl
outsb
push
fistps
pop
std
dec
ss
mov
adc
dec
mov
scas
pop
out
in
jmp
push
add
inc
ds
sbb
jmp
or
xchg
repz
push
lea
enter
push
ret
inc
xchg
xor
sbb
jo
fadd
call
clc
pop
add
scas
sbb
xor
call
mov
shlb
aas
sub
mov
les
sbb
movsb
jle
and
subl
add
jns
cli
stc
jae
mov
sub
arpl
pushf
sub
outsb
cmp
or
dec
shll
es
pop
andl
imul
test
or
sbb
in
cmp
add
in
scas
sub
imul
pop
divb
cltd
popa
cwtl
sbb
sbb
ja
clc
popa
dec
shll
popa
arpl
xorb
popa
jb
mov
adc
je
jb
hlt
popa
mov
mov
mov
jb
ljmp
push
xor
push
adc
pop
push
jb
sub
nop
lock
push
in
pop
adc
ljmp
xchg
fcoml
and
mov
push
shll
in
sub
push
imul
lret
insw
call
push
call
shl
arpl
sbb
aas
aad
add
jle
mov
sbb
push
and
cld
jl
and
jmp
rolb
jle
push
push
add
adc
out
pop
fisubrs
mov
shlb
push
sbbl
insl
adc
sarb
jl,pn
add
in
pop
adc
add
sbb
push
push
pop
faddp
add
cli
cmpsl
jge
and
pushf
popf
dec
xchg
test
add
stos
out
clc
out
pop
cltd
xchg
jle
and
push
and
loopne
add
pop
push
inc
aas
push
sbb
movsb
xchg
loope
inc
inc
inc
loop
in
pop
inc
inc
inc
out
call
out
movsb
jmp
xor
add
or
call
pop
mov
insl
push
gs
lcall
and
or
and
inc
inc
inc
aas
in
in
out
jnp
in
pushf
in
lock
sbb
fnstenv
enter
frstor
fdivrp
mov
cmp
insb
loopne
loope
pop
loop
jecxz
popf
and
in
in
out
mov
iret
adc
stos
nop
jg
lea
push
or
jb
js
or
push
mov
repz
xchg
in
add
cli
iret
scas
adc
fdivr
pop
outsb
xchg
and
xchg
mov
ljmp
inc
shrl
bnd
cmpl
adc
xor
dec
push
dec
adc
jbe
into
fwait
inc
add
repnz
mov
aaa
add
adc
cmp
fstpt
lea
cmp
or
fbld
fcmovu
lock
aad
es
stos
lods
mov
mov
cld
push
arpl
cmp
adcb
jne
repnz
cmp
mov
sub
sbb
add
mov
unpcklps
cwtl
out
add
dec
sbb
sbb
and
daa
and
add
adc
das
add
sti
jg
sub
mov
cmp
je
add
pop
or
stc
push
jge
cmpb
or
loope
add
rclb
mov
mov
subl
jb
daa
mov
out
lods
jecxz
adc
push
add
sbb
push
cwtl
es
imull
jno
or
inc
sub
je
andb
mov
insl
push
insl
popa
imul
fs
call
subb
cmc
mov
pop
testl
movsl
call
loopne
mov
cmp
jne
cmp
cmp
sti
pop
aaa
jg
rcrb
add
mov
sub
mov
mov
jnp
xor
sti
mov
xor
push
mulb
jns,pt
jns
push
mov
inc
stc
in
jns
dec
sbb
adc
repz
mov
and
gs
add
and
fadds
inc
int3
data16
or
mov
and
mov
scas
faddl
push
jl
sbb
sub
fistpl
loope
mov
sbb
mov
ficomps
pop
sbb
jge
jge
jmp
aaa
lret
or
mov
insl
mov
fs
fndisi(8087
lds
push
push
mov
pop
sbb
inc
mov
cmp
mov
in
jns
inc
ss
mov
mov
mul
imul
loope
in
stc
aam
dec
or
lds
cmpsl
dec
mov
cmpsl
mov
stos
icebp
into
lds
mov
adc
out
mov
ss
sbb
loopne
dec
jo
aaa
in
add
pusha
mov
fcomp
mov
shll
roll
rolb
pop
sub
or
mov
sub
cmp
and
mov
pusha
push
push
call
cmpsl
inc
adc
pop
cwtl
add
jne
push
xor
fcomps
and
loopne
mov
mov
ja
add
mov
in
add
and
in
aad
roll
mov
out
test
push
cmp
cmp
fiaddl
push
push
repz
or
add
jl
lcall
outsb
dec
mov
lcall
sarb
push
pop
ja
orb
shrb
fildl
xor
mov
sub
push
or
push
or
add
sahf
adc
add
cmp
jne
pusha
mov
xor
fcoms
mov
push
xchg
call
rcll
inc
pcmpeqw
pop
js
lret
mov
pop
jl
orb
pop
sbb
mov
xor
mov
add
inc
pop
pop
sbb
mov
adc
cmpsb
insl
sub
test
mov
dec
call
sbb
xor
mov
mov
ds
movsb
mov
sub
inc
mov
pusha
mov
aaa
sti
nop
adc
sbb
cld
xor
fnstcw
sub
inc
fmuls
or
pop
mov
xchg
dec
inc
add
or
or
mov
sbb
adc
mov
stos
xor
adc
or
js
enter
mov
popa
add
push
leave
das
inc
cltd
mov
sti
ja
mov
and
test
enter
sbb
loopne
cmp
sbb
ja
sbb
inc
in
inc
aad
push
mov
aam
fdivs
pop
sbb
sbb
psubsb
sti
add
leave
add
fistpll
adc
push
mov
and
sti
jb
pause
lret
or
cvtps2pd
push
mov
ficompl
add
mov
mov
jbe
testl
aaa
sbb
push
xchg
pop
add
add
sbb
push
faddl
adc
ret
movb
sbb
cmpsl
movsb
cmpsb
inc
mov
jo
shl
mov
jp
prefetch
imul
rorl
je
jb
les
push
mov
mov
popa
mov
or
sti
cmpsl
pop
mov
cmp
add
mov
push
stos
idivl
cmc
and
pop
push
push
add
inc
xchg
add
testb
int
sbb
testl
pop
pushf
insl
add
adc
or
xor
inc
pop
sbb
int
cmp
pop
loopne
arpl
fld1
lcall
pop
cmp
fs
jno
xchg
ds
mov
ret
call
adc
pcmpeqd
hlt
xchg
lods
loopne
jno
rolb
xchg
adc
mov
mov
cld
xchg
mov
clc
or
lods
push
sbb
je
cmpsl
imul
mov
add
adc
push
cs
sub
sub
lock
push
call
js
fwait
fistps
es
push
fs
or
sbb
sub
emms
les
dec
mov
xchg
pop
loop
call
mov
dec
jnp
add
insl
ret
insb
fs
gs
push
adcl
jmp
test
ss
xchg
sti
ljmp
add
lahf
push
pop
add
add
inc
mov
shll
aaa
mov
or
or
fistpl
pop
or
push
fistpll
cmp
es
or
sub
lock
mov
call
pusha
cltd
jne
sub
enter
lods
mov
pop
aam
lcall
jne
and
loopne
jle
enter
outsl
sbb
jne
aam
fmuls
adc
push
mov
repz
test
inc
and
dec
cmpsl
inc
mov
mov
push
je
mov
arpl
pop
sbb
jge
mov
sti
jmp
iret
push
mov
pusha
jg
inc
sbb
popa
ret
aam
mov
mov
push
lea
push
mov
sub
arpl
push
add
insl
add
mov
pop
jns
hlt
orb
lret
cwtl
or
mov
mov
sbb
lea
adc
sbb
fists
pop
test
inc
sbb
fs
add
ds
jo
cmpsl
sti
out
fnsetpm(287
push
popa
add
adc
xchg
mov
and
in
push
push
ds
jb
nop
or
push
inc
push
leave
out
inc
fs
mov
sub
add
enter
mov
push
sub
cld
inc
iret
and
roll
or
add
cmpsl
nop
inc
cld
inc
xchg
push
out
push
jb
inc
push
adc
add
add
daa
in
enter
push
add
jb
sub
jge
dec
push
add
jge
push
int
test
movsl
sbb
hlt
inc
mov
pop
outsw
outsb
je
dec
dec
mov
pop
in
push
lds
cmc
xor
fwait
stc
mov
or
dec
xor
stos
and
addr16
xchg
loopne
cmp
add
pop
lcall
stos
or
cld
sti
scas
inc
test
add
jnp
push
pop
sbbb
sbb
xor
cltd
lods
mov
push
cmp
and
dec
ja
push
adc
orb
inc
sbb
fsub
test
push
call
add
dec
adc
adc
push
or
call
cmp
xor
xchg
cwtl
mov
mov
sbb
sbb
add
inc
push
mov
mov
ss
xchg
mov
mov
add
mov
enter
mov
pop
xchg
push
jb
sub
mov
cmpsl
mov
jno
xor
and
inc
mov
jmp
popf
call
inc
aaa
outsl
and
jbe
xor
cmpsb
sbb
jbe
adc
inc
fwait
add
sbb
pop
mov
or
or
fiaddl
call
cltd
adc
rorb
add
fsubl
mov
jae
int
push
or
cld
inc
add
inc
nop
xchg
inc
push
mov
dec
or
sbb
aaa
add
arpl
lds
sbb
aam
push
mov
or
xor
movsl
aam
adc
and
aad
jb
mov
mov
jo
jnp
and
gs
in
mov
rorb
sbb
adc
mov
scas
jl
std
leave
std
and
mov
das
aad
icebp
loop
push
cmp
jb
adc
pop
add
call
je
andb
add
negb
push
mov
fisubs
test
jle
inc
movsl
les
add
push
shrl
push
rcrb
pop
lcall
jmp
xchg
cmp
dec
and
jb
rol
mov
and
or
adc
and
jns
cmp
add
push
test
mov
add
nop
xchg
outsl
fs
xorb
sbb
and
add
sbb
sub
push
addr16
repz
inc
adc
sbb
enter
lret
lret
cs
into
fs
sub
adc
iret
rclb
cwtl
enter
pop
and
roll
pushf
leave
int
fwait
in
rolb
adc
xchg
push
push
inc
pusha
push
push
and
sub
or
aad
mov
mov
test
add
jbe
pop
or
add
sbb
adc
or
add
add
jne
and
mov
pop
add
pop
push
or
mov
add
jg
ret
int
adc
lods
fisttpll
jp
add
inc
push
mov
inc
jns
add
or
xor
adcb
mov
lcall
push
mov
pop
push
or
test
inc
adc
dec
addl
loope
jmp
nop
mov
cmp
add
outsl
imul
jae
sub
mov
adcb
sub
dec
mov
jns
jb
outsl
sub
outsl
jo
mov
push
dec
outsl
adc
or
pop
adc
loopne
jbe
jne
push
pop
add
mov
xor
fildl
lea
pushf
mov
imul
inc
fsubs
loope
sbb
dec
mov
adc
mov
or
imul
insb
popa
xchg
cmp
cmpsl
sub
sbb
sarl
xor
xor
add
jnp
pop
pop
and
sbb
lods
stos
push
mov
insb
test
ret
fiadds
loopne
dec
xchg
sahf
ss
addr16
sub
add
fs
or
add
jns
sub
xchg
movl
mov
je
leave
lcall
test
insl
push
sub
pop
lret
and
int
fisubs
lea
dec
mov
adcb
pop
faddp
mov
add
and
jno
or
mov
inc
pop
jb
cmp
adc
inc
outsb
jne
imul
mov
rcll
push
adc
dec
iret
int
insb
sbb
adc
adc
jne
lock
adc
jg
ss
pmaxsw
dec
pop
inc
arpl
imul
sub
or
jnp
pusha
sbb
leave
int
testb
or
mov
testb
mov
pop
adc
add
insb
cmpsb
sbb
xchg
popa
popf
sbb
and
jg
or
mov
dec
cmp
adc
jns
adc
call
or
add
mov
mov
mov
mov
mov
inc
pop
push
add
loopew
cltd
out
mov
dec
sbb
xchg
bound
outsb
imul
sti
cwtl
in
or
xchg
mov
sbb
dec
shrl
sbb
icebp
fs
sbb
add
cmpsb
insl
addb
push
and
xlat
jmp
pop
jecxz
sbb
cmpsl
push
push
cmpsb
test
inc
pop
vmovhps
xor
push
sbb
neg
inc
sub
lcall
mov
orb
push
dec
xchg
popa
pop
insb
mov
lgs
insb
lret
xlat
jne
mov
push
push
or
popa
push
sbb
ja
add
jg
bound
add
add
es
add
ljmp
adc
push
lcall
mov
cmp
inc
ds
js,pt
xchg
ds
int3
ds
fs
icebp
call
jecxz
jg
movsb
aaa
test
mov
mov
aaa
aam
fdivs
in
call
aaa
push
cmp
cmp
lcall
pop
cmp
cmp
cmp
cmpl
imul
cmp
cmp
cmp
cmp
cmp
pop
and
dec
cmp
bound
mov
cmp
js
ret
cmp
cmp
cmp
cmp
cmp
ss
pop
cmp
mov
or
lods
jae,pt
xchg
aas
popf
and
aas
mov
into
aas
in
idivb
call
pushl
mov
das
xor
pop
xor
mov
mov
xor
xor
xor
xor
mov
stc
icebp
xor
xor
xorb
xor
fidivs
dec
xor
mov
movsl
xor
mov
xchg
xor
xor
ds
ret
aas
testl
nop
jle
test
popf
xor
call
xor
xor
jmp
xor
xor
xor
xor
xor
push
xor
xor
xor
or
xchg
and
and
and
xor
jmp
xor
xor
xor
xor
add
sbb
jmp
divb
push
cmp
sbb
call
pop
cmp
cmp
cmp
cmp
cmp
incl
cmp
cmp
cmp
cmp
cmp
mov
pushf
cmp
cmp
inc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
ljmp
cmp
cmp
cmp
cmp
cmp
pusha
cmp
jge
test
pushl
cmp
loope
call
cmp
outsl
aas
cmpb
aas
fdivrs
out
fbstp
movl
outsl
test
decl
xor
xor
xor
xor
xor
xor
xorb
xor
lahf
xor
pop
jg
pop
shlb
fdivl
repnz
xor
xor
xor
push
incl
xor
xor
xor
cmp
xor
xor
xor
xor
xor
dec
xor
xor
xor
jl
xorb
xor
loopne
ljmp
lcall
ss
fdivl
jmp
aaa
data16
insl
aaa
test
mov
lret
aaa
rorl
cmp
imul
aaa
add
cmp
jl
clc
jg
cmp
cmp
cmp
cmp
cmp
cmp
jns
fdivrl
loop
xchg
outsl
daa
add
cmp
cmp
cmp
cmp
and
je
mov
mov
ds
cmpl
mov
lcall
sub
mov
out
inc
xor
sub
cmp
pop
xor
js
cmpsl
icebp
xor
xor
clc
outsl
clc
dec
xor
pop
stc
jb
jl
xorl
xor
adc
xor
xor
dec
xor
pop
xor
in
mov
fnstenv
loop
repz
xor
xor
xor
xor
xor
pushl
sub
mov
xchg
ss
fnsave
insb
aaa
ja
jle
xorl
aaa
cmpsb
aaa
mov
mov
pushl
cmp
push
cmp
pusha
cmp
cmpl
cmp
cmp
out
cmp
cmp
out
sarb
loope
adc
sbb
inc
cmp
jbe
jle
out
lock
outsl
ljmp
cmp
sub
and
mov
mov
mov
dec
cmp
push
ds
and
ds
ds
ds
ds
das
or
aas
clc
or
fcomip
pushl
enter
cld
xor
xor
xor
xor
xor
pop
fucomip
push
sub
cmp
xor
pop
xor
imul
decl
adc
xor
xor
xor
xor
xor
or
fdivs
loope
out
xor
xor
xor
xor
xor
xor
xor
xor
push
cli
jg
pushl
pop
xor
xor
jne
test
cltd
xor
xor
add
int
shll
fldl
xor
xor
xor
pop
cli
inc
xor
xor
xor
xor
xor
xor
xor
or
xor
fcomip
xor
xor
popa
insl
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
mov
divl
xor
inc
xchg
push
xor
pushl
mov
shlb
adc
ss
ss
ss
cmp
insl
ss
mov
icebp
add
cmp
aaa
xchg
lcall
in
sbb
jg
ja
cmp
movb
cmp
cmp
popa
cmp
pushl
fisttpll
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sar
cmp
mov
fwait
cmp
cmp
cmp
cmp
sbb
clc
outsl
push
stc
push
cmp
cmp
je
cmpl
cmp
cmpsb
cmpsb
adcl
ja
cmp
cmp
cmp
fistpl
cmp
filds
sti
jmp
cwtl
cmp
cmp
cmp
cmp
cmp
aas
dec
aas
push
aas
addr16
js
mov
stos
mov
mov
shlb
sbb
inc
xor
ljmp
push
jge
ret
xor
xor
dec
xor
pop
xor
xor
xor
and
incl
leave
mov
xor
xor
xor
xor
call
xor
xor
sub
jg
out
lds
mov
gs
mov
xor
xor
xor
xor
or
nop
xor
mov
xor
xor
pop
push
lea
aad
add
ss
pushl
push
aaa
or
adc
and
sub
bound
push
outsb
pop
mov
adc
xchg
aaa
lcall
inc
lds
push
or
xor
dec
adc
adc
lock
psubq
push
sbb
adc
mov
mov
mov
mov
je
dec
pop
shrb
sub
mov
js
or
incl
daa
xor
cmp
or
sub
enter
and
cs
and
pusha
mov
add
mov
or
mov
leave
cmp
or
mov
adc
sbb
pop
inc
add
adc
push
cmp
pop
imul
frstor
xor
xor
sub
movb
imul
imul
mov
andb
dec
mov
insb
aam
pop
dec
xlat
or
jg
add
in
pop
inc
xor
inc
adc
pop
add
dec
dec
inc
and
mov
mov
pop
push
or
pusha
sbb
pop
or
add
bound
and
outsl
jne
jae
jecxz
mov
xor
pop
push
scas
enter
pop
outsl
loop
and
inc
xchg
icebp
pextrw
pop
xor
dec
nop
fists
addl
outsb
gs
sub
push
push
inc
and
push
sub
add
dec
push
pop
mov
push
rep
aad
or
and
nop
mov
push
test
outsl
es
add
push
mov
fadds
or
jg
or
or
sbb
add
mov
sti
adc
subb
add
je
cmp
add
aam
ficomps
cmp
mov
lods
std
shlb
int3
cmp
add
add
fcmovnb
je
inc
cwtl
in
fs
out
test
pop
pop
push
stc
adc
ret
fnstsw
push
mov
inc
lock
add
push
fnstenv
mov
mov
pop
jmp
cmpl
jbe
or
xchg
mov
leave
inc
cld
sub
fsubs
or
into
jge
pop
mov
and
mov
orl
sbb
adc
gs
jle
pop
mov
jnp
lret
pop
and
or
decl
les
push
inc
mov
test
repnz
or
lret
mov
daa
xor
cs
fldenv
dec
adc
xchg
insl
je
lret
inc
shrl
dec
dec
sbb
or
adc
mov
jb
pusha
mov
loopne
flds
and
dec
xchg
insl
inc
je
dec
imul
test
fwait
pop
inc
add
mov
mov
and
xor
shl
dec
push
sub
pop
inc
js
adc
aas
stos
sarl
jle
lea
fwait
loop
inc
cmp
out
add
aaa
dec
call
and
adc
sahf
push
dec
add
cmp
js
or
push
addr16
mov
jmp
nop
or
outsl
add
cmp
js
sub
insl
shll
or
cmp
aas
dec
sbb
mov
mov
mov
adc
adc
test
sbb
das
sbb
sub
push
inc
jae
cld
xor
push
pop
ds
xchg
inc
aam
xor
adc
rcl
insl
pop
and
inc
inc
xor
push
inc
inc
cs
bound
or
mov
or
cli
dec
outsl
cmp
in
js
add
sub
dec
dec
ja
out
in
jne
daa
dec
mov
mov
lods
push
jb
push
lock
inc
jecxz
stc
add
sbb
leave
mov
mov
enter
pop
or
cmp
xchg
sbb
push
dec
add
dec
dec
inc
es
dec
push
adc
push
repnz
xchg
jl
and
lock
or
push
and
xor
or
test
movsl
add
and
mov
add
mov
pop
mov
inc
inc
inc
mov
mov
inc
inc
inc
inc
mov
mov
mov
inc
inc
mov
pushf
mov
adc
jl
jge
std
scas
std
scas
and
sahf
lea
mov
mov
push
mov
mov
fmulp
xchg
std
mov
mov
mov
mov
loopne
aam
mov
and
sub
testb
stos
pusha
in
leave
shrb
lods
cld
jo
xchg
outsb
sbb
fldcw
in
jo
mov
pop
xchg
mov
xlat
insb
cmp
xchg
add
dec
cs
adc
cmc
in
imul
scas
pop
inc
mov
roll
jne
adc
xlat
and
fmull
mov
push
or
rolb
add
and
lcall
xor
fs
addr16
xchg
add
gs
gs
xchg
jae
cs
mov
add
outsb
insb
popa
sub
mov
jne
arpl
or
aaa
roll
jno
xchg
gs
xchg
add
cs
popf
push
fs
lret
mov
or
js
insb
outsl
jb
mov
sbb
pop
mov
mov
pop
xor
hlt
xchg
lds
xchg
mov
xchg
adc
setae
mov
imul
leave
mov
and
pop
adc
pop
clc
insb
call
sbb
outsb
stc
jp
inc
aaa
fisttpll
popa
clc
lret
cmc
mov
sbbb
call
mov
jne
push
jns
inc
mov
dec
repz
mov
sbb
jb
inc
push
push
shlb
test
aam
add
fcomp
test
mov
push
jb
loopne
out
mov
add
data16
sbb
adc
inc
repz
clc
dec
and
mov
xchg
sub
dec
pop
add
mov
mov
lock
adc
ret
js
mov
pusha
adc
jp
lock
adc
pop
cmp
sub
xor
cld
mov
xchg
sete
lods
inc
cmp
leave
pop
mov
arpl
inc
add
pushl
in
or
or
adc
pop
sbb
cmc
or
out
or
dec
or
or
insb
sub
xchg
add
sbb
adc
loope
and
mov
adc
and
push
add
lcall
mov
push
cwtl
and
pop
gs
movsb
das
sti
add
add
xor
lcall
loopne
fwait
adc
dec
rcrl
mov
or
fdivrl
dec
jnp
or
pop
test
rcrl
arpl
fisttpll
inc
adc
and
notl
mov
pop
push
sbb
lds
dec
pop
les
xchg
jno
mov
adc
inc
xchg
or
adc
and
cmp
sub
clc
lods
adc
inc
jae
ret
sbb
cmp
cmp
fsubrs
jae
push
mov
push
outsb
jb
and
push
mov
add
outsl
js
or
test
dec
leave
test
test
jno
sbb
daa
jb
scas
adc
lret
icebp
xor
aas
and
aaa
push
add
insl
dec
jae
mov
sub
xor
and
sbb
inc
daa
andl
adc
push
add
add
in
xor
roll
add
xor
fs
sub
sub
xchg
and
inc
lcall
leave
fdiv
xor
dec
shll
or
cmpsb
sub
xor
enter
imul
xor
jmp
jge
add
mov
mov
push
lea
repnz
ja
ficomps
lea
xchg
lods
jno
adc
lcall
rolb
inc
xchg
push
add
loope
cmp
mov
dec
rcll
xlat
adc
outsb
jnp
add
jecxz
or
stc
ljmp
adc
fwait
or
xchg
xor
mov
mov
push
dec
or
xor
push
int3
jle
imul
fadds
pop
jo
xchg
pop
jns
pop
adc
or
mov
movsl
sbb
insb
adc
pop
out
stc
add
imul
dec
outsl
sbb
flds
mov
sbb
and
test
xchg
and
dec
les
add
sub
loope
shrl
or
dec
inc
repz
jne
cmovns
add
and
gs
jae
outsl
xor
dec
adc
int
sub
dec
mov
inc
and
pop
jecxz
fucomp
mov
or
mov
je
xor
jecxz
inc
movsb
jmp
xlat
and
xor
jae
and
jmp
pop
jo
popa
jns
popa
and
repz
add
addr16
and
lea
inc
imul
mov
gs
sub
lret
pop
inc
mov
lds
pop
out
push
jb
cmp
fnstenv
int
adc
popa
pop
aaa
neg
je
outsb
xchg
insb
popf
xchg
lds
or
lds
add
loopne
popf
addr16
dec
adc
jne
sub
jle
fucom
lods
add
sub
fldenv
or
daa
dec
dec
leave
es
or
xchg
ljmp
jbe
mov
push
shll
fs
outsl
pcmpeqw
and
je
and
pop
ja
adc
pop
imul
push
outsl
gs
and
insb
cmpsl
xchg
out
push
inc
shlb
lods
loopne
shlb
xor
pop
adc
xchg
mov
int
xor
xor
xor
xor
test
cmp
cmp
xor
jmp
xor
xchg
xor
and
mov
pop
ss
in
cmp
inc
clc
pop
or
aaa
mov
aaa
or
bound
cmp
cmp
in
cmp
cmp
les
into
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jle
clc
pop
cmpsl
ljmp
cmp
jo
xchg
clc
fbld
test
or
cmp
pop
ds
lcall
jnp
or
add
add
adc
loop
sar
gs
jne
arpl
cs
add
add
shll
mov
adc
sub
add
pusha
inc
or
pusha
add
stos
add
add
add
or
mov
ret
add
add
jbe
addb
inc
add
pop
dec
add
xchg
add
sbb
xchg
add
and
add
iret
test
push
or
or
add
mov
sub
add
test
sidtl
or
mov
mov
mov
add
add
psubusb
insb
out
adc
dec
add
sbb
or
int
lods
and
pop
push
inc
movb
mov
iret
push
jns
add
push
movsb
sbb
into
inc
add
add
into
pop
and
aam
pop
add
sahf
fs
in
pusha
inc
adcl
sahf
xor
enter
mov
fld
inc
xchg
jl
push
sbb
adc
add
add
add
add
add
add
add
add
inc
add
call
int
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
