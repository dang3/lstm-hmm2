out
call
in
sub
andb
push
push
push
push
xor
pop
lea
fcomi
stos
push
ljmp
pop
xor
jmp
mov
pop
ja
test
add
loop
mov
dec
gs
in
in
dec
mov
xor
cs
jbe
dec
mov
insb
jmp
mov
push
call
pop
mov
jg
mov
push
push
push
push
push
mov
push
push
call
mov
and
adc
clc
lea
push
add
in
and
call
jbe
adc
adc
pop
sbb
outsl
fisttps
pop
pop
pop
leave
ret
add
add
mov
mov
push
push
xchg
sub
and
data16
jbe
pop
popf
fadd
add
in
mov
je
mov
lcall
push
or
mov
ror
jge
sti
daa
pop
inc
pop
inc
aaa
and
mov
mov
jle
sub
lea
push
push
push
sbb
pop
dec
mov
or
xchg
daa
xor
clc
add
in
push
fists
push
rol
or
fxch
lock
add
push
pop
sbb
or
adc
movsb
mov
fdivr
cmp
lock
cmp
je
push
adc
clc
sbb
pop
or
inc
clc
cmp
or
push
lret
insl
or
push
xorb
je
lea
or
scas
dec
mov
pop
je
jbe
pop
out
cmp
pop
xor
or
shrb
adc
dec
mov
lods
lea
jo
push
push
scas
fildl
or
pop
or
mov
fstps
or
pop
test
cmp
adcl
add
adc
push
sub
mov
sbb
or
jno
sti
sti
int3
dec
inc
cmp
outsl
insl
out
pop
dec
mov
and
jbe
fldcw
push
mulb
divb
or
enter
cltd
add
add
fnstcw
cld
push
adc
leave
fadds
fucom
rol
inc
testb
movsb
adc
out
in
rclb
lock
mov
test
mov
or
out
in
mov
pusha
push
mov
mov
dec
or
decl
je
mov
mov
ror
mov
inc
inc
dec
dec
test
jne
push
pop
and
fldenv
in
xor
mov
pop
mov
add
mov
movl
pop
pop
mov
or
fwait
xchg
add
lret
jnp
add
cld
cltd
dec
clc
pushl
sbb
jecxz
cmp
jge
sub
cmp
adc
and
fs
leave
std
std
push
and
xlat
mov
sbb
cmp
adc
add
adc
aaa
dec
scas
mov
and
cmp
jb
out
ds
pop
push
mov
mov
cwtl
imul
lea
or
nop
in
in
mov
jae
testl
testl
sub
mov
cli
adc
dec
sub
por
xchg
lods
inc
or
mov
fistpl
mov
cmpb
inc
add
adc
cwtl
stc
sub
ss
inc
push
adc
mov
mov
xor
mov
test
je
enter
push
push
add
pop
int3
icebp
outsl
sub
andb
xor
cmp
mov
push
inc
push
jne
mov
mov
mov
inc
inc
test
jne
push
lods
out
pop
sub
push
mov
xor
inc
mov
pop
xchg
cmp
cld
push
push
std
dec
mov
dec
imul
lcall
popa
add
pop
lcall
add
sub
popw
or
cld
fstps
inc
or
xchg
dec
test
inc
add
stos
mov
mov
imul
xor
add
push
cmp
in
jmp
sbb
push
push
and
in
je
push
pusha
adc
lahf
push
push
pop
testl
lret
mov
sti
leave
std
mov
jl
mov
xor
jo
mov
std
lret
insl
mov
mov
jnp
mov
push
mov
sbb
add
push
pop
sar
pop
int3
jae
inc
in
inc
xchg
rcll
xchg
xchg
sbb
cmp
dec
loop
into
pop
iret
imul
in
and
push
rclb
dec
loop
mov
out
cmpl
mov
adc
add
idivl
mov
nop
push
insl
xor
push
int
jnp
push
lcall
ud2
mov
mov
and
push
push
out
mov
or
push
mov
ret
fistpl
push
cmp
outsl
imull
add
lret
in
je
jae
pop
sti
sbb
xor
pop
sarb
enter
pop
daa
pop
add
hlt
xlat
cmpsb
mov
jo
subl
bound
pop
xlat
lcall
fcomp
xchg
or
lock
nop
ljmp
and
push
or
cmpl
insl
ret
dec
push
push
xor
mov
push
jl
sti
or
cmpsl
addr16
jl
or
or
cmp
push
jp
xchg
xor
pusha
push
adc
push
daa
inc
jl
mov
gs
in
in
jb
fsubrl
out
pop
out
call
insb
fwait
in
gs
cs
out
and
jle
inc
out
pop
pop
lock
xor
cmc
pop
test
or
mov
add
lods
xchg
or
or
sub
inc
lcall
mov
dec
xchg
je
enter
adc
add
mov
dec
jo
adc
xor
sub
add
push
sbb
adc
adc
stos
test
inc
inc
inc
push
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
addl
in
jmp
add
xor
adc
sub
imul
imul
mov
divb
inc
push
xor
dec
shll
nop
sahf
cmpsb
imul
cmpsb
imul
xchg
inc
mov
add
xor
cld
sti
nop
add
outsl
arpl
je,pn
insw
addr16
xor
jmp
xor
cmp
inc
bound
push
jb
jbe
insb
gs
jae
mov
je
insl
xor
pop
add
push
dec
pop
inc
and
pushw
gs
add
fdivr
outsl
imul
fs
adc
adc
punpckhbw
data16
cmp
outsb
pop
imul
insl
fs
std
xchg
xchg
cmp
aaa
stos
xor
lcall
fildll
xor
adc
inc
adc
scas
add
add
inc
dec
xor
add
inc
push
push
dec
inc
dec
add
adc
mov
adc
jg
inc
push
popa
or
add
add
dec
pop
nop
fs
gs
add
mov
add
add
pop
mov
int
mov
adc
push
push
addr16
insl
and
outsb
outsb
outsl
je
bound
and
outsb
and
inc
dec
push
and
fs
ja
fdivrs
sbb
jbe
jnp
and
and
idivb
jb
int
adc
lcall
test
arpl
xchg
and
stc
fs
and
popl
xchg
and
arpl
jbe
jg
push
inc
adc
add
repnz
add
or
add
add
sbb
add
adc
mulb
jl
add
pop
addr16
outsb
or
and
xor
insb
pusha
pop
push
mov
call
and
or
and
clc
bound
sarl
jge
mov
fs
je
push
in
sahf
jle
push
mov
inc
push
push
push
jbe
adc
xor
cld
movsb
daa
pop
ja
fisttps
jae
xor
push
jb
je
cmpsb
into
jae
pusha
jb
insb
outsl
arpl
sti
rcrb
jmp
inc
pop
mov
sub
add
xchg
test
inc
shll
sub
add
imul
and
outsb
jns
mov
mov
lcall
inc
add
cmp
push
cmpsb
imul
testb
outsb
sbb
xor
dec
shll
jl
xor
shll
scas
rcl
imul
cmpsb
imul
imul
dec
shll
cs
ljmp
fsubl
and
cs
pop
cmp
inc
dec
push
insl
lcall
add
sub
xor
mov
lock
sub
xor
xor
inc
push
pop
fs
shll
js
mov
sahf
cmpsb
mov
lret
test
in
xchg
lcall
mov
jg
cmpsb
imul
add
call
mov
or
out
lret
movhps
addb
xlat
je
lret
mov
int3
add
xor
loopne
sub
incb
jb
gs
leave
hlt
dec
out
daa
imul
sbb
push
gs
fs
sub
dec
jo
outsb
push
jb
inc
adc
iret
outsl
or
inc
push
and
roll
inc
jae
bound
sub
inc
push
push
inc
push
inc
pop
dec
cld
jb
outsl
data16
push
mov
push
mov
jge
ja
dec
push
pop
inc
jne
pop
push
push
pop
jae
outsl
outsb
sbb
fiaddl
int
inc
jbe
add
xchg
pop
or
add
rep
add
aaa
sbb
pusha
add
xor
add
and
jnp
push
pop
pop
add
add
rolb
and
filds
ret
sbb
and
lret
add
or
push
and
add
mov
xchg
int
add
xor
pop
and
xchg
mov
add
pop
rcr
adc
in
data16
and
add
lret
mov
dec
es
xchg
lea
pop
xchg
mov
xchg
pop
inc
fildl
or
add
and
and
mov
inc
mov
xor
and
xor
and
pop
xor
ud2
push
fstp
test
add
add
outsl
add
jae
push
xlat
std
add
xor
add
punpcklwd
pop
inc
or
push
pop
ja
xchg
sbb
add
push
inc
jb
push
and
mov
ja
or
push
mov
jae
pop
and
addr16
or
fistpl
or
sbb
cld
mov
jbe
jge
add
mov
jmp
or
jns
jnp
std
mov
lea
jmp
in
xor
sarb
xor
arpl
push
add
or
test
jb
jb
pusha
inc
leave
push
arpl
arpl
or
sub
mov
jnp
out
dec
cs
faddl
pop
pop
dec
push
xchg
xchg
ss
inc
hlt
addr16
gs
std
dec
xor
add
outsl
je
jnp
jns
jo
push
mov
je
ljmp
imul
into
inc
roll
or
pop
add
pop
pop
cmc
cmpsb
or
and
pop
aam
mov
add
jb
or
dec
popa
insl
gs
dec
in
aam
jg
outsl
jb
inc
popa
jb
pop
or
lcall
cmp
cmp
lea
push
mov
call
mov
mov
pop
sbb
adc
les
dec
and
push
push
adc
push
push
push
call
pop
test
jne
mov
dec
inc
add
iret
xor
and
adc
or
clc
pushl
xor
decl
mov
cmpb
push
mov
je
nop
or
mov
fdiv
mov
iret
cmp
je
mov
mov
je
xor
popf
and
or
add
sbb
movsb
sbb
adc
or
lret
add
and
adc
pop
int
inc
rclb
add
rorb
push
jb
popa
jae
mov
lahf
ss
aaa
cld
sub
jmp
andb
cmp
cmp
mov
cmp
add
mov
popa
pop
into
jecxz
icebp
out
stos
jbe
insb
imul
adc
gs
in
lods
or
imul
fs
sbb
jae
jae
push
fs
pushl
ret
fadd
jmp
pop
bound
pop
imul
cltd
sbb
lcall
cmpl
in
iret
ret
and
out
sub
vmread
cmp
add
imul
fisttpl
mov
sub
bswap
dec
pmuludq
clc
pop
aaa
and
scas
clc
pushl
mov
pop
sbb
pushf
fstpl
push
add
fcomp
decb
pusha
mov
mov
sbb
mov
push
mov
andl
aaa
mov
push
mov
push
mov
movsl
sbb
rcr
mov
adc
or
mov
in
push
push
call
in
add
test
lods
hlt
in
call
sub
sub
mov
movb
inc
or
jb
jmp
add
sti
push
push
call
imul
imul
cld
mov
push
pop
ret
mov
lock
or
and
push
inc
sbb
divb
or
repnz
fwait
xor
or
adc
push
mov
fistl
es
call
xor
sbb
push
psubsw
dec
divl
mov
cs
cmpb
add
mov
andb
mov
or
insb
dec
negb
aas
js
pop
cmp
pop
jl
push
aaa
push
pop
mov
nop
adc
scas
add
sbb
push
leave
xchg
addb
nop
xchg
and
pop
add
inc
add
daa
mov
mov
add
jg
jmp
push
sub
jge
lock
popa
pop
rclb
push
push
fisttpl
inc
inc
sarb
add
nop
imul
push
or
xchg
push
test
xchg
aaa
mov
pop
push
and
test
jne
ret
data16
sti
cmpl
dec
cmp
lret
stc
jne
mov
gs
add
or
and
inc
xchg
and
sbb
outsb
push
nop
dec
sbb
and
enter
mov
mov
push
pop
inc
or
push
ret
push
push
add
jg
lea
mov
cmp
jg
add
add
std
adc
and
push
push
sbb
nop
adc
xorl
ret
cmp
iret
loopne
push
fs
xor
mov
pop
call
push
or
and
decl
mov
imul
mov
lock
add
mov
mov
enter
pop
mov
adc
push
dec
pop
dec
dec
mov
or
or
enter
mov
cmp
pop
dec
pop
mov
nop
jmp
xor
add
cmp
sarl
push
mov
add
not
xor
ficompl
inc
cmp
or
sbb
cmp
pop
pop
mov
adc
aas
cmp
ja
inc
inc
lock
call
jbe
in
movsl
test
scas
or
add
push
jae
push
and
clc
clc
push
sub
adc
cmp
aaa
ret
jb
pop
pop
pop
test
add
push
mov
pop
inc
enter
jo
and
insb
nop
and
repnz
pop
int
add
test
in
adcb
and
inc
jl
and
enter
js
and
je
and
and
nop
dec
xor
and
mov
ss
ficoml
repnz
inc
mov
leave
pop
cwtl
mov
push
andl
cmpl
aas
pop
enter
dec
dec
pop
pop
push
mov
in
in
fs
popf
jne
pop
jmp
adc
cmp
rcll
rolb
sub
add
in
adc
add
pop
int3
cmp
lock
pop
in
std
movsb
adc
in
cld
shll
xchg
ds
pop
mov
push
int3
fisubrs
pop
jnp
inc
sbbb
push
push
add
shl
mov
popf
mov
add
ds
jns
and
hlt
jae
lcall
arpl
pop
mov
outsl
and
cli
push
cs
lcall
std
je
popf
fcmovne
dec
dec
stos
push
mov
repz
xor
jnp
in
or
int3
sti
push
pop
dec
xor
mov
dec
iret
lock
cmp
jge
add
jle
cld
fisttps
push
cmp
jle
pop
jmp
sbb
in
ja
add
mov
outsl
cmp
je
test
hlt
pop
fidivrl
movsb
mov
incl
and
in
jne
cmpl
daa
jmp
add
inc
cld
fldt
or
push
inc
clc
xor
movsl
cmp
testb
add
add
rcrl
jl
inc
cmp
mov
add
idivb
mov
dec
shrl
cli
fistl
pop
ret
xor
mov
pop
ja
jne
data16
or
or
bound
jbe
mov
js
shrb
mov
cmp
mov
sbb
or
shlb
aaa
ret
add
jb
mov
rcll
outsl
jns
or
mov
and
sti
out
je
test
testl
movsb
add
xor
mov
jae
popf
or
call
in
adc
pop
inc
idiv
adc
push
jmp
sbb
jmp
sbbb
add
add
sar
and
sbb
enter
push
in
and
test
push
enter
pusha
adc
sub
add
nop
and
rclb
adc
mov
subl
test
and
add
cmp
push
add
and
xor
and
mov
or
mov
lods
and
cld
pop
push
clc
fs
ja
xor
dec
jbe
cmpb
into
loope
jmp
jl
cmp
jb
out
lret
std
push
decl
cmpl
mov
mov
inc
sub
and
mov
and
add
mov
lods
push
add
aaa
inc
cmp
pop
cli
in
jecxz
push
add
cmp
loopne
or
mov
add
inc
pop
lret
shr
add
imul
je
inc
push
mov
dec
or
ret
inc
test
inc
mov
mov
jne
sar
sbb
mov
rorb
rolb
lods
sti
shl
or
adc
or
jne
xor
or
call
pop
out
xor
pop
decl
stos
pop
jne
fwait
mov
bound
push
xchg
pop
mov
mov
jbe
or
cmp
sti
not
and
push
mov
mov
jl
and
or
add
lea
mov
shr
shl
or
mov
add
cld
in
outsl
mov
and
testl
mov
std
pop
test
or
js
add
push
aam
fucomi
fldt
or
fisubs
fimull
add
imul
decb
and
out
xadd
adc
pop
inc
sub
lret
lock
and
not
cmp
add
jg
mov
xor
into
mov
shr
or
dec
daa
pop
jg
push
imul
sbb
mov
push
lods
loop
mov
idiv
mov
push
push
daa
jle
not
and
das
mov
mov
push
hlt
adc
jns
mov
xchg
rcr
mov
roll
aaa
addr16
mov
sbbb
or
mov
xchg
adc
sbb
inc
xor
ret
roll
mov
or
imul
sbbb
add
test
sbb
add
out
in
mov
cli
sbb
ss
les
repz
fcomp
cwtl
subb
xor
fiadds
add
rcr
into
das
insb
iret
das
pusha
adc
pop
scas
testl
sti
mov
pop
les
faddl
repz
add
idiv
loop
negb
add
sub
xchg
addr16
nop
fcom
add
cmp
mov
pop
mov
rcrl
les
adc
and
or
xor
into
fwait
in
or
or
xchg
jno
std
fisttpl
es
add
and
fisubrl
or
aad
cmp
pop
sti
loope
aaa
das
push
mov
cmpsb
pop
mov
xor
or
lcall
jnp
push
xchg
or
and
or
popa
adc
gs
add
or
mov
ret
add
and
aad
aam
pop
bound
ret
sbb
shl
add
and
pop
jle
clc
jg
jge
dec
cmp
inc
rcrb
push
fadds
hlt
push
and
mov
jb
repz
pop
pop
es
adc
rcl
push
repnz
rol
or
movsb
and
jae
insb
lods
push
and
call
lods
mov
imull
mov
adc
pop
repz
call
xlat
lods
mov
push
adc
inc
add
rorb
mov
fimull
out
fcoms
push
cmp
push
imul
pop
jge
cli
sub
mov
ds
jg
or
dec
cmpsl
int
add
imul
int
and
sbb
loopne
ret
jge
sub
pop
aaa
or
mov
mov
fbstp
pushw
fcomps
aad
adc
insl
int
cmp
gs
mov
mov
adc
inc
loop
shr
flds
mov
fdivs
mov
imul
mov
clc
mov
jae
pop
enter
daa
pop
sahf
fistpll
flds
outsl
adc
pushf
mov
dec
fbld
fdivp
mov
cmp
or
fistl
shrb
mov
sub
pusha
sbb
test
xor
jns
leave
insl
mov
xor
js
or
cs
js
aaa
mov
out
lds
popa
popf
insl
adc
inc
sti
xor
cmp
outsb
mov
repnz
or
in
mov
call
in
inc
inc
ljmp
inc
push
sbb
xchg
insb
movsl
neg
mov
fimuls
cltd
jb
jb
lret
fmuls
in
clc
pop
pusha
dec
mov
cli
xor
rcrb
mov
ds
lods
loop
out
or
mov
sub
fbstp
jle
sub
testl
fcompl
xor
imul
out
xchg
or
xor
xor
fstpl
sbb
aam
xchg
jae
adc
fidivs
test
pop
xor
cmp
or
pop
cmp
push
aas
sbb
cmp
rcl
fldl2t
fdiv
adc
jbe
les
das
jle
in
jle
ja
negl
ss
in
clc
jl
pop
int
xorl
or
mov
inc
gs
lods
les
sbb
sti
mov
mov
aaa
sbb
sub
lea
shl
ret
sbb
jl
sahf
pop
mov
push
xchg
ljmp
inc
push
or
mov
jns
enter
and
fidivrs
jb
hlt
cmp
xor
xor
xor
cmp
pop
pop
gs
sbb
sbbb
push
rcrl
pop
sahf
aaa
xchg
int3
or
push
or
pop
bound
dec
jge,pt
out
je
pop
sahf
call
unpckhps
sbb
cmp
in
rcrl
test
sub
push
and
jg
call
scas
dec
jle
outsl
jecxz
jp
sbb
int
dec
xchg
sbb
out
jecxz
jp
ret
incb
inc
fsubs
add
mov
adc
dec
mov
cmpb
lds
jp
xlat
sbb
ja
mov
xor
mov
loopne
mov
ret
repz
rcl
sub
pslld
ret
clc
int
and
pop
rclb
xor
dec
mov
pop
jge
push
xchg
xlat
pop
add
pop
movsb
mov
in
testl
sbb
pop
out
inc
js
cmp
push
mov
arpl
cmp
ficoms
jl
js
sub
push
push
push
inc
push
adc
inc
or
jae
or
or
insb
and
xchg
adc
mov
outsb
lea
sub
lahf
inc
pop
inc
addr16
test
nop
iret
jb
adc
or
adc
adc
add
sbb
cmp
or
ficoms
jne
pop
cmc
pop
nop
inc
ljmp
cmpsl
push
cmp
mov
jmp
ja
idivl
shlb
adc
mov
cmp
je
movsbl
xchg
push
filds
fldt
sti
jne
inc
cmp
jne
cmp
push
add
test
add
xor
cmp
pop
adcb
insl
outsl
outsl
aam
inc
scas
inc
jl
add
jg
inc
idivl
adc
inc
cmp
shll
add
out
iret
pusha
pop
rclb
mov
andb
addb
push
lret
xlat
sarl
adc
lea
arpl
mov
inc
js
mov
mov
fidivrl
adc
jmp
js
dec
and
rep
jecxz
aaa
or
fnsave
stc
jne
push
lea
adc
adc
je
pop
rcl
push
test
nop
push
loopne
push
mov
imul
mov
push
pop
rcrl
push
or
cld
call
sub
div
lods
js
les
or
dec
cmp
sbb
out
or
testb
shrl
mov
loopne
add
pop
adc
mov
add
mov
sbbl
add
fsubr
xchg
add
into
cmp
xchg
push
push
push
jl
insl
shrl
add
jl
ja
std
push
or
call
out
stc
in
gs
das
lock
jo
hlt
loopne
addr16
gs
or
insl
imul
pushf
or
je
fisttps
mov
adc
fisubrs
aam
test
pop
mov
xchg
int3
xchg
jecxz
mov
sub
lods
movsb
dec
ja
popf
mov
lods
outsb
les
fimuls
fmull
inc
push
pop
mov
push
pop
xchg
loopne
test
inc
popa
shlb
mov
in
push
push
movb
in
dec
out
push
out
mov
cs
push
lock
icebp
inc
repnz
mov
mov
sbbb
add
or
scas
cltd
fidivs
or
pop
add
and
sub
aam
adc
adc
sbb
cmp
rclb
sub
imul
inc
pop
jb
dec
inc
and
decb
ficompl
push
les
fbstp
fcompl
adc
stc
adc
xchg
xor
cmp
xchg
je
sbb
test
or
cld
das
sub
cmp
push
lock
and
lds
notl
enter
push
movhps
mov
push
mov
and
je
push
dec
hlt
mov
jns
xor
dec
mov
xor
addl
and
lea
cmp
test
in
lcall
divl
movsl
jbe
sbb
nop
jae
clc
add
insl
cmpl
add
hlt
push
fcom
jbe
cmp
jmp
pop
call
gs
adc
insl
mov
mov
hlt
lods
inc
inc
inc
inc
imul
pop
jb
pop
sub
je
jge
enter
add
mov
repnz
push
fisttpll
addr16
adc
andl
mov
ja
subl
dec
cld
pop
jb
add
shll
xchg
jno
push
sub
cmp
pop
adc
cmp
aaa
adc
sti
repz
subb
cmp
je
dec
dec
cld
mov
jne
pop
push
arpl
pop
pusha
ror
or
fsubrl
xchg
push
test
sti
orb
pop
jo
cltd
xchg
push
mov
push
mov
nop
lods
aad
push
xchg
cmp
mov
sbb
dec
add
add
add
add
mov
dec
iret
data16
add
sahf
and
xchg
sub
jb
adc
int3
out
pop
push
addb
adc
mov
lea
cmp
jle
sub
jne
add
push
call
shl
and
mov
cmp
adc
pusha
ficomps
clc
inc
push
pop
cld
call
shlb
push
lods
push
or
repz
push
jo
addb
add
or
sub
into
sti
dec
mov
cmpsb
xor
adc
in
mov
or
cmp
xchg
xchg
inc
js
push
testb
repnz
clc
mov
cmp
mov
push
and
xor
nop
jl
pop
adc
stos
sbb
loope
les
jbe
pop
stos
int3
and
inc
xor
xor
adc
or
clc
jae
int
fcompl
or
enter
sub
jae
or
mov
cmp
faddl
ret
and
ret
jae
inc
push
fnsave
addb
insb
test
fstpl
fistl
leave
push
xor
scas
mov
in
push
insl
ds
mov
mov
push
push
jbe
xchg
nop
jg
mov
or
and
ret
addr16
pop
fs
and
inc
mov
insb
loopne
dec
mov
scas
fcomp
sub
mov
pop
xchg
mov
pushl
cmp
pop
shrb
mov
dec
shrl
adc
out
mov
sti
sub
mov
sbb
pop
add
jmp
negb
insl
into
xor
arpl
sub
clc
cmp
mov
mov
mov
or
pushf
inc
out
pop
cmp
push
sar
dec
je
cmp
sti
ja
cmpl
cmpl
scas
or
push
jo
mov
jo
add
sbb
pop
dec
int3
data16
int3
cmp
jae
and
std
divb
pop
jo
xchg
in
sbb
pop
adc
jne
mov
cmpsl
pop
jmp
call
sub
cmp
add
inc
lret
bound
dec
pusha
subb
sub
push
sub
pop
dec
xchg
xor
mov
in
aaa
and
or
sbb
dec
cmp
mov
test
push
push
pop
adc
ret
mov
push
jo
push
sub
jge
inc
bound
xor
leave
lods
lret
in
fldcw
scas
insl
mov
mov
pop
cs
push
mov
mov
mov
mov
xchg
lret
in
mov
mov
mov
jmp
and
fs
mov
rcl
js
shlb
insb
aad
xlat
pop
fsubrs
and
fcmovu
gs
loopne
test
insb
mov
jecxz
pop
in
push
fdivs
lret
insl
out
dec
out
call
lcall
jo
imul
je
rol
jbe
ss
ret
rol
xor
mov
add
xor
enter
insl
xlat
lret
cmp
int3
hlt
xchg
push
xchg
push
cwtl
cltd
lcall
fwait
pushf
adc
sub
int
mov
mov
cmpsb
xor
test
push
test
data16
cmc
div
clc
ds
sub
mov
mov
stos
sbbl
shrb
shlb
pop
shlb
int3
mov
call
rorl
fdivs
aaa
xor
in
shl
lret
pop
cwtl
int3
cs
imul
lods
add
loopne
imulb
imul
sbbb
popf
cwtl
jne
pop
xchg
and
jb
xchg
or
insl
dec
push
enter
mov
lea
out
shlb
lea
push
dec
inc
jbe
inc
jge
sti
inc
leave
add
adc
ret
pop
sbb
shl
and
imul
xchg
in
enter
pop
cli
inc
ret
jbe
dec
loopne
test
mov
inc
sub
nop
jmp
aaa
sbb
data16
movsl
jmp
sbb
push
ret
mov
xchg
mov
push
aas
mov
nop
repnz
stos
call
rorl
aad
outsb
mov
rcrl
andb
aaa
pop
sti
jno
and
rcrb
sub
mov
rcll
xor
mov
fdivs
fistl
fdivs
xlat
cmp
push
or
jge
mov
lock
jmp
mov
mov
mov
sbb
cmp
sbb
and
add
aaa
divb
xor
test
aaa
or
push
loopne
push
icebp
jl
dec
inc
popa
filds
fcoms
add
mov
je
add
xlat
pop
or
xor
incl
lock
cli
adc
ss
pop
pop
stc
mov
cmp
call
and
pushf
inc
frstor
adc
fcomip
cmpsb
cmp
ficomps
fs
pop
femms
inc
fisubl
and
jl
cwtl
ret
loopne
shl
sub
push
mov
push
nop
nop
add
mov
jo
int3
cmpl
add
fsts
fs
jmp
imul
inc
sti
movl
arpl
and
pop
aad
or
arpl
rorl
and
cmp
cmp
cmp
dec
xchg
mov
mov
cmp
jbe
aaa
bound
mov
call
mov
insl
js
mov
pop
and
cs
push
push
cmp
sbb
mov
sbb
sbb
adc
mov
adc
dec
adcb
or
and
out
sub
or
add
mov
and
sbb
sub
mov
xlat
jmp
adc
call
mov
je
or
enter
cmp
cld
cs
mov
call
js
lret
fcmovnu
sub
and
lock
inc
mov
mov
dec
pop
ret
mov
xchg
xor
xchg
fisubs
ret
vmread
push
es
in
dec
int
jp
imul
insb
popa
push
dec
push
ss
lods
imul
fidivl
dec
mov
sub
inc
fidivs
shll
xor
xor
insb
xor
pop
std
cli
sti
mov
orl
insl
mov
insb
lcall
mov
pop
mov
mov
imul
fs
lcall
in
lcall
lret
in
out
jbe
jb
mov
jmp
add
pop
inc
jb
es
rcll
xchg
jnp
adc
mov
mov
mov
and
jae
xchg
addr16
aam
enter
shrb
test
mov
pop
rcrl
enter
hlt
dec
mov
subb
in
mov
mov
scas
push
rclb
pop
adc
sub
push
mov
out
dec
cli
sub
imul
imul
lret
test
outsl
out
ja
jne
imul
jb
xor
add
fwait
cmpsb
fs
insb
je
push
les
dec
xchg
push
add
xor
imul
cld
scas
loopne
mov
dec
inc
loopne
jb
push
fsubrl
sbb
stc
xor
lret
add
cmp
cmovno
test
fsts
cmpsb
sub
push
loope
sarb
xor
das
inc
bound
mov
inc
mov
add
hlt
xor
xchg
aam
mov
or
in
xchg
mov
call
and
cmp
and
in
nop
int3
fldl
or
sub
fwait
xlat
mov
fwait
or
push
clc
inc
in
lds
sub
fiaddl
sub
iret
push
pop
push
adc
sbb
push
or
jne
jo
and
and
mov
xor
out
test
push
cmp
stc
js
mov
cmpsb
imul
imul
shll
mov
mov
mov
mov
fwait
rol
adc
data16
pop
leave
lret
int
fldt
int
das
into
iret
shlb
shll
rcl
adc
or
shll
aaa
fcomp
fcmovbe
xor
fdivl
cmpsb
imul
shll
in
pop
out
call
imul
in
sbb
out
fs
shll
outsb
repnz
shll
inc
inc
sti
dec
add
cmp
xchg
mov
sbb
notb
cmp
mov
pop
and
rclb
push
aad
cld
adc
add
addr16
iret
jb
nop
lock
push
inc
addr16
adc
call
dec
mov
pop
xor
fcompl
out
loop
push
or
xchg
pop
push
cmp
inc
xchg
ret
push
and
add
inc
sbb
adc
rcll
pushf
mov
sbb
push
ret
pusha
pushf
adc
cmp
popl
and
or
call
shll
and
incb
aam
pop
in
test
jmp
fadds
mov
jns
xor
pop
outsb
push
and
add
or
adcl
dec
das
scas
call
add
lea
popf
add
jmp
jecxz
and
push
inc
fsubl
jg
push
jge
ds
fildll
movsbw
add
rcrb
xor
divl
adc
add
xchg
out
cmpsb
sti
xor
push
cld
call
dec
cmp
jb
adc
imul
jno
pop
xchg
ud2
and
push
movl
xchg
fdiv
cmc
sub
stc
cmc
test
pop
mov
add
stc
mov
push
cmp
not
je
sbb
shl
setns
push
dec
inc
jnp
push
adc
cmc
cmpsl
push
cmp
sti
inc
mov
lds
cmp
sahf
inc
or
jbe
fldl
in
pop
xor
repnz
push
pop
sbb
out
xchg
cs
js
push
push
dec
les
ret
push
mov
das
sub
jg
dec
mov
xor
inc
clc
sbb
adc
call
add
and
mov
lea
mov
xchg
and
mov
not
cmp
aaa
aad
mov
jmp
lret
jge
std
mov
xchg
cmp
xchg
push
in
in
out
xor
xor
loope
adc
fdivrp
outsl
pop
mov
clc
add
call
cmc
mov
mov
and
aas
jmp
xchg
adc
fidivrs
fisttpl
mov
aas
aaa
and
push
aas
enter
or
call
or
insb
pusha
faddp
das
in
cltd
add
aaa
out
test
pop
stc
xor
mov
orb
xlat
mov
hlt
sub
call
movb
cmpl
not
loopne
xchg
xchg
mov
mov
sbb
daa
push
xchg
and
add
xor
orl
mov
repz
rol
pushf
fadds
mov
test
rolb
test
push
sar
aas
sbb
or
sub
sub
mov
testl
icebp
scas
icebp
xlat
xor
cmc
test
pushf
data16
xchg
lea
mov
mov
jo
fisubs
mov
test
rorl
pusha
aad
mov
or
lods
scas
shll
dec
jmp
or
popa
int3
insl
outsb
adc
push
mov
lcall
push
iret
aam
jbe
fwait
sub
cwtl
das
movsl
call
sbb
pop
clc
sbb
aas
std
inc
lds
cld
adc
xor
cld
sub
mov
cli
adc
fs
cmc
outsl
inc
test
lods
insb
lods
adc
int3
dec
in
mov
sbb
sbb
lahf
and
sub
cli
frstor
sub
test
call
cmp
je
out
dec
jmp
inc
popf
nop
dec
vpaddw
clc
std
cmc
sti
addl
popf
xchg
fidivrs
or
add
jae
leave
outsb
and
aaa
push
push
push
ficoms
adc
into
push
jp
and
and
mov
test
cltd
mov
adc
jnp
sbb
xorl
js
clc
and
pop
mov
cmp
addb
inc
clc
or
fildll
inc
into
ret
jmp
pop
inc
jmp
jo
sub
rclb
xchg
or
dec
out
loope
lret
pop
in
adc
sbb
insb
call
outsl
dec
ja
dec
jmp
leave
jb
inc
sbb
and
dec
push
adc
dec
aaa
push
push
xor
enter
mov
lahf
jl
jbe
add
call
out
int3
outsl
xchg
jl
sbb
rolb
pop
incb
sub
fwait
or
nop
lret
inc
add
mov
mov
mov
cmp
mov
ja
mov
and
inc
or
sbb
add
xchg
mov
rcrb
sbb
adc
add
mov
dec
fldl
mov
ret
clc
or
les
jne
adc
lret
in
stc
push
imul
sbb
repnz
aas
sahf
mov
dec
cs
iret
push
roll
test
dec
in
push
xor
ret
fcmovnu
xor
lock
jnp
adc
stos
sbb
into
ret
orl
pop
add
or
xchg
inc
in
lea
in
xchg
hlt
hlt
js
in
insb
mov
or
or
aas
or
xchg
inc
clc
outsb
mov
ljmp
dec
pop
and
pop
adc
dec
into
divb
adc
pop
or
cmovnp
xor
dec
int3
xor
cmpsb
xchg
lock
jmp
jmp
incb
fcomps
and
movsb
mov
dec
add
xchg
adc
xchg
into
test
fnstsw
imul
sub
mov
jl
adc
sub
or
out
fisttpll
insb
xor
mov
xchg
daa
rorl
insb
pop
push
xorb
mov
xchg
adc
std
mov
and
and
iret
movsb
pushf
test
pushf
cmpsb
int3
cltd
xchg
dec
xchg
xchg
cmpsb
leave
cmp
std
std
inc
sbb
xlat
fcompl
mov
sahf
sti
dec
pop
push
lds
mov
xor
pop
loop
push
add
jo
inc
dec
and
fcompl
xchg
andb
and
dec
mov
pop
pop
sbb
push
data16
int
scas
sbb
or
sbb
icebp
jae
and
inc
fnsave
cmpl
inc
add
add
push
sar
sbb
lock
push
or
lcall
faddp
add
sti
sbb
ret
mov
jle
daa
push
scas
mov
sbb
jnp
icebp
ds
cmpsb
or
xor
inc
fwait
pop
movsl
test
and
push
xchg
gs
outsb
je
pop
cmp
push
pusha
and
clc
fstpt
hlt
mov
adc
or
mov
inc
popa
jne
adc
cmpb
lods
aaa
jbe
inc
gs
mov
and
call
insl
or
incl
inc
push
insl
outsl
outsb
insl
jl
inc
inc
addr16
xor
xor
movsl
pop
lcall
jb
pop
lcall
decl
jg
rolb
rolb
inc
aam
mov
ds
ficoms
dec
pop
add
je
fwait
loope
pop
add
jmp
push
mov
add
negl
or
rsm
pop
pop
ret
and
and
mov
xchg
cld
jle
decl
adc
push
adc
call
test
and
sbb
call
push
je
imul
ljmp
mov
stc
scas
or
popa
sub
push
loope
and
push
inc
mov
and
xor
je
in
lods
mov
sbb
adc
dec
hlt
push
mov
pop
sbb
call
fdivrs
fidivs
dec
pop
add
cmp
test
mov
and
push
and
cltd
mov
or
nop
mov
inc
daa
mov
pop
push
je
xor
scas
inc
add
rcll
mov
xor
jmp
out
mov
adc
sbb
scas
push
pextrw
push
push
inc
jns
push
js
cs
add
insb
mov
les
or
mov
lret
mov
enter
aam
add
sub
fsub
add
mov
outsb
and
test
mov
or
sub
jo
push
lock
inc
mov
ljmp
ss
pop
inc
in
mov
pop
adc
rcrb
out
nop
xchg
push
enter
jns
lahf
aaa
mov
adc
stos
pop
sbb
out
les
inc
inc
lock
adc
mov
call
add
dec
les
idiv
jle
pusha
addb
movsl
and
pop
jmp
mov
adc
inc
mov
xlat
inc
and
xor
inc
movsl
loop
xchg
pop
dec
lock
lods
jnp
push
fnsave
sbb
push
ret
push
fs
xchg
adc
bound
stc
or
or
pop
js
adc
push
jg
push
xor
push
or
push
dec
dec
dec
pushf
dec
xor
shll
fs
and
insb
push
addr16
xchg
and
jne
xchg
pop
xchg
gs
insb
mov
movsl
cmp
insl
pop
je
push
jb
mov
or
cmpsb
pop
cmpsl
paddsb
test
lods
gs
dec
mov
jae
je
lret
mov
lret
jo
jo
outsb
push
es
mov
gs
gs
mov
das
roll
aam
mov
mov
mov
nop
inc
xchg
gs
imul
mov
cwtl
js
lcall
je
inc
xor
xlat
je
fnstsw
cmp
inc
loop
sub
dec
shl
in
ds
mov
ss
shll
int
mov
adc
lcall
inc
mov
negb
shlb
mov
sbb
sbb
or
mov
fdivrs
mov
lock
xchg
cmp
push
add
and
and
push
add
inc
xchg
ret
xor
mov
adc
sar
lds
xlat
xor
shrl
shlb
hlt
mov
insl
paddw
dec
lods
loop
test
test
mov
lret
xchg
das
fdivp
xor
addr16
pop
xorl
adc
adc
imul
call
je
cmpsb
insl
mov
shrl
leave
sub
or
adc
dec
movsb
or
repz
adc
jnp
rorl
sbb
rcl
mov
mov
int3
popa
insb
pop
xchg
or
jge
add
shlb
mov
jne
push
jmp
cs
xor
stos
sbb
dec
xchg
lret
inc
out
nop
push
sbb
sbb
xchg
xor
idivb
lsl
ljmp
xlat
or
bound
adc
in
add
inc
inc
mov
lret
add
sbb
pop
jg
jne
call
sbb
shrb
jp
or
sahf
pop
aad
pop
movsl
bndstx
fldl
shll
movsb
mov
jno
rolb
and
lahf
fcmovnbe
repnz
cmp
adc
shr
shll
jecxz
stos
rcll
mov
mov
sbb
cmp
mov
xor
incl
dec
std
clc
push
popa
mov
xor
pushf
xor
jmp
jle
inc
int3
fisubs
inc
and
pop
jae
cmp
xor
fldcw
popf
inc
xor
jg
xor
jb
popa
jno
ret
call
or
lds
aam
lock
movsb
pushl
pusha
xlat
jae
leave
cmpsb
xor
aas
push
xor
xchg
movsl
jp
arpl
pusha
rcll
addr16
jae
jne
andb
jo
cmp
jg
jmp
push
loop
sbb
data16
and
xchg
call
pop
jb
adc
or
jbe
movsl
std
outsb
mov
inc
or
fcomps
mov
incl
sbb
inc
cmp
and
aaa
fs
test
stos
adc
sub
insb
rcll
aas
popa
je
xor
ret
imul
dec
shll
imul
shll
arpl
daa
pop
xor
in
in
jnp
and
cld
pop
jne
rcrl
push
jmp
push
ja
nop
push
rorb
add
orl
cmc
in
xor
xor
jb
arpl
or
xor
shll
popaw
imul
jae
cltd
movsb
imul
add
loopne
in
test
sti
loopne
cmp
inc
push
sbb
loopne
cmp
mov
pop
sbb
in
in
jo
cmp
std
clc
aaa
enter
je
out
dec
shll
imul
cli
sti
cld
add
or
cmpsb
mov
sti
xor
xor
adc
or
cli
arpl
sti
jl
add
pushf
xor
sti
jmp
movsb
mov
insb
push
das
pop
or
jge
cmp
imul
push
pop
rol
pop
in
insb
xchg
sbb
add
int
add
andl
xchg
xchg
mov
jg
mov
fisttpll
fsubr
out
add
out
mov
lock
pop
cmp
adc
mov
cld
movsw
imul
ss
push
and
pop
fcompl
push
loopne
lcall
adc
jnp
loop
in
push
xor
jne
cmp
cwtl
adc
inc
daa
adc
push
xor
dec
pop
subl
cld
or
pop
xchg
mov
bnd
lret
pop
or
sub
dec
ficompl
and
enter
pop
fiadds
je
sbb
loope
lret
lret
pop
adc
or
jle
adc
push
lds
mov
push
sahf
out
lret
cmp
sub
gs
jmp
aas
adc
cmp
pop
adc
sbb
es
adc
sti
std
or
shll
or
inc
push
and
xlat
and
xchg
adc
cld
sti
sbb
leave
negl
push
fldenv
sbb
mov
jbe
inc
dec
aaa
std
addb
adc
jle
fs
or
jl
inc
pop
sarb
pop
aaa
cs
cmp
pushf
data16
cld
pop
clc
push
fcoms
add
cmp
das
cs
adc
add
mov
in
paddusb
cmp
lea
push
adc
leave
pushl
es
jae
call
push
xor
call
enter
pop
add
mov
in
pop
popa
arpl
outsb
xchg
and
add
cmpsb
imul
imul
add
mov
mov
popa
arpl
sub
jb
outsb
gs
gs
lret
mov
je
outsl
outsb
and
pop
rcrb
gs
popf
aas
popa
arpl
xchg
cmp
fs
data16
jb
loop
jecxz
push
xor
out
cltd
mov
push
fwait
pop
or
hlt
sub
popf
data16
and
xor
jp
outsb
fistpl
sbb
jo
je
add
dec
jne
jmp
mov
in
jmp
mov
lea
mov
loop
nop
pop
xor
inc
popf
psraw
push
push
cmpsl
cmp
sar
pop
imul
fnstsw
movsb
jg
fcoml
mov
push
and
and
or
pop
push
and
fdivr
jo
jb
sub
push
add
popa
negb
cmp
fcoms
add
iret
xor
mov
imul
xor
stos
add
mov
xor
fdivl
popa
xchg
xlat
or
cmp
xorb
sub
jbe
xchg
stc
sbb
cltd
mov
scas
jbe
ds
je
gs
pop
stos
sub
adc
or
jp
loope
cwtl
and
incl
mov
test
mov
xchg
add
jle
sbb
inc
fsubr
sbb
fsubl
fdivs
mov
dec
adcl
push
adc
add
jmp
call
lods
scas
mov
adc
push
movl
jge
cmp
lret
outsl
push
pop
pushf
out
and
and
push
out
lods
push
sbb
xchg
sbb
repz
pop
sub
mov
sbb
pop
lods
scas
cmp
xlat
bnd
lcall
popa
push
jg
push
imul
jmp
bound
ja
insl
bound
scas
fs
es
notb
push
dec
shlb
jp
icebp
call
mov
xchg
mov
dec
mov
mov
jo
lcall
jb
outsl
lods
nop
cmpsb
imul
out
mov
or
push
mov
cmovs
dec
mov
inc
adc
add
dec
xchg
mov
insb
adc
sbb
mov
lock
pop
lock
sub
push
js
and
pop
push
call
push
out
lahf
mov
out
add
call
aaa
or
inc
or
mov
dec
mov
cmc
add
cwtl
cltd
lea
pop
pop
lret
and
jmp
xor
inc
pop
push
dec
repnz
pop
rorb
jp
adc
imul
pop
pop
add
jle
xor
testb
sbb
sbb
xchg
dec
outsl
pop
mov
or
mov
test
xchg
mov
cmp
outsb
das
pop
and
mov
pop
dec
and
call
sbb
or
movsb
sahf
pop
push
push
adc
insb
and
mov
andb
jno
and
mov
out
sti
pop
ret
icebp
push
pop
sbb
ret
out
mov
xchg
push
adc
aaa
fsubs
je
sub
scas
add
inc
mov
jg
pop
lods
leave
testl
ret
jo
subb
add
test
dec
sub
fst
xor
cmp
idiv
mov
out
jmp
adc
ljmp
dec
mov
add
xor
pop
lds
inc
jl
and
inc
xor
je
iret
sub
test
jle
filds
mov
jae
lea
push
shl
add
inc
clc
imul
lea
into
lea
push
mov
dec
xor
dec
and
jb
fistl
lock
dec
fldenv
and
sbb
and
pop
adc
imul
push
clc
add
cli
push
js
cmpsl
rclb
and
or
aad
fistps
inc
mov
or
out
mov
add
into
mov
push
clc
fdivr
add
rorb
add
and
sahf
daa
sub
aaa
mov
mov
test
fisubrs
add
xor
push
popa
clc
clc
pushl
ret
push
fucomi
mov
or
test
insb
mov
mov
xor
into
in
es
push
or
mov
repz
sbb
or
mov
pop
test
rcr
repz
rcll
push
push
lret
insl
mov
jecxz
lea
mov
mov
fsubrl
sbb
sub
pop
imul
mov
pop
divb
cmp
mov
call
sub
sub
insl
aaa
mov
pop
or
pop
in
add
pop
inc
cmp
jb
incl
add
movsb
jb
and
ljmp
mov
insb
sbb
and
and
sbbl
sub
cmpl
outsb
mov
or
repnz
jbe
pop
arpl
pop
fdiv
jns
cmp
sub
mov
lods
in
jecxz
jp
popa
mov
sub
imul
popf
pop
pop
movb
sarb
fisttpll
lea
pop
mov
jp
mov
inc
ds
xorl
sbb
or
cmpl
xor
push
int
mov
sub
and
aaa
pop
pushl
pop
push
mov
or
jmp
out
mov
clc
push
push
outsl
ss
hlt
ret
inc
pop
push
jbe
mov
ja
mov
or
out
cmp
js
cmp
jb
pop
mov
xchg
add
sbb
add
cld
hlt
jecxz
mov
mov
bnd
lcall
xor
cs
cmpsb
imul
outsb
popa
cmp
arpl
jbe
or
xor
arpl
outsl
xchg
add
insl
jne
in
arpl
lds
sbb
jp
je
push
jb
testb
or
stos
div
lcall
pushl
test
mov
shlb
dec
pop
pusha
cmpb
je
fsubl
inc
icebp
fcmovne
xor
cmp
inc
sti
adc
daa
adc
sub
enter
mov
dec
dec
add
xchg
cld
std
imul
popf
xor
insb
stos
inc
les
and
nop
fwait
mov
orb
pop
in
pop
or
sbb
push
push
push
push
mov
loopne
mov
aam
add
nop
mov
jo
push
or
nop
hlt
inc
xor
or
mov
loopne
push
insb
add
xadd
sbb
inc
enter
ror
xor
shl
mov
sbb
add
aaa
xchg
jb
cmp
in
imul
dec
mov
hlt
and
movsb
and
mov
loope
dec
popf
or
inc
pusha
sub
lods
pop
xchg
inc
add
add
xor
in
add
ljmp
loope
push
sub
fs
push
xchg
xchg
or
stos
ja
add
and
mov
sbb
div
daa
add
sub
negb
and
pop
and
mov
xor
jmp
ljmp
pop
inc
dec
cmpsb
imul
imul
fs
inc
je
fs
sub
add
jo
dec
shll
outsb
sbb
xor
pop
add
dec
pop
icebp
jne
add
push
fs
cwtl
xchg
stos
inc
push
sbb
mov
imul
jne
add
orl
inc
xchg
enter
xchg
xchg
push
xor
repnz
push
adc
sbb
loopne
mov
xor
ret
outsb
inc
cmp
add
enter
jl
popf
mov
stos
mov
imul
adc
imull
aaa
sbb
sub
sub
in
push
push
mov
mov
pusha
sub
and
gs
int3
bound
int3
cmp
cmp
cmp
mov
dec
jo
lock
adc
mov
cld
xchg
pop
outsl
lret
or
xchg
xchg
dec
decl
push
lea
arpl
lea
and
dec
add
mov
inc
mov
cmpsl
adc
add
sub
mov
inc
add
enter
scas
scas
sub
add
repnz
outsl
in
sub
jb
gs
xchg
gs
dec
imul
outsl
outsl
mov
dec
xchg
gs
push
fs
xchg
gs
outsl
ja
pop
push
pusha
nop
cmpsb
jmp
dec
mov
outsl
push
popa
pop
gs
xchg
gs
pop
dec
push
dec
ret
xchg
inc
popa
arpl
cmp
add
mov
add
mov
mov
ret
push
int3
add
cwtl
xchg
or
or
add
xor
les
hlt
ret
ds
xor
cltd
mov
sub
js
sbb
leave
adc
mov
cmp
mov
adc
sub
shll
lea
fisubl
mov
mov
les
dec
mov
popa
lcall
mov
orb
pop
push
push
jb
jnp
mov
stos
sarb
adc
rcrb
xchg
dec
and
in
lods
fs
call
inc
and
mov
or
inc
or
test
inc
or
loopne
mov
into
mov
mov
jecxz
ljmp
xchg
mov
mov
lahf
push
push
imul
jmp
ljmp
dec
in
in
out
out
mov
push
paddd
popa
lock
imul
addr16
imul
mov
stc
xlat
stc
fdivr
fyl2xp1
jnp
xchg
and
stc
push
stos
adc
mul
vunpcklps
clc
xchg
cld
fisttpll
jb
cld
aam
aad
sbb
sti
fsincos
cmp
pop
mov
and
div
and
rorl
adc
mov
dec
add
xor
add
test
jae
outsl
stos
jne
dec
ja
xor
or
je
mov
insb
mov
mov
fxch
data16
sub
shrb
popa
mov
pushf
pushf
mov
leave
rorb
sahf
dec
insl
leave
rcrb
mov
mov
popf
sub
enter
imul
aad
or
xchg
pushf
pushf
pushf
pushf
dec
xchg
cwtl
cltd
lcall
test
imul
mov
mov
pushf
pushf
pushf
sub
mov
pushf
fwait
sub
add
cld
scas
adc
clc
jmp
fdivr
aam
ret
inc
mov
mov
pop
test
push
fs
mov
pushf
mov
hlt
inc
stos
scas
mov
in
xchg
test
sub
aas
pop
pop
stc
sub
jbe
pop
dec
stc
push
inc
or
jle
repz
stc
add
push
mov
lcall
inc
enter
adc
gs
push
add
pop
in
repz
int3
push
or
push
mov
jmp
or
inc
test
add
adc
adc
mov
mov
notb
stos
je
mov
adc
repz
jae
lahf
add
roll
xor
shll
icebp
aas
and
aad
adc
inc
or
jne
mov
jae
sub
xor
cmp
adc
out
fbld
jno,pt
sbb
inc
je
jmp
pop
xor
and
cltd
sub
push
rolb
add
mov
mov
add
sub
adc
in
push
push
lcall
das
cmpsb
imul
imul
cmpsb
imul
andb
gs
xchg
xor
je
xor
das
push
xor
xor
cs
jae
call
xchg
stos
inc
leave
sub
aam
xor
imul
dec
shll
js
xor
shll
xor
cs
xor
sarl
xor
shll
cmp
push
or
je
jb
sub
js
das
gs
pop
lcall
shrb
ljmp
leave
mov
xor
push
fs
fwait
pop
nop
outsb
out
pop
jl
push
outsb
icebp
test
lret
fsub
inc
fprem1
and
lcall
je
imul
imul
outsb
nop
jns
aad
xor
cmpsb
arpl
cmp
addr16
imul
dec
cli
sti
cld
cmp
popf
cmp
test
xor
and
clc
je
movsb
pop
cmp
push
je
jo
mov
add
mov
pop
mov
or
call
pop
jp
add
lock
pop
xor
cvtdq2ps
andb
hlt
xchg
loopne
jb
stc
mov
pop
pop
push
mov
inc
ficoms
lcall
sti
pop
jle
sti
sbb
and
in
mov
std
scas
mov
dec
mov
dec
xor
inc
xor
mov
enter
or
fstps
sbb
mov
in
in
enter
or
add
enter
push
sbb
pop
or
xor
call
xlat
fnsave
mov
pusha
adc
gs
orl
and
mov
add
push
sub
sub
dec
mov
push
jb
xchg
jl
adc
push
dec
repnz
adc
xchg
neg
pop
sub
mov
push
rcrb
jecxz
pusha
dec
dec
and
pop
dec
cwtl
pop
outsb
xchg
aas
int
mov
andl
jo
fs
sbb
or
fildl
mov
adc
cmp
push
fisttps
jle
xchg
push
sub
movsb
jns
adc
sbbl
stos
cmpl
scas
sbb
rorb
mov
sub
fildll
add
mov
jae
negb
sub
add
pushl
andb
xchg
sub
add
ss
sub
jl
andl
aas
es
jmp
dec
rolb
xor
xchg
popf
in
daa
fldt
add
movl
xchg
les
aam
adc
or
add
loope
out
pop
test
mov
push
sbb
and
push
das
and
or
pop
add
pop
shlb
adc
push
aad
lds
mov
mov
adc
mov
idiv
sbb
inc
stos
push
cld
mov
or
mov
pusha
data16
aad
sbb
lds
rorl
push
cs
xor
mov
adc
test
push
out
enter
mov
mov
pop
cmp
je
test
xchg
mov
hlt
call
cmpsl
test
xorb
pusha
push
andb
inc
add
fucomp
push
inc
imul
pop
sbb
out
popa
out
dec
repnz
sbb
cmp
pop
mov
push
add
outsl
pop
dec
pusha
push
pop
or
lea
cmp
push
jbe
push
test
pop
jo
adc
push
sub
enter
sbb
adc
add
and
cmp
aam
pop
cltd
cmp
cmp
insl
mov
test
fistps
adc
push
add
sub
jecxz
dec
sub
sbb
push
pop
je
roll
xor
push
psllq
sub
mov
inc
lcall
xchg
stos
xchg
test
jp
jge
xor
rcll
and
or
sbb
mov
adc
sbb
xor
pop
jle
mov
cmp
sti
adc
shrb
addl
rolb
inc
leave
add
or
pop
cmp
pusha
push
mov
mov
inc
movsb
dec
bnd
xchg
fdivrs
aas
daa
jnp
insb
inc
dec
js
cld
dec
cmp
mov
mov
cmc
xor
test
mov
outsl
sbb
inc
ja
mov
pop
cmp
cmp
mov
or
pop
std
adc
jne
mov
incl
call
aaa
mov
pop
std
xchg
movsl
mov
pop
add
pop
fnstcw
push
or
dec
outsb
arpl
mov
mov
nop
pusha
loop
adc
xchg
stos
stos
sbbl
push
loop
insl
lods
bound
mov
jge
or
add
ss
insb
sarb
push
mov
aaa
mov
ficoml
push
fistps
repnz
push
or
imul
addl
mov
aas
mov
jmp
ss
push
lods
jae
gs
inc
add
or
sbb
inc
jnp
cmp
cwtl
lret
adc
cmp
jl
add
jg
mov
das
call
cmp
jl
cmp
inc
inc
cltd
jl
jns
stos
sbb
daa
mov
mov
je
mov
mov
pop
shrb
lret
pusha
imul
mov
scas
jbe
leave
cs
xchg
addr16
and
push
pop
and
adc
fsubl
gs
push
cmp
hlt
push
pop
aaa
jne
and
jae
out
test
dec
pop
or
or
xchg
fldt
pop
dec
sbb
repz
fucompp
into
shlb
jg
mov
dec
cmp
cmp
bound
cmpsl
int3
add
shlb
push
sub
aam
aaa
bound
cmpl
cmp
ds
jb
scas
jge
jo
add
cmpl
jb
mov
add
push
cmovo
inc
and
cmpsb
mov
add
mov
add
pop
sub
sbb
add
je
test
hlt
mov
or
shl
mov
mov
ret
add
add
rolb
icebp
add
jno
mov
mov
pop
lods
dec
sbb
das
lods
adc
loope
ret
mov
lahf
in
cmpl
adc
pusha
frstor
mov
shr
jle
int3
mov
push
je
jne
daa
add
ljmp
cli
mov
or
adc
enter
out
inc
packsswb
data16
mov
add
push
sub
rolb
subl
push
or
mov
lea
lea
add
cmp
jl
add
inc
xchg
loopne
jmp
dec
sbb
dec
push
in
pushl
jno
mov
add
outsb
adc
or
or
mov
adc
iret
jl
call
scas
and
pop
clc
aaa
pop
mov
pushl
add
push
scas
clc
add
shlb
stos
push
fmuls
imul
push
mov
daa
inc
push
mov
js
add
ds
sbb
mov
rcrb
movb
sbb
pop
adc
push
call
fs
inc
aaa
pushl
xchg
dec
xor
adc
mov
pop
jae
mov
mov
testl
jp
clc
cltd
pop
cld
les
or
push
sbbl
sub
and
pop
mov
jecxz
pop
adc
mov
inc
push
in
out
testb
je
pop
inc
sub
pop
inc
shr
or
inc
xlat
loopne
mov
pop
pop
push
sub
sar
xchg
pop
mov
add
insl
sub
xchg
sbb
inc
enter
push
add
sahf
fsts
mov
ss
imul
or
push
mov
fisubrs
push
sub
mov
push
dec
sbb
fmul
pop
or
and
or
or
xchg
gs
insb
outsl
in
pop
xchg
jb
jb
js
xchg
add
pop
fs
in
bound
mov
mov
jo
jo
or
or
pop
mov
cmp
lahf
or
or
add
int3
imulb
sbb
je
addl
or
mov
adc
jp
mov
popf
subl
push
mov
aad
or
add
or
lock
dec
or
cld
push
and
mov
call
mov
xor
mov
mov
enter
imul
push
pop
aam
mov
aad
mov
es
add
sub
inc
pop
push
sbb
mov
loope
push
cmp
rorb
xor
adc
pop
sub
pop
stos
loopne
iret
sbb
stos
rcrb
adc
inc
pop
jge
fisubl
or
push
pop
add
jge
dec
push
ret
es
and
lock
leave
add
adc
dec
orl
push
lcall
fsubrl
xchg
bound
sahf
push
fisubrl
imul
lea
sub
je
cmpsb
adc
je
cmp
andl
push
mov
fisttpll
fisubs
stos
ret
jle
mov
fidivl
mov
inc
addl
mov
outsb
outsl
fwait
add
bnd
cmpsb
jnp
and
push
and
rorl
dec
xor
lcall
add
or
xor
rorb
or
scas
sub
fwait
ror
push
xchg
xchg
and
and
arpl
xchg
xchg
xchg
xchg
imul
xchg
xchg
gs
mov
nop
jnp
xchg
jmp
jae
loope
loop
addr16
out
fs
push
jne
popf
in
mov
jno
and
jmp
sub
dec
add
ss
sub
mov
jb
jns
mov
shrl
inc
dec
push
push
inc
push
adc
cld
sub
shlb
out
add
nop
cmp
es
push
incb
roll
and
or
push
xlat
xchg
xorb
cwtl
cmp
adc
jno
enter
push
jle
adc
mov
insb
das
add
xor
rcr
inc
mov
mov
mov
ljmp
mov
inc
loopne
aad
in
mov
sar
orb
and
or
inc
xor
cmp
adc
adc
mov
xchg
push
xor
push
push
scas
gs
gs
js
std
outsl
xor
int
jb
pop
loopne
loope
or
loop
in
pop
pusha
shlb
data16
es
add
test
sub
cmp
push
in
or
nop
dec
or
and
mov
xchg
sub
test
push
fmul
inc
sbb
sub
jl
addl
shlb
dec
push
in
cmp
sbb
inc
movsb
cmp
inc
push
addr16
aad
subb
push
mov
inc
mov
mov
adc
add
sub
add
shr
pop
lret
add
add
jmp
insl
enter
repz
dec
shlb
enter
fmuls
test
adc
test
clc
sub
mov
js
insb
movsb
pop
int3
add
addb
mov
cmp
add
repz
cld
inc
sub
sub
test
in
iret
and
add
sub
xchg
lret
lret
outsb
faddl
jo
adc
pusha
int
shlb
sub
pushf
adc
xchg
pop
xor
add
fsubs
sub
cmp
and
mov
es
out
and
movsb
fwait
xor
push
add
add
addb
andl
inc
push
push
adc
jb
arpl
jae
add
adc
clc
ljmp
push
outsl
outsl
insb
push
xor
popa
jo
push
sub
je
popa
insb
and
mov
inc
cmp
ss
adc
pop
subb
inc
insb
mov
add
fldt
fcmovnu
inc
dec
gs
xchg
cmovbe
aas
jbe
add
arpl
push
imul
push
jnp
inc
add
dec
outsl
fs
adc
in
push
shlb
outsl
add
mov
decl
fs
imul
jg
xlat
std
imul
mov
jb
inc
add
push
sub
imul
or
popa
sub
mov
fs
dec
into
add
and
mov
mov
test
gs
js
ja
mov
lret
popa
inc
outsl
jb
outsb
and
push
pop
xlat
jge
push
push
gs
outsl
outsb
push
imul
adc
into
push
orb
jae
int3
adc
add
lock
sub
push
push
push
imul
inc
cmp
lods
mov
in
pop
ret
andb
arpl
divb
jno
dec
pcmpeqb
and
outsb
fisttpl
pusha
xchg
push
das
clc
add
inc
shll
add
sub
in
push
push
sbb
push
gs
je
mov
bound
jae
sub
and
hlt
sub
push
sbb
push
addl
xchg
loope
outsb
test
xchg
fldz
push
imul
fwait
or
or
adc
imul
mov
inc
mov
gs
addl
inc
je
imul
xor
test
jo
xchg
fbld
arpl
movb
pop
mov
negb
jbe
xchg
movl
fidivrl
pop
add
push
sub
imul
adc
jg
fmuls
mov
scas
add
inc
push
insb
add
add
inc
ret
pcmpgtb
ret
add
xchg
mov
arpl
push
outsb
push
mov
fwait
inc
in
lret
adc
inc
push
dec
inc
push
mov
icebp
lods
add
jae
data16
push
popa
sti
test
add
push
add
sbb
gs
fs
xchg
xor
lea
cs
ret
std
inc
pop
pop
and
lahf
and
shll
mov
mov
fiadds
cli
mov
frstor
mov
aad
push
push
push
int
cmp
or
dec
xchg
push
jl
adc
fwait
mov
push
inc
in
movl
push
or
sub
in
stos
jnp
sub
sub
in
test
pop
and
jae
sub
rcr
sbb
pop
add
dec
pop
in
push
mov
imul
sub
jne
push
test
movsb
jne
add
fbstp
pop
add
bound
lods
jnp
fistpll
inc
scas
jb
cmp
iret
gs
adc
inc
orl
push
ja
nop
stos
sbb
inc
push
inc
push
mov
scas
mov
fldt
and
movsl
arpl
leave
lret
loope
jnp
pop
inc
jb
adc
cld
cmp
mov
lret
shll
lahf
inc
pop
adc
and
data16
popa
xchg
jle
or
mov
pop
daa
cmp
jns
pop
mov
arpl
or
insb
add
cmp
insl
push
push
js
mov
lods
adc
pop
mov
or
inc
aas
aas
xor
inc
pop
push
add
vpacksswb
fcmovnbe
cltd
outsb
nopl
sbb
xchg
mov
xchg
int
xor
arpl
mov
dec
out
iret
lds
mov
cmp
sub
or
mov
add
lret
jb
lret
xor
jo,pt
dec
add
mov
insl
inc
fdivs
insb
ja
dec
repnz
and
aaa
lods
xchg
packssdw
outsl
test
pop
dec
insl
cld
inc
ja
daa
adc
cmp
lods
jo
sbb
fmull
push
push
and
xchg
sub
xor
sbb
jbe
jno
inc
sub
lcall
test
cld
dec
inc
dec
push
dec
xor
shll
pop
push
addr16
mov
cmc
call
call
cli
mov
mov
pushf
push
mov
cmp
jl
jl
push
cmp
lods
or
sub
add
mov
lods
sarb
fmuls
push
add
sbb
jne
mov
adc
and
out
dec
enter
inc
pop
int3
add
and
fstl
adc
stos
or
popa
add
and
and
push
test
sub
decl
adc
adc
addb
incl
cmp
sbb
rcrl
adc
cmpsl
add
jmp
sbb
add
outsb
lret
jle
addr16
push
add
and
mov
mov
incl
mov
xor
and
ljmp
imul
jb
nop
cmp
sti
sbb
call
xchg
frstpm(287
loope
push
sbb
cmp
fs
push
jecxz
or
jmp
jmp
xlat
mov
sub
cwtl
or
lock
movsl
inc
pop
popa
sbb
out
sub
jmp
shlb
scas
test
xchg
out
xchg
cmp
adc
sarb
dec
fiadds
lret
ljmp
push
ljmp
in
sbb
nop
cmp
inc
decl
push
mov
cmp
cmpsl
call
jo
jae
cltd
gs
fnstcw
and
jnp
adc
push
sub
xor
sub
fstpl
ror
cwtl
mov
cmp
pop
lret
fisttps
mov
shld
pop
movsbl
neg
popf
setle
pop
pushf
data16
add
add
push
pushf
mov
sub
mov
lret
xchg
shr
mov
jmp
push
add
push
or
shll
mov
cmc
or
pop
mov
stc
mov
outsb
mov
pop
arpl
dec
out
lahf
and
adc
push
xor
stc
clc
xor
mov
imul
clc
ror
jb
call
xor
call
mov
lret
pushf
cmp
jmp
mov
test
pushf
sub
jmp
jns
sub
adc
daa
scas
jne
inc
push
mov
xor
pop
adc
pop
imul
cmp
call
pop
aam
pop
cmp
pop
stc
pusha
call
outsl
pop
add
mov
or
sbb
sbb
xchg
or
scas
inc
add
push
push
mov
outsl
jg
lret
int
cmp
sbb
cmc
mov
je
lds
add
insb
lods
adc
jmp
aaa
stos
inc
shl
mov
call
add
pusha
or
call
jmp
jp
aam
call
push
cmp
imul
aaa
ja
and
or
add
clc
lea
test
xor
int
pop
testl
dec
negl
loope
call
lahf
int
jle
clc
sub
jmp
negl
addr16
xor
into
into
or
addr16
adc
lcall
or
sbbl
adc
pop
syscall
repz
aaa
push
adc
dec
cld
das
mov
mov
adc
push
sar
cmp
paddsw
shl
rcr
inc
cmp
idiv
in
call
aad
neg
xor
xor
rcr
jg
ss
cmp
rcr
sbb
stc
sub
push
sti
imul
jg
inc
adc
ljmp
pop
mov
xor
mov
clc
cmc
rcr
add
js
clc
sahf
add
enter
shlb
mov
mov
out
cmc
inc
rcr
xor
push
int
int
push
sub
enter
in
ja
mov
mov
dec
inc
sbb
rcr
and
fildll
into
add
pop
or
xor
and
inc
jns
fwait
jecxz
bound
jmp
push
mov
dec
adc
sar
jo
loope
sbb
addb
ss
fsubr
les
and
arpl
fwait
aas
add
pusha
mov
xchg
inc
jno
jmp
loope
scas
cltd
xlat
xchg
push
ljmp
mov
xlat
add
mov
rol
pop
xchg
movsl
fistpll
daa
sbb
add
test
out
js
sbb
pusha
cmc
call
adc
clc
xor
rcr
mov
or
test
out
sti
pop
cmp
outsl
in
sti
cmc
cld
sbbl
jge
push
clc
sbb
cmp
mov
add
sbb
fisttps
mov
sub
sub
jo
fnstsw
jle
test
cwtl
cmp
push
push
pushf
sub
adc
ficompl
pop
dec
shll
mov
fcompl
outsl
mov
pop
call
adcb
les
lock
fildll
enter
movsl
or
in
decb
data16
pushf
cld
inc
iret
clc
fidivl
pop
imull
jl
fucomip
dec
pop
cld
add
jmp
jg
xchg
cmp
arpl
or
fistpl
or
adc
xchg
ret
xor
push
testl
push
cwtl
mov
adc
sub
adc
scas
std
pusha
lods
jbe
push
push
sti
push
pushf
daa
fnstsw
jmp
sbb
sbb
insb
add
adc
dec
push
ffreep
pop
fistps
rclb
cmc
push
stc
jmp
dec
xor
dec
int3
shlb
pushf
sti
pushl
in
sbb
ljmp
stc
cmp
not
stc
and
call
mov
xchg
adc
sub
mov
mov
mulb
pop
clc
push
jmp
or
iret
pushf
push
dec
insl
addr16
and
into
push
pushf
fbstp
sbb
in
jo
sub
add
inc
adc
loope
hlt
stc
aaa
das
inc
and
add
fwait
xor
std
pop
lcall
push
sbb
mov
push
pushf
inc
stos
inc
gs
insl
push
mov
mov
push
push
mov
lods
pushf
xor
add
push
xchg
jb
sbb
jg
imul
mov
cli
inc
jp
loopne
loopne
les
clc
sbb
xorl
gs
dec
add
aam
fmuls
sub
movsl
out
outsl
pusha
sarl
push
clc
mov
iret
outsb
jae
jbe
lret
cmc
out
out
mov
cmp
push
or
or
jg
out
xor
cmp
test
testb
scas
loope
out
cmp
xor
push
push
and
or
mov
lods
jge
sub
cmp
xor
xchg
movq
and
ja
hlt
push
sbb
testl
or
cmp
fdivrl
scas
push
sbb
pusha
mov
sub
jb
mov
enter
mov
adc
pusha
push
mov
sub
jnp
ja
pushf
dec
pusha
push
inc
xor
pop
mov
lock
jbe
jmp
dec
sti
arpl
sbb
fwait
xchg
dec
lods
cmpsl
sub
pop
xor
push
cwtl
mov
adc
adc
movsb
pop
sbb
lret
clc
sbb
push
pusha
push
pop
pop
or
push
inc
pop
addr16
push
fbstp
ret
or
ret
call
dec
pop
adcl
pop
mov
sbb
loope
stc
mov
and
in
call
fadds
jbe
jo
pop
jmp
icebp
mov
pop
or
cmpb
jnp
mov
ret
imul
fs
xor
sarl
shr
lods
xor
sbb
fldl
jp
fucomip
fucomp
out
mov
loop
addr16
cwtl
daa
data16
push
stc
lock
ret
jne
rolb
movsl
call
loopne
lret
das
push
xor
cmp
jmp
outsl
lods
rcrb
shll
call
mov
ja
mov
enter
and
mov
sub
fisttps
sub
repnz
jae
je
xor
mov
cmc
pusha
mov
loopne
inc
clc
mov
jbe
aas
mov
mov
jmp
jmp
shl
push
mov
mov
cmpb
cwtl
push
call
add
es
cmc
loop
jnp
addb
jb
clc
mov
inc
jle
in
or
out
loop
cmc
in
add
cmp
test
sub
push
sbb
fsubrp
aad
sahf
sti
adc
push
push
xorl
iret
push
mov
jmp
cld
pop
call
pusha
es
or
stc
or
push
inc
cmp
xchg
sbb
fmuls
call
scas
mov
adc
or
les
jg
aaa
jle
les
test
stc
cs
orl
cmpsb
out
inc
jmp
popf
hlt
cmp
mov
xchg
setge
sub
filds
call
notl
in
xchg
insb
outsl
mov
scas
sub
jae
or
clc
mov
or
cmp
shll
in
clc
push
sbb
xor
pusha
jo
dec
lret
ret
push
and
push
dec
jecxz
push
dec
sub
pop
cmpsl
shlb
imul
in
push
or
or
mov
mov
pushf
mov
in
sbb
outsl
or
out
data16
mov
dec
and
std
cmp
push
inc
mov
nop
xchg
aam
sbb
push
xchg
push
cmc
mov
fstps
arpl
rclb
mov
mov
sub
cltd
shrb
sti
ror
add
or
ja
xor
xor
jo
stos
fsubrs
ret
sar
jne
cli
fcompl
aas
pop
pushf
loopne
add
arpl
push
push
pop
cmp
fsubs
jns
movsb
lock
outsb
mov
les
addl
mov
je
shll
adc
dec
ror
mov
jl
jno
loopne
xchg
jnp
cwtl
cmp
xchg
bound
aas
iret
or
int
nop
mov
mov
sub
pop
mov
or
in
mov
push
pop
xchg
inc
inc
data16
shrl
cmp
mov
insb
idivl
outsl
add
jnp
fbstp
ja
mov
pop
mov
push
inc
adc
mov
pxor
pop
sti
adcl
add
out
inc
outsb
jb
pop
ficomps
sbb
mov
xchg
xor
jnp
mov
adc
jecxz
js
sbb
mov
out
mov
add
jnp
jo
filds
aas
mov
push
mov
push
jp
jmp
loope
xchg
daa
mov
repz
mov
jecxz
pop
das
mov
out
pop
xchg
pop
cmpsl
fwait
jl
out
add
sti
bound
js
mov
pop
imul
ja
daa
pop
add
jp
sbb
xchg
sti
cmpl
adc
aas
pop
pop
pop
addr16
mov
or
repz
jecxz
neg
sti
pop
xchg
mov
pop
cmpsl
pop
nop
out
sbb
jg
cmovg
xor
pop
mov
pop
jns
sbb
pop
pop
add
es
scas
jns
fidivs
add
ror
mov
sub
icebp
dec
jbe
jg
fildll
mov
inc
aas
pop
sar
mov
and
jecxz
ficomps
dec
push
cmp
inc
enter
daa
push
daa
cltd
lcall
lcall
cld
out
mov
adc
lock
stos
shl
pop
mov
lds
insb
cmp
push
jge
sahf
push
ret
insb
add
jbe
loopne
mov
or
pusha
and
push
divl
fdivrs
jns
pop
inc
push
repnz
pop
dec
sbb
mov
pop
and
jmp
or
ja
rcr
sub
neg
add
andb
pushf
call
inc
cmp
out
push
push
call
scas
inc
rcrb
jbe
adc
sbb
setno
neg
ficompl
out
sbb
decb
orb
push
pusha
sbb
fsubr
outsb
fiaddl
repnz
add
adc
int
not
mov
jmp
out
mov
or
call
cmp
adc
lret
sub
bound
fcoml
jp
xor
in
mov
lret
dec
sbb
mov
ret
rclb
cld
cwtl
lahf
cwtl
jmp
sbb
pusha
push
ja
lcall
cmp
dec
mov
jb
xor
pushf
movb
push
push
or
in
or
and
dec
aas
pusha
fists
cmp
add
mov
pop
add
add
fnstcw
std
les
rcrb
jb
jo
lea
or
cltd
add
pushf
clc
xchg
pop
faddp
or
clc
bt
jmp
adc
xchg
int3
xchg
mulb
lret
rcrb
fdivr
jb
jo
or
cmpsb
adc
pushf
outsl
mov
or
stos
gs
das
stc
sete
inc
in
sbb
aad
fnstenv
cs
ror
and
aaa
lds
es
or
mov
leave
pop
lret
cmc
xor
pushf
int3
js
adc
push
test
xorb
fimull
or
aaa
mov
filds
pop
push
sbb
call
cmp
fwait
add
push
cmp
mov
xchg
roll
ret
aad
and
clc
xor
test
aas
ror
sbb
add
bound
jmp
cmc
mov
stos
loopne
in
push
mov
call
pushf
pusha
call
jnp
cmpl
repz
fmull
xor
and
outsb
subb
clc
fsubl
jle
mov
dec
jmp
dec
mov
inc
cmpsl
movsw
cmovl
shll
mov
and
push
push
call
testb
rcll
jp
or
ret
xchg
scas
adc
add
or
rorl
enter
pcmpeqd
pusha
pop
mov
and
inc
push
sub
fsubrl
or
inc
pop
ret
inc
xchg
loop
sbb
psllq
call
test
imul
lea
cmp
sub
cwtl
ret
sub
push
pushf
enter
fisttps
rol
mov
xor
and
xorb
incl
insb
sbb
push
pusha
cvtps2pi
adc
loopne
lds
ret
dec
push
mov
outsb
orb
sbb
pushl
pop
adc
in
jle
pop
push
sbb
adc
fcmove
or
mov
test
loopne
push
stos
cmc
sbb
jp
mov
mov
push
nop
call
jae
jmp
adc
push
push
shr
xlat
jb
into
add
mov
and
insl
cltd
imul
or
cmp
imul
jmp
xor
outsl
insl
sbb
rol
shl
clc
and
ret
ret
es
xchg
les
and
xor
inc
pop
test
add
loop
insl
pushf
callw
js
jmp
mov
jmp
inc
call
fadd
cmp
dec
jecxz
std
mov
pop
ljmp
adc
dec
scas
hlt
add
jb
pop
movl
jg
mov
stc
jmp
mov
lret
jb
aas
push
out
and
and
nop
mov
push
add
sub
ret
call
test
out
mov
out
cmpsb
loope
cmp
neg
call
or
sub
jg
lea
daa
cmp
jns,pn
ja
out
icebp
add
clc
add
cmc
mov
adc
add
jmp
xor
repz
pop
jmp
rolb
inc
mov
sbb
lahf
mov
push
pop
xlat
or
push
pushf
sbbb
not
pop
not
fwait
add
pop
pusha
mov
xor
jmp
mov
push
push
mov
fidivrl
cmp
mov
jo
and
fidivrl
cmp
or
xchg
xchg
ffree
orl
cwtl
out
cld
call
dec
cld
inc
fiaddl
aam
shll
testl
mov
add
out
cli
rorl
pop
mov
das
test
cmp
jb
inc
inc
iret
imul
outsb
rolb
nop
push
insb
add
mov
cmp
in
clc
icebp
pop
inc
cmp
pushf
cwtl
mov
push
in
dec
les
arpl
push
pop
sub
xor
pop
push
imul
add
popa
mov
and
ljmp
shll
mov
sar
xor
sbb
int
mov
mov
jmp
cmp
mov
jg
mov
push
call
mov
cmp
stc
push
aam
ret
jmp
sbb
call
push
mov
xor
adc
pop
xlat
push
aas
mov
sbb
decb
push
pushl
jo
adc
insl
dec
sti
stos
cld
and
pop
mov
into
es
je
dec
cwtl
clc
pushl
jns
inc
sub
daa
inc
cli
cwtl
daa
fdivrs
adc
shll
push
loop
dec
ret
dec
adc
outsl
pop
repz
subl
sub
loopne
jmp
out
add
and
and
out
sbb
jns
adc
cld
xchg
shl
mov
movsl
pop
sub
test
imul
pusha
pop
sbb
jo
fistpl
cmp
inc
dec
inc
arpl
sbb
xchg
daa
fistpll
jbe
lock
push
xor
mov
icebp
mov
js
ja
jg
add
pop
mov
add
mov
xchg
fists
cli
out
or
inc
pop
inc
adcl
jbe
scas
fsubrs
insl
cmp
push
cmp
call
sub
sbb
repnz
arpl
outsl
mov
add
push
daa
adc
call
adc
pushl
mov
push
scas
ja
imul
sub
enter
lods
cmp
fdivr
dec
out
dec
cltd
pop
std
pushf
cmp
loop
pop
or
add
push
test
jnp
push
ffreep
cmp
sbb
ds
cltd
mov
decl
shrb
and
mov
cmpsl
or
jl
dec
jge
das
arpl
adc
scas
jmp
mov
jmp
rol
push
jl
xchg
imul
jno
repnz
iret
addr16
imul
ss
icebp
insb
dec
lock
sti
ret
cmpsl
push
jb
push
and
push
icebp
dec
arpl
nop
pop
and
push
pushf
sub
pushf
sub
mov
icebp
repnz
out
jp
pop
call
add
pop
mov
cli
stos
push
repnz
call
andl
das
test
pop
xor
mov
sub
push
sub
lods
aam
popf
into
cld
lret
and
pop
enter
les
dec
mov
or
or
ljmp
jmp
adc
mov
dec
fadd
push
cltd
fidivs
fwait
outsl
inc
push
test
lcall
movsl
icebp
nop
icebp
fisttps
test
fldenv
sahf
lret
mov
add
dec
repz
out
xor
iret
pushf
mov
mov
cmp
jno
dec
loopne
push
out
push
mov
xor
push
or
mov
sbb
fisubrs
push
loope
fidivl
inc
jmp
inc
or
shrb
cmp
test
cwtl
jle
mov
mov
and
push
iret
clc
fs
dec
dec
xchg
and
and
lahf
std
jns
scas
pusha
and
outsl
push
scas
or
imul
jns
mov
scas
rcrb
cmp
pop
cli
jg
dec
cmp
xchg
in
cmp
sti
push
sbb
call
es
push
add
cmpsb
mov
mov
pop
decl
test
sub
mov
inc
repz
add
sub
jle
incl
mov
int
ja
lret
pop
dec
imul
mov
cmpsl
mov
adc
arpl
mov
mov
mov
sbb
bound
faddl
ss
aas
stc
aaa
call
add
clc
shlb
jnp
ljmp
std
incl
sub
dec
xor
lret
cld
adc
frndint
sub
imul
lcall
cmc
repnz
in
iret
out
repz
jno
popl
mov
sbb
ss
jmp
cld
add
fwait
popf
mov
test
in
pop
int
mov
repnz
ja
lret
lods
les
push
inc
fs
jmp
inc
sub
add
in
pop
mov
xor
push
or
outsb
pusha
xor
out
sbb
cld
mov
jmp
adc
cmp
insb
arpl
jp
std
ljmp
fidivs
dec
pop
sbb
test
sub
mov
sbb
add
add
test
xor
mov
add
mov
jle
cmp
jae
ljmp
lea
hlt
xchg
xor
lret
dec
or
pop
and
mov
into
sbb
test
scas
fdivrp
lea
jno
cvtps2pi
imul
sar
pushl
test
aam
sbb
dec
mov
popf
mov
fldl
ja
jmp
outsl
test
dec
sbb
jge
rolb
xchg
sbb
add
mov
ret
lcall
and
inc
lret
and
les
xchg
add
jno
mov
jno
push
sbb
jmp
cmovbe
sbb
cmpl
mov
pop
cmpb
test
ds
lods
lds
and
fsubrs
mov
mov
pop
pusha
sti
jmp
lret
cmc
negl
insl
pop
mov
dec
fisubl
sbb
jecxz
cmp
push
or
mov
xor
cmp
xchg
dec
push
jg
pop
jmp
divb
icebp
xor
pop
xchg
xchg
mov
pushl
scas
mov
xor
mov
cwtl
movsl
xor
jg
mov
sub
scas
rcr
xchg
adc
mov
aad
mov
lret
ds
push
shrb
scas
lods
fcoms
jmp
jl
push
roll
inc
jns
rclb
enter
sub
mov
call
fiadds
push
bnd
cmp
mov
xlat
ds
jmp
mov
into
fisubrs
lret
cld
push
fwait
std
insl
jno
mov
mov
in
shl
jnp
mov
ss
out
or
jo
mov
out
push
inc
push
clc
mov
popa
xchg
push
test
sahf
hlt
int
pop
mov
push
lret
jbe
pop
cmpsl
inc
mov
pop
or
mov
in
ljmp
in
xchg
or
out
cmc
cmp
ja
fs
mov
in
lods
fbstp
scas
xchg
adc
aad
mov
jle
mov
clc
lcall
jl
cmpsb
popa
and
aam
pop
out
pop
xchg
ljmp
mov
sub
sub
fmuls
sahf
jg
test
dec
mov
push
xor
sarb
sbb
jno
jle
mov
push
pop
xor
mov
sub
or
popa
movsl
inc
addr16
popf
cs
outsl
mov
test
ja
mov
jne
scas
sbb
or
in
adc
push
test
jno
add
cmpsl
jmp
jae
jmp
orb
sar
jb
mov
rclb
lods
pushl
outsl
sbb
pushf
into
imul
pop
mov
or
stc
or
jno
out
inc
sub
scas
inc
mov
add
xor
out
mov
loop
jmp
adc
sbb
pop
ds
xchg
or
hlt
jge
jg
jge
insl
mov
jp
stos
adc
sub
push
pushl
or
mov
jno
adc
mulb
stc
mov
xor
call
cltd
stc
aaa
arpl
xchg
lods
dec
in
mov
sbb
sbb
nop
xchg
lcall
ffreep
jo
pusha
mov
leave
leave
aaa
imul
jle
cmp
push
fisubrs
inc
add
arpl
adc
loopne
sub
sub
add
out
jge
xor
jne
jmp
pop
or
rcll
cltd
add
jle,pn
and
in
cs
jg
enter
jnp
add
je
outsl
add
jmp
ret
or
and
sub
popf
test
fs
xorb
stos
out
fidivrs
std
decl
ds
dec
mov
cmc
ret
pop
pop
iret
icebp
fstps
mov
mov
lds
pop
cmp
sbb
rolb
pop
jle
popf
repnz
sbb
pop
sub
mov
gs
cltd
adc
lret
xor
cmp
adc
mov
repz
test
xchg
or
sbb
push
jmp
cmp
decl
out
loopne
aas
xchg
xlat
loope
push
fisttpl
mov
addr16
insb
push
das
insl
stc
jne
subb
call
mov
sub
mov
push
dec
nop
add
cmpsl
or
xor
cmp
cli
dec
pop
adc
ljmp
dec
out
mov
mov
outsb
xchg
call
popf
test
push
mov
xchg
sub
cmpsb
inc
pop
mov
pop
call
loop
xchg
in
out
jg
fnstenv
cmp
inc
add
sub
xor
mov
sbbb
frstor
movsb
xor
sbb
mov
and
int
test
es
adc
decl
mov
adc
insl
sbbb
mov
or
xchg
stc
mov
loope
push
pop
out
mov
popa
sbb
pop
dec
jns
fstpt
js
das
cmp
mov
outsb
inc
dec
das
jle
xor
push
xor
inc
in
repz
shrb
adc
orl
int
movsl
inc
adc
mov
clc
ss
scas
fstl
sbb
addr16
sbb
das
jne
das
push
ds
xlat
xor
and
in
sti
std
pushl
sbb
loopne
shrl
cltd
stos
xchg
mov
adc
subb
sarl
mull
add
shrl
fidivrs
popa
jecxz
mov
jle
test
daa
call
jbe
pop
cmc
pop
mov
cmp
fabs
dec
mov
data16
adc
push
pop
pop
sahf
xchg
loopne
mov
ret
or
push
call
shll
cmp
pop
lret
xchg
es
xchg
jnp
aas
inc
xchg
xor
insb
rclb
outsl
fiadds
lcall
or
jo
push
mov
jno
mov
push
aam
mov
jne
or
mov
xchg
test
mov
and
aaa
mov
dec
or
inc
stos
dec
add
jo
stos
shlb
push
lret
jg
jge
jnp
mov
pop
lret
movsb
add
scas
insl
push
movsl
gs
inc
je
mov
pop
xchg
out
mov
cmp
xchg
cmp
lea
xchg
push
fnstsw
incb
mov
into
cmp
insl
iret
std
call
test
pop
inc
jno
dec
xor
scas
arpl
std
out
mov
fwait
pop
mov
out
push
aaa
push
or
ror
jecxz
es
sub
loop
call
mov
mov
or
inc
or
decl
pop
aaa
add
xlat
add
loop
into
int
pop
mov
dec
xor
idiv
xorl
scas
fildll
jnp
dec
loope
mov
cli
pop
pop
pop
cli
sbb
mov
outsl
xchg
xchg
jp
jg
or
mov
aad
int3
cmpsl
enter
and
mov
divl
std
inc
aaa
imul
fdiv
pushf
pushf
cmp
dec
jmp
add
inc
adc
sti
jg
fstps
pop
pushf
pop
stos
in
iret
sti
aad
push
int3
jne
incl
and
call
mov
or
push
rcrl
pop
or
xor
mov
dec
jl
cmpsl
cs
and
movsl
mov
je
sti
jmp
lds
cmp
push
mov
sbb
pop
ds
mov
xchg
mov
ljmp
mov
lret
mov
jge
and
and
outsl
gs
xor
inc
jge
call
push
loopne
addl
aas
cli
ret
fbstp
cld
dec
pop
cwtl
mov
xor
adc
in
or
out
call
rclb
jg
mov
sub
lret
pop
stc
mov
enter
cld
loop
mov
repz
cmc
mov
cmc
pushl
adc
inc
decl
cmp
incl
repz
or
movsb
jecxz
repnz
push
mov
decl
lahf
jae
pop
jo
inc
orb
pop
adc
jae
push
jg
decl
bound
cmpsb
loope
mov
fcompl
jp
ret
inc
add
sub
shrl
fxam
incl
add
mov
cltd
cld
mov
sbb
fucomip
insl
mov
push
inc
shlb
repnz
out
cmpsl
jno
popa
jp
dec
rcrl
mov
pushl
stos
aad
jge
cmp
pop
bound
or
xchg
int3
arpl
pushl
sub
inc
push
mov
push
sub
shlb
pushl
subl
insb
int3
cmp
push
lock
cli
jg
aas
sbb
add
imull
shlb
lock
pushl
jp
sti
and
mov
test
lcall
decl
sub
mov
aas
lret
fnsave
call
cmp
fstps
dec
xlat
inc
xchg
mov
dec
std
lcall
mulb
les
pop
pop
adc
aas
inc
fisttps
out
or
xor
xchg
mov
jo
xchg
icebp
pop
and
call
std
decl
sti
adc
sbb
cmpsb
xor
lcall
mov
jb
std
in
sub
push
sbb
dec
adc
inc
out
pop
mov
lcall
jnp
lods
shl
daa
ja
mov
add
popf
dec
sbb
xor
push
xor
pop
enter
pushl
push
add
sbbb
ljmp
mov
pop
jp
imul
mov
decl
inc
ret
mov
lret
jl
mov
jmp
add
pop
gs
xchg
cmp
fs
xchg
aas
rclb
es
dec
imul
aad
and
fucomi
push
jg
scas
fldt
out
mov
movsb
xchg
sbb
out
mov
icebp
fwait
pusha
xchg
aam
call
iret
ds
in
stos
aas
adc
and
stc
add
dec
pop
call
in
pop
enter
push
jo
out
xchg
stc
push
xchg
cmpsb
cs
cmc
xchg
clc
sub
enter
into
lods
stc
insb
scas
pop
mov
push
scas
xor
sbb
sub
test
or
jl
dec
das
test
xor
bound
push
ljmp
inc
mov
in
inc
and
int3
lea
jo
inc
out
pushl
aam
or
ret
sbb
pop
mov
add
add
lcall
push
cli
inc
push
repz
les
fdivl
pop
mov
lret
push
mov
insb
nop
pushl
push
lahf
popa
pop
pop
cmp
insl
sub
aaa
aas
and
scas
or
insb
push
push
call
popl
scas
xlat
lods
or
jbe
aam
fldt
mov
cmp
pusha
enter
outsl
std
divb
cltd
sbb
ret
xor
ret
loop
pop
fs
ja
cmp
push
xor
mov
cmpsl
data16
push
pop
ljmp
sbb
inc
push
data16
icebp
jmp
daa
mov
lea
stos
sbb
jmp
cli
jmp
iret
out
mov
inc
xchg
dec
push
flds
loop
es
pop
jmp
mov
les
in
incl
lods
pop
stos
daa
adc
ljmp
pop
jmp
rorl
inc
ljmp
mov
sbb
sub
mov
cmc
xchg
jbe
jns
mov
inc
test
call
movsb
sti
aaa
push
test
push
and
cmpsl
mov
loop
in
in
inc
sarb
clc
hlt
call
stc
enter
jo
mov
xchg
inc
push
cmp
pushf
repnz
outsl
dec
and
lea
dec
mov
loopne
out
outsl
bound
fwait
outsl
clc
flds
push
lods
jl
test
out
add
shll
jno
push
pop
push
lret
pushl
int
shld
in
stos
bound
gs
das
jg
push
data16
lods
jl
jb
shll
test
sbb
cli
sub
or
ja
imul
xor
mov
xorl
jmp
fiadds
dec
sub
loopne
lcall
mov
jge
imul
hlt
out
js
loope
fxch
jle
mov
call
mov
add
dec
clc
ret
pop
int
jnp
lea
lock
mov
movsb
bound
rolb
hlt
sbb
scas
or
jg
outsl
imul
mov
add
sti
mov
jle
into
sbb
lcall
cld
dec
adc
fcomi
int
je
mov
and
aad
push
call
sub
jno
pusha
push
add
jb
dec
and
jae
shrb
or
push
fsubl
outsl
in
test
sub
jg
lret
push
jmp
add
add
out
jo
jmp
sub
repz
nop
in
stos
je
incl
loopne
push
mov
and
call
es
aad
ljmp
iret
mov
mov
lcall
cmc
inc
out
mov
pusha
jg
fcmovnbe
popf
das
xlat
js
leave
popl
lcall
mov
test
std
fnstsw
mov
mov
mov
jmp
leave
in
mov
pop
mov
enter
adc
bound
imul
js
lock
cltd
xchg
push
adc
test
in
ds
push
dec
cwtl
jne
dec
popf
sbb
shlb
push
or
adc
out
jecxz
inc
or
jb
cmp
popf
sub
subb
and
in
shufps
add
sub
dec
and
ljmp
cmp
hlt
or
push
mov
xlat
push
lcall
mov
in
adc
call
daa
pushf
lret
imul
mov
gs
pusha
add
pop
push
repz
stos
jg
and
lret
mov
out
pop
call
pop
cli
fwait
aad
dec
xor
loopne
mov
sbb
push
ds
in
cmp
pop
sub
and
jae
mov
incl
dec
bound
push
aas
mov
ja
push
jg
and
cmp
daa
mov
hlt
fists
jecxz
jmp
pop
mov
jnp
sub
pusha
sub
mov
mov
push
fs
xorb
push
inc
clc
test
scas
xchg
dec
pop
sar
roll
xchg
pop
sbb
or
mov
push
mov
andb
mulb
shlb
mov
push
stc
rcrl
add
enter
jmp
jnp
or
push
dec
push
lret
adc
icebp
popl
pop
ljmp
mov
movsb
ss
les
ds
jmp
xchg
outsb
les
add
cmpsl
stc
test
popf
insl
jg
jmp
or
sti
sarl
test
ljmp
push
xor
iret
mov
add
or
insl
add
jno
push
push
rolb
lods
and
inc
cmp
jp
and
mov
dec
loope
add
es
call
fstpt
negl
sub
and
lock
mov
ret
inc
push
mov
add
adc
jle
inc
loop
out
push
mov
xchg
inc
sub
push
or
stos
out
inc
int3
dec
mov
pop
ret
pop
inc
sub
push
int
pop
in
int
cmc
fbld
int3
jg
jmp
pop
xchg
mov
loopne
push
push
mov
or
xchg
incl
sarl
push
fcoms
mov
push
add
pop
cmp
cmc
pop
cli
decl
mov
adc
nop
mov
dec
std
pushl
fmul
gs
fisttpll
dec
popa
fstl
shl
sub
hlt
pushf
lea
pushl
or
mov
add
ss
arpl
sub
jmp
gs
leave
mov
sbb
addl
dec
lock
sub
lock
mov
fwait
cmp
mov
arpl
lods
inc
out
xchg
xchg
imul
xchg
pop
cmc
adc
add
call
mov
test
incl
les
fimuls
push
cmp
sbb
daa
ljmp
test
sbb
call
aas
in
sbb
xor
sahf
icebp
out
push
or
pop
pop
mov
xchg
lds
jo
jmp
dec
jg,pn
mov
xor
sti
sahf
aam
loope
sbb
or
popf
out
inc
call
adcl
xor
xlat
cmp
push
in
jmp
xchg
cmp
push
mov
xchg
jb
push
js
in
ljmp
out
mov
xchg
pop
movsl
fcoml
pop
push
xlat
push
enter
out
leave
lods
dec
iret
jo
or
loop
std
loop
data16
leave
leave
pop
stos
cmp
fdivrp
decl
repz
dec
sbb
in
js
ljmp
xor
movb
pop
test
xchg
inc
cmpsl
push
add
ret
xchg
ret
test
dec
cli
leave
or
decl
mov
fisttpl
notb
sbb
pop
jb
jmp
decl
imul
adc
sbb
loopne
xchg
push
pop
inc
inc
cmp
jns
clc
pushl
pop
and
mov
add
push
loopne
xchg
movsl
popa
xchg
data16
inc
stos
jl
call
xchg
add
and
dec
ljmp
es
adc
lock
outsl
sar
in
mov
cs
scas
inc
std
push
jmp
inc
jmp
out
cmpb
int
xor
out
add
dec
add
outsl
mov
loop
cli
mov
rcpps
jge
lock
mov
or
cmp
jmp
dec
pushf
jg
sbb
pop
jbe
icebp
lcall
adc
cmp
dec
js
add
mov
clc
xor
mov
fisttpll
mov
dec
push
repnz
and
outsb
pop
xchg
xor
rcr
mov
pushl
mov
in
xchg
not
push
rorl
mov
xor
fmul
icebp
addb
aas
int
mov
cli
lds
test
pop
in
insb
popa
std
insb
mov
inc
sbb
add
jecxz
push
out
lcall
mov
testl
xchg
xchg
sub
dec
fsubrl
incl
aas
rcrb
lahf
arpl
xor
jb
out
xor
or
loop
pop
or
je
mov
push
push
add
sbb
clc
push
aas
push
mov
sub
loopne
xchg
xchg
mov
xchg
call
scas
fstps
cwtl
push
jg
rcr
in
or
aad
mov
jo
popl
ret
sub
mov
mov
mov
inc
cwtl
xorl
cmc
mov
fildl
xchg
mov
cmpsb
xor
mov
or
cmp
pushl
or
mov
insl
push
imul
jmp
cmp
adc
inc
rcrl
cmp
dec
cld
xor
sub
lahf
mov
xchg
shrl
mov
jle
lcall
jg
pop
popf
mov
pusha
inc
ret
mov
mov
inc
out
jbe
out
es
loope
insl
jmp
in
push
or
cmpl
lods
dec
mov
xchg
shll
dec
xchg
xor
ljmp
out
and
add
js
mov
insb
mov
jg
rorl
lcall
fisubrl
das
mov
cmp
jl
addr16
ja
pop
xor
addr16
sbb
push
aad
cltd
divl
repz
sub
lock
inc
ss
lods
mov
pop
in
mov
xchg
ret
and
add
jge
xchg
push
xchg
add
dec
mov
mov
adc
lahf
icebp
push
frstor
nop
pop
clc
mov
test
lcall
pop
daa
or
lcall
cli
mov
push
mov
into
jbe
inc
pop
aaa
or
sub
jbe
dec
push
push
movsb
mov
movl
addr16
incl
xlat
rorb
inc
stc
cmp
das
pop
loop
scas
cld
xchg
loope
adc
loope
push
xchg
xor
dec
rcrl
cltd
mov
push
or
cwtl
dec
adc
addr16
dec
outsl
movsl
lods
stos
out
push
test
mov
fcmove
jmp
stos
decl
push
call
dec
lahf
mov
rcrb
jp
jg
mov
xor
xor
push
clc
daa
adc
popa
out
cmp
mov
call
xor
popf
repz
cwtl
movsb
lcall
std
adc
mov
test
sub
mov
mov
push
data16
add
pop
scas
mov
nop
mov
les
xor
pop
call
jle
add
mov
orb
out
jbe
iret
imul
arpl
clc
mov
jne
pop
sbb
pop
xor
xchg
int3
and
push
sarb
mov
push
in
fucompp
sarl
pop
mov
mov
mov
add
mov
pop
movsb
jmp
mov
aad
sbb
pop
dec
dec
jo
shr
inc
add
xor
fcmovbe
mov
push
outsb
jp
and
or
sub
xchg
int3
pop
call
scas
push
out
out
outsl
out
incl
fidivrl
mov
jg
mov
sbb
aaa
loope
in
add
dec
enter
adc
push
sbb
adc
xchg
cmpsb
insb
cs
push
and
xchg
fmul
test
lahf
push
and
adc
mov
ljmp
ja
out
ficoml
pop
in
or
pop
rorb
testl
into
pop
in
in
mov
jmp
das
jecxz
int3
cmpsb
pop
mov
jl
xor
mov
clc
in
jg
rorl
mov
mov
jae
jecxz
mov
nop
cmp
push
mov
cmp
in
insl
fisubl
cld
pop
or
sahf
movsl
add
rcl
mov
or
mov
stos
loope
test
stos
mov
jecxz
dec
pop
addr16
cmp
and
adc
add
enter
push
add
dec
nop
sbb
lods
sbb
push
sub
fists
cli
push
mov
adc
lock
inc
sbb
jmp
out
mov
dec
jb
xlat
cmp
std
push
or
jo
mov
jo
ljmp
nop
pushf
xchg
mov
sahf
or
sub
mov
or
add
sahf
fcmovbe
std
jb
daa
jp
push
mov
shrb
push
push
dec
daa
dec
cli
pushl
ja
sub
enter
inc
subl
mov
xchg
or
pop
movsb
jno
xchg
pop
dec
outsl
sbb
xchg
adc
fbstp
dec
jno
outsb
loope
mov
sub
xchg
jbe
imul
js
add
loope
cmp
push
lahf
push
fdivrs
jns
mov
lret
sbb
cmpl
aaa
movsb
dec
jo
stc
std
sbbb
insb
shrl
mov
or
das
mov
cmp
pop
cli
repnz
fwait
int
xorb
idivl
loopne
call
pop
adc
es
int
movsl
mov
adc
dec
pop
loope
jnp
int
jp
imul
into
jmp
inc
mov
jnp
ret
sahf
jae
xchg
sub
and
int3
sub
and
clc
dec
pop
sbb
and
mov
in
pushl
adc
jns
pop
das
xor
mov
jg
and
push
bound
jl
mov
insl
shll
and
sbb
shrl
sbb
and
dec
add
xchg
js
ljmp
fnstcw
push
cmpsl
cltd
sbb
add
jmp
das
lock
jmp
push
pop
test
dec
aad
mov
std
imul
mov
mov
add
fistpll
xchg
inc
xor
mov
pop
cltd
pop
jmp
pop
call
pop
std
std
out
outsb
cli
mov
ret
jae
dec
test
sbb
and
in
jmp
pushf
mov
pop
cmp
xor
mov
sbb
jne
in
mov
and
das
cld
jmp
add
jmp
das
adc
into
mov
jle
add
lcall
cmp
lea
xchg
push
push
test
in
push
scas
or
push
enter
sti
jmp
push
fisttpl
andl
pop
mov
ret
jae
mov
int
outsb
filds
xchg
orl
push
in
dec
jge
fstpt
sbb
adc
inc
inc
and
aam
push
les
shll
xlat
test
out
incb
shrl
cmpsb
adcb
ret
out
test
arpl
pop
decb
dec
loopne
sbb
xchg
addr16
fucomp
fucomip
ja
aam
dec
loop
into
into
iret
pop
pusha
sar
push
mov
or
pop
xorps
xlat
pop
jl
jge
jmp
inc
cmp
mov
push
pop
jecxz
sub
test
jge
adc
fistps
mov
insl
xchg
movsl
add
inc
imulb
das
adc
cmp
cld
dec
dec
mov
xchg
push
mov
ret
js
adc
cmp
push
mov
cmpsl
pop
hlt
xchg
xor
jg
mov
mov
mov
aam
pop
lret
sub
push
push
jge
inc
popa
pop
pop
add
out
dec
fisttpl
push
fildl
insl
push
test
mov
or
xor
loopne
rcrb
adc
inc
fisubrs
adc
cli
pop
insb
mov
je
sahf
mov
movsl
enter
cli
adc
add
loope
xor
mov
outsl
cmc
pushl
xchg
mov
fidivl
movsb
test
daa
lods
imul
or
aas
xchg
lea
scas
pop
popa
inc
push
mov
push
into
test
call
xor
lcall
cmp
cs
dec
ficompl
xchg
divb
and
jmp
push
jg
aaa
pop
test
bswap
cmp
dec
dec
repz
pushl
hlt
aam
push
ret
fcomps
hlt
sbb
iret
dec
mov
ja
xor
scas
imulb
add
mov
push
outsl
cli
inc
mov
test
xchg
or
mov
inc
or
dec
add
jg
out
pop
stos
aaa
and
jno
in
sbb
clc
and
aam
push
iret
mov
nop
out
ret
popf
xchg
icebp
incb
inc
leavew
sar
repnz
xchg
fwait
mov
enter
mov
dec
push
decl
fisubrs
ljmp
push
fists
push
mov
mov
imul
adc
jbe
clc
fucomip
outsl
nop
gs
cmp
add
imul
cltd
ljmp
xchg
mov
ds
mov
lods
aas
outsb
lock
push
mov
call
mov
jg
and
cs
inc
mov
fsubrs
mov
xchg
fs
lahf
inc
mov
inc
jns
int3
ror
and
notl
out
daa
add
xchg
shrl
dec
or
mov
push
aam
pop
lret
loopne
aam
cld
call
cs
push
dec
paddsb
pushf
adcl
fldl
inc
sarl
in
movsb
aam
mov
das
xchg
add
jl
aam
in
jmp
out
xchg
addr16
ret
jge
jg
rol
dec
sub
xor
jns
pop
cmp
jo
in
mov
xchg
or
aam
lcall
aam
lods
insl
inc
sahf
xor
cmp
inc
repz
or
push
and
pop
mov
adcb
dec
inc
rcl
sbb
imul
call
adc
outsb
mov
mov
dec
mov
popf
lds
ljmp
ljmp
fidivl
movsb
scas
loope
inc
stos
hlt
xchg
mov
aas
in
mov
xchg
ds
pop
or
outsl
jo
fcoml
push
sbbb
push
and
aad
rcl
jl,pn
or
pop
popa
push
out
fdivrs
push
shll
int
fildll
mov
je
sub
les
xor
jo
dec
stc
call
jbe
xchg
fs
pusha
mov
cmp
test
mov
inc
jl
jg
mov
pop
stos
and
xchg
incl
push
push
daa
outsb
out
movsl
mov
imul
xchg
cs
rcl
fucomi
or
dec
xlat
push
push
jnp
stc
lcall
dec
mov
scas
out
iret
and
dec
lret
jg
aaa
cmp
sub
push
mov
adcl
fidivrl
movsb
dec
jmp
ret
pop
mov
mov
ljmp
xor
lcall
vpsubsb
fidivrl
add
pop
sub
pop
pop
lret
dec
push
outsb
sbb
int3
push
jle
fnstsw
mov
adc
push
idivb
call
popa
dec
jle
sbb
add
xor
cmpsb
ljmp
stos
fcmovne
push
jl
jb
out
pop
mov
popa
xor
mulb
jle
sbb
push
sbb
push
fiaddl
inc
push
xlat
imul
sarb
or
pop
fists
mov
fisubrs
jb
mov
outsl
jne
and
and
std
jmp
add
xor
cmp
dec
stos
ror
aaa
fsubr
cld
mov
insb
mov
xchg
mov
and
pop
ret
dec
fiadds
ror
out
repnz
mov
es
rorl
sbb
addr16
in
incl
leave
add
pop
jge
sbb
jmp
dec
xchg
sub
decl
lods
mov
cmp
and
mov
dec
xor
cli
xchg
cs
insl
aas
cld
jbe
jle
cmp
in
in
lds
mov
aaa
test
jmp
mov
adc
mov
pop
push
into
jle
mov
mov
mov
fsubrl
pop
xlat
cmp
pusha
jb
imull
or
mov
inc
pop
lods
es
mov
inc
ss
mov
icebp
loope
xor
outsb
push
xchg
dec
inc
inc
outsl
aaa
jo
lcall
out
ljmp
cli
scas
cld
add
out
sub
push
add
jge
cld
faddp
sbb
mov
push
lret
pop
mov
ljmp
mull
push
rcrl
int
test
mov
ret
pushl
lods
sbb
fcomps
repz
lahf
mov
jl
xchg
stc
dec
in
push
pop
shr
sub
cmp
jle
sahf
add
sahf
test
xchg
test
iret
ljmp
ret
fmuls
sarb
fadds
or
pop
mov
ret
jmp
jne
mov
xlat
pop
outsb
xlat
addb
mov
jge
pop
call
push
aam
xchg
add
cs
test
mov
push
icebp
push
cmp
sti
adc
jae
mov
cld
fldt
cmp
pop
add
push
aam
jg
clc
in
sbb
or
pop
dec
mov
jno
cld
add
xor
int3
outsb
xchg
dec
jle
stos
frstor
mov
mov
cltd
cltd
stos
addr16
call
jle
roll
enter
js
pushf
ljmp
mov
pop
sahf
jmp
scas
into
lds
mov
mov
jb
inc
xchg
add
pop
jmp
push
nop
and
sbb
ds
lock
sub
inc
aas
inc
lea
lret
add
cmp
pushl
xor
cwtl
xor
mov
xor
xor
xor
xor
cld
incl
stos
xor
xor
cwtl
xor
xor
xor
xor
xor
dec
decl
and
jle
lea
fdivs
push
xor
xor
xor
xor
jo
decl
push
xor
xor
xor
xor
xor
xor
xor
mov
mov
les
jmp
xor
pop
ss
ss
sbb
sub
xor
inc
aaa
push
aaa
pop
aaa
outsb
aaa
ljmp
fidivs
icebp
aaa
adc
cmp
cmp
pop
cmp
insb
clc
cmp
cmp
cmp
pop
cmp
mov
add
jmp
pushl
lock
cmc
aaa
jl
cmpb
cmp
cmp
cmp
cmp
xor
cmp
jg
cmp
cmp
cmp
loop
add
cmp
mov
jmp
addr16
cmp
cmp
cmp
cmp
cmp
cmp
xchg
sarb
fisttpl
jne,pt
xchg
ds
ds
xor
cmpsb
aas
mov
in
sub
call
add
aad
loopne
clc
xor
inc
xor
repz
xor
je
mov
inc
pushl
xchg
xor
xor
xor
xor
xor
adc
push
xor
mov
xor
fbstp
or
sbb
xor
add
imul
jmp
ss
ss
lods
ss
mov
sub
idiv
ljmp
or
push
aaa
pop
aaa
xorl
fwait
aaa
mov
aaa
cli
cmp
xlat
jg
cmp
cmp
cmp
arpl
jo
ja
mov
cltd
cmp
cmp
cmp
cmp
cmp
pop
cmp
jge
sahf
cmp
cmp
cmp
cmp
cmp
cmp
inc
cmp
push
ds
or
adc
sbb
and
jne
jnp
mov
mov
aas
fdivrl
mov
pop
rolb
fidivs
loope
xor
sar
sbb
xor
xor
xor
xor
xor
out
mov
jle
shll
push
mov
fidivs
out
ss
sbb
cmp
ret
jmp
mov
mov
cmp
cmp
mov
sarb
fidivrs
ljmp
aaa
decl
cmp
pop
cltd
je
test
mov
push
cmp
fcomip
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
hlt
cmp
cmp
outsl
mov
fnstcw
in
ds
ds
aas
sbb
test
xor
xor
jg
add
or
jno
ja
test
xchg
xor
xor
xor
xor
mov
xor
lret
xor
xor
cmp
xor
mov
xor
ret
ss
aaa
mov
push
cmp
pop
cmp
ja
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
xchg
cmp
out
inc
cmp
cltd
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
mov
xchg
cmp
ds
bound
insb
jge,pt
test
adc
je
jge
ljmp
xchg
lock
add
xor
xor
pusha
xor
jb
cmp
pushl
mov
xor
xor
xor
xor
xor
xor
shll
xor
lahf
xor
jg
jg
xor
xor
sub
inc
xor
jb
xorb
mov
les
mov
lock
sbb
xor
xor
xor
xor
xor
jge
jecxz
outsl
jns
xor
jmp
ss
and
jg
mov
ss
ss
jae
fcomip
fnstenv
loop
sti
aaa
adc
sub
cmp
dec
cmp
jbe
sbb
ljmp
jle
cwtl
cmp
cmp
cmp
or
cmp
cmp
cmp
mov
outsl
cmp
cmpb
cmp
cmp
pushl
fsubrl
cmp
xlat
repnz
cmp
cmp
cmp
cmp
in
lcall
cmp
cmp
cmp
cmp
cmp
dec
cmp
cmpb
cmp
jg
mov
fwait
cmp
cmp
cmp
cmp
cmp
cmp
cld
pop
ret
stos
cmp
cmp
cmp
cmp
cmc
sub
ljmp
sub
mov
sarl
ds
ds
clc
incl
aas
mov
aas
clc
pop
add
add
sub
cmp
xor
shlb
push
out
cs
push
outsl
leave
xor
xor
xor
xor
in
xor
jge
mov
aaa
cltd
aaa
test
inc
cmp
jl
aas
mov
insl
jno
cmp
cmp
add
call
cmp
ret
cmp
mov
cmp
repnz
test
sbb
push
ds
ja
ret
add
icebp
pusha
ds
jg
test
rorb
ds
jnp
ds
mov
sarb
xlat
fidivrs
in
idivb
sti
ds
or
push
aas
adc
push
aas
and
sub
xor
cmp
aas
push
aas
pop
aas
bound
insb
aas
jb
jns
cmpb
fistl
cmpsl
insl
jg
mov
jecxz
aas
fnstcw
fidivrs
in
ljmp
icebp
adc
mov
lock
xor
adc
pop
xor
xor
xor
xor
xor
xor
push
rcr
xor
fisttps
xor
loope
xor
xor
xor
insl
aad
fisubrl
jmp
jno
xor
xor
or
adc
sub
cmp
call
xorb
xor
xor
xor
xor
jg
rcl
xor
pop
xor
and
sub
inc
xor
cwtl
ljmp
jno
jnp
mov
lcall
pop
and
xor
xor
xor
xor
inc
jno
xor
mov
mov
xor
xor
xor
xor
xor
xor
xor
mov
out
xor
xor
xor
dec
and
xor
push
xor
imul
mov
xor
xor
xor
mov
mov
add
adc
pop
pop
outsb
xor
nop
cmp
xor
and
das
ss
pop
push
jecxz
mov
fwait
ss
aaa
push
add
repnz
shrl
jns
ficomps
cmp
inc
cmp
xchg
or
jbe
xchg
cmp
mov
icebp
shrl
jns
mov
mov
cmp
decl
cmp
lahf
mov
cmp
inc
jl
jg
pop
mov
aas
aaa
aas
inc
aas
dec
aas
push
mov
aas
outsb
aas
orl
decl
aas
pushf
aas
mov
mov
aas
iret
aas
cld
mov
sub
aas
push
xor
xor
outsl
push
dec
xor
into
jg
xor
xor
clc
pushl
or
adc
xor
js
test
jg
push
xor
pop
xor
xor
xor
mov
xor
xor
insl
xor
xor
dec
imull
xor
addr16
pop
or
xchg
rolb
adcl
jns
mov
mov
sahf
fcompl
rcrl
stc
out
pop
paddd
popf
fstps
cltd
cmp
adc
out
inc
push
adc
fisttps
jl
sbb
or
add
add
andb
mov
push
loopne
daa
pop
and
pop
js
pop
adc
mov
xor
pusha
and
cmp
inc
aaa
loopne
inc
test
push
loopne,pn
pop
fcoms
in
sub
nop
jmp
jge
jg
add
fs
and
add
js
dec
and
mov
and
jb
lret
cmovbe
repz
daa
jo
andb
insb
adc
adc
inc
add
test
stc
nop
daa
inc
jno
inc
and
inc
and
repnz
pop
add
inc
ds
jl
and
push
add
and
nop
das
addb
sbb
and
pop
push
add
add
adc
stos
sbb
stc
adc
inc
and
add
xchg
cmp
nop
hlt
cld
leave
das
and
jno
adc
enter
and
imul
mov
push
sub
orb
xor
push
nop
cmpsl
jl
and
mov
and
aas
xchg
pop
adc
adc
inc
jle
adc
and
outsl
stc
add
jl,pn
and
push
sbb
jno
inc
cmp
pop
xchg
and
add
out
adc
push
call
pop
adc
adc
add
out
jns
xor
adc
data16
int
in
adc
add
or
xor
adc
and
test
mov
jno
jns
or
xor
aas
das
in
add
add
xor
inc
inc
and
cs
movsb
inc
and
xor
xchg
xchg
adc
xor
pop
add
mov
adc
mov
xchg
adc
xorb
or
repz
mov
xchg
jno
mov
aaa
and
inc
jno
add
fistl
add
cmpl
and
nop
xchg
jl
add
xor
adc
stc
add
ficoml
add
in
xchg
das
addb
inc
and
inc
and
incb
insl
push
pop
mov
mov
or
fdivl
fcomi
movsl
or
jp
pushl
mov
pop
fs
pusha
adc
int3
mulb
and
and
dec
mov
dec
push
je
mov
sub
and
in
sahf
test
adc
pop
jae
movsl
mov
jo
jae
fcoms
cmp
adc
popf
dec
adc
sub
push
cmp
jl
cmp
mov
lods
cld
sub
inc
dec
lock
jp
je
push
out
je
mov
call
dec
pop
mov
push
jne
sbb
popa
mov
fldenv
loopne
ud2
xchg
hlt
cwtl
mov
add
push
jno
inc
push
sub
jo
pop
mov
mov
test
hlt
and
xchg
xor
cmp
inc
add
ja
mov
shll
popa
or
xchg
sbb
fidivs
andl
ds
and
xor
pop
and
fwait
sub
mov
dec
out
sub
mov
subb
add
hlt
imul
lcall
fs
insb
pop
xchg
and
insl
xchg
test
fldenv
subb
pushf
lds
dec
inc
jg
mov
arpl
or
rorb
enter
loop
lcall
je
dec
cmpsb
imul
imul
faddl
pop
out
aad
mov
add
flds
cld
xchg
sbb
imul
lea
addr16
cmc
dec
dec
sub
fnstenv
data16
dec
adc
mov
xchg
call
or
jg
notl
test
lea
push
push
push
mov
jmp
mov
jb
and
xor
in
or
neg
jnp
and
lea
push
jno
dec
sbb
jne
sbb
jb
adc
push
xchg
div
xchg
pop
pop
pop
jno
pop
dec
repnz
lds
lods
ret
cmpb
std
sub
dec
sub
je
xor
jae
popf
cmp
lcall
adc
add
jle
callw
xor
jp
clc
std
sbb
xor
inc
jmp
mov
jmp
inc
cmp
adc
xchg
sbb
icebp
cmpb
std
push
ljmp
lret
and
pop
jmp
push
push
cmp
push
jmp
mov
idivl
fisttps
mov
jl
push
push
lock
dec
xor
push
add
mov
lods
add
das
or
daa
sbb
and
lret
sub
mov
push
aad
push
mov
sub
outsl
outsb
gs
mov
lret
je
gs
inc
pop
ss
aam
aad
insb
xlat
popa
lret
mov
sbb
jne
arpl
lcall
loope
pop
xchg
test
push
js
lock
gs
sti
xor
call
mov
mov
jae
adc
hlt
dec
inc
pop
movsb
sub
mov
cmp
js
gs
leave
lret
adc
lret
nop
int3
adc
push
xchg
xchg
mov
into
jp
rolb
xchg
xchg
rcl
rcll
cmp
and
dec
movb
popa
aas
std
enter
jmp
std
std
mov
lcall
into
jns
std
jnp
xchg
inc
std
js
ja
out
lock
xor
aam
or
loop
int3
add
incl
cs
in
addb
fs
sti
mov
push
pop
dec
mov
inc
sub
push
adc
and
push
jp
dec
cmpsl
insl
dec
push
jge
inc
shll
icebp
es
sbb
mov
cmp
add
push
jl
add
ljmp
push
adc
int3
jge
jmp
sbb
dec
push
decl
decl
push
and
inc
and
or
sub
inc
gs
push
call
add
inc
sbb
pop
dec
inc
mov
add
dec
dec
inc
inc
loopne
xchg
enter
xchg
xchg
xchg
xchg
mov
xchg
xchg
jae
in
mov
and
push
insb
pop
xchg
push
jo
and
mov
pop
cmp
nop
push
xchg
std
xchg
and
pop
xchg
std
xchg
std
xchg
std
movsl
bnd
std
lret
mov
jnp
cs
lret
mov
mov
mov
mov
xor
mov
mov
mov
dec
mov
adc
pop
cmp
add
mov
jmp
inc
inc
push
cmp
shll
andl
pop
sbb
xchg
or
lods
insl
test
rorl
add
pop
cld
std
shlb
dec
in
xor
andl
frstor
repz
hlt
cmc
mov
jmp
push
add
orl
jmp
rorb
pop
and
cli
pop
xchg
fsts
fs
outsl
pop
and
add
je
gs
jns
mov
lcall
mov
jne
arpl
cmpsb
imul
mov
push
imul
cmpsb
imul
inc
adc
imul
insb
outsl
jb
stos
push
iret
shlb
das
jmp
sbb
dec
shr
out
out
call
insb
push
push
xchg
push
add
pop
add
out
enter
add
add
aam
xor
in
add
fnstenv
dec
xor
lret
call
pop
movsb
pop
push
scas
inc
mov
adc
je
push
mov
mov
mov
jge
fdivs
xor
or
add
inc
mov
mov
mov
arpl
imul
icebp
or
out
sbb
lret
push
movsb
xchg
mov
out
into
loop
idivb
add
pop
repnz
sub
mov
adc
aad
adc
hlt
jbe
pop
or
sbb
inc
sbb
jle
dec
repnz
mov
aam
add
fmuls
push
or
in
inc
fidivrl
sbb
add
es
enter
mov
or
in
add
lea
sbb
add
or
mov
fsubs
repz
aaa
dec
mov
stc
adc
stc
push
int
mov
fdivl
ficompl
push
sete
or
pop
adc
into
mov
xor
pop
mov
push
icebp
mov
push
lret
lds
or
adc
cld
mov
pop
pop
or
inc
sbb
pop
push
mul
add
addb
inc
and
push
repnz
rcrl
inc
and
cltd
adc
adc
pushf
adc
stc
inc
ds
adc
mov
repnz
inc
adc
inc
and
and
adc
lds
xchg
inc
and
pop
enter
int
inc
and
add
xchg
dec
push
movsb
add
fldenv
mov
and
jb
push
sbb
xor
inc
mov
adc
lods
data16
mov
mov
add
adc
arpl
or
jae
sub
mov
or
mov
js
loope
mov
push
pop
cwtl
inc
and
int3
and
cmpsb
imul
int3
fisubl
add
mov
in
inc
and
ss
push
lcall
test
imul
inc
shll
mov
insb
shll
fs
jae
imul
cmpsb
imul
mov
add
xor
andb
add
pop
xor
sbb
aaa
cmp
xor
xor
adc
dec
dec
jo
push
inc
xchg
mov
xor
and
adcb
and
in
push
outsl
pop
or
adc
scas
bound
and
outsl
jne
mov
pop
xor
jge
arpl
push
push
js
imul
lods
js
push
insl
repz
dec
push
dec
inc
push
sub
push
push
dec
sub
subl
jne
dec
adc
xchg
or
sub
inc
adc
and
rolb
mov
xchg
movsb
inc
xchg
popa
lcall
mov
add
xchg
and
movsb
add
adc
sub
sub
pusha
adc
lret
mov
inc
movsb
lods
and
mov
inc
pop
inc
notl
adc
daa
call
pop
packsswb
loop
mov
movb
je
inc
int3
sub
sbb
and
adc
add
and
mov
movsb
adc
pushl
movsl
sti
inc
jae
sbb
push
or
es
repnz
sub
adc
push
cmp
cmp
call
lcall
std
push
arpl
mov
push
outsb
jb
and
adc
inc
outsl
js
mov
jecxz
dec
gs
and
xchg
inc
cltd
movsb
xor
or
and
adc
jae
inc
and
mov
sub
or
inc
dec
push
inc
adc
pop
jnp
mov
and
fildll
and
dec
insl
insl
dec
jae
or
jg
fst
shll
add
inc
inc
jmp
add
punpcklbw
mov
popa
add
jns
cmp
dec
es
and
cmp
sbb
aaa
pop
xchg
jge
push
sbb
lcall
dec
sbb
cmpsb
mov
mov
imul
dec
xlat
xor
jge
add
add
add
add
ret
add
addl
mov
mov
or
addl
je
scas
inc
imul
push
push
add
pop
aam
ret
dec
adc
and
or
mov
bound
pop
test
mov
bound
mov
xchg
sub
adc
push
jae
jp
in
adc
jne
or
sbb
sbb
adc
mov
adcb
inc
push
push
or
add
addr16
dec
fadd
fmuls
jae
jo
fisubrs
cmpsb
xchg
outsl
pop
jns
pop
push
mov
or
adc
je
add
data16
loop
xor
imul
not
imul
data16
add
add
lcall
xor
or
lret
insb
sub
add
xor
pop
or
jne
pop
add
test
dec
add
into
aas
dec
mov
jae
jmp
add
pop
or
outsl
add
jb
jae
add
addr16
pop
jecxz
cmc
or
mov
cmp
xor
jecxz
fistpl
inc
and
xor
jae
scas
imul
and
popa
jns
popa
and
int3
arpl
add
addr16
xor
imul
nop
jnp
push
loope
mov
sub
add
scas
pop
out
push
jb
cmp
fnstenv
xchg
in
shll
fildl
xor
insb
popf
xchg
pop
jmp
adc
dec
or
lds
add
cmp
addr16
pop
adc
xlat
mov
imul
sub
push
inc
push
sub
insb
mov
or
daa
dec
dec
xchg
dec
sbb
xlat
outsb
xchg
out
into
mov
daa
jbe
mov
lods
test
pcmpeqw
jae
pop
mov
inc
push
imul
inc
push
mov
and
adc
outsb
push
insb
cmpsl
xchg
out
add
imul
push
es
or
lock
call
std
xor
inc
xor
pusha
xor
lea
stos
xor
sarl
xor
xor
fwait
xor
ljmp
or
leave
lea
xor
xor
xor
xor
ljmp
inc
jns
xor
xor
xor
xor
xorb
decl
sar
xor
js
jg
mov
aaa
xorb
aaa
pushf
aaa
mov
aaa
aaa
cs
inc
cmp
xchg
mov
aam
cmp
into
cmp
cmp
cmpl
fstpt
sbb
cmp
lods
cmp
lahf
cmp
lret
cmp
xchg
mov
cmp
out
or
fistps
push
cmp
dec
xor
jp
xchg
dec
cld
inc
ret
divb
adc
push
xor
jne
jg
test
jp
or
out
xchg
ljmp
xor
in
sub
decl
ss
ss
out
divb
and
aaa
mov
sti
jmp
sub
xor
cmp
cmp
cmp
cmp
daa
and
arpl
cmp
cmp
or
xor
xor
add
mov
cwtl
mov
nop
nop
nop
mov
xchg
and
xchg
add
test
add
or
outsl
pop
inc
jp
arpl
inc
mov
sub
push
nop
mov
fiaddl
ljmp
jae
jne
pop
sbb
inc
outsl
pavgw
cmp
add
add
sub
adc
andl
call
insl
int3
jbe
pop
pop
nop
and
dec
cmpxchg
mov
or
test
test
mov
add
pushf
es
mov
popf
cmp
add
add
dec
rep
dec
stos
cwtl
dec
inc
inc
inc
fs
or
popf
inc
push
add
movsb
mov
mov
lods
in
addl
movsl
pusha
jns
sidtl
jg
or
mov
aaa
aaa
pop
and
inc
pop
and
and
subb
das
xorb
scas
add
add
fmuls
and
cmp
and
fsubrs
push
and
or
xchg
and
dec
add
rorb
or
push
daa
push
mov
add
and
add
add
add
add
incl
add
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
