out
call
in
sub
andb
push
push
push
push
xor
pop
lea
fcomi
stos
push
ljmp
pop
xor
jmp
mov
pop
ja
test
add
loop
mov
dec
gs
in
in
dec
mov
xor
cs
jbe
dec
mov
insb
jmp
mov
push
call
pop
mov
jg
mov
push
push
push
push
push
mov
push
push
call
mov
and
adc
clc
lea
push
add
in
and
call
jbe
adc
adc
pop
movsl
loope
fists
pop
pop
pop
leave
ret
add
andb
sub
add
jae
popa
xchg
lret
insl
mov
idiv
imul
sti
insb
das
fldcw
cld
insb
dec
sub
lock
fcoml
mov
inc
frstor
je
dec
xlat
insb
fwait
in
outsl
loope
jne
jecxz
sbb
inc
dec
out
psubsb
dec
bound
jmp
paddsb
inc
pop
out
js
in
int
out
inc
and
mov
mov
imul
out
mov
fwait
sbb
jnp
adc
add
mov
push
push
adc
repz
xchg
call
add
add
int3
pop
imul
jb
lea
xor
adc
incb
cs
fsubrs
or
cmp
je
mov
push
pop
mov
pop
je
adc
jp
neg
lret
dec
add
cmp
nop
outsl
inc
fwait
std
push
pop
jmp
push
or
cltd
cli
mov
sti
mov
notb
push
xor
lds
and
push
fadd
add
es
mov
inc
addr16
outsl
int
std
push
movsb
pop
adc
jne
pushl
mov
adc
or
add
pop
jns
mov
pop
inc
push
inc
scas
jmp
push
mov
inc
daa
sbb
cld
lea
adc
cmp
mov
insb
dec
aaa
push
repnz
or
mov
call
cmp
in
push
mov
push
jl
or
add
lock
add
clc
fnstenv
mov
pop
sbb
inc
adc
xor
movsb
push
mov
test
je
push
adc
or
and
mov
dec
clc
cmp
sbb
push
push
xchg
gs
add
push
mov
je
lea
or
scas
jl
or
pop
out
inc
ret
jle
es
xor
inc
dec
rclb
or
xchg
mov
mov
mov
lods
jo
push
push
scas
cmp
pop
or
sahf
inc
adcl
mov
insb
lea
mov
dec
call
adcl
xor
adc
push
xlat
inc
xor
inc
mov
or
jno
out
out
xor
mov
add
pop
dec
mov
and
mov
push
repz
adc
into
push
sub
out
icebp
pop
loop
sub
xor
or
ffree
inc
jbe
inc
mov
or
adc
xor
je
jb
dec
sbb
decl
cmc
iret
orb
push
mov
loope
mov
rcrb
cwtl
sub
jno
mov
pushl
adc
test
je
mov
mov
ror
mov
inc
inc
dec
dec
enter
test
jne
push
pop
jmp
lds
rolb
cmp
push
jno
insl
and
cmp
xor
sti
incl
mov
sub
cld
aad
cmp
scas
icebp
inc
and
ljmp
and
cmp
add
daa
push
mov
push
adc
pcmpgtd
adc
subl
out
leave
jp
cmp
lock
sub
inc
mov
outsb
pop
sub
and
or
iret
jne
push
daa
cwtl
pop
adc
push
inc
mov
nop
repnz
pop
jo
add
add
xor
arpl
stc
mov
mov
sub
ds
rolb
mov
clc
loope
xchg
jnp
fbstp
repz
mov
pop
add
xor
cmp
push
ret
push
cmp
push
sahf
mov
sti
push
shl
les
or
sub
dec
lock
dec
aad
xlat
push
xor
fstps
xor
xlat
dec
test
adc
or
pop
sbb
pop
pop
lcall
add
cmp
mov
inc
test
stc
dec
fwait
xchg
in
sub
dec
push
inc
push
sub
fwait
jno
mov
push
xor
js
int3
lock
ljmp
lock
inc
inc
sub
andb
xor
mov
cmp
je
inc
push
jne
mov
mov
xchg
in
mov
mov
inc
inc
test
jne
pop
and
mov
gs
mov
out
dec
fistpll
dec
cmp
jmp
or
jne
jle
mov
test
shl
ficompl
shl
shlb
ret
add
pop
ds
bound
shrd
pop
sub
cld
push
sub
shrb
imul
in
push
add
je
popa
imul
xchg
imul
popw
mov
jmp
or
roll
jg
xchg
or
cltd
test
inc
add
leave
rep
mov
or
add
data16
dec
sysenter
pop
dec
push
add
dec
inc
repz
sbb
je
push
mov
sbb
or
pop
or
enter
xlat
arpl
das
adc
xor
pop
pushf
js
push
add
dec
push
mov
mov
addr16
cld
addr16
call
fistps
out
sbb
bound
sar
cmp
mov
int
in
in
dec
pop
iret
clc
rcl
push
dec
dec
into
call
aad
xchg
out
mov
or
push
fmuls
loop
or
mov
notl
sub
pop
call
push
test
inc
or
add
ret
rclb
clc
int
sub
adc
ja
adc
fstpl
mov
addr16
outsl
outsb
inc
clc
je
pusha
mov
pop
sti
std
ss
int
adc
pop
jg
mov
fstpl
jg
sbb
lock
or
hlt
xlat
xor
cmp
push
subl
shrb
sti
adc
xlat
lcall
jbe
popa
add
or
cmp
sbb
ljmp
mov
push
jns
fwait
or
imul
sbb
push
push
xor
jl
push
jl
sti
dec
iret
xchg
mov
repz
jbe
ret
jp
xchg
mov
ror
push
adc
push
daa
test
test
jmp
dec
rcl
fs
outsl
dec
shll
adc
and
lock
add
add
jno
cmc
pop
test
or
mov
xor
jecxz
pop
sub
cmpsl
test
xor
repz
in
dec
jbe
fs
sub
cmp
sahf
lcall
ret
testl
cmp
mov
lods
adc
pusha
adc
add
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
mov
add
lahf
imul
add
add
lcall
add
jb
lcall
shrl
cmpsb
loopne
add
adc
dec
xlat
je
ss
adc
add
dec
xlat
xor
stos
daa
mov
insl
roll
repnz
out
int3
jne
fldenv
insb
xchg
jbe
xorb
dec
shll
add
aas
std
outsl
arpl
je
insw
addr16
cmp
xor
or
mov
popa
je
pop
gs
gs
outsb
je
cs
bound
push
jb
sti
fsubr
imul
jae
jae
and
xor
jge
dec
inc
inc
adc
pushw
gs
outsl
imul
add
pop
adc
fisttpl
push
js
and
imul
cs
jo
insl
fs
mov
cmp
mov
outsl
add
out
push
xor
mov
test
pop
inc
test
push
dec
inc
dec
dec
pop
cld
push
fldcw
push
push
dec
inc
dec
or
push
nop
les
mov
inc
dec
and
repz
add
add
dec
pop
nop
inc
add
or
insb
mov
or
mov
int
mov
imul
jb
addr16
insl
and
outsb
outsb
outsl
je
bound
jb
outsb
psadbw
imul
insl
outsl
fs
push
sbb
stc
out
psubq
add
add
je
cmc
adc
inc
outsb
mov
adc
addr16
jae
test
sbb
mov
sbb
cmc
mov
fs
cmc
push
pop
cmp
repz
xchg
cmc
adc
imul
cmp
mov
call
loopne
and
add
aaa
stc
fistps
and
sub
add
adc
add
pop
add
add
or
xor
xor
pop
lret
outsb
jnp
push
inc
jbe
dec
pop
or
inc
repnz
or
adc
add
shlb
jae
pop
pusha
es
push
scas
and
mov
mov
adc
xchg
in
sbb
cs
push
push
pop
stc
push
jbe
andb
mov
jae
xor
jl
jle
mov
pusha
jb
insb
outsl
arpl
sti
add
test
xchg
insb
cmp
inc
repz
pop
js
mov
jle
jo
movsl
imul
fnstenv
mov
lods
mov
mov
lcall
shl
lock
mov
push
outsl
sbb
cmp
xor
shll
mov
dec
out
add
aas
lcall
xor
inc
push
imul
imul
shll
push
fs
shll
mov
data16
dec
inc
cs
xchg
fsubrl
je
jne
mov
add
pop
sub
loop
lock
jne
mov
add
xor
cmpsb
lcall
jmp
pop
push
add
and
ss
dec
push
pop
addr16
cmpsb
imul
xchg
je
ja
add
je,pn
shll
or
lret
lock
hlt
and
call
jne
mov
add
mov
xchg
shll
cmp
jle
adcl
gs
pusha
test
inc
stc
sbb
jae
pop
adc
popa
fs
sub
or
dec
push
jb
inc
adc
loop
outsl
ja
dec
dec
dec
inc
push
and
mov
arpl
bound
dec
inc
push
push
inc
mov
inc
pop
dec
lock
outsl
das
pop
push
imul
push
pop
inc
jne
jb
push
pop
pop
shll
outsb
sbb
or
mov
inc
cmp
dec
xchg
dec
scas
or
into
fisubrs
xchg
add
imul
pop
test
add
add
inc
mov
inc
add
inc
into
add
insb
addb
xchg
or
add
cmp
add
pop
sub
shlb
ja
aas
sbb
mov
aas
add
mov
or
rcrl
and
add
inc
leave
test
pop
add
dec
xchg
popf
inc
sbb
inc
jecxz
or
sbb
pop
pop
ret
flds
pop
inc
xchg
inc
pop
test
mov
fwait
stos
pop
mov
fwait
data16
xor
mov
xor
ud2
push
add
jmp
mov
cmpsb
jae
push
mov
je
jne
jb
gs
sbb
xlat
xor
sub
add
incl
push
inc
jb
push
and
ja
or
push
mov
fsubrs
jae
pop
and
addr16
xor
push
inc
sub
pcmpeqb
popl
push
push
sub
inc
and
inc
pop
xlat
rorb
pop
cmc
leave
fwait
rcll
sar
rorb
les
or
add
inc
pop
enter
outsl
insl
insl
fs
popa
fcmovu
mov
repnz
add
cmp
arpl
push
fnstcw
add
pushf
in
xchg
mov
sbb
sbb
imul
mov
mov
add
inc
xor
hlt
inc
iret
jge
dec
dec
mov
jne
jg
imull
inc
dec
xor
outsl
je
ja
jns
cmp
sub
jae
sbb
das
and
jb
add
imul
jmp
add
pop
add
das
cmp
mov
sub
hlt
pop
jmp
addr16
insl
lcall
outsb
imul
adc
jge
lods
adc
insb
jae
jbe
pop
sti
popa
call
sarb
in
clc
ret
cld
mov
aaa
xlat
movsl
mov
or
sub
or
popa
lock
push
out
bound
popa
jne
inc
add
lods
outsl
and
ja
add
call
push
or
lds
mov
or
push
push
add
push
dec
cmp
mov
das
sbb
movl
shr
pop
incb
add
cmp
push
lea
mov
clc
out
pop
push
xor
push
mov
inc
and
sbb
clc
aas
add
and
or
inc
cs
add
or
xor
test
xor
dec
mov
out
or
or
or
ret
fs
mov
clc
test
push
add
mov
add
mov
pop
repnz
sbb
call
mov
addr16
adc
mov
pop
ljmp
js
fstpl
or
jo
stc
shl
call
int
inc
scas
repz
lea
neg
insl
test
push
fisttps
inc
fwait
mov
mov
adc
push
jmp
insl
mov
push
not
call
mov
mov
scas
rcrl
jbe
and
call
addb
inc
push
dec
inc
popa
cmp
daa
inc
aaa
test
fs
mov
sbb
pop
push
xchg
add
inc
jb
jge
pusha
fstpt
imul
jne
pop
push
shrb
out
xlat
arpl
push
mov
stos
inc
add
inc
pop
ja
ljmp
xor
sub
fbstp
out
stc
pop
stc
xchg
cmp
xor
cmp
cmp
xor
xor
xor
fildll
cmp
xor
aaa
pop
xor
xor
sti
jbe
xor
xor
xor
cmp
cmpsb
add
aas
and
cmp
pop
es
pop
sbb
cltd
pop
add
pop
pop
packssdw
push
and
outsl
jg
dec
mov
inc
aaa
push
in
xchg
xchg
test
lods
xor
pop
jb
leave
xor
xor
repz
jns
add
enter
call
pusha
add
pop
sbb
pushf
jbe
cmp
add
in
push
inc
rorl
jg
out
push
in
mov
cli
in
adc
andb
gs
push
inc
loopne
push
mov
outsl
mov
jne
mov
rorl
call
sbb
in
push
push
call
decl
dec
in
add
movb
mov
sub
sub
mov
movb
jle
mov
movb
sti
push
push
pop
sti
mov
les
imul
sbb
outsl
lods
dec
sub
in
or
mov
xor
push
lock
xor
add
push
outsb
aaa
cwtl
push
call
or
add
or
jg
pop
outsl
scas
and
push
call
xor
addr16
push
movzbl
sarl
mov
adc
adc
mov
loopne
or
aas
test
mov
cmp
pop
jl
push
aaa
push
pop
mov
nop
orb
mov
or
and
adc
mov
jo
mov
movsb
add
add
aas
xchg
das
add
mov
repnz
xchg
adc
add
adc
add
adc
xchg
add
adc
jns
mov
pop
cmp
pop
andl
mov
ds
shll
mov
add
pop
xchg
dec
and
xchg
add
jl
and
cld
inc
jle
test
add
add
jmp
push
mov
rolb
addb
xor
add
mov
push
xorl
dec
gs
push
mov
dec
mov
add
cmpw
jne
dec
cmp
add
mov
fwait
jne
mov
enter
cli
or
and
add
adc
inc
adc
adc
and
push
nop
adc
mov
cmc
xor
mov
pop
jne
or
xchg
pushf
pop
push
xor
cmp
je
mov
cmp
je
in
xchg
addr16
divl
adc
pop
cmp
ja
jge
cs
mov
in
in
xor
mov
mov
cmp
ljmp
jb
sub
sub
sub
mov
add
je
decl
incl
xor
insl
pop
outsl
pushl
adc
jmp
aas
push
xor
inc
jmp
or
xchg
mov
add
mov
call
mov
cmp
jg
add
jge
push
push
push
sbb
sarb
push
push
push
and
std
mov
sti
pop
mov
dec
roll
fmull
lahf
rorl
sbb
call
push
or
add
xchg
push
js
lods
dec
or
cmp
xchg
cmp
lock
xchg
aaa
arpl
add
mov
movsb
mov
xchg
enter
pop
mov
fimull
div
rep
jb
jp
dec
insb
scas
jne
out
sarb
mov
arpl
or
push
testl
mov
rolb
cld
fstpt
push
or
sarl
push
mov
add
not
xor
xor
inc
cmp
sbb
test
push
mov
add
add
cmp
xchg
inc
inc
push
adc
adc
call
inc
and
mov
popa
add
mov
mov
mov
pop
addr16
push
sub
adc
cli
xlat
outsl
mov
jb
pop
pop
pop
push
or
call
add
pusha
adc
and
pop
inc
jle
pop
adc
add
inc
ds
nop
mov
js
jl
bswap
and
je
and
jo
and
repnz
test
shll
mov
mov
add
scas
inc
pop
adc
fldl
and
ljmp
add
outsb
and
push
int3
lea
fisubrs
pop
sbb
mov
push
push
mov
mov
jmp
adc
adc
sub
aam
mov
in
add
in
in
icebp
std
lock
mov
sbb
push
xor
mov
aas
add
push
lcall
push
adc
jo
hlt
jmp
mov
sbb
les
cmp
dec
rorb
or
inc
add
or
sub
push
cmc
data16
negl
outsl
xor
ja
and
cli
push
cs
fs
cmp
cld
insb
std
xor
adc
push
shll
rcll
andl
adc
inc
in
clc
ja
cli
in
sti
shrl
pushw
pop
dec
xlat
and
rcrb
push
orl
cmp
jle
pop
pusha
cmp
mov
cmp
ja
call
pop
xor
adc
je
test
cmp
lock
incl
incl
mov
push
in
jne
cmpl
pop
sti
mov
mov
cmp
jne
xor
sub
fdivs
clc
mov
add
popa
fildl
rcrl
jl
inc
cmp
sbb
jp
mov
xchg
pop
not
imul
test
and
fistl
movsb
addb
mov
pop
ja
jne
data16
or
imul
mov
scas
cmovl
mov
stos
or
dec
mov
imul
mov
add
or
jbe
hlt
insl
outsl
lcall
push
xchg
in
jp
je
mov
push
pop
and
test
insl
addr16
cltd
je
in
pslld
jmp
adc
jmp
add
inc
sub
mov
sub
movsl
and
movsb
mov
stc
adc
jg
sbb
loopne
incl
lahf
andb
mov
jmp
xor
inc
push
inc
mov
repnz
push
push
shlb
shlb
repnz
adc
loop
dec
sbb
mov
testb
call
es
xchg
sub
mov
shlb
repnz
nop
lahf
sub
and
loopne
add
push
push
fsubrl
fwait
adc
jmp
out
inc
mov
mov
or
and
outsb
mov
fs
ja
xor
ret
call
pop
mov
cmpb
and
add
jl
cmp
jb
in
std
incl
shrl
or
andl
lods
or
or
inc
sub
out
mov
frstor
adc
add
sbb
dec
adc
inc
jge
incl
push
mov
shr
lea
loopne
cmp
jae
incl
lret
shr
add
stos
adc
fbld
jbe
push
mov
dec
or
aad
fisttps
jmp
mov
jne
adc
dec
insl
movsb
sbb
push
pop
test
mov
mov
add
loop
or
adc
add
mov
mov
sub
xor
pop
jle,pn
in
fs
push
cwtl
mov
pop
push
lods
push
sub
inc
add
dec
xchg
in
aaa
insl
mov
jbe
or
cmp
mov
not
and
push
sub
adc
repz
add
lea
sti
or
shr
mov
add
push
cli
fcmovnu
jle
and
not
and
testl
mov
in
fldl
out
lret
push
js
add
push
fnstsw
or
fisubs
fimull
add
in
pop
aam
pushf
cmp
jo
and
out
xadd
adc
pop
inc
outsb
lods
cld
mov
pop
lock
and
not
cmp
add
repz
mov
shrl
std
jmp
or
add
dec
daa
pop
jg
push
mov
lea
sbb
jle
jne
cli
mov
push
push
jns
fcomip
shlb
push
jb
adc
adcb
gs
sub
xchg
rcr
mov
roll
or
pop
popa
jle
lods
lock
or
mov
adc
test
imul
scas
roll
mov
sti
or
sbbb
testb
push
add
add
or
test
xor
add
sbb
cs
out
adc
jne
les
repz
fdiv
repnz
fcomps
addl
repz
mull
xchg
rcr
das
pusha
adc
fdivl
jbe
pop
scas
testl
sbb
les
subb
add
pop
iret
repnz
add
subl
sub
fcom
add
cmp
fdivrs
pop
dec
inc
imul
xlat
mov
sbb
les
adc
sub
and
xor
or
or
insb
xchg
xchg
jno
std
stos
lods
es
pop
push
fdivrs
push
cld
and
fidivrs
outsb
adc
add
aaa
das
push
mov
cmpsb
add
fmull
pop
mov
xor
push
lret
xchg
or
and
fimuls
ret
popa
adc
add
or
mov
lods
mov
pop
add
and
aad
aam
mov
sbb
push
imul
sbb
lock
imul
add
and
jg
jge
outsb
mov
mov
inc
rclb
push
fadds
hlt
sub
and
clc
jb
xchg
fdivp
push
pop
pop
es
adc
repnz
push
mov
or
movsb
and
and
mov
pusha
and
call
lock
icebp
imull
mov
insb
lods
hlt
pop
adc
call
xlat
or
jnp
lods
mov
test
push
adc
add
insl
arpl
in
pop
and
mov
adc
clc
cmp
clc
in
int3
cmp
ds
cmp
stc
jg
or
add
mov
mov
mov
out
loope
out
lret
outsl
pop
repz
loopne
ret
inc
enter
mov
pop
aaa
or
mov
push
fbstp
inc
fimuls
xchg
xchg
out
aad
adc
cmp
sbb
call
int
inc
loop
shr
or
xlat
in
int
fdivs
test
rcrb
clc
ret
cmc
out
out
cld
cld
not
lcall
flds
outsl
addr16
int
adc
movl
cmpsb
dec
fisttps
sub
adc
or
xor
test
mov
cmp
pusha
sbb
dec
outsb
mov
xor
mov
jae
lret
repz
cli
cs
in
aaa
ret
lds
popa
popf
insl
adc
inc
sti
xor
mov
repnz
ja
fstpt
cmp
std
mov
mov
xchg
in
inc
inc
ljmp
mov
into
es
mov
fimuls
push
outsb
sub
mov
xchg
mov
int3
pop
pusha
dec
mov
idivb
xchg
rcrb
or
mov
out
mov
xchg
or
mov
jle
sub
ret
bnd
mov
add
sbb
lock
daa
mov
jno
mov
fidivl
cmc
test
shrl
out
sub
xor
js
pop
out
mov
in
cmp
or
push
pop
loope
lods
aas
sbb
cmp
rcl
fstps
into
sub
push
in
out
in
mov
ss
sub
jns
in
clc
jl
pop
je
ret
xlat
insb
cmp
xor
in
jnp
push
lods
les
cli
xchg
subl
jp
fstpt
inc
and
stos
rcrb
sbb
push
or
test
call
jl
inc
int3
or
push
xchg
ljmp
inc
push
or
aaa
es
mov
stos
adc
mov
lock
mov
in
hlt
cmp
adc
xor
aas
xchg
in
cmp
cmp
pop
pop
gs
sbb
jns
sub
rcrl
int3
or
push
or
ja
in
and
jge,pt
out
call
int
mov
unpckhps
sbb
and
test
pop
test
dec
mov
jg
call
outsl
push
mov
fninit
push
jp
sbb
int
das
mov
sbb
out
jecxz
je
mov
cmp
mov
ljmp
fdivl
mov
adc
dec
mov
lds
jp
xlat
sbb
mov
mov
xor
out
loopne
outsl
xchg
sbb
xor
aam
rcl
sub
jb
cmp
pslld
ret
repz
mov
insb
pop
rclb
xor
jmp
xor
out
xlat
pop
add
pop
movsb
push
scas
push
insl
mov
lods
rcr
or
or
pop
or
inc
sbbl
push
mov
or
dec
cld
cmpb
cmp
cmp
jl
push
pop
sub
push
push
push
fsubrl
out
jmp
or
mov
js
adc
mov
pop
fidivl
lea
data16
inc
pop
inc
lods
lock
dec
test
nop
iret
pop
pop
mov
mov
into
mov
fcomi
ljmp
add
sbb
cmp
dec
jne
mov
add
dec
call
icebp
jne
shr
lcall
je
sbb
mov
cmp
je
movsbl
add
sub
jne
inc
cmp
jne
cmp
shrl
aad
add
or
pop
adcb
andl
fildl
jp
repz
ret
mov
and
or
stc
stc
roll
push
mov
je
roll
mov
andb
xor
cmpb
jmp
sub
dec
lods
inc
movsb
fmuls
mov
sbb
lock
out
std
xchg
leave
lret
add
stos
pop
pop
push
arpl
dec
sub
jne
push
lea
adc
testb
ret
dec
les
xchg
cmp
xor
push
pop
mov
inc
cld
clc
call
int
rolb
cs
fcoml
pop
repz
push
cld
call
sub
mov
rolb
test
je
cld
dec
shll
mov
sbb
out
or
testb
push
pop
in
dec
push
push
call
lea
ret
fldt
clc
pop
adc
imul
jnp
int3
push
loopne
pop
pushf
jnp
xchg
int3
rolb
aam
call
or
loopne
mov
xlat
adc
dec
imul
mov
out
add
out
repz
jl
gs
das
lock
jo
jo
xor
hlt
gs
mov
mov
xor
pushf
or
push
test
add
xchg
js
call
jbe
adc
lods
shl
mov
imul
fldt
push
cmc
mov
lods
outsb
les
fimuls
ds
inc
push
pop
sti
jle
in
addl
fistpll
adc
push
sub
push
push
ds
push
lret
pop
cs
in
dec
out
push
out
push
lock
sbb
inc
repnz
mov
mov
icebp
xor
and
push
adc
push
adc
jb
es
add
mov
ret
jbe
push
sbb
xor
insl
add
pop
push
push
mov
push
int
loopne
inc
call
sbb
dec
xor
sub
movups
and
pop
stc
clc
xor
push
ss
ret
xchg
je
jnp
adc
popf
lock
das
pusha
test
xor
or
xor
adc
inc
int3
or
out
ret
jle
movhps
mov
push
outsl
je
push
inc
xchg
test
roll
notb
pop
adcb
nop
imul
popf
and
lea
test
dec
jbe
adc
adc
add
jo
jb
pop
sub
sbb
and
or
xchg
lahf
add
xchg
dec
clc
add
pop
mov
ljmp
shlb
insl
push
xorb
and
push
pop
call
push
pop
adc
add
mov
sbb
inc
xchg
mov
fstpt
adc
xlat
pop
mov
mov
jne
icebp
add
mov
repnz
cmpsb
pushw
es
or
push
lea
sti
andw
mov
ret
jg
subl
dec
cld
pop
jb
orl
push
push
pop
push
or
mov
xorb
hlt
pop
add
dec
dec
pop
cmp
jle
fdivl
pop
push
arpl
pop
mov
cmp
push
aam
mov
xlat
inc
jns
in
dec
andb
aad
or
sarb
push
lock
jmp
cwtl
cmp
loope
and
pop
inc
fstpl
sub
int3
dec
sub
sub
aaa
xchg
inc
add
sahf
sbb
pop
and
push
adc
push
and
xor
sub
add
xchg
sbb
cmp
jo
ret
fldcw
and
inc
inc
fstpl
adc
clc
inc
push
cmp
sbb
call
fildll
stos
aam
shl
or
ud2
sbb
mov
push
jo
orb
sbb
test
cli
shlb
notl
jp
inc
call
enter
outsb
or
test
pop
js
lock
dec
xorb
or
inc
add
addr16
outsl
mov
push
mov
jo
push
test
fwait
add
pop
jbe
pop
push
xchg
jo
int3
mov
xor
ss
fcompl
or
enter
mov
jae
data16
das
cmp
fdivrl
or
out
cmp
and
ret
adc
add
xor
andb
sub
jo
insb
add
xchg
in
mov
adc
cmp
or
fdivs
sbb
mov
mov
fidivrs
loopne
add
test
adc
mov
or
mov
mov
gs
pop
lahf
or
in
xchg
or
jne
mov
into
push
xchg
push
cmp
mov
call
jbe
pusha
test
mov
push
cld
sub
adc
pop
mov
xor
xor
sub
fcomps
fadds
sbb
pop
pop
xor
jmp
or
negb
into
xor
push
mov
xor
outsl
mull
mov
pushf
push
mov
pop
sbb
out
mov
cmp
mov
lret
jne
cmpl
lods
std
fstl
jae
cmp
je
jo
push
push
jmp
push
jnp
dec
enter
sarl
mov
fisttps
xchg
in
sbb
pop
adc
pop
pop
call
mov
jmp
call
mov
test
mov
cmpb
pavgb
ja
or
mov
sbbl
xchg
or
push
sub
pop
dec
mov
lret
push
xchg
push
mov
test
cmp
mov
pop
mov
push
mov
stos
or
scas
jbe
jo
push
mov
ss
insb
jg
leave
lods
lods
push
jb
or
push
mov
mov
pop
cs
cmp
mov
in
lcall
mov
int
jp
add
fsts
rcl
mov
cs
cmp
jo
insb
aam
aad
fnstenv
xlat
pop
fsubrs
and
fidivl
gs
push
dec
test
mov
mov
loop
jecxz
pop
in
push
out
dec
pop
insb
fwait
in
inc
call
jle
xor
shll
jo
imul
sub
inc
outsb
mov
ret
rol
add
xor
cmpsb
pop
mov
leave
lret
xchg
hlt
xchg
push
xchg
xchg
mov
push
cwtl
cltd
lcall
pop
pushf
adc
sub
xchg
mov
mov
fwait
insl
cmpsb
xor
test
push
test
xor
cmc
div
clc
ds
hlt
cli
or
xchg
or
lea
xor
or
repnz
aad
cmpsb
jne
pop
xor
and
adc
rolb
shl
lret
pop
mov
cs
imul
out
xchg
insb
xchg
dec
ds
les
pop
jb
lcall
pop
dec
rcrb
mov
xchg
xchg
fs
dec
push
and
cmc
adc
mov
test
orl
jg
cmc
shrb
clc
addl
mov
push
inc
jge
sti
cmp
adc
cs
shl
and
imul
shll
pop
cli
inc
and
jb
ret
sbb
push
call
inc
sub
mov
fldt
sbb
les
sbb
sbb
test
jmp
or
aas
mov
nop
repnz
roll
rcl
or
jge
pop
andb
mov
and
addl
daa
mov
ljmp
jb
insl
fld1
mov
sbb
mov
fdivrs
or
outsb
and
or
push
daa
lock
insb
pop
and
dec
sarb
sub
shll
js
lds
int3
or
cmp
adcb
daa
sbb
pop
mov
bswap
pop
xorl
invd
fdivl
adc
inc
add
adc
or
and
addr16
imul
push
jg
push
mov
jno
aad
es
or
or
or
shlb
or
andb
lock
addb
insl
push
adc
inc
mov
jno
mov
dec
int
pop
push
mov
ficoms
hlt
lret
adc
neg
and
mov
scas
cmp
pcmpeqw
sbb
outsb
jl
lods
rcr
pusha
mov
add
int
push
cmp
add
or
jo
nop
les
cmpl
aaa
into
push
jne
push
sub
in
pop
in
addr16
in
and
in
mov
lds
adc
int3
and
sbb
and
cmp
mov
xchg
cmp
inc
inc
mov
mov
mov
cmp
test
cmpb
mov
andl
or
call
mov
add
int3
inc
incl
sbb
or
pop
iret
add
les
add
loope
adc
loope
insb
jmp
and
imul
jmp
dec
outsl
scas
cltd
lea
mov
sub
cld
fdivrl
jle
ficoms
and
data16
jle
call
fcoml
inc
loopne
sti
xlat
fidivl
mov
mov
jnp
dec
mov
ret
cmp
shll
xchg
xchg
int
mov
dec
int
jp
imul
insb
insb
popa
push
in
xor
dec
push
imul
outsb
ja
fildl
fstpl
jae
fbstp
xor
xchg
sbb
cli
mov
cmpsb
imul
decb
xor
mov
mov
mov
mov
mov
imul
xor
fs
pop
xor
in
mov
pop
pop
lret
mov
lret
dec
popa
js
push
sub
xor
pop
inc
or
icebp
repnz
nop
loopne
jo
mov
fsubl
sahf
jecxz
cwtl
mov
addr16
pushf
and
or
push
fsubrl
mov
shll
and
and
dec
and
add
or
sbb
jno
xchg
add
jmp
push
pop
or
sub
out
sbb
dec
gs
push
jb
xor
shrl
je
imul
fs
lock
cmpsb
pop
icebp
bnd
xor
ss
shrl
fs
insb
je
shlb
cmp
dec
push
jge
push
add
push
stc
imul
push
or
fsubrl
cs
loopne
jb
push
fsubrl
sbb
cmpsl
sub
aam
les
int3
add
loope
xor
sub
pop
add
mov
rorl
adc
ss
rcl
cmp
das
cmp
push
push
dec
ret
and
addb
pusha
and
fsubrp
mov
push
or
in
mov
in
xchg
pusha
fnstcw
xor
xchg
clc
lock
jge
xorl
and
jl
cmp
fwait
xlat
mov
in
mov
jns
repnz
inc
adc
hlt
in
push
andb
rcr
dec
mov
sub
push
pop
push
pusha
not
adc
dec
in
push
or
popf
test
and
je
shr
or
add
in
fstpl
es
adc
xor
fnstenv
movsb
or
sar
mov
pop
idivb
stc
das
sbb
loop
push
mov
push
push
ds
mov
fwait
pushf
nop
jo
mov
push
xor
push
adc
jmp
cmp
jo
les
mov
jmp
xor
mov
adc
sub
test
xchg
add
cmp
xchg
adc
outsl
fisubrl
cli
mov
xor
bts
pushw
cld
incl
stc
stc
sub
pushf
and
call
mov
mov
cmp
xor
ficoms
sub
sub
jmp
cld
fistps
inc
cld
clc
jmp
sarb
loop
and
push
stos
sub
mov
aas
stos
mov
outsb
adc
gs
testl
jno
call
xorb
and
divb
push
pop
mov
shll
add
mov
cltd
idiv
mov
cli
jne
ret
divl
adc
add
enter
add
push
cld
call
or
mov
scas
jecxz
out
or
or
hlt
push
jecxz
dec
or
cmc
cld
lret
outsb
mov
idivl
pop
or
cmp
xchg
xlat
push
and
fyl2xp1
fucomi
ljmp
loope
shl
in
std
pop
shl
sar
pop
lahf
mov
add
fistpll
loopne
popf
jnp
rorb
rcrl
mov
cwtl
pop
sar
add
call
insl
cmp
or
out
or
rep
ja
pop
xor
lods
int
es
enter
ret
fisttpl
testb
dec
add
and
shr
push
lea
loope
inc
mov
test
bt
leave
add
cmpsb
lds
popa
ret
jg
jmp
clc
cmp
push
clc
fucomip
push
mov
mov
sbb
jmp
sti
and
push
sbb
or
mov
and
cmp
outsl
mov
sub
and
aas
jae
gs
decb
aas
cmp
pop
cmp
jo
adc
mov
mov
out
stos
inc
nop
mov
lods
cmpsl
adc
inc
cmp
adc
fsubs
adc
sbb
popf
or
test
sti
mov
call
sub
addb
into
imul
inc
sub
jnp
jne
ds
sub
nop
inc
cld
inc
add
xor
sub
adc
sahf
popa
push
jne
pop
xchg
cmp
ljmp
in
out
insb
ds
shll
es
xor
sarl
bound
shlb
stos
cli
cs
jmp
outsb
push
pushl
xchg
mov
icebp
mov
shld
aaa
add
setae
lea
insl
fdivrl
mov
xor
sub
aad
cmc
or
clc
in
ja
mov
and
shrd
jmp
ss
in
rcrb
adc
and
in
scas
call
dec
mov
jmp
ja
mov
jno
sub
insb
imul
out
and
popf
mov
push
pushf
cwtl
bswap
mov
or
fdivrl
pop
ljmp
lea
pusha
dec
jbe
inc
cmp
sbb
mov
mov
leave
mov
or
in
outsl
inc
gs
cmc
ror
push
jmp
pushf
sti
out
mov
and
test
sbbl
sbbb
sub
ficompl
xor
cli
add
repnz
sub
cmc
aas
push
fnstsw
jmp
lret
lret
movsl
shl
fdivs
ret
es
insl
mov
add
or
ret
mov
sar
pop
xor
push
jns
lahf
inc
ret
hlt
push
pop
pusha
rcr
jmp
hlt
in
ja
pop
repnz
xor
pop
shl
mov
out
pusha
cmp
lds
pusha
shl
daa
cmp
test
jae
push
cmp
out
pushf
loope
add
outsb
mov
and
inc
push
push
push
insb
sub
adc
sbb
call
loop
sbb
std
inc
data16
arpl
dec
fs
and
mov
adc
and
inc
mov
and
aaa
pusha
xchg
push
out
lret
push
rdtsc
mov
xchg
add
push
sti
mov
dec
mov
sub
sar
push
pushl
pushl
fwait
imul
movsl
sbb
or
nop
cmpsb
adc
xor
repz
lock
out
shlb
sbb
loope
ljmp
shr
dec
int3
pushf
test
unpckhps
pop
push
mov
cmp
inc
sub
cmp
inc
mov
add
xlat
jmp
ret
mov
aaa
xor
popf
les
bound
cmp
in
sti
sub
cmp
or
jl
cmp
cmp
jmp
fcoms
or
adc
inc
dec
loope
rcrl
push
cmp
xor
xchg
icebp
mov
jmp
pop
stos
aaa
push
sarb
pop
mov
jae
repz
pop
sbb
fcmovu
sets
aaa
adc
mov
dec
mov
or
cmp
nop
dec
adc
orb
or
outsl
rclb
cmpsb
mov
add
in
rcrb
sbb
neg
jle
pop
cmp
data16
jmp
ja
mov
adc
and
sbb
in
sbb
pop
sbb
add
popf
push
out
and
and
push
mov
push
sbb
adc
mov
adc
lea
loop
cmp
jg
mulb
adc
cmp
sbb
in
inc
cld
jmp
push
adc
sahf
add
xchg
cmp
push
or
adc
rolb
dec
xchg
ds
xor
push
or
push
and
adc
pop
add
cmp
lods
push
mov
lret
hlt
hlt
icebp
into
cmpl
popf
or
inc
inc
repnz
clc
ret
add
insb
outsb
mov
pusha
sbb
push
adc
movl
or
mov
xor
sub
pop
rcrb
ss
dec
xor
adc
mov
xchg
lock
jmp
jmp
jle,pt
and
add
movsb
mov
adc
cmpb
xchg
adc
loope
jae
mov
pusha
iret
ljmp
and
stos
xchg
lcall
and
push
push
xor
leave
push
inc
lods
mov
push
xor
push
xchg
adc
mov
lcall
inc
dec
lods
pop
lods
int3
sbb
fsts
movsb
aas
pushf
icebp
xchg
cmp
cmpsb
leave
pop
in
dec
dec
and
jle
int
or
or
pop
pop
push
subb
inc
add
push
out
sub
popa
aas
push
call
rcr
or
cmc
call
or
popa
inc
mov
mov
and
push
mov
cmpsl
push
int
scas
sbb
push
pop
and
sub
aas
mov
or
xor
mov
add
push
sar
sbb
std
out
sbb
arpl
cmp
lods
sbb
inc
sti
sbb
pushf
xor
daa
push
cltd
add
and
jnp
push
sub
and
cmpsb
or
fwait
pop
jae
xor
test
xor
hlt
mov
pop
xchg
outsw
outsb
je
pop
dec
insl
push
push
sbb
insb
in
cmp
adcb
and
or
or
sbb
jne
adc
mov
cvttps2pi
loopne
jnp
cli
mov
cmp
cmpsl
cmp
jg
ljmp
outsb
ds
inc
inc
insl
addr16
xor
pop
lcall
cs
pop
lcall
jb
and
add
pop
lret
or
inc
dec
pop
fcompl
dec
mov
mov
test
jns
push
dec
pop
bound
adc
add
je
add
jmp
push
ficoml
xor
mov
outsl
addr16
push
add
jo
pop
ret
les
leave
call
and
lret
push
inc
and
push
adc
push
rolb
and
ja
or
adc
sti
mov
lds
stc
mov
fstl
mov
test
push
jae
xchg
jbe
push
xlat
and
push
inc
sbb
fiadds
jb
cmp
je
xorl
push
pop
pop
hlt
pusha
lahf
addb
call
aas
fcoms
fdivrs
fidivs
dec
push
inc
fnstsw
arpl
cmp
imull
and
push
mov
aaa
or
mov
mov
xlat
and
fstps
je
add
sahf
mov
mov
push
add
push
pop
into
inc
outsb
add
in
xchg
add
mov
adc
jp
ljmp
es
cmp
vpavgb
push
popf
les
mov
lret
add
add
lret
mov
lret
rcl
fcomp
in
add
loopne
xchg
lds
add
int3
and
adc
imul
mov
add
loopne
out
push
adc
pop
sub
xor
push
adc
or
push
pop
adc
pop
scas
xchg
adc
lahf
stos
repz
mov
jl
and
pop
les
pop
inc
lock
adc
inc
jg
mov
js
or
add
cltd
mov
jl
mov
divl
imul
pop
mov
xor
add
mov
xlat
inc
and
xor
outsb
dec
lock
fnsave
mov
push
ret
push
xor
add
sub
push
js
flds
push
xor
push
call
gs
dec
dec
pushf
dec
inc
imul
mov
nop
andb
mov
lret
adc
jne
cs
sub
fs
insb
mov
sub
push
pusha
movsl
js
outsb
je
lcall
mov
fnstenv
mov
push
movsl
cmpsb
pop
cmpsl
push
gs
jbe
jb
inc
stos
stos
push
lods
lods
pop
xchg
or
dec
je
jo
pop
xchg
gs
jo
outsb
dec
and
pop
xchg
push
gs
lds
jbe
fwait
shrb
roll
aam
int
imul
fs
xlat
xor
xchg
gs
xor
popa
pushf
js
xchg
xchg
xchg
mov
ss
xchg
xchg
xchg
inc
push
cwtl
js
lret
mov
push
lcall
sub
add
inc
outsb
cmpsb
fwait
sub
push
gs
in
pop
call
out
mov
pop
mov
lcall
mov
mov
lcall
mov
xor
scas
mov
mov
mov
mov
je
xor
xor
jne
cmp
or
and
inc
es
std
std
adc
push
fadd
lods
and
adc
ljmp
push
cmp
push
pop
sub
enter
rep
cmp
test
insl
inc
mov
inc
stc
xchg
out
jp
cwtl
das
mov
in
je
push
negl
pop
adc
adc
imul
shrb
jp
dec
je
loope
sti
xchg
imul
or
movsb
xor
sahf
data16
repz
adc
negb
or
sbb
pop
sub
mov
pop
push
pop
scas
ret
popa
or
mov
add
aam
es
push
jmp
dec
push
mov
push
dec
xchg
lret
sarb
or
push
aas
inc
out
in
push
lsl
decb
incb
and
or
pop
outsb
rcrb
adc
loopne
aas
push
xor
stos
inc
in
pushf
fiaddl
clc
push
ja
fstpl
or
les
cmc
mov
and
mov
sahf
popa
push
jp
dec
loopne
and
repz
sahf
je
fcmovnbe
or
inc
iret
fdivr
push
stos
lock
outsl
pop
lret
sbb
pop
jae
je
je
inc
mov
out
and
xlat
out
push
xor
sbb
fstps
sub
stc
mov
clc
bound
xor
pushf
xor
jmp
jle
and
mov
subl
push
mov
push
popf
cli
add
aas
sbb
mov
xorl
in
xchg
loopne
add
in
aam
jo
and
mov
xlat
jae
xor
cmpsb
xor
pop
xchg
movsl
pusha
aas
push
shll
imul
cmp
lcall
andb
and
xor
incl
jle
or
xchg
adc
xor
js
pop
incb
pop
xchg
jb
mov
sbb
movsb
or
jecxz
pop
cmp
push
mov
push
inc
inc
imul
or
fcomps
incl
cwtl
xor
faddl
inc
rorl
pop
je
xchg
and
insl
je
pop
or
stc
xchg
adc
adc
add
xchg
mov
mov
pcmpeqb
sbb
fildl
mov
adc
or
es
jle
adc
adc
sub
pusha
sahf
out
cmp
sub
outsl
lock
jmp
aas
adc
add
xor
pop
out
sbb
adc
in
in
pop
push
inc
xor
fisubrl
ds
aas
imul
gs
xchg
arpl
outsb
xchg
gs
xchg
je
jae
insb
outsl
mov
fs
arpl
adc
jnp
push
lret
pop
mov
cwtl
xchg
std
or
pop
jne
scas
call
arpl
push
mov
jbe
add
cs
jle
leave
and
leave
or
sahf
mov
sbb
sbbb
repnz
mov
push
pop
ret
lcall
cmp
adc
mov
xor
push
mov
xchg
mov
add
packssdw
xchg
mov
pop
insb
add
mov
push
push
fdiv
in
cmpsb
insl
push
mov
cli
stos
push
int
and
in
push
mov
mov
push
aas
sbb
push
push
cwtl
add
lret
jge
xor
cmp
inc
inc
and
xor
and
in
int3
xchg
mov
cmp
call
aad
inc
or
jb
test
or
orl
add
sbb
or
arpl
outsb
cmp
fisubs
gs
shll
imul
es
and
or
mov
fstpl
rol
ret
mov
cmp
js
mov
enter
shrl
lret
int
xor
rcrl
iret
rcl
shlb
popa
arpl
shll
imul
dec
shll
je
outsl
mov
push
dec
jns
cmpsl
push
call
pop
pop
jae
inc
loopne
pop
sub
pop
data16
imul
inc
add
add
mov
or
int3
jmp
or
and
repnz
adc
sahf
dec
nop
movsb
std
fcoms
push
adcb
sahf
mov
and
jbe
push
mov
movsb
inc
mov
ret
xlat
dec
repnz
sbb
cli
popf
fdivrl
int3
or
add
js
in
inc
arpl
fdivrl
mov
add
jne
jae
stos
shlb
or
je
jb
imul
cli
xchg
ret
lcall
mov
adc
and
add
daa
pop
mov
mov
xchg
imull
and
xchg
fmull
dec
mov
enter
xchg
mov
aam
cmp
dec
inc
fcoml
loop
cmp
sub
sti
mov
add
mov
or
rcr
aam
push
incl
je
push
mov
pusha
xor
jle
and
jnp
pusha
mov
jl
pop
call
popa
dec
adcl
rol
out
inc
sbb
add
jmp
fstpt
mov
mov
cmp
push
movl
jge
outsl
push
pop
and
sbb
push
popf
cmp
inc
inc
in
test
mov
loope
xor
loopne
sub
aas
cmp
push
in
and
imul
insl
es
and
or
aad
cs
in
fs
push
jo
gs
mov
sahf
orb
fs
std
jg
mull
cmp
in
mov
jecxz
insb
out
jns
imul
add
aam
push
fisubrl
js
cld
mov
cmovs
out
mov
dec
push
add
dec
xchg
ret
push
jo
push
aad
sbb
mov
cmp
xchg
and
pop
mov
cmp
cs
mov
cmp
xchg
inc
jae
aas
dec
lea
mov
add
js
loopne
xchg
adc
punpckldq
rolb
loope
add
jmp
mov
jne
aas
and
xchg
addr16
push
es
sub
or
testb
inc
jmp
gs
imul
pop
pop
add
nop
pop
enter
inc
aam
addr16
push
cmp
mov
sbb
data16
add
or
or
arpl
rcr
push
cmc
nop
out
adc
dec
jg
and
or
mov
rcrl
jl
push
out
xor
std
repnz
add
dec
icebp
andb
out
pop
xor
ja
mov
mov
sti
jg
inc
jnp
out
outsl
pop
outsl
nop
push
clc
pop
mov
dec
cmp
xor
or
mov
inc
lea
jmp
and
cs
xor
mov
and
sbb
adc
pop
or
pop
gs
decl
leave
jle
mov
or
jge
adc
push
add
mov
push
jo
inc
inc
insb
data16
rorb
mov
inc
xor
push
scas
cltd
scas
test
sub
dec
ss
sub
adc
mov
sbb
pop
pop
xor
call
cmp
out
test
fcoms
ret
movsl
pop
pusha
cmp
addr16
jecxz
test
inc
add
jo
orb
mov
cwtl
out
xchg
cltd
cmp
and
sti
inc
or
scas
jge
js
adc
mov
shl
test
pop
and
push
movsb
imul
and
fsubrl
xchg
or
add
jo
divl
sahf
and
dec
jne
sbb
out
mov
sbb
or
push
unpckhps
adc
cmp
pop
mov
imul
std
cmpsl
popf
cmp
insb
and
mov
std
pop
sti
pop
jbe
das
pop
jbe
ss
rol
stc
xor
outsb
scas
imul
push
pop
pop
and
dec
in
add
mov
insl
daa
inc
cmp
jb
call
loop
daa
jb
cmp
xchg
or
andl
jb
and
adc
iret
out
incb
repz
jg
and
lods
mov
dec
fistl
out
jns
and
fsubl
enter
addl
jae
ror
mov
test
xor
icebp
pop
mov
pusha
andb
aad
test
push
div
fistpl
jp
das
push
push
mov
xor
cld
sbb
inc
inc
cmp
sbb
mov
sarb
sbb
cmp
jbe
pop
and
push
es
dec
mov
insl
push
mov
or
fnsave
xor
xchg
adc
jmp
repz
push
hlt
push
push
lock
pop
loopne
sbb
add
roll
push
outsb
inc
inc
out
fcoms
cmp
jb
pop
adc
movb
mov
movsl
ljmp
lcall
jae
pop
cmpsb
imul
mov
xor
jae
mov
jb
arpl
dec
shll
outsl
insl
jne
cs
adc
adc
lock
dec
loopne
pop
mov
sbb
push
xchg
sub
aam
sahf
popf
jp
loop
imulb
add
mov
arpl
fcompl
pusha
rcll
fiadds
and
or
and
push
inc
adc
sub
mov
dec
jb
nop
add
add
add
pop
dec
int
adcl
push
mov
nop
dec
and
cs
mov
dec
lds
or
adc
cs
jne
push
push
push
int3
pop
jge
pop
adc
cld
jo
sbb
sbb
clc
xor
pop
jo
and
pop
enter
push
loopne
bswap
pusha
mov
rclb
mov
jnp
and
mov
xchg
shl
adc
add
jb
or
orl
fisttpll
clc
add
xor
sbb
lret
dec
jo
xor
shrl
jo
jo
shll
insb
mov
pop
inc
mov
popa
dec
push
daa
lret
jo
jb
jae
sbb
xor
outsw
xchg
xlat
pop
outsl
fstp
dec
pop
and
add
jne
movzbl
push
sbb
xchg
xchg
xchg
mov
adcl
int
test
push
dec
inc
orl
xchg
enter
sbb
jo
int3
xor
aad
sub
or
and
xchg
adc
push
shlb
or
je
je
imul
xor
mov
orb
nop
xor
bound
push
xchg
dec
insb
lea
cmp
aaa
jb
subl
test
cmp
or
mov
lret
dec
mov
dec
mov
sub
js
mov
decb
cmp
incl
mov
sub
adc
mov
mov
ret
je
xor
add
or
and
outsl
outsb
and
dec
inc
pop
pusha
pop
andb
and
dec
test
sahf
inc
jno
push
add
rorb
and
or
or
push
push
push
push
ja
push
outsl
data16
insb
les
jb
lret
mov
lret
pop
dec
imul
daa
outsl
es
lret
and
outsl
fidivl
push
shll
pop
push
sbb
mov
xorl
out
sub
ror
push
popa
jmp
pop
mov
lret
mov
push
dec
inc
popa
sbb
push
push
cmp
jo
rorb
xlat
cmpsl
mov
orb
in
mov
decl
or
jmp
test
mov
fldt
into
insb
mov
xchg
adc
adc
or
mov
pop
sbb
push
int
or
outsb
jne
ror
pop
mov
and
mov
dec
repz
fdivs
push
xchg
fbld
lcall
xchg
dec
dec
mov
decl
lea
push
jle
push
push
ret
push
add
inc
mov
aaa
xor
dec
aaa
inc
cmp
pop
add
mov
stos
sarb
or
pop
pop
shr
mov
ljmp
addr16
loope
sub
clc
adc
jecxz
xor
cld
into
out
sub
in
out
out
cld
or
andl
std
xor
add
jae
mov
add
dec
add
enter
std
or
cs
popf
lea
cmp
push
popa
and
int
sub
jb
jne
leave
shrb
daa
pop
sub
leave
leave
leave
fldcw
jo
sub
repnz
dec
inc
addr16
mov
push
imul
dec
ja
sbb
outsl
inc
inc
dec
ja
je
insl
dec
dec
lret
fstpt
stos
jae
push
bound
mov
mov
mov
daa
daa
dec
xor
gs
in
adc
lea
jbe
mov
orb
and
xchg
addr16
mov
mov
mov
pusha
daa
daa
daa
mov
push
fisubrl
jecxz
dec
dec
into
into
mov
scas
mov
jbe
cmpsb
cmp
rcr
leave
rcrb
ret
repnz
inc
jae
xor
loopne
loope
into
into
and
std
nop
in
in
xor
into
jmp
fucom
and
xor
cmp
jmp
in
cmp
cmp
in
test
out
lock
xchg
icebp
sbb
sbb
or
outsl
push
les
les
pusha
add
dec
dec
dec
xlat
jns
sbb
hlt
fldcw
xor
dec
pop
inc
arpl
and
dec
ja
and
jb
mov
daa
sub
mov
sub
push
inc
inc
leave
fxch
shlb
inc
cmp
leave
inc
inc
inc
pop
cmp
in
pusha
cmp
leave
rcrb
arpl
jb
gs
pushw
addr16
push
les
push
mov
xchg
int3
insb
outsb
insl
decb
push
adcb
adc
cmp
or
fistpll
sbb
and
les
imul
xor
movsb
movsl
cmpsb
cmpsl
jno
mov
ds
mov
popf
or
dec
ret
sti
les
rorb
mov
daa
leave
lret
int3
daa
addr16
xor
mov
shl
add
daa
shr
adc
push
loope
mov
daa
loop
jecxz
jae
jb
jbe
push
out
call
jmp
in
fmul
leave
ljmp
in
push
dec
addr16
inc
mov
pop
jmp
decl
decl
stc
inc
nop
and
call
das
incl
cmp
incl
insl
idivl
pop
mov
and
dec
idiv
insl
sub
cmp
pop
sub
sub
sbb
adc
ja
jge
jno
into
pop
popf
sti
pushf
sti
jg
out
mov
es
pop
pop
pop
fs
pop
mov
xchg
out
jb
pusha
pop
into
dec
xchg
popaw
dec
bound
fstps
iret
into
sub
jmpw
addr16
int
leave
leave
push
push
rcrb
fildll
fs
fxch
outsl
jo
jno
jb
xchg
movsl
jae
cltd
je
jne
out
in
test
ja
js
dec
jns
fs
jnp
jns
cmp
cmp
sarl
xor
mov
addb
xor
test
cmc
lahf
addr16
ds
adc
hlt
xor
repnz
testl
mov
mov
cmp
lahf
adc
clc
movsb
int3
and
jmp
inc
xchg
lcall
push
pop
mov
add
pop
inc
daa
in
bnd
dec
mov
cld
mov
sbb
push
sbb
scas
mov
es
icebp
repnz
bound
or
fisttpl
dec
push
mov
pop
pop
add
mov
pop
xchg
test
xchg
mov
mov
cmp
adc
movaps
push
cmpl
shll
iret
insl
sbb
sti
xchg
or
and
mov
dec
push
fs
jne
sub
mov
fs
insb
xchg
mov
inc
test
ja
mov
arpl
dec
rorl
test
in
sub
xor
jmp
jae
fwait
sub
jne
gs
lcall
imul
xor
leave
test
jo
lret
add
into
iret
or
insb
jne
enter
movsb
imul
dec
les
jb
addr16
mov
lret
jb
insl
dec
popa
mov
dec
shlb
gs
es
cs
push
xchg
int
pop
shrb
cmc
jl
mov
cmpsb
imul
mov
cmpsb
imul
cmpsb
imul
sahf
lahf
xor
mov
loope
mov
in
xor
iret
add
adc
jns
repz
mulb
nop
out
xchg
stc
push
nop
clc
hlt
popa
repz
cmp
sbbl
push
mov
arpl
fdivrl
sarb
fwait
insb
insb
xor
les
push
jne
leave
adc
mov
test
movsl
lock
or
jnp
cmp
xchg
pop
inc
cmp
or
cltd
popf
jne
popf
mov
insb
push
sbb
push
stos
xchg
pop
pusha
jmp
inc
jnp
cmp
lock
or
rcll
lea
jb
xchg
or
aad
adc
jl
push
push
dec
in
sbb
mov
pop
dec
jge
movsb
xchg
pop
xor
pop
jns
xchg
mov
cld
dec
sub
hlt
cld
lods
mov
cmp
icebp
sti
movsl
lock
mov
xchg
push
xchg
dec
int
setno
adc
insb
outsl
dec
lea
push
leave
in
adc
dec
das
fs
gs
mov
xchg
inc
xchg
out
xchg
mov
jb
es
lods
adc
mov
sahf
or
out
push
add
and
push
push
sbb
fcompp
jp
inc
pop
in
adc
es
pop
push
push
lods
xchg
sub
xchg
adc
pop
ret
outsb
xor
xor
test
shrl
mov
sbb
jb
subb
gs
xor
sbb
dec
aam
adc
mov
add
je
leave
mov
inc
outsl
insb
jb
fwait
sub
cwtl
push
popa
insl
jecxz
inc
mov
xchg
inc
rclb
push
mov
add
rcrb
and
jns
je
pop
xchg
gs
pop
imul
test
sub
jno
leave
popa
cmp
mov
loopne
cli
pusha
idivl
dec
daa
adc
pop
xor
sti
add
jl
and
test
sahf
sub
call
cmpsb
pop
xchg
lret
xchg
arpl
mov
push
movsl
sbb
push
xchg
dec
lret
mov
cmp
fsubs
inc
movb
fcmovu
cld
faddl
push
imul
jns
fs
dec
outsl
jb
jae
fs
inc
or
imul
mov
sub
sub
cld
pop
push
xor
pop
rolb
into
lea
out
enter
movb
xchg
out
imul
xor
inc
dec
lods
push
xor
ss
pushf
movsl
or
or
js
imul
jmpw
data16
inc
gs
cmovne
inc
pop
lcall
insl
lret
fstpt
lret
sub
and
out
in
into
arpl
rcl
add
lcall
enter
sbb
sbb
sbb
xchg
mov
cmp
sbb
sbb
push
pop
imul
push
push
insl
ja
fistps
popa
mov
push
dec
ja
mov
jo
jno
jns
into
cmp
daa
jae
pop
ja
mov
jbe
repz
sbb
dec
aaa
xor
mov
addr16
mov
addr16
mov
ret
daa
daa
ret
les
and
outsl
jo
xchg
movsl
sahf
pop
mov
cltd
stc
stos
or
movsb
jb
addr16
pop
rolb
daa
daa
daa
adc
fs
jmp
xchg
mov
sbb
fs
jge
inc
shll
jb
lods
shll
pusha
mov
imul
cltd
test
sahf
lahf
insb
mov
and
push
call
add
aad
arpl
xchg
orl
and
seto
cli
jne
sbb
unpcklps
fnstenv
push
dec
adc
mov
or
adc
ss
push
aam
push
shrl
ds
pop
add
into
pop
ljmp
mov
stos
dec
sbb
or
sbb
stc
orl
xchg
pop
shlb
xchg
fcoms
push
xchg
pop
mov
xchg
arpl
xor
dec
pushf
pop
in
mov
loop
test
jmp
and
stc
add
add
test
js
popa
daa
jge
sub
loope
fmul
xchg
in
push
xchg
std
ret
xor
js
imul
je
cmp
pop
lcall
loope
cmp
out
les
sbb
decb
jb
fistl
xchg
es
mov
je
outsl
xchg
enter
and
stc
xchg
stc
push
cmp
cwtl
stc
cltd
stc
lcall
fwait
stc
lds
cmpsb
mulps
cltd
sti
fucom
cwtl
sti
jp
add
andb
test
pop
testb
orb
adc
clc
leave
inc
mov
fdivr
xchg
cmp
and
cli
xchg
cli
fcoms
in
nop
sti
loope
popf
xchg
xor
and
testb
test
add
in
das
add
lret
cmc
push
cmp
inc
push
xor
lahf
je
arpl
and
cmp
mov
jo
insb
jno
popf
popf
insb
data16
je
push
jbe
sub
rolb
popa
js
leave
leave
leave
leave
jns
jnp
pushf
sub
enter
arpl
xchg
outsb
rcl
insl
imulb
dec
bound
fs
das
imul
in
in
push
aad
or
in
in
push
dec
push
pop
pop
xchg
out
insb
in
inc
mov
imul
or
dec
in
fs
dec
stos
or
in
dec
fwait
int3
sahf
add
mov
negl
mov
lds
adc
add
cmp
cli
negl
mov
popf
pop
push
fs
popf
pop
cmp
icebp
push
popa
enter
sbb
out
aas
popf
addr16
pop
push
jecxz
dec
jecxz
cmp
popf
push
cmp
inc
decl
cmc
and
mov
pop
idiv
cmp
cmp
sbb
xchg
hlt
or
or
or
xchg
xchg
xchg
xchg
or
push
bswap
xchg
xchg
xchg
adc
adc
cmc
sbb
jb
std
cmc
cmc
push
add
cmp
cmp
add
add
sbb
cmp
cmc
enter
repnz
repz
hlt
cmc
sbb
jb
cmc
cmc
div
div
push
clc
cmc
sahf
and
stc
cmc
cli
cmc
sti
cmc
xor
cmp
movsl
jns
ss
aaa
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
repnz
adc
pushf
adc
sbb
sbb
pop
sbb
pushf
pop
and
and
sub
daa
daa
daa
daa
sub
sub
daa
daa
daa
addr16
cs
xor
mov
je
or
mov
mov
cld
cmc
lods
and
inc
jo,pn
xchg
loop
adc
mov
loop
pushf
or
xlat
or
lock
call
and
fcoml
fimull
in
sub
jns
or
push
sbb
movsb
data16
add
sbb
leave
in
push
call
mov
jp
mov
inc
adc
dec
push
fadds
dec
and
lret
mov
fdivl
outsb
cmp
je
insb
arpl
sub
gs
jb
cmp
and
and
loopne
inc
and
in
or
and
xchg
gs
popa
arpl
gs
xchg
outsb
cmp
gs
xchg
imul
and
mov
mov
shlb
imul
mov
pop
nop
add
push
inc
outsb
pop
adc
cmp
test
sub
nop
mov
cltd
sahf
dec
push
or
orb
push
leave
je
dec
cmp
pushf
sub
mov
jns
push
xor
insl
ss
dec
xor
arpl
xor
xor
dec
shrl
popa
jae
call
leave
push
gs
jne
xchg
mov
pusha
movhps
shlb
in
cmp
lds
insb
or
add
push
lcall
test
add
mov
call
push
jmp
and
or
push
push
dec
push
dec
rclb
aad
neg
out
roll
pop
push
push
cmp
aaa
or
orb
cmp
incl
in
rcrb
jl
call
outsl
mov
cmpb
pushf
into
pop
sbb
sar
mov
mov
mov
repnz
inc
xor
or
mov
mov
jbe
sub
int3
mov
add
sbbl
out
call
mov
aas
dec
cmpl
je
mov
mov
fisttpl
or
lock
sbb
xor
cmp
adc
and
loope
shr
fdivp
shll
mov
push
in
mov
subb
mov
push
cmp
push
das
mov
movsl
push
fwait
pusha
mov
mov
in
sbb
xor
pop
push
mov
arpl
mov
dec
mov
in
or
fcomps
call
pop
stos
cmp
cld
int3
mov
es
adc
frstor
adc
mov
inc
mov
inc
pop
push
mov
cmp
mov
movsb
sbb
pop
mov
push
mov
add
mov
pusha
push
mov
push
mov
test
and
call
cmp
push
push
nop
inc
adc
and
push
mov
cwtl
xchg
cs
shl
ret
push
rorb
mov
and
das
cmp
scas
loop
movsb
and
stos
movsb
jle
mov
sub
insl
push
inc
fsts
push
cmp
add
dec
andb
sbb
rolb
inc
ret
dec
jbe
or
or
ret
adc
inc
bound
jecxz
pusha
neg
xadd
cmpl
push
mov
mov
call
ss
popa
or
push
sub
roll
push
jl
push
ss
les
outsb
fwait
pushf
sbb
shrb
int3
mov
ud1
call
mov
add
or
or
cwtl
test
test
leave
aas
add
push
shr
lret
mov
pop
test
and
sbb
and
cmp
mov
es
mov
or
mov
or
lea
aam
flds
cmp
testb
jbe
call
stc
push
mov
xor
jo
int3
arpl
mov
or
or
int3
call
jbe
pushl
inc
call
adc
mov
cmp
out
je
mov
aas
inc
fbld
lock
or
mov
ret
sub
mov
scas
mov
push
ret
jmp
and
or
jle
ret
xchg
fstpt
jb
mov
and
cltd
mov
jbe
stos
adc
jl
call
mov
adc
jmp
shlb
call
cmp
call
stos
and
je
push
stos
xchg
inc
cmp
and
inc
push
mov
mov
or
and
call
jae
dec
add
mov
xor
dec
and
sub
or
push
mov
push
push
inc
lock
in
mov
add
shrl
adc
cmp
mov
int
pop
or
add
pop
jne
mov
push
pop
xchg
sub
je
fisubs
jne
push
cmp
mov
aaa
cmc
xchg
popf
xchg
push
cmp
push
jmp
inc
mov
scas
mov
ja
push
dec
enter
mov
test
movb
fmuls
inc
jne
pop
aaa
xchg
mov
inc
loopne
cmp
divl
push
inc
adc
adc
shll
in
jo,pt
push
dec
inc
insl
ds
sub
cld
andb
es
jecxz
xchg
rorl
jmp
insb
mov
call
je
adc
or
jmp
or
inc
jl
add
jg
das
add
in
jbe
add
xor
aaa
jg
inc
inc
jmp
jl
icebp
pusha
push
push
push
push
lock
or
mov
aad
mov
mov
push
mov
ja
or
shl
mov
cmc
add
lock
sbb
or
inc
jae
ds
aad
adc
push
mov
inc
sbb
enter
outsb
lcall
ficoms
shrl
addr16
test
push
add
lret
cmp
push
jecxz
xor
notb
cs
ret
popa
pinsrw
push
xchg
lret
insl
mov
enter
push
lret
shrb
into
or
fs
mov
dec
mov
xor
cmp
gs
dec
dec
imul
outsl
pop
inc
arpl
pop
xchg
imul
pop
jbe
call
popa
cmpsb
imul
inc
lcall
cmpsb
xchg
clc
stc
cli
inc
sti
gs
add
stos
push
gs
and
movsb
popa
sub
push
shrl
push
imul
imul
lret
push
imul
mov
int
mov
jns
mov
push
mov
xchg
insl
sub
cs
and
nop
gs
in
adc
jne
call
adc
jmp
movb
sahf
adc
jp
xchg
and
jmp
add
fisttpll
pop
stos
adc
pusha
mov
mov
aam
inc
movsb
adc
fdivrs
adc
push
int3
adc
pop
into
mov
int
push
or
inc
adc
mov
lods
stos
or
xor
in
mov
xchg
std
movsb
add
sbb
sbb
popf
je
mov
add
mov
and
in
mov
or
pop
push
jb
repz
cld
shr
insb
in
es
adc
pop
add
dec
cmp
cmp
push
and
add
cmpsl
push
add
call
cmp
cmp
sbb
cli
rcrl
lret
inc
jge
mov
push
loop
mov
test
shlb
pusha
pop
add
add
insl
fcomi
test
add
mov
add
push
inc
xlat
adc
sbb
xor
adc
pusha
sub
fsubrs
or
mov
fsubrp
pop
add
sub
jmp
aaa
add
adc
jne
mov
orb
das
lods
test
divw
add
jne
cmpsl
mov
mov
dec
sbb
outsl
mov
shr
jle
movzwl
mov
jne
daa
add
add
test
je
sbb
or
lds
dec
adc
adc
inc
subps
push
data16
lock
sbb
jmp
ss
jne
test
dec
push
fmull
ss
fstl
inc
and
outsb
test
hlt
imul
adc
inc
mov
pop
xor
dec
add
push
andl
ret
leave
push
jae
addb
data16
outsb
jno
push
jne
rorb
push
ja
ficoml
loop
aad
subl
sbb
outsl
clc
inc
mov
mov
pushl
add
push
addr16
stos
scas
cmpsl
xor
lods
and
es
add
ret
push
or
pop
add
shl
jecxz
dec
adc
scas
andl
jle
sbb
dec
inc
jmp
push
call
rcll
inc
aaa
pushl
lcall
xor
fs
pop
or
sub
pop
add
add
adcb
clc
sub
pop
adc
sub
pop
ja
enter
adc
or
push
orl
js
lretw
push
ret
dec
lea
inc
fisttpll
xchg
inc
cmp
or
fwait
sti
testb
je
pop
inc
sub
filds
jmp
and
sub
dec
xor
sti
inc
sub
push
mov
or
dec
mov
ja
push
jne
push
push
xchg
mov
test
or
xchg
mov
outsb
movsb
lret
sub
out
sub
xor
cmp
add
sbb
pop
nop
sub
ljmp
adc
in
loope
js
lret
mov
sub
dec
jb
jb
mov
mov
rcll
pop
push
add
clc
shl
repnz
js
lock
or
popf
adc
test
int3
out
or
mov
dec
jnp
add
add
and
data16
sbb
add
adc
popf
ja
imul
cwtl
push
mov
adc
sbb
fmull
roll
and
xchg
inc
xor
cltd
int
out
cmp
mov
je
and
scas
mov
mov
push
dec
movsl
rorl
add
rcl
cltd
popa
out
shrl
das
push
mov
push
sarb
sbb
jl
jecxz
cmp
cmp
push
adc
push
sub
mov
rcrb
aad
inc
sbb
add
pop
inc
jmp
fcomps
test
jge
aam
pop
loopne
or
or
icebp
and
or
cmc
lock
mov
and
pop
aam
push
dec
jnp
test
cltd
in
xchg
bound
call
mov
iret
xlat
mov
push
adc
and
dec
push
je
push
push
ret
repz
cmp
add
ror
pop
sbb
xor
or
pop
jbe
and
fisttpll
adc
ret
jle
sub
xor
jo
mov
push
pop
jge
shl
jbe
or
add
inc
push
jo
push
xorps
cmp
adcb
scas
or
cmp
sbb
jns
adc
and
fsubrl
mov
flds
push
push
in
lds
push
xchg
aad
fsubs
adc
das
sbb
cmp
cmp
ret
out
bswap
add
cmp
mov
in
cmp
les
stos
jnp
fs
and
mov
lock
loope
outsl
mov
loopnew
mov
addb
out
jecxz
mov
fs
jae
addr16
xchg
jns
outsl
jne
popf
aaa
je
adc
cmp
sbb
mov
pop
and
mov
call
pop
xchg
xor
jns
mov
repz
mov
aam
dec
ja
fdivr
popa
inc
sbb
mov
xor
pop
rolb
xchg
cltd
jae
ds
mov
xor
mov
mov
or
loopne
vmovupd
or
fbld
push
mov
or
outsb
popa
gs
push
rcr
pop
cwtl
and
call
dec
sub
push
dec
push
and
jge
insb
inc
push
mov
add
lock
mov
out
icebp
and
adc
dec
add
pop
pop
push
pop
and
xchg
or
je
leave
shll
fs
xchg
mov
xchg
lods
loop
aas
jb
inc
dec
shll
loope
jecxz
nop
xchg
sbb
fstl
pushf
nop
es
adc
mov
lds
push
sbb
push
dec
adc
and
cmp
dec
adc
dec
outsb
xchg
addr16
sub
mov
loop
arpl
mov
xchg
or
push
xchg
jg
stc
jb
push
icebp
faddp
test
movb
cltd
mov
push
push
jp
xchg
mov
sbb
cwtl
inc
adc
dec
push
imul
push
mov
sub
test
mov
jecxz
xor
pop
mov
and
xlat
enter
inc
xor
imul
orl
enter
push
xor
jl
dec
dec
pusha
stos
addr16
cmpl
xchg
cwtl
sahf
and
int
add
shrl
add
insb
jo
enter
je
mov
sbb
or
clc
hlt
add
repz
adc
inc
or
or
sbb
add
mov
lahf
ret
add
add
jno
in
mov
xchg
add
adc
jns
fsubrl
and
mov
sbb
or
dec
jae
data16
mov
les
mov
sub
je
loopne
add
xchg
lea
sub
aad
inc
sbb
push
jb
mov
gs
dec
add
adc
gs
outsl
outsl
insb
push
mov
outsb
popa
push
je,pt
add
mov
je
popa
insb
and
mov
mov
dec
ss
adc
pop
inc
insb
xlat
push
add
mov
and
pop
and
dec
jnp
cltd
mov
imul
push
add
in
sub
cwtl
add
je
gs
jno
in
mov
cmovbe
outsl
arpl
push
imul
fcomip
adc
dec
outsl
fs
adc
insl
mov
add
notl
movsb
add
imul
das
or
gs
push
in
fisttpl
je
inc
jns
add
or
rcr
mov
daa
add
inc
adc
rorb
xchg
jle
mov
mov
test
gs
divb
popa
inc
outsl
jb
outsb
and
in
loope
bound
push
push
gs
outsl
pop
push
or
xchg
lods
out
dec
sbb
or
or
push
orb
iret
push
int
push
push
jo
inc
push
scas
repz
inc
sub
fcmove
mov
add
popa
cmpsl
outsb
dec
xlat
pop
push
aaa
jno
pcmpeqb
mov
adc
test
js
loope
das
clc
add
pusha
xchg
sbbb
pop
shrl
jmp
je
bound
jae
sub
adc
adc
and
dec
outsl
jbe
lds
fcmovu
lret
gs
mov
add
jae
out
push
imul
inc
mov
daa
mov
jnp
outsl
push
xor
mov
sbb
fsts
ret
gs
addl
ret
je
imul
and
or
jns
and
ret
imul
xchg
mov
mov
imul
and
adc
ud1
lea
xchg
imul
add
sbb
icebp
dec
cmp
adc
inc
lea
test
adc
insl
arpl
add
add
arpl
imul
subb
push
mov
sarl
push
dec
inc
fldt
test
lods
add
jo
je
aaa
push
das
arpl
add
add
ss
jp
push
mov
outsl
push
jb
sbb
sbb
in
push
mov
add
inc
mov
pop
pop
pop
and
dec
jae
sub
shll
fiadds
fdivrs
dec
hlt
popa
addr16
aad
xor
imul
push
xor
shlb
or
add
out
sub
in
movl
enter
jecxz
sti
ljmp
insl
scas
sub
test
jge
pop
and
aaa
aaa
jns
sbb
lea
push
mov
pop
add
imul
imul
and
insl
sub
jne
pusha
adc
jne
jecxz
mov
pop
sub
imul
neg
dec
mov
and
sub
pop
xor
das
push
std
pusha
jg
outsb
jne
push
inc
inc
push
inc
push
nop
or
mov
insl
inc
lea
or
insb
jnp
sbb
lret
pop
sbb
xor
imull
mov
cmp
or
mov
pop
test
es
imul
xchg
sub
dec
mov
cmp
ficoml
jge
outsb
bound
rclb
jae
jmp
cmp
mov
mov
mov
or
cs
aas
aas
xor
inc
pop
push
add
loope
jae
mov
xor
nopl
sbb
xchg
ja
sti
and
and
test
or
out
jnp
adc
outsb
sub
or
loope
fldenv
add
mov
arpl
hlt
dec
add
adc
insb
ja
dec
xchg
adc
sbb
push
inc
sti
nopl
arpl
imul
pop
or
mov
ret
outsl
lret
pop
push
cmp
add
shrb
cmpsb
mov
adc
xor
pusha
sub
arpl
enter
jbe
and
lcall
mov
or
inc
dec
push
dec
sbb
fs
je
nopl
ljmp
sub
lcall
adc
mov
gs
decl
clc
sbb
and
rcr
mov
clc
pusha
xor
jmp
sbbb
or
push
mov
out
pushf
cmc
xchg
call
lods
lret
sbb
jne
mov
adc
and
cmp
ja
add
pushf
fs
mov
add
mov
add
mov
std
inc
popa
adc
add
adc
aas
adc
mov
jecxz
and
pushf
stos
fwait
js
cmp
gs
andb
jmp
scas
repnz
lcall
cmp
pusha
fidivs
mov
mov
inc
jecxz
int3
inc
mov
and
xchg
add
loopne
clc
test
jle
mul
mov
lcall
mov
inc
push
enter
test
mov
mov
jge
jle
push
idiv
call
push
pop
pop
out
jl
ljmp
call
add
sub
cmpsb
or
and
mov
test
adc
pop
movsb
aam
mov
lods
push
pop
pop
shlb
cmp
push
mov
inc
or
scas
cmc
mov
pop
pop
scas
add
adc
adc
incl
adc
fildll
xchg
xchg
push
xchg
fsub
int3
push
nop
jns
popa
push
pusha
push
out
aam
jmp
adc
jg
enter
hlt
dec
push
mov
rol
btc
movsbl
add
filds
lods
test
rol
add
or
sbb
and
xchg
sub
push
popa
mov
adc
outsl
mov
mov
push
loop
mov
rcl
pushf
add
add
xadd
cmc
and
inc
les
add
add
shrl
push
fistpll
setns
jae
jne
popa
add
xor
jmp
mov
pushf
lcall
fcoml
dec
jmp
xchg
add
insb
in
out
push
sbb
push
call
ret
enter
fisttpl
inc
sbb
scas
mov
out
punpckhbw
mov
data16
test
clc
push
jmp
pushf
push
imul
inc
jmp
jl
leave
pop
mov
ja
pusha
outsl
push
jmp
fwait
xor
out
pop
inc
insb
or
cmpl
push
sub
xor
cmp
stc
lea
jmp
dec
and
push
mov
and
and
insl
push
jmp
rclb
clc
in
push
cmc
fildl
pop
stc
cmp
cmc
cmpl
std
aad
or
in
add
jmp
or
push
popf
sbb
cmp
cmp
std
cwtl
cmc
pushf
call
add
xchg
or
sar
and
ret
dec
push
outsb
add
mov
div
xchg
mov
jmp
xchg
jae
mov
mov
mov
and
push
add
mov
xchg
sti
xchg
xor
loopne
addl
loopne
mov
fdivr
in
mov
sahf
xchg
jle
pushf
mov
pop
std
mov
sub
cmp
xor
mov
int
ja
mov
jo
popf
dec
add
jmp
aad
lock
fdivrp
fcmovnu
popf
jl
jmp
cld
sub
mov
xor
jg
sub
or
adc
and
add
push
das
push
mov
push
mov
mov
xchg
pushf
shll
test
and
sub
push
adc
jmp
imulb
test
pusha
cmc
not
or
pop
and
ljmp
jo
adc
popa
mov
inc
jno
mov
pushf
bnd
outsb
into
movsl
mov
ret
mov
sbb
sub
sbb
call
aam
gs
sbb
sbb
mov
movsb
icebp
cs
arpl
imul
pusha
call
int
sub
neg
push
je
lds
clc
out
or
and
das
or
fdivs
or
xchg
push
mov
pop
mov
addr16
pusha
movsl
fistpl
cmpsb
mov
popf
or
call
stc
xchg
mov
fldl
jmp
jnp
dec
stos
and
xor
xor
test
js
push
das
adcb
aaa
sbb
pushf
daa
push
adc
out
sbbl
outsb
mov
rorl
add
pusha
setno
mov
jmp
in
sti
pusha
ss
jg
or
mov
push
idivl
clc
pushf
sub
call
jae
lods
jnp
mov
push
pusha
pop
jle
bound
mov
lahf
enter
repz
pushl
adc
adc
sub
jno
divl
test
stc
test
rcrl
mov
lock
push
or
rcl
mov
shl
sub
std
or
aas
add
xchg
mov
aas
or
rol
in
out
sbb
or
js
shll
cld
cli
xor
xchg
sub
cmc
test
push
add
aad
stc
xor
pusha
jl
adc
xchg
xor
push
adc
mov
jecxz
mov
movsl
inc
sbb
pop
mov
push
outsl
xchg
or
loope
std
sbb
jbe
ror
inc
neg
xor
aad
inc
setnp
xchg
mov
in
mov
add
scas
push
adc
sbb
sti
xchg
stos
call
sub
jle
cld
pushf
xchg
imul
movsl
cmp
clc
lcall
sbb
pop
leave
cmp
ljmp
cli
loope
mov
ljmp
mov
movsb
sub
cmp
in
pop
hlt
mov
inc
xor
fisttpll
sbb
xor
or
jg
icebp
outsl
inc
add
push
dec
ds
dec
jmp
pop
inc
cmp
aad
rcll
test
xor
insb
or
lock
mov
into
in
push
jmp
fiadds
xor
test
pop
push
repnz
xchg
pop
xor
ja
cmpsb
mov
xlat
stc
loop
and
push
mov
mov
call
fwait
xchg
in
or
in
mov
lea
das
cltd
mov
adc
adc
sbb
add
inc
mov
cmp
jmp
aas
cmp
jb
mov
or
inc
mov
push
out
or
das
sub
pushf
sbb
arpl
syscall
push
dec
test
add
mov
rorb
lock
jo
sub
mov
push
call
jbe
jmp
jl
xor
inc
std
mov
push
jmp
jge
call
and
mov
pop
push
mov
inc
bound
shll
and
sub
push
data16
popl
push
dec
cmp
test
mov
push
push
xchg
or
mov
cmp
jnp
dec
in
imul
pop
jmp
dec
fwait
lods
rcrb
adc
or
jmp
xchg
lcall
lcall
xchg
fdivrs
mov
adc
mov
mov
leave
sbb
adc
pop
decl
push
ret
call
icebp
das
mov
test
rolb
jecxz
sub
clc
cmp
add
incl
cltd
jne
add
ljmp
or
push
adc
mov
pusha
cmpsb
call
mov
scas
mov
imul
movsl
pusha
pop
cs
pushl
or
test
push
rep
or
notl
aaa
or
or
out
neg
pop
pushf
lods
hlt
les
or
call
fdiv
adc
adc
jge
call
adc
adc
popa
faddl
mov
fidivs
fisttps
push
push
sub
les
cli
add
fcompl
leave
mov
aam
movsl
aaa
pusha
sbb
ja
hlt
jmp
aas
mov
push
decl
sbb
arpl
add
or
xchg
fistpll
lahf
or
sub
aam
dec
adc
cmp
cmp
repz
cli
mull
fdivrl
push
shlb
sbb
add
or
adc
call
jne
sub
fcom
xor
ss
push
dec
scas
imull
add
testl
sbb
jmp
jno
out
aaa
cmp
aam
push
cmp
cmp
pop
pop
pusha
xchg
lcall
aaa
dec
push
stos
in
push
mov
xlat
std
les
push
xor
and
inc
repnz
mov
sub
adc
xorl
mov
inc
rol
std
ljmp
ljmp
inc
pop
pop
dec
lock
pop
cmp
cs
jnp
stos
jmp
jae
lods
adc
dec
sub
lret
loope
in
cs
test
cmp
jns
outsl
pop
inc
or
iret
inc
call
notb
into
ficompl
aam
push
xlat
imul
fwait
inc
jmp
jl
xor
xor
mov
xor
sahf
bound
push
mov
add
mov
pop
push
mov
in
shrb
movsb
adc
ficoms
stos
add
inc
dec
sbb
fistpl
mov
pop
cmp
int
jle
out
cmpb
clc
jo
stc
out
pop
insb
hlt
rolb
push
sub
movsl
cwtl
shll
mov
pop
dec
add
clc
imul
repz
xor
pusha
imul
clc
pop
xor
ds
test
mov
ret
pop
ret
stos
lcall
add
pushf
sub
mov
jnp
daa
or
xchg
lea
incl
call
mov
pop
pop
fsubrl
fdivrs
sti
or
lea
push
sub
lods
cmp
add
cmp
sub
pop
out
sub
xchg
and
xchg
xchg
test
lds
jmp
xchg
cmc
lock
test
mov
data16
ljmp
xor
push
mov
cmp
sti
ret
push
sub
mov
cld
test
pop
mov
adc
lcall
repz
jge
cmpsl
or
loop
outsl
lods
lret
mov
stc
add
mov
fsubr
xchg
or
adc
insb
lea
lea
fadds
stos
fs
xchg
clc
imulb
dec
pusha
out
lds
pop
adcl
mov
pop
jle
shrl
inc
push
cmc
ljmp
cli
rol
cli
lret
cs
ds
rorb
mov
fsubrl
ficompl
stc
pop
sbb
call
push
or
push
and
sbb
dec
aaa
ja
repnz
in
fwait
mov
lods
xlat
push
jl
js
roll
push
cs
out
xchg
pusha
cmp
loopne
gs
jmp
shr
mov
dec
jns
xlat
mov
stos
mov
or
cmp
mov
loop
add
mov
xchg
ret
out
loopne
clc
adc
push
jbe
mov
push
mov
xchg
jmp
adc
xchg
fdivrs
sbb
scas
aad
setg
or
faddp
pause
mov
or
call
pusha
cmc
sbb
xchg
clc
js
fdiv
jmp
push
or
sti
jae
push
in
filds
sbb
mov
leave
fdivl
fwait
lahf
mov
mov
or
mov
out
push
lahf
xchg
cwtl
mov
call
xor
cmp
jle
ss
dec
pop
mov
add
or
add
shr
clc
neg
fsubrl
mov
call
mov
push
pushf
fiaddl
jb
xorl
push
sbb
dec
pusha
xlat
std
or
pop
add
call
loopne
mov
cld
ja
pop
push
call
push
sar
xchg
rolb
mov
ror
pusha
sti
xchg
imul
push
sub
xor
fistpl
adc
dec
clc
add
popa
and
clc
adc
add
jno
je
pusha
imul
push
mov
lods
jle
pop
call
out
nop
or
inc
leave
insl
gs
mov
cmpsb
lock
ret
fs
sub
lock
cmpsb
test
lods
xor
int
jbe
xchg
and
or
and
pop
icebp
dec
add
mov
or
jle
ret
jg
lret
xor
pop
or
sbb
cltd
ret
lea
or
or
hlt
sbb
js
push
ret
xchg
lods
ret
xor
lret
sar
adcb
stc
or
shr
int
push
mov
cmp
insl
stos
cld
aam
icebp
test
ds
xor
loope
sub
dec
jge
xor
adc
sbbl
outsl
faddl
or
inc
hlt
sbb
popa
mov
cltd
jmp
jae
xchg
adc
push
xor
clc
and
xorl
sar
insl
shr
daa
inc
call
dec
and
mov
push
cmp
out
mov
rcll
lock
nop
rcrl
mov
pushf
and
or
call
leave
das
test
aaa
xor
shl
inc
stc
adc
movl
cmp
or
setne
rol
clc
add
jns
push
mov
pop
lea
outsb
jecxz
shll
les
clc
clc
fs
jb
lock
shll
and
daa
mov
clts
add
aas
pop
mov
sbb
bndstx
xchg
or
fmull
add
aaa
sarl
pop
pop
into
pop
jb
jbe
sbb
sub
sahf
push
pop
add
pop
test
in
add
mov
aas
cmp
mov
lahf
test
repnz
leave
rdpmc
ja
jl
ss
inc
adc
jno
iret
pop
fistps
neg
popl
inc
pop
pop
fistpll
or
jae
ud2
xchg
inc
fwait
cmp
cmpb
aam
cmovg
jg
ret
add
mov
cmp
add
aaa
pop
mov
aas
jg
cmove
mov
out
pop
fwait
inc
ja
gs
bndstx
sub
bswap
pop
add
dec
in
int
insb
add
dec
stos
scas
lock
xchg
lock
inc
inc
xlat
pop
jae
out
mov
jecxz
arpl
ret
jnp
jnp
popl
das
pop
inc
push
negl
out
mov
rep
mull
mov
dec
aas
daa
fisubs
fstps
arpl
adc
xchg
aad
shl
push
out
std
pop
mov
xlat
fsubrp
notl
push
xchg
das
mov
pop
rcpps
idivl
and
jnp
dec
pop
cmp
push
out
pop
cmp
jnp
mov
sbb
fsubp
sbb
adc
js
notl
mov
addr16
lahf
es
mov
ds
fidivrs
test
jae
and
mov
sbb
cmp
mov
push
push
cmp
mov
push
cmp
stc
in
xor
xchg
and
sub
xchg
xor
mov
sarb
cmp
mov
stos
pop
dec
test
clc
imulb
les
jo
xor
movsl
shlb
pusha
cmp
test
mov
stc
ljmp
in
scas
lahf
xor
add
ds
mov
js
push
rolb
dec
push
arpl
mov
cmp
lcall
lret
sbb
cmc
xchg
jecxz
sub
stos
shl
call
mov
jmp
add
fnstsw
mov
into
mov
subl
aaa
pop
ja
lret
xchg
repz
jae
sub
into
lea
ss
sub
fisttps
push
jge
mov
mov
sub
xor
fbstp
dec
xchg
and
stos
xchg
jle
xlat
fwait
call
pushl
pop
inc
mov
loopne
push
popa
idivb
sub
sti
pop
ret
incl
adc
cwtl
fidivl
jae
and
cmpsb
pop
lods
jns
pusha
rorl
incl
xchg
dec
outsb
jl
mov
int3
les
mov
outsl
clc
ret
popf
in
loop
inc
imul
pusha
movl
pop
xchg
mov
test
out
mov
jmp
bound
mov
jb
and
xchg
mov
inc
sbb
aad
jbe
icebp
in
das
hlt
call
jge
loope
sub
dec
push
mov
mov
jl
push
push
dec
dec
push
sub
js
jecxz
aam
fdivs
cmc
push
sbb
aam
mov
pushf
push
pushf
mov
out
push
js
test
lcall
stos
repz
pushl
xor
in
bound
lahf
cwtl
lcall
popf
mov
imul
mov
gs
je
outsb
adc
jg
std
fbld
cmp
imul
cmpsl
mov
clc
or
call
adc
and
add
lcall
cmp
push
mov
shrb
xchg
or
cli
movsb
cltd
into
pop
and
stos
cmpsl
push
xchg
call
dec
bound
mov
in
cld
test
hlt
int3
pop
pop
js
pop
adcl
cmc
or
popf
xchg
out
ss
add
xchg
push
xor
xchg
imul
je
mov
mov
adc
push
lea
xlat
mov
hlt
jle
sbb
push
incl
or
loope
jl
fstpt
addl
call
mov
es
into
in
sub
adc
mov
sbb
jle
mov
ljmp
jg
idivb
aaa
and
mov
mov
fs
test
jb
cmpb
jge
ljmp
mov
xor
addb
das
push
and
scas
shlb
xchg
test
jno
ds
mov
incl
or
and
js
add
ret
xor
lahf
inc
sti
lcall
add
clc
loopne
mov
cmp
fidivrs
jmp
add
into
test
decl
iret
pop
pop
mov
inc
pop
insb
out
hlt
inc
adc
ljmp
loopne
jge
je
insb
inc
cmp
xchg
jge
pop
or
nop
fs
call
xor
aaa
adc
pusha
sbb
hlt
sbb
fdivl
pop
inc
add
push
sbbb
sti
ds
pop
pop
ret
adc
rorl
xchg
push
fldt
mov
dec
xor
adcb
mov
mov
es
clc
aas
xor
and
addr16
out
repnz
in
sbb
jge
std
pop
ljmp
sbb
mov
and
mov
or
lcall
aam
push
lds
sbb
ja
sbb
mov
movsl
pushl
out
fldt
movsl
cmp
adc
gs
mov
jae
or
clc
fnsave
arpl
push
jge
fdivr
or
js
int
jl
mov
pop
mov
push
and
std
dec
aaa
iret
push
sub
mov
dec
jmp
aas
adc
add
test
shrl
or
fadds
lds
test
jmp
jl,pn
inc
icebp
arpl
das
and
adcl
xor
dec
mov
or
imul
pusha
sub
mov
scas
negl
fiaddl
clc
cs
mov
fs
and
ja
sbb
cmp
notl
call
dec
mov
sahf
and
ljmp
loope
cs
xorl
xchg
out
pop
push
sub
js
repnz
pop
xchg
mov
test
sbb
pop
mov
sbb
xor
js
decl
jp
adc
pushf
clc
inc
iret
adc
cmp
arpl
lock
mov
jle
jge
out
push
aaa
sub
mov
sar
push
inc
lods
mov
cmpsb
shlb
outsb
fdivl
popf
sbb
pop
addl
mov
add
aad
mov
or
dec
lret
dec
cmp
inc
lret
call
aad
lock
mov
lock
pop
es
es
rclb
push
cmc
ljmp
push
test
sub
popa
lret
ret
ds
push
add
and
int3
sub
add
lods
pop
mov
nop
mov
ljmp
pop
push
sub
das
sbb
lret
das
push
sti
sub
lcall
iret
add
or
mov
dec
mov
xchg
jmp
shrl
cmovbe
das
popa
test
dec
mov
addr16
pushl
dec
push
xchg
xchg
fsubl
or
outsb
ret
jecxz
mov
jb
insl
adc
mov
outsl
icebp
in
xchg
xlat
test
adc
bound
outsl
scas
fcmovbe
push
out
xor
cmc
les
mov
cmp
xchg
xor
cltd
repz
js
aam
lret
aam
inc
mov
jecxz
sbb
notb
pop
fisubs
outsb
jb
and
xchg
mov
aas
rcr
or
cwtl
inc
fwait
shll
imul
jg
mov
dec
sub
sub
mov
loop
mov
loopne
pop
mov
lcall
push
test
xor
xchg
jecxz
pushw
sub
ljmp
call
iret
dec
xor
rclb
mov
repnz
cvttps2pi
call
inc
insl
lds
sbb
fbstp
push
fisttpl
into
add
jbe
xchg
sub
mov
clc
dec
jae
sub
icebp
jle
shll
mov
cmp
clc
push
test
cld
cmp
xor
sbb
out
hlt
xor
push
pop
mov
cmpsl
mov
mov
addl
jg
mov
mov
cmp
inc
dec
mov
add
or
mov
mov
mov
stos
pop
pop
or
imul
jg
andb
jp
cmp
les
jp
enter
adc
mov
leave
out
sub
test
push
jns
ss
insb
jne
pop
mov
push
xor
cwtl
jge
lret
ja
mov
cmpsb
mov
xor
lahf
repz
or
add
xchg
clc
inc
xor
xor
cmp
cmp
pop
sbb
dec
xor
push
jnp
movsb
ds
bound
xor
iret
int3
call
outsl
cmp
add
rorl
sub
out
pop
scas
or
sub
outsl
rclb
mov
outsl
sar
adc
dec
mull
test
jmp
mov
test
aas
sbb
jb
add
clc
inc
enter
xchg
test
push
jae
decb
dec
daa
cmp
inc
notl
jmp
ja
ret
mov
adc
fdivr
dec
mov
jp
jmp
add
lret
pop
in
sbbb
xchg
mov
shrb
cmpsb
mov
inc
aad
xor
stos
fistpll
or
out
xor
sbb
decl
inc
clc
adc
cmpsb
xor
ljmp
iret
hlt
sti
pop
cltd
push
imul
orb
jge
mov
test
shl
mov
mov
mov
jg
mov
mov
mov
nop
sbb
vunpckhps
dec
jg
lcall
movsl
mov
xchg
iret
sarl
sub
adc
jnp
fidivs
add
clc
repz
jmp
std
cmc
scas
jno
std
lret
adc
in
xchg
mov
mov
shlb
pop
jecxz
mov
dec
bound
or
icebp
and
rol
or
incl
push
or
insl
popf
js
sbb
pusha
and
sub
push
and
incl
xorb
sub
lahf
sub
clc
dec
decl
mov
xchg
ja
es
gs
lcall
in
inc
mov
icebp
ljmp
mov
xchg
xchg
cmp
subb
insl
dec
jle
pop
mov
decl
add
mov
fsub
popf
pop
notl
ret
xor
ja
xor
fcmovnb
xor
dec
stc
or
dec
push
jmp
inc
pop
add
sbb
sahf
sub
cmp
mov
lock
sbbl
jmp
popf
jge
cmpl
sahf
imul
xchg
xor
lcall
xchg
pop
sub
stc
in
lret
mov
mov
jp
mov
sub
cmpsb
jl
push
and
jne
negl
inc
xchg
push
std
fmull
rcl
test
ljmp
push
repz
and
xor
push
aas
inc
test
into
mov
mov
stos
mov
jmp
jp
mov
in
imulb
cmp
and
push
cli
pop
mov
negl
cmpsb
clc
inc
out
mov
add
inc
jb
les
enter
pop
adc
xchg
test
push
loop
and
pushf
sub
decl
add
mov
xchg
icebp
inc
insl
jge
or
or
mov
pop
ss
sub
clc
or
pop
addr16
test
lahf
mov
out
incl
loope
jb
and
and
push
jb
call
mov
jns
or
int3
mov
scas
lret
inc
imul
and
jl
into
sbb
test
adc
jecxz
jo
jg
mov
adc
xchg
movaps
mov
imul
inc
jg
push
jecxz
enter
rcr
mov
cmpsb
lcall
inc
xchg
out
sbb
mov
stos
ficoml
mov
imul
sbb
xlat
cmp
pop
inc
add
jg
adc
push
mov
sbb
xchg
cmp
cmp
cli
inc
cmp
mov
ffree
movsl
push
push
sub
testl
jo
adc
mov
add
mov
neg
ljmp
push
push
bound
mov
sti
stos
xor
sti
pop
adc
and
mov
cmp
lods
lret
mov
pop
cli
repz
push
xchg
mov
popa
fs
add
dec
mov
xchg
jg
neg
ljmp
stc
pop
mov
pop
push
fidivl
mov
xor
push
inc
shll
call
push
leave
loope
mov
pop
nop
idivb
js
insb
xchg
shll
mov
adc
push
ss
pop
sub
adc
mov
ja
dec
cmpsb
xlat
ucomiss
movl
js
icebp
or
push
cmp
jo
inc
shlb
lds
int3
jmp
add
daa
sbb
out
outsl
mov
outsb
push
xchg
adc
sbb
fbld
inc
adc
insb
scas
in
pop
ja
nop
cmpsl
mov
aas
jbe
push
fistpll
and
push
pop
push
outsb
rolb
pusha
dec
adc
push
jl
gs
cwtl
or
sub
in
push
fwait
cli
stos
push
mov
mov
decl
dec
add
or
mov
and
cmp
jp
and
pushf
mov
insb
pop
hlt
push
dec
pop
out
ljmp
adc
push
inc
pusha
pop
jne
pop
mov
out
mov
lds
adc
in
mov
daa
leave
xchg
clc
inc
ds
repnz
push
dec
mov
adc
aam
xchg
scas
jns
roll
mov
sub
ljmp
mov
mov
lahf
lea
enter
icebp
push
jecxz
xor
xchg
lock
lea
and
ret
incl
pop
insb
cmp
jnp
int
and
pop
sub
fisubrs
jmp
fimuls
add
sti
mov
fdivrl
push
mov
push
jl
loop
mov
addr16
lcall
cld
cmc
fildll
cld
aam
movsb
sub
xor
cltd
mov
stc
subb
sub
ljmp
pop
jg
add
pop
pop
sub
adcb
leave
repnz
cld
clc
and
adc
cmp
jbe
dec
xchg
xor
push
das
sti
lret
jl
mov
cwtl
loope
mov
pop
loopne
push
or
xor
out
ljmp
hlt
call
push
fsubs
iret
insl
or
add
fcompl
pop
data16
lods
fucomip
jno
push
push
jae
scas
mov
push
mov
fisttps
and
push
test
inc
adcl
clc
incl
inc
dec
jl
insb
cmp
arpl
lcall
xor
add
std
push
fstps
or
push
jl
stos
cmp
adc
dec
cld
pop
xor
dec
pop
jnp
and
inc
dec
push
movb
inc
xor
mov
push
xor
fbld
push
je
mov
jge
dec
fs
lcall
fdivs
adc
test
mov
pop
xchg
cltd
aad
cmp
or
push
xchg
mov
mov
fldt
add
jmp
aam
adc
xor
jnp
testl
push
xorb
decl
cltd
es
mov
mov
and
xchg
les
inc
inc
fsubs
std
pop
call
jp
jl
xor
dec
idivb
into
lods
stos
lock
sti
jno
mov
dec
sbb
mov
inc
xor
jge
cmp
or
into
loopne
xor
cmpsb
jecxz
int3
and
out
dec
push
cmpsb
push
lds
fdiv
push
xor
inc
xor
jmp
jge
adc
nop
push
or
mov
add
jge
cltd
cmpsl
popf
nop
lds
stc
testb
jl
cmp
or
adc
pop
daa
sahf
fnop
loope
cmp
sbb
popl
mov
push
clc
sub
outsb
jne
clc
inc
pop
add
fcoms
test
cli
push
pop
call
jg
mov
xor
mov
jmp
repz
sbb
ja
pop
and
lock
imul
add
and
fwait
add
stc
rcl
jb
inc
push
rcll
dec
sti
jecxz
imul
mov
addb
pop
mov
into
adc
mov
add
push
cmp
std
inc
jb
xchg
add
and
enter
outsl
inc
sahf
or
cmp
out
nop
add
rcrl
and
lcall
cmp
scas
xchg
cmp
sub
mov
pop
pop
jg
in
sahf
je
es
xchg
push
pop
push
dec
push
mov
test
mov
loopne
popf
mov
pushf
mov
jbe
add
or
aas
movsl
mov
das
call
cmpsb
sbb
or
lea
cltd
outsl
dec
pushf
dec
jg
add
sarl
push
aam
pop
pop
fbstp
sub
ret
lcall
add
icebp
or
dec
xchg
mov
mov
loop
lds
ljmp
push
add
or
jne
jecxz
das
ljmp
iret
iret
adc
cwtl
cmp
shll
in
xor
cmp
adc
pushf
shr
inc
push
std
xchg
or
aam
icebp
inc
decl
ss
test
call
xchg
or
enter
mov
mov
jne
xchg
mov
call
test
aas
bound
out
lcall
cltd
clc
pusha
lcall
xchg
jg
cmp
pop
push
mov
rorb
and
and
bound
fstpl
out
call
cmp
lods
sbbb
push
clc
les
inc
sub
les
jnp
ljmp
repz
push
or
xchg
jecxz
dec
dec
cmp
inc
jno
lods
xor
push
out
lahf
sub
and
addr16
dec
mov
cli
decl
ret
test
into
out
dec
loopne
lcall
mov
lods
or
mov
cmpsb
jg
scas
push
fisttps
arpl
sti
adc
ja
dec
pop
jae
inc
mov
ljmp
add
mov
mov
dec
cmp
test
mov
inc
pop
stos
cli
push
stc
mov
imul
sub
ljmp
ds
mov
pop
mov
shll
lcall
call
pop
test
adc
enter
push
cwtl
dec
lret
mul
ds
push
popa
xchg
sbb
pushl
push
loop
repnz
ja
push
popa
fs
pop
pop
call
xchg
pop
and
not
ds
into
popf
mov
add
int3
and
cmpsl
mov
imul
aad
rcrb
pushl
mov
cmp
sub
sbb
mov
jle
or
arpl
mov
sbb
loope
incl
jmp
or
jbe
mov
dec
pop
jge
fsubp
xchg
cs
rcll
sbb
repnz
jg
mov
ds
sbb
mov
sbb
mov
shl
mov
stos
sahf
icebp
mov
fimull
adc
fs
test
mov
jnp
ret
nop
mov
fsubr
mov
sbb
xchg
ret
push
jg
pop
decb
add
dec
mov
unpckhps
inc
fdivs
ret
adc
iret
subps
pop
stos
sahf
sar
std
push
sarl
fwait
lret
sbb
push
orb
pop
test
sub
lea
xlat
pop
fsubp
or
loopne
insl
inc
dec
adc
cmp
and
mov
pop
or
or
les
xchg
jae
test
das
lret
incl
idivb
inc
cmpb
push
sbb
mov
cmp
sub
inc
hlt
das
call
add
and
mov
cmp
xchg
loopne
hlt
adc
pushl
cld
sbb
ss
fwait
ss
jge
inc
lods
notl
popf
insb
scas
lcall
jg
rcrb
fcoml
pop
std
dec
or
push
aaa
dec
cld
mov
fcoms
xchg
pop
or
mov
push
inc
mov
movsb
and
dec
mov
xor
loope
jb
iret
or
xchg
popa
pop
test
repz
push
push
sti
mov
pop
lcall
inc
popa
cmp
jns
or
inc
pop
lcall
pop
jne
mov
cmc
mov
sahf
sbb
add
mov
cmc
cmp
cltd
mov
fistpll
je
cmc
xchg
or
push
arpl
or
inc
loope
pushl
clc
add
je
dec
jae
mov
xchg
sti
or
ja
xchg
rcl
fsubs
rorb
sbb
call
outsl
std
lcall
jge
dec
mov
outsl
mov
cmp
dec
aas
pop
mov
push
jmp
mov
fimull
jns
lods
lods
fucom
add
dec
push
aas
or
mov
aaa
and
add
and
add
jmp
fimull
repnz
jl
js
inc
mov
and
outsb
test
dec
push
mov
jg
mov
test
push
and
mov
mov
fstpt
dec
cmp
movsb
arpl
mov
call
cmp
js
ss
sahf
imul
sahf
mov
inc
add
imul
pop
dec
push
pop
pushf
call
insl
mov
insb
call
lcall
push
jle
mov
dec
xor
ljmp
push
icebp
sub
shrb
inc
std
pushl
insl
data16
xchg
popa
add
test
mov
and
sahf
or
and
imul
pop
sbb
mov
mov
cmpsl
clc
cmovae
xchg
mov
cwtl
scas
fiadds
subb
push
mov
mov
sbb
test
or
mov
push
dec
stos
pop
mov
adc
jne,pn
std
jmp
inc
mov
or
mov
fildl
cmp
mov
idiv
jno
xor
jo
mov
pop
lods
out
xor
mov
mov
xlat
add
insl
fs
jg
push
mov
pop
mov
xchg
stc
or
sbb
xor
xor
sub
call
imul
push
iret
dec
sub
movsb
cmp
sbb
icebp
in
jge
int
push
pusha
xlat
stos
mov
cmp
pop
daa
add
imul
xchg
push
popf
adc
or
call
call
push
fwait
leave
pop
fs
daa
xchg
mov
ds
mov
inc
lcall
mov
insl
mov
pop
rcll
mov
cs
decl
loope
xor
sarb
adcb
mov
fstl
cli
incl
inc
arpl
fstpl
ljmp
out
push
ret
sub
pop
mov
and
stos
ljmp
push
jg
jge
out
xchg
movsb
rorb
add
out
cmp
insl
aas
fsubrl
shll
xchg
cli
jbe
in
mov
mov
call
fstpt
test
neg
or
enter
clc
ljmp
add
push
nop
fldenv
and
ret
dec
stos
ljmp
jns
daa
dec
arpl
sub
jl
jecxz
or
and
std
pushl
pop
sbb
inc
mov
int3
cld
mov
adc
mov
cld
mov
push
mov
push
cmp
jecxz
stc
pushf
pushl
mov
aaa
and
adc
push
fstps
call
test
aad
mov
mov
pop
push
push
outsl
fildll
sbb
jnp
lods
out
mov
cmp
add
ret
pushl
push
mov
imul
loopne
inc
jecxz
jge
dec
xchg
jle
incl
dec
or
xchg
insl
test
and
jg
repnz
inc
cmp
js
cld
mov
rcrl
or
addr16
rorl
mov
mov
mov
cmp
jle
mov
int3
movsl
or
aaa
pop
jle
cmp
sbb
movsb
aaa
out
ljmp
push
dec
insb
cmc
jns
push
aaa
and
cwtl
ja
xor
or
incl
rsqrtps
or
jle
jle
mov
shl
outsl
call
shr
and
pop
push
mov
cmp
mov
cmp
xchg
call
pop
jp
dec
push
add
mov
xchg
pop
inc
xor
decl
adc
cmp
push
daa
les
es
push
sti
mov
loopne
nop
test
stos
cli
push
incl
pop
stc
inc
stc
xchg
insb
mov
xchg
daa
cwtl
mov
pop
inc
sahf
dec
mov
fucomip
pop
std
int
dec
shrb
pop
pushf
aaa
clc
rclb
ret
aad
push
lcall
and
inc
jp
mov
dec
adc
sub
mov
adc
loopne
push
sub
jae
lods
aam
inc
addb
decl
mov
aas
repnz
imul
adc
or
push
test
roll
mov
mov
stos
aad
jmp
cmp
jnp
jmp
sti
cmc
push
movsb
into
pushf
sub
dec
xchg
xor
sahf
cli
push
test
das
pop
daa
lcall
push
cld
sbb
cli
mov
push
clc
ficoms
cmpsl
dec
mov
stc
rol
ja
je
push
ja
or
mov
fstl
sti
shll
push
pusha
pushf
fwait
jp
mov
arpl
fldl
jg
push
dec
cmp
lcall
rcll
clc
pop
test
aam
inc
push
cmp
int
inc
repz
pusha
mov
call
xchg
cmpsl
movsl
sbb
ja
test
sti
xor
pop
movsb
fs
or
mov
push
inc
adcb
mov
xor
xchg
shll
sbb
mov
mov
cld
in
cld
nop
cmp
push
pushf
and
cwtl
add
dec
cld
push
aaa
jge
dec
je
adc
xlat
and
call
lcall
adc
in
cmpsb
inc
sub
enter
adc
jmp
insl
bound
fucom
pop
das
or
test
sbb
icebp
lea
dec
pushl
jbe
lods
cmp
inc
push
xor
xchg
filds
mov
aam
cli
call
scas
inc
std
rcl
loopne
dec
add
mov
repz
push
jnp
mov
fnsave
out
aam
subl
orl
clc
xchg
pusha
pusha
inc
dec
rcl
sar
jg
outsb
jmp
and
cmp
mov
inc
arpl
shll
pop
ljmp
mov
cwtl
lcall
jmp
das
je
jl
pop
mov
stos
std
jmp
andl
jae
push
xchg
es
mov
cmp
test
mov
cmp
pop
push
xchg
inc
inc
xchg
lock
and
push
dec
lcall
decl
add
mov
dec
test
sub
xor
or
call
dec
mov
xchg
shl
test
sub
mov
dec
enter
ljmp
mov
mov
aaa
pop
pop
push
pop
in
in
jo
jb
jnp
ret
in
roll
pop
fucomip
and
and
jmp
rclb
test
pushf
push
insb
adc
lahf
xchg
push
faddl
je
test
js
cld
in
xchg
call
test
sbb
and
out
pusha
sub
push
fwait
jae
push
xor
lods
add
sbb
jle
inc
mov
mov
jbe
push
and
xchg
pushl
cmc
pusha
jmp
xchg
out
mov
xchg
loop
pop
sbb
mov
adc
and
mov
mov
cmc
xor
lcall
sti
xchg
mov
push
mov
adc
jmp
mov
jg
in
mov
stos
or
dec
stos
jle
lcall
outsl
daa
or
xchg
or
adc
mov
pop
fmuls
and
mov
jmp
fcoms
inc
data16
fsubl
jmp
sbb
cld
call
lds
pop
xchg
or
add
jl
mov
adcb
mov
std
test
pop
mov
arpl
xchg
inc
jnp
sbb
popa
inc
in
push
mov
lcall
sub
jge
lret
call
dec
mov
aas
outsl
sar
outsl
loop
rol
cmc
or
pop
mov
add
adc
xor
pushf
cmpsb
loop
add
push
push
push
insb
rolb
adc
dec
aad
fimull
pushl
test
cmpsl
and
add
jecxz
scas
data16
jbe
push
mov
aam
movsl
inc
mov
popf
fbld
enter
jmp
sbb
or
mov
or
fldt
xchg
sbb
inc
pushl
inc
aad
addr16
iret
dec
xchg
sbb
bound
pop
out
sbb
stc
mov
popf
sub
lcall
or
add
push
push
cmpsl
mov
nop
loop
fsubr
mov
xor
cmp
pop
mov
outsl
fldl
std
xchg
movsl
mov
push
pop
arpl
testl
outsb
and
dec
sbb
loopne
fisubrl
das
insb
jo
addb
rcll
ljmp
lock
and
pop
jno
jo
mov
sub
scas
sbb
pop
pop
loop
clc
and
cmpsl
pushf
or
dec
sbb
inc
and
bound
push
jbe
add
shll
pop
cli
xchg
and
sub
fistpll
mov
mov
jl
fs
je
mov
dec
mov
fcomip
and
mov
add
cwtl
cmpsl
fnsave
std
lahf
sbb
cmp
mov
clc
push
lret
outsl
test
jle
inc
adc
and
and
inc
pop
fsubs
lcall
cmp
movsl
ljmp
loopne
push
inc
popf
mov
popa
dec
ret
mov
pop
cmp
ror
cli
lods
pop
sub
inc
cmpsb
inc
aaa
or
lret
ljmp
inc
mov
adc
xchg
das
lret
into
cmp
cli
outsb
mov
xor
xchg
or
sbb
mov
iret
or
call
out
add
iret
jecxz
mov
add
xor
jmp
fs
cmp
mov
or
imul
sub
sub
xor
cwtl
shrl
pusha
jp
dec
inc
xlat
aas
push
push
jecxz
jmp
cmpsl
adc
pop
pusha
jp
push
divb
push
cli
jp
aas
frstor
imul
inc
incl
roll
scas
mov
sbb
adcl
aas
js
jle
xchg
scas
gs
mov
xor
sub
das
adc
mov
leave
pop
test
pop
cli
jg
sbb
leave
push
movsb
mov
sbb
aam
cmp
rclb
icebp
int
je
cli
call
adc
mov
sub
loope
mov
push
or
jl
shrl
sub
mov
scas
cwtl
mov
adc
xchg
jb
and
mov
xor
aam
test
icebp
xchg
inc
iret
lods
and
dec
test
push
pusha
mov
out
jg
out
or
sub
ljmp
rcll
xchg
push
test
mov
sbb
ret
lock
shlw
imul
pop
pop
cmp
mov
mov
aas
mov
dec
mov
xor
fs
sbb
pop
mov
mov
jb
addr16
mov
mov
cmp
lcall
cmc
stos
in
scas
lock
jg
xchg
sbb
aas
lret
sbb
clc
dec
cld
mov
out
jp
mov
or
lahf
lock
inc
shll
push
cli
arpl
mov
push
xchg
fwait
cld
push
or
loopne
jge
das
loopne
cmpsl
call
xchg
jns
fisttpll
add
daa
loop
lret
jne
or
in
mov
repz
std
or
push
popf
inc
in
pushw
sub
in
decb
adc
mov
jle
lcall
movsb
and
loope
lock
mov
sub
add
sbb
jbe
pop
clc
test
in
data16
and
out
call
mov
minps
in
in
lret
dec
cmp
arpl
sub
add
jle
add
sti
jg
call
and
xchg
enter
in
ds
pop
pusha
cltd
mov
jg
pop
push
cmp
dec
roll
push
lds
jne
jp
or
daa
mov
nop
jg
inc
cmc
call
cmp
sbb
sub
pop
jmp
mov
sarl
ja
iret
dec
aad
xor
test
and
outsl
inc
fistpll
sub
or
adc
call
iret
out
loopne
cmc
push
int
jo
movsl
imull
iret
pushf
sbb
hlt
mov
stos
xor
testb
adcl
jns
mov
in
je
mov
inc
xchg
mov
jns
sub
test
dec
daa
pop
dec
inc
out
decb
xor
or
hlt
adc
sbb
add
das
lcall
push
dec
loopne
dec
xor
xor
cli
mov
xchg
ljmp
jg
mov
xor
cmpsb
negb
adc
test
addl
push
das
xor
xor
mov
clc
push
mov
and
xchg
pop
out
gs
mov
lcall
sbb
clc
push
mov
or
mov
lcall
scas
mov
xor
nop
imull
cmp
sbb
jb
mov
or
add
jno
pop
mov
cmp
adc
call
icebp
and
inc
clc
js
out
jmp
pusha
push
add
adc
scas
add
pop
pop
and
ss
icebp
into
test
lcall
fsubrl
sub
mov
ret
xor
sub
jecxz
ljmp
pop
inc
jb
push
ret
pop
test
xor
pop
pop
xorb
hlt
dec
pop
pop
movsb
aad
inc
inc
xchg
dec
mov
fcoms
sarb
ds
and
dec
sahf
sbb
mov
enter
movsl
fisttpll
xchg
cmp
cli
rcr
clc
pushl
imul
lcall
sbb
push
mov
xchg
clc
pushl
mov
bound
stos
shrl
mov
loope
imul
inc
lea
inc
or
es
dec
and
lods
jns
in
mov
sub
test
pushf
outsb
inc
lea
jp
sub
les
add
mov
xchg
fwait
jg
push
or
pop
cmpsl
cmc
jne
imul
lret
mov
xchg
pop
cmpsl
sar
jg
decl
xor
hlt
or
stos
mov
incl
iret
add
sahf
inc
enter
loopne
bound
pushf
xor
xchg
sti
dec
or
jmp
out
movsb
shll
sbb
pop
pop
ljmp
jg
jmp
call
test
testb
or
fcomip
add
das
sbb
cmp
lcall
fbstp
cs
cltd
aad
lahf
shlb
fmuls
insb
push
loop
lcall
sub
sarb
inc
test
adc
pop
lods
pop
xlat
insb
sub
xchg
lock
add
dec
cli
cwtl
dec
inc
and
jecxz
lods
repz
cmc
mov
mov
stos
fldcw
pop
mov
jmp
cmp
lods
int3
cmp
jno
jbe
clc
cli
push
or
insb
popa
in
nop
dec
adc
or
mov
pop
sub
mov
shl
cmp
sbb
sbb
pop
fwait
push
fcomps
cmpsl
jle
mov
xchg
or
decl
inc
inc
jns
iret
data16
sub
mov
hlt
scas
dec
pusha
aad
call
pushf
mov
mov
pusha
push
cmpsb
into
mov
jl
mov
lahf
out
out
inc
in
xchg
in
push
and
sbb
jae
jg
in
int3
dec
lahf
dec
lods
push
xchg
push
jo,pn
pop
in
mov
ja
push
xchg
mov
pushf
dec
jae
mov
in
cli
popa
inc
and
mov
push
icebp
ljmp
dec
pop
pop
in
insb
es
push
lret
pop
fcoms
out
pop
insb
jmp
pop
js
mov
xor
or
daa
movsl
out
mov
repz
sub
mov
lock
movsl
icebp
jae
aad
add
arpl
sbbb
in
sti
fnstsw
sub
leave
xchg
popl
sub
imul
mov
or
cmp
add
mov
lock
add
push
add
lcall
adc
sbb
lods
scas
scas
in
sub
and
hlt
jb
push
push
outsl
xchg
clc
or
push
mov
inc
mov
jl
call
lds
and
jge
cmpsl
lcall
fcmovnu
int
pop
mov
mov
stos
leave
cmpsl
inc
call
data16
xor
int
cld
inc
mov
sbb
sbb
pop
jbe
cmp
lret
cmp
ljmp
popa
aam
sbb
xchg
fsubrs
mov
fisubrl
filds
adc
orl
fisubl
les
aaa
sbb
fdivl
pushl
push
je
in
int3
iret
mov
sub
pop
xchg
paddq
lcall
cld
out
mov
and
xor
hlt
add
sub
imul
mov
stos
and
push
pop
into
add
inc
push
cmp
loope
pop
fs
push
inc
ljmp
lods
fnstsw
add
in
loop
repz
in
cmc
aaa
fs
scas
mov
or
sbb
pop
xchg
jnp
mov
add
in
insl
mov
lret
aaa
cmpsl
mov
inc
push
call
sahf
insb
sbb
repz
adc
mov
push
pop
push
xchg
mov
inc
adc
dec
clc
jne
fistps
mov
lcall
inc
fildll
inc
and
daa
adc
shlb
js
loopne
decl
xor
data16
bound
xchg
mov
push
addl
mov
mov
push
incl
rclb
popa
sbb
mov
inc
iret
std
inc
ljmp
inc
test
shrl
jae
clc
rcl
in
and
out
sub
mov
adc
loopne
xchg
pop
push
push
loopne
mov
shrb
icebp
out
loopne
fistl
outsb
add
gs
in
xchg
dec
inc
mov
out
xchg
or
fsubr
or
pop
lock
incl
fwait
push
inc
lahf
leave
lret
ucomiss
mov
sbb
xchg
ljmp
xor
sub
mov
or
xchg
push
add
cmp
inc
outsl
xchg
ret
movsb
jg
aaa
mov
in
fwait
inc
addr16
mov
xchg
out
das
hlt
das
lea
xor
scas
into
pop
jmp
cwtl
sub
dec
loop
incl
mov
filds
xchg
pop
dec
mov
pusha
loopne
xchg
mov
call
add
mov
push
cmpsl
dec
lret
push
imul
repz
jg
pushl
stos
in
jecxz
xchg
inc
addr16
in
xor
insl
pop
jb
push
jo
mov
das
std
repnz
bound
lock
or
lds
ja
clc
mov
adc
fs
pop
push
arpl
decl
pop
pusha
jecxz
adc
inc
xor
add
or
call
aad
jo
stc
sti
cs
iret
and
inc
adc
jg
mov
repnz
dec
cwtl
hlt
insl
ljmp
push
in
or
cli
dec
mov
cltd
cmpl
inc
jle
inc
ljmp
subb
mov
sbb
cmc
sar
or
mulb
sub
push
jmp
fstl
mov
jmp
adc
ljmp
stc
fidivs
adc
cmp
xchg
inc
outsb
test
scas
mov
lods
fcomip
ljmp
pop
out
scas
and
popf
mov
repz
sbb
loop
xorl
inc
cmpb
sbb
ljmp
mov
imull
or
in
call
scas
cmc
dec
sti
or
dec
inc
lcall
les
mov
dec
popf
jg
push
and
out
cmc
lahf
cmc
dec
call
push
push
sbb
push
das
scas
stc
cwtl
mov
aad
cmc
sbb
jg
fildl
nop
addr16
test
dec
xchg
aad
stc
sar
fistl
mov
std
std
mov
xchg
sub
mov
das
int
push
pushf
mov
pop
add
xor
stc
outsl
sub
decl
in
jge
stc
in
dec
dec
dec
mov
add
sar
jmp
fsubrl
test
cwtl
push
xor
add
inc
push
movsl
repz
arpl
mov
xor
xchg
or
inc
stc
add
jmp
adc
inc
insl
xchg
repnz
jmp
shlb
jo
inc
mov
ror
lods
and
or
jmp
push
sbb
lods
int
jno
in
test
inc
adc
aam
pop
out
loope
and
sub
inc
add
fsub
inc
ss
and
pushl
or
mov
push
inc
test
ljmp
gs
mov
ret
jbe
mov
dec
sub
or
jmp
mov
xor
sub
jge
mov
icebp
cmp
lret
and
aam
pop
jg
fsubrl
adc
test
sahf
loope
into
int
add
test
push
push
fdivrp
inc
mov
movsl
inc
or
insb
adc
xchg
int
call
ret
js
lcall
or
das
dec
pop
je
inc
mov
jae
or
loopne
pop
push
enter
pop
out
and
test
jno
inc
add
lret
mov
out
test
adc
mov
push
fistpl
rorb
ret
subb
pop
ret
jnp
jmp
and
dec
dec
lret
or
and
je
in
sub
cli
and
mov
push
pop
lret
mov
std
xchg
fbstp
sahf
adc
out
insl
push
xchg
fs
fxch
incl
cwtl
lcall
insl
aaa
xchg
push
mov
ret
stc
incl
jno
or
ror
dec
sub
push
addr16
xor
ljmp
fldt
js
dec
cwtl
and
aam
push
ret
push
jecxz
daa
xchg
push
testl
jge
inc
inc
es
in
jmp
cwtl
arpl
add
dec
fcompl
pusha
pop
xchg
ret
jo
lahf
xchg
in
das
sbb
sub
pop
push
pop
shll
cld
sti
jl
jge
mov
fildl
push
dec
or
in
xchg
out
cwtl
xchg
xchg
ja
push
jne
repnz
pushl
imul
push
shll
and
fnstenv
mov
jge
inc
lcall
push
incl
into
pop
jle
cmp
stos
es
lret
outsb
mov
loope
ds
push
repz
nop
gs
movsb
mov
scas
call
pop
and
sarb
xorb
lcall
xchg
mov
nop
pop
mov
call
sbb
mov
fstl
fmul
dec
mov
push
mov
inc
pop
loope
into
pop
pop
es
xor
outsl
lret
jg
xor
pop
cmp
sub
fmuls
fwait
jg
jecxz
outsb
sub
cwtl
jmp
cs
testb
das
insb
lahf
inc
dec
out
add
aam
not
jae
push
test
out
cmp
dec
or
push
adc
dec
dec
fisubrl
mov
sbb
or
data16
mov
aas
ror
sub
jg
adc
loopne
ss
xor
push
mov
pop
popf
add
imul
ljmp
mov
mov
cmc
pop
lahf
enter
stc
ljmp
mov
clc
jle
cmc
mov
mov
sub
push
aaa
push
leave
sbb
dec
xchg
push
pop
jo
inc
mov
mov
and
dec
cltd
mov
cmp
jb
xchg
frstor
pushw
mov
dec
jbe
nop
xor
xlat
fidivl
loop
inc
stos
pop
shll
mov
and
sar
aas
xchg
repnz
out
out
inc
push
mov
call
out
ljmp
and
cs
outsl
negb
inc
shlb
or
lds
data16
pop
cli
popa
mov
iret
outsb
insl
inc
and
jo
ret
in
cmp
inc
sub
sbb
xchg
push
outsl
mov
ret
movsb
cmpsl
jecxz
inc
stos
jmp
aas
jno
inc
lea
mov
imul
xchg
xchg
dec
ljmp
fstpl
lods
cmp
dec
xchg
out
jae
add
cmp
lcall
insl
dec
leave
outsb
mov
jns
and
decl
mov
dec
pushl
xchg
test
fidivrl
movsb
scas
in
dec
stos
mov
mov
enter
xor
xchg
test
xchg
lea
popf
sahf
cs
pop
call
call
imul
or
xlat
outsl
insb
mov
lods
leave
daa
pop
xchg
out
cmpsl
add
jg
movsb
stos
js
mov
outsb
mov
pop
pop
gs
dec
push
mov
jbe
xchg
add
outsb
push
fidivrl
mov
xor
jl
pop
decl
outsb
cmp
je
mov
pop
ds
rcll
mov
into
es
pop
mov
cs
bnd
rcrl
pop
insb
stc
xlat
and
in
sbb
decl
pop
bound
loope
cmp
jg
inc
xchg
mov
mov
loopne
inc
stos
mul
pop
stc
ds
call
shrl
xchg
jge
das
sub
xor
outsb
outsb
push
sub
and
dec
adcl
cs
imulb
jmp
mov
push
je
mov
aas
xchg
stos
push
mov
add
aas
loope
jg
clc
jns
movsl
pop
mov
jbe
cwtl
cli
push
imul
mov
les
pop
sub
icebp
pop
push
mov
jno
mov
cli
jbe
or
push
and
ds
pop
mov
ljmp
cs
scas
push
into
aam
sbb
mov
ret
cli
xor
xor
iret
ret
and
add
dec
repz
jg
inc
mov
jge
icebp
mov
push
aam
push
int
jg
cs
test
xor
or
pop
andl
outsl
loope
call
inc
adcb
sbb
dec
cmp
push
xor
add
pop
or
jne
decl
add
aaa
loope
cmp
and
xchg
mov
jge
movsl
insb
mov
adc
dec
out
adc
xor
mov
in
pop
cmp
dec
test
jmp
dec
adcl
inc
arpl
fdivrl
xchg
add
or
sub
into
pop
xchg
fsts
sub
nop
sbb
xchg
cli
in
xor
addr16
outsb
dec
cmp
insb
push
mov
popf
fscale
out
cli
sbb
xchg
data16
lods
call
movl
cld
decl
aaa
lcall
rcrb
mov
xor
decl
daa
jp
in
cs
outsb
fmull
dec
mov
aaa
push
or
mov
ljmp
repz
push
ja
cld
repz
pop
fists
lcall
pop
dec
inc
lret
in
and
pop
shlb
xchg
inc
lods
or
xchg
mov
js,pn
fs
out
decl
je
add
sub
mov
add
push
flds
mov
jo
mov
test
les
loopne
cld
sbb
xor
push
aas
lcall
int
add
add
loopne
daa
xor
push
xor
fs
inc
push
test
mov
xchg
xor
xor
xor
xor
xor
xor
std
pushl
mov
shll
or
dec
xor
xor
xor
xor
xor
xor
xor
xor
icebp
ljmp
xor
mov
xor
xchg
sub
aam
test
pushl
pop
aaa
dec
aaa
push
aaa
pop
aaa
gs
jb
getsec
popf
aaa
stos
pushl
mov
cmp
cmp
mov
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jae
jp
mov
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sahf
cmp
aam
sbb
cmp
and
fisttps
cmp
ljmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
pushl
cmpsl
cmp
aad
ljmp
ds
aas
sbb
daa
aas
sub
mov
fstps
add
dec
in
push
xor
xor
xor
xor
xor
push
xor
xor
xor
xor
je
stos
xor
xor
jns
mov
incl
aaa
xor
xor
add
or
popa
ss
test
mov
aaa
call
push
dec
aaa
push
aaa
js
fnstenv
fbstp
or
sub
lods
cmp
cmp
cmp
cmp
loop
aaa
clc
cmp
cmp
push
cmpb
cmp
cmp
cmp
push
in
pop
inc
cmp
cmp
aas
cmp
pop
cmp
cmp
jl
cmpl
cmp
cmp
cmp
sub
push
cmp
arpl
push
jno
js
jg
cmp
add
inc
cmp
mov
xor
aas
ds
decl
ds
or
aas
and
sub
inc
aas
dec
aas
insl
aas
and
out
js
jg
lahf
aas
cmpsb
aas
mov
mov
xor
xor
xor
xor
in
loop
outsb
pushl
fdivs
fnsave
in
neg
ss
aaa
in
xor
pop
cmp
mov
leave
mov
sarb
leave
dec
cmp
mov
cmp
push
cmp
cmp
sbb
cmp
popa
daa
lcall
cmp
sub
cmp
cmp
cmp
cmp
cmp
cmp
cmp
clc
cmp
push
cmp
je
test
call
mov
lcall
leave
cmp
int
fnstcw
push
aas
or
aas
rcrl
dec
mov
xor
xor
xor
jl
xchg
xor
loop
mov
adc
sbb
lret
xor
xor
xor
xor
fildll
mov
xor
scas
add
pushl
daa
xor
test
pop
fnsave
out
clc
ljmp
xor
cmp
mov
mov
mov
dec
aaa
mov
cmp
ljmp
cmp
push
cmp
cmp
cmp
cmp
cmp
cmp
ja
jg
cmp
mov
cmp
cmp
cmp
cmp
cmp
ds
cs
jne,pt
mov
or
ds
aas
dec
mov
mov
jg
sub
or
adc
sbb
push
xor
sub
xor
xor
insl
xor
decl
mov
mov
xor
xor
arpl
jl
lcall
xor
xor
xor
xor
xor
xor
xor
insb
xor
mov
mov
xor
xor
xor
shll
adc
sub
pushl
pop
xor
mov
mov
lea
fcomip
pushl
ss
or
aaa
cmp
data16
jae
jle
mov
xchg
aaa
test
pushl
shll
out
jmp
stc
aaa
add
sbb
xor
inc
cmp
test
lcall
mov
cmp
cmp
cmp
cmp
cmp
mov
aaa
push
outsb
pop
mov
cmp
cmp
bound
fwait
call
cmp
cmp
cmp
cmp
cmp
cmp
cmp
leave
mov
jmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jg
repz
cmp
cmp
push
cmp
cmp
cmp
cmp
sbb
jb
mov
sarb
ds
ds
ds
xor
jg
aaa
lret
xor
xor
mov
pop
xor
outsl
cmp
fnstenv
cmp
cmp
stc
and
outsl
mov
lcall
xor
xor
and
std
pushl
ja
mov
mov
mov
aaa
jp
jecxz
cmp
cmpsb
decl
ja,pt
mov
sbb
mov
aad
fnstsw
data16
movsl
push
xor
xor
xor
pop
jg
pushl
pop
xor
js
test
mov
xchg
xor
xor
xor
xor
decl
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
in
clc
mov
xor
xor
xor
xor
mov
xor
pushl
dec
xor
mov
xor
jmp
push
das
insl
mov
stos
ss
ss
fnstsw
add
getsec
adc
sub
xor
inc
mov
add
mov
aaa
faddl
aaa
out
xchg
mov
aaa
push
cmp
cmp
cmp
cmp
inc
cmp
cmp
cmpb
mov
scas
mov
sbb
cmp
cmp
loope
cmp
mov
cmp
cmp
cmp
and
imul
or
xor
cmp
inc
cmp
dec
cld
jg
mov
cmp
into
cmp
outsl
cmp
movsb
mov
pop
movsl
add
aaa
lret
inc
jae
lock
xor
imul
xor
mov
and
jo
or
dec
sbb
aaa
rcl
fildll
xor
xor
xor
xor
xor
das
sbb
mov
int3
xor
xor
and
xor
mov
enter
ss
lahf
fucom
ss
inc
dec
sbb
and
sub
cs
aaa
dec
stos
xor
jg
pop
aaa
popa
aaa
addr16
xchg
aaa
fwait
aaa
mov
aaa
mov
mov
aaa
cld
aaa
jl
lea
jmp
iret
mov
in
adc
arpl
jnp
cltd
mov
mov
imul
rorl
inc
xlat
ja
icebp
mov
mov
aad
cmp
cmp
add
cld
cmp
cmp
or
rcr
out
or
cmp
aas
pop
pop
xor
sbbb
adc
stos
mov
jg
jns
mov
cltd
add
pop
pop
popf
rcr
neg
cltd
cmp
rcrl
cltd
cmp
popf
fstps
aaa
test
or
xchg
sub
out
jl
sbb
pop
leave
enter
add
add
xorb
nop
and
inc
daa
pop
and
add
push
fildl
js
pop
xor
mov
push
dec
jle
and
cmp
inc
aaa
loopne
outsb
add
je
sti
sbbb
nop
jmp
jge
push
inc
cwtl
and
fs
and
fldcw
cmp
jnp
or
dec
mov
mov
jae
arpl
sbb
jae
daa
ret
mov
insb
adc
test
cs
inc
push
aad
or
and
jno
inc
and
inc
and
in
jb
inc
and
or
jl
and
push
add
inc
pop
and
inc
and
sbb
inc
and
add
stos
pop
nop
daa
nop
sbb
push
repnz
add
hlt
cld
xchg
pop
dec
push
jno
adc
nop
pop
addb
pop
push
outsl
dec
imul
jae
push
jno
push
sub
push
xchg
test
jno
cmp
dec
jl
and
jns
xor
inc
and
and
adc
adc
cmp
insb
inc
and
and
repnz
sub
jl,pn
dec
inc
into
adc
push
sbb
push
cltd
aas
jno
inc
and
ds
adc
add
adc
push
call
aas
movsb
jno
adc
add
sub
xor
insl
push
data16
iret
mov
rcll
add
sti
adc
into
out
mov
out
in
sub
mov
xor
xor
xor
mov
and
dec
dec
enter
xor
inc
sbb
imul
adc
rcll
fcomps
stos
jno
mov
stos
push
jnp
and
pop
add
dec
jno
xor
repnz
add
mov
and
dec
bnd
add
xor
adc
pop
add
inc
and
fisubl
add
addb
inc
xchg
inc
push
xchg
and
and
dec
sbb
add
pop
gs
inc
pop
push
rep
or
add
mov
inc
push
rorl
insb
das
mov
scas
mov
int3
or
adc
add
mov
and
out
leave
adc
or
les
pop
jae
cmp
mov
mov
fcoms
cmp
adc
stos
sub
ja
fstpl
push
xlat
cmp
mov
lods
cld
sub
int3
push
lods
jnp
dec
lock
add
fcmovnb
je
push
sbb
shr
cmp
out
testb
pop
push
ss
sti
jne
sbb
pusha
or
mov
mov
pop
popf
hlt
xor
add
push
mov
test
jno
mov
stos
xor
hlt
mov
and
cld
inc
or
aaa
cmp
fcmovnb
mov
sti
fiadds
sbb
shll
sbb
or
push
xchg
push
andl
fisttps
add
cli
insb
mov
xchg
decb
les
add
jb
mov
add
mov
add
xchg
dec
xchg
flds
insl
xor
lret
mov
push
inc
dec
insl
insl
xchg
add
insb
lret
mov
add
insb
dec
dec
cmp
xor
in
or
rorb
nop
loopne
loope
shll
gs
dec
dec
shll
gs
add
xor
insl
gs
rol
faddl
mov
loopne
mov
inc
jns
incb
adc
jle
lea
cld
xor
and
sub
arpl
aaa
dec
call
je
fwait
adc
loop
or
jg
popa
jae
and
lea
push
push
mulb
out
sbb
xchg
xor
in
or
imul
jmp
lea
push
push
jno
dec
sbb
jne
das
adcb
sub
stc
mov
shrl
add
mov
mov
sahf
daa
mov
dec
xor
lods
fcomps
jo
xor
sub
and
xor
mov
xchg
lcall
adc
add
or
pop
and
call
mov
mov
sbb
pop
xor
fstps
adc
xchg
mov
icebp
pop
in
fstl
push
ljmp
enter
cs
dec
ja
cmp
gs
aaa
pop
jecxz
inc
add
cmp
jl
mov
lock
sbb
add
and
scas
or
xchg
dec
int3
jg
mov
sarl
je
mov
sub
mov
mov
lret
add
jb
outsl
mov
lret
leave
outsb
gs
cs
es
gs
aam
aad
push
les
insb
xlat
popa
jne
mov
lret
outsb
arpl
cmp
test
lcall
arpl
or
jg
je
sti
xor
call
sbb
rorl
mov
adc
hlt
sub
int
outsb
adc
dec
or
lret
nop
pop
pushf
adc
push
into
jp
leave
leave
leave
iret
rcl
shl
movsb
and
roll
jae
pop
shll
dec
outsl
popa
aas
std
fs
mov
inc
push
bound
jns
inc
inc
inc
inc
js
loop
push
mov
aam
int3
xlat
cmp
dec
daa
xchg
pop
ss
mov
sti
mov
push
inc
mov
sbb
jl
xor
das
xlat
push
jp
dec
ret
push
jge
inc
roll
adc
cmp
je
jns
jne
nop
and
cld
sub
xchg
pop
call
aaa
mov
lcall
sbb
dec
push
decl
jne
in
sbb
xchg
inc
and
push
mov
sub
in
push
call
das
add
in
xchg
adc
js
insb
ds
xor
rolb
mov
xchg
xchg
xor
xor
xchg
xchg
xchg
xchg
and
inc
xor
cmp
and
aam
mov
push
fdivs
jae
inc
mov
nop
push
xchg
std
pop
cmp
enter
std
xchg
std
xchg
std
push
push
ds
gs
mov
jle
jo
outsl
jb
es
mov
jb
jnp
sub
std
icebp
add
shrb
pop
push
mov
mov
add
mov
mov
sbb
call
imul
sti
bound
in
dec
pop
movsb
imul
out
leave
adc
ja
repz
cmc
div
call
pop
or
es
add
jmp
xor
out
cltd
movsb
sub
jb
inc
inc
adc
in
es
outsl
outsb
imul
lahf
mov
fldcw
popa
pop
xchg
gs
jne
arpl
dec
shll
or
or
xor
jno
addr16
outsb
cs
stos
mov
mov
pop
xchg
js
insb
outsl
lret
mov
inc
mov
into
iret
shrb
mov
js
bound
fs
sbb
mov
dec
fsubrs
xchg
push
add
pop
add
int
nop
int
add
add
aam
xchg
data16
add
fldenv
fs
call
mov
jne
shrb
and
adc
dec
and
pop
popf
dec
xchg
mov
jge
faddl
and
pop
add
in
push
dec
addr16
shll
or
mov
lds
fldt
push
xchg
xchg
mov
repnz
cmp
jecxz
iret
jge
jbe
pop
repnz
sub
mov
adc
out
jne
adc
push
jo
cmpsb
xor
or
sbb
lods
push
push
jae
jg
cltd
test
dec
repnz
push
aam
add
pop
inc
shrb
es
data16
add
in
les
mov
push
shr
sahf
sbb
add
push
fbld
clc
enter
mov
shlb
mov
leave
inc
data16
daa
push
sbb
xorl
jbe
adc
js
dec
sbb
bound
lods
test
dec
push
mov
aaa
dec
mov
sbb
stc
out
int3
sbb
int
adc
cmp
adcb
out
mov
neg
into
sbb
mov
pop
mov
push
xchg
xchg
in
mov
mov
or
jo
add
cvtps2pi
xchg
mov
pop
pop
or
add
fdivrp
inc
sbb
push
bswap
adc
pop
addb
inc
and
subl
add
sbb
loopne
adc
loop
adc
xchg
pmulhuw
adc
mov
and
pop
inc
and
movsb
sbbb
enter
cmp
mov
inc
and
pop
xchg
inc
and
add
adc
adc
adc
ja
jo
inc
push
xchg
push
sbb
pop
inc
dec
push
andb
sbb
test
add
sbb
popf
lods
int3
add
adc
out
jnp
adc
jmp
add
jae
sub
mov
imulb
loope
mov
push
pop
cwtl
inc
mov
scas
adc
cwtl
inc
xor
shlb
repnz
cmp
or
mov
add
inc
push
pusha
insb
je
lcall
or
sub
cmpsb
shl
lock
fmulp
dec
shll
mov
jb
inc
jae
xchg
add
jle
cmp
scas
sbb
stos
pop
add
cmpsb
imul
sub
jnp
imulb
xchg
aaa
aaa
xor
xor
and
dec
dec
jo
dec
xor
mov
jae
pop
adc
sub
inc
push
mov
mov
pop
inc
outsl
add
insb
push
outsl
pop
or
jno
mov
outsl
test
dec
popa
jns
jne
adcb
imul
jge
mov
lcall
js
imul
lods
js
push
dec
pop
clc
mov
push
dec
jae
push
sub
push
push
dec
sub
mov
add
fcomps
add
divb
adc
inc
rolb
jbe
sbb
xchg
movsb
inc
sub
xor
enter
inc
adc
notl
add
xchg
ret
sbb
fbld
nop
adc
xchg
adc
mov
dec
pop
push
mov
push
test
sub
xlat
cmp
jne
iret
mov
sbb
mov
xor
movsb
sub
sbbl
icebp
inc
ret
and
test
fdivl
jmp
jb
or
rcr
mov
outsl
es
mov
lods
dec
mov
sub
adc
push
xor
pusha
push
addr16
ret
xchg
dec
inc
mov
mov
arpl
mov
push
outsb
jb
lahf
adc
outsb
and
js
adc
negl
push
movsb
mov
cmp
mov
dec
jnp
and
push
pop
jno
inc
mov
pusha
inc
lods
adc
and
and
dec
inc
adc
xchg
adc
xchg
add
and
xchg
mov
inc
mov
inc
adc
mov
clc
lea
insl
insl
dec
jae
jg
bound
sbb
inc
add
add
pusha
add
mov
jg
jns
dec
mov
dec
xchg
es
and
sbb
mov
push
imul
xchg
test
jbe
pop
mov
lock
cld
add
dec
imul
imul
insb
lcall
or
je
xlat
je
jge
add
cld
mov
mov
add
addl
xchg
pop
adc
add
or
insb
jl
scas
or
inc
leave
jne
or
pop
adc
and
jb
mov
jne
jno
jg
mov
mov
mov
pop
adc
xor
clc
push
in
scas
dec
outsl
adc
jne
or
pop
insb
dec
and
adc
packssdw
mov
fxch
sub
jbe
test
jne
dec
adc
sbb
movq
jae
jo
mov
pop
jns
pop
push
orl
sbb
jns
or
pop
fcmovnb
in
inc
xor
je
sub
cmovno
imul
add
sbb
jae
adc
xor
adcb
xor
ret
add
lret
lods
mov
add
xor
add
pop
add
jmp
pop
test
inc
cmovns
popf
jg
mov
jae
shrb
sub
outsl
add
jb
out
cmp
dec
pop
jecxz
mov
or
or
jnp
movsb
jmp
cmp
xor
jecxz
pop
mov
scas
inc
and
xor
jae
and
cmp
jo
popa
jns
popa
and
xchg
push
addr16
outsb
lods
arpl
inc
imul
and
pop
push
loope
jb
mov
add
push
pop
mov
cmp
fnstenv
xor
fldenv
fisttpl
xor
insb
popf
xchg
mov
dec
or
lds
add
pop
adc
shrb
jnp
pop
xor
xor
je
mov
pop
fs
fsubs
or
daa
dec
dec
and
xlat
outsb
xchg
mov
lea
adc
dec
fcomps
fs
outsl
pcmpeqw
test
dec
je
and
jne
pop
dec
xor
pop
imul
arpl
in
push
mov
jmp
outsb
push
insb
cmpsl
xchg
out
add
add
add
shl
push
inc
fbld
xor
fs
das
inc
or
mov
shlb
inc
incl
xlat
push
xor
jle
lea
stos
xor
xor
xor
hlt
ljmp
mov
fwait
xor
xor
xor
xor
xor
xor
xor
xor
mov
enter
aam
divb
xor
std
xor
mov
dec
ss
jg
mov
fwait
dec
rolb
ss
aaa
addb
decl
aam
jecxz,pn
cmp
xchg
mov
cmp
incl
cmc
cmp
cmp
cmp
cmpl
dec
cmp
hlt
cmp
lret
cmp
cmp
stos
cmp
or
out
test
jo
cmp
dec
xor
jp
xchg
xchg
xor
xor
xor
jg
push
xor
jne
jg
test
mov
lahf
xor
xor
xor
xchg
sub
inc
hlt
xor
fnstenv
add
iret
push
sub
std
jmp
ss
divb
and
aaa
mov
cmp
add
call
cmp
cmp
cmp
cmp
cmp
cmp
or
pop
adc
rdmsr
or
sub
add
add
add
adc
add
lcall
mov
movsb
bound
adc
mov
mov
or
ficompl
jnp
adc
jne
mov
bound
or
push
mov
outsl
jne
push
gs
xor
mov
cmp
add
les
push
add
add
push
push
add
aam
add
test
aam
push
add
lcall
fnstenv
sub
movsb
mov
add
and
outsl
mov
addb
adc
out
insb
sub
sbb
or
add
and
add
dec
rep
dec
stos
pushf
inc
xchg
mov
add
inc
dec
inc
iret
add
call
mov
mov
adc
stos
adc
xchg
out
pop
inc
mov
pop
pop
inc
aaa
or
les
inc
enter
and
loopne
xchg
lods
xchg
and
nop
xor
daa
inc
xchg
test
nop
xchg
adc
adc
push
dec
mov
cmp
or
daa
jo
and
add
add
dec
adc
and
popa
add
fisttpll
xchg
and
adc
mov
sbb
add
clc
cltd
add
add
add
add
add
add
add
popa
add
call
int
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
