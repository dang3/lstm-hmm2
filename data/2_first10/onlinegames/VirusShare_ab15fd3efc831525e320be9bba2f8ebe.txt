and
add
mov
add
add
and
add
in
sub
add
movsl
in
incl
push
push
push
pop
xor
lea
mov
gs
stos
stos
stos
jge
stos
fiadds
jns
call
and
add
jb
mov
test
call
loopne
dec
and
test
mov
jle
jmp
mov
push
lea
push
sub
das
mov
sbb
clc
push
add
mov
movzbl
push
je
mov
fstl
call
popf
js
push
mov
mov
mov
mov
and
push
push
push
movsl
aas
and
mov
ss
mov
xor
stos
pop
pop
push
pop
pop
pop
leave
ret
mov
push
adc
adc
mov
cltd
jmp
or
and
push
push
push
mov
mov
push
test
int3
sti
mov
pop
pop
pusha
lahf
or
test
in
sarb
popf
sti
adc
jo
mov
jmp
cmp
inc
jl
mov
arpl
int
mov
pop
daa
sbb
cmp
push
or
fwait
adcb
shrl
addr16
push
ljmp
jne
jae
mov
loope
cs
insb
add
hlt
add
insb
mov
je
mov
cmp
je
mov
adc
rolb
rorl
ret
les
jo
sbb
gs
je
dec
enter
sbb
jmp
lret
int3
inc
ret
loope
cmp
outsb
into
arpl
outsl
shlb
sub
or
aam
dec
add
dec
mov
mov
iret
mov
pushf
movsb
movsb
movsl
cmp
repz
cmpsl
test
stos
stos
repz
rep
lods
scas
scas
mov
repz
mov
mov
mov
clc
lea
mov
push
mov
ret
mov
vmread
pusha
or
popa
add
popa
lea
push
cld
push
call
or
adc
addr16
mov
jo
add
dec
int3
test
rolb
nop
push
cmp
lea
pushl
fcom
cmp
in
pop
pop
add
outsb
add
add
cmp
jmp
mov
imul
add
and
orb
movsl
mov
cltd
es
arpl
fcoms
dec
aad
roll
clc
add
movl
into
inc
dec
decl
iret
jnp
jne
gs
iret
repz
xor
out
repz
cmc
testb
popa
shl
loope
loop
loope
cmp
outsb
in
in
out
out
mov
fs
ror
jmp
adc
push
mov
arpl
mov
dec
std
or
jb
mov
push
mov
mov
push
mov
loope
dec
roll
ret
xor
xor
sbb
mov
mov
lock
jmp
dec
lock
cmp
jno
pop
add
shrb
mov
jne
or
sbb
js
cmpb
fdivs
jo
addr16
pop
adcb
adc
mov
push
or
xchg
outsl
mov
push
enter
shr
pop
push
hlt
dec
call
daa
add
je
sub
aam
addr16
jno
aad
imul
ret
loope
jne
jae
fsubl
push
sbb
insb
push
inc
inc
iret
rolb
or
pop
mov
jno
cmpsl
mov
jae
je
jno
out
jne
jbe
push
out
push
ja
js
jns
loop
cmpsb
jp
jnp
mov
jl
insl
jle
xor
mov
ret
popa
pop
inc
xorl
cmp
test
inc
xchg
push
mov
jnp
loope
inc
mov
jge
pushf
xor
adc
mov
addr16
lea
xchg
loope
popa
xchg
jbe
gs
dec
loope
cmp
addr16
gs
push
sbb
xchg
lcall
insb
mov
in
sahf
lahf
aam
inc
into
test
les
mov
insb
leave
jne
cmp
lret
push
int3
je
popa
into
jb
test
loope
je
jne
jo
mov
sbb
iret
repz
cmp
pop
hlt
cmp
inc
movsl
imul
jecxz
imul
fcompl
xor
adc
aaa
leave
lea
fstpt
les
jno
push
push
mov
jno
rcrb
data16
imul
adc
adc
insl
add
call
addr16
gs
into
mov
bound
xor
rolw
scas
push
add
movb
and
icebp
pushf
xchg
test
push
fsubs
aam
and
std
shlb
sub
dec
add
or
inc
int3
jo
jbe
inc
dec
xor
push
xor
mov
popa
in
sbb
cmp
sub
add
shll
mov
jl
lods
xor
sub
xor
cltd
aam
or
cmp
jg
or
mov
fcompl
add
or
rolb
jl
bound
inc
sub
inc
push
push
andb
push
stos
sbb
inc
loope
cmp
outsl
cli
ja
cs
gs
or
ret
sbb
inc
adc
xor
pusha
pop
push
cmp
or
lds
cmp
je
pop
jne
xchg
xchg
or
neg
sbb
jmp
cld
pop
mov
fs
adc
in
movsl
push
add
fisubrs
mov
inc
lods
adcl
loope
sti
fsubl
push
push
xchg
mov
mov
fiadds
ffreep
loopne
loope
loop
jecxz
rolb
add
sub
mov
cwtl
jmp
or
sub
sbb
cmp
push
sub
clc
das
rol
ret
loope
sub
push
mov
or
in
xor
lea
mov
bound
sbb
mov
aad
mov
xlat
fcomp
push
xor
xor
jl
pop
int3
int3
int
cwtl
in
es
nop
sbb
and
shrl
sarb
pushf
push
pop
sbb
pushf
sbbl
xchg
icebp
mov
clc
mov
cmp
movsl
dec
cmpsb
cld
cmpsl
push
rol
aad
fdiv
push
push
xchg
fxtract
cmc
clc
testb
flds
das
sbb
insl
stc
mov
jbe
jno
in
pop
in
in
sbb
jo
out
out
call
jmp
hlt
push
push
push
hlt
push
sbb
shll
or
das
mov
mov
and
mov
scas
mov
inc
push
into
sbb
sbbl
ret
xor
test
test
xchg
in
jp
push
mov
mov
test
jb
xchg
fimuls
sub
inc
insl
cmp
out
adc
mov
dec
icebp
or
faddl
sbb
xor
fs
push
mov
mov
andb
or
int3
movsl
js
xlat
popa
mov
pop
je
push
push
test
mov
add
cmp
frstor
mov
inc
fwait
les
pop
pop
mov
or
fsubs
mov
lcall
add
mov
pop
fs
fcompl
pop
loope
lods
mov
and
lock
addr16
shl
xorb
dec
enter
mov
test
subb
movl
jo
incl
dec
call
popa
in
sub
inc
and
sub
push
mov
je
xor
hlt
or
jb
add
je
push
and
adc
orl
push
or
shlb
lcall
in
loope
popf
fcomps
into
xor
jle
sub
adc
ret
dec
push
ret
sahf
fadds
push
shlb
xlat
fcmove
dec
nop
mov
shlb
flds
adc
push
lret
push
push
cmc
or
push
mov
sti
mov
cld
push
dec
mov
adc
adc
dec
cmp
mov
imul
subb
movsb
les
pop
mov
mov
dec
mov
pop
cmp
adc
pop
fldt
insb
mov
inc
aam
pop
cld
push
insb
outsb
rclb
and
fmull
pop
data16
pusha
push
shll
pop
pop
incb
add
cld
in
xor
add
push
into
jecxz
mov
push
xor
cmp
push
in
test
cmp
pop
ja
cmp
in
cmp
repz
and
ret
add
cmpsb
xchg
pop
adc
jns
das
inc
dec
push
dec
inc
mov
fs
cmp
xchg
mov
mov
mov
ret
loope
jo
insb
mov
mov
mov
jno
sbb
mov
mov
popa
pushf
out
int3
xchg
cmp
inc
int
into
jno
sbb
iret
popa
shrb
outsb
rorb
xchg
roll
xor
idivl
jnp
jae
fsubp
jns
call
jo
sbb
mov
js
cmp
xchg
movsb
xor
xor
repz
stos
cmp
jb
mov
ret
pop
push
and
in
sahf
adc
dec
and
inc
mov
mov
es
daa
jb
loop
sub
out
aaa
arpl
sub
sub
sub
repz
das
xor
sub
inc
xor
xor
je
xor
xor
loope
xorl
push
xchg
push
lock
arpl
repnz
jecxz
loop
push
pop
add
cmp
xchg
or
push
or
sub
outsl
or
insb
je
cmp
push
seta
aam
adc
into
jecxz
repz
adc
pop
xor
aaa
adc
dec
pop
mov
data16
sbb
sbb
xchg
les
push
repz
mov
gs
xor
cmp
xor
inc
adc
loopne
jb
xor
mov
adc
mov
xchg
outsl
cmp
xchg
jae
jae
mov
loope
xor
gs
adc
popf
call
and
imulb
ljmp
in
xchg
jbe
icebp
nop
call
push
or
cltd
mov
popa
jecxz
vpunpckldq
push
mov
sbb
gs
xor
addr16
imul
js
in
mov
insl
outsb
fadds
fnstenv
xor
sbb
fnsave
fisubrs
fbld
loope
sbb
and
sbb
mov
roll
ret
outsb
les
cmp
adc
outsl
arpl
mov
jae
mov
jae
lret
in
dec
repz
lea
icebp
xor
imul
jne
insb
push
jl
div
jne
jns
pop
inc
jl
js
repz
hlt
dec
dec
daa
ds
push
dec
dec
adc
push
mov
push
xchg
out
push
arpl
lods
xor
imul
pop
mov
pop
sub
icebp
pop
cld
inc
insl
outsb
jns
pop
insl
and
xor
rcl
fprem
cmp
je
jmp
js
movsb
ficomps
or
lock
cld
je
movsl
mov
mov
es
add
movsl
lds
push
hlt
jnp
pop
xchg
xlat
pop
stos
loope
xor
jne
js
lock
call
in
fwait
or
jmp
mov
jne
and
in
jne
push
push
mov
out
test
dec
loope
and
jno
je
cs
xlat
lods
jo
lea
jmp
or
js
sbb
rcl
push
addr16
pop
push
mov
push
cmp
or
add
mov
xor
adc
and
dec
dec
test
enter
pop
fsts
jmp
insl
in
mov
call
hlt
and
sbb
sub
inc
mov
pop
les
cltd
sub
lods
inc
mov
ljmp
je
jae
push
sti
add
imul
inc
xorb
cmp
and
mov
or
and
imul
fistpll
popf
test
mov
sbb
xchg
push
push
pop
and
mov
enter
jnp
xchg
hlt
test
dec
xchg
jmp
cmpl
fadds
pop
aam
jne
mov
shlb
push
mov
dec
cmp
lock
mov
loop
loopne
xor
xchg
inc
stos
mov
push
xchg
add
and
cmp
je
cmp
jb
dec
dec
cmpw
sarl
dec
push
mov
jg
pop
jne
push
xchg
call
gs
jbe
bound
or
push
xlat
and
add
and
stos
add
pop
mov
adc
sub
or
pop
push
call
inc
scas
rclb
clc
je
into
fistps
sbb
shlb
xchg
and
and
xchg
aas
fnstenv
mov
inc
jne
or
cltd
icebp
jae
mov
loope
cmp
jb
xor
xor
mull
stc
ret
rcrl
inc
frstor
stos
loope
or
jns
mov
imul
jne
sub
outsl
jge
pop
shr
sbb
push
sub
sar
xchg
movsb
cmpsb
xor
inc
std
sar
fstl
and
mov
or
sub
jnp
push
adc
popa
or
push
fidivrs
pop
imul
insl
push
cltd
test
daa
je
dec
iret
lcall
xor
mov
adc
mov
test
or
into
jne
pushf
cmp
jbe
cs
mov
push
xchg
test
test
inc
data16
push
push
sbb
in
stc
pusha
popf
pop
adc
xor
incl
mov
sbb
xor
inc
stc
test
je
inc
xchg
sti
in
sti
cmc
std
lock
addr16
std
mov
out
mov
xchg
sbb
daa
adc
push
inc
pop
data16
lea
fnstsw
das
cwtl
sbb
push
pusha
pushf
sub
push
sub
cmp
pop
cwtl
jnp
movsb
sub
cwtl
call
icebp
cld
popa
bound
sbb
lods
dec
popa
xchg
pop
es
inc
sbb
inc
enter
sbb
leave
push
xchg
xchg
pop
in
in
out
jno
sbb
out
call
outsb
jmp
loop
das
in
push
in
clc
cwtl
adc
jae
jns
xorl
or
mov
dec
xchg
mov
jne
mov
adc
daa
jp
xchg
enter
in
pusha
xlat
cwtl
pop
and
lds
repnz
into
ss
add
addr16
dec
clc
push
dec
push
fwait
push
push
andl
mov
in
pop
or
shlb
cmp
push
and
aaa
loop
call
sub
jns
and
push
es
or
push
cmc
mov
pushf
add
ja
mov
adc
xchg
xor
test
cmp
adc
nop
orb
hlt
jbe
rcrb
je
sahf
out
gs
gs
push
mov
mov
jno
loope
inc
insb
sahf
xlat
xor
mov
out
jle
jo
jo
sahf
out
sahf
push
gs
gs
loop
iret
ljmp
in
mov
mov
push
outsb
pop
dec
and
fs
jns
out
jno
gs
inc
test
lock
jo
es
cmc
outsb
div
repz
repz
stc
cli
sti
cld
ret
jmp
dec
dec
cmp
lret
rcl
jb
stos
sub
adc
mov
outsb
jno
sbb
aam
arpl
xlat
inc
orl
jecxz
xchg
addr16
ret
pop
mov
lock
or
jle
mov
pop
stos
popf
pop
pop
cmp
aas
lds
add
movl
sbb
mov
enter
sbb
jno
fcomp
in
in
ret
shrb
cmc
add
bound
push
mov
das
popf
jne
or
cmp
adcl
jb
dec
andb
andl
and
add
inc
test
add
inc
mov
cwtl
or
mov
dec
xor
push
inc
xchg
std
mov
roll
and
pop
int3
jns
and
iret
push
or
xor
aad
ret
push
std
sbb
je
push
mov
push
mov
xor
dec
or
add
mov
idiv
jle
ficoms
pop
clc
iret
inc
lock
and
mov
jge
jecxz
xorb
lock
and
pop
adc
and
sub
dec
rcl
lock
pop
push
adc
leave
stos
nop
push
mov
and
sbbl
adc
push
or
sbb
call
inc
push
jo
ss
jg
mov
fisubs
les
push
jae
cltd
and
mov
fistl
roll
daa
dec
xchg
roll
push
loope
push
jl
sbb
sub
ljmp
sbb
push
int3
lret
test
dec
adc
enter
mov
lds
ja
fisttpll
inc
int
lahf
cmc
push
push
dec
imul
dec
sbb
aas
cmp
test
leave
push
enter
push
in
mov
addb
ret
rcrl
dec
stc
inc
cli
inc
ret
push
sti
jb
popa
std
insl
inc
jb
jle
dec
jno
sbb
movsl
outsl
cmpsb
jp
imul
stos
push
lods
dec
ret
loope
cmp
outsb
mov
mov
cmp
xchg
insb
mov
mov
les
jae
mov
xor
xor
jns
out
pop
inc
jb
das
xor
sahf
out
dec
popa
js
push
outsl
outsb
mov
pop
flds
jb
jo
mov
fsubrl
fimuls
lea
pop
pop
nop
pop
loope
cmp
push
xchg
push
xchg
inc
xchg
jb
popa
es
xchg
xchg
insl
xchg
gs
push
cltd
xchg
jno
lcall
sbb
sahf
xor
inc
cmp
cmp
std
adc
add
fbstp
push
sbb
mov
outsl
shll
jno
addr16
iret
sahf
out
jne
fs
bound
int
subl
add
pop
inc
addb
push
cmp
pop
out
mov
lods
repz
nop
mov
sub
pop
mov
loopne
jecxz
mov
mov
in
lahf
adc
push
push
push
adc
out
inc
loope
mov
orb
test
add
fiaddl
pop
xchg
mov
sbb
push
mov
dec
pop
scas
xor
cvtpi2ps
or
sub
and
icebp
mov
cmp
xchg
in
outsl
outsb
add
outsl
jns
lods
xchg
jae
out
sahf
out
jne
and
sahf
es
bound
inc
jae
jo
adc
es
mov
or
pusha
jp
inc
or
paddusb
sbb
and
inc
add
add
aam
cwtl
mov
or
stc
push
ret
ret
xor
cwtl
jmp
cmp
cwtl
pop
add
cwtl
mov
and
mov
jo
ret
jo
movl
cmp
cmp
insb
pusha
push
es
arpl
fcoms
psraw
sbb
roll
loop
leave
push
fidivrl
mov
movsl
loopne
xor
scas
push
test
fistl
sbbl
jb
xor
scas
or
push
xor
andb
push
pushf
mov
aaa
and
xchg
cmpsb
mov
inc
lcall
enter
call
sub
cmp
in
mov
lods
sub
popf
mov
jne
xchg
ret
data16
js
push
idivb
or
sahf
jnp
mov
cmp
fs
jno
mov
jo
push
addr16
mov
sbb
std
pop
push
popa
push
mov
aam
bnd
pop
push
push
mov
push
pop
xchg
out
arpl
and
rep
outsb
cmp
gs
out
sahf
lahf
insb
arpl
es
jns
jne
and
clc
sbb
sbb
cld
and
iret
dec
dec
mov
sbbb
or
or
mov
aaa
push
loop
call
ljmp
add
pop
and
push
aam
and
leave
int3
mov
cmp
push
add
pop
push
je
push
push
pop
push
sub
enter
add
adcl
popa
fidivl
lret
faddl
sbb
sbb
enter
inc
mov
pusha
push
fdivl
cmp
mov
mov
ficompl
rcrl
shrb
cmp
xor
and
lcall
loope
jb
stos
std
hlt
dec
mov
cltd
and
push
iret
repz
imul
repz
jo
gs
cmp
cld
jae
fistpl
fnclex
mov
movsl
push
push
push
mov
push
push
addb
pop
nop
xor
je
mov
jg
loopne
and
int3
sbb
bound
inc
orb
cmp
sbb
sbb
rolb
pop
data16
xchg
pop
fisttps
mov
mov
push
inc
sub
jl
or
sbb
leave
pusha
add
adc
inc
jg
add
jl
leave
fimuls
cmp
jg
pop
ret
les
mov
push
sub
xchg
test
test
dec
cwtl
sbb
lret
jnp
jno
sarb
push
cltd
mov
sub
arpl
jns
push
inc
pop
inc
jns
out
outsl
outsb
imul
mov
ja
callw
xor
test
sbb
lcall
pop
out
adc
fistpl
leave
add
jbe
mov
add
in
adc
mov
cmp
jecxz
add
sbb
xor
mov
push
push
decl
push
popf
sub
rorb
and
shr
jo
fimuls
push
das
cmp
add
push
jo
fisubl
mov
rclb
xor
and
rorb
popa
mov
adc
mov
push
div
pop
dec
or
mov
imul
xor
notl
pop
div
push
pop
cmp
daa
push
dec
shll
std
sar
addb
repnz
sub
out
jecxz
je
test
pushf
jl
mov
pop
jb
xchg
cmp
mov
cmp
cld
pop
addr16
inc
popf
popf
cmc
cmp
xor
sbb
xchg
sahf
xor
loopne
sbb
dec
xor
sahf
subb
popf
pushf
pushl
inc
pushf
push
dec
pushf
arpl
sbb
mov
mov
xchg
push
fdivl
ficompl
lods
test
xchg
push
popf
pop
fadds
or
push
jl
es
push
inc
mov
jecxz
xchg
loop
jae
or
inc
ucomiss
mov
cmp
jp
mov
push
jecxz
push
aas
jns
out
xor
jns
out
xor
jns
es
jnp
iret
shlb
movsb
jp
out
rcl
jne
and
cmp
es
out
xor
cmp
fsubr
loop
in
mov
out
call
cmp
xor
mov
push
fsubr
and
je
ljmp
cwtl
or
mov
mov
out
sahf
xor
jns
sub
aaa
cmp
and
cmpsb
xor
cmp
stos
enter
push
sbb
xor
ja
inc
mov
imul
aam
ss
adc
jne
out
pop
mov
push
pop
out
andb
pop
fsubs
sub
xchg
aas
arpl
outsl
outsb
faddl
cmp
xor
jo
sbb
cmp
arpl
jne
adc
mov
movsl
aaa
add
push
in
add
push
adc
or
or
and
mov
mov
cld
fimull
add
loop
ljmp
jns
enter
lcall
pop
sub
or
mov
bound
out
adcb
add
add
test
js
sub
push
mov
orb
lea
pop
mov
jecxz
push
push
mov
dec
jne
xor
push
in
push
rorl
add
cmpsb
or
adc
pop
push
and
loop
xchg
or
mov
xor
dec
push
pop
pop
pop
ret
pop
ds
sub
lea
and
or
popa
popf
ret
and
sub
dec
rorb
sub
mov
sbbl
mov
mov
mov
mov
dec
popf
sub
push
mov
xor
lock
xor
sub
inc
or
cmp
pushf
dec
in
push
push
mov
mov
sub
insl
and
enter
popa
mov
fs
int
into
lret
adc
and
pushf
lahf
xchg
sub
popf
cwtl
inc
addr16
lds
cmp
jle
lahf
cmp
dec
or
call
mov
xor
out
push
xchg
sbb
and
jmp
push
cmpb
add
add
mov
pushf
mov
pusha
imul
or
je
pop
add
movsl
sub
je
dec
je
jp
mov
add
test
pop
sbb
or
je
adc
je
dec
jecxz
sbb
push
push
pop
xchg
xor
rorb
xor
push
das
push
pop
cmp
inc
insb
jmp
push
dec
cmpsl
or
lock
dec
sbb
pusha
mov
nop
bt
subb
jg
mov
push
pusha
pushl
adc
movsb
lods
push
inc
sbb
adc
cli
xor
jne
nop
push
cmp
gs
decl
add
add
xor
jl
repnz
jl
inc
aaa
mov
cld
xchg
jl
cmc
cltd
cmp
inc
sbb
shr
sbb
inc
stos
lret
xchg
test
cwtl
mov
shll
nop
push
pushf
push
sbb
iret
repz
popa
arpl
js
outsl
outsb
iret
repz
fwait
addr16
int3
repz
outsl
jae
jae
popl
and
icebp
in
or
mov
ljmp
ret
sbb
les
js
hlt
adc
hlt
inc
mov
push
inc
mov
sbb
dec
stc
dec
cli
dec
sti
inc
cltd
pop
cltd
icebp
mov
arpl
mov
sub
aas
js
repz
arpl
iret
jecxz
outsb
cmp
cmp
jae
insl
bound
xchg
out
outsb
rcl
aam
out
cld
aad
xlat
fdivrs
fldenv
jo
dec
mov
jl
cmp
mov
mov
je
push
arpl
push
arpl
lret
cmp
sarb
mov
sarb
fdiv
notl
inc
add
jp
xor
mov
ret
push
pop
or
push
test
mov
lock
arpl
loope
push
cmp
mov
imul
or
or
push
push
push
lea
mulb
pop
or
clc
dec
bound
sub
pop
jnp
lock
or
mov
sbb
iret
xor
mov
cmp
call
add
imul
dec
or
mov
dec
inc
push
add
dec
xor
shll
xor
push
out
sbbl
sub
mov
jne
mov
jmp
add
mov
inc
fldl
sub
jno,pt
jp
aaa
mov
incl
inc
cmp
mov
xchg
lods
sbb
push
push
int3
loop
push
sbb
mov
push
loopne
add
push
push
push
je
xchg
inc
adc
icebp
mov
adc
or
rorl
pop
jecxz
adc
ret
push
sbb
sub
push
js
enter
je
aam
sbb
mov
xchg
mov
pop
jne
push
hlt
dec
and
jmp
testb
jne
push
aas
dec
rcll
push
sbb
or
pop
cmp
movsl
lret
rorb
shl
mov
pop
cmpsl
lcall
dec
inc
fistpl
push
push
dec
adc
cwtl
mov
aad
and
aaa
jge
je
and
or
loop
add
push
shrl
adc
push
mov
cmp
jle
test
dec
clc
lret
jp
js
rcrb
shlb
and
jbe
fsts
sahf
movsb
iret
add
and
lea
imul
andb
xor
add
push
sbb
iret
aam
xor
orb
fistpll
addl
push
adc
jle
inc
mov
cmpsb
add
mov
ds
mov
xor
daa
shrb
loopne
pop
inc
cmp
jl
add
mov
sbb
arpl
cmp
jge
lds
add
mov
outsb
and
add
test
mov
lret
mov
xor
xlat
cmpsb
fcomps
insl
inc
cmp
notb
pop
cmp
mov
add
or
xor
lcall
flds
pusha
popf
inc
xor
inc
push
adc
movsl
rcrb
pop
icebp
add
shll
inc
cmp
aam
adc
inc
jmp
in
addr16
subb
fadd
jl
xor
inc
cli
add
lret
test
push
faddl
imul
push
idivb
iret
jb
gs
adc
dec
fidivl
push
in
pop
or
enter
sub
sarb
lea
push
lret
mov
push
adc
lret
add
stos
movb
mov
jbe
add
add
movb
shrl
sub
movb
and
fimuls
es
shll
mov
and
call
add
mov
lods
popa
test
push
fldenv
add
and
mov
xor
dec
repnz
mov
ret
sbb
pop
ror
cltd
adc
jge
mov
dec
xorb
lea
push
push
xor
adcl
int
pop
pop
fisubl
pop
and
xor
test
push
dec
scas
imul
clc
hlt
sbb
or
stos
or
pop
or
daa
jg
add
mov
test
je
push
lret
cld
xchg
xchg
push
cmpsb
bound
rcrl
mov
adc
dec
push
inc
fnstcw
dec
shrb
outsl
insb
mov
or
jae
es
xchg
cmp
shr
or
jbe
in
sub
fdivs
or
adc
cmc
mulb
mov
imull
stc
outsb
jnp
dec
mov
loope
call
push
gs
add
adc
jne
imul
call
jmpw
xor
in
jb
and
xchg
popa
out
jns
mov
nop
xor
pop
push
call
jmp
xchg
pop
adc
sub
jno
mov
fcoml
loopne
sbb
divb
lret
stos
adc
mov
mov
fcmovne
fbstp
dec
push
subl
xor
xor
lcall
cmpsb
bound
call
push
pop
inc
cmpsl
in
iret
test
inc
mov
sbb
mov
stos
mov
sbb
insb
stos
dec
adc
cs
fbstp
mov
fcmove
push
and
add
test
test
in
inc
sbb
lock
out
inc
dec
imul
dec
fs
sarl
jp
idiv
add
xchg
push
ret
cld
mov
sbb
adc
fidivs
jnp
jae
push
test
push
push
clc
cmp
add
cmp
add
cmp
sahf
std
gs
je
cmp
es
outsl
insb
jecxz
iret
repz
sbb
xchg
xor
xor
push
aad
sbb
in
xlat
fdivs
lret
fldcw
outsl
push
mov
arpl
repz
xor
inc
inc
mov
shll
sub
xchg
icebp
repnz
repz
gs
xchg
cmc
jae
jae
xor
xor
jo
stc
dec
cli
gs
js
je
sbb
inc
xchg
dec
dec
dec
arpl
ror
ljmp
fildl
shrb
jmp
les
je
sub
cmp
fs
push
mov
cmp
stc
sub
fs
fimull
jmp
fidivrs
cmp
iret
repz
inc
fs
cmp
repz
imul
and
rep
insb
or
ret
fmull
jo
or
jo
fildll
sahf
out
push
outsl
imul
in
in
mov
mov
imul
iret
jne
push
pop
iret
repz
imul
mov
icebp
mov
shrl
sbb
jne
les
sbb
xchg
cwtl
inc
cltd
fs
cmp
lahf
outsl
mov
xchg
ret
mov
xor
imul
and
lods
push
lods
sbb
shl
mov
dec
sub
jecxz
sbb
lea
mov
std
and
jns
push
je
jne
sbb
jb
outsb
or
cmp
je
jb
cmp
xlat
jae
mov
jnp
fnstenv
xchg
push
inc
lret
sub
push
mov
xor
pop
mov
mov
js
nop
dec
jne
add
lods
add
inc
cmp
sub
nop
je
je
add
push
and
push
mov
outsl
nop
cmpsb
push
push
faddl
sub
jne
test
cmp
lods
or
addr16
add
js
test
jne
ret
cmpw
jne
mov
add
inc
dec
fimull
mov
push
inc
push
push
pusha
js
xchg
jecxz
cmp
add
mov
je
mov
cmp
je
ret
imul
ja
mov
jno
push
push
in
jae
cmp
pusha
fwait
loopne
push
or
or
mov
rolb
cmp
jb
sbb
lret
test
adc
je
decl
incl
add
in
int
adc
dec
int3
jmp
enter
dec
add
dec
sub
ljmp
sahf
or
fmull
or
enter
outsl
in
shll
adc
inc
mov
mov
cmp
loope
es
adc
push
fmull
sbb
ret
xor
or
mov
jge
push
sub
je
or
ljmp
sbbb
clc
push
jg
or
ficoms
pop
imul
pop
cltd
ficoml
and
dec
pop
gs
push
lret
fisubrl
cmp
cmp
ret
mov
das
arpl
pop
sbb
and
push
mov
sbb
mov
les
jg
mov
sub
mov
fcompl
push
push
xor
jo
sbb
push
cmc
dec
testb
clc
dec
add
xor
sbb
int3
push
fimull
mov
daa
gs
mov
add
dec
repz
icebp
mov
xchg
rorb
ret
cmp
jns
mov
xchg
xor
jge
popa
cmp
out
dec
rorb
and
sbb
push
js
xor
cmpb
jns
outsb
xchg
cli
mov
ja
sahf
inc
std
dec
gs
push
out
gs
mov
xchg
jno
mov
popa
mov
mov
xor
enter
adc
xor
cwtl
dec
cmp
arpl
jb
repz
jno
sbb
insb
mov
movsl
dec
inc
adc
xchg
fs
xor
insl
lds
test
jle
pushf
sbb
xchg
sbb
inc
lods
cmp
leave
mov
clc
or
xlat
xchg
sub
pusha
xchg
and
mov
xchg
jp
jp
add
and
insl
mov
xor
in
sti
ds
or
lret
les
and
xor
in
insb
sahf
rol
fidivs
ljmp
in
and
xor
push
and
insb
xor
pusha
inc
cwtl
mov
into
push
inc
pop
xchg
in
je
adcb
shrl
push
lock
cwtl
fldenv
fidivrl
and
ret
aas
adc
xor
push
xchg
nop
in
add
and
popa
sbb
mov
adc
inc
call
jne
icebp
jl
dec
call
lock
dec
mov
test
push
pop
sarb
or
jb
movsbl
nop
add
or
lock
out
pop
or
out
dec
add
adc
leave
mov
inc
inc
jmp
xorb
sub
and
mov
jecxz
or
add
add
dec
test
pop
pop
push
roll
movzbl
inc
mov
cmp
or
mov
push
inc
cmp
push
jmp
cmpb
push
out
adc
mov
enter
enter
fimuls
pop
and
mov
or
cmp
jo
push
outsl
je
in
clc
sub
in
cmp
andl
cmp
mov
sti
sub
hlt
or
push
mov
and
pop
jb
xor
mov
inc
dec
add
xor
leave
add
mov
cmp
inc
inc
jmp
adc
inc
jnp
add
add
mov
push
mov
mov
inc
inc
test
jne
pop
in
cmp
inc
orps
or
aam
dec
add
andb
xor
popa
push
in
push
xchg
loope
imul
inc
pop
or
sbb
imul
jnp
enter
insb
repz
push
hlt
inc
mov
scas
rclb
loop
mov
cld
gs
lea
lea
sub
cs
decb
push
xchg
gs
add
push
mov
sub
adc
adc
in
push
stos
cmp
pop
push
jns
jne
lahf
hlt
insl
push
adc
xchg
inc
imulb
jb
xor
xchg
outsl
xchg
jo
out
std
jns
inc
ja
sbb
sbb
shrb
push
daa
jae
xor
mov
rcll
jmp
mov
aaa
mov
loopne
inc
cmp
mov
mov
pop
dec
push
xchg
idivl
jae
mov
dec
pop
add
add
cmp
jae
push
mov
inc
and
xor
loop
iret
cmp
jbe
mov
ret
lahf
xor
dec
mov
jmp
dec
test
xchg
mov
jmp
mov
lea
movzwl
add
mov
add
add
cmp
jae
cmp
jb
adc
les
mov
dec
cmp
je
cmp
test
xchg
or
andb
cmc
mov
sub
jns
sbb
xor
pop
xor
stos
andb
std
inc
loop
inc
push
mov
add
sbb
push
pop
adc
add
or
push
inc
dec
lock
mov
or
ljmp
adc
mov
jno
xchg
adc
imull
jno
jb
jb
fidivl
lods
add
adc
pop
xor
lods
cmpsb
clc
cs
jno
dec
and
jnp
jl
movsb
push
or
repz
jne
mov
and
add
push
xchg
dec
clc
lods
sub
push
fldenv
mov
pop
popa
inc
decl
adcl
mov
xchg
pusha
lods
imul
lods
icebp
lcall
mov
adc
xor
hlt
pop
sub
cmp
fwait
movnti
jne
mulb
xor
sub
xor
inc
mov
dec
test
dec
and
imul
ljmp
push
insb
cmp
fadds
addr16
imul
push
add
clc
push
dec
add
fidivl
inc
mov
imul
mov
adc
dec
inc
adc
adc
mov
add
jecxz
adc
add
fcomi
enter
cmp
fmuls
bound
cmp
or
je
push
add
mov
xor
inc
mov
cmp
dec
sbb
notb
cmp
dec
out
stos
mov
mov
cmp
xchg
bound
lret
cs
gs
jns
mov
pop
or
popf
jge
stc
clc
jbe
push
imul
mov
fidivl
testl
loop
cltd
or
lret
adc
cmp
push
gs
es
out
jne
xor
xchg
push
imul
imul
ret
jmp
mov
cmpb
data16
frstor
stc
jae
test
cmp
incb
inc
fcmovu
aad
pop
shrb
daa
insl
lds
add
adc
and
push
movsl
or
push
push
push
shl
push
sbb
dec
lods
xchg
sbb
sub
sbb
test
push
inc
rorb
jl
cmpsl
inc
sarl
or
repz
mov
mov
mov
cmp
xchg
movsl
outsl
ja
cmp
repz
imul
cmp
dec
ljmp
sub
cmp
stc
stos
orb
outsb
lahf
push
insb
mov
sbb
cli
xchg
std
rcrl
rclb
iret
insb
insb
inc
popa
arpl
mov
sub
stc
mov
sahf
popa
je
sti
mov
and
sbb
xor
data16
push
add
pop
pusha
sub
cmp
jl
cs
rclb
cwtl
add
mov
cltd
pop
idiv
add
arpl
pusha
push
cmp
add
cmp
popf
pop
mov
push
cmp
mov
pop
fs
pushf
and
jnp
and
or
lret
or
lock
xor
mov
out
mov
stos
loop
lret
mov
in
arpl
sbb
mov
inc
enter
inc
repz
dec
jns
imul
push
xorb
out
hlt
jbe
sbb
fcmovnu
sub
lds
fnstsw
fbld
aam
shrb
pop
pushf
data16
je
arpl
jnp
enter
loopne
inc
int
inc
cld
insb
ret
icebp
mov
iret
imul
pop
lods
adc
inc
pop
and
ror
cmp
imul
js
push
sbb
cwtl
mov
xchg
push
js
xchg
pop
std
cmpsl
mov
cmpsl
into
mov
cmp
std
push
mov
dec
dec
pop
lods
fwait
pop
jmp
sbb
and
push
jecxz
sbb
int3
push
iret
sub
mov
call
loop
push
cmp
lea
sbbl
sub
inc
in
jae
jmp
mov
mov
mov
dec
ds
mov
or
sub
addr16
pushl
mov
shlb
push
adc
sbb
push
xchg
push
pop
push
test
aaa
pop
jno
fdivl
sub
push
or
popf
fs
icebp
add
add
jbe
sbb
jbe
ret
sbb
or
ljmp
jo
xorb
je
je
ds
call
je
jbe
ret
loope
jbe
jne
jne
jne
jne
cmp
scas
jne
jbe
jne
jne
jne
xchg
loope
jne
jne
jne
jne
jo
sub
jbe
jbe
jbe
xlat
test
cwtl
jne
jne
je
sbb
xchg
push
je
je
je
xchg
loope
je
jae
je
je
je
pop
ss
adc
or
ret
loope
jae
jae
jae
jae
jae
cmp
enter
mov
lods
jae
jae
xchg
loope
jae
jae
jae
jae
jo
sbb
jae
jae
jae
ja
ja
loope
mov
jbe
jbe
jbe
sbb
xchg
jbe
jbe
or
mov
add
pop
jl
cltd
add
insl
jae
iret
or
fs
jae
jb
outsb
je
xchg
add
pop
gs
gs
pop
push
gs
add
aas
xor
inc
pop
push
inc
pop
insb
xchg
sahf
loope
ja
jae
insl
movlps
xchg
es
arpl
add
fs
insb
insb
add
mov
xor
jecxz
jo
outsb
add
add
jb
scas
add
rolb
je
insl
fs
jge
out
add
pop
lds
cmpsb
rcll
push
jne
arpl
xchg
sub
sbb
mov
xor
add
or
push
jb
add
enter
outsl
arpl
lea
pop
xor
mov
add
leave
push
xor
xchg
popf
mov
ret
add
outsl
ja
or
xchg
loope
dec
pop
inc
loop
inc
add
push
push
inc
push
push
cs
enterw
inc
gs
mov
inc
inc
dec
bound
arpl
mov
leave
addb
add
lret
sub
inc
sub
xchg
push
add
mov
lods
push
mov
sub
imul
push
push
insb
add
arpl
lret
add
push
mov
add
dec
xor
lock
iret
int
dec
les
inc
jb
mov
dec
outsl
popa
les
data16
add
sub
das
aaa
addl
enter
adc
jo
push
pop
mov
adc
je
or
pushf
jae
add
fs
or
push
outsl
dec
jne
fadds
add
or
pop
push
mull
pop
push
imul
add
jne
dec
or
push
outsb
addr16
jo
mov
inc
push
mov
outsl
add
or
adc
xchg
add
lds
fnsave
shrl
cmp
xor
sarl
cltd
or
outsl
lea
addr16
insl
gs
mov
add
mov
outsl
mov
add
inc
xor
lcall
cltd
pop
xor
pop
ret
add
or
inc
push
dec
inc
dec
dec
cmpsl
int3
shll
mov
pop
sub
inc
push
fs
xor
push
fdivs
mov
std
add
sti
add
jb
shlb
add
pop
dec
je
outsl
decb
push
in
pop
jae
and
scas
add
push
add
add
mov
push
dec
inc
dec
movsb
pop
jae
lret
sub
xchg
sti
jne
mov
imul
ja
ja
sub
jg
sub
pusha
or
xor
mov
xor
and
mov
jo
dec
ret
repnz
and
sarl
and
dec
push
mov
jo
dec
dec
inc
xor
jo
xlat
mov
mov
adc
and
xchg
out
xor
and
out
pop
arpl
es
imul
loope
mov
cmpb
pop
or
xor
iret
ret
push
enter
pop
lret
mov
mov
and
int3
sar
fsubrl
pop
xor
add
ret
fdivl
mov
loopne
add
push
push
inc
pop
arpl
imul
push
xbegin
jl
mov
lret
sub
or
pop
into
mov
stos
shl
cmpl
mov
insb
insl
and
add
sbb
sbb
fs
dec
lods
sub
adc
and
fs
je
stc
cmpsl
mov
mov
int3
push
cs
and
mov
cwtl
xchg
xor
xlat
mov
roll
fstps
movlps
dec
es
int3
movsb
mov
dec
mov
rcrl
je
outsl
je
inc
gs
xorb
adc
add
int
lret
cmp
add
add
sub
push
push
add
mov
cmpsb
mov
scas
sub
mov
or
mov
mov
pop
sbb
push
lahf
and
xchg
push
sub
repz
or
push
adc
or
inc
ltr
inc
add
add
cmp
stc
mov
iret
aaa
inc
inc
adc
or
popf
adc
xchg
in
or
mov
dec
adc
push
pop
push
lret
arpl
jbe
mov
jb
ss
or
and
imul
cmp
xchg
pop
inc
jmp
js
add
aaa
or
push
cltd
dec
add
add
adc
int
dec
add
out
xor
dec
add
int3
fcomps
add
add
add
jge
fimuls
xchg
int
shll
dec
or
xchg
fstl
pushf
data16
gs
add
xor
sbb
fnstcw
and
das
mov
sbb
jo
and
fs
mov
or
fdivs
or
cli
fcomi
cwtl
or
lret
pop
iret
int
shl
aas
movsb
ja
push
pop
lods
jle
ror
mov
dec
frstpm(287
push
cmp
adc
ja
int3
mov
fists
sbb
shll
sbb
arpl
aaa
rorl
aaa
scas
imul
push
cltd
int3
xchg
xor
pushf
sub
jns
dec
push
adc
adc
int3
cs
add
pop
xchg
dec
fimuls
ja
std
mov
sbb
mov
push
daa
or
es
jb
aam
dec
imul
pop
mov
jb
cmp
adc
cmp
ficomps
xor
add
fsubl
xor
fiadds
in
leave
repz
sbb
cmp
sub
push
push
push
or
sarl
adc
cmp
lea
push
jge
pop
xchg
idivl
repnz
int3
push
sub
mov
xchg
or
call
leave
popa
repz
sub
test
mov
push
imul
cmp
xchg
int
dec
inc
or
push
popa
add
ret
mov
ds
cmpsb
mov
das
iret
sub
push
es
stc
sbb
xchg
mov
mov
jbe
fs
shrl
jae
xchg
les
enter
add
push
inc
test
daa
pop
xchg
jae
mov
inc
jnp
add
sbb
add
add
mov
ds
arpl
jo
xor
mov
out
adc
adc
and
cld
loope
dec
add
add
insb
ja
add
add
add
add
add
add
add
add
xor
add
xor
add
inc
mov
add
add
add
add
dec
add
inc
popa
outsb
arpl
inc
insb
insb
add
fs
insb
insb
add
add
add
sub
add
inc
mov
add
add
add
add
insb
mov
add
add
add
add
add
add
add
add
addb
add
pusha
mov
add
add
add
decl
add
pusha
mov
add
add
add
add
jmp
add
je
add
jl
add
add
add
jl
add
jl
add
test
add
call
add
mov
add
pushl
add
imul
gs
xor
cs
insb
add
add
add
dec
outsl
popa
fs
imul
add
add
inc
gs
jb
arpl
fs
jae
add
add
add
push
imul
insb
insb
outsl
arpl
add
add
jb
jne
insb
inc
jb
add
add
push
inc
push
push
cs
insb
add
add
pop
jbe
outsb
jo
imul
add
dec
xor
cs
insb
add
add
add
je
insb
je
add
add
inc
push
xor
cs
insb
add
add
inc
gs
imul
arpl
add
add
dec
inc
dec
xor
cs
insb
add
push
pushl
mov
xor
mov
push
inc
inc
outsl
insl
jo
arpl
add
add
sbb
pusha
mov
mov
cld
lods
xor
test
je
loopne
sbb
xor
lea
movsb
mov
call
cmp
jae
push
or
xor
inc
xor
mov
lea
mov
mov
call
sub
lea
add
mov
call
pop
sub
jae
and
call
mov
call
jne
pop
cmpsb
sub
inc
mov
sub
add
fcos
cmp
sub
add
movsb
pop
inc
inc
jmp
add
jne
xchg
lods
xchg
inc
ret
add
flds
in
call
leave
call
out
jb
ret
sub
sbb
ret
add
sub
sub
adc
dec
sub
mov
js
pusha
mov
fdivl
jbe
or
jno
add
and
jae
loopne
loope
mov
add
fld
loopne
outsl
hlt
dec
mov
fcmovnb
mov
cmp
add
loope
pop
jo
addr16
xorb
xchg
aaa
pushf
jl
and
loop
or
fadd
push
push
call
pop
sub
inc
add
sahf
add
add
mov
mov
mov
add
sbb
pusha
or
stos
pop
cwtl
add
nop
cmpl
je
mov
test
je
mov
mov
mov
or
cmp
sbb
das
add
ret
or
add
push
push
call
xchg
nop
mov
mov
inc
push
push
iret
ret
mov
add
mov
cwtl
jne
mov
fwait
cltd
call
je
mov
or
push
mov
jae
jnp
xchg
stos
sbb
outsl
mov
lea
fnstcw
jmp
test
je
push
and
mov
push
aas
pop
test
and
dec
sbb
or
enter
pop
push
rcrb
push
lahf
mov
test
jae
jmp
ret
push
pop
ficomps
add
adc
or
dec
inc
mov
add
movb
add
inc
xchg
sbb
mov
or
sbb
pop
push
call
cs
mov
xor
pop
pop
pop
pop
mov
push
mov
add
clc
inc
sbb
pop
sub
inc
or
push
call
or
push
add
jle
add
xor
add
filds
add
mov
add
jne
test
add
ret
in
movb
mov
es
leave
add
mov
add
das
inc
pop
or
ret
je
mov
mov
add
mov
sub
mov
lods
mov
add
lods
add
pusha
aas
mov
sub
je
movw
xorb
je
data16
add
mov
and
decl
sti
shr
sarl
add
add
mov
add
dec
shr
mov
mov
add
mov
or
cwtl
and
add
or
hlt
mov
sti
out
pusha
jbe
push
call
rorl
cmp
or
or
jmp
mov
push
clc
movzwl
test
xchg
fiadds
subl
pop
adc
push
clc
cmp
jge
mov
inc
movzbl
add
sub
mov
push
dec
mov
jne
cmp
mov
or
rclb
les
xchg
push
add
add
fmuls
add
pop
pop
inc
adc
xor
mov
push
cwtl
aaa
call
xor
mov
subb
sub
pushw
push
push
call
or
sbb
sub
es
or
xchg
mov
in
inc
ja
stc
and
mov
jae
push
xor
dec
or
sar
rep
add
add
cmpsl
inc
adc
je
mov
shrl
xor
stos
pop
cmp
mov
push
dec
ret
jne
ss
push
mov
inc
add
xor
push
push
push
adc
enter
mov
jge
or
cwtl
mov
enter
rcrb
jg
mov
pop
and
inc
dec
hlt
push
jae
sub
adc
mov
ret
in
call
loop
xchg
je
mov
mov
test
call
sbb
ss
cmp
jne
mov
mov
jmp
mov
push
inc
add
shl
sub
loopne
pop
pop
pop
and
cmp
mov
and
fcmovnbe
pusha
or
xchg
insl
leave
cmp
je
add
add
ret
clts
dec
mov
es
call
inc
push
jmp
call
testb
xor
fisubrs
ret
xor
jbe
jbe
sbb
rcll
or
addl
mov
testb
xchg
out
lock
ss
call
mov
or
adc
bound
js
jne
in
popf
cmp
adc
push
adc
or
mov
imul
cmpsl
repnz
mov
pusha
inc
push
bound
and
push
xchg
insb
and
aad
inc
es
mov
xchg
cmp
pop
pop
rclb
cli
mov
add
lods
ss
rcrb
ljmp
xor
icebp
mov
int
pushf
inc
lret
sbb
dec
or
dec
adc
repz
fwait
int
xchg
sub
add
adc
jl
sbb
shr
pop
clc
inc
loope
push
lea
sub
cmpb
sti
push
mov
test
sub
mov
scas
mov
cmp
out
dec
jnp
mov
lret
and
mov
or
ds
jmp
lea
add
in
leave
xor
pop
loopne
stc
xchg
inc
jo
insb
rcl
add
imul
and
jb
jb
arpl
add
je
add
and
test
gs
and
add
and
je
bound
adc
push
mov
dec
sub
or
popa
insb
ret
jns,pn
sub
push
scas
push
mov
add
jne
xor
add
jae
popa
addr16
outsl
js
jle
or
je
sub
outsb
gs
cmp
sbb
inc
js
je
cwtl
iret
aaa
mov
jne
add
fs
add
outsb
inc
lds
inc
pop
outsl
insb
sbb
fbstp
jne
shr
jl
mov
jbe
sahf
ret
push
lcall
mov
mov
jmp
xchg
mov
jp
sbb
enter
cli
pop
add
pusha
mov
mov
cld
lods
xor
test
je
xor
lea
movsb
mov
call
jae
cmp
jae
push
push
push
xor
inc
xor
mov
lea
mov
mov
call
jae
lea
add
mov
call
jae
pop
pop
pop
sub
jae
mov
call
jmp
mov
call
adc
dec
jne
inc
call
mov
cmp
sbb
cmp
sbb
push
mov
sub
rep
pop
inc
inc
jmp
add
jne
xchg
lods
xchg
add
inc
ret
xor
inc
call
adc
call
jb
ret
sub
mov
popa
ret
in
add
mov
add
add
mov
add
insb
mov
add
add
adc
add
fs
add
lea
mov
mov
mov
movb
add
sub
mov
xor
ret
mov
popl
add
push
push
push
push
push
push
lea
mov
push
mov
push
push
pushl
push
mov
add
mov
call
pop
mov
push
push
mov
mov
add
mov
mov
mov
add
mov
mov
add
mov
add
lea
push
push
push
call
pop
pop
add
mov
push
mov
mov
add
sub
mov
mov
mov
call
mov
mov
mov
pop
jmp
add
push
push
push
call
mov
pop
pop
pop
pop
pop
pop
jmp
