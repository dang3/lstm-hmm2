sbb
add
inc
and
and
add
in
sub
add
movsl
in
incl
push
push
push
pop
xor
lea
mov
gs
stos
stos
stos
jge
stos
fiadds
jns
call
and
xor
xor
or
outsb
push
call
loopne
pop
push
add
xor
test
mov
jle
mov
jno
adc
lea
push
pop
dec
mov
add
test
push
fldl
aam
decl
mov
push
je
mov
push
push
call
test
mov
aad
inc
mov
aaa
fs
mov
and
push
fstl
cmp
movsl
aas
and
enter
xor
pop
pop
push
pop
pop
pop
leave
ret
sub
push
push
add
push
push
mov
mov
push
test
addr16
xchg
jmp
jo
insb
ret
loope
cmp
jne
jae
cs
insb
add
pop
repz
cmp
je
dec
add
mov
inc
push
push
rcrl
jecxz
imul
jo
lds
je
dec
enter
cmp
mov
lret
gs
inc
int
ret
loope
outsb
into
arpl
outsl
shlb
outsl
pushf
adc
shlb
jae
ret
cwtl
push
mov
mov
cmp
mov
movsb
movsl
cmpsb
repz
repz
test
stos
stos
iret
repz
lods
lods
scas
scas
mov
iret
repz
mov
mov
mov
jecxz
repnz
push
mov
push
mov
cmp
adc
jo
or
jmp
add
dec
clc
push
cld
push
call
jmp
add
mov
push
mov
jae
cs
push
xorb
xor
ss
loope
or
jo
add
inc
pop
je
inc
add
cmp
jmp
mov
imul
or
sbb
fsubs
mov
stos
xor
inc
or
cmp
cmp
jp
sbb
fsubl
mov
ljmp
jns
gs
xor
jae
repz
cmc
testb
xorb
jo
sbb
imul
push
out
pop
push
xchg
out
call
ja
xchg
jo
je
lea
mov
arpl
or
dec
std
pushf
or
inc
mov
push
push
mov
jb
inc
mov
loope
cmp
inc
ret
or
adc
sub
lock
or
push
mov
and
nop
jae
dec
xor
add
mov
sub
sub
sbb
mov
cmpb
and
cmp
jno
gs
adc
push
ss
and
mov
int
mov
adc
sub
nop
clc
lods
adc
jns
lock
pop
push
pushf
jle
cld
test
inc
lcall
test
addr16
sbb
xor
fsubrs
jo
fnstenv
jae
fsubl
jns
out
mov
ffreep
inc
call
adc
lods
cmp
loopne
sub
jno
jb
into
jecxz
imul
into
jecxz
jb
gs
loop
into
popa
js
jns
pop
pushf
jp
jnp
pop
out
mov
insl
jle
fwait
xchg
addb
cmp
jb
outsl
subl
sbb
xchg
test
dec
xchg
xchg
cmp
mov
adc
mov
mov
jo
xchg
popa
xchg
jbe
gs
dec
xchg
insl
cmp
xchg
gs
push
lcall
inc
pushf
imul
mov
call
vpshufd
enter
lret
push
xchg
lret
push
int3
je
popa
into
jb
lcall
shll
xor
mov
jecxz
sahf
sbb
movsb
inc
cmp
cmpsb
sub
jae
cmpl
mov
jne
pop
cmp
rorb
pushf
jae
inc
inc
incl
insb
push
push
add
mov
jbe
adcb
daa
mov
or
out
jns
pop
popa
pop
addr16
popf
inc
pop
gs
das
inc
out
jns
push
jo
lret
cmc
mov
jp
push
lret
inc
jecxz
int3
lea
xor
push
lahf
or
sub
pop
pop
or
inc
pop
lret
cmpsl
dec
mov
jo
test
lret
and
popf
int3
adc
mov
sub
shlb
add
push
out
sbb
mov
jmp
rcr
repz
push
cwtl
xor
push
in
dec
sbb
call
adc
jg
or
pop
or
pop
mov
dec
cmp
int3
push
cltd
jno
add
xchg
push
and
push
push
or
jne
cmp
bnd
or
mov
or
dec
loopne
sbb
or
repnz
aam
adc
lea
xchg
insb
cltd
cmc
cmp
push
repnz
sti
ljmp
push
loope
lods
xchg
rorb
push
xchg
ret
sub
mov
dec
and
cltd
jo
adc
push
leave
push
insb
aam
fcoms
and
cld
and
inc
enter
dec
into
mov
sbb
in
push
in
mov
dec
xor
jo
out
add
add
xor
lret
add
mov
aas
sub
aas
loope
in
lock
pop
in
in
out
ret
ret
out
call
jmp
icebp
jno
aam
loope
mov
pop
and
jns
test
sbb
pop
mov
sbb
mov
jmp
hlt
push
hlt
mov
loope
into
test
loope
add
outsb
sbb
vmovq
int3
mov
inc
into
add
push
mov
push
cmp
arpl
rcll
jecxz
mov
inc
sub
xchg
inc
fidivs
filds
inc
loope
loop
mov
pop
inc
and
mov
test
negb
dec
lcall
sub
or
clc
inc
pop
jb
add
xor
test
push
jge
add
pop
pop
unpckhps
icebp
jl
lods
jecxz
sahf
mov
xchg
sub
cmpl
into
pop
jo
inc
insl
jle
divb
mov
rorl
push
pop
push
mov
js
xchg
inc
mov
lock
nop
andl
ret
pusha
or
cli
inc
and
add
fwait
or
sbb
popf
add
add
lds
xorb
pop
cmp
fisttpll
cmpsl
je
push
jb
xlat
lcall
pop
jbe
movsbl
fmuls
push
inc
shll
mov
fcomp
push
rcrb
imul
gs
aaa
andl
push
dec
push
mov
sbb
or
bswap
jnp
xchg
add
pop
adc
fldcw
cmpb
push
pop
ss
popf
push
mov
push
add
and
jo
loopne
pop
push
rolb
sbb
loopne
cwtl
test
cmpsb
pop
push
cmp
pop
jle
mov
movsb
sub
or
inc
cmp
jl
mov
xor
cmp
pop
mov
jnp
push
pop
mov
pusha
jne
inc
cmp
sub
outsb
les
push
push
movsl
sbb
jb
pusha
adc
test
xor
mov
and
out
dec
mov
add
sbb
jecxz
or
inc
and
pop
pop
test
and
add
adc
fcomps
push
lret
add
rclb
in
aaa
fwait
sbb
rcrb
add
std
sub
daa
or
add
incb
mov
push
out
icebp
jmp
xchg
push
ss
push
lods
loope
adc
enter
add
jbe
or
push
cmp
int3
mov
cmpxchg
ja
adc
call
cmp
cmp
call
popf
lcall
iret
cmp
popf
ja
add
lock
jns
icebp
nop
popf
ja
fdiv
lock
mov
jecxz
cld
xor
ja
insb
loop
mov
shl
inc
inc
call
pop
jge
lcall
xor
xor
pop
inc
cwtl
push
or
jge
jecxz
push
mov
outsb
out
daa
jmp
cltd
mov
out
in
mov
add
add
mov
push
push
aad
xor
lods
das
aaa
sbb
jno
pop
popf
push
jo
or
jecxz
int3
int
inc
xchg
sub
aad
mov
popa
pop
sahf
out
xor
xchg
mov
shlb
loope
cmp
cmp
les
repz
divl
cmp
cmp
es
and
jae
shlb
repz
xlat
fdivrs
out
sahf
fcmovnu
sbb
fidivs
fbstp
loopne
loope
mov
fistpll
test
std
lahf
jge
decb
leave
movsl
mov
fidivrl
mov
cmp
mov
jns
jecxz
in
xor
rcr
cmp
call
jo
jmp
aaa
in
cmp
icebp
cmp
lock
repnz
mov
jns
hlt
cmc
div
clc
xor
xor
cmp
adc
inc
stc
push
pop
xchg
inc
inc
aas
push
xor
xor
jno
lahf
pop
add
or
push
jbe
sahf
out
sahf
outsb
imul
jns
cs
aad
ret
cld
dec
jb
cmp
cs
mov
fcoms
loope
imul
sbb
xor
vpshufd
gs
pushf
mov
cmp
jo
popa
negl
gs
jo
dec
ret
lds
outsl
arpl
xchg
enter
lret
js
xchg
pop
int3
int
jo
gs
cmp
jb
je
loope,pn
loop
cmp
vpavgw
movb
inc
cmc
popa
test
cmp
insl
mull
push
cmp
jecxz
stc
jb
outsl
sti
jns
sub
std
mov
pop
pop
pushl
loop
roll
add
add
add
cmp
xchg
add
arpl
pop
pushf
aam
or
repz
js
mov
or
lods
outsl
scas
arpl
loope
cmp
cs
mov
cmp
push
mov
loop
xchg
sub
push
and
arpl
imul
sbb
xor
pop
testb
jecxz
imul
pop
pop
sbb
jecxz
pop
pop
inc
xchg
das
xchg
cmc
xor
aam
cmp
xor
xor
ss
data16
cmp
fcomps
repz
clc
clc
ds
and
mov
jecxz
les
and
push
fsubrl
into
inc
es
mov
cltd
xor
sub
sub
clc
clc
clc
sub
cs
xchg
test
xchg
ja
in
mov
imul
clc
clc
gs
cs
clc
clc
clc
xor
gs
int3
jae
jle
xchg
xor
outsb
andl
sbb
jns
dec
xchg
imul
mov
testb
out
inc
push
cs
or
orb
pop
push
popa
mov
int3
bound
jecxz
enter
pushf
cs
dec
addr16
imul
insb
insl
outsb
mov
loope
insl
mov
imul
cs
test
cmpsl
mov
inc
int
out
push
out
inc
ret
push
out
push
inc
rolb
inc
mov
out
int3
inc
mov
cmp
dec
ds
dec
dec
mov
push
cmp
or
bound
or
lds
adc
adc
mov
mov
in
push
outsl
pop
jne
fs
jb
add
mov
mov
lods
nop
pushf
sbb
mov
shlb
mov
in
rcl
pushf
push
mov
into
into
into
into
xor
and
in
cwtl
into
into
jo
mov
fcompl
in
nop
loopne
daa
pop
jmp
in
into
into
mov
or
test
mov
xor
sbb
jecxz
jecxz
sbb
les
mov
lea
ret
jne
mov
add
bound
jne
xor
mov
imull
or
xor
es
and
xchg
mov
sub
lock
push
mov
es
cmpsl
mov
xchg
sub
sbb
inc
outsb
sahf
mov
jo
pushf
jmp
pop
fcmovb
int3
shl
push
mov
incl
or
enter
mov
add
adc
push
jmp
pop
aaa
fsubrs
addb
sbb
jno
add
xchg
lods
mov
push
push
jne
cmp
adc
stos
mov
in
push
xor
int3
xchg
add
imul
adc
loopne
xor
bound
xchg
pop
pop
mov
pusha
pop
jecxz
sbb
faddl
push
mov
jp
pop
cld
out
push
xor
and
push
pop
xchg
addr16
pusha
push
rdmsr
cmc
push
sbb
cmp
testb
cmp
frstor
outsb
nop
addr16
out
and
aas
cmp
mov
jbe
mov
push
adc
mov
fs
xchg
mov
mov
mov
mov
mov
sbb
mov
mov
mov
mov
push
xchg
mov
mov
js
jno
xchg
ret
loope
or
push
into
push
iret
popa
push
sbb
xchg
imul
xchg
lret
aam
or
das
in
mov
mov
out
out
xchg
jmp
jo
sbb
mov
js
cmp
movsl
xor
repz
mov
push
mov
imul
jb
insl
mov
inc
inc
sbb
pop
int
mov
test
xor
sbb
xor
push
daa
xchg
xor
in
inc
xor
in
inc
sbb
out
push
lock
fnstcw
xor
repnz
icebp
icebp
icebp
icebp
jb
popa
je
xor
sbb
dec
mov
adc
fmull
adc
adc
adc
jecxz
jnp
xor
jecxz
jecxz
popa
jo
divl
sahf
pop
push
popf
sbb
or
out
push
arpl
jae
shll
xor
jb
xor
lea
push
push
jno
cmc
inc
lea
sbb
mov
outsl
xchg
arpl
xchg
loope
gs
jae
jae
xor
sbb
xor
lods
inc
jnp
pushf
popf
call
cwtl
mov
sahf
pop
push
adc
into
ds
in
nop
call
jmp
test
gs
imul
push
gs
xchg
mov
fnstenv
gs
sbb
xor
xor
fbld
loope
insb
loope
shrl
loop
into
sbb
inc
hlt
rcr
inc
cmp
dec
shll
loope
ret
outsb
les
jb
add
sub
xchg
dec
and
xor
ds
in
push
icebp
icebp
fnstenv
push
imul
jne
insb
jle
icebp
icebp
push
jne
clc
clc
call
std
imul
lcall
push
daa
mov
sub
push
mov
push
xchg
mov
lods
xor
imul
push
pop
js
fistpl
jb
icebp
mov
xchg
jns
lea
dec
inc
inc
addr16
cmp
je
adc
call
ljmp
loope
je
aam
dec
enter
mov
gs
in
adc
xchg
pop
push
pop
adc
inc
mov
push
xlat
pop
push
ret
shll
jne
lock
sarl
or
adc
loop
pop
mov
jne
mov
in
jne
sub
push
inc
add
into
test
jmp
scas
xchg
ret
nop
jle
pop
sbb
jo
lea
jmp
sbb
push
ss
sar
push
push
pusha
iret
lock
rolb
out
xchg
mov
cmp
sti
adc
pop
inc
cmp
mov
jmp
mov
shlb
test
adc
and
mov
ss
call
cli
sub
jb
jo
push
mov
pushf
in
adc
hlt
in
aad
mov
lods
js
data16
dec
push
aaa
mov
shr
add
push
sti
ds
mov
movsl
sbb
les
xor
lock
mov
mov
mov
mov
arpl
or
popf
cmp
lea
pop
add
mov
enter
mov
xor
je
jmp
cmpl
add
mov
aam
jne
sbb
cmp
xchg
mov
mov
jp
out
enter
push
out
sub
dec
sbb
ret
pop
je
movl
cld
jb
dec
dec
cmpw
jne
xchg
add
jb
jg
pop
jne
insb
mov
add
pop
push
mov
push
jae
bound
les
inc
xchg
cmp
add
pop
shlb
mov
lds
out
jmp
mov
outsl
orb
jp
mov
mov
or
adc
cld
xchg
sarb
pop
xor
adc
fcmovnu
leave
push
or
dec
push
adc
jne
xchg
imul
push
inc
outsl
bnd
xor
xor
cs
es
cli
jecxz
ret
je
cs
inc
outsl
ja
out
gs
jne
mov
mov
out
inc
jmp
lods
loope
pushf
cld
mov
add
pushf
fs
sar
sarb
inc
push
jb
or
jecxz
mov
or
fdivs
jnp
stc
mov
mov
sbb
mov
lret
and
push
sbb
adc
xchg
sub
mov
testb
xchg
push
call
xchg
into
sbb
add
into
push
std
clc
cmpsb
daa
fidivs
push
adc
lret
into
dec
jecxz
adc
pop
daa
xchg
mov
cli
xchg
fidivl
push
fwait
push
or
add
jmp
imul
push
icebp
stc
std
pop
sbb
lock
push
push
mov
loop
xor
fimuls
neg
xor
sti
shlb
icebp
sti
lock
dec
nop
cld
hlt
cld
mov
push
push
sbb
ret
adc
adc
push
and
gs
int3
push
lock
pop
push
arpl
sub
xor
xchg
inc
mov
lret
mov
lods
adc
loope
dec
loopne
add
add
lret
lock
and
inc
xchg
pop
xchg
pop
adc
adc
int
dec
pushf
rclb
mov
push
in
push
xchg
loope
je
je
jo
push
pop
pop
sub
gs
gs
cmp
adc
add
xchg
or
push
sbb
call
or
les
shll
adc
mov
adc
mov
lret
popa
emms
pushf
sbb
and
add
mov
push
add
lea
inc
or
outsl
adc
mov
pop
add
test
shlb
xchg
std
in
std
inc
mov
adc
jecxz
into
in
push
ljmp
je
daa
imul
ja
xlat
adc
insb
xor
xor
sahf
dec
rcrb
sub
ret
mov
lock
xor
hlt
push
cmc
dec
loope
dec
mov
testl
stc
cli
push
cmp
popa
sar
std
out
call
mov
outsb
cmp
jecxz
gs
gs
repz
jb
je
mull
jecxz
insb
mov
arpl
shl
xchg
cmp
dec
loope
sbb
xlat
outsb
fcoms
push
xchg
fldenv
jno
jne
gs
jb
and
jae
iret
repz
loopne
xchg
xchg
xchg
cmp
push
outsb
mov
aas
pushf
push
popf
ret
loope
cmp
mov
es
xchg
cmpsb
inc
repnz
mov
push
rclb
test
push
xchg
jne
gs
cmp
jae
je
repz
push
xchg
shlb
shll
repz
outsl
outsb
outsb
arpl
dec
outsb
test
inc
mov
add
loopew
mov
in
test
in
ds
aas
mov
mov
cmp
aas
lds
jmp
xchg
clc
or
stos
jno
or
int3
ror
jno
aam
fsub
sbb
or
jmp
sbb
sbb
shrl
dec
popf
lcall
push
and
jl
pop
push
push
jns
dec
addl
hlt
orl
push
mov
or
lea
mov
sub
test
clc
leave
inc
rcrl
inc
inc
repz
out
cltd
pop
imul
inc
in
rcl
daa
jns
mov
shlb
mov
jno
add
jecxz
cmp
cmp
add
xor
cltd
mov
idiv
out
xor
test
clc
iret
inc
jge
cmp
je
push
push
mov
jge
loop
xorb
lock
and
push
adc
and
sub
fidivrl
fcoml
dec
lock
faddl
mov
fnstsw
aam
mov
cmpb
pop
mull
mov
or
add
or
sbb
dec
daa
jp
push
mov
jae
push
test
mov
add
test
add
pop
mov
cmpsb
or
mov
pop
daa
rol
mov
adc
daa
adc
cltd
sub
or
rorl
out
inc
jb
insl
sahf
imull
cmp
ret
cmpsb
jp
imul
popa
stos
push
repnz
xor
imul
ja
out
ljmp
sbb
mov
inc
loope
loop
jecxz
stc
sub
loope
gs
inc
pusha
jp
out
popa
insl
sahf
daa
mov
jns
out
js
push
jns
out
inc
jb
push
xchg
aam
fimuls
cmp
pop
pop
nop
pop
xchg
push
xchg
push
sbb
xchg
xchg
inc
xchg
jb
popa
xchg
insl
mov
gs
push
cltd
lcall
pushf
pop
popf
xor
stc
inc
loopne
pop
push
mov
setge
mov
sbb
leave
mov
and
cmp
or
inc
aas
iret
iret
rep
jb
jb
repz
jne
push
imul
outsl
into
inc
xor
loope
out
sbb
filds
jne
icebp
push
addb
push
pop
inc
cmc
fmuls
cmp
cld
adc
ret
jne
mov
push
xlat
stos
inc
lods
fs
sbb
loopne
xlat
jno
cmp
push
push
add
popa
push
push
test
add
sub
in
sub
addb
fsubl
xchg
cmp
in
clc
push
mov
fdivrl
nop
out
movsl
mov
sub
aas
popa
arpl
outsl
outsb
cmp
fwait
gs
jae
je
loope
cmp
arpl
sbb
xchg
and
shll
test
adc
dec
adc
xor
mov
dec
test
mov
add
add
add
pop
or
push
dec
repz
jb
insb
cmp
xor
cs
inc
arpl
sti
lea
fwait
test
cmp
iret
repz
outsb
je
xor
dec
negl
jae
dec
xchg
imul
hlt
dec
cmc
jo
mov
sub
outsl
mov
sub
aam
mov
push
sbb
push
mov
imul
outsb
popa
xlat
je
fsts
jns
sub
arpl
lods
enter
inc
pop
aas
xorb
loop
xor
push
out
jns
inc
jne
gs
out
sahf
outsb
je
jb
shl
sbb
mov
cmp
int
movsl
lock
enter
insb
or
cmp
mov
fs
cmc
add
dec
or
mov
adc
mov
push
add
pop
sub
fisttps
sub
xchg
jno
lods
sbbl
add
mov
aaa
or
gs
test
push
call
daa
pop
lret
sub
mov
je
push
cs
outsb
cmp
sbb
ss
ja
cmp
aam
lock
mov
push
test
andb
add
pop
ret
mov
addr16
xchg
sahf
inc
lock
movsb
mov
aaa
pusha
mov
dec
and
push
sbb
cwtl
pop
sub
lock
adc
push
push
sbb
sbb
dec
add
das
je
add
loop
nop
add
xorb
and
daa
add
lcall
adc
stos
cmp
jge
push
stos
xor
shr
push
test
inc
add
idivl
mov
js
pop
stc
cmp
add
xor
mov
cmp
jl
push
lea
push
sahf
mov
je
cmp
jne
mov
cmp
add
jl
add
push
cs
cmp
je
je
cmp
aas
popf
jne
jle
das
mov
add
gs
test
test
mov
test
inc
call
cmp
insb
clc
jmp
sbb
adc
in
or
into
nop
mov
fs
fcmovbe
lea
cmp
testb
push
cli
int
stc
adc
or
daa
push
pop
jne
sbb
push
sub
push
jne
inc
cmp
lods
xor
cs
mov
mov
and
je
or
or
push
mov
cmp
adc
cmp
repz
int3
push
jo
jge
movsl
enter
rclb
leave
push
enter
mov
inc
xorw
inc
jl
xor
cmp
jl
ss
sbb
xor
add
rcrb
icebp
test
bound
shlb
push
mov
adc
inc
dec
push
jmp
pop
push
int3
and
icebp
mov
mov
in
push
push
ja
incl
inc
push
mov
xor
int3
mov
loop
jl
cmp
or
xor
mov
sub
mov
leave
push
mov
cmp
mov
fmuls
add
pop
sub
pop
push
push
mov
push
push
movsb
das
in
addr16
jb
push
jbe
rolb
dec
push
scas
xor
loope
sbb
jb
jbe
gs
jb
popl
pop
push
dec
hlt
clc
push
les
xor
add
xchg
call
lea
pop
and
pop
nop
xor
ret
add
cmc
or
in
push
push
sbb
mov
in
push
push
aaa
fmuls
movsb
cld
andl
stc
leave
push
xchg
jno
in
xor
dec
call
in
dec
xorl
test
dec
aaa
in
mov
or
xchg
in
mov
pop
int
jg
ret
add
push
sbb
adc
dec
jno
data16
addb
push
jno
and
xabort
je
mov
sti
mov
inc
aam
mov
push
sahf
add
jl
aas
adc
adc
daa
in
movsl
pop
pop
es
mov
xchg
push
scas
jbe
add
sbb
jne
mov
jmp
andb
cmpsl
xchg
inc
bound
cmp
incb
xchg
icebp
xchg
jecxz
loopne
pop
or
arpl
loop
jne
in
out
in
iret
ret
pop
stc
cli
sti
cld
inc
mov
repnz
loopne
jae
fbstp
cmp
in
out
call
jne
jnp
mov
cmc
sub
adc
dec
icebp
cmp
ja
or
cld
sub
pop
fcoms
test
sub
addr16
jno
sbb
jnp
sbb
jo
stos
add
jne
xor
imul
add
xchg
push
leave
aam
cmp
fs
add
jne
jmp
cmp
jne
dec
shll
push
mov
dec
mov
sub
dec
sub
cwtl
inc
inc
push
sub
pushl
sub
ja
jge
jge
push
lods
mov
sub
es
fcmovb
dec
push
and
push
out
and
roll
fisttpl
dec
ljmp
inc
cs
sub
maxps
push
dec
lock
fwait
imul
int
cmc
inc
pop
std
xchg
cmpsb
ljmp
pop
mov
sub
lret
sbb
les
popa
cmp
xchg
movsb
push
ficomps
push
cmpsb
sbb
lds
adc
and
jae
fnstenv
test
arpl
icebp
arpl
xchg
sub
mov
fbld
mov
jo
sar
and
icebp
icebp
icebp
icebp
es
and
jae
and
sbb
mov
mov
push
push
ficoml
dec
dec
out
mov
lock
mov
pop
xchg
mov
iret
repz
mov
popa
cs
mov
adcb
cmp
arpl
lea
fs
mov
addl
push
jle
test
sbb
mov
lea
outsl
lods
out
lods
es
and
dec
jns
xchg
adc
mov
stc
xchg
enter
xchg
jno
jb
test
jns
insb
xor
cs
jecxz
jno
loopne
cwtl
cltd
gs
shrl
inc
jne
out
sahf
out
outsb
je
fsubr
jns
jb
arpl
jae
jae
dec
stos
cmp
std
inc
stos
dec
jl
repz
repnz
mov
or
arpl
gs
insl
jbe
call
shl
mov
insl
imul
je
out
lods
out
int3
int
and
shlb
and
aad
mov
push
fsts
int3
lods
lods
inc
aad
cmp
inc
mov
cmp
jecxz
jb
outsb
je
enter
outsl
sahf
jecxz
sahf
arpl
daa
stos
jne
mov
jb
mov
pop
xchg
and
aam
sbb
sbb
clc
push
lcall
fidivrl
mov
mov
add
das
and
into
xor
adc
sub
imul
les
fcmovb
lock
call
pop
rclb
jp
clc
lea
insl
lock
mov
ja
xchg
pop
in
fnstenv
jbe
xor
test
fsts
mov
push
js
test
sar
push
mov
es
sar
in
jp
push
sbb
aaa
mov
lock
out
jle
inc
mov
pop
hlt
lock
jno
hlt
jmp
fistpll
sarb
clc
jl
pushf
notl
fstp
add
adc
ret
sbb
mov
call
mov
cwtl
adc
adc
push
cmp
cmp
fisttpll
mov
lret
mov
jne
int
test
push
pop
hlt
div
fbld
cwtl
sar
rorb
xor
add
push
sub
out
xor
popa
test
ljmp
lods
xchg
or
in
pop
cmp
repz
mov
inc
cmp
inc
cmp
aam
push
pop
inc
jmp
in
mov
pop
pusha
and
or
rorb
sbb
mov
inc
adc
push
or
inc
or
int3
outsl
or
mov
pop
sub
mov
jecxz
lret
rolb
adc
and
jo
in
enter
addr16
sub
mov
or
jge
movsl
clc
dec
cmp
mov
push
push
in
inc
cltd
xchg
mov
add
jmp
sub
mov
movb
sub
add
addr16
add
push
push
sbb
and
cwtl
push
enter
inc
in
ret
jmp
inc
sub
xchg
ret
mov
test
aad
mov
inc
and
ret
stos
push
jge
repz
add
cs
jno
ret
mov
sub
lea
pop
mov
nop
push
jbe
jns
pop
jmp
cmp
sbb
hlt
call
xor
cmp
movsl
sub
inc
push
clc
pop
inc
nop
xor
jge
add
sub
jge
mov
imul
push
hlt
sbb
iret
sbb
mov
mov
xchg
mull
jae
inc
pop
and
inc
xchg
push
pop
push
in
xchg
insl
sub
add
push
dec
add
nop
adc
sahf
xchg
mov
decl
dec
push
fistl
rolb
push
cwtl
sbb
adc
and
mov
arpl
sbb
mov
push
leave
adc
ret
push
push
or
push
ret
pop
adc
inc
mov
xor
imul
mov
sbb
xor
ss
in
jb
popa
out
jns
jmp
aas
gs
repz
adc
xor
push
aaa
pop
jmp
gs
out
stos
cmc
dec
data16
pop
shl
hlt
test
sbb
les
nop
push
inc
shll
mov
mov
inc
imul
inc
aaa
inc
fcoml
xor
shlb
lea
pop
xchg
mov
push
add
mov
inc
daa
mov
test
lea
xor
ret
mov
push
jmp
insb
mov
sbb
cmp
testb
movsb
jne
inc
inc
in
sub
or
cmp
inc
lock
imul
bound
mov
outsb
insb
inc
and
adcl
testb
aad
push
push
push
and
test
insb
sbb
leave
adc
xor
je
push
ror
push
inc
jno
cmp
insb
cmp
add
les
lcall
fcoms
out
je
push
js
repz
insb
push
ret
loope
jo
xor
xor
push
cmp
dec
push
jo
push
outsl
je
adc
jno
arpl
repz
jae
xor
inc
icebp
cmp
sub
jae
lahf
nop
ret
in
je
lea
mov
repnz
repz
jae
xor
cmp
push
dec
gs
xor
xor
pop
push
shl
push
dec
dec
and
lcall
mov
inc
in
fs
jmp
add
jne
je
xchg
push
sbb
push
mov
fdivrs
pop
or
xor
push
push
gs
jmp
dec
stos
pop
xchg
add
adc
cmpsb
dec
lcall
das
jbe
jo
sub
repz
push
cli
insb
sti
test
xchg
dec
cld
sahf
out
dec
ficomps
push
dec
mov
jmp
push
add
dec
repnz
mov
sahf
movsl
mov
out
jns
insb
mov
mov
popa
mov
insb
ret
or
test
cltd
lcall
adc
jp
out
outsb
push
adc
inc
mov
pop
mov
mov
pop
sbb
les
out
lret
sub
mov
mov
fwait
arpl
enter
or
inc
je
arpl
sahf
jne
gs
ja
enter
in
out
jb
arpl
test
and
aad
dec
xchg
push
push
xor
inc
add
icebp
loope
call
js
nop
dec
jne
add
add
mov
adc
pop
je
neg
sbb
push
and
push
mov
stos
mov
les
push
push
inc
xor
jne
xchg
test
push
ret
mov
cmp
aad
cwtd
or
sub
adc
ret
cmpw
shrb
dec
cmp
lret
push
inc
adc
xchg
jbe
inc
push
mov
sbb
adcb
popa
cmp
cmp
mov
push
addr16
je
ret
imul
ja
mov
jno
push
push
in
jae
cmp
pusha
fwait
loopne
push
or
or
mov
rolb
cmp
jb
sbb
roll
decl
incl
add
in
int
adc
dec
int3
jmp
dec
les
inc
inc
mov
in
in
nop
cmp
jle
adc
mov
fbld
fmull
mov
push
test
in
shll
adc
sbb
cmp
test
push
adc
push
fdiv
xor
sub
inc
adc
mov
rcr
push
in
in
jnp
data16
dec
imul
dec
in
jo
xlat
pop
pushf
lock
adc
gs
rorb
sub
jb
pop
out
add
lahf
push
dec
sti
lret
or
insb
out
cmpsb
mov
dec
repz
mov
jne
sbb
cmp
dec
outsb
pushw
xchg
cli
sbb
cmp
and
outsb
gs
push
jge
push
gs
scas
stos
xchg
out
inc
les
fldcw
mov
cwtl
lcall
cmp
es
gs
repz
je
insb
outsl
jae
scas
cmc
cmp
dec
cmpsl
outsb
inc
pop
and
stc
xor
mov
pushf
aam
lods
mov
cwtl
cmp
fwait
popa
sbb
pusha
xchg
enter
andl
and
push
xlat
aam
flds
mov
pusha
loope
mov
fs
aam
adc
out
mov
and
or
gs
push
ret
ret
jae
jl
sbb
xchg
xor
rcrl
lock
ss
cltd
push
jne
and
insl
orl
test
je
lea
push
sbb
add
xchg
jmp
orb
lahf
xchg
sbb
push
hlt
cmp
loope
push
test
xor
je
pusha
popa
or
jno
sub
or
hlt
and
jne
push
int3
out
call
xor
inc
adc
or
loopne
sbb
mov
add
mov
or
add
mov
popa
pop
or
mov
adc
repz
add
je
mov
inc
inc
jmp
andb
or
mov
pop
sub
inc
mov
sbb
movsl
test
mov
inc
pop
push
xor
add
sbb
jne
andb
jge
add
sbb
fmul
or
jmp
js
mov
mov
dec
xchg
inc
into
fs
outsl
je
sar
sbb
in
cmp
andl
pusha
push
inc
or
cmp
sti
sub
mov
cmp
rolb
mov
mov
pop
jb
xor
aaa
inc
aaa
add
inc
add
leave
mov
mov
loope
adc
add
add
clc
push
mov
mov
inc
inc
test
jne
pop
ss
ret
mov
and
je
xorl
je
mov
fwait
add
lret
mov
jne
mov
sub
push
add
adc
cmp
je
lret
push
inc
jmp
mov
cmp
bswap
pop
add
jb
aam
mov
inc
stos
or
sub
in
inc
push
jo
sbb
in
in
out
out
call
loope
imul
mov
les
inc
aad
lods
mov
adc
mov
cmp
mov
dec
movl
movsb
decb
add
cmpl
or
rcrl
sbb
inc
daa
sbb
inc
inc
and
jbe
jns
js
pop
hlt
insl
cmc
inc
into
adc
imulb
loope
pushf
stc
arpl
je
outsl
cld
xchg
push
adc
cmpsb
flds
rclb
scas
cmp
adc
pop
inc
jae
insl
dec
in
mov
mov
ss
lea
in
inc
sbb
add
mov
mov
sub
cmp
jae
mov
cmpsb
or
push
adc
sarl
ret
mov
sbbb
and
add
add
cmp
jbe
mov
pop
pop
mov
add
ljmp
test
hlt
int
addl
inc
jnp
inc
sbb
jmp
mov
sub
or
lea
movzwl
sbb
dec
adc
cmp
clc
add
test
fdivs
cmp
jb
mov
and
je
cmp
and
pop
fmuls
movsl
hlt
rolb
pop
mov
loop
mov
sub
not
add
jg
out
mov
loop
shll
scas
arpl
aad
push
or
and
call
inc
mov
adc
mov
xor
mov
inc
dec
mov
xor
mov
mov
dec
push
adc
dec
mov
sbb
mov
jbe
adc
sub
push
sub
sarl
push
pop
xchg
jne
or
and
or
pop
gs
sti
movsb
movsl
adc
xchg
orl
clc
jne
scas
push
es
mov
or
daa
push
out
xchg
dec
or
clc
dec
xor
aaa
cmc
jo
xchg
popa
ficompl
add
sbb
fwait
sub
addb
push
and
mov
je
xchg
push
inc
ljmp
cmpsl
ljmp
xchg
imul
push
add
clc
push
and
mov
fisubrl
mov
mov
push
adc
adc
outsb
push
loope
shll
dec
cmp
fcompl
in
mov
mov
in
xchg
mov
lock
movsl
loop
xchg
or
push
lock
or
nop
mov
sahf
dec
aaa
mov
xchg
movsb
mov
int3
push
mov
push
mov
sub
test
andb
roll
mov
pop
es
cs
out
sub
push
pop
xchg
cltd
mov
jge
or
stos
jecxz
in
stc
clc
mov
mov
pusha
cmp
mov
add
push
loop
testl
and
pop
mov
xor
push
pop
gs
push
xchg
jno
gs
in
out
repz
imul
insb
pcmpeqd
lock
xchg
sbb
mov
mov
lahf
loop
xchg
arpl
pop
cmpsl
cwtl
jae
cld
adc
push
adcb
xchg
pushf
in
or
pushf
adc
xchg
fisttpll
and
call
pop
or
mov
ret
sbbl
or
add
or
add
mov
mov
push
inc
or
xor
jl
lcall
cmp
loope
cmp
outsb
mov
mov
out
mov
fs
imul
je
inc
push
jp
les
cmp
pop
test
fldcw
pusha
xchg
test
push
imul
inc
cmpsb
mov
mov
xchg
je
aas
je
xchg
std
inc
repz
rep
insb
inc
popa
arpl
leave
push
push
jmp
out
mov
pop
and
lea
dec
movsl
mov
sub
pop
fs
jge
push
aad
mov
pop
add
idiv
add
add
push
cmp
add
imul
pop
cmp
push
daa
push
call
ror
mov
xor
inc
aas
mov
out
dec
mov
sub
mov
add
sub
or
arpl
lret
jmp
pop
inc
repz
cmp
sub
jns
inc
icebp
imul
fprem1
aam
idiv
cwtl
sbb
and
lcall
mov
js
fists
aam
mov
jp
ss
and
dec
adc
das
in
nop
or
jns
dec
insb
gs
sti
mov
icebp
cmc
cwtl
pop
gs
jg
cmp
es
inc
jb
iret
lods
inc
mov
push
sbb
decl
lea
mov
jg
mov
cmp
push
mov
mov
hlt
xchg
lods
mov
xchg
sahf
into
pop
mov
add
xchg
mov
or
cmp
and
mov
lock
imul
lds
mov
repnz
lcall
mov
andb
call
inc
push
xchg
sbb
push
sbb
push
xchg
jae
in
push
imull
test
cld
sub
fdivr
pop
mov
and
repz
jb
jae
jp
je
aaa
sub
jne
sbb
cmp
inc
les
sub
subb
out
jl
adc
loope
clc
les
fidivs
ds
xchg
jne
jne
jne
je
jo
sbb
jbe
jbe
jbe
jbe
jbe
push
xchg
sub
jbe
jne
jbe
loope
cmp
jne
jne
jne
jne
jne
sbb
xchg
jne
jne
loope
loope
jbe
jbe
jne
jne
je
fisttps
je
cmp
jbe
insb
je
jae
je
je
xchg
loope
je
je
je
je
jo
sbb
je
je
je
je
jae
push
xchg
lock
jae
jae
jae
loope
cmp
jae
jae
jae
jae
jae
sbb
xchg
jae
jae
ret
loope
pushf
jae
ja
ja
ret
loope
ljmp
cmp
adc
ja
ja
ja
ja
jmp
loope
jbe
jbe
add
push
add
sbb
gs
jae
jb
outsb
je
add
je
insb
outsb
add
aas
xor
loop
adc
inc
pop
push
inc
pop
loope
or
arpl
and
dec
orl
add
insb
outsl
push
sbb
xchg
fs
insb
insb
sub
pushf
jecxz
imul
je
cltd
jo
jo
add
outsl
shr
jecxz
add
cmpsb
add
pop
out
popa
outsb
fs
imul
lds
pop
xor
out
arpl
fs
fdivs
in
cmp
add
sub
js
cs
leave
pop
jb
add
arpl
insl
mov
add
gs
pop
or
lret
jb
arpl
outsl
imul
sub
and
ret
mov
loope
push
loop
les
jb
adc
ja
mov
scas
outsb
xor
jo
add
push
inc
push
push
cs
pushf
and
mov
push
mov
or
bound
arpl
add
shrb
int3
inc
push
add
addr16
inc
sub
inc
popa
add
outsl
imul
insb
mov
sub
add
fadds
outsb
jbe
arpl
cwtl
or
inc
inc
dec
xor
lahf
xchg
int
inc
cmp
dec
jb
pop
add
dec
outsl
popa
or
out
add
sbb
add
adc
pop
xor
loop
jp
push
sbb
xor
mov
outsl
insb
mov
xor
dec
mov
xor
imul
push
push
push
pop
je
out
iret
jne
mov
jle
push
imul
outsl
dec
jne
subb
mov
in
lea
insb
aam
push
cmp
and
push
sub
jbe
subl
jb
clc
aaa
stos
and
inc
xor
outsl
push
xor
cmp
jne
loope
fcoml
push
jb
shlb
fdivl
dec
xor
pop
xchg
mov
adc
cmpsb
add
dec
cmpsb
cmp
jno
and
add
sahf
add
jo
lcall
ja
jne
push
jg
dec
outsl
fs
fldt
insb
pop
int
mov
add
xor
inc
push
dec
inc
dec
pop
insl
push
loop
or
dec
movl
inc
cld
fcoms
repnz
cwtl
fildl
ret
mov
arpl
popa
or
jnp
into
lret
sbb
mov
je
mov
nop
pop
push
dec
dec
outsl
outsl
imul
repz
repz
push
mov
mov
scas
add
push
add
iret
es
sbbb
ret
adc
mov
in
out
ja
push
loop
insb
lea
outsb
mov
push
inc
cmp
lock
xor
and
les
pop
mov
mov
enter
rolb
test
stos
jno
les
and
cmp
daa
fidivl
and
jae
add
shl
mov
mov
cs
addr16
out
mov
jno,pn
sub
in
test
xor
xor
outsl
push
lret
jecxz
daa
jl
movl
cmp
loopne
mov
mov
pop
pop
dec
sbb
cmp
sbb
mov
sbb
sub
icebp
dec
xor
or
dec
push
fiaddl
cmp
sub
mov
insb
dec
mov
add
je
pusha
mov
inc
and
jl
add
or
lret
xor
pop
xor
pushf
insl
xor
push
or
add
test
mov
pusha
lds
bound
xchg
fstps
divl
mov
leave
cmp
popa
add
aas
xor
mov
push
mov
bound
or
pmaxsw
mov
fildl
sub
movsl
addr16
jns
pop
add
sub
pop
pop
outsl
pop
mov
push
test
out
mov
insb
in
mov
and
fs
dec
xor
insl
sub
cmp
shrb
add
inc
add
xor
add
cmp
pop
cmpsl
leave
popa
push
loope
mov
sub
or
mov
xchg
pop
lcall
inc
divb
pop
dec
sbb
xorb
and
cmp
add
add
fcomps
mov
sbb
mov
fwait
cmp
lods
push
negb
fwait
push
xlat
jp
insb
inc
pop
adc
imul
lret
pusha
aaa
jmp
push
fidivrl
or
aas
jecxz,pn
movsb
sub
mov
adc
push
add
fs
xor
push
enter
adc
pop
push
fwait
aad
xor
jbe
adc
mov
cmp
or
iret
jns
or
cmp
push
lret
gs
adc
pop
dec
pop
mov
mov
mov
pushf
int3
adc
iret
enter
pop
mov
xchg
fwait
sbb
repnz
es
das
or
sbb
gs
enter
mov
mov
mov
inc
jns
pop
xor
test
xor
dec
imulb
sbb
test
xchg
sub
cmp
add
leave
bound
or
dec
sub
dec
push
add
lret
adc
scas
in
fidivrl
pop
stc
push
adc
or
sbb
push
popa
data16
cmpsl
inc
add
cs
xchg
fbld
xor
jne
es
jmp
lds
sbb
cvtpi2ps
std
in
add
pusha
cmp
xor
in
loope
add
xchg
add
aaa
inc
dec
xor
icebp
jae
fidivrs
outsb
sbb
aaa
inc
cmp
pop
add
add
jl
leave
jbe
lds
loope
or
sub
sbb
fdivl
or
mov
into
mov
add
lock
stc
dec
mov
add
ja
add
add
add
add
add
add
add
inc
add
inc
add
rolb
add
add
add
inc
add
add
push
push
add
inc
popa
outsb
arpl
inc
insb
insb
add
fs
insb
insb
roll
roll
roll
roll
add
add
inc
add
add
add
add
add
add
add
add
inc
add
add
add
push
rolb
rolb
rolb
add
add
incl
add
add
add
add
add
jmp
inc
add
add
add
jl
inc
add
add
imul
gs
xor
cs
insb
add
add
add
dec
outsl
popa
fs
imul
add
add
inc
gs
jb
arpl
fs
jae
add
add
add
push
imul
insb
insb
outsl
arpl
add
add
jb
jne
insb
inc
jb
add
add
push
inc
push
push
cs
insb
add
add
pop
jbe
outsb
jo
imul
add
dec
xor
cs
insb
add
add
add
gs
dec
bound
arpl
push
push
inc
push
xor
cs
insb
add
add
ja
jo
imul
mov
push
pushl
mov
xor
mov
push
inc
inc
outsl
insl
jo
arpl
mov
add
sbb
pusha
mov
mov
cld
lods
xor
test
je
loopne
sbb
xor
lea
movsb
mov
call
cmp
jae
push
or
xor
inc
xor
mov
lea
mov
mov
call
sub
lea
add
mov
call
pop
sub
jae
and
call
mov
call
jne
pop
cmpsb
sub
inc
mov
sub
add
fcos
cmp
sub
add
movsb
pop
inc
inc
jmp
add
jne
xchg
lods
xchg
inc
ret
add
flds
in
call
leave
call
out
jb
ret
sub
sbb
ret
add
sub
sub
adc
push
sbb
inc
add
inc
jmp
ret
jns
icebp
cmp
sbb
mov
sub
shl
mov
jae
shll
sub
push
fsubrp
xchg
add
xlat
loope
jo
push
pop
ret
xorb
cmp
push
mov
lcall
mov
push
push
push
call
adc
bound
mov
mov
add
fadds
add
push
or
lea
pop
or
dec
add
jae
test
je
add
add
jnp
add
jne
pop
mov
sbb
ret
das
add
or
movsl
xor
nop
fistl
sub
lea
push
push
push
call
lock
add
jae
bsr
jne
jnp
push
add
ss
xor
dec
cmp
dec
or
push
push
cltd
adc
mov
es
sub
js
jmp
test
add
xor
test
fs
xchg
push
aas
pop
mov
xchg
or
mov
or
enter
movsl
cmp
sbb
push
stos
jno
std
xchg
dec
push
and
call
addr16
jne
arpl
add
dec
inc
mov
add
movb
add
mov
in
xor
repnz
lret
cmp
xor
and
or
add
xchg
pop
pop
ret
push
mov
add
add
push
cmc
pop
sub
fisttps
lret
push
call
mov
add
jle
add
roll
sti
xor
add
je
push
mov
add
loopne
cs
jne
xor
add
add
jmp
add
jne
sub
jo
leave
add
incb
icebp
mov
add
xor
pop
or
ret
je
mov
push
add
mov
sub
add
pop
clc
lods
mov
add
lods
aas
mov
sub
push
push
add
in
movw
or
lods
cmpw
add
decb
sgdtl
shr
clc
add
mov
add
dec
stos
daa
pop
daa
shr
mov
insb
xchg
xchg
mov
or
pop
add
pop
add
or
hlt
or
lods
insb
fistps
rorl
push
lret
and
cmp
or
add
mov
mov
movzwl
test
jne
test
push
fistpll
dec
test
loopne
cld
pop
adc
add
cmp
jge
mov
inc
movzbl
add
sub
je
outsl
push
test
enter
sbb
ret
and
inc
or
rclb
les
add
inc
shrb
adc
je
cmp
jp
jne
push
or
adc
jmp
push
fwait
roll
inc
add
pushw
push
push
call
dec
pop
sbb
addl
push
jmp
sbb
mov
mov
cmp
push
je
jae
or
or
sar
rep
add
add
aas
jnp
cli
sub
int3
or
stos
pop
ja
lds
xchg
xchg
outsl
mov
fdivl
jne
jecxz
mov
mov
push
push
jp
or
adc
incb
mov
jge
data16
push
cs
xor
cmp
enter
sub
pop
rcrl
enter
mov
push
mov
call
push
lds
and
rolb
je
cmpb
adc
inc
in
stos
dec
add
jmp
pop
add
cli
cmp
jne
jmp
mov
call
insl
movl
shl
sub
iret
mov
mov
out
enter
mov
repnz
sbb
lret
pop
xor
pop
cmp
push
je
add
add
leave
insb
lock
cli
sub
jmp
push
push
push
call
test
dec
add
lds
jae
bound
push
lock
sbb
mov
int
orb
xchg
out
ret
xchg
call
addl
jmp
mov
cwtl
adc
rolb
sbb
lds
mov
and
ds
jo
pop
arpl
inc
push
test
or
jmp
xor
xchg
xchg
leave
xor
pop
lret
test
pop
test
sbb
mov
outsb
mov
hlt
push
outsl
adc
les
shlb
sub
mov
cmp
test
jb
leave
push
rolb
or
pop
and
add
adc
jl
sbb
shr
or
add
push
push
rol
ss
push
mov
test
push
mov
mov
pop
cmpsb
mov
sbb
push
test
sahf
repz
mov
xor
cmp
ja
js
invd
fstpl
push
test
rcrb
mov
movsb
ja
add
js
inc
jo
insb
imul
and
jb
jb
loopne
je
arpl
jo
inc
mov
je
add
and
gs
push
shrb
jne
and
je
bound
fidivrl
insb
outsl
and
adc
je
dec
dec
add
scas
fs
cmp
aad
insb
fs
add
push
fcmovnu
jmp
jne
add
inc
xor
add
jae
popa
addr16
outsl
js
add
inc
mov
pop
je
imul
or
js
je
dec
sub
add
add
repz
popa
outsb
fs
add
outsb
adc
inc
pop
inc
outsl
imull
mov
push
hlt
push
imul
hlt
arpl
ss
jbe
das
outsb
sahf
out
mov
insl
shl
cmp
popa
jmp
cmp
and
pushf
sar
xchg
push
pusha
mov
mov
cld
lods
xor
test
je
xor
lea
movsb
mov
call
jae
cmp
jae
push
push
push
xor
inc
xor
mov
lea
mov
mov
call
jae
lea
add
mov
call
jae
pop
pop
pop
sub
jae
mov
call
jmp
mov
call
adc
dec
jne
inc
call
mov
cmp
sbb
cmp
sbb
push
mov
sub
rep
pop
inc
inc
jmp
add
jne
xchg
lods
xchg
add
inc
ret
xor
inc
call
adc
call
jb
ret
sub
mov
popa
ret
add
add
push
add
movsb
add
add
enter
rolb
rolb
add
adc
inc
add
add
lea
mov
mov
mov
movb
add
sub
mov
xor
ret
mov
popl
add
push
push
push
push
push
push
lea
mov
push
mov
push
push
pushl
push
mov
add
mov
call
pop
mov
push
push
mov
mov
add
mov
mov
mov
add
mov
mov
add
mov
add
lea
push
push
push
call
pop
pop
add
mov
push
mov
mov
add
sub
mov
mov
mov
call
mov
mov
mov
pop
jmp
add
push
push
push
call
mov
pop
pop
pop
pop
pop
pop
jmp
