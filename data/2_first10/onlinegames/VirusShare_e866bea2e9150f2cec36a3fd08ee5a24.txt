stc
ja
call
in
sub
push
push
push
mov
mov
add
andb
outsl
jmp
inc
les
push
or
in
mov
gs
popa
enter
mov
jbe
lret
lret
outsl
int3
int
jb
jne
into
push
shll
shlb
xlat
insl
mov
inc
aad
add
cmp
pop
mov
mov
fldcw
fidivl
fisttpl
push
add
pop
loop
jecxz
add
inc
in
in
jmp
inc
call
imul
aaa
lock
pslld
mov
hlt
cmc
sbb
add
aaa
fbstp
cmpsb
clc
stc
dec
add
pop
sti
js
cld
je
fcmovnu
out
mov
xlat
sub
mov
jle
pop
pop
fs
pop
adc
mov
jg
movsb
adc
or
push
call
mov
jmp
mov
cmp
sbb
lea
add
call
inc
jmp
sbb
adc
call
mov
push
pop
je
cs
adc
divb
jne
or
xor
pop
pop
pop
leave
ret
or
outsb
adc
jmp
pushf
data16
pop
adc
xor
popf
xor
or
insl
mov
xor
push
addr16
mov
clc
xor
cmp
jne
mov
push
daa
xor
inc
or
fcmovnu
mov
sbb
or
jl
jb
shrb
mov
cmp
push
push
push
inc
push
adc
std
cmp
pop
ret
movsbl
push
jb
insl
mov
pop
ret
jmp
add
adc
mov
mov
je
mov
push
xor
mov
test
je
mov
sub
inc
inc
mov
test
mov
outsb
jnp
std
jne
andb
dec
ss
push
inc
push
xor
incb
push
inc
cmp
jl
clc
pop
jg
add
adc
inc
cmp
mov
and
shll
cmp
cs
test
push
push
push
or
pop
ds
pop
adcb
xorl
mov
mov
or
add
sub
mov
stos
shlb
les
fldt
fstpt
sub
andl
mov
xchg
push
push
push
push
sbb
sti
aas
out
push
add
cmpw
adc
mov
cld
or
call
inc
inc
sub
mov
inc
sbb
xchg
ret
fisttpll
nop
lock
mov
std
shrl
cld
das
cld
lea
mov
incb
mov
cltd
mov
mov
lea
push
mov
test
hlt
adc
cmp
jl
dec
mov
pop
jbe
inc
shl
fisubrl
adc
push
inc
cld
lock
clc
dec
clc
jmp
icebp
or
jmp
lods
ficoms
push
xor
cmp
idiv
in
or
test
adc
ret
mov
push
pop
cmp
jl
mov
xor
push
or
shl
nop
mov
stos
insl
pushf
mov
sbb
sbb
popa
adc
es
adc
xchg
sub
mov
fdivr
add
add
cmpsb
in
mov
add
add
push
fidivs
dec
in
loopne
mov
outsb
int3
push
add
add
cmpsb
imul
imul
cmpsb
imul
imul
push
mov
jb
adc
and
jne
xlat
jne
ret
imul
lds
sbb
insl
pusha
jne
push
enter
cltd
adc
lds
or
mov
push
push
dec
decl
push
and
in
add
aaa
cld
iret
sub
sub
mov
mov
cwtl
idiv
mov
mov
mov
subl
shr
dec
mov
sbb
jmp
outsl
pop
sbb
sbb
push
int3
les
jg
mov
das
jl
push
inc
jp
jae
xchg
or
mov
inc
imul
in
dec
jne
stos
push
sbb
adc
push
pop
add
repnz
jnp
js
movsb
adc
notb
clc
xchg
jnp
nop
push
push
js
push
jns
inc
imull
cld
adc
or
and
cmp
jne
push
sti
sub
jmp
push
add
mov
dec
cmp
and
je
adc
mov
cmc
movl
or
movsb
and
push
jns
fcoml
enter
push
sub
rcrb
cmpl
xor
pusha
inc
je
add
je
loope
dec
popa
or
ret
sub
sti
call
cmp
sarl
add
lret
cmp
dec
scas
in
sbb
mov
inc
jo
mov
lock
or
fsubs
push
cmc
dec
scas
idiv
je
dec
movb
jne
add
push
int3
rorb
stc
xor
movsb
inc
push
incb
outsl
lcall
adc
xchg
pop
loope
mov
std
cwtl
push
shlb
and
shll
mov
xor
mov
lea
and
push
ljmp
mov
or
add
mov
dec
add
and
shlb
insb
xor
pop
push
inc
mov
xlat
add
mov
pop
rorb
pop
push
push
shl
add
inc
les
pop
shll
lods
lods
pop
scas
xlat
jne
je
scas
add
dec
pop
xlat
jne
mov
mov
mov
mov
mov
mov
add
fbstp
mov
adc
xor
adc
push
cld
dec
or
sahf
repnz
es
sub
adc
or
rclb
in
inc
or
mov
cmp
mov
inc
dec
repnz
ficomps
rclb
mov
idiv
dec
cs
fmull
mov
mov
cmp
das
div
loop
pop
mov
pop
rcrl
add
arpl
push
add
cmp
and
call
jns
jbe
push
push
sbbb
loope
add
jo
jp
stos
push
das
push
push
and
xor
mov
xchg
andl
add
lea
jo
lock
in
fstpt
mov
and
sbb
popa
leave
addb
dec
push
outsl
xorl
push
cld
mov
xchg
hlt
push
lcall
cs
lret
fcoms
mov
fildl
ret
dec
sub
daa
popf
cs
or
cmp
jae
push
sub
lock
adc
outsl
push
inc
cmp
das
out
add
cmp
add
inc
inc
cmp
sub
popf
and
jmp
push
into
insl
test
sbb
jmp
fbstp
sbb
pop
out
pxor
pop
lock
jb
je
shll
gs
mov
inc
pop
xchg
xor
mov
subb
fldl
lea
les
rep
stos
stos
pop
std
adc
imul
add
adc
int3
sub
or
loop
xor
adc
imul
jns
ret
sbb
cmp
jbe
js
insb
push
pop
adc
movups
test
xorb
popf
gs
adc
xchg
and
je
adc
jnp
loopne
or
lods
roll
push
ljmp
jnp
jbe
addr16
mulps
add
addl
daa
rclb
or
cmp
in
or
adc
popa
dec
pmulhw
lret
cmpb
cld
jp
movsl
movsw
movsb
push
cli
or
and
ljmp
daa
sbb
xchg
or
testl
push
cmp
clc
and
xchg
push
mov
or
cmp
push
push
lods
jne
shll
xchg
mov
push
pusha
push
and
mov
and
cmp
cld
mov
mov
sub
jge
dec
jecxz
cmp
jl
or
scas
jle
push
inc
xchg
jo
add
xor
in
push
js
jnp
pop
idiv
cmp
jle
add
jl
jge
std
in
jle
jp
add
pop
jl
pop
sub
adc
pop
pop
adc
imull
movl
cltd
sti
xor
cwtl
add
ds
in
enter
adc
cli
mov
inc
mov
stc
xorb
pushf
cld
popf
cld
je
negb
mov
add
adc
or
repnz
ffree
mov
cmp
lea
test
data16
inc
sarb
fiaddl
in
out
mov
add
inc
jmp
push
inc
loopne
arpl
pop
mov
push
or
xchg
cli
daa
mov
test
cmp
mov
popa
and
or
or
ja
fwait
js
xor
rclb
jb
push
aas
nop
stc
in
fs
mov
sub
adc
and
cli
test
push
xchg
mov
or
inc
pop
pop
pop
testb
mov
xor
jb
lock
inc
repnz
repz
cmc
adc
mov
imull
lret
xor
inc
gs
gs
xor
xor
imul
or
jo
dec
xlat
test
fsubs
fisttpl
inc
rcr
fucom
inc
outsl
jo
dec
shll
inc
imul
mov
mov
mov
sub
shrb
cmp
inc
fisttpll
dec
into
sarb
inc
fildl
push
pop
shrb
shll
inc
aam
imul
adc
or
or
or
or
aas
push
imull
ficoml
pop
dec
pop
cmp
cmp
jne
popw
or
or
mov
cmp
repnz
or
cmp
push
ret
enter
and
and
add
incl
xchg
xchg
xor
in
inc
inc
add
adc
push
adc
add
push
fnstsw
push
mov
cmp
xor
cmpsl
clc
daa
sub
push
jle
mov
mov
pop
pop
imul
adc
lods
aas
push
inc
shl
leave
jge
and
incl
or
dec
push
and
adc
fadds
push
and
cld
andb
add
mulb
push
sub
cli
or
sbbb
jae
data16
push
aas
push
movb
leave
mov
das
pop
adc
add
cs
daa
jmp
stc
pop
rol
gs
movsl
sub
fldt
fstl
push
fsts
call
les
lock
cmpsb
mov
out
mov
cwtl
pop
fisttpll
cs
add
jmp
mov
push
push
enter
jne
ret
adc
push
or
push
jmp
and
and
insl
stos
hlt
or
xchg
inc
sbb
outsb
mov
mov
xchg
rcrb
push
pusha
not
out
jmp
and
ljmp
dec
push
xchg
jmp
das
je
xor
cmp
xchg
iret
or
clc
mov
mov
add
xor
jmp
enter
movsl
fcomp
pop
insb
pusha
enter
push
rol
pop
mov
push
es
mov
push
or
mov
adc
aad
sbb
and
push
in
jno
and
stos
stos
stos
or
xor
nop
add
scas
dec
mov
mov
test
dec
xor
push
push
xor
fimuls
insb
xchg
and
adc
mov
add
repz
insb
fwait
xlat
and
ja,pn
xor
hlt
pop
push
xor
push
jnp
sarl
mov
fldcw
add
inc
adc
sub
sub
mov
fnstenv
dec
mov
test
sub
pusha
das
pushf
std
xlat
dec
pop
je
cmp
ss
jmp
icebp
rcrb
sub
sbb
pop
push
test
and
mov
or
mov
repnz
movsl
pop
movsl
insl
mov
xor
test
or
movsl
sbb
jnp
inc
mov
idivl
out
push
adcb
push
inc
mov
shl
movb
push
cmp
sub
sbb
and
xor
and
adc
push
cwtl
fdivr
and
sbb
adc
inc
lahf
in
nop
out
stc
shlb
enter
ret
popa
and
xor
subl
adc
inc
jge
lods
shrl
push
pushf
adc
inc
ret
sub
loopne
pop
sbb
pop
or
int3
mov
loopne
call
hlt
dec
cmc
mulb
cmpsb
test
xor
inc
xlat
test
add
adc
shrl
pushf
in
jmp
push
call
mov
in
jne
mov
test
mov
lock
in
mov
and
push
push
mov
lds
adc
cmpsb
pop
ljmp
adc
mov
ljmp
jmp
les
int
add
push
in
cld
push
movsb
or
aaa
sub
sbb
mov
or
inc
mov
test
shrb
out
push
jl
pop
test
test
insb
js
or
add
js
bound
pop
cmp
paddb
pusha
fmull
mov
testb
data16
sbb
and
fmull
mov
pusha
push
mov
shlb
hlt
add
mov
dec
idiv
stc
adc
mov
jo
mov
push
in
xchg
imul
and
jmp
sub
xchg
in
enter
ja
outsb
and
fwait
jmp
mov
test
or
sub
ret
bound
ret
shll
mov
fstps
das
lock
repz
cmc
inc
cmc
or
pushf
lock
jnp
sub
flds
call
rol
out
jbe
pop
cs
adc
lretw
xor
sbb
push
sbb
ja
push
jmp
adc
out
xchg
inc
pop
ret
and
enter
or
add
enter
mov
enter
mov
ror
enter
enter
cld
lods
cmp
rclb
mov
out
stc
push
xor
xchg
sbb
cmpsb
sbb
mov
neg
sbb
add
outsl
test
push
cmp
or
sub
jle
test
pop
jae
sub
mov
or
loope
or
jecxz
push
push
push
shrb
sub
testl
in
push
repz
cs
pop
pop
add
cmp
incl
cmp
clc
aaa
or
sub
or
cld
or
or
mov
xchg
cmp
movl
clc
jge
pop
sbb
or
daa
jbe
sub
inc
xchg
mov
fstp
mov
or
pushf
mov
jne
mov
in
sub
lcall
push
and
loopne
xor
and
inc
cmpb
mov
cmp
je
cmp
repnz
xor
repnz
dec
movsb
jl
testb
cs
clc
rorb
mov
jmp
sub
fistpl
add
push
imul
xchg
cwtl
xor
mov
in
inc
or
test
inc
popa
mov
mov
aam
inc
call
fadds
hlt
mov
add
mov
xor
test
xchg
iret
outsl
popa
cmp
add
sbb
add
ds
pop
jo
cmpsb
imul
cmpsb
imul
aas
add
mov
pop
bound
jb
xor
shll
mov
xchg
dec
shr
sbb
mov
pop
add
aam
xor
lcall
add
lcall
cli
cmpsb
imul
add
inc
lcall
push
cmpsb
imul
loop
inc
test
xchg
pop
in
fwait
setp
sub
das
pop
sbb
sbb
inc
pop
mov
pop
or
test
ss
test
lret
xor
ja
mov
adcl
inc
test
call
dec
inc
dec
xor
cs
insb
add
push
inc
push
dec
or
inc
aad
ljmp
loopne
mov
les
jecxz
jmp
lcall
cli
pushl
mov
add
cltd
repz
fucom
testb
std
add
jmp
adcb
dec
push
push
inc
push
push
xor
xor
fadds
adc
loopne
mov
gs
gs
flds
xor
xor
mov
pop
add
jmp
jnp
pushf
call
mov
lea
lods
outsl
outsl
cmpb
inc
adc
out
adc
jnp
incl
sti
add
push
push
push
push
push
mov
call
mov
pop
popf
sti
push
fldenv
roll
pop
pop
pop
adc
into
scas
loope
push
jp
mov
fldcw
xor
fildl
loop
mull
mov
lods
lahf
dec
mov
inc
decl
xor
dec
or
push
mov
xor
cmpsl
mov
outsl
insl
arpl
daa
cld
scas
cmp
data16
jae
cs
outsl
fs
std
ljmp
fidivrl
jg
pushf
mov
idivl
cmp
jne
fs
sub
push
outsw
outsb
aaa
pop
jae
push
clc
jns
je
insl
push
inc
and
lock
scas
test
scas
inc
sbbl
insl
imul
arpl
jae
addr16
aaa
test
idivb
add
outsl
je
push
je
jns
or
add
data16
js
push
and
arpl
outsl
data16
xchg
mov
sbb
and
inc
jae
sti
testl
ja
dec
push
push
push
inc
push
inc
pop
inc
push
dec
mov
pushl
outsl
imul
pop
xchg
lcall
add
cld
iret
sbb
pop
jge
jnp
enter
mov
mov
dec
add
mov
push
add
push
rolb
inc
add
ljmp
out
add
pop
mov
int
mov
push
jb
addr16
shll
popa
outsb
outsb
outsl
je
bound
jb
outsb
and
inc
dec
push
and
pop
in
das
into
gs
out
fimull
cmpsl
mov
add
pop
fnstcw
stos
fbld
pop
mov
mov
and
mov
stc
out
mov
popa
test
pop
scas
cmp
test
in
mov
dec
mov
cmp
fbstp
jmp
loopne
and
add
stc
js
add
sub
or
daa
add
pop
cmp
rorb
arpl
fldl
add
sub
adc
ret
flds
add
shlb
push
or
or
or
je,pn
js
or
ds
mov
pusha
int
jb
popa
je
add
cmp
imulb
shrb
je
pusha
es
nop
add
dec
daa
push
inc
clc
add
jo
add
lods
or
data16
xor
movsl
push
push
jb
fxch
sarl
outsl
arpl
add
ja
test
dec
ret
jae
popa
arpl
daa
rolb
scas
or
int3
dec
popa
out
and
jbe
add
fmuls
xchg
lods
in
and
adc
dec
mov
xor
shr
pop
lcall
adc
out
out
out
add
or
push
idiv
jmp
test
ja
addb
and
adc
adc
add
cld
or
add
mov
fisubs
jae
out
jns
rsm
xlat
mov
mov
add
pushl
sbb
test
fwait
sbb
mov
and
mov
sub
incl
push
popa
push
aam
rcll
sub
mov
xchg
inc
loope
fsubl
jmp
fs
jns
ret
andb
fcom
lock
cmpsl
cli
cli
fisttps
lcall
dec
jge
pop
push
int3
pop
out
mov
push
cmc
rcrb
sub
xor
ljmp
pop
stc
mov
scas
aaa
hlt
inc
jae
adc
imul
flds
xor
lods
adc
dec
call
mov
mov
pop
pop
mov
mov
dec
mov
mov
pop
fadd
jo
incl
imul
adc
sub
or
mov
test
mov
jno
call
lods
out
mov
rclb
mov
jno
pop
test
push
outsb
pop
call
pushl
js
push
leave
inc
xor
lea
mov
lods
or
pop
fmuls
pushl
push
bound
sbb
mov
adc
daa
lods
and
mov
inc
xchg
xchg
mov
dec
dec
sar
ljmp
std
cmp
adc
adcl
es
cld
push
add
mov
adc
lcall
add
icebp
sahf
loopne
xchg
or
mov
xchg
inc
es
pushl
fldenv
cld
leave
scas
adc
mov
inc
mov
repnz
cmp
incl
inc
cmpsl
xchg
dec
sub
xor
stos
mov
mov
rcl
xchg
add
mov
jg
testb
sbb
inc
cmp
fildl
out
adc
aas
lahf
inc
icebp
out
adc
dec
lds
dec
loope
fidivrs
test
mov
bound
testl
push
lret
inc
pop
push
cmp
pop
mov
inc
pop
test
lahf
cmp
mov
mov
and
jo
and
mov
dec
mov
aad
push
inc
dec
cmp
adc
mov
or
mov
mov
sbb
incl
mov
sahf
dec
rorl
xchg
inc
test
dec
ljmp
jmp
push
xor
mov
stc
loop
lods
cmpsb
fdivl
sbb
mov
sbbb
sub
and
jb
xor
or
mov
adc
inc
cmp
arpl
push
adc
jg
repz
imulb
inc
loope
cmpb
xchg
cltd
sarl
cli
sbb
jns
movsl
sub
add
test
jo
add
xor
movsl
or
cli
pop
incl
ret
es
mov
push
repnz
jnp
data16
call
pusha
pushl
sbb
dec
dec
mov
mov
repz
pop
xchg
sub
pushl
arpl
dec
loope
dec
jle
fs
inc
mov
and
insl
and
or
jnp
add
mov
mov
arpl
mov
cmp
leave
push
inc
ss
pushl
test
lahf
imul
not
pusha
out
gs
xchg
aas
les
stc
call
jbe
xor
out
popf
mov
cli
push
or
repnz
jnp
mov
je
insl
insb
loope
xor
out
scas
or
icebp
sarl
mov
xor
pop
loopne
fisttps
mov
sub
fstps
jmp
pop
call
or
pop
dec
push
lret
insb
sbbl
and
ljmp
loop
lret
sub
cmp
aam
popa
pushf
jl
orb
daa
pop
leave
pop
jne
xlat
push
mov
stc
ljmp
pop
sbb
pop
add
lock
add
cmp
xchg
pop
notl
loop
pop
movsb
test
es
pop
pushf
loop
pushl
stos
fstl
fimull
push
out
inc
imul
sub
std
fisubs
mov
sarl
mov
sub
lret
pushl
xlat
fisubl
and
inc
mov
and
dec
push
idiv
ss
and
dec
scas
bound
sub
icebp
mov
pop
xor
arpl
xor
ljmp
sbb
jno
adc
pop
jnp
iret
gs
fistpll
or
and
push
xor
insl
jl
and
cmp
in
push
jecxz
jns
jl
lods
mov
sbb
mul
jno
loope
lcall
sub
hlt
aas
std
and
jnp
xor
out
mov
mov
out
ficompl
roll
jmp
xchg
or
fdivl
sbb
cmp
xor
pop
cld
aas
add
pushl
pop
push
jno
or
mov
fdivrp
mov
or
mov
cmp
decl
sub
xchg
sub
or
mov
js
add
fucomip
aad
repnz
out
jae
pop
in
insl
xchg
xchg
shld
push
cli
pushl
push
outsb
pushf
sbb
bound
lds
add
jb
pop
insb
ljmp
ror
inc
pop
roll
clc
push
pop
add
mov
es
scas
xchg
push
ljmp
orb
imul
int
sub
mov
js
mov
in
cld
lcall
or
fnsave
adc
or
mov
mov
test
insb
sub
int3
and
adc
icebp
bound
inc
sbb
jecxz
lea
dec
repz
fmull
ds
gs
add
imul
dec
and
out
push
jecxz
addr16
das
incl
lcall
lcall
es
icebp
clc
dec
mov
lea
push
pop
lds
pop
ljmp
push
xchg
mov
leave
pusha
mov
pop
scas
repz
sbb
mov
sbb
sub
push
cmp
lods
adc
xchg
dec
pushl
lret
addr16
mov
sbb
popa
cmpsl
lret
cmpsb
xchg
pop
jmp
loopne
xor
mov
mov
mov
outsl
stos
mov
or
ret
adc
xor
or
cli
push
push
xchg
dec
jno
cltd
sub
mov
cltd
adc
call
es
sbb
xchg
push
aas
cmp
and
ljmp
scas
cmp
mov
arpl
and
push
and
in
mov
movsl
mov
mov
das
cld
enter
xchg
movsl
outsl
dec
pop
inc
or
scas
add
sar
mov
out
adc
mov
ljmp
stos
or
and
sar
mov
and
in
vmwrite
sub
cmp
push
addr16
xor
sub
gs
push
orl
jecxz
shll
enter
mov
mov
repz
jns
cs
call
pop
inc
mov
adc
and
je
sbb
jl
dec
fwait
leave
adc
imul
ss
popa
lock
loope
adc
dec
scas
cmp
fdivrs
mov
cmpsl
aad
pushl
or
inc
dec
mov
pop
or
daa
add
enter
sti
das
mov
call
push
mov
push
scas
inc
clc
test
cmp
mov
fistpl
cld
dec
movsb
int3
movlps
lahf
movb
in
mov
jp
lock
xchg
and
sbb
movsb
dec
cmp
jmp
sar
ljmp
imul
pop
ljmp
sbb
add
jg
push
in
inc
mull
cmc
call
roll
sub
sbb
jle
pop
adc
testl
pop
and
out
out
popa
loope
iret
ljmp
imul
mov
jmp
xor
aam
fwait
stos
sbb
mov
out
aas
xchg
aad
xchg
insb
mov
lret
mov
mov
mov
sub
pop
imul
ja
xor
adc
rol
pop
js
nop
and
jae
and
inc
push
shlb
ficompl
repnz
jne
in
or
dec
clc
dec
testb
mov
mov
cmpsb
cmpl
dec
je
jl
arpl
add
call
fmuls
and
loop
pop
xchg
negl
std
repnz
js
cmovle
mov
out
jnp
mov
popa
push
push
dec
push
cwtl
push
inc
call
scas
sbb
inc
adc
lcall
repnz
xchg
ljmp
fmull
jns
iret
test
pushl
mov
xchg
jae
mov
jne
cmp
loop
pop
mov
push
and
mov
std
decl
lcall
mov
popl
ficoms
ljmp
jo
cwtl
jp
mov
mov
xor
test
sahf
testl
pushl
test
shl
xlat
inc
jbe
mov
test
pop
xor
incl
shrb
icebp
in
incl
ss
sbb
push
cmp
push
and
outsl
mov
jmp
pop
repnz
ja
add
insl
fldcw
or
mov
test
mov
jg
loop
or
adc
or
test
sub
pop
hlt
test
mov
rol
sbb
clc
adc
dec
rdmsr
cmp
inc
in
addr16
pop
inc
fsubs
mov
inc
das
dec
cmp
std
mov
scas
mov
incl
ljmp
dec
mov
ret
mov
cmc
mov
and
sbb
inc
scas
testb
adc
pushl
cmpsl
pop
pop
cmc
xor
xor
mov
shrl
jbe
nop
xor
jecxz
decl
xor
cmp
xchg
cmp
and
and
jl
out
cmc
mov
jmp
push
pushf
sub
xor
inc
mov
sub
sub
sbb
jb
sbb
jmp
pop
ja
enter
enter
sub
mov
adc
test
incl
aas
roll
sub
inc
and
or
lds
inc
subl
or
rorb
or
andb
mov
cmc
add
jg
sti
xchg
loopne
adc
outsl
cmc
pushl
xor
xchg
psubusw
rcll
jo
pop
pop
pop
jns
sub
dec
mov
in
cmp
hlt
jl
mov
cmp
or
cwtl
insl
scas
jecxz
cmp
lods
out
test
call
sub
pop
ljmp
in
sub
jle
sbb
negl
sbb
sub
decl
lret
outsb
xchg
sub
enter
xchg
inc
sti
jmp
jae
rcrb
leave
mov
lds
xor
mov
sub
add
jno
pop
jne
or
push
mov
sar
jmp
mov
pushf
out
jns
out
outsb
fnstcw
repnz
mov
xlat
push
test
mov
inc
sbb
mov
add
das
sti
inc
jg
xchg
sahf
add
ljmp
sub
je
loopne
sar
mov
movsl
inc
xchg
mov
repz
ss
fcomps
cmp
cld
fistpll
in
outsl
cwtl
inc
and
test
xor
mov
mov
push
pusha
or
lahf
mov
mov
lcall
ljmp
and
push
push
push
sbb
mov
int3
and
mov
lcall
or
inc
push
or
sub
mov
cs
xlat
inc
cmp
test
jb
lods
add
jb
xchg
stos
xor
outsb
jno
or
fnstcw
std
mov
fmull
cmp
mov
scas
iret
add
mov
call
sti
jecxz
stos
jns
or
call
mov
jae
dec
fsubs
xorl
jmp
adc
pop
dec
into
mov
ror
ror
push
mov
jge
in
call
add
les
xchg
gs
inc
jbe
mov
inc
pop
pop
in
decl
pushl
scas
shll
cmp
or
popf
jecxz
scas
loopne
xor
ljmp
mov
pop
rorl
mov
xor
iret
in
pop
das
pop
out
and
jo
pushl
cli
xchg
shll
loop
pop
movsl
jns
clc
testb
mov
call
lcall
enter
data16
xor
mov
pop
mov
dec
ss
mov
lcall
pop
xor
add
cmp
jle
xchg
push
fiadds
inc
out
inc
mov
or
jno
mov
cmp
out
fcompl
sahf
repz
gs
push
adc
stos
mov
call
int3
imul
loop
ljmp
clc
aaa
push
jmp
decl
jecxz
cltd
arpl
jb
adc
inc
sbb
mov
cmp
out
nop
dec
lea
decl
sbb
push
shl
inc
scas
and
lock
insl
fists
push
jg
mov
pop
out
js
movsb
call
cli
jmp
mov
loopne
push
cmp
pcmpeqd
push
push
push
jnp
xor
lcall
fidivl
push
inc
ljmp
mov
cld
ret
call
push
dec
inc
pop
nopl
and
loop
test
mov
and
pushl
repnz
mov
push
cli
cmp
aad
outsb
lods
fdivl
inc
les
and
ss
jae
and
in
push
gs
lcall
jmp
pop
mov
xor
mov
inc
sti
inc
sbb
mov
sub
adc
dec
mov
cli
inc
cmc
cmc
aad
xor
loopne
test
xchg
addb
jg
pusha
pop
inc
cmpsb
inc
mov
dec
pop
add
insl
push
cmpsl
sub
cld
in
decl
dec
mov
mov
test
aam
pop
mov
in
decl
call
push
outsl
loopne
outsb
cs
mov
aas
dec
cmc
in
jmp
inc
pop
sub
mov
jg
in
dec
dec
xor
jecxz
cmp
imul
jno
mov
adc
sub
aam
sahf
xor
mov
repnz
sub
and
call
jecxz
adc
stc
test
or
fwait
or
lcall
pop
int3
cmpsl
lcall
push
pop
dec
outsb
jg
ljmp
sbbb
idivl
pop
sub
sar
jmp
jmp
int
cmpsb
sub
xor
push
sahf
cmp
mov
test
xor
fidivrs
mov
mov
out
sbb
cmp
das
cld
inc
shll
out
addr16
std
push
mov
and
xchg
shlb
std
jp
mov
pusha
jle
repz
outsb
add
pop
dec
jg
inc
mov
xor
inc
adc
jnp
inc
mov
inc
adc
popa
mov
push
mov
cli
fldl
ret
ss
jns
cmp
xchg
ljmp
inc
test
lcall
push
xor
rorl
aad
fcmovnu
dec
nop
push
and
js
xchg
inc
mov
ljmp
and
jmp
xchg
xchg
dec
aad
popa
dec
divb
bound
cmp
jg
mov
mov
dec
mov
inc
movsl
aam
fisubs
push
mov
int3
outsl
std
mov
sbb
cwtl
popf
or
ljmp
incl
out
pop
cmpsb
inc
adc
in
pop
push
mov
push
cmpsb
test
xor
incl
push
fcmovnu
adc
lods
sbb
pop
out
cmp
xor
xor
sub
in
pushf
inc
nop
sbb
xlat
lock
lcall
mov
lods
dec
int
test
jns
cmp
les
dec
enter
sarl
cli
fs
cmp
mull
mov
push
lea
repz
ficompl
fwait
pop
std
sbb
das
dec
inc
mov
or
push
test
mov
addr16
scas
mov
clc
pop
loopne
sbb
add
arpl
pop
push
decl
add
cmpl
jge
scas
sbb
push
fdivp
mov
adc
int3
ds
jle
jg
mov
aam
incb
dec
out
pop
jno
mov
push
repnz
push
xor
loopne
scas
idivl
mov
add
lcall
cmp
rcl
dec
jb
out
and
mov
sti
aad
in
loope
lds
jb
jbe
repnz
xlat
xchg
sub
sub
mov
inc
mov
stc
sbb
push
xor
int3
jl
imul
sbb
cmc
sbb
mov
shlb
cs
mov
lcall
or
pop
sub
inc
sbb
movsb
sub
xchg
std
data16
sbb
adc
mov
adc
adc
les
lcall
fstpl
push
idiv
ljmp
pusha
cs
cmc
lea
dec
adcb
shrb
loopne
into
imul
jle
lock
push
xchg
leave
repz
mov
dec
mulb
clc
pop
cli
pushl
out
adc
xorl
bound
cmp
insb
inc
imulb
loope
lcall
mov
icebp
repz
fstpl
jp
out
or
div
jg
movsl
imul
jbe
shrl
hlt
loop
add
cltd
cmpsb
call
and
lahf
aas
std
ljmp
loopnew
xchg
add
or
ror
pop
lds
inc
decl
cmp
mov
cmp
scas
xor
lock
cli
lahf
pop
popa
in
pop
decl
cmp
mov
xor
das
ret
xor
mov
mov
iret
jge
cmp
insl
test
sarl
test
mov
call
sahf
mov
cmp
nop
mov
mov
pop
sub
repz
sbb
cmp
inc
lret
dec
jmp
aad
shll
sbb
sahf
lods
jle
call
xchg
dec
xchg
sub
inc
mov
decl
repz
xor
push
js
inc
jmp
mov
and
aaa
mov
hlt
mov
sbb
imul
jmp
cmp
mov
jmp
cmp
adc
testb
inc
ljmp
xchg
mov
les
ret
nop
xchg
loopne
aad
lds
cld
pop
push
push
jle
shr
xor
decl
jae
dec
lea
xor
nop
pusha
jg
inc
dec
and
imul
ss
adc
xlat
out
xchg
jne
cmpsb
incl
mov
psubb
push
jns
fwait
xor
and
pop
jecxz
fprem1
or
inc
mov
loopne
daa
pop
imul
dec
dec
dec
not
xchg
fadd
mov
mov
jns
pushl
incl
das
in
test
adc
out
pop
cmpsl
pushf
mov
pushf
in
and
mov
imul
iret
decb
pushf
daa
sbb
cmpsb
mov
sub
lret
lahf
jb
push
mov
aas
fbld
xor
or
pop
and
jl
jmp
mov
sbb
repz
cmp
adc
xchg
in
mov
pop
jle
push
xor
rcl
jbe
out
ja
aam
adc
and
test
gs
xchg
dec
mov
call
test
cmp
mov
lcall
cld
mov
mov
dec
inc
dec
push
andb
data16
jne
das
pusha
lea
decl
stos
mov
into
mov
mov
pop
inc
sbb
aaa
lcall
mov
cmp
jae
loopne
sahf
dec
imul
aam
and
dec
cli
call
pop
cltd
jb
cmpsb
add
lahf
pop
jl
imul
aaa
pushf
push
mov
arpl
outsl
pop
lret
incl
leave
inc
arpl
lea
mov
mov
nop
popf
jno
int
ret
lahf
jo
jg
mov
mov
inc
push
test
test
xor
ficoms
je
mov
cli
xor
out
inc
ja
mov
sti
iret
push
ja
push
pushl
mov
adc
movsw
and
sbb
pusha
or
lcall
call
push
push
ljmp
pop
js
movsb
push
lcall
int3
scas
fwait
sbb
mov
testb
jge
inc
jl
sub
imul
cmp
and
mov
lahf
imul
sbb
xor
xor
pop
fsubr
xchg
mov
push
hlt
out
sub
push
push
loop
decl
arpl
in
pop
aad
jne
mov
enter
jg
fisubrl
cwtl
adc
fiaddl
jle
loope
add
cmpsb
mov
imul
je
ret
mov
icebp
push
adc
ljmp
mov
retw
xor
adc
pop
popf
sahf
xchg
cld
std
sbb
cmpsl
and
xchg
cmp
es
cmpsl
push
pop
adc
inc
mov
test
mov
fmuls
sar
fiaddl
repnz
pop
out
ja
jns
mov
push
pop
jmp
fisubs
call
clc
insb
xlat
test
add
lahf
push
cmp
sbbb
ljmp
inc
stc
mull
rorb
in
jmp
repnz
or
add
pop
ffreep
push
and
dec
nop
sub
in
dec
push
test
mov
jbe
jle
xchg
ljmp
pop
cmc
repnz
pop
insl
iret
in
ss
dec
sub
push
sahf
pop
mov
pushl
sub
sub
and
aaa
rcrl
mov
cmp
dec
pushw
stc
stos
inc
cs
incl
push
xchg
lcall
fistpl
inc
mov
jle
add
out
mov
jne
and
pop
pushf
or
mov
adc
or
sbb
jmp
inc
es
rolb
loopne
xor
dec
jg
data16
mov
ljmp
push
jbe
add
sar
addl
lcall
mov
sahf
sub
push
stc
cltd
in
enter
nop
jae
push
ret
mov
insb
xor
mov
mov
incl
pop
push
mov
lret
xchg
sbb
sub
notb
jg
aad
jb
dec
push
imul
or
mov
cmp
repnz
les
outsl
lock
hlt
repz
ficoms
or
dec
adc
sahf
mov
decl
sbbb
mov
insl
mov
js
and
xor
clc
decl
call
mov
ret
outsl
clc
jp
xchg
xchg
mov
jmp
shrl
shll
jb
out
dec
adc
inc
sbb
lock
xchg
pop
sub
lcall
lahf
cld
add
mov
pop
add
ljmp
mov
test
sar
jg
call
mov
in
inc
jo
mov
cmpsl
mov
dec
add
jbe
ljmp
icebp
add
xor
mov
adc
xchg
xor
testb
mov
movsl
inc
xchg
adc
loop
addr16
or
inc
and
fstl
dec
std
pop
and
cld
stos
jae
cmp
lods
jmp
movsb
pop
jmp
ret
sti
in
add
in
mov
mulb
mov
in
add
outsl
inc
call
das
lcall
lds
into
sbb
pop
pop
xchg
insl
pop
test
xchg
test
hlt
add
push
test
pop
mov
icebp
lods
dec
outsb
imul
pop
negb
das
pop
sub
clc
push
xchg
sub
xor
or
sti
adc
cld
cltd
je
movsb
test
fucomip
jmp
jnp
gs
das
or
sub
pusha
dec
push
scas
in
jg
incl
sub
dec
mov
mov
test
dec
cmp
xchg
mov
push
xlat
mov
clc
dec
push
pop
sti
rsqrtps
sub
mov
mov
sub
push
jmp
test
mov
shr
cmp
les
cmp
testl
mov
rolb
mov
call
hlt
setne
test
sbb
xchg
xor
sbb
mov
outsb
mov
jge
push
je
inc
jns
pop
jmp
fmull
shll
insl
mov
shrb
aaa
cli
shlb
imul
pop
movsl
cmp
adc
jmp
stos
fs
ljmp
pop
pop
mov
stos
mov
lock
js
icebp
jbe
xorb
inc
hlt
jg
lods
mov
out
int
js
adc
sub
cmpsb
scas
mov
jb
pop
lahf
cwtl
ret
sub
ljmp
pop
inc
add
sti
mov
mov
jmp
bound
pop
sbb
dec
pushf
loope,pn
ret
xor
ja,pn
push
fs
ljmp
mov
aaa
inc
sbb
add
adc
jp
pushf
inc
jmp
mov
pop
add
inc
jne
rcrl
push
nop
jbe
jg
mov
dec
adc
pop
jge
push
ljmp
cmp
paddw
push
and
inc
jb
cltd
push
lcall
push
shlb
bound
dec
cltd
jne
mov
int
test
mov
cmp
decl
push
out
das
push
aas
or
xlat
dec
add
call
mov
cmc
pusha
cmc
cmpsb
push
inc
or
add
xorl
lcall
out
mov
in
jo
lret
xor
pop
sub
test
shl
gs
and
mov
int
sbb
push
push
mov
lods
cmc
cmpsb
dec
or
sub
dec
std
dec
sub
incl
jl
add
lea
mov
popf
cs
ret
pop
repz
jmp
imul
sbb
jne
jmp
rep
mov
push
pop
clc
test
out
int3
in
jb
repnz
push
aam
das
fdivrs
cmp
jecxz
lds
mov
shll
inc
bts
outsl
dec
inc
pop
insb
pop
mov
les
test
jg
jo,pt
pop
push
je
cmpsl
jl
dec
int3
loopne
icebp
sahf
ds
adc
pmullw
push
and
xchg
call
lcall
cli
add
fs
xchg
rcrl
cmp
mov
lahf
push
in
adc
in
xchg
aaa
loopne
or
scas
inc
in
dec
pusha
scas
sar
inc
negb
mov
adc
insl
mov
and
mov
and
push
popf
jp
in
js
ss
xchg
mov
loopne
into
jb
jbe
ja
fucomip
incl
mov
cmp
mov
pop
ret
scas
xlat
xchg
dec
bnd
jmp
sti
bound
jg
mov
dec
jnp
int
scas
fimull
add
pushl
sub
adc
sub
dec
stos
fdivrl
ljmp
popf
mov
xor
lods
cmpsb
hlt
je
or
pop
sbb
call
mov
dec
cmp
repnz
push
mov
push
popa
iret
push
lods
lcall
sbb
into
fs
lahf
sti
pop
shlb
jg
fnsave
mov
fdivrl
and
icebp
shrl
dec
jecxz,pt
xor
or
push
jle
lahf
jg
adcl
out
mov
inc
and
hlt
fbstp
popa
mov
cmp
mov
cmc
decl
ret
push
dec
loop
and
aas
in
pop
mov
mov
pop
into
xor
movl
imul
mov
xchg
jmp
jg
dec
js
ljmp
std
pushl
std
fnstenv
pop
lret
xor
int3
sahf
cmpsb
subl
aad
cmpsl
nop
xchg
cmp
dec
pop
out
repz
movsl
call
push
and
movsb
cmpsl
push
scas
sbb
mov
inc
inc
dec
sub
aas
or
and
push
inc
mov
into
mov
inc
add
xorb
xchg
fs
mov
out
xor
fwait
js
hlt
dec
jmp
sbb
cmpsb
lcall
lahf
out
adcl
dec
in
out
adc
pop
std
out
sub
mov
popa
pop
ja
inc
fwait
push
aam
aam
call
scas
cmp
xchg
mov
fcmovnu
pop
jmp
fisttps
and
cmpsb
sbb
gs
sub
xor
sub
enter
lcall
mov
or
loopne
ss
sub
jae
lret
cmp
aaa
cli
push
data16
cli
in
int3
ret
ret
mov
jb
push
cmc
rclb
aam
push
add
enter
dec
adc
mov
adc
outsl
dec
jge
fldl2e
push
adc
or
push
pushf
mov
xor
es
jecxz
decl
and
xchg
mov
cmp
jecxz
es
push
xor
fcmovnbe
xchg
fbstp
aas
out
lods
mov
movsl
lods
imul
daa
ds
adc
out
mov
rolb
add
into
cwtl
outsb
fsubs
int
inc
cli
leave
mov
pusha
in
jmp
xor
pop
nop
push
lods
jb
mov
test
sub
dec
mov
jmp
call
pop
mov
outsl
stos
jnp
hlt
loope
test
jmp
xchg
xchg
cltd
test
and
pop
imul
sahf
or
pop
test
in
inc
ret
inc
imul
lock
stc
jo
outsb
push
sub
lea
insb
je
jg
and
stos
mov
addl
inc
cltd
std
xor
inc
fs
imul
dec
orl
stc
es
out
xor
mov
movb
in
xor
sarb
mov
call
ljmp
je
xor
rcrb
sbb
sarb
dec
stos
xchg
jnp
call
lea
push
insl
cmp
sub
mov
decl
std
mov
lock
mov
setns
adc
divb
imul
push
jno
dec
insl
lahf
out
xchg
loope
cmpsl
sar
sbb
inc
ljmp
sub
dec
mov
cmp
push
mov
repz
cld
mov
xchg
fstl
lea
mov
push
push
out
in
das
icebp
push
push
inc
fildl
sbb
pop
jo
fst
push
in
mov
int3
mov
std
fwait
popa
aaa
cli
jmp
sub
addr16
xor
ljmp
out
test
call
cs
lret
es
test
inc
dec
ljmp
jmp
incl
jae
cmc
fcompl
pop
cwtl
xlat
sub
push
scas
aaa
sbb
fbstp
rcr
daa
xrelease
dec
std
adc
adc
test
xor
jle
pop
pop
fldenv
lods
mull
repnz
xchg
mov
out
push
sub
mov
mov
mov
xchg
insl
cmp
call
outsb
xor
add
addl
xchg
xlat
popa
in
xchg
or
clc
xchg
clc
aam
adc
mov
mov
ja
test
cmpsb
ja
ljmp
subl
or
ficompl
icebp
push
fcmovbe
outsl
push
jnp
adc
imull
and
pop
cli
ss
lea
jge
mov
cmp
cmp
fsubs
pandn
pusha
ss
cmp
sub
xchg
jb
xor
adc
cmp
loope
pop
lock
lock
addb
mov
jae
jnp
fwait
out
pop
loopne
add
in
out
adc
ficoms
inc
outsl
xchg
cli
xchg
inc
cmp
cmpsl
cwtl
insb
das
ret
add
pop
out
repnz
in
and
jae
sti
inc
insl
xor
insb
push
cmp
xor
pop
pop
dec
ja
sahf
in
shr
pop
cld
jmp
loopne
push
loope
mov
out
lock
xor
imul
dec
push
das
flds
adc
test
xchg
daa
xchg
jmp
ja
jg
ljmp
fnstsw
subb
jmp
enter
mov
call
cli
jmp
fdivl
mov
dec
call
sub
and
loope
push
dec
dec
mov
push
repz
sub
lds
xor
pop
std
das
js
aam
pushl
das
jge
mov
mov
dec
dec
cmp
mov
mov
aas
mov
les
lcall
jl
decl
mov
pop
push
int3
je
sbb
jne
mov
out
cmp
dec
fwait
pop
push
and
ljmp
pushl
jmp
fmuls
imul
xlat
cli
fistpl
xor
lods
lcall
movsl
rcrl
sbb
cwtl
pop
out
jae
or
ljmp
pop
in
jb
jge
sahf
and
fisttps
fcompl
jo
daa
test
jge
mov
pop
jge
mov
add
cmp
icebp
xchg
hlt
ds
sub
ljmp
mov
pop
cmpsb
xchg
fidivrs
lret
push
adc
mov
ljmp
mov
arpl
decl
clc
sbb
xchg
mov
jbe
sub
and
aad
cmp
bswap
pushf
repnz
cli
addl
and
xchg
push
gs
cmpsb
push
outsb
jle
mov
xchg
jp
inc
or
ljmp
inc
push
mov
popf
outsl
js
pop
jge
jns
les
or
jmp
cmp
ret
mov
je
and
inc
jg
add
ljmp
shll
sbb
push
jg
push
test
sbb
test
hlt
roll
in
js
mov
lahf
cld
mov
cmp
pusha
xor
mov
iret
pop
cwtl
jo
insl
xchg
pop
fdivl
jp
cmp
inc
and
mov
xchg
je
pop
lcall
inc
stos
mov
cmp
clc
sub
and
mov
xchg
xchg
pop
rolb
lret
sahf
jl
cmp
xchg
pop
fwait
adc
jg
mov
sbb
push
inc
xchg
popa
or
and
jl
mov
xor
push
mov
sahf
loopne
test
scas
ljmp
scas
mov
xchg
or
mov
and
aas
xchg
inc
stos
loop
call
movsl
pusha
das
fwait
movsb
nop
insb
jo
or
mov
stos
outsl
cmc
lcall
out
push
mov
sub
mov
push
aad
mov
icebp
in
sti
lock
js
adc
push
cmp
dec
jno
mov
mov
adc
lret
mov
arpl
sbb
dec
mov
add
lods
pushl
jns
push
push
inc
mov
push
iret
jne
loopne
or
push
lret
push
fucomip
lcall
sar
xchg
imul
jg
xor
pop
clc
ljmp
mov
call
mov
mov
mov
mov
dec
lahf
pop
inc
sbb
shl
lret
out
mov
and
adc
call
rol
aad
pop
cmp
jne
jnp
xor
decl
sti
inc
fwait
inc
cmpsl
adc
adc
dec
jne
sti
in
or
insl
clc
inc
lahf
mov
pop
popa
fs
inc
aas
sub
scas
or
data16
rorl
jmp
push
sub
jg
dec
das
xor
push
std
rorb
std
call
jg
test
xchg
pop
hlt
cmp
scas
xor
xor
jg
xor
pop
add
shl
dec
push
rcll
insb
ss
mov
sbbl
hlt
mov
adc
fwait
pop
push
sahf
js
lahf
ljmp
mov
jmp
mov
sub
cs
lcall
decl
shll
mov
mov
dec
stc
nop
mov
fs
leave
push
mov
cld
pushl
test
aaa
sub
mov
pop
xor
fsubp
jmp
fwait
shl
jbe
push
daa
jle
rclb
mov
pop
inc
fmull
add
or
test
les
daa
call
push
test
ret
push
insb
and
jbe
or
adc
and
pop
popl
or
push
decl
dec
out
dec
push
adc
and
jg
lcall
and
les
mov
lahf
inc
xchg
in
add
dec
inc
lods
insl
cmp
mov
push
rcl
jnp
incl
ljmp
test
xor
jnp
test
decl
mov
dec
cmp
adc
pop
lea
ffree
mov
inc
jmp
std
lcall
push
jo
call
mov
scas
ffreep
clc
mov
xchg
cli
ljmp
xor
mov
iret
ss
sub
mov
lret
and
orb
sbb
ss
scas
sbb
popf
fiaddl
aam
lods
jg
into
sub
movsl
or
popf
ret
fcoml
fisubrl
xlat
pop
and
jb
mov
or
add
pushl
xchg
push
ret
stos
cmp
sub
sub
dec
scas
push
add
pop
mov
cli
fwait
cld
mov
pop
xor
dec
or
jl
in
lea
stc
push
inc
test
aaa
pop
shl
inc
cltd
lret
sbb
call
mov
xchg
lahf
jecxz
mov
das
cmc
add
cld
movsl
das
out
test
lods
je
xchg
ds
sub
ljmp
xorl
shl
aam
mov
mov
das
std
lcall
push
loop
jo
pop
cltd
add
mov
js
fs
loop
pop
mov
cmpl
in
outsb
aad
or
imul
lret
in
je
call
cli
sahf
mov
sbb
jmp
pop
dec
aas
sbb
sub
testb
pop
ffree
hlt
add
sub
pushl
or
mov
and
add
nop
ds
mov
pushf
stc
hlt
jnp
mov
or
xor
sbb
xchg
xlat
cmpsb
neg
xor
cli
jmp
movsb
test
mov
sub
out
out
imul
setp
cli
lock
fistpll
mov
xor
jno
out
test
lahf
loope
push
rolb
cmp
pop
lcall
xchg
call
call
mov
mov
sti
ss
stos
decl
in
jno
jge
or
xlat
jmp
fwait
inc
lock
sbb
sahf
adc
adc
or
call
outsl
pop
cmp
loop
lds
cwtl
lea
and
fldt
and
outsl
jecxz
lock
into
mov
xorb
scas
fwait
and
mov
clc
movsl
pushl
inc
iret
fiaddl
sub
add
ja
xchg
cmpsl
movsl
dec
pushl
xchg
jecxz
xlat
push
sahf
cmp
leave
ret
push
in
or
xlat
adc
jbe
incl
andb
xor
push
jp
clc
enter
jg
int
cmp
jmp
mov
scas
lret
lds
dec
lahf
cmp
sbb
mov
es
dec
cmp
ljmp
cli
test
fldenv
cld
in
jb
sbb
ljmp
inc
lcall
xorl
arpl
mov
xchg
jge
add
adc
or
call
mov
inc
push
cmp
inc
add
repnz
mov
arpl
push
inc
in
mov
nop
outsl
fcomps
xor
clc
incl
les
pop
scas
mov
ss
filds
divl
lock
xchg
jg
lock
cmp
leave
lods
sar
adc
pop
mov
aam
push
mov
gs
mov
adc
out
jle
pusha
xor
call
sbb
cmp
shrl
jp
mull
mov
jbe
outsb
dec
call
mov
sub
xchg
mov
mov
xchg
lahf
leave
sub
decl
sti
inc
lods
push
add
sbb
inc
mov
outsl
xchg
scas
jb
sbb
fwait
push
fcmovu
jbe
xchg
mov
call
in
loopne
and
and
daa
mov
lods
inc
lahf
push
outsb
lahf
es
imul
flds
jg
mov
aad
push
mov
scas
xchg
jmp
mov
shrb
decl
jbe
ljmp
push
sbbb
pop
adc
push
cs
or
mov
inc
mov
clc
dec
push
pop
fwait
mul
or
mov
mov
sbb
xchg
flds
std
aaa
cli
incl
ds
push
fcmovu
aam
xchg
int3
xorb
mov
pop
std
decl
xchg
or
jo
mov
aaa
imul
ds
mov
dec
lea
cmp
push
fwait
lods
mov
iret
rclb
stos
lock
mov
mov
cmp
ss
scas
lahf
dec
sub
imul
push
into
arpl
test
mov
lods
scas
or
movsl
aad
lods
stos
mov
jg
xchg
add
xchg
inc
in
dec
jno
adc
insb
imul
ljmp
cmpsl
ret
fidivrs
sub
dec
cmc
push
cmpsb
mov
ljmp
sarl
lahf
mov
jl
shll
test
ret
adc
mov
mov
sub
adcb
sbb
int3
cmpsb
push
fs
dec
inc
jne
cmp
cld
jb
cmp
xchg
mov
pop
scas
pop
int3
pop
and
mov
ss
cmp
jae
xlat
in
adc
iret
dec
fwait
repnz
pushl
outsb
sbb
mov
jmp
push
out
stos
cwtl
mov
test
adc
adc
dec
lcall
pushl
or
stos
insl
stos
xchg
call
inc
sti
dec
js
add
push
mov
sar
jl
fisttpll
adc
or
imul
mov
pop
lcall
icebp
mov
cli
jmp
add
mov
push
mov
shlb
cmp
cs
adc
jecxz
js
les
cld
cmp
pop
dec
mov
pushl
jbe
fisubs
clc
fisttpl
mov
mov
jno
xchg
daa
scas
popa
not
jg
push
jmp
out
out
gs
jae
or
cmpsb
pop
les
adc
decl
cld
lcall
xorb
cmpsl
xor
pop
adc
call
mov
xchg
pop
mov
aad
push
inc
out
icebp
inc
push
sti
dec
xor
xor
incl
nop
or
fs
jle
lods
dec
cwtl
mov
les
cltd
sub
pushl
popa
lahf
das
stos
pusha
aam
hlt
jmp
pop
into
sub
xor
jl
and
cld
sbb
call
add
iret
mov
push
movsb
jg
pop
lods
push
insl
out
sti
and
or
loopne
pop
xchg
icebp
cmp
jo
test
xchg
adc
cs
pop
or
insb
ds
call
xor
xor
pop
movsb
ret
mov
pop
mov
dec
aas
pop
mov
dec
xchg
lods
incl
push
cmpsb
aaa
dec
jbe
ljmp
enter
test
inc
enter
lcall
dec
into
das
pushf
or
pop
mov
pushf
add
cltd
xchg
jno
js
adc
std
jmp
dec
mov
ds
cmp
adc
je
divb
mov
mov
imul
push
cmp
or
push
mov
mov
roll
adc
pop
push
mov
dec
mov
jbe
cmc
fwait
icebp
fimuls
incl
subl
jno
pop
pop
xor
packssdw
repnz
pushl
arpl
lahf
adc
mov
sahf
mov
pop
and
jnp
rclb
mov
mov
enter
pushl
int3
dec
or
test
ja
sbb
lcall
mov
pushl
cmp
mov
sbb
in
imul
sub
in
and
loopne
movb
sub
mov
lahf
sub
add
dec
fimuls
jmp
popf
xchg
mov
xor
xorb
pop
sbb
lcall
cmp
mov
mov
jnp
out
pop
cmp
out
lcall
aaa
push
sti
jge
add
dec
push
add
jge
jp
lret
decl
jmp
or
xchg
call
adc
popa
push
pop
aaa
outsl
cld
pop
inc
dec
xorl
movsl
test
push
stc
pusha
popa
pusha
inc
rcrb
hlt
incl
sub
push
jge
cmpsl
scas
jnp
incl
mov
popa
cld
xchg
dec
ficompl
test
ljmp
mov
sub
pop
pop
les
sbb
jbe
mov
mov
xchg
int3
mov
pop
flds
xor
movl
leave
inc
cs
out
xorb
jns
and
push
out
insl
fnsave
push
pop
int3
ror
inc
dec
mov
stos
lcall
jno
aas
and
jl
mov
mov
in
jp
jns
pop
out
xlat
pusha
sub
push
jno
icebp
mov
rcr
dec
inc
jg
mov
idiv
fnstsw
outsl
mov
jge
xor
enter
jb
inc
in
pop
loopne
pop
stc
sub
cmp
fs
scas
xchg
testb
decl
lock
stos
mov
dec
pop
or
bound
jle
fnstcw
push
and
and
push
in
aas
pop
add
ret
mov
mov
xor
cmpsl
xchg
cs
stc
xchg
into
inc
xor
pop
sub
or
repz
fwait
das
jne
decl
mov
out
repnz
pop
jnp
xchg
std
jg
or
repz
push
cmp
adc
lcall
movsb
sub
xchg
jo
insl
push
adc
adc
fbstp
nop
mov
int
sub
scas
adc
jno
jg
loopne
ljmp
or
nop
test
mov
mov
xchg
rcrl
mov
jle
std
lcall
sbb
dec
push
jb
rcrl
pusha
popa
inc
pop
call
insl
insb
rcr
jg
or
adc
jg
jmp
push
test
push
test
dec
cmp
mov
imul
mov
test
fs
ljmp
jae
jl
mov
sbb
cmp
mov
sbb
ljmp
cmp
out
xor
aad
push
cmpl
sub
cmp
fldl
jge
mov
jbe
push
push
fistpll
xor
int
fcmovu
mov
lcall
cmc
push
pusha
imul
test
sbb
push
mov
sbb
inc
add
push
sbb
test
shlb
ljmp
xchg
mull
push
lds
stos
out
mov
les
jno
jae
mov
fistl
xchg
faddl
loop
enter
or
test
sbb
adc
cmp
outsl
cmc
jo
push
push
mov
or
jno
outsl
jne
popa
mov
std
jg
dec
mov
scas
mov
jno
sbb
pop
pop
ljmp
push
xchg
lcall
dec
stos
ja
add
mov
push
push
or
in
cmp
clc
pop
ret
adcl
leave
out
push
fcomp
gs
decl
in
adc
fcmovnbe
mov
or
pop
mulb
cltd
cmp
adc
out
mull
pushl
cmp
movsb
sub
cmpsl
jbe
lret
pop
clc
push
scas
stc
mov
dec
dec
lods
pushl
sbb
cltd
dec
pop
or
xchg
cwtl
into
cmp
pop
pop
pop
mov
shrl
jns
pop
pinsrw
inc
mov
inc
rorb
decb
inc
hlt
sub
push
push
add
call
rcrb
and
lahf
pop
dec
enter
mov
jns
adc
mov
lcall
jg
pop
pop
loope
insb
cmp
jecxz
std
out
adc
sub
test
decl
decl
add
adc
push
lods
xor
lcall
icebp
andl
ljmp
std
call
mov
ja
dec
pop
inc
test
shr
int3
insb
outsl
mov
dec
pop
call
push
ljmp
es
mov
dec
ljmp
je
or
adc
lcall
dec
xchg
test
in
sbb
xchg
xchg
mov
sysenter
jecxz
icebp
mov
jns
xor
inc
sbb
data16
into
sub
fisubrl
mov
fmull
notl
cmpsb
arpl
jno
mov
fnstcw
test
push
mov
imul
jb
xchg
sahf
ljmp
mov
cmpsb
nop
ss
popa
loopne
mov
or
das
scas
pop
jg
call
stos
or
adc
dec
mov
lret
mov
xchg
jecxz
add
lret
dec
loop
pop
cli
xor
sarb
incb
jnp
inc
notb
pop
gs
dec
dec
pop
sub
mov
dec
sub
sbb
pop
adc
fldcw
loope
call
mov
movsb
call
icebp
cmp
mov
or
popa
adc
std
in
mov
mov
icebp
mov
cmp
mov
stos
call
xchg
lahf
mov
inc
aad
sti
and
in
fs
add
int
hlt
or
or
jl
cli
push
ljmp
pop
out
or
aad
js
sub
orb
push
call
sub
je
adc
mov
pop
cmp
dec
jg
ficompl
loopne
test
imul
test
pop
imul
das
lock
aaa
repnz
push
arpl
mov
and
cs
jge
jg
jecxz
les
testl
jns
setns
sti
add
xchg
fwait
or
call
mov
lea
and
loopne
jns
jns
pop
outsl
push
aam
jp
inc
movl
stos
pop
shrb
call
insl
push
out
xor
or
and
dec
pop
xchg
pushl
jnp
into
mov
cltd
mov
push
ret
popa
cmp
inc
outsb
push
inc
push
fldln2
std
ret
incl
insl
bound
scas
daa
rorb
dec
hlt
dec
jl
or
adc
push
call
cmp
js
cwtl
fs
loopne
sbbb
adc
shl
incl
test
ret
mov
sti
cld
sub
cmpsb
pop
pop
cmp
jmp
xchg
clc
mov
dec
popf
dec
mov
sbb
bound
jp
or
push
test
clc
lcall
outsb
lods
ret
mov
stos
andl
inc
push
pop
jne
call
loop
jns
cmpsl
cs
push
inc
cs
ljmp
insb
dec
push
mov
cmp
imull
mov
adcl
aad
incl
mov
pop
xor
push
inc
test
xchg
mov
push
and
inc
arpl
lods
or
and
decl
testb
jle
gs
daa
shll
bound
clc
or
scas
mov
dec
cmp
iret
ret
jmp
push
decl
mov
repz
jb
les
cwtl
ds
int
hlt
stc
cmp
or
out
mov
and
out
cld
add
sti
inc
lds
push
push
lcall
cltd
or
pop
cmp
or
je
xchg
or
inc
repnz
call
mov
loope
mov
or
dec
leave
lea
push
fisubl
clc
movsl
mov
xor
mov
test
stos
jle
lahf
imul
sub
inc
push
pop
lea
insb
jb
test
push
push
pop
call
test
mov
cmp
mov
add
pop
pop
ds
mov
leave
sbb
mov
std
sbb
pushl
adc
pop
icebp
and
mov
and
addr16
incl
sbbb
xor
test
xchg
jbe
adc
decl
jg,pt
mov
inc
repnz
in
jge
fimuls
sub
cmp
lods
cli
inc
ss
aam
inc
jmp
mov
jp
push
in
nop
inc
xchg
mov
jecxz
call
les
xchg
lods
and
rcrl
push
cmpsl
push
lcall
jg
iret
cmp
push
outsl
cwtl
cmp
pop
pusha
lds
jae
fldcw
sar
mov
fstpl
jbe
xchg
push
fwait
jns
and
mov
sub
je
aad
pushl
dec
mov
mov
pop
dec
je
xor
sar
sti
cmpl
sbb
mov
lahf
inc
scas
stos
mov
dec
cmpsb
push
adc
iret
gs
jns
cwtl
and
das
lds
nop
sahf
std
fistps
inc
in
cld
cmp
mov
enter
je
mov
dec
sub
cld
mov
xchg
adc
cmp
repnz
and
aas
sarb
push
pushf
sub
call
incl
sti
out
popl
sub
jb
sbbb
xor
ror
jl
decl
pushl
jl
not
shll
mov
rcrb
mov
adc
jnp
adc
dec
cmp
cmp
jecxz
insb
mov
je
test
iret
mov
in
fcos
or
in
into
stc
idivl
or
ret
cmc
mov
push
jg
call
adc
add
xlat
mov
movsb
pop
mov
incl
pop
dec
incl
xchg
scas
je
aas
and
int3
in
cltd
jb
mov
dec
lcall
incl
or
cltd
mov
pop
mov
mov
js
xchg
mov
and
push
sub
popf
or
push
popa
adc
fldt
subb
fistl
jns
jmp
rcll
popf
or
adc
or
and
mov
sub
out
cmpsl
jp
mov
pushl
cli
loope
xor
dec
push
ja
and
mov
mov
test
sub
jg
xchg
inc
rorl
push
lret
gs
lods
push
xor
out
lret
sti
xor
call
clc
das
test
mov
add
inc
ret
or
cwtl
scas
ja
lcall
and
jge
mov
dec
push
sbb
pop
inc
and
loope
in
in
xchg
cld
jg
pop
pop
pop
mov
movsl
cmp
adc
pop
clc
pushl
sarb
js
ds
dec
cmp
jns
cmp
loope
call
mov
and
into
push
aas
imul
testl
cmpsl
pop
aam
push
inc
lret
cmc
ljmp
or
sti
call
mov
es
repz
inc
lcall
adc
or
pusha
pop
stc
cmp
ret
cmp
xchg
jp
jle
xor
std
mov
xlat
jl
int3
add
jmp
cmp
jl
dec
shlb
jp
xchg
add
adc
jo
ljmp
rol
cmp
mov
push
int3
xor
and
mov
inc
jg
testl
jle
out
jno
mov
mov
or
mov
aam
pop
and
jbe
mov
push
repnz
into
xchg
aad
lcall
sti
mulb
shr
push
imul
add
out
xchg
jge
sub
adc
decl
mov
mov
dec
inc
mov
cmp
ljmp
fucomip
incl
fidivrs
cmp
test
push
nop
xchg
icebp
sub
jge
je
pushl
add
imul
sub
mov
sub
push
out
dec
mov
loope
decl
fxch
outsb
mov
mov
scas
loope
out
bswap
sub
sahf
aas
mov
jo
ja
add
inc
flds
nop
inc
dec
rcrb
jnp
mov
ret
call
cmpsb
and
iret
xchg
cmpsl
pop
add
ret
pushl
or
push
jae
imul
imul
dec
incl
cli
xchg
loope
and
jp
sub
cli
mov
pushf
mov
add
inc
dec
stc
jg
lcall
jmp
mov
rcrb
addr16
movsl
cmp
cmc
fisttps
hlt
cmp
jno
jle
pop
pushf
lods
ljmp
rolb
add
movsb
mov
add
sub
adc
inc
dec
jns
cltd
scas
inc
mov
jno
lcall
cmp
adc
setge
mov
sub
or
jmp
lds
ja
jge
jb
adc
add
push
repz
jns
jmp
add
ljmp
mov
in
in
je
inc
sbb
sbb
out
out
call
icebp
or
imul
mov
stos
jecxz
mov
in
das
mov
xchg
ds
cli
add
adc
adc
inc
xor
call
scas
mov
mov
jae
sti
insl
dec
jmp
cmp
jle
mov
fmull
sbb
lock
pop
cmp
testb
je
out
int
push
adc
decl
icebp
shr
mov
aas
inc
and
cmpsl
das
dec
add
inc
sub
sbb
mov
adc
jecxz
jp
loopne
decl
repnz
cli
popa
int
dec
lock
mov
lds
xor
pop
cs
sbbl
mov
push
xchg
in
pop
aaa
les
add
movsb
inc
add
in
mov
inc
push
xchg
lret
cmpsl
in
movsb
gs
dec
lods
daa
or
xchg
cmp
add
call
cmp
lcall
dec
adc
fldl2t
mov
call
mov
and
imul
jmp
xor
cmp
push
shll
cltd
leave
decl
mov
jg
xchg
jae
pop
mov
add
decl
fdivr
mov
orb
mov
jg
pusha
pop
xor
add
mov
pop
sub
ljmp
fcmove
adc
pop
push
test
cmc
repz
sbb
ja
lcall
movsl
mov
adc
mov
mov
sub
jmp
cmp
mov
je
push
sbb
popf
and
cmp
mov
jns
dec
jnp
in
mov
hlt
mov
jle
aaa
mull
jg
repz
and
inc
adc
orl
jne
fdivrp
add
ja
incl
mov
leave
loop
mov
sub
mov
clc
fucomip
call
pop
inc
icebp
shll
xor
mov
pushl
call
mov
jnp
pop
xchg
sahf
cltd
mov
pushl
fisubrl
mov
jg
fcomip
pop
lods
pop
mov
xor
or
dec
push
lea
outsb
into
mov
cmp
dec
insl
lcall
dec
xchg
xor
ljmp
leave
cld
dec
mov
lods
cmp
dec
xchg
xor
sar
push
adc
mov
mov
mov
mov
addl
lret
jle
push
sarb
in
fsubrs
mov
add
or
sbb
and
inc
ret
jne
fnstsw
jg
and
andl
cmp
aad
leave
repz
mov
cld
call
fs
mov
inc
lods
fwait
mov
out
jns
push
jmp
loopne
cmc
or
mov
outsl
call
jg
ljmp
mov
sbb
mov
rorl
call
adc
push
data16
dec
mov
add
mov
orb
sti
dec
rcll
xchg
xchg
jmp
icebp
xor
stos
mov
cwtl
mov
jne
push
jge
and
ljmp
pushl
scas
jno
sbb
cmp
mov
jp
shll
pop
lcall
xor
cld
nop
push
je
xchg
pop
cmp
lods
inc
clc
lret
xchg
xor
xor
pushl
fsubrs
mov
xor
lret
xchg
mov
sub
lds
out
mov
jp
xor
ret
in
jnp
mov
in
lcall
loop
stos
in
dec
popf
sbb
test
clc
cmp
in
stc
scas
fs
inc
in
fsubrs
clc
push
imul
jbe
decb
and
jg
jge
sbb
dec
mov
or
push
jg
dec
and
pop
test
push
or
cmp
cmp
xchg
jo
xchg
sbb
pop
mov
scas
stc
add
jg
hlt
adc
mov
xchg
sub
cmpb
clc
call
aad
js
or
movsb
mov
adc
jne
sbb
int
sti
xor
jge
incl
pop
xlat
or
mov
jg
add
in
jg
pushl
pop
mov
sub
cmp
out
iret
ficoms
xchg
out
cwtl
int
decl
lcall
sahf
inc
icebp
testl
push
ljmp
pushf
sub
stos
jp
and
mov
mov
adc
ljmp
xchg
popa
ljmp
sti
arpl
ljmp
adc
sub
sub
add
cmp
xchg
pop
mov
cmp
dec
mov
cmp
jnp
or
mov
pop
iret
push
mov
pushl
lahf
mov
adc
ds
mov
ljmp
pop
mov
dec
mov
xchg
inc
rcll
cwtl
sub
xchg
jg
pushl
ljmp
mov
hlt
pop
mov
pop
or
repz
addr16
cmp
adc
mov
int3
sarb
sbb
pop
ret
sti
mov
mov
dec
lods
incl
cmp
mov
mov
dec
pop
sarl
dec
lods
jp
inc
adc
push
jmp
xchg
adc
xor
flds
scas
add
call
iret
mov
sbb
in
ficomps
sub
iret
push
inc
fildl
cld
push
std
jp
pop
xchg
fcoms
lds
jl
mov
and
adc
xchg
popa
mov
push
outsl
push
push
mov
pop
insb
movsl
out
les
inc
les
sub
clc
jmp
mov
sub
push
jmp
mov
std
cli
inc
jmp
mov
mov
fcmovnu
inc
stos
jbe
or
add
or
dec
lahf
pop
mov
repnz
loopne
push
lock
ret
scas
div
fwait
xchg
jmp
jmp
jmp
out
shlb
mov
das
mov
xor
aad
pushl
jge
jge
test
or
dec
jne
xorb
stc
ja
call
in
sub
push
push
push
mov
mov
add
andb
outsl
jmp
inc
les
push
or
in
mov
gs
popa
enter
mov
jbe
lret
lret
outsl
int3
int
jb
jne
into
push
shll
shlb
xlat
insl
mov
inc
aad
add
cmp
pop
mov
mov
fldcw
fidivl
fisttpl
push
add
pop
loop
jecxz
add
inc
in
in
jmp
inc
call
imul
aaa
lock
pslld
mov
hlt
cmc
sbb
add
aaa
fbstp
cmpsb
clc
stc
dec
add
pop
sti
js
cld
je
fcmovnu
out
mov
xlat
sub
mov
jle
pop
pop
fs
pop
adc
mov
jg
movsb
adc
or
push
call
mov
jmp
mov
cmp
sbb
lea
add
call
inc
jmp
sbb
adc
call
mov
push
pop
je
cs
adc
divb
jne
or
xor
pop
pop
pop
leave
ret
or
outsb
adc
jmp
pushf
data16
pop
adc
xor
popf
xor
or
insl
mov
xor
push
addr16
mov
clc
xor
cmp
jne
mov
push
daa
xor
inc
or
fcmovnu
mov
sbb
or
jl
jb
shrb
mov
cmp
push
push
push
inc
push
adc
std
cmp
pop
ret
movsbl
push
jb
insl
mov
pop
ret
jmp
add
adc
mov
mov
je
mov
push
xor
mov
test
je
mov
sub
inc
inc
mov
test
mov
outsb
jnp
std
jne
andb
dec
ss
push
inc
push
xor
incb
push
inc
cmp
jl
clc
pop
jg
add
adc
inc
cmp
mov
and
shll
cmp
cs
test
push
push
push
or
pop
ds
pop
adcb
xorl
mov
mov
or
add
sub
mov
stos
shlb
les
fldt
fstpt
sub
andl
mov
xchg
push
push
push
push
sbb
sti
aas
out
push
add
cmpw
adc
mov
cld
or
call
inc
inc
sub
mov
inc
sbb
xchg
ret
fisttpll
nop
lock
mov
std
shrl
cld
das
cld
lea
mov
incb
mov
cltd
mov
mov
lea
push
mov
test
hlt
adc
cmp
jl
dec
mov
pop
jbe
inc
shl
fisubrl
adc
push
inc
cld
lock
clc
dec
clc
jmp
icebp
or
jmp
lods
ficoms
push
xor
cmp
idiv
in
or
test
adc
ret
mov
push
pop
cmp
jl
mov
xor
push
or
shl
nop
mov
stos
insl
pushf
mov
sbb
sbb
popa
adc
es
adc
xchg
sub
mov
fdivr
add
add
cmpsb
in
mov
add
add
push
fidivs
dec
in
loopne
mov
outsb
int3
push
add
add
cmpsb
imul
imul
cmpsb
imul
imul
push
mov
jb
adc
and
jne
xlat
jne
ret
imul
lds
sbb
insl
pusha
jne
push
enter
cltd
adc
lds
or
mov
push
push
dec
decl
push
and
in
add
aaa
cld
iret
sub
sub
mov
mov
cwtl
idiv
mov
mov
mov
subl
shr
dec
mov
sbb
jmp
outsl
pop
sbb
sbb
push
int3
les
jg
mov
das
jl
push
inc
jp
jae
xchg
or
mov
inc
imul
in
dec
jne
stos
push
sbb
adc
push
pop
add
repnz
jnp
js
movsb
adc
notb
clc
xchg
jnp
nop
push
push
js
push
jns
inc
imull
cld
adc
or
and
cmp
jne
push
sti
sub
jmp
push
add
mov
dec
cmp
and
je
adc
mov
cmc
movl
or
movsb
and
push
jns
fcoml
enter
push
sub
rcrb
cmpl
xor
pusha
inc
je
add
je
loope
dec
popa
or
ret
sub
sti
call
cmp
sarl
add
lret
cmp
dec
scas
in
sbb
mov
inc
jo
mov
lock
or
fsubs
push
cmc
dec
scas
idiv
je
dec
movb
jne
add
push
int3
rorb
stc
xor
movsb
inc
push
incb
outsl
lcall
adc
xchg
pop
loope
mov
std
cwtl
push
shlb
and
shll
mov
xor
mov
lea
and
push
ljmp
mov
or
add
mov
dec
add
and
shlb
insb
xor
pop
push
inc
mov
xlat
add
mov
pop
rorb
pop
push
push
shl
add
inc
les
pop
shll
lods
lods
pop
scas
xlat
jne
je
scas
add
dec
pop
xlat
jne
mov
mov
mov
mov
mov
mov
add
fbstp
mov
adc
xor
adc
push
cld
dec
or
sahf
repnz
es
sub
adc
or
rclb
in
inc
or
mov
cmp
mov
inc
dec
repnz
ficomps
rclb
mov
idiv
dec
cs
fmull
mov
mov
cmp
das
div
loop
pop
mov
pop
rcrl
add
arpl
push
add
cmp
and
call
jns
jbe
push
push
sbbb
loope
add
jo
jp
stos
push
das
push
push
and
xor
mov
xchg
andl
add
lea
jo
lock
in
fstpt
mov
and
sbb
popa
leave
addb
dec
push
outsl
xorl
push
cld
mov
xchg
hlt
push
lcall
cs
lret
fcoms
mov
fildl
ret
dec
sub
daa
popf
cs
or
cmp
jae
push
sub
lock
adc
outsl
push
inc
cmp
das
out
add
cmp
add
inc
inc
cmp
sub
popf
and
jmp
push
into
insl
test
sbb
jmp
fbstp
sbb
pop
out
pxor
pop
lock
jb
je
shll
gs
mov
inc
pop
xchg
xor
mov
subb
fldl
lea
les
rep
stos
stos
pop
std
adc
imul
add
adc
int3
sub
or
loop
xor
adc
imul
jns
ret
sbb
cmp
jbe
js
insb
push
pop
adc
movups
test
xorb
popf
gs
adc
xchg
and
je
adc
jnp
loopne
or
lods
roll
push
ljmp
jnp
jbe
addr16
mulps
add
addl
daa
rclb
or
cmp
in
or
adc
popa
dec
pmulhw
lret
cmpb
cld
jp
movsl
movsw
movsb
push
cli
or
and
ljmp
daa
sbb
xchg
or
testl
push
cmp
clc
and
xchg
push
mov
or
cmp
push
push
lods
jne
shll
xchg
mov
push
pusha
push
and
mov
and
cmp
cld
mov
mov
sub
jge
dec
jecxz
cmp
jl
or
scas
jle
push
inc
xchg
jo
add
xor
in
push
js
jnp
pop
idiv
cmp
jle
add
jl
jge
std
in
jle
jp
add
pop
jl
pop
sub
adc
pop
pop
adc
imull
movl
cltd
sti
xor
cwtl
add
ds
in
enter
adc
cli
mov
inc
mov
stc
xorb
pushf
cld
popf
cld
je
negb
mov
add
adc
or
repnz
ffree
mov
cmp
lea
test
data16
inc
sarb
fiaddl
in
out
mov
add
inc
jmp
push
inc
loopne
arpl
pop
mov
push
or
xchg
cli
daa
mov
test
cmp
mov
popa
and
or
or
ja
fwait
js
xor
rclb
jb
push
aas
nop
stc
in
fs
mov
sub
adc
and
cli
test
push
xchg
mov
or
inc
pop
pop
pop
testb
mov
xor
jb
lock
inc
repnz
repz
cmc
adc
mov
imull
lret
xor
inc
gs
gs
xor
xor
imul
or
jo
dec
xlat
test
fsubs
fisttpl
inc
rcr
fucom
inc
outsl
jo
dec
shll
inc
imul
mov
mov
mov
sub
shrb
cmp
inc
fisttpll
dec
into
sarb
inc
fildl
push
pop
shrb
shll
inc
aam
imul
adc
or
or
or
or
aas
push
imull
ficoml
pop
dec
pop
cmp
cmp
jne
popw
or
or
mov
cmp
repnz
or
cmp
push
ret
enter
and
and
add
incl
xchg
xchg
xor
in
inc
inc
add
adc
push
adc
add
push
fnstsw
push
mov
cmp
xor
cmpsl
clc
daa
sub
push
jle
mov
mov
pop
pop
imul
adc
lods
aas
push
inc
shl
leave
jge
and
incl
or
dec
push
and
adc
fadds
push
and
cld
andb
add
mulb
push
sub
cli
or
sbbb
jae
data16
push
aas
push
movb
leave
mov
das
pop
adc
add
cs
daa
jmp
stc
pop
rol
gs
movsl
sub
fldt
fstl
push
fsts
call
les
lock
cmpsb
mov
out
mov
cwtl
pop
fisttpll
cs
add
jmp
mov
push
push
enter
jne
ret
adc
push
or
push
jmp
and
and
insl
stos
hlt
or
xchg
inc
sbb
outsb
mov
mov
xchg
rcrb
push
pusha
not
out
jmp
and
ljmp
dec
push
xchg
jmp
das
je
xor
cmp
xchg
iret
or
clc
mov
mov
add
xor
jmp
enter
movsl
fcomp
pop
insb
pusha
enter
push
rol
pop
mov
push
es
mov
push
or
mov
adc
aad
sbb
and
push
in
jno
and
stos
stos
stos
or
xor
nop
add
scas
dec
mov
mov
test
dec
xor
push
push
xor
fimuls
insb
xchg
and
adc
mov
add
repz
insb
fwait
xlat
and
ja,pn
xor
hlt
pop
push
xor
push
jnp
sarl
mov
fldcw
add
inc
adc
sub
sub
mov
fnstenv
dec
mov
test
sub
pusha
das
pushf
std
xlat
dec
pop
je
cmp
ss
jmp
icebp
rcrb
sub
sbb
pop
push
test
and
mov
or
mov
repnz
movsl
pop
movsl
insl
mov
xor
test
or
movsl
sbb
jnp
inc
mov
idivl
out
push
adcb
push
inc
mov
shl
movb
push
cmp
sub
sbb
and
xor
and
adc
push
cwtl
fdivr
and
sbb
adc
inc
lahf
in
nop
out
stc
shlb
enter
ret
popa
and
xor
subl
adc
inc
jge
lods
shrl
push
pushf
adc
inc
ret
sub
loopne
pop
sbb
pop
or
int3
mov
loopne
call
hlt
dec
cmc
mulb
cmpsb
test
xor
inc
xlat
test
add
adc
shrl
pushf
in
jmp
push
call
mov
in
jne
mov
test
mov
lock
in
mov
and
push
push
mov
lds
adc
cmpsb
pop
ljmp
adc
mov
ljmp
jmp
les
int
add
push
in
cld
push
movsb
or
aaa
sub
sbb
mov
or
inc
mov
test
shrb
out
push
jl
pop
test
test
insb
js
or
add
js
bound
pop
cmp
paddb
pusha
fmull
mov
testb
data16
sbb
and
fmull
mov
pusha
push
mov
shlb
hlt
add
mov
dec
idiv
stc
adc
mov
jo
mov
push
in
xchg
imul
and
jmp
sub
xchg
in
enter
ja
outsb
and
fwait
jmp
mov
test
or
sub
ret
bound
ret
shll
mov
fstps
das
lock
repz
cmc
inc
cmc
or
pushf
lock
jnp
sub
flds
call
rol
out
jbe
pop
cs
adc
lretw
xor
sbb
push
sbb
ja
push
jmp
adc
out
xchg
inc
pop
ret
and
enter
or
add
enter
mov
enter
mov
ror
enter
enter
cld
lods
cmp
rclb
mov
out
stc
push
xor
xchg
sbb
cmpsb
sbb
mov
neg
sbb
add
outsl
test
push
cmp
or
sub
jle
test
pop
jae
sub
mov
or
loope
or
jecxz
push
push
push
shrb
sub
testl
in
push
repz
cs
pop
pop
add
cmp
incl
cmp
clc
aaa
or
sub
or
cld
or
or
mov
xchg
cmp
movl
clc
jge
pop
sbb
or
daa
jbe
sub
inc
xchg
mov
fstp
mov
or
pushf
mov
jne
mov
in
sub
lcall
push
and
loopne
xor
and
inc
cmpb
mov
cmp
je
cmp
repnz
xor
repnz
dec
movsb
jl
testb
cs
clc
rorb
mov
jmp
sub
fistpl
add
push
imul
xchg
cwtl
xor
mov
in
inc
or
test
inc
popa
mov
mov
aam
inc
call
fadds
hlt
mov
add
mov
xor
test
xchg
iret
outsl
popa
cmp
add
sbb
add
ds
pop
jo
cmpsb
imul
cmpsb
imul
aas
add
mov
pop
bound
jb
xor
shll
mov
xchg
dec
shr
sbb
mov
pop
add
aam
xor
lcall
add
lcall
cli
cmpsb
imul
add
inc
lcall
push
cmpsb
imul
loop
inc
test
xchg
pop
in
fwait
setp
sub
das
pop
sbb
sbb
inc
pop
mov
pop
or
test
ss
test
lret
xor
ja
mov
adcl
inc
test
call
dec
inc
dec
xor
cs
insb
add
push
inc
push
dec
or
inc
aad
ljmp
loopne
mov
les
jecxz
jmp
lcall
cli
pushl
mov
add
cltd
repz
fucom
testb
std
add
jmp
adcb
dec
push
push
inc
push
push
xor
xor
fadds
adc
loopne
mov
gs
gs
flds
xor
xor
mov
pop
add
jmp
jnp
pushf
call
mov
lea
lods
outsl
outsl
cmpb
inc
adc
out
adc
jnp
incl
sti
add
push
push
push
push
push
mov
call
mov
pop
popf
sti
push
fldenv
roll
pop
pop
pop
adc
into
scas
loope
push
jp
mov
fldcw
xor
fildl
loop
mull
mov
lods
lahf
dec
mov
inc
decl
xor
dec
or
push
mov
xor
cmpsl
mov
outsl
insl
arpl
daa
cld
scas
cmp
data16
jae
cs
outsl
fs
std
ljmp
fidivrl
jg
pushf
mov
idivl
cmp
jne
fs
sub
push
outsw
outsb
aaa
pop
jae
push
clc
jns
je
insl
push
inc
and
lock
scas
test
scas
inc
sbbl
insl
imul
arpl
jae
addr16
aaa
test
idivb
add
outsl
je
push
je
jns
or
add
data16
js
push
and
arpl
outsl
data16
xchg
mov
sbb
and
inc
jae
sti
testl
ja
dec
push
push
push
inc
push
inc
pop
inc
push
dec
mov
pushl
outsl
imul
pop
xchg
lcall
add
cld
iret
sbb
pop
jge
jnp
enter
mov
mov
dec
add
mov
push
add
push
rolb
inc
add
ljmp
out
add
pop
mov
int
mov
push
jb
addr16
shll
popa
outsb
outsb
outsl
je
bound
jb
outsb
and
inc
dec
push
and
pop
in
das
into
gs
out
fimull
cmpsl
mov
add
pop
fnstcw
stos
fbld
pop
mov
mov
and
mov
stc
out
mov
popa
test
pop
scas
cmp
test
in
mov
dec
mov
cmp
fbstp
jmp
loopne
and
add
stc
js
add
sub
or
daa
add
pop
cmp
rorb
arpl
fldl
add
sub
adc
ret
flds
add
shlb
push
or
or
or
je,pn
js
or
ds
mov
pusha
int
jb
popa
je
add
cmp
imulb
shrb
je
pusha
es
nop
add
dec
daa
push
inc
clc
add
jo
add
lods
or
data16
xor
movsl
push
push
jb
fxch
sarl
outsl
arpl
add
ja
test
dec
ret
jae
popa
arpl
daa
rolb
scas
or
int3
dec
popa
out
and
jbe
add
fmuls
xchg
lods
in
and
adc
dec
mov
xor
shr
pop
lcall
adc
out
out
out
add
or
push
idiv
jmp
test
ja
addb
and
adc
adc
add
cld
or
add
mov
fisubs
jae
out
jns
rsm
xlat
mov
mov
add
pushl
sbb
test
fwait
sbb
mov
and
mov
sub
incl
push
popa
push
aam
rcll
sub
mov
xchg
inc
loope
fsubl
jmp
fs
jns
ret
andb
fcom
lock
cmpsl
cli
cli
fisttps
lcall
dec
jge
pop
push
int3
pop
out
mov
push
cmc
rcrb
sub
xor
ljmp
pop
stc
mov
scas
aaa
hlt
inc
jae
adc
imul
flds
xor
lods
adc
dec
call
mov
mov
pop
pop
mov
mov
dec
mov
mov
pop
fadd
jo
incl
imul
adc
sub
or
mov
test
mov
jno
call
lods
out
mov
rclb
mov
jno
pop
test
push
outsb
pop
call
pushl
js
push
leave
inc
xor
lea
mov
lods
or
pop
fmuls
pushl
push
bound
sbb
mov
adc
daa
lods
and
mov
inc
xchg
xchg
mov
dec
dec
sar
ljmp
std
cmp
adc
adcl
es
cld
push
add
mov
adc
lcall
add
icebp
sahf
loopne
xchg
or
mov
xchg
inc
es
pushl
fldenv
cld
leave
scas
adc
mov
inc
mov
repnz
cmp
incl
inc
cmpsl
xchg
dec
sub
xor
stos
mov
mov
rcl
xchg
add
mov
jg
testb
sbb
inc
cmp
fildl
out
adc
aas
lahf
inc
icebp
out
adc
dec
lds
dec
loope
fidivrs
test
mov
bound
testl
push
lret
inc
pop
push
cmp
pop
mov
inc
pop
test
lahf
cmp
mov
mov
and
jo
and
mov
dec
mov
aad
push
inc
dec
cmp
adc
mov
or
mov
mov
sbb
incl
mov
sahf
dec
rorl
xchg
inc
test
dec
ljmp
jmp
push
xor
mov
stc
loop
lods
cmpsb
fdivl
sbb
mov
sbbb
sub
and
jb
xor
or
mov
adc
inc
cmp
arpl
push
adc
jg
repz
imulb
inc
loope
cmpb
xchg
cltd
sarl
cli
sbb
jns
movsl
sub
add
test
jo
add
xor
movsl
or
cli
pop
incl
ret
es
mov
push
repnz
jnp
data16
call
pusha
pushl
sbb
dec
dec
mov
mov
repz
pop
xchg
sub
pushl
arpl
dec
loope
dec
jle
fs
inc
mov
and
insl
and
or
jnp
add
mov
mov
arpl
mov
cmp
leave
push
inc
ss
pushl
test
lahf
imul
not
pusha
out
gs
xchg
aas
les
stc
call
jbe
xor
out
popf
mov
cli
push
or
repnz
jnp
mov
je
insl
insb
loope
xor
out
scas
or
icebp
sarl
mov
xor
pop
loopne
fisttps
mov
sub
fstps
jmp
pop
call
or
pop
dec
push
lret
insb
sbbl
and
ljmp
loop
lret
sub
cmp
aam
popa
pushf
jl
orb
daa
pop
leave
pop
jne
xlat
push
mov
stc
ljmp
pop
sbb
pop
add
lock
add
cmp
xchg
pop
notl
loop
pop
movsb
test
es
pop
pushf
loop
pushl
stos
fstl
fimull
push
out
inc
imul
sub
std
fisubs
mov
sarl
mov
sub
lret
pushl
xlat
fisubl
and
inc
mov
and
dec
push
idiv
ss
and
dec
scas
bound
sub
icebp
mov
pop
xor
arpl
xor
ljmp
sbb
jno
adc
pop
jnp
iret
gs
fistpll
or
and
push
xor
insl
jl
and
cmp
in
push
jecxz
jns
jl
lods
mov
sbb
mul
jno
loope
lcall
sub
hlt
aas
std
and
jnp
xor
out
mov
mov
out
ficompl
roll
jmp
xchg
or
fdivl
sbb
cmp
xor
pop
cld
aas
add
pushl
pop
push
jno
or
mov
fdivrp
mov
or
mov
cmp
decl
sub
xchg
sub
or
mov
js
add
fucomip
aad
repnz
out
jae
pop
in
insl
xchg
xchg
shld
push
cli
pushl
push
outsb
pushf
sbb
bound
lds
add
jb
pop
insb
ljmp
ror
inc
pop
roll
clc
push
pop
add
mov
es
scas
xchg
push
ljmp
orb
imul
int
sub
mov
js
mov
in
cld
lcall
or
fnsave
adc
or
mov
mov
test
insb
sub
int3
and
adc
icebp
bound
inc
sbb
jecxz
lea
dec
repz
fmull
ds
gs
add
imul
dec
and
out
push
jecxz
addr16
das
incl
lcall
lcall
es
icebp
clc
dec
mov
lea
push
pop
lds
pop
ljmp
push
xchg
mov
leave
pusha
mov
pop
scas
repz
sbb
mov
sbb
sub
push
cmp
lods
adc
xchg
dec
pushl
lret
addr16
mov
sbb
popa
cmpsl
lret
cmpsb
xchg
pop
jmp
loopne
xor
mov
mov
mov
outsl
stos
mov
or
ret
adc
xor
or
cli
push
push
xchg
dec
jno
cltd
sub
mov
cltd
adc
call
es
sbb
xchg
push
aas
cmp
and
ljmp
scas
cmp
mov
arpl
and
push
and
in
mov
movsl
mov
mov
das
cld
enter
xchg
movsl
outsl
dec
pop
inc
or
scas
add
sar
mov
out
adc
mov
ljmp
stos
or
and
sar
mov
and
in
vmwrite
sub
cmp
push
addr16
xor
sub
gs
push
orl
jecxz
shll
enter
mov
mov
repz
jns
cs
call
pop
inc
mov
adc
and
je
sbb
jl
dec
fwait
leave
adc
imul
ss
popa
lock
loope
adc
dec
scas
cmp
fdivrs
mov
cmpsl
aad
pushl
or
inc
dec
mov
pop
or
daa
add
enter
sti
das
mov
call
push
mov
push
scas
inc
clc
test
cmp
mov
fistpl
cld
dec
movsb
int3
movlps
lahf
movb
in
mov
jp
lock
xchg
and
sbb
movsb
dec
cmp
jmp
sar
ljmp
imul
pop
ljmp
sbb
add
jg
push
in
inc
mull
cmc
call
roll
sub
sbb
jle
pop
adc
testl
pop
and
out
out
popa
loope
iret
ljmp
imul
mov
jmp
xor
aam
fwait
stos
sbb
mov
out
aas
xchg
aad
xchg
insb
mov
lret
mov
mov
mov
sub
pop
imul
ja
xor
adc
rol
pop
js
nop
and
jae
and
inc
push
shlb
ficompl
repnz
jne
in
or
dec
clc
dec
testb
mov
mov
cmpsb
cmpl
dec
je
jl
arpl
add
call
fmuls
and
loop
pop
xchg
negl
std
repnz
js
cmovle
mov
out
jnp
mov
popa
push
push
dec
push
cwtl
push
inc
call
scas
sbb
inc
adc
lcall
repnz
xchg
ljmp
fmull
jns
iret
test
pushl
mov
xchg
jae
mov
jne
cmp
loop
pop
mov
push
and
mov
std
decl
lcall
mov
popl
ficoms
ljmp
jo
cwtl
jp
mov
mov
xor
test
sahf
testl
pushl
test
shl
xlat
inc
jbe
mov
test
pop
xor
incl
shrb
icebp
in
incl
ss
sbb
push
cmp
push
and
outsl
mov
jmp
pop
repnz
ja
add
insl
fldcw
or
mov
test
mov
jg
loop
or
adc
or
test
sub
pop
hlt
test
mov
rol
sbb
clc
adc
dec
rdmsr
cmp
inc
in
addr16
pop
inc
fsubs
mov
inc
das
dec
cmp
std
mov
scas
mov
incl
ljmp
dec
mov
ret
mov
cmc
mov
and
sbb
inc
scas
testb
adc
pushl
cmpsl
pop
pop
cmc
xor
xor
mov
shrl
jbe
nop
xor
jecxz
decl
xor
cmp
xchg
cmp
and
and
jl
out
cmc
mov
jmp
push
pushf
sub
xor
inc
mov
sub
sub
sbb
jb
sbb
jmp
pop
ja
enter
enter
sub
mov
adc
test
incl
aas
roll
sub
inc
and
or
lds
inc
subl
or
rorb
or
andb
mov
cmc
add
jg
sti
xchg
loopne
adc
outsl
cmc
pushl
xor
xchg
psubusw
rcll
jo
pop
pop
pop
jns
sub
dec
mov
in
cmp
hlt
jl
mov
cmp
or
cwtl
insl
scas
jecxz
cmp
lods
out
test
call
sub
pop
ljmp
in
sub
jle
sbb
negl
sbb
sub
decl
lret
outsb
xchg
sub
enter
xchg
inc
sti
jmp
jae
rcrb
leave
mov
lds
xor
mov
sub
add
jno
pop
jne
or
push
mov
sar
jmp
mov
pushf
out
jns
out
outsb
fnstcw
repnz
mov
xlat
push
test
mov
inc
sbb
mov
add
das
sti
inc
jg
xchg
sahf
add
ljmp
sub
je
loopne
sar
mov
movsl
inc
xchg
mov
repz
ss
fcomps
cmp
cld
fistpll
in
outsl
cwtl
inc
and
test
xor
mov
mov
push
pusha
or
lahf
mov
mov
lcall
ljmp
and
push
push
push
sbb
mov
int3
and
mov
lcall
or
inc
push
or
sub
mov
cs
xlat
inc
cmp
test
jb
lods
add
jb
xchg
stos
xor
outsb
jno
or
fnstcw
std
mov
fmull
cmp
mov
scas
iret
add
mov
call
sti
jecxz
stos
jns
or
call
mov
jae
dec
fsubs
xorl
jmp
adc
pop
dec
into
mov
ror
ror
push
mov
jge
in
call
add
les
xchg
gs
inc
jbe
mov
inc
pop
pop
in
decl
pushl
scas
shll
cmp
or
popf
jecxz
scas
loopne
xor
ljmp
mov
pop
rorl
mov
xor
iret
in
pop
das
pop
out
and
jo
pushl
cli
xchg
shll
loop
pop
movsl
jns
clc
testb
mov
call
lcall
enter
data16
xor
mov
pop
mov
dec
ss
mov
lcall
pop
xor
add
cmp
jle
xchg
push
fiadds
inc
out
inc
mov
or
jno
mov
cmp
out
fcompl
sahf
repz
gs
push
adc
stos
mov
call
int3
imul
loop
ljmp
clc
aaa
push
jmp
decl
jecxz
cltd
arpl
jb
adc
inc
sbb
mov
cmp
out
nop
dec
lea
decl
sbb
push
shl
inc
scas
and
lock
insl
fists
push
jg
mov
pop
out
js
movsb
call
cli
jmp
mov
loopne
push
cmp
pcmpeqd
push
push
push
jnp
xor
lcall
fidivl
push
inc
ljmp
mov
cld
ret
call
push
dec
inc
pop
nopl
and
loop
test
mov
and
pushl
repnz
mov
push
cli
cmp
aad
outsb
lods
fdivl
inc
les
and
ss
jae
and
in
push
gs
lcall
jmp
pop
mov
xor
mov
inc
sti
inc
sbb
mov
sub
adc
dec
mov
cli
inc
cmc
cmc
aad
xor
loopne
test
xchg
addb
jg
pusha
pop
inc
cmpsb
inc
mov
dec
pop
add
insl
push
cmpsl
sub
cld
in
decl
dec
mov
mov
test
aam
pop
mov
in
decl
call
push
outsl
loopne
outsb
cs
mov
aas
dec
cmc
in
jmp
inc
pop
sub
mov
jg
in
dec
dec
xor
jecxz
cmp
imul
jno
mov
adc
sub
aam
sahf
xor
mov
repnz
sub
and
call
jecxz
adc
stc
test
or
fwait
or
lcall
pop
int3
cmpsl
lcall
push
pop
dec
outsb
jg
ljmp
sbbb
idivl
pop
sub
sar
jmp
jmp
int
cmpsb
sub
xor
push
sahf
cmp
mov
test
xor
fidivrs
mov
mov
out
sbb
cmp
das
cld
inc
shll
out
addr16
std
push
mov
and
xchg
shlb
std
jp
mov
pusha
jle
repz
outsb
add
pop
dec
jg
inc
mov
xor
inc
adc
jnp
inc
mov
inc
adc
popa
mov
push
mov
cli
fldl
ret
ss
jns
cmp
xchg
ljmp
inc
test
lcall
push
xor
rorl
aad
fcmovnu
dec
nop
push
and
js
xchg
inc
mov
ljmp
and
jmp
xchg
xchg
dec
aad
popa
dec
divb
bound
cmp
jg
mov
mov
dec
mov
inc
movsl
aam
fisubs
push
mov
int3
outsl
std
mov
sbb
cwtl
popf
or
ljmp
incl
out
pop
cmpsb
inc
adc
in
pop
push
mov
push
cmpsb
test
xor
incl
push
fcmovnu
adc
lods
sbb
pop
out
cmp
xor
xor
sub
in
pushf
inc
nop
sbb
xlat
lock
lcall
mov
lods
dec
int
test
jns
cmp
les
dec
enter
sarl
cli
fs
cmp
mull
mov
push
lea
repz
ficompl
fwait
pop
std
sbb
das
dec
inc
mov
or
push
test
mov
addr16
scas
mov
clc
pop
loopne
sbb
add
arpl
pop
push
decl
add
cmpl
jge
scas
sbb
push
fdivp
mov
adc
int3
ds
jle
jg
mov
aam
incb
dec
out
pop
jno
mov
push
repnz
push
xor
loopne
scas
idivl
mov
add
lcall
cmp
rcl
dec
jb
out
and
mov
sti
aad
in
loope
lds
jb
jbe
repnz
xlat
xchg
sub
sub
mov
inc
mov
stc
sbb
push
xor
int3
jl
imul
sbb
cmc
sbb
mov
shlb
cs
mov
lcall
or
pop
sub
inc
sbb
movsb
sub
xchg
std
data16
sbb
adc
mov
adc
adc
les
lcall
fstpl
push
idiv
ljmp
pusha
cs
cmc
lea
dec
adcb
shrb
loopne
into
imul
jle
lock
push
xchg
leave
repz
mov
dec
mulb
clc
pop
cli
pushl
out
adc
xorl
bound
cmp
insb
inc
imulb
loope
lcall
mov
icebp
repz
fstpl
jp
out
or
div
jg
movsl
imul
jbe
shrl
hlt
loop
add
cltd
cmpsb
call
and
lahf
aas
std
ljmp
loopnew
xchg
add
or
ror
pop
lds
inc
decl
cmp
mov
cmp
scas
xor
lock
cli
lahf
pop
popa
in
pop
decl
cmp
mov
xor
das
ret
xor
mov
mov
iret
jge
cmp
insl
test
sarl
test
mov
call
sahf
mov
cmp
nop
mov
mov
pop
sub
repz
sbb
cmp
inc
lret
dec
jmp
aad
shll
sbb
sahf
lods
jle
call
xchg
dec
xchg
sub
inc
mov
decl
repz
xor
push
js
inc
jmp
mov
and
aaa
mov
hlt
mov
sbb
imul
jmp
cmp
mov
jmp
cmp
adc
testb
inc
ljmp
xchg
mov
les
ret
nop
xchg
loopne
aad
lds
cld
pop
push
push
jle
shr
xor
decl
jae
dec
lea
xor
nop
pusha
jg
inc
dec
and
imul
ss
adc
xlat
out
xchg
jne
cmpsb
incl
mov
psubb
push
jns
fwait
xor
and
pop
jecxz
fprem1
or
inc
mov
loopne
daa
pop
imul
dec
dec
dec
not
xchg
fadd
mov
mov
jns
pushl
incl
das
in
test
adc
out
pop
cmpsl
pushf
mov
pushf
in
and
mov
imul
iret
decb
pushf
daa
sbb
cmpsb
mov
sub
lret
lahf
jb
push
mov
aas
fbld
xor
or
pop
and
jl
jmp
mov
sbb
repz
cmp
adc
xchg
in
mov
pop
jle
push
xor
rcl
jbe
out
ja
aam
adc
and
test
gs
xchg
dec
mov
call
test
cmp
mov
lcall
cld
mov
mov
dec
inc
dec
push
andb
data16
jne
das
pusha
lea
decl
stos
mov
into
mov
mov
pop
inc
sbb
aaa
lcall
mov
cmp
jae
loopne
sahf
dec
imul
aam
and
dec
cli
call
pop
cltd
jb
cmpsb
add
lahf
pop
jl
imul
aaa
pushf
push
mov
arpl
outsl
pop
lret
incl
leave
inc
arpl
lea
mov
mov
nop
popf
jno
int
ret
lahf
jo
jg
mov
mov
inc
push
test
test
xor
ficoms
je
mov
cli
xor
out
inc
ja
mov
sti
iret
push
ja
push
pushl
mov
adc
movsw
and
sbb
pusha
or
lcall
call
push
push
ljmp
pop
js
movsb
push
lcall
int3
scas
fwait
sbb
mov
testb
jge
inc
jl
sub
imul
cmp
and
mov
lahf
imul
sbb
xor
xor
pop
fsubr
xchg
mov
push
hlt
out
sub
push
push
loop
decl
arpl
in
pop
aad
jne
mov
enter
jg
fisubrl
cwtl
adc
fiaddl
jle
loope
add
cmpsb
mov
imul
je
ret
mov
icebp
push
adc
ljmp
mov
retw
xor
adc
pop
popf
sahf
xchg
cld
std
sbb
cmpsl
and
xchg
cmp
es
cmpsl
push
pop
adc
inc
mov
test
mov
fmuls
sar
fiaddl
repnz
pop
out
ja
jns
mov
push
pop
jmp
fisubs
call
clc
insb
xlat
test
add
lahf
push
cmp
sbbb
ljmp
inc
stc
mull
rorb
in
jmp
repnz
or
add
pop
ffreep
push
and
dec
nop
sub
in
dec
push
test
mov
jbe
jle
xchg
ljmp
pop
cmc
repnz
pop
insl
iret
in
ss
dec
sub
push
sahf
pop
mov
pushl
sub
sub
and
aaa
rcrl
mov
cmp
dec
pushw
stc
stos
inc
cs
incl
push
xchg
lcall
fistpl
inc
mov
jle
add
out
mov
jne
and
pop
pushf
or
mov
adc
or
sbb
jmp
inc
es
rolb
loopne
xor
dec
jg
data16
mov
ljmp
push
jbe
add
sar
addl
lcall
mov
sahf
sub
push
stc
cltd
in
enter
nop
jae
push
ret
mov
insb
xor
mov
mov
incl
pop
push
mov
lret
xchg
sbb
sub
notb
jg
aad
jb
dec
push
imul
or
mov
cmp
repnz
les
outsl
lock
hlt
repz
ficoms
or
dec
adc
sahf
mov
decl
sbbb
mov
insl
mov
js
and
xor
clc
decl
call
mov
ret
outsl
clc
jp
xchg
xchg
mov
jmp
shrl
shll
jb
out
dec
adc
inc
sbb
lock
xchg
pop
sub
lcall
lahf
cld
add
mov
pop
add
ljmp
mov
test
sar
jg
call
mov
in
inc
jo
mov
cmpsl
mov
dec
add
jbe
ljmp
icebp
add
xor
mov
adc
xchg
xor
testb
mov
movsl
inc
xchg
adc
loop
addr16
or
inc
and
fstl
dec
std
pop
and
cld
stos
jae
cmp
lods
jmp
movsb
pop
jmp
ret
sti
in
add
in
mov
mulb
mov
in
add
outsl
inc
call
das
lcall
lds
into
sbb
pop
pop
xchg
insl
pop
test
xchg
test
hlt
add
push
test
pop
mov
icebp
lods
dec
outsb
imul
pop
negb
das
pop
sub
clc
push
xchg
sub
xor
or
sti
adc
cld
cltd
je
movsb
test
fucomip
jmp
jnp
gs
das
or
sub
pusha
dec
push
scas
in
jg
incl
sub
dec
mov
mov
test
dec
cmp
xchg
mov
push
xlat
mov
clc
dec
push
pop
sti
rsqrtps
sub
mov
mov
sub
push
jmp
test
mov
shr
cmp
les
cmp
testl
mov
rolb
mov
call
hlt
setne
test
sbb
xchg
xor
sbb
mov
outsb
mov
jge
push
je
inc
jns
pop
jmp
fmull
shll
insl
mov
shrb
aaa
cli
shlb
imul
pop
movsl
cmp
adc
jmp
stos
fs
ljmp
pop
pop
mov
stos
mov
lock
js
icebp
jbe
xorb
inc
hlt
jg
lods
mov
out
int
js
adc
sub
cmpsb
scas
mov
jb
pop
lahf
cwtl
ret
sub
ljmp
pop
inc
add
sti
mov
mov
jmp
bound
pop
sbb
dec
pushf
loope,pn
ret
xor
ja,pn
push
fs
ljmp
mov
aaa
inc
sbb
add
adc
jp
pushf
inc
jmp
mov
pop
add
inc
jne
rcrl
push
nop
jbe
jg
mov
dec
adc
pop
jge
push
ljmp
cmp
paddw
push
and
inc
jb
cltd
push
lcall
push
shlb
bound
dec
cltd
jne
mov
int
test
mov
cmp
decl
push
out
das
push
aas
or
xlat
dec
add
call
mov
cmc
pusha
cmc
cmpsb
push
inc
or
add
xorl
lcall
out
mov
in
jo
lret
xor
pop
sub
test
shl
gs
and
mov
int
sbb
push
push
mov
lods
cmc
cmpsb
dec
or
sub
dec
std
dec
sub
incl
jl
add
lea
mov
popf
cs
ret
pop
repz
jmp
imul
sbb
jne
jmp
rep
mov
push
pop
clc
test
out
int3
in
jb
repnz
push
aam
das
fdivrs
cmp
jecxz
lds
mov
shll
inc
bts
outsl
dec
inc
pop
insb
pop
mov
les
test
jg
jo,pt
pop
push
je
cmpsl
jl
dec
int3
loopne
icebp
sahf
ds
adc
pmullw
push
and
xchg
call
lcall
cli
add
fs
xchg
rcrl
cmp
mov
lahf
push
in
adc
in
xchg
aaa
loopne
or
scas
inc
in
dec
pusha
scas
sar
inc
negb
mov
adc
insl
mov
and
mov
and
push
popf
jp
in
js
ss
xchg
mov
loopne
into
jb
jbe
ja
fucomip
incl
mov
cmp
mov
pop
ret
scas
xlat
xchg
dec
bnd
jmp
sti
bound
jg
mov
dec
jnp
int
scas
fimull
add
pushl
sub
adc
sub
dec
stos
fdivrl
ljmp
popf
mov
xor
lods
cmpsb
hlt
je
or
pop
sbb
call
mov
dec
cmp
repnz
push
mov
push
popa
iret
push
lods
lcall
sbb
into
fs
lahf
sti
pop
shlb
jg
fnsave
mov
fdivrl
and
icebp
shrl
dec
jecxz,pt
xor
or
push
jle
lahf
jg
adcl
out
mov
inc
and
hlt
fbstp
popa
mov
cmp
mov
cmc
decl
ret
push
dec
loop
and
aas
in
pop
mov
mov
pop
into
xor
movl
imul
mov
xchg
jmp
jg
dec
js
ljmp
std
pushl
std
fnstenv
pop
lret
xor
int3
sahf
cmpsb
subl
aad
cmpsl
nop
xchg
cmp
dec
pop
out
repz
movsl
call
push
and
movsb
cmpsl
push
scas
sbb
mov
inc
inc
dec
sub
aas
or
and
push
inc
mov
into
mov
inc
add
xorb
xchg
fs
mov
out
xor
fwait
js
hlt
dec
jmp
sbb
cmpsb
lcall
lahf
out
adcl
dec
in
out
adc
pop
std
out
sub
mov
popa
pop
ja
inc
fwait
push
aam
aam
call
scas
cmp
xchg
mov
fcmovnu
pop
jmp
fisttps
and
cmpsb
sbb
gs
sub
xor
sub
enter
lcall
mov
or
loopne
ss
sub
jae
lret
cmp
aaa
cli
push
data16
cli
in
int3
ret
ret
mov
jb
push
cmc
rclb
aam
push
add
enter
dec
adc
mov
adc
outsl
dec
jge
fldl2e
push
adc
or
push
pushf
mov
xor
es
jecxz
decl
and
xchg
mov
cmp
jecxz
es
push
xor
fcmovnbe
xchg
fbstp
aas
out
lods
mov
movsl
lods
imul
daa
ds
adc
out
mov
rolb
add
into
cwtl
outsb
fsubs
int
inc
cli
leave
mov
pusha
in
jmp
xor
pop
nop
push
lods
jb
mov
test
sub
dec
mov
jmp
call
pop
mov
outsl
stos
jnp
hlt
loope
test
jmp
xchg
xchg
cltd
test
and
pop
imul
sahf
or
pop
test
in
inc
ret
inc
imul
lock
stc
jo
outsb
push
sub
lea
insb
je
jg
and
stos
mov
addl
inc
cltd
std
xor
inc
fs
imul
dec
orl
stc
es
out
xor
mov
movb
in
xor
sarb
mov
call
ljmp
je
xor
rcrb
sbb
sarb
dec
stos
xchg
jnp
call
lea
push
insl
cmp
sub
mov
decl
std
mov
lock
mov
setns
adc
divb
imul
push
jno
dec
insl
lahf
out
xchg
loope
cmpsl
sar
sbb
inc
ljmp
sub
dec
mov
cmp
push
mov
repz
cld
mov
xchg
fstl
lea
mov
push
push
out
in
das
icebp
push
push
inc
fildl
sbb
pop
jo
fst
push
in
mov
int3
mov
std
fwait
popa
aaa
cli
jmp
sub
addr16
xor
ljmp
out
test
call
cs
lret
es
test
inc
dec
ljmp
jmp
incl
jae
cmc
fcompl
pop
cwtl
xlat
sub
push
scas
aaa
sbb
fbstp
rcr
daa
xrelease
dec
std
adc
adc
test
xor
jle
pop
pop
fldenv
lods
mull
repnz
xchg
mov
out
push
sub
mov
mov
mov
xchg
insl
cmp
call
outsb
xor
add
addl
xchg
xlat
popa
in
xchg
or
clc
xchg
clc
aam
adc
mov
mov
ja
test
cmpsb
ja
ljmp
subl
or
ficompl
icebp
push
fcmovbe
outsl
push
jnp
adc
imull
and
pop
cli
ss
lea
jge
mov
cmp
cmp
fsubs
pandn
pusha
ss
cmp
sub
xchg
jb
xor
adc
cmp
loope
pop
lock
lock
addb
mov
jae
jnp
fwait
out
pop
loopne
add
in
out
adc
ficoms
inc
outsl
xchg
cli
xchg
inc
cmp
cmpsl
cwtl
insb
das
ret
add
pop
out
repnz
in
and
jae
sti
inc
insl
xor
insb
push
cmp
xor
pop
pop
dec
ja
sahf
in
shr
pop
cld
jmp
loopne
push
loope
mov
out
lock
xor
imul
dec
push
das
flds
adc
test
xchg
daa
xchg
jmp
ja
jg
ljmp
fnstsw
subb
jmp
enter
mov
call
cli
jmp
fdivl
mov
dec
call
sub
and
loope
push
dec
dec
mov
push
repz
sub
lds
xor
pop
std
das
js
aam
pushl
das
jge
mov
mov
dec
dec
cmp
mov
mov
aas
mov
les
lcall
jl
decl
mov
pop
push
int3
je
sbb
jne
mov
out
cmp
dec
fwait
pop
push
and
ljmp
pushl
jmp
fmuls
imul
xlat
cli
fistpl
xor
lods
lcall
movsl
rcrl
sbb
cwtl
pop
out
jae
or
ljmp
pop
in
jb
jge
sahf
and
fisttps
fcompl
jo
daa
test
jge
mov
pop
jge
mov
add
cmp
icebp
xchg
hlt
ds
sub
ljmp
mov
pop
cmpsb
xchg
fidivrs
lret
push
adc
mov
ljmp
mov
arpl
decl
clc
sbb
xchg
mov
jbe
sub
and
aad
cmp
bswap
pushf
repnz
cli
addl
and
xchg
push
gs
cmpsb
push
outsb
jle
mov
xchg
jp
inc
or
ljmp
inc
push
mov
popf
outsl
js
pop
jge
jns
les
or
jmp
cmp
ret
mov
je
and
inc
jg
add
ljmp
shll
sbb
push
jg
push
test
sbb
test
hlt
roll
in
js
mov
lahf
cld
mov
cmp
pusha
xor
mov
iret
pop
cwtl
jo
insl
xchg
pop
fdivl
jp
cmp
inc
and
mov
xchg
je
pop
lcall
inc
stos
mov
cmp
clc
sub
and
mov
xchg
xchg
pop
rolb
lret
sahf
jl
cmp
xchg
pop
fwait
adc
jg
mov
sbb
push
inc
xchg
popa
or
and
jl
mov
xor
push
mov
sahf
loopne
test
scas
ljmp
scas
mov
xchg
or
mov
and
aas
xchg
inc
stos
loop
call
movsl
pusha
das
fwait
movsb
nop
insb
jo
or
mov
stos
outsl
cmc
lcall
out
push
mov
sub
mov
push
aad
mov
icebp
in
sti
lock
js
adc
push
cmp
dec
jno
mov
mov
adc
lret
mov
arpl
sbb
dec
mov
add
lods
pushl
jns
push
push
inc
mov
push
iret
jne
loopne
or
push
lret
push
fucomip
lcall
sar
xchg
imul
jg
xor
pop
clc
ljmp
mov
call
mov
mov
mov
mov
dec
lahf
pop
inc
sbb
shl
lret
out
mov
and
adc
call
rol
aad
pop
cmp
jne
jnp
xor
decl
sti
inc
fwait
inc
cmpsl
adc
adc
dec
jne
sti
in
or
insl
clc
inc
lahf
mov
pop
popa
fs
inc
aas
sub
scas
or
data16
rorl
jmp
push
sub
jg
dec
das
xor
push
std
rorb
std
call
jg
test
xchg
pop
hlt
cmp
scas
xor
xor
jg
xor
pop
add
shl
dec
push
rcll
insb
ss
mov
sbbl
hlt
mov
adc
fwait
pop
push
sahf
js
lahf
ljmp
mov
jmp
mov
sub
cs
lcall
decl
shll
mov
mov
dec
stc
nop
mov
fs
leave
push
mov
cld
pushl
test
aaa
sub
mov
pop
xor
fsubp
jmp
fwait
shl
jbe
push
daa
jle
rclb
mov
pop
inc
fmull
add
or
test
les
daa
call
push
test
ret
push
insb
and
jbe
or
adc
and
pop
popl
or
push
decl
dec
out
dec
push
adc
and
jg
lcall
and
les
mov
lahf
inc
xchg
in
add
dec
inc
lods
insl
cmp
mov
push
rcl
jnp
incl
ljmp
test
xor
jnp
test
decl
mov
dec
cmp
adc
pop
lea
ffree
mov
inc
jmp
std
lcall
push
jo
call
mov
scas
ffreep
clc
mov
xchg
cli
ljmp
xor
mov
iret
ss
sub
mov
lret
and
orb
sbb
ss
scas
sbb
popf
fiaddl
aam
lods
jg
into
sub
movsl
or
popf
ret
fcoml
fisubrl
xlat
pop
and
jb
mov
or
add
pushl
xchg
push
ret
stos
cmp
sub
sub
dec
scas
push
add
pop
mov
cli
fwait
cld
mov
pop
xor
dec
or
jl
in
lea
stc
push
inc
test
aaa
pop
shl
inc
cltd
lret
sbb
call
mov
xchg
lahf
jecxz
mov
das
cmc
add
cld
movsl
das
out
test
lods
je
xchg
ds
sub
ljmp
xorl
shl
aam
mov
mov
das
std
lcall
push
loop
jo
pop
cltd
add
mov
js
fs
loop
pop
mov
cmpl
in
outsb
aad
or
imul
lret
in
je
call
cli
sahf
mov
sbb
jmp
pop
dec
aas
sbb
sub
testb
pop
ffree
hlt
add
sub
pushl
or
mov
and
add
nop
ds
mov
pushf
stc
hlt
jnp
mov
or
xor
sbb
xchg
xlat
cmpsb
neg
xor
cli
jmp
movsb
test
mov
sub
out
out
imul
setp
cli
lock
fistpll
mov
xor
jno
out
test
lahf
loope
push
rolb
cmp
pop
lcall
xchg
call
call
mov
mov
sti
ss
stos
decl
in
jno
jge
or
xlat
jmp
fwait
inc
lock
sbb
sahf
adc
adc
or
call
outsl
pop
cmp
loop
lds
cwtl
lea
and
fldt
and
outsl
jecxz
lock
into
mov
xorb
scas
fwait
and
mov
clc
movsl
pushl
inc
iret
fiaddl
sub
add
ja
xchg
cmpsl
movsl
dec
pushl
xchg
jecxz
xlat
push
sahf
cmp
leave
ret
push
in
or
xlat
adc
jbe
incl
andb
xor
push
jp
clc
enter
jg
int
cmp
jmp
mov
scas
lret
lds
dec
lahf
cmp
sbb
mov
es
dec
cmp
ljmp
cli
test
fldenv
cld
in
jb
sbb
ljmp
inc
lcall
xorl
arpl
mov
xchg
jge
add
adc
or
call
mov
inc
push
cmp
inc
add
repnz
mov
arpl
push
inc
in
mov
nop
outsl
fcomps
xor
clc
incl
les
pop
scas
mov
ss
filds
divl
lock
xchg
jg
lock
cmp
leave
lods
sar
adc
pop
mov
aam
push
mov
gs
mov
adc
out
jle
pusha
xor
call
sbb
cmp
shrl
jp
mull
mov
jbe
outsb
dec
call
mov
sub
xchg
mov
mov
xchg
lahf
leave
sub
decl
sti
inc
lods
push
add
sbb
inc
mov
outsl
xchg
scas
jb
sbb
fwait
push
fcmovu
jbe
xchg
mov
call
in
loopne
and
and
daa
mov
lods
inc
lahf
push
outsb
lahf
es
imul
flds
jg
mov
aad
push
mov
scas
xchg
jmp
mov
shrb
decl
jbe
ljmp
push
sbbb
pop
adc
push
cs
or
mov
inc
mov
clc
dec
push
pop
fwait
mul
or
mov
mov
sbb
xchg
flds
std
aaa
cli
incl
ds
push
fcmovu
aam
xchg
int3
xorb
mov
pop
std
decl
xchg
or
jo
mov
aaa
imul
ds
mov
dec
lea
cmp
push
fwait
lods
mov
iret
rclb
stos
lock
mov
mov
cmp
ss
scas
lahf
dec
sub
imul
push
into
arpl
test
mov
lods
scas
or
movsl
aad
lods
stos
mov
jg
xchg
add
xchg
inc
in
dec
jno
adc
insb
imul
ljmp
cmpsl
ret
fidivrs
sub
dec
cmc
push
cmpsb
mov
ljmp
sarl
lahf
mov
jl
shll
test
ret
adc
mov
mov
sub
adcb
sbb
int3
cmpsb
push
fs
dec
inc
jne
cmp
cld
jb
cmp
xchg
mov
pop
scas
pop
int3
pop
and
mov
ss
cmp
jae
xlat
in
adc
iret
dec
fwait
repnz
pushl
outsb
sbb
mov
jmp
push
out
stos
cwtl
mov
test
adc
adc
dec
lcall
pushl
or
stos
insl
stos
xchg
call
inc
sti
dec
js
add
push
mov
sar
jl
fisttpll
adc
or
imul
mov
pop
lcall
icebp
mov
cli
jmp
add
mov
push
mov
shlb
cmp
cs
adc
jecxz
js
les
cld
cmp
pop
dec
mov
pushl
jbe
fisubs
clc
fisttpl
mov
mov
jno
xchg
daa
scas
popa
not
jg
push
jmp
out
out
gs
jae
or
cmpsb
pop
les
adc
decl
cld
lcall
xorb
cmpsl
xor
pop
adc
call
mov
xchg
pop
mov
aad
push
inc
out
icebp
inc
push
sti
dec
xor
xor
incl
nop
or
fs
jle
lods
dec
cwtl
mov
les
cltd
sub
pushl
popa
lahf
das
stos
pusha
aam
hlt
jmp
pop
into
sub
xor
jl
and
cld
sbb
call
add
iret
mov
push
movsb
jg
pop
lods
push
insl
out
sti
and
or
loopne
pop
xchg
icebp
cmp
jo
test
xchg
adc
cs
pop
or
insb
ds
call
xor
xor
pop
movsb
ret
mov
pop
mov
dec
aas
pop
mov
dec
xchg
lods
incl
push
cmpsb
aaa
dec
jbe
ljmp
enter
test
inc
enter
lcall
dec
into
das
pushf
or
pop
mov
pushf
add
cltd
xchg
jno
js
adc
std
jmp
dec
mov
ds
cmp
adc
je
divb
mov
mov
imul
push
cmp
or
push
mov
mov
roll
adc
pop
push
mov
dec
mov
jbe
cmc
fwait
icebp
fimuls
incl
subl
jno
pop
pop
xor
packssdw
repnz
pushl
arpl
lahf
adc
mov
sahf
mov
pop
and
jnp
rclb
mov
mov
enter
pushl
int3
dec
or
test
ja
sbb
lcall
mov
pushl
cmp
mov
sbb
in
imul
sub
in
and
loopne
movb
sub
mov
lahf
sub
add
dec
fimuls
jmp
popf
xchg
mov
xor
xorb
pop
sbb
lcall
cmp
mov
mov
jnp
out
pop
cmp
out
lcall
aaa
push
sti
jge
add
dec
push
add
jge
jp
lret
decl
jmp
or
xchg
call
adc
popa
push
pop
aaa
outsl
cld
pop
inc
dec
xorl
movsl
test
push
stc
pusha
popa
pusha
inc
rcrb
hlt
incl
sub
push
jge
cmpsl
scas
jnp
incl
mov
popa
cld
xchg
dec
ficompl
test
ljmp
mov
sub
pop
pop
les
sbb
jbe
mov
mov
xchg
int3
mov
pop
flds
xor
movl
leave
inc
cs
out
xorb
jns
and
push
out
insl
fnsave
push
pop
int3
ror
inc
dec
mov
stos
lcall
jno
aas
and
jl
mov
mov
in
jp
jns
pop
out
xlat
pusha
sub
push
jno
icebp
mov
rcr
dec
inc
jg
mov
idiv
fnstsw
outsl
mov
jge
xor
enter
jb
inc
in
pop
loopne
pop
stc
sub
cmp
fs
scas
xchg
testb
decl
lock
stos
mov
dec
pop
or
bound
jle
fnstcw
push
and
and
push
in
aas
pop
add
ret
mov
mov
xor
cmpsl
xchg
cs
stc
xchg
into
inc
xor
pop
sub
or
repz
fwait
das
jne
decl
mov
out
repnz
pop
jnp
xchg
std
jg
or
repz
push
cmp
adc
lcall
movsb
sub
xchg
jo
insl
push
adc
adc
fbstp
nop
mov
int
sub
scas
adc
jno
jg
loopne
ljmp
or
nop
test
mov
mov
xchg
rcrl
mov
jle
std
lcall
sbb
dec
push
jb
rcrl
pusha
popa
inc
pop
call
insl
insb
rcr
jg
or
adc
jg
jmp
push
test
push
test
dec
cmp
mov
imul
mov
test
fs
ljmp
jae
jl
mov
sbb
cmp
mov
sbb
ljmp
cmp
out
xor
aad
push
cmpl
sub
cmp
fldl
jge
mov
jbe
push
push
fistpll
xor
int
fcmovu
mov
lcall
cmc
push
pusha
imul
test
sbb
push
mov
sbb
inc
add
push
sbb
test
shlb
ljmp
xchg
mull
push
lds
stos
out
mov
les
jno
jae
mov
fistl
xchg
faddl
loop
enter
or
test
sbb
adc
cmp
outsl
cmc
jo
push
push
mov
or
jno
outsl
jne
popa
mov
std
jg
dec
mov
scas
mov
jno
sbb
pop
pop
ljmp
push
xchg
lcall
dec
stos
ja
add
mov
push
push
or
in
cmp
clc
pop
ret
adcl
leave
out
push
fcomp
gs
decl
in
adc
fcmovnbe
mov
or
pop
mulb
cltd
cmp
adc
out
mull
pushl
cmp
movsb
sub
cmpsl
jbe
lret
pop
clc
push
scas
stc
mov
dec
dec
lods
pushl
sbb
cltd
dec
pop
or
xchg
cwtl
into
cmp
pop
pop
pop
mov
shrl
jns
pop
pinsrw
inc
mov
inc
rorb
decb
inc
hlt
sub
push
push
add
call
rcrb
and
lahf
pop
dec
enter
mov
jns
adc
mov
lcall
jg
pop
pop
loope
insb
cmp
jecxz
std
out
adc
sub
test
decl
decl
add
adc
push
lods
xor
lcall
icebp
andl
ljmp
std
call
mov
ja
dec
pop
inc
test
shr
int3
insb
outsl
mov
dec
pop
call
push
ljmp
es
mov
dec
ljmp
je
or
adc
lcall
dec
xchg
test
in
sbb
xchg
xchg
mov
sysenter
jecxz
icebp
mov
jns
xor
inc
sbb
data16
into
sub
fisubrl
mov
fmull
notl
cmpsb
arpl
jno
mov
fnstcw
test
push
mov
imul
jb
xchg
sahf
ljmp
mov
cmpsb
nop
ss
popa
loopne
mov
or
das
scas
pop
jg
call
stos
or
adc
dec
mov
lret
mov
xchg
jecxz
add
lret
dec
loop
pop
cli
xor
sarb
incb
jnp
inc
notb
pop
gs
dec
dec
pop
sub
mov
dec
sub
sbb
pop
adc
fldcw
loope
call
mov
movsb
call
icebp
cmp
mov
or
popa
adc
std
in
mov
mov
icebp
mov
cmp
mov
stos
call
xchg
lahf
mov
inc
aad
sti
and
in
fs
add
int
hlt
or
or
jl
cli
push
ljmp
pop
out
or
aad
js
sub
orb
push
call
sub
je
adc
mov
pop
cmp
dec
jg
ficompl
loopne
test
imul
test
pop
imul
das
lock
aaa
repnz
push
arpl
mov
and
cs
jge
jg
jecxz
les
testl
jns
setns
sti
add
xchg
fwait
or
call
mov
lea
and
loopne
jns
jns
pop
outsl
push
aam
jp
inc
movl
stos
pop
shrb
call
insl
push
out
xor
or
and
dec
pop
xchg
pushl
jnp
into
mov
cltd
mov
push
ret
popa
cmp
inc
outsb
push
inc
push
fldln2
std
ret
incl
insl
bound
scas
daa
rorb
dec
hlt
dec
jl
or
adc
push
call
cmp
js
cwtl
fs
loopne
sbbb
adc
shl
incl
test
ret
mov
sti
cld
sub
cmpsb
pop
pop
cmp
jmp
xchg
clc
mov
dec
popf
dec
mov
sbb
bound
jp
or
push
test
clc
lcall
outsb
lods
ret
mov
stos
andl
inc
push
pop
jne
call
loop
jns
cmpsl
cs
push
inc
cs
ljmp
insb
dec
push
mov
cmp
imull
mov
adcl
aad
incl
mov
pop
xor
push
inc
test
xchg
mov
push
and
inc
arpl
lods
or
and
decl
testb
jle
gs
daa
shll
bound
clc
or
scas
mov
dec
cmp
iret
ret
jmp
push
decl
mov
repz
jb
les
cwtl
ds
int
hlt
stc
cmp
or
out
mov
and
out
cld
add
sti
inc
lds
push
push
lcall
cltd
or
pop
cmp
or
je
xchg
or
inc
repnz
call
mov
loope
mov
or
dec
leave
lea
push
fisubl
clc
movsl
mov
xor
mov
test
stos
jle
lahf
imul
sub
inc
push
pop
lea
insb
jb
test
push
push
pop
call
test
mov
cmp
mov
add
pop
pop
ds
mov
leave
sbb
mov
std
sbb
pushl
adc
pop
icebp
and
mov
and
addr16
incl
sbbb
xor
test
xchg
jbe
adc
decl
jg,pt
mov
inc
repnz
in
jge
fimuls
sub
cmp
lods
cli
inc
ss
aam
inc
jmp
mov
jp
push
in
nop
inc
xchg
mov
jecxz
call
les
xchg
lods
and
rcrl
push
cmpsl
push
lcall
jg
iret
cmp
push
outsl
cwtl
cmp
pop
pusha
lds
jae
fldcw
sar
mov
fstpl
jbe
xchg
push
fwait
jns
and
mov
sub
je
aad
pushl
dec
mov
mov
pop
dec
je
xor
sar
sti
cmpl
sbb
mov
lahf
inc
scas
stos
mov
dec
cmpsb
push
adc
iret
gs
jns
cwtl
and
das
lds
nop
sahf
std
fistps
inc
in
cld
cmp
mov
enter
je
mov
dec
sub
cld
mov
xchg
adc
cmp
repnz
and
aas
sarb
push
pushf
sub
call
incl
sti
out
popl
sub
jb
sbbb
xor
ror
jl
decl
pushl
jl
not
shll
mov
rcrb
mov
adc
jnp
adc
dec
cmp
cmp
jecxz
insb
mov
je
test
iret
mov
in
fcos
or
in
into
stc
idivl
or
ret
cmc
mov
push
jg
call
adc
add
xlat
mov
movsb
pop
mov
incl
pop
dec
incl
xchg
scas
je
aas
and
int3
in
cltd
jb
mov
dec
lcall
incl
or
cltd
mov
pop
mov
mov
js
xchg
mov
and
push
sub
popf
or
push
popa
adc
fldt
subb
fistl
jns
jmp
rcll
popf
or
adc
or
and
mov
sub
out
cmpsl
jp
mov
pushl
cli
loope
xor
dec
push
ja
and
mov
mov
test
sub
jg
xchg
inc
rorl
push
lret
gs
lods
push
xor
out
lret
sti
xor
call
clc
das
test
mov
add
inc
ret
or
cwtl
scas
ja
lcall
and
jge
mov
dec
push
sbb
pop
inc
and
loope
in
in
xchg
cld
jg
pop
pop
pop
mov
movsl
cmp
adc
pop
clc
pushl
sarb
js
ds
dec
cmp
jns
cmp
loope
call
mov
and
into
push
aas
imul
testl
cmpsl
pop
aam
push
inc
lret
cmc
ljmp
or
sti
call
mov
es
repz
inc
lcall
adc
or
pusha
pop
stc
cmp
ret
cmp
xchg
jp
jle
xor
std
mov
xlat
jl
int3
add
jmp
cmp
jl
dec
shlb
jp
xchg
add
adc
jo
ljmp
rol
cmp
mov
push
int3
xor
and
mov
inc
jg
testl
jle
out
jno
mov
mov
or
mov
aam
pop
and
jbe
mov
push
repnz
into
xchg
aad
lcall
sti
mulb
shr
push
imul
add
out
xchg
jge
sub
adc
decl
mov
mov
dec
inc
mov
cmp
ljmp
fucomip
incl
fidivrs
cmp
test
push
nop
xchg
icebp
sub
jge
je
pushl
add
imul
sub
mov
sub
push
out
dec
mov
loope
decl
fxch
outsb
mov
mov
scas
loope
out
bswap
sub
sahf
aas
mov
jo
ja
add
inc
flds
nop
inc
dec
rcrb
jnp
mov
ret
call
cmpsb
and
iret
xchg
cmpsl
pop
add
ret
pushl
or
push
jae
imul
imul
dec
incl
cli
xchg
loope
and
jp
sub
cli
mov
pushf
mov
add
inc
dec
stc
jg
lcall
jmp
mov
rcrb
addr16
movsl
cmp
cmc
fisttps
hlt
cmp
jno
jle
pop
pushf
lods
ljmp
rolb
add
movsb
mov
add
sub
adc
inc
dec
jns
cltd
scas
inc
mov
jno
lcall
cmp
adc
setge
mov
sub
or
jmp
lds
ja
jge
jb
adc
add
push
repz
jns
jmp
add
ljmp
mov
in
in
je
inc
sbb
sbb
out
out
call
icebp
or
imul
mov
stos
jecxz
mov
in
das
mov
xchg
ds
cli
add
adc
adc
inc
xor
call
scas
mov
mov
jae
sti
insl
dec
jmp
cmp
jle
mov
fmull
sbb
lock
pop
cmp
testb
je
out
int
push
adc
decl
icebp
shr
mov
aas
inc
and
cmpsl
das
dec
add
inc
sub
sbb
mov
adc
jecxz
jp
loopne
decl
repnz
cli
popa
int
dec
lock
mov
lds
xor
pop
cs
sbbl
mov
push
xchg
in
pop
aaa
les
add
movsb
inc
add
in
mov
inc
push
xchg
lret
cmpsl
in
movsb
gs
dec
lods
daa
or
xchg
cmp
add
call
cmp
lcall
dec
adc
fldl2t
mov
call
mov
and
imul
jmp
xor
cmp
push
shll
cltd
leave
decl
mov
jg
xchg
jae
pop
mov
add
decl
fdivr
mov
orb
mov
jg
pusha
pop
xor
add
mov
pop
sub
ljmp
fcmove
adc
pop
push
test
cmc
repz
sbb
ja
lcall
movsl
mov
adc
mov
mov
sub
jmp
cmp
mov
je
push
sbb
popf
and
cmp
mov
jns
dec
jnp
in
mov
hlt
mov
jle
aaa
mull
jg
repz
and
inc
adc
orl
jne
fdivrp
add
ja
incl
mov
leave
loop
mov
sub
mov
clc
fucomip
call
pop
inc
icebp
shll
xor
mov
pushl
call
mov
jnp
pop
xchg
sahf
cltd
mov
pushl
fisubrl
mov
jg
fcomip
pop
lods
pop
mov
xor
or
dec
push
lea
outsb
into
mov
cmp
dec
insl
lcall
dec
xchg
xor
ljmp
leave
cld
dec
mov
lods
cmp
dec
xchg
xor
sar
push
adc
mov
mov
mov
mov
addl
lret
jle
push
sarb
in
fsubrs
mov
add
or
sbb
and
inc
ret
jne
fnstsw
jg
and
andl
cmp
aad
leave
repz
mov
cld
call
fs
mov
inc
lods
fwait
mov
out
jns
push
jmp
loopne
cmc
or
mov
outsl
call
jg
ljmp
mov
sbb
mov
rorl
call
adc
push
data16
dec
mov
add
mov
orb
sti
dec
rcll
xchg
xchg
jmp
icebp
xor
stos
mov
cwtl
mov
jne
push
jge
and
ljmp
pushl
scas
jno
sbb
cmp
mov
jp
shll
pop
lcall
xor
cld
nop
push
je
xchg
pop
cmp
lods
inc
clc
lret
xchg
xor
xor
pushl
fsubrs
mov
xor
lret
xchg
mov
sub
lds
out
mov
jp
xor
ret
in
jnp
mov
in
lcall
loop
stos
in
dec
popf
sbb
test
clc
cmp
in
stc
scas
fs
inc
in
fsubrs
clc
push
imul
jbe
decb
and
jg
jge
sbb
dec
mov
or
push
jg
dec
and
pop
test
push
or
cmp
cmp
xchg
jo
xchg
sbb
pop
mov
scas
stc
add
jg
hlt
adc
mov
xchg
sub
cmpb
clc
call
aad
js
or
movsb
mov
adc
jne
sbb
int
sti
xor
jge
incl
pop
xlat
or
mov
jg
add
in
jg
pushl
pop
mov
sub
cmp
out
iret
ficoms
xchg
out
cwtl
int
decl
lcall
sahf
inc
icebp
testl
push
ljmp
pushf
sub
stos
jp
and
mov
mov
adc
ljmp
xchg
popa
ljmp
sti
arpl
ljmp
adc
sub
sub
add
cmp
xchg
pop
mov
cmp
dec
mov
cmp
jnp
or
mov
pop
iret
push
mov
pushl
lahf
mov
adc
ds
mov
ljmp
pop
mov
dec
mov
xchg
inc
rcll
cwtl
sub
xchg
jg
pushl
ljmp
mov
hlt
pop
mov
pop
or
repz
addr16
cmp
adc
mov
int3
sarb
sbb
pop
ret
sti
mov
mov
dec
lods
incl
cmp
mov
mov
dec
pop
sarl
dec
lods
jp
inc
adc
push
jmp
xchg
adc
xor
flds
scas
add
call
iret
mov
sbb
in
ficomps
sub
iret
push
inc
fildl
cld
push
std
jp
pop
xchg
fcoms
lds
jl
mov
and
adc
xchg
popa
mov
push
outsl
push
push
mov
pop
insb
movsl
out
les
inc
les
sub
clc
jmp
mov
sub
push
jmp
mov
std
cli
inc
jmp
mov
mov
fcmovnu
inc
stos
jbe
or
add
or
dec
lahf
pop
mov
repnz
loopne
push
lock
ret
scas
div
fwait
xchg
jmp
jmp
jmp
out
shlb
mov
das
mov
xor
aad
pushl
jge
jge
test
or
dec
jne
xorb
push
mov
fiadds
or
ljmp
pop
cltd
ljmp
xchg
fsubl
aaa
popl
pop
decl
mov
push
pop
pop
mov
cmp
add
dec
out
dec
cwtl
mov
lods
hlt
dec
jmp
pushf
repz
leave
aad
push
cmpsb
cmp
icebp
enter
movsl
pop
or
inc
mov
cwtl
inc
loopne
push
pop
mov
cmp
nop
mov
mov
xchg
stc
sbb
push
jmp
mull
jle
ds
call
test
cmpsb
mov
and
lds
xchg
inc
movsl
mov
mov
fs
int
pop
decl
rcrb
out
lea
leave
test
lea
xchg
pop
sbb
outsl
hlt
jg
mov
or
xchg
sbb
mov
pushl
cli
xor
push
aad
jp
sbb
xchg
in
pop
test
xor
mov
jmp
into
xchg
mov
adc
subb
fnsave
ja
scas
cmpsb
xchg
inc
adc
mov
aas
inc
and
roll
pusha
push
or
dec
incl
pushl
jb
mov
fstpl
pop
stos
cmp
lret
je
cmp
pusha
jmp
mov
out
fiadds
icebp
jg
sub
addb
andb
inc
frstor
out
lock
out
jle
stos
movsb
or
sbb
sub
jg
test
mov
das
daa
mov
add
in
xchg
mov
jb
sti
inc
fidivs
testl
faddp
decb
cli
mov
mov
lea
nop
lahf
jbe
jne
subb
aam
movsl
outsw
sub
and
mov
mov
or
gs
inc
inc
shlb
xchg
and
pop
and
rorb
or
inc
push
imul
jns
mov
je
xor
pop
push
mov
sbb
fwait
push
jno
loop
cmpsb
sbb
shll
and
jg
fidivl
jmp
xlat
int3
sbb
stos
imul
sbb
aad
das
add
jg
inc
cmp
ljmp
lods
test
clc
clc
aad
aas
lock
pop
cld
cmp
stc
int3
decl
jmp
xchg
inc
cmp
mov
dec
inc
mov
stc
push
inc
xor
mov
pushl
push
mov
push
or
mov
cmp
into
push
xchg
xor
adc
aaa
fiadds
cli
add
fdivl
xor
fisttpl
pop
ljmp
data16
sbb
add
stos
in
popf
xchg
call
dec
dec
dec
movsb
jo
jne
push
incl
test
call
out
in
cmpsl
popl
imulb
xchg
inc
cmp
ficompl
shrl
decl
cltd
aad
scas
or
xor
insl
push
jle
jnp
dec
mov
ljmp
arpl
es
test
mov
cmpsb
inc
aad
shrb
adcl
addr16
clc
mov
dec
shrb
je
xchg
mov
inc
in
incl
cld
std
mov
pop
and
push
sub
stc
std
adc
sbb
dec
cmpsl
movsb
adcb
call
test
lahf
add
outsl
pop
mov
xor
jne
sarl
push
xchg
incl
sbb
test
lahf
inc
xchg
inc
arpl
xor
iret
in
insl
fwait
lahf
pop
sub
push
mov
mov
shl
fsubrs
sub
in
ficomps
inc
sti
adcb
lret
mov
clc
mov
adc
cwtl
movsl
rorl
mov
jb
mov
popf
out
add
mov
xor
adc
pushl
arpl
mov
cltd
mov
in
fs
call
aam
in
lret
adc
mov
movsb
dec
push
mov
testb
aaa
dec
out
test
ljmp
dec
pop
inc
inc
jb
ret
jns
and
mov
lods
incl
cld
stos
push
dec
push
call
push
loopne
shl
lret
and
adc
push
and
fldenv
jle
adc
cld
push
mov
xor
xchg
out
pop
or
or
pushl
test
gs
out
jb
mov
fnstcw
sub
decl
bnd
xchg
loopne
and
cmp
mov
rcl
orl
ljmp
mov
int3
lock
cmpsb
loope
push
cwtl
popa
subl
outsl
push
lret
or
push
scas
inc
outsl
icebp
decl
inc
sti
xor
mov
scas
aas
sub
mov
and
dec
xchg
dec
fnstenv
fcomps
roll
and
ljmp
ret
mov
push
mov
sub
aad
scas
lahf
mov
imul
repz
xor
sbb
incl
lock
popa
popa
dec
les
mov
mov
xchg
clc
decl
popa
fistps
xchg
lret
in
ja
js
mov
bnd
jg
loop
stos
std
xlat
jnp
popa
int
mov
cmpsb
test
movsl
insb
mov
in
call
push
daa
call
arpl
or
jo
adc
icebp
dec
pushl
test
mov
fists
xchg
ficompl
ljmp
xchg
xchg
pop
push
cmp
jmp
fnsave
add
in
inc
xor
cmc
jnp
mov
or
js
dec
dec
roll
add
ss
or
stos
add
sub
shll
sub
decl
mov
adc
rol
and
pop
pop
jecxz
xchg
cmp
mov
pop
mov
jge
or
sahf
cwtl
call
cmp
or
inc
push
xchg
mov
fcomps
sub
idivl
and
loope
fiaddl
jl
lock
loop
sub
jg
sub
in
stos
sbbb
mov
or
pushf
cltd
fidivrs
fidivs
mov
or
cli
call
push
insl
lahf
aam
bound
sbb
aam
out
mov
or
aaa
mov
jb
scas
fucompp
nop
and
sti
lods
xchg
cli
test
nop
div
es
outsb
pop
cwtl
mov
pop
cmpsl
cli
shrl
push
inc
jg
or
loop
or
ljmp
sbb
dec
jecxz
leave
and
test
pop
push
xchg
xor
lahf
cmp
sub
decl
insb
pusha
sub
inc
dec
sbb
push
add
jmp
and
aas
pop
sub
mov
push
sub
sbb
cmp
call
mov
lret
push
xorb
out
out
repz
in
subl
ret
push
std
shlb
pop
js
push
pop
sub
inc
ret
add
push
push
test
jbe
mov
mov
adc
jnp
hlt
inc
and
xchg
popa
idiv
outsl
std
pop
ret
adc
cmp
inc
outsb
out
push
iret
xor
outsb
dec
sub
xchg
aaa
decb
jmp
dec
or
mov
jbe
jg,pt
inc
mov
mov
push
and
dec
mov
flds
fucomip
lcall
aad
add
mov
mov
jmp
cmp
xor
mov
cmc
leave
mov
loope
das
cmpsb
incl
add
xor
mov
aaa
inc
xor
mov
add
mov
in
and
and
pop
mov
dec
lock
cltd
gs
movl
mov
out
nop
pop
add
shr
jbe
popa
mov
pop
cmp
mov
adc
jns
cmp
fwait
les
xor
mov
cli
fcomip
sbb
add
jbe
cs
mov
inc
pushl
repnz
mov
mov
xchg
jno
mov
into
cmpl
pop
jg
idiv
inc
dec
movsl
rorb
cmp
fincstp
jl
fcmovne
sub
lret
pusha
mov
pushl
and
inc
fstps
in
fcmove
std
inc
int3
mov
ljmp
aad
mov
cmc
das
in
cld
pop
push
mov
aaa
mov
cmpb
jle
inc
adc
mov
push
dec
leave
sbb
add
into
mov
cli
sub
mov
pmulhuw
pop
idiv
decl
loopne
sub
xor
dec
ficompl
add
aam
push
mov
js
cmp
icebp
subb
in
sbb
js
icebp
int
xor
clts
ja
and
test
cld
ljmp
addr16
ss
aas
into
enter
push
xor
push
scas
repnz
ljmp
repz
lods
fstpt
cmp
cltd
jno
shrl
mov
insb
stos
xor
xor
subb
ror
add
cld
pushl
rorl
in
cmp
mov
clc
or
iret
les
leave
ljmp
push
pop
adc
pusha
jg
jl
inc
jns
dec
jmp
fbstp
cld
fnstenv
fidivrl
inc
scas
enter
xor
xor
dec
and
fcmove
mov
sbb
mov
pop
and
or
jge
adc
jnp
ds
adc
push
les
jnp
mov
data16
out
jecxz
out
movsb
shr
decl
pushl
aam
and
mov
mov
invd
mov
jb
ljmp
jne
xchg
dec
leave
ja
popf
pop
inc
out
movsb
movsl
ret
add
negl
pop
mov
in
cmp
xchg
push
arpl
call
jle
push
mov
enter
ret
cmp
imul
ficoms
lock
sub
jg
fmull
dec
jmp
mov
cmp
and
scas
movntps
jno
mov
out
loop
lock
sarb
xor
test
or
mov
push
add
mov
in
lds
scas
aaa
divl
jne
add
ret
fcompl
xchg
in
jb
pop
cs
imulb
and
pop
jecxz
add
cld
push
add
xchg
lret
jge
pop
jbe
mov
and
add
add
dec
fimuls
or
adc
fistps
mov
push
sbb
lcall
mov
ljmp
cmpsl
je
inc
paddd
cmp
lcall
mov
mov
das
std
incl
cltd
imul
xorl
mull
movsb
shlb
cmpsb
test
xor
cli
call
cmp
shrb
lods
es
mov
jecxz
fstpt
fstl
retw
and
xchg
les
sub
and
pop
lock
mov
sbb
lret
jae
popf
shlb
mov
xlat
mov
adc
sahf
decl
imul
mov
jae
stos
outsb
pop
lock
movsl
jb
sbb
xchg
and
adc
jno
xorl
cmp
movsl
call
or
loopne
loope
test
rcll
sub
pop
jno
mov
idivl
pushl
pop
xchg
xlat
inc
fadd
cltd
pop
inc
fnstsw
lcall
jnp
aas
leave
cmpb
orl
xor
cmp
mov
call
push
imul
sbb
aad
inc
dec
fs
std
and
pop
loopne
mov
insl
out
daa
jmp
add
or
test
out
mov
mov
pop
and
comiss
jmp
sarl
dec
js
sarl
daa
loop
sar
add
dec
adc
fmull
in
push
scas
adc
jg
test
in
sbbb
pop
in
sub
ljmp
xchg
push
push
fdivrl
push
add
add
xchg
dec
jmp
call
mov
into
outsb
add
cmp
jne
scas
jp
daa
or
mov
cwtl
scas
push
into
jl
mov
lock
cmpsb
lret
in
ljmp
jg
es
out
inc
fists
push
pop
insb
out
outsb
lret
mov
adc
call
pushf
enter
lret
out
mov
push
jle
nop
roll
and
nop
cmp
in
mov
ficomps
mov
add
inc
inc
jne
mov
cld
inc
jo
les
xor
inc
and
sub
decb
leave
sti
mov
lcall
je
lock
jno
mov
fs
gs
cli
mov
jne
leave
hlt
pushl
stos
testl
addr16
flds
sahf
inc
scas
je
add
lods
nop
in
pop
repnz
mov
jge
dec
cmc
cmp
push
and
sub
fdivrs
xchg
std
lcall
out
fisttpl
sub
xchg
pop
inc
outsb
scas
or
sbb
mov
and
inc
mov
mov
int3
mov
push
call
ljmp
fwait
jb
pop
mov
subb
les
and
dec
fldl
mov
xor
aam
push
sti
pop
dec
mov
jg
cmpsb
jl
es
mov
into
pop
add
jp
aad
sub
jns
jmp
test
es
ret
in
or
mov
xchg
sub
jecxz
jg
sbb
or
fcompl
xchg
xor
ss
inc
pop
clc
jne
jmp
pushl
ljmp
jnp
pop
and
repz
pop
std
das
lock
jl
inc
shl
test
cmp
int3
inc
pop
test
outsl
mov
xchg
test
cld
sti
mov
mov
pushl
test
ret
push
jne
jo
stc
in
arpl
jo
pop
jle
lods
in
xor
sbbl
cmovbe
jmp
xchg
inc
addb
sub
mov
or
out
adc
dec
xchg
inc
mov
push
decl
jo
std
lret
stc
cmp
xchg
pop
mov
incl
testb
lret
or
cmp
insb
adc
jno
call
loopne
incl
xchg
xor
mov
sub
mov
cmp
incl
fmuls
std
mov
xor
xchg
insl
add
push
cmp
shll
cmp
ljmp
std
jno
mov
movl
inc
fisubl
mov
aaa
mov
pop
mov
cmp
jge
call
lret
sbb
push
jo
jnp
leave
adc
or
ljmp
jmp
mov
incl
pop
dec
daa
and
jp
andl
xor
jmp
xchg
mov
sbb
inc
bound
or
mov
hlt
lcall
push
jecxz
or
jo
aam
shlb
les
cmpb
cli
stc
mov
bound
xchg
mov
sarl
inc
mov
scas
sti
jmp
mov
inc
mov
inc
outsl
mov
jo
mov
cld
dec
ljmp
pushl
pop
in
aas
and
jb
lods
dec
mov
mov
int3
sti
and
pop
mov
out
xlat
dec
adc
mov
jb
xor
addb
lea
sbb
push
jmp
sahf
pop
out
cmp
pushf
jno
push
stos
out
cmp
ud0
adc
and
push
jo
sti
sub
inc
add
dec
cs
call
xor
clc
sbb
inc
rcll
jae
mov
mov
jne
es
mov
cmp
pushl
cmp
js
call
mov
loopne
decl
ja
sahf
inc
in
push
and
sub
loope
test
pop
cmc
mov
stos
aad
cmp
jae
rcll
mov
fisubs
jmp
sbb
stos
mov
iret
adc
sub
mov
mov
js
sbb
mov
fbstp
jns
popa
mov
adc
lret
fsubs
mov
mov
cmpsb
test
negb
xchg
jno
push
addr16
jp
fcoms
and
sub
jl
adc
dec
call
and
mov
mov
enter
inc
mov
fidivl
je
and
add
xchg
std
inc
and
pop
pushl
xchg
js
lcall
pusha
frstor
in
jg
lret
int
push
push
mov
xchg
pushf
js
push
nop
mov
mov
dec
add
add
incl
or
gs
or
jmp
inc
aad
jns
cmp
sub
xchg
sti
cmp
loopne
cli
imul
loope
xlat
mov
jg
mov
xchg
lret
lahf
enter
xchg
and
lock
test
decb
loopne
scas
pushl
mov
aaa
sbb
ss
xchg
jns
jg
lock
cmc
sub
jnp
pop
lods
or
dec
sbb
or
mov
xor
pop
and
lcall
cld
ljmp
sbb
pushf
into
popa
push
lods
xchg
adc
sahf
pop
adc
rcll
mov
fnstsw
jmp
cmp
xlat
pop
fdivrl
pop
xchg
mov
stos
inc
xchg
mov
shlb
dec
pushl
xchg
inc
les
mov
inc
scas
cld
movsl
leave
mov
xchg
aas
push
andb
movsl
lods
iret
je
outsb
outsl
inc
out
enter
sbb
or
pop
lcall
pop
cmpb
jp
add
das
pushf
add
sarl
inc
jno
xchg
sub
adc
movsb
cmp
xlat
xor
dec
mov
mov
and
or
pusha
or
lock
dec
xchg
push
dec
ljmp
dec
loop
aad
add
or
xor
cmpsb
enter
clc
cwtl
sbb
into
std
mov
clc
mov
cmp
fwait
cmp
mov
repz
pushl
add
shl
shrl
icebp
add
sbb
add
shll
bound
call
cmpsb
pop
nop
sbb
mov
in
ja
add
push
pushl
jp
xchg
xor
sub
data16
pushf
int
decl
pop
jmp
mov
in
enter
ret
cmpsl
arpl
cs
std
xchg
jmp
xlat
aad
sahf
sub
jecxz
dec
xor
pushl
cmp
mov
test
cmp
bound
jge
aas
pop
stos
aaa
lock
std
incl
mov
loopne
js
cmp
nop
cmpsb
int
cs
incl
inc
mov
inc
jnp
test
in
inc
xchg
adc
enter
lods
loope
pop
cld
mov
sbb
sarl
push
pop
adc
mov
mov
cmp
sbbl
mov
mov
mov
jl
add
add
jmp
nop
add
mov
pushl
jmp
lods
xchg
mov
enter
pop
mov
push
mov
push
fnstsw
or
mov
mov
and
shlb
jo
dec
pushf
ljmp
push
add
push
imul
sbb
ficoml
mov
inc
mov
movsl
mov
jmp
mov
dec
mov
fstps
adc
push
mov
fildl
aaa
pushf
in
sbb
sti
mov
cmp
inc
out
cmc
decl
pop
loop
das
or
mov
mov
adc
sbb
outsl
mov
inc
jnp
mov
psubsb
enter
mov
xchg
jmp
dec
jne
call
add
mov
lahf
outsb
lret
mov
loope
daa
in
jecxz
pushl
mov
and
leave
add
mov
mov
push
repz
jg
out
or
mov
and
jg
mov
mov
out
call
mov
push
in
push
jge
aas
or
jb
cs
and
lods
lods
xor
or
push
rclb
fucomip
pop
clc
jns
icebp
das
push
mov
push
add
rcrb
ljmp
push
pop
cwtl
xchg
stc
sahf
cmc
ja
int3
jnp
cwtl
xchg
ja
adc
inc
mov
dec
flds
ficompl
call
adc
lds
rol
mov
jns
jnp
push
xchg
in
dec
or
push
aad
out
jp
jg
xchg
sbb
push
push
mov
push
out
push
inc
pop
jg
loop
add
or
cs
enter
sbb
mov
sbb
ljmp
sub
mov
push
xchg
mov
and
shlb
mov
ret
sbb
add
aam
dec
shlb
sbb
jns
jg
jg
inc
or
mov
pop
push
inc
sbb
iret
mov
jg
push
std
sbb
mov
cmp
mov
movsl
sar
fildll
add
xchg
mov
xor
xor
ret
and
sub
std
jmp
jl
in
mov
cmp
ud0
jg
jmp
push
in
xor
jae
adc
sub
cmc
xchg
inc
pop
jno
hlt
xchg
adc
push
or
jp
cmpsb
leave
das
dec
rcrl
and
xor
jmp
mov
iret
cltd
rcrb
mov
pop
and
in
adcl
incl
mov
daa
add
andb
ret
and
out
push
lcall
rorb
cmp
or
jge
stc
or
push
clc
ret
push
mov
inc
jae
cmp
mov
outsl
or
xchg
pop
push
inc
shlb
mov
or
push
lahf
push
cmp
pushf
push
insl
les
scas
jae
push
xchg
mov
scas
cmpsl
cltd
aaa
call
jmp
pop
and
cmc
xor
mov
call
ficoml
mov
mov
pop
pop
les
xchg
out
jns
sub
jg
out
lods
cmc
pop
or
dec
outsb
pusha
sbb
sub
aaa
repz
addr16
xchg
sbb
call
out
push
sbb
scas
test
repz
or
push
jp
hlt
mov
stos
cs
int3
icebp
pop
clc
push
push
inc
imulb
dec
ret
push
insb
xchg
mov
sbb
pushl
cs
gs
push
or
dec
pushf
scas
dec
dec
sbb
add
jg
adc
xchg
les
sub
xor
lock
mov
fisubl
cmp
adc
push
mov
push
dec
fs
popf
stc
pop
mov
xchg
lcall
sti
dec
or
sbb
sub
movsl
mov
call
imul
cmp
iret
das
dec
mov
out
fstps
in
imul
fwait
sub
jl
jl
and
pushl
inc
shl
mov
and
xor
fnsave
mov
call
mov
pop
or
sbb
cld
xchg
popf
leave
cli
roll
ljmp
call
inc
or
or
mov
pop
pop
push
lods
scas
adc
add
ljmp
or
cltd
arpl
insl
inc
data16
shrb
jmp
and
xor
cs
rolb
outsl
out
adc
rcl
sub
mov
ljmp
mov
add
mov
sbb
addb
loopne
imul
movsl
lret
cli
add
add
subb
pop
jne
outsb
xchg
jge,pt
lahf
sarb
cmp
mov
js
jg
cmp
and
push
js
popf
add
mov
into
movsl
ds
push
cwtl
push
fidivl
lahf
push
sbb
int3
call
sub
mov
cwtl
push
orb
cmpsb
mov
mov
inc
es
cmp
cltd
push
and
xchg
ss
std
fcoms
popf
inc
dec
adc
shll
das
lods
and
inc
es
incl
pop
std
jg
sbb
sub
mov
cwtl
and
jecxz
sub
mov
pop
int3
outsl
lcall
xor
jmp
mov
dec
cmp
in
mov
and
or
pusha
jge
push
aam
sbb
call
mov
mov
cld
dec
jge
mov
incb
hlt
dec
adc
shrl
das
push
sbb
sbbl
pusha
lret
scas
in
add
jo
pop
jp
fisubs
out
mov
std
gs
lods
loope
adc
cmpsb
fnstcw
dec
and
jle
pop
hlt
push
insb
imul
leave
xchg
xor
and
ljmp
fadd
push
and
dec
xchg
mov
int
nop
add
rcr
out
icebp
push
jae
xchg
nop
push
pop
push
fbstp
adc
aad
imul
icebp
fisubrs
inc
jl
outsl
push
lods
mov
sahf
fldt
cmovnp
jl
jecxz
scas
shr
jo
popf
out
lcall
mov
sbbb
insl
test
aad
pop
imul
call
cli
cmp
sbb
mov
insl
pop
or
out
mov
fstps
inc
outsl
std
incl
mov
mov
in
insb
test
roll
mov
fistpll
pop
dec
imul
out
mov
outsl
lock
leave
mov
sbbl
dec
ds
stos
pop
mov
add
sbb
in
ret
in
adc
or
das
mov
lcall
mov
mov
jp
mov
ljmp
adc
dec
xlat
mov
jb
jmp
pop
add
mov
std
clc
les
mov
clc
inc
push
push
jbe
cmpsb
sahf
jge
shl
mov
pop
scas
sub
out
pop
push
or
outsl
icebp
mov
sbb
add
pop
pop
ret
std
cli
and
arpl
test
xor
addb
lea
aaa
cmp
mov
inc
out
out
mov
ror
adcb
clc
mov
push
cmp
jno
xor
mov
fwait
xchg
mov
push
pop
push
pushl
pop
sarl
xchg
mov
movb
jne
sub
or
aad
dec
xlat
ficoms
cmp
pusha
mov
das
repz
cmc
dec
adc
lds
je
aaa
clc
decl
ss
pop
lret
sub
out
mov
cs
hlt
ret
cmp
cmp
int
xchg
daa
inc
inc
pop
dec
sbb
stos
negb
fdivrp
jb
js
hlt
lcall
fistpll
mull
mov
cmp
icebp
or
cld
or
mov
dec
or
ljmp
jmp
jg
jbe
push
das
add
shl
lahf
push
sub
jae
popf
iret
int
and
imul
aas
popa
sub
inc
outsb
inc
stc
daa
xchg
fidivl
aad
test
mov
xor
or
arpl
out
jno
nop
mov
inc
xor
test
decl
jle
xor
xor
jg
pop
imul
ret
call
test
pushl
inc
sub
addr16
and
add
ljmp
call
lock
addr16
repnz
out
push
push
sbb
mov
call
cmpsl
lods
out
push
lods
repz
lcall
lock
push
or
cmp
sbb
xor
call
mov
xchg
jge
scas
adc
lret
arpl
jle
imul
jmp
fldt
jge
mov
hlt
inc
pop
pop
mov
je
lea
cmp
jbe
aas
fsubl
sbb
push
push
push
xchg
mov
ljmp
add
add
xchg
loopne
arpl
andl
addb
repz
xor
cltd
lods
add
xor
std
pop
pop
idiv
mov
adc
adc
aas
mov
fcompl
ljmp
or
dec
jge
popf
cmc
push
dec
cltd
fadds
cmp
jg
push
out
ljmp
push
add
xchg
inc
call
sbb
adc
in
or
sahf
dec
aam
mov
jb
xor
push
push
fmulp
add
in
cmp
std
push
mov
pop
bound
scas
mov
pop
pop
jbe
popa
cld
jbe
icebp
jg
sub
jl
imul
add
sar
decl
sbb
mov
and
jb
mov
sub
mov
adc
sbb
mov
jb
or
push
orl
or
dec
push
out
jae
addr16
fnstsw
push
push
jl
rcrl
jmp
cmp
orb
ret
jb
mov
std
inc
inc
repz
int3
pop
in
xchg
clc
mov
pushf
sub
in
fdivp
mov
das
jno
pop
ss
xchg
lret
lods
lea
mov
dec
sub
lcall
jl
pop
dec
das
fwait
pop
xor
ljmp
mov
xchg
and
push
inc
add
sarb
xor
jb
mov
adc
jno
jg
inc
pop
repz
stos
aad
push
or
mov
test
or
aas
xchg
mov
adc
push
nop
adc
scas
lret
inc
in
or
jmp
movsb
adc
call
cmp
loope
jno
je
mov
and
sub
push
mov
and
insl
xor
pop
out
pop
cmp
movsb
inc
cmp
mov
dec
in
cmp
popf
icebp
popf
fs
mov
test
movsl
shrl
ljmp
movsl
mov
inc
outsb
add
cmp
jae
and
xchg
sti
push
out
lcall
sub
jl
add
and
xchg
addr16
xchg
not
jg
xor
pop
loopne
cmp
in
inc
inc
test
dec
xchg
fiadds
push
loope
sub
das
icebp
incl
sbb
leave
dec
test
xor
mov
add
test
jp
lds
out
mov
ds
xchg
jb
pop
inc
and
jns
por
pusha
push
xchg
lcall
out
push
movsl
in
andl
adc
sbb
mov
push
aam
lahf
lods
jne
lcall
mov
aad
incl
mov
insb
mov
jbe
push
dec
fs
inc
loop
mov
cmc
sub
call
push
mov
push
in
test
push
xor
add
out
jo
push
mov
sbb
das
inc
lock
jne
sbb
push
movsl
and
and
and
fisttpl
or
or
sub
pushl
cwtl
xchg
mov
push
cmp
in
cmp
mov
hlt
nop
nop
push
mov
sarl
mov
mull
lods
sarl
and
scas
lahf
pop
scas
testl
push
gs
adc
mov
sub
jno
mov
xor
popa
cmp
fwait
test
loopne
jl
jae
mov
pop
fwait
pusha
mov
push
or
inc
jns
mov
sbb
fcomps
sahf
jle
jl
loop
call
ja
ds
lds
push
inc
mov
enter
sti
ljmp
jp
cmc
sbb
pop
add
xchg
pop
mov
aaa
cli
decl
mul
push
outsb
test
testb
mov
push
sbb
jns
fwait
mov
xchg
add
mov
test
fcompl
cwtl
pushf
xchg
cmp
pop
sarl
adc
imul
inc
fdivrl
sbb
scas
mov
cltd
ss
mov
test
in
lret
std
sbb
outsl
jg
jmp
mov
fwait
cwtl
dec
inc
and
rolb
push
call
mov
pop
rcrb
popa
and
xlat
inc
inc
cli
xor
mov
popa
repnz
add
clc
jp
sbb
sarl
lret
push
mov
xchg
fldln2
dec
or
pop
lods
xlat
mov
cltd
dec
xchg
fcmovbe
or
push
addr16
cmp
in
popa
fdivrp
pop
cli
js
bound
std
cmp
adc
cli
popa
out
enter
outsl
dec
dec
out
subb
add
inc
ja
xchg
aam
ja
push
xchg
mov
inc
and
fucomip
cmp
out
mov
mov
cmc
lcall
data16
mov
pop
pushf
pop
leave
aad
stc
add
lret
or
jl
aaa
cli
das
mov
adc
idiv
push
mov
adc
and
cmp
call
xor
call
fs
xchg
dec
or
insl
and
fistpll
jmp
insl
test
outsb
mov
jae
xlat
loop
fbld
dec
imul
ja
cmp
add
cld
out
jg
fstps
add
out
lahf
jp
je
stos
ljmp
jae
push
push
std
ficoml
inc
jmp
rclb
pop
sbb
sbb
jg
in
push
ljmp
add
xchg
mov
out
mov
mov
mov
cmc
push
jns
add
push
incl
es
pushf
out
pop
pop
hlt
fbld
sub
insb
cmpl
sub
das
xchg
sub
out
cmc
incl
adc
jmp
icebp
popa
inc
xor
aas
mov
sub
mov
fstpt
scas
dec
push
lods
or
leave
pop
js
addr16
ret
test
push
mov
inc
jmp
testl
es
lods
inc
call
call
pushf
adc
movb
dec
js
mov
outsl
test
sti
inc
fcoml
cmp
lahf
xor
push
jmp
xor
sub
idiv
test
in
and
test
xlat
int3
mov
je
cmpl
lea
or
xchg
adc
mov
lea
ljmp
hlt
push
mov
pusha
leave
adc
in
xchg
fucomip
sbb
aam
mov
inc
inc
cmp
pop
scas
and
pop
sti
test
aas
adc
sbb
mov
mov
jg
mov
jbe
and
push
repnz
pop
movsb
cwtl
push
test
psubusw
test
js
fdivrl
fisttpl
popa
pop
dec
lock
mov
ret
call
ror
xor
popa
rcrl
lcall
test
insl
dec
xchg
inc
mov
sub
cmp
mov
jge
xchg
jae
movsb
and
pop
ja
pop
test
pushl
cld
fidivrs
stos
jp
ds
sub
xor
fwait
and
jae
lret
shl
lods
push
addr16
jno
or
pop
sar
lcall
aas
mov
jns
adc
movsl
pop
mov
decl
add
lahf
cwtl
aaa
jne
inc
mov
cmp
jbe
call
adc
je
clc
lahf
xchg
jno
fiadds
mov
mov
mov
push
movsb
mov
push
jnp
mov
push
mov
sahf
xlat
xchg
fidivrs
fnstsw
adc
lcall
mov
int
xchg
and
test
inc
inc
pushf
int3
fiadds
cli
xor
out
fmuls
jnp
xchg
jo
or
aam
js,pn
jo
aas
imul
outsl
sbb
aad
lods
std
mov
lds
into
mov
lcall
mov
shlb
sarl
pop
and
jg
xlat
jno
lcall
mov
dec
movsl
pop
data16
mov
mov
sbb
loope
xchg
scas
jno
mov
clc
pushl
ficoms
sub
push
out
addr16
les
or
pushl
clc
pop
stos
mov
leave
icebp
mov
push
in
jno
mov
call
jl
test
sub
sbb
bound
std
xchg
add
stos
out
xor
inc
daa
jp
incl
add
out
aad
fimull
cmc
ljmp
push
jge
movsl
cmp
incl
outsl
jno
sub
clc
out
add
pop
inc
imul
mov
sbb
pop
lret
add
adc
mov
jg
in
mov
jge
jne
dec
sub
add
hlt
mov
lcall
ffreep
imul
imul
in
sti
xchg
cmp
sub
mov
pushl
repz
das
addr16
xchg
or
pop
jbe
cs
sbb
jg
mov
xor
sub
jnp
js
jp
movsb
into
xor
sahf
call
fld
iret
in
push
sub
ljmp
dec
or
cltd
shll
loopne
ret
mov
hlt
pop
cmc
pop
lock
dec
leave
inc
mov
pusha
stc
inc
lcall
mov
push
ret
stos
sbb
pop
push
pop
jne
xchg
or
movsl
inc
aas
sbb
dec
cmpsl
das
mov
das
sar
pop
sub
mov
xchg
pop
jno
call
jp
sbb
lods
pop
sub
push
jae
or
cmp
add
jmp
test
mov
hlt
rclb
push
pushl
imull
xchg
cmpsl
icebp
loopne
sub
dec
or
enter
dec
push
and
stos
insl
adc
pop
xlat
dec
popl
mov
xor
incl
sbb
rorb
loope
ja
dec
cmp
jg
sub
xchg
or
inc
fimuls
rcll
popf
hlt
fldl
mov
std
sub
shll
fiaddl
xchg
sbb
inc
inc
hlt
sub
mov
scas
sbb
xorl
mov
sub
pusha
pushf
adc
sub
movsl
cmp
push
test
pop
imul
decl
repnz
mov
mov
rolb
mov
or
mull
add
pushl
out
jmp
dec
jns
in
xor
jbe
inc
push
daa
leave
cld
gs
sbb
sti
call
clc
stos
xor
cld
jns
pop
fldcw
stos
sti
clc
cmpsl
fldcw
and
aam
xorb
cwtl
pop
xchg
sub
std
pop
lret
push
cmp
in
jbe
pop
cld
in
out
data16
outsb
push
pop
fdivr
shrl
repz
jno
inc
out
push
xchg
jno
outsl
dec
pushl
sti
cmc
outsb
ss
out
mov
and
xor
bound
mov
dec
pop
arpl
xchg
sbb
ljmp
dec
psubusb
lea
fdivl
mov
icebp
test
insb
scas
and
call
pop
movsb
cmp
out
cmpsl
push
push
jbe
lcall
sub
lcall
sbb
pop
dec
mov
pop
xor
pop
mov
jmp
pop
out
push
das
hlt
lcall
inc
aad
cmp
cmpsb
cwtl
xchg
inc
jge
imull
push
push
pushl
mov
mov
mov
insb
push
adc
sub
mov
insb
xchg
pop
dec
adcl
push
arpl
ficoml
pushl
cmpsb
bound
pop
dec
sub
loop
repz
jg
sbb
int3
add
stos
nop
icebp
insb
mov
dec
pusha
aam
out
jmp
xor
orb
cmp
xchg
shl
jae
push
bound
adc
add
mov
incl
gs
addl
jns
out
arpl
arpl
std
adc
das
lock
mov
in
das
lret
fidivs
movsb
das
arpl
mov
imul
xor
jns
mov
out
movsl
cmp
shl
inc
sar
xor
jnp
pop
out
mov
imul
in
mov
lahf
cmp
daa
scas
ret
and
mov
iret
outsb
mov
cmp
fildl
sbb
push
lcall
sbb
push
sub
imul
in
add
outsb
out
stc
jecxz
cmp
loope
pushl
and
lds
dec
shlb
cli
imul
sahf
push
rol
icebp
or
jge
sarb
cmp
arpl
fwait
push
jg
xor
or
jno
pop
mov
xchg
jg
call
jo
sbb
cmpsb
fcmove
test
sub
lcall
sub
in
jge
incl
add
push
imul
loope
mov
call
ljmp
sbb
sbb
jnp
mov
es
push
dec
loope
sub
xor
ja
pop
and
lcall
loope
outsl
and
pop
cltd
xchg
fmuls
and
fisttpl
jb
shll
repz
jmp
out
insl
jmp
shlb
and
fbstp
dec
pop
push
cmp
push
xor
sahf
and
add
xor
jl
ret
pop
mov
sbb
mov
jp
idivb
std
push
popf
into
or
mov
sbb
mov
pushf
pop
jmp
loope
in
cmp
push
in
pusha
push
cwtl
sub
ss
aas
gs
pop
int3
adc
lcall
pop
inc
pop
jnp
rorl
push
push
cmp
and
out
cmp
loope
jg
or
stos
in
popf
ja
xchg
mov
mov
gs
jmp
lahf
lea
jno
push
jmp
stos
xchg
jge
in
jae
loope
mov
cmp
and
xor
adcb
push
push
out
xchg
into
fcmovu
clc
das
cld
xor
in
mov
cmpsb
rep
lea
xchg
xchg
adc
shrl
std
decl
adc
stos
xorb
mov
ret
fiaddl
adc
adc
std
lds
push
pop
imul
fldt
pop
push
fstl
out
scas
ffreep
mov
mov
es
outsl
cmp
aas
inc
ret
rcrl
out
loope
iret
fucomip
incl
cbtw
xor
popf
sub
cmpsb
mov
imul
in
jae
mov
nop
fs
pop
je
call
jmp
pushf
pop
cld
arpl
hlt
aam
pop
push
adc
add
cmp
lahf
imul
out
mov
push
cli
mov
xor
out
jne
jl
icebp
cli
dec
adc
syscall
je
aaa
ret
jmp
loope
daa
dec
lea
div
jg
int
mov
mov
push
sub
into
pop
test
ret
mov
leave
inc
push
push
movb
mov
dec
jge
in
insb
add
pop
mov
lds
fs
sbb
std
js
call
mov
cmp
out
in
stos
cmp
push
jae
xchg
push
lcall
bound
xor
sbb
push
xchg
das
mov
lcall
pushl
in
dec
push
cli
dec
xchg
push
sbbb
inc
dec
mov
fsubrs
xchg
call
cli
push
ss
addr16
movsl
out
pop
mov
adc
ljmp
cmp
iret
into
mov
rol
cmp
xchg
cmp
cmp
call
cli
push
ret
pop
xor
or
clc
and
es
cmp
mov
add
pusha
sbb
xor
push
scas
lock
mov
mov
js
ljmp
lock
fisttpll
sbb
repz
clc
xor
sti
test
mov
pop
repnz
jmp
fwait
xchg
or
or
push
cmp
dec
dec
lea
inc
js
xchg
xor
inc
mov
mov
jne
push
cmp
push
mov
dec
dec
dec
popf
icebp
lcall
rclb
mov
or
adc
lahf
xorl
or
in
mov
dec
repnz
mov
ret
add
decl
clc
push
sahf
nop
out
fs
rorl
add
test
inc
sub
sub
xchg
lcall
sub
mov
sub
vshufps
test
incl
mov
inc
out
xor
call
incl
lret
stos
push
cld
push
js
iret
xchg
add
decl
add
or
inc
cmpsl
call
cli
loop
sbb
sub
popa
xchg
cli
ljmp
int
sub
push
xchg
xlat
cld
lcall
ja
jge
mov
icebp
sub
and
lcall
es
dec
cltd
xchg
jne
mov
xchg
pop
ja
cld
mov
inc
mov
test
fidivl
sub
mov
xor
jae
jb
jmp
push
cmp
arpl
push
jle
jmp
mov
mov
aaa
lcall
mov
dec
in
ja
xchg
mov
dec
pop
cmovg
incl
jo
daa
test
jge
sbb
dec
outsb
hlt
lods
mov
mov
sub
pushf
imul
fsubr
sbb
fstps
aad
push
add
jecxz
or
dec
jl
pop
push
dec
rorb
jb
fcompl
push
ss
sar
ljmp
mov
das
in
test
pusha
and
sbbl
and
call
dec
lods
adc
mov
mov
dec
push
popa
dec
cltd
imulb
mov
xor
push
mov
js
out
mov
add
dec
bound
push
roll
mov
pop
iret
lods
add
movq
jg
jnp
inc
es
rcll
xor
fsubl
jns
decl
leave
pop
push
mov
push
adc
xor
lods
xor
rcr
arpl
clc
xchg
addb
jge
sbb
jns
pushw
leave
ja
ss
xchg
xor
ss
adc
push
outsl
inc
loop
fwait
ror
or
mov
add
dec
mov
icebp
adc
adc
jg
inc
scas
movsl
loopne
out
outsl
mov
jmp
sbb
pop
lods
sub
call
ds
pushl
pop
sbb
imul
mov
dec
xchg
cltd
imul
pop
pop
cwtl
sbbb
jb
stos
pushl
pop
and
aad
shll
cmp
add
movb
inc
pop
hlt
test
mov
pushl
test
jo
daa
jns
inc
cwtl
sbb
sub
ror
lcall
xor
xchg
add
in
andb
gs
xor
lcall
lcall
jmp
fiaddl
push
stos
out
fcoml
fcoml
filds
and
lods
mov
daa
mov
int3
pop
xchg
dec
jo
loopne
fsubr
loop
xor
ja
sbb
mov
xchg
xchg
inc
out
pop
pop
inc
lock
mov
gs
mov
push
or
in
push
xlat
dec
mov
push
lahf
mov
xchg
mov
dec
push
enter
andl
xor
sarl
popf
mov
fldcw
jge
test
arpl
daa
orb
decl
cmp
inc
pop
testb
fistl
clc
xcrypt-ofb
cmpsl
sub
icebp
add
pusha
inc
call
or
jmp
pop
jne
add
mov
lret
mov
xchg
inc
sahf
adcl
cmp
insl
and
lea
repnz
push
mov
jmp
addr16
jg
sbb
movsl
pop
shl
aad
push
cwtl
pop
xchg
inc
and
xchg
clc
fsubr
std
scas
push
rorb
jl
sub
movb
sub
pop
sbb
js
aaa
xor
cmpsl
iret
sub
std
outsl
icebp
mov
dec
xchg
mov
dec
xchg
lcall
pop
insb
aas
mov
lods
js
fldt
xchg
fidivl
outsl
std
lea
and
push
repz
push
inc
add
xor
or
fimull
jne
cld
pushl
sub
popa
enter
and
fwait
loop
aam
mov
pop
test
out
push
inc
pop
ljmp
mov
add
clc
pop
jbe
xchg
fwait
in
mov
incl
cmpsb
sti
dec
xor
pop
or
rcr
dec
ficoml
fidivs
jbe
xor
incl
inc
pop
jb
adc
jbe
int
inc
repnz
cmc
mov
xor
jmp
movsb
hlt
sahf
xchg
daa
cmp
andl
mov
stc
dec
mov
fs
lret
xor
or
mov
push
and
rsqrtps
inc
xchg
leave
sbb
xchg
lcall
cld
das
jp
nop
jo
popa
in
and
mov
imul
decl
fadds
cmp
jl
hlt
out
xor
push
repz
inc
popfw
pop
aad
xchg
fwait
shrb
jg
jmp
xor
mov
and
jg
clc
xchg
mov
mov
jmp
jns
inc
sarl
xor
movsb
pop
fcoms
or
xor
call
cli
pop
jmp
shlb
test
xchg
cmp
and
push
lcall
incl
and
ficompl
xlat
in
cmpsb
xor
push
aad
and
jg
rolb
test
call
imul
subl
dec
negb
and
lret
adc
xchg
test
das
rorb
idivb
xchg
ret
es
fs
jp
push
incl
mov
fwait
pop
and
cltd
movsb
sub
xor
mov
pop
aam
jp
dec
fdivl
adc
sbb
push
stos
addr16
lods
and
cmp
jg
rcll
sbb
icebp
pop
sub
test
clc
push
xchg
mov
add
stos
push
sub
xor
jno
clc
mov
fwait
adc
dec
push
sar
decl
or
enter
sub
shr
inc
and
mov
cltd
das
hlt
decl
xor
call
dec
repz
mov
lods
jg
incl
pop
push
pop
mov
mov
repz
push
dec
push
and
or
jle
add
enter
outsl
ljmp
pop
sbb
cwtl
lock
jmp
mov
dec
in
hlt
loope
sub
mov
or
or
test
cmp
std
cmp
mov
cmp
jno
call
loopne
mov
xchg
rcl
pop
add
aas
nop
mov
sub
sti
shll
jo
xor
jmp
shrl
sbb
mov
lods
loope
int3
lds
push
icebp
cltd
in
xor
jbe
loop
call
aaa
bound
push
pop
adc
faddp
jl
arpl
pop
pop
std
mov
or
pop
or
outsb
dec
sbb
out
mov
decl
imul
pusha
mov
je
std
incl
add
mov
aaa
sbb
ret
es
cmp
jmp
sub
pop
das
arpl
negl
cli
fwait
xor
mov
lods
popl
dec
cs
incl
pusha
inc
ljmp
int3
mov
mov
hlt
pop
lods
sti
outsl
std
aaa
nop
and
mov
push
je
jmp
dec
push
out
cltd
mov
fildll
push
lahf
sub
arpl
sbb
ud0
in
ljmp
je
or
jge
ljmp
sbb
add
mov
mov
push
pop
fwait
sub
sar
sbb
mov
mov
call
sbb
dec
jl
add
dec
testl
rorl
aad
dec
das
push
push
aad
mov
push
das
mov
cmpsl
js
inc
mov
mov
imul
decl
cld
push
pushf
popa
je
mov
mov
iret
adcl
call
loope
call
jb
push
fwait
pushf
mov
sbb
insl
xor
imul
fidivl
pop
sub
int3
pop
dec
into
fisubrs
sub
lret
sbb
sbb
push
jle
xsaveopt
mov
js
incl
repz
adc
pop
repz
lret
cld
insl
pusha
xchg
test
inc
cmp
test
incl
icebp
out
jns
pop
call
add
inc
test
xchg
mov
ret
mov
movsb
adc
pop
shrb
nop
popf
xor
outsl
adc
sbb
jmp
adc
repnz
popa
pop
data16
out
test
sub
mov
sbb
and
xchg
and
sub
fstps
stos
cld
mov
jg
push
push
mov
xchg
imulb
sub
lods
adc
decl
cld
pop
dec
dec
mov
ds
pop
adc
insl
aas
mov
push
push
cli
decl
sub
mov
jp
lret
or
mov
int
sbb
jg
fists
rep
sub
jbe
aaa
xchg
fidivl
out
adc
leave
inc
call
cltd
testb
mov
push
lret
or
sub
sar
incl
add
xor
ficompl
loopne
sub
sahf
ficomps
outsl
dec
aam
mov
adcl
mov
and
dec
sarl
addr16
xor
std
in
push
sahf
mov
cwtl
xor
sbb
fsubl
jae,pn
incl
inc
testb
aam
xchg
xchg
xor
and
jg
lock
or
call
ljmp
mov
test
xchg
cmpsl
jg
cmp
mov
jg
push
out
xor
xchg
jbe
ja
push
jne
mov
lods
push
ss
call
dec
dec
xchg
sti
and
push
movsb
mov
pop
jns
cltd
jmp
sti
stos
mov
leave
xchg
xchg
mov
jne
incl
jle
mov
jmp
and
push
lcall
dec
repnz
fisubrl
outsb
dec
enter
push
mov
push
pop
jo
arpl
test
or
adc
inc
push
jl
lret
xchg
fdiv
push
ret
in
hlt
ss
decl
xor
sbb
int3
out
ljmp
lret
std
std
outsb
incl
pop
inc
scas
mov
in
add
or
sti
push
mov
je
jmp
push
movsb
mov
mov
lret
and
daa
jmp
push
jnp
in
jnp
aam
jb
dec
dec
or
ljmp
std
incl
push
movsl
int3
jmp
xorl
push
fimull
and
push
scas
xchg
incl
lods
push
mov
xchg
xchg
mov
pop
pop
jae
push
outsl
pop
and
jp
lret
orl
sub
mov
les
enter
shr
fisttps
movsb
fdivrl
pop
jg
dec
sbb
push
mov
mov
lret
xor
loopne
call
cs
into
outsb
jbe
jmp
out
int3
rorl
lcall
out
sahf
std
stos
in
mov
out
ds
dec
and
jge
movsb
and
das
lock
mov
lds
jno
cwtl
loope
ss
jmp
mov
adc
bound
jg
xchg
mov
cmp
outsl
icebp
jg
dec
test
ror
sub
ljmp
mov
clc
jmp
test
pop
lock
cmpsb
inc
mov
xchg
mov
or
pushl
cli
mov
mov
adc
insl
fildll
arpl
fcomps
mov
or
sub
in
ror
cmp
jns
xchg
lcall
ljmp
dec
dec
in
inc
aad
iret
xchg
fdiv
leave
mov
and
or
movsl
mov
jle
inc
rclb
js
aas
pushf
adc
mov
inc
push
inc
lds
leave
xchg
mov
xor
adc
inc
pop
push
cmpb
ss
cld
or
scas
push
popa
cs
outsl
hlt
fldt
and
movsb
mov
call
loop
lea
inc
jbe
popl
leave
jp
jecxz
dec
or
das
cld
call
mov
adc
inc
sub
loop
mov
lods
ret
mov
adc
xchg
push
movsb
xchg
cmp
inc
aaa
insb
xchg
frstor
pop
sbb
xchg
repz
mov
repz
push
ja
or
sahf
pop
xchg
mov
mov
pushl
xchg
xchg
insl
push
rorl
push
mul
jle
or
jmp
imul
insw
mov
sbb
iret
hlt
jg
sbb
popa
or
lahf
dec
les
push
mov
clc
call
imul
jle
sbb
cmp
sbb
mov
es
sub
loope
dec
pop
and
mov
mov
xor
mov
jae
pop
push
sbb
in
lea
loopne
sbb
ljmp
icebp
mov
fisttpll
aam
push
or
xlat
sti
in
cmp
mov
pushl
shlb
jge
arpl
mov
mov
jmp
sar
ljmp
mov
inc
sbb
in
call
adcb
or
call
in
mov
jns
mov
mull
cmc
xchg
mov
jb
dec
push
out
cmp
mov
pop
xchg
add
cwtl
cmp
mov
add
shlb
mov
movsl
mov
fsubs
add
pop
xchg
lock
fdivr
pushl
pop
std
pusha
cld
mov
andl
int3
cmp
das
int
pop
outsl
inc
loop
in
push
aam
mov
out
aaa
cli
incl
jl
jl
add
pop
aam
mov
popa
xor
ljmp
icebp
lahf
mulb
test
pop
mov
or
das
out
cmovne
jg
scas
sbb
jge
mov
in
aaa
in
mov
shr
jl
and
fdivrs
repz
cmp
clc
mov
jl
out
mov
ret
xlat
pop
or
push
xor
jne
lcall
adc
cmp
dec
xor
add
adc
mov
repz
fistps
in
fcmovu
cmp
pop
repz
cmp
mov
decl
hlt
lahf
out
dec
out
jg
mov
ljmp
jmp
adc
jp
std
call
cmpb
lret
jne
jns
add
mov
push
pop
imul
andps
incl
les
pop
mov
xchg
outsl
hlt
pop
bound
jge
xchg
dec
push
mov
cltd
in
decl
or
jle
cmpsb
or
insl
xchg
popa
lds
aas
dec
xchg
dec
data16
xor
fnstsw
push
movsl
push
and
xor
adc
ret
and
call
ljmp
jge
shrb
arpl
mov
aaa
sbb
decl
shrb
stc
cltd
test
gs
subb
add
xlat
outsb
imul
scas
or
out
leave
addr16
push
cmp
jb
inc
pop
outsb
call
iret
fsts
adcb
cmp
xchg
xlat
test
mov
push
insb
dec
mov
test
hlt
cmp
icebp
or
dec
mov
sub
jmp
rolb
cmpsb
dec
xchg
mov
js
mov
flds
or
push
jl
xchg
ljmp
in
xchg
loope
dec
xlat
lods
cmp
scas
mov
cmp
sti
mov
mov
lcall
xchg
push
fmuls
cld
jo
push
iret
in
roll
xlat
adc
mov
mov
push
xchg
mov
ret
mov
pop
lods
lcall
push
hlt
pushf
mov
daa
mov
inc
adc
xlat
shl
and
call
pop
push
in
push
sti
push
mov
mov
test
push
ja
lods
std
jne
std
pushl
push
aad
pop
push
xchg
xor
jp
enter
jg
push
ljmp
ret
divb
lahf
movsl
and
ret
add
insb
mov
push
sub
jp
in
fdivrs
popf
aas
pop
lock
push
sbb
cltd
add
mov
leave
dec
pop
pop
cmp
push
pushf
call
lcall
out
pop
add
sbb
sarl
int3
or
cmpb
outsl
pushl
loope
push
pusha
dec
fwait
xchg
xor
add
dec
mov
icebp
stos
inc
sub
xor
mov
in
push
stos
jbe
aam
call
adc
xchg
mov
lret
aaa
repnz
jo
adc
lahf
les
add
scas
pop
int3
pop
mov
hlt
in
xor
std
or
mov
ljmp
std
incl
mov
mov
mov
rcll
mov
icebp
mov
lcall
dec
pop
mov
and
add
cmp
ja
fsub
mov
xor
push
lcall
std
pop
dec
js
add
and
inc
movsb
xchg
pushl
cli
lcall
test
test
xor
push
push
sub
mov
jns
loope
lcall
sub
or
add
sbb
repnz
rolb
repz
add
inc
add
ja
out
sar
decl
movsl
stos
inc
lea
addb
adc
xlat
sarl
jmp
dec
jg
test
mov
das
aad
mov
mov
and
int3
mov
sbb
test
mov
shlb
dec
shrb
cltd
out
call
jg
push
pop
loop
test
fs
inc
adc
mov
xchg
mov
lods
xchg
mov
mov
cmp
xor
mov
ljmp
mov
jno
inc
mov
mov
jl
decl
xor
in
cmp
pop
xchg
jge
pop
ja
sbb
jae
jnp
insb
mov
test
xor
cmp
decl
xor
push
or
ljmp
int3
cmp
mov
jb
cmp
push
lock
pop
into
adc
cmpsl
jae
scas
inc
pop
call
mov
mov
adc
pusha
adc
jp
in
ja
cmp
ljmp
das
push
add
insb
testb
mov
xor
hlt
mov
mov
jecxz
fisttps
xchg
dec
je
je
test
outsb
cmp
mov
xchg
lahf
loope
lea
xchg
sub
jge
inc
addl
ljmp
std
mov
mulb
fnsave
je
loop
test
shll
sbb
incl
mov
fists
push
mov
or
in
push
add
jg
jle
cld
adc
xchg
addb
cld
test
lret
xchg
cwtl
cmp
in
sbb
mov
adc
imul
shll
in
jmp
fadd
xchg
cltd
cmpsl
push
sbb
ljmp
push
inc
lds
fisttps
adc
fiaddl
mov
pushl
jne,pt
mov
inc
dec
sahf
pop
aaa
xchg
sbb
ljmp
es
dec
scas
mov
and
xor
sbb
out
lret
push
and
push
cmp
shlb
adc
test
cmpsb
xchg
pop
insl
or
call
and
leave
lret
xchg
inc
cld
and
mov
xor
mov
push
clc
lahf
jl
test
xchg
inc
xchg
mov
jmp
push
in
xor
and
mov
imul
movq
mov
mov
sub
sarl
stos
test
jge
sbb
mov
lods
sbb
and
push
adc
aaa
jb
cpuid
sar
mov
add
xchg
and
xor
dec
ljmp
jmp
pushf
xchg
mov
nop
in
pop
scas
adc
das
mov
fbld
and
shll
pop
std
shrb
mov
pusha
ds
imul
popf
mov
dec
push
pop
lods
xlat
mov
daa
xchg
adc
stc
adc
sti
call
sbb
push
adc
push
icebp
data16
jle
ljmp
test
mov
aam
mov
sahf
nop
jnp
insl
out
sbbb
out
add
std
mov
mov
mov
xchg
imul
adc
lcall
inc
je
adc
adc
in
pushf
push
or
sub
jg
repnz
pop
ret
lods
and
sbbb
ret
cmc
add
jp
mov
cli
mov
movsl
cmp
mov
call
lods
inc
pushf
or
xor
pop
sbb
lods
xor
adc
mov
sbb
jmp
mov
push
mov
mov
mov
jge
pop
fisttpll
cmpsl
into
jp
decl
mov
int
test
dec
xchg
mov
adc
sub
mov
inc
sbb
je
addr16
ret
dec
pushf
cmpl
call
xchg
ja
pop
icebp
imulb
outsl
or
leave
lods
mov
add
sbb
arpl
jp
inc
adc
jg
fimuls
xchg
fld
pop
fs
add
arpl
idiv
incl
push
xchg
pop
pop
fwait
test
shll
repz
mov
mov
push
add
mov
aam
adcb
sbb
pop
shlb
mov
pop
sbb
inc
shll
sub
push
sub
sbb
jl
sti
icebp
cmp
jmp
adc
loopne
push
shlb
cmpsb
jp
mov
push
rcrb
pop
insb
adc
icebp
aam
ljmp
mov
adc
add
outsl
fsubs
xor
mov
pop
mov
xchg
bound
xor
popa
in
ss
pop
decl
mov
push
orl
jge
sarl
pop
scas
insl
ret
stos
sub
jmp
lods
shlb
test
inc
int3
jae
mov
scas
jo
sahf
daa
test
sub
in
sub
pop
loop
call
mov
aam
mov
push
mov
leave
jmp
jecxz
cmp
mov
aam
aaa
scas
mov
add
dec
sub
mov
sti
ret
lods
ret
decl
push
inc
adc
into
scas
ja
jo
ja
ds
mov
in
and
call
ljmp
adc
xchg
mov
sub
cwtl
xchg
mov
pminub
dec
out
push
cmpsb
cli
or
inc
nop
ss
clc
lcall
dec
jl
loopne
and
push
sub
in
inc
arpl
inc
aas
mov
mov
xchg
jle
mov
adc
loopne
out
testl
sub
xchg
sti
lods
xchg
sub
inc
roll
cs
fistpl
decl
ffreep
int
int3
xchg
aad
sub
call
mov
pop
out
cltd
lods
incl
das
pop
roll
cmp
stos
popa
dec
pop
cmpsb
js
incl
pop
insl
je
lods
mov
mov
mov
notl
rcrl
or
decl
mov
incb
aas
inc
or
sub
out
dec
pop
in
cmp
jle
stos
leave
loope
js
sbb
stc
fistpl
jg
outsl
cld
inc
push
int3
popf
cld
jmp
pop
insb
inc
test
addr16
cld
mov
loope
pusha
addr16
xchg
popf
mov
stc
mov
push
push
lea
sub
cmp
dec
daa
popf
adc
push
mov
daa
insb
stos
out
pop
sbb
adcl
xchg
mov
adc
mov
lea
aas
mov
ret
test
insl
jbe
arpl
or
arpl
pop
dec
or
xorl
pop
sub
jecxz
xchg
cld
sarb
insl
int
mov
add
inc
and
push
lret
xlat
mov
or
sar
jecxz
inc
lcall
movsl
ss
mov
xor
icebp
add
adcb
or
mov
sarl
aas
mov
dec
and
mov
cmpsl
inc
push
inc
jbe
jg
xchg
dec
idivl
inc
sbb
call
mov
jl
cld
mov
add
pushf
jo
cltd
push
scas
mov
pop
mov
mov
imul
sbb
cs
jnp
loopne
pop
ret
incl
sub
mov
dec
fwait
roll
shrb
inc
popa
mov
jae
inc
or
loopne
cmp
mov
ds
hlt
hlt
push
mov
lcall
idiv
in
fsubr
lods
mov
cmp
inc
or
or
leave
add
movsb
aas
ret
lock
mov
adc
or
lahf
repnz
leave
int
std
decl
jne
mov
inc
ja
jb
jg
sbb
ds
fsubr
js
hlt
or
aaa
ljmp
xchg
mov
outsb
xor
mov
or
add
sbb
mov
repnz
sti
pushl
sub
std
test
adc
fs
pop
insl
insb
stc
fidivl
cmp
inc
int
outsb
xchg
pop
incl
cmpsl
jle
roll
jge
cmc
push
mov
lods
lret
inc
pop
js
add
mov
cwtl
sbb
ja
imul
sub
mov
ljmp
adc
push
stc
or
mov
lret
jb
mov
sub
loope
fcoml
jg
xchg
aam
cmp
test
lret
lret
push
push
movsl
std
or
lock
pushl
sbb
stos
xor
fwait
jg
add
pop
xor
jno
mov
sub
outsl
jecxz
xchg
nop
xor
inc
ja
add
loopne
fwait
movsl
insb
jbe
repnz
mov
cwtl
pop
bound
mov
fisubrl
adc
je
bound
jge
cmp
aas
es
je
add
ljmp
popf
test
mov
inc
das
add
mov
std
mov
inc
sub
mov
jl
dec
test
scas
negb
jecxz
jmp
xchg
pop
sub
cmc
push
xchg
shlb
outsl
out
mov
sbb
jle
xchg
and
jg
push
hlt
lock
ljmp
and
xor
ljmp
mov
inc
and
jno
push
cmp
ljmp
adc
sahf
push
int3
leave
into
lcall
mov
cltd
dec
pop
jns
jg
repnz
mov
data16
in
jg
pop
mov
outsl
sbb
lods
in
stc
xor
mov
addl
out
mov
lcall
push
cli
mov
popf
adc
xor
or
xchg
pop
jae
enter
jl
std
pushl
test
inc
clc
and
sub
into
arpl
loope
int3
in
loop
xor
push
das
hlt
ljmp
sbb
pop
loop
push
mov
shll
in
mov
jg
lcall
lcall
outsb
scas
push
lds
mov
inc
xor
and
incl
pusha
lock
test
jne
cwtl
mov
lahf
mov
scas
lea
ffree
sbb
pop
cmc
iret
mov
insl
mov
jmp
jo
xor
dec
iret
xor
nop
or
decl
cmp
sub
xchg
push
cld
lea
ret
cli
xor
push
ss
adc
mov
or
in
mov
mov
pop
pop
jg
jle
mov
bound
sub
ret
fidivrs
shll
test
add
je
jg
incl
jo
mov
stos
or
les
notl
xorl
fildl
stos
sub
fdivs
jnp
xor
insb
pop
das
incl
fisubrs
int
xchg
push
pusha
xchg
dec
lods
xchg
std
or
xchg
adc
xchg
clc
fnstsw
scas
jg
scas
jo
stos
loop
mov
or
das
cld
lcall
in
mov
pop
cmp
sbb
pop
sbb
lods
sbb
incl
cmpps
cli
scas
pop
data16
mov
decl
out
rol
mov
jo
stc
lods
test
lods
call
xchg
cmc
or
cmp
fstl
xor
or
pop
lods
jg
jo
xor
out
inc
movsb
mov
pusha
aaa
jg
rcll
pop
das
or
daa
inc
push
call
jnp
lds
ljmp
cmp
stc
popf
sub
xchg
loop
out
jecxz
xor
mov
mov
xor
popf
add
mov
call
push
popf
out
jl
fnstenv
data16
push
ja
pusha
outsl
cmc
decl
popa
dec
push
xor
and
xor
jo
mov
adc
pop
aam
mov
clc
aad
jnp
movsb
and
outsl
stos
push
sti
mov
shrl
stos
sarb
stos
mov
inc
pop
adc
or
dec
adc
mov
sbb
fsubr
into
scas
mov
int
leave
data16
add
mov
and
test
jmp
xlat
adc
cld
incl
and
pop
repz
cld
mov
lea
lahf
mov
pop
inc
ja
mov
pop
lods
mov
adc
jnp
and
xchg
jp
sti
mov
jb
mov
std
daa
dec
lea
cmp
xor
jg
mov
push
adc
pop
jl
jg
jmp
sbbb
mov
add
push
jle
jg
rorb
sub
sbbl
pop
cli
inc
add
test
in
pop
push
test
cwtl
xor
or
in
sbb
fnstsw
dec
outsb
push
cltd
push
ret
mov
xchg
sbb
rolb
nop
mov
rol
ljmp
xchg
pop
adc
mov
cltd
or
mov
jae
aam
loop
inc
add
mov
rcll
das
cs
repnz
sbbl
sbb
add
jg
xchg
mov
dec
mov
aam
addb
dec
inc
mov
fwait
cmpsb
jmp
nop
in
clc
ljmp
cld
insl
rcll
inc
lods
push
jae
orb
mov
aas
cli
pop
add
ret
enter
dec
pop
lret
pushl
push
std
je
fisubrs
jo
dec
jno
call
pop
idiv
sbb
add
push
add
xchg
cmp
cmp
je
cmp
test
test
inc
jle
xor
lahf
es
jb
movsl
fnstsw
decl
stos
stc
addr16
std
leave
mov
mov
or
mov
dec
stc
fs
inc
addb
mov
jnp
jae
call
cld
mov
push
push
inc
or
and
mov
jbe
cmp
aad
fdivrl
sub
push
lock
int
lods
outsl
cld
incl
adc
jns
lods
nop
xor
mov
aaa
stos
sub
cmp
shl
mov
lret
test
insb
bound
filds
incl
fisubs
jae
ret
test
movsb
imul
adc
call
add
sbb
cmp
and
push
xchg
mov
lcall
ljmp
jp
sbb
add
fwait
insb
daa
mov
jle
fdivrp
adc
adcl
mov
popa
rclb
decl
shll
push
lahf
sbb
dec
fstps
xor
fcomi
mov
lods
fsubs
push
insl
fwait
adc
js
ljmp
xchg
es
inc
popf
push
lds
aam
jno
jg
lcall
push
push
or
mov
cltd
stc
mov
jle
pop
loopne
outsb
fwait
push
insb
sub
stos
sub
ljmp
lahf
inc
inc
or
es
shlb
call
dec
push
and
imul
rcll
cltd
cmpsb
faddl
negb
sub
imul
mov
popf
lret
into
mov
shll
das
adc
test
out
add
push
loopne
xchg
adc
daa
mull
ds
sub
cld
xor
call
add
test
popa
fnstsw
loopne
mov
push
add
test
push
outsl
loopne
movsb
xor
popf
jle
popf
sbb
cltd
inc
cmc
jmp
mov
popf
mov
cmp
mov
xor
push
jno
orl
jg
sarb
xchg
cmc
jno
aad
jae
mov
jmp
imul
cmp
mov
lock
inc
add
nop
dec
js
push
test
mov
dec
addr16
in
call
test
mov
loop
shlb
sub
das
fmuls
jns
in
popa
adc
out
test
call
cli
lcall
stos
pop
mov
jl
push
aas
adc
imul
les
or
dec
jmp
nop
jno
push
addr16
ss
jecxz
fnstcw
call
inc
mov
mov
cs
sub
pop
ret
cmp
cmp
xor
lcall
std
stos
sbb
sub
movsl
sbb
ja
sbb
test
fcomps
fisttpl
inc
push
int3
imul
xchg
xor
std
or
xchg
cmp
jmp
dec
inc
je
out
gs
jns
jns
lock
jnp
or
mov
mov
repnz
inc
xor
sub
stos
pop
mov
test
mov
pop
push
jb
adc
clc
lea
pop
shll
lret
mov
ret
dec
pusha
out
add
inc
lcall
cld
call
sbb
rol
mov
mov
lcall
xchg
mov
cmp
fdiv
incb
jmp
xchg
jnp
out
jle
pushl
and
push
mov
dec
aas
inc
pop
adc
dec
xchg
fidivs
call
mov
in
pop
addr16
xchg
loop
call
xor
cmp
and
or
push
lock
std
mov
mov
sbb
addr16
inc
dec
data16
iret
mov
or
shrb
inc
ds
cmc
inc
call
mov
add
ljmp
shll
movsb
ljmp
incl
pop
movsl
jne
mov
mov
jmp
out
decl
int
pop
xor
outsb
jbe
xor
xor
imul
push
test
and
mov
stos
jg
negl
cmc
cmp
mov
enter
outsl
icebp
call
jnp
mov
push
fsubl
gs
add
adc
loop
test
xor
sar
ljmp
sbbl
sub
adc
sub
cmp
incl
call
inc
gs
mov
sub
lock
dec
js
loop
xor
pop
clc
decl
lds
cmp
repz
shrb
call
mov
xchg
mov
dec
inc
and
and
mov
lods
pop
lret
sub
pop
popa
xchg
lods
stc
out
or
xor
or
jmp
cmp
xor
cwtl
jbe
sub
mov
orl
lock
dec
and
stos
cli
add
dec
xchg
into
nop
hlt
loopne
sub
push
xchg
ret
xchg
inc
and
das
push
mov
jge
in
cltd
aas
xchg
and
ss
pop
shrb
dec
jb
pop
dec
cmc
lcall
rcl
std
xor
rcl
xor
cli
incl
fbld
out
std
scas
push
sahf
xchg
call
loop
and
push
shl
xchg
fidivrl
jmp
push
xlat
fsts
fdivrs
xchg
leave
jbe
mov
pop
xor
adc
dec
jmp
pop
orl
ljmp
ljmp
xchg
fdivl
fbstp
or
sahf
add
aaa
cmpsb
imulb
lock
dec
push
call
xor
outsb
inc
lcall
lahf
sub
jmp
das
and
dec
in
ret
mov
mov
repz
mov
aad
sbbb
cmp
mov
xchg
sahf
loopne
dec
and
xor
push
ss
out
pop
push
and
mov
lcall
fwait
pop
pop
mov
aam
mov
xor
pushl
in
adcb
mov
jne
subl
mov
adc
iret
and
mov
arpl
pop
sub
xchg
push
add
les
decl
or
jnp
mov
incl
jge
aam
fwait
or
dec
popf
fisubs
outsl
mov
test
lcall
fldl
popf
mov
push
nop
cmp
xor
cld
push
out
decl
sbb
xchg
movb
cmc
pop
xorb
mov
push
jg
gs
mov
jb
ljmp
loop
aaa
lcall
lcall
movsl
repnz
out
outsb
popl
test
xor
inc
cld
pop
ljmp
aad
subl
dec
jns
lods
scas
das
xor
cmp
mov
cmp
stc
mov
dec
dec
das
jge
pushl
fldl
jp
jge
daa
pop
push
popa
push
adc
decb
jmp
call
lds
sahf
and
or
imul
das
les
dec
push
jg
mov
mov
lahf
jne
mov
cmp
fwait
pop
xchg
mov
das
repz
and
xchg
fwait
and
mov
pop
or
mov
pop
addr16
in
rol
popf
mov
pushl
cmp
fwait
mov
jg
inc
cld
and
decl
mov
xor
push
addl
out
pop
fwait
decl
test
in
ret
orl
lods
hlt
push
in
xor
ror
out
mov
mov
mov
mov
repnz
cmpsl
lahf
arpl
and
sar
sbb
lock
nop
lahf
adc
inc
addl
xchg
cli
pushl
sbb
add
lret
jne
jp
cmp
lock
lcall
mov
xchg
jnp
cmp
clc
je
inc
push
out
sbb
outsb
aad
push
sub
jb
inc
pop
outsb
hlt
incl
adc
fs
aas
xchg
mov
pop
cli
add
test
dec
inc
push
dec
out
ljmp
aam
aaa
jae
ds
vpandn
fistpll
mov
lret
mull
jmp
leave
sbb
push
and
stos
mov
aam
jecxz
jno
jmp
int3
or
loope
mov
call
sub
cmp
or
xchg
fistl
mov
cwtl
mov
and
popa
in
and
jg
les
out
cmpb
subl
or
out
xor
adc
stos
adc
or
out
add
xchg
jae
jae
cmp
mov
mov
xor
push
mov
adc
dec
mov
cmp
and
inc
mov
cs
in
cmp
inc
nop
enter
jns
pop
rol
xor
and
sbb
out
enter
mov
dec
adc
repz
mov
ljmp
push
or
xchg
cmpsb
sbb
outsl
mov
imul
jmp
mov
jmp
or
xor
repz
fucomi
adc
push
mov
sub
xor
out
ja
rcl
or
ret
jl
sub
cmp
pop
clc
incl
in
cmpsb
pop
push
out
and
outsb
mov
enter
jmp
clc
sahf
das
icebp
das
jae
lea
xchg
xchg
inc
dec
add
fildll
sbb
hlt
incl
scas
sti
dec
mov
ret
lock
sub
aas
jnp
sub
mov
test
stos
rcrl
fmulp
push
mov
pushl
int3
mov
sbb
dec
call
jl
jns
xchg
imul
mov
ljmp
inc
daa
hlt
aad
mov
push
xor
mov
xor
add
cmp
adc
inc
mov
ffree
xchg
rorb
xchg
enter
pop
das
lcall
pop
dec
mov
xchg
aad
xor
sbb
loope
gs
ds
ljmp
jb
dec
fdiv
out
aaa
jecxz
cmp
or
sub
in
mov
and
jp
push
rorl
lods
xlat
pop
xor
and
sar
incl
lods
pop
mov
inc
ljmp
inc
in
jo
hlt
fsts
jnp
fwait
sub
jmp
mov
pop
inc
hlt
xchg
sub
int
test
frstor
jl
lcall
mov
and
push
and
imul
push
sub
repnz
sub
jg
imul
dec
lret
inc
jns
mov
in
cmp
mov
mov
ficompl
xor
jbe
pop
out
cmp
hlt
or
xlat
and
add
fs
pop
pop
es
call
in
xchg
testl
in
adc
scas
and
pop
lock
jg
fdivs
clc
xor
enter
ja
in
lds
aam
lods
aaa
mov
inc
push
add
dec
insl
dec
jecxz
mov
adc
jae
push
imul
movsl
call
dec
sbb
roll
out
cmpsl
push
sbb
cli
dec
mov
inc
scas
mov
jb
test
movsl
dec
cld
out
mov
popf
cmc
push
sub
call
jg
sub
mov
add
stc
fcmovnb
mov
js
fwait
sbb
jmp
cli
movsl
push
mov
test
jg
pop
imul
in
sub
jg
incl
punpckhbw
pop
mov
mov
das
in
int3
arpl
call
mov
ds
mov
push
mov
jg
call
xlat
add
and
and
dec
in
pop
aas
mov
inc
xchg
xchg
pushl
push
stos
add
lcall
in
and
inc
insb
jns
dec
mov
ljmp
pop
cmc
and
scas
mov
mov
movsb
jmp
push
pop
or
js
insb
ljmp
jl
adc
push
nop
mov
ja
sub
sub
int
aam
mov
fldcw
fs
shll
lcall
outsl
aad
test
outsl
cld
hlt
int3
arpl
sbb
test
push
jns
inc
je
dec
mov
mov
fcompl
lret
lods
fistpll
push
mov
dec
pushl
jecxz
sbb
xchg
in
rorl
test
into
clc
cmc
jl,pt
stos
and
jp
bound
nop
mov
stos
loop
test
sbb
jmp
enter
mov
mov
sbbl
ror
clc
test
xchg
push
and
add
aas
movsb
mov
mov
jo
sbb
sub
std
jmp
ret
xor
sub
sub
out
sub
out
and
fucomip
ljmp
cmp
mov
xchg
push
xchg
cli
lock
call
nop
xchg
call
outsl
test
jg
jnp
shll
push
mov
lds
sahf
sbb
and
std
popa
pop
sahf
rcr
scas
fdivrs
add
std
jmp
jg
mov
mov
jb
or
mov
les
pop
xchg
fs
stos
aad
stos
and
jl
in
hlt
jo
inc
dec
pop
lcall
adc
lret
xchg
adc
jno
mov
jmp
mov
dec
mov
push
cmpsl
in
lret
loope
jnp
push
mov
pushl
and
hlt
jbe
fadds
cmp
or
es
out
sub
das
std
jg
fiaddl
pop
ret
xchg
out
repz
jb
call
mov
into
sbb
pop
jo
ret
fbstp
stos
scas
andl
incl
dec
icebp
or
push
mov
pop
ret
rcl
insb
aas
jle
out
jae
aaa
jg
xchg
icebp
adc
jmp
pop
sub
adc
clc
jle
adc
jmp
xchg
xchg
cmpl
ljmp
dec
loop
add
inc
aam
test
mov
adcl
lcall
push
scas
or
mov
push
dec
push
sarb
push
rol
cmp
xor
enter
nop
movsl
movsb
call
jne
mov
fimuls
cmp
test
cld
sub
jbe
stos
jmp
jmp
dec
or
mov
inc
rcl
sbb
fwait
ljmp
std
mov
mov
xor
test
or
aam
jg
add
ljmp
sbb
popa
add
push
mov
xchg
test
andb
call
imul
jo
cmc
jmp
sub
test
adc
ja
fistps
sbb
rol
ljmp
mov
ljmp
push
sti
inc
imul
jno
mov
div
push
dec
or
in
jecxz
jmp
fstps
aad
fdivr
dec
sub
ljmp
stc
xlat
dec
cmp
idivl
clc
jge
and
pop
push
mov
mov
xor
movsl
push
in
or
jno
dec
loope
arpl
scas
xor
lcall
push
jne
pop
movsb
jle
outsl
pmulhuw
cmp
cld
add
adc
sub
pushf
mov
movsl
push
es
inc
inc
lcall
ljmp
test
xor
popf
push
sbb
cltd
jmp
scas
jmp
lahf
outsl
cld
decl
divb
in
std
xor
fwait
insb
outsb
and
xlat
decl
call
mov
test
mov
inc
jmp
and
jo
insb
cld
mov
push
pop
cli
push
int3
insb
add
mov
dec
mov
test
pop
incl
aaa
jp
jbe
js
cld
pop
sarl
jecxz
std
xchg
inc
jo
sbb
ljmp
cmp
bound
pushf
pop
jb
cmp
fisubs
xchg
dec
insl
lock
clc
pop
sbb
sub
adc
or
dec
or
pusha
aas
jecxz
push
xchg
cmpsb
fidivrl
inc
xchg
cli
ljmp
dec
fbld
ds
add
sbb
fidivrl
or
incl
fmull
and
jnp
shl
and
mov
vucomisd
adc
sub
lea
xchg
pop
mov
pop
push
fdivrs
jle
std
lcall
repnz
outsl
popf
sti
push
sub
jp
mov
or
into
decl
aad
jne
mov
and
dec
or
and
sar
lods
lds
jbe
incl
jne
cmc
sbb
mov
repz
xor
pop
push
lods
inc
aaa
outsl
lret
cmpl
pop
out
jg
js
sbb
cmp
rcl
sbb
mov
jg
sbb
jg
pusha
xor
mov
fsubrl
cmp
jmp
loopne
xchg
pop
cs
dec
dec
cs
push
insb
push
out
clc
lea
int3
int
mov
xor
add
jmp
fucomip
incl
xchg
ficomps
push
adc
cli
stos
push
call
xor
push
fnstsw
lcall
and
fwait
rcll
mov
inc
test
loope
push
es
mov
dec
push
loop
pop
dec
sbb
sub
pop
sub
pop
add
pushl
cmp
inc
cltd
int3
adc
call
insl
inc
imul
incb
inc
fdivrs
sahf
mov
testl
add
mov
sar
pop
cli
or
data16
xor
cmpsl
dec
push
mov
pop
mov
fwait
lea
push
icebp
mov
daa
sbb
lcall
jge
push
inc
xor
shl
sti
mov
cli
cmp
sbb
andb
pushl
or
push
dec
movsl
jg
or
or
sub
fsubl
and
mov
pop
mov
and
mov
les
adc
stos
insl
orl
cmpsl
call
loop
mov
adc
or
or
push
xor
enter
adc
jae
pop
cltd
push
or
xchg
fchs
push
jmp
lock
es
jg
in
clc
cmp
outsl
and
mov
cwtl
out
outsl
sti
sbb
inc
pop
decb
pushl
loope
out
daa
pop
loop
movsb
adc
cmp
adc
push
mov
outsl
hlt
push
pushl
data16
test
push
add
aas
cmp
inc
sar
mov
xchg
xor
adc
fnstsw
jge
lds
xor
xor
int3
repz
pop
in
jg
cld
stc
or
xlat
lcall
jp
mov
ljmp
movsb
jmp
test
pop
in
mov
ds
mov
cmp
call
or
dec
add
mov
rol
jo
xchg
cmc
outsb
mov
push
jmp
loopne
jmp
and
ljmp
aas
or
mov
add
inc
xchg
add
jmp
out
mov
shrl
pop
daa
orl
cmpb
lcall
push
adcb
pop
pop
or
int
add
aad
pop
pushf
loop
decl
cmc
cmpsb
fs
push
in
in
add
cmpsl
movsl
xlat
in
mov
pushf
incl
repnz
aaa
and
std
dec
cmpsb
cmpsb
test
addr16
push
loope
pop
mov
mov
lahf
cs
incl
not
jle
inc
lods
jg
popa
add
lea
jno
sbb
filds
int3
fistl
sbb
cmp
repnz
jns
sahf
mov
aaa
test
jbe
decl
sahf
add
xor
jge
lock
and
into
mov
nop
pop
loop
in
mov
mov
push
jns
fs
notb
jg
pop
jae
sub
shl
jmp
dec
mov
movsl
movsl
int3
xor
loope
and
dec
cmp
jg
pop
adc
cltd
add
fwait
mov
pusha
jp
mov
clc
ljmp
or
out
xor
push
or
filds
scas
sub
xor
lds
adc
gs
call
add
jne
push
mov
mov
shlb
pop
or
call
sbb
dec
test
fs
and
clc
inc
fldcw
jmp
xchg
sub
jl
add
jae
push
jmp
es
dec
call
js
xchg
ljmp
incl
pop
fldl
inc
dec
loopne
aad
xor
loope
dec
insb
mov
roll
and
scas
imul
in
fdivr
inc
repz
xor
loope
inc
xchg
incb
fwait
sub
sub
ljmp
das
mov
mov
icebp
lods
xchg
insb
test
cld
push
pusha
or
inc
cld
mov
dec
and
pop
popf
jmp
roll
mov
mov
adc
dec
out
dec
mov
ja
insl
mov
sub
inc
jmp
ljmp
xchg
div
and
stos
or
stos
stc
mov
sbb
and
insl
xor
xchg
pop
ret
or
out
aaa
push
mov
cld
call
xchg
mov
cmc
insl
movsl
mov
or
xchg
push
pop
lcall
js
xor
mov
negb
mov
push
je
les
mov
pop
jmp
mov
push
mov
xor
jnp
mov
clc
lcall
adc
pop
je
or
jecxz
fwait
icebp
movsl
repz
cmp
aas
nop
push
aas
add
cmp
insl
ss
scas
fistpl
fwait
loop
repz
call
add
sbb
loop
data16
xchg
jo
mov
mov
or
push
pop
pop
mov
xchg
push
jecxz
sbb
inc
sub
xor
aas
in
push
incl
inc
cwtl
shl
pop
sub
ficomps
punpckhwd
sahf
mov
mov
cmp
loop
dec
cmpsl
call
clc
dec
cmp
mov
adc
add
dec
hlt
rcrl
push
ljmp
push
dec
adc
stos
mov
in
push
push
lods
jb
or
insl
call
jecxz
test
mov
cli
sbb
or
jae
xchg
repz
jle
insl
std
das
cld
jmp
addps
nop
xor
pop
hlt
mov
cld
mov
rcrl
lods
hlt
or
orl
jns
std
jecxz
lods
push
xorps
sar
mov
shlb
adc
jle
shrb
ret
pushl
aam
call
int
lods
cli
jmp
xchg
popf
jp
push
lcall
jnp
outsl
mov
cs
enter
push
pushl
movsb
imul
decl
ds
imul
jb
sbb
jg
cmpl
rcrb
jne
add
lods
in
fbld
jg
cmpl
ret
das
dec
es
or
cltd
out
test
aam
sbb
cmc
jl
mov
and
sahf
adc
mov
std
aaa
cli
outsl
push
pop
lock
cmp
dec
out
rcll
cld
jmp
add
iret
sarb
dec
jnp
jg
mov
jns
sbb
hlt
call
syscall
sbb
lcall
fcoml
repz
mov
cltd
inc
mov
fcoms
jnp
push
mov
xchg
scas
arpl
jb
ja
ja
xor
add
outsl
std
incl
push
call
mov
jae
mov
sarb
mov
lahf
out
jecxz
inc
subl
stc
addr16
rorl
cld
cmp
das
cmc
fldl
or
fistps
mov
cmp
mov
das
cmp
or
mov
push
stos
lcall
pop
testl
jmp
dec
out
pop
push
mov
andb
cwtl
xchg
fwait
gs
adc
test
insl
jg
decl
enter
in
xchg
loope
xor
in
sar
mov
pop
jmp
in
mov
mov
sbb
inc
ret
cs
orl
xchg
push
aam
stos
xchg
mov
jmp
stos
outsl
jo
mov
pushl
sub
add
or
dec
adc
mov
mov
movsb
cld
test
ds
dec
mov
adc
add
loope
insl
int
les
jg
call
aas
test
loopne
xor
sub
dec
jb
ljmp
xor
imul
push
mov
loopne
movsl
cmp
sub
mov
pushl
ljmp
js
cmp
sub
pop
mov
cmc
add
imul
addr16
cmp
xlat
lea
bound
mov
mov
out
mov
ljmp
loopne
lods
adc
inc
stc
xchg
inc
or
mov
subl
and
repnz
xchg
mov
jl
or
cmp
jo
cmpsb
sbb
xchg
int3
test
mov
jl
xchg
fdivrs
popa
dec
out
les
bound
cmp
ljmp
jb
pushf
int3
cmpsl
fcmovnb
sbb
jle
jne
jle
int
sub
mov
pop
add
int
call
pushf
out
push
dec
mov
add
cmp
cmp
fistps
mov
fists
repnz
and
dec
or
xchg
xorl
push
mov
pusha
push
cs
mov
fs
pop
and
push
call
ret
adc
push
pushf
pop
sub
pop
mov
pop
incl
call
lock
aad
iret
mov
pcmpgtd
out
xor
add
pop
clc
mov
repz
decl
shr
push
sub
mov
fimuls
je
subps
clc
call
test
ljmp
insb
push
jbe
imul
mov
inc
sbb
and
jg
or
dec
dec
into
ret
pop
push
mov
pushl
lret
add
int
pop
int3
inc
mov
mov
jo
insb
imul
call
jg
xchg
mov
pop
mov
aas
push
inc
out
add
fwait
pandn
repz
xchg
pop
clc
call
sar
mov
lcall
lcall
xchg
shrb
mov
xor
mov
addb
das
mov
addr16
dec
dec
pop
ja
test
jne
push
lcall
test
mov
leave
imul
adc
pop
loop
mov
pop
jl
mov
leave
lcall
xchg
xor
es
pop
xchg
test
cs
mov
es
sbb
cs
das
popa
loope
popa
and
cmp
ljmp
adc
daa
mov
je
pusha
and
lahf
dec
cld
call
inc
fbld
pop
jno
ljmp
xor
repnz
lcall
cld
dec
mov
int3
mov
loopne
fs
inc
sti
loopne
pop
mov
lret
pop
dec
sbb
dec
les
int
pop
pop
cli
mov
sbb
mov
aam
rolb
call
cli
call
jo
mov
outsl
std
or
mov
arpl
loopne
and
sbbl
push
cmp
mov
out
fnstcw
sarb
jle
rolb
dec
lcall
das
icebp
and
xor
inc
or
sbb
mov
sub
and
loope
incl
ds
aam
mov
xor
iret
stc
rorb
ljmp
loopne
movsb
stos
je
pop
out
lea
in
push
test
inc
std
push
enter
loope
stc
and
popa
outsb
adc
bound
ljmp
mov
cmp
dec
jae
fldt
test
adc
out
call
jmp
lds
sub
pop
mov
sbb
jg
hlt
outsl
lock
clc
or
lds
mov
mov
adc
into
btr
das
hlt
ljmp
mov
xor
pushl
sbb
xor
std
jge
push
fimuls
dec
outsb
adc
xor
dec
notb
mov
call
xchg
mov
or
pop
lahf
push
jns
push
pop
cmp
xchg
imul
pop
xor
sub
mov
cmp
fs
push
shll
add
loopne
repz
fstps
test
mov
push
xchg
cli
push
jno
mov
dec
fxch
rorl
loope
xchg
push
lcall
mov
scas
inc
daa
lahf
test
popf
mov
push
testl
das
hlt
jmp
push
data16
shll
flds
imul
test
stc
call
bound
fbld
lock
jp
cli
movsb
push
mov
pop
call
jmp
pop
sbbb
pop
cmpsl
mov
xor
sar
sbb
mov
shlb
or
sub
mov
and
enter
mov
loopne
add
stos
mov
test
and
push
pop
daa
dec
int
pop
rclb
enter
dec
jp
in
lahf
and
jg
icebp
xchg
mov
sub
mov
inc
jmp
outsb
pop
shll
sahf
mov
lcall
decl
push
push
adc
fcmovne
jns
inc
dec
cmpsl
fcoms
jns
jg
sub
adc
enter
into
xor
call
popa
pop
test
adc
test
dec
imul
jmp
pop
lock
jno
mov
pop
pop
push
pusha
ljmp
stos
mov
mov
adc
notb
pop
idivb
dec
out
cmp
repnz
push
imul
ljmp
jg
inc
imul
js
sub
lret
jle
adc
incl
dec
mov
scas
fiaddl
mov
data16
neg
ja
ljmp
xchg
mov
pop
call
es
movsb
popf
mov
mov
insl
cld
das
std
ljmp
and
xor
pop
std
and
ljmp
sbb
cltd
cmp
bound
call
push
daa
pop
stos
mov
mov
jg
or
and
inc
aas
pop
xlat
aam
inc
insl
push
cmpsl
lret
sub
decl
stos
push
fisubrl
xchg
icebp
jnp
outsb
inc
push
mov
jg
dec
andb
xchg
scas
push
pop
in
imul
or
daa
mov
idiv
into
jno
daa
mov
loop
push
into
ds
sbb
mov
jmp
and
pop
jb
in
in
xchg
in
and
fdivl
insl
ljmp
sbb
push
xchg
mov
iret
in
aaa
jnp
ficompl
clc
js
or
sub
enter
decl
xchg
and
mov
fsubrp
ljmp
sub
roll
lcall
push
or
cmp
mov
inc
adc
jle
pop
cli
outsl
lcall
incl
lods
pop
dec
jl
mov
jmp
or
pop
push
cli
dec
mov
jge
sahf
ret
sbb
adc
cmp
mov
shlb
mov
in
jecxz
mov
das
fstl
lcall
xchg
arpl
lods
lcall
lcall
test
push
out
push
jae
test
mov
pop
std
dec
push
cmp
mov
xchg
sub
decl
loopne
ss
xchg
sbb
ret
lods
cmp
icebp
inc
inc
data16
in
sub
dec
cwtl
fnsave
imul
idivl
cmp
lea
ret
nop
out
fldcw
inc
sbb
loop
dec
mov
pop
ljmp
inc
cld
xor
pop
es
sub
mul
or
jl
scas
jmp
xchg
inc
xchg
adc
add
incl
mov
cmp
iret
xchg
pop
xchg
mov
xchg
pop
xor
xchg
ror
cs
cmp
sbb
pop
or
sub
or
je
sarl
dec
jle
xor
or
mov
je
xchg
orb
sbb
and
icebp
mov
xchg
push
dec
mov
xchg
fucom
cltd
nop
pop
pop
push
mov
loope
ljmp
fmulp
mov
cmp
divb
cld
push
fsubs
push
mov
je
incl
dec
xor
cmp
jl
push
mov
jl
decl
psubsw
addl
les
lcall
push
add
lock
jae
mov
test
out
inc
push
cmpsb
out
mov
sti
in
pop
outsl
cld
dec
sbb
int3
out
jg
mov
test
jne
sbb
movl
xor
ljmp
jno
ficomps
xchg
aaa
lcall
jecxz
outsl
add
xor
ljmp
iret
dec
cmpsl
mov
push
mov
dec
pop
xchg
sbb
mov
push
das
jae
sahf
gs
ja
mov
fdivrl
lds
mov
decl
sbb
arpl
adc
stos
mov
inc
leave
mov
ljmp
xchg
out
aaa
insb
mov
push
iret
jecxz
cltd
mov
jl
incl
fwait
push
aad
pop
adc
icebp
cmp
jecxz
pop
fdivrs
lret
lret
push
dec
int3
add
decl
mov
adc
hlt
xlat
jo
out
loop
aaa
pop
scas
and
iret
pop
rcrb
ljmp
lock
jecxz
fcomip
and
scas
enter
ljmp
mov
std
mov
xchg
mov
mov
adc
push
cmpsl
cmp
sti
or
clc
pop
sub
mov
push
ds
sar
pushl
and
sub
stos
out
xchg
xchg
fimull
cmp
bound
fnstcw
adc
jg
jbe
mov
into
cmp
cwtl
xor
adc
jg
mov
mov
mov
cmp
cmp
xchg
sbbb
inc
cltd
scas
js
repz
or
and
cli
decl
in
insl
data16
in
mov
in
sti
std
imul
cmp
pop
in
jo
call
cmp
adc
and
sub
xor
mov
fndisi(8087
call
pushl
add
push
mov
xor
and
test
pop
mov
fists
lret
mov
mov
xlat
or
int
in
fidivrl
cmp
es
fldenv
xchg
mov
aad
test
dec
incl
adc
mov
jg
ror
inc
cwtl
xor
fdivrp
mov
fbld
call
icebp
lock
mov
mov
ja
cwtl
iret
sbb
xchg
hlt
mov
dec
mov
sbb
hlt
call
ljmp
dec
push
jle
cwtl
popa
loopne
movsb
adc
inc
dec
popa
pop
es
ljmp
push
jo
call
pop
rolb
hlt
jp
cmp
fcmovu
jge
cmpsb
pop
cmc
daa
or
repz
dec
adc
pop
mov
dec
xchg
subb
xor
icebp
sub
loopne
adc
sub
mov
jle
fiadds
minps
js
ss
adcb
adc
aas
pop
push
pushl
stos
lret
mov
jle
add
popf
testl
jg
decl
out
jne
or
xlat
out
jae
aaa
cli
movsl
pushl
inc
loope
repnz
jl
inc
int
hlt
fucomp
pushl
sub
enter
out
and
aas
or
jg
stc
lods
mov
orl
inc
push
loop
dec
fistpl
mov
jg
adc
xorb
xor
call
xor
pop
movsb
aaa
lret
mov
cmp
cli
test
stos
sbb
xor
push
das
cld
incl
je
out
mov
fbld
or
push
mov
ds
shlb
xchg
dec
dec
sbb
push
fnstenv
in
push
xor
decl
bswap
test
xor
pop
js
mov
fwait
loop
xchg
dec
sub
outsb
dec
jmp
jle
mov
int
lds
mov
pusha
and
inc
mov
rcrb
lcall
ss
pop
jl
jl
das
or
and
call
test
in
outsl
push
out
insl
jp
fisttps
xchg
stc
in
lret
sbb
xchg
cwtl
pop
addb
lods
xor
mov
jle
mov
into
addr16
pusha
bound
push
add
mov
out
in
call
pop
push
nop
je
add
xor
shlb
push
jg
cmp
xlat
addl
mov
inc
sub
repz
sbb
call
adc
adc
mov
stc
rcr
int
outsb
insl
push
pop
insl
test
fistps
ret
jle
aas
inc
fsubrl
jns
and
sub
insl
nop
daa
and
call
add
lea
and
es
inc
mov
call
push
call
push
addr16
rcrl
jg
adc
stc
ds
jo
mov
sub
neg
and
sbb
dec
ret
push
repz
decl
pop
dec
pop
mov
push
cmp
ljmp
mov
push
fistpll
outsl
std
jmp
arpl
push
addr16
addr16
ficoms
sbb
mov
or
enter
ljmp
mov
lcall
icebp
sub
mov
cmpsl
call
jns
lret
addr16
pop
cld
icebp
jmp
sahf
fwait
lahf
jg
lcall
movswl
pop
add
imul
imul
lea
sub
jae
pop
data16
out
or
aaa
leave
loopne
hlt
pop
jno
test
lret
cs
push
cs
dec
fisubrl
adcl
test
cmp
jns
sar
pop
call
xlat
subb
sub
or
push
jge
ss
add
ss
int3
mov
dec
and
outsb
mov
mov
cmp
xor
test
dec
fisttpll
add
ljmp
pop
enter
lea
mov
push
lods
outsl
sub
rorb
xor
pop
and
pop
push
or
aam
jmp
cmp
cmpsl
jns
push
cmpsb
pop
add
imul
push
out
and
stos
andl
or
pop
je
mov
jg
xor
es
ret
adc
mov
rcr
fwait
cmp
lcall
xchg
sti
adc
push
leave
pop
inc
jnp
and
inc
pop
std
enter
dec
inc
dec
pushf
into
lret
inc
ljmp
test
test
lret
adc
sahf
stos
pushf
pop
mulb
mov
or
call
xor
sti
adcl
and
xchg
xchg
stos
mov
out
cs
jo
hlt
add
jg
call
add
mov
push
out
and
mov
aam
dec
pushl
xor
sub
idiv
push
push
pushl
ret
dec
aas
mov
ret
rcl
repnz
stos
jnp
std
add
shrl
rcll
stos
imul
cwtl
or
stos
cli
xchg
imul
add
cld
lcall
ret
pop
lds
inc
add
decl
lock
fcomps
and
xchg
imul
out
push
sbb
cli
mov
mov
loopne
lods
and
mov
outsb
ror
imul
jns
aas
mov
cld
and
rcrb
jo
cs
stos
insb
xor
incl
push
mov
movb
mov
xchg
pop
cmp
rcl
pop
pop
dec
mov
cltd
xchg
loopne
jno
cli
jae
je
sti
sbb
and
jmp
lods
lret
pop
loope
loop
pop
iret
popf
jb
add
push
popf
outsb
xor
insl
sub
std
decl
negl
fsubrl
cli
pop
lret
adc
mov
jne
es
jmp
xor
test
and
mov
test
xor
mov
pop
fs
mov
scas
lds
repz
addl
xrelease
clc
ljmp
push
bound
jb
xor
mov
push
sub
jecxz
lds
rolb
pop
fcoms
dec
iret
cli
pop
add
fists
imul
mov
pushf
mov
mov
xchg
jno
pop
aaa
call
stos
pop
sub
dec
and
test
xlat
out
mov
fistl
inc
adc
pop
mov
mov
jge
mov
rorl
mov
nop
ret
movb
fldz
jle
inc
pusha
std
fistpl
aam
fsubp
pop
push
icebp
call
xor
sarb
test
popa
movsl
icebp
mov
mov
xchg
ljmp
jmp
sbb
add
jecxz
inc
mov
imul
incl
imul
mov
andb
xchg
cwtl
lods
stos
push
xor
shlb
repnz
cld
test
inc
jmp
int
jg
pop
dec
decl
dec
jbe
repnz
adc
lret
push
mov
loop
ljmp
sar
test
mov
push
popa
and
or
jbe
or
in
lcall
jns
lds
cmp
std
movsl
cmc
xchg
mov
hlt
orl
cmp
mov
insb
popf
fsubs
mov
pop
xor
ret
enter
in
addr16
or
fsubrl
outsb
xchg
idivb
and
jge
ud0
jg
xor
mov
lea
cmp
fistl
sti
outsl
in
decl
movsb
loop
xchg
outsl
imul
aas
inc
pop
sahf
xchg
or
into
jg
or
inc
repnz
cmp
or
fildl
dec
and
into
lea
pop
cli
call
cmp
call
ja
mov
mov
std
adc
xchg
xchg
pop
std
sub
pop
js
adc
mov
movsb
push
aas
inc
out
pop
cli
mov
int
mov
rcrb
dec
cli
pop
test
sub
std
jno
repnz
loop
push
cmc
fists
sti
mov
xchg
add
inc
cmp
pop
loopne
and
push
push
into
daa
adc
sahf
mov
cli
decl
in
cltd
aam
rorl
xor
jno
fimull
dec
jl
fmul
and
daa
push
ss
mov
out
decl
out
xchg
add
sti
cld
test
lcall
sbb
ds
in
jmp
fldl
sbb
mov
fucomip
push
movsb
dec
sbb
cmpsl
sbb
push
in
lds
fidivs
or
lret
in
in
sub
hlt
into
rorl
sub
xchg
and
pushl
xchg
insl
pop
sbb
cwtl
or
mov
or
add
cmc
fistps
push
scas
testl
cld
fnstsw
out
inc
loope
dec
sar
jmp
jbe
bound
push
cmp
mov
pushl
pop
cmp
pushf
jb
and
ret
and
mov
ja
mov
cld
shlb
add
ljmp
std
push
int
inc
stos
mov
lahf
cmp
sbb
push
shl
fsubl
mov
das
xor
movl
into
push
call
mov
pop
adc
out
gs
mov
pop
mov
sbb
mov
jmp
movsb
sub
out
jle
repnz
out
int
out
xchg
add
sbb
sub
call
add
ret
adc
fsubrl
out
paddw
ficomps
outsl
ljmp
gs
sar
sub
movsl
rcll
add
out
pop
fldt
leave
scas
jp
dec
imul
call
insb
inc
xor
lret
cmp
mov
fcmovnbe
sbb
das
push
dec
sahf
pop
lds
sbb
movsl
pop
push
mov
outsb
pop
jmp
jl
mov
inc
ret
cltd
mov
adc
pop
pop
mov
mov
aaa
clc
lcall
mov
int3
out
in
mov
sub
test
out
add
add
ljmp
ret
out
fsubr
arpl
fisubl
xchg
mov
in
dec
mov
dec
notl
fnstsw
cld
mov
imul
lret
push
enter
movsl
js
mov
call
and
mov
xlat
scas
rorl
shrd
jno
jmp
push
movsl
add
cli
testb
lret
adc
or
aad
cmp
ljmp
in
push
mov
mov
leave
xchg
cwtl
daa
cmc
jb
aas
test
incl
inc
hlt
sub
cmc
pusha
cmp
les
xchg
pop
sarb
pop
jmp
lcall
in
in
cmp
xchg
pop
pusha
es
cwtl
js
test
call
dec
or
sub
jmp
fmuls
pop
test
mov
mov
notb
fmuls
push
gs
adcl
jmp
inc
test
lret
sub
incl
ljmp
getsec
aad
mov
xchg
ret
out
jbe
in
xchg
push
lock
jmp
sub
mov
mov
push
test
push
rcrl
pusha
fnstenv
inc
or
out
jg
push
pop
stos
push
rcr
movsl
sub
ret
clc
sbb
cmpsl
test
and
lcall
add
data16
jbe
cld
fdivrs
sub
pop
popa
add
test
jmp
mov
adc
xchg
jo
pop
lret
out
xor
fnstenv
add
mov
jl
mov
movsb
lret
out
jmp
mov
cs
loopne
pop
cli
cmp
sub
inc
in
jno
pop
or
leave
mov
push
cli
fstl
cmp
push
fcomp
popa
dec
imul
push
cltd
ljmp
mov
decl
out
sub
jnp
fbstp
data16
repnz
lods
sbb
mov
jle
sbb
mov
dec
or
das
pop
jecxz
leave
jmp
ret
dec
cltd
jb
call
pop
lcall
jne
xchg
insb
push
pop
dec
rol
aad
pop
ds
lcall
out
imulb
jne
dec
ds
pop
enter
cmp
cltd
adcl
sti
popf
jmp
pop
fbld
es
dec
les
or
sbb
jmp
jmp
cmp
add
nop
jb
arpl
aaa
and
notrack
int
or
mov
ljmp
xorl
ds
leave
fidivs
xchg
xor
mov
aas
mov
fadd
insb
out
pushf
outsb
dec
fstpl
rol
gs
rcrl
or
cmpsl
and
daa
push
insb
std
call
shll
rcrb
pushf
fwait
ds
popa
ja
inc
jge
cli
ljmp
nop
fcoms
sub
inc
xchg
fs
pop
xor
fldenv
pusha
cmp
insb
pushl
mov
add
dec
movl
lcall
or
push
decl
movsl
loop
jno
clc
mov
jmp
ja
adc
inc
mov
adc
leave
xor
mov
test
mov
fdivr
jmp
xchg
mov
jg
popf
pop
adc
int3
aaa
xor
imull
cmc
decl
outsl
xor
mov
pop
movsb
mov
pop
cmpb
sub
loopne
sbb
sbb
mov
loop
fidivrs
icebp
mov
fsubl
and
pushl
jne
push
push
mov
push
aam
loope
xor
out
lock
decl
sub
out
mov
sbb
je
ss
lods
cltd
xchg
lock
incl
or
nop
mov
cltd
leave
ss
sbb
popa
mov
dec
mov
dec
fwait
icebp
sbb
jmp
adc
ljmp
jg
rcrb
fdivr
cmp
dec
fidivrl
stos
xchg
inc
in
hlt
jg
pop
movsb
stos
aaa
mov
xor
cmc
sub
push
or
jg
sti
repz
jge
jmp
jmp
ds
arpl
jmp
push
push
adc
scas
mov
loop
fimull
xchg
xchg
ret
enter
test
int3
out
cmpl
sahf
inc
mov
aad
cwtl
or
decl
inc
push
xor
jae
or
push
lods
sub
int
pushf
dec
mov
test
fsubr
call
lock
inc
mov
inc
sbb
mov
sbb
loopne
in
inc
js
lret
push
inc
pop
lods
jnp
jecxz
add
inc
cmp
out
xchg
lock
lock
and
jg
inc
mov
cmp
cmc
inc
push
movsb
jle
mov
jle
mov
jg
imul
inc
jo
cmpsb
sub
aam
and
adc
sub
orl
or
xchg
scas
je
nop
sub
xor
mov
pop
push
mov
mov
xlat
lcall
aad
mov
in
xchg
faddl
dec
fisubrl
dec
or
sub
push
xor
movsl
decl
cmc
shrl
fidivrs
cmp
aad
cmp
mov
sbb
xchg
jl
inc
lcall
mov
cltd
shll
lret
stc
pop
push
iret
ror
repz
subl
jb
ljmp
add
mov
mov
adc
sub
cs
xor
loop
jnp
add
inc
lcall
call
imul
pop
mov
or
lcall
call
push
jp
mov
arpl
call
aam
xchg
rcr
xchg
add
and
pushf
das
mov
icebp
test
ret
mov
pushl
sub
test
stos
xchg
ss
mov
dec
pop
mov
push
aaa
mov
jmp
decl
xchg
call
testl
fdivrl
incl
sub
repnz
iret
or
scas
and
fs
or
push
bt
ljmp
or
xchg
pusha
mov
cmp
adc
push
repz
fstpl
decl
push
ja
sbb
in
idivl
or
mov
incl
inc
sub
fistps
aaa
popa
daa
jge
movsb
mov
decl
cld
call
imul
shrl
push
enter
addl
test
add
jb
jbe
sti
jne
stc
pop
testl
out
test
cmp
sub
fbld
and
xor
cmp
or
and
adc
mov
outsl
ret
sahf
mov
mov
out
notb
lret
dec
dec
cmpsl
cmp
mov
fs
add
das
jmp
dec
inc
mov
int
mov
push
mov
push
out
dec
out
rcrb
incl
movsl
mov
push
leave
push
rcl
std
fidivrl
xor
or
push
pushl
push
or
les
daa
testl
call
clc
xlat
sarb
pushf
push
clc
xchg
add
subl
roll
lcall
adcl
xchg
push
xor
sub
push
jecxz
inc
inc
jmp
push
outsb
lods
mov
xor
icebp
js
push
push
xor
xchg
fdivrl
sar
sar
rcll
pop
ficoms
inc
aam
out
inc
xchg
jo
pop
cld
mov
clc
cmovp
mov
idivl
pushf
pop
scas
fnstcw
jp
jmp
xlat
cld
mov
sbb
sarl
xabort
incl
sarl
mov
xor
and
add
xor
mov
mov
jp
pop
push
mov
stos
dec
out
outsl
dec
fistpll
cld
pop
pop
lock
xchg
test
shl
add
lea
cmpsl
add
ss
jb
xchg
mov
add
sbb
jb
mov
mov
mov
je
lds
shlb
test
xchg
shr
call
ficomps
sub
rcll
xor
faddl
sti
mov
cmpsl
les
icebp
incl
jg
push
mov
aam
ror
jecxz
imul
push
xchg
outsb
in
nop
cmp
jb
pop
jb
jae
je
jmp
idiv
lcall
or
xchg
addr16
lret
mov
fidivl
pushl
ss
mov
push
fisubrl
out
push
adcb
aam
cwtl
adcb
sahf
ja
int
iret
cmp
out
test
push
test
inc
ds
and
lcall
or
dec
addb
mov
enter
aaa
outsl
leave
movsl
test
dec
sar
dec
cld
outsl
icebp
ljmp
pop
jg
xlat
add
cli
mov
pushf
pop
push
aaa
dec
push
fisubs
xchg
jecxz
pushl
mov
lds
xlat
mov
arpl
pushf
lea
cwtl
jne
test
pushl
cmp
pop
mov
xchg
scas
insl
sbb
jg
or
daa
gs
cmpsb
mov
in
jb
daa
mov
arpl
loopne
orl
int3
icebp
outsb
mov
xor
jg
jg
fildll
or
push
inc
pop
cmp
les
inc
jg
int
sub
div
cmp
and
arpl
mov
mov
or
and
adc
sbb
push
iret
xchg
divl
cmp
mov
frstor
or
cmpsb
in
and
push
dec
xor
add
insl
addr16
scas
in
dec
cmp
fwait
sbb
leave
out
mov
mov
sbb
shll
mov
stos
mov
orl
insb
xor
mov
mov
mov
repz
daa
cmp
add
xor
mov
ds
lcall
testl
loope
mov
in
ljmp
lret
fucomip
sub
xchg
popa
lret
push
mov
loope
lcall
out
jo
testl
mov
xor
pushl
jp
or
push
and
bound
inc
fwait
mov
jne
mov
push
lcall
mov
jle
push
insl
lock
inc
aaa
roll
jg
cmc
jno
cmp
imul
jg
incl
in
test
lret
mov
mov
test
loop
pop
and
mov
mov
mov
lret
dec
mov
jg
ffreep
fmulp
adc
adcl
pop
lcall
pusha
int3
push
jle
icebp
mov
jmp
fs
or
incl
rol
and
xchg
mov
push
inc
jmp
jno
pop
jp
jo
jae
cmpb
pushl
or
jle
push
inc
inc
add
push
testl
jmp
in
incl
push
popa
mov
cmpsb
stc
shlb
daa
loope
or
sub
fwait
cltd
ljmp
call
mov
push
leave
dec
xlat
leave
lahf
push
inc
add
ljmp
jb
pop
add
inc
xor
xchg
into
test
in
dec
jae
out
ss
xchg
fsts
decl
in
sarl
nop
adc
cli
fcmovbe
js
in
lcall
decl
pop
test
out
push
xchg
and
push
push
cli
dec
dec
mov
xlat
xchg
orps
aas
loopne
jg
std
xchg
test
mov
mov
mov
rcrl
jb
sbb
decb
decl
ljmp
adc
inc
outsb
jle
or
decb
inc
inc
mov
fwait
jns
fcoml
call
scas
and
xorb
mov
fisttps
sub
adcl
decl
adc
sbb
and
inc
repz
imul
dec
std
decl
mov
push
cmpb
adc
scas
cmc
sub
loope
jmp
sbb
sub
in
cmp
add
mov
ljmp
std
sub
add
neg
pop
and
jle
mov
add
jmp
add
outsb
addb
lods
test
decl
dec
sbb
dec
push
notb
mov
shlb
or
outsl
mov
xchg
pop
mov
call
lea
gs
mov
and
loope
sar
xchg
cmc
mov
pushf
cmpsb
inc
mov
mov
mov
push
inc
into
ljmp
push
mov
fldenv
push
scas
dec
and
in
and
ljmp
sbb
rorl
testl
pop
out
jge
cld
cmp
sti
rorb
data16
call
sbb
sub
mov
loop
xchg
sar
pop
push
sub
pushl
or
jl
push
test
jmp
mov
jns
lds
das
std
or
mov
or
or
xor
mov
pushl
fsubr
inc
cmp
mov
scas
add
jp
movsb
sbb
mov
mov
inc
mov
ljmp
or
je
call
mov
dec
out
arpl
sub
mov
lds
mov
add
sub
add
push
dec
mov
je
testb
dec
out
push
pop
incl
cmp
sti
out
ds
pusha
call
add
inc
push
ret
call
fwait
mov
add
sub
jmp
mov
fnsave
sub
xchg
or
xchg
test
inc
add
push
push
push
adc
stos
mov
scas
jne
cmp
jne
lea
loopne
imul
jne
insb
inc
insb
mov
xor
or
gs
mov
je
popf
xchg
add
or
or
loopne
mov
jp
or
cmpsb
pop
add
out
fcmovnu
or
call
jle
push
mov
add
push
fwait
in
add
inc
sbb
push
add
pushl
push
push
call
cmp
jne
add
dec
incb
push
push
mov
inc
test
pushl
mov
xor
or
je
js
lods
cmp
xchg
or
outsl
cmp
je
inc
dec
jmp
mov
or
add
rcrb
std
pop
adc
add
add
aaa
jmp
pop
pop
pop
and
pop
dec
mov
add
sti
out
iret
push
sar
rep
popa
loope
rep
pop
movsb
add
inc
or
test
xchg
xor
sbb
jg
in
and
or
shlb
ret
mov
adc
mov
dec
je
ret
fisttpll
jmp
or
in
in
shr
sti
add
je
add
sub
or
outsl
mov
add
jmp
push
adc
fisttpl
push
or
dec
add
decl
mul
mov
lcall
adc
repnz
or
pusha
jg
mov
clc
lods
fsubrp
icebp
mov
inc
add
sbb
insb
outsb
or
inc
sbb
sub
or
mov
mov
inc
pop
push
and
mov
insb
fstpt
xor
sbb
cli
sarl
test
push
movsl
sub
ret
add
jne
add
inc
js
add
inc
push
lods
cmp
dec
in
add
int3
cwtl
cli
jne
and
js
sbb
pop
pushf
mov
pop
push
jmp
loope
arpl
cmp
dec
shl
xchg
mov
mov
add
mov
add
pop
jmp
xor
enter
sarl
xorl
jmp
add
adc
or
jmp
mov
mov
cmp
push
push
add
cs
dec
push
push
movzwl
add
ljmp
cmp
jl
lock
sub
inc
or
clc
jne
nop
out
decl
testb
je
shll
or
and
cltd
in
out
das
in
inc
lods
mov
loop
or
or
in
jl
or
or
cmp
imul
ret
push
jae
test
lea
sub
xor
or
mov
test
adc
pop
call
xor
xor
mov
in
xchg
sub
pop
mov
test
lods
add
push
aam
inc
js
je
jne
ja
mov
sbb
dec
punpcklwd
inc
outsl
js
add
jo
pop
jp
jb
outsb
je
or
add
and
push
dec
push
mov
icebp
std
add
and
fs
or
jb
sub
fildll
outsl
sub
and
jne
and
stos
popa
je
mov
ja
mov
xor
jns
popa
insl
imul
in
out
add
jb
cmp
imul
insb
push
jne
push
mov
sub
or
adc
shlb
je
add
repnz
jne
ret
add
lock
inc
mov
add
shll
rcll
add
add
stos
lods
sbb
and
push
push
or
xchg
cmp
fcoms
pop
mov
addl
clc
loopne
inc
and
sub
push
call
out
or
xchg
and
push
push
sbb
or
imul
lods
shrb
aaa
add
and
add
push
fnstsw
add
add
or
or
adc
sbb
sub
cmp
pusha
jo
mov
rclb
idivb
adc
push
inc
popa
pushl
or
or
or
or
movups
adc
inc
rdmsr
adc
rcll
push
push
cmp
jb
fcmovnu
cmc
xor
mov
mov
inc
mov
xchg
inc
mov
jl
shl
and
mov
outsl
mov
push
mov
cmp
jae
pop
mov
es
push
sarb
sub
shr
mov
outsb
sarb
add
pop
mov
mov
add
andb
sbb
mov
mov
or
in
mov
addr16
or
js
outsl
xchg
push
mov
inc
std
outsl
sub
div
stos
mov
jbe
out
mov
jbe
xor
mov
mov
pop
int
std
filds
inc
inc
cmp
mov
jb
mov
sub
ds
mov
incl
mov
add
lea
adc
inc
xor
shl
add
sbb
add
mov
xor
jge
decb
insb
push
pop
xor
cmp
mov
mov
insb
jl
mov
fstpl
jne
jb
mov
mov
and
mov
mov
pop
pop
loope
fstps
adc
shr
ss
jne
lret
sahf
stos
sub
fnstsw
faddl
add
or
push
lcall
loopne
xchg
je
pop
pop
pop
xor
sbb
xor
ret
dec
adcb
jbe
mov
adc
xor
and
push
mov
mov
cmp
jo
lea
inc
mov
cmp
ja
inc
mov
int3
push
test
pop
inc
jo
jne
push
jno
add
jb
mov
mov
inc
mov
test
dec
or
fstp
push
leave
push
scas
ret
pop
lret
stc
or
fnsave
adc
lret
xchg
pop
insl
sbb
shrb
and
sub
push
inc
mov
out
jmp
cmp
jae
mov
sub
rorb
sub
xor
mov
inc
and
or
adc
mov
int
or
mov
mov
xor
outsb
cmp
add
sbb
outsb
ret
jb
jl
loope
jae
xchg
inc
add
mov
sbbl
or
xor
aas
mov
add
idivb
call
xor
mov
and
or
adc
clc
cmp
xchg
inc
pop
add
lea
push
push
fnsave
mov
sbb
mov
mov
xor
or
add
rcrb
int
mov
ss
call
shr
add
lock
sbb
or
inc
add
addb
mov
call
add
aaa
jbe
mov
push
add
or
push
or
stos
call
xor
mov
fnstenv
lea
test
int
sub
push
pop
mov
mov
and
xor
and
cmp
xchg
negb
aaa
mov
adc
adc
lea
mov
call
in
fwait
or
adc
ret
testl
in
sbb
jae
mov
decl
and
sbb
inc
jmp
jne
push
pop
mov
std
jg
jbe
rolb
jle
cmp
dec
xor
dec
mov
test
adc
inc
adc
inc
mov
pop
or
pop
jmp
mov
dec
lahf
jne
in
adc
mov
lea
decb
aad
stos
lea
and
mov
mov
sub
mov
xchg
and
cmc
movb
add
add
or
jmp
sbb
push
movsb
push
out
rorb
imul
jecxz
pop
sub
imul
int3
or
or
xor
adc
xchg
dec
adc
cmpl
clc
inc
cmp
mov
inc
mov
push
and
sub
cmp
add
and
shr
pop
push
mov
es
pop
push
sub
xchg
dec
mov
rorb
push
pushf
xor
cmpsb
mov
xorl
pop
jb
push
or
aad
or
pop
daa
rclb
iret
pop
fsubrl
ljmp
loop
sub
leave
imul
hlt
ret
outsb
jmp
mov
mov
pushf
fwait
pop
jmp
xchg
xor
das
jl
cli
je
cmp
jb
fstl
std
xchg
jb
push
push
inc
add
stmxcsr
push
sbb
mov
mov
mov
dec
aad
sar
imul
mov
cmp
bswap
add
shr
inc
int
out
data16
out
sbb
sbb
and
decb
add
and
push
inc
add
fsub
xlat
in
sub
mov
scas
cs
jae
clc
sahf
xchg
push
pop
ljmp
mov
add
xchg
adc
in
fcoms
std
mov
sub
inc
in
mov
push
adc
cld
aaa
fdivr
lea
cmp
scas
jae
shrb
roll
adc
sub
mov
pusha
sti
sub
test
fistpl
sub
subb
inc
rorb
sub
add
ffree
outsl
sbb
add
inc
ljmp
and
mov
inc
aad
jb
adc
call
insb
gs
popa
outsb
and
adc
fs
aad
ret
inc
pop
enter
sub
xchg
inc
sub
call
push
in
iret
test
test
pop
mov
pop
mov
jle
stos
movsl
psllq
pop
in
outsb
cld
sub
inc
nop
lods
addr16
jl
cmpsl
mov
xor
stos
jnp
enter
add
or
jp
pop
inc
mov
add
adc
xchg
shlb
push
scas
test
dec
mov
imull
nop
push
add
pop
sub
daa
pop
inc
push
or
addb
rorl
add
daa
jb
fsubs
ret
add
mov
daa
pop
mov
add
fsub
jae
lahf
mov
xchg
pusha
add
xchg
daa
and
gs
ja
cltd
mov
cmp
push
adc
dec
push
mov
jbe
mov
mov
mov
dec
cs
and
in
push
lock
push
scas
call
or
and
jne
adc
mov
outsb
jp
idivl
repz
lock
test
ss
neg
xlat
cmp
or
call
pop
push
loopne
icebp
xchg
xchg
fcoms
mov
push
scas
and
mov
mov
mov
lods
xchg
std
sbb
dec
dec
call
rcrb
into
mov
cmp
jmp
jbe
mov
dec
pop
dec
push
stc
dec
jge
pop
xor
loopne
out
cmp
out
stc
insb
jb
cmp
adc
arpl
out
mov
neg
push
imul
add
decl
lahf
sub
xorb
inc
test
stos
js
or
test
and
inc
mov
mov
adc
out
or
in
outsb
in
call
or
popa
ljmp
decl
mov
xchg
mov
inc
repnz
loopne
inc
or
adc
xchg
inc
fistpl
ja
fidivl
ljmp
pushl
sub
xchg
ret
push
dec
or
adc
nop
sti
rcrl
cli
dec
pop
xchg
loopne
adc
push
pop
sub
aaa
pop
into
and
pop
push
mov
pop
sbb
fistps
ss
xor
inc
cmpsb
inc
lock
lcall
adc
iret
jmp
cmp
int
adc
inc
adc
jp
xchg
jg
out
popa
inc
sahf
popf
mov
decl
aam
xor
xchg
pushf
test
mov
lret
push
mov
stc
mov
mov
lcall
and
mov
sbb
adc
outsb
xor
jl
rolb
std
pop
fs
mov
xchg
mov
stos
fsts
lret
orl
and
push
sbb
das
inc
cmp
jo
pushl
cmp
push
mov
repz
adc
xor
push
out
lcall
add
ret
sbb
mov
or
loopne
fsubrl
dec
add
aam
xor
ficoms
or
jmp
push
mov
mov
mov
test
stc
insl
push
xorb
mov
xor
sarl
lds
jmp
jecxz
jecxz
or
pop
sbb
cli
lcall
lods
in
ret
inc
int
dec
sub
movl
outsl
jg
daa
mov
dec
jmp
inc
lock
mov
jl
mov
dec
imul
imul
insb
pop
cltd
sub
pop
sahf
xor
iret
or
clc
mov
mov
lahf
aaa
cld
dec
iret
cmp
cli
call
or
push
shl
xchg
dec
nop
mov
jg
mov
pushl
in
and
mov
mov
ljmp
js
lods
call
in
xor
jne
fcmovnbe
into
and
lahf
cmp
or
inc
aas
jb
call
lcall
jae
fs
pop
fsubrl
pextrw
mov
mov
adc
test
lods
jb
mov
xchg
jmp
mov
pop
imul
idivl
inc
or
gs
scas
in
stos
xorl
lcall
adc
or
sbb
loope
aaa
ret
jns
jge
mov
push
dec
dec
sbb
ds
pop
fs
mov
lcall
std
lcall
fmull
push
mov
mov
ljmp
call
push
stc
mov
sbb
pop
inc
lock
insl
sub
and
outsl
sti
out
sub
pusha
shrl
insb
mov
das
loope
repnz
xchg
lds
jae
into
cmpsl
jne
ljmp
mov
lret
pop
es
xchg
pop
push
push
sarb
loope
in
outsl
lcall
addr16
jae
je
mov
jmp
and
jbe
outsl
popf
cmc
and
ljmp
mov
dec
mov
pop
test
or
outsl
fcoml
cmp
pushl
clc
dec
pop
shr
push
sbb
and
call
mov
lds
scas
or
cmp
call
gs
xor
push
sarl
adc
jmp
cmp
ds
mov
jl
loope
lock
xchg
divl
adc
add
clc
call
hlt
xchg
pop
push
pop
cmc
push
test
jmp
mov
jns
test
pushl
test
push
js
shrl
or
ss
jne
aas
cltd
add
xchg
sti
dec
hlt
jb
stc
test
cmp
xor
daa
dec
pushf
rorb
out
add
mov
dec
ss
jl
ret
mov
scas
pop
dec
dec
out
out
mov
aad
xchg
iret
sar
jmp
call
pushf
xor
movsb
mov
fisttpll
push
xchg
mov
mov
pop
ljmp
mov
inc
mov
incl
into
dec
fsubrl
ss
mov
pop
fildll
sbb
das
lock
decl
bound
out
push
inc
sbb
shrl
fisttps
mov
cmp
pop
movaps
or
aas
mov
adc
jg
out
adc
aam
enter
ficoms
xchg
lds
dec
xor
dec
cli
inc
inc
call
push
sti
jp
pushf
fucomip
notb
movsb
aad
mov
sub
gs
jne
aaa
jno
mov
adc
jmp
push
lcall
into
push
jnp
jb
lods
mov
dec
jl
sub
scas
push
daa
sbb
lcall
dec
xchg
ja
add
xor
cmp
mov
std
jo
adc
or
dec
repz
jge
fidivrl
lock
push
inc
push
into
sub
hlt
and
js
cmp
cmp
out
dec
and
lahf
ljmp
fdivl
pop
lret
jae
not
inc
mov
mov
mov
fdivs
inc
fdivr
jmp
dec
je
rol
pop
mov
fcmovnb
push
out
inc
mov
xorl
xchg
xor
es
call
dec
jmp
jge
mov
mov
or
mov
lods
dec
movsl
sbb
jmp
orl
in
clc
add
cltd
sbb
fdivrp
pop
jmp
ljmp
jne
sbb
xor
adc
cmp
mov
rcrl
ljmp
jge
mov
fimuls
mov
clc
daa
out
mov
call
enter
sar
mov
sub
mov
in
mov
mov
subb
push
jp
stos
xor
in
test
cwtl
movsl
or
stos
or
push
sub
call
xor
mov
jmp
pop
cli
xchg
cmpsb
icebp
jl
sarl
addr16
jnp
gs
add
adc
jle
mov
lcall
loop
fs
mov
stc
icebp
push
scas
cmp
ljmp
sub
push
jle
mov
lods
loop
out
add
lods
sub
adc
or
stos
aaa
clc
pushl
jbe
sub
push
jmp
xchg
ret
fsts
lods
ljmp
std
push
and
in
dec
data16
cld
push
lcall
mov
aaa
dec
ret
call
sbb
stc
out
and
ret
xor
ret
push
mov
je
ljmp
cld
out
cltd
mov
iret
adc
movsb
shr
scas
dec
jp
lea
dec
cld
cmpsb
jg
das
into
mov
xchg
loop
divb
jnp
sar
call
mov
add
or
sub
pop
xchg
aam
insl
lock
adcl
xchg
cwtl
stc
sub
xchg
aam
cmp
or
mov
xchg
and
xlat
mov
dec
out
pop
mov
jmp
mov
mov
jle
aaa
test
sbb
dec
cmpsb
shll
decl
jae
adc
and
mov
es
cli
inc
int3
fcomip
out
ss
call
sbb
lea
lock
loop
inc
dec
rclb
jmp
js
std
movsb
int
js
ret
cld
and
push
sub
push
rorl
dec
mov
xor
pushl
xchg
leave
push
jo
in
jle
jp
lods
mov
mov
outsb
incl
lcall
push
jge
sarb
jg
nop
sbb
lret
aad
call
aas
daa
cmp
mov
mov
mov
mull
fwait
hlt
mov
mov
pushf
and
loope
in
cld
inc
xchg
stos
pop
pop
pop
lods
dec
mov
call
mov
repz
ffreep
in
nop
aad
decl
cld
jmp
mov
movsl
jb
aam
dec
or
leave
inc
sbb
mov
push
lods
sbb
jmp
mov
xchg
jle
repnz
lea
lcall
cmp
push
cld
dec
and
fdiv
mov
or
push
bound
rclb
test
jmp
xchg
clc
ljmp
sub
xor
fcomi
adc
jp
enter
fucomip
pushl
std
loope
mov
aaa
cmp
adc
and
mov
sbb
mov
mov
pop
xor
je
insl
add
decl
sbb
cmp
addr16
pop
scas
pop
fstpl
xchg
lock
mov
js
fidivs
dec
sub
mov
test
sub
jg
jno
cmp
jmp
dec
pusha
cmp
stos
sub
fwait
into
pushl
mov
adcb
xchg
or
or
push
cmpsl
jb
rcl
dec
sbb
or
mov
data16
jl
xorps
stos
add
push
movsl
repnz
lcall
es
push
insb
xchg
or
out
sub
or
js
mov
push
dec
orb
mov
mov
xchg
pushl
rorb
shrl
decb
stc
mov
dec
xchg
sbb
mov
sub
mov
adc
mov
mov
sbb
int
mov
dec
pop
out
roll
fwait
fwait
cmp
pop
aad
cmp
shll
mov
jmp
loopne
lahf
mov
pop
inc
cmp
gs
push
aas
or
fucomip
sti
adcb
insb
sbb
cmp
out
and
jg
aaa
pop
mov
sub
roll
call
add
stos
cmp
pop
adc
dec
pop
sub
ret
std
mov
dec
lahf
or
lds
jge
ljmp
incl
pop
scas
push
aam
mov
insl
aas
push
and
test
retw
mov
incl
dec
push
jl
xor
insl
jne
daa
fwait
scas
mov
out
or
ljmp
mov
int
sbbb
adc
dec
xor
in
jno
shlb
or
lcall
bound
je
out
push
cmp
push
insb
push
shll
sbb
push
pop
clc
lcall
sub
daa
add
into
repnz
mov
outsl
cld
push
int3
mov
cmp
inc
xor
lods
incb
fbld
xor
mov
pop
clc
dec
push
mov
mov
add
adc
push
pusha
mov
test
mov
test
mov
and
fisubs
and
sbb
sbb
lret
jnp
scas
add
les
add
push
test
shlb
test
adc
stc
pusha
fcomps
ljmp
rorl
divb
out
cld
pop
fcomps
fisubrs
ljmp
in
aam
push
mov
out
adc
outsl
stc
and
cmc
add
lock
sahf
lret
mov
cmc
cmc
or
loopne
mov
jo
add
sbb
jmp
mov
jge
pop
pusha
iret
leave
pop
aaa
add
mov
mov
js
shrl
into
xchg
call
pusha
inc
mov
lods
and
lds
or
push
fbld
xorl
aad
push
add
pushl
xor
inc
cltd
lret
add
and
lret
decl
inc
outsb
scas
ljmp
leave
dec
negb
lea
out
call
jle
pop
int
add
sub
push
roll
ds
push
mov
xchg
test
cld
xor
ffreep
pushl
cli
cmp
and
int3
lods
lcall
mov
cmp
push
outsl
push
fistps
rol
call
push
adc
mov
and
lods
mov
loopne
lcall
imul
test
dec
imul
xchg
mov
sub
and
adc
out
notb
shll
fdivl
fimuls
int3
jecxz,pt
mov
cmp
lods
jmp
out
sbb
cmp
hlt
jb
sti
inc
push
jmp
in
stc
lods
test
andl
lcall
jle
bound
mov
sub
int
push
test
outsl
mov
popl
les
out
ficoms
jp
mov
in
lcall
ds
pop
dec
fcomi
movsl
imul
stc
mov
shll
fisttpl
cwtl
lcall
incl
sti
icebp
imul
ret
sub
cwtl
cltd
mov
das
xchg
ror
lea
lahf
mov
clc
ds
or
jmp
push
and
and
adc
dec
ret
add
fwait
bndldx
fwait
sbb
fnsave
je
outsl
sahf
repnz
push
xchg
dec
mov
or
dec
das
sti
rclb
sub
inc
repz
mov
sbb
test
inc
fimull
fcoms
and
mov
lcall
xor
daa
cmp
pop
dec
ja
and
cmp
rolb
sbb
jg
cmp
mov
das
adc
lock
ja
aas
imul
in
push
fucom
and
outsl
icebp
jp
mov
sub
insl
xor
rcrl
mov
int3
pop
cli
call
cmp
cmp
fcomps
push
sbb
jmp
cli
mov
shlb
mov
lcall
ljmp
jecxz
pop
loope
dec
and
pop
mov
push
insl
adc
dec
or
mov
lret
ja
lcall
push
sub
incl
xchg
enter
outsl
es
jb
gs
sahf
mov
insb
decl
mov
jge
aad
xor
dec
sahf
sub
hlt
xor
addl
mov
insb
ljmp
adc
lock
cmc
push
mov
push
aam
faddl
mov
push
mov
jne
ljmp
into
je
jne
lods
clc
cld
mov
sbb
and
and
lods
test
sbb
ja
ljmp
push
cmp
loop
scas
ds
xlat
int
xlat
std
test
out
jbe
cld
inc
cld
aaa
cli
dec
jnp
xchg
push
out
incl
std
loopne
dec
lock
incb
incl
push
bound
xor
bound
rcr
ret
outsl
mov
out
dec
dec
mov
sbb
inc
scas
movsb
sub
jp
jg
push
imul
shlb
pop
fs
xchg
andb
adc
xor
push
adc
push
mov
or
je
lcall
call
or
mov
mov
jg
hlt
push
inc
std
loop
rcrl
test
aaa
jge
lcall
jp
and
sub
stc
and
inc
adc
clc
sbb
sub
mov
and
or
loop
nop
das
push
mov
mov
pop
fldlg2
inc
fidivrs
jecxz
mov
popf
insl
push
inc
push
sar
fildll
xor
imul
mov
int3
pop
push
mov
push
add
out
ljmp
mov
lret
cmp
bound
nop
fmuls
ljmp
test
fcomps
in
loopne
lret
jbe
mov
jb
imul
push
inc
decl
mov
mov
jle
or
fiaddl
enter
push
scas
negb
or
out
cmp
lcall
mov
fisttpl
call
mov
iret
sbb
out
xor
push
sub
inc
stos
stos
jp
sbb
jg
jmp
repnz
dec
mov
lcall
dec
imul
lcall
shl
inc
push
stc
jl
mov
fiaddl
je
xor
push
movsb
subb
test
push
std
call
xor
adc
cli
xchg
popa
dec
arpl
call
decl
mov
xchg
jl
roll
or
mov
jmp
in
je
and
mov
outsb
roll
or
into
fisubrs
cmp
jge
pop
jno
bound
push
test
cmp
or
test
xor
std
mov
inc
xlat
fadds
lea
jo
out
jl
aad
fcoml
lock
fnstsw
ret
push
cmp
mov
popf
in
push
jl
jbe
inc
ret
es
sbb
or
sbb
call
inc
xchg
fstpt
ret
jbe
sbb
push
es
sarl
sub
xlat
sar
cli
mov
mov
rorl
xchg
cmp
or
call
adc
icebp
negl
sbb
mov
push
jno
clc
xor
xor
lcall
jno
lods
dec
pop
lock
mov
fstps
push
sahf
std
adc
addl
loop
outsb
mov
decl
enter
jmp
mov
pushl
cmc
mov
pop
imul
fsubl
adc
js
push
loopne
arpl
xor
pusha
push
pop
push
adc
jle
jae
stos
pop
dec
add
inc
push
outsl
mov
int
lahf
pop
hlt
xor
decl
mov
jg
testb
insb
add
cld
lea
and
mov
mov
xlat
lret
enter
push
push
test
incl
stos
cmpsb
mov
cmp
outsb
jo
int
rorl
sub
push
hlt
mov
hlt
lcall
and
loope
scas
cmp
repnz
mov
in
xchg
clc
pushl
addr16
xchg
pop
jb
xchg
adc
mov
je
pop
pop
mov
xorb
add
or
and
jae
sub
int3
or
lret
xor
das
hlt
decl
dec
jne
loop
test
cmp
sti
sub
mov
lds
cld
incl
sub
cmp
dec
push
aad
into
add
aaa
mov
cli
ja
xchg
and
std
xchg
out
pusha
out
leave
add
lcall
or
out
in
xchg
addb
inc
mov
and
mov
cli
jnp
call
inc
pushf
mov
pusha
xchg
sbb
icebp
outsl
stos
xor
repnz
sbb
ljmp
jbe
sbb
fucomi
jbe
jmp
stos
rcrb
xchg
insb
jl
pop
es
in
test
jmp
icebp
je
inc
push
out
and
xor
sub
sbb
sbb
popf
xchg
int
rolb
cmp
repz
fildll
sub
jne
es
pop
clc
inc
imul
push
sbb
mov
notb
pop
fucomip
jg
cld
and
in
mov
dec
pop
movsb
test
scas
jno
jmp
data16
lds
or
jmp
sub
out
dec
dec
xchg
push
lcall
cmp
jno
sub
ss
outsl
ds
sbb
incl
jl
xor
jp
clc
out
sbb
jbe
imul
push
jno
shl
push
loopne
mov
jns
pop
or
mov
jle
lcall
add
push
pushf
or
mov
or
data16
lcall
insl
adc
sbb
sbbb
sub
sub
xlat
push
push
inc
ret
leave
jmp
xor
adc
addr16
mov
sahf
fldcw
hlt
or
push
jmp
daa
adc
ljmpw
sub
stos
loop
mov
scas
sub
and
push
cwtl
pop
ljmp
mov
push
xor
mov
es
test
and
lods
and
push
push
int3
mov
xchg
xor
sub
inc
xchg
ret
mov
les
test
jecxz
and
jmp
and
out
ljmp
cld
std
into
xor
stc
jg
jp
gs
pop
mov
xor
xchg
in
jmp
lea
pop
inc
dec
sub
adc
xchg
add
dec
scas
loope
loope
incl
insb
adc
dec
out
loop
jl
lods
or
shll
sub
decl
xor
fbstp
inc
out
xchg
sub
mov
lret
out
xorl
pushl
dec
jmp
push
gs
mov
mul
in
inc
add
nop
dec
lods
imul
lods
add
pop
loop
jmp
out
lret
mov
es
mov
mov
fisubs
xor
fucomip
inc
mov
or
xchg
les
fwait
xchg
hlt
sub
or
ljmp
icebp
gs
xchg
jb
outsb
in
out
outsl
or
cmpsl
cltd
sbb
pop
sbb
fstpt
not
sub
gs
out
lock
jp
clc
dec
adc
xchg
dec
mov
gs
lcall
cltd
mov
xchg
or
pushl
les
xchg
fwait
mov
xor
add
loopne
incl
pop
movsl
adc
mov
add
mov
call
pop
dec
insl
mov
sub
cmp
adcl
inc
iret
mov
aam
cmp
aam
jns
cmp
xchg
xor
sbbb
jle
jb
ds
test
sbb
dec
mov
loope
test
push
imul
sbb
loopne
mov
addl
xchg
clc
add
cmpsl
out
aas
ljmp
jmp
mov
pop
bound
push
scas
xchg
sub
movl
pop
push
sbb
jno
pushl
cltd
fisttps
mov
adc
leave
mov
add
push
mov
cli
ljmp
dec
sub
stos
push
mov
mov
scas
add
pushl
sub
out
andl
mov
cmp
jnp
jp
pop
fisubrs
decl
xchg
into
xorl
or
add
popa
cmp
jo
pushl
out
xchg
push
adc
xchg
xchg
mov
iret
cwtl
iret
fcmovnbe
add
xor
cli
call
lcall
inc
int
inc
dec
push
mov
lods
fistpl
aam
pop
mov
dec
cmpsl
cmp
inc
jecxz
ljmp
or
mov
shlb
cmp
bnd
cmp
test
mov
cld
decl
inc
xor
push
icebp
xor
pop
test
clc
push
lea
mov
adc
std
lcall
adc
and
sbb
cmp
call
cmp
les
subl
or
cli
cltd
push
jbe
and
xor
test
push
outsl
cmp
in
gs
outsb
dec
push
jns
decl
push
push
incb
mov
sbb
adc
add
lret
and
jns
sahf
adc
movsl
jmp
stos
ljmp
pop
orb
jle
xor
sti
js
cmc
movsl
inc
xchg
inc
mov
ret
push
push
jae
sarl
cmp
add
dec
push
lahf
xchg
jp
mov
in
cmc
rolb
xor
sub
adc
mov
mov
pop
rcl
enter
stos
inc
jmp
jo
push
adc
sti
mov
push
outsl
je
leave
ds
loope
xchg
mov
shlb
jo
and
mov
dec
push
idiv
in
mov
roll
or
decl
sbb
sub
or
pushl
insl
aam
sbb
insl
mov
aaa
fcmovne
fucomip
adc
dec
aam
cmp
loop
ret
mov
lahf
repz
out
psubq
push
inc
adc
jge
lcall
mov
pop
fdivrl
popf
and
mov
pop
pop
inc
movsl
mov
out
mov
icebp
jmp
imul
mov
dec
push
add
adc
push
xchg
ds
cmp
enter
mov
cmp
xchg
in
mov
std
fbld
jnp
mov
jmp
mov
pop
sub
xlat
stc
fistpll
lcall
stos
mov
cmp
mov
cmp
jge
inc
jl
popf
or
idivl
call
jg
push
rcl
addr16
dec
fsts
jg
int3
jl
sbb
hlt
test
sub
mov
cmp
mov
aam
fwait
jecxz
ljmp
stc
adc
int
lods
pop
cmp
xor
xchg
adc
je
xchg
popa
inc
cmp
mov
faddl
fidivl
bound
inc
push
xchg
xlat
and
incb
loopne
mov
push
nop
inc
out
jecxz
ret
std
pop
stc
pop
cwtl
std
lods
ljmp
inc
and
inc
lret
pop
push
xchg
mov
notb
or
mov
pushl
inc
jp
jg
enter
int
xchg
jg,pt
filds
icebp
pop
and
daa
ss
mov
pushl
daa
adc
shlb
jge
push
test
int
inc
stc
lds
addr16
mov
incl
dec
dec
push
fwait
and
sbb
inc
ljmp
jge
pushf
loop
test
fcom
pop
out
bound
jo
int3
lods
adc
sbb
mov
lcall
adc
xorb
scas
ret
xor
jmp
push
dec
sub
or
js
push
test
pop
mov
mov
and
jp
add
mov
loopne
cwtl
push
mov
rolb
sti
pop
std
inc
mov
pop
jne
fisttpll
mov
ret
fiadds
mov
pop
and
xchg
xor
decl
mov
add
pop
scas
mov
mov
in
aam
test
mov
das
add
int
out
aad
nop
insl
test
lock
pushl
mov
test
aas
sub
call
add
and
jl
mov
in
imul
push
xchg
orl
inc
mov
in
mov
and
and
sbb
mov
in
adc
dec
xchg
lret
cs
cmovae
fdivrl
pusha
dec
jp
mov
push
imul
sbb
popf
jmp
fdivr
push
call
cwtl
leave
jg
pop
jp
sti
or
pop
xor
out
xchg
pop
rcll
mov
aam
pushf
jno
add
adc
pop
push
insl
push
jae
lcall
decl
into
roll
xchg
sbb
cwtl
push
arpl
mov
dec
xchg
mov
out
test
xchg
fstl
in
stos
xchg
push
and
das
jo
cltd
pop
gs
dec
mov
jo
sub
andb
rol
pop
popa
pop
fadds
dec
mov
pop
jge
dec
outsb
mov
sub
jl
jle
repnz
or
arpl
push
or
adc
and
fwait
sarl
pop
andb
pusha
jg
incl
push
fsubrl
xor
mov
push
sbb
loope
pop
xor
call
incl
out
out
cwtl
mov
movsl
xor
out
out
out
mov
xchg
jbe
cwtl
push
jg
lock
jne
roll
inc
cmp
test
mov
push
jmp
repnz
mov
push
ljmp
sub
or
push
jnp
scas
pop
push
outsl
sub
dec
dec
std
sbb
mov
loope
xchg
negl
pop
ljmp
push
mov
pushf
xchg
mov
das
push
icebp
outsl
sti
pop
pop
out
xor
out
or
ljmp
cld
je
cs
rolb
out
adc
sti
add
incl
xchg
inc
xchg
sbb
repz
mov
xor
mov
mov
loop
mov
jg
and
and
popa
fstpt
add
push
cwtl
and
stc
test
dec
ljmp
mov
dec
pop
mov
ljmp
pushf
push
movsb
decl
mov
adc
fnsetpm(287
dec
aam
stos
cmp
xor
jl
xor
pushl
push
repz
out
icebp
clc
mov
and
mov
jecxz
pop
or
jmp
roll
jmp
xchg
cmp
pushf
out
test
in
push
clc
or
mov
pop
lods
dec
hlt
ret
aad
testl
jge
dec
xchg
xchg
loopne
and
xchg
jmp
pop
int
adc
pop
dec
pop
mov
mov
push
fdiv
in
push
shl
or
mov
ljmp
mov
les
push
or
inc
data16
lret
scas
leave
dec
jp
xchg
mov
incl
mov
cmpsb
aas
fildll
int
arpl
cmc
mov
std
and
mov
idiv
cmpsl
mov
and
xor
pop
dec
add
ja
cmp
inc
dec
jge
push
test
orl
les
test
and
imul
pop
ljmp
mov
sub
push
imulb
cwtl
outsl
jmp
xchg
pop
adc
mov
incl
xchg
inc
add
jae
pop
icebp
aaa
loop
mov
sub
add
les
fisubrl
jge
loopne
ljmp
cmc
inc
fstl
adc
fldenv
inc
and
js
test
dec
leave
or
cs
cld
pushl
les
js
fbstp
or
and
or
incl
les
ret
imul
jmp
and
pop
nop
jns
add
cmp
movsl
mov
xor
divl
push
jmp
sbb
push
jbe
flds
mov
mov
in
inc
or
mov
daa
and
sbb
jmp
jmp
jmp
push
dec
pushf
cld
dec
and
lret
lcall
decl
inc
cs
mov
xor
test
pop
loope
icebp
cmp
lcall
rcrl
jnp
inc
cmc
stc
inc
pop
aam
cmp
dec
push
lds
call
jl
lods
jmp
xchg
pushl
push
sbb
mov
icebp
inc
push
adc
dec
mov
movsb
cld
pop
arpl
and
mov
fmull
sub
repnz
movsl
ljmp
aaa
dec
dec
mov
cmp
jbe
movsb
cmp
pop
jecxz
cmc
scas
std
inc
push
test
inc
and
fs
or
mov
adc
push
cmc
jmp
out
movsl
fldenv
in
sbb
lock
dec
inc
imul
adc
mov
loope
sub
push
push
and
ljmp
std
and
nop
or
xlat
pop
inc
mov
xor
aad
lcall
call
sbb
out
sbb
mov
jl
lds
sub
call
rolb
push
lods
nop
int
xchg
cmp
mov
or
aaa
inc
pop
imull
in
shl
jmp
fldt
in
sub
sub
inc
push
lahf
and
js
mov
clc
test
test
mov
insb
cmpsl
mov
fpatan
mov
hlt
ljmp
call
sti
mov
jae
daa
pop
sub
mov
cli
jmp
or
iret
cs
jne
int
jp
jg
aaa
cli
fistpll
sub
inc
repz
lahf
mov
call
or
push
cwtl
dec
push
mov
divl
add
fnstcw
mov
mov
psubd
decl
mov
dec
mov
push
rorl
mov
dec
pop
pop
xchg
and
lcall
outsb
jg
in
pop
rorb
adcb
mov
mov
sbb
movsl
cmp
pop
repz
jp
dec
inc
mov
and
shll
shll
pop
rcll
cmpsb
stos
iret
inc
subb
nop
sub
stc
popa
ffreep
jbe
je
mov
cld
rcrb
stos
int
inc
sbb
ljmp
test
ja
int
dec
subb
jp
lock
mov
in
pop
mov
mov
push
push
imul
lcall
dec
cld
xlat
jl
repz
mov
sbb
repnz
mov
pushl
dec
jg
fmull
push
inc
or
xor
sub
push
inc
rcll
mov
inc
in
and
jo
jo
rorb
cld
mov
push
fsts
sbb
stc
cmp
sub
repnz
fcmovu
jns
mov
call
mov
push
hlt
data16
jp
or
idivl
out
inc
aaa
jg
push
sub
and
cmp
sahf
js
loopne
jg
incl
mov
jecxz
and
xchg
call
lret
outsb
das
jg
sub
data16
adcl
add
xchg
dec
insb
shrl
pushf
mov
sub
lahf
movsl
inc
dec
into
addr16
sbb
xchg
mov
in
xor
dec
lods
loope
in
pop
sbb
shrb
or
jmp
pop
inc
fcoml
scas
xchg
sbb
cwtl
fnstsw
fsubs
jp
and
cmc
in
cld
inc
scas
adc
xor
lret
xchg
repnz
cmc
inc
test
inc
or
test
dec
sbb
xchg
cli
iret
and
mov
sub
call
decl
dec
rcll
insb
xor
mov
notb
inc
xor
xchg
cli
pushl
clc
popa
ja
push
and
xor
jecxz
adc
xchg
cmc
inc
psrlq
adc
dec
rolb
jecxz
mov
movsl
mov
cld
pop
roll
ja
sahf
or
push
cld
or
lock
leave
adc
fdivs
imul
lock
fbld
push
rcrb
outsb
sub
pushf
lods
ljmp
jg
cwtl
inc
in
cmp
and
lahf
sbb
fnsave
lahf
rorb
ljmp
mov
hlt
ja
pop
push
or
cmc
repnz
inc
lahf
enter
leave
mov
jg,pt
pop
pushl
xlat
add
ljmp
mov
aaa
clc
ljmp
enter
dec
rorl
jae
sub
add
mov
mov
mov
jmp
or
adc
outsl
out
jl
aaa
out
in
inc
movsl
mov
push
adc
fs
adc
aaa
pop
loop
pop
int3
loop
ss
movsl
mov
test
ja
aam
shl
xchg
sbb
jo
ja
lcall
or
jg
rcl
push
mov
jo
es
frstor
sub
decl
cld
jg
arpl
or
xchg
inc
jno
nop
jns
lcall
jg
imul
es
pop
jo
out
aas
frstor
incl
mov
dec
mov
adc
xlat
out
testb
fildll
jo
inc
xor
jle
adcb
stos
pop
jp
stos
mov
data16
xchg
jne
push
jg
sbb
cwtl
mov
mov
cmp
push
ds
outsl
pop
lcall
adc
pop
jl
dec
cmp
in
cmp
push
mov
cmp
gs
jp
lods
dec
cld
decl
inc
fstpl
add
stos
sub
scas
aas
jmp
aam
add
shrb
mov
mov
pop
ljmp
shl
inc
in
xchg
mov
jnp
fistl
lret
call
cmc
lock
mull
rclb
jno
and
imul
cmp
ja
sbb
js
sub
pop
add
pop
icebp
int
leave
pop
pop
mov
add
jnp
div
std
xchg
js
nop
std
out
mov
out
push
out
pop
lcall
std
outsl
jbe
nop
cwtl
ds
mov
cmpsb
xchg
outsl
and
lcall
loope
xor
jl
clc
mov
push
mov
or
das
cmc
dec
popa
push
jl
scas
cltd
jno
mov
push
gs
insl
mov
stos
inc
sub
call
adc
shrb
in
xchg
shl
cmpsb
sub
mov
xor
dec
cmpsl
call
iret
jnp
add
sbb
scas
scas
jbe
mov
outsl
cld
pop
mov
call
dec
and
sub
and
or
or
call
and
aam
pushf
lock
mov
das
std
pushl
adc
and
xchg
leave
lret
rorb
jge
dec
jecxz
jnp
cld
decl
std
aaa
jnp
xor
jbe
or
sub
pop
scas
and
outsl
icebp
ljmp
mov
xchg
jle
ret
cmp
jge
dec
and
test
jmp
ljmp
and
sub
pop
cld
or
cmpsl
js
inc
lcall
js
jle
jg
shll
jne
nop
dec
push
sbb
xor
test
enter
pop
cmovb
mov
decl
xchg
or
scas
inc
lds
nop
stc
xor
loope
dec
lock
push
hlt
push
outsl
pop
nop
dec
pop
sub
cmpsb
out
push
mov
cmpsl
jnp
mov
les
mov
inc
ljmp
hlt
add
jae
sti
lret
lret
cmpsl
xlat
cmp
sub
lcall
xor
call
out
jl
ds
das
mov
xchg
sub
ret
xchg
adc
adc
rcr
jle
and
imul
sbb
mov
jle
dec
adc
outsl
push
lds
push
pop
push
mov
insl
loop
xor
mov
sbb
adc
sub
xchg
pop
dec
push
jg
clc
cmpsl
popf
fimull
repnz
pop
dec
or
std
fs
imul
mov
or
push
in
int
xchg
mov
decl
pop
inc
scas
outsl
or
jnp
imul
insb
aad
mov
mov
gs
lds
xor
push
jle
push
sub
mov
fst
test
xor
xor
rcll
jg
adc
mov
xor
les
out
or
pop
js
add
es
cltd
movsb
aam
and
iret
sarl
jmp
imul
add
inc
imul
mov
fadds
mov
stc
mov
sub
insl
std
jmp
mov
mov
insb
mov
dec
mov
js
mov
das
cmp
outsl
decl
stos
lret
sbb
in
mov
es
stc
in
adc
je
add
jg
decl
rcrl
mov
ljmp
or
xor
jecxz
pop
cld
pushl
lcall
fsubl
gs
pop
mov
incl
fiadds
stc
xchg
add
mov
sar
outsl
std
das
hlt
adc
lods
hlt
inc
ret
mov
push
adc
pop
je
mov
xchg
jbe
movsl
pop
cmp
fwait
gs
icebp
jns
pop
aas
sbb
lds
fwait
xchg
jbe
mov
std
sub
pop
or
mov
adc
inc
dec
movsl
jge
scas
sbb
push
inc
dec
fstp
mov
imull
xor
out
add
arpl
lods
aam
xor
dec
jae
fs
mov
loopne
mov
pushl
pop
cmp
loopne
out
sti
popf
lret
roll
gs
icebp
cmc
idivb
jo
mov
in
dec
and
out
fildl
sub
xor
sub
stos
cli
xor
shr
test
jns
jbe
jl
pushl
clc
das
les
adc
hlt
cmp
cld
ljmp
loopne
jmp
push
loop
xor
pop
jno
push
lret
insb
inc
push
daa
dec
pop
lds
iret
lcall
loopne
add
and
inc
mov
or
bound
outsb
mov
pop
rorl
out
and
jne
push
mov
mov
push
pusha
sbb
fwait
mov
addr16
ljmp
dec
icebp
sti
out
xlat
inc
mov
jno
xchg
popa
add
decl
xchg
stos
pop
in
lods
cld
shll
adc
mov
cmpsl
push
std
jb
pop
out
stos
mov
mov
pop
add
scas
sub
dec
out
imul
incl
mov
push
pop
pop
jecxz
jno
cld
rcll
dec
sbb
push
mov
mov
mov
cwtl
mov
out
pop
test
push
sbb
dec
dec
mov
clc
outsl
cld
jg
test
add
mov
aaa
or
fisttpl
outsb
movsb
pusha
add
sahf
icebp
mov
dec
push
push
out
jle
fildll
mov
das
daa
mov
rcrl
decl
cld
jo
sbb
lods
pop
stos
ficomps
lahf
or
das
jp
mov
int
xchg
push
push
test
adc
pop
add
cli
mov
iret
hlt
bound
jb
in
adc
cld
push
push
add
sti
sti
push
adc
cmp
popa
mov
fs
push
inc
xchg
xchg
xchg
mov
or
xorl
lea
cwtl
int3
aam
call
jno
sbbl
fsubr
xchg
rcrb
xchg
push
lret
lea
jg
mov
jae
pusha
lret
mov
push
inc
les
in
lret
lcall
bound
sbb
lcall
outsb
mov
test
das
pop
inc
and
lcall
mov
stos
in
sub
mov
mov
sub
jg
ds
outsb
nop
aaa
mov
xor
cmp
and
mov
push
mov
inc
popf
clc
lret
mov
pop
sbb
leave
sti
xor
mov
addr16
mov
push
sub
mov
sub
push
xchg
scas
add
add
cmp
xor
sub
mov
adc
jbe
jg
push
cmpl
and
sbb
sub
test
and
mov
int3
gs
xchg
xor
fisubrs
add
std
in
pop
mov
sub
sub
ret
scas
sbbb
mov
push
out
lcall
jecxz
out
in
shll
sub
mov
ficoml
jae
cmp
cli
cli
fs
cmp
xlat
mov
out
stos
add
cmp
fbstp
pop
inc
xchg
jg
cmp
inc
rep
repnz
lods
push
cmp
imul
incl
aas
and
sbb
mov
popa
sti
les
cmp
rcll
fldl
pop
sub
xlat
add
int
and
mov
jno
scas
js
cld
fucomip
jecxz
jmp
push
ds
pop
push
fdivp
pop
cmpsb
sti
loope
pop
je
stos
in
sbb
in
cmpsb
push
cwtl
gs
arpl
idiv
lcall
call
sub
div
jecxz
xchg
xchg
sbb
push
xor
mov
test
mov
test
add
nop
push
adc
bound
cmp
dec
or
shl
out
ret
mov
ljmp
push
and
dec
ret
xchg
cmp
dec
and
or
xchg
push
push
into
mov
xchg
jae
sti
fbld
dec
cmp
adc
ljmp
push
fsincos
das
mov
test
pop
popa
mov
mov
mov
popl
xlat
shrl
and
scas
idivl
cmp
lods
pop
mov
push
push
insl
adc
sbb
mov
ficompl
add
arpl
and
jg
pop
push
stos
hlt
lcall
push
js
add
xchg
jge
jl
ja
int
cli
cwtl
or
cmp
mov
dec
nop
fcoml
mov
imul
cmp
pushl
and
and
sbb
insb
movsb
or
pushf
inc
call
jg
leave
fmull
push
adc
push
fwait
lcall
xchg
bound
call
cmpsb
mov
stos
or
sub
pusha
nop
inc
jne
icebp
or
add
fadds
mov
popa
jmp
bound
popf
shlb
dec
jle
push
out
jmp
flds
sbbb
popf
xchg
clc
push
add
sbb
pop
and
dec
push
out
insl
dec
dec
gs
stc
sbb
aaa
arpl
dec
or
fimuls
dec
jecxz
nop
insl
idiv
mov
inc
movsb
push
jo
push
test
lea
mov
lcall
sbb
cmp
xchg
nop
pop
lcall
sub
xor
enter
cli
and
ljmp
scas
dec
mov
bound
sahf
mov
pop
mov
add
popf
in
fstps
mov
leave
test
inc
cwtl
sti
pop
adc
jae
xchg
sub
mov
ret
sbb
jo
fs
std
sbb
faddl
mov
cltd
andl
lcall
jle
jg
mov
cli
cmp
push
pop
dec
icebp
xchg
insb
pop
aaa
aad
cli
mov
mov
test
jecxz
pop
mov
pushl
ja
cltd
pop
lea
movsl
dec
movsl
call
incl
add
shrl
add
xlat
dec
cld
in
mov
mov
push
jmp
add
and
fdivrl
jle
sub
leave
cmp
ljmp
cld
or
andb
pop
ds
mov
cmc
loop
pop
lahf
jg
jg
mov
das
cmc
mov
sarb
push
sub
jmp
outsl
mov
stc
int3
dec
push
leave
std
mov
sbb
std
test
jbe
pop
stc
jmp
jbe
test
in
scas
into
mov
mov
push
incb
jne
mov
or
decl
cmp
jns
stc
add
mov
ret
enter
xor
outsb
imul
jg
mov
cmp
inc
push
incb
aaa
lcall
icebp
ljmp
add
pushf
or
out
jmp
lds
outsl
mov
sub
dec
outsb
xchg
repnz
mov
mov
leave
or
call
aam
lahf
das
or
push
loop
decl
rorl
repnz
dec
xor
sbb
mov
imul
adc
mov
jne
out
mov
sub
fistpll
clc
push
inc
and
mov
popf
push
xor
cmp
pop
push
fs
call
aad
push
xchg
int3
out
addb
mov
inc
dec
push
aas
pushf
mov
cmpsl
out
lcall
push
push
sub
mov
mov
js
adc
daa
dec
mov
in
jmp
fcoms
pop
aaa
jae
cld
push
les
rorl
pushl
mov
or
push
sbb
fdiv
pop
xor
fisubrs
jo
sub
pop
push
push
jbe
mov
fstpt
lret
mov
lds
pop
dec
sbb
scas
test
or
pop
popf
icebp
adc
jecxz
mov
hlt
int
lea
cs
and
and
sbb
pop
outsl
push
cli
xchg
xor
dec
pusha
xchg
daa
lods
out
jge
cmp
mov
call
lds
push
inc
sbb
inc
cwtl
push
jl
mov
das
out
jg
ljmp
xor
cwtl
in
fsubs
push
pusha
mov
dec
xor
cs
pushl
jmp
lea
lods
insb
jg
std
push
out
cmp
lahf
shl
push
push
pop
dec
aad
mov
xor
sbb
decl
decl
loopne
jae
outsb
ljmp
mov
daa
mov
sub
cwtl
mov
xchg
in
xor
mov
lds
xor
lret
mov
and
jp
sarl
call
clc
nop
jbe
inc
or
add
ss
lahf
push
aas
xchg
cmp
inc
mov
jmp
inc
jne
and
sbb
adc
je
dec
xor
mov
xor
push
popa
lea
xchg
sar
stos
cwtl
ret
mov
into
jo
shll
xor
mov
jo
jg
int
stos
popa
sub
daa
jo
in
xor
ss
stos
std
mov
xchg
jl
notb
fbld
aas
daa
mov
xchg
clc
mov
adc
push
out
addl
shll
jmp
or
out
int
mov
lahf
ret
sbb
faddl
jle
dec
pop
mov
jmp
mov
mov
sbb
sub
data16
sub
mov
shlb
sub
lret
adc
mov
pop
stos
adc
push
in
daa
sub
aam
pop
inc
gs
iret
mov
sti
je
mov
ret
lret
pusha
aaa
sbb
popa
jg
icebp
pop
push
call
push
cmp
mov
cmp
dec
push
pop
and
jo
insl
notb
fs
decl
jo
mov
in
jb
adc
jg
dec
aam
pop
ljmp
imul
mov
les
call
arpl
lcall
std
and
pop
xchg
lret
dec
mov
xor
stc
ret
adcl
push
fs
jmp
jbe
jns
ss
decl
mov
fdivrs
or
dec
pop
jns
lods
jno
ja
in
cmp
incl
pop
xor
pusha
mov
cmp
pusha
std
inc
into
inc
sarb
out
push
adc
mov
js
adc
mov
mov
mov
aas
inc
or
fnsave
mov
lcall
adcb
add
adc
lods
sub
jne
xlat
insb
dec
xchg
pop
incl
dec
mov
ret
sbb
xor
scas
add
jmp
outsb
inc
aam
mov
nop
mov
xchg
or
cwtl
das
enter
out
jle
xchg
ss
movsb
adc
stos
insl
mov
push
jg
fildll
leave
xchg
cmpsb
pushf
fldl
add
incl
cmpsl
pushf
test
add
and
xor
fsubrl
out
add
cmp
data16
lods
push
and
outsb
jg
imul
jg
cmp
test
add
mov
decl
pop
fisubrs
jne
jmp
jb
scas
inc
cmp
aam
mov
fsin
xor
imul
cli
push
cmp
adc
in
je
sahf
sbb
cmpsb
insb
lds
jecxz
std
test
inc
mov
leave
insb
cmpsb
jmp
mov
pop
xor
cs
sar
lcall
test
rol
loopne
jnp
lods
dec
mov
in
jmp
dec
stc
jmp
jg
ljmp
js
aas
arpl
scas
xchg
dec
out
add
lcall
mov
icebp
call
icebp
mov
xchg
inc
pop
imul
cli
outsl
stos
jb
mov
jmp
cwtl
inc
jp
bound
test
addb
cmp
dec
fmull
les
cmpsl
mov
jg
pop
or
js
ja
xchg
push
dec
hlt
mov
mov
sub
adc
jb
test
loop
xchg
add
mov
aad
add
mov
push
ljmp
pop
inc
or
scas
repnz
pop
sbb
in
pop
call
scas
loope
inc
sbb
in
mov
aam
mov
mov
cli
sub
mov
jne
outsb
jp
jae
inc
daa
adc
mov
sahf
repz
inc
xor
mov
pop
mov
js
outsl
call
pushl
mov
popf
nop
lret
push
sbb
out
hlt
jne
and
loope
shl
xchg
cli
in
icebp
mov
fisubrl
sub
hlt
add
incl
ja
fisttps
test
sbb
testb
lcall
or
and
or
scas
sbb
sbb
or
push
add
mov
test
or
jne
push
ja
insb
gs
mov
push
jmp
fxch
mov
cmpsl
add
xchg
outsb
stc
sub
inc
xchg
jb
inc
hlt
mov
int3
xchg
mov
loop
xor
inc
mov
mov
jg
xor
mov
je
dec
mov
stos
dec
pop
pop
push
sbb
scas
std
fists
in
pop
lcall
pop
mov
adc
sbb
popa
nop
add
jmp
mov
inc
cli
int
icebp
int
jg
fistps
jp
cmp
jg
es
lods
scas
dec
jge
pop
in
and
push
ficoms
fnstenv
mov
and
adc
iret
push
mov
sarb
push
adc
jl
data16
fdivp
stos
popf
mov
call
rorl
push
push
incl
nopl
xchg
decl
int
clc
mov
pushl
sahf
fs
insl
es
mov
mov
pop
sahf
in
test
sub
dec
xchg
jge
xchg
xor
and
pop
imulb
mov
sub
dec
lret
in
or
pop
mulb
sbb
shll
adc
loope
or
mov
les
or
inc
leave
int3
les
call
bound
adc
out
pop
and
xor
dec
enter
cmp
popf
pop
rorb
testb
idivl
mov
loope
inc
inc
ret
cli
jmp
stos
mov
and
lcall
and
es
jo
dec
sbb
gs
ljmp
decl
jmp
loopne
nop
dec
and
ja
rorl
loop
and
cmp
fucomip
iret
lret
aas
dec
and
insl
mov
push
insb
adc
movsb
mov
incl
jge
movsb
scas
xchg
add
imul
mov
sahf
inc
mov
adc
jmp
jg
or
out
cmpsl
xchg
push
inc
mov
in
jecxz
xor
aaa
mov
jl
jp
jp
int3
fcmovne
cmp
das
cli
addb
loopne
test
out
and
sar
decl
dec
icebp
cmc
or
mov
jge
inc
xlat
mov
sbb
outsl
cld
mov
mov
adc
push
dec
cmpsb
test
aaa
dec
cmpsb
cwtl
pusha
adc
out
sbb
jo
andl
inc
push
or
imul
test
mov
out
add
in
jg
rclb
or
mov
hlt
mov
sti
or
hlt
fisttps
and
notb
xor
hlt
das
push
stos
cmc
loopne
cmc
mov
mov
lret
lds
and
jecxz
lods
inc
inc
std
ljmp
and
xor
add
push
ljmp
add
or
jl
mov
and
dec
fidivrs
cmp
mov
jg
scas
outsb
and
jae
push
stos
dec
mov
pushf
mov
jg
or
sbb
into
xlat
sbb
cmc
andl
insb
mov
pop
fisttpl
decl
imul
lret
sub
nop
in
jnp
jp
dec
pop
outsl
cld
incl
data16
ret
pop
sub
cli
dec
call
dec
icebp
lcall
popf
mov
cld
xchg
mov
cmp
cmp
outsl
mov
push
mov
into
or
iret
jbe
sub
es
mov
cmp
jp
pop
out
jl
sub
loopne
js
jb
jge
fistpll
decl
cmp
xchg
les
push
inc
iret
mov
add
mov
ret
test
shll
dec
sbb
and
popf
stc
mov
jmp
xchg
xlat
sbb
inc
imul
sub
mov
std
test
inc
lock
and
jo
cmp
lcall
cwtl
not
mov
mov
cli
movsb
pop
cwtl
hlt
mov
loop
pop
cs
daa
sub
andl
lcall
jp
or
mov
sub
lock
mov
or
daa
sbb
daa
pop
lea
das
xchg
repz
outsl
mov
fs
outsb
xchg
or
inc
inc
mov
jae
mov
fistps
out
mov
push
mov
das
ret
test
iret
xchg
leave
dec
jae
lret
movsl
lcall
fcomi
push
push
les
rolb
inc
jmp
jbe
in
std
repnz
call
xchg
movsb
xchg
lret
js
mov
inc
xchg
inc
xchg
and
incl
pushl
in
pop
and
sbb
mov
xchg
dec
xchg
cmp
jmp
mov
mov
jmp
mov
shl
sbb
push
enter
pop
cmp
dec
mov
jmp
clc
faddl
stc
sub
insb
shlb
call
jecxz
fnstcw
dec
dec
push
movaps
mov
imul
fwait
out
pop
cld
inc
pop
cmp
sbb
cmc
daa
pop
fsts
jns
dec
call
xchg
in
leave
push
cmp
or
ja
cli
mov
sub
dec
or
jg
dec
stos
shll
fcmovnbe
jmp
in
ror
mov
add
sti
out
das
sbb
cli
test
push
fsts
cmp
adc
push
sti
loopne
mov
sahf
xor
mov
dec
js
inc
std
cmpb
adc
xlat
pop
xchg
test
or
cmp
pop
inc
aas
lods
in
jo
xor
clc
mov
push
xor
pop
cmpsb
inc
aaa
icebp
jnp
cld
outsb
pop
mov
std
stos
pop
mov
add
in
cmc
sti
jmp
xchg
and
mov
movsb
icebp
sbb
addr16
add
mov
outsb
fcompl
cld
call
std
aam
stos
jno
sbb
orl
push
je
pop
push
inc
enter
dec
jecxz
dec
xchg
std
lock
fcmovb
mov
icebp
inc
lcall
mov
jns
movsl
jle
sar
clc
ret
lcall
adc
lock
gs
shrb
pusha
mov
push
call
mov
js
aam
dec
and
icebp
jno
jns
push
jmp
and
xchg
roll
cmp
lret
les
lods
mov
rorl
decl
icebp
mov
mov
pop
shll
repnz
lahf
movsl
fucomip
fmull
xor
xchg
sti
push
jmp
pusha
mov
cmp
pop
lcall
add
out
popf
push
sbb
add
jg
pushl
ja
mov
das
dec
sarb
xchg
mov
jge
lods
ror
mov
inc
fldt
inc
fucomp
fists
xor
mov
and
cmc
jne
ljmp
stos
fwait
les
pop
xor
addb
icebp
dec
push
aas
shl
push
aaa
and
das
cmc
lea
adc
lcall
push
mov
insl
add
shr
insb
movsb
and
les
ljmp
inc
jle
cmp
sub
iret
mov
aad
inc
sbb
in
call
mov
jb
xor
sbb
inc
fisubl
mov
mov
ret
xor
cmc
loop
repz
js
xchg
int
incl
rcl
jecxz
jmp
imul
popl
mov
outsl
xor
dec
addr16
decl
flds
lret
xchg
or
out
inc
sub
or
jmp
lcall
cld
rcll
and
mov
pushf
lahf
dec
pop
mov
pop
movsl
lcall
orb
icebp
popf
aam
lods
addr16
cs
push
lods
sbb
ret
outsl
jl
fdiv
adc
jcxz
or
aaa
js
mov
adc
lea
pusha
xchg
outsl
and
stos
into
scas
dec
cmp
jg
stos
pop
ljmp
jmp
push
mov
popf
sbb
adc
aaa
fstps
sbb
cli
inc
fildll
fldl
sbb
lds
fbstp
push
cmpsb
pop
scas
inc
dec
or
and
pop
cmpsb
dec
or
call
or
popf
cs
mov
inc
mov
into
addb
je
int
cmp
dec
dec
mov
pop
push
ja
lcall
xorb
inc
fistpll
add
out
dec
in
orl
hlt
les
bnd
adc
leave
pop
pop
cmp
incl
cmp
mov
mov
sahf
ja
sar
rcr
ja
pusha
pop
sbb
sub
mov
pushl
jle
mov
and
mov
sub
dec
mov
scas
out
cwtl
cmp
cwtl
inc
test
shl
fidivs
add
loope
xor
sub
out
dec
pop
cmp
sbb
push
je
sahf
jns
ja
and
and
std
mov
out
in
xor
pop
cli
lcall
aam
ja
pop
pushf
insb
imul
cmp
stc
in
imul
cmp
mov
stc
mov
in
cmpsl
test
mov
ljmp
add
std
bound
mov
sahf
cmp
jl
pop
xor
sbb
shl
fwait
fwait
mov
addr16
shll
int3
pop
pop
outsl
push
dec
jge
cs
call
lea
into
scas
ret
inc
lahf
jb
sahf
sarb
jo
push
add
pop
jg
mov
cltd
call
mov
sbb
mov
ljmp
pop
sahf
adc
aas
jmp
stos
in
mov
push
in
xor
mov
decl
xor
push
fcomps
mov
mov
int
inc
into
ret
std
pop
mov
fdivr
outsl
hlt
call
mov
adc
imul
adc
clc
add
lret
das
mov
lock
sub
pusha
movb
push
mov
cld
push
call
jnp
push
int
cld
jnp
fsubs
dec
cs
fucomip
ljmp
mov
cmp
mov
daa
out
sbb
loop
enter
outsl
pushf
push
out
sub
popf
testl
fdivr
xor
mov
ljmp
fcomip
push
pop
mov
decl
or
ret
mov
icebp
pop
into
fstpl
pop
sbb
das
nop
jae
or
push
lock
jbe
mov
jae
jg
jg
or
negl
mov
xchg
je
enter
decl
xor
dec
dec
ficompl
daa
sahf
mov
jg
cmpsb
cmc
inc
aas
movsl
mov
fistl
repz
pusha
add
fisubrs
iret
scas
movsl
out
enter
dec
iret
movsl
lcall
mov
mov
xor
fwait
adc
int
test
pop
ljmp
or
loopne
loope
adc
cmp
adc
pop
mov
cmpsl
xor
aaa
xor
mov
in
sti
cwtl
inc
repnz
inc
jmp
cmp
cmp
outsl
sbb
pop
lods
lods
mov
int3
mov
xchg
mov
adc
data16
pop
pop
mov
push
outsl
pop
movsb
inc
aad
in
mov
mov
sbb
fcmovnb
fists
mov
lret
cli
adc
aad
loop
xor
shl
jae
and
loopne
add
imul
mov
loop
mov
data16
out
inc
push
ret
jle
add
adc
aaa
fmull
inc
rorl
add
cmp
lds
sub
shrl
ljmp
inc
stos
mov
mov
inc
ja
cwtl
stos
adc
adc
lock
enter
ss
cwtl
call
addr16
sbb
decl
push
dec
or
push
sbb
jp
xor
push
push
mov
push
scas
adc
cmpsl
jnp
stos
int
into
add
or
sti
or
pop
decl
test
cmp
pop
pop
mov
fcomps
pop
jle
mov
ss
mov
mov
add
rcrb
enter
pop
pop
mov
and
sub
rorl
shll
cmp
mov
fdivs
mov
loope
insb
push
pop
scas
stos
mov
ljmp
dec
in
pop
lock
jge
sub
ror
add
push
lret
decl
data16
out
pop
stc
outsl
pop
inc
repnz
pop
mov
adc
ljmp
add
jge
call
cs
inc
cmp
mov
test
mov
mov
rol
inc
pusha
adc
mov
cmp
dec
clc
outsl
inc
les
pop
inc
xchg
push
xlat
iret
bsf
jns
insb
mov
outsl
or
cs
lock
jo
sar
sbb
sarl
dec
cld
pushl
out
jno
mov
mov
adc
loop
inc
cmp
les
in
lods
pop
std
inc
stos
lods
stc
xchg
popf
xchg
or
jmp
push
ljmp
repnz
scas
sub
ss
or
mov
adc
movsl
mov
sti
test
mov
aad
xchg
incb
cmc
int
in
add
outsl
xchg
push
ret
jmp
movsl
cmp
pop
movsb
mov
push
fadds
sbb
mov
dec
xchg
push
subb
pop
mov
mov
movsl
pop
inc
repnz
sahf
sti
pop
gs
mov
aam
jmp
push
xchg
push
adc
jecxz
cmpsb
and
cmp
inc
cli
scas
loopne
js
adc
cmp
push
ljmp
data16
leave
jb
inc
adc
aad
mov
dec
aad
repz
inc
sar
lcall
dec
adc
jb
cltd
sub
and
sub
ss
addl
or
sbb
dec
into
xor
sbb
popf
push
xor
mov
xabort
loope
jmp
mov
pop
adc
or
pop
imul
das
and
jg
mov
adc
push
dec
pushl
incl
call
jmp
mov
mov
sar
push
push
mov
hlt
lods
call
aam
fisttps
dec
sub
rcll
fcmovnbe
sub
data16
ljmp
jno
addr16
movsl
test
sbb
lret
push
mov
pop
add
aas
or
imul
clc
mov
outsl
sbb
lret
add
stc
mov
sbb
xor
stos
push
pushl
clc
je
test
mov
in
adc
movsl
aad
push
lods
decl
pushf
inc
sti
pop
out
std
add
pop
mov
loop
fiadds
hlt
pushl
push
fs
mov
xchg
movsl
shlb
xor
out
ljmp
shll
out
dec
pushf
ficomps
sub
daa
cld
mov
mov
loopne
mov
inc
std
jmp
out
pop
sub
lods
ficoml
sub
xchg
xor
test
int3
stos
jge
addr16
jp
fistpl
mov
stos
enter
shrl
call
dec
mov
and
repnz
sti
mov
in
cmp
pop
call
fnstenv
in
jp
push
sahf
leave
inc
add
ret
dec
scas
xchg
bound
popf
sub
test
hlt
pushl
and
ljmp
push
clc
jecxz
and
cltd
clc
aaa
das
jl
sti
cld
out
sarl
cltd
js
es
dec
jmp
test
cli
pushl
xor
add
sbb
push
jg
ds
push
mov
andl
jge,pn
cmp
pop
fdivrs
jg
adc
mov
cmp
pusha
pop
clc
sbb
mov
into
pop
ds
incl
mov
lea
fisttpl
or
rol
and
fistpl
ljmp
ljmp
es
lret
cli
adc
lcall
decl
mov
leave
out
push
mov
imul
and
inc
loopne
movsl
jae
test
mov
mov
ja
es
xchg
xchg
pop
sbb
sub
pop
test
xor
add
sysexit
lcall
mov
in
mov
xchg
sti
inc
out
inc
xlat
mov
xchg
mov
mov
loopne
pushl
movsl
or
pop
push
push
imul
xor
loope
lcall
pop
push
das
ret
das
mov
test
iret
and
pop
loopne
adc
push
lahf
sub
cmp
jg
and
popf
sarb
cmpsb
jecxz
pop
sarb
pop
loopne
movsl
mov
inc
popf
sar
call
adc
push
jb
lret
pinsrw
outsl
lock
mov
mov
jl
shlb
lcall
sbb
cmp
push
nop
jb
in
cmp
popa
xchg
mov
sub
inc
jge
xchg
mov
mov
pop
rcr
dec
cli
push
dec
sbb
roll
cli
incl
xor
cmp
or
cmpsb
daa
inc
addr16
xchg
call
xlat
lcall
inc
ja
pop
movsl
dec
lds
and
jge
mov
inc
outsl
or
es
push
imul
lods
cli
dec
test
xchg
pop
js,pn
cli
jmp
mov
fimull
aas
out
aam
add
popf
inc
and
jmp
mov
sub
loop
mov
inc
sbb
xchg
into
mov
cli
fdivrp
je
int
xchg
out
insl
fstpt
repnz
fwait
mov
xchg
sar
mov
dec
out
in
lds
loop
sbb
std
xchg
jg
shr
fmulp
cld
pushl
negb
mov
inc
jne
mov
mov
mov
decl
scas
inc
sub
pushf
and
xchg
push
mov
rcrl
icebp
jg
or
mov
mov
das
xlat
cmp
test
xorl
cli
pushf
push
jne
jmp
xor
stos
and
dec
jg
decl
nop
jo
scas
ret
test
nop
dec
add
std
daa
jge
push
sub
sar
ljmp
gs
pop
add
add
mov
xor
movsl
cmovbe
movsl
inc
inc
cltd
fucomp
mov
jg
dec
gs
mov
arpl
and
inc
xor
out
push
jle
clc
decl
push
int
je
fisttpll
repz
dec
data16
je
jmp
gs
in
jg
push
lcall
imul
jg
outsl
leave
lds
ljmp
ret
rcrb
mov
or
in
fwait
xor
mov
xor
or
hlt
mov
adc
lret
xlat
mov
cltd
mov
lds
icebp
or
pop
cmp
sub
mov
shrl
jg
pavgb
and
mov
shlb
jno
pop
out
ljmp
mov
xchg
call
sub
addb
sbb
inc
fstl
test
clc
inc
mov
imul
bnd
lcall
imul
cmp
addl
xchg
mov
jmp
lock
jg
lret
jne
enter
sbb
dec
cmpsb
add
mov
test
push
jne
imul
call
sub
int
lods
ss
mov
mov
xchg
lret
outsl
scas
lea
sar
sahf
pop
jle
test
loope
das
sub
fdivrl
xchg
and
cmp
outsb
sbb
mov
scas
xchg
bound
xchg
test
cmp
imul
mov
arpl
lret
addl
xlat
add
xor
sub
push
imul
mov
add
ljmp
jno
stos
mov
sbb
fdiv
add
xchg
imul
movsb
fiaddl
sbb
sub
xlat
js
cmpsl
adc
stos
mov
add
xchg
add
lds
lcall
jecxz
or
mov
call
pushf
and
mov
out
pop
inc
cmp
mov
push
cmp
add
dec
fnstenv
sbb
call
decl
xor
push
in
insl
and
fistpl
inc
jle
xor
push
xchg
das
inc
ljmp
push
mov
mov
sub
jge
cwtl
xlat
pop
sti
inc
sub
xchg
imul
decl
or
adc
imul
cmp
mov
pop
sbb
aaa
cmp
test
gs
shlb
cmpsb
mov
lcall
pushl
adc
and
mov
mov
xorb
mov
insb
std
ljmp
fcom
mov
fs
loope
and
add
movsb
out
cmp
scas
fnstsw
decl
sarl
sub
and
pop
push
pop
es
push
cli
pushl
test
mov
insl
lret
mov
lea
scas
xor
pop
mov
std
jle
sbb
das
mov
fisubl
into
xchg
ret
jecxz
mov
jne
and
adc
lds
ss
clc
pop
clc
add
xchg
mov
rol
ljmp
cmp
ljmp
jne
push
nop
cmp
xorl
ret
mov
pop
repnz
pop
fs
insb
pop
out
jmp
cmp
imul
cmpsl
xor
lcall
incb
mov
popl
jp
inc
sub
inc
dec
repnz
sub
add
mov
xchg
mov
movb
jne
insl
stos
push
sti
xchg
add
sub
dec
mov
fiaddl
mov
std
popf
jb
loop
push
fiaddl
ljmp
adc
incl
pushl
outsb
ret
dec
xchg
dec
in
dec
mov
cltd
add
fisubl
add
lcall
decl
or
xchg
das
test
lcall
jp
and
mov
rcrb
jge
pop
aaa
dec
mov
and
sarl
or
jge
jge
mov
lods
pushl
add
jp
sub
call
sbb
call
xor
dec
enter
rcl
outsb
fists
xor
sbb
or
mov
sub
push
add
dec
loope
sbb
in
lods
lods
cmp
push
sbb
movsl
ss
mov
int3
scas
rorb
mov
sbb
test
stc
sub
call
xchg
jnp
arpl
in
in
inc
adc
jecxz
xchg
or
lcall
pop
aam
icebp
ret
mov
pop
mov
add
scas
xor
incl
jb
hlt
pop
pop
xchg
dec
inc
mov
xchg
enter
je
sbb
push
movsb
cmp
leave
and
jmp
inc
mov
inc
push
mov
ret
pop
adc
out
pop
enter
cmc
loopne
pop
out
mov
jg
sub
cmp
int
hlt
test
out
test
pop
call
and
movsb
jae
add
bound
xchg
or
das
and
cld
je
in
ljmp
pop
cld
jl
adc
pop
jno
inc
pop
push
jo
test
xor
push
xchg
andl
jg
ficomps
into
aas
mov
loopne
movsl
mov
lods
mov
sbb
cmc
daa
pop
dec
int
adc
ljmp
ret
cmpsb
addr16
andl
ds
cmpsb
scas
mov
cmp
clc
mov
xor
data16
ret
or
cmp
jae
jmp
loop
fidivs
out
or
pop
in
mov
ror
sbb
and
push
pop
mov
je
outsb
mov
mov
add
call
ja
out
add
push
push
jl
aas
imul
sub
aam
sub
sbb
mov
ljmp
hlt
lcall
jbe
arpl
inc
pop
mov
dec
jp
xor
ljmp
in
mov
insl
sbb
test
notb
subb
push
and
xchg
cltd
cwtl
inc
xor
addr16
and
in
arpl
cmp
pop
adc
mov
int
pop
inc
push
push
pop
adc
es
negb
scas
cltd
mov
decl
and
pop
inc
jmp
lret
clc
js
adc
lods
mov
ja
outsl
cmp
fbstp
fistl
push
in
ret
cmp
pushf
fbld
scas
stos
subl
stos
jo
push
push
aas
mov
inc
mov
dec
pop
sbb
es
mov
pop
shrb
xchg
and
aad
std
pushl
xchg
cmp
fcomip
mov
push
clc
sahf
jnp
mov
mov
scas
std
mov
sbb
lcall
xor
fisubrl
adc
pusha
jbe
mov
mov
test
loop
mov
in
sbb
and
decl
jnp
jne
popf
sbbl
sti
testb
push
jne
leave
in
aam
jg
fisttpl
sub
cwtl
cmp
mov
cmpsl
shll
xor
pop
fstpl
pop
cld
xor
cs
lret
jno
push
daa
push
das
jno
lods
repnz
inc
mov
std
out
pushl
sbb
mov
push
sub
jb
jb
pop
push
or
fnstsw
push
or
or
and
fimull
mov
nop
pop
fs
mov
push
or
ljmp
daa
mov
popf
nop
mov
push
or
mov
mov
sub
push
add
jl
pop
mov
inc
pushl
push
cwtl
mov
xchg
cltd
push
xchg
cmpsl
pop
sub
ficoms
icebp
xor
aas
cwtl
jmp
sub
ss
or
repz
cmp
bound
mov
lds
fwait
sbb
mov
sar
pop
call
fwait
dec
mov
mov
and
inc
adc
rol
int
xchg
or
call
pusha
sti
test
out
in
nop
jg
addr16
push
or
push
jge
dec
out
insl
pop
fidivrs
scas
iret
jae
inc
test
sub
rcll
jge
addr16
mov
push
dec
test
mov
xchg
in
cmp
lcall
pop
daa
pop
movsb
inc
cmpsl
inc
mov
rcll
hlt
sbbl
les
xchg
pop
ljmp
cmpsb
pop
scas
arpl
or
pop
pop
outsb
sbb
mov
imul
pop
cmp
bound
dec
shll
lahf
rorb
cmc
lret
push
dec
repnz
and
add
mov
cmp
aad
jl
dec
push
test
jge
inc
mov
mov
cltd
fcomps
cltd
jmp
pop
inc
stos
dec
jns
adc
popa
inc
mov
insl
mov
jl
sbb
push
sbb
cmc
xchg
push
mov
test
push
lcall
mov
mov
popf
dec
sbb
aad
inc
aaa
sub
dec
push
add
mov
pushl
or
in
push
push
adc
ud1
loop
mov
ret
leave
pop
loop
mov
outsl
jg
incl
pop
lods
cmp
adc
push
ds
aad
mov
es
push
enter
pop
sub
dec
mov
outsl
loope,pn
call
imul
jg
lock
push
dec
shlb
loop
stos
call
push
fisttpll
add
jmp
lods
add
pushf
lds
jmp
fbld
pop
repz
adc
mov
ljmp
popf
outsl
je
mov
mov
xchg
das
add
mov
push
hlt
bound
mov
mov
xchg
in
loop
lds
fld
or
hlt
mov
es
fwait
je
add
scas
push
sub
loopne
ljmp
addr16
fildl
js
mov
out
lret
cli
arpl
je
fisttps
jns
into
mov
icebp
fildll
xor
ret
push
jo
js
xor
cmp
ljmp
jo
aas
or
ret
sub
jne
pop
faddl
movsb
adc
mov
push
sar
mov
aad
leave
cltd
stos
icebp
ret
pop
add
movsl
insl
or
sub
or
cmp
sub
int3
pop
push
push
loop
test
adc
xor
sub
andb
pop
push
xor
xor
es
ljmp
push
loopne
mov
pop
pop
adc
test
mov
ret
in
stos
pushl
and
fstps
mov
jns
stc
mov
jno
in
shll
pop
mov
inc
and
mulb
les
daa
imul
fstpt
ja
xor
inc
jecxz
orl
or
inc
push
lock
xor
call
dec
jecxz
ret
inc
jecxz
out
or
pop
add
incl
popf
lods
lods
push
fisubrl
int
in
test
jg
dec
nop
stos
sub
lret
mov
loopne
in
ret
mov
jle
pop
ret
cmp
pushl
cli
incl
lds
clc
std
lods
cwtl
loopne
add
cmovne
fimuls
test
jmp
or
xor
jb
loopne
cmp
or
mov
cmp
or
and
ss
not
jmp
add
cs
outsb
or
push
adc
daa
jne
insb
mov
in
loopne
icebp
das
lock
jge
push
cltd
cltd
vpaddd
pop
fsub
inc
pop
loop
ljmp
mov
pop
sbb
nop
or
jg
aas
scas
jno
ljmp
lock
loope
or
jle
push
je
data16
adc
or
leave
xchg
std
stos
bound
in
push
test
add
mov
call
in
test
jecxz
mov
test
jae
mov
inc
lcall
xchg
clc
pushl
leave
jmp
imul
cmpsl
mov
sbb
stos
mov
sub
out
push
addl
jg
imul
movsl
lods
sub
les
mov
jmp
lcall
sbb
dec
adc
mov
loop
and
xchg
adc
bound
inc
cmp
outsl
mov
xchg
aad
mov
outsl
adc
jl
xor
pop
pop
pop
je
pushl
call
xchg
push
stos
jle
xchg
pop
leave
gs
neg
call
bound
xor
jg
jmp
mov
inc
xchg
cmp
pushl
scas
adc
mov
faddl
adc
push
mov
or
xchg
ss
jp
pushl
test
jns
and
stos
movsl
xlat
shl
imull
imul
pop
ljmp
ljmp
jmp
pop
push
mov
stos
sub
add
jae
or
imulb
pop
jl
int
mov
cltd
cli
rcrl
stos
daa
jb
inc
jnp
pop
xchg
and
aad
pushl
jp
pop
fisttps
inc
cwtl
movhlps
jno
jle
fistl
fwait
add
sbb
cs
rcr
dec
icebp
popf
mov
jg
mov
pop
pop
sbb
daa
lcall
sub
inc
xchg
ret
add
in
and
pushf
aas
and
lahf
and
pop
sub
and
cmc
or
pusha
daa
insb
clc
ret
cmpsl
push
decl
adc
sbb
cmp
or
xor
popf
or
shrl
mov
lcall
decl
mov
xchg
dec
dec
push
and
popf
inc
dec
pop
xchg
mov
xchg
xchg
sbb
mov
or
out
rcll
adc
dec
push
aam
lcall
bswap
gs
imul
fsubrl
or
jmp
jmp
rcr
lods
and
inc
jecxz
stos
jo
xchg
cmpsl
lea
xlat
scas
aam
inc
sub
jecxz
add
lcall
mov
repz
gs
iret
xor
push
push
jle
lds
ret
lahf
jmp
push
jne
movl
leave
std
in
inc
test
cmp
call
mov
inc
add
push
jp
jg
imul
pop
and
mov
pop
or
jle
sti
jae
test
insl
sub
dec
daa
decl
jne
jno
mov
jge
jo
pusha
outsb
pop
or
jo
ret
push
cmc
jmp
xlat
mov
in
incb
sub
pop
test
addl
cmp
call
jmp
test
shrb
inc
scas
lock
shl
movsl
pop
and
das
std
mov
mov
ja
cli
add
dec
cmpsl
outsb
mov
addl
and
push
cmpsb
repnz
cmp
xor
in
xor
imul
sti
out
int
inc
shrl
jp
call
leave
sarl
or
jmp
jo
gs
sub
inc
lcall
jo
sub
mov
flds
pop
imul
sbb
loope
push
dec
inc
dec
outsb
fcomps
idiv
call
cmc
mov
mov
outsl
jp
jae
stos
and
outsb
daa
test
mov
fnstsw
mov
push
loopne
fwait
cltd
add
int3
mov
ss
rcll
adc
scas
scas
inc
inc
outsl
aam
fisttps
mov
xchg
mov
test
loope
ljmp
push
mov
xchg
adcl
dec
lret
sbb
bound
and
adc
mov
shrl
push
push
call
leave
push
daa
mov
leave
mov
dec
push
aas
lock
clc
dec
outsl
dec
sbb
dec
jmp
adc
ljmp
mov
movsl
stc
sbb
out
xor
push
xor
aam
andl
jmp
adc
push
pop
scas
outsb
xlat
jp
outsl
out
push
mov
popl
cwtl
std
xchg
mov
adc
popf
add
inc
cmp
aad
ljmp
jg
dec
dec
xchg
daa
mov
adc
dec
popf
jmp
incl
loop
mov
dec
push
lret
lock
aaa
cmp
test
xor
js
test
mov
xor
xor
mov
inc
testb
cli
jg
sub
and
fstps
loop
pop
repnz
mov
sbb
nop
mov
push
and
movsb
sbb
cmc
decl
add
test
mov
cmp
cmc
clc
call
inc
pop
repnz
insb
out
xor
sbb
and
add
mov
xchg
add
lds
pop
out
inc
ss
inc
aaa
ficoml
sub
mov
push
stos
les
mov
sub
hlt
push
mov
insl
add
ds
inc
lret
and
outsl
add
incl
leavew
lods
mov
push
fnstcw
add
jno
fildll
pusha
dec
push
pop
sar
dec
mov
jnp
sbb
xor
js
test
scas
fwait
adc
mov
jne
outsl
icebp
jg
insb
dec
jg
call
fstpl
push
inc
loope
jo
lcall
mull
sbb
pop
inc
mov
dec
scas
int3
xlat
mov
fidivrs
adc
jg
xlat
mov
mov
aaa
push
pop
stc
xchg
xor
fildll
dec
push
sbb
pop
cmp
pop
hlt
fistpll
ret
mov
cmp
mov
mov
pusha
in
cmpsb
aad
loopne
sbb
insb
add
outsl
pop
out
lahf
sub
ljmp
pop
mov
std
push
pop
inc
mov
jno
popa
popa
popf
add
pop
fs
push
popa
xor
inc
pop
sti
fwait
mov
loope
fldcw
xor
or
jg
mov
mov
pop
es
cs
sbb
pop
je
fsubrp
xchg
cmc
loop
lcall
push
lahf
lods
je
push
bound
ljmp
mov
int
pop
mov
ja
incl
out
or
push
mov
pop
or
inc
cmpsb
mul
jns
stc
notl
sub
pop
bswap
mov
push
out
fldl
xchg
or
inc
ds
xor
mov
call
jne
popa
jnp
ficompl
es
int3
addb
mov
jle
cmp
test
std
sti
popf
icebp
js
je
movsl
sub
jl
popa
mov
popf
call
aad
adc
xchg
adc
fstp
jb
mov
cmp
loope
pushl
insl
lods
loopne
scas
and
jmp
push
fadds
aas
xchg
jle
decl
mov
sbb
mov
mov
test
mov
lahf
pop
loop
mov
leave
xchg
xchg
dec
sub
add
cmc
and
cli
aad
pop
rclb
arpl
movhlps
ljmp
scas
test
push
ret
dec
or
mov
cmp
pushl
xor
adc
inc
lock
lock
insl
jle
cwtl
fwait
arpl
push
test
int3
fmull
data16
sub
daa
sbb
mov
sahf
mov
xchg
sbb
adc
pop
lea
cmp
aam
inc
out
inc
inc
push
pushl
ds
popf
insl
cld
lods
xor
aad
add
push
mov
add
ret
call
or
in
je
pop
mov
xor
imul
sarl
out
hlt
incl
sbb
push
in
mov
push
jmp
add
jno
xor
jge
aas
mov
addl
call
xorl
orb
ja
adc
mov
roll
push
adc
pop
jp
sbb
incl
cmp
xchg
or
mov
add
aad
jl
jmp
daa
cmp
out
into
into
in
xor
sbb
cmpsb
mov
or
std
mov
mov
jmp
call
cmc
out
sub
jge
add
mov
fldenv
into
mov
pop
lcall
push
pop
xchg
inc
jb
clc
mov
and
inc
mov
xchg
add
sahf
rolb
mov
jmp
shlb
xor
pop
outsl
arpl
mov
out
add
loopne
test
aas
add
addl
loop
in
ficomps
incl
mov
lret
adc
ja
ds
sub
ret
pop
push
sahf
scas
xorl
mov
jbe
icebp
stos
outsb
adc
xchg
rclb
xchg
push
mov
es
sbb
fstpt
mov
mov
scas
daa
inc
shlb
xlat
ljmp
in
movsb
out
jl
mov
ljmp
rol
adc
fs
lods
or
jp
orb
jg
fstps
add
pushl
mov
jle
dec
adc
push
mov
dec
test
test
stc
popf
jle
sub
sahf
mov
cmp
pop
js
je
push
mov
xor
dec
add
and
clc
call
lcall
loopne
mov
data16
mov
cmp
aaa
movsl
pop
mov
lret
dec
ljmp
sti
inc
insb
pop
addl
lcall
shll
stos
mov
and
in
icebp
push
mov
movb
decl
imul
jl
xchg
cmp
mov
addr16
push
lret
cwtl
lret
scas
jmp
mov
mov
ret
mov
sub
imul
popf
jg
bound
and
mov
xchg
xchg
add
pop
jo
incl
testl
data16
arpl
je
pop
push
cld
fucomip
xchg
jnp
test
loop
cmc
sbb
cmp
sbb
outsb
or
add
out
jle
dec
or
iret
dec
add
or
ljmp
pop
test
mov
clc
pop
mov
jb
dec
sub
mov
int
jmp
dec
ret
mov
jg
add
and
sbb
scas
testb
aas
add
decl
lea
mov
ljmp
cmc
dec
std
inc
and
lods
mov
pop
push
cmp
cmpsb
mov
mov
call
xor
push
jnp
pop
mov
daa
enter
mov
std
fildll
das
hlt
jmp
in
inc
pop
mov
jbe
stos
sbb
int3
add
incl
pop
cld
imul
adc
leave
add
xor
or
push
mov
mov
cwtl
ljmp
cmc
decl
js
pop
mov
xchg
cmpsl
fwait
test
cli
mov
adc
mov
push
pushl
sbb
das
sub
push
mov
dec
repnz
sti
xchg
in
mov
jl
push
aad
sub
lahf
decl
std
sbb
iret
ret
sarb
test
shl
scas
lock
call
sub
mov
outsb
adc
cmc
sahf
jne
mov
dec
lret
mov
das
stos
lcall
and
arpl
dec
inc
xchg
adc
in
jg
decl
cmpl
fprem1
dec
mov
push
test
je
inc
mov
hlt
and
jg
cmp
push
or
leave
cli
push
cli
lea
dec
push
jae
mov
test
push
in
xlat
ja
jae
sbb
or
dec
jne
lcall
sub
test
test
pop
loop
cltd
cmp
dec
adc
mov
aaa
clc
fistpll
xor
sar
fwait
inc
shrl
fcmovne
das
lea
icebp
jmp
mov
in
dec
jb
jo
xchg
cwtl
inc
sub
jbe
daa
xchg
mov
jle
movsl
mov
or
add
or
mov
ljmp
pop
jge
sub
inc
sub
xlat
sarb
sub
popf
loop
cli
xor
call
xchg
inc
mov
jp
popa
mov
sarl
testb
call
pop
mov
mov
mov
mov
stos
outsl
cmc
jg
nop
jmp
and
inc
sbbl
jg
xchg
add
filds
jbe
push
in
add
jl
jne
jg
adcb
outsb
sbb
sbb
in
leave
adc
roll
adc
jg
clts
mov
adc
aas
rcl
scas
call
sbb
add
aaa
insb
xchg
mov
mov
mov
mov
ficompl
xor
pop
call
shl
inc
ficompl
push
jmp
fwait
xchg
mov
lcall
data16
or
std
ds
pop
inc
test
out
mov
xor
and
fucom
sahf
mov
pop
xchg
fcomp
ljmp
or
and
or
sub
pop
call
fwait
inc
push
and
or
pop
fldenv
outsb
mov
sbb
hlt
popa
icebp
pushl
je
loope
cwtl
in
loopne
mov
hlt
das
adc
and
push
pop
cli
ljmp
in
mov
lock
mov
in
mov
aam
in
xor
fdivrp
push
add
repnz
jp
mov
addb
inc
fwait
and
shll
loope
and
test
mul
in
std
push
jg
outsl
jg
sbb
sbb
imul
jne
mov
sbb
dec
cld
add
pop
push
jmp
scas
in
arpl
test
adc
inc
insl
push
sub
fdivrp
jg
pop
sub
movsb
sub
xchg
testl
cmp
stos
jb
push
cmpsb
or
sub
or
arpl
push
sarl
stc
ja
int3
lcall
call
sti
out
fimull
or
push
stos
sub
jo
dec
popa
jbe
adc
ret
loopne
popa
dec
pushf
cmpsl
sub
dec
cmpsb
mov
push
lcall
stos
stc
std
xchg
std
adc
imulb
mov
leave
lahf
icebp
popf
cmp
or
decl
or
mov
or
cld
stos
or
les
mov
aad
push
rol
sbb
rcrl
dec
call
jg
inc
stos
xor
xchg
inc
in
insb
pop
mov
pop
mov
out
outsl
mov
jae
rorb
lcall
xor
dec
js
ds
movlps
xchg
add
sbb
or
dec
xor
pop
mov
mov
inc
xlat
pushf
and
cmpsb
push
je
aaa
xchg
mov
pop
loopne
pop
out
adc
mov
jb
cmc
sbb
push
dec
hlt
dec
popa
pusha
aaa
dec
mov
repnz
das
xchg
in
les
push
int3
sub
pop
loopne
mov
hlt
lods
and
fbld
andb
pop
andb
mov
push
shrl
sub
or
and
cld
dec
cltd
and
fst
add
pushl
push
cmp
mov
stos
stos
xchg
int
popf
xchg
mov
push
repnz
xchg
dec
call
cli
sbb
pop
lods
scas
mov
xor
xchg
mov
mov
add
inc
loopne
fcmovu
ss
lods
in
jmp
incl
sub
inc
subl
sub
daa
xchg
push
or
sbbb
pop
jle
outsb
jns
aas
push
mov
dec
or
jnp
pop
mov
loop
addr16
mov
pop
ds
inc
pop
scas
pop
cli
leave
call
jmp
ja
adc
jns
adc
pop
scas
mov
xchg
int
mulb
fwait
jmp
inc
das
icebp
pushl
jl
push
mov
pop
inc
mov
cmp
ret
jb
jle
out
bnd
incl
aad
mov
mov
sbb
mov
cltd
hlt
sub
lock
fadd
inc
pop
das
push
sub
stos
cmp
popl
and
mov
adc
ret
sarl
lret
dec
or
sub
mov
lcall
cmp
fists
paddw
push
rorb
push
xlat
cld
ljmp
mov
pop
jbe
insb
in
push
dec
sub
inc
push
lea
mov
aam
sub
cmp
das
push
imul
js
add
mov
and
xchg
add
mov
cld
jo
mov
bound
sbb
negb
add
adcb
inc
mov
add
mov
cs
sbb
jecxz
push
push
mov
sbb
mov
sub
inc
add
add
xor
cmp
and
pop
mov
add
sub
sahf
pop
add
outsb
je
sub
getsec
xlat
insl
aam
jg
sbb
pop
add
out
or
adc
pop
push
pop
and
pop
popf
scas
jne
jb
or
inc
pop
dec
push
fdivl
dec
sbb
adc
aas
insb
jb
or
inc
loop
or
and
adc
test
jmp
sbb
movups
add
adc
cmp
filds
add
add
add
or
add
sbb
aaa
sbb
add
ficomps
pusha
sbb
sbb
fwait
or
add
push
or
sbb
jbe
sbb
add
xor
sbb
push
push
testb
add
add
adc
add
adc
call
stos
sub
adc
push
out
mov
dec
sbb
cmpl
sbb
sub
push
loope
mov
ja
sub
add
jb
sti
div
sub
adc
int
mov
hlt
jg
cmp
pop
imul
out
jo
in
mov
adc
or
je
movl
hlt
ljmp
bound
loope
add
or
arpl
pop
data16
ljmp
jo
pusha
sbb
push
hlt
lods
aas
test
stos
int
cmp
mov
push
out
cs
cmp
pop
adc
jl
movsb
out
rolb
cltd
mov
mov
xlat
sbb
rol
mov
ljmp
push
lcall
pop
ret
sub
push
ljmp
incl
in
lock
pushf
mov
subps
dec
pop
aas
jns
decl
adc
nop
or
mov
cwtl
xchg
sarb
imul
aam
or
xchg
xlat
inc
jle
iret
dec
lds
mov
adc
lcall
std
fildll
repz
mov
bound
dec
out
clc
push
jl
test
dec
js
imul
xlat
faddp
insl
push
adc
lret
lret
pushf
ljmp
sti
test
cmp
pushl
daa
push
cwtl
ds
xchg
sbb
fldl
and
call
add
mov
loope
cltd
xor
cmp
lahf
repz
pop
es
xlat
fildll
cmp
pop
lcall
inc
cmp
in
sub
gs
nop
xchg
sbb
mov
and
cmp
mov
lds
test
and
xor
sahf
fdivrl
jmp
fisttpl
cmpsl
cmc
jne
xor
sbb
aas
fdivrp
lret
jbe
mov
loop
push
shlb
pop
cld
ljmp
jno
mov
adc
inc
loop
adc
dec
xchg
mov
imul
jb
in
jg
jp
int3
mov
and
in
jb
fwait
les
icebp
mov
adc
aas
scas
mov
sub
mov
mov
pop
pop
dec
adc
es
loop
inc
pusha
adc
bound
mov
decl
popa
xchg
ja
aam
sbb
jno
out
inc
sbb
enter
lds
repnz
mov
decl
adc
mov
out
iret
jl
and
and
xlat
jmp
adc
out
decl
std
fcomps
mov
mov
jle
lods
jl
loopne
test
mov
xor
mov
orl
aaa
ret
outsb
mov
leave
mov
decl
inc
mov
in
call
sub
cwtl
mov
std
inc
xor
aad
call
ds
dec
mov
sbb
je
and
mov
and
adc
and
push
cwtl
dec
clc
arpl
in
fwait
lahf
loopne
xor
shrl
call
xchg
sbb
push
xor
scas
les
call
xor
cs
bound
jle
movsb
pop
mov
sbb
push
repz
and
decl
test
inc
into
push
dec
mov
xchg
mov
ret
sti
mov
xlat
ljmp
loopne
int3
mov
cmp
adc
popa
out
insl
sbb
inc
pushl
cmp
jmp
insb
or
ret
mov
clc
jnp
push
pusha
mov
lods
out
adc
xor
or
or
sub
sbb
popa
cmp
loop
push
stc
out
jb
dec
arpl
js
lahf
or
in
jp
push
inc
bound
or
adc
pop
clc
jmp
lahf
jae
adc
mov
push
iret
push
scas
sbb
mov
xchg
decl
add
cli
mov
and
int
sahf
ss
pop
je
in
int3
rolb
mov
call
sti
dec
outsb
aaa
push
mov
lock
jbe
push
frstor
mov
mov
cmpsl
jp
jae
out
push
mov
in
or
jl
and
jmp
lcall
dec
fidivrl
push
stc
sub
xchg
push
test
mov
jmp
mov
das
mov
mov
insb
mov
xor
int3
into
aas
jae
dec
incl
sub
mov
stos
mov
aas
adc
aam
in
mov
mov
and
inc
mov
and
jg
orl
leave
pop
cmpsl
pinsrw
fsubrl
mov
cld
idivb
int3
lahf
xchg
cmpsl
into
lahf
lods
push
and
ficompl
iret
lock
add
decb
insb
sub
cwtl
pop
push
pop
decl
cmc
fimuls
ficomps
in
lods
adc
mov
mov
pop
popf
mov
lcall
pop
repnz
les
mov
dec
or
aad
imul
mov
insl
pop
divb
jmp
sbb
pop
enter
sub
dec
xchg
aaa
mov
icebp
aaa
fildll
sbb
jmp
sbb
shrl
push
in
jp
lret
mov
lds
xor
and
pop
or
pop
adc
jle
pop
cwtl
jp
lret
sub
hlt
inc
movb
mov
out
jg
mov
fnstsw
rorb
divl
cmpsb
out
maskmovq
movsb
test
add
cmp
daa
xor
decl
mov
sub
push
and
push
into
outsb
bound
clc
movl
gs
or
lcall
xor
aad
into
fldt
into
fs
decl
push
cmpsb
ds
fs
mov
arpl
xor
mov
pushl
cld
xchg
dec
xor
cmp
xor
inc
pop
pop
mov
mov
inc
xor
leave
cwtl
add
insb
pushf
and
push
mov
jg
pop
jno
and
inc
xchg
cmp
addr16
dec
loope
fisubrs
mov
xlat
sub
adc
dec
sub
cltd
paddw
test
outsl
addr16
jg
jp
pop
xchg
xchg
daa
mov
jno
shrb
and
mov
mov
mov
add
cmpsl
repz
mov
inc
lock
loope
sbbb
out
push
out
and
ljmp
lock
xchg
fdivs
xchg
fildl
fsub
pop
lods
mov
repnz
add
out
fisttps
subb
jno
xchg
ljmp
pushl
cmpsl
orl
add
stc
pop
sarb
mov
push
xchg
clc
cmp
cmp
xor
ljmp
jmp
cmp
mov
repz
lahf
lock
pop
jmp
mov
mov
pop
in
ja
fwait
adc
inc
or
mov
mov
jg
pushl
pop
cmpsl
mov
or
fisubl
scas
mov
dec
mov
decl
cltd
pop
mov
push
push
jne
out
mov
mov
call
cmpsl
or
es
repz
push
add
clc
fwait
push
call
lock
sub
xchg
ret
adc
cltd
or
ss
cmpsl
mov
ds
mov
push
ja
cmp
mov
lret
adc
test
lcall
push
neg
rolb
push
pop
les
xchg
mov
sub
fwait
test
call
jmp
pop
mov
mov
das
insl
push
mov
in
addr16
push
mov
int
jns
icebp
sbb
call
sbb
push
inc
lret
js
adc
rcr
sub
pop
clc
js
xlat
out
int
adc
repnz
fsubr
in
mov
call
inc
cmc
decl
sbb
aaa
adc
in
ljmp
incl
insb
push
jbe
dec
mov
push
insb
sti
imul
sbb
jg
js
push
aas
sub
inc
and
push
fstpt
inc
ljmp
ljmp
shll
fs
idiv
jbe
cmpsb
sbb
push
icebp
xchg
cli
es
dec
out
mov
lcall
and
mov
int
gs
mov
pop
push
jle
data16
sbb
ljmp
jecxz
lret
movsl
pop
xor
mov
sbb
pusha
inc
mov
incl
mov
push
sbb
mov
sub
dec
ds
popa
xchg
xchg
call
mov
xor
and
sub
out
mov
mov
mov
jmp
push
rolb
repnz
roll
mov
mov
out
or
movsl
addb
sbb
xor
dec
or
sbb
testl
cmpsb
mov
sub
and
jl
jg
lcall
xchg
inc
insb
dec
fwait
cltd
or
imull
cmp
nop
and
jbe
stc
add
pusha
and
mov
cmc
pop
lock
decl
xchg
cld
mov
dec
pop
stos
sbb
xor
sbb
adc
mov
mov
add
les
xor
xchg
push
fmuls
inc
lcall
std
popf
stc
mov
pop
inc
test
inc
mov
pop
jo
nop
test
mov
test
movsl
and
push
movsb
fs
shl
adc
fdivr
das
out
mov
cmp
sbb
dec
add
rclb
decl
push
push
loope
shlb
rcrl
shlb
sti
out
sub
lock
mov
and
rolb
bound
adc
cs
or
inc
push
lock
int3
sarb
mov
or
fisttps
mov
jg
add
xor
repnz
pop
test
lcall
add
push
insl
sub
push
cmpsb
lcall
mov
cld
jmp
sti
jle
js
cs
bound
cmp
rclb
jg
add
aaa
cli
ds
cmp
les
ljmp
pushl
mov
cld
lods
ja
jb
pop
xchg
rorl
hlt
cmp
sub
mov
xchg
cmc
incl
adc
add
pxor
cmp
pop
addb
lea
mov
push
addr16
xor
sub
jp
andl
jp
fwait
adc
cld
movsb
mov
mov
rclb
nop
mov
mov
cmpb
lods
ds
mov
or
mov
and
mov
hlt
mov
std
adc
push
ljmp
idiv
push
mov
push
ja
imul
jb
movsb
rcrb
out
or
nop
pop
loop
pushl
jae
shrl
stos
pop
lahf
pushf
in
inc
mov
call
aaa
jno
test
int
jg
and
inc
jg
fnstcw
pusha
cmp
call
iret
sbb
jae
lods
std
cmp
pop
mov
cli
sbb
decl
out
cmp
xor
cwtl
inc
sub
jmp
fdivr
pop
push
mov
inc
leave
leave
inc
xlat
inc
movsl
loopne
call
dec
outsb
dec
rcrb
cmp
lods
pushl
pop
and
mov
cmp
xchg
xchg
pushf
sub
movsb
aas
mov
out
fwait
or
sub
push
lea
adc
adc
lods
mov
xchg
out
pop
inc
pop
jge
sub
in
mov
or
sarl
push
cmp
and
mov
jne
pop
add
fnop
jmp
movsl
dec
pop
clc
outsl
icebp
lods
inc
jne
adc
std
adc
jno
addr16
push
or
stos
in
or
jl
xchg
sub
xchg
pop
jbe
mov
push
xor
pop
cmp
ss
push
stc
sub
cli
mov
xchg
sarl
out
xchg
test
in
push
hlt
stos
call
das
adc
xlat
cmp
clc
sbb
popa
jle
fucomip
pop
clc
or
jns
sbb
add
in
mov
rol
push
mov
js
cli
mov
lods
mov
push
mov
stc
leave
xor
pop
sub
lcall
fisttps
or
or
test
jl
js
push
jle
fs
mov
pop
mov
or
inc
cmp
lret
insl
jnp
enter
ret
cltd
fbstp
jmp
decl
decl
or
daa
scas
sbb
bound
aaa
jge
cltd
pop
sti
das
cmp
jmp
push
lds
push
inc
into
jns
sub
shll
clc
jns
cltd
das
lock
mov
int
jb
test
xor
mov
pop
insl
jg
jp
clc
mov
lahf
dec
lock
adc
daa
inc
lcall
cmp
stos
jg
fbstp
jo
fdivl
push
jo
adc
mov
inc
or
movsl
fsub
cmpsb
fnstcw
call
test
mov
daa
ror
std
mov
mov
enter
add
sbb
rclb
mov
decl
lea
inc
imul
loop
pop
pusha
xor
rclb
icebp
decl
gs
repz
fadds
mov
push
jns
push
jbe
jmp
or
cwtl
xor
sbb
enter
mov
dec
test
dec
jl
adc
push
xchg
push
in
hlt
adc
sarl
xchg
outsl
scas
xchg
push
lods
incl
adc
jb
jae
ljmp
fstp
and
xor
cltd
test
loopne
jbe
mov
aaa
scas
popf
repz
fdiv
sbb
pushl
mov
enter
xorl
pop
add
das
push
ljmp
jmp
imul
push
ficoms
pop
add
jns
movsb
movsl
jne
addr16
outsl
xor
fstpl
cmpsl
negl
cmp
das
ds
shlb
or
sbb
pop
cmp
jae
sahf
hlt
xchg
outsl
lock
shll
xor
shll
into
ljmp
cmc
dec
pop
pop
push
sahf
fwait
cs
in
push
aad
push
ret
jmp
xlat
mov
call
cmp
or
cli
push
pop
jo
sbb
or
out
mov
fs
jg
dec
xor
out
in
jbe
fs
pop
adc
sub
ljmp
cmc
cli
fs
hlt
es
cmp
mov
iret
fdivrl
cmp
cmpsb
mov
adcl
lods
addl
mov
push
jge
cld
fistpll
jmp
push
mov
aam
pop
sbb
sbb
jp
popf
jb
movsl
addr16
and
addl
insb
fs
into
lds
daa
icebp
inc
leave
push
movl
stos
add
imul
pop
lcall
scas
fmul
cmp
aas
mov
xor
sarb
cli
mov
iret
mov
dec
jnp
pop
dec
cwtl
pushf
orl
push
jg
or
es
sbb
lea
mov
mov
aas
repnz
scas
or
cmp
jg
aam
xor
or
dec
ljmp
and
dec
sbb
fisttpll
sub
mov
add
in
or
mov
cmp
pop
sbb
jns
sahf
push
mov
sar
or
lcall
aam
cmp
sbb
push
sub
sbb
xchg
cmp
sahf
sysenter
in
int3
push
pushl
sbb
dec
add
into
add
repz
push
shl
repnz
ja
mov
jnp
push
incl
call
les
and
repnz
insl
push
ds
jae
loope
jg
mov
dec
push
or
jle
push
cmp
call
shrb
and
mov
fucomi
cmc
push
imul
sbb
sahf
repnz
jp
or
xchg
or
shl
stc
clc
dec
lds
pop
lahf
movsl
mov
incl
sub
vrcpss
mov
das
pop
sbb
mov
cmp
decl
dec
fcomps
jle
scas
iret
ret
int3
or
mov
sti
jg
pop
clc
call
push
fisttps
sub
mov
idivl
leave
sahf
aam
roll
fnstsw
cmp
xchg
stos
mov
xchg
out
iret
push
or
in
test
call
ds
jge
arpl
add
push
sbb
jmp
lret
mov
mov
pop
in
cmp
pop
and
lds
subb
cltd
jb
jp
js
or
in
stos
popf
leave
inc
addr16
fdivr
xchg
mov
in
pop
mov
or
jg
pop
pop
pop
xchg
nop
sti
in
cs
mov
push
or
xchg
xchg
test
xor
sub
in
sbb
outsb
data16
mov
aad
jmp
pop
imul
mov
fisubs
cmc
sti
pop
or
add
pusha
pusha
and
or
lcall
lock
mov
inc
pusha
mov
lods
ds
js
adc
sti
mov
jg
sub
adc
loop
jg
mov
subl
ljmp
icebp
pop
test
clc
xor
sbb
test
dec
or
subl
jnp
inc
pop
jb
mov
cmp
xchg
call
mov
fsubs
in
roll
mov
sbb
add
fcoml
and
mov
xchg
js
fdivs
add
ret
add
add
pop
or
inc
mov
push
jecxz
dec
insl
cmp
aad
stos
cwtl
ljmp
mov
push
pushl
clc
test
jno
cmp
fcompl
xchg
pop
cmp
aad
xchg
stos
aaa
mov
in
inc
sbb
stos
test
mov
jae
pop
cmp
cmp
mov
test
pop
mov
loopne
dec
dec
jbe
xor
out
cmp
pusha
ds
pushf
mov
push
sub
dec
hlt
out
aaa
std
pop
push
sbb
leave
lcall
xchg
jg
xchg
jno
and
testb
out
scas
inc
mov
outsl
fistl
lock
mov
in
xchg
subl
xor
fisubrs
pop
test
lret
daa
push
push
enter
adc
mul
imul
sub
cld
clc
xlat
jg
lcall
adc
push
rcr
jg,pt
pushl
jno
std
insl
loop
je
and
xchg
in
decl
pop
add
jl
sbb
xchg
adc
pop
loopne
and
iret
fstpt
into
cltd
xchg
push
cli
push
inc
sahf
int
cmc
aam
loope
movsb
or
in
rep
orb
mov
std
lret
jae
insl
xchg
push
enter
stos
sbb
aad
rorb
push
adc
xchg
mov
popf
inc
jae
xlat
mov
pop
cli
xchg
pushf
inc
ja
lret
mov
fidivs
xchg
pop
push
or
out
punpckhwd
scas
pop
jae
xchg
popf
pop
sub
mov
jge
cmc
pushl
xchg
sub
push
jno
mov
test
mov
inc
and
jae
fisubrs
and
aam
or
fsubrl
loope
xchg
xchg
mov
test
push
in
adc
jg
pop
addl
mov
mov
ret
mov
aaa
cmp
sti
xchg
incl
incl
mov
fwait
icebp
stos
fldl2e
imull
pop
leave
cmp
stos
das
es
sbb
lcall
dec
sti
aad
push
imul
dec
outsb
aam
mov
sbb
push
mov
mov
aam
push
std
jns
push
cmp
xor
and
fildl
pusha
inc
ljmp
call
pop
nop
cmp
icebp
cwtl
pop
arpl
jge
lahf
pop
setne
mov
cld
test
mov
out
mov
jmp
cltd
cmc
in
fwait
mov
loop
sti
sub
sti
ds
lock
jp
push
gs
inc
mov
mov
hlt
pop
sub
fdivrs
pop
and
incl
loop
in
loope
inc
movsb
es
ret
cmpsb
and
call
jne
sbb
adc
leave
imul
rcrl
mov
sarb
mov
jo
adc
sti
xlat
push
sub
imul
imull
sbb
jo
sub
mov
sbb
mulb
pushl
insb
fwait
iret
and
sbb
xor
push
or
test
pop
lret
mov
jae
decl
std
mov
cltd
mov
push
repnz
aad
call
xor
in
push
jae
mov
mov
sub
aam
cmp
pop
fmulp
xlat
cld
mov
cwtl
aas
push
jno
and
or
js
jns
adcl
sub
incl
lds
shl
cmc
loopne
cmpsb
adc
ljmp
push
fnstsw
call
cs
sti
jne
mov
andl
inc
jmp
inc
fwait
lcall
outsb
out
jo
into
jo
das
cld
xor
daa
arpl
ljmp
push
je
push
and
and
test
ljmp
cli
incl
inc
inc
pop
cmpsb
pop
mov
mov
push
cmc
call
aaa
fiadds
dec
sbb
jmp
push
push
fiaddl
aad
fistps
call
das
out
mov
lahf
dec
and
jae
mov
sbb
sub
mov
scas
lahf
xchg
imul
fisubrs
adc
push
pop
lret
fists
mov
test
mov
lds
xchg
ret
jno
cwtl
test
jecxz
sbb
movsb
arpl
js
fwait
test
ret
sub
jg
jb
mov
mov
cltd
jns
das
fbld
cli
cli
call
lods
inc
pop
mov
stc
cmpb
shlb
sub
imul
cmp
ret
push
fstl
push
jae
addr16
bound
push
insb
hlt
cmp
out
adc
mov
hlt
das
ss
sub
mov
jl
pop
pop
mov
mov
popa
jg
mov
pop
ret
adc
int3
mov
pop
movsb
cld
lcall
hlt
pop
xor
push
ret
mov
sbb
add
dec
sti
xchg
out
push
add
mov
sbb
int3
in
mov
xchg
fdiv
pop
jg
pop
inc
push
mov
das
dec
fwait
mov
sub
test
mov
lcall
or
jae
mov
xor
cmp
call
or
and
leave
cld
ss
mov
lcall
jmp
out
cmp
and
jp
mov
cmp
pop
jle
lret
mov
and
mov
pushl
push
sub
dec
adc
mov
sbb
aad
rorl
mov
xor
mov
fs
jnp
iret
mov
js
faddl
es
sbb
adc
ss
add
and
or
and
mov
inc
push
mov
fdivrl
jp
adc
mov
das
jo
push
and
out
data16
cmpsl
out
mov
or
leave
iret
repnz
cmp
imul
mov
popf
inc
cmc
call
jg
data16
xchg
push
arpl
push
jae
xchg
dec
fwait
incb
ljmp
adc
call
shll
jae
lock
lods
decl
mov
out
pop
mov
xchg
negb
add
adc
fimull
mov
xorb
decl
lock
aas
addr16
int3
lret
in
add
call
sahf
sbb
jle
incl
pop
dec
js
mov
mov
or
dec
imul
adc
mov
push
rolb
negl
jb
pop
lock
sbb
test
sti
push
incl
jl
inc
jae
dec
dec
add
cmp
xchg
decb
lods
repnz
jg
xchg
dec
in
pop
clc
pop
cmp
lret
popa
rclb
xor
insb
addl
outsl
xchg
cmp
adc
push
inc
pop
fildl
cli
pop
imul
jbe
pop
divb
nop
pop
out
lcall
inc
mov
call
sub
and
and
and
aaa
dec
lret
pop
sarl
sub
mov
jbe
sub
rcr
lock
cs
nop
mov
icebp
rcl
push
xchg
mov
jb
lret
and
mov
cld
add
sub
jmp
sub
test
pop
imul
call
scas
fidivrs
fnstenv
inc
sub
inc
rolb
or
in
sar
xchg
clc
push
or
xor
mov
push
mov
aam
aam
mov
pop
outsl
incl
imul
cmp
mov
lcall
pushl
out
mov
orl
mov
pop
cld
and
out
enter
call
movsb
aas
scas
movsb
mov
es
push
xor
inc
dec
arpl
push
fmuls
dec
mov
xchg
xor
mov
push
xor
loope
icebp
imul
inc
lret
inc
mov
pushl
mov
ljmp
and
mov
adc
das
int
dec
sub
movntq
out
xchg
mov
into
movsb
add
xchg
push
repz
sub
std
cmp
mov
or
push
mov
inc
das
mov
adc
pop
stos
cmpsb
scas
aam
push
xchg
stc
or
pop
add
lcall
les
bound
xchg
mov
fistps
sub
shrl
in
ret
pushl
rcll
pop
inc
test
arpl
fimuls
or
inc
cmp
mov
inc
in
pop
push
inc
rorb
idiv
cmp
adc
push
xor
das
hlt
mov
loopne
js
add
dec
pop
mov
mov
fwait
xor
jmp
ljmp
fnstenv
enter
movsl
movsl
xchg
lods
mov
aam
mov
fiaddl
stc
popf
pop
out
sbbl
inc
nop
lods
lahf
cmpsl
imul
xor
cli
pop
push
ret
fwait
imul
lds
cmpl
test
emms
pusha
mov
pop
clc
or
imul
bound
iret
and
pop
stos
test
pushl
stos
test
lahf
hlt
pop
int3
cwtl
repz
ljmp
in
out
add
xchg
adc
fdivl
sar
loopne
lods
cs
pushl
test
cmc
xchg
test
inc
mov
cld
push
dec
mov
inc
loop
xor
ljmp
icebp
in
jnp
jecxz
andl
movsl
ljmp
xlat
mov
cmp
pop
inc
xor
cmp
outsb
int
mov
jns
ret
sbb
pop
inc
adc
outsb
push
scas
xor
outsl
mov
icebp
add
sub
mov
inc
int3
inc
ds
lock
jg
cmp
call
aas
sub
repz
ljmp
fmull
imul
xor
mov
stos
inc
cmp
add
outsl
and
xchg
mov
ljmp
pop
pop
jge
mov
xor
pusha
lock
dec
mov
push
movb
dec
jmp
cmp
push
lret
jle
clc
loop
pusha
fucom
cli
cs
scas
sbb
pushf
add
lods
jmp
outsl
lock
mov
or
movsb
and
pop
in
decl
std
enter
stc
scas
xor
inc
adc
iret
stos
and
cli
mov
mov
cmp
andl
pushl
in
jb
int
push
sbb
mov
pusha
or
imul
push
jl
jge
fistpll
dec
dec
and
sbbl
out
push
fcomps
sahf
mov
daa
add
dec
jl
sub
scas
cmp
popa
aas
cs
pop
mov
adc
adc
test
rol
loop
in
mov
xorb
repnz
and
shll
sub
jle
pushf
es
or
lcall
cld
fs
pop
xchg
lods
xlat
or
add
cltd
push
hlt
mov
dec
jb
mov
ljmp
mov
and
or
lea
xchg
fs
jns
or
sahf
lret
mov
call
push
jp
aas
rorl
inc
fisubl
cmc
incl
lea
mov
imul
mov
decl
out
sbb
add
insb
jg
adc
roll
fsubrs
lahf
jl
inc
gs
mov
call
adc
inc
mov
cld
xor
and
imul
lea
cmpsb
inc
les
xlat
pop
add
lret
lods
push
lock
lea
loope
jg
cwtl
sti
sbb
fs
push
scas
jne
adc
faddl
push
and
jg
push
fimuls
sti
add
add
aas
xchg
xchg
call
cmp
mov
or
xor
pop
lods
mov
xor
add
ret
inc
mov
cmp
call
rol
xchg
jbe
xor
cmp
jo
icebp
mov
sahf
mov
jge
or
loope
sbbb
mov
mov
mov
push
fs
jmp
jmp
bound
pop
lahf
push
sbb
jle
scas
fisubrl
mov
pop
xchg
ljmp
int3
nop
ud1
roll
xchg
jbe
daa
es
jg
push
decl
pushf
adc
push
data16
add
ljmp
push
adc
rcrb
xor
mov
lcall
sbb
and
sub
add
lret
jmp
or
test
vmread
lcall
jge
out
fisttpl
pop
dec
mov
pop
int3
push
xor
gs
adc
dec
xchg
std
or
mov
push
ljmp
xchg
lods
pop
es
pushf
inc
lock
ss
dec
mov
xor
push
outsb
and
lods
mov
push
lahf
loop
arpl
dec
jns
add
pop
sbb
or
iret
add
sub
mov
sub
push
pop
imul
jae
mov
sub
jmp
filds
loopne
add
sahf
out
sahf
rol
mov
into
inc
inc
loope
jmp
das
dec
and
sbb
jae
and
pop
lea
mov
sub
iret
pop
dec
pop
jp
into
insb
xchg
mov
popf
add
xor
mov
add
je
sbb
sbb
pop
mov
jno
pop
bound
ret
cmp
dec
inc
pop
add
jbe
xor
mov
sub
bound
jns
je
inc
mov
cmpsl
aas
imul
push
cli
cmp
mov
lcall
mov
xchg
push
push
xchg
test
daa
hlt
out
sbb
or
fcoms
sub
flds
xor
dec
sub
in
add
pushl
loop
fstl
mov
repz
in
mov
popf
mov
push
push
enter
or
call
mov
dec
aad
mov
jb
cwtl
or
repz
test
dec
cmp
and
cmp
fbld
sub
ljmp
mov
jl
outsl
mov
scas
test
mov
add
std
popf
flds
clc
movsl
incb
xor
iret
test
mov
call
mov
rorl
mov
mov
lret
and
pop
popf
ljmp
ret
hlt
jg
popa
int3
notb
lcall
xorl
lods
test
sub
jmp
sbb
stc
cmpsb
hlt
or
mov
out
insb
mov
jmp
divb
adc
fidivl
mov
lcall
pushl
out
loope
sti
cmp
dec
movsb
cmp
lods
testl
pop
divb
and
aam
movsl
xor
jge
sub
sbb
call
cli
imul
xor
sbb
push
sbb
xlat
push
cmovns
mov
stc
cmp
mov
in
fwait
push
fnstsw
pop
add
test
decl
push
push
push
ret
adc
xlat
sar
loope
push
jecxz
in
mov
das
rclb
inc
jmp
dec
test
mov
xchg
xor
mov
sbb
lods
sub
lods
ljmp
out
repnz
mov
cli
outsb
jb
dec
mov
cmp
nop
and
jo
pop
pushl
jge
add
mov
jo
cmp
dec
xor
decb
sbb
cli
jg
sbb
das
pop
mov
loope
pop
ds
pop
arpl
mov
or
push
cmp
inc
push
cmp
mov
jg
jmp
or
mov
jge
arpl
pop
test
test
jg
cmc
fmulp
xchg
int
mov
aad
nop
pop
jbe
out
xor
xor
ljmp
jg
dec
sbb
jb
mov
es
push
xchg
ret
add
jg
jl
iret
shr
imul
lret
pop
add
fs
inc
test
mov
cwtl
int3
mov
mov
call
dec
repnz
jbe
dec
push
sub
mov
sub
pushl
jl
pushf
dec
sub
pop
mov
int3
clc
push
mov
imul
ror
mov
call
sti
inc
dec
cmp
cmp
push
xlat
ljmp
incl
notb
pop
test
ljmp
pminsw
scas
ficoml
repz
ret
push
mov
ljmp
cmc
call
es
xor
aas
push
add
jge
pop
les
mov
das
sub
fsts
xchg
ret
das
ficoms
xchg
cmpsl
add
push
call
shl
jg
jg
cmc
add
mov
pop
flds
xchg
fld
aad
movsb
sub
lcall
gs
mov
in
out
aaa
mov
sar
or
or
mov
je
call
decl
in
outsb
sbb
aas
fmul
xor
pop
push
dec
pop
and
ffreep
aam
jg
xchg
xchg
push
sub
stos
and
fsubrs
or
outsl
cmc
inc
xor
pop
loop
add
lea
ja
enter
xor
leave
add
add
adc
inc
and
ud0
adc
and
mov
add
dec
ja
repz
or
add
bound
push
adc
jnp
adc
adc
or
repz
rclb
inc
push
xchg
incl
in
aas
aas
aas
orl
jmp
mov
jle
loopne
xchg
mov
js
call
lds
dec
sub
ficoml
pop
push
ret
in
mov
xchg
cmp
xchg
push
bswap
pop
cld
incl
cli
outsl
mov
push
adc
push
jp
mov
and
ss
lcall
sub
add
shrb
fists
and
pop
aaa
js
add
pop
lcall
cmp
decl
inc
ret
sbb
add
addl
add
daa
cltd
pop
push
incl
jno
cltd
pusha
and
mov
sar
ljmp
mov
ds
and
mov
xchg
movsb
jnp
cmpsb
scas
dec
pop
xor
dec
insb
inc
pusha
ljmp
jle
je
xlat
mov
pop
inc
mov
repz
sbb
call
sahf
sti
push
jnp
loopne
sbb
lds
jo
push
adc
das
jle
movb
scas
iret
hlt
ret
mov
fistl
sbb
inc
or
mov
mov
cli
xor
xor
popa
fsubrs
inc
push
add
pushf
add
mov
adc
jb
inc
push
inc
push
xchg
icebp
xchg
push
nop
inc
or
faddl
push
fldl
push
dec
or
jmp
std
mov
adc
pushf
dec
popa
adc
sbb
in
pusha
push
and
std
cmp
pusha
jmp
ljmp
mov
push
push
rep
call
cmp
and
inc
repnz
push
inc
push
or
xor
call
aam
push
and
mov
adc
call
adc
lahf
mov
and
pushf
faddl
cmp
rcrl
push
sub
pushf
pushl
aaa
sbb
sub
mov
hlt
outsl
or
dec
lock
aad
nop
push
push
adc
outsb
or
cli
dec
repz
shlb
and
andl
dec
call
jo
in
push
cmovae
push
std
in
pop
adc
mov
insb
xor
into
aaa
std
pusha
fildll
add
jg
je
mov
adc
mov
sub
popf
adc
in
jmp
push
pushf
cmp
inc
xchg
pusha
pusha
call
add
lea
pop
adc
mov
outsb
add
dec
shl
jl
out
adc
pop
xor
lock
scas
imul
stc
pop
pusha
adc
fsubrp
orl
xor
mov
jmp
fidivl
jle
pusha
mov
and
mov
clc
mov
adc
push
les
fcom
mov
and
filds
push
lock
or
jmp
stc
pop
in
inc
clc
mov
pushf
jl
call
cmp
test
jne
mov
dec
inc
call
push
mov
xchg
adc
js
dec
push
and
call
popf
mov
sbb
pushf
call
ret
adc
jmp
popa
xchg
test
inc
mov
jg
fcomps
ds
mov
call
imulb
mov
mov
gs
mov
or
stos
not
push
setl
or
dec
or
fwait
test
push
das
push
push
jne
andl
add
mov
dec
shll
sbb
loopne
std
in
jmp
test
cmp
gs
cld
imul
aas
shlb
push
jle
sbb
call
or
movb
sahf
test
cmp
push
call
aaa
testl
cmp
stos
xor
mov
flds
repnz
scas
sti
hlt
cwtl
cmp
sub
in
data16
mov
mov
adc
in
mov
call
stc
inc
rcr
push
rclb
repz
add
shr
andb
fiaddl
clc
lea
mov
ja
pushl
inc
and
decl
xor
xor
pop
mov
icebp
pop
hlt
jae
bnd
or
fsubrl
inc
jno
or
cmp
mov
rcrb
in
ja
jbe
dec
call
jmp
test
lea
pushf
pop
lret
out
mov
in
cmp
xorl
int3
push
mov
icebp
pushf
push
cmp
mov
jmp
push
aas
std
outsb
incl
mov
push
pusha
fadd
loopne
xchg
or
jns
insl
cmp
pop
jno
cmp
add
jle
rolb
cltd
mov
pop
inc
mov
xchg
out
cmp
mov
icebp
inc
out
mov
and
call
ret
fisubrl
filds
xchg
call
iret
stc
mov
test
shl
cmp
out
ret
addl
out
into
push
adc
or
push
cmc
std
sbb
mov
int
stc
push
mov
out
and
inc
decl
test
cmp
push
pushl
xor
jp
in
jmp
mov
int
push
fistpll
shl
ss
leave
test
xchg
and
mov
xor
outsl
pop
imull
lea
stos
lcall
icebp
jo
pop
add
inc
bnd
or
fidivrl
mov
and
jmp
adc
and
nop
pushf
loopne
stos
adc
out
jbe
pop
adc
cmp
clc
cmp
clc
xor
sbb
push
adc
hlt
pusha
cmp
mov
inc
pushf
cmp
push
movsl
or
sbb
stos
add
jmp
and
or
and
mov
pop
mov
sub
fcomps
pushf
xchg
sbb
sti
push
rclb
and
xchg
push
aas
ficomps
inc
pushf
push
hlt
std
arpl
mov
cmp
pusha
jp
repz
lods
pusha
add
sbb
je
test
mov
call
mov
push
mov
loopne
xor
and
add
jae
imul
fildll
je
ret
xchg
sbb
pop
add
pop
sbb
das
pusha
cltd
mull
jo
fldt
adc
fsubrp
arpl
out
clc
shlb
push
inc
xchg
push
outsb
loopne
outsb
ss
ret
mov
cmc
cmc
les
pop
jmp
mov
dec
mov
xor
dec
loopne
and
adc
fstp
add
jbe
sub
lahf
js
mov
test
sub
xchg
stos
push
jmp
fcmovnu
mov
pusha
std
mov
cmp
jmp
int
dec
pop
push
dec
test
adc
sahf
lret
push
loope
adc
aaa
cmp
jo
jnp
divb
lea
sbb
mov
sahf
jb
sbb
jl
fmull
ret
mov
ret
pusha
call
je
mov
mov
cmc
jle
sbb
xchg
call
enter
movsb
xlat
sub
cmp
pop
fstpt
mov
emms
cmp
movsl
pop
xorl
cmp
xor
or
jl
mov
lds
push
dec
sti
das
hlt
push
push
nop
dec
mov
out
int3
out
shll
lret
js
inc
in
inc
mov
ss
lcall
call
insw
adc
push
shr
mov
mov
addr16
sbb
arpl
pushf
movsb
jp
push
inc
push
adc
lods
jmp
and
cmp
in
jle
call
les
andb
xor
push
mull
xchg
and
test
jae
mov
adc
add
loope
std
cmp
js
enter
xor
cs
dec
cmp
jb
and
cwtl
and
pop
mov
aas
mov
in
mov
adc
add
aaa
fmull
das
movsb
mov
fisubs
imul
imul
mov
imul
cmc
jno
add
pop
mov
push
es
mov
cmp
repnz
or
out
iret
cmp
iret
dec
movzwl
xchg
jmp
out
imul
push
sar
sbb
lret
or
pop
imul
cli
jo
add
loopne
adc
movsl
testl
or
jg
sbb
adc
mov
addr16
jmp
out
mov
popf
icebp
xlat
in
cmovae
jecxz
popf
int
adc
cld
sbb
mov
call
pop
fdivr
lds
clc
inc
std
dec
cld
pusha
icebp
mov
and
add
mov
mov
mov
shl
jle
fidivrl
sub
leave
adc
adc
sbb
and
inc
xlat
cmp
ja
xlat
std
sbb
sbb
pop
popa
int
aaa
mov
call
sub
hlt
push
pusha
roll
xchg
gs
and
mov
outsl
mov
jmp
ffree
push
cmp
jmp
sti
pop
cld
inc
fwait
setbe
loopne
push
sub
mov
imul
ja
or
xchg
sub
dec
xlat
push
lea
inc
out
add
rcr
dec
dec
or
call
mov
push
rorl
inc
out
pop
mov
xchg
cmp
push
lock
addr16
mov
out
xor
sub
inc
pop
or
push
das
mov
mov
push
xchg
xor
lds
mov
mov
scas
push
jmp
sub
xchg
lahf
cs
in
adc
in
call
aam
imul
lods
jnp
hlt
call
in
add
mov
into
aad
adc
aaa
pop
mov
out
andb
pop
out
mov
out
pop
std
std
decl
mov
ret
jle
jge
sub
add
ss
decl
sbb
jge
stc
in
sbb
mov
pop
lds
in
adc
incl
popa
out
dec
add
push
in
xchg
push
data16
aam
sub
push
jmp
dec
sbb
inc
insl
mov
mov
ret
jp
out
mov
outsl
sub
xchg
pop
data16
pop
das
or
in
std
jge
pop
in
fmuls
lahf
and
push
lret
out
fisubrs
adc
jg
stc
incl
sarl
add
adc
inc
jae
cmpsl
mov
outsl
push
ljmp
add
loopne
adc
inc
cmpsl
xchg
arpl
mov
ret
lret
bnd
jb
mov
mov
int
push
adc
jg
rorb
in
fstp
sub
and
inc
lock
aam
pop
out
fsubs
adc
fistpl
or
icebp
add
inc
push
insl
push
movsl
sarl
in
sub
clc
xlat
bound
cld
push
rolb
lock
mov
iret
and
je
xor
inc
fadd
push
ret
xor
incl
and
jbe
mov
jb
push
stos
sbb
int
loope
mov
lahf
idiv
jl
or
or
cmpsb
jbe
xchg
mov
jecxz
add
cmp
add
test
push
out
sub
aad
sub
push
imul
fldt
fsubrl
cmp
dec
mov
adc
icebp
dec
movsl
xor
fneni(8087
ljmp
in
jns
addr16
popa
xchg
and
fimuls
loope
das
fdivl
jo
push
cwtl
adc
or
bound
decl
xorl
push
cmp
shll
dec
push
sub
cwtl
fwait
lcall
int3
mov
repnz
mov
aas
pop
repnz
jae
sti
js
xchg
decl
nop
daa
inc
fcoms
mov
xchg
xor
out
sub
pop
enter
das
adc
into
and
fisttpl
aad
push
xor
and
cmpsl
sub
jmp
ror
push
jg
jecxz
notl
pop
fcmovnb
mov
dec
add
loope
in
xlat
lods
fistl
nop
lods
jnp
in
outsb
dec
lds
fdiv
aam
pop
rcrl
in
xchg
es
jns
pop
xchg
and
test
add
jg,pt
xchg
scas
push
cmc
lret
test
stc
enter
loopne
pop
fildl
xchg
or
decb
cmc
movsb
ret
popa
jge
fistpll
jns
insl
pop
pop
inc
mov
jge
imul
fistps
leave
and
aam
push
int3
insl
jecxz
clc
popf
xchg
test
fimuls
popf
popa
and
add
les
and
inc
mov
aas
loop
lret
outsl
das
sbb
adc
inc
xchg
xchg
pusha
mov
gs
call
cmpb
lret
aas
frstor
imul
pop
dec
outsl
pop
push
clc
xchg
xor
mov
jge
and
incl
sub
fisubrs
lock
outsl
fcmovnbe
pop
dec
add
adc
cmpsl
in
mov
out
jnp
enter
clc
jns
push
inc
insl
mov
out
cmpsl
out
in
inc
mov
ret
jae
movsl
xchg
mov
pop
movsl
clc
sarb
mov
pop
popf
jge
fnstenv
clc
dec
dec
data16
fisubrs
push
insl
shrl
adc
test
imul
adc
push
add
xchg
push
inc
push
add
movsl
movsl
push
and
iret
cmp
xchg
insb
adc
inc
loope
sbb
sub
ret
je
jmp
gs
clc
push
iret
ret
adc
pop
ljmp
mov
cmp
adc
adc
ljmp
movsl
pop
iret
aaa
adc
mov
test
xchg
aas
sub
idivb
aam
test
scas
xor
lahf
nop
bound
mov
lock
and
dec
sbb
inc
insl
mov
negb
push
ret
ja
pop
mov
push
insl
or
xchg
or
dec
rorl
fadds
push
fucomi
shlb
xchg
inc
and
or
mov
imulb
fildll
cmpsb
inc
mov
xor
out
adc
in
mov
xor
js
jnp
lcall
bound
mov
inc
pop
sub
popf
fsubrl
ja
and
dec
inc
int
rcrl
enter
dec
ds
add
sub
add
xchg
shlb
in
fldt
icebp
xchg
int
pop
js
and
and
push
or
xlat
inc
mov
pop
mov
push
inc
and
mov
push
add
call
notb
divb
dec
out
mov
jb
add
scas
sbb
call
insl
popa
xor
push
daa
push
or
je
xchg
mov
out
adc
or
in
sarl
push
ds
test
fnstsw
mov
fstpt
fistps
pop
adc
call
movsb
or
mov
insb
cltd
dec
inc
aad
dec
aad
inc
mov
fiadds
in
lcall
cmp
out
jne
adc
inc
xor
jge
jmp
mov
add
dec
push
paddb
rcr
cltd
adc
fistpl
xor
pop
mov
jmp
dec
rol
cli
sbb
clc
xchg
and
outsl
fistps
pushl
push
push
out
das
pop
xchg
adc
mov
std
mov
cwtl
cmc
jmp
dec
jge
and
jmp
fisubrs
adc
in
gs
shll
cs
out
cmp
inc
jmp
jne
dec
and
jae
lret
cmc
pop
lahf
leave
mov
das
das
mov
adc
or
mov
mov
bound
xorl
cmpsl
jbe
xchg
mov
or
mov
sar
inc
lods
pop
inc
arpl
iret
sub
push
jge
xchg
lahf
mov
shrb
mov
mov
mov
inc
adc
inc
scas
xchg
cld
test
mov
inc
dec
aad
inc
xchg
in
decl
and
fimuls
stc
jecxz
testb
das
adc
cld
test
adc
scas
jns
and
fcos
jg
call
xchg
out
shrl
fwait
pop
cmp
xchg
xor
or
repnz
adc
xchg
sub
fdivrl
mov
and
mov
dec
and
and
push
push
decb
adc
mov
xchg
bound
dec
sbb
cmp
adc
jmp
jae
ljmp
es
jle
inc
jmp
fcoms
push
cld
jg
or
xchg
popf
jns
sub
mov
lcall
aaa
mov
push
daa
lods
push
into
shlb
insb
push
sub
lcall
decl
adc
iret
roll
les
xor
les
and
pop
and
pushl
sahf
enter
pop
push
mov
sub
adc
cld
jg
testl
xor
enter
movsl
lcall
inc
adc
dec
mov
sar
out
je
aad
cmp
xchg
in
lcall
and
cmc
test
cli
pop
xor
iret
add
push
add
sbb
inc
insl
xorb
ss
insb
cld
jg
incl
or
test
imul
fwait
loop
mov
mov
ljmp
adc
js
cs
or
jae
push
insb
xchg
int3
out
sub
das
call
pop
and
cltd
lock
push
aaa
dec
in
and
outsl
pop
arpl
hlt
lcall
jmp
mov
jae
jno
aad
inc
das
cld
sbb
push
test
in
adc
or
movsl
jg
or
or
test
mov
sub
adc
arpl
xor
dec
scas
jbe
xchg
mov
and
call
jmp
dec
push
push
popf
stos
fwait
sbb
pop
cmp
or
mov
fisttps
push
push
icebp
inc
cmpsb
dec
fsubrp
jmp
inc
jg
dec
aad
iret
xor
fimuls
stc
in
dec
ljmp
js
cmpsl
icebp
adc
push
sar
pop
pop
loop
out
dec
xor
iret
or
stc
and
scas
dec
xchg
xor
repnz
hlt
sub
dec
cli
rolb
pop
adc
inc
sbb
xor
shlb
pop
dec
arpl
jnp
out
or
mov
in
adc
jne
add
cmp
movsl
daa
and
sub
push
arpl
adc
jecxz
inc
jg
sub
mov
stos
cld
loopne
xor
ret
mov
es
stos
add
add
push
xor
pop
clc
filds
xchg
in
test
xchg
ret
test
add
mov
pop
ror
dec
dec
test
inc
and
sub
cs
sub
sbb
outsb
adc
cwtl
cltd
and
push
xor
aad
movsb
mov
xor
das
adc
inc
lods
loopne
in
stc
xor
enter
test
imul
clc
ljmp
call
cmp
dec
fsubl
or
jae
add
inc
aaa
push
outsb
adc
pusha
adc
and
test
sbb
es
fistps
sbb
mov
sbb
and
imul
mov
dec
test
das
push
mov
and
arpl
jecxz
jmp
push
iret
pushf
adc
sbb
fwait
push
mov
sub
dec
and
hlt
cli
dec
or
xor
loope
jle
orl
inc
cmc
call
push
insl
loop
xor
mov
add
cmp
push
sbb
pop
jb
into
mov
mov
push
add
movzwl
jl
jae
cmpsl
insb
or
and
rcll
ja
xchg
ljmp
xchg
inc
gs
dec
sbbl
inc
pop
push
pop
pop
ljmp
mov
mov
hlt
ljmp
je
dec
test
outsb
in
sub
popa
cwtl
in
aaa
push
bound
lock
cmc
adc
inc
out
jbe
adc
sub
mov
inc
jg
mov
adc
seto
cmc
ret
jmp
or
push
xor
mov
repz
das
gs
cwtl
test
pop
lcall
lock
xlat
xchg
inc
pop
xchg
insl
push
push
leave
lahf
pop
rorb
add
mov
adc
dec
dec
xchg
das
data16
das
jmp
push
leave
adc
or
shl
scas
movsl
repz
jg
test
in
add
fdiv
push
leave
mov
fnstenv
mov
pop
jo
jb
and
add
std
outsb
inc
outsb
push
in
ret
cwtl
jne
scas
insb
or
aam
jns
mov
fs
ss
call
test
popf
call
lea
push
inc
inc
ret
mov
sbb
adc
adc
dec
stos
test
xchg
les
rcrl
pop
loopne
rcrb
decl
stc
loop
cld
fildl
sub
stos
loop
mull
outsl
mov
repnz
push
xchg
and
and
insl
icebp
cmpsb
outsl
hlt
call
and
dec
out
cmpsl
push
xor
xor
addb
lock
clc
xchg
imul
js
dec
scas
adc
jbe
add
mov
inc
xchg
lcall
jbe
aaa
jg
and
imul
jmp
adc
fisubs
je
xor
ss
mov
lds
cmp
out
xor
outsl
insb
lock
sbb
jecxz
imul
aas
mov
loope
cmpsl
jl
inc
xor
add
out
ljmp
mov
xchg
int3
imul
insl
test
cltd
cwtl
mov
sub
mov
aaa
xchg
dec
out
mov
test
scas
in
sbb
insb
xchg
lds
and
pmullw
cmp
popa
lds
xchg
jmp
std
hlt
cmp
inc
loop
test
adc
sbb
inc
adc
push
shl
out
and
clc
lock
cltd
int
aaa
clc
in
dec
in
rorl
or
icebp
enter
outsl
std
push
imul
sub
mov
stos
out
jl
subl
xchg
pop
add
pusha
nop
aas
xor
call
cmc
dec
popf
inc
inc
outsl
sub
nop
jg
xchg
dec
jge
clc
testb
jb
push
jp
ja
jmp
mov
repnz
mov
movsl
xchg
sbb
add
popa
cmp
jb
or
in
and
clc
push
ljmp
jns
insb
jg
std
adc
lods
ljmp
insb
icebp
xchg
push
adc
pop
dec
mov
sub
inc
repz
pushl
stc
push
mov
dec
cwtl
fldt
fdivrp
movsl
mov
mov
mov
pop
adc
inc
scas
jl
lods
jecxz
inc
cmp
xchg
lret
and
inc
lock
jl
sbb
mov
mov
in
pop
int3
cmp
xor
test
in
scas
cmp
and
out
mov
clc
incl
cltd
repz
sbb
sub
pop
cmp
xor
lods
das
sti
sub
inc
sub
jmp
mov
adc
mov
int3
imul
push
mov
xchg
repnz
xchg
and
add
mov
inc
adc
jl
pop
and
push
or
inc
imul
outsl
test
inc
insb
outsl
jae
test
push
fisttpl
mov
in
mov
cs
popa
inc
jb
jb
sbb
int
mov
sti
dec
push
sub
jb
cmp
imul
imul
data16
fnstenv
xor
push
hlt
mov
push
push
gs
push
and
pop
gs
sub
add
fildll
shlb
faddl
sbb
outsl
push
imul
gs
push
arpl
ljmp
xchg
je
push
outsb
insl
popa
jo
imul
insb
fwait
mov
inc
mov
test
fisttpl
dec
xor
addr16
dec
and
fdivs
push
sbb
mov
mov
fisttpl
inc
jb
outsb
test
je
data16
adc
jnp
mov
ja
je
jo
addl
push
popa
insl
gs
inc
outsb
jbe
mov
fstl
imul
inc
jo
imul
dec
push
je
ret
je
pusha
das
and
jo
outsb
outsw
inc
mov
adc
adc
or
dec
inc
add
xchg
inc
pop
add
mov
rcl
inc
insl
cmp
pcmpgtd
pop
addr16
push
aad
jnp
adc
outsb
or
add
ja
push
xor
or
std
mov
aas
aas
xor
inc
pop
push
add
cmp
leave
pushf
popa
negl
fs
outsb
sub
bound
pusha
push
pop
pusha
js
fidivl
mov
mov
mov
addr16
imul
daa
insl
sbb
push
sub
push
push
call
pop
fs
pop
jo
arpl
xchg
or
sub
pop
je
jo
and
fbld
mov
lcall
pop
push
inc
adc
xor
add
xor
or
das
inc
inc
or
test
scas
in
inc
add
or
add
testl
push
inc
push
fs
adc
inc
push
insb
and
and
push
adc
mov
sbb
sbb
push
add
ljmp
or
pop
sti
or
and
sub
sbb
or
fwait
sbb
sub
adc
jmp
pusha
pop
pop
mov
pop
cs
xchg
pop
sti
popa
insl
jo
lahf
lock
add
add
adc
add
add
add
add
add
add
call
int
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
