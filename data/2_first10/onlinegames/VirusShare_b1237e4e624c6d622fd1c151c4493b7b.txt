fnstcw
sti
adc
sub
dec
and
bound
jle
lcall
enter
and
xor
shll
ds
pop
je
xor
roll
cmpsb
pop
ss
into
fidivrl
and
sbb
dec
outsb
fwait
or
and
and
jp
movsb
jmp
cwtl
lahf
mov
sbb
aas
add
ss
aas
dec
gs
gs
xor
cs
insb
add
or
push
push
jae
sbb
inc
bound
push
jb
jbe
mov
sti
imul
jns
je
insl
and
inc
inc
add
jae
add
push
gs
outsl
imul
add
fistpll
add
jbe
xor
cs
jne
arpl
xor
pop
imul
insl
jns
jbe
fs
add
je
pop
outsl
arpl
pop
jnp
bound
xor
cmp
cmp
push
sbb
xchg
inc
sbb
aaa
and
in
sub
fnstsw
andb
out
std
rclb
xor
mov
inc
add
add
or
lds
in
mov
popa
enter
push
in
pop
outsb
add
outsl
int3
int
pop
into
push
iret
rorb
shll
xor
shll
aad
xlat
pop
fdivs
mov
mov
fisttpl
push
pop
loope
imul
inc
in
and
add
insl
mov
inc
daa
ljmp
in
pop
in
aaa
lock
repnz
xchg
int
stc
dec
pop
cli
sti
js
je
mov
fidivrs
call
jle
pop
adc
fbld
mov
xor
mov
mov
je
push
push
call
mov
jmp
mov
cmp
jne
xor
jmp
testl
sub
call
sti
test
je
sbb
outsb
imul
lods
pop
adc
jne
push
or
mov
sbb
iret
das
pop
stc
data16
inc
adc
cmp
jne
mov
loope
mov
pop
pop
pop
leave
ret
mov
in
sbb
fs
mov
xchg
adc
push
push
imul
jl
inc
mov
push
push
insl
test
xor
clc
add
pop
jnp
in
push
sbb
js
push
lock
data16
push
pop
insb
pop
push
int3
insl
jl
mov
adc
push
stos
mov
arpl
lock
cmp
je
push
adc
or
adc
clc
cmp
adc
push
push
sub
push
js
jnp
into
mov
push
push
or
movsl
sbb
jecxz
cmp
ss
in
sbb
pop
ret
dec
mov
mov
sbb
pop
fildl
sub
lods
fldenv
pop
jo
push
push
scas
inc
adc
negb
jo
push
adcl
mov
insl
fs
inc
test
mov
cli
daa
adc
push
dec
and
xchg
or
add
sbb
cmpsb
mov
pushl
dec
inc
lods
mov
mov
add
pop
mov
or
out
and
push
testb
je
adc
call
push
loop
addr16
mov
push
aad
and
push
je
xchg
mov
cmp
out
jnp
adc
aas
xchg
inc
cs
sbb
std
pop
jmp
or
cmp
mov
icebp
push
lds
or
lods
loope
bound
call
test
psrld
mov
inc
inc
dec
dec
test
jne
pop
fldenv
push
pop
jmp
lds
shl
or
push
jecxz
insl
mov
add
cmp
xor
sti
decl
test
add
and
aad
pop
clc
inc
and
inc
jnp
sbb
add
jl
jae
mov
adc
daa
push
aaa
in
int3
fistpll
sub
jg
push
bound
or
push
in
les
out
inc
jl
sbb
jbe
push
in
inc
mov
mov
push
pop
or
cmp
cwtl
pop
and
in
or
sub
divl
loope
pop
pop
shlb
add
std
add
leave
sbb
div
fucomp
or
je
repz
lea
inc
jnp
movsl
loopne
add
lea
out
or
mov
loopne
adc
cmp
add
add
xor
test
adc
fidivrs
or
sbb
shl
mov
xchg
fsubr
pop
and
ss
xor
lret
pushf
imul
mov
xlat
inc
xor
mov
std
adc
adc
mov
and
mov
or
pop
pop
negb
cld
pop
jmp
lods
jge
jmp
rcrb
or
imul
xchg
in
xchg
outsb
ljmp
pushl
xchg
imul
pop
imul
sub
jmpw
popw
or
jne
int
jg
insb
inc
or
test
jb
aam
ja
pop
mov
fistpl
in
push
test
add
sbb
xchg
mov
xchg
dec
inc
repz
loop
sbb
je
push
rcrl
data16
adc
pop
imull
shlb
xchg
or
xchg
sarl
sbb
movsb
icebp
les
std
stos
push
std
enter
mov
cld
std
dec
push
mov
iret
outsb
int
aas
cmp
push
pop
sar
fucom
data16
lods
jb
gs
cltd
imul
fldenv
out
imul
iret
push
out
imul
imul
imul
mov
data16
stc
cwtl
mov
lods
out
call
mov
jns
pop
jnp
sub
je
push
push
fwait
cmp
mov
or
mov
xchg
xor
xchg
and
add
and
mov
inc
imul
fs
in
rorl
outsb
ds
je
jae
in
les
pop
sti
bound
push
cmp
pop
xor
and
insb
movsb
cmp
outsb
and
cmp
int
mov
subb
or
fldenv
data16
call
mov
lods
and
jnp
jbe
xchg
push
or
cmp
outsw
dec
repz
or
jmp
addr16
pusha
jbe
cmp
ds
outsl
mov
fsubr
sub
outsl
sar
sahf
sbb
cmp
pop
mov
cmp
jl
call
jbe
adc
push
daa
cmp
sbb
add
imul
insl
nop
gs
out
and
cmp
fistpll
pop
lock
cmp
cmp
test
icebp
stos
idivl
sbb
fnstcw
mov
sbb
xor
lretw
adc
ret
fwait
or
in
insl
enter
enter
cmp
lock
cmpsb
dec
dec
sti
out
mov
push
ret
ljmp
frstor
or
in
lea
vhsubps
loop
dec
push
jb
sub
and
jae
sub
mov
or
loope
xchg
mov
addl
jbe
push
or
and
and
push
mov
add
and
ret
dec
push
dec
inc
dec
dec
inc
pop
ja
stc
add
dec
inc
dec
xchg
inc
push
dec
addb
fisubrl
inc
outsl
and
popa
or
lock
sbb
andl
push
add
add
nop
add
push
pop
ss
mov
inc
call
push
add
dec
ljmp
adc
js
outsl
addr16
insl
and
outsb
outsb
lock
in
ljmp
and
and
outsb
and
inc
dec
push
and
fs
clts
and
outsl
repnz
adc
mov
rolb
stos
jae
aam
jae
shll
jnp
mov
daa
repz
pop
cmp
in
xchg
mov
shrb
imul
fcomi
push
inc
add
in
sbb
dec
adc
mov
and
add
or
add
adc
lock
add
fstps
shlb
cmp
xor
pop
push
xor
lock
dec
mov
shrb
add
pop
insb
out
push
pop
add
bound
push
xlat
pop
out
fwait
or
jge
cs
je
push
xor
test
jp
in
adc
insb
adc
cs
push
push
pop
mov
andb
fldt
dec
jb
insb
outsl
arpl
jo
dec
dec
dec
shll
or
inc
push
scas
cmpsl
add
cmpsb
jp
pop
inc
sub
int
lret
adc
add
cmpsb
rcrb
test
ret
lret
lret
cmpsb
flds
loopne
add
dec
shll
dec
pop
fs
shll
xor
aaa
adc
pop
xlat
dec
inc
pop
push
add
jb
shll
lret
fnstenvs
add
lcall
test
mov
scas
mov
dec
mov
sub
add
mov
cmpsb
jmp
add
negb
stos
push
lcall
es
imul
push
sbb
sub
dec
push
lcall
jp
mov
cmpsb
imul
sahf
andl
push
cmp
jb
mov
shr
add
push
imul
cmpsb
jmp
add
subb
test
insl
scas
test
orl
or
dec
notl
adc
popa
fs
sub
fcomi
aas
daa
dec
je
jo
jne
jns
outsw
inc
aaa
ffreep
fdivrl
jo
outsb
push
jb
adc
adc
adc
inc
push
jl
inc
nop
mov
or
aaa
sbb
fadds
lahf
xchg
cmpsb
jns
mov
adc
sbb
pusha
sub
inc
lcall
mov
add
adcl
and
add
sbb
jmp
xor
or
testl
adc
add
mov
lret
mov
ja
sbb
mov
dec
inc
aas
add
pop
insb
or
rorl
mov
and
add
cmpsl
push
push
sbb
xor
adc
inc
fmul
cmp
pop
lret
lret
add
push
stos
nop
inc
test
cmp
xchg
fwait
outsb
das
pop
xor
mov
xor
ud2
push
add
jne
mov
add
adc
fisttps
arpl
je
jne
jb
gs
sbb
jmp
scas
js
push
sub
add
arpl
incl
push
inc
jb
push
and
ja
or
push
mov
insb
mov
ja
jae
and
addr16
xor
push
fmuls
xor
jmp
jp
pop
cs
mov
inc
imul
arpl
popa
insl
xchg
push
dec
inc
push
push
inc
push
inc
dec
mov
jb
outsl
data16
imul
dec
shrb
cli
push
inc
jne
jb
je
sub
dec
iret
mov
outsl
jb
inc
popa
jb
push
aas
dec
inc
push
push
push
xor
hlt
xor
arpl
data16
je
jo
mulb
je
sbb
xchg
in
arpl
ja
scas
mov
jae
pop
andb
mov
push
push
aas
xor
xchg
push
jno
movsl
ljmp
pop
lahf
mov
xchg
stos
je
xor
xor
outsl
je
insl
adc
mov
ja
je
shlb
add
movsl
add
ficoml
call
test
loope
inc
jge
jnp
cld
xchg
mov
or
ret
push
add
push
stc
add
lahf
sbb
and
mov
movsb
or
aaa
cmp
pop
or
sbb
fidivrl
fmull
adc
cmc
push
stos
cmp
daa
into
mov
stos
repz
add
aad
adc
scas
fwait
add
insl
je
insl
fs
add
orb
sti
dec
dec
gs
push
out
inc
dec
aas
sub
jno
and
pop
rcrl
jb
leave
in
mov
mov
mov
inc
add
cli
sub
mov
add
out
dec
push
push
nop
iret
or
call
mov
stos
in
inc
mov
andl
aaa
push
sub
adc
sbb
sbb
cs
lea
adc
data16
push
push
adc
lods
idiv
lcall
mov
lea
movb
mov
sub
sub
mov
movb
inc
mov
sub
sub
inc
add
sti
push
js
decb
fildl
call
pushl
and
inc
pop
orl
cs
or
ja
mov
lock
stos
pop
push
sub
fsubrl
or
mov
jmp
or
inc
aad
push
mov
loopne
dec
neg
in
and
lcall
push
movzbl
rorl
fcomps
adc
mov
andb
insb
outsl
sti
add
xor
aas
xchg
inc
pop
cmp
jae
int
pop
jl
push
aaa
fs
out
stc
adc
xor
adc
push
nop
cld
and
add
or
add
dec
jle
aas
les
add
enter
popa
add
mov
dec
mov
mov
add
or
shlb
ljmp
push
push
mov
and
mov
dec
ret
adc
add
mov
stos
push
xchg
mov
fisttps
add
cmpw
jne
dec
cmp
lret
adc
push
shrb
push
and
in
add
adc
add
dec
push
addl
std
inc
adc
add
jne
jnp
ss
stos
or
pop
aad
push
cwtl
mov
adc
fimuls
xchg
stos
mov
add
push
push
int3
call
pop
imul
push
loopne
sub
sub
push
mov
push
dec
xor
mov
aad
adc
in
sbb
sbb
push
int3
loope
mov
lock
add
mov
mov
movsl
movsb
mov
in
in
enter
mov
mov
mov
movsb
inc
rep
subb
movl
mov
in
mov
mov
dec
pop
mov
cld
fstpt
add
cmp
sarl
push
mov
dec
mov
mulb
xor
inc
cmp
or
sbb
add
or
sub
jecxz
fbld
cmp
push
scas
lret
push
pop
xchg
adc
clc
adc
test
xor
or
add
mov
xchg
fiaddl
or
add
cmp
jne
sub
sub
or
out
xor
or
jmp
pop
call
gs
adc
lock
fistpl
fwait
add
inc
inc
cmp
sbb
or
xlat
sbb
pop
cmp
xor
add
mov
xchg
roll
pop
in
ja
leave
or
add
adc
andw
mov
cwtl
lock
insl
add
jb
jg
cld
pop
jb
jns
or
push
push
push
push
imul
cltd
pop
dec
lea
divb
inc
sub
rdpmc
cwtl
fxch
pop
sub
xchg
xchg
mov
lea
cmp
jne
and
dec
mulb
mov
pusha
cli
adc
cmp
in
push
inc
push
pop
cld
call
pushf
cltd
out
call
xor
jge
xor
lsl
push
jo
xchg
loope
cmp
or
repz
or
movl
pop
psubsb
or
clc
out
mov
xchg
outsb
or
pop
stc
xchg
fbstp
add
insb
xor
adc
scas
in
push
xor
adc
nop
dec
xorb
adc
cmp
fistpll
adc
add
lock
enter
add
scas
add
adcl
adc
fisttps
add
xchg
push
mov
into
pop
adc
or
xor
xor
adcl
sub
cmp
jne
push
pop
jmp
into
sbb
cmp
rorl
scas
xchg
loopne
cmpb
insb
inc
cmp
push
cld
add
jle
xor
cmp
ljmp
push
mov
cmp
ja
cmpl
adc
je
test
mulb
push
mov
inc
hlt
mov
aam
outsl
call
jne
cmpl
daa
incl
mov
cmp
jne
xor
push
inc
clc
xchg
cmp
cmpsl
jle
dec
and
andl
add
cmp
push
outsb
fbld
sahf
inc
cmp
mov
push
adc
mov
adc
mov
dec
push
addb
lds
shlb
aaa
ret
add
dec
outsl
xor
bound
push
insb
mov
in
xor
cmpb
cmc
mov
outsl
cmpsb
lret
push
jmp
adc
add
xor
ss
insb
mov
or
stc
mov
lcall
or
idiv
adc
idiv
pop
mov
sbb
jmp
andb
mov
jmp
xor
mov
sbb
movsb
adcb
pop
sbb
leave
lfs
add
mov
add
dec
or
add
sbb
iret
and
adc
adc
fcoml
add
dec
or
mov
sbb
sbb
adc
adc
mov
sbb
fidivs
in
inc
mov
popf
sbb
gs
clc
or
mov
pop
ja
xor
mov
cmpb
sbb
mov
jl
inc
movsb
jb
in
cli
lcall
sbb
icebp
mov
imul
add
andl
je
call
sub
and
or
mov
leave
popa
adc
and
push
rol
faddl
dec
adc
inc
jge
xchg
mov
push
mov
roll
cmp
loopne
or
mov
add
inc
pop
lret
shr
add
stos
leave
mov
push
je
inc
push
mov
push
sbb
pop
stos
icebp
mov
mov
jne
adc
insl
adc
sbb
rorb
aaa
mov
rolb
or
rcll
cli
or
lcall
mov
das
add
loopne
decl
xor
dec
loopne
pop
cs
inc
aad
shll
push
add
jno
cwtl
cmp
mov
not
and
push
jl
and
or
add
lea
adc
xlat
sbb
shr
mov
or
add
push
repnz
not
or
sub
testl
mov
cli
mov
ja
test
push
js
repnz
outsb
not
mov
or
fisubs
fimull
add
repnz
lea
shr
shl
push
pop
inc
mov
pop
sub
mov
and
not
cmp
add
int
psllq
mov
pop
xlat
jge
roll
add
dec
daa
pop
jg
outsb
lcall
add
lea
sbb
push
lods
loop
mov
push
push
movsl
inc
xlat
outsl
jle
not
and
shlb
adcb
sub
xchg
rcr
mov
into
lock
sbbb
xlat
loopne
fiaddl
outsl
popa
xlat
or
mov
adc
xor
fisubl
fistps
or
pop
or
sub
xchg
inc
std
sbb
add
or
test
xor
add
sbb
cs
out
adc
jne
les
repz
fdiv
repnz
fcomps
addl
repz
mull
xchg
rcr
das
pusha
adc
fdivl
jbe
pop
scas
testl
sbb
les
subb
add
pop
iret
repnz
add
subl
sub
fcom
add
cmp
fdivrs
pop
dec
inc
imul
xlat
mov
sbb
les
adc
sub
and
xor
or
or
insb
xchg
xchg
jno
std
stos
lods
es
pop
push
fdivrs
push
cld
and
fidivrs
outsb
adc
add
aaa
das
push
mov
cmpsb
add
fmull
pop
mov
xor
mov
pop
mov
fiadds
or
popa
adc
add
or
pop
mov
mov
ret
push
and
sarl
mov
bound
mov
popa
sbb
add
and
jg
pop
sbb
inc
mov
rcrb
push
fadds
hlt
push
and
mov
jb
repz
pop
pop
es
adc
rcl
push
repnz
shrl
movsb
and
fstps
jmp
lock
imul
mov
imull
mov
out
aaa
pop
adc
call
xlat
lods
mov
adc
xchg
mov
shlb
jge
repz
adc
add
iret
outsl
fistpl
fimull
out
fcoms
mov
cmp
mov
jle
jae
fnstcw
out
adc
leave
nop
pop
or
stos
mov
fisubrs
mov
mov
out
loope
out
sbb
loopne
jle
lcall
add
pop
aaa
scas
jne
insl
or
mov
push
fbstp
inc
fimuls
xchg
mov
adc
test
call
int
inc
loop
shr
or
xlat
in
int
fdivs
test
rcrb
clc
ret
cmc
out
out
cld
cld
not
lcall
flds
outsl
addr16
int
adc
movl
cmpsb
dec
fisttps
sub
adc
or
xor
test
mov
pusha
sbb
test
and
cli
mov
xor
lcall
js
repnz
popa
popf
insl
adc
mov
sti
xor
mov
repnz
or
in
mov
call
in
inc
xchg
in
mov
inc
push
sbb
xchg
fisubrl
xchg
mov
fimuls
cltd
pop
sub
fmuls
jecxz
int3
pop
pusha
dec
mov
cli
jle
pop
pop
xor
push
jo
mov
push
mov
or
mov
pop
jl
jo
jle
sub
jae
data16
inc
mov
add
sbb
lock
cli
daa
mov
fimuls
xor
xor
test
ret
xchg
jae
adc
fidivs
test
js
pop
out
cmp
fcmove
repnz
or
push
aas
sbb
scas
lock
sarb
cmp
aam
cltd
js
jge
dec
out
push
les
in
mov
bnd
idiv
ss
in
sbb
in
mov
je
dec
mov
xor
lods
call
cli
cmp
cli
mov
mov
jge
stos
mov
je
mov
stos
rcrb
sbb
push
or
in
cld
ret
sbb
jl
inc
int3
or
inc
or
jle
xchg
out
adc
stos
adc
out
push
inc
lock
hlt
sbb
repnz
adc
stos
scas
scas
xlat
mov
fmul
repnz
ret
pop
pop
gs
sbb
rcrl
or
lock
int3
or
push
arpl
lret
ja
jno
int3
repnz
adc
jge
out
call
psllq
mov
adc
rcrl
test
jmp
or
jg
faddp
inc
push
call
outsl
jecxz
add
dec
sbb
int
fsub
xchg
pop
dec
fistpl
loopne
sub
jecxz
jp
sbb
fsubs
add
mov
mov
jmp
add
test
fcompl
xlat
sbb
repnz
lret
fidivrl
mov
fsubs
or
aam
rcl
sub
mov
mov
ret
repz
shlb
lds
roll
dec
mov
mov
xchg
lods
pop
jge
xlat
pop
add
pop
movsb
mov
adc
or
rorl
mov
push
mov
mov
xchg
cmpb
sarl
outsl
mov
push
push
push
fsubrl
out
jmp
or
mov
js
adc
mov
pop
fidivrl
lea
sbbb
aad
test
nop
iret
pop
pop
mov
mov
repnz
fbstp
adc
adc
add
sbb
test
faddl
cmp
jne
xchg
sbb
push
adc
pop
push
inc
pop
jo
sub
int
orb
sbb
push
cmc
lods
jns
or
cld
call
sub
sub
aaa
push
inc
jo
sar
mov
dec
cmp
out
or
testb
mov
mov
call
lea
mov
fisttpl
out
mov
jl
test
push
divl
pop
int3
rolb
aam
call
lret
xchg
jmp
mov
in
add
in
out
lcall
out
add
repz
ljmp
push
or
mov
imul
neg
jbe
mov
lock
pushf
mov
fwait
imul
xor
fisttps
mov
mov
stos
call
mov
adc
sbb
dec
rolb
ds
lods
mov
cmp
mov
outsb
les
cwtl
into
lret
fimuls
divl
pop
ficoms
shl
call
ret
adc
fistl
push
push
ds
push
nop
inc
push
call
dec
out
push
out
push
movsb
dec
or
pop
mov
mov
dec
xor
sub
push
push
jae
jmp
jbe
cld
push
xor
inc
fisttpll
xor
push
sbb
jbe
pop
sub
aas
pop
int3
add
ret
out
push
and
or
add
loope
hlt
call
fcomps
cmp
notl
push
add
adc
stc
incb
clc
cmp
xlat
jno
xchg
je
sub
shrl
mov
icebp
sub
das
sub
push
imul
cmp
adc
lods
adc
push
pusha
outsb
popa
out
movhps
mov
mov
dec
aam
xor
jns
or
iret
jmp
adc
pop
push
push
fnstcw
add
adc
adc
cmp
in
out
mov
cmp
je
dec
dec
cmpw
jne
pop
xor
lcall
inc
add
cmp
add
dec
ss
cmp
jmp
xchg
iret
adc
sysenter
mov
push
mov
push
aad
out
xchg
sbb
aad
jbe
cmp
dec
ja
movl
popw
fwait
ret
push
or
fucomp
insl
in
push
je
xchg
cmp
testb
jae
sti
decl
je
cmp
jne
push
in
push
xor
pop
dec
cmovs
daa
cmp
pop
add
cmp
stos
loopne
ret
xor
xorb
sub
fmull
push
or
xchg
add
loopne,pt
cmp
das
sub
cs
cmp
outsl
inc
test
cmp
push
jo
dec
subb
inc
adc
sbb
jmp
sub
add
cwtl
ss
stos
in
mov
les
bound
mov
mov
enter
cwtl
inc
push
sbb
push
nop
xchg
int3
fsubp
add
xchg
mov
sbb
out
sbb
ret
inc
or
xor
insl
sbb
mov
mov
pushl
lods
loope
mov
sub
xchg
fwait
sub
cmp
out
pop
lcall
inc
inc
mov
sarl
decl
lods
std
and
testb
jnp
loop
lods
sbb
xor
inc
cmp
clc
cmp
mov
test
rcrl
sar
je
cmp
sti
ja
cmpl
cmpl
scas
or
push
jo
mov
jo
lods
ret
pop
sbb
pop
dec
mov
call
pop
mov
fcmovu
pop
jne
xchg
in
sbb
pop
adc
insb
fstpl
mov
jmp
call
mov
outsb
mov
cmp
imul
iret
inc
je
jmp
pop
mov
cwtl
xor
idiv
xchg
adc
add
or
jmp
dec
mov
fcompl
push
cmp
ss
mov
andl
mov
push
inc
mov
sti
pusha
inc
fcmovnb
mov
push
jo
push
push
inc
sbb
jg
outsb
xchg
int
scas
insl
in
mov
push
mov
mov
pop
cs
lret
mov
mov
mov
mov
mov
mov
and
push
xchg
pop
mov
gs
lret
mov
jo
outsl
jb
mov
cs
fcmovu
xor
xor
test
loop
jb
xor
in
push
out
dec
out
lcall
sub
xchg
insl
jae
lcall
je
outsb
xor
xlat
xor
pop
mov
ret
les
lds
leave
lret
cmp
xlat
xor
xchg
push
xchg
xchg
mov
dec
cwtl
cltd
lcall
insl
mov
cld
mov
mov
mov
mov
fnstenv
pop
cmpsl
test
push
test
lcall
stc
hlt
add
lret
jns
lea
sbb
and
je
shlb
call
or
pop
lret
xor
int3
pop
aaa
enter
insb
loopne
lret
aaa
inc
in
inc
into
dec
fists
push
int3
dec
jb
fsubr
lods
add
loopne
clc
ds
dec
cmp
mov
subl
rolb
pop
xchg
jae
test
hlt
jmp
mov
cmc
adc
test
mov
test
xor
out
shrb
int
ljmp
jge
sti
cmp
dec
inc
push
adc
sti
sub
loopne
mov
shll
cli
out
pushf
mov
cli
inc
ret
sbb
daa
inc
lds
in
insl
rolb
scas
nop
jmp
aaa
cltd
xor
les
jmp
sbb
mov
adc
cmp
jmp
mov
nop
mov
or
hlt
cli
call
mov
and
bound
xor
cld
sub
or
and
fcoms
jb
pop
sub
std
sbb
or
mov
out
pop
push
xchg
mov
test
data16
ds
divl
adc
push
imul
movsb
lock
sub
loope
push
cld
mov
mov
testb
aam
notl
and
sbb
cmp
adc
mov
mov
aas
or
or
out
into
sub
xor
xor
mov
sub
sbb
sub
mov
stos
lods
pusha
mov
mov
inc
daa
iret
ret
jmp
lock
bound
sub
popa
or
out
aaa
pop
arpl
sbbb
cmp
jl
jns
in
sbb
xchg
fstpt
outsb
jne
push
cmp
movl
in
pusha
fnstsw
rcr
or
int3
adc
testl
ss
push
adc
sub
fs
in
cmpsl
mov
insl
pop
hlt
adc
ds
push
aam
enter
push
sbb
cmp
sub
push
rclb
mov
xor
sti
filds
mov
mov
jae
or
xchg
mov
leave
cmp
or
inc
push
jge
fdivs
in
sbb
movsb
data16
insb
shrb
mov
or
cmp
xor
adc
cmp
test
and
jmp
cmp
push
and
xlat
jmp
adc
scas
fs
push
shll
loope
cmpb
inc
mov
in
andl
or
mov
call
pop
shlb
or
pop
and
dec
arpl
inc
mov
add
fs
pusha
mov
cwtl
addr16
cld
dec
sub
outsl
jp
cmpsl
insb
insb
shll
push
imul
fidivl
fildl
push
data16
fidivs
fbstp
cmpsb
imul
bound
cli
sti
cld
std
insl
xlat
insb
int
icebp
lcall
mov
add
xor
mov
mov
cmpsb
imul
roll
push
outsb
fs
pop
mov
xorb
enter
pop
mov
pop
ror
dec
popa
js
mov
lret
je
outsl
outsb
xor
pop
inc
jb
icebp
add
push
jb
ret
adc
inc
pusha
ss
adc
int3
pusha
or
mov
cmp
sbb
xlat
inc
mov
ja
push
ss
adc
cmp
push
pop
push
hlt
add
xor
xor
aam
mov
mov
mov
clc
adc
mul
and
pusha
and
xchg
jae
cmpsb
popa
cmp
je
cmpsb
imul
add
push
scas
mov
daa
push
cmp
or
fnstenv
call
inc
mov
push
rolb
sub
int
call
fs
xor
inc
mov
sbbl
ret
shlb
rclb
ds
xor
push
mov
out
outsl
or
sbb
push
loopne
in
pop
sub
mov
cmpsl
jmp
call
pop
lock
jge
lds
and
jg
xlat
or
mov
rcrl
xchg
repz
int
sbb
hlt
dec
xor
aam
test
fistl
mov
inc
out
push
pop
push
adc
dec
in
or
or
jne
xor
out
sub
and
ljmp
xor
es
int3
pop
mov
adc
add
repnz
jge
push
movsl
movsb
adc
repz
cmc
hlt
pushf
add
mov
cmp
add
cld
mov
add
les
loope
and
add
adc
push
je
push
add
ret
push
pop
push
loop
rcr
xchg
push
push
fdivs
jmp
mov
pop
push
pop
clc
notl
fs
inc
div
inc
rcll
sub
and
and
or
pusha
adc
and
out
adc
add
push
fwait
push
dec
jo
or
insb
fwait
in
insb
lock
popa
pop
repnz
hlt
cs
fs
insb
repz
rcll
xor
je
test
shll
popa
jo
jbe
jb
shll
outsl
ret
lcall
popf
mov
icebp
jne
add
or
pop
cwtl
xchg
xchg
outsl
cmp
enter
dec
mov
icebp
or
in
sbb
dec
push
dec
inc
xchg
xchg
sbb
xchg
jo
outsl
inc
mov
das
adc
or
inc
jbe
xchg
ss
inc
mov
pop
add
push
and
sub
and
sbb
or
inc
cwtl
adc
cmpsl
in
sub
in
jl
lods
lods
fcomps
stos
dec
clc
outsb
cmp
xor
lcall
ret
mov
pop
lods
xchg
imul
jle
push
fldcw
jne
dec
in
pusha
mov
fsts
adc
lock
sbb
int3
push
xor
sub
cmpsl
xchg
xchg
dec
mov
enter
mov
push
xlat
lea
and
or
mov
push
out
sub
jmp
push
lea
hlt
jns
mov
adc
and
jns
and
js
mov
mov
insl
mov
fstp
idivb
mov
pop
push
aam
pop
hlt
pop
inc
shl
pop
cmp
jle
mov
mov
jge
push
add
decl
pop
cmp
adc
pop
cmpsb
xor
add
loop
xchg
mov
mov
pop
test
xchg
mov
cli
arpl
movl
mov
jne
push
push
testb
call
nop
xchg
push
sbbb
fmull
in
out
out
mov
es
pop
cmp
out
add
std
sbb
xchg
std
xchg
sti
aas
xchg
sti
xchg
mov
fmull
lcall
lock
cwtl
mov
add
test
popa
push
add
sti
or
rcr
jg
push
daa
add
int
push
pushl
or
outsb
mov
shr
pop
sbb
or
xchg
test
cmpsb
inc
xor
dec
shlb
sub
and
fidivl
mov
and
pop
lcall
jae
es
sahf
adc
mov
movsb
dec
mov
lcall
stos
xchg
and
stos
test
cmp
and
lcall
es
cmp
and
cmpsb
imul
imul
cmp
das
enter
lret
jmp
int
inc
iret
jae
scas
jmp
cmpsb
rcl
rcll
aam
aad
fwait
cmpsb
jmp
fcomp
fcmovu
jo
xor
add
imul
dec
jae
imul
jae
arpl
xor
xor
sahf
jo
and
fs
push
sarl
inc
sub
dec
roll
and
int3
js
call
and
shll
pop
xchg
incb
xor
jne
push
popf
mov
xor
or
in
mov
pop
add
push
push
add
inc
xchg
ret
jbe
inc
push
sub
pop
dec
cld
dec
pusha
push
xor
push
fsubs
inc
outsb
push
rolb
nop
mov
mov
lea
js
jo
je
jnp
inc
insb
sub
xorl
andb
push
push
push
in
jl
sti
xchg
pop
clc
add
push
and
and
test
mov
or
jo
enter
fcomps
fs
sbb
stos
lret
insb
mov
or
into
add
sahf
test
adc
xor
cmp
inc
lea
clts
shll
xchg
xchg
pop
outsl
xchg
and
adc
mov
lods
inc
mov
xor
adc
sub
jnp
add
pop
push
pushl
dec
pop
mov
jne
adc
and
nop
shr
sbb
lea
fsubs
or
bound
inc
jmp
adc
into
lods
mov
out
mov
pop
aam
ljmp
lock
or
fildl
xchg
or
outsl
and
inc
push
cltd
xchg
test
hlt
hlt
sub
ja
hlt
push
xchg
rcl
adc
add
inc
push
xchg
xchg
inc
clc
je
adc
out
jo
sub
push
in
or
sub
adc
cwtl
rorl
rcrl
push
mov
sub
es
pop
adc
sub
loope
stos
or
cltd
xor
and
add
dec
icebp
mov
inc
pop
cwtl
or
sbb
add
mov
dec
mul
push
call
icebp
loopne
jl
adc
jp
pop
mov
sub
push
test
movsb
mov
dec
mov
test
test
std
dec
mov
pop
jge
mov
movsb
jmp
int3
cltd
xchg
dec
pushf
ficompl
xchg
pop
pusha
std
std
push
sbb
repnz
xor
lods
dec
xor
add
test
xor
into
push
in
adc
adc
sub
sub
mov
lods
adc
add
mov
sarl
push
ss
pop
cmp
adc
cmp
out
fbld
cmp
jne
cmp
mov
jp
int
pop
mov
pushf
push
rorb
movl
imul
iret
push
push
dec
sbbb
imul
sbb
imul
add
push
mov
pop
sbb
mov
and
nop
fwait
xadd
stc
ret
pop
or
int
sbbl
mov
adc
sbb
add
add
add
or
or
pop
lods
subb
sbb
push
xchg
mov
push
push
push
in
push
pop
fdivrs
adc
push
push
adc
dec
out
push
aam
pop
push
push
loopne
cmp
out
adc
cmp
je
mov
xlat
pop
jnp
mov
push
mov
psubsb
sbb
fistpll
aad
test
push
cmp
subb
icebp
js
mov
arpl
and
xchg
push
adc
adc
mov
aam
push
push
data16
and
ja
cmp
cmp
out
fadd
popf
les
lret
push
loopne
inc
sub
lret
mov
int3
rcl
fcomp
add
ljmp
fistpl
mov
mov
lods
push
mov
mov
repz
add
push
add
lods
jg
add
clc
call
mov
cwtl
cmp
inc
les
gs
xchg
push
in
cmp
jb
pop
jb
clc
inc
outsb
jo
stc
test
or
pop
mov
rolb
pop
jnp
cld
or
movsb
xor
cltd
mov
idiv
jle
jo
clc
orl
and
pop
jmp
loope
xor
add
adc
add
ja
lods
loopne
in
pop
dec
lock
jmp
rcrb
push
ret
adc
mov
xchg
adc
or
aam
leave
xorb
lret
js
sub
leave
hlt
push
xor
push
js
xchg
gs
xchg
dec
dec
dec
dec
inc
push
push
xchg
gs
cs
insb
add
lret
adc
jo
lret
mov
xlat
insb
jne
cs
int
insb
insb
int
cmpsb
imul
outsb
je
cmpsb
imul
cmpsb
imul
push
cwtl
cmpsb
imul
jnp
je
jo
dec
xor
shll
outsb
push
gs
jne
das
roll
dec
mov
inc
aam
mov
fisttpl
mov
mov
xchg
gs
js
fwait
cmpsb
imul
test
outsb
push
cwtl
js
lcall
je
inc
push
dec
shll
fnstsw
cmp
inc
loop
in
inc
xlat
xor
out
out
mov
lcall
jb
mov
lcall
mov
mov
add
shlb
arpl
mov
mov
or
mov
push
les
lret
sbb
loopne
cld
test
push
lods
pop
pop
and
xchg
ret
fmul
mov
mov
push
add
xchg
xchg
add
test
or
cmp
rcll
pop
lahf
lock
shll
ss
mov
fstl
cli
aad
ror
gs
pop
loopne
xlat
add
icebp
in
adc
imul
push
lahf
loop
pushf
je
pop
imul
xchg
test
or
cld
repz
sbb
negb
or
sbb
js
and
dec
cmp
add
sbbl
pop
add
shrb
xchg
lea
call
loop
push
or
es
mov
inc
popf
sbb
mov
adcb
lsl
push
aam
and
subl
xlat
js
mov
inc
mov
cli
or
push
call
test
daa
adc
or
lock
or
mov
push
mov
and
sbb
inc
incl
fisttpll
movb
faddl
cld
hlt
mov
and
arpl
xor
xor
and
fs
cs
jbe
dec
mov
sbb
jbe
mov
insl
jne
pop
xchg
fisubl
adc
pop
arpl
add
mov
pop
mov
push
ret
inc
in
jne
int3
call
pop
mov
fdivs
ror
leave
xchg
mov
xor
or
outsb
sub
gs
out
fcomps
leave
and
pop
inc
popa
jmp
push
add
and
enter
fs
sub
cld
add
arpl
test
aas
dec
jbe
xor
mov
or
jg
cmp
jne
jb
and
push
push
mov
jmp
iret
mov
int3
and
loopne
inc
loope
push
shl
push
call
adc
push
lret
mov
jo
mov
shr
loopne
aas
xor
shlb
je
shll
jo
jae
or
clc
es
xor
sarl
dec
shll
fucom
xchg
jp
je
scas
neg
andb
xlat
cmp
add
sahf
call
jmp
sbb
pop
push
xor
sbb
popf
leave
iret
std
ret
and
shll
arpl
mov
shrl
addr16
lret
mov
jo
jae
jne
insb
mov
mov
xchg
mov
aas
es
xor
int
sbb
sti
push
jge
dec
mov
cmp
out
or
pop
mov
pop
outsb
sbb
in
sbb
rolb
add
jb
and
cld
std
notb
fcomps
dec
cmp
xchg
dec
or
add
xor
xchg
inc
int
mov
aas
pop
add
lock
movsb
push
add
loope
sub
imul
sbb
imul
pop
or
pusha
pop
ret
addr16
rcrb
pop
cmp
ror
jmp
inc
jl
cmpl
xor
dec
adc
lcall
sub
pop
xor
movntq
out
call
jo
jge
jg
stos
stos
imul
xor
push
mov
insb
jmp
push
push
ror
inc
xchg
jne
fs
pop
xchg
and
or
enter
jb
add
lret
xor
mov
pop
sbb
jge
mov
lock
xadd
push
sub
cwtl
out
mov
or
lock
imul
jg
push
mov
cld
mov
movsw
push
and
fwait
insl
popf
in
adc
mov
jg
movb
and
cmp
lods
or
test
daa
xchg
rorl
mov
mov
mov
mov
outsb
pop
jle
mov
mov
fdivrl
mov
fs
mov
dec
or
add
fidivs
xchg
add
adc
es
call
in
adc
stos
clc
roll
mov
hlt
sbb
jg
std
cwtl
inc
cwtl
and
jmp
mov
lret
mov
je
outsl
outsb
lret
mov
lret
cmp
imul
mov
insb
imul
dec
lods
scas
scas
push
mov
imul
imul
lcall
or
jo
ret
les
cmpsb
imul
jne
add
xchg
int3
mov
gs
xchg
gs
arpl
xchg
gs
xchg
outsb
cmp
xchg
xchg
gs
jb
jns
cmp
fwait
push
mov
ret
and
jb
xor
shrl
outsb
sub
insl
push
std
and
dec
mov
mov
dec
jl
dec
jne
or
jmp
push
and
enter
sbb
jmp
shrl
mov
sub
mov
psubsb
out
dec
leave
dec
sbb
test
insb
push
xchg
in
hlt
jne
xor
loopne
call
negl
push
arpl
sub
xor
xchg
cld
clc
mov
jo
div
sarb
pop
sub
mov
cmpsb
and
fs
inc
or
sbb
cmp
cli
les
pop
dec
xchg
jae
arpl
dec
xchg
in
cmp
and
outsl
imul
fiaddl
les
sbb
bnd
shll
fwait
xchg
sbbl
nop
lods
hlt
lods
inc
in
pop
jnp
int3
scas
sub
testb
popa
cwtl
sbb
sbb
ja
clc
popa
imul
popa
arpl
int
mov
stc
outsl
popa
jb
leave
mov
shll
sub
fldcw
push
mov
ljmp
je
out
jns
out
or
ficomps
cld
push
add
jb
lock
subl
pop
xchg
sbbb
and
cmc
sbb
push
xor
sarl
shll
inc
rcrl
ss
or
arpl
insw
call
mov
xchg
cli
pop
mov
je
mov
fdiv
dec
aad
jle
mov
add
pop
cmpsl
push
sub
push
clc
mov
adc
push
mov
out
sarb
adc
push
ret
adc
setbe
push
pusha
or
adcl
dec
mov
cmp
jmp
call
call
adc
add
jle
call
jb
pop
or
push
xchg
jbe
dec
xor
push
cmp
and
add
push
ret
adc
xor
pop
push
dec
rolb
ljmp
xor
sahf
loope
push
sbb
movl
loopne
loope
bt
ljmp
loop
rclb
imul
imul
and
movsl
call
and
dec
ljmp
nop
in
in
out
into
xchg
out
ja
ds
pop
lcall
push
frstor
cmp
fildll
loope
xchg
and
pop
loop
jecxz
in
sub
out
in
out
add
cmc
stos
scas
popf
lea
clc
je
call
icebp
push
fdivl
sub
in
mov
or
lcall
pop
sub
mov
cld
dec
push
imul
push
and
aaa
or
sbb
mov
mov
stc
xor
cmp
inc
imul
cmp
jl
cmp
adc
rolb
shrb
sarb
das
call
sbb
popf
jl
push
add
dec
mov
pushf
mov
push
call
mov
xor
lcall
mov
add
cmp
mov
cmovne
pop
not
mov
cmp
pop
mov
shr
into
push
shrb
inc
xor
ss
mov
add
sbb
fld
out
or
sbb
mov
mov
lahf
in
xchg
mov
mov
jl
cld
push
push
mov
jg
jns
xchg
in
mov
xor
push
andl
test
pusha
push
add
addb
jne
add
push
jl
pop
or
fsubl
xchg
or
clc
pop
sub
sar
mov
cmp
pusha
adc
insb
or
add
outsb
add
and
call
iret
xchg
in
push
and
dec
inc
sahf
and
sbb
and
jl
inc
ret
insl
call
push
pusha
xlat
xchg
insb
rcr
in
and
nop
insl
push
cmpsb
lds
dec
lock
cltd
mov
leave
adc
or
push
add
sbb
das
shll
xchg
sub
push
outsb
fs
jo
lods
pop
outsb
mov
gs
insb
xchg
gs
xchg
push
outsb
fs
jb
pop
insb
inc
dec
sub
iret
push
cmp
xor
fs
insb
insb
adc
push
mov
lret
mov
outsb
fs
jne
xor
rol
sub
fnstenvs
in
popa
in
dec
shrl
out
gs
out
clc
stc
cli
sti
leave
push
sub
dec
push
cld
push
std
push
mov
or
outsl
outsb
imul
in
push
outsb
mov
nop
cmpsb
fs
cmpsb
jp
cmpsl
shll
popa
push
sub
dec
rcll
iret
xor
sub
cwtl
sarb
scas
mov
xor
mov
fs
add
jp
je
js
sbb
mov
fwait
mov
jmp
jns
fmull
ficoms
lcall
add
and
fmull
sbb
dec
cmp
movlps
mov
or
jne
lods
jg
sub
and
mov
or
push
sbb
mov
jmp
out
inc
repnz
les
pushf
es
sahf
mov
cs
mov
inc
adc
or
leave
and
jmp
and
orb
push
dec
push
dec
enter
repz
aas
sub
cs
mov
lcall
push
clc
mov
daa
sbb
les
add
in
or
mov
test
mov
rcrl
push
push
cmp
push
jl
pushf
mov
rolb
push
ja
push
mov
pop
jge
mov
pop
sub
push
out
fbld
ja
call
xchg
or
add
mov
push
mov
or
xlat
cltd
lods
shrd
sub
into
mov
outsb
or
mov
mov
mov
adc
mov
loopne
pushf
sbb
xorl
add
fwait
fwait
scas
jp
fistl
fsubrp
jmp
ja
pusha
add
jne
sbb
adc
mov
clc
clc
cmpsb
inc
adc
push
jmp
lcall
gs
xchg
je
inc
outsl
jne
lret
inc
les
inc
imul
jne
daa
gs
fildl
imul
jb
leave
insb
sbb
test
je
fisubl
pop
sarl
lods
mov
cmpb
push
push
call
adc
add
clc
lcall
mov
repz
test
xor
loope
cmp
sub
sub
je
mov
push
nop
test
test
inc
mov
fldt
jmp
jno
inc
inc
hlt
mov
pop
lock
cmpsb
divl
inc
or
and
mov
pop
xchg
iret
daa
ljmp
jl
cld
pop
std
dec
cmp
cmp
cld
add
test
sub
push
fcmovb
out
aad
cmp
jl
je
cmp
imul
cmpb
js
add
jo
add
cmpl
loopne
inc
jb
dec
or
imul
push
mov
xor
or
sub
dec
or
mov
add
push
inc
dec
sbb
aaa
shrb
mov
add
pop
and
arpl
dec
or
sarl
mov
xor
inc
inc
stos
add
rclb
imul
adc
jne
mov
sub
mov
lods
out
jnp
mov
mov
or
add
cmc
jmp
adc
outsl
mov
shr
jle
movzwl
mov
jne
daa
add
push
dec
add
add
shlb
cli
add
outsl
movsl
orb
adc
add
jae
mov
push
data16
lock
jne
or
add
jne
inc
adc
loopne
ss
pop
jae
cmpsb
aas
lea
mov
cld
inc
inc
jl
add
or
sbb
push
pop
push
dec
push
cmpb
jbe
jno
sahf
jo
push
ret
dec
je
fcmovnu
and
loopne
loop
inc
adc
iret
pop
push
sbb
lea
or
xchg
mov
pushl
add
push
scas
mov
xor
mov
cmp
test
mov
inc
push
and
add
sbb
xor
std
fnstsw
jle
sbb
pop
lods
push
mov
cmp
out
arpl
inc
adc
int3
jbe
lahf
inc
aaa
pushl
lcall
xor
sub
add
push
les
push
loop
push
xchg
mov
rclb
out
adc
icebp
sub
cltd
pop
adc
call
and
fdivs
cld
push
les
and
pop
mov
mov
or
test
testb
je
pop
inc
sub
fwait
inc
shr
or
mov
xor
sti
cmpsb
push
loope
adc
cwtl
adc
inc
and
aaa
enter
push
adc
and
mov
aam
or
testl
and
mov
sarl
lcall
pop
or
pcmpeqw
shrl
loope
mov
aam
leave
mov
insb
jb
sub
js
sbb
push
pop
xchg
nop
cmp
mov
cmp
add
call
mov
dec
push
mov
cmp
jnp
cli
mov
jo
sub
je
addl
and
and
shl
cmp
add
push
insb
sbb
int
ds
dec
call
jne
pop
mov
xchg
andb
pop
mov
adc
mov
lret
mov
outsw
outsb
je
mov
mov
cwtl
xor
out
xor
adc
and
rol
and
loopne
jo
xor
movsb
add
rcr
ret
push
stos
out
sbbb
icebp
mov
es
mov
jl
mov
pop
push
lods
mov
or
jl
jecxz
cmp
sbb
int3
jmp
push
adc
adc
dec
add
test
inc
xchg
movsl
lret
out
mov
add
jae
jge
aam
adc
push
or
nop
mov
mov
or
js
aaa
in
xor
scas
or
je
sahf
jbe
fsubl
sbb
lock
data16
mov
popa
call
add
iret
pop
icebp
jbe
arpl
push
mov
adc
pop
push
cmp
cld
fcom
jo
and
push
inc
je
cmp
in
mov
adc
mov
frstor
call
fisttpll
push
jl
clc
ret
loopne
sub
jle
push
into
pop
test
mov
sub
pusha
sbb
jae
adc
inc
mov
and
js
add
fisubrs
adc
clc
fwait
pusha
mov
cmp
jl
mov
xchg
fstps
les
inc
rclb
jecxz
in
mov
cld
movsl
adc
and
enter
ds
lret
pop
add
les
vcvttss2si
shrb
outsb
data16
shrb
lret
and
xor
iret
mov
xor
aad
std
shlb
pop
sar
or
xchg
ret
les
sbb
xor
ss
mov
xor
gs
xchg
jmp
gs
sub
xor
je
popa
jns
es
mov
gs
xchg
test
add
push
and
or
sub
mov
push
pop
or
jne
popa
and
stos
test
mov
test
adc
cmp
cmp
bound
xchg
sub
mov
pop
int
jno
dec
and
push
xor
push
daa
cmp
sbb
push
mov
sbbb
int
sub
fiadds
addr16
mov
in
sub
xor
xor
loopne
cmp
and
cld
mov
loopne
call
jne
add
push
js
or
imul
cmp
andb
movsl
aam
mov
adc
aad
lret
mov
dec
frstor
jo
outsl
sub
mov
jb
jb
mov
mov
lahf
in
jge
aam
add
inc
push
int
xorl
push
out
push
mov
cmpps
mov
sbb
fwait
or
dec
and
xor
mov
pop
push
mov
push
dec
xchg
insb
out
sbb
xchg
adc
sbb
push
push
pop
pop
cmpsl
dec
xchg
sub
mov
test
cli
fmuls
or
pop
xor
mov
sbb
fcomip
in
or
add
and
xor
enter
insb
xor
fldenv
jl
add
addb
insb
movsb
fwait
mov
inc
in
add
or
add
adc
mov
clc
xor
cmp
xor
inc
jnp
lods
fisubs
repnz
push
add
data16
loopne
daa
push
cmpsl
sub
sbb
add
lock
fldenv
movsb
mov
mov
stos
cltd
incl
add
imul
insb
imul
or
arpl
xchg
mov
call
popa
jbe
cmpsl
add
dec
cltd
or
xor
inc
cmpsb
push
nop
mov
or
push
jb
arpl
jae
fs
ljmp
insb
sbb
xor
popa
jmp
out
clc
jo
push
push
imul
push
insb
cmpl
ss
mov
jne
add
inc
insb
sub
sbb
inc
fs
adc
dec
imul
popa
jb
and
shlb
fmulp
jnp
mov
jg
sbb
sbb
fs
adc
push
cmp
add
add
jb
lretw
mov
out
mov
out
adc
or
xor
loope
and
pop
dec
divb
jns
add
or
and
mov
into
add
dec
or
jae
add
in
nop
test
sbb
mov
popa
inc
outsl
jb
cmp
and
push
push
push
fnstcw
push
lods
int3
and
or
andb
jge
mov
repz
push
sub
push
push
daa
adc
bswap
inc
lods
in
pushf
imul
inc
pop
ret
xor
lods
mov
mov
arpl
daa
dec
setnp
pop
loope
inc
inc
and
pop
aaa
das
dec
or
or
test
push
add
fadds
mov
mov
add
sbb
mov
daa
ret
push
outsl
imul
mov
sub
pop
mov
sub
test
xor
mov
push
inc
ss
popa
mov
sbb
xor
in
fisubs
inc
add
jns
mov
clc
dec
outsl
adc
mov
adc
jne
push
ret
loope
fnstenv
or
xchg
pop
add
into
pop
jo
sahf
xor
fstpt
pushf
fldt
popf
mov
ret
cmp
xchg
shll
mov
adc
add
imul
mov
jno
aam
jno
inc
push
dec
inc
or
add
jbe
jmp
push
je
push
push
incl
out
add
insb
popa
cmpsb
xor
ja
mov
gs
fs
popa
xor
sub
fstpl
inc
inc
std
inc
pop
pop
and
push
ret
xchg
add
push
fcoms
add
add
cmp
mov
popa
addr16
aad
push
outsb
popa
in
push
push
mov
push
inc
pop
rolb
insb
or
add
mov
in
movl
inc
adc
sub
mov
gs
jb
insl
imul
outsl
daa
mov
clc
inc
and
mul
sbb
pop
add
push
xchg
push
mov
imul
adc
mov
leave
jne
push
cwtl
jne
ja
push
or
xor
pop
add
mov
mov
int
pop
xor
jb
cmp
frstor
adc
inc
outsb
jne
movsl
jmp
insl
mov
add
arpl
jo
add
arpl
fsubrs
pop
inc
inc
push
inc
push
into
cwtl
cmc
inc
mov
sbb
mov
fisttps
or
mov
pop
fstpt
mov
xchg
or
mov
push
sbb
fisubs
pop
js
negb
jb
xor
aaa
mov
pop
jnp
add
pop
adc
cmp
cltd
and
data16
inc
xchg
sbb
fisttps
or
ficoms
push
out
inc
lds
scas
add
mov
adc
sub
dec
adc
in
xchg
or
add
mov
fldt
mov
ret
aas
xor
mov
pop
dec
inc
pop
push
add
loopew
insl
pop
addr16
dec
sbb
ss
outsl
push
and
or
lods
insl
arpl
xchg
mov
push
repz
add
fildll
dec
sbb
push
lods
push
pop
dec
sbb
adc
pcmpgtw
cmp
mov
insl
testb
scas
adc
pop
mov
pop
add
pop
dec
add
sbb
mov
sti
inc
xor
inc
mov
fcoml
adc
inc
sub
std
inc
imul
testb
push
dec
mov
lds
popa
dec
push
sbb
mov
xlat
adc
rorl
out
jnp
add
push
inc
bound
ficompl
pop
add
xchg
pop
mov
test
bound
out
jb
xchg
aas
add
add
sbb
adc
push
stos
xchg
add
push
cmp
mov
cmpb
cmp
inc
ds
ds
ds
ds
ds
incl
stos
fidivrl
call
aas
mov
lods
decl
adc
sbb
lock
xor
pushl
and
and
xor
xor
xor
xor
xor
sub
xor
pop
xor
cmp
pushl
xchg
xor
xor
xor
xor
xor
xor
xor
xor
pop
xor
jbe
test
xchg
xor
pushl
push
xor
xor
xor
xor
xor
cmc
xor
cmp
dec
ss
ss
xchg
pushl
cwtl
ss
into
ss
pop
aaa
push
aaa
bound
jae
jp
and
jo
cmpl
cmp
cmp
cmp
scas
cmp
cmp
xlat
cmp
cmp
cmp
filds
pop
xor
xor
xor
outsb
ss
ss
cmpsl
ss
fdivs
fbstp
push
aaa
daa
aaa
push
aaa
xchg
aaa
mov
aaa
lock
adc
push
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jnp
cwtl
cmp
cmp
or
cmp
mov
ds
ds
pop
sbb
xchg
aas
mov
or
cmp
jno
cltd
xor
xor
xor
xor
jg
pushl
insl
xor
mov
xchg
xor
xor
xor
xor
xor
pushl
adc
and
cmp
inc
xor
jbe
jnp
test
lcall
xor
xor
fcomip
xor
xor
insl
xor
mov
lahf
xor
xor
pushl
shll
fdivs
fbstp
out
out
xor
xor
mov
enter
divb
clc
filds
xorl
stos
ss
ret
ss
ss
add
ljmp
test
aaa
mov
mov
aaa
loop
jmp
aaa
sub
push
cmp
arpl
test
lcall
lods
cmp
cmp
cmp
sub
das
cmp
cmp
lcall
fidivrl
cli
cmp
cmp
cmp
les
iret
cmp
cmp
cmp
cmp
cmp
inc
cmp
cmp
lock
cmp
cmp
cmp
cmp
cmp
cmp
cmp
ss
pop
aas
and
xor
push
push
fildll
jg
test
loop
mov
or
aaa
xor
dec
xor
lret
xor
xor
xor
push
add
fcomip
xor
dec
test
mov
xor
xor
xor
insb
xor
mov
stos
pushl
out
xor
adc
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
ret
lock
xor
jl
fwait
xor
fdivs
icebp
sahf
ss
call
aaa
pusha
aaa
xchg
aaa
stos
std
lds
add
jbe
cmp
dec
in
out
inc
cmp
cmp
fwait
cmp
cmp
out
jae
jge
xchg
mov
pushf
cmp
cmp
cmp
cmp
cmp
data16
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
aaa
cmp
xchg
cmp
pop
ds
ds
aas
popa
aas
push
fildll
add
xor
xor
jbe
aas
pushl
jge
xorb
xor
xor
push
xor
aas
xorb
xor
xor
xor
xor
xor
xor
xor
xor
xor
out
dec
pushl
xor
push
xor
out
out
pop
ss
fucomi
sbb
mov
stc
sub
ds
inc
aaa
mov
cltd
aaa
mov
aaa
jmp
aaa
les
lret
aaa
out
add
cmp
inc
cmp
push
cmp
imul
mov
int
fistpll
cmp
cmp
cmp
cmp
cmp
cmp
adc
sbb
loope
jg
and
sub
cmp
dec
cmp
popa
cmp
insl
cmp
incl
cmp
cmp
cmp
cmp
cmp
cmp
decl
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
ja
pushl
popf
cmp
cmp
cmp
adc
dec
ds
ds
jae,pt
jge
adcb
xchg
mov
xchg
ds
ds
mov
ds
ds
ds
or
mov
aas
sub
das
aas
xor
aas
bound
pushf
aas
mov
aas
int3
aas
sarb
xlat
aas
fdivrl
in
out
aas
cmc
aas
sti
addr16
sub
incl
xor
xor
xor
xor
pop
xor
jl
mov
mov
loopne
or
adc
xor
pop
xor
outsl
add
xor
addl
outsl
cli
ljmp
xor
gs
test
push
ss
ss
ss
ss
mov
fadds
aaa
push
aaa
pop
pop
in
or
and
cmp
cmp
pop
cmp
pop
pop
scas
inc
sbb
cmp
sub
aas
cmp
xchg
lea
fdiv
cmp
cmp
aaa
fistpll
hlt
cmp
cmp
jg
dec
dec
cmp
cmp
cmp
sub
cmp
cmp
cmp
jae
dec
aaa
aas
xchg
cmp
cmp
sarb
jnp
flds
call
insl
cmp
test
int
in
cmp
add
inc
outsb
fnstsw
cmpb
sarl
cwtl
sarb
fdivrs
lock
mov
dec
push
aas
or
adc
mov
sub
enter
dec
sub
pop
lds
aaa
popa
add
mov
sarb
mov
fdivrs
nop
stos
mov
push
sti
xchg
aam
mov
mov
adc
cmp
movsb
add
mov
add
pusha
xchg
and
and
fwait
pop
inc
aaa
pop
js
add
add
add
pop
test
and
add
add
fimuls
nop
add
push
push
add
pop
and
or
in
lods
mov
stc
push
cmp
push
andb
fldt
call
or
and
cmp
push
in
push
add
xchg
mov
mov
push
aam
cld
lcall
inc
cmp
xor
cmpsb
imul
into
ss
rcl
mov
cmp
xor
cmpsb
imul
hlt
add
or
push
sub
fidivrl
jle
push
rcrl
sbbl
js
dec
scas
add
fs
out
adc
sub
dec
dec
dec
inc
and
xchg
xchg
add
inc
xor
mov
mov
lcall
push
add
test
loopne
dec
popa
jns
jne
call
pop
xor
pop
push
testl
push
push
add
js
pop
xor
adc
js
inc
ja
adc
inc
dec
daa
push
jb
jg
push
sub
push
push
inc
and
or
pusha
jnp
inc
add
in
jae
push
add
pop
mov
sub
add
xor
push
push
pop
mov
push
repz
jle
movsl
or
mov
mov
mov
mov
cmp
adc
orb
bound
rorl
pop
mov
or
mov
mov
sbb
push
rorl
cmp
add
aam
xor
lea
pop
sbb
push
lods
std
mov
les
adc
cs
int3
add
cwtl
in
fs
into
jbe
dec
pop
pop
push
ds
in
jne
sbb
sub
mov
and
ffree
inc
lock
add
push
xchg
pop
fnstenv
jmp
out
mov
cmpl
jbe
jnp
lock
pop
ret
daa
sub
xor
mov
mov
test
cmp
mov
and
mov
dec
mov
fcomps
sub
hlt
pop
es
ds
stc
fidivs
pop
and
mov
cmp
push
test
add
repnz
imul
movsb
insl
insl
pop
into
mov
cs
and
insl
inc
daa
pop
aad
je
int3
mov
sbb
dec
dec
inc
mov
test
mov
orl
or
cmp
gs
insl
insl
inc
je
dec
xchg
gs
dec
inc
insb
cwtl
gs
lcall
xor
push
push
fwait
inc
mov
push
push
outsb
or
adc
shl
pop
inc
xor
stos
xor
sbb
or
inc
cld
cmp
lea
sub
mov
dec
and
dec
call
sbb
sbb
or
adc
push
sarb
lea
xchg
add
pop
jmp
mov
mov
outsl
add
cmp
js
pop
inc
xchg
testb
lea
mov
nop
fwait
push
scas
fs
dec
sbb
sub
ret
leave
sbbb
clc
stc
sub
adc
jle
push
push
cmp
xor
sbb
ss
lds
call
pop
and
scas
or
or
sub
lahf
mov
xchg
xchg
adc
popa
out
push
add
sub
pop
adc
push
test
jne
push
enter
out
cs
push
mov
mov
enter
or
push
cmp
push
push
dec
inc
je
jb
and
dec
jbe
rorb
or
add
mov
adc
test
aaa
and
or
and
mov
add
inc
add
cmp
jl
push
icebp
mov
push
mov
add
repz
lods
add
scas
or
cmp
cmp
mov
mov
jb
out
mov
adc
xchg
and
outsl
gs
xchg
xchg
outsb
gs
cs
add
js
fs
sub
insb
popa
or
mov
lret
outsb
arpl
gs
xchg
lea
fnstsw
loope
xchg
gs
xchg
js
bound
fs
adc
inc
sti
xor
js
addr16
mov
movsb
aam
adc
adc
je
test
aad
fs
pop
dec
gs
push
lds
gs
lea
mov
rcl
push
ds
xchg
add
pop
shll
sbb
lcall
aas
std
enter
xor
std
std
mov
dec
xlat
pushf
popf
sub
or
inc
fdivrs
mov
std
js
push
ja
dec
cmp
mov
data16
shrb
add
lea
sti
jo
aaa
jnp
test
sbb
pop
enter
inc
sub
and
dec
test
push
insl
push
adc
dec
push
jge
mov
inc
xlat
sbb
sbb
push
mov
jp
jne
sbb
jb
rorb
or
inc
or
mov
push
adc
cld
xlat
into
outsb
orl
cmpsb
lock
cs
add
xor
and
mov
loope
and
in
add
outsb
lea
mov
mov
test
sbb
jmp
stos
sbb
sbb
stos
lods
lods
scas
sbb
add
scas
mov
sbb
ss
in
add
bound
sbb
movsl
andb
je
test
test
mov
std
stos
std
lods
std
mov
or
pop
stos
cs
jle
iret
insb
mov
gs
jb
gs
add
dec
subb
cmp
add
push
mov
add
adc
sbb
lods
and
call
out
lret
mov
mov
add
addr16
fwait
sub
add
gs
mov
or
cs
gs
pcmpgtb
pop
xchg
gs
popa
jne
arpl
dec
xchg
gs
js
dec
xchg
mov
jno
insb
addr16
gs
push
sbbb
imul
jo
outsl
gs
sub
inc
iret
cs
mov
inc
loopne
arpl
or
push
ds
and
je
and
add
mov
rcll
stc
lods
mov
adc
in
xlat
dec
inc
cs
xabort
dec
mov
adc
test
adc
sbb
pop
daa
pusha
ljmp
fstl
xchg
imull
sub
and
mov
push
dec
xor
sbb
and
int3
pop
or
repz
orl
mov
inc
imul
push
outsb
daa
mov
fucomi
inc
repz
call
jge
xorb
adc
nop
leave
add
pop
addr16
mov
push
xor
and
es
jg
in
inc
test
sbb
push
aam
add
fsubrs
mov
outsl
imul
add
nop
rorb
in
jae
sbb
cmp
call
cmc
jns
andb
mov
xchg
sub
mov
xor
int3
jae
push
add
mov
pushf
adcb
pusha
adc
push
mov
push
inc
add
loopne
xchg
cmc
xchg
xor
mov
pop
xor
pop
mov
pop
movl
pushf
outsb
or
or
add
mov
mov
pop
pop
add
jge
scas
inc
dec
add
adc
mov
add
xor
sub
mov
sub
sub
jle
das
jns
pop
and
and
and
and
cmovb
and
sub
cmp
add
xchg
push
adc
das
xor
pop
int3
dec
and
add
xor
nop
adc
and
add
jp
psraw
add
pop
and
and
sub
jb
jns
jmp
pushl
cmp
jns
test
xor
jb
cmp
cmp
push
std
std
add
add
sub
push
and
stos
in
std
test
inc
add
cld
jmp
in
repnz
std
xor
enter
or
incb
push
std
in
fwait
adc
enter
and
das
jo
push
and
jns
jb
adc
pop
inc
dec
leave
js
andb
and
and
cmp
or
push
add
add
or
cmp
in
and
cld
push
add
lret
lcall
add
repnz
cmp
xchg
add
insb
ss
adc
and
sahf
mov
adc
enter
cmp
dec
adc
adc
and
rorb
cltd
xchg
les
nop
dec
xchg
cwtl
lcall
aaa
add
jae
sbb
test
adc
mov
xor
je
cmp
enter
cmp
mov
inc
xor
pop
test
nop
mov
pop
adc
adc
and
mov
sub
sub
pop
movsb
push
sub
inc
mov
jg
adc
and
sub
inc
mov
shlb
aam
jno
sub
mov
jns
or
inc
mov
mov
adc
mov
add
xchg
fstps
mov
std
lcall
dec
jae
push
mov
push
outsb
jb
inc
mov
add
inc
ljmp
xchg
xchg
add
stos
dec
subb
dec
insl
jno
nop
add
dec
loope
mov
aas
push
add
insl
dec
jae
jg
and
xor
rclb
xchg
and
mov
cltd
and
dec
orb
pop
push
xchg
mov
or
dec
inc
iret
and
out
jne
addb
jb
mov
add
push
xchg
daa
xchg
cmp
sub
xor
fistpl
add
lds
pop
insb
fmul
data16
in
inc
cmp
mov
push
sbb
sub
pop
ss
push
mov
mov
push
sub
mov
pop
mov
dec
pop
add
lret
lahf
jmp
fucomp
add
leave
add
sub
sbb
and
xor
adc
lea
sbb
popf
adc
fisubrl
or
push
cs
jg
add
shl
popa
int
and
xchg
sbb
add
adc
bound
or
cmp
adc
sub
adc
jne
insb
dec
and
sbb
adc
imul
into
roll
mov
in
addr16
imul
push
mov
mov
add
les
jns
pop
sub
and
gs
push
or
pop
loope
lods
inc
sub
adc
push
stc
aas
inc
je
inc
frstor
imul
jns
and
in
daa
add
loope
add
in
adcb
xor
jo
add
mov
pusha
jo
dec
leave
int3
add
xor
loope
shll
add
add
repz
jne
cmovns
add
decb
gs
jae
ja
inc
mov
or
cmovno
dec
pop
jb
addr16
push
jae
pop
adcl
cmp
cmp
xor
jne
lea
jecxz
inc
and
pop
movsb
jmp
xor
jae
and
mov
movsl
popa
and
add
mov
sbb
or
fucomp
mov
outsb
es
push
sti
pop
gs
sub
out
add
jb
cmp
mov
pop
xor
xor
add
mov
scas
imul
insb
popf
xchg
pop
dec
or
sbb
jo
popf
addr16
fstpl
rcrb
sub
shlb
add
ss
push
sub
or
mov
push
sub
dec
dec
imul
push
daa
mov
lahf
sbb
mov
mov
outsl
pcmpeqw
jae
mov
or
xor
inc
push
fistpl
mov
sbb
mov
inc
push
mov
push
arpl
mov
xchg
out
add
dec
adc
and
pushf
mov
xor
xor
pop
xor
dec
call
ljmp
inc
mov
mov
aad
pop
xor
xor
xor
xor
xor
pushl
fnsave
daa
ss
mov
sbb
cmp
xor
aaa
fnsave
clc
aaa
xor
cmp
cmp
sub
pop
sarb
mov
mov
cmp
cmp
arpl
cs
cld
fists
sarl
cmp
cmp
jg,pt
fildll
jnp
cmpsl
fstpt
pop
aas
insb
aas
cmpb
aas
lahf
aas
movsl
aas
mov
and
cmc
hlt
fidivrl
aas
test
addr16
jp
mov
fwait
xor
xor
movq
cli
pushl
fwait
xor
xor
xor
xor
dec
add
xor
xor
call
xor
xor
xor
sti
call
or
jmp
sbb
and
xor
mov
hlt
cmp
push
pop
pop
arpl
inc
hlt
fldl
rcrl
fidivl
loopne
out
add
sub
cs
xor
mov
ja
es
pop
nop
xchg
cmp
sub
xchg
add
imul
push
adc
sbb
or
push
pop
cmp
hlt
xchg
into
or
sbb
add
add
xchg
inc
xor
jl
pop
add
push
jp
js
push
add
push
add
xchg
dec
outsl
jbe
push
cmp
fimuls
add
inc
addl
pop
pushf
mov
xchg
inc
add
imul
xchg
inc
or
fnstenv
xor
call
pop
adc
addl
gs
sub
push
inc
inc
ss
and
push
add
add
hlt
pop
insb
pandn
insb
dec
data16
sbb
sbb
mov
out
cmp
das
and
add
lgdtl
test
xchg
push
xchg
sbb
sbb
add
add
shlb
push
fs
mov
push
fs
sbbl
nop
push
leave
push
push
inc
fwait
sbb
aam
add
ret
xchg
xchg
cmpsb
cmp
mov
jle
lock
or
add
incl
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
