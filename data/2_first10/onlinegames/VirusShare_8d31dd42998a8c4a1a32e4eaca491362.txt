jp
add
push
inc
pop
add
mov
sub
push
push
lea
push
xor
push
mov
clc
cmp
addr16
xchg
loope
imul
jne
jae
cmp
out
cs
insb
repnz
mov
call
or
add
mov
cmp
je
shlb
nop
rolb
sarl
adc
ret
les
xchg
loope
gs
je
dec
enter
jo
scas
adc
lret
gs
inc
int
push
xchg
loope
arpl
outsl
shlb
add
daa
sbb
jb
jae
call
pop
cmp
pushf
adc
or
pusha
mov
out
jno
movsb
movsl
cmpsb
cmpsl
jns
out
test
stos
stos
lods
lods
out
sahf
out
scas
mov
mov
out
sahf
mov
mov
mov
cmp
mov
jp
gs
jne
push
sub
add
dec
clc
push
add
add
sar
jne
pop
add
clc
push
mov
test
sub
hlt
cld
mov
jae
cmp
nop
push
xorb
ja
pushl
or
jno
outsb
add
pop
test
pop
je
inc
add
cmp
jmp
mov
or
repz
add
lea
movsl
mov
mov
add
push
sti
inc
or
popf
imul
scas
mov
add
push
mov
pushl
mov
outsb
dec
push
repz
jnp
jae
jb
or
iret
xor
repz
hlt
cmc
mul
push
sbb
xchg
jb
imul
cmp
je
push
out
out
call
xchg
outsl
ljmp
je
lea
mov
sbb
push
mov
or
aam
or
daa
movsb
or
jne
push
push
mov
sub
inc
mov
push
adc
xchg
dec
roll
arpl
xor
mov
pop
inc
push
mov
dec
imulb
sbbl
jno
das
add
mov
sub
sub
test
or
cmp
jb
in
pop
cmp
scas
mov
jo
push
pop
fwait
add
test
adc
adc
xchg
je
mov
clc
mov
push
rolb
push
jnp
dec
mov
add
cmp
rclb
jecxz
push
aad
imul
fsubrs
fidivl
cs
scas
cmp
test
jo
mov
cmp
enter
jno
dec
arpl
test
jae
jecxz
into
jecxz
inc
jne
jbe
jecxz
into
gs
js
lds
sub
push
outsl
mov
jl
imul
xchg
mov
inc
addb
subb
sbb
subl
test
dec
xchg
ret
loope
dec
mov
push
hlt
cmp
mov
sbb
cmp
mov
lea
icebp
nop
push
xchg
popa
xchg
jbe
gs
cmp
dec
xchg
insl
xchg
popa
xchg
addr16
gs
xchg
cltd
push
lcall
lret
popf
insb
sahf
lahf
mov
add
repz
enter
sbb
leave
jne
jae
push
int3
je
popa
or
iret
je
jne
jo
cmp
out
jno
mov
jno
sahf
mov
cmpsb
popf
out
mov
jae
sbb
xchg
mov
xor
mov
xchg
lds
inc
push
pushf
fisttpl
push
push
push
jno
dec
add
pop
lds
imul
adc
fs
add
call
addr16
cmp
pusha
push
mov
fs
mov
xchg
adc
call
cs
and
mov
pop
adc
ret
xchg
and
mov
test
or
rep
and
sysret
insl
pop
fidivs
jo
les
xor
dec
mov
adc
insb
repnz
movsb
iret
mov
adcb
xchg
push
sar
xor
rcr
sub
push
cwtl
push
add
je
lea
cmp
xor
push
add
add
push
iret
imul
mov
jmp
add
mov
ljmp
les
hlt
push
mov
mov
adc
xchg
call
orl
stos
cltd
and
into
inc
loopne
aam
outsb
and
cmp
fwait
xor
arpl
bound
add
mov
dec
int3
jns
je
adc
popf
mov
mov
xchg
push
call
jmp
pusha
outsb
mov
mov
fimull
dec
mov
rclb
jae
out
xor
in
jno
xchg
sti
insl
cld
shlb
sbb
jne
sbb
push
lret
fsts
clc
push
push
je
and
add
add
push
aam
loopne
dec
sbb
icebp
gs
mov
stos
addr16
and
push
cmp
mov
inc
xor
push
daa
test
nop
mov
gs
aad
xor
mov
xor
sub
mov
add
mov
xor
pop
je
cmp
je
inc
shr
jne
add
or
or
add
jne
add
xchg
push
popa
cld
pop
cmpsl
mov
leave
fldt
xchg
mov
mov
and
or
jae
xor
aaa
int3
sbb
mov
pop
or
adc
fdivs
mov
movsb
jecxz
or
xor
inc
pop
cmp
push
xor
sbb
sar
push
popf
or
or
cmp
addr16
jmp
arpl
sub
push
pop
addr16
in
push
fadds
xchg
loope
fidivl
fsubrl
jo
sbb
jb
fbld
jb
jne
cs
fs
and
pop
cmp
mov
mov
out
add
lea
aam
or
sbb
add
jmp
push
push
cmp
mov
lds
lock
and
mov
iret
mov
adc
xor
adc
les
adc
add
jne
cmp
testl
dec
xlat
lods
mov
imul
push
fsubp
cmp
je
push
xchg
jmp
imulb
popa
cld
sbb
mov
and
mov
inc
cmp
mov
pop
inc
mov
aam
add
push
inc
jle
pop
les
outsl
pop
mov
nop
mov
pop
imul
and
add
loope
mov
add
add
or
imul
stos
addb
xor
cmp
je
inc
add
pop
js
sahf
or
mov
stos
add
sbb
sub
es
add
mov
jb
push
divb
mov
push
int3
push
ljmp
push
mov
cmp
aas
push
popf
out
int3
scas
xor
out
xor
cmp
les
push
pop
push
push
lcall
es
fs
sub
and
int
iret
jecxz
into
xor
rcl
sarb
repz
xor
xlat
repz
cmp
fadd
icebp
cmp
fstp
fnstsw
xor
xor
sbb
xchg
cmp
in
out
ret
loope
fs
call
and
jmp
in
es
fs
xor
out
icebp
jae
sahf
xlat
cmp
repz
fs
stc
cli
xor
xor
cmp
cmp
dec
jo
mov
and
cmp
aad
adc
cmp
repz
mov
cmp
add
adc
js
js
jae
ret
sbb
subb
jne
lea
arpl
js
repz
cmp
dec
sbb
jae
push
sub
push
push
inc
and
pop
in
aas
loop
mov
nop
arpl
xchg
imul
xchg
xchg
gs
je
jo
push
xchg
lcall
es
sahf
jne
cmp
mov
push
jnp
jecxz
inc
and
push
clc
push
push
cwtl
adc
pop
movsb
xchg
mov
mov
push
hlt
mov
xor
xchg
std
jnp
cmp
mov
loop
inc
decb
movsl
aad
xchg
rcrb
fisubrl
mov
jp
mov
mov
sahf
jmp
movsb
movsl
mov
loope
cmpsb
cmpsl
inc
test
test
cmp
lods
outsb
lods
je
push
scas
jb
push
xchg
mov
mov
mov
mov
push
jecxz
cmp
mov
fcmovbe
int3
mov
pop
pop
cs
xchg
pop
mov
sbb
gs
jb
repz
outsl
arpl
jae
cmp
inc
push
gs
sahf
into
insl
imul
popa
shll
aad
jmp
outsl
fsubs
cmpsb
mov
jae
sbb
pusha
ret
inc
or
in
or
mov
dec
xor
fidivrs
fcompl
mov
rol
ret
jb
in
loope
outsl
lds
gs
and
jbe
enter
adc
adcl
push
or
lret
add
in
push
mov
mulb
imul
sbbl
jl
jle
jecxz
push
into
scas
xchg
adc
ljmp
cli
push
clc
insl
dec
jle
push
outsb
lret
cs
popa
testb
addb
ret
arpl
testb
cmp
in
gs
popa
out
jae
gs
mov
jecxz
test
mov
pusha
mov
roll
inc
imul
fsub
jne
jns
add
sbb
inc
jmp
or
mov
leave
push
mov
push
inc
mov
push
cmp
jge
push
cmp
lods
aad
mov
push
fs
jae
mov
mov
mov
mov
push
mov
push
or
push
shrl
call
cmp
pop
sahf
ret
mov
dec
es
int3
aaa
adc
jns
enter
arpl
or
adc
inc
or
mov
xchg
test
push
pop
push
aam
or
sbb
aam
aad
add
lea
xlat
fcomp
leave
gs
sub
pop
test
movsl
mov
mov
jl
inc
adc
push
or
icebp
dec
repnz
pop
sbb
repz
cmc
adc
pop
xor
mov
jne
mov
push
mov
and
or
push
sarl
adc
ret
cs
bt
clc
clc
push
clc
stc
inc
push
dec
cmp
cli
adc
mov
pop
addr16
popa
add
push
jecxz
or
lret
cmpl
cmp
jg
int
mov
test
scas
lcall
xchg
icebp
push
push
cmp
mov
xor
inc
loop
jecxz
mov
roll
add
sbb
mov
cmp
jns
push
inc
in
mov
jmp
cltd
pop
cmp
insb
ds
pop
mov
incl
scas
movsb
sbb
and
aaa
pop
or
mov
add
pop
push
add
jl
sbb
jbe
mov
add
movsb
sub
roll
mov
ds
mov
sti
mov
sbb
addr16
je
mov
ds
pop
push
addr16
shlb
jno
mov
psubd
pusha
mov
je
cmp
add
push
sub
enter
fdivs
imul
and
add
adc
iret
cmp
add
pusha
flds
add
xor
mov
add
shr
cmp
jbe
xor
test
jbe
lea
adcb
sbb
adc
jno
orb
add
add
inc
cmp
push
sub
pop
popa
jmp
shl
sbb
mov
jnp
sub
push
cmc
nop
sti
push
lea
pop
sub
and
fcoms
fs
pop
push
push
int3
aam
in
sar
add
out
aam
sub
fldenv
ret
add
cmp
inc
pop
cmpsb
lds
mov
mov
mov
push
jmp
sub
add
push
jecxz
xchg
push
sub
add
lcall
hlt
xchg
cmp
pop
inc
jmp
outsb
outsb
inc
pop
je
cmp
pop
push
mov
push
pop
cld
aaa
jne
pop
out
lds
ss
push
sbb
cmp
pop
popa
pusha
xchg
mov
push
incb
add
cld
sub
movl
cmp
push
cmp
dec
hlt
cmp
cmp
cmp
ja,pt
cmp
sbb
jl
sbb
sbb
gs
jbe
cltd
mov
inc
inc
pushf
bound
push
les
dec
rolb
iret
repz
js
insb
outsl
jb
and
repz
push
push
dec
int3
dec
cmp
push
popa
movsb
out
fdivl
adc
ret
in
xchg
jo
popa
pusha
cmp
imul
xchg
mov
mov
jo
sbb
xor
xor
xor
or
cmp
outsl
lods
and
push
jnp
and
dec
and
testb
and
xor
push
sub
repz
inc
pushf
fisttpll
push
popl
xor
cmp
arpl
xor
xor
cmpsb
jecxz
xor
in
inc
in
inc
out
inc
out
push
and
ss
es
add
fisubs
dec
push
pop
in
pop
xor
out
mov
push
or
arpl
outsl
or
insb
cmpsl
mov
sub
pfrcpit1
push
adc
pushf
jns
adc
adc
data16
outsl
adc
pushf
cs
daa
push
pop
int3
les
jae
sbb
loope
add
push
jns
aad
gs
sbb
out
xor
enter
int3
dec
in
icebp
test
xor
mov
mov
push
xchg
jb
outsl
xchg
arpl
xchg
jae
jae
xor
xor
loope
gs
pushf
jp
or
popf
call
cmc
inc
movsb
inc
dec
dec
enter
clc
cmp
in
nop
push
mov
cmpsb
sub
push
jno
ret
pop
inc
popa
bound
ret
cmp
adc
gs
int3
movsb
inc
xchg
push
pushw
js
mov
mov
fnstenv
loope
cmp
xor
xor
cs
mov
or
or
fidivs
push
lods
rorb
cmp
ret
outsb
les
push
xchg
xchg
outsl
arpl
gs
jae
add
and
lret
arpl
clc
cmp
jo
les
icebp
icebp
icebp
icebp
imul
icebp
popa
insb
push
jne
jl
divb
inc
cmc
pop
inc
js
into
repz
hlt
dec
dec
push
push
daa
ds
dec
ja
pop
sub
xor
push
xor
push
push
sbb
mov
bound
pop
icebp
mov
xchg
mov
jecxz
push
lock
lods
mov
divps
and
nop
mov
xchg
mov
ljmp
cld
cld
je
ds
and
sbb
adc
pop
pop
xor
shlb
push
hlt
push
push
jne
loope
pop
ss
orl
xchg
jmp
or
dec
lock
outsl
movsb
and
mov
push
push
or
test
jmp
das
test
test
ret
sub
pop
mov
or
xor
sar
push
xchg
mov
sub
xchg
jp
add
add
filds
jne
xor
adc
mov
xchg
jle
jl
orl
push
sti
and
jae
pop
aas
enter
je
pop
fwait
sbb
ret
cli
mov
or
cli
push
mov
pop
jp
xchg
hlt
hlt
in
ljmp
mov
xor
inc
imul
fiaddl
es
les
and
mov
imul
push
scas
xchg
mov
cmp
sbb
stos
push
lea
xor
mov
adc
add
push
xchg
hlt
popa
ja
mov
imul
mov
jne
aam
push
dec
cmpsl
add
fsubl
add
mov
popf
pushf
nop
lock
pushf
pop
int
shl
lret
bsr
outsb
inc
pop
mov
in
mull
cmp
je
cmp
jb
dec
dec
cmpw
jne
add
jb
dec
jg
pop
jne
or
lret
xchg
popf
bound
je
push
or
mov
xchg
cmp
sub
push
daa
push
mov
cmp
cmp
enter
or
fsubrl
andb
bound
pop
cmp
imul
idiv
mov
popa
pop
je
pop
push
push
xchg
xor
xchg
in
ror
fnstenv
xlat
or
mov
lea
mov
iret
repz
div
sbb
adc
repz
inc
gs
mov
cmp
outsl
fidivrs
out
jb
jne
mov
arpl
dec
subl
mov
xchg
daa
cwtl
sar
arpl
dec
and
je
fstl
mov
jecxz
jno
jno
fadd
cmp
jge
ret
xchg
mov
into
dec
mov
mov
shll
jl
mov
insb
test
notb
inc
sbb
inc
dec
stos
test
or
into
icebp
dec
pop
xor
popf
dec
dec
mov
test
popf
sub
shll
push
loop
pop
pop
sub
test
sub
cmpsl
push
cmp
in
stc
sbb
mov
xor
or
and
xor
adc
sar
adcl
dec
cld
lock
mov
mov
sti
dec
xchg
les
push
mov
or
push
xchg
or
fldenv
pop
cltd
xor
shrl
pop
jecxz
or
xor
mov
cmpsb
jg
jo
mov
cld
sub
adc
clc
sbb
lods
and
fmul
push
pop
aam
movl
or
and
adc
cmp
in
in
out
out
call
push
jmp
mov
int
cmp
jne
je
js
or
jns
dec
mov
icebp
inc
mov
loopne
jne
movsb
dec
mov
or
leave
add
add
ljmp
adc
imul
sbb
add
sti
push
mov
push
add
push
jmp
ret
dec
adc
mov
stc
daa
rcrb
add
je
inc
jbe
shlb
adc
and
jl
inc
fs
std
std
mov
pop
adc
add
je
repz
mov
add
add
ja
inc
jl
loopne
je
int3
adc
orb
xor
hlt
inc
push
loop
push
cmc
dec
divb
inc
cmp
dec
clc
dec
push
mov
ss
mov
ljmp
test
mov
iret
repz
outsb
gs
jb
iret
repz
je
inc
imul
adc
rcl
into
and
dec
ret
loope
pushf
xlat
outsb
fcoms
mov
jns
push
xchg
sbb
xchg
sbb
out
xchg
xchg
xchg
cwtl
push
cltd
gs
out
cmp
popf
sahf
inc
sahf
out
lahf
mov
xor
movsb
js
cmpsb
sete
mov
cmp
mov
jmp
adc
gs
sbb
in
jno
jne
gs
ret
repnz
jno
mov
jbe
push
lds
repz
arpl
outsb
outsb
xor
sub
xsha1
cmpsb
int3
mov
pop
cmp
das
add
popf
xchg
and
mov
cmp
aas
ds
cmp
aas
lds
stc
inc
jno
cmpsl
push
js
insb
cmp
sub
sub
enter
cmp
in
push
add
insb
addb
shll
lds
push
icebp
push
add
dec
xor
int3
jbe
rcll
push
popa
pop
cpuid
imul
xor
hlt
andl
add
add
dec
lea
push
xor
dec
loopne
inc
jbe
jo
aam
mov
stc
sbb
add
scas
mov
mov
shlb
repnz
sahf
adc
add
xor
shrb
dec
test
sub
ja
clc
xchg
cmp
or
imul
mov
idiv
jle
pop
mov
pop
or
and
out
xor
push
mov
jge
inc
cmp
mov
xlat
and
inc
sub
shl
add
popf
mov
clc
ss
pop
mov
or
push
in
or
xchg
icebp
inc
mov
add
je
mov
mov
in
push
or
inc
inc
ficoml
out
xchg
pop
rolb
jae
mov
cmpsl
mov
push
xor
inc
or
aam
js
pusha
loopne
fs
add
fbstp
popa
sub
add
sbb
push
popa
rcl
adc
inc
cmp
lcall
mov
pop
ss
orl
mov
test
iret
cli
push
push
sahf
mov
icebp
push
jbe
inc
pop
push
dec
xlat
es
in
loope
jl
mov
push
jp
jne
mov
pop
push
mov
add
and
repz
inc
jb
insl
hlt
sub
cmp
rcrl
test
jg
sbb
test
push
iret
repz
dec
push
imul
outsl
ja
insb
popa
imul
mov
xchg
ss
jecxz
in
in
cmp
push
pop
inc
jb
sbb
jmp
pop
daa
sbb
cmp
repz
outsl
outsb
xor
loop
fdivp
jb
insl
fnsave
pushf
cli
fimuls
push
xchg
loope
pop
nop
pop
xchg
push
xchg
push
aad
cmp
inc
xchg
jb
popa
xchg
insl
sahf
out
aaa
push
outsb
fs
out
pop
pop
xor
xor
mov
mov
mov
paddusw
scas
and
mov
mov
ret
inc
outsl
iret
iret
repz
jb
idivl
fs
imul
int
into
mov
dec
jne
aam
xor
filds
gs
jne
addb
daa
pop
sti
les
and
into
addr16
adc
pop
fcomp
mov
sub
ljmp
dec
jno
loopne
pop
jno
mov
push
dec
dec
jno
dec
xor
xchg
mov
ja
in
shll
fmuls
sub
out
test
pop
or
int
ret
clc
adc
xchg
test
xchg
sbb
sub
push
dec
push
shl
lods
fiaddl
cmp
push
aaa
bound
fdivs
shll
or
lcall
jbe
movsbl
mov
cwtl
pop
in
inc
cmp
fmull
insb
das
mov
pop
and
decl
cld
testb
cmp
push
add
and
jmp
mov
mov
arpl
xor
dec
dec
popf
mov
sub
xor
les
add
cs
and
mov
fs
mov
pusha
push
jbe
xchg
nop
push
push
out
insl
or
push
nop
iret
ljmp
jns
insl
mov
loope
cmp
aas
mov
je
icebp
aaa
mov
jp
sbb
call
jns
arpl
jne
xchg
jmp
xor
xchg
mov
ficompl
scas
ss
xchg
pop
push
push
sbb
mov
push
rcrl
gs
inc
jp
mov
xor
mov
inc
mov
test
mov
fstpt
pop
lret
cmp
jo
sbb
dec
cmc
jo
imull
sahf
std
jb
arpl
dec
paddd
cmp
gs
push
xchg
loope
insl
in
in
out
dec
cs
and
mov
dec
sahf
ret
lock
fcomps
add
mov
je
jae
lcall
aam
es
xchg
aad
push
xlat
fsubrs
leave
mov
pop
sub
cmc
fisttpll
push
addr16
xchg
and
pushf
pop
test
inc
xchg
cmp
push
push
into
xor
add
arpl
or
or
sub
leave
pop
mov
popa
jl
or
roll
jle
xor
jg
inc
cmp
jb
addb
addr16
or
mov
add
xchg
pushf
jo
adc
lea
lods
andl
fld
xor
mov
test
jne
call
push
jnp
push
call
xor
mov
loopne
add
or
loopne
lea
xchg
pop
sbb
mov
jns
lods
pop
sub
ret
bound
cmp
jbe
loop
das
sbb
or
movsb
andl
ret
cmp
xor
cmp
imul
das
insl
popa
jne
push
add
or
js
es
insb
addr16
test
les
jge
cmp
pop
insb
and
fmuls
pusha
mov
push
xorb
addr16
adc
cmp
and
add
jmp
mov
loopne
push
pop
jno
test
mov
into
mov
sub
andb
push
xchg
aaa
push
shlb
out
js
pop
pop
test
add
xor
pop
loope
leave
lcall
push
or
jp
dec
or
pop
jbe
cmp
ja
lea
sub
inc
cmpsl
fsts
add
bound
fists
push
adc
call
jl
sbb
or
or
subb
mov
adc
nop
mov
xor
or
sbb
adc
test
test
push
pop
fnstcw
pop
loope
push
xor
jmp
sbb
js
shll
xchg
push
sbb
jne
cmpsb
or
sbb
add
mov
and
adc
cmpsb
cmp
pop
pusha
mov
mov
adc
cmp
jbe
mov
and
mov
add
sub
add
popa
mov
loope
mov
repnz
dec
rcrb
mov
inc
xchg
sbb
insb
xor
add
sbb
push
inc
add
or
test
adc
lods
push
insb
mov
movsb
out
inc
test
dec
into
fildl
fsubrl
push
sarb
cmp
or
xor
cmpsl
repnz
sub
cmc
add
xor
arpl
and
push
adc
xor
imul
cs
cmpsl
adc
orb
and
into
push
and
inc
jmp
ljmp
dec
sbb
xor
or
rolb
jge
inc
inc
xchg
push
push
fsubl
adc
inc
or
add
add
sub
jne
cmp
add
xchg
fdivrp
cmp
cld
lret
sub
jp
lret
dec
inc
sub
neg
push
ret
fdivr
mov
xchg
in
int3
mov
push
push
jo
or
push
add
push
pusha
sub
and
fistpll
rorb
icebp
andl
movsb
mov
adc
cmp
js
dec
add
daa
shrb
loopne
pop
inc
cmp
jl
push
jo
arpl
mov
incb
stos
push
or
sbb
mov
clc
dec
roll
or
mov
cmp
mov
inc
and
and
xchg
lret
mov
je
pop
ret
insl
subl
notb
pop
ret
orb
inc
add
pop
pop
mov
inc
mov
mov
nop
mov
or
mov
addr16
rep
pop
mov
ret
inc
cmp
inc
or
jl
mov
dec
pop
mov
xor
push
xchg
js
bound
fldt
and
push
loopne
sahf
hlt
inc
test
push
and
sub
cmpsl
mov
push
jb
xor
gs
adc
movsb
fisubl
xchg
or
push
in
imul
adc
sub
jl
sub
lea
push
push
int3
pop
push
pop
mov
scas
movsl
in
push
dec
inc
xor
lods
mov
ret
sub
mov
in
jbe
push
jmp
shrb
add
push
push
add
enter
dec
enter
pop
in
aas
cmpsb
sub
dec
xor
add
adc
mov
xor
mov
sbb
movsl
mov
ret
and
jmp
adc
add
iret
push
inc
push
or
adcb
je
mov
push
xor
xchg
shrl
xor
cmc
popa
imul
adc
add
jge
add
push
gs
cwtl
imul
sahf
clc
scas
hlt
mov
or
and
mov
xor
jmp
cmp
enter
xchg
gs
push
imul
push
dec
push
imul
insb
popf
and
mov
or
mov
shlb
cmp
in
cmp
sbb
push
push
xchg
loope
hlt
arpl
je
imulw
and
push
clc
outsl
stc
outsb
pop
mov
sbb
mov
pop
push
aaa
sbb
mov
inc
mov
push
mov
jne
xchg
jp
call
mov
ss
in
jb
popa
out
jns
fdivrs
repnz
repz
or
dec
add
push
pop
jmp
xor
jo
stos
push
stos
xor
ds
test
adc
add
sti
jne
cmp
sub
in
push
push
insl
pop
dec
or
nop
pop
movsb
mov
into
inc
xor
lods
test
push
jne
push
xor
in
mov
push
shrl
lock
mov
cmp
call
test
test
ljmp
int
push
inc
xor
fildll
fwait
sbb
mov
rclb
push
in
inc
iret
nop
bnd
popf
movsl
adcl
pop
push
jecxz
adc
fisttps
or
cmp
inc
cwtl
push
push
push
loop
jg
or
arpl
xchg
push
jne
pop
and
adc
fidivs
sarl
mov
or
or
sub
leave
fsubr
sar
out
les
and
jb
jns
out
je
ret
loope
das
lret
outsl
int3
outsl
int
cmp
xchg
push
shll
xchg
loope
xor
xor
push
aad
popa
sahf
jmp
jae
mov
adc
je
je
cmp
arpl
repnz
jae
xor
cmp
leave
in
jae
je
sahf
mul
lock
repnz
sahf
out
cmc
div
clc
xlat
and
dec
dec
jae
je
push
mov
push
dec
dec
push
in
xor
lock
mov
hlt
filds
or
inc
sub
jmp
cwtl
into
lcall
xchg
xchg
mov
or
call
sub
mov
or
fisubrl
and
mov
mov
push
fisubrs
add
outsb
xchg
xchg
sahf
notb
inc
jns
out
fs
jo
xor
xchg
out
cs
sbb
sti
push
xchg
fiadds
clc
fsubl
push
pop
and
repz
outsl
imul
pusha
sub
mov
repz
arpl
jne
push
iret
jecxz
push
imul
mov
mov
jno
sbb
shlb
ret
les
mov
test
cltd
lcall
xchg
lahf
outsl
mov
imul
jo
mov
push
ljmp
lods
push
lods
decb
sti
aas
std
cmp
push
mov
ret
xchg
push
jne
pop
leave
dec
icebp
inc
nop
enter
ljmp
iret
inc
jne
push
inc
xchg
outsb
fcmovne
repz
jb
arpl
push
es
add
pop
fmuls
push
push
xchg
mov
mov
inc
je
sub
add
add
pop
mov
push
nop
sbb
add
push
and
push
test
imulb
sub
jne
test
push
add
push
or
addr16
add
js
test
jne
ret
cmpw
jne
mov
add
push
dec
or
cmp
arpl
fadds
ret
mov
adc
test
test
cmp
je
inc
pop
sbbb
je
adc
pop
xchg
test
ja
mov
in
data16
in
xor
add
dec
add
adc
adc
inc
jmp
cmp
jb
add
add
sbb
add
dec
sbb
inc
in
int
adc
andl
jmp
pop
inc
push
xor
push
mov
add
dec
sub
sub
or
lock
cld
aaa
or
enter
push
in
shll
adc
add
pop
fdivrl
loope
negb
adc
push
fsubrl
ret
imul
daa
adc
push
in
push
sahf
inc
je
jb
rcl
gs
jmp
wrmsr
jo
cmpsl
xor
lock
rorb
aaa
adc
cmp
je
jo
aad
cli
push
test
pushf
sbb
inc
cmp
aam
je
cwtl
mov
push
sub
mov
out
sahf
jns
outsb
data16
fbld
outsb
scas
stc
sub
ja
mov
and
aad
jns
repnz
gs
dec
pusha
shlb
mov
mov
gs
fbstp
outsb
sbb
jecxz
cmp
jae
movsl
dec
movaps
cmpsb
popa
cmpsl
outsb
test
adc
mov
adc
adc
jae
inc
cmp
mov
into
mov
cwtl
push
xchg
aam
ret
and
mov
shrb
xor
ficoml
popf
sub
and
push
push
sahf
test
in
shlb
orl
xor
enter
adc
test
or
ret
jnp
pop
pop
ret
xchg
xor
mov
cs
inc
xor
rorb
add
or
dec
and
je
dec
jmp
daa
jmp
add
out
aad
je
mov
mov
test
je
mov
inc
dec
sub
add
hlt
andb
pop
or
push
or
ja
into
je
test
cmp
test
sub
rolb
add
mov
mov
push
inc
add
cmpb
je
loop
adc
jmp
fsts
push
cmp
push
sub
jmp
pop
cmpsl
mov
jl
dec
cmp
enter
lea
clc
mov
clc
andl
pop
enter
adc
mov
cmp
insb
mov
add
mov
pop
jb
xor
xor
add
add
je
adc
insl
cmp
inc
jmp
push
mov
mov
inc
inc
test
jne
pop
cmp
pop
xchg
rcrl
add
stos
loope
push
nop
imul
xchg
jo
sbb
in
out
out
call
jecxz
xchg
jae
repz
cmp
imul
add
sti
mov
sbb
jmp
dec
cmp
fsubs
pop
push
sub
rol
sbb
rcrl
pop
xchg
and
adc
mov
in
push
push
pop
dec
push
push
jns
push
xchg
hlt
insl
cmc
inc
imulb
jb
loope
cmp
gs
arpl
je
outsl
cld
jb
and
inc
cwtl
inc
dec
insl
or
test
mov
inc
pop
lods
mov
fmull
or
shlb
fwait
mov
lcall
loopne
mov
mov
stos
add
sbb
jp
sbb
test
add
adc
sarl
ret
mov
jb
inc
and
ss
add
cmp
jbe
mov
lret
mov
add
push
push
mov
test
mov
jmp
rolb
inc
sbb
jmp
add
inc
or
add
movzwl
add
orl
clc
add
cmp
jae
cmp
jb
or
rol
addr16
rol
or
sub
mov
repnz
xchg
sub
xchg
fiaddl
icebp
aam
icebp
sbbb
andb
notl
les
xor
xor
add
lahf
xor
or
push
inc
dec
inc
lds
mov
inc
or
mov
lret
out
icebp
inc
mov
ret
pusha
or
xor
loop
fs
dec
jns
sub
push
je
test
mov
in
call
in
add
and
cmp
pop
add
pusha
popa
and
les
test
jmp
xchg
or
inc
push
cmp
push
jns
xor
push
push
mov
xor
jp
mov
in
inc
decl
jne
dec
fistpll
or
hlt
popf
sar
push
das
jns
test
in
sbb
adc
clc
mov
imul
pop
ljmp
rolb
add
mov
add
lcall
dec
adc
adc
popa
and
imul
pop
subb
imul
push
shl
loop
imul
push
add
clc
push
repnz
or
dec
clc
lcall
adc
or
jmp
mov
mov
sub
fbstp
in
push
mov
mov
cmp
das
sbb
lock
mov
cmp
or
mov
or
je
hlt
lcall
xchg
sub
movsb
in
xchg
enter
das
push
sub
pusha
add
mov
inc
and
sbb
or
shrb
gs
xchg
mov
add
clc
stc
mov
cmp
and
jl
clc
mov
ja
jae
mov
out
or
sub
add
or
test
loopne
scas
xchg
das
or
push
push
repz
fwait
inc
bound
xor
iret
addr16
imul
imul
adc
lods
ds
mov
pushfw
push
hlt
jae
mov
loope
arpl
pop
jae
repz
fs
xor
test
sbb
addb
es
jb
pop
shlb
push
in
jne
mov
push
out
mov
add
or
jne
sub
lret
push
jmp
add
or
mov
std
int3
jl
dec
movsb
rep
mov
out
pop
mov
mov
push
out
in
outsl
ret
adc
mov
test
cmp
mov
daa
mov
test
adc
fisubrl
cmp
shlb
mov
mov
aad
sbb
std
iret
repz
inc
insb
insb
inc
jecxz
repnz
arpl
inc
adc
pop
jmp
popa
je
pop
pop
ss
lea
test
cmpsb
jbe
lods
add
popf
stos
stos
adc
cs
movsl
lea
sub
rcrl
data16
cltd
pop
idiv
add
cmp
add
clc
cwtl
mov
dec
lds
fdivrl
and
sbb
in
loop
orl
les
push
cmp
sub
xor
jge
aad
popf
xchg
inc
xlat
push
jne
adc
push
sahf
mov
in
out
call
xor
je
push
int
xchg
lods
dec
push
cmp
out
jns
inc
icebp
imul
jge
push
push
adc
out
aas
jbe
fimull
out
jns
js
dec
jmp
push
in
lods
aam
mov
aad
xchg
insl
shll
das
in
dec
xrelease
xorl
enter
dec
and
jns
je
cmp
gs
mov
jl
jge
pushf
cmc
jmp
scas
or
jnp
leave
xor
ret
ror
sbb
xor
lahf
lret
cmp
push
cmc
cmp
lahf
push
mov
cmp
jb
out
xchg
insl
insb
add
mov
jmp
xor
rol
fdiv
sub
dec
icebp
jnp
insb
sub
sahf
push
jl
dec
jne
push
movl
or
mov
adc
lret
jb
add
pop
fidivl
xchg
add
mov
mov
loopne
jae
push
sub
js
pop
mov
gs
movsb
add
push
cmp
lret
dec
push
sbb
mov
sbb
inc
or
mov
movsbl
jno
jb
or
mov
ljmp
pushl
add
dec
inc
shrl
cwtl
mov
pop
mov
out
and
test
lret
adc
cmp
sbb
sbb
movsbl
add
fisubl
subb
jb
jo
sbb
jo
je,pn
cmp
mov
add
push
mov
push
int3
or
jge
insb
mov
add
jo
push
sbb
lock
mov
rorb
cwtl
mov
cmp
inc
dec
lret
xchg
inc
fisttpl
and
inc
cmp
xchg
jmp
jmp
mov
fiadds
add
ds
rcrb
or
push
call
sbb
or
jne
add
sub
mov
cmp
hlt
mov
mov
orl
mov
add
mov
ja
nop
in
xchg
or
rclb
cmp
push
xchg
lods
hlt
push
push
mov
lods
clc
push
sub
lods
push
push
mov
jg
adc
mov
mov
movsb
data16
and
lahf
enter
xor
jne
adc
sub
test
mov
mov
data16
cwtl
mov
data16
rol
and
mov
cmpsb
es
rol
shrb
adc
jge
xlat
nop
lds
mov
sub
cltd
mov
push
lods
cwtl
adc
mov
adc
pop
testb
mov
les
jmp
cmp
add
mov
mov
mov
mov
mov
add
jne
xor
xor
adc
or
aas
aam
fists
and
mov
icebp
push
int3
push
in
div
ljmp
cmp
enter
cmp
aam
es
lahf
pop
cmpsb
cli
movsl
aas
in
divb
and
int
ljmp
add
andb
popf
pop
lock
shl
cmp
roll
push
and
push
push
xchg
xor
or
fwait
pusha
push
incb
test
xchg
imul
ja
pop
stc
sub
insb
pusha
rorl
push
or
or
adc
adc
shlb
pop
fcoml
pusha
dec
je
mov
mov
inc
jp
push
mov
cli
das
push
inc
ss
aad
pop
add
push
push
lret
jg
loopne
ret
jb
and
repz
cs
sub
call
hlt
dec
or
movsb
cmp
jae
xchg
xor
xor
arpl
insb
ljmp
outsl
lahf
inc
xchg
out
imul
push
fistl
push
es
test
sbb
push
cmpb
mov
push
jge
lock
xor
hlt
je
jae
shrl
add
outsb
pop
in
ficoml
clc
daa
push
les
sti
push
ljmp
cmp
loop
push
push
imul
jne
cmp
or
fstp
call
push
push
mov
hlt
sbb
cmp
cmpb
shlb
and
pop
jno
jo
sti
push
shrl
cmp
push
sbb
jbe
cmp
mov
nop
dec
push
sbb
and
inc
sub
pop
dec
mov
jno
lea
sub
daa
fs
jbe
jbe
push
jnp
pop
pop
lea
sbb
push
idivl
mov
addr16
cmp
pop
jo
pop
lock
cmp
ret
sbb
dec
mov
fsub
jo
push
inc
push
enter
jecxz
inc
push
pop
push
or
ss
or
pop
pusha
and
inc
loope
push
mov
rcrl
push
xlat
sub
mov
roll
cmp
add
ret
jns
add
rorl
add
jb
ja
mov
ret
sbb
and
sbb
pop
fdivs
jne
jne
xchg
loope
jbe
jbe
jbe
jbe
jne
push
xchg
clc
jbe
jbe
jbe
jbe
loope
cmp
ja
jbe
jbe
jbe
jbe
sbb
xchg
sbb
ja
ja
inc
jo
push
ja
ja
sarb
cmp
xlat
mov
jne
jne
jno
mov
js
cmp
pop
jne
jne
jne
jne
jne
imul
ret
stc
dec
jne
jne
jne
cmp
je
ljmp
ror
mov
jns
mov
out
sahf
out
pop
push
dec
inc
mov
sub
ret
loope
inc
js
js
ja
ja
cmp
mov
ja
ja
js
ffreep
loope
js
iret
popa
loope
orb
ja
repz
adc
pop
add
inc
pop
inc
pop
push
and
loope
ja
jae
insl
out
cltd
sub
push
mov
dec
dec
add
insb
outsl
jae
movl
gs
insb
add
pop
sarb
imul
outsl
jo
ja
dec
add
xchg
add
jae
outsl
dec
sub
insb
add
pop
add
add
pop
gs
gs
push
mov
jb
mov
sarb
data16
jns
dec
leave
bound
mov
push
les
gs
sub
add
push
sub
enter
imul
lds
cmp
out
jecxz
jb
sbb
cs
leave
rcrl
xchg
inc
xchg
dec
add
dec
imul
or
add
outsb
cmp
cmp
mov
mov
js
cmp
rorb
and
jo
shrl
sbb
loope
pop
jbe
inc
sbb
add
lcall
fs
jno
cmp
xchg
ret
into
stos
sub
push
push
cs
xor
xor
inc
dec
xor
mov
lds
lahf
repnz
dec
bound
arpl
dec
push
sahf
and
cmpsb
fwait
sub
adc
inc
sarl
test
imul
mov
pop
sub
imul
cmp
push
mov
nop
xchg
mov
dec
or
lock
sub
or
add
inc
add
fs
xor
xor
cmp
jne
cmp
mov
or
gs
lock
add
add
aam
xchg
imul
imul
outsb
addr16
jne
mov
fimull
fs
xchg
scas
and
into
inc
enter
sbb
push
pop
out
xor
add
or
jle
push
imul
outsl
dec
add
ss
jns
mov
inc
push
fs
push
imul
mov
push
cld
adc
dec
push
outsl
mov
inc
enter
jo
mov
lcall
jne
mov
inc
loope
mov
insb
fidivl
xor
dec
inc
dec
imulb
cmpsl
arpl
mov
mov
fimuls
and
ret
push
jnp
faddl
jbe
and
fidivs
bound
lret
xor
add
call
or
pop
sbb
movsl
and
adc
inc
mov
cmc
lahf
jle
pop
inc
jge
scas
add
push
add
scas
push
ret
mov
cmp
mov
lret
jne
gs
addb
xchg
pusha
aam
xchg
jp
pmaxub
xor
jb
ret
mov
ret
ljmp
pop
out
out
into
in
add
xlat
fcmovnu
mov
add
out
cmpl
add
sub
push
xchg
into
in
push
fwait
sub
cmpsl
mov
cmp
mov
incl
adc
mov
xlat
into
iret
imul
hlt
xor
fstp
stc
mov
fucom
arpl
pop
push
push
insl
insl
sub
imul
clc
nop
cmp
imul
std
ret
mov
negb
mov
daa
jle
jae
jo
mov
cmp
std
loope
in
sub
jno
jmp
imul
mov
lahf
jp
mov
mov
dec
ljmp
popf
dec
repz
mov
repz
adc
pusha
mov
push
addr16
ffreep
into
cmpsl
inc
int
jb
fldcw
stc
mov
imul
imul
js
mov
mov
addl
mov
movb
cmp
insb
idiv
jnp
pop
jmp
mov
sub
in
dec
mov
xchg
mov
push
icebp
jno
xchg
outsl
dec
or
sub
sbb
cmp
mov
jae
sti
mov
add
push
emms
testl
dec
mov
mov
mov
fstps
fnstenv
cmp
fld
insl
add
inc
lahf
sti
out
enter
push
push
mov
add
mov
popf
cmp
int
rorl
addr16
cmp
popa
add
or
pop
lret
mov
push
notl
mov
jg
std
push
les
rolb
push
scas
mov
dec
fldt
mov
ljmp
nop
and
ja
jge
xor
sahf
lock
xchg
sub
outsb
shl
outsl
pop
fscale
pop
imul
into
sti
in
mov
xor
mov
frstpm(287
mov
repz
cmp
mov
inc
jl
or
sbb
xor
dec
divb
popa
leave
inc
jecxz
jecxz
negb
mov
fldt
xchg
leave
mov
loope
xchg
jns
jmp
sti
pushl
sub
fstpt
xor
pop
out
cmp
jge
roll
fdivrs
pop
mov
lds
pop
add
cld
decb
sbb
add
mov
cmp
jmp
iret
fwait
aad
pop
scas
and
rolb
push
movsl
jbe
into
testb
in
add
dec
cmp
cmp
or
xor
imul
xchg
inc
sti
inc
pushl
push
js
and
sub
sub
fistps
das
sub
inc
sub
add
aad
and
push
inc
rcll
jno
xchg
pop
mul
mov
ss
mov
int3
mov
fistps
sbb
cmp
std
xchg
lea
das
rol
fildll
dec
cmpsb
addps
pop
jl
out
fistl
shll
push
ljmp
mov
or
mov
sbb
mov
cld
jnp
cmp
xor
inc
mov
adc
mov
shll
mov
sbb
mov
pop
clc
imul
fldln2
xchg
jl
push
add
xor
add
addb
add
leave
sar
cmp
mov
sarl
adc
lcall
mov
subl
inc
jecxz
lcall
das
js
mov
imul
pop
arpl
cmp
outsl
data16
add
scas
xor
pop
or
adc
add
enter
outsl
pop
cmp
pushf
scas
add
and
inc
mov
cs
shll
mov
pop
das
sub
negl
xor
nop
icebp
cmp
outsb
xor
out
or
jae
jne
fs
inc
inc
dec
rcr
adc
insb
mov
push
pushl
mov
xor
mov
push
inc
inc
outsl
insl
jo
arpl
or
push
or
pop
dec
je
inc
outsl
add
dec
mov
or
fs
or
push
sub
je
mov
fsubs
jp
popa
das
xor
xor
arpl
mov
clc
push
addr16
and
les
insb
adc
xor
dec
xchg
icebp
sbb
jne
imul
imul
mov
daa
pusha
cmpsb
rcrb
cmp
arpl
jbe
in
inc
popa
insl
jae
insb
cs
popf
iret
ja
jb
adc
xlat
jo
sarb
adc
push
fisubl
das
xor
lea
push
push
outsl
xor
mov
dec
lods
push
jns
rolb
int3
or
jmp
lcall
adc
inc
jbe
add
daa
add
add
add
add
hlt
pop
rorb
add
inc
or
or
add
lret
add
pop
orb
add
fwait
test
and
xchg
push
add
pop
push
sub
adc
dec
push
syscall
cmp
cmp
xchg
rol
jg
add
push
scas
gs
lret
jg
sub
adc
cmp
sub
sbb
ja
push
lret
push
sbb
pushf
negb
fwait
pop
adc
pop
pop
outsb
add
shll
xor
jl
or
add
test
push
loop
add
bound
dec
inc
add
ret
mov
sbb
divl
adc
insl
mov
sub
repz
xor
pop
in
sub
mov
mov
imul
mov
rcrl
xchg
lds
lret
data16
cs
pop
cs
sub
push
inc
add
xor
pop
sub
ret
in
add
add
sbb
lods
pop
int3
dec
sub
dec
add
leave
js
sbb
cmp
nop
ffreep
cmp
xchg
movsb
pop
cmp
insl
adc
inc
sbbb
adc
sub
mov
gs
sbb
pushf
fnstenv
or
dec
adc
imul
mov
or
push
repnz
movsb
xor
and
jmp
mov
into
fwait
jno
inc
rol
adc
xor
dec
jne
or
xchg
loop
sbb
insl
es
data16
lds
das
sub
mov
and
pop
jo
push
cltd
sub
repnz
insl
mov
mov
pop
fucomp
sbb
mov
inc
mov
add
sahf
lods
inc
xor
ds
insl
add
xor
ja
imul
frstor
test
je
pop
or
mov
mov
xchg
adc
pop
pop
xchg
das
mov
jns
dec
inc
adc
lcall
es
push
pop
mov
sbb
pop
sub
leave
mov
es
xor
pop
outsb
sbb
or
roll
negb
lds
and
pop
xor
sbb
pop
or
mov
dec
fdiv
gs
iret
int
sbb
mov
jb
cmp
js
fisttps
pop
cld
aaa
pop
and
or
iret
or
repz
fs
jl
lret
pusha
fs
sbb
sub
or
add
movl
sub
ljmp
pcmpeqb
add
adc
ret
jo
aam
or
adc
adc
add
pop
mov
lret
add
add
int3
js
add
add
add
add
add
add
add
push
add
add
add
add
inc
add
dec
add
mov
add
cltd
dec
add
inc
popa
outsb
arpl
inc
insb
insb
add
fs
insb
insb
add
add
push
add
push
add
add
add
add
add
add
add
xchg
add
add
add
mov
push
add
push
add
decl
push
add
add
add
add
jmp
push
add
add
add
add
jl
push
add
add
decl
add
mov
push
add
jmp
push
add
jb
gs
xor
cs
insb
add
add
add
dec
outsl
popa
fs
imul
add
add
inc
gs
jb
arpl
fs
jae
add
add
add
push
imul
insb
insb
outsl
arpl
add
add
jb
jne
insb
inc
jb
add
add
push
inc
push
push
cs
insb
add
add
pop
jbe
outsb
jo
imul
add
dec
inc
dec
xor
cs
insb
add
dec
xor
cs
insb
add
add
add
gs
dec
bound
arpl
push
push
inc
push
xor
cs
insb
add
add
push
outsb
push
imul
outsl
outsl
imul
add
movsb
aam
dec
or
xchg
adc
nop
push
xor
dec
je
daa
fcomip
or
add
add
sbb
pusha
mov
mov
cld
lods
xor
test
je
loopne
sbb
xor
lea
movsb
mov
call
cmp
jae
push
or
xor
inc
xor
mov
lea
mov
mov
call
sub
lea
add
mov
call
pop
sub
jae
and
call
mov
call
jne
pop
cmpsb
sub
inc
mov
sub
add
fcos
cmp
sub
add
movsb
pop
inc
inc
jmp
add
jne
xchg
lods
xchg
inc
ret
add
flds
in
call
leave
call
out
jb
ret
sub
sbb
ret
add
sub
sub
adc
inc
js
pusha
add
fs
jae
jp
dec
gs
xor
add
push
pop
mov
movl
sub
push
rolb
and
std
push
sub
pop
add
mov
cld
xchg
jno
or
jne
pushf
jo
push
fdivrl
sarl
cmp
test
sarl
add
popa
or
push
push
push
call
pop
sub
inc
loopne
jo
mov
addl
add
cld
mov
mov
mov
add
lea
or
rol
cmpl
je
mov
test
je
mov
orl
mov
sbb
das
add
mov
lea
inc
jo
cltd
lods
nop
mov
repnz
mov
clc
sub
sbb
xchg
aaa
mov
daa
push
call
cmp
mov
cmpsb
sti
dec
xchg
inc
cltd
mov
lds
push
add
test
je
cmp
sbb
inc
push
jnp
mov
or
scas
cmp
lock
jmp
ror
sub
push
and
jg
lea
cmp
add
or
enter
cmp
sbb
push
fcmovnb
mov
stos
call
push
jmp
xchg
gs
add
xor
jne
or
dec
inc
mov
add
movb
add
mov
or
nop
sahf
adc
jmp
mov
push
call
int3
adc
cmp
inc
or
adc
adc
pop
pop
ret
push
mov
add
les
jmp
adc
outsl
mov
add
push
call
mov
add
jle
or
sti
xor
add
je
push
mov
add
add
or
jne
xor
jmp
add
imul
js
dec
cmp
clc
mov
jmp
cmp
je
add
cmp
repz
sub
mov
lods
mov
add
lods
aas
mov
sub
add
in
movw
cmpw
add
add
sbb
sbb
mov
and
rcll
clc
add
mov
add
dec
lret
aad
lods
shr
mov
add
leave
mov
shlb
sbb
or
add
test
or
push
push
lret
push
mov
call
pop
push
or
sub
cmp
or
popf
xchg
xor
push
jmp
es
fimuls
inc
adc
jne
test
sub
dec
cld
add
and
pop
adc
jge
mov
inc
add
rolb
push
cld
sub
je
dec
mov
jne
mov
ret
or
rclb
adc
add
add
and
enter
or
add
je
cmp
push
cmp
add
or
js
jmp
push
ror
loopne
ret
lahf
and
in
add
jbe
push
push
call
popa
xor
push
cmpsb
shll
inc
pop
mov
pop
fiadds
pop
test
dec
dec
jae
lock
xchg
or
sar
xchg
add
movsl
add
add
push
jnp
cli
ret
xchg
sarl
add
stos
pop
mov
fsub
cmp
lret
ret
jne
inc
sbb
frstor
inc
add
add
lock
push
push
adc
dec
xchg
pop
xor
mov
imulb
adc
enter
inc
pop
in
lods
call
sub
gs
hlt
push
or
dec
loop
je
mov
cmp
shl
adc
je
daa
je
mov
cmp
inc
in
arpl
cmpsb
sub
lret
xorb
jne
jmp
mov
clc
decl
and
shl
sub
pop
enter
out
sbb
pop
or
arpl
jns
movl
and
sbb
cmp
je
add
add
roll
imul
jge
lcall
push
push
push
call
sbb
xchg
add
adc
rcrb
insl
js
js
sbb
mov
scas
leave
data16
inc
inc
mov
adc
call
xchg
fldl
xchg
int3
add
jmp
pop
pop
adc
add
xchg
push
adc
add
mov
imul
inc
push
xchg
mov
pop
mov
and
jmp
mov
mov
sbb
inc
push
inc
xchg
enter
pop
mov
inc
mov
or
mov
or
push
jp
mov
fxch
cmpsb
jmp
xchg
jae
xor
icebp
mov
cmp
imul
xor
add
add
cmp
adc
add
sub
jl
sbb
shr
or
lea
push
add
loopne
insb
sti
push
mov
test
jno
push
add
orb
xor
test
bound
iret
cmpsl
or
push
addr16
or
cmp
xchg
iret
inc
cmp
pop
lea
add
and
call
jg
mov
inc
jo
insb
imul
and
jb
jb
add
sub
arpl
jo
add
and
arpl
jne
and
mov
insb
and
je
bound
add
push
pop
mov
je
dec
dec
push
sub
fs
insb
fs
fsubrs
add
push
mov
jae
xor
dec
gs
popa
addr16
outsl
js
add
pop
fdivs
jno
mov
inc
js
je
stc
es
cmpsl
add
add
outsb
fs
add
outsb
inc
mov
cli
sti
mov
insb
cli
popf
outsl
add
jb
jne
test
je
pop
dec
sbb
sbb
aaa
iret
mov
insl
shll
sahf
out
push
cmp
ret
adc
jp
sub
decb
inc
mov
and
jl
sub
lods
xor
test
je
xor
lea
movsb
mov
call
jae
cmp
jae
push
push
push
xor
inc
xor
mov
lea
mov
mov
call
jae
lea
add
mov
call
jae
pop
pop
pop
sub
jae
mov
call
jmp
mov
call
adc
dec
jne
inc
call
mov
cmp
sbb
cmp
sbb
push
mov
sub
rep
pop
inc
inc
jmp
add
jne
xchg
lods
xchg
add
inc
ret
xor
inc
call
adc
call
jb
ret
sub
mov
popa
ret
in
add
mov
add
add
or
push
add
add
add
pusha
add
add
mov
lea
mov
mov
mov
movb
add
sub
mov
xor
ret
mov
popl
add
push
push
push
push
push
push
lea
mov
push
mov
push
push
pushl
push
mov
add
mov
call
pop
mov
push
push
mov
mov
add
mov
mov
mov
add
mov
mov
add
mov
add
lea
push
push
push
call
pop
pop
add
mov
push
mov
mov
add
sub
mov
mov
mov
call
mov
mov
mov
pop
jmp
add
push
push
push
call
mov
pop
pop
pop
pop
pop
pop
jmp
