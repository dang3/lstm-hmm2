sbb
add
mov
push
pop
xchg
ret
mov
lret
mov
mov
imul
lahf
xchg
xchg
mov
mov
mov
lret
sbb
fldenv
xchg
sub
fdivs
xor
int3
test
pushf
pusha
xor
ret
mov
lret
out
shl
sbb
or
je
js
add
sbbl
mov
mov
pop
mov
sub
push
bound
enter
adcl
sub
arpl
movsl
into
int
ret
jmp
xchg
cmpsl
sub
jmp
mov
leave
fistpll
pop
inc
int
in
mov
inc
xchg
arpl
xchg
outsl
xor
xchg
push
xchg
cmp
push
adc
mov
fs
in
repz
add
mov
xor
ret
jge
int3
pop
test
test
cmpsl
popf
xor
stc
lea
jns
inc
scas
arpl
sbb
xchg
inc
stos
test
lea
ljmp
popf
or
leave
insl
pop
pop
nop
cmp
pusha
cmp
mov
dec
lahf
dec
adc
cmpsb
or
mov
push
mov
jle
fs
inc
dec
mov
or
fists
pop
jle
inc
xor
adc
sub
lds
or
sahf
fistpl
mov
or
out
stc
mov
dec
cmp
lods
lret
out
and
nop
xchg
outsl
movsb
xchg
movsl
stos
pop
jno
and
lods
adc
pop
roll
outsb
xchg
push
pcmpgtd
mov
mov
mov
mov
xchg
arpl
ss
push
aas
je
adc
fidivrs
push
and
mov
mov
cmp
insl
pop
ss
imul
call
add
loope
insb
jle
mov
xlat
jo
sub
jmp
pop
pop
xchg
dec
int3
or
xlat
decb
loop
inc
mov
ja
inc
inc
stc
inc
push
inc
icebp
sub
lods
les
in
push
inc
inc
aas
inc
pop
inc
pop
cltd
iret
cmp
rolb
push
push
xchg
cmp
fisttpl
in
std
inc
jp
std
or
sti
pop
or
jmp
cmp
xor
in
pop
int3
iret
mov
stos
icebp
fbstp
cld
iret
popl
mull
push
in
pop
inc
scas
and
decb
hlt
lahf
mov
dec
adc
dec
xor
cmp
xchg
mov
sbb
or
pop
jg
aam
add
mov
test
das
es
int3
loop
mov
xchg
divb
mov
inc
inc
mov
lock
idiv
cmpsl
fdivs
sbb
adc
dec
cld
bound
cmpsb
jo
or
fsubl
jecxz
sbb
into
xchg
dec
aas
jmp
lods
dec
imul
jmp
jae
stc
outsb
xchg
cmpsb
test
popf
push
and
push
dec
clc
mov
int3
sbb
scas
xchg
xor
jmp
push
pushw
imul
shll
not
inc
jb
dec
test
pop
push
or
subb
popa
xchg
pop
fildl
and
das
jmp
or
sub
xchg
jge
push
xor
gs
sar
jns
sub
icebp
insl
imul
dec
push
xchg
pop
mov
movsb
arpl
push
inc
outsb
or
dec
fs
inc
negb
call
xchg
int
cwtl
idivl
lret
sbb
rcrb
lods
xor
push
xchg
pop
repz
jae
cmp
jg
push
and
push
jno
cmpsb
cmp
mov
fisubrl
leave
inc
out
int3
cltd
cmc
xchg
push
jbe
mov
dec
jae
adc
or
dec
std
sbb
sti
cmpsb
rep
sahf
pusha
sbb
sub
fiaddl
fdivl
xchg
jg
stos
ja
repz
lret
jb
rorl
push
mov
sub
xor
pop
rcr
std
jnp
out
xchg
adc
test
or
adc
insb
mov
int
add
xor
pop
mov
mov
add
into
mov
sbbb
aaa
orl
cmp
mov
xor
outsl
out
xchg
nop
mov
in
je
and
add
ljmp
push
xor
sub
fmul
jge
pop
jecxz
je
stos
jg
jle
sbb
sarl
sub
dec
jns
ds
sahf
jo
aas
shrl
in
and
sbb
or
sti
lret
jo
sub
jne
push
push
je
ljmp
into
push
daa
std
sub
jo
xchg
loop
repz
stos
mov
in
cmp
cmp
lret
sub
fsubr
into
js
xchg
mov
xor
dec
and
sub
xchg
xorl
jo
inc
in
into
sub
rolb
and
adc
ja
dec
adc
bound
in
dec
leave
cmpsb
mov
fistpl
aam
mov
mov
pop
nop
aaa
sti
loop
xlat
mov
fildll
dec
filds
pusha
cli
out
lcall
push
mov
scas
aas
jno
xchg
ret
outsl
jns
cmp
jnp
test
pop
pusha
arpl
push
mov
aam
aaa
xchg
mov
mov
addr16
dec
aad
adcl
inc
cmp
and
sbb
pop
fildl
lods
lods
aam
cs
cmp
ds
adc
jg
lsl
jle
hlt
pusha
in
mov
push
ja
test
mov
enter
leave
xchg
xor
bound
pop
inc
pop
es
roll
or
aad
cli
daa
and
jge
jecxz
mov
les
sbb
aad
mov
add
fcomps
dec
in
call
repnz
es
xchg
add
cmpsl
jg
dec
inc
sub
iret
or
pop
lods
data16
push
push
jo
or
pop
adc
pop
pop
addr16
dec
insl
xor
push
orl
mov
js
jb
insb
mov
test
ffreep
xchg
fistpl
loopne
mov
int
out
add
repz
mov
inc
pushf
pop
sahf
stc
clc
arpl
or
inc
orl
clc
roll
jge
shll
int3
xchg
cmpsl
loope
xchg
adc
xor
mov
sub
lods
xor
mov
push
fistl
mov
andl
jmp
roll
lods
or
xchg
mov
mov
push
notb
mov
fdivrs
cmc
icebp
iret
lods
sub
or
das
repnz
lret
ljmp
fistl
in
xor
clc
sbb
inc
imul
and
and
mov
pop
shl
xchg
gs
jge
xor
xchg
push
icebp
sub
jno
add
lret
dec
repz
mov
or
inc
lods
mov
lea
loopne
mov
xor
dec
out
sub
rclb
xor
insl
lods
lret
leave
lea
cmpsl
mov
sub
outsl
mov
mov
movsl
pop
xchg
or
fiaddl
stos
pop
enter
jo
in
push
hlt
lock
data16
flds
cli
mov
repnz
pop
cmc
arpl
and
lret
ret
aas
pop
fisubrl
dec
push
push
fwait
jecxz
or
stc
xchg
ret
add
enter
in
fistps
int3
movsl
faddl
arpl
dec
aad
mov
punpckldq
test
inc
mov
mov
inc
or
push
std
cltd
inc
add
rcl
jae
pop
adc
ds
insl
cmp
aaa
test
shlb
fidivs
and
xor
adc
sbb
dec
lods
and
sub
iret
xlat
cwtl
fimull
rcll
push
jl
fistl
push
adc
iret
mov
jb
mov
stc
lret
sahf
or
hlt
dec
add
lahf
mov
cmpsb
pusha
xchg
xor
push
jge
push
dec
pop
xchg
fisubrs
cltd
pop
imulb
sbb
xchg
or
idivl
mov
ret
sti
aas
cmpsb
jl
jl
push
push
icebp
sub
fdiv
mov
fdivr
mov
sub
in
hlt
cmp
scas
adc
mov
mov
rcll
inc
inc
lret
out
sub
std
js
shrb
mov
or
jg
and
xlat
das
nop
clc
lcall
push
cmp
jmp
ljmp
daa
stc
ja
xchg
lods
xor
jns
and
insb
lcall
sub
dec
push
int
mov
mov
test
mov
out
and
out
lcall
outsb
mov
or
int3
nop
adc
sar
jmp
sub
add
repz
xchg
sbb
sti
jae
sbb
add
outsl
lods
sbb
movsl
mov
pop
inc
test
sarb
sbb
dec
lahf
inc
lods
sbb
jle
xchg
icebp
stos
arpl
das
pop
js
inc
push
or
ljmp
pushf
dec
xor
aaa
out
and
call
flds
outsl
push
xchg
mov
mov
push
lcall
push
push
pop
adc
and
out
dec
push
sbb
cmp
insb
fstp
divb
aas
in
mov
cmp
imul
daa
jae
jne
add
and
test
aam
sub
adc
push
jl
inc
and
xor
gs
enter
jo
jge
inc
test
fwait
outsb
es
cltd
pop
shlb
outsb
dec
xor
inc
mov
sub
add
push
and
ror
stos
icebp
lods
lcall
mov
and
movsl
inc
push
mov
mov
ljmp
test
push
ja
jb
sar
mov
sbb
in
lds
push
sub
cmp
mov
loope
sbb
imul
sahf
sahf
jne
jmp
shll
xchg
mov
lods
inc
jb
popf
jb
jge
dec
or
inc
add
cmp
xchg
adc
jp
cmpsb
xchg
shrl
sub
arpl
lret
sti
fmul
mov
arpl
mov
xchg
jge
cmpsb
jo
into
and
daa
add
stos
cs
movsb
mov
pop
insb
daa
fidivrl
arpl
dec
and
mov
sub
and
outsl
sets
movsb
stos
out
arpl
adc
es
sub
mov
xchg
aas
sub
cmp
dec
nop
or
jg
inc
sarb
cwtl
add
cld
aaa
sahf
inc
adc
lds
mov
fdivl
mov
out
pop
stos
loope
dec
mov
cltd
mov
xchg
test
addr16
pop
dec
push
inc
lahf
pop
jno
dec
add
cmc
lock
inc
push
jp
cwtl
loop
push
pop
into
enter
sub
jl
outsl
sbb
dec
dec
aad
outsl
hlt
push
pop
pop
dec
push
xchg
sbb
push
out
mov
xor
lea
mov
roll
movsl
push
fneni(8087
sbb
in
cmpsl
push
imul
xchg
push
xchg
mov
test
mov
xchg
movsl
cmp
sbb
xchg
loop
je
jmp
js
pop
in
lods
or
mov
sub
xor
inc
fcmovnbe
in
inc
mov
ret
into
aad
loope
dec
insl
call
cld
cmpb
cld
imul
fsubs
mov
mov
loope
je
pop
dec
test
enter
out
xchg
dec
and
fdiv
mov
lds
ds
add
scas
lret
aam
stos
in
jne
cmp
xchg
mov
scas
nop
sti
xchg
les
in
lea
mov
mov
and
mov
popf
out
add
fiadds
push
pop
sub
xlat
pop
mov
popl
xchg
ja,pn
outsb
and
sbb
pop
xlat
push
cmp
das
jecxz
stos
rorb
out
add
icebp
scas
out
jge
or
push
daa
dec
test
jno
int
scas
mov
push
mov
mov
popf
xor
sub
inc
es
push
pop
mov
les
lds
daa
or
cmc
pop
and
jmp
dec
mov
or
adcl
xor
mov
inc
mov
lea
jg
lods
mov
imulb
mov
adc
outsb
jne
cld
sbb
lret
ja
sub
sbb
mov
pop
push
push
js
dec
lods
loope
sub
jge
push
adc
add
add
pop
mov
lods
daa
call
adc
out
addr16
pop
aad
xchg
pop
sbb
pop
nop
out
or
xlat
sub
sub
mov
lea
kortestb
fnstsw
lock
fnstcw
mov
adc
imul
mov
imul
iret
and
aam
add
fdivp
fnstsw
int
loopne
std
out
lret
xchg
mov
ds
mov
xchg
leave
cmp
ljmp
xchg
push
into
sbb
mov
sahf
repz
int3
aad
hlt
lods
test
jno
push
clc
mov
paddusb
sub
add
xchg
lods
jmp
aad
mov
and
fcoms
sti
icebp
sbb
adc
stos
negb
inc
cmp
subb
sar
mov
mov
xchg
stos
rolb
xchg
in
and
push
mov
or
push
pop
fwait
cmp
push
and
shlb
subb
sbb
adc
inc
fdivs
xor
dec
cwtl
sub
cmpsb
fwait
pop
mov
adc
and
adc
add
test
pop
dec
out
stos
jg
mov
jg
insb
nop
mov
subb
bsr
popl
pop
das
sub
aad
ljmp
cli
adc
arpl
cmpsl
mov
arpl
xchg
out
lods
out
or
lock
neg
call
and
aad
push
cmpsl
out
cmp
call
jmp
xor
mov
adc
cltd
shll
xorb
push
test
push
cmp
ror
mov
sub
stos
push
ja
pop
ret
jae
push
dec
push
mov
add
mov
adc
pop
pop
lods
adc
cwtl
add
decl
mov
out
fs
adc
rorl
jae
pop
imul
adc
and
test
mov
or
mov
xchg
ja
outsb
add
push
or
mov
jae
mov
sbb
pop
call
js
or
pop
rorl
test
sarl
adc
push
cmp
sub
call
or
xchg
cmc
neg
fdivr
leave
movsl
filds
aam
mov
mov
call
or
mov
mov
addl
out
repz
and
insl
pop
sbb
or
xchg
and
cmp
sub
cmp
in
jl
enter
fdecstp
mov
xor
jb
scas
iret
or
sbbb
and
lret
jne
push
outsl
ret
test
shl
dec
mov
test
ds
dec
pusha
cmpsl
testb
popf
mov
fs
fstl
add
mov
mov
leave
cmp
pop
xchg
xchg
daa
bound
imul
dec
outsl
jmp
in
and
fsubl
or
mov
cmpsb
test
dec
fbld
loop
push
pop
punpckhwd
and
sti
push
add
xchg
pushf
movsb
inc
bound
mov
xorl
jbe
xchg
ds
sub
imul
in
clc
mov
rep
fistpl
div
sub
and
roll
xor
out
insb
mov
hlt
dec
in
pop
dec
xchg
ja
sub
mov
jbe
adc
pop
fcom
fistl
push
jns
cwtl
add
imul
push
inc
xchg
lods
xchg
in
inc
xchg
sbb
sub
mov
inc
shrl
scas
mov
cmp
inc
and
mov
add
test
add
test
shrb
pop
lock
xchg
jle
inc
int3
test
int3
pop
dec
int
lret
and
push
pop
inc
xlat
jp
fidivrs
les
mov
xor
mov
xor
xor
popa
in
mov
dec
add
repnz
and
cmp
call
ljmp
xor
mov
xchg
bound
setno
and
adc
mov
jbe
data16
nop
add
mov
pop
in
pusha
out
mov
or
xor
test
test
pop
js
mov
adc
dec
xchg
pop
dec
lcall
popa
push
ret
pop
enter
int
or
arpl
in
pusha
or
jne
pop
daa
mov
lret
push
shl
xor
jmp
pop
sub
cltd
lret
xchg
loope
add
cmpsb
js
push
scas
iret
mov
cmp
loopne
sub
xlat
repz
orb
repnz
fs
and
mov
and
cmp
mov
jmp
andl
fimull
push
icebp
xor
xchg
pop
adc
popa
orb
add
loope
mov
add
int
popf
cmpl
enter
popa
pop
push
mov
sub
push
dec
mov
out
enter
stos
cld
inc
sti
push
cmp
jo
mov
and
loope
sub
scas
imul
mov
push
push
out
mov
hlt
xchg
lea
sbb
dec
xchg
lret
push
mov
imul
in
mov
cmp
dec
rorb
in
cmp
mov
out
int
sub
xor
lods
sbb
pop
or
jge
xchg
fildl
pop
sbb
xlat
or
mov
or
mov
shll
add
sub
stos
jg
in
jl
add
movsb
stos
loopne
or
jbe
xchg
stc
mov
and
cmp
fwait
inc
mov
xchg
jbe
jg
mov
punpckhwd
or
sub
cld
xchg
fisttps
sti
jmp
test
fcmovnb
jmp
btr
pop
hlt
inc
mov
and
mov
sub
std
sbb
or
xchg
jle
pop
or
addr16
mov
add
sub
jno
push
add
scas
push
mov
mov
inc
jbe
jge
pop
mov
mov
xchg
aam
and
adc
mov
imul
mov
cmp
pop
inc
mov
add
mov
and
inc
ret
ljmp
sub
cs
cmc
and
stc
push
push
xor
jae
insb
rcrb
dec
movsl
lock
mov
pop
dec
mov
aas
xor
dec
cld
call
loope
pop
daa
mov
cmp
cmp
cmp
data16
decb
push
cmp
push
hlt
cmp
sub
lcall
cmpsb
sbb
fnstenv
cmp
stos
rcr
pop
xchg
lret
sub
repz
xchg
into
addl
fnstsw
lret
arpl
test
and
cmp
pop
test
add
das
repz
and
mov
cmp
je
out
inc
push
mov
add
andb
push
dec
lcall
fs
lcall
and
add
rclb
xor
xchg
lods
aas
jae
mov
stos
cld
mov
push
sub
jp
orb
into
scas
sbb
test
ljmp
icebp
pop
push
sbb
adc
mov
adc
sub
inc
fsubrl
xchg
xchg
mov
mov
mov
mov
popf
cld
mov
xor
es
cmpsl
fstps
inc
mov
loopne
or
mul
stc
pop
lea
jo
jg
mov
jmp
jmp
aad
outsb
add
int3
mov
out
movsl
cmpsl
outsl
lret
adc
mov
fs
insl
daa
daa
ds
into
xchg
push
clc
lods
push
stc
cmp
ret
jp
add
sbb
je
hlt
pop
fldl
or
icebp
je
cmp
mov
inc
loop
cmp
jp
inc
mov
mov
cmp
cmp
pop
in
pop
ret
dec
shll
sub
mov
push
mov
add
push
repnz
mov
cmp
inc
cs
ret
adc
aas
mov
and
ja
push
bound
arpl
sub
jp
je
or
ja
push
xchg
testw
mov
mov
mov
push
bndldx
repnz
add
adc
cmpsb
sbb
lret
test
pop
aas
xlat
pop
push
xchg
adc
mov
push
bound
cmp
dec
push
xchg
fnsave
fsubs
dec
jg
fwait
mov
mov
xchg
pop
cs
es
add
dec
mov
xor
xchg
cmp
test
xchg
jp
sub
xchg
fsubs
xor
sub
xchg
mov
or
sub
andl
sbb
popf
mov
lret
test
xchg
cmp
xor
cmp
pushf
loope
ss
and
aad
jecxz
push
test
cmc
adc
pop
cmp
testl
cmp
sbb
fdivs
adc
loopne
popf
out
dec
cmp
sbbb
lods
out
push
shlb
push
and
mov
and
popa
cmp
jecxz
push
fucomp
sub
jle
out
sub
jge
lret
cmp
cld
mov
out
and
loop
not
shl
sub
cmp
stc
mov
lds
daa
xchg
fdivrs
mov
shll
mov
and
and
lahf
mov
mov
jp
sbb
fdivrl
into
mov
lahf
addr16
pop
out
mov
aas
aam
jg
in
scas
mov
adc
repz
adc
movsb
hlt
dec
arpl
cli
into
dec
les
pop
jno
les
inc
in
int3
fdivrs
or
cmp
jne
xor
xor
ret
out
and
ret
xor
pop
push
fiaddl
push
pop
sbb
cs
andb
test
pop
or
jl
test
pop
jmp
mov
fiaddl
dec
sub
aaa
notb
add
in
dec
adc
in
add
aad
cmp
xorl
inc
ja
xlat
int
loop
frndint
xchg
sbbb
aad
cmp
xor
es
dec
repz
ds
mov
mov
push
sahf
push
movsb
cmp
dec
loopne
mov
lret
push
stc
addb
or
or
jns
cmp
out
ret
movsb
adc
adc
sbb
push
cli
int3
sbb
mov
mov
jns
or
or
out
sub
dec
in
ret
xchg
dec
mov
fwait
and
rorb
jo
push
mov
stc
lock
cwtl
jo
lahf
xlat
fwait
lret
call
sub
cmpsl
jge
jae
mov
cltd
lds
lock
mov
bound
out
mov
xchg
roll
xchg
cltd
imul
push
sbb
cmpsb
cmp
push
testl
ret
stos
xchg
jae
bound
repz
cmp
jecxz
out
arpl
pop
popf
outsb
cmp
lea
mov
cmp
add
and
movsb
in
mov
jmp
std
cmp
leave
sub
mov
sbb
mov
sarl
add
gs
mov
lods
lahf
lcall
mov
call
mov
test
cltd
nop
inc
cmpsl
dec
sbb
jmp
inc
sub
cmp
pop
jp
jae
xor
adc
nop
das
sbb
in
fcomi
adc
lahf
mov
mov
sti
xchg
scas
fs
jg
movsb
mov
xor
mov
cltd
test
xchg
xlat
pop
push
iret
push
lds
lcall
dec
aas
loop
pop
dec
rcll
inc
mov
lret
addr16
mov
rcl
fstps
sub
arpl
xor
sub
inc
lds
stos
pop
je
popl
jg
clc
fisubl
push
mov
ret
cmp
push
push
or
sbb
mov
inc
push
test
dec
shlb
mov
jb
rcr
xor
adc
ljmp
and
add
push
and
es
push
repnz
mov
pop
in
je
inc
or
pop
leave
imul
add
mov
and
pop
add
loopne
push
dec
cmp
or
out
mov
inc
xlat
fildll
test
pop
daa
mov
sub
pop
daa
sub
jns
adc
mov
and
in
inc
jo
popf
mov
jmp
and
int
cmp
pop
call
sub
dec
sar
cmp
out
lahf
add
jae
sub
dec
sar
scas
les
or
add
bound
outsl
jle
insb
xchg
ss
xchg
daa
cmp
xchg
cmp
dec
cmp
and
mov
adc
jae
xlat
fwait
aad
aam
ds
mov
adc
out
mov
push
in
add
dec
aaa
mov
imul
imul
jmp
aad
mov
push
push
sar
jecxz
or
dec
test
adc
enter
inc
xchg
dec
aam
in
hlt
push
lahf
das
xor
icebp
dec
insl
je
mov
std
dec
add
ret
mov
pop
inc
repnz
sub
loop
aam
pop
insl
imul
sbb
out
adc
mov
addr16
pop
and
je
out
push
iret
jg
pop
lahf
lea
popa
imul
dec
mov
cmp
mov
iret
sarb
inc
gs
pop
xor
pop
test
adc
inc
mov
mov
xlat
aas
adc
je
push
pop
add
sahf
jne
mov
jge
test
adc
push
sub
outsl
or
or
mov
cmc
movsb
ja
pop
pop
pop
mov
sbb
dec
fdivrp
jns
cmp
sbb
es
imul
push
pop
mov
jno
mov
fcoml
lock
ds
pushf
push
idivl
dec
inc
bound
dec
mov
bound
adc
mov
mov
push
repz
lret
jno
cmp
idivb
insb
daa
xchg
inc
dec
mov
in
ficoms
ds
test
shl
push
js
mov
push
out
mov
push
and
jmp
out
inc
pusha
mov
repnz
pop
mov
andl
fidivl
sub
push
or
pop
mov
jb
mov
hlt
mov
das
ja
adc
push
mov
push
ret
or
pop
and
bound
xor
nop
cmp
dec
ret
sbb
jg
xchg
jecxz
lods
fs
cli
jl
pusha
bound
aaa
sub
lcall
dec
xor
adc
mov
arpl
aad
and
sahf
out
jo
pop
icebp
aaa
push
mov
adc
insl
jno
shll
inc
jl
in
in
enter
xchg
adc
push
push
sub
add
push
inc
mov
loopne
call
aam
test
push
loop
int
jbe
sti
mov
out
mov
in
lcall
pop
lods
jp
out
negl
cld
mov
fisubs
lcall
scas
ds
outsb
and
subl
mov
push
or
mov
aad
les
ljmp
dec
fcoms
jae
pop
mov
fucomi
mov
test
mov
push
mov
xlat
out
push
inc
loope
rcl
push
dec
rol
daa
and
sbbb
shrl
xor
lea
push
pop
les
imul
iret
shlb
daa
and
call
cmpsl
leave
out
adc
js
cmp
ret
mov
ror
dec
aas
repz
dec
push
lret
mov
inc
aaa
pop
xor
outsl
mov
mov
jle
test
pop
bound
mov
mov
mov
sbb
pop
xor
out
das
lret
das
sub
pop
xchg
add
cmp
enter
out
mov
pushf
dec
mov
iret
fstp
sub
sarl
mov
arpl
jb
inc
push
imul
std
and
xchg
pcmpgtw
jp
pop
lahf
mov
mov
inc
pop
mov
jb
loop
data16
das
add
jge
add
xchg
mov
ret
jbe
test
ds
sti
scas
movsl
inc
jne
adc
dec
mov
enter
mov
out
ss
loope
sarl
sub
or
fs
stos
pop
dec
inc
sub
pop
mov
or
mov
sti
add
cmpsl
jecxz
test
xlat
xchg
pusha
jb
imul
cmp
add
xor
mov
push
arpl
insb
loop
mov
or
ljmp
push
mov
lret
es
dec
sti
adc
je
in
mov
int3
xor
dec
push
mov
xchg
lcall
subb
push
stc
push
pop
and
jnp
into
dec
add
iret
lds
inc
lret
pop
jnp
int3
sbbl
mov
into
mov
inc
xchg
daa
fneni(8087
fcmovu
sti
pop
or
push
loope
jl
jae
mov
or
or
lock
lret
stc
leave
std
add
jmp
aaa
stos
xrelease
and
int3
aaa
jp
cs
jo
dec
sub
lods
add
cmpsb
in
lods
jno
test
aaa
and
cmc
sub
jge,pn
xchg
out
or
sub
adc
negl
cmp
mov
arpl
jge
mov
or
jae
les
cmp
xor
cltd
push
inc
jne
xor
pop
icebp
nop
mov
xor
inc
add
mov
xchg
out
insb
lds
mov
push
push
insb
ja
popa
mov
in
leave
mov
cmp
xor
and
xchg
sbb
mov
jmp
cmp
pop
inc
pop
adc
lea
cld
lret
loope
out
ljmp
add
cmp
lret
decb
popf
adc
cmp
dec
lcall
imulb
jle
and
cmp
and
sub
insl
mov
push
add
pushf
push
mov
dec
or
add
and
jmp
loope
adc
out
push
outsl
sahf
leave
mov
xlat
push
stos
insb
mov
or
sbb
ja
loope
call
repnz
sbb
rorb
pop
in
xor
cld
push
mov
xor
ljmp
in
in
fdivrs
nop
clc
sbb
and
sti
mov
push
mov
mov
imul
xchg
cmp
int3
pop
pop
cmp
insl
ljmp
es
xchg
push
aad
inc
cmpsl
sbb
xor
adc
mov
push
in
or
push
mov
xor
dec
pop
enter
cmpsb
sub
mov
ds
fcoml
loope
xchg
push
xor
push
sub
jne
lods
pusha
pusha
pop
adc
cmpb
adc
xlat
mov
arpl
sub
inc
add
daa
mov
pop
pushf
push
and
in
sub
push
push
jbe
int3
and
dec
inc
mov
insb
stos
jmp
dec
int
mov
in
dec
and
sub
std
push
pop
xor
dec
xlat
filds
fldcw
mov
lods
stc
push
lret
sbb
inc
aad
mov
cmp
lcall
adc
mov
cmc
jmp
jge
call
cmp
pop
daa
negb
insb
and
pop
mov
pushf
insl
and
mov
push
push
and
mov
sub
dec
aaa
icebp
push
sub
dec
fisttps
and
cmpsl
mov
inc
adc
xor
cmp
test
clc
enter
jecxz
ja
push
ret
shll
cli
push
xchg
xchg
cmpl
jns
dec
fs
outsb
hlt
movsb
add
je
icebp
push
adc
mov
in
inc
add
shlb
mov
in
xor
repz
cld
inc
ljmp
mov
ja
mov
sbb
pop
movsl
cmp
sub
xlat
mov
mov
stc
add
inc
cmpsb
into
daa
dec
mov
inc
or
xor
mov
aam
pop
adc
dec
jle
scas
cli
cmp
adc
xor
dec
arpl
pop
jno
out
nop
mov
dec
dec
in
adc
mov
xchg
popa
jp
xchg
cmp
in
sbb
xchg
cmp
dec
packssdw
push
xchg
cs
or
mov
data16
sbb
mov
test
lods
jno
roll
mov
lcall
and
mov
cmp
sub
inc
xchg
fcoml
jae
popf
or
outsb
fldl
mov
idiv
stos
cmp
mov
xorl
test
fwait
lea
add
sub
mov
stc
fdiv
jecxz
lods
adc
enter
inc
cli
inc
cmp
fsubrs
inc
jp
mov
inc
or
mov
or
jno
mov
fsubl
sbb
mov
cmp
outsl
lea
enter
cmpsb
adc
xchg
push
cmp
lock
fisubrs
dec
xlat
into
jl
add
jb
sti
popf
filds
mov
xor
fs
add
loope
cmpsb
xchg
pop
cmp
hlt
mov
mov
popa
xchg
add
mov
jg
stos
and
dec
xchg
cmp
or
adc
mov
mov
fidivrl
jb
xor
lods
inc
cli
adc
sahf
mov
cmp
adc
xlat
mov
loop
pop
fnstenv
sbb
icebp
pop
push
push
cld
sub
int
cli
cmp
fwait
leave
sub
int3
es
mov
mov
lea
sbb
test
jo
inc
repnz
stos
xchg
xlat
int3
movsb
out
movsl
and
clc
push
jo
les
sbb
lods
imul
es
push
subl
and
pop
and
cmp
insb
add
sbb
add
pop
cmp
fwait
cmp
pusha
push
idiv
inc
push
out
or
repz
mov
add
jns
push
xor
mov
add
icebp
bound
jnp
sbb
lea
sbb
add
out
or
iret
lcall
inc
sbb
call
adc
add
lret
mov
cli
cmp
adc
imul
sbb
out
jbe
nop
ret
xorl
mov
xor
stc
das
imul
inc
dec
fidivrl
xchg
jl
lock
pop
and
int3
mov
sti
neg
push
mov
pop
and
push
movsb
mov
and
mov
and
jno
lcall
lret
test
or
fdivrs
insb
lock
gs
shr
jl
daa
adc
or
pop
cmp
cwtl
ja
jge
aas
push
sub
and
loop
cmc
mov
sbb
scas
and
pop
jb
jge
jg
mov
inc
fimull
push
mov
testb
fldl
fwait
pop
data16
mov
roll
mov
dec
cltd
nop
push
aad
fildl
dec
test
out
sub
rcrb
xchg
adc
inc
mov
repz
and
pusha
and
inc
adc
je
repz
mov
test
outsb
add
adc
sti
and
adc
push
mov
clc
jp
ljmp
push
add
enter
mov
push
adc
ficoms
or
mov
addr16
push
push
sbb
rorb
ss
stos
cmpsl
aas
mov
out
mov
aaa
push
fmulp
test
mov
adc
daa
imul
xor
sbbb
inc
inc
or
push
xor
movsl
mov
mov
ja
push
adc
out
mov
inc
aad
and
xchg
insl
fs
cltd
cmp
in
out
sub
push
jbe
or
ds
push
inc
or
xchg
xor
scas
rorl
jo
fnstsw
pop
scas
repnz
cmp
sbb
bound
int3
call
loopne
add
push
mov
push
mov
adc
cli
xchg
pushf
repnz
pop
out
fwait
fwait
jp
iret
enter
mov
xor
mov
inc
sbb
pop
aam
add
inc
ret
push
jbe
loopne
inc
jno
lea
mov
or
inc
loope
shll
arpl
jne
pop
mov
in
cmp
push
and
sub
in
lods
and
addr16
push
std
xor
ss
inc
dec
sarb
lret
dec
cld
insl
aad
das
shrb
push
lock
mov
cmc
adc
push
sbb
orl
in
push
pop
mov
cld
jno
arpl
jo
lods
sub
add
sub
mov
ret
fwait
cltd
or
fimuls
mov
lods
outsb
gs
cli
dec
xchg
add
or
push
xchg
sarl
lahf
das
mov
jo
loop
add
dec
add
dec
into
and
jecxz
push
adc
dec
mov
adc
shrb
imul
das
cmp
cmp
dec
scas
rolb
cmp
mov
xor
and
not
inc
testl
stc
ret
test
dec
adc
cmpsl
dec
push
cld
inc
lea
cmp
cmp
push
rcr
outsl
nop
test
inc
lea
jle
in
lret
mov
and
ljmp
insb
nop
scas
or
mov
xchg
jp
or
imull
stos
inc
shrl
adc
in
scas
xor
sbb
xchg
mov
lret
daa
daa
lcall
pop
in
add
gs
push
and
inc
ret
mov
test
mov
outsl
jo
shll
pusha
insl
sub
dec
jmp
adc
xor
mov
xlat
movsb
sbb
mov
iret
rclb
loope
je
lods
jne
xchg
lret
xchg
popf
data16
loopne
lret
test
iret
xchg
inc
xchg
mull
call
mov
jno
sbb
add
lods
ss
sarb
mov
mov
sbb
outsl
mov
mov
lods
pop
test
adc
mov
pop
push
cmpsb
shufps
pop
jl
rcrb
mov
mov
decl
das
and
scas
in
gs
adc
call
scas
sbb
sbb
mov
inc
repz
into
jmp
leave
jge,pn
ljmp
pop
sub
push
sbb
fdivrl
nop
add
xchg
push
mov
xchg
push
dec
movsl
cwtl
outsb
fstpl
lods
call
inc
data16
inc
inc
das
mov
data16
sbb
inc
in
cmp
jne
imulb
cmp
dec
hlt
je
sub
mov
pop
loope
mov
dec
cltd
out
or
cmpsl
cmp
add
add
fistps
mov
sbb
jno
sar
mov
test
jge
icebp
cmp
push
xchg
push
leave
inc
xlat
cmp
xor
insl
insl
pop
scas
sbb
sub
mov
testl
sbb
sub
imull
push
sahf
loopne
cmp
pop
pop
push
adc
inc
cltd
fwait
inc
sub
leave
sub
lea
xchg
mov
adc
jecxz
mov
scas
xchg
sub
cmp
ss
jg
mov
add
cmp
jb
mov
mov
mov
sbb
aaa
fadds
enter
xor
jl
xlat
lret
test
imul
mov
mov
add
inc
jge
adc
out
rcrb
repnz
mov
popf
mov
sub
jle
lds
pop
xchg
test
or
sub
jp
fstpl
ret
push
xchg
pushf
adc
daa
or
fisttpl
subb
push
addr16
lahf
cld
repnz
adc
sbb
cmp
loop
mov
add
mov
pop
push
or
out
mov
push
xor
xlat
ficompl
or
aaa
xor
sbb
notb
fcompl
and
sub
and
push
inc
sub
in
xchg
adc
test
mov
inc
push
mulb
int3
adc
and
test
push
and
cld
mov
mov
xor
aam
inc
or
cli
and
faddl
mov
aas
outsl
add
daa
cltd
xor
sbb
iret
lahf
ss
cmpl
add
sub
inc
sub
pop
shl
fwait
jecxz
sub
fdivr
sub
imul
jecxz
sbb
sbb
shll
mov
xchg
sub
rcl
pop
aas
imul
pop
mov
pop
sub
inc
bound
or
adc
call
push
lcall
mov
inc
pop
enter
popa
inc
pop
fsubs
mov
out
jns
les
in
lds
inc
movsb
jmp
push
jno
mov
fidivs
in
jle
in
idivb
sub
movsl
mov
add
xor
xchg
into
push
xchg
das
loop
mov
inc
and
cli
lds
dec
inc
in
mov
arpl
shll
in
xor
mov
mov
push
stos
movsl
in
repz
sbb
mov
movsl
pop
aaa
bound
mov
pop
xor
shl
push
repnz
inc
fiadds
push
inc
or
int3
jno
xchg
mov
inc
xchg
addl
pop
lret
outsb
lds
fsubp
adc
loop
cli
pop
or
lods
sti
xchg
fs
push
shrl
lods
call
cmpsl
jp
fistps
shll
imul
lods
mov
sbb
das
xchg
add
inc
ljmp
mov
xor
dec
rolb
cmc
je
jns
sahf
aad
mov
mov
adc
adc
cs
add
je
inc
inc
shlb
call
cvtpi2ps
push
cmp
das
nop
sbb
pop
je
pop
ror
movsb
mov
and
pop
dec
js
sarl
push
pop
adcl
jns
sbb
add
shll
sbb
jmp
inc
dec
insb
lret
pop
or
push
lret
or
fwait
js
pop
enter
mov
mov
push
mov
dec
mov
dec
mov
inc
push
and
lcall
lahf
mov
sub
mov
inc
pop
rcrl
push
dec
jbe
test
and
inc
add
cld
pushf
inc
int
xor
mov
jmp
mov
xor
imul
sub
fidivrl
hlt
sbb
sbb
sbb
push
and
ret
aas
and
sbb
or
fadds
in
jb
aam
mov
stos
stc
sub
and
cld
das
mov
mov
loopne
add
jge
inc
pop
lret
push
movsl
dec
jnp
sub
stos
lcall
or
bound
arpl
mov
les
lods
imul
and
push
mov
mov
jbe
mov
or
testl
xchg
add
out
adc
dec
jae
jbe
add
test
out
jecxz
js
inc
pop
mov
xor
mov
hlt
divl
add
dec
adc
les
movsb
jo
push
jle
cmpsl
or
sub
cmp
xor
lahf
mov
or
dec
ja
push
mov
xchg
je
xor
lret
sahf
icebp
cmp
jno
cmp
jb
aas
jge
fwait
dec
mov
pop
sub
push
and
pop
stos
pop
out
test
mov
fldenv
cmovge
push
stos
push
cmpsb
mov
add
lcall
push
dec
pop
fnsave
and
xchg
stc
xchg
lahf
xlat
cmp
mov
bnd
ja
daa
sbb
xchg
xlat
cmc
push
lock
in
int3
data16
fcoml
stos
jo
jmp
pop
push
pusha
pushf
rorl
push
arpl
imul
cmpb
aad
data16
imul
mov
fisttpll
xor
inc
out
cmp
das
pop
mov
xorl
in
xchg
in
xor
and
mov
xor
shll
dec
xlat
hlt
mov
ds
sti
push
pop
jo
lahf
out
shl
rcll
mov
pushf
pop
mov
rep
sub
js
mov
cmp
mov
cmp
nop
je
cmp
out
lret
outsb
push
and
sbb
clc
sbbl
sbb
aam
dec
cmp
fstl
jmp
and
bound
push
mov
mov
pop
xchg
test
das
ds
ror
ficoml
xchg
mov
lods
into
push
test
sti
lds
shlb
fldcw
jne
movsl
sbb
cmpsl
adc
out
rorb
pop
ret
pushf
in
outsb
sbb
movsl
push
add
in
inc
and
lods
jecxz
fsts
sub
jg
pop
cmp
fmuls
jl
pop
lds
or
mov
sti
jp
mov
popa
or
jle
test
push
jnp
mov
dec
lock
pusha
xchg
jbe
cmp
ljmp
fcmovne
das
in
mov
push
lock
push
rolb
cmp
ljmp
xchg
pusha
cmp
cltd
cmp
movsl
repz
sbb
sub
nop
sbb
sub
enter
xchg
insb
ret
pop
lcall
xor
jnp
cmp
sbb
arpl
add
inc
daa
mov
cmc
xor
lahf
sahf
push
sub
xor
scas
mov
mov
cmc
outsl
or
sbb
loope
xor
cmp
mov
xchg
cmp
addr16
int3
jns
and
pusha
insb
clc
mov
in
push
or
fcmovne
adc
inc
fadds
loope
das
fucomip
fisttpl
jmp
jnp
cmp
popf
mov
lahf
sbb
loopne
push
xor
test
and
pop
movb
or
or
ret
mov
out
mov
pop
out
push
mov
jnp
loopne
dec
cmpsb
int
je
mov
out
xchg
lock
cmp
push
jb
xchg
sbb
or
ficompl
scas
sbb
loope
xor
dec
xchg
pop
fxch
mov
add
clc
xchg
xchg
dec
loop
fldcw
or
jns
aas
roll
push
popa
dec
mov
repz
ljmp
mov
or
cmp
iret
inc
mov
pop
pop
and
or
imulb
and
xchg
jbe
mov
xchg
faddp
je
sbb
in
cmp
mov
sub
repnz
mov
and
cli
vpaddsb
mov
aad
arpl
loop
shld
mov
jmp
mov
mull
test
mov
in
fcmovnb
popf
dec
repnz
sbb
jle
scas
pusha
and
loopne
inc
loopne
cmpb
dec
push
or
popl
cmp
fidivrs
pop
push
cltd
push
sbb
imul
lods
mov
inc
or
pushf
popa
je
ret
jno
in
ds
dec
fistl
enter
mov
mov
rcll
ficomps
sub
gs
jecxz
ret
cmp
sbb
int
jge
or
lock
xchg
or
mov
gs
in
or
xchg
fists
push
inc
xchg
xor
cmp
adcb
jbe
mov
fsubrl
test
sahf
iret
add
mov
mov
fdivr
adc
add
dec
or
pop
pop
repnz
ret
push
in
pop
mov
pop
adc
stos
mov
cld
xchg
push
arpl
jnp
movsl
pop
pusha
fistpl
push
adc
pop
movsb
iret
lods
sbb
enter
test
sub
cmp
imul
push
mov
cmc
outsl
fwait
xor
psadbw
add
xchg
cltd
icebp
jnp
mov
sub
push
sahf
clc
mov
mov
inc
sahf
inc
into
imul
xor
cmp
xor
test
xor
jbe
das
sbb
push
enter
subl
dec
xchg
insb
in
mov
pop
std
aam
ret
in
leave
pop
gs
dec
movsb
mov
pop
jb
jne
add
push
dec
insl
or
push
lds
dec
pop
mov
iret
xchg
adc
fnstenv
mov
jmp
push
andb
cmp
and
lcall
push
stos
dec
dec
jmp
xchg
cmpsb
adc
ds
jo
sbb
push
rcl
mov
jmp
data16
mov
lahf
jp
cmp
aas
inc
lcall
sbb
ud1
sub
iret
jmp
je
fmulp
in
pop
out
ret
inc
dec
pop
ret
aam
mov
xchg
xor
pop
jge
mov
sbbb
ficoml
js
mov
js
fwait
shrb
fstps
sbb
mov
shll
aas
push
hlt
xchg
rcrl
sub
rcr
push
pop
and
dec
push
test
cwtl
popa
mov
test
and
fisttpll
sbb
aaa
enter
jmp
push
lods
cmc
push
sbb
mov
lcall
mov
pushf
sub
mov
test
aad
pop
call
push
clc
mov
mov
clc
xchg
jnp
push
mov
jnp
jmp
mov
imul
jmp
push
sbb
sbb
fs
in
inc
pop
xor
lret
mov
push
cwtl
mov
outsb
mov
mov
in
fildl
addr16
mov
jp
in
mov
fiadds
sub
pop
jecxz
adcb
jecxz
insl
mov
mov
adc
push
lahf
sub
pushf
mov
in
icebp
iret
sbb
inc
dec
rorb
sbb
mov
push
sbb
es
loope
pop
push
jno
pushf
movsb
jno
bound
jno
mov
scas
lock
mov
push
jno
sub
stos
movsb
mov
repz
mov
ja
push
inc
ja
dec
jbe
dec
mov
mov
cmpl
cmp
and
mov
pop
xchg
shl
movsb
pop
les
notb
ds
mov
mov
frstor
sub
lahf
lahf
les
adc
cmpsb
lock
lahf
xor
imul
inc
lds
imul
mov
andl
push
or
mov
loopne
shrb
fistps
cmpsb
loop
adc
sbb
cmp
xor
scas
scas
dec
jle
test
dec
leave
mov
pop
add
jbe
out
in
lods
call
and
cmp
movsb
inc
sub
xchg
dec
and
push
loop
or
mov
mov
subb
lods
jp
repz
dec
sbb
int
jnp
push
int3
inc
jae
je
mov
pop
sbb
sub
nop
jl
push
dec
fdiv
lcall
subl
shl
lcall
mov
xor
ret
push
jnp
pop
lea
fnstenv
cld
repnz
and
mov
xchg
aas
xchg
mov
gs
mov
inc
les
outsl
jae
ds
das
orl
imul
hlt
arpl
adc
in
cwtl
mov
mov
and
fmuls
jp
add
adc
push
outsb
in
xchg
xchg
add
stos
mov
sbb
mov
ljmp
pop
add
scas
add
sbb
in
pop
cmpsl
add
dec
pushl
add
test
loop
out
jo
mov
inc
or
addl
aam
sahf
sub
das
xor
scas
push
inc
nop
jb
pop
negb
jle
ljmp
sub
pop
ss
test
jne
mov
divl
push
push
sbb
push
inc
mov
sbb
cmp
inc
enter
scas
cwtl
inc
sbb
pop
movsb
xchg
cmpsl
jbe
jle
loop
mov
jne
je
jmp
lret
scas
rorb
repnz
xchg
pop
jl
scas
loopne
push
jp
cmp
mov
jb
mov
lea
jle
cltd
subl
mov
dec
fcom
mov
jmp
cli
lods
xlat
jno
or
push
mov
push
ret
xorb
fidivs
xchg
test
add
add
push
jne
scas
das
pop
fnstenv
mov
mov
ficoms
sub
cltd
dec
rcl
inc
jg
mov
push
dec
jo
ret
cwtl
imull
and
inc
scas
jnp
jle
inc
fistps
jecxz
jbe
xor
mov
std
inc
lret
dec
or
in
pop
xchg
mov
lea
in
lahf
fwait
aaa
loop
xor
push
xor
or
test
rolb
adc
jnp
xchg
push
insb
repnz
shll
mov
mov
lret
imul
jae
fwait
ljmp
aas
inc
sbb
cmpsl
sub
pop
in
jbe
ret
lcall
or
jge
shrb
push
add
xor
out
or
std
mov
loope
ret
xchg
inc
cwtl
into
fmuls
aam
sbb
or
lea
pusha
dec
loopne
cmp
pop
lretw
jno
aam
sub
cmc
insl
jg
xchg
mov
rcrl
xchg
gs
test
push
bound
pop
mov
mov
inc
fs
test
jecxz
push
iret
test
iret
pop
pop
imul
int3
fsubs
push
lahf
jne
push
fwait
inc
ror
sub
out
sbb
mov
inc
out
scas
jno
and
pop
sahf
std
ror
movsb
repnz
pushf
mov
cmc
sub
pop
lcall
jle
inc
push
je
inc
lea
mov
in
dec
adc
xlat
adc
jns
xor
and
call
aam
pop
sub
stc
hlt
mov
rorb
mov
mov
loopne
mov
jl
aaa
inc
call
sub
sbb
push
sbb
fcoml
xchg
outsl
shl
jb
or
int
mov
xchg
jno
sti
push
fwait
mov
repnz
xchg
ret
mov
jle
pop
and
jmpw
jns
dec
lahf
push
decb
jmp
pop
and
andb
jg
or
mov
insl
jne
cmp
adc
in
lods
jne
sub
adc
pop
in
dec
int
inc
stc
dec
cmp
mov
jb
mov
cmp
arpl
jp
sbb
mov
in
cmp
pushw
mov
cmpsb
adc
test
hlt
mov
out
faddl
inc
push
mulb
push
jnp
sbb
test
mov
and
push
pop
repz
lock
cmpps
jns
mov
mov
mov
pushf
lods
and
orb
addr16
mov
shll
add
cmp
dec
sbb
repz
sbbl
sbb
fsubrl
push
mov
loop
sbb
int3
test
mov
adc
sub
das
inc
inc
hlt
loop
jle
xor
mov
test
fisttpll
repz
test
into
mov
inc
mov
inc
out
gs
or
sub
and
push
fstl
imul
sub
sub
xchg
leave
test
sub
lahf
mov
or
or
imul
jbe
jmp
negl
pop
and
and
insb
sahf
cmp
push
jge
ss
inc
jns
cmp
sti
xchg
scas
inc
fcomps
cmp
out
ret
xor
aad
xchg
cwtl
in
out
insl
shlb
lds
sbb
sbb
xchg
ss
mov
outsb
pop
dec
jae
cwtl
push
jge
mov
repnz
xor
leave
call
mov
sub
test
cwtl
pop
adc
insl
or
cmp
outsl
and
test
or
jbe
orb
das
lret
lock
sub
add
dec
into
push
movsl
pop
jae
lret
sub
in
xchg
leave
cwtl
rcrl
mov
mov
inc
pop
xchg
loop
lock
pop
jae
mov
aas
sub
sahf
mov
dec
add
dec
mov
insb
jns
jecxz
or
sub
mov
push
cmp
jl
test
xor
or
clc
rol
push
fwait
sub
inc
lret
mov
das
adc
je
rol
xchg
divl
adc
paddb
dec
push
fidivrs
adc
sti
lret
ret
or
cmc
pop
int
inc
stos
loope
inc
pop
pop
push
adc
mov
lret
iret
push
mov
sbb
ret
sahf
ds
in
push
cmc
in
adc
insl
lock
ljmp
inc
outsl
pop
dec
jg
out
push
mov
idiv
xchg
out
sub
add
mov
test
std
lea
scas
fldl
pop
push
lock
pop
in
push
mov
push
xchg
je
jo
jne
xor
lods
out
xchg
jg
sub
adc
jbe
and
fwait
or
orb
out
mov
mov
jecxz
out
push
stos
sub
out
gs
jecxz
add
sbb
add
mov
adc
stc
jl
test
push
in
insb
push
mov
mov
and
mov
fsubp
mov
push
insb
ja
imull
add
and
dec
mov
cmc
mov
dec
pop
xor
or
or
cmp
mov
fs
lods
rcl
add
push
adc
or
mov
cmpsb
xchg
jge
divb
cmp
ds
adc
pop
xchg
xchg
cmpsb
fnsave
xchg
hlt
push
jno
push
aas
pop
hlt
sub
or
mov
rcll
jp
inc
add
dec
mov
cwtl
popl
cmc
fadd
mov
int
jae
and
sbb
push
jae
test
sub
xchg
sbb
stc
stos
rorl
mov
mov
imul
stos
enter
je
outsb
std
push
jns
out
nop
mov
jecxz
sub
icebp
mov
pop
lcall
add
xchg
add
inc
xchg
pop
mov
and
sti
and
and
xchg
dec
scas
out
test
je
xchg
push
fcomp
xor
cmp
sahf
mov
fmul
cld
aaa
mov
aas
in
xor
cmp
outsl
aas
lods
mov
icebp
outsl
dec
push
hlt
outsb
pop
xlat
icebp
cmc
cld
in
iret
mov
or
push
mov
and
and
sbb
mov
push
insb
adc
fstpl
insl
popf
out
in
mov
mov
pusha
pop
mov
jo
icebp
mov
mov
push
jge
int
decb
pop
loope
xchg
push
movl
loope
dec
call
mov
add
inc
adc
pop
sbb
test
dec
fcoml
push
push
mov
daa
loopne
sub
adcb
mov
jae
sbb
aad
subl
dec
xchg
out
lcall
mov
sbb
push
inc
gs
push
aad
mov
mov
aam
lods
mov
inc
add
push
fwait
mov
shrl
sub
pop
hlt
hlt
fsts
stc
lahf
fisttps
dec
inc
dec
jae
fsubl
xchg
jecxz
xchg
and
adc
imulb
pop
sti
dec
jb
push
mov
insb
xchg
rorl
stos
jg
xchg
or
sub
mov
out
xchg
mov
mov
add
jnp
test
xchg
push
sub
fwait
ret
stos
insl
or
push
jae
xchg
lret
or
arpl
negl
cltd
push
adc
loope
sahf
mov
test
das
ljmp
fcomi
jl
xchg
sbb
iretw
repnz
enter
mov
pop
cltd
add
cmp
das
pop
adc
lcall
ljmp
dec
out
mov
sbbb
push
pop
inc
cmp
sub
pop
rol
mov
sub
dec
leave
gs
add
mov
mov
xchg
lods
pop
jno
lods
insl
mov
scas
in
mov
adc
sub
mov
add
loop
loope
inc
std
aam
push
sub
fbld
int3
lcall
sti
data16
push
rcll
sahf
push
loope
mov
shrb
pop
xor
mov
inc
xor
imulb
in
cmpsl
dec
inc
and
leave
mov
xchg
cmpsl
lret
mov
or
dec
sub
fistpll
sub
shll
mov
sti
pop
loop
sbb
sub
xchg
test
inc
xchg
dec
sub
jl
in
shrl
jo
es
cltd
push
cld
mov
test
mov
sub
push
mov
dec
mov
and
fdivrs
mov
sbb
mov
fwait
xor
inc
lods
scas
and
xchg
mov
ja
sbb
jne
push
outsb
jbe
test
pop
xor
cmp
cli
mov
mov
std
loopne
push
imul
jl
pop
mov
into
xor
pop
and
jl
pusha
js
lret
or
push
pop
push
add
xchg
lret
in
or
jbe
dec
sti
xchg
jnp
mov
or
xor
cmp
push
imul
lods
sbb
jns
and
popa
adc
xchg
push
inc
and
mov
xchg
pop
in
faddl
push
inc
xchg
mov
jno
mov
push
pop
mov
and
nop
lea
add
cmc
pop
xchg
aad
mov
inc
push
sbb
mov
sub
cltd
sbb
inc
inc
scas
sti
mov
ljmp
movsb
std
mul
fsubs
or
imul
mov
inc
int3
or
rcrb
inc
sub
mov
xchg
imul
inc
jge
pop
add
mov
data16
pop
outsb
and
lret
movsl
cmp
mov
cmc
pop
movsl
ljmp
mov
sub
das
inc
adc
outsb
sbb
pop
xchg
out
fucomi
mov
xchg
arpl
je
adc
xchg
inc
pop
pop
pop
insl
ss
sub
add
cli
xor
jb
push
movsb
pushf
fldcw
and
mov
shl
pop
insb
in
pop
jp
adc
out
ljmp
inc
mov
cwtl
shrl
push
lret
repz
loop
pop
inc
add
outsl
fs
jb
sub
jg
mov
push
push
push
sbb
cmp
cmp
fidivrs
leave
xchg
xchg
sub
and
inc
adc
enter
imul
or
das
in
lods
mov
je
mov
imul
xchg
push
xor
push
movsl
add
pushf
push
stos
mov
inc
fisubrl
out
ficomps
push
mov
mov
mov
clc
imul
adc
and
repz
iret
pusha
cwtl
mov
mov
jae
fmul
and
xor
into
rclb
cmpb
scas
and
in
repz
cld
popa
inc
mov
push
cmp
fistps
lahf
in
fistl
xor
loopne
push
inc
cmpsl
mov
hlt
add
inc
jle
push
jnp
rol
mov
in
ret
mov
lock
push
xchg
jecxz
call
flds
mov
test
fistpll
inc
ja
sub
or
icebp
lahf
mov
sahf
cmp
or
mov
arpl
add
sub
push
and
dec
andb
loope
push
jle
jae
daa
mov
sub
scas
shlb
cmp
sbbb
in
jg
lock
fcomps
pusha
mov
mul
pop
rolb
push
gs
add
aaa
xchg
add
sub
xchg
or
mov
out
push
xor
imul
xchg
cmp
push
push
lea
hlt
dec
and
arpl
cmp
dec
repz
and
loop
movsb
push
xchg
imulb
fwait
jo
pop
cmp
mov
dec
mov
aad
subb
or
ljmp
mov
hlt
ja
and
pop
mov
fstpt
push
imul
pop
aas
push
std
sbb
mov
jmp
push
mov
rol
or
stos
cmp
sti
or
inc
test
lret
rclb
test
fdivs
das
pop
pop
mov
test
jle
repnz
sbb
jmp
dec
mov
fcmovnb
sti
jmp
xchg
insb
into
pushf
push
repz
daa
inc
data16
cmpsb
or
jbe
and
das
jl
and
fmul
jp
cmp
pop
fsubs
fwait
mov
pop
call
mov
jge
cli
out
mov
int
push
xchg
shl
jb
add
repz
stc
filds
in
mov
dec
loope
mov
pop
roll
in
and
mov
or
jnp
stos
and
sub
jno
pop
mov
xor
ljmp
push
add
sbb
insb
in
ja
fildl
fldcw
shlb
pop
or
fnstsw
push
nop
push
lea
pop
dec
leave
jns
in
insb
imul
add
data16
cmpsb
shrl
enter
clc
loopne
int3
jp
xchg
int
pop
mov
pop
shrl
adc
out
cwtl
jbe
js
rcr
neg
outsb
adc
mov
je
test
xchg
or
in
mov
je
xchg
push
jb
cwtl
into
popa
nop
push
inc
inc
rol
jecxz
lds
and
js
mov
mov
cmpsl
pop
popa
fwait
inc
fucomip
popl
cmpsl
push
imulb
test
in
and
adc
in
out
push
aaa
out
and
js
dec
std
add
mov
aad
sub
clc
sub
add
imul
or
pop
dec
outsb
enter
sub
test
mov
outsb
dec
dec
inc
gs
xchg
xchg
sbb
addb
pushf
push
push
gs
jno
je
jae
or
lahf
imul
in
push
scas
shll
dec
in
cld
test
in
dec
xor
fcoms
xchg
sbb
xchg
and
sub
inc
pop
inc
in
jg
jl
rorl
cmp
mov
das
push
push
out
adc
push
nop
mov
imul
push
adc
mov
sahf
sbb
std
test
outsb
sbb
pop
and
stc
aas
adc
xchg
daa
loopne
sub
lds
jne
scas
jle
sbbl
xchg
mov
fidivrs
pop
or
ds
aas
stos
pop
sbb
les
out
cmp
and
jo
xchg
jp
dec
cli
in
jle
or
mov
pop
mov
xor
and
lods
mov
in
das
in
xchg
push
out
stos
and
into
and
addb
cmp
pop
shlb
dec
mov
cmc
push
movsl
les
addb
lock
mov
stos
enter
inc
pop
ljmp
pop
jnp
xlat
popa
jb
movsl
cmp
dec
and
jl
scas
scas
int
mov
sar
in
dec
sarl
movb
pop
das
sub
lea
mov
jae
or
icebp
mov
cmpsl
test
mov
and
push
sub
sahf
pop
bound
fmull
lahf
pop
jmp
jmp
sahf
aas
loopne
int
ret
loope
fldt
ret
call
in
xchg
dec
pushf
sbbb
js
pcmpeqw
inc
inc
into
insl
out
pop
mov
sub
lcall
cmc
sub
cwtl
mov
jne
xchg
lds
ret
ds
push
jno
fistpl
movsb
gs
nop
sub
or
jmp
xchg
dec
or
inc
data16
addr16
cltd
roll
icebp
ds
jbe
push
int3
push
xchg
mov
cmp
cmp
rorl
cmpl
jnp
into
xchg
icebp
xchg
cld
in
out
addr16
and
mov
dec
cli
es
fldpi
adc
fstpt
inc
mov
bound
mov
mov
test
rolb
insl
adc
dec
arpl
ret
mov
movsl
movsl
mov
ret
repnz
in
inc
jne
dec
test
sub
out
call
mov
insb
sub
je
jnp
jb
push
push
in
inc
aad
push
add
clc
daa
and
add
lods
dec
and
push
and
push
ret
sarl
add
sarl
sbb
adc
mov
out
adc
jne
scas
or
xchg
or
fmul
jmp
jnp
mov
aam
pop
pop
mov
xchg
push
mov
scas
mov
xchg
aad
hlt
test
mov
js
test
push
out
pushl
cmp
xor
call
xchg
fsubrl
sbb
cmp
pop
pop
sbb
cwtl
and
in
xor
int
or
mov
and
xchg
mov
sbbl
or
add
inc
es
call
and
adc
in
sarb
es
and
xorb
test
fldcw
pmaxsw
pop
push
xchg
movsl
enter
push
fildll
inc
fs
in
and
test
lock
mov
push
mov
lods
or
in
in
and
pushf
arpl
mov
fidivl
hlt
adc
or
rcrl
pop
xchg
pop
mov
cltd
lea
jl
mov
cmpsl
jne
arpl
call
fwait
jl
xor
cmp
adc
in
lcall
dec
je
mov
bound
xchg
push
or
sbb
cld
sbb
jno
sub
loop
push
dec
xchg
aaa
xchg
shrb
mov
mov
rcl
xchg
call
test
mov
xchg
repnz
inc
jmp
adc
and
ret
dec
mov
repnz
mov
lcall
add
add
sub
mov
sbb
movsl
lea
xchg
jl
daa
lret
mov
sub
adc
adc
arpl
lahf
jae
scas
sub
cld
or
mov
cmp
pop
insl
pop
mov
insl
lock
push
mov
pop
daa
js
mov
sub
push
and
bound
fs
jp
test
test
shll
sbbb
xchg
fcoml
mov
jbe
mov
int3
mov
mov
fucom
pusha
or
int3
or
add
aas
xchg
mov
out
outsl
mov
movsb
cmp
add
lret
dec
pop
pop
pop
scas
stc
lret
mov
adc
popa
lea
jbe
add
push
or
inc
cli
stos
daa
sbb
or
test
push
xchg
add
sbbb
bound
xchg
jns
cmp
stos
dec
das
idivb
sub
push
fldt
mov
cmpsb
stos
inc
rcl
xchg
data16
cs
jno
divb
mov
in
add
arpl
ret
dec
mov
outsb
enter
outsb
jg
je
orl
adc
cld
or
sub
push
jecxz
insb
sbb
mov
iret
dec
out
push
shll
andb
mov
pop
test
xor
arpl
aad
adc
test
mov
pushf
ret
negl
sub
mov
xchg
fbstp
adc
lahf
xor
mov
push
ss
xchg
xchg
lds
aas
rclb
scas
sahf
mov
xor
sub
mov
fsubrl
adc
and
loop
push
or
pop
add
lods
insb
mov
cs
test
shlb
movsb
sub
mov
mov
bnd
mov
adc
xorl
testb
jg
mov
dec
push
add
seto
xchg
iret
cmp
popa
sub
int3
lds
mov
sub
icebp
in
mov
test
pop
cld
and
mov
push
dec
inc
mov
loope
mov
lods
decl
mov
adc
add
insl
imul
xchg
push
sub
scas
int3
and
lds
pop
fst
or
loopne
shll
and
push
and
lods
js
or
dec
or
insb
mov
cmpsl
divb
fsubl
dec
push
inc
sbb
push
jecxz
popa
dec
sbbl
add
or
and
cld
test
ficoml
fcmovbe
jno
adc
leave
int3
iret
xchg
loop
in
in
bound
movsl
ja
and
cmp
repnz
add
jg
clc
mov
xchg
adc
ffree
ret
negl
lret
aad
ja
cmp
jl
jmp
inc
pop
repnz
jae
fisubrs
scas
fcompl
out
mov
jmp
fs
dec
jg
daa
sbb
mov
inc
push
mov
push
push
mov
adc
push
inc
mov
addr16
fidivs
push
cmp
or
lds
call
das
call
pusha
leave
and
aam
pop
das
mov
and
loopne
js
pop
push
stos
push
sbb
movsl
notb
mov
inc
lods
fdivrs
popf
add
addr16
mov
in
jp
lea
popa
xchg
mov
xor
rclw
shl
mov
mov
push
iret
sar
aam
inc
and
jae
pushf
mov
jl
cmp
icebp
bound
es
dec
mov
jo
cmp
pop
or
sahf
sub
setl
mov
in
and
mov
sahf
pushf
jnp
bound
test
xchg
mov
pushl
push
cld
and
mov
int3
stos
pop
mov
cltd
ljmp
jge
insb
cmpsl
mov
inc
sbb
pusha
jo
fdivs
je
or
push
daa
lahf
je
push
les
push
or
loop
inc
movsb
dec
lret
mov
push
push
xchg
popf
stc
nop
mov
push
stos
out
out
mov
mov
pop
inc
mov
mov
ret
iret
sub
insl
lds
or
test
nop
sti
cltd
test
cmc
xor
jg
loop
xor
push
mov
ret
into
dec
cmc
push
ficompl
imul
dec
fiaddl
in
mov
mov
pusha
push
add
jg
ficoml
dec
lahf
xor
repnz
inc
jle
jp
sbb
shll
jb
add
and
call
out
in
mov
aad
sbb
scas
fs
test
hlt
cmp
loop
jl
iret
adc
ficoml
mov
sub
push
jge
repnz
into
rolb
hlt
aad
xor
cwtl
xchg
sbb
stc
cmpsl
imul
stc
call
mov
push
xchg
jmp
out
jbe
add
inc
movsb
mov
mov
pop
ljmp
push
ljmp
and
push
jecxz
outsb
jnp
fcompl
hlt
mov
cmp
cmp
inc
adc
ljmp
mov
jne
and
lock
xor
xor
scas
into
mov
xorb
xchg
xorl
lret
daa
xor
push
mov
inc
push
and
xchg
pop
jl
dec
std
lds
mov
dec
sub
inc
decb
xor
nop
in
dec
xchg
jb
pushfw
rcrb
jo
cmp
data16
pop
cld
sbb
mov
ret
lock
mov
mov
scas
out
xchg
idivl
ret
push
dec
popf
cltd
add
push
mov
jae
repz
sbb
mov
push
stos
pop
jecxz
mov
adc
sahf
mov
stc
adc
pop
ljmp
mov
mov
ret
ss
ja
test
push
jg
or
shrl
into
adc
push
inc
js
rol
insl
dec
stos
iret
fisubrs
inc
sbb
xchg
mov
scas
insb
aam
fadds
ss
inc
jmp
jns
xchg
xchg
xor
xor
ret
test
and
adc
insb
xchg
iret
cmp
dec
aam
mov
out
andw
test
imul
mov
cld
jno
outsb
jno
push
mov
add
int
dec
lock
pop
idivb
jno
sub
cmpb
xchg
ret
dec
cs
or
fstps
push
popf
mov
aas
mov
cmp
sbb
lcall
and
fmul
mov
std
lcall
dec
pop
push
pushf
popf
pop
arpl
jg
mov
fwait
stc
add
call
or
shrl
push
sub
lds
xchg
aam
add
mov
clc
xchg
mov
fmull
data16
push
lock
idivl
data16
orl
stc
imul
jno
or
jmp
rcll
xor
ds
mov
xor
scas
aaa
mov
add
push
jl
in
out
loope
aad
iret
in
mov
neg
pushf
sbb
rolb
aaa
popf
shlb
mov
jbe
cmpsb
fcompl
sahf
stos
jecxz
shll
xchg
dec
mov
lods
mov
mov
icebp
fdivl
jl
push
lahf
out
subb
pop
add
jbe
xchg
dec
andl
mov
pushf
jne
cmpsl
xor
push
mov
xchg
push
inc
or
les
jl
sub
into
cld
inc
in
cltd
aas
xchg
cmpsb
cmp
pop
rolb
imul
fbstp
xlat
lret
aad
int3
xlat
dec
inc
sti
sarl
mov
adc
iret
loope
fimull
jae
sub
push
cmp
push
dec
pop
loopne
mov
jbe
mov
dec
xor
dec
mov
lea
shrl
pop
push
sarb
into
dec
lret
dec
fistl
mov
mov
idivl
pop
test
in
cli
fst
xchg
xchg
dec
pop
xchg
loop
out
jecxz
inc
pop
std
sub
daa
sub
xchg
in
push
push
xor
iret
in
lret
add
pop
push
inc
adc
pop
scas
pop
jle
pop
dec
xchg
mov
ret
cwtl
push
sub
mov
mov
out
sahf
scas
push
or
stc
xor
fdivrl
andb
inc
sbb
pop
cmp
sbb
fwait
mov
js
andw
adc
adc
push
aaa
jbe
xchg
ljmp
pop
mov
cmc
mov
mov
mov
jb
mul
lods
inc
xchg
cs
pusha
lahf
mov
cmp
mov
out
dec
divb
push
fdivp
lret
scas
xor
imul
out
ja
inc
mov
aaa
adc
adc
fxch
dec
mov
cmp
ss
and
and
inc
inc
subl
clc
sti
push
adc
in
or
shlb
aam
dec
xlat
adc
inc
enter
and
xor
dec
hlt
cs
aad
xchg
cmp
call
or
and
inc
into
adc
in
je
cli
daa
sub
and
je
mov
dec
inc
in
add
cmpsb
dec
cmovns
push
push
ficomps
addr16
or
hlt
or
xor
std
sar
adc
xchg
fst
scas
das
ds
cmpsl
dec
xchg
push
insl
bound
dec
mov
sbb
stos
neg
jge
sbb
mov
fsubs
lock
xor
aaa
jmp
fnstsw
push
mov
je
scas
cwtl
shl
js
pushf
mov
outsl
mov
pop
inc
cltd
lock
ds
int
add
or
ljmp
add
adc
cmp
and
and
loopne,pt
pushf
cwtl
xchg
test
stc
and
pop
mov
nop
jl
loope
cltd
cmp
lcall
pop
insb
and
mov
jnp
push
loope
int
mov
mov
pop
jecxz
dec
jg
adc
or
imul
adc
mov
mov
mov
subl
jle
fldcw
cs
je
lret
js
mov
std
add
popa
xlat
fcoms
aaa
data16
pop
lahf
or
dec
mov
xchg
dec
cli
dec
mov
loop
mov
pop
cmp
adc
adcl
pop
mov
mov
fiaddl
pop
mov
mov
sbbl
lds
sub
loopne
in
sbb
xor
xor
movsl
aam
xor
dec
test
sub
in
dec
push
movsl
call
dec
insb
mov
pop
mov
push
mov
inc
lcall
insl
push
imul
sbb
lahf
mov
cmc
stos
das
and
leave
cltd
in
addr16
popf
mov
fnsave
adc
push
dec
jmp
repnz
push
lock
pop
mov
adc
jnp
test
into
je
mov
ror
dec
adc
mov
dec
sub
paddsb
xchg
xor
sub
shrb
fcomps
mov
jb
mov
aad
popf
cmpsl
mov
ret
fucomp
pop
pop
out
cmpsl
and
gs
out
fildll
pop
outsb
lahf
push
pop
inc
add
in
je
and
in
orb
stc
cli
cmpl
xchg
mov
xchg
xorl
out
or
pop
insl
addr16
mov
jbe
sahf
jl
fs
out
jecxz
and
dec
add
push
ja
xchg
mov
and
cli
movsb
sbb
ss
mov
add
inc
bound
shll
test
lods
sbb
mov
pop
inc
neg
fldenv
pop
leave
fwait
dec
int
xor
xchg
mov
pop
xor
pop
cmp
mov
stos
pop
and
int
pop
fisubs
jl
int3
sahf
lahf
adc
and
adc
dec
lret
sub
adc
outsl
jle
push
add
xor
or
pop
dec
jge
jl
lcall
cli
jbe
pushw
mov
mov
leave
mov
add
and
xor
jl
rorl
std
out
js
adc
jmp
dec
mov
jl
dec
cmp
mov
imul
popf
scas
insl
lret
xor
add
adc
mov
push
fidivrl
mov
lea
out
test
pop
mov
lods
addr16
mov
dec
repnz
dec
xor
fisubrs
scas
mov
mov
jo
shrb
xor
push
sbb
adc
cltd
aad
pop
fs
add
pop
stos
push
andl
xor
add
orl
push
rcl
in
call
cmp
adc
dec
mov
cmp
pop
insl
or
push
aad
loop
andl
fs
and
arpl
popf
loope
mov
enter
jbe
or
fs
pop
mov
inc
sti
ds
add
cltd
mov
repz
xor
pop
mov
out
pop
xchg
hlt
xchg
adc
adc
scas
mov
or
pop
dec
daa
dec
clc
jmp
sarb
jmp
inc
xchg
push
xor
jl
fisubl
outsb
inc
ja
pop
sub
shr
dec
inc
mov
pop
jp
jbe
js
sarl
int
loopne
stos
mov
fistps
push
add
xchg
outsl
aas
push
repz
inc
daa
add
arpl
inc
call
pushf
aaa
jo
sub
xchg
jb
out
test
icebp
xchg
xor
outsl
xchg
adc
dec
aad
in
frstor
dec
or
in
cmpb
and
sti
cmp
scas
sbbb
mov
fnsave
cmp
scas
mov
cmp
insl
into
dec
cmp
push
std
cmp
out
sub
fcmovbe
jns
mov
pop
cmpsl
lock
mov
outsl
popa
jmp
popa
cmp
in
hlt
pop
movsb
repnz
add
out
cli
and
sbb
and
push
out
xor
test
out
mov
hlt
out
dec
push
fs
insb
mov
daa
ret
dec
xlat
pop
add
inc
jnp
pop
jns
and
xor
dec
callw
shl
sbb
push
jb
mov
mov
int
push
dec
and
mov
mov
pop
add
adc
stc
push
int
cmpsl
daa
ds
scas
mov
movsb
adc
push
xor
xchg
cld
or
fs
or
add
sbb
or
inc
jo
push
notl
push
and
loopne
int
pop
lret
imul
enter
test
mov
add
xor
or
lods
call
jmp
pop
pushf
insl
sti
mov
sub
push
dec
cmp
xchg
mov
scas
idivb
aas
lret
xor
jg
rcll
xchg
xchg
stos
mov
xchg
or
ss
inc
or
gs
or
xchg
adc
mov
out
lds
mov
mov
and
into
xor
mov
pop
insb
mov
scas
addr16
mov
mov
outsl
popf
adc
jb
mov
ret
adc
sbb
xor
loop
cmp
lea
cmc
cmp
xchg
int
loop
sbbl
addr16
stos
xor
cli
adc
dec
xchg
mov
pop
dec
movsl
or
lods
jecxz
dec
jo
xchg
add
loop
add
inc
mul
icebp
inc
push
push
sub
and
cmp
cs
outsl
lcall
lret
addr16
mov
xchg
ret
mov
dec
dec
sarb
stos
xchg
scas
dec
and
mov
mov
loop
movl
aad
sub
push
fsqrt
add
dec
std
dec
testb
mov
pop
adc
adc
fnsave
jl
add
or
mov
aad
fs
add
sarb
cmp
mov
sbb
sti
sbb
out
mov
cmp
push
cmp
mov
or
xor
and
adc
enter
mov
popf
sub
nop
xlat
fxch
test
cmp
mov
lods
subl
inc
ljmp
pop
fs
aam
mov
mov
mov
fs
and
jle
pushl
inc
cmp
bound
dec
incb
imul
add
int3
add
repz
jnp
push
imul
xor
mov
push
cmp
mov
subl
cmpb
xchg
nop
push
adc
or
aam
xchg
stos
cmp
std
or
das
mov
xlat
fsubrs
int
aaa
inc
xchg
or
add
mov
loopne
dec
test
test
push
inc
out
test
pop
mov
inc
nop
mov
icebp
shrb
inc
xor
in
mov
pop
mov
hlt
sbb
mov
mov
sbb
lock
add
pushf
stc
idiv
sub
xchg
mov
and
mov
cmp
inc
aas
add
mov
int3
dec
jnp
stos
lock
push
jno
lock
pop
aad
sub
xor
cld
jo
mov
sub
call
jne
fistl
xor
les
sub
mov
mov
js
pusha
and
inc
punpckhdq
or
mov
inc
sub
and
in
stos
push
sub
ficoms
xor
mov
xchg
mov
jb
mov
inc
out
jae
clc
aad
pop
into
inc
pusha
xchg
xchg
test
sbb
sub
jae
adc
fwait
jg
sub
test
rclb
cld
inc
loopne
push
inc
jmp
and
int
or
leave
jp
pusha
ror
jp
ret
popf
into
imul
scas
sub
xlat
mov
or
test
sbb
mov
ds
outsl
pusha
dec
adc
loop
pop
mov
mov
lahf
repz
and
test
adc
inc
pop
fistpll
mov
xor
movsl
ss
mov
repnz
cwtl
rclb
loope
ret
jg
dec
gs
cltd
lcall
sbb
mov
jns
div
or
std
push
xchg
mov
stos
sahf
pop
fwait
xchg
in
pop
adc
push
cmp
sbb
and
push
leave
sarl
leave
insl
inc
mov
ret
pop
int
pushf
mov
out
sbb
imul
adc
std
and
adc
sbb
ret
jb
pusha
jbe
test
daa
xor
lods
push
push
mov
jnp
add
lahf
push
stos
mov
sti
arpl
fsubr
cs
dec
sub
fimuls
push
fisubs
arpl
hlt
push
jmp
mov
mov
xchg
xchg
popf
je
mov
jl
jnp
jo
sub
scas
jae
sbb
out
cltd
add
mov
test
jnp
mov
sub
cmp
nop
xchg
xor
inc
ss
imul
xor
xchg
push
sbb
fwait
outsb
fmuls
sti
adc
sbb
cmp
shll
hlt
nop
enter
cltd
mov
ds
dec
and
lret
outsb
xor
or
pushf
push
mov
stc
cmpsl
out
push
shlb
hlt
fs
push
cli
add
xor
sbb
test
out
adc
mov
cmp
lea
jb
nop
adc
inc
mov
lods
pop
jmp
lods
add
push
nop
cmp
insb
jg
xchg
and
ret
inc
and
xchg
mov
push
dec
into
xchg
add
daa
jae
pop
aaa
mov
enter
xor
push
mov
adc
and
incl
mov
movsl
xchg
xchg
or
lock
pop
xchg
in
subb
push
push
hlt
jmp
fisubrl
loope
dec
test
xor
mov
push
push
xchg
mov
xchg
push
gs
mov
xor
repz
arpl
xor
jno
mov
or
outsl
dec
outsb
push
jo
xchg
jae
stos
jne
ror
sub
test
push
sub
or
cmp
inc
push
hlt
jae
sbb
scas
std
inc
decb
cwtl
loop
scas
pop
pop
data16
lcall
mov
lret
ljmp
mov
pop
mov
xchg
fnstsw
fisttpl
imul
je
adc
sub
push
rorb
fsts
in
jge
rcll
das
push
jae
adc
jns
pusha
jmp
shlb
imul
sbb
lods
pop
push
pushf
dec
std
das
call
xlat
cmp
or
dec
pop
push
jl
inc
adc
add
std
lret
inc
cmp
aas
out
cld
bound
dec
xor
out
xchg
inc
sub
or
mov
repnz
orb
cmc
add
dec
mov
orl
pop
push
or
fildll
movsl
sbb
adc
rcl
adc
cmpsl
sbb
into
sbb
aas
add
rorb
add
imul
sbb
clc
push
negb
sub
jecxz
aam
dec
push
pop
xchg
pusha
sbb
jns
fwait
mov
loopne
and
aad
out
mov
or
fnstenv
xchg
sti
enter
add
mov
jg
popa
dec
popf
arpl
movsl
mov
sbb
test
sbb
ja
xchg
sahf
in
mov
ret
xchg
es
mov
sub
xchg
jl
xchg
pusha
dec
and
sahf
cwtl
mov
add
push
inc
sbb
push
testb
ret
and
xchg
nop
shl
lret
xchg
inc
mov
or
data16
cli
cmp
ja
add
jle
xor
mov
aad
sub
or
dec
popf
mov
jl
pop
mov
sbb
xchg
rclb
sub
js
jno
scas
jge
addb
or
cmp
xchg
adc
push
mov
inc
dec
adc
stos
nop
in
sub
insb
in
sbb
aam
cwtl
scas
lret
movsb
imul
jno
push
scas
lds
fcmovnbe
jo
loop
bound
mov
mov
stc
push
pushf
cmp
pop
mov
pop
adc
push
movsb
mov
sub
lret
jecxz
pop
lea
sbb
repnz
adc
cmp
data16
jns
sbb
add
scas
mov
iret
cmp
mov
pushf
lcall
jae
mov
insb
jge
outsb
inc
data16
je
push
pop
inc
cltd
sbb
adc
or
adc
movsb
or
aad
lds
xor
cmc
add
ljmp
add
data16
roll
pop
mov
aad
mov
xchg
in
out
out
xchg
sub
mov
push
jle
push
and
or
enter
imul
jecxz
lods
repz
mov
mov
inc
push
fdivl
and
jl
xor
aas
stc
pusha
lock
jno
aaa
rolb
sbb
popa
dec
mov
int3
mov
mov
jecxz
or
cmp
into
jmp
sub
pop
in
clc
ljmp
jbe
pop
cmpsl
mov
pusha
ds
ljmp
outsb
repnz
lcall
fnstsw
mov
xlat
dec
adc
and
je
inc
xor
out
testb
mov
jl
mov
fildl
adc
stc
adc
mov
xlat
push
add
jle
je
insl
shl
mov
pushf
and
xchg
push
push
sbb
and
and
insb
push
test
arpl
or
mov
mov
mov
call
aas
fwait
scas
cmpsb
push
add
iret
push
cs
cmp
data16
cltd
std
pop
mov
daa
sbb
pop
inc
loopne
inc
sahf
shlb
icebp
xor
jno
movsb
or
dec
test
push
jl
jl
or
adc
cmp
fisubl
dec
rcr
push
in
je
mov
sbb
test
xchg
std
loope
insl
sbb
popf
test
mov
cs
jecxz
mov
jp
sbb
mov
mov
push
jle
aam
mov
mov
popa
xlat
movl
fists
adc
xlat
iret
ds
xor
xor
sbb
cmp
shll
sysret
mov
scas
ja
inc
xor
rorb
mov
adc
sub
jb
repz
push
push
mov
aad
out
push
xchg
push
cmpl
lock
or
sub
mov
mov
xchg
sbb
pop
ljmp
dec
mov
push
imul
xchg
sahf
mov
pusha
pushf
push
xor
xchg
out
lahf
outsb
test
movsl
ss
push
lcall
and
sbb
fsubrs
dec
das
cli
lret
fisttpll
or
mov
sbb
mov
sbb
adc
repz
aam
jecxz
push
pop
mov
push
or
cmp
lret
mov
or
mov
inc
push
lret
lcall
sub
cmc
push
pop
mov
xchg
mov
pop
push
mov
jl
cmc
mov
xchg
je
xorl
xchg
divl
add
clc
repnz
push
push
xchg
ss
pop
mov
jbe
push
mov
outsb
sbb
jp
jecxz
inc
jg
push
adc
fcmovnbe
gs
and
adc
dec
sahf
scas
cmp
cltd
mov
xlat
add
mov
jecxz
or
stos
xor
or
jne
mov
popa
xchg
push
leave
adc
sbb
sub
hlt
lods
cltd
stos
or
mov
sahf
lock
sarb
enter
sarl
outsb
fisttps
in
inc
repz
mov
sub
mov
and
xor
js
mov
xor
fsubs
frstor
push
aas
scas
push
mov
int
sub
xchg
iret
rclb
xor
xchg
loopne
ret
minps
setl
clc
stc
hlt
aad
aad
repnz
punpcklwd
sbb
push
pushw
int
cmp
in
xor
dec
movzbl
out
mov
cmp
leave
xchg
mov
cmp
out
xchg
pusha
mov
jnp
cmp
bound
add
sub
xor
rcll
mov
into
add
push
nop
xchg
mov
mov
or
dec
outsb
sbb
adc
or
bound
xchg
mov
cmc
xorl
add
pop
out
lret
jno
stos
mov
add
lret
jmp
pop
iret
ret
push
jae
nop
cmpsb
bnd
xor
cmpsb
lahf
xor
dec
push
mov
push
es
notl
movsb
shlb
mov
scas
in
repnz
xchg
cld
test
sub
fidivrl
push
mov
js
cmp
adc
into
mov
lcall
inc
stos
js
sarl
out
dec
cmc
dec
xor
mov
bound
dec
jg
jecxz
out
pop
inc
mov
push
pop
mov
xchg
bound
or
xor
dec
mov
jg
fwait
in
ret
pop
shl
sub
xchg
hlt
bound
sub
test
adc
xor
or
xchg
pop
out
push
inc
clc
scas
sub
add
or
mov
arpl
dec
jp
mov
rclb
popf
cld
mov
stc
sti
push
sbb
push
mov
xor
or
rcrb
imul
in
mov
xchg
aad
xchg
inc
dec
orl
mov
sub
stc
xchg
adc
inc
and
sbbl
sub
pop
repnz
out
pop
int
push
add
xor
sub
daa
xchg
test
adc
testl
or
test
push
mov
imulb
mov
cmp
sbb
inc
mov
sbb
add
pop
or
in
out
aaa
push
in
orb
cmp
lds
push
jmp
cld
scas
mov
data16
andl
cmpsl
cmp
pop
test
xor
jge
dec
fdivrl
mov
adc
push
aam
xchg
inc
cmp
jmp
sbb
aaa
pusha
xor
pop
mov
jg
ficomps
clc
sbb
imul
ds
ficoms
xor
push
outsl
pop
push
or
idiv
pop
out
cs
je
mov
in
push
scas
insl
repnz
mov
das
inc
test
mov
pop
mov
push
dec
xchg
pop
loope
roll
subl
adc
xchg
scas
mov
inc
cwtl
pop
push
push
std
or
loop
pop
inc
inc
jg
in
xor
dec
push
outsb
fbld
les
inc
popf
cmpsl
jne
fmuls
inc
rol
aam
ret
lret
mov
lahf
subl
scas
or
inc
mov
std
inc
push
cmp
fsubr
mov
fsubrs
or
inc
jle
or
and
inc
mov
xchg
add
xchg
xor
call
setbe
dec
dec
fildll
push
dec
xchg
add
cmp
lods
or
xor
inc
jmp
inc
fadds
andl
imul
add
test
sub
sub
repz
jne
faddp
lock
cs
testl
pop
xor
std
fldt
cs
pop
sub
inc
cwtl
repz
xchg
push
jmp
pop
adc
pop
stc
xchg
add
xor
icebp
push
jmp
gs
gs
adc
push
ss
dec
or
loope
test
jle
push
dec
cwtl
xlat
jno
lds
xchg
sahf
and
sub
cltd
mov
and
mov
in
pop
fwait
dec
push
cmp
xchg
sbbl
in
xchg
pop
cwtl
inc
mov
leave
push
sub
sub
cmp
push
stos
in
and
test
popa
subl
jns
insb
shr
push
sbb
adc
inc
shl
or
push
xchg
xchg
mov
pushf
lock
xlat
push
cmp
nop
lcall
out
xor
cmpsl
mov
cld
out
pusha
rcrb
out
or
sbb
jne
push
mov
xor
stos
int3
sub
adc
subb
outsb
push
repnz
fsubs
or
sbb
lret
xor
repz
pop
es
mov
cmp
ja
insb
jmp
sti
test
adc
jecxz
mov
or
dec
mov
adc
into
pop
stos
out
pop
iret
pop
mov
push
sbb
sub
aaa
cmc
jne
out
mov
and
or
jg
daa
dec
and
addr16
jb
lret
sarl
pop
aas
mov
leave
aas
adc
jbe
lea
add
inc
push
xlat
repz
pop
andb
stos
sbb
mov
push
hlt
jle
movsl
lods
xchg
lret
fwait
mov
enter
outsb
xchg
fcoms
fstpt
ror
mov
and
xchg
jge
add
sahf
es
sub
fnsave
add
mov
jbe
or
enter
jns
jle
ficomps
mov
stc
ja
push
xor
lahf
sbb
dec
inc
ljmp
push
fimuls
scas
pop
mov
outsb
cmp
cld
mov
outsb
adc
fnstsw
jns
mov
and
js
sub
je
and
pop
sbb
js
push
in
psrlw
adc
jo
sbb
ret
dec
ret
push
arpl
adc
insb
pop
sub
sbb
adc
adc
or
mov
xchg
rcll
or
xchg
xor
pop
adc
and
mov
nop
add
into
sti
je
pop
pop
cmp
loopne
mov
inc
lcall
pop
je
mov
push
fs
inc
push
nopl
mov
xor
sbbb
jmp
sub
pusha
mov
loop
mov
cmc
dec
sub
ds
fsubs
ja
test
sub
jo
les
fisubrs
and
loop
addr16
clc
cmp
sbb
mov
popf
add
lods
insl
sbbb
cmp
out
mov
pushf
and
leave
push
rolb
addb
jmp
nop
insl
repz
in
xchg
nop
sarb
push
js
mov
test
fimull
jmp
mov
ds
scas
or
mov
loope
sarb
xor
sub
pushf
mov
btr
mov
push
push
mov
dec
ljmp
rcll
xor
es
clc
and
rorl
cmpsl
xor
cs
sbb
imul
add
in
mov
inc
stos
call
stos
stos
insb
insb
sbb
and
dec
xchg
popa
fldenv
pop
dec
dec
int3
fs
mov
adc
jnp
das
stos
fmull
pop
shl
dec
sub
inc
pop
out
cmp
rclb
cmp
daa
sbb
ss
mov
mov
sbb
popa
jmp
out
fadd
movsb
sbb
push
dec
jg
push
sahf
mov
das
inc
push
fs
fs
mov
jle
jg
pop
sbb
ja
outsl
add
test
fs
sub
sbb
mov
dec
lock
push
mov
mov
addr16
fdivl
pop
sbb
test
int3
fnsave
dec
insl
xor
gs
fs
pop
push
mov
stc
xchg
ficoml
fdivrl
aam
cmpsb
xchg
repz
and
xchg
cmp
jp
imul
repz
add
mov
dec
dec
stc
jg
push
ror
rcrb
pop
xor
idivl
mov
mov
out
and
sbb
je
cmpsl
fisttps
sub
imul
and
iret
pop
clc
movsb
pop
fwait
dec
gs
pop
sbb
clc
push
test
adc
inc
pop
int
scas
mov
daa
pushf
divl
ret
dec
pop
sub
out
push
fsub
fs
push
pop
into
movsb
mov
stos
xchg
inc
int
pop
inc
xchg
popf
aaa
cld
cmc
inc
leave
add
push
inc
sysret
sahf
xchg
pushf
sbb
in
xor
adc
mov
push
mov
fildl
ror
int3
jne
adc
sti
es
test
je
lea
ljmp
out
andl
jbe
xorb
mov
popa
sub
mov
loop
inc
adc
shll
shl
seta
repz
mov
imul
fs
mov
push
imul
sub
das
xchg
sub
push
fwait
int3
add
ja
mov
outsl
enter
push
xor
push
lcall
jg
dec
bound
sub
and
imul
frstor
sub
ret
mov
xor
pop
jl
jno
adcl
cld
and
lahf
fst
out
ret
pop
stos
lahf
leave
xchg
std
adc
adc
ret
or
pop
ds
ja
xchg
add
push
ffree
fs
jmp
movsb
sbb
and
mov
inc
enter
je
dec
loopne
pusha
cmp
mov
fmul
push
loopne
xor
mov
pop
int3
imul
jae
mov
xor
fwait
or
cmp
add
mov
jle
sub
pop
dec
dec
mov
lahf
pusha
xor
clc
arpl
dec
repz
in
js
loope
add
jle
test
out
and
mov
xlat
cli
jnp
mov
imul
cmp
or
lret
lods
mov
flds
insb
inc
push
inc
dec
push
sbbb
pop
aam
int
adc
and
bound
lea
testb
inc
mov
outsb
bound
push
in
fdivrs
jnp
pslld
fbstp
pop
pop
dec
xlat
mov
and
mov
cmpsl
sub
das
ljmp
inc
test
xchg
addr16
push
frstor
push
xchg
or
inc
pop
hlt
jb
jbe
idivb
xlat
jle
push
rolb
jle
push
loope
loop
shrb
mov
cmc
sbb
lods
je
inc
lds
mov
xor
xchg
inc
xchg
pushf
mov
in
jmp
mov
movsl
mov
call
dec
jae
cmp
out
inc
xchg
dec
adc
fwait
fwait
mov
cmc
adc
jo
inc
imul
sti
lods
fsubs
adc
lahf
shll
mov
jne
arpl
adc
ds
repnz
ss
xchg
add
sub
andl
sbb
jae
int3
ds
inc
ja
mov
cmp
lock
repnz
fsubs
cmpsl
xor
icebp
rcl
mov
mov
xchg
data16
into
nop
adc
in
pop
xchg
dec
push
or
bound
push
lea
xchg
xchg
xor
and
mull
sub
dec
loop
fucomp
rcr
xor
jne
lock
cwtl
movb
inc
xchg
sub
scas
in
imul
jnp
lret
xor
cltd
sub
dec
jno
push
fmuls
adc
repz
rolb
xor
scas
sub
and
push
or
or
in
mov
adc
xor
icebp
repz
test
dec
push
inc
insl
movsl
pop
rcll
outsl
sbb
and
jp
fcompl
and
xor
repnz
mov
and
mov
xor
orl
dec
mov
rcrb
icebp
sub
roll
pusha
sbb
pop
rcl
fs
bnd
adc
ss
incb
out
in
bound
dec
aas
cwtl
mov
iret
ds
adc
in
sub
push
cmc
mov
ljmp
sbb
nop
enter
stos
xor
insl
pop
fs
inc
xlat
jno
push
fisubs
mov
orl
ss
or
test
and
and
pop
mov
stc
cs
xchg
pushf
js
addr16
mov
cli
leave
pop
dec
outsb
sarb
add
scas
or
jno
adc
pop
sahf
inc
movsb
mov
mov
popa
mov
push
jle
cmpsb
sbb
cld
mov
in
daa
stos
rclb
xor
imul
popf
insl
cwtl
jmp
outsl
sub
addr16
mov
lock
dec
lock
lahf
sbbb
les
shld
lcallw
std
xchg
mov
push
out
insb
stc
clc
mov
mov
mov
or
push
jl
outsl
mov
inc
xchg
add
pop
cmpb
mov
sbb
movl
shlb
inc
rcrl
fdivrl
push
loop
lret
add
mov
pop
scas
pop
mov
push
scas
xor
add
pop
mov
scas
fstpl
push
adc
mov
cs
mov
and
test
adc
sti
fiaddl
mov
out
ds
lock
mov
scas
ja
sbbl
in
sub
fwait
in
fmull
mov
fistpl
scas
incl
mov
dec
insb
cmpsl
jb
mov
loope
hlt
out
je
mov
sbb
mov
mov
cmp
cwtl
mov
xchg
lret
add
shrb
cmp
add
pushf
lock
add
mov
jp
dec
and
jge
cmp
ret
sti
and
mov
pop
sbb
ja
pop
add
daa
lret
sahf
fstpt
ret
dec
movl
fwait
mov
hlt
lret
add
fs
cmp
cmpsl
lods
dec
into
test
jle
insb
cmp
or
je
sbb
sub
out
mov
mov
pusha
leave
xchg
push
dec
test
pop
sbb
pop
pop
xor
out
push
insb
movsb
dec
xlat
cmp
inc
mov
cmc
inc
ret
add
loopne
cmp
ss
jno
xor
scas
mov
lods
mov
or
mov
push
test
lods
add
push
mov
fadds
rclb
fdiv
xchg
out
das
std
clc
out
std
mov
in
lret
or
cli
mulb
push
arpl
rcrb
mov
leave
ds
push
mov
mov
push
or
cltd
mov
in
or
out
mov
loop
mov
jmp
loopne
or
push
lds
loopne
dec
jnp
mov
pusha
test
push
or
sbb
cwtl
daa
add
add
or
outsb
enter
aad
lret
xor
and
dec
pop
or
icebp
xchg
and
xor
sti
cli
fstl
aas
insb
repnz
into
shrb
loope
bound
mov
into
sub
inc
stc
mov
xor
loopne
dec
out
daa
in
sbb
push
xor
jp
sti
xor
out
push
shlb
mov
pop
icebp
shrl
gs
pop
and
xchg
and
and
xor
cwtl
adc
flds
mov
jmp
inc
adc
mov
push
inc
mov
push
xchg
pushf
jne
mov
xchg
out
xchg
dec
or
dec
loope
out
in
sub
jbe
pop
mov
add
jl
lea
bound
pusha
push
mov
dec
xor
rorb
or
dec
cmp
pop
cwtl
jmp
inc
cli
outsl
add
movsl
mov
sbb
lcall
jno
and
dec
push
cltd
sbb
test
mov
sbb
pop
leave
jne
sarb
mov
lret
stos
mov
out
or
ss
das
adc
in
push
push
jno
jle
push
push
lock
inc
cmp
rorl
jecxz
inc
sub
cmp
jo
sbb
inc
aad
lods
cmpsl
xor
notl
cmc
not
cld
dec
aam
outsb
cmp
push
push
xor
cmp
pop
push
inc
aad
fs
dec
out
xchg
ja
xchg
lock
cmc
les
mov
xchg
stos
ss
xchg
rorb
cmpsb
xor
wrmsr
popa
dec
hlt
leave
cmpsl
lahf
adc
fmuls
rcrl
mov
repnz
pop
fsubr
sbb
and
xchg
daa
and
shr
cmp
pop
xchg
jo
xor
push
mov
dec
shlb
int
mov
movsl
in
clc
sbb
in
loope
mov
mov
inc
orl
lret
jecxz
inc
cli
adc
mov
mov
inc
popa
sub
enter
loopne
aam
or
sub
mov
adc
jne
enter
call
inc
mov
test
fmuls
lret
xchg
and
mov
xor
sti
das
sub
pop
xchg
mov
jae
push
jo
add
cmp
cmp
insl
and
mov
sti
test
scas
imul
lock
jno
scas
shll
xchg
mov
jo
fists
push
andb
jno
std
sub
cmp
loop
xor
cmpsl
add
xchg
adc
sub
push
les
aad
xchg
ljmp
jle
cld
inc
les
push
jo
xchg
lcall
in
scas
xor
mov
sti
sub
ja
and
mov
jo
cld
mov
jno
out
and
sbb
push
adc
push
int3
cmp
adc
in
push
bound
shr
jns
aam
add
ret
enter
fsubrl
int3
and
mov
dec
xchg
cmpsb
cmpsl
xchg
stc
sahf
out
push
nop
jmp
sbbl
pushf
testl
mov
and
push
lods
pusha
test
jno
sub
fstps
pop
testb
mov
test
fwait
xorl
repz
dec
pop
pushl
add
dec
scas
push
or
loope
add
xchg
outsb
push
add
daa
pop
push
sti
pop
shl
imul
jnp
cmp
push
push
jne
mov
sbb
sbb
mov
test
xchg
stc
adc
push
imul
fstp
enter
push
cli
aaa
push
je
add
stos
data16
mov
cmpsl
int
rclb
jg
in
mov
imul
xchg
sub
ret
es
aad
inc
xor
shl
mov
pushf
std
dec
push
add
add
xor
out
cmp
mov
lods
inc
ljmp
mov
std
jo
in
bound
mov
push
xchg
int3
and
dec
add
nop
lret
sub
nop
jmp
scas
fwait
inc
xchg
xchg
cmp
stc
imul
movsb
idivb
out
add
cs
inc
mov
sbb
repz
test
jbe
mov
lea
sahf
inc
in
aam
clc
xchg
jmp
mov
xchg
xor
xchg
jo
or
sub
push
outsb
or
sbbl
adc
lds
jne
sub
mov
imul
in
repz
cmp
push
push
push
mov
pop
sbb
stc
popw
mov
imul
pop
mov
or
pop
mov
fsubl
add
mov
div
cli
divl
or
mov
aas
cmpsb
pushf
and
in
mov
in
mov
clc
loopne
les
pop
inc
add
repz
fisttps
sub
dec
loop
jo
ds
push
adc
push
out
mov
xchg
repz
push
lret
mov
xchg
pop
jge
fildl
in
push
sarb
mov
icebp
data16
lret
js
aad
xchg
sti
inc
cmp
sbb
sub
cmc
fmull
outsl
mov
orps
inc
pushf
pop
sub
jmp
or
in
ret
dec
push
lods
loope
jb
jl
dec
cmp
mov
jb
popf
mov
adc
push
cmp
rolb
lds
fcompl
xor
iret
cld
sub
jo
and
imul
loopne
cmc
and
mulb
rclb
xor
jg
fs
lcall
adc
mov
adc
sub
cli
ret
fwait
js
pop
sbb
cmp
xor
pop
cltd
shrb
daa
mov
inc
lahf
addr16
sub
push
jl
push
dec
aas
xchg
jmp
ja
enter
xor
ss
lods
xchg
or
xor
not
stos
cld
sub
or
add
cmp
repnz
sbb
pop
orl
bnd
inc
mov
fwait
pop
jnp
test
test
push
mov
inc
lcall
out
ret
insl
fs
and
out
xor
dec
mov
mov
push
sbb
or
jne
and
jb
fisubrs
lods
cmp
rol
push
les
lcall
gs
push
dec
jle
imul
stos
lods
gs
add
fucomip
ds
sub
inc
arpl
push
mov
inc
js
addb
es
and
fdivr
incb
mov
cmp
mov
iret
mov
jp
or
rcl
or
mov
into
test
and
xor
jnp
xchg
ss
fdivrs
arpl
mov
push
pusha
subb
xchg
cmpsl
mov
je
jmp
adc
bnd
testb
pcmpeqd
and
scas
hlt
mov
mov
push
lcall
pop
push
xor
or
flds
fldt
xor
sbb
ljmp
lret
mov
push
push
in
jl
loope
pop
mov
pop
sbb
in
test
dec
arpl
xor
xlat
sbb
push
aaa
push
add
push
mov
in
nop
inc
iret
mov
popf
mov
cmc
xchg
jbe
daa
push
mov
jbe
popf
mov
add
xor
push
loop
xlat
add
jecxz
movsl
mov
push
insb
and
fwait
cltd
or
jbe
push
cmp
imul
fimull
xchg
mov
mov
es
cmp
outsb
into
insb
xor
out
lea
ja
pushf
mov
mov
in
rcrl
rol
outsl
imul
mul
sti
xchg
or
inc
in
aas
sub
cmc
dec
push
div
inc
mov
dec
and
lahf
xor
mov
adc
mov
jo
cmp
xchg
dec
mov
add
mov
jg
xchg
push
stc
push
addr16
inc
jp
jne
mov
xchg
ror
bound
aaa
pushf
out
xlat
cld
jo
lahf
lods
mov
bound
aam
ffreep
addr16
cmp
das
in
xchg
jge
cmpsl
sbb
jge
fstpl
in
icebp
cmp
add
cmp
daa
xchg
mov
les
mov
sub
adc
incb
enter
cs
fdivl
stos
lcall
mov
dec
cld
shll
jmp
fistps
or
add
icebp
mov
mov
scas
ror
lock
cli
sub
jge
and
lds
cld
push
imul
pusha
les
dec
in
xchg
adc
cmp
push
mov
jmp
hlt
stos
int
xchg
dec
int
mov
or
out
sub
mov
mov
in
xor
push
and
test
add
and
nop
mov
icebp
sti
aam
in
lret
add
movsl
xchg
jecxz
outsl
sub
lret
pop
mov
pop
add
and
dec
dec
fildl
pop
pop
sarl
pop
jno
enter
pop
out
scas
and
mov
and
xchg
push
dec
mov
adc
and
mov
jle
and
sahf
hlt
std
push
sub
popf
popa
xor
xor
cmp
cmp
lock
rorl
cmp
cmp
popf
and
pop
scas
xlat
add
sub
popa
mov
push
ret
pop
js
jge
repnz
adc
sbb
mov
xchg
add
mov
mov
hlt
mov
cmp
push
and
pusha
sub
in
or
pop
pop
bound
jmp
adc
les
out
xchg
subl
mov
push
sarl
mov
movsb
cld
repnz
stc
ja
in
cli
push
jl
stos
dec
fwait
xchg
stos
ret
sbb
cmp
xchg
lods
clc
mov
xchg
popa
jge
icebp
xchg
sbb
xchg
or
gs
stc
xor
mov
mov
iret
nop
or
mov
cmp
out
sub
push
pop
outsb
jmp
pop
ret
lock
adc
mov
dec
mov
cwtl
ljmp
aam
lahf
jmp
fs
int3
dec
addl
push
fwait
sahf
insl
jnp
pop
jnp
pop
ffreep
add
lock
orb
xchg
mov
pop
push
fcoml
mov
ss
scas
and
push
popa
jnp
xlat
inc
ficompl
bound
sub
pop
cmp
sub
insl
cmp
or
dec
or
push
lods
mov
xchg
fcoml
loop
jecxz
cmp
sbb
out
inc
xchg
sub
sbb
push
xor
jns
dec
jbe
mov
add
mov
and
pop
mov
in
into
dec
icebp
jp
sbb
sub
and
mov
sub
mov
and
push
push
movsb
fstpt
mov
dec
jle
push
push
jge
lods
stos
cltd
mov
cmp
clc
cmc
test
pop
sbb
push
cmp
sub
pop
rorl
jmp
sbb
or
cmp
pushf
jbe
nop
mov
push
xor
xchg
aam
jne
push
push
adc
ja
xchg
xchg
nop
in
push
inc
enter
notb
das
xor
int3
inc
cs
xchg
mov
mov
fisttps
pop
lods
dec
sbb
mov
sbb
fcomps
stos
or
aaa
cmpsb
jne
mov
jmp
mov
adc
das
xchg
sti
in
cmp
clc
add
mov
cmp
cmc
cmp
addr16
add
repz
push
mov
pop
lock
lea
dec
mov
rcll
or
inc
mov
sarl
or
negl
inc
push
sbb
js
and
decl
popf
rorb
adc
in
in
and
mov
neg
fldcw
or
dec
jg
mov
cmpsl
inc
clc
pop
shr
loop
lds
int3
stos
popa
loop
cld
and
rorl
lcall
inc
repnz
jmp
xchg
outsb
sbb
xor
call
mov
add
lods
dec
sub
out
adc
mov
dec
int3
iret
xor
sub
ret
cmc
adc
jne
test
lret
arpl
mov
fisubrs
je
xor
dec
adc
imul
addb
jge
jnp
cmp
fwait
addb
mov
stc
ret
add
and
push
mov
icebp
dec
std
insl
mov
lods
push
sahf
pop
adc
scas
jle
dec
mov
mov
movsl
inc
mov
xchg
sbb
lods
lods
push
jge
jecxz
mov
lock
jmp
in
test
test
sub
sbb
inc
mov
adc
jmp
bound
imul
imul
jbe
insl
pop
enter
std
dec
add
sbb
cmp
adc
mov
add
in
inc
add
and
cld
and
pop
mov
daa
outsb
jl
inc
jge
fnstsw
dec
aaa
stos
pusha
call
xor
shl
jo
aam
lcall
push
pop
and
scas
inc
sbb
scas
pop
popf
aas
jne
pop
xchg
daa
cmpl
and
addb
xorl
push
or
add
popf
repz
xlat
sbb
inc
pushf
ss
enter
cmpsl
repnz
ds
xchg
aam
jl
push
scas
or
cmpsl
xor
call
shl
inc
orl
orl
je
mov
out
add
jne
dec
push
mov
test
pushf
rorl
inc
and
sub
add
idiv
cmc
scas
mov
dec
mov
jecxz
xchg
mov
jmp
fmull
rcll
ficomps
mov
sbb
cmp
popf
add
dec
sbb
mov
pop
adc
andl
mov
scas
icebp
push
pop
cwtl
call
repnz
in
sub
lea
repnz
dec
out
iret
mov
insl
lret
in
lock
adc
clc
repz
xchg
or
test
mov
xchg
or
loope
mov
adc
push
cmp
in
stos
mov
mulb
add
je
sarl
xor
mov
insb
push
insb
adc
xor
es
fdivl
in
inc
fisttps
jecxz
mov
fistps
mov
pop
mov
es
gs
js
rclb
xor
push
rcr
mov
fildl
hlt
mov
dec
pusha
xor
adc
xchg
xchg
dec
pusha
cwtl
lret
adc
xor
sub
outsl
lea
shlb
pop
xor
cld
loope
inc
js
fldt
repz
add
movb
mov
icebp
icebp
out
and
shll
adc
pop
mov
cmp
incb
out
fwait
ret
insb
push
jg
sub
inc
shr
push
xchg
lock
mov
mov
dec
xchg
jl
cmp
pop
sbb
cltd
clc
jge
fdivs
lods
stos
out
test
leave
xor
sahf
rcll
adc
fwait
in
jg
aaa
inc
fstpl
fidivrs
out
mov
test
cmp
lea
scas
std
mov
xchg
fs
mov
loope
dec
jbe
nop
xor
lds
mov
fwait
pop
lock
popf
pop
js
scas
push
scas
xlat
push
hlt
out
cmpl
rcl
xlat
add
aam
or
sbb
xor
in
in
mov
cltd
or
pop
rorb
cmpsb
sub
fidivs
rorl
jge
pop
lret
cld
pusha
push
or
orb
xchg
adc
cmpsb
sti
pop
sbb
shlb
dec
inc
rcl
ret
es
setle
movsb
das
xlat
add
inc
push
icebp
mov
push
les
pop
sbb
aaa
pushf
xor
call
loop
outsl
push
pop
insl
popa
gs
mov
xor
jmp
lods
push
ljmp
and
push
push
xchg
cmpsb
fmulp
xchg
cmc
mov
adc
out
mov
mov
xchg
pop
jb
in
pop
lcall
or
imul
pop
mov
pop
xchg
pop
dec
cs
mov
or
rol
sbbb
pop
pop
jmp
rcll
ds
mov
push
fildll
push
ror
dec
mov
in
into
adcl
pop
and
mov
cmp
or
aas
shll
jne
push
mov
sahf
push
iret
adc
lret
fs
sub
mov
cwtl
in
jno
popa
hlt
lcall
jae
xchg
movsb
dec
or
daa
sbb
out
mov
lea
jae
xor
add
xchg
scas
mov
pop
js,pn
jg
sub
lret
std
push
test
bound
push
adcl
fldenv
rcrb
pop
push
xchg
jl
pop
pop
call
dec
pop
ror
jae
push
stos
data16
ffree
adc
loope
adc
inc
rcll
cmp
mov
js
int3
orb
jae
add
lret
dec
repz
dec
sahf
fcoms
mov
pop
sbb
jne
sub
xchg
jmp
icebp
mov
jle
movb
out
mov
push
pop
or
sti
leave
push
push
xor
mov
sbb
pop
stos
push
mov
inc
cltd
rclb
inc
lds
pop
xchg
sbb
jnp
addr16
insl
jmp
push
and
push
or
test
sbb
dec
mov
repnz
pop
lods
ljmp
ljmp
mov
test
pop
jns
push
pop
iret
jge
xchg
cli
adc
dec
sbb
push
into
pop
and
lcall
pop
dec
fmul
xchg
xchg
cmp
lret
sbb
xor
sbb
out
jns
inc
mov
mov
fildl
xchg
jl
mov
lahf
push
jge
movsl
and
jle
aad
shr
cmpsl
sub
aad
ja
mov
push
aad
rcrb
cmp
test
ret
fiaddl
push
mov
xchg
or
push
je
mov
movsb
dec
lret
push
xchg
movsb
ret
sbb
jp
div
std
mov
jp
or
stos
pop
out
rcrl
dec
clc
or
cmp
scas
repnz
mov
lahf
aad
test
jo
out
xchg
mov
jle
sbb
out
enter
data16
sti
add
insb
add
inc
call
push
movsl
jp
repnz
cmpsl
gs
std
mov
add
adc
inc
push
mov
sti
mov
leave
xchg
pop
push
sbb
adc
jg
push
jmp
jmp
pop
mov
test
jno
gs
out
insl
inc
dec
mov
data16
ficoml
aad
pop
sub
hlt
ret
push
fstps
dec
mov
inc
lock
push
or
inc
repz
fsubrs
pop
call
into
lcall
pop
and
add
mov
jno
jbe
mov
mov
cmp
push
nop
bound
insl
pop
lods
insb
mov
add
sbb
cmpsb
xor
push
lods
fbstp
xchg
popf
xchg
int3
frstor
sub
rcrb
test
add
arpl
jecxz
lds
aas
ret
and
xchg
xor
stos
loope
in
int
mov
jns
fidivrs
cmp
mov
adc
dec
push
mov
jae
test
dec
push
xor
add
dec
sbb
data16
adc
pop
fcmovnbe
cmp
adc
pop
dec
xchg
push
mov
loope
enter
xor
xchg
ret
dec
sub
in
push
loop
mov
popf
push
ljmp
lea
push
data16
rcrb
test
je
sub
xchg
xor
subl
mov
scas
lock
popf
mov
icebp
jge
pop
adc
add
shll
bound
mov
inc
or
cld
sbb
push
lcall
sbb
out
xchg
xor
xchg
cmc
push
shl
repnz
stos
fwait
sub
movsl
pop
mov
add
push
dec
cmp
and
push
jecxz
in
loope
cmp
aam
ljmp
out
or
push
and
push
fs
stos
aam
sarl
cmpsl
bound
lods
adc
pop
or
js
popl
cmp
hlt
mov
iret
andl
ds
fbstp
jbe
cmpsb
mov
lahf
dec
sbb
out
mov
push
jb
fstl
imul
or
mov
pop
push
fbld
add
or
out
rcrb
arpl
jp
mov
fs
cmp
or
pop
fdivp
and
mov
sub
cmp
cmpsb
pop
sbb
into
enter
push
push
rcrl
in
cmp
loopne
and
mov
lcall
leave
push
jg
jl
or
aam
mov
sub
pusha
push
sahf
cld
xorl
xor
data16
and
orb
sahf
dec
data16
sub
pop
add
mov
mov
adc
fsubrs
lret
mov
out
mov
mov
jne
test
aam
sub
xor
leave
rcrl
sbb
cwtl
sbb
roll
adc
dec
and
and
mov
or
and
sbb
pop
add
pop
je
loop
mov
cmpsb
and
mov
loope
test
scas
xchg
test
lcall
clc
jge
mov
xor
sbbl
in
push
mov
imul
aas
adc
pop
sub
push
and
ret
and
push
dec
pop
jg
stos
in
leave
pop
dec
jns
push
cmp
mov
mov
add
arpl
addb
dec
dec
in
fidivrl
inc
inc
sbb
xchg
loop
loope
imul
aas
jge
and
lea
fadd
push
stos
outsl
in
or
sahf
mov
sub
fidivs
aas
cmp
cmp
in
outsb
adc
pop
bound
xor
xchg
dec
mov
out
scas
cmp
xchg
sub
sbb
icebp
adc
and
sub
stos
xchg
xchg
pushf
inc
lret
mov
pop
psubusw
hlt
or
leave
in
push
rcrl
aam
or
ja
xor
or
scas
mov
mov
aas
mov
scas
hlt
cmp
mov
cltd
imul
sbb
mov
mov
mov
jae
xchg
popa
subl
cmp
push
or
add
and
jne
pop
popf
es
xor
out
pop
sub
pop
cmp
fsubrp
mov
lahf
pop
nop
lods
nop
xchg
mov
dec
add
insb
out
fwait
leave
aaa
sbb
sar
fcmovnbe
mov
cmpsb
cmpsb
push
call
inc
icebp
movsl
add
fstl
leave
mov
insb
fldcw
adcl
lods
js
push
in
jnp
fnstsw
jecxz
or
pop
seto
push
xor
lcall
xor
pop
jmp
cmpsb
inc
mov
add
cmp
pop
inc
out
inc
inc
or
or
pop
lea
xor
shrl
pop
sarb
dec
dec
gs
pop
sub
xchg
push
pushf
push
adc
scas
sbb
cli
int3
in
xor
xor
mov
mov
out
shrb
push
xor
push
jb
mov
xchg
shrb
bnd
bound
repz
pop
inc
rcrb
mov
mov
dec
pop
xor
dec
aas
mov
and
outsb
cltd
nop
dec
sbb
repz
andb
mov
arpl
and
mov
and
fistl
loop
bound
popf
sub
sub
and
daa
jle
imulb
push
aad
jmp
loopne
cmp
aad
inc
ret
loope
mov
and
xchg
je
je
add
sub
jecxz
ja
add
dec
stc
aam
mov
sub
mov
jmp
pop
pop
mov
sbb
xchg
pop
xorl
inc
pop
js
jl
ljmp
insl
jp
out
repz
mov
and
shlb
jb
jmp
sbb
test
push
test
jp
sbb
dec
lret
cmp
dec
repnz
push
aas
pop
push
psraw
ret
push
mov
lret
je
imul
loopne
enter
icebp
xchg
leave
xchg
cltd
rcl
push
sub
mov
pop
xor
dec
outsl
pop
test
inc
cmpsb
mov
pop
sahf
mov
fisubs
mov
mov
or
cmp
xlat
inc
push
xorl
insl
ljmp
jg
mov
scas
mov
adc
jbe
xor
xor
mov
es
dec
pop
add
lock
fistl
jl
enter
pushf
sarb
daa
xchg
or
jne
pop
scas
mov
ja
adc
and
fimull
push
xor
xchg
lds
in
addl
ss
imul
xor
add
pop
enter
jnp
ffree
enter
mov
stc
push
pusha
insl
loope
push
and
pusha
mov
mov
cmpsb
lds
push
dec
clc
sbbb
stos
or
mov
std
adc
out
popa
pop
das
dec
pop
jg
push
jge
arpl
leave
in
in
jle
jl
mov
xchg
push
xor
adc
loope
stc
inc
scas
and
push
scas
push
hlt
mov
sub
out
mov
cmp
pop
cmc
adc
in
insl
sbb
or
cmp
pop
dec
xor
jl
xchg
test
dec
lret
jnp
push
mov
xor
push
es
mov
stos
mov
ficoms
cmp
xchg
push
dec
insl
aad
jl
mov
sbb
ljmp
aam
addr16
adc
shll
repnz
out
mov
sbbb
mov
adc
mov
pop
jp
xchg
loopne
popa
add
jbe
loopne
and
lea
jle
int
dec
insb
jge
push
xchg
aad
les
mov
sarb
fisubl
sbb
mov
rcrb
notl
ss
or
mov
lahf
jle
sbb
in
mov
ret
wrmsr
xor
mov
pusha
dec
neg
test
inc
mov
scas
cmp
test
xchg
push
test
test
jecxz
sub
jl
outsb
inc
fbld
sarl
lcall
nop
xchg
xor
cmpsb
xchg
add
outsb
push
sub
mov
xchg
fbld
cmp
imul
ffree
and
js
rorb
push
mov
pop
cmpsb
push
pop
mov
xchg
fildll
test
clc
repz
lret
pusha
test
jle
stos
adc
push
push
test
in
in
push
fst
rclb
pop
test
loop
sbb
test
iret
out
insb
js
xor
add
js
aaa
jmp
sbbl
hlt
loopne
sti
fs
inc
aad
add
or
stc
pushf
sbb
icebp
popa
out
jp
jo
add
mov
fs
dec
jbe
cmpsb
xchg
jp
ret
xchg
testb
add
lret
mov
push
imul
fsub
inc
xchg
in
sub
jl
add
mov
mov
cmpsb
fldt
or
cmp
daa
cmpsb
xchg
in
clc
test
lahf
lcall
dec
pusha
dec
insb
mov
fptan
int3
repnz
dec
inc
jecxz
pushf
lea
cmp
push
adcl
sbb
lods
test
pop
push
xlat
jbe
push
xchg
test
test
lret
nop
aad
inc
test
in
hlt
mov
out
jge,pt
or
sbb
add
pop
js
adc
cmpsb
or
sarb
ja
push
data16
lret
ret
pop
test
in
or
inc
enter
movsb
scas
repnz
mov
scas
adc
gs
dec
fcoms
outsl
sbb
inc
ja
in
jns
cmp
lret
xchg
and
pusha
mov
mov
pop
add
cmp
repnz
aad
test
cmp
adc
adc
andb
add
lahf
js
push
xchg
inc
adc
or
dec
shlb
mov
test
test
jne
ret
inc
ja
mov
and
dec
xor
mov
repnz
mov
lods
movsl
fcomi
popa
cltd
cmpsl
addr16
jle
mov
addb
and
mov
pop
mov
xchg
sbb
stc
stos
cli
rolb
lcall
mov
imul
pop
scas
loopne
jns
out
xchg
ret
inc
and
ja
add
and
push
fisubl
and
xor
sub
xor
add
mov
add
jl
and
std
jns
call
pop
mov
jg
or
inc
inc
jns
xrelease
mov
pop
cmp
mov
dec
stc
mov
sub
and
das
sub
scas
jae
jl
shrl
mov
jns
ss
xchg
dec
and
push
sbb
xor
add
jnp
sub
ret
or
add
jecxz
jnp
sub
mov
pushf
rcr
ljmp
add
out
roll
cmpsl
gs
lret
movsl
add
dec
cli
mov
lret
mov
repnz
sub
jbe
popf
or
lahf
test
loopne
jp,pn
cmp
mulb
aaa
into
mov
push
xor
in
outsb
pusha
mov
imul
pop
and
fbld
imul
out
add
mov
hlt
xchg
sub
faddl
xor
sbb
mov
or
mov
push
bnd
addl
subb
pop
push
and
jb
pop
mov
shrb
add
out
adc
bound
notl
loopne
lds
adc
ret
pause
push
jo
dec
hlt
insb
xor
iret
inc
and
mov
hlt
inc
shll
into
hlt
jno
out
ds
cld
fs
sub
imul
out
hlt
sbb
fucomi
imul
xchg
ffreep
inc
sbbb
dec
pop
pop
pop
xor
sbb
sub
notl
loop
jo
pop
inc
test
cmpsl
sbb
mov
mov
cs
sub
sub
cli
push
jle
mov
scas
inc
sar
shlb
rcrb
in
out
mov
lock
movsl
xlat
scas
inc
arpl
sub
insb
pop
repnz
fldl
sbb
dec
in
sub
pop
lcall
inc
in
pop
dec
jecxz
cmp
cmpsl
or
idiv
and
add
sub
insb
mov
shl
sbb
add
jo
lods
dec
and
pop
clc
push
stos
pop
out
mov
push
push
bound
jns
adc
ficoms
leave
fldl
push
dec
cli
sub
test
push
mov
and
mov
and
xor
lea
iret
mov
pop
stos
mov
je
cmp
in
ljmp
out
daa
out
inc
fs
cwtl
push
adc
es
jmp
psadbw
jl
scas
popa
mov
gs
or
adc
jns
jnp
mov
sbb
popf
xchg
push
add
xchg
test
test
sbb
mov
xor
cltd
test
stos
xchg
fcmovnu
mov
lret
cmp
cli
mov
iret
push
mov
pop
scas
sub
and
test
mov
push
xchg
stc
pop
lods
imul
cltd
es
sub
push
cltd
mov
cmp
and
mov
lret
xchg
jle
xchg
jl
in
inc
mov
fldz
sub
or
jne
xchg
fisubrs
push
and
std
xor
fucom
xchg
test
ds
mov
nop
xchg
mov
iret
int3
mov
inc
cli
jg
mov
mov
push
aas
je
movsl
sub
xchg
or
fstpt
notb
cmpsl
pop
mov
jbe
push
shrl
mov
bound
test
xor
add
mov
jp
fimuls
aad
cmpsb
push
sbb
repz
fnstenv
iret
call
mov
arpl
pushf
into
adc
add
daa
sbb
inc
sub
int
and
mov
adc
popa
and
enter
pop
and
inc
sub
or
sbb
nop
subl
lret
xchg
sbbb
and
lods
xchg
nop
push
clc
mov
xor
aam
fimull
rorb
mov
in
pop
ret
xlat
xchg
mov
cmp
mov
and
ds
sarl
push
add
aas
jecxz
pop
mov
imul
push
cwtl
xchg
dec
js
cmp
es
ficompl
mov
xor
mov
add
xor
aam
adc
outsl
icebp
pop
mov
ret
sub
cmc
or
pop
cmp
dec
mov
in
push
dec
aad
out
xor
call
js
shrb
addr16
inc
stos
xchg
jp
mov
mov
cs
inc
fdiv
xchg
fdivrl
dec
cmpsb
adc
rclb
inc
jecxz
lods
bound
cmc
push
insl
jbe
mov
cmpsl
mov
sbb
push
stos
jns
out
nop
mov
mov
lock
lods
or
rolb
sbb
inc
cmp
notb
adc
pusha
and
mov
int3
cmpsb
insl
push
mov
sub
push
mov
add
pop
push
xchg
stos
mov
and
lods
inc
mov
mov
dec
push
in
lahf
mov
in
or
stos
pop
push
outsb
cltd
push
inc
jmp
inc
mov
inc
mov
int3
in
pop
adc
xchg
jle
popa
pop
or
push
xchg
push
mov
rorb
dec
mov
mov
mov
aam
rcll
mov
sbb
andb
dec
fld
outsl
dec
dec
dec
scas
mov
cmpsb
les
test
stc
pop
mov
xchg
pop
and
jae
lea
mov
cmpsb
jno
je
mov
jmp
lret
fwait
sub
push
push
outsl
jns
fidivrs
into
imulb
or
inc
test
aam
outsl
sub
in
repz
lcall
cltd
arpl
ljmp
in
mov
call
jbe
and
mov
mov
stos
push
adc
sbb
mov
adc
lcall
inc
adc
sbb
hlt
pop
stos
mov
mov
adc
bound
sqrtps
dec
icebp
mov
mov
push
repz
mov
and
icebp
jmp
mov
xor
mov
or
rorl
idivb
mov
inc
jge
sbb
leave
out
mov
gs
lahf
fcmovu
outsb
jle
sbb
in
add
and
fsubrl
pop
in
add
push
jl
or
xor
gs
jnp
loopne
sub
out
cltd
sbb
outsl
cmp
cmp
lock
ja
arpl
push
and
leave
sub
aas
arpl
repz
cltd
nop
pop
std
jno
nop
test
inc
xchg
int
jmp
mov
add
push
fs
sub
mov
or
jp
push
fsubrs
nop
sub
cwtl
repz
daa
adc
aam
bound
cs
lcall
std
ret
jno
fmulp
gs
repz
fisttps
insb
cmp
and
xor
sub
or
ss
xchg
pushf
xor
push
mov
xor
xchg
jnp
mov
dec
fistl
pop
jg
sub
mov
inc
dec
fwait
dec
add
stc
sahf
add
loopne
jmp
add
aaa
mov
incl
push
and
mov
lcall
into
sbb
in
mov
push
les
dec
idivl
shll
es
mov
push
roll
movsb
fcmove
push
test
mul
xchg
jae
je
mov
ljmp
int3
jg
aam
mov
mov
movsl
les
jns
lret
xchg
fstpt
inc
and
lods
jge
lret
mov
cwtl
sarl
decl
adc
stc
jno
adc
dec
pop
cld
dec
movsb
jle
imul
int3
movsl
gs
mov
pop
movsl
cltd
cmpsb
mov
loope
inc
mov
flds
hlt
cmp
push
cmp
fistl
adcb
sub
mov
xlat
pop
int
ss
pop
xchg
arpl
icebp
lods
dec
fistpll
pop
mov
stos
mov
daa
push
push
out
dec
mov
and
fcomps
dec
or
out
data16
push
adcb
leave
xchg
mov
mov
ret
sub
rcll
cld
sti
cli
add
in
test
or
pop
clc
xchg
stos
cltd
mov
add
push
inc
xor
dec
cmpsb
jno
inc
inc
sbbb
jb
mov
adc
out
mov
adc
aad
pop
aam
iret
clc
sub
testb
sti
mov
ds
xor
lret
clc
xchg
scas
je
or
gs
add
adc
fisubrs
mov
mov
dec
pop
xchg
add
and
fimull
outsl
shl
mov
in
sbb
and
fdivs
push
xchg
test
jge
fdivrs
xor
dec
adc
mov
gs
mov
ltr
dec
mov
adc
add
imul
mov
sbb
and
mov
pusha
stos
fwait
adc
or
ja
xor
pop
dec
shl
push
cmpsl
dec
mov
add
outsb
sub
add
and
xor
sub
imul
pop
repz
jb
mov
gs
arpl
and
imul
mov
popa
cmp
in
outsl
pop
es
jo
cmp
jge
stc
notl
inc
je
sbb
sbb
mov
dec
mov
pop
adc
into
adc
lcall
cmp
data16
aad
dec
jns
shll
jae
cmp
mov
cld
mov
pop
sub
imul
dec
loop
aas
sub
add
pop
sub
popl
sarl
stos
jo
pop
mov
adc
cmpsl
mov
fcmove
push
pop
lea
mov
mov
mov
inc
fs
mov
push
add
pop
fchs
pop
stos
fwait
movswl
pop
dec
lods
imul
sahf
mov
lcall
push
dec
hlt
test
hlt
shlb
push
mov
mov
jno
jg
xlat
inc
pop
cltd
push
test
aad
dec
sub
sbb
lea
mov
in
dec
cmpsl
dec
mov
dec
lock
into
neg
and
push
or
das
jns
dec
pop
mov
xchg
popa
mov
adc
jecxz
out
push
push
cmp
icebp
sbb
fimuls
add
xchg
xchg
aam
cmp
sti
push
mov
out
outsb
je
sbb
pushf
mov
sub
add
cmp
inc
jl
cmpsl
mov
push
shlb
ss
in
fdivrs
adc
bound
imul
add
xsaves
inc
inc
jb
sub
sub
mov
pop
cmp
int3
sahf
jnp
shlb
mov
daa
and
and
popa
fcmove
push
sub
stc
jno
frstor
out
arpl
pop
sbb
lret
lahf
jo
repz
pushf
lahf
iret
mov
inc
orl
cmp
stos
int3
xorl
mov
bound
adc
cmpsl
xchg
inc
inc
daa
pop
jo
stos
add
movsl
in
inc
inc
xor
push
cmc
int3
push
pushf
dec
ja
push
jmp
mov
fcomps
mov
add
sbb
loope
adc
sbb
shll
xchg
mov
xchg
sbb
push
sbb
test
add
lahf
std
fistps
xchg
inc
out
and
or
call
data16
test
push
xor
pop
arpl
ljmp
iret
xchg
xchg
or
push
add
inc
stos
mov
scas
push
or
add
sub
pop
dec
icebp
lds
addl
mov
les
pushf
sub
sbb
cltd
mov
adc
out
in
lcall
jno
cmc
inc
adc
lahf
jmp
sub
xor
fnstcw
loopne
cmp
in
mov
sub
pusha
mov
nop
cmc
ret
adc
jp
in
xchg
outsb
cmp
jnp
int
fwait
xchg
adc
mov
test
and
addb
aad
popa
arpl
stos
out
lods
test
cmc
cltd
call
lret
stc
insl
outsl
push
jmp
pushf
das
nop
in
repz
loop
js
and
filds
cwtl
mov
xor
push
jno
out
cmpsb
enter
bound
adcl
les
or
nop
inc
dec
jle
push
jae
stos
stos
xor
js
add
and
das
xchg
pop
das
data16
nop
fdivs
mov
repnz
lods
xor
mov
xor
jae
ret
inc
dec
sub
pop
xchg
dec
adcb
sub
int
popa
pop
jno
ret
fcomp
pop
lret
and
push
loope
jp
mov
mov
adc
xor
dec
dec
lret
ss
sbb
scas
jae
jb
imul
fmul
and
pop
int3
cmp
sub
inc
push
sbb
push
sbb
popf
push
pop
cwtl
xchg
sahf
addr16
imul
add
leave
js
mov
pop
in
adc
outsb
inc
xchg
fidivrs
adc
adc
fwait
ljmp
sub
ds
mov
mov
test
add
in
mov
std
aad
dec
lcall
pop
mov
dec
pop
movsb
leave
mov
ret
dec
bound
in
xchg
hlt
or
push
xor
pmaddwd
push
insb
adc
sub
rcrl
pop
cmp
dec
mov
pop
cmp
gs
incb
test
push
or
lea
out
xchg
int3
xchg
fsub
dec
dec
in
pop
cmc
inc
xor
inc
sti
insb
iret
cmpsb
or
jns
jns
arpl
and
xor
xchg
add
inc
pop
push
jb
lock
jl
hlt
fsubs
and
movsl
leave
mov
add
ret
movsb
xor
pusha
pop
and
inc
sti
test
pop
mov
adcl
sarb
cli
sbbb
into
push
cmpsb
inc
pop
fnsave
mov
pop
xchg
add
imul
arpl
pop
stos
ret
dec
jp
or
mov
int3
xor
ljmp
mov
test
ja
dec
and
mov
sub
sbb
inc
add
out
cmc
popf
les
push
movsw
popa
lock
mov
stc
pushf
dec
insl
lea
clc
push
cmp
sub
jmp
jge
and
and
inc
test
xchg
mov
dec
mull
cmp
dec
lret
out
mov
jbe
ss
mov
push
push
repz
jno
insb
dec
pop
push
and
enter
scas
or
mov
lds
xchg
movsl
inc
inc
arpl
or
sbb
mov
sub
cwtl
pop
jae
xor
or
xchg
jmp
inc
mov
jbe
dec
dec
mov
dec
fs
aaa
stos
les
xor
jb
test
push
rorb
sbb
das
xchg
idivb
and
adc
jnp
fsubrl
adc
jno
mov
in
mov
mov
pop
loop
jns
push
push
jmp
push
mov
sar
lods
jns
adc
pop
es
push
dec
cmp
test
ret
mov
aam
mov
pusha
jle
gs
das
adc
test
out
imul
roll
jb
mov
push
sub
xlat
enter
pop
call
pop
sti
mov
mov
dec
jbe
lds
in
es
push
int
xlat
mov
loopne
dec
xchg
push
jmp
xchg
cmp
mov
ja
daa
aam
push
add
cs
loope
ljmp
mov
das
jmp
scas
add
out
xchg
sbb
call
pop
pushf
mov
or
loope
gs
jbe
js
cmpsl
addr16
adc
stos
dec
xchg
cmp
add
inc
rcrl
inc
mov
mov
add
cmp
cwtl
std
sbb
popa
mov
fwait
adc
sub
stos
cmpsl
sbbl
push
jno
scas
cmp
xor
insl
sub
xchg
clc
psadbw
cmp
pop
mov
jno
or
fisttpl
xchg
inc
push
push
aam
push
sub
sub
out
jge
xor
jns,pn
in
push
rorb
inc
sarl
stc
sub
pop
push
mov
jp
mov
sbb
jo
xchg
std
push
and
repnz
jns
int3
adc
pop
add
scas
roll
ret
out
add
xor
sbb
leave
dec
andl
push
cmp
mov
sub
lahf
int
scas
jmp
or
cmp
mov
es
je
mov
push
cmc
call
fists
pushf
inc
mov
xor
lds
loop
loopne
mov
stos
rolb
inc
shr
jnp
mov
stos
das
into
scas
and
inc
stos
mov
mov
jo
ror
inc
or
jl
cmpsl
fwait
push
or
scas
test
adc
push
mov
jg
xor
pop
aam
pop
and
cmp
sbb
rcrl
inc
sbb
cmpsl
test
loopne
cmp
mov
push
iret
std
scas
adcb
mov
fdivrl
push
cltd
inc
sahf
mul
je
pusha
enter
mov
in
testl
leave
pop
sub
cmp
roll
cltd
outsl
jno
push
jle
jp
subb
addr16
push
sbb
dec
mov
fsubrp
aam
or
mov
and
mov
stc
sub
mov
and
sbb
adc
push
outsb
mov
dec
dec
sti
out
sbb
pop
in
jno
adc
mov
lahf
mov
icebp
scas
popf
mov
push
movsl
adc
sbb
jbe
sbbl
outsb
out
cld
jae
test
fstl
mov
mov
ret
repz
pop
outsl
in
mov
xor
into
nop
adc
scas
lds
pop
xchg
xchg
or
movsb
mov
push
or
aas
loop
lcall
inc
loop
ret
arpl
cmpsb
push
mov
rcr
cmpsb
out
mov
test
loope
or
mov
cwtl
jp
cltd
mov
xor
add
lgs
dec
cwtl
sub
pop
into
dec
popf
inc
cs
and
sti
imul
decb
cmp
jmp
stos
adc
flds
movsb
call
addr16
repnz
dec
pusha
inc
sub
mov
jle
lods
jmp
mov
adc
sbb
and
cltd
mov
sbb
test
je
push
out
xchg
mov
daa
mov
push
popf
out
dec
pop
and
stos
mov
lret
pop
jno
or
cwtl
sbb
dec
mov
rcrl
repnz
scas
push
testb
nop
cltd
aam
xor
push
jg
mov
cmp
bound
add
loopne
add
fiadds
push
push
adcb
sbb
xor
call
test
mov
negb
jo
pusha
int
mov
inc
adc
rol
push
cmp
imul
scas
fadds
mov
pop
cmp
je
xchg
fmuls
jns
push
lcall
jge
pop
xchg
pop
aam
xchg
and
insb
push
stos
or
and
in
iret
mov
xor
xchg
insl
add
mov
popa
popa
pop
int3
rclb
push
jnp
aas
mov
cmc
fbld
mov
lahf
clc
jle
mov
movsl
movsb
in
fdiv
jl
sti
mov
loopne
xchg
jmp
add
imul
jno
inc
shll
xchg
adc
xor
cmp
push
in
push
and
pop
fwait
mov
cmp
inc
inc
sahf
jp
jl
mov
fcomp
fnstsw
or
popf
shll
loop
and
sub
xchg
mov
fsubp
gs
insb
push
std
pop
push
rclb
out
sti
adc
popa
push
popa
xchg
pusha
fisttpll
imul
or
jns
loop
fstpt
ficompl
mov
and
inc
repnz
or
push
add
push
fnstenv
xchg
jns
insl
daa
pop
mov
lods
push
loope
xchg
js
dec
movsl
fldl2e
jae
add
xchg
dec
pop
xchg
scas
sbb
inc
addb
inc
outsb
inc
nop
lahf
pop
mov
push
jae
fwait
out
jecxz
mov
pop
push
lods
mov
loope
lock
pop
mov
orb
sbb
jle
nop
xchg
jno
mov
daa
ss
mov
dec
dec
cmc
jp
sub
inc
push
cmp
add
mov
daa
stos
int
es
int3
sbb
scas
push
ljmp
push
xchg
test
fdivs
sbbb
in
ja
pop
test
fscale
dec
jg
mov
or
mov
outsb
and
mov
and
shrb
inc
jecxz
sbb
mov
cli
xor
push
jg
xorb
cmp
cmp
cli
and
popa
or
aad
mov
sub
stc
jnp
or
mov
repz
scas
cmp
dec
pop
out
ja
push
lahf
add
sub
gs
mov
jmp
mov
sub
pop
jmp
cmp
out
xor
fisubs
xorl
mov
jge
inc
lahf
lods
add
in
xchg
fldl
lds
mov
dec
and
ja
mov
ret
push
mov
scas
xor
dec
xchg
jp
mov
cmp
fisubl
jp
jne,pn
jg
repnz
pop
and
mov
pushl
out
push
push
dec
cs
sarl
stc
jmp
stc
pushl
and
mov
ss
fs
adc
dec
sbb
shll
int3
sub
cmc
mov
cmpsl
jnp
push
jb
std
and
cld
repnz
fmull
or
jge
push
lahf
push
xor
stc
push
xchg
mov
outsb
add
pop
int3
sub
cmp
dec
movsl
enter
mov
mov
push
or
mov
shll
int
sti
mov
test
int3
rolb
les
sbb
movl
inc
adc
sub
outsb
dec
lcall
test
xor
mov
cltd
add
addr16
dec
out
cmp
and
mov
repnz
or
test
shrb
iret
cmc
jne
push
inc
xor
xchg
in
fldcw
mov
add
pop
mov
sbb
int
push
inc
cmp
pop
mov
test
ja
xchg
push
les
and
add
mov
rcl
lahf
and
mov
imul
call
sub
movsb
jle
ja
push
add
mov
xlat
mov
orb
rcrl
movsb
push
xor
ds
push
push
xor
pop
sub
and
nop
pop
mov
test
jb
inc
sbb
mov
push
mov
decb
sbb
ficomps
pop
test
leave
gs
out
dec
sub
and
sti
jae
jle
daa
gs
ljmp
lea
adc
pop
mov
mov
ret
hlt
add
cs
inc
and
mov
shll
jae
loopne
repnz
add
loop
rolb
mov
sbb
cmp
inc
mov
push
ja
std
ds
xchg
push
in
cltd
lea
call
shlb
enter
jbe
sub
sub
gs
cld
jge
fmul
insl
aas
inc
push
mov
fildl
pop
pop
mov
mov
stc
jnp
push
push
ljmp
cmp
cltd
ds
mov
rcrb
mov
in
call
xchg
lret
cmp
scas
cmp
fwait
rcr
int3
shl
popa
shlb
mov
inc
scas
mov
sarl
and
sub
loopne
dec
jge
inc
in
das
cli
aaa
pop
fildl
repnz
push
mov
jnp
stos
popa
jb
push
pop
mov
je
adc
pop
clc
out
pushf
push
or
outsl
call
add
scas
xchg
imul
push
addl
or
mov
stc
sbb
stos
lfs
pop
mov
mov
stos
jge
pop
les
fnsave
jmp
xor
fidivs
test
cmpsb
cs
pop
aam
and
fwait
outsl
mov
add
cmpl
paddd
out
xchg
mov
cmp
mov
mov
xchg
insb
inc
sbb
cmp
jb
jmp
mov
sahf
negl
xchg
xor
cmpsb
sub
incb
in
adc
es
loope
inc
das
mov
add
ljmp
mov
jnp
aaa
js
rolb
fadd
sbb
aaa
test
out
aam
das
pop
jne
push
sub
fwait
arpl
mov
cltd
je
xchg
fistl
repnz
dec
test
test
add
jb
lret
or
les
fldl
sbb
scas
adc
mov
push
ja
sbb
mov
jg
int
into
mov
fsubl
jl
mov
jbe
insb
flds
or
in
xchg
mov
out
test
jb
cmp
out
cltd
cmpsb
jecxz
in
mov
xchg
fidivrs
insb
testb
push
movsb
xor
inc
pop
daa
lea
push
cmp
add
lods
shrb
adc
mov
fld
into
pop
inc
pop
imul
icebp
imul
mov
sbb
test
xchg
arpl
ds
push
in
cmp
push
or
mov
in
and
dec
ss
cltd
pop
out
push
into
loopne
in
xchg
lods
lcall
mov
xor
ficoms
bound
xchg
rcrb
stc
js
ds
add
mov
ss
mov
xchg
cmp
stos
mov
sbb
jb
mov
xchg
xchg
insb
jge
push
out
adc
int3
outsb
cld
lods
push
cmp
dec
nop
cwtl
add
xchg
out
aad
adc
inc
and
push
xchg
std
das
daa
ss
aad
aas
cmp
in
add
cmpsl
adc
je
ss
imul
rclb
mov
inc
jp
dec
nop
jo
pushl
icebp
movsl
hlt
aam
mov
push
loopne
stos
xor
pushf
mul
in
lahf
mov
lret
pop
mov
jb
mov
testb
stos
lds
jl
mov
xchg
mov
sahf
nop
mov
cmp
pop
dec
mov
repnz
sub
aaa
pop
ret
fs
pop
mov
and
pop
pop
mov
pop
in
and
add
push
fwait
pop
icebp
out
les
xlat
jbe
add
dec
mov
repnz
push
cmp
add
adc
addr16
les
sbb
shl
test
sahf
and
notb
adc
xchg
enter
push
out
pop
or
cmp
cmpsl
fistps
mov
fcomps
imul
insb
test
mov
xchg
dec
imul
cmc
sbb
fcoms
mov
fimuls
scas
in
lahf
movsl
sbb
cmp
sub
cmp
addb
scas
sbb
mov
sub
mulb
stos
out
ficoml
xor
loope
inc
sbb
lret
sbb
ret
test
xchg
cmp
mov
ljmp
out
cli
or
cmp
aad
fcmovu
out
ror
out
insl
lahf
push
lea
cmp
sahf
mov
xlat
mov
dec
inc
sbbl
sub
sbb
dec
dec
mov
mov
jo
outsb
jae
and
fisubl
lock
mov
adc
push
repz
shl
scas
xor
push
sub
leave
adc
dec
inc
fs
testl
xchg
shl
inc
aam
pop
inc
jae
pop
or
lods
test
xor
popa
addr16
lahf
and
cmc
push
repz
mov
lret
js
cmc
inc
lahf
cmc
adcw
xchg
out
adc
sub
adc
sub
int3
pushf
cmp
fsubs
dec
sbb
stc
movsb
dec
jle
arpl
sarl
pop
pushf
fwait
or
stos
repnz
inc
ret
lock
xchg
cmp
adc
adcl
int
inc
push
mov
lods
cmc
mov
hlt
push
push
arpl
sbb
and
sbbl
cli
hlt
testl
add
jnp
pop
push
mov
jnp
jmp
imul
lods
mov
mov
push
pop
std
fdivs
daa
xor
inc
pop
shll
adc
mov
dec
inc
adcl
outsl
lret
mov
inc
lret
cmp
sahf
imul
insb
ret
sub
jecxz
jae
adc
lahf
pop
cmp
cmp
sahf
push
sub
stc
dec
dec
rep
sub
cli
outsl
loop
ljmp
xchg
or
pushf
out
and
fs
xor
mov
cwtl
or
inc
add
rcll
mov
popa
aad
imul
lods
test
ss
push
ja
push
rorb
nop
adc
outsl
cmp
gs
pop
testl
mov
aaa
pop
stc
daa
lods
sbb
hlt
adc
int3
sbb
xorl
push
int3
mov
test
pop
fadd
add
shrl
xor
test
mov
dec
cmp
daa
mov
loop
cmp
sub
subl
aas
pop
enter
in
cmpsb
mov
imul
push
fcoms
nop
push
es
push
push
push
inc
loop
jmp
add
sahf
adc
inc
xor
mov
mov
fimuls
cmpsb
cmp
sarl
cltd
mov
adc
and
mov
in
xchg
add
pop
hlt
cld
mov
lods
dec
jae
mov
movsl
sbbb
sub
inc
mov
adc
sbb
mov
push
mov
inc
pop
inc
int3
cmp
sub
enter
mov
clc
repz
sbb
cwtl
push
call
mov
push
scas
jl
and
mov
int
mov
mov
mov
nop
mov
xchg
nop
adc
stc
insb
dec
ret
mov
ficoms
ja
pop
inc
cmpsb
pop
and
sbb
mov
out
fildl
mov
jecxz
int3
lea
pop
pushf
andb
test
mov
loope
shrl
mov
test
movsl
add
mov
test
mov
mov
mov
dec
inc
mov
sahf
pop
shlb
xchg
adc
hlt
xchg
push
lret
jno
jnp
daa
je
mov
mov
sub
or
mov
sub
repnz
popa
fwait
mov
std
add
out
push
lea
push
lods
fildll
mov
scas
dec
shr
jbe
in
stos
push
scas
jecxz
in
popa
pop
cwtl
push
and
push
mov
push
roll
inc
mov
sub
sbb
mov
pop
roll
nop
dec
cltd
es
add
out
pop
jns
std
mov
insl
push
sahf
ret
call
mov
sahf
repz
cmpsb
call
out
ja
ret
sbb
out
pop
aam
insl
and
sar
insb
xor
push
push
insb
dec
pop
dec
or
pusha
add
dec
cmp
push
or
jns
ljmp
pop
dec
mulb
mov
mov
cmp
lds
inc
pop
xchg
js
inc
mov
jmp
out
xor
fmul
rol
test
loope
icebp
cld
ret
xlat
scas
out
and
xchg
and
dec
aas
mov
add
xchg
movsl
cmc
sbb
mov
ret
and
pop
jg
repnz
mov
shrl
repz
add
outsl
mov
lret
lret
enter
push
push
cmp
popf
jecxz
stos
mov
loope
jmp
xor
mov
loope
push
dec
add
ds
pop
sub
enter
in
dec
das
cmp
cli
push
pop
insb
into
jne
gs
jp
scas
xor
rol
gs
aad
jle
mov
mov
push
movsb
jo
xor
sub
out
stc
pop
clc
mov
pop
adc
mov
jae
mov
cmc
adc
sti
pop
mov
mov
rcl
fsubl
jp
push
and
cmc
mov
push
sub
fld
sahf
xor
out
test
sbb
es
mov
pusha
mov
mov
add
call
mov
sahf
adc
ljmp
pop
mov
cmp
xchg
shll
lret
ss
fsqrt
jecxz
aad
daa
and
sahf
mov
aaa
rcll
inc
out
xlat
dec
loope
adc
and
outsl
cmc
ficoms
jmp
lods
out
mov
jp
jbe
mov
inc
and
push
sub
cmp
adc
and
leave
inc
lods
stos
cwtl
shrl
stos
jl
aaa
mov
add
ret
pop
push
rcll
out
or
mov
cmpsl
mov
mov
lods
js
mov
add
pop
lods
lea
bnd
xor
mov
jae
cmp
sbb
cli
nop
push
int3
pop
sub
lds
into
hlt
sub
mov
push
in
movsb
pusha
cmp
in
test
bound
insb
mov
outsb
or
sbb
int
nop
or
dec
ljmp
mov
popa
mov
jmp
imull
mov
mov
or
dec
or
hlt
jmp
xchg
in
sahf
in
xlat
loopne
push
shlb
adc
insl
adc
pop
xorb
cli
out
sub
push
dec
je
cld
shlb
push
loopne
orb
inc
mov
xchg
insb
mov
pop
ljmp
fstl
fdivrs
cmp
pop
stc
mov
mov
insl
fldenv
mov
movsb
das
and
fucomi
stos
mov
in
lods
into
fstl
stos
mov
ret
jb
jne
mov
js
and
repnz
shl
inc
inc
cmp
push
stc
fwait
and
push
or
inc
push
add
ja
mov
dec
mov
dec
lock
mov
cmpsb
and
mov
xchg
xchg
sub
out
fcomip
dec
pop
mov
cmpsb
popl
addr16
test
cmp
insl
mov
pop
out
sub
je
sub
cmc
subb
les
aaa
push
negb
stos
mov
ficomps
test
mov
ficoml
cmp
mov
clc
mov
popa
bound
popa
insb
or
mov
hlt
les
and
insb
cli
sbb
sbb
loop
lahf
iret
dec
aam
mov
sub
inc
and
or
inc
lret
lea
sbb
xchg
push
inc
xor
mov
pop
outsl
cmp
aam
aaa
cli
int
xchg
dec
add
cs
lret
sub
sbb
data16
pop
push
inc
std
sub
dec
les
sub
lret
test
dec
jnp
jnp
add
sub
insb
mov
out
and
mov
negb
inc
repz
mov
and
sbb
pop
sub
mov
insb
dec
mov
pusha
mov
lcall
jnp
popa
jne
scas
jl
outsb
rclb
out
pop
xor
mov
mov
popa
les
addl
jmp
inc
jo
imul
mov
cmpsb
sbb
sbb
push
es
fwait
mov
pop
mov
sar
push
mov
and
int3
fdivrs
pop
mov
mov
stos
xchg
xor
xor
mov
sbb
ds
rorl
jl
mov
out
scas
ret
out
iret
mov
pop
imul
jb
rcl
pop
dec
pop
inc
and
sub
pop
sbb
xor
popf
adc
into
sub
gs
cmc
rcrb
loop
sbb
jecxz
pop
popa
mov
outsb
loopne
ja
dec
add
xor
push
ret
or
call
enter
lock
sbb
in
outsl
inc
sahf
fnsave
loop
inc
push
push
in
popf
inc
clc
sub
js
loop
or
sbb
adc
cli
shr
push
outsb
xchg
push
repz
inc
jne
inc
int3
arpl
cmp
add
sbb
lds
push
pop
or
or
cmp
or
xorl
push
imul
add
scas
loop
jae
mov
cmpsl
movsb
sbb
es
adc
push
and
mov
aas
jo
dec
mov
fisttps
lret
mov
cltd
mov
das
icebp
loopne
sbb
jp
leave
aaa
lahf
fs
cmp
dec
movsb
into
cltd
push
xchg
sbbl
js
jbe
hlt
dec
orb
add
pop
sahf
dec
push
movsl
gs
mov
data16
loopne
mov
pop
xor
sub
out
cmc
fadds
outsb
decb
mov
inc
push
cwtl
popa
repnz
nop
push
mov
enter
jge
rcrl
imul
repz
xchg
mov
out
out
enter
fcompl
repz
lret
jmp
insb
add
test
outsl
mov
adc
and
fnstsw
pop
jp
dec
mov
inc
das
mov
mov
pop
xchg
mov
stos
or
inc
in
je
lock
lods
mov
stos
xor
inc
fsubrl
xchg
out
cmp
orl
sub
add
fwait
pop
or
mov
adc
add
xchg
pop
mov
outsl
xchg
fdecstp
mov
mov
test
jbe
mov
out
aaa
mov
push
lods
xchg
jae
test
jmp
loopne
addl
mov
mov
ret
fnstenv
cli
jecxz
sbb
push
sbb
into
cli
dec
pushf
fisubrs
inc
in
xchg
dec
mov
jge
js
test
mov
jmp
cwtl
out
jns
inc
push
jb
xor
aad
mov
mov
aas
outsl
leave
test
pusha
push
pop
pop
mov
cli
imull
mov
push
aad
into
bndldx
push
fcomps
lahf
jg
cli
or
insl
add
adcb
out
call
clc
xor
mov
and
std
cmp
fdivs
rcrl
rcl
leave
pop
sahf
inc
add
popa
lock
push
push
fdivs
add
xchg
iret
pop
fidivrs
dec
in
ret
add
sub
sub
sbb
add
inc
loope
xchg
shll
daa
movsb
mov
ljmp
or
fs
cmpsb
inc
push
aad
bound
outsb
subl
mov
sub
xor
test
xlat
cmp
pop
pop
mov
lea
or
ret
and
mov
pushf
js
cltd
xor
nop
sub
mov
jle
sub
rclb
dec
push
add
test
inc
xor
and
sbb
jno
in
out
ds
subb
dec
xor
dec
inc
negb
das
cmp
arpl
inc
shll
jb
push
fstl
cli
xchg
push
pop
mov
bound
lcall
pop
lahf
xchg
stos
icebp
pusha
inc
std
mov
dec
jo,pn
ljmp
cmp
mov
popf
je
in
mov
pop
jae
es
mov
leave
jo
xor
push
arpl
mov
sbb
jns
add
sarb
je
imul
add
xchg
jmp
nop
jne
movsb
adc
out
adc
mov
das
lret
jb
ret
lds
in
imul
loope
adc
dec
xchg
es
bound
out
movsb
inc
int
test
cmp
sbb
lret
adc
dec
stos
leave
adc
cmp
shrb
sub
test
mov
pop
icebp
mov
iret
clc
popa
sub
test
pushl
and
hlt
jge
faddp
ljmp
rclb
jns
sub
pop
hlt
insl
dec
lods
and
jne
fldenv
sar
cmp
add
add
adc
imul
pop
pop
ja
jno
pop
outsl
aas
xchg
push
idivb
mov
sbb
stos
push
jge
loopne
mov
inc
sbb
aam
in
xorb
push
adc
mov
repz
stos
xchg
movsl
in
mov
push
iret
rcrb
loope
scas
mov
pop
mov
pop
out
lret
scas
add
xchg
sub
outsl
cmpsb
movsb
mov
je
dec
add
scas
inc
daa
fnsave
aas
pop
jo
sbb
or
sub
loop
fs
xor
repnz
jb
shrb
in
inc
pop
xchg
insb
cmp
fcmovnu
arpl
sub
data16
pop
jmp
mov
add
jl
mov
dec
ficompl
int3
add
xchg
inc
sbb
popf
dec
mov
lods
and
lret
and
adc
and
inc
imul
arpl
bound
sbb
lods
adc
xchg
xor
nop
push
nop
addr16
stos
dec
cmp
pop
xorl
xchg
gs
xchg
popa
mov
push
add
daa
xchg
pop
adc
and
test
jns
iret
mov
dec
and
leave
fistps
add
adc
push
shrl
push
popf
ror
sarb
dec
or
xor
mov
scas
mov
ljmp
mov
sub
movaps
lret
fdivrs
mov
add
add
sbb
sub
mov
aad
or
lods
or
push
leave
repz
dec
andl
inc
pop
jg
jmp
mov
push
outsb
pop
shr
adc
xchg
xor
addr16
stos
mov
out
stos
jg
divl
rol
jle
fimuls
int
dec
int
cltd
minps
sub
dec
xor
push
addr16
rclb
aam
push
leave
or
pop
fwait
pop
fcmovnu
xlat
jge
enter
bound
pop
mov
popf
mov
xor
push
js
insl
adc
mov
xor
aas
std
outsl
xlat
lods
fimull
sub
ret
outsl
mov
aad
in
sub
loop
sarl
jb
xor
push
push
push
cmp
mov
fistpll
inc
pusha
popf
insl
ds
clc
mov
dec
sub
sub
inc
dec
xlat
push
out
cmp
xchg
pop
and
imul
lods
orl
jl
pop
jge
adc
lahf
jmp
mov
push
sub
ds
push
adc
orl
movsb
mov
mov
roll
out
mov
je
xchg
fsubrl
mov
mov
out
roll
push
xchg
push
nop
cmp
lea
jecxz
shlb
fildl
bound
mov
lret
xchg
int
sub
cmp
pop
aad
jge
pop
lret
popf
inc
push
dec
ja
jbe
sbb
adc
aaa
arpl
inc
mov
xchg
enter
ja
into
and
push
xor
push
test
push
push
stc
bound
lock
cmp
jp
pop
xor
and
cmp
pop
xchg
lret
inc
xor
mov
inc
cli
push
aad
push
push
pop
mov
or
jg,pn
out
jno
mov
fdivrl
sbb
repnz
mov
out
cmp
rcr
pop
sahf
fistl
filds
pop
sub
decb
fdivrl
out
mov
jbe
pusha
push
in
out
in
xor
pushf
imul
pusha
into
test
lahf
es
push
pop
jle
add
ja
mov
dec
pop
xlat
jb
adc
outsb
cs
shll
out
mov
sbb
jo
ret
negl
xlat
push
imul
incl
or
lret
sub
rcrl
xor
push
adc
ds
subl
movsb
push
negl
xchg
js
int
fiadds
add
pop
inc
xchg
xor
jl
aas
cs
imul
incb
mov
xchg
fs
sbb
sub
add
mov
in
dec
cli
xor
xor
cmpsl
pop
add
leave
push
ja
loop
das
ja
out
pop
sub
inc
push
mov
push
mov
mov
fimull
iret
or
dec
gs
out
push
insb
cmp
cmp
inc
mov
idivb
jns
ljmp
sahf
call
pop
js
fistps
mov
je
pop
leave
cmpsb
xor
mov
leave
xlat
jae
add
mov
push
pop
loopne
les
ret
lcall
xchg
jbe
sub
cmpsl
fsub
sahf
into
sbb
pop
or
sbb
jns
int
xchg
les
mov
popf
sub
lahf
int
sti
push
imul
mov
sbb
mov
mov
mov
push
cmpl
push
xor
xor
adc
popf
imul
sub
cmp
xor
adc
mov
xor
lods
int
js
mov
xor
push
sbb
sbb
pushf
test
mov
lret
loopne
inc
pop
andb
dec
adc
sbb
xor
je
rcrl
mov
push
into
push
lea
int
push
cmp
into
loope
push
aam
adc
push
fwait
andl
or
jmp
xchg
dec
pop
cmp
mov
cmpsb
inc
adc
or
mov
pushl
add
mov
and
aaa
push
mov
xchg
ficompl
pop
int3
pusha
pushf
icebp
sbb
dec
sbb
popf
js
popa
call
and
call
mov
push
fs
ljmp
and
je
jne
mov
icebp
out
in
scas
sahf
popa
outsl
jl
stc
pop
jnp
leave
adc
push
es
ret
aam
leave
cld
imul
clc
enter
mov
push
jge
idivl
push
jecxz
imul
cmp
mov
sbb
inc
rclb
aad
pushf
dec
push
inc
jmp
dec
fnstcw
ja
jno
cmp
jae
imul
or
pushf
xchg
inc
jae
xchg
mov
push
cli
dec
pusha
xchg
pop
hlt
xor
xor
cmp
fisubl
xchg
push
sbb
mov
xor
xor
or
imul
mov
push
addb
fidivl
mov
fwait
cmp
inc
sbb
mov
call
sub
fists
push
cwtl
fistps
mov
enter
lret
jp
lods
ds
fisttps
scas
out
dec
leave
das
and
ret
aam
pop
ficoms
add
andl
lods
dec
cmp
rclb
test
js
int
rcrl
out
mov
and
stos
lahf
inc
adc
jp
fstpt
xor
and
cmp
in
xor
in
xor
out
int
std
movsl
loope
test
add
pusha
popa
jmp
cltd
cmpsb
pop
jmp
add
inc
test
cmp
fwait
arpl
test
push
in
dec
rclb
adc
mov
jb
lret
imul
xor
shll
roll
ret
pop
dec
and
sbb
or
xor
xchg
dec
mov
mov
xlat
aad
das
ljmp
fdivs
mov
xlat
stos
add
add
daa
leave
jp
inc
sbb
inc
sbbb
dec
pop
or
jp
fisttpl
jae
movsl
enter
pusha
xor
in
mov
out
pop
jbe
dec
sbb
int3
ror
aas
mov
hlt
and
aad
into
lock
aaa
ret
orb
and
shll
sbb
mov
roll
jnp,pn
mov
cmp
test
mov
dec
mov
or
mov
sbb
mov
xor
cld
jbe
sub
insl
mov
adc
mov
pop
mov
mov
ja
sbb
mov
mov
push
jae
int3
nop
or
add
subl
cmp
sahf
cmp
sarb
sbb
jecxz
fmull
outsl
jns
and
xor
test
mov
mov
test
stos
icebp
cwtl
jno
add
add
or
sub
jae
push
rep
jg
inc
inc
fldl
push
popa
adc
and
les
rcll
cwtl
adc
je
push
test
lds
out
sub
fidivs
test
or
jg
mov
in
cmpsb
xchg
xchg
mov
scas
jmp
push
add
xchg
mov
in
mov
test
sbb
ror
filds
iret
sahf
ljmp
imul
rclb
xor
ss
mov
pop
jmp
popa
loope
movsl
clc
ret
xchg
and
orl
fdivs
dec
xchg
popf
ret
mov
pop
clc
add
mov
and
scas
jbe
push
add
mov
xchg
and
adc
ja
push
push
pop
into
fisttpll
repnz
inc
mov
add
push
pop
lods
clc
inc
clc
nop
dec
xchg
pop
dec
push
sub
je
sub
mov
dec
xchg
jl
cmpsl
inc
add
shlb
in
push
push
mov
lret
ret
cmpsl
mov
sbb
lock
pop
jo
pop
dec
adc
push
mov
data16
cmc
dec
pop
cmc
ret
clc
mov
pusha
xchg
and
pop
lret
jle
cld
pop
mov
xchg
jo
xlat
lcall
sbb
dec
aad
mov
cmp
out
popl
pushf
gs
imul
mov
pop
mov
lock
je
push
enter
repz
aas
jge
xor
push
or
pop
cmp
cmp
adc
dec
bound
xor
test
scas
jmp
xlat
cs
jge
add
shll
mov
aad
or
rorl
inc
mov
sahf
rorl
jp
jae
dec
cmc
sbb
sub
or
mov
mov
in
jnp
mull
sbb
adc
cmc
fcoml
repnz
sbb
scas
mov
pcmpgtb
and
cmp
and
stos
pop
add
dec
adc
fdivl
add
jl
dec
mov
lods
pushf
sub
stos
pusha
nopl
push
dec
push
fldl
pop
into
scas
cmp
dec
or
push
or
out
incl
in
icebp
mov
cwtl
ret
out
movsl
prefetcht1
pop
in
xor
stos
xor
call
ja
sub
popf
outsl
loopne
outsl
mov
lds
cmp
outsl
cs
std
outsl
dec
jl
pusha
leave
cltd
and
sbb
insl
jo
mov
adc
jge
jmp
repnz
sbb
cld
das
mov
cmp
mov
mov
stos
outsl
xor
fcoml
loopne
roll
stos
fxch
fmul
lds
xchg
cmp
mov
cmpsl
fmull
xor
or
jbe
shl
lahf
cmc
jae
sahf
or
loope
jge
aaa
sbb
fcomp
pop
push
dec
imul
sub
dec
ljmp
sbb
and
gs
jae
dec
sbb
or
popf
sahf
ss
stos
das
dec
out
inc
add
sub
push
and
pop
pop
addl
xchg
xor
inc
jg
and
mov
movsb
mov
xor
inc
mov
and
ja
inc
lcall
stos
adc
sub
xchg
jg
dec
and
ret
add
xchg
lret
jae
scas
mov
mov
sbb
incl
push
lods
pop
cmpsl
movl
inc
add
stc
repz
jbe
push
scas
fwait
xchg
add
fs
mov
in
mov
push
subl
and
or
mov
xchg
insb
xchg
inc
mov
sbb
in
push
mov
popf
das
push
push
pop
popf
fbld
mov
arpl
scas
sbb
mov
lret
cmpsb
adc
xor
cmpb
cmp
in
notl
dec
imul
sbb
jmp
jo
mov
pop
dec
push
insl
call
sub
test
data16
pop
aaa
ret
ss
cmc
adc
mov
shll
xor
mov
pop
sbb
clc
and
fdivrl
mov
je
dec
adc
aad
repnz
adc
filds
outsl
pop
xchg
pop
js
and
repnz
dec
loopne
xchg
repz
fs
cwtl
add
sbb
imul
mov
lcall
popa
xchg
dec
cmp
mov
jns
pop
push
inc
clc
dec
xchg
lds
mov
out
or
xchg
push
cmc
faddl
cli
mov
mov
pop
and
jl
clc
mov
add
std
add
push
out
insl
and
sahf
into
hlt
dec
fbstp
and
pop
data16
stc
inc
movb
inc
dec
int3
clc
xorl
imul
fldt
push
push
lcallw
xchg
fildll
pop
ja
inc
movsb
jecxz
lret
ret
sbb
adc
fcoml
inc
or
shlb
jp
inc
jns
fnstcw
xlat
add
movsb
shrb
ds
push
loopne
stos
mov
xchg
lret
jb
aad
popa
repz
jb
rorb
adc
sbb
jecxz
push
mov
sbbb
fs
lds
dec
nop
xor
shlb
call
leave
cmpl
mov
jae
lds
dec
jbe
or
popf
je
sar
push
sbb
rolb
ficompl
push
mov
mov
jp
dec
andb
cmpsl
push
pushf
xor
mulb
lods
inc
repnz
dec
push
or
lds
and
xchg
inc
testb
fidivrs
ds
repz
xchg
movsl
push
mov
repnz
fidivrl
inc
call
lcall
ss
sarb
cmpsl
mov
xchg
lods
pop
sbb
sbb
rolb
xchg
inc
imul
into
popf
out
stc
gs
xor
xchg
lods
mov
mov
dec
xor
in
cmp
cmpsb
jbe
fucom
and
fcoml
xchg
mov
jae
xor
test
hlt
mov
mov
orl
loope
dec
pop
jg
jae,pn
fdivrs
loop
lods
sar
out
test
dec
xor
in
cmp
cmp
dec
enter
mov
mov
mov
aaa
sbb
jg
nop
or
fimull
ss
test
arpl
shll
sub
movmskps
fildll
sub
jp
add
adc
sti
add
and
pop
cmpsl
xchg
loope
mov
ret
rcr
add
xchg
insl
xchg
gs
mov
test
leave
adc
lods
mov
cld
xchg
sbb
jecxz
adc
fisubrs
add
or
pop
addr16
and
out
mov
cmp
push
cwtl
jl
pusha
scas
cmp
sbb
adc
pop
mov
sbb
push
loope
mov
fcmovnbe
sbb
lods
jl
dec
push
fstps
adc
mov
push
xchg
cmp
out
jmp
xchg
push
jge
stos
imul
fs
jmp
ret
cwtl
sbb
mov
pushf
addb
scas
jne
aam
or
push
mov
rcrb
xchg
inc
or
jmp
jecxz
sahf
inc
xchg
movsl
std
push
jns
lcall
inc
movsb
jecxz
bound
adc
mov
inc
add
mov
mov
shll
testl
dec
jne
push
jns
push
cmpsl
xor
sti
sbb
xchg
icebp
cmp
sbb
pop
ljmp
lret
xchg
xchg
add
push
pusha
add
sahf
cmp
and
sbb
hlt
xlat
push
mov
xor
sub
xchg
mov
jge
fidivrl
lds
cmp
inc
js
or
clc
add
dec
and
insb
fimull
je
inc
divps
out
mov
mov
loopne
pop
jle
cmp
test
data16
int3
jnp
add
in
sbb
ret
and
sbb
sub
enter
or
and
xor
mov
test
frstor
out
and
push
xor
mov
adc
or
fidivl
dec
in
popa
in
addb
xchg
arpl
xor
icebp
or
add
mov
add
insl
repnz
dec
loopne
sub
jge
dec
loopne
mov
and
adc
fistpl
dec
xor
ret
clc
mov
push
vmread
push
mov
daa
dec
and
out
rorb
das
fistl
daa
dec
dec
mov
into
dec
jge
imul
popf
jmp
jmp
cmp
cmpsb
sahf
or
inc
push
pop
popf
inc
sbb
push
lods
sbb
movsb
sub
and
dec
ss
and
jg
cwtl
into
jmp
jle
xchg
ret
mov
clc
test
inc
inc
cltd
mov
insl
xchg
xchg
mov
addr16
mov
push
jae
call
and
outsb
in
cli
inc
aas
xchg
imul
std
xor
clc
ret
dec
xchg
cmp
cwtl
outsl
xchg
jl
jp
mov
lret
or
outsb
jmp
sub
mov
bound
jmp
out
je
fists
xchg
aam
out
scas
outsb
fs
clc
cmpsb
call
in
jle
sub
stc
cmp
push
cmp
lret
insb
or
xchg
add
pop
lods
xchg
jb
cwtl
xor
lods
mov
mov
sarb
push
and
xchg
addb
fnstenv
adc
shll
sbb
daa
pop
jp
leave
xor
enter
aaa
jecxz
sbb
call
mov
or
movsl
xchg
mov
ror
pop
pop
add
mov
mov
dec
push
push
data16
fists
mov
jo
sbb
push
sbb
movb
jg
mov
inc
or
leave
cmp
stos
out
lods
or
or
cs
add
xor
push
stc
cmpsb
lock
cmovle
andl
subl
push
fwait
pushf
popa
or
dec
cmp
jae
out
pop
fisubrl
inc
jae
movsl
mov
gs
or
imul
jmp
pop
inc
call
idivl
mov
aas
pop
jae
lods
aas
rcll
push
movsb
xor
cmp
fadd
loopne
cwtl
sbb
and
scas
sub
mov
ds
fldt
inc
not
icebp
into
cmpsb
xor
mov
mov
mov
out
sti
dec
push
jg
imul
xor
addb
mov
push
dec
inc
shl
or
or
and
sub
cltd
sbb
push
push
pop
pop
jb
dec
andb
scas
jnp
frstor
cmc
test
sbbb
cmc
mov
sahf
ss
push
push
ljmp
daa
xchg
mov
mov
inc
fisttps
lahf
nop
lret
mov
sub
lahf
xchg
in
sbb
shlb
inc
ror
pop
jae
in
sub
test
cwtl
test
add
arpl
add
dec
out
sbb
mov
movsl
loopne
mov
mov
cmpsl
lahf
jae
faddp
mov
jge
fcmovnu
ss
mov
cmp
mov
cmp
ret
mov
sbb
daa
push
cli
mov
cmp
inc
leave
and
sub
les
dec
mov
inc
jns
lcall
fs
and
mov
xor
add
out
cld
hlt
and
adc
mov
inc
inc
cmpsb
adc
xor
or
das
test
scas
test
loopne
pop
adc
iret
jecxz
iret
test
xchg
fnstsw
imul
xchg
mov
mov
xor
ficomps
fmull
outsl
inc
jbe
dec
cmpsl
mov
movl
sarb
push
cltd
jmp
dec
dec
push
imull
adc
sub
cltd
out
sub
pop
pop
pop
leave
mov
sub
jg
lods
nop
scas
mov
addl
shll
fsubr
ljmp
lods
mov
pop
lret
test
test
cmp
movsb
push
in
push
and
subl
repz
jmp
sbb
test
cmp
gs
imul
jmp
add
sub
outsl
or
lcall
cs
pop
cmpsb
cmp
jl
cld
mov
jae
arpl
xchg
leave
and
mov
fwait
hlt
out
pop
pop
sub
aas
dec
jle
push
ret
lds
xchg
es
out
pop
sbb
pop
sub
mov
inc
xor
insl
int3
repz
sti
insl
fs
mov
into
adc
sbb
filds
xchg
and
scas
insb
insb
dec
pop
outsb
inc
or
cmp
jg
sahf
pop
pop
and
xchg
ss
enter
add
les
adc
mov
arpl
mulb
ret
subb
sub
xor
scas
les
mov
js
imul
adc
js
sub
loope
mov
xchg
pop
or
mov
xchg
pop
add
pop
bound
outsl
pop
je
mov
sub
loope
icebp
inc
pushf
mov
mov
rorb
dec
stos
xchg
orb
xor
mov
imul
out
push
jb
es
cmpsl
cmp
imul
movsl
iret
fmull
inc
enter
mov
mov
daa
cmp
les
jge
int3
xchg
fs
nop
xchg
rcrb
jns
ljmp
pop
cmp
inc
aam
cmpsl
movsl
aaa
lds
fwait
repz
xor
mov
iret
aam
roll
addr16
insb
ja
mov
andl
shll
orb
cmpsb
or
bound
xor
sbbb
pop
call
shll
aas
addr16
sub
dec
out
mov
aam
sbb
jne
push
push
dec
sahf
mov
sub
lds
push
dec
out
sarb
sub
mov
cwtl
sti
pop
or
jns
xchg
lret
mov
scas
cmc
scas
fidivs
cs
test
sub
addl
inc
imull
sti
xchg
in
popf
nop
lea
xor
dec
mov
adc
sahf
push
sbb
add
movsb
movsb
pushf
sub
jecxz
popa
cmpsl
inc
pop
jge
sbb
sub
jne
vrsqrtss
mov
push
pop
dec
mov
add
mov
out
mov
sbb
sub
dec
ss
mov
dec
lahf
sub
fsubs
leave
push
pop
ljmp
mov
push
mov
out
inc
xor
das
loopne
cmp
arpl
pop
add
mov
push
and
xchg
xor
sub
and
hlt
mov
stos
shll
icebp
jl
sti
rorb
adcb
or
mov
mov
inc
cmp
mov
adc
jmp
sbb
ds
int3
inc
inc
dec
sti
cmp
aaa
dec
cmpsl
loop
add
ds
lcall
adc
mov
or
xchg
push
push
test
jne
sub
in
negl
cmc
add
mov
dec
mov
ja
mov
cmc
and
xor
pop
repz
ljmp
nop
sub
add
shll
mov
dec
sbb
and
adcl
mov
sbb
push
ret
iret
xor
in
cmpsl
cltd
pop
xor
js
pop
mov
or
js
out
mov
push
fcmovu
or
cmpl
stos
add
fsubl
inc
or
and
xor
or
rolb
lcall
into
das
sub
push
repz
sbb
out
mov
and
std
sub
or
lahf
je
mov
in
adc
rcl
mov
ret
enter
adc
cmc
add
jns
and
jnp
and
std
jo
mov
inc
jp
pop
in
arpl
pop
sub
push
iret
jmp
jmp
cmp
jb
mov
rcrl
xchg
pop
lret
jb
js
lods
xor
pusha
push
sbb
jge
push
inc
stos
adc
lock
xchg
mov
mov
sarl
jne
int
int
jae
dec
adc
mov
pop
lret
xchg
insb
pusha
jo
mov
scas
dec
enter
add
xchg
xchg
rcrb
mov
scas
fimull
inc
pop
fs
or
mov
sbb
out
inc
andl
adc
pop
xor
fwait
push
sub
imul
add
lods
push
lds
das
loopne
pop
in
jae
test
aaa
fstl
mov
cli
insb
xlat
fwait
js
cmpsb
mov
adc
es
adc
xlat
pavgb
popa
dec
xchg
add
and
std
aaa
dec
and
in
icebp
aam
and
movsl
mov
dec
or
pop
popf
xor
xlat
cs
cmp
and
ss
mov
fiadds
roll
sub
jnp
lret
loope
pop
push
clc
imul
dec
sbb
push
mov
adc
lock
jmp
loop
push
cmp
scas
sbb
mov
dec
repnz
cs
pop
repnz
inc
lea
jecxz
fidivs
out
pop
stos
mov
leave
adc
xchg
scas
adc
sbb
and
mov
lret
std
jae
mov
aaa
xchg
test
das
fs
imul
push
adc
repnz
adc
out
aas
jg
fsubl
xor
int3
jne
ret
in
mov
or
jae
jge
add
enter
testb
jnp
and
lret
clts
sub
pop
and
mov
pusha
mov
sub
lcall
pop
sub
jg
cltd
or
push
dec
imul
mov
and
mov
xor
push
jle
scas
push
loopne
mov
test
int3
in
push
and
mov
lahf
mov
iret
mov
test
xchg
nop
sub
movsl
fstpl
xchg
lds
mov
lods
aad
and
stc
outsl
push
mov
fdivr
inc
sub
negb
iret
dec
cmp
in
jb
xor
sub
stos
add
inc
fdivrl
shll
add
clc
push
xchg
mov
ss
test
pop
mov
in
lods
push
xchg
movsb
add
xor
pop
into
les
pop
dec
pop
dec
lret
mov
in
jo
div
pop
test
jae
push
mov
and
xor
pushf
inc
xchg
inc
aad
nop
sub
fcomps
popf
or
inc
push
hlt
mov
addl
pop
aas
lods
divb
xchg
push
fwait
push
xchg
mov
push
adc
xor
jnp
loope
mov
xlat
std
es
dec
lea
lds
push
test
mov
gs
ficoms
pushf
push
push
xchg
outsb
cltd
pop
in
test
nop
cmp
xor
dec
mov
es
andb
cmp
inc
mov
xor
sub
and
mov
adc
sti
cwtl
push
mov
and
jo
mov
mov
pushf
jecxz
mov
mov
mov
inc
cmp
into
mov
xchg
je
push
pop
fwait
jmp
mov
daa
in
inc
jbe
sbb
xchg
in
mov
mov
mov
aaa
pop
out
int3
inc
fs
adc
fnstcw
mov
push
xor
insb
cwtl
jnp
inc
and
outsl
or
adc
das
push
mov
sub
and
push
loope
jb
dec
adc
sbb
arpl
int
addr16
dec
push
push
mov
addr16
cmp
pop
clc
sbb
test
pop
rolb
cmpsl
pop
pop
movl
dec
in
leave
movsb
addr16
arpl
sahf
mov
pop
mov
adc
pop
dec
jecxz
push
pop
xchg
adc
popa
pop
push
pop
mov
push
jbe
ljmpw
jecxz
mov
and
or
cmp
nop
mov
sbb
dec
or
dec
sbb
xor
pop
adc
out
out
dec
mov
xchg
inc
and
sahf
or
fdiv
jmp
lock
xchg
add
lds
and
push
fnstsw
dec
sbb
leave
push
push
xchg
dec
cmp
add
pusha
stos
cmp
lods
xchg
jmp
dec
xor
jge
mov
sarb
mov
iret
js
lret
mov
ror
cmp
push
test
shrl
sbb
adc
in
in
sub
mov
mov
pop
xchg
mov
pop
mov
dec
jns
adc
cmp
outsb
pop
add
push
and
jle
imul
leave
pop
cwtl
jp
lods
and
push
aam
hlt
pop
xor
push
dec
and
jl
xor
pop
mov
xor
inc
ljmp
mov
mov
lret
mov
xor
je
and
les
frstor
lock
xor
sub
lea
dec
aam
sub
not
fs
ss
sti
inc
adc
push
leave
xor
mov
aaa
cmp
sarl
sub
negb
pop
int
jno
mov
out
xorl
ja
or
lods
xchg
adc
and
cmp
insl
stc
pushf
cmp
sarl
xor
pop
jl
orl
stos
adcb
int
mov
in
inc
and
mov
add
adc
or
xorb
mov
popf
mov
test
shll
jae
leave
mov
adc
out
rcrb
or
out
sub
dec
aas
xor
rolb
adc
in
jbe
xor
or
pop
movsl
inc
arpl
ret
cmp
pop
push
insb
cmp
push
int
add
scas
push
fisubrs
xor
js,pt
lock
pop
mov
icebp
out
sub
jbe
fsubrl
push
pop
fsubl
mov
leave
mov
dec
lcall
inc
enter
jns
push
mov
add
inc
pusha
and
xor
add
pop
cli
loopne
xor
xor
cwtl
push
mov
mov
out
cld
add
inc
pop
movsl
and
repnz
xor
add
mov
andl
and
or
jne
push
sti
push
sbbb
pop
mov
pop
cli
add
add
in
bound
daa
ja
jmp
ret
xor
orb
push
push
or
or
sbb
push
xor
ss
sub
mov
call
ljmp
in
cmp
add
cmpsl
scas
cs
movsb
mov
dec
movsb
loopne
pcmpeqb
fnstenv
fldl
mov
or
and
int3
add
xor
idiv
sub
cli
xchg
imul
and
loope
out
xchg
jmp
jle
jp
pop
mov
xchg
or
cmp
aas
aas
cld
iret
mov
pop
cltd
sbb
jno
sub
jecxz
test
add
jle
mov
inc
fneni(8087
and
add
sbb
jecxz
adc
movsl
mov
fs
xor
out
loop
xor
push
sarl
jecxz
lods
subl
mov
xlat
imul
inc
jno
test
fwait
adc
test
bound
neg
shlb
cmpl
lock
ds
xor
leave
lret
jb
loope
mov
lcall
sbb
je
cmpsl
test
jae
mov
dec
jge
popa
loopne
push
or
pushf
adc
dec
pop
sbb
jecxz
and
mov
insl
aaa
jbe
enter
push
fwait
lods
data16
lock
jg
adc
xchg
nop
push
sbb
iret
mov
ss
pop
sub
out
jecxz
out
out
jae
es
add
test
push
leave
and
push
stos
mov
loop
or
jp
mov
popf
insl
and
dec
icebp
fildll
jae
orb
in
push
mov
loop
subb
decl
fs
jmp
pop
adc
jno
inc
inc
push
cmpsl
std
in
lea
popf
pop
loope
test
inc
sub
jge
scas
clts
andl
pushf
jge
and
jle
xchg
mov
or
push
jbe
inc
in
jo
inc
xlat
push
not
fadds
xorb
mov
insb
das
cmpsb
dec
jno
lea
or
jmp
pop
sti
stc
inc
mov
in
mov
jp
xor
jecxz
jmp
or
lret
scas
in
in
es
cmp
mov
push
loop
pushf
pop
enter
jg
xchg
cmp
cwtl
push
or
mov
fstps
or
mov
mov
sti
dec
cltd
fidivl
int
lahf
mov
enter
or
int3
or
ds
sub
stc
adc
roll
inc
fcoms
mov
scas
sub
sbb
push
xchg
test
daa
dec
mov
in
inc
adc
dec
mov
lahf
jno
mov
sub
push
xchg
stos
jmp
mov
add
in
xor
jbe
cmovl
adc
xlat
or
mov
add
xor
fcoml
pop
xlat
bound
mov
xor
inc
or
sub
xor
mov
xor
xchg
cs
das
mov
push
adc
sub
lods
sbb
jle
lock
sub
push
xlat
repnz
mov
mov
test
or
popf
sarb
mov
push
sbb
lret
lds
sbb
scas
add
lret
cmp
push
lea
hlt
fistps
nop
ror
out
and
xchg
mov
ljmp
daa
dec
outsb
pop
jne
lahf
adc
lods
or
or
and
pushf
movl
and
and
jnp
mov
les
rclb
cmp
inc
or
adc
in
hlt
pushf
adc
inc
shll
loop
mov
sub
fisttps
pushf
jne
dec
sti
jle
fsubs
enter
stc
cmpsb
addr16
out
fdivs
out
pop
jb
outsl
cs
mov
out
int
sti
jle
add
fadds
cli
mov
nop
add
xchg
mov
std
xchg
inc
cmp
clc
xchg
int3
dec
cmp
and
push
in
cltd
cmp
dec
ds
lds
cld
repnz
arpl
icebp
inc
push
or
jle
mov
or
fidivrs
ficoml
rcl
xchg
stos
insb
xor
stc
arpl
mov
jg
pop
dec
leave
push
dec
out
xor
pop
jg
not
sbb
or
adcb
aaa
or
aas
mov
jo
jo
jge
and
dec
and
mov
loop
pusha
pop
dec
add
fstl
xor
push
pop
mov
insb
sub
leave
gs
or
ficompl
push
fnstenv
bound
ret
add
aaa
daa
sahf
outsb
hlt
mov
and
les
mov
sub
imul
les
cmp
fidivrs
mov
and
cmp
pop
dec
sub
je
and
mov
xor
out
jne
mov
mov
cmp
xchg
xor
xchg
loopne
mov
shrl
filds
iret
pop
test
je
jecxz
sbb
fsubs
mov
xor
andb
scas
jg
mov
inc
fwait
aad
or
clc
cmpsb
lahf
mov
dec
jg
and
xor
sbb
jo
inc
pop
push
pop
andb
aad
outsb
int
rcl
mov
inc
sub
test
dec
outsl
or
add
pushf
dec
mov
xchg
pop
sub
push
jmp
pop
jle
rcrl
std
sub
xchg
fs
andb
movsl
and
arpl
xor
fs
adc
xchg
lds
or
jmp
call
stos
xchg
insl
fcmovnbe
jp
jne
xor
xchg
mov
mov
jp
rclb
pushf
cmpsl
inc
test
add
ss
mov
imul
lret
and
out
in
les
cld
loopne
sahf
jb
lahf
dec
xchg
add
or
test
cmp
cmp
sarl
jo
mov
jb
or
and
loope
inc
popf
mov
or
in
cmpsb
pop
sbb
sub
les
adc
jns
insb
je
into
mov
or
cmp
push
and
or
testb
loope
push
pusha
push
and
sbb
pop
aad
rcrl
jl
add
out
add
cmpsb
and
jb
sbb
scas
std
adc
test
lahf
push
xchg
add
or
mov
inc
dec
sbb
inc
sbb
mov
cld
and
mov
inc
test
testl
mov
cmpsb
pop
jmp
test
insl
mov
fnstcw
int
nop
mov
mov
xor
inc
push
rcll
cmpsb
data16
jge
testl
sahf
adc
pusha
arpl
cld
inc
cmp
and
ja
ret
in
adc
inc
inc
loopne
sti
jecxz
add
les
ss
sbb
sti
cmp
fisubrl
out
add
mov
imul
ds
xchg
shrb
xor
sbb
loop
xor
in
inc
xchg
add
in
subl
pushf
jns
dec
outsl
push
das
test
shrl
ljmp
xor
mov
lods
data16
and
mov
sahf
mov
movsl
sti
insl
fidivrl
sub
mov
xor
or
sahf
fwait
jge
xchg
jns
xor
jns
pop
loop
js
mov
shrl
and
mov
jnp
sbb
ss
out
dec
shl
mov
cmpb
mov
mov
add
addr16
int
add
jbe
imul
inc
push
enter
inc
dec
or
and
cmp
mov
int3
loopne
sbb
xchg
sub
or
or
pop
mov
sbb
and
js
out
jp
mov
mov
mov
mov
inc
or
sbb
xchg
and
jns
outsb
mov
mov
out
mov
fwait
int
pusha
leave
and
movsl
icebp
fnstsw
shll
ror
repz
movsl
sbb
xor
and
cwtl
jg
fsincos
sub
inc
mov
imul
in
xchg
mov
leave
lahf
pop
out
rolb
xor
mov
inc
int
push
sbb
jnp
pop
mov
and
jbe
js
mov
mov
arpl
clc
out
stos
inc
sub
stos
leave
or
fstpt
les
jae,pn
rorl
inc
popf
pop
xchg
xor
inc
lahf
sbb
adc
sbb
pusha
leave
out
out
loopne
pop
cmp
sti
lods
jmp
dec
dec
ret
or
inc
jne
iret
fwait
insl
icebp
inc
mov
push
lock
push
aas
loop
cmpsl
push
sbb
dec
add
mov
mov
out
shl
mov
xchg
xchg
iret
jmp
out
leave
test
int3
push
cwtl
sub
insb
add
popa
pop
ds
sbb
jnp
mov
imul
mov
push
push
add
adc
sbb
push
repz
cmp
cmp
pop
xchg
sub
or
pop
hlt
hlt
cwtl
jl
in
pusha
inc
cmp
push
push
imulb
pop
mov
jmp
mov
or
cmc
push
and
bound
orb
pop
in
decb
mov
scas
aam
sbb
outsl
push
icebp
mov
enter
test
nop
pop
mov
push
lods
push
les
xchg
out
fwait
addr16
jno
jl
and
and
mov
fdivrl
mov
xor
imul
icebp
push
scas
sti
sbbl
pop
inc
inc
inc
scas
xchg
dec
rorl
adc
sub
inc
ja
cmp
xor
sbb
push
idivl
clc
sub
jae
inc
mov
xor
mov
cmc
dec
add
inc
in
jnp
aad
cmpl
mov
lahf
sub
aad
mov
cld
dec
xor
aad
jne
pop
xor
push
roll
je
mov
data16
jl
mulb
roll
int3
xor
popf
xor
aaa
cwtl
xor
in
push
push
jno
xor
adcb
aam
inc
jecxz
gs
aaa
xchg
and
pop
dec
or
mov
test
aas
xor
test
stos
idivb
xor
xchg
out
and
arpl
shll
xor
jp
imul
sub
or
sub
xor
jl
stos
and
lock
idivb
add
stos
xchg
or
inc
lea
mov
cmpsb
sub
call
sbb
jmp
into
xlat
int
xchg
mov
adc
inc
push
mov
mov
std
sub
xchg
js
divb
and
mov
or
jp
push
dec
xor
dec
lahf
jo
js
inc
arpl
pop
sub
adc
test
xchg
imul
aad
and
sbb
cwtl
mov
frstor
push
outsb
jo
enter
les
push
cld
sub
cmp
dec
inc
sub
repz
or
jg
mov
dec
sub
push
jns
mov
flds
mov
mov
dec
add
inc
pop
inc
adcl
addr16
nop
sbb
hlt
shrd
clc
icebp
call
jp
mov
sbb
aad
or
jns
push
pop
sub
es
data16
pop
jns
push
repz
jle
mov
rolb
iret
xor
jle
dec
pop
rol
push
pop
pop
xchg
and
and
lcall
imul
arpl
push
or
fs
xor
or
imul
add
flds
fistps
dec
mov
fdivl
movsl
xor
pop
mov
fdivrs
bound
loope
loop
xchg
sub
ljmp
jo
xor
insl
fnstcw
in
mov
shrb
mov
jmp
jl
mov
xor
inc
aas
test
test
cmpsb
xchg
inc
outsl
clc
ljmp
icebp
pop
mull
lret
mov
xor
outsb
int
dec
jno
scas
pop
sbb
test
lock
and
iret
js
lahf
jmp
and
pop
leave
and
and
mov
pop
fdivrs
outsb
cmpsl
js
sti
iret
test
sub
incl
add
in
popa
xchg
mov
mov
cli
mov
pop
loopne
arpl
jb
pop
xor
ljmp
in
cmc
push
sbb
imull
nop
nop
test
cltd
mov
lahf
imul
xor
inc
ss
aaa
loop
fucom
jno
pop
xchg
add
dec
js
sbb
aad
loop
jnp
sbb
dec
cmp
and
insl
lret
mov
outsl
pop
in
inc
in
pop
in
sbb
in
xchg
dec
cmp
push
repnz
jns
xchg
insb
or
je
es
push
mov
ljmp
and
sti
push
call
or
push
push
cmp
mov
pop
pop
insl
mov
scas
fwait
lahf
rol
push
jle
dec
lods
call
sbb
inc
fwait
mov
adc
insb
outsb
push
inc
fcmovnbe
add
cli
mov
xchg
sbb
mov
or
jns
shll
test
inc
xchg
mov
lds
fdivl
out
lea
jns
movsl
dec
push
bound
cmc
mov
jae
mov
lods
push
jae
jbe
adc
or
sti
sbb
imul
ss
pushf
loopne
icebp
push
repz
or
in
test
xorb
push
test
xor
testl
add
xchg
xchg
sbb
cmp
lds
fists
fiadds
cltd
jae
xchg
lcall
lcall
lret
push
ljmp
sub
sbb
jae
loop
mov
xchg
lcall
test
jmp
jne
and
pop
lret
fwait
adc
leave
mov
test
lcall
jno
jg
xor
shrl
adc
fsubrl
scas
adc
addl
sahf
push
scas
xor
push
cmp
pop
js
cmp
xor
adc
ds
adc
or
pop
xchg
pop
leave
inc
mov
pop
sarl
xchg
lock
dec
jb
pop
mov
dec
mov
adc
xlat
daa
shr
sbb
mov
sub
pop
mov
dec
mov
adc
out
adc
loop
fmul
or
mov
enter
xor
inc
cli
mov
gs
sarb
call
cmp
push
rcrb
lods
pop
hlt
mov
jp
sbb
icebp
xor
pop
ret
cmpb
pop
test
repz
loope
cli
xchg
ret
insl
sub
cltd
sbbl
add
js
mov
sub
lret
fdiv
js
and
lods
loop
dec
ja
xor
popa
fs
iret
and
andl
testb
xor
imul
out
clts
add
xchg
inc
aaa
mov
dec
push
jle
loopne
lock
mov
enter
inc
leave
pop
aad
lahf
jle
mov
insl
movsl
sbb
arpl
ja
or
pop
sbb
lret
test
mov
mov
daa
ja
jge
das
js
pushf
mov
inc
adc
and
mov
push
lods
divl
cmc
subb
pop
sbb
sub
movsb
jmp
aaa
lahf
aas
fstpt
jg
dec
sub
aam
imul
aam
add
cmp
lods
mov
mov
lods
lea
imul
ss
mov
mov
dec
ja
push
xor
sub
popf
cmp
mov
push
pusha
in
jecxz
and
xchg
cmp
bound
dec
jne
jmp
stos
imul
xchg
push
test
sbb
pop
repz
jae
out
mov
js
inc
sub
lds
fcmovb
loope
imul
push
sub
hlt
testb
jno
cmp
push
jmp
test
push
rorb
inc
sbb
lcall
subb
rcrb
mov
loope
xlat
hlt
and
xlat
cmc
ljmp
pushf
leave
ret
sti
pop
shll
mov
add
cmp
jecxz
cmp
lret
je
sbb
or
les
inc
mov
les
lods
imul
mov
mov
loop
inc
cli
sbb
lret
lods
mov
ja
and
cwtl
aad
rclb
mov
pop
mov
aam
mov
cmp
dec
xchg
mov
add
mov
dec
push
mov
mov
faddl
pop
sbb
mov
jmp
std
lret
mov
bnd
mov
aam
xor
mov
mov
aam
pop
movsb
push
stc
sub
mov
cmp
dec
aam
push
pop
lea
and
or
leave
adc
dec
sbb
push
xchg
push
movsb
pop
stos
mov
dec
jne
shrl
cmp
fwait
pop
dec
pop
dec
mov
push
cmpsb
cmp
test
in
adc
dec
mov
jmp
xchg
aas
sub
nop
pop
mov
push
je
movsl
xlat
mov
out
mov
fidivs
lret
mov
pandn
mov
ss
mov
jb
out
mov
into
int
idivl
fsubrl
jmp
lock
cmpsb
push
jl
dec
add
mov
sub
lods
stos
pop
and
adc
mov
add
loopne
inc
rclb
dec
mov
mov
or
stos
jno
mov
out
sarl
sti
add
lods
fidivl
xlat
add
mov
mov
iretw
add
inc
dec
popf
pop
mov
pop
aam
dec
lods
push
in
loope
inc
xor
mov
or
sub
xchg
xor
fnstsw
xchg
and
popa
in
adc
jbe
leave
fs
mov
pop
jne
mov
sub
xchg
hlt
lcall
pop
enter
jecxz
jno
jo
in
shll
cmp
aaa
fldenv
imul
mov
aad
ret
call
out
lock
mov
inc
jl
lret
sub
enter
push
dec
pop
cmpsb
mov
into
mov
pop
sbb
lcall
mov
inc
pop
fs
cli
leave
add
scas
pop
or
jns
jno
shlb
push
ret
in
mov
outsl
jp
sti
in
inc
push
fstl
arpl
mov
and
lahf
testl
shrb
leave
je
cmpsb
mov
push
loope
and
les
stos
pop
add
ret
cmp
xor
sub
or
pop
outsb
jbe
mov
stos
push
stos
mov
test
rorb
rcrb
scas
adc
dec
inc
mov
mov
pop
repnz
fldt
orb
dec
cltd
ficomps
xchg
negl
lcall
gs
mov
negb
out
shlb
mov
arpl
mov
adc
jecxz
mov
rol
inc
enter
gs
into
adc
jecxz
cmp
cmp
adc
cmp
clc
dec
cmp
fldt
repz
push
out
in
in
sti
clc
movsl
ljmp
repz
push
in
fsubrs
add
lret
cmpsl
movsb
rorb
push
les
dec
or
xor
imul
test
sbb
pop
push
mov
std
movsb
cmp
push
mov
rol
inc
jmp
push
out
sbb
movsb
mov
jle
and
je
mov
movsl
sub
lods
inc
jo
ds
sub
notl
mov
and
lcall
stc
adc
cs
and
xchg
addr16
or
inc
orl
mov
push
push
clc
stos
inc
dec
lea
pop
xorb
lret
or
lock
aaa
call
ret
mov
push
rol
out
aas
andl
int
mov
xchg
lock
aam
sub
mov
in
add
jl
insl
jo
arpl
adc
repnz
or
inc
jmp
sbb
jns
jecxz
ss
stos
sub
movsl
orb
ret
jae
add
mov
rol
and
hlt
jecxz
leave
loopne
lahf
xor
es
loope
aad
cli
insl
jo
xor
mov
jae
imul
sub
push
addr16
inc
jne
xor
cmpsl
and
filds
imul
nop
push
daa
dec
loopne
push
inc
ja
inc
in
and
pop
pop
lea
out
sub
clc
mov
stos
lahf
into
lods
rcrb
js
lret
cmpsb
or
add
sbb
sbb
std
clc
adc
and
adcl
mov
out
mov
jnp
mov
cmp
dec
mov
push
jo
fcomps
insl
outsb
pop
test
push
cmovo
stos
sar
fdivp
mov
inc
clc
adc
lea
cmp
add
cmp
pop
call
js
and
in
arpl
xor
push
mov
mov
cltd
jbe
and
mul
mov
xchg
mov
repnz
sub
add
js
mulb
xor
pop
cmp
xchg
shlb
add
aaa
cmovle
push
test
pop
jl
mov
mov
or
aaa
divl
out
mov
outsb
insl
sub
stos
bnd
int3
hlt
lods
dec
lret
jp
cld
and
mov
xor
inc
xor
push
xor
jne
ja
leave
shll
imul
and
push
daa
adc
mov
das
xor
lcall
cmp
add
mov
push
lea
mov
pop
xchg
push
push
xchg
out
hlt
popa
sbb
xchg
or
and
mov
jg
rorb
iret
test
lret
jmp
mov
insl
cmp
push
pop
scas
sub
or
inc
jnp
cmp
aas
pusha
dec
mov
cli
sub
mov
aam
in
subb
cmp
mov
std
int3
inc
xchg
mov
aaa
add
push
and
push
push
div
mov
stos
fs
or
jp
cmp
into
mov
pop
in
mov
stc
les
xor
add
sub
push
mulps
popl
inc
test
adc
sbbb
rorl
mov
cmp
loop
rorb
push
popf
mov
arpl
pop
rcrl
jnp
nop
or
fwait
inc
fstl
and
insb
and
int3
dec
movsb
in
lret
jmp
adc
sar
push
cmp
pusha
iret
adc
dec
mov
lea
aas
lcall
in
adc
jo
cmpsb
mov
mov
ja
jns
xchg
mov
adc
mov
popa
jge
lahf
fs
clc
add
lahf
xor
ret
dec
ja
mov
pop
xchg
push
sbb
lock
cwtl
pop
or
lret
dec
xchg
popa
movsl
ja,pt
rorb
out
jmp
jge
jp
push
fisubrs
jbe
int3
inc
cmp
cmp
pop
sbb
xorb
sbb
xchg
lods
fstl
cmp
jl
adc
jns
aaa
add
fwait
cmp
add
mov
dec
call
mov
pop
ss
std
cmp
sub
or
mov
rcr
jl
push
xchg
cmp
push
pmuludq
imul
movsb
call
dec
jle
lret
dec
or
pop
dec
fwait
mov
dec
or
lahf
mov
mov
ret
mov
dec
add
mov
pop
add
ljmp
mov
xchg
incb
jg
push
mov
xor
fmuls
insw
inc
hlt
inc
mov
adc
hlt
inc
imul
or
dec
lea
sub
stos
mov
rorl
or
fstpt
out
fdivl
cld
xchg
mov
stos
pop
pop
shll
cmp
scas
shrb
push
push
sub
pop
imul
scas
add
popf
sub
or
call
jb
loope
enter
inc
ret
add
mov
jp
mov
cmp
jno
cmpb
add
xchg
das
pop
inc
je
sub
xor
test
jg
out
mov
cmp
fistpll
xchg
sub
cmpsl
iret
lret
sub
out
insb
push
cmp
add
cmp
xor
sar
test
shll
dec
sbb
lcall
sbb
mov
jge
mov
jle
adc
cltd
out
xor
lcall
into
inc
mov
movsb
fidivrl
cmp
dec
mov
daa
xchg
sub
insl
adc
push
jne
and
inc
popa
shl
xlat
push
cmp
ja
push
adc
sub
add
mov
clc
cmp
popa
stc
pop
xor
stos
or
loopne
std
addr16
pusha
add
and
sub
scas
cmc
cmpsl
cmp
jae
dec
sbb
jg
or
add
and
adc
imull
push
cltd
into
sbb
lret
pop
aam
cmc
sub
jg
add
lods
int
mov
mov
sub
push
ljmp
dec
xchg
xor
or
test
mov
out
jge
or
or
pop
pop
cmp
xchg
cli
pop
and
mov
adc
mov
and
mov
xchg
test
mov
repnz
and
fstpt
push
fwait
and
jae
das
push
adcb
jp
fidivrs
dec
sub
mov
movsl
cmp
leave
xor
pop
dec
out
vandnps
and
hlt
insb
and
and
enter
outsl
pop
adc
aam
sub
and
nop
lea
inc
jo
sub
out
lock
add
inc
jecxz
dec
daa
lods
repnz
inc
adc
pop
aas
and
aam
repnz
or
ljmp
test
pop
or
fisttpll
sbb
iret
jnp
inc
lods
jno
prefetch
or
xchg
mov
sbb
inc
mov
push
outsb
pop
xor
sbb
aas
call
cmp
pop
push
popf
sbb
movsl
dec
repnz
fstpl
mov
lods
shll
jge
mov
jecxz
lds
and
mov
lock
popf
sti
add
arpl
outsb
pusha
addl
testb
add
cmpsb
dec
sub
cmp
leave
jno
sbb
into
daa
out
jp
and
mov
loope
jnp
fsts
inc
xchg
addl
sbb
xor
adc
in
jae
jnp
int3
pop
pop
push
cltd
movsl
jl
xlat
mov
and
sarl
or
mov
push
sbb
add
cmpb
sub
inc
jne
add
add
mov
and
sahf
sahf
mov
jne
and
out
mov
cmp
addr16
sub
ret
inc
popa
fldt
loop
or
imul
adc
xchg
popa
push
xchg
add
sarb
push
mov
in
popf
cld
out
adc
daa
mov
xcrypt-ctr
cmpsl
pop
leave
out
daa
jmp
test
jmp
cmp
movsb
xor
cmp
cli
fsts
mov
les
inc
das
push
push
shrl
and
out
frstor
pop
or
cmpsl
test
mov
aaa
std
pop
mov
shrl
sbbl
ja
aas
psrlw
mov
je
xchg
mov
push
negb
inc
or
push
xor
mov
cmp
mov
into
loope
jo
clc
cld
sub
in
call
or
pop
mov
pop
cltd
stos
cmp
push
mov
jp
dec
cmpsb
cltd
sbb
xlat
push
lds
or
push
xor
ficoms
mov
pusha
test
sarl
cmp
lcall
sbb
and
dec
ja
popa
xor
rolb
mov
jae,pn
sub
daa
push
popf
jp
repnz
inc
add
push
push
mov
mov
or
xchg
shrb
pop
lods
clc
cmpb
inc
xchg
cs
adc
je
loope
dec
jg
cmc
cmp
aaa
jecxz
ljmp
aad
jo
ret
addl
ret
test
cld
sub
mov
sub
mov
xchg
clc
jmp
sbb
mov
and
mov
mulb
aas
imul
sbb
pop
inc
inc
sbb
mov
subb
rorb
and
out
sti
scas
movsl
push
mov
jns
je
nop
std
in
imul
xchg
shr
test
lret
xlat
mov
rorb
je
cmp
cmp
and
sti
shl
jmp
mov
adc
mov
testb
jl
insl
cmc
aas
xlat
dec
and
inc
sahf
repnz
hlt
pusha
ret
arpl
jb
jg
xchg
arpl
mov
xor
mov
or
xor
jle
repnz
popf
xor
jp
pop
mov
in
pop
fs
in
pop
pushf
cmp
addr16
arpl
cmp
add
pop
ds
add
and
aad
fwait
icebp
insl
test
mov
leave
sbbb
daa
aad
rcl
jbe
int3
test
jbe
mov
jle
rcll
inc
jnp
ljmp
repz
adc
pop
gs
movsl
repz
mov
jbe
enter
and
mov
popf
or
sbb
rcrl
xor
rol
jge
jmp
sarb
pop
ret
jno
mov
loope
adcl
es
out
mov
sbb
outsl
aam
lret
mov
aam
lahf
and
xor
dec
and
xor
dec
repnz
enter
sbb
mov
leave
imul
inc
inc
movsb
aaa
sahf
sub
fs
mov
push
sub
push
addb
mov
fldcw
movsb
in
xchg
add
xchg
repz
loop
adc
lock
fistpll
cwtl
mov
imul
lahf
sub
arpl
pop
cmp
addr16
test
jp,pt
ds
push
mov
roll
movsl
add
addl
inc
mov
stos
sub
xchg
jo
add
aad
inc
mov
push
sub
test
shlb
les
dec
pop
lds
push
addr16
dec
xor
pushf
outsb
jp
pop
fwait
mov
xor
inc
add
stos
ret
push
xchg
pop
mov
and
inc
mov
add
ds
add
push
orb
sbb
ss
stc
lock
es
xor
stc
test
push
loop
dec
push
movsl
lret
dec
mov
in
or
pop
dec
pusha
dec
lahf
gs
mov
fstl
stos
jp
push
nop
pop
sub
pusha
lea
loop
scas
sarb
push
test
push
fadd
or
sbb
hlt
mov
mov
inc
cmc
or
addr16
mov
and
and
add
iret
xchg
push
jg
daa
cwtl
enter
data16
sbb
or
rcrl
jl
pop
add
gs
jge
lock
inc
cwtl
out
dec
addb
adc
sbb
cld
push
fchs
repz
dec
push
aas
enter
rclb
js
pusha
repnz
jle
sbb
in
inc
xor
je
pop
and
je
sbb
push
ret
clc
sbb
sbb
jl
inc
xorl
ret
aaa
mov
das
shlb
xor
pop
push
mov
xchg
in
dec
push
loop
in
pop
cmpsb
and
jnp
stos
lret
imul
lods
hlt
sbb
mov
icebp
fcmove
cmp
cmp
out
mov
mov
jg
idivl
or
push
xchg
and
mov
xor
xchg
rcl
in
mov
xor
cwtl
mov
cmp
push
dec
out
mov
pop
ret
xchg
lds
stos
outsb
ret
dec
or
or
sbb
add
cmc
inc
fldt
ds
pop
pop
sub
ljmp
cmpsb
es
sub
inc
cs
xchg
or
mov
mov
and
lock
jmp
in
mov
imul
mov
jbe
add
arpl
xor
addr16
bound
test
and
sbb
and
das
xlat
mov
adc
pop
mov
in
mov
adcl
xor
les
xchg
cmp
add
addr16
inc
and
lods
xchg
dec
repnz
sub
icebp
fidivrs
cwtl
mov
ror
aas
jge
mov
jecxz
int
cmc
or
jns
pop
mov
sbb
andl
scas
xchg
jle
sahf
add
pop
mov
mov
ss
mov
lret
fsubrs
or
sbb
pop
sub
stos
or
pop
and
add
push
mov
mov
addr16
inc
adc
xlat
push
lock
mov
mov
sahf
cmc
cmc
push
mov
push
and
mov
enter
pop
arpl
xchg
fdivrs
addb
sbb
dec
inc
sbbl
sub
imul
add
or
mov
pop
pop
rclb
inc
push
test
and
sub
mulb
in
dec
rcrl
into
in
mov
scas
adc
dec
shlb
xor
xchg
fnstsw
nop
ljmp
and
pop
cld
xchg
rclb
gs
mov
cmc
jecxz
ret
test
push
add
lods
mov
xchg
cmp
lret
sahf
jmp
inc
jge
jb
jnp
inc
or
mov
popa
mov
out
ja
pop
mov
pushf
and
adc
cmc
mov
cmp
mov
dec
mov
cwtl
jmp
mov
mov
xor
out
aad
popa
imul
insl
cmp
add
dec
fildl
or
sbb
popf
inc
out
lcall
dec
int3
sub
pop
in
jecxz
mov
fwait
add
cltd
and
lods
pushf
clc
out
and
jne
syscall
enter
inc
mov
xor
in
ds
sbb
mov
cmp
aad
in
mov
mov
pop
lods
fsubrp
xor
mov
subb
test
jl
repnz
fstpl
in
mov
or
cmp
ja
in
fwait
scas
andl
stos
mov
inc
or
test
lahf
ja
fstpt
adcl
int3
dec
or
pop
dec
cmp
adc
pop
mov
mov
mov
cmp
push
pop
jge
add
mov
pop
mov
jmp
cmpsl
jp
out
inc
outsb
flds
clc
jg
xchg
dec
and
popa
test
pop
ret
adc
popf
lea
lods
adc
cmc
cmp
out
rcll
lods
decl
das
inc
inc
cmp
mov
push
dec
popa
dec
outsb
movl
aas
jbe
jo
call
mov
jmp
or
sbb
int3
lods
hlt
int
adc
ret
cli
cmpsl
push
mov
sub
mov
and
fs
pop
and
test
stc
xchg
pop
clc
sbb
jns
test
flds
lods
jge
push
pop
inc
rcrl
xlat
jo
aaa
pushf
add
fcoms
pop
add
xchg
in
xchg
jmp
jg
inc
jmp
adc
stos
mov
jge
mov
xchg
or
jle
jae
enter
sub
insl
arpl
mov
jmp
scas
test
enter
aas
out
es
xor
mov
xchg
cs
js
pushf
cld
sbb
imul
cmp
rorl
jl
push
mov
dec
pusha
inc
lds
insl
jmp
sbb
pop
aad
xchg
xorl
add
cwtl
lock
push
fs
jmp
inc
or
inc
mov
xchg
mov
mov
gs
fmuls
loopne
fwait
or
mov
notb
jge
inc
notl
or
sub
loop
sub
mov
mov
dec
xchg
or
mov
pop
inc
je
mov
add
movsb
cld
fiaddl
arpl
out
sti
adcl
add
pushf
test
xlat
sub
cmpsb
dec
pop
xchg
xchg
mov
lods
xchg
cmpsb
sbb
xchg
int3
loop
push
jo
xchg
cmp
xor
xor
add
jl
imul
or
in
leave
ss
mov
cmp
mov
sarb
ret
sbb
data16
aad
sub
fcoml
mov
jg
mov
inc
mov
aaa
lcall
movsb
xor
sub
pop
out
aad
xchg
jl
sub
cmc
aam
sbb
sahf
test
adc
push
dec
pushf
inc
loop
push
das
jg
gs
jp
lods
inc
adc
cmp
cmp
fiadds
outsb
or
adc
mov
or
cmp
jb
sub
and
cmpsb
int3
jp
ljmp
push
and
jne
jno
nop
mov
mov
sub
xor
lods
cmp
jbe
into
mov
mov
mov
cmp
sub
jae
imul
inc
adcl
xor
aam
loop
cmp
push
outsl
int
inc
pop
aam
dec
pop
scas
cmpsb
inc
call
xor
test
dec
jecxz
jge
mov
dec
xor
xchg
xor
cmc
aad
sub
inc
xlat
repnz
cli
pusha
test
adc
mov
lahf
and
mov
fists
addr16
mov
xor
pop
add
xor
leave
jno
or
add
cmpsb
test
clc
add
adc
loopne
out
pop
pop
inc
fisubrl
mov
std
dec
push
ret
push
push
fstpt
mov
fwait
popf
pop
outsl
xchg
std
popa
cmp
pop
call
jl
mov
cmp
mov
or
cli
adc
subb
jmp
pop
shll
cli
jbe
mov
cmc
fisubrl
jmp
jns
pop
cmp
pop
enter
mov
fucomi
insl
dec
in
mov
ds
cmp
cmp
out
or
rcll
cld
lock
sub
aaa
imul
sub
sbb
stc
xor
les
mov
mov
enter
lret
push
push
or
cmp
or
aam
dec
negl
insb
scas
sahf
push
fsubr
dec
or
dec
dec
outsb
mov
jns
adc
testl
sub
test
add
insb
in
adc
push
add
testl
call
mov
xchg
jle
imul
int3
int
mov
and
mov
sub
aam
and
aad
cmp
cwtl
fidivl
cmp
cmp
dec
sbb
aad
sbb
sub
push
adc
aas
jnp
loopne
dec
int3
jl
addr16
incl
aaa
insb
mov
scas
dec
cmp
lds
push
pop
mov
push
pop
js
icebp
cmp
mov
mov
popf
xchg
fimuls
push
cmc
or
dec
lods
xchg
pop
add
push
lahf
repz
mov
ds
ficoml
cmp
jb
daa
sbb
shlb
fimuls
pop
shrl
push
out
shlb
sub
cltd
sahf
sbb
push
fs
hlt
loop
dec
fpatan
test
cmp
sbb
icebp
sbb
out
mov
cmp
subl
lahf
xlat
ljmp
fldl2t
mov
fistpll
jo
into
add
xchg
sub
sub
adc
dec
sahf
dec
fbld
jno
mov
mov
subb
popf
fldcw
je
testl
out
inc
xor
xorl
inc
sub
xchg
movsl
stos
or
fs
jns
inc
lea
jmp
xor
cmp
mov
jo
inc
int3
inc
outsb
sahf
call
cmp
adc
loop
int3
dec
stos
add
imul
sbb
push
mov
das
dec
adc
out
loope
inc
dec
cmp
sub
xor
mov
int
dec
stos
cmpsl
jae
loopne
sbb
int
fdivrs
xor
data16
fistl
push
movsl
lcall
pop
adc
fwait
cld
orl
mov
call
mov
sbb
or
jb
stos
sub
dec
jne
inc
lods
ss
fisubl
cmc
xchg
push
sti
jmp
clc
and
sub
cwtl
and
jecxz
mov
loop
mov
rcrl
adc
repz
xchg
enter
push
or
push
rolb
call
bound
out
sbb
mov
mov
das
ljmp
push
stc
in
shll
das
cwtl
faddl
in
mov
lcall
xchg
cwtl
in
push
push
xchg
pop
push
dec
mov
pop
lds
cmp
sahf
sub
int3
mov
push
ffreep
sub
lret
mov
mov
fsubp
rcpps
or
add
pop
fdivs
mov
xchg
fiadds
lods
push
dec
pop
popa
addb
push
arpl
dec
shll
pusha
out
pop
sub
ja
es
leave
or
adc
or
daa
pop
stos
cmp
adc
rcrb
jb
popf
or
jmp
pop
adc
sub
push
cmc
shrb
xchg
sub
pop
lock
xlat
in
sbb
dec
sub
ljmp
cwtl
jnp
icebp
adc
rolb
mov
jne
stos
add
leave
add
shlb
jl
shrb
push
jle
push
xchg
jbe
cmp
outsl
push
out
xchg
lods
add
and
pop
mov
add
lds
sub
and
mov
fildll
add
ret
movsb
cmp
adc
sub
dec
push
push
insl
insl
dec
jns
cmp
xchg
add
mov
aas
repnz
mov
xchg
mov
sub
xchg
push
mov
cmp
clc
pop
and
mov
imul
test
mov
dec
ja
int
neg
inc
cmp
insl
call
add
scas
add
jbe
int3
jbe,pn
mov
pop
add
pop
loope
scas
iret
out
push
ljmp
mov
pop
mov
jge
std
xor
sbb
xor
inc
imul
inc
mov
jbe
stos
aas
outsb
adc
pop
inc
aaa
sbb
stos
pcmpeqd
push
lods
lods
cmp
sbb
sar
jae
out
pop
in
test
xchg
bound
ja
fimuls
call
xchg
fldl
xchg
aaa
cmpsb
dec
out
lahf
xor
jo
sub
lret
mov
xchg
add
lcall
scas
mov
inc
nop
dec
jbe
pop
inc
js
outsb
add
xchg
xchg
cld
jne
rorb
test
sbb
rorl
idivl
push
aad
add
sub
rolb
je
adc
pushf
sub
adc
fadd
adc
jnp
sub
mov
mov
test
lcall
pushf
xor
mov
inc
lea
jg
enter
stos
lea
lock
fs
push
stos
das
mov
jl
add
stos
mov
ret
popa
lods
stos
jns
add
sbb
pop
jg
mov
push
lret
aad
sub
add
sbb
btc
shrb
push
mov
rolb
cmpsb
pop
sub
mov
mov
or
jmp
pop
in
loopne
rcrb
sub
es
pusha
stos
lods
xor
jl
mov
call
jb
jnp
xor
mov
lret
and
mov
aad
ret
mov
and
pop
lea
xor
adc
popl
loop
xor
lcall
bound
popa
aam
inc
add
pusha
xor
fstp
cmp
cltd
xlat
sub
and
bound
pushl
mov
adc
dec
xchg
bound
sub
sbb
dec
push
fsubrl
dec
int
pop
xchg
sub
sub
scas
outsb
and
push
ret
mov
xor
in
xchg
pop
xor
icebp
mov
das
out
in
pushw
inc
dec
mov
or
push
add
add
clc
aad
test
pop
in
imul
data16
mov
cltd
mov
pop
or
pop
fdiv
in
mov
mov
shll
orb
in
outsb
pop
add
ret
sbb
ret
mov
sti
fcmovb
sbb
pop
call
mov
imul
jno
xchg
jnp
imul
and
ljmp
xor
cmpsl
imul
jne
lods
jnp
mov
mov
mov
ds
int3
mov
pop
xchg
adc
ret
adc
enter
negb
pusha
repz
dec
jl
sti
popf
lret
iret
in
cmpsl
jecxz
push
xchg
pop
sub
imul
test
sub
cmp
xchg
orb
dec
fsubs
cs
ja
cmc
mov
jno
and
xchg
inc
dec
cli
inc
add
mov
push
fwait
xor
lds
out
data16
sub
stc
adc
xor
int
add
mov
inc
shr
je
pushf
or
inc
lret
sar
cmp
add
in
jae
lahf
loope
iret
inc
jno
jle
xchg
or
iret
scas
adc
cmp
jae
xor
mov
xor
xchg
pushf
aaa
int
test
adc
and
cmpsl
cltd
insl
sub
nop
sbb
push
inc
add
pop
test
bound
fidivrs
pusha
mov
mul
sub
xchg
cmp
mov
call
loope
sbbl
push
push
fcmovnu
cli
push
xchg
add
push
push
loopne
cli
push
imul
jnp
sbb
or
sbb
xchg
sbb
lods
ja
int
fcompl
sbb
xor
xlat
int3
jno
out
cmp
fs
push
int
inc
arpl
aad
stos
call
in
or
add
scas
mov
mov
mov
popa
sub
and
and
or
push
in
inc
int3
sbb
add
xor
pushf
insl
and
sbb
mov
pop
jb
cmp
aad
adcb
sub
fwait
inc
inc
int3
aaa
sbb
loopne
or
sbbl
sbb
adcl
ss
add
inc
stc
or
mov
jae
aam
rcrl
dec
loopne
jecxz
bound
pop
or
data16
movsb
imul
mov
pop
je
xor
add
mov
adc
xchg
mov
loope
lock
jg
insl
faddl
scas
jo
fstps
jle
jnp
js
push
inc
cmpb
and
cmc
pop
adc
push
mov
imul
xor
test
mov
mov
push
or
stos
leave
imul
cmpsb
ljmp
add
or
mov
lods
es
icebp
cmp
ds
test
and
dec
jl
bound
adc
insl
imul
je
jo
pop
xchg
jl
jmp
mov
push
push
xchg
lret
or
xor
sbb
sub
hlt
pop
idivb
ss
push
push
movsl
or
and
xchg
aam
cmpsl
and
xchg
in
jns
cmp
fcomps
scas
xor
aas
cmp
cwtl
js
fdivs
in
repnz
in
imull
mov
mov
jl
inc
pop
xor
sub
jbe
dec
sbb
mov
jmp
mov
repz
call
sub
xchg
lret
xlat
jo
fstpt
aam
sub
dec
xchg
test
and
or
cmp
xor
mov
pushl
daa
sub
add
mov
vandnps
jbe
cwtl
dec
xchg
xor
lahf
jnp
test
mov
pop
mov
push
sbb
cwtl
out
in
push
int
adc
arpl
mov
cmp
pop
into
repz
fisttps
xchg
and
mov
out
add
lahf
mov
inc
addb
stos
test
lods
cmp
aaa
mov
sarb
pop
mov
inc
orb
call
ds
shll
cmp
loopne
adc
jno
mull
inc
mov
fidivrl
shll
rcl
dec
aam
ret
jo
aas
sub
in
fwait
jo
les
mov
add
cld
pop
sbb
jo
jnp
fs
jmp
dec
lahf
lods
shl
add
test
pop
pop
mov
out
loopne
stos
pop
jbe
es
and
lods
xor
repnz
pop
cmp
jo
or
cld
sub
lods
jnp
mov
lds
xchg
sbb
ss
pop
sub
add
ljmp
test
test
loopne
repz
cmpb
test
rolb
fwait
pop
mov
push
pop
xor
loop
pop
push
mov
sbb
leave
repz
divb
mov
lds
jecxz
test
xor
or
sarl
stos
mov
sub
ja
rcl
adc
sub
add
xor
stc
in
ss
mov
sarl
fs
repz
in
in
mov
pop
adc
cs
stos
or
shl
jp
xchg
outsl
repnz
add
or
out
mov
sbb
and
shlb
lock
push
inc
mov
pop
data16
sbb
aad
mov
cmp
shll
or
adc
jmp
fs
or
lcall
test
and
movsb
dec
sbb
dec
sbb
dec
stc
push
mov
mov
jno
xchg
cmpsb
push
mov
xor
mov
pusha
xlat
insb
enter
out
and
xchg
dec
cli
jg
lret
lret
pop
lret
mov
cli
xor
pop
imul
cmpsb
test
pushf
mov
mov
ljmp
in
out
lock
adc
dec
cli
or
addl
fisttpll
cmp
sub
and
cmpsb
jecxz
fwait
cmp
inc
aas
scas
insl
outsl
mov
adc
je
add
rcl
push
inc
jae
cmp
outsb
gs
sub
pushf
call
rclb
pushf
xchg
out
scas
into
pop
push
mov
xchg
cvtps2pd
xorb
or
adc
dec
sbb
add
pop
sbb
and
fsubr
dec
iret
jp
inc
hlt
cltd
dec
push
sarb
mov
or
inc
sub
lock
jnp
adcl
inc
sub
sub
mov
inc
xchg
test
cmpb
cmp
push
push
jb
dec
and
ss
mov
and
aaa
in
xor
test
test
mov
xchg
xchg
fcompl
hlt
fmul
sub
pop
push
in
orl
dec
sub
xchg
mov
ficomps
loopne
fdivrl
rolb
xchg
shl
cld
ror
cmc
jae
mov
mov
ret
icebp
leave
inc
sti
mov
and
cltd
insb
jne
pop
pop
shll
dec
dec
mov
aaa
jne
jle
push
ds
push
mov
lahf
enter
mov
bswap
cld
pop
adc
xchg
cmp
scas
popa
inc
jae
js
aad
push
fdivr
or
mov
mov
add
daa
push
aad
testb
stos
enter
jp
mov
jb
lcall
cld
loope
hlt
cltd
cwtl
shrb
push
push
pop
push
gs
cltd
or
aad
xchg
loop
int
sbb
cmp
popf
adc
cmc
test
mov
and
pop
fmull
ret
jae
in
adc
jae
or
mov
push
and
bnd
jge
loop
cld
xchg
xor
add
inc
pushf
mov
cmp
cmc
je
adc
pop
add
mov
fbstp
subl
adc
adc
cli
sub
dec
fcomps
sub
in
test
sub
cmp
movl
mov
pop
inc
adc
addr16
push
push
loopne
jno
jp
int
cltd
sbbb
xor
adc
ds
loope
push
and
ss
push
imul
lds
test
fcomps
stos
add
dec
and
adc
outsl
and
mov
mov
mov
and
into
xchg
push
push
sbb
and
cmp
xchg
or
mov
aaa
push
adc
jmp
lea
into
imul
ret
imul
mov
mov
fstpl
or
push
jg
sarb
sahf
mov
outsl
cwtl
xchg
jge
push
push
xorb
ljmp
stos
les
sbb
dec
xor
lock
push
dec
dec
xor
mov
push
pop
enter
das
mov
push
mov
das
sub
iret
call
push
mov
sarl
and
mov
imul
lcall
mov
lods
fsubrs
xlat
xchg
icebp
out
insl
cmp
in
push
add
mov
jmp
add
fnstcw
inc
paddusw
cmp
dec
fs
pop
mov
adc
fwait
sahf
inc
sub
rolb
ljmp
pop
push
imul
hlt
stos
fcom
xorb
int3
arpl
nop
sub
fldenv
neg
aam
adc
mov
xchg
sahf
add
push
bound
pop
pop
int3
dec
xchg
insl
xor
or
popa
mov
scas
in
jb
and
movsl
ds
out
dec
xchg
test
push
test
cmp
mov
pop
popf
test
jp
sub
jmp
data16
mov
sub
dec
inc
cld
shrb
out
xorb
and
nop
push
scas
cmp
lds
push
stos
int
push
popa
xchg
fldl
push
cwtl
data16
fcompl
andb
pop
test
repz
loopne
pop
loop
xchg
in
sub
or
sbb
lock
mov
xlat
xchg
ds
or
movsl
repz
push
out
faddl
cmp
sub
push
mov
das
xor
and
fisubrl
stos
ficompl
outsl
pop
adc
std
cmp
xchg
cmp
jmp
inc
fdivrl
daa
push
inc
in
mov
and
push
std
addr16
pop
fwait
lods
in
xor
popa
add
jecxz
leave
std
dec
mov
xor
adc
mov
dec
push
pop
test
int3
in
or
push
std
push
stos
jb
ds
push
arpl
pushf
mov
xchg
dec
and
dec
and
mov
push
and
mov
mov
bnd
sbb
lahf
push
push
sbb
aad
fcmovnu
xchg
insb
popf
sti
adc
push
loope
push
gs
mov
mov
pop
xor
inc
mov
test
mov
xor
adc
push
roll
addb
hlt
mov
or
loope
jne
outsb
pop
mov
pop
mov
jno
fcoms
hlt
popf
jne
pop
jbe
out
pop
and
lret
mov
ret
out
lahf
jmp
arpl
insb
ret
scas
xor
into
fdivs
jo
test
push
notb
data16
dec
fcompl
and
jae
fcomps
bound
mov
cmpsl
inc
mov
je
dec
mov
or
mov
inc
mov
cli
push
orb
jno
jecxz
mov
push
in
xor
jb
aas
push
inc
mov
mov
pusha
loopne
add
iret
sub
adc
jle
xchg
fs
adc
dec
pop
in
enter
stos
and
imul
push
inc
push
insb
mov
adc
mulb
pop
stc
into
xor
mov
mov
push
jecxz
addr16
pushf
inc
mov
xchg
push
cmp
mov
outsb
jecxz
adc
sbb
jns
rcr
mov
mov
jbe
scas
push
lock
adc
lea
ljmp
mov
adc
test
add
jmp
xchg
and
jns
or
cmp
mov
clc
pushl
mov
jmp
and
pusha
mov
mov
mov
dec
mov
std
cld
lret
test
cmp
or
mov
icebp
mov
ficomps
movsb
gs
or
stos
sub
scas
imul
repnz
pushf
dec
shll
fdivrs
icebp
cmp
nop
lret
in
pop
mov
fldl
pop
or
test
jecxz
inc
sub
fisubl
repz
cmp
sub
shrl
cwtl
push
stos
add
or
mov
xor
sbbl
push
pop
xchg
into
cmp
aaa
cmp
pop
movsl
stos
or
mov
out
push
addr16
insb
and
loop
or
xchg
nop
mov
ss
or
sub
inc
fs
xor
divb
and
insl
aam
movsl
ljmp
in
insl
fisubl
hlt
mov
jecxz
cmpl
jne
adc
fists
loopne
stc
cwtl
outsl
xchg
jae
hlt
in
mov
push
mov
pop
aaa
mov
xchg
mov
pop
and
mov
ret
mov
add
or
cld
out
sub
push
insl
xchg
sbb
cltd
clc
fwait
mov
xor
fsts
mov
loope
or
mov
push
out
call
sti
outsb
push
sbb
cmc
xor
stos
xchg
xchg
les
cli
inc
push
ret
jns
jae
inc
out
ss
shrb
idivb
not
iret
mov
cld
ficompl
js
ficoml
pop
imul
sub
jns
mov
mov
add
aas
pop
rorl
adc
cmp
dec
inc
stc
stos
and
xchg
push
mov
adc
gs
shrb
push
mov
dec
stos
and
mov
cmpsl
ret
mov
into
push
dec
mov
and
in
mov
inc
scas
stos
lret
aam
dec
packuswb
aad
imull
adc
inc
dec
mov
sbb
push
out
cmovae
cld
dec
scas
pop
pop
fists
xor
data16
popf
das
lahf
das
insb
imul
mulb
inc
movups
bnd
test
scas
pop
loope
cmp
movsb
push
clc
lock
test
mov
outsl
adc
out
ljmpw
insl
pop
ja
outsb
lret
fwait
out
mov
insb
dec
negl
daa
and
jns
and
imul
arpl
jmp
pop
adc
push
mov
movsb
push
flds
and
imul
sub
mov
stc
fdivp
lret
xor
cmp
dec
out
lcall
orl
mov
xchg
lahf
xchg
pop
inc
add
scas
inc
adc
sahf
jl
shlb
and
push
lcall
fdivs
xor
inc
xchg
dec
cmpsb
sbb
movb
push
out
ret
xchg
xchg
mov
cltd
scas
rcrb
xor
aad
or
jno
testb
jno
push
inc
cmp
cmc
push
mov
int3
dec
imul
xchg
pop
mov
xor
daa
out
test
iret
mov
test
dec
and
loop
imul
xchg
movsl
gs
shlb
rcll
int3
xchg
mov
push
xchg
inc
mov
pop
clc
mov
loope
cli
xor
imul
out
hlt
out
imul
push
lcall
call
arpl
adc
pop
add
cmp
jp
xor
pop
lahf
lods
ficompl
les
sbb
push
jne
lea
adc
push
jg
not
inc
push
push
cltd
jnp
mov
scas
or
stc
xor
or
push
out
mov
cmc
dec
orb
faddp
loop
leave
test
jge
fsubp
pushw
dec
lods
out
xorb
or
outsl
nop
mov
cmc
fimuls
xchg
sbb
sahf
cmpl
in
imull
inc
stc
outsl
lret
not
jo
decb
or
jp
cli
fnsave
jmp
cmp
insl
sahf
jl
popa
loope
lock
int3
cmp
or
dec
cltd
sbb
aas
cs
adc
and
mov
movsl
gs
add
pusha
lea
mov
pop
xchg
jg
out
dec
push
lret
push
pop
inc
lahf
cmpsb
cmp
xor
mov
push
mov
mov
popf
sbb
xor
ljmp
sub
dec
fisubs
lods
data16
dec
sub
or
dec
popf
in
xchg
loope
rcrb
jnp
dec
test
lock
or
hlt
or
insb
lret
xchg
std
dec
dec
dec
xchg
and
pop
adc
in
inc
int3
ss
mov
adc
lds
xor
pop
and
inc
xor
xchg
cmp
sahf
pop
in
xchg
xor
xorl
mov
rclb
push
or
sarl
push
je
xor
outsb
adc
dec
dec
das
sarb
inc
xchg
and
aas
in
push
mov
shlb
scas
into
arpl
les
lahf
sbb
or
xor
inc
xlat
xchg
or
jmp
call
sub
std
iret
pop
mov
scas
into
in
test
lods
inc
sub
ljmp
fmull
test
insl
mov
int
mov
out
push
mov
mov
xlat
mov
aas
push
outsb
in
pusha
adcl
rclb
outsb
hlt
leave
sbb
cli
xchg
xor
fidivrs
out
lods
aad
adc
hlt
imul
nop
sub
add
sbb
mov
sub
aaa
shrl
and
cld
movsb
imul
mov
cmc
fwait
mov
daa
cltd
test
fdiv
xchg
jae
mov
push
pop
jbe
outsl
pop
es
push
movsl
ret
cwtl
push
cmp
ret
adc
mov
pop
xchg
in
cs
xlat
xchg
adc
lret
and
inc
stos
nop
push
jae
in
jmp
divb
sub
ret
cmp
jno
mov
cmp
mov
sbb
notb
sub
jbe
jle
scas
test
xlat
sbb
mov
adc
mov
cmp
shrl
pusha
xor
mov
push
push
adc
jecxz
in
dec
sarb
not
pop
out
xchg
jl
stc
insl
stos
rcll
nop
jl
and
xchg
movsb
add
xor
pop
lds
fwait
data16
dec
arpl
hlt
ss
mov
or
and
frstor
or
std
or
lret
jmp
data16
add
arpl
xorb
sub
push
jae
lahf
jb
push
sub
jns
call
loopne
adc
je
or
dec
repz
clc
ss
daa
pop
or
out
xor
pop
inc
sub
in
cmp
jns
add
enter
adc
nop
xchg
movsl
dec
xor
adc
test
xor
jmp
sti
addb
add
ffreep
loop
icebp
sub
inc
jge
or
fdivp
repnz
sbb
xchg
jg
xor
inc
jns
ds
sub
pushf
and
sbb
jne
and
and
mov
push
dec
push
lds
movsb
fs
xchg
xchg
test
jns
xchg
mov
xchg
out
lcall
and
fsubl
pusha
mov
dec
imul
inc
adc
imul
cli
test
clc
push
sbb
mov
loopne
dec
dec
cmp
mov
mov
cwtl
pop
je
mov
add
insb
sub
mov
sbb
out
sub
pop
orb
addr16
jge
pushf
gs
xchg
fsubs
subl
imul
adc
mov
pop
fimull
js
push
popf
dec
repz
mov
or
outsl
mov
cmp
test
inc
mov
insb
add
dec
dec
loop
push
add
andb
sti
imulb
stos
jge
sub
out
in
in
faddp
test
or
sub
mov
mov
jp
adc
mov
jle
push
xchg
subb
adc
mov
outsb
dec
hlt
stos
xchg
es
mov
outsl
or
inc
sub
loop
mov
push
test
inc
or
jmp
xor
mov
loopne
insb
outsl
adc
and
add
push
add
adc
push
fldl
xchg
push
addr16
add
mov
xor
xchg
out
jae
dec
and
aad
xchg
jbe
shl
mov
mov
into
jle
push
mov
sbb
divl
lds
pusha
js
bound
jg
xchg
push
push
sbb
pusha
in
push
pop
or
and
popa
mov
or
int
or
jle
fdivrp
js
loopne
test
jmp
sub
mov
mov
xchg
data16
push
inc
andb
scas
cmpsl
jae
hlt
std
in
es
pop
fsts
dec
sub
in
mov
push
cmp
add
dec
lret
mov
aam
mov
push
cwtl
out
imul
leave
jmp
sbb
mov
cmp
cld
insb
fmul
int
xor
dec
repnz
xor
daa
push
jle
dec
dec
pop
mov
iret
jmp
jo
stos
mov
or
sbb
fs
sub
or
lahf
jecxz
push
scas
mov
inc
jae
jb
mov
fcoml
movsl
and
mov
movsl
into
test
shr
adc
int3
adcl
lret
test
lret
je
pusha
xorl
mov
xor
or
add
pusha
xchg
xlat
ljmp
inc
jb
cmpsb
or
fwait
add
imul
retw
mov
movsl
ret
jg
inc
dec
xor
adc
mov
insb
cwtl
sub
jnp
pop
sti
inc
push
out
jp
push
adc
fists
xor
sti
mov
sbb
loope
cmpsl
repz
xchg
aaa
xchg
sbbl
cwtl
test
xor
into
sub
lods
jmp
mov
mov
jmp
jo
das
test
and
arpl
add
fbstp
sbb
push
sti
and
aam
stos
and
jae
and
jnp
ljmp
mov
cmpsb
mov
xchg
jg
xor
mov
cmp
lret
inc
fidivs
in
mov
cmpsb
pop
adc
mov
insl
or
pop
adc
roll
sub
pop
popf
incb
imul
or
mov
mov
lock
mov
ljmp
loopne
mov
outsl
pop
dec
mov
cs
jge
jo
ljmp
das
push
inc
int
cmpsl
xor
xchg
mov
mov
cwtl
jne
mov
scas
roll
insl
fisttpl
int
lahf
mov
pop
sub
fnstcw
das
xchg
mov
maxps
lock
inc
fs
divl
test
shrl
cs
gs
loop
sub
pop
push
mov
movsl
mov
outsl
dec
lods
push
add
inc
mov
pop
adc
call
iret
lds
aad
xchg
pop
pop
mov
lret
jbe
je
push
sub
mov
push
ffree
cmp
and
xchg
dec
mov
aad
lret
cmpsl
add
outsl
mov
mov
lock
fisttpll
idiv
mov
jg
jbe
movsl
mov
cmp
aas
pop
add
aad
fdivrs
mov
mov
lea
out
adc
outsb
repnz
loope
cmp
add
std
orb
cmp
xchg
mov
lea
lods
js
fwait
sbb
repnz
dec
sub
imul
aad
out
xchg
shrl
movsb
cld
js
xor
mov
xor
xchg
stos
mov
cmp
pop
or
or
cmc
adc
cmpsb
shll
cmpsb
cmp
sub
call
sarl
mov
out
pushf
outsb
adc
mov
cli
out
xchg
out
lahf
je
mov
sbbb
sti
mov
fwait
inc
insb
push
pop
pop
shl
clc
pop
scas
sbb
aad
js
fimuls
jmp
sbb
dec
mov
sbb
jg
scas
xchg
ljmp
mov
icebp
gs
es
pop
jae
adcw
fimuls
xchg
cld
xor
jge
pushl
jecxz
xlat
push
and
cs
mov
jns
sbb
test
push
jecxz
negl
push
sbb
enter
xchg
pushf
insb
dec
inc
aam
inc
and
inc
and
sub
shr
orb
call
push
imul
jae
xor
inc
sub
je
add
mov
call
inc
in
ret
movsb
lahf
std
adc
repz
fdivr
dec
test
mov
or
fwait
mov
add
in
imull
dec
mov
jmp
dec
mov
push
xchg
or
add
clc
ds
cmp
mov
loopne
sub
mov
ja
cmp
idivb
inc
or
adc
xchg
push
pop
adc
loop
inc
xchg
or
dec
mov
or
xchg
sbb
int3
mov
les
jmp
lock
xorl
ret
sub
dec
xchg
sub
sbb
or
push
stc
mov
andb
push
jno
pop
mov
xor
lds
mov
sbb
insl
or
xchg
nop
sbbb
les
mov
dec
sahf
cmp
lcall
push
mov
dec
push
daa
leave
std
arpl
ds
push
ret
pop
push
sahf
pop
mov
pop
sub
mov
push
or
scas
mov
lret
js
lea
xchg
int
mov
xchg
fcomps
jg
pop
in
xor
push
shll
sti
in
and
std
mov
pop
out
push
sbb
xchg
out
cmpsl
leave
cs
push
out
popa
pop
inc
push
shlb
xor
add
rcll
repz
sarl
jnp
icebp
jl
insl
xchg
dec
or
cld
add
cmpsl
es
fmul
int
or
lds
sahf
inc
mov
mov
mov
jecxz
push
sub
shr
jecxz
mov
fimull
mov
call
or
insl
pop
pop
xchg
jo
push
mov
rcrb
prefetch
or
mov
xchg
jnp
xor
sbbb
cs
jecxz
stos
fldl
lods
aad
nop
fcomip
mov
pop
pusha
cmp
adc
scas
fst
aaa
icebp
insl
inc
fnstsw
or
xor
bound
out
icebp
jae
mov
pusha
sti
out
push
sub
lea
mov
mov
xor
mov
cs
push
shlb
rcrb
xchg
pop
ljmp
mov
add
and
fucom
cwtl
popf
fsubp
xchg
xchg
test
xchg
sub
sbb
pop
lahf
out
pop
cltd
add
popf
ljmp
push
stos
xchg
testl
jo
test
rcr
lret
jge
cmc
enter
clc
or
lods
xchg
xchg
mov
mov
outsb
lea
mov
mov
out
shr
jmp
outsb
data16
jnp
movsb
mov
popa
jno
inc
push
dec
and
pop
add
inc
or
daa
cmp
dec
jge
in
jle
jl
iret
and
out
jae
int
jmp
or
mov
dec
inc
lahf
scas
mov
shll
dec
jo
mov
adc
cmpsl
push
push
cmp
mov
movsb
enter
subb
aaa
cltd
jmp
dec
js
sbb
pop
adc
adc
push
jo
dec
movnti
adc
push
clc
lret
add
call
mov
xchg
adcb
mov
scas
sub
aas
out
cmp
pop
cmp
aas
bound
lea
or
xchg
lret
dec
jne
insb
lock
shll
push
stos
cltd
add
daa
imul
leave
xchg
inc
call
xorl
loope
or
movsl
pop
les
push
insl
lea
sbb
push
sbbb
movsl
sub
lock
outsl
jg
jbe
leave
mov
mov
cmp
cmp
xchg
ret
lcall
aaa
fdivl
and
cmp
into
mov
add
or
das
int3
cmpsb
loopne
aad
sub
int3
adcb
movl
mov
cmp
mov
popf
or
lret
or
outsb
cmp
arpl
rorl
mov
pop
ds
mov
add
popa
add
jns
gs
int3
icebp
and
enter
ljmp
ss
daa
mov
xchg
outsb
sbb
int3
and
push
orb
mov
push
jnp
mov
jl
mov
jnp
stos
rcr
mov
mov
arpl
inc
adc
rcl
xchg
or
pop
mov
jle
stc
xor
or
dec
das
adc
mov
shll
lcall
cld
mov
inc
mov
por
clc
cmp
cli
dec
lret
std
ds
inc
jg
jl
xchg
mov
inc
pop
stos
notb
dec
jbe
and
or
roll
bound
std
test
std
mov
mov
jo
je
xor
aam
mov
sub
and
jmp
repz
leave
jbe
int
xchg
loope
xchg
lods
add
sbb
sub
and
stos
clc
jmp
inc
cmp
jle
repz
hlt
dec
sbb
dec
shrb
sbb
dec
jecxz
jnp
das
xor
ljmp
or
and
dec
das
or
mov
int3
stos
loopne
je
dec
inc
lcall
scas
sbb
addr16
jb
stos
inc
ljmp
dec
push
pop
cwtl
scas
jns
daa
cmp
sbb
cmpsl
movsl
out
jg
fwait
xor
dec
call
pusha
popf
nop
test
lea
sbb
test
in
fmuls
jns
jbe
js
and
jle
push
das
cmp
xchg
iret
pusha
popa
jbe
jo
ljmp
aam
push
inc
insb
wrmsr
and
sbb
adc
mov
sar
pop
pop
aaa
sbb
sarl
push
aaa
push
scas
movsl
pop
out
sbb
sub
lea
mov
push
jp
das
sarl
inc
sub
push
xor
pop
ja
popl
xor
cmp
xlat
stos
push
mov
push
fisttpll
pop
add
in
push
mov
pop
rorb
mov
js
mov
mov
pop
out
pop
and
sub
inc
dec
and
push
das
in
call
xor
es
dec
inc
pop
lret
pop
cmp
movsb
movsb
or
mov
shll
sub
lds
or
sub
ds
das
pop
xor
pop
out
ljmp
xchg
adc
popa
or
xchg
lds
mov
adc
sbb
cmc
mov
test
add
leave
and
inc
addr16
jg
rdmsr
lock
out
lods
repnz
imul
cmp
inc
movsl
hlt
mov
in
jae
inc
imul
jecxz
adc
pop
adc
and
shrl
shr
loopne
les
inc
imulb
inc
xor
mov
dec
les
xor
jge
sbb
ret
xlat
xor
pop
mov
ja
jge
arpl
in
addr16
out
inc
sbb
pop
lea
clc
xlat
aad
aas
mov
jmp
pop
out
push
push
imul
rcll
fldl
insb
push
mov
aad
cli
add
dec
xchg
fnstcw
mov
and
loop
xor
pop
andb
je
and
inc
testl
push
and
xor
push
mov
sub
adc
adc
jmp
push
sub
sub
mov
push
sub
sti
xor
mov
jns
sti
in
add
dec
jg
mov
push
nop
fisubrs
add
adc
test
pop
into
popa
xlat
jbe
inc
mov
or
mov
adc
fcompl
push
aam
inc
ljmp
and
lahf
push
sbb
les
dec
sbb
add
mov
lahf
call
je
lock
cwtl
adc
test
sbb
jns
and
push
imul
xchg
outsl
inc
jne
sub
ret
mov
push
or
lods
ficompl
xor
mov
inc
mov
filds
mov
push
cli
sub
dec
movl
lods
pop
sub
sbb
mov
push
sub
lret
in
dec
fldenv
add
out
cmp
lds
out
dec
push
out
int3
xor
cmp
fbld
and
cmpsl
leave
add
and
out
sub
and
movsb
push
mov
jbe
outsl
add
iret
cmp
sbb
jecxz
in
daa
pop
out
movsb
inc
xor
mov
jnp
xor
loope
xor
stos
fldl
mov
or
sub
mov
sub
lret
icebp
test
inc
mov
lods
pop
pop
das
test
repz
imul
jmp
mov
aaa
in
adc
jg
add
pop
inc
adc
mov
adc
arpl
inc
call
jecxz
xor
jb
sub
lahf
mov
push
test
or
iret
push
rcrl
call
dec
fstl
cmp
fistl
jp
sub
xor
leave
push
sahf
movsb
adc
test
jns
dec
test
test
imul
mov
jmp
mov
insb
addr16
cmp
inc
stos
lret
xchg
test
filds
movsb
shll
cmp
aam
mov
es
cmp
pop
int
sbb
fiaddl
outsl
lahf
and
and
inc
mov
cmc
insb
push
lret
inc
xor
in
sub
arpl
mov
icebp
sbb
cmp
out
or
adc
vxorps
out
pop
mov
push
push
mov
cmpl
inc
cmp
pop
xchg
xchg
enter
push
adc
xchg
pop
stos
sub
ror
push
imul
mov
shll
cltd
sub
outsb
daa
mov
leave
pop
xor
out
roll
aam
adc
out
adc
rcrb
das
shlb
lds
shlb
mov
inc
stc
push
mov
adc
mov
fsts
push
mov
sub
push
add
or
cmc
cmp
int3
inc
jmp
lahf
lret
testb
mov
xor
xorl
test
sbbb
ljmp
stos
iret
mov
je
pop
into
mov
jne
jno
add
dec
mov
and
adc
lret
in
lods
xchg
icebp
les
lret
xchg
imul
mov
adc
xor
jbe
xlat
xor
cmp
mov
ret
cmp
xlat
xchg
mov
into
push
push
sbb
push
lods
or
les
adc
shlb
fwait
or
addr16
xchg
loope
inc
add
arpl
dec
das
clc
inc
pop
pushf
inc
std
mov
lret
or
mov
add
add
dec
fcomps
xorl
push
mov
sub
icebp
in
sbbb
cmp
mov
and
dec
bound
sbb
mov
inc
gs
aam
xchg
lea
add
loop
cmp
add
xchg
aam
in
xor
dec
sbb
sbb
mov
ljmp
jle
adc
pop
pushf
cmp
xor
enter
dec
es
shrl
rclb
rcrb
shrl
push
dec
xchg
andl
addr16
cli
into
outsl
pop
rclb
ljmp
cs
daa
in
movsb
cmp
add
ds
lret
insl
aam
lret
dec
inc
xor
sbb
xchg
out
mov
mov
inc
pop
xchg
movsb
ljmp
pop
aaa
lcall
mov
cli
or
xchg
fcmovnu
mov
lock
xor
fldl
clc
jb
push
jo
ss
push
sbb
pop
aaa
and
push
or
or
lea
icebp
adc
dec
std
out
popf
add
push
sbb
lahf
xor
push
std
test
pop
inc
inc
scas
xor
pusha
dec
dec
xor
inc
and
inc
sbb
add
scas
call
sti
rcr
es
add
xchg
jne
pop
pop
xor
pop
jge
leave
sbbb
jmp
pop
jle
mov
jge
jecxz
adc
je
push
iret
iret
rol
mov
cmp
jl
xchg
mov
push
jne
fstps
sub
gs
mov
mov
cmp
and
adc
cmp
shrb
sub
cltd
test
xchg
or
mov
aaa
cmp
add
add
push
outsb
cmpsb
xor
sub
adc
xor
cmp
inc
push
movsl
in
fcoml
insl
sti
int3
adcl
sub
out
loope
cli
dec
push
into
mov
jae
popa
pushf
das
sar
imul
fdivrs
or
imul
call
decl
xor
inc
mov
cli
xor
fsts
inc
or
iret
movsb
pop
cmp
outsb
adc
mov
inc
xlat
and
sub
cmpsl
xor
xchg
into
xchg
into
or
push
mov
mov
fbstp
sub
in
mov
mov
rclb
das
sub
jb
xchg
addr16
sbb
mov
ficompl
pop
mov
rclb
mov
lahf
xchg
jp
inc
or
xchg
xchg
daa
push
pusha
ret
aaa
jbe
jae
scas
aad
jae
stos
cmp
lds
fimull
rorb
jae
neg
mov
pop
xchg
jg
loope
test
xchg
test
sbb
fisubs
mov
ficoms
and
add
jb
lea
xchg
sbb
mov
dec
loope
shrb
push
xor
inc
in
adc
dec
insb
ret
mov
dec
xchg
inc
inc
sbbb
cmp
or
add
rolb
bound
cmp
loopne
in
fs
js
pop
into
stos
sti
mov
fsts
xchg
mov
push
sbb
mov
incb
sub
sbb
sahf
repz
leave
insl
xchg
add
pop
or
lret
adc
out
pop
inc
push
sbb
popa
fsts
lea
mov
call
cli
incb
jle
xchg
cs
push
lods
lahf
mov
xchg
jle
mov
mov
and
cmpsb
fisttps
mov
test
mov
pop
xchg
push
xchg
sar
clc
mov
jns
mov
mov
cwtl
push
mov
inc
loope
xchg
jnp
cwtl
xor
mov
jge
mov
cmp
xor
xor
popf
idivb
push
jmp
dec
ret
stos
dec
adc
push
scas
and
pop
mov
repz
in
fcomi
sub
ss
stc
mov
imul
fucomp
js
pop
rorb
sahf
jae
jmp
testl
inc
ret
cmp
ljmp
scas
jnp
repz
rolb
sbb
test
add
add
push
out
xchg
notl
cmp
and
mov
out
loop
ficoms
add
push
and
jg
inc
insl
push
test
ljmp
adc
icebp
mov
jmp
aas
jne
pop
pop
xchg
jo
stos
cmpsb
jmp
jbe
cmc
adc
adc
dec
in
adc
repz
mov
mov
cltd
or
aam
jbe
shlb
fs
dec
jmp
xor
mov
fisubrs
lods
mov
ret
ss
xchg
xor
out
mov
movsl
out
mov
xchg
add
push
stos
je
dec
dec
popa
adc
push
lods
push
repz
mov
mov
mov
mov
inc
dec
adc
push
add
inc
mov
inc
mov
jb
and
xchg
pusha
fstpt
mov
mov
add
pusha
cli
jmp
mov
dec
bound
int
in
adc
movsb
sbbb
bound
cmp
cltd
outsl
sub
stos
mov
mov
jno
cwtl
stc
mov
hlt
jns
jae
sub
sbb
adc
push
jl
mov
mov
dec
sub
sub
stos
inc
jae
pop
mov
sub
out
pop
push
mov
lret
mov
enter
pop
push
movl
shrb
mov
leave
lret
push
cwtl
xor
hlt
in
xchg
or
int
and
out
adc
jne
jecxz
adc
subl
dec
cmp
jae
add
dec
and
xor
ret
leave
pop
or
push
mov
push
pushf
or
loope
or
cmp
pop
aam
push
jl
leave
mov
cwtl
mov
jmp
lods
sti
movsb
insb
sbb
mov
pop
mov
sbb
adc
addr16
sbb
dec
test
mov
mov
pop
fchs
lea
xchg
imul
lods
jmp
sub
xchg
xchg
xorb
aad
mov
push
cmp
jno
xchg
jno
sub
or
cmp
xor
ret
adc
mov
cmp
xor
jno
imul
push
cmp
xchg
push
add
sbb
sbb
inc
fwait
sub
jno
or
mov
xor
daa
mov
shll
test
movsl
das
sbb
insb
insb
and
add
out
xchg
fildll
lahf
loope
repz
imul
jmp
les
inc
inc
sbb
outsb
and
xor
push
aad
inc
jo
fmuls
sbb
out
rclb
xor
imul
notl
dec
lds
je
movq
in
int
jnp
lret
int3
mov
data16
js
rcll
popa
lcall
xchg
pop
add
push
rcll
pop
cwtl
popa
adc
scas
push
pop
cld
sub
pop
sub
xchg
dec
ja
pop
xor
aam
push
inc
rcr
mov
and
pop
push
cmp
mov
dec
jb
jb
repnz
test
outsb
dec
out
inc
in
xor
add
fisubl
stos
jmp
or
test
js
out
jbe
rcrl
sub
aam
pushf
push
push
pop
inc
jb
repnz
repz
roll
and
pop
lods
sub
stos
push
jecxz
adc
scas
mov
jg
insb
out
sub
imul
jle
lahf
test
fwait
dec
mov
pop
fs
test
push
mov
icebp
repnz
mov
iret
mov
scas
in
dec
cmc
in
repz
fisttps
xor
inc
jp
das
in
outsl
gs
loop
mov
decl
sti
cmpsb
and
sbb
lods
gs
ds
nop
pop
mov
in
mov
jno
xchg
push
stos
xor
pop
and
fmul
adc
push
rcll
in
fs
nop
xchg
popf
testb
or
out
enter
cmp
add
add
adc
daa
je
cmpsb
mov
loopne
ja
leave
cltd
into
hlt
push
addr16
mov
push
nop
dec
test
les
lret
cmovne
dec
js
pop
scas
jl
test
add
cmpl
and
lret
jnp
dec
cwtl
pop
inc
xor
pop
push
pop
hlt
test
loope
fcmovb
or
or
xor
call
dec
adc
jo
mov
ljmp
cmp
pop
cmp
dec
cld
xor
mov
ja
push
cld
pusha
adc
add
int
and
cli
xchg
mov
jns
shll
fdivl
lock
push
or
outsl
jl
fistl
leave
mov
adc
pop
pop
xor
jno
stos
imul
dec
xor
or
in
fdivs
adcl
outsb
fldenv
adc
or
scas
jbe
pop
fld
fidivs
pushf
std
mov
cwtl
adc
xchg
aas
lods
frstor
aam
imul
lods
jecxz
jnp
leave
into
cs
push
adc
fidivrs
pop
std
and
ficomps
mov
mov
lret
pop
xorl
outsb
leave
mov
and
jge
je
stc
faddl
jae
les
cmp
rcl
sbb
aas
push
sbbl
jp
arpl
jmp
shrl
jg
cmpsb
add
aam
fisubrs
pop
dec
or
inc
jbe
mov
mov
mov
shrw
inc
cmp
aad
dec
fwait
cwtl
jg
push
xor
push
xchg
push
mov
sar
push
adc
cmp
dec
das
enter
nop
sarb
add
mov
xchg
mov
push
sbbb
fsubrl
or
dec
mov
push
push
dec
adc
mov
das
mov
movsb
out
ds
sbb
mov
pop
cld
imul
or
and
mov
pop
mov
sub
push
and
jae
fucomp
dec
movsb
loop
test
test
mov
inc
movsl
lea
xchg
repz
int
lea
fs
jnp
addb
pop
mov
lret
dec
sub
dec
test
fidivl
sbb
bound
xor
lods
pusha
cmp
ret
dec
dec
jne
sub
pop
mov
pop
or
push
bound
sbb
cli
xlat
lods
cmovl
icebp
in
call
jo
shlb
shrb
cld
xchg
iret
sub
cwtl
in
and
inc
call
leave
inc
xor
add
fnstsw
add
gs
lds
add
bnd
sbb
jle
daa
push
xor
aad
popf
push
pushf
mov
into
lcall
dec
pop
mov
xlat
sub
mov
lods
mov
inc
or
clc
daa
repz
push
pop
fimull
scas
dec
lods
popf
lds
aas
lds
ss
or
insb
sub
pop
adc
push
and
or
push
jle
pop
sub
jle
cmp
push
test
test
movsl
mov
jle
rol
fnstenv
cltd
adc
and
rol
dec
xchg
js
jnp
inc
push
scas
clc
and
inc
insl
scas
push
nop
mov
fwait
iret
xor
int3
hlt
call
fidivrl
and
sbb
xchg
cmp
mov
test
hlt
es
fdivrs
out
pushl
jge
pop
jno
stc
sub
mov
pop
dec
das
int3
icebp
sarl
fs
sub
sub
cmp
adc
cmp
mov
mov
lahf
or
push
aaa
xorb
mov
jp
in
adc
imul
or
inc
push
mov
lea
xchg
rorb
rol
bound
push
mov
or
stos
pop
mov
jmp
jne
cmp
insb
enter
leave
pop
push
jno
enter
ljmp
push
mov
xorl
mov
inc
test
je
icebp
ret
inc
repz
mov
ret
int
inc
or
stc
aaa
add
fimuls
fnstcw
pop
lret
sti
jge
bound
mov
stos
xchg
add
fs
xchg
mov
sub
repnz
push
jmp
jecxz
xchg
xor
gs
mov
sub
daa
sbb
leave
dec
enter
mov
xor
adc
pop
push
pop
jno
push
jp
push
mov
data16
inc
sbb
pop
mov
imulb
das
jge
imul
xchg
xor
loopne
mov
mov
std
sub
cmp
hlt
mov
fsubp
xor
out
jecxz
xchg
adc
clc
mov
pushf
sbb
stos
je
dec
xchg
or
mov
stos
mov
movsb
push
rcll
scas
add
shr
in
scas
hlt
or
in
mov
loop
clc
mov
fimuls
loope
inc
clc
pop
xor
sbb
push
addr16
ret
jnp
add
push
aam
test
cs
inc
mov
mov
jns
lahf
mov
jnp
add
dec
pop
mov
xchg
adc
enter
mov
sub
insb
lea
pop
xchg
and
pushf
sarb
pop
push
add
push
push
jecxz
push
in
les
roll
and
and
push
inc
out
mov
gs
inc
lock
test
test
dec
xor
arpl
gs
iret
inc
xor
cwtl
jle
rcl
push
adc
dec
mov
dec
adc
cli
iret
push
add
mov
jle
add
xchg
add
cmp
xchg
xchg
cmp
fwait
sub
sbb
pop
movb
adc
rdtsc
inc
orb
outsl
in
arpl
in
xchg
or
dec
mov
insl
adc
fstps
repnz
and
sbb
loope
dec
mov
das
push
mov
sub
aam
or
call
inc
inc
pop
xchg
test
out
jns
inc
sub
push
loope
icebp
mov
das
mov
push
mov
stc
pop
cmp
movsl
mov
lock
xchg
cli
loopne
addr16
mov
dec
fildll
shl
fimull
adc
mov
pop
call
jmp
lods
jle
js
aam
push
ss
cli
mov
inc
mov
add
notb
pop
and
pop
imul
dec
out
inc
xor
xchg
in
adc
lcall
insb
sub
aam
outsl
pop
rorb
stos
jo
inc
or
sub
ss
mov
fs
rolb
test
pop
sub
ljmp
jmp
mov
mov
lock
mov
mov
add
ja
mov
mov
xor
pop
pop
stos
mov
push
addr16
loopne
mov
cwtl
and
push
add
pop
push
mov
mov
cmpsb
or
shll
mov
fdivrl
sub
add
push
imul
or
addr16
mov
jle
mov
test
mov
dec
pop
xor
jge
xor
ss
lock
sub
sti
lock
jg
divl
fnstenv
xlat
xor
test
orl
jb
int
add
jmp
mov
lahf
dec
hlt
sub
xchg
xchg
cmp
dec
scas
gs
out
jl
push
sti
call
pop
inc
mov
ret
push
mov
cmp
aad
popf
fcoml
xlat
cmp
into
and
adcl
loopne
mov
dec
mov
shll
push
jmp
add
data16
inc
mov
popf
mov
aam
fstl
pop
mov
es
pusha
jge
sbb
and
testb
push
int
jg
push
sbb
cmp
aad
dec
pop
rcpps
popf
adc
in
aad
imul
pop
sbb
push
sub
lods
in
mov
push
inc
pop
fs
clc
cmp
push
sbb
into
enter
pusha
mov
imul
xor
or
push
jo
andl
cmp
sbb
jae
pop
adc
popa
incl
cmpl
lock
mov
push
push
xchg
push
add
ja
pop
adc
cmp
jle
nop
xchg
testb
adc
fisubs
jno
fbstp
repz
mov
inc
mov
and
notl
repz
add
dec
adc
adc
xor
xor
fadds
mov
dec
sbb
or
mov
jno
sahf
addb
repnz
push
cmp
add
pop
mov
dec
rcrl
xchg
jmp
cltd
pop
mov
ss
add
cltd
loop
cmp
data16
sbbl
out
pop
adc
stos
jle
push
sahf
leave
push
sbb
clc
idivl
shrb
lock
sbb
incb
popf
fdivs
pop
or
scas
pushf
mov
xor
push
push
popa
sbb
mov
mov
jg
cmp
arpl
stos
inc
in
and
cmp
jg
mov
pop
cmp
das
push
mov
js
sub
in
cmp
test
cmpb
stos
or
pop
pop
jl
xor
mov
ret
adc
xor
mov
inc
mov
xchg
outsb
sti
dec
xchg
sub
cli
clc
arpl
movsb
enter
xchg
mov
setnp
std
pop
ret
sti
sbb
mov
mov
mov
or
or
test
jae
add
mov
xchg
adc
add
fs
idivl
jne
dec
push
and
shll
ljmp
mov
adc
leave
cmp
xor
and
mov
dec
sub
mov
lods
daa
push
mov
mov
push
sbb
rcrl
mov
les
pushf
mov
in
scas
push
ret
dec
and
cmp
jg
mov
subps
pushf
into
call
int
lods
and
sahf
pop
loopne
cmp
int3
mov
ret
adc
andl
jae
loope
mov
mov
xlat
pop
test
ljmp
cmp
jge
ja
loopne
fcmovne
mov
pop
sub
mov
add
jbe
xor
or
repnz
incl
dec
cli
call
jle
push
pop
repnz
or
imul
inc
xchg
ja
jnp
mov
pop
lods
sbb
out
arpl
ja
test
push
pop
push
mov
cwtl
les
and
mov
add
movsb
mov
and
xchg
pop
stos
push
cmc
pop
mulb
jns
sti
xchg
out
int
jae
movsb
mov
sbb
jle
mov
in
dec
inc
lret
dec
cmpsb
rorb
je
test
or
fdiv
xchg
divb
mov
test
sbb
out
das
fwait
add
movsl
insb
mov
mulb
js
jns
mov
push
sbb
std
faddl
mov
dec
inc
sahf
sub
lods
add
and
inc
sarb
jae
push
insb
cmp
aam
insb
outsl
and
call
incl
js
mov
dec
sbb
mov
dec
test
or
not
jo
mov
xchg
mov
xor
dec
and
xchg
xchg
pop
popf
lret
xchg
or
pop
add
push
inc
inc
mov
jnp
adc
adc
fbstp
xchg
and
sub
scas
sub
sbb
inc
and
pop
xchg
nop
push
sub
fsub
xchg
sbb
int3
jl
push
inc
mov
cs
cmpsb
iret
cmp
int
dec
js
jl
sbb
mov
insb
into
add
ss
ss
lea
inc
insb
lahf
cltd
shlb
aam
int3
loop
cmp
pop
sbb
mov
jl
outsl
sbb
cmp
or
mov
fldenv
in
js
jl
xorb
pusha
mov
xor
mov
mov
jb
mov
jle
aaa
aad
mov
das
movsl
push
mov
or
xchg
mov
mov
pop
cmp
int
add
lcall
out
jp
push
movsl
leave
jecxz
pop
mov
iret
pop
mov
and
and
les
and
mov
fxch
or
adc
push
jns
mov
out
jge
jp
je
push
enter
xchg
mov
push
pop
sub
fisubs
sub
pop
sarl
fdiv
xchg
out
call
int
popf
cmpsl
repnz
lret
daa
out
fst
std
sub
xchg
mov
or
jle
push
arpl
fisttpll
xor
shll
lahf
dec
sbb
in
pop
mov
rcrb
sub
aaa
jmp
pop
xor
sti
in
clc
lds
xchg
dec
jo
jne,pt
pop
or
and
insb
movsl
dec
aam
lahf
push
and
nop
hlt
inc
mov
scas
addr16
inc
loop
fists
scas
loop
mov
mov
push
aas
sub
or
out
outsb
lahf
fnsave
inc
ds
lcall
jnp
cwtl
shlb
ss
loope
in
test
dec
testl
pusha
cmc
pop
cmc
jo
roll
cmp
inc
jno
fldl
sbb
std
lret
xchg
mov
xor
jb
mov
xor
std
sbb
sahf
add
adc
jle
fdivrs
int3
into
adc
je
sti
dec
icebp
pop
cmp
adc
int3
jo
cmp
push
inc
lea
adc
into
int3
fisttps
rcrl
mov
inc
add
int3
pop
push
push
and
test
or
inc
cmp
xchg
daa
in
mov
add
stc
enter
pop
jns
fsubs
sbb
sub
dec
push
mov
inc
scas
jbe
daa
in
daa
outsb
bound
add
jecxz
sti
ljmp
ljmp
jae
jg
push
push
and
xchg
roll
sub
call
xor
daa
or
sub
add
dec
xchg
pop
add
out
sarl
aaa
jbe
loopne
cmpsb
fnstcw
sub
and
cmc
dec
addr16
data16
sarl
xchg
mov
add
inc
cmpsl
in
mov
int3
or
mov
jb
insb
jno
mov
mov
imul
enter
jo
inc
lds
sbb
movsb
mov
loopne
jge
sbb
sub
popa
out
lret
in
mov
sbb
mov
repnz
add
jg
mov
aas
daa
stc
mov
mov
ficoms
sahf
aaa
pop
jnp
ret
xchg
mov
hlt
add
jg
adc
pop
lock
repz
sub
push
out
lods
pop
lret
cmc
add
cs
daa
lret
scas
int
sbb
fmul
jne
dec
std
cmp
rorl
sbb
or
mov
lods
dec
xor
out
pop
ja
lods
push
push
imul
scas
mov
mov
xor
fs
dec
cmp
cltd
fstl
fsubs
lods
mov
dec
ljmp
aam
push
xchg
push
loope
arpl
sub
arpl
push
push
std
aaa
sbb
shrl
fldcw
or
jecxz
cmp
jl
insb
inc
icebp
xorb
inc
std
push
leave
in
dec
ret
movsl
pop
add
out
sbb
mov
dec
mov
hlt
aad
lea
mov
and
lock
push
sub
fistps
mov
push
mov
adc
enter
arpl
xor
cmp
cs
clc
sub
nop
push
loop
or
addr16
dec
and
int3
fcompl
xor
incl
mov
sub
and
scas
daa
jo
pop
lret
addr16
je
fsubs
inc
mov
lcall
push
lahf
jnp
sub
fwait
sub
int
loope
pop
movsb
sub
mov
or
sarb
fsubr
sub
pop
xchg
push
cmp
dec
outsb
in
stos
cmp
outsl
push
in
lahf
mov
cwtl
call
mov
pop
jnp
mov
movb
cld
repz
fidivrs
cmpsl
in
jno
xchg
je
sbb
je
mov
fcom
sub
mov
dec
dec
pop
mov
mov
call
mov
push
stos
or
pop
sbb
add
pop
and
or
mov
xchg
testb
test
bound
into
jg
and
stos
mov
jl
iret
mov
in
int
jecxz
fdiv
push
and
cmp
es
mov
mov
inc
mov
decl
lret
xchg
pop
notb
fiadds
add
aam
pop
jle
or
xor
stos
dec
pusha
ljmp
in
lock
inc
divb
jle
pop
mov
dec
xchg
dec
jle
test
pop
lock
push
xchg
arpl
mov
sbb
mov
pop
mov
mov
mul
jp
insl
jl
add
dec
lds
dec
sbb
pop
jg
movsl
icebp
sbb
mov
adc
mov
dec
mov
xor
outsl
ret
or
push
pop
or
pop
add
pop
rcr
fisubrl
ret
and
out
enter
outsb
addr16
jbe
sbb
scas
push
dec
int3
and
lret
in
lock
mov
mov
dec
in
bound
insb
add
adc
out
push
rorl
inc
jbe
jno
jl
cmc
push
pop
xorl
adc
mov
in
jge
pushf
jbe
test
add
in
jmp
cmp
lcall
xor
mov
pushf
or
lods
push
cmp
rclb
dec
int
cmp
and
sub
pop
inc
andl
out
add
mov
or
lret
shl
stos
mov
cs
frstor
inc
cmpsl
sub
sub
push
outsl
dec
arpl
mov
test
jge
push
icebp
lods
cmp
jae
jne
sub
pop
xor
shl
add
loop
ds
mov
inc
or
sbb
mov
cmp
jo
mov
push
ret
lods
jge
or
and
ficompl
scas
fisubrl
call
lds
xor
xchg
outsl
add
cmp
inc
xchg
sahf
adc
adc
push
sbb
icebp
fstps
cwtl
add
mov
lods
popa
aam
pop
mov
xor
sub
mov
xlat
jle
mov
je
out
and
lret
rcl
mov
pop
aad
push
add
mov
cmc
ret
xor
jae
cmp
jne
cwtl
dec
push
xor
repnz
xchg
std
lahf
push
gs
push
or
dec
mov
sub
loope
jns
pop
pop
xor
and
xor
faddl
int
mov
push
adc
push
push
out
sbb
test
out
notb
add
iret
jl
scas
enter
mov
jo
sub
cwtl
lret
dec
ror
sti
mov
leave
outsb
addl
push
xor
gs
lock
xor
dec
jnp
stos
aad
push
inc
negb
mov
notb
add
dec
imul
cs
test
xor
adc
jb
sar
aaa
add
jo
xchg
xlat
cmp
popf
sub
cmpsb
jl
jnp
scas
xor
jle
xchg
mov
ss
imulb
mov
fiaddl
push
xor
push
mov
cmpsb
loope
inc
pop
xor
mov
mov
sbb
jmp
or
stc
shld
cmc
cmc
lds
jnp
mov
pop
pop
mov
ss
mov
inc
jmp
push
jecxz
mov
adc
and
lods
call
shll
imul
mov
enter
loopne
ja
pop
jp
adc
ret
mov
mov
jae
out
sub
out
pop
dec
adc
icebp
cmp
mov
dec
not
sbb
xchg
dec
fsts
sub
adc
cmp
and
xchg
xor
sub
push
test
and
cmpsb
inc
jno
sarl
sbb
je
lret
test
repz
cs
jp
cltd
mov
dec
dec
jb
rolb
push
ss
lds
enter
push
dec
sarb
lret
in
add
inc
cltd
mov
popa
cmp
sbb
push
lcall
pop
inc
fwait
data16
pop
jg
xchg
pop
daa
sub
inc
pop
and
test
pop
lret
sbb
adc
iret
dec
mov
outsl
sbb
push
pop
daa
inc
or
mov
jle
mov
jle
mov
pop
insl
out
mov
sub
fldcw
mov
pop
inc
and
jnp
xlat
ret
out
mov
push
cmpsl
or
xor
jne
mov
stos
call
les
or
out
sub
mov
addr16
xor
iret
jge
ljmp
sbb
inc
scas
cmpb
or
fldcw
mov
xchg
adc
pop
popa
lret
enter
clc
ljmp
fsubrs
jno,pt
ret
push
fcomp
and
ss
cmpsb
push
rcrb
and
jecxz
adc
int3
ret
shrl
jg
or
mov
enter
xor
movb
add
add
sar
int3
push
sub
mov
daa
mov
push
mov
psllw
scas
subl
mul
ja
inc
adc
daa
je
addb
jnp
push
dec
mov
mov
fnstsw
xor
dec
in
jnp
scas
repz
push
leave
and
dec
ds
cld
xchg
and
mov
push
movsl
jbe
cltd
and
roll
dec
mov
jecxz
leave
push
mov
hlt
arpl
add
enter
out
popa
inc
or
pop
xchg
lret
shll
jbe
jb
add
xor
dec
shl
cli
jecxz
jne
mov
sub
cmp
cmp
xchg
inc
dec
nop
mov
mov
imul
pushf
sahf
xchg
js
jmp
and
mov
push
fiadds
add
mov
sub
movsb
leave
or
shr
dec
add
rcll
rcrl
and
mov
jmp
pop
stos
stos
xchg
and
mov
mov
sbb
lods
pop
cmpsl
push
adc
xor
test
pushf
sbb
imul
ret
push
inc
dec
aaa
sbb
adc
pop
scas
mov
aam
pop
or
repnz
dec
stos
mov
pop
imul
outsb
pop
push
cmp
inc
mov
inc
stos
dec
call
rcl
xchg
sub
mov
jmp
scas
jns
mov
iret
push
stos
outsb
push
ret
mov
jg
fdivrl
es
es
js
int
sbb
cmp
push
mov
int
sarb
cmp
sti
sbb
sub
pop
mov
repz
shll
xchg
inc
rdmsr
pop
cwtl
lods
cltd
imul
stos
push
orl
cmpb
adc
jnp
add
inc
jl
mov
push
in
dec
mov
mov
test
mov
rorb
push
hlt
mov
mov
jns
or
pop
insb
cld
xchg
sbb
adc
push
xchg
insb
mov
sahf
inc
mov
nop
push
adc
lods
bound
aaa
dec
xor
cmp
out
out
movsb
mov
mov
std
hlt
mov
jl
out
sub
cmpsb
jae
insl
ret
les
scas
xorb
push
ljmp
sub
dec
jmp
adc
jg
xchg
fstps
aaa
jg
xchg
jo
mov
test
ret
std
xchg
mov
inc
rclb
mov
cs
movd
push
pop
lds
scas
jno
scas
dec
and
add
xchg
cmpsl
adcl
in
dec
dec
insb
cmp
add
or
mov
stos
jnp
sub
push
sbb
and
ds
push
nop
pop
lock
lds
testl
xchg
cmc
dec
cmp
into
loopne
pop
mov
dec
add
mov
lods
lcall
mov
addl
adc
nop
cmc
insl
mov
icebp
and
dec
out
pop
scas
cmp
cmp
stos
rorb
and
leave
push
add
out
inc
cmp
popa
push
stos
pushf
push
add
xchg
mov
cld
adc
adc
mov
ror
imul
out
in
push
push
adc
dec
and
add
or
lds
std
xor
jno
lret
lods
add
mov
sti
cli
push
xor
ja
dec
and
lods
in
xchg
push
push
lret
mov
pop
pushf
fs
mov
lods
inc
dec
cltd
push
inc
imul
adc
roll
repz
push
xor
mov
mov
gs
fwait
popa
lea
pop
leave
mov
xchg
adc
push
sub
mov
mov
lock
loope
sub
bound
sub
mov
push
dec
icebp
arpl
sarl
jge
inc
outsl
push
push
out
sbb
lret
call
pop
je
scas
inc
fimuls
inc
movb
stos
cs
cmp
inc
jnp
fldt
int3
sbb
cli
cmp
lea
leave
roll
pop
sahf
pop
repnz
rorb
mov
sbb
jp
cmpsb
mov
outsb
out
out
test
sub
xor
mov
cmp
es
mov
push
cmp
sarl
daa
insl
imul
andb
scas
or
aas
fsincos
sti
cmp
add
rcrl
rolb
dec
rcll
out
xlat
fwait
xchg
dec
int3
scas
jo
or
fisttpll
arpl
clc
sbb
clc
add
mov
sub
xchg
sub
cmp
fprem1
leave
pop
clc
iret
pusha
je
dec
sti
pop
adc
cmp
xor
scas
adc
pop
mov
cli
lods
stos
add
ljmp
inc
jb
pop
mov
lods
movsb
imul
dec
rcr
mov
xchg
add
movb
mov
and
jmp
sbb
lret
testb
das
xchg
cmp
ror
adc
and
jbe
out
out
aad
jae
xlat
mov
jmp
pop
jecxz
sti
clc
push
mov
push
mov
dec
js
lods
adc
sub
jb
nop
or
inc
mov
lret
jle
fstl
mov
sahf
jmp
xchg
imul
cltd
mov
pop
dec
inc
push
push
inc
fstl
xchg
aam
out
jbe
push
stc
fldenv
mov
loopne
cmp
das
sub
outsl
and
cmp
fwait
jnp
test
insb
or
xlat
sti
xor
es
push
leave
jmp
pop
lods
push
mov
push
fnstsw
fmul
lds
mov
fidivl
sbb
push
rolb
mov
mov
jo
pusha
dec
clc
ds
mov
outsl
test
push
and
mov
in
pop
cmp
sbb
lock
out
lds
inc
or
cmpsl
sub
aam
jne
rclb
cmc
mov
inc
fstps
push
cmpsb
xorb
fdivs
push
mov
mov
stos
cmpsl
sbbb
mov
cmp
fdivs
ljmp
inc
jle
or
sbb
and
movsl
lret
test
mov
sbb
pusha
fstl
lds
mov
inc
or
cwtl
mov
lret
inc
xor
and
and
in
cld
shl
add
dec
iret
adc
push
sub
or
xor
test
cmc
popa
mov
jo
mov
movsl
pusha
aam
loop
fiadds
sbb
cltd
dec
mov
fsubrl
scas
addb
int3
test
test
mov
call
push
scas
data16
fsubrl
hlt
xor
addr16
push
xor
pop
lods
mov
shlb
aad
sub
lods
repz
pop
sbb
icebp
sahf
inc
mov
jmp
jp
lds
push
pop
cmp
popa
leave
mov
icebp
xchg
dec
out
sub
call
test
sbb
sub
inc
or
lea
and
pop
lods
mov
out
pop
inc
mov
outsl
xchg
std
test
adc
sbbb
jmp
std
sti
ljmp
fs
sub
fwait
inc
xor
stos
pushf
ficoms
dec
push
and
lahf
call
test
sub
and
push
shlb
pop
mov
push
pop
fcompl
dec
stos
imul
sub
cmpsl
mov
xor
rolb
sbb
lret
popf
cmp
or
dec
jae
aad
pop
loope
mov
ficomps
inc
mov
xchg
sbb
out
cmp
fstl
bswap
insl
leave
mov
in
sti
dec
push
aad
and
inc
shlb
pop
add
es
xorb
addr16
and
in
xor
mov
mov
repz
enter
cmc
xor
ds
or
jmp
sub
jne
ja
outsl
push
clc
jl
add
xchg
popf
mov
test
xchg
hlt
jnp
mov
lcall
les
shrb
mov
jo
xchg
add
add
nop
inc
jbe
jp
in
lret
fisubrs
push
lds
pop
push
mov
jecxz
mov
push
mov
popaw
divb
lods
andl
and
adc
movsl
mov
xchg
jl
jns
mov
sub
movhps
pop
pop
cs
subb
adc
jo
push
cli
fsubrs
fbstp
ja
adc
js
adc
inc
push
xchg
or
xlat
cltd
movsb
add
rcll
sbb
pop
cltd
mov
push
loop
sbb
jle
inc
inc
aaa
ds
xchg
xor
jg
in
inc
cmpsb
pop
xor
pop
and
mov
mov
mov
dec
inc
fcmovu
ret
fcoml
mov
addl
adc
push
std
in
scas
cmp
sub
and
pusha
stos
into
sub
stc
into
inc
test
fildl
adc
push
and
mov
push
sub
mov
and
or
out
xchg
push
cmp
aaa
xor
mov
repnz
cmp
jb
int3
cmpsb
xor
aaa
and
push
stc
cmc
mov
int3
cld
imul
inc
cmp
adc
cmp
sub
cmc
adc
push
pusha
sbb
cmc
or
lock
insb
mov
jns
sbb
mov
fwait
pusha
pop
cmp
not
mov
in
notl
mov
out
sbb
mov
pusha
lods
pop
pusha
add
mov
push
ss
jno
add
mov
cli
mov
jmp
movsl
and
nop
repz
mov
add
pusha
ljmp
js
lods
out
arpl
xchg
lods
lret
jns
mov
adc
push
out
sbb
sbb
test
or
cmc
mov
jne
icebp
es
pop
cmpsl
pop
cmc
dec
aas
dec
ret
fcomp
mov
pusha
add
mov
adc
dec
les
and
cmp
pop
mov
cmpsb
xchg
cwtl
pop
xlat
jae
lods
fnstsw
xlat
mov
cmp
inc
fiaddl
addr16
pcmpeqw
hlt
sbb
in
jae
stos
and
lods
popf
sbb
js
out
ret
or
inc
out
pand
or
adc
xchg
jle
popa
cli
cmp
hlt
scas
xor
mov
aam
movsb
inc
push
cmp
jmp
sub
mov
ja
movsb
push
sub
jg
pop
cmp
xlat
js
cmp
leave
cld
sbb
push
test
ljmp
enter
xor
aad
frstor
xchg
or
fistl
cmp
push
mov
or
rorb
inc
cwtl
arpl
pop
gs
inc
pusha
notl
fdivs
mov
mov
dec
xchg
mov
sbb
outsl
xlat
ja
sbb
mov
jmp
dec
pop
in
xlat
mov
inc
cmc
jg
cmpl
jge
insb
pop
sub
lcall
xor
sub
cmp
out
jns
adc
sub
jmp
mov
push
in
repnz
sbb
cmp
sti
dec
cmp
jo
fldt
push
out
sbb
sbb
ret
add
aas
fdivs
mov
fcoms
sbb
pop
jecxz
loopne
jmp
icebp
sar
jle
jmp
pop
out
inc
mov
loope
cmp
sub
sbb
sahf
das
clc
sarb
outsb
sahf
jmp
in
imul
adc
in
inc
out
mov
les
xor
add
pop
xor
hlt
sahf
loop
and
xchg
xchg
dec
add
call
enter
mov
mov
add
mov
mov
ss
aam
sti
idivb
shll
daa
add
mov
mov
add
mov
aad
sub
cmc
leave
loopne
nop
sti
push
hlt
xlat
push
fidivl
arpl
jbe
sbb
mov
arpl
sti
pop
in
movntq
sbb
sti
or
dec
dec
pop
adc
lcall
mov
add
lahf
clc
mov
pushl
cmp
dec
ss
stos
popa
test
arpl
pop
jp
call
popa
js
inc
out
daa
or
cmp
add
cltd
out
icebp
lret
int
sbb
aad
and
mov
push
push
rcll
sahf
lret
mov
cmp
ficoml
icebp
test
jmp
mov
push
cmp
in
scas
les
das
sbb
sub
arpl
out
mull
or
or
adc
push
push
xor
mov
inc
cmp
sub
sub
ja
adc
xchg
mov
out
and
jge
inc
imul
sub
into
adc
mov
jmp
or
ljmp
gs
aas
jle
pop
mov
es
push
dec
test
xor
shlb
fnstsw
mov
int
mov
mov
xor
cli
push
push
sbb
inc
in
pop
bound
inc
adc
adc
mov
stos
push
mov
sbb
lahf
pop
rorl
test
adc
scas
adc
jo
and
xchg
clc
cmc
mov
sbb
je
cmpsl
adc
or
es
push
lea
das
xchg
push
pop
xor
xchg
sarl
out
dec
xor
adc
negl
push
int3
inc
jg
lds
incb
cmp
inc
mov
and
test
call
xchg
std
cmp
movsl
adc
sarl
scas
cmp
sub
sub
stos
sub
xor
sbb
push
or
sub
sub
nop
std
lret
cmp
ljmp
js
ds
dec
mov
mov
shll
insl
stc
xor
or
ret
shlb
int3
push
dec
rolb
out
push
fsubrs
int3
xor
cmp
dec
cld
pop
jge
sbbl
jb
fldl
outsb
xchg
mov
mov
loope
ljmp
loopne
std
xlat
dec
lods
mov
jbe
cmpsl
lods
movsb
dec
push
lahf
insl
xor
rorb
or
adc
sbb
jle
lods
dec
pop
mov
xor
xchg
inc
add
aad
lahf
clc
pop
cmpsl
and
push
push
pushf
enter
xlat
rcrl
adc
inc
xor
push
mov
loope
sub
lds
stos
xchg
jl
mov
out
in
je
stos
mov
sbb
jle
mov
lods
ud0
imull
and
test
sub
ljmp
lds
push
xchg
testl
sbb
jns
rorb
sub
sti
mov
mov
xchg
push
call
xchg
fbstp
fisttpl
stos
and
cwtl
pushf
xchg
xchg
pop
mov
clc
lds
pop
out
pop
push
sbb
xchg
add
inc
andl
bound
pop
lods
aas
fldcw
and
pop
mov
dec
cmpsb
push
pop
lods
popf
iret
mov
xor
or
pop
pop
js
rcrb
sbb
sbb
enter
adc
icebp
mov
sbb
cli
cmc
idiv
and
xchg
xor
inc
sbb
add
mov
scas
jmp
ss
dec
data16
test
imul
mov
sub
pop
add
or
nop
outsl
inc
rcrl
mov
jmp
push
pop
mov
gs
cld
inc
or
in
sarb
push
add
add
mov
dec
sbb
pmulhuw
popf
jmp
insl
jp
ret
shr
mov
mov
rorl
roll
inc
enter
outsb
fdivr
dec
mov
xchg
adc
sahf
out
fs
or
cli
dec
and
int
jl
jmp
push
adc
ss
sub
inc
imul
dec
idivb
lahf
mov
or
fwait
lret
mov
add
sbb
xor
pusha
sbb
arpl
dec
or
cmpsb
test
dec
jge
mov
mov
mov
pop
iret
data16
testb
lcall
std
stos
data16
scas
sbbb
in
jecxz
lret
xchg
inc
pop
jmp
mov
addr16
ja
ficoms
fwait
rcl
or
sub
add
int
mov
adc
imul
jno
jnp
int
push
or
mov
ret
enter
cli
or
in
fdivs
test
jnp
flds
loope
mov
jo
mov
loopne
mov
sbb
adc
adc
clc
in
sbb
dec
xor
jecxz
cmp
sti
or
pusha
and
sbbl
ja
enter
rcll
and
aam
js
sbb
stos
xchg
adc
adc
cli
dec
lock
jl
loope
cmp
jbe
inc
ret
cmpsb
cmp
pushf
or
push
iret
icebp
lret
cli
xchg
mov
mov
es
sub
push
mov
jne
dec
inc
popf
cmpsl
hlt
movsb
sarl
pop
inc
sbb
iret
gs
test
aam
outsb
add
outsb
add
push
push
pop
sub
orb
pop
push
cltd
jo
sbb
xchg
lcall
cltd
ss
sub
jp
add
cltd
loope
jb
and
fdivp
xchg
aam
shrb
add
pop
lods
cltd
idivl
adc
sub
adc
sbb
pushf
cmp
nop
mov
jecxz
lret
ja
adc
outsl
rorb
iret
pop
insb
inc
xchg
or
mov
inc
pop
mov
enter
movsl
cmp
into
pop
les
int
cmp
insl
xor
mov
int3
sub
pop
mov
mov
enter
mov
mov
add
adc
stc
xchg
sbb
cmp
adc
sbb
inc
sti
hlt
xchg
inc
arpl
or
xchg
mov
and
filds
addr16
jb
and
addr16
sub
dec
pop
dec
dec
adc
out
cmp
dec
in
dec
mov
cmp
mov
jo
adc
mov
mov
push
jmp
mov
fstpt
dec
sbb
add
push
cmp
dec
push
push
push
or
sub
insb
loope
fldcw
inc
aam
stos
push
fidivrs
sarb
out
in
xor
push
xchg
xlat
push
cmp
fwait
in
push
mov
mov
fnsave
test
or
gs
mov
iret
mov
lock
or
sub
lea
jno
jmp
sbb
ja
repnz
imulb
and
int3
pusha
pop
inc
fsubrl
add
inc
mov
dec
fisubs
sub
pop
aad
xor
gs
test
ljmp
lea
jb
xor
mov
pop
faddl
mov
push
jp
cmp
mulb
mov
rolb
and
imul
stos
sbb
cmc
ror
or
in
pop
add
mov
ret
sbb
es
lcall
add
test
ficomps
mov
ret
test
pop
mov
lret
or
je
sbb
in
insl
das
inc
sub
scas
or
sbb
ss
mov
test
or
jo
jmp
fadd
mov
imul
pop
cmc
sbb
testb
dec
xor
cmp
popa
inc
lret
sub
jns
jle
shrb
xchg
cmp
push
jne
mov
dec
icebp
aas
andl
cmp
lods
imulb
pop
mov
mov
stos
mov
jl
js
sbb
cmp
push
sub
dec
mov
jae
push
jl
test
lods
andb
loop
dec
ds
cmp
aas
cmpsb
sar
in
scas
stos
rorb
adc
fcmovbe
cmc
mov
sbb
lcall
mov
stc
jge
cmp
orb
jnp
hlt
jle
add
es
sbb
sbb
shll
lea
sbb
fnstsw
dec
sbb
xor
xor
xchg
rcll
sbb
movsl
xchg
xor
mov
pop
out
scas
push
pop
loopne
pop
adc
sbb
cltd
mov
or
movsb
sub
push
inc
mov
sbb
add
pop
adc
add
add
cmp
cld
jns
call
xchg
xchg
mov
xchg
dec
mov
push
test
sub
xor
enter
push
dec
xchg
cmp
jp
jo
mov
or
sbb
mov
jno
jo
fcmovnbe
es
push
add
bound
pop
add
gs
mov
adc
fs
xor
sbb
cmp
arpl
scas
dec
push
pushf
and
inc
jne
in
sbb
loope
jle
mov
xor
mov
adc
sahf
in
push
and
arpl
dec
fmuls
inc
xchg
ret
fdivrl
out
jl
inc
ds
pop
xchg
imul
mov
or
mov
fs
in
pop
sbb
jp
test
bound
bound
inc
ret
mov
adcb
mov
fnsave
andl
mov
cmc
and
into
call
ja
int
mov
mov
mov
je
flds
addr16
es
aad
sarb
rorl
dec
test
push
notb
iret
in
cmc
std
push
xor
sub
mov
push
dec
fistl
jb
into
cmpsl
adcl
jae
ds
mov
dec
xchg
push
loope
pop
add
inc
pop
in
insb
mov
mov
jl
stos
mov
dec
test
dec
pop
and
mov
adc
adc
sbb
inc
pushf
adc
int3
lock
push
test
xchg
add
movsl
mov
hlt
xorb
test
dec
imul
out
cmpsl
loopne
add
cli
push
into
jmp
in
xchg
arpl
in
xlat
push
inc
pop
adcb
mov
xor
loop
fucom
or
cmc
out
lock
push
mov
mov
mov
xor
pop
addr16
das
pop
push
pop
fstp
sub
iret
aaa
in
sahf
cwtl
orl
pop
sbb
hlt
mov
xchg
sbb
inc
mov
cld
and
addr16
mov
jl
stc
mov
adc
shr
push
pop
xchg
and
push
jns
sahf
push
cld
inc
hlt
movl
test
jne
cmp
or
push
dec
rcll
outsb
dec
sub
stos
fidivl
sub
int3
add
sub
lcall
or
outsl
add
jmp
fistpll
ja
ja
sahf
pop
push
mov
pop
imul
sti
lret
xchg
das
stc
mov
repz
dec
orb
test
cli
lret
std
sub
out
divl
and
sti
nop
adc
cmp
inc
inc
push
jns
aam
cmp
cmp
out
and
and
lea
cmc
or
sbb
pop
movsl
testl
pop
push
mov
stos
std
jg
pop
aam
pop
sub
stos
mov
mov
cs
dec
pop
pop
xor
aad
ror
cltd
xlat
inc
daa
nop
mov
mov
in
push
adc
adc
hlt
sub
xchg
sub
push
testb
xor
push
and
cmc
fists
lret
inc
jns
mov
ret
aam
mov
addr16
scas
fstpl
cli
jmp
imul
mov
stos
test
mov
mov
adc
pop
bound
xchg
stos
outsb
or
inc
add
shll
fcmovnbe
inc
mov
xor
mov
fwait
sub
fs
arpl
notl
rcrl
mov
inc
pushf
fs
inc
repz
cmp
call
jle
daa
call
mov
jge
sar
arpl
adc
imul
mov
adc
into
jl
jo
xchg
mov
or
insl
into
sbb
aas
popa
sub
hlt
and
rorl
aas
aam
ret
andb
xchg
cld
aam
xchg
inc
and
push
ficompl
insb
push
xchg
fsub
lret
dec
mov
xor
repz
aas
loopne
ret
adc
mov
mov
jmp
bswap
or
out
lods
mov
lea
inc
stc
mov
aas
pushf
dec
cmp
pop
inc
cmpsl
and
iret
insl
clc
push
out
inc
pop
sbb
ret
scas
notb
dec
dec
xchg
mov
cmp
test
pushf
dec
add
int3
cs
imul
mov
mov
call
mov
ljmp
pop
pop
jg
xor
mov
sti
push
pop
or
cmp
js
scas
fstp
testb
mov
cmp
aam
fisttps
push
daa
enter
jle
test
xchg
cltd
xor
icebp
dec
sbb
lcall
sbb
mov
push
cmp
sbb
ss
add
adc
dec
movsl
mov
push
int
es
or
aad
stos
push
sahf
inc
adc
sbb
addl
shl
or
int3
sub
inc
mov
jbe
out
aam
mov
mov
cmpsl
pop
aaa
into
aam
sbb
jne
sbb
add
sahf
mov
push
xor
imul
mov
jns
sbb
in
adc
movsb
xchg
imul
das
jb
pop
loopne
lret
scas
les
cmpsl
lcall
ficomps
inc
and
mov
imul
jb
push
lret
add
lods
inc
mov
adc
jno
sti
inc
mov
inc
xor
ret
dec
stc
or
scas
adcb
inc
test
sbb
stc
jle
test
or
in
sbb
inc
rorb
daa
call
jne
ss
stc
cs
pop
pop
sub
movsb
pusha
psllw
movsb
push
sbb
mov
push
out
fs
pop
push
test
inc
lock
aas
inc
sbbl
inc
pop
lea
mov
push
cmpb
ffreep
adc
add
jl
imull
mov
mov
sar
cld
xor
inc
loopne
or
add
add
aad
addb
inc
cmc
cmp
mov
add
icebp
or
and
aad
adcb
loope
ss
les
lcall
repnz
repnz
lods
fs
int3
adc
jns
das
int3
sbb
xor
pop
stos
sti
cmp
aaa
sbb
insb
xor
mov
imul
mov
or
inc
sbb
dec
enter
jbe
fisubrl
movsl
xchg
jb
jno
loope
mov
call
adc
xor
pushf
aas
inc
aam
pusha
and
mov
rcrb
dec
daa
xor
cmp
insl
dec
test
push
push
push
popf
mov
push
mov
adc
iret
das
sub
xlat
mov
sbbl
xor
iret
sti
rorl
adc
outsb
aad
jp
in
fidivl
push
aas
jmp
dec
or
lock
adc
add
jns
outsl
test
std
push
movsb
lahf
lods
adc
adc
xchg
sahf
cld
xchg
sbb
mov
jne
sti
jecxz
inc
sub
dec
dec
stc
xor
cmp
adc
fsub
shll
insl
aam
shll
jo
shrb
xchg
clc
sbb
xchg
mov
pop
adc
out
daa
push
jns
push
lcallw
dec
aas
lds
dec
dec
mov
push
aad
push
les
sbb
loopne
or
test
sub
test
shlb
repz
push
andl
out
jge
out
jnp
stos
imul
xchg
mov
rcll
movsb
call
inc
mov
movsl
mov
adc
add
mov
sbb
ret
dec
ret
imul
push
or
adc
stos
push
and
jb
fxch
push
test
mov
cltd
add
jmp
cwtl
sub
shll
jmp
and
xor
jne
mov
inc
jb
ret
test
sbb
stos
jle
mov
test
or
sahf
gs
call
and
idiv
add
sbb
jmp
pop
lods
cmp
cmpsl
adc
add
jmp
lea
xor
dec
das
jbe
push
aaa
sarl
subb
es
rcrb
rcrl
enter
cmpsl
inc
fcmovu
mov
or
stos
pusha
loope
xor
jl
rorb
int
insb
add
out
sub
sub
data16
insl
xor
stos
pop
jle
add
je
push
mov
or
pop
andl
lcall
test
adc
into
scas
test
lds
and
sub
jge
outsl
enter
jl
test
iret
mov
shr
xor
pop
js
nop
jp
repz
movsl
mov
dec
xchg
icebp
mov
jno
xchg
xchg
or
cld
xchg
inc
jp
nop
or
arpl
xor
jno
loopne
pop
mov
mov
mov
mov
push
jns
js
test
stos
cwtl
sub
jbe
loopne
mov
sbb
push
dec
pop
sub
push
ret
call
insl
inc
sbb
je
adc
mov
sub
xorl
cltd
mov
push
cs
sbb
sub
sti
mov
bound
std
inc
iret
data16
mov
movsl
ret
icebp
sbb
xchg
mov
dec
cmp
mov
fcomps
mov
lret
data16
mov
push
sub
sub
mov
stc
inc
in
lods
decl
dec
jmp
jnp
jecxz
or
movsb
mov
mov
push
or
nop
jp
fwait
mov
clc
mov
lcall
pop
sub
sbb
mov
stos
push
js
loop
loope
sub
mov
sbb
arpl
ficoml
xchg
scas
imul
cmp
scas
cmp
das
stc
adc
adc
push
scas
push
popf
imul
pop
mov
jmp
lret
test
data16
sbb
push
lods
xchg
ret
int
jo
sub
jno
in
pop
xorb
in
inc
pop
mov
jl
rcrl
js
sub
mov
xlat
sarl
cmpsl
or
xor
out
jle
pop
rorb
add
fucomi
cmp
shrb
pushl
mov
jp
out
js
mov
out
mov
add
std
pop
xchg
pop
stos
cld
sbbb
outsb
sub
in
lahf
xor
jbe
mov
cmp
test
fiaddl
inc
es
ljmp
push
enter
dec
and
push
adc
imul
dec
or
fadd
shl
scas
jb
mov
jne
xchg
bound
roll
dec
pop
jns
inc
fadds
into
rcrl
or
sbb
ds
mov
lcall
add
lcall
lods
push
pusha
popf
push
ss
push
or
imul
ret
mov
mov
testb
push
loope
pop
mov
ja
adc
pop
std
aad
xorb
arpl
xor
pop
xlat
mov
ret
in
mov
pop
xor
add
sbb
jecxz
bound
test
cmp
loop
ret
in
push
icebp
jae
ds
mov
dec
shlb
jno
pop
jl
sub
inc
xlat
fcomp
lock
sarb
dec
sub
scas
js
jns
lock
clc
xchg
mov
dec
mov
je
inc
sbb
call
iret
and
sbb
in
fs
inc
rcr
cmp
xchg
shlb
mov
cltd
clc
std
adc
imul
mov
push
scas
in
cltd
push
sub
mov
retw
xchg
dec
dec
test
cmp
push
sbb
in
inc
fimull
push
loop
jmp
stc
rcr
and
lret
xlat
loop
mov
pop
fistl
icebp
xor
fdivs
aam
scas
mov
fstps
fsubrs
cli
mov
shlb
addr16
push
inc
xor
mov
mov
sarb
xor
jmp
jmp
adc
and
into
lea
aaa
mov
ret
xor
ljmp
pop
je
addr16
jo
xor
sahf
scas
in
rcll
and
fs
push
ja
push
call
pop
inc
cmc
push
sbb
add
aad
mov
movsl
jns
arpl
enter
jge
sub
mov
dec
dec
push
rorb
nop
testl
and
in
or
mov
scas
int3
push
iret
mov
xchg
sbb
scas
js
in
ljmp
lret
jmp
cmpb
add
lods
stos
mov
mov
cwtl
int3
mov
test
adc
inc
xor
add
js
jb
jle
scas
mov
lcall
or
xor
lds
sarl
mov
lret
xlat
jmp
push
push
add
pop
pop
cmp
pop
sbb
and
ljmp
cmp
sub
or
jge
lcall
out
cmp
mov
jb
sahf
sbb
jle
pop
xor
cmp
pop
mov
jns
mov
lret
mov
jg
cld
and
btsl
cmpb
movb
test
incb
xlat
jle
js
add
or
ljmp
jne
jnp
mov
dec
cmp
mov
ja
and
jp
enter
add
mov
imul
jle
ja
jg
add
or
inc
push
stc
lods
leave
add
jne
adc
rcll
fisttpl
mov
movsb
mov
jmp
and
sbb
lahf
push
stc
ret
or
add
mov
cwtl
mov
outsb
add
or
push
imul
push
stc
pusha
sub
fisttps
nop
or
jno
insl
lahf
cmpsl
pop
rclb
inc
sub
xchg
addr16
mov
lret
and
xchg
aas
test
jbe
mov
stos
and
jle
push
lds
push
push
iret
adc
or
shll
fwait
call
xchg
loopne
ljmp
popa
addl
out
mov
cmpb
jecxz
rep
out
xchg
scas
inc
fdivs
mov
popa
testl
cmc
sti
adc
mov
xchg
dec
pop
inc
inc
cmpsl
stc
mov
gs
out
stos
sbb
pop
out
dec
adc
jbe
ss
add
mov
cmp
sbb
mov
addr16
popa
dec
cmp
movsl
ss
lcall
add
cmpsb
out
jno
sbb
repz
cmpsl
add
xchg
adcb
scas
mov
ret
xchg
or
js
xor
divb
mov
push
loope
mov
mov
dec
jb
pushf
scas
roll
ja
ss
mov
jmp
push
loope
cltd
hlt
imul
lods
cmpsl
jl
movsb
push
xchg
lahf
push
add
sub
fdivs
adc
inc
imul
pop
jge
fimuls
lret
xchg
pop
mov
add
jo
mov
sti
in
js
push
adc
js
iret
sub
fisubrl
loope
or
push
icebp
xor
push
push
dec
jp
cltd
cld
sub
or
cmp
jae
or
mov
bound
sbb
mov
add
sub
and
jecxz
ret
cmp
mov
xor
mov
andl
pop
cmp
repz
mov
movsb
push
fildl
ljmp
and
testb
scas
mov
out
out
daa
adc
add
aad
add
aaa
pop
loope
push
jnp
cwtl
push
rol
mov
mov
or
rolb
inc
mov
adc
jl
inc
add
lahf
into
lret
fsts
pushf
or
lahf
cltd
xor
jp
xchg
pop
in
xor
fimuls
out
push
mov
or
shll
add
stc
sub
sbb
das
call
mov
clc
xchg
out
add
sahf
repnz
loopw
adc
daa
or
xor
or
aaa
addr16
dec
lcall
enter
test
popa
mov
jo
mov
inc
jg
les
jnp
notl
lods
or
dec
sbb
ds
nop
and
dec
fcomps
test
xor
aaa
push
sub
cmpsb
sbb
iret
inc
sub
push
dec
stc
stc
mov
mov
add
mov
cpuid
test
enter
push
lods
xlat
sbb
test
jmp
xchg
int
inc
sub
jbe
mov
dec
dec
mov
push
xchg
sbb
daa
cmpsl
les
add
mov
out
insb
xchg
insb
fisubs
add
andl
add
push
gs
bound
leave
aad
fwait
mov
mov
fucom
mov
dec
popa
cmp
mov
fildll
stos
cmp
adc
xor
dec
int3
stos
insb
fs
popa
cmp
dec
cwtl
cmpsl
pop
xchg
in
hlt
inc
mov
jno
inc
push
xchg
mov
pop
jg
push
push
sub
scas
call
scas
inc
fs
or
incb
std
aaa
dec
in
xor
xor
ja
mov
adc
pop
adc
xchg
sbb
cmpsl
lcall
add
rcrl
fwait
sbb
sbb
cmpsb
or
xor
test
and
push
dec
jecxz
pop
aad
sbb
jne
push
in
push
dec
mov
aaa
jmp
pushf
int
clc
xchg
int3
fcoml
lcall
test
loopne
repz
mov
jmp
shll
mov
push
mov
pop
subb
gs
push
testb
lods
xor
scas
stos
cs
scas
movsb
in
add
mov
icebp
adc
ret
inc
clts
mov
mov
daa
daa
testb
js
out
mov
push
jge
mov
jbe
clc
lds
fwait
imul
mov
aas
mov
jmp
jmp
jbe
sub
idivb
push
mov
push
fldl
cmp
ja
mov
dec
mov
push
mull
fabs
dec
push
iret
mov
cltd
add
push
and
repz
lods
out
or
adcl
and
subl
xchg
ret
xor
movsb
cs
lods
ret
jg
pop
inc
xor
mov
das
mov
ret
push
ljmp
cli
fcmovne
aas
clc
jge
pop
test
js
mov
mov
ljmp
xchg
out
jae
mov
or
xchg
imul
cltd
mov
testw
inc
or
ficoms
inc
inc
bound
mov
xchg
mov
ret
or
cmp
cmpsl
movsl
mov
out
dec
repz
cmpsl
repz
sub
lea
cmp
mov
fwait
lea
aam
push
ror
sti
cmp
inc
loope
jg
mov
int3
mov
push
xchg
pop
lods
mov
mov
imul
popf
shlb
xor
dec
push
xor
out
imul
push
inc
mov
repnz
pop
cmp
popa
testb
test
test
pop
push
add
add
pop
push
inc
pusha
jg
sub
repz
add
pop
in
jle
push
push
sbb
inc
cli
iret
call
sub
cmp
aas
bound
leave
pxor
jnp
xlat
cltd
xchg
movsl
mov
sarb
in
jmp
or
ljmp
fimuls
ljmp
lea
sub
stc
into
sbbl
mov
in
inc
outsb
xor
sbb
popa
test
lret
pop
je
xchg
jecxz
push
orb
adc
pop
loop
test
jg
outsb
ss
stos
int3
cmp
stos
pop
and
lods
push
mov
mov
nop
xor
cmc
mov
or
mov
aaa
xchg
xchg
mov
shll
int3
inc
in
iret
sub
adc
inc
adc
outsb
rcll
mov
ljmp
loop
mov
mov
inc
inc
rcll
inc
push
pop
jns
mov
jb
and
in
jle
das
enter
jo
mov
cmp
pop
pop
js
sbb
stos
sub
add
mov
cld
test
jae
ds
sbb
imul
mov
fs
jge
loopne
test
add
cmpsb
push
sub
inc
push
test
lods
mull
push
dec
dec
arpl
sbb
ret
push
lock
stc
inc
ss
mov
push
pandn
xor
repz
cwtl
ljmp
inc
subb
mov
ss
pop
stos
push
movsl
jecxz
push
sbb
jnp
mov
insl
sahf
xchg
ss
cld
mov
and
shll
gs
imul
enter
push
jne
into
nop
xchg
out
push
loope
dec
nop
mov
mov
cwtl
cmp
outsl
jae
je
add
dec
stc
xor
mov
movsb
cli
xorl
movsb
push
scas
gs
jmp
filds
mov
fildll
mov
and
std
push
je
ss
int
repnz
pop
pop
fsubrl
push
mov
jb
dec
icebp
sub
scas
push
in
pop
cmpsl
ljmp
push
and
aam
and
jb
negl
call
cmc
mov
mov
dec
movb
fildl
loope
shll
bound
pushf
lods
xor
loop
pusha
push
xchg
xor
insl
mov
out
jnp
repnz
sub
std
inc
ffreep
fidivrl
jo
loop
lret
cmpsl
popf
shrl
stos
cs
mov
inc
jmp
inc
cmc
jecxz
lcall
xchg
decb
or
dec
or
dec
int
mov
xchg
xchg
clc
roll
cmp
out
daa
xchg
jl
mov
mov
mov
enter
add
adc
in
hlt
jns
lcall
enter
cmpsl
je
orl
fsubrs
es
jnp
sub
sahf
sbb
fwait
xor
pop
loopne
jg
xchg
push
out
xor
sbb
test
cld
mov
push
jp
mov
mov
or
inc
push
loop
cs
pop
jno
pop
jg
jo
sahf
dec
cmp
leave
xlat
inc
lods
push
jns
xchg
leave
mov
jge
ss
pop
test
cwtl
push
fstp
fisttpll
inc
das
inc
mov
pop
dec
xchg
test
mov
jns
mov
adc
pand
adc
push
xchg
fiadds
pop
gs
jp
ror
xchg
cs
rclb
clc
loope
jmp
sbb
mov
shlb
dec
ret
xchg
shlb
fidivrl
add
push
mov
cmp
push
push
push
mov
jbe
insb
clc
ret
add
ret
dec
jnp
outsb
mov
test
sbb
stos
lahf
test
adcl
add
and
dec
push
sahf
jnp
mov
dec
jb
outsb
xchg
popa
pop
repz
popf
and
out
das
int
dec
cmp
and
or
cltd
testl
xchg
lret
jl
xchg
fcomps
jno
fyl2xp1
mov
inc
push
pop
mov
je
stos
leave
jae
ds
adc
or
aaa
inc
xor
stos
stc
divl
mov
adc
outsl
imul
pop
sbb
iret
icebp
xor
stos
mov
vpminsw
aad
lcall
sub
cmp
xchg
xor
fnstsw
fdivrs
inc
mov
mov
cmp
xchg
lea
paddb
cmp
nop
addl
fisttpl
push
mov
add
stos
and
pop
push
mov
cwtl
in
and
mov
mov
repnz
daa
xor
into
inc
in
int3
mov
lahf
push
lret
mov
mov
dec
jnp
pop
adc
test
push
and
es
loop
or
repnz
and
pop
mov
xchg
aam
fwait
inc
mov
mov
pop
jge
xor
jmp
jmp
call
mov
add
push
jns
mov
call
scas
push
into
iret
out
addl
and
mov
add
mov
and
inc
mov
cmpsb
out
mov
and
jg
adc
jge
mov
test
fmuls
das
push
inc
mov
test
loope
pop
sti
jbe
sbb
mov
popf
shrb
loop
mov
mov
popa
xchg
stc
in
push
cmpsb
mov
push
sbb
xor
lea
pop
rcrl
test
xchg
xchg
mov
xchg
out
loop
jle
xlat
mov
mov
loop
out
fdivrp
add
loopne
out
push
sub
mov
mov
dec
and
push
jns
int3
stos
leave
push
pop
sbb
cmp
jge
jl
mov
rcrl
jge
repz
shrb
mov
mov
cwtl
test
test
ret
sbb
call
aas
stos
jg
aas
sbb
test
shlb
inc
mov
pop
jle
pop
sahf
xchg
imul
jnp
xchg
movsb
aad
in
pop
and
rorl
les
jle
pop
pop
lods
bound
test
mov
lods
out
iret
mov
xor
rcl
push
icebp
ds
bound
push
aam
jp
jg
cltd
mov
and
or
in
adc
push
and
inc
std
add
outsl
mov
jecxz
cwtl
push
test
aam
inc
imul
ja
pop
cmpsl
insb
cmpsl
mov
movsl
popl
je
popf
sub
enter
push
xor
icebp
out
rorb
icebp
or
out
inc
push
arpl
sahf
mov
leave
sarl
push
mov
dec
push
imulb
xor
cmpsb
idivb
xchg
sub
push
fcompl
jo
outsl
push
and
inc
insb
xchg
into
fadd
out
sbb
sbb
sbb
subl
imul
add
jns
cmpsl
loope
scas
jle
cld
lcall
mov
add
mov
inc
cmpps
ljmp
lds
xor
adc
mov
push
clc
inc
add
jo
mov
mov
push
inc
mov
push
lods
fsubl
cmc
inc
mov
mov
fwait
inc
inc
or
mov
cmc
push
pushf
shlb
repz
jmp
sub
mov
push
xchg
mov
cltd
lea
je
pop
out
ficompl
andl
jle
mov
push
and
push
fldl
gs
push
cmp
or
sbb
xchg
mov
mov
lret
cs
xor
shrl
aaa
mov
xchg
movsb
xor
cmc
xor
dec
xchg
lcall
adc
pushf
mov
adc
loop
lret
lret
push
mov
cmp
xlat
fstpt
addr16
ret
xchg
setnp
stos
or
jg
andb
mov
adc
pop
and
xor
mov
push
adc
scas
pop
enter
xchg
loop
sbb
adc
sbb
movsb
xor
jge
mov
xor
sub
les
pop
arpl
test
cmpsb
push
push
lock
dec
push
or
dec
gs
rcrb
xchg
aaa
xchg
xchg
cli
or
in
push
sahf
or
add
jbe
into
iret
in
pop
add
divl
inc
ljmp
or
dec
mov
aad
sub
loopne
and
clc
movsl
and
ds
mov
test
aas
xor
jmp
es
cmp
add
jg
out
jne
repz
jge
mov
push
xor
mov
movsb
cmp
xchg
mov
jno
dec
sub
mov
jmp
dec
sub
mov
sbb
mov
lods
mov
sub
lea
pushf
sarl
lahf
pop
or
mov
movsl
adc
out
mov
inc
sub
mov
ret
push
dec
lret
test
loopne
push
lret
xor
jmp
cltd
mov
lret
incl
ret
sub
or
adc
xlat
mov
fwait
pop
test
fs
mov
sarb
cmova
sbbb
adc
test
pop
sbb
xor
mov
lds
imul
jb
sub
pop
add
or
fs
aaa
xor
daa
mov
sub
jge
cmp
cmp
fmulp
je
mov
call
jb
repz
imul
cmp
fistpl
mov
dec
clc
sub
pop
mov
sbb
jnp
xchg
inc
test
cmp
mov
repnz
adc
and
mov
inc
xlat
insb
mov
test
sub
ret
cwtl
aas
rol
lock
dec
sbb
xor
jge
mov
repz
bound
dec
mov
jnp
pop
mov
xchg
popa
call
ret
decl
adc
add
jle
es
cmp
icebp
aad
sub
push
das
lret
fisubs
cmpsb
lods
or
mov
or
cli
lods
test
jmp
sbb
inc
mov
or
lcall
jnp
jmp
inc
mov
mov
cmp
mov
adc
insl
cs
mov
lods
pop
decb
ss
cmc
ds
lods
out
dec
lcall
popa
mov
dec
in
jno
cmp
mov
add
mov
sbb
sub
mov
rcrl
iret
dec
jl
push
shl
sahf
add
cmpsl
lds
test
cmp
pop
add
dec
out
std
inc
or
movsl
jae
cmp
mov
shrl
xchg
cmp
dec
mov
add
adc
push
scas
out
int3
adc
out
int3
push
mov
adc
test
and
into
mov
cmp
jl
jecxz
ret
adc
xchg
mov
add
jns
jb
mov
sub
dec
sbb
sub
inc
pop
adc
and
dec
xchg
lret
jp
mov
pop
in
mov
sahf
dec
adc
popf
mov
mov
ja
out
inc
subb
sar
daa
mov
cmpsl
jno
mov
dec
cmp
arpl
icebp
push
and
sbb
and
jl
dec
loope
sbb
jns
jns
mov
cwtl
and
out
inc
outsb
pop
xor
and
inc
std
and
sbb
dec
xchg
pop
repnz
fmuls
mov
fstp
cmc
outsl
or
cmpl
xor
outsl
mov
fs
in
jmp
ds
imul
lcall
cmp
cwtl
sub
push
or
shrb
lds
movsb
negl
aad
nop
repnz
inc
movsb
sbb
push
push
out
add
jg
push
sbb
aad
and
shlb
enter
cmp
pusha
inc
lea
int3
dec
popf
mov
mov
xchg
and
in
xchg
ret
fisttps
sub
xorl
sahf
mov
jo
hlt
fimuls
lret
in
popa
rorb
sub
jle
or
adc
cli
repz
fmuls
cmp
lods
std
pop
push
jb
repnz
jne
jl
cmpsl
jne
dec
xor
mov
sbb
cmpsl
fwait
jne
and
jmp
and
fiaddl
push
repz
inc
icebp
lea
push
lea
push
cmc
xchg
mov
or
adc
xor
stos
mulb
or
xchg
mov
fiadds
add
mov
clc
scas
add
hlt
inc
cli
cmc
xchg
mov
sqrtps
sub
pop
test
push
sbb
xchg
fildl
xor
push
insb
add
push
std
adc
mov
or
test
fsubr
dec
push
movhps
xchg
dec
inc
adc
adc
into
fs
sub
cmpsb
xchg
repz
pop
filds
xchg
inc
inc
jl
fidivrl
rol
and
xor
xchg
into
inc
jns
push
mov
jne
test
dec
std
stos
stc
push
pop
push
outsl
movsl
add
int
fcompl
mov
and
jmp
fisubl
and
pop
and
jne
xor
in
into
dec
add
pop
mov
jno
lcall
sub
arpl
jge
mov
stc
addr16
pop
xor
jb
or
or
push
test
fistps
scas
gs
jecxz
inc
aas
outsl
shr
sarl
jae
jge
out
jbe
cmpsl
sub
jp
or
ljmp
test
imul
or
gs
in
mov
sub
icebp
pop
mov
insl
mov
outsb
inc
mov
scas
cwtl
mov
jecxz
mov
arpl
loop
mov
sbb
out
xchg
add
dec
jo
pop
inc
insb
je
sub
add
leave
add
cmp
clc
inc
inc
test
and
jns
bound
inc
mov
inc
lea
out
add
xor
jno
mov
pusha
mov
xor
test
or
fs
jbe
inc
sbb
in
gs
pop
pop
cmovne
lahf
jne
lods
jmp
nop
xchg
gs
mov
xchg
xchg
int3
xchg
dec
aad
mov
sti
pop
cmpsl
cld
push
sbb
adc
jge
jo
daa
sub
push
repnz
lods
pop
sbb
mov
xor
iret
mov
sbb
cmp
fidivs
movsl
push
xchg
in
dec
jbe
stc
sahf
push
push
mov
adc
xchg
adc
pop
addr16
out
fwait
and
sub
xchg
ja
mov
mov
push
jb
sub
mov
push
mov
rorl
in
jle
in
jo
mov
es
loope
movsl
arpl
lcall
andb
insl
leave
ds
jbe
jp
jo
jne
mov
stc
add
je
xchg
repnz
popf
fdivrs
lcall
jbe
leave
enter
jno
or
scas
pop
add
js
lret
or
or
out
test
dec
stc
insb
cmp
adc
roll
adc
notb
inc
or
enter
dec
sahf
ljmp
add
jbe
or
ss
adc
cmpsb
or
lock
ret
pop
dec
mov
sbb
xchg
add
adcl
dec
xlat
in
and
add
jb
jg
loope
xchg
cmpsb
test
mov
out
andl
shrb
popf
shlb
xor
cmp
mov
adc
sub
jl
loopne
dec
loope
popf
mov
dec
sbb
bound
adc
pop
xchg
rorl
lods
jge
xchg
ret
cmpsl
jo
mov
dec
or
enter
insb
sbb
out
xchg
fidivrl
inc
iret
imul
lret
fcmove
add
xor
add
bound
jae,pt
jecxz
addl
sete
jo
dec
ss
movsl
jo
and
mov
icebp
inc
add
cmp
push
push
xor
or
bound
lret
test
and
repz
stc
in
inc
sarb
lcall
mov
mov
lods
int3
and
leave
sbb
je
or
fwait
sub
cs
and
icebp
shll
repnz
js
dec
call
pusha
ja
add
js
sbb
nop
and
sub
out
cltd
mov
and
jecxz
xor
arpl
fs
out
inc
inc
mov
ljmp
adc
jo
mov
dec
ja
sbb
sub
inc
mov
or
or
mov
xor
lods
cld
aas
adc
mov
clc
xchg
clc
adc
enter
in
std
les
cltd
sbb
push
out
dec
push
pop
jnp
cwtl
cmp
mov
mov
popa
ja
xor
pop
movb
lcall
inc
sub
aaa
fwait
sbb
int
mov
mov
and
sub
and
push
shl
mov
std
jbe
mov
or
and
xor
xchg
add
dec
push
cmp
cmc
pushf
mov
test
lahf
mov
int3
lcall
lods
pop
mov
loopne
lret
pop
incl
ret
jge
shlb
add
pop
push
dec
cmp
aad
add
push
js
outsl
jne
lret
adc
or
pop
shl
mov
jb
in
mov
test
pop
insb
add
pushf
insb
xlat
mov
aas
inc
cmp
stos
pop
xchg
rolb
jns
fsts
cmpsb
nop
cld
loope
int3
popa
aad
mov
mov
cs
mov
insl
lea
out
loopne
addr16
scas
repnz
fstpt
or
or
frstor
in
fwait
dec
lahf
add
cwtl
mov
jecxz
adc
stc
mov
jg
sar
push
mov
xor
jg
inc
ja
inc
xchg
sbb
ret
popf
dec
stos
movsl
mov
je
enter
inc
dec
mov
dec
movsl
xchg
adc
andl
jnp,pn
sbb
imul
mov
xchg
lock
inc
sbb
data16
lcall
push
addr16
sub
push
xchg
leave
loop
add
xor
loop
sub
lret
add
fucomp
and
insb
repz
aam
and
cmp
std
addl
cmp
lret
adc
push
das
test
inc
inc
mov
sub
pushf
cmpsb
sub
les
fstl
cli
iret
inc
mov
addr16
test
jge
jb
sub
adc
sbb
mov
leave
cld
pop
pusha
jns
xchg
addr16
mov
mov
neg
pop
outsl
push
test
test
lret
sbb
dec
push
push
sub
imul
dec
js
sti
push
pop
es
aas
pop
cmpb
adc
es
dec
movsb
jg
inc
in
or
bound
das
add
and
mov
gs
cmp
js
lds
stc
je
push
inc
mov
pop
int
fsubrs
fldt
lret
sahf
mov
adc
mov
cmp
lods
out
das
mov
call
add
cmp
pop
loopne
repz
stos
xchg
jne
cli
repnz
mov
jb
ja
add
fisubs
sub
add
sub
lcall
xchg
sub
in
les
or
mov
adc
js
ja
sahf
lds
nop
iret
adc
cmp
lret
jmp
push
adc
adcb
cli
inc
cmp
pop
cmp
and
cmp
adc
and
lods
jecxz
push
addl
adc
cltd
iret
jnp
or
mov
jmp
cltd
addl
jp
mov
adcb
ljmp
lea
cmp
adc
adc
mov
pop
rorb
add
sbb
mov
outsl
dec
nop
jns
sbb
aam
lcall
std
fwait
pop
mulb
loope
or
sarl
mov
pop
jb
jle
inc
repnz
pusha
push
arpl
call
mov
mov
inc
lock
test
into
out
dec
push
sbb
jno
mov
ret
fwait
out
pop
aad
fmuls
push
cli
adc
icebp
adcb
je
jl
add
dec
imul
jnp
ds
or
jo
add
outsb
ss
push
add
xlat
test
xchg
test
mov
mov
inc
xor
mov
cmp
nop
icebp
sahf
mov
out
pop
in
and
dec
push
pop
enter
sar
xor
jge
call
mov
jnp
xchg
lret
cmp
rcll
cli
xchg
add
imul
ret
mov
push
js
mov
sub
cmpsl
sahf
cmp
jg
cmp
cwtl
hlt
dec
mov
lcall
adcb
testb
or
mov
std
xor
push
pop
lock
mov
mov
enter
mov
rcrl
jp
int3
add
dec
iret
rolb
enter
sbb
rclb
push
lcall
les
int
jg
and
repnz
jns
or
and
ret
xor
ds
adcl
sbb
cltd
nop
jl
lret
add
dec
xlat
mov
and
and
mov
popf
add
imul
pop
and
frstor
enter
outsl
jae
nop
xchg
leave
and
inc
and
dec
sub
repnz
shlb
cmp
fimuls
lock
cltd
ret
sbb
test
aas
adc
sub
ret
add
ljmp
xor
es
push
xlat
mov
cmp
add
mov
sbb
out
jbe
int
inc
push
lock
inc
sub
bound
cmpsb
test
and
out
shlb
sbb
fistpll
arpl
adcb
imul
inc
fwait
lret
pop
lret
mov
sub
inc
or
or
push
dec
lds
ds
cmp
lods
add
stc
or
sarl
push
dec
add
pusha
and
mov
fstpt
pop
loopne
xchg
mov
movb
in
mov
sub
call
push
lret
dec
hlt
adc
sar
dec
mov
sub
sbb
or
dec
pop
pop
fidivrl
in
xor
cmpsl
sti
sti
mov
loopne
ret
js
dec
jg
test
inc
or
or
adc
jecxz
andb
xchg
and
and
cmp
xor
mov
mov
sub
xlat
js
mov
out
and
cli
sub
insb
add
and
sbbb
cmpl
jae
cli
call
adc
pop
addr16
and
push
jmp
and
into
cwtl
and
xor
adc
sti
ljmp
cwtl
dec
push
inc
lea
adc
sbb
inc
sub
jmp
mov
les
leave
mov
imul
scas
add
arpl
push
fidivrl
and
jbe
movsb
bound
and
adc
popf
insb
test
pop
xchg
adc
cmpl
dec
popa
or
mov
inc
jno
ss
and
jp
out
mov
jb
daa
dec
mov
pop
cmp
and
cmc
and
cmc
adc
in
jl
lret
subl
mov
dec
mov
das
sbb
out
lock
adc
imul
mov
push
ds
mov
aam
shl
push
jge
int
je
rcrb
sbb
dec
ja
sbb
test
int3
lret
jne
push
out
sub
xor
stc
ret
repz
loopne
push
dec
jno
aam
dec
shrl
loop
pop
push
ljmp
mov
fs
xchg
jo
dec
push
iret
scas
xlat
xor
jecxz
cmc
pop
push
adc
dec
addr16
mov
stos
adc
call
jno
mov
push
pcmpgtb
jbe
dec
lea
and
jle
lret
roll
xchg
les
pop
mov
pop
mov
lea
in
outsl
sub
notl
add
cmp
fimull
pushf
mov
xor
xor
jg
scas
rcrb
lods
repz
pop
hlt
pop
nop
mov
adc
aaa
fistl
or
inc
jmp
mov
mov
mov
aaa
xlat
push
dec
adc
sub
cmpl
inc
sbb
xor
cmpsl
out
fs
lods
out
push
push
xor
mov
inc
dec
add
out
mov
xor
cmc
negl
leave
hlt
fnsave
or
lss
aas
add
adc
loop
adc
mov
sarb
int
cld
push
jo
xchg
je
daa
cmpsb
mov
sti
aad
pop
mov
xchg
data16
pop
push
ret
les
add
not
jnp
inc
mov
add
sub
xchg
in
stos
or
dec
ret
sarl
lock
and
add
inc
lods
dec
add
out
sbb
pop
mov
addl
lods
pop
movsb
fcoms
call
loopne
xchg
out
jecxz
mov
pop
sbb
inc
sub
pop
fisubl
xlat
add
outsb
imul
pop
push
and
sbb
in
in
inc
sub
leave
mov
or
hlt
add
test
es
xchg
jl
lret
adc
sub
sbb
rcrl
dec
mov
mov
mov
mov
fcomp
call
pop
loop
xlat
loop
cmp
pop
imul
adc
insb
xor
loop
in
lahf
mov
inc
fdiv
adc
aam
cmpsl
fistpll
cmp
out
jno
outsb
out
jnp
mov
xor
stos
ljmp
cmp
push
mov
lcall
scas
xchg
sbb
cmp
adc
push
sub
fwait
into
sub
jns
ljmp
scas
fwait
mov
inc
out
mov
jae
in
jbe
mov
pop
xchg
ds
or
push
ja
aas
xlat
scas
mov
xlat
dec
cmpl
inc
addr16
sub
push
add
in
push
mov
mov
lret
pop
cmp
push
jp
push
pop
mov
jns
sub
lods
leave
das
inc
adc
adc
push
std
jl
or
mov
cs
outsl
pop
xchg
push
or
pusha
add
in
sub
movb
sub
mov
add
mov
cmc
repz
push
je
cltd
ljmp
add
sarl
inc
xor
data16
ja
mov
inc
repz
sarl
loope
nop
stos
push
xor
in
fsts
jmp
xchg
add
stc
sub
add
daa
out
movsl
aaa
jne
push
dec
rcl
mov
cld
stc
inc
fstl
and
dec
jbe
jo
adc
push
shlb
fiaddl
push
and
cmpsl
xchg
xchg
mov
adc
mov
clc
scas
fmul
into
xor
push
or
xchg
push
xchg
mov
mov
nop
xchg
xor
push
aam
mov
jmp
imul
add
adc
and
lahf
bound
mov
mov
dec
jp
filds
and
stos
insl
insl
pop
push
cs
xor
inc
sti
pop
sbb
and
jno
testl
out
jns
and
ret
fiaddl
mov
rorl
imulb
or
xor
cmp
scas
xchg
les
aad
sahf
sub
fnstsw
in
movsl
test
add
shll
adc
lods
xor
lret
cmp
icebp
jno
add
push
loop
xchg
mov
sti
cs
cmp
movsl
or
pop
lock
in
fucomi
rcll
outsb
shll
add
sbb
mov
pop
shl
into
pop
inc
mov
stos
sub
mov
nop
push
or
xor
ret
ss
sbb
repz
mov
negl
clc
aas
or
fistps
std
inc
pusha
cmp
fsubr
ss
fcomps
add
lcall
jge
sti
std
les
mov
rclb
and
or
sub
push
repz
jecxz
mov
jae
jae
xchg
les
push
push
notl
repz
shll
test
dec
cs
pop
jl
cmp
subl
push
xchg
inc
out
pop
ljmp
sub
fstpl
push
or
andb
add
loop
mov
xor
into
xchg
pop
add
sbb
gs
std
ret
cmp
lods
xchg
adc
and
inc
adc
xchg
les
sub
add
fucomip
xor
fsub
pop
js
add
arpl
mov
inc
mov
mov
inc
adc
or
pop
arpl
test
rcll
jmp
sbb
cmc
and
push
pop
clc
dec
les
imul
mov
dec
jmp
loope
aam
cmp
sub
xchg
jo
lods
xchg
fildll
cs
jb
add
mov
leave
xor
aam
fwait
and
mov
icebp
out
cmpsb
shlb
enter
add
or
xbegin
jo
fxch
pop
leave
xorb
fmull
cmpsb
mov
add
cmpsb
mov
push
lds
sbb
lods
lock
jg
test
clc
and
rcr
cmpsl
scas
fcompl
loopne
fstpt
movsb
shlb
cltd
jle
adc
mov
pop
xchg
gs
ljmp
loopne
mov
test
rolb
lods
jl
and
fildl
rcrl
mov
xor
jmp
test
pop
fsubr
shl
out
leave
jo
into
xor
lret
stos
or
adc
adc
mov
pop
pop
leave
fcoml
outsl
push
xchg
sar
xor
mov
roll
jg
inc
push
push
mov
push
repz
push
movsb
mov
aam
inc
dec
xchg
dec
lea
mov
aam
leave
cltd
dec
sbb
cmc
scas
mov
cmp
in
jg
push
pop
shlb
or
xchg
sbb
jp
fs
bound
ret
xorl
xlat
push
and
sti
pop
and
dec
pop
jbe
mov
test
addr16
xchg
mov
lret
mov
push
hlt
adc
hlt
adc
rorb
add
mov
push
leave
jno
notb
mov
jo
jg
cmp
out
or
fidivrl
aaa
fs
add
inc
sbb
fs
mov
mov
sbb
movsl
mov
mov
lods
xor
or
dec
pop
fiaddl
cmp
clc
call
dec
jecxz
adc
adc
cmp
insb
in
dec
imul
add
mov
popa
fdivr
push
inc
adcl
sub
cmp
push
in
cmp
mov
mov
xor
out
pusha
fnsave
testl
and
inc
das
and
cmpsl
insb
inc
loop
xchg
mov
fsub
xor
or
popa
fxam
pop
aad
call
fcomps
addr16
int
mov
fidivs
mov
imul
or
hlt
inc
sahf
pop
add
std
sub
and
outsb
jo
ret
jmp
sbb
cli
mov
mov
inc
sahf
repz
mov
and
xlat
pop
and
jae
and
or
cs
or
das
and
cmp
sub
dec
mov
jnp
pop
sbb
and
in
inc
lret
xor
inc
ja
or
nop
mov
cmp
std
scas
or
stos
pusha
push
ss
dec
mov
clc
and
and
cmp
das
sbb
fxtract
pop
popf
xchg
lcall
mov
jmp
add
scas
out
push
and
stos
test
or
dec
imul
xor
dec
fsubr
mov
inc
mov
loope
mov
push
js
jmp
aaa
lods
mov
cli
push
jl
daa
mov
cmpsl
mov
sbb
mov
jnp
dec
or
inc
push
sarb
movsb
cmc
test
aas
in
jae
mov
mov
shlb
or
popf
dec
cmpsb
adc
gs
cmp
dec
fwait
xor
test
or
mov
repnz
mov
add
stc
pop
mov
jmp
push
mov
mov
daa
mov
mov
push
adc
mov
sti
adc
jnp
push
imul
pop
leave
jb
test
cwtl
mov
ja
and
inc
mov
cmp
out
cmp
cs
fildll
fdivr
jmp
movsb
fdivrs
out
outsb
aaa
push
mov
js
sbb
xlat
cmp
out
into
and
ljmp
sbb
shrl
pop
lret
lret
adc
aad
inc
cmp
or
sub
shl
aam
and
xor
xchg
cld
mov
stos
orl
lahf
fstl
push
sbb
mov
adc
test
mov
das
add
push
or
mov
rorb
int
ret
xchg
xlat
in
aad
and
sub
lret
vpsrlvd
in
rclb
push
dec
in
je
xor
jns
ret
mov
push
adc
scas
aad
in
outsl
inc
or
in
fcomps
mov
push
stos
imul
adc
dec
aad
in
fs
hlt
ss
in
cmpsl
jmp
cli
pop
jae
mov
pushf
lods
xchg
fbstp
cmp
hlt
mov
out
jae
daa
push
xchg
movsb
pop
test
mov
clc
xchg
sbb
test
add
mov
push
scas
cwtl
daa
push
mov
pop
lock
adc
xlat
add
xchg
lcall
mov
adc
mov
rorl
mov
popa
lds
lock
or
faddl
cltd
push
data16
mov
call
imul
testb
inc
cs
xchg
in
cmp
lar
adcl
insb
mov
repz
andb
mov
jo
subl
aas
xchg
pop
jbe
ja
inc
sub
mov
call
and
and
call
enter
lock
leave
out
aam
adc
in
jg
popa
inc
sub
add
mov
sarl
arpl
andb
xlat
sbbb
adc
sahf
sub
xchg
mov
jne
repz
push
xor
shl
es
aas
xor
fptan
jg
ds
rorb
filds
cmp
je
dec
push
push
cmpsb
js
test
loopne
mov
xor
popa
loopne
pop
mov
xor
and
mov
jmp
sahf
rorw
add
jle
test
jp
into
xchg
or
gs
aas
inc
dec
jmp
sub
xchg
cmp
cmpsl
inc
popf
dec
or
adc
sub
xorb
xchg
push
push
hlt
sbb
test
adc
arpl
mov
leave
out
or
jmp
in
fstps
pop
sbb
and
ret
sti
inc
pop
inc
adc
nop
icebp
push
adc
adc
and
or
pop
fs
add
mov
sahf
aam
iret
lds
fistl
scas
int
pop
add
mov
push
sbb
xorb
js
test
lock
dec
jno
pop
cs
dec
lods
push
call
jl
mov
scas
pop
fcomi
into
es
add
out
fs
jp
inc
adc
mov
push
cmc
daa
and
pop
fmuls
jge
mov
in
test
cmpsl
rcl
lods
inc
int3
pusha
push
cmp
or
mov
loope
mov
sub
in
es
mov
data16
sti
std
add
cmp
repz
test
inc
xor
jmp
nop
jg
imulb
cmp
clc
rcrl
cmc
jmp
or
call
inc
pop
mov
nop
outsb
or
pop
cmp
xlat
js
xchg
mov
movsl
out
lea
enter
mov
sbb
xor
push
mov
push
in
jp
mov
outsb
out
nop
out
or
shl
mov
outsb
jmp
jle
cmp
loopne
lret
jmp
adc
sti
out
pop
and
and
mov
pop
add
dec
jae
aad
push
addr16
mov
add
stc
stos
mov
ret
not
adc
fbld
test
mov
mov
xchg
sub
aam
xor
xor
jne
outsl
inc
push
and
fcomi
sbb
jle
psrad
mov
jge
pushf
inc
jbe
xchg
lods
cmp
xor
mov
xor
out
xor
jns
ja
sbb
dec
ds
pop
xchg
jmp
and
mov
pop
imul
popa
inc
push
jecxz
add
mov
shlb
movsl
out
mov
add
pop
mov
jmp
aas
inc
sub
pop
jne
push
out
xor
pop
aas
jae
and
nop
repz
cmp
mov
movsl
in
push
mov
fsubl
mov
rclb
paddusw
inc
xchg
into
push
rcrl
cmpl
mov
push
add
dec
repnz
push
mov
popl
sub
jae
lods
mov
ljmp
or
xchg
dec
xchg
xchg
xchg
lods
jecxz
movsl
xchg
in
aaa
popf
cmp
xor
test
enter
fs
movsb
add
push
int
cltd
mov
stos
adcl
movsb
pusha
repnz
or
pop
mov
push
pop
ds
notb
ds
les
or
adc
or
xor
and
jae
mov
push
clc
ds
mov
push
fildl
jno
jmp
jmp
pop
repz
notl
out
xchg
sbb
and
sbb
test
add
in
mov
push
fidivs
outsl
rcrb
imul
inc
cmpsb
push
xchg
in
bound
movsl
mov
cltd
sbb
or
fimull
das
mov
movsb
repz
jnp
insl
cld
inc
ja,pt
jae
ret
mov
adc
lea
or
out
test
out
add
inc
stc
aad
push
je
or
xchg
scas
fmull
mov
mov
outsl
fstl
xor
test
movsb
and
shlb
int3
lahf
aas
xchg
mov
outsl
in
cmp
sub
out
xchg
jecxz
shrl
and
aad
ljmp
inc
xchg
stos
adc
into
sub
test
jg
xlat
push
loopne
dec
cmp
push
mov
scas
addl
loopne
aas
inc
xabort
mov
mov
mov
mov
or
add
add
adc
mulb
mov
stos
outsl
mov
in
gs
sbb
enter
test
inc
fildll
lret
fcmovu
rol
pop
aaa
movl
sbbl
cs
insb
mov
fidivl
sub
push
pop
popf
mov
ss
jae
daa
imul
pop
cli
xchg
insl
push
jge
loope
stos
in
popf
bound
cmp
addr16
inc
mov
or
sbb
push
aam
lods
sahf
loop
and
fistl
nop
adc
lods
cmp
stos
jp
popfw
movsl
aad
cmp
je
gs
scas
pop
mov
popa
jne
inc
cmp
sarb
lds
dec
push
sub
dec
lds
dec
jo
into
cmp
aaa
jge
fimull
jb
lcall
mov
mov
mov
push
notl
ret
pop
xor
mov
in
orb
jbe
xor
or
mov
cltd
add
push
outsb
std
mov
enter
add
inc
leave
xchg
popf
ljmp
lock
xchg
mov
pop
cmp
adc
mov
jbe
cmp
cmp
fucom
push
adc
mov
or
cli
xlat
cmp
int
cmp
inc
sub
addr16
cmpsl
add
and
lds
shlb
test
adc
mov
das
popw
and
cmp
orb
out
inc
push
addl
sub
test
jns
dec
out
fsub
cltd
adc
mov
xchg
jp
ja
popa
insl
test
movsl
mul
push
push
add
fsubl
pushf
cs
out
mov
cmp
xor
jmp
xorl
arpl
dec
dec
mov
add
stc
add
mov
rorb
insl
pop
push
loopne
pop
fistpll
test
mov
out
mov
stc
sbb
mov
jnp
sahf
inc
mov
xchg
inc
std
mov
add
xchg
jecxz
lahf
sbb
out
cmp
lahf
adc
sub
ret
loope
aaa
clc
mov
stos
aaa
xor
cmpsl
mov
pop
push
inc
jecxz
sbb
leave
arpl
in
les
xor
sahf
jmp
mov
ja
pop
je
mov
xor
test
gs
aam
sbb
and
je
lods
dec
xor
pusha
or
inc
int
rorl
fdiv
cmp
sub
dec
leave
pop
in
dec
das
rcrb
fwait
repz
add
mov
jae
das
shll
or
aam
jne
insb
xor
pop
pop
dec
inc
xchg
pop
mov
insb
and
int3
pop
xchg
mov
sti
lods
icebp
rorb
dec
test
jp
cmp
shr
std
in
fidivs
dec
iret
lock
jge
jmp
push
sub
mov
pop
loopne
or
and
or
insl
jbe
sti
cmpl
je
es
sti
ss
lret
cmp
mov
mov
ss
leave
push
loop
and
lds
ja
andb
outsb
pop
mov
cmp
jmp
push
hlt
cmp
sbb
sbb
jbe
jns
adc
pop
fcomip
enter
adc
out
add
fistpll
out
out
push
ds
out
xchg
testb
sti
or
clc
inc
les
mov
movsb
push
pop
iret
rcrl
cmp
push
and
roll
mov
dec
es
push
in
lahf
dec
cltd
ds
mov
mov
xor
inc
mov
add
or
add
lcall
imul
jns
pop
cmpl
sub
dec
imul
xchg
mov
mov
scas
xchg
fimull
adc
pop
pop
mov
hlt
jl
je
lahf
mov
sti
xchg
xor
ret
call
push
outsb
mov
cld
enter
insb
es
jns
imul
lods
or
cmp
sbb
sub
iret
adc
in
mov
inc
adc
jns
jbe
sbb
scas
push
dec
push
stos
xchg
lds
test
add
ror
neg
xor
jle
insb
lock
mov
call
decb
cld
test
adc
inc
mov
lock
arpl
xor
ret
out
movzwl
pop
test
insl
xchg
out
inc
repz
cld
mov
or
cmpsb
mov
dec
ljmp
dec
lahf
popf
lret
xchg
mov
das
pop
insb
xor
imull
push
mov
or
fwait
enter
sub
dec
es
bound
push
push
inc
adc
push
cli
lods
stos
arpl
int
ret
gs
mov
repnz
insb
out
popa
sti
push
dec
or
dec
mov
push
or
psubusw
hlt
ret
loop
test
sti
sub
mov
lret
add
scas
ja
jo
cmp
subb
pop
ror
lahf
sbb
popa
pushf
orb
mov
fiaddl
aad
adc
dec
int3
cs
xchg
mov
adc
sub
xor
push
sub
shll
pop
jns
inc
sarl
out
fistl
clc
mov
lds
mov
and
fwait
in
dec
js
mov
sbb
out
arpl
mov
lahf
je
fimull
fucomip
aas
aam
in
in
mov
pop
ficomps
subb
sub
nop
sarb
sahf
push
arpl
sub
fcmove
push
push
or
ds
orl
xorl
ret
lcall
lods
fistps
add
rcrb
cltd
lahf
leave
adc
inc
pusha
movsb
cmpsb
std
inc
cmpsl
push
or
adc
fldl
fpatan
test
lea
jmp
mov
pop
aad
sbb
nop
sub
cld
divl
xor
inc
jle
jmp
cmp
icebp
cmpsl
bound
cmc
push
pop
sbb
push
jo
sub
mov
add
and
daa
lret
ljmp
mov
add
scas
lods
les
pop
adc
daa
sub
push
mov
cltd
in
and
or
std
mov
jae
cmc
xchg
add
insl
mov
jns,pn
push
jae
test
ds
iret
mov
sbb
cmp
mov
xor
jle
or
outsl
idivb
adc
fdivrs
test
jo
repnz
pop
push
aaa
mov
xor
sahf
pop
or
cltd
xchg
jbe
pop
lock
sub
jle
xor
gs
push
pop
in
inc
and
jp
or
add
push
dec
xlat
icebp
xor
jg
leave
jo
dec
push
jmp
imul
push
adc
push
pop
ficoms
sar
out
xor
iret
addr16
ret
loope
es
addr16
imul
ss
sbb
inc
mov
cmp
ret
jp
jb
popa
sbb
in
sbb
arpl
jnp
dec
in
test
addr16
cmovae
push
mov
sti
and
fcomps
push
insb
in
das
xchg
add
aas
outsl
cmc
and
and
mov
xor
mov
cmc
mov
pop
sub
js
mov
popf
jae
mov
fmulp
cmp
or
xor
ja
stos
inc
lea
jp
das
sbb
in
pop
pop
clc
lods
push
jb
mov
mov
adc
or
jbe
inc
lds
jl
mov
cmp
test
test
mov
add
sbb
add
xor
cli
jecxz
inc
mov
cwtl
iret
and
imul
loope
mov
sahf
xchg
aad
rcll
insl
xchg
dec
lret
lods
fildl
xor
fnstenv
mov
push
cmp
mov
or
push
pop
inc
mov
shlb
in
mov
sbb
sbb
add
xchg
xor
sbb
adc
dec
andb
mov
loopne
aad
loope
ja
inc
dec
aaa
loopne
cmp
aad
jl
push
cltd
sarl
push
add
call
dec
lock
fcmovbe
dec
pop
loope
js
pop
inc
jl
cmp
aad
stos
and
fisttpll
push
in
insl
movsb
bound
sbb
jle
cmp
fsubs
mov
imul
filds
pop
xchg
mov
xchg
cmp
aas
pop
sbb
adc
into
aas
adc
inc
dec
fs
ja
outsl
and
add
add
pop
mov
stc
add
out
xor
dec
pop
jne
in
mov
scas
sbb
and
sub
pop
cli
jge
push
sub
repnz
lock
jns
jno
int3
in
jp
pop
xor
adcl
ret
and
push
bound
push
xchg
fmulp
aam
add
js
adc
dec
cmc
sbb
xchg
push
pop
pop
insb
push
jmp
sbb
xor
push
push
push
mov
push
push
xchg
adc
pop
pop
mov
cltd
mov
mov
jns
or
ffree
pushf
fstpl
lret
fcmovnbe
sub
adc
pop
repz
sahf
ds
cltd
mov
mov
and
add
xchg
jb
std
test
push
int
sbb
or
inc
mov
lea
add
or
mov
push
lock
dec
mov
mov
mov
clc
push
adc
and
dec
fidivs
jge
sbb
lods
and
or
je
push
pop
xor
ret
icebp
add
test
push
pusha
test
add
outsb
push
aad
xor
inc
mov
shll
pop
xchg
push
stc
jg
xchg
in
sub
inc
dec
sub
jmp
sub
xchg
jb
int3
sbb
mov
cwtl
lods
inc
bswap
mov
inc
jne
idivl
testb
dec
fiaddl
hlt
in
movsl
fcompl
repnz
leave
inc
out
out
mov
lahf
xlat
fadd
mov
jnp
jae
in
jae
testb
push
jnp
lret
mov
bound
pop
adc
imul
cmp
ss
loope
inc
aas
popa
and
cmp
dec
loopne
fsubrl
jae
lds
cmp
arpl
int
push
movsl
lods
orb
enter
or
ds
pop
outsl
xchg
push
mov
xchg
mov
aaa
leave
lret
inc
mov
outsl
repz
push
jmp
fadds
mov
lds
xchg
jo
std
das
mov
into
jno
mov
sarb
inc
jbe
or
fldl
cmp
mov
mov
dec
xchg
cwtl
pop
push
xchg
das
jno
add
stc
jl
adc
cmpsl
mov
mov
ror
sbb
cmpsl
ds
push
insl
jmp
jge
xor
and
mov
ud1
scas
or
and
dec
cmp
sbb
adc
out
movsb
movsb
stos
ljmp
inc
jno
imul
shrb
into
pop
jnp
cmp
sub
int3
clc
push
sbb
mov
out
and
push
adc
sbb
jge
and
push
mov
movsb
or
in
dec
xor
mov
add
sbb
push
out
repz
outsb
jbe
add
cmp
in
cmpsl
insb
pop
push
addr16
loopne
mov
dec
in
cltd
loop
dec
push
outsb
and
fadds
mov
xchg
pop
cmp
dec
xchg
sbb
mov
add
and
les
mov
jecxz
inc
sbb
jp
fistl
mov
mov
sub
dec
adc
stc
xchg
test
loop
in
mov
add
ljmp
cmp
jbe
sbb
xor
stc
or
sub
inc
cltd
push
out
push
dec
jno
cmp
sarl
stc
ds
icebp
sti
add
xchg
xchg
pushf
repnz
out
sti
mov
mov
pop
lods
sbb
jo
mov
loope
and
cmp
sbb
adc
inc
push
inc
mov
dec
loope
das
dec
cmp
jle
push
inc
mov
and
out
jns
xor
pop
ja
adc
push
sub
cmpsl
mov
aaa
add
inc
pop
std
inc
xlat
aas
test
xchg
shrl
jb
mov
es
loop
adc
std
add
je
iret
stos
iret
cmc
xchg
clc
and
dec
rolb
dec
imul
fdivl
arpl
ret
mov
lods
or
xor
xor
sub
ds
sbb
aaa
push
adc
cmp
mov
mov
cli
jno
ret
dec
mov
fnstenv
adc
pop
mov
outsl
pop
dec
push
xchg
jb
mov
mov
pop
nop
cwtl
fsubl
push
outsl
lret
shl
push
sub
movsb
sbb
popf
cmpsb
std
imul
arpl
test
in
sahf
mov
dec
fdivrl
cmp
out
inc
ds
xor
mov
xorl
xor
jge
cwtl
lods
and
mov
movsb
sbb
in
inc
push
jge
push
sti
inc
cmpsl
lahf
enter
mov
fisttpl
dec
and
imul
subl
ret
lock
jle
xor
xor
bound
push
mov
or
mov
cs
loop
jae
jbe
aaa
pushf
fiaddl
outsl
scas
jecxz
xchg
push
jmp
sbb
sarl
arpl
sbb
bnd
cwtl
sub
dec
mov
jne
cs
xor
sub
mov
mov
mov
aam
fstpl
cwtl
in
clc
daa
or
lds
and
in
xor
jge
xchg
fsubrs
in
mov
xor
aad
data16
sarl
dec
roll
mov
outsl
push
pushf
add
movsl
add
and
dec
neg
push
sub
mov
stos
add
xchg
inc
jb
jbe
jle
repnz
sti
je
cwtl
loopne
jbe
mov
out
into
mov
xor
call
push
mov
test
inc
aad
in
sub
int3
and
daa
les
mov
vfrczss
xorb
mov
psrad
jmp
xlat
mov
mov
dec
pop
aam
jg
and
bnd
aam
inc
call
or
xor
daa
add
jo
or
sub
lea
outsl
fnstsw
xchg
mov
dec
push
pushf
or
scas
sub
subb
mov
shll
lret
add
jae
sbb
cmpsb
addl
scas
cwtl
js
xchg
lods
in
xor
push
mov
xor
fs
mov
lcall
mov
pop
lock
xor
mov
into
shrb
scas
cli
xor
loope
mov
inc
pop
lcall
cli
xchg
or
pop
and
xchg
stc
mov
mov
push
jp
scas
testl
sbb
outsl
lret
cli
and
ljmp
les
lahf
xchg
add
sub
lahf
and
je
pushf
inc
sub
xchg
or
les
xchg
aad
pop
aad
inc
and
sbb
in
adc
decl
add
or
or
aas
cmp
bound
push
jecxz
xor
xabort
popa
mov
fildl
push
out
or
aad
push
repz
pop
leave
adc
cwtl
jae
adc
pop
jle
negb
mov
or
cmp
cmp
mov
mul
and
lret
leave
push
in
movq
enter
lahf
pop
mov
inc
jns
negl
aad
lahf
outsl
xor
push
lods
nop
hlt
sbb
push
mov
push
pop
or
shrb
mov
and
in
inc
out
mov
daa
cmc
out
dec
pop
add
daa
sbb
adc
test
aam
scas
cmp
adc
push
inc
xchg
jne
sbb
push
pop
sbb
insb
pop
jp
or
xchg
jp
out
xlat
inc
dec
push
pushf
dec
outsl
or
in
or
sub
pop
test
dec
out
sub
or
lds
outsb
or
mov
pop
in
jl
sub
pop
sub
push
inc
sbb
shrl
sarb
mov
aaa
ror
push
test
mov
and
dec
aad
js
pop
mov
cli
ljmp
pop
xor
aam
mov
fcomp
mov
sbb
xchg
pop
popf
out
xor
aad
sub
push
push
les
inc
cli
inc
jo
ljmp
xor
cmp
into
in
sub
repnz
sub
fs
push
xor
push
and
mov
push
cmc
es
lret
faddl
test
rol
pop
mov
sbb
and
sub
sbb
push
mov
fdivrl
dec
jo
mov
popa
fs
std
cld
loopne
jp
jmp
pop
pop
stc
push
lret
add
rolb
or
mov
mov
xor
cs
in
enter
and
std
dec
mov
in
shlb
jno
int
sub
pusha
das
ds
outsb
cmp
mov
jne
ret
sbb
and
xchg
xor
mov
sbb
push
push
mov
pop
out
push
in
xchg
sub
mov
adc
xchg
push
xchg
xchg
and
add
jle
inc
test
out
jmp
sahf
int
ret
sbb
mov
mov
arpl
dec
fildll
or
test
pop
or
inc
sub
xchg
call
mov
mov
dec
shl
movsl
dec
je
and
mov
jb
lcall
add
mov
lret
mov
sbb
inc
xchg
pushf
xchg
inc
out
dec
mov
and
faddp
ss
shlb
loope
adcb
imul
dec
or
dec
cmp
js
push
subb
rcll
adc
loopne
enter
dec
shr
xor
pop
inc
imul
loop
jb
pop
stos
jg
loop
sar
mov
adc
enter
lret
dec
pop
push
push
mov
je
pusha
jmp
adc
stc
imul
and
jb
jg
or
mov
outsl
cmp
xchg
es
adc
out
cmp
add
dec
sbb
sbb
pushf
mov
cs
loopne
pop
and
js
shrb
dec
adc
dec
jl
inc
pusha
imul
lock
or
aas
sub
sbb
jo
lock
mov
push
mov
mov
sbbb
sbb
sbbb
sub
push
xchg
adc
mov
bound
lret
cs
or
loop
sub
jg
imulb
adc
inc
mov
lea
hlt
mov
addr16
out
test
fidivrs
loopne
in
cld
data16
mov
dec
jmp
in
in
adc
mov
cmpsb
repnz
mov
les
mov
ud1
cmp
xchg
push
jb
push
dec
dec
outsl
adc
mov
lahf
jecxz
mov
ds
incl
lret
add
and
js
aam
push
aam
rcr
aam
pop
popfw
sbb
notb
pop
push
or
mov
mov
dec
cli
xor
jmp
insb
add
rolb
xor
jl
mov
adc
mov
mov
lret
jne
enter
inc
mov
cmp
jecxz
insl
into
push
push
mov
mov
out
test
push
mov
out
repnz
jns
aaa
aam
xchg
rolb
lret
adc
std
insl
lds
and
shr
inc
jmp
adc
int3
sbb
and
fcoml
push
sbb
data16
aad
test
push
adc
add
and
imulb
fisubl
leave
jns
inc
les
jle
jns
pop
clc
mov
mov
sbb
adc
mov
movsl
iret
ss
enter
int
pop
jne
adc
mov
nop
mov
int3
out
mov
jbe
jnp
jnp
mov
bound
sti
add
xchg
dec
and
push
cmp
and
test
leave
or
mov
flds
xor
sub
frstor
adc
mov
std
cli
jne
lods
int3
mov
lcall
fstpl
mov
xor
mov
jb
popf
cmc
popf
rclb
or
xor
outsb
dec
mov
loopne
test
pop
mov
jge
jl
add
pushl
xor
cwtl
cli
stc
push
and
popf
les
cwtl
dec
test
pop
xchg
cmp
adc
decb
and
fmuls
and
pop
or
pop
xchg
mov
test
dec
pop
fistpl
or
int
shlb
shrb
push
inc
mov
movsb
repnz
ljmp
xor
xor
inc
pop
test
cwtl
jbe
adc
test
jno
fdivrs
mov
pusha
rclb
mov
jp
xor
adc
dec
test
lds
into
lds
lods
rorb
pusha
sbb
pop
mov
hlt
cwtl
movsl
push
sub
popa
xor
dec
sbb
jg
ficoms
push
fdivrs
lea
push
cmpsl
addb
adc
push
mov
lds
and
dec
cwtl
pushf
stos
jmp
fcompl
data16
std
jbe
xchg
sbb
jl
or
das
loope
xchg
dec
insb
jecxz
testb
ds
xor
xor
adc
es
je
sub
xor
jne
dec
pop
pop
rclb
dec
and
leave
divb
aad
mov
das
or
push
jb
in
test
xor
or
pusha
mov
inc
dec
sahf
pop
xor
and
mov
dec
or
incb
lock
jns
je
jecxz
aaa
xor
sub
xchg
xchg
push
xor
rorl
movb
test
stc
lea
add
and
into
loop
popa
pop
add
push
into
fldt
imul
je
push
loope
jmp
das
adc
and
fmull
xchg
xchg
mov
fmul
cmp
jae
rcl
mov
xor
ja
repz
dec
jae
inc
push
loop
movsl
call
xchg
add
pop
fisubs
rcl
test
xor
shl
lea
xor
mov
cmpsl
mov
inc
xorb
pop
xlat
flds
out
mov
sub
mov
jno
inc
iret
cmc
mov
pop
dec
mov
popa
dec
and
xchg
inc
shl
daa
mov
mov
insb
xchg
dec
inc
ss
push
in
xchg
pop
mov
nop
and
or
fwait
rorb
push
jle
jne
ror
in
rorb
mov
lret
mov
and
pop
mov
or
inc
push
pushf
shl
sbb
in
add
fcomps
jmp
and
jne
cltd
ret
sub
push
icebp
lods
cmpsb
nop
repz
inc
gs
or
and
rcrb
mov
mov
dec
loop
outsb
push
jmp
cmp
mov
mov
add
pop
xchg
sub
in
cwtl
and
hlt
sub
or
dec
mov
xor
fwait
and
mov
xchg
test
adc
xchg
out
mov
jns
loopne
scas
sbbl
sbb
sbb
sub
notl
add
in
adc
mov
push
in
cmpl
frstor
mov
pusha
xchg
scas
pop
push
mov
ja
imul
xchg
into
lods
fwait
imul
cmp
leave
lds
cmp
sbb
ret
pop
mov
loope
jb
cmpl
inc
adcb
aaa
mov
jno
sahf
or
and
xchg
sti
push
cmpsl
testb
push
or
shlb
hlt
xor
or
dec
inc
sbb
sti
cmpsl
jp
mov
sbb
adc
push
sub
cld
in
mov
push
mov
lcall
andb
or
adc
mov
sbb
mov
mov
loopne
icebp
movsl
and
mov
leave
lcall
push
cltd
and
pop
mov
dec
arpl
aaa
aad
ss
in
cmp
dec
pop
cmp
xor
je
call
sbb
cwtl
adc
mov
hlt
mov
clc
pushw
mov
jne
add
add
jmp
and
cli
cwtl
dec
imul
mov
xchg
pop
imul
inc
push
sub
cmpsl
add
dec
fwait
or
pop
movsb
jb
aas
and
fisttpll
int3
jne
pop
cmp
lods
hlt
js
ret
ljmp
lret
fs
jg
bound
ret
outsl
lds
decl
icebp
clc
and
push
jb
out
push
adc
dec
xchg
push
ja
jmp
mov
mov
mov
adcl
out
fldcw
adc
inc
sub
pop
repz
int3
or
mov
fdiv
xchg
mov
dec
arpl
mull
rclb
hlt
push
mov
fldenv
ja
add
add
jno
loop
das
xor
mov
es
cwtl
and
cmp
add
insl
popf
loopne
mov
sub
xor
xchg
cmp
enter
cmp
adc
mov
rclb
sbb
ss
cmc
push
dec
push
jb
out
push
fisubs
movsl
mov
push
lods
jno
xchg
pusha
cmp
mov
sub
scas
lret
mov
adc
push
sub
popl
pop
loop
in
cltd
stos
shll
jo
mov
ss
daa
test
pop
subl
and
cmc
adc
jb
xchg
rcll
push
test
cmpsb
mov
adc
cmp
loopne
adc
fs
shll
push
mov
xchg
repz
outsl
mov
sbb
lock
pusha
lea
hlt
mov
or
pop
es
call
or
inc
pop
sub
stos
or
adc
sbb
push
cmp
mov
repnz
out
shlb
popf
insb
lcall
std
es
and
xchg
sbbl
stc
fldcw
aas
and
xor
divl
jo
lcall
repnz
xchg
daa
mov
imulb
sbb
pop
push
adc
jle
js
das
cmp
cld
xor
imul
mulb
sub
pop
int
popf
inc
pop
inc
xor
mov
mov
mov
push
or
adc
stc
push
daa
cmp
out
and
aam
xchg
xor
inc
ret
jne
push
iret
fcoml
std
mov
adc
scas
scas
movsb
xchg
cmpb
outsl
repz
ljmp
rcl
cmp
mov
mov
jns
dec
pop
xchg
fdivl
mov
inc
and
or
ror
cld
ret
lahf
cmp
stos
int3
mov
outsl
lcall
push
jecxz
mov
aad
outsb
mov
lods
sbb
cmp
lods
repz
lret
xchg
scas
lock
icebp
dec
dec
xor
ret
das
gs
mov
rcl
enter
sti
mov
test
and
fnstsw
ret
add
mulb
mov
xchg
lcall
movsl
mov
leave
add
adc
mov
iret
adc
ds
lods
dec
mov
das
pushf
mov
pop
dec
and
jecxz
xor
test
lret
int3
mov
cmpb
sbb
fsubrs
lret
push
add
pop
add
push
dec
mov
outsl
mov
lcall
sbb
and
sahf
cmp
xor
test
popa
in
and
dec
rcrb
and
mov
or
sbb
or
fsubp
push
aaa
xchg
xchg
into
and
mov
jo
cmp
jnp
int3
test
mov
loope
sub
adc
imul
inc
sti
and
jg
pop
cmp
int
push
or
fcomi
jmp
mov
lcall
mov
in
sbb
push
aam
sarl
enter
in
ret
lds
cmp
push
push
push
pop
fcomi
idivb
in
fwait
sahf
mov
push
and
loope
sub
aad
in
fidivrs
lahf
mov
lret
nop
pusha
mov
xchg
enter
daa
dec
jae
push
pop
stos
mov
xor
adc
or
aad
adc
aad
mov
and
shrb
add
mov
stos
sbb
ret
dec
lcall
rcl
sbb
dec
outsb
adc
push
jge
sbb
ds
push
sub
add
cmp
adc
leave
xchg
dec
inc
xchg
in
ror
mov
addb
fucom
mov
mov
sub
dec
hlt
xor
xor
xor
mov
shr
jo
sbb
xchg
ljmp
scas
movl
popa
mov
arpl
push
mov
int3
mov
gs
mov
fwait
lea
cmp
mov
lods
daa
jns
adc
mov
mov
xchg
sub
sbb
mov
sbb
and
loope
xor
bound
int3
jle
out
push
pusha
std
fcoml
dec
out
mov
inc
mov
or
and
imul
lock
jae
xrelease
stc
call
andl
insb
cltd
aaa
fists
out
mov
repz
xchg
mov
dec
pop
jle
mov
pop
scas
loopne
and
je
and
pop
inc
rclb
add
push
clc
xor
sbb
or
fiadds
mov
sbb
cltd
icebp
in
and
sbb
mov
inc
js
scas
int3
iret
push
pushf
add
or
imul
cmpb
and
fwait
inc
jne
push
mov
push
xlat
mov
popf
pop
or
loope
inc
lock
cmpsb
pop
lds
mov
test
stc
loopne
mov
xorl
gs
es
push
add
pusha
iret
fsts
xlat
rcr
jo
add
cwtl
mov
ljmp
and
add
jno
aas
enter
icebp
add
cmp
xchg
mov
push
imul
xchg
xchg
popa
dec
pop
lret
arpl
aas
int
aam
adc
pop
mov
push
mov
sbb
clc
push
mov
arpl
pop
cmc
jl
ljmp
iret
jle
icebp
js
out
lods
sub
push
cmp
jb
dec
mov
add
xchg
shlb
cmp
into
sbb
add
popf
jno
adcl
mov
mov
lahf
imul
mov
ret
imul
sub
adc
dec
mov
mov
cltd
push
movb
xchg
xor
and
imull
clc
ja
in
insb
dec
pop
pusha
mov
xchg
jb
out
lods
cld
add
push
cwtl
jnp
addr16
shlb
leave
into
nop
je
sbb
mov
invd
daa
jge
dec
pop
out
push
add
lcall
sub
cmp
push
mov
mov
js
jmp
fmuls
dec
es
std
mov
jl
mov
dec
dec
leave
mov
cwtl
bound
int
push
loope
sub
daa
xchg
stc
push
inc
fs
sarb
mov
mov
movsl
xorl
sub
or
sbb
xchg
test
adc
icebp
enter
cmc
or
jno
jg
sub
mov
andb
loope
push
mov
rorb
je
or
popf
xchg
mov
stos
cmp
loopne
jmp
xchg
add
clc
inc
push
inc
mov
sub
mov
jne
lahf
mov
arpl
add
jmp
cltd
insl
inc
jle
movsb
int3
jbe
mov
cli
add
jle
cmp
cwtl
ret
outsb
xchg
push
xor
inc
dec
cmp
cltd
adc
inc
mov
sti
jecxz
mov
stos
dec
dec
and
add
clc
pop
and
jg
adcl
outsb
pop
dec
mov
setp
daa
fcom
clc
loopne
xor
ds
and
aas
gs
cmp
jno
add
push
pushf
ljmp
sbb
jnp
rcll
js
outsb
addr16
sarb
inc
xchg
repz
or
arpl
shll
imul
scas
stos
push
push
pop
inc
scas
xor
cmp
lret
ja
ljmp
gs
push
aaa
push
push
pop
divl
cmp
xchg
scas
adcl
fucomi
stos
imul
and
jl
push
das
in
push
addr16
decb
add
aad
addr16
cmp
std
aad
in
in
ret
jne
icebp
sub
icebp
out
fsts
addb
mov
insl
loopne
pop
jp
lret
jecxz
push
sarl
xchg
push
arpl
sbb
pop
leave
je
xchg
cmpsb
les
jge
inc
iret
ss
jnp
int
mov
mov
clc
xor
popf
sahf
cmp
outsb
inc
out
xlat
addr16
cmpsb
jle
fbld
pop
out
jmp
jns
add
in
inc
ret
cmp
sub
lahf
ds
sbb
jp
sbb
rcrb
pop
add
aam
xor
inc
mov
jo
sub
or
push
mov
cmpsl
or
hlt
dec
mov
mov
jmp
jne
daa
lock
fists
lods
mov
push
addb
sbb
pop
mov
push
icebp
adc
test
mov
adc
aam
adc
jne
cmpsb
enter
ja
addl
fbstp
pop
add
daa
cmc
fdivp
or
cld
sbb
mov
cld
aad
call
cld
repnz
test
inc
and
daa
sub
fistpll
jb
or
pop
xor
sub
test
and
loopne
adc
test
shrl
jno
out
into
popa
adcl
cmp
pop
dec
inc
aad
cwtl
adc
int3
adc
enter
iret
fs
in
mov
pop
scas
mov
out
leave
gs
out
scas
cs
jno
ret
test
mov
mov
dec
test
and
xchg
xchg
pop
pop
cmp
pusha
xchg
insb
fucompp
inc
and
testb
sahf
cmpsl
jne
add
imul
insb
es
adc
mov
lahf
pop
test
ds
fs
js
push
cmpsl
pop
jge
je
inc
nop
xchg
test
cwtl
pop
aam
lds
cmp
jno
mov
test
jecxz
adc
cli
enter
into
cmp
lret
scas
aam
and
jle
cmp
in
fadds
pop
jp
rolb
add
sahf
js
or
inc
jl
inc
adc
push
mov
dec
xor
jb
seta
cmpl
icebp
ds
leave
ret
push
cli
iret
daa
pop
fwait
pusha
push
scas
js
fildl
or
inc
inc
mov
fiadds
rcrb
mov
xor
popf
daa
cltd
scas
out
dec
dec
pop
lahf
addr16
jne
inc
pop
inc
sbb
pop
maskmovq
divl
adc
dec
ljmp
int3
mov
push
hlt
sahf
stos
cmp
je
popf
js
push
xchg
loop
aas
addl
xlat
faddp
pop
ficoms
add
inc
lea
and
cmpsb
add
nop
mov
fiaddl
mov
in
cmp
in
and
imull
jno
scas
push
push
dec
push
js
xchg
xchg
fs
lret
repz
cmpsl
sti
jne
scas
dec
popa
fdivrs
push
gs
xchg
rorl
mov
rorl
mov
and
aaa
inc
lahf
popa
mov
fistpll
inc
xlat
mov
es
mov
push
or
ret
xchg
ja
lds
orl
pop
loopne
jmp
add
sub
imull
cmp
jl
popf
dec
sbb
adc
push
lods
ja
sub
pop
hlt
cmp
pop
cli
mov
ds
mov
push
in
or
ja
shl
shlb
test
je
mov
gs
mov
xchg
lock
xchg
xchg
bound
dec
or
dec
mov
pop
lods
dec
mov
daa
cmp
ja
sbb
inc
push
pop
inc
into
fadds
rclb
jae
enter
gs
mov
lods
and
test
test
jb
negl
mov
ret
div
mov
dec
or
outsb
seto
pop
leave
inc
nop
mov
test
int
mov
fistpl
outsl
or
jo
xchg
xor
mov
mov
adc
mov
aad
leave
in
aaa
popa
inc
cwtl
lahf
push
cld
pop
in
adc
lock
push
out
iret
dec
std
add
dec
sahf
subl
sbb
pop
xlat
xor
push
pop
aaa
scas
rorb
adc
mov
enter
call
aas
mov
cmp
push
pop
sub
push
lea
or
div
mov
out
sub
dec
push
or
test
push
cs
pop
or
arpl
ja
mov
sbb
push
punpckldq
insb
xrelease
lret
imul
push
fs
lods
imul
mov
cmp
sub
out
pop
pop
mov
cs
sub
xor
pop
dec
pop
or
mov
negl
or
orl
xchg
ffree
xor
je
in
dec
pushf
aas
fdivr
cmp
dec
mov
fimull
cmpl
scas
sbb
cmp
scas
hlt
jle
jg
les
jne
sub
nop
cmp
in
mov
pop
das
xor
je
pop
mov
ret
shlb
loope
xchg
fsub
add
jo
lods
mov
xor
pop
ss
aaa
pop
cmp
in
xor
mov
sbb
cmp
pushf
std
in
jecxz
mov
sbb
mov
aad
stos
sbb
insb
pop
inc
pop
fwait
sub
inc
inc
dec
fiadds
ret
loop
mov
movsl
cmpsl
ds
and
cmpsl
mov
mov
dec
ret
popa
fldt
clc
xor
and
lods
inc
mov
rolb
xchg
arpl
xchg
xor
fidivs
sbb
shrl
xchg
ljmp
addr16
ljmp
movsl
rcl
addr16
mov
push
add
enter
mov
mov
ds
fucomi
jbe
jb
adc
inc
adc
cmp
pushf
jp
sbb
pop
mov
in
mov
mov
pop
mov
lds
lds
test
sub
lods
ss
mov
es
or
adc
sub
fwait
xchg
dec
popa
hlt
mov
mov
jne
xchg
loopne
cli
push
xchg
outsl
int
andb
stos
push
scas
pop
jne
and
xchg
mov
and
sub
test
mov
and
sahf
mov
cmp
outsb
adc
int
in
mulb
xor
enter
pop
lods
fnstsw
push
sub
push
test
ror
jl
pop
mov
call
xchg
or
push
ds
xchg
test
push
add
arpl
cmp
mov
das
sbb
xlat
push
pop
mov
fmull
sbb
mov
add
rol
add
into
stos
push
addr16
popa
out
adc
or
lods
or
cltd
lahf
movsl
bound
in
inc
and
shr
mov
repz
sarl
jl
imul
mov
cli
test
ret
orl
add
inc
fs
dec
addb
dec
cmp
int
push
lcall
outsl
pusha
add
xchg
sbb
and
push
sbb
mov
and
lret
movsl
inc
in
xchg
roll
adcl
jl
sti
fnstenv
loope
sbb
or
fdivl
insl
andl
pop
cmpsb
cmc
movsl
test
mov
leave
mov
filds
fwait
aad
pop
dec
stc
cmp
out
inc
mov
push
push
jbe
jge
popf
fwait
jae
jmp
or
sbb
and
sbb
jecxz
push
rcrb
inc
adcl
iret
pop
mov
jno
xchg
mov
adc
jmp
popf
pop
fldl
fildl
out
lock
sub
cmpsl
push
popf
sbb
daa
test
xchg
lahf
or
sub
iret
cmpsl
cmp
push
xchg
std
inc
insl
mov
xor
pop
lret
mov
jno
fldcw
dec
lods
clc
and
lea
mov
movsb
xchg
stos
in
mov
shll
es
mov
sbb
cli
addl
mov
notb
pop
adc
aad
clc
aam
mov
inc
mov
ja
jge
mov
mov
out
jp
mov
push
or
cli
mov
adc
aas
xchg
dec
notl
pop
bound
das
xchg
movsl
sub
stc
sbb
cmpl
fdivrp
pop
cwtl
or
dec
or
xor
scas
pushf
mov
repnz
xor
dec
xlat
and
lret
mov
and
in
jne
jno
ds
outsb
inc
and
ss
cmc
add
inc
fiadds
adc
cmp
fnstenv
scas
bound
pop
push
imul
add
add
jnp
ficoml
rcll
div
aad
std
insb
shll
in
adc
popf
fwait
mov
push
pushf
push
enter
jl
push
loopne
ds
ljmp
sbb
mov
aad
ss
and
jmp
les
sub
push
fisttpll
cmc
movsbl
sub
add
sub
mov
add
leave
xchg
rcr
inc
jge
xor
es
jbe
inc
movb
lret
insl
sbb
xchg
sub
pusha
push
add
mov
mov
loopne
adc
mov
stc
mov
mov
mov
shll
outsb
loopne
out
sub
scas
test
daa
in
cwtl
popf
pop
pop
inc
pop
hlt
mov
jl
push
push
cld
pop
xchg
lret
push
dec
sbb
pop
insb
rcrb
sbbb
insb
push
mov
dec
push
scas
dec
push
pop
push
sub
pop
pop
dec
dec
lret
je
sub
mov
sahf
lahf
sbb
sbb
add
mov
or
scas
xor
mov
add
mov
inc
arpl
mov
cli
fdiv
and
in
adc
adcb
adc
data16
into
sub
mov
pop
addl
and
out
sbb
mov
jle
xor
test
sbb
test
add
inc
push
xchg
cwtl
pop
xorl
inc
stos
ss
mov
aas
shlb
xchg
sub
lods
mov
add
outsb
adc
mov
xor
dec
cs
fbstp
pop
jae
loope
cwtl
cmp
and
xor
adc
pop
or
lret
mov
cld
leave
hlt
sbb
cwtl
push
or
add
fwait
scas
push
hlt
movsb
je
mov
push
or
lahf
out
icebp
dec
sub
lea
adc
repnz
fnstcw
fstl
push
enter
popf
pushl
push
mov
sbb
adc
pushf
insl
cmp
incb
iret
mov
adc
test
ret
xchg
bound
push
sub
lock
je
data16
rcr
fcomps
pushf
in
adc
enter
sub
xor
iret
hlt
mov
sbb
and
loopne
popa
mov
lret
fwait
jns
mov
dec
and
or
cmpb
leave
movsb
lock
sbb
hlt
inc
mov
push
iret
or
pop
pop
imul
out
add
cmc
sbb
cmpsl
push
fcompl
aad
dec
inc
lahf
jae
rolb
call
out
outsl
arpl
and
lods
and
mov
adc
pop
mov
popa
xchg
stc
mov
xor
push
or
arpl
inc
xchg
mov
mov
jae
inc
mov
push
lock
jnp
movsl
incl
jnp
mov
mov
scas
mov
or
adc
cmp
jmp
jecxz,pn
aam
sbb
fcoml
jecxz
mov
aad
push
stos
das
add
outsl
clc
stc
mov
xchg
dec
insb
mov
mov
mov
scas
test
mov
push
sbb
mov
and
bound
ret
ret
mov
and
jae
lahf
xchg
pusha
mov
mov
dec
or
stos
into
add
push
test
movsl
inc
test
repz
loope
mov
lods
stos
pop
and
cmp
and
les
lods
pop
adc
popf
jge
pop
sbb
xchg
lods
addr16
jle
fnstcw
xchg
popa
cld
xchg
xchg
push
mov
cs
jp
mov
adc
ret
fdivrl
ret
icebp
vandps
mov
jp
sub
iret
aas
and
addr16
push
repz
inc
mov
inc
or
adc
mov
or
and
push
sbb
inc
jle
stos
cs
negb
lret
insb
and
out
mov
dec
cmpl
pop
jecxz
aam
sub
pop
inc
imul
xchg
mov
imul
or
into
outsl
sub
sbb
subl
jb
mov
mov
ljmp
insl
mov
test
and
pop
jg
mov
aas
es
icebp
mov
cld
addr16
push
add
mov
mov
jmp
mov
pop
mov
fidivrs
pop
fwait
std
pop
sbb
loopne
into
je
add
scas
lcall
shll
jge
inc
cmp
adc
add
cmp
pusha
outsb
fidivs
and
inc
xlat
jp
mov
cmp
sbb
sahf
out
xor
dec
lods
es
dec
jns
ret
lock
call
cmpsl
fs
push
jmp
mov
fneni(8087
daa
mov
add
add
inc
pop
and
inc
cmpsb
pop
adc
test
jmp
rclb
push
push
lods
xchg
stos
mov
aaa
add
lret
mov
cmpsl
cmp
icebp
fsubrl
mov
mov
cwtl
adc
scas
xchg
xchg
cmpsb
jns
xchg
jmp
jp
ret
mov
mov
mov
mov
nop
pusha
or
adc
pop
fld
and
bound
or
sub
lods
bound
mov
and
dec
pop
call
addr16
add
daa
lock
cmp
mov
and
and
sahf
cmp
inc
jg
mov
jne
mov
mov
shrl
push
cld
loope
add
push
les
sub
movsl
add
in
rol
in
int3
sbb
lcall
xor
negl
xchg
loop
ror
fwait
pop
and
xchg
mov
mov
outsl
add
xchg
ret
add
xorl
stc
ljmp
dec
push
and
mov
imul
andl
aad
pop
fistps
mov
outsb
loope
sbb
dec
dec
loope
push
cld
aas
jmp
pop
icebp
xor
fs
push
mov
int
rcrb
fwait
cli
xchg
clc
mov
bound
cmp
and
in
dec
jne
jg
mov
jle
mov
loopne
ljmp
testl
lret
ds
cmpsb
jmp
xor
addr16
pop
sub
and
add
dec
fdivp
or
call
xchg
dec
test
aaa
lea
lcall
mov
imul
test
movsb
test
mov
xchg
mov
cltd
sub
popl
stos
sub
not
movsl
jns
mov
pushf
in
loopne
pop
daa
mov
sti
stos
inc
pop
pop
mov
pop
fxch
int
sub
adc
jno
xchg
sub
xchg
hlt
imul
mov
add
pusha
repz
xor
std
aam
inc
test
icebp
pop
cmpsb
xchg
xchg
mov
cmpsl
decb
xchg
cltd
stos
dec
cmp
ss
adc
lahf
and
ficompl
mov
xchg
sarb
sbb
push
inc
xor
pop
scas
adc
push
loop
scas
xlat
lods
xor
xchg
pop
testl
and
or
imul
imul
data16
repz
ja
lock
divb
icebp
xchg
jo
sub
into
adc
jnp
fldenv
pop
sbb
jp
inc
es
xchg
ret
sub
mov
inc
push
flds
scas
in
mov
sub
aas
mov
sbb
test
ss
data16
mov
mov
cmp
stos
xor
xor
fmull
push
andl
sbb
ficoms
loope
repz
mov
mov
pop
push
push
leave
cmpsb
push
inc
test
shll
stos
pop
aas
adc
pop
call
xlat
in
cmpsb
lahf
ret
fcompl
rorb
arpl
mov
xchg
ret
mov
mov
cmp
push
and
and
add
cli
jae,pt
daa
or
out
ret
mov
jno
add
sbb
leave
in
mov
mov
mov
add
push
ja
jb
push
xchg
sti
inc
push
pusha
outsb
mov
mov
ds
cltd
mov
push
or
push
cwtl
lcall
dec
xchg
push
test
or
sbb
mov
ss
add
arpl
je
scas
jge
jno
dec
in
sahf
mov
nop
xchg
mov
pop
lret
bnd
scas
arpl
jge
pop
mov
outsb
mov
insl
sub
loop
mov
lret
sub
fmuls
mov
inc
or
jns
aam
test
rcll
mov
mov
nop
sbb
rcrb
xor
pop
jp
jl
stos
cmp
das
cli
ret
dec
out
fwait
jmp
jns
sbb
xor
push
jbe
fwait
arpl
loopne
mov
adc
ficoml
imul
out
sbb
xchg
mov
mov
cmp
mov
sub
or
cltd
ret
inc
adc
in
xchg
dec
aam
cmp
js
rorb
sahf
sbb
out
mov
repz
loope
aas
mov
cli
push
pop
call
js
jne
adc
jp
int
mov
pop
fwait
mov
xchg
pushf
test
int3
xchg
cmp
cwtl
and
lcall
add
sub
and
adc
in
cwtl
mov
push
xchg
pop
mov
pop
stos
in
push
push
pop
add
subl
dec
fnsave
in
cmp
movsl
inc
insl
xchg
dec
roll
div
mov
dec
idivl
xor
add
addb
das
xor
inc
std
jle
data16
in
lcall
push
dec
mov
xor
xchg
mov
dec
hlt
stc
stos
pop
mov
jmp
test
add
fadds
mov
push
mov
mov
fidivrl
test
je
jecxz
push
jg
inc
xor
fnstsw
pop
sbb
or
pop
and
jo
and
fdivl
or
sub
xor
xchg
das
popf
or
and
adc
ss
jecxz,pn
cmp
ljmp
rol
push
pop
fnstcw
mov
roll
leave
pusha
les
and
fpatan
test
xchg
test
adc
mov
rorb
cmp
sub
sub
nop
mov
pop
mov
push
pop
lcall
fbstp
pop
or
fcmove
jle
shl
push
lds
subb
out
cmp
pop
mov
mov
xchg
xorb
aam
sbb
adc
das
out
out
std
cmp
push
mov
mov
sub
fs
fmuls
jnp
in
clc
int3
scas
movsb
inc
loop
mov
inc
cmpsl
out
ret
push
leave
ret
cwtl
sbb
outsl
push
into
jb
in
flds
dec
cmp
out
adcb
mov
loop
dec
pushf
adc
daa
add
push
shr
and
mov
mov
mov
jg
gs
lcall
sti
and
jmp
adc
iret
out
fwait
xor
aaa
or
popa
test
mov
mov
and
test
cmpsl
stc
fdivrl
sub
xchg
and
xor
inc
push
movsb
and
es
push
nop
inc
rcll
sbb
xchg
outsl
push
fadds
jns
insl
out
lock
fcomp
mov
push
and
or
arpl
dec
enter
lcall
jo
js
xchg
sub
ret
adc
mov
adc
rclb
jae
cs
jb
push
jmp
adc
sub
jge
loope
aam
fbld
xchg
jae
insb
repz
testb
adc
inc
push
mov
pop
mov
jbe
repnz
out
jge
mov
inc
push
incl
sbb
enter
or
dec
and
mov
dec
pop
sub
shr
mov
push
xchg
xor
pop
mov
mov
xchg
dec
push
cs
adc
negb
clc
jnp
mov
sub
jnp
es
push
mov
push
jno
dec
xor
scas
sahf
fistl
and
fs
jge
nop
inc
add
and
pop
push
addb
outsb
sub
out
push
data16
and
lods
insl
cli
test
push
pop
inc
xchg
test
jle
dec
ja
fdivr
dec
arpl
aas
inc
adc
xchg
inc
xchg
xchg
and
ret
addr16
push
push
pop
push
cli
fmuls
cmpsl
jb
lods
jae
sarl
lods
inc
cmp
pop
test
xchg
and
cltd
and
in
cmp
ljmp
cld
fs
movsl
add
jmp
and
out
mov
ja
cmp
adc
stos
or
je
shlb
movsb
dec
es
pop
movsl
enter
fidivrl
pop
aad
xchg
out
sub
pop
or
and
dec
sbb
jns
dec
sbb
and
subb
pop
push
dec
lods
push
loopne
or
cmp
adcb
test
adc
add
mov
push
inc
dec
fs
mov
inc
out
mov
push
mov
pop
mov
push
imul
sbb
cmp
loopne
lret
stc
icebp
aad
inc
jnp
aas
pop
pop
jge
xor
adc
imul
sub
add
xor
or
pop
sbb
jno
insb
xchg
push
mul
dec
mov
pcmpeqd
imul
mov
lds
or
lret
test
sbb
sbb
adc
pinsrw
cltd
push
adcl
fisttps
and
xchg
push
in
ds
mov
and
pop
cmc
lahf
xor
das
repnz
js
cmp
push
cmp
rclb
push
and
cmp
sbb
mov
and
cs
inc
mov
loopw
dec
fsubrs
data16
inc
pusha
mov
int
mov
mov
lea
jnp
jbe
ljmp
dec
adc
ja
xlat
mov
fmuls
sub
add
mov
lcall
std
cld
ss
pop
mov
xchg
movsb
mov
mov
aad
mov
inc
jp
mov
mov
and
mov
add
movsb
xchg
mov
mov
insb
int
popa
popa
mov
scas
dec
mov
and
pusha
inc
out
outsl
movsl
sub
mov
pop
mov
push
sub
loope
mov
cmp
and
sub
sbb
mov
push
insb
in
add
js
cmp
push
fisttpl
xchg
inc
adc
push
les
out
notb
push
push
push
repz
mov
mov
cmp
rorb
test
mov
mov
dec
and
mov
sbb
movsb
sahf
xchg
pop
xchg
lret
pushf
pop
push
flds
rolb
push
jns
dec
je
mov
and
lods
mov
mov
and
mov
pop
scas
dec
adc
jp
sbb
imul
mov
cmp
fdivrs
add
out
or
dec
outsb
or
das
add
daa
mov
and
test
pusha
jge
testl
es
lret
mov
stos
cmpb
or
les
mov
gs
mov
stos
adc
add
sub
scas
pop
jbe
aaa
iret
and
pop
dec
push
mov
push
lock
out
and
cmpsb
cmp
add
ja
cmp
pop
lahf
into
dec
and
mov
xchg
fucomi
add
in
mov
fcoms
fldl
and
inc
sahf
sbb
jno
jge
inc
test
jno
lahf
fwait
popf
stos
mov
das
xor
cmp
push
sub
movsl
inc
cmc
mov
xor
movsb
dec
pop
add
mov
push
cmp
xchg
add
das
data16
or
xor
sub
ret
hlt
jle
outsl
and
or
ficompl
and
mov
mov
cmc
lock
push
add
out
insb
ret
fs
dec
adc
jecxz
mov
outsl
and
mov
fst
mov
lods
push
mov
push
inc
into
into
cwtl
les
fsubl
push
mov
push
fadd
pusha
inc
aam
jnp
test
dec
adc
inc
cmp
ja
ror
stos
popf
jae
mov
movsl
mov
js
xchg
shrl
out
and
data16
lret
ret
jg
faddl
aaa
lods
fwait
in
les
ret
pusha
mov
jno
push
pop
or
lds
jecxz
cwtl
movsb
inc
adc
stos
lret
mov
mov
cmp
and
push
xchg
pop
jbe
fdivl
pop
xchg
sbb
mov
mov
imul
xor
xor
xchg
lock
bound
iret
mov
push
xchg
push
mov
bound
dec
sub
dec
movsb
add
repnz
sbb
out
pushf
push
loopne
ds
add
pop
faddp
jns
mov
xor
lods
dec
sub
call
xor
fmull
imul
int
sbb
mov
inc
movsl
cltd
bound
bound
pop
mov
rcrl
mov
sub
add
neg
hlt
push
pushf
cmp
cmp
and
test
iret
mov
fcoml
or
mov
pop
mov
repz
hlt
and
mov
jp
cmp
es
fsubs
lock
and
lcall
test
movsb
dec
pop
cmc
aas
push
push
mov
sub
iret
xchg
jns
inc
sub
mov
pop
data16
xchg
movsb
iret
adc
xchg
shr
xor
movsb
pop
xchg
sarb
push
sub
lcall
fndisi(8087
mov
arpl
insb
movsb
dec
cmpsl
pop
mov
sbb
movsl
iret
mov
fidivl
int3
sbb
jl
mov
dec
sub
xorl
lahf
sbb
cwtl
xlat
clc
push
push
in
int3
inc
inc
cmp
dec
xchg
sbb
and
sbb
sub
xchg
fs
scas
aam
mov
aam
into
addr16
out
adc
adc
sbb
and
aam
jns
and
stos
dec
or
gs
jnp
inc
mov
push
xchg
out
insb
dec
in
push
sahf
xlat
repnz
dec
addr16
mov
sub
in
icebp
sbb
mov
cmp
in
repnz
sti
into
gs
dec
fwait
and
dec
mov
or
outsb
and
test
adc
cli
fildll
mov
loop
jp
insb
mov
jg
addl
stos
mov
dec
jmp
push
outsb
push
movsl
cmp
add
ljmp
mov
pop
addl
fstl
jnp
cltd
pushf
lea
jl
xor
or
popf
scas
clc
enter
mov
hlt
lret
loopne
out
lcall
imul
into
loop
dec
adc
pop
or
inc
aam
cmp
imul
pusha
ds
lcall
dec
add
ficompl
scas
dec
jle
and
xor
xchg
or
inc
in
cwtl
inc
loope
xor
outsl
mov
inc
pop
fists
cmp
mov
mov
stos
cli
pusha
jne
xchg
sbb
aad
mov
mov
jo
in
mov
jge
insb
lods
pop
outsl
sub
aad
pop
lret
lds
and
cltd
jmp
es
adc
fildll
cs
dec
xor
das
push
or
sbb
es
aam
cmpsb
popa
cmp
popl
ret
mov
ret
inc
and
ds
push
or
ja
adc
mov
shrb
aaa
jnp
scas
xor
xchg
sahf
jmp
cmc
xchg
popa
push
inc
scas
xchg
lret
and
adc
mov
push
fmull
aaa
xor
add
xchg
push
roll
pop
int
out
or
inc
mov
fucomp
das
xchg
jno
add
scas
push
cmpsl
fwait
push
and
inc
sbb
sub
cs
xchg
pop
cmpsl
lcall
in
data16
stc
stc
lret
pushl
jno
data16
cmc
popf
xorb
fimull
in
sbb
sbb
cmp
iret
ja
dec
cwtl
movsb
lods
aad
push
mov
mul
rcrb
xchg
add
pop
je
lock
lcall
push
xor
lds
dec
jecxz
jmp
fs
xchg
leave
sbb
fcoml
loop
xchg
pop
cmc
mov
pop
xchg
aam
es
insb
mov
movsb
test
icebp
fadds
bound
daa
cld
jle
loop
insb
shrl
pop
pshufw
cltd
inc
cmp
or
mov
js
jge
rcr
in
mov
or
test
ret
scas
movb
call
jae
leave
cmp
cwtl
fnsave
mov
nop
ret
stos
fidivrl
lock
cli
lahf
or
imul
pop
movsb
inc
or
and
sbbb
out
es
imul
inc
push
je
sti
mov
movsl
call
aas
aaa
cmp
imul
dec
lds
jns
xor
adc
clc
adc
push
dec
and
jmp
aaa
dec
sarb
sahf
sub
out
ja
fsubr
mov
push
nop
lret
mov
dec
fldcw
dec
jmp
cmp
or
imul
stc
setg
pop
rolb
ret
xchg
mov
jo
sbbl
lds
mov
pop
adc
add
adc
insl
push
jnp
jecxz
incl
xor
stos
sbb
lret
mov
shlb
lret
add
sub
mov
add
adc
lret
mov
inc
or
jae
and
push
push
cwtl
jo
es
js
inc
and
mov
lret
call
repz
imul
cltd
or
xchg
aas
xor
mov
ficompl
xlat
cld
dec
lods
enter
clc
xchg
fldl
jbe
xlat
dec
mov
sub
push
push
in
rclb
pop
outsb
mov
pop
fidivrl
fldcw
xor
push
mov
jns
xchg
inc
and
or
mov
sub
mov
mov
sahf
ja
dec
das
xor
inc
push
sti
fistl
mov
fsubrs
fcompl
cs
push
paddusw
mov
push
movsb
xchg
xchg
cmp
xor
std
mov
das
jge
insl
cmpsl
and
xor
mov
lds
add
inc
nop
pusha
sahf
syscall
xor
addr16
out
popa
fs
ficoml
mov
lret
add
mov
js
loopne
fstpt
and
push
scas
imull
xor
or
out
xor
fs
addr16
lea
movsb
or
pushf
xchg
fwait
popa
in
sahf
sbbb
ja
test
xor
sub
testb
cli
popf
pusha
mov
repnz
les
jne
stos
or
adc
cwtl
add
fsubrl
add
jnp
lock
pop
xchg
or
and
pop
pop
sbb
cmp
sbbb
inc
cmp
es
fs
dec
ds
out
mov
xor
push
sbb
fisubs
out
pop
lahf
mov
test
mov
add
in
mov
sub
roll
pop
fnsave
in
scas
popa
pop
mov
test
cld
adcl
testb
xchg
ret
adc
mov
leave
fldt
sub
repz
out
das
rorl
ljmp
insb
push
js
fimuls
inc
js
lahf
and
pop
cmp
pop
mov
xlat
cmp
xchg
cmp
xchg
mov
or
std
stos
or
sbb
stc
cli
loopne
scas
push
fdivp
add
lods
push
sbbl
fdivs
add
lret
sarb
loop
pop
adc
nop
push
in
scas
cmp
aaa
decb
aas
lods
movsl
mov
inc
mov
jmp
jmp
xorl
imul
mov
out
sahf
stos
mov
cs
test
js
inc
mov
jo
ljmp
and
xor
add
xchg
enter
mov
adc
xchg
bnd
mov
loopne
pop
lret
xchg
mov
push
popf
fwait
cmp
pusha
ret
outsb
std
out
and
popa
pop
xor
bnd
mov
cmp
out
mov
lock
adc
insb
repnz
fs
jo
mov
sbb
sbbb
pop
push
icebp
mov
and
pop
test
mov
fwait
pop
mov
mov
sbb
loop
cmpsb
fimull
and
jb
sarb
insb
dec
rep
fbstp
adc
mov
es
shrl
das
fwait
jbe
ret
pop
lcall
mov
jb
in
lss
shll
dec
dec
leave
xchg
cmc
les
loopne
push
cld
sbb
cmc
sub
lahf
push
bound
test
sub
jle
or
or
adc
xlat
subb
je
push
cmp
stos
mov
aaa
jl
jmp
push
lea
ds
ficoml
loop
out
fadds
jno
mov
push
push
cmp
adc
xchg
insl
mov
cmc
push
fs
mov
lret
cmpsl
cmpsl
repz
popf
pop
ret
orb
cltd
fmuls
sub
adc
cmp
jle
cmpsl
lods
pop
cmp
pop
enter
sbb
shll
sub
test
icebp
rolb
mov
aam
fisttpl
notl
lods
repnz
inc
negb
dec
imul
divl
mov
xor
das
mov
ljmp
sub
aam
ret
lea
inc
imul
xorb
iret
or
xor
fstl
int
mov
daa
fsub
push
lds
jmp
dec
aam
test
push
inc
outsl
pop
scas
fs
hlt
push
aaa
push
rcr
cmp
push
enter
repz
push
xlat
cmp
add
loopne
shlb
leave
mov
adc
out
push
push
mov
and
fucomip
cmp
add
jge
or
aaa
mov
dec
cltd
lods
into
mov
lret
jg
fidivl
cmp
jo
mov
jae
sbb
jae
fistpll
sti
leave
stos
xchg
adc
imul
test
addr16
cld
mov
fdivrl
sub
xchg
xchg
rcrb
jg
test
cwtl
push
lret
jmp
leave
ds
sub
push
roll
aaa
push
in
mov
add
jo
pandn
imul
insb
adc
and
in
sub
push
enter
push
lods
cwtl
sub
adc
or
test
rcrb
das
sub
rcrl
scas
ficomps
sub
inc
out
mov
inc
fadds
insb
jbe
mov
insb
push
adc
out
popa
bound
add
pop
stos
das
imul
movsl
jno
mov
mov
test
das
sti
mov
mov
cmp
lea
aam
aam
nop
mov
cmp
into
mov
ret
jbe
cmp
enter
insl
iret
and
mov
fdivrl
fistl
test
dec
loopne
stos
cmp
ret
out
ss
add
push
dec
int3
stos
cmp
das
lahf
pop
repz
mov
int
stos
std
or
rcll
mov
pop
loopne
movsl
stc
into
lret
icebp
mov
dec
jbe
cmp
repz
fistpl
aaa
mov
xor
mov
add
xchg
shlb
test
inc
fisubrs
xor
jb
pop
fisubrl
and
push
jns
aas
and
aad
and
ja
cmc
mov
shrb
lret
aas
mov
jle
sti
in
adc
jle
mov
adcb
imul
cmp
fdivrl
pop
pop
jnp
mov
jo
test
pop
xor
call
inc
sub
mov
adc
repnz
hlt
sub
in
cmp
int
fs
pop
into
pop
decl
pop
dec
sbb
icebp
xchg
adc
lock
imul
pop
push
idivb
mov
xor
in
lcall
out
jle
push
mov
jp
push
scas
adc
mov
cmpsl
cs
cmp
inc
mov
dec
cld
cmpsb
in
pop
pushf
cmp
add
pop
jne
adc
push
cmp
out
inc
in
push
add
aas
out
mov
and
mov
cmp
rorb
dec
pop
stc
push
jmp
les
dec
jge
adc
aaa
add
popa
subb
pop
imul
xchg
gs
cmp
cli
and
cmpb
jecxz
cmp
sbb
cmpl
sbb
adc
rcrl
aam
dec
outsb
loope
jp
hlt
cmc
les
jbe
movsb
je
decb
inc
sub
adc
push
or
mov
int3
lock
push
xchg
mov
or
outsl
outsl
lret
lods
inc
ss
cmpsl
push
xchg
or
stos
int3
in
punpckhdq
jae
and
add
jg
mov
push
fdivl
sbb
cltd
ret
jle
repz
xorb
lret
fldcw
cmc
movsl
mov
sbb
xor
or
aad
add
dec
leave
loopne
repnz
fcmovnb
or
testl
aam
sbb
adc
lret
xlat
insb
cld
xchg
and
aam
iret
adcl
lret
inc
sarl
cmp
mov
insl
pop
add
dec
sbb
dec
push
gs
psubb
push
lahf
into
imul
movsl
cs
sub
mov
push
cli
push
mov
bound
add
mov
xor
push
lret
fwait
mov
stos
in
iret
add
sub
jns
scas
shr
jp
outsb
inc
insl
mov
repnz
dec
sti
stos
push
mov
jp
adc
pop
adc
sbb
sbb
daa
lods
mov
lahf
ficompl
cld
mov
test
outsl
xor
das
add
pop
dec
dec
lahf
dec
jo
daa
xchg
movsb
cli
fwait
das
and
xor
outsb
fs
mov
je
push
or
mov
ret
lock
mov
sbb
pop
jae
aaa
sbb
rclb
lods
popf
into
add
push
mov
cmp
jmp
mov
xchg
xor
inc
push
push
sbb
loope
sub
add
in
or
add
out
xor
cmp
or
jecxz
repnz
push
sbb
mov
push
inc
sar
dec
xlat
test
pop
outsb
xchg
movsl
aam
lock
push
or
dec
popa
test
mov
sub
sub
sbb
cmp
or
stc
aam
ret
ds
lret
lret
adc
or
shrl
pop
add
loope
mov
cld
cmp
mov
int3
mov
mov
sub
fnstcw
jnp
push
sbb
mov
mov
das
sbb
lock
sub
dec
test
xor
test
adc
sub
rorb
push
dec
fnstcw
pop
adc
jne
sub
push
adc
faddp
xchg
xor
cmp
mov
pop
in
push
fidivs
call
ljmp
test
ds
inc
jle
cwtl
inc
push
mov
xlat
shrb
dec
clc
mov
icebp
outsb
enter
ret
repz
test
xorl
push
sub
or
mov
fidivrs
push
std
popf
push
cmp
push
inc
mov
inc
pop
mov
pushf
popa
and
sbb
pop
sbb
cmc
inc
pop
adc
xchg
stc
lcall
push
pop
mov
ds
jns
js
clc
clc
add
sti
scas
mov
and
jae
in
pop
adc
push
mov
repnz
adc
loop
lcall
and
jne
jp
inc
jge
sbb
cli
add
adc
in
pop
mov
pop
adc
cmp
add
push
fs
sahf
insl
add
and
faddl
push
or
pop
stos
push
mov
inc
je
dec
mov
add
lahf
xor
dec
cltd
or
adc
repz
addr16
mov
sbb
sti
fwait
jmp
lods
and
sarl
mov
js
lret
aas
scas
jb
sbb
rcrb
std
and
das
lahf
in
mov
mov
in
jb
icebp
stos
daa
sbb
jns
dec
std
lods
frstor
mov
fsincos
ret
sbb
or
arpl
shl
pusha
out
pop
sub
ja
push
cmpb
hlt
movsl
shrb
push
mov
fimull
sti
mov
repnz
loopne
add
aaa
jno,pn
iret
mov
mov
push
jmp
push
xor
adc
jecxz
pop
push
dec
push
out
gs
inc
movsb
sub
xchg
icebp
mov
mov
cs
ss
mov
movsb
pop
in
gs
mov
mov
cmc
aam
std
ret
shll
inc
fsubrs
mov
and
or
adc
enter
mov
mov
es
dec
xor
cs
add
lret
in
or
test
adc
add
leave
inc
das
push
pop
ret
pop
pop
push
jp
cld
jb
mov
adc
addr16
push
inc
into
out
cmp
out
insb
sahf
dec
dec
dec
arpl
test
mov
je
sbb
inc
jp
mov
xchg
daa
sarb
inc
add
cmp
lcall
sahf
add
shlb
push
adc
mov
sti
push
mov
les
cld
scas
and
fmuls
arpl
dec
push
lea
inc
insl
adcl
dec
leave
incl
cmp
loop
popf
mov
stos
pop
adcl
jl
push
out
dec
shlb
mov
dec
imul
mov
and
add
jmp
call
dec
sub
jae
adc
int3
pop
and
fbld
enter
mov
push
xchg
sub
ja
popf
xchg
cmp
or
sub
shrl
push
jae
and
push
sub
dec
sbbl
es
outsl
push
jno
dec
scas
dec
and
sbb
roll
and
and
ret
orl
mov
push
add
pop
pop
mov
mov
inc
xchg
pop
fwait
adc
xor
jmp
mov
lahf
and
cmc
sub
shll
popf
or
js
lods
mov
dec
jl
ret
push
jge
push
arpl
dec
cmc
rcrb
mov
push
dec
push
jecxz
or
push
push
fwait
add
fistl
or
sub
out
mov
inc
push
loop
or
jecxz
jno
pop
and
ja
and
mov
sti
pop
or
add
pop
lods
pop
push
push
xorl
stos
fsubl
xchg
sub
hlt
jbe
mov
xchg
adc
fdivs
cmpsb
adc
andl
test
jge
pop
dec
loope
dec
lock
call
addr16
aad
mov
sub
cmpsb
divl
repnz
shlb
dec
cmp
pop
cli
xchg
ret
pop
dec
jnp
cs
lahf
test
arpl
es
push
ds
and
lret
mov
cmc
dec
popa
push
cmp
loope
divl
fdivl
mov
pop
adc
outsb
inc
movsl
push
aad
xor
repnz
fidivrs
xor
lock
test
aam
fucomi
fisttps
mov
sbb
pusha
arpl
sub
ret
mov
decl
loope
push
push
movsl
jg
data16
jns
mov
test
xor
xor
pop
outsl
stos
sub
test
jg
sub
mov
test
out
dec
fcoms
dec
addr16
mull
xchg
mov
and
jne
insb
mov
add
xchg
enter
shlb
aas
aad
rcr
sub
dec
sub
movsl
jg
out
inc
add
out
jle
xor
sbb
xchg
insl
addr16
cmp
jmp
jecxz
jge
push
lods
add
inc
or
leave
cltd
adc
fidivl
xchg
call
xor
adc
push
scas
negb
cli
xchg
mov
jl
xor
jmp
icebp
push
sub
sub
cmp
lret
mov
loop
push
mov
jns
lret
fadds
xor
xor
or
pushf
push
sub
js
mov
inc
cmpsl
or
movsw
adc
int3
cmc
mov
incb
jo
dec
pushf
cli
pusha
sti
bnd
loopne
cmpsb
rcl
stos
imul
xor
imul
adc
out
mov
aaa
and
je
pop
adc
in
fs
xchg
mov
sbb
push
movsb
ds
or
enter
pop
lret
repnz
jno
scas
aad
mov
or
fnsave
fdivrl
sti
xchg
inc
xchg
out
xor
stos
push
pop
add
lods
sub
mov
sbb
pop
mov
mov
inc
sub
rorl
orl
xor
dec
loop
mov
lret
jl
push
es
inc
dec
ret
addr16
add
or
xchg
add
jg
dec
pop
add
sub
cmc
lret
in
js
push
mov
movsb
ret
lods
fs
mov
jmp
xor
lret
sub
nop
xor
dec
jbe
dec
mov
or
pop
mov
js
aas
inc
test
mov
lock
add
shll
sbb
int3
loop
xor
cmpb
or
outsl
mov
sub
hlt
push
sub
add
cwtl
push
adc
inc
loopne
ljmp
or
cli
or
dec
shll
pop
xchg
xchg
js
adc
pushf
dec
jg
test
or
lock
jno
enter
cmp
sti
mov
mov
or
dec
mov
xchg
outsb
mov
push
mov
insb
mov
mov
int3
fldcw
push
mov
out
mov
jb
fwait
data16
out
xchg
mov
cwtl
xor
xchg
pop
fcomi
bound
insb
push
or
pop
push
pop
inc
insl
xchg
in
mov
fs
cmp
add
leave
lret
cltd
sbb
push
bound
xchg
arpl
cmc
mull
das
or
addr16
icebp
repnz
and
in
fsts
cmp
jne
cli
jle
cmp
xor
mull
xchg
or
jo
cmc
mov
dec
and
and
cli
mov
in
ret
test
adc
dec
sti
loope
roll
pop
and
roll
aam
das
dec
or
mov
hlt
fildl
push
sbb
adc
in
test
mov
stos
js
loop
xchg
adc
icebp
sarl
ror
cmp
mov
jbe
cltd
xor
and
js
arpl
or
aad
imull
push
popa
inc
mov
pop
or
fmull
mov
cmp
std
or
jge
adc
cmp
jmp
stos
and
cli
cld
out
ds
int
xor
imul
push
shlb
mov
movl
or
or
fmul
dec
mov
push
lds
ds
addr16
cld
add
or
xchg
nop
repz
dec
loop
outsb
push
xor
iret
mov
fcmovu
push
shll
ja
cmp
adc
imul
in
popa
test
sti
scas
notb
sbb
lahf
sbb
cwtl
repz
pushf
pop
or
pop
xchg
xchg
outsl
sub
xchg
and
add
les
aas
adc
int3
daa
test
ret
sub
sub
loopne
inc
dec
mov
and
ror
dec
jmp
sub
xchg
lss
and
data16
rcrb
sbb
insb
push
adc
or
std
out
push
pop
leave
scas
mov
insb
or
out
or
push
pop
xchg
clc
call
dec
mov
add
in
adc
xchg
jg
dec
mov
mov
aad
imul
pop
push
jg
jnp
insb
and
ret
pushf
lods
pop
nop
aas
cmp
xchg
mov
call
in
push
xor
pusha
adc
mov
mov
and
push
jo
xor
xor
push
inc
jge
mov
jne
mov
pop
sub
sub
or
mov
mov
shll
pop
jnp
fcos
push
xor
iret
xlat
daa
loop
mov
dec
dec
mov
test
into
daa
nop
xchg
icebp
das
cmpsb
jae
nop
xchg
shrb
popa
jmp
push
inc
xchg
fs
gs
push
rcrb
mov
xor
inc
sbbb
js
sub
xchg
mov
cmp
inc
mov
dec
push
js
jecxz
loopne
insl
or
push
and
out
scas
out
dec
or
xchg
arpl
ljmp
ljmp
sbb
test
inc
popa
mov
idivb
test
sti
jl
mov
mov
fidivl
pop
shlb
mov
js
sbb
xchg
rorl
fisubl
inc
and
aas
jle
icebp
mov
cmpsl
test
sub
mov
and
ficompl
cmc
aad
mov
stos
out
into
inc
push
inc
xchg
andl
xlat
or
add
xor
or
jnp
out
rolb
popf
std
mov
or
insb
rol
data16
ss
and
mov
xchg
dec
shrb
xor
cltd
mov
lods
lret
xchg
stos
out
cwtl
in
fwait
aad
enter
jo
fidivrs
jo
cli
fxch
mov
and
out
bound
and
xchg
push
adc
jge
pop
push
and
fwait
call
adc
xchg
inc
cmp
fistpll
sub
cmp
inc
ljmp
cmpsl
xor
dec
shl
and
cwtl
dec
and
mov
ror
dec
ror
mov
ss
jmp
scas
or
push
inc
pop
fidivrs
or
sti
fsts
stc
push
test
rcrl
ret
int
into
sub
call
mov
jno
inc
add
or
in
push
dec
cmp
mov
adc
shll
sub
jecxz
push
xor
dec
mov
sbb
xchg
push
cmpsl
test
lret
pop
in
mov
cltd
in
ret
jle
cs
push
stos
loope
or
cmpsl
jmp
sbb
outsb
xor
jb
out
lds
mov
inc
in
xchg
mov
pop
mov
dec
sbb
xchg
inc
mov
add
push
jnp
xchg
enter
ret
ret
stos
loopne
jae
ret
xor
or
addl
outsb
rclb
fidivs
out
inc
cltd
icebp
and
pop
sub
jecxz
push
into
push
loop
in
and
popa
orl
shrl
loopne
xor
mov
pop
jp
or
xchg
in
push
dec
fdivrp
dec
aas
call
xchg
movsb
inc
outsb
mov
call
fisubrl
in
rorl
pop
and
pushf
pop
cs
int3
sbb
lret
sub
xchg
call
sbb
adc
sub
lods
shl
push
sbb
leave
shld
sub
mov
jge
imul
int3
test
jmp
sbb
fimull
inc
sbb
xchg
mov
adc
sub
lret
popf
shrb
cs
jecxz
adc
xchg
clc
add
adc
pop
sub
mov
cmp
mov
dec
lds
xchg
repnz
ja
int
out
cmpsl
xchg
jl
adc
orb
inc
xlat
mov
push
out
imul
mov
insb
adc
jge
subl
xchg
hlt
pop
mov
enter
push
int
test
xchg
push
in
mov
pop
jne
sbb
inc
fs
fbld
pop
test
outsb
jo
add
cmp
sub
add
push
movsl
ds
mov
arpl
xchg
lods
sub
sbbb
ret
notl
jmp
or
mov
mov
int
mov
insb
dec
sub
xchg
push
xchg
push
cmpsb
sar
mov
and
mov
popf
imul
xchg
mov
out
aam
lret
out
dec
cmc
mov
cmp
imul
add
mov
fstp
lea
popa
jb
nop
adc
lcall
push
outsl
adc
stos
pop
ret
out
lea
sbb
mov
or
sti
push
das
mov
mov
popf
adc
mov
sbb
mov
popa
push
xor
pop
sub
pop
jge
test
cmp
addr16
inc
test
xor
movsb
xchg
cmpsl
lods
gs
or
cmp
push
push
jns
pop
xlat
sub
push
sub
or
xor
mov
stos
jle
cmpsl
push
mov
stos
xchg
jbe
cmp
shrb
fwait
mov
pop
pushf
cmp
fsubr
sub
add
mov
fs
pusha
mov
imul
in
jmp
adc
push
dec
mov
push
and
pop
ret
xchg
push
ret
cmpsl
adcl
sub
mov
push
mov
cld
or
insb
lahf
mov
loopne
and
in
loopne
pusha
inc
mov
mov
in
loopne
rcll
shrl
push
aad
fisubrs
xlat
rcrl
and
push
in
sahf
xlat
sub
in
sti
push
bswap
pop
xor
push
repnz
add
xor
bound
out
sti
js
dec
divl
and
mov
mov
imul
decb
cli
and
add
movsl
mov
xchg
inc
fsubr
leave
pop
cli
call
push
xor
inc
xchg
cld
pop
jp
ss
std
adc
xor
lret
ljmp
jb
imul
mov
movsb
add
xchg
dec
push
sub
push
jmp
push
cld
xchg
das
jae
test
pop
and
mov
adc
or
push
xorl
popf
leave
jbe
mov
mov
insl
gs
ja
mov
subl
lcall
pop
xchg
cmp
pop
aas
push
xchg
mov
fbstp
jo
insb
inc
push
and
mov
fstps
repz
rorb
sub
inc
rolb
cs
mull
bound
sub
jp
dec
push
inc
sbb
cld
pop
lret
xlat
addr16
aam
jl
js
jne
es
cli
and
cli
push
pop
loopne
aaa
ret
in
xchg
in
sub
ljmp
jge
cmp
rcll
ficomps
das
in
in
or
sbb
dec
or
clc
xchg
scas
push
fs
cwtl
pop
adc
sub
jbe
sub
inc
sahf
pop
mov
mov
xor
pop
imul
test
push
push
arpl
or
adc
xchg
pop
push
daa
ret
inc
ljmp
cmpsb
and
inc
sti
in
xchg
mov
cmp
lea
push
mov
cmp
fsubrl
fs
jno
aam
mov
pop
icebp
push
jmp
xchg
cs
mov
lcall
shll
mov
push
aam
xor
aaa
mov
adc
dec
xchg
adc
mov
scas
vcvtss2si
inc
sbb
arpl
lcall
push
stos
fs
fsubs
daa
and
push
into
mov
icebp
mov
xor
leave
pushf
add
pusha
or
test
fdivs
subb
and
lods
sub
scas
push
dec
mov
sbb
lea
setne
adc
fbstp
inc
dec
cltd
xor
mov
fcmove
sbb
rol
mov
cs
int3
jle
mov
mov
cmpsb
mov
or
scas
in
push
inc
add
sti
dec
and
sub
aad
sbb
mov
sbb
fs
jb
pop
or
xor
pop
insl
hlt
cmp
and
jae
pop
mov
xor
aaa
es
push
jmp
cmp
lahf
mov
mov
in
dec
cmpsl
fsts
xchg
dec
cmp
iret
fadds
pushf
cmpsb
mov
fwait
int
insl
mov
aam
xchg
popf
adc
shrl
push
cmpps
jno
lock
add
ja
pusha
dec
ss
mov
iret
in
sub
mov
xor
into
stos
sbb
aam
sbb
icebp
jne
push
insb
call
fadd
adc
push
in
jbe
mov
dec
cmp
mov
and
mov
int
push
insb
push
mov
aam
outsb
xchg
push
scas
outsl
xor
sub
jae
lcall
dec
mov
dec
fsub
push
push
int3
stc
jmp
jg
insb
or
popf
mov
sub
add
insl
addl
aad
fildl
mov
dec
push
mov
pop
shl
mov
push
lock
sbb
push
xchg
mov
in
mov
jmp
push
or
xchg
popa
inc
gs
mov
mov
ss
xor
scas
pop
icebp
mov
jbe
lret
neg
pop
lahf
sbb
xor
aas
pop
aas
getsec
daa
sub
cltd
mov
gs
jmp
in
dec
sbb
sbb
adc
mov
sub
add
jo
xlat
xchg
xchg
frstor
out
mov
mov
and
imul
xlat
adc
popf
jno
push
lods
jo
adc
test
loop
mov
sbb
nop
pop
and
push
fs
insl
sbb
dec
test
in
adc
scas
mov
outsl
iret
adcb
daa
in
sarl
out
mov
pop
jecxz
lret
xchg
rorb
sub
xchg
in
addl
dec
sub
lcall
jo
xor
arpl
mov
lock
shl
add
push
inc
mov
dec
movsl
scas
mov
in
rclb
cld
adc
jne
xchg
fstl
mov
pop
pushf
movsb
dec
and
add
sbbl
xchg
mov
xorl
push
or
cmpsl
aam
lock
cltd
and
arpl
push
jge
adc
jl
rcll
rorb
popf
and
sarb
pop
fistpl
adc
xor
mov
loope
lock
adc
xchg
stc
testl
add
add
cwtl
repz
sahf
dec
rcr
ficoml
mov
jecxz
out
dec
pushf
push
decl
shrb
or
insl
cld
dec
jbe
lock
cmp
neg
in
or
imul
sbb
insb
cmpsl
stc
adc
data16
ljmp
sub
dec
es
push
imul
out
enter
movl
jno
bound
mov
xchg
xlat
fldl2e
mov
in
inc
ffreep
divb
dec
das
push
or
mov
jecxz
jecxz
jg
movsb
dec
mov
xor
shrl
push
fs
push
xchg
cmp
ss
jmp
and
sub
sbb
add
adc
or
pop
mov
pop
and
inc
fcmovnb
or
mov
shll
test
jne
test
pop
xor
sub
push
adc
push
div
lahf
mov
dec
mov
loop
pushf
xchg
push
push
push
cmc
adc
mov
add
cli
jecxz
call
pop
and
cmp
arpl
fnstenv
repnz
les
repnz
pop
and
popa
mov
dec
jmp
adc
clc
movsb
xchg
inc
sti
pop
leave
inc
xchg
sbb
sub
push
movsb
xchg
mov
lods
orb
insl
adc
bound
mov
ja
sbb
inc
lcall
int3
jnp
loop
mov
push
cmp
mov
pop
in
pop
adc
clc
xor
xchg
nop
or
jne
into
push
xor
aad
xchg
fbld
jmp
out
xor
or
cmp
sbb
mov
insl
jno
insb
ret
push
mov
xchg
xor
lret
sbb
int
push
fwait
add
aad
and
repz
sbb
add
cmp
push
insl
add
neg
add
dec
in
std
aad
fdivl
pop
push
sub
lret
cld
pop
adc
lds
ja
dec
and
sub
out
daa
scas
push
lahf
dec
out
cmp
dec
and
jno
cmpsb
iret
or
mov
pop
dec
in
mov
sahf
jb
jnp
add
push
or
inc
cwtl
push
adc
adc
dec
xchg
dec
sbb
mov
and
dec
stc
insb
mov
int
hlt
es
in
test
faddl
inc
enter
in
and
fnsave
inc
push
xor
mov
test
fcoml
fs
and
loopne
sbb
ret
sub
jecxz
dec
mov
cwtl
mov
xchg
push
push
movsb
scas
cli
sbb
pop
scas
xor
or
xchg
mulb
mov
sub
inc
push
mov
imul
fmuls
mov
xchg
notb
sub
fstps
pop
push
subb
jp
scas
lahf
xor
cs
andb
pop
movsl
repnz
pushf
das
push
fwait
xor
es
jno
sbbl
mov
dec
adc
stos
sub
mov
xor
pop
out
push
fisubrl
repz
addr16
mov
ds
mov
and
push
shlb
test
imulb
cmc
aam
mov
mov
movsb
ja
pop
pop
xchg
shll
xor
mov
or
jmp
and
inc
sar
ss
push
ret
fldl
jmp
stc
aad
cmp
add
sbb
sbb
or
mov
sbb
push
pop
in
fdivl
out
jne
push
adc
or
jns
data16
in
popf
push
dec
stos
add
iret
mov
jle
or
mov
jnp
mov
sub
jae
sbb
mov
pop
or
daa
lret
mov
mov
js
call
mov
push
sbb
or
mov
lds
pop
sahf
xor
pushf
ljmp
xor
outsb
lret
and
or
bound
daa
aam
jmp
sbb
cmpsb
jo
cld
test
sbb
scas
jl
inc
push
cld
scas
mov
pop
adc
outsl
out
mov
adc
fistpll
xchg
adc
cli
mov
push
aad
popaw
mov
xchg
scas
popa
test
mov
fadd
pop
out
popa
sub
pop
sbb
andb
and
fldlg2
cld
jo
xor
jge
xor
xlat
pop
mov
or
lock
scas
mov
lea
mov
dec
mov
out
outsb
pop
cs
bndldx
out
movsb
push
jecxz
lret
jns
aaa
push
fidivl
mov
cld
fisttps
ja
dec
mov
mov
loope
rcll
fbstp
stos
insb
mov
aam
movsb
lcall
xchg
pop
shlb
lds
pop
dec
mov
loopne
push
xchg
pushf
push
sub
mov
inc
dec
rcl
hlt
lds
popf
dec
xor
popf
out
out
arpl
xchg
test
dec
ds
testl
push
or
negl
adc
mov
sub
inc
outsb
jge
jno
movsl
sbb
or
adc
mov
lret
mov
into
fildll
daa
shrb
hlt
add
stc
add
mov
ds
into
jecxz
imulb
sub
fsubp
mov
xlat
inc
push
cs
nop
test
sbb
mov
lcall
push
aam
push
add
sbbl
pop
jno
mov
sbbb
cmp
outsb
notb
and
test
inc
testl
lret
pop
xchg
jg
add
sti
dec
divl
dec
ror
push
into
cltd
push
mov
fnstsw
mov
push
push
add
rclb
mov
pop
out
aaa
pop
shl
in
int
sbb
dec
jge
inc
aad
outsl
mov
mov
int3
xchg
out
repz
rcll
cmp
pop
and
aad
mov
xchg
out
inc
insb
cmp
inc
mov
sbb
sub
clc
in
ds
push
inc
lods
lock
mov
call
adc
in
pop
mov
ret
and
mov
in
ret
out
fstpl
push
or
adc
xchg
repz
jmp
roll
ljmp
mov
repnz
es
lods
icebp
pop
popa
inc
fisttpl
sub
dec
xor
aas
inc
lahf
jnp
int
je
arpl
mov
lds
addr16
sbb
lret
outsb
insl
ret
xorl
je
addb
sub
pop
mov
mov
inc
or
out
dec
sub
flds
adc
movd
in
es
loope
cmp
into
test
jecxz
data16
mov
imul
pop
push
call
mov
add
ss
movsl
sbb
icebp
imul
xor
movsb
mov
outsb
aas
popa
push
cltd
nop
lea
cltd
out
test
push
ds
and
pop
das
icebp
mov
jge
xchg
mov
imul
cmp
mov
loopne
insb
fcoml
push
inc
sub
stos
inc
and
imul
push
jo
xchg
es
testl
sti
aas
sub
adc
mov
stos
cmove
xor
inc
inc
or
fstpt
ja
jae
cmpsl
jne
jecxz
les
push
in
mov
je
clc
mov
jne
xchg
sbb
mov
sahf
jno
mov
sahf
jle
pop
icebp
push
cmc
cmp
mov
and
push
pushf
cmc
push
sbb
insb
lock
lcall
rorb
hlt
loop
mov
aad
add
xchg
sub
jne
push
dec
lea
pop
lret
jge
push
and
out
xchg
hlt
sub
inc
add
fcomps
enter
adc
lret
inc
cwtl
test
sbb
add
shl
lds
lret
rolb
jno
std
test
jae
pop
daa
aas
jge
dec
roll
dec
mov
je
mov
sbb
xor
dec
dec
in
or
sub
adc
adc
push
testb
xor
inc
aam
aaa
in
or
jo
xlat
jae
mov
outsl
iret
lret
leave
out
sti
addr16
hlt
out
jg
aas
sahf
dec
lcall
mov
push
es
clc
jns
mov
cmp
mov
in
loopne
out
popa
xlat
xchg
fsubrp
mov
outsb
inc
sub
inc
ret
xor
outsb
loop
enter
fbstp
sub
mov
loope
mov
and
in
into
push
das
into
out
pusha
ss
adc
fwait
mov
aad
test
or
dec
jle
and
divb
fwait
ljmp
dec
loopne
sub
addr16
in
dec
mov
dec
int
adc
xor
cmp
xchg
mov
incl
add
repnz
jg
sub
inc
pop
dec
in
cmp
lcall
lret
mov
adc
negb
push
xchg
mov
aas
mov
ret
mov
jno
pusha
es
dec
push
aas
add
inc
sub
mov
push
jle
mov
mov
pop
cmp
std
in
repz
dec
mov
nop
inc
or
dec
movsl
xchg
loop
inc
add
sub
adc
adc
pop
xchg
fucomi
int
sbb
out
dec
mov
mov
nop
inc
inc
das
scas
pop
in
lods
rorb
dec
fstps
add
lret
movsb
inc
cmpsl
pop
xorl
xor
pop
mov
mov
insb
pushf
pusha
or
test
xchg
mov
pop
push
cmp
js
add
jno
not
dec
loope
leave
sbb
pop
xor
fcoms
je
shlb
cmp
or
int
push
orl
sbb
adc
mov
dec
je
cmc
sti
test
or
lods
rorl
xchg
lock
aas
mov
mov
cmc
sar
testb
push
les
and
cmp
jno
ljmp
jae
push
push
push
dec
xchg
out
cmp
lea
sbb
xchg
fadd
and
inc
jb
mov
dec
lea
xor
xor
lcall
sbb
cld
mov
dec
popf
popf
sbb
pop
mov
dec
roll
mov
test
mov
xor
ja
mov
jno
sub
addr16
jle
fsubrs
jmp
adc
je
test
subb
inc
movsb
cmp
and
mov
pushl
in
dec
aam
jns
jle
test
jmp
stc
icebp
in
scas
in
pop
cltd
inc
ljmp
xchg
jo
loop
push
push
out
inc
dec
cmp
mov
outsl
es
test
mov
insl
mov
lret
cmp
push
inc
cld
inc
mov
add
pop
into
mov
std
hlt
shll
xor
jmp
inc
repz
push
adc
dec
repz
jns
pusha
jp
xchg
test
mov
movsl
enter
bound
xor
and
fwait
jp
xor
out
dec
mov
call
cmpsb
xor
lds
je
int
cmp
or
fimuls
mov
inc
lods
and
sub
decl
add
cmpsl
lret
daa
inc
and
test
jae
inc
lret
gs
xchg
iret
test
cmp
inc
stos
add
jbe
sbb
idiv
ficompl
jmp
inc
pop
movb
xchg
call
sbb
idiv
lcall
lods
add
mov
jmp
ljmp
icebp
or
jbe
in
xchg
mov
mov
mov
or
ljmp
stos
dec
fnstcw
adc
lock
and
je,pt
mov
ja
cmp
mov
into
xchg
push
stc
mov
inc
sub
sub
inc
mov
test
gs
pop
add
aas
jno
or
push
jns
shlb
and
pushf
xchg
push
xchg
jg
mov
cmpsl
ret
insb
outsb
jb
xor
mov
mov
mov
cltd
arpl
popf
push
js
dec
xchg
hlt
divl
adc
lret
aad
jg
in
pop
mov
cltd
aas
mov
fs
insl
dec
mov
jbe
into
test
sbb
ljmp
call
xchg
call
xlat
jmp
push
pusha
xor
sub
movsb
ja
xor
dec
lock
push
pop
dec
mov
inc
hlt
test
aas
xor
ss
xor
and
pop
jnp
loop
add
inc
push
popl
jae
inc
inc
insl
jg
or
ljmp
lea
bound
lret
pop
fisttpll
and
shll
fwait
push
outsl
pop
clc
test
loope
pop
ret
and
jns
push
call
shl
inc
mov
cld
mov
cs
ja
test
shl
inc
or
into
ret
mov
sti
leave
xor
jnp
les
lret
mov
call
pushf
sbb
lahf
movsb
cltd
xchg
mov
loopne
loopne
incl
mov
shll
or
cmc
mov
das
hlt
test
adc
out
loope
dec
cmp
mov
push
cmpsb
add
les
andl
sbb
add
jnp
push
pop
jns
lea
adc
movsb
data16
xchg
adc
shll
enter
lcall
jecxz
push
sbb
aam
mov
das
imul
das
fs
fadds
fwait
mov
jbe
lahf
xchg
lsl
xor
cmp
jmp
test
adc
pop
fld
or
dec
adc
aas
enter
jno
pop
test
pushf
imul
mov
cmpsb
dec
xchg
or
xor
aad
mov
dec
int
adc
leave
lahf
xchg
fstl
and
xchg
dec
loopne
cmc
imul
cld
dec
sub
sbb
jbe
mov
sbb
stos
imul
add
sahf
outsb
inc
lods
call
mov
push
ja
call
imul
add
aam
pop
cmp
into
loopne
sbb
loope
lcall
xlat
xchg
jne
adc
mov
xor
pop
leave
scas
outsl
xor
push
pop
push
adc
call
adc
sub
sbb
aam
mov
mov
aaa
xor
cmp
jecxz
adc
cld
pop
outsb
in
arpl
shlb
enter
notl
repnz
nop
sbb
mov
cwtd
popf
push
gs
fstps
mov
add
out
mov
popa
fnstenv
in
cs
jmp
inc
popf
mov
mov
dec
pop
ret
dec
movsb
shrb
fildll
mov
sbb
fldenv
cmpsb
inc
enter
xchg
in
push
mov
mov
mov
inc
rolb
and
aad
jg
in
or
js
loopne
out
pop
dec
mov
test
mov
or
push
xor
mov
out
sbb
mov
sub
test
insl
and
pop
xchg
push
pop
xor
mov
dec
jb,pn
xchg
pop
in
adc
mov
mov
test
pusha
outsb
pop
push
add
fs
std
push
icebp
test
fcomps
or
andb
jbe
or
cmp
jnp
lods
mov
rolb
cmpsb
insl
call
adc
inc
mov
pop
das
or
add
lods
xchg
push
xchg
mov
in
out
xor
jmp
dec
and
mov
add
mov
jbe
pop
cmp
fs
iret
jne
or
hlt
mov
adc
int3
adc
movsl
xchg
inc
add
pop
cmp
fsubl
mov
xchg
ret
dec
pop
ret
or
push
pop
aaa
add
fdivr
mov
xchg
inc
mov
data16
into
lea
jp
jmp
aas
pop
sub
clc
cmp
ret
dec
popf
or
mov
add
dec
repnz
inc
hlt
icebp
mov
lods
rorb
aaa
pop
inc
mov
cwtl
shrl
dec
adc
pop
pushf
mov
outsl
int
add
leave
inc
arpl
jnp
pop
int
mov
inc
pusha
xor
aad
dec
or
insb
and
out
inc
jne
icebp
sbb
inc
bound
je
nop
xor
cmpsl
daa
and
or
fwait
xchg
sub
out
aam
fstpl
pusha
std
je
and
outsb
mov
sbb
imul
int3
rcrl
mov
push
ds
cmp
repnz
cmp
add
lea
ret
andl
push
xchg
addb
loope
loop
dec
adc
dec
sub
fisubrl
xchg
ret
stos
xor
inc
mov
and
mov
faddp
mov
dec
int3
dec
fcmovu
xchg
sbb
mov
std
imul
aad
iret
push
frstor
adc
sahf
lea
gs
inc
inc
add
repz
lret
push
push
push
movsb
jo
mov
daa
stos
jbe
cli
mov
pop
mov
inc
jbe
sub
adcl
pop
cwtl
mov
inc
and
sbb
frstor
mov
and
dec
xchg
pop
push
jae
cmpsb
mov
cmp
pop
and
mov
js
imul
xlat
stc
test
into
sbb
mov
jl
idivl
nop
push
loope
fmul
sub
jne
inc
mov
add
addb
sbb
mov
pushf
push
test
dec
push
popf
add
js
fisttpl
and
mov
push
push
dec
popf
mov
movsb
xor
push
es
mov
addb
shlb
adc
addl
push
das
sbb
enter
lea
mov
ret
cmpsl
ljmp
mov
movlps
fsubrs
pop
cld
adcl
push
sbb
sti
add
pushf
and
rcrl
push
insb
push
in
arpl
inc
loope
mov
loope
mov
ret
jmp
test
jl
pop
movsb
lods
fwait
cltd
adc
mov
cmp
pushf
jno
jmp
fsub
iret
and
xor
and
bswap
xor
xor
je
fmuls
add
adc
push
jb
dec
dec
jl
lahf
scas
jnp
xchg
cltd
cmpsl
sqrtps
push
xor
mov
push
push
aad
push
inc
jecxz
add
xor
cmp
xor
inc
fisttpll
add
add
daa
and
and
fwait
push
call
xchg
xor
sub
js
inc
xchg
in
sub
mov
scas
ss
ja
dec
mov
cmp
data16
lds
mov
push
bound
inc
test
notb
jno
ljmp
fldenv
inc
lods
lahf
jns
shl
sbb
mov
and
jne
rcrb
mov
addb
inc
out
fs
adc
into
cmp
pop
xchg
dec
fmuls
xor
pushf
test
inc
aaa
nop
and
cli
ja
iret
xor
in
jbe
push
mov
outsl
push
mov
pusha
cld
imul
mov
xchg
sarl
xchg
xchg
push
mov
mov
and
das
xor
xor
xor
jmp
cmp
xor
jb
aad
xchg
cmp
mov
dec
enter
sbb
or
mov
push
and
loop
imul
shll
mov
jns
icebp
push
lahf
popa
ret
dec
fs
in
and
push
aam
test
jge
mov
das
and
aas
jmp
inc
mov
xlat
jmp
or
mov
pop
insb
subb
dec
daa
adc
imul
inc
xlat
ffree
cmp
sbb
or
add
loope
rcrl
xchg
mov
pop
je
insb
mov
xor
adc
fldln2
les
subb
ss
nop
fcompl
cwtl
test
inc
roll
fucomp
sti
sbb
out
shlb
imul
jbe
sbb
stc
dec
lods
jmp
out
pop
leave
and
mov
lcall
inc
je
mov
mov
dec
pop
jl
outsl
dec
call
arpl
inc
jns
outsl
pusha
add
lahf
jb
icebp
test
mov
or
and
dec
push
ret
subb
aas
out
ds
dec
repnz
repz
insb
js
daa
lea
adc
pop
call
push
in
ss
sbb
out
ljmp
sbb
subl
subb
in
in
out
dec
loop
icebp
mov
test
into
xorl
aam
out
fidivl
xchg
xchg
or
pmullw
cmp
jg
add
flds
sar
stos
pop
push
mov
xchg
fwait
jmp
mov
das
jne
int3
pop
mov
cwtl
fstpt
out
add
xchg
pop
push
std
jo
cmpsb
clc
mov
cs
jne
cmpb
add
or
fisubrl
cld
mov
and
pop
dec
mov
mov
pop
pushf
mov
fstpt
addr16
jmp
mov
adc
adc
icebp
pop
adc
dec
mov
outsl
inc
sbb
cmp
pop
pop
filds
movswl
gs
xchg
pushf
mov
dec
mov
ss
repnz
test
mov
fimull
mov
mov
inc
daa
xlat
into
fisubrs
xchg
jae
pop
mov
out
fcomps
pop
xchg
or
dec
iret
sbb
inc
lret
in
add
stc
inc
je
or
hlt
mov
lret
dec
lahf
sub
fidivl
mov
mov
add
cmpsl
imul
adc
neg
inc
pop
add
push
push
adc
push
xchg
push
ljmp
fwait
aad
jo
imulb
push
rcl
xor
loop
imul
or
cmc
mov
in
ljmp
mov
lret
andb
xchg
mov
inc
out
mov
push
fdivl
jecxz
mov
sti
pop
sbb
lret
push
push
out
xchg
arpl
out
inc
mov
fistpll
mov
mov
jno
repz
fmuls
mov
add
push
and
call
in
rorb
icebp
pop
mov
mov
popf
push
pop
xchg
xor
ficomps
and
test
push
jo
sub
hlt
and
mov
adc
leave
js
ret
push
pop
mulb
or
rorl
pop
cmp
mov
aas
push
inc
cmp
add
lds
push
lods
mov
pop
jge
fistpl
inc
mov
xchg
cmp
insb
aas
inc
add
pop
lds
adc
adcb
jle
mov
jg
mov
sbb
sbb
sbb
or
pop
jo
or
jecxz
jmp
mov
mov
or
jge,pn
jg
cmp
clc
adc
inc
fstl
push
sub
insb
rcrb
imul
xchg
push
pop
pop
je
mov
inc
xchg
pop
gs
lret
inc
aad
call
sub
into
inc
leave
imul
data16
and
hlt
mov
stos
ret
pop
xchg
xchg
pop
addl
xor
pop
sub
subl
xchg
fcmovnu
cmp
xchg
inc
filds
andl
sub
push
sbb
inc
out
sub
mov
sub
cmpsl
cmp
lcall
jno
jg
jmp
sub
mov
sbb
int
rorl
rorl
out
jge
push
and
push
jne
aas
dec
outsb
in
mov
cmp
xor
cmpsl
lock
test
adc
insb
sub
jmp
cltd
mov
outsb
or
pop
cli
bswap
xchg
or
xchg
out
ret
mov
jmp
lods
out
jne
inc
xor
out
imul
stos
mov
decl
pushf
cli
cmc
dec
jno
bnd
xchg
push
jno
and
jbe
jno
xor
adc
lahf
enter
imul
insl
and
add
dec
sub
mov
jge
les
lret
jno
mov
je
popa
stc
test
mov
test
leave
loopne
cmp
or
cmp
stos
stc
das
cltd
jmp
aas
ret
leave
pop
xchg
test
sbb
fdivp
jl
subl
out
insb
xchg
loopne
mov
pop
sbb
loopne
aad
adc
fimull
aad
jb
nop
sub
pop
fsubrl
jle
pop
push
cmpsl
popf
add
add
jbe
fcomi
xchg
subl
jle
cli
xor
out
inc
and
mov
mov
mov
sub
adc
into
sbb
add
push
push
cmpsl
mov
repnz
cmpsb
in
js
les
stos
das
loope
push
push
int3
inc
dec
mov
push
dec
sbb
mov
lcall
mov
jo
cmpsb
mov
or
lock
lea
xchg
xchg
adc
add
out
push
pop
das
insl
inc
jge
fimull
dec
or
stos
cmp
mov
adc
fidivrl
dec
rcll
jle
xchg
jnp
dec
mov
in
test
cs
xchg
pop
pop
mov
into
sbb
add
mov
xor
push
fidivs
rclb
jnp
hlt
push
push
cmpsb
push
fadd
es
pop
xorl
sbb
repnz
jmp
cwtl
mov
les
sbb
insb
subl
add
mov
add
and
sub
jge
xchg
data16
pop
and
frstor
shrl
push
and
test
mov
mov
cmp
cltd
out
dec
pop
push
and
imul
cmp
mov
mov
mov
dec
and
hlt
jne
outsb
mov
sub
mov
fxch
mov
loope
mov
lret
add
push
daa
mov
jmp
fs
in
xchg
xchg
xor
andl
push
add
adc
stos
cmp
mov
movsl
sahf
mov
stos
pop
mov
mov
cmp
int
dec
jg
out
jmp
add
nop
pop
das
xchg
jne
enter
shl
sub
bound
or
xlat
pop
xor
jp
jl
push
in
dec
shrb
xchg
lods
sarb
jnp
je
jge
aad
sbb
mov
adc
call
xchg
sbb
xor
push
enter
icebp
adc
push
aam
xor
or
and
sbb
push
adc
mov
ret
cwtl
sub
movsb
dec
mov
divb
adc
mov
or
add
lds
pushf
or
cwtl
lahf
add
push
mov
cmp
pop
in
in
cmp
push
das
test
inc
pop
inc
sub
sahf
pop
scas
dec
mov
movsb
pop
repnz
test
insl
mov
mov
xor
push
xor
inc
out
cmp
xchg
add
scas
leave
adc
cmp
in
add
loopne
pushf
pop
or
sub
dec
xchg
or
outsb
mov
int3
pop
push
in
xor
or
cmp
dec
stos
push
loopne
and
cmpsl
jmp
shrb
jnp
xchg
clc
xor
out
push
aad
pop
add
mov
add
add
lds
inc
aaa
pop
sbb
or
push
hlt
int
jno
scas
inc
mov
std
push
ret
movsl
scas
int
or
mov
add
pop
cmp
or
es
mov
add
dec
cmpsl
loop
pushf
add
mov
ljmp
pop
addr16
mov
or
pop
cwtl
mov
or
daa
test
and
scas
orl
jl
mov
loop
pop
lahf
xchg
push
push
add
js
xorl
cwtl
fs
fucomip
jo
mov
lret
cmp
mov
scas
mov
sbb
rol
pop
fwait
mov
push
xchg
mov
add
divl
jg
cmp
out
cltd
dec
sbb
and
jp
sub
inc
xor
jle
jne
xlat
pop
in
push
scas
add
into
ljmp
jmp
jnp
out
adc
iret
cld
mov
divl
divb
ret
lods
adc
shlb
int3
and
js
jle
add
push
jp
pop
and
jae
jae
scas
inc
popa
push
stos
jo
ret
mov
in
xor
push
sbb
iret
outsl
push
addr16
adc
sbb
jecxz
cltd
mov
jnp
xchg
add
jns
pop
mov
and
inc
mov
xchg
xchg
pop
dec
jns
shrb
stos
jno
popf
xchg
jae
andl
test
push
xor
icebp
mov
xchg
sar
into
cmp
sub
cmpsl
pop
jno
pop
add
sbb
push
stc
sahf
push
push
addl
leave
cmp
and
clc
mov
sbb
jg
dec
cmp
xlat
ret
repz
jg
inc
cmp
pop
and
divl
fcos
aad
dec
out
xor
jl
scas
mov
packssdw
cmp
sub
addr16
mov
cmpsb
out
incb
jg
pop
pop
and
test
ja
jmp
loopne
andl
xchg
adc
daa
jmp
mov
in
push
aam
jmp
addb
push
aaa
cld
fidivrl
test
cld
test
add
jmp
shlb
jle
mov
inc
test
ds
push
cs
hlt
sbb
xor
stc
push
push
gs
push
mov
mov
sbb
nop
je
es
push
push
scas
into
pop
jo
rep
lock
fidivs
in
bound
lahf
xor
pop
push
lahf
in
pushf
enter
stos
add
lods
pop
test
mov
iret
xchg
pop
repnz
add
sbb
add
xchg
jmp
adc
loopne
test
sub
jnp
enter
cmpsl
imul
pop
repz
test
jne
jg
sbb
ss
fs
and
cmc
or
icebp
in
mov
subb
fimuls
sbb
shl
pop
pop
inc
lahf
popf
in
add
and
xchg
loopne
fstpt
fdivl
adc
xlat
and
and
add
cmpsl
hlt
out
out
negl
push
adc
xor
or
mov
jg
xchg
lods
pop
inc
jae
jo
jmp
lret
sub
insb
mulb
ficomps
shlb
sbb
xor
rcll
sti
fnstsw
insl
push
pop
push
clc
push
jle
add
fcomps
inc
gs
dec
or
fstpt
loop
or
inc
xchg
and
aam
scas
pop
iret
jg
xor
mov
sbb
xchg
mov
sub
ret
in
cmp
dec
jnp
bound
insl
pop
xorl
or
cltd
int
jge
xchg
jmp
das
sub
mov
and
add
sbb
jmp
clc
rcrl
xor
out
xchg
out
or
push
and
push
orb
stos
int
jb
push
mov
sbb
add
shlb
push
sub
mov
jne
mov
sti
mov
adc
je
xor
stos
scas
pusha
mov
inc
movsl
movsl
jge
gs
shrl
sbb
mov
push
sub
xchg
add
mov
or
xchg
ffreep
ret
xchg
xor
fdivs
mov
in
mov
jle
pusha
clc
jl
dec
pop
cmp
nop
or
sub
enter
test
adc
add
movsl
fwait
push
popf
dec
adc
stos
and
adc
andb
pop
dec
lock
xchg
jecxz
mov
aad
jmp
dec
in
pop
and
xor
push
or
adc
cs
stc
xchg
cmpsl
cmp
push
jmp
mov
adc
push
in
popa
outsb
inc
xchg
mov
lea
xchg
xchg
adc
rorl
mov
dec
sub
push
ret
into
out
xlat
inc
mov
fwait
xlat
addr16
dec
es
outsl
test
or
sti
push
pop
xor
mov
mov
mov
into
scas
push
or
out
call
add
inc
cwtl
add
add
das
imul
outsl
cltd
sbb
into
std
push
and
ljmp
push
push
inc
mov
outsb
gs
cmc
sub
test
imul
inc
pop
iret
jns
mov
cmpsb
cmp
dec
das
bnd
lods
js
push
enter
inc
add
cmpb
scas
mov
out
mov
mov
inc
dec
pushf
out
sbb
test
jne
jns
and
cwtl
sbb
dec
fmuls
mov
jg
dec
repnz
nop
xlat
and
add
pop
movsb
stos
aam
addr16
movsb
or
aaa
and
sbb
out
inc
rorb
push
inc
sbb
call
mov
shll
pop
jl
aaa
arpl
lds
repz
ret
js
ds
pushf
dec
roll
fwait
leave
cli
mov
cwtd
adc
sbb
cmpsl
popf
into
mov
rcll
add
test
lds
fcompl
cli
in
movsl
and
inc
mov
jae
nopl
jmp
sub
in
dec
or
fwait
leave
cmp
mov
dec
xchg
push
in
add
icebp
jno
sub
fmull
adc
scas
loop
sbb
pop
jp
pop
add
pop
or
fisubl
pop
lods
xchg
dec
pop
push
sub
aad
pop
std
jb
xor
mov
jmp
cs
push
rcrb
scas
out
or
sbb
and
xchg
xchg
repz
sbb
rcrl
shll
fwait
mov
int3
das
mov
pop
adc
test
pop
pop
xchg
cltd
sbb
icebp
bound
mov
test
mov
test
pop
inc
bound
mov
sbb
mov
out
ret
inc
and
not
imul
adc
xlat
mov
cmp
inc
pop
cmp
mov
inc
dec
lahf
or
test
push
popa
add
xchg
adc
in
ljmp
and
addr16
cmp
sbb
movsb
popa
push
lock
xchg
or
repnz
dec
and
in
ds
inc
inc
daa
stos
fnstcw
dec
mov
aaa
div
cmp
aaa
fwait
mov
jns
and
fldl
cmp
ror
adc
scas
cltd
cmpsb
fcmovu
negb
popa
adc
xchg
call
xchg
in
ficomps
add
inc
inc
cmp
fidivrl
cmp
sub
mov
mov
ret
jl
rcll
shl
imul
mov
imul
shll
push
mov
outsl
insl
mov
iret
mov
pop
push
lea
xor
out
mov
sbb
ss
ss
lods
scas
outsl
or
rcrl
jns
lea
jg
xchg
add
jle
movsl
xchg
cltd
mov
xchg
inc
insl
mov
loopne
mov
mov
fisubs
std
push
js
sbb
add
jg
adc
mov
sbb
pop
mov
mov
leave
pusha
addb
insb
fisttps
sub
jmp
push
inc
sub
lods
xchg
adc
out
push
scas
out
sbb
data16
sahf
loopne,pt
dec
add
in
sub
pop
xchg
dec
ret
clc
cmpsl
aaa
xor
mov
loop
adc
pop
sti
and
mov
mov
inc
mov
or
pop
inc
cmc
imul
dec
aas
cmpsb
push
jne
mov
xlat
movsb
push
push
push
daa
xchg
lods
pop
sub
and
iret
xlat
push
pusha
add
push
testl
xchg
dec
into
test
negb
xchg
shll
pop
es
jb
andb
sub
cmp
mov
iret
xchg
int
aam
mov
mov
repz
mov
mov
mov
fsub
cmp
jmp
jnp
dec
inc
test
jnp
push
jle
hlt
pop
sbb
xor
adc
mov
shrb
cmp
pop
idiv
fs
add
pushf
pop
xor
loope
jmp
adc
roll
loopne
es
pop
enter
dec
push
fs
or
lcall
mov
push
jecxz
inc
add
push
out
jns
in
jnp
or
pop
pop
push
movsl
or
lcall
mov
xor
push
dec
test
push
daa
loop
xorb
mov
jne
cs
or
stc
lods
clc
out
mov
insb
dec
icebp
fwait
inc
sub
mov
lahf
leave
pcmpgtw
push
popa
ret
mov
push
mov
out
lods
repnz
setb
sbb
mov
inc
test
jns
mov
fstpl
pop
dec
sub
std
dec
sbb
lret
cmpsl
lods
negl
pusha
sbb
dec
in
mov
bound
push
iret
adc
add
xor
add
mov
popa
xor
jle
insb
adc
jl
and
in
aaa
pop
jge
push
mov
xchg
jne
into
data16
push
push
cmp
push
lcall
test
pushf
test
shrl
stos
ds
shll
sbb
insb
movsb
sub
xchg
and
sub
clc
sbb
xchg
jl
push
fwait
push
xchg
scas
aaa
fimull
out
adc
iret
outsb
hlt
or
mov
lods
inc
test
mov
aas
cwtl
push
mov
pop
mov
pop
and
mov
xchg
fsubrp
mov
aaa
jae
dec
sarl
scas
stos
mov
xchg
xor
sub
push
arpl
cmp
xchg
fucomp
in
nop
jno
dec
insb
xor
lods
sbb
popa
stos
cmp
jle
pop
pusha
aas
dec
mov
adc
sbb
stos
aad
stos
fisubrs
aaa
pop
push
vmulss
mov
pop
and
jge
cs
cmp
dec
pushf
and
test
cmp
daa
mov
pop
and
push
mov
filds
addr16
andb
ror
les
mov
or
mov
xchg
nop
bound
out
jno
ja
or
pop
mov
outsl
jmp
sub
mov
das
daa
ds
or
jb
cmp
sbb
sbb
xor
and
pop
push
out
scas
fstps
mov
push
push
jecxz
cmp
sub
lock
inc
iret
loop
out
add
jo
cmp
jmp
movsl
inc
nop
cmp
xor
fidivrs
jns
iret
add
jne
push
scas
ftst
jmp
mov
push
das
movsb
xchg
test
and
ds
push
add
mov
popl
je
xorb
test
pop
mov
mov
leave
xchg
mov
addb
sub
in
ret
setno
mov
mov
inc
dec
mov
sbb
shlb
ret
rep
addr16
leave
mov
ret
mov
pop
fs
lods
jnp
into
xchg
cmc
aam
lods
imul
xor
adc
cmp
or
push
adc
jl
popa
jmp
mov
xchg
cmp
jb
mov
inc
pop
cmp
clc
sub
push
pop
pop
or
dec
sbb
mov
cmp
cli
lahf
lret
out
sub
inc
popa
out
sbb
iret
cmpsb
cmpsb
insl
xor
mov
mov
loopne
ret
imul
mov
cmpsb
pop
jnp
fdivs
ficompl
imul
mov
xchg
lret
test
jle
adc
mov
dec
dec
and
or
in
cli
adc
or
inc
inc
iret
lds
addb
cmp
or
mov
dec
mov
pop
je
mov
adc
fisttpl
icebp
push
sbb
mov
out
imul
lods
stc
test
xor
fwait
push
and
add
inc
mov
loop
xor
push
or
push
aas
ljmp
loop
outsb
fwait
psrlq
ljmp
add
or
mov
pushw
dec
lods
push
iret
outsb
mov
pop
fnstenv
cmp
mov
arpl
adc
cli
lahf
outsl
dec
sahf
bound
or
ljmp
pop
mov
cmp
aam
add
mov
dec
insb
sub
aas
pop
jnp
mov
add
stos
daa
loope
rorb
cmp
mov
and
cs
sti
sub
and
pop
add
stos
jae
js
fcmovnb
out
jl
ret
xchg
pop
sbb
xor
arpl
test
push
jae
mov
xor
cmp
divl
sbbl
orb
dec
jb
adc
push
or
addr16
repz
sbb
fildl
xchg
xor
xchg
lods
xor
lock
xchg
rolb
sti
pop
add
lea
popa
mov
sbb
mov
sbb
sub
and
xor
jmp
xor
bound
inc
orl
in
subw
dec
dec
lds
mov
lods
imulb
mov
das
cmp
punpckhwd
fcomps
popf
jecxz
jle
mov
mov
loop
arpl
mov
test
xchg
jns
movsl
push
imul
daa
aad
xor
sbb
sahf
push
out
push
mov
pushf
js
and
inc
out
cli
repz
inc
add
mov
dec
daa
jne
adc
movsb
sub
dec
or
stos
xor
inc
xorb
fistps
in
cmp
pop
pop
je
int3
jns
xor
imul
mov
jae
push
scas
dec
lcall
adc
movsl
inc
mov
mov
mov
or
rdtsc
out
ds
testb
fiadds
cmp
push
jb
stos
ja
and
jp
adc
jg
xor
pop
aas
imul
rolb
call
mov
xchg
icebp
movsl
cmpb
in
sbb
mov
dec
jnp
cmp
or
pusha
stos
mov
jle
sub
mov
inc
sbb
dec
mov
out
int3
iret
jge
mov
js
das
lea
pop
shll
xor
leave
shl
cld
stos
and
ret
mov
mov
jmp
dec
pop
orl
loope
jmp
filds
push
fnsave
pop
subl
mov
gs
inc
adc
aaa
push
sar
add
je
ja
in
inc
pop
pop
bound
icebp
js
jge
aad
mov
test
movb
jl
in
pop
xchg
fwait
jnp
ss
mov
jg
pusha
xchg
sub
push
or
inc
popa
fsubl
mov
lahf
cmpsb
in
ds
inc
sbb
sub
inc
pop
sbb
xor
mov
or
outsb
xchg
cmc
sbb
sahf
mov
add
sbb
lahf
pop
pushf
sarb
inc
inc
pop
jle
fcoms
mov
mov
ss
rcrl
xchg
or
dec
sub
mov
add
inc
mov
insl
sar
sub
mov
stos
mov
jnp
inc
jne
fisttps
mov
xchg
push
cli
mov
repnz
ja
jbe
add
inc
call
xor
shll
nop
int3
jno
jmp
fildl
movsl
dec
imul
in
cmp
mov
add
add
or
sarl
daa
and
lea
sub
xor
mov
lock
add
imul
test
jmp
cmp
sbb
xchg
out
int
imul
sub
int3
andl
jg
and
dec
xchg
js
push
cmp
jmp
xchg
fsubrl
popf
repnz
repz
les
add
lock
mov
cmpsl
test
gs
cld
gs
aam
ss
loope
fsubl
je
out
push
push
jle
lea
jo
cmp
mov
cmp
mov
mov
dec
aad
sbb
gs
loope
sub
fnstcw
mov
dec
xchg
test
in
ds
hlt
push
call
je
sahf
jge
std
fwait
jecxz
push
push
testl
sub
push
xor
adc
adc
push
inc
test
sarb
sbb
mov
sbb
and
adc
lahf
adc
or
sbb
mov
jge
and
xor
inc
cmovne
aas
lods
inc
push
push
mov
dec
add
inc
int3
add
push
lahf
loop
icebp
hlt
gs
and
dec
push
in
inc
jnp
pushl
fadds
dec
fnstenv
and
and
mov
sbb
mov
cmpb
nop
xchg
rorl
jns
inc
sub
adc
inc
dec
add
std
rorl
iret
adc
jp
jle
add
sti
dec
xor
loope
call
pop
nop
mov
pop
cmp
inc
pop
jbe
pop
pop
scas
inc
xchg
out
loopne
push
inc
push
xchg
jp
ja
stos
bound
mov
enter
loop
dec
jns
jns
jns
and
add
mov
mov
repz
orl
jo
cmc
mov
fs
stos
popf
push
mov
dec
mov
mov
insl
push
daa
imul
cltd
fsubr
scas
test
mov
outsl
sbb
cmp
es
lods
ret
lahf
cmpsl
aam
push
js
adc
xchg
faddl
pop
loopne
dec
xchg
imul
jo
enter
out
mov
push
mov
fstl
shl
in
and
pop
adc
xchg
lods
sbb
and
ja
movsl
sbb
mov
adc
mov
dec
add
xor
mov
nop
push
adc
cmp
pop
xchg
pop
aad
mov
aad
aas
xchg
ja
aaa
and
lret
pop
imul
push
add
ret
idivl
subb
nop
xor
pushl
stos
std
mov
push
mov
dec
mov
push
dec
out
mov
add
popf
jp
icebp
and
sub
mov
pusha
clc
dec
fwait
test
pop
adc
mov
or
cltd
push
push
pop
jns
hlt
in
loop
fdiv
push
jp
incb
dec
xchg
or
outsb
jns
call
mov
lds
cwtl
movsl
icebp
int3
add
jnp
cltd
enter
icebp
aas
aam
sbb
push
mov
clc
or
loop
in
add
jmp
jae
dec
lcall
jg
sub
pop
sub
fsubrl
std
in
mov
sahf
inc
xor
bound
and
and
push
ds
xchg
ss
int3
fistl
ja
fistl
push
xor
out
mov
fisubs
sbb
xor
or
adc
mov
testb
aam
rcr
sbb
icebp
stc
or
mov
add
sub
gs
sbb
insb
flds
les
adc
ds
mov
pop
rcrl
sbb
in
inc
es
dec
mov
fcmove
test
pop
cmpsb
jbe
outsb
jnp
adc
and
lods
outsb
mov
jecxz
out
jo
stos
xchg
test
pop
sarl
shrb
sbb
lds
rorl
xchg
int3
sbb
stos
sbb
aas
inc
test
lret
jnp
push
inc
das
cltd
pop
ljmp
lahf
or
add
inc
pop
push
mov
dec
jbe
out
rorb
inc
dec
inc
jp
jl
jmp
fwait
mov
aaa
test
lcall
dec
orl
and
clc
add
mov
adc
and
jb
fsubrs
sahf
adc
insb
daa
or
xor
cmpb
pop
js
cld
iret
push
movsl
add
sbb
mov
addr16
xor
jecxz
mov
stc
pop
mov
push
fsubrl
add
mov
jae
and
fadd
jg
dec
data16
cmp
xchg
fsubrs
ja
xor
imul
cmp
lods
and
popf
test
sti
jg
test
dec
lds
lret
xchg
testl
jge
fisubrs
leave
add
xchg
inc
outsl
mov
xchg
das
sahf
mov
push
gs
adcb
mov
arpl
inc
cltd
aaa
faddl
pop
and
inc
xor
nop
jno
jecxz
or
and
in
lahf
scas
cmp
icebp
fs
cmp
mov
inc
adc
xchg
mov
mov
cs
insl
and
cltd
iret
add
mov
out
cltd
push
loopne
scas
mov
clc
enter
js
out
les
dec
and
jo
sbb
inc
loopne
sub
adc
mov
in
int
pushf
ret
add
jne
dec
mov
sub
inc
rcll
loopne
pop
mov
mov
lret
std
sub
in
xchg
mov
jno
fld
enter
in
cmp
and
insb
andl
nop
add
adc
sub
repz
outsb
pop
jp
leave
xchg
nop
and
push
and
aas
cmp
sub
xchg
in
inc
xchg
and
ret
subb
mov
into
sub
adcb
mov
mov
adc
and
and
ret
movsl
bound
pop
in
xchg
jns
data16
add
pop
add
out
ret
push
dec
push
es
out
lock
test
adc
clc
add
jmp
arpl
inc
push
stos
cld
jo
pop
or
or
les
aaa
aam
rcrb
xchg
cmp
jle
cmp
xchg
loopne
data16
and
sbb
mov
xor
sbb
movsl
popf
sti
into
sub
fcoms
add
xor
mov
push
pushf
mov
fistpl
and
inc
inc
loop
in
sbb
popa
int3
pushf
mov
pop
addr16
test
pop
fmull
in
cltd
mov
push
mov
mov
dec
adc
cmpsl
xchg
fld
sbb
loopne
jno
push
add
inc
jecxz
cld
leave
cs
je
dec
pop
cmp
pop
jb
loopne
push
cmp
dec
loopne
add
fdivrs
xchg
and
enter
cmp
ljmp
jle
push
out
pushf
rolb
cmpsb
mov
packsswb
lret
adc
popa
cmp
mov
cmpsl
fcomip
mov
xor
ret
repz
leave
popf
fmul
flds
outsb
jo
and
mov
jg
pop
pop
xchg
inc
ret
lret
int3
adc
and
and
sti
mov
lds
cli
fxch
das
sub
sub
inc
cmp
and
xchg
inc
je
cs
dec
jle
sbbl
xchg
dec
rcrb
and
cmpsl
xchg
xor
mov
jecxz
dec
pop
sub
jle
imull
fwait
pop
add
adc
add
or
outsb
sbb
sub
mov
or
bound
jle
repnz
enter
inc
leave
inc
bound
add
nop
adc
push
and
outsl
insl
aaa
xchg
sbb
xor
add
fmuls
in
push
std
aam
scas
aad
mov
aad
xchg
imul
outsb
stc
imul
leave
shl
test
cmc
add
cmpsb
fsubr
mov
lds
mov
rorl
xchg
xor
jmp
xor
xchg
inc
or
inc
in
pop
push
jb
add
cmp
mov
mov
sub
push
movsw
out
inc
mov
push
push
dec
push
das
dec
in
cltd
mov
adc
or
add
aam
sbb
mov
jae
flds
push
outsl
sti
movsb
cs
inc
dec
icebp
mov
ss
ss
ret
dec
std
hlt
and
in
push
or
mov
outsl
hlt
out
imul
inc
or
push
push
mov
xchg
and
push
adc
iret
cs
cwtl
imul
xor
sbb
lahf
in
xor
and
setns
inc
pop
testl
dec
mov
mov
mov
out
fcmovne
out
mov
imul
stos
jb
popf
fucomi
test
sub
rcl
fildll
mov
int3
in
dec
js
pusha
icebp
sbb
ds
ja
fnsave
aad
inc
stos
push
xchg
push
ss
cmp
ljmp
pop
test
in
adcb
in
pusha
jb
add
xchg
inc
cmc
add
push
inc
or
andb
add
xor
icebp
push
push
mov
push
loop
fs
mov
fists
cmp
cmp
dec
out
add
push
loop
repnz
sbb
repz
test
xlat
incb
fisttpl
inc
into
std
push
or
orb
lahf
mov
fidivrl
lds
mov
aaa
ret
cwtl
jb
cmp
scas
cmp
xchg
mov
shrl
dec
xor
xchg
outsb
movsl
mov
mov
pop
xor
mov
test
jae
in
sbb
aam
sahf
add
shrb
xor
or
cmp
cmp
adc
mov
lods
data16
scas
cmp
lret
or
outsl
jae
push
push
mov
dec
jp
dec
repz
fs
mov
sbb
lds
sbb
ret
cmp
ja
and
in
pop
sub
jge
mov
xor
sahf
nop
test
mov
movsl
push
pop
and
xor
jo
out
sbb
in
inc
inc
sarl
cli
cltd
push
or
hlt
icebp
inc
scas
adc
into
sbb
jmp
mov
sub
aam
int
loope
cmp
movsl
hlt
cltd
adc
adc
sahf
imul
pop
ss
shlb
fidivrl
ljmp
jb
jae
dec
repnz
jo
xor
jo
inc
sub
lods
rcl
jge
lods
jne
pushf
lcall
bound
jmp
xorl
add
out
adc
hlt
xor
and
jecxz
jp
dec
sub
jae
dec
cmc
sbb
inc
insb
mov
mov
cmpsb
xchg
pop
mov
scas
pop
inc
adc
out
mov
adc
mov
adc
fisttps
mov
in
arpl
mov
js
add
or
or
and
dec
sbb
jne
fiaddl
add
pop
mov
jecxz
sbb
mov
cmp
and
or
jge
jmp
stc
jp
insb
call
clc
std
add
push
ret
bound
arpl
aam
int3
xchg
mov
or
push
adc
xchg
pop
shufps
loop
inc
insb
xchg
mov
mov
adc
and
pop
stos
push
mov
addl
add
es
test
stos
mov
jp
cmp
cmp
and
pop
cld
fistl
jb
test
dec
in
sub
sub
inc
dec
pop
repz
sbb
lahf
sbb
inc
test
jo
arpl
movsb
ss
aas
inc
pop
imul
loopne
daa
jns
add
ljmp
or
cmpsl
bound
daa
lock
aas
mov
dec
push
out
jbe
mov
shr
ret
enter
xor
sbb
je,pt
push
sbb
test
sbb
and
or
jp
sti
mov
pop
or
mov
mov
inc
add
push
or
js
jns
jmp
cmpsl
dec
rcrl
shll
dec
xchg
jb
sbb
xor
cmp
stc
mov
aam
sbb
xor
lret
nop
cmp
mov
mov
mov
inc
fiadds
pop
sub
out
addb
int
jg
push
fwait
jb
cld
inc
pop
mov
mov
cmp
mov
je
cmp
mov
cwtl
jnp
xor
inc
sbb
cli
stos
movsb
js
add
sahf
ret
rcll
sbb
xchg
std
fnsave
mov
xor
stc
cmp
add
jmp
push
pop
cmc
mov
sar
orb
mov
repz
push
push
inc
inc
cmc
imul
test
push
cld
out
std
hlt
nop
mov
incl
fidivs
or
inc
mov
pop
lret
je
lds
vmovntps
cmp
pop
sub
or
jbe
lds
inc
lods
dec
loop
divb
xor
in
enter
adc
adc
sahf
mov
out
fldt
adc
add
pop
push
mov
dec
out
test
test
scas
add
mov
stc
mov
fucom
cmpsl
lods
iret
push
pop
mov
andl
adc
in
or
insl
or
test
pusha
and
mov
ret
cs
out
js
xlat
inc
test
push
fists
ljmp
mov
fimuls
pop
mov
lcall
pushf
adc
lods
mov
int3
pusha
arpl
sub
movsb
dec
cltd
popf
pop
push
push
jecxz
pop
dec
loop
mov
push
hlt
idivb
add
xor
les
outsl
push
lods
cli
push
adc
xchg
sbb
fisubrl
lahf
sub
pop
and
mov
mov
push
and
cmp
inc
dec
adc
mov
add
aam
adc
iret
lcall
loope
movsb
mov
push
pop
or
push
or
enter
mov
les
pop
repz
push
test
data16
daa
mov
mov
aam
lret
popf
or
and
jge
push
jmp
mov
sub
out
lods
push
cltd
or
sar
test
push
mov
jo
lret
data16
lods
insl
inc
jge
jae
mull
mov
test
aas
xchg
testl
fcmovbe
add
cmp
in
xor
call
mov
stos
flds
out
inc
cmpsb
mov
bound
inc
lcall
ret
add
in
sub
dec
pop
into
mov
adc
mov
adc
adc
mov
ljmp
sbb
and
jns
push
cmc
jp
inc
sbb
add
mov
lock
push
insl
mov
fbld
inc
in
rcrb
sub
inc
jb
pop
mov
and
or
in
and
xor
addb
idivb
xor
or
jno
and
repz
jb
mov
jg
lcallw
lds
cmp
inc
pop
insb
or
jp
pop
jbe
jae
mov
stos
add
int
cmp
push
out
arpl
lcallw
sbb
outsb
inc
jecxz
jne
test
dec
sbb
out
and
mov
aas
mov
mov
pusha
test
faddp
lret
mov
lret
push
sbb
scas
cltd
incl
loop
sbb
mov
sbb
std
jle
iret
sub
addr16
into
stc
cmp
fwait
cmp
adc
mov
out
orps
out
dec
test
call
pushf
xchg
in
cmc
inc
cmp
push
dec
cmc
cmp
lea
xor
lret
sub
or
rol
xor
xor
push
inc
pop
imul
pop
insl
enter
les
stos
test
mov
pop
pop
jmp
lahf
mov
stos
clc
cmp
mov
mov
fs
int3
fcompl
jmp
push
push
push
scas
jo
or
repz
xchg
outsl
push
dec
mov
cmpsl
mov
scas
lahf
mov
inc
arpl
mov
add
jle
clc
dec
mov
cmc
aas
xchg
push
rcrl
pushl
inc
mov
cli
cmc
jle
shrb
data16
stc
out
adc
cmpsl
test
test
aam
addr16
or
push
ds
loop
fisubs
lahf
jbe
mov
inc
outsl
imul
lea
lds
and
bnd
cmpsl
cmpb
and
cmp
sbb
pop
hlt
sbb
incl
pop
lock
pop
dec
in
and
add
push
scas
adc
repz
dec
mov
fdecstp
test
pop
out
push
pop
hlt
mov
mov
scas
mov
loope
xchg
jecxz
adc
rcrl
outsl
rcrb
andl
jp
adc
or
cmp
repnz
xchg
popa
adc
int3
call
ret
xor
shlb
sbb
in
movsl
in
in
push
mov
jecxz
push
cltd
inc
lock
rcrb
nop
cli
sbb
cmp
movl
add
push
jne
sbb
ficomps
mov
iret
jne
cmp
pushf
pop
lds
dec
lcall
mov
ss
push
fldcw
out
mov
lods
out
sbb
jge
xchg
jae
into
cli
fists
push
test
lds
lcall
xchg
cmpsb
pushf
inc
out
pop
jnp
popf
xor
stc
andb
iret
jnp
daa
push
mov
mov
addr16
bound
repnz
xlat
repnz
imul
sarb
insl
xchg
adc
pop
or
dec
pop
es
mov
cmp
cs
xor
xchg
sbb
adc
add
andl
pusha
pop
mov
lds
inc
ja
std
test
fisttpl
add
xchg
pop
into
fistpl
enter
xchg
int3
icebp
dec
and
cmp
adc
loope
inc
cmc
and
cmc
stc
ja
jae
lea
jmp
lea
inc
jl
fadd
stos
rcrl
sbb
xlat
cmp
fldenv
sahf
pop
cli
sarb
sbb
mov
xchg
test
test
cmpsb
movsl
ret
add
inc
sbb
or
fistps
out
jae
movsl
jae
repnz
je
mov
mov
cmp
inc
sbb
lea
test
out
pop
enter
pop
insb
insb
int3
es
mov
inc
add
inc
sub
pop
xchg
std
mov
leave
es
iret
push
in
test
mov
lods
into
sub
pop
sarb
add
lds
mov
ja
and
inc
sarb
push
repz
cmp
pop
and
test
sub
xor
mov
ret
jbe
mov
out
popf
cmp
pop
icebp
mov
sbb
add
mov
mov
fimuls
sahf
mov
loop
xchg
jno
insb
add
insb
sbb
xor
lock
adc
push
out
adc
fwait
arpl
xchg
adc
stc
in
sbb
mov
jge
iret
insb
xchg
dec
add
xor
adcb
add
dec
and
xor
pushf
pop
in
sub
or
dec
jo
daa
jns
aas
adc
clc
ljmp
push
adc
movsl
test
fucomi
ds
daa
sbb
sub
in
jns
and
lods
adc
mov
and
mov
mov
dec
dec
or
lret
jge
sub
stc
popa
hlt
or
rolb
xchg
or
and
mov
sahf
inc
or
fsubs
dec
inc
mov
in
add
shlb
xchg
test
stos
out
out
insl
loopnew
add
add
jl
sarb
mov
xor
in
lret
cmp
mov
jbe
push
inc
cmc
push
js
lods
sbb
fidivs
nop
ds
xor
jb
movsl
push
adc
mov
push
ss
jmp
imul
fs
xlat
subb
mov
dec
shlb
lcall
jl
xchg
add
push
fsts
push
mov
mov
sub
shrb
or
cmpsb
fisttpll
icebp
in
enter
cmp
lret
xor
inc
lock
clc
mov
pop
add
ficompl
push
cmp
rsm
sub
xchg
pop
lods
mov
jecxz
divb
dec
mov
dec
js
push
jl
sbb
popa
cmp
mov
sbb
add
aas
xor
mov
loopne
dec
loope
and
inc
lret
je
mov
add
rorl
push
inc
inc
inc
jp
and
xor
dec
fnstcw
sarl
lods
roll
mov
mov
mov
adc
push
pop
lods
hlt
push
subl
loop
dec
sub
mov
add
lds
lret
xchg
ja
mov
idivb
add
test
fwait
xchg
cmp
mov
sbb
stos
pop
dec
adcb
jecxz
adc
jmp
jne
sub
add
movsl
popf
xlat
pop
or
jecxz
or
jmp
xor
adc
jbe
iret
iret
mov
inc
cli
pop
ret
insl
mov
sbb
dec
sbb
sub
jle
loopne
aaa
adc
imul
sub
sbb
add
mov
gs
and
lods
and
mov
out
pop
and
or
es
or
inc
gs
cmp
into
stos
js
push
mov
sub
dec
adc
ficoms
sub
pop
dec
and
arpl
push
mov
outsl
cld
mov
mov
pop
sbb
jecxz
push
movsl
pop
mov
lock
mov
arpl
mov
sub
js
xor
adc
xor
push
and
add
es
sbb
cmpsl
or
inc
mov
jns
or
out
ret
aad
ds
js
das
loopne
stos
xchg
mov
in
push
mov
lret
or
outsl
fstpt
jg
xchg
dec
stc
lcall
lock
in
xchg
add
sahf
xorb
repz
push
push
add
ret
mov
jle
cmp
pop
jbe
xor
jne
inc
mov
cmp
mov
int3
mov
jno
jo
mov
mov
lahf
jg
cmpsl
outsl
out
mov
aam
inc
mov
inc
rorb
aam
rorb
lret
movsb
imul
mov
jo
mov
movsb
ss
or
adc
xor
xchg
stos
loopne
xchg
ja
jo
jns
push
lock
add
nop
idivb
push
das
inc
cld
or
mov
lds
mov
daa
cmp
test
imul
push
push
push
push
cli
add
fmull
xlat
cld
pusha
ds
and
adc
jmp
adc
add
push
pop
int3
movb
or
aam
xchg
mov
inc
mov
push
mov
hlt
test
push
mov
xchg
adc
and
lahf
dec
pop
push
icebp
mov
cmp
shll
enter
iret
aam
in
sbb
lds
test
and
or
jp
push
arpl
mov
pop
and
jo
and
push
push
mov
push
nop
lods
mov
hlt
xchg
lcall
lret
adc
das
pop
cmpsl
jbe
add
out
imul
enter
add
dec
jl
shl
push
call
pop
inc
lds
negb
lahf
inc
iret
hlt
out
mov
xor
push
mov
fstps
icebp
jecxz
decb
and
push
ljmp
mov
outsl
sbb
inc
icebp
lcall
inc
fs
lret
clc
mov
lret
dec
cmc
push
xchg
mov
add
pushf
inc
in
stc
sub
dec
jbe
movq
push
shll
push
cmp
in
jl
add
jo
or
push
call
cmpsl
mov
insb
mov
xchg
lret
sub
scas
xchg
fst
pop
cltd
cmc
dec
lret
test
dec
push
pop
movb
adc
ficomps
scas
sbb
xchg
sub
fstps
enter
lods
mov
fs
xor
mov
or
lret
test
mov
xor
sahf
pop
lret
jmp
mov
iret
mov
push
mov
test
test
pop
inc
shll
and
pmullw
das
outsb
add
add
push
repnz
jnp
test
movsl
jge
imul
notb
push
mov
movsl
bound
xor
inc
clc
cmpl
stos
ret
loope
ret
push
mov
mov
sub
cmp
leave
xor
mov
fidivs
push
add
mov
orb
cmp
mov
sti
push
ljmp
dec
and
pop
push
dec
arpl
clc
mov
cmp
in
sub
jae
cmp
and
test
lock
mov
cmp
cvtpi2ps
jno
in
xor
test
push
pop
jbe
bound
xchg
loopne
lea
xchg
jecxz
scas
insl
xchg
xlat
in
mov
push
jb
push
lods
mov
xchg
and
jae
sub
lea
jg
fcoms
movsl
dec
mov
mov
fldenv
xchg
inc
hlt
inc
stc
mov
dec
xchg
call
cs
mov
mov
pop
data16
mov
imul
sbb
mov
cmpsl
js
movsl
out
popa
ret
imul
xchg
push
adc
xor
mov
test
and
jno
outsb
sbb
lret
mov
gs
clc
adc
sbb
xchg
mov
mov
xor
mov
xchg
xchg
in
int
test
daa
aas
xor
add
push
mov
and
and
mov
leave
hlt
cmp
jl
sbb
cs
das
out
and
push
fwait
ja
lods
xorb
sub
pop
iretw
xchg
cs
inc
lret
or
or
mov
mov
in
mov
out
push
and
nopl
jg
js
cmc
adc
pop
into
aas
cwtl
fnstenv
xchg
inc
sbb
and
arpl
aaa
xchg
dec
ficompl
fwait
clc
push
mov
cli
push
add
divl
push
push
sub
repz
cmp
rcl
add
xlat
and
pop
xchg
addl
sbb
jmp
orl
mov
movsl
popa
xchg
sbb
push
popf
inc
out
jecxz
mov
dec
jg
mov
jae
xchg
imul
mov
inc
sbb
out
mov
scas
rcrb
dec
xor
popa
popf
out
cmpsb
push
push
inc
pop
test
mov
mov
add
cmpb
inc
sti
xlat
decl
and
sti
and
pop
adc
cwtl
pop
lea
dec
mov
es
jo
sarl
cmp
out
cld
adc
or
jmp
test
sahf
hlt
sub
jp
sub
mov
xor
les
insb
out
ljmp
or
dec
sahf
jge
xor
add
lret
and
fcoms
sub
inc
pop
jle
mov
mov
mov
lods
lret
mov
dec
mov
lea
int3
mov
or
fstpl
adc
ss
xor
sbb
shll
inc
jbe
cmp
and
xchg
or
sbb
cmp
xchg
in
cwtl
xchg
adc
or
cmp
push
roll
aad
insl
shl
pop
mov
lods
ds
lret
out
mov
adc
arpl
dec
aas
dec
dec
pusha
sbb
xchg
push
lods
in
xor
negb
stos
iret
jge
mov
and
test
xor
aad
adc
stos
xchg
cmp
push
mov
cmp
repnz
les
js
and
sbb
mov
sbb
fcmovnbe
pop
cmp
in
push
movsb
inc
jl,pn
pop
imul
inc
push
xchg
out
test
inc
jo
mov
push
into
in
loopne
bound
decb
xchg
movsb
fisubrs
or
cltd
cmp
and
inc
push
xchg
insl
lea
ljmp
add
sub
jbe
stos
pop
popf
cmc
fsts
fcoml
sub
cmp
and
cmp
sub
in
xchg
aas
lahf
mov
mov
shll
jmp
andl
int
jo
mov
stc
stc
leave
add
cmp
jo
cmpsl
mov
jne
xchg
out
mov
imul
popf
pop
loop
mov
cmp
pusha
fwait
and
mov
int
jle
sbb
cltd
push
add
stc
test
mov
icebp
push
push
mov
rclb
cltd
outsb
aad
mov
inc
out
cmp
movsl
xor
sti
das
lcall
or
xor
stos
mov
fsubr
insb
shl
std
clc
rcl
imul
add
leave
inc
arpl
notb
aam
ret
xor
and
jo
fadds
fldenv
stos
inc
pop
rcll
aad
outsb
xor
sub
inc
add
ret
cmp
lret
and
int3
adc
dec
je
enter
push
sbb
pop
pop
and
inc
add
jp
cltd
cmp
test
in
int
jae
out
repnz
ret
popa
fidivl
jb
fnsave
rcr
lret
xchg
repz
pop
jge
scas
shl
sub
cmp
loop
cwtl
test
loop
or
and
adcl
cmpsl
mov
stos
ljmp
in
jl
jne
xchg
test
mov
xor
push
push
push
jbe
aam
xor
sbb
loopne
fisubrl
sbb
out
cs
cmp
rclb
mov
sti
mov
mov
sahf
inc
and
mov
jns
loop
xor
pop
bound
loopne
iret
repz
repz
sub
jns
xlat
scas
in
rolb
pop
jl
inc
xchg
popf
lret
mov
enter
add
inc
fcomps
inc
iret
hlt
add
je
adc
jecxz
dec
pop
scas
aaa
add
xchg
xor
into
xor
daa
leave
xlat
pop
mov
push
imul
push
ss
adc
pop
inc
push
dec
mov
pop
sarl
mov
inc
xchg
inc
outsl
outsl
and
and
adc
fldt
mov
and
push
lret
mov
push
xchg
inc
xor
popf
push
pushf
test
mov
pop
imul
adc
xchg
jns
add
iret
push
subb
outsb
cmp
mov
ret
cmp
leavew
int
push
stos
sahf
or
and
lret
add
push
sbb
mulb
daa
arpl
add
into
xchg
inc
lods
cs
adc
xlat
popf
xor
notb
mov
or
cli
popa
lds
xchg
jp
pop
mov
sbb
push
shrl
cmpsl
sar
mov
mov
jo
gs
xor
sbb
mov
mov
sti
test
cmp
mov
mov
in
aam
pop
mov
fildll
xchg
xorl
xchg
push
mov
addr16
xor
mov
in
mov
fnstenv
push
mov
sarb
loopne
std
inc
pushf
sub
mov
fadds
test
imul
xor
jmp
lock
test
xchg
fisubs
push
loopne
jae
into
out
pop
xor
adc
xchg
pop
push
cmpsl
popf
imulb
push
sbb
ss
adc
mov
inc
pop
lret
out
xor
and
jecxz
push
jo
dec
cwtl
fcomp
jg
add
add
push
cwtl
dec
addb
iret
mov
aaa
push
icebp
jecxz
and
cmp
idivb
sub
push
out
mov
cmp
adc
jne
xchg
daa
outsb
imul
jge
fidivrs
pop
movsl
or
jnp
scas
std
adc
xlat
pop
or
cmp
inc
mov
xchg
incl
push
cli
aaa
lret
sub
pop
jle
clc
mov
and
loop
jp
hlt
out
jmp
push
loopne
cmp
sub
xchg
ljmp
mov
lahf
mov
dec
jnp
pusha
pop
cmpsb
scas
aas
lahf
inc
pop
outsl
add
scas
and
jmp
and
xchg
or
fnstcw
fisubrl
mov
fcmovne
mov
and
lods
adc
js
outsl
in
inc
mov
cwtl
or
sub
inc
sti
push
or
jno
notb
push
icebp
cmpsb
add
fldt
ljmp
xlat
mov
ret
jge
or
or
aam
aam
xchg
in
xor
jl
jo
movsb
add
cmpsb
mov
pop
and
cmp
and
xchg
push
sbbl
dec
daa
imul
mov
in
out
mov
jne
fnstcw
mov
addr16
jmp
cmp
and
test
popf
cmc
jae
push
ljmp
fidivs
ds
push
xchg
adc
fldl
push
arpl
lahf
cwtl
xchg
int3
inc
fwait
jb
mov
mov
pop
ljmp
in
mov
xchg
fs
xchg
subb
or
pop
out
sub
jb
pop
aam
push
pop
daa
mov
sub
scas
sbb
data16
and
jae
cmp
dec
cmp
je
enter
jle
call
mov
sbb
cli
push
iret
in
in
shrb
inc
aaa
in
adc
shr
sub
jp
aad
in
mov
popf
sbb
dec
adc
push
out
aaa
orl
mov
call
mov
xchg
jnp
inc
xchg
push
fiadds
xor
mov
lahf
in
jge
pop
mov
pop
imul
adc
fdiv
daa
lret
outsb
or
push
jbe
push
ret
in
call
adc
mov
mov
xchg
out
jns
fnstsw
adc
and
inc
jge
pop
shll
mov
jl,pt
jge
mov
cwtl
das
pop
or
pop
int
negb
inc
push
shll
out
pop
hlt
out
fucomip
adc
cld
or
push
push
or
jecxz
adcb
fldenv
sti
sub
fisttps
mov
xor
add
xchg
and
mov
pop
nop
aad
hlt
jge
test
mov
popl
xor
pop
push
fst
jle
arpl
ljmp
sbb
fildl
inc
dec
dec
sub
lahf
mov
push
mov
mov
push
xchg
push
cmp
or
es
data16
mov
lcall
or
push
push
add
fdivr
inc
add
add
js
jnp
adc
jnp
test
sar
xchg
mov
dec
icebp
fs
rorb
jo
xchg
xlat
in
or
mov
lea
jb
mov
mov
add
jmp
adc
jnp
mov
cmp
lret
vpacksswb
fs
add
push
fnstsw
jns
xorb
or
notl
sub
jg
push
jmp
shrl
pop
adc
dec
mov
mov
sbb
ljmp
xor
insb
inc
clc
pop
inc
dec
jle
add
ljmp
mov
mov
xchg
xor
iret
aas
mov
push
adc
ret
jecxz
cmp
xor
or
notb
dec
jle
cmc
xlat
push
push
std
xlat
call
and
std
inc
pop
mov
aaa
xchg
test
std
pop
push
or
cmp
push
outsb
out
add
movsb
mov
ja
cmp
mov
stc
mov
mov
adc
pop
arpl
push
ss
pop
test
sbb
add
jg
xor
mov
jle
and
mov
inc
push
stos
sbb
xor
and
or
push
inc
lret
add
cmpsb
add
cmc
push
sub
fwait
mov
mov
add
test
icebp
push
push
push
inc
cmp
in
dec
xor
dec
adc
shrl
scas
rorl
push
lock
ljmp
dec
rcrb
lds
aad
roll
pop
outsl
sbbb
addl
mov
xor
push
aam
mov
xor
ret
xchg
je
xchg
jecxz
mov
xor
jp
mov
dec
into
fwait
jnp
and
dec
sahf
jnp
or
sub
sub
aas
lcall
sti
dec
push
jp
mov
js
enter
push
mov
push
push
sub
div
movb
or
addr16
xor
inc
mov
xchg
jmp
push
lahf
jo
dec
xchg
xchg
dec
pop
arpl
xor
dec
xchg
pop
dec
cltd
add
inc
lds
arpl
or
or
jae
lahf
xchg
mov
fsubr
dec
mov
jb
out
insl
cmpsl
xor
jl
fistpl
add
xchg
or
pop
lds
iret
imul
adc
dec
enter
jmp
mov
lds
hlt
rcll
das
cmp
jge
pop
adc
cmp
pop
cwtl
mov
add
cmp
loop
sbb
push
adc
ja
aam
arpl
fisubs
cmpl
in
mov
cs
out
mov
data16
cmp
pop
mov
mov
insb
adc
loopne
mov
sub
dec
ljmp
jp
push
adc
mov
test
aas
sbb
test
es
das
mov
or
stos
in
enter
push
xchg
mov
pop
xchg
xor
cmpsb
add
fstpl
sbb
xchg
jb
out
xor
sbb
decb
repnz
cmp
jne
mov
cs
xchg
icebp
push
ljmp
jo
jge
movsb
lcall
add
in
sahf
sti
dec
sub
mov
mov
dec
lods
fnstcw
or
aas
test
dec
in
add
fildl
mov
loop
mov
rolb
mov
ja
ds
mov
add
lret
inc
cmp
add
pop
jb
mov
dec
or
push
xchg
push
es
dec
push
orl
push
sbb
and
mov
push
add
push
jmp
jo
popf
push
mov
ror
pop
sub
push
sarl
push
sub
popa
dec
xchg
cmpsl
jg
repz
xchg
hlt
fwait
cmp
ss
mov
push
xlat
or
int3
jmp
mov
cmpsb
rclb
dec
cli
leave
fsubp
cmp
mov
cmp
mov
mov
sub
xchg
int
mov
add
mov
inc
out
pop
call
or
or
add
lods
loopne
push
jbe
out
push
sbb
pop
mov
les
loope
ja
mov
cmp
imul
movsl
push
push
xchg
int
repz
adc
lods
and
out
call
repz
test
push
lds
sbb
jo
xlat
jo
pop
mov
sub
and
mov
imul
pop
add
faddl
subb
mov
sarl
mov
dec
out
mov
das
dec
notl
sahf
test
mov
mov
push
int3
or
cs
push
and
inc
mov
cmpsl
fnstcw
stos
pop
xor
adc
mov
orl
adc
xchg
sbb
xor
subb
xchg
shrl
xchg
lret
push
mov
je
sarb
sbb
xchg
push
inc
adc
test
and
and
add
shlb
push
jp
dec
call
fsubrl
movsl
mov
sti
push
add
sub
add
mov
mov
xchg
add
sub
ljmp
sub
pop
popa
int
jecxz
pusha
cmp
xchg
test
bound
mov
cmpsb
dec
and
sbb
jbe
xor
ds
inc
rcll
shll
xchg
mov
dec
jb
lods
lahf
mov
daa
mov
arpl
fists
daa
jg
daa
cltd
scas
push
mov
pusha
cmp
mov
fcoml
cmp
cs
xchg
imul
scas
push
push
int
xorb
aad
aad
mov
mov
lods
scas
and
std
test
or
dec
push
loop
stos
xor
jne
xlat
out
push
pop
arpl
push
or
mov
pop
xchg
adc
fstl
mov
jb
popa
sbb
mov
dec
pop
fisubs
inc
fwait
sub
sub
out
test
into
sbb
inc
movsb
lds
pop
es
rclb
inc
lea
out
mov
adc
stos
jg
notb
pop
shrl
xchg
insb
jecxz
stos
add
xor
mov
movb
sbbl
dec
sbb
xor
ss
fwait
mov
je
jno
jmp
arpl
cli
daa
mov
dec
mov
sbb
adc
fstps
aam
rorb
mov
xchg
cmp
cmp
iret
dec
mov
imul
dec
push
add
in
pop
or
fcoml
adc
sarl
xchg
mov
les
lahf
mov
cmp
fidivl
pop
lods
lahf
lea
sbb
and
or
jns
adc
or
dec
xchg
std
insb
or
movsl
iret
mov
push
fstl
loop
leave
icebp
adc
mov
xchg
pop
scas
ret
icebp
leave
repz
sbb
popa
leave
mov
or
movsl
scas
dec
jb
gs
es
dec
mov
arpl
sub
or
inc
fs
push
shr
mov
pop
xchg
sbbb
ljmp
adc
xor
xchg
pop
iret
inc
repz
mov
push
movsl
fbstp
mov
insl
jbe
mov
icebp
push
dec
or
bswap
pop
or
shrl
scas
xor
xorb
cmp
aad
call
mov
mov
ja
out
sub
jecxz
cltd
icebp
sbb
aad
jo
cmc
pop
daa
repnz
stc
sti
mov
lret
add
rcl
lcall
mov
subb
push
pop
or
adc
hlt
sbb
subb
mov
mov
pop
sbb
fdiv
movsb
inc
jl
clc
rolb
fstpt
inc
ja
jg
inc
inc
out
dec
xchg
nop
cmp
fdivrs
mov
mov
das
add
daa
sti
popa
cmp
sbb
insb
lods
adc
inc
dec
mov
add
shlb
notl
lds
ljmp
jp
mov
sbb
leave
mov
addb
mov
aaa
in
cld
xor
lcall
adc
and
out
icebp
jb
out
xor
xchg
sub
xor
movsl
mov
fists
imul
js
xchg
xor
test
inc
fadds
inc
inc
and
dec
jnp
sbb
fld
push
mov
mov
dec
jecxz
sub
and
leave
add
loopne
and
scas
xchg
imul
jne
jmp
stc
jns
jp
xchg
pusha
and
jo
outsl
int3
imul
fld
cmc
sbb
and
lods
mov
stos
dec
mov
sbb
jp
shlb
fwait
jmp
pop
outsb
push
jbe
jno
insb
xor
fnstenv
or
xor
ret
mov
jle
fbstp
int3
mov
or
nop
push
and
fistl
movlhps
pushf
out
aad
outsl
xor
inc
dec
cvtps2pi
inc
mov
test
mov
scas
cmp
data16
cltd
mov
cwtl
adc
int
loopne
xor
addr16
dec
scas
inc
push
aam
fsts
push
adc
aad
inc
push
roll
addr16
adc
sbb
jns
pop
scas
ss
lret
ret
sub
add
sbb
pop
pop
xchg
js
imul
pop
jae
sub
inc
xor
movsb
mov
in
cmp
xlat
clc
leave
fiadds
push
pop
pop
clc
divl
popf
inc
test
jb
outsb
sub
sub
push
push
ljmp
dec
imul
xor
xor
fiaddl
inc
ljmp
bound
repz
jmp
test
imul
sub
out
push
or
cmpsl
mov
or
pop
lret
scas
adc
and
hlt
dec
movsl
mov
rcr
cmp
push
mov
std
pusha
sbb
mov
mov
jno
pop
les
aaa
inc
adc
in
sbb
dec
sbb
aas
inc
jne
sub
xor
xor
loopne
pop
pop
js
pop
push
inc
push
xchg
aaa
call
mov
mov
outsl
es
mov
mov
mov
rcll
or
pushf
test
incl
jbe
dec
fdivrl
xchg
je
nop
mov
mov
leave
push
ret
pushf
add
sar
imul
pop
add
movsl
jl
leave
xor
inc
and
cmpsl
mov
mul
inc
inc
push
add
lds
popf
mov
push
lcall
sbb
fnsave
sub
hlt
pushf
daa
jmp
lock
xlat
cmpsb
test
and
or
adc
xchg
mov
sbb
out
mov
mov
stc
das
cmpsl
data16
int
lcall
or
jecxz
lock
leave
mov
push
popf
jle
pop
cld
cmp
adc
decl
cmp
jmp
ret
pop
outsb
sub
sub
hlt
fsubr
popf
add
sahf
test
sbb
ja
and
cmp
inc
je
filds
dec
dec
sbb
xchg
xor
jbe
aas
pop
iret
je
jp
test
test
mov
sbb
xchg
out
and
stc
stos
add
push
inc
stos
dec
or
sub
mov
sbb
mov
mov
or
bound
js
jns
xorb
loope
popa
jo
sbb
movsl
test
adc
fisttps
enter
sub
ds
mov
cmpsl
int3
jge
aas
push
push
mov
mov
popa
out
xor
outsb
mov
mov
add
jns
loop
cmp
jae
jb
dec
in
sub
sbb
test
and
cmp
and
lcall
in
cmp
mov
aaa
addr16
out
mov
jecxz
jnp
lea
or
cmpsl
incl
jne
sub
push
push
xor
sarb
ficoms
scas
aas
std
lahf
in
daa
es
jbe
lret
mov
movsbl
sti
sub
xor
and
and
pop
cmp
out
pop
push
push
add
out
mov
loope
mov
aas
mov
mov
loopne
mov
jne
mov
popa
cmp
lods
and
popa
mov
aam
jl
je
dec
mov
into
dec
testb
jle
xor
adc
pop
js
push
ja
std
pop
sbb
in
xchg
test
sahf
inc
lret
xor
cmc
lret
stc
repz
jno
enter
hlt
mov
cmp
shl
or
xlat
xlat
int3
mov
pusha
lret
mov
sub
cmp
jae
push
andnps
fidivrs
addb
cmp
pusha
imul
push
js
sub
jno
sub
stc
in
mov
insl
jne
popf
movsl
push
fsubrl
adc
iret
sub
jae
xor
aad
mov
fists
dec
je
inc
mov
mov
movsb
cmp
dec
pop
or
fisubrs
mov
add
push
push
ja
add
aam
push
sbb
adc
push
jo
mov
push
out
js
mov
outsl
and
inc
lods
jecxz
or
sti
leave
lcall
or
sub
mov
xchg
imul
jne
mov
or
lahf
clc
inc
call
and
mov
sar
xor
iret
inc
or
aam
arpl
icebp
adc
out
adc
jne
inc
xchg
dec
and
sub
pushf
scas
repnz
insb
or
jmp
and
fucompp
mov
hlt
stos
pop
out
xchg
and
mov
mov
mov
pusha
push
push
mov
js
fld
cmp
popa
sub
into
jns
aaa
rcl
add
out
mov
mov
cltd
lcall
or
rolb
cmp
mov
aaa
mov
insl
movsb
pop
push
cmpl
pusha
repz
cmc
mov
shl
insb
fdivl
push
pushf
lahf
shrb
cli
inc
aaa
dec
push
sbb
mov
mov
push
and
pop
sahf
and
sbb
or
jmp
mov
or
or
je
sub
inc
cmp
popf
ffreep
inc
popf
out
js
sbb
xchg
mov
out
loop
dec
lea
push
loope
inc
adc
mov
jo
js
jp
loopne
iret
jmp
inc
mov
out
outsl
fmuls
and
je
mov
mov
sti
clc
inc
repz
jbe
push
push
fisttps
fwait
mov
imul
mov
jne
lea
loop
out
cmpsl
mov
loopne
and
pop
or
rcrb
push
lea
xchg
popf
loope
into
lods
jmp
mov
xchg
nop
inc
ret
dec
in
sti
out
outsl
pop
or
pop
xchg
pop
mov
sub
push
lahf
add
jge
pop
adc
iret
inc
ficomps
dec
inc
mov
leave
jbe
add
ds
mov
fimuls
hlt
cmp
add
xchg
test
test
dec
adc
mov
jno
pop
lret
bound
push
xor
out
push
cmpsb
addl
xor
add
inc
in
inc
sub
pop
pop
or
cmpb
adcb
xchg
das
adc
mov
fdivs
add
js
pop
mov
aad
loop
loopne
or
daa
cmp
cmp
cmpsb
cmc
scas
stc
ja
push
fdivl
adc
loopne
addr16
idivl
aaa
rcr
mov
dec
nop
adc
pop
ret
scas
sarb
test
sub
xchg
lods
xor
or
mov
mov
dec
ja
fistps
xor
jb
xor
push
mov
mov
dec
xchg
inc
push
notl
sbb
cmpsb
mov
add
repz
in
stos
xor
add
add
fs
ret
push
inc
loopne
xor
mov
add
inc
pop
sbb
cmc
gs
fmull
push
jecxz
fisttpl
ret
shlb
stc
xor
loop
in
push
add
in
adc
arpl
jo
dec
andl
repnz
scas
xor
or
test
stos
divl
xor
ficoms
outsb
push
pop
xchg
sbb
ret
pop
inc
mov
jle
xchg
push
jnp
mov
inc
jmp
lds
fmul
ret
mov
push
in
push
cmp
sub
push
push
add
rcl
inc
push
scas
or
add
cwtl
dec
js
leave
cmp
jmp
sbb
inc
inc
sub
mov
xchg
jle
pop
add
cmp
xrelease
xor
jae
into
xchg
fidivrs
add
fwait
pop
movsb
cwtl
lahf
loop
ljmp
jp
inc
nop
mov
pop
sbb
jnp
pop
lds
adc
dec
test
sbb
cmp
pminub
insl
dec
rol
add
add
fsubl
inc
mov
iret
je
negl
pop
adc
mov
cmp
mov
enter
in
and
mov
aas
scas
sub
out
add
and
shlb
cltd
pop
js
ficoml
xchg
inc
fsub
fdivrs
fidivrs
inc
xchg
or
sub
sbb
jno
and
cmp
mov
insb
fstpt
gs
cmp
sbb
loop
inc
mov
ret
inc
mov
mov
rcrl
jo
popf
mov
loop
mov
pusha
jp
and
and
ja
sbb
push
push
cwtl
push
mov
and
adc
rsm
cmpsl
mov
add
sti
stos
ss
mov
and
fsts
loopne
clc
fwait
movb
push
jle
outsl
xor
pusha
and
sbb
ja
dec
idivl
sbb
fistps
mov
insb
fadds
dec
movsl
test
jno
in
sbb
pushf
pop
into
clc
mov
cmpsl
popa
sahf
pop
sub
in
pop
mov
sahf
movsb
popf
icebp
out
xchg
xchg
xor
xchg
ja
rcl
int3
stc
lret
shr
jno
add
mov
aad
fbstp
and
jbe
f2xm1
stc
xchg
icebp
pop
sub
push
das
mov
cli
sub
out
adc
loope
out
pop
pop
in
push
xchg
push
jge
push
or
clc
mov
lcall
dec
test
movsb
sti
test
cmpsl
xor
stos
sbb
mov
inc
cmp
mov
insl
mov
shll
lret
hlt
addr16
addb
jno
sbb
dec
and
mov
aam
jle
dec
and
add
add
or
pop
cmpsl
and
in
lods
mov
notl
int
adc
shr
push
addr16
mov
lcall
ss
mov
or
cwtl
scas
mov
pop
lods
add
sub
lret
push
xchg
iret
mov
mov
pusha
scas
xor
enter
stos
xchg
jmp
imul
in
aad
sub
inc
inc
xchg
test
ja
adc
pusha
sbb
cltd
add
cmpsb
jnp
xchg
clc
dec
hlt
fpatan
repnz
add
data16
or
std
jo
dec
mov
ss
in
mov
rorb
pop
mov
sub
test
adc
add
jno
cwtl
out
xchg
push
lahf
les
add
mov
addl
jle
inc
push
xchg
fistl
ret
fiadds
loop
movsl
scas
sub
leave
pop
fsubr
dec
and
or
xchg
into
mov
xchg
popf
or
rorl
addr16
loope
xchg
pop
adc
call
nop
popf
or
cmpsb
mull
inc
filds
dec
jg
pop
mov
scas
jnp
dec
mov
pop
into
subb
lahf
or
repnz
pop
fmulp
rorb
and
jae
push
sbb
shll
pop
push
inc
pop
aas
insl
rcrl
jnp
fisttps
shlb
jmp
jae
mov
notb
xchg
int3
cmp
jmp
dec
mov
loop,pn
pop
cmp
lds
jns
std
lcall
or
inc
mov
cld
and
mov
addr16
insb
push
dec
aas
loop
rclb
push
push
mov
push
fidivs
rorb
ljmp
js
jl
jecxz
and
out
mov
lahf
popf
inc
mov
mov
lock
lret
jo
adc
sub
push
lcall
pop
push
pop
lret
mov
aas
adc
fs
mov
mov
das
jae
mov
adc
mov
ret
in
mov
xchg
mov
int3
xor
fcoml
fildll
mov
repz
mov
cmp
js
les
inc
push
stos
out
fadd
insl
cwtl
lea
push
xchg
xchg
dec
mov
imul
sub
ja
ja
mov
adc
cld
dec
or
loop
pop
loopne
test
mov
push
lea
and
hlt
mov
ljmp
mov
cwtl
sub
enter
rorl
mov
negb
sbb
daa
mov
or
push
jge
jl
adc
in
aad
notb
aaa
mov
jbe
test
jge
aas
sbb
mov
lods
xor
fcoms
pop
mov
lcall
jp
sub
fcoml
mov
pop
xor
and
lds
test
and
addr16
or
and
xor
int
jo
jmp
in
mov
andb
andl
lock
movsl
jnp
xchg
in
ret
in
aad
ret
mov
pop
gs
shrb
push
inc
shrl
or
pop
and
nop
jno
dec
sbb
push
mov
jle
adc
xor
push
mov
popf
sbb
daa
daa
mov
int
cltd
lret
pusha
repz
jle
es
push
loopne
mov
xchg
push
subb
jl
repz
jbe
xchg
mov
xor
dec
push
jnp
cmp
fs
int
inc
rcrl
aad
xor
loopne
movsb
mov
bound
xor
dec
dec
imul
int
push
cmpsl
push
inc
ftst
sbb
xor
imul
cwtl
jg
push
std
adc
mov
pop
in
jne
mov
test
sub
inc
aas
mov
cwtl
shrb
shlb
lock
lods
in
xchg
dec
rclb
mov
mov
pop
cmpsb
hlt
xor
mov
popf
inc
xchg
jp
pop
fs
roll
dec
mov
push
shrl
jns
mov
xchg
adc
scas
stos
imul
insb
mov
push
sahf
mov
and
mov
mov
inc
push
push
sbb
and
outsb
cmp
lret
mov
cmp
imul
fiadds
ja
cmp
rorb
sbbl
inc
jl
add
add
push
xor
xchg
inc
inc
jns
cmpsl
mov
mov
fld
and
sub
jb
ret
xor
dec
scas
and
ret
inc
sbb
jge
pop
loope
lahf
lds
into
inc
mov
jl
xlat
push
jns
imul
shl
lods
in
enter
iret
sti
ljmp
dec
iret
pusha
xor
ret
hlt
fidivl
test
mov
subl
movsb
pop
cmp
cmp
pop
adc
mov
and
cmp
mov
stos
sbb
rcr
push
shrb
cmc
cli
adc
sbb
js
leave
xchg
stos
push
bound
lcall
je
mov
push
mov
mov
mov
ds
loopne
xchg
pop
xchg
adc
popl
mov
xchg
aam
or
mov
xchg
sbb
jle
push
in
pushf
mov
aaa
cmp
pop
jl
xor
loopne
enter
cmp
pop
pushf
mov
xchg
mov
sub
icebp
add
sbb
test
sbb
std
stos
mov
mov
test
sub
push
jo
or
into
lods
inc
loope
test
ret
inc
das
mov
cmc
sbb
xor
mull
ret
push
in
nop
jne
xchg
xlat
pop
iret
xchg
and
mov
xchg
clc
test
lret
and
outsb
in
pusha
sahf
lods
in
jno
push
mov
adc
icebp
loop
and
loope
popa
movsb
push
movsb
test
xlat
in
out
cmpsb
inc
pop
out
dec
push
and
mov
rcll
call
fwait
sahf
and
lcall
in
or
cwtl
or
dec
jns
push
jno
mov
sub
sbb
mov
in
jp
mov
imul
sub
jno
lods
arpl
add
insl
ret
inc
or
in
xor
jne
bound
insl
push
mov
leave
mov
add
ret
call
pop
jae
dec
rclb
and
clc
or
mov
cli
call
pop
data16
arpl
iret
pop
shrw
fbstp
xchg
insb
ret
push
fstpt
push
jp
or
inc
ss
inc
pop
cli
and
and
fcomps
adc
sbb
arpl
inc
or
test
dec
pushf
outsl
sbb
inc
out
push
repz
cmp
lcall
jne
out
shrl
inc
xor
cmp
leave
jmp
jnp
sub
insb
insb
pop
out
out
mov
mov
jp
mov
sub
mov
mov
sbb
test
push
pop
adc
inc
xor
sub
push
fs
jmp
iret
jle
mov
clc
adc
aam
xor
in
cltd
repnz
mov
jecxz
arpl
xchg
test
push
dec
and
mov
inc
outsb
fs
jg
loope
mov
hlt
fwait
xor
mov
pop
pop
test
loopne
dec
out
jnp
pop
sbb
push
clc
insb
imul
mov
jns
test
mov
pop
push
loop
adc
xor
lock
and
sahf
push
lret
fs
push
les
pop
dec
dec
inc
cmpsl
ret
xor
push
xchg
xchg
or
notb
das
cmpl
cmp
xlat
sahf
sub
adc
sub
inc
lahf
xchg
jp
aad
fimuls
sbb
aas
ja
xchg
in
cmc
ja
mul
test
mov
mov
jg
cmp
cmp
and
jecxz
dec
xchg
push
rcll
movb
aas
sahf
push
pop
mov
sbb
jnp
mov
sub
push
mov
imul
push
lahf
ss
jmp
mov
clc
arpl
enter
pop
push
gs
mov
mov
push
outsb
mov
xlat
push
stos
std
sbb
add
addr16
bound
mov
in
or
into
push
sti
mov
cli
cmp
addl
loop
lahf
in
xchg
lcall
repnz
das
lock
xchg
mov
mov
data16
loop
lret
ret
and
leave
add
mov
xor
out
push
jge
jns
xor
aad
fs
shrl
sbb
mov
sbb
sub
pop
dec
sub
icebp
sahf
sbb
shrb
data16
adc
in
scas
or
pop
sub
mov
fbstp
lret
pop
mov
mov
in
out
jg
or
mov
fcmovb
stos
mov
jbe
clc
pop
std
cmpsl
or
mov
mov
icebp
movl
icebp
mov
xchg
jecxz
push
dec
mov
dec
cld
cmp
mulb
in
ret
enter
mov
and
int3
loop
aad
xor
push
fwait
pusha
xor
out
or
sbb
sbb
jo
xor
dec
sub
sub
test
push
add
aam
pop
test
ret
cli
ficoml
movsl
jnp
sub
fisubrl
cltd
lock
rorb
test
mov
sbb
enter
dec
insl
jnp
cmp
mov
cmp
lahf
aas
push
or
std
out
dec
pushf
add
ret
push
in
xchg
das
popa
add
testb
cmp
or
xchg
gs
push
pop
xor
call
dec
inc
pop
add
popf
das
inc
setge
sbb
pop
or
mov
cmpsl
adc
mov
cmp
movsl
xchg
cld
popa
call
in
jl
xor
loopne
and
mov
fwait
rep
mov
jno,pt
int3
incb
cli
divb
cmp
fists
xchg
test
mov
adc
jge
fisttps
push
imul
stos
insb
js
cwtl
or
adc
mov
adc
jp
movsl
adcl
cmp
jb
xchg
outsb
inc
xchg
ljmp
inc
push
lods
and
mov
es
fisttpll
outsb
mov
fdivs
sub
lock
jns
pop
jb
adc
mov
jb
or
sub
imul
or
imul
pop
jg,pn
roll
inc
mov
xlat
push
xor
les
dec
adc
fisttpl
movsl
out
xchg
loopne
jne
repz
push
and
cld
test
test
rcr
mov
dec
ljmp
mov
mov
inc
addr16
lock
sbb
aam
cmp
cmpsl
lcall
es
pop
and
cmp
xor
js
jbe
dec
sbb
push
aad
shl
pop
out
aam
push
or
jno
in
sbb
and
loopne
adc
cmp
pop
cmpsl
ss
xchg
mov
in
stc
jmp
je
jb
push
pop
push
cmp
outsl
into
add
fmull
jb
sbb
sub
imul
xor
clc
pop
lods
add
les
call
jp
leave
sub
push
ret
dec
lods
imul
shll
mov
shl
stc
xchg
jbe
or
lcall
mov
pop
push
xor
mov
ret
lock
sub
stos
mov
mov
arpl
out
sbb
sbb
in
mov
and
sbb
mov
arpl
mov
and
lret
mov
add
fsubs
scas
mov
int3
ljmp
lods
mov
or
xor
cwtl
or
sbb
push
jae
push
mov
add
in
stos
mov
mov
repnz
xor
outsb
test
cwtl
mov
push
jnp
cmp
mov
and
cwtl
pop
xchg
sub
in
outsb
cwtl
and
dec
mov
sub
and
test
addr16
push
mov
and
punpckhwd
cld
mull
dec
scas
outsb
hlt
cmp
aam
mov
adc
mov
adc
je
aas
add
mov
and
dec
popa
fidivl
jbe
and
push
and
cmp
dec
test
or
pop
xor
jle
mov
push
sahf
pop
testl
in
mov
stos
xchg
dec
ss
outsb
xchg
cmp
xor
test
jbe
fmul
pusha
sub
out
mov
or
scas
nop
enter
adc
add
jns
push
enter
jne
xor
xlat
pop
int
mov
sbb
dec
cmp
push
cmp
rcll
pop
jmp
cld
das
add
enter
xor
das
mov
int3
add
pop
mov
js
test
cmp
jnp
subb
sub
mov
adc
cmp
sub
pop
mov
or
repnz
jecxz
cmc
mov
pop
cmp
data16
scas
fnstcw
mov
insb
bound
sub
out
mov
add
mov
mov
add
sub
jo
shr
adc
jb
lods
js
or
push
dec
xchg
mov
jno
xor
mov
inc
xchg
scas
dec
add
pop
movsl
adc
test
les
jno
arpl
aas
or
ret
adc
fildl
je
jecxz
call
out
js
mov
mov
iret
mov
sub
or
repz
sub
add
push
lahf
shlb
adc
mov
push
into
pop
mov
dec
loope
arpl
ljmp
jg
ret
cmc
stos
mov
leave
std
cmp
mov
iret
and
jbe
scas
mov
mov
inc
pop
mov
pop
sub
outsb
cs
mov
adc
out
inc
xchg
jge
outsl
sbb
xlat
test
pop
push
cmp
push
mov
frstor
cld
cltd
or
push
fwait
or
cli
add
xor
into
lret
mov
jp
stc
mov
je
pop
arpl
int
rcll
and
jo
daa
leave
xchg
ss
jge
shlb
imul
aaa
pushf
inc
mov
xchg
leave
or
push
je
pop
movq
mov
fstps
insb
aad
mov
in
hlt
stos
cltd
pop
or
or
jb
jl
movsb
inc
or
pop
rorl
mov
out
aad
test
sbb
clc
and
sbb
pop
push
jge
sub
fisubl
inc
imul
loope
addr16
pop
or
dec
lret
adc
and
shll
xor
mov
add
adc
bound
call
or
adc
in
sbb
jge
sbb
mov
xchg
pop
ret
cmpsb
stos
mov
add
adc
loop
cmc
xchg
les
push
adc
enter
test
addb
push
mov
inc
cmc
fwait
rcrb
in
arpl
or
push
aas
inc
lods
into
xor
aam
push
xchg
adc
jnp
and
sbb
in
fsubp
loop
jmp
adc
dec
dec
int3
sbb
xor
lret
test
sahf
mov
leave
insl
imul
mov
jae
pop
dec
jmp
jp
and
iret
sub
sbb
jg
cmp
adc
int
mov
push
jb
lahf
ljmp
insl
out
sub
movups
jbe
divb
daa
enter
cmp
add
cs
pop
lcall
leave
adc
and
enter
and
test
pop
jae
lret
jmp
dec
stos
pop
and
mov
loopne
fidivrl
or
fsin
bound
push
pushf
mov
xor
push
pop
mov
push
jbe
clc
scas
mov
hlt
inc
dec
jbe
inc
mov
mov
push
jecxz
inc
mov
incb
push
shl
push
cmp
lret
repz
sbb
cmp
out
cmp
mov
pusha
xchg
cltd
pushf
jno
mov
rclb
add
ret
adc
test
faddl
in
fstl
stos
sub
out
call
adc
cmpsl
fidivrs
mov
xor
pushf
cmp
pop
leave
mulb
arpl
pop
in
dec
fldcw
imul
sub
push
fsubrs
cltd
and
add
dec
and
repnz
adc
iret
lret
cli
sub
adc
xchg
repnz
cs
mov
mov
jb
cmpsl
popa
jl
repnz
int3
hlt
sbb
jl,pt
mov
mov
ret
cld
fld1
jp
mov
sbbl
lcall
jmp
fisubs
mov
jb
xchg
push
sbb
xchg
sar
add
out
int
aaa
adc
inc
mov
xor
les
movsb
push
testl
mov
dec
or
outsl
imul
enter
mov
outsb
mov
repnz
push
inc
mov
xor
cld
pusha
imul
pushf
and
rcr
mov
dec
and
add
push
xchg
sar
push
push
dec
mov
aas
insl
dec
push
jo
xchg
and
cmp
mov
push
pop
pop
std
xchg
push
mov
xchg
scas
adc
imul
add
push
pop
cmpl
pop
scas
mov
sbb
jle
dec
sbb
mov
into
mov
xchg
mov
inc
bound
or
cmpsb
rorb
jo
inc
jne
data16
and
add
mov
movsl
mov
nop
jmp
movsl
cld
cmp
cmp
cli
movsl
pop
int
gs
mov
data16
push
xlat
adc
rcrl
fs
adc
jg
pop
les
loope
xchg
lcall
fdivs
adcl
pop
pop
mov
test
icebp
pop
xchg
cs
jp
minps
xlat
mov
mov
push
mov
cmp
or
dec
ror
movsb
aas
adc
jle
inc
outsl
adcl
cmpsb
inc
mov
pop
rcrl
sahf
inc
push
mov
mov
sar
scas
insb
nop
leave
cmp
cltd
sahf
mov
xor
shrl
xchg
or
and
lea
inc
arpl
sbb
dec
cmpsl
addr16
inc
fcoms
jb
dec
pushf
movsb
pop
jb
pop
test
cmpsb
dec
hlt
inc
clc
push
or
xchg
push
dec
xchg
enter
sub
bound
jl
imul
bound
sbb
sar
ficomps
daa
ja
fmul
cld
xor
fstpl
pop
mov
xchg
aas
mov
xchg
cmp
sub
mov
test
cmp
fiaddl
not
setae
inc
fisubrl
cmpb
es
fisubrs
xchg
out
insb
xor
add
scas
add
jae
addb
mov
fs
mov
out
stos
aaa
cmp
movsl
loopne
aas
cmpl
enter
stc
pop
sbb
enter
jmp
inc
push
pop
add
pop
sbb
rcrl
lret
cld
dec
popa
cltd
jb
or
ljmp
and
sbb
insb
inc
cmpsb
out
scas
dec
xor
fistpll
xchg
sbb
int
pop
iret
ljmp
jg
gs
xor
dec
xchg
int
and
xchg
outsl
mov
faddp
mov
shrl
xchg
cmpsb
dec
push
std
cmp
push
lods
cmpl
push
and
cli
xchg
pop
loop
inc
lock
cmp
mov
push
and
pop
jae
loop
cmp
ret
sub
ljmp
leave
adc
sub
xchg
inc
in
hlt
les
jg
sub
aaa
cmp
fisttpl
ljmp
sub
jle
movsb
push
inc
mov
mov
jae
mov
xor
adc
sti
sahf
inc
jns
jecxz
aam
cmp
jnp
inc
frstor
into
cli
add
adc
adc
not
adc
ja
dec
mov
cltd
pop
test
cmp
adc
out
shl
out
cmp
push
mov
fidivrl
add
xor
cmc
out
out
incl
push
sbb
lods
and
ret
ret
mov
fwait
test
or
cmpsl
out
aam
or
xor
arpl
inc
addb
stos
dec
fdivrl
out
sbb
inc
test
std
mov
fsts
aas
imul
in
inc
xchg
and
jbe
out
inc
mov
adc
out
inc
dec
test
test
inc
and
or
sarb
sub
or
mov
fcompl
jno
jb
pop
lret
jp
aam
sbb
cmp
dec
adc
aam
in
mov
sbb
cmp
mov
adc
push
and
adc
incb
xor
test
inc
or
sub
test
test
inc
imul
mov
cs
fldt
mov
repnz
or
push
out
push
sub
stc
pusha
aad
jo
or
fiaddl
cmpsb
cmc
push
inc
mov
sub
dec
mov
sbb
jmp
mov
test
int
xor
jbe
push
adc
sbb
mov
xchg
jg
cmp
mov
loopne
loop
sbb
cmpsl
addr16
sbb
mov
pop
cmp
cmp
adc
adc
add
aad
mov
aad
pop
mov
loopne
xlat
data16
adc
shlb
and
mov
cli
setae
add
call
ss
push
shl
push
leave
xor
aaa
lods
push
popa
sub
popf
mov
dec
xchg
jns
data16
mov
jmp
loopne
shr
ret
and
pusha
movsb
cmp
jo
xchg
movsb
xchg
sub
out
sbbb
pop
lret
subb
ret
or
cmc
int3
mov
rcl
lods
lds
loop
cmp
stos
out
pop
adc
dec
scas
push
mov
into
test
mov
es
aad
xlat
or
js
hlt
cltd
mov
test
mov
mov
shl
mov
scas
orl
aas
add
cmp
lret
xor
xor
loopne
lods
adc
pop
inc
testb
mov
cmp
lret
jae
pop
cld
adc
ret
cld
imul
inc
outsb
pop
arpl
inc
fmuls
push
mov
leave
mov
fmul
mov
sbbl
xchg
mov
stos
ja
and
or
sbb
hlt
mov
jmp
cmp
adc
xor
das
dec
mov
outsb
xchg
or
out
and
sub
cmp
inc
xchg
out
outsl
mov
aad
mov
lahf
sub
hlt
push
test
and
and
push
add
cmp
cmpsb
dec
into
sar
sbb
xchg
push
gs
fstpt
in
ljmp
push
out
dec
xchg
dec
nop
mov
pop
mov
ds
pop
xor
xchg
push
cli
sar
xchg
jecxz
aad
mov
mov
push
dec
dec
inc
or
sbb
hlt
outsb
jns
mov
jecxz
fcmovbe
stos
xor
pusha
out
and
incl
add
scas
test
std
in
fwait
push
leave
pop
pop
sub
inc
je
out
mov
outsl
or
or
push
testb
scas
or
js
and
repz
imul
mov
mov
ficompl
daa
out
aam
pushf
daa
cmp
jnp
mov
sti
pushf
icebp
fcoms
add
das
mov
pop
push
lahf
mov
rclb
cltd
or
mov
pop
rcrl
dec
mov
aas
sub
push
aas
mov
push
adc
outsl
movsl
push
push
cmp
jecxz
insl
rol
into
inc
icebp
out
mov
mov
call
sub
push
movb
inc
and
je
pop
stc
in
sahf
xchg
mov
and
mov
imul
mov
cmpsl
jp
or
cld
sub
dec
gs
mov
jbe
jne
cmp
push
je
aas
or
mov
jl
mov
and
sbb
inc
aas
fxch
cmpsl
mov
out
pushf
or
mov
cmpsb
or
imul
sbb
push
jo
bound
mov
out
in
add
add
jl
fildll
sbb
jns
scas
adc
cld
mov
jg
sub
out
jb
jg
faddp
dec
aam
les
mov
dec
jmp
aaa
scas
lds
or
into
fs
orb
push
in
jo
flds
out
enter
cmp
inc
adc
lock
scas
loopne
nop
das
sbb
stos
mov
scas
mov
dec
das
lock
pushf
jns
xchg
push
fisubrl
mov
inc
js
sbb
pop
lods
scas
add
fdivr
xchg
jg
lds
test
arpl
mull
mov
sbb
or
sub
inc
mov
mov
pop
vpunpckldq
icebp
mov
and
test
push
cmc
pop
cltd
push
jno
imul
lcall
mov
jno
add
das
xchg
cld
xchg
cmp
loopne
xchg
mov
inc
out
stc
jg
pushf
sbb
push
cli
push
ret
pop
add
pop
push
pop
or
popf
imul
xchg
cmp
jmp
pop
mov
daa
mov
add
data16
mov
imul
clc
addb
ret
push
xor
cli
imul
push
cwtl
cmpl
xor
sub
jnp
leave
push
inc
jns
stos
sti
lods
aas
xchg
push
lea
mov
jecxz
mov
mov
daa
cld
clc
aam
push
jl
cmp
dec
jo
iret
xchg
xlat
ficompl
mov
ds
xchg
cli
fmull
adc
popf
lds
sbb
inc
push
fidivrl
sub
in
pop
mov
lahf
inc
call
push
iret
test
mov
cltd
mov
mov
adc
pop
mov
fidivs
lcall
jbe
loop
es
cmp
mov
mov
cmp
mov
mov
je
popf
mov
dec
mov
jecxz
pusha
add
aam
in
loopne
loopne
mov
push
lods
dec
push
lret
sahf
pop
pop
pop
mov
iret
leave
inc
fs
xor
shll
fs
xlat
fmull
jns
xchg
addr16
insl
aaa
addr16
adc
jno
call
sbbl
lret
rcl
mov
test
dec
push
sbb
fnstsw
mov
push
xchg
sbbl
pushf
arpl
es
mov
pop
pop
xchg
or
mov
xlat
jns
xor
and
lret
jno
insl
inc
dec
inc
xchg
xlat
adc
xchg
push
inc
shrb
dec
xor
adc
aad
lret
pushf
mov
ret
jo
fisubs
add
lock
fimull
adc
add
pop
pop
adc
into
stos
stos
pushf
jle
rorl
nop
jno
sub
sub
std
scas
bound
fisubrl
sti
sub
sub
inc
add
xchg
xor
ret
hlt
std
push
xchg
mov
jle
pop
fcoms
fsubs
fisttpl
pushl
mov
test
cwtl
sub
or
hlt
mov
in
sbb
stos
xlat
or
push
fldl
mov
call
sub
jg
insb
test
mov
xor
and
sub
int3
repz
cltd
cltd
or
pushf
in
rorb
nop
cmc
sub
adc
lret
jp
lcall
aas
mov
mov
out
stos
jns,pt
jne
cld
push
nop
xchg
loopne
xor
sar
and
mov
arpl
repz
push
andb
add
push
or
mov
xor
popf
mov
dec
inc
inc
rorl
dec
sbb
cmc
dec
int
pop
out
inc
repz
movsl
jge
mov
pushf
jno
pop
pop
aas
std
or
rol
into
test
enter
pop
pop
xchg
shl
rclb
mov
movsb
xor
enter
in
popf
subb
adc
sub
test
lock
inc
lahf
arpl
ja
repnz
adc
add
js
pop
ud1
dec
std
jns
ficomps
shl
hlt
jmp
pop
jb
pop
idivb
cld
jge
pop
jmp
or
dec
mov
sbb
jge
jns
fwait
inc
inc
jo
inc
loope
cmc
push
dec
cmp
cltd
mov
into
cld
nop
adc
sbb
ret
in
mov
cltd
push
push
dec
jae
cmp
flds
jl
xlat
out
mov
sbb
ret
insb
int
sbb
lcall
mov
call
mov
lahf
clc
pop
mov
jp
mov
sbb
aas
cmp
mov
xchg
adc
cmp
aas
outsb
addr16
das
ret
out
jbe
cmpsb
pop
jle
adc
push
pop
mov
push
xchg
ljmp
inc
sub
mov
divb
dec
xor
out
mov
push
cmpsb
rclb
enter
adc
push
sbb
cs
hlt
insb
xchg
test
mov
daa
or
xorb
hlt
or
cmp
xor
mov
mov
fdivl
sbb
hlt
push
pop
jnp
lock
cld
bound
stos
jle
prefetchw
inc
cmpsl
add
mov
stc
mov
and
pause
mov
pop
pop
or
jb
movsb
or
lret
arpl
nop
imul
aaa
inc
xorl
push
push
or
cmp
leave
loop
popf
das
push
jno
popa
es
rclb
scas
rcrl
pop
sarl
mov
mov
xor
pop
mov
xchg
test
push
dec
sub
mov
fdivs
mov
outsb
mov
mov
fld
in
imul
and
inc
and
push
aam
lret
cs
ret
jne
rcll
gs
jg
hlt
adc
mov
mov
lock
add
ljmp
fstpl
dec
push
pcmpgtb
iret
adc
pop
or
or
mov
mov
imul
cwtl
test
sbb
cmc
or
mov
sti
xor
lea
cmpb
xor
imul
jb
cld
cmp
push
pop
push
cltd
push
add
arpl
aas
adc
lcall
aas
cmp
movsb
jecxz
sub
pop
lret
or
mov
cmp
lcall
xchg
in
jecxz
das
jb
xchg
dec
add
adc
rorb
popa
mov
jae
sti
outsb
clc
push
outsb
pusha
xchg
jge
sti
jge
out
add
lcall
or
into
rcr
popa
insb
jno
adc
sub
dec
adc
push
or
stos
jb
push
cltd
roll
rcrb
sub
cmp
mov
xor
push
fwait
pop
out
inc
fisttpl
sbb
fs
or
daa
sub
mov
cld
lahf
xchg
jnp
rcll
adc
imulb
fdivrs
add
rcll
xchg
inc
aam
push
jmp
inc
bound
and
scas
sbb
xchg
out
cmp
ficompl
mov
fdivl
adc
fsts
mov
test
mov
push
mov
inc
pop
push
int3
jge
call
xchg
pop
dec
sbb
xchg
and
mov
fidivl
pop
sbb
lock
dec
das
insb
jge
addr16
pusha
push
addl
or
pop
xlat
clc
pop
or
stos
push
es
jmp
pushf
push
rclb
loopne
cmp
mov
fcomps
mov
mov
int
sub
frndint
pop
sar
sbb
mov
push
imul
jge
and
lods
loopw
ja
icebp
push
lahf
pop
cltd
jnp
dec
mov
stos
arpl
in
xor
cmp
subl
mov
sbb
mov
xchg
rcrb
test
adc
xor
stc
fs
jns
repnz
jmp
outsl
popf
jg
push
sub
dec
das
filds
into
cs
jnp
cmp
out
negb
movsb
dec
xor
int3
adc
fisubrs
push
mov
pop
pop
adc
andl
out
cld
mov
xchg
jge
or
pop
xor
pop
dec
pop
mov
inc
lret
sbb
sbb
mov
fbld
lcall
xor
fstl
and
pop
ret
fs
adcb
hlt
inc
imul
fildll
mov
and
aam
es
xor
inc
into
xchg
mov
lods
sbb
shlb
cltd
inc
cld
and
test
mov
gs
adc
mov
cs
inc
or
mov
cltd
mov
mov
fwait
insb
dec
and
decl
xlat
push
jmp
xor
test
sbb
leave
push
lds
test
out
and
xor
or
stos
mov
mov
dec
jne
mov
cmp
push
addr16
jge
mov
rol
ds
push
sbb
in
push
sbb
lahf
lret
outsb
in
daa
push
mov
sbbb
pop
ja
test
dec
hlt
mov
sti
movb
and
fnstcw
adc
das
or
or
dec
lods
pop
ficomps
inc
sbb
loope
pop
aas
aas
inc
data16
in
pusha
insb
dec
cmpsl
jnp
pop
push
adc
and
and
add
mov
lods
add
pop
jbe
sbb
xchg
cmpb
jge
fstl
insb
int3
cltd
addb
adc
mov
es
inc
pop
cld
push
shrb
cmp
inc
lock
addl
ljmp
xchg
movsb
stos
in
lds
out
jle
insb
adc
cmp
mov
sbb
push
mov
sub
sub
addr16
fmuls
mov
mov
and
push
mov
std
js
mov
daa
push
jle
outsb
arpl
nop
mov
mov
mov
inc
fisttps
jb
inc
pop
imul
xchg
push
jl
xor
sti
cld
push
ljmp
sub
push
sbbb
mov
mov
add
out
inc
aad
pop
adc
or
loopne
and
mov
jge
dec
mov
test
push
popf
push
hlt
gs
fcmovb
ds
or
xchg
or
xchg
sub
pop
lahf
push
mov
mov
pop
rorl
sbb
mov
mov
add
clc
out
push
jmp
pop
sub
mov
cmp
jmp
cld
jge
xor
cmp
iret
push
pop
lock
pop
lock
sbb
test
sahf
mov
xchg
and
lahf
cld
inc
jp
cmpsl
add
pusha
clc
push
add
lret
les
std
push
lret
addr16
outsl
stc
mov
in
xor
cmp
push
mov
out
mov
test
adc
sub
mov
filds
sarl
add
and
xor
arpl
jbe
sbb
ds
sbb
arpl
xlat
mov
outsl
inc
cld
jnp
test
inc
imul
out
and
sar
loopne
sub
addr16
xor
cmp
aad
cmp
stos
adc
js
pop
test
add
cmp
adc
arpl
int3
in
loopne
xor
movw
sub
cmp
ficomps
fcmovu
inc
dec
cmp
mov
out
xor
mov
popf
rolb
aas
push
imul
cwtl
in
jle
movsl
mov
mov
xchg
inc
shrl
and
push
add
into
sub
jle
pop
push
rcl
es
ret
stos
mov
dec
push
not
jmp
stos
xchg
add
icebp
fcomps
adc
jmp
in
imul
and
testl
gs
push
add
mov
shrl
lods
aam
call
mov
jae
adc
mov
sbb
js
cld
push
gs
js
mov
scas
nop
push
outsl
mov
les
cmp
cmp
push
test
mov
aad
push
mov
add
test
mov
sub
mov
push
test
mov
out
shlb
adc
inc
pop
out
cmpsl
cmpsl
add
div
insb
dec
push
xchg
jge
push
pop
aas
enter
lret
adc
mov
ja
adc
add
div
fwait
enter
out
xchg
cld
jmp
pusha
int
add
orl
mov
and
and
pop
mov
inc
or
push
repnz
outsl
fs
call
mov
sub
cmp
mov
pop
insb
inc
mov
es
arpl
push
push
sbb
or
lcall
lret
loopne
add
nop
jae
cmp
lea
adc
lret
cmp
jae
sti
fidivrs
loop
jle
int3
adc
out
cmp
sbb
lods
aas
dec
mov
pusha
push
data16
rorl
push
andl
call
rclb
mov
pop
xchg
imul
dec
sarb
xchg
js
dec
xchg
or
pop
sub
xchg
xchg
inc
sbb
icebp
mov
adc
int3
cmp
mov
fwait
xchg
dec
ficompl
mov
dec
pop
xchg
sub
cmp
dec
jg
andb
loope
jb
xchg
insb
inc
ja
sbb
paddsb
orb
in
das
pop
iret
sbb
mov
push
dec
push
cmp
cs
cmp
adc
repz
sub
inc
jnp
mov
lret
fisubrl
into
rolb
sbb
stos
or
xchg
das
jo
lods
out
inc
adc
cli
xorl
nop
or
jmp
out
mov
inc
out
ret
push
test
ss
jmp
jl
test
fs
mov
stc
dec
test
orb
jno
lds
add
divl
mov
or
sub
into
call
or
nop
push
sbbb
dec
aas
mov
outsl
flds
cmp
out
call
xchg
inc
lea
pop
bound
xor
sti
jge
jns
testb
push
orb
pushl
inc
and
adc
push
push
push
ret
dec
mov
test
push
or
lcall
popf
test
or
je
push
mov
in
xchg
pop
inc
cltd
pop
mov
ljmp
arpl
sub
loop
fdivs
pop
xchg
push
movsl
out
in
fidivrl
jb
outsb
push
rcr
jbe
dec
ljmp
data16
and
xchg
adc
xor
jno
adc
cmp
sbbb
cmpsl
mov
int
stc
push
andb
cwtl
adc
mov
adc
cwtl
sbb
adc
lret
or
mov
sbb
rolb
test
and
adc
dec
je
lods
push
bound
aad
pushl
and
sbb
xchg
fmuls
out
xor
sbb
nop
shr
aas
pop
sti
xor
inc
lds
or
jmp
xor
fcompl
shrb
and
mov
mov
mov
or
shlb
xlat
fisubrl
xchg
jle
out
popa
cmp
xor
lahf
or
and
roll
iret
mov
shr
inc
aaa
xor
cmp
rcll
and
mov
pop
mov
popf
in
pop
and
iret
adc
aas
ret
lods
ret
cmp
dec
jmp
cli
jo
or
jnp
sbb
es
cltd
inc
xchg
test
inc
lahf
repnz
mov
jp
in
jle
xchg
mov
jno
add
dec
xor
sti
shl
mov
cmp
push
aaa
mov
push
mov
ljmp
pop
mov
xor
mov
inc
mov
pop
and
cli
or
out
push
mov
gs
leave
mov
ja
outsb
lea
xlat
mov
mov
dec
pop
add
and
and
mov
rcrl
xchg
sbb
adc
mov
inc
jo
sahf
iret
lods
mov
movsl
fcmovnb
dec
pop
insb
push
add
in
lcall
xchg
adc
inc
mov
xor
stos
mov
gs
aad
mov
and
insw
xchg
data16
jmp
xchg
je
movsb
aam
daa
mov
add
xchg
movsb
cld
cmpsb
inc
negl
pop
pop
pop
loope
jns
sbb
or
ss
popf
and
sbb
xchg
adc
xor
aad
addb
dec
mov
mov
das
mov
fcompl
add
pop
xchg
fbstp
ds
outsb
cmc
adc
int3
js
imul
data16
lahf
hlt
insl
repnz
dec
out
mov
jno
push
xchg
push
lret
loop
mov
ja
stos
pusha
dec
jmp
fnstcw
inc
loope
jl
fmuls
xchg
dec
cmc
aas
addr16
push
push
pop
cmpl
sti
mov
lret
add
lcall
and
stc
or
sub
scas
fcmovnu
aas
nop
std
cmp
mov
stc
xor
iret
mov
sarb
jp
xor
cmpl
orl
lret
ss
push
jno
adc
aaa
push
popf
dec
loopne
mov
fnsave
mov
push
fistps
outsb
jno
xchg
imul
lods
jle
lret
test
pop
lret
leave
mov
jmp
adc
arpl
push
xchg
adc
cmp
rorb
inc
push
popa
out
add
mov
pop
push
jge
sub
xor
inc
test
mov
popl
push
jmp
je
or
inc
orl
out
addb
cmp
fsubrl
cmc
xchg
repz
sbb
or
dec
arpl
imul
mov
add
dec
mov
and
iret
jecxz
lcall
int3
jb
imul
mov
mov
mov
es
jmp
and
lock
scas
inc
sub
xchg
das
mov
bound
insl
jbe
ret
int
xlat
dec
xor
insb
enter
or
mov
shlb
fimull
into
xchg
pop
in
in
xchg
repz
or
jge
push
adc
das
xor
daa
and
xor
dec
xlat
or
addl
xor
in
sahf
lcall
xchg
aas
dec
fidivl
push
aam
aam
ret
push
push
add
fisubs
lret
movsb
push
imul
out
mov
jg
cmp
hlt
and
das
pusha
push
outsl
cmp
sbb
pop
mov
pop
es
xor
jg
lahf
insl
repz
xlat
lret
pop
mov
jge
movsl
sbb
sbb
push
mov
mov
out
fwait
insl
push
sub
sahf
mov
gs
xchg
adc
mov
xor
scas
pop
addl
xor
movsb
cmp
cmp
fstpl
movsb
add
js
mov
fwait
push
add
pop
jg
mov
xchg
icebp
lock
adc
sbb
xchg
inc
dec
mov
push
mov
and
cmpsl
inc
shlb
sahf
rorb
push
dec
cmp
xchg
pop
cmc
enter
fwait
xlat
iret
pop
jge,pt
push
mov
sbbb
sarb
aas
jg
in
jp
stos
data16
data16
les
adc
movsb
std
mov
sub
fwait
into
bound
xchg
push
push
lret
lahf
popa
xchg
out
mov
add
mov
mov
xchg
xchg
pop
pop
int
xchg
inc
xor
or
lock
sub
repnz
inc
ret
iret
mov
sbb
mov
pop
sahf
int
repnz
subb
jg
fwait
push
xchg
xchg
pop
cmp
inc
in
es
mov
xor
stos
cs
out
out
xor
mov
xor
and
sub
pop
jne
mov
js
lret
inc
dec
fstps
push
xor
imul
ja
cwtl
mov
fbld
mov
fisttpl
sbb
clc
mov
cs
cwtl
test
fldenv
insl
data16
add
pop
fcmovb
gs
jae
inc
or
lret
shl
adc
sbb
xor
int
loop
stos
hlt
push
aad
cmp
and
mov
xor
inc
dec
or
jle
jo
jnp
and
out
dec
mov
rcll
inc
std
xlat
repz
cmp
pop
or
enter
jo
xchg
movsb
and
movsl
scas
out
subb
pop
fldenv
std
mov
add
jae
push
stos
imul
stos
sub
rorb
cmp
in
xor
lea
in
push
cmp
xchg
push
sbb
add
leave
data16
fndisi(8087
mov
push
lock
fs
xorb
pop
outsb
and
mov
xor
xchg
xlat
and
or
push
call
push
jp
xchg
xchg
jp
sbb
and
inc
testl
mov
mov
fdivl
cld
dec
pop
dec
int
adc
jle
test
je
dec
xchg
leave
dec
adc
sub
cmp
lods
xor
rorb
ret
insl
or
cmp
sbb
sbb
add
push
push
enter
cmc
inc
mov
into
dec
fstps
mov
dec
mov
jge
fsub
call
jae
sub
das
lods
jns
out
outsb
rolb
ror
or
repz
mov
lods
adc
mov
add
bound
pusha
dec
insb
pop
in
bound
mov
out
aaa
xchg
lret
jnp
sub
add
add
ficoml
ja
pop
leave
pop
inc
enter
lret
dec
faddl
sbb
xchg
sbbb
cmp
popf
cmpl
adc
jne
xchg
push
int
sahf
cwtl
inc
fnsave
cli
jnp
daa
scas
addr16
push
orl
jno
cmpsb
mov
jmp
dec
inc
xchg
jl
je
push
xchg
sbb
outsl
push
jb
push
lods
lock
icebp
out
and
fdivs
jmp
stc
xchg
and
sub
xor
adc
or
lcall
icebp
std
ja
cltd
cltd
shll
push
fisttps
inc
pop
pop
mov
cmpsb
and
and
daa
std
sub
rorb
daa
cwtl
nop
scas
xchg
cwtl
loop
ficompl
or
jmp
mov
pop
sbb
pop
add
mov
push
ret
push
cmp
cmc
shl
inc
mov
jge
cmpsb
ss
dec
jne
out
repnz
dec
rclb
into
pop
into
mov
insb
push
or
pop
push
jle
fidivrl
lock
cli
or
cwtl
inc
movsb
hlt
loope
add
daa
rolb
lahf
mov
fs
xchg
lock
ljmp
sar
lock
cli
iret
outsl
xor
movsb
pop
ret
sub
dec
mov
push
xchg
mov
int3
and
xchg
inc
mov
adc
ret
out
push
faddl
adc
jb
fs
pop
cmpsb
out
sub
mov
push
das
jae
aad
xchg
mov
int3
pop
stos
xchg
fstpt
out
into
mov
ljmp
add
out
xchg
repnz
cltd
cmp
dec
mov
push
sub
inc
dec
ret
adc
in
leave
xchg
lods
imul
pushf
in
aaa
jo
sbb
add
orl
adc
sbb
fmulp
push
sub
xor
hlt
dec
cmp
push
scas
popa
mov
subl
in
push
mov
cmpsb
cmp
or
mov
inc
pop
mov
sbb
mov
mov
cli
adc
outsb
orb
jae
sbb
cmp
mov
cmp
mov
pop
sub
ret
dec
lods
add
idivl
dec
sub
push
dec
inc
add
testl
mov
mov
clc
inc
xor
push
jle
or
fwait
xchg
mov
test
mov
xor
mov
mov
or
sub
sbb
fnstenv
dec
push
cli
adc
jp
cld
push
add
mov
sub
push
pusha
xchg
nop
pop
in
inc
popf
nop
test
stos
xlat
imul
sbb
inc
inc
inc
pop
push
stos
out
or
or
push
stc
fadds
shr
push
adc
hlt
out
sbb
pop
or
dec
arpl
scas
popf
and
or
loop
jnp
shll
xchg
hlt
loopne
or
push
fstps
push
cmpsb
pop
inc
xchg
bswap
addl
dec
adc
mov
loop
sub
or
das
fisubs
fldt
xchg
leave
inc
mov
mov
cmc
adc
dec
push
in
in
in
xor
arpl
push
push
loope
fcompl
ret
je
lods
fsubrp
aad
gs
gs
testb
sarb
aad
or
enter
scas
aaa
dec
xor
push
xchg
push
clc
fisubrs
push
data16
jmp
mov
cli
addr16
mov
ja
repz
mov
inc
jno
popf
push
shll
mov
in
lock
imul
bound
outsb
aam
xor
jmp
dec
jmp
into
inc
mov
xchg
gs
push
jl
or
aad
pop
ret
gs
pusha
adc
pushf
hlt
mov
adc
push
push
out
add
je
ljmp
or
xor
in
fs
lahf
jb
jmp
jmp
xchg
movsb
pop
fstpt
add
jg
stos
xchg
mov
push
sbb
jne
lods
out
lds
mov
jl
cmpsb
pop
cmp
in
std
push
clc
and
jge
sbb
xchg
xchg
filds
add
mov
ss
fcomps
es
and
dec
nop
pop
arpl
and
mov
inc
hlt
fsubrp
mov
aaa
sbb
popf
int
lahf
js
movsl
jb
js
mov
dec
jl
fnstenv
cmp
hlt
insl
mov
sti
xchg
stos
cmpsl
stos
mov
inc
sbb
cmpsb
insb
rorb
ljmp
mov
roll
repnz
lods
aas
push
pop
dec
push
and
repz
push
mov
mov
fwait
repz
lea
adc
fisttpl
icebp
mov
cmp
mov
adc
add
mov
out
loope
xchg
or
mov
pop
fsubl
mov
and
jle
fmulp
leave
xlat
adc
loope
mov
jle
xchg
sti
scas
in
call
in
inc
sub
movsb
mov
ret
add
jne
push
fiadds
cmp
les
mov
cmp
into
xor
mov
sub
les
dec
call
aad
hlt
in
cli
mov
sub
push
pop
aas
push
lahf
call
fmull
inc
mov
xor
mov
ds
ds
push
loope
inc
lods
loopne
aam
push
jb
scas
push
jge
pop
fdivrl
into
test
sbb
and
mov
rcll
mov
ja
rol
sub
into
jle
stc
push
pop
cmpsl
lea
pop
cmc
in
and
pmaddwd
lret
arpl
fsubrp
dec
rclb
mov
mov
loopne
in
lret
ljmp
pop
mov
push
daa
cmp
ja
push
outsb
cwtl
imul
push
or
sub
mov
jmp
or
xchg
mov
icebp
popa
outsl
jge
xchg
orb
mov
pop
sub
mov
ret
dec
pop
aaa
daa
sub
sbb
xchg
pop
pop
dec
sarb
mov
mov
and
sbb
nop
xor
pop
xor
xor
xor
ja
test
outsb
rolb
pushf
cs
dec
aam
dec
adc
aas
cmp
jne
lret
addr16
insb
shrl
dec
xor
jp
lds
xchg
sbb
fidivrs
mov
int3
sbb
ja
mov
fwait
sub
in
das
cmovl
fidivrs
sarl
push
lods
dec
rcll
nop
jne
lea
into
sbb
cld
or
push
mov
cmpsb
imul
lret
mov
push
mov
shr
jb
cmc
jbe
dec
xor
mov
mov
or
scas
push
leave
push
cmpsl
jno
mov
mov
mov
outsb
or
adc
xor
dec
pop
test
insb
xchg
lret
mov
repz
cltd
cld
repz
add
mov
lret
adc
lods
and
stc
dec
push
jne
jecxz
in
xlat
xchg
addr16
xchg
rdpmc
gs
repnz
jg
xor
fdivl
sbbl
add
imulb
ret
mov
xchg
outsl
dec
ljmp
into
out
sub
mov
jge
lock
jne
lods
pop
inc
xor
mov
lods
imul
jge
and
mov
cmp
dec
fnstcw
cld
and
lods
sub
outsl
and
fimull
insl
mov
test
leave
push
repz
pop
rolb
mov
or
sbb
xchg
mov
out
xchg
inc
adc
pop
repnz
repz
mul
sbb
ficompl
sub
out
stos
pusha
aas
je
scas
popf
cmpsl
sti
imul
push
and
adc
lods
mov
push
outsl
and
in
dec
or
mov
orb
pop
lds
dec
loopne
adc
cld
out
es
dec
and
jno
xchg
and
ljmp
mov
lods
mov
adc
adc
movsl
movsb
loope
mov
js
jns
call
test
mov
lea
fsubp
jecxz
aam
fwait
pop
loop
cs
jb
in
loopne
push
sbb
imul
mov
jae
shlb
or
and
mov
rcrb
pushf
pop
jl
clc
les
popf
dec
insb
or
ds
xlat
or
or
test
cwtl
arpl
pop
repnz
xchg
mov
hlt
and
dec
popf
mov
int
popa
push
xchg
xchg
outsl
or
mov
lods
jecxz
inc
jns
lahf
jo
insl
mov
mov
ljmp
ret
mov
jle
insl
adc
push
pushf
imul
hlt
cli
fcomps
cmp
mov
xor
inc
dec
mov
iret
int3
rolb
in
arpl
sub
mov
and
and
jno
xor
and
adc
jl
jns
mov
outsb
jo
xchg
push
test
aam
fisttps
addl
enter
adc
inc
dec
jmp
rcrl
and
jo
jno
cwtl
cwtl
sub
mov
mov
mov
lcall
stos
xchg
pop
fistps
push
push
mov
pop
pushf
xchg
xor
pop
cld
add
xchg
clc
add
fisubrs
lods
ss
sbb
push
sub
lods
adc
push
loop
js
orl
and
outsl
xchg
int3
mov
int3
cmp
aas
aaa
or
push
inc
flds
nop
push
mov
push
pop
mov
xchg
xchg
inc
mov
daa
in
xchg
in
addr16
sti
stos
xor
mov
jae
lods
fs
pop
pop
adc
movsb
sub
out
jae
add
adc
add
mulb
add
xor
pusha
push
aaa
sbb
lea
jge
mov
mov
push
mov
fisttps
add
dec
loopne
xchg
test
jl
push
sbb
mov
icebp
push
mov
push
test
adc
dec
jae
arpl
sbb
rclb
jmp
sbb
adcl
pop
pop
insl
or
aam
mov
dec
fadds
xor
loop
cmc
es
push
popa
pop
testl
inc
xchg
add
out
sub
fldl2t
clc
push
jge
dec
and
into
pop
sarb
fidivl
pop
push
addr16
imul
popf
cmp
xlat
loopne
xchg
add
hlt
inc
repz
out
mov
ja
and
int3
jle
jl
cmp
pop
test
cmpsl
adc
repz
loope
inc
cmp
sti
into
fdivrp
inc
stos
pushf
je
lea
adc
enter
sbb
fnstcw
mov
lock
lea
and
jle
sub
rolb
pop
enter
mov
lret
add
push
test
cmpsl
imul
mov
outsl
inc
lcall
shlb
es
sbb
cwtl
pusha
xor
cmc
jnp
fisubrl
and
jmp
cmpsb
mov
adc
stos
dec
mov
lret
ret
sbb
dec
add
xor
sbb
mov
sub
pop
add
call
daa
xchg
sahf
iret
mov
fidivrl
test
idivb
pop
repnz
fwait
fs
das
test
xchg
out
pop
mov
xchg
lods
les
dec
xchg
mov
les
lcall
popf
repz
int
stos
cmp
mov
dec
mov
and
sahf
add
push
jno
mov
pop
jg
fisttpll
dec
or
jno
push
mov
sbb
xor
push
mov
insl
mov
arpl
mov
add
sbb
xchg
addb
xor
xor
dec
inc
repnz
sbb
fwait
dec
sub
mov
mov
cmp
daa
mov
sbb
push
stc
and
rcll
sbb
sahf
rorb
xor
lcall
sbb
or
add
cld
loop
push
dec
fildl
inc
push
cli
cmpsl
sbb
push
inc
cmp
pop
inc
lret
inc
inc
inc
ret
and
je
insb
out
adc
lock
cmc
mov
sahf
cmp
ret
xor
out
mov
test
mov
cmp
pop
jg
dec
inc
xchg
test
pop
sub
lds
fcmovnb
sub
ss
mov
inc
int3
enter
pop
mov
stos
mov
ljmp
repnz
jmp
lcall
aas
pop
jb
fwait
lahf
lret
cvtdq2ps
mov
pushf
sbb
loope
mov
mov
test
das
aaa
xor
popa
mov
fdivs
scas
fidivrs
mov
into
mov
pop
push
aam
das
xchg
dec
pop
dec
push
jecxz
arpl
sbb
in
push
in
xchg
dec
jl
xchg
aaa
sbb
imul
rcrl
call
or
dec
sub
push
test
fisttps
mov
sub
push
jecxz
popf
jecxz
cmp
xor
sbb
jbe
mov
int3
add
je
jns
repz
js
ja
mov
pop
addr16
cmp
mov
addr16
faddl
jecxz
into
jmp
popf
fucom
sub
in
push
push
xadd
adc
inc
sti
pop
lock
mov
push
in
jg
addl
mov
xor
mov
lret
pop
ss
call
pop
out
push
icebp
xlat
clc
cmp
iret
pop
mov
sub
jae
jl
jge
pusha
ret
jns
enter
and
test
jg
cmc
sub
rorl
xchg
arpl
xchg
mov
insb
sub
pushf
aad
loope
stos
mov
ret
mov
add
push
inc
jbe
lds
inc
adc
bound
dec
ficompl
subl
stc
xor
adc
sub
mov
ja
pop
mov
pop
aas
sbb
insb
inc
loope
push
xchg
mov
mov
push
or
sbb
mov
xchg
sbbb
cmp
xchg
cwtl
mov
pop
movsb
inc
sahf
inc
or
mov
aas
fidivrs
fidivl
cld
imul
movsl
jecxz
daa
out
or
ds
jnp
movsl
shrb
mov
inc
imul
ror
mov
push
insl
out
xchg
sub
push
cmp
adc
dec
jp
jmp
mov
pop
insl
fldl
int
jnp
icebp
mov
cs
subl
pop
enter
lods
out
adc
fmul
mov
mov
cltd
ficompl
push
fucomi
sbb
bound
inc
sub
loope
and
aad
out
int3
push
cmp
pop
mov
mov
push
pop
mov
insb
cld
hlt
jp
lock
into
mov
and
dec
shlb
subb
and
out
add
sub
xor
adc
fs
das
mov
clc
xchg
fildl
push
repnz
jg
push
inc
jne
sbb
loop
mov
dec
jmp
pop
xorb
pop
inc
ficomps
imul
add
inc
pop
mulb
jmp
leave
mov
mov
out
or
sub
mov
fisubs
ret
cmc
or
out
jp
add
mov
out
pop
shl
mov
outsb
mov
cli
xlat
mov
scas
sub
jo
cmp
inc
data16
ret
fidivs
dec
xchg
jne
xchg
jbe
loop
mov
addr16
cmp
stc
xor
or
fidivl
lods
pushf
int3
push
adc
jge
xchg
push
and
sbb
mov
sub
adc
call
jge
outsl
scas
cmp
or
pop
lcall
inc
in
loop
inc
sbb
aaa
movsb
push
jnp
int
out
test
out
push
push
add
cld
adc
and
jns
imul
ljmp
ds
sbb
loopne
dec
jecxz
in
stos
movsl
pop
jns
sub
jg
test
idivb
andl
jb
cmc
outsb
jo
sub
push
xchg
fwait
cmc
lock
sbb
add
add
dec
jne
pop
mov
int3
dec
dec
pop
cmp
add
test
push
and
push
fsubrs
loope
pop
mov
dec
pop
iret
stos
scas
mov
pop
cmp
fs
mul
xor
xchg
xor
jge
insl
mov
out
add
mov
inc
sub
cld
adc
push
mov
sub
jle
movsb
dec
sbbb
out
gs
aam
daa
pop
ds
shll
rorb
test
mov
fisubs
mov
sub
mov
xchg
jno
cmp
sbbl
inc
mov
jmp
cmpsb
xor
aaa
xlat
push
push
xchg
cmp
jge
xchg
xor
dec
push
ljmp
fistl
pop
aad
adc
push
cld
cmp
lods
fnsave
jb
je
lods
enter
insl
cs
rolb
cmp
inc
fdivrl
push
and
add
hlt
or
push
cmp
test
movsb
das
cld
adc
xchg
cs
mov
arpl
loop
add
add
jno
mov
ret
and
adc
mov
sbb
xchg
stos
aas
and
int
inc
loopne
loop
push
xchg
fisubs
cmpb
and
xchg
mov
and
mov
sbb
into
or
cmp
sub
js
xor
pop
cmpsb
ret
jmp
popf
push
jnp
in
mov
pusha
ljmp
pop
and
inc
xchg
fcomps
adc
sub
arpl
es
ljmp
cmp
mov
mov
jns
roll
pop
les
bound
xor
mov
arpl
inc
add
cli
xor
pushf
pop
mov
sti
fldl
mov
imul
insb
fcomp
repz
dec
mov
inc
test
int
add
shll
js
aam
add
pop
or
in
fisubrl
jb
push
inc
gs
outsb
adc
sbb
xchg
or
mov
dec
push
mov
icebp
or
loope
dec
hlt
cmp
ja
loop
loopne
test
push
mov
xor
xor
fisttpll
push
outsl
lahf
sub
cmp
andl
fimull
pop
xchg
sub
lds
add
cmp
popa
cmpsb
xchg
ret
shrb
mov
in
aad
inc
mov
pop
push
pusha
loopne
rorl
lahf
and
xor
aam
scas
outsb
lret
test
push
cmpsl
mov
pusha
in
dec
adc
jle
pop
shl
sub
mov
arpl
pop
mov
mov
fcmovu
cwtl
and
sar
xchg
add
shr
repz
sbb
inc
cmc
into
sbb
movsl
mov
les
add
and
movsb
mov
jo
test
add
xor
shrb
pop
mov
mov
pop
cmp
sub
mov
ds
out
or
lods
les
sbb
push
ret
jmp
push
test
mov
sub
mov
jg
sbb
ficompl
lea
mov
jb
and
xchg
adc
mov
xor
mov
aam
add
inc
cwtl
xchg
pop
or
in
in
addr16
repnz
or
pop
mov
and
pop
adc
cmp
mov
dec
lahf
jle
sbb
ja
std
data16
xchg
mov
push
sub
xor
pushl
repnz
xchg
jg
cmp
sbb
jo
mov
cwtl
imul
xchg
xchg
sub
cmpsl
or
or
push
adc
or
dec
adc
and
xor
subb
jbe
xchg
jbe
push
aas
adc
je
repz
add
mov
in
inc
roll
xor
adc
or
dec
lahf
cld
jnp
movsb
or
jmp
jnp
adc
push
cmpb
loop
sub
cld
cltd
pop
adc
lods
mov
ret
pop
dec
cmp
xor
fists
pop
cmpsb
xchg
ja
sahf
lahf
cs
pop
leave
mov
xchg
out
add
mov
mov
sarb
adc
sarl
inc
push
pop
and
repz
fnstenv
dec
dec
fstpl
xor
adc
mov
stos
mov
inc
stc
std
fimull
dec
adc
aam
aas
lret
popa
inc
sub
xchg
fcompl
sarl
cmpl
rcrb
mov
inc
xor
sub
push
es
ror
inc
cmpsl
arpl
gs
mov
mov
inc
or
adc
pop
and
pop
adc
shlb
inc
das
fisubl
jno
fdivrp
mov
and
jo
inc
js
mov
jno
pop
sbb
lods
mov
ret
cmp
stos
shll
pop
and
jge
dec
cmp
pop
dec
xchg
fists
in
xchg
rorb
gs
test
mov
cmpsb
aaa
jl
mov
mov
outsl
mov
push
jecxz
mov
dec
addr16
dec
or
fcom
call
and
sbb
xchg
sub
inc
push
pop
cwtl
cmp
add
mov
mov
andb
mov
gs
mov
and
or
xor
ret
xor
cmpsl
setp
xchg
movsl
cwtl
jnp
pop
shrl
xlat
int3
movb
mov
dec
mov
xchg
and
and
popa
mov
fsubrp
or
sbb
lcall
jb
stc
out
imul
xor
dec
push
repz
sbb
mov
jl
adc
lock
and
mov
inc
std
jge
adcb
or
idiv
xadd
nop
pop
add
dec
and
mov
shll
shlb
mov
sbb
inc
dec
lods
aas
popf
sub
daa
sbb
xadd
inc
sub
lcall
enter
pop
mov
ds
leave
adcb
mov
jp
sbb
cwtl
imul
mov
jno
aam
mov
pop
leave
js
jp
pop
es
xchg
and
mov
and
data16
xchg
adc
adcl
repnz
stos
add
js
pop
inc
imul
sar
aam
jae
mov
jns
inc
lret
xchg
push
xchg
jle
cmpsb
cmp
mov
les
adc
push
xor
pop
sub
in
addr16
pop
xor
xlat
mov
sbb
cs
fs
frstor
and
pop
sub
sbb
mov
in
cmp
sahf
je
jns
cli
mov
stos
lock
dec
sbb
daa
push
push
and
sbb
int3
add
pusha
mov
popa
and
cs
nop
cwtl
add
sub
in
movsb
jnp
inc
add
mov
push
mov
stos
shll
push
push
scas
bnd
scas
xchg
orb
pop
mov
or
mov
fidivrs
pop
dec
popf
sti
mov
xchg
ja
jb
push
dec
aas
or
pop
outsl
insl
pop
and
xchg
pop
mov
sbb
js
stos
cmp
scas
jge
ficoml
addr16
adc
pop
and
adc
das
inc
enter
push
sub
mov
insb
repz
sbb
xchg
sbb
adc
out
cmp
rolb
jnp
es
mov
imul
sub
and
xchg
mov
les
xor
jbe
std
pop
push
jo
loop
lret
fisttps
sbb
cmpsb
xor
push
xchg
int
dec
adc
mov
jg
insl
test
mov
xchg
arpl
or
jnp
xlat
mov
push
outsl
pusha
mov
sub
mov
cli
aam
mov
jne
std
js
lcall
and
fimuls
mov
sahf
mov
test
scas
int3
ja
jl
mov
add
mov
mov
shr
fmull
xor
outsl
shll
fiadds
repz
pop
sub
inc
xlat
xchg
mov
mov
xor
xchg
pop
or
nopl
arpl
lahf
scas
movb
add
xchg
adcl
and
aad
cmp
push
call
xor
sub
jl
dec
jl
cmpsb
pop
mov
sbb
sbb
push
jg
and
sbbl
adc
std
sti
fldenv
fsubr
sbb
push
ljmp
mov
outsb
jmp
xor
jb
push
push
or
fscale
mov
pop
lods
ret
hlt
leave
mov
shrb
adc
cmpsl
mov
jae
xor
sub
and
fnstsw
aad
outsb
hlt
sub
call
cltd
loop
or
jecxz
arpl
mov
push
push
bound
mov
cmp
mov
out
aam
mov
dec
shl
leave
bound
mov
mov
or
outsb
pop
addr16
mov
clc
mov
in
stos
push
loope
fnstcw
dec
fidivrl
cwtl
add
ljmp
add
fmuls
ss
push
and
mov
mov
xchg
fcoml
inc
daa
xchg
pop
xchg
enter
jne
cmc
jb
sub
cmp
lds
mov
negl
lcall
cmp
mov
pop
jo
fcmovbe
mov
mov
and
push
inc
cwtl
xchg
clc
outsl
jg
sbb
lahf
sub
push
inc
rorb
mov
lock
inc
mov
push
out
jbe
out
cmp
pop
jo
inc
push
sub
shlb
adc
dec
les
mov
and
xor
inc
xchg
jnp
mov
cmp
sub
pop
shlb
psubusb
insl
incl
pushf
es
sub
loopne
adc
je
ds
cmpsl
mov
lea
das
test
inc
sbb
repnz
sti
and
test
sarb
pop
aas
pop
and
xchg
jge
dec
push
jno
mov
xchg
xchg
xor
dec
aaa
lds
jmp
stos
cmp
cs
imul
mov
lea
outsb
fs
dec
mov
dec
add
gs
mov
enter
lock
sbb
mov
mov
push
cmp
sub
jge
push
dec
enter
mov
inc
xor
cld
in
lds
add
jl
jge
sbb
xor
out
pop
push
test
cmp
rcrb
sbb
sbb
inc
and
push
cmpl
mov
jmp
push
and
movsl
pop
mov
scas
popa
push
fnsetpm(287
inc
or
push
out
push
mov
loop
sahf
ja
or
cmc
fs
jle
test
out
pop
aas
xor
in
mov
cmp
or
xchg
jg
push
scas
int
std
test
adc
or
cmp
xchg
xchg
sbb
sub
sti
xchg
popa
movsb
rol
pusha
or
add
sti
dec
sbb
mov
lcall
out
sbb
and
pop
test
jno
cltd
aad
negl
add
subl
repnz
stos
inc
rclb
dec
sbb
pop
ret
xor
mov
xchg
jl
mov
icebp
xchg
filds
dec
outsl
stc
data16
stc
loope
bound
aas
arpl
shlb
ljmp
add
data16
fstps
and
fs
arpl
nop
bswap
stc
pop
jns
mov
mov
ss
cmp
pop
pop
pmullw
jo
lret
ljmp
call
movsl
jmp
pusha
push
jo
icebp
cmpsl
sarb
dec
mov
and
insl
ss
push
xchg
insl
repz
xchg
aas
in
iret
inc
rcrl
lds
test
aad
add
mov
insb
dec
mov
cmp
jns
cmp
cmc
repz
mov
es
mov
and
std
movsb
and
inc
cmp
or
test
dec
and
add
outsl
fs
mov
roll
xchg
cmp
cltd
mov
lods
inc
xor
pop
sub
insb
xchg
ror
rcrb
or
xor
mov
jnp
add
icebp
xor
aam
dec
pop
xlat
sub
pop
push
roll
inc
add
mov
add
xchg
cwtl
jo
adc
push
add
add
xchg
pop
lods
mov
xor
imul
pusha
fisubrs
out
mov
stos
adc
pop
test
mov
lcall
sti
sub
jb
hlt
insb
jecxz
inc
int
cltd
cmp
aaa
jo
sbb
jle
cmp
shl
addb
js
dec
and
imul
pop
and
out
and
bound
xor
aad
xchg
xor
and
fidivl
adc
movsb
adc
cwtl
adc
loopne
xchg
cmp
xor
mov
sti
bound
jno
pop
js
aad
aas
jle
inc
add
int3
ds
adc
loop
pop
sbb
push
std
cmpl
mov
pop
lret
shl
es
xchg
pushf
incb
stc
inc
and
inc
pushf
mov
imul
or
movsb
and
or
xlat
cmp
dec
xor
xchg
add
mov
push
btcl
mov
fnstenv
or
xchg
out
dec
iret
subb
rolb
out
sub
lcall
cmp
js
dec
js
push
hlt
fnstcw
xchg
fisubrl
sti
xchg
in
push
fcoms
xor
fisubs
mov
popf
or
pop
mov
sbb
aas
pop
lea
dec
in
push
xor
dec
sbb
ss
nop
xchg
inc
mov
adc
stc
call
outsb
xchg
fisubl
add
loope
xor
lret
jae
mov
adc
out
notl
mov
cld
shll
dec
aaa
pop
or
orl
idivl
push
cmp
subl
xor
cmpsb
adc
sti
dec
lods
add
mov
rolb
aad
fmul
loope
pop
xchg
nop
sub
ficoml
sbb
fsubl
sub
sub
sbb
loop
xchg
and
mov
sub
and
shr
sbb
or
sbb
scas
pop
into
mov
scas
push
dec
add
js
xor
cli
jnp
mov
lock
loopne
ljmp
cmp
fldt
out
aad
pop
or
mov
movsb
loopne
sub
dec
jno
inc
cli
imul
sub
loopne
aad
pop
push
cmp
pop
les
stos
fstps
call
or
jo
xorb
jmp
dec
inc
inc
sub
andl
jno
push
mov
icebp
mov
or
scas
enter
mov
pop
outsb
and
out
addr16
mov
mov
adc
mov
popa
xor
mov
loope
jge
push
verw
lods
mov
xchg
sub
mov
xchg
pop
sbb
clc
inc
mov
mov
xchg
shll
aaa
xchg
hlt
ret
or
aas
aad
das
hlt
dec
push
inc
loopne
pop
adc
and
aam
sahf
sbb
jo
fsubl
and
jg
scas
xor
sbb
inc
xor
pop
sub
je
das
in
sub
sbb
pop
jp
jg
mov
push
xor
lods
jbe
xlat
or
add
call
ret
in
add
leave
dec
sbb
enter
or
cmp
fldcw
outsb
xchg
push
mov
cmp
adc
sub
gs
sbb
movsl
into
in
mov
lcall
shlb
sub
jmp
jl
mov
arpl
sub
or
mov
add
inc
jp
xlat
adc
and
inc
pop
pmuludq
push
and
fs
cmp
mov
in
pop
jbe
xchg
outsl
mov
mov
insb
mov
cmpsl
jbe
jle
sbbl
or
rclb
pop
adc
out
jp
xchg
test
push
nop
jecxz
sub
mov
dec
int3
xchg
mov
lcall
ja
mov
outsb
pop
movsl
push
repnz
pop
jne
xor
pop
mov
inc
cs
pusha
stos
scas
adc
inc
adc
and
xchg
add
pop
xchg
in
lods
jmp
imul
ja
jbe
dec
jae
cwtl
push
int
mov
adc
jne
pop
ja
pop
adc
testl
mov
adc
jle
addr16
xchg
lahf
xchg
xor
pop
mov
repz
cmp
int3
decl
push
or
jg
mov
push
xchg
fdivr
inc
scas
jmp
jle
dec
sbbl
sahf
xchg
decl
rolb
mov
cltd
outsb
push
or
hlt
sub
or
xlat
add
mov
out
push
test
mov
xchg
pop
jmp
inc
movsl
jl
push
cmp
mov
or
jmp
push
pop
jb
push
adc
lods
xor
cmp
mov
notl
jns
fnsave
cwtl
hlt
sbb
xchg
int3
popf
xchg
cld
out
xchg
dec
or
pop
or
mov
push
cmpsb
mov
pop
cld
ss
cmpsb
xchg
xchg
cmc
jb
push
pop
out
xchg
mov
popa
fldenv
add
rol
enter
jns
xchg
jnp
push
call
and
into
and
scas
or
mov
inc
jb
mov
lret
push
call
and
out
iret
sub
inc
fsubrs
aaa
sub
sti
mov
nop
pop
lock
shrl
into
xorb
lea
sub
roll
or
sub
daa
jecxz
adc
repz
xchg
adc
push
jge
sub
mov
or
xchg
inc
inc
leave
scas
lock
ret
dec
in
repnz
jp
rclb
out
and
or
cmc
shrl
pop
dec
and
sahf
mov
sbb
fdivrl
lret
inc
shrb
mov
jnp
dec
jb
dec
clc
fildll
ret
shr
mov
cmpsl
dec
into
scas
mov
je
cmpb
sub
dec
cli
cwtl
scas
cwtl
je
movsb
icebp
dec
xor
jo
xor
imul
xor
inc
mov
ss
pop
aaa
xor
test
inc
jne
loop
pop
push
pop
jb
jns
daa
outsb
cltd
test
cltd
dec
jg
aaa
adc
lds
mov
subl
mov
jns
sahf
popa
xchg
push
dec
js
movsb
xchg
mov
push
lods
cltd
pop
jp
mov
sbb
gs
xchg
imul
repnz
jo
insl
lds
test
das
sub
pop
cmp
jae
xchg
add
sub
xchg
shl
cli
push
sahf
stos
dec
xlat
mov
or
loop
xlat
cmp
int3
fisubs
les
and
mov
cmp
xchg
xchg
test
adc
xchg
xchg
xchg
sahf
shll
pop
or
mov
dec
add
pop
mov
and
push
xor
jle
aam
fmull
aas
and
cli
jae
cwtl
mov
out
and
test
push
jae
andb
and
sti
mov
sbb
sub
daa
fsubrl
les
in
icebp
xlat
imul
xchg
or
mov
jle
lret
sub
cltd
fistpll
sbb
sub
add
mov
mov
xor
mov
jmp
addb
aas
inc
push
pop
jne
mov
pop
mov
adc
in
xor
repz
inc
or
rcr
dec
jle
sarb
mov
and
inc
mov
iret
adc
jnp
sbb
cmpsl
sbb
out
mov
jmp
imull
mov
mov
inc
ficoms
pop
mov
insb
ficoms
dec
lret
rclb
inc
popa
jmp
or
push
mov
dec
mov
mov
shll
push
xchg
nop
dec
jmp
das
mov
in
push
jb
sbb
and
loope
dec
movsb
dec
jns
fisubl
shr
loope
int
insb
mov
stos
jmp
sbb
ljmp
inc
xor
mov
cmp
push
add
mov
push
cmp
das
test
sahf
push
sub
clc
in
mov
sbb
loop
xor
out
push
shll
int3
inc
pusha
hlt
and
jge
mov
lock
idivb
add
int
push
leave
mov
gs
lods
add
push
pop
dec
push
mov
nop
xchg
testb
fbld
sbb
lret
notb
push
mov
mulb
xchg
jle
sub
in
xchg
mov
dec
pop
fildll
and
nop
add
loope
loop
mov
jp
shrb
adc
adc
adc
mov
pusha
out
push
movsl
fildll
popf
cmp
in
addb
push
cmpsb
inc
pop
sarl
xor
xlat
neg
rcrb
test
cwtl
in
pop
cli
or
xor
adc
push
aad
jnp
jp,pt
leave
pop
rolb
push
pop
jno
cmp
sub
sti
or
cmpsl
inc
dec
jbe
stos
push
mov
sub
mov
xchg
addr16
gs
fwait
cmp
out
lahf
pop
cld
push
popa
or
fwait
sbb
sti
stos
cmp
jb
jecxz
adc
push
or
push
das
stos
aam
bound
cmp
jns
in
push
scas
push
out
aam
mov
xchg
dec
lods
addr16
xlat
mov
fidivl
roll
cmp
mov
lods
dec
pop
js
arpl
cmovb
lret
outsl
addr16
push
mov
sub
aaa
addr16
adc
mov
or
pop
lds
psubusw
fucomp
inc
jo
mov
les
inc
sub
in
xchg
ljmp
imul
adc
rcrb
mov
jge
popf
test
or
mov
jge
push
shrb
outsb
inc
test
ret
mov
xchg
xchg
or
mov
mov
xchg
mov
pushf
and
mov
icebp
call
dec
inc
jne
out
xor
or
or
leave
xor
setne
mul
sub
and
mov
orl
inc
rclb
jmp
sbb
loop
les
outsl
bound
xchg
jb
mov
rep
aam
adc
inc
test
or
mov
shrb
push
nop
cmp
stc
nop
out
pusha
stos
cmc
fwait
cld
jns
roll
push
push
shrl
sub
push
mov
ja
scas
cmp
inc
and
sti
mov
jae
popf
mov
jne
lock
pop
add
lea
shll
push
cmpsb
shl
pop
mov
jno
push
mov
out
mov
mov
jbe
loopne
pusha
stos
idivb
jae
lahf
js
xor
xor
cmp
in
js
push
xchg
jo
icebp
loopne
enter
add
sub
jnp
ret
sbb
cmp
aad
push
add
pop
testb
int
repz
dec
cmp
gs
mov
std
shrb
lods
inc
add
mov
pop
mov
fsubrl
sti
mov
pop
push
xlat
jle
adc
pop
mov
dec
sub
test
ss
jge
sub
add
push
mov
fcomp
cld
sbbl
and
push
xchg
loop
xchg
daa
lret
lret
mov
cmp
pop
xchg
mov
lds
negl
sbb
mov
jle
push
cmpsb
fst
dec
and
sub
jo
pop
mov
mov
int
jae
in
cmp
pop
out
cmp
mov
sbb
jae
sbb
call
sti
xor
inc
adc
nop
aaa
push
xchg
add
cmp
or
pop
add
pop
sub
lcall
mov
scas
pop
sbb
jo
arpl
mov
das
aaa
mov
cmpsl
in
orb
and
sbb
ds
insb
lret
in
frstor
mov
adc
sbb
nop
add
addr16
mov
mov
sub
fisttpll
dec
dec
dec
call
mov
mov
jae
and
jo
shll
pop
ror
in
enter
push
push
mov
mov
sub
cmpsb
dec
and
dec
jbe
daa
xor
sbb
jg
lea
fbstp
sub
pop
xchg
mov
in
out
lret
xor
mov
jge
pop
sub
ljmp
mov
add
pop
xchg
fucom
mov
pop
insl
add
xor
sub
stos
lock
ds
jbe,pn
enter
addr16
aam
out
ljmp
push
adc
adc
out
xchg
pusha
mov
fcompl
dec
sub
shl
ja
test
mov
aas
js
mov
adc
outsl
sbb
das
test
and
pop
xor
sbb
dec
jmp
pop
ret
arpl
push
imull
inc
out
fwait
stc
ror
or
cli
mov
jmp
or
cmp
mov
and
dec
add
mov
negl
sti
enter
int
aam
stos
jp
inc
push
cmp
stos
dec
in
repz
cwtl
out
mov
push
push
push
ret
sbb
mov
ja
clc
and
iret
or
shl
insl
pop
jle
imul
add
jmp
adc
es
data16
loopne
sub
lods
cmpsb
and
sbb
idivl
outsl
mov
jp
push
out
push
jo
stos
popf
or
jo
mov
fcoml
sahf
iret
lahf
dec
lock
hlt
pusha
lock
sub
mov
xor
fsts
imul
pushf
lea
pusha
loope
fildll
jg
scas
data16
adc
je
xlat
adc
frndint
mov
mov
mov
jp
inc
push
pop
push
dec
mov
jo
pop
mov
xchg
mov
mov
adc
pop
imul
fnsave
pop
or
test
adc
sbb
cmp
scas
mov
loopne
jl
lret
lods
push
bound
mov
lcall
sub
lret
outsb
mov
sarb
pop
mov
xchg
push
test
or
dec
nop
enter
je
add
xchg
clc
jecxz
lods
rclb
lea
and
mov
dec
shlb
popf
mov
inc
stc
add
test
xor
shrl
outsl
inc
js
add
loopnew
adc
ret
ss
push
cmp
test
sub
and
les
mov
mov
dec
rol
cmpsb
aaa
push
xchg
or
cwtl
aad
xchg
out
jns
pushf
cmpsl
lods
test
pusha
mov
xor
sbb
sbb
sub
sbb
aam
push
cli
jle
jns
or
xchg
dec
mov
pop
fisttpl
sbb
dec
lret
dec
xchg
stc
and
inc
mov
xor
fisubrl
aaa
cmp
stos
or
daa
in
lret
lret
or
in
and
adc
sbb
dec
sbb
sbb
xor
adc
inc
cmp
mov
add
addl
push
push
jge
ljmp
jp
xor
sbb
push
adcl
sbb
add
inc
and
add
sbb
xor
xor
mov
cwtl
lods
jmp
inc
mov
fxrstor
mov
in
xor
sbb
dec
rcll
pop
cs
gs
dec
cld
push
mov
lds
cmp
cmc
popa
cld
mov
out
orb
xchg
mov
in
pop
add
sahf
mov
jno
mov
lahf
pop
and
add
dec
cld
loop
pop
adc
shlb
dec
aam
inc
jge
hlt
sub
insl
ret
jmp
mov
jbe
sarb
push
stc
ja
lods
cwtl
pop
fimull
stos
inc
mov
sub
cmp
mov
dec
shlb
push
adcb
stos
js
push
adc
repnz
xchg
test
mov
mov
repz
add
jmp
cld
inc
hlt
mov
and
adcb
call
push
sub
or
inc
add
nop
add
add
xor
adc
mov
js
cwtl
arpl
mov
test
loop
sbb
lret
sbbl
ds
cltd
lea
test
dec
sbb
pusha
cmpsl
sub
cld
data16
call
lahf
aaa
inc
adc
enter
push
mov
mov
add
gs
ret
xor
test
dec
xor
add
in
add
enter
cmc
mov
fcoms
lahf
push
fisttpl
mov
lods
aaa
xor
pop
inc
lea
faddl
pop
sub
cmp
inc
fimull
mov
xor
es
add
mov
or
add
push
mov
or
xor
enter
xor
lods
mov
inc
jns
jns
rorb
test
dec
fidivrl
mov
nop
xchg
adc
sbb
lret
cmp
cmp
aam
nop
dec
gs
lcall
icebp
fnstenv
pop
pusha
aam
adc
xchg
addr16
je
mov
outsl
sub
jge
popf
push
push
mov
sub
andb
mov
stc
cli
loopne
push
cld
mov
jg
mov
push
or
mov
sbb
push
mov
inc
js
pop
add
sub
push
jg
cltd
add
int3
rcrl
lahf
loope
movswl
add
lods
inc
or
push
sub
mov
pop
xor
sub
sub
inc
inc
lahf
popf
arpl
movlps
rcr
inc
inc
ret
push
xchg
mov
lock
jg
pop
dec
dec
mov
aaa
and
rcrl
adcl
dec
mov
sbb
fiaddl
or
je
lahf
rcll
push
pop
push
sarl
scas
call
mov
lahf
lea
xor
fcoml
dec
and
fisttpll
es
testb
aas
lahf
sbb
xor
divb
sti
mov
sub
push
lea
jg
je
and
hlt
cmp
cmp
adc
mov
inc
xchg
mov
inc
lock
adc
int3
addr16
daa
push
push
out
and
je
loopne
push
stc
addb
in
sbb
loope
mov
pop
jo
out
daa
flds
adc
enter
nop
add
hlt
push
sahf
inc
aas
das
out
inc
shl
stc
outsb
mov
jo
xchg
sub
inc
test
sub
ret
mov
or
mov
push
jmp
mov
and
lock
in
adc
cmpsb
dec
mov
es
stos
or
jmp
pop
lods
lret
pop
inc
dec
stos
out
sbb
mov
jmp
dec
nop
mov
xor
imulb
sub
nop
mov
xchg
mov
scas
sbb
test
mov
scas
xor
decb
cmp
mov
mov
cmpsl
clc
shrl
sbb
lds
xchg
xchg
incl
loope
out
pop
imul
cmpsb
xchg
sub
stos
pop
fldl
push
in
add
cmp
ds
cmp
repnz
mov
shll
pop
cld
cli
sub
mov
je
xor
fs
or
nop
bound
sahf
push
notb
dec
pushf
xchg
int3
lock
inc
ror
jnp
push
sbb
mov
sub
ljmp
lods
mov
fs
or
xor
xchg
ja
xchg
out
xor
outsb
sub
dec
imul
jae
ret
adc
jle
mov
aam
mov
call
imul
and
aas
pushf
rcr
repnz
test
shrb
adc
lahf
xchg
fcoml
mov
sub
aam
add
jmp
lds
push
pop
mov
or
mov
and
loop
sbb
mov
jg
dec
loopne
sbb
insb
not
push
sub
scas
dec
iret
mov
fdivs
js
lcall
in
addr16
andl
stos
fcomps
cmp
mov
xchg
loope
lds
scas
js
cmpsb
mov
pusha
lock
imul
mov
pop
sbb
aas
aad
pop
pop
cmp
or
dec
ret
inc
test
jb
mov
sub
push
sub
ret
repz
mov
shl
rolb
pop
dec
jg
jecxz
adc
mov
idivl
repnz
push
xor
lods
jle
test
hlt
out
xor
pop
or
cli
cmc
jmp
les
mov
add
jb
or
push
mov
mov
add
mov
sub
sub
or
ja
pop
and
mov
movsb
addr16
and
inc
add
popf
push
cmp
dec
push
insl
test
iret
add
mov
jecxz
sub
pop
cmp
loop
and
rcl
push
aaa
mov
push
jecxz
inc
pop
jecxz
push
sbb
outsl
jnp
subl
out
pop
bswap
movsb
scas
cld
mov
dec
out
adcb
xor
jg
jmp
jno
outsl
jle
sub
fmul
push
xchg
enter
call
adc
mov
mov
scas
pop
clc
arpl
mov
adcb
cs
pop
or
adc
pop
push
out
sub
popf
cmp
loop
fs
mov
dec
and
aas
std
add
inc
js
or
push
or
ds
add
lahf
push
mov
xlat
push
in
jecxz
mov
cmpsl
add
shrb
dec
addr16
xchg
cmp
daa
mov
dec
insl
scas
push
inc
ret
jb
in
xor
inc
addb
and
xor
orl
xor
inc
and
push
stc
aas
lock
lcall
loopne
aaa
fcom
fidivs
loopne
sbb
mov
mov
stos
nop
pop
addl
bound
xchg
shlb
imul
mov
cltd
xor
mov
inc
lcall
out
mov
stc
mov
int
fninit
testl
iret
enter
aaa
sbb
push
jnp
and
lock
filds
sbb
popa
fcoms
and
push
outsb
push
inc
lds
test
in
repz
mov
inc
int3
jg
dec
sub
fidivs
adc
jb
les
pop
imul
cmp
or
xor
andl
mov
mov
stos
lret
mov
mov
adc
cmp
sbb
fdivr
jp
and
cmp
mov
sbb
jmp
and
fdivr
xchg
sbb
inc
shl
jecxz
insl
and
pop
fwait
push
mul
orl
sub
jle
xchg
sub
inc
inc
cli
inc
in
scas
repnz
mov
pop
jb
rcll
subl
push
mov
cmp
leave
add
inc
and
jb
pop
jl
push
aas
add
fwait
adc
setns
mov
xor
sbb
hlt
lret
flds
sbb
push
mov
negl
or
sahf
insb
stos
in
in
pop
lea
mov
mov
jbe
jp
mul
lcall
pop
shll
in
incb
daa
push
adc
pop
add
or
loop
mov
pop
pop
dec
push
dec
stc
dec
stos
mov
mov
ds
sbb
mov
arpl
add
mov
pop
push
jbe
testb
int
jbe
adc
xor
or
inc
jg
sbb
add
cwtl
cs
mov
pop
enter
mov
pop
dec
xorb
dec
aam
orl
inc
cmp
mov
dec
pop
pop
and
pop
jnp
enter
sub
xlat
cmp
ljmp
and
cmp
mov
idivb
jl
mov
or
mov
lret
lahf
leave
xor
lods
push
sub
stc
and
cmp
movsb
xchg
inc
jno
enter
add
fs
inc
fsubl
push
ljmp
or
xchg
and
jne
fldl
neg
sarb
lret
inc
mov
loope
shrl
jecxz
int
scas
push
leave
inc
sbb
xchg
inc
xor
imul
adc
int3
inc
mov
dec
in
sbb
push
sub
fstpl
fcomi
mov
mov
adc
xor
stos
push
adc
mov
test
cld
push
clc
fcomp
mov
scas
cmp
icebp
dec
mov
jecxz
mov
add
adc
and
ror
inc
addr16
jb
jbe
pop
push
add
xchg
andb
jae
jge
stc
pop
loopne
in
push
adc
je
jmp
sub
outsl
es
cmp
mov
std
sub
pop
or
fidivs
cmp
mov
xchg
jne
lret
fsubrs
jns
test
je
push
sti
lods
mov
sub
xor
xor
push
imul
mov
mov
out
mov
jb
ret
sahf
lds
repnz
push
mov
addl
fldenv
mov
inc
adc
sti
push
jp
sbb
push
push
and
lds
mov
popa
pusha
xor
jns
jle
adc
cli
std
mov
lea
sub
mov
fs
jno
cmpb
or
lcall
in
sbb
pusha
inc
stc
mov
fcom
inc
xchg
std
aaa
fimull
jge
lcall
hlt
and
add
xor
xchg
loope
movl
outsb
add
ret
into
add
scas
mov
bound
divl
rclb
cmpsb
adc
jbe
jecxz
xchg
mov
ret
sbb
test
rolb
pop
dec
add
std
push
push
ret
std
enter
add
icebp
push
push
add
add
cwtl
arpl
xchg
xor
iret
cmp
cli
leave
pusha
dec
add
xchg
lahf
pop
jae
test
sbb
out
mov
cmp
popa
pop
cmp
iret
fistps
mov
lcall
je
outsl
flds
mov
mov
cmpsl
addr16
fmull
jmp
fwait
dec
repz
outsb
xchg
fiaddl
rorb
jns
int
test
popa
xchg
cli
inc
loop
mov
mov
ret
jbe
cld
cmc
js
push
inc
clc
test
sbb
test
mov
push
data16
arpl
adc
xor
lock
and
es
addb
cmp
imul
inc
mov
sbb
xor
or
sbb
pop
cmp
ret
xorl
sbb
subl
mov
or
pop
fstps
jmp
pop
imul
dec
enter
xchg
and
lods
dec
fidivrl
jle
push
in
scas
lcall
sbb
movsb
lahf
pop
mov
mov
lret
outsl
arpl
xchg
push
push
repz
mov
xorb
cwtl
mov
lret
jl
cmp
pusha
push
push
inc
gs
mov
dec
cmp
mov
jnp
xor
and
push
mov
mov
add
and
stos
mov
aaa
jl
call
jne
lret
aaa
mov
notl
fistpl
data16
call
inc
scas
push
and
jno
mov
sub
loopne
xchg
fmul
or
adc
movb
add
cmp
inc
push
mov
pop
push
cmc
rcll
cmp
mov
dec
leave
dec
daa
lea
and
dec
aam
cmpsl
and
cmp
aad
push
mov
pop
lods
sahf
xlat
mov
out
lods
ret
mov
add
inc
test
sbb
add
sti
mov
ficoml
mov
ret
or
ss
mov
xor
adc
loop
ljmp
fcmovnbe
push
or
pop
inc
dec
jae
jp
inc
sbbb
pop
jne
xor
jecxz
je
pop
fninit
adc
imul
sub
sbb
adc
hlt
push
jmp
fdiv
mov
mov
cmp
sbb
inc
adc
xchg
mov
sbbb
or
lcall
js
add
push
push
rcrb
xchg
mov
jae
pop
jp
add
mov
push
xchg
sub
adc
insb
inc
mov
test
sbb
inc
dec
and
movb
and
xchg
lods
ds
xacquire
xchg
dec
sti
adc
dec
mov
bound
mov
in
sbb
cltd
and
das
pop
jb
frstor
or
lods
mov
stos
sti
jno
mov
insl
pushf
mov
movsb
shr
add
or
jmp
arpl
nop
and
mov
lods
mov
push
mov
or
xchg
and
or
dec
push
push
in
push
sahf
icebp
aas
sub
mov
mov
outsb
dec
iret
jo
insb
push
into
add
sub
js
sbb
pop
mov
jg
pop
test
daa
dec
add
lods
xchg
nop
ret
imul
and
or
sarl
dec
or
into
pushf
mov
fnstsw
cmp
xchg
fwait
arpl
add
adc
call
sub
mov
leave
popf
inc
into
xchg
xchg
jge
clc
call
out
scas
xchg
jns
nop
ficompl
cmp
movsl
cmp
inc
lods
xchg
pop
jmp
xchg
sub
sub
test
cli
mov
loope
jb
ret
scas
testl
cs
xor
xchg
push
inc
jo
cld
subl
or
faddl
cmp
mov
imul
mov
mov
out
pop
in
sbb
mov
add
imul
fistpl
out
mov
in
xchg
jl
lods
inc
and
inc
mulb
mov
mov
jns
push
das
lcall
sub
adcb
mov
xchg
inc
jge
lock
sub
dec
jnp
add
fcoml
dec
jl
dec
cwtl
movsb
rcll
dec
mov
lea
jl
icebp
adc
rorb
call
push
scas
xchg
mov
int
and
mov
popa
jmp
in
js
mov
shll
jno
dec
or
sarl
dec
jns
xchg
movsb
loope
xor
cmp
scas
cs
data16
mov
mov
add
cmp
ror
dec
mov
or
pop
scas
stos
in
pop
mov
add
lock
lods
fstp
sub
xchg
outsl
xchg
jecxz
jns
mov
rcll
mov
jl
mov
inc
out
mov
cli
js
inc
pop
jne
lret
push
fistl
test
outsb
leave
leave
cli
push
pop
jp
jne
cmpsb
dec
arpl
aad
popf
xor
out
repnz
add
arpl
fcmovb
cmp
cli
pop
fistl
inc
int3
add
or
lcall
and
iret
mov
mov
enter
outsb
mov
imul
js
and
pushf
rclb
dec
fsubrl
jbe
lods
testl
jmp
jg
mov
pushf
xor
inc
add
out
int
sbb
popa
pop
or
shrb
pop
xlat
fdivrs
or
test
or
and
mov
sbbl
lock
mov
scas
mov
mov
dec
sub
xchg
lahf
push
shll
popa
cltd
push
xchg
rcll
sbb
es
lods
push
lock
mov
jnp
lock
pop
insl
jmp
fwait
inc
or
std
dec
test
fcompl
cli
xor
lahf
xchg
mov
pop
adcl
insl
scas
je
jl
xchg
mov
pop
sub
leave
add
shrl
std
xchg
adc
jp
add
ret
push
push
sbb
sbb
sbb
sub
arpl
add
aaa
ss
shll
insb
cmp
pop
mov
ljmp
test
pop
sub
in
or
push
or
lcall
mov
mov
sbb
out
mov
adc
jge
sbb
test
push
sub
aaa
loop
xor
mov
aam
inc
stos
mov
adc
imul
popf
mov
mov
cmp
in
mov
in
outsl
push
int3
fidivrs
rcl
std
xchg
lcall
mov
fldt
xlat
jge
or
sbb
je
inc
pop
popf
fmulp
cmc
sar
js
sbb
adc
std
cmpsl
cld
sub
ficomps
stos
in
dec
call
mov
rorb
test
cmp
cmp
scas
or
lret
xchg
dec
or
push
dec
and
add
inc
lds
mov
out
fisttpll
mov
loopne
leave
mov
ja
dec
mov
insl
mov
fwait
testb
pop
lcall
sub
inc
ljmp
mov
repz
dec
mov
addr16
lods
sbb
test
lds
int3
das
mov
mov
sub
mov
call
xchg
sub
leave
sbb
mov
int
sub
enter
xchg
push
movsb
lahf
out
scas
or
xlat
jno
movsb
sub
movsl
xor
cmp
das
jl
cmp
jae
jle
xchg
neg
sub
popa
pop
mov
loop
out
pop
xorl
addr16
sbb
jge
cmp
pop
pusha
testb
adcl
adc
sbb
inc
xor
mov
xlat
jmp
andb
loopne
rolb
dec
test
sub
xor
pop
jecxz
loope
mov
fbstp
push
scas
sub
data16
xor
leave
jae,pt
pop
mov
sbb
sub
push
popf
adc
dec
inc
push
xchg
xchg
cmpsb
jmp
push
aas
lock
xorb
and
inc
pop
jns
dec
rolb
ljmp
aas
adc
sub
repnz
mov
mov
add
xor
mov
xor
inc
mov
push
cmp
mov
cs
mov
add
pop
adc
fstps
sub
addl
add
imulb
mov
aas
push
mov
daa
cs
fs
fs
pop
dec
or
fsubrl
std
add
xchg
inc
loopne
call
nop
shlb
xchg
mov
push
hlt
test
dec
push
mov
add
cmp
lds
leave
pop
fdivs
scas
sub
add
mov
sbb
andb
cmc
daa
cmc
or
je
xchg
mov
mov
ds
rorl
mov
mov
sbb
jge
mov
lods
mov
inc
pusha
jg
lods
into
mov
push
xor
xor
loop
push
add
and
clc
sbb
xorl
jmp
xor
aaa
add
lret
and
mov
xchg
or
xor
adc
mov
cmpsl
mov
aas
dec
fs
add
sbb
cmp
lret
mov
cmp
test
fcmovnu
sbb
lds
mov
testb
stc
clc
sub
lock
and
pop
jmp
cmpsb
jg
mov
iret
push
jno
jo,pt
in
bound
sahf
mov
mov
and
inc
or
dec
push
push
pusha
test
adc
jecxz
cmpsb
mov
popf
sbbb
add
push
sarl
fdivrs
pop
roll
cmp
jo
push
push
movsb
mov
cmp
dec
aas
clc
addr16
test
pop
dec
push
and
out
inc
bound
stos
pop
mov
sub
fidivrs
and
pop
test
jg
pop
ja
dec
mov
out
in
xchg
push
in
cmp
sub
in
movsb
popa
adc
and
add
push
sti
inc
and
test
or
adc
jge
mov
cmpsl
loope
push
stos
jns
repnz
xchg
push
pop
outsb
ficomps
sbb
hlt
push
jg
bnd
popl
sbb
in
lods
addl
jnp
xor
sbb
mov
aad
mov
sbb
mov
mov
add
testl
bnd
ja
cmp
in
lock
mov
and
sub
push
fwait
gs
add
mov
rolb
outsb
adc
cmp
sub
sbb
cmp
out
in
mov
ret
mov
pop
out
bound
dec
mov
in
inc
add
ficoms
nop
cmp
jmp
shlb
enter
cli
push
mov
dec
fwait
jp
xchg
aam
pop
insl
sub
push
cmp
sbb
shlb
loope
popl
and
adc
por
fdivs
jnp
in
movsl
loop
mov
js
cltd
push
mov
sbb
cmp
cld
fld
incb
push
outsb
dec
addr16
mov
sbb
shlb
frstor
insl
aam
lret
sub
lods
mov
xor
inc
mov
stc
fcomp
adc
int
daa
in
fbstp
mov
pop
push
out
add
adc
mov
popf
insl
clc
jmp
cltd
push
fildl
jbe
mov
movl
or
sbb
push
or
mov
push
sbb
cli
mov
iret
repnz
jae
lea
shl
jg
push
jo
lock
pushf
jae
or
jl
das
popf
adc
adc
jmp
arpl
stos
pop
imul
mov
lret
rcrb
mov
cli
mov
jl
test
popa
xor
xchg
dec
inc
jno
in
fdivrs
jns
jmp
iret
mov
sub
sti
sub
mov
and
pop
imul
lcall
flds
xorb
dec
sbb
xor
fwait
jns
ja
jne
add
xor
out
incb
fs
jmp
loopne
mov
hlt
fsubrl
xor
jne
mov
xchg
cmp
imul
daa
loop
cmp
jle
fs
sbb
mov
add
fs
divl
cmc
mov
adc
jbe
testb
lcall
cmpsl
mov
push
jne
test
cmc
mov
test
arpl
xor
sub
jbe
pop
dec
in
test
stos
int
or
inc
cltd
ret
push
out
subl
adc
dec
scas
add
insl
dec
adc
sub
push
pusha
mov
test
push
je
sbb
jl
push
test
adc
fwait
mov
int
jge
sbb
in
scas
gs
mov
loopne
adc
nop
xlat
testl
mov
push
xchg
push
imul
addr16
add
fmuls
push
add
xchg
nop
dec
popl
dec
push
repnz
loope
lods
ljmp
rcrb
pushf
clc
pop
adc
pop
sbbl
xchg
int3
movsl
sbbl
rcrb
jle
enter
mov
pop
shlb
cs
push
pop
mov
xchg
shrl
mov
test
cmp
into
pusha
aaa
mov
jmp
xor
js
xor
test
inc
movsl
jmp
push
ss
repnz
test
f2xm1
pop
je
insb
push
xchg
popf
js
pop
mov
loope
push
mov
pusha
sahf
lods
pop
mov
imul
cmpsb
jp
jne
or
push
add
mov
sar
push
cmp
insl
insb
fisttps
fsts
mov
sbb
pop
cmpsb
std
roll
rcr
sbb
pushf
lods
xchg
inc
dec
mov
jl
pop
jp
call
pop
jg
adcl
xchg
dec
pop
gs
mov
jnp
or
jmp
adc
mov
mov
add
add
inc
mov
movsl
ljmp
jmp
sub
pop
cwtl
call
ljmp
into
dec
jno
imul
scas
cmp
fwait
and
rorl
cmpsl
mov
enter
sbb
dec
push
popf
out
inc
js
aad
faddl
mov
test
jp
push
imul
xchg
sbb
loopne
aad
lret
imul
xchg
andb
mov
mov
pop
mov
shlb
adc
call
gs
pop
dec
cs
sbb
movsb
mov
push
inc
cmp
cmpb
popf
adc
lods
arpl
mov
xchg
inc
loop
aas
aas
insl
mov
xchg
cmc
jle
out
inc
sahf
jl
xchg
jne
or
push
ss
xchg
or
nop
les
popa
inc
lahf
xor
push
popf
xor
notl
inc
push
stos
in
repz
testl
mov
scas
fs
stos
pop
scas
mov
es
outsb
pushf
cmpl
xchg
lcall
repnz
sub
insl
dec
lock
jecxz
mov
cmp
testb
fisubrl
xchg
sti
pop
cmp
mov
out
adc
lods
ret
vpshufhw
repnz
or
xchg
dec
icebp
pop
pop
mov
push
inc
dec
lret
test
mov
add
mov
enter
fcmovb
stos
push
divb
insl
jmp
push
adc
pop
xor
bound
cmp
or
push
mov
mov
imul
mov
sub
push
push
out
pushf
lcall
mov
testb
arpl
sbbb
int3
push
mov
pop
mov
sub
cmp
cmp
dec
mov
movsb
push
jno
int3
pop
aad
mov
jp
clc
scas
dec
nop
movsb
shlb
and
clc
test
cmpsb
lds
jp
push
out
push
mov
xor
dec
mov
lahf
and
push
sbb
into
sub
in
sub
add
push
mov
repz
push
jl
sbb
sbb
mov
sub
ret
add
mov
dec
stos
cmp
xor
cmpsb
cmp
repz
sbb
dec
repnz
mov
xchg
ljmp
xchg
adc
inc
js
jae
stos
aaa
imul
lods
pop
push
and
sub
sub
and
sti
sbb
call
push
inc
mov
pop
mov
jg
inc
push
faddp
cs
leave
add
pop
ret
add
shlb
push
cli
arpl
repz
or
adc
divb
or
mov
or
xchg
push
outsb
push
adc
xor
pop
jns
and
jne
cmp
mov
jmp
push
add
movsl
inc
mov
adc
sub
pop
xlat
push
ja
nop
ret
lock
dec
inc
jne
jl
mov
es
fnsave
or
pop
fstps
loope
and
xor
dec
xor
or
dec
cmp
xor
adc
jg
inc
jge
loopne
mov
cmpsb
pop
sbb
jmp
and
inc
bound
or
bound
insl
xchg
aam
ja
jg
mov
mov
cwtl
sub
adc
ss
mov
mov
loopne
rclb
mov
andl
jmp
imul
aam
cwtl
popf
ds
shr
cwtl
jecxz
inc
mov
inc
mov
or
inc
imul
sub
sbb
and
mov
mov
sbb
push
out
sbb
push
cmp
fs
addr16
jb
or
push
shlb
loopne
enter
imul
nop
mov
stos
jnp
or
sahf
scas
mov
loop
subl
mov
cmp
pop
imul
pop
stos
test
lock
fwait
in
fcomp
xchg
cmp
sbb
fdecstp
inc
cmp
repnz
ss
popa
clc
xchg
mov
cmpsb
xor
mov
and
cld
movsl
push
cli
scas
inc
repz
sub
sub
or
push
inc
cli
rcl
inc
inc
lret
dec
and
scas
xchg
in
jb
or
sub
scas
push
loopne
xchg
mov
lahf
mov
daa
pop
in
or
mov
insb
insl
sti
inc
ljmp
icebp
inc
mulb
jecxz
xor
lahf
xchg
fcmovne
idivb
pop
pop
mov
and
xor
xor
xchg
rcll
jo
ret
cmp
pop
fsts
fstps
xchg
adc
mov
cmp
out
iret
gs
dec
dec
mov
xor
imul
stc
inc
cmp
js
pop
sub
jl
jp
mov
xor
sub
add
loope
lret
fucom
mov
dec
jecxz
mov
in
jbe
call
jb
in
test
jno
cmp
dec
shll
jb
mov
fdivr
jns
mov
pop
ror
or
ds
or
cmp
call
mov
cmp
lods
push
and
pop
aaa
push
cmpsl
cld
mov
xlat
ret
fcmove
fnstsw
mov
push
aam
xchg
lret
cmp
sbb
lea
lcall
cmp
aaa
adcl
lcall
in
cli
and
mov
test
lahf
xchg
call
sub
jne
cmp
das
xor
sbb
jne
pop
adc
in
nop
les
es
and
lock
jbe
lds
loop
add
insl
jle
scas
dec
xor
pushf
jp
cmp
mov
fs
rcr
cld
mov
xchg
xor
lcall
mov
dec
loopne
gs
sub
sub
xchg
mov
mov
divb
movsb
pop
mov
jnp
lcall
insb
sub
repnz
mov
and
dec
repz
push
mov
mov
out
or
push
xchg
lret
mov
xchg
je
incl
gs
sub
je
mov
sbb
adc
cwtl
mov
xchg
ljmp
mov
mov
fiaddl
aas
cmpsb
inc
movsl
cmp
push
cmp
scas
pop
loope
mov
xor
cs
daa
xchg
and
cld
cvtpi2ps
clc
out
mov
in
xchg
insb
push
dec
push
pusha
rorl
test
inc
adc
jle
nop
dec
push
inc
jno
cmp
cmp
lods
adc
imull
push
test
cli
js
mov
lea
imul
inc
movsl
or
push
gs
pushf
repnz
cli
insb
mov
jg
pop
jae
repz
cs
out
das
test
ficompl
movsb
dec
mov
lret
cmp
mov
pop
jbe
push
ljmp
push
aas
ds
push
cld
sbb
sub
sti
sbb
call
pop
xor
std
inc
sub
adc
pop
clc
clc
dec
in
cs
repz
jno
cwtl
lcall
cmc
aad
imul
sti
sub
mov
mov
iret
fmull
pop
push
cwtl
mov
inc
pop
pop
xchg
in
mov
mov
mov
mov
sub
std
fcomps
mov
dec
test
push
out
stos
mov
xchg
adc
dec
fisubl
lods
sbb
jg
es
or
mov
arpl
fdivp
ret
or
pop
pop
mov
push
push
nop
into
in
dec
dec
inc
je
adc
push
addl
pop
xchg
cltd
test
cmp
and
inc
xchg
dec
in
mov
mov
int
sti
mov
mov
pop
adc
xchg
mov
mov
add
aas
add
pop
mov
cmpsb
push
rorb
mov
leave
stos
jne
les
mov
cmp
je
ja
jae
rcll
mov
sbb
xchg
call
fidivrs
xor
loop
mov
xor
jg
mov
sub
aam
mov
sub
repnz
jo
mov
les
shlb
cmc
jae
imul
fcompl
pop
dec
fistps
orl
pop
dec
loope
notb
xor
fwait
dec
or
lds
popf
arpl
fbld
cmp
push
aad
orb
jl
xchg
or
rclb
clc
inc
addr16
inc
into
cld
fbld
sbb
loopne
add
outsl
sbb
aas
xor
jns
rclw
fistpl
pop
leave
xchg
jle
pop
dec
mov
xor
ja
push
cmp
jecxz
cmp
sub
xor
sbb
sbb
lcall
lahf
push
cmpsb
es
mov
in
cli
xchg
jae
cmp
and
or
cmp
fnstcw
outsb
jo
int3
outsb
test
cmpsl
cmp
and
fs
mov
mov
push
push
adc
pop
repnz
xor
out
bound
test
pop
pop
andl
test
cld
xchg
mov
add
pop
mov
mov
mov
in
and
xchg
shlb
out
rol
dec
rcrb
js
ljmp
movsb
cltd
sahf
dec
lods
sti
rcll
mov
pop
int3
je
mov
ss
lret
in
sub
mov
in
dec
cmp
test
xchg
cmp
jno
dec
int3
sar
scas
scas
jbe
mov
and
jmp
and
stos
push
mov
jle
repnz
dec
push
jp
sbb
xor
imul
insl
roll
pop
fmul
movsb
stc
addr16
mov
outsl
outsb
sbb
jnp
push
and
pop
clc
mov
stc
pop
push
add
out
lods
jne
xchg
jle
imul
fmull
hlt
out
inc
dec
xchg
out
jae
cmpb
aaa
enter
outsb
inc
fdivr
cmp
loopne
fcompl
loop
push
stc
scas
pop
rorl
jl
sub
add
out
sbb
cmp
inc
push
out
hlt
mov
mov
gs
sahf
jge
aaa
shlb
sub
cmc
cwtl
jmp
inc
fs
add
aam
push
repz
jmp
xor
aam
pop
or
jl
in
jae
ja
in
inc
iret
or
rolb
pop
jns
sub
insl
dec
and
push
test
mov
fdivrs
repz
mov
outsl
outsb
mov
mov
sbb
pusha
mov
outsl
cmp
stos
push
xlat
xor
inc
dec
scas
push
inc
or
jl
xor
xchg
sbb
aad
arpl
fnstsw
inc
ljmp
mov
mov
arpl
mov
das
mov
fcompl
lods
rcll
xchg
rorb
xlat
jb
jmp
pop
into
outsl
sub
adc
ja
jle
popf
orl
ret
adc
in
cld
dec
push
into
cmc
and
ja
mov
std
sarl
jnp
int
int
pop
out
xchg
insb
xor
test
jnp
and
fisttpl
push
push
sarb
arpl
cmpsl
cmc
in
xor
into
mov
sti
out
cwtl
xor
and
cmp
aaa
xor
movsl
cmp
pop
aam
xorl
adc
inc
std
inc
xor
or
jno
push
popf
fsubl
inc
dec
add
dec
ja
jae
out
insl
mov
insb
add
sahf
sbb
into
out
imul
mov
sbb
arpl
adc
test
sub
pop
enter
jbe
jno
adc
rcrb
dec
add
sub
push
or
cli
dec
inc
fidivs
fisttpl
ja
adcb
and
clc
jl
les
and
add
xlat
stc
rolb
int
ds
jl
pop
mov
xor
mov
fnop
or
mov
fcomps
hlt
dec
mov
lahf
mov
fsubp
fs
inc
jbe
popa
pop
adc
mov
jae
push
mov
in
out
stc
mov
jns
cmp
lods
mov
shll
rcll
and
rolb
out
adc
cmp
jl
cltd
les
or
repz
xor
popa
adc
bound
pop
lahf
jb
fdivrl
ss
push
inc
pop
mov
sub
fwait
inc
into
sub
fst
nop
sub
cmp
xchg
shr
mov
in
mov
test
jle
mov
sbb
pop
lahf
cltd
rclb
or
pusha
in
pop
pop
mov
cli
xchg
enter
xor
mov
mov
lahf
or
rorb
xchg
adc
cmp
aaa
xor
jp
adc
bound
xchg
mov
aam
stos
ficomps
test
fcoml
dec
mov
sbb
inc
ljmp
adcb
dec
mov
int
pop
inc
in
mov
jle
call
sub
dec
sub
int3
popf
pop
into
cli
lds
jno
xchg
dec
and
mov
loopne
jp
cmp
loopne
lds
push
jecxz
leave
cli
push
pop
sbb
sahf
cmp
jne
push
mov
into
loope
dec
inc
or
push
jg
je
in
dec
fimuls
sbbb
jo
stos
inc
xor
out
xchg
and
rclb
jge
inc
jmp
and
decb
jecxz
mov
aam
pop
int
xchg
stos
push
push
mov
mov
add
push
test
mov
push
insl
pop
and
out
pop
test
ds
das
lcall
mov
stos
push
sub
jle
mov
repz
stos
add
fldt
push
push
cwtl
push
and
xchg
mov
ja
jo
cmp
pop
sbb
in
jnp
dec
adc
cwtl
pop
pop
push
inc
in
push
popa
insl
out
popf
jge
xor
loopne
mov
lock
pop
sub
sub
repz
div
mov
mov
shll
push
mov
adc
xor
jae
dec
mov
add
pop
js
data16
icebp
outsl
xor
mov
inc
sbb
js
mov
adc
loopne
pop
stc
rcrl
out
sub
xchg
iret
jg
cltd
or
je
add
lds
fwait
mov
dec
cld
movsl
sbb
push
xor
negl
inc
cmp
pop
mov
push
cli
arpl
cmpsl
mov
cwtl
mov
ret
cmp
clc
mov
dec
stos
andl
popa
pop
movsl
leave
pop
fdivp
and
xchg
rcll
mov
aas
adc
movsb
sbb
inc
or
xor
lds
repz
cmpsl
xchg
mov
xchg
cwtl
sub
xchg
arpl
push
and
mov
mov
cld
inc
test
test
mov
xchg
ret
jg
xor
jne
mov
testl
jne
loope
call
xorl
dec
sbbb
leave
decb
dec
cld
dec
add
iret
mov
add
sub
xchg
mov
jp
mov
int
dec
mov
xchg
push
lods
dec
pusha
int3
or
outsb
fidivrs
adc
xor
sub
mov
add
mov
lcall
push
xor
std
xor
cmp
xchg
jae
jnp,pt
je
push
jo
and
jno
negl
cmp
push
sti
in
jecxz
or
out
jno
shll
test
lcall
add
push
mov
in
cmc
lret
xlat
test
or
lret
lahf
jl
jbe
or
popa
aad
in
xchg
pop
xchg
mov
insb
repz
add
mov
cli
mov
mov
pop
sarl
push
out
in
movsb
push
push
fmulp
test
jmp
pop
inc
int3
dec
loop
fwait
test
divb
sub
call
fimull
rcrl
sahf
and
jge
pop
pusha
fcoms
dec
stc
adc
outsb
pusha
push
mov
push
mov
xor
push
aam
mov
fdivrl
inc
mov
shlb
adc
bound
cmpsl
jno
xlat
adc
ret
repnz
xchg
or
mov
jmp
or
jmp
pop
lods
clc
addr16
bound
and
push
xlat
jbe
test
mov
clc
shl
cwtl
pop
pop
push
inc
lds
cs
dec
push
xor
mov
xchg
clc
ret
jns
inc
mov
adc
sti
mov
push
movl
adc
mov
jo
mov
int
imul
or
jae
mov
out
xchg
outsl
hlt
iret
or
faddl
imul
jnp
repz
dec
pushf
lods
mov
jg
outsb
xchg
inc
mov
cmovbe
aam
test
je
popf
jns
and
ss
enter
mov
xchg
jl
lods
scas
ljmp
xchg
les
xorl
xchg
sbb
xchg
xor
arpl
dec
test
pop
cld
adc
xchg
maskmovq
fidivl
jle,pn
ljmp
mov
pop
cwtl
ret
mov
daa
je
sbb
cmp
push
daa
sub
adc
pop
or
into
xor
xchg
out
movsl
fucom
lock
test
aad
xchg
mov
jno
sahf
pop
and
sub
in
cmp
loope
ljmp
mov
insl
mov
jmp
outsb
out
outsb
les
push
cmp
shll
repnz
add
cld
addr16
sbb
repz
imul
cld
loop
and
es
mov
pop
leave
xor
inc
mov
lea
fldcw
cmp
arpl
mov
push
aam
das
ljmp
jae
jle
mov
cmp
das
sti
or
pop
jl
cwtl
loop
xchg
push
mov
mov
pop
push
inc
loop
mov
xchg
je
dec
out
in
cmp
aam
lea
pop
adc
xchg
mov
cli
fdivs
incb
scas
idivb
dec
push
clc
mov
aad
mov
xchg
or
xchg
imull
cmp
icebp
loop
out
ror
nop
popa
shlb
in
ficoms
pop
stos
dec
mov
fwait
out
js
pop
push
adc
addr16
jle
mov
js
pop
daa
nop
mov
arpl
xchg
sti
out
or
mov
insb
push
neg
sti
and
cmp
fisttps
jp
mov
fisttpll
fidivl
push
aam
or
es
fidivs
xor
push
pop
shlb
adc
sub
mov
shld
mov
insl
push
xchg
cwtl
inc
rorb
in
lock
out
aad
jne
stos
lahf
insl
adcb
test
rorl
jge
lds
sub
push
jnp
pushf
fwait
add
sbbb
xchg
sbb
adc
xor
or
js
lds
pop
adcl
mov
sub
xchg
mov
imul
push
xchg
push
xorl
inc
and
mov
mov
add
jmp
orl
mov
sarl
mov
popf
add
cmp
cmpsb
cld
mov
insb
scas
sbb
xor
sub
lret
push
push
aaa
sub
arpl
jo
cli
inc
mov
ret
and
icebp
inc
mov
ja
sub
pop
in
aas
mov
into
and
andb
repnz
mov
scas
pop
fs
mov
pop
mov
adc
xchg
pop
rcll
idivb
hlt
outsb
out
in
rep
sbb
stos
lahf
inc
jecxz
add
in
imulb
xchg
xchg
int3
lock
fimull
add
pushl
xchg
ljmp
shl
jno
lea
pop
or
in
push
push
xor
or
cmpl
xchg
pop
repnz
xchg
sbb
sbb
and
into
fbstp
lods
outsl
popf
ret
xchg
xchg
jmp
dec
out
addr16
mov
imul
les
jbe
js
adc
sbb
mov
je
movsl
fildl
rcll
in
cmpsb
mov
in
les
mov
cmpsb
loop
loope
xchg
lcall
call
dec
fwait
aaa
das
mov
xchg
xor
ret
sahf
mov
mov
or
testl
xchg
repz
pop
dec
mov
push
stos
mov
ret
cltd
xor
xor
dec
ds
js
dec
mov
cli
xchg
sub
pop
test
jbe
cs
rcr
add
jp
shl
cmp
adc
sbb
or
repz
test
xchg
dec
rorl
loopne
aad
push
aam
mov
pop
xor
and
mov
mov
aad
pusha
icebp
push
and
mov
sub
push
cmc
cmp
ret
mov
in
fidivrs
mov
mov
mov
jg
insb
cs
xor
jbe
jge
movsb
icebp
jle
mov
orb
ss
int
jmp
mov
sub
jno
popa
pop
adc
fisubrl
sbb
cmpsl
leave
add
rol
mov
test
call
mov
xor
mov
in
dec
out
xchg
mov
add
aas
push
pop
daa
das
or
sbb
lds
outsb
pop
ficompl
mov
stc
xchg
js
fstpl
jne
cmp
mov
push
mulb
es
mov
and
mov
rolb
push
shl
jge
xchg
dec
fwait
mov
sbb
ljmp
inc
mov
rorb
inc
fs
pop
out
stc
mov
jns
inc
bound
mov
lret
pop
lcall
xchg
add
inc
push
and
xchg
jns
sbb
cmp
sbb
aam
jg
outsb
push
add
push
outsl
jp
xchg
in
sub
adc
jne
call
xchg
repz
xlat
mov
arpl
inc
iret
and
in
int
mov
mov
sub
xor
rcl
subl
repnz
xor
push
call
ret
jle
lret
pop
iret
fistps
pop
push
ud0
fdivrl
push
test
cs
es
pop
sbb
sbb
pop
ficoml
insl
bound
pop
mov
push
pop
sub
sub
imul
sub
mov
loope
loop
mov
rorb
pop
jmp
pop
aaa
mov
stc
xchg
andl
shrb
movsb
cmpsl
mov
mov
mov
sbb
mov
lcall
pop
lods
push
inc
lahf
mov
lret
jmp
mov
jbe
inc
out
arpl
fcmove
inc
xor
adc
mov
xchg
shrb
sub
sbb
fmuls
repnz
jp
xchg
out
mov
bound
les
adc
mov
jb
aam
push
stos
shrl
push
insl
sub
adc
jg
jne
addl
lea
adc
jg
in
call
xor
mov
rorl
and
out
xor
cmpsl
imul
mov
ficomps
jo
hlt
jg
imul
addr16
xor
gs
jg
fdivl
dec
int3
push
sbb
pop
ljmp
int3
push
imul
pop
lods
test
mov
daa
push
xor
int
scas
pusha
out
mov
pushf
push
test
adcb
mov
gs
das
inc
pop
pop
sbb
adc
adc
sub
les
lcall
inc
and
fists
in
hlt
push
dec
neg
repnz
loopne
mov
adcb
cmp
int
popf
jmp
mov
add
repz
mov
pop
ja
pop
pop
cwtl
fisttpl
mov
pop
ss
cltd
push
xchg
and
jle
mov
sbb
pop
sbb
arpl
fistl
push
imul
cmp
addl
call
inc
mov
cmp
push
sub
cmp
and
jo
cmp
test
push
fs
pop
loop
xor
mov
cmp
in
icebp
sbb
repz
or
xchg
cmp
and
test
repz
mov
rcll
into
jmp
xor
and
stos
or
imul
jnp
dec
dec
dec
lds
int3
das
pop
icebp
shlb
pop
fcomps
int
popf
mov
mov
jae
xchg
fsub
push
lret
adc
add
loopne
aas
push
jo
sbb
mov
iret
aad
xchg
cltd
sbb
fmull
dec
sub
in
mov
mov
pop
scas
fucomip
int3
xor
mov
inc
sbb
cmpl
mov
aas
xlat
pop
cmc
mov
jb
inc
repnz
mov
lahf
or
sbb
push
cmp
fisubs
stc
out
sbbl
jne
jae
testl
jl
xchg
mov
outsl
movsl
adc
xchg
cs
inc
xchg
jg
dec
das
cmp
bound
cmp
ja
jns
addr16
data16
push
mov
xor
xlat
in
out
stos
stc
xor
insl
pop
cmp
dec
push
cmp
in
int3
sti
fwait
scas
sti
add
inc
bnd
sbb
sbb
das
out
pop
fdivp
aam
call
adc
add
cmp
shr
into
pushf
lods
and
mov
ja
test
or
les
fdivrs
cwtl
fsts
sub
mov
adc
and
sub
test
jnp
xor
cli
xchg
pop
subl
and
arpl
and
insb
push
js
xchg
sub
loop
je
dec
clc
pop
pop
addr16
in
lds
stos
movsl
add
inc
inc
fiadds
adc
push
sarl
pop
xchg
insb
add
test
xor
mov
daa
ss
push
mov
sub
xlat
clc
mov
in
jecxz
xchg
and
dec
mov
jp
lret
fisubl
and
lods
stos
mov
daa
mov
arpl
jne
repz
test
pop
idiv
pusha
sarb
xchg
fucomip
add
imul
idivb
and
stos
fsubrs
cmp
cmp
mov
push
mov
fs
bound
push
in
xchg
in
ret
rolb
sbb
push
add
leave
pop
dec
push
xor
cmp
jg
outsb
sbb
pop
dec
lea
inc
jp
cli
xchg
nop
enter
pop
xor
mov
test
mov
mov
mov
fmul
cld
pushf
fisubrs
sbb
or
ret
mov
andl
sub
push
push
mov
add
mov
dec
lods
leave
xor
std
and
inc
dec
inc
dec
je
dec
loop
push
fsub
mov
inc
jnp
pop
inc
int3
xlat
add
enter
data16
in
in
ret
mov
pop
xor
xchg
scas
or
sub
push
inc
cwtl
jo
cmp
out
fnstcw
aas
fistpl
cmp
sub
loopne
mov
xor
mov
pop
lods
inc
mov
push
inc
pop
iret
mov
lahf
xchg
scas
cld
add
data16
push
mov
cmp
mov
pop
push
or
mov
push
jo
ret
xchg
in
cmp
mov
icebp
or
mov
lret
inc
imulb
jmp
jge
mov
inc
cmp
jl
pushf
xchg
lahf
sti
adc
or
test
sub
dec
iret
jo
dec
sbb
mov
pop
mov
std
jo
aad
cmpsb
adc
cmpsb
inc
inc
xchg
sbbl
pop
mov
push
js
add
imul
jg
mov
push
sahf
movsl
xchg
or
mov
sbb
icebp
insb
mov
mov
adc
insl
jp
clc
jno
mov
sbb
jle
add
in
in
push
adc
cs
xor
adc
aad
rorl
rcr
inc
push
pop
mov
inc
sbb
popf
loop
xor
jecxz
push
cs
pop
shlb
test
ror
pop
dec
test
test
and
and
or
fs
stos
cmc
mov
jae
adc
fcoms
pop
mov
mov
outsb
imul
mov
pop
sbb
or
in
test
cmp
push
lods
mov
mov
std
sahf
sub
stos
inc
sbb
aam
aam
xchg
mov
adc
add
ret
jecxz
fidivs
push
sub
mov
in
scas
sbb
mov
jnp
xchg
shll
inc
dec
push
pop
mov
jno
xchg
shrl
dec
test
lods
sub
aam
mov
daa
sub
pop
push
xchg
adc
or
shl
leave
std
ljmp
addb
xchg
jmp
std
sbb
lret
sbb
jecxz
jnp
mov
fdivrl
cmp
lods
movsl
cmp
into
daa
repz
cmp
call
mov
jmp
inc
jae
pop
jp
pop
mov
mov
sbb
lock
push
aam
clc
pop
push
std
jecxz
loopne
xor
in
ret
movsl
call
clc
dec
xor
inc
sbb
incb
cmp
outsb
mov
call
xlat
pop
mov
pop
std
jne
and
add
and
adc
adcl
int
testb
mov
sbb
int
iret
in
aaa
cltd
pop
pop
andl
pop
mov
mov
in
pop
ljmp
and
pop
push
call
je
cld
test
jle
scas
sub
push
ljmp
adc
pop
insb
leave
push
mov
mov
enter
mov
add
add
out
imull
and
mov
adc
mov
faddl
jmp
adc
shrl
scas
and
popa
sbb
add
ljmp
pop
hlt
sbb
push
lahf
fisubs
aam
xchg
mov
adc
mov
dec
mov
mov
adc
adc
inc
inc
sub
cmp
adc
jae
fwait
mov
mov
out
out
dec
pop
cmpsl
jge
lods
imul
shll
shrl
xchg
mov
sbb
push
das
or
mov
cmp
lret
ret
mov
mov
jne
into
cmpsl
lret
rcr
pop
mov
aad
imul
test
and
aaa
add
lahf
sub
pop
inc
loope
fmul
or
inc
ret
mov
lods
fnstenv
cld
outsb
loopne
inc
inc
mov
pop
sub
cmpsl
add
cmc
mov
pop
insb
cmp
jp
push
gs
arpl
mov
test
mov
gs
ret
push
mov
or
sbb
cli
mov
sbb
mov
xor
lret
mov
mov
sub
adc
testb
and
fcoms
aam
lret
insl
sahf
mov
cwtl
testb
mov
cmp
out
xchg
mov
lahf
cmp
lods
out
inc
subl
xchg
mov
cmp
cmp
out
lea
mov
or
mov
add
loopne
jmp
xor
jo
into
push
inc
cmp
xchg
call
add
js
adc
or
js
sub
inc
test
js
popl
sbb
sub
cs
inc
ss
aam
stc
dec
lock
fbld
mov
jo
pop
out
jo
mov
cmpsl
mov
add
arpl
shll
add
or
sar
jg
mov
les
test
mov
test
ret
cs
cltd
xchg
movsl
pop
hlt
inc
sarl
test
fsubs
mov
cli
imulb
sbb
repz
js
popl
xlat
out
frstor
cmc
loope
sar
movl
out
clc
cwtl
cltd
inc
sahf
push
pop
cli
mov
dec
fistpll
insl
data16
popa
and
push
fiaddl
sarl
fistps
mov
shl
aas
mov
outsl
cmp
mov
sbb
loopne
mov
fnstsw
pop
loope
add
mov
rcrb
iret
cmp
je
frstor
push
cmc
mov
test
mov
mov
fwait
dec
mov
daa
mov
notb
sbb
ror
xlat
lcall
lcall
scas
aaa
mov
subb
jp
mov
lret
lcall
movsb
mov
push
repz
sahf
into
and
repnz
scas
insl
inc
or
inc
sub
adc
loop
sub
repz
mov
mov
and
into
adc
lock
sbb
ret
and
cmc
fmull
adc
fsts
mov
dec
int
mov
mov
shll
daa
sbb
out
and
dec
mov
popa
std
push
test
xchg
inc
lahf
xor
xor
and
jne
rolb
lock
cmpsl
jge
pop
push
call
add
jb
ljmp
sub
sbb
stos
mov
mov
mov
mov
into
mov
push
sub
fsubr
das
xchg
inc
mov
fbld
sar
push
mov
mov
scas
movsl
rorl
aaa
inc
lcall
mov
pop
out
fs
xchg
jmp
test
xchg
adc
je
fwait
pop
adc
sub
shr
and
outsb
mov
cmp
ja
cmp
dec
cmp
cwtl
bound
and
fwait
out
sbbb
dec
leave
push
jae
sar
pushf
nop
xchg
data16
pop
push
xor
or
mov
jns
call
mov
mov
jp
lock
ret
mov
shll
or
pop
pop
mov
lods
sub
jp
ficoml
ret
xor
inc
push
mov
fistl
lods
push
xchg
test
cs
insl
out
sbb
pop
mov
aas
cmpsl
aad
pusha
adc
jp
scas
rol
mov
leave
pop
fs
in
das
or
push
lahf
loop
cmp
enter
sti
jb
enter
xor
mov
xor
mov
mov
mov
xor
test
lods
in
in
push
or
mov
in
or
ljmp
lret
pop
push
movsb
pop
les
negb
nop
std
out
mov
inc
mov
arpl
int3
jne
lock
cmc
fsubs
das
mov
je
jnp
scas
out
sub
inc
xchg
cmpsb
pop
fidivs
ret
mov
jno
push
das
xchg
test
mov
jge
mov
or
loope
jmp
ljmp
loop
jae
jg
mov
xchg
pop
sub
jle
cmp
mov
push
fdivrl
push
adc
sbb
iret
xor
jmp
and
jns
pop
jge
imulb
pop
leave
sbb
lahf
add
cltd
js
jb
pop
fbstp
push
ljmp
out
adc
inc
int3
sub
test
xchg
push
and
xchg
adc
movsl
dec
sub
xchg
lock
test
adc
jl
adcl
leave
mov
mov
and
or
faddp
mov
pop
xor
xchg
dec
mov
dec
insb
lock
push
out
fildl
cmp
or
push
pusha
xor
dec
xchg
fbstp
jns
push
sub
out
and
dec
stos
cmp
pop
xchg
dec
push
lcall
inc
push
mov
lret
adc
addr16
fisubrl
sbb
dec
xlat
repnz
repnz
lods
pop
outsl
xlat
shl
xchg
dec
hlt
mov
dec
decl
popf
cmp
xlat
in
sahf
test
mov
sub
or
mov
testb
divl
mov
fwait
shrb
out
test
xchg
xlat
sti
scas
sub
mov
mov
shr
xchg
je
inc
enter
jae
in
jg
mov
popf
xor
sti
mov
mov
sub
jne
sbb
movsl
jmp
scas
cmc
aam
std
clc
mov
add
sub
js
mov
in
adc
xchg
sbb
mov
in
ds
or
ds
mov
mov
outsb
es
sub
into
sahf
dec
add
add
push
pop
bound
push
lcall
push
fcoms
sub
mov
int
outsb
std
jl
fistl
sbb
inc
xchg
xor
jns
pop
dec
popa
das
ljmp
sbb
sbb
aaa
inc
xor
and
jnp
les
test
lds
push
imul
incb
mov
xor
test
popf
lcall
fiaddl
dec
sbb
popf
pop
pop
cmpsl
ret
sbb
pop
insb
jg
test
or
mov
xor
dec
insl
outsb
sahf
lock
xorb
or
adc
xor
mov
aad
je
mov
push
cli
push
data16
nop
js
cld
xor
cmp
cli
pop
int3
aaa
in
jle
pushf
aaa
add
ja
loopne
jg
jg
cltd
adc
adcb
lahf
pop
stc
sub
or
jle
mov
aad
cwtl
in
int
or
inc
dec
pop
icebp
push
cmp
lea
jg
mov
add
test
push
into
add
rdmsr
jmp
idiv
in
xor
scas
arpl
push
test
jo
scas
mov
fdivr
ljmp
and
ret
dec
jo
or
sub
ja
pop
jl
mov
fidivrs
and
shrl
or
insl
fnstsw
icebp
pop
lock
lea
iret
fucomp
or
clc
std
jle
push
push
insb
mov
cmp
push
sub
xchg
mov
hlt
push
sti
pop
xor
or
ret
lahf
cmp
orb
in
pop
mov
sbb
fs
and
mov
push
push
sbb
ss
mov
stc
ds
shll
mov
out
inc
xlat
jecxz
mov
mov
ror
mov
cmp
or
and
xor
ficoml
sbb
pusha
std
mov
jo
and
mov
jmp
jb
mov
cmp
adcl
shlb
mov
mov
or
jmp
inc
mov
pop
jecxz
negb
pop
scas
pop
mulb
ja
std
cld
outsb
and
stos
out
leave
jne
push
or
dec
jo
inc
dec
leave
jp
ret
and
pushf
cmpb
jle
pusha
sbb
test
in
out
ja
dec
and
lock
push
insb
push
shl
mov
mov
adc
lds
clc
cmc
popa
cs
ja
lea
lds
lds
jmp
xor
dec
dec
mov
mov
lahf
ror
adcb
iret
cwtl
movsb
pushf
outsl
jge
imul
cmp
addr16
sarl
in
mov
sub
nop
pop
dec
jg
nop
or
vpshab
and
int
jg
cwtl
movsb
iret
sbb
adc
fwait
hlt
out
in
dec
loope
lahf
imulb
mov
loop
xchg
fsubrl
cs
and
sti
in
mulb
sub
inc
stc
in
imul
sbb
faddp
or
clc
pop
add
outsl
mov
jecxz
push
pushf
pop
sbb
or
xchg
shl
mov
outsb
or
mov
pop
mov
pop
outsb
mov
fwait
cmpsl
bound
dec
cmpsb
pop
movsl
mov
push
xchg
mov
lods
data16
or
sti
aas
scas
imul
add
lea
cmpb
jg
inc
push
mov
mov
jo
rcl
icebp
and
sarb
or
scas
sub
jbe
jae
mov
xchg
mov
mov
jne
lahf
in
data16
shl
aam
sbb
pop
dec
fmuls
in
sbb
in
imul
xor
lahf
aas
rcr
mov
adc
loopne
pushf
in
pusha
in
or
cmp
or
pusha
adc
push
outsl
rcrl
cmp
jp
imul
dec
call
adc
cmpl
pop
cmp
xchg
call
inc
jnp
mov
ret
test
mov
xor
xchg
sbb
and
fadd
clc
or
sub
outsb
popa
scas
or
dec
cmpsb
add
stos
cmp
push
addb
insb
inc
or
fldt
cld
sub
add
cld
andb
out
inc
aad
mov
cmp
sub
repz
fldcw
paddusw
pop
test
cmpb
outsb
ja
in
jp
xor
aad
in
les
cmp
jp
push
test
repnz
je
ja
jle
dec
out
into
ud1
cltd
int
xchg
jb
inc
sub
out
fldcw
ljmp
shrb
mov
fimull
rcrb
sub
fcmovnbe
push
sub
and
loop
xchg
fmull
mov
xor
scas
or
lahf
test
mov
xor
and
out
push
int
pushf
lret
ja
xor
pop
add
insl
loopne
filds
xor
sbb
push
jmp
cmp
jae
rcrb
jecxz
inc
shll
addl
xchg
jb
mov
or
movsb
lock
dec
imul
sub
aad
sbb
nop
stos
adc
push
xor
dec
sti
rcll
lods
mov
lock
sub
push
xchg
test
cmpsl
xor
or
sbb
jbe
daa
in
bound
and
stos
pop
fdivr
xchg
scas
fstpl
daa
cli
jns
xor
adc
faddp
mov
inc
flds
out
test
loop
leave
shrl
adc
test
outsb
insl
in
outsb
mov
and
jno
fbld
xor
fcmovnbe
dec
push
std
sti
inc
adc
push
lret
fistpl
std
test
mov
in
les
sbb
push
jnp
cltd
lods
sub
mov
mov
loop
cmp
loop
adc
in
mov
mov
pusha
sub
xor
lahf
je
xchg
mov
add
in
xlat
popf
xor
stc
jns
ret
or
vpmaxub
cmp
add
popa
mov
pop
xchg
pop
mov
xchg
add
out
inc
dec
push
arpl
cwtl
push
addb
mov
cmpl
aaa
xlat
add
hlt
arpl
add
xchg
dec
out
mov
cmp
mov
pushfw
adc
jo
nop
fucomip
mov
push
cmp
ljmp
rorb
mov
out
push
mov
mov
jg
out
inc
mov
insb
cltd
insb
ljmp
push
dec
cltd
mov
mov
or
and
add
pop
pop
jbe
mov
add
pop
xchg
stos
sbb
inc
sar
fucom
and
inc
shlb
sub
dec
push
aam
mov
sar
pop
jae
arpl
test
ja
jle
sbb
insb
stos
mov
cmp
sbb
data16
xlat
inc
rclb
sar
insb
mov
or
adc
sub
lods
test
call
fcmove
lds
and
hlt
arpl
lock
add
jbe
cmp
icebp
ret
ss
or
popa
cmp
xor
ja
bound
xor
mov
das
fcmovnb
push
arpl
or
adc
ss
sub
adc
call
xchg
pop
subl
cmpsl
push
out
loope
or
in
pop
out
xor
or
cltd
fld
cmp
outsl
jbe
inc
or
cmpsl
je
stos
xchg
pop
stos
rolb
sbb
stos
mov
mov
pop
test
sub
hlt
addr16
shll
sub
test
arpl
pop
dec
pop
push
inc
xchg
push
aam
std
clc
sub
xchg
adc
aam
pop
xchg
mov
xchg
push
cltd
arpl
scas
aad
ret
aam
dec
xchg
jl
jae
inc
cli
push
cmp
cmpsb
inc
jp
mov
bound
inc
or
stos
dec
ds
bound
les
mov
dec
pop
mov
daa
jg
mov
or
insb
into
dec
idiv
jmp
add
es
push
xchg
dec
push
sbb
push
mov
xchg
les
mov
fisubrs
dec
scas
dec
pop
je
jnp
mov
fldl
jno
sbbl
sbb
daa
imulb
arpl
mov
imul
dec
push
sub
xor
or
outsb
mov
jmp
cmp
popl
dec
mov
insl
sbb
in
fistl
mov
dec
push
iret
dec
adc
out
xor
gs
jmp
rol
ret
xor
jmp
fsubp
orl
push
rclb
add
outsl
cltd
mov
lret
pushf
jbe
cltd
push
aad
outsl
jb
insb
inc
pop
push
jae
mul
cmp
das
push
xchg
adc
sti
icebp
lcall
cmpsb
pushf
nop
push
imul
loope
frstor
adc
sti
rcl
jno
adc
cmp
inc
inc
or
sub
adcb
pop
hlt
push
in
out
xchg
or
pop
movsb
mov
mov
not
mov
mov
aas
js
enter
cmp
adc
add
push
cwtl
adc
fsts
jl
or
pop
jle
xchg
cld
mov
adc
sub
pop
mov
lock
cltd
push
sub
or
jno
xchg
xchg
xchg
push
jg
out
icebp
movb
js
push
enter
rclb
shll
in
mov
movsl
lods
loopne
cmp
xchg
fistps
and
inc
dec
or
int
sbb
cmc
out
data16
mov
pushf
inc
fstps
cmp
pusha
std
jle
cwtl
ret
sbb
mov
adcb
outsl
mov
mov
push
cmpsb
mov
mov
out
test
fisubs
pop
inc
push
out
inc
movsb
mov
dec
jmp
add
cld
push
test
outsl
sbb
js
cmpsl
or
insl
dec
push
cmp
test
xchg
dec
sahf
and
xchg
call
pop
repnz
lahf
cmp
dec
fstpt
pop
jnp
dec
movsl
xor
xchg
push
push
cmp
ds
mov
ss
stc
cmc
mov
xchg
jns
scas
xor
adc
sbb
popa
jne
sbb
int3
cwtl
xor
mov
pop
loope
mov
xchg
push
cld
pop
icebp
cmp
insb
shlb
popf
stos
cmp
push
sbb
or
es
xchg
push
pop
xor
jbe
rcll
jo
mov
dec
jne
xchg
mulb
pushf
or
sti
insl
mov
shll
out
imul
call
sahf
add
shlb
jns
movsb
leave
add
mov
test
jle
shll
xlat
sbb
pop
mov
mov
in
inc
orb
inc
std
push
mov
mov
mov
mov
stos
repz
xor
xor
xchg
dec
movsl
add
push
push
and
jnp
outsl
pop
jp
dec
inc
cmp
sub
add
cmp
mov
inc
mov
jo
and
xchg
sub
test
jecxz
cmp
sarb
adc
outsl
lahf
xchg
xchg
inc
push
sahf
jbe
dec
jo
gs
cmp
cmp
dec
insb
push
add
push
sbb
add
mov
jle
lret
rorl
lods
mov
and
addr16
dec
mulb
push
cmp
icebp
inc
push
mov
test
or
or
into
bound
cmp
mov
lods
pop
mov
daa
out
or
sbb
pop
pop
bound
inc
les
sbb
or
sbb
mov
sub
pusha
popa
and
sbb
push
cmpsl
pop
fimuls
test
out
pushf
mov
lock
add
cmp
adc
clc
shll
add
mov
xchg
stos
cld
popa
js
mov
inc
jle,pt
pop
inc
lds
xchg
adcb
xor
sbb
mov
ds
loope
roll
es
cli
dec
sub
int3
leave
inc
mov
cld
mov
daa
imul
push
imull
cmp
adc
xchg
inc
cltd
scas
jnp
or
imul
sti
hlt
mov
cmp
mov
pushf
fstpt
gs
jae
fnsave
xchg
ret
xchg
icebp
or
adc
mov
adc
fldcw
cmp
ljmp
cwtl
xchg
int
push
xchg
enter
add
sbb
in
dec
lock
lods
pop
xor
stos
cmp
sub
jp
pop
in
gs
mov
mov
jne
lret
mov
xlat
xor
test
jnp
dec
imul
adc
pop
sbbl
cmp
add
sub
xor
inc
add
fsubr
or
sahf
mov
jl
enter
das
lods
ror
test
popa
insb
cltd
jbe
add
or
dec
cwtl
or
cltd
gs
scas
inc
xor
test
sahf
dec
stos
sub
fbld
jecxz
xorb
pop
cmp
xchg
mov
sub
stc
jnp
lock
sub
cli
pop
movsl
lods
jg
in
aad
jbe
sub
leave
loope
hlt
inc
in
test
jns
fidivrs
int3
jmp
sarl
push
mov
and
cmpsb
sub
sub
cmpb
xor
outsb
jp
jb
movsl
scas
mov
jge
fcompl
mov
inc
jae
adc
movsb
lods
jp
xor
idiv
xchg
cli
xchg
loopne
nop
mov
clc
xor
scas
and
adc
pop
xor
adc
xor
mov
insl
and
pop
mov
movsb
bound
leave
push
cltd
ss
out
pop
mov
jecxz
adc
in
sar
pop
mov
stos
xchg
rcll
mov
xchg
add
push
fidivl
push
and
pop
cwtl
loop
sbb
out
faddp
pop
addr16
xchg
sbb
call
insb
jp
cltd
xlat
mov
dec
outsl
fstp
push
push
or
inc
sub
dec
ficomps
mov
into
push
jne
fisttps
mov
or
sti
push
test
sbb
out
push
cmp
fistl
dec
pop
mov
aas
fadds
fcmovnu
mov
shrl
mov
jmp
cmpsl
test
pop
shr
sbb
js
xor
dec
lret
out
adc
mov
add
mov
xor
xchg
sbb
mov
push
or
loop
sahf
out
js,pn
pop
fidivl
scas
nop
adc
adc
mov
cmp
mov
pop
push
jnp
sahf
sbb
repnz
inc
sbb
repz
shlb
js
push
jmp
rclb
fisubl
adc
xchg
cmp
and
sub
mov
push
ficompl
sbb
and
data16
lea
ljmp
push
clc
dec
xor
hlt
xchg
and
add
mov
xchg
xchg
cmp
inc
push
xchg
dec
push
push
push
cltd
mov
add
ja
inc
ds
dec
adc
mov
scas
push
mov
or
outsb
adc
imul
scas
lret
mov
xchg
sub
jns
xor
fnstsw
adc
add
fimull
or
das
add
test
mov
iret
loop
gs
popf
pop
fwait
stc
loopne
insb
and
neg
pop
xchg
std
mov
ss
sbb
frstor
clc
insl
es
sbb
out
or
or
rcrl
sbb
in
xchg
ss
cmp
mov
or
dec
shll
out
mov
jmp
dec
repz
push
into
popa
cs
imul
jb
clc
sub
mov
push
inc
ret
out
call
or
popa
nop
xchg
sbb
cmc
jl
xor
hlt
in
pop
cmp
movsl
xchg
mov
jg
xchg
popa
ljmp
sbb
outsl
xchg
lret
push
mov
sbb
clc
cltd
or
adc
sbb
cli
fidivs
shl
adc
loope
dec
cmpsb
dec
pop
push
pusha
call
movsl
push
pop
xor
or
hlt
cmp
mov
int
sbb
jle
test
or
int
movsl
and
or
mov
ljmp
scas
inc
hlt
push
pop
cmp
popf
jmp
sbb
sub
dec
mov
lods
testl
adc
mov
inc
pop
pop
mov
dec
sbb
ss
notl
jbe
inc
sub
sbb
pop
xor
push
stos
cs
popf
mov
jae
inc
jecxz
jp
cmp
adc
mov
xorl
pop
dec
orb
fdivrs
cmpsb
sbb
push
bound
sub
sbb
cmp
or
fsubr
jp
adc
mov
sub
push
and
loope
stos
mov
mov
js
or
sarb
pop
mov
std
shr
lcall
mov
add
fisttpl
mov
and
jae
cmc
add
jb
and
jbe
add
push
in
mov
mov
ret
rcr
jno
pop
je
lods
ds
mov
movb
aam
xchg
cmp
ljmp
xor
or
lds
mov
and
lods
or
sub
int
and
mov
sbb
scas
and
arpl
ficomps
push
jo
cld
daa
fistl
cmpsb
mov
mov
test
or
sbb
arpl
outsl
ljmp
and
jne
adc
fldenv
xchg
dec
les
gs
mov
mov
test
push
out
lret
mov
and
mov
cmc
sbb
sbb
cmc
mov
xchg
dec
push
inc
popf
adc
dec
adc
sub
pop
lahf
mov
loop
adc
jmp
mov
sahf
lds
fs
adc
pop
aad
and
jg
jns
pop
sysret
or
jno
mov
cmc
pop
and
fs
jecxz
js
and
fmul
inc
add
aas
cli
ffree
divl
lods
adc
or
xchg
je
pusha
je
xchg
cmp
flds
sub
jo
icebp
std
fcmovnu
cld
sub
insb
bound
fiadds
dec
pop
dec
or
sbb
imul
push
push
pop
inc
movd
inc
sbb
cli
lods
js
loopne
sbb
push
aas
push
push
dec
dec
shlb
sbb
pop
xor
popa
mulb
mov
mov
xor
dec
lret
mov
ret
fiadds
mov
sub
bound
fs
xor
dec
or
popa
push
pop
je
jmp
add
insb
aas
sbb
subl
movsb
fwait
ja
fiaddl
mov
sbb
mov
adc
add
sbb
movsl
ror
repz
push
imul
enter
test
addr16
xchg
fistpll
insb
jns
pusha
mov
mov
outsl
mov
add
pop
cmp
popf
js
aas
out
jae
xchg
outsb
jnp
push
ss
lea
jbe
movsb
push
ret
sahf
add
data16
pop
hlt
ljmp
xchg
stos
add
xor
ficomps
xchg
outsl
fists
mov
jnp
and
push
call
add
jmp
jg
cmp
inc
popa
jle
cwtl
js
lods
fstl
stos
cmova
pushf
mov
fwait
outsb
into
jns
scas
in
xorl
pop
jae
xchg
mov
add
loopne
dec
adc
call
jbe
movsl
mov
or
insb
mov
or
cld
nop
in
mov
movsb
xchg
stos
xchg
imul
xlat
dec
sahf
leave
push
adc
notb
les
pop
shll
mov
es
hlt
cmp
enter
cmpsl
pop
fwait
xchg
push
insl
dec
outsb
loope
sbb
xchg
adc
jnp
shll
jg
dec
lods
xchg
in
call
addr16
hlt
sahf
add
adc
xor
rcr
and
push
xchg
dec
jno
popa
xor
pop
push
dec
xlat
and
ret
imul
stos
sbb
cmpb
xchg
jle
fidivl
cmpsl
insl
out
xchg
les
xchg
popf
inc
ret
decb
push
cmp
push
loope
outsl
inc
sbb
movsb
jecxz
mov
push
sub
adc
jl
test
loope
stos
imul
arpl
stos
vpcmpeqd
mov
mov
jns
xlat
xor
sbb
push
loopne
fdivrl
jmp
push
nop
and
rorl
punpckldq
in
sub
mov
mov
mov
rorb
repz
add
ret
xor
jle
in
in
pop
xor
in
sahf
adc
arpl
xchg
das
ss
jge
dec
xchg
ret
loopne
xlat
xor
sbb
mov
in
in
int3
push
lcall
ret
sbb
inc
jns
jp
push
pop
sbb
push
pop
mov
aad
int3
daa
mulb
inc
xchg
inc
outsl
lret
int
imulb
push
mov
movswl
movsb
jmp
pop
push
mov
mov
inc
xchg
repnz
push
mov
and
adc
pop
push
xchg
ret
jmp
popa
mov
cli
lcall
test
in
es
and
adcb
mov
je
and
xchg
sbb
cmp
jmp
or
inc
mov
int3
jge
rol
leave
leave
add
std
sub
imulb
fidivs
adcb
mov
lock
jl
pop
or
cmp
outsb
pop
aaa
mov
daa
mov
ret
push
and
test
cltd
into
push
mov
outsl
enter
fadd
cltd
rorb
lds
cmp
cld
add
ficomps
jp
xor
mov
enter
sub
xchg
shl
mov
imul
mull
sub
popa
jg
test
and
dec
xor
cld
pop
cmpsl
adc
xchg
leave
mov
jnp
out
pushf
cmpsl
call
jne
push
test
das
dec
mov
das
cmc
mov
pop
hlt
mov
and
stos
mov
dec
pop
mov
bound
and
daa
jae
call
xchg
add
ret
js,pn
rcll
xlat
or
jns
cmc
lock
dec
xor
bound
stos
in
cli
mov
aaa
add
dec
jp
mov
push
adc
cmp
shlb
jp
jne
fisubrl
in
int3
movsb
mov
jno
inc
mov
out
lock
mov
jne
pop
scas
repz
sub
sarl
out
ja
test
div
lahf
adc
sub
test
or
jne
dec
or
fs
pop
std
lret
mov
sbb
mov
mov
std
sbb
xor
aaa
push
dec
dec
sub
inc
ja
cwtl
pushf
iret
or
aaa
or
outsl
and
rorl
lret
jl
jle
incb
xchg
mov
mov
mov
lods
mov
jmp
mov
mov
sub
dec
fsubl
mov
push
push
add
inc
add
inc
iret
leave
jbe
cmp
mov
test
mov
int3
mov
cwtl
mov
pop
outsb
dec
imul
inc
shl
test
ret
out
mov
cmp
fsts
outsb
cmp
mov
lret
mov
in
pop
mov
repz
push
mov
cmp
adc
xor
mov
les
subb
int3
fs
mov
xchg
arpl
repnz
in
jl
cmp
out
ret
clc
cmpsb
sub
arpl
loopne
xor
stos
repnz
push
ret
mov
mov
push
adc
push
mov
push
fstl
xchg
fisttps
pop
pop
jl
iret
dec
or
or
sbb
ret
iret
pop
or
mov
scas
repnz
push
sarb
or
cmpsl
or
pop
or
loop
movl
lret
push
inc
stos
shr
scas
movsb
dec
rorb
xor
hlt
xchg
cli
mov
pop
adc
mov
xchg
fisttpl
scas
ljmp
xor
xchg
xchg
outsb
outsl
loope
std
sbb
mov
femms
pop
je
dec
cmp
xchg
adc
pop
aad
xlat
lea
sub
mov
mov
jp
sub
mov
repz
jecxz
out
shlb
dec
insb
mov
cmpsl
fnsave
xchg
xchg
mov
mov
lea
adc
orb
mov
mov
lods
shll
pop
or
sub
inc
sbb
add
out
jb
add
mov
je
xchg
mov
aas
xor
leave
in
stos
jne
xchg
jns
pop
rcll
xor
ss
mov
outsl
mov
in
mov
xchg
push
pop
out
mov
test
pop
xor
ds
rorb
jo
add
icebp
movsl
pop
pusha
xlat
pop
shll
outsb
pcmpgtb
mov
lret
mov
bound
push
aaa
lcall
lcall
push
cmp
popf
or
sub
dec
lds
mov
rorb
shr
movb
bound
pusha
adc
mov
mov
into
dec
lret
fbstp
xchg
dec
sti
outsb
lods
sahf
adcl
cmpsl
lock
hlt
adc
hlt
ja
orb
scas
mov
aaa
jbe
daa
sti
popf
hlt
xor
ret
sub
xchg
push
ficoms
mov
sub
sbb
call
test
fs
xchg
test
dec
xchg
push
sub
jecxz
movsb
ja
push
in
movsl
in
pop
mov
cltd
scas
xchg
andl
ja
and
sbbl
lds
or
pop
lock
incb
add
jge
ficompl
pop
in
aas
push
push
dec
popa
jb
cmpl
inc
cs
out
inc
add
repnz
or
dec
push
cmpb
lret
dec
aaa
xchg
mov
pop
pop
aam
add
test
out
stos
push
clc
and
mov
fisubrs
mov
mov
pop
cmp
jl
mov
push
jno
cmpsb
ret
packssdw
cmp
mov
ljmp
mov
jl
add
std
add
or
cmp
roll
arpl
lcall
test
insb
adc
or
mov
jecxz
aam
dec
inc
jmp
imul
dec
jecxz
sub
sbb
push
cmp
dec
aas
inc
sub
push
xor
xchg
stos
mov
sbb
jecxz
fmuls
jg
pop
negb
loop
es
pop
test
pop
out
cmpsl
les
fmull
push
mov
push
pop
hlt
fwait
dec
dec
cld
pushf
test
outsb
test
lods
mov
shlb
ror
hlt
int
fists
push
js
pop
je
adc
xchg
lods
cli
mov
mov
jae
jg
daa
jp
inc
cltd
jae
push
lods
pusha
fidivrs
sub
cmp
mov
dec
movsl
add
mov
aaa
xchg
cmp
inc
test
inc
ljmp
cmp
cmp
push
popa
jb
or
push
mov
lret
cwtl
pop
adc
xor
push
push
in
sub
mov
pop
xchg
ljmp
fildl
pop
cmc
xchg
stc
popa
xor
icebp
sarl
out
adc
popa
leave
mov
jbe
and
outsb
mov
jb
subl
add
test
adc
repnz
mov
xor
cmp
cmp
lret
enter
and
insl
cld
inc
int
and
pusha
int
int
mov
clc
sbb
adc
sbb
or
xor
dec
iret
ja
scas
or
mov
imul
dec
lret
sub
cmp
ljmp
push
test
jle
mov
les
inc
adc
arpl
pushf
lock
stc
xchg
lock
pop
std
outsl
mov
cmp
jbe
pop
inc
ja
sarb
jle
inc
stc
in
jl
jns
fsubl
mov
pop
imulb
cmpsl
fisubrs
xchg
loopne
mov
mov
mov
cltd
movsb
push
inc
ja
push
test
or
jne
cmp
jle
xchg
and
arpl
or
test
cld
jmp
mov
xchg
xchg
scas
shlb
xchg
mov
leave
in
or
jg
cli
test
popl
nop
add
sub
loop
imul
mov
mov
inc
inc
mov
sbb
cli
pusha
and
mov
les
rcr
sbb
pop
jmp
stos
ret
cmp
imul
mov
mov
mov
lahf
imul
jbe
out
sbb
int
fidivl
cltd
cmc
stos
lcall
jo
test
cmc
ret
insb
jb
les
dec
dec
mov
mov
fs
scas
push
and
data16
inc
insl
fdivl
imull
cmp
imul
mov
not
sub
stos
cmpsl
inc
into
sbb
push
sti
adc
addr16
mov
push
adc
lods
inc
in
inc
in
enter
xchg
nop
rorb
mov
mov
iret
mov
adc
mov
leave
inc
divb
cli
sub
and
aas
roll
ss
pop
sbbb
imul
add
xorl
dec
outsl
or
adc
je
and
lret
xchg
and
push
aas
cli
jae
aad
xchg
aas
dec
ret
mov
adc
addr16
xchg
xor
push
es
hlt
jns
mov
inc
mov
cmp
outsb
add
add
bound
shrb
mov
cmp
xchg
jg
sub
sahf
ss
xchg
int
adc
gs
dec
lea
shl
in
shll
das
movsl
aas
test
imul
cli
sbb
xor
cmc
mov
stc
jp
loop
jbe
clc
aam
adc
mov
add
int
iret
xor
add
push
or
and
xchg
or
sub
int3
stos
xchg
rcll
shr
push
int3
sub
mov
out
inc
sti
mov
or
std
cs
sbb
scas
xchg
sbb
xchg
or
rcr
pushl
add
enter
filds
hlt
test
mov
aaa
test
or
mov
pop
mov
or
lock
aaa
loop
dec
xchg
sbb
enter
mov
test
test
mov
add
dec
aaa
xchg
sub
ja
insl
aam
cmp
rcl
dec
mov
xlat
or
adc
or
pop
pop
adc
push
cwtl
shlb
sbb
int
movsl
fimuls
in
in
ja
adc
mov
fbstp
out
cli
adc
aaa
repnz
test
ds
push
int3
mov
and
in
mov
fildll
jns
addr16
push
and
jnp
push
pop
and
cld
or
lods
or
mov
loope
inc
cmp
inc
sbb
enter
sub
mov
adc
movsb
mov
pop
mov
xchg
mov
lock
lods
es
aaa
into
aas
out
fstps
lds
mov
lret
push
sbb
sahf
jb
jno
xor
jmp
ss
or
cwtl
pop
lcall
sbb
fists
xor
jl
or
dec
push
out
cwtl
push
in
sti
loop
scas
jmp
mov
jl
mov
mov
aaa
jge
push
push
mov
xlat
into
or
pop
loope
arpl
sbbb
hlt
andb
adc
mov
jbe
xor
or
push
xor
push
call
ds
mov
add
and
ret
fidivrl
sub
jne
cmp
mov
and
dec
mov
popa
lret
stos
mov
call
notl
xchg
jp
sbb
pop
sub
add
loopne
outsl
push
fdivrl
fmul
xchg
mov
pop
addl
mov
and
inc
dec
fs
call
inc
cwtl
mov
mov
ret
sbb
sub
out
cmp
mov
mov
or
fisubs
das
insl
xlat
xlat
insb
fdivrs
mov
jle
aaa
sbb
sub
loop
jmp
push
pusha
xorl
push
xor
jp
sbb
stos
aam
popa
lret
xor
inc
leave
rcrl
jle
cld
popa
sub
push
emms
repnz
stos
out
pusha
out
leave
sub
mov
cmc
out
pop
fsubs
sub
ss
mov
scas
sti
sbb
loopne
cmp
cmp
inc
in
dec
and
xor
jo
arpl
movsb
push
loopne
sbb
push
inc
sbb
pop
xchg
stos
xor
scas
imull
add
popf
das
jg
scas
mov
xor
lcall
xchg
pop
dec
call
sti
sti
jae
subb
pop
inc
xchg
jl
mov
outsl
imul
jnp
hlt
inc
cltd
arpl
jp
rcll
sbb
fnstcw
pop
add
pusha
xchg
std
in
je
and
sub
sti
ja
mov
scas
ror
fbstp
pop
add
out
cs
push
xchg
jno
imul
pop
mov
adcl
and
je
sbb
mov
mov
rorl
jbe
test
sub
jl
mov
lea
and
cmp
dec
mov
mov
pop
fwait
addr16
insl
jmp
xchg
sti
test
movsb
pop
mov
movsl
cmpsb
in
in
stos
mov
inc
aad
xchg
sbb
loope
mov
jle
rcrb
mov
mov
loopne
sbb
mov
into
mov
or
lods
outsl
pop
jp
mov
push
pushf
arpl
jae
lods
mov
xchg
and
cmc
andl
enter
inc
push
push
stos
adc
adc
jbe
mov
imul
dec
dec
sub
push
popa
mov
jle
xor
in
loope
pop
mov
cmpsb
in
pop
push
jae
gs
std
cltd
mov
es
js
inc
lahf
and
int
cwtl
xchg
cli
stos
cmovne
ljmp
adc
ret
push
loop
insb
mov
loopne
fstpl
cmc
cmp
and
mov
loop
enter
daa
xchg
ret
push
mov
dec
pop
mov
jne
push
jnp
aas
mov
icebp
cltd
lret
mov
ljmp
xchg
inc
popf
sub
out
cltd
mov
sub
cmp
nop
xchg
xchg
js
mov
pop
mov
add
or
bound
and
addb
movsb
fnstcw
in
xor
imul
fdivp
add
data16
mov
int
mov
mov
cmp
ljmp
sarb
neg
mov
inc
cmpl
popa
test
icebp
roll
dec
dec
sbb
in
test
fwait
cmp
lea
mov
jp
cmc
pop
sub
pop
push
cmpsl
aam
mov
cmp
lods
dec
bound
sarl
sbb
sub
mov
dec
xor
rcrb
pop
shlb
out
adc
mov
sahf
cmpb
cwtl
xor
or
stos
aaa
fs
mov
cmc
push
sub
cmpb
xor
popl
or
fisttps
push
pop
scas
xchg
or
fiadds
je
pop
loop
testl
jge
mov
stos
mov
cmpsb
jo
pop
adc
mov
sarl
push
imul
sub
out
out
sub
mov
repnz
ficoml
mov
outsl
pop
add
mov
shll
xlat
scas
inc
pop
mov
lds
js
xchg
push
cmp
idiv
lret
popf
sbb
sub
mov
mov
jmp
cmp
inc
popa
iret
movsb
push
test
mov
lock
out
test
mov
push
dec
out
mov
rcrl
inc
lret
stos
dec
mov
xor
xchg
loop
lock
fsubs
jns
shll
sbb
pop
repnz
mov
jne
ret
jmp
sbb
inc
fmull
push
mov
mov
mov
popa
pop
insb
into
adc
mov
lods
adc
mov
popf
sub
push
add
out
mov
xchg
dec
ret
push
mov
mov
push
pop
inc
fcoml
ja
ljmp
fs
mov
pop
cmc
hlt
adc
rolb
pop
push
cmc
add
cld
lret
orl
rcr
scas
push
std
jno
test
push
ja
ret
xchg
orl
push
mov
popf
nop
repz
ror
jge
or
cmp
in
in
call
xor
andl
xor
push
stos
gs
or
mov
mov
sub
hlt
imul
sub
gs
adc
inc
in
cmp
adc
lods
dec
jnp
aam
out
loopne
out
jbe
jbe
xor
xor
cmpsl
jmp
lret
movsl
xor
loopne
into
ret
dec
or
push
sbb
adc
xor
imulb
sub
mov
into
inc
jecxz
sbb
aaa
mulb
sub
frstor
repnz
xor
mov
mov
pop
sub
add
in
call
outsl
hlt
and
push
sbb
jmp
cmp
pop
dec
aaa
mov
mov
and
movsb
push
pop
add
pop
xor
jle
xchg
scas
test
adc
arpl
rcrl
and
call
sbb
mov
arpl
call
push
mov
sub
cmc
and
loop
fsubrl
mov
push
mov
adc
out
outsb
test
inc
xor
mov
mov
fwait
cmp
lea
xchg
rolb
test
mov
int
fucomp
pop
push
movsb
and
sub
sub
push
leave
mov
into
push
mov
add
int
andl
bound
xchg
sub
mov
xchg
dec
fsts
scas
push
xchg
xchg
mov
or
add
cmp
gs
sub
pop
cmp
pushf
jl
push
data16
push
fisubl
enter
out
jne
jmp
mov
mov
xor
loop
int
push
flds
int
lock
sub
jp
pop
sub
lret
insl
outsl
cmpsb
shrl
jle
aad
jmp
cmp
dec
dec
inc
mov
shl
clc
dec
shl
cmpsl
dec
dec
push
leave
test
push
xchg
sub
andl
shlb
movsl
sub
inc
and
test
and
loopne
sbb
add
inc
add
js
sbb
addr16
inc
fsubl
mov
inc
xor
sbb
add
cmpsb
pushf
divb
cltd
push
and
imull
in
cmp
inc
dec
test
sbb
cmpsb
call
push
dec
push
sub
pop
dec
enter
cmpl
daa
lods
mov
mov
in
je
leavew
or
sub
xchg
test
lea
ret
decb
mov
pushf
pop
gs
mov
mov
lcall
sbb
test
xchg
lock
mov
adc
in
xor
pusha
xchg
mov
dec
dec
xchg
leave
mov
pop
mov
pavgw
call
stos
cmp
filds
cmp
inc
ljmp
cmpsb
xor
cmp
or
xor
sub
inc
repz
mov
adc
dec
push
xor
bound
idivl
adc
gs
loop
stc
jge
add
inc
dec
add
test
dec
jno
adc
cmp
mov
and
pop
imul
xor
adc
dec
mov
pusha
push
or
fldenv
and
mov
push
mov
add
mov
and
aaa
ds
ja
sbb
sbb
sub
xchg
sbb
movsb
pop
movsb
push
xchg
sub
sbb
and
mov
mov
imull
sub
insl
inc
or
or
add
push
dec
mov
adc
mov
dec
mov
xchg
adc
orb
into
mov
popa
out
pop
lahf
mov
subl
ja
cmc
add
sbb
dec
and
xor
into
mov
jno
sbb
iret
leave
push
push
stos
js
dec
add
jge
push
pop
push
cltd
mov
mov
lahf
push
leave
pop
sub
call
sbb
pop
sbb
arpl
in
jg
cmp
mov
pushf
lea
loope
mov
aam
out
fisubl
icebp
ss
scas
pop
xorl
aam
testb
in
repnz
and
jbe
andl
sub
inc
leave
xchg
fiaddl
dec
test
sub
ljmp
outsb
xchg
lret
mov
mov
les
or
push
push
jno
xor
push
xchg
out
mov
mov
nop
xor
sub
mov
xor
sub
pop
mov
xchg
pop
or
nop
inc
pop
xorb
push
xchg
cmp
push
dec
push
fisttpl
fcomp
cmp
cmp
xchg
xchg
and
jne
lret
lds
xchg
fcomip
cs
push
inc
xchg
mov
dec
cltd
mov
mov
sub
mov
mov
fnstsw
fistl
std
xchg
aaa
mov
pop
push
lahf
je
iret
and
rcrl
repnz
out
dec
pop
jno
clc
sbb
mov
jmp
fadd
push
lahf
faddp
cmp
ss
sbb
shr
hlt
daa
clc
sub
cli
pop
xor
dec
inc
popa
in
dec
or
bound
jge
sbb
push
mov
jge
sub
pop
aam
scas
mov
aas
xchg
jo
pop
loop
sbb
mov
or
imulb
or
imul
cmpb
scas
pop
mov
ss
lds
out
call
add
mov
call
xchg
dec
lock
mov
xchg
orb
sub
ljmp
clc
sti
es
jb
cmpsb
out
clc
ss
xchg
sbb
cmovne
mov
sub
pop
in
es
lahf
jecxz
mov
push
je
or
jp
adc
cmc
test
adc
mov
mov
pop
xor
dec
jl
or
leave
aas
jae
or
adc
int
inc
and
jp
add
push
push
push
mov
stos
ljmp
dec
adc
jne
sub
or
xchg
or
mov
loope
dec
ja
mov
mov
mov
movl
cmp
or
iret
aad
inc
fbstp
mov
pop
ds
mov
mov
xor
cmpsl
mov
mov
xchg
pop
lds
lds
dec
push
push
arpl
xchg
xor
testl
in
xchg
push
test
mov
daa
xchg
adc
xchg
sbb
flds
orl
jmp
rclb
ds
pop
jnp
adc
sbb
cltd
mov
jle
adc
test
loope
nop
subb
xchg
or
popf
loopne
mov
cmp
aam
push
in
mulb
mov
pop
jecxz
sub
mov
mov
sbb
ljmp
inc
outsb
pop
insl
cmovns
aas
sub
stos
test
or
pushl
fwait
inc
or
hlt
in
fwait
or
movsl
movsb
or
pop
xchg
sbb
in
inc
jl
pop
or
mov
flds
mov
aaa
adc
jmp
sbb
lret
shll
add
fnstenv
add
dec
jns
mov
ss
mov
pop
sti
xchg
add
mov
cld
lea
cmp
mov
add
xchg
cmpsb
push
ss
dec
stos
lcall
xchg
sbb
adc
sbb
pop
cmp
arpl
mov
or
in
lea
add
pop
push
xor
mov
test
push
cwtl
cmp
adc
jne
pusha
call
pushw
int
dec
hlt
stos
jl
insb
sub
cmp
dec
in
adc
out
or
xor
fdivrp
in
xchg
sub
lds
adc
mov
popf
sbb
and
push
hlt
and
movsb
lret
xor
mov
push
mov
lahf
mov
xchg
lds
cmpl
xlat
mov
mov
mov
movsl
xchg
xor
ljmp
cmp
adc
js
scas
adc
push
imul
imul
lods
mov
aaa
ljmp
inc
jo
rorl
lds
add
and
jbe
daa
testl
or
pop
lret
pushf
iret
mov
sbb
int3
outsl
aad
mov
ret
loope
hlt
sub
jp
pop
repnz
cwtl
xchg
dec
scas
aas
mov
push
push
into
bound
mov
test
inc
rolb
mov
xor
jnp
mov
xor
add
fprem
jmp
pusha
mov
sub
mov
es
popa
imul
add
mov
shlb
mov
int
sub
pop
and
xchg
dec
vpcmpeqd
sub
dec
loop
into
imul
and
fsubl
xchg
mov
sbb
rcl
adc
lock
add
jne
fs
repnz
sbb
sbb
mov
and
test
pop
pop
sub
cli
cmp
in
jmp
mov
daa
pushf
jae
cmp
push
xor
jg
stc
jae
inc
push
pop
xchg
pop
xor
sbb
popl
mov
enter
mov
cmpsl
dec
lcall
subl
mov
jo
xorl
iret
adc
out
cmp
fcomps
outsb
loope
insb
dec
inc
dec
xchg
cmp
mov
and
add
dec
or
nop
les
andb
jns
jo
cmp
stos
movsl
adc
xor
dec
ret
repz
cmp
or
sbb
jns
into
dec
and
dec
xchg
xor
jnp
xor
add
push
mov
lds
insb
dec
imul
lock
mov
fisttpl
icebp
xchg
iret
arpl
idiv
inc
and
enter
cld
and
push
cli
arpl
aad
jp
xlat
and
fnsave
loop
shrb
xor
pop
xlat
clc
xchg
loop
mov
testb
pop
mov
sbbb
and
pusha
cmp
cmp
test
cmp
inc
push
dec
inc
aaa
in
xchg
inc
fwait
rcrb
mov
sti
inc
pop
test
jae
or
sbb
xlat
dec
addb
dec
aas
dec
je
adc
push
or
pop
imul
lds
or
out
repz
and
stos
mov
mov
iret
popa
addr16
ret
and
lds
push
mov
lret
push
mov
push
in
jmp
push
push
push
ss
fs
sbb
mov
adcb
cltd
mov
xlat
xor
dec
fnsave
orb
jp
xchg
out
arpl
dec
jae
sbb
pushf
mov
leave
scas
sbb
jb
dec
mov
xchg
sbb
lods
jl
mov
dec
xchg
inc
push
lods
inc
loope
nop
lahf
stc
out
xchg
xor
aad
jo
xorb
dec
aaa
adc
arpl
sarl
push
dec
repz
in
and
add
jp
push
fcomps
stos
in
data16
pop
out
dec
cltd
sub
outsl
jbe
push
mov
cltd
add
in
ss
dec
test
dec
divl
or
and
lahf
xchg
sub
pop
push
xor
xchg
inc
mov
inc
cmp
idiv
stc
test
add
pop
xchg
dec
clc
mov
sbb
lds
push
das
jle
hlt
out
and
adc
cwtl
cmp
jb
mov
xor
cmp
xchg
add
push
mov
xchg
or
push
xchg
arpl
cmp
pop
sbb
outsl
ss
cmpsb
jp
mov
fcmovnu
jo
int3
xchg
mov
xor
sti
mov
push
dec
xchg
xchg
or
sahf
pushw
loop
cmpsl
lret
sti
ret
push
xchg
outsl
shll
lock
fdiv
pop
cmpsl
jecxz
xlat
sub
fdivrs
mov
iret
cmp
mov
dec
outsb
jmp
lds
sbb
cmp
sub
scas
sbb
jl
sahf
inc
push
xchg
loopne
sub
mov
daa
lahf
cmpb
xchg
mov
movsl
repz
and
cmp
sbb
jle
mov
cmp
test
sbb
and
mov
in
lret
in
gs
insb
mov
dec
aaa
mov
out
aam
bound
in
fistpll
dec
in
leave
push
dec
int
andb
adc
mov
jmp
jl
scas
inc
cwtl
push
imul
add
add
xchg
aaa
jnp
mov
lcall
shl
cmp
mov
pop
pusha
sbb
ja
mull
pushf
mov
out
mov
leave
pop
adc
pop
lahf
jns
ficoms
dec
into
push
inc
and
adc
push
push
repnz
out
xorl
adc
lahf
push
or
neg
ret
sbbb
and
mov
push
inc
jmp
lds
and
pushf
adc
xor
out
mov
push
sub
mov
jno
mov
cmpsl
push
xor
fists
dec
jo
lds
pop
insb
mov
lcall
sahf
push
xchg
add
xchg
imul
pusha
xchg
add
mov
imul
int3
mov
scas
pusha
mov
out
pushf
pop
pop
enter
subb
loopne
fmul
aaa
or
adc
inc
fwait
mov
stos
enter
daa
mov
movsb
stc
inc
testb
dec
xchg
lock
out
xchg
hlt
jns
mov
mov
push
shll
lcall
pusha
loope
insl
std
sti
insl
les
lods
mov
push
test
mov
cmp
jg
je
fdivrl
xchg
bound
pop
lods
scas
shl
das
clc
lods
addb
add
fsub
test
insl
into
mov
mov
addr16
sahf
add
push
jge
imul
aad
adc
xor
dec
and
inc
mov
stos
daa
jnp
push
lret
add
push
sub
nop
rcrb
add
mov
std
les
push
jnp
sbb
repz
mov
fsubrs
inc
rorb
into
mov
mov
pusha
test
sub
push
pop
imul
add
inc
aas
cs
xlat
and
sub
xchg
not
cs
sahf
pavgb
jp
push
aam
in
dec
loopne
idivb
rep
loop
fldcw
pop
xor
dec
mov
dec
mov
mov
pop
hlt
int3
jge
aas
or
ja
pop
test
xor
outsb
out
mov
or
sbb
insl
sub
jle
xchg
enter
rcrb
fld
pop
outsl
adc
hlt
xor
dec
mul
pusha
mov
push
inc
js
addb
mov
sub
pop
pusha
pusha
aas
xchg
es
xchg
gs
stc
lret
loope
xor
mov
clc
pop
es
lods
jno
mov
sub
mov
pushf
lret
cld
sub
lea
in
cmpb
add
pushl
pop
and
add
push
popa
rorl
sarl
sbb
sub
loop
cmp
faddl
add
jns
and
sti
jo
jnp
call
mov
call
sub
push
lret
xchg
pop
pop
sbb
inc
cmp
sbb
add
test
outsb
imul
cmpsb
xchg
mulb
and
mov
jb
data16
lret
xchg
test
stos
jp
into
daa
cltd
dec
in
int3
mov
jecxz
std
mov
fdivrs
test
add
pop
inc
ja
pusha
sbb
imul
mov
decl
and
sub
ja
jns
push
inc
dec
or
cmp
inc
outsl
cmp
add
rclb
xchg
push
xchg
insb
movsl
in
push
cmp
dec
aam
cmpl
adc
sub
adc
cmpsb
cmp
js
sbbb
clc
bound
push
and
mov
das
xchg
jmp
push
jae
mov
int
outsl
or
imul
ret
ret
outsl
popa
pop
test
push
jns
jl
mov
adc
in
data16
push
ljmp
iret
insl
icebp
cld
mov
or
cmp
xlat
pop
icebp
mov
pop
cmp
cmp
loope
in
push
in
sub
or
xchg
fisttpl
roll
adc
dec
in
jle
inc
in
push
jl
pushf
movsl
jnp
mov
sarl
fcoms
mov
pushl
data16
stos
fs
cs
cmp
mov
loop
bound
insb
jmp
cltd
jnp
mov
rcr
stos
jnp
xchg
in
jge
ret
inc
out
out
cmp
mov
sbb
cmp
fbstp
mov
pop
adc
mov
mov
cmpb
sbbb
cld
ja
cmpsl
push
push
mov
outsl
jge
xchg
cwtl
and
repnz
add
loope
pop
adc
notl
sub
iret
adc
push
sti
lock
cmpsb
into
bound
pop
out
scas
xchg
mov
popf
insb
xchg
or
add
lods
mov
gs
and
push
cmp
ret
xchg
repnz
int3
ja
es
je
stc
mov
gs
loop
popf
lock
or
shlb
fimull
sbb
dec
cmp
mov
es
adc
jecxz
sti
loope
sahf
and
cmp
cmp
inc
and
add
out
cmp
mov
push
jg
loopne
push
mov
fisubs
add
lahf
test
in
je
fidivs
insl
idiv
xor
dec
jecxz
scas
and
sar
loop
or
in
repz
push
dec
leave
sbb
scas
lea
test
fcoml
insl
clc
push
mov
and
push
stos
loope
in
mov
cmc
mov
ret
and
add
pusha
icebp
sub
lds
stc
dec
push
pop
sbb
sub
ret
sub
in
dec
shl
cmpsl
mov
mov
or
das
jg
xor
fsubrl
jnp
push
sti
int
jns
adc
mov
in
imul
mov
ds
icebp
aas
pop
jo
and
dec
pop
xchg
mov
pop
push
cld
addr16
xor
pop
out
dec
icebp
add
outsb
push
inc
mov
sbb
add
and
xchg
add
jecxz
mov
xor
jmp
cltd
lds
mov
lods
fwait
outsb
jmp
popf
rorb
lahf
aaa
insb
sbb
mov
int
out
fsubl
out
pop
jb
dec
mov
xor
out
ds
jge
inc
jo
adc
test
xchg
adc
lods
sub
mov
dec
aad
cld
sti
dec
mov
fwait
loopne
jns
pop
push
push
xor
aam
or
inc
cmpsl
xlat
xchg
das
sub
aam
loopne
and
adc
pop
imul
arpl
das
xchg
ret
inc
jno
cli
cmp
add
out
xchg
push
test
xchg
repz
lcall
adc
dec
repnz
mov
and
fnstsw
jecxz
inc
push
pop
js
lds
lds
and
dec
mov
lahf
cmp
stc
mov
mov
xor
pop
jmp
enter
nop
inc
jb
pushf
mov
jb
push
cmp
add
sbb
sbb
push
xchg
stc
cmp
and
insl
je
shrl
push
xchg
mov
sub
fistpll
mov
div
sbb
fwait
rcl
mov
dec
jo
icebp
or
push
cmp
ja
xchg
jbe
ja
cld
jge
mov
pusha
cld
push
les
out
sub
daa
lods
adcb
mov
push
jno
xor
push
xchg
mov
mov
pop
mov
pop
pop
pop
inc
inc
mov
sub
fcmovnbe
jne
arpl
mov
sbb
ljmp
mov
cmp
loope
icebp
scas
subl
push
into
jecxz
mov
ficomps
inc
mov
jl
mov
push
sbb
or
push
bound
cmc
push
pushf
push
cld
fwait
cmpsb
je
ror
push
mov
leave
dec
sub
cltd
xchg
dec
out
inc
test
mov
mov
mov
stc
std
mov
das
mov
out
adc
into
adc
out
adc
push
lods
push
jp
ret
add
les
out
pop
repnz
gs
pop
cwtl
inc
cs
cmovge
fidivl
jo
fwait
scas
pop
in
adc
sub
imul
mov
insb
cvtps2pd
add
sbb
mov
in
adc
cmp
push
int
aas
jmp
add
jbe
aad
mov
inc
pop
push
mov
lahf
jnp
pop
cmpsb
mov
jmp
jecxz
sub
mov
enter
insl
lock
add
stos
out
push
push
fwait
bound
enter
incl
inc
fsubl
insb
scas
sbb
das
imul
push
push
xchg
xor
divb
fsub
iret
add
stos
mov
iret
mov
lcall
fs
push
gs
cmp
ds
inc
inc
pop
jmp
mov
or
push
rorl
xchg
mov
pop
xchg
es
xchg
mov
and
jb
in
ret
pop
mov
xchg
xchg
shlb
mov
and
or
cmp
popa
jnp
and
out
jg
les
mov
mov
movsb
add
sbb
sub
push
xlat
jnp
sbb
pop
cmp
adc
test
xchg
sti
mov
outsb
xchg
xor
sub
sub
pop
mov
fldpi
adc
sub
add
push
pop
movl
and
mov
std
mov
adc
and
xchg
jl
jecxz
mov
stos
sub
push
int3
inc
cmp
cwtl
pop
cmp
mov
not
int3
and
movsb
push
add
imul
sti
inc
out
jmp
mov
addr16
in
pop
movb
loopne
rclb
sarl
daa
adc
push
pop
fdivrl
pop
mov
xlat
mov
push
ja
ds
adc
mov
fcmovne
lret
iret
or
and
test
cmp
xchg
push
add
dec
pop
shll
cmp
pop
bound
jnp
decl
sub
call
cld
inc
add
daa
cmpsb
xor
lods
insl
inc
popa
popf
sbb
sahf
pop
std
sti
and
add
jp
stc
xchg
adc
js
pushf
in
idivl
lds
daa
inc
mov
icebp
fildll
and
subl
std
and
cltd
adc
xchg
jae
mov
sub
and
leave
rclb
pop
out
pusha
xchg
lods
lds
sti
in
sbb
xor
insb
cwtl
cs
mov
mov
sbb
mov
adc
sub
iret
push
pop
lcall
rcrb
jo
in
ficoml
add
sahf
dec
mov
jp
inc
aad
iret
cmpsb
sbb
jp
jbe
inc
in
or
and
dec
sbb
lods
arpl
popl
dec
fsubrs
sub
in
sbb
addr16
cld
push
fucomip
or
xor
mov
stos
sub
insl
loopw
scas
iret
or
jns
pop
add
add
ljmp
imul
insl
sub
add
mov
jl
add
mov
cmpsb
mov
cmp
and
add
shll
inc
cmp
adc
push
push
loopne
rsm
das
push
nop
iret
xor
jne
ret
dec
test
jecxz
add
insl
fnstenv
outsb
out
int
aad
push
fisttpl
cli
jo
push
outsl
jno
out
pop
mov
jo
sahf
jo
pop
push
out
lahf
inc
mov
ficompl
repnz
dec
jp
pop
jecxz
ja
enter
in
fldt
add
cmp
in
fistl
rcr
inc
add
out
repnz
mov
adc
push
dec
mov
out
fsubs
sbb
xor
inc
jle
lret
cwtl
nop
lea
and
shl
stos
cwtl
in
dec
mov
pop
dec
cltd
dec
dec
xorl
insl
mov
inc
inc
cltd
scas
adc
jl
fs
add
pop
aam
mov
inc
imul
jo
inc
mov
xchg
or
xor
push
pop
cmc
andb
xchg
loope
jecxz
lods
mov
addl
aam
test
dec
sub
mov
fs
jno
xchg
push
pop
repz
call
inc
dec
adc
je
ret
mov
icebp
push
xchg
push
lea
mov
sarl
mov
pop
frstor
cmpsl
mov
pop
popa
out
jns
fs
push
xchg
scas
add
cmp
sbb
loope
mov
dec
jb
loop
jle
add
sbb
sbb
pop
xchg
mov
dec
or
out
lcall
and
scas
lods
mov
cmpb
mov
add
movsb
cmpsb
pop
test
sbb
push
and
jb
pop
lret
mov
or
repz
mov
inc
jmp
add
pop
sub
or
data16
iret
enter
cltd
push
pop
aaa
adc
xchg
stos
lret
lcall
push
aas
stos
mov
mov
aam
clc
rorl
std
push
inc
cmovbe
and
into
sbb
movsl
addr16
jb
insl
jge
push
inc
pop
add
bound
push
cmp
jge
enter
xchg
rol
iret
es
test
and
ljmp
xchg
testl
dec
jmp
adc
or
jle
enter
sarl
lcall
jne
orl
mov
jno
ja
shr
nop
xchg
xchg
outsl
int3
sub
mov
and
push
adc
enter
jmp
call
xor
cmp
or
imul
cs
pusha
and
jmp
push
jp
insb
mov
pop
or
cwtl
mov
pop
rcrb
out
xchg
adc
test
repnz
pop
add
shr
sti
test
fld
and
jl
lahf
daa
pop
add
mov
dec
stos
cmp
les
add
jne
mov
pop
mov
dec
add
cmp
adc
aaa
push
pop
push
in
add
push
adc
inc
mov
icebp
scas
add
mov
add
mov
pop
and
in
in
outsl
not
in
xchg
cmp
jae
lock
sbb
xor
xor
test
jecxz
jge
inc
cmp
add
je
inc
cmp
lret
iret
mov
stc
lds
mov
lods
and
xor
dec
nop
stc
mov
popa
scas
pop
out
pop
mov
mov
mov
ja
mov
aas
enter
sbb
dec
or
pop
sar
xchg
cmc
aaa
inc
mov
xlat
xor
aad
jg
fnsave
mov
pop
sub
inc
mov
jae,pt
mov
adc
mov
xchg
bound
sbb
xor
and
jmp
cmp
mov
or
inc
jae
xor
mov
push
or
push
dec
lret
notb
fnstenv
stos
popf
mov
pop
pop
in
repz
cs
dec
int3
push
sahf
test
xor
sub
mov
pop
inc
test
test
sbb
dec
sub
or
jae
sub
inc
pop
mov
icebp
and
dec
lea
jnp
push
mov
adc
sahf
sbb
jle
bound
mov
lods
sti
push
ss
push
xchg
shrl
mov
sahf
out
push
jbe
mov
push
sahf
dec
ss
jae
movsb
mov
test
and
dec
dec
mov
cld
icebp
mov
or
sbb
insl
into
loopne
mov
sub
icebp
push
jnp
dec
insl
lahf
push
je
or
ljmp
das
mov
arpl
and
push
sbb
sahf
sub
fildll
aas
inc
jno
sub
adc
out
cmp
outsl
divl
sub
jp
adc
xchg
fstps
imul
cmp
movsb
cmp
mov
pop
jno
imulb
imul
cwtl
bound
mov
insl
mov
movsb
pop
and
popf
rorb
pop
aam
stc
jns
add
mov
push
adc
cmp
push
lahf
mov
xor
push
aaa
fsubr
repz
xlat
hlt
bound
iret
jbe
add
jno
in
fdivl
and
fsubr
jns
sbb
fsts
cmpsl
fstl
jns
and
roll
xchg
popf
fsubr
pop
testl
add
cmp
cwtl
aad
data16
daa
xor
xor
flds
lods
mov
nop
xor
fwait
push
lret
xchg
out
movsl
pop
sub
mov
mov
lret
pop
xchg
adc
loope
orl
jg
push
arpl
mov
jo
add
mov
or
mov
test
lar
pop
inc
push
dec
xchg
ds
xchg
pusha
out
push
ret
fdivl
add
pop
cli
push
in
jp
xchg
mov
mov
mov
pop
xlat
and
push
ds
mov
jg
push
mov
mov
push
ficoms
push
leave
dec
push
sarb
inc
in
stc
cwtl
iret
push
sbb
xor
xchg
mov
fwait
xchg
mov
andl
mov
mov
and
pop
stos
push
pushl
fdivp
sub
mov
add
pop
dec
fisubrs
fsubl
sbbb
call
inc
xchg
lea
mov
mov
sbb
and
mov
adc
shll
jecxz
xchg
daa
pop
xchg
inc
and
out
nop
jbe
pop
cld
pop
or
cmp
movl
mov
pop
xor
mov
mov
mov
decb
std
and
push
xor
enter
in
xor
adc
jmp
sub
mov
mov
test
dec
sbb
push
mov
inc
pop
aad
push
fadd
cmpsl
mov
std
push
push
shll
ja
out
xchg
push
dec
sbb
cvtps2pi
inc
les
into
and
repnz
fisttpl
mov
mov
sti
imul
fstl
and
mov
pop
test
dec
xchg
icebp
in
xchg
les
dec
cmpsl
cld
inc
xor
or
loope
mov
stos
push
push
mov
scas
dec
rcrb
fs
or
push
jge
lcall
mov
mov
add
lret
mov
sahf
insl
fsubrs
dec
mov
insb
cmpsb
pop
aad
and
jecxz
mov
mov
jl
mov
and
add
mov
gs
add
leave
cli
pop
sahf
cmpsl
add
mov
pop
std
js
filds
scas
pop
and
pop
cmc
mov
mov
movsl
adc
div
sbb
nop
sub
popf
push
hlt
test
pop
les
xchg
push
orb
not
sahf
xchg
scas
stos
adc
lods
lahf
out
inc
sahf
stc
movsl
ja
xchg
add
push
mov
dec
add
adc
xchg
pop
leave
cld
je
test
push
xlat
add
jg
push
in
pop
fisubrl
mov
push
mov
jge
movsb
and
clc
dec
pop
ds
fs
hlt
mov
xor
loopnew
jmp
push
insl
loope
shrb
js
jb
sti
mov
inc
jmp
test
popa
cmp
pop
push
xor
and
pusha
rcrl
stos
push
lret
les
call
std
dec
push
imul
mov
add
imul
std
jp
mov
out
and
sarb
and
push
jmp
push
xchg
fldl
popf
pop
clc
and
push
push
cltd
insb
shll
inc
shll
jmp
pop
subb
mov
push
sbbb
lret
mov
mov
lahf
push
mov
and
mov
sub
bound
mov
cld
add
filds
add
mov
add
pop
and
cmp
out
jnp
dec
loope
jae
add
test
sbb
ret
gs
subb
jge
dec
dec
or
push
jbe
test
addr16
mov
pop
out
stos
js
lea
scas
or
jb
mov
xchg
jecxz
nop
pop
xchg
push
arpl
lahf
mov
int3
aam
mov
mov
jne
xor
pop
outsl
call
nop
push
mov
add
add
movsb
hlt
mov
sahf
cmp
cwtl
hlt
push
mov
rol
pop
cmc
bound
flds
loopne
cmp
cmc
jg,pn
mov
icebp
fdivs
nop
xchg
xor
outsb
xchg
mov
add
rorb
push
mov
fisubrs
push
xor
or
std
in
mov
mov
data16
xchg
bound
popa
xchg
mov
adc
fidivl
popa
and
mov
repz
popa
cmp
mov
test
pushf
jne
popf
insl
es
xchg
mov
mov
dec
ficoml
fsub
nop
sbb
and
insl
pop
inc
inc
scas
lods
mov
enter
test
pusha
es
pop
orl
mov
fwait
in
xchg
nop
imul
mov
sbb
mov
sti
or
jns
jp
stos
in
inc
mov
in
pop
insl
divb
aad
add
sub
lcall
int3
adc
or
repz
inc
mov
mov
cmp
fidivl
aam
in
pop
vpavgb
in
xlat
pop
cld
js
shr
mov
rclb
sbb
or
adc
xchg
cs
push
clc
nop
adc
add
shrb
ret
adc
lahf
jb
adc
leave
push
out
dec
lahf
lods
cmpsb
in
sub
shlb
lods
pop
sbb
cmp
sub
adc
insl
add
les
sbb
stos
sub
cmp
or
push
loopne
repnz
in
int
cmp
xchg
or
stc
dec
mov
mov
fwait
xchg
push
xchg
imul
and
xor
je
adc
sahf
loop
in
int
insl
hlt
out
xor
add
arpl
or
mov
mov
lcall
nop
add
popf
xor
aad
lcall
pop
in
leave
int
jns
dec
and
subb
sub
cwtl
sub
pushf
call
lea
mov
ss
into
mov
inc
inc
push
cltd
and
inc
bnd
je
fwait
jo
jb
imul
insb
mov
imul
rcll
in
movsl
dec
and
lcall
mov
mov
sbb
pushf
pop
push
jmp
adc
xchg
hlt
mov
aad
fwait
cmp
sahf
mov
sbb
stc
aad
pop
xchg
jmp
jno
xor
scas
mov
and
loopne
mov
dec
test
xlat
inc
jnp,pn
pop
dec
test
jno
aas
cmp
mov
scas
das
dec
mov
inc
push
or
dec
jae
sub
push
xor
pop
dec
enter
cmc
inc
decb
mov
cmp
sbb
orb
inc
inc
jnp
adc
movsb
and
inc
sub
mov
lahf
ljmp
sbb
xchg
stos
insb
mov
stc
loopne
repz
out
cli
stc
dec
mov
pop
in
push
sahf
fwait
rol
cmp
add
movsb
iret
orb
jmp
adc
mov
cld
loopne
lahf
fwait
jae
add
bound
outsl
push
mov
and
hlt
cmp
jns
pop
cld
mov
repnz
outsb
outsl
and
or
jp
mov
sub
lret
jae
jo
aaa
call
test
xchg
inc
pusha
popf
dec
cmp
or
mov
outsb
std
inc
cmp
add
data16
fs
dec
lds
inc
xor
cmp
mov
jb
and
mov
rolb
lret
outsl
jae
enter
lods
mov
movsb
mov
mov
pop
dec
hlt
enter
dec
inc
mov
push
mov
xchg
jge
inc
xor
xchg
or
out
rcrb
popf
push
loopne
fsts
data16
cmp
mov
sbb
popa
mov
aad
data16
push
daa
movsb
pop
adc
rol
iret
shl
sbb
cmp
adc
or
pop
int
inc
mov
pushf
shr
and
fwait
scas
mov
and
jecxz
pop
mov
or
cmpsb
cwtl
cmp
cli
test
xor
push
and
loop
push
mov
inc
sbb
xlat
mov
stc
or
lods
pop
dec
ja
insb
pop
mov
cmp
leave
sbb
sub
fisttps
xor
nop
add
add
nop
pusha
push
stos
mov
jmp
pop
add
sbbl
pop
iret
test
sub
jno
movsl
jecxz
std
or
cmp
mov
ds
jae
sub
adc
cs
push
in
inc
in
in
lods
ret
jle
inc
or
iret
test
sub
xor
aas
jg
rorl
lods
pop
jle
loopne
jns
sub
imul
dec
push
xor
push
cmc
xor
mov
jecxz
nop
mov
clc
add
and
into
filds
sub
jnp
jne
addr16
mov
dec
jp
dec
hlt
mov
pop
jnp
mov
push
pop
adc
cmp
push
insb
inc
inc
and
fcmovb
sarl
jmp
pushf
loop
js
mov
mov
out
and
sbb
adc
mov
and
int3
ss
mov
call
or
xor
clc
cwtl
and
mov
nop
cwtl
aaa
xor
sbb
ficoml
push
int
lahf
test
out
add
arpl
sub
mov
pop
aad
adc
push
add
lock
fidivrs
shr
mov
stc
shl
ljmp
push
cmpsb
mov
pop
sub
and
stos
out
or
jbe
jno
aaa
fadd
xor
push
adc
xor
in
pop
adc
dec
mov
pop
sbb
xor
stos
mov
ljmp
daa
mov
push
push
shlb
cli
and
jne
jg
pop
push
mov
push
lret
push
dec
sbb
call
dec
bswap
in
mov
scas
and
mov
mov
sbb
adc
in
stc
int
mov
pop
inc
push
push
pop
inc
mov
and
or
and
std
sub
lock
cmc
repnz
push
dec
les
mov
into
and
xlat
and
mov
jmp
ljmp
cmpb
mov
xchg
push
or
shll
xchg
pop
mov
mov
sarl
adc
cmp
push
dec
iret
insb
and
mov
daa
pop
fidivrl
idivb
mov
xchg
sahf
xchg
mov
subl
inc
test
cli
in
popa
lea
outsb
imul
cld
test
dec
jb
clc
pop
add
pop
into
dec
in
inc
inc
imul
inc
or
mov
cmp
inc
outsl
pusha
dec
dec
sbb
lea
clc
lea
mov
sub
jbe
xchg
ror
mov
addb
jno
and
loopne
test
push
mov
loopne
push
jg
int3
imul
js
push
mov
ret
rolb
arpl
je
ret
clc
mov
xor
xor
push
sbb
gs
das
jge
mov
out
jno
pop
loopne
imul
jae
jmp
filds
idiv
cmpsl
test
cmpsb
jno
mov
pusha
mov
mov
test
sub
icebp
and
popa
sbb
mov
sbb
setl
sbb
jbe
aaa
sub
or
adc
fstpt
lret
das
call
lods
aam
adc
lods
mull
mov
mov
pop
addr16
jne
lret
sbb
push
adc
jle
and
jecxz
mov
mov
inc
xchg
jecxz
sbb
lahf
jecxz
mov
and
pop
lods
cmp
cmp
mov
cmpsb
and
inc
or
sub
jg
jo
loopne
mov
dec
addr16
xchg
in
pop
stc
jno
push
in
mov
cli
ret
dec
add
test
sbb
cmp
mov
fwait
lods
sub
push
xor
idivl
xchg
inc
in
inc
push
jmp
lods
pop
jp
jne
mov
ss
push
subb
or
decb
jmp
xchg
xchg
idivl
test
adc
mov
arpl
and
fcomps
das
idivl
xorl
cli
sub
out
jl
jbe
mov
loopne
int
xorl
test
mov
jle
cmp
in
mov
stos
test
add
adc
aam
sbb
jnp
scas
pop
outsl
push
movl
fistl
fidivs
or
push
adc
inc
jno
rcll
in
push
mov
cmp
popf
adc
jge
sub
sbb
dec
mov
sti
repnz
lret
adc
or
pop
out
clc
and
jmp
enter
inc
pop
stos
data16
scas
lahf
enter
adc
add
je
xlat
call
add
mov
rorl
mov
mov
cwtl
aas
jb
mov
add
ds
jmp
scas
dec
aad
leave
add
shrb
test
sbb
cs
push
hlt
adc
les
sbb
mov
cmp
jecxz
iret
mov
sahf
dec
hlt
es
xchg
es
xchg
xchg
in
aaa
hlt
fcmovbe
push
mov
and
ljmp
pop
gs
movl
xchg
imul
sbb
push
test
ficoms
iret
dec
std
imul
fstps
inc
sar
int
xor
sarl
filds
insl
jo
xchg
stc
push
sub
jmp
cmp
pop
lods
jl
sub
cwtl
lahf
mov
iret
cmpl
mov
xor
sub
fs
xchg
jns
ja
sti
mov
std
lret
dec
test
and
push
ret
and
test
sbb
ljmp
cmpsb
sbbb
in
mov
fstpt
ficoml
inc
mov
lods
in
push
mov
repz
ret
lods
les
or
jle
in
pop
adc
xlat
mov
xor
fs
scas
hlt
pop
fstpl
jmp
pop
inc
mov
pop
xchg
sub
xchg
mov
mov
push
insb
sub
lcall
iret
leave
dec
stos
or
mov
jle
xor
push
pushf
in
cli
or
xchg
mov
lahf
scas
int3
cltd
inc
call
sbb
fnstcw
and
push
es
xor
loopne
mov
arpl
movsb
sbb
mov
ret
xchg
and
in
mov
adc
pushf
movsl
paddusb
jne
mov
cmp
ljmp
lds
push
push
push
push
mov
pop
shr
inc
popa
xlat
xchg
dec
mov
push
and
mov
das
imul
popa
outsb
cmp
out
adc
out
add
loope
loop
iret
mov
add
cwtl
test
fst
fildll
shrb
enter
orl
or
imul
adc
fiaddl
repz
fcomip
ret
sub
out
call
mov
cld
cld
jg
pop
push
xchg
sub
xchg
dec
daa
fsubrl
cmpsl
pop
mov
movsl
push
mov
xor
push
mov
adc
dec
inc
jno
jo
mov
repz
xchg
aas
lea
push
out
popf
pop
cmpsl
and
fadd
mov
xchg
mov
add
out
adc
mov
add
imul
or
cli
xor
jg
ds
sbb
sbb
out
mov
adc
loope
add
add
jne
mov
inc
lock
iret
stc
loopne
stc
mov
cwtl
lea
into
pop
lock
jg
push
mov
mov
mov
xchg
push
hlt
mov
or
in
sbb
cld
sub
loope
cmpsb
in
ret
inc
fisubrs
ja
push
cmpsl
and
jg
xor
loop
cli
lds
out
movsb
sbb
leave
adc
inc
mov
ss
mov
lcall
negb
test
push
out
mov
add
cltd
in
fstpl
jbe
and
sti
ljmp
out
pusha
push
pop
rcrl
sub
test
cmp
mov
or
xlat
xor
mov
dec
xchg
jp
lahf
and
cmp
dec
jge
dec
int
xchg
idivb
push
add
movsb
mov
cmp
mov
out
in
pop
insl
icebp
fsubrl
jge
mov
xchg
sbb
ss
stc
ljmp
push
push
push
pop
cmp
mov
pop
mov
jge
sub
out
rcl
mov
sbb
movsb
jns
xchg
ja
cmpsb
mov
mov
repz
pop
add
sub
adc
inc
and
dec
ja
jl
push
dec
jo
jne
push
mov
jle
mov
pushl
jmp
pop
mov
inc
fcom
xchg
or
sub
sti
cmp
nop
jmp
into
js
mov
or
out
in
ret
out
add
daa
stos
xchg
rorb
stos
loope
cwtl
or
jge
mov
pop
cmp
dec
lea
or
inc
dec
cmp
jle
pusha
cld
insl
out
pop
fisubl
sbb
aad
imul
andl
dec
pop
inc
aad
mov
fwait
cmp
fsubs
xchg
into
inc
push
outsb
jo
dec
jg
fnstsw
jae
sub
popf
sbb
pop
or
icebp
mov
fxtract
cmpsb
cmpsl
out
mov
jle
and
xchg
mov
cli
fwait
push
xchg
hlt
ss
sbb
cmc
mov
out
sbb
cltd
inc
rclb
ret
xchg
cs
sti
sbb
jns
repz
into
jae
mov
mov
or
andl
cmpsb
mov
fdivr
xchg
or
add
mov
xlat
jl
jno
repnz
add
sub
idiv
daa
cmp
add
leave
or
lcall
iret
test
adc
cmpb
dec
sub
sar
int3
enter
gs
mull
loop
test
cs
hlt
push
fistpl
pop
repz
in
push
mov
push
pop
stos
push
and
cmp
pop
and
into
loop
push
jne
cwtl
sub
mul
xchg
int
movsb
mov
or
sbb
inc
in
jnp
and
dec
fs
pop
rcrb
add
jle
pushf
pop
movsl
add
in
pop
jb
into
xchg
loop
std
cmpsb
aaa
mov
inc
scas
cwtl
pop
enter
xchg
xchg
icebp
loopne
pop
test
aaa
mov
pop
mov
jo
sbb
je
aad
ffreep
adc
rclb
orl
lahf
sub
cmp
mov
xchg
les
nop
stos
in
insl
push
push
icebp
jle
pop
lahf
mov
push
or
cmpsb
mov
aaa
dec
pop
cmpsb
fmuls
sub
inc
dec
cld
pop
clc
lret
xor
out
negl
rcll
mov
mov
pop
les
ja
lods
mov
sub
xlat
push
sbb
scas
sbb
sbb
push
add
imul
adc
xchg
xchg
xor
fs
dec
cmp
shl
or
adc
pusha
test
xor
cs
stc
fiadds
popf
dec
jno
mov
lods
sti
sbb
nop
sub
xor
mov
pusha
outsl
jg
or
xchg
jo
movsl
push
loop
fs
inc
cmp
jp
call
mov
jmp
fucomp
scas
lcall
jg
scas
xchg
fwait
mov
pop
push
xchg
arpl
inc
adc
fldz
fildl
jmp
cmp
and
mov
xor
pop
push
sbb
ret
loope
xor
fdivr
out
and
or
popa
xor
stos
adc
push
pushf
pop
adc
mov
mov
divb
decl
in
inc
bound
push
test
cwtl
or
push
adc
add
xlat
bnd
arpl
dec
mov
dec
push
aam
icebp
lods
icebp
dec
sub
imul
dec
pop
sbb
ja,pt
sub
imul
push
movsl
loopne
pop
adc
mov
stos
pop
gs
cmp
cmp
pop
call
sub
adc
popa
or
pop
aam
in
movsb
mov
cmp
mov
ret
sahf
fwait
loope
stos
fisttpll
push
imul
clc
or
aas
int
xor
movsl
jecxz
jp
mov
sar
jp
lds
inc
xchg
pusha
mov
cltd
movl
sbb
mov
inc
fucomi
outsb
push
imul
xchg
push
loopne
je
jbe
in
push
outsb
xchg
sahf
stc
jbe
dec
mov
cmp
add
es
xchg
pushf
cmpsb
push
inc
mov
dec
push
pop
or
rcrb
mov
lea
imul
push
xchg
hlt
sub
add
adc
inc
lods
adc
sbb
in
pop
imul
lcall
jp
xor
cmp
lret
das
xchg
stos
testl
cmp
adc
cltd
jmp
sub
inc
xor
icebp
push
pop
mov
lock
inc
leave
adc
arpl
ljmp
scas
mov
scas
mov
cmc
xor
sub
mov
scas
scas
int
dec
mov
jno
shl
inc
sbb
lahf
ja
outsb
push
add
test
or
test
inc
adc
mov
push
push
jl
lahf
mov
pop
insl
pop
insl
aas
bound
or
add
or
cmpsl
cmp
shlb
imul
movb
jg
jnp
add
subb
stos
pop
jge
jmp
sbb
and
sarl
int
stos
sahf
jns
lcall
and
lret
iret
add
bound
inc
xor
repnz
inc
mov
adc
enter
sbb
ds
mov
inc
push
mov
push
cwtl
in
scas
push
push
cmpsb
mov
mov
xchg
pop
push
mov
xlat
push
stos
and
jnp
pusha
loop
out
std
dec
inc
push
mov
mulb
cmpsb
mov
dec
and
das
or
push
outsl
lock
mov
insl
mov
pop
fmull
dec
push
movsl
scas
cmp
std
nopl
mov
mov
push
cmp
adc
ror
push
idiv
cmp
inc
push
push
jg
rorl
cli
lds
rorl
sub
sub
jl
aas
mov
jg
mov
popa
test
out
mov
jp
xchg
add
mov
cld
lods
pop
xor
nop
mov
popa
sub
xlat
push
cld
repnz
and
xchg
inc
data16
mov
sub
mov
repz
xchg
call
fstpt
test
xchg
push
or
out
adc
incb
out
outsb
add
test
and
inc
fisubrl
xchg
mov
addl
test
fcomps
adc
pop
sbb
orb
sub
enter
cmp
inc
pop
lret
insl
xchg
mov
movsl
cmp
arpl
test
add
push
mov
xor
imul
mov
dec
pusha
pop
add
sbb
popf
or
cwtl
verw
jbe
icebp
nop
inc
das
mov
add
rcrl
add
iret
push
cmp
dec
push
ret
js
out
pop
dec
mov
cmp
fwait
push
rorb
pop
add
je
jne
fdiv
fcompp
or
cmpb
lahf
xor
mov
test
in
stos
lock
ljmp
jmp
cwtl
fcoms
or
mov
mov
rclb
inc
into
inc
ret
inc
aam
call
cld
ficomps
inc
mov
mov
pusha
stc
pop
jns
repz
add
lret
sub
out
fistpl
pusha
addb
dec
add
xorb
cmp
sti
jp
mov
ficoml
add
push
xchg
nop
sub
loopne
add
cmp
sub
adc
xchg
xor
loopne
xor
mov
shr
test
call
cmp
jmp
ret
sahf
mov
push
cmp
fcomps
sub
daa
cmpb
cld
lea
lds
and
mov
xor
push
movsb
mov
mov
adc
cmpsb
xlat
sbb
pop
cmp
test
jmp
mov
mov
or
mov
mov
mov
outsl
dec
dec
or
shr
xchg
mov
scas
aaa
adc
ror
push
xor
lods
fwait
jge
dec
lods
add
push
mov
pop
aas
jnp
pop
in
dec
xchg
shrl
inc
into
mov
push
cmp
or
lds
ja
pop
sti
pop
sbb
cmpsl
cmp
popa
mov
into
sar
jecxz
lock
lods
add
lods
pop
jbe
addr16
outsb
xor
leave
pmaxub
sbb
fstl
dec
add
fst
hlt
mov
mul
in
cmp
rclb
inc
jp
mov
or
mov
jo
es
orl
addr16
fwait
cmp
int3
push
jbe
cltd
scas
scas
pop
stos
push
xor
mov
lods
popa
sbbl
loop
mov
pop
lret
jae
push
mov
mov
mov
jbe
bound
jbe
inc
cltd
push
cwtl
cmp
inc
push
int
pushf
mov
adc
pop
add
sbb
sti
fnop
and
leave
movsb
adc
dec
cmp
lods
add
mov
or
adc
jmp
or
lods
inc
gs
pop
lods
fcmovnbe
mov
fsubr
jne
cmp
cltd
jb
mov
push
pop
cmpsl
loopne
stos
pop
push
fisttps
xchg
icebp
movsb
sarl
push
sbb
push
push
cltd
or
inc
insl
xchg
les
addr16
jne
push
jl
test
js
mov
xor
dec
mov
mov
push
push
push
jl
mov
mov
jge
pop
sarl
imul
jnp
inc
pushf
in
pusha
cmpsb
sbb
fimull
inc
lods
shll
adc
pop
jno
adc
xor
lods
or
xor
jge,pn
mov
jns
lods
mov
inc
sub
inc
std
dec
hlt
push
scas
push
enter
mov
adc
jmp
loope
and
and
insb
insl
fisubs
cmc
sbb
cmpb
push
mov
fmul
cmpsb
scas
fdivr
lahf
inc
fsubs
mov
and
sub
aaa
shl
mov
or
or
and
ljmp
lods
mov
pushf
cmp
call
pop
and
push
or
mov
faddl
aas
pop
mov
dec
push
and
pop
out
or
cmp
adc
push
fs
cmp
xchg
sbb
mov
pop
and
int
cmp
lahf
jp
mov
sub
xor
nop
sub
dec
add
xchg
out
adc
jp
and
mov
into
pop
fs
pop
and
inc
int3
push
ljmp
and
es
mov
inc
dec
xchg
pop
fwait
and
push
mov
fsubl
xor
dec
jp
adc
pop
pop
mov
mov
add
cmc
incl
pop
push
fisubrs
arpl
xor
sahf
fsts
mov
and
push
lods
cli
lret
dec
adc
les
push
stos
adcb
lret
xlat
sub
ds
lods
stos
mov
or
loop
sbb
ret
or
xor
sbb
xor
or
std
hlt
mov
cmp
bound
mov
pop
xchg
pushf
gs
ss
push
gs
xor
mov
imul
je
mov
cld
mov
sub
out
stos
dec
mov
rol
lret
dec
and
adc
push
outsw
push
mov
bound
push
clc
call
sbb
test
dec
stos
pop
fs
lock
inc
out
push
call
mov
jno
rcrl
inc
or
daa
daa
lcall
pmulhuw
into
sbb
xchg
mov
sbb
mov
repz
loop
daa
aas
and
mov
and
mov
mov
cmp
mov
add
dec
xchg
and
and
mov
mov
mov
les
xchg
in
sbb
push
lret
cltd
daa
lcall
test
push
stos
push
aad
pop
and
pop
pop
call
mov
mov
push
fimull
pushf
jg
lods
popf
fwait
call
add
cmpsl
mov
cmpsb
cltd
dec
cmp
movsl
out
mov
jmp
pop
pop
popf
mov
push
sub
les
addb
mov
mov
icebp
lods
or
or
pusha
cli
mov
jno
adc
jecxz
and
dec
leave
test
pushf
insl
add
movb
inc
repnz
pop
rcrl
andb
and
adc
add
je
push
adc
je
xchg
sahf
jns
insl
xor
test
push
rcr
ss
push
lock
arpl
cltd
dec
aam
mov
test
xchg
out
push
iret
cld
dec
fimull
rolb
pushf
fwait
inc
pop
mov
or
fdiv
sbb
jmp
and
mov
faddl
aam
test
dec
ds
int3
imul
push
mov
pop
std
pop
inc
jo
or
sbb
add
fadds
test
in
xor
hlt
call
jns
cmpl
push
sahf
loop
fistpl
call
mov
mov
cltd
loopne
push
cs
jl
inc
jmp
loopne
loope
pop
into
xor
scas
jnp
insl
jo
sbb
leave
mov
lret
cmp
pop
adc
pop
mov
jns
daa
push
adc
cwtl
pushf
movsb
ljmp
xor
pop
std
mov
lods
les
mov
sbb
mov
hlt
or
jmp
jnp
lcall
dec
repz
shl
fldl
push
mov
movb
add
les
jbe
and
in
push
or
clc
imul
pop
leave
adc
dec
or
in
pushf
xchg
cmpb
pushf
pop
cwtl
and
xor
adc
jge
outsb
shll
push
in
jp
repnz
cli
repnz
inc
arpl
add
mov
std
mov
adc
shlb
xor
aam
bound
xchg
adc
mov
jle
ret
adc
popf
out
cmpsb
inc
mov
popf
sub
adc
outsl
xchg
insb
int3
or
ds
sbb
ds
dec
jp
fmul
daa
icebp
fs
pop
dec
xlat
imul
inc
jle
scas
orb
mov
ljmp
cwtl
fists
cmp
outsl
mov
pop
mov
push
mov
outsb
xchg
icebp
sbb
and
arpl
cmp
shrb
xor
cltd
add
into
addr16
sub
ss
adc
mov
add
and
sub
sbbb
cmp
dec
int3
sti
pop
int
add
dec
xchg
out
dec
dec
fistpll
mov
lret
lret
outsb
cmp
and
lahf
push
test
jmp
inc
jne
rol
movsb
sbb
and
sbb
mov
mov
xor
mov
out
andl
jno
mov
jno
fwait
xchg
xor
mov
jl
jmp
dec
ret
ror
adc
arpl
or
cmpl
ja
mov
sahf
dec
mov
or
cmpsl
add
rorb
jmp
add
and
scas
xor
push
xchg
in
jae
jnp
aad
push
dec
jg
cmpsl
or
int3
mov
nop
enter
adc
outsb
dec
xor
inc
loopne
sbb
inc
aas
cmp
bound
xor
rcr
jo
rolb
cmp
push
cmp
int
and
rcl
int3
lds
add
lea
fdivr
imul
fsubrl
shlb
lods
fucomp
xchg
out
mov
into
cmp
rcrl
and
rcr
outsl
push
add
js
out
ljmp
pop
pop
in
add
bound
pusha
pop
leave
add
mov
movsb
lods
xchg
loop
pop
pop
aas
jge
lahf
cmc
dec
ds
sub
push
ljmp
inc
push
inc
cmp
outsl
lods
sub
ljmp
dec
lods
mov
push
push
adc
imul
inc
sarl
fnstenv
sub
das
cltd
cmpsl
adc
mov
sti
fldcw
adc
pop
aad
mov
sbb
addr16
out
dec
pusha
xchg
jnp
inc
icebp
adcb
addr16
repnz
in
jnp
adc
pop
pop
xor
into
or
push
mov
push
test
adc
add
mov
fidivl
cmp
pop
pop
jnp
test
fisubrs
test
cld
int
ret
inc
jp
enter
inc
mov
push
sbbb
out
xchg
adc
es
xor
pusha
movsb
arpl
mov
xlat
rcl
mov
cld
xchg
push
fimuls
int
test
mov
lds
mov
cmp
jp
imul
aas
ljmp
subl
jne
push
popa
pop
jecxz
fbld
pop
mov
and
and
push
inc
jne
inc
push
add
xchg
cmp
and
lea
outsl
imul
mov
aas
mov
in
jp
push
push
add
fstps
rol
adc
negl
mov
lcall
xchg
iret
aaa
into
cmp
push
pop
dec
sbbb
mov
and
js
orb
lea
and
scas
mov
push
mov
inc
in
xchg
test
or
inc
out
inc
fcomps
cmpb
rcll
test
cmp
test
adc
xchg
inc
adc
iret
cld
mov
ja
insb
leave
cmp
fnclex
sub
cmp
loopne
or
add
popf
cmpb
xor
jae
sub
decl
insl
test
cmp
fs
rcll
push
push
les
int
fisubrl
xorl
jnp
xchg
and
gs
ljmp
pop
push
push
inc
stos
scas
aam
add
mov
lcall
insb
inc
es
cmp
das
mov
adc
jo
jmp
mov
xchg
mov
nop
repz
fwait
xor
cs
lds
std
push
pop
jg
mul
mov
out
repnz
aaa
fs
fucompp
cwtl
movl
fsubrl
adc
fs
dec
or
push
xchg
mov
mov
xadd
or
test
aad
bound
adc
lcall
dec
cs
cmp
xor
jg
xchg
es
jecxz
rcrl
mov
cmp
movsl
jge
test
cmpsl
mov
sbb
jbe
dec
push
sbb
shll
test
inc
and
std
mov
ret
inc
jbe
rcr
mov
in
loop
lea
call
fcoms
pop
cmpsl
in
addr16
add
push
subb
xchg
dec
mov
addl
movb
xor
data16
sbb
clc
js
in
int
xlat
negl
pop
repz
sub
imul
mov
mov
lods
iret
mov
dec
jp
mov
notl
adc
xchg
ficompl
divb
push
cmp
ds
pop
cmpsl
scas
cwtl
push
ret
mov
xchg
inc
sbb
inc
test
and
mov
mov
xor
or
adc
cmp
ja
mov
xlat
and
and
mov
pop
jmp
insl
inc
sysenter
cmc
mov
push
pop
gs
bound
add
xor
test
jle
test
shlb
push
fwait
jae
and
arpl
cmp
shrl
sbb
xchg
add
push
cmpsl
jle
ss
out
mov
mov
inc
aaa
shlb
nop
jno
xchg
cmpsb
imul
test
les
xchg
outsb
repnz
scas
sbb
mov
in
cmc
or
mov
ret
xchg
push
daa
leave
cmp
clc
xchg
sub
test
inc
fbld
outsb
cmp
in
orl
ror
or
and
enter
rcl
movl
cmp
add
shll
addr16
loopne
inc
pop
fsubr
leave
icebp
mov
daa
jecxz
lock
xor
add
adc
dec
jbe
stos
jbe
rcr
cltd
push
xor
stos
dec
pop
out
es
xchg
pop
xchg
jne
push
icebp
pop
pop
icebp
ljmp
jle
lret
in
pop
in
adc
cmp
and
dec
imul
dec
dec
jb
icebp
cmpsl
stc
xchg
mov
or
mov
pusha
sub
andl
roll
cltd
lcall
in
cmp
add
jne
sbb
jns
cld
mov
ret
mov
call
xchg
lea
xchg
lods
xchg
dec
mov
jg
lock
or
adc
insl
and
orb
jne
and
std
jl
mov
pop
mov
adc
or
lcall
push
jb
xor
inc
xchg
or
pop
mov
sbb
jg
mulb
sub
jecxz
negb
inc
adc
int
add
aad
inc
pop
jle
sti
push
clc
dec
inc
out
mov
mov
ss
push
ja
sbb
shl
mov
sarb
test
push
nop
stos
fnstsw
stc
pusha
outsl
mov
cmc
shrd
lcall
in
add
movsl
and
mov
mov
xchg
mov
adc
clc
mov
mov
mov
fndisi(8087
pop
and
cli
fldcw
push
sbb
mov
cld
daa
mov
push
repnz
mov
push
add
inc
pusha
adc
xchg
aam
movsl
or
lods
mov
pop
add
lret
cmp
xchg
stc
cmp
cmp
insb
pop
sbb
fistl
push
jo
xchg
dec
add
hlt
movsl
pop
cmp
fnstcw
push
or
stos
inc
or
rcrb
pop
out
lret
stos
xor
inc
pop
adc
adc
loope
inc
mov
ret
roll
ds
movsb
repz
mov
int
pop
push
insl
mov
ror
or
xor
xor
insb
add
mov
push
adc
sub
test
in
stc
stos
das
mov
lahf
mov
test
sti
inc
stos
popf
xor
lea
sbb
mov
inc
mov
dec
xlat
dec
loope
xchg
push
fs
push
call
dec
inc
adc
loope
fildll
out
mov
pop
mov
ss
push
sbb
out
das
out
ror
add
cmp
mov
fbld
push
sahf
push
mov
sbb
lods
bound
dec
xor
shrb
xchg
inc
aad
hlt
jp
sbb
mov
test
sbb
lods
je
fsubrs
mov
add
adc
outsb
push
adc
mov
call
ds
sbb
cmp
add
scas
out
jae
test
sbb
pop
stc
push
ljmp
test
enter
xchg
sbb
ljmp
or
xchg
and
push
cld
insb
jbe
jo
xor
sub
jmp
into
jae
addr16
loopne
pop
cmpsl
sti
sub
xchg
xlat
ror
pop
stos
xchg
les
ljmp
xor
loopne
adc
fnsave
adc
adc
jecxz
jmp
xor
ja
xchg
test
das
push
push
icebp
push
dec
fldenv
je
loope
js
add
cmp
lret
cli
std
das
adc
xchg
outsl
int3
fmuls
js
outsl
in
sbb
js
xor
rclb
adc
jmp
or
sahf
loope
xchg
or
adcb
xchg
pop
sub
or
lock
icebp
fs
scas
lcall
subl
mov
or
mov
out
xlat
hlt
int3
mov
add
out
popf
rorb
adc
dec
dec
xchg
mov
cmp
push
mov
insl
push
xchg
cmp
cld
pop
and
popa
and
mov
aad
adc
and
push
loop
dec
in
test
dec
push
cwtl
loope
sub
in
or
pop
dec
imul
sub
push
ja
dec
scas
in
shrb
sti
adc
jb
sub
roll
lods
xor
mov
aad
push
bound
addr16
sahf
pop
mov
xor
lods
stos
test
test
sub
rcrb
in
push
cli
push
sbb
data16
push
shll
mov
std
add
push
in
adc
movb
adc
test
pop
jg
gs
lret
add
mov
in
cs
roll
ret
and
cmpsl
add
and
sub
std
inc
bound
ss
mov
rcrb
aas
cmpsb
pop
lret
loope
jns
sti
lahf
into
jecxz
push
shll
loope
rol
xchg
lock
mov
cwtl
or
ficompl
inc
and
loope
adc
loop
cmp
mov
jb
popa
bound
negl
int
aad
push
adc
or
jg
mov
xlat
cltd
ljmp
xchg
mov
or
pop
xlat
push
roll
fsubr
ds
dec
add
shl
dec
test
jns
or
and
or
mov
or
roll
in
in
shll
fucomip
arpl
pop
xor
and
lods
jmp
hlt
inc
jp
repz
out
mov
xchg
in
movsb
xor
xchg
fstps
mov
sbb
or
xor
pop
add
dec
dec
push
sub
test
xor
add
mov
sbb
daa
mov
dec
sub
or
push
xchg
dec
adc
sbb
inc
sub
add
xchg
inc
popa
leave
das
xor
push
adc
adcb
push
or
adc
jbe
add
sbb
mov
cmp
push
mov
test
mov
jp
arpl
jo
mov
inc
lods
loop
loope
inc
sub
addr16
divl
stos
cmp
rcll
pop
add
mov
mov
xchg
pop
xchg
shrl
popf
aas
and
push
sub
pop
and
sbb
and
dec
outsl
adc
test
gs
mov
xchg
mov
push
adc
jge
sub
push
repz
adc
shll
xor
sbb
pop
lret
xchg
mov
add
add
fistl
imul
sub
pop
punpckhwd
sbb
ret
cli
lods
in
jmp
mov
cmp
dec
icebp
orl
lret
int
aaa
adc
xchg
pop
push
mov
adc
sbb
pop
push
or
dec
dec
push
adc
push
bound
jbe
push
call
scas
inc
hlt
stc
loopne
ljmp
or
aaa
repnz
test
in
jmp
dec
dec
sbb
cmp
xchg
push
pop
sbb
arpl
mov
imull
mov
xor
inc
in
or
xlat
xchg
dec
ficoms
loopne
adc
mov
repnz
xor
out
cmpsb
cmp
push
sub
ret
test
xorb
insl
fwait
into
test
push
inc
sarb
movsb
mov
jecxz
fwait
pop
inc
call
sub
movsb
int3
mov
je
pop
inc
in
mov
fdivl
negb
hlt
in
push
pop
ficomps
lcall
cmp
lret
rcrb
cmp
pop
cmp
xor
fxch
test
popa
std
mov
ss
data16
push
ret
push
cmp
rorb
fidivl
pushf
mov
lds
cmc
mov
cmp
stos
jg
jnp
imul
jb
dec
mov
xchg
mov
fprem1
sbb
xchg
ss
sbb
int3
fiaddl
mov
fwait
scas
scas
xor
lods
cmp
push
pusha
arpl
jecxz
out
out
scas
out
outsb
orb
aaa
clc
dec
orb
add
pop
and
xchg
and
inc
dec
sbb
sub
icebp
mov
fstps
dec
mov
fs
push
cld
adcl
lods
push
jmp
lods
shr
pop
cmp
cltd
out
jg
rorl
insl
inc
jb
push
mov
pop
jns
xchg
fldcw
ret
mov
out
loope
sub
mov
xchg
mov
inc
sbb
fsubp
jne
mov
add
divl
push
cwtl
mov
neg
movsb
sbb
enter
int
sarl
cs
pop
lcall
rorb
jg
sub
imul
gs
shlb
std
stc
int
inc
inc
mov
adc
cmc
and
adc
mov
rcrl
push
xchg
nop
cmp
xor
pop
jp
or
xor
add
in
incb
inc
dec
fsubrl
jae
inc
mov
cmp
dec
sbb
lods
leave
sub
push
dec
dec
loopne
jmp
and
sub
sbb
sub
mov
mov
mov
lret
daa
adc
mov
push
push
xor
in
mov
scas
dec
push
sar
jle
jbe
or
and
es
dec
mov
movl
push
and
xor
enter
fcompl
ret
dec
ljmp
insb
push
jmp
leave
addr16
mov
lods
and
adc
outsl
jbe
cmpsb
repz
in
add
outsl
cmpsl
cmp
std
pop
aaa
xchg
cmp
xor
inc
repz
xchg
mov
add
sti
bound
xchg
push
mov
jae
in
sub
dec
scas
lods
sub
or
jb
jbe
sahf
and
test
cmp
js
adc
mov
xlat
movsl
jmp
test
jns
dec
add
clc
mov
mov
addb
pushf
bsf
jg
bnd
inc
sbb
xchg
or
in
fwait
int
imul
push
movsb
add
push
out
push
mov
loop
adc
es
adc
mov
cltd
fwait
mov
jp
inc
inc
jns
pop
aas
aam
sbb
ficompl
jnp
loop
or
jmp
cmpsl
mov
test
jl
push
push
cs
ja
in
arpl
insl
push
add
mov
mov
dec
into
faddp
inc
dec
clc
roll
lock
push
mov
dec
jnp
mov
rolb
pop
push
aam
adc
jae
repnz
iret
xchg
ficompl
push
cmp
popa
adc
mov
cwtl
mov
aam
jae
pop
adc
or
insl
clc
enter
mov
cli
pop
sub
fstpl
pop
ljmp
lret
popa
dec
sbb
lret
xchg
inc
ds
jnp
adc
mov
push
imul
dec
dec
adc
iret
stos
or
xlat
jle
dec
in
scas
out
xchg
divb
fwait
popa
push
inc
call
std
loope
in
insl
add
data16
je
xchg
sbb
dec
insb
mov
push
jl
pop
add
xchg
insb
dec
push
ljmp
cld
push
setns
mull
and
add
xchg
push
cmp
jns
mov
int3
inc
pop
add
loope
mov
popf
mov
push
and
xchg
add
pop
das
and
pop
ficompl
cli
hlt
and
fs
mov
andb
xor
out
scas
adc
daa
int
loop
aas
dec
notb
xlat
jle
dec
jbe
adc
sbb
decb
sarl
test
addb
int3
xchg
push
imul
pop
movsb
out
push
ja
ljmp
xchg
inc
jnp
outsb
sbb
adc
or
pop
es
mov
inc
cltd
adc
xor
and
mov
cmpsb
jmp
not
psubw
sub
ret
mov
lock
mov
add
or
jo
jg
push
push
xchg
arpl
mov
sarl
xorb
clc
pop
add
movsb
sbb
imul
jle
ret
adc
jp
mov
sub
aas
hlt
ljmp
jae,pn
fidivrs
inc
pushf
data16
ret
jp
cmpl
sahf
bound
mov
sub
sbb
xchg
negb
addr16
jno
pop
gs
pop
mov
ret
lea
scas
push
ja
ja,pn
inc
xor
xor
imul
out
xchg
lds
filds
les
jg
aad
arpl
mov
and
mov
push
daa
in
mov
and
subb
cmpps
or
mov
jl
jle
push
mov
mov
push
xchg
dec
mov
aas
lret
loopne
out
jmp
dec
xchg
inc
std
mov
testb
mulb
xchg
sbb
ret
sbb
das
rdmsr
push
inc
sub
or
sar
cld
and
mov
dec
mov
lods
push
jno
testb
aam
rcrb
push
data16
adc
push
sub
and
scas
das
test
popf
sar
lods
cmp
push
aaa
add
push
es
das
or
push
andb
cmp
mov
ds
mov
outsl
pop
add
test
or
push
sbbb
pop
lds
fsub
sbb
sub
scas
jne
push
pop
popa
pop
jg
or
mov
xchg
pusha
outsl
fucomip
xchg
inc
and
and
adc
inc
sbb
dec
stc
int3
pushf
stos
arpl
int
lods
in
lock
testl
js
ret
jno
popa
test
imul
xchg
out
sub
and
lock
and
xor
scas
or
mov
popa
movsb
movsl
lea
mov
pop
add
cltd
mov
fidivl
pop
iret
inc
mov
clc
cmp
jne
cmp
outsb
mov
sahf
cmpsl
call
fdivs
ljmp
negb
orb
dec
adc
filds
push
test
js
iret
in
out
jbe
dec
shrb
popf
inc
loop
cmp
testb
stos
mov
jle
enter
lahf
cmpl
data16
xchg
lcall
pop
mov
cmp
aad
dec
cmp
fwait
inc
mov
mov
push
jmp
mov
push
lods
and
out
repz
xchg
mov
add
sub
xchg
js
repnz
rcrl
sarl
sbb
lahf
mov
pop
add
fidivs
mov
cld
fcmovbe
nop
and
rcrl
sub
in
inc
inc
stos
movsl
inc
lods
xor
jb
push
and
mov
jbe
inc
icebp
push
jo
into
les
lods
into
xchg
xchg
inc
pop
rol
sbb
or
cmp
jnp
dec
jnp
jle
push
jbe
adc
cmc
inc
sbb
clc
int
dec
jl
adc
push
inc
out
or
ljmp
or
sub
addr16
dec
mov
lods
or
cwtl
sub
stos
pop
cmpsb
arpl
sbb
mov
inc
push
sub
jo
and
insb
loope
js
data16
jmp
call
clc
dec
mov
nop
pop
lods
xchg
mov
aad
fsubl
shrb
jmp
fld
cmp
mov
jecxz
dec
xchg
mov
pop
adc
lods
push
shll
jns
dec
out
mull
mov
rcrl
or
push
xor
out
popl
inc
cmp
sbb
and
pop
out
push
push
xor
das
adc
ljmp
loop
outsl
pop
sub
sahf
inc
orl
shlw
loope
mov
xchg
nop
scas
or
jmp
push
jl
xor
xor
hlt
pusha
push
popa
jno
sub
cmp
push
rcrb
xor
sbb
add
cmp
pusha
mov
insb
jmp
pop
icebp
movsb
test
fcmovnb
dec
jecxz
aad
movsb
pop
xchg
mov
add
repnz
scas
or
sub
mov
cmp
pop
jo
jp
fsubrp
lods
mov
lcall
pop
stc
mov
mov
adc
in
ret
xchg
add
mov
cmp
scas
out
adc
mov
sub
sub
add
dec
insb
repnz
pop
push
add
shl
and
dec
add
ljmp
sub
fcom
dec
pop
ss
popf
in
and
jg
pop
insb
or
in
adc
jge
out
lea
fistpll
push
push
cmp
add
testb
xchg
adc
pop
arpl
mov
mov
mov
push
rcr
jp
mov
and
xchg
fidivl
cmp
decb
ds
gs
dec
les
push
clc
pop
push
hlt
leave
cs
fnclex
xchg
jne
mov
pop
adc
push
mov
pcmpeqw
ret
pop
jo
sub
fcmovb
out
xchg
daa
mov
lcall
xchg
iret
rclb
xchg
inc
mov
das
cmp
in
movsb
xchg
cli
iret
ficoms
sub
cld
xchg
pusha
repnz
out
jns
mov
les
sub
movsl
leave
in
lock
sbb
pop
icebp
dec
mov
or
xlat
addl
cwtl
add
xorb
jbe
xchg
pushf
dec
test
std
jbe
sbb
xor
mov
mov
sub
pop
pop
out
ret
arpl
or
cwtl
xor
lds
imul
jp
out
xor
cmpsl
add
dec
mov
in
jae
dec
and
lea
jle,pn
ret
pop
orb
test
push
mov
pop
test
fistpl
add
mov
rorb
dec
jmp
add
sti
and
fstp
les
insl
adc
int
cltd
lea
adc
or
sbb
xchg
and
mov
xchg
xchg
xor
aad
xorb
and
and
cmpsb
std
and
cwtl
orb
inc
inc
inc
movsl
xlat
sbb
push
jne
mov
inc
ja
cmc
push
xor
roll
push
mov
pop
mov
and
push
ret
test
pop
lds
pop
test
insl
xchg
xchg
and
pop
mov
add
jp
pop
add
int3
jnp
pop
popa
pushf
lds
jl
mov
jnp
lods
fcomip
mov
out
push
and
adc
sbb
sarl
adc
inc
mov
jecxz
ficoml
sbbb
addr16
outsb
and
fwait
addb
sbb
push
sarl
xlat
shrb
mov
dec
add
fsubrl
jo
adc
dec
push
push
inc
adc
and
pushf
andl
lds
lcall
std
or
push
in
scas
xor
mov
mov
out
sbb
push
roll
into
inc
fnstenv
jl
mov
pusha
pop
std
cmp
sub
pop
xchg
inc
pop
and
add
les
mov
lahf
pop
or
xchg
test
xor
sbb
lahf
dec
cmp
outsb
and
fisttpl
sub
pop
fiaddl
rclb
popa
push
test
lcall
mov
sub
vpackssdw
adc
jl
push
or
mov
in
pop
pop
cmp
inc
and
or
jmp
push
pop
inc
movsl
stos
aaa
shll
aam
rol
pop
mov
imul
test
aad
dec
in
cmp
iret
scas
xabort
je
cs
pop
cmpsb
mov
push
add
and
outsl
inc
in
cmp
jmp
xchg
xchg
mov
mov
ffreep
mov
sbb
movsl
shr
cli
sub
sahf
adc
pop
xchg
ds
adc
inc
lods
cli
shr
fdivrs
jo
pop
movsb
mov
or
enter
pop
push
cli
shl
in
shl
dec
insl
sti
xchg
popl
icebp
rclb
lret
pop
dec
mov
fidivrl
jecxz
mov
or
mov
popa
sbb
test
inc
sbbl
aam
push
sub
out
cvtps2pi
repnz
ja
push
fs
iret
lds
cld
and
sbb
xor
jae
cmpsb
xor
fsubl
icebp
cltd
jecxz
fildl
enter
andl
cmp
pop
fcoms
push
jno
jae
push
in
fdivs
aam
in
mov
xchg
lcall
xor
xor
sbb
mov
jnp
jns
sbb
or
inc
loope
inc
cmp
sti
add
fsubrs
mov
imul
add
pop
test
xchg
stos
stos
sahf
dec
test
and
cmp
add
xchg
sbb
dec
sbb
xchg
push
pushf
sub
fistps
in
or
adc
jns
cmp
inc
loopne
je
pop
inc
stos
pusha
loope
pop
hlt
sbb
xchg
or
push
mov
scas
nop
sbb
add
out
push
jl
and
test
mov
push
dec
cmpsb
mov
pop
lods
pop
add
mov
loop
fsubl
jmp
xor
cmp
mov
add
mulb
scas
ds
and
and
push
or
mov
mov
pop
push
push
andl
insb
push
mov
subl
movsb
inc
je
in
and
das
cwtl
ret
in
fs
push
je
or
lret
xchg
push
sbb
jnp
mov
push
fs
rclb
je
pop
adc
pop
enter
and
pop
repz
je
jg
daa
ret
inc
shr
clc
outsb
adc
xor
and
add
aas
ret
ret
add
adc
xchg
into
call
xchg
jle
cmp
fs
adc
fisubrl
jle
pop
cli
push
pushf
imul
sahf
lods
add
mull
cmpsb
test
ss
lret
mov
jae
mov
cmp
ret
fdivrl
push
pop
adc
aam
mov
fdivrl
jns
jmp
test
movsl
xchg
dec
push
or
movsb
fxch
sub
shl
or
push
inc
pop
jp
ja
jo
cmpsb
outsb
test
sti
into
movsl
int3
xchg
fisttpll
imul
fs
stos
lcall
jno
stc
sti
imul
outsl
mov
mov
sbb
mov
or
mov
scas
fdivr
pop
sbb
push
shll
lahf
pop
lahf
mov
xor
push
ret
jle
mov
sub
sbb
repz
cld
clc
outsl
insl
xchg
in
sarl
pushf
and
push
mov
ret
les
aas
dec
adc
xchg
repnz
cmpsl
roll
jge
pop
dec
and
sub
or
das
aam
es
mov
imul
mov
push
adc
mov
cmp
sahf
cli
dec
xlat
es
or
mov
leave
jmp
gs
lea
pop
loop
movl
xorl
cli
dec
testl
mov
aas
sbb
xor
out
shll
fsubl
jne
jae
jle
jle
or
and
sub
nop
fists
subl
jb
push
fimull
xchg
in
movl
stos
repnz
xchg
xchg
lock
filds
pop
push
inc
mov
jl
dec
sbb
daa
sbb
aad
lcall
pop
mov
jmp
lds
stos
jo
psraw
xor
mov
gs
xchg
jae
test
ret
outsl
fcmovnu
insl
cwtl
or
cmp
add
cmpsl
xor
call
xchg
add
pop
pop
popa
and
jbe
and
inc
ss
cli
push
cmp
mov
inc
scas
and
pop
push
fisubrs
adc
xor
push
call
adc
notb
jb
call
cwtl
lret
mov
mov
dec
cli
scas
iret
scas
push
mov
aaa
lret
js
inc
and
subl
push
gs
sub
inc
pop
fsubp
sahf
add
stc
ret
jns
daa
dec
push
leave
jae
xor
in
mov
aas
mov
into
mov
mov
mov
adc
push
mov
cwtl
aam
pop
or
mov
ret
dec
cmp
xor
test
pusha
enter
pop
je
mov
sub
cs
mov
inc
fists
add
adc
pop
cmp
sub
jmp
jecxz,pt
repnz
push
fs
dec
inc
mov
push
push
pop
notl
cmpsl
test
cmpsl
add
cmp
sbb
jmp
in
fistpll
fwait
xor
cmc
mov
mov
push
push
push
pop
or
push
adc
lahf
sub
push
jmp
mov
and
adc
cmpsl
in
dec
xchg
movsl
and
push
mov
repz
cwtl
out
mov
into
jg
xacquire
dec
mov
xchg
cmpsl
mov
filds
sub
in
mov
imul
adc
mov
mov
test
ja
mov
mov
jecxz
in
mov
inc
cmp
jae
pop
sbb
stos
mov
and
push
mov
or
pop
lods
jecxz
sahf
xchg
mov
rclb
movsl
jae
mov
lret
sbb
insb
addb
aas
sbb
add
lea
lea
mov
imul
jmp
pop
and
jno
mov
insb
scas
mov
push
pop
lods
cmp
pop
rcr
lea
jmp
lods
push
cmp
lds
adc
inc
pop
inc
shrl
mov
mov
adc
addr16
fs
ret
out
xchg
cmp
sti
lods
mov
sbb
int3
aas
push
pop
sbb
mov
rcrl
mov
mov
push
loope
rolb
cmp
jecxz
rorl
add
inc
add
repnz
jl
sub
leave
add
cld
push
pop
popa
fldl
jl
cmp
dec
push
jmp
push
fadd
jle
jg
mov
aam
int
in
jl
sub
movsb
popa
xchg
mov
div
push
mov
sti
dec
inc
out
inc
enter
xchg
xchg
test
out
rcrl
mov
repnz
sar
add
scas
xor
negl
pop
sbb
je
xor
mov
adc
jno
add
dec
sub
mov
pop
mov
xlat
or
xchg
dec
sub
loop
jbe
lock
ds
cmp
aas
add
pop
sbb
pop
outsb
xchg
scas
flds
stos
lods
std
xchg
in
sbb
rcll
push
stc
jmp
inc
inc
ja
out
sbb
push
out
or
xor
loope
lahf
in
out
test
push
clc
stc
xchg
hlt
jg
not
test
push
jbe
jg
push
mov
jmp
sbb
cmp
cmp
subb
ss
aad
into
lods
and
add
fisubl
jno
adc
ret
popf
bound
sbb
inc
mov
repnz
aaa
lock
jno
cltd
cmpsl
pop
pop
jmp
cld
dec
hlt
enter
subl
push
mov
mov
xchg
dec
in
jo
test
add
push
les
rep
into
movsl
push
movsl
insl
add
dec
mov
jo
cwtl
xchg
pop
and
sahf
push
in
aad
pop
hlt
ss
cmp
test
xchg
ret
jl
ret
lret
aas
mov
inc
xor
mov
idivl
mov
adc
fadd
or
in
jg
mov
fldcw
push
in
loop
fistpl
mov
push
add
mov
cltd
push
jns
call
adc
rcll
cmp
testl
addr16
andb
popf
jl
sti
cld
xchg
dec
push
pop
fcoms
xchg
xchg
ret
jecxz
mov
pop
push
bound
mov
enter
addb
pop
lahf
mov
mov
mov
jns
movsl
mov
lods
jnp
adcb
push
xor
rorl
and
adcb
out
aam
sbb
test
lret
fsubrl
pop
pop
lret
inc
cltd
xor
daa
int
xor
lcall
dec
pop
int
cmc
pop
xorl
xchg
lods
sbb
xor
out
xor
incb
pmullw
sub
xor
movsb
push
add
test
dec
jnp
mov
scas
jl
add
out
xchg
mov
and
test
je
outsl
xchg
mov
rolb
xchg
sahf
mov
sbb
in
sub
mov
xchg
xchg
push
aaa
sti
cld
int
or
or
mov
pop
mov
int3
sub
call
mov
mov
cmpsb
imul
lahf
cmc
mov
lret
stc
sub
push
fcmove
add
imul
mov
adc
xchg
dec
or
xchg
test
push
or
push
and
mov
lods
mov
divl
insl
ljmp
xor
mov
mov
orl
fbld
mov
test
scas
xlat
pop
sbb
stos
clc
add
pushw
dec
mov
ret
out
xchg
adc
les
push
test
cmp
dec
jne
daa
scas
sbb
out
mov
dec
lret
dec
loopne
in
pop
xchg
rcrl
or
mov
add
dec
mov
mov
fdivs
sar
clc
fldenv
imul
cltd
mov
imul
neg
stos
std
xor
mov
lea
and
sbb
cld
push
sarb
lds
xchg
push
inc
pop
fadds
lcall
insl
xlat
mov
inc
pop
xchg
sub
ja
ljmp
fdivrl
cmp
mov
and
or
in
nop
fsub
test
icebp
add
push
push
push
jnp
mov
sbb
mov
popf
shrb
mov
insl
jl
xchg
sbb
fstpt
mov
dec
add
adc
jl
pop
ret
insb
dec
mov
out
loopne
cmp
sbb
dec
shl
clc
sbb
out
lahf
test
aaa
cmc
hlt
test
jo
cwtl
push
jl
loopne
in
nop
aaa
insb
xor
adc
test
cmp
bound
jle
dec
pop
mov
movsb
mov
ljmp
lret
push
aas
dec
push
cmp
jne
mov
ds
sub
test
addr16
leave
dec
dec
push
mov
lods
aam
aaa
roll
fnstenv
sbb
cmp
mov
std
sbb
outsl
mov
dec
jno
mov
xchg
movsl
mov
jo
ja
shrb
xor
fildll
sub
and
cli
mov
cmp
mov
les
mov
mov
inc
outsb
loop
test
dec
adc
jae
mov
rcr
and
shll
lcall
jl
iret
mov
mov
dec
jmp
add
mov
aam
push
adc
js
cwtl
sbb
cld
inc
insl
outsb
mov
jbe
adc
or
in
push
adc
scas
sub
mov
dec
add
dec
and
and
xor
inc
jl
sub
out
shr
lret
test
xor
or
es
faddp
cwtl
adc
out
shrb
xchg
out
daa
xchg
mov
mov
mov
and
lret
gs
outsl
int
xchg
cmp
fsubs
mov
outsb
mov
sbb
aam
lret
mov
push
lods
arpl
aas
cs
xor
ss
cmp
cmp
jmp
add
cmp
mov
arpl
dec
sbb
xor
add
shll
dec
mov
mov
mov
lcall
jge
bound
lds
cmp
enter
jg
mov
mov
sahf
inc
cmp
xchg
pop
jbe
sub
arpl
adc
icebp
inc
scas
sbb
push
ljmp
test
xchg
fisubrl
jae,pt
shll
lds
cwtl
add
and
jnp
mov
incl
test
je
cmp
jp
stc
or
add
inc
adc
dec
push
leave
jmp
sub
addr16
loopne
test
flds
pop
push
ljmp
jmp
dec
jle
aas
inc
std
hlt
add
or
dec
in
scas
das
scas
addl
dec
push
shrl
or
cli
arpl
loopne
mov
add
mov
mov
xchg
insl
inc
fs
dec
stos
popf
popw
and
dec
xchg
dec
and
shll
xchg
mov
add
fldl2t
jecxz
adc
dec
ror
out
add
xchg
inc
push
pop
or
je
dec
scas
aas
cmpsl
jle
adc
stos
xchg
jbe
cs
popf
push
lret
ja
push
dec
mov
stos
jmp
icebp
push
adc
push
scas
mov
bswap
bound
and
daa
loope
mov
push
xor
addl
movsb
xor
pop
lock
push
mov
decb
fisttpl
and
test
aad
or
lods
lods
mov
mov
and
loop
lods
mov
and
inc
faddl
push
push
out
mov
mov
fst
leave
les
cs
ds
push
mov
test
jge
call
jnp
jb
sti
push
mov
mov
insl
or
pop
cltd
inc
roll
push
sarl
cmp
adcb
dec
adc
test
xchg
test
punpckhdq
pop
aaa
repnz
adc
ss
rol
jmp
stos
aaa
outsb
xchg
fmuls
notb
es
shll
inc
cmpsl
scas
or
out
xor
push
sbbl
pusha
je
shl
pop
push
add
add
cwtl
enter
or
icebp
pop
dec
jbe
and
and
outsl
cmp
mov
sbb
cmp
mov
add
xor
push
xchg
imul
imul
jecxz
ret
mov
jmp
xchg
iret
fisttps
imul
imul
inc
add
sub
dec
lcall
xor
fisttps
daa
enter
inc
mov
std
and
inc
fmulp
in
or
push
addr16
inc
ljmp
pop
movsl
dec
jbe
mov
ficompl
xor
sub
icebp
jbe
push
cmp
or
push
or
arpl
scas
fadds
gs
cmc
jb
shll
mov
add
push
popa
xchg
adc
jmp
inc
or
inc
mov
stos
xlat
and
sarb
adc
pop
jecxz
fs
jp
jg
ljmp
and
testl
test
pushf
stc
ljmp
xor
in
loop
int
cltd
notl
mov
rcr
out
sar
xlat
add
and
lret
jge
jns
loopne
rorl
loopne
outsb
mov
aam
push
stos
pop
push
aaa
pop
xor
sbb
fiadds
sbb
or
push
mov
or
lahf
dec
add
aaa
in
nop
push
popa
cmc
mov
test
lahf
xlat
pop
cmp
adc
sbb
sahf
ja
inc
bndldx
mov
inc
mov
lock
std
xchg
mov
icebp
jge
fs
inc
mov
ja
sub
mov
frstor
sarb
ljmp
into
push
xchg
out
pusha
sub
and
loop
dec
mov
dec
mov
inc
add
and
and
xor
dec
inc
mov
fisubrl
lock
or
xchg
lock
lods
pop
jg
ret
jmp
dec
aad
adc
jmp
dec
add
popf
sub
and
inc
cmc
scas
aam
pop
sbb
dec
sub
inc
sbb
xchg
cltd
jp
jecxz
daa
sub
loop
pop
cmc
push
stos
sub
fcomps
mov
mov
or
je,pt
pop
xchg
dec
push
fadds
scas
lea
dec
jo
adc
popa
push
mov
push
incb
mov
xchg
sbb
roll
add
dec
iret
pop
and
pushf
jecxz
dec
hlt
inc
sub
push
cmpsb
lock
sub
xchg
mov
das
adc
call
add
sub
in
cmpsl
divb
ficoml
adc
shl
cs
sbb
pop
int
scas
clc
inc
rorb
sbb
jl
insb
ret
xor
sub
xor
enter
xchg
sub
xor
cmp
sub
lcallw
out
aam
jle
les
or
test
hlt
pop
cmp
imul
fisubrs
into
rclb
mov
icebp
sbb
inc
mov
insb
mov
dec
mov
cli
enter
cld
jo
aas
sbb
jle
xchg
jge
xchg
mov
xchg
loop
inc
sbb
inc
addr16
or
ret
jo
pop
and
add
mov
lret
jmp
mov
dec
test
cli
ficoml
xchg
dec
loope
cli
aas
sbb
call
daa
mov
inc
xchg
divb
ja
ja
jns
pop
jbe
jae
arpl
movsb
mov
inc
shl
stos
cmc
push
data16
into
insb
cwtl
adc
sub
aam
fs
mov
cmp
out
and
cmp
fldenv
mov
aas
js
aaa
add
lock
dec
mov
jnp
das
xor
or
roll
jne
les
sub
imul
add
aas
adc
jl
nop
icebp
data16
mov
sbb
fcomps
aad
das
mov
mov
mov
xor
xor
fldt
sbb
push
mov
add
shll
cmc
and
xchg
mov
ljmp
loopne
mov
xor
add
jmp
xor
in
push
andb
mov
xlat
js
xlat
xchg
mov
nop
jp
mov
out
jle
movsb
inc
mov
pop
addr16
mov
mov
arpl
lret
fdivrs
les
xor
in
je
sub
and
pop
jns
sub
shll
xor
pop
lret
shll
test
jg
filds
mov
mov
test
inc
les
mov
mov
in
adc
test
movsb
and
hlt
push
outsb
test
int3
add
and
rclb
pushf
adc
and
sbb
shrb
add
aam
inc
sbb
rcrl
shll
pop
std
cmpsl
in
movsl
mov
pop
loope
js
rol
jns
gs
jg
push
cmpsl
cmp
popa
dec
outsl
sub
xor
lahf
and
je
jb
jnp
xor
xchg
jb
ret
mov
test
fisubrl
inc
fidivs
rorb
fwait
popa
mov
add
in
mov
rclb
push
push
pop
xor
test
js
cltd
fdivrp
pusha
mov
insl
into
insl
js
mull
push
lcall
lret
xchg
mov
xor
or
stc
jg
sbb
or
lods
jo
cmp
mov
mov
or
pop
mov
insb
xor
pop
fisttpll
cwtl
inc
and
mov
xor
inc
jmp
sub
push
mov
test
cmp
push
ss
xorb
xor
adc
jbe
push
mov
int
jne
sahf
mov
xchg
sub
pminub
xchg
scas
movsb
add
test
js
and
sbb
mov
sbb
lods
push
push
and
cld
and
daa
rcrl
ds
jecxz
lds
in
xchg
xor
dec
xor
or
cmp
push
mov
xor
jbe
mov
jp
xchg
sahf
ret
fneni(8087
movsb
mov
cs
cmp
je
mov
pop
fdivrp
push
cmp
pushf
or
sbb
push
int3
inc
mov
jg
mov
ret
pop
mov
test
stos
out
and
push
inc
insl
push
add
inc
mov
fisubs
push
xor
cmp
adc
rcrb
aam
mov
and
jns
ret
pop
dec
imul
and
and
imul
jge
fcoms
dec
shr
cmc
mov
jl
in
add
push
lds
sub
aas
cmovae
push
dec
insl
mov
cmp
inc
adc
mov
aas
push
das
add
rorl
and
addr16
sbb
xchg
adc
in
add
or
jle
sbb
lods
testb
jne
cmpsl
test
xchg
or
lods
rol
stos
adc
mov
orb
loop
in
sbb
aam
dec
or
xor
pop
test
mov
stos
cs
cmp
test
aad
jne
jle
jp
mov
pop
int
rorb
mov
js
xchg
das
aas
stos
xchg
subl
add
jb
es
or
jno
lods
jmp
test
mov
aad
pop
shrb
fisttpll
adc
call
imul
fildll
stc
pop
xchg
lcall
movsl
or
jmp
ss
les
xor
sar
dec
pop
cli
rcrl
pop
clc
mov
and
cmpsl
lcall
pop
push
pop
and
sub
dec
test
push
les
imul
cli
or
test
arpl
xchg
sub
adc
mov
ret
xchg
pop
fnstsw
cs
shlb
adc
xor
inc
lcall
loopne
fdivr
fisubl
dec
push
jecxz
sub
cmp
jbe
inc
xchg
out
scas
push
and
mov
dec
loope
xor
loopne
jp
imul
fisttpl
or
sub
cmp
xor
out
rcrb
das
sarl
repz
ror
mov
inc
adc
out
rcrl
cli
jecxz
inc
xchg
adc
call
mov
sub
fnsave
int3
jge
rol
arpl
mov
mov
fdivr
jl
mov
and
fcmovnu
dec
das
cmpsb
sub
lret
xor
pop
push
jle
push
and
dec
sbb
jmp
ds
adc
push
sbb
shlb
pop
jbe
cwtl
gs
gs
mov
mov
mov
jecxz
dec
js
pop
inc
cli
and
fdivrl
cltd
and
cs
and
call
test
mov
ss
mov
popa
mov
aas
outsb
popl
addr16
or
or
in
out
and
inc
cs
inc
loop
or
mov
es
push
push
sub
xor
xchg
stos
call
jg
insl
loope
insb
lods
xor
icebp
sub
inc
ljmp
mov
push
pop
negl
cmpsl
and
inc
adc
jne
popf
jnp
push
cmp
mov
jmp
jbe
sbb
cmp
ds
in
arpl
test
movsb
xor
repnz
jb
sbb
clc
lcall
movsl
mov
mov
dec
outsl
inc
xchg
icebp
and
mov
inc
inc
mov
call
int3
xlat
or
scas
jo
cmp
adc
xchg
jmp
fs
mov
loope
ret
outsl
arpl
jae
scas
or
xor
js
push
push
in
inc
xchg
addr16
jbe
adc
jl
int3
popf
clc
push
repnz
test
fdivrs
out
popa
pop
mov
movsl
mov
push
or
scas
in
sbb
cmpsl
inc
sub
stos
xchg
inc
mov
and
imul
fwait
xor
imul
xchg
mov
sarl
mov
pusha
imul
pop
fmuls
loopne
inc
jge
data16
push
outsb
xchg
gs
adc
cld
and
xor
mov
pop
or
mov
rcrl
jnp
jnp
imul
stc
sub
in
stos
mov
xor
stos
cld
xchg
mov
jp
bound
into
outsb
xchg
loopne
adc
add
or
arpl
aam
je
push
and
or
les
fldcw
sub
out
cmp
out
sub
pop
add
or
pushf
aaa
fbstp
imul
cmpb
mov
into
adc
negb
nop
and
scas
sub
jns
repnz
and
and
daa
mov
push
daa
fisubs
lret
insl
jle
es
adc
mov
outsl
or
push
pop
inc
stos
push
outsl
comiss
dec
incl
or
jae
mov
pop
into
ds
and
lret
xchg
fistpll
movsl
cmc
jb
inc
adcl
aad
outsl
sarl
rclb
filds
fs
imul
gs
repz
cmp
pop
sbb
sub
addl
ds
jbe
lds
and
adc
push
mov
mov
sbb
jp
in
xchg
imul
imul
iret
cmpsb
xor
dec
dec
fcmovnbe
push
out
mov
cmp
mov
jmp
in
pop
push
nop
outsb
lret
dec
pop
and
outsl
dec
out
jl
or
jnp
jmp
aad
add
sub
ja
xor
lcall
nop
dec
sbb
sbb
add
inc
movb
bound
sub
xchg
push
push
cmp
fistpll
pop
rcr
jp
mov
es
gs
addr16
pop
ret
imul
es
jp
pusha
fsqrt
fadds
test
loop
adc
or
fucomp
adcb
sub
loope
xor
push
jns
xchg
int
pop
lahf
cmp
and
out
mov
fstpl
xchg
jbe
outsl
adc
rcr
rorl
fs
ja
adc
cmpb
scas
iret
pop
pop
repz
lods
sub
lret
mov
jle
mov
pushf
hlt
cltd
mov
sarb
out
outsb
js
stc
int
inc
test
add
cmc
push
xchg
imul
in
xchg
dec
push
cmp
mov
dec
cmc
hlt
stc
mov
fdivrl
pop
jge
lret
aaa
jb
xchg
adc
xchg
aaa
jg
pop
out
mov
add
fcompl
dec
fs
js
jne
sbb
inc
sbb
fidivrs
cmp
add
ror
sub
or
and
aad
mov
push
int
cmp
ljmp
movl
loop
mov
adc
pop
outsb
adc
mov
test
aas
jne
cmovno
orl
xor
dec
lcall
fisubrl
dec
jo
lret
mov
sbb
add
xchg
in
pause
pop
add
fisttps
test
or
pop
jmp
mov
jge
mov
adc
int
inc
repnz
dec
push
add
add
push
jp
ficompl
sub
repnz
xor
fwait
mov
pop
inc
jp
mov
out
xor
cwtl
push
lods
hlt
aaa
into
inc
cmp
pop
jne
pop
xor
bound
aas
stc
fisttpl
adc
leave
out
xchg
dec
xchg
sti
pop
ljmp
pop
jecxz
and
dec
daa
enter
roll
into
inc
sub
notb
sub
test
call
and
jecxz
fdivs
movsb
jl
in
sahf
mov
sbb
arpl
dec
jg
loope
push
sub
sti
cltd
mov
pusha
jmp
and
shll
ss
loopne
jb
cmp
negb
out
pop
gs
xchg
mov
adc
call
iret
pop
in
mov
into
iret
fsubl
popl
lret
cmp
fcomps
movq
mov
jb
dec
sbb
adc
mov
push
push
add
push
addl
je
dec
inc
imul
inc
jmp
xchg
xchg
dec
inc
push
pop
xchg
cltd
dec
push
cld
cmc
add
push
aam
mov
xor
push
jmp
mov
inc
cmp
jl
daa
mov
ficomps
aaa
mov
icebp
fwait
cmpsl
fdivrs
mov
and
and
outsl
enter
nop
rcrl
dec
add
sahf
mov
cmpb
lahf
and
xor
cmp
push
ret
insl
adc
nop
fstpl
stos
gs
push
or
dec
xor
and
and
imul
mov
dec
mov
push
mov
out
sub
into
cmpsb
sahf
sahf
or
out
js
and
push
jl
popa
jo
sahf
stos
lahf
subb
loopne
xor
add
adcb
xchg
addr16
xlat
test
mov
or
inc
push
or
pop
lds
sbb
out
mov
ret
cmpsb
jl
nop
scas
fstp
push
sub
and
fdivrl
les
sub
cmp
in
mov
ljmp
testb
sahf
ret
dec
jp
inc
cmpsl
push
mov
dec
in
sbb
movl
pop
xchg
pop
push
ljmp
leave
fdivrs
xchg
daa
fisubrl
insb
fdivl
cmp
fadd
scas
call
test
roll
leave
das
pop
aas
push
mov
pop
inc
sub
jmp
loop
xchg
sahf
and
xchg
and
movsl
jge
xchg
jns
jne
int3
and
xor
jae
xor
jnp
push
stos
das
add
add
xchg
or
lcall
mov
xchg
xchg
mov
inc
cmp
popf
ret
ds
add
cmp
sub
mov
lods
test
enter
mov
test
test
cmp
push
ljmp
adc
pusha
pop
push
movsb
or
jb
xchg
int
call
sub
test
mov
mov
inc
mov
lret
ljmp
mov
push
out
popa
inc
mov
adc
push
mov
lea
imul
aas
roll
mov
ds
gs
xor
mov
and
or
adc
inc
mov
popf
outsb
cwtl
jo
pop
xor
iret
pop
cmc
pop
mov
mov
and
shll
lret
cmpsb
fisubs
dec
in
movsb
inc
mov
sbb
rorb
aas
mov
cs
ds
inc
pop
jno
das
int3
mov
pop
lock
cmc
push
and
outsb
hlt
jg
jnp
push
fwait
addr16
leave
gs
arpl
jbe
jmp
jg
ret
sarl
push
sbb
mov
in
mov
sbb
pop
dec
adc
pop
aaa
jo
jg
push
mov
push
test
fisttpl
les
shlb
push
sarb
cmp
andl
test
fwait
rorl
repz
mov
ror
lock
add
stos
aas
fs
gs
fldt
xchg
ret
int
mov
mov
sub
mov
orb
and
sbb
jns
aad
sbb
popa
shrb
cmpsl
sub
xchg
movsl
out
pop
fwait
andl
pop
aad
push
cmp
or
pop
dec
push
mov
sarl
jbe
and
mov
repnz
sub
roll
pusha
xor
dec
xchg
ds
lods
test
push
push
aad
fsub
mov
pusha
sbb
test
fld
pop
inc
loop
loope
pop
mov
mov
and
sub
je
dec
insb
int3
cmpsb
and
dec
jo
lock
int
xor
call
cmpsb
or
hlt
outsl
adc
pop
imul
mov
mov
stc
fldcw
fucompp
fisubs
mov
inc
mov
cli
xor
ja
xor
mov
xor
fisttpll
enter
cli
sub
pop
mov
mov
mov
into
cltd
icebp
js
fcom
xor
popa
in
lret
shrl
jo
outsl
adcb
add
in
ror
or
cld
lahf
or
inc
dec
ret
enter
mov
ret
xchg
movsl
testl
adc
inc
xchg
fsts
or
push
inc
push
fmulp
roll
xor
dec
jbe
lds
leave
sahf
scas
in
or
jno
gs
jp
add
lods
bound
aaa
cmpsl
and
pop
push
mov
cmp
mov
shll
and
adc
adc
adc
cld
js
and
xchg
shrb
int
or
iret
adc
js
ljmp
xchg
xor
outsl
stos
xchg
scas
mov
inc
jno
bnd
fsts
lahf
and
push
push
out
xchg
jbe
std
add
inc
add
push
sbb
sbb
aad
cmp
pop
mov
shll
sarb
xor
lock
ss
das
call
stos
sub
and
dec
iret
sub
sub
pop
adc
out
pusha
mov
out
out
lahf
jno
jno
sahf
mov
mov
arpl
and
test
sahf
sub
xchg
push
xor
or
cs
gs
pop
xchg
or
and
popl
or
clc
mov
std
outsb
adc
and
dec
stos
xor
jbe
sub
ljmp
outsb
inc
loopne,pn
sub
push
lods
rorl
push
dec
mov
add
cmp
sbb
pop
out
shrl
xchg
sbb
pop
cmp
xor
cmp
ss
lods
decl
mov
std
fcoms
xchg
stos
adc
or
or
mov
mov
dec
xchg
icebp
add
enter
mov
or
stc
sub
mov
dec
fwait
je
in
adc
fldcw
shll
push
push
fdivp
sub
subl
push
lock
cltd
repz
std
xchg
mov
std
in
cmp
cmp
and
pop
xor
scas
mov
cmpsl
mov
sarb
sub
lock
fbstp
jge
or
push
sub
pop
or
jo
push
inc
xchg
ds
add
call
cmp
fs
and
xchg
out
xchg
adc
fldcw
jns
cmp
loope
pop
push
in
movaps
mov
jb
repz
mov
clc
lock
imul
jg
xor
or
add
adc
into
popf
and
push
cmpsl
xchg
jp
mov
lahf
fs
pop
xchg
adc
jg
test
roll
loop
scas
fnstcw
mov
fwait
in
mov
pop
jecxz
xorl
cmp
aad
js,pn
fnstenv
cltd
mov
xchg
cltd
lds
pop
xor
xchg
xor
out
cmp
adc
inc
dec
pushf
loop
pop
sbb
test
push
popf
jle
jo
xchg
mov
pushf
xchg
ret
xchg
mov
xor
xchg
call
lcall
daa
adc
sbb
mov
push
hlt
or
sub
mov
xchg
loopne
xchg
mov
xchg
jl
mov
aaa
xlat
in
and
inc
mov
jg
insl
lret
lea
pop
int3
fisubrs
and
fbstp
shlb
xor
fstl
nop
sub
push
xor
jl
notl
adc
ja
sarb
dec
roll
jno
out
pop
xchg
push
out
cmp
mov
adcl
int3
xchg
ljmp
push
sub
in
push
push
xor
xor
cmp
les
test
push
scas
stos
fwait
dec
fwait
aas
out
shll
add
sub
in
stos
bound
bnd
jmp
sbb
testl
sub
in
dec
pop
cmc
inc
pop
int3
addr16
scas
std
addr16
pop
fsubrl
push
stos
ja
or
jno
addr16
inc
sub
push
test
adc
push
sbb
lret
fwait
mov
outsb
in
or
mov
mov
cmp
dec
push
mov
inc
popf
out
add
xor
cmpsl
dec
arpl
test
push
jbe
hlt
ds
test
das
imul
scas
mov
insb
pop
jp
nop
cltd
pop
xchg
cmp
mov
xor
inc
mov
mov
mov
shl
hlt
push
nop
mov
sbb
dec
xor
and
push
mov
aad
push
leave
pop
or
int
out
jp
lcall
loope
stos
cmp
stos
popa
or
mov
cmp
fists
sbb
jo
xchg
xor
push
or
hlt
sub
sub
fstl
and
pop
cmp
mov
fs
dec
and
sahf
add
sahf
jb
xor
add
mov
bt
push
jno
cmp
adc
lock
inc
cld
push
mov
cs
ror
lret
and
cwtd
mov
loope
les
jle
sbb
cmp
popa
push
out
outsb
cmpsl
push
fdivl
lods
mov
in
addr16
jb
xchg
jne
xchg
lods
shrl
mov
mov
and
mov
dec
les
sub
jbe
ret
cmp
sbb
xchg
xor
jo
or
jns
daa
lods
cmp
daa
insb
jecxz
stc
mul
jbe
xchg
cmp
cmp
scas
sbb
pop
jne
push
insl
xor
mov
mov
sbb
xchg
cwtl
sbb
push
xchg
cmpl
aas
adc
pop
outsl
es
ljmp
and
mov
shl
loop
loopne
or
mov
jmp
repz
fists
insl
sub
dec
outsb
xchg
repz
lcall
rorb
leave
push
sub
repz
pop
aas
mov
inc
mov
sbbb
mov
mov
in
or
fwait
fldl
cwtl
and
dec
cs
cmc
mov
data16
inc
ljmp
cld
sbb
pop
dec
xchg
popf
and
call
ret
sbb
mov
daa
into
cmpsb
mov
mov
sbb
stc
btr
adc
sub
sbb
sarl
sub
dec
inc
jae
and
or
cld
sub
xchg
aad
push
sbb
ja
cltd
add
pop
dec
test
xchg
push
lret
cld
mov
lret
mov
jecxz
jl
mov
or
jbe
iret
push
mov
call
cmp
scas
or
adc
push
dec
pop
sbb
out
frstor
and
pop
inc
add
jecxz
fcompl
cld
in
js
push
adc
bound
dec
mov
ds
sbb
add
adc
push
inc
xchg
sbb
scas
aam
add
daa
inc
ss
test
mov
enter
loope
call
adc
ljmp
dec
sub
sbb
mov
sbb
out
gs
mov
xor
ja
push
orb
xchg
mov
xchg
xchg
imul
jne
ret
or
inc
adc
dec
aaa
jg
dec
pop
imulb
mov
pop
lahf
sub
adc
mov
fiaddl
push
pop
xchg
xchg
pop
inc
mov
lock
notl
mov
push
je
addr16
cmp
jns
pop
sbb
cmp
es
out
dec
sub
out
lret
jmp
mov
sbb
fnstenv
outsb
push
jmp
pop
lock
sub
sbb
xchg
insb
xor
sarl
popf
movsl
imul
or
movsb
fisubs
mov
fstpt
inc
mov
test
popf
sbb
xchg
arpl
mov
stos
pop
fdivr
jb
push
ds
mov
dec
fs
jo
pushf
xor
mov
lods
xchg
lods
mov
cmp
sub
aas
lods
pop
ret
mov
and
gs
test
mov
cmp
jmp
and
lahf
outsl
pop
ljmp
sarl
add
and
outsl
popf
add
jmp
les
and
inc
aam
sbb
cmpsb
cmp
lcall
sahf
add
adc
inc
test
sub
jmp
xor
jp
ljmp
pop
aad
pop
test
and
push
lret
sbb
mov
fldcw
jno
sti
xchg
das
stos
xchg
and
mov
push
clc
push
inc
jg
outsb
xchg
into
dec
lds
push
add
lret
xchg
mov
fcom
stos
imull
cmp
dec
repz
pusha
mov
sub
sub
aad
ljmp
hlt
rcll
shrl
mov
jno
call
xchg
dec
sub
in
xor
jb
cwtl
lods
mov
pop
sbb
or
mov
xchg
cmp
push
scas
icebp
fildl
mov
in
mov
jmp
cltd
or
cltd
dec
xchg
bound
hlt
or
nop
stc
mov
mov
pop
cmp
test
insb
imul
icebp
jge
xor
das
popa
jo
aam
mov
jp
aas
scas
imul
fwait
into
neg
out
pop
jae
scas
out
cmp
adc
in
fwait
jle
xlat
mov
fimuls
push
popa
sahf
inc
aam
cmp
sahf
jle
and
divl
out
push
push
sbb
cwtl
pop
cmpxchg
leave
dec
mov
lock
fs
xchg
and
and
fcmovnu
xchg
add
insl
adc
test
cwtl
adc
mov
aas
rcl
in
sbb
fidivl
dec
stos
outsb
popf
dec
fwait
or
insl
mov
adc
popa
shlb
push
test
pop
stos
ljmp
and
imul
test
jmp
test
push
mov
or
pop
lods
dec
push
add
inc
lahf
pop
sub
bound
lret
jmp
in
lds
loope
sub
ja
adc
insl
ret
loope
shlb
pop
or
cmc
sarl
mov
mov
test
out
xor
jmp
jns
outsl
push
cmp
addr16
pop
mov
push
mov
or
lret
xchg
sarl
xor
stos
inc
jae
jno
add
mov
daa
mov
out
xchg
cmc
sub
adc
mov
mov
pop
mov
add
lods
add
repz
ret
push
fbld
test
push
cmp
push
sub
mov
rcrb
jns
push
xor
psraw
mov
push
arpl
jmp
fwait
das
scas
cmpsb
andl
test
or
pop
loope
mov
xchg
movsl
bound
mov
dec
or
adc
mov
dec
and
imul
movsb
imul
pop
jle
cmpsb
in
mov
jae
sbb
pop
shl
and
mov
adc
ds
mov
aas
mov
mov
pop
loop
jae
push
adc
sbb
dec
mov
mov
out
repz
loopne
aaa
incb
mull
and
loope
push
test
ljmp
int3
ja
jnp
sub
repz
rcr
aas
lds
cmpsb
repz
pop
push
xor
mov
insb
mov
add
int
sub
jae
iret
lds
mov
cmpsb
test
jmp
loop
inc
fisubs
mov
outsl
push
pop
mov
lret
adcb
lods
aas
inc
fldt
sbb
push
mov
push
xchg
push
test
inc
int
int
in
push
dec
dec
xchg
inc
inc
lea
push
scas
pop
lods
in
pop
mov
mov
jbe
mov
cmpb
cs
outsb
aad
arpl
sub
lret
stos
fsts
pop
xchg
cmp
repnz
xchg
cmp
mov
cld
sti
test
loop
daa
push
sub
jns
or
dec
xor
les
shlb
mov
in
dec
setbe
pop
and
sub
sti
fisttps
in
add
mov
test
cld
fnstcw
fdivr
add
cltd
fucomi
cmp
jo
lods
dec
fcompl
iret
lcall
xchg
jo
jge
cmp
loopne
jo
cmp
jnp
cmp
fisttps
loope
js
xor
push
sub
mov
in
movsb
mov
scas
dec
imul
pop
fwait
cmpl
in
jecxz
popf
int
jbe
add
inc
dec
inc
jno
mov
loopne
mov
adc
das
pushf
push
int
and
xchg
fisubl
add
call
out
fiadds
insb
mov
es
sub
xchg
xorl
cmpsl
cmp
xlat
mov
and
fistl
jnp
inc
or
rcrb
xor
sbb
mov
leave
mov
xor
test
das
out
mov
lds
sbb
mov
xchg
add
mov
or
pop
ljmp
cmp
pop
lcall
add
dec
push
adc
or
sti
cli
jp
es
in
jmp
push
es
sub
push
cmpsl
out
out
in
lahf
enter
lea
dec
push
lods
push
ljmp
int
jns
dec
mov
push
inc
jb
cmp
and
fstps
and
cmpsb
mov
orb
repz
mov
cmpsl
cltd
jns
sti
pop
xor
pop
pop
push
test
inc
xchg
es
add
jl
test
dec
aam
lods
sub
xchg
jg
lcall
insl
cld
jns
mov
cwtl
adc
jnp
or
or
daa
stos
pop
popa
dec
and
dec
xor
adc
lods
xchg
pop
add
mov
test
push
mov
xchg
lods
ret
mov
inc
adc
test
inc
jle
rcll
dec
pop
xor
inc
call
jecxz
popa
in
dec
mov
loop
arpl
cmp
imul
inc
mov
inc
clc
xchg
popa
mov
mov
je,pt
lret
and
aaa
sbb
mov
iret
xchg
iret
and
adc
or
test
mov
jo
fmul
fwait
jle
sbb
sti
xchg
xchg
pop
test
in
out
mov
out
aad
sti
add
jo
jne
jo
pop
ds
cwtl
lret
popa
and
cmp
daa
push
das
nop
cli
insb
push
push
mov
rcpps
cld
pop
aas
clts
jbe
cmp
fs
jp
pop
cmp
push
mov
sub
mov
sub
mov
sub
das
aas
adc
gs
xorb
mov
sub
mov
int
push
push
inc
dec
mov
sub
adc
pop
popf
fcoml
stos
insl
lcall
aam
fs
insb
cmp
out
sbb
iret
push
sbb
and
cmpsb
int3
adc
push
dec
clc
dec
mov
inc
imul
push
test
imul
dec
out
loopne
pusha
push
and
sbb
lret
popf
push
js
subl
sti
cmpsl
sti
gs
add
or
pop
out
sbb
sub
call
cs
les
dec
mov
lcall
cmp
inc
xchg
jbe
scas
in
lret
cmpsb
pushf
add
xor
push
out
scas
cmp
in
jae
jge
frstor
xor
and
ficoms
stos
setne
xchg
and
rorb
cmp
sub
mov
fldl
daa
push
je
dec
dec
loopne
mov
inc
sub
xchg
push
repz
ss
stc
pop
mov
add
xchg
addr16
std
jns
jl
jge
sbb
mov
aas
and
and
repnz
dec
mul
into
pop
negl
clc
push
clc
fidivl
and
dec
rclb
mov
add
fistpl
push
imul
pop
sahf
and
call
ja
cmpsl
inc
add
inc
xorb
call
add
mov
jmp
sub
fstps
adc
insl
es
add
inc
adc
lock
popa
fildl
cli
sub
jae
xchg
xchg
imulb
popa
inc
add
dec
push
stc
mov
xor
jg
jp
daa
lahf
lea
lods
jbe
push
shrl
mov
inc
lods
pop
rcrl
ret
pop
incb
ss
pop
cmp
aaa
cltd
mov
movsl
jmp
cmp
insb
mov
loopne
cmpsb
sti
dec
lret
jle
fst
les
out
push
rolb
push
sarl
addl
imul
xchg
jno
pop
push
xlat
xchg
and
sbb
int3
mov
inc
pushf
loop
fidivl
ret
int3
cmpl
das
adc
jp
inc
out
mov
adc
cld
mov
fnstsw
or
call
icebp
jmp
and
insl
dec
iret
mov
clc
div
adc
sbb
xchg
test
inc
cmp
hlt
cmp
xchg
cmp
jno
fldl
aad
mov
xchg
mov
sbb
mov
sahf
push
lock
shl
push
movsb
fimuls
filds
iret
jns
sbb
jae
or
push
inc
test
mov
cmp
mov
mov
mov
lock
sbb
ljmp
test
pop
lahf
mov
stos
shr
icebp
loope
ret
out
clc
pop
add
mov
imul
inc
inc
nop
push
add
mov
jns
sub
sbbb
cmp
mov
mov
out
fwait
xchg
adc
mov
add
xlat
cmp
in
fwait
adc
mov
xor
or
insb
jo
movaps
add
int
rol
cli
stos
sarb
jnp
stc
sahf
in
aaa
add
insl
push
mov
mov
aam
jge
jne
mov
xchg
mov
imul
xchg
negb
sub
es
push
imul
sub
xchg
mov
mov
lahf
or
lret
rep
ds
sub
sub
int3
in
adc
cmp
mov
sbb
xchg
test
xchg
fistpll
mov
arpl
icebp
inc
pop
aaa
xchg
loopne
ss
fstpl
mov
push
mov
sub
mov
idiv
jns
pusha
rcr
jbe
inc
fwait
negl
jo
iret
cmp
fwait
cmp
add
call
and
xor
daa
sub
in
sbb
out
jmp
ret
xchg
lahf
push
testb
movsl
movsb
xor
xor
push
jbe
cmpl
repnz
mov
das
inc
xor
pop
push
jge
test
repnz
cltd
lock
jo
sub
adc
out
mov
std
ljmp
sarl
sbb
jbe
add
inc
xlat
cli
pop
and
push
add
xchg
in
add
out
xor
or
ds
inc
ret
cld
rcl
xor
imull
or
in
xchg
lret
lods
sbb
jmp
lea
mov
mov
cmp
adc
in
iret
or
cmp
int3
pusha
mov
mov
push
jnp
in
idiv
adc
pop
cmp
loop
std
mov
cli
jge
push
gs
cmp
iret
scas
in
or
add
jns
imul
pop
loopne
fs
xor
xor
push
fldenv
or
inc
xchg
imulb
into
sub
cmp
rorl
subl
bnd
nop
bound
and
test
jle
in
xor
lret
cmp
test
xorb
and
pop
sbb
call
jne
stc
mov
push
mov
cmp
in
dec
add
dec
mov
sbb
lcall
add
les
ja
cmc
cmp
hlt
fcoms
insl
rclb
subb
or
cwtl
adc
jl
scas
and
mov
cmp
cwtl
addr16
cmpsb
dec
aas
and
xor
iret
inc
pop
xchg
in
mov
jnp
mov
daa
dec
pop
or
jbe
inc
jne
orb
dec
mov
mov
fld
cs
or
imul
and
rorb
dec
and
roll
mul
push
imul
leave
jne
ffree
scas
push
xlat
lods
mov
dec
and
bnd
inc
ja
and
cs
clc
inc
aad
arpl
add
stos
ja
sti
push
or
js
outsb
cwtl
sub
ficomps
mov
adc
clc
or
inc
pop
push
sbb
xor
cmp
or
push
mov
outsb
dec
push
add
hlt
fs
jg
repnz
rcl
sbb
add
pop
jno
inc
pop
out
rol
cmp
data16
jl
ret
aas
lret
aaa
inc
cltd
inc
inc
ja
std
ljmp
xchg
pop
mov
jmp
loopne
in
ds
int
shr
je
dec
movsb
in
xor
push
ret
mov
fsubrp
xor
sbbb
mov
int3
aad
mov
mov
mov
fadds
add
mov
ret
or
xchg
jl
lahf
mov
sub
jo
test
push
xor
lcall
jl
cmp
movsl
or
arpl
stos
ljmp
xchg
xor
jg
in
dec
aaa
sbb
jle
scas
js
mov
xor
test
xchg
sbb
outsb
fisttps
sub
pop
pop
mov
ljmp
push
or
mov
xchg
xchg
and
scas
int
daa
popa
fucom
out
out
pop
inc
ffree
fnstcw
sbb
sub
popf
mov
mov
xchg
cmp
dec
pop
pushf
mov
lods
mov
fsubl
daa
icebp
xchg
std
pop
sub
ss
and
xchg
sub
mov
jne
push
sbbl
jo
xorps
in
dec
vphaddwd
jmp
pop
popf
pushf
mov
addl
test
push
push
and
ds
scas
pusha
cmpsl
dec
arpl
lds
mov
pop
adc
out
or
add
lret
add
out
dec
jo
pop
sbb
pop
inc
stos
jmp
out
stos
mov
stc
int3
popf
xor
add
les
lods
jecxz
mov
adc
sub
shlb
ja
cmpsl
mov
fwait
sub
sbb
test
pop
mov
data16
inc
addr16
mov
roll
loopne
push
out
enter
jae
adc
fidivrs
iret
mov
movb
pop
adc
jg
xchg
mov
push
inc
cltd
imul
loope
aad
into
pop
jmp
daa
fwait
cmp
insb
jg
fistl
int3
xchg
xor
cmp
stc
xor
sti
loopne
push
enter
jle
fsts
cli
push
lds
pop
jae
js
dec
rolb
aaa
push
xchg
fidivl
jge
js
shl
clc
dec
cld
rolb
movl
sbb
arpl
arpl
sti
sbb
lahf
adcl
data16
sbb
lds
negb
popa
bnd
lds
xchg
jns
add
scas
cmpsl
mov
enter
cmc
xchg
mov
pusha
cltd
xchg
repnz
xchg
addr16
mov
mov
imul
mov
dec
or
mov
mov
fbstp
rcrl
jno
aad
dec
add
push
and
push
cmc
cmp
mov
clc
xorl
movd
pop
jmp
inc
inc
addb
dec
inc
pop
push
cltd
aas
stos
pop
xchg
inc
mov
push
lds
fmuls
imul
stos
and
add
xchg
cltd
and
xor
shrl
xchg
imul
sub
xlat
sub
sub
mov
or
ljmp
ret
hlt
stos
push
pop
loop
hlt
cmp
add
test
js
push
or
cld
pusha
aam
pop
mov
mov
add
repnz
fwait
mov
out
je
int
test
jb
jne
loope
push
push
push
and
pop
jge
aas
sub
pop
dec
fisttpll
add
int3
fisubrs
xor
cmp
hlt
xchg
ret
xor
mov
sbb
cmp
leave
ja
dec
mov
mov
lcall
sarb
fidivs
in
js
adc
addr16
in
jp
push
lods
jns
movsb
cwtl
aaa
sub
dec
jp
call
fisubl
xchg
test
inc
push
pop
jne
pop
repnz
inc
clc
idivb
sub
xor
out
adc
into
fistl
lret
insl
dec
rol
cmpsl
shrb
xor
adc
mov
mov
ja
cmpsb
mov
lahf
ret
shrl
sbb
mov
iret
add
gs
out
xor
jns
push
add
jl
inc
sub
rcll
xor
scas
mov
adc
fisubs
sub
xor
mov
sqrtps
callw
mov
scas
pop
lret
xchg
push
or
loopne
mov
xor
std
ret
push
mov
and
push
hlt
aad
cli
push
cmp
outsl
jecxz
mov
in
mov
push
shll
add
rolb
ja
imul
in
sti
jb
adc
pushf
dec
jmp
incb
fcmovu
sbb
mov
aaa
sbb
mov
cmp
sbb
xchg
and
lret
xchg
out
hlt
inc
jns
repnz
lcall
stos
pop
and
enter
dec
stos
addr16
inc
test
insl
pop
test
add
cmc
dec
mov
scas
sub
shll
add
add
inc
ss
jl
and
push
je
inc
fidivrl
ja
int
xor
imul
es
xor
cmp
addr16
std
push
cwtl
and
stc
pusha
gs
leave
movb
scas
movsl
sub
je
stos
and
arpl
mov
xor
push
and
jb
xchg
inc
adc
sbb
or
jb
pop
das
jnp
pop
inc
mov
icebp
rolb
pop
cmp
mov
lret
add
jmp
or
popa
loope
fdivrs
adc
mov
shrb
loop
std
push
cmp
jmp
std
sub
cmc
pop
push
cmp
loope
and
pop
inc
and
adc
push
jo
in
insb
clc
movsl
fnstenv
push
pusha
adc
out
sbb
aam
in
lods
jno
mov
jns
and
test
dec
clc
in
xor
movsl
shll
shll
dec
xchg
out
mov
cmp
push
adc
xor
lods
and
or
rsqrtps
mov
xchg
rcrb
pop
push
push
or
insb
mov
xchg
cs
outsl
ss
mov
push
imul
inc
es
inc
xchg
xorl
jbe
inc
push
out
rcrl
xchg
inc
push
or
out
xchg
jge
jo
ret
sub
mov
clc
imul
lods
dec
stc
pushl
cs
fld
fisttpl
xor
cmp
dec
rcll
jnp
gs
add
psubw
sub
pop
push
or
mov
jnp
push
rcrb
fcmove
das
test
test
mov
lods
or
int
adc
sti
outsl
pop
or
int3
add
cmpb
mov
adc
jge
neg
lea
mov
imul
mov
rcll
cmp
sub
jb
das
ja
push
pop
ret
jecxz
in
xchg
push
aam
mov
and
lods
enter
and
popf
shr
std
int
arpl
mov
add
cmpl
dec
addr16
mov
push
xchg
add
lods
jno
xchg
pop
add
call
iret
inc
jno
push
jns
push
adc
sub
fxch
dec
mov
test
inc
outsl
xchg
mov
cmp
cmpsl
es
fistpl
ss
mov
out
xchg
inc
mov
mov
mov
clc
mov
push
lret
mov
arpl
sbb
sbb
jno
sbb
aad
push
aad
pop
stc
pusha
jecxz
fs
movl
dec
xchg
into
outsb
xor
ds
add
xchg
pop
inc
nop
scas
adc
popa
add
cmp
mov
and
pop
cld
cmp
adc
les
dec
les
cmpl
jb
pop
lds
sub
int
scas
cmp
and
das
mov
adc
mov
mov
jbe
imul
das
or
rorb
jne
rcrl
inc
hlt
ret
jnp
or
push
add
jb
jmp
test
fisubrl
jmp
bound
aad
int
icebp
dec
pop
dec
es
popf
sub
inc
call
stos
arpl
pop
mov
notl
cmp
icebp
loopne
daa
mulb
mov
mov
lea
mov
mov
mov
push
cmp
adc
sahf
xchg
mov
add
add
and
cld
cmp
jae
ret
mov
ss
jno
cmp
cmp
pop
dec
lock
imul
dec
leave
imul
jmp
pop
lods
or
mov
lods
fwait
stos
and
jmp
js
fmulp
jo
add
loop
fs
push
es
sbb
pop
clc
mov
cwtl
cmpsb
xchg
mov
fiaddl
cmc
lahf
and
push
jmp
notb
pushf
loope
sbb
jae
js
fstpt
adc
cmp
movsb
lods
push
gs
add
test
xchg
rolb
jae
cwtl
mov
mov
xor
pop
jge
push
push
fiaddl
sub
jns
cmp
cli
cld
fildl
jb
stos
int
add
imul
loope
int
sahf
imulb
inc
pop
and
fiadds
inc
loopne
lds
pop
pop
inc
movsb
nop
pushw
test
insb
popf
stc
mov
inc
cmp
xor
sarl
mov
jb
add
mov
popf
mov
xor
add
sub
test
xor
or
and
and
iret
dec
in
xor
sub
ljmp
add
and
ret
cltd
push
repnz
das
daa
cltd
repnz
stc
out
mov
jo
or
pop
mov
sub
aaa
cli
dec
icebp
sbb
lret
lcall
add
std
into
test
in
adc
push
mov
jmp
jge
sar
scas
pop
mov
dec
lret
imul
xor
pop
in
xchg
inc
or
dec
fs
xor
xchg
xor
mov
cmp
cmpsl
mov
dec
pop
cmp
jne
jo
mov
pop
mov
test
daa
lret
ljmp
push
dec
gs
mov
mov
insl
ror
out
fmul
mov
jb
rorl
negl
ds
clc
ret
mov
int3
sbb
sbb
fistps
aam
dec
call
nop
repz
imul
cmp
outsb
cwtl
ds
and
dec
cwtl
cld
cmp
outsb
sub
xor
lock
push
mov
cmp
in
xor
subb
fs
lds
loopne
xlat
or
pop
pop
fisubs
cmc
xchg
dec
jb
hlt
mov
mov
sbb
adc
jne
mov
into
and
or
mov
or
dec
jnp
jmp
mov
mov
aam
nop
test
fldl
pop
lret
int
test
jbe
test
dec
aaa
add
ret
inc
andb
faddl
mov
xchg
clc
mov
inc
mov
xlat
das
sbb
shl
insb
ljmp
movsl
mov
sbb
les
pusha
or
sbb
push
xchg
push
fsubrl
push
ljmp
int
dec
xchg
and
lret
aad
pop
mov
outsb
inc
sti
jle
xlat
adc
ret
out
push
push
into
lods
into
test
push
mov
into
jae
cmp
sbb
cwtl
sbbb
pop
loope
sbb
push
dec
mov
sub
xor
sub
xchg
aas
mov
pop
popa
pop
lock
and
test
xchg
out
notb
call
out
pushf
inc
jmp
or
and
and
testl
popf
and
mov
lret
stos
ljmp
loop
pop
and
aam
jae
adcl
mov
fdivl
mov
movsb
or
and
fidivs
mov
out
sbb
fsts
out
ds
jne
and
cmp
in
loope
rcrl
add
ret
jmp
push
push
mov
rclb
scas
fucomi
adc
xchg
or
fmull
xchg
popa
mov
or
cwtl
fiadds
test
and
in
or
push
dec
stos
sub
sbb
sub
fwait
std
int
and
orb
orb
mov
iret
inc
ljmp
dec
rcrl
jmp
jno
jle
pop
fimull
sbb
add
mov
dec
and
mov
fucom
sub
push
stos
add
sub
or
fs
mov
mov
pop
adcl
pop
or
fadd
ds
test
lods
les
fwait
push
into
push
in
lds
addr16
out
out
or
push
mov
or
call
data16
or
js
fs
clc
movsl
out
adc
and
cmp
arpl
and
lock
sbb
add
jp
jl
xchg
lret
sbb
scas
das
mov
mov
leave
test
dec
pinsrw
cmpsb
xor
stc
xchg
jg
rclb
ss
cmp
or
popf
pusha
call
cmc
push
adc
ja
test
push
lds
and
xlat
lret
or
pop
and
xlat
xchg
cmp
sub
adc
aam
inc
je
xchg
shll
movsb
add
mov
movsb
pushf
scas
xchg
stc
mov
inc
pop
pusha
cmp
cmp
sub
out
push
cltd
fcmovne
cmp
outsb
push
out
jp
filds
inc
adc
mov
int3
stos
dec
stc
cmp
in
or
and
xor
xchg
pop
pop
xchg
mov
imul
std
sub
sbb
jg
push
pop
or
pop
in
xchg
push
fnsetpm(287
orl
in
lock
or
pop
sbbb
cld
mov
xchg
movsb
cwtl
add
jns
pop
mov
add
mov
and
sbb
dec
pushf
repz
test
shrl
aas
fwait
cmc
adc
sbb
jmp
adcl
fildl
jae
jmp
insb
inc
sti
int3
jecxz
cltd
adc
mov
mov
pop
xchg
dec
test
mov
cmc
inc
scas
sbbl
xchg
das
mov
mov
jg
mov
push
adc
sbb
in
inc
add
sub
sbb
sbb
push
xor
outsb
sbb
ja
nop
xchg
ljmp
icebp
jbe
call
jp
push
mov
out
push
out
dec
cmc
pop
rclb
inc
loop
lods
dec
cmpl
in
fdivs
popf
lock
cs
pop
pop
cmp
pop
jle
sub
sbb
arpl
sbb
cmp
lock
pop
dec
cmp
mov
sbb
imul
stos
sub
jns
xchg
push
jb
lods
add
das
imul
sbb
ljmp
iret
and
in
std
call
jp
mov
add
or
testl
lods
jo
sub
outsl
push
inc
xor
aam
and
inc
jge
and
push
fs
push
sub
mov
out
mov
or
mov
push
push
mov
jno
aas
cmp
ss
push
dec
cmpsb
mov
xchg
push
test
pop
mov
repnz
filds
push
and
cmc
jno
les
add
and
jmp
out
rolb
js
add
popa
leave
dec
repz
mov
in
iret
fnsave
sub
inc
push
pop
movsb
int3
movsl
mov
out
sbb
push
aam
or
js
pushf
repnz
pop
dec
daa
mov
test
orl
xor
xlat
sbb
and
popf
inc
lret
movsb
out
dec
sbb
mov
std
jo
sbb
dec
icebp
push
pop
fbstp
imul
enter
dec
aam
cli
loop
mov
lcall
fisubl
mov
test
inc
scas
cmp
fimuls
add
in
dec
std
xor
dec
js
repz
xchg
mov
movsl
adc
or
cmp
cld
fwait
sub
sbb
xchg
iret
xor
push
jecxz
adc
in
inc
jne
pop
or
push
adc
push
mov
loope
sub
push
fwait
dec
mov
jl
pushf
jl
jne
pop
xchg
mov
ljmp
fs
pop
mov
add
cmpb
imul
cmp
lea
xchg
mov
jle
or
xchg
pop
xchg
rorl
inc
add
and
fnstcw
popa
dec
das
mov
lods
add
mov
lret
inc
jmp
add
test
cld
pushf
push
mov
mov
push
les
jnp
push
loopne
cld
mov
mov
cld
cmc
and
test
sbb
push
jl
dec
es
jnp
fyl2xp1
pop
bound
adc
adc
or
std
jmp
push
fstpt
dec
inc
mov
dec
js
pop
es
mov
and
xor
shrl
in
lods
sbbb
or
mov
adc
sti
add
int
add
mov
adc
popf
jns
inc
cli
out
mov
aas
cmp
add
mov
fidivs
int
int
std
mov
loop
repz
xor
xor
ret
xchg
mov
mov
dec
jg
push
jle
inc
mov
test
adc
push
adc
mov
push
je
xor
mov
pop
lret
dec
int3
sbb
movsb
sbb
lods
adc
ret
or
lock
inc
mov
push
inc
test
add
addb
dec
cmp
dec
cmp
fsts
mov
sub
stc
aas
adc
cwtl
div
fdivrs
xchg
add
testb
jp
cmc
inc
outsl
cwtl
fstpl
jns
les
jecxz
sub
and
aas
mov
pop
test
or
dec
mov
imull
mulb
testb
dec
mov
lahf
rcrl
mov
mov
lcall
insb
xor
nop
sbbb
mov
mov
mov
int3
and
int
add
push
test
pop
out
insl
test
jmp
movb
popf
sbb
add
jle
movsb
or
mov
bound
stos
lcall
nop
imul
insb
push
je
jp
lcall
bound
mov
rorb
aad
adc
sbb
lahf
outsb
lret
sub
jb
pop
pop
jo
cmp
push
xchg
aaa
bswap
jno
jg
test
and
int3
adc
stos
std
xlat
idivl
mov
psrlq
mov
imul
dec
jns
test
xor
das
rorb
add
inc
rorl
xor
imul
shll
or
mov
cmc
xchg
xlat
push
inc
xcrypt-ctr
cmpsl
push
pop
mov
mov
xchg
xchg
mov
scas
icebp
std
or
out
fmull
nop
dec
and
adc
dec
sahf
shl
les
jmp
jl
pop
mov
dec
cltd
and
mov
mov
icebp
jge
push
mov
test
sub
or
outsb
andb
in
mov
mov
int3
or
cmp
xor
jg
and
add
push
jle
cmc
sub
xchg
inc
dec
jmp
fcmovne
pinsrw
fsts
fcmove
int
pop
nop
dec
sarb
arpl
cmc
lock
or
rorb
push
cmp
dec
push
loope
addr16
jo
cmpsb
push
inc
je
lcall
fld
push
jae
cmp
mov
or
stos
push
mov
orl
je
inc
mov
inc
pop
push
mov
fdivrl
in
bound
icebp
jge
and
test
cmp
and
xor
sbb
adc
pop
stos
imul
js
loop
movsl
push
mov
xchg
nop
rcl
mov
mov
mov
call
sub
in
pop
divl
adc
cwtl
add
pop
in
mov
idivl
sbb
iret
or
sbb
xchg
arpl
xchg
pushf
sbb
mov
cli
dec
enter
lcall
jns
in
fistl
push
inc
out
and
pop
mov
rcl
inc
xchg
mov
sbb
mov
cmp
pop
daa
test
dec
loop
xor
int
test
pop
loopne
cmc
nop
aad
push
or
pop
xor
add
add
or
mov
push
dec
out
inc
xchg
arpl
fildl
inc
jb
fsubrs
push
pop
ljmp
pop
dec
dec
and
pop
dec
ret
xchg
std
sub
cmp
ss
mov
out
out
lret
daa
inc
mov
outsl
test
ja
rclb
mov
lret
push
xor
jns
xor
pop
xor
stc
xlat
sar
mov
jne
push
and
loope
inc
sarl
and
imulb
fmulp
dec
mov
add
xchg
cmp
mov
aad
mov
out
pop
jae
pushl
inc
mov
pop
inc
ja
fwait
nop
mov
mov
push
jp
mov
pop
testl
hlt
rolb
xor
aam
into
mov
mov
jmp
fildl
adc
jnp
sub
jg
movsb
aas
popf
cmp
mov
cmpsb
and
fbld
mov
insl
bound
push
sbb
dec
jbe
pop
mov
aas
cmp
jmp
push
les
or
and
sbb
adc
push
insl
xor
inc
sbb
test
popf
cmpsb
or
in
sub
inc
test
cmp
adc
push
js
lret
mov
mov
arpl
dec
xchg
xor
cmp
add
and
and
jp
add
add
push
jns
mov
and
push
aad
jp
pop
add
xchg
dec
lret
not
mov
pop
mov
mov
lret
dec
cmp
int3
sbb
fcom
loopne
cmp
repnz
xchg
jo
outsl
adc
cmp
sbb
faddl
movsb
jmp
mov
jne
pushf
xchg
ficompl
aas
adc
out
pop
mov
xor
pop
mov
dec
add
dec
mov
mov
add
shl
out
sub
mov
adc
add
push
mov
cmp
push
dec
fwait
mov
fcmovbe
ljmp
iret
out
mov
xchg
dec
popf
sbb
test
mov
mov
cmp
jae
into
cmpsb
repz
data16
push
pop
mov
dec
and
fisubrs
lahf
cmpsb
mov
pcmpeqb
dec
fs
fstl
shlb
test
sbb
sbb
aaa
mov
or
jl
popf
mov
movsl
xor
sarl
hlt
test
test
xor
bound
das
xor
sbb
jmp
sti
xor
or
sub
notb
xchg
sti
enter
mov
scas
stc
add
cmpsl
and
jmp
and
mov
and
insl
mov
loope
test
enter
fs
xor
and
sbb
filds
lds
or
sub
movsb
sub
fadds
add
out
notb
dec
xor
pop
andl
test
ficompl
inc
push
add
mov
imul
sub
inc
insb
js
enter
push
adc
adc
lds
pcmpgtw
push
jg
dec
rcl
rcrb
xor
jb
shll
int
js
shll
aas
sbb
mov
popa
sbb
mov
push
inc
cmpsb
pop
push
sub
sahf
jl
iret
dec
int
repnz
xchg
fstpt
or
les
lea
pop
pop
incl
inc
xchg
cmp
jo
in
push
data16
xchg
inc
cmp
jnp
jge
xor
fs
ret
clc
subl
lahf
cmp
pop
xchg
shrl
sub
orl
xchg
adc
call
bound
lods
xor
push
jge
jmp
or
push
jmp
adc
outsl
mov
dec
cmp
std
pop
scas
xchg
pop
push
ret
xorl
movsb
mov
inc
xchg
loope
hlt
inc
jecxz
xchg
pop
fs
jle
mov
dec
fisubrl
lahf
rcrb
xor
sbb
je
mov
fldcw
mov
mov
jle
fsubrs
inc
mov
sbb
mov
addr16
push
addr16
xchg
adc
mov
imul
xor
jge
push
mov
lcall
dec
or
jae
add
jmp
xchg
lahf
scas
mov
inc
shrl
cld
shll
mov
xchg
mov
adc
adc
jg
xor
push
sbb
pop
imul
inc
rcrl
push
add
out
push
and
ljmp
pop
lahf
sbb
test
xchg
jecxz
lea
and
xor
adc
addl
icebp
fmuls
and
jne
xor
adc
cmp
movsl
fldl
adc
inc
adc
in
xchg
ljmp
pop
xchg
inc
ret
out
lods
and
jl
adc
rcl
insl
sti
pop
fucompp
stc
scas
xor
stos
loope
xor
xor
inc
pop
and
shrl
jbe
mov
or
adc
loope
adc
nop
pushf
cld
or
mov
lods
movsl
pop
mov
adc
nop
jmp
stos
popa
adc
enter
movsl
and
xchg
xchg
int3
int3
cmp
ret
or
cmc
and
cmpsb
mov
mov
pop
pop
pop
aas
mov
mov
aaa
and
xor
lret
inc
fists
mov
stc
hlt
push
data16
sbb
in
ret
jl
xchg
or
add
loope
mov
ror
movl
xor
sti
inc
jnp
cmp
sbb
adc
imul
outsl
cmpsl
push
or
sbb
mov
inc
int3
adc
jle
add
mov
insl
sahf
pop
xchg
test
rcr
pop
pop
fcmovb
mov
sbb
inc
jmp
or
ss
in
out
sub
incb
loopne
sub
inc
pop
loope
mov
xor
mov
ds
xor
mov
inc
push
xor
popa
and
test
in
cmpsl
lcall
mov
sahf
pop
hlt
bound
outsb
cmp
pop
mov
dec
mov
lret
repnz
lods
push
pop
out
insb
push
xor
mov
addr16
fmull
test
push
sbb
push
mov
inc
cmp
sti
lods
jo
add
lret
cmp
lcall
dec
test
pop
in
adc
xchg
sub
call
and
xor
adc
scas
mov
xor
dec
int3
add
push
std
std
and
sub
adc
cwtl
in
sub
in
adc
inc
jno
xchg
sub
push
outsl
pop
push
pop
cld
ljmp
jp
paddq
enter
sbb
mov
fwait
mov
fistps
jmp
add
xor
jl
xchg
addr16
inc
jbe
in
dec
jle
cmp
sub
sarb
fimull
aad
inc
sub
int
in
jb
jbe
mov
mov
push
ret
sub
out
stos
daa
cmpl
pop
hlt
jg
mulb
rclb
push
jae
xchg
repz
jae
idiv
sub
and
imul
push
sbb
adc
es
insb
test
iret
test
lcall
int
cmpsb
or
lahf
mov
push
ss
inc
repnz
add
dec
imul
or
imul
jg
xor
cmpsb
fstl
xchg
loopne
push
push
imul
hlt
and
mov
sub
sub
loopne
test
sub
jmp
pop
sbbb
loop
in
push
lret
adc
lret
cmc
stos
push
adc
add
push
std
push
push
xor
xchg
sub
pop
mov
pop
mov
mov
adc
dec
jbe
aas
xorb
stos
or
in
rcll
add
mov
xor
repnz
add
xor
movsb
test
xchg
cltd
xchg
mov
or
scas
addr16
push
enter
adc
pop
mov
daa
mov
pop
add
movsb
ja
adc
movsb
movsb
lods
rcrl
xor
xchg
lea
inc
add
xchg
and
scas
sub
jecxz
cmc
xchg
add
xchg
mov
or
jne
and
mov
sub
add
jp
jecxz
mov
pusha
or
ficoms
stc
repz
add
mov
test
jb
scas
sbb
pop
mov
push
add
notl
pop
stos
test
jbe
dec
jno
jecxz
mov
popa
jmp
add
mov
mov
cmp
xchg
cmp
inc
mov
sbb
pop
out
out
add
or
jge
lods
sub
inc
mov
adc
out
sbb
xchg
and
sub
stc
mov
ds
mov
stc
xor
jmp
sub
or
ja
idivb
dec
movsb
sub
lds
dec
arpl
lret
pop
cs
xchg
adc
xor
loope
imul
jbe
jmp
mov
insb
sub
jne
mov
push
pop
fwait
inc
dec
pushf
daa
ret
out
fwait
cmp
and
and
out
lret
fcomps
negb
jge
int3
mov
inc
int3
shll
ret
out
es
dec
in
repz
inc
repz
std
fwait
mov
fildl
inc
inc
pop
jle
xor
cmp
inc
sbb
cmp
sbbl
lret
icebp
bswap
aad
inc
neg
gs
arpl
je
or
mov
push
add
mov
test
jmp
add
orl
jp
shl
fldenv
dec
stos
jne
jbe
or
sub
ljmp
leave
cmpsb
imulb
std
fimuls
adc
and
stos
jmp
sub
orb
mov
mov
jg
push
aaa
push
mov
cli
push
jo
adc
xchg
das
inc
arpl
lods
push
and
adc
adc
mov
lock
icebp
jno
rolb
sbb
dec
dec
fwait
loope
aam
mov
xchg
das
lea
mov
cmp
ret
std
je
lds
xchg
sbb
pop
outsl
jno
out
jbe
pop
in
test
fdivp
mov
insl
test
mov
shl
sbb
jns
dec
daa
push
in
sbb
push
mov
das
sbb
cwtl
mov
push
fwait
inc
jle
pop
cmc
loopne
pop
or
cmc
xor
sub
mov
lods
mov
dec
or
sbb
sub
push
jmp
lods
sbb
call
aam
cmp
dec
and
movsb
bound
sar
dec
mov
in
jb
mov
add
stos
or
dec
ljmp
andb
fcomps
cwtl
mov
mov
mov
push
int
mov
or
xor
mov
mov
cmpb
pop
or
aas
mov
inc
jg
push
repnz
lcall
sub
push
mov
mov
pushf
into
cmp
cmp
and
cltd
sbb
pop
xor
dec
cmp
aad
dec
mov
imul
lahf
pop
inc
jo
sti
repz
adc
out
scas
dec
mov
push
and
enter
push
pop
push
jns
mov
lods
ret
ret
lcall
mov
mov
xor
lock
mov
movsl
jne
xorb
in
sbb
sbb
or
jecxz
xor
and
jg
insl
lods
adc
ret
jge
jg
sbb
sub
insb
into
test
sbb
in
stos
loope
inc
dec
loopne
sbb
rcl
jnp
dec
jo
scas
movsb
mov
call
sbb
adc
jecxz
xchg
inc
enter
nop
mov
pushl
or
lds
addl
mov
mov
lods
mov
mov
cmp
dec
rorl
pop
sub
mov
lea
mov
imul
dec
xor
sahf
lods
ficoms
mov
ret
hlt
jo
rolb
cld
or
stos
pop
inc
ret
mov
and
cwtl
or
push
stc
in
cmpsl
icebp
test
es
cmp
mov
imul
rorl
or
negl
xor
and
mov
ret
roll
in
call
and
scas
fidivl
mov
sbb
pop
adc
xor
fwait
int3
jg
in
fdivr
jno
sub
lcall
mov
lret
sbb
pop
aas
addl
jne
dec
push
xor
or
lods
js
xor
and
adc
stos
sub
addr16
mov
arpl
jo
cmp
out
xchg
pop
shlb
popf
and
xchg
pop
sahf
xor
scas
mov
inc
add
mov
dec
pop
push
icebp
sbb
cmpsb
sub
inc
je
push
pop
xorl
or
leave
sbb
fs
mov
push
sub
fcoml
insb
push
cmpsl
or
roll
mov
cmp
mov
icebp
jne
mov
dec
lahf
movsl
xchg
imul
lahf
or
cmp
pop
fmull
cmp
add
nop
les
push
inc
je
jecxz
jae
push
jne
mov
inc
and
inc
push
push
shll
sub
mov
xchg
lods
add
fnstsw
data16
push
push
inc
jmp
insl
cmpsb
mov
pop
jnp
into
add
je
insl
scas
jp
lret
cmp
or
cmpsb
mov
adc
push
fxch
mov
jle
jge
xor
clc
shlb
ljmp
xchg
mov
xchg
mov
adc
pushf
pushf
shrl
call
lods
filds
inc
cmp
dec
jo
popf
insl
cltd
sub
inc
push
xor
popf
je
dec
movsl
sbb
in
fmuls
mov
roll
stos
mov
push
mov
ret
lock
push
push
rclb
fisubrl
je
andl
pop
sbb
mov
pop
sahf
outsl
filds
enter
mov
xchg
leave
into
insb
mov
add
sub
leave
cs
sar
iret
mov
mov
sbb
fstpt
lods
pop
sbb
mov
fimull
cmpsb
xor
cmp
out
incb
sbb
fsubrl
mov
push
out
aam
lods
mov
je
andl
lods
jb
or
cmc
add
jno
push
idivb
shll
jns
repnz
mov
lahf
mov
jno
xchg
gs
jg
inc
fadd
mov
movsl
ds
or
mov
nop
clc
sti
stc
sbb
inc
jp
mov
mov
or
push
and
inc
cltd
cmc
dec
mov
int3
jp
sub
lea
outsb
push
scas
loopne
lcall
jae
inc
test
add
test
int3
pop
add
sahf
push
cmp
mov
push
sar
push
jecxz
cmp
lods
sub
out
mov
inc
cwtl
nop
out
in
sti
popf
rclb
roll
popf
sbb
jle
shlb
shl
call
nop
mov
imul
loope
out
movsb
xchg
jmp
dec
inc
stc
call
aam
jns
lods
insb
mov
mov
push
or
data16
jmp
push
add
adc
jp
call
movsb
adc
rcrl
xor
mov
orl
mov
xor
fwait
imul
cmp
iret
sbb
dec
sti
shr
jmp
dec
stos
rcl
inc
imul
pop
sbb
pop
jle
out
pop
sub
outsb
cmp
iret
iret
fcomps
jecxz
add
dec
cltd
dec
push
dec
addb
or
fildll
aam
or
or
test
test
ficomps
mov
fsubl
sub
bound
call
sub
fisttps
sahf
push
aad
and
rcll
ja
insl
stos
mov
jmp
push
push
adc
xchg
fchs
or
xchg
decl
xchg
aaa
arpl
loope
jne
add
ret
aad
mov
sub
pop
push
fnstsw
aaa
fs
mov
adc
in
cmp
mov
loope
push
jle
outsb
push
ss
sbb
mov
sub
xchg
sub
fiadds
inc
dec
inc
or
push
cs
dec
sub
cmp
inc
jle
xchg
mov
xchg
push
xchg
push
xchg
stos
mov
pop
jae
mov
sub
pushf
sub
mov
int
and
xor
rcrl
pop
or
mov
pop
fbld
out
in
lods
pop
dec
add
mov
insl
repnz
outsb
lock
inc
sub
lcall
push
out
fdivrs
mov
xor
mov
lret
test
mov
decl
xlat
push
push
imul
sahf
mov
rcrl
clc
aaa
in
clc
dec
push
cmpsb
xor
ret
cs
jl
ret
sub
adc
scas
popf
or
outsl
insb
jo
repz
push
movsl
cmc
inc
fcomi
and
push
mov
push
pop
adc
push
lahf
push
outsl
lahf
add
sar
push
ljmp
cmpsb
dec
jae
adc
call
addr16
and
pop
push
dec
sub
out
loopne
fwait
inc
cmpsl
sub
out
xchg
psubd
pop
mov
rol
mov
mov
ds
sti
icebp
lds
push
lret
or
cmp
jb
xchg
xchg
std
test
lahf
inc
fadd
push
rclb
add
scas
xchg
xchg
jmp
mov
popa
fs
lret
and
test
sbb
jecxz
inc
push
push
mov
mov
add
sbb
adc
sub
mov
call
loope
pop
and
mov
ret
mov
test
add
xchg
int
fxch
testb
pushf
xor
lods
mov
add
dec
mov
inc
unpcklps
js
or
jns
std
push
dec
inc
cs
sub
mov
sbb
fsts
xor
pop
inc
push
jne
adc
push
aaa
ret
insl
icebp
add
sub
ljmp
sbb
push
int3
in
mov
inc
lret
pop
sbb
mov
or
int3
lock
call
sahf
mov
out
mov
mov
or
test
shrb
cmp
fnstcw
mov
dec
cmp
fisttpll
imul
sbb
jno
sub
mov
fisttpll
in
int
push
adc
pop
addl
cli
mov
sub
sub
imul
mov
pop
gs
adc
les
or
mov
cltd
pop
push
hlt
inc
and
pushf
orl
das
icebp
and
jbe
cmpsl
pop
mov
pop
out
mov
psrld
and
sbb
cmp
add
ds
inc
movswl
dec
pcmpgtw
fidivl
cmp
test
in
fidivrl
cld
push
dec
sarb
test
sbb
cltd
mov
and
inc
nop
jg
icebp
adc
sub
or
jbe
xchg
outsb
ds
mov
push
xchg
enter
inc
push
icebp
jmp
int
loope
pop
pop
loopne
rolb
xor
je
in
push
sbb
mulb
les
data16
mov
jno
push
rcrl
inc
in
xchg
xchg
jl
lods
rcl
negl
lds
cmpsl
sub
int3
or
adc
movsb
popf
pop
mov
mov
enter
mov
lock
and
out
out
push
add
imul
xchg
mov
in
mov
dec
rorb
inc
stc
push
mov
mov
dec
mov
jno
cmpb
stos
nop
xchg
call
mov
iret
adc
mov
push
jno
jl
pop
sub
test
and
clc
int3
test
cmc
nop
push
or
adc
add
insl
pop
repz
jnp
lds
push
movsl
dec
stos
inc
push
bound
pop
or
mov
ret
clc
dec
fildl
leave
sub
pushf
jb
fldt
sbb
mov
add
std
lods
and
sub
bound
inc
lods
mov
push
inc
push
mov
xor
mov
dec
fisubrl
and
js
add
push
mov
sbb
mov
scas
pop
sub
sub
popa
cmpsl
es
lea
enter
sti
jb
push
ret
lahf
inc
ret
and
mov
push
push
dec
push
xor
ss
std
cmp
incb
addl
pop
mov
dec
mov
mov
cmpsl
dec
mov
dec
xchg
cmpsb
icebp
cmp
stc
and
sub
sbb
lahf
test
stos
push
mov
test
subb
nop
adc
jne
popa
ret
sarl
mov
aad
or
int3
pop
jae
jb
jns
aad
mov
and
xor
lods
pop
ss
xchg
xlat
ret
pop
jnp
sbb
fcmove
pop
mov
push
ret
hlt
add
inc
fwait
jnp
hlt
arpl
sub
inc
js
in
add
shll
ljmp
jmp
inc
add
adc
or
mov
mov
sbb
xorl
aaa
aam
arpl
and
mov
loope
xchg
mov
ja
lahf
sbbl
jge
ds
dec
cltd
in
push
or
imul
add
idivb
adc
fsubl
pop
mov
push
mov
dec
jmp
or
lock
xchg
mov
movsl
sub
push
dec
mov
cs
mov
add
bound
and
out
pop
push
mov
adc
dec
xchg
outsl
ss
fs
jl
pusha
rorl
lods
inc
push
in
mov
roll
adc
mov
cmp
push
pop
sub
scas
imul
and
fwait
out
imulb
loope
ss
mov
mov
aam
mov
jmp
ficoms
and
cmc
xor
mov
outsl
lahf
mov
mov
lds
jae
mov
iret
fwait
push
stos
jg
jle
push
sti
mov
and
jg
popl
out
data16
cmp
fbld
call
fildl
push
inc
mov
lret
jg
jno
push
mov
xchg
xor
jb
fcoms
iret
les
cltd
clc
mov
sarb
dec
fwait
lods
loope
push
jbe
add
or
ja
xor
cld
fucomp
call
ds
mov
adc
push
sub
jecxz
and
ret
stos
cltd
or
mov
mov
inc
into
daa
aam
fwait
or
xor
add
mov
cmpsb
ret
xchg
xchg
ss
xor
push
inc
cli
inc
xor
call
out
repz
mov
xchg
sbb
and
movsb
push
inc
mov
add
in
lret
lahf
sub
dec
hlt
cmc
jmp
imul
jb
xor
jl
ret
fnstcw
pop
push
rol
cmp
xor
fisubl
cld
data16
mov
in
dec
cmp
stos
movsl
and
notl
jmp
fimuls
adc
or
push
pop
jle
fnstenv
packsswb
js
repz
pop
cmp
rcl
movsb
pop
jo
or
sub
mov
data16
jle
jmp
ret
in
push
mov
addr16
sbb
test
adc
cltd
pop
jne
bound
das
imul
outsl
aam
push
push
in
in
lock
lea
mov
movsb
sti
aam
test
push
out
push
xchg
jl
test
sbb
aaa
adc
mov
add
sub
pushf
dec
sbb
inc
stos
push
test
mov
dec
icebp
sti
inc
fs
pop
dec
lahf
xor
lock
adc
jnp
sub
cwtl
sbb
ret
and
lds
mov
js
rorl
out
scas
test
outsb
mov
inc
sbb
pop
clc
sbb
je
sbb
daa
inc
cld
mov
dec
adc
out
shrl
es
inc
pop
and
xchg
adc
test
xchg
mov
push
mov
jns
ret
pop
mov
mov
fsubr
std
pop
bound
cmp
push
flds
loope
dec
in
mov
cmp
imul
mov
repnz
dec
jno
xchg
adcl
jns
jne
fnstcw
adc
push
in
xor
repz
cwtl
es
pop
aam
loope
ljmp
lret
jge
sub
pop
cmp
or
je
mov
out
xor
dec
xchg
add
adc
push
mov
stos
sub
addr16
jl
into
adc
aas
dec
xlat
cld
sahf
pop
lret
push
out
and
lea
ss
mov
pop
mov
aas
movsb
outsl
dec
add
jnp
mov
dec
int3
movsb
in
cmp
jg
adc
mov
push
add
dec
push
sbb
dec
push
and
shlb
int3
popf
aas
mov
sbb
add
jmp
lods
jbe
dec
icebp
lea
lds
clc
lahf
gs
ss
sti
pop
push
adc
jg
jg
xchg
jo
mov
ds
rcll
stos
mov
mov
push
je
push
pop
mov
test
jnp
and
and
rcl
jnp
pop
pop
cmp
push
scas
fisttps
pop
add
iret
std
dec
xchg
scas
cmc
and
iret
dec
inc
repnz
jle
add
push
js
icebp
inc
insb
hlt
jl
bound
add
add
cs
dec
xorb
icebp
mov
mov
add
cmovg
pop
jle
jmp
xchg
jmp
pop
sub
rcr
add
pop
or
push
scas
aad
xchg
fs
cs
mov
imul
iret
andb
or
cmp
inc
cmp
pop
jecxz
dec
sbb
pushf
lcall
pushf
dec
push
ljmp
fldenv
push
lods
add
bound
icebp
gs
pop
pop
or
lods
std
jmp
scas
rcrl
cmpsb
xchg
jae
aaa
aas
lods
mov
mov
mov
sub
cmp
ret
rcr
icebp
adc
mov
movsl
add
pop
popa
nop
mov
dec
ficomps
cmp
into
pop
adc
pop
loopne
shll
mov
jno
xorb
leave
mov
inc
fldcw
xchg
shrl
pop
add
icebp
pop
jnp
icebp
scas
xor
lret
movd
xchg
cli
jnp
inc
out
jmp
dec
ret
std
and
jne
daa
cmp
dec
mov
aas
push
mov
insl
std
sbb
movsl
xor
mov
into
mov
jb
pop
inc
mov
pop
rclb
sub
out
pop
ret
add
repnz
sub
hlt
adc
iret
mov
mov
std
fadds
stc
mov
push
mov
testb
jmp
rorb
xchg
or
cmp
pop
fstl
dec
cmp
inc
mov
or
sub
and
push
dec
pop
sub
gs
cmp
sbb
push
mov
adc
dec
push
je
sub
psrad
pop
sbb
pop
clc
jl
mov
into
xor
lods
push
jl
lret
cmp
jle
inc
sarb
push
cmc
or
popa
xor
mov
xor
inc
loopne
mov
test
or
jl
sub
addr16
decl
sbb
dec
outsb
sahf
jecxz
test
rorl
fnstcw
jns
sbb
scas
mov
pop
push
movsl
mov
je
fdivrl
push
or
inc
sti
outsb
sub
sbb
shll
mov
mov
sub
or
clc
jbe
rorl
sbb
ds
xorb
sbb
mov
pop
ds
pop
rcll
inc
clc
call
lret
cmp
sbb
outsb
push
xchg
add
mov
add
loop
ds
mov
or
mov
stc
pop
mov
dec
movb
out
ss
fwait
sbb
push
mov
adcl
mov
outsl
repnz
aas
jge
lcall
sub
std
adc
mov
imul
pop
sbb
and
push
jge
testb
ja
test
outsb
iret
jns
cmp
sahf
imul
mov
xor
pop
mov
pop
ja
cwtl
or
push
add
lock
cmp
push
je
ret
adc
std
mov
es
adc
in
or
repz
cltd
pop
je
mov
sbb
cmpsl
and
xor
aad
sbb
std
ret
push
adc
push
jno
inc
cmp
fldcw
mov
insb
jecxz
in
mov
xchg
je
loop
jp
aam
js
int3
pop
nop
out
aas
in
fpatan
xchg
mov
adc
and
xchg
jg
gs
pop
dec
or
mov
mov
scas
mov
les
mov
push
cmp
inc
ss
inc
fldenv
sbb
dec
int3
pop
xor
popf
pop
fcoms
or
iret
pop
lcall
dec
mov
scas
jno
fstpt
push
pop
ret
imul
push
and
dec
cmp
pop
dec
push
fistl
xor
pop
mov
add
xorb
or
int3
dec
pusha
add
test
xchg
push
sub
mov
stos
mov
adc
push
aaa
xor
fisttpll
in
xor
mov
mov
pop
neg
gs
xchg
and
jecxz
add
cmp
loope
sti
dec
pop
mov
clc
cmpsl
clc
and
sarl
cmp
dec
dec
fmuls
rolb
sub
mov
pop
sub
loop
mov
inc
adc
add
shrb
add
xlat
add
daa
ja
fisubs
mov
rorb
jo
mov
std
adc
adc
pop
psubusw
pusha
jo
sub
mov
fistpll
rcrb
jns
rclb
daa
pop
inc
push
push
icebp
push
daa
cmp
jecxz,pt
jge
cli
fiadds
sbb
adc
jg
fcmovu
lahf
pop
mov
sub
jb
or
jb
lret
jmp
jbe
cmp
push
popl
jbe
sti
add
loop
mov
mov
add
lds
xlat
cli
insb
addl
adc
pushf
mov
mov
adc
add
loope
into
cmp
xor
popf
push
cmp
scas
mov
repnz
ds
mov
inc
sbb
ja
inc
sbb
mov
mov
xor
push
std
cmp
cs
mov
jle
pop
data16
inc
popf
mov
fnsave
or
sbb
mov
out
cli
fcoml
sbb
int3
lret
jnp
les
lcall
ret
mov
stos
jmp
dec
xchg
pop
sbb
test
xchg
sub
not
pop
adcb
ret
cmp
fistps
xchg
or
and
xor
dec
dec
aas
outsb
dec
adcl
mov
ljmp
aam
adc
jg
dec
xchg
jns
ret
pop
inc
pop
ret
sub
cmp
idivl
test
shl
shl
and
mov
mov
cmpsl
mov
mov
mov
inc
lret
cmc
dec
es
xchg
fxch
adc
add
xor
jo
movsb
insb
jecxz
sahf
and
mov
adc
and
inc
jecxz
push
dec
add
popa
gs
dec
mov
xchg
iret
push
out
sbb
fstl
loop
lahf
test
fnsave
xchg
es
jne
mov
sahf
push
imulb
mov
lods
jb
rolb
push
jbe
mov
xchg
xor
inc
lret
xchg
push
push
or
jg
and
or
inc
push
pop
mov
aaa
or
dec
xor
or
cmp
pop
dec
sub
push
iret
xchg
add
mov
cli
xor
cmp
inc
mov
cmp
imul
jno
or
mov
push
push
into
or
adc
lret
push
cwtl
scas
inc
mov
rolb
jbe
xlat
sub
imul
out
repnz
neg
cmpsl
repnz
jmp
push
std
lcall
xchg
ds
sub
addl
xchg
mov
lds
in
test
pop
repnz
mov
jne
nop
xor
stos
pop
cmp
mov
fidivs
ret
xlat
insl
imul
or
adc
add
cwtl
inc
clc
out
popa
cwtl
add
popa
testb
outsb
mov
pushf
push
mov
ja
fisttpl
mov
outsl
or
jecxz
les
test
cmp
scas
adc
mov
cmpsl
pop
dec
cmpb
sbb
addr16
fldenv
in
mov
test
push
int3
push
int
je
imul
loope
jbe
or
testl
pushf
xchg
mov
and
cmp
xchg
cmpl
mov
and
jmp
das
mov
inc
cmp
push
enter
shl
mov
mov
ljmp
ret
jae
pop
sbb
lretw
xchg
pop
push
push
mov
cs
or
xor
xor
mov
sbb
test
addr16
cmp
loope
pop
mov
popa
sbb
or
je
dec
mov
jne
adc
push
cmpsb
sub
pusha
xchg
jnp
pop
andl
cwtl
call
aaa
cmpsl
out
jmp
jno
popa
addb
stos
jle
daa
mov
mov
xor
add
sub
and
sub
jae
cmc
imul
jo
lahf
mov
es
insl
push
inc
fsubr
fimull
jg
inc
cwtl
add
movsl
xchg
mov
cmpsb
and
aam
add
enter
in
mov
dec
sahf
call
dec
and
mov
movsl
in
and
jp
push
insl
push
sbb
xchg
sarl
das
fldl
pop
adc
sti
inc
insb
mov
paddsb
mov
lods
cltd
push
pop
mov
jp
daa
data16
int
mov
jecxz
inc
mov
lds
sbb
cltd
and
pop
adc
fsubrl
dec
js
push
xlat
mov
and
lods
mov
je
cmp
xchg
push
jbe
sub
inc
sub
les
sti
int
jno
mov
jae
inc
call
cmc
mov
push
inc
movsl
inc
pop
xchg
rcl
int
inc
mov
xchg
pushf
push
jecxz
jo
add
inc
xchg
jnp
jp
outsb
xor
ret
sub
cmp
lods
fistpll
enter
adc
jne
pop
sub
rolb
cli
sbb
cmp
jne
nop
sub
rorl
adc
inc
and
iret
push
jge
push
dec
xchg
dec
mov
rorb
in
imul
xchg
sbb
shrl
sub
scas
jb
sbb
mov
push
mov
ret
add
fs
inc
mov
push
insb
push
mov
loop
int3
mov
je
in
push
sbb
fidivrl
mov
lahf
or
mov
fistps
stc
adc
dec
pop
push
ficoml
out
sbb
push
push
xlat
xor
and
xor
inc
sbb
pop
inc
mov
test
and
mov
dec
add
inc
pusha
mov
fs
sbb
inc
ret
adc
cmpsl
add
inc
scas
out
mov
xor
mov
in
in
adc
repz
push
std
add
cmp
jge
sar
cmp
lock
nop
lcall
jae
mov
insb
in
cmp
push
hlt
insl
out
leave
and
dec
cmp
pop
test
fwait
push
xchg
and
sbb
rcrb
cmp
push
push
push
inc
scas
aas
in
jno
aam
add
or
cwtl
dec
mov
push
or
xchg
sahf
xchg
lds
in
aas
out
bound
loopne
bnd
jp
ret
add
jmp
cmp
xor
mov
cmp
stos
add
inc
nop
stos
filds
xchg
sub
mov
pop
jns
and
mov
push
fimuls
lea
addr16
arpl
jae
sub
mov
xchg
ret
pushf
imul
pop
repz
push
pop
jl
out
std
xor
xchg
mov
mov
and
pop
test
jp
cmpsl
scas
mov
add
mov
outsb
push
push
adc
hlt
sti
shl
mov
pop
xchg
das
mov
es
xor
aas
sub
idiv
fstps
lret
daa
mov
outsb
hlt
test
push
in
stc
push
xor
repz
inc
cld
sbb
in
jl
mov
cmp
jp
ds
adc
push
popa
cmp
sbb
dec
pop
les
dec
data16
sti
lods
cmp
repz
scas
fwait
push
add
lahf
push
jp
call
and
mov
jb
insl
lret
movsl
push
fildll
leave
negl
cmp
pushf
arpl
data16
add
into
call
insb
inc
outsb
lods
std
mov
jne
inc
jo
out
mov
fwait
or
adc
sbb
inc
rorb
add
lret
mov
sbb
lods
jle
push
adc
sahf
fsubrs
in
dec
in
push
sub
adc
shl
loop
scas
xchg
dec
adc
cmp
xchg
nop
mov
jmp
adc
das
jge
stos
pop
adc
stc
xchg
mov
sbb
flds
mov
sarl
int
inc
add
loope
loope
pop
insl
inc
pop
mov
cltd
and
and
ss
cmp
xchg
or
mov
mov
aad
mull
push
push
pop
push
mov
fwait
gs
pusha
sbb
fisttps
lret
mov
pop
jae
jb
push
rorb
sub
push
pop
addb
mov
dec
sbb
push
notb
jg
lock
aas
enter
movsl
shrl
xchg
in
cmp
cwtl
push
ret
mov
mov
scas
fists
aam
inc
sub
scas
mov
and
shll
dec
fstl
in
push
or
or
and
or
in
out
fs
adc
push
outsb
test
cs
divb
imull
mov
out
aaa
inc
cmp
sti
push
shrl
mov
lods
xor
xchg
std
inc
sbb
int3
add
pop
aas
pop
dec
int
testl
mov
out
dec
jno
xlat
cwtl
mov
xchg
jb
imul
jbe
fs
jp
jl
mov
int3
movsl
adc
jno
push
xor
xlat
insl
xchg
and
cli
enter
xchg
dec
lahf
or
fwait
rclb
fmul
adc
lahf
xorl
enter
fisubl
cmc
jmp
sub
add
xchg
imul
aaa
cli
pop
call
iret
out
fcmovne
sbb
sub
popf
repz
cmp
xchg
jecxz
xor
and
cmpsb
hlt
sti
push
sbb
frstor
push
xor
mov
btc
jg
jno
adc
subb
mov
repnz
xchg
jp
mov
sbb
push
push
inc
or
cmp
pop
imul
or
arpl
push
push
cmp
add
std
dec
stos
dec
inc
sub
add
cli
push
jg
sbb
mov
push
dec
fsubrl
into
mov
sbbl
sti
push
or
call
mov
stos
push
idivb
mov
cltd
cmp
cmp
jb
int3
lahf
mov
mov
xor
bound
int
push
jl
andl
jbe
dec
xor
iret
xor
fdivrs
and
or
lahf
lock
mov
out
adc
insb
clc
and
pop
adc
jp
cwtl
dec
inc
out
rorl
push
into
aaa
loop
hlt
sbb
jae
outsb
mov
bound
push
ss
pop
iret
pop
rcrb
mov
jno
push
imul
mov
out
xor
or
and
add
pushf
or
mov
mov
aaa
sub
adc
insb
dec
fs
xchg
push
pop
xchg
sarb
push
lret
flds
sahf
push
pop
sbbb
xlat
shlb
mov
jge
push
popf
scas
mov
sbbl
inc
mov
imul
fsubrp
imul
and
adc
and
jecxz
dec
inc
mov
jae
stos
popf
fbld
stos
in
mov
and
lahf
pop
jbe
lods
enter
adc
hlt
sub
pusha
adcl
pop
push
add
cmp
xor
push
testl
hlt
mov
add
cmp
ds
dec
cmp
out
xor
pushf
shlb
in
pop
dec
idivl
dec
loopne
dec
mov
imul
inc
add
subb
aaa
test
mov
mov
xor
outsb
cmp
inc
mov
shrb
cs
loop
das
je
xchg
push
adc
cmp
cld
inc
push
inc
push
xchg
sarl
leave
icebp
ljmp
out
add
and
inc
fs
clc
nop
inc
in
iret
test
dec
jno
xchg
dec
push
xchg
inc
lret
or
adc
mov
andb
and
dec
and
inc
outsl
inc
xlat
inc
int
jmp
movsb
sarl
lods
dec
in
inc
add
das
mov
mov
jge
mov
leave
fadd
lods
xor
mov
sbb
add
out
jns
xchg
mov
or
xlat
es
lret
xlat
xor
xor
ss
mov
popa
xchg
or
lods
call
pop
cmpb
test
inc
mov
aam
push
cmp
xchg
cmp
mov
cmpsb
cmpsb
fldt
mov
arpl
lock
and
daa
push
xchg
jmp
dec
ss
jb
cwtl
leave
mov
sub
mov
xchg
mov
sbb
out
adc
jb
pop
repnz
push
imul
enter
into
push
test
into
jo
in
data16
mov
mov
mov
in
subb
icebp
xor
or
cmpsb
jecxz
push
into
data16
out
mov
popa
clc
lods
imul
inc
sbb
sahf
pop
lock
push
cmc
in
push
into
dec
adc
push
shrl
xchg
lret
loop
pop
jo
add
cs
jne
push
sbb
xchg
xor
sarl
in
into
jl
insb
negb
dec
rclb
movsl
rcll
mov
and
ret
push
ficomps
mov
pusha
xorb
inc
jbe
std
sbb
cltd
cs
dec
add
jb
inc
mov
mov
add
hlt
repz
mov
lcall
adc
into
lahf
inc
xchg
test
or
pop
dec
fwait
dec
xchg
inc
sbb
cmp
lods
inc
push
mov
mov
jmp
gs
jge
jns
insl
adc
jg
and
add
lret
loopne
les
ja
sahf
hlt
lret
push
scas
mov
addr16
sbb
leave
stc
gs
enter
out
xor
insl
pop
adc
mov
pop
mov
push
hlt
mov
test
sbb
shlb
jg
add
add
pop
mov
xor
imul
fiadds
sahf
inc
push
xor
inc
outsl
jl
movsl
xchg
push
ret
mov
push
out
dec
test
jae
add
push
and
dec
notb
es
adc
and
sbb
fwait
add
push
ret
aam
xchg
in
mov
sti
lods
in
andb
jnp
clc
addr16
jae
adc
xchg
push
pop
xor
dec
pop
outsb
mov
xor
or
cmp
ret
inc
mov
inc
inc
inc
popf
add
jmp
cmpsb
add
mov
popa
in
out
push
mov
lret
mov
add
popf
testl
sub
and
dec
sub
or
enter
cmp
aas
mov
sti
dec
push
xchg
out
push
data16
mov
add
jb
xlat
cmp
ljmp
out
test
push
pop
push
mov
test
inc
mov
loope
mov
push
xchg
lret
sbb
leave
inc
mov
mov
in
lock
push
mov
jns
mov
xchg
xchg
aam
pop
jmp
insb
push
or
xchg
mov
sbbb
test
lds
frndint
pop
mov
call
sub
mov
add
dec
incl
xor
mov
jae
pop
pusha
stc
lea
and
add
lea
imul
dec
icebp
or
cmpb
push
pop
xchg
pop
sbb
out
jo
jg
inc
imul
test
js
and
das
enter
inc
xor
push
push
xchg
inc
into
pusha
je
adc
les
pop
scas
test
pusha
xchg
adc
pop
popa
push
xchg
daa
or
lahf
lods
mov
fstsw
out
adc
pop
mov
xchg
aam
adc
push
push
pop
ja
dec
outsb
mov
adc
push
jnp
aam
mov
movsb
xchg
mov
jne
outsb
or
lahf
nop
ljmp
cmpsb
roll
loop
test
into
test
sub
pop
divb
insl
out
xor
pop
sar
jg
les
dec
jnp,pt
push
test
sarl
mulb
mov
xlat
lods
loopne
test
push
xchg
inc
cmp
and
lods
mov
cltd
sti
aaa
mov
call
push
push
xor
loope
loope
call
jle
and
fcomps
inc
push
jmp
pop
loope
cmp
cmp
popa
incb
insl
data16
xchg
testb
jo
es
pusha
daa
pop
test
ds
xor
jg
jbe
mov
jns
push
gs
mov
push
cmpsl
push
mov
fidivrs
int
repz
cmp
lods
push
pop
leave
es
mov
lret
cmpsb
outsl
ja
jg
aaa
and
mov
shrl
out
mov
cmc
xchg
mov
cmpsl
and
jbe
inc
mov
loop
lock
adc
fmul
hlt
adcb
mov
mov
pop
pop
enter
dec
ret
fmull
in
ds
jne
jae
adc
arpl
scas
jns
lock
loopne
mov
arpl
mov
inc
bound
push
ret
stos
xchg
mov
fiadds
stc
lds
ja
int3
ss
or
repnz
fnstenv
sbb
pop
es
test
adc
aam
into
jae
cmp
jns
into
pop
pop
mov
popf
popa
or
cli
push
notl
sub
les
or
pop
or
cltd
push
add
ljmp
push
out
aam
add
std
and
clc
sar
xchg
cmp
mov
jl
in
mov
and
and
push
mov
xchg
pusha
mov
xchg
loopne
test
nop
mov
cmp
lock
in
test
push
je
mov
sbb
sbb
bound
jge
mov
jbe
bound
jp
test
sbb
or
arpl
sbb
adc
outsl
mov
xchg
arpl
xchg
add
cltd
xchg
mov
lret
aam
cs
in
pop
xchg
orb
pop
jecxz
xchg
or
iret
mov
enter
add
jb
mov
xchg
lahf
fcompl
bound
sarl
pop
repz
push
xor
jae
mov
repnz
push
in
xchg
push
or
or
mov
sub
or
dec
sti
pop
nop
or
xor
in
mov
insl
stos
push
xor
jbe
outsb
lahf
jge
int3
cmpsb
addr16
pop
gs
cmpsl
xchg
nop
fistl
inc
sub
lea
adc
cli
outsl
scas
fstl
push
stc
leave
out
sarb
scas
jg
dec
xchg
popf
into
add
icebp
sbb
xchg
mov
fisubl
xor
stc
xchg
add
fwait
pop
lretw
into
mov
cli
andb
jns
in
roll
ficoms
dec
mov
cmp
push
xchg
cltd
xchg
js
adc
ret
fs
arpl
fyl2x
jnp
jne
and
call
loope
and
or
pop
dec
pop
cmpsl
mov
xchg
icebp
lock
jno
sbb
jle
movsl
xchg
mov
cmp
push
je
jne
bnd
int3
sub
arpl
pusha
sahf
xor
jne
mov
sub
mov
clc
stc
add
loope
addr16
mov
push
fwait
stc
push
ret
sub
lret
sub
adc
push
inc
stos
cli
add
imul
lret
cmp
fs
addl
add
int
jecxz
fwait
add
add
cmpsb
and
pop
xchg
iret
cwtl
add
adc
sub
mov
addb
mov
fcoms
add
mov
cmp
jg
incb
pop
out
dec
xchg
rorb
testl
test
lret
test
pop
stos
pop
adc
in
jne
xor
add
and
shl
stos
jnp
cmp
imull
aam
sbb
punpckhbw
dec
xor
cmp
repnz
lret
mov
scas
arpl
leave
popf
shlb
ja
repz
dec
icebp
sti
insl
inc
mov
mov
xchg
pop
cld
std
mov
cmp
push
pop
jae
sbb
inc
xlat
shlb
rcrl
sarb
inc
shll
mov
mov
cmp
sub
dec
push
pusha
mov
sbb
and
popa
jbe
push
jl
fistps
add
adc
jbe
arpl
jne
and
mov
sub
add
or
jl
subl
idivl
jp
xchg
mov
fwait
or
stos
mov
fstl
bound
stos
movsl
mov
dec
inc
add
and
lea
into
xor
out
out
fiadds
add
jle
rcr
jne
sti
adc
scas
xlat
stc
bound
insb
xor
lods
cld
fmuls
dec
mov
jge
dec
inc
lret
call
fwait
push
add
int
mov
lcall
fidivrs
int3
aad
popa
loopne
xchg
mov
dec
fistl
dec
push
je
shrb
bnd
add
scas
imul
and
adc
xchg
pop
fwait
inc
imull
lret
push
push
xchg
mov
imul
pop
mov
insl
outsl
adc
imull
sbb
or
movsl
adc
sbb
lods
outsb
mov
cmpsb
rcl
xor
int3
aam
push
cmp
ja
pusha
mov
filds
sub
dec
sbb
scas
jmp
or
and
adc
icebp
call
mov
mov
inc
xor
adc
lret
or
dec
push
mov
mulb
pop
icebp
pop
enter
add
in
ss
pop
pop
addr16
pop
es
mov
inc
cmp
into
push
push
sti
repz
loope
lcall
outsl
push
std
mov
movsb
xchg
xor
jae
xor
roll
xorb
cmc
push
xchg
cmp
lea
xor
and
inc
sbb
push
dec
inc
aaa
mov
add
or
sbb
jno
out
movsl
je
in
outsl
inc
clc
sbb
and
ja
inc
test
pop
pop
in
addr16
movsb
leave
dec
cmc
inc
and
mov
and
in
insl
and
es
add
fstps
je
sahf
cmp
jmp
push
mov
filds
adc
push
das
sahf
icebp
out
testb
cmp
dec
arpl
dec
pop
loope
dec
push
xor
pop
jnp
mov
mov
xchg
aaa
and
int
ds
jno
loop
test
xor
arpl
rcll
mov
mov
lds
and
fisubs
es
or
notl
and
adc
dec
pop
ja
sbb
loop
enter
movl
inc
enter
and
aas
mov
cs
add
or
push
shrb
pop
insb
jge
lahf
lods
xchg
ficoml
test
test
sahf
mov
or
xor
aaa
in
lret
mov
pop
jnp
cmp
sahf
push
ret
rol
mov
aad
std
shrl
gs
lahf
data16
adc
sti
jmp
mov
test
add
add
mov
lods
ror
mov
cmp
jne
cli
fsubl
inc
xchg
add
dec
mov
add
mov
xor
xchg
insl
mov
sbb
pushf
fs
xchg
push
sbb
or
dec
xor
sbb
xor
jne
movsl
into
in
mov
xchg
sbbb
pop
es
into
xchg
ss
and
dec
adc
sub
cmp
and
cltd
sub
mov
in
int3
movsl
add
cmp
xchg
fstpt
add
jo
adc
push
es
aad
dec
pushf
std
in
in
outsb
xchg
xchg
pop
test
inc
mov
mov
pop
gs
jbe
dec
lock
cmp
pop
sub
outsb
test
fists
repnz
jl
mov
out
cmc
inc
mov
in
outsl
int
pop
filds
mov
pop
and
shlb
lret
test
das
test
jbe
push
pop
pop
cmp
xchg
ljmp
addl
jg
mov
mov
inc
lds
clc
shr
bound
mov
inc
addr16
mov
out
jmp
adcb
jg
loope
jo
sti
ja
pop
addb
xor
xchg
jne
rcrl
xor
repz
sahf
mov
xchg
loope
sub
jbe
testl
int
or
jb
test
addr16
xchg
rclb
mov
loope
out
outsb
add
out
mov
div
xor
ficompl
pop
push
add
xchg
icebp
jbe
inc
movsl
mov
call
idiv
cwtl
xchg
ret
sub
vzeroupper
xchg
bound
and
push
xchg
mov
mov
push
jge
enter
or
inc
xchg
jne
mov
jp
and
insb
aam
jge
push
aaa
je
sti
pop
mov
sbb
pop
cld
sub
or
cld
xchg
rcl
dec
inc
cmp
hlt
sbb
inc
pop
aam
sub
repz
push
jbe
cmc
inc
adc
lods
stc
xor
jb
adc
inc
sti
inc
outsl
enter
cmpsl
push
dec
fidivl
mov
loopne
inc
xchg
insb
cltd
mov
fstpt
add
sub
jno
sub
gs
xor
xor
int
dec
dec
adc
fidivrs
xchg
inc
sub
mov
decb
mov
lds
stos
mov
dec
pop
outsl
rolb
loope
adcl
das
mov
mov
clc
inc
cmpsl
xchg
inc
xorl
mov
lahf
lock
pop
mov
in
out
push
in
movsl
cmp
mov
push
daa
loop
mov
jbe
scas
bound
in
dec
xlat
sbb
mov
aad
fsubrs
xchg
inc
pop
ficoml
int
test
das
mov
inc
pusha
notb
sub
dec
fstps
sahf
xchg
xlat
mov
sbb
shll
testl
movsb
xchg
mov
sub
pop
leave
in
rolb
or
fadds
loope
pop
mov
xlat
cmp
or
and
pop
fcomps
data16
out
out
scas
addr16
rorb
loope
cli
ja
cmp
push
jae
out
scas
std
xor
xor
push
mov
mov
das
push
out
int
mov
fsts
adc
cld
xchg
jb
sub
notb
scas
and
cmp
mov
idivb
orl
jno
addl
ja
aas
sbb
lahf
jmp
fs
loopne
inc
aas
pop
push
pop
fidivrs
push
shlb
mov
xchg
std
cli
nop
movsl
xchg
ret
jno
sbb
push
loop
shll
mov
mov
pushf
and
insb
rcrl
dec
push
sub
inc
imul
faddl
out
pop
add
dec
aas
gs
pop
cmp
int
lds
or
test
iret
pop
fwait
mov
cmpsb
mov
out
mov
add
scas
jle
mov
jmp
pop
jl
test
cmp
mov
cmp
pop
jo
and
dec
sbb
ss
inc
inc
adc
add
imul
imul
outsb
in
fimull
fmul
mov
inc
xchg
loopne
push
test
cmp
lret
fstps
mov
cwtl
cmpsb
cmp
dec
icebp
jge
in
push
mov
and
xchg
jbe
fs
xchg
jb
out
pusha
jle
jne
or
inc
cmpsb
mov
into
mov
les
sub
xor
sub
pop
fs
lock
push
in
xchg
test
ja
push
out
insl
mov
sub
aaa
jl
fdivr
stos
in
inc
jg
xor
das
in
cmp
cmp
mov
dec
sti
lcall
or
rcrl
or
ljmp
or
orb
psrlq
xchg
shrl
dec
pop
add
pusha
mov
test
scas
and
rorl
dec
inc
into
lea
sbb
lret
cltd
or
jnp
jl
loope
jbe
in
test
adcb
mov
xor
push
mov
shrl
xchg
lds
xor
clc
mov
mulb
loopne
addr16
adc
sub
fmull
add
lahf
inc
inc
in
arpl
inc
stos
fmuls
imul
repnz
test
mov
fimull
test
jle
out
and
mov
lea
dec
outsl
int3
and
pop
sbb
mov
jns
push
or
and
xor
or
xchg
lret
lret
mov
pop
mov
pop
dec
jecxz
pop
rcrb
sbb
push
stc
jbe
rcl
nop
jnp
das
mov
aas
xchg
lcall
mov
scas
cs
repnz
xor
inc
fsubrl
mov
jb
js
ret
aaa
roll
int
xor
sbb
clc
mull
lret
mov
pop
lret
scas
les
xchg
test
test
xor
add
adc
nop
xlat
cmp
sbb
mov
pop
lods
sbb
lock
repz
jne
cmp
daa
jnp
idiv
jns
lea
adc
movsl
pop
mov
movsb
shlb
ja
xor
dec
push
cmp
ret
test
or
jecxz
loope
testl
inc
push
push
popf
lods
stc
bswap
lds
into
mov
xor
test
inc
cmp
xor
and
inc
lret
cmp
xchg
fdivrp
addl
add
xchg
or
and
mov
xchg
and
insl
and
dec
jg
adc
aaa
sub
dec
inc
inc
jmp
mov
repnz
inc
mov
mov
jmp
or
mov
leave
or
repz
test
dec
mov
cwtl
fs
mov
mov
mov
in
out
push
jp
jnp
aas
ficompl
cmp
in
cmp
fsubs
repnz
jbe
rcrb
mov
cltd
jmp
add
lahf
inc
mov
or
adc
adc
mov
int3
add
jnp
mov
cmpsb
lea
or
xor
pop
jmp
cmp
lea
outsb
xchg
rcrb
enter
iret
popf
dec
sub
lock
jmp
or
jae
jb
cmp
or
stos
scas
int
xor
jae
jns
insl
stos
mov
push
push
lods
outsb
imul
pop
mov
inc
lret
push
clc
cmpsl
adcl
int3
out
xchg
fcmovnb
pop
xlat
movsb
pop
mov
pop
or
sub
mov
and
and
inc
test
adc
pop
sub
jge
shrl
lods
adc
fs
lea
or
mov
dec
lods
in
test
flds
jp
sub
imul
into
jno
or
sbb
cwtl
fcoms
outsb
mov
lret
mov
jne
mov
pop
gs
pop
inc
cmpsl
xor
or
push
jae
jecxz
mov
mov
add
and
xor
fwait
pop
fistpl
xchg
sub
jns
mov
stos
aad
mov
mov
out
push
fdivs
cmc
and
mov
mov
jl
lock
outsb
jne
xor
push
push
inc
popf
mov
shll
and
dec
sub
inc
inc
mov
sub
dec
pop
pop
dec
dec
xchg
pop
xor
lods
lods
pop
imull
sbb
xor
loopne
push
mov
xchg
xchg
fcmovnb
inc
mov
faddl
stos
push
aad
cmp
and
js
pusha
pushf
xchg
sbb
pop
sub
roll
out
in
dec
xor
mov
cmp
inc
sbb
lock
or
or
mov
xchg
add
sub
push
inc
test
adc
in
and
pop
stc
pop
push
mov
popf
xchg
mov
cmp
xchg
sbb
and
dec
adc
lcall
adc
into
nop
std
std
imul
adc
stos
sahf
pop
adc
ss
les
repnz
xchg
dec
into
insb
inc
mov
rclb
add
sti
xchg
sub
push
mov
and
inc
into
out
push
ret
pop
sbb
add
mov
inc
mov
test
xchg
lret
mov
aaa
dec
mov
daa
xchg
enter
nop
push
bnd
sar
or
pop
fwait
loopne
repnz
shll
ret
aas
jge
xchg
jnp
std
outsl
sbb
xlat
jmp
jecxz
pusha
mov
cwtl
ss
mov
imul
cld
shrb
cmpsb
cmp
xor
addr16
mov
pop
nop
stos
pop
cltd
lret
xchg
mov
call
pop
jbe
jb
cmp
mov
ss
push
cli
and
pop
and
aaa
and
mov
fwait
push
push
addr16
inc
hlt
lock
jno
sarl
dec
sub
repnz
xchg
nop
and
jb
pop
inc
dec
inc
hlt
or
jge
loop
call
aad
in
mov
mov
jge
cmpsb
sbb
inc
lret
mov
sub
or
mov
mov
popf
mov
mov
icebp
call
adc
xchg
in
cmp
xchg
dec
push
stc
std
fwait
outsl
sub
lods
jmp
jns
adc
ds
bound
mov
idivl
cmc
dec
outsl
popf
std
xor
pusha
push
imul
mov
xor
lahf
xchg
adc
dec
jl
xchg
ljmp
mov
dec
gs
jno
add
push
mov
pop
ljmp
push
push
jno
gs
imul
mov
push
xchg
int
hlt
repnz
shll
pop
and
testl
lock
adc
jns
into
inc
popa
jae
jbe
mov
dec
adcb
roll
test
xor
or
stos
jnp
movsl
js
cmp
add
or
jl
icebp
fcoml
scas
pop
or
bound
xor
pop
out
mov
imul
inc
aad
js
stc
xlat
sbb
and
mov
inc
or
mov
aad
sbb
pop
decb
push
ret
pusha
or
ljmp
push
jne
push
mov
push
cmc
mov
cli
adcl
adcb
add
adc
or
xchg
adcl
lea
in
xchg
push
pop
sbb
sbb
cmp
leave
in
out
popa
mov
mov
jo
nop
adc
xor
mov
loopne
sub
push
insl
mov
xchg
test
aaa
pop
movsl
insb
xor
pop
in
adc
push
mov
in
add
aam
sub
sub
add
cmpsb
roll
pop
pop
mov
mov
stc
jnp
adc
dec
loopne
add
les
jmp
mov
lods
js
jae
inc
mov
addr16
sub
jbe
popa
lods
push
cmpsb
dec
icebp
pop
das
mov
mov
sub
pop
mov
pop
mov
sub
sbb
sub
orb
xchg
pop
lea
dec
cli
jp
jl
inc
rcr
pop
jmp
cmp
xchg
mov
mov
push
push
pop
xor
test
je
adc
sbb
push
pop
xchg
mov
aam
std
lcall
repnz
popf
xchg
popa
push
push
jl
jae
pop
dec
stos
lods
call
xchg
pop
dec
xchg
fabs
push
lret
adc
outsb
mov
in
out
jmp
out
mov
mov
adc
int
movsl
ja
insl
jns
xchg
pop
jg
xor
sbb
repz
jb
arpl
iret
loop
xor
pop
leave
xchg
and
and
dec
mov
mov
mov
fnstsw
icebp
fldenv
push
mov
out
and
rolb
loop
xor
rcll
add
add
popl
fidivl
xlat
stos
xchg
add
adc
loope
adc
sub
add
lcall
mov
fs
add
adc
stos
mov
or
loope
jno
insl
daa
fdivrs
xor
rcll
test
aad
push
les
jae
out
xchg
outsb
sub
movsb
icebp
mov
jp
xchg
push
cmp
inc
das
sub
fcomps
lods
sbb
pushf
shl
js
test
lods
jnp
xchg
shl
mov
insb
aas
mov
out
imul
add
nop
jecxz
faddl
inc
jne
mov
imul
cmp
and
mov
jb
and
pop
pushl
xchg
xor
js
leave
mov
fwait
aad
cwtl
jg
sbbl
pop
inc
add
out
pop
push
aam
xor
sbb
or
xchg
jmp
add
fdivrs
xchg
pcmpeqd
xor
inc
out
mov
add
push
sub
enter
pop
add
out
jbe
cmp
sarl
xor
inc
jge
and
add
inc
push
sbb
push
sbb
push
pop
jp
mov
fs
dec
xchg
lret
aas
jbe
push
add
push
je
add
shl
jg
dec
rdpmc
pop
sub
fdivrp
outsb
push
outsl
mov
ret
cmp
rcll
lods
fisubl
arpl
fmull
push
test
sub
xor
hlt
mov
subb
repnz
fiaddl
iret
dec
or
jg
pop
pop
popa
adc
xchg
das
ret
sbb
inc
mov
add
mov
adc
xor
js
mov
and
in
jg
fs
or
shld
fisttpl
pop
jecxz
mov
daa
outsl
mov
sarl
inc
sbb
jbe
lods
push
mov
arpl
shl
int
shr
add
or
mov
or
mov
cmpsl
lods
cmp
mov
stos
lock
aam
push
fdivl
add
fimuls
fdivs
push
fistl
jg
jl
adc
in
aad
inc
shl
mov
inc
mov
fdivl
loope
sbb
mov
jp
sti
xchg
cmpsb
jl,pt
xchg
mov
xorb
xchg
jbe
xlat
mov
pop
push
and
inc
xlat
xor
dec
jge
ud0
stos
imul
push
or
lret
xchg
and
mov
call
repz
xchg
lcall
rorb
push
inc
and
adc
hlt
je
ficompl
out
and
mov
ds
mulb
sahf
sub
mov
cltd
jnp
add
jbe
scas
clc
loopne
cmp
sub
jp
pop
add
pop
mov
outsl
insl
or
repz
pop
mov
jl
add
into
and
push
insl
mov
gs
cmpsl
sbb
scas
xchg
mov
cmp
jae
or
pop
and
xchg
int3
fiadds
mov
mov
xor
js
mov
fists
push
ror
sti
clc
cwtl
jbe
xchg
push
mov
sbb
sub
mov
cmp
je
movsb
and
push
in
ret
push
jbe
xchg
add
or
mov
jae
push
jmp
sub
cmp
xchg
add
dec
push
hlt
mov
mov
jge
mov
call
pop
mov
or
repnz
mov
lods
sbb
or
mov
push
lods
ljmp
roll
xor
pop
sarl
nop
mov
loope
and
cmc
adc
and
out
fcoms
hlt
bound
call
sub
push
jle
dec
repnz
loopne,pt
sub
aam
jno
add
mov
jmp
fwait
data16
call
jp
std
xchg
mov
xchg
sub
sti
sub
hlt
mov
sbb
jbe
mov
in
idiv
sbb
jo
pop
xchg
jge,pt
call
inc
dec
inc
push
roll
xchg
push
and
dec
cmc
inc
clc
loope
and
mov
test
mov
sbb
mov
lret
pop
lods
sahf
jle
leave
loop
jecxz
fsubrl
xchg
lods
pop
xchg
inc
jns
mov
mov
in
lock
xor
dec
or
shl
add
pop
pop
dec
arpl
clc
cld
mov
xchg
jns
cmp
inc
leave
cltd
js
xchg
push
mov
scas
icebp
mov
aas
xchg
jno
jmp
mov
cmp
sub
inc
cmp
jle
subl
adc
push
mov
and
jnp
cmp
enter
inc
mov
out
mov
aas
adc
lcall
and
or
xor
call
test
push
xchg
insl
xor
mov
or
dec
dec
push
mov
inc
pop
insl
aad
pop
enter
pop
test
and
daa
and
push
pop
js
mov
xor
add
rorb
stos
hlt
mov
sub
in
repnz
add
mov
scas
dec
xlat
aad
add
mov
in
and
imul
add
subb
int3
dec
xchg
out
inc
sbb
test
dec
sub
inc
adc
das
mov
out
push
js
inc
and
das
add
xchg
fists
xor
pop
mov
ss
out
inc
mov
fs
inc
cmp
insb
cmp
mov
xlat
cmp
lahf
adc
mov
sub
outsb
test
leave
adc
mov
dec
inc
das
out
jb
mov
xchg
js
jmp
ss
ja
or
lods
mov
mov
fiaddl
push
in
sbb
dec
lds
mov
push
push
xchg
cmc
pop
or
and
popa
dec
sahf
jbe
add
cmpsl
les
mov
in
insb
and
adc
or
mov
insl
mov
push
sbb
xchg
sbb
sbb
mov
cmp
and
roll
stc
adc
stc
cwtl
inc
gs
loop
add
add
inc
adc
sub
jmp
adc
or
push
add
push
xchg
cs
and
inc
shl
das
cmp
daa
icebp
xchg
xchg
dec
pop
sub
inc
jmp
outsl
push
dec
pusha
pop
aaa
pop
imul
cltd
and
jbe
add
lods
out
push
test
add
sarb
std
xchg
mov
push
les
adc
hlt
jle
outsl
and
sub
cmp
cmpsb
repnz
test
sub
lds
outsl
cmp
adc
mov
inc
push
stc
lock
int3
mov
repnz
lret
das
jbe
mov
xchg
xor
inc
cmp
jno
aaa
jl
cmp
std
daa
sub
dec
push
pop
ret
mulb
jecxz
cli
cmp
xchg
test
jo
mov
adc
fmull
and
fwait
inc
outsb
mov
dec
in
into
mov
and
enter
adc
data16
fildll
push
stos
pop
insb
adc
mov
add
jmp
mov
sarw
sub
mov
jge
std
and
imull
lods
cld
popa
cmp
mov
sbb
idivl
lds
xchg
add
mov
dec
adc
fistpll
sti
js
fisubs
mov
sub
rorl
jle
push
jg
subb
or
jg
xchg
add
paddsw
push
popa
jp
xchg
int3
into
in
jo
out
cld
jns
jo
lods
sbb
mov
nop
icebp
rorl
xor
xchg
jmp
dec
inc
mov
cld
popa
ret
xor
jp
sti
mov
dec
imul
outsb
cmp
jne
lahf
fsts
xchg
inc
gs
clc
mov
xchg
hlt
sbb
mov
daa
ret
fmul
inc
insb
pop
movsb
scas
mov
std
inc
daa
mov
jg
jmp
in
jae
sahf
xchg
sti
inc
xchg
int3
add
push
int3
cmp
aaa
sub
aad
mov
sbb
jne
jg
cmp
xchg
es
nop
push
cmp
bound
movsb
cmp
mov
ja
repz
add
lods
pop
and
mov
mov
test
dec
sbbl
insb
sti
or
js
xchg
das
cmpb
scas
mov
cmp
jp
add
mov
mov
push
scas
push
adc
adc
insb
in
icebp
and
fs
xchg
mov
lods
dec
out
add
dec
loop
andb
rolb
dec
testl
daa
jae
cwtl
inc
jecxz
xchg
pop
insb
or
mov
popa
mov
fwait
pop
mov
addr16
outsl
xor
lods
jae
push
out
mov
cli
ja
test
sbb
ja
and
pop
lods
test
push
mov
and
inc
rcr
jb
push
arpl
mov
ret
loopne
xor
pop
lock
lahf
inc
cmpsl
mov
jge
add
hlt
repnz
je
dec
jmp
stc
cmp
jg
ficoms
sub
ss
dec
fimuls
xlat
adc
dec
mov
xchg
xchg
sti
push
and
dec
sbb
cmp
call
cwtl
insl
adcb
testl
imul
or
sbbl
jbe
das
mov
mov
std
cmp
xchg
push
mov
mov
stc
imul
inc
push
aaa
or
les
lods
adc
in
add
pavgb
mov
jb
decl
in
push
push
mov
sbb
fisubrl
push
xchg
into
xor
mov
fisubrl
out
push
lret
nop
sub
jle
rclb
xchg
iret
popf
stc
cmp
daa
aaa
ljmp
pusha
sarl
push
mov
pushf
ja
cmc
pop
add
outsl
sbb
int3
popa
or
sbb
movsb
bound
popa
outsl
in
enter
in
push
sbb
mov
jge
out
les
sbb
push
add
icebp
pop
rorb
cmp
cmc
pop
imul
jp
and
push
arpl
jge
mov
negl
jle
push
xorb
cmpsl
mov
pop
cmp
fdivrl
push
add
or
xor
cmp
shl
inc
cmovle
loopne
outsl
mov
mov
sarl
call
popa
nop
ret
dec
add
test
pop
mov
lret
pop
xlat
stos
push
daa
loope
xchg
jg
shlb
lds
xchg
fistpl
xor
xchg
pop
adc
not
pop
shrb
mov
icebp
mov
pusha
out
and
outsl
add
push
out
in
popa
fcomip
into
mov
stc
pop
xchg
lods
ja
ljmp
movsb
push
cld
js,pt
jmp
and
fnstsw
pusha
addr16
inc
xchg
ds
ds
jnp
rcrl
in
loope
dec
and
push
xor
adc
adc
rcrl
and
outsb
hlt
xorl
lahf
sub
inc
ljmp
xchg
or
leave
jbe
xlat
cmp
or
xchg
insl
pop
movl
push
leave
sub
mov
jl
test
jno
ret
bound
loopne
xor
loop
adcl
cmc
mov
js
push
pop
out
clc
repz
inc
push
aad
cmpxchg
jnp
roll
adc
mov
movb
xchg
jmp
dec
push
lods
mov
pop
xlat
in
frstor
sub
imul
sub
sti
sbb
cli
xchg
pop
jae
addr16
pusha
mov
pop
lods
in
mov
push
jge
out
xchg
adc
mov
lea
movsl
insl
fnstenv
outsb
inc
outsb
push
loop
cmp
repnz
in
add
test
repz
loopne
stos
inc
scas
fnstcw
ja
mov
mov
mov
xchg
xor
inc
cmpsl
mov
sbb
out
je
jb
cmp
imul
push
lock
cmp
roll
pop
pop
inc
adc
adc
js
jle
stos
enter
out
andb
jp
xor
mov
movsl
les
adc
jne
xor
mov
rorl
ljmp
das
ret
stc
into
push
sub
dec
jge
lret
dec
outsl
cmp
push
xor
lods
and
ret
insl
adc
jmp
and
mov
cmp
or
jnp
mov
jp
ljmp
pop
frstor
iret
mov
push
daa
ret
sub
pop
inc
movsl
lret
shl
test
xchg
cmpsb
jbe
rep
dec
test
pop
js
jbe
cwtl
and
ds
mov
inc
adc
mov
ss
out
ja
mov
cmp
mov
inc
fucomip
outsb
js
sbb
mov
push
jo
in
sbb
insb
movsb
lahf
out
out
mov
pop
mov
and
hlt
fidivl
mov
std
test
sbb
jae
hlt
mov
jl
inc
push
ret
dec
mov
pusha
mov
ljmp
sbb
mov
inc
mov
cmpsb
shll
push
mov
add
jecxz
les
cltd
lret
stos
pop
aas
xchg
lock
out
sub
push
cwtl
adc
rol
in
jp
jne
arpl
ffreep
stos
mov
xchg
mov
mov
pop
adc
or
data16
pushf
and
jge
shlb
aad
loop
cmp
sahf
repz
aaa
gs
aaa
cwtl
adc
fbstp
and
push
xor
push
dec
mov
mov
pop
roll
cmp
rcl
push
ljmp
sbb
in
pop
aaa
xchg
sbb
lea
cmp
lods
pop
out
mov
mov
and
adc
rcrl
es
popf
imul
adc
cltd
lret
les
mov
clc
push
xchg
pop
push
lock
loope
into
vandnps
jecxz
inc
std
test
rcr
aam
xchg
push
mov
shl
push
loope
popf
sub
enter
sbb
inc
inc
inc
popf
in
imul
dec
or
xor
pop
dec
insb
sub
mov
mov
and
sbb
dec
outsb
add
fistpll
in
dec
lcallw
in
lods
std
jns
push
sbbb
adc
lock
push
or
pop
pusha
mov
rorb
jne
js
lea
shll
daa
push
xor
inc
out
ljmp
sub
mov
repnz
and
rcrb
fsubrs
pop
leave
or
xor
loopne
mov
adc
test
mov
xchg
cli
repnz
pop
nop
ret
rorl
popf
notb
js
xchg
sbb
enter
xchg
js
in
addr16
std
push
mov
mov
jmp
add
loop
add
add
push
jmp
sbb
add
daa
xchg
lock
mov
or
jo
add
insl
int3
aad
repnz
cwtl
mov
mov
scas
mov
inc
sbb
daa
push
jmp
xor
or
fidivrl
sbb
and
dec
and
out
xor
test
fcompl
cltd
or
xchg
or
push
push
pushl
xchg
add
es
pop
fdivl
cli
add
sbb
aad
pop
sbb
fidivrl
fisttpll
push
mov
mov
rorl
sarl
outsb
sti
bound
decl
test
das
cmc
cld
jb
test
js
les
icebp
jle
movsb
lahf
mov
xchg
or
push
lret
xor
push
or
out
xchg
dec
push
loop
or
add
mov
das
lods
lahf
cmpsb
into
js
push
rcll
das
xchg
push
idiv
movsl
pop
or
test
jo
push
inc
fisubrl
add
aaa
aad
rclb
je
test
jae
cltd
jmp
add
je
mov
mov
adc
pop
jmp
jno
pusha
je
fsubrs
shll
xchg
jnp
push
fcomi
pop
dec
push
outsl
test
mov
cld
lods
dec
jmp
jecxz
and
add
adcl
fs
add
std
sub
adcb
cmp
incb
sub
clc
inc
mov
pop
aas
mov
dec
cmpsl
movsb
dec
xchg
iret
fldlg2
lock
mov
cmc
cwtl
dec
fs
mov
test
jecxz
mov
ja
cli
outsb
sub
fiadds
sub
or
je
into
jb
jo
or
stc
jp
push
sub
jp
leave
add
mov
rcrl
dec
repnz
xchg
sbb
dec
lahf
aad
xlat
cli
add
addr16
xchg
sub
lods
das
in
xchg
jge
sahf
fs
fisttpll
jae
pushf
ret
out
jmp
shrb
push
sbb
xchg
in
aaa
fmul
mov
cli
add
cmp
dec
mov
jbe
sbb
add
or
repnz
inc
pop
nop
pop
and
cmpsl
push
sub
icebp
stos
jge
add
test
cmpsl
add
push
not
cwtl
xchg
mov
mov
repz
xchg
scas
push
or
stos
call
sbb
pop
sub
or
adc
sbb
sti
insb
call
or
repnz
cmpl
pop
ss
sahf
pop
sahf
mov
shlb
fldcw
arpl
dec
xor
ret
lea
mov
movsl
mul
push
movsl
mov
jns
and
jecxz
in
enter
pop
imul
push
lods
nop
fmul
pop
mov
mov
test
xor
push
scas
adc
jbe
dec
jne
adc
xchg
pop
inc
pop
sti
jo
out
loope
into
testb
push
repnz
and
mov
and
mov
jo
or
aad
xor
iret
or
das
cmp
cwtl
cmc
cltd
orb
add
pop
aaa
in
fcoms
push
iret
ret
test
int
sahf
xlat
mov
push
in
add
jecxz
push
fwait
lret
pop
push
cbtw
or
mov
aad
xor
sbb
jns
adc
push
and
cld
add
push
xchg
mov
arpl
mov
xchg
dec
popa
mov
adc
ret
xlat
jns
sti
or
clc
int3
push
int3
fidivrl
mov
movsl
push
push
xchg
loop
add
addr16
ss
jmp
and
sub
jne
or
lret
xchg
fwait
cmp
add
cwtl
mov
stos
push
sarl
xor
ret
sub
mov
aaa
sub
lsl
dec
js
rcrb
shl
stos
aaa
out
inc
sahf
jl
xchg
ret
add
or
mov
loop
or
add
mov
inc
mov
fmull
adc
scas
add
jge
push
sub
lcall
sub
in
icebp
or
stc
cmp
lahf
insl
lret
pop
mov
stos
xchg
mov
imul
xor
out
lds
andl
jmp
loop
push
add
fldl
sahf
jp
sub
or
mov
xor
mov
addr16
cmp
xchg
jns
sti
movsb
pushw
dec
pop
jg
xor
movsb
cs
jb
push
push
inc
pop
adc
dec
jno
jne
das
insb
aad
enter
imul
bound
cmpsl
push
out
out
addr16
xlat
in
mov
jnp
in
loope
sub
mov
repnz
sbb
add
stos
cwtl
outsb
or
inc
subb
in
repnz
std
adc
addr16
jmp
jno
sar
push
mov
shll
mov
jo
mov
mov
stos
sub
data16
sahf
mov
mov
out
or
lahf
mov
gs
jnp
cli
jg
sbb
cwtl
je
jle
mov
add
mov
test
mov
jbe
adc
xchg
jmp
dec
mov
mov
fnclex
arpl
and
inc
adcb
rclb
xor
pop
ds
shll
or
cltd
dec
je
lods
pop
pop
in
lcall
sbb
lock
data16
lock
inc
pop
cmp
repnz
sub
cwtl
movsl
enter
push
data16
xchg
inc
outsl
nop
sub
stos
adc
loop
clc
or
inc
jmp
inc
jae
je
cmp
jl
jmp
cs
mov
xor
int
mov
stos
sbb
pop
inc
rorl
dec
shll
adc
push
cmp
out
sub
sub
xchg
mov
mov
and
in
rcrb
lock
loopne
repz
inc
mov
mov
cmp
xchg
in
and
cmpsb
lods
dec
cmp
scas
int3
mov
jle
mov
push
bound
sub
stos
adc
ficoml
enter
mov
jle
mov
and
cli
push
lahf
aaa
mov
inc
pop
adc
movsb
mov
push
sbb
xchg
loop
movsb
mov
adc
subb
sub
push
push
fsubrl
sub
lcall
adc
pop
scas
iret
fmul
cmc
lock
mov
sub
mov
mov
add
sbb
push
sahf
into
mov
mov
frstor
dec
jbe
mov
mov
out
das
stc
loop
dec
ror
adc
into
dec
inc
cmpsl
cmp
mov
lock
jmp
inc
pusha
push
mov
loopne
mov
dec
add
inc
mov
movsb
incl
lock
popa
movsl
mov
mov
ds
xor
add
cmpsb
dec
scas
add
out
das
insb
std
in
jae
xor
adc
fistl
out
ds
ds
divb
adc
push
push
fstpl
adc
ret
inc
in
lret
std
scas
test
loopne
xorl
sbb
es
or
loope
popf
lcall
dec
cmc
mov
fcoms
add
jmp
in
push
lret
mov
and
add
fisubrl
pop
inc
dec
add
pop
sub
imul
fwait
negb
imul
iret
and
inc
jle
insb
rclb
and
loop
pop
lret
mov
and
cli
mov
in
rorl
fistl
adc
dec
pop
mov
outsl
imul
stos
sahf
add
inc
stos
pshufw
or
xchg
pushl
into
test
xor
shll
std
fsubrs
int
or
sarl
mov
push
aas
jns
pop
out
loop
push
adcl
and
jbe
int
popf
pop
jge
xchg
mov
or
test
dec
pop
fwait
loope
repz
mov
cwtl
inc
cmovno
mov
inc
push
dec
ficoms
pop
iret
pop
mov
and
es
sti
loop
inc
and
sbb
sti
ret
xchg
sub
lret
add
lcall
daa
inc
inc
xchg
lret
mov
xchg
or
ljmp
pop
out
dec
stos
fcompl
les
je
sbb
xor
and
xchg
jmp
jge
stos
cmp
sbb
push
mov
stos
enter
repz
push
mov
dec
pop
pop
mov
adc
jbe
shl
pop
push
cwtl
sbb
fwait
repnz
sbb
rcrb
adc
pop
icebp
aad
xchg
test
or
mov
pop
rcr
mov
test
mov
popa
movsl
cmp
aaa
jl
push
mov
jmp
push
shl
push
xchg
adc
lds
pop
lcall
ljmp
pusha
adc
lcall
jns
sbb
dec
sub
cs
out
push
mov
ja
xchg
fbstp
dec
pop
jne
loopne
xchg
pop
adc
fiaddl
rcrl
cltd
data16
movsl
mov
push
es
test
fiadds
adc
addb
lock
in
adc
mov
mov
icebp
pop
sub
xchg
enter
repnz
jle
or
adc
inc
or
and
cmc
or
and
xlat
mov
cli
sub
or
push
jp
mov
test
push
add
flds
xor
xor
out
mov
mov
idivb
xchg
sbb
adc
jo
push
jg
sub
xor
ljmp
mov
into
fistpl
pop
fadd
out
adc
out
xchg
xor
xor
lds
mov
dec
daa
mov
shll
mov
lock
mov
cltd
cmpsl
adc
push
scas
adc
es
ja
daa
sti
popa
cmp
mov
or
ja
mov
sub
clc
push
cmpsb
mov
cmc
in
popf
sbb
push
enter
sar
add
mov
pop
xchg
std
sarb
ljmp
fwait
pop
popa
cmp
adc
cmp
stc
cmp
xchg
addr16
add
out
gs
iret
les
pop
add
adc
pop
mov
subb
sub
sbb
xchg
icebp
rcl
push
pop
jne
xor
aaa
cmp
add
cmp
add
call
xchg
cmpsl
testl
je
ja
insl
daa
adc
sahf
push
pop
adc
xchg
and
dec
add
and
in
xchg
ljmp
jnp
addr16
fldcw
xchg
pop
testl
xchg
ds
mov
scas
fistl
fmuls
test
mov
rcl
push
call
xchg
fsubr
adc
cmpsl
loop
adc
sbb
je
pusha
xchg
je
dec
pop
mov
and
fcoms
add
add
leave
int3
frstpm(287
mov
and
add
idivb
inc
mov
xchg
sbbl
push
std
lret
push
push
mov
pop
jnp
out
cmp
mov
pop
xchg
dec
jbe
sbb
xor
mov
arpl
sub
call
dec
vpand
add
pop
inc
jge
mov
xchg
xor
lcall
or
movb
les
fst
in
out
mov
xchg
xchg
mov
mov
stos
push
cmp
cmp
xor
dec
cmc
out
sbb
jmp
gs
pushf
cli
aas
jge
jbe
jl
gs
cmpsb
les
or
sbb
iret
fcoml
pop
xchg
icebp
cmp
or
loop
xor
inc
iret
ss
into
pop
in
mov
cmp
mov
dec
jo
mov
ljmp
ljmp
fistps
sub
jb
leave
jl
xor
lds
xorb
mov
mov
mov
sbb
and
rorl
push
nop
push
cmp
sub
sbb
xlat
adc
dec
jge
jo
in
mov
pushf
sub
and
insb
push
xor
jae
inc
mov
dec
dec
add
andl
add
test
int
js
leave
jmp
xlat
and
in
enter
mov
rorl
movsl
dec
inc
loope
xchg
mov
dec
int
and
jecxz
fdiv
leave
cwtl
sub
or
mov
movups
mov
test
rcll
stos
rorl
test
push
mov
shl
xor
stc
push
movsl
push
fistpll
dec
andl
mov
lds
mov
stos
xor
stos
push
inc
js
jbe
imul
out
jns
cmp
and
or
jb
jno
mov
in
loop
add
dec
imul
mov
addr16
jge
ljmp
mov
and
div
jmp
mov
das
out
push
inc
adc
sbb
andl
push
fldl
iret
sbb
clc
cmc
sub
nop
nop
pusha
xchg
addb
ja
xchg
icebp
pop
aad
mov
adc
adcb
cli
push
xor
xchg
leave
jo
cltd
in
ss
lock
pop
notb
pop
ja
mov
jnp
lods
cwtl
xchg
mov
scas
out
cmpsl
cmp
xchg
xor
push
and
fdivrs
lret
loopne
xchg
push
cmc
mull
das
xlat
adc
mov
idivb
cmp
push
daa
cmp
imul
repz
lds
jge
addl
js
xor
mov
mov
sbb
mov
mov
xchg
jb
sbb
lcall
pusha
ret
xor
daa
subb
and
add
xor
jb
and
jbe
add
movsl
mov
dec
sbbl
fdivrl
or
ret
inc
rcrl
push
test
or
nop
fdivs
sub
ret
dec
xor
or
mov
jp
pop
test
pop
push
aam
or
sub
xchg
fistps
inc
repz
and
jp
sub
rclb
aad
out
jnp
and
fldl
pop
cs
fwait
mov
inc
or
addr16
jl
push
mov
pop
cmp
inc
shlb
stc
leave
repnz
loop
rol
push
test
jle
jae
cli
mull
mov
or
cmpsl
mov
cmp
je
adc
mov
or
es
mov
mov
in
push
xchg
daa
dec
jmp
test
scas
jle
lock
inc
imul
fdivp
lea
cmp
adc
and
and
or
out
cltd
add
mov
cli
sbbl
push
cld
mov
sbb
sub
xorl
ret
fcompl
jo
add
and
xor
imul
and
test
lret
mov
dec
sub
mov
and
cmp
and
aaa
clc
addb
repnz
push
xchg
push
orl
sub
outsb
movsb
aaa
mov
fcomip
stos
aaa
xlat
movsb
cmp
cltd
mov
cmp
shrb
jne
sbb
sub
scas
test
fnstsw
sbb
fcos
mov
dec
and
mov
pop
in
push
int
mov
mov
or
stos
bound
pushf
test
int3
sbb
js
and
mov
xchg
fildl
inc
pop
mov
addr16
jecxz
cmpsl
aad
cld
mov
in
mov
stos
mov
push
mov
aam
mov
scas
dec
or
sbb
mov
or
dec
mov
cmpsl
test
or
repz
push
xor
jecxz
add
add
pop
mov
and
mov
inc
or
cld
loopne
loop
inc
repnz
and
fwait
popf
mov
mov
outsb
ror
cmovg
inc
mov
imul
hlt
orb
lret
scas
pop
dec
pop
mov
pop
pop
outsl
cmc
sbb
icebp
sarl
cmp
sub
int3
jo
push
mulb
xor
aad
lcall
xchg
sarb
adc
test
mov
jg
addr16
xor
ret
mov
dec
test
adc
nop
mov
cld
int
add
sbb
mov
mov
inc
jbe
out
and
push
xchg
jae
or
mov
adc
rcl
cltd
sbb
dec
add
lret
lahf
test
movsb
out
stos
sub
aad
insl
cli
inc
ljmp
inc
push
lahf
test
adc
and
inc
andl
and
les
cmp
fdivrs
popf
pop
rcr
test
fsts
inc
daa
mov
mov
xor
loopne
pop
mov
adc
pop
push
push
adc
or
mov
lret
sbb
sar
pop
iret
adc
jmp
pushf
sti
jle
inc
mov
push
and
imul
and
dec
jb
cld
jmp
or
stos
test
cs
and
clc
lock
xor
add
divl
pop
aaa
in
push
lret
jno
aad
inc
aad
or
loopne
scas
cmp
add
cltd
sub
push
mov
sbb
sub
cmpsb
mov
sti
push
jg
out
sbb
xor
out
xor
or
stos
fistps
lea
push
mov
mov
lock
popf
xchg
xchg
je
xor
push
arpl
pop
adc
insb
shlb
mov
aaa
lods
mov
mov
sub
sbb
jb
nop
lcall
bound
data16
icebp
mov
cli
out
cmp
cs
lcall
fdivrl
mov
or
xchg
loope
lods
loope
cmc
push
push
push
dec
ds
jb
je
push
add
mov
rorb
pop
imul
mov
iret
aas
pop
sbb
in
fiaddl
js
mov
cmp
sbb
inc
mov
xor
push
or
dec
cvttps2pi
cmpsb
xchg
lods
push
mov
lock
xor
cmp
and
arpl
xor
mov
subl
mov
inc
cmp
inc
sub
mov
or
lret
out
lods
dec
fldcw
iret
je
cmpsb
add
pop
jb
or
insb
and
int
pop
mov
movsl
cmp
add
fidivl
mov
loopne
bound
cmpsb
cmp
cmp
push
outsl
sbb
mov
lret
gs
jmp
or
pop
sub
lret
or
add
loop
jnp
xor
and
push
xor
ljmp
sbb
loop
popa
bnd
test
mov
stos
push
mov
mov
jb
ficoms
jo
cmpsb
pop
popa
xor
adc
test
xor
addb
ret
insb
jg
xchg
lods
shl
insb
sbb
add
clc
xchg
nop
adc
mov
pop
cmp
stos
pop
clc
mov
adc
iret
push
xchg
xchg
adc
xor
push
jno
push
stos
adc
call
xchg
popf
and
pop
jl
and
lcall
repz
mov
and
movsb
and
in
sub
movsl
inc
and
test
adc
neg
pop
push
insl
push
pusha
loope
int
lret
divb
push
stos
popf
push
popa
pop
mov
lret
lock
and
dec
shlb
jnp
cmp
insb
mov
jns
es
lea
jno
dec
cli
adc
and
das
dec
call
test
mov
push
pop
or
mov
dec
adc
jnp
pavgw
dec
outsb
mov
adc
inc
adc
jle
lcall
in
and
push
adc
lods
icebp
arpl
shlb
inc
js
addr16
iret
notl
xchg
adc
and
cli
js
ret
mov
outsb
shll
mov
sub
cwtl
add
add
imul
sarl
sarl
sbb
cwtl
or
cmp
add
mov
lahf
or
ljmp
stos
das
add
xchg
dec
movsb
add
dec
sub
andb
push
in
pushf
test
xorl
adc
test
dec
mov
ja
push
push
add
shll
and
mov
cltd
stos
fs
dec
xor
daa
int3
jbe
std
addb
xor
stos
dec
stos
push
xchg
cmp
loope
push
je
inc
ss
scas
insb
aaa
sub
jmp
sub
out
ror
fwait
in
pusha
out
lds
adc
movsb
sub
in
cld
clc
mov
scas
xor
in
inc
sub
loope
xor
fmul
or
test
jnp
sub
add
push
cmp
jb
pop
sub
push
pop
or
shl
hlt
cmp
shrb
test
xchg
lcall
nop
leave
ds
into
iret
adc
ret
xlat
subl
pop
in
xchg
and
shl
test
mov
mov
xchg
dec
xchg
jmp
test
cmp
aad
arpl
je
sub
ret
out
jmp
xlat
aam
pushw
jecxz
cmc
jno
mov
inc
dec
repnz
popf
cmp
shll
pop
inc
lds
mov
cmpsb
lcall
adc
pop
lea
or
mov
lcall
mov
stos
out
imul
add
ljmp
pop
push
movsb
and
push
adc
pushf
inc
or
repnz
repz
lahf
div
dec
arpl
mov
jp
js
scas
inc
add
ret
stos
out
mov
es
mov
test
dec
and
addl
lea
fwait
sbb
clc
stos
adcl
int3
repz
mov
xchg
dec
cmpsb
std
es
pop
cmp
and
mov
inc
or
pop
add
outsl
sarb
fstps
push
es
out
mov
push
adc
push
loope
add
cmpsb
mov
call
pusha
nop
xlat
cmp
addr16
xchg
into
push
add
rorl
cmp
or
mov
add
add
out
ljmp
fcoms
sti
testl
or
cmp
jl
jae
xchg
push
fdivs
xlat
test
in
xchg
fcom
xchg
insl
in
pop
sbb
push
push
push
insl
pop
mov
xchg
push
imul
das
push
jnp
mov
cltd
lock
fbld
xchg
jmp
cmp
mov
ljmp
push
inc
mov
adc
fs
lea
push
adc
fmul
insl
out
aam
ret
ds
inc
dec
fcmovne
loop
jo
into
xchg
loopne
rol
and
lret
jmp
add
mov
mov
popf
jg
arpl
ljmp
daa
mov
add
std
test
push
cld
gs
cld
sub
dec
out
pushf
and
cwtl
or
sub
rcrl
jbe
jl
mov
mov
mov
dec
mov
dec
jecxz
pop
adc
jno
int
js
lds
inc
mov
es
gs
loop
out
dec
jmp
fisttps
call
clc
push
or
std
dec
call
and
mov
fsubrs
xor
push
or
cltd
mov
mov
hlt
sub
dec
cs
xchg
ficomps
imul
aas
jp
jmp
mov
pusha
in
dec
push
dec
xor
nop
ret
imul
add
cmp
and
pop
inc
xchg
sbb
lret
aaa
jo
sahf
icebp
inc
cli
xchg
into
push
sbb
mov
push
mov
test
shll
xchg
nop
xchg
enter
pop
pop
push
icebp
pop
js
insb
out
inc
mov
fcmovnb
cmp
dec
mov
hlt
test
mov
xor
xchg
or
aas
sub
or
sbb
out
mov
out
fwait
ds
sbb
jo
sbb
negb
xor
in
js
push
rcl
jo
js
add
pop
sbb
and
pop
and
mov
mov
outsb
stos
adc
mov
sbb
dec
cmpsl
add
mov
shl
and
sub
mov
mov
xchg
push
mov
clc
addb
inc
cmc
into
cltd
rolb
or
cltd
mov
pop
test
out
outsb
lahf
sahf
dec
sub
loop
push
sub
mov
or
mov
cli
sahf
cmp
add
jg
shrl
lock
mov
call
mov
sbb
dec
sub
jnp
pop
lea
cmc
add
add
sti
cmp
sub
or
out
mov
pushf
shrb
mov
push
lods
or
ljmp
dec
ss
or
lcall
xchg
rorb
pop
lahf
outsl
mov
pop
adc
xchg
jp
adc
inc
shrb
and
faddl
imul
push
pop
aaa
cmp
int
push
aaa
sbb
mov
push
and
insb
fldl2e
push
sti
movsb
insb
shrb
mov
jno
lret
cmc
pop
jae
add
push
xchg
fcoms
out
popa
mov
dec
sti
imul
inc
pop
lds
mov
or
das
jle
xor
and
push
pop
push
add
int3
fldt
xchg
mov
aad
adc
dec
fadds
out
mov
rcll
enter
push
jg
fdivr
rcr
xchg
shrb
sub
test
addr16
push
shrb
jns
or
sub
xor
mov
int3
mov
ret
cld
push
adc
cmp
inc
push
xchg
fildll
sti
push
mov
repz
xchg
gs
cmp
push
test
sub
xor
push
arpl
shl
lds
test
stos
jbe
dec
sbb
push
cmpsl
mov
mov
push
mov
push
in
jno
mov
xor
por
mov
lods
jbe
ss
pop
push
jbe
dec
jno
xor
mov
or
int
jecxz
shll
lret
fimuls
pop
xlat
xor
cs
xchg
pop
or
mov
das
pop
aad
adc
fs
pop
pop
ror
mov
or
icebp
pop
jp
rorb
sti
sarl
dec
insb
cmpb
clc
or
outsl
arpl
int3
mov
shrb
pop
sarl
std
mov
dec
dec
adc
in
jge
jnp
pop
jp
cmpsl
mov
mov
sbb
cwtl
sbb
dec
inc
pop
jle
mov
fcomi
fwait
int
xchg
inc
push
insl
rol
sbbl
cli
arpl
in
or
dec
mov
and
mov
ljmp
ja
ret
xchg
mov
jns
or
push
fwait
ss
mov
mov
mov
push
loopne
xor
in
mov
mov
sbb
cmp
mov
jno
daa
dec
cmc
loop
mov
jae
xor
mov
pop
pand
jb
loop
xchg
movsb
loope
jle
mull
test
lds
mov
subb
sub
popf
addb
loope
ljmp
and
push
dec
push
and
cmp
xchg
ja
push
test
sub
jg
xor
iret
and
mov
pop
out
cmpb
jbe
dec
adc
mov
push
cli
or
mov
sbb
in
lcall
jo
cwtl
pop
mov
bound
lods
or
cmp
or
lea
jno
adc
pop
decb
add
adc
ljmp
ja
popa
mov
sbb
les
or
jmp
stos
dec
ja
pop
inc
push
mov
dec
imul
ds
fdivl
jae
xorl
stos
adc
outsl
xchg
mov
leave
xchg
mov
push
out
and
sahf
cmpb
iret
dec
adc
mov
push
push
leave
mov
xor
jbe
lock
repz
lea
frstor
das
test
sub
negl
adc
es
sub
daa
mov
in
mov
out
xchg
int
test
cmp
lods
mov
or
or
loopne
jmp
fs
inc
in
sarb
jg
call
and
leave
aas
xchg
hlt
out
inc
mov
xor
lahf
in
dec
xchg
pop
out
data16
aas
pop
fs
sbb
leave
sbb
insl
testb
mull
mov
cmpsb
je
subl
dec
jb
mov
lods
aas
sbb
out
mov
cmpsl
xor
mov
sbb
cmp
je
rolb
cmp
loop
pop
jns
push
dec
adcb
pop
adc
pop
bound
pop
mov
repnz
and
icebp
adc
push
jle
shll
push
scas
add
mov
xor
or
or
gs
inc
mov
xchg
push
clc
cs
das
mov
addl
xchg
and
cli
cld
push
add
pop
jns
es
xor
hlt
lods
mov
sarb
mov
or
das
popl
out
mov
lods
dec
aaa
dec
sbb
xor
js
gs
or
icebp
rcll
mov
cmpl
xor
push
add
add
into
mov
fwait
aam
loope
test
xor
outsl
mov
fxch
inc
xor
mov
imul
aad
lds
out
pop
jno
xor
or
dec
stos
dec
cmp
jmp
push
ss
ret
loope
arpl
mov
orl
dec
mov
loope,pt
pop
ss
inc
sbb
sbb
xchg
sbb
into
xchg
inc
cmp
pop
cld
add
or
push
dec
xchg
adc
xchg
push
push
dec
adc
inc
inc
cmp
fwait
jnp
and
xchg
aam
inc
std
lret
jl
xchg
jp
adc
xchg
repz
cmp
mov
mov
jle
jbe
pop
popa
cli
mov
repnz
or
pop
mov
sub
mov
pop
mov
call
ret
movsl
xchg
ficomps
and
mov
loop
cmp
out
inc
enter
xor
inc
ds
and
es
call
add
icebp
or
pop
outsl
push
ret
fwait
and
sarl
push
lret
stc
adc
clc
xlat
adc
fdivs
clc
shll
jnp
cwtl
mov
sbb
sbb
pop
push
add
or
sti
cwtl
nop
mov
or
decl
pop
xchg
stos
or
fdivr
int
adcl
aas
xor
or
sti
sbb
fucom
adc
jg
sub
call
mov
dec
aaa
mov
daa
fdivrl
xor
pusha
test
mov
loope
sbbl
xchg
ss
jmp
gs
ret
notb
lcall
pop
icebp
lahf
sbb
and
dec
xor
mov
pusha
notb
xchg
popf
cltd
adc
into
xchg
push
pop
rolb
ror
ficoml
rclb
mov
lock
pop
sub
sahf
jno
push
and
das
bound
push
pop
adc
sub
test
ds
mov
cmp
add
mov
fnclex
iret
fcmovnb
xchg
inc
inc
aad
cmc
adc
fsubp
outsb
xlat
pop
shrl
sarl
sbb
xor
inc
push
mov
cmc
sub
popa
sbb
in
fcomi
movsl
jle
and
je
mov
xor
mov
xchg
dec
mov
ret
push
add
mov
int3
fmuls
movsb
popa
push
xchg
sbb
pop
and
dec
idivb
insb
aas
inc
cwtl
subb
sbb
jl
pop
sti
and
scas
sub
ja
adc
push
inc
icebp
push
aas
stos
pop
xchg
bound
outsb
std
les
test
cmc
xchg
fmul
js
xchg
add
push
dec
outsl
or
les
sbb
sub
push
push
push
or
das
pop
cmp
les
or
bound
dec
xchg
push
xorl
int3
mov
sbb
scas
addr16
push
xlat
pop
out
hlt
loope
lods
push
insb
arpl
cli
fldz
jg
pusha
stc
sub
test
cmp
dec
push
push
mov
cmp
jg
xor
sbb
sbb
adc
gs
cmp
add
jecxz
pop
jp
scas
std
rcrl
stos
xlat
mov
testl
jb
push
cmc
fdivl
cmc
mov
sbb
rclb
mov
adc
mov
add
mov
cmpsl
push
fidivrs
dec
mov
sahf
cmp
mov
vxorps
lock
dec
decl
sbb
aad
in
shlb
jp
xchg
fists
xor
mov
out
cltd
jmp
fldcw
cli
push
div
xchg
xor
mov
or
mov
mov
push
shlb
fistpl
fiadds
push
pop
xor
jno
rolb
rcrb
es
and
lahf
int3
lcall
daa
movsl
mov
add
sub
pusha
mov
out
lret
pop
in
and
in
adc
add
test
cs
inc
or
pop
or
int
shl
and
lret
lret
sub
js
sarl
push
cli
mov
adc
and
xchg
ficoms
outsl
xor
xchg
pop
out
cmc
mov
adc
xor
inc
xchg
add
in
imul
dec
pop
inc
mov
mov
in
das
pop
dec
pop
pop
xor
mov
add
jno
dec
jbe
mov
mov
sub
cmp
xchg
xor
dec
stc
imul
bound
adc
mov
aaa
jmp
push
pop
scas
dec
jmp
push
or
ret
xchg
orl
hlt
push
mov
popf
xchg
add
call
dec
dec
sbb
pop
xchg
xor
mov
xchg
pop
lcall
mov
adc
dec
pop
pop
mov
or
fists
xchg
mov
xlat
rolb
shrb
jl
in
inc
cli
mov
leave
mov
hlt
outsb
movsl
jle
and
das
test
sti
jge
push
adc
mov
sarl
push
popf
jae
bnd
loopne
pop
js
inc
outsb
ficompl
stos
movsl
loop
filds
xchg
adc
ja
mov
pop
xor
xor
loopne
test
and
inc
out
fwait
adcb
sub
adc
xchg
lods
mov
dec
xlat
push
lahf
pusha
mov
out
mov
sbb
jge
testb
xchg
rcll
cmc
mov
pop
adc
or
xlat
push
or
filds
jbe
cli
flds
jns
ja
xchg
cmc
sbb
mov
mov
lahf
push
add
jg
mov
add
orl
movsl
xchg
icebp
adc
push
and
jp
lahf
xchg
adc
jb
dec
inc
adc
mov
fs
fucom
jp
lods
shlb
js
jp
mov
xorl
jmp
dec
je
push
pop
ret
xchg
mov
jae,pn
inc
test
lret
or
fwait
mov
or
scas
jnp
insl
adc
ret
pop
mov
lods
aaa
xchg
js
imul
arpl
or
push
push
bound
fimuls
addl
sub
adc
je
sarl
ds
fstps
inc
push
sbb
jno
adc
int3
aaa
jbe
xor
push
jp
push
dec
or
dec
cwtl
sub
add
mov
movsb
ffreep
adc
mov
inc
insb
imul
scas
out
adc
bound
neg
pop
cmp
scas
add
js
das
leave
popl
ds
mov
xchg
pusha
loope
insb
stos
mov
mov
rorl
je
fsubs
mov
jnp
fiadds
popa
cmp
repnz
enter
pop
xchg
stc
mov
addr16
loope
push
aas
sbb
or
xchg
aaa
jl
in
icebp
in
dec
bound
jle
mov
jp
adc
mov
or
test
into
clc
js
ficoml
dec
mov
jle
mov
adcb
sahf
lods
das
testl
cmp
pop
or
cld
test
fwait
idiv
push
in
popa
punpcklwd
push
popf
scas
repnz
outsb
inc
cmp
and
lcall
fs
pop
mov
out
cmp
xor
sub
push
mov
mov
pop
xor
lods
dec
sbb
mov
fistpll
jae
cmpsb
or
xor
test
adcb
xor
or
cmp
push
mov
mov
fbstp
xor
lret
pop
ds
pop
dec
hlt
movsl
cmp
xlat
stos
mov
arpl
mov
test
dec
sbb
shlb
addl
lahf
enter
inc
lahf
mov
rorb
mov
sub
xchg
pop
addr16
outsb
in
in
enter
sbbl
jle
fidivs
sub
mov
pop
push
addl
je
sar
ss
js
in
cltd
fwait
adc
js
push
push
xchg
nop
jmp
inc
or
jae
and
add
fiaddl
pop
aas
mov
sbb
cld
push
shlb
mov
dec
jne
lock
je
out
or
sbb
shlb
vmsave
clc
ss
test
iret
push
dec
push
sbb
adc
aam
and
mov
cmpsb
rcll
je
nop
mov
jg
cmp
sub
dec
pusha
test
aad
js
adc
and
push
pop
xchg
mov
push
test
cwtl
push
push
repnz
pop
cmc
scas
pop
in
mov
mov
lret
shlb
jl
xor
push
xchg
xor
rcl
jb
std
add
xchg
das
mov
ror
add
jno
push
pop
out
or
xchg
fildl
int3
and
pop
dec
mov
mov
mov
mov
sahf
pop
pop
sti
lods
sti
xor
and
sti
loopne
or
stc
shll
in
stos
mov
test
je
stos
xchg
fdivs
sbb
fldcw
mov
lret
loopne
sbb
int
cmpsb
ljmp
bound
stos
jne
inc
lahf
int3
andl
rcrl
mov
and
inc
inc
xor
lds
out
mov
cltd
xlat
and
mov
fs
loop
scas
fimuls
pop
popa
js
xchg
jne
mov
rcr
dec
sbb
or
push
aas
dec
inc
mov
mov
shll
mov
dec
xchg
cld
cmpsl
lods
aaa
rorb
mov
pop
pop
push
adc
leave
dec
cmp
cmpsb
xorb
loope
sbb
test
nop
push
dec
pop
mov
push
shrb
cmp
cltd
outsl
inc
lds
icebp
fnstcw
sub
cmp
xorb
jg
mov
sahf
cli
inc
jae
lods
jne
stos
rcll
cmp
pop
fsubs
fwait
rcr
insb
out
fldl
or
ret
dec
insl
les
ret
xchg
xchg
or
lret
mov
dec
sarl
js
push
out
sti
int3
push
cwtl
cltd
scas
inc
add
scas
lods
adcb
add
jmp
in
mov
dec
movsb
lods
mov
inc
loope
add
mov
add
sub
sbb
popf
jg
bound
mulb
jl
outsb
ds
dec
js
rorb
data16
inc
add
fwait
in
lods
cmp
mov
cmp
or
push
adcb
cltd
sub
orl
mov
jo
fs
sti
les
jge
mov
cld
jmp
inc
daa
mov
ret
sti
push
adc
pop
pop
out
mov
adc
mov
or
in
enter
fstps
addr16
xor
jg
cmpsb
cmp
mov
outsb
inc
adc
dec
lea
cmp
adc
dec
into
adc
inc
std
jp
outsl
insl
and
xor
insl
push
test
test
xchg
es
add
sbbb
mov
movsb
clc
pop
andl
add
data16
xchg
je
outsl
nop
imul
sub
cmp
push
mov
jo
mov
nop
pop
aam
jnp
addl
cli
aas
pop
enter
inc
pop
pop
sahf
adcl
subb
das
xchg
jg
cmp
push
adc
jno
sahf
je
movsb
scas
mov
ljmp
mov
add
jo
mov
push
push
adc
inc
jns
int
push
adc
imull
pop
mov
add
mov
jbe
cmc
bound
iret
and
iret
mov
pop
in
outsb
add
mov
or
fdivp
adc
and
mov
hlt
iret
xchg
push
cltd
jmp
lods
cmp
insl
xor
cwtl
bound
into
es
inc
jg
clc
out
push
sub
test
lds
xchg
aad
jp
dec
stos
mov
add
pusha
scas
jl
lods
mov
out
cmpsb
or
jbe
fwait
orl
dec
adc
roll
sbb
or
rcrl
dec
jle
push
xor
shlb
lcall
loop
pop
or
test
jp
clc
and
cmp
rcl
int3
dec
push
sub
imul
sbb
cld
push
popa
and
and
push
xchg
dec
ret
pop
push
adc
ja
mov
aaa
add
fdivs
stos
and
mov
xchg
mov
xchg
and
ljmp
loop
iret
xchg
inc
stos
fsub
addr16
sbb
mov
or
jmp
push
scas
movsl
ds
inc
jbe
adc
push
xchg
in
cmp
loop
cmpl
out
outsb
and
xchg
mov
and
mov
test
inc
push
cmp
mov
out
sub
and
sbb
mov
dec
repz
jnp
sub
int3
dec
mov
repnz
test
push
loop
add
in
mov
sbb
xor
and
in
fidivl
cmpsl
sub
lods
adc
dec
mov
inc
inc
mov
mov
xchg
dec
add
cmp
xchg
xchg
push
pop
jg
lods
cmp
push
dec
cmp
movsb
mov
jle
outsl
jge
sbb
lret
jb
sbb
inc
mov
cltd
jnp
push
adc
xchg
stc
jge
push
ret
loopne
testb
shll
test
scas
addr16
push
jge
sub
fildl
pop
push
jns
xchg
leave
mov
out
addr16
xor
aad
icebp
and
rcrb
mul
les
and
scas
nop
and
clc
arpl
bound
and
mov
mov
dec
adcb
bound
adc
sub
jecxz
or
ret
scas
add
movsl
pop
pop
and
rorb
insl
mov
inc
mov
mov
gs
js,pt
cli
repnz
jns
sub
pop
mov
inc
fists
subl
and
and
outsl
inc
mov
das
pop
jne
mov
je
ljmp
clc
orb
imul
mov
jb
inc
sub
xchg
mov
jne
jno
dec
sub
repz
mov
pop
push
iret
inc
push
push
jecxz
xchg
iret
jle
push
mov
xchg
fimuls
scas
call
cmp
daa
push
push
loope
pusha
shll
jp
mov
cli
push
xor
popf
fsubl
stc
or
inc
cwtl
cmp
sub
xor
hlt
or
aam
vmaxpd
xor
push
rolb
pop
int
in
or
sbb
stc
pop
and
dec
stos
lods
bound
and
sahf
in
mov
jae
fnstenv
les
das
jns
dec
into
push
jge
and
sub
xor
hlt
mov
ja
lcall
outsb
xchg
jecxz
sbb
jle
dec
mov
xor
jecxz
push
lea
inc
push
xchg
loopne
jge
xchg
add
popa
inc
out
stc
es
push
mov
fdivrp
nop
fwait
into
add
lret
jns
add
icebp
push
sahf
data16
xlat
stos
inc
xchg
push
sti
xlat
push
ljmp
lcall
aam
sbb
rcr
dec
addr16
inc
xchg
int3
pushf
mov
ljmp
mov
xchg
pop
push
ljmp
fdivrp
iret
xchg
xchg
std
aad
das
mov
cmp
cltd
cmp
xchg
add
xor
fwait
pushf
call
dec
push
mov
cmp
dec
push
lret
clc
or
sarl
sarb
leave
stc
nop
fwait
adcl
mov
cmc
popf
iret
pop
data16
xor
inc
out
mov
xlat
dec
push
mov
mov
lret
or
sti
fiaddl
jmp
sahf
out
repnz
lahf
add
mov
xchg
ret
loop
xor
and
mov
add
push
popa
mov
mov
xchg
fs
js
pop
call
aam
sarb
mov
sub
inc
and
jb
jno
ja
daa
out
sbb
test
sarl
dec
mov
mov
mov
je
push
sub
xchg
inc
adc
mov
aas
or
fsts
dec
inc
das
lcall
xchg
jmp
leave
imul
mov
ret
lods
xchg
fnstcw
xchg
inc
stos
cmp
popa
das
insb
sub
pop
clc
mov
sub
and
bound
inc
outsb
aam
inc
pusha
clc
aas
pop
int3
leave
test
xchg
mov
shll
in
and
scas
call
js
rcll
adc
or
inc
add
xor
mov
pop
cmp
cmc
leave
jns
test
add
cld
push
inc
mov
push
jnp
lcall
lret
jb
mov
cmp
fucomp
rorl
cli
push
dec
mov
xor
jno
xchg
cmpsl
outsb
mov
inc
test
fwait
and
mov
loope
inc
push
les
fbld
and
pop
out
subl
gs
popa
fst
jns
fnstsw
rclb
push
xor
xor
nop
ficompl
mov
std
cltd
cmp
inc
cmpsb
lods
mov
insb
rcrb
movsl
jno
jp
das
iret
xor
jne
test
xor
xlat
mov
roll
dec
fwait
mov
and
lcall
xchg
lahf
jg
lret
ror
pop
psubusw
inc
adc
xor
sahf
jb
jb
and
into
jecxz
bound
xchg
inc
aaa
es
add
pop
xchg
dec
sar
and
lea
jge
xlat
push
sbb
sub
mov
and
xor
jbe
je
mulb
fidivrs
cmpsl
imul
xor
mov
bound
pusha
gs
mov
insb
in
aad
mov
inc
mov
jne
test
fpatan
insl
pop
sub
jmp
xchg
fcomps
ja
cmc
outsb
push
or
jae
ret
jl
loop
and
mov
fisubrl
sub
mov
in
std
js
addr16
mov
dec
push
sbb
fsubrp
fsts
dec
mov
and
mov
stc
loopne
imul
mov
loop,pn
xor
enter
addr16
jle
pop
inc
dec
push
icebp
push
leave
sbb
mov
insl
aaa
stos
sbb
ljmp
and
dec
js
cli
insb
sahf
cld
jne
sbb
or
add
pop
fabs
je
or
dec
imul
cmpsb
out
sub
inc
inc
dec
or
jae
arpl
lods
push
xchg
xchg
mov
mov
repz
fdivs
sbb
outsl
mov
test
cmpsb
ljmp
int
mov
enter
pop
mov
pop
jnp
loopne
fisubrl
jl
pop
lret
test
addr16
cmp
mov
push
push
loop
fisubrs
dec
cmp
mov
iret
je
push
add
xchg
call
jns
sbb
jmp
sbb
mov
push
sbb
out
sbb
xor
sub
mov
lret
rorl
inc
subb
pusha
stos
pop
inc
dec
inc
dec
cmp
dec
dec
cld
loopne,pt
sbb
shlb
xchg
mov
and
js
cwtl
mov
repnz
mov
loope
into
sbb
and
add
inc
ds
icebp
inc
xor
and
mov
shll
add
fs
jnp
cltd
jnp
xchg
insl
mov
cmpb
dec
out
stc
sbb
ret
ss
daa
ss
pop
and
std
mov
mov
ret
xor
fistpl
mov
sbb
js
mov
xchg
iret
sbb
std
add
push
jns
je
mov
xchg
movsl
lea
mov
movsb
rcrl
mov
rorb
int3
xchg
add
sti
pop
out
mov
pop
es
cmp
movsb
mov
pop
es
sbb
xchg
push
add
pop
in
movl
popf
xor
pop
loopne
mov
movsl
add
mov
aaa
jbe
imul
loopne
xchg
lahf
fstl
scas
jp
lds
xchg
imul
test
popa
in
fidivrs
mov
adc
sub
push
cmp
test
clc
pusha
repz
fwait
add
test
xor
repnz
xor
icebp
adc
mov
shlb
inc
hlt
adc
scas
xchg
push
push
cmp
cmp
ss
mov
add
dec
ljmp
int3
sub
xor
push
push
popf
cmp
jmp
xor
test
sub
pop
sub
add
mov
xchg
pop
cmp
btc
xor
add
in
add
leave
adc
scas
xlat
push
outsl
sti
bound
pop
or
mov
cmp
xchg
mov
test
inc
mov
test
and
ds
leave
push
mov
dec
sbb
xor
pusha
mov
cmp
jns
call
sbb
xchg
andl
pop
xchg
in
outsl
test
fwait
mov
ret
repnz
inc
and
jb
and
push
and
decl
stos
insl
lcall
dec
sub
sbb
js
imul
cltd
rorb
dec
mul
test
shrb
inc
adc
pushf
sbb
pop
js
jecxz
pop
push
dec
mov
pop
pop
sarb
mov
pop
bnd
and
enter
stos
out
dec
adc
sahf
jg
pop
push
and
addl
add
sub
outsl
xor
ljmp
push
int3
ss
cli
mov
inc
out
in
dec
inc
cmp
mov
cli
cmp
add
mov
std
sahf
mov
or
jnp
xor
fisubl
mov
sti
mov
cmp
jle
sbb
div
leave
cmc
mov
push
call
clc
dec
scas
iret
test
push
fcompl
fcmovnb
loope
into
mov
ret
pop
cmp
repz
ja
and
mov
cwtl
cmp
mov
sub
inc
popf
je
hlt
xchg
and
je
mov
repnz
call
pop
pusha
pop
push
stos
jb
inc
and
dec
pop
jno
sbb
xor
mov
sub
sbb
ret
dec
lods
push
fnstsw
fisttpl
cmp
sbb
mov
cld
ds
inc
dec
imul
out
jl
push
movsb
and
shl
mov
mov
jnp
out
pop
jns
lds
cmpsl
stc
push
xchg
dec
dec
and
je
fdivrl
cmp
xor
jmp
mov
arpl
jle
int
imul
or
pop
xor
sub
test
repz
or
bound
hlt
and
mov
iret
and
shrb
sti
adc
push
mov
bound
shlb
incl
push
jmp
push
dec
add
iret
push
pop
incl
mov
mov
stos
inc
stc
sbb
jl
xorb
pop
fcmovbe
repnz
rol
mov
push
mov
push
fistpl
sub
and
call
cmp
or
and
sub
dec
and
xor
fadds
aam
scas
loopne
jle
mov
adc
xor
cmpsl
sti
out
xor
shll
inc
dec
dec
push
fsubrs
sbb
gs
mov
sub
pop
imul
popa
fcomps
js
nop
push
mov
cmp
jmp
add
jg
popf
popf
divl
sub
mov
jb
lret
test
sbb
or
sti
xchg
jg
aad
add
out
dec
arpl
jbe
aas
cmp
mov
mov
push
adcl
loopne
xorl
pop
mov
sbb
adcb
mov
sbb
push
or
in
imul
xchg
out
fisttpll
inc
loope
stos
popfw
sbb
repnz
cmp
cld
into
or
ret
insl
fidivl
gs
pop
lea
fwait
stos
mov
mov
out
sbb
push
mov
jae
sub
or
into
orl
fldcw
loopne
mov
adc
scas
adc
mov
ljmp
adc
cmp
push
push
into
inc
mov
arpl
sub
pushf
leave
sub
movsl
cmp
lock
lahf
jns
test
fmull
jo
mov
xchg
stos
test
xchg
ja
arpl
mov
iret
imul
in
dec
cld
lea
aas
xchg
jnp
xchg
xor
ret
pop
xchg
or
outsl
repz
adc
shlb
mov
mov
les
or
pop
stc
in
cltd
and
clc
or
imul
cmp
mov
fadd
cmp
stc
mov
xchg
cmc
fidivrl
push
cld
or
mov
lar
dec
into
cmp
stos
inc
pop
jno
lret
out
inc
inc
cmp
mov
arpl
int
ss
jo
out
popf
xorb
int
and
inc
imul
push
aaa
pop
lret
je
data16
cmpsl
mov
addr16
andl
xor
cli
xlat
mov
mov
mov
cltd
adc
repz
add
and
call
out
jl
inc
clc
fcmovb
inc
loopne
cmc
pop
adc
in
in
or
cmc
imul
cmp
mov
repnz
xchg
cmc
outsb
jno
dec
mov
lods
out
popa
xchg
inc
aad
into
aas
jo
test
andb
sbb
ja
es
xor
xorb
cmp
add
mov
jae
icebp
push
icebp
add
add
mov
and
stos
je
pop
test
subl
mov
test
mov
cltd
jbe
push
sbb
sbb
pop
lods
loopne
notb
cmp
nop
enter
add
add
popf
lods
xchg
repnz
jb
or
adc
jmp
jl
int3
dec
lock
std
andb
mov
sbb
mov
and
push
jmp
sub
adc
lods
jno
and
cmp
js
lock
into
popf
adc
cmpsb
adc
sbb
jne
ret
push
call
lcall
add
das
jge
fwait
sub
push
addr16
sbb
pop
mov
cmp
cmp
mov
ss
xor
jbe
shlb
adc
gs
in
mov
sub
fisttpll
int
mov
and
fnsave
pop
inc
jge
aaa
cmp
adc
divb
mov
mov
in
fimull
lods
adc
sub
xor
test
mov
and
sub
mov
mov
and
xor
adc
aas
imul
cmpps
sub
sti
rcrl
int
das
lret
push
pop
push
lcall
xchg
test
clc
leave
jle
out
loopne
js
ja
outsl
adc
mov
xor
insl
sub
adc
and
adc
fnstcw
jae
stos
add
mov
incb
inc
jb
call
push
jecxz
jo
imul
mov
pop
test
loope
sbb
cld
sbb
jmp
or
loop
cs
xchg
xor
rol
push
mov
and
mov
loope
ds
cmpsb
sub
jmp
fists
and
insl
xor
aam
hlt
xchg
adc
xchg
mov
int3
imul
fmulp
outsb
sub
jl
lcall
dec
inc
shll
orb
fs
in
jae
push
jbe
inc
movsb
aad
and
mov
xor
pop
push
xor
lods
das
lods
pop
js
les
jp
lcall
jp
ja
adc
rclb
fsts
ss
in
inc
mov
mov
sarb
daa
add
mov
dec
pop
xor
mov
mov
jmp
sbb
fsubrl
jae
pop
repnz
popf
fiaddl
and
cmpsb
stc
enter
add
data16
mov
mov
jge
push
flds
aas
arpl
int
xor
sub
hlt
jnp
fstpl
leave
std
xor
jne
xchg
out
jle
call
cwtl
nop
int3
movsl
dec
mov
and
jg
jl
jno
stos
mov
sub
cmp
sarb
cld
adc
int3
pop
cli
enter
sub
add
jge
mov
ja
add
mov
dec
out
sub
mov
arpl
pushf
aam
jbe
mov
mov
push
gs
mov
int
push
push
aas
mul
aas
test
mov
jb
or
ja
mov
or
nop
xchg
cmp
lods
loopne
or
jg
push
sub
xchg
push
mov
aad
out
mov
and
sub
and
icebp
cltd
pop
dec
jecxz
roll
shlb
popf
jmp
aad
mov
mov
cmpsb
test
inc
scas
pop
adc
add
push
out
add
jo
adc
stos
and
inc
sti
mov
popa
ss
outsb
inc
inc
jg
or
aad
inc
adc
pop
arpl
loop
in
hlt
and
iret
ret
xorb
inc
insl
xchg
enter
adc
dec
ljmp
out
sub
pop
cwtl
push
xor
bound
xchg
outsb
push
lods
mov
fs
mov
sub
jns
xor
loope
xor
mov
jge
arpl
icebp
push
inc
icebp
push
or
inc
int
sbb
popa
sti
mov
mov
mov
sbb
mov
dec
xor
cmpsl
fisubl
pop
dec
adc
arpl
and
cli
jb
dec
lret
mov
mov
adc
xor
fsub
adc
test
andl
sub
enter
xchg
dec
adc
and
ds
xchg
cmp
xor
adc
cltd
jbe
popa
fiaddl
or
inc
pop
mov
jmp
and
sahf
jb
loope
push
loope
adcl
cmpb
ja
xor
inc
push
cmp
sbb
jne
push
sbb
pop
sbb
stc
pop
subb
test
pop
add
push
pop
pusha
out
dec
mov
xchg
cmp
out
mov
cmpsl
pop
cld
jg
fcomps
and
jmp
outsl
adc
cld
pop
add
rolb
xchg
adc
push
out
ja
and
sub
popa
cwtl
les
cld
movb
push
in
ds
fdiv
lahf
pop
ja
dec
js
sbb
jmp
mov
leave
jmp
push
hlt
mov
mov
add
data16
out
mov
outsb
adc
nop
push
xor
pop
loopne
mov
add
inc
mov
leave
test
sbb
lret
cli
xchg
int3
and
pop
jo
cmp
les
outsb
gs
ret
adc
xchg
lea
or
mov
cmc
cmp
and
xor
xchg
loop
jl
in
push
jo
decl
push
or
jmp
or
out
in
pop
dec
stc
scas
xor
mov
push
mov
fisttps
in
cmp
sbb
or
out
std
push
or
sarb
nop
jnp
repnz
xor
into
mov
lock
scas
out
test
out
shll
or
and
pop
or
xor
notb
sbb
nop
adc
ret
push
jl
inc
shld
or
imul
mov
adc
xor
iret
inc
movsb
sbb
movaps
loope
mov
arpl
push
jbe
push
fidivl
ret
shrl
mov
adc
aaa
mov
int
es
jl
stos
call
push
push
push
dec
pop
fisttps
lods
out
and
sub
push
lods
test
or
dec
or
shl
ljmp
sbb
enter
push
shlb
sub
inc
test
jo
sbb
mov
dec
or
or
lock
sub
ja
xchg
mov
inc
sub
xor
add
filds
push
xor
mov
add
lahf
mov
popf
call
orb
pop
jle
inc
rclb
inc
pop
popa
add
movb
mov
mov
jno
and
mov
or
jb
dec
cld
stc
in
fidivrl
jp
xchg
into
popa
and
mov
shlb
imul
mov
dec
cmpsb
jmp
mov
push
cmp
das
sbb
sbbl
mov
sti
test
int
jno
adc
push
mov
add
lds
sub
fs
push
inc
insl
insb
insl
cmp
mov
mov
outsl
adc
or
cmp
mov
sub
inc
popf
jne
repz
hlt
ja
xchg
cwtl
mov
mov
xor
jbe
dec
xchg
stc
pushf
imul
mov
rclb
jmp
fstl
cmp
sub
popf
sbb
movsb
enter
mov
mov
scas
pusha
lods
fcmovnu
fcmovbe
ret
adc
inc
nop
mov
out
push
sarl
sub
out
inc
cmpsl
arpl
outsl
iret
lods
in
sub
out
push
pop
sub
adc
inc
fs
xor
unpcklps
fbstp
rcrl
loope
xor
ficomps
mov
stc
xchg
add
pop
aas
call
dec
adc
cmp
pop
add
inc
inc
sbb
fmuls
nop
mov
fcompl
inc
inc
fdivr
inc
adc
out
in
call
or
mov
out
xchg
mov
mov
repnz
adc
scas
imull
mov
out
adc
mov
icebp
adc
pop
sub
mov
call
pushf
mov
jge
cs
inc
push
inc
loope
inc
ja
enter
fcoms
mov
and
push
enter
cli
sbbl
pushf
add
sub
push
dec
inc
xor
adc
jle
fst
cmp
sub
jecxz
and
sub
cmpsl
and
cmc
mov
pop
punpckldq
lea
xlat
mov
ja
jb
mov
and
out
jb
scas
ljmp
inc
dec
je
inc
fmull
cmovns
or
push
shrl
nop
push
ret
in
fnstsw
xlat
pushf
out
cmpb
lods
insl
popl
inc
ret
jecxz
mov
push
rolb
out
ja
jp
in
daa
mov
call
mov
or
pop
les
dec
bound
push
movsb
fstl
mov
cmp
insl
int
cmpsb
aaa
fdivs
in
fwait
std
stc
scas
pop
ficompl
sbb
jmp
and
jns
shlb
inc
divb
fwait
push
and
pop
sub
push
inc
mov
sub
pop
mov
stc
xorb
pop
jne
rcrb
adc
loop
xor
add
test
sbb
jno
lret
or
xchg
push
jl
and
stos
sbb
or
popf
mov
outsl
jns
pop
fcomps
clc
lds
push
inc
push
mov
loopne
push
inc
stos
sbb
inc
mov
jo
xor
jmp
aad
dec
push
mov
leavew
or
pop
fisubl
fidivs
cmp
mov
mov
mov
push
sahf
test
fs
adc
stos
and
pop
sbb
aaa
sub
fistpl
js
mov
orl
mov
mov
test
icebp
inc
daa
xchg
aad
sbb
jg
scas
pop
lods
mov
mov
scas
ja
xchg
inc
cmpsb
out
sub
repz
mov
jmp
arpl
mov
inc
push
pusha
inc
imull
mov
cmpsl
mov
aas
pop
jo
or
repz
fcmovnbe
test
push
into
xchg
js
pop
add
adc
aas
jb
mov
push
sub
imul
mov
add
xchg
aam
dec
cmp
test
and
cmc
imul
out
aas
adc
add
xor
jnp
shrb
ljmp
mov
in
and
pop
xchg
adc
je
cmc
mov
xor
mov
lcall
xchg
into
jmp
pop
pop
sub
shlb
jbe
ds
call
inc
mov
std
dec
rorl
xchg
mov
pop
cmp
aaa
xor
jbe
cmpb
pop
fwait
jge
mov
or
div
cmpsb
push
cmc
cmp
mov
sahf
in
and
push
imul
mov
aas
fsub
lahf
xchg
push
and
jp
or
loope
popf
inc
xchg
jns
or
enter
xchg
jmp
lods
call
ss
imul
adc
sub
roll
push
test
adc
push
enter
jl
hlt
lcall
std
sub
dec
hlt
push
pop
insl
xchg
or
inc
mov
cwtl
shll
pop
mov
shld
inc
negl
outsb
adc
out
popf
xor
cmpsl
push
movsb
mov
jecxz
out
lock
shl
cmp
pop
pop
mov
das
js
jecxz
in
fcoml
push
insl
adc
pop
inc
push
xchg
sub
cld
lret
mov
xchg
out
xchg
loopne
dec
or
jge
mov
inc
push
into
mov
xchg
les
jne
notl
pushf
push
xlat
jnp
cmp
dec
pop
daa
mov
pop
push
je
movsb
xchg
mov
mov
std
adc
mov
int3
push
int3
gs
sbb
testl
sbb
or
jmp
cltd
outsl
xor
push
lods
xor
scas
push
inc
mov
mov
lock
mov
push
push
push
out
popa
jb
xor
test
jb
inc
repnz
aad
fimuls
mov
nop
loope
test
test
in
mov
outsb
out
push
lret
xlat
insb
movsl
ss
push
xchg
mov
mov
scas
push
mov
ljmp
jmp
xor
adc
loop
aaa
lods
mov
sarl
mov
out
mov
lea
push
es
aaa
mov
cli
mov
int3
loop
sti
and
sarb
bound
mov
push
jg
mov
mov
sub
lea
fld
sbb
xor
hlt
cwtl
jne
icebp
daa
jb
bound
arpl
pop
gs
cmpsb
bswap
xchg
push
daa
je
jnp
sub
enter
in
lods
jp
adc
add
xchg
jge
leave
cli
adc
sbb
addl
movsl
mov
scas
push
inc
sub
daa
mov
mov
out
cmp
das
stos
jl
and
loopne
inc
out
sbb
mov
pusha
fstpt
cmp
xor
mov
push
loope
dec
in
dec
mov
jno
es
inc
loope
add
in
xor
lahf
sub
je
notb
or
pop
pop
xchg
add
cmp
out
lods
fidivs
cmp
fldt
mov
mov
outsb
imul
push
adc
push
aaa
test
push
sbb
mov
lret
repz
mov
outsb
cwtl
and
xor
mov
jecxz
les
push
or
gs
hlt
xchg
cmp
cmc
arpl
adc
pop
add
mov
sub
adc
ljmp
mov
iret
cmp
popf
fucom
js
dec
mov
popa
cmpsl
adc
lret
sub
loop
mov
negl
fs
dec
mov
mov
cli
stos
lea
inc
fs
xor
inc
ljmp
test
test
xchg
jge
mov
inc
clc
stos
xchg
fisubl
sub
jb
sarl
call
xor
add
inc
jne
inc
or
sub
inc
jl
jle
inc
dec
iret
pop
mov
aam
cmc
roll
pop
dec
ds
xchg
xchg
xor
popf
and
out
hlt
mov
sahf
adc
mov
movsl
mov
sub
mov
sti
adc
pop
jo
jge
in
jno
dec
mov
inc
pop
mov
cmp
pop
push
xlat
loopne
mov
xchg
push
ljmp
cli
push
xor
inc
cmp
fwait
cmpsb
fdivrl
rolb
mov
mov
dec
insl
repnz
or
je
aas
push
and
icebp
mov
sbb
adc
add
jns
in
test
movb
mov
sahf
pop
popf
pop
shrb
pop
aad
ja
pushf
and
sub
mov
mov
sarb
repz
dec
mov
ds
mov
shlb
negl
cmp
pusha
xchg
ret
adc
stos
sahf
unpcklps
aad
mov
xchg
idivl
add
xor
movsb
scas
cmpsl
shrb
xchg
bound
adc
xchg
lods
leave
jbe
xor
cmpsl
sub
push
mov
fdivl
jmp
pop
pushf
loopne
mov
mov
mov
sahf
cld
dec
shll
cmpxchg
addr16
sbb
mov
clc
mov
mov
lahf
in
dec
adc
mov
push
in
xchg
mov
jmp
adc
xor
popf
in
xchg
insb
sub
popf
rcrl
xor
push
mov
lock
and
sub
adc
jnp
xchg
or
xor
mov
pop
inc
dec
clc
sbb
dec
sub
push
mov
xor
adcb
inc
pusha
insl
sub
xchg
rcl
out
xor
mov
xchg
adc
mov
mov
mov
jmp
fldl
std
jl
loop
js
dec
sbb
mov
in
fwait
jb
cli
popf
clc
cmp
mov
enter
test
pop
xchg
push
xor
insl
add
mov
sub
mov
inc
mov
or
test
xchg
and
dec
dec
arpl
pushf
das
cli
cmp
icebp
fstp
inc
adc
mov
mov
rolb
pop
xchg
dec
xchg
mov
fdivrp
jp
cmp
fwait
std
inc
or
mov
test
adc
pop
call
mov
outsl
push
sub
pusha
fimuls
mov
inc
iret
cmp
repz
aad
add
mov
mov
jne
fcmovne
mov
jmp
mov
arpl
push
outsb
insb
popa
ret
adc
cmpsb
insl
mov
call
add
movsl
insl
test
mov
push
aad
mov
aaa
mov
cmp
dec
sar
ds
xchg
sbb
aas
into
test
or
inc
sub
in
sbb
and
mov
call
aas
mov
xchg
test
ficoml
movsl
loope
out
pop
inc
cwtl
pop
negb
dec
push
sarb
cmpsb
xor
mov
mov
lea
call
jbe
sbb
xor
xor
jo
dec
or
xor
or
data16
xchg
push
test
xchg
inc
cmpsl
out
into
aas
mov
cmc
adc
popf
xchg
jp
mov
scas
lods
mov
sub
xlat
loopne
iret
cwtl
sub
cli
inc
xchg
mov
orl
add
test
sti
xchg
in
ljmp
xchg
or
xchg
pop
mov
test
add
pusha
xor
mov
cmp
std
and
dec
vmovshdup
out
jl
mov
scas
mov
dec
cli
jg
sub
sub
add
mov
shrb
das
mov
or
jns
push
pop
ret
adc
std
andl
jle
inc
xor
xchg
adc
in
aad
imul
nop
insl
ret
jns
ljmp
insl
dec
sbb
in
cli
mov
or
xor
adc
xor
jp
or
or
aad
mov
sub
sbb
movsl
mov
or
leave
test
mov
sahf
cmpsl
mov
pop
dec
icebp
popl
scas
inc
cmp
adc
cmc
add
jno
jmp
rolb
clc
xor
mov
pop
jle,pt
or
repz
insb
repnz
dec
mov
lock
xchg
scas
or
jae
stos
rolb
push
adc
mov
pop
adc
hlt
adc
and
scas
add
das
lret
popa
pusha
js
mov
mov
jne
mov
sub
ret
enter
es
inc
nop
aad
lret
cwtl
bound
jle
shlb
pushf
add
cmp
cmp
pop
sbb
int3
test
subl
insl
test
or
sub
insl
inc
or
sub
lret
psubw
inc
arpl
pop
out
stos
insb
js
pop
or
imul
cmp
cmovl
negb
repnz
adc
sbb
int3
idivl
aas
lds
xchg
mov
out
lds
or
js
pop
and
repnz
ror
inc
sbb
nop
jecxz
push
repnz
push
mov
aas
mov
arpl
sti
xor
sub
fwait
cmpsl
fs
jmp
les
pushf
mov
mov
rorl
movsb
shlb
lds
add
cmp
shr
popa
outsb
aaa
xor
mov
lods
jnp
in
adc
lret
arpl
or
jmp
addb
flds
cmpsb
lods
dec
mov
scas
cmp
in
je
sub
lcall
xchg
insl
cmp
ss
cmpsl
xchg
imul
pop
jne
jmp
push
lret
sbb
or
and
lret
push
lds
sti
data16
outsb
out
nop
clc
jmp
and
sbb
ljmp
shr
xor
mov
in
adc
sbb
mov
xor
iret
arpl
rorl
or
ja
or
lcall
pop
pop
mov
xchg
int3
add
cs
jne
aad
inc
push
sti
and
add
dec
pusha
aaa
inc
jmp
insl
repz
icebp
dec
or
push
imul
jp
mov
lock
ret
mov
sbb
dec
inc
mov
fwait
cli
aaa
cltd
inc
sub
decl
add
add
inc
jge
sbb
push
lcall
ljmp
push
mov
cmp
and
out
inc
jns
jne
dec
cmp
push
ds
out
xchg
ss
mov
cwtl
movsb
pop
add
add
pop
mov
shl
or
fidivs
jecxz
fdiv
mov
cmp
mov
jmp
scas
jp
push
mov
mov
mov
lea
sbb
and
sarl
bound
xchg
and
int3
ljmp
jne
and
jge
dec
add
inc
fcompl
sbb
dec
aam
cld
xchg
push
pop
cmp
mov
orb
stc
sar
push
mov
dec
adcl
lahf
pop
lods
cltd
push
mov
or
push
mov
mov
pop
cmp
repnz
loop
rcrl
rclb
inc
xor
mov
out
cmp
rorl
mov
rcrl
mov
sti
ret
aad
test
dec
pop
imul
push
mov
lds
sbb
mov
ret
xor
outsl
mov
insl
adc
rorl
mov
dec
aam
mov
mov
test
icebp
xor
add
enter
clc
in
inc
mov
cltd
jl,pn
movsb
dec
and
lods
adc
insb
shlb
pop
xchg
js
jecxz
fiaddl
fadd
cltd
into
inc
pop
sbb
adc
adc
pop
cmp
mov
mov
jne
mov
jno
daa
push
rcrb
or
stos
push
and
lahf
lret
xchg
cmp
call
mov
or
add
jge
adc
mov
enter
add
inc
push
sub
les
adc
cmpsb
push
mov
shlb
mov
xchg
inc
jl
outsl
test
xor
jbe
lret
rolb
das
cmp
lods
push
mov
movsl
clc
xchg
out
mov
out
in
mov
out
test
mov
add
pop
fwait
pop
lock
dec
popf
shlb
push
sub
or
cmpsl
sbb
loopne
sahf
decl
rorl
out
icebp
out
scas
mov
idivb
fsts
jmp
pop
ret
sahf
and
loop
fsincos
push
ja
rcrb
push
ret
hlt
add
loopne
cmc
test
add
jg
out
scas
lahf
mov
pop
mov
add
jg
pusha
xchg
xchg
aad
out
sbbl
leave
and
cli
add
mov
idivb
ret
or
out
push
xlat
inc
mov
sub
ja
cwtl
imul
sub
aad
mov
jnp
inc
and
pop
dec
pop
call
add
ljmp
into
scas
insl
and
ljmp
movsl
add
push
lret
jns
scas
push
in
sbb
or
loop
xchg
aas
imul
lcall
inc
jle
adcb
outsb
add
icebp
hlt
lret
cmp
dec
and
and
aad
inc
and
xchg
or
jb
and
pop
fcom
adc
mov
cmpb
inc
arpl
lock
sti
mov
popf
ljmp
fsub
add
sub
fidivl
push
loop
into
scas
mov
movsl
pop
sti
imul
test
loope
xchg
xchg
gs
and
movsl
adc
mov
sub
imul
and
fwait
mov
jno
push
mov
addl
or
jle
mov
rorl
push
pushf
adc
movsb
add
xchg
xchg
ret
stos
mov
test
pop
int
jecxz
jg
data16
lock
dec
add
rcrl
pop
or
push
daa
in
cmpsb
gs
test
cli
lret
stc
jmp
popf
mov
or
cmp
imul
rcrl
insb
dec
in
push
outsl
or
xchg
ftst
lret
xor
out
enter
lret
and
push
inc
jl
pop
and
pop
push
inc
or
iret
mov
icebp
jp
dec
cmp
xchg
jg
fcmovne
sti
ss
out
test
mov
xlat
mov
test
repnz
lods
adc
dec
and
pop
jecxz
inc
mov
pushf
add
insl
clc
and
mov
pop
faddl
out
cmpsl
in
aaa
call
add
and
icebp
xchg
sti
ss
in
repnz
jle
jae
subl
into
jecxz
xchg
push
push
out
rclb
sub
pop
jmp
pop
sub
fstpt
int3
fisttpll
enter
push
in
incl
xor
imul
pop
mov
push
lahf
jne
fldenv
pop
addr16
std
pop
dec
subl
xchg
adc
or
mov
in
lods
add
scas
add
das
fistl
sub
add
lret
sub
hlt
jp
mov
js
jae
scas
lret
sbb
push
fbstp
mov
xlat
cmp
sub
lret
into
jo
sbb
mov
sbb
mov
insl
ret
inc
sbb
out
cmp
inc
gs
in
add
mov
inc
and
std
les
outsl
int
aad
int
test
mov
mov
sti
cmp
xchg
es
enter
ja
fsubl
fimuls
aam
pmullw
adc
cmpb
mov
or
xchg
xchg
insb
mov
cli
mov
les
mov
loop
push
ret
push
movsb
cmpsb
dec
dec
les
mov
push
push
and
xchg
movsb
cmp
lcall
sbb
jns
push
cmp
jmp
ret
jp
hlt
mov
outsb
cld
call
repz
mov
cmp
inc
sub
idivb
and
xor
dec
cmpsb
leave
enter
jg
mov
lds
jle
out
or
cwtl
imul
mov
sbb
fsubl
pop
xchg
sbbb
fstpl
data16
fimuls
lret
sub
das
aas
xchg
mov
fistpl
shrl
mov
dec
daa
in
lahf
xor
mov
xlat
push
mov
cmc
push
adc
dec
mov
mov
subb
sbb
or
mov
sbb
daa
enter
and
xchg
scas
mov
loope
out
lods
and
leave
add
push
mov
xchg
inc
mov
scas
adc
inc
aad
fdivrs
aas
ds
rclb
pop
subb
inc
in
sbb
leave
repz
push
ds
and
fs
pop
add
add
xor
xchg
call
inc
dec
adc
mov
inc
mov
ss
sbb
pop
insl
xlat
push
test
push
sbb
sbb
mov
out
aam
jp
lret
insl
cmpsb
and
fcmovbe
ret
push
out
push
sbb
xor
mov
cmpsl
xchg
xor
jmp
dec
mov
jb
outsl
sub
mov
aam
sub
int
call
add
mov
xchg
push
jmp
jae
clc
dec
lret
adc
mov
push
mov
aad
repnz
mov
adc
inc
popa
fcoms
xchg
loope
push
outsb
xchg
imul
xlat
adcl
scas
push
cmpsl
add
inc
push
stc
loopne
add
push
cmp
outsl
mov
mov
jp
nop
xlat
mov
test
jp
mov
ja
fdivl
dec
jno
lret
pop
cmp
push
jle
pop
icebp
cmp
sbb
xchg
mov
dec
mov
jnp
and
scas
cwtl
loope
sahf
enter
or
stc
fimull
and
jnp
mov
rolb
pop
jl
pop
mov
mov
stos
dec
adc
les
int
imul
jecxz
lds
or
dec
cmpsl
push
cmpsl
or
xor
aad
push
iret
movl
ljmp
fdivrs
push
push
popa
fdivrp
push
sub
lods
xlat
xchg
mov
enter
dec
movsb
mov
mov
push
out
mov
pop
je
mov
mov
fldcw
or
pop
mov
mov
pop
xchg
sub
adc
je
lret
push
in
jg
xchg
in
imul
lcall
mov
cmp
pusha
pop
sbbb
stos
inc
mov
fdivr
popa
sbb
push
adc
pop
inc
cmp
sti
mov
mov
mov
mov
jmp
push
push
pop
jae
popf
push
mull
dec
rorl
and
xchg
out
push
jne
jge
inc
jecxz
add
in
arpl
mov
mov
insb
test
jo
adc
lock
push
push
mov
adc
inc
leave
lods
lret
cmp
pop
xor
push
pop
pop
or
out
gs
ds
jne
lods
xor
out
lret
cmc
mov
sar
push
add
inc
les
push
mov
pop
mov
dec
insb
into
lea
lret
mov
das
rclb
push
out
stos
cmp
nop
pop
and
sbb
push
push
lahf
xchg
hlt
sub
xchg
or
jl
jge
out
cmpsb
stc
cmpsb
lret
movsb
cmpsl
add
dec
pop
push
sbb
pop
out
in
ficompl
sub
fnstenv
mov
scas
in
pop
das
in
dec
mov
dec
imul
es
fwait
jo
enter
data16
xchg
sub
pop
xchg
and
ret
in
jns
into
inc
mov
or
adc
adc
xor
test
mov
lock
clc
cmp
xor
or
cltd
xor
movsb
es
jne
mov
inc
in
xor
fadds
pop
jle
lret
insw
xchg
and
das
push
push
sahf
jb
push
cmp
sub
xor
cmp
and
cmpsb
fcmove
mov
jo
ja
sbb
ds
imul
mov
jnp
mov
xchg
lods
fidivrs
pop
and
sbb
sbb
into
pop
outsb
pop
fistps
xor
fsubr
pop
inc
leave
std
and
adc
dec
loope
shlb
vaddsd
pusha
sbb
mov
xor
push
adc
sahf
call
in
ljmp
dec
push
dec
popa
jnp
outsl
je
shrl
xor
outsb
xor
lock
xorl
pop
pop
jmp
push
int3
pushf
bound
mov
push
xchg
sub
sbb
xor
dec
icebp
mov
sbb
fnstenv
xchg
imul
rep
pop
xchg
into
icebp
cmp
cmpsb
ficoml
or
add
add
pop
int3
test
scas
xchg
or
insl
dec
jne
cli
filds
or
call
jg
fstpt
std
js
icebp
cld
out
cld
shr
es
mov
mov
mov
sbb
int
jp
cmp
or
out
repnz
aaa
xorl
xchg
mov
fsubrl
popa
out
lods
dec
mov
xchg
add
mov
aad
lret
jl
jl
jmp
inc
add
fnstcw
clc
pop
nop
inc
js
out
mov
jle
shrb
lret
loopne
je
test
sbb
mov
xchg
in
bnd
dec
push
gs
loopne
std
adcl
mov
inc
ss
jmp
out
rol
iret
jo
addr16
out
jl
or
mov
call
stc
push
mov
adc
sbb
pushf
cmp
push
addl
scas
mov
xchg
aas
iret
mov
xor
repnz
or
xor
test
out
jmp
push
adc
push
fbstp
mov
jl
fwait
clc
inc
repz
ss
pop
sbb
dec
push
int
cmp
jns
xor
lret
sbb
or
and
fwait
inc
lret
int3
fmuls
sub
ret
sbb
arpl
shll
arpl
mov
add
pushf
inc
mov
push
xor
lods
xor
lock
mov
xchg
ss
sbb
push
arpl
mov
addr16
pop
sbb
add
mov
add
pop
imul
jno
mov
int
clc
mov
arpl
sbb
mov
or
jp
pop
roll
shrl
adc
sbb
jge
out
push
insb
enter
les
sub
push
jo
shrb
je
test
mov
lcall
jge
fsubrl
jmp
mov
pop
icebp
jmp
lcall
inc
scas
push
mov
ss
pushf
repnz
mov
mov
pop
aas
ja
mov
es
ja
test
mov
jne
addr16
lahf
outsl
adc
sarl
clc
or
cld
scas
jo
into
lock
sbb
cltd
xor
lds
jno
pop
xor
pop
clc
outsl
mov
mov
or
xchg
adc
jle
mov
xchg
shll
mov
mov
jb
cld
test
rcll
or
xchg
insl
jae
repz
jl
push
and
sub
sub
call
mov
mov
scas
mov
mov
adc
popf
popf
push
inc
pop
add
lret
les
cld
inc
mov
pushf
jbe
flds
addr16
aad
push
leave
mov
and
pusha
out
mov
or
jne
jae
sub
mov
xor
xchg
xlat
push
mov
xchg
sbb
ficoms
push
push
dec
sub
dec
sbb
cmp
mov
arpl
mov
in
into
dec
sbb
xor
in
loope
inc
inc
loopne
ret
xor
xchg
js
cwtl
addb
loop
xor
mov
jnp
mov
adc
jbe
dec
pop
mov
mov
jmp
shrb
cmp
jne
popl
adc
lds
xchg
push
xchg
xchg
inc
mov
or
push
insb
out
in
sti
inc
out
mov
jnp
push
ss
jbe
push
mov
push
jno
push
lret
shll
adc
cltd
sbb
pushf
call
pop
aaa
jo
test
pop
cmp
cmp
in
pop
inc
ja
pop
cs
shrl
sbb
ret
xchg
pop
fwait
push
fidivrs
xor
test
in
mov
fs
sbb
imul
repz
fdivrl
popa
or
movsb
dec
ror
test
mov
call
subl
xor
pop
sub
cmp
sbb
mov
sub
aam
mov
data16
mov
mov
mov
in
mov
jne
push
push
cmc
data16
repnz
pop
sti
loopne
shll
mov
in
shlb
sub
or
repz
out
dec
push
and
mov
cwtl
pop
push
mov
inc
sub
repz
pop
lods
negb
popa
sbb
iret
push
mov
cltd
aam
mov
lcall
sbb
stos
add
js
popf
adc
mov
push
pop
cmp
sbb
or
out
xor
out
xor
sub
adc
scas
rolb
je
mov
jbe
push
rclb
mov
cmp
sub
ficompl
out
cwtl
arpl
cmp
jp
pop
mov
out
xchg
jnp
int
aad
orl
loop
push
ljmp
and
sbb
lcall
add
mov
cs
dec
dec
xor
stos
insb
xchg
mov
insl
dec
fcoml
and
call
sbb
mov
or
xor
les
xor
sbb
mov
mov
mov
pop
sub
add
jns
sub
xchg
inc
xor
js
sub
cmp
mov
mov
fs
insl
sar
sub
pop
lock
xor
ja
xchg
inc
adcl
pushf
push
push
or
pushf
mov
call
mulb
or
insb
pop
or
jmp
or
lcall
mov
mov
jbe
mov
cmpsl
insb
lock
pop
leave
cmc
or
add
mov
add
out
inc
dec
inc
mov
repz
sub
out
adc
xor
push
pop
pop
clc
hlt
xor
cmp
push
lcall
xchg
xor
fsubs
fstl
jecxz
pushf
mov
xor
mov
lret
lea
outsl
cmpsb
add
dec
xor
and
adc
into
mov
mov
in
stc
mov
rcrb
mov
mov
push
inc
sbb
sub
cmpsl
and
dec
and
test
insl
test
imull
cmpsl
sub
mov
xlat
imul
jbe
xchg
push
repz
inc
lods
cmpsl
cmp
cmp
mov
mov
ja
xchg
jg
cmpb
lds
rcr
lds
push
mov
call
jb
adc
pop
adc
adc
gs
adc
pusha
xchg
es
outsb
mov
add
pusha
ljmp
scas
jnp
mov
loop
lods
and
pop
scas
cmp
hlt
push
arpl
out
je
mov
sub
cmp
outsl
or
push
pop
loop
push
dec
in
testl
xchg
fdivrl
mov
cmp
pop
out
mov
aas
int3
loopne
inc
insb
mov
ret
or
aad
enter
cli
pop
imul
mov
out
mov
dec
push
or
ss
mov
lods
jg
jb
adc
call
cld
sbb
nop
cmc
out
std
ds
cmp
lahf
scas
mov
push
cmp
ljmp
push
stos
adc
pusha
adc
test
mov
hlt
jg
jp
jo
and
popf
loop
mov
push
imul
xor
cmp
cmp
push
int
out
scas
ja
push
or
sub
and
repnz
inc
lock
arpl
jmp
outsl
sub
es
or
int
insl
push
sar
std
ljmp
fwait
cmpb
jb
push
sub
icebp
ljmp
shll
pop
lods
push
push
push
insl
and
jnp
mov
call
or
inc
push
test
dec
cmc
jecxz
jo
aas
xor
mov
mov
mov
and
out
mov
pop
gs
arpl
cltd
mov
popf
fwait
setl
fisttpl
sub
push
cld
mov
xor
rolb
sbb
xchg
rolb
jl
decb
xchg
jge
or
ja
stc
loopne
repz
cltd
cmpsl
push
mov
mov
popa
adc
stos
shll
aad
mov
jl
jge
mov
data16
into
sub
popa
cli
pop
aaa
or
lahf
push
incb
and
xchg
sbb
scas
movsl
xor
ficoms
sti
rcl
loope
test
jb
fs
push
sub
aas
mov
and
jbe
fnstcw
test
mov
adc
cltd
loope
or
xor
std
adc
dec
cli
dec
dec
push
adc
cmp
shlb
add
insl
pushf
arpl
sbb
loop
loope
or
mov
in
in
cs
cltd
mov
loope
ja
jle
ss
inc
push
mov
in
xor
cs
lahf
and
add
push
pop
cltd
or
jg
push
dec
cli
or
int3
arpl
jp
lret
rolb
mov
push
mov
mov
data16
test
xor
and
mov
cmp
mov
shrb
adcb
cwtl
stc
imul
inc
lret
icebp
leave
and
mov
cmpsl
out
inc
add
shrl
lock
or
call
inc
cmp
mov
addr16
outsl
imul
sub
fnsave
sahf
pop
dec
fidivs
decl
into
test
xchg
jecxz
repnz
push
push
and
lods
rcrb
stos
gs
sti
pop
push
push
sbb
popa
jg
mov
rclb
lret
and
loope
dec
sub
and
jecxz
pop
in
arpl
roll
dec
mov
xchg
repnz
inc
hlt
out
xchg
and
scas
push
pop
push
fnstenv
outsl
or
sub
mov
dec
iret
icebp
movsb
xchg
mov
xchg
sub
mulb
test
dec
xlat
mov
or
or
mov
push
pop
inc
add
cmpsb
decb
jecxz
push
jb
leave
jg
and
std
push
cltd
adc
ljmp
mov
cltd
push
dec
movsb
and
xor
xchg
sbb
clc
imul
sbb
cmp
cmc
lock
test
pop
jo
add
pop
xchg
sbb
jmp
sub
ja
cmp
es
pop
cmc
cmp
insl
mov
add
lods
cmpsl
mov
aam
push
mov
stos
mov
xor
ret
jbe
pop
scas
movsb
int
mov
adc
mov
popf
mov
push
hlt
xor
jl
js
sbb
and
dec
cltd
jo
leavew
loopne
shlb
xchg
jbe
and
movsl
push
xchg
std
pushf
sbb
aaa
andb
fst
lds
psubsw
adc
imul
add
leave
mov
insb
pushf
cltd
mov
adc
sub
enter
xchg
xchg
push
rorb
xchg
fsts
int3
or
push
out
int
mov
mov
movsl
push
mov
lds
ss
xchg
mov
add
or
ja
in
cli
mov
mov
imul
mov
mov
fdivr
fucomip
or
sti
adc
push
stos
cwtl
cmpl
sar
xchg
and
pushf
nop
sbb
pop
loopne
xchg
movsl
jge
das
cli
xchg
test
aam
or
aaa
sub
sbb
mov
imul
mov
xchg
sbb
nop
pop
mov
ss
add
xchg
int
cmp
add
hlt
or
xor
mov
or
mov
mov
mov
roll
dec
xor
test
fwait
addr16
sbb
pop
stc
mov
inc
in
sub
xor
scas
jle
lods
test
xchg
ret
push
jg
fdivrp
fs
lret
push
pushf
or
call
bnd
in
sub
and
mov
aas
xor
sahf
ja
mov
pop
pop
gs
fmuls
in
and
cmp
fldl
mov
aam
push
sub
jge
cmpsl
fwait
cmp
sarb
ds
rorb
test
fsubr
cmp
int
jo
idivl
sub
rcl
pop
fidivs
out
push
mov
mov
out
filds
cmp
icebp
enter
fiaddl
ljmp
add
xchg
dec
xor
push
mov
mov
or
push
xorb
lahf
mov
sbb
dec
mov
lret
mov
outsb
sti
int
stos
pop
fisttpl
inc
jae
push
adc
sbb
mov
inc
aas
inc
or
pop
sbb
sub
mov
and
shlb
sub
sub
out
push
mul
sbb
xchg
pop
andl
mov
inc
pop
jl
imul
add
push
daa
insb
lcall
sti
xor
in
cs
sbb
vcvtpd2dqy
ljmp
ja
icebp
push
insb
rcrl
aas
pop
xchg
xchg
or
movsl
add
loopne
addr16
xlat
push
sbb
push
inc
inc
cmp
lods
mov
mov
adc
and
sub
mov
loope
iret
jl
jl
sub
ljmp
jmp
mov
nop
call
out
scas
and
lods
xchg
outsb
jb
or
push
jo
sti
pop
int
fiaddl
lods
sub
cmpsl
cmpsl
shll
or
mov
mov
jo
jno
les
and
xor
dec
les
outsl
cwtl
pop
insb
mov
dec
fiaddl
nop
fs
rol
inc
out
xor
push
mov
or
add
fisttpll
jb
mov
push
cwtl
inc
vmovdqu
dec
in
push
dec
cmp
xchg
fdivrs
aaa
push
fdiv
enter
mov
pcmpgtw
sub
lcall
fucomp
push
mov
push
outsl
cmp
dec
aam
cmpsb
pusha
cmp
hlt
mov
daa
out
adc
push
or
mov
dec
repz
pusha
enter
test
add
cmp
mov
push
iret
cltd
mov
or
mov
aad
pop
jp
jb
in
xor
jns
in
cmp
mov
ds
mov
or
mov
test
out
add
cli
mov
push
pop
jmp
lahf
add
imull
repz
fs
fstl
in
adc
imul
push
xchg
sbb
aam
mov
push
push
out
cmp
jle
movsl
sub
les
ja
mov
mov
xchg
mov
loope
insb
xor
fstl
orl
adc
push
stos
adc
jbe
aas
or
dec
mov
or
jl
lret
pop
adc
and
arpl
and
jbe
mov
cmp
xor
mov
inc
test
ljmp
and
sbb
test
dec
adc
mov
push
leave
cld
sti
out
sub
push
fst
ds
push
loope
pop
out
mov
mov
stc
sti
jo
jl
in
adcb
xlat
or
inc
not
or
pop
daa
jge
jl
into
leave
in
ficoms
jb
pop
adc
and
jae
hlt
in
in
icebp
adc
cmp
leave
cmp
stos
loop
sbbb
test
pop
xchg
test
mov
add
mov
cmc
mov
and
push
inc
mov
push
pop
stos
int3
fidivrs
jmp
adc
sbb
mov
das
fsts
into
ficomps
inc
push
rolb
pusha
xor
inc
mov
movsb
aaa
repnz
insl
dec
jne
adc
sbb
xor
pusha
aad
sbb
cmpsb
jno
outsl
popa
stc
movb
jb
inc
dec
mov
dec
jle
mov
mov
fwait
inc
jns
dec
sub
xor
mov
filds
push
add
sti
fwait
divl
cmp
push
fsubrl
jbe
pop
js
stc
es
push
add
pop
sbb
xchg
add
out
xchg
imul
je
outsb
pop
sbb
cltd
sbb
cwtl
xor
out
xor
fisubs
sub
adc
fstpl
and
sbb
xor
fnstsw
addr16
push
xchg
push
std
dec
jmp
fsub
cld
sub
call
insl
pop
mov
pushl
std
push
sti
dec
enter
add
rcr
dec
xor
jo
jno
ljmp
out
jge
mov
mov
cmp
jl
mov
enter
cmp
sbb
mov
xchg
shlb
xchg
sbb
mov
roll
push
push
out
out
leave
movsl
mov
jp
cmpsb
pop
sbb
dec
push
repz
testl
mov
fxch
pushf
add
inc
jle
jnp
sub
dec
lods
sub
mov
lds
jecxz
push
xchg
ror
ss
mov
test
adc
inc
ret
call
popa
repz
test
aad
push
stos
xor
aam
idiv
cli
xor
inc
frstor
jo
outsb
add
add
int
cli
lahf
pusha
in
in
lds
incb
push
aas
pop
mov
fistpll
das
mov
push
aam
loope
xchg
inc
dec
in
pop
scas
das
mov
push
imul
sti
push
pop
push
jecxz
push
ja
xchg
jo
push
les
mov
repnz
jle
inc
pop
sbb
lret
leave
add
repz
cmp
lock
call
dec
mov
fdivl
ficompl
mov
push
xchg
jne
test
popa
mov
jb
lea
stos
adc
inc
scas
sarb
mov
and
std
xchg
xor
adc
test
jmp
mov
push
xor
inc
push
xchg
push
rol
rolb
pop
push
mov
inc
xchg
sbb
in
adc
adc
sbb
xchg
in
loope
jecxz
mov
inc
cltd
iret
inc
test
sbb
das
in
ret
dec
ja
loope
xchg
pop
dec
cmp
movsb
mov
xor
mov
test
push
or
ror
or
imul
sarb
insl
pop
mov
jl
fs
mov
xchg
roll
ficompl
push
cli
mov
xor
daa
dec
or
cmp
sub
jl
xor
inc
repnz
cs
lcall
jo
dec
cmp
insl
shlb
roll
in
out
out
cmp
or
ret
mov
movsl
shlb
push
mov
jnp
add
jl
add
dec
adc
arpl
mov
sbb
sbb
fwait
inc
in
cmpsb
mov
cmc
mov
or
add
xchg
shll
adc
jno
xchg
test
sti
pop
mov
xor
and
inc
cmp
xorb
xor
pop
jl
lret
outsl
popf
inc
xchg
enter
ja
subb
in
pcmpeqb
lahf
arpl
push
inc
fadds
jecxz
cltd
rcrl
mov
les
cltd
das
jno
lods
sti
and
mov
lea
sbb
cltd
jmp
push
arpl
movsl
mov
xchg
sbb
add
lock
cltd
sbb
inc
adc
adc
icebp
rcll
aam
and
xchg
sahf
mov
dec
inc
and
inc
jp
mov
xchg
push
push
sahf
fdivrl
in
adc
sub
loop
popf
sti
ss
aam
enter
jbe
addr16
pop
adc
inc
call
shrb
xlat
sahf
mov
adc
test
shr
add
lahf
dec
sbb
sub
imul
fstpl
mov
pop
testb
int3
mov
mov
inc
xchg
push
outsl
pop
insb
pop
jg
mov
mov
mov
movsb
or
fcmovb
xchg
stc
adc
add
pop
or
jp
inc
sub
push
rcrl
jnp
jae
fldt
faddl
clts
mov
lcall
lret
fwait
arpl
xchg
push
enter
cmpsl
iret
xchg
add
imul
out
mov
fstl
call
in
fdivrl
mov
loop
and
and
jae
addl
and
mov
cmpsl
inc
js
test
jnp
les
in
mov
xlat
xor
dec
mov
cmpsl
and
jbe
push
outsl
clc
popa
jbe
jg
in
sub
xor
inc
into
push
das
loop
mov
cld
and
or
idivb
add
sbb
add
popa
xor
insl
imul
jbe
xchg
push
pop
sub
lds
cmp
fsubrs
dec
lods
xor
sbb
mov
outsb
and
ja
test
mov
je
inc
out
pop
xlat
jns
cmpl
in
icebp
ljmp
fdivs
pop
leave
sbb
icebp
insl
lds
jnp
test
cmp
fiaddl
shll
jl
mov
stc
sub
or
stc
xor
lock
dec
sbb
pop
popf
xchg
clc
mov
add
push
push
das
mov
pusha
repz
int
xchg
jno
inc
outsl
mov
loope
clc
and
test
lods
sbb
fistpll
js
jmp
jbe
xchg
mov
es
xor
mov
cmpsb
inc
arpl
add
push
inc
mov
ljmp
rolb
in
cltd
xchg
shlb
and
rcrl
sub
ljmp
enter
mov
ds
stos
add
insl
ja
jo
pop
sbb
xor
jl
mov
jp
xchg
push
cmp
imul
imul
cwtl
aam
push
push
inc
xchg
jnp
cs
mov
into
jecxz
cli
lock
dec
dec
sbb
push
jmp
mov
pop
bound
xlat
xchg
xchg
std
sub
dec
data16
shll
or
cmp
jmp
ds
xchg
mov
pop
je
push
lcall
adc
cmp
test
dec
add
mov
push
inc
jmp
test
inc
push
jl
int
lds
adc
psubusw
movsl
xor
movsl
sub
repz
mov
adc
inc
mov
negb
or
add
pop
lret
mov
hlt
stc
lcall
insb
fbstp
pop
inc
in
jp
rol
lods
dec
lret
scas
maxps
hlt
add
inc
mov
sti
out
jmp
mov
mov
push
xor
pop
push
out
mov
adc
std
insl
push
or
push
out
push
idiv
repnz
sbb
dec
decb
test
pushf
in
pop
adc
imul
xor
es
mov
fistl
nop
jmp
dec
int3
mov
push
jae
pop
aad
jno
loope
sub
cwtl
and
sti
fs
mov
gs
into
jno
loopne
cmp
xor
in
outsb
and
and
mov
fldl
out
adc
and
xchg
scas
sub
lock
incl
and
jb
jbe
or
lock
stos
mov
hlt
icebp
xor
aas
das
adc
or
cld
sub
rcll
rclb
jl
popa
in
jb
fwait
mov
sbb
pop
jmp
push
push
mov
fldcw
js
or
dec
sarl
out
push
xchg
add
gs
mov
inc
lret
fbld
dec
fdivl
in
popf
sbb
imul
aaa
sbbb
push
or
jl
rcl
or
add
mov
test
jg
push
dec
mov
shll
fsub
jmp
bound
bound
pop
jle
jmp
push
int
jo
pop
mov
imul
in
lcall
dec
mov
push
push
stos
fwait
add
shlb
repz
inc
xchg
aas
icebp
sub
pop
add
hlt
bound
ret
ja
out
scas
dec
mov
adc
stos
mov
mov
data16
mov
add
inc
push
pop
aaa
movsb
aaa
push
push
jmp
add
jmp
pop
pop
cmp
add
cld
insl
mov
push
inc
fisubs
hlt
push
pop
mov
sbb
dec
test
mov
add
inc
jb
mov
les
fwait
movq
movsb
sbb
adcl
sub
push
push
sbb
dec
stos
jne
outsb
inc
adc
cmp
xor
cmpsl
inc
mov
xlat
in
mov
icebp
js
push
mov
push
rcr
pusha
mov
int3
mov
leave
aad
ljmp
xlat
pusha
jnp
clc
inc
sbb
fcompl
subl
cmp
xchg
nop
iret
mov
ret
rclb
cli
jbe
inc
loope
push
xor
cmc
xchg
cmp
fwait
roll
rcl
lahf
test
jmp
loop
adc
js
leave
jl
mov
shlb
ljmp
popa
es
inc
jmp
mov
lcall
cmp
xchg
inc
ljmp
inc
popf
fcmovbe
and
adc
pusha
in
cs
add
inc
dec
inc
and
out
stc
clc
jb
mov
shlb
aam
adc
movb
ss
hlt
test
cs
int
loope
jbe
mov
cwtl
flds
inc
adc
js
in
in
or
insb
mov
push
out
push
aaa
sub
jne
jo
and
call
jne
test
push
push
push
mov
jmp
fsubp
xor
mov
sub
out
loope
xor
inc
sbb
repz
adcb
dec
mov
push
popf
push
dec
mul
cwtl
sbb
adc
loopne
push
xchg
push
add
jmp
cs
fadds
or
ret
sub
mov
shlb
lret
mov
frstor
punpcklbw
mov
add
loopne
pop
subl
pop
xchg
xchg
jg
xchg
mov
push
pop
out
scas
divb
jnp
push
pushf
xchg
fs
jecxz
cmp
test
lea
cmp
popf
add
lods
mov
add
inc
lea
scas
cltd
sub
dec
push
push
out
or
cwtl
call
in
stc
lds
stc
incl
sub
dec
sti
cmp
inc
shrl
jbe
sbb
lret
jp
and
cmp
mov
cs
xlat
sub
popf
mov
out
jnp
inc
cltd
enter
pop
out
stos
lahf
out
out
mov
or
rcl
dec
out
and
mov
xlat
movsb
sbb
pusha
xor
loope
pop
pop
pop
das
in
negl
cs
xorl
mov
aad
outsl
cmp
lea
ds
cmp
rclb
sub
lods
lcall
dec
icebp
mov
inc
pop
out
sub
fstl
cli
inc
movsb
jle
aam
sar
pushf
cmc
mov
push
cli
imul
cmp
cmp
ret
adc
addb
mov
add
sub
dec
add
cmp
dec
push
lods
xor
fsts
sbb
cltd
sbb
inc
mov
out
jl
xchg
mov
or
or
xlat
loop
adcb
pop
mov
mov
dec
ljmp
popf
pop
fs
xlat
or
aad
xor
fstpl
ja
push
push
mov
inc
xor
xchg
das
sahf
stc
cmp
sub
ljmp
mov
pop
in
aas
pop
push
gs
mov
xchg
pop
inc
push
inc
cmpb
fistpl
mov
dec
pop
xchg
dec
ss
jnp
out
mov
out
std
testb
push
jo
shrl
aas
push
aaa
in
sbb
lods
scas
mov
inc
cmp
or
adc
loope
movsl
and
pop
hlt
push
out
xchg
andl
lea
test
pop
xchg
mov
enter
jns
mov
xchg
and
or
lods
in
push
inc
or
add
or
mov
pop
pop
stc
testl
or
addr16
fistps
cmp
mov
mov
lea
es
out
dec
cwtl
xchg
ds
add
sbb
ja
ret
stos
mov
push
jp
lock
xor
sub
cmp
aas
dec
stc
and
mov
inc
stc
xchg
bound
roll
sbb
fsubrs
mov
fbstp
mov
or
add
and
mov
bound
mov
sbb
pop
int
iret
mov
or
cmp
cmp
mov
jge
pop
hlt
cmp
or
inc
mov
out
push
lds
adc
or
fwait
and
aaa
addb
mov
aaa
push
in
cmc
jl
push
mov
pop
push
fsts
popf
cs
fdivr
pop
scas
inc
lods
testl
inc
cwtl
xchg
mov
cwtl
xor
popf
sub
jae
mov
insl
mov
ja
pop
fs
inc
pop
push
adc
mov
dec
ret
lods
rcrl
jno
aad
cmpsb
nop
jle
stc
sub
test
lret
es
cltd
pop
fdivrs
push
out
cwtl
mov
push
jmp
nop
ds
stos
stos
cmp
push
xor
insl
pushf
sbb
das
shlb
adc
xchg
xchg
mov
stc
je
mov
xor
xchg
stos
js
or
lds
jg
icebp
lods
dec
cmp
fsubrl
xor
mov
add
jmp
ficomps
sub
mov
adc
stc
loopne
in
loopne
jo
jb
loope
aad
loopne
hlt
or
sbb
mov
cmp
mov
lods
test
ja
rorl
out
sahf
repnz
jae
hlt
jle
shll
jae
xor
mov
pop
cwtl
outsb
jo
xlat
jno
les
cmc
sbb
movsb
push
push
rclb
int3
push
shrd
xor
cmpsl
sbb
or
call
xchg
int3
jecxz
cmc
xchg
push
ja
mov
fcoml
mov
mov
xor
push
adc
es
daa
popf
enter
sbb
or
outsl
mov
pushf
dec
sbb
and
rol
cs
popf
fwait
dec
add
dec
dec
cltd
loop
xlat
ficoml
xchg
or
std
mov
test
mov
push
adc
mov
std
loopw
push
mov
mov
lods
dec
jp
pop
shlb
clc
movsb
xchg
aas
push
mov
mov
dec
mov
stos
xor
sahf
ficoml
inc
xchg
jbe
jmp
pop
and
cld
dec
dec
push
imul
inc
fidivrs
aaa
nop
popa
mov
xor
sti
lea
sbb
mov
add
fildl
sub
sbb
mov
addl
flds
cmp
andb
je
pop
testl
shlb
in
je
lock
xor
fs
fcmovne
inc
push
mov
stos
lret
mov
push
adc
loope
lret
dec
adc
dec
xor
fbld
pop
jecxz
int
inc
mov
imul
out
push
cltd
shr
cs
pop
and
push
mov
jns
ret
inc
xchg
pop
out
cmp
mov
xlat
lods
loope
cmp
fmulp
mov
push
pop
pushf
test
or
mov
xchg
movsl
adc
hlt
adc
xchg
stos
mov
xchg
test
adc
cwtl
add
and
xchg
lcall
add
in
sbb
scas
aas
popf
dec
loope
ret
mov
in
mov
pop
clc
aaa
mov
jp
int
stos
pop
dec
mov
and
hlt
movsb
rorl
push
or
xor
sub
push
fldenv
jb
cmp
inc
dec
jno
sti
mov
loopne
mov
cld
mov
in
inc
jmp
js
sub
scas
push
enter
shlb
out
out
call
stc
cmp
lods
fdivrs
cmp
out
and
leave
cmpl
mov
mov
adc
mov
aaa
dec
mov
xor
scas
mov
jmp
ja
xchg
xchg
insl
stos
mov
dec
xchg
jg
out
cld
loopne
lock
fsub
xchg
mov
je
inc
lahf
xor
adcb
stos
sub
in
fs
outsl
dec
ror
adc
std
ss
ja
cmpsb
repnz
pop
aaa
and
and
imulb
adc
in
add
xchg
mov
adc
add
and
inc
add
push
dec
xchg
or
pop
inc
xor
aad
dec
mov
xchg
stc
pop
sti
and
loop
popf
mov
or
mov
fimull
mov
add
cmp
cmp
inc
adc
imul
repnz
mov
pusha
cltd
arpl
arpl
mov
and
inc
sbb
out
jo
stos
aas
sahf
sub
test
call
sahf
sub
out
pop
test
cmpb
std
arpl
pop
xchg
jg
sbb
shlb
pop
fwait
jb
rolb
mov
xor
push
push
test
lret
sbb
popa
mov
mov
ret
insb
lock
insb
and
push
int3
shlb
jmp
sub
adc
scas
icebp
ret
jmp
inc
lea
mov
xlat
icebp
in
int3
insl
insl
inc
sub
or
sbb
xchg
xor
fldenv
jns
in
movsl
xchg
xchg
lret
repnz
mov
movsl
arpl
fs
hlt
xor
shlb
cmp
sbbl
mov
imul
leave
sub
repnz
adc
sarl
out
dec
mov
fucomi
dec
xchg
push
cmp
mov
or
ret
dec
mov
outsb
push
out
or
rorb
fs
lret
xor
test
push
lods
mov
insb
je
in
add
jle
rcrl
fadds
fdivp
sarb
xchg
outsb
mov
cs
sub
jo
daa
cmp
pop
call
ds
push
pop
inc
sub
push
inc
sbb
and
dec
push
icebp
fst
dec
add
negb
inc
jno
jmp
adc
pop
imul
dec
ss
and
enter
lods
loop
shll
and
or
jle
push
xchg
lods
jmp
and
push
pop
pop
test
outsl
or
sbb
les
xor
cmpsl
fdiv
dec
daa
mov
or
fiaddl
lock
in
xchg
outsb
push
test
push
imul
sbb
sbb
pop
mov
sub
mov
xlat
repz
fs
jns
xchg
add
call
and
jmp
sub
inc
call
jg
dec
insb
cli
fmull
fs
jno
dec
lret
adc
add
jns
mov
adc
inc
gs
dec
sbb
outsb
jl
adc
xor
cmp
popf
fs
in
xchg
mov
and
bound
pop
pop
xor
inc
or
lods
mov
stos
mov
outsb
insb
add
cmp
adc
adc
mov
and
cmpsl
and
rclb
pop
xchg
lcall
mov
dec
cs
test
cs
cmp
and
mov
pop
hlt
sbb
and
push
lods
lea
pushf
fstps
int3
addr16
push
dec
inc
cmpsb
pop
test
adc
mov
sub
roll
mov
cli
xchg
adc
jbe
xchg
xor
mov
addr16
mov
jno
cld
fsubs
cmp
mov
decl
in
idivb
or
xchg
aam
enter
jecxz
cli
adc
cwtl
push
popa
cwtl
xchg
xchg
ss
lret
pop
mov
jp
imul
enter
inc
rcr
insb
bnd
lds
movsl
jno
daa
xchg
inc
aam
dec
mov
lods
mov
jnp
ss
sub
or
jmp
sahf
jecxz
lock
mov
xor
aad
out
shrb
mov
lahf
adc
and
mov
addr16
xchg
in
stc
sti
dec
popf
push
fwait
mov
and
cmpsl
or
pop
pop
cmp
push
jmp
sbb
jl
pushf
mov
cs
stos
test
ret
int
into
pop
in
or
incl
jno
lods
xlat
sub
movsb
push
pop
pusha
xlat
mov
les
bound
testb
cmp
xor
sbb
or
shrb
or
xchg
clc
or
mov
inc
cmpsb
xor
in
push
ror
cmc
adc
mov
inc
sub
es
movsb
mov
jl
fiadds
sbb
pop
addr16
adc
inc
mov
mov
popf
sub
or
mov
repz
nop
icebp
inc
pop
fwait
pop
jmp
das
frstor
xor
mov
out
lcall
mov
xchg
pop
or
dec
sti
pop
pop
fadds
push
add
insl
test
popa
mov
sbb
stos
repnz
je
mov
adc
mov
sbb
iret
stos
mov
mov
xchg
mov
mov
out
aam
or
mov
pop
pop
add
sbb
fwait
mov
ja
mov
ret
push
jge
into
rol
lahf
mov
mov
xchg
xor
outsb
mov
orb
add
leave
sysexit
xchg
repz
xchg
jecxz
leave
cmpsl
aad
loop
push
in
push
test
imulb
or
push
lods
jb
roll
neg
sub
push
xchg
mov
push
mov
test
rorl
insb
xor
lea
pop
std
cltd
fcoms
inc
inc
icebp
pop
xchg
ja
shrd
ret
lock
inc
or
adc
arpl
mov
pop
xchg
lock
inc
pop
mov
movsl
push
out
nop
ja
lea
adc
sub
push
dec
adc
sbb
les
imul
mov
loope
lcall
push
inc
out
add
test
movsl
leave
jbe
sti
fistps
sub
and
das
xchg
into
mov
sub
inc
mov
push
push
int
mov
dec
mov
mov
xchg
adc
inc
lock
add
jno
add
cmp
xchg
icebp
cwtl
repz
fsubl
pop
shll
mov
xchg
or
jns
sti
sarl
repz
js
lret
cli
push
ja
push
inc
adc
add
sbb
mov
mov
jmp
repz
add
out
in
pop
nop
cmp
outsl
fidivl
xchg
sub
sbb
icebp
rolb
leave
pop
adc
mov
fsubrp
popa
adc
xchg
enter
arpl
lods
pop
movsl
mov
xchg
inc
adc
dec
dec
xor
jecxz
xor
nop
std
jne
xor
pop
inc
cmp
inc
mov
loop
popa
leave
pop
shl
xchg
loopne
leave
mov
aaa
addb
sub
push
cmp
js
aam
mov
subl
mov
out
inc
pop
adc
std
fistps
mov
push
lock
out
dec
test
sub
ljmp
movsl
adc
stos
cs
sub
cltd
cli
test
iret
xor
out
pop
int
mov
pop
stos
mov
rclb
pop
push
xor
adcl
aas
add
pushf
scas
cli
aas
pushf
or
mov
jae
in
jp
fistpl
lret
enter
jg
cmp
xlat
or
mov
movsl
jmp
je
out
dec
nop
xor
cli
mov
icebp
mov
mov
cmpsb
sub
lock
pop
shrb
sub
jno
pop
push
sbb
xchg
jp
pop
popa
sub
push
push
out
cs
imul
sub
push
xchg
dec
push
lahf
shlb
cld
repnz
or
ljmp
jnp
orl
lret
jl
icebp
and
xchg
out
jg
int3
loopne
stos
mov
scas
push
push
stos
mov
fwait
nop
cld
je
sahf
ret
and
inc
fdivrp
mov
push
jle
cmc
mov
inc
arpl
notl
mov
mov
inc
lret
jns
inc
sub
dec
daa
jg
jecxz
adc
fwait
rcl
repz
add
dec
cmp
add
out
vmaxss
push
add
int3
aam
xor
rcl
jecxz
pop
sbb
cmp
sub
and
aad
test
inc
popa
imul
mov
addr16
pop
sbb
pushf
or
sub
mov
aaa
in
dec
adc
cmp
lret
pushf
movsb
push
dec
enter
outsb
mov
cmp
mov
mov
push
mov
adc
and
aaa
imul
push
daa
adc
sahf
pop
lcall
aas
dec
jno
cld
mov
push
insl
sub
mov
arpl
adc
xchg
leave
shrb
pop
sub
lods
pop
xor
jo
lods
das
in
sarl
movsb
in
cmp
jmp
push
roll
adc
insl
xchg
cmp
das
gs
inc
mov
imul
jle
je
jae
add
and
sbb
insl
lcall
jmp
jl
jmp
data16
std
and
sbb
and
sbb
sbb
jg
or
scas
or
xchg
in
adc
or
cmp
adc
stc
sbb
jae
in
or
mov
clc
cmp
and
mov
in
and
xchg
out
stc
rclb
cltd
hlt
outsb
mov
and
mov
out
add
call
loop
mov
ficoml
lret
in
stos
jb
add
popa
filds
dec
push
out
mov
aaa
jl
je
cmp
imull
lcall
pop
mov
add
and
jge
or
lods
ret
mov
cmp
test
mov
js
or
loop
push
mov
sbb
add
out
jmp
xchg
mov
cmp
sarl
inc
mov
popf
pop
adc
es
dec
mov
xchg
ss
jmp
xor
mov
sbb
enter
les
insb
mov
cli
pop
mov
mov
pmaxsw
and
lcall
pusha
jl
mov
xchg
mov
xchg
and
jl
rclb
mov
cmp
outsb
fstpl
sbb
jge
xchg
sbb
repz
mov
push
leave
jno
ss
or
loope
ret
cmp
out
loop
popf
jmp
xlat
rcrl
aaa
lcall
mov
mov
cmp
ret
or
sbb
cmp
xlat
aaa
scas
rcll
mov
cmp
xor
mov
es
nop
cmpsl
push
arpl
pop
pop
icebp
aaa
xor
add
sub
ret
dec
push
sti
add
sub
add
je
int3
insl
jg
subb
inc
jp
mov
ss
xorb
es
and
das
and
inc
inc
xor
mov
inc
in
mov
fsubrl
push
aad
jecxz
mov
adc
or
popl
push
lds
cltd
ja
cmp
mov
push
jecxz
mov
ljmp
fiadds
scas
add
adc
subl
xchg
dec
out
or
dec
ret
out
and
or
and
stos
sbb
sub
in
xchg
cs
imul
cmp
sti
pop
enter
daa
mov
push
inc
adc
lcall
or
add
xchg
scas
sub
lret
aas
xor
inc
sub
ljmp
adc
std
mov
jp
gs
xchg
jns
lret
lcall
decl
scas
inc
xchg
cmpsb
lcall
and
push
cmpsb
cmp
scas
pop
dec
push
mov
inc
loop
fcoms
push
test
sub
std
int
imul
or
int3
in
stc
lock
fcompl
pop
in
rolb
movsb
push
cmp
add
sbb
xor
sbb
pop
pop
mov
xchg
loope
xchg
dec
adc
inc
mov
or
inc
sub
jg
fistpl
mov
stc
dec
mov
sub
xchg
add
pusha
xchg
pop
sbbl
jns
sbb
shrl
cmp
fisttpl
mov
or
push
xchg
lock
and
mov
loopne
daa
jl
add
pushf
push
mov
je
jb
xor
xchg
jg
and
adc
pop
andnps
int3
cmp
imul
iret
or
cli
jnp
popf
sub
loope
incl
ss
repz
mov
push
xor
icebp
push
insb
xchg
push
aam
or
popf
or
pop
subw
mov
push
push
xchg
call
mov
mov
pop
andb
fucomi
mov
mov
push
dec
sbb
cmovge
adc
pop
out
jbe
fcoms
in
push
xor
jne
scas
daa
cmp
int3
push
nop
icebp
xchg
dec
es
or
lock
push
aad
jmp
sbb
into
loop
aas
fisubl
inc
insl
dec
dec
and
lods
sbb
outsb
push
outsl
mov
push
xchg
jg
add
cmp
sbb
cwtl
xor
dec
mov
inc
push
xor
scas
jp
dec
stos
pushf
jmp
add
add
pop
jecxz
in
dec
push
ds
fdivl
and
and
fucomip
leave
pop
inc
dec
jge
pop
das
push
adc
inc
fidivrl
mov
loop
cmp
fst
xchg
mov
xor
adc
dec
loopne
mov
in
lock
pop
adc
mov
cmp
sbb
arpl
xor
mov
inc
mov
out
cmpsl
div
divb
inc
notb
addr16
test
push
push
push
sbb
dec
scas
add
dec
or
in
inc
daa
cwtl
stos
mov
lock
add
les
adc
mov
loope
sbb
xchg
sub
lret
testl
push
mov
xorb
xchg
add
add
sub
inc
pop
add
dec
jg
scas
stos
in
idivb
lcall
add
clc
ljmp
imul
pop
lea
xchg
mov
js
inc
or
push
adc
adc
jno
add
sbb
cmc
outsb
data16
xor
inc
inc
pop
push
imul
push
push
mov
lds
xor
out
mov
fbstp
rclb
lahf
dec
cmp
xlat
leave
lds
shrl
xchg
or
adc
loope
push
aam
mov
and
push
mov
cwtl
scas
scas
hlt
mov
pop
popf
push
jmp
inc
jecxz
shll
mov
xor
into
xor
add
jg
fisttpll
test
scas
cmpsb
xor
aas
into
adc
test
pusha
outsb
aam
je
les
push
inc
lds
fwait
mov
sti
imul
aas
out
push
push
inc
xor
shl
xchg
mov
pop
pop
nop
jo
xchg
fmull
cmc
fwait
imul
arpl
mov
fcom
insl
test
lods
mov
fwait
push
pop
loope
and
mov
adc
test
cmp
fcmovbe
cmp
sub
xchg
adc
sbb
sbb
pop
push
pushf
js
add
js
and
adc
mov
cwtl
mov
in
mov
stos
sub
test
shll
adc
lods
lahf
sub
xchg
adc
inc
insb
cld
sub
mov
xor
shl
mov
in
sub
aad
add
les
lret
cmp
fwait
jecxz
mov
pop
dec
add
xchg
fwait
mov
jbe
mov
xor
repz
push
mov
sahf
stos
or
sti
into
cmp
lcall
add
ffree
fsubrs
jo
pushf
cmp
sbb
and
push
fldl
bound
fisttpll
sub
cmp
scas
sub
mov
dec
popf
enter
xchg
loop
jnp
loopne
or
pop
stos
jno
push
adc
leave
mov
xchg
inc
rcrb
sbb
pop
sub
mov
jecxz
call
test
cmc
or
cmpsb
repnz
inc
lcall
mov
dec
cwtl
movsl
or
push
inc
sahf
xor
stos
fs
loopne
mov
jne
mov
and
xchg
dec
jg
sbb
sbb
push
push
mov
pop
imul
or
push
pop
sahf
inc
add
and
pop
sub
push
and
loopne
nop
js
sti
cwtl
xchg
fsubr
mov
pushf
sub
shrl
mov
pop
xchg
mov
cmp
dec
mov
xlat
jecxz
orb
es
stos
aas
inc
sbb
out
lea
and
pop
xor
mov
push
lret
adc
jb
das
js
dec
cmp
xchg
out
push
or
int3
mov
hlt
adc
mov
daa
test
das
mov
or
ja
cmp
lret
daa
aaa
fcoms
pop
sub
cmp
xchg
adcl
jb
sub
jp
mov
ret
rorl
out
sub
into
psrad
ss
fsubrs
gs
cld
mov
cmpsl
addr16
lcall
fs
sahf
inc
push
inc
movhps
jecxz
pop
xchg
aam
mov
xchg
dec
mov
movb
inc
outsl
push
in
jb
inc
out
jmp
and
daa
push
cmpl
mov
add
leave
xor
or
negl
lds
popf
mov
rorl
insl
add
bound
xor
cs
jp
sbb
pop
insb
jae
mov
mov
cltd
icebp
cmc
cmp
loopne
xchg
cmp
fcomi
pop
xor
stos
inc
cmp
ljmp
ret
inc
ror
inc
adc
cld
mov
stos
into
push
or
scas
in
lret
xor
out
imul
fxch
arpl
addb
testb
sti
sub
mov
je
data16
dec
sbb
mov
leave
mov
sbb
mov
lods
cmp
mov
sbb
scas
fdiv
enter
cmp
add
test
or
cmpsb
fimull
cmp
in
xchg
fisubs
cmc
mov
lods
iret
pop
push
mov
aad
jb
les
ds
xor
sub
and
xchg
sub
and
daa
sub
pop
mulb
insb
inc
sbb
pop
out
sbb
notb
lahf
or
or
xorl
xorb
fistpl
push
scas
insb
inc
das
daa
stos
pop
xchg
incb
loop
xor
push
lods
pop
lock
fisubs
mov
push
repz
int3
xchg
jb
sbbl
dec
xor
icebp
nop
idivb
je
sbb
gs
dec
add
test
aam
and
shl
out
dec
mov
sub
pop
aaa
js
aam
mov
dec
dec
or
ljmp
or
mov
push
mov
sub
xchg
jb
jae
loope
fimuls
push
dec
daa
mov
ljmp
js
cmp
fimuls
iret
std
outsb
aaa
cmpsb
daa
lods
daa
or
dec
fdivrp
push
aad
inc
aad
cmp
mov
fnstsw
xchg
enter
shl
mov
mov
adc
add
and
call
aaa
ret
mov
push
scas
and
jae
xchg
mov
mov
aas
int
add
pusha
cwtl
pop
xorl
cmp
mov
xor
xchg
push
push
xchg
jnp
fwait
int3
repnz
or
sarl
setbe
mov
in
or
mov
or
mov
mov
sbb
and
lea
loopne
loope
and
xchg
jno
aad
rcpps
dec
out
push
shrb
ds
mov
sbb
push
push
inc
int3
sahf
push
sub
shl
roll
push
insb
mov
push
jne
sub
ja
inc
push
mov
pop
jle
pop
sahf
dec
sahf
mov
cmp
cltd
testl
aas
pusha
and
lret
inc
ja
xchg
das
jge
jo
mov
pushf
hlt
pop
hlt
int3
in
shll
orl
or
fnclex
ret
xchg
das
push
push
inc
xchg
dec
shll
mov
xor
icebp
and
aad
testl
out
mov
jecxz
nop
cmp
das
sti
cmc
add
in
ja
hlt
outsb
mov
add
mov
icebp
jge
lahf
fstl
dec
movsl
lret
or
adc
rcl
test
add
cs
pop
aas
enter
addl
pop
out
pop
repnz
push
push
jns
and
lods
lea
outsb
stos
adc
rorl
mov
test
mov
xor
mov
insl
cmp
fs
add
mov
divl
xlat
movsb
mov
sbb
pop
ror
fisubl
push
xor
fnstsw
ds
xor
inc
lret
xor
aaa
fildl
sub
mov
movsl
enter
mov
inc
or
cmpsw
jo
dec
fsub
push
cs
jb
push
inc
and
mov
fidivrs
test
mov
xchg
inc
mov
jo
inc
mov
ss
cmp
rcrl
mov
call
mov
sub
xchg
dec
jbe
mov
xchg
push
mov
sbb
movsb
mov
lret
fs
clc
push
xor
and
push
pop
jo
and
ja
jg
xchg
adc
xchg
cmp
add
mov
jae
ret
pop
shr
inc
insb
es
js
out
out
pop
push
xor
aaa
out
inc
les
cltd
pop
and
inc
push
cmc
fwait
or
lcall
inc
sbb
pop
or
fldcw
xor
cmp
or
push
xor
ja
sbb
adc
popa
pop
rorl
or
push
inc
jae
aam
lock
sbb
inc
mov
jmp
and
sub
das
lret
mov
nop
jge
bound
ret
dec
push
adc
dec
ret
pop
xchg
inc
aam
cs
ds
loopne
aad
mov
inc
inc
adc
mov
pop
rcrb
xor
testl
aad
jbe
ljmp
and
jecxz
inc
arpl
sahf
mov
xchg
sbb
std
push
outsb
sbb
lods
sbb
ret
sub
fsubr
fcmovne
jg
jl
cmc
fisubs
sub
movw
pop
cli
sub
dec
outsl
leave
add
scas
dec
push
fisttpl
add
or
popa
pop
stos
mov
mov
in
sbbb
sub
pop
jno
in
into
vmwrite
or
xchg
xchg
jbe
mov
and
les
fldt
out
push
xor
jo
andl
lods
lea
scas
xchg
repnz
mov
inc
ds
mov
dec
lahf
cmpsl
sub
pop
outsb
iret
adc
loop
add
in
jle
adc
pop
ret
shll
pop
mov
xor
sbb
cmp
ds
cmp
lea
pop
push
int
icebp
inc
mov
fcomps
mov
test
and
push
cmpsb
push
mov
or
mov
cld
loop
roll
pop
mov
ficoms
and
movsb
mov
pop
test
fs
mov
pop
mov
and
pop
push
push
test
and
loop
cli
and
sbb
popf
dec
lods
inc
xchg
icebp
jbe
adc
aas
jp
lock
dec
sub
add
adc
push
repnz
adc
push
fucomip
push
cmp
and
out
std
push
cwtl
jecxz
pop
imul
ss
ficompl
fs
mov
rcrl
jmp
pop
jno
clc
lods
xchg
jl
je
stc
icebp
push
fucomip
pop
jge
fnstenv
ss
out
push
fldcw
imul
out
cmp
ds
xchg
repnz
hlt
fmul
push
xor
jne
mov
repnz
mov
xchg
xor
pop
call
adc
adc
idivl
xchg
shlb
xor
push
ret
adc
scas
rclb
cmp
push
outsl
int3
jg
rcrl
push
push
fiaddl
sarb
mov
jb
mov
gs
rcll
fsts
rorb
dec
fildl
data16
or
andb
add
cli
es
mov
roll
adc
cmpsb
call
addl
push
js
mov
cli
xor
cmpsl
inc
add
shll
xchg
or
jo
xchg
push
dec
xor
in
test
cmp
das
or
roll
gs
mov
mov
fcomps
enter
outsb
or
insl
push
jmp
mov
orl
adc
int
xchg
pop
sbb
mov
jno
inc
scas
cmpsb
pop
sbb
imulb
cli
out
push
xor
mov
pop
push
data16
pop
lcall
jne
icebp
mov
pop
lcall
push
cmpsl
call
movsb
cld
mov
fadd
xchg
mov
dec
xor
xchg
test
jge
inc
adc
mov
push
sub
ja
dec
dec
push
shl
mov
leave
mov
out
sbb
push
pop
das
loop
out
adc
xor
out
mov
sbb
adc
repnz
pop
fcoms
dec
std
dec
ror
aas
in
pop
ljmp
js
dec
mov
xchg
das
xchg
insb
std
pop
mull
hlt
mov
or
loope
jae
adc
xchg
sbb
inc
push
fistpll
out
adc
je
xor
daa
xchg
mov
push
lret
loop
xor
ljmp
imul
rcll
sbb
mov
jno
mov
xor
jge
orb
jl
push
fwait
aas
ljmp
aad
sarl
mov
push
int3
push
ret
and
iret
sbb
loop
inc
insl
ret
stos
adc
lea
ds
test
movsb
sbb
mov
mov
push
rolb
mov
xor
daa
outsl
popf
hlt
iret
cli
loop
dec
test
loopne
xchg
sub
addr16
shr
cld
add
jg
sub
xchg
xor
ret
iret
fwait
xor
setne
test
adc
jb
insb
insl
and
sub
popf
cmpsl
add
in
sub
stos
mov
push
leave
xchg
xor
pop
sbb
inc
push
sub
test
out
or
movsl
mov
clc
push
push
scas
adc
rorl
push
lahf
nop
cmp
lcall
cwtl
mov
popa
push
pop
jp
imul
push
test
shrl
lods
inc
mov
mov
aaa
sub
or
test
xchg
fsubl
outsl
je
inc
stos
adc
and
push
adc
inc
test
lea
outsl
mov
das
push
scas
cmp
imul
cwtl
sub
or
xchg
sbb
xchg
or
loope
mov
jl
xchg
mov
enter
and
fisttpll
mov
dec
test
out
sahf
mov
inc
cmc
jbe
insl
cmp
lods
loopne
icebp
inc
imul
fnstcw
into
jne
jg
or
xchg
adc
stos
aaa
subl
dec
out
inc
outsb
xor
mov
mov
push
push
xchg
lods
adc
insb
mov
lock
ds
orb
mov
cmpsb
data16
sbb
insb
xchg
addb
xchg
test
push
or
or
cmp
std
mov
add
fdivs
dec
test
cmp
rorb
inc
hlt
jmp
push
inc
ss
lcall
cmp
sub
in
repz
mov
xchg
fld
jo
fs
loop
cmp
loop
mov
aaa
lret
push
je
lcall
insb
xchg
fldt
insl
shr
add
or
ss
fcoml
aad
cli
aas
mov
sbb
cmp
popa
inc
iret
rclb
cmp
ljmp
scas
cld
or
arpl
dec
dec
cmpsb
mov
pop
mov
xchg
jns
popa
jb
fldenv
sbb
sub
pop
mov
fimuls
xor
divl
lret
fwait
adc
sarb
imul
sub
out
xchg
fdivl
ss
repz
jae
jbe
iret
add
ljmp
lea
or
cmp
pop
fmull
cmc
fsubs
xchg
sbb
lds
xor
es
in
insb
and
in
pop
in
jg
inc
inc
push
pop
xchg
dec
repz
out
lea
add
sbb
xchg
cmpsb
cmc
movsl
xchg
and
mov
sub
jo
cmpsb
jl
push
cmp
mov
and
adc
push
push
lahf
sbb
sti
sub
lcall
or
jp
imul
arpl
and
sti
rolb
mov
inc
jae
sub
adc
jg
mov
and
add
cmp
jecxz
pop
add
add
ficoms
mov
outsb
mov
sti
lock
inc
andl
pushf
xchg
loopne
xchg
and
pop
mov
mov
jl
cmp
xchg
mov
shrb
and
cmpsb
dec
icebp
sbb
xor
pop
pop
scas
jae
std
mov
pop
cmpsb
pop
mov
lret
lods
dec
dec
push
adc
sarb
mov
mov
xor
iret
je
test
mov
sarl
adc
ror
fildll
insb
ja
xchg
loope
sbb
fmul
popa
in
pop
inc
pop
sbb
cs
popf
aad
dec
xlat
stos
aam
pop
popa
jnp
mov
cmp
std
push
arpl
fsub
adc
lahf
mov
adc
stc
inc
or
push
mov
jnp
or
mov
mov
push
aas
xchg
mov
outsb
mov
into
mov
add
scas
scas
mov
aaa
mov
sbb
icebp
sub
lods
out
in
test
pop
je
dec
stc
sub
mov
pop
outsl
mov
int
pop
sbb
std
addr16
add
pop
mov
scas
leave
and
add
es
std
pop
nop
sbb
pop
rorb
adc
mov
lea
scas
icebp
fs
fists
scas
sub
xchg
lret
sti
test
mov
orl
push
ja
inc
cmpsl
rcll
jne
push
leave
outsb
fistps
in
add
or
shl
sahf
push
pop
adc
rcrl
mov
mov
arpl
std
sti
sub
jp
leave
sbb
ret
rol
imul
stos
mov
mov
push
js
in
sbb
xlat
jecxz
shrl
and
shlb
lock
outsl
mov
sub
jo
jae
clc
lahf
xchg
inc
pop
push
test
ja
xor
mov
mov
pop
jmp
jmp
mov
ret
xlat
mov
aad
mov
scas
dec
jle
pop
mov
rcl
or
sbb
adc
push
outsl
xchg
mov
cmp
dec
clc
xor
mov
push
mov
repnz
lret
and
hlt
adc
das
sub
xchg
pop
or
pop
dec
lea
pop
and
scas
xor
mov
jo
push
je
cs
rcll
mov
imul
mov
andb
fs
push
push
adc
int3
push
mov
pusha
fucomi
out
cmc
dec
mov
pop
test
or
stos
cmpsl
inc
dec
and
mov
xor
clc
int3
mov
cmc
test
pop
jne
xchg
call
and
jns
push
push
inc
or
fcompl
xchg
xchg
cld
lahf
jae
mov
in
xchg
int
mov
movl
add
ljmp
jg
shrb
or
push
data16
dec
inc
loope
ret
pop
mov
nop
aam
addr16
lods
cmpsl
mov
mov
add
mov
jecxz
cmc
fwait
mov
push
mov
inc
xchg
mov
sbb
dec
jecxz
mov
in
or
mov
inc
or
test
and
stos
xchg
stc
and
xchg
xor
cmp
in
mov
test
popf
std
neg
xchg
inc
lods
fwait
mov
fcmovnu
mov
and
test
out
push
jb,pt
push
mov
out
loope
out
cmpsb
test
arpl
loope
adc
pop
cli
test
sarb
xor
fimull
add
push
orb
imulb
addr16
stos
inc
inc
sbb
lahf
stc
pushf
jmp
pusha
loope
fwait
inc
xor
cwtl
test
ror
bound
push
daa
cld
mov
mov
pop
jl
fsubs
inc
lods
cmp
and
xchg
xor
stc
rolb
lods
aaa
xchg
js
xchg
push
lock
lret
sar
add
xchg
or
jg
sbb
shrb
shlb
int3
ss
addl
mov
lret
iret
pop
fmuls
popf
or
push
scas
mov
imul
xchg
lret
jb
pop
stos
inc
in
adc
hlt
dec
inc
pop
adc
mov
pop
pop
stos
loop
iret
cmp
out
jge
jno
mov
in
std
jo
in
stos
les
pop
push
push
shl
outsb
lcall
pop
aaa
mov
add
xchg
mov
fcmovu
dec
inc
xor
add
pushf
or
push
data16
push
xchg
stos
xchg
jmp
fldl
lcall
xchg
scas
pusha
fisttpl
aas
notl
sbb
inc
lret
shll
xor
xor
push
imul
cld
xchg
mov
cmp
xor
adc
cmp
dec
pop
sbb
and
into
jl
dec
shl
stos
in
add
cld
mov
jae
mov
sbb
test
inc
outsl
adc
push
dec
and
mov
xchg
insb
or
xchg
sbb
out
clc
add
iret
mov
inc
pop
and
lds
mov
sub
scas
mov
nop
testl
shrl
fidivrl
insl
and
mov
in
in
test
orl
imul
pusha
loope
push
mov
push
adc
push
push
jns
mov
or
mov
lcall
loope
fmul
mov
dec
inc
dec
push
or
jno
mov
ljmp
push
push
push
pushf
pop
pop
adc
jbe
add
loop
dec
mov
rorb
inc
in
pop
insb
fildl
mov
add
adc
outsl
xchg
and
ja
push
add
inc
lcall
lret
leave
xorl
cmp
lock
or
loope
jbe
push
mov
mov
lods
pop
adc
mov
out
or
insl
mov
js
test
jmp
and
inc
add
xchg
cmpsl
pop
pop
and
lock
dec
pop
divb
mov
loope
in
loop
aam
sub
rclb
mov
in
pop
sbb
mov
sub
test
xor
mov
dec
in
inc
test
cmp
lea
std
mov
lods
pop
dec
fisubl
sub
outsl
fcomp
xlat
mov
lock
out
arpl
fwait
dec
popa
mov
ficomps
sbb
imul
mov
subb
enter
add
pop
popa
lods
dec
jecxz
or
pop
inc
jg
add
push
sahf
fwait
in
cmp
mov
lds
mov
addr16
cmp
orb
out
jb
mov
sbb
sbb
xor
in
adc
movsb
jp
push
xchg
push
xor
je
jb
xor
cwtl
mov
inc
outsl
cmpl
shll
pop
xchg
bound
mov
daa
lods
jae
mov
sbb
popa
int3
lds
std
les
adc
nop
scas
mov
dec
ret
xor
mov
pop
sbbb
mov
lahf
cmp
cli
xchg
out
and
cs
dec
loope
pop
outsl
stc
in
sbb
and
cmpsl
adc
xchg
xchg
and
sub
cmp
xchg
out
into
cmp
test
lret
xchg
pop
mov
or
scas
jae
xor
xchg
adc
cmpsb
imul
push
mov
add
mov
jle
xor
inc
xchg
add
push
push
dec
stos
cltd
fstcw
mov
push
pop
lock
or
push
pop
jnp
mov
cmp
enter
mov
fcomi
inc
mov
push
mov
ret
xchg
mov
fninit
dec
aas
dec
or
add
fmuls
lcall
lahf
inc
or
repz
adc
mov
cmc
push
xor
and
pusha
leave
cmp
sub
popf
rcrb
enter
xchg
or
or
xchg
push
in
push
xchg
flds
repnz
aad
mov
arpl
rcrb
xor
pop
lock
lea
in
cmp
outsl
push
or
in
jg
outsl
mov
sub
sarb
push
out
nop
cwtl
addr16
adcl
cmp
sbbb
out
icebp
add
and
mov
ret
add
jmp
addl
daa
xor
mov
lods
jmp
mov
inc
mov
fdivp
mov
imulb
scas
insl
push
sub
mov
inc
push
xorb
ret
mov
add
pop
jo
inc
mov
pop
cmpsb
mov
aas
dec
cmpsb
pop
push
mov
ja
pop
rcr
mov
ja
dec
xchg
dec
jns
sbb
mov
ret
adc
jae
push
out
movsl
bound
mov
or
add
sbb
and
adc
mov
push
and
rorl
sbb
lret
add
aam
jg
push
cmp
sub
mov
or
loope
out
lea
adc
or
pop
sar
mov
add
mov
call
aaa
imul
mov
hlt
or
aam
inc
xchg
imul
data16
outsb
push
stos
mov
mov
rolb
add
xchg
cmp
cmc
cmp
pop
mov
dec
xor
out
mov
xchg
call
sbb
movsl
fstps
inc
in
sub
leave
notl
fcoms
xlat
sub
fbld
xor
and
add
dec
jmp
push
daa
jg
pop
jp
and
adc
cmp
lea
mov
cmpsl
xor
pop
das
test
mov
loop
subl
cli
or
scas
cmc
mov
test
add
loopne
xchg
shl
imul
jge
pushf
mov
adc
jp
xchg
out
xor
push
rclb
cmpsl
pop
loope
roll
loop
jp
mov
cs
scas
negl
inc
push
mov
out
inc
cmp
rcrl
scas
jecxz
stc
add
jnp
mov
push
stos
inc
jmp
fisubrs
js
data16
xor
iret
mov
jmp
lcall
xor
add
pushf
pop
jle
cwtl
jne
or
mov
es
push
lret
add
movsl
fdivrl
loopne
mov
mov
push
inc
sub
sub
inc
fsub
frstor
push
xor
mov
std
in
xchg
sbb
and
gs
pop
rcll
ss
shr
gs
lcall
adc
pop
pop
aad
push
iret
sub
sub
fnstcw
mov
jmp
mov
lcall
mov
mov
sarl
add
in
or
inc
pop
xor
dec
loopne
mov
mov
idiv
les
mov
imul
repz
add
mov
mov
inc
push
and
and
xchg
adc
xlat
xor
jbe
mov
push
push
and
shll
fnstenv
pop
in
jbe
sbb
repnz
lret
and
mov
mov
push
push
cmp
bound
in
jbe
fdivp
stos
xor
pop
lcall
lods
outsb
scas
imul
lret
push
pop
imul
xorb
pop
cli
mov
pop
into
imul
arpl
jle
mov
adc
movb
push
pushf
frstor
aaa
int3
cld
outsl
jae
xor
or
iret
fildl
add
jge
pop
sub
in
add
push
pop
mov
cli
lret
push
js
lea
xor
incb
lret
adc
sbbb
mov
xor
int
inc
xor
lock
jp
mov
loopne
je
and
fisubrs
jnp
xor
xor
add
xchg
cmp
lcall
sbb
dec
inc
test
jno
xor
int3
lods
inc
pop
dec
jb
stos
dec
std
repz
pop
xor
adc
and
jne
test
xchg
add
sbb
add
scas
mov
mov
out
outsl
rcrb
sbb
ja
jmp
sahf
xor
in
outsl
or
shlb
aaa
pop
sbb
insb
lret
clc
xchg
icebp
fistps
xor
repz
push
mov
jmp
pop
ss
jmp
mov
jg
sahf
out
gs
jno
dec
clc
repnz
aaa
addb
pop
bound
sti
mov
jl
push
loope
loope
add
popf
cltd
sub
lcall
fnstcw
ss
and
pop
or
push
dec
and
jnp
xchg
leave
jne
push
inc
lea
cmpsb
mov
mov
adc
jae
sub
sub
aas
fs
lcall
cmp
fwait
inc
sbb
lock
dec
data16
addr16
mov
inc
push
into
pop
push
aad
mov
and
jmp
push
orl
or
in
sarl
icebp
loopne
xchg
xor
sbb
cmpsl
dec
xchg
jmp
push
push
inc
aaa
mov
ss
aad
add
roll
pop
push
out
sbb
cmp
aaa
outsl
and
arpl
insl
push
out
pop
dec
leave
es
ficoml
test
out
cmc
icebp
push
gs
lahf
int3
xor
dec
js
add
dec
stc
daa
out
mov
inc
add
iret
jno
in
and
out
cltd
icebp
leave
sbb
push
sub
iret
pop
xchg
xchg
and
xchg
add
mov
inc
addl
jp
cmp
dec
xor
pop
mov
faddl
cld
movsl
cmp
cmp
popl
xor
fimuls
sti
mov
sub
push
lea
pop
in
sbb
push
pushf
loop
pusha
xchg
imul
in
pop
fiadds
mov
dec
dec
pusha
push
xor
push
xchg
es
add
fdiv
iret
sbb
adc
mov
cmp
aaa
scas
or
sub
bound
js
jecxz
popa
inc
in
mov
xor
les
out
sbb
push
xlat
or
out
loop
lret
pop
mov
sbb
jle
mov
loopne
mov
mov
out
lret
lds
push
mov
test
in
addb
cmpsb
pop
push
gs
pop
ljmpw
in
stos
xchg
sbb
fbstp
pop
mov
mov
js
imul
loop
pop
fldenv
sbb
or
inc
add
or
mov
lahf
loopne
mov
cwtl
sbb
cwtl
dec
ss
or
push
jge
movsl
or
mov
movsl
test
mov
stc
push
or
jl
xchg
mov
and
mov
and
jae
cmpsl
pop
fnstcw
jmp
push
or
popa
sahf
and
ficoml
out
std
mov
mov
adc
mov
and
sbb
mov
cs
inc
out
scas
xlat
orb
mov
add
xor
daa
bound
lods
iret
popa
sub
adc
loop
arpl
and
mov
pop
cmp
or
outsl
cmc
xor
xor
jg
fmulp
inc
loope
je
pop
jns
or
fcompl
scas
push
xchg
dec
shll
dec
jle
loope
sbb
mov
lods
lods
arpl
testl
popf
mov
adc
lods
pusha
enter
jno
dec
inc
sbb
fadds
jge
loopne
loope
lds
or
xchg
insl
imul
lcall
or
adc
mov
or
xchg
mov
popf
loope
hlt
popa
add
sub
mov
pop
add
inc
cwtl
jbe
ljmp
push
inc
in
dec
les
imul
adc
out
lock
in
jl
int
lret
cmpsb
xor
sub
stos
mov
xchg
iret
lock
inc
and
dec
imul
cmp
cmp
ljmp
inc
cli
cmp
xchg
lret
push
jno
mov
jp
ja
frndint
popf
push
jnp
dec
out
nop
cld
mov
pushf
mov
test
push
out
pop
ret
xor
fldt
test
movsb
aas
in
mov
gs
enter
ficoml
mov
jae
call
mov
xchg
add
jb
std
cmc
push
jae
lcall
push
gs
sahf
sti
push
adc
add
pushf
push
mov
xor
mov
mov
xlat
or
and
in
xchg
mov
push
roll
jge
xchg
scas
inc
lods
hlt
pop
mov
imul
outsb
pop
rol
bound
xlat
or
and
mov
int3
xor
fcomp
fdiv
popa
push
aad
push
mov
lcall
adc
push
hlt
push
add
jp
fsts
rcrl
mov
xchg
lea
jno
xor
outsl
aaa
and
adc
mov
jmp
repz
shlb
xchg
dec
add
adc
aas
xchg
dec
xchg
xor
mov
push
push
mov
and
cs
rcrl
dec
nop
cmovs
aam
cmp
add
rcll
push
sub
imul
mov
pop
fisubrl
fucomip
mov
int
mov
call
popa
lea
jmp
jae
out
sbb
pushf
bound
dec
jnp
int
xchg
xchg
sbb
kxorb
dec
int
int3
mov
or
jo
and
mov
mov
stos
repz
sahf
jg
xchg
mov
cli
add
out
mov
ja
xor
iret
enter
mov
and
xor
les
and
dec
mov
or
xor
popa
add
arpl
das
rclb
push
push
xlat
mov
cld
pop
pop
mov
mov
rcrl
pop
xchg
and
gs
mov
mov
cmp
sub
aad
xor
and
and
insb
nop
out
add
insl
pop
iret
push
jne
lea
fnstcw
xchg
jmp
aad
dec
scas
jmp
js
subb
and
out
les
jne
push
sbb
sub
or
xor
sub
xchg
ret
cmp
adc
je
mov
pop
jp
and
inc
adc
jle
sub
xorl
rcll
ficoms
jo
cmp
dec
lods
mov
sub
out
lret
shll
jne
inc
xor
int3
std
xlat
shl
pop
xchg
pusha
jne
xor
sub
or
dec
repz
mov
and
xchg
ljmp
cmp
mov
or
lds
aas
inc
sub
ficompl
cmpsb
mov
add
xchg
repnz
lret
std
clc
cs
xorb
xchg
dec
stos
mov
outsb
push
repz
hlt
jl
iret
push
inc
sbb
aas
test
dec
stos
xchg
xchg
pop
addr16
xor
movsb
push
sbb
inc
icebp
jp
jnp
sbb
jg
cmp
xlat
cmp
cltd
push
lahf
xchg
inc
sub
cli
sar
cmpb
xor
add
jg
cld
stc
and
jg
sub
es
mov
movb
scas
sbb
imul
ficoms
adc
mov
sub
pop
pushf
inc
adc
jecxz
lahf
push
push
push
push
lahf
int
xchg
jno
neg
shrb
push
dec
or
or
lods
jns
cltd
adc
mov
fs
adc
lret
and
dec
je
xchg
xchg
les
mov
sbb
jg
xchg
movsl
jne
jno
jg
jg
mov
cmp
mov
in
es
enter
shl
psubb
idiv
push
xchg
inc
cmp
cmc
adc
mov
ds
push
fwait
jns
stc
push
xor
dec
push
mov
mov
mov
fmull
es
mov
push
fwait
shll
in
in
les
mov
jne
jmp
divb
push
cmp
jo
popf
jo
fildll
and
aas
pop
adc
push
daa
pop
rcl
out
popa
mov
adc
push
push
dec
popa
adc
dec
and
jb
mov
push
xor
insb
dec
rol
andb
outsl
mov
push
ret
sbb
orl
cwtl
mov
out
stos
sub
sahf
loop
adc
popf
shlb
shll
jecxz
js
inc
add
jle
addr16
sbb
fwait
dec
xor
test
jl
call
jo
imul
jge
xlat
stos
fs
mov
in
in
ds
xchg
push
bound
ret
lcall
lods
xor
lods
hlt
jno
pop
sti
mov
xchg
jno
add
dec
mov
dec
aam
push
mov
and
sbb
scas
cmpsl
dec
pushf
dec
flds
notb
mov
pop
jmp
sbb
test
daa
sub
aam
push
mov
nop
inc
inc
int3
inc
enter
jl
xor
pop
dec
jge
sahf
clc
xor
lret
mov
push
or
or
mov
sbb
mov
mov
or
loopne
jmp
lods
pop
push
data16
out
test
sbb
cmp
mov
sbb
add
out
in
adc
jae
xchg
pushf
cmp
iret
call
shll
mov
mov
lcall
cmp
xor
aas
push
shlb
test
aaa
out
add
movsb
leave
pop
cld
ljmp
aad
cmc
cmpsb
cmp
dec
adc
sti
and
test
xor
enterw
push
mov
xor
jnp
mov
je
imul
popa
cli
cmp
cmp
int
mov
stos
mov
pop
adc
lods
fldenv
cmp
xor
lods
in
repz
sub
push
or
pushf
jp
push
cs
movsb
add
testl
repnz
xchg
sbb
cli
mov
or
dec
addr16
movsl
add
add
testl
dec
gs
cwtl
bound
int3
lock
ljmp
ret
es
mov
jbe
inc
dec
pushf
mov
lds
movsb
stos
stos
aam
xor
cli
jecxz
pop
je
or
and
xchg
pop
sub
loope
cltd
outsl
and
test
xchg
push
inc
jge
and
sbb
jp
sbb
push
add
inc
xor
int3
xchg
inc
outsb
arpl
call
jo
xchg
adc
lcall
add
sub
cmc
pop
push
jmp
jne
aad
push
adc
loopne
and
daa
add
orb
pop
sub
sbb
rdpmc
sub
jae
neg
pop
clc
push
mov
das
cld
fadd
mov
sbb
fs
push
dec
call
pop
jns
xor
fs
mov
test
jecxz
xchg
inc
gs
mov
cmc
xor
push
or
ret
mov
cmpsl
cmpsl
adcl
push
mov
ficoms
je
jp
lods
mov
dec
sbb
jmp
xchg
sbb
mov
xchg
shrl
push
fisttpl
jnp
pop
add
test
push
or
enter
std
xchg
sarl
inc
sub
mov
scas
pop
add
inc
mov
movsb
pop
enter
xlat
push
mov
adc
ret
int
insl
fisttpll
mov
jns
sbb
les
mov
pusha
push
adcl
xchg
push
test
sub
and
inc
xchg
mov
push
inc
add
mov
cmp
dec
xor
cmpsb
sarl
dec
test
notb
in
mov
push
xchg
mov
or
mov
xchg
add
cld
andb
xor
mov
inc
in
adc
dec
adc
in
stos
mov
jmp
ret
test
jg
data16
rcrb
adcl
stos
test
stc
outsl
sahf
loope
sbb
mov
insb
cmpsl
cmp
jne
es
insb
in
data16
dec
xor
mov
arpl
push
cwtl
out
aad
cmp
pop
jne
es
dec
aas
rorl
push
sahf
mov
sbb
xchg
push
mov
mov
test
mov
jns
negb
out
ret
in
push
ds
jecxz
in
jle
jmp
mov
inc
adc
sahf
inc
imul
dec
nop
ljmp
mov
add
push
add
lcall
cltd
ret
pop
imul
cmp
cmp
or
dec
cs
fiadds
add
pusha
mov
ret
inc
fs
adc
data16
sbb
and
and
aaa
cmpsb
xchg
ss
sti
cmc
fmull
fnstenv
xchg
and
mov
mov
jmp
mov
pop
in
mov
scas
pop
dec
xlat
sbb
dec
lcall
lds
std
adc
fistpl
adc
in
add
mov
lahf
mov
mov
dec
inc
fiaddl
mov
aam
testl
movsl
xor
add
mov
lcall
xor
cs
inc
cld
push
ja
mov
cmp
sarb
pop
inc
scas
cld
inc
inc
pop
imul
push
xchg
mov
test
clc
std
xchg
sahf
pop
je
test
test
aad
std
lea
dec
lds
add
cmpsl
add
cld
and
and
xor
test
rorb
pop
stc
in
lret
xchg
xlat
dec
jb
mov
adc
in
inc
xchg
cmc
pop
jo
clc
lret
mov
addb
cli
int3
insl
xor
sbb
dec
loopne
stos
sahf
cmpl
xor
mov
mov
or
or
imulb
push
and
push
mov
jnp
push
inc
mov
xor
shlb
fcoml
push
add
cmc
dec
jg
out
pop
cmp
push
cli
push
pop
hlt
rcll
aaa
ljmp
sbb
or
outsl
cmp
aad
movl
xor
add
mov
out
fsin
pop
ja
cmc
subb
push
pop
sbb
pop
push
out
ret
inc
ja
dec
sbb
test
les
push
mov
dec
push
xor
jmp
xor
sub
xchg
adc
movsl
and
xlat
jmp
cltd
pop
and
loope
lock
movsb
mov
int3
out
orl
leave
sub
xor
jg
jb
in
inc
jmp
cmc
in
ds
pop
cltd
loope
cltd
cmc
pop
leave
cmp
lods
lods
cmp
repz
shll
pop
cltd
mov
std
adc
imul
into
lds
ds
xor
xorl
fnstcw
mov
xor
cmc
mov
or
inc
fdivs
mov
cli
pop
lret
adc
inc
sub
mov
cmp
aas
ret
or
mov
icebp
cli
cmpsl
pop
cmpsl
mov
cmp
push
push
sub
push
sub
ret
outsb
out
pop
sub
pop
xchg
push
fistps
add
or
addr16
sahf
push
add
cmp
add
roll
push
add
pushf
roll
sbb
cmc
in
and
es
mov
bound
fcmovnbe
push
js
jle
popf
out
shrb
sub
popf
into
mov
xorl
dec
mov
pop
das
sub
cmp
sub
push
push
jno
stos
cmp
mov
test
jb
out
mov
xchg
test
outsl
pop
outsb
in
mov
mov
test
push
aad
fdivs
lock
in
mov
adc
cmp
push
pusha
pusha
pop
shlb
xchg
fildl
pushf
cmc
xlat
fisttpl
inc
js
out
cmpsb
mov
xchg
addr16
sbb
sbb
or
adc
mov
pop
loop
jnp
jo
mov
out
cmp
sub
xor
jmp
cmp
int
jge
mov
pusha
dec
or
pushf
lret
push
add
sarb
sub
fcmovnb
sbb
sub
xchg
dec
dec
mov
sti
ret
add
xchg
xchg
repz
mov
mov
lahf
addr16
lret
arpl
rorl
xchg
enter
cmpsl
dec
pop
jmp
xor
inc
mov
pop
add
rcrl
sbb
fucomp
movsb
mov
cmp
jnp
jle
imul
and
enter
adc
dec
scas
xchg
movsl
add
cmpl
lahf
shrl
repnz
xor
int
add
scas
cmp
ret
mov
hlt
inc
pushf
jecxz
hlt
jge
mov
adc
inc
mov
push
insl
mov
hlt
scas
fistl
shrl
test
xchg
outsl
dec
fistl
roll
sub
outsb
cmp
push
imul
pop
aam
mov
push
cmpb
sub
fxch
and
cmp
rolb
addr16
lahf
int
jae
mov
outsl
mov
stos
sub
mov
dec
test
push
mov
int
inc
mov
push
cs
pop
xchg
dec
fldl
sub
cmpsb
jmp
sub
cmp
xor
jno
xchg
inc
insb
dec
jle
daa
inc
xlat
les
rcrb
scas
js
xchg
cmp
push
ljmp
xchg
cwtl
movsl
jo
mov
adc
outsb
jg
push
cli
and
mov
cmpsl
xchg
sub
enter
push
out
inc
push
std
xchg
lds
jae
dec
cwtl
aad
add
stos
and
int
dec
imul
push
dec
aas
jnp
sbbb
pop
dec
int
iret
push
std
cs
lret
sbb
jb
je
imull
sti
ljmp
sub
push
fstpl
inc
adcl
pop
add
outsb
lahf
mov
incb
xor
or
xor
cmp
ficomps
fs
fcoms
aas
or
dec
mov
adc
pop
scas
fldcw
insb
pop
sub
in
cmc
or
bound
push
outsl
mov
cltd
sub
push
lret
call
mov
fxch
pusha
pushf
mov
movsb
stc
ljmp
pop
int3
out
and
mov
inc
mov
mov
cld
or
loopne
pop
ret
mov
dec
dec
jo
icebp
or
test
inc
test
sbb
add
push
int3
adc
sbb
push
lret
xor
push
cmp
imul
leave
mov
mov
push
stos
test
dec
mov
pop
ljmp
jl
sub
pusha
and
ret
push
jmp
lahf
add
cmp
loopne
pushf
push
mov
pusha
xchg
rcl
jmp
icebp
stc
add
push
fsts
jle
inc
sbb
ret
sub
dec
ret
lret
jbe
fs
inc
sub
addb
test
and
loop
outsl
jge
adc
iret
scas
push
mov
mov
adc
fwait
lea
mov
push
arpl
add
push
and
and
mov
dec
ja
add
cli
icebp
cs
dec
popf
mov
fiadds
and
adc
mov
xchg
adc
inc
add
pop
cwtl
movsb
cmp
aaa
hlt
sbb
mov
jne
test
mov
cwtl
cmp
push
push
dec
jecxz
lahf
dec
loop
lods
dec
mov
outsl
push
push
xchg
add
stos
dec
adc
subl
scas
sbb
adc
push
inc
or
inc
dec
mov
scas
and
push
loop
rcll
push
or
dec
fsubl
dec
int
nop
daa
imul
out
adc
mov
insb
fwait
push
es
addr16
testb
sub
xor
fldenv
inc
rcll
js
inc
fdivrs
add
xchg
cmp
pusha
shll
ja
in
enter
pop
mov
nop
daa
push
das
or
test
adc
and
lea
and
jo
add
call
mov
sbb
xor
insb
fldcw
mov
or
xchg
js
dec
adc
pop
lahf
fistps
inc
xchg
loope
mov
add
dec
adcb
lahf
push
testl
in
dec
and
pop
mov
xchg
xchg
sub
hlt
cmp
ljmp
mov
sub
lcall
inc
nop
push
fnstenv
jnp
jle
ss
pop
loop
sarb
outsl
push
inc
test
scas
outsb
fsubs
arpl
dec
js
movsb
and
imull
jns
ja
adc
movsl
pop
lock
cli
and
mov
push
mov
std
inc
adc
scas
pop
push
daa
fidivl
sub
insl
cmpsb
inc
pop
icebp
add
cmc
jp
pop
cmp
add
mov
addr16
and
ljmp
sub
lret
orl
hlt
add
and
aaa
adc
imul
adc
push
sbb
jo
gs
je
adc
dec
lret
jno
or
ror
out
xchg
in
cli
push
mov
js
lahf
pop
xchg
add
insb
xchg
mov
push
xchg
pop
mov
ret
stc
add
fisttpl
sbb
push
pop
cltd
adc
xchg
ljmp
add
into
fnsave
stos
out
pop
adc
xorb
cld
pusha
sub
adc
pop
test
or
std
add
add
mov
xor
xor
push
sub
xor
icebp
out
fwait
pop
adc
mov
sbb
mov
jmp
repnz
push
push
mov
pop
mov
jmp
xchg
xchg
fstl
repnz
dec
arpl
inc
and
fdivrs
mov
loopne
cld
repnz
lods
sub
xor
in
pushf
or
mov
mov
inc
rcrl
jne
clc
cs
xor
cmp
dec
stos
push
fwait
inc
int
int3
xor
mov
inc
fs
or
dec
sarb
xchg
rorl
in
push
push
int3
xor
xchg
mov
lds
mov
inc
cmp
cmp
mov
dec
mov
test
lods
add
ffree
std
and
push
outsl
sbb
xchg
cwtl
mov
jno
push
insl
add
and
sti
mov
pop
add
mov
test
pop
adc
cs
jbe
add
lret
cmpsl
rclb
xchg
mov
in
fsubrs
xchg
and
cs
movsb
xor
xor
dec
pop
inc
and
insb
cmpsb
test
or
mov
addl
sub
inc
xchg
cld
xchg
or
lahf
sti
subl
inc
dec
imul
ss
daa
jb
mov
imul
jne
in
shr
push
pop
jecxz
vcvtps2dq
int3
in
jns
cmpsl
shrb
lock
inc
push
mov
fisubrl
dec
into
test
dec
mov
test
xor
add
inc
sub
cmovp
lcall
sub
and
push
mov
mov
lods
xchg
and
mov
repz
and
mov
sbb
leave
adc
sti
cmp
mov
pop
mov
test
push
pop
in
jno
pop
jmp
testl
daa
cmpsb
subl
aam
mov
aad
rcll
cmp
fs
cmp
pop
push
movsl
test
inc
jnp
lret
mov
add
mov
push
outsl
sbb
int
add
stc
lahf
xchg
cmp
cmp
or
sub
add
lret
add
fsubl
jno
add
push
xor
mov
cmp
xchg
and
cmp
mov
xor
lea
mov
xchg
sbb
stos
stos
jnp
call
mov
andl
mov
xchg
cmp
cmc
xchg
cmp
mov
aad
stos
cmpsl
sbb
push
test
mov
inc
lret
cmpsb
mov
notl
clc
daa
outsl
inc
mov
xchg
pop
fstps
sbb
movsb
dec
fistpll
pop
mov
inc
sbb
fldt
iret
sbb
xchg
xlat
cmc
sbb
add
push
and
sub
xor
call
out
xor
xchg
adc
xchg
fwait
sub
or
ja
fsubrp
cwtl
and
pop
dec
inc
mov
inc
sbb
in
aad
ljmp
dec
and
mov
jbe
xchg
ljmp
xor
pop
cmpsl
jne
enter
ja
loop
int3
or
add
cs
pop
push
ret
addr16
jno
dec
inc
cltd
leave
xor
jle
and
outsl
pop
xchg
xchg
scas
sbb
arpl
sarl
call
aam
out
sub
imul
test
cmp
fidivl
dec
mov
mov
hlt
popf
inc
sub
xlat
sbb
inc
dec
sbb
ss
push
sbb
cs
outsb
cmp
out
sti
cwtl
aaa
mov
or
movsl
xor
movsl
mov
outsl
xor
imul
xor
das
test
inc
stos
shl
add
fisubl
push
jno
push
xlat
pop
jns
int
dec
das
mov
inc
ss
fs
arpl
int
cmp
add
jbe
pop
pop
mov
icebp
sbb
xchg
bound
pushf
rcr
and
shlb
out
scas
scas
or
jecxz
call
out
mov
sub
arpl
outsl
testl
push
pop
pusha
jle
fimuls
add
add
imul
cmp
mov
adc
insl
fsubl
and
xchg
xchg
lock
jecxz
fcoml
sti
into
pushw
or
mov
repnz
ss
mov
dec
fwait
fwait
insl
xchg
xor
movsl
scas
lret
imul
mov
pop
aas
and
fsubs
add
dec
cmp
sub
stc
xchg
mov
pushl
jo
mov
stos
frstor
js
sbb
pop
pop
out
push
cmp
orb
push
dec
lcall
je
add
jae
and
mov
fistpl
movsb
cmp
pop
pushf
ror
fisttps
fmuls
add
mov
dec
mov
mov
push
repnz
enter
push
stc
push
xor
in
or
jns
lds
dec
fwait
xchg
outsb
cmp
jp
movsb
pop
push
mov
loop
jp
jl
xchg
xchg
sub
add
loop
hlt
loope,pt
out
lcall
jp
xchg
xor
push
cmp
pushf
push
push
pop
push
sbb
fildll
imul
mov
dec
mov
inc
sbb
icebp
pop
xchg
jae
cmpsl
insl
pop
dec
push
inc
and
addr16
dec
xchg
inc
adcb
daa
aam
les
in
jmp
pop
mov
sbb
es
sbb
outsb
or
dec
jo
and
pop
fs
enter
push
add
push
fstpl
and
jecxz
pop
sti
loope
sub
mov
inc
mov
add
inc
xchg
xchg
lds
cmp
movsb
mov
cmp
mov
movq
shlb
daa
cmp
push
adc
inc
lcall
push
xlat
out
movsb
jge
shll
out
mov
out
add
dec
adc
dec
dec
push
into
stos
aam
mov
popf
leave
fidivs
pushf
divb
sub
or
pushf
mov
call
out
aas
in
mov
dec
pavgw
imull
loope
sub
test
pop
test
jns
call
inc
fmuls
sub
cltd
push
mov
sub
jae
ja
jbe
out
out
adc
xchg
pop
and
jl
mov
lods
xchg
aam
mov
int
loope
pushf
add
jmp
ficoml
test
insl
push
cli
sti
cmp
push
pop
lcall
in
add
adc
mov
jp
lcall
popa
aam
cld
inc
pop
pushf
xchg
je
inc
xor
out
push
shlb
movsl
mulps
sub
fsubr
shl
bt
xor
jle
imull
add
cld
ds
mov
pop
lcall
dec
xchg
mov
dec
adc
dec
push
add
int3
push
call
mov
cmc
imul
dec
add
adc
fsubrs
mov
scas
mov
bound
test
out
lret
pushf
pop
ljmp
cmp
outsl
cmp
out
cmp
xor
jl
sarl
hlt
bound
pushf
fsubr
jp
enter
lods
add
fsubr
push
and
mov
xorl
jle
mov
shll
aaa
test
call
fmull
push
ret
or
sbb
cltd
xchg
jae
jecxz
gs
repz
and
add
xor
jl
cmp
sbb
notb
aas
adc
leave
js
lods
jne
xchg
jne
pop
and
xchg
inc
icebp
ljmp
and
in
sbb
in
ret
test
test
into
pop
xor
popa
inc
out
push
out
mov
push
push
inc
fidivrl
pop
call
aas
dec
xlat
adc
insl
push
lahf
inc
push
sub
mov
cli
or
addr16
xchg
int3
push
mov
shrl
add
pushf
jp
ja
and
out
xchg
test
loope
inc
out
push
int
or
add
mov
scas
mov
mov
je
xor
mov
jg
aam
pop
rcll
out
pop
ret
jg
add
pop
mov
mov
pop
je
pop
pop
push
push
je
cmp
mov
mov
push
push
inc
jecxz
ja
and
lds
push
lea
pop
push
fldl
icebp
dec
es
xchg
push
fistl
dec
js
mov
xchg
xchg
mov
ficoml
lahf
or
push
mov
lea
sti
loope
jmp
jno
add
add
dec
test
mov
incl
dec
sbbb
inc
scas
lds
cmpsl
into
add
jle
outsl
shrb
jmp
lret
and
mov
xchg
pop
jo
cwtl
dec
pop
ja
or
insb
insl
test
std
daa
sbb
lods
rcll
aam
cwtl
cli
outsb
aaa
or
sti
or
scas
fdivrl
lods
pop
add
jge
nop
or
pop
ret
enter
scas
sbb
sbb
popf
sub
fists
xor
aad
aas
imul
xchg
xchg
mov
xchg
addr16
aad
add
ljmp
cmpl
dec
jecxz
dec
xor
fists
xor
int3
rcrl
pop
mov
xor
mov
add
outsb
adc
hlt
filds
mov
push
inc
xor
out
cmp
int
mov
add
lea
cmpsl
in
cmp
sbb
ljmp
je
mov
jmp
or
and
fldt
loope
out
aad
pusha
scas
add
adc
or
and
cs
jbe
repz
loope
xchg
jbe
mov
outsl
push
aam
mov
enter
out
je
dec
mov
in
ret
inc
add
pop
shlb
add
inc
cltd
rcrb
test
jno
bound
mov
mov
dec
cmp
fbld
sar
in
fsubrl
pop
in
scas
stos
fnstcw
ja
cmc
and
cmpsl
imul
xchg
sub
push
mov
inc
sbb
mov
sub
pop
sbb
jno
movsl
fisubl
lahf
test
idivb
mov
sub
pop
movsb
pop
xchg
pop
leave
popf
imul
sub
inc
mov
ja
sbb
adc
dec
in
in
lea
mov
rorl
mov
mov
xor
xor
mov
cmp
sub
sbb
adc
inc
xorb
arpl
popa
test
popa
pop
jae
xchg
stos
dec
sub
outsl
sbb
fldenv
mov
and
jmp
inc
rorl
dec
mov
add
inc
insl
xor
sub
out
and
ds
or
flds
or
dec
cli
in
cmp
fnsave
mov
jno
dec
clc
pop
jp
xchg
xchg
lahf
mov
or
clc
cmpsb
popa
mov
in
xchg
add
inc
push
jne
daa
les
lds
clc
fcomps
stos
cmp
jns
ljmp
lret
inc
inc
movsl
mov
inc
mov
dec
jl
cmp
aaa
inc
pop
icebp
rorl
daa
rcrb
adcl
mov
or
lcall
std
mov
cmp
mov
popl
cvtdq2ps
push
mov
bound
push
stos
int
fwait
sbb
leave
rcrb
cld
lods
orl
cld
aaa
cmp
fildl
fsub
mov
jle
mov
or
lods
mov
loop
mov
pop
lock
dec
pop
stc
cmp
decb
in
dec
mov
dec
cmp
addl
ljmp
jmp
push
dec
sbb
stc
test
call
fiadds
pop
movsb
ficoml
ret
jo
push
int
pop
lea
scas
jno
pushf
mov
xor
pop
sbb
add
sbb
js
jl
push
inc
hlt
mov
pushl
jmp
mov
jmp
jns
jp
imul
fdivrs
rolb
dec
pusha
mov
inc
ds
lock
ud0
pushf
popf
jns
push
leave
push
xchg
lods
cmp
xchg
mov
in
das
add
into
push
mov
aad
mov
mov
mov
and
inc
mov
pop
or
add
in
sbb
xchg
xor
mov
sub
pop
mov
mov
iret
call
insl
jb
inc
mov
adc
xchg
add
scas
ds
and
or
sub
pop
fimull
arpl
mov
loopne
xor
mov
aas
xor
jge
mov
push
xor
jae
enter
outsb
dec
mov
test
inc
cmp
test
push
sbb
cmpsb
pop
iret
and
cmpsl
test
mull
ficomps
jge
outsb
xor
and
into
fcoms
xlat
mov
push
cmc
mov
and
push
loopne
xchg
mov
adc
push
aam
push
xorl
add
fwait
adc
sub
icebp
jecxz
mov
mov
xchg
pop
mov
lods
arpl
and
out
lret
pop
dec
inc
dec
jecxz
mov
nop
inc
jbe
pop
push
mov
nop
add
pushf
movntq
add
jne
xchg
std
mov
mov
dec
and
and
push
cwtl
int
mov
push
xor
in
pop
test
fs
xor
into
adc
add
cltd
adc
sbb
pop
cld
push
ss
test
daa
xchg
cli
xor
lret
xor
mov
pushf
or
cmp
xchg
cmpsl
movsl
das
or
jae
dec
inc
movsl
sarl
add
das
or
and
pop
pop
mov
xor
gs
dec
push
jge
sub
ret
push
inc
sbb
jmp
movsl
jg
mov
mov
repnz
les
lods
add
movsl
movsb
scas
arpl
fldl
adc
test
cmp
clc
pop
pop
push
loop
jb
mov
cltd
imul
adc
jle
in
add
fs
pop
inc
clc
out
rorb
jp
sahf
xchg
inc
jmp
jo
mov
loop
xor
and
xor
adc
int3
mov
lods
sbb
test
xchg
mov
mov
dec
ds
nop
mov
inc
mov
xchg
in
and
clc
cmp
fwait
sub
mov
scas
mov
inc
xchg
shl
mov
orb
push
mov
aad
pop
mov
mov
call
push
and
and
or
sbb
lret
adc
cmp
fisubl
mov
lret
in
adc
scas
add
adcb
ja
leave
mov
and
clc
dec
mov
jbe
insb
aam
call
aad
push
test
xor
nop
mov
push
xor
sbbb
mov
mov
cmp
fcoms
and
addr16
and
push
aad
cwtl
cmp
and
aas
out
push
xchg
jmp
je
cmp
dec
add
push
mov
xlat
and
lea
inc
and
jns
scas
push
lds
mov
fstpl
push
jnp
and
inc
loopne
insb
inc
mov
in
stc
mov
mov
jnp
push
xchg
pop
addr16
in
fstpl
scas
outsl
push
pop
test
insb
in
mov
mov
sub
mov
pop
add
daa
dec
stos
pop
rcrb
or
dec
adc
xbegin
bound
in
insb
out
hlt
and
adc
inc
es
push
scas
bound
sahf
mov
test
adc
mov
jmp
mov
push
setle
popa
adc
sub
mov
jl
rcrl
imul
pop
aad
mov
xchg
dec
inc
mov
stos
mov
push
lods
cmp
inc
sub
fdivl
xchg
notb
dec
and
icebp
jo
dec
or
out
and
lea
shl
pop
lock
out
scas
neg
cmp
sbb
xchg
fadds
cld
lock
add
add
cli
mov
enter
sbb
jl
fidivs
push
mov
data16
jl
mov
xchg
fnsetpm(287
shlb
or
mov
in
imul
jne
xor
roll
sti
mov
loop
push
cmp
inc
pop
xor
scas
pop
jmp
adc
cs
fiadds
movsl
test
push
sub
repz
in
fbld
pop
nop
sub
ljmp
mov
enter
sbb
hlt
bound
sub
lods
cmc
repnz
sar
or
mov
stc
aas
jo
addr16
mov
jno
or
xchg
adc
add
pop
sahf
fcmovu
mov
test
test
ljmp
jnp
test
stos
dec
pusha
repnz
inc
mov
rol
je
inc
push
mov
aaa
and
xlat
xchg
dec
xchg
add
dec
test
mov
mov
cmp
add
xlat
cmp
mov
jno
aas
out
add
repnz
mov
adc
or
cmp
cmp
jb
xchg
gs
xchg
call
push
or
cmp
mov
shlb
cmp
jl
jp
pop
movsb
pop
pop
mov
std
or
popf
mov
and
push
pop
repnz
cmp
in
aaa
push
imul
cmc
jmp
imul
or
aaa
aaa
push
sbb
jmp
addr16
push
xor
data16
movsb
adc
pop
ja
sar
fscale
add
repz
push
push
fstpl
jne
cmp
jo
inc
dec
orl
cmp
movq
movsb
inc
test
inc
or
ret
jle
jmp
fstl
mov
xchg
in
in
dec
inc
sub
and
shl
and
jecxz
xor
shl
or
stos
dec
mov
aaa
xchg
jbe
push
inc
testl
sub
gs
mov
mov
leave
mov
into
fstps
dec
ret
sub
ss
jbe
sub
sub
sub
enter
and
andl
adc
add
jb
cli
jl
lret
jae
jle
push
mov
jl
sbb
fsubrs
loopne
sti
fs
jmp
fldl
push
lods
dec
fildl
movsl
in
jnp
rclb
sbb
push
in
sub
sub
push
test
movsl
mov
stos
xor
inc
push
xor
shlb
addr16
divl
into
rclb
shlb
mov
adc
mov
imul
repz
cmp
test
adc
lock
fwait
mov
test
sbbb
test
mov
xchg
cli
daa
push
cmpsb
xor
lds
orl
lods
sub
ret
add
inc
push
ss
notb
pushf
or
repz
fisubrs
imul
out
subl
pop
lcall
repnz
cwtl
in
lahf
jne
aam
dec
rcr
pusha
mov
push
cmpsb
pop
insl
mov
repz
clc
and
in
loop
fdivrp
in
movsb
pop
adc
cmp
push
adc
pop
xor
xchg
idiv
mov
pop
xor
pusha
jo
leave
sub
xchg
mov
pop
fnstcw
add
rclb
and
sti
ret
aad
xchg
pop
add
xchg
sbb
das
mov
jecxz
sbb
lret
inc
mov
outsb
pop
ret
stos
xor
mov
inc
fchs
jecxz
ss
mov
ja
icebp
cmp
dec
movsb
or
insl
jmp
lock
shl
mov
mov
arpl
aad
or
loop
xchg
insb
xchg
jp
add
in
out
fwait
nop
mov
dec
loop
xorl
outsb
lods
inc
shl
pushl
lods
lret
jns
fs
nop
add
mov
adc
in
push
stos
out
push
jecxz
test
cmpsl
mov
sti
shl
mov
push
mov
cmpl
rolb
mov
in
sahf
push
pop
cmp
scas
pop
lock
stos
addr16
push
xchg
fistps
rcll
cmp
sti
bound
xchg
es
jp
xchg
mov
or
out
push
mov
adcb
imul
mov
cmp
xor
ss
sbb
mov
mov
mov
mov
cmc
frstor
jno
call
cmp
cltd
test
dec
push
mov
xchg
cmp
mov
aad
push
xchg
sbbl
and
dec
ror
push
push
out
lods
ja
mov
repnz
lea
add
lds
xchg
test
add
testb
dec
or
inc
in
pop
mov
rorl
sti
addr16
popa
fcomps
inc
into
dec
mov
loop
pop
cwtl
bound
and
sub
insb
fsts
roll
cmpsl
sub
fwait
xor
adc
mov
adc
jbe
mov
call
in
sub
outsb
sbb
int3
xlat
adc
cmp
inc
aaa
mov
pop
ds
mov
rcl
rorb
dec
push
mov
add
leave
shll
jns
leave
fildl
jmp
js
ljmp
es
pop
mov
out
push
fldl
mov
sbb
add
std
push
js
shrl
testl
mov
push
and
test
arpl
mov
adc
das
jns
xchg
sub
or
scas
xchg
out
mov
les
adc
jecxz
into
cld
clc
enter
jle
out
fisubrl
shl
out
mov
cltd
jb
jnp
fisubl
fstpt
mov
cmp
mov
jl
inc
pop
sbb
or
notb
mul
mov
or
mov
shl
leave
in
pop
in
stos
scas
mov
xchg
aad
aam
mov
lods
sub
cwtl
and
xor
daa
fstl
flds
mov
enter
leave
xchg
hlt
mov
das
dec
jl,pt
push
push
mov
inc
xchg
repz
jl
add
fcomps
addr16
or
pushf
outsl
mov
shll
test
push
ja
stos
rolb
jno
adc
cli
pop
movlps
mov
jo
sbb
cmpsl
adc
dec
lods
cs
dec
push
daa
rcl
mov
gs
dec
daa
ss
jbe
cld
cltd
adc
or
push
fwait
push
cmc
test
aas
repnz
xchg
inc
inc
or
push
jnp
or
push
lods
pop
mov
loopne
leave
in
mov
popf
movsl
adc
loop
loope
fstl
stos
sub
xor
orl
jnp
jno
xchg
in
scas
lods
push
addr16
in
mov
adc
stos
out
jno
sbb
sbb
push
pop
mov
fwait
orl
pop
cmpsl
push
dec
dec
call
mov
dec
xor
mov
out
jg
pop
xchg
cs
repz
sarl
addb
jno
stos
dec
mov
cmp
sbb
xor
aaa
mov
ja
psrad
sub
div
sbb
xor
scas
inc
and
bound
aam
mov
mov
ret
push
call
xor
mov
pop
test
fs
repnz
iret
pop
xor
nop
ret
cmpsl
ds
out
pop
neg
bound
adc
push
sbb
mov
sahf
out
sub
cmp
add
sub
and
cmp
cld
leave
jg
inc
out
movb
mov
xchg
nop
inc
xor
fistl
jnp
imul
fs
jl
xchg
jge
test
shll
clc
push
mov
test
clc
add
outsb
js
in
or
jg
sub
lahf
mov
sub
xchg
test
negl
scas
jg
lret
rcr
inc
cmpsl
pusha
out
imull
adc
fs
adc
fidivl
rcr
sub
jb
push
jb
sub
scas
mov
in
pop
cwtl
mov
in
das
hlt
adc
fbld
pushf
xor
stos
dec
jg
subb
movsl
cmpsb
sbb
jbe
xchg
aaa
shrl
andps
inc
adc
jg
cli
or
push
sub
xchg
sub
cli
and
imul
ja
jae
mov
repnz
sub
es
sub
in
mov
jo
aam
data16
inc
lds
lea
and
repz
cltd
clc
out
adc
outsl
cmc
loop
pop
pop
add
mov
mov
inc
iret
cmp
shlb
sbbl
enter
xchg
idiv
ljmp
xor
jecxz
push
and
and
aad
cmp
jo
cmc
xor
xchg
push
nop
pop
scas
mov
mov
in
ror
int3
js
fbstp
repz
stc
call
ljmp
cmpsb
imul
push
sahf
sbb
scas
or
test
cwtl
inc
popf
sub
cmp
cwtl
mov
xchg
and
mov
jle
and
into
je
mov
rorb
call
pop
jg
dec
fidivrl
sub
add
decb
xchg
pop
aaa
dec
jbe
nop
clc
or
mov
dec
push
cmp
lods
mov
mov
test
mov
test
int3
mov
negb
lret
sub
imul
xlat
xchg
nop
mov
mov
test
xor
dec
xchg
aas
or
sub
fldt
addr16
mov
cmc
cmp
xor
and
sub
push
shll
in
sub
push
sub
and
repnz
mov
xor
stos
fdivrl
mov
and
test
sbb
cmp
test
icebp
pop
adc
lods
int3
jecxz
adc
lret
stos
loopne
fistpll
mov
mov
pop
movsl
mov
pop
aam
push
and
adc
sbb
hlt
pop
push
insb
inc
imul
jmp
mov
mov
out
clc
cmp
cmp
and
cmp
mov
lods
inc
inc
xlat
test
cmc
test
rcll
adc
test
cmp
inc
jmp
addr16
inc
lret
push
sub
std
xchg
cmpsl
xor
stos
sti
hlt
or
xor
mov
adc
mov
mov
xchg
mov
push
mov
jae
orl
pop
test
jmp
imul
sahf
lret
call
je
and
mov
jns
and
add
dec
push
lods
push
mov
mov
stc
jge
add
xlat
fildll
mov
push
roll
js
push
ret
cmpsb
imul
add
jo
push
mov
mov
fsin
xchg
mov
add
mov
hlt
sbb
lcall
jae
stos
les
clc
pusha
add
loop
mov
in
sbb
push
loop
cmp
mov
out
out
hlt
aas
jnp
xlat
iret
shlb
icebp
aas
mov
shl
pop
int
or
mov
leave
out
adc
jecxz
push
push
int
loope
fildll
loope
cmc
outsl
xor
rorl
addr16
lea
adc
mov
adc
fcoms
add
mov
ret
loopne
iret
xchg
xchg
iret
pop
nop
jle
int
jne
inc
adc
xchg
and
xchg
pop
push
into
cli
pop
push
jge
add
mov
clc
das
fisttps
scas
adcl
ja
ds
outsl
mov
std
sub
xor
inc
out
push
inc
scas
seto
xchg
or
mov
jp
pop
xlat
xor
movb
push
das
and
xor
aam
mov
cmp
jno
outsl
pop
ficompl
mov
jns
ss
imul
lea
stc
push
fdivp
xchg
int
in
or
push
es
hlt
nop
call
subl
inc
adc
xor
ljmp
xor
add
mov
or
mov
push
pop
or
cltd
or
sub
mov
int3
adc
dec
sub
movsl
mov
adc
loop
popf
stc
push
lea
xor
test
xor
jp
adc
mov
sbbl
and
jno
fdivrp
movsl
fs
das
mov
xchg
mov
call
lock
mov
das
xchg
push
jae
mov
out
xor
xor
jmp
push
inc
ljmp
mov
mov
fimull
out
lea
sub
jae
dec
scas
mov
sbb
inc
lds
cmp
das
mov
cltd
popa
sti
sbb
mov
outsb
add
sbb
dec
cmp
mov
push
aam
ret
mov
push
out
ss
xor
or
stos
pop
ret
std
popf
aaa
inc
out
cs
adc
or
add
fldl
jge
cld
dec
stos
lcall
outsb
mov
aam
push
sti
into
imul
loop
mov
mov
negb
mov
push
movsb
rcl
cld
ret
lods
aas
dec
xor
pop
stos
test
jl
dec
dec
sti
scas
movsb
aam
cwtl
scas
and
cli
rcll
inc
shrb
insb
rcl
xchg
jmp
mov
pop
in
jmp
mov
sbb
out
pop
push
mov
fldcw
addl
cmp
push
cmpb
jmp
cmp
imul
test
testb
js
cmp
xchg
insb
lret
mov
pushf
stc
cmp
adc
and
in
adc
sbb
cmp
and
jmp
and
dec
test
mov
dec
int3
sbb
jae
sub
push
outsl
ja
stos
mov
outsb
dec
jo
pop
cmp
cli
mov
scas
call
fistpl
call
scas
or
add
mov
ja
jg
pop
cwtl
out
push
pushf
les
rclb
icebp
dec
xor
jle
add
ja
cmp
jp
dec
adc
xchg
ret
andb
push
in
gs
fiaddl
adc
push
xor
xchg
pop
jge
dec
sub
pop
and
dec
and
in
outsl
je
inc
mov
pop
out
adcl
aaa
sysret
out
xchg
push
cmp
or
jno
mov
adc
pusha
aad
or
cwtl
in
aam
sub
popa
cwtl
cmp
mov
pop
insb
mov
adcb
or
inc
loopne
push
cltd
lea
pop
sub
jmp
mov
rolb
mov
icebp
shrl
jg
mov
push
mov
pop
pop
ret
rcrb
sbb
jns
test
sbb
push
pop
arpl
repz
push
xor
jne
lock
out
pop
xchg
addl
std
mov
repz
pop
cmp
repnz
add
jbe
imul
cmpsb
xor
cmp
pop
fisubrs
andl
inc
and
pop
push
cmp
mov
das
es
jne
mov
mov
divb
inc
xor
xor
lcall
shlb
mov
in
adc
sbb
rolb
inc
adcb
lret
and
or
in
xchg
idiv
or
cmp
pop
push
push
pop
dec
ret
jnp
fisttps
fcom
pop
mov
in
int3
pushf
pop
fidivrs
int3
xchg
in
cmp
push
loope
cld
sbb
push
inc
jne
xchg
mov
sub
std
jecxz
cmp
out
pop
ret
les
mov
dec
inc
lahf
adc
sahf
rclb
mov
jnp
and
in
mov
and
pop
roll
mov
jmp
fildll
xlat
dec
xor
adc
push
push
test
insl
xchg
pop
scas
ljmp
mov
mov
push
cmp
dec
mov
cwtl
test
xor
add
xchg
jo
fcmovnu
or
mov
loop
negl
push
ss
mov
cltd
add
push
dec
jl
loopne
mov
inc
sbb
cmp
imulb
andb
inc
push
bound
scas
arpl
jmp
sub
cmp
xor
rclb
jmp
sub
mov
xor
pop
inc
iret
add
flds
dec
pop
cmp
insl
xchg
rcrl
add
xor
cmp
pop
cmp
cli
cmpsl
jb
push
popf
in
lock
rolb
or
sbb
mov
aad
in
in
pop
jnp
loope
and
sub
mov
mov
ret
push
fildl
loope
dec
cmp
lcall
lea
mov
std
cmp
xorb
sub
lret
push
sbb
mov
mov
pop
pusha
or
dec
add
xor
adc
sahf
popf
aad
pusha
mov
lcall
lock
inc
loopne
loop
mov
fbstp
jnp
icebp
lret
ss
scas
or
fdivr
stos
movsl
mov
loop
push
ror
inc
stos
xor
jmp
enter
scas
jle
stc
pop
scas
outsb
push
lret
out
push
out
mov
xchg
push
mov
add
nop
and
mov
in
hlt
xor
cmc
add
dec
pop
loop
imul
push
dec
imul
and
and
xchg
xlat
push
mov
out
sarb
xor
push
aam
fdivp
and
jl
lcall
dec
decb
mov
mov
jno
push
xchg
test
inc
pop
aaa
out
aas
inc
sub
dec
ss
jmp
or
push
sbbl
mulb
imul
jb
adc
hlt
xor
lcall
fildll
lods
es
xor
or
in
mov
xchg
cmp
inc
sarl
pushf
pop
sub
jbe
data16
test
arpl
iret
cltd
push
push
movsl
mov
add
pushf
cli
idivb
pop
cld
lods
cwtl
adc
hlt
push
inc
outsl
movsl
rcr
inc
pop
xchg
pop
scas
cltd
push
xchg
jo
mov
bound
test
pop
xchg
mov
loope
stos
add
add
pop
imul
mov
push
imul
ljmp
je
fisttpll
adc
daa
pop
adc
xchg
push
xorb
addr16
adc
or
ljmp
pushf
test
xor
mov
cmpsl
cmp
jl
lret
sub
sbb
mov
jle
lret
xor
rcrl
mov
sbb
mov
add
loopne
call
dec
addr16
mov
or
mov
imul
sbb
repnz
mov
xchg
subb
pop
fistpll
shlb
out
hlt
js
movsl
cmp
dec
mov
mov
ret
lahf
push
bound
shll
xor
dec
in
pop
adc
out
xchg
repz
jo
xchg
push
shll
add
jno
sbb
mov
test
jle
out
imul
sbb
adc
scas
out
inc
mov
cmp
xchg
jecxz
test
lret
cmpsl
jbe
sub
pop
and
lods
cmp
lock
lahf
cmc
jo
push
into
jp
inc
shlb
js
push
xchg
push
nop
mov
loop
loopne
outsl
push
mov
fistps
jmp
mov
xchg
mov
jne
xor
insb
mov
mov
outsb
pop
aas
dec
add
sub
push
inc
cmp
inc
and
mov
jb
xchg
push
test
pop
sbb
out
jnp
icebp
mov
filds
jecxz
pop
mov
push
mov
faddl
lcall
sub
pop
stos
mov
int3
inc
mov
out
paddq
mov
lods
test
jmp
into
jecxz
jb
xor
add
xchg
mov
jne
add
loope
or
sub
daa
stos
push
fistpll
jae
mov
mov
xor
cmpsb
das
push
scas
push
out
pop
shrb
out
loope
fcomip
xor
xchg
pushf
add
aam
or
nop
xchg
pop
mov
push
adc
cmp
dec
enter
int3
xchg
rorb
xlat
gs
mov
lock
or
mov
shll
inc
or
mov
sub
dec
stc
shr
ficoml
inc
mov
imul
js
rolb
es
mov
mov
cmc
xchg
or
sbb
cwtl
xor
aam
imul
cld
out
aad
mov
push
inc
mov
in
lret
std
mov
mov
pushw
or
jecxz
fdiv
insb
add
pusha
outsl
jae
lldt
jp
movsb
ret
mov
es
loopne
pusha
js
lahf
out
movsl
xor
test
in
negb
clc
mov
sbb
movsb
leave
pop
adc
fimull
or
ficompl
in
dec
jb
loope
insb
pushf
test
int3
and
daa
stos
fdivrl
sarb
js
adc
pushf
pop
addr16
cwtl
shll
sub
push
addr16
sbb
or
inc
push
lods
inc
in
cmpsb
loop
sarl
or
arpl
iret
pop
fisttps
sub
ja
cmc
insl
loope
add
addr16
pushf
dec
xor
in
fimull
pop
push
jle
scas
jbe
jl
jne
jae
dec
leave
fildl
lea
push
std
push
mov
loopne
subl
mov
fsubrl
lcall
pandn
pop
sub
xor
std
jo
xor
test
push
sbb
and
fwait
add
std
repnz
orb
pop
popa
mov
xchg
outsb
jmp
xchg
jns
push
cmpsb
arpl
mov
in
mov
das
push
add
adc
stc
cmp
pop
mov
xchg
xchg
mov
int3
mov
subb
or
lds
sub
test
cmp
xor
inc
pop
rcrl
push
add
repnz
sub
mov
gs
pop
leave
dec
xchg
pop
or
xchg
aas
jb
lahf
cmc
and
dec
inc
pusha
rcll
icebp
into
adc
out
ja
sub
clc
sbb
mov
mov
ds
lds
pushl
roll
aad
aaa
scas
mov
clc
dec
scas
frstor
ljmp
dec
lcall
adc
mov
push
stos
xor
sub
loop
orb
aas
xlat
dec
into
sub
cs
sub
mov
enter
mov
clc
mov
fldt
arpl
add
xchg
adc
sub
cmpl
xlat
test
jne
sbb
out
push
rcr
lcall
dec
lds
hlt
push
shl
xchg
push
xchg
rcl
mov
in
mov
in
jge
mov
jne
ret
cmp
pop
xor
jge
pushf
add
notl
xor
sub
add
ret
aas
test
sbb
xor
stos
adc
cltd
mov
out
fdivrl
pop
gs
inc
push
loop
lret
scas
pop
mov
xor
mov
xchg
addb
and
sbb
cli
cwtl
cs
cli
lahf
push
cltd
sahf
lock
fisttps
pop
fcomps
xor
dec
in
popl
pop
xor
loopne
mov
dec
cwtl
adc
inc
mov
je
push
mov
jno
je
push
jge
pop
dec
repz
gs
pop
std
repnz
mov
xor
sarb
inc
popf
mov
sub
xchg
inc
push
push
loop
mov
test
sub
fwait
lret
test
fdivrl
pop
pop
mov
subl
fdivr
dec
inc
push
shrl
add
sahf
out
mov
mov
sbb
dec
inc
es
lea
push
addr16
scas
or
mov
cmc
mov
pop
insb
xor
mov
cmpsl
mov
pushf
ret
dec
dec
add
or
lea
mov
pop
js
add
int
test
lds
push
test
push
add
pop
dec
push
or
outsl
in
jmp
add
xlat
cmp
rcl
adc
add
mov
repz
inc
fs
outsb
insb
cli
inc
out
and
mov
push
je
cmp
xor
push
jne
pop
xor
or
nop
xchg
inc
xchg
jns
mov
shll
mov
push
cmp
inc
stc
mov
add
scas
testl
mov
mov
addr16
stos
or
cmp
cmp
and
outsb
push
lret
popf
xchg
aam
pop
fistpll
cmpsl
mov
data16
mov
mov
rcrl
sbb
call
int
mov
inc
push
mov
iret
fstps
das
insb
dec
lret
push
bound
push
into
xor
sub
or
loop
xlat
sbb
iret
lods
pop
mov
js
mov
jmp
inc
decb
nop
dec
adc
ret
xchg
icebp
cmpsl
dec
int
pop
jg,pn
lds
add
mov
jnp
sbb
xchg
mov
test
add
dec
in
bound
pop
mov
cli
dec
mov
xor
or
jg
xor
cmpsl
inc
push
flds
testl
pop
lea
arpl
arpl
aas
push
or
push
push
dec
cld
push
push
mov
fcoml
stos
les
or
push
movsb
sahf
push
inc
sub
mov
stos
jg
or
jecxz
inc
ljmp
mov
push
mov
daa
jmp
lock
mov
ret
lcall
mov
daa
bound
and
push
shrb
cltd
pop
mov
or
pop
daa
mov
xchg
sbb
fsubrp
stc
dec
pushf
fs
stos
sbb
adc
pop
outsl
mov
xchg
rol
js
cmpsb
pop
cmc
mov
adc
mov
imul
movsl
jno
sbb
xor
mov
xor
dec
addr16
rclb
mov
push
add
cs
xor
sbb
push
jnp
or
mov
xlat
mov
dec
jo
mov
pop
sbb
les
dec
ret
mov
dec
sahf
or
scas
jae
insb
mov
pop
int
out
dec
mov
mov
dec
push
ja
mov
xchg
repnz
push
pop
iret
cmp
push
inc
ret
cmp
jge
ror
cmpsl
push
mov
insb
iret
repz
sub
adc
aaa
cltd
jne
ror
in
cmp
int
mov
mov
fcoms
ljmp
hlt
mov
movsl
scas
fs
push
ds
sbb
push
rcrb
sbb
add
jbe
mov
mov
sbb
push
leave
push
mov
rcll
mov
mov
imul
in
mov
push
sar
movsb
mov
inc
adc
inc
dec
sbb
cli
mul
dec
fs
in
add
mov
dec
push
loopne
sti
xor
cmp
inc
push
jmp
mov
subb
dec
xor
mov
fnstcw
dec
jbe
pop
test
mov
jns
or
flds
push
aaa
imul
scas
sub
and
dec
cld
sbb
mov
xchg
insb
aaa
pushf
dec
inc
shlb
and
mov
push
inc
add
cli
add
xchg
fbld
add
or
arpl
pop
inc
push
das
push
push
aad
enter
shll
enter
fs
sub
movsl
iret
pop
enter
js
dec
test
xchg
std
iret
lods
xchg
xor
in
mov
pop
push
insb
mov
dec
cmpsl
add
outsb
or
cmpsl
mov
dec
jns
or
push
ror
mov
cmpsl
sub
mov
adc
lods
jnp
xchg
pushf
ret
sbb
pop
jb
js
mov
stc
enter
xchg
sub
orb
xor
and
popa
cmpb
in
push
push
pop
aaa
dec
aas
pop
leave
add
lea
or
xor
std
imul
cmc
mov
addb
je
cmp
int
cltd
sbb
jg
and
inc
mov
sbb
sti
repnz
pop
popf
mov
push
cwtl
add
clc
aad
lret
cmp
ja
mov
mov
push
sbb
lds
jmp
add
movsl
push
ret
sbb
mov
and
jns
jb
fidivl
xor
sub
in
aad
push
push
or
jnp
xchg
loope
mov
xchg
inc
sub
push
jl
inc
inc
push
add
push
cmpsl
pop
int
int3
jnp
xor
mov
mov
inc
scas
repnz
ja
cmp
mov
mov
add
lds
jbe
pop
lock
pop
movl
cltd
in
add
mov
jnp
xlat
enter
cmp
xchg
xor
fiaddl
out
pop
cmp
inc
mov
fiaddl
adc
mov
inc
xlat
cmp
mov
jmp
sbb
jl
pop
inc
repz
mov
cmp
mov
adc
into
and
stos
mov
mov
jg
push
in
aad
fadd
jne
and
je
mov
lods
dec
hlt
lds
test
lcall
popa
xlat
add
jbe
dec
jae
clc
call
sub
mov
imul
leave
xor
xchg
mov
cwtl
cmp
notl
sbb
dec
push
dec
mov
movsb
jne
in
ret
sub
jl
test
shl
add
arpl
ficompl
aaa
call
xchg
into
jl
int3
inc
test
cmp
push
mov
fcmovnbe
adcb
sbb
mov
xchg
or
mov
fcos
push
sbb
loop
icebp
jp
aas
cmp
jnp
out
mov
aad
mov
fdivs
popf
loop
xchg
mov
mov
mov
xor
ficoms
nop
pop
xlat
leave
int3
ljmp
mov
jbe
addr16
rcrb
jge
cmpsl
std
lock
mov
nop
or
dec
mov
leave
xchg
jo
pusha
insl
jb
lcall
mov
pop
cs
ja
push
xor
jmp
push
and
jnp
rorb
popa
insl
mov
adc
push
lock
mov
xor
jno
cmp
adc
iret
xchg
enter
jne
cs
ret
xor
add
jg
ja
jecxz
mov
cmp
lahf
xor
xchg
imul
jl
lret
sub
jno
pop
movsl
mov
cltd
dec
inc
adc
xor
add
dec
hlt
scas
shll
lahf
add
lock
push
adc
add
mov
lock
rcrb
in
mov
mov
adc
jge
fcomp
push
ret
leave
lea
jbe
aad
dec
decl
outsl
stos
jnp
mov
scas
mov
in
or
lods
mov
push
pop
js
mov
cmc
repnz
data16
fs
lret
loop
or
adc
insb
in
adc
jp
enter
sbb
inc
pop
and
mov
into
cmp
adc
jb
lcall
mov
clc
fmull
xchg
mov
mov
mov
test
cmp
pushf
mov
pop
sbb
add
lcall
mov
sbbb
or
sub
ljmp
pop
jbe
cs
insl
imul
mov
lret
loopne
cmp
idivb
cld
cmp
adc
dec
sub
or
clc
xlat
xchg
insb
sub
int
stos
mov
jns
pushl
jmp
sahf
call
ret
mov
rol
fisttpll
lret
mov
push
pop
repz
fdiv
lock
mov
push
mov
jnp
mov
xchg
mov
mov
enter
movsl
roll
jno
mov
and
ret
icebp
clc
mov
dec
and
insl
cmc
sbb
xchg
jge
cltd
test
out
lret
cmpsb
shll
xchg
aad
jne
xor
out
mov
cltd
and
in
fists
mov
movsl
mov
in
icebp
movsl
or
insb
loope
sub
lods
xor
loope
cmp
fldl
pop
xor
add
cmpsl
imul
sbb
icebp
xlat
jmp
inc
and
adc
hlt
rol
ret
testb
cmp
repz
dec
rcrb
aas
ljmp
push
jmp
pop
daa
add
lahf
pop
xchg
dec
adc
ret
divl
add
jnp
ret
mov
adc
push
test
mov
push
stos
cmp
pop
cwtl
jnp
jo
repnz
in
jmp
cmpsb
inc
push
enter
in
add
mov
mov
js
push
xor
pop
push
es
cmc
cmp
cmp
cmp
cli
push
push
push
mov
push
xchg
decl
dec
ret
cmp
adc
cld
xorb
fistps
mov
add
int
sbb
popa
add
adc
ljmp
jp
shll
fdivr
or
xor
outsb
fmul
fimuls
cwtl
test
or
les
sub
aas
movsb
std
mov
mov
lret
pusha
out
leave
frstor
jns
pop
jb
push
pop
lea
dec
scas
into
push
mov
add
and
mov
ljmp
fiaddl
inc
jl
dec
imul
rol
movsb
aas
out
xchg
loopne
loop
popl
sub
aam
jb
popf
mov
call
mov
int3
xor
push
fwait
scas
int3
dec
js
out
and
cs
dec
mov
inc
sub
test
lds
or
aaa
lds
aaa
sub
add
xchg
or
les
push
nop
jl
xchg
push
mov
mov
movsl
cmp
out
pop
outsl
xchg
mov
fsubrs
inc
pop
call
std
cmpsb
sarl
ror
es
push
aad
dec
cli
mov
lahf
outsl
and
std
sbb
lret
pushl
jnp
fbld
inc
mov
mov
xchg
pop
and
xlat
inc
xor
rclb
push
sbb
das
pop
out
inc
iret
leave
popa
push
stos
fldt
and
mov
mov
sbb
xchg
dec
xlat
pop
cmpsb
pop
inc
lret
xor
mov
pop
decb
movsb
xchg
and
sub
sbb
jmp
iret
and
sbb
jp
enter
int
xor
aam
cwtl
lods
mov
inc
cmpsb
mov
inc
push
cmc
aas
push
add
inc
xchg
mov
or
add
xchg
enter
dec
cld
scas
mov
and
movsb
scas
lret
bound
mov
repnz
mov
repz
iret
lahf
push
and
lret
icebp
mov
xchg
xchg
add
mov
mov
adc
push
adc
mov
daa
jne
insl
xchg
push
rcrb
add
inc
mov
roll
or
mov
cmp
ret
int
rol
xchg
cmp
leave
iret
clc
aas
mov
in
sub
dec
fadds
adc
adc
psadbw
cmovb
out
adc
cltd
lea
cmp
fsubs
adc
pop
pushf
xor
shll
sub
cld
int
test
inc
lds
or
test
xor
ljmp
icebp
push
add
scas
mov
ja
or
popf
cld
and
sbb
or
imul
imul
cmp
pop
inc
cmc
push
or
jns
imul
mov
rcrl
push
sub
test
or
push
mov
jl
mov
or
mov
pusha
dec
insb
add
test
rorl
shrl
popa
fdivs
mov
cmp
lret
out
sub
std
mov
pop
or
rcrl
test
fisttps
or
mov
pop
addr16
loop
pop
push
in
pop
out
jl
dec
jo
jg
dec
sub
jge
negb
rorl
stos
int
mov
loopne
ret
mov
pop
loopne
data16
push
push
in
or
ja
call
in
clc
add
shrl
cmp
mov
xor
in
add
iret
and
out
in
aad
adc
jmp
push
clc
add
jbe
jae
fisttpl
hlt
xor
test
clc
mov
rcrb
fs
jo
ret
ret
jb
hlt
push
mov
int
imul
xor
adc
lods
inc
push
push
stos
xor
test
ret
mov
stc
rcrb
scas
insb
adc
mov
lds
pop
sbb
cmp
adcl
mov
inc
pop
popa
mov
cwtl
scas
mov
and
mov
pop
fdivrs
xchg
sbb
jle
scas
js
data16
nop
ficoms
dec
pop
jecxz
or
jne
xor
jae
dec
mov
lahf
cmpxchg
add
mov
jae
dec
dec
cli
dec
popa
xor
fwait
jb
mov
fcmovu
ror
mov
cmp
push
shll
icebp
adc
loop
xor
mov
insb
aam
pop
mov
mov
xchg
cmp
cli
push
ds
je
pop
icebp
jbe
jg
call
insl
push
cli
ljmp
aad
and
cs
xchg
ss
cmpsl
ljmp
and
cwtl
cli
repnz
xor
or
adc
lret
sub
in
cmp
loopne
into
fdivp
sub
hlt
in
mov
cmpsb
iret
out
sub
sbb
sub
mov
push
scas
cmpsb
cs
sbb
loopne
xchg
push
or
sbb
xchg
rcrb
das
lea
jl
ss
mov
push
popf
sbb
pop
sub
gs
mov
out
ljmp
mov
fwait
sub
inc
jg
pop
push
cmp
dec
lods
loope
and
arpl
and
stos
in
dec
xchg
sbb
shl
pusha
push
je
dec
pop
es
leave
fdivs
xor
and
pop
cmpl
push
cmp
andl
ret
mov
mov
ds
es
cmp
mov
jbe
sbb
outsl
ffree
mov
cli
arpl
push
int3
fdivs
mov
cmp
icebp
xlat
push
nop
xchg
sbb
push
imul
scas
call
mov
adc
in
aad
cmp
dec
in
hlt
push
xchg
mov
xor
xchg
iret
mov
xlat
movsb
jno
lret
fists
jg
mov
aaa
frstor
sbb
jo
ret
scas
inc
fisttpl
inc
mov
push
sub
movsl
sbb
and
mov
icebp
enter
fstpt
or
pop
xchg
xlat
xchg
adc
cmp
xlat
sbb
sar
mov
xchg
inc
test
fisubrl
xor
insl
mov
dec
inc
push
loop
fnstcw
jb
cmpsl
data16
cmpsl
ds
mov
mov
cltd
pop
scas
sub
test
dec
lock
stc
dec
lds
or
loop
xchg
andl
pop
and
dec
cmp
fisttpll
xor
add
aas
js
fsubr
cmpsl
sub
mov
stos
cltd
jmp
adc
adc
xor
cli
sub
xchg
rcll
fcomps
sub
insl
lock
mov
add
frstor
push
push
in
sub
mov
add
xor
jp
fsubrp
mov
pop
movsb
js
xchg
loopne
pushf
inc
jp
xor
mov
das
cmc
mov
jae
mov
or
arpl
stc
inc
cmp
in
push
xlat
add
inc
subl
or
pushf
adc
imul
push
movsl
js
pop
out
fldcw
pop
fwait
sbb
fdivr
xchg
mov
cmp
out
ja
arpl
xchg
ds
dec
pop
xchg
pop
push
js
sbb
aaa
cmp
xchg
mov
movsl
fs
xor
sbbb
cmpsl
cmp
xchg
add
push
xor
adc
inc
mov
xchg
lret
jl
fs
jg
jnp
sub
es
and
xor
xchg
arpl
mov
dec
je
sbb
aaa
ret
inc
int3
pop
in
jp
and
aaa
xchg
ja
and
xor
mov
outsb
call
je
sbb
xchg
loope
loope
fs
pushf
sub
test
iret
inc
xor
push
push
test
dec
outsl
mov
nop
inc
ja
in
daa
xor
sub
mov
into
gs
inc
add
add
fmull
pusha
or
or
out
cli
push
xor
hlt
xchg
adc
int3
sub
fsubrl
fs
les
dec
add
mov
imul
push
mov
jle
sub
out
mov
insl
inc
lds
sbb
insl
xchg
cmp
sbb
lods
data16
and
cmpsl
and
mov
aad
movsl
negl
imul
fiadds
mov
test
into
jge
push
test
call
hlt
and
outsl
xor
insl
into
pop
fidivl
aaa
shlb
mov
out
inc
cmp
call
xor
push
jecxz
sub
lea
mov
aad
fimull
cmp
das
sub
pushf
fisubrs
movsl
icebp
cmp
icebp
jge
fs
adcl
cmp
sbb
xchg
xchg
in
pushf
insb
sub
add
pop
shrl
fs
scas
ret
pop
jb
nop
mov
loop
mov
hlt
fdivs
mov
mov
mov
rcrl
hlt
adcl
insl
and
pop
fdivrs
fidivrl
addr16
mov
popa
rcll
jo
adc
ss
push
mov
xchg
jns
rcrl
loop
mov
clc
jmp
sbb
push
push
aad
sbb
sbb
mov
sbbb
flds
push
push
pop
stos
xchg
and
movsb
mov
call
cs
mov
pop
mov
enter
pop
xlat
or
and
aad
das
into
mov
nop
out
scas
in
inc
hlt
jg
in
js
sbb
jmp
test
stos
aad
cmc
pop
mov
xor
push
xchg
aas
test
iret
repz
push
cld
pushf
aad
mov
add
dec
add
push
icebp
les
dec
dec
out
pop
test
clc
jbe
sti
xor
sbb
mov
into
or
xor
adc
fcompl
xchg
cwtl
into
es
aas
inc
rclb
lods
sbb
lret
mov
dec
pop
xor
out
test
dec
into
mov
cli
cmp
pop
test
cmp
movsb
in
push
test
mov
mov
aad
mov
imul
sub
inc
cli
push
mov
mov
test
imul
nop
lahf
cmp
cmp
out
aad
sub
adc
or
mov
pop
mov
mov
out
xchg
ret
cltd
repnz
jl
test
mov
jb
test
popa
mov
jo
cli
out
sub
stos
cmp
in
sbb
cmpsb
jle
jg
lock
cmp
pop
in
dec
pop
out
add
mov
xchg
cmp
popf
cwtl
data16
repnz
call
pop
pop
pop
or
iret
rclb
push
sbb
aad
pusha
andb
fcom
aas
mov
mov
add
pop
stc
repz
loop
movsl
adc
add
movsb
push
mov
mov
push
jnp
std
aaa
jb
pop
jnp
xor
jbe
enter
jbe
pop
pop
jb
mov
mov
pop
and
out
sub
and
xchg
scas
mov
jge
in
popa
push
mov
inc
daa
xor
sarb
stc
or
push
sub
js
push
scas
sti
outsb
mov
cmpsb
call
jae
add
xchg
iret
adc
mov
mul
loop
add
pop
sbb
loopne
dec
icebp
pusha
add
pop
dec
dec
aas
addb
cmp
popl
pushf
inc
or
nop
adc
adc
pop
push
add
fwait
aas
xor
mov
inc
push
ret
int3
adc
clc
push
in
lea
movl
push
imulb
jne
lds
hlt
decl
jnp
adc
xchg
inc
cmp
sub
jecxz
adc
cmp
push
mov
add
dec
push
jmp
jne
xor
pop
out
push
xchg
out
mov
xchg
pop
inc
out
xchg
leave
stos
sbb
loop
in
xchg
mov
pushf
test
sub
cmc
add
sub
mov
gs
mov
cmp
jmp
clc
jp
arpl
cli
dec
lods
push
add
sbbb
out
sbb
loope
mov
push
fcmove
rcr
inc
dec
xchg
cmpsl
sub
inc
mov
jno
jno
in
xchg
xchg
insl
mov
test
or
js
out
mov
adc
sbb
lret
lea
and
sub
jmp
addr16
jge
lods
fimull
dec
add
sbb
adc
fisubs
je
int
mov
sti
stos
or
push
jno
lret
or
adc
mov
mov
jne
scas
inc
xor
jb
fbstp
push
sub
jp
insb
xchg
icebp
nop
push
insb
fsubr
je
inc
jo
cmpsb
jo
popf
sbb
jne
aam
xchg
and
loop
push
jl
mov
cli
and
mov
sub
js
daa
std
pop
cmpb
cld
idivl
popf
adcb
jg
arpl
mov
je
pop
mov
into
ds
or
lea
push
adc
sbb
enter
insb
jecxz
sbb
inc
int
repnz
fnstenv
push
insb
jl
lock
jmp
call
stos
jmp
inc
mov
sahf
add
mov
movsl
mov
arpl
jo
lret
fcompl
jno
sub
test
lret
inc
adc
dec
push
lret
xor
cmpl
leave
cmp
mov
adc
fidivrl
xchg
dec
cs
or
inc
pop
les
xchg
xchg
mov
repnz
and
add
cmp
sti
dec
xchg
rol
sub
inc
imul
js
pop
cmp
add
inc
cmp
icebp
sbb
mov
mov
mov
xchg
lea
int
aam
sub
iret
stc
int
push
aam
inc
and
push
push
push
gs
sti
addb
or
add
xchg
notb
push
ljmp
dec
push
lods
cmp
xchg
sahf
adc
push
inc
lret
pop
xchg
iret
jbe
add
scas
xacquire
cmp
hlt
fwait
outsb
mov
aas
rclb
cs
jnp
rcll
pusha
je
roll
pop
stos
lahf
outsb
roll
in
sti
jle
int3
pop
xchg
mov
in
stc
pop
aaa
adc
xchg
push
loope
xor
push
inc
out
jno
pop
mov
rcll
push
jp
pop
lods
xchg
aaa
xchg
sub
pop
dec
test
ret
icebp
imul
and
test
ds
sbb
and
adc
es
xorl
push
aas
fsts
adc
xchg
sub
push
in
lret
in
dec
adc
lods
xlat
aas
adc
js
in
sub
mov
scas
cltd
into
sub
shlb
xor
fisttpll
and
rclb
jbe
ret
jmp
outsb
adc
and
xor
push
push
ret
pop
or
jne
mov
push
push
shlb
iret
enter
repnz
imul
xchg
sub
and
pushf
jp
adc
xlat
jg
cwtl
xchg
scas
clc
movsb
loopne
mov
sti
movsb
push
jo
je
cmp
pusha
mov
xor
pop
bsr
negb
jle
cld
push
pop
loope
test
psubusw
ss
jno
in
xor
fnstsw
scas
jnp
outsl
dec
push
out
out
dec
inc
mov
dec
and
mov
adc
dec
sti
push
fdivs
lods
mov
jg
add
sub
xor
push
dec
pop
xchg
mov
je
shll
mov
push
jmp
cmp
or
mov
mov
loopne
and
rclb
bound
inc
in
jns
push
sub
xlat
fmuls
xchg
test
fwait
fwait
out
sbb
jb
push
loop
fnsave
pop
and
stc
sub
xchg
out
pushf
in
jmp
cltd
iret
mov
int3
inc
xchg
int
call
out
fnstcw
nopl
daa
shl
cmp
mov
fists
push
fstpt
dec
sbb
stc
mov
xchg
insl
mov
mov
add
adc
fwait
sti
pusha
jecxz
mov
mov
clc
scas
outsb
stos
add
mov
shll
lret
lahf
xchg
into
test
or
inc
clc
adc
xchg
mov
jl
ja
sarb
addr16
pop
inc
repz
cmpsb
shrb
pop
jbe
adc
pop
pop
in
mov
jne
sub
inc
in
mov
ds
sbb
lret
dec
mov
push
mov
mov
adcl
mov
pop
outsb
push
xor
clc
fisttpl
push
push
and
pop
dec
mov
repz
mov
shlb
push
mov
adc
testl
sub
scas
mov
or
in
call
mov
or
push
push
cmp
pop
jb
sbbb
push
les
lods
rcrl
jmp
jne
rcl
in
cmpsl
scas
and
stc
movsb
or
loope
xor
mov
dec
subb
shrl
test
jg
mov
int3
pop
sbb
or
sub
lods
cwtl
push
cmp
cmc
sub
xorb
in
cmc
popa
pop
mov
enter
push
or
mov
aas
arpl
lock
in
popf
cmc
cltd
add
mov
gs
test
out
aam
adc
cli
mov
ss
add
jno
inc
test
xchg
cmp
xor
sbb
dec
mov
cmp
or
out
das
sbb
jae
mov
ljmp
outsl
jns
dec
pop
cld
add
test
add
pop
push
push
xchg
dec
adc
mov
in
sub
movsb
or
lods
loopne
inc
mov
ds
inc
sbb
leave
adc
cmp
mov
clc
arpl
ret
xchg
mov
mov
push
mov
mov
push
lds
movsl
ret
adc
or
push
div
and
cmp
push
repz
mov
pop
repz
xlat
ret
ret
or
mov
aam
fs
arpl
cmp
adc
inc
fcmovnu
jns
add
and
sbb
cs
loope
sub
inc
mulb
jne
dec
push
pushf
mov
mov
xchg
pushf
nop
rclb
xchg
cltd
test
aad
or
call
popa
push
rcr
pop
test
ds
negl
out
andb
cmp
sbb
cmp
addr16
int3
adcb
aaa
and
mov
xor
add
imul
lret
adc
mov
cs
aaa
ljmp
popf
pop
and
lds
mov
pop
mov
test
sbb
aam
inc
int3
xor
mov
adc
ljmp
hlt
fsubs
adc
mov
insl
xlat
sub
js
cmp
cs
or
stc
repz
mov
fmull
jbe
cmpl
jge
ss
es
sti
jle
adc
arpl
jns
in
dec
and
jns
iret
dec
pop
negb
sahf
cmc
lods
roll
mov
scas
out
test
mov
xor
or
mov
rcll
add
mov
pop
sbb
mov
push
mov
inc
pop
movsl
sbb
pop
jg
cld
push
jns
and
add
or
data16
mov
and
and
lock
jge
cmp
xchg
sub
jp
lret
ds
or
jne
out
fwait
adc
daa
clc
fstpl
in
and
arpl
ror
fwait
lock
shlb
js
push
mov
dec
jnp
mov
orl
push
out
lea
pop
test
sbb
out
arpl
sti
cld
add
jo
leave
into
outsl
ret
int
scas
stos
add
jnp
add
xor
inc
lret
pop
push
aad
mov
cmp
push
punpckhbw
scas
xor
xlat
jp
mov
pop
xlat
aam
push
dec
inc
shrb
lock
dec
push
mov
pop
inc
inc
lods
pop
rcrl
and
dec
mov
sbb
loop
jg
in
pop
xor
dec
call
mov
lods
jnp
hlt
or
xchg
in
mov
daa
mov
mov
push
jne
daa
ficoms
push
inc
mov
addr16
mov
loope
mov
mov
mov
cmp
mov
dec
xchg
and
inc
jno
clc
out
mov
lds
sub
inc
and
sbb
jg
ds
inc
ss
loop
mov
fstl
jge
sbb
sub
sub
and
sbb
ss
aad
popf
or
pop
loopne
jbe
shlb
cmp
jge
mov
dec
cltd
push
daa
movl
mov
data16
jecxz
or
xchg
xor
push
outsb
pop
cmp
push
test
mov
push
sbb
or
jae
adc
aas
lods
mov
xchg
shll
imul
movaps
loopne
mov
mov
pop
mov
loop
fldcw
das
sub
or
add
test
rorb
pop
rolb
or
mov
subl
add
push
jp
pop
stos
push
movsb
sbb
daa
in
loope
fxch
xor
ret
sub
je
add
ds
daa
out
or
dec
dec
int
out
jae
and
sbb
hlt
add
inc
push
dec
xor
and
dec
outsb
and
mov
cld
adc
in
out
mov
pop
dec
pop
incl
inc
lods
dec
jb
cld
mov
andl
pop
gs
mov
or
mov
dec
punpcklbw
movsb
dec
push
pop
clc
ret
pop
scas
daa
sbb
push
shrl
mov
dec
jecxz
jge
insl
sti
cmp
out
or
sbb
jbe
in
push
dec
fucom
lods
ljmp
add
je
dec
arpl
fdiv
jno
jo
push
mov
or
push
inc
mov
ja
mov
ret
subb
ret
push
mov
les
or
inc
jle
adc
push
pop
or
and
rol
and
or
inc
and
sub
lret
fsubrs
mov
sub
repnz
std
push
bsf
fmull
sub
pop
jae
pop
sub
pop
lea
sti
fadds
test
dec
cmp
sarb
push
pop
mov
xorl
mov
aam
cmpsl
scas
pop
arpl
or
and
xor
aad
jbe
mov
push
jl
mov
pop
xor
and
repnz
mov
mov
sbb
out
mov
js
mov
out
iret
ds
pushf
push
int3
jmp
jne
mov
mov
push
lea
es
pop
mov
or
insb
xor
clc
fcoml
repz
test
popa
mov
xlat
dec
jb
xor
subb
mov
pop
xor
jp
push
rolb
data16
int3
adc
and
xchg
sub
mov
fwait
inc
addr16
pop
leave
lds
mov
stos
inc
mov
test
mov
xor
pop
pop
dec
sbb
fbstp
fstpt
pop
push
inc
out
adc
cld
andl
mov
ljmp
orb
dec
mov
sbb
add
lcall
push
ljmp
mov
or
ror
popa
fnstsw
out
icebp
adc
lahf
push
jae
movsb
scas
loop
cld
add
aad
fldcw
or
and
pushf
sar
jo
les
fnsave
push
xchg
mov
dec
mov
daa
mov
push
jg
add
or
fisubl
movsl
push
adc
and
sub
push
js
shll
testl
push
mov
dec
mov
test
in
pop
es
jns
fsub
dec
cmpsb
add
leave
pusha
add
pop
cmp
cmpsl
xchg
out
addb
mov
clc
filds
bound
cmp
inc
call
insb
mov
or
jl
inc
adc
shl
subl
or
xchg
je
orb
sbb
into
dec
sbb
xchg
mov
dec
cmp
clc
adc
fsubl
or
stc
stos
inc
popf
sub
adc
addr16
xchg
out
adc
lcall
dec
sahf
sbb
out
into
mov
mov
das
test
mov
icebp
jmp
dec
fdivl
inc
and
mov
fdivrl
add
scas
in
repnz
mov
mov
xchg
pop
iret
in
sub
lds
mov
jl
pusha
push
sbb
les
test
pop
add
push
xchg
loope
or
int3
cmpsl
cmp
hlt
and
sub
jp
add
ret
add
popa
push
ret
push
hlt
les
pop
jns
dec
popf
out
mov
js
and
outsb
and
lret
sbb
mov
aaa
icebp
push
repnz
push
inc
mov
push
test
lea
addr16
adc
lcall
jo
xchg
push
dec
cmpsl
jmp
inc
xchg
sub
sbb
fnstenv
imul
dec
xchg
lods
aas
nop
repnz
cmc
je
ljmp
mov
fwait
outsb
gs
out
push
das
ret
addr16
push
sbb
test
rclb
pop
mov
sub
call
out
add
dec
cmp
sub
push
stos
cwtl
loop
out
inc
aas
subl
fcomps
sbb
sarb
and
mov
hlt
popa
jnp
mov
fs
leave
add
dec
pop
pop
jge
mov
data16
xchg
leave
hlt
xor
pop
mov
xor
xor
in
cltd
jnp
adc
lock
bound
mov
xchg
xchg
mov
rol
mov
in
xlat
push
mov
and
sub
adc
sbb
orb
add
imul
jmp
inc
mov
cmp
mov
mov
adc
mov
inc
mov
ficoms
xor
pop
addr16
jmp
xchg
pop
cltd
pusha
pop
pop
and
jl
pop
mov
mov
xchg
stos
dec
repnz
out
js,pn
mov
dec
mov
xor
inc
loop
xchg
xor
xchg
xchg
test
push
mov
or
mov
lret
adc
pop
cmpsl
fdivrs
movsl
sbb
dec
rcr
mov
icebp
cmp
subb
das
pop
fcmovne
xor
jae
or
and
inc
xor
movsl
les
inc
shl
fcompl
les
cmp
popa
loop
or
xchg
je
xchg
stos
push
lock
push
mov
jl
inc
incl
jg
push
insb
sarl
imul
stc
xor
mov
fwait
xor
cmc
push
xchg
xchg
outsb
loopne
adc
xchg
das
add
cmp
push
inc
fwait
sarb
xchg
or
dec
ja
leave
les
add
push
mov
push
push
ja
pop
lret
inc
cld
cmpsb
cmpsb
repz
lret
jnp
outsb
fadd
repz
rcll
hlt
push
je
fwait
push
sbb
inc
xor
mov
pop
lds
lods
in
js
dec
out
mov
inc
sbb
sbb
aaa
mov
int
adc
jge
and
xchg
pop
and
sbb
ds
mov
and
mov
push
fcmovb
dec
imul
out
stos
dec
xor
mov
cmp
mov
call
mov
xor
fs
inc
cmc
jne
out
rorb
enter
pushf
fcom
dec
or
roll
mov
inc
lods
enter
push
push
int3
jecxz
mov
pop
inc
jb
lods
add
sbb
mov
sub
outsl
popa
orb
das
data16
andl
and
mov
cmp
dec
sub
int3
cmp
mov
jmp
ss
vmovupd
cmpsb
stos
in
adc
jmp
lret
sbb
fcoms
out
pop
mov
or
and
rol
and
sub
push
mov
scas
xchg
decl
jno
outsl
push
addr16
pop
sarl
nop
sbb
sbb
dec
mov
push
fs
pop
push
xchg
add
inc
mov
pushl
inc
ss
into
pop
jae
fwait
loopne
cmpsb
sbb
jle
adc
stos
mov
jno
add
jne
jo
mov
lahf
je
bswap
add
out
sub
enter
jb
repz
add
dec
dec
icebp
stos
clc
call
mov
lret
mov
aaa
arpl
cmp
bound
lock
shll
lcall
fucomi
movsl
imul
xchg
mov
in
gs
shlb
mov
std
or
neg
mov
lods
pusha
push
xor
lret
in
and
aaa
pop
repz
ret
sahf
std
xchg
pop
push
xchg
aaa
and
mov
repnz
int3
cmp
scas
add
rcll
pop
movsl
aam
pop
dec
js
jns
mov
mov
inc
mov
cmc
jb
lods
popf
jle
nop
mov
or
les
and
xchg
sti
addr16
mov
cmc
mov
pop
outsb
in
jge
push
daa
popf
repnz
pop
push
mov
bound
loop
add
gs
ret
add
add
mov
gs
movsb
mov
dec
out
sbb
sub
cmpsl
daa
aas
scas
pushf
std
dec
lret
and
clc
sahf
cmpl
aaa
xchg
daa
out
popf
mov
mov
sub
rclb
mov
repz
imul
xor
mov
inc
xor
movsl
push
inc
test
aaa
push
xchg
push
push
or
and
mov
mov
mov
icebp
xchg
movsl
push
dec
sub
xor
sahf
hlt
mov
pop
mov
xor
or
pop
ja
add
adc
insb
lahf
and
fisubrs
rorb
repnz
decb
adc
xchg
push
and
popf
sub
mov
dec
push
mov
aam
andb
inc
je
pop
in
mov
lahf
xchg
outsb
pop
xor
xchg
pop
or
sbb
loopne
in
inc
push
bound
adc
fiaddl
loope
movsl
sbb
push
nop
xor
in
mov
push
and
adc
xor
xor
adc
mov
js
inc
mov
in
pop
incl
pop
ret
loopne
movsb
jmp
insl
addr16
lock
jmp
ss
nop
mov
inc
mov
cmpsb
add
in
bnd
cli
push
pop
mov
xchg
inc
repz
mov
sub
fbld
addb
aad
sub
std
xor
mov
test
test
xlat
mov
dec
popa
pop
insb
mov
mov
sub
lods
push
pop
pop
or
cmp
inc
adc
mov
inc
adc
mov
aas
or
fstpt
mov
jbe
adc
loopne
imul
nop
enter
out
sbb
xchg
sbb
mov
and
mov
rolb
push
mov
push
jo
cmp
shll
dec
outsl
mov
xor
and
ds
mov
int3
mov
dec
mov
repnz
sub
and
fistps
aad
enter
xchg
in
pop
pop
divb
movsb
popa
lock
xchg
test
aaa
out
out
loopne
jb
mov
xor
mov
sub
test
sbb
xchg
lods
aam
xor
cmp
rcl
jl
lods
int3
adc
fldl
mov
adc
inc
sub
jae
jg
and
pop
push
clc
sub
test
cwtl
sub
nop
vpshufd
jns
cli
sbb
int
and
nop
shrl
or
fldl
and
cmp
repnz
shrl
aaa
xchg
fs
and
sbb
push
sbb
fnstcw
loope
enter
fistl
xchg
out
mov
das
fnsave
or
lock
and
inc
or
and
fdivr
outsb
pop
scas
aas
adc
mov
fstl
inc
jge
push
sbb
sub
jge
or
test
hlt
mov
ljmp
or
add
add
fsts
ret
jne
sub
imul
stc
push
push
and
push
mov
leave
es
addl
into
jo
mov
leave
lock
and
mov
xchg
pop
cmp
push
roll
and
int
mov
pop
in
js
test
push
pop
pop
lcall
jae
das
mov
push
das
iret
lock
es
mov
in
pop
movsl
sbb
pmaxub
ret
sub
testl
jnp
in
dec
sbbb
repz
mov
pop
aaa
pop
fsubs
xchg
add
pusha
add
enter
out
sub
push
mov
inc
cmpsl
push
cmp
push
mov
inc
or
lret
ljmp
dec
adc
xor
inc
lret
or
in
xorl
inc
or
sub
test
movsb
add
push
insl
xchg
pop
ljmp
add
lea
inc
pop
dec
shll
cltd
fwait
not
xor
xchg
in
aas
outsb
cmp
sub
sub
mov
dec
pop
xor
pusha
jle
and
push
or
adc
in
jp
mov
inc
mov
pop
pop
int3
jmp
ljmp
add
ja
aaa
push
in
es
mov
mov
sub
mov
sub
push
cld
adc
out
gs
sub
stos
pop
inc
push
push
push
inc
repnz
sbb
mov
ds
cmc
std
lret
ja
add
sbbl
push
lock
add
xorl
and
jle
pop
test
sub
frstor
enter
mov
pop
mov
pop
or
xchg
jno
aaa
push
push
add
lods
mov
xchg
cwtl
ljmp
int
cli
in
ljmp
xchg
pop
es
push
fiadds
mov
xor
cmc
leave
pushf
push
fwait
add
cltd
mov
in
bound
adc
mov
in
mov
or
mov
das
fcoml
pop
xchg
push
sahf
jbe
pop
sti
mov
shlb
repnz
insb
dec
push
addl
mov
xor
dec
push
ffree
scas
cmp
xchg
mov
or
pop
orl
lcall
mov
pop
std
fabs
cs
cltd
dec
add
lcall
repnz
mov
xlat
lahf
pop
data16
ss
test
mov
cld
cmp
icebp
cmp
in
cmp
repnz
leave
cmp
mov
icebp
hlt
test
push
call
or
arpl
and
aas
fidivs
loop
enter
iret
jge
in
ret
mov
push
sbb
cwtl
xchg
xchg
and
enter
jge
pop
jb
fstpl
mov
mov
dec
fnsave
cld
push
and
lds
in
arpl
mov
mov
or
lea
xchg
int3
xchg
or
sti
aaa
add
and
mov
mov
xor
xchg
push
cmp
xchg
sar
enter
dec
push
notl
jnp
test
sti
bswap
movsb
cmp
xor
inc
cld
loope
sbb
dec
cmp
xchg
sub
lea
loope
cmp
clc
xor
cmp
aaa
mov
and
pushl
xchg
aad
jne
aas
lcall
pop
cld
push
jae
adc
push
push
push
adc
adc
and
cmpb
outsb
push
cs
out
lock
inc
cmp
imul
xchg
out
shlb
sbb
imul
dec
add
push
nop
push
mov
dec
shlb
scas
aam
push
jmp
dec
mov
out
rol
leave
mov
mov
pop
jge
or
cwtl
mov
loop
sub
jge
int3
or
pop
sbb
ret
mov
loop
jp
jmp
stc
mov
and
mov
js
push
add
into
sarl
insb
dec
mov
add
ja
jo
jl
mov
or
in
xor
adc
ret
lock
sbb
ret
xchg
mov
sub
fdivs
in
or
mov
lret
cwtl
inc
out
out
fcompl
sbb
test
and
mov
loop,pn
loopne
add
sub
cmp
shrl
int3
pushf
ds
push
leave
out
ds
cli
popf
jp
subb
pop
mov
roll
sahf
push
scas
pop
pop
hlt
mov
stos
pop
add
dec
fwait
test
loope
cs
jnp
mov
sub
cli
mov
jnp
pop
adc
rcl
jbe
inc
mov
mov
fsubs
in
in
fcoml
inc
hlt
insl
jns
or
dec
and
cmp
lret
ret
and
divl
xor
sti
add
inc
leave
pop
in
fimuls
in
adc
cmp
adc
lea
push
mov
andb
or
imul
sub
test
pop
jbe
xchg
sbb
or
lret
push
cmp
ret
fidivl
mov
fwait
dec
sbb
sti
push
or
scas
mov
int3
inc
pop
mov
fists
push
xchg
sbb
fadds
mov
addb
jmp
rolb
jmp
scas
enter
jnp
subb
outsb
add
inc
cmpl
xchg
int
popa
mov
xchg
mov
dec
sahf
iret
jmp
icebp
fdivrs
mov
add
mov
popa
movsb
sub
je
cmp
xchg
mov
push
cmpsl
mov
int
rolb
cmp
fcompl
pushf
push
cmpb
add
jg
dec
inc
cltd
xchg
jg
mov
or
sbb
in
mov
mov
xchg
pop
addr16
test
imul
fs
cld
jmp
sar
add
loopne
pop
pop
cwtl
xchg
jns
js
fprem1
rol
mul
sub
leave
mov
sub
jge
adc
or
or
fisttpll
in
cwtl
pop
push
sarl
dec
lahf
inc
ret
leave
mov
fisubrl
xor
sub
mov
jl
mov
inc
dec
xor
adc
enter
xchg
aas
addr16
adc
dec
test
pcmpeqw
mov
xlat
xchg
lods
icebp
add
pop
repnz
jno
testl
mov
xor
jb
sub
inc
das
scas
push
cmp
rorb
outsb
mov
mov
jle
mov
mov
dec
adc
nop
dec
or
sti
stos
popf
jns
sub
aad
dec
fiadds
mov
xor
roll
and
filds
lret
stos
mov
adc
int3
icebp
int3
loop
sahf
les
lea
popf
mov
xor
xor
mov
ja
push
cwtl
sub
jns
scas
add
cmp
mov
orl
divb
adc
mov
stos
xor
or
or
dec
xor
sarl
inc
subb
add
lea
cwtl
and
pop
mov
cmpsl
or
je
in
xchg
push
fldenv
stc
aad
fcmovu
pop
bound
or
mov
test
pop
into
int
and
push
adc
mov
out
jp
xchg
pop
outsl
mov
pop
ja
mov
and
ret
in
dec
fs
inc
push
and
out
andl
mov
lret
cmp
stc
sahf
sub
push
xchg
push
pop
int3
fcomp
hlt
nop
les
imul
mov
lcall
xchg
add
pop
insl
dec
lock
test
add
mov
idiv
popa
xchg
jl
jmp
mov
lds
jae
inc
data16
pop
rol
loopne
dec
jmp
and
cmpsb
int
push
xor
cwtl
negb
hlt
lods
arpl
jecxz
mov
cmp
add
test
adc
xor
jp
scas
iret
or
shr
andb
xlat
data16
stos
inc
lret
bound
stc
adc
loopne
mov
lcall
sahf
scas
mov
jne
mov
push
jns
xchg
psraw
fsts
insb
push
out
test
arpl
lcall
xor
xor
pop
add
xor
cmpsb
popf
outsb
andl
insb
xchg
data16
sub
pop
jne
int
sahf
jno
daa
sub
sbb
dec
ret
xor
pushf
lret
ja
mov
pushl
and
out
sbb
fcmovne
xor
sub
xor
jne
into
mov
pop
test
push
cmp
mov
out
and
outsl
sarb
js
mov
xchg
rol
pop
iret
in
rol
add
popa
sbb
pushf
test
jle
cmpsb
push
notl
push
mov
int3
scas
adc
cltd
fcomps
dec
ret
sub
push
dec
jle
jo
and
or
push
in
sub
jle
mov
mov
stos
mov
mov
loopne
pop
aaa
xor
divl
jno
insl
mov
add
std
pop
popf
int
mov
fwait
sbb
push
sub
ficompl
sub
xor
cmp
notb
jg
call
push
outsb
mov
or
cmp
xchg
sub
inc
inc
or
or
movsb
push
sbb
xchg
xor
xor
push
mov
adc
xor
jge
dec
and
enter
mov
inc
sub
mov
mov
mov
jbe
rcr
or
iret
and
xor
test
xorl
jo
aad
sub
push
fwait
xor
sbb
inc
sbb
adcl
cs
push
adc
bound
pusha
mov
push
test
pop
addb
mov
iret
ljmp
sbb
dec
jmp
inc
mov
push
jns
lock
xor
lahf
xor
jl
enter
cltd
jbe
rolb
sbb
call
aam
loopne
push
cmpsb
add
mov
jg
xchg
in
addr16
xchg
cmpsl
cltd
dec
enter
add
adc
pop
sub
or
jb
mov
lods
mov
cmp
shl
xchg
inc
push
xchg
pop
inc
int
ja
push
std
push
push
daa
pop
in
fmull
push
fcomps
dec
leave
adc
mov
cmp
sbb
rcl
imul
rclb
and
ja
pop
push
mov
or
jb
std
mov
push
xchg
fwait
mov
mov
push
xchg
jmp
push
pop
mov
loopne
xor
inc
and
cltd
loopne
xor
mov
movsl
mov
push
ljmp
pop
jbe
mov
sahf
push
push
inc
movsb
lock
rorb
popa
outsb
or
imul
icebp
sbb
dec
push
or
bound
daa
les
mov
bound
inc
imul
cmp
rolb
xchg
in
loopne
sub
lods
mov
jge
add
xchg
ret
cmc
sbb
sub
js
movsl
subl
mov
fldcw
sbb
iret
jecxz
dec
or
cwtl
dec
sub
shrb
enter
xlat
and
fistps
xor
sbb
mov
pop
das
sbb
inc
insl
jo
les
sub
lds
cltd
out
aas
aas
push
call
mov
mov
lret
sbb
inc
in
pushf
inc
xchg
mov
mov
incb
jnp
inc
into
cmc
or
push
sub
repnz
int
cs
ficomps
cmp
mov
sub
mov
cwtl
scas
ja
sub
sbb
pop
and
xor
cmp
inc
sbb
xor
mov
xchg
mov
jnp
sbb
aaa
lods
insl
les
js
sarl
mov
aam
xchg
or
aaa
shll
ds
lock
nop
xor
add
ss
and
outsb
xchg
pop
inc
mov
jmp
mov
dec
clc
iret
cs
filds
sbbl
xchg
popa
mov
xchg
int3
push
cltd
push
lock
fwait
jl
add
ja
and
or
adcb
push
fst
arpl
out
push
mov
mov
and
add
mov
adc
push
mov
lret
enter
jle
dec
cmc
add
stos
jae
les
mov
sbb
ret
ror
sarb
stos
mov
xlat
fsubr
mov
xchg
sub
pop
mov
lcall
clc
mov
sbb
ds
ret
stos
fiaddl
adc
enter
lahf
adc
repz
xchg
mov
adc
cmpsl
lods
mov
push
div
push
lods
insl
fcmove
mov
test
push
add
and
jl
sbb
test
cmp
mov
cmp
insb
lock
loope
aas
jae
mov
enter
out
outsl
mov
test
out
in
popa
or
or
xlat
lock
jmp
push
sub
jecxz
clc
movsl
push
pusha
push
pop
lds
iret
sub
loopne
or
into
adc
arpl
sbb
mov
fldenv
xchg
xchg
sub
pop
pop
cmp
inc
outsb
shrl
dec
rclb
shlb
cwtl
xchg
jg
mov
pop
push
pop
pusha
and
and
imul
andl
aam
mov
daa
add
adc
or
adc
mov
enter
pop
or
filds
out
lret
sub
dec
pop
ja
fnstcw
fucomi
mov
stos
jmp
fwait
out
leave
mov
cld
cmpb
xchg
stc
ljmp
inc
mov
xlat
mov
imul
mov
shl
push
jae
inc
in
xor
sub
rcrl
inc
sbb
out
inc
fsubrl
xchg
shll
mov
js
into
cmp
stos
mov
mov
pop
and
mov
aas
push
aad
in
jnp
pop
es
popf
test
cmp
std
call
add
cmp
mov
loopne
in
push
int3
fsubs
xor
cmp
dec
and
or
sbb
inc
sahf
push
arpl
enter
sti
pop
push
jbe
ret
jg
or
ja
daa
jns
pop
fistpll
push
inc
cmp
add
popf
dec
enter
pusha
leave
mov
pushl
inc
std
dec
and
and
mov
sti
xchg
mov
add
mov
mov
xchg
fwait
lods
movsb
pop
icebp
outsl
push
add
xor
js
sbb
sub
inc
jne
or
pop
addr16
out
cmp
shll
scas
dec
push
inc
inc
push
repnz
or
out
inc
cmp
xor
push
xor
pop
mov
rcl
lds
ret
inc
push
push
dec
nop
push
jae
ja
ret
mov
addl
mov
arpl
sbb
mov
and
mov
sub
pop
lods
xor
xchg
mov
test
and
add
out
imul
aaa
int
in
ja
inc
sub
scas
mov
fnstcw
pop
inc
sbbl
rcr
scas
sub
repz
sahf
fnstsw
xor
btsl
lds
scas
jb
mov
jnp
sbb
dec
push
stc
imul
inc
nop
idivl
jecxz
inc
pop
inc
orl
test
jo
dec
addr16
sub
in
add
xor
sahf
mov
daa
jb
dec
pop
or
gs
pop
jle
push
jmp
jno
sbb
jl,pn
decb
outsl
xor
xor
mov
mov
jnp
add
inc
mov
dec
and
mov
clc
cmp
jmp
sbb
addl
mov
xor
mov
dec
mov
loopne
adc
ja
adc
pop
adc
mov
mov
sbb
insb
inc
xchg
inc
cmp
aad
add
xchg
mov
and
push
or
outsb
jge
shr
adc
rclb
sbb
sbb
cmp
mov
jp
sbb
fsubl
add
scas
xchg
cmp
adc
and
in
and
jge
or
mov
pushf
orb
mov
add
popa
inc
mov
mov
test
mov
jmp
xchg
mov
dec
data16
push
cmp
push
adc
jbe
int
sti
cmp
and
mov
sbb
and
sbb
push
jecxz
or
int3
popf
and
xor
sbb
adc
adc
pop
jl
icebp
sub
hlt
cmp
rcrl
sbb
mov
fiadds
mov
add
out
or
xor
dec
and
movsb
imul
inc
jle
mov
add
and
jp
ja
cli
lret
rcrl
and
nop
jge
sbb
popf
mov
es
lods
daa
shll
mov
mov
mov
in
fwait
outsl
leave
and
pop
cmp
cmp
adc
pop
fwait
div
sbb
scas
inc
mov
or
test
shlb
outsb
test
cmp
cmp
dec
imul
ss
cltd
sbb
aad
orb
test
pop
mov
pop
jg
pusha
push
insb
mov
push
lods
movsl
jl
cs
rcl
or
mov
inc
ds
mov
pushf
push
insb
inc
ret
add
enter
mov
push
pusha
jecxz
popa
mov
in
or
add
call
xor
ds
outsb
mov
xchg
inc
push
andl
adc
pushf
adc
mov
hlt
push
sbb
in
pop
stos
push
jne
fwait
and
ds
or
pusha
arpl
pop
add
adc
int3
cmp
stc
inc
clc
js
lahf
xlat
xchg
scas
add
divl
xor
mov
push
sbb
or
jp
sbb
fldenv
sbb
loopne
jae
jbe
cli
outsb
adc
inc
push
iret
sbb
dec
orl
insl
mov
adc
xor
jmp
fwait
daa
test
add
or
xorb
pop
push
addr16
sarb
add
aas
call
hlt
sub
xor
jno
and
ss
and
out
xchg
cld
repz
cli
outsb
xor
pop
sub
ficoml
jb
test
jbe
repz
cmp
and
xor
sbb
jnp
std
imul
dec
xor
adcb
ss
dec
rclb
popf
sub
jle
pop
push
adc
sbb
xrelease
xorl
test
das
stc
sahf
and
dec
inc
fxch
lahf
call
jae
inc
xor
ret
jns
test
jno
imul
dec
jae
nop
stos
aad
push
movsb
cmpsl
inc
jmp
leave
dec
pop
inc
jbe
push
loope
orl
dec
pop
jne
or
adc
cmp
xchg
add
sub
inc
dec
adc
fwait
sub
nop
fdivs
dec
cmp
jmp
fcomip
push
sub
adc
mov
aaa
cld
inc
in
sahf
in
push
inc
loopne
dec
jmp
and
jl
sbb
sub
pushf
jle
in
std
ds
cmp
sbb
adc
cmpsb
push
add
sarl
cwtl
in
data16
gs
xchg
fdivl
adc
mov
xchg
sub
dec
inc
adc
idivb
dec
gs
test
lock
mov
mov
adc
mov
mov
popa
xor
scas
subb
sahf
xchg
cltd
fwait
add
add
xor
dec
mov
xchg
std
mov
cmpsb
fists
pusha
loope
mov
and
sti
pusha
jnp
dec
lret
jne
cmova
pushf
push
mov
or
lods
adc
aaa
mov
orb
push
inc
adcb
in
jmp
mov
adc
adcl
adc
fwait
and
xor
jae
add
loopne
pop
mov
xlat
xchg
sahf
pop
dec
cmp
push
das
pop
cli
mov
sub
out
mov
xcrypt-ctr
cmpsl
fisubrl
in
ds
fcoml
cmp
sub
rclb
sub
mov
scas
push
jnp
adc
or
jmp
inc
or
stos
mov
rcll
fcmovnu
push
sbb
les
popa
roll
inc
dec
movsl
cmc
or
cld
sub
mov
inc
fistl
into
push
jge
xor
out
inc
fstpt
mov
hlt
in
sub
pop
push
jp
dec
insl
pop
mov
dec
gs
loop
mov
cltd
gs
and
imull
mov
stc
fidivrs
jge
insl
xlat
or
push
cmpsb
fs
mov
mov
testb
jo
mov
xor
sbb
dec
repnz
mov
jp
jb
push
std
push
cmpsb
lahf
jl
imul
jae
and
mov
adc
aaa
cmpsb
setp
mov
or
xchg
cmp
xlat
cmpsl
out
cltd
lcall
out
repz
repz
leave
adc
stos
lahf
dec
loopne
aad
movsb
imull
movsb
sub
mov
and
dec
sbb
xchg
jmp
mov
pop
outsl
mov
fwait
call
lcall
jb
aaa
adc
mov
xor
push
dec
mov
mov
sub
lods
cmpsl
and
mov
movsl
jecxz
xchg
out
leave
fisubs
cmpsl
je
out
and
xor
and
and
out
movsl
sbb
inc
scas
cmpsl
stos
dec
dec
jne
call
push
arpl
rolb
ljmp
fwait
jp
mov
pop
sbb
pop
mov
leave
in
loop
sub
leave
inc
aas
add
rep
jmp
cmpsl
jmp
jne
loopne
loope
imul
push
fisubs
add
out
lea
dec
mov
mov
fstl
jno
sub
das
push
cmpsb
mov
dec
movsb
push
outsb
cmp
lret
jge
je
mov
jo
repz
shrl
or
aam
dec
les
or
mov
or
push
dec
mov
sbb
xchg
je
xchg
add
or
mov
mov
loopne
ret
mov
lret
rolb
xor
xchg
aas
scas
scas
or
cs
xchg
filds
and
jmp
out
cmp
enter
jge
mov
jecxz
push
test
adc
loopne
fxch
rolb
jne
jns
test
mov
and
inc
push
add
adc
test
imul
leave
sub
mov
push
sub
dec
gs
mov
and
dec
testb
and
lahf
jmp
cwtl
idivb
sbb
icebp
jle
loop
inc
clc
shl
dec
or
pop
cmp
cwtl
add
mov
stos
pusha
out
cltd
sub
stos
test
stos
sbb
fdiv
aam
xorl
in
lea
lods
inc
cltd
arpl
mov
aaa
inc
mov
sub
jmp
push
and
popa
and
dec
aad
movsb
dec
pop
stc
xor
add
push
frstor
repz
jmp
adc
sub
adcl
pop
stc
rorb
insb
lcall
repz
xor
or
inc
out
jg
mov
mov
push
lahf
and
pop
sub
cmp
test
je
inc
mov
jnp
pusha
rorl
push
mov
andl
in
sub
cmp
jb,pn
push
inc
xchg
jae
outsl
mov
mov
push
inc
mov
idivb
jl
insb
repnz
pop
add
sbb
jb
mov
mov
insb
mov
stos
fsubl
inc
test
cmpsl
dec
xor
and
faddl
pop
divb
pop
xor
and
pop
push
out
push
push
sub
mov
pop
xchg
gs
stos
pop
xor
loopne
or
repz
mov
das
pop
mov
xor
pusha
aas
ja
or
imul
addl
daa
pop
outsl
in
sbb
push
lock
push
pushf
xchg
inc
std
test
daa
je
push
ss
addl
cs
adc
pop
shlb
push
fcom
pop
outsl
in
jmp
mov
sub
out
es
dec
test
push
mov
movsb
pusha
fcoms
push
jne
push
xor
xlat
in
pop
pop
dec
mull
sub
cmc
mov
xchg
std
push
mov
in
or
jae
dec
jg
aad
je
loopne
cmp
xor
stos
push
mov
cmp
movsl
ret
and
push
fbld
rclb
jb
in
xchg
push
cwtl
jb
mov
pop
inc
pop
xchg
int3
inc
jle
mov
pop
mov
or
lcall
and
adc
mov
dec
jge,pn
xchg
or
call
dec
in
inc
lahf
inc
xchg
arpl
out
jmp
jnp
xor
sbb
mov
adc
mov
incb
stos
push
scas
rorb
xchg
jmp
mov
repnz
loopne
lret
sub
mov
std
push
iret
iret
mov
mov
imul
mov
cmp
mov
lret
jle
cmpsb
mov
fstps
shlb
in
in
dec
jae
cs
push
idiv
jns,pt
mov
lods
push
mov
mov
inc
and
movsl
daa
ficoms
bound
in
push
or
js
add
mov
sbbl
fdivrs
pop
pop
rcrl
and
xchg
inc
cmpsl
cmp
or
movsb
out
ret
sub
mov
sbb
ja
lret
mov
sub
push
lods
gs
jge
pop
lock
adc
ret
leave
sbb
push
fnstenvs
loope
outsl
mov
xchg
shl
test
mov
sti
cmc
mov
sti
xor
cs
stos
or
lret
stc
mov
and
xor
xchg
repnz
xchg
dec
fwait
outsl
dec
imul
cmp
cs
pushf
inc
out
cld
push
pop
ds
stos
xchg
pop
mov
fdivs
push
push
push
call
addb
loop
xor
decl
push
jno
mov
leave
pop
adc
in
aam
jns
decl
jg
dec
jmp
jne
sbb
mov
outsl
mov
xor
mov
mov
fwait
sub
stos
dec
int3
cmc
add
jne
or
inc
pop
decl
lret
xor
cmp
jnp
inc
fcmovnu
sub
ss
jmp
loop
fs
mov
mov
mov
mov
cmp
stc
jle
les
jne
es
jecxz
sti
hlt
pop
cld
scas
mov
xchg
jne
daa
das
pop
repz
mov
pop
add
in
cmp
inc
inc
flds
xchg
pop
test
das
mov
mov
sbb
subl
dec
pop
dec
ljmp
push
mov
std
loope
lods
leave
mov
jns
aas
and
cmp
jne
loopne
inc
add
cli
jl
jno
pop
test
testb
je
cmp
js
aad
cmpsl
bound
xchg
shlb
test
sbb
xor
in
push
sub
and
push
fcmove
push
stos
add
mov
clc
imull
out
adcl
fcmovb
inc
adc
sbb
jge
or
add
xlat
cmp
cmp
xor
sbb
cmpsb
daa
sbb
sahf
sbb
adc
loop
fdivr
mov
sahf
sti
leave
cltd
inc
add
rclb
cmp
fistpll
repnz
fsubl
out
pop
jge
sbb
mov
jp
inc
test
pop
pop
testb
ret
dec
push
add
xor
mov
data16
jmp
imul
mov
fsubrp
out
jecxz
push
lret
loop
test
xchg
lret
icebp
push
push
sahf
mov
inc
xor
mov
pop
sub
jg
dec
js
sahf
ss
mov
jbe
aas
jbe
mov
ficomps
test
pop
and
jp
mov
out
xlat
outsb
jne
imul
out
cmp
mov
sarl
and
pushf
jmp
js
adc
mov
dec
cwtl
cmc
test
lret
adc
cmp
add
ds
dec
cwtl
jmp
push
popf
popf
push
in
outsb
inc
sub
sbb
xchg
sub
push
sub
xor
lea
jl
clc
cltd
sub
hlt
mov
cmp
xor
roll
jecxz
cli
mov
cmp
or
stos
jo
or
loop
mov
jo
in
and
sbb
mov
jb
jb
test
rol
loope
pushf
in
hlt
in
and
adc
and
shrb
jb
add
scas
fwait
js
pop
aad
nop
sbb
jmp
js
mov
scas
push
sbb
clc
movsb
in
xor
or
pop
insl
stc
xor
mov
stc
imul
sub
aaa
std
in
pop
repnz
ja
fnstsw
lods
clc
cmc
inc
sarb
lcall
inc
iret
dec
in
cmp
mov
mov
mov
jle
xor
xchg
inc
mov
nop
and
add
fsubrl
aad
ficomps
mov
insb
xchg
fisttps
mov
cmp
dec
mov
adc
sti
mov
pusha
adc
adc
outsb
mov
push
popf
lret
sbb
pusha
jmp
sbb
or
pop
in
and
jmp
xchg
addr16
ds
and
lock
xchg
shrb
jns
push
sub
cli
rclb
inc
inc
pop
or
xchg
loope
push
jns
iret
mov
mov
lcall
xchg
jmp
nop
mov
sub
je
cmpb
out
popf
lahf
push
pop
iret
jbe
sbb
push
les
adc
adc
dec
xchg
adc
in
shrb
sub
popa
push
jbe
jb
imul
mov
cmp
pop
call
hlt
pusha
and
out
loop
push
data16
xchg
test
and
jno
xlat
xlat
xchg
hlt
or
mov
aad
xchg
mov
mov
std
push
iret
mov
outsl
loopne
dec
add
rcrb
xchg
sbb
in
and
sub
test
enter
push
lods
add
xor
ds
push
faddp
push
loope
in
inc
xchg
or
xchg
mov
mov
xor
dec
stos
aam
xor
in
adc
mov
scas
je
cmp
call
mov
fmull
add
std
sub
xor
mov
inc
bound
cs
pop
adc
mov
xor
imul
jle
gs
push
in
adc
pop
pop
push
mov
mov
mov
pop
hlt
mov
sub
push
nop
push
shrl
daa
mov
ljmp
daa
sub
push
add
addr16
orb
inc
ljmp
movsb
inc
or
dec
shlb
sub
jnp
add
mov
movsb
cmpsl
jecxz
iret
cld
loop
outsb
mov
inc
test
test
imul
xchg
hlt
xchg
cmp
aas
movsl
faddl
sub
adc
clc
in
push
mov
and
pop
jnp
push
pop
pop
xchg
push
das
mov
push
pop
inc
jbe
or
xor
shll
push
pop
scas
mov
mov
push
cs
mov
cli
int
shll
xchg
nop
push
test
xchg
fisttps
mov
gs
adc
xor
dec
mov
jbe
and
leave
xor
in
jecxz
and
lret
pop
mov
test
loop
and
int
test
mov
xor
cld
jp
mov
ret
imul
push
mov
cs
mov
add
cmp
xchg
daa
movsb
stc
sub
mov
das
lock
lea
lea
pop
and
aas
push
sbb
xor
xchg
aas
dec
sub
pop
aaa
xor
xor
cmp
gs
xor
mov
dec
push
mov
sub
dec
icebp
stos
adc
jecxz
cmp
pop
cmp
daa
test
subb
mov
in
pop
jbe
mov
out
mov
sub
insb
in
sti
sti
test
decl
addr16
cmp
pop
mov
mov
sub
aad
call
pop
xor
int
mov
in
shl
test
cltd
xor
in
sbb
push
sahf
mov
dec
in
divl
mov
insb
cwtl
sub
push
cltd
stos
mov
dec
cli
jle
test
sub
outsb
fldl
loop
jb
and
out
push
test
daa
fisttpl
mul
ret
push
adc
addr16
and
dec
or
adc
and
pop
add
cli
aad
inc
pop
mov
pop
push
jb
sub
xchg
int
push
add
pop
or
mov
pop
cmp
jl
in
je
mov
loopne
push
ret
leave
call
dec
ljmp
sub
mov
jnp
sbb
stos
add
insb
mov
xor
testl
cs
mov
dec
or
jg
mov
jbe
sahf
sbb
incb
imul
mov
inc
mov
push
ror
cld
add
hlt
ljmp
negl
inc
insl
fmull
loopne
or
cwtl
and
cmp
or
je
add
adc
mov
and
int
popf
fwait
lea
push
mov
jmp
lods
cmp
inc
rcrl
xchg
inc
mov
in
cs
pop
cli
arpl
mov
addr16
pushf
cmp
add
sub
cmp
or
sbb
jnp
inc
enter
mov
adc
push
filds
ret
pushf
mov
mov
push
adc
push
fcomps
ds
adc
or
pop
dec
leave
ds
repz
add
cmc
in
ja
pushf
xchg
xor
xor
das
test
or
lahf
cs
sbb
out
push
int
les
in
fsubp
mov
into
xor
xor
jge
jp
jno
sahf
xchg
and
mov
test
cmpsl
add
jg
sbb
pop
adc
call
sub
jo
int
adc
repz
pop
jno
dec
arpl
stc
test
inc
adc
add
adc
dec
jge
js
pop
cmc
scas
jg
movsb
ret
ljmp
xchg
sub
sub
pushf
dec
inc
adc
test
mov
push
xchg
mov
cmp
mov
incb
xor
cmpsb
mov
out
sbb
icebp
push
inc
into
lret
push
sub
jnp
add
mov
mov
arpl
inc
rorl
aam
xchg
pop
outsl
jg
fcom
movsb
ljmp
mov
and
push
cwtl
and
jno
xor
mov
repnz
in
insb
inc
lods
ljmp
sbb
dec
push
sub
cs
int3
xor
dec
or
test
or
imul
pop
mov
or
mov
enter
loop
xchg
sub
test
or
testl
cs
or
mov
cmp
mov
push
ret
pushl
jl
sub
dec
cmp
out
cld
jno
ficoml
das
cmp
sub
dec
enter
bound
push
jns
cmp
call
sbb
and
int
cmp
and
mov
scas
pop
pop
xchg
xchg
sub
mov
or
sub
add
stos
or
adc
jne
mov
clc
lret
inc
outsb
fs
jno
out
push
dec
jmp
aam
push
mov
out
outsb
and
inc
pop
pop
or
sbbl
popa
in
add
jo
mov
jo
adc
and
lods
enter
int3
pushf
ljmp
ret
sub
imul
aam
stos
jg
adc
sub
and
xchg
mov
jnp
mov
sbb
sub
mov
mov
in
stc
sti
test
loopne
xor
fcompl
pushf
dec
jbe
mov
jo
fnstsw
dec
push
jne
cmp
mov
test
fsts
outsb
dec
add
ljmp
pop
gs
inc
aas
xchg
push
iret
stc
xlat
sbb
pop
into
mov
cltd
dec
jo
add
xchg
inc
xchg
mov
fsubr
out
stc
data16
push
ds
pop
leave
int
scas
in
add
mov
arpl
scas
jp
stos
iret
sbb
popf
test
jnp
mov
lods
cs
ljmp
mov
mov
and
sbb
jecxz
jns
cmp
add
cmp
jge
int3
pop
mov
jno
pop
ljmp
pop
xor
pop
pop
push
xor
jbe
rclb
scas
sub
mov
and
mov
lds
push
movsl
insb
negb
jno
jmp
mov
gs
movsl
ja
add
and
rcll
mov
out
int
stos
adc
and
lcall
sub
in
push
lahf
sti
mov
sub
push
cli
out
sahf
mov
push
pop
in
aas
shl
pop
mov
lret
mov
mov
mov
pop
pop
sbb
call
out
cli
pop
sub
aad
inc
aas
cmp
mov
inc
std
mov
add
xchg
mov
mov
inc
mull
into
outsl
lret
dec
mov
addr16
aam
fnstenv
in
jle
sub
cmpsl
lea
nop
xchg
mov
nop
xorb
jb
jns
jp
xlat
cmpsb
xor
mov
push
test
adc
call
roll
outsb
mov
lcall
data16
gs
rcll
imul
int
in
sbb
lahf
in
jbe
jl
mov
es
push
adc
subl
push
adcb
inc
dec
ret
mov
mov
aad
pop
jno
aad
or
push
jno
xchg
jecxz
mov
and
jae
lahf
ret
into
mov
idiv
pop
lcall
std
push
mov
shlb
stc
and
pop
xor
jnp
shl
jne
dec
aam
inc
pop
scas
sbb
rep
lds
dec
loope
cmp
inc
rcr
xor
int3
data16
cwtl
testb
out
orb
push
ja
imul
cmp
aas
or
fnstsw
xchg
enter
loop
pop
mov
aaa
sbb
pop
inc
jp
jne
enter
adc
insb
push
pop
or
and
test
add
adc
sub
stc
mov
dec
dec
xchg
je
xor
repnz
arpl
mov
add
and
ss
mov
push
and
mov
sub
mov
push
xchg
mov
fsubp
push
idivl
sub
scas
push
in
jae
jmp
pop
cmp
xor
loop
stos
cwtl
stos
jp
popf
jmp
pop
cmp
sub
push
out
aam
dec
inc
inc
cli
mov
js
negl
fisubs
push
jae
sub
fsts
cmp
pushf
add
popa
pop
sub
push
or
add
jle
dec
dec
dec
dec
pop
andb
push
orb
insb
mov
gs
xor
pop
out
bound
mov
stc
call
jecxz
adc
sahf
test
scas
aad
inc
nop
or
fwait
daa
adc
test
cmpsb
sbb
jo
jecxz
es
andb
xchg
and
fstpl
sub
dec
add
dec
push
sbb
xor
sub
ret
lock
inc
jne
dec
pop
int3
push
dec
sbb
ss
mov
inc
xchg
jmp
xor
in
jecxz
mov
and
sbb
es
sarb
dec
add
jae
jge
jp
in
sub
addr16
lret
test
push
adc
or
cmp
jae
push
outsb
mov
or
cli
mov
ret
jl
xor
enter
out
and
les
adc
cmp
or
xorb
iret
dec
cmp
mov
and
mov
out
add
inc
xchg
mov
fidivl
imul
pop
pop
clc
mov
mov
xor
in
out
xlat
inc
cmpl
pop
faddl
fisubs
pop
push
cld
scas
aam
mov
push
push
test
lcall
jp
jne
sbbl
mov
cmpsb
add
xchg
mov
sub
pop
sbb
bound
aas
cltd
sti
add
test
ret
iret
mov
add
and
pop
and
in
pop
jle
sbb
add
jno
rorl
fucomip
stos
pusha
unpcklps
xorl
jecxz
and
and
hlt
xchg
mov
inc
clc
xchg
sti
popa
or
adc
bnd
xlat
jecxz
mov
fnstenv
sbb
lret
or
insb
add
test
add
fbld
pop
jl
nop
cld
imul
or
inc
or
cld
lret
fsubrs
test
cmp
inc
jno
push
or
xchg
cld
pop
push
jo
popa
cmc
cmpsl
lret
lret
pop
pusha
sbb
mov
xchg
and
stc
pop
dec
mov
inc
imul
jmp
sbb
push
sbb
mov
test
rcl
enter
adc
fbld
sbb
or
shll
dec
aaa
std
cwtl
inc
add
push
jmp
and
pop
jp
adc
dec
test
pusha
jns
fwait
jmp
lods
jo
rcll
repnz
mov
adc
fwait
cmp
fsts
neg
adc
cmp
outsl
jmp
xchg
ds
fstps
pushf
mov
lcall
out
mov
lock
lds
out
sbb
or
sub
pop
add
and
jle
sbb
cld
push
frstor
mov
push
clc
push
pop
scas
jle
je
mov
xchg
pop
xchg
icebp
ss
pop
popf
cs
xchg
popa
jb
mov
cmp
idivb
in
push
fs
add
cmc
push
shr
mov
jno
xor
pop
mov
ret
std
jl
sarl
mov
lds
adc
sub
or
mov
push
mov
repnz
popa
cmp
adc
mov
add
arpl
sub
mov
jns
dec
mov
jmp
adc
lcall
xchg
aas
iret
iret
dec
cli
lock
sbb
sar
cmp
jnp
add
adc
jbe
stos
pop
lcall
jle
repz
xor
jbe
cmpl
inc
es
sub
hlt
ret
inc
das
adc
pop
add
adc
and
adc
push
testb
push
lock
and
push
loop
lret
data16
mov
test
cmp
les
lock
clc
xor
xchg
iret
inc
mov
ss
fstpl
mov
jmp
jne
movntps
inc
out
xchg
dec
pop
push
dec
pop
aas
jle
insb
fs
pop
les
sti
outsl
mov
stc
and
jmp
les
and
rorl
lods
sbb
or
popf
jne
inc
sbb
pushf
xor
arpl
fmuls
stc
push
push
dec
lods
add
cmc
inc
inc
jnp
insl
xchg
aam
sub
scas
cmp
lods
lcall
push
jecxz
leave
stos
adc
pop
and
fs
lahf
out
fisttpl
sub
cmp
sub
ret
out
fistpll
test
sbb
or
jl
dec
adc
test
push
and
insl
jns
sub
push
sarb
daa
int
sub
popa
ja
es
cmp
in
adc
push
add
or
adc
or
and
aam
push
mov
jp
scas
aad
mov
mov
mov
xchg
lahf
imul
jp
cmp
fistpl
fadds
pop
dec
inc
sbb
mov
lahf
scas
frstor
jb
insl
ljmp
dec
push
xchg
ret
insb
pop
out
out
out
mov
jae
jnp
sub
sbb
jecxz
addr16
or
push
cmp
int3
adc
xor
mov
pop
out
in
jmp
pop
mov
xchg
jo
mov
cltd
mov
and
ja
adc
push
and
nop
mov
jg
sub
fcoml
or
jae
jbe
mov
jg
clc
pop
push
mov
into
jo
sbb
add
enter
sti
imul
add
std
pop
push
andb
cmpsl
cltd
mov
sub
cmpb
adc
and
cmp
mov
push
xor
leave
addr16
shr
cmc
or
mov
scas
jl
xchg
icebp
or
ds
push
inc
aaa
mov
jb
jl
cli
sub
ret
push
xchg
xor
fwait
in
cmp
mov
sbb
push
rorb
mov
mov
callw
mov
loope
adc
test
xchg
add
inc
loopne
push
push
cmp
arpl
or
pushw
pop
popl
push
or
add
sub
cmpsb
push
sub
cmp
aad
out
xchg
test
mov
and
add
mov
cwtl
ficoml
rol
push
pop
add
mov
lods
push
ret
xchg
pop
imul
add
adc
pop
movsl
xchg
jle
jbe
int
xor
lret
cld
das
xchg
fstps
into
or
stos
adc
fstpt
xchg
add
les
adc
icebp
test
int3
int
inc
fmul
test
unpckhps
add
enter
daa
loopne
cmp
leave
pusha
addr16
call
leave
mov
and
sub
mov
and
dec
or
xchg
inc
jcxz,pn
dec
jbe
sub
cli
out
int
test
xchg
pop
push
inc
push
sbb
jge
adc
imul
inc
jnp
dec
pop
cld
jae
dec
push
inc
and
scas
dec
lea
cld
imul
loopne
mov
mov
cmc
push
hlt
mov
insb
jns
mov
sbb
push
mov
push
xlat
cmpsb
lcall
out
dec
movsb
setbe
loop
push
loop
fistl
dec
jge
inc
fwait
inc
inc
adc
jno
sub
mov
rcrl
stc
push
mov
jo
das
jb
adc
sub
fstpl
popf
aaa
pop
movsl
jecxz
ret
fidivs
out
sahf
adc
push
dec
add
push
insb
inc
cmp
insb
sbb
dec
xchg
or
jbe
incb
mov
mov
pusha
or
pop
aas
out
or
into
and
and
xchg
push
or
cmp
push
dec
mov
loopne
and
push
mov
or
jg
dec
das
adc
inc
and
fmuls
aam
ss
dec
repnz
fnstenv
cmp
cld
aas
xchg
aaa
lahf
sub
jmp
xchg
cmp
sub
mov
pop
adc
inc
pusha
out
and
pop
mov
dec
pop
push
dec
cli
stc
dec
in
xor
inc
add
xchg
out
rcrb
cmp
mov
mov
and
sbb
mov
popa
xchg
movsl
xor
dec
push
ret
mov
in
cmpb
pop
inc
insb
dec
mov
add
ljmp
insb
nop
mov
xor
cmp
aaa
pop
imul
aaa
pop
xchg
xlat
push
dec
lods
fsts
insl
add
add
repnz
xlat
push
adc
insl
testl
in
mov
jmp
popf
movsl
mov
in
mov
inc
test
repnz
ja
jbe
dec
imul
sub
and
mov
lea
xor
lods
pushf
and
cmp
inc
addr16
and
adc
sub
push
lret
dec
jns
mov
mov
jo
aad
inc
ja
sub
push
and
rol
xor
pop
aaa
xor
sub
dec
bswap
repnz
jmp
popa
xor
lods
out
push
mov
call
std
incl
jg
loopne
into
jmp
mov
cli
inc
dec
pop
das
das
lret
rcll
push
adc
fidivrl
add
mov
mov
pop
mov
inc
or
lods
jo
fstpl
lret
enter
movlps
dec
sar
mov
loop
pop
mov
and
in
xchg
popa
dec
subb
fisubrl
and
iret
mov
dec
mov
push
push
dec
out
and
jno,pt
push
rdpmc
retw
popf
jp
imul
lcall
pop
frstor
sub
gs
leave
loope
imul
jae
jg
int
jg
xor
xor
jmp
jmp
mov
stos
enter
inc
loope
xchg
dec
outsb
cmc
mov
add
xor
call
dec
mov
pop
daa
sub
pop
stos
testb
or
divl
fistpll
cmc
outsb
add
cld
lret
cltd
mov
stos
add
popa
inc
pop
jnp
and
mov
lret
or
push
mov
sbb
repnz
xor
testl
cmc
inc
cmpsl
aas
xor
pop
adc
das
xchg
fs
push
fnsave
xor
fiadds
aam
inc
cmp
and
mov
jbe
sti
xchg
call
or
imul
xchg
mov
and
lret
sub
adc
xor
fisubs
jg
cwtl
popf
mov
mov
mov
mov
lret
dec
sub
inc
xor
pop
dec
inc
and
or
imul
adc
popf
xlat
aaa
jp
jge
mov
cmp
and
outsl
pushl
push
push
popf
push
imul
adc
leave
int
in
std
inc
lock
cmp
push
movsb
ret
dec
and
mov
enter
xor
or
push
js
jmp
or
push
inc
mov
jnp
jns
aaa
pop
lds
add
cmc
lret
outsb
sahf
fwait
inc
mov
and
in
mov
mov
sahf
call
and
bound
stos
sahf
test
mov
or
pusha
pop
imul
fcmovu
inc
cmc
push
mov
leave
xor
in
lahf
jg
adc
out
sti
fs
leave
out
cld
es
mov
xlat
mov
sarb
pop
leave
xchg
jno
les
lock
femms
lcall
ljmp
mov
imul
pop
sti
mov
fldt
adc
mov
add
inc
sub
dec
insl
jno
add
and
dec
lock
clc
mov
icebp
mov
adc
lods
mov
orb
inc
loopne
jmp
xchg
shll
and
test
xlat
out
jmp
pop
or
fstps
inc
mov
out
out
enter
sub
fldcw
je
jbe
add
dec
sbb
call
arpl
lret
add
in
cmpsl
test
mov
sub
shrb
xchg
call
add
or
cwtl
jno
jecxz
insl
das
roll
push
mov
or
jno
mov
into
cmc
push
or
mov
fnstcw
repnz
jb
cmp
and
cmp
sub
negl
adc
and
adc
scas
mov
hlt
loopne
xor
and
sbb
push
lods
fimull
jne
cmp
push
std
xor
or
lods
lcall
fstpl
cmpsb
or
subl
jnp
mov
sub
mov
leave
pop
adc
mov
fstl
insl
aad
aaa
into
cwtl
inc
dec
adc
test
std
sbb
aam
xchg
jnp
mov
mov
or
sti
cltd
and
mov
movsb
std
rorb
cwtl
ret
cs
insb
dec
add
daa
pop
call
and
cwtl
in
and
mov
inc
mov
mov
push
fimuls
arpl
roll
jns
jae
push
data16
into
inc
sbb
and
stos
cld
adcl
adc
add
fsubs
dec
pop
xchg
lock
cwtl
adc
aaa
cmp
je
das
fnstcw
and
xor
sbb
sub
loope
stos
or
and
rorl
jb
lods
mov
jmp
les
sbb
shlb
aam
fs
daa
add
add
clc
pop
jp
lret
add
stos
aas
adc
and
sti
adc
outsb
xchg
inc
adc
flds
sti
inc
divb
mov
fcoml
dec
scas
aaa
repnz
xlat
loopne
test
lea
popf
stc
ret
int3
in
push
out
int3
iret
je
push
fidivrs
adcb
xor
add
bound
push
lret
cltd
xchg
mov
xor
sub
call
les
inc
push
fs
dec
jecxz
pop
iret
outsl
mov
xchg
into
loopne
xor
cmp
gs
add
or
xchg
adc
cmp
inc
inc
xchg
jnp
enter
js
or
fistpll
rcll
push
popa
in
movsb
push
sbbl
sbb
mov
jle
aas
addr16
xlat
sbb
jne
adc
das
cltd
push
sbb
cld
cmpl
rolb
shr
lcall
subl
std
mov
loopne
lock
ret
add
inc
pop
lods
in
orl
mov
mov
xor
add
mov
out
pop
push
dec
adc
aaa
or
lea
xchg
lret
into
and
pusha
call
and
add
in
popa
mov
mov
insl
pusha
outsb
cwtl
mov
dec
sbb
test
xor
xor
ds
xlat
xchg
cmpsb
stos
ss
jg
addb
idivb
iret
mov
scas
inc
sub
pop
mov
int
hlt
or
or
mov
cmc
cs
cmpsb
push
adc
out
lcall
and
add
popa
mov
loopne
xchg
push
pop
xchg
in
test
cmp
push
push
out
mov
inc
shrb
je
repz
std
add
pop
cmp
add
ret
sbb
jp
dec
lahf
inc
leave
add
cmp
push
fs
imul
aad
popf
fisttps
int3
cmc
mov
and
xchg
push
jle
mov
stos
or
hlt
mov
xor
mov
ljmp
dec
lret
mov
inc
jecxz
xchg
jae
lods
sar
xor
les
je
inc
data16
or
pop
mov
add
and
and
in
lods
and
imulb
movsb
sbb
jp
mov
stos
cmp
std
or
outsb
stc
ret
sbb
cwtl
fdivs
fstpt
mov
stos
xchg
xor
sbb
addr16
xchg
and
in
xor
xchg
dec
std
inc
xor
sub
cmpsb
cmpsl
adc
roll
scas
xchg
mov
jg
xchg
dec
pop
and
lcall
xchg
xchg
push
mov
in
aam
xor
lods
and
cmp
icebp
mov
mov
push
xorl
fiaddl
xchg
or
jl
xlat
or
cmpsl
xchg
xchg
les
aas
cld
xor
inc
push
les
pushl
and
cmp
sub
cmp
push
outsb
mov
xor
mov
stc
sub
scas
mov
sbb
shll
jnp
mov
scas
jo
inc
xchg
dec
lds
cwtl
loop
pusha
out
inc
pop
xor
mulb
outsb
xorl
add
pop
mov
or
test
mov
fcompl
mov
jb
scas
pop
inc
call
xchg
inc
mov
and
push
and
mov
stos
in
or
into
stos
adc
lods
pop
push
out
mov
imul
sub
push
ja
mov
sub
push
mov
xor
add
sub
xchg
std
into
addr16
lds
add
out
cltd
into
loop
dec
lea
aaa
fucompp
dec
into
adc
imul
test
xchg
push
in
cmpsl
inc
inc
pop
xchg
std
or
lock
sbb
into
mov
jg
adc
jno
jmp
sub
aam
stos
pop
mov
lcall
in
popa
add
test
adc
mov
xchg
ds
in
lcall
xchg
std
and
dec
out
dec
mov
mov
dec
loope
inc
ret
mov
inc
call
push
jmp
jae
cmp
xchg
xchg
aas
mov
das
jnp
dec
xor
adc
xor
mov
out
sub
push
out
add
sub
imul
mov
mov
mov
fstps
fs
hlt
xchg
rorl
or
into
dec
jg
jo
pop
add
bound
fstpt
int3
sbb
xorl
inc
mov
cmp
stos
int
nop
jge
sbb
bound
rcrl
inc
sbb
mov
enter
jno
arpl
cmp
stos
push
subb
lcall
cwtl
or
jne
mov
lahf
out
insb
push
xchg
arpl
daa
lcall
cmpsl
bound
mov
mov
add
in
mov
sarl
pop
fnstcw
add
lock
mov
jnp
neg
dec
push
sbbl
jae
fisttpl
mov
fildl
xchg
leave
or
mov
jl
into
jg
xor
pop
push
jecxz
fdivrs
aam
das
hlt
pop
mov
pop
mov
mov
mov
dec
push
xchg
mov
pop
inc
test
push
mov
inc
pop
or
add
es
and
out
inc
and
jl
ret
std
push
mov
dec
leave
cmp
fsubl
fldl
mov
add
and
stc
pcmpgtd
fldcw
add
xor
adc
jl
popf
out
or
or
int
addl
out
scas
push
add
stos
aaa
jno
ret
outsb
mov
int3
shrl
mov
xchg
add
filds
push
dec
mov
roll
sub
int3
aam
loope
xor
add
add
ret
sub
push
push
jbe
fdivrl
dec
dec
xor
sbb
shrb
mov
and
pop
add
or
negb
ljmp
outsl
dec
xor
aaa
shll
ficoml
jp
gs
inc
push
mov
movsl
fcoml
popa
sbb
cmp
imul
aas
add
sub
dec
in
dec
ds
mov
shl
xchg
test
fcoms
lahf
hlt
cmpxchg
out
push
dec
in
stos
call
push
shrb
or
cmp
push
imull
xchg
and
push
ret
xchg
xchg
mov
fldl
add
imul
add
mov
dec
adc
adc
idivl
or
inc
xor
and
sub
jns
xorl
xchg
sbb
mov
mov
add
xchg
je
jmp
mov
outsb
cmpsl
pop
mov
aam
ret
cwtl
aas
fwait
test
arpl
and
xchg
xchg
xchg
push
addl
jmp
xchg
jbe
sbb
push
leave
es
mov
stc
mov
add
lahf
ds
and
push
pshufw
dec
sbb
mov
jo
dec
in
je
mov
sbb
lods
clc
pusha
xor
pop
lds
push
mov
add
imul
lret
jp
js
js
pop
les
push
pop
mulb
scas
cmp
push
mov
inc
lahf
sbb
xorl
push
mov
stos
out
sbb
adc
sbb
cmp
push
lock
adc
mov
cmpsl
xor
adc
ret
push
rcrb
cmp
xchg
mov
push
dec
addr16
pop
test
dec
gs
pop
mov
aam
sbb
push
sub
into
in
out
neg
test
loop
mov
incl
inc
loope
push
int3
loope
imul
outsb
ret
inc
imul
sub
popa
fsub
pop
test
cmp
xchg
sahf
cmpsb
mov
cltd
or
movl
je
jmp
pop
mov
pusha
fdivr
mov
stos
lds
jnp
shl
push
ds
or
rorb
sub
fists
or
and
popa
dec
push
mov
mov
daa
push
jecxz
push
stos
insl
in
sbb
pushf
add
scas
xor
rcrl
fidivrs
aaa
gs
mov
xchg
stos
rcr
mov
call
pusha
adc
inc
xor
int
adc
je
ja
sbbl
mov
push
add
out
fstpl
lods
jmp
daa
addr16
lock
jle
insb
push
cmc
or
popf
arpl
mov
fbld
loope
cmp
push
push
and
mov
es
jl
das
mov
stc
fildll
mov
popa
and
call
and
cmp
pop
cld
insl
sar
aad
jbe
flds
mov
xchg
enter
adc
les
ljmp
cld
push
push
cmp
push
stos
mov
aad
mov
pop
or
mov
push
adc
jecxz
inc
lcall
dec
dec
adc
fcoml
pop
insb
push
lahf
add
sbb
ja
mov
out
mov
daa
mov
test
data16
ret
ret
inc
incl
sub
jne
nop
and
push
in
inc
icebp
jbe
xchg
xor
cmpsb
push
out
fildll
mov
cmpsb
icebp
pop
imull
ja
mov
stos
testb
mov
mov
lock
fwait
hlt
das
cmpsl
aas
xchg
xor
lcall
xlat
mov
adc
mov
mov
jnp
loop
call
inc
mov
cmp
xchg
inc
jmp
cmpsl
ficoms
pop
pop
call
pop
jno
xor
stos
jo
mov
mov
xlat
xchg
or
jmp
jle
xchg
test
sbb
notb
mov
xor
stc
dec
es
jmp
nop
insl
leave
int
pop
xchg
ret
jmp
mov
shll
fisubrs
roll
mov
and
repnz
mov
out
mov
lea
sub
ss
mov
ljmp
cwtl
jae
hlt
int
mov
adc
push
mov
push
pop
movsb
or
pop
xor
inc
idivb
fnstsw
ret
pop
and
mov
mov
jne
negl
add
mov
ffreep
adc
inc
push
lods
stos
fwait
mov
ss
cli
fstps
add
adc
outsl
lret
adc
jne
jns
jne
sbb
sub
les
call
xchg
imul
or
sub
add
or
xor
shll
imul
ds
cmpsl
cli
mov
scas
ds
sti
push
cmp
mov
test
movsl
jo
and
insb
idivl
fistpl
pop
jae
cs
sbbb
mov
ljmp
iret
and
je
xlat
test
cmp
pop
daa
lds
mov
or
adcb
mov
sbb
or
cmp
shl
enter
movsl
push
andb
adc
push
scas
jns
in
ds
dec
out
lret
int
or
and
inc
and
mov
inc
cmp
xor
sub
sbb
es
cwtl
in
rolb
and
ljmp
in
xchg
fsubp
mov
mov
pusha
mov
mov
popa
loop
outsb
shlb
pop
mov
fnstcw
push
xor
add
push
jecxz
stos
movsb
cmpb
mov
stos
push
mov
shr
push
pop
cmpsl
push
add
std
dec
sbb
jb
insl
sub
add
pop
lods
mov
insb
or
addr16
sbb
xchg
sti
nop
jns
sub
mov
inc
icebp
push
mov
add
out
jle
ret
lods
outsl
inc
mov
ret
mov
outsb
cmp
jo
out
pop
adc
cmpb
pop
xor
fwait
rcrl
xchg
out
add
andl
popl
pop
cmp
push
or
ja
mov
insb
outsb
adc
sub
mov
dec
dec
xchg
fwait
aaa
les
stos
ret
stos
push
out
xchg
dec
jns
daa
add
mov
iret
inc
lock
xor
popa
sub
pop
pop
pop
jle
stos
pop
iret
mov
lds
cltd
aam
mov
add
add
inc
pop
inc
out
subl
pop
mov
loopne
ret
mov
adc
je
mov
icebp
mov
int3
xchg
pop
xlat
sub
or
fld
cwtl
mov
cmc
and
xchg
mov
xchg
pusha
sub
sub
mov
adc
pusha
sti
into
jl
sbb
add
push
loopne
mov
lea
push
add
push
sub
lea
mov
pop
adc
xchg
adc
fnstcw
cmpsb
cs
adc
mov
rcl
sbbb
loop
pop
out
je
clc
pop
jg
mov
push
mov
cli
int3
cmpsb
je
push
adc
xor
es
jecxz
jne
cmp
cmovg
lods
inc
add
xlat
cmp
pop
push
xchg
push
insl
add
leave
mov
xor
xchg
jge,pn
lret
dec
orb
xlat
leave
mov
jns
jmp
jae
cwtl
push
jns
std
jo
shrb
sub
js
je
cltd
dec
pop
xchg
push
mov
push
and
and
add
cmp
pop
dec
in
rclb
inc
jl
shrl
jmp
jne
out
mov
fcompl
jnp
pusha
jge
xor
xchg
cmp
cld
movsb
out
sub
test
pop
mov
jmp
mov
dec
and
push
mov
je
das
insb
lret
hlt
xchg
das
idiv
int
out
repz
sub
les
mov
inc
mov
nop
je
mov
mov
arpl
stos
push
xor
in
incl
movsb
cmpsb
js
lcall
jmp
loope
sti
and
std
in
pop
jno
into
repz
mov
pop
push
int
gs
add
push
push
movsb
shrl
mov
mov
mov
push
dec
mov
loope
add
inc
outsl
outsb
xor
scas
daa
xchg
xchg
aaa
cmp
fistpll
and
mov
vphaddwq
imul
in
test
mov
push
nop
jge
inc
out
mov
sbb
mov
push
stos
sahf
pop
stos
lods
pop
push
sarl
cmpsl
xor
arpl
enter
leave
outsb
pop
xor
or
aas
leave
mov
jmp
ror
ret
loope
movsb
ss
lahf
mov
xor
lods
in
pop
ret
fstpl
out
add
stos
jle
rol
lods
xchg
inc
mov
adc
and
outsb
inc
cmp
js
mov
pop
push
cmpl
adc
popf
push
xchg
enter
test
in
or
cwtl
xchg
sbb
adc
add
repnz
mov
xor
loopne
xchg
mov
lret
dec
mov
mov
imul
repnz
arpl
inc
add
push
shll
adc
das
xchg
fsubp
orl
out
lods
mov
pop
daa
imul
jnp
push
cmp
fsubl
shll
sub
mov
mov
sahf
in
rcr
and
push
xchg
test
sti
or
mov
repz
jmp
std
mov
ja
gs
loopne
or
popf
pop
sub
stos
jecxz
imull
sbb
loopne
pop
add
inc
fdivl
push
les
mov
dec
push
outsl
and
sub
stc
add
pop
cli
cmp
aad
cmp
cld
imul
outsl
mov
adc
sub
jp
adc
fwait
add
insb
and
stos
scas
test
popa
clc
push
test
dec
xchg
dec
mov
xchg
jno,pt
lea
pop
dec
or
pop
mov
rcll
push
in
push
cltd
ja
ficoms
and
testl
lods
pushf
or
add
imul
inc
sarb
roll
int
or
mov
loopne
stc
inc
cltd
cmpsl
enter
cli
dec
es
cld
jae
cli
lea
rorl
repz
xchg
mov
cwtl
cmpsl
lock
xor
mov
jb
addr16
lea
cs
jl
in
and
orl
popf
xlat
cmpsb
int3
mov
sub
cmp
push
fimull
pusha
mov
out
sbb
aad
xchg
addr16
imul
push
mov
and
insb
int3
cmpsb
push
pop
hlt
fcoml
push
imul
ss
mov
aam
pop
cli
scas
cwtl
push
cmp
jg
mov
aaa
clc
loop
pop
inc
and
mov
push
rclb
sbb
pop
dec
xor
pop
sbb
add
adc
fsubrl
mov
addl
es
mov
or
lea
sub
add
mov
rcrl
push
mov
ja
pop
and
mov
dec
push
mov
call
enter
shrl
pop
flds
in
out
pop
repz
das
mov
test
movsb
lcall
aad
push
aaa
adc
add
inc
enter
sbb
jno
not
mov
cmpsl
sbb
push
pop
adc
sbb
push
mov
fmull
add
icebp
or
push
mov
push
les
shlb
aad
fsubl
xor
adc
pop
push
mov
adcb
test
adc
adc
fwait
add
in
lods
fwait
push
push
ja
lcall
pop
enter
jecxz
call
cmp
inc
or
push
ret
sub
hlt
test
inc
adc
and
xchg
xchg
lods
or
xchg
mov
dec
fbstp
lea
cmp
mov
pusha
cli
les
outsl
push
mov
aam
jns
xchg
sub
or
out
loopne
push
test
inc
mov
in
lods
pop
je
insl
pusha
or
stos
mov
in
add
insl
and
adcl
xchg
ljmp
fisttps
daa
xchg
imul
jge
rcrl
push
faddl
ret
stos
jge
popl
and
xchg
fcoml
mov
scas
mov
int3
and
orb
mov
push
insb
jge
cmpsl
gs
mov
sti
mov
stc
push
lret
dec
mov
pop
and
pop
or
arpl
es
push
fiaddl
mov
lret
leave
test
xor
cltd
add
pop
or
in
mov
lret
push
pop
sbb
sbb
mov
jp
push
xchg
int
sbb
lds
jge
es
jmp
into
call
dec
pop
mov
mov
sub
mov
pop
mov
icebp
adc
loopne
sub
fabs
aam
fildl
outsb
popf
rcll
push
je
test
lods
cmp
fstl
inc
sbb
xor
push
inc
ja
leave
sbb
lahf
pop
out
mov
jmp
pop
mov
mov
or
arpl
jnp
jnp
std
push
orl
mov
scas
pop
pop
xchg
push
lods
push
sbb
lret
aad
adc
out
sub
popf
jae
pop
adc
or
lock
jae
stos
mov
jmp
loopne
pusha
in
push
and
test
mov
into
push
in
repnz
mov
xchg
negl
addb
xchg
ds
push
fadds
rolb
ss
xchg
push
out
test
adc
movsl
sbb
cmp
je
jno
mov
imul
and
sub
and
arpl
jmp
xchg
rorb
dec
sbb
daa
fnstenv
sbb
fcmovbe
sub
cmp
out
imul
or
outsb
xor
mov
xchg
movl
test
out
fwait
xorl
loopne
cmp
xorl
int
jecxz
gs
lock
dec
sti
jns
sub
and
push
cmc
and
imul
out
sbb
in
bound
in
xorl
out
mov
pop
add
add
stos
and
push
xor
mov
push
repz
icebp
fistpll
sub
or
sub
lcall
xor
pusha
jecxz
in
jns
addl
cmp
aad
xor
jmp
mov
add
cmpsb
lret
jp
enter
push
mov
jne
daa
or
dec
mov
xlat
mov
ss
push
push
add
test
fisubrs
cmp
xor
mov
pushw
std
push
inc
pop
adc
ja
and
mov
jle
sbb
outsb
jnp
xchg
mov
das
ret
and
adc
push
lock
pop
xor
lock
pop
mov
pushf
imul
inc
sbb
rorl
sub
fucomi
bound
mov
inc
shl
jmp
mov
ljmp
xchg
test
adc
bnd
loop
outsb
pop
stc
es
inc
sub
pop
cmp
repnz
push
pop
pushf
popf
jge
jnp
dec
sbb
sub
loopne
out
and
inc
or
sti
inc
aad
xor
jmp
cmp
and
movl
or
insb
or
lock
outsl
mov
push
xchg
adc
sub
sahf
aam
pop
iret
push
std
sbb
adc
push
inc
pushf
aad
stc
cmp
outsl
sahf
jne
into
gs
popf
hlt
xchg
sub
mov
lds
mov
adc
cmpsb
out
push
push
push
add
lcall
dec
jecxz
jne
mov
add
sub
sub
jl
lods
ljmp
dec
jae
hlt
jge
shrl
roll
sub
jmp
in
push
pop
or
xorl
mov
icebp
inc
lahf
and
in
iret
stos
int3
in
insl
pop
nop
pop
cmp
jle
lret
jb
cld
inc
scas
cmp
mov
jo
pop
je
push
mov
popf
pushl
ficompl
imul
sbb
push
push
dec
fs
add
sti
daa
out
mov
out
fsubrl
roll
daa
insl
test
or
cmpsb
and
out
fwait
mov
sbb
test
xor
adc
ret
outsl
jp
pop
mov
pop
cmp
in
mov
aaa
pop
mov
push
jmp
inc
addr16
xorb
xchg
push
push
hlt
lcall
loope
es
ret
mov
push
add
inc
jb,pt
or
mov
mull
int3
xchg
lret
daa
orl
aas
test
jo
fistl
mov
mov
loope
neg
addl
xchg
and
cmp
lahf
loopne
mov
movsb
inc
push
pop
lret
fidivl
fdivrl
xchg
sub
pop
int3
les
xorl
xor
rcrl
lea
lahf
pop
lods
mov
pop
call
mov
sti
lods
mov
mov
js
movsl
xchg
push
add
jmp
fdivl
in
xor
lock
mov
add
mov
int
outsl
pop
dec
xor
sbb
xchg
je
add
arpl
shrb
mov
and
or
popf
jg,pn
pop
dec
sahf
aad
push
adcb
movsb
sub
xor
push
sbb
cli
enter
leave
adc
bound
mov
jnp
dec
je
in
iret
push
cmp
test
and
testb
add
addr16
in
push
insl
ret
xor
mov
sub
mov
pop
and
arpl
pop
adc
push
pop
enter
push
mov
aas
aas
sbb
xlat
pop
jnp
outsl
clc
leave
xchg
push
lods
mov
pop
dec
cmp
xchg
bound
or
push
pop
popf
or
push
sbb
das
xchg
inc
mov
push
outsb
pop
stos
xchg
je
sub
iret
inc
push
dec
pop
adc
mov
cmp
or
sub
insb
decl
and
or
pushf
xchg
stos
ljmp
sti
xchg
fwait
adc
jecxz
and
lcall
cmp
dec
data16
pushf
push
stos
sbb
mov
xlat
jecxz
jo
test
xchg
mov
ss
cmp
ror
cmp
loope
stc
mov
aas
dec
jo
mov
sub
xchg
pop
incl
inc
lea
xchg
dec
jge
sub
lret
in
cmp
push
lods
ret
scas
xchg
lret
mov
mov
pop
test
clc
jmp
fisttpll
add
movsl
inc
dec
sbb
shlb
outsb
cs
imul
mov
shll
cmp
mov
mov
pop
sub
sub
push
es
inc
lods
adcb
rclb
sbb
xchg
xchg
xchg
mov
dec
std
push
rorb
movsb
sti
xor
pop
push
out
cmpsl
mov
sub
push
lods
std
xor
scas
mov
jb
ret
and
shrb
and
in
enter
and
cmc
fistpl
popa
and
arpl
hlt
or
push
es
bnd
pusha
in
jg
fs
mov
xchg
jns
xchg
dec
ret
fdiv
jns
jae
add
adc
sbb
sahf
adc
ret
icebp
je
dec
xchg
sti
inc
push
jae
stos
leave
pusha
scas
ds
add
loopne
jae
cmp
mov
adc
push
aas
fs
jp
xchg
lret
lahf
daa
daa
aaa
fldt
xor
or
ljmp
pop
clc
icebp
fs
jmp
mov
mov
scas
xchg
mov
push
mov
mov
int
data16
jb
mov
clc
aam
push
decl
push
xchg
pop
ljmp
sbb
xchg
aam
pop
sub
xchg
add
test
and
adc
mov
lods
lcall
and
jmp
das
movsl
shl
adc
jne
shrb
or
xchg
ret
dec
mov
dec
inc
in
mov
loop
outsb
and
insl
fwait
xchg
jmp
ret
enter
cld
fcoms
repz
clc
and
or
and
xlat
sbb
push
lcall
or
out
add
push
pop
addr16
jge
movsl
and
and
fcompl
pop
lods
orb
les
push
xor
xor
enter
loope
lods
mov
fcoml
ljmp
fisubrs
inc
mov
and
mov
pop
xor
inc
loope
adc
mov
sbb
mov
push
push
push
pop
add
sub
shll
lret
imul
adc
pushf
scas
hlt
ja
scas
flds
filds
xchg
jo
mov
jbe
cwtl
inc
out
pop
roll
fadd
inc
dec
in
sahf
ds
xor
ljmp
xchg
mov
sub
fsubrs
mov
pop
mov
stos
icebp
jbe
add
adc
adc
ficoms
sub
push
xchg
and
andb
sbb
xchg
or
test
inc
inc
adc
sub
std
jle
icebp
or
jmp
mov
mov
iret
shll
pop
leave
filds
and
jns
repnz
nop
das
iret
add
mov
out
ljmp
mov
mov
pushf
mov
loope
mov
adc
xchg
sbb
aas
dec
sbb
es
outsb
jnp
add
push
xchg
or
lods
leave
ret
cltd
xchg
ds
xor
daa
dec
dec
ja
xchg
push
xchg
shlb
shrb
cmpsb
pusha
push
fnstcw
movsb
ret
lret
or
lret
mov
mov
out
clc
pop
aad
and
jle
shlb
int3
mov
push
adcb
jno
rcrl
ljmp
mov
nop
loopne
or
mov
fwait
jae
cld
lds
inc
mov
push
or
test
test
les
pop
cmp
scas
adc
mov
push
cmpsl
jb
ret
push
jnp
inc
dec
jecxz
push
dec
xchg
fisttps
cmp
nop
push
jae
push
lods
mov
cmp
maskmovq
divl
adc
sbb
push
cltd
ljmp
int
sub
addr16
into
das
xor
in
movsl
aam
push
xor
scas
loop
inc
outsb
mov
fldenv
stc
and
adc
imul
int
pop
xchg
push
push
inc
sbb
lahf
scas
ss
sahf
push
rcll
pusha
mov
cmpsb
adc
and
movsl
int3
xor
mov
mov
push
jmp
inc
popf
out
js
outsb
and
pop
nop
xchg
lods
dec
hlt
mov
es
xchg
add
cmc
cmp
popf
test
pop
and
clc
mov
cmc
lods
pop
pop
dec
mov
cmc
fidivl
pop
lretw
fsub
iret
nop
add
and
stc
cli
movb
insb
ss
and
popa
fcmove
enter
xor
fnop
loop
adc
pop
jb
sbb
pop
fdivrs
int
jb
pop
out
outsl
xor
sub
test
testl
sahf
dec
jae
shl
jns
popa
ljmp
xchg
adc
jmp
dec
jge
jle
pop
mov
adc
push
and
addr16
adc
add
cwtl
in
mov
jb
jno
filds
fldt
mov
cmpsb
call
jge
pop
jo
xchg
lret
mov
push
or
fsub
adc
pop
mov
flds
jnp
mov
push
jle
push
inc
mov
add
addl
outsb
cmp
call
sbbb
inc
and
lods
jmp
add
leave
ret
or
xchg
nop
dec
push
cmp
sbb
ret
adc
loope
in
aad
roll
mov
inc
add
cmp
daa
mov
cltd
out
add
outsb
pop
cli
dec
mov
adc
mov
push
and
push
lea
int
aam
lds
movsb
and
inc
orb
notb
aam
sti
mov
lods
mov
arpl
cltd
mov
adc
cmp
and
mov
in
sbb
sbb
fsubrl
and
pop
pop
pop
push
pusha
ljmp
iret
cmp
xor
mov
arpl
dec
jno
mov
ljmp
mov
sbbl
lea
dec
cmp
or
add
pop
mov
xor
jbe
lret
sbb
in
pop
jnp
push
cld
in
enter
lahf
mov
jb
scas
or
mov
inc
push
mov
sti
adc
mov
pop
xchg
xchg
outsl
gs
pop
jae
lds
push
leave
lret
mov
lret
jne
jne
adc
icebp
mov
sbb
push
cmp
and
add
push
adc
andl
and
xchg
cld
inc
inc
sarb
sahf
insb
loop
repnz
inc
lret
pushf
xchg
add
xchg
xor
daa
push
iret
add
push
adc
mov
xlat
bound
add
pusha
mov
pushf
sub
mov
roll
ret
inc
dec
loopne
mov
out
push
bound
repnz
mov
mov
jmp
popa
out
adc
xchg
and
mov
cmpsl
mov
pop
ficoms
aaa
push
pop
lock
jns
mov
or
aaa
and
notb
mov
pushf
movsb
into
jl
and
fcmovbe
aaa
in
outsb
jns
mov
xor
cmpsl
adc
test
pop
in
sbb
test
imul
loopne
inc
imul
cmp
push
cmp
hlt
mov
mov
jno
mov
add
xchg
int
bound
lahf
push
iret
xchg
int3
mov
cmp
int
sbb
push
lcall
decl
repz
hlt
sub
xchg
cld
and
lahf
loop
pop
xor
imul
fdivrs
repz
xor
xchg
jno
push
repz
je
rcr
jl
imul
in
mov
pop
mov
int3
std
insl
arpl
dec
enter
mov
repnz
enter
aas
mov
leave
sub
mov
sub
je
das
lock
pop
inc
xchg
mov
mov
lods
jge
adc
xchg
pop
aas
leave
repz
add
jmp
or
test
push
in
incb
mov
sbb
mov
das
sub
outsb
xchg
adc
out
and
enter
dec
cmpsb
clc
xchg
out
pop
rdtsc
add
test
sbbb
ss
push
jb
lods
mov
push
fimuls
adc
mov
rcrl
test
in
aas
int
rorb
aaa
sub
dec
add
xchg
mov
cmpsb
jg
sarl
out
data16
dec
out
nop
rolb
mov
cmpsl
and
push
scas
jmp
outsb
push
pop
xchg
loope
int3
cs
rcl
rcl
push
nop
in
addr16
add
leave
lea
mov
aad
jecxz
insl
inc
xchg
ljmp
cmp
dec
mov
popf
ja
inc
or
xorb
lods
inc
push
push
sub
cmp
mov
mulb
ds
call
mov
popf
test
lahf
xchg
ret
xor
ljmp
movb
xchg
cs
iret
inc
push
je
call
adc
lods
xor
xor
push
push
stos
xor
ljmp
inc
add
movsl
cmpsl
mov
int3
orl
push
mov
sbb
test
mov
jnp
inc
mov
loop
sub
sub
cli
xchg
es
enter
or
mov
iret
mov
xor
mov
sti
pop
mov
lods
shlb
out
in
daa
in
push
pop
xchg
daa
out
push
inc
mov
push
add
stos
lods
cmp
cli
lret
push
push
mov
bound
jo
decl
movsl
sub
xchg
pop
pop
cmp
mov
cmc
jge
mov
int3
xchg
cmc
lcall
pop
adc
mov
xor
mov
pop
ss
sub
mov
push
lds
stos
dec
repz
xor
rorl
test
jge
les
std
jno
insl
sahf
jnp
stc
repz
inc
mov
or
cmc
mulb
sub
jle
lea
imul
xor
sbb
inc
daa
jne
jmp
inc
dec
xchg
inc
or
or
mov
ret
movl
cmp
fistpll
sbb
out
jns
in
out
xchg
xchg
sub
jne
arpl
sbb
pop
jns
movsb
jb
add
leave
mov
cmp
stc
adc
fstpl
sti
arpl
addr16
pop
sub
inc
pop
dec
xchg
sub
pop
push
test
inc
lcall
mov
adc
dec
dec
int
imul
add
imull
cmp
dec
xchg
or
sub
stos
popf
sbb
test
jno
push
out
sbb
call
leave
outsl
fldcw
and
jg
push
pop
xchg
int3
orb
inc
mov
addr16
sbb
int3
mov
mov
adc
jbe
cwtl
add
arpl
mov
pop
pusha
mov
xor
sbb
movsb
out
xor
loope
inc
and
sub
in
adc
jo
sbb
xor
mov
dec
cmp
xchg
add
sbb
dec
jmp
jno
into
shll
scas
inc
roll
int
stos
scas
sub
mov
cli
sub
aaa
lods
scas
icebp
dec
xor
mov
adc
loopne
insb
call
lea
jne
lretw
orl
fldt
loope
inc
push
fiaddl
xchg
or
fdivs
cmpsb
add
pop
hlt
fiadds
mov
sbb
sbb
sbb
ret
and
shlb
adc
int
bound
pop
mov
in
adc
imul
enter
imul
addb
les
dec
shll
sbb
xor
stc
mov
call
fldcw
mov
insb
out
imul
and
jle
int3
pushf
outsl
lret
mov
cs
add
rcll
jmp
test
negl
imul
pop
in
lahf
sbb
xlat
cltd
pop
jg
inc
xchg
mov
inc
ds
sub
clc
sbb
lea
sahf
and
lcall
push
loop
mov
and
mov
das
lock
jae
dec
jbe
or
mov
jae
sbb
mov
lds
popa
fldt
sbb
sub
cmp
rcll
mov
and
push
sub
test
sbb
and
mov
or
in
subl
mov
pop
push
xor
mov
out
dec
cltd
bound
loopne
into
jle
lock
loope
popf
sbb
sbb
ret
xchg
sub
movsb
jo
shlb
fisttps
pop
pop
leave
in
lahf
orl
ficoml
mov
lcall
or
xchg
lea
fdivrp
pop
jnp
pop
and
add
shlb
xlat
mov
cmp
jge
leave
mov
fprem
je
in
fdivs
mov
xor
xchg
popf
dec
cmp
loope
jae
fcoml
mov
cmp
mov
bound
lcall
xchg
repz
inc
inc
or
mov
xchg
inc
lock
sub
push
pop
out
pushf
and
dec
or
scas
subl
aaa
dec
or
adc
fs
rclb
push
dec
ja
mov
mov
inc
jmp
xchg
mov
hlt
adc
pushf
test
cmp
dec
or
inc
pop
jmp
sbb
push
std
sub
jnp
leave
test
inc
pusha
push
pop
movsl
enter
mov
clc
stos
xor
pop
in
xchg
xchg
mov
jle
inc
xchg
pop
insl
and
fcoml
ss
push
mov
leave
lods
or
mov
mov
jmp
fwait
cltd
sbb
cmp
iret
inc
mov
fimull
and
add
mov
nop
in
into
add
adcb
mov
leave
stc
fsubs
xchg
popf
push
push
imul
mull
icebp
add
mov
cld
inc
mov
out
sub
fwait
sbb
imul
rolb
mov
cmp
insb
sarl
loop
sbb
push
jno
and
daa
jmp
push
push
into
test
ds
sub
adc
mov
inc
lea
stc
aaa
in
push
nop
shll
leave
xchg
pop
jo
and
aaa
in
enter
or
and
mov
sbb
movsl
adc
icebp
aas
movsb
jmp
xor
push
cmpsb
push
inc
adcl
dec
mov
filds
xchg
mov
aad
sbb
scas
test
jecxz
shrb
out
add
and
mov
xchg
stos
movsl
cli
mov
insl
mov
cmp
dec
pop
ljmp
push
xchg
jno
pop
jge
popf
push
aaa
jp
xchg
fcoms
pop
adc
xchg
inc
and
addl
mov
add
xchg
test
pop
push
rorb
ds
shl
sbb
adc
imul
shlb
xchg
inc
or
sub
xchg
add
jg
jns
add
sbb
dec
xchg
shlb
inc
in
dec
jmp
xchg
loop
test
and
push
ljmp
mov
lock
push
add
popw
mov
push
dec
or
mov
out
repnz
xchg
outsl
add
inc
push
adc
pushf
sti
and
lods
aaa
cmpsb
movsb
adc
and
and
outsl
add
xchg
push
mov
xchg
push
loopne
mov
add
sbb
inc
mov
mov
or
in
xor
arpl
mov
dec
pop
xchg
clc
sahf
orl
aaa
shrl
mov
mov
addr16
xor
insb
loope
je
dec
sarb
mov
popf
dec
lahf
mov
mov
lahf
je
std
jmp
push
xor
adcl
lcall
aam
mov
aad
cmp
test
popa
dec
dec
push
dec
data16
pop
mov
inc
jl
xor
jg
adc
dec
je
fstps
pop
lods
rcrb
fmull
dec
subb
push
popf
xchg
mov
mul
sbb
into
shl
jp
roll
mov
aas
push
or
loope
or
lahf
fidivs
add
inc
dec
shlb
enter
jmp
cmc
ret
cmpsl
pavgw
sub
iret
pusha
lret
adc
or
es
pop
loope
shr
add
mov
mov
data16
fimuls
push
push
mov
push
mov
cmp
stc
add
sbb
stos
dec
add
shll
add
cmp
lods
mov
push
xlat
subb
inc
push
cli
jle
cmp
xchg
pop
and
js
ljmp
or
pop
fdivrl
popa
jbe
inc
fwait
in
test
cmpsl
dec
xor
add
arpl
xchg
enter
and
je
loopne
data16
mov
fwait
mov
xor
and
cmp
repnz
int
mov
mov
push
mov
shl
repz
hlt
shl
xchg
test
jno
shll
arpl
pop
sahf
push
in
jmp
out
mov
push
or
xchg
jle
and
cmpsb
aam
inc
inc
fbstp
clc
dec
in
lahf
xor
sbb
mov
jns
shlb
adc
xlat
aam
iret
fdivp
ja
jns
cmp
scas
fwait
and
mov
mov
push
xchg
loope
adc
stc
adc
lret
cwtl
ja
rclb
dec
std
xchg
xchg
pop
inc
std
mov
icebp
push
pusha
sti
mov
aaa
xchg
ljmp
mov
in
jl
dec
add
leave
adc
cmpsb
adc
insl
pop
or
out
test
out
mov
pop
mov
aas
or
cmp
xlat
inc
repz
xchg
push
jecxz
sbb
inc
jns
cs
mov
push
sarb
push
int
loope
std
pop
xchg
mov
popf
inc
jne
scas
mov
mov
lahf
adc
outsb
xchg
xchg
xlat
lea
push
inc
sbb
insl
jecxz
mov
jns
ret
rclb
lock
cmp
movzwl
inc
jmp
leave
sbbb
mov
cmp
ret
out
fmuls
mov
sahf
mul
mov
loopne
push
xchg
addr16
in
scas
movsl
iret
mov
int
mov
xor
add
cmp
dec
shll
icebp
das
add
fsub
xor
xor
sub
mov
add
xor
dec
or
lods
popl
int
cmp
cmpsb
stos
push
and
lahf
clc
std
sbb
gs
mov
push
fs
scas
mov
mov
insl
lock
hlt
incb
sarb
inc
inc
repz
mov
lds
mov
cltd
pop
ss
fdiv
dec
sub
sub
ja
cmp
call
jns
arpl
dec
mov
cmp
adc
ret
or
in
rol
xchg
dec
test
das
dec
in
dec
imul
pop
loop
cmp
xchg
cmpsb
xchg
std
mov
adc
gs
mov
push
xchg
imul
inc
mov
int3
rcrl
inc
adc
and
cmp
xor
xchg
inc
mov
sahf
dec
add
dec
cmp
xor
pop
cwtl
dec
js
stos
or
jmp
xchg
push
jle
bound
in
push
adcl
push
repnz
mov
inc
add
out
notl
rcl
outsb
dec
dec
pop
pop
push
mov
ds
call
pusha
mov
xor
test
movsl
xchg
mov
add
clc
mov
push
xor
and
subb
lret
std
ljmp
cmpsb
cmpsb
stc
hlt
lock
stc
jmp
sub
adc
sbb
test
cli
pshufw
xchg
push
jmp
cmp
lea
popf
and
bnd
jb
repz
dec
lea
je
lcall
inc
jno
xor
add
xor
xor
stc
or
push
movsb
push
out
inc
ret
fnstcw
insl
mov
adc
fdivs
aaa
or
pushf
cmp
outsb
and
dec
jno
lds
and
mov
jns
dec
xor
scas
pop
daa
pop
icebp
push
or
pop
je
or
insl
jo
pop
aas
and
lahf
push
or
rcrl
xchg
shl
dec
into
repnz
pop
mov
repnz
in
add
mov
js
lahf
sub
popa
mov
fs
adc
inc
xor
cmp
xor
les
pop
add
imul
pop
xor
push
ljmp
jp
push
pusha
les
inc
sbb
push
lds
ljmp
in
lea
jle
loope
add
xchg
adc
mov
aad
xchg
loop
fldpi
and
clc
leave
pop
sarb
imulb
or
jmp
dec
or
fcoml
pop
push
mov
enter
inc
negl
mov
mov
add
stc
scas
addr16
in
mov
std
add
cmp
and
les
and
mov
mov
fbstp
lods
mov
xor
jp
out
sahf
inc
add
cmc
fsts
cmc
dec
pop
subl
repnz
clc
and
loop
cmp
jmp
std
stos
xchg
mov
xor
dec
cltd
sub
adc
stc
sub
jg
daa
dec
jl
lret
mov
iret
jo
push
or
adc
pop
xchg
outsl
mov
loope
add
jp,pt
dec
push
xchg
cmpsb
jecxz
out
ljmp
sub
jg
push
and
lret
mov
push
jmp
fldl
int3
imul
cld
cmp
adc
cmpsl
fisubs
or
insl
leave
cmc
jecxz
ja
sbb
sbb
cwtl
repnz
add
sbb
cmpsl
es
lock
je
add
ret
dec
inc
adc
add
push
movsl
aad
mov
andb
ds
in
dec
les
sbb
rcl
ret
clc
mov
mov
pop
testb
xchg
cmp
xchg
lret
sbb
jno
inc
mov
dec
mov
add
movsl
dec
lcall
push
pop
and
imul
add
fisttps
sahf
insb
into
out
xchg
fnstsw
iret
pop
mov
pop
ss
mov
or
jp
addr16
mov
daa
rolb
fsubrs
movsb
in
pop
add
loop
bnd
pop
mov
pop
mov
mov
and
sbb
jo
fcoms
mov
xchg
aam
inc
fldt
mov
lods
jle
inc
mov
sub
push
fildll
push
push
loop
ror
mov
imul
outsb
pop
fadds
xor
pop
xor
inc
mov
mov
lea
jb
pop
jl
mov
mov
lcall
ja
sbb
ret
mov
and
jmp
mov
cli
mov
push
push
mov
outsl
mov
adc
add
sbb
mov
addr16
pop
out
fwait
inc
outsl
inc
dec
and
push
xchg
aad
scas
sub
push
push
dec
mov
aaa
orl
int
pop
cmpsb
cmp
cs
repz
xchg
sti
iret
in
shld
cld
inc
out
push
rorl
and
stos
and
test
xchg
jmp
sbb
faddp
push
das
flds
and
jg
mov
pop
ss
mov
cltd
mov
scas
jae
xchg
dec
xchg
fsubl
sbb
push
adc
xlat
jae
lcall
ficomps
sub
fwait
scas
repnz
dec
sub
pop
cmp
sbb
hlt
and
sbb
out
dec
xchg
xlat
ljmp
xchg
das
xchg
inc
js
jle
repz
mov
ficoml
roll
mov
pop
lret
cwtl
mov
sub
divl
add
mov
in
lret
sbb
and
cld
pop
dec
push
outsl
mov
shr
dec
sub
cmp
xchg
or
mov
jb
dec
pop
jne
call
es
jecxz
mov
mov
push
mov
cmc
sub
pop
xor
push
arpl
clc
jp
jp
fmulp
sti
int
sub
mov
movsb
mov
movsb
out
in
out
out
or
add
mov
cmp
push
ret
add
push
and
jno
ds
and
mov
scas
rcl
jg
lods
imul
test
adc
ficoms
xchg
or
sub
pop
dec
movsl
int3
andb
pop
mov
jg
cmp
jnp
sbb
xchg
dec
outsl
and
mov
mov
sahf
rorl
outsl
jp
pop
xchg
mov
xor
xor
imul
inc
repnz
ret
je
or
daa
sub
inc
stc
iret
or
or
aaa
xchg
or
jo
mov
push
push
add
sahf
pop
mov
movsb
jp
push
add
push
mov
dec
out
ret
push
stos
xchg
cmpsb
ret
sbbl
dec
and
xor
out
shll
out
adc
jae
ja
push
icebp
scas
xchg
or
rolb
cmc
fnstcw
cmp
add
js
maskmovq
negl
xchg
jp
sub
pusha
into
cli
filds
lahf
adc
or
imul
cwtl
inc
and
ret
sbb
leave
jecxz,pn
sbb
inc
repnz
sub
cmp
push
test
mov
jle
mov
xchg
cmp
ss
aad
enter
ret
sbb
fsubr
mov
sbb
sbb
push
add
rclb
xchg
push
push
jnp
sbb
andl
pushf
in
mov
sub
mov
mov
sub
xor
dec
lods
les
mov
repnz
fisubrl
sar
pusha
loop
call
mov
add
mov
xor
sub
mov
mov
std
add
jae
adc
fisttps
lods
std
ss
stos
xor
pop
mov
inc
movsl
mov
fcmovbe
pop
test
scas
push
jecxz
jle
push
in
fisubs
xor
gs
mov
dec
stos
add
mov
push
dec
hlt
xor
jl
pop
mov
in
scas
adc
mov
hlt
adc
pop
cld
pop
insl
ret
jg
push
fwait
lock
repz
and
int
lds
cwtd
sub
push
test
insl
add
sub
inc
sbb
pop
jnp
das
sub
push
and
push
adc
clc
xor
aad
pop
push
call
and
mov
xchg
ret
jnp
std
das
and
iret
imul
pop
test
or
add
xchg
mov
stos
mov
dec
mov
xchg
xchg
loopne
mov
mov
loop
jp
pushf
fistpl
stos
rcll
jp
push
and
push
aas
repnz
and
outsb
jg
xchg
mov
or
repnz
out
sub
jb
lock
and
or
loopne
arpl
repz
mov
ffreep
lds
sbb
test
pop
mov
aaa
int
xchg
scas
hlt
cmp
das
addr16
sub
cmc
adc
in
inc
aas
jp
iret
je
mov
mov
xchg
xchg
or
jge
jl
xchg
xchg
mov
dec
fmuls
or
jbe
sub
jle
cmpb
mov
ret
dec
add
jecxz
push
xor
xor
sub
jns
dec
adc
adc
out
jmp
sbb
xchg
das
stos
inc
out
dec
out
xor
aas
mov
xchg
aam
jnp
jl
or
data16
jmp
cmc
imul
daa
stos
out
push
sub
imul
or
sub
outsb
cltd
xlat
inc
sbb
xor
rcrl
dec
sub
jge
sbb
je
in
stc
adc
fld
ljmp
add
cmp
nop
mov
loopne
repnz
icebp
xchg
xor
inc
addb
cmp
out
cmpsb
cmp
or
jbe
add
jp
test
sti
add
jns
jg
stos
mull
pop
jp
lods
shll
lahf
sbbl
fwait
inc
cmpsl
pop
sbb
fldt
mov
gs
adc
rol
xchg
dec
add
adc
pop
sub
fmull
xchg
daa
ret
aaa
adc
or
ret
mov
mov
jo
enter
push
push
jnp
repnz
mov
in
push
es
inc
dec
jne
jp
cmp
dec
fstp
dec
jo
adc
stos
pop
lahf
repnz
inc
xchg
mov
pop
fisubrl
shlb
nop
inc
addr16
ljmp
enter
out
scas
incl
sti
mov
imul
movsl
pop
loope
cmp
fmull
lods
sahf
cli
or
insl
mov
ja
loope
jbe
adc
enter
push
call
mov
xchg
or
pop
dec
out
jne
add
aas
mov
push
in
insb
std
stc
stos
pop
packsswb
xor
ss
xchg
incl
lds
and
xchg
pop
jns
adc
fistl
or
repnz
xor
inc
outsb
mov
or
test
mov
cli
insb
add
sub
mov
fdivrl
push
scas
inc
nop
or
and
int
fsubs
jne
dec
add
stos
iret
xchg
loopne,pn
jmp
jl
negb
sub
ja
fdivr
icebp
mov
fucom
mulb
ja
push
ret
jae
and
xchg
les
mov
loope
push
sbb
rcrb
jmp
outsl
xchg
and
repz
mov
sub
sbbl
call
les
xchg
mov
xor
aaa
xor
mov
adc
pop
xchg
and
xor
pop
or
mov
mulb
mov
add
jg
mov
adc
clc
mov
in
cmp
mov
push
push
lods
mov
jbe
das
ret
cmp
mov
and
xchg
cld
jns
mov
in
test
mov
movb
inc
mov
push
jo
pop
js
insl
popa
shll
jno
inc
mov
mov
scas
lcall
pop
sbb
cwtl
pop
mov
addb
insb
rorb
xor
pusha
push
inc
jae
sarl
cli
xor
mov
and
int
test
xor
ss
inc
jns
loop
and
mov
in
ljmp
data16
outsb
int3
mov
repnz
mov
call
inc
adc
mov
dec
shll
jecxz
add
add
adc
or
dec
rcrb
jae
pop
jecxz
lcall
pop
data16
clc
rclb
rolb
lahf
xchg
sub
pushf
push
jecxz
ljmp
inc
sti
pop
cwtl
sub
cltd
out
int3
ss
cli
jge
ret
ret
sbb
lret
cmp
and
sahf
stos
jnp
sbb
sub
int
clc
cld
mov
push
lods
push
iret
aam
adc
rorb
out
repnz
cmp
test
add
add
inc
icebp
mov
pop
cmc
das
clc
fs
ds
or
mov
ret
daa
hlt
lock
pop
shl
imul
mov
insl
ja
xchg
dec
gs
sub
mov
iret
adc
call
cmpl
push
or
pop
mov
mov
ljmp
mov
pop
aaa
dec
jmp
xchg
aam
dec
or
fimull
pop
xchg
cmpsb
pop
ret
sbb
roll
daa
mov
cs
mov
adc
out
pop
int
cmp
xor
aas
cwtl
sub
cltd
iret
negb
clc
pop
in
mov
adc
sub
cmp
cmp
fisttps
xor
sbb
xchg
data16
inc
jno
pushf
push
mov
sub
mov
lea
sub
pop
mov
arpl
adc
subb
xor
lods
mov
dec
mov
and
stos
dec
outsl
mov
jno
xchg
stos
inc
dec
dec
sub
test
rolb
repz
pop
je
xor
jb
or
cltd
fsubp
xor
push
aad
xchg
mov
sbb
lea
jle
sahf
sbb
mov
fdivs
sbb
jae
out
cs
imul
pop
fdivl
push
push
mov
jl
pop
adc
dec
movb
bound
adc
subb
shll
push
into
or
adc
cmpsb
nop
add
mov
add
add
mov
xlat
push
xchg
imul
loope
sub
fistps
xrelease
mov
cmp
insb
add
adc
or
in
scas
sbb
in
sbb
push
movsb
xchg
lock
enter
les
push
out
pushf
push
pop
jle
leave
imul
cltd
cmp
add
xor
arpl
dec
mov
mov
dec
fs
xchg
mov
pop
adc
cmp
repnz
sbb
jl
lahf
mov
cmp
loopne
aas
mov
xor
test
imul
cld
mov
and
mov
cmp
sahf
fbld
lcall
iret
dec
inc
jb
int
ret
pop
push
inc
cli
cli
sbbb
dec
outsb
pushf
stos
cmp
adc
xchg
adc
decb
xchg
test
sub
outsb
sub
pop
xchg
es
pop
xor
js
sub
mov
add
mov
faddp
imul
push
xchg
mov
xchg
mov
mov
add
js
fcoms
mov
mov
imul
or
jmp
shlb
xchg
cltd
sub
and
sbb
in
mov
jp
in
jl
dec
fisttpll
fmulp
lock
inc
aam
fcomps
jp
push
mov
dec
pop
pusha
lret
dec
mov
ret
cs
inc
test
add
push
adc
pop
jle
push
js
std
sub
adc
pop
mov
shrl
iret
cmp
bnd
xchg
push
gs
mov
ficoml
mov
sub
mov
and
jp
lret
roll
aam
xchg
dec
mov
or
aaa
and
out
mull
icebp
inc
into
cmp
push
mov
imul
aad
pop
lods
xor
incl
xchg
jg
jp
jp
scas
fsubl
cmp
bound
push
add
push
mov
subl
sarb
pop
mov
rcrb
cmpsl
xchg
or
lret
mov
shll
movsb
jmp
xor
mov
adc
arpl
jge
rorl
sbb
sbb
adcl
jl
andl
dec
xchg
cmp
cmp
out
les
inc
xor
stc
inc
adc
in
in
push
xor
aam
sahf
ds
les
popa
sarb
adc
dec
stos
repnz
cmp
mov
imul
xlat
push
jg
in
push
push
add
lods
popa
insl
outsl
pop
push
enter
in
ret
fisubrl
mov
push
inc
push
call
mov
aam
and
in
push
fldt
xor
cld
mov
sti
arpl
push
in
xor
jecxz
es
das
lods
sub
sub
bswap
dec
sub
xchg
jle
cmpsl
push
ficomps
ljmp
test
adc
int
das
into
sbb
sbb
adc
rolb
stos
rolb
cmp
xor
sbb
outsb
and
push
inc
or
xchg
js
lea
ljmp
mov
jae
xor
jge
aam
js
xchg
adc
push
out
and
sbb
mov
mov
and
cs
cmp
pop
lods
std
sub
sbb
push
mov
nop
push
ret
lret
cld
insl
fildl
xorb
fsubr
loopne
dec
insl
insl
fisubrs
fwait
test
mov
out
lock
and
and
inc
imulb
mov
sahf
jl
in
cmp
out
insb
inc
sub
mov
loopne
adc
xor
or
cmp
mov
and
es
xchg
pushl
jp
mov
hlt
aas
fildl
scas
insl
in
shll
xchg
int3
push
hlt
cmp
xchg
sub
sbb
lcall
fstps
in
xor
dec
xor
cmp
fdivl
mov
pop
dec
mov
push
cmpsl
lret
sti
dec
mov
pop
mov
sbbb
ret
jmp
cmp
jge
stos
jl
shl
pop
fisubrs
enter
arpl
cmc
dec
push
popa
xchg
pop
fstps
dec
dec
ficompl
cmp
loope
test
out
iret
outsb
pop
and
mov
pop
cltd
mov
sbb
dec
ljmp
push
xor
or
fidivrl
jmp
and
jns
frstor
push
jmp
shlb
pusha
dec
dec
push
out
cmpsb
jnp
xor
in
je
and
icebp
jmp
add
jg
xchg
sbb
xorl
add
cltd
imul
mov
not
push
mov
jmp
std
cmp
and
insl
jmp
pop
inc
not
out
lcall
call
and
mov
cmp
mov
repnz
out
push
cmp
repz
or
cmp
into
sahf
sub
scas
xor
bound
shrb
push
inc
aam
add
cmp
mov
movsb
mov
mov
arpl
cmp
sbb
stos
imul
addl
fsubrs
pop
xchg
inc
mov
fsubrl
out
lock
cmp
jecxz
je
cltd
jecxz
mov
arpl
mov
mov
cmovne
call
push
stc
fwait
pop
out
adc
ret
and
adc
mov
xchg
repnz
xchg
sbb
push
xor
or
xchg
push
pop
nop
popf
jle
inc
and
int
mov
in
adc
pop
jg
imul
ja
mov
lahf
mov
cs
adc
daa
aaa
outsl
mov
dec
ds
xor
cmc
adc
jnp
aaa
xlat
insl
das
aaa
addr16
and
mov
bound
dec
inc
mov
xor
loop
stos
push
jge
clc
inc
or
loop
sbbl
xchg
push
leave
sti
dec
or
mov
or
jbe
push
push
pop
popa
addb
mov
cli
jge
mov
xor
mov
adc
dec
cmp
mov
or
mov
xor
scas
mov
test
cmpsl
xchg
inc
add
inc
ret
pop
loop
mov
xchg
and
mov
and
inc
push
ror
xor
xor
push
dec
stos
inc
adc
sbb
nop
int3
aas
outsl
jnp
iret
rcrl
xor
push
xor
dec
iret
out
in
mov
and
adc
lret
call
cmp
and
or
rcrl
mov
mov
lds
inc
sbb
mov
fisttpl
int
cld
imul
pop
push
pushf
sbb
mov
sub
outsl
aad
xor
dec
inc
or
stos
jo
xor
ficoml
mov
sub
dec
fstpl
jg
fsts
push
and
cmp
outsb
or
xchg
or
jg
cmp
fwait
jbe
repz
inc
pop
and
popf
shl
hlt
mov
pop
add
xor
imul
add
sets
rcr
and
test
pop
cwtl
dec
int3
inc
jge
mov
dec
xchg
pop
mov
xor
inc
push
shll
inc
add
jnp
and
sbb
add
rolb
mov
mov
mov
jle
adc
jmp
xor
mov
mov
xor
lea
repz
aad
mov
dec
sbb
mov
adc
push
pop
scas
out
pop
out
inc
xchg
xchg
or
dec
call
and
loopne
cmp
std
cld
cmpsl
add
das
sub
jns
xor
pop
invlpg
xchg
btc
mov
push
das
outsl
inc
pop
add
clc
push
or
sub
fdivr
loope
and
jne
iret
jae
or
sub
sub
cwtl
ss
rorl
aam
aaa
jle
jne
sbb
add
sub
pop
inc
mov
cmp
dec
jge
cmc
xchg
inc
mov
test
inc
mov
das
pop
lods
pop
push
mov
add
inc
lea
cld
cmp
divb
ds
popa
popl
and
ss
mov
mov
jne
adc
mov
add
cld
sbb
pminub
in
test
xchg
or
loope
add
sbb
ds
mov
jl
jecxz
lds
add
stc
dec
xchg
sub
arpl
dec
lcall
std
loop
aas
mov
out
cs
jo
jp
pop
fucomip
jmp
popf
test
lods
lcall
scas
jle
clc
push
xchg
xchg
movsl
in
add
xchg
outsb
imul
jae
orb
daa
leave
add
ret
fwait
add
dec
jo
jg
scas
call
and
sbb
cs
jo
mov
jp
lahf
push
repz
or
loope
stos
fs
mov
jnp
in
mov
loope
hlt
insl
mov
cli
mov
movsl
mov
aam
add
stc
notb
sarb
mov
add
pop
add
adc
bound
sbbb
push
shlb
daa
loopne
stos
inc
push
mov
xor
xchg
cltd
mov
fsts
or
jb
out
inc
repnz
jge
insl
adc
fmul
fcmove
mov
lods
ds
jne
mov
out
ljmp
icebp
adc
mov
pusha
scas
das
inc
pop
repz
cmp
cmp
outsl
leave
test
stos
out
fistl
repnz
mov
sbb
orl
js
mov
aam
call
lret
sub
iret
loop
mov
sub
mov
leave
je
push
sub
xchg
rol
jnp
and
hlt
jne
jp
sbb
shll
fs
jecxz
dec
les
xchg
das
or
movsb
ljmp
clc
dec
movsb
dec
mov
jle
iret
popf
lret
jo
jp
imul
adc
xlat
and
shr
xorb
push
jp
pmullw
test
shlb
mov
dec
shr
mov
imull
jmp
push
adc
mov
add
gs
xor
push
mul
fiaddl
push
popf
pop
dec
fs
inc
add
push
insb
sub
push
shlb
in
add
leave
scas
js
test
rorb
cmp
out
sbb
sbb
mov
lcall
notl
leave
sub
movsb
mov
jnp
sbb
ja
push
inc
mov
pop
arpl
fcmovnb
fildll
dec
cmp
data16
jnp
dec
sub
int
cwtl
inc
sbb
movsb
das
jmp
in
fdivr
pushl
push
adc
stos
lret
push
and
mov
test
in
cmpsb
stos
int
mov
xor
out
ret
pop
cmp
add
mov
dec
test
or
and
pop
fs
pop
repz
aaa
data16
shrb
outsl
sub
jns
xchg
aaa
xchg
lods
add
das
ret
cmpsl
insb
adc
sbb
call
out
or
inc
push
scas
mov
ret
jb
lcall
iret
xchg
leave
sahf
mov
bound
jne
adc
jmp
fsubl
orb
push
lods
xchg
in
lods
aad
jb
mov
push
stc
adc
xor
aas
lock
sub
add
cwtl
movsl
push
test
aas
aaa
jb
loope
imul
sub
sbb
addr16
jo
dec
jo
sbb
or
in
idivb
shrb
daa
daa
inc
sub
mov
sti
jns
jb
and
insb
lret
in
in
aas
call
xchg
mov
sub
pushf
jp
mov
cld
cld
mov
xchg
jbe
and
push
int
dec
add
push
jb
mov
leave
dec
mov
jae
mov
nop
mov
cmp
scas
dec
xchg
mov
jne
lds
pop
xor
imul
mov
in
lcall
aas
pop
cmp
lahf
jbe
out
outsb
testb
mov
push
popf
ss
add
pop
je
push
sbb
int
loopne
stos
xor
adc
testl
push
sub
outsb
mov
cmpsb
addr16
das
out
mov
or
insb
and
arpl
ret
leave
not
ja
mov
sbb
scas
push
ss
or
cmp
dec
xchg
lods
popa
dec
fnstcw
std
adc
adc
orl
adc
mov
add
shufps
mov
xor
xchg
aaa
clc
addb
jge
cmc
dec
xor
lret
add
push
in
das
in
jp
arpl
loop
test
daa
ret
mov
ss
push
lret
ror
and
sub
cmp
inc
test
lea
iret
ljmp
fcmovnu
fcmovu
xor
or
mov
mov
mov
pop
push
mov
push
mov
cmp
cmc
cld
ficoms
stos
and
mov
ds
sbb
jnp
cmp
mov
push
sub
imul
pop
ret
outsl
lret
pop
nop
push
cltd
roll
mov
adc
add
and
cli
out
test
jo
out
cmp
and
inc
and
aas
sbb
mov
push
cmp
mov
insl
leave
xchg
clc
mov
jge
jo
ja
dec
movb
leave
adc
mov
stos
mov
stc
mov
push
push
subl
fstl
daa
dec
mov
div
add
aad
in
andl
cmc
scas
outsb
sub
dec
mov
mov
inc
out
dec
xchg
cmp
aaa
jmp
movsl
adc
bound
add
xchg
fcompl
xchg
xlat
cmp
mov
outsb
aaa
fstps
pop
pop
int3
test
icebp
out
and
sbbl
sub
inc
loopne
pop
into
or
xchg
and
call
loopne
pop
into
shll
inc
aaa
and
fmul
cmp
mov
or
int
adc
cwtl
lret
push
leave
bound
xor
mov
mov
mov
and
mov
mov
push
cli
es
pusha
jl
inc
push
or
fcmove
outsb
or
cltd
sbb
idivl
push
xor
repz
mov
pop
adc
jecxz
xchg
inc
icebp
inc
cld
xchg
test
clc
js
sbb
adc
dec
mov
sbb
repz
xchg
sub
test
movsl
outsb
lock
aad
repz
cmpsl
sub
cwtl
add
fldt
int3
rcrb
outsb
xchg
pop
outsl
sbb
es
fidivrl
repnz
js
ffree
sbb
jecxz
mov
addr16
and
scas
es
aam
hlt
adc
roll
mov
cld
cs
sub
push
arpl
js
das
pusha
gs
insl
dec
dec
cmp
push
push
adc
add
aaa
test
test
scas
in
test
test
inc
in
pop
push
mov
lahf
jb
xchg
mov
negb
cmp
js
jmp
mov
stos
dec
or
inc
xchg
rorb
pop
pop
movb
outsb
jmp
fnstsw
daa
push
add
data16
jo
sbb
jge
pop
ret
in
outsl
adc
dec
iret
je
and
repz
push
sub
addr16
sub
aas
dec
lods
inc
jns
dec
mov
pop
dec
cmpsl
jno
inc
test
int
out
test
mov
es
xchg
cmpb
mov
test
adc
pop
dec
mov
or
fwait
cltd
test
push
xor
insl
cli
push
lahf
jnp
mov
xchg
cmp
aad
inc
insl
scas
add
loop
xchg
sbb
dec
mov
test
addr16
xchg
lret
push
jno
inc
cmp
sbb
push
insl
xor
jmp
and
lea
push
mov
xor
push
cwtl
ret
imul
scas
pushf
scas
sbb
int3
stc
lds
mov
das
outsl
fdivrs
punpckldq
adcl
push
xchg
flds
sbb
je
mov
int3
jo
lods
push
push
in
xchg
aaa
jne
pop
mov
mov
cwtl
mov
and
mov
mov
out
dec
leave
popa
mov
jmp
hlt
scas
mov
xchg
sub
pop
cs
sub
mov
daa
addb
ret
jne
adc
shlb
rolb
and
adc
stos
push
imul
jge
arpl
xchg
mov
stos
jne
inc
mov
in
shl
jb
sbb
loopne
fstl
xchg
push
adc
inc
loopne
xchg
mov
push
mov
outsb
das
pop
mov
xor
adc
aam
push
mov
clc
aas
push
push
stc
xchg
jns
pop
pop
incl
lahf
repz
push
pop
in
or
jecxz
scas
hlt
jecxz
mov
adcb
bound
xchg
lds
fisubs
add
dec
ss
mov
daa
xchg
dec
int
cli
mov
mov
jg
mov
maskmovq
testl
shrl
push
je
icebp
inc
data16
lods
adc
inc
xlat
pushf
stos
cli
xchg
cmp
test
clc
sub
loopne
in
mov
fwait
add
stc
sub
lret
popf
ret
out
movsl
or
insl
add
mov
insb
rorb
push
fsts
imul
bound
mov
sbb
push
xor
ret
mov
imul
jge
or
test
cmp
sub
jecxz
lcall
arpl
mov
movsb
adc
orl
nop
jno
out
negb
push
or
xchg
divl
mov
mov
jg
inc
lret
sub
mov
loope
addb
lea
pop
test
xchg
je
pusha
pop
insb
inc
mov
sub
movsl
and
xchg
inc
xor
ss
jns
dec
pusha
movsb
mov
int
call
xchg
iret
add
dec
jp
outsb
fsubrs
and
jl
jl
pop
insb
or
pop
fisubl
xchg
add
push
fwait
int
mov
push
sub
es
add
shl
dec
jecxz
enter
jmp
push
pop
add
cmp
dec
std
or
jg
jl
shrb
sbb
mov
aaa
jns
dec
jg
in
xchg
jmp
push
test
cmc
xor
xchg
dec
aaa
ja
les
adc
xlat
popf
jb
test
repnz
and
stos
jge
lahf
mov
and
jl
xor
pushf
fisubrs
cmpsb
jl
js
push
repnz
pop
add
xchg
xchg
cmp
sub
inc
adc
mov
xlat
pop
pop
enter
mov
jns
out
mov
push
pop
stos
incl
inc
repz
mov
xchg
fwait
pop
out
popa
or
outsb
sbb
add
mov
leave
adcl
jecxz
and
cli
xor
dec
dec
lcall
shrb
iret
shll
divl
pop
dec
lahf
dec
gs
dec
test
iret
mov
gs
jo
inc
adc
pushw
das
mov
stos
pop
into
aam
rcrl
fstpt
pop
into
dec
inc
pusha
sub
mov
mov
nop
enter
xchg
dec
mov
add
push
dec
sar
outsb
mov
xor
lea
pushf
push
add
subb
push
cmp
add
mov
or
out
cmp
movb
inc
sbb
notb
mov
pop
mov
sbb
lahf
sub
xchg
xor
pop
clc
mov
push
test
sbb
jno
mov
sbb
movsb
mov
shlb
mov
incl
mov
pusha
jne
jnp
in
mov
xchg
ds
ret
inc
push
push
xchg
dec
xlat
imul
add
push
aam
mov
popa
mov
cmpsl
jle
cmp
fsubl
int3
insl
jno
repz
pop
fwait
movsl
sti
sti
lret
cmp
in
pop
and
mov
xor
test
sub
push
out
in
shll
scas
inc
add
sub
push
lret
and
loopne
test
mov
mov
push
pop
lods
sub
sbb
jl
mov
out
pop
loop
jnp
add
int
adc
sbb
jns
jmp
ficoml
daa
andb
out
xor
arpl
je
aas
in
fmull
add
push
mov
sub
stos
sub
xchg
test
inc
add
or
lods
inc
jbe
das
or
or
jge
insl
outsl
cld
adc
cmpsb
pop
pop
shl
cltd
adc
fmulp
and
mov
jae
in
or
cltd
sahf
lcall
fildl
sbb
insl
out
inc
mov
and
xor
sahf
mov
pop
xlat
adc
push
nop
mov
adc
dec
adc
sub
pop
outsl
push
pusha
inc
shlb
inc
push
jo
xor
mov
imul
dec
and
insb
sub
ja
cs
pop
pop
das
dec
adc
outsb
sti
bound
xchg
mov
and
or
xchg
rolb
hlt
imull
jp
adc
shr
sub
aas
and
dec
dec
lret
clc
jle
call
pop
fists
cmp
mov
fs
xor
pop
mov
mov
adc
xor
aad
jecxz
bound
mov
dec
pop
dec
pop
push
inc
sbbb
movsl
pop
call
int3
jno
sti
mov
sbb
mov
shll
mov
inc
cmc
nop
shll
scas
test
mov
jne
loop
insl
sbb
rcrl
jle
dec
rcl
pop
ds
mov
in
mov
insl
sub
pop
inc
test
dec
jmp
mov
and
rclb
lahf
ss
aad
add
je
mov
fisubrl
add
test
orl
or
pop
test
push
pop
mov
inc
movsl
data16
fwait
sub
fisubl
push
ja
loopne
into
push
lahf
sbb
inc
jb
push
negl
push
test
sub
jecxz
fstpt
aad
imul
mov
in
enter
mov
mov
loope
jne
pop
gs
scas
push
or
hlt
inc
addr16
jb
test
add
loop
fdivs
cmp
dec
inc
pusha
push
fdivl
and
mov
rolb
cmp
or
cmp
jg
sti
pop
push
inc
pop
cmpsb
xchg
rclb
push
cmp
dec
ret
in
dec
mov
mov
mov
movsb
test
dec
ljmp
sbb
sbb
mov
pop
jns
pop
out
dec
dec
pushf
jge
jne
dec
sahf
fs
movsb
and
or
xor
mov
daa
jnp
mov
out
lock
jl
outsl
mov
sbb
sbb
jae
das
mov
cmc
mov
push
mov
in
mov
lahf
push
cmc
outsb
hlt
lods
ffree
mov
jns
pop
xchg
rcrb
inc
lea
sbb
test
fistpl
ljmp
aad
icebp
dec
push
loop
dec
mov
push
imul
push
xchg
xorb
ror
xchg
fucom
repz
enter
ret
fs
jo
pop
xchg
mov
jg
mov
dec
ret
cmpsl
mov
cld
jbe
ret
mov
xchg
xchg
xchg
mov
fabs
jne
mov
inc
repz
xchg
clc
arpl
xchg
mov
test
nop
clc
aad
test
sub
cmp
hlt
mov
mov
and
pop
mov
int3
xor
loopne
inc
pop
mov
repnz
mov
pop
xchg
and
inc
and
and
sbb
mov
ret
mov
negb
xor
cmpps
push
push
cmp
sbb
pop
cli
inc
pushf
inc
cwtl
mov
loopne
mov
push
out
mov
sahf
je
mov
inc
in
jmp
mov
xchg
sub
add
add
pop
aas
mov
dec
mov
je
xlat
vmovshdup
incl
mov
xchg
jmp
xchg
jge
lods
out
push
push
fisttpl
int3
sbbb
sbb
sbb
je
rcr
lods
mov
addb
sahf
faddl
fildl
scas
mov
rolb
xor
mov
lret
pop
pop
xchg
xor
adc
ja
add
sbb
lods
push
push
scas
jl
jecxz
in
jb
popf
adc
leave
cmp
or
jecxz
adc
mov
testl
idivb
out
aas
push
mov
out
pop
mov
and
leave
lds
push
subb
push
mov
push
xor
mov
sbb
inc
pop
rcr
jne
pop
sub
add
mov
dec
js
stos
or
and
xor
xor
xchg
mov
mov
fdivs
insl
scas
mov
out
sti
cmpsb
sbb
in
fsubrs
adc
daa
fldt
push
dec
enter
xor
stc
cmp
insb
inc
mov
xchg
push
mov
test
ret
mov
and
inc
dec
ja
test
popf
out
and
pop
insl
loop
mov
frstor
xlat
lret
xchg
imul
pop
inc
shlb
jl
sbb
mov
push
out
push
push
inc
sub
cs
sbb
popf
cmpsl
outsl
lcall
icebp
cmp
push
pop
pop
fs
mov
orb
xor
mov
jle
aas
xchg
addl
cs
mov
push
ret
lea
pop
addl
xchg
push
test
push
mov
jcxz
cmpsb
in
scas
and
in
out
outsl
pop
dec
mov
das
arpl
popw
or
or
xlat
lcall
dec
mov
jge
popf
or
outsl
sub
jmp
test
add
je
outsb
mov
jg
out
mov
test
add
and
fld
test
mov
outsl
mov
out
mov
sub
mov
into
movsl
jne
or
shl
ds
bound
jb
jecxz
cmp
jno
add
sub
or
shrb
push
push
in
push
lods
push
cmp
cmp
fstpl
sub
jle
movsb
jle
popf
adc
movsb
and
ja
xchg
outsl
push
fdivl
std
je
mov
cs
and
fisubrs
push
jl
mov
rorb
cmp
mov
ficoml
shrb
sub
faddp
mov
xchg
mov
jno
inc
lcall
push
cli
jmp
rcll
xor
xchg
stos
push
xchg
js
jo
fmuls
hlt
or
sub
mov
icebp
repz
and
test
aaa
stos
loop
lods
jl
add
test
jl
add
cmp
xor
cld
scas
cmp
add
call
cmc
mov
mov
sahf
sbb
mov
gs
roll
sbb
js
test
and
jmp
xor
movsl
fnstcw
sbb
mov
loope
push
ss
sbb
div
aad
cwtl
inc
or
jbe
inc
mov
out
pop
sbb
inc
shl
adc
arpl
sub
pop
push
adc
mov
jns
dec
rcrb
jmp
add
dec
out
pop
mov
test
jns
test
inc
mov
hlt
insb
xchg
push
and
imul
fcoml
into
jo
aaa
cld
jp
xchg
mov
add
push
jg
test
enter
pmulhuw
or
lret
adc
mov
sbb
gs
cmp
adc
stos
sahf
mov
mov
rcll
inc
and
out
data16
fwait
or
mov
xor
into
mov
and
data16
lret
push
rorl
pop
ds
loopne
push
cltd
mov
xchg
scas
dec
pop
push
mov
cmp
xlat
addr16
inc
insl
push
mov
and
pop
in
mov
xchg
jecxz
nop
adcl
mov
out
jae
push
fnstcw
gs
inc
and
fcomps
cmpsb
cwtl
fnsave
jg
and
js
test
or
jo
in
js
imul
std
inc
sbbb
sub
out
lods
dec
sub
xor
cmp
fwait
mov
mov
add
jno
addb
cli
push
mov
data16
test
stos
sub
add
aas
xor
iret
fisttpl
xchg
loope
imul
xor
mov
lret
jecxz
rorb
sbb
mov
sbb
stos
and
mov
push
and
and
decl
adc
stos
repnz
dec
push
andb
inc
pushf
cltd
outsb
pop
sbb
pop
divl
lret
outsb
frstor
stos
pop
ret
lds
add
xchg
shll
jo
leave
out
test
fistps
pop
dec
add
ljmp
xchg
sbb
sub
shrl
pop
pop
idiv
dec
fadds
out
test
addb
imul
xlat
sbb
lret
jae
xchg
sbb
push
jb
andb
or
cmpsl
pop
popa
cmp
xchg
out
push
ror
jmp
jmp
pusha
clc
mov
cmc
shlb
dec
mov
sbb
xchg
pop
mov
je
cld
mov
jg
jae
add
jbe
sbb
fisubs
mov
andb
faddl
xor
adc
jle
jbe
ja
mov
inc
pop
int
sub
mov
mov
sbb
cltd
inc
cmp
pop
out
movl
ret
jnp
imul
rcrb
aaa
aas
repz
push
movsl
dec
mov
push
cmp
ljmp
lahf
mov
inc
xor
pop
pop
js
cs
je
xor
and
dec
imul
inc
and
in
in
rep
xchg
sub
stos
stc
jae
in
dec
and
jo
inc
addl
cmc
sub
xchg
sbb
fildl
out
lea
mov
popf
mov
and
fiadds
xor
movsl
repnz
lea
mov
jmp
sub
inc
stc
dec
loop
mov
xor
mov
xchg
add
insl
and
dec
adc
divl
cmpsb
jmp
pop
inc
add
sbb
inc
pop
xchg
inc
iret
add
xchg
repz
jecxz
dec
insl
xchg
ds
push
movsb
inc
in
add
lahf
stc
scas
pop
or
fcomip
and
addr16
pusha
fwait
subl
popa
mov
inc
mov
daa
loop
dec
push
cltd
add
daa
sub
icebp
es
cmp
fstpl
sbb
je
mov
ds
lock
xchg
in
lret
xchg
pop
cs
out
pop
clc
and
push
xchg
sbb
sbb
adc
adc
inc
adc
mov
das
jmp
std
int
es
add
push
fdivrl
test
jbe
popa
sbb
lods
adc
push
or
or
repz
sbb
test
jns
inc
sbb
pop
in
jecxz
sub
jmp
bound
push
adc
loopne
into
sbb
sarl
in
data16
repnz
mov
or
stc
sbb
xor
adc
mov
je
mov
dec
out
repnz
jle
xchg
jne
dec
lods
sbb
xor
hlt
mov
dec
dec
stos
push
repnz
sub
push
into
adc
test
inc
inc
cmp
lea
xor
out
je
cmp
cmp
push
pop
pop
dec
inc
push
adc
mov
es
pop
pop
and
add
mov
mov
stos
mov
sub
add
mov
ljmp
sbb
jnp
cwtl
call
aas
push
fists
xchg
xchg
jmp
dec
push
out
fs
inc
popf
loop
pop
into
push
mov
cmpsl
xchg
xchg
jnp
sub
je
leave
pop
mov
and
aaa
aam
mov
scas
jecxz
out
pop
xchg
xchg
shlb
loopne
sub
jmp
pop
pop
ljmp
mov
in
add
mov
in
loopne
fdivrs
sbb
mov
je
fcom
mov
mov
xor
cs
xchg
fwait
or
repnz
ja
rcrl
mov
fbstp
mov
push
push
cld
js
inc
mov
push
xchg
lret
aaa
pop
sbb
push
std
adc
sbb
cmp
push
inc
push
sub
pop
jo
mov
push
sahf
scas
aam
shld
ficompl
or
ror
mov
pop
dec
mov
mov
lods
inc
mov
popf
ljmp
dec
push
cmpb
xchg
js
bound
shr
scas
jae
insl
and
stos
out
popa
aam
and
xchg
stc
rcl
jecxz
or
jp
push
movsl
sbb
mov
repz
arpl
dec
pusha
int3
jg,pn
sub
aad
loopne
scas
mov
out
xor
xchg
push
addb
sahf
jb
repz
outsb
push
push
dec
pushf
test
in
mov
push
jg
mov
xor
insl
test
fmuls
js
sbb
cmp
loop
sbb
adc
pop
add
pop
movsl
dec
int3
rcl
dec
das
push
lret
lods
test
xchg
sahf
jp
jg
mov
push
inc
cli
scas
pop
daa
daa
in
adc
hlt
mov
js
sub
sti
shrb
xchg
shrb
add
aas
sarb
xchg
lds
in
push
sub
jge
je
les
mov
test
inc
adc
shlb
bswap
sbb
mov
jmp
add
or
mov
dec
imul
popf
jp
mov
and
jne
cmp
fsubrl
popf
push
mulb
mov
dec
dec
and
push
or
popf
aam
sahf
out
pop
add
int
or
adc
rolb
adc
pop
sahf
mov
loope
lahf
inc
sub
mov
lock
movl
test
jno
or
lods
sub
adc
push
mov
mov
dec
mov
dec
or
daa
push
fistpll
lods
fwait
push
jno
rol
sbb
fnsave
mov
dec
js
mov
push
add
aam
addl
or
in
outsl
pop
fcompl
pop
jg
rorl
adc
arpl
xchg
add
push
scas
test
iret
push
jnp
xchg
lds
shll
mov
test
cmp
test
inc
mov
jb
cmpb
sbb
add
ds
inc
fsubr
jge
mov
cmp
fs
das
test
les
inc
or
xchg
push
repz
imul
mov
insl
and
popa
data16
mov
cmpb
or
sbb
mov
push
stos
sub
loope
inc
int3
dec
and
adc
mov
xchg
xor
shrb
icebp
pop
pop
or
adc
fucomi
inc
fwait
xor
mov
subb
loope
popa
jo
mov
jecxz
jg
push
jecxz
push
push
push
fsub
sarl
aam
imul
lds
fidivrs
imul
mov
test
mov
mov
outsl
or
add
mov
push
lcall
test
pusha
stc
cli
lods
rorl
mov
and
pop
xor
fwait
jl
jo
fiadds
cld
ficoms
cmpsl
fwait
lds
mov
dec
xor
cli
pop
xor
in
repnz
popf
pop
jmp
roll
test
jo
jb
fisubrs
xchg
sbb
outsb
or
sub
push
aad
xlat
push
insb
xor
repz
dec
push
add
push
xor
push
pushf
ffreep
imul
lods
pop
mov
sbb
dec
xchg
ss
jg
loop
mov
mov
mov
add
sbb
xor
lods
cmp
xor
xor
shl
clc
or
test
mov
xchg
hlt
sub
lock
xlat
mov
mov
mov
xchg
lock
fucomp
jmp
movsl
andl
jbe
ret
sub
imull
stc
mov
rol
arpl
jbe
xlat
das
push
push
push
fdivs
mov
jbe
ret
decl
lret
popf
rorl
lea
mov
cmpsb
cmp
and
sahf
cltd
es
bnd
push
adcb
scas
das
nop
fs
scas
mov
ljmp
jnp
xchg
jecxz
leave
aad
push
cmp
jb
push
jne
cmp
mov
ja
loop
add
aam
ljmp
inc
pop
xor
movsl
cltd
mov
sbb
push
or
dec
mov
movsl
imul
jo
sbb
add
fmuls
cmpsb
jp
or
lds
or
scas
dec
sub
iret
test
sub
cmpb
push
dec
sarb
fistl
add
jmp
mov
scas
jg
jnp
repnz
jecxz
loop
sahf
rcrl
and
sti
pop
test
ljmp
jle
repz
pop
mov
out
shll
push
and
push
jno
mov
cmpsb
push
imul
mov
cwtl
subl
leave
hlt
push
add
inc
adc
rorb
mov
arpl
xchg
dec
jp
call
jp
movsl
pop
lcall
fwait
stc
inc
inc
sub
cmp
popf
xchg
movsb
incl
pop
push
xchg
xchg
lcall
push
adc
lds
mov
jle
scas
add
inc
sbb
dec
leave
xchg
pushf
mov
jg
popf
fistpll
sub
or
and
mov
push
inc
jae
repnz
add
ds
push
inc
out
xchg
orl
adc
push
in
mul
fadds
jno
push
inc
adc
js
mov
sti
fstl
out
gs
test
adc
fstpl
enter
dec
cli
std
ds
xor
cmpsb
cmpsb
jnp
mov
jge
ficomps
sti
shr
mov
jecxz
and
stc
into
push
push
pop
sub
push
cmp
addl
mov
inc
inc
mov
ja
xorb
push
sbb
lods
js
dec
cs
cmp
or
fdivl
mov
mov
xchg
pop
popa
xor
xlat
sbb
mov
xchg
aad
jno
add
and
cmpsl
mov
xchg
fstl
movsl
inc
jge
xor
and
outsl
call
test
mov
mov
mov
sub
cltd
int
add
dec
xor
mov
adc
movsb
movsl
adc
cli
fbld
imul
lahf
ret
testb
stos
jbe
cmpsl
addr16
push
lret
hlt
xchg
movsb
lahf
fmull
mov
jne
jg
push
or
ficompl
aam
repz
and
repz
pop
inc
xchg
xlat
movsb
sub
lcall
das
push
jo
je
cmc
test
sbb
push
mov
sbb
pop
lock
in
jmp
inc
ljmp
mov
push
pop
adc
pusha
in
es
adc
push
popf
pusha
cmp
ljmp
clc
inc
mov
leave
mov
jnp
pop
in
arpl
xchg
sub
jb
scas
sti
dec
lcall
aad
jmp
aam
aaa
push
sbb
mov
mov
adc
loop
sbb
cltd
imul
xor
jg
cmp
lods
scas
ret
fstpt
stos
fwait
iret
sub
sub
aam
cs
pop
stc
dec
or
test
inc
adc
shlb
adc
push
sub
sbb
enter
clc
sub
sbb
rolb
dec
je
mov
and
or
push
mov
out
cmp
lahf
mov
xlat
pop
mov
mov
ss
mov
cwtl
pop
push
in
cmp
test
faddl
lea
cmp
mov
or
in
adc
iret
sbb
sub
adc
lcall
sti
fstpl
enter
sbb
js
pop
ficompl
into
outsb
vmovq
iret
ja
ret
cltd
test
in
fwait
xchg
adc
xor
xchg
add
mov
fs
push
or
push
icebp
rclb
cmpsl
xor
gs
movsl
jmp
mov
mov
adc
inc
jmp
inc
cmp
sub
in
aaa
lds
lock
dec
fistps
stos
shll
test
cmpsb
or
xor
adc
jb
sbb
jge
shrl
push
sub
jne
push
or
hlt
imul
pop
push
lea
mov
loopne
jle
xor
pop
push
jle
adc
inc
mov
xchg
or
jns
inc
jge
sbb
sub
mov
xor
cwtl
imul
inc
pop
xorl
scas
dec
cmpsb
lret
movsb
sti
or
jg
mov
pop
call
dec
add
jae
cmpb
hlt
icebp
int
jle
not
xor
sahf
out
mov
mov
adc
pop
xor
mov
xor
jbe
push
insl
in
push
mov
and
or
daa
add
xlat
jge
lret
imul
jae
mov
shl
popa
mov
mov
in
sub
mov
sub
xlat
shrl
dec
into
cli
pop
and
cmp
cmpsb
pushf
lods
push
push
icebp
orb
cmp
jo
jp
les
outsl
jnp
sub
inc
jnp
scas
jae
icebp
mov
push
add
scas
pushl
jae
mov
cltd
pop
ret
adc
sub
cwtl
inc
in
dec
pop
xchg
lahf
pop
jge
lods
push
ret
lods
roll
mov
jb
stos
hlt
lahf
sbb
mov
bound
rorl
pop
shrl
push
hlt
scas
decb
scas
push
arpl
xor
rol
rclb
mov
adcb
mov
rep
and
xor
jl
div
in
mov
cld
dec
hlt
pop
lods
addr16
lds
orb
pop
mov
loope
dec
add
jp
mov
pop
movsb
mov
ret
clc
js
mov
and
xchg
testl
xchg
les
cmp
fcomps
repnz
xor
pushf
imul
paddsw
mov
loopne
sub
pusha
mov
sbbl
add
xor
enter
dec
pop
jbe
movsl
add
pop
inc
inc
test
lret
mov
notb
les
out
sub
jmp
pop
sbbb
loop
mov
es
push
and
push
mov
add
pop
aas
fldenv
cmpb
shl
jg
push
push
lret
cmp
adc
aas
mov
mov
sbb
lds
pop
icebp
popa
xor
aam
mov
aam
lret
testb
les
shrb
cmp
out
arpl
xor
in
je
fildl
into
dec
lcall
xchg
xor
cmp
lods
fdivp
bound
or
jnp
push
out
hlt
add
and
je
rolb
adc
jb
out
sbb
nop
test
adc
xlat
dec
aad
stos
xchg
rcll
sub
push
jecxz
mov
and
int
popa
in
inc
pop
push
jmp
inc
mov
push
cmc
fimull
fadd
sbb
pmaddwd
and
mov
xor
insl
in
mov
shll
pop
cmp
js
inc
test
jo
push
dec
dec
push
insb
scas
mov
insb
cmp
notb
insl
fwait
cmp
inc
pop
sbb
sbb
cli
lock
push
inc
lock
mov
mov
xchg
sbb
test
bound
cmc
dec
inc
test
sbb
dec
mov
push
mov
mov
push
scas
or
testb
or
test
jecxz
into
into
add
in
test
dec
negl
mov
stos
lea
aas
and
stos
loop
and
out
jne
xchg
popa
mov
daa
filds
or
mov
jp
cmp
adc
es
fmulp
icebp
js
cmp
test
inc
jno
jle
scas
rorb
mov
lahf
jmp
push
lret
mov
jns
mov
mov
jo
lret
sbb
pop
nop
hlt
ja
jl
inc
sub
pop
pop
xchg
inc
inc
jge
jge
imul
jno
nop
xchg
adc
add
stos
mov
cmp
jns
pop
fadds
iret
mov
push
lcall
fs
stos
jne
mov
xor
arpl
sbb
imul
sahf
dec
cli
pmaxub
and
push
or
sbb
mov
icebp
inc
push
jae
imul
push
bnd
popf
mov
shll
aam
push
push
pusha
lret
pop
pop
cmp
lret
ficompl
xchg
pushf
inc
stos
lods
mov
pop
cmp
fidivrl
stos
mov
push
mov
repnz
ficoml
inc
adc
jmp
jbe
movsl
sbb
scas
push
dec
out
mov
out
or
addr16
sahf
aam
mov
std
int
call
fildll
xchg
xchg
and
adc
mov
test
or
shlb
and
lods
insl
mov
add
scas
cld
mov
xchg
sti
test
hlt
jno
dec
dec
movsl
inc
iret
pop
sbb
loop
lcall
imul
inc
loope
or
add
sbb
jne
stos
repnz
jmp
mov
aam
inc
cmp
psllq
sbb
sbb
aad
dec
js
cs
push
ja
cmp
in
shlb
push
mov
dec
ret
pusha
dec
fmuls
inc
outsb
nop
mov
mov
stos
add
adc
jp
sahf
sub
movsb
cmp
jle
mov
lahf
pushf
xchg
lods
xchg
test
mov
aad
pop
fstpl
xchg
stc
or
xlat
mov
xchg
loopne
push
xchg
test
jp
or
sub
repz
push
inc
inc
fs
movsb
dec
ror
cmp
popf
mov
jnp
pop
sbb
sub
int3
sbb
cmp
push
mov
lock
jb
shlb
ret
jns
mov
jo
out
sub
cmpsl
lret
push
lret
jo
add
cltd
jl
aas
push
xchg
xchg
xor
lret
cltd
jp
cmp
mov
lcall
sbb
dec
mov
mov
sub
es
pop
add
aad
xlat
or
mov
jo
imul
movsl
cmp
sub
popf
mov
mov
or
sub
jecxz
pop
outsb
scas
stc
pop
in
out
popf
inc
cwtl
push
sarb
je
ret
insb
repz
dec
mov
loope
push
fsubl
fstp
inc
popf
mov
int3
fisubrs
adc
cmp
mov
std
arpl
stos
outsb
ja
fisttpl
push
jmp
pop
dec
adc
dec
lea
in
and
mov
ja
push
jecxz
adc
and
push
loopne
dec
cmpsl
int
lock
das
es
ja
inc
pushf
mov
and
iret
xor
imul
pop
popl
pop
loopne
cmp
sarl
shrb
jmp
and
inc
xchg
jo
or
mov
or
movsl
fldt
scas
iret
and
push
notl
inc
scas
or
nop
lgs
inc
cltd
ret
lret
pop
mov
push
jne
mov
jge
xchg
mov
mov
mov
iret
inc
call
cmc
dec
cwtl
push
mov
out
decl
imul
in
and
cmp
repnz
add
aaa
push
cmp
cmp
pop
aam
leave
fimuls
mov
inc
cmpsb
std
out
sbb
push
and
test
imul
or
xlat
push
fsubrs
out
fs
data16
call
lahf
cld
aam
lods
and
gs
add
mov
jns
pop
cmc
sub
scas
out
in
cmp
xor
mov
pop
fdivrs
pop
int3
mov
es
cmpsl
hlt
js
pop
jmp
aad
jnp
push
adc
and
inc
bound
and
xor
push
mov
loop
inc
jl
jge
int3
push
in
pop
scas
pop
adcb
adc
jb
sbb
cmp
mov
push
and
xor
dec
repz
jle
movsb
mov
lods
mov
cwtl
adc
lods
mov
sbb
push
mov
sbb
movsl
push
cmp
add
push
xor
loope
cmp
jge
cltd
cmp
fmuls
shl
push
and
fs
jle
xor
and
outsl
jmp
jns
mov
dec
or
jns
in
sarl
arpl
in
xor
idivl
in
jne
mov
push
push
pop
gs
test
pop
dec
pop
xchg
dec
sub
mov
inc
cmpsl
jb
int
inc
mov
lock
or
push
push
popf
xlat
stc
cli
fnsave
mov
pop
sub
hlt
imul
in
shll
loop
sbb
arpl
in
scas
aad
dec
inc
pop
fisubl
loop
xor
xlat
xor
push
fldt
aam
and
xor
xchg
jmp
add
jae
dec
sub
andb
call
sub
lock
ficompl
dec
jb
mov
dec
loopne
hlt
mov
or
repnz
cmp
xor
jecxz
push
call
loopne
sbb
lods
pusha
in
repnz
cli
sub
shlb
mov
push
mov
mull
std
dec
add
mov
jmp
cmc
inc
jns
cmpsb
popa
in
push
repnz
in
pop
or
pop
stc
push
add
shll
out
testb
aaa
or
push
movsb
jo
pusha
movsb
jne
addl
jb
and
shl
dec
fimuls
push
int3
mov
cmp
pop
xchg
loope
mov
cltd
insl
pop
jle
orl
lods
xor
lock
stc
fistl
jge
lea
int
push
inc
add
add
push
mov
into
sbb
cltd
outsb
xorb
inc
jb
lock
enter
loopne
mov
push
popa
mov
sti
jns
and
xor
rol
stc
sub
pop
bound
fcmovnu
cmp
repz
subb
cmpsl
jl
pop
out
push
mov
in
pop
and
pop
or
adc
je
jo
adc
das
pop
enter
enter
xchg
adc
mov
push
arpl
int
dec
aad
daa
dec
jb
sbb
jge
push
mov
dec
push
es
inc
test
sbb
in
daa
pop
push
cmp
dec
mov
push
cmc
fidivrs
cmp
shlb
xchg
cmpsl
out
mov
in
vprotq
and
gs
loop
add
pop
mov
and
jg
dec
xchg
mov
jnp
pop
aad
aas
cmp
jmp
jns
xor
inc
test
push
int
sti
pusha
pop
xor
loope
aas
push
mov
mov
imul
sbb
and
fsubrs
rol
and
sbb
loope
repz
outsb
ljmp
in
or
cmp
inc
sbb
mov
addb
xchg
xchg
minps
cmp
icebp
pop
mov
ds
inc
outsb
ret
loope
xchg
sub
into
icebp
sub
xchg
dec
mov
add
lock
popf
push
xor
cltd
ret
pop
adc
test
hlt
mov
or
test
add
jle
insl
movsb
xchg
push
jo
jmp
aas
dec
bound
jg
in
cmpb
cmp
mov
stos
or
stos
movsb
loop
cmp
pop
add
loope
inc
fildll
push
andl
pop
fs
xchg
dec
daa
in
sub
cmp
scas
lsl
out
pop
lret
and
pop
iret
call
stc
outsl
add
pop
inc
push
dec
lret
push
push
int3
mov
jecxz
test
rol
repnz
fs
sbb
add
loope
push
int
xor
mov
subl
sbb
jmp
mov
ret
sub
mov
std
sub
jge
xlat
xlat
outsl
cmp
movups
xor
push
cmpsl
add
fbstp
adc
cwtl
dec
data16
mov
adc
push
arpl
cwtl
xchg
aas
inc
stos
and
pop
xor
push
lcall
call
cmp
ret
jp
push
test
xlat
pop
cld
cmp
popa
dec
dec
scas
cvtpi2ps
cld
ljmp
loopne
jae
xchg
lahf
fstl
mov
test
aam
mov
mov
stos
mov
adc
mov
popl
mov
and
mov
xlat
sub
mov
and
stos
shl
inc
jno
stos
push
int3
rcll
jecxz
xchg
push
ror
xor
inc
lret
idivb
mov
imul
call
mov
add
popf
jo
sbb
xchg
push
jl
test
add
or
aam
add
sbb
jb
push
mov
int
stos
mov
dec
enter
ds
nop
jb
mov
lret
push
mov
loope
rolb
js
xchg
movsl
lea
inc
jo
insl
jnp
mov
int3
push
mov
push
or
sbb
adc
adc
or
in
scas
jg
jecxz
das
rcrl
mov
int
and
popf
out
test
icebp
dec
clc
adc
int
and
adc
push
jecxz
mov
pop
imul
fdivrs
xchg
loop
add
je
cmc
lcall
and
test
daa
dec
jle
sub
xchg
test
and
insb
pop
mov
push
xchg
mov
add
sub
jmp
jmp
jecxz
add
dec
in
ja
mov
or
mov
mov
ret
aas
test
jne
adc
jbe
cmp
test
mov
call
and
frstor
inc
xor
sbb
fistl
sarb
mov
xlat
stc
addr16
jle
jg
fsubs
xchg
mov
push
jge
sbb
and
cmpsb
ss
xor
jp
xchg
dec
std
or
ja
push
push
inc
pushl
cmc
lcall
into
sub
xor
and
in
jb
add
push
test
or
pop
cmp
mov
and
xor
mov
push
orl
add
xchg
mov
xchg
inc
in
iret
je
int3
insb
pusha
pop
call
push
pop
pop
lock
or
pop
mov
repnz
movsl
fsqrt
aas
popf
xor
pop
inc
shlb
popf
add
mov
pop
pop
inc
mov
jp
fadds
cmpsl
pop
push
popa
push
mov
scas
inc
addl
aaa
and
inc
rclb
jg
test
scas
rcll
scas
into
ja
fdivs
push
cli
repnz
pushf
int3
push
push
jp
xor
aam
addb
dec
mov
mov
xchg
int3
out
and
lods
into
cwtl
sbb
push
jmp
cmp
dec
dec
lcall
movsl
jg
pop
sbb
push
push
dec
pop
pop
jmp
lock
sarl
xor
in
cli
imul
pop
lret
jns
inc
mov
cmpsb
cwtl
and
dec
inc
cli
in
push
popa
iret
and
push
mov
loope
in
sub
call
lock
mov
jmp
fisttps
xchg
xchg
idiv
ret
xchg
fs
cltd
es
inc
pusha
out
popl
cli
addr16
xor
jae
inc
push
sub
adc
cmp
ss
sbb
mov
mov
push
and
mov
pop
in
xorb
les
xchg
pusha
inc
jns
pop
lcall
lods
aas
push
nop
adc
xor
jo
pop
push
or
leave
dec
out
ss
push
add
test
xor
push
cmp
dec
loope
mov
pop
insb
ljmp
cmpsb
rcl
fdivrp
mov
push
xchg
cmpsb
jg
aaa
sub
pop
pop
inc
rcrl
repnz
and
or
rcrl
or
cmp
test
rcrb
sahf
stc
mov
insb
aaa
xchg
fiaddl
outsb
xchg
out
cmp
xchg
lds
adc
push
mov
lea
negl
stc
mov
sub
add
aas
sbbb
pusha
jbe
in
out
sbb
jg
into
push
dec
pop
adc
repnz
sbb
cmp
push
cli
jno
jbe
push
lret
sbb
pop
pop
adc
sbb
xorb
insb
inc
in
xorb
jae
adc
xchg
pop
inc
rcrb
push
or
pushf
testb
jl
dec
cld
fimuls
test
dec
mov
arpl
add
inc
hlt
add
lcall
or
repz
hlt
jp
iret
sarb
pushf
and
xchg
outsl
mov
cli
je
mov
repz
enter
stos
orb
cli
push
mov
rcl
sub
inc
aam
shll
or
mov
jne
xlat
jp
mov
nop
mov
call
mov
addr16
mov
movsl
icebp
pusha
std
xchg
in
fwait
mov
pop
jmp
mov
push
loope
add
pop
inc
imul
mov
xor
iret
add
xor
mov
mov
xchg
lcall
mov
add
mov
mov
ljmp
mov
mov
pop
jo
adc
pop
test
add
jb
sub
fdivl
sbb
gs
xchg
insb
out
or
sbb
xor
sti
movsl
cmpsl
mov
shll
adc
sbb
arpl
ficoms
mov
xchg
jge
mov
outsl
daa
mov
in
mov
jge
jp
mov
imul
pop
sbb
sub
pop
movsb
scas
jae
je
inc
push
pop
je
or
lods
xchg
push
rcrb
xchg
jne
xchg
inc
sbb
aam
mov
fidivl
das
jae
out
dec
insb
stos
jb
push
bound
sahf
mov
jo
imul
es
mov
pop
cwtl
push
adc
ds
enter
lahf
test
stos
push
aad
xlat
std
xchg
jle
or
cld
aas
dec
cwtl
push
out
pop
cld
stos
in
adc
dec
adc
stos
mov
arpl
imul
pop
mov
xchg
inc
cwtl
fldl
cmpsl
inc
sub
cwtl
inc
fnstenv
and
sarl
mov
adc
cmpsb
sub
adc
aad
inc
xchg
dec
imul
lahf
and
add
mov
cld
stc
cmp
loope
dec
jae
jo
mov
cmp
movsl
repnz
int3
sub
es
clc
or
std
gs
dec
iret
or
pop
ja
leave
mov
pop
enter
pop
cmp
sbb
xchg
pop
xor
inc
xchg
adc
movsb
push
jmp
in
jp
out
cmp
sub
or
push
xlat
dec
pop
or
adcl
rcll
sub
sbb
lods
push
pmaxsw
and
inc
loop
push
mov
jbe
inc
test
jb
xor
daa
jg
cwtl
shlb
movsb
testl
cmp
test
popa
sahf
subb
nop
xchg
mov
push
xchg
pop
aas
fidivrl
push
aad
dec
and
mov
pop
incl
xchg
std
icebp
sub
dec
out
or
push
xchg
adc
and
mov
testl
xchg
std
out
inc
cmp
jnp
data16
mov
sbb
pop
rclb
addl
fdivrp
mov
aam
mov
xchg
sahf
mov
cs
pop
enter
add
inc
jmp
lea
in
cli
cmc
das
pop
sbb
addl
loopne
xor
out
roll
fstpl
pop
je
adc
out
bound
fstpt
imul
fstpt
bound
fimuls
dec
movsl
lea
jl
mov
push
popa
mov
jp
sbb
pop
dec
scas
insl
mov
stos
outsb
cmp
xor
fwait
cmc
xchg
std
sbb
push
fnstcw
les
push
jb
pop
cmc
popf
loope
mov
ret
push
ret
jle
push
mov
mov
pushf
fistpll
stos
and
aaa
cmp
and
lret
test
out
pop
pop
xor
into
test
je
inc
inc
clc
xor
mov
dec
lret
inc
dec
xor
pop
add
in
xchg
mov
imul
cltd
ret
imul
inc
sbb
dec
in
add
fistl
add
jno
lcall
jbe
dec
mov
ret
xor
push
mov
rclb
insb
int
es
shl
xchg
out
loopne
test
inc
or
test
sarb
add
ret
push
pusha
jae
adcl
flds
fsubrp
arpl
dec
movsb
inc
ds
sub
jbe
in
sbb
fimuls
cmp
push
cmp
and
adc
jno
add
add
mov
das
test
js
sbb
mov
jnp
jo
rcll
std
push
dec
fidivl
mov
sub
popf
mov
inc
sub
jecxz
pusha
sub
out
in
mov
cmpsb
mov
mov
xor
sbb
push
and
sbb
jl
adc
repnz
and
jbe
enter
jne
scas
lds
dec
xchg
dec
movsl
mov
ss
loop
pop
outsl
pop
sbb
adcb
push
xor
leave
outsl
mov
call
pop
or
jp
or
test
ds
ja
pop
addr16
fwait
xlat
mov
ja
sbb
sub
xchg
movsl
xchg
or
arpl
jnp
xchg
outsb
xchg
pop
xor
push
fldt
mov
mov
bound
imul
push
bound
dec
pop
rcrl
dec
xchg
cld
arpl
xchg
ret
fs
stos
mov
ja
fldl
jg
push
jge
sarb
push
fbstp
inc
dec
mov
dec
in
scas
int3
test
gs
fbld
loopne
sbb
jge
insl
fiadds
xchg
mov
and
xchg
lcall
jnp
loop
dec
mov
insb
push
outsb
add
lods
lahf
dec
daa
push
and
and
repz
push
mov
or
mov
jmp
sub
mov
push
jo
pop
lds
fs
mov
movsl
daa
addl
jae
ret
into
mov
xor
leave
push
adc
int3
adc
mov
out
fsts
insb
or
or
cmpsb
fsubr
pusha
pop
mov
mov
jb
jae
rcll
push
nop
inc
mov
lods
sbb
adc
jne
push
add
stos
fiaddl
into
xchg
mov
add
push
in
sub
lock
inc
sub
mov
insb
inc
je
test
push
lahf
xor
stc
pop
aam
inc
sti
cmp
das
imul
jmp
xor
add
fwait
add
push
pop
dec
fadds
ret
jne
imul
movsl
test
mov
add
mov
or
mov
and
push
jns
inc
jbe
test
int3
fidivs
mov
and
in
xchg
fldt
lods
pusha
xor
xchg
js
nop
setge
xor
jge
loopne
test
xor
cld
jns
or
xchg
mov
add
nop
mov
in
aad
xchg
sbb
or
je
out
inc
mov
or
pusha
or
ficompl
add
fists
rclb
push
mov
push
mov
mov
loopne
jno
mov
pop
jo
stc
stc
mov
mov
inc
repnz
or
jp
sbb
adc
sub
ret
adc
and
iret
outsl
xlat
xor
ss
fcoms
inc
jmp
sub
dec
sbb
push
mov
movsl
mov
cmp
push
and
dec
inc
test
in
xor
inc
movsb
daa
imul
push
xor
arpl
jae
mov
xchg
xor
in
dec
movsb
xchg
push
repz
sarl
pushf
mov
outsl
mov
mov
jle
cmp
test
fisttpll
add
or
repz
jno
cld
xchg
mov
mov
out
or
fs
sub
arpl
scas
sub
mov
push
xlat
or
and
jp
pop
je
cli
aas
repnz
jg
xchg
jb
sub
mov
add
pop
dec
push
imul
xchg
je
loope
das
pop
jo
js
out
fildll
sub
fmul
int
imul
mov
and
daa
xacquire
lods
scas
insl
mov
out
insb
add
xor
mov
jecxz
lahf
pop
xor
loopne
mov
cmp
ljmp
mov
idivb
cmp
adc
cmp
aas
cmpsb
mov
pop
cmp
jae
sub
cli
clc
clc
rorl
pop
jecxz
iret
sub
xchg
sub
pop
xchg
add
jp
mov
add
ja
xor
pop
dec
mov
popa
movl
lcall
sub
test
test
add
lret
int
mov
mov
mov
aam
das
insl
dec
push
addr16
test
ret
xchg
repnz
gs
ret
incb
mov
inc
addl
pop
addb
mov
xchg
push
inc
bnd
dec
sbb
in
pop
aam
or
out
rep
dec
test
aaa
jl
in
outsb
rolb
jae
hlt
lcall
int3
xchg
sub
shlb
push
mov
scas
repnz
pop
sub
sbb
int
mov
ret
gs
std
xchg
gs
out
mov
insb
xchg
jns
shrl
sahf
aad
xchg
xchg
stc
or
outsb
ror
cs
mov
test
ret
iret
mov
ret
push
inc
lahf
lret
adc
pop
aam
lcall
cmp
mov
mov
mov
sbb
push
push
xor
mov
jg
shl
push
push
call
push
mov
sbb
mov
ja
pop
push
xchg
pop
aaa
cmpsl
jp
rolb
addr16
shlb
sbb
lret
pop
fdivr
icebp
call
popa
cwtl
mov
inc
insl
test
xchg
inc
pop
mov
add
popf
mov
enter
scas
add
dec
ret
jb
sub
cld
sbb
addr16
je
or
movsl
loopne
mov
stc
xor
push
pop
mov
push
xor
dec
add
loop
mov
cmovo
cmpsb
and
sahf
ds
pop
in
jne
dec
std
inc
fimuls
push
ficoms
mov
fildll
xor
into
aaa
clc
pop
cmp
cwtl
in
mov
lds
sbb
ficoml
fstp
dec
sub
aam
mov
imul
mov
loopne
addb
ss
fbstp
jge
cltd
icebp
sub
fxam
pop
mov
insb
jnp
adc
sbb
add
lea
and
stc
sub
js
lret
cli
inc
mov
mov
lods
sti
jae
mov
mov
mov
sbb
mov
mov
test
dec
test
jne
scas
fs
jmp
repz
xor
add
jnp
filds
stos
add
lds
xchg
test
leave
cmp
std
bound
or
popa
jbe
outsl
sbb
mov
insb
imul
cli
and
mov
ficoms
xor
pop
mov
icebp
imul
imul
dec
fwait
sti
mov
fmull
rcrl
xchg
repz
lock
adc
adc
jb
sub
sarb
fwait
and
lcall
pop
sbb
or
sbb
test
sub
fldenv
or
fmulp
mov
add
loop
fsub
pop
mov
out
jo
mov
add
adc
pop
cwtl
lea
cmp
pop
into
xor
xor
dec
sbb
lds
xchg
shl
mov
cmp
rol
sub
dec
add
add
add
add
add
in
pushf
and
sar
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
