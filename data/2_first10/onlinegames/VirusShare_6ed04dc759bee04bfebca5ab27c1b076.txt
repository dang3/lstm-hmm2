mov
mov
mov
mov
push
mov
pop
push
push
mov
pop
ret
nop
add
pusha
push
push
mov
mov
mov
mov
pop
pop
cld
pusha
mov
test
je
xor
mov
inc
jmp
popa
xor
mov
movsb
mov
call
mov
jae
xor
call
jae
xor
call
mov
jae
mov
inc
mov
call
adc
jae
jne
stos
jmp
call
sub
jne
call
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
lods
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
mov
call
adc
call
jb
ret
sub
mov
popa
ret
inc
or
xchg
jo
xchg
inc
inc
inc
add
xor
cmpl
pop
sbb
jne
int3
pop
lock
call
add
hlt
jae
push
jmp
mov
mov
mov
add
push
stos
mov
int3
dec
adc
mov
sarl
sbb
leave
cmp
je
sbb
mov
shl
or
inc
inc
xchg
cmp
pop
xor
and
sub
jge
sbb
jbe
push
add
xor
ret
sahf
or
add
movl
jae
mov
push
mov
sbb
loope
int
xchg
test
shr
imul
fdivrs
pop
addl
xorb
shr
add
pushl
xchg
add
lea
sub
or
test
fmuls
jl
add
lock
xor
cmp
rcrl
and
xor
jo
xchg
fdivs
mov
sbb
pop
adc
shl
pushf
ficoms
decl
xor
mov
ljmp
add
push
mov
sub
shl
test
decl
sbb
rolb
mov
lea
dec
or
cmp
xor
sub
jae
insb
cli
add
or
nop
les
mov
jp
sub
xchg
pop
xchg
aaa
xchg
jmp
adcb
xor
xchg
mov
pop
sahf
hlt
mov
xor
inc
and
add
adc
or
gs
and
filds
rolb
fwait
adc
sub
push
enter
dec
or
jp
push
shrl
add
sbb
and
add
inc
cmp
inc
fmull
call
and
rcl
jecxz
setge
dec
and
stc
stc
add
enter
jmp
filds
mov
inc
mov
xor
test
xlat
inc
xchg
enter
xorl
shll
sub
andl
jmp
clc
or
jns
enter
and
inc
icebp
add
pop
dec
insb
mov
adc
pop
sbb
inc
mov
add
mov
mov
test
xorb
sbb
and
inc
or
mov
mov
lock
pop
sub
push
mov
mov
xchg
mov
adc
inc
add
mov
adc
jmp
cltd
in
xor
nop
ss
test
adc
jmp
cmpsl
push
pop
ret
shll
pushl
shrb
and
mov
adc
push
and
dec
sbb
inc
dec
mov
push
inc
or
hlt
jb
adc
or
into
or
mov
sbb
lea
or
inc
xor
xchg
adc
or
aam
dec
add
les
mov
mov
sbb
shrl
inc
adc
mov
sti
loop
sarb
push
push
aam
pop
movsl
cmc
inc
push
add
cmp
test
xor
cli
shr
mov
cmp
adc
xlat
mov
fwait
aam
or
cwtl
shl
jmp
sub
xor
adc
xor
mov
bound
adc
pop
mov
pop
cmp
out
mov
pop
loopne
lea
pop
inc
sti
add
inc
jmp
pop
lcall
bound
and
cmc
shr
popf
movsb
sub
lods
lret
xor
xor
inc
adc
out
test
adc
lea
test
cmp
inc
cmp
jl
inc
lods
shll
dec
or
add
lcall
rcrb
mov
push
sbbb
push
dec
ds
add
and
dec
addr16
pop
rorl
cmp
jb
sub
or
push
psllq
add
out
enter
stos
pop
test
xchg
movsb
xor
mov
adc
jmp
popa
shlb
sub
inc
insl
sub
xchg
sub
lea
jge
mov
gs
adc
lea
jmp
cli
pop
inc
mov
je
inc
push
mov
mov
jae
mov
dec
divl
push
enter
xorl
sbb
loope
or
subb
jecxz
mov
adcb
pushf
jne
mov
push
loope
or
mov
pop
pop
leave
ret
addb
inc
add
call
adc
add
pop
add
arpl
add
add
add
add
add
add
add
jne
add
add
sbb
add
add
push
add
add
add
add
add
cmpb
add
add
add
add
add
add
push
add
add
cmp
add
add
add
add
jle
add
nop
lods
add
add
add
les
mov
jmp
pusha
push
mov
sub
xor
movl
movl
movl
movl
mov
mov
pusha
mov
mov
mov
mov
mov
mov
mov
add
add
mov
lea
mov
mov
mov
add
dec
nop
test
nop
je
lea
mov
add
push
push
mov
add
mov
pop
repz
test
pop
jne
mov
add
mov
movzwl
mov
add
mov
add
mov
jmp
movl
popa
mov
xor
cmp
je
mov
cmp
je
lea
push
push
movb
movb
movb
movw
nop
nop
movw
nop
nop
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
nop
nop
mov
nop
nop
call
nop
add
inc
add
add
pop
mov
sub
push
push
mov
push
push
push
call
pop
mov
push
push
push
push
inc
mov
push
push
push
mov
add
mov
mov
add
mov
pop
mov
mov
add
push
mov
add
call
push
push
mov
push
push
call
pop
push
push
push
pushl
push
push
push
mov
push
push
call
pop
push
push
push
pushl
pushl
mov
push
push
pushl
push
pushl
mov
add
push
push
push
mov
call
pop
mov
add
mov
mov
push
mov
push
mov
push
mov
push
xor
mov
rep
mov
lods
mov
lods
mov
add
lods
mov
rep
dec
jne
pop
pop
pop
mov
test
je
mov
inc
sub
cmp
ja
mov
cmp
jne
xor
bswap
add
sub
stos
loop
push
lods
test
je
mov
add
push
call
mov
lods
test
jne
lods
test
je
sub
lods
test
jne
sub
push
push
call
stos
jmp
and
push
push
call
stos
jmp
pop
pop
ret
add
fimuls
mov
ret
push
jmp
inc
sahf
push
dec
pop
mov
arpl
out
std
stos
or
insl
lods
push
scas
dec
mov
stos
dec
sbb
mov
mov
jmp
dec
push
call
es
xor
jmp
and
clc
test
pop
or
dec
mov
and
pop
xchg
fcomp
mov
stc
cmp
mov
shlb
movsl
jp
mov
rcll
jbe
xlat
aaa
lods
cmpl
sbb
test
imul
push
test
sub
cld
sti
jmp
shll
enter
jmp
in
in
test
and
cmpsl
loop
or
xchg
push
pop
nop
xchg
pop
jl
aaa
cmp
sbb
daa
imul
cltd
jns
mov
push
fsubs
add
inc
rol
out
sub
mov
cmp
mov
icebp
mov
push
sti
daa
or
jecxz
xor
pushf
push
shrb
dec
and
mov
cltd
or
xor
xor
add
and
je
mov
out
test
cmpsl
arpl
and
movl
popf
inc
cmpsl
jo
outsl
mov
fbld
push
adc
idiv
cld
inc
mov
cli
pushl
pop
push
movb
icebp
clc
xor
pusha
xchg
push
mov
adc
jns
orb
pop
dec
lea
pop
add
cmp
int
mov
bound
subl
out
imul
pop
dec
insb
xor
fistps
iret
add
adc
or
lods
cmp
insl
cmp
jbe
dec
jbe
adc
mov
les
fbstp
icebp
xor
mov
lock
insl
data16
cli
cmpsb
pop
dec
mov
mov
and
sqrtps
or
lock
pop
adc
xor
or
pusha
sti
jnp
arpl
pushf
mov
cmpsb
inc
mov
ljmp
aad
std
fcoml
mov
cmp
lcall
mov
sub
test
add
adc
pop
out
or
fisubs
jnp
popa
sub
mov
ljmp
dec
adc
arpl
js
popa
and
enter
pop
shrb
addr16
dec
pusha
lods
mov
arpl
cmp
sub
les
adc
nop
cmp
ljmp
mov
aas
dec
fldenv
sub
cmc
adc
shlb
add
out
mov
fcmovnbe
call
test
mov
hlt
in
aas
jmp
testb
dec
sub
fistps
and
inc
mov
mov
sbb
pop
gs
fldl
shrb
push
frstor
loop
sti
addr16
loop
cmp
add
xlat
jecxz
sahf
inc
insb
push
xchg
push
cmp
dec
pop
jmp
xchg
add
sbb
lock
repz
mov
faddl
pop
sub
test
and
jecxz
ja
dec
sti
xchg
sub
add
int3
mov
insb
pop
mov
inc
push
push
movsl
popa
pop
dec
sub
add
add
sbb
add
add
push
add
add
add
add
add
cmpb
add
add
add
add
add
add
push
add
add
cmp
add
add
add
add
jle
add
nop
lods
add
add
add
les
mov
jmp
pusha
push
mov
sub
xor
movl
movl
movl
movl
mov
mov
pusha
mov
mov
mov
mov
mov
mov
mov
add
add
mov
lea
mov
mov
mov
add
dec
nop
test
nop
je
lea
mov
add
push
push
mov
add
mov
pop
repz
test
pop
jne
mov
add
mov
movzwl
mov
add
mov
add
mov
jmp
movl
popa
mov
xor
cmp
je
mov
cmp
je
lea
push
push
movb
movb
movb
movw
nop
nop
movw
nop
nop
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
nop
nop
mov
nop
nop
call
nop
add
inc
add
add
pop
mov
sub
push
push
mov
push
push
push
call
pop
mov
push
push
push
push
inc
mov
push
push
push
mov
add
mov
mov
add
mov
pop
mov
mov
add
push
mov
add
call
push
push
mov
push
push
call
pop
push
push
push
pushl
push
push
push
mov
push
push
call
pop
push
push
push
pushl
pushl
mov
push
push
pushl
push
pushl
mov
add
push
push
push
mov
call
pop
mov
add
mov
mov
push
mov
push
mov
push
mov
push
xor
mov
rep
mov
lods
mov
lods
mov
add
lods
mov
rep
dec
jne
pop
pop
pop
mov
test
je
mov
inc
sub
cmp
ja
mov
cmp
jne
xor
bswap
add
sub
stos
loop
push
lods
test
je
mov
add
push
call
mov
lods
test
jne
lods
test
je
sub
lods
test
jne
sub
push
push
call
stos
jmp
and
push
push
call
stos
jmp
pop
pop
ret
add
fimuls
mov
ret
push
jmp
inc
sahf
push
dec
pop
mov
arpl
out
std
stos
or
insl
lods
push
scas
dec
mov
stos
dec
sbb
mov
mov
jmp
dec
push
call
es
xor
jmp
and
clc
test
pop
or
dec
mov
and
pop
xchg
fcomp
mov
stc
cmp
mov
shlb
movsl
jp
mov
rcll
jbe
xlat
aaa
lods
cmpl
sbb
test
imul
push
test
sub
cld
sti
jmp
shll
enter
jmp
in
in
test
and
cmpsl
loop
or
xchg
push
pop
nop
xchg
pop
jl
aaa
cmp
sbb
daa
imul
cltd
jns
mov
push
fsubs
add
inc
rol
out
sub
mov
cmp
mov
icebp
mov
push
sti
daa
or
jecxz
xor
pushf
push
shrb
dec
and
mov
cltd
or
xor
xor
add
and
je
mov
out
test
cmpsl
arpl
and
movl
popf
inc
cmpsl
jo
outsl
mov
fbld
push
adc
idiv
cld
inc
mov
cli
pushl
pop
push
movb
icebp
clc
xor
pusha
xchg
push
mov
adc
jns
orb
pop
dec
lea
pop
add
cmp
int
mov
bound
subl
out
imul
pop
dec
insb
xor
fistps
iret
add
adc
or
lods
cmp
insl
cmp
jbe
dec
jbe
adc
mov
les
fbstp
icebp
xor
mov
lock
insl
data16
cli
cmpsb
pop
dec
mov
mov
and
sqrtps
or
lock
pop
adc
xor
or
pusha
sti
jnp
arpl
pushf
mov
cmpsb
inc
mov
ljmp
aad
std
fcoml
mov
cmp
lcall
mov
sub
test
add
adc
pop
out
or
fisubs
jnp
popa
sub
mov
ljmp
dec
adc
arpl
js
popa
and
enter
pop
shrb
addr16
dec
pusha
lods
mov
arpl
cmp
sub
les
adc
nop
cmp
ljmp
mov
aas
dec
fldenv
sub
cmc
adc
shlb
add
out
mov
fcmovnbe
call
test
mov
hlt
in
aas
jmp
testb
dec
sub
fistps
and
inc
mov
mov
sbb
pop
gs
fldl
shrb
push
frstor
loop
sti
addr16
loop
cmp
add
xlat
jecxz
sahf
inc
insb
push
xchg
push
cmp
dec
pop
jmp
xchg
add
sbb
lock
repz
mov
faddl
pop
sub
test
and
jecxz
ja
dec
sti
xchg
sub
add
int3
mov
insb
pop
mov
inc
push
push
movsl
popa
pop
dec
sub
es
fdivs
mov
or
mov
mov
jl
mov
fsubr
mov
cmp
lcall
push
add
subb
fnstcw
stos
inc
popa
dec
add
ja
into
lret
mov
repnz
loopne
inc
dec
adc
or
push
jns
nop
add
sti
add
int
pop
jb
cmc
outsl
inc
jae
xchg
jmp
hlt
cmovne
aas
adc
mov
cmp
lret
test
xor
adc
xlat
sahf
xchg
lret
aas
xchg
pop
add
jg
push
and
ljmp
jl
dec
jle
dec
jno
fisttpll
sbb
cltd
js
js
bound
mov
push
push
xor
sti
cmc
push
sub
cmp
nop
hlt
cmp
bound
push
mov
inc
xor
inc
das
loope
dec
out
insl
mov
into
int
mov
xor
cs
add
mov
push
dec
imul
mov
jno
int
fcomip
sbb
outsb
leave
cltd
mov
mov
add
divb
ret
out
ja
in
in
jle
enter
mov
cmpsl
xor
mov
and
mov
pop
mov
mov
ds
xor
cmp
leave
push
loopne
jb
cmp
imul
add
sbb
insl
jecxz
xlat
adcl
xor
push
mov
in
dec
add
repnz
in
inc
pop
rcrb
cmp
push
pushf
cmpl
adc
cmp
mov
push
inc
push
mov
movsl
outsl
rcl
jne
call
.byte
add
add
sbb
add
add
push
add
add
add
add
add
cmpb
add
add
add
add
add
add
push
add
add
cmp
add
add
add
add
jle
add
nop
lods
add
add
add
les
mov
jmp
pusha
push
mov
sub
xor
movl
movl
movl
movl
mov
mov
pusha
mov
mov
mov
mov
mov
mov
mov
add
add
mov
lea
mov
mov
mov
add
dec
nop
test
nop
je
lea
mov
add
push
push
mov
add
mov
pop
repz
test
pop
jne
mov
add
mov
movzwl
mov
add
mov
add
mov
jmp
movl
popa
mov
xor
cmp
je
mov
cmp
je
lea
push
push
movb
movb
movb
movw
nop
nop
movw
nop
nop
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
nop
nop
mov
nop
nop
call
nop
add
inc
add
add
pop
mov
sub
push
push
mov
push
push
push
call
pop
mov
push
push
push
push
inc
mov
push
push
push
mov
add
mov
mov
add
mov
pop
mov
mov
add
push
mov
add
call
push
push
mov
push
push
call
pop
push
push
push
pushl
push
push
push
mov
push
push
call
pop
push
push
push
pushl
pushl
mov
push
push
pushl
push
pushl
mov
add
push
push
push
mov
call
pop
mov
add
mov
mov
push
mov
push
mov
push
mov
push
xor
mov
rep
mov
lods
mov
lods
mov
add
lods
mov
rep
dec
jne
pop
pop
pop
mov
test
je
mov
inc
sub
cmp
ja
mov
cmp
jne
xor
bswap
add
sub
stos
loop
push
lods
test
je
mov
add
push
call
mov
lods
test
jne
lods
test
je
sub
lods
test
jne
sub
push
push
call
stos
jmp
and
push
push
call
stos
jmp
pop
pop
ret
add
fimuls
mov
ret
push
jmp
inc
sahf
push
dec
pop
mov
arpl
out
std
stos
or
insl
lods
push
scas
dec
mov
stos
dec
sbb
mov
mov
jmp
dec
push
call
es
xor
jmp
and
clc
test
pop
or
dec
mov
and
pop
xchg
fcomp
mov
stc
cmp
mov
shlb
movsl
jp
mov
rcll
jbe
xlat
aaa
lods
cmpl
sbb
test
imul
push
test
sub
cld
sti
jmp
shll
enter
jmp
in
in
test
and
cmpsl
loop
or
xchg
push
pop
nop
xchg
pop
jl
aaa
cmp
sbb
daa
imul
cltd
jns
mov
push
fsubs
add
inc
rol
out
sub
mov
cmp
mov
icebp
mov
push
sti
daa
or
jecxz
xor
pushf
push
shrb
dec
and
mov
cltd
or
xor
xor
add
and
je
mov
out
test
cmpsl
arpl
and
movl
popf
inc
cmpsl
jo
outsl
mov
fbld
push
adc
idiv
cld
inc
mov
cli
pushl
pop
push
movb
icebp
clc
xor
pusha
xchg
push
mov
adc
jns
orb
pop
dec
lea
pop
add
cmp
int
mov
bound
subl
out
imul
pop
dec
insb
xor
fistps
iret
add
adc
or
lods
cmp
insl
cmp
jbe
dec
jbe
adc
mov
les
fbstp
icebp
xor
mov
lock
insl
data16
cli
cmpsb
pop
dec
mov
mov
and
sqrtps
or
lock
pop
adc
xor
or
pusha
sti
jnp
arpl
pushf
mov
cmpsb
inc
mov
ljmp
aad
std
fcoml
mov
cmp
lcall
mov
sub
test
add
adc
pop
out
or
fisubs
jnp
popa
sub
mov
ljmp
dec
adc
arpl
js
popa
and
enter
pop
shrb
addr16
dec
pusha
lods
mov
arpl
cmp
sub
les
adc
nop
cmp
ljmp
mov
aas
dec
fldenv
sub
cmc
adc
shlb
add
out
mov
fcmovnbe
call
test
mov
hlt
in
aas
jmp
testb
dec
sub
fistps
and
inc
mov
mov
sbb
pop
gs
fldl
shrb
push
frstor
loop
sti
addr16
loop
cmp
add
xlat
jecxz
sahf
inc
insb
push
xchg
push
cmp
dec
pop
jmp
xchg
add
sbb
lock
repz
mov
faddl
pop
sub
test
and
jecxz
ja
dec
sti
xchg
sub
add
int3
mov
insb
pop
mov
inc
push
push
movsl
popa
pop
dec
sub
es
fdivs
mov
or
mov
mov
jl
mov
fsubr
mov
cmp
lcall
push
add
subb
fnstcw
stos
inc
popa
dec
add
ja
into
lret
mov
repnz
loopne
inc
dec
adc
or
push
jns
nop
add
sti
add
int
pop
jb
cmc
outsl
inc
jae
xchg
jmp
hlt
cmovne
aas
adc
mov
cmp
lret
test
xor
adc
xlat
sahf
xchg
lret
aas
xchg
pop
add
jg
push
and
ljmp
jl
dec
jle
dec
jno
fisttpll
sbb
cltd
js
js
bound
mov
push
push
xor
sti
cmc
push
sub
cmp
nop
hlt
cmp
bound
push
mov
inc
xor
inc
das
loope
dec
out
insl
mov
into
int
mov
xor
cs
add
mov
push
dec
imul
mov
jno
int
fcomip
sbb
outsb
leave
cltd
mov
mov
add
divb
ret
out
ja
in
in
jle
enter
mov
cmpsl
xor
mov
and
mov
pop
mov
mov
ds
xor
cmp
leave
push
loopne
jb
cmp
imul
add
sbb
insl
jecxz
xlat
adcl
xor
push
mov
in
dec
add
repnz
in
inc
pop
rcrb
cmp
push
pushf
cmpl
adc
cmp
mov
push
inc
push
mov
movsl
outsl
rcl
jne
call
xchg
pop
cmp
jnp
xlat
mov
bound
cltd
adc
stos
xchg
mov
js
out
and
push
jl
mov
arpl
insb
arpl
push
pop
push
adc
inc
push
sbb
pop
rorb
sarb
insb
or
pop
mov
shll
and
pop
push
js
jnp
xlat
cld
enter
imul
mov
scas
in
mov
movl
adcb
ss
fcmovu
push
xchg
mov
adcb
cwtl
or
rcrl
dec
imul
cwtl
cltd
inc
movsb
jp
push
mov
add
les
jne
flds
dec
jecxz
out
add
cmpsl
jl
shll
and
rorb
iret
fwait
les
add
sbb
adc
mov
inc
or
xor
out
sbb
xchg
mov
xchg
inc
jle
mov
dec
sub
repz
cmp
imul
insl
pop
push
test
sbb
and
js
rcll
add
pop
sub
dec
adc
popa
das
jne
push
and
add
jae
jecxz
je
pop
and
and
lods
out
adc
adc
inc
pop
rclb
imul
cli
lahf
call
jb
clc
adc
es
popf
mov
mov
pop
add
into
add
arpl
out
cli
push
or
mov
inc
data16
mov
inc
mov
inc
bnd
cmp
das
cli
ret
pmaddwd
push
popa
mov
jg
stc
nop
ret
into
pop
pusha
and
loop
and
je
mov
adc
int
adc
sub
sbb
sti
jb
insb
push
fisubl
mov
xchg
xchg
inc
dec
dec
lret
mov
mov
iret
int
movsb
mov
lock
xchg
or
sub
hlt
adc
ss
add
lea
and
inc
out
push
in
popa
jl
cld
mov
mov
sti
iret
std
in
test
push
punpckldq
orl
push
test
lahf
popf
xchg
clc
lret
adcl
mov
sbb
pop
fs
hlt
sbb
insl
or
daa
jne
jo
or
jno
fdivr
movl
dec
lods
into
movsl
fidivl
adc
test
test
in
or
call
jae
mov
or
popa
jo
movl
loop
or
jne
mov
pop
outsl
mov
jl
xorl
fidivs
imul
inc
icebp
fcoml
mov
fcomps
pop
mov
push
sub
mov
ss
dec
popa
pushf
adc
jecxz
xchg
add
jns
xor
sub
outsb
mov
or
or
fistps
mov
test
sahf
push
dec
mov
mov
popf
out
mov
sbb
insb
adc
dec
xor
xor
push
add
or
add
xor
pop
pop
ret
inc
ret
add
shll
in
xor
push
fstpt
imul
int3
lods
add
outsl
jecxz
repz
ud0
fs
xor
cli
pop
test
pop
fwait
xor
mov
jne
nop
jo
xchg
add
lret
mov
and
les
test
dec
mov
xchg
sbb
dec
xchg
clc
xchg
lret
lea
shr
mov
out
add
mov
inc
adc
test
mov
pop
lcall
addb
call
aad
sbb
inc
add
and
push
sbb
mov
mov
loopne
ss
jb
dec
mov
js
jl
imul
rolb
imul
lret
mov
fistpl
add
sub
jnp
xor
cli
or
jae
iret
pop
out
repnz
mov
push
jecxz
arpl
lcall
shll
or
push
lock
insl
jno
and
ret
pop
fdiv
xchg
xor
popa
jno
xchg
out
adc
ja
mov
mov
lcall
xchg
dec
mov
and
push
out
push
lcall
adc
mov
mov
push
testb
sti
das
sbb
or
adc
aas
sbb
adc
jnp
adc
test
push
sbb
jl
aad
cmp
push
inc
jns
imul
jmp
enter
adc
sbb
loopne
xor
neg
lcall
sbb
add
mov
xor
addb
xchg
sub
cs
mov
xchg
fs
or
xchg
lds
and
sub
mov
mov
movsl
sbb
ficoml
push
insb
lret
lods
and
and
push
imul
imul
sub
pop
adc
std
fwait
xor
dec
movsl
push
stos
mov
outsb
lods
mov
dec
aad
in
jne
sbb
scas
cmc
adc
pop
lret
test
mov
sarl
repz
and
mov
lret
adc
repnz
mov
repnz
fistpll
out
mov
and
pop
mov
fcoml
jae
ror
sbbl
testb
arpl
sbb
mov
lds
lret
jno
je
pusha
fcomps
in
xchg
cli
or
push
pop
and
lcall
mov
xor
lods
xor
add
ret
add
mov
sbb
jo
cltd
xchg
rorb
shl
adc
mov
into
sbb
sbb
jge
sub
push
cli
lods
sahf
les
pop
inc
mov
jmp
out
dec
pop
and
inc
iret
push
jno
mov
xor
dec
aam
mov
les
loope
mov
lret
mov
mov
fistpl
stos
icebp
push
fmuls
fdivs
adcl
lea
cmp
fisubs
leave
sbb
cwtl
sub
push
daa
daa
icebp
loope
lret
rorl
cmp
dec
enter
jmp
sub
pop
mov
sbb
cld
insb
imul
ss
dec
mov
lea
pop
pop
sub
into
test
inc
adc
mov
mov
pusha
ds
aam
aam
test
jmp
sbb
jg
or
xor
jne
aaa
cmpsb
sub
adc
sti
adc
xchg
add
push
fwait
movsb
pop
push
popa
inc
dec
popa
daa
pop
andl
xor
not
pusha
sbb
cwtl
jp
sti
arpl
scas
sub
frstor
cmpsl
test
dec
fistpl
push
aam
inc
pop
and
push
mov
adc
aam
cli
unpcklps
push
inc
xlat
nop
stc
inc
push
xor
mov
cmp
mov
xchg
cs
mov
add
aaa
enter
push
daa
rcrb
pop
cmc
sub
movsl
push
insl
or
push
mov
push
mov
jge
cmp
jecxz
pusha
cmpsb
sub
mov
dec
subb
xlat
add
sbb
fwait
nop
jge
testb
gs
repz
xor
mov
xchg
sbb
scas
lret
out
mov
push
std
sahf
stc
xchg
insl
orl
cmpsb
insl
das
mov
sti
xor
or
jmp
sub
inc
lahf
je
dec
mov
fisttpl
bsr
inc
mov
dec
sbb
in
pop
and
rorl
cmp
or
fdivrs
imul
xchg
rolb
push
insb
adc
dec
or
sub
ss
sbb
push
jmp
and
in
jnp
mov
and
mov
mov
movl
dec
add
das
inc
dec
iret
cmp
push
insb
xor
sbb
pop
add
in
lock
jmp
repnz
daa
or
lcall
mov
insb
add
xchg
add
aam
test
movl
push
sub
js
cmp
xor
insb
xlat
cmp
lahf
js
or
vmwrite
lcall
into
aam
in
push
sbb
pop
inc
jbe
cmpsb
xchg
les
add
push
mov
stos
mov
dec
in
adc
outsb
pusha
push
lret
sub
fsubl
mov
cmpsl
jle
loopne
data16
mov
push
sub
pop
outsl
mov
lahf
pop
mov
mov
xchg
sub
cmpsl
dec
aaa
enter
pop
pop
in
pop
mov
ja
lods
cwtl
out
in
push
cmpsb
sub
into
mov
mov
das
cmp
adc
pop
fs
sahf
scas
jle
add
push
push
ljmp
add
lret
or
xor
inc
pop
mov
mov
mov
add
cs
cmp
push
add
test
mov
mov
cmpsl
adc
ljmp
call
repz
pop
pop
in
and
push
shl
jp
idiv
pop
dec
aad
pop
movq
outsb
testl
or
stc
ljmp
test
mov
popa
icebp
std
mov
inc
jg
sbb
mov
adc
daa
ljmp
sub
leave
mov
lret
aad
pop
mov
insb
stos
mov
cmp
addr16
in
pop
int3
push
pusha
mov
dec
into
sti
jle
jno
inc
add
mov
les
sub
pop
jl
iret
in
int
jg
roll
repz
clc
dec
push
popa
stos
xchg
add
pop
data16
mov
or
fidivrs
addr16
mov
lret
inc
adc
mov
dec
fcompl
inc
leave
test
cmc
stos
jae
xchg
mov
sti
add
sub
in
jmp
xchg
nop
jge
adc
adc
cltd
fs
repz
pusha
jg
incb
mov
mov
xor
outsb
and
leave
sub
lds
xor
arpl
int3
dec
js
pop
shrd
xchg
scas
movsb
add
or
sbb
jmp
adc
mov
or
out
mov
data16
popa
les
adc
clc
sbb
add
ret
xorl
and
mov
xchg
add
jp
stos
mov
inc
push
inc
sbb
adc
icebp
pusha
dec
mov
fcoms
lahf
mov
xor
and
mov
inc
icebp
in
out
sub
or
ljmp
mov
fmuls
push
push
or
sub
sahf
loope
int
push
fldcw
sub
adc
adc
or
movsb
pop
dec
fmuls
andl
mov
push
das
adc
outsb
lcall
es
xor
adc
xlat
push
dec
sub
inc
push
pusha
pop
and
rolb
jb
cmpsb
ljmp
inc
inc
xor
orl
je
ja
inc
xor
cmp
fbstp
cmc
pop
mov
jle
std
inc
out
dec
cld
mov
leave
mov
push
mov
pop
aaa
inc
pop
jp
xor
add
dec
mov
testb
testb
pop
lahf
ret
xchg
sbbb
in
dec
mov
loopne
jnp
repz
push
mov
adc
lock
imul
and
out
pop
fisttpl
lock
push
adc
out
sbb
bound
ret
push
lods
push
and
mov
js
mov
scas
jbe
sbb
and
pop
roll
mov
cmp
ljmp
push
fldt
dec
dec
insl
sub
push
sub
xchg
and
test
lret
sbb
cmp
daa
addr16
loopne
repz
push
or
sub
add
cs
push
xchg
ror
cmpsb
lret
xor
xor
les
xchg
push
addr16
dec
cltd
je
ljmp
add
das
adc
stc
addr16
insb
ficoml
aas
aam
add
mov
movsb
push
jo
sbb
fdecstp
loop
push
inc
xor
xor
mov
jmp
cmp
mov
xchg
daa
cmpsb
pop
xchg
icebp
hlt
inc
push
and
fwait
pusha
mov
push
bound
push
sbb
fnstcw
sbb
cli
rorb
and
enterw
outsl
cs
push
mov
mov
subb
pop
inc
ds
cmp
adc
leave
push
mov
or
loopne
pop
ds
mov
add
shlb
or
and
jno
dec
pop
xchg
dec
pushf
sub
jbe
loopne
mov
and
xor
fldenv
cmp
enter
testb
arpl
mov
int3
loop
je
sub
add
popf
test
cmpsb
rorb
dec
addr16
out
and
bound
xor
test
or
xchg
fisttps
ss
push
out
faddp
mov
clc
cli
ret
aad
push
adc
fcoms
add
pop
cmp
jecxz
loopne
mov
in
arpl
push
xor
sarl
pop
pop
sub
cwtl
stos
in
lods
test
lcall
lock
adc
sarb
cld
into
push
lret
imul
lods
lods
pop
arpl
sar
mov
jb
mov
leave
adc
movl
aad
push
dec
add
mov
mov
scas
fisubrs
and
int3
dec
pop
mov
sub
dec
addr16
dec
push
inc
popa
pop
jge
cmp
in
cli
dec
js
cmp
bound
movsb
test
cmpsb
out
mov
repnz
cmpsl
mov
das
sub
insl
lock
arpl
xor
push
in
iret
cmp
xchg
jae
pop
xchg
icebp
sub
data16
fadd
ret
insb
stos
mov
in
push
or
dec
mov
vcvttpd2dqy
mov
in
loop
lock
ret
es
sbb
xor
push
cmpsb
mov
fisubl
mov
sbb
sbb
imul
jo
gs
movsb
cmpsl
int3
repnz
sti
enter
in
lcall
mov
arpl
sub
adc
inc
movsl
or
sub
ficoms
mov
xchg
mov
or
roll
cmp
sbb
dec
fisttps
daa
pop
out
jp
js
pop
into
lods
add
sti
xchg
cmpsl
scas
aas
stos
mov
movsb
adc
adc
sbb
aad
lds
or
movsb
dec
stc
fsubl
jb
jl
sub
push
jp
pop
fistps
in
xor
aad
mov
cmpsl
out
and
cli
push
xor
jg
jb
sti
pushf
fsubrp
data16
or
int
in
xor
in
fdivrl
mov
mov
add
mov
or
pop
mov
mov
mov
pop
iret
rorl
jae
xor
jnp
mov
dec
mov
jl
lea
mov
stos
and
add
test
sbb
into
popf
jno
aaa
xchg
ljmp
js
lahf
hlt
sub
adc
in
ss
sbb
sbb
leave
loope
scas
jmp
push
notb
sbb
es
or
loop
mov
mov
sbb
jnp
daa
out
and
sbb
fildl
mov
push
out
or
cmp
pop
xor
sbb
mov
jl
dec
mov
mov
adc
dec
pushf
or
dec
push
loope
in
sti
dec
scas
lret
enter
xchg
loopne
mov
mov
ret
mov
jns
data16
xor
iret
xor
dec
jmp
scas
cltd
push
dec
mov
mov
pop
dec
push
push
mov
jmp
cmpb
push
cwtl
unpcklps
push
mov
into
jecxz
cld
xchg
lret
sbb
mov
mov
hlt
pop
and
push
mov
sub
out
negl
addr16
lahf
jecxz
aam
pop
shll
outsb
cli
cld
xchg
xor
lea
stos
sbbl
in
sub
int3
fdivr
sbb
xchg
mov
daa
pop
dec
jno
inc
testl
fistl
mov
ffree
and
mov
mov
movsb
adc
mov
cwtl
inc
fidivrs
lcall
les
pusha
loope
hlt
std
sbb
shll
data16
in
add
fcompl
push
cmpsl
dec
cmpsl
push
out
cmc
cwtl
and
push
ja
stos
jmp
inc
xor
lds
loopne
ljmp
das
sbb
push
repz
xor
loopne
dec
mov
lods
cltd
adc
adc
shll
fwait
fdivrp
lods
ja
pop
out
lds
lods
andb
movsl
scas
pop
mov
scas
jp
jge
jne
xor
enter
mov
loopne
aad
xchg
mov
jbe
out
dec
leave
inc
xor
or
dec
or
cltd
shlb
pop
fcomip
sbb
jbe
pop
aaa
mov
mov
aam
inc
push
and
mov
outsl
inc
outsl
or
dec
mov
jp
ja
mov
jmp
out
mov
arpl
sti
enter
push
rcpps
mov
and
inc
negl
and
sub
imul
dec
add
lea
andl
negl
fcomip
push
xchg
or
cmp
movsl
out
sbb
and
shlb
xchg
dec
dec
repz
hlt
xor
xchg
mov
fwait
adc
mov
push
dec
adc
aam
jle
xchg
pop
cmp
mov
dec
mov
or
insb
jne
push
mov
push
repnz
cmp
jge
cmc
sbb
dec
aad
mov
aas
and
scas
cmp
call
jmp
inc
xchg
xchg
and
rcr
pop
cmpsb
gs
jmp
das
shlb
pop
sti
dec
jl
sub
sub
in
mov
xor
aas
test
push
imul
sbb
sbb
jns
imul
pop
adc
cmpsb
int3
popf
push
clc
gs
dec
push
int3
js
sbb
sub
lea
popf
pop
out
out
outsl
push
js
dec
dec
inc
or
inc
jmp
cmpsl
bound
js
mov
mov
mov
mov
sub
push
outsl
enter
pusha
fld1
aad
jnp
les
scas
sub
loopne
push
and
xor
shlb
hlt
jecxz
test
out
xor
add
gs
mov
mov
adc
jnp
and
xor
mov
insb
pushf
jae
adc
cmpsl
scas
in
xchg
in
mov
lahf
ret
jmp
xor
addl
mov
or
jne
jmp
repz
mov
cld
data16
stc
mov
push
mov
add
mov
adc
mov
mov
fildl
xchg
sbb
idivb
xor
pop
cli
pop
sbb
roll
cs
gs
cs
repnz
fsubr
mov
std
jl
cli
idivb
add
pop
rcrl
call
inc
mov
sub
lahf
sub
ret
les
cmp
and
xlat
inc
inc
fld
insl
scas
add
dec
sbb
insl
mov
ret
ret
pop
mov
or
jo
mov
sub
dec
xor
test
je
fcoml
xchg
imul
lret
xchg
cld
fs
xchg
andb
insb
test
add
or
dec
add
mov
push
add
sub
cltd
cwtl
xor
stc
cmp
push
popa
outsb
mov
mov
fs
jmp
sbb
insb
ret
inc
sbb
jmp
movsb
xor
loope
or
mov
lahf
push
int3
cld
mov
fs
pop
lods
ja
push
mov
xchg
fsubrl
rcl
xchg
in
sbb
mov
jg
mov
mov
adc
inc
sub
mov
xor
adc
ds
push
mov
lahf
mov
mov
sbb
pop
cmpsl
cmc
shll
fwait
idiv
pmaxub
arpl
pusha
jne
popf
xor
dec
xor
inc
lcall
jne
sahf
mov
xor
inc
mov
lods
add
or
sbbb
inc
mov
xchg
lods
adc
sti
es
and
cmp
push
sbb
cli
mov
sbb
jae
push
inc
pop
cmpl
adc
jp
dec
sub
mov
stc
xchg
gs
mov
push
or
xor
and
mul
push
idivl
mov
and
ja
xor
xchg
mov
fdivr
aas
mov
and
fldl
testb
push
push
pop
std
xchg
stc
push
sub
pop
mov
aad
pop
aas
rolb
mov
pop
aam
cwtl
cmp
mov
add
scas
lods
pop
aas
cwtl
push
out
add
loopne
je
xor
pop
jecxz
add
push
mov
ja
and
mov
in
add
jl
adc
xor
dec
in
cmc
mov
xor
pop
call
add
gs
cld
dec
jmp
pop
ficoml
sbb
cmpsl
ja
mov
xchg
or
xor
cs
sti
xor
shll
jecxz
mov
lock
jl
xor
push
sub
fidivrs
shlb
ja
cmpsb
movsl
insb
int
mov
sbb
sbb
orl
push
shrl
xlat
or
stc
ja
out
mov
pop
dec
push
test
incl
xor
inc
scas
mull
jmp
imul
das
fldt
pop
call
sbb
mov
push
sub
mov
xlat
shll
or
jg
pop
sbb
mull
xchg
pusha
iret
in
cmpsb
cmc
xchg
icebp
mov
inc
test
enter
or
and
fdivrl
fisttpll
sbb
cmp
lret
and
lret
fdivl
or
mov
adc
dec
push
xor
sbb
mov
push
jl
xchg
sahf
mov
cs
mov
mov
dec
das
int3
test
push
adc
loope
push
jl
dec
ss
pusha
xchg
into
adc
mov
mov
popa
out
jae
add
pushf
ja
rorl
mov
loope
and
fwait
push
push
aas
adc
sub
dec
stos
or
jns
mov
mov
imul
pop
out
xchg
clc
jmp
cmp
stos
fdivr
cmp
sub
loop
testb
aam
dec
out
mov
jg
adc
add
cltd
push
lods
jp
nopl
inc
rol
test
or
or
lock
lock
jl
jne
sbb
pop
cmp
shlb
cmp
out
icebp
sub
in
jmp
xor
cmp
or
hlt
mov
xchg
popa
sub
fwait
ja
adc
xor
pop
fidivs
shlb
jns
scas
sbb
fstpl
hlt
or
inc
test
nop
mov
pusha
sub
scas
negb
add
in
scas
xchg
mov
mov
in
sub
pop
clc
jg
fsubr
push
ret
les
inc
cs
lds
stos
cld
mov
xchg
cmp
xchg
jno
pop
adc
das
xchg
dec
xchg
mov
mov
and
sub
xor
out
cli
sti
or
mov
mov
lcall
shrb
adc
and
pop
pop
jmp
xchg
stos
push
mov
in
bound
push
lea
add
mov
xchg
nop
aad
lds
inc
sbb
cltd
or
leave
cwtl
ror
sub
das
mov
lods
cltd
aam
mov
cmpsl
insl
push
jl
mov
ljmp
out
test
adc
sahf
popl
inc
cmpsb
adc
std
sbb
ja
pop
pop
dec
pop
sub
sub
sbb
popf
aaa
and
or
pop
cli
jns
in
or
mov
and
sbb
xchg
sbb
call
sbb
int3
mov
iret
sub
test
fbstp
sti
int
rorb
adc
xchg
mov
stos
sarb
cmp
sbb
pushf
stc
sub
sub
ret
jl
test
push
test
ljmp
out
xchg
mov
mov
mov
outsb
cmp
jbe
pop
cmp
cmpsl
xor
cmpsb
leave
fstpl
mov
idiv
cmp
fadd
in
ret
imul
mov
sub
sbb
inc
gs
jle
enter
scas
mov
subb
jmp
sbb
sub
adc
mov
sbb
fsubs
push
movsl
push
cld
mov
dec
fnsave
lds
add
cltd
xlat
pop
push
cld
or
loop
dec
xchg
jl
jmp
insb
stos
or
cmc
cmpl
xchg
movsl
jae
movsb
mov
icebp
dec
push
imul
in
xor
jbe
push
leave
bnd
sbb
cmp
sahf
outsl
mov
jno
or
mov
add
jnp
or
pusha
mov
push
insl
jns
or
mov
adc
fadd
pop
clc
repz
cltd
ja
xchg
push
pop
add
in
test
addr16
cld
dec
mov
fldl
add
rcr
sbbl
adc
xchg
lcall
test
mov
mov
inc
and
sub
movsl
and
mov
dec
pop
das
out
add
jp
mov
xchg
rorb
pop
stos
fisttpll
cltd
das
int3
inc
jns
jl
test
mov
or
pop
or
pop
push
out
sahf
aad
xor
jmp
mov
dec
mov
call
xor
lods
fcoms
add
mov
xor
mov
inc
aad
popf
push
or
les
scas
pushl
ret
faddl
les
jg
or
cmc
or
mov
repnz
mov
lret
xchg
cmp
push
push
mov
mov
fnclex
jg
pop
pop
or
push
and
jns
mov
xor
mov
or
lds
orl
push
sar
lods
sub
or
and
xchg
inc
lret
mov
lds
js
mov
negb
xor
sub
rorl
sbb
mov
pop
pusha
or
jge
and
and
aas
in
fwait
enter
sub
push
mov
lcall
mov
lds
icebp
sub
pop
pop
and
dec
jnp
pop
xchg
mov
sbb
cmpsl
fsts
add
insl
int3
gs
cmp
fdiv
pop
xor
mov
clc
repnz
ja
out
nop
insl
ficoml
dec
push
inc
shll
ds
jnp
pop
mov
push
pop
cmp
and
aad
or
out
xchg
push
loope
pand
jmp
testb
popf
aas
andl
das
cwtl
pop
mov
sbb
and
adc
xchg
mov
inc
ret
and
jnp
outsb
inc
push
xchg
jecxz
daa
shlb
inc
int3
sbb
mov
popa
cli
sub
test
daa
or
imul
mov
scas
mov
nop
jl
loop
jmp
pop
inc
mov
inc
ffreep
inc
xor
sbb
sahf
addr16
pushf
mov
ljmp
xchg
jp
cmc
lret
and
jp
push
dec
mov
fildl
mov
cmp
popf
imul
rcrb
stos
xlat
add
sarl
gs
lods
pop
push
jp
xchg
cld
lock
sub
ret
and
cmp
sbb
or
icebp
xchg
mov
pop
lds
jge
or
push
fmuls
push
mov
int
or
push
xor
mov
dec
jge
mov
inc
fwait
lds
inc
add
mov
repz
test
lahf
sbb
push
inc
mov
loop
cli
jl
and
lahf
jae
mov
movsl
add
push
cmp
pop
cmpsb
int3
sbb
mov
stos
and
fs
adc
lahf
mov
repnz
je
iret
jno
dec
xor
jl
nop
outsb
push
std
xor
add
pop
cmp
pop
in
xor
fld
fisubrs
jnp
pop
shll
cmp
lods
xchg
sbb
lds
adc
xchg
sub
aaa
loopne
jo
fisttps
xchg
lods
inc
pop
inc
cmp
and
into
inc
shl
ljmp
push
add
adc
js
cmpsb
mov
mov
pop
int
push
mov
shlb
pop
mov
lret
mov
adc
mov
ret
jp
ret
enter
cs
jl
xchg
push
add
pop
lods
int
inc
add
sub
call
scas
xor
cmc
or
add
jne
mov
mov
and
adc
cli
sbb
fnstenv
test
adc
das
lret
mov
sbb
mov
sub
sbb
sbb
and
stc
in
in
push
loopne
subl
or
mov
daa
lcall
or
sub
adcl
in
and
pop
outsb
stos
mov
cmp
mov
push
adc
mov
xlat
and
sti
mov
ljmp
xadd
or
cmp
fistps
out
cli
push
pusha
rclb
addb
adcl
xchg
push
xor
leave
repnz
push
sub
mov
mov
in
jecxz
inc
cmpsl
pop
pusha
out
mov
int
loopne
push
cltd
aaa
push
cmpsl
and
es
sarb
mov
and
lock
loop
pop
adc
fxch
jns
pusha
add
xor
test
test
dec
pop
xchg
jmp
pop
lret
inc
add
push
or
dec
loope
adc
out
add
lods
lods
stos
push
lret
leave
movsl
loope
enter
loope
lea
repz
sbb
das
cmp
xor
loope
int3
dec
js
xchg
daa
fstpl
in
ret
mov
std
flds
sbbl
push
mov
xor
ljmp
outsb
movsl
inc
clc
pop
cmp
pop
bound
cmp
xor
out
adc
imul
stc
add
adc
sarb
je
ljmp
out
dec
orl
xor
pop
xorl
shrl
aaa
inc
lret
jg
in
add
mov
sbb
xchg
inc
and
frstor
dec
xor
inc
into
add
sub
insl
lods
cmp
repnz
outsb
inc
loop
mov
push
movsb
sub
dec
fsubrl
int3
mov
xor
popa
xor
inc
xor
mov
and
mov
lret
scas
loopne
jle
cli
addr16
lahf
fsts
mov
insb
inc
adc
cli
jnp
cmpsb
pop
pop
ror
js
push
das
out
mov
sub
push
movsb
mov
mov
imul
mov
mov
out
movl
dec
pop
mov
call
lock
popa
cmp
mov
xchg
int3
orb
xor
iret
jbe
loope
jle
movsb
pop
push
aad
inc
fabs
jl
jo
fidivs
jnp
xor
xchg
pusha
pusha
leave
jp
cmp
incl
cmp
scas
loope
and
sub
rcll
jge
sbb
xchg
adc
pushl
out
inc
js
inc
add
jecxz
cmovl
xor
xchg
scas
mov
movsl
fcomi
and
jo
ficoml
lock
inc
xor
fsubl
add
mov
mov
and
sub
pop
mov
in
jl
push
adc
push
aam
lods
inc
inc
int
jbe
xchg
ja
cmc
or
jb
fists
out
mov
arpl
mov
out
sub
push
in
xor
push
sbb
cltd
sbb
rclb
popa
mov
aam
movsb
hlt
sbb
scas
test
pop
mov
aad
test
out
dec
nop
orl
pop
dec
popa
stc
cwtl
jb
and
pop
lock
mov
dec
test
cmp
vmwrite
adc
sub
xchg
mov
push
scas
pop
adc
add
xor
xor
or
xor
mov
jo
addr16
in
cmpsb
cmc
rcll
sti
push
cmp
imull
rcrb
cmp
jb
je
orb
mov
sub
jae
mov
mov
sub
jns
fldt
sub
subl
add
rclb
sahf
imulb
stc
cmp
out
lahf
jl
push
dec
sbb
sub
push
add
stos
adc
and
fwait
leave
out
into
sbb
imul
test
lcall
adc
lock
dec
xchg
ficoml
jb
pop
out
mov
mov
sub
and
dec
subb
mov
mov
xchg
xchg
cwtl
sub
out
dec
fs
cmpsb
mov
cmp
stos
inc
pop
fmuls
cs
xchg
push
ror
mov
inc
call
mov
push
mov
sub
and
icebp
call
mov
push
mov
sbb
mov
fcomps
int
lea
cmpsl
dec
add
cmc
jae
pop
sbb
add
popl
loopne
inc
cmp
inc
mov
pusha
daa
test
and
sub
mov
jp
cli
mov
jp
repnz
and
pop
sahf
jno
push
call
int3
push
sbbl
shrb
imul
jno
inc
pop
cltd
jne
ret
mov
rorl
sbb
arpl
sub
ss
jno
popf
loop
add
xchg
jne
and
popl
mov
shll
test
js
or
jae
andl
push
ret
lock
jbe
xchg
and
add
mov
out
not
jl
add
stos
loope
lcall
and
bound
mov
sahf
rcll
iret
jle
mov
jbe
cltd
mov
lret
xor
mov
out
pop
dec
repnz
pop
les
arpl
loopne
pop
mov
sub
mov
shlb
fisubl
popf
scas
shl
push
mov
cmpsb
inc
xchg
notb
sub
mov
rcr
or
mov
cmp
sub
cmc
mov
xor
mul
jo
xor
xor
and
mov
loopne
push
pusha
sbb
test
mov
in
mov
mov
add
pop
iret
mov
sbb
mov
nop
dec
adc
inc
outsb
dec
or
xor
ds
mov
icebp
popa
pop
ud1
out
pop
ret
flds
dec
pop
fisubrs
cmc
inc
rorb
sub
jno
inc
cmpsl
dec
insl
sbb
jecxz
xlat
imul
cmp
std
jg
loopne
je
and
ficomps
das
sbb
jmp
imul
sbb
punpckhdq
sbb
ds
xor
or
stos
int3
mov
add
push
add
mov
in
rcl
push
iret
ret
fwait
pop
out
lock
inc
mov
inc
pop
adc
mov
mov
jo
mov
sub
sub
xchg
setae
movsl
sub
out
inc
add
in
in
dec
cmc
in
inc
lcall
or
inc
scas
leave
mov
push
out
sahf
mov
lods
ret
dec
sub
pusha
test
test
dec
mov
mov
mov
xchg
dec
mov
or
stos
gs
add
cmc
mov
test
arpl
jmp
or
jno
or
fwait
int3
push
scas
movsl
mov
push
and
loop
jno
push
sub
add
sbb
adcb
inc
sbb
lahf
or
shlb
lods
xchg
adc
fnsave
scas
xchg
adc
mov
out
movsb
ss
aad
fbld
loopne
mov
test
mov
cmp
pushf
push
in
dec
mov
push
mov
pop
push
cmp
inc
and
cmp
inc
stos
imul
int3
ret
insb
in
xchg
fwait
mov
push
add
imul
push
mov
pusha
rcrb
in
les
sbb
pop
int
adc
daa
jbe
inc
pop
test
lret
push
jno
push
mov
stos
or
and
adc
imul
cmp
jae
dec
dec
push
sub
aaa
add
shll
outsb
xor
xchg
not
scas
sub
sub
ljmp
test
pop
pop
cld
xchg
sub
clc
xchg
push
cmova
push
sahf
inc
mov
sbb
sbb
mov
mov
addl
and
push
jg
in
loop
inc
jge
jle
jbe
mov
cmpsl
stos
xchg
mov
push
sbb
inc
repnz
daa
sahf
mov
jo
sub
mov
mov
mov
pop
fs
push
jns
cmp
xchg
cmp
mov
mov
addr16
xchg
pop
stc
in
adc
call
push
push
add
or
in
jnp
cmp
mov
out
ret
xchg
mov
mov
push
rcrl
pop
aam
movsb
rorb
lcall
dec
stos
ja
sahf
aam
or
cwtl
addr16
cmpsb
xchg
arpl
leave
not
fdivp
pop
sbb
fists
mov
add
pop
popl
mov
pushf
loopne
and
into
pop
gs
pop
cmpl
xor
inc
and
lahf
insl
lret
clc
aad
or
cld
sbb
jo
jmp
sub
das
mov
xorl
sub
sub
xor
xor
ficompl
mov
dec
xor
loop
sub
scas
push
sbb
fucomi
scas
xchg
jno
mov
call
loopne
dec
movsl
insb
mov
pop
sub
push
cmp
xchg
addr16
pop
fistpl
dec
mov
out
pop
mov
jns
repnz
adc
inc
cmpl
icebp
cld
or
inc
mov
mov
mov
aas
icebp
mov
orl
sti
dec
jo
jns
mov
jl
push
adc
lods
out
sub
mov
mov
cmp
in
fdivr
imul
lahf
mov
gs
add
loopne
ret
sbb
test
sub
call
push
dec
xor
ljmp
jg
rcll
outsl
loop
test
cmpsb
test
sbb
fwait
mov
add
test
pop
hlt
loopne
mov
enter
xchg
push
testl
dec
and
sbb
outsb
sbb
dec
aam
fildll
inc
fwait
movsl
xchg
test
jl
pop
sub
pop
call
mov
test
cmp
xchg
enter
roll
xchg
flds
jo
mov
subl
jns
fists
ds
dec
jb
sbb
xlat
into
push
int
mov
pusha
ss
jns
dec
or
dec
or
cli
and
push
aam
lds
push
jg
stos
addb
push
dec
add
mov
cltd
jae
enter
ds
rcrl
pop
mov
shrl
sbbl
cmp
xchg
repnz
repz
movsl
das
inc
jno
mov
inc
sub
sbb
insl
sub
push
dec
or
cmc
les
imul
dec
jecxz
inc
repnz
inc
pop
add
jnp
jmp
cmpb
dec
push
add
mov
stc
sub
fs
fwait
and
ret
rcr
fisubl
dec
sti
lods
test
jb
and
dec
xchg
lret
iret
sub
jge
adc
jno
js
inc
rclb
mov
fcmovbe
cmp
xchg
mov
cli
mov
sbb
xchg
or
sub
jmp
outsl
stc
mov
int
outsb
mov
outsl
aad
lods
push
push
pop
fistpll
mov
add
sbb
test
hlt
sbb
xchg
int3
xor
insl
and
aaa
xchg
adc
int3
sbb
divb
fs
jmp
fdivrl
fistpl
das
iret
loope
jecxz
and
enter
shll
mov
xor
inc
daa
cmp
lods
loopne
or
mov
mul
das
mov
es
imul
loop
sbb
imul
leave
fisubrl
inc
jbe
and
int
and
add
xor
push
lods
xchg
pop
lds
call
repnz
ret
aaa
lods
jbe
xor
faddl
dec
inc
fcmovnbe
loope
xorl
sahf
hlt
fisttpll
arpl
test
test
adc
or
in
fnstenv
aam
or
inc
imul
sub
pop
and
mov
cwtl
call
xchg
inc
add
xor
mov
mov
mov
push
roll
gs
lret
xchg
mov
xchg
pushf
sub
mov
cmp
arpl
fcmovu
or
mov
inc
aam
jmp
loope
dec
cmpb
ds
push
fdivs
pop
fwait
sub
inc
daa
dec
cmp
pop
fdivrl
sub
jle
das
cmp
insb
xchg
test
add
lods
add
add
shlb
and
loopne
gs
nopl
cld
add
xchg
dec
sbb
out
mov
iret
jb
xlat
aam
in
sbb
dec
icebp
xchg
xor
shlb
sbb
xor
jp
icebp
or
jecxz
hlt
pop
push
test
xchg
mov
push
cmp
sbb
jb
sub
lret
loop
mov
arpl
jnp
xor
loope
sub
push
inc
scas
jecxz
int
cmp
or
outsw
outsl
dec
sub
imul
push
jnp
push
mov
std
rolb
add
sub
cli
daa
call
xchg
dec
push
inc
int3
out
mov
mov
add
clc
mov
ss
inc
xrelease
arpl
jle
xchg
sub
cmc
punpcklbw
push
dec
sub
aas
dec
nop
lret
sub
in
mov
inc
sbb
mov
xor
fisttpll
adc
xor
cli
xchg
pop
adc
jl
adc
js
xor
or
sbb
in
mov
mov
mov
xchg
fmull
cs
stos
mov
repz
inc
out
outsb
iret
dec
and
mov
loop
xchg
inc
test
jno
dec
push
test
repz
xor
jecxz
cltd
lods
pop
mov
mov
test
test
add
leave
dec
pushf
sub
pop
sti
push
jae
adc
xlat
cltd
lcall
imul
and
and
stos
fs
aas
rcrl
jbe
cmp
in
xchg
mov
shrb
ret
scas
adc
adc
loope
out
xchg
pushf
fcmovnu
call
and
inc
sarb
in
int
push
jne
xchg
and
pop
ret
inc
adc
sub
pop
popa
fucomip
roll
call
push
rolb
adc
sub
xchg
lcall
ret
arpl
dec
xchg
and
std
adc
sbb
bound
dec
adc
aam
or
imul
jmp
sti
add
psubsw
loope
testl
sub
add
sub
je
leave
aas
xchg
ror
aas
lahf
lds
pop
cmp
cmp
orb
jge
in
hlt
sbb
fbld
mov
lea
mov
std
pop
xor
cwtl
adc
int3
repz
ja
pop
mov
lret
sti
dec
sbb
sti
ficomps
and
jnp
mov
pushf
add
test
jbe
adc
pop
addr16
clc
lds
rcrl
outsb
and
sub
mov
shrl
add
fistl
pop
frstor
clc
sahf
adc
loopne
fwait
mov
sbb
mov
mov
push
in
dec
mov
xchg
add
cmp
add
sub
sarb
rclb
lcall
lret
jmp
mov
sbbb
ret
or
ret
ds
mov
mov
inc
loop
or
push
pop
int
sbb
int3
mov
dec
sti
pushf
lret
cmp
in
xchg
lea
out
mov
sbb
jnp
insb
mov
call
inc
or
adc
inc
or
add
repz
xchg
iret
ret
popa
push
or
mov
push
aaa
loope
pop
imul
mov
or
dec
xor
pop
dec
xor
mov
in
or
cmp
push
cmp
mov
xchg
dec
xor
pop
insb
lcall
and
dec
lret
and
adc
adc
fsts
mov
or
sti
mov
or
mov
inc
dec
jne
enter
and
mov
or
fsubl
mov
fstp
mov
xor
cs
stc
mov
mov
fucomp
sub
mov
iret
sbb
popa
push
mov
aad
mov
xor
mov
pop
adc
jbe
xor
push
push
adc
mov
imul
add
add
stos
jno
lods
or
ret
pop
aaa
aad
shl
loop
pop
mov
dec
cwtl
ret
jns
sbb
dec
jl
pusha
lds
inc
sub
pusha
test
test
jnp
jmp
mov
cmp
inc
gs
xchg
stos
loope
push
push
jle,pn
bound
stos
lods
les
inc
in
mov
subl
in
out
ret
add
stos
lahf
add
or
orb
jb
movsl
ja
mov
sar
insl
pusha
lds
mov
adc
xor
xor
mov
lods
push
pop
int3
jl
and
dec
mov
cmp
ds
sub
ret
mov
sti
and
imul
xor
push
push
mov
mov
ret
getsec
jmp
mov
mov
repz
fldenv
enter
lcall
shlb
jae
das
das
cmp
mov
sbb
out
sbb
add
sti
adcb
or
lods
in
dec
fildl
icebp
dec
fisubs
inc
and
mov
lret
mov
sbb
jne
out
inc
out
mov
lock
jb
hlt
pushl
out
jae
out
arpl
inc
push
push
fwait
cmp
bound
in
pop
repnz
pop
pop
fbstp
add
mov
ss
add
xchg
out
jbe
test
adc
cmp
xchg
pextrw
mov
movsl
std
pop
add
push
or
outsb
jecxz
lret
push
push
pushf
mov
addb
xlat
fldl
jbe
dec
lds
lds
lahf
repz
sbb
rolb
iret
jecxz
jl
dec
jb
call
lock
mov
inc
pause
mov
pusha
mov
lock
pop
movsl
dec
call
shrb
pop
scas
test
and
loop
jg
cmp
jae
cmc
fisttps
push
sahf
cli
sub
stc
test
dec
xor
sahf
ret
fs
cmp
pop
mov
inc
in
jp
lds
or
outsb
test
inc
xchg
add
pop
and
lods
pop
arpl
mov
lret
pop
inc
add
mov
jp
mov
bound
adc
push
in
enter
cld
in
pop
push
xor
cli
lods
out
mov
or
mov
psubusb
inc
dec
and
imul
or
popa
jbe
inc
hlt
or
push
inc
cmp
shl
fdiv
and
mov
cmp
pop
lret
flds
mov
repz
pop
loopne
jge
cli
jl
dec
or
xchg
xchg
mov
push
inc
movsb
sub
sarl
jmp
dec
cwtl
add
mov
arpl
icebp
mov
nop
call
mov
frstors
addr16
push
or
pop
cld
pop
movsl
mov
sub
scas
mov
sub
gs
scas
or
stos
xor
lahf
fcmovnu
mov
cwtl
mov
loop
mov
mov
jnp
xor
jns
push
imul
sbb
push
mov
out
cli
scas
imul
stc
repz
xchg
xlat
jmp
jecxz
and
dec
dec
cwtl
call
push
cmp
push
fcom
in
subb
pop
jns
jbe
xchg
int3
stos
mov
pusha
cmpsb
imul
js
jge
mov
sbb
xor
sbbl
jb
aam
mov
mov
cmpsb
repz
pop
jp
inc
mov
movsl
out
push
xor
insl
mov
fistpl
cmpsb
in
stos
mov
push
in
ja
adc
inc
xchg
and
fimuls
add
and
leave
mov
fwait
xchg
into
faddl
enter
xchg
or
push
scas
loopne
cmp
jg
add
sub
pop
mov
push
push
addr16
ja
dec
ficompl
insb
lods
cwtl
aam
pop
pushf
test
aas
addr16
push
out
nop
inc
or
aam
mov
fwait
mov
inc
cmp
xchg
cld
jp
movsb
cmc
dec
sub
mov
dec
pusha
addr16
adc
fimuls
ja
sub
fidivrs
jmp
notl
jmp
jmp
pop
add
mov
jmp
rcrb
add
leave
jecxz
sub
mov
xchg
xchg
push
inc
addr16
je
mov
pop
mov
pushf
stos
jl
in
scas
gs
les
cmp
mov
cmp
mov
outsl
ljmp
repnz
insl
das
lret
or
aad
lret
or
scas
mov
inc
sub
jno
or
call
push
sub
mov
jg
dec
pop
lahf
and
sub
dec
outsl
or
movsb
pop
clc
sbb
cld
adc
rcrl
lock
xchg
pop
icebp
gs
xchg
sahf
into
mov
incb
mov
push
dec
lock
mov
in
out
add
add
iret
adc
gs
sbb
inc
bound
nop
xor
push
push
popa
pop
inc
and
mov
fs
cmp
mov
xor
dec
leave
jecxz
pop
cwtl
aam
mov
inc
insl
or
xchg
adc
mov
lret
bound
lcall
or
ss
in
in
leave
sub
out
popa
fidivrl
mov
adc
or
popf
push
popa
add
sub
sbb
insb
xor
inc
or
cmp
cmpsb
inc
jge
pushf
shl
loop
and
dec
sub
push
jmp
inc
aam
ja
std
xchg
adc
and
sbb
add
mov
mov
pop
in
ljmp
les
fidivrl
lret
add
jle
adc
jo
iret
stos
jle
xlat
lods
sbb
adc
dec
dec
cmpsb
fstpt
pusha
subb
sbb
push
mov
ds
add
fistl
xor
push
clc
jae
outsl
dec
ja
in
cwtl
pop
xchg
mov
mov
pop
dec
cmpsl
and
xchg
aas
lods
test
xchg
ja
pop
nop
sub
popa
and
fnstcw
call
xchg
inc
pop
push
or
xchg
mov
push
ds
mov
clc
jecxz
mov
out
sbb
mov
mov
into
mov
dec
lahf
leave
inc
fprem
mov
xor
and
ret
sbb
sub
pop
push
and
popa
mov
adc
cmp
gs
mov
roll
test
mov
add
xor
xor
lods
out
cs
das
xchg
in
jmp
dec
push
imul
fists
or
inc
add
ja
jae
sub
or
push
enter
pop
xchg
cmp
dec
push
imul
inc
pop
adc
arpl
push
sub
jge
lret
mov
add
mov
iret
shrl
jae
icebp
lahf
les
sahf
mov
in
fildll
adc
xor
cltd
fcmovne
in
loope
das
aaa
push
fs
fcmovbe
outsb
jp
or
fsubrl
mov
push
push
insb
out
xor
sbb
mov
andl
negl
fists
aam
dec
inc
out
xchg
shrl
jbe
mov
fcomps
mov
mov
or
xchg
cmp
cmp
add
out
add
cld
cmp
push
pop
sub
sti
fists
dec
sbb
ljmp
cmpb
popf
mov
add
dec
push
inc
inc
out
in
and
xchg
mov
cmp
sub
out
pop
mov
jl
inc
movsl
push
rcll
fcmovu
jb
in
mov
in
bound
mov
lahf
jle
ror
outsl
int3
adc
inc
pop
jle
mov
cli
shlb
test
les
sarb
fcompl
push
sarb
push
ret
mov
xchg
or
xchg
les
dec
lcall
adc
test
pop
das
mov
icebp
pop
and
xor
std
nop
clc
dec
adc
jns
loopne
lods
sti
xor
stos
inc
adc
pop
pushf
jbe
jecxz
xor
outsb
dec
add
mov
addl
lods
mov
add
inc
xchg
cmc
sbb
jg
loope
pop
or
mov
cmp
jbe
sbb
pusha
cmpsb
test
push
outsb
pop
or
jg
inc
enter
dec
icebp
dec
pop
and
ret
mov
or
dec
stc
inc
in
cmpsb
cli
and
pusha
stos
stos
sbb
jne
dec
lods
sti
jae
loopne
xchg
pop
mov
and
fs
popl
sarb
js
cmp
imul
pop
addr16
xchg
stos
fisubrl
inc
adc
fsubrs
std
adc
mov
adcl
movl
nop
mov
sbb
fucomp
ja
dec
pop
or
in
jp
cmpb
std
xchg
pop
lods
imul
pop
jb
adc
test
out
lahf
call
mov
mul
fiadds
dec
cmc
adc
inc
adc
pusha
call
aas
outsl
sbb
or
imul
mov
fnstenv
adcb
mov
mov
mov
sub
jno
mov
xor
jg
rol
adc
push
mov
cli
fidivs
imul
jmp
out
cli
sub
cmpsl
sub
ss
imul
mov
out
cmp
dec
lock
adc
divl
idivl
jle
repnz
ljmp
and
jno
mov
add
jns
adc
pop
movsl
push
fcomip
jg
jg
mov
cld
add
data16
add
or
or
out
in
and
enter
inc
hlt
pop
or
fstpl
cmpsl
pop
je
push
sub
mov
mov
push
loope
sub
es
push
xchg
ficoms
out
pop
call
inc
adc
setge
sbb
scas
cwtl
bound
pop
xchg
std
adc
cmp
test
clc
insl
mov
mov
aam
jbe
cmp
mov
ss
push
mov
pop
inc
jge
in
popf
push
add
mov
pop
mov
test
add
or
push
out
or
pop
inc
out
mov
push
add
xor
inc
mov
inc
dec
inc
dec
sbb
pop
fldt
and
add
leave
cmp
std
xchg
loope
fs
push
dec
fmull
or
mov
mov
or
inc
jne
call
xchg
int3
icebp
jecxz
filds
cs
aaa
or
xchg
jecxz
xor
loope
daa
cmp
jle
push
mov
pushf
lods
inc
leave
adc
test
out
sarb
adc
xchg
and
xchg
jl
cs
aad
pushf
cltd
fldt
add
mov
scas
andl
fsubrl
push
in
icebp
sub
pop
inc
inc
xor
jle
fwait
mov
test
ja
pop
mov
insb
push
or
cmp
loop
cmp
mov
mov
pop
mov
sub
pushf
imul
dec
loop
nop
inc
lds
aas
cwtl
test
arpl
pushf
fmul
inc
cltd
mov
mov
lods
je
in
es
mov
aaa
mov
mov
mov
popl
jne
movsb
out
dec
pusha
nop
inc
les
in
push
mov
lock
std
mov
mov
mov
xchg
mov
je
mov
and
mov
ret
mov
ret
mov
enter
mov
aas
pop
jmp
ja
mov
push
imul
cmp
jmp
icebp
lock
jno
mov
inc
mov
pushf
shrl
xor
dec
insl
sub
add
mov
xchg
icebp
in
movsl
mov
fsubs
test
mov
xchg
aad
subb
sar
loopne
or
pop
nop
push
insl
cs
test
push
roll
roll
cmp
insl
call
inc
loop
out
pop
repnz
aaa
movsl
or
or
pop
rcll
xor
adc
cld
test
jbe
stc
mov
orb
test
movsl
mov
in
or
inc
xor
rorl
in
dec
adc
sbb
jmp
sbb
or
add
repz
jmp
add
sahf
jl
in
mov
aad
adc
adc
in
aam
popa
out
xchg
scas
ret
les
or
mov
cmp
pop
mov
jnp
das
test
or
cmp
out
fistps
clc
insb
jne
dec
aam
mov
mov
mov
pop
sub
stos
outsl
mov
enter
sbb
mov
fcmovne
lea
icebp
sub
and
mov
pop
insb
jo
je
mov
fldt
jns
sahf
inc
mov
sub
adc
sar
mov
xchg
inc
jne
std
enter
jp
inc
pop
pop
mov
jge
jecxz
jl
mov
xor
imul
jnp
enter
pop
mov
inc
adc
imul
aam
dec
pop
popf
mulb
jne
insl
pop
push
sub
popa
mov
test
push
cmpb
and
push
dec
mov
or
cmpsb
adc
jg
sbb
push
inc
inc
push
fstp
xor
test
inc
add
loope
aaa
scas
cltd
inc
clc
imul
pop
mov
outsb
test
add
pop
mov
mov
das
sar
sbb
push
xchg
pop
cs
xchg
test
push
and
jo
fbstp
movsb
iret
movsl
outsb
lret
es
jl
mov
aaa
sbb
push
mov
mov
sbb
adc
scas
fwait
mov
mov
xchg
inc
ret
inc
repnz
mov
divl
mov
xchg
sub
push
daa
push
jl
mov
adc
cmc
push
mov
dec
aas
mov
fisubrl
push
xor
push
and
jl
jmp
or
add
shrl
pop
in
clc
adc
mov
cmp
shlb
dec
pop
shlb
push
es
lods
clc
and
mov
sbb
inc
sti
das
mov
cld
test
adc
and
pop
shl
fsubs
je
shll
test
stos
pop
lods
shrl
int3
and
jae
mov
sub
mov
add
ret
or
jae
pop
inc
cmp
es
imul
lock
fmuls
jg
mov
jmp
mov
insb
shlb
cmpsl
cmp
and
outsb
aam
mov
xor
out
test
andl
leave
jbe
mov
xchg
xchg
mov
add
and
icebp
inc
push
push
sbb
add
xlat
push
and
cmp
push
inc
mov
std
cmp
daa
insb
mov
xchg
xchg
pop
dec
int
jp
mov
jl
xchg
dec
fmul
fcoms
dec
adc
jne
xor
pop
and
or
cmp
sahf
cld
or
cmpl
inc
scas
jge
xchg
mov
mov
imul
fistpll
mov
and
or
rclb
lret
ljmp
movsb
inc
scas
jae,pn
push
and
int
fcomi
mov
in
mov
incl
test
in
jb
mov
push
mov
push
pop
cs
pop
add
mov
sbb
add
cmp
jle
pop
and
add
mov
sbb
dec
adc
ret
xchg
subl
ljmp
cwtl
call
sub
je
push
lahf
dec
cmp
in
ds
sbb
enter
hlt
mov
out
xchg
jne
movsl
inc
es
push
and
push
stc
xor
test
mov
sbb
and
in
popa
adc
fwait
subb
add
testl
cmp
mov
mov
push
outsl
dec
test
cmp
ss
jmp
mov
inc
xor
das
and
adc
pop
rolb
loope
mov
xchg
test
ds
adc
test
imul
aam
int3
jl
aas
dec
fsubl
dec
or
pop
clc
lret
jge
lcall
sub
push
sub
lcall
cltd
mov
out
and
test
inc
inc
mov
sahf
jle
jp
push
add
inc
inc
jmp
test
push
xor
or
cmp
mov
mov
pop
xchg
nop
ficomps
inc
push
xor
dec
sub
lahf
out
imul
inc
gs
sbb
or
jl
mov
ret
dec
call
gs
cmp
sub
xor
pushf
icebp
arpl
xor
fucomp
mov
sbb
fisttpll
mov
pop
ret
pop
jnp
pushf
mov
pop
adc
pop
push
ljmp
aad
repnz
xchg
pop
sahf
mov
fstpl
stc
js
add
or
mov
idiv
push
pusha
and
xchg
lret
mov
shr
lahf
rol
ja
xlat
pop
push
lds
sub
das
inc
adc
fsts
pusha
sub
xchg
or
rcrl
push
fwait
mov
vpunpckhwd
test
lods
pusha
hlt
jle
loope
jmp
mov
jb
fwait
gs
sahf
and
jno
xorl
cmp
sti
cmpl
test
xor
mov
adc
aam
cmova
aaa
jp
int3
lea
push
jno
lods
in
or
ja
or
es
daa
xchg
push
subb
push
push
add
mov
out
sub
jge
adc
fmull
pop
adc
add
inc
std
jae
sbb
js
fisttps
mov
ljmp
sahf
or
mov
push
dec
xor
xor
pop
adc
dec
xor
test
shll
sarl
mov
sub
push
xor
lahf
fstpt
hlt
mov
jns
stc
xor
loopne
push
adc
add
or
out
pop
mov
rcll
mov
testb
popf
push
repz
sbb
test
loopne
pop
lcall
leave
loop
in
popa
fdivrs
sub
jae
and
mov
cmp
cld
sbb
test
adc
pop
mov
jae
lds
add
inc
xchg
arpl
push
mov
arpl
sub
lock
add
dec
arpl
cmp
xchg
jno
inc
add
push
inc
cmp
loope
outsl
push
push
inc
lcall
lret
cmp
sahf
jns
pop
or
repz
insl
or
mov
xor
mov
xlat
push
loop
xchg
jge
das
jle
mov
inc
push
add
or
xlat
pusha
mull
fwait
movsb
mov
mov
cmc
cmp
imul
ret
fwait
mov
std
or
je
fbld
cmpb
sbb
fldenv
clc
fcmovu
dec
movsl
adc
jno
in
sar
inc
int3
jno
fwait
dec
mov
pop
sub
lds
mov
lret
push
out
jmp
out
shl
popf
sub
xor
mov
cmp
jno
movsl
cmp
scas
fistl
xorb
jg
cmpl
insb
pusha
inc
push
ret
mulb
ret
mov
jbe
adc
pop
add
shlb
call
stc
frstor
fisubrs
es
mov
add
pop
js
dec
jne
mov
xor
jg
cmp
pop
lret
jmp
pusha
or
xor
cli
jl
mov
cmpsl
push
outsb
out
nop
and
sub
out
daa
pop
out
and
cmpsl
push
lret
add
push
or
jne
loopne
jns
cmpsb
mov
pop
inc
jl
xchg
jnp
jb
sbbb
mov
je
test
lock
pop
sbb
mov
scas
mov
xor
mov
js
cmp
inc
jl
test
and
inc
repz
sbb
mov
stc
lods
fnstcw
add
stos
sbb
mov
aad
gs
push
adc
cmc
inc
call
xchg
xchg
add
push
xchg
fisttpll
das
mov
lods
mov
xor
movsb
cmc
inc
fstps
and
dec
imul
out
icebp
sub
sbb
pop
hlt
mov
out
add
mov
xchg
xor
inc
popa
div
dec
inc
xor
mov
in
into
je
outsl
frstor
arpl
out
push
sbb
push
leave
popf
sub
mulb
jae
push
jecxz
les
sbb
fsts
adc
lcall
jbe
ja
out
fs
ret
shrl
pop
out
jle
push
add
scas
mov
test
imull
rcll
lcall
imul
mov
mov
into
fwait
sbbb
ja
imull
dec
sbb
cmp
stos
sti
mul
lea
daa
rcrl
jns
daa
jnp
nop
push
xor
mov
pop
mov
cli
cmpl
dec
lret
jl
mov
out
fistl
dec
mov
mov
sub
inc
lahf
cs
push
out
sarb
daa
dec
cmpsl
cmp
jae
js
push
stc
sahf
jge
cld
and
sub
jae
xchg
pop
scas
mov
push
imul
insl
jmp
and
sti
xlat
mov
and
clc
adc
push
mov
and
movsb
sub
repz
mov
jb
dec
push
fmull
imul
scas
repz
push
inc
push
xchg
aam
addr16
jecxz
out
mulb
imul
add
icebp
out
ja
jae
mov
mov
push
jle
insb
andb
ret
lret
clc
hlt
in
push
pop
mov
mov
movsl
enter
call
mov
insb
xor
scas
jmp
mov
fldcw
nop
aaa
xchg
cmp
and
xlat
shlb
xchg
sbb
rcl
mov
loope
push
movsl
testl
ret
ss
push
jl
sub
in
loope
bound
js
dec
loop
adc
and
xor
mov
inc
scas
sahf
add
js
test
call
ret
aas
xor
sbb
hlt
mov
pop
mov
dec
add
sub
test
andl
popa
xchg
lret
pop
daa
mov
lret
mov
cmp
and
add
push
fs
xlat
push
cmp
jge
or
dec
sbb
call
jg
push
mov
push
xor
iret
mov
fs
imul
adc
xchg
cwtl
mov
dec
fildll
xor
arpl
push
leave
ja
cmp
scas
mov
jl
or
cmpsl
push
aas
jno
pop
jno
lret
sub
ds
dec
cs
out
sub
mov
push
rcrb
pop
lock
add
fildl
inc
sub
jno
cmc
ss
mov
stc
mov
lds
push
pop
mov
fwait
push
lret
inc
aam
pop
out
push
ret
xor
cmp
inc
jbe
mov
loop
mov
std
xor
dec
jmp
sti
imul
loop
push
push
xlat
ja
mov
push
test
jae
mov
jmp
in
sbb
dec
xor
popa
xor
mov
push
or
leave
sahf
mov
adc
notb
rep
or
pop
jnp
dec
sub
scas
jle
ja
cmp
jae
and
dec
xchg
cli
xor
cmpsl
daa
iret
mov
dec
enter
push
mov
xor
jno
xchg
xchg
fcomps
lret
jmp
adc
push
xor
push
aas
out
cmpsl
sbb
shll
outsl
xchg
mov
scas
jp
out
outsl
in
das
std
xchg
andb
add
xor
xor
jns
jne
mov
sti
xchg
sub
into
sub
jp
std
adc
movb
mov
pop
imul
loop
es
pushf
scas
lods
cmc
sub
jg
mov
lret
pop
leave
and
push
mov
imul
out
inc
icebp
sub
push
nop
lea
fucomi
inc
add
or
xor
push
cmp
sti
les
outsb
xchg
mov
mov
scas
fs
sbb
cmp
dec
iret
mov
out
push
sub
jecxz
call
movups
cmp
sbb
cmp
mov
pop
xchg
loop
add
iret
in
push
cmpsl
inc
call
xor
aam
pusha
iret
mov
jle
vpmuludq
or
cwtl
dec
xchg
movsl
inc
outsl
sahf
dec
imul
scas
outsl
sbb
divl
mov
sbb
stos
je
pop
lods
dec
das
ret
scas
cmpsl
scas
cmp
adc
frstor
push
scas
push
pop
push
in
mov
ja
xchg
movsl
mov
mov
mov
in
or
stos
js
jo
sahf
les
out
in
add
xchg
push
aad
adc
jbe
add
mov
xor
addl
idiv
cmp
fstps
push
sub
mov
scas
pop
add
add
sbb
add
add
push
add
add
add
add
add
cmpb
add
add
add
add
add
add
push
add
add
cmp
add
add
add
add
jle
add
nop
lods
add
add
add
les
mov
jmp
pusha
push
mov
sub
xor
movl
movl
movl
movl
mov
mov
pusha
mov
mov
mov
mov
mov
mov
mov
add
add
mov
lea
mov
mov
mov
add
dec
nop
test
nop
je
lea
mov
add
push
push
mov
add
mov
pop
repz
test
pop
jne
mov
add
mov
movzwl
mov
add
mov
add
mov
jmp
movl
popa
mov
xor
cmp
je
mov
cmp
je
lea
push
push
movb
movb
movb
movw
nop
nop
movw
nop
nop
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
nop
nop
mov
nop
nop
call
nop
add
inc
add
add
pop
mov
sub
push
push
mov
push
push
push
call
pop
mov
push
push
push
push
inc
mov
push
push
push
mov
add
mov
mov
add
mov
pop
mov
mov
add
push
mov
add
call
push
push
mov
push
push
call
pop
push
push
push
pushl
push
push
push
mov
push
push
call
pop
push
push
push
pushl
pushl
mov
push
push
pushl
push
pushl
mov
add
push
push
push
mov
call
pop
mov
add
mov
mov
push
mov
push
mov
push
mov
push
xor
mov
rep
mov
lods
mov
lods
mov
add
lods
mov
rep
dec
jne
pop
pop
pop
mov
test
je
mov
inc
sub
cmp
ja
mov
cmp
jne
xor
bswap
add
sub
stos
loop
push
lods
test
je
mov
add
push
call
mov
lods
test
jne
lods
test
je
sub
lods
test
jne
sub
push
push
call
stos
jmp
and
push
push
call
stos
jmp
pop
pop
ret
add
fimuls
mov
ret
push
jmp
inc
sahf
push
dec
pop
mov
arpl
out
std
stos
or
insl
lods
push
scas
dec
mov
stos
dec
sbb
mov
mov
jmp
dec
push
call
es
xor
jmp
and
clc
test
pop
or
dec
mov
and
pop
xchg
fcomp
mov
stc
cmp
mov
shlb
movsl
jp
mov
rcll
jbe
xlat
aaa
lods
cmpl
sbb
test
imul
push
test
sub
cld
sti
jmp
shll
enter
jmp
in
in
test
and
cmpsl
loop
or
xchg
push
pop
nop
xchg
pop
jl
aaa
cmp
sbb
daa
imul
cltd
jns
mov
push
fsubs
add
inc
rol
out
sub
mov
cmp
mov
icebp
mov
push
sti
daa
or
jecxz
xor
pushf
push
shrb
dec
and
mov
cltd
or
xor
xor
add
and
je
mov
out
test
cmpsl
arpl
and
movl
popf
inc
cmpsl
jo
outsl
mov
fbld
push
adc
idiv
cld
inc
mov
cli
pushl
pop
push
movb
icebp
clc
xor
pusha
xchg
push
mov
adc
jns
orb
pop
dec
lea
pop
add
cmp
int
mov
bound
subl
out
imul
pop
dec
insb
xor
fistps
iret
add
adc
or
lods
cmp
insl
cmp
jbe
dec
jbe
adc
mov
les
fbstp
icebp
xor
mov
lock
insl
data16
cli
cmpsb
pop
dec
mov
mov
and
sqrtps
or
lock
pop
adc
xor
or
pusha
sti
jnp
arpl
pushf
mov
cmpsb
inc
mov
ljmp
aad
std
fcoml
mov
cmp
lcall
mov
sub
test
add
adc
pop
out
or
fisubs
jnp
popa
sub
mov
ljmp
dec
adc
arpl
js
popa
and
enter
pop
shrb
addr16
dec
pusha
lods
mov
arpl
cmp
sub
les
adc
nop
cmp
ljmp
mov
aas
dec
fldenv
sub
cmc
adc
shlb
add
out
mov
fcmovnbe
call
test
mov
hlt
in
aas
jmp
testb
dec
sub
fistps
and
inc
mov
mov
sbb
pop
gs
fldl
shrb
push
frstor
loop
sti
addr16
loop
cmp
add
xlat
jecxz
sahf
inc
insb
push
xchg
push
cmp
dec
pop
jmp
xchg
add
sbb
lock
repz
mov
faddl
pop
sub
test
and
jecxz
ja
dec
sti
xchg
sub
add
int3
mov
insb
pop
mov
inc
push
push
movsl
popa
pop
dec
sub
es
fdivs
mov
or
mov
mov
jl
mov
fsubr
mov
cmp
lcall
push
add
subb
fnstcw
stos
inc
popa
dec
add
ja
into
lret
mov
repnz
loopne
inc
dec
adc
or
push
jns
nop
add
sti
add
int
pop
jb
cmc
outsl
inc
jae
xchg
jmp
hlt
cmovne
aas
adc
mov
cmp
lret
test
xor
adc
xlat
sahf
xchg
lret
aas
xchg
pop
add
jg
push
and
ljmp
jl
dec
jle
dec
jno
fisttpll
sbb
cltd
js
js
bound
mov
push
push
xor
sti
cmc
push
sub
cmp
nop
hlt
cmp
bound
push
mov
inc
xor
inc
das
loope
dec
out
insl
mov
into
int
mov
xor
cs
add
mov
push
dec
imul
mov
jno
int
fcomip
sbb
outsb
leave
cltd
mov
mov
add
divb
ret
out
ja
in
in
jle
enter
mov
cmpsl
xor
mov
and
mov
pop
mov
mov
ds
xor
cmp
leave
push
loopne
jb
cmp
imul
add
sbb
insl
jecxz
xlat
adcl
xor
push
mov
in
dec
add
repnz
in
inc
pop
rcrb
cmp
push
pushf
cmpl
adc
cmp
mov
push
inc
push
mov
movsl
outsl
rcl
jne
call
xchg
pop
cmp
jnp
xlat
mov
bound
cltd
adc
stos
xchg
mov
js
out
and
push
jl
mov
arpl
insb
arpl
push
pop
push
adc
inc
push
sbb
pop
rorb
sarb
insb
or
pop
mov
shll
and
pop
push
js
jnp
xlat
cld
enter
imul
mov
scas
in
mov
movl
adcb
ss
fcmovu
push
xchg
mov
adcb
cwtl
or
rcrl
dec
imul
cwtl
cltd
inc
movsb
jp
push
mov
add
les
jne
flds
dec
jecxz
out
add
cmpsl
jl
shll
and
rorb
iret
fwait
les
add
sbb
adc
mov
inc
or
xor
out
sbb
xchg
mov
xchg
inc
jle
mov
dec
sub
repz
cmp
imul
insl
pop
push
test
sbb
and
js
rcll
add
pop
sub
dec
adc
popa
das
jne
push
and
add
jae
jecxz
je
pop
and
and
lods
out
adc
adc
inc
pop
rclb
imul
cli
lahf
call
jb
clc
adc
es
popf
mov
mov
pop
add
into
add
arpl
out
cli
push
or
mov
inc
data16
mov
inc
mov
inc
bnd
cmp
das
cli
ret
pmaddwd
push
popa
mov
jg
stc
nop
ret
into
pop
pusha
and
loop
and
je
mov
adc
int
adc
sub
sbb
sti
jb
insb
push
fisubl
mov
xchg
xchg
inc
dec
dec
lret
mov
mov
iret
int
movsb
mov
lock
xchg
or
sub
hlt
adc
ss
add
lea
and
inc
out
push
in
popa
jl
cld
mov
mov
sti
iret
std
in
test
push
punpckldq
orl
push
test
lahf
popf
xchg
clc
lret
adcl
mov
sbb
pop
fs
hlt
sbb
insl
or
daa
jne
jo
or
jno
fdivr
movl
dec
lods
into
movsl
fidivl
adc
test
test
in
or
call
jae
mov
or
popa
jo
movl
loop
or
jne
mov
pop
outsl
mov
jl
xorl
fidivs
imul
inc
icebp
fcoml
mov
fcomps
pop
mov
push
sub
mov
ss
dec
popa
pushf
adc
jecxz
xchg
add
jns
xor
sub
outsb
mov
or
or
fistps
mov
test
sahf
push
dec
mov
mov
popf
out
mov
sbb
insb
adc
dec
xor
xor
push
add
or
add
xor
pop
pop
ret
inc
ret
add
shll
in
xor
push
fstpt
imul
int3
lods
add
outsl
jecxz
repz
ud0
fs
xor
cli
pop
test
pop
fwait
xor
mov
jne
nop
jo
xchg
add
lret
mov
and
les
test
dec
mov
xchg
sbb
dec
xchg
clc
xchg
lret
lea
shr
mov
out
add
mov
inc
adc
test
mov
pop
lcall
addb
call
aad
sbb
inc
add
and
push
sbb
mov
mov
loopne
ss
jb
dec
mov
js
jl
imul
rolb
imul
lret
mov
fistpl
add
sub
jnp
xor
cli
or
jae
iret
pop
out
repnz
mov
push
jecxz
arpl
lcall
shll
or
push
lock
insl
jno
and
ret
pop
fdiv
xchg
xor
popa
jno
xchg
out
adc
ja
mov
mov
lcall
xchg
dec
mov
and
push
out
push
lcall
adc
mov
mov
push
testb
sti
das
sbb
or
adc
aas
sbb
adc
jnp
adc
test
push
sbb
jl
aad
cmp
push
inc
jns
imul
jmp
enter
adc
sbb
loopne
xor
neg
lcall
sbb
add
mov
xor
addb
xchg
sub
cs
mov
xchg
fs
or
xchg
lds
and
sub
mov
mov
movsl
sbb
ficoml
push
insb
lret
lods
and
and
push
imul
imul
sub
pop
adc
std
fwait
xor
dec
movsl
push
stos
mov
outsb
lods
mov
dec
aad
in
jne
sbb
scas
cmc
adc
pop
lret
test
mov
sarl
repz
and
mov
lret
adc
repnz
mov
repnz
fistpll
out
mov
and
pop
mov
fcoml
jae
ror
sbbl
testb
arpl
sbb
mov
lds
lret
jno
je
pusha
fcomps
in
xchg
cli
or
push
pop
and
lcall
mov
xor
lods
xor
add
ret
add
mov
sbb
jo
cltd
xchg
rorb
shl
adc
mov
into
sbb
sbb
jge
sub
push
cli
lods
sahf
les
pop
inc
mov
jmp
out
dec
pop
and
inc
iret
push
jno
mov
xor
dec
aam
mov
les
loope
mov
lret
mov
mov
fistpl
stos
icebp
push
fmuls
fdivs
adcl
lea
cmp
fisubs
leave
sbb
cwtl
sub
push
daa
daa
icebp
loope
lret
rorl
cmp
dec
enter
jmp
sub
pop
mov
sbb
cld
insb
imul
ss
dec
mov
lea
pop
pop
sub
into
test
inc
adc
mov
mov
pusha
ds
aam
aam
test
jmp
sbb
jg
or
xor
jne
aaa
cmpsb
sub
adc
sti
adc
xchg
add
push
fwait
movsb
pop
push
popa
inc
dec
popa
daa
pop
andl
xor
not
pusha
sbb
cwtl
jp
sti
arpl
scas
sub
frstor
cmpsl
test
dec
fistpl
push
aam
inc
pop
and
push
mov
adc
aam
cli
unpcklps
push
inc
xlat
nop
stc
inc
push
xor
mov
cmp
mov
xchg
cs
mov
add
aaa
enter
push
daa
rcrb
pop
cmc
sub
movsl
push
insl
or
push
mov
push
mov
jge
cmp
jecxz
pusha
cmpsb
sub
mov
dec
subb
xlat
add
sbb
fwait
nop
jge
testb
gs
repz
xor
mov
xchg
sbb
scas
lret
out
mov
push
std
sahf
stc
xchg
insl
orl
cmpsb
insl
das
mov
sti
xor
or
jmp
sub
inc
lahf
je
dec
mov
fisttpl
bsr
inc
mov
dec
sbb
in
pop
and
rorl
cmp
or
fdivrs
imul
xchg
rolb
push
insb
adc
dec
or
sub
ss
sbb
push
jmp
and
in
jnp
mov
and
mov
mov
movl
dec
add
das
inc
dec
iret
cmp
push
insb
xor
sbb
pop
add
in
lock
jmp
repnz
daa
or
lcall
mov
insb
add
xchg
add
aam
test
movl
push
sub
js
cmp
xor
insb
xlat
cmp
lahf
js
or
vmwrite
lcall
into
aam
in
push
sbb
pop
inc
jbe
cmpsb
xchg
les
add
push
mov
stos
mov
dec
in
adc
outsb
pusha
push
lret
sub
fsubl
mov
cmpsl
jle
loopne
data16
mov
push
sub
pop
outsl
mov
lahf
pop
mov
mov
xchg
sub
cmpsl
dec
aaa
enter
pop
pop
in
pop
mov
ja
lods
cwtl
out
in
push
cmpsb
sub
into
mov
mov
das
cmp
adc
pop
fs
sahf
scas
jle
add
push
push
ljmp
add
lret
or
xor
inc
pop
mov
mov
mov
add
cs
cmp
push
add
test
mov
mov
cmpsl
adc
ljmp
call
repz
pop
pop
in
and
push
shl
jp
idiv
pop
dec
aad
pop
movq
outsb
testl
or
stc
ljmp
test
mov
popa
icebp
std
mov
inc
jg
sbb
mov
adc
daa
ljmp
sub
leave
mov
lret
aad
pop
mov
insb
stos
mov
cmp
addr16
in
pop
int3
push
pusha
mov
dec
into
sti
jle
jno
inc
add
mov
les
sub
pop
jl
iret
in
int
jg
roll
repz
clc
dec
push
popa
stos
xchg
add
pop
data16
mov
or
fidivrs
addr16
mov
lret
inc
adc
mov
dec
fcompl
inc
leave
test
cmc
stos
jae
xchg
mov
sti
add
sub
in
jmp
xchg
nop
jge
adc
adc
cltd
fs
repz
pusha
jg
incb
mov
mov
xor
outsb
and
leave
sub
lds
xor
arpl
int3
dec
js
pop
shrd
xchg
scas
movsb
add
or
sbb
jmp
adc
mov
or
out
mov
data16
popa
les
adc
clc
sbb
add
ret
xorl
and
mov
xchg
add
jp
stos
mov
inc
push
inc
sbb
adc
icebp
pusha
dec
mov
fcoms
lahf
mov
xor
and
mov
inc
icebp
in
out
sub
or
ljmp
mov
fmuls
push
push
or
sub
sahf
loope
int
push
fldcw
sub
adc
adc
or
movsb
pop
dec
fmuls
andl
mov
push
das
adc
outsb
lcall
es
xor
adc
xlat
push
dec
sub
inc
push
pusha
pop
and
rolb
jb
cmpsb
ljmp
inc
inc
xor
orl
je
ja
inc
xor
cmp
fbstp
cmc
pop
mov
jle
std
inc
out
dec
cld
mov
leave
mov
push
mov
pop
aaa
inc
pop
jp
xor
add
dec
mov
testb
testb
pop
lahf
ret
xchg
sbbb
in
dec
mov
loopne
jnp
repz
push
mov
adc
lock
imul
and
out
pop
fisttpl
lock
push
adc
out
sbb
bound
ret
push
lods
push
and
mov
js
mov
scas
jbe
sbb
and
pop
roll
mov
cmp
ljmp
push
fldt
dec
dec
insl
sub
push
sub
xchg
and
test
lret
sbb
cmp
daa
addr16
loopne
repz
push
or
sub
add
cs
push
xchg
ror
cmpsb
lret
xor
xor
les
xchg
push
addr16
dec
cltd
je
ljmp
add
das
adc
stc
addr16
insb
ficoml
aas
aam
add
mov
movsb
push
jo
sbb
fdecstp
loop
push
inc
xor
xor
mov
jmp
cmp
mov
xchg
daa
cmpsb
pop
xchg
icebp
hlt
inc
push
and
fwait
pusha
mov
push
bound
push
sbb
fnstcw
sbb
cli
rorb
and
enterw
outsl
cs
push
mov
mov
subb
pop
inc
ds
cmp
adc
leave
push
mov
or
loopne
pop
ds
mov
add
shlb
or
and
jno
dec
pop
xchg
dec
pushf
sub
jbe
loopne
mov
and
xor
fldenv
cmp
enter
testb
arpl
mov
int3
loop
je
sub
add
popf
test
cmpsb
rorb
dec
addr16
out
and
bound
xor
test
or
xchg
fisttps
ss
push
out
faddp
mov
clc
cli
ret
aad
push
adc
fcoms
add
pop
cmp
jecxz
loopne
mov
in
arpl
push
xor
sarl
pop
pop
sub
cwtl
stos
in
lods
test
lcall
lock
adc
sarb
cld
into
push
lret
imul
lods
lods
pop
arpl
sar
mov
jb
mov
leave
adc
movl
aad
push
dec
add
mov
mov
scas
fisubrs
and
int3
dec
pop
mov
sub
dec
addr16
dec
push
inc
popa
pop
jge
cmp
in
cli
dec
js
cmp
bound
movsb
test
cmpsb
out
mov
repnz
cmpsl
mov
das
sub
insl
lock
arpl
xor
push
in
iret
cmp
xchg
jae
pop
xchg
icebp
sub
data16
fadd
ret
insb
stos
mov
in
push
or
dec
mov
vcvttpd2dqy
mov
in
loop
lock
ret
es
sbb
xor
push
cmpsb
mov
fisubl
mov
sbb
sbb
imul
jo
gs
movsb
cmpsl
int3
repnz
sti
enter
in
lcall
mov
arpl
sub
adc
inc
movsl
or
sub
ficoms
mov
xchg
mov
or
roll
cmp
sbb
dec
fisttps
daa
pop
out
jp
js
pop
into
lods
add
sti
xchg
cmpsl
scas
aas
stos
mov
movsb
adc
adc
sbb
aad
lds
or
movsb
dec
stc
fsubl
jb
jl
sub
push
jp
pop
fistps
in
xor
aad
mov
cmpsl
out
and
cli
push
xor
jg
jb
sti
pushf
fsubrp
data16
or
int
in
xor
in
fdivrl
mov
mov
add
mov
or
pop
mov
mov
mov
pop
iret
rorl
jae
xor
jnp
mov
dec
mov
jl
lea
mov
stos
and
add
test
sbb
into
popf
jno
aaa
xchg
ljmp
js
lahf
hlt
sub
adc
in
ss
sbb
sbb
leave
loope
scas
jmp
push
notb
sbb
es
or
loop
mov
mov
sbb
jnp
daa
out
and
sbb
fildl
mov
push
out
or
cmp
pop
xor
sbb
mov
jl
dec
mov
mov
adc
dec
pushf
or
dec
push
loope
in
sti
dec
scas
lret
enter
xchg
loopne
mov
mov
ret
mov
jns
data16
xor
iret
xor
dec
jmp
scas
cltd
push
dec
mov
mov
pop
dec
push
push
mov
jmp
cmpb
push
cwtl
unpcklps
push
mov
into
jecxz
cld
xchg
lret
sbb
mov
mov
hlt
pop
and
push
mov
sub
out
negl
addr16
lahf
jecxz
aam
pop
shll
outsb
cli
cld
xchg
xor
lea
stos
sbbl
in
sub
int3
fdivr
sbb
xchg
mov
daa
pop
dec
jno
inc
testl
fistl
mov
ffree
and
mov
mov
movsb
adc
mov
cwtl
inc
fidivrs
lcall
les
pusha
loope
hlt
std
sbb
shll
data16
in
add
fcompl
push
cmpsl
dec
cmpsl
push
out
cmc
cwtl
and
push
ja
stos
jmp
inc
xor
lds
loopne
ljmp
das
sbb
push
repz
xor
loopne
dec
mov
lods
cltd
adc
adc
shll
fwait
fdivrp
lods
ja
pop
out
lds
lods
andb
movsl
scas
pop
mov
scas
jp
jge
jne
xor
enter
mov
loopne
aad
xchg
mov
jbe
out
dec
leave
inc
xor
or
dec
or
cltd
shlb
pop
fcomip
sbb
jbe
pop
aaa
mov
mov
aam
inc
push
and
mov
outsl
inc
outsl
or
dec
mov
jp
ja
mov
jmp
out
mov
arpl
sti
enter
push
rcpps
mov
and
inc
negl
and
sub
imul
dec
add
lea
andl
negl
fcomip
push
xchg
or
cmp
movsl
out
sbb
and
shlb
xchg
dec
dec
repz
hlt
xor
xchg
mov
fwait
adc
mov
push
dec
adc
aam
jle
xchg
pop
cmp
mov
dec
mov
or
insb
jne
push
mov
push
repnz
cmp
jge
cmc
sbb
dec
aad
mov
aas
and
scas
cmp
call
jmp
inc
xchg
xchg
and
rcr
pop
cmpsb
gs
jmp
das
shlb
pop
sti
dec
jl
sub
sub
in
mov
xor
aas
test
push
imul
sbb
sbb
jns
imul
pop
adc
cmpsb
int3
popf
push
clc
gs
dec
push
int3
js
sbb
sub
lea
popf
pop
out
out
outsl
push
js
dec
dec
inc
or
inc
jmp
cmpsl
bound
js
mov
mov
mov
mov
sub
push
outsl
enter
pusha
fld1
aad
jnp
les
scas
sub
loopne
push
and
xor
shlb
hlt
jecxz
test
out
xor
add
gs
mov
mov
adc
jnp
and
xor
mov
insb
pushf
jae
adc
cmpsl
scas
in
xchg
in
mov
lahf
ret
jmp
xor
addl
mov
or
jne
jmp
repz
mov
cld
data16
stc
mov
push
mov
add
mov
adc
mov
mov
fildl
xchg
sbb
idivb
xor
pop
cli
pop
sbb
roll
cs
gs
cs
repnz
fsubr
mov
std
jl
cli
idivb
add
pop
rcrl
call
inc
mov
sub
lahf
sub
ret
les
cmp
and
xlat
inc
inc
fld
insl
scas
add
dec
sbb
insl
mov
ret
ret
pop
mov
or
jo
mov
sub
dec
xor
test
je
fcoml
xchg
imul
lret
xchg
cld
fs
xchg
andb
insb
test
add
or
dec
add
mov
push
add
sub
cltd
cwtl
xor
stc
cmp
push
popa
outsb
mov
mov
fs
jmp
sbb
insb
ret
inc
sbb
jmp
movsb
xor
loope
or
mov
lahf
push
int3
cld
mov
fs
pop
lods
ja
push
mov
xchg
fsubrl
rcl
xchg
in
sbb
mov
jg
mov
mov
adc
inc
sub
mov
xor
adc
ds
push
mov
lahf
mov
mov
sbb
pop
cmpsl
cmc
shll
fwait
idiv
pmaxub
arpl
pusha
jne
popf
xor
dec
xor
inc
lcall
jne
sahf
mov
xor
inc
mov
lods
add
or
sbbb
inc
mov
xchg
lods
adc
sti
es
and
cmp
push
sbb
cli
mov
sbb
jae
push
inc
pop
cmpl
adc
jp
dec
sub
mov
stc
xchg
gs
mov
push
or
xor
and
mul
push
idivl
mov
and
ja
xor
xchg
mov
fdivr
aas
mov
and
fldl
testb
push
push
pop
std
xchg
stc
push
sub
pop
mov
aad
pop
aas
rolb
mov
pop
aam
cwtl
cmp
mov
add
scas
lods
pop
aas
cwtl
push
out
add
loopne
je
xor
pop
jecxz
add
push
mov
ja
and
mov
in
add
jl
adc
xor
dec
in
cmc
mov
xor
pop
call
add
gs
cld
dec
jmp
pop
ficoml
sbb
cmpsl
ja
mov
xchg
or
xor
cs
sti
xor
shll
jecxz
mov
lock
jl
xor
push
sub
fidivrs
shlb
ja
cmpsb
movsl
insb
int
mov
sbb
sbb
orl
push
shrl
xlat
or
stc
ja
out
mov
pop
dec
push
test
incl
xor
inc
scas
mull
jmp
imul
das
fldt
pop
call
sbb
mov
push
sub
mov
xlat
shll
or
jg
pop
sbb
mull
xchg
pusha
iret
in
cmpsb
cmc
xchg
icebp
mov
inc
test
enter
or
and
fdivrl
fisttpll
sbb
cmp
lret
and
lret
fdivl
or
mov
adc
dec
push
xor
sbb
mov
push
jl
xchg
sahf
mov
cs
mov
mov
dec
das
int3
test
push
adc
loope
push
jl
dec
ss
pusha
xchg
into
adc
mov
mov
popa
out
jae
add
pushf
ja
rorl
mov
loope
and
fwait
push
push
aas
adc
sub
dec
stos
or
jns
mov
mov
imul
pop
out
xchg
clc
jmp
cmp
stos
fdivr
cmp
sub
loop
testb
aam
dec
out
mov
jg
adc
add
cltd
push
lods
jp
nopl
inc
rol
test
or
or
lock
lock
jl
jne
sbb
pop
cmp
shlb
cmp
out
icebp
sub
in
jmp
xor
cmp
or
hlt
mov
xchg
popa
sub
fwait
ja
adc
xor
pop
fidivs
shlb
jns
scas
sbb
fstpl
hlt
or
inc
test
nop
mov
pusha
sub
scas
negb
add
in
scas
xchg
mov
mov
in
sub
pop
clc
jg
fsubr
push
ret
les
inc
cs
lds
stos
cld
mov
xchg
cmp
xchg
jno
pop
adc
das
xchg
dec
xchg
mov
mov
and
sub
xor
out
cli
sti
or
mov
mov
lcall
shrb
adc
and
pop
pop
jmp
xchg
stos
push
mov
in
bound
push
lea
add
mov
xchg
nop
aad
lds
inc
sbb
cltd
or
leave
cwtl
ror
sub
das
mov
lods
cltd
aam
mov
cmpsl
insl
push
jl
mov
ljmp
out
test
adc
sahf
popl
inc
cmpsb
adc
std
sbb
ja
pop
pop
dec
pop
sub
sub
sbb
popf
aaa
and
or
pop
cli
jns
in
or
mov
and
sbb
xchg
sbb
call
sbb
int3
mov
iret
sub
test
fbstp
sti
int
rorb
adc
xchg
mov
stos
sarb
cmp
sbb
pushf
stc
sub
sub
ret
jl
test
push
test
ljmp
out
xchg
mov
mov
mov
outsb
cmp
jbe
pop
cmp
cmpsl
xor
cmpsb
leave
fstpl
mov
idiv
cmp
fadd
in
ret
imul
mov
sub
sbb
inc
gs
jle
enter
scas
mov
subb
jmp
sbb
sub
adc
mov
sbb
fsubs
push
movsl
push
cld
mov
dec
fnsave
lds
add
cltd
xlat
pop
push
cld
or
loop
dec
xchg
jl
jmp
insb
stos
or
cmc
cmpl
xchg
movsl
jae
movsb
mov
icebp
dec
push
imul
in
xor
jbe
push
leave
bnd
sbb
cmp
sahf
outsl
mov
jno
or
mov
add
jnp
or
pusha
mov
push
insl
jns
or
mov
adc
fadd
pop
clc
repz
cltd
ja
xchg
push
pop
add
in
test
addr16
cld
dec
mov
fldl
add
rcr
sbbl
adc
xchg
lcall
test
mov
mov
inc
and
sub
movsl
and
mov
dec
pop
das
out
add
jp
mov
xchg
rorb
pop
stos
fisttpll
cltd
das
int3
inc
jns
jl
test
mov
or
pop
or
pop
push
out
sahf
aad
xor
jmp
mov
dec
mov
call
xor
lods
fcoms
add
mov
xor
mov
inc
aad
popf
push
or
les
scas
pushl
ret
faddl
les
jg
or
cmc
or
mov
repnz
mov
lret
xchg
cmp
push
push
mov
mov
fnclex
jg
pop
pop
or
push
and
jns
mov
xor
mov
or
lds
orl
push
sar
lods
sub
or
and
xchg
inc
lret
mov
lds
js
mov
negb
xor
sub
rorl
sbb
mov
pop
pusha
or
jge
and
and
aas
in
fwait
enter
sub
push
mov
lcall
mov
lds
icebp
sub
pop
pop
and
dec
jnp
pop
xchg
mov
sbb
cmpsl
fsts
add
insl
int3
gs
cmp
fdiv
pop
xor
mov
clc
repnz
ja
out
nop
insl
ficoml
dec
push
inc
shll
ds
jnp
pop
mov
push
pop
cmp
and
aad
or
out
xchg
push
loope
pand
jmp
testb
popf
aas
andl
das
cwtl
pop
mov
sbb
and
adc
xchg
mov
inc
ret
and
jnp
outsb
inc
push
xchg
jecxz
daa
shlb
inc
int3
sbb
mov
popa
cli
sub
test
daa
or
imul
mov
scas
mov
nop
jl
loop
jmp
pop
inc
mov
inc
ffreep
inc
xor
sbb
sahf
addr16
pushf
mov
ljmp
xchg
jp
cmc
lret
and
jp
push
dec
mov
fildl
mov
cmp
popf
imul
rcrb
stos
xlat
add
sarl
gs
lods
pop
push
jp
xchg
cld
lock
sub
ret
and
cmp
sbb
or
icebp
xchg
mov
pop
lds
jge
or
push
fmuls
push
mov
int
or
push
xor
mov
dec
jge
mov
inc
fwait
lds
inc
add
mov
repz
test
lahf
sbb
push
inc
mov
loop
cli
jl
and
lahf
jae
mov
movsl
add
push
cmp
pop
cmpsb
int3
sbb
mov
stos
and
fs
adc
lahf
mov
repnz
je
iret
jno
dec
xor
jl
nop
outsb
push
std
xor
add
pop
cmp
pop
in
xor
fld
fisubrs
jnp
pop
shll
cmp
lods
xchg
sbb
lds
adc
xchg
sub
aaa
loopne
jo
fisttps
xchg
lods
inc
pop
inc
cmp
and
into
inc
shl
ljmp
push
add
adc
js
cmpsb
mov
mov
pop
int
push
mov
shlb
pop
mov
lret
mov
adc
mov
ret
jp
ret
enter
cs
jl
xchg
push
add
pop
lods
int
inc
add
sub
call
scas
xor
cmc
or
add
jne
mov
mov
and
adc
cli
sbb
fnstenv
test
adc
das
lret
mov
sbb
mov
sub
sbb
sbb
and
stc
in
in
push
loopne
subl
or
mov
daa
lcall
or
sub
adcl
in
and
pop
outsb
stos
mov
cmp
mov
push
adc
mov
xlat
and
sti
mov
ljmp
xadd
or
cmp
fistps
out
cli
push
pusha
rclb
addb
adcl
xchg
push
xor
leave
repnz
push
sub
mov
mov
in
jecxz
inc
cmpsl
pop
pusha
out
mov
int
loopne
push
cltd
aaa
push
cmpsl
and
es
sarb
mov
and
lock
loop
pop
adc
fxch
jns
pusha
add
xor
test
test
dec
pop
xchg
jmp
pop
lret
inc
add
push
or
dec
loope
adc
out
add
lods
lods
stos
push
lret
leave
movsl
loope
enter
loope
lea
repz
sbb
das
cmp
xor
loope
int3
dec
js
xchg
daa
fstpl
in
ret
mov
std
flds
sbbl
push
mov
xor
ljmp
outsb
movsl
inc
clc
pop
cmp
pop
bound
cmp
xor
out
adc
imul
stc
add
adc
sarb
je
ljmp
out
dec
orl
xor
pop
xorl
shrl
aaa
inc
lret
jg
in
add
mov
sbb
xchg
inc
and
frstor
dec
xor
inc
into
add
sub
insl
lods
cmp
repnz
outsb
inc
loop
mov
push
movsb
sub
dec
fsubrl
int3
mov
xor
popa
xor
inc
xor
mov
and
mov
lret
scas
loopne
jle
cli
addr16
lahf
fsts
mov
insb
inc
adc
cli
jnp
cmpsb
pop
pop
ror
js
push
das
out
mov
sub
push
movsb
mov
mov
imul
mov
mov
out
movl
dec
pop
mov
call
lock
popa
cmp
mov
xchg
int3
orb
xor
iret
jbe
loope
jle
movsb
pop
push
aad
inc
fabs
jl
jo
fidivs
jnp
xor
xchg
pusha
pusha
leave
jp
cmp
incl
cmp
scas
loope
and
sub
rcll
jge
sbb
xchg
adc
pushl
out
inc
js
inc
add
jecxz
cmovl
xor
xchg
scas
mov
movsl
fcomi
and
jo
ficoml
lock
inc
xor
fsubl
add
mov
mov
and
sub
pop
mov
in
jl
push
adc
push
aam
lods
inc
inc
int
jbe
xchg
ja
cmc
or
jb
fists
out
mov
arpl
mov
out
sub
push
in
xor
push
sbb
cltd
sbb
rclb
popa
mov
aam
movsb
hlt
sbb
scas
test
pop
mov
aad
test
out
dec
nop
orl
pop
dec
popa
stc
cwtl
jb
and
pop
lock
mov
dec
test
cmp
vmwrite
adc
sub
xchg
mov
push
scas
pop
adc
add
xor
xor
or
xor
mov
jo
addr16
in
cmpsb
cmc
rcll
sti
push
cmp
imull
rcrb
cmp
jb
je
orb
mov
sub
jae
mov
mov
sub
jns
fldt
sub
subl
add
rclb
sahf
imulb
stc
cmp
out
lahf
jl
push
dec
sbb
sub
push
add
stos
adc
and
fwait
leave
out
into
sbb
imul
test
lcall
adc
lock
dec
xchg
ficoml
jb
pop
out
mov
mov
sub
and
dec
subb
mov
mov
xchg
xchg
cwtl
sub
out
dec
fs
cmpsb
mov
cmp
stos
inc
pop
fmuls
cs
xchg
push
ror
mov
inc
call
mov
push
mov
sub
and
icebp
call
mov
push
mov
sbb
mov
fcomps
int
lea
cmpsl
dec
add
cmc
jae
pop
sbb
add
popl
loopne
inc
cmp
inc
mov
pusha
daa
test
and
sub
mov
jp
cli
mov
jp
repnz
and
pop
sahf
jno
push
call
int3
push
sbbl
shrb
imul
jno
inc
pop
cltd
jne
ret
mov
rorl
sbb
arpl
sub
ss
jno
popf
loop
add
xchg
jne
and
popl
mov
shll
test
js
or
jae
andl
push
ret
lock
jbe
xchg
and
add
mov
out
not
jl
add
stos
loope
lcall
and
bound
mov
sahf
rcll
iret
jle
mov
jbe
cltd
mov
lret
xor
mov
out
pop
dec
repnz
pop
les
arpl
loopne
pop
mov
sub
mov
shlb
fisubl
popf
scas
shl
push
mov
cmpsb
inc
xchg
notb
sub
mov
rcr
or
mov
cmp
sub
cmc
mov
xor
mul
jo
xor
xor
and
mov
loopne
push
pusha
sbb
test
mov
in
mov
mov
add
pop
iret
mov
sbb
mov
nop
dec
adc
inc
outsb
dec
or
xor
ds
mov
icebp
popa
pop
ud1
out
pop
ret
flds
dec
pop
fisubrs
cmc
inc
rorb
sub
jno
inc
cmpsl
dec
insl
sbb
jecxz
xlat
imul
cmp
std
jg
loopne
je
and
ficomps
das
sbb
jmp
imul
sbb
punpckhdq
sbb
ds
xor
or
stos
int3
mov
add
push
add
mov
in
rcl
push
iret
ret
fwait
pop
out
lock
inc
mov
inc
pop
adc
mov
mov
jo
mov
sub
sub
xchg
setae
movsl
sub
out
inc
add
in
in
dec
cmc
in
inc
lcall
or
inc
scas
leave
mov
push
out
sahf
mov
lods
ret
dec
sub
pusha
test
test
dec
mov
mov
mov
xchg
dec
mov
or
stos
gs
add
cmc
mov
test
arpl
jmp
or
jno
or
fwait
int3
push
scas
movsl
mov
push
and
loop
jno
push
sub
add
sbb
adcb
inc
sbb
lahf
or
shlb
lods
xchg
adc
fnsave
scas
xchg
adc
mov
out
movsb
ss
aad
fbld
loopne
mov
test
mov
cmp
pushf
push
in
dec
mov
push
mov
pop
push
cmp
inc
and
cmp
inc
stos
imul
int3
ret
insb
in
xchg
fwait
mov
push
add
imul
push
mov
pusha
rcrb
in
les
sbb
pop
int
adc
daa
jbe
inc
pop
test
lret
push
jno
push
mov
stos
or
and
adc
imul
cmp
jae
dec
dec
push
sub
aaa
add
shll
outsb
xor
xchg
not
scas
sub
sub
ljmp
test
pop
pop
cld
xchg
sub
clc
xchg
push
cmova
push
sahf
inc
mov
sbb
sbb
mov
mov
addl
and
push
jg
in
loop
inc
jge
jle
jbe
mov
cmpsl
stos
xchg
mov
push
sbb
inc
repnz
daa
sahf
mov
jo
sub
mov
mov
mov
pop
fs
push
jns
cmp
xchg
cmp
mov
mov
addr16
xchg
pop
stc
in
adc
call
push
push
add
or
in
jnp
cmp
mov
out
ret
xchg
mov
mov
push
rcrl
pop
aam
movsb
rorb
lcall
dec
stos
ja
sahf
aam
or
cwtl
addr16
cmpsb
xchg
arpl
leave
not
fdivp
pop
sbb
fists
mov
add
pop
popl
mov
pushf
loopne
and
into
pop
gs
pop
cmpl
xor
inc
and
lahf
insl
lret
clc
aad
or
cld
sbb
jo
jmp
sub
das
mov
xorl
sub
sub
xor
xor
ficompl
mov
dec
xor
loop
sub
scas
push
sbb
fucomi
scas
xchg
jno
mov
call
loopne
dec
movsl
insb
mov
pop
sub
push
cmp
xchg
addr16
pop
fistpl
dec
mov
out
pop
mov
jns
repnz
adc
inc
cmpl
icebp
cld
or
inc
mov
mov
mov
aas
icebp
mov
orl
sti
dec
jo
jns
mov
jl
push
adc
lods
out
sub
mov
mov
cmp
in
fdivr
imul
lahf
mov
gs
add
loopne
ret
sbb
test
sub
call
push
dec
xor
ljmp
jg
rcll
outsl
loop
test
cmpsb
test
sbb
fwait
mov
add
test
pop
hlt
loopne
mov
enter
xchg
push
testl
dec
and
sbb
outsb
sbb
dec
aam
fildll
inc
fwait
movsl
xchg
test
jl
pop
sub
pop
call
mov
test
cmp
xchg
enter
roll
xchg
flds
jo
mov
subl
jns
fists
ds
dec
jb
sbb
xlat
into
push
int
mov
pusha
ss
jns
dec
or
dec
or
cli
and
push
aam
lds
push
jg
stos
addb
push
dec
add
mov
cltd
jae
enter
ds
rcrl
pop
mov
shrl
sbbl
cmp
xchg
repnz
repz
movsl
das
inc
jno
mov
inc
sub
sbb
insl
sub
push
dec
or
cmc
les
imul
dec
jecxz
inc
repnz
inc
pop
add
jnp
jmp
cmpb
dec
push
add
mov
stc
sub
fs
fwait
and
ret
rcr
fisubl
dec
sti
lods
test
jb
and
dec
xchg
lret
iret
sub
jge
adc
jno
js
inc
rclb
mov
fcmovbe
cmp
xchg
mov
cli
mov
sbb
xchg
or
sub
jmp
outsl
stc
mov
int
outsb
mov
outsl
aad
lods
push
push
pop
fistpll
mov
add
sbb
test
hlt
sbb
xchg
int3
xor
insl
and
aaa
xchg
adc
int3
sbb
divb
fs
jmp
fdivrl
fistpl
das
iret
loope
jecxz
and
enter
shll
mov
xor
inc
daa
cmp
lods
loopne
or
mov
mul
das
mov
es
imul
loop
sbb
imul
leave
fisubrl
inc
jbe
and
int
and
add
xor
push
lods
xchg
pop
lds
call
repnz
ret
aaa
lods
jbe
xor
faddl
dec
inc
fcmovnbe
loope
xorl
sahf
hlt
fisttpll
arpl
test
test
adc
or
in
fnstenv
aam
or
inc
imul
sub
pop
and
mov
cwtl
call
xchg
inc
add
xor
mov
mov
mov
push
roll
gs
lret
xchg
mov
xchg
pushf
sub
mov
cmp
arpl
fcmovu
or
mov
inc
aam
jmp
loope
dec
cmpb
ds
push
fdivs
pop
fwait
sub
inc
daa
dec
cmp
pop
fdivrl
sub
jle
das
cmp
insb
xchg
test
add
lods
add
add
shlb
and
loopne
gs
nopl
cld
add
xchg
dec
sbb
out
mov
iret
jb
xlat
aam
in
sbb
dec
icebp
xchg
xor
shlb
sbb
xor
jp
icebp
or
jecxz
hlt
pop
push
test
xchg
mov
push
cmp
sbb
jb
sub
lret
loop
mov
arpl
jnp
xor
loope
sub
push
inc
scas
jecxz
int
cmp
or
outsw
outsl
dec
sub
imul
push
jnp
push
mov
std
rolb
add
sub
cli
daa
call
xchg
dec
push
inc
int3
out
mov
mov
add
clc
mov
ss
inc
xrelease
arpl
jle
xchg
sub
cmc
punpcklbw
push
dec
sub
aas
dec
nop
lret
sub
in
mov
inc
sbb
mov
xor
fisttpll
adc
xor
cli
xchg
pop
adc
jl
adc
js
xor
or
sbb
in
mov
mov
mov
xchg
fmull
cs
stos
mov
repz
inc
out
outsb
iret
dec
and
mov
loop
xchg
inc
test
jno
dec
push
test
repz
xor
jecxz
cltd
lods
pop
mov
mov
test
test
add
leave
dec
pushf
sub
pop
sti
push
jae
adc
xlat
cltd
lcall
imul
and
and
stos
fs
aas
rcrl
jbe
cmp
in
xchg
mov
shrb
ret
scas
adc
adc
loope
out
xchg
pushf
fcmovnu
call
and
inc
sarb
in
int
push
jne
xchg
and
pop
ret
inc
adc
sub
pop
popa
fucomip
roll
call
push
rolb
adc
sub
xchg
lcall
ret
arpl
dec
xchg
and
std
adc
sbb
bound
dec
adc
aam
or
imul
jmp
sti
add
psubsw
loope
testl
sub
add
sub
je
leave
aas
xchg
ror
aas
lahf
lds
pop
cmp
cmp
orb
jge
in
hlt
sbb
fbld
mov
lea
mov
std
pop
xor
cwtl
adc
int3
repz
ja
pop
mov
lret
sti
dec
sbb
sti
ficomps
and
jnp
mov
pushf
add
test
jbe
adc
pop
addr16
clc
lds
rcrl
outsb
and
sub
mov
shrl
add
fistl
pop
frstor
clc
sahf
adc
loopne
fwait
mov
sbb
mov
mov
push
in
dec
mov
xchg
add
cmp
add
sub
sarb
rclb
lcall
lret
jmp
mov
sbbb
ret
or
ret
ds
mov
mov
inc
loop
or
push
pop
int
sbb
int3
mov
dec
sti
pushf
lret
cmp
in
xchg
lea
out
mov
sbb
jnp
insb
mov
call
inc
or
adc
inc
or
add
repz
xchg
iret
ret
popa
push
or
mov
push
aaa
loope
pop
imul
mov
or
dec
xor
pop
dec
xor
mov
in
or
cmp
push
cmp
mov
xchg
dec
xor
pop
insb
lcall
and
dec
lret
and
adc
adc
fsts
mov
or
sti
mov
or
mov
inc
dec
jne
enter
and
mov
or
fsubl
mov
fstp
mov
xor
cs
stc
mov
mov
fucomp
sub
mov
iret
sbb
popa
push
mov
aad
mov
xor
mov
pop
adc
jbe
xor
push
push
adc
mov
imul
add
add
stos
jno
lods
or
ret
pop
aaa
aad
shl
loop
pop
mov
dec
cwtl
ret
jns
sbb
dec
jl
pusha
lds
inc
sub
pusha
test
test
jnp
jmp
mov
cmp
inc
gs
xchg
stos
loope
push
push
jle,pn
bound
stos
lods
les
inc
in
mov
subl
in
out
ret
add
stos
lahf
add
or
orb
jb
movsl
ja
mov
sar
insl
pusha
lds
mov
adc
xor
xor
mov
lods
push
pop
int3
jl
and
dec
mov
cmp
ds
sub
ret
mov
sti
and
imul
xor
push
push
mov
mov
ret
getsec
jmp
mov
mov
repz
fldenv
enter
lcall
shlb
jae
das
das
cmp
mov
sbb
out
sbb
add
sti
adcb
or
lods
in
dec
fildl
icebp
dec
fisubs
inc
and
mov
lret
mov
sbb
jne
out
inc
out
mov
lock
jb
hlt
pushl
out
jae
out
arpl
inc
push
push
fwait
cmp
bound
in
pop
repnz
pop
pop
fbstp
add
mov
ss
add
xchg
out
jbe
test
adc
cmp
xchg
pextrw
mov
movsl
std
pop
add
push
or
outsb
jecxz
lret
push
push
pushf
mov
addb
xlat
fldl
jbe
dec
lds
lds
lahf
repz
sbb
rolb
iret
jecxz
jl
dec
jb
call
lock
mov
inc
pause
mov
pusha
mov
lock
pop
movsl
dec
call
shrb
pop
scas
test
and
loop
jg
cmp
jae
cmc
fisttps
push
sahf
cli
sub
stc
test
dec
xor
sahf
ret
fs
cmp
pop
mov
inc
in
jp
lds
or
outsb
test
inc
xchg
add
pop
and
lods
pop
arpl
mov
lret
pop
inc
add
mov
jp
mov
bound
adc
push
in
enter
cld
in
pop
push
xor
cli
lods
out
mov
or
mov
psubusb
inc
dec
and
imul
or
popa
jbe
inc
hlt
or
push
inc
cmp
shl
fdiv
and
mov
cmp
pop
lret
flds
mov
repz
pop
loopne
jge
cli
jl
dec
or
xchg
xchg
mov
push
inc
movsb
sub
sarl
jmp
dec
cwtl
add
mov
arpl
icebp
mov
nop
call
mov
frstors
addr16
push
or
pop
cld
pop
movsl
mov
sub
scas
mov
sub
gs
scas
or
stos
xor
lahf
fcmovnu
mov
cwtl
mov
loop
mov
mov
jnp
xor
jns
push
imul
sbb
push
mov
out
cli
scas
imul
stc
repz
xchg
xlat
jmp
jecxz
and
dec
dec
cwtl
call
push
cmp
push
fcom
in
subb
pop
jns
jbe
xchg
int3
stos
mov
pusha
cmpsb
imul
js
jge
mov
sbb
xor
sbbl
jb
aam
mov
mov
cmpsb
repz
pop
jp
inc
mov
movsl
out
push
xor
insl
mov
fistpl
cmpsb
in
stos
mov
push
in
ja
adc
inc
xchg
and
fimuls
add
and
leave
mov
fwait
xchg
into
faddl
enter
xchg
or
push
scas
loopne
cmp
jg
add
sub
pop
mov
push
push
addr16
ja
dec
ficompl
insb
lods
cwtl
aam
pop
pushf
test
aas
addr16
push
out
nop
inc
or
aam
mov
fwait
mov
inc
cmp
xchg
cld
jp
movsb
cmc
dec
sub
mov
dec
pusha
addr16
adc
fimuls
ja
sub
fidivrs
jmp
notl
jmp
jmp
pop
add
mov
jmp
rcrb
add
leave
jecxz
sub
mov
xchg
xchg
push
inc
addr16
je
mov
pop
mov
pushf
stos
jl
in
scas
gs
les
cmp
mov
cmp
mov
outsl
ljmp
repnz
insl
das
lret
or
aad
lret
or
scas
mov
inc
sub
jno
or
call
push
sub
mov
jg
dec
pop
lahf
and
sub
dec
outsl
or
movsb
pop
clc
sbb
cld
adc
rcrl
lock
xchg
pop
icebp
gs
xchg
sahf
into
mov
incb
mov
push
dec
lock
mov
in
out
add
add
iret
adc
gs
sbb
inc
bound
nop
xor
push
push
popa
pop
inc
and
mov
fs
cmp
mov
xor
dec
leave
jecxz
pop
cwtl
aam
mov
inc
insl
or
xchg
adc
mov
lret
bound
lcall
or
ss
in
in
leave
sub
out
popa
fidivrl
mov
adc
or
popf
push
popa
add
sub
sbb
insb
xor
inc
or
cmp
cmpsb
inc
jge
pushf
shl
loop
and
dec
sub
push
jmp
inc
aam
ja
std
xchg
adc
and
sbb
add
mov
mov
pop
in
ljmp
les
fidivrl
lret
add
jle
adc
jo
iret
stos
jle
xlat
lods
sbb
adc
dec
dec
cmpsb
fstpt
pusha
subb
sbb
push
mov
ds
add
fistl
xor
push
clc
jae
outsl
dec
ja
in
cwtl
pop
xchg
mov
mov
pop
dec
cmpsl
and
xchg
aas
lods
test
xchg
ja
pop
nop
sub
popa
and
fnstcw
call
xchg
inc
pop
push
or
xchg
mov
push
ds
mov
clc
jecxz
mov
out
sbb
mov
mov
into
mov
dec
lahf
leave
inc
fprem
mov
xor
and
ret
sbb
sub
pop
push
and
popa
mov
adc
cmp
gs
mov
roll
test
mov
add
xor
xor
lods
out
cs
das
xchg
in
jmp
dec
push
imul
fists
or
inc
add
ja
jae
sub
or
push
enter
pop
xchg
cmp
dec
push
imul
inc
pop
adc
arpl
push
sub
jge
lret
mov
add
mov
iret
shrl
jae
icebp
lahf
les
sahf
mov
in
fildll
adc
xor
cltd
fcmovne
in
loope
das
aaa
push
fs
fcmovbe
outsb
jp
or
fsubrl
mov
push
push
insb
out
xor
sbb
mov
andl
negl
fists
aam
dec
inc
out
xchg
shrl
jbe
mov
fcomps
mov
mov
or
xchg
cmp
cmp
add
out
add
cld
cmp
push
pop
sub
sti
fists
dec
sbb
ljmp
cmpb
popf
mov
add
dec
push
inc
inc
out
in
and
xchg
mov
cmp
sub
out
pop
mov
jl
inc
movsl
push
rcll
fcmovu
jb
in
mov
in
bound
mov
lahf
jle
ror
outsl
int3
adc
inc
pop
jle
mov
cli
shlb
test
les
sarb
fcompl
push
sarb
push
ret
mov
xchg
or
xchg
les
dec
lcall
adc
test
pop
das
mov
icebp
pop
and
xor
std
nop
clc
dec
adc
jns
loopne
lods
sti
xor
stos
inc
adc
pop
pushf
jbe
jecxz
xor
outsb
dec
add
mov
addl
lods
mov
add
inc
xchg
cmc
sbb
jg
loope
pop
or
mov
cmp
jbe
sbb
pusha
cmpsb
test
push
outsb
pop
or
jg
inc
enter
dec
icebp
dec
pop
and
ret
mov
or
dec
stc
inc
in
cmpsb
cli
and
pusha
stos
stos
sbb
jne
dec
lods
sti
jae
loopne
xchg
pop
mov
and
fs
popl
sarb
js
cmp
imul
pop
addr16
xchg
stos
fisubrl
inc
adc
fsubrs
std
adc
mov
adcl
movl
nop
mov
sbb
fucomp
ja
dec
pop
or
in
jp
cmpb
std
xchg
pop
lods
imul
pop
jb
adc
test
out
lahf
call
mov
mul
fiadds
dec
cmc
adc
inc
adc
pusha
call
aas
outsl
sbb
or
imul
mov
fnstenv
adcb
mov
mov
mov
sub
jno
mov
xor
jg
rol
adc
push
mov
cli
fidivs
imul
jmp
out
cli
sub
cmpsl
sub
ss
imul
mov
out
cmp
dec
lock
adc
divl
idivl
jle
repnz
ljmp
and
jno
mov
add
jns
adc
pop
movsl
push
fcomip
jg
jg
mov
cld
add
data16
add
or
or
out
in
and
enter
inc
hlt
pop
or
fstpl
cmpsl
pop
je
push
sub
mov
mov
push
loope
sub
es
push
xchg
ficoms
out
pop
call
inc
adc
setge
sbb
scas
cwtl
bound
pop
xchg
std
adc
cmp
test
clc
insl
mov
mov
aam
jbe
cmp
mov
ss
push
mov
pop
inc
jge
in
popf
push
add
mov
pop
mov
test
add
or
push
out
or
pop
inc
out
mov
push
add
xor
inc
mov
inc
dec
inc
dec
sbb
pop
fldt
and
add
leave
cmp
std
xchg
loope
fs
push
dec
fmull
or
mov
mov
or
inc
jne
call
xchg
int3
icebp
jecxz
filds
cs
aaa
or
xchg
jecxz
xor
loope
daa
cmp
jle
push
mov
pushf
lods
inc
leave
adc
test
out
sarb
adc
xchg
and
xchg
jl
cs
aad
pushf
cltd
fldt
add
mov
scas
andl
fsubrl
push
in
icebp
sub
pop
inc
inc
xor
jle
fwait
mov
test
ja
pop
mov
insb
push
or
cmp
loop
cmp
mov
mov
pop
mov
sub
pushf
imul
dec
loop
nop
inc
lds
aas
cwtl
test
arpl
pushf
fmul
inc
cltd
mov
mov
lods
je
in
es
mov
aaa
mov
mov
mov
popl
jne
movsb
out
dec
pusha
nop
inc
les
in
push
mov
lock
std
mov
mov
mov
xchg
mov
je
mov
and
mov
ret
mov
ret
mov
enter
mov
aas
pop
jmp
ja
mov
push
imul
cmp
jmp
icebp
lock
jno
mov
inc
mov
pushf
shrl
xor
dec
insl
sub
add
mov
xchg
icebp
in
movsl
mov
fsubs
test
mov
xchg
aad
subb
sar
loopne
or
pop
nop
push
insl
cs
test
push
roll
roll
cmp
insl
call
inc
loop
out
pop
repnz
aaa
movsl
or
or
pop
rcll
xor
adc
cld
test
jbe
stc
mov
orb
test
movsl
mov
in
or
inc
xor
rorl
in
dec
adc
sbb
jmp
sbb
or
add
repz
jmp
add
sahf
jl
in
mov
aad
adc
adc
in
aam
popa
out
xchg
scas
ret
les
or
mov
cmp
pop
mov
jnp
das
test
or
cmp
out
fistps
clc
insb
jne
dec
aam
mov
mov
mov
pop
sub
stos
outsl
mov
enter
sbb
mov
fcmovne
lea
icebp
sub
and
mov
pop
insb
jo
je
mov
fldt
jns
sahf
inc
mov
sub
adc
sar
mov
xchg
inc
jne
std
enter
jp
inc
pop
pop
mov
jge
jecxz
jl
mov
xor
imul
jnp
enter
pop
mov
inc
adc
imul
aam
dec
pop
popf
mulb
jne
insl
pop
push
sub
popa
mov
test
push
cmpb
and
push
dec
mov
or
cmpsb
adc
jg
sbb
push
inc
inc
push
fstp
xor
test
inc
add
loope
aaa
scas
cltd
inc
clc
imul
pop
mov
outsb
test
add
pop
mov
mov
das
sar
sbb
push
xchg
pop
cs
xchg
test
push
and
jo
fbstp
movsb
iret
movsl
outsb
lret
es
jl
mov
aaa
sbb
push
mov
mov
sbb
adc
scas
fwait
mov
mov
xchg
inc
ret
inc
repnz
mov
divl
mov
xchg
sub
push
daa
push
jl
mov
adc
cmc
push
mov
dec
aas
mov
fisubrl
push
xor
push
and
jl
jmp
or
add
shrl
pop
in
clc
adc
mov
cmp
shlb
dec
pop
shlb
push
es
lods
clc
and
mov
sbb
inc
sti
das
mov
cld
test
adc
and
pop
shl
fsubs
je
shll
test
stos
pop
lods
shrl
int3
and
jae
mov
sub
mov
add
ret
or
jae
pop
inc
cmp
es
imul
lock
fmuls
jg
mov
jmp
mov
insb
shlb
cmpsl
cmp
and
outsb
aam
mov
xor
out
test
andl
leave
jbe
mov
xchg
xchg
mov
add
and
icebp
inc
push
push
sbb
add
xlat
push
and
cmp
push
inc
mov
std
cmp
daa
insb
mov
xchg
xchg
pop
dec
int
jp
mov
jl
xchg
dec
fmul
fcoms
dec
adc
jne
xor
pop
and
or
cmp
sahf
cld
or
cmpl
inc
scas
jge
xchg
mov
mov
imul
fistpll
mov
and
or
rclb
lret
ljmp
movsb
inc
scas
jae,pn
push
and
int
fcomi
mov
in
mov
incl
test
in
jb
mov
push
mov
push
pop
cs
pop
add
mov
sbb
add
cmp
jle
pop
and
add
mov
sbb
dec
adc
ret
xchg
subl
ljmp
cwtl
call
sub
je
push
lahf
dec
cmp
in
ds
sbb
enter
hlt
mov
out
xchg
jne
movsl
inc
es
push
and
push
stc
xor
test
mov
sbb
and
in
popa
adc
fwait
subb
add
testl
cmp
mov
mov
push
outsl
dec
test
cmp
ss
jmp
mov
inc
xor
das
and
adc
pop
rolb
loope
mov
xchg
test
ds
adc
test
imul
aam
int3
jl
aas
dec
fsubl
dec
or
pop
clc
lret
jge
lcall
sub
push
sub
lcall
cltd
mov
out
and
test
inc
inc
mov
sahf
jle
jp
push
add
inc
inc
jmp
test
push
xor
or
cmp
mov
mov
pop
xchg
nop
ficomps
inc
push
xor
dec
sub
lahf
out
imul
inc
gs
sbb
or
jl
mov
ret
dec
call
gs
cmp
sub
xor
pushf
icebp
arpl
xor
fucomp
mov
sbb
fisttpll
mov
pop
ret
pop
jnp
pushf
mov
pop
adc
pop
push
ljmp
aad
repnz
xchg
pop
sahf
mov
fstpl
stc
js
add
or
mov
idiv
push
pusha
and
xchg
lret
mov
shr
lahf
rol
ja
xlat
pop
push
lds
sub
das
inc
adc
fsts
pusha
sub
xchg
or
rcrl
push
fwait
mov
vpunpckhwd
test
lods
pusha
hlt
jle
loope
jmp
mov
jb
fwait
gs
sahf
and
jno
xorl
cmp
sti
cmpl
test
xor
mov
adc
aam
cmova
aaa
jp
int3
lea
push
jno
lods
in
or
ja
or
es
daa
xchg
push
subb
push
push
add
mov
out
sub
jge
adc
fmull
pop
adc
add
inc
std
jae
sbb
js
fisttps
mov
ljmp
sahf
or
mov
push
dec
xor
xor
pop
adc
dec
xor
test
shll
sarl
mov
sub
push
xor
lahf
fstpt
hlt
mov
jns
stc
xor
loopne
push
adc
add
or
out
pop
mov
rcll
mov
testb
popf
push
repz
sbb
test
loopne
pop
lcall
leave
loop
in
popa
fdivrs
sub
jae
and
mov
cmp
cld
sbb
test
adc
pop
mov
jae
lds
add
inc
xchg
arpl
push
mov
arpl
sub
lock
add
dec
arpl
cmp
xchg
jno
inc
add
push
inc
cmp
loope
outsl
push
push
inc
lcall
lret
cmp
sahf
jns
pop
or
repz
insl
or
mov
xor
mov
xlat
push
loop
xchg
jge
das
jle
mov
inc
push
add
or
xlat
pusha
mull
fwait
movsb
mov
mov
cmc
cmp
imul
ret
fwait
mov
std
or
je
fbld
cmpb
sbb
fldenv
clc
fcmovu
dec
movsl
adc
jno
in
sar
inc
int3
jno
fwait
dec
mov
pop
sub
lds
mov
lret
push
out
jmp
out
shl
popf
sub
xor
mov
cmp
jno
movsl
cmp
scas
fistl
xorb
jg
cmpl
insb
pusha
inc
push
ret
mulb
ret
mov
jbe
adc
pop
add
shlb
call
stc
frstor
fisubrs
es
mov
add
pop
js
dec
jne
mov
xor
jg
cmp
pop
lret
jmp
pusha
or
xor
cli
jl
mov
cmpsl
push
outsb
out
nop
and
sub
out
daa
pop
out
and
cmpsl
push
lret
add
push
or
jne
loopne
jns
cmpsb
mov
pop
inc
jl
xchg
jnp
jb
sbbb
mov
je
test
lock
pop
sbb
mov
scas
mov
xor
mov
js
cmp
inc
jl
test
and
inc
repz
sbb
mov
stc
lods
fnstcw
add
stos
sbb
mov
aad
gs
push
adc
cmc
inc
call
xchg
xchg
add
push
xchg
fisttpll
das
mov
lods
mov
xor
movsb
cmc
inc
fstps
and
dec
imul
out
icebp
sub
sbb
pop
hlt
mov
out
add
mov
xchg
xor
inc
popa
div
dec
inc
xor
mov
in
into
je
outsl
frstor
arpl
out
push
sbb
push
leave
popf
sub
mulb
jae
push
jecxz
les
sbb
fsts
adc
lcall
jbe
ja
out
fs
ret
shrl
pop
out
jle
push
add
scas
mov
test
imull
rcll
lcall
imul
mov
mov
into
fwait
sbbb
ja
imull
dec
sbb
cmp
stos
sti
mul
lea
daa
rcrl
jns
daa
jnp
nop
push
xor
mov
pop
mov
cli
cmpl
dec
lret
jl
mov
out
fistl
dec
mov
mov
sub
inc
lahf
cs
push
out
sarb
daa
dec
cmpsl
cmp
jae
js
push
stc
sahf
jge
cld
and
sub
jae
xchg
pop
scas
mov
push
imul
insl
jmp
and
sti
xlat
mov
and
clc
adc
push
mov
and
movsb
sub
repz
mov
jb
dec
push
fmull
imul
scas
repz
push
inc
push
xchg
aam
addr16
jecxz
out
mulb
imul
add
icebp
out
ja
jae
mov
mov
push
jle
insb
andb
ret
lret
clc
hlt
in
push
pop
mov
mov
movsl
enter
call
mov
insb
xor
scas
jmp
mov
fldcw
nop
aaa
xchg
cmp
and
xlat
shlb
xchg
sbb
rcl
mov
loope
push
movsl
testl
ret
ss
push
jl
sub
in
loope
bound
js
dec
loop
adc
and
xor
mov
inc
scas
sahf
add
js
test
call
ret
aas
xor
sbb
hlt
mov
pop
mov
dec
add
sub
test
andl
popa
xchg
lret
pop
daa
mov
lret
mov
cmp
and
add
push
fs
xlat
push
cmp
jge
or
dec
sbb
call
jg
push
mov
push
xor
iret
mov
fs
imul
adc
xchg
cwtl
mov
dec
fildll
xor
arpl
push
leave
ja
cmp
scas
mov
jl
or
cmpsl
push
aas
jno
pop
jno
lret
sub
ds
dec
cs
out
sub
mov
push
rcrb
pop
lock
add
fildl
inc
sub
jno
cmc
ss
mov
stc
mov
lds
push
pop
mov
fwait
push
lret
inc
aam
pop
out
push
ret
xor
cmp
inc
jbe
mov
loop
mov
std
xor
dec
jmp
sti
imul
loop
push
push
xlat
ja
mov
push
test
jae
mov
jmp
in
sbb
dec
xor
popa
xor
mov
push
or
leave
sahf
mov
adc
notb
rep
or
pop
jnp
dec
sub
scas
jle
ja
cmp
jae
and
dec
xchg
cli
xor
cmpsl
daa
iret
mov
dec
enter
push
mov
xor
jno
xchg
xchg
fcomps
lret
jmp
adc
push
xor
push
aas
out
cmpsl
sbb
shll
outsl
xchg
mov
scas
jp
out
outsl
in
das
std
xchg
andb
add
xor
xor
jns
jne
mov
sti
xchg
sub
into
sub
jp
std
adc
movb
mov
pop
imul
loop
es
pushf
scas
lods
cmc
sub
jg
mov
lret
pop
leave
and
push
mov
imul
out
inc
icebp
sub
push
nop
lea
fucomi
inc
add
or
xor
push
cmp
sti
les
outsb
xchg
mov
mov
scas
fs
sbb
cmp
dec
iret
mov
out
push
sub
jecxz
call
movups
cmp
sbb
cmp
mov
pop
xchg
loop
add
iret
in
push
cmpsl
inc
call
xor
aam
pusha
iret
mov
jle
vpmuludq
or
cwtl
dec
xchg
movsl
inc
outsl
sahf
dec
imul
scas
outsl
sbb
divl
mov
sbb
stos
je
pop
lods
dec
das
ret
scas
cmpsl
scas
cmp
adc
frstor
push
scas
push
pop
push
in
mov
ja
xchg
movsl
mov
mov
mov
in
or
stos
js
jo
sahf
les
out
in
add
xchg
push
aad
adc
jbe
add
mov
xor
addl
idiv
cmp
fstps
push
sub
mov
scas
pop
sbb
and
mov
xchg
outsl
das
adc
or
add
test
pop
inc
js
lcall
add
lcall
int
out
es
mov
outsw
jbe
lahf
repz
cmpsl
jno
pop
push
jnp
push
or
fisttps
iret
mov
ror
cli
push
inc
scas
add
movsb
mov
fs
icebp
jg
aam
sub
and
orl
adc
decl
lret
push
ljmp
cmp
add
stc
mov
leave
mov
imul
sbb
xor
mov
pushf
into
push
paddd
push
jl
cmpsl
rcrl
out
mov
fidivl
test
cltd
aaa
add
add
jp
lahf
push
fstpl
xchg
lods
or
data16
and
xchg
pop
inc
popf
push
push
jle
add
mov
or
repz
mov
push
xchg
mov
ljmp
mov
sbb
ficomps
es
ret
call
or
pop
cmpsb
add
pop
aad
popf
es
test
rcl
clc
rcl
xor
mov
jecxz
add
mov
jae
popf
or
adc
jmp
pop
fiadds
xor
and
add
inc
dec
inc
sub
aam
in
xor
sti
data16
xchg
into
jno
cmp
jg
and
lds
sub
lret
sti
or
jae
sbb
mov
pop
pop
jae
popa
or
dec
insb
adc
stc
xor
mov
jle
cli
mov
in
bound
cmc
inc
dec
adcb
sbb
fs
xchg
dec
leave
insb
adc
aas
jnp
sbb
in
imul
mov
mov
adc
or
sub
mov
shl
jb
adc
sub
mov
iret
popf
cld
inc
loop
addl
pop
mov
inc
mov
mov
nop
adc
repnz
int
sub
call
lcall
mov
sub
aas
or
scas
fsubp
sub
sub
cmpsl
sbb
mov
negb
adc
ja
aam
jmp
bound
icebp
and
stos
cltd
lods
ljmp
mov
inc
push
scas
pop
mov
jge
inc
stc
mov
dec
mov
xrelease
testl
fwait
sub
cmpsb
mov
mov
imul
mov
jns
push
rcll
xchg
push
dec
jge
popf
lds
mov
sahf
dec
xor
lds
cmp
mov
mov
push
sbb
sbb
scas
scas
sub
push
negb
adc
enter
xchg
das
cmp
sbb
movsb
or
icebp
sub
mov
sbb
xor
push
mov
xchg
jmp
andl
dec
jecxz
leave
shll
add
out
dec
cltd
pop
movsl
and
fwait
sub
and
stos
cmp
daa
push
mov
aam
push
jl
add
cmp
out
jl
jecxz
push
repz
sbb
add
add
sbb
mov
insl
sub
cs
jns
ljmp
iret
dec
xchg
mov
testb
push
mov
test
in
call
jecxz
jne
mov
cli
in
push
loopne
repz
lcall
sbb
mov
test
push
push
rorb
xchg
out
push
hlt
add
jo
dec
dec
sub
mov
hlt
sbb
pop
hlt
or
xlat
and
mov
mov
pop
out
xchg
fcoms
sub
in
adc
sbb
loope
push
push
aaa
outsb
jmp
dec
out
insl
cli
enter
aaa
aas
dec
adc
mov
das
add
xchg
fwait
inc
lret
negb
pop
pop
scas
inc
lret
movsl
mov
and
ss
std
sbb
sbb
into
lea
aaa
push
out
icebp
mov
inc
dec
imul
shlb
xchg
scas
mov
pop
inc
add
daa
push
pop
sub
sahf
cltd
push
gs
sbb
cmp
jecxz
pop
xchg
mov
push
mov
inc
fldcw
leave
add
jns
inc
xchg
jae
pop
xor
pop
insl
cmpsl
ljmp
lods
stos
stos
ja
imul
mov
jns
mov
jmp
push
mov
loop
mov
ss
test
in
popa
ret
pop
or
sub
imul
jg
push
jae
xchg
mov
add
sbb
sub
call
mov
jle
sbb
nop
dec
xor
ss
jle
aas
or
in
add
xchg
test
jne
mov
inc
jmp
lahf
dec
mov
dec
test
add
push
adc
shr
push
and
jl
inc
pop
cs
jbe
cmp
mov
inc
pop
xor
cltd
lods
pop
mov
mov
push
push
sub
add
adcb
sub
mov
xorl
jno
and
jbe
loop
call
cltd
sbb
aam
mov
call
ljmp
sub
fistps
jne
fsubl
popl
rcr
jge
mov
aam
xchg
xchg
mov
inc
dec
push
sar
xor
inc
jb
movb
xchg
arpl
inc
sub
insb
mov
sbb
test
std
lods
movsl
jbe
inc
test
incb
add
rcrl
mov
mov
add
adc
xchg
scas
shlb
in
inc
jbe
inc
out
repnz
lcall
sbb
loope
fdivs
mov
clc
js
repnz
mov
mov
lods
mov
jmp
pop
adc
cli
mov
sub
xor
push
pusha
mov
cmpsb
idivb
jmp
daa
sbbl
int3
inc
add
outsb
pop
les
lock
pop
inc
mov
and
xchg
pop
vpcmpeqw
push
pop
inc
and
inc
imul
xchg
test
sub
rclb
cmc
sub
int3
cltd
and
xor
mov
lds
jle
mov
sbb
dec
repz
shrb
or
xchg
lods
rcrb
sub
mov
ss
sub
lcall
add
aaa
lock
fistpll
fsubr
imul
pop
outsl
push
das
pop
sbb
nop
clc
adc
arpl
mov
push
xor
movsb
jge
push
cli
jb
xlat
into
and
dec
mov
sbb
adc
adc
jb
xchg
cmp
inc
lret
in
jl
jecxz
jp
int
mov
repz
dec
test
xor
iret
pop
ss
cmp
inc
pop
sub
test
lcall
dec
sub
loop
mov
mov
fiadds
adc
inc
push
sbb
into
sub
ljmp
idiv
rclb
pop
mov
shll
pop
pop
cmp
stc
xchg
jle
rolb
pop
add
mov
jl
xor
cmp
inc
arpl
jle
push
mov
das
sbb
mov
insl
add
dec
les
pop
lods
subl
jne
fisttpll
mov
jle
rcl
int
mov
cmp
dec
lods
sbbl
sbb
cmc
lahf
rolb
