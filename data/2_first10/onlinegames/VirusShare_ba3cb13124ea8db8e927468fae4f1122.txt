fdivrl
sti
scas
and
movb
and
push
and
xor
mov
sub
dec
pop
dec
shll
mov
jne
shll
ljmp
dec
xlat
dec
and
cmp
scas
jnp
insb
js
and
add
insl
cwtl
and
add
and
imul
call
dec
gs
gs
xor
xor
fs
insb
add
or
out
jg
sbb
inc
bound
push
jb
jbe
insb
gs
pop
jae
jae
gs
and
inc
inc
add
pushaw
lret
ljmp
gs
outsl
imul
add
adc
adc
bound
xor
cs
and
std
pop
imul
push
arpl
fs
outsl
cmp
fcmovne
arpl
bound
xor
cmp
cmp
arpl
and
pop
sbb
xor
sub
imull
andl
andb
out
std
loopne
mov
jl
inc
add
add
or
lds
mov
or
popa
enter
insl
xchg
fcmovne
push
add
outsl
int3
int
pop
into
push
iret
rorb
shll
xor
shll
jbe
jb
aam
aad
xlat
pop
fdivs
mov
fidivl
fisttpl
push
pop
loope
lcall
inc
in
and
add
fwait
scas
out
call
imul
in
pop
in
aaa
lock
repnz
div
clc
gs
stc
dec
pop
cli
sti
js
je
mov
out
ficoms
xlat
sub
mov
pop
adc
aaa
sbb
dec
mov
xor
mov
ljmp
je
push
push
call
mov
jmp
mov
cmp
jne
xor
jmp
popa
insb
sti
arpl
movl
fsin
dec
test
je
sbb
fstpt
imul
jne
push
or
mov
sbb
iret
das
inc
mov
adc
cmp
jne
outsl
clc
fwait
out
mov
or
pop
pop
leave
ret
mov
in
sbb
fnstcw
imul
push
push
imul
pop
cmp
hlt
push
push
pop
loope
xor
clc
add
and
push
push
sbb
js
push
lock
cltd
add
add
push
pop
insb
pop
push
jae
pop
movzwl
push
push
stos
mov
fdivr
lock
cmp
je
push
adc
pop
or
test
sbb
cmp
adc
push
push
sub
lret
insl
add
inc
cmp
sbb
loope
sbb
movsl
adc
ss
mov
jecxz
pop
in
adc
pop
ret
xchg
sub
xor
inc
mov
ss
xchg
xor
mov
lods
jo
push
push
scas
inc
push
test
jo
push
adcl
mov
sbb
sbb
mov
cmp
adcl
push
dec
dec
ja
inc
addb
push
sbb
fwait
jmp
push
jno
dec
inc
imul
xor
xor
pop
ja
mov
pop
je
or
sub
lods
fnstsw
inc
test
je
adc
call
rorl
icebp
pop
loop
out
negb
dec
in
adc
mov
or
gs
adc
cmp
cwtl
fstps
adc
aas
xor
enter
daa
sbb
fimuls
loopne
or
icebp
push
cmp
fcom
lds
jno
popa
mov
std
adc
push
fdivr
call
adc
mov
psrld
mov
inc
inc
dec
dec
test
jne
push
in
cmp
pop
jmp
lds
shlb
and
push
jecxz
shl
mov
mov
add
inc
cmpb
inc
fadds
test
add
mov
mov
cld
aad
pop
clc
inc
and
aaa
outsb
push
rcl
jl
sub
pop
adc
daa
push
mov
stc
push
dec
sub
pop
pop
add
adc
xabort
in
les
out
inc
pop
or
jbe
mov
ret
in
inc
mov
cmp
subb
pop
or
ja
mov
daa
cwtl
pop
les
adc
mov
js
cmpl
inc
mov
pop
and
dec
shlb
add
std
add
arpl
mov
sbb
jge
ja
repz
lea
andb
rolb
lea
sahf
iret
out
stos
mov
loopne
adc
mov
add
xor
test
jecxz
push
or
fdivrp
maxps
pop
push
sahf
mov
pop
call
jbe
les
push
xor
lret
test
xor
scas
jbe
mov
xlat
inc
into
xor
fldlg2
sub
sub
push
in
imul
mov
aas
sub
pop
mov
pop
pop
pop
pop
testb
push
xor
cld
pop
jmp
pop
outsb
outsl
jmp
rcrb
or
fstl
lcall
outsb
ljmp
xchg
fildl
add
je
popa
lcall
pop
add
pop
lcall
popw
fstps
jne
insb
inc
or
xor
cld
mov
inc
ja
addr16
jge
pop
mov
outsb
imulb
push
add
add
sbb
add
fwait
cmp
in
adc
adc
add
in
sbb
arpl
xchg
sar
out
enter
jmp
ja
leave
imul
fs
int3
je
imul
rorb
int3
clc
insl
mov
push
cltd
pop
flds
sti
adc
sti
cld
mov
sbb
sti
fcomp
xchg
int
cld
std
dec
push
mov
xor
xchg
mov
dec
mov
cld
mov
arpl
jb
push
lds
fldenv
out
xlat
cmp
sarb
rcl
or
sub
xor
cs
sub
shlb
js
mov
int3
jb
clc
cwtl
mov
adc
call
lods
test
scas
mov
shrb
loope
or
jae
push
ss
dec
xchg
insb
les
fisubl
neg
cwtl
mov
ss
and
push
neg
fwait
pop
fs
mov
clc
je
jae
cwtl
shlb
sti
mov
into
bound
xor
jg
imul
idivl
fisttpll
mov
test
fldcw
xor
push
xor
mov
je
clc
add
clc
lods
jbe
popf
lea
adcl
jnp
aaa
movsb
pushf
or
insl
mov
mov
mov
call
push
bound
mov
clc
xchg
and
test
sar
jb
iret
sar
clc
sar
mov
push
push
mov
or
xchg
outsl
jbe
push
adc
cmp
cmp
popf
push
cmpsb
imul
insl
nop
gs
out
and
push
add
call
adcl
hlt
cmp
negl
xchg
shll
xchg
xor
and
hlt
fs
mull
or
sbb
xchg
cmp
aaa
gs
adc
ret
loopne
dec
dec
scas
cli
mov
jle
subl
and
jne
int3
add
or
pushf
sbb
push
cmp
lea
adc
jmp
in
adc
sub
mov
or
loope
or
push
fadds
inc
faddp
dec
movsb
inc
cmpsb
in
adc
mov
rclb
mov
sbb
or
push
dec
inc
dec
dec
in
test
push
dec
inc
dec
and
aam
inc
push
dec
cs
outsl
lds
or
push
sub
subl
add
and
add
push
add
add
enter
nop
add
enter
mov
inc
loopne
push
pop
mov
jg
js
int
mov
imul
jmp
arpl
outsb
outsl
je
bound
jb
outsb
and
inc
dec
push
and
fs
fmuls
and
imul
mov
mov
mov
ljmp
dec
repz
xchg
outsl
out
cli
jmp
sub
push
imul
out
inc
add
loope
mov
popf
std
gs
and
add
or
cld
pop
sub
pop
adc
add
lret
xchg
pushf
push
add
push
xor
jnp
cmp
pop
push
add
fnstcw
dec
call
popl
mov
add
push
fsubrs
bound
add
jae
inc
adc
cmp
frndint
shrb
popa
je
rclb
adc
fdivs
gs
outsl
arpl
inc
and
sbb
inc
ljmp
in
push
mov
in
xchg
movsb
xor
shll
in
add
imul
imul
imul
cmpsb
jmp
sbb
cs
pop
shll
fs
inc
imul
add
js
pop
outsb
xor
inc
mov
push
xor
daa
and
pop
rcr
pop
and
and
mov
push
idivb
rorb
inc
in
fs
add
xor
mov
hlt
fdivrl
and
filds
and
adc
and
adc
lahf
add
cmp
lahf
add
and
inc
and
adc
and
cmp
add
inc
out
stc
test
enter
fdivs
and
adc
add
inc
sahf
nop
dec
movsb
and
adc
add
inc
or
aaa
sub
dec
inc
ja
push
sub
sbb
mov
fmull
leave
add
lcall
fdivrs
adc
push
popa
mov
jge
divl
push
pop
jmp
adc
mov
pcmpgtd
mov
add
orl
pop
rcr
loopne
lea
mov
mov
xchg
arpl
decb
ret
and
or
je
into
flds
pusha
mov
and
xchg
push
inc
fs
adc
jbe
mov
or
push
mov
inc
ja
pop
sub
pop
pop
leave
xchg
icebp
sub
out
andb
inc
cmpsl
xchg
push
clc
std
jae
arpl
loop
ret
pop
stos
xor
mov
xor
outsb
xchg
xchg
dec
sub
push
enter
xchg
clc
mov
or
call
adc
std
push
insb
pop
adc
adc
ds
addb
adc
adc
push
and
jecxz
xor
test
add
cmp
jl
or
shr
or
push
mov
push
idiv
mov
int3
insb
outsl
enter
jnp
icebp
cmpsb
sti
jle
addr16
mov
xchg
pop
pushf
mov
arpl
dec
jne
pop
call
sub
dec
ja
push
jmp
inc
inc
loope
cmp
or
loope
sbb
mov
test
dec
mov
pop
mov
xchg
sbb
cmp
cmp
add
mov
addl
xorb
mov
outsb
mov
sub
ror
push
hlt
push
inc
lock
sbb
dec
jno
neg
pop
repnz
mov
data16
shll
xor
incb
add
sub
adc
or
cmp
movl
neg
pop
sbb
dec
mov
or
add
out
inc
mov
push
mov
xchg
fsubr
into
xor
mov
add
cs
push
sbb
call
jmp
mov
test
aam
or
call
pusha
jecxz
rolb
cmp
fisubs
pop
add
adc
or
hlt
or
jb
adc
jl
fcomp
dec
out
out
int3
jg,pt
or
cmp
insb
mov
cmp
cmp
scas
outsl
mov
mov
or
ss
mov
testl
pop
push
mov
cmp
jo
lds
jnp
ret
push
pusha
push
mov
push
mov
cmc
enter
add
mov
lret
gs
insb
jb
mov
lret
gs
gs
cs
fisttpl
cltd
mov
xor
ja
imul
pop
fcmovnu
frstor
sub
push
rcll
loopne
loope
jecxz
ret
in
cld
mov
movsb
sti
in
adcb
add
sbb
cmp
inc
call
add
push
or
in
cwtl
pop
add
and
push
jmp
sub
scas
sbb
mov
call
mov
mov
push
shr
stc
sub
cs
insl
jmp
add
mov
vmwrite
cmc
das
popf
mov
add
cmpl
fbstp
dec
cmp
cmp
or
dec
daa
rcrl
sub
xchg
outsb
mov
mov
inc
cmp
jl
je
fiaddl
inc
cmp
sub
cmpb
js
pushl
mov
daa
cmpl
jb
dec
or
leave
je
add
jp
iret
push
aas
or
add
mov
push
popf
or
fisttps
ret
fbstp
sbb
mov
mov
adc
test
insl
jbe
popa
sbb
add
cld
test
rolb
cld
jge
mov
add
sbb
cltd
mov
adc
mov
mov
mov
lods
inc
cmpl
fisttpl
add
cmpl
std
outsb
dec
mov
gs
and
lea
shr
shlb
mov
mov
mov
jne
daa
add
ljmp
shlb
cli
add
push
or
adc
xchg
mov
lar
data16
lock
jne
or
not
push
sub
add
aad
outsl
or
shl
or
cmpsl
xchg
xor
adc
in
cmp
clc
inc
mov
mov
std
sbb
xchg
add
jmp
add
imul
push
repz
jbe
push
mov
mov
dec
xorb
and
adc
outsb
inc
or
popf
mov
add
lcall
fcomip
and
mov
pushl
add
push
scas
clc
add
fildl
and
sub
sbb
mov
pop
or
push
mov
mov
jl
je
dec
push
sbb
andl
jle
sbb
icebp
test
call
call
int3
insb
aaa
pop
adc
lcall
xor
push
add
adc
pop
fwait
nop
pop
xor
inc
pop
or
mov
cmp
push
out
imul
xor
and
int3
mov
or
push
xorl
push
mov
dec
sti
lea
mov
or
inc
testb
je
ficompl
pop
inc
sub
icebp
insb
push
sbb
or
adc
xor
sti
gs
int
insl
push
mov
loopne
pushf
cld
inc
xchg
test
push
push
xchg
mov
mov
add
lock
lcall
or
sti
inc
test
lahf
cmp
nop
sbb
dec
jnp
jmp
ss
mov
and
or
subb
mov
jo
lret
mov
insb
outsl
jb
jb
das
lret
mov
gs
je
push
sahf
add
data16
mov
and
pop
pop
push
sbb
cld
or
loopne
clc
or
or
jl
mov
mov
mov
add
ret
movsl
pop
imul
fs
mov
lret
jne
push
in
and
leave
rcrb
scas
pop
adc
jg
dec
arpl
mov
or
cvtps2pd
mov
adc
and
mov
je
popf
xchg
mov
aas
les
enter
xchg
add
mov
xor
mov
cs
adc
cs
arpl
or
inc
sbb
int3
stos
push
pop
pop
xor
inc
insb
outsl
jae
dec
popa
outsb
fs
cmp
inc
xchg
ljmp
call
outsl
arpl
fs
jne
add
fs
imul
jg
jns
and
fs
inc
pop
fdiv
sarl
popa
insl
gs
xor
ja
mov
popa
je
and
insl
xorl
cvtps2pi
add
outsb
mov
mov
add
or
jb
sub
mov
jle
test
push
or
inc
ds
js
nop
add
imul
jb
sub
dec
bound
arpl
mov
gs
outsl
add
jae
sub
orb
adc
addb
imul
push
add
lea
xchg
dec
jo
mov
mov
push
xchg
outsl
ja
inc
xor
mov
test
mov
jne
mov
sti
mov
pcmpeqb
and
insb
mov
pusha
push
das
dec
outsb
add
push
pushw
gs
jge
xor
pop
jo
ret
or
imul
dec
fwait
bound
pop
push
js
xor
inc
int
orb
inc
sub
push
outsl
outsl
insb
dec
mov
sbb
popa
jo
push
push
ret
inc
popf
dec
push
orl
ja
add
out
cmp
mov
push
dec
inc
push
dec
inc
es
mov
lods
add
jo
pop
retw
push
push
mov
packssdw
pop
pop
add
jne
or
pop
mov
mov
outsb
sbb
outsl
adc
push
jo
pop
inc
push
xor
sti
shll
arpl
popa
jge
sub
rolb
mov
dec
outsb
data16
xchg
mov
movsl
add
add
std
outsb
aaa
insb
fstpt
inc
arpl
jo
inc
popa
arpl
fcmovbe
sub
push
inc
inc
push
mov
add
or
xchg
mov
sub
push
cltd
add
insl
popf
insl
ret
sbb
lds
ret
or
pop
inc
arpl
adc
ja
xor
dec
stos
and
jno
inc
mov
xor
jnp
mov
xchg
xor
xchg
lcall
pushl
adc
xor
xor
jno
mov
cmpsl
xor
xor
xor
xor
xor
xor
jno
lahf
xor
xor
xor
xor
xor
pushl
xor
xor
xor
pop
xor
xor
adc
sbb
arpl
sahf
ss
decl
std
ss
ss
ss
pop
ss
sbb
and
sub
ss
inc
aaa
push
aaa
pop
aaa
sti
jmp
aaa
jg
or
adc
and
xor
pop
cmp
imul
cmp
addb
jg
sbb
cmp
imul
movsb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
mov
mov
cmp
add
xchg
call
out
psubq
and
add
add
incl
mov
fidivrl
daa
repnz
jnp
add
clc
add
add
cmp
xor
cmp
lock
or
cmp
push
mov
loopne
pop
cwtl
cmp
pusha
sbb
js
test
add
or
inc
sahf
lret
push
and
push
add
aad
dec
xor
or
jb
das
sar
fildl
push
push
inc
mov
das
test
outsb
loope
test
xchg
test
lcall
fnstenvs
sbb
add
test
pop
sahf
insl
lcall
movsl
xor
cmpsb
imul
imul
into
insl
or
push
add
inc
push
cmpsb
imul
jp
mov
mov
xor
mov
cli
or
and
cmp
xor
rorl
jb
pushf
popf
movsb
jg
fdivs
cwtl
xorb
rcrl
movsb
xlat
push
stos
mov
cltd
stos
pop
xor
lods
ds
imul
cmpsb
imul
add
xor
inc
dec
bound
lcall
cmpsb
cmpsb
imul
in
loop
mov
add
mov
lcall
repnz
dec
inc
lcall
jbe
negl
add
add
xchg
enter
or
je
dec
mov
sbb
xchg
add
je
push
jne
jns
inc
scas
aam
lret
aaa
int
cmc
adc
adc
dec
add
negb
xor
es
addb
mov
and
or
outsl
add
dec
rep
aaa
sbb
pusha
add
push
addb
push
inc
and
jnp
pop
add
mov
and
insb
add
sbb
add
cmp
add
pop
sub
shlb
ja
aas
sbb
mov
aas
add
mov
or
rcrl
and
add
inc
leave
test
pop
add
dec
xchg
popf
inc
sbb
inc
jecxz
or
sbb
pop
pop
ret
flds
pop
inc
xchg
inc
pop
test
subb
cmpsb
pop
mov
fwait
out
xor
cli
mov
xor
or
imul
pop
mov
adc
mov
jne
punpcklwd
pop
inc
or
push
sub
incl
pop
add
push
inc
jb
push
and
ja
or
add
ja
push
mov
jae
and
bound
in
or
sbb
insb
or
pop
add
jae
jg
add
pop
cs
add
pop
sub
les
cs
mov
dec
inc
push
push
inc
push
inc
dec
adc
outsl
dec
mov
dec
push
or
fisubrl
ja
jb
inc
popa
aam
ja
jb
push
aas
dec
inc
pop
pop
xor
dec
test
mov
out
arpl
add
push
mov
sub
aaa
aam
mov
outsl
je
pop
sub
lahf
jns
gs
mov
jne
jns
jg
icebp
daa
out
jne
js
mov
mov
sub
rorl
lea
push
and
mov
shl
ljmp
adc
or
ret
push
adcb
loope
cmpb
mov
or
leave
add
and
dec
in
mov
aaa
movl
inc
and
add
or
div
fldenv
fistpll
adc
jg
add
push
jno
mov
sbb
lock
lea
cld
and
add
push
ljmp
inc
lcall
lcall
adc
adc
adc
or
sub
pop
or
int
adc
mov
ljmp
pop
out
out
out
fcmovnu
mov
sbb
sub
addl
lcall
iret
iret
imul
ret
push
fnsave
cmpsl
fwait
bound
adc
cld
arpl
mov
insl
daa
adc
mov
and
enter
jecxz
and
jecxz
arpl
fsubs
mov
insl
sub
rcr
outsl
insb
xchg
loope
adc
out
popf
and
sbb
std
ret
mov
and
mov
daa
jo
ja
daa
mov
jne
std
loope
cmp
cmpl
mov
arpl
out
out
idivl
and
and
test
insb
rep
push
xor
sbb
je
mov
fistpl
addr16
pop
filds
int
adc
inc
push
jb
fstps
enter
fs
out
out
xchg
js
scas
jnp
sbb
dec
mov
subl
push
pop
jns
sbb
mov
arpl
sti
jnp
pop
adc
stos
add
dec
push
add
mov
pop
mov
mov
and
sbb
pop
adc
sbbl
emms
testl
repz
daa
stc
mov
dec
jge
mov
sarb
push
pop
dec
movl
insl
add
push
or
out
div
and
xorl
mov
mov
lods
popf
popf
cmp
xchg
sbb
add
pop
mov
dec
dec
mov
cmp
cmp
ja
testl
adc
test
mov
ret
fistl
pusha
inc
sbb
or
out
xchg
ss
arpl
dec
imul
jnp
dec
ret
inc
ret
push
fisttpl
pop
pop
nop
scas
add
mov
ret
loope
sub
daa
xor
popa
mov
out
mov
daa
in
cmp
mov
jecxz
sbb
filds
inc
mov
sbb
ja
fninit
inc
lea
fistpl
cmp
loope
mov
aaa
mov
repz
lahf
xor
sub
pop
pop
dec
xor
jne
pop
arpl
in
movsb
and
add
stos
push
pop
mov
insl
and
fisttpl
shl
dec
inc
test
mov
sbb
or
hlt
jmp
out
scas
push
sarb
and
push
add
jnp
mov
mov
sub
pop
xchg
scas
iretw
daa
mov
bound
sbb
in
sarb
ljmp
fistps
and
data16
add
out
sub
add
je
and
pop
daa
loopne
sbb
sbb
dec
mull
daa
sub
lds
add
js
ss
cmp
leave
das
out
mov
outsl
enter
loope
add
test
push
inc
pop
cmp
cs
imul
jp
sbb
adc
iret
jge
cld
adc
add
xor
repz
icebp
dec
popf
inc
aas
lahf
testl
cs
cmp
sbb
jle
aas
mov
fstpt
fcmovne
in
jne
jno
lret
jmp
leave
adc
ret
pop
sbb
mov
ret
rclb
into
xlat
std
xor
sub
and
mov
and
mov
stos
adc
xor
xor
sbb
pushl
repnz
xor
ret
jmp
and
xor
mov
jmp
inc
pop
lds
sub
or
push
jbe
aas
or
fildl
xchg
call
pop
out
aam
nop
adc
mov
adcb
outsl
push
mov
and
and
ljmp
xor
xor
sub
push
mov
push
scas
jns
fistpl
mov
popa
xchg
pop
pop
jb
popa
mov
mov
mov
in
jno
lcall
dec
cli
sub
mov
add
sub
jg
inc
and
push
adc
ret
sub
in
add
push
jl
mov
add
xor
call
add
sbbb
add
ja
or
cld
xor
in
decl
mov
lea
movb
mov
sub
sub
mov
sti
push
icebp
add
push
jmp
call
loop
add
sti
push
push
call
js
jbe
xor
inc
pop
or
cmp
mov
push
jnp
dec
push
xchg
sub
jnp
jbe
inc
mov
adc
and
test
mov
pop
insb
and
pop
lds
int3
or
mov
lock
inc
les
out
adc
mov
mov
mov
andb
mov
or
push
mov
jbe
pop
out
adc
mov
dec
aaa
pop
jle
out
dec
inc
xor
xor
adc
push
inc
repnz
and
clc
xor
adc
stc
cmp
enter
test
mov
xor
rcrb
dec
xor
xchg
xor
adc
dec
inc
xor
xor
adc
push
nop
jae
outsl
arpl
ret
cmpw
incl
inc
dec
cmp
lret
dec
leave
xchg
adc
ret
int3
dec
xor
nop
iret
xchg
cmp
xor
cmp
and
and
or
and
fs
adc
hlt
mov
push
icebp
dec
cmp
xorb
sbb
dec
inc
mov
jg
add
jge
push
mov
mov
sbb
ficoms
push
push
push
sub
pop
and
pop
mov
hlt
ret
mov
pusha
fsubrs
sbb
sahf
sub
pop
popa
pop
push
pop
sub
pop
fidivrs
test
lea
lock
mov
arpl
add
mov
movsb
mov
popf
loopne
pusha
sbb
in
sbb
mov
rep
cmp
and
int3
or
mov
sub
mov
dec
pop
mov
divb
nop
xor
call
test
dec
data16
cmp
mov
out
loopne
add
stos
es
out
xor
or
add
jne
sub
sub
rorb
mov
jmp
mov
lret
mov
call
adc
sbb
mov
hlt
mov
inc
inc
decb
aam
cmp
pop
jb
pop
pop
enter
add
mov
enter
fcoms
pop
mov
push
andw
mov
nop
xor
push
dec
scas
cmp
andb
es
add
push
test
sub
out
mov
xor
shll
cmp
or
ficoml
xor
xor
jne
mov
std
mov
out
mov
lea
cmp
jne
push
cmp
dec
and
popf
testb
stc
mov
cmp
ja
inc
std
int3
fildl
pop
cld
call
jge
cmp
pushf
outsl
or
lsl
push
fdivs
loope
call
pop
sbb
decb
add
andb
pop
push
inc
adc
or
clc
out
or
lahf
adc
adc
xor
adc
in
stc
lret
xor
js
and
in
das
hlt
xor
je
and
in
stc
xchg
and
adc
and
and
and
xchg
cld
or
adc
aaa
xchg
cmp
push
fists
cmp
pop
mov
and
push
cltd
push
nop
push
dec
enter
xor
nop
xor
mov
pop
aam
adc
pop
sbb
or
cmp
push
cld
add
jle
xor
jg
cld
fstpt
pop
adc
push
mov
cmp
ja
loopne
push
outsb
call
adc
je
test
push
pop
xchg
cmp
push
mov
inc
hlt
mov
inc
fstpt
sub
daa
lds
jne
mov
insl
push
inc
clc
xchg
cmp
cmpsl
mov
push
push
sbb
popa
test
cmp
sahf
inc
cmp
mov
cmc
pop
notb
repnz
adc
push
pop
mov
cmp
cmpsl
mov
frstor
shlb
aaa
ret
add
into
bound
outsl
cltd
push
je
mov
push
outsb
pop
and
push
nop
mov
inc
test
push
jmp
adc
add
xor
push
or
sbb
mov
add
xchg
stc
mov
push
mov
idiv
adc
jg
aaa
test
mov
lahf
addb
xor
push
movsl
xor
pop
or
enter
adc
repnz
jle
xor
adc
adc
and
fdivrs
and
push
call
adc
adc
xor
adc
outsb
out
cld
or
adc
adc
nop
xchg
mov
jmp
and
xor
cld
int
es
fisttpll
fs
ja
xor
aaa
das
mov
cmpb
insb
sarl
inc
xchg
jb
in
pop
push
mov
jg
mov
imul
add
andl
mov
or
inc
sub
and
or
mulb
add
push
add
into
loopne
adc
inc
jge
xchg
push
mov
rol
cmp
loopne
cmp
jae
jne
in
add
inc
pop
lret
shr
add
dec
lods
addb
mov
push
sbb
xchg
push
outsl
mov
dec
push
pop
jne
adc
sbb
dec
repz
rorb
arpl
mov
loop
or
adc
or
stos
icebp
add
jne
xor
mov
sub
rorb
stos
pop
cs
inc
aad
push
adcl
movups
sti
not
and
push
jl
and
or
add
lea
mov
shr
mov
divb
repnz
not
and
testl
lea
test
push
fdiv
mov
js
repnz
aam
or
fildll
inc
fisubs
fimull
add
lea
pop
jmp
shr
shl
push
pop
inc
sub
mov
and
not
int
mov
cmp
add
repz
sti
xor
into
mov
shr
or
add
dec
daa
decl
lods
pop
jg
push
lea
imul
lods
loop
mov
push
mov
jle,pn
not
and
shlb
adcb
sub
xchg
rcr
js
pop
mov
jecxz
sbbb
xlat
loopne
fisubrl
aaa
sbbb
or
mov
repz
sub
adc
test
roll
mov
fisubl
fistps
sbbl
test
push
add
bnd
add
out
xor
add
xchg
xchg
ja
sbb
les
repz
fstpt
subb
addl
repz
add
rcr
das
pusha
sbb
mov
pop
scas
testl
jle
mov
pop
les
subb
jns
cmpsb
or
loop
cvttps2pi
push
fdivs
add
frstor
mov
pop
mov
inc
pop
xor
les
adc
sbb
or
xor
ja
sub
or
or
xchg
jno
std
stos
in
jo
xchg
mov
mov
cld
fidivrs
pop
into
outsl
lods
pop
aaa
das
push
mov
cmpsb
pop
mov
add
dec
inc
and
sub
or
cmp
or
mov
outsl
in
popa
adc
add
or
mov
jne
push
in
ret
push
and
aad
ret
mov
and
sbb
add
shlb
clc
jg
sub
dec
cmp
inc
rclb
lods
xor
add
push
and
clc
pop
mov
repz
pop
pop
es
adc
lods
and
movsb
adc
adc
test
int
mov
and
call
mov
mov
insl
mov
adc
cmp
sbb
loop
xlat
lods
mov
mov
adc
inc
add
rorb
fbstp
pop
and
out
dec
lods
clc
cmp
mov
fnstenv
mov
enter
jg
or
movsl
xchg
and
mov
mov
xor
shl
int
and
sbb
loopne
ret
cld
xchg
mov
inc
enter
aaa
or
mov
pop
jmp
push
fbstp
xor
sbb
mov
inc
pushw
test
aaa
or
call
inc
loop
insl
adc
or
xlat
fdivs
faddl
sbb
xorb
cld
xor
enter
in
in
stos
daa
sub
aad
flds
outsl
adc
cmp
xchg
dec
fists
les
mov
adc
js
jge
or
xor
test
mov
sbb
test
xor
mov
call
divb
adc
xor
cs
js
lds
popa
popf
insl
adc
inc
sti
xor
mov
jns
jno
repnz
or
in
mov
sub
divl
mov
inc
inc
ljmp
xchg
sbb
xchg
mov
push
adc
cltd
jb
xchg
mov
outsb
repz
pusha
mov
ffreep
dec
mov
cli
xor
rcrb
mov
aaa
mov
or
xlat
mov
jle
xchg
scas
lds
mov
add
cmp
outsb
sbb
lock
out
lret
add
mov
fidivl
cmc
outsb
lods
icebp
mov
push
xchg
jae
adc
cs
fwait
sub
xor
das
cwtl
pop
out
cmp
or
push
aas
sbb
cmp
rcl
fnstenv
or
push
les
pop
mov
out
divl
test
ss
in
clc
jl
pop
lretw
inc
fnstenv
pushl
imul
mov
gs
lods
les
lea
sti
mov
fcmovnb
fwait
or
mov
stos
rcrb
sbb
inc
xlat
or
push
or
in
sbb
jl
iret
das
faddl
xchg
ljmp
inc
push
or
mov
mov
jns
and
outsl
push
sbb
hlt
cmp
lcall
scas
xlat
pop
fistps
cmp
pop
pop
gs
sbb
lea
rcrl
iret
fwait
lock
int3
or
push
or
das
xor
ja
jno
dec
jge,pt
mov
call
unpckhps
sbb
push
adc
rcrl
test
sub
pop
xchg
dec
xor
call
scas
dec
jle
outsl
jecxz
jp
leave
push
jo
sbb
int
dec
fistpl
leave
insl
jle
loopne
sub
jecxz
jp
ret
incl
push
adc
add
pop
fdivl
mov
in
fiadds
sbb
xlat
lods
mov
fsubs
xor
mov
out
loopne
mov
ret
jns
aam
rcl
sub
pslld
cld
mov
xchg
roll
sbb
pop
push
dec
mov
pop
jge
mov
dec
jg
pop
add
pop
movsb
mov
jb
decb
or
pop
sbb
pop
add
js
cmp
adc
mov
mov
dec
cld
fucomip
or
cmp
jl
js
sub
push
aaa
jb
push
push
push
imulb
jp
dec
push
mov
js
adc
mov
pop
push
add
lea
ficompl
pushl
iret
pop
pop
mov
mov
lret
mov
ljmp
add
sbb
call
push
dec
jne
xchg
sbb
push
lea
mov
rorl
mov
in
pop
outsb
pop
cmp
mov
int
push
cld
call
sub
mov
aaa
lret
sti
je
mov
add
cmp
out
or
testb
mov
je
call
mov
sub
clc
pop
adc
sub
add
pop
jnp
int3
push
loopne
lret
mov
sbbl
add
fsubr
ss
subl
mov
mov
in
imul
insl
add
out
ljmp
push
jo
lahf
jns
and
gs
divl
and
int
xchg
mov
or
push
xchg
add
js
test
jnp
mov
and
out
xchg
cld
inc
mov
lods
push
ss
mov
aam
xor
inc
lods
outsb
fimuls
fmull
inc
push
pop
inc
sbb
xchg
iret
push
pop
xor
popa
jmp
sub
and
push
outsb
movsl
or
sbb
in
dec
xchg
add
out
push
das
dec
inc
roll
pop
pop
mov
mov
sub
bound
dec
push
push
jbe
cmp
xor
insb
pop
mov
fisttpll
xor
push
sbb
fldt
pop
int3
add
roll
andb
arpl
data16
adc
sbb
push
add
cmp
push
jne
add
inc
stc
push
cmp
faddl
cmp
insb
cmp
xlat
testb
gs
mov
popf
lock
das
sub
push
lea
cmp
sub
push
neg
adc
pushf
add
out
push
mov
sbb
push
dec
int3
mov
jp
cltd
por
leave
sbbb
mov
pop
push
xchg
and
sub
mov
movsb
push
clc
inc
add
adc
xrelease
jmp
sbb
adc
push
out
fdivr
je
dec
dec
cmpw
jne
pop
push
arpl
inc
add
cmp
ja
mov
push
cmp
pop
sub
jmp
fwait
mov
push
mov
push
mov
int3
xor
or
inc
lret
les
aad
jbe
cmp
inc
xorl
pop
fwait
ret
push
or
arpl
push
xor
pop
xchg
cmp
out
jbe
testb
mov
cmp
je
cmp
jne
push
stc
lcall
pop
rcll
push
outsl
loop
add
cmp
mov
stos
loopne
mov
test
shlb
sub
adc
xchg
fadds
lods
ja
add
loopne,pt
loopne
cmpsb
xchg
cmp
cmovb
add
cmp
inc
pusha
cmp
subb
inc
aam
rcll
xor
movsb
pop
and
adc
cli
es
xchg
insb
test
stos
in
mov
mov
aad
mov
scas
mov
out
xor
fistpl
push
push
push
nop
out
outsb
ret
pop
fsubp
add
xlat
inc
cmp
mov
lret
xor
fcomps
adc
jne
in
je
fimuls
dec
cmp
mov
call
dec
adc
loope
sub
insb
sub
adc
or
sti
sub
mov
fldt
pop
add
jg
std
lcall
inc
xor
mov
int
call
cmp
imulb
and
pushf
insb
iret
std
jbe
mov
inc
push
mov
decl
int3
cmp
mov
ret
jne
cmpl
push
rcr
jo
mov
mov
sub
mov
mov
cmp
shlb
mov
mov
in
xchg
in
sbb
pop
mov
sbb
pop
call
call
push
mov
cmpb
adc
cltd
pop
or
mov
shrb
mov
movsl
xchg
adc
jmp
sub
ss
dec
mov
jmp
movsb
add
jo
outsb
pop
out
test
outsb
mov
push
inc
adc
into
lods
push
mov
sti
lret
jo
add
test
sbb
jg
fnstsw
lods
push
insl
mov
xchg
lret
in
mov
mov
mov
mov
mov
jb
pop
cs
mov
mov
fdivl
mov
add
pop
xchg
movsl
sub
mov
pop
xchg
gs
outsl
jb
jb
mov
mov
and
fcmovu
gs
mov
mov
mov
gs
pop
in
in
imul
out
dec
out
call
sbb
insl
jae
shll
sub
push
xlat
xor
cmpsb
pop
outsb
mov
add
xor
lret
cmp
int3
hlt
xchg
lcall
mov
pop
mov
lcall
xchg
insb
mov
mov
mov
sarb
mov
fwait
insl
cmpsb
xor
test
push
test
xor
cmc
div
clc
ds
hlt
cli
add
xchg
or
lea
and
inc
pushw
rolb
pop
cmp
pop
lret
add
jl
aaa
rclb
test
in
in
pop
inc
int3
pop
push
loope
jmp
and
ds
mov
sbb
scas
or
xchg
sub
jmp
dec
rolb
cs
jae
hlt
inc
mov
imul
pushf
in
das
mov
mov
out
shlb
lea
rcl
and
mov
jge
sti
sub
addr16
loopne
nop
add
insl
fcom
loopne
xchg
imul
dec
jbe
popa
xor
ret
mov
test
xchg
cmp
push
push
inc
sub
nop
jmp
aaa
xor
dec
cwtl
inc
les
inc
fmuls
ret
jmp
adc
push
mov
nop
repnz
lahf
fsubrl
hlt
cli
call
pusha
pop
cs
inc
or
scas
clc
hlt
cld
cmp
jns
inc
cmc
cld
xor
mov
mov
xchg
fwait
mov
out
repz
insb
mov
jbe
add
sub
pop
mov
cs
sub
mull
or
pushf
outsl
in
mov
cmp
sub
test
adc
push
jp
mov
sbb
push
or
or
out
adc
addr16
andl
add
aaa
sub
sbb
add
push
mov
xor
loopew
adc
test
loopne
cwtl
inc
adc
push
jnp
sbb
addr16
je
stc
sbb
call
mov
sbb
enter
out
out
sub
outsb
jne
push
loopne
fcmovnb
add
cmp
test
cmc
cmp
ficoms
scas
inc
mov
out
pop
adc
cmpl
mov
sub
jl
jb
cmp
hlt
adc
sub
mov
jmp
push
mov
jb
xchg
cmp
push
jecxz
xchg
sub
xchg
mov
xor
lret
mov
bound
inc
mov
inc
or
andl
or
clc
cs
loopne
imul
arpl
sbb
shrb
xor
loop
loopne
mov
or
cmpsl
sub
popa
push
inc
adc
adc
lods
loop
cmpsb
sbb
and
fcomps
inc
push
and
xlat
jmp
mov
scas
lock
outsl
scas
fs
bound
shl
push
and
inc
mov
in
andl
or
mov
call
pop
shlb
pop
or
pop
and
dec
imul
mov
add
fs
pusha
mov
sub
fwait
cld
test
fs
imul
cmpsb
imul
sub
outsb
das
fsubs
ja
fildl
or
fidivs
fbstp
and
xor
xor
dec
mov
pop
xor
sti
cld
std
insl
scas
fstps
sbb
lcall
mov
xor
lcall
fs
pop
insl
xlat
add
bswap
pop
pop
gs
xchg
or
dec
popa
js
gs
xchg
je
outsl
outsb
xor
je
lcall
add
jo
in
xchg
mov
pop
insb
lock
sbb
sbb
pop
pop
push
or
in
sbb
xlat
xchg
out
pop
push
clc
fldenv
or
pop
push
pop
push
hlt
push
nop
add
xor
arpl
pop
in
xor
int
pusha
adcl
in
pusha
push
ljmp
and
rolb
mov
imul
imul
add
ja
scas
mov
lret
adc
cmp
fnstenv
inc
adc
into
ret
cmpb
sub
int
push
mov
ljmp
xor
mov
add
fadds
pop
inc
xor
bound
adc
ds
xor
popf
sahf
add
out
outsl
or
or
mov
loopne
in
inc
add
in
cmp
cli
fdivr
mov
mov
clc
lock
jge
lds
and
jg
xlat
or
mov
cmp
dec
xchg
rep
ss
mov
push
stc
inc
in
adc
hlt
in
lret
andb
adc
or
out
push
pop
push
adc
pop
mov
sub
push
or
jne
jo
and
and
mov
or
test
aaa
in
out
out
test
push
or
std
lock
and
jo
scas
cmp
lea
push
jns
loop
movsl
movsb
cmp
hlt
pushf
shlb
sub
xchg
std
in
mov
and
mov
addl
inc
fs
add
push
adc
push
pop
mov
push
push
rclb
inc
movzbl
inc
push
sbb
cmc
jl
bound
aas
shlb
andb
mov
testb
ret
out
stos
add
clc
add
add
out
push
dec
jo
leave
mov
shrl
popa
fisubrl
fldt
hlt
cs
fs
insb
scas
lcall
inc
test
stos
imul
imul
xchg
xor
sub
mov
icebp
jne
add
dec
adc
cwtl
xchg
sahf
sbb
xchg
xchg
jae
adc
outsl
jne
in
test
mov
fmull
dec
inc
xchg
sbb
xchg
inc
xchg
push
cwtl
test
mov
cmp
das
adc
call
loop
hlt
xchg
or
fsubr
lods
inc
cmp
add
push
adc
sub
data16
or
xchg
sub
in
jl
cmpsb
mov
sbb
addr16
or
test
mov
hlt
lds
imul
sahf
int
in
push
push
aaa
push
cmp
out
out
cmp
fstps
add
lock
ja
sbb
cld
pop
mov
xchg
xchg
dec
mov
mov
mov
push
xlat
add
loop
lea
mov
jmp
hlt
addl
push
sahf
loopne
aas
mov
or
dec
sbb
jne
jp
adc
inc
je
idivb
popa
inc
divb
sbb
jb
push
decb
lcall
jle
mov
add
inc
push
in
insb
out
pop
or
or
dec
out
adc
jo
dec
ljmp
sbb
push
mov
sbb
loope
std
mov
ljmp
pop
jl
mov
xchg
popf
inc
dec
das
mov
jns
cmp
sub
enter
cmp
jl
sub
aam
adc
stc
sbb
frstor
jmp
insb
add
std
sahf
sbb
xchg
xchg
push
vmwrite
xchg
sti
mov
adc
adc
pmaxub
pop
mov
push
scas
lock
movsb
or
adc
lret
push
fsts
jnp
roll
lds
or
shrl
or
or
xchg
outsb
mov
jmp
sbb
or
mov
mov
mov
sub
and
fidivrl
popa
cmp
jae
je
jb
es
sahf
adc
dec
mov
movsl
dec
shrl
cmpsb
cmpsl
jo
test
pop
mov
xorl
gs
jae
jb
cmp
jae
insb
cmp
imul
lcall
push
test
lcall
cmpsb
pop
outsb
das
enter
lret
int3
imul
shll
rcll
aam
aad
shlb
xor
shrl
imul
xor
imul
jae
arpl
xor
add
xor
roll
lcall
je
and
or
dec
sarl
call
sahf
mov
orb
call
xchg
cmovle
xchg
fwait
in
int3
lea
jp
sti
mov
cs
push
jnp
or
push
sub
xor
jb
loop
xor
push
push
rolb
cmp
pushf
mov
or
push
xor
mov
js
jo
je
sub
push
dec
pop
into
leave
insl
orb
push
xor
push
xor
lsl
xchg
mov
mov
out
pop
inc
push
cwtl
arpl
mov
mov
add
addl
stc
mov
stc
mov
jge
sar
xchg
or
addr16
adcb
push
push
lea
xor
adc
stos
leave
popf
jne
mov
push
pop
push
cmp
fadds
hlt
js
cmpsl
push
fsubs
fdivrs
dec
jo
push
add
fwait
or
imul
jg
scas
add
push
sbb
or
int3
jecxz
sub
je
sti
pop
jmp
or
pop
xchg
mov
movaps
rclb
adc
enter
push
movsb
ret
push
cmp
icebp
js
setbe
mov
fisttps
nop
adc
pop
add
mov
inc
and
dec
enter
add
fldt
rol
popf
les
clc
insb
or
add
mov
lret
mov
aam
fsub
pop
mov
xchg
rcll
pop
dec
push
adc
and
es
dec
test
and
mov
cmpsl
jmp
mov
inc
push
clc
call
xchg
aam
push
fnsave
xor
les
xor
add
jp
jb
dec
dec
repnz
fisubs
fnstsw
mov
push
into
inc
nop
jnp
call
dec
cltd
mov
idiv
push
jle
ret
popa
loope
push
hlt
cmp
and
loope
lods
or
xor
add
add
or
mov
outsl
je
xor
lret
add
mov
pop
negl
push
ret
or
xchg
sub
or
es
adc
sarl
hlt
push
xor
pop
xchg
add
pop
xchg
gs
inc
push
cs
inc
push
xchg
insb
insb
cmp
mov
add
jo
insb
jne
mov
lret
jae
fs
insb
push
dec
roll
or
adc
cmpsb
imul
cmpsb
imul
imul
mov
sahf
lods
mov
add
jo
dec
jo
shll
jno
sub
cs
gs
roll
aam
fnstenv
dec
rorl
lea
mov
nop
inc
xchg
gs
lcall
xchg
xchg
xchg
xchg
inc
push
cwtl
js
movsb
imul
je
pop
roll
loopne
loope
dec
shll
jecxz
in
xor
mov
ds
mov
mov
in
mov
lgs
inc
in
mov
mov
mov
mov
mov
and
pop
fnstenv
test
and
and
xchg
mov
adc
fstl
clc
add
nop
movsl
lret
std
cld
cld
std
jmp
jno
push
mov
and
fmulp
mov
xchg
add
fldl
push
add
int
pop
push
xchg
xor
rolb
sub
pop
jle
inc
mov
lea
test
mov
jmp
push
pop
ss
mov
in
and
xlat
sqrtps
adc
adc
fistpl
imul
fadds
inc
cwtl
imul
ss
cmp
or
inc
loopne
sbb
out
mov
push
mov
and
lds
lret
iret
push
invlpg
cmp
mov
sti
jp
pop
test
ss
leave
xchg
add
and
cld
adc
stos
cli
jmp
and
adc
dec
sbb
sti
push
cwtl
push
push
aas
cmp
add
and
adc
pop
sti
push
repnz
or
fstps
mov
or
rclb
add
jb
lods
orl
push
push
dec
inc
cmp
jb
inc
incl
pushf
add
addl
add
enter
dec
shll
xor
push
xor
fs
insb
insb
adc
sbb
sub
arpl
push
pop
mov
insw
jne
movsb
orl
lret
rcrb
mov
inc
mov
je
cmp
cmpsl
push
popa
mov
imul
lcall
push
fs
mov
and
and
and
lock
add
cmp
and
cli
fnsave
jmp
xchg
call
mov
sub
or
pushf
divb
xlat
ljmp
pop
mov
adc
ret
xor
jne
jne
jb
inc
xchg
data16
push
aaa
sbb
jne
jmp
and
loopne
or
sahf
jns
push
cmp
push
xlat
fwait
jge
push
int3
inc
inc
dec
push
loopne
imul
cmpsb
imul
lcall
add
imul
daa
in
out
adc
ds
popa
sbb
iret
test
jae
negl
pusha
mov
rorb
in
movsb
add
mulb
pop
pop
adcl
mov
add
add
inc
rcll
push
jo
push
js
hlt
xor
int3
ret
pop
nop
pop
lods
xor
test
fmul
int3
pop
stos
sahf
pop
jo
pop
inc
lods
or
lock
adcb
push
adc
jae
dec
shll
imul
dec
shll
je
dec
pusha
rcl
sub
enter
pop
loopne
int3
lock
in
cmc
je
cmpl
xor
push
loop
jnp
mov
ds
lds
ja
xchg
or
xor
inc
xor
sub
lea
jg
stos
stos
imul
pop
jb
or
and
pop
xchg
jmp
call
sbb
test
xchg
nop
inc
cmpsb
lods
and
pop
ds
inc
add
xor
js
dec
xor
jg
pop
repz
loopne
pop
roll
adc
shlb
or
clc
lret
jl
loopne
push
mov
push
outsl
mov
push
inc
xchg
outsb
push
and
sbb
push
jl
xorl
aam
shlb
ret
cmp
push
loopne
mov
jne
inc
lret
dec
push
cmp
int3
rorl
mov
mov
push
mov
enter
mov
mov
fdivrl
pop
mov
or
pop
dec
or
add
cmpb
adc
xchg
test
test
jg
or
iret
inc
push
sbb
or
std
cwtl
insb
inc
in
dec
inc
cwtl
and
sub
mov
popa
arpl
mov
lret
outsl
outsb
cmp
lret
mov
popa
imul
cmpsb
imul
pop
push
mov
bound
mov
mov
mov
rol
ret
lcall
mov
subb
add
int3
fldcw
popa
arpl
outsl
cmc
outsb
cmp
imul
xchg
cmpsb
jns
cmp
push
rorl
imul
outsl
fildl
imul
adc
dec
mov
adc
dec
cmp
in
jmp
push
sbb
jmp
mov
or
je
cwtl
pop
adc
ljmp
popa
push
inc
sahf
push
fdivp
sbb
or
cmp
call
push
es
push
xor
int
sar
xchg
cld
clc
cltd
cmp
push
hlt
shlb
aas
sub
mov
shlb
loopne
movsb
jg
orl
pop
add
iret
xchg
cli
les
dec
xchg
in
aas
arpl
cmpsb
loope
pop
cmp
pop
mov
jb
es
jne
or
sbb
sbb
in
xlat
jne
dec
ret
insb
sbbl
imull
pop
add
in
scas
sub
test
xchg
cltd
popa
cwtl
sbb
sbb
ja
clc
popa
imul
jb
arpl
xor
xor
outsl
popa
jb
mov
pop
cmp
sub
or
in
fs
ljmp
je
out
jns
out
inc
int3
push
fisubrl
cmp
insb
dec
bound
jb
lock
mov
mov
xchg
insb
lcall
lods
xlat
mov
push
xor
jp
in
push
mov
or
mov
imul
and
call
shrl
hlt
dec
xor
sbb
add
mov
idivl
mov
fcompl
and
movsb
push
push
and
inc
jmp
dec
xor
fsubrl
aaa
jle
adc
movzwl
push
outsl
fistl
shlb
push
adcl
or
cmp
jl,pn
add
jl
test
fcoml
push
movl
int
jge
dec
dec
lret
pop
push
push
push
lret
adc
loopne
enter
mov
loopne
push
nop
inc
sbb
movsb
and
jge
sbb
test
xchg
xchg
push
cld
loope
jecxz
xchg
xchg
xchg
in
out
mov
insl
lret
test
std
ds
inc
loope
dec
jno
popf
mov
sarl
mov
push
imul
sbb
mov
jmp
xchg
adc
daa
mov
lock
sbb
mov
jae
frstor
fdivrp
mov
mov
push
loope
pop
loop
enter
jecxz
in
in
xlat
mov
out
cld
push
out
xchg
loop
pop
sub
push
or
mov
icebp
and
roll
test
push
jo
adc
add
aam
push
adc
fdivr
adc
out
dec
and
frstor
add
push
mov
leave
pushf
mov
inc
aad
call
mov
dec
out
call
in
dec
adc
push
add
inc
mov
add
sahf
inc
xlat
push
cmpsb
mov
and
test
pop
xchg
pop
cmp
sbb
adc
ret
adc
or
cmp
add
ds
mov
pop
mov
push
mov
mov
mov
mulb
dec
or
insb
xchg
outsl
mov
sub
and
inc
sahf
cmp
add
mov
jnp
iret
dec
inc
jo
mov
jge
mov
pop
mov
mov
jmp
push
movb
jnp
ret
arpl
and
xor
nop
jns
mov
xchg
sbb
in
push
cli
mov
stos
xchg
cld
pop
inc
pop
push
xchg
arpl
pop
lret
lods
inc
cmp
xchg
and
sahf
rolb
cmc
mov
adc
stos
and
xchg
sbb
pop
sti
mov
mov
adc
jge
push
push
add
loopne
test
and
rcrb
xor
pop
pushf
sbb
dec
jo
in
data16
sub
push
mov
imul
or
mov
adc
cmpb
je
inc
push
xor
mov
or
lea
pushl
pop
stos
das
andb
fsubl
outsb
push
and
dec
lock
sbb
pop
pusha
push
nop
imul
adc
aaa
into
or
ja
not
lahf
push
mov
adc
sbb
rclb
leave
inc
mov
daa
adc
lods
subl
das
cmp
scas
jecxz
push
push
andb
add
out
std
out
or
jbe
and
rolb
adcl
mov
inc
cmp
jb
cmp
inc
leave
sub
popa
adc
ds
add
lods
mov
add
push
ret
cmpsb
and
or
jle
and
mov
fcoml
sbb
imul
cmp
cmp
clc
call
loop
call
cwtl
inc
mov
mov
je
adc
inc
mov
scas
xchg
push
xchg
pop
mov
adc
or
push
xlat
jl
push
sub
rclb
jns
insb
or
jmp
les
inc
mov
cmp
push
les
adcb
and
lcall
je
jmp
mov
push
sub
mov
push
out
mov
or
int3
adc
inc
jmp
add
std
push
xor
adc
inc
fisttpll
and
cmp
das
adc
mov
shl
inc
popa
in
add
push
fdivrl
cmp
add
adc
push
shr
ss
adc
and
mov
mov
clc
push
cltd
test
dec
pop
push
or
push
out
jmp
mov
pop
fmul
popa
mov
pop
sub
lods
sbb
push
ja
xor
hlt
jne
jmp
in
pop
mov
pop
add
xor
adc
push
movsb
call
out
push
add
inc
cmp
jmp
add
mov
sub
pushf
pusha
cmpsb
int
ret
gs
add
or
jge
hlt
movzbl
mov
call
jne
sub
push
fwait
sti
aad
jl
sub
cmp
jne
and
js
lods
filds
mov
jne
mov
pop
js
inc
or
mov
push
xlat
or
xor
mov
add
ret
lret
or
push
and
mov
movsb
ja
push
adc
or
or
fsubrl
lods
cmp
add
inc
mov
mov
jne
lret
shr
test
jp
ja
jge
or
jbe
lods
fstps
jne
cwtl
mov
xchg
lahf
cmp
jne
pop
jge
jne
in
xor
jo
frstor
push
mov
in
mov
or
cmpsb
jnp
jg
or
mov
fadds
push
adc
pop
jbe
loopne
jmp
fs
ret
xor
fcomps
pop
xchg
test
fists
mov
das
orb
subl
testb
mov
add
inc
push
lahf
dec
pop
mov
pop
movsb
add
cwtl
dec
or
cli
mov
sub
jmp
push
pusha
inc
or
gs
jbe
out
rorl
mov
push
jge
idiv
fnsave
sahf
adc
xchg
dec
add
sub
lret
xor
push
jecxz
sub
mov
mov
cltd
xchg
ds
packsswb
lds
push
mov
imul
ljmp
push
add
notl
or
sub
fadds
pop
orb
outsl
xor
mov
sub
or
sbb
or
subb
shrl
loop
sub
sub
ss
mov
push
arpl
inc
or
xchg
sti
mov
lea
or
js
mov
mov
cwtl
nop
and
push
mov
push
or
std
out
nop
imull
jmp
cmp
add
cmp
cmp
pop
shlb
jg
jle
cmp
jl
cmp
jg
push
inc
call
pop
jb
dec
pop
sbb
ret
dec
xchg
jb
cmp
lea
sbb
add
sti
es
ja
push
stos
call
mov
inc
mov
je
mov
xchg
cmp
cld
inc
xor
fwait
adc
or
pop
adc
inc
pop
fadds
and
loope
jb
sbb
inc
ret
in
xor
bnd
sbb
jmp
sub
stos
in
clc
xor
mov
nop
and
or
pop
mov
xor
test
add
or
ret
xor
mov
nop
scas
test
and
xor
inc
sahf
sub
adc
and
and
in
xchg
pushf
jno
xor
clc
and
sbb
and
xor
xor
push
and
in
data16
stos
mov
cs
pop
adcl
and
cmpl
and
xchg
xor
cmp
sbb
sub
xor
mov
or
ljmp
hlt
pop
xchg
gs
push
je
lods
andb
ljmp
dec
fnstenv
jae
cmp
adc
add
clc
xchg
add
adc
mov
add
push
jne
inc
mov
push
addb
xchg
movsb
nop
push
push
and
inc
or
or
xchg
fnstcw
and
pushf
add
arpl
sub
add
xor
mov
jmp
test
jmp
fsubrp
fsubl
xor
ret
dec
push
fisttpll
push
outsb
fmuls
mov
push
out
je
sahf
in
fdivl
stc
rol
xorb
popa
call
mov
iret
pop
pop
and
and
xchg
add
lock
in
in
adc
adc
and
mov
adc
inc
gs
and
lcall
in
inc
inc
bound
jecxz
int
sbbb
jne
push
loope
adc
inc
push
lcall
scas
push
or
insb
xchg
xor
mov
add
mov
and
sub
add
stos
add
dec
and
daa
fwait
movsb
stos
xchg
xor
xor
hlt
cmpl
and
cld
and
dec
cmp
leave
xor
xor
and
xor
test
call
lahf
sbb
add
mov
and
mov
aam
aad
lret
mov
inc
mov
sub
and
adc
movsl
add
pushf
add
cltd
mov
in
jo
sub
mov
mov
std
and
fwait
sub
enter
sub
dec
popa
dec
arpl
dec
cmp
mov
fs
data16
push
je
or
adc
pop
push
and
dec
mov
pop
aam
les
test
rol
pusha
cmp
jle
shlb
inc
or
cwtl
sbb
jae
add
or
xchg
out
jae
xor
pop
xor
cwtl
xchg
push
into
fdivs
je
fs
in
adcb
inc
xchg
xchg
outsb
flds
pop
call
filds
xor
cld
add
xor
inc
inc
inc
movb
mov
adc
cmpsl
or
push
xchg
xchg
adc
pop
push
pop
daa
ss
dec
out
add
stos
imul
adc
sub
mov
movsb
xor
cltd
lock
mov
and
mov
add
inc
jb
arpl
lahf
mov
add
mov
push
testb
push
cmp
inc
adc
or
pop
add
addb
stos
xchg
and
add
inc
cmp
ss
adcb
scas
xor
cmpsb
add
and
add
inc
or
adc
xchg
add
fs
push
sbb
dec
incb
sbb
xchg
mov
or
and
stos
adc
loope
int
adc
aad
sub
push
adcb
fistl
and
aad
add
add
divl
sub
and
das
dec
add
push
jns
add
outsl
imul
jmp
sub
mov
push
add
pop
inc
imul
test
cmp
add
jns
mov
inc
imul
dec
outsl
adc
adc
xor
imul
add
mov
outsb
push
pop
add
mov
push
mov
fdivrs
add
pushf
fwait
or
jbe
add
inc
sbb
or
pop
lods
pop
xchg
jae
xchg
cli
adc
test
pusha
jge
mov
pop
dec
roll
add
insb
popa
xchg
sbb
sub
pusha
gs
xchg
or
popa
xor
faddp
and
incl
inc
sbb
inc
imul
jmp
pop
and
stos
push
mov
shlb
mov
inc
or
fiadds
loopne
dec
adc
sbbb
addr16
aad
and
mov
sub
push
cmp
xchg
or
add
mov
fimuls
xor
sbb
add
je
and
xchg
leave
lcall
test
insl
sub
sbb
and
jae
xor
xchg
sub
lea
dec
mov
add
add
and
gs
or
pop
xor
jb
cmp
add
adc
inc
outsb
jne
fidivrl
sub
dec
add
or
mov
repz
xor
testl
cmp
jo
rcr
pushf
movsb
gs
and
data16
inc
xchg
popa
xchg
das
ss
fistps
or
or
mov
mov
out
cmp
adc
jns
pop
adc
cmc
push
jo
push
and
cmp
mov
cmp
mov
ret
mov
mov
inc
pop
push
add
loopew
cltd
out
mov
dec
sbb
xchg
bound
outsb
imul
sti
cwtl
in
or
xchg
dec
add
xorb
push
xchg
sbb
pop
add
rol
mov
packssdw
push
fdivrs
pushf
jge
insl
or
jae
add
xor
mov
into
in
inc
add
sbb
pusha
sub
xor
sarb
addps
xor
inc
fcoml
mov
push
inc
sub
adc
popf
lods
inc
sti
dec
inc
dec
push
dec
xchg
mov
fsubrs
mov
xlat
mov
in
jo
or
xor
mov
outsb
shlb
push
mov
mov
lret
addl
dec
dec
repnz
push
gs
add
ja
sbb
pop
cmp
lods
cmp
mov
ds
add
sbbl
mov
ss
fdivs
jmp
ss
ss
aaa
sbb
dec
aaa
pop
aaa
pop
aaa
add
and
pop
cmp
cmp
jl
nop
cmp
cmp
cmp
cmp
push
cmp
imul
mov
cmp
incl
cmp
pop
cmp
ja
mov
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
ljmp
mov
cmp
lock
aaa
ds
ds
bound
jo
cmpb
ds
ljmp
adc
dec
aas
pop
aas
outsb
aas
jne
xor
outsl
sbb
imul
xor
xor
xor
xor
ja
nop
xor
xor
xor
xor
push
xor
cmp
cmp
cmp
imul
xchg
mov
fidivrl
adc
and
inc
xchg
in
decl
lea
sahf
aas
iret
aas
loop
jmp
pusha
pushl
or
adc
cmp
aas
xor
dec
xor
xor
xor
xor
xor
xor
xor
xor
xchg
xor
xor
xor
stc
xor
pushl
dec
ss
ss
shlb
aaa
mov
xchg
aaa
mov
sub
cmp
cmp
sti
cmp
cmp
push
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
imul
cmp
cmpb
cmp
cmp
cmp
dec
add
xor
cmp
push
cmp
push
fcomip
cmp
cmp
dec
sarl
fidivrl
loope
jmp
cmp
or
cmp
jl
cmpl
lcall
movsl
ds
ds
fistpll
add
imul
stos
aas
sub
aas
mov
aas
in
out
aas
stc
adc
cld
lcall
push
push
dec
xor
pop
xor
xor
xor
or
xor
xor
sub
pop
xor
pushl
xchg
xor
xor
xor
xor
xor
xor
xor
xor
and
ret
xor
xor
xor
xor
xor
xor
xor
xor
xor
adc
lcall
mov
ss
sub
jno
jbe
jl
fnstenv
inc
cmp
pop
cmp
idiv
cmp
lcall
cmp
cmp
cmp
pop
adc
or
pushl
cmp
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jp
mov
sarb
sub
xor
stos
ds
lock
ds
ds
clc
add
or
xchg
aas
popf
aas
test
aas
mov
aad
fistpll
in
aas
repz
std
aas
popf
jg
mov
pop
adc
es
xor
xor
jnp
shll
xor
mov
xor
xor
mov
mov
mov
xor
xor
jg
popf
pop
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
jg
xor
add
pushl
add
push
aaa
adc
jg
sbb
xor
inc
aaa
jae
jns
mov
aaa
fbstp
dec
cmp
sub
cmp
cmp
cmp
movsl
cmp
cmp
paddd
cmp
cmp
cmp
cmp
cmp
cmp
xchg
xchg
cmp
lods
cmp
sarb
daa
cmp
cmp
cmp
cmp
cmp
cmp
cmp
pushl
cmp
inc
cmp
pop
cmp
jne
jns
cmpb
cmp
pushl
lret
cmp
out
in
ljmp
cmp
ds
or
sub
ss
fwait
mov
inc
ds
ds
ds
arpl
xchg
dec
popf
ds
jmp
push
jecxz,pt
call
aas
sub
inc
pop
push
aas
pop
aas
jbe
xchg
aas
mov
out
nop
mov
xor
xor
xor
push
xor
popa
xor
jb
icebp
das
cwtl
incb
xor
jecxz
icebp
xor
ja
fistpll
xor
xor
push
xor
insl
xor
popf
xor
mov
xor
xor
xor
xor
popf
decl
xor
xor
xor
xor
xor
xor
xor
xor
xor
pop
xor
xorl
hlt
xor
xor
xor
xor
test
lock
pushl
xor
xor
xor
xor
xor
xor
xor
xor
xor
mov
adc
pushl
sub
dec
xor
movsl
xor
outsb
ss
cmp
js
xchg
mov
nop
ss
mov
ss
aad
xchg
or
ss
divb
fcomip
mov
cmp
pushl
xlat
jnp
lea
sahf
cmp
cmp
je
nop
cmp
cmp
mov
ljmp
cmp
test
repnz
cmp
cmp
scas
incl
cmp
cmp
test
push
adc
inc
jb,pt
decl
mov
ds
loope,pt
in
ds
inc
mov
aas
sbb
mov
mov
in
ret
addr16
add
xor
xor
xor
fcomip
mov
mov
xor
fdivs
loop
call
xorl
inc
xor
dec
xor
xor
xor
xor
inc
adc
add
rolb
mov
mov
push
sbb
repz
notb
cmpsl
jne
add
jns
adc
nop
mov
ja
jge
mov
je
dec
pop
shrb
sti
inc
mov
mov
add
or
incl
enter
add
idivb
nop
and
pusha
push
fisttpl
loopne
and
cs
mov
add
push
cmpxchg
jb
cmp
adc
push
jae
arpl
ret
and
pop
add
inc
xchg
add
push
pop
lcall
mov
shrb
xor
xor
xor
mov
pop
movb
imul
insb
lcall
xor
leave
dec
push
andb
dec
shll
aam
pop
cmp
je
pusha
pop
js
push
push
inc
int
add
xor
push
lock
push
dec
dec
inc
and
sar
push
xor
cli
add
pop
mov
test
xchg
sbb
roll
sbb
idivb
jns
jne
jae
xor
pop
push
test
js
call
test
and
add
add
add
dec
dec
addl
outsb
das
add
sub
push
push
inc
and
add
daa
dec
inc
stos
push
push
pop
mov
mov
or
movsl
or
and
test
mov
adc
xchg
test
add
adc
add
mov
jne
add
add
add
or
inc
xor
or
add
jae
sahf
add
cmp
push
fwait
scas
les
clc
aam
mov
xlat
cmp
push
les
mov
inc
int3
insb
mov
mov
insb
out
cmp
in
cmp
sub
out
pop
sub
in
jne
sbb
je
test
mov
inc
lock
lret
adc
jne
mov
jmp
push
cld
arpl
cmpl
jbe
xchg
popf
int
mov
inc
cld
sub
daa
sub
xor
mov
cmp
mov
bound
mov
and
mov
dec
or
pusha
sbbl
pop
popa
cwtl
es
jnp,pt
in
mov
and
or
adc
int
jno
sbb
add
mov
pop
add
insl
mov
push
xchg
sbb
lret
push
shrb
insl
insl
dec
lcall
pop
xchg
test
insb
dec
dec
mov
cwtl
inc
sbb
not
mov
nop
dec
push
and
sub
add
dec
insl
insl
sub
jb
inc
je
dec
inc
dec
shll
cwtl
gs
popa
insl
sub
xorb
lods
push
in
hlt
pop
push
mov
sbb
shl
push
mov
aad
and
cmpb
cmp
cmc
or
out
add
aaa
dec
call
push
xor
jno
and
lret
out
daa
pop
lea
push
addr16
mov
inc
es
mov
enter
xor
mov
and
roll
call
push
sub
addb
push
sbb
mov
add
dec
dec
inc
dec
mov
pop
dec
cli
push
xor
push
pop
ds
push
jne
roll
pop
cmp
fcompl
negl
mov
xchg
dec
push
inc
inc
sbb
mov
out
popa
out
mov
pop
add
dec
push
pop
add
fistpl
sbb
adc
cmovge
inc
les
dec
mov
int3
out
inc
and
popf
mov
insl
mov
dec
sbb
push
shll
push
hlt
pop
daa
and
adc
pop
and
cmp
pop
and
inc
in
xor
push
adc
sub
xchg
pop
leave
pop
sbb
pusha
in
repnz
xchg
add
or
or
add
xchg
add
cmpl
add
and
cmpb
mov
sbb
sbb
sbb
sbb
lcall
out
flds
lods
std
ss
repz
std
scas
int3
mov
inc
mov
mov
push
mov
mov
mov
mov
and
inc
mov
add
mov
aad
loopne
cld
shrb
test
in
leave
stos
lods
cld
jo
je
xchg
outsb
sbb
jb
in
mov
js
jo
ss
in
insb
fsubrs
fisubl
jb
fwait
sub
pop
cs
shrb
bound
add
mov
pop
sub
scas
inc
into
mov
scas
outsb
xchg
adc
mov
jmp
and
fmull
push
mov
jo
rol
add
sub
push
jge
fcmovb
fs
addr16
gs
push
subb
gs
xchg
gs
je
gs
lret
mov
scas
outsb
insb
popa
mov
lret
mov
outsb
arpl
stos
call
aaa
rorl
jno
pop
xchg
gs
adc
js
jne
xchg
jmp
sub
js
insb
outsl
jb
addb
mov
enter
mov
xchg
mov
adc
and
in
push
mov
inc
ret
sub
or
or
xor
leave
mov
and
jb
xor
or
clc
insb
divb
inc
lds
push
pop
push
or
mov
call
into
and
fistl
jl
or
fsts
arpl
push
jns
and
pop
push
jb
ret
jbe
or
subb
aas
into
mov
outsl
out
xor
aam
add
fcomp
sub
add
mov
mov
aam
cmp
call
shl
clc
dec
and
mov
xchg
mov
out
add
mov
mov
pop
lcall
mov
rcrb
test
loopne
mov
rcll
push
aam
movsb
outsl
mov
mov
cld
sbb
inc
push
sete
std
jbe
inc
lods
push
pop
xor
pop
mov
mov
add
cmpsb
jae
or
mov
clc
ret
lret
testb
adc
or
scas
imul
lea
add
or
xor
jp
insb
sub
sbb
inc
sub
inc
inc
mov
xchg
add
adc
add
add
cmp
xor
mov
js
fs
call
das
sti
add
pop
or
out
adc
nop
jl
sub
mov
fsts
add
dec
mov
bound
fdivrl
leave
jnp
dec
add
inc
push
jne
inc
jne
sbb
or
add
cmc
incl
xchg
add
mull
sbb
add
pusha
and
dec
aad
jno
inc
mov
pop
sbb
push
or
rcrl
cmpsb
adc
lods
stos
lds
sub
lahf
mov
cmp
ret
mov
add
nop
jae
push
mov
push
outsb
jb
aad
pusha
and
mov
inc
cmc
inc
outsl
js
xchg
fs
sub
cmpsb
xor
jno
fs
stos
xor
xor
imul
xor
sbb
dec
insl
insl
dec
jae
lods
dec
test
push
int
or
xchg
add
outsl
daa
sbb
xor
add
adc
xor
inc
imul
pop
sbb
push
add
xor
shrl
mov
dec
lcall
into
push
imul
xor
pusha
ret
cmp
leave
fcom
sub
gs
or
cmpsb
dec
shll
enter
shll
pop
out
clc
or
imul
xor
jge
add
adc
xchg
leave
add
push
add
sbb
scas
xchg
lods
lcall
add
or
or
dec
push
and
pop
es
scas
ljmp
add
outsl
insb
mov
rcll
jae
sbb
popa
adc
bound
or
xchg
inc
jbe
jnp
sub
stc
adc
xor
push
xlat
adc
jnp
dec
jno,pn
loope
sbb
insb
sbb
adc
andb
xchg
adcb
sti
fxch
or
jnp
imul
xor
cmpsb
fcoms
sub
xchg
pop
jns
pop
adc
mov
mov
sub
or
pop
xor
insl
movnti
adc
stc
or
mov
add
imul
dec
outsl
sbb
flds
jmp
dec
or
xor
adcb
inc
lcall
cs
mov
les
add
lods
push
cmpsl
pop
scas
jo
loopne
xor
or
dec
inc
psubusw
out
dec
add
add
imul
mov
aas
stos
add
shll
pop
or
add
lcall
dec
pop
fstl
or
mov
cmp
xor
fucom
mov
and
xor
jae
repz
add
movsl
popa
sbb
jnp
jae
add
addr16
gs
imul
ss
push
sub
sub
push
vsubsd
inc
push
jb
cmp
mov
fnstenv
xor
fstps
xchg
insb
popf
pop
xlat
xor
dec
or
push
fsub
mov
addr16
dec
mov
sub
faddl
inc
push
sub
pop
fs
or
daa
fs
es
dec
imul
push
daa
jbe
ret
jge
inc
shll
fs
test
dec
je
and
push
ret
xor
scas
jmp
gs
imul
and
cmp
insb
cmpsl
xchg
orb
out
add
add
shlb
mov
or
adc
xor
je
scas
xor
xor
ljmp
inc
xor
aaa
stos
ljmp
xor
xchg
repz
xor
and
pop
ss
lea
mov
cmp
inc
aaa
insl
aaa
je
mov
scas
aaa
mov
aaa
cli
pop
test
or
pop
cmp
jg
xlat
cmp
cmp
cmp
les
jle
mov
jmp
cmp
pushl
test
sti
ljmp
cmp
or
lds
call
aaa
stos
incl
or
cmp
pop
ds
mov
adc
addr16
stos
orb
cli
mov
add
push
gs
jne
arpl
inc
lds
mov
fldcw
pop
mov
mov
xchg
add
add
test
add
sbb
push
pop
sbb
jno
or
push
mov
add
dec
and
or
add
sti
and
add
jbe
loop
test
adc
adc
push
mov
aaa
insb
mov
xchg
adc
push
test
inc
inc
pop
add
rorb
add
pusha
add
xchg
xchg
popf
add
or
shrl
add
lmsw
insl
cmpb
stos
mov
pop
jne
jecxz
xlat
add
lds
psubusb
insb
dec
int
and
add
sbb
push
jno
mov
stos
inc
mov
add
test
sbb
push
movsb
sbb
into
inc
add
add
popf
cmovb
loopne
pop
and
xchg
fs
pusha
pop
and
xchg
jbe
nop
jns
adc
add
mov
addr16
inc
xchg
loop
rorb
add
add
add
add
add
add
add
incl
add
add
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
