add
std
ljmp
fs
lods
jb
push
rcrb
pop
movsl
insl
nop
out
xchg
mov
dec
lahf
fidivrs
movsl
cmp
or
jle
imul
add
jae
lcall
mov
lods
xlat
es
dec
xor
loopne
mov
or
xchg
es
clc
je
dec
cmpsb
and
adc
mov
aaa
xor
dec
sub
push
or
mov
xchg
inc
sub
leave
in
xchg
jl
call
inc
jl
cli
fstpt
enter
lods
xlat
les
int
cs
lds
xorb
mov
rcrb
inc
in
popf
nop
push
fnstsw
fistpll
mov
push
mov
mov
lods
adc
outsl
adc
data16
xor
pop
jo
stos
mov
fisubs
subl
xor
push
dec
test
sbb
adc
pop
sub
xchg
in
mov
lret
popf
shr
int3
js
fucom
or
dec
dec
xlat
testl
icebp
into
xchg
jbe
xchg
xor
js
or
shll
lcall
push
cmp
xchg
and
mov
psrld
mov
fcmovu
icebp
clc
test
rorb
push
cli
dec
sub
push
stos
bound
mov
xchg
sbb
xchg
jecxz
sub
lods
dec
xor
sbb
stc
lret
and
jecxz
mov
sti
inc
add
jl
ljmp
lahf
lret
mov
jbe
icebp
insw
rorb
jmp
enter
mov
movsl
xor
inc
movsl
lock
add
ds
push
inc
and
mov
mul
test
mov
arpl
js
sbb
fcoml
rcll
jg
repz
popl
cld
xor
imul
jge
fwait
lods
or
sub
mov
jl
sub
sahf
xchg
mov
aad
ret
adc
mov
sbb
into
test
std
dec
test
sub
shrb
gs
jns
imul
ds
xchg
cld
dec
add
dec
pop
push
cmc
adc
adc
or
inc
fwait
mov
sbbb
sub
or
mov
jbe
mov
adc
sub
sbb
pop
repz
sbb
dec
test
cmc
je
imul
lods
dec
mov
jmp
out
cli
out
popa
cld
js
in
sbb
loop
and
push
mov
lcall
xchg
adc
push
jmp
out
rep
loopne
sbb
je
std
cli
pop
xchg
mov
xor
shrl
pop
in
lret
sbb
jnp
mov
xchg
stos
xchg
punpcklbw
push
mov
jns
or
mov
fmuls
adc
push
or
adc
push
xchg
nop
sub
mov
cmp
aad
inc
xchg
mov
xor
test
push
add
pop
jnp
inc
cwtl
out
push
fiaddl
stos
stos
inc
and
lret
fdivrl
pop
hlt
lcall
loop
xor
ds
cli
push
std
dec
and
pop
outsb
add
mov
xchg
ret
ds
inc
jg
iret
add
push
rol
out
stc
jmp
sub
push
mov
aaa
adc
cmp
add
inc
mov
adc
test
sti
in
lds
and
rcl
mov
push
loopne
fsubl
add
das
or
ja
mov
push
loop
js
push
shr
add
xor
gs
shl
insl
idiv
fmulp
jge
stos
je
push
sbb
nop
loopne
xor
rcrb
jae
mov
pop
pop
insl
or
cmp
lcall
mov
inc
add
sbb
fisubrl
push
lret
xchg
mov
sbb
mov
sub
push
jae
mov
ficoms
cmpsl
xor
mov
roll
or
jb
shlb
cmc
dec
jns
mov
jbe
mov
in
rolb
ret
xrelease
lret
push
jbe
enter
adc
cmp
or
loopne
mov
lcall
enter
out
shlb
imul
jbe
xor
leave
stos
push
push
fs
adc
movsl
cmp
in
sbb
pop
pop
mov
loope
sahf
lds
pop
inc
dec
pop
ficoml
sahf
lods
leave
nop
into
dec
or
popa
xor
add
dec
test
cmpb
pop
cmp
lods
cltd
sbb
outsl
push
jbe
adc
pop
or
mov
xor
jo
push
xor
jp
cmc
ljmp
mov
jecxz
mov
enter
or
add
pop
cmp
or
fistpll
rcl
mov
hlt
stos
sub
cmp
lret
pop
dec
iret
inc
orb
popa
jbe
repnz
fsubrs
mov
sub
xchg
xchg
jbe
and
repnz
out
sbb
ret
and
or
sbb
push
sarl
outsb
jno
scas
ja
jl
lock
test
and
lret
jno
testl
jne
xor
cmpsl
cmp
fisubs
mov
ret
cmp
lret
arpl
and
sbb
and
es
dec
xor
fwait
clc
dec
fdivl
mov
sub
lods
push
push
sbbl
push
lock
mov
mov
stos
into
or
je
mov
dec
or
fsubs
mov
and
daa
jg
addr16
repz
add
stc
lahf
jo
mov
jbe
jnp
rcrl
data16
jb
fisubrs
rclb
daa
xchg
in
adc
mov
mov
stos
jmp
sbb
add
insl
shl
cltd
push
and
sbb
sbb
push
test
addps
mov
inc
pop
sbb
insb
add
xchg
fwait
adc
fs
out
push
mov
add
scas
lcall
cwtl
pop
adc
flds
push
fwait
ret
adcb
inc
loop
ret
pop
in
xchg
int
push
aaa
in
sub
sahf
sbb
ljmp
mov
jnp
sub
mov
ljmp
sbb
mov
popf
pop
mov
xor
lret
pop
loop
js
ja
insl
adc
xor
cmp
mov
fwait
and
cli
push
add
push
mov
out
sub
aas
fsubs
clc
push
mov
push
insl
cld
fwait
xchg
in
mov
xchg
in
pop
sti
in
outsl
test
cld
fsubl
fsubrs
cwtl
nop
mov
insb
cmovle
push
mov
inc
adc
lcall
dec
sub
inc
ljmp
inc
and
pop
or
bound
movq
mov
das
dec
in
mov
xchg
mov
loopne
and
jp
dec
nop
add
shrl
mov
mov
mov
in
fnstsw
add
into
adc
decb
cld
shl
mov
mov
lahf
out
jbe
push
sub
int3
sti
xchg
mov
xor
es
xor
dec
pop
sbb
lahf
mov
call
push
add
jne
popa
jp
sub
cmpsl
sub
dec
int3
mov
xchg
clc
xchg
lret
pop
and
jno
mov
lret
xlat
push
fs
in
mov
mov
push
dec
nop
mov
or
scas
cmp
inc
mov
and
xchg
ja
out
push
cli
mov
xchg
jnp
call
rcl
pusha
pop
dec
push
push
pop
push
iret
stc
vpackssdw
loop
add
aas
loopne
and
popf
mov
or
pushl
jb
rcrb
push
and
mov
mov
cld
pop
lods
aad
push
sahf
fwait
dec
pop
mov
jnp
cltd
dec
lahf
mov
lahf
lahf
mov
xor
lret
bound
test
jno
inc
fstpl
xor
aad
jns
rorl
dec
add
not
adc
pop
mov
lret
notb
lock
imul
or
testl
xor
mov
fiaddl
das
push
aam
and
mov
fisubl
adc
and
pop
iret
mov
outsl
call
outsb
jnp
dec
test
push
je
lcall
mov
leave
les
bound
mov
inc
cmpsl
addl
pop
dec
into
arpl
pop
sahf
addr16
mov
arpl
fsts
xchg
xchg
arpl
negl
mov
jp
xchg
push
daa
es
sbb
hlt
loope
push
dec
mov
pop
test
push
mov
js
loope
xchg
rcr
or
add
idivl
push
aas
jl
or
lods
and
mov
or
push
fsubr
mov
mov
cltd
and
jl
mov
mov
fisubrl
nop
sub
ljmp
dec
lock
adc
daa
js
divb
lahf
scas
xor
dec
push
lret
mov
or
or
mov
fs
pop
xchg
sub
sbb
fwait
shrb
aad
mov
mov
dec
xchg
iret
jmp
and
js
in
adc
cld
sbb
xor
fsubrl
lock
outsb
push
jns
xlat
ret
or
or
xor
inc
loop
sbb
mov
inc
ficompl
push
inc
test
test
ljmp
clc
jnp
cmp
dec
mov
mov
mov
mov
adcb
shlb
loopne
sti
inc
push
jo
pop
pop
das
fcmovb
pop
rcrb
adc
jno
pop
dec
dec
pop
push
stos
or
xchg
add
inc
jl
inc
sbb
mov
lret
aad
pop
repnz
add
jg
pop
cmp
or
lcall
mov
lock
add
mov
lods
loop
sbb
xchg
aad
mov
fisubl
xor
std
cmp
mov
dec
xchg
in
call
xor
cmp
out
xchg
jbe
in
js
and
cmp
jge
mov
rcrl
stos
sbb
mov
aaa
fcoms
pop
add
outsl
scas
int3
mov
ja
xchg
lea
pop
jmp
cli
pop
cmc
stos
and
add
pop
sbb
lds
push
negb
nop
popa
jb
enter
faddp
ds
icebp
push
cmp
push
ss
adc
jo
jg
daa
mov
cmc
or
lcall
dec
ljmp
addl
jbe
idivb
sbb
xor
fwait
pop
loop
or
dec
fiadds
inc
mov
outsl
cltd
xchg
push
push
mov
cwtl
jno
out
jno
jl
xchg
pop
enter
adc
push
sub
or
lea
xor
adc
gs
pushf
cltd
inc
push
xor
nop
dec
jg
add
jns
sub
clc
repz
in
imul
adc
sbb
imul
or
stos
ja
int
cmp
mov
xchg
pop
ss
les
jl
sub
leave
pop
xor
push
stos
or
rcrb
push
mov
jl
ljmp
or
das
pop
int3
cmp
divl
adc
dec
add
icebp
pop
xlat
jg
jge
and
pop
faddp
roll
les
jecxz
subps
xor
and
out
add
das
in
mov
in
enter
pop
mov
push
ss
push
inc
subl
adc
pop
sub
enter
repnz
sbb
pop
inc
jmp
inc
push
jnp
test
sub
je
mov
adc
aaa
ret
cwtl
adc
es
or
sbbb
mov
jno
fcmovu
cmp
jg
or
imul
stos
sbb
add
pusha
dec
out
sbb
or
ret
repnz
repz
mov
aaa
popl
sbb
into
outsb
jo
cmp
xchg
fcomps
inc
aaa
inc
ret
jg
aas
into
inc
xchg
push
cltd
or
mov
enter
js
imul
mov
sbb
aas
loop
pop
ret
jp
mov
pop
cmpsb
add
cmpsb
fstps
testl
push
sub
lret
ss
mov
adc
rcr
mov
push
insb
cli
xchg
pop
cld
aaa
rcll
xorb
pop
lods
adc
mov
cs
xchg
and
in
mov
shrb
sbb
pop
sbb
or
stc
data16
push
jne
cmp
mov
xor
cmpsb
into
adc
test
fmuls
call
scas
das
push
dec
inc
shll
lods
lock
pop
xchg
daa
mov
adc
nop
fildll
or
xor
sbb
js
push
in
mov
sub
fidivrl
into
and
jmp
lods
fnstcw
lret
push
stc
jno
notl
bound
inc
mov
pop
insb
rorb
into
adc
xchg
popa
push
aas
mov
sub
add
das
jp
sbb
out
rorl
push
mov
mov
jnp
mov
xchg
dec
sar
sarb
sbb
js
push
rorl
xchg
out
sti
fsts
sahf
jecxz
sbb
jl
mov
add
call
dec
call
xchg
push
dec
ja
jl
cs
ret
fisubrl
or
mov
mov
push
mov
sbb
faddl
mov
jb
pop
or
or
rcrb
cmp
mov
dec
movsb
les
hlt
mov
pop
addr16
jns
in
sahf
dec
xchg
pop
ds
mov
fmul
push
add
imul
addl
xchg
and
je
out
es
jecxz
pop
adc
adc
pop
jae
call
add
jo
jg
loope
jo
inc
lods
push
mov
cmc
xchg
test
mov
mov
xor
jg
lea
arpl
mov
lcall
jge
inc
and
sbbl
incl
push
sbb
sub
adc
jbe
mov
inc
sbb
dec
clc
cmp
out
enter
fldl
enter
and
in
sqrtps
and
inc
cmp
insl
lret
jg
ja
mov
loop
and
loopne
stos
das
pop
lahf
rorl
push
push
sbb
xor
inc
mov
add
into
aam
or
iret
data16
sub
adc
out
dec
ror
push
sbb
ret
push
jp
ds
movsl
push
out
push
mov
mov
cmpsl
or
xor
inc
clc
and
sbb
fdiv
insl
push
call
and
sbb
aad
jno
outsb
mov
push
das
dec
dec
int3
call
lods
sbb
aam
test
add
test
mov
gs
stc
adc
xor
ljmp
mov
dec
cli
popf
ds
mov
sti
rorb
sahf
int3
lret
pop
mov
xor
jmp
shll
jle
mov
cmp
out
mov
pop
add
mov
xchg
test
stos
aad
aaa
movsl
sbb
jb
push
rcrl
sbb
icebp
push
mov
jae
push
ss
push
iret
dec
sahf
in
imul
scas
xchg
lods
loopne
mov
stos
dec
mov
fisttpll
out
sbb
sbb
mov
test
data16
pop
mov
push
push
ljmp
lds
jns
clc
sbb
jmp
add
mov
xchg
mov
test
cli
jno
popf
push
push
xchg
mov
pop
xchg
rcrb
sbb
xlat
flds
and
xor
jae
inc
dec
lock
enter
scas
mov
sarb
and
dec
in
rcll
mov
fcmovne
lea
adc
mov
push
orb
mov
outsb
inc
ret
mov
shl
mov
jno
andb
dec
pop
and
push
push
negl
mov
jb
mov
jno
inc
lea
es
lahf
insb
mov
ljmp
inc
sti
mov
xchg
pop
sub
push
cmp
or
stos
push
bound
sbb
pop
xchg
mov
adc
and
ds
xchg
gs
lret
out
mov
push
sbb
mov
push
inc
inc
mov
ds
dec
std
repz
dec
push
nop
cltd
fimull
pop
pop
cmp
in
aad
into
xchg
mov
mov
inc
inc
mov
or
jb
movsb
xor
shll
in
and
popa
out
sbb
cmc
adc
or
xor
xor
pop
arpl
call
imul
mov
outsb
xchg
push
lcall
push
mov
cmp
out
gs
out
adc
cmp
ret
or
mov
cmp
pop
shr
jl
dec
mov
fstpl
dec
mov
xchg
add
xor
xchg
mov
adc
cmp
cmp
adc
cmp
jmp
adc
inc
push
imul
sbb
sub
mov
adc
inc
lock
lods
mov
add
mov
mov
aas
mov
out
addr16
pop
addr16
into
sub
pop
movsl
xchg
mov
cmp
clc
rcrl
inc
sbb
lret
xchg
jp
jb
pop
and
jo
aam
add
mov
test
dec
add
test
test
jno
mov
jmp
pushf
add
add
inc
ret
mov
inc
fnstenv
cmp
imul
cli
pop
fsubrl
jbe
clc
std
lea
sub
jae
adc
adc
icebp
pop
rorb
nop
cli
mov
push
leave
test
insl
and
andl
xor
push
mov
mov
cmc
loop
inc
ljmpw
mov
in
pop
in
retw
mov
sbbl
dec
push
push
and
mov
pop
pop
pop
push
in
aam
add
inc
andl
shrb
imul
jbe
repnz
pushf
int
cmp
loopne
int
fs
xor
hlt
fcmovbe
jne
ja
xchg
inc
shll
in
icebp
dec
movsl
inc
mov
mov
push
lea
push
nop
inc
sub
in
mov
iret
sub
sub
dec
lds
jg
xchg
int
xchg
cld
xor
fwait
repz
fwait
adc
andl
sarb
jge
aam
jmp
cltd
add
jo
xchg
cmp
sub
push
fistpll
mov
mov
roll
int3
in
push
rcr
js
std
dec
loopne
jp
adc
sar
mov
sub
push
sub
repz
pop
out
shrl
pop
jle
stos
shll
pop
adc
dec
in
mov
push
clc
fstps
jle
popf
loope
adc
popa
bound
and
sarl
sbb
adc
shlb
subb
insl
icebp
push
aad
xor
mov
aas
repz
mov
push
xchg
fs
xor
mov
adc
mov
fadds
push
jle
mov
movsl
jnp
dec
fstpt
jb
rclb
subl
pop
test
imul
jmp
and
fld
pop
fmul
enter
dec
push
andl
repnz
stc
push
mov
movsb
inc
pop
aad
leave
dec
mov
mov
mov
faddl
rcl
stc
mov
cmpsl
fldt
and
lods
out
dec
stc
fsubs
adc
jmp
and
inc
notl
icebp
cmp
inc
loop
jg
clc
je
mov
popf
push
aas
sar
xlat
xchg
pushf
sar
xchg
inc
mov
mov
pop
lcall
push
orb
pop
loopne
mov
das
int
push
mov
xor
lahf
adc
pushf
push
sub
cmpsl
mov
xchg
cmp
sbb
fimull
fisubl
xchg
hlt
dec
insb
shlb
xchg
or
sbb
rcl
mov
daa
pop
adc
xor
pop
pop
xchg
bound
dec
and
inc
push
mov
xchg
out
dec
add
mov
ds
out
mov
les
out
sub
adc
push
divl
in
mov
test
jne
in
leave
popf
and
inc
fsubrp
ljmp
mov
lea
sub
sub
cli
push
cmpsl
jno
sub
dec
cmp
add
jmp
sahf
jae
mov
shll
inc
fisubrl
xor
mov
pop
iret
push
mov
sub
int
mov
arpl
movsl
hlt
fwait
insl
nop
shll
pop
jl
mov
pop
scas
sahf
fstpl
repnz
xchg
fstpl
sahf
leave
adc
inc
popf
popf
daa
add
mov
shll
xchg
cmc
call
jbe
pop
sarl
cmp
adc
repnz
stos
fs
outsl
stc
fistpll
push
xor
faddl
xlat
stos
int
roll
cmpsb
stos
rcr
cmpsl
adc
jnp
in
repnz
adc
xchg
adc
dec
fmuls
ret
cs
push
loop
outsl
jno
daa
test
mov
add
ja
sbb
das
add
cmc
sbb
sub
sub
or
fimull
pop
mov
sub
xchg
in
lcall
xor
xor
ficoml
xor
aam
shll
scas
push
inc
cmpsl
pop
jmp
jl
inc
mov
in
or
adc
xlat
shll
cmp
stc
movsl
ret
fdivrl
cld
in
cmp
xor
stos
ret
push
adc
jge
push
out
cmc
out
cltd
arpl
hlt
lock
dec
cld
mov
enter
push
push
aam
and
fistps
pusha
fcmovbe
pop
cltd
push
icebp
movsl
cmp
or
jecxz
ret
and
sub
and
in
cmp
int
out
sub
sub
mov
or
jne
stos
sbb
insb
adc
xchg
std
cmpsl
cmp
dec
popa
lcall
inc
cmpsb
ja
jbe
push
lret
mov
and
or
inc
push
inc
stos
bound
into
cmovne
or
subl
mov
mov
pop
vcvttss2si
inc
sbb
jo
in
cmc
jo
xchg
pop
and
pop
mov
gs
adc
xchg
jns
ja
mov
clc
icebp
out
js
mov
test
sub
lods
and
jnp
xor
dec
xchg
mov
cmp
cli
mov
xchg
nop
lock
imul
fwait
outsl
dec
sbb
xor
lret
mov
or
sub
daa
jne
loope
pop
xor
jecxz
bound
repz
cs
mov
dec
out
add
dec
pop
jmp
insb
pop
inc
fmuls
cli
push
sub
out
xor
mov
popf
dec
sub
imul
mov
xlat
lock
push
subb
lods
or
and
push
sub
cwtl
ds
and
test
test
mov
pop
add
int
es
mov
bswap
jo
sbb
out
jae
xchg
je
out
test
int
fbld
push
jmp
and
mov
xchg
mov
xlat
sub
popf
imul
xlat
ror
fstps
jns
dec
fisubrl
jno
cmp
or
das
xor
div
in
xor
lcall
leave
xchg
push
xchg
vmread
loop
add
xorl
jns
mov
push
leave
mov
jb
dec
addl
inc
inc
push
push
adc
int3
mov
xor
push
cli
push
or
repnz
lahf
adc
out
jecxz
cltd
daa
fsubl
insl
iret
je
in
xor
into
pushf
add
mov
pop
push
mov
mov
cmpsb
sahf
mov
rclb
pop
sbb
fisubs
daa
mull
xchg
arpl
bound
and
lcall
xor
and
mov
outsb
xchg
loopne
jle
add
push
mov
mov
inc
push
ds
cmp
out
cmp
pusha
jp
mov
sbb
pusha
mov
loope
inc
jp
test
cmpsb
pop
mov
dec
dec
in
push
dec
aad
mov
ret
jg
cmpsb
jb
pop
mov
aas
mov
add
jp
sahf
jge
cmpsl
mov
pop
cmp
push
cmp
adcb
sub
jp
sub
packsswb
inc
cwtl
push
cmp
mov
or
mov
in
mov
jge
fisttps
mov
repz
mov
dec
std
push
in
lcall
loope
sub
stc
rorb
and
ret
adc
mov
ss
xchg
sbb
mov
sub
mov
cmp
mov
into
push
jno
adc
mov
or
cld
pushf
dec
shlb
imul
mov
negb
xlat
cmp
jge
jge
cmc
mov
push
jnp
jmp
push
xchg
leave
lds
in
stos
cmc
or
leave
clc
cltd
setge
fcmovb
xor
xchg
push
movsb
stos
addl
xor
mov
dec
mov
adc
js
cmp
jno
or
or
imul
cli
push
stos
idivl
stos
fidivs
mov
cmp
dec
movsb
sub
inc
pop
test
and
imulb
shlb
andl
mov
xorb
aas
and
inc
pushf
cmpsl
lea
ljmp
movsb
subb
pop
sti
and
pop
xchg
xlat
mov
jmp
sub
inc
cmpsl
ret
sub
fstps
mov
stos
test
test
adc
popa
adc
and
mov
fcmovbe
jne
mov
adc
stos
shll
push
outsl
xchg
adc
adc
cmc
mov
pop
jmp
scas
fidivl
test
mov
jnp
pop
nop
mov
jge
push
dec
shrl
aas
stos
cmp
dec
aam
adc
lds
jecxz
pop
push
aaa
popf
or
inc
fs
int3
sub
push
aaa
sbb
in
sti
jns
mov
repz
mov
xchg
or
mov
dec
dec
inc
adc
shlb
js
mov
call
mov
ret
inc
jb
inc
lcall
fiadds
ret
xor
sub
mov
aad
pop
mov
lds
iret
stos
dec
jns
lods
les
add
cmc
in
adc
cmp
insb
mov
cmp
sbbl
nop
push
cmpsb
sti
pop
xor
push
dec
iret
fstps
std
xchg
lret
imul
enter
pop
insl
jbe
cmp
loope
xchg
cmp
jecxz,pn
cmp
in
bound
mov
or
fwait
lods
aas
add
mov
inc
rclb
cmp
mov
jbe
push
fimuls
or
movl
cmp
sbb
lahf
rcll
sbb
mov
adc
shl
sbb
test
mov
push
or
lods
lea
mov
pop
lods
icebp
jecxz
popf
cli
out
pushf
popf
mov
xlat
xchg
and
aad
add
xchg
xlat
das
sbb
scas
sbb
xor
outsb
push
mov
add
sahf
jp
add
movsl
shll
cmp
ret
mov
in
mov
into
push
cmp
and
lds
or
jnp
push
lret
sub
repz
int3
fiadds
lahf
vpmaxsw
aas
and
sbb
jno
outsl
push
outsb
inc
loop
pop
insb
adc
jne
jb
pop
xchg
cld
mov
into
movsl
mov
mov
jmp
sub
lcall
std
push
mov
pop
data16
mov
cmp
push
jns
out
jb
in
in
adc
repnz
jp
sbb
sub
ds
mov
hlt
push
inc
dec
stc
mov
test
scas
and
sarb
cwtl
test
or
inc
lea
dec
cmp
arpl
cmp
xor
xchg
in
jl
insl
inc
dec
ds
adc
out
daa
push
lock
cmp
nop
add
adc
mov
adc
repnz
pop
enter
in
mov
out
neg
pop
or
lods
stos
sbb
movsb
jae
arpl
aas
aas
div
xchg
jp
inc
scas
pop
pusha
loopne
cli
adc
fsubp
jne
sbb
cmpsb
or
gs
push
cmp
xlat
mov
orb
jge
icebp
in
jmp
sub
push
add
lcall
push
cli
std
aam
lock
ficomps
mov
arpl
bound
in
jae
aas
or
xor
clc
lcall
jns
popf
xor
inc
push
inc
push
inc
mov
cltd
push
popa
jecxz
sbb
xchg
jge
dec
jl
cmc
cmp
jae
ret
lahf
jge
ss
or
test
decb
xchg
fnsave
xor
ss
xor
xchg
mov
cwtl
je
fucomip
dec
or
cmp
ficoms
cmpsb
and
lahf
dec
inc
movb
ljmp
dec
test
jne
push
mov
out
xchg
mov
push
jge
add
lcall
pusha
pushf
lcall
cmp
dec
cmp
clc
bound
shrl
mov
adc
cwtl
sub
decl
ds
ljmp
iret
out
xchg
adc
out
nop
pop
pop
dec
inc
or
mov
hlt
imul
cltd
pushf
adc
sahf
and
or
mov
jo
cmp
arpl
loopne
pop
aad
jmp
lcall
incb
les
inc
lock
ljmp
mov
push
in
push
and
fs
decb
add
adc
xchg
lods
in
cmp
sub
cmp
ss
repnz
jmp
ss
jo
jecxz
push
mov
dec
push
mov
popa
dec
les
xchg
pop
leave
mov
in
insl
cmp
les
iret
mov
mov
cltd
dec
lock
and
lea
rorl
inc
add
insb
jne
leave
cmp
sub
adc
fldcw
cmp
ret
push
orb
mov
mov
pusha
icebp
xchg
mov
push
insl
jb
mov
enter
jle
sbb
jae
int
arpl
inc
out
inc
pop
xchg
notl
scas
cmpsl
lods
cmc
pop
mov
mov
idivb
imul
cmp
js
mov
stos
sbb
popa
cmp
push
mov
or
or
push
mov
repz
push
and
jmp
add
cmp
pushf
sub
int
rcrl
xor
arpl
or
insl
lret
sub
jp
cmp
mov
sbb
push
imul
dec
dec
xchg
sub
testl
mov
aam
call
xor
into
cli
shrl
movsl
test
rcll
aas
cltd
stc
sbb
in
rol
jns
loopne
out
idivb
or
sti
gs
xchg
mov
out
pop
mov
jae
jle
arpl
outsb
jnp
jp
push
fiadds
sub
mov
jp
mov
xchg
dec
pop
mov
pop
push
cmc
push
es
xchg
dec
stos
rcll
daa
je
inc
sbb
mov
fs
or
jmp
mov
adc
rorl
shrl
insl
sub
cmp
jmp
xlat
shll
mov
test
cmp
mov
sbb
lock
icebp
lahf
xorb
mov
or
cltd
and
push
xchg
popa
sbb
cli
adc
dec
jae
imul
loopne
sbbb
cld
int
xchg
stc
das
rcrb
out
sbb
pop
jno
aaa
ds
popf
lret
push
das
pop
mov
xchg
cmp
mov
inc
mov
pop
inc
dec
fdivl
mov
jecxz
addb
xchg
xor
out
arpl
dec
inc
test
aaa
jecxz
int
mov
ja
jmp
xchg
or
mov
out
push
xchg
leave
pushf
push
subl
movsb
xchg
dec
mov
xor
pop
mov
inc
add
push
jge
xlat
aaa
insl
stos
pop
insb
clc
repnz
or
addr16
pop
xor
adc
out
mov
adc
adc
cmp
jns
pop
loope
inc
push
leave
test
int3
sub
int
xchg
push
dec
lret
int
aaa
mov
cmp
fs
cmp
js
mov
add
data16
add
mov
and
in
pop
cltd
push
hlt
leave
clc
dec
jecxz
pop
mov
adc
inc
jb
ja
ds
push
jmp
xor
popf
adc
fadds
out
popf
inc
pusha
inc
mov
push
mov
adc
sbb
out
aam
lahf
and
stos
dec
jecxz
inc
mov
jbe
xor
stos
int
out
sbb
loope
mov
mov
xor
cmp
pop
jle
cld
sti
aam
sub
ss
jbe
out
lcall
mov
dec
test
dec
and
push
lods
jle
int3
mov
divb
daa
repnz
lret
fists
mov
test
lods
adc
mov
xor
lcall
lock
ret
xchg
lds
mov
outsb
pop
mov
nop
out
dec
fnstenv
rsm
pop
inc
push
xchg
dec
or
aam
hlt
mov
jbe
jge
jns
mov
xor
pop
mov
movsl
add
mov
jmp
movb
ret
or
lret
mov
movsb
rcrl
cmp
aam
bound
inc
pop
jl
sbb
jo
in
and
stos
scas
test
ret
dec
fistl
adcl
fcoms
jge
sub
xchg
fmuls
pop
bound
in
adc
repnz
outsb
clc
leave
sbb
add
orb
adc
sub
arpl
mov
sbb
mov
lods
cmpl
push
jmp
and
es
jl
xor
cmp
jns
or
lret
pop
cmpsb
sahf
shlb
je
jno
push
arpl
out
add
sbb
jg
or
je
jmp
outsb
data16
jg
test
pushf
and
movsl
cmp
xor
mov
sub
dec
sbb
or
nop
das
and
sub
mov
loope
mov
cmp
or
mov
iret
mov
jge
and
lahf
xchg
arpl
xor
mov
mov
ds
fimuls
jno
add
hlt
jmp
or
pusha
in
insl
aam
sbb
fs
ja
lea
jge
mov
jmp
inc
adc
mov
cwtl
xor
and
imul
add
hlt
cltd
jo
dec
daa
leave
dec
js
imulb
clc
div
out
fsubs
push
push
mul
xchg
mov
shl
fisubrl
adc
push
andb
lods
xor
mov
xor
mov
mov
xor
xchg
push
and
or
mov
in
xchg
lret
lock
sbb
pop
xchg
jle
es
call
sbb
mov
cli
arpl
stc
ret
jecxz
xor
dec
aas
xor
inc
xchg
lds
je
leave
push
and
mov
ret
jne
fidivl
jle
stos
insl
popf
and
xchg
jnp
mov
cmpsl
sbb
add
fwait
mov
nop
cmp
mov
test
inc
inc
sbb
add
fcos
rorb
push
push
and
jge
push
jmp
rorb
jp
test
cmp
pop
stc
enter
sbb
out
jno
xchg
jmp
mov
add
sub
xlat
pop
ds
sbb
jb
push
pushf
out
insl
mov
call
sbb
sti
xor
pop
pop
mov
and
mov
xor
and
xlat
dec
out
popl
mov
add
mov
add
jl
ja
push
adc
inc
stos
std
pop
out
repz
in
lahf
movsb
cs
inc
addr16
pop
jle
pop
sub
mov
mov
adc
gs
arpl
jbe
sub
loope
scas
imul
stc
imull
dec
notl
mov
addl
push
loopne
mov
adc
in
xor
jo
or
jp
pushf
push
xor
fchs
in
inc
or
les
xchg
or
call
popf
and
push
pusha
mov
ljmp
xchg
movsb
sbb
lds
ds
mov
xchg
cld
xchg
rclb
mov
cmp
push
cmp
sti
push
or
pop
out
mov
mov
xchg
dec
js
push
cmp
pop
shll
imul
cmp
ds
rorb
in
dec
push
test
jb
lea
mov
xchg
pop
push
push
pop
jle
inc
jb
sbb
mov
mov
jmp
mov
fisttpll
insb
ja
mov
jbe
enter
jb
jbe
push
stc
mov
and
mov
cmpsl
lds
andl
adc
cmp
pop
push
rolb
pop
or
jns
inc
out
ja
mov
jmp
out
popf
repnz
aam
mov
sub
add
lock
movsb
in
add
pop
inc
fldcw
xor
cltd
ss
adc
push
out
popf
or
movsl
subl
or
pop
or
adc
mov
jo
jo
ffree
sub
sub
aad
shrd
xchg
popf
shl
insl
cmp
mov
out
lods
or
pop
out
push
leave
sti
inc
jo
pushf
test
movsb
das
stos
xchg
dec
inc
pop
in
and
nop
push
xchg
scas
mov
mov
sarl
jecxz
leave
xchg
test
ret
push
lock
or
inc
sarb
push
jp
pop
sub
sahf
lret
mov
mov
xchg
add
inc
test
in
cld
fstl
jmp
out
mov
sub
xchg
xor
mov
ss
test
sar
sbb
sbb
cli
dec
pushf
je
push
ljmp
loop
xlat
aam
dec
stos
dec
xor
mov
test
pop
in
ret
rorl
shlb
imull
sub
cld
pop
pop
out
xor
dec
imul
pop
adc
or
ds
mov
push
pushf
mov
sahf
jp,pt
sub
adc
jb
mov
cld
mov
sbb
es
iret
imul
addr16
test
sub
insb
sbb
aad
sbb
inc
lods
syscall
fldcw
jb
jne
jle
adc
sbb
sbb
add
cmp
fnstenv
push
icebp
daa
loopne
mov
cmp
pop
xor
imulb
ret
loop
cmp
leave
mov
xchg
add
and
sbb
rcrl
push
push
pop
dec
or
jle
mov
mov
int3
xor
ret
fs
imul
pop
out
int
sub
pushl
mov
pop
lret
sbb
int
pop
data16
push
dec
lods
pushl
cli
cltd
ja
ja
inc
mov
lret
pushf
scas
out
sbb
in
lds
inc
in
inc
mov
adc
add
and
and
loopne,pn
pop
scas
imul
and
addr16
stc
mov
aad
inc
xchg
mov
mov
push
enter
pop
mov
mov
push
or
popa
outsb
mov
mov
in
jbe
out
sahf
mov
mov
test
dec
mov
idiv
mov
dec
fcmovnbe
flds
push
int
add
xchg
imul
push
js
loop
clc
cmpsb
clc
xor
push
repz
cmpb
mov
cs
into
cmpsl
sbb
sbb
push
and
lock
push
imul
mov
mov
insl
icebp
xchg
pop
fbld
mov
fimull
inc
ja
lahf
jge
add
cli
imul
scas
sbb
lods
arpl
inc
cli
xor
adc
xlat
xlat
pop
cli
jle
mov
into
data16
adc
stc
or
push
jp
xchg
cmp
sbb
cmc
mov
enter
or
jp
bound
cmp
insl
aaa
test
mov
xchg
push
pushf
add
or
loop
into
lock
mov
mov
cmp
and
xchg
addl
push
je
xlat
push
push
daa
addb
pop
add
scas
ljmp
add
add
xchg
push
mov
pop
icebp
adcb
iret
xor
and
sbb
fdivs
je
jbe
js
fnclex
pop
gs
ljmp
fstl
daa
push
les
nop
addl
das
repnz
gs
inc
dec
sub
movsl
jb
or
or
mov
stc
dec
repnz
es
int3
clc
sub
adc
iret
enter
in
ljmp
mov
rcl
std
lea
sbb
data16
or
hlt
pop
inc
sub
mov
push
push
mov
and
in
ds
xor
adc
xchg
rclb
pop
adc
or
int3
pop
pop
dec
fldl
jle
jle
dec
gs
les
je
sahf
stc
cmp
lds
data16
dec
icebp
or
hlt
fistl
clc
mov
es
pop
fisttpll
jle
or
and
xor
sub
fcmove
pushf
nop
sub
sub
push
leave
xchg
sbb
ja
cmp
cmpb
iret
js
ljmp
adc
cmp
adc
pop
cmp
add
push
mov
pop
icebp
fisttps
or
mov
ret
add
dec
pop
sbb
jmp
test
lea
mov
int
loop
ret
lods
sbb
ss
cmc
xchg
inc
clc
sub
sbb
inc
in
push
subb
jge
push
adc
push
pop
ret
in
cmp
sbb
pop
fisubrl
dec
lret
mov
add
ss
out
vmread
sbb
cmc
imul
pop
andb
jns
jns
sub
lds
jp
jmp
push
imul
rcl
push
int
int
cmc
test
aam
mov
loop
sbb
aas
dec
mov
loop
mov
je
pop
pop
pop
lds
lods
mov
fstl
jmp
mov
pushl
pop
ror
jno
inc
mov
add
adc
fbld
jge
insl
jae
jmp
cli
test
repz
sub
test
jge
sub
enter
adc
jg
mov
loopne
repz
ss
lods
mov
dec
je
push
addl
nopl
test
sbb
xor
es
mov
dec
repz
push
mov
in
cli
je
ss
pop
shlb
xchg
push
and
ret
notb
lcall
shlb
bt
repz
cmpsb
dec
jne
mov
sub
aaa
insl
in
add
cmp
dec
xor
jne
xor
and
or
fisttps
xchg
push
sti
sti
neg
mov
lods
cli
dec
mov
jo
push
add
div
xchg
stos
rorb
jge
adc
jb
and
loopne
das
sub
pusha
nop
mov
inc
nop
inc
xchg
mov
gs
dec
in
jno
adc
sub
outsb
and
xchg
mov
and
mov
add
adcl
lods
je
cmpsb
ss
adc
or
insb
xchg
push
inc
push
jae
mov
inc
scas
mov
mov
test
sahf
pop
push
jecxz
out
xchg
inc
aad
push
outsl
into
jge
push
lea
pop
pop
mov
std
repnz
pop
daa
inc
inc
pop
cmpsl
imul
add
jne
notb
lcall
in
inc
sbb
cmp
dec
daa
ds
push
leave
or
fstl
pop
cs
arpl
push
jbe
loop
lods
dec
dec
mov
sbb
in
dec
mov
dec
mov
loopne
push
imul
mov
or
dec
out
dec
xor
das
xor
aam
stos
lds
jns
pop
fwait
shlb
or
rcr
cmp
ss
gs
pop
inc
scas
jnp
sub
loop
fadd
mov
sbb
inc
jnp
fldenv
sbb
daa
loope
leave
test
push
hlt
cmovae
imul
push
adc
sub
push
xor
push
push
movsb
jecxz
jns
in
pop
mov
incb
shll
loope
das
mov
fistpl
sti
jmp
push
sub
cmp
pop
push
dec
inc
and
dec
cltd
mov
push
xchg
mov
xchg
js
shll
mov
sbb
mov
mov
xor
adc
cli
jo
icebp
cmc
mov
ja
mov
pushf
ret
mov
inc
js
fdivr
scas
and
test
lea
xchg
xor
idivb
mov
dec
pop
stc
mov
pop
lock
inc
outsb
sub
jle
lcall
je
sub
lcall
add
pusha
inc
loopne
pop
jns
sahf
faddl
iret
leave
or
push
mov
mov
mov
dec
je
xchg
xor
or
and
stos
ret
mov
mov
sub
mov
sub
lds
xchg
sub
adc
lds
out
cmpsl
outsb
mov
rol
and
repz
cmp
lods
push
push
lret
lods
jnp
ret
jb
scas
mov
aad
filds
imul
push
jg
xor
pop
dec
xchg
mov
mov
adc
sub
dec
add
lcall
sub
jno
mov
xchg
mov
int
insl
mov
and
xchg
pop
jl
pop
dec
popf
sub
mov
adc
lds
imul
out
mov
jmp
cmp
xor
add
xchg
xchg
pop
jl
xor
mov
test
push
add
gs
add
fmul
mov
insb
dec
or
pop
fisubrl
notl
xchg
insb
aad
lds
imul
sub
daa
push
pop
dec
mov
dec
sbb
xchg
jmp
mov
dec
mov
inc
push
jmp
cmp
dec
xchg
out
ficomps
sarl
movsb
push
clc
dec
mov
ljmp
and
and
addr16
jb
imul
leave
outsb
pop
sti
test
fldl
leave
add
jae
in
lock
lods
or
lods
movsl
shr
fidivrl
lods
inc
out
pop
ret
sbb
pop
xor
push
or
mov
pusha
dec
sbb
mov
sbbb
cltd
push
dec
scas
mov
scas
movsl
sahf
shlb
pop
popa
test
or
mov
pop
push
bnd
cli
mov
scas
sahf
fisttpll
or
in
movsb
jno
imul
ja
rcrl
and
cli
dec
push
dec
loop
xlat
add
mov
mov
mov
lret
sub
pop
mov
imul
mov
popf
push
sub
mov
je
mov
dec
jnp
inc
mov
into
ss
inc
popa
jbe
mov
inc
cltd
jb
mov
xchg
cmp
insb
movsb
popa
sub
push
xor
sub
xchg
inc
jp
pop
jns
push
movsb
aaa
aam
das
lods
jns
and
mov
enter
int
mov
out
pop
adc
mov
bound
popf
movsb
je
nop
fwait
subl
mov
js
push
sub
push
lock
fwait
jnp
into
ret
jae
add
lret
fldt
lcall
or
das
out
xor
call
popa
pop
mov
and
jae
scas
adc
pop
js
xchg
imul
decl
push
fcoml
inc
jp
pop
xchg
stc
push
movsb
sub
js
adc
sbb
outsb
ja
ja
loop
cs
or
fsubrl
add
push
arpl
ret
push
cmp
mov
leave
mov
lods
inc
inc
sbb
cmp
xor
dec
jg
sbb
mov
leave
cmp
inc
xor
aad
fildl
inc
or
jg
push
fxch
push
rcll
mov
out
aad
stos
mov
or
xchg
hlt
pop
clc
sbb
addr16
daa
aad
popa
ss
adc
inc
adc
adc
bound
jnp
orb
add
mov
push
fnop
mov
sub
movsl
adc
xchg
aad
hlt
clc
or
test
and
sbb
cwtl
fidivrs
mov
rorb
enter
or
pop
bound
adc
outsl
stos
into
ret
pushf
imul
push
pextrw
pop
mov
imul
scas
pop
pop
ds
ret
and
sub
lock
shlb
mov
cmpl
dec
je
mov
rep
ss
loopne
ljmp
incb
sarb
stos
inc
js
or
or
filds
add
in
jo
push
dec
jae
ds
addr16
pop
jl
push
xchg
std
in
adc
popf
movsl
orb
aas
sti
jbe
xchg
pusha
in
mov
rclb
xor
push
test
inc
fsubrs
imul
xchg
dec
insb
cltd
sbb
leave
hlt
mov
dec
cmp
add
cmc
hlt
push
cwtl
lods
scas
mov
jg
ja
mov
push
mov
imul
divb
cmp
fidivl
mov
sub
dec
xchg
mov
jnp
mov
test
ja
xlat
daa
pop
xlat
sbb
scas
shrb
xchg
shlb
dec
aas
scas
push
aad
cwtl
xchg
pop
scas
inc
cwtl
out
movsl
pop
out
jle
int3
sti
mov
in
imul
loope
add
sub
nop
pop
jno
sbb
jo
pop
divb
mov
aad
aaa
pop
jbe
xor
push
cmp
add
js
adc
dec
scas
es
push
jno
mov
rcrb
pop
in
jb
xor
jae
lods
hlt
jnp
push
leave
in
int3
xor
sbb
fiaddl
ja
pop
sbb
addb
iret
cmp
outsl
movhps
inc
inc
ljmp
mov
xor
popa
mov
sub
and
cmp
mov
roll
sub
xor
pop
xor
push
call
add
and
test
xor
mov
mov
cs
pop
adc
xchg
in
jne
test
xchg
notb
push
inc
std
sub
mov
mov
mov
push
lods
push
insl
and
or
mov
adc
les
cmp
fwait
xchg
and
mov
mov
jecxz
jg
clc
out
pop
jecxz
iret
mov
pop
add
xchg
xchg
mov
call
jns
hlt
test
mov
sbb
repnz
imul
jge
or
popa
pop
jmp
pop
pop
fwait
insl
dec
cwtl
cmpl
hlt
or
insb
jne
xor
mov
mov
ds
jbe
xor
jge
push
or
dec
xor
inc
push
in
push
mov
pop
std
loop
inc
lcall
pop
mov
pop
outsb
lret
test
inc
mov
sti
cltd
je,pn
adcl
testb
shlb
sub
not
rcrl
leave
inc
pusha
cli
test
daa
clc
test
xor
adc
push
push
insl
sbb
push
fldenv
sbb
outsb
xlat
pop
dec
push
imul
mov
addr16
test
pusha
je
cmp
fs
aaa
dec
mov
push
mov
mov
sbb
cmp
pop
sbb
aaa
ljmp
inc
or
scas
stos
mov
sub
mov
sub
adc
cld
in
fisubl
outsl
mov
sbb
data16
pushf
mov
xchg
or
mov
insl
xor
xor
repz
fs
adc
out
sti
inc
cmp
in
int3
jo
sbb
pusha
test
icebp
push
jae
outsb
cmp
dec
out
cmp
ss
lret
movsl
mov
mov
xor
pop
push
push
sbb
std
push
dec
and
inc
es
sub
sahf
sbb
push
xchg
sbb
jnp
jnp
dec
sub
das
inc
movsb
or
lret
push
cmp
xchg
in
push
sbb
mov
mov
scas
mov
sbb
outsl
sub
or
outsb
scas
lods
or
subl
ja
inc
push
cld
ret
aad
inc
shl
icebp
fidivl
mov
mov
dec
lcall
sbb
mov
mov
in
add
shl
jae
xor
fidivrl
pop
popa
dec
rclb
stos
jp
sbb
ljmp
xchg
cs
fcoms
dec
test
ss
xchg
aas
ss
scas
insl
add
mov
xchg
and
mov
push
sbb
in
movsb
xor
fmull
mov
mov
outsb
pop
dec
pop
int3
test
in
into
leave
xchg
filds
mov
test
aam
xchg
rsqrtps
fildll
addb
pop
mov
mov
nop
xor
inc
leave
fcoms
mov
pop
pop
je
mov
and
out
xchg
cmp
lods
jmp
mov
ja
xchg
in
mov
mov
lahf
pop
sti
cmp
fwait
jno
dec
push
cmp
lret
mov
icebp
popa
cmp
xchg
mov
mov
push
cmpsl
push
shll
sbb
add
mov
aad
jmp
mov
mov
inc
mov
cmp
iret
xchg
shl
add
fadds
mov
cmp
loope
mov
sub
mov
jmp
test
js
stos
in
fldenv
cltd
test
sbb
mov
test
jle
icebp
push
sbb
jl
mov
push
xchg
movsl
ja
dec
cli
ret
inc
adc
xor
je
pop
mov
call
repnz
adc
sub
push
les
add
dec
mov
or
mov
sub
mov
lahf
add
loopne
xor
push
pusha
adc
cmp
mov
dec
mov
mov
mov
stos
sub
orw
sub
jl
ljmp
sub
mov
popf
in
jnp
lds
fstpl
mov
loopne
mov
adcl
shrl
xor
xor
adc
cwtl
mov
pusha
xlat
test
and
xchg
mov
xor
ret
sbb
ja
pop
jne
lock
ret
push
leave
xor
pusha
push
ja
icebp
insl
mov
jb
adc
test
mov
lock
mov
or
jbe
ror
pop
adc
push
ja
movsb
mov
andb
out
ss
sub
cld
xor
cwtl
rorl
or
dec
sti
jge
test
mov
lret
nop
aad
xor
pop
int3
insl
jmp
sti
in
jns
cmp
dec
mov
push
inc
mov
mov
stc
in
and
dec
out
lods
sub
hlt
or
cmp
sub
inc
xchg
lahf
inc
add
outsl
mov
jl
mov
push
mov
mov
cltd
xchg
stos
jno
data16
push
ss
in
mov
dec
rorl
sbb
movsb
or
fsts
xor
lahf
mov
jge
popa
popa
pop
das
mov
lods
mov
rclb
nop
ljmp
jecxz
jo
inc
fsubl
int3
xor
jmp
hlt
fsubs
cld
push
sub
push
lcall
mov
loop
cmp
cmp
stc
xor
mov
sub
and
hlt
adc
push
shlb
in
sbb
lea
mov
jns
inc
cld
xchg
add
cmp
push
in
inc
in
leave
popa
xor
push
ds
adc
mov
iret
pop
and
movsb
scas
enter
div
adc
lods
adc
rcr
dec
mov
scas
xchg
bound
jp
cmp
sub
and
mov
sub
adc
movntq
mov
aas
out
ret
mov
add
mov
fdivr
push
aad
xlat
ljmp
mov
popf
and
jge
add
std
xchg
hlt
scas
jne
pop
test
mov
data16
ret
or
les
jle
xor
pop
pushf
and
push
xchg
das
cmpsl
iret
jl
testb
ja
push
arpl
dec
bound
mov
pop
add
mov
ret
in
mov
mov
pop
jae
fcmovnbe
jnp
addb
and
cmp
and
pop
mov
push
jecxz
jbe
dec
inc
es
fsubl
nop
lret
mov
push
outsb
cltd
lcall
lock
fwait
rcl
inc
ljmp
cld
jae
call
cmpsl
mov
xor
mov
ret
xor
in
dec
jno
or
js
push
lds
jmp
fildl
outsb
xchg
xchg
sti
push
test
mov
adcb
clc
out
add
dec
sahf
dec
mov
cmp
out
xchg
test
lock
xor
sub
pop
xor
or
loopne
push
lods
pop
mov
sbb
ss
jmp
divl
inc
rcrl
xchg
push
shll
jne
sbb
xchg
or
jbe
lcall
pop
jno
xchg
and
out
hlt
ja
xchg
loope
dec
or
dec
pop
push
dec
inc
push
scas
push
jnp
mov
pop
add
popa
les
cmp
jnp
and
and
imul
sub
fsubr
pop
sbb
icebp
fisubrs
out
xchg
fmull
inc
lea
hlt
scas
dec
negl
push
cli
test
andl
sahf
jle
jbe
inc
add
clc
mov
xchg
lcall
dec
add
xchg
scas
repnz
adc
icebp
xchg
push
push
mov
add
cmp
fsubs
and
pop
mov
outsb
pop
sti
jnp
ret
jg
fs
cmpb
lahf
fsubrs
xchg
mov
lahf
mov
cmpsb
add
xchg
xchg
and
enter
cli
inc
jge
imul
or
add
pop
stos
dec
call
lret
pop
and
xor
cltd
rcrb
xorl
outsl
lret
pop
gs
popf
add
jb
std
pop
inc
test
push
cs
xchg
xchg
and
adc
fistpll
in
lcall
push
mov
mov
fs
cmp
jecxz
cld
or
test
mov
sbb
lods
das
dec
add
jnp
lea
xor
cwtl
ss
jmp
pushf
scas
xchg
pop
ljmp
mov
mov
out
in
jl
pop
test
mov
pop
jae
and
hlt
adc
in
mov
stos
testl
pop
mov
insb
dec
add
push
pop
cmp
mov
fstps
sbb
shll
pop
imul
xchg
pushf
fadds
in
lgs
xor
adc
mov
jae
and
dec
push
or
fcompl
in
and
cmp
push
push
test
cmc
push
lds
push
in
push
packuswb
aad
and
scas
int
xor
mov
negl
push
scas
pop
xor
fmuls
and
push
sbb
mov
jbe
fisubs
pusha
add
jbe
ja
fwait
loop
int3
lds
adc
sub
fisubl
sub
shll
mov
push
stos
jo
sub
cmp
mov
mov
sub
out
iret
or
cmp
fnsave
ret
xchg
inc
shlb
push
jmp
addr16
lea
cmp
pop
in
xchg
int
mov
lea
lock
adc
xor
fadds
test
mov
clc
jns
test
imul
ss
ds
adc
sub
aad
mov
adc
aaa
int3
xchg
cmpsl
dec
xchg
fistps
ret
test
mov
lock
adc
ror
and
outsl
ret
in
add
repnz
sahf
scas
mov
xchg
or
sbb
add
add
sahf
mov
scas
bound
jnp
sbb
jg
xchg
dec
dec
sbb
jge
pop
dec
pusha
pop
mov
test
lcall
xchg
and
pop
mov
aam
les
sub
aad
enter
in
andb
jbe
mov
addr16
xor
push
pop
or
mov
fldl
das
xchg
shll
inc
adc
repnz
std
aaa
cmp
jecxz
ret
dec
outsl
sahf
or
in
inc
push
adc
clc
fisubrl
imul
add
cmp
scas
inc
arpl
lcall
loop
xor
dec
jbe
or
and
repz
jae
sbb
jbe
sbb
pop
inc
sbb
xor
and
xor
test
shrb
cmc
imul
push
pop
mov
push
arpl
outsl
xor
mov
lahf
movsb
imul
loope
pop
incb
roll
aam
jecxz
cmp
test
pop
xchg
aaa
mov
jae
mov
imul
pop
sub
loopne
mov
lcall
mov
sbb
sub
sbb
or
iret
ljmp
lea
mov
dec
or
dec
es
and
insl
popl
pop
data16
push
std
sbb
rorb
and
jae
push
pop
hlt
ret
pop
push
rclb
or
cmp
test
rorl
in
adcb
pop
mov
into
jmp
xchg
dec
push
test
inc
ljmp
daa
cmp
dec
lock
scas
test
or
cmp
je
lcall
ljmp
dec
adc
sbb
adc
and
cmp
or
rcll
sbb
adc
mov
sub
mov
jl
roll
out
ljmp
lret
test
fwait
jo
hlt
leave
and
jno
daa
je
in
sub
js
mov
repz
aad
lahf
int3
les
iret
popa
jb
out
outsb
sbb
stc
mov
sub
push
sub
mov
xchg
out
sbb
sarb
xchg
mov
incb
jne
push
adcl
cmp
mov
push
sbb
jno
xchg
inc
mov
xor
fsubl
mov
scas
mov
out
test
repnz
mov
mov
sbb
outsb
mov
std
mov
cmp
cmp
lahf
test
sbb
and
fwait
loope
mov
cmp
ret
rcr
ja
movsb
pop
inc
inc
mov
xchg
xchg
push
addr16
into
pop
add
addr16
pop
lods
adc
push
push
in
mov
jbe
xchg
call
cld
roll
jnp
out
push
or
adc
call
in
mov
jb
out
jb
in
sbb
aam
push
ja
push
mov
mov
shrb
xor
sbb
adc
fwait
xorb
xor
inc
dec
mov
sbb
loopne
lahf
cmc
cmp
pop
call
nop
loope
shll
cmp
sbb
cmp
push
stc
cmp
dec
adc
scas
sbb
inc
xchg
fcmovne
inc
xchg
out
pop
dec
mov
jmp
js
popa
pop
mov
data16
jae
mov
or
cmp
data16
xchg
mov
inc
sahf
fldl
sbb
inc
xor
mov
jmp
jecxz
test
jmp
sahf
adc
mov
xchg
rcr
ja
das
ret
mov
test
cltd
lods
iret
adc
adc
in
adc
jg
rcl
in
push
inc
push
pop
int3
in
mov
jne
lea
sub
js
pop
ret
cld
inc
cmc
aam
cmp
rorl
mov
inc
xchg
dec
mov
iret
and
mov
addr16
mov
xor
loope
and
or
test
cli
hlt
nop
pop
pop
jge
cmp
sub
dec
test
pop
insb
les
cmp
cs
add
ss
ucomiss
mov
lods
orl
scas
mov
das
icebp
mov
mov
addb
adc
roll
mov
cmp
test
loope
sub
xchg
lret
ss
iret
push
ficoml
es
daa
xchg
sbb
inc
push
ret
and
inc
and
adc
dec
popa
adc
sub
cmpl
add
sbb
adc
outsb
lea
cmp
inc
jo
ja
jns
cmp
dec
inc
movsb
jg
xchg
scas
popa
xchg
or
push
xor
add
pop
neg
pop
test
daa
es
push
mov
jb
sub
and
clc
rcrl
sub
and
dec
insl
xlat
cld
or
mov
js
andl
sti
fs
iret
jnp
xchg
push
mov
inc
jg
jo
std
mov
mov
mov
pop
ss
mov
cmp
mov
push
mov
xor
in
dec
lretw
movsb
xor
jle
push
sbb
pop
jns
push
pop
enter
rcrb
push
fwait
pop
push
jne
mov
xlat
cmovae
lods
pop
lods
mov
or
loope
xor
dec
jno
xchg
inc
sub
iret
cwtl
jp
movsl
aam
aaa
roll
or
lods
inc
arpl
cmc
out
aad
gs
dec
popa
stos
iret
loop
movb
dec
cmp
push
and
lods
mov
xchg
imull
dec
movsb
pushf
aam
bound
sbb
scas
insl
icebp
loopne
out
notl
mov
out
std
rclb
lods
mov
mov
sbb
or
fstl
or
pop
xor
push
push
jmp
jo
addb
in
out
mov
or
and
out
jnp
sbb
mov
mov
sub
rcrb
stc
mov
stos
xor
aaa
mov
das
stc
mov
rcrb
add
pop
sbb
cmp
lret
mov
das
movsb
mov
xor
adc
xchg
fisubrl
jecxz
dec
inc
sbb
and
xchg
cwtl
cmp
mov
jmp
jns
fildl
out
fildll
jge
imul
in
cmp
mov
add
dec
and
and
paddb
mov
daa
inc
je
mov
dec
movsb
into
fsubrs
sarl
mov
dec
cs
mov
push
pop
das
outsl
sub
sahf
dec
jae
in
mov
xchg
repz
jp
cmc
mov
dec
and
sbb
fwait
add
hlt
repz
and
pop
jmp
les
in
stc
mov
add
mov
mov
xor
shl
xor
mov
sbb
sub
sub
and
fsubl
pop
push
gs
inc
loopne
push
scas
les
sub
insl
adcl
rcrl
sahf
push
nop
dec
jecxz
and
cmpsb
les
mov
push
push
adc
ret
sbb
dec
pop
xorb
cmpsb
lods
out
scas
mov
xor
ljmp
jno
cld
subb
mov
push
loopne
stos
pop
mov
pop
push
mul
pushf
enter
test
imul
mov
test
notl
jae
jl
je
cwtl
fnstenv
popf
mov
adc
outsb
cmc
adc
lods
scas
pushf
fnsave
loopne
or
xchg
mull
jae
ret
loop
out
lds
aam
or
rorb
and
icebp
and
jecxz
dec
pushf
or
mov
aaa
ja
push
add
jo
push
push
enter
mov
xlat
mov
je,pt
hlt
pop
stc
sub
xor
test
enter
pop
fcoml
outsl
mov
outsl
xchg
push
or
or
push
push
mov
mov
jmp
fucompp
aam
mov
jae
hlt
push
dec
add
sbb
in
insb
stos
sti
rolb
dec
pop
jnp
xor
jg
push
mov
cmp
int3
test
out
cmp
ljmp
mov
sub
mov
pop
test
xchg
mov
scas
cli
scas
push
jno
adc
in
cmp
push
and
jg
js
fwait
sub
enter
fs
push
scas
int3
push
je
mov
xor
ror
add
pop
icebp
jno
test
fcompl
mov
jae
aad
lods
dec
sbb
push
js
pushf
inc
int3
call
sti
fwait
lahf
fstpl
mov
jno
lods
sub
das
cld
inc
xchg
aaa
mov
add
sbb
dec
and
mov
in
pop
pop
pop
ret
in
xchg
xlat
mov
out
xchg
xchg
adc
in
insl
jnp
sahf
insb
mul
add
outsb
ss
mov
ljmp
mov
push
shlb
inc
ja
lret
sub
ss
shrb
out
sbb
xchg
cmpsl
cmc
mov
cmpsl
call
xorb
mov
jecxz
sub
jge
xor
lods
sahf
push
bound
pop
adc
xor
out
into
cmc
mov
mov
addr16
dec
jbe
jg
cmpsl
sub
xchg
push
inc
fwait
xlat
out
push
scas
jp
cmc
add
icebp
mull
mov
adc
mov
inc
clc
mov
add
fsubp
mov
stc
jl
push
xchg
mov
push
mov
mov
in
stos
inc
pop
call
lods
daa
std
cmp
mov
mov
adc
rclb
adc
pop
cmp
dec
dec
movsb
int3
lret
insb
dec
jecxz
fcoml
ret
mov
stc
xchg
jl
shrb
pop
test
xor
sub
cmp
lret
stc
or
cld
adc
add
addr16
lds
cmp
insb
popf
xchg
jo
icebp
sub
push
push
pop
xor
xchg
sub
test
xor
jle
lret
cwtl
pop
sbb
out
xchg
push
add
xor
xchg
pop
mov
xchg
add
sbb
pop
cmc
xchg
call
js
push
mov
insl
mov
inc
rcrl
outsb
test
cmpsb
insl
repz
loope
in
fldt
addr16
mov
out
mov
jl
bound
dec
mov
sbb
cld
loopne
mov
out
add
sub
mov
lock
iret
lock
neg
pop
mov
int3
jno
adc
cwtl
xchg
sbb
mov
cmpsb
jge
mov
lds
std
inc
sbb
mov
push
test
xor
rol
mov
push
in
fnstenv
pop
push
mov
jb
stos
in
pop
dec
mov
std
push
shll
dec
add
adc
iret
arpl
fs
xor
push
int
loop
out
cmp
inc
adc
cmp
cmpsb
inc
in
rorl
lods
das
adc
sbb
sub
mov
arpl
out
int
mov
sahf
jp
daa
aad
jnp
fildl
and
gs
and
or
xor
stos
xchg
cmc
add
push
sub
iret
pop
adc
ficompl
dec
mov
jl
std
out
mul
or
sahf
jo
or
and
sbb
movsb
jp
jae
insb
mov
pop
mov
in
stos
jp
hlt
scas
stc
mov
ja
push
lods
xchg
cs
cmpsl
das
lahf
mov
sahf
xchg
xchg
hlt
shll
filds
mov
loopne
jmp
das
inc
sarl
jb
sti
call
icebp
lret
dec
cmc
add
or
mov
imul
out
push
imul
out
sbb
pop
inc
pop
test
adc
xchg
jmp
jne
lret
and
icebp
mov
inc
rcrl
shl
xchg
cmpsb
push
scas
dec
out
sub
cwtl
in
aas
push
inc
cmp
mov
jecxz
pop
cld
dec
call
cmp
icebp
loope
inc
and
mov
fisubrs
std
xchg
lret
xchg
xchg
add
sub
pop
sub
ja
jle
movl
cmp
push
jae
shr
stos
jl
cmp
and
jecxz
cmp
add
aam
or
or
sbb
add
popa
pop
mov
incl
adc
add
xchg
sbb
aaa
add
cmp
fildll
in
pop
jecxz
shll
jge
and
pop
inc
sbb
or
jbe
divb
insb
loop
daa
ffree
fs
push
add
adc
imul
loopne
jg
std
cmpl
btc
hlt
ljmp
stos
or
pop
sbb
cli
xchg
sub
pushl
pop
xor
sbb
outsb
xor
fisttpl
cltd
push
cmp
mov
mov
ss
lods
mov
pop
cwtl
jmp
xchg
rcr
mov
and
jle
jo
push
add
xchg
faddp
loope
fcmovbe
idivb
xor
xlat
mov
lock
pusha
jp
lea
int
lret
add
and
aaa
inc
xchg
adc
sub
add
and
lcall
jo
or
pusha
lcall
sub
fwait
cmc
mov
dec
xor
mov
pusha
divb
add
or
into
mov
bound
add
pushf
mov
push
je
xchg
cmc
push
decb
xor
js
hlt
sbb
mov
and
into
dec
pop
xchg
sub
sub
outsb
jno
jg
shlb
jo
roll
xor
ljmp
push
int
mov
fidivs
shrl
imul
push
push
out
dec
lahf
mov
dec
repnz
sub
aaa
push
xor
test
jo
jmp
rorl
imul
outsl
aad
shlb
and
jp
ret
out
add
outsl
jg
int
pusha
fucomp
popf
fucomp
xor
mov
push
leave
movsl
gs
mov
int
mov
sbb
lret
jae
test
mov
push
jecxz
lds
in
and
pop
xlat
movsb
fs
mov
pop
lahf
xchg
add
loope
adc
sub
cld
rclb
int3
daa
mov
fsubp
cld
or
push
mov
mov
mov
enter
adc
or
sub
push
cmp
aad
and
jge
xor
or
shlb
neg
call
dec
aam
cmpsb
dec
sub
lea
int
jp
orb
sqrtps
adc
cmp
mov
push
fsubr
outsb
cmp
sub
dec
mov
or
stc
in
nop
push
lret
mov
xor
out
sub
pop
jo
mov
aas
cmpsl
jns
daa
bound
dec
jne
dec
lods
pop
ja
jg
mov
add
outsl
add
imul
push
or
jnp
js
insb
mov
jnp
jecxz
insb
test
or
lcall
and
cmc
ljmp
fwait
mov
jno
xor
test
fisubrs
cmpsl
lds
and
mov
cmp
das
movsb
imul
inc
mov
mov
sbb
fs
inc
mov
and
imul
popf
dec
push
or
xchg
shrb
xor
test
insb
lret
jbe
nop
out
mov
sub
addr16
arpl
mul
orl
mov
sub
adc
and
dec
aaa
add
pop
xchg
or
mov
mov
icebp
jmp
js
xchg
shll
movsl
add
cld
jl
push
mov
cmp
add
negb
addb
xchg
aaa
mov
cli
mov
sahf
test
mov
or
mov
sub
or
lret
in
cltd
imul
mov
xor
test
and
pop
sbbl
jo
into
clc
imul
es
sub
fidivs
adc
icebp
out
sub
lods
mov
cmpsl
push
mov
xor
enter
in
mov
xlat
outsl
sahf
push
data16
arpl
nop
out
jnp
cmp
les
pop
subl
pop
and
xchg
inc
xchg
iret
fnsave
mov
push
movsb
dec
xor
iret
in
test
jecxz
adc
fst
sub
jmp
lock
cmp
sti
cmp
sub
xchg
push
sbb
mov
and
push
in
iret
cmp
std
loope
lea
cs
jo
cmp
inc
push
insb
push
inc
js
ret
dec
mov
mov
jl
push
daa
dec
xchg
out
movsl
int
pop
push
sahf
icebp
fnsave
dec
fildl
cmp
sub
lds
shll
dec
add
movsl
sub
out
scas
outsb
in
dec
mov
testl
jge
cwtl
std
and
inc
mov
mov
addb
jno
pop
pop
pop
ret
loopne
pop
shrl
test
sub
mov
lods
ljmp
imul
xchg
pop
jecxz
xchg
inc
ds
sub
fbstp
or
jle
push
es
lcall
filds
pop
movsb
adc
scas
and
and
shlb
fnstenv
mov
xor
jo
xor
aas
dec
cmp
push
dec
mov
repz
lds
fnstenv
mov
jge
adc
fidivl
shl
sub
cwtl
int
pop
push
push
in
mov
inc
dec
pop
movsl
ds
jl
fisttpl
cmp
mov
test
pop
cmp
xchg
xchg
push
push
jg
and
add
insb
les
stos
test
test
ret
xor
jle
imul
xor
hlt
xlat
or
mov
mov
daa
sub
lds
xlat
ret
jg
pop
sub
pop
fsubs
mov
jge
jl
setg
sub
jl
ret
xchg
int
jb
sbb
punpckhbw
dec
mov
popa
sub
dec
mov
and
bound
adc
add
out
xchg
lods
in
iret
int
cmp
push
and
pop
les
fstps
out
xchg
or
mov
inc
sub
popf
jl
mov
mov
push
sub
hlt
mov
pop
cs
mov
cmp
inc
flds
int
add
gs
push
fwait
push
adc
jl
in
imul
push
xor
out
jecxz
push
jle
and
or
jge
sub
mov
xchg
mov
xor
fistps
mov
call
incl
call
insb
mov
push
mov
mov
add
in
fwait
lods
sub
xchg
in
adc
xor
js
mov
mov
pushf
pusha
js
stos
pushf
and
or
jnp
mov
pushf
mov
push
mov
test
push
ss
movsl
jno
add
daa
jp
inc
dec
scas
cltd
cld
jb
enter
push
cmpsb
rcr
adc
push
insb
movsb
pop
pusha
jmp
test
rol
in
nop
andb
mov
or
or
ffree
push
lds
fisubrl
enter
mov
pushf
stc
clc
test
mov
jmp
andb
outsb
ss
cmc
into
int
cmp
xor
jecxz
icebp
orl
lods
lea
jbe
xchg
xor
cld
in
dec
push
pusha
fadds
dec
mov
cltd
jmp
xor
int
and
fists
cmp
in
cmp
jmp
mov
jb
int3
lods
jns
inc
push
nop
jne
lcall
jge
pop
sti
push
fnstcw
rep
xorl
out
mov
lods
sti
cld
xchg
push
push
adc
mov
cmp
out
xchg
repnz
pop
pop
sub
out
stos
sub
lods
hlt
shll
jb
shlb
mov
scas
mov
or
fs
jl
fbstp
lea
rcrb
icebp
cmpsl
inc
pop
xorl
and
scas
into
xor
scas
test
pop
push
mov
aad
jb
in
std
adc
xchg
sbb
ja
enter
nop
cmp
xlat
dec
pop
or
insb
cmp
push
aam
xor
loop
mov
jnp
or
imul
mov
jb
pop
mov
cwtl
cmc
sarb
lret
cli
add
out
mov
repnz
cmp
xchg
fs
cmc
and
test
inc
jge
mov
fs
in
jge
mov
xor
fcomps
adc
xchg
mov
mov
loope
lds
and
inc
adc
push
popf
xchg
scas
push
out
sbb
enter
and
dec
repz
out
mov
iret
fcompl
scas
es
movl
stos
add
or
fdivrl
hlt
cwtl
adcb
test
jnp
out
and
xlat
jle
jmp
popf
mov
or
cs
or
in
add
pop
into
sub
xchg
sub
lret
push
les
loopne
mov
mov
xchg
cmpsl
mov
mov
pop
cmp
sub
lret
repnz
add
fwait
xchg
popa
add
in
fwait
popa
push
jae
xchg
mov
subl
push
hlt
push
mull
xchg
movsl
insl
xchg
dec
push
hlt
out
shlb
xchg
repnz
adc
jbe
pop
mov
add
add
mov
movsb
pop
outsb
je
test
ja
push
mov
mov
sbb
pop
ljmp
mov
xor
imul
call
mov
rclb
rclb
negb
sbb
loopne
nop
or
cwtl
loop
loop
cmpsl
inc
loopne
and
rolb
shlb
xorb
cld
dec
jb
orl
jmp
aam
xchg
sbb
mov
xorl
sbb
stos
sbb
push
dec
mov
and
jl
pop
xchg
adc
shll
imul
xchg
inc
lret
push
test
lcall
jmp
mov
mov
shlb
mov
pop
cmc
mov
mov
jae
dec
out
movsb
leave
call
lods
out
adc
xchg
sub
cmp
mov
and
sbb
shll
rep
cwtl
popa
sbb
out
sbb
out
mov
into
ret
jg
push
mov
dec
sbb
ret
pop
dec
pop
xchg
lods
add
stc
addb
mov
daa
stos
pop
jle
jnp
bound
fs
jnp
and
pushf
sub
xchg
push
sbb
jecxz
push
shrl
fisubrs
jp
xlat
mov
popf
cmpsl
addr16
and
sbbb
rcl
pop
stos
mov
testb
insb
aas
push
loopne
ja
dec
and
sub
sub
adc
arpl
fdiv
xchg
jb
roll
add
icebp
mov
cmp
adc
dec
push
dec
rcrb
adc
mov
push
push
adc
out
adc
cli
pop
add
mov
inc
mov
jle
int3
or
ret
dec
sub
mov
std
xchg
inc
loope
enter
inc
daa
cmp
push
adc
jbe
xorb
mov
or
xchg
out
bound
lds
mov
imul
clc
xchg
jb
gs
jnp
mov
jg
push
push
jne
outsl
roll
dec
push
movsb
ret
dec
push
mov
xor
pop
ficoms
fidivl
test
outsb
mov
cmp
mov
mov
ja
ret
out
dec
adc
pop
cld
mov
aaa
test
stc
mov
sbb
sbb
stc
xor
mov
or
xor
mov
dec
es
pop
xor
imul
lds
cmp
or
out
xchg
or
loopne
fwait
xor
mov
aas
addl
hlt
cmp
loop
into
add
push
push
push
push
aad
xor
sub
inc
pop
mov
mov
add
insb
fstpl
xor
hlt
cltd
push
ja
cmp
mov
loope
frstor
iret
lock
push
cmp
out
fcmove
idivb
psrld
clc
mov
jp
mov
je
loope
xchg
div
icebp
push
rol
out
dec
cmp
push
ret
xchg
cli
test
adc
fcomi
pushf
loop
negl
add
mov
jb
pop
call
add
jecxz
xlat
sub
out
stos
pop
cli
dec
pop
mov
sub
dec
cmp
push
push
xchg
xor
inc
jb
jmp
mov
add
pop
push
outsb
and
cmp
jmp
sub
jecxz
test
xchg
cmp
xor
outsb
xchg
xor
xor
jns
and
mov
scas
mov
insb
daa
jno
mov
mov
test
and
add
sbb
andps
mov
negb
insb
adc
xor
cwtl
sbb
fisubs
mov
cs
mov
jo
decb
test
rep
mov
pop
mov
sub
rol
push
icebp
push
loope
call
mov
add
add
leave
pop
xchg
jecxz
sub
mov
lods
sub
lods
add
push
xchg
lods
xchg
rep
pop
lods
push
xchg
add
lods
loop
lods
lea
add
lea
mov
rep
pop
lods
push
push
push
xchg
pop
lea
call
jb
sub
jae
mov
cmp
jb
sub
push
movzbl
shl
mov
lea
lea
mov
jecxz
mov
sub
mov
xor
test
setne
push
inc
mov
lea
call
pop
lahf
adc
shr
je
sahf
sbb
je
mov
xor
mov
call
xor
jmp
mov
mov
add
call
jae
add
call
jb
add
call
jb
cmp
mov
jb
mov
push
mov
sub
mov
jmp
add
call
xchg
jae
add
call
xchg
jae
xchg
cmp
mov
jb
mov
push
push
mov
add
call
pop
xchg
jmp
cmp
mov
jb
mov
push
xchg
xchg
mov
mov
add
call
push
pop
push
dec
cmp
jb
mov
shl
mov
lea
call
cmp
mov
jb
xor
shr
adc
dec
inc
xchg
inc
shl
cmp
lea
jbe
sub
xor
mov
shrl
mov
bswap
sub
add
cmp
jb
mov
inc
add
call
loop
mov
shl
add
lea
xor
push
inc
push
shl
mov
xchg
call
xor
pop
shr
adc
loop
pop
add
inc
pop
mov
push
mov
sub
rep
lods
pop
mov
stos
cmp
jae
jmp
pop
mov
pop
pop
push
jecxz
mov
inc
add
cmp
jae
mov
cmp
jne
mov
bswap
add
sub
stos
loop
mov
push
push
mov
inc
lods
test
pop
je
add
push
push
xchg
call
xchg
lods
test
jne
cmp
je
mov
jns
inc
xor
lods
push
push
call
stos
jmp
pop
pop
mov
jecxz
xor
lods
cmp
jb
add
add
loop
popa
jmp
sub
jb
je
shl
lods
jmp
lods
jmp
lods
jmp
push
mov
push
shr
mull
mov
mov
bswap
sub
cmp
pop
jbe
mov
xor
mov
sub
shr
add
jmp
add
sub
mov
shr
sub
stc
pop
pushf
cmpb
jne
incl
shll
shll
popf
ret
xor
inc
lea
call
adc
cmp
jb
sub
ret
mov
call
lea
mov
jae
call
mov
jae
shl
mov
push
lea
call
pop
add
ret
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
shlb
lods
dec
add
test
add
add
add
add
shlb
add
movsb
add
aas
inc
gs
push
inc
push
je
insb
imul
pop
pop
add
dec
inc
inc
dec
dec
inc
push
inc
push
pop
pop
inc
push
dec
dec
pop
add
jne
inc
jae
xor
