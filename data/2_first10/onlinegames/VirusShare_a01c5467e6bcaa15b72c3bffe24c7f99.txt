out
call
in
sub
andb
push
push
push
push
xor
pop
lea
fcomi
stos
push
ljmp
pop
xor
jmp
mov
pop
ja
test
add
loop
mov
dec
gs
in
in
dec
mov
xor
cs
jbe
dec
mov
insb
jmp
mov
push
call
pop
mov
jg
mov
push
push
push
push
push
mov
push
push
call
mov
and
adc
clc
lea
push
add
in
and
call
jbe
adc
adc
pop
mov
or
adc
pop
pop
pop
leave
ret
add
aaa
fstpt
push
xor
push
push
push
cmp
test
je
push
jae
adc
xor
mov
add
push
push
push
or
fwait
mov
lock
add
clc
fcomps
push
pop
mov
pop
insl
movzwl
ljmp
addr16
or
or
cmp
xor
cmp
mov
in
je
push
adc
pop
or
xor
cmp
jne
hlt
jmp
push
testb
push
pop
inc
cmp
push
cmpl
sbb
push
push
or
scas
dec
mov
adc
mov
pop
cld
sub
ret
lock
ret
repz
sub
inc
scas
ja
gs
enter
clc
inc
xchg
xor
sbb
sub
cmpl
je
adc
adc
data16
add
or
push
cmp
les
dec
and
lods
jmp
pop
push
fs
popf
insl
ret
insl
negl
test
gs
into
loopne
add
outsb
cmp
daa
push
or
add
jb
jb
sub
outsl
or
addr16
popa
add
insl
cs
lret
in
and
inc
ljmp
jb
pop
in
jae
out
pop
out
inc
lock
lcall
repz
outsb
xor
imulb
cmpsb
imul
pop
push
xor
xchg
fstp
fsubr
xchg
rep
or
push
mov
pop
mov
out
jmp
pushl
adc
adc
push
mov
ror
mov
inc
inc
dec
dec
test
jne
push
pop
jmp
lahf
xor
push
push
push
inc
push
xor
push
add
add
cmpb
subl
rclb
imul
sub
push
cmp
lret
push
jbe
push
cmp
xlat
cmpl
jne
and
fs
mov
mov
push
push
adc
pop
fcmovnbe
xor
or
adc
add
dec
scas
sub
and
jb
aas
jmp
ret
pop
pop
pop
or
mov
inc
xchg
xchg
mov
out
test
push
lea
mov
sti
mov
mov
inc
jns
mov
adc
data16
popf
cs
mov
adc
xchg
adc
xor
mov
and
fcomip
arpl
and
push
call
or
das
cld
incl
push
push
xor
mov
test
je
enter
push
push
add
test
call
imul
adc
andb
xor
sbb
inc
sbbb
cli
mov
push
mov
mov
inc
inc
test
jne
pop
adc
aad
mov
cmp
xor
rcrb
repz
gs
push
add
je
movsl
pop
lcall
fstps
add
mov
or
jne
cmpsb
fwait
lahf
lods
insb
inc
or
test
add
xchg
lret
inc
add
stos
mov
ror
in
test
push
push
test
inc
pop
jecxz
or
pop
fcmovnbe
fsincos
xor
loopne
mov
push
jb
xlat
sbb
add
mov
mov
add
dec
push
mov
in
mov
std
cmp
cmpsb
test
aaa
aaa
sub
data16
xchg
xchg
jb
inc
into
loopne
xchg
jne
xchg
outsb
pushf
pushf
insb
nop
mov
fstpl
pushf
in
loope
or
int3
cld
mov
xchg
or
clc
push
jg
mov
push
push
aas
cld
and
mov
orb
mov
and
insl
adc
nop
scas
jne
push
adc
call
sbb
jae
ret
ss
test
dec
inc
push
push
push
adc
adc
fwait
or
fldt
or
adc
loopne
imul
addl
sar
fwait
sar
sbb
add
ljmp
mov
popf
jle
stc
in
in
jl
inc
or
xchg
lahf
adcl
pop
jb
cltd
fcomp
cld
xor
gs
or
pop
inc
mov
sbb
inc
ret
int3
out
lock
and
add
flds
add
or
adc
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
mov
add
addr16
jl
pusha
xor
lcall
pop
pushf
stos
mov
imul
push
pop
jbe
rcrl
xor
dec
adc
xor
jmp
adc
dec
ret
arpl
incb
pop
add
outsl
arpl
push
call
ja
push
xor
inc
bound
push
jb
jbe
insb
gs
cld
lcall
jae
gs
xor
pop
add
inc
dec
push
xor
sti
filds
and
jo
push
outsl
imul
and
sbb
dec
pop
or
daa
imul
andl
cs
insb
cmp
sub
push
in
xchg
or
xchg
cmp
mov
cmpl
ljmp
push
jle
nop
add
inc
dec
mov
leave
dec
nop
cmp
dec
inc
dec
mov
inc
nop
push
xchg
dec
adc
dec
push
push
pusha
ljmp
add
add
nop
add
xor
mov
add
mov
add
add
pop
mov
int
mov
jg
push
jb
addr16
insl
and
outsb
outsb
outsl
je
bound
jb
outsb
and
pusha
mov
and
fs
xchg
rcl
push
xlat
mov
mov
add
leave
cs
aad
adc
fldl
pop
lods
lods
jle
out
push
rclb
mov
scas
push
mov
mov
daa
loopne
aas
scas
mov
xchg
pop
mov
cmp
dec
push
imul
or
add
dec
loopne
and
add
lret
ja
and
sub
fwait
lock
add
in
int3
and
xor
pop
mov
sahf
or
dec
pop
call
shll
mov
push
or
bound
lret
add
sbb
push
add
sub
popa
je
faddl
xor
loopne
inc
push
push
pop
rcr
shlb
mov
jae
xor
imul
mov
mov
outsl
arpl
sti
add
xor
out
xlat
or
adc
mov
add
xor
int3
mov
cmpsb
imul
fs
add
and
cmp
insb
out
mov
or
inc
lods
cmpsb
imul
cmpsb
imul
lcall
pop
push
jmp
and
imul
lcall
inc
push
cmpsb
imul
imul
shll
adc
or
lods
in
jae
cmpsb
imul
cmpsb
adc
xorb
imul
xor
shrl
ficompl
and
shll
pop
push
shll
lcall
mov
shlb
les
mov
mov
xor
sarl
dec
ds
sti
insb
lcall
pusha
call
pop
negl
add
or
dec
shll
xchg
jl
add
addl
gs
pusha
test
inc
test
sbb
jae
pop
adc
popa
fs
sub
push
jo
decl
outsb
push
jb
inc
adc
mov
jg
dec
dec
dec
dec
inc
push
and
add
add
add
and
add
in
int
lahf
xchg
add
aaa
nop
cmpsb
imul
push
add
push
pop
push
and
jnp
add
nop
push
and
and
lret
enter
inc
flds
jmp
add
test
fldenv
popa
fadds
shlb
ja
aas
xchg
adc
mov
sub
or
shr
add
add
pop
adc
pop
fadds
dec
inc
fldcw
sbb
inc
xor
xchg
pop
and
sub
add
mov
test
je
and
pop
xor
orl
adc
incb
lds
or
imul
add
jae
out
jmp
push
packsswb
je
jne
jb
gs
sbb
pop
inc
or
push
sub
incl
pop
add
push
inc
jb
push
and
ja
or
push
insb
repz
mov
jae
pop
and
addr16
xor
aaa
shrb
sbb
sub
clc
idiv
ljmp
inc
sbb
test
pushl
cbtw
bt
cwtl
cmp
sub
push
jmp
mov
das
je
cs
jae
mul
int3
cld
ss
shlb
imul
push
or
je
jo
cmpsl
jno
cmpsb
jne
jae
inc
js
xor
xor
out
outsl
iret
outsl
je
gs
jns
gs
imul
xor
add
add
mov
cs
insl
xchg
cmp
pop
stc
pop
pop
cs
add
fucomip
aaa
push
arpl
popa
insl
push
push
dec
inc
push
push
inc
push
inc
pop
dec
imul
outsl
data16
mov
outsl
ja
and
pop
inc
jne
jb
neg
jbe
je
xor
pop
dec
int3
ja
jb
inc
popa
jb
pop
fbld
mov
ja
gs
inc
add
not
stc
stc
ja
lock
call
ja
imul
ret
arpl
cmp
add
xlat
add
cmp
xor
jbe
outsl
push
pop
into
mov
stos
xor
pop
leave
scas
std
decb
xbegin
scas
or
into
in
jns
in
std
mov
sarb
ja
or
and
or
mov
popa
push
pop
insl
test
pop
and
jl
adc
pop
aas
in
and
dec
dec
dec
inc
and
outsb
arpl
fistpl
mov
das
mov
cmovle
xchg
fcompl
push
aas
das
inc
pop
xor
leave
in
xchg
pop
test
pop
aam
pushl
or
adc
dec
cli
sub
mov
add
lahf
jmp
mov
push
push
push
and
fistps
mov
push
push
push
mov
cmp
and
pop
in
push
mov
push
mov
ljmp
adc
jmp
movb
add
out
idiv
push
push
push
call
or
dec
cld
ljmp
pop
jmp
addr16
into
in
add
mov
xor
mov
arpl
bound
in
stc
test
adc
mov
jae
mov
add
imul
clc
mov
ds
out
insb
in
add
movb
sub
sub
push
add
jle
mov
lea
adc
fcmovu
pop
mov
loopne
pop
ret
mov
repnz
test
ss
cwtl
inc
inc
sub
jl
or
add
or
arpl
or
xchg
push
jae
std
and
es
lcall
push
movzbl
shll
in
mov
cmp
jne
mov
andb
mov
or
push
aas
jb
pop
cmp
pop
jl
xchg
fistpll
mov
nop
mov
movsb
test
jne
mov
cmpw
jne
mov
add
cmpl
inc
push
dec
mov
add
push
mov
adc
adc
or
sbb
and
or
push
jbe
xchg
xchg
nop
pushl
xor
out
jne
or
call
cmp
je
mov
cmp
je
or
divl
sti
mov
adc
pop
cmp
ja
jge
add
or
mov
xor
mov
mov
cmp
ljmp
push
in
adc
push
sub
je
addl
or
dec
sbb
inc
xor
in
prefetchwt1
or
or
xor
jmp
loopne
mull
add
out
sbb
sub
mov
outsl
mov
int
push
push
call
mov
imul
xchg
inc
and
push
and
jle
daa
sbb
and
push
push
dec
sti
test
pop
mov
mov
adc
pop
push
fstl
jmp
enter
push
push
and
enter
push
fildll
movsb
sbb
pop
pop
ret
mov
push
xchg
outsl
out
das
sub
cmp
sti
and
nop
dec
sbb
jb
sub
mov
fimull
xor
xor
in
push
push
pop
sbb
call
push
or
mov
cmp
rol
jno
lock
test
xor
add
adc
mov
lock
add
mov
movsl
mov
movsb
mov
outsl
inc
push
xchg
and
mov
lock
movsl
mov
dec
dec
mov
mov
adc
enter
xchg
mov
or
mov
pop
fidivrl
push
and
cmp
ja
ss
or
inc
das
xchg
adc
adc
push
cmp
jbe
add
xchg
pop
mov
push
inc
xchg
jl
add
out
dec
sar
sub
adc
jo
add
pop
pop
leave
cmpl
xor
adc
push
mov
xor
adc
imul
orb
or
lock
sub
mov
cmp
js
xor
loop
cmp
push
mov
popf
aam
je
daa
mov
inc
xor
push
push
push
sbb
or
or
jno
dec
inc
cmp
mov
jnp
sti
mov
dec
xchg
mov
or
sub
pop
lock
je
adc
call
enter
push
sub
add
push
or
push
sti
or
fisttpll
or
addr16
push
xor
push
mov
mov
jne
pop
jmp
je
jne
adc
adc
xor
xor
jns
cltd
outsl
mov
xlat
xor
pushf
roll
ja
pop
sti
notb
jne
data16
add
imul
or
fs
or
es
or
add
add
test
fcmovnb
jbe
add
ret
add
pop
push
mov
notb
outsl
sbb
push
shlb
add
and
xchg
push
aas
enter
je
push
jmp
adc
jmp
add
and
test
popf
or
sub
xor
cltd
pop
inc
idiv
lcall
call
jg
sbb
jmp
andb
mov
sub
xor
add
rcr
inc
push
xor
aam
enter
sbb
movsb
xor
add
mov
mov
adc
adc
jbe
pushf
cmp
call
adc
mov
xlat
and
mov
ret
dec
sbb
insb
mov
pop
sar
pop
decb
pop
ja
xor
dec
jbe
cmpb
jne
movb
pop
xor
enter
mov
mov
imul
pop
loop
or
andl
stos
or
inc
sub
je
shll
adc
add
add
dec
adc
inc
push
or
jecxz
push
add
fstpt
cmp
loopne
cmp
jae
incl
lret
shr
add
outsl
mov
or
cmp
arpl
pop
cld
mov
inc
decl
inc
mov
mov
jne
mov
sbb
in
mov
fistpll
mov
mov
add
loop
or
adc
or
adc
roll
fdivrl
fwait
cs
popa
flds
add
pop
mov
stos
pop
xchg
pop
insb
bound
push
xchg
pop
jbe
or
incb
sti
not
and
push
jl
and
or
add
lea
test
in
outsl
cmc
shr
rcll
mov
add
repnz
jg
and
not
and
testl
mov
div
out
pop
test
or
js
add
push
aam
fildll
fmull
pop
inc
fisubs
fimull
add
lea
and
out
xadd
adc
pop
inc
sub
mov
lock
and
not
cmp
add
repz
pop
sti
int
sub
rorl
push
shr
or
add
fbstp
daa
pop
jg
push
fisttps
xchg
sbb
mov
push
lods
loop
mov
divb
hlt
mov
not
and
sub
and
out
add
push
adc
movb
in
fnstenv
add
test
fiaddl
fidivrl
pop
adc
sbb
inc
xor
out
mov
or
or
sbbl
int3
xor
add
sub
xor
out
or
and
cli
sbb
les
repz
xlat
rolb
fcomp
cwtl
subb
addl
repz
not
fisubrs
jbe
popa
jnp
adc
pop
scas
testl
sti
mov
pop
les
and
sbb
idiv
loop
mov
repnz
sub
fdivs
add
frstor
mov
pop
mov
inc
pop
xor
les
adc
sbb
or
xor
ja
sub
or
or
xchg
jno
std
stos
fdivrs
xchg
and
outsb
pop
push
fidivrs
pop
aaa
fmull
out
das
push
mov
cmpsb
pop
mov
xor
fwait
sub
sub
xchg
out
fdivrs
or
and
or
popa
adc
add
insb
jmp
or
mov
ret
add
fidivl
out
and
aad
aam
pop
bound
lods
pop
fcomps
shl
add
and
repnz
ret
inc
jge
dec
cmp
inc
rclb
xor
add
push
and
in
mov
clc
jb
repz
pop
pop
es
adc
and
lcall
ljmp
stos
mov
sub
pop
mov
lock
icebp
imull
mov
jl
pop
adc
call
xlat
lods
mov
fdivs
push
adc
add
das
jbe
rorb
insl
sbb
in
pop
and
icebp
aam
push
clc
cmp
mov
lret
outsl
fnstcw
enter
jg
or
shrb
scas
add
lcall
int
and
sbb
loopne
ret
jle
mov
inc
enter
aaa
or
xchg
scas
jne
mov
push
fbstp
cltd
sbb
xchg
dec
pop
mov
cmp
gs
fldcw
xor
fsubrp
mov
adc
inc
loop
shr
inc
call
xlat
fdivs
outsl
add
sbb
add
mov
sbb
pop
enter
daa
xchg
out
scas
sub
aad
flds
outsl
adc
out
movl
sahf
ja
mov
cmp
or
int
in
xor
xor
test
jmp
lcall
xor
mov
call
divb
adc
sar
cs
js
lds
in
push
xchg
out
popf
insl
adc
inc
sti
xor
mov
out
xor
and
or
in
mov
lods
fcomip
xor
mov
sub
push
sbb
xchg
mov
jle
test
cltd
jb
pop
into
pop
mov
push
int3
pop
pusha
dec
mov
out
jno
cli
xor
rcrb
mov
sbb
mov
out
or
mov
fistpl
in
jle
sub
testl
into
fwait
test
imul
out
lock
mov
mov
fidivl
cmc
test
xor
aam
xchg
jae
adc
cmpsb
orl
fidivs
test
lret
repz
cmp
or
ret
imul
sarb
cmp
aam
cltd
das
popf
pop
mov
push
les
in
xor
out
divl
idiv
mov
xchg
ss
in
clc
jl
pop
je
scas
fnstenv
dec
pushl
or
testl
cmp
add
arpl
mov
mov
stos
ret
mov
stos
rcrb
sbb
mov
shl
push
or
in
sbb
jl
inc
int3
es
repz
inc
push
or
sub
movsb
mov
inc
sbb
stos
adc
lock
lret
push
hlt
cmp
mov
pushaw
adc
mov
es
cmp
pop
pop
gs
sbb
pop
jo
rcrl
sub
repz
int3
or
push
or
ja
dec
mov
sbb
jge
out
incl
unpckhps
sbb
int
in
rcrl
test
sub
pop
int
xor
call
jns
jle
outsl
jecxz
jp
sbb
pop
jb
sbb
xor
sbb
out
call
jecxz
jp
ret
pop
fdivrs
mov
add
enter
mov
cmpb
arpl
jp
xlat
sbb
sbb
mov
xor
out
loopne
aaa
xor
fsubs
ret
data16
mov
pslld
ret
push
mov
rclb
xor
mov
test
xor
out
xlat
pop
add
scas
fcmovnbe
add
movsb
mov
inc
or
inc
mov
push
addb
cmp
hlt
xchg
jge
cmp
jl
cmp
outsl
and
sub
push
push
push
mov
call
data16
xor
cmp
adc
mov
fldt
jle
xchg
lahf
inc
inc
fistl
pop
inc
addr16
iret
jb
sti
push
clc
mov
mov
into
ljmp
rcrb
sbb
cmp
jne
imulb
add
cmp
push
inc
test
sub
dec
mov
and
mov
pop
dec
imul
push
fmuls
rorl
push
jl
outsl
stos
cltd
fcompl
jmp
and
test
add
stos
cmp
sbb
xor
xor
clc
dec
xlat
clc
call
mov
ficoms
push
cld
call
loopne
pop
jbe
lea
pushl
repz
cs
mov
xchg
mov
dec
cmp
out
or
testb
push
pusha
lea
int
inc
dec
mov
xor
pop
adc
loopne
in
mov
xor
fdivrs
int3
push
loopne
xchg
insl
mov
add
fsubr
jle
fistl
lcall
adc
in
inc
sbb
data16
add
test
ja
sub
out
add
in
stc
jge
lahf
gs
das
lock
jo
hlt
gs
ljmp
insb
lods
pushf
mov
call
aas
fisttps
mov
and
pop
js
inc
or
fdivrp
call
sbb
faddl
mov
lods
dec
sub
imul
mov
dec
out
mov
outsb
out
fimuls
fmull
inc
push
pop
mov
loop
lahf
pop
jge
call
push
push
sbb
lcall
jb
insl
add
add
dec
out
push
out
push
sub
lret
lock
icebp
inc
repnz
mov
mov
pop
loopne
insb
mov
and
push
sahf
push
cltd
lods
imul
push
sub
or
push
aam
sub
pusha
fstps
xor
out
mov
sub
imul
pop
xorb
and
jnp
into
jbe
aas
bound
sbb
insb
xor
rorb
add
adc
add
inc
outsl
stc
cwtl
in
add
xchg
clc
dec
jo
pop
xor
lea
cwtl
push
imul
jl
f2xm1
cld
das
sub
push
test
cmp
lods
add
movsl
adc
out
insl
xchg
pop
push
mov
push
mov
sbb
fisttpll
mov
bound
enter
mov
xchg
loopne
lods
add
adc
xchg
rcl
lock
mov
notb
push
push
push
nop
clc
lea
inc
sbb
sbb
sub
add
mov
ret
cltd
adc
sub
mov
sbb
pop
out
xchg
adc
dec
fnsave
or
cmp
xlat
sbbb
hlt
push
shlb
push
insl
jmp
pop
call
dec
call
jmp
inc
inc
inc
rcr
push
pop
mov
jb
mov
mov
pop
test
enter
add
mov
data16
repnz
pop
pushf
sti
pop
mov
adc
andl
decl
popf
push
cld
subl
dec
cld
pop
jb
xlat
cmp
cmp
aad
into
out
adc
cmp
mov
jg
test
subb
cmp
je
cmp
in
jb
dec
pop
cmp
pop
push
arpl
mov
in
pop
cmc
cmp
push
inc
mov
ret
push
rcl
push
mov
push
faddl
inc
mov
or
cmp
mov
sbb
movl
addl
cld
into
dec
mov
inc
mov
or
add
sahf
sbb
adc
push
addb
sbb
sub
xchg
pop
or
or
lea
cmp
call
cmp
xchg
and
mov
jns
mov
clc
inc
push
pop
cld
call
cmpl
or
mov
xor
imul
jmp
push
adc
call
mov
cld
movl
push
inc
call
outsb
mov
xchg
push
je
js
push
popa
jmp
or
inc
add
je
cmp
jne
push
movsb
in
add
add
int
ss
adc
pushw
fildll
test
pop
jbe
pop
stos
int3
or
mov
in
je
push
loopne
adc
jae
push
or
enter
lret
test
aaa
mov
mov
cmp
fdivl
sub
test
adc
sbb
test
push
clc
es
xchg
in
mov
mov
push
mov
mov
test
int
sbb
cmp
push
nop
ds
xchg
mov
add
sub
push
and
push
fs
dec
and
divb
add
mov
out
pusha
out
cmp
mov
call
add
sub
dec
push
sub
fdivr
cmp
sbb
int
and
inc
mov
in
push
jg
std
push
mov
notb
xor
icebp
mov
lods
mov
jl
cmp
and
pushf
in
mov
lea
imull
je
cmp
mov
filds
add
mov
jl
scas
or
push
jo
mov
jo
push
popf
shll
pop
dec
test
sbb
aaa
data16
and
std
outsl
in
outsl
cmpsb
imul
adc
pop
pop
call
mov
pop
jmp
call
mov
pop
or
cmpb
int3
sbb
je
jmp
pop
dec
mov
cld
xchg
adc
inc
insb
sarb
pop
dec
mov
aaa
and
push
cmp
call
sbb
push
test
mov
xor
push
sahf
mov
pop
push
push
pusha
stos
or
decl
pop
push
add
xor
leave
lods
jb
pop
lods
push
insl
mov
cs
lret
in
push
mov
mov
mov
mov
in
mov
gs
mov
and
mov
mov
push
fsts
rcl
js
shlb
insb
jbe
mov
aam
aad
xlat
pop
fsubrs
fsub
dec
xor
loope
gs
pop
in
mov
jb
push
out
dec
out
call
cmpsb
imul
imul
mov
or
ret
rol
shrl
xor
lds
mov
leave
lret
insl
cmp
hlt
xchg
push
xchg
ss
xlat
xor
cwtl
cltd
lcall
fwait
pushf
adc
sub
push
mov
xor
movsl
cmpsb
xor
push
shll
hlt
cmc
div
push
je,pn
clc
ds
hlt
cli
jns
lea
mov
mov
xor
or
hlt
mov
dec
pop
xchg
jb
es
add
adc
inc
pop
mov
lret
pop
scas
test
push
lods
add
es
idivb
in
and
test
leave
mov
lcall
cwtl
in
cmp
pop
xchg
xchg
inc
and
cmc
adc
shll
push
aad
stos
xor
mov
out
shrb
in
outsl
sar
sub
push
inc
jge
sti
test
adc
shlb
shl
and
inc
push
dec
out
cli
out
pushf
pop
cli
mov
mov
inc
ret
sbb
daa
clc
dec
lds
inc
sub
outsl
xchg
sub
sbb
adc
movsl
adc
add
jmp
sbb
mov
adc
cmp
aas
mov
add
movsb
nop
repnz
pop
mov
sub
lcall
adc
xor
aaa
push
cmp
push
adc
std
add
xor
stc
push
jne
push
subl
jle
test
jnp
outsb
imul
or
add
lock
dec
testl
in
mov
jmp
int
incb
xchg
jl
push
fldl
pop
jg
mov
xchg
mov
adc
mov
push
mov
sub
cwtl
ljmp
dec
gs
arpl
lods
adc
add
add
in
sub
push
loop
vorps
cmpsl
jae
sbb
je
mov
stc
lock
push
out
in
popa
inc
enter
inc
je
adc
movl
push
aad
data16
mov
push
sub
xor
pop
cmpsl
mov
inc
fs
and
pop
nop
cmpl
xchg
mov
inc
cmp
ret
sbb
pop
jmp
adc
add
add
in
jno
int
rclb
fsub
outsl
sbb
pop
dec
cmp
xor
and
mov
mov
xchg
mov
das
mov
cmp
bound
mov
push
cmp
andl
pop
mov
inc
push
push
lsl
sbb
out
push
jnp
pop
mov
insb
adc
adc
cmp
adcl
cld
push
mov
loope
add
and
jne
cmp
push
and
xlat
jmp
push
add
pop
loope
outsl
scas
fs
xchg
int3
ds
call
or
jne
andl
ja
push
rcr
repnz
fsubrl
loopne
bound
imul
mov
ret
mov
daa
icebp
pop
pop
xchg
mov
out
mov
cld
test
xchg
int
or
int3
dec
int
jp
imul
insb
insb
popa
push
in
xor
dec
push
imul
outsb
ja
fildl
fstpl
jae
fbstp
xor
sbb
cli
mov
cmpsb
imul
decb
xor
mov
mov
mov
mov
mov
imul
xor
fs
pop
xor
mov
mov
pop
pop
lret
in
mov
js
out
call
adc
ret
pop
inc
jb
mov
repnz
cmp
mov
ror
push
cmp
push
adcl
adcb
ret
in
cli
xlat
pop
push
adc
notl
xchg
lret
add
dec
mov
mov
and
in
sub
mov
lock
jmp
popf
sub
lea
add
sub
push
mov
jb
xor
shll
je
imul
call
lock
pusha
insb
lcall
cs
shll
insb
insb
je
bound
inc
xchg
push
mov
xor
add
sub
adc
cmp
lea
loopne
jb
push
fsubrl
sbb
stc
sub
mov
lods
andl
mov
mov
lret
push
mov
pusha
and
add
es
das
cmp
inc
mov
bound
enter
xchg
rcrb
add
mov
fstps
aaa
in
xchg
fildll
enter
cmp
and
fldl
or
lret
mov
cmp
mov
repnz
clc
inc
in
in
stos
adc
sub
sub
mov
xchg
push
pop
push
adc
dec
in
push
or
xchg
jne
xor
xor
popf
test
xor
and
neg
xor
call
adc
push
mov
aam
cmpl
dec
je
and
dec
shll
mov
mov
mov
mov
cmpsb
imul
mov
mov
rol
lcall
xor
scas
addr16
lret
imul
iret
shrb
rcl
adc
or
pop
lcall
fcomp
fcmovu
fwait
scas
jmp
fstp
sbb
loopne
ss
shrl
loop
in
xor
cmpsb
fstps
out
call
je
mov
jmp
daa
in
sbb
out
fs
es
imul
adc
sarb
xchg
mov
loopne
notb
repnz
mov
pop
and
jne
add
jae
cltd
pop
cld
push
fs
or
mov
clc
sub
cmp
cmp
aad
add
popf
inc
push
into
or
adc
jbe
ror
sbb
push
loop
inc
inc
push
mov
pop
pop
inc
testl
ljmp
fmull
adc
data16
pushf
outsb
and
cltd
in
mov
and
aam
shl
pushf
pusha
xchg
pop
mov
sbb
lcall
add
push
and
add
mov
push
arpl
mov
jmp
lea
xorb
test
and
add
or
and
mov
fidivrs
jbe
shll
sbb
jo
sbb
inc
icebp
cmp
and
aas
fdivrl
jge
jbe
push
sbb
movsbw
add
ret
shlb
mov
outsb
xor
cmpsb
sti
cli
xor
xor
call
enter
dec
call
push
xlat
in
shr
jb
adc
scas
push
xchg
dec
gs
les
mov
movsb
sbb
lods
mov
mov
mov
repnz
arpl
and
xchg
sub
xadd
mov
and
sbb
test
jmp
call
adc
rolb
imull
sub
je
or
andl
cli
push
aaa
pop
xchg
ds
or
stos
adcl
push
push
mov
dec
mov
movsb
ret
mov
sbb
pop
inc
or
push
into
sbb
sbbl
into
xchg
outsl
inc
mov
cli
stc
mov
scas
push
adc
leave
xor
call
data16
mov
fdivl
fiadds
in
pop
dec
mov
jmp
jmp
fildll
sets
rol
and
add
dec
shl
sub
jmp
sbb
or
pop
fcomp
out
push
mov
sahf
sti
mov
sbb
test
jmp
xchg
popf
sbb
mov
push
data16
add
inc
bound
mov
add
add
shl
cmc
shl
xor
add
call
ss
out
dec
lds
sub
data16
push
fcmovnb
pop
mov
pusha
jmp
pop
aam
aaa
sti
in
outsl
out
inc
loop
lret
add
ret
call
std
xchg
or
xchg
cmpsl
fwait
cmpsl
jecxz
shl
inc
jle
add
dec
call
mov
mov
adc
ret
not
sub
fnsave
xchg
push
shll
clc
push
or
and
mov
and
mov
or
cmp
inc
data16
cwtl
sbb
pushl
in
push
in
pop
rorb
or
out
push
sub
push
xchg
push
lock
lcall
out
mov
sbb
sbb
aad
test
ret
adc
cmc
daa
xchg
out
inc
mov
mov
xchg
lds
ds
sbb
mov
cld
jmp
mov
xor
call
and
imul
xchg
push
shr
mov
sbb
mov
xor
ja
scas
jl
mov
add
test
ljmp
mov
cmp
cmc
shr
fcmovu
xchg
mov
xchg
ffree
push
sub
dec
scas
xchg
xchg
xchg
push
sub
adcl
sbb
into
or
add
iret
aas
cmc
cli
adc
insb
insb
icebp
sbb
stos
dec
outsl
jae
cmpsb
xchg
pop
lea
xlat
or
sarb
test
mov
sbb
push
lods
or
cmp
add
mov
ficompl
call
sbb
in
xchg
add
repz
shl
mov
cmc
sti
sub
sti
fmul
inc
or
stos
add
call
add
push
push
shlb
dec
ret
pop
loope
cltd
out
xor
adc
push
cmc
pusha
psadbw
push
enter
adc
push
rolb
nop
cmp
jl
fisttps
add
xchg
sbb
jg
repnz
xchg
xchg
shl
inc
inc
cmp
jl
push
xor
out
outsl
adc
dec
xor
scas
out
loopne
fs
mov
fdivl
int
or
jae
ret
pop
sar
or
adcb
stc
repnz
sbbb
repnz
cs
pop
nop
stc
or
lahf
sub
add
push
mov
imul
cmp
push
pop
sbb
pop
mov
mov
mov
push
or
ficompl
add
roll
je
pop
dec
push
dec
mov
cmp
cmp
je
push
dec
push
arpl
cmp
pop
sub
stos
sbb
or
andl
push
xchg
inc
into
je
adc
nop
mov
push
mov
scas
call
xchg
test
cmp
ja
adc
sbb
push
lds
daa
cmp
add
ret
test
popa
clc
andl
sub
shrb
pop
xchg
aam
fsub
ja
sarl
test
subl
dec
push
sbb
sub
pop
sbb
jge
int
jle
mov
mov
aaa
adc
sbb
lcall
sbb
adc
sub
pop
add
les
or
in
or
imulb
mov
dec
sahf
mov
push
inc
jl
sarl
add
mov
jl
lock
jnp
mov
pusha
dec
cltd
mov
add
adc
push
jle
push
hlt
cmp
and
enter
mov
mov
sub
and
xchg
add
movsl
sbb
cmp
sbb
push
ss
push
ret
mov
and
cmp
fiaddl
dec
or
adc
arpl
push
xor
push
pop
xchg
or
gs
xchg
gs
inc
push
cs
insb
insb
or
sub
mov
data16
subl
jb
gs
cmpsb
imul
pusha
lcall
lret
mov
dec
je
jo
mov
daa
lret
jo
push
gs
mov
lret
jne
jae
inc
xchg
mov
shll
xchg
xchg
cwtl
push
ds
imul
sahf
scas
imul
dec
xor
movsl
cmpsb
mov
aam
dec
shll
outsb
mov
notb
jmp
pop
xchg
gs
xchg
jne
jae
push
xchg
gs
cmp
outsb
adc
gs
lret
mov
lret
je
outsl
outsb
outsb
gs
lret
mov
arpl
mov
mov
into
enter
in
mov
fisubs
add
fs
jg
jp
cmp
add
jmp
or
and
jg
dec
xchg
ret
adc
loopne
addr16
cmp
and
sub
je
repz
xor
lock
ljmp
push
jmp
push
pop
push
pop
out
jp
or
fwait
stos
sti
je
push
push
sbbl
jns
in
xor
push
fbld
in
mov
add
shrb
cld
repz
out
add
inc
mov
outsl
cmpsb
ja
push
push
jne
add
jb
imul
daa
rolb
leave
clc
aad
loop
dec
mov
sub
call
enter
sbb
lock
popl
repz
sbb
jecxz
add
xor
jl
sub
or
add
push
loopne,pn
cld
out
stos
daa
aad
pop
into
sbb
jp,pn
mov
call
mov
adc
cld
je
push
mov
addr16
push
cmc
shl
adc
mov
sub
fcomi
push
aaa
mov
jge
add
cmp
je
jnp
cmc
dec
or
inc
xor
adc
jbe,pn
pop
mov
es
pop
xor
fsubs
clc
movsb
int3
jae
aam
shlb
mov
push
and
or
jl
gs
jp
mov
aas
push
frstor
xor
xchg
arpl
repz
lods
addr16
outsl
cmpsb
imul
inc
mov
jg
sub
ja
pop
inc
aaa
jnp
js
jb
sub
cmp
in
xor
push
pop
jb
adc
rol
mov
or
jbe
add
jbe
sbb
or
neg
sbb
mov
dec
sbb
push
faddl
in
push
std
sbb
call
loopne
or
popa
je
pop
xchg
imul
jbe
gs
hlt
insb
cmc
imulb
shll
clc
stc
cli
sti
loopne
cmp
in
in
and
mov
cwtl
sbb
xchg
sub
call
sbb
xor
sbb
sbb
or
cmpb
movq
pop
insl
test
das
pop
or
or
jae
xor
adc
out
imul
adc
adc
repz
dec
add
jns
xor
pop
jge
mov
out
mov
in
paddusw
jae
mov
mov
insb
das
jb
or
lcall
gs
mov
adc
cmp
mov
cmp
and
dec
fcoml
adc
imul
mov
mov
hlt
fsubrs
shlb
cmp
inc
xchg
call
test
scas
dec
es
fcmovu
pop
fisttpl
pop
je
vcvtsd2si
inc
testb
or
cvtpi2ps
repz
mov
xor
pop
addl
daa
sbb
lret
lret
lret
lret
je
or
jle
adc
push
sarw
jbe
es
out
lret
cmp
sub
popa
adcb
cmp
add
mov
xorb
sti
cmpsl
push
movsb
rcll
prefetcht0
inc
test
push
pop
adc
xor
daa
adc
cld
add
xor
pop
sahf
sbb
add
sub
adc
jbe
inc
movsb
sub
fs
mov
cmp
or
pusha
fs
data16
inc
pop
outsb
sub
cmp
pushf
sbb
fwait
xchg
je
sub
pop
xor
and
add
mov
cs
jb
fs
mov
mov
leave
xchg
fdivrl
cmp
push
arpl
xlat
adc
jb
aas
ja
cmp
jae
call
rolb
push
xchg
call
dec
enter
add
adc
cmpsb
xchg
gs
arpl
outsl
inc
lcall
inc
push
imul
cmpsl
mov
mov
insl
loop
iret
aas
popa
arpl
outsl
outsb
gs
lret
mov
arpl
je
mov
lret
imul
stos
outsb
pop
shlb
popa
cmp
arpl
cmp
fs
loopne
loope
shll
loop
jecxz
in
out
and
xor
int
add
pop
sub
sub
rcl
xor
xor
outsl
jp
pop
scas
push
dec
outsb
jg
dec
jbe
jmp
je
add
inc
jmp
inc
push
in
or
jmp
mov
pop
andb
nop
or
mulb
mov
mov
jns
loope
push
push
add
pop
gs
sbb
add
fnstsw
xor
and
jg
fdiv
or
pop
lcall
testb
sub
and
or
fdivr
and
pop
fnsave
imul
ja
lods
cld
negb
cmp
outsl
fsubl
inc
mov
cld
imull
or
sbb
iret
mov
arpl
xor
add
out
sub
cmp
leave
sub
xlat
nop
mov
dec
or
in
movsb
sub
mov
fnstcw
stc
sbb
insl
mov
mov
je
jl
jle
mov
mov
mov
or
and
iret
ret
incl
test
mov
mov
mov
ss
insl
inc
mov
jnp
insl
jecxz
mov
pusha
shlb
leave
adcl
clc
pop
stos
add
cmp
jmp
dec
sbb
add
stos
pop
out
iret
sbb
push
movl
fstpt
push
inc
orb
dec
jg
jne
mov
pop
mov
sbb
fwait
and
inc
loope
sbb
insb
loopne
sub
aas
adc
subb
sbb
xor
xchg
xchg
arpl
sub
jae
insl
bound
movsb
mov
pop
jne
or
popf
insb
or
std
push
jo
icebp
adc
sbb
mov
in
dec
and
sbb
cmpsl
dec
outsb
push
mov
cmp
adc
outsl
pop
push
xor
into
cmp
cmp
mov
arpl
movsb
inc
lcall
add
jae
sub
addb
jle
add
dec
inc
pop
test
xchg
das
xchg
lret
std
cwtl
in
xchg
jg
cld
in
test
cmpsb
imul
cmpsb
imul
or
icebp
mov
sbb
inc
repz
ret
dec
cmp
movsb
jbe
mov
mov
cmp
ja
inc
cmp
jb
test
cmp
add
mov
add
sbb
inc
shrl
or
ja
shll
xor
divb
dec
xlat
xor
cs
insb
mov
xlat
xor
jbe
jb
arpl
shll
outsl
insl
jne
loop
mov
mov
fwait
adcb
mov
jb
push
je
push
push
mov
mov
push
xor
jns
test
mov
mov
inc
out
xchg
pusha
cmpb
pop
mov
and
xor
and
push
out
sbb
sub
inc
sub
adc
adc
notl
add
mov
jmp
loopne
pushf
add
rolb
push
insb
ret
stc
jne
push
push
int3
pop
clc
and
aaa
xchg
xchg
xor
sbb
dec
add
enter
inc
dec
xor
mov
mov
sub
sbb
inc
outsb
jnp
inc
mov
test
and
pop
push
mov
jb
dec
movsb
test
addl
xor
sbb
icebp
lock
shrl
movsb
pop
cmc
jecxz
xchg
dec
mov
pop
cmp
lock
push
adc
rcrl
adc
xor
roll
xor
aam
push
je
repz
or
fs
push
test
in
fdiv
inc
movzbl
stc
adc
clc
idivl
sbb
hlt
push
ja
pushf
andb
push
inc
das
push
mov
cmpl
add
add
lcall
push
dec
jo
fwait
insl
mov
or
insb
lock
popa
pop
repnz
cmc
div
insb
mov
inc
je
add
jo
jne
shll
outsw
adc
jno
xor
icebp
jne
add
sbb
pop
cwtl
xchg
mov
fs
xchg
xchg
xchg
stc
inc
scas
js
dec
iret
outsl
jne
dec
mov
lret
dec
push
dec
inc
and
xchg
or
enter
cmp
push
lods
cmp
les
sbb
fwait
xorb
outsb
pop
mov
xchg
adc
push
je
and
ret
cmpsl
lea
inc
in
or
pop
sbb
jp
stos
push
pop
outsb
ret
adc
movl
add
clc
add
hlt
or
bound
dec
imul
mov
jle
push
int3
cmp
jne
dec
cmp
dec
in
dec
push
sbb
sub
adc
movsl
mov
or
push
sub
sub
fisttps
xchg
adc
lea
xlat
inc
or
or
adc
insb
pop
mov
mov
loope
icebp
xor
stos
stos
cmpsl
call
mov
adc
or
jns
movsl
int3
xor
jae
pop
iret
push
add
mov
outsb
or
inc
lret
or
int
or
cmp
scas
nop
inc
incl
std
jae
fsubrp
sbb
add
xor
jle
arpl
jl
add
lcall
mov
imul
mov
int3
fs
jg
or
sub
dec
lea
add
roll
mov
lcall
aam
lock
or
test
in
out
push
cmpsb
jmp
sbb
jne
or
fildl
ja
add
push
or
dec
dec
inc
gs
dec
fnstcw
add
xchg
sbb
pop
fidivl
cwtl
subb
stos
cmp
rorl
sbb
xor
scas
push
ljmp
dec
add
cs
insb
or
cld
mov
adc
sbb
shll
fisttpl
lea
push
fiaddl
outsl
outsl
push
mov
add
or
clc
test
ret
add
lret
sbb
pushf
xor
mov
dec
dec
pop
sbb
or
ja
sahf
in
and
adc
sub
or
out
and
shll
jo
int3
and
inc
mov
jne
push
cmpsb
imul
cmpsb
imul
pop
xchg
gs
ja
gs
xchg
jo,pn
aaa
aaa
xor
fs
aaa
outsl
pop
insl
cmpsl
or
xor
pop
add
rcrb
mov
clc
add
bound
pop
fwait
xchg
cmpsl
ftst
inc
dec
leave
lret
xor
bswap
lret
mov
sbb
push
outsl
ja
gs
jne
lcall
gs
dec
pop
movsb
cs
call
lods
push
nop
in
loopne
call
js
add
adc
mov
in
push
mov
dec
in
in
lock
shll
xchg
out
xor
call
dec
leave
lret
cmp
clc
int
cld
scas
or
lea
mov
test
mov
scas
xchg
cmp
or
mov
hlt
ljmp
aaa
testb
sub
mov
fsubrs
call
adc
test
xor
in
loope
push
pushf
add
adc
sbb
loopne
repnz
dec
mov
mov
lret
jbe
fimull
test
cmp
pop
sbb
pop
outsb
mov
push
jmp
mov
lea
or
in
mov
inc
xchg
add
push
xchg
push
xchg
add
jo
imul
mov
int
add
pushf
and
or
insl
mov
or
mov
movl
mov
xchg
insl
cmpsb
inc
popa
cmpsl
test
imul
in
rorb
lcall
mov
call
in
pop
in
es
outsb
mov
inc
out
ljmp
sbb
lock
mov
test
mov
clc
out
movl
das
int
into
iret
call
popa
push
or
nop
nop
mov
mov
fistl
add
mulb
rol
call
outsb
iret
adc
cwtl
push
push
cwtl
and
sub
mov
lea
mov
pop
xchg
lret
data16
dec
mov
mov
push
int3
loope,pn
or
mov
pop
sarl
testl
arpl
bnd
lock
icebp
or
adc
popf
inc
dec
inc
and
push
and
shll
cmpl
in
sahf
cli
mov
mov
fadd
adc
ficomps
loopne
jg
add
xchg
scas
dec
and
jns
fs
dec
and
push
lds
mov
lea
mov
cli
mov
rcl
fmuls
nop
outsl
xchg
fld1
call
fcoms
jp
adc
outsl
xchg
sub
aas
lcall
xor
mov
pushf
or
sti
les
jo
mov
fcomps
int
into
sbb
nop
and
popf
int3
flds
jp
cltd
cwtl
fsubl
mov
sub
and
pop
pop
push
and
and
rorl
xchg
cmpsb
xchg
pop
sbb
es
add
cmp
ds
xor
mov
adc
and
inc
int3
outsb
add
and
mov
popa
xchg
sti
sbbl
add
outsl
test
pop
jge
std
loopne
cmp
push
popf
cmp
push
outsb
imul
push
test
std
mov
jmp
mov
adc
inc
push
mov
adc
call
inc
outsl
stos
pop
push
aaa
fwait
jnp
push
call
add
mov
fisubrl
adc
cmpsb
inc
dec
pop
cmpsl
push
xor
stos
pop
add
das
push
sbb
add
mov
dec
pusha
mov
pusha
xchg
pop
fisttpl
rorb
popa
loopne
nop
and
sbb
push
ja
inc
adc
popf
add
mov
mov
iret
jnp
nop
xor
xor
adc
xor
sbb
test
push
sbb
sub
ja
je
nop
in
pop
stos
jmp
lar
cmp
out
push
add
push
movsb
lcall
mov
sbb
incl
mull
jne
mov
dec
add
call
dec
adc
push
ljmp
popl
mov
call
fs
mov
and
ss
push
dec
push
push
mov
jns
pop
jmp
push
fnsave
add
sbb
cmp
cmp
inc
xor
push
add
and
push
pop
imul
faddl
push
sub
pop
push
enter
push
jo
loope
add
push
rcll
enter
push
inc
mov
push
mov
fdiv
ljmp
mov
cmp
rorb
in
shl
xchg
call
push
xor
xchg
cwtl
sub
mov
ds
js
jbe
push
adc
lds
sub
fsts
jne
test
mov
sbb
data16
mov
shll
cmp
pusha
mov
xchg
enter
in
nop
cmp
movsb
fst
adc
cmp
push
cmpsb
mov
cmp
mov
cmp
imull
pop
add
or
push
jl
cmc
mov
hlt
or
add
jmp
xchg
xor
push
adc
fisubrs
sub
pusha
mov
cmpsb
movsl
dec
aad
xor
xchg
aaa
fldt
pop
inc
or
sub
loop
and
mov
outsl
mov
fisubs
dec
rcrl
jmp
clc
adc
ss
out
inc
sbb
adc
adc
xor
sbb
jp
fs
cmpsl
aam
add
js
or
mov
inc
inc
push
jle
movsb
push
lea
lret
push
jbe
pushf
mov
daa
add
jl
and
fnstsw
sub
push
stc
cmp
adc
inc
hlt
je
lea
xor
ja
jmp
lcall
rcrb
push
jmp
sub
je
dec
dec
je
add
sbb
jmp
imul
mov
hlt
xlat
lock
ror
call
fisttpll
or
ret
jne
inc
lret
inc
add
das
pop
pop
or
je
pop
pop
mov
dec
aad
mov
push
stos
fadds
lea
jae
jge
mov
push
je
rclb
mov
push
add
popf
sbb
je
xchg
and
mov
jmp
and
sbbb
mov
mov
in
adc
es
mov
mov
and
adc
in
frstor
test
inc
out
jno
and
dec
hlt
and
xchg
mov
cmp
dec
and
and
pop
inc
loopne
dec
sti
mov
jbe
daa
movsb
dec
in
in
inc
add
inc
js
and
adc
inc
add
cmp
in
pop
xchg
push
inc
pop
inc
outsb
xchg
gs
andb
addr16
push
push
inc
adc
daa
imul
shr
pop
add
adc
mov
shll
adc
pop
int3
add
push
or
or
mov
subl
inc
fsubr
push
pop
or
cmp
sub
push
jl
cli
insb
cmpsl
mov
push
sbb
aas
test
push
cmp
call
sarl
cmp
pop
sub
stos
xlat
mov
adc
inc
fwait
mov
dec
jmp
and
push
shll
or
subl
imull
jo
mov
push
or
divl
fmuls
push
shrb
xchg
lret
test
dec
lock
repz
pop
cs
cmp
std
cmp
aaa
std
call
sbb
arpl
mov
pushf
mov
insl
stos
sub
mov
mov
in
xor
mov
adc
cmpl
adc
outsl
push
enter
popa
mov
test
sub
sub
scas
add
push
push
pop
add
add
pop
mov
jbe
pop
cmpsb
sub
outsb
into
push
mov
mov
je
xor
sub
mov
mov
cmp
cmp
enter
mov
subb
pop
lods
pop
cmp
std
xchg
cmpl
inc
cmp
cmc
dec
ja
out
jb
insb
sti
jge
jo
add
jle
jb
dec
or
imul
sub
fcmovne
push
mov
jge
mov
or
fisttps
sub
dec
jmp
inc
dec
sbb
add
ss
add
pop
and
cmp
dec
or
shll
add
push
mov
add
add
insl
aad
mov
fimull
in
clc
jno
mov
dec
sbb
das
lods
fcompl
pop
mov
add
jnp
mov
cmpl
mov
jle
mov
lea
shr
jle
movzwl
shrl
push
mov
add
outsl
call
test
je
cmp
mov
shr
add
adc
lock
jae
in
pop
or
sub
imul
mov
pop
or
and
les
lea
mov
enter
les
adc
dec
add
insl
imul
push
jno
jae
ss
lds
push
jno
push
aam
dec
je
ja
mov
adc
loop
inc
adc
iret
xchg
cmp
in
sbb
lea
pop
adc
or
mov
pushl
add
push
scas
xchg
pop
les
sub
lock
inc
push
roll
cmpsl
mov
dec
push
push
outsb
lret
data16
jmp
jle
sbb
lods
or
or
push
mov
call
mov
inc
aaa
pushl
lcall
push
jecxz
jne
add
push
jmp
nop
xchg
adc
push
and
sub
xor
out
popa
cltd
cld
mov
dec
lea
fcoms
jge
adc
ret
jne
adc
xchg
negl
pop
lea
testb
je
pop
inc
sub
sub
rorb
cmp
or
or
enter
pop
mov
mov
sbb
add
and
cltd
lods
jno
data16
adc
mov
mov
loopne
pop
aam
xor
jle
mov
push
sub
mov
cmp
cmp
lds
je
adc
add
mov
and
ja
sub
gs
gs
xchg
jo
outsl
jb
jb
xchg
gs
cs
jnp
cmpsb
imul
mov
sub
rcll
jl
lock
cmp
cmp
das
or
xlat
stos
jb
adc
mov
cmp
jbe
xchg
shrb
or
fidivl
xorb
je
addl
or
cmp
xchg
add
sahf
adc
rolb
mov
inc
rorb
or
mov
aas
cmp
ret
ja
push
jae
push
je
push
or
loopne
mov
in
lock
push
ja
jbe
push
movsl
clc
les
add
mov
or
out
jne
and
jno
mov
fnstcw
jl
mov
les
sub
push
adc
js
sbb
and
add
mov
pop
call
xor
mov
jo
push
or
sbb
fists
les
xor
es
orb
or
leave
sub
or
push
mov
add
sub
mov
js
mov
outsb
push
fsubrl
push
pushf
mov
mov
sub
mov
pop
stos
and
jne
fcoms
sub
cmp
call
ret
push
mov
daa
cli
and
mov
add
and
fisttpll
ljmp
add
mov
xchg
or
pop
push
mov
pop
stos
push
push
sbb
push
addr16
pop
lar
sub
jmp
mov
out
sbb
or
inc
xorl
sbb
std
adc
sbb
sbbb
or
pop
jmp
rolb
sbb
das
sub
mov
idivb
adcb
add
or
adcl
add
mov
push
jmp
mov
out
jmp
pusha
adc
fs
out
or
fwait
jmp
pop
loopne
jae
rorb
or
out
in
jne
popf
in
roll
popa
or
sub
gs
xchg
flds
xor
dec
xchg
gs
jns
cs
sbb
cmp
fdivr
fisttpl
pop
xor
jge
out
or
add
jmp
mov
sbb
xlat
xchg
sub
xlat
add
push
je
loopne
cmc
adc
es
andl
adc
movsb
insl
fwait
imul
call
ds
and
xor
mov
and
in
pop
call
sti
js
inc
lds
push
and
movsb
scas
pop
sbb
movb
sbbb
into
add
or
aad
inc
lret
mov
dec
gs
insb
sbb
outsl
jb
jb
cs
js
gs
mov
jnp
cmp
xchg
enter
or
leave
std
scas
push
lock
out
sbb
call
stc
push
xlat
test
push
mov
enter
mov
fwait
mov
imul
pusha
aaa
jmp
adc
pop
arpl
xchg
test
call
jmp
movsl
les
add
test
xor
shlb
lcall
mov
fbstp
mov
nop
xchg
rol
or
mov
sbbl
hlt
cmp
sahf
xor
push
xor
jae
or
pop
pop
sub
pop
nop
xchg
out
xor
cli
loop
cmp
adc
jmp
or
jae
sub
mov
or
outsb
stos
lods
mov
xor
ret
pop
mov
mov
loopne
add
sahf
and
lock
in
call
loopne
shlb
or
xchg
fstl
add
lods
adc
pushf
xor
lret
add
daa
jo
and
add
fs
insl
xchg
mov
js
adc
lret
rolb
sub
push
gs
push
xor
inc
add
pop
push
loope
push
jb
arpl
jae
call
fimull
mov
gs
outsl
outsl
insb
push
xor
idivl
push
add
jb
jne
insb
and
ss
adc
jo
adc
mov
mov
notb
inc
dec
gs
xchg
cmovbe
test
fnsave
arpl
push
imul
push
jnp
inc
add
dec
outsl
fs
testb
insb
pop
idiv
add
fs
imul
jg
xlat
fcmovnbe
fstl
xchg
add
fs
push
je
xchg
in
in
imul
or
and
mov
jb
cmp
fcoms
pop
dec
sub
rorb
lods
mov
push
bound
mov
nop
imul
outsl
jb
psadbw
jbe
and
push
push
push
gs
xchg
insl
jmp
outsl
outsb
push
sub
imul
dec
sbb
push
adc
mov
xor
addr16
ja
push
in
add
mov
lods
in
mov
push
push
push
jne
into
dec
sub
je
lret
fistpl
punpcklbw
das
jo
test
push
add
gs
inc
pop
jae
pusha
push
mov
outsb
test
and
cmc
or
xor
popa
xchg
int
sbb
sub
jne
jb
or
popf
inc
cld
cmp
sti
xor
xchg
xor
inc
add
jns
filds
arpl
jne
sbb
cmp
imul
jb
jge
lods
in
aad
add
and
push
xchg
bound
sub
cltd
test
filds
test
lret
and
sub
mov
xor
push
jae
insl
lods
mov
fstps
jae
add
add
arpl
ficompl
jg
push
outsb
push
icebp
pmaxsw
inc
push
dec
inc
and
lods
add
jo
je
aaa
orl
test
ret
insb
popa
push
outsb
or
sbb
jb
fs
cltd
cs
addr16
add
inc
mov
std
inc
pop
pop
and
jmp
push
shll
fstl
clc
fiadds
lock
jmp
mov
mov
std
and
push
push
mov
fs
push
push
dec
pop
or
adc
cli
add
jns
inc
jo
out
in
movl
pop
sub
cmp
jge
sti
ljmp
and
mov
inc
and
mov
inc
inc
dec
mov
add
adc
aam
xor
xchg
pop
jecxz
sub
jne
nop
sbb
push
movsb
jne
pop
pop
dec
in
sub
add
repnz
outsl
jecxz
mov
jge
mov
adc
and
addr16
inc
decb
inc
outsb
jne
inc
inc
push
inc
push
xchg
push
push
dec
inc
pop
cltd
add
xlat
pop
call
ljmp
pop
push
jb
mov
lods
mov
mov
insb
xchg
xor
pop
and
add
pop
jecxz
loopne
adc
js
pushw
daa
sub
addr16
sub
push
add
ficoml
jge
outsb
insb
jns
ficoms
jae
aas
or
mov
cmp
mov
fldt
mov
fnstcw
leave
inc
pop
push
add
xchg
loope
dec
aaa
jbe
jae
nopl
sbb
enter
xchg
ja
xor
mov
lds
out
mov
lds
adc
outsb
sub
or
pop
stc
fcoms
loope
pop
jbe
arpl
pop
iret
add
xor
jnp
aam
sti
insb
ja
dec
cmp
sub
xor
cmpb
daa
imul
dec
insl
mov
scas
xchg
sbb
pop
mov
mov
add
push
push
daa
fildll
and
mov
jo
xor
push
add
sub
lcall
add
inc
dec
push
dec
and
sub
popa
sbb
bts
sub
repz
jmp
pop
or
mov
leave
mov
movsl
mov
push
pushf
or
je
or
inc
stc
mov
xchg
movsb
dec
add
sbb
jne
mov
and
xor
rclb
mov
mov
pop
movsb
int
pop
stos
aad
lock
movsb
and
add
lods
push
pminsw
add
pusha
and
incl
mov
leave
mov
jne
jb
push
push
mov
cs
loop
mov
decl
std
loope
mov
mov
xchg
data16
filds
mov
sbb
jae
add
incl
fs
cmpsl
outsb
dec
lret
mov
push
mov
sbb
adc
inc
loope
cld
pop
rorb
jg
insb
lret
dec
jge
and
stc
mov
call
es
sub
lods
xor
jmp
jl
push
cltd
loop
imull
dec
adc
shrl
sub
inc
sbb
mov
ljmp
iret
leave
xorb
shrl
pop
js
xor
adc
pop
jl
hlt
mov
ljmp
decl
or
mov
cmp
pop
cmpsb
cmp
idivb
loopne
fstp
mov
iret
xorl
fldcw
mov
jb
jg
stos
pop
daa
icebp
jne
sti
jmp
dec
sbb
dec
stos
jp
inc
and
sbb
pop
test
add
fmul
in
mov
add
orl
and
mov
in
leave
call
mov
pop
daa
cmp
mov
les
or
sub
aas
jl
addl
addl
fwait
jne
and
pop
in
out
std
daa
pop
divb
jnp
mov
pop
pcmpeqb
test
pop
testb
jecxz
cld
mov
fwait
sbb
or
pop
lahf
mov
pop
jb
adc
pop
testb
mov
decl
test
pop
mov
decb
imul
loope
das
or
cs
push
pop
out
mov
imul
jnp
push
pop
addr16
jle
or
fadds
jg
pop
sub
jnp
loope
setae
cmp
aam
cmpl
push
xchg
pop
ja
mov
fisubs
pand
sub
out
lock
mov
out
pop
int
xchg
mov
and
jecxz
daa
fwait
add
sti
fildll
cmp
addr16
int
add
xchg
std
sbb
test
daa
or
jnp
in
dec
sbb
mov
scas
mov
or
mov
adc
js
sbb
mov
mov
repz
mov
sub
mov
jnp
sub
cmpsl
das
enter
loope
js
aaa
inc
pop
jnp
fs
lock
jo
push
pop
cmp
jnp
testl
popf
pop
fbstp
fsubp
and
fidivrs
imul
mov
push
ret
dec
das
dec
out
lock
aaa
pop
aaa
sbb
mov
xchg
loope
and
cmp
jg
ljmp
movsb
shl
or
aas
pusha
rcr
pop
ror
cmc
sbb
rcr
rcr
inc
sub
rorb
fiaddl
push
loope
aam
push
xchg
pushf
pop
and
xchg
lahf
je
jge
inc
mov
ror
jg
mov
sub
and
xchg
shl
push
movzbl
push
rol
push
add
push
adc
aam
fsin
or
pop
pusha
call
ss
jl
testb
mov
pop
or
mov
in
mov
repz
and
rcll
pop
mov
clc
sahf
push
pushf
push
mov
jb
mov
pusha
and
idiv
mov
das
cmc
mov
pusha
push
add
fists
add
mov
and
leave
add
pop
mov
idiv
fisttps
mov
xchg
add
pop
jae
fldt
cmpsb
lret
or
and
rcl
mov
pusha
not
not
call
and
mov
pop
imul
gs
push
fwait
jnp
ljmp
add
or
or
and
outsl
fldl
add
jecxz
sbb
aaa
stos
jnp
loop
mov
push
mov
sbb
add
outsb
xor
or
dec
imul
arpl
push
add
fiaddl
mov
aad
pop
popa
imul
pusha
adc
cmp
test
fucomp
push
xlat
shr
cwtl
push
mov
cmp
pusha
add
call
jne
mov
inc
cmp
cmc
mov
popf
cmp
mov
adc
not
pop
call
cs
cmc
mov
and
push
imul
or
cmpsw
or
push
loope
ja
mov
xor
pusha
xor
inc
and
mov
in
mov
rol
jmp
clc
xchg
rcl
mov
jmp
mov
dec
inc
adc
push
jmp
sub
das
shr
adc
adc
add
pop
pop
mov
mov
sbb
sub
xor
jle
idiv
pushf
push
dec
test
test
add
sar
fistl
sbb
sub
popf
push
cli
inc
xor
clc
cld
mov
lcall
ss
ja
aaa
mov
adc
shr
mov
shr
inc
push
fnstenv
in
xlat
lea
lcall
xlat
sub
xor
ror
das
lea
rcr
mov
jmp
movl
add
or
fdivrl
cld
or
ljmp
enter
mov
incl
mov
call
rclb
mov
dec
fisttpl
ret
call
movsb
dec
out
fs
mov
push
mov
add
sti
shlb
into
add
and
leave
pushf
mov
xchg
adcb
fnsave
push
aas
lea
out
adc
pop
or
mov
out
inc
sub
ds
shl
push
in
pusha
arpl
lods
test
ss
xchg
inc
test
out
shll
jo
mull
ljmp
out
inc
pop
inc
stos
fcmove
jmp
sub
push
mov
sarl
lahf
ud0
pusha
lods
clc
add
mov
data16
fldt
add
cld
cld
inc
xchg
mov
test
jne
cld
lds
out
xchg
in
roll
push
lods
icebp
out
cmp
pop
popf
mov
jmp
mov
push
adc
xchg
out
mov
xchg
loopne
bound
into
insl
fisttps
iret
call
sub
andb
mov
aaa
imul
iret
adc
jmp
ljmp
jmp
mov
cli
xor
aad
decb
jbe
cwtl
mov
sbb
cmp
loop
clc
sub
call
shll
enter
adc
mov
push
mov
sbb
push
cld
ds
adc
mov
push
sbb
insl
or
into
xchg
inc
sbb
inc
std
cs
cmp
adc
sub
jge
jg
clc
cmc
out
icebp
pop
inc
dec
shrb
pop
mov
out
mov
lcall
mov
sarl
repz
lcall
and
bound
bswap
shl
leave
lds
fstpl
sti
mov
cmc
pushf
jecxz
call
pop
test
imulb
rorl
addr16
mov
stc
add
push
rorl
popf
mov
gs
sbb
mov
loope
loope
mov
shlb
cmovb
dec
sahf
pushf
dec
fidivrl
sub
cs
ljmp
mov
and
adc
jbe
call
imul
push
sbb
inc
xchg
or
fidivs
ret
sub
adc
int3
push
rcrb
mov
lahf
mov
pop
push
popa
push
pusha
sub
push
mov
ja
fcoms
cld
mov
clc
sub
fs
and
jge
stc
xlat
or
out
dec
pop
insl
call
or
cmp
or
cmpsl
aas
xor
push
cmp
push
scas
add
mov
out
mov
add
jecxz
in
clc
setbe
xor
pop
and
out
std
das
cld
rorb
mov
pop
daa
inc
ror
shr
cmp
lret
push
pop
and
fistpl
pop
pushf
setge
or
mov
mov
xorb
dec
cwtl
and
jg
insl
dec
cwtl
outsb
mov
insb
cmp
mov
cmp
call
jnp
xor
add
mov
inc
clc
pop
pushf
push
dec
jo
push
cld
iret
push
mov
push
mov
push
jmp
test
outsl
xchg
mov
and
cwtl
outsb
xor
sbb
sbb
add
orl
add
lcall
jecxz
stc
cs
xchg
sbb
lcall
jle
pop
jmp
nop
jl
pusha
sbb
pushf
test
test
sti
popa
ss
push
add
addl
mov
push
push
or
pop
sub
imul
cs
nop
cmp
push
test
jl
in
and
fldcw
push
add
ret
shll
repnz
push
shl
leave
dec
rcl
mov
les
nop
adc
mov
rorl
inc
adc
fsubr
lret
aam
lds
mov
clc
sbb
jo
mov
lret
fimull
or
test
push
mov
icebp
fisttpll
and
imul
inc
pusha
xlat
or
test
and
push
pushf
add
push
call
das
rcrb
push
and
mov
ss
seta
push
mov
shrb
and
leave
mov
rol
outsb
loope
negl
or
enter
cmp
rcrl
inc
push
or
cmp
jnp
rol
sub
test
out
mov
xchg
xor
sbb
shlb
ret
aam
adc
rcll
sub
fdivrs
aaa
ret
xor
inc
and
sub
rclb
out
call
add
fld
mov
adc
div
pop
mov
lret
mov
fs
xor
add
out
cli
fsubs
push
int3
or
repnz
in
call
push
fcomp
mov
mov
mov
test
push
call
jmp
or
rdtsc
dec
cld
fidivs
pop
ret
call
rorb
movsl
jmp
aaa
xor
adc
pop
mov
sar
rorl
leave
stc
mov
pop
add
dec
in
lret
pop
mov
xor
shl
lock
out
rclb
lret
or
sbb
xor
or
mov
sysret
xchg
cli
arpl
test
setae
dec
cs
pushf
pop
push
push
cs
inc
scas
dec
vpmacssdqh
cmp
add
das
jmp
shll
cwtl
pop
movsl
add
in
loopne
cld
pop
lock
pusha
mov
jb
dec
stos
in
sbb
cmpsl
fistpl
mov
lcall
loope
sti
mov
ret
shr
push
or
notl
ljmp
jp
inc
mov
in
andl
lock
test
sbb
cmpsb
inc
ret
in
into
cmp
loope
or
mov
jo
dec
mov
jmp
sti
addr16
dec
out
xchg
sub
and
cmp
xchg
jmp
in
push
stos
lea
call
jle
call
mov
cld
rorl
push
xor
inc
mov
call
imul
in
inc
cmc
daa
pop
pop
inc
inc
xor
sbb
test
sub
xchg
push
jle
inc
ret
xchg
cli
outsb
cltd
sbb
or
sub
pop
in
add
mov
push
fucomp
mov
pushf
mov
insb
mov
in
jmp
pushf
cmpsl
sahf
popf
push
pop
stos
mov
pop
dec
shr
xor
sub
test
stos
mov
or
sbb
add
scas
cld
enter
nop
push
add
out
sahf
scas
fs
dec
loope
and
add
imul
mov
sub
push
or
mov
cmpsb
fnstsw
loop
sbb
add
shll
loop
dec
pop
xchg
xchg
pop
sbb
icebp
adcl
mov
test
cmp
pop
lcall
inc
push
mov
jl
lods
repz
pusha
adc
pusha
fsubrp
cmc
and
aam
push
lock
and
outsb
inc
push
cmc
mov
push
pusha
andb
pushf
cmp
pushf
stos
mov
ja
loopne
add
fstpl
repnz
push
or
icebp
mov
and
pop
popa
sti
shlb
push
jne
push
xchg
jecxz
faddl
xor
pop
rcll
call
mov
in
cli
mov
gs
cmpsb
fsubr
xlat
ret
pop
notb
cmpsb
and
out
lea
and
fsts
loopne
not
fsubrl
jle
xchg
test
push
pop
fwait
xorl
xor
sub
xor
push
fs
in
fisubrs
pop
push
cld
jne
call
push
and
loope
mov
mov
xchg
push
aam
cmp
popa
jp
sub
push
shrw
pop
mov
pushf
mov
call
ret
mov
jl
mov
outsl
clc
je
sub
icebp
cmp
cmp
mov
jno
ljmp
pop
mov
idivl
test
mov
mov
sbbl
dec
push
pusha
push
adc
xchg
sahf
sbb
pop
inc
repnz
mov
xor
dec
mov
daa
shlb
dec
out
icebp
mov
pop
mov
push
cmpsb
out
dec
push
into
xor
push
sbb
out
imull
call
mov
xor
call
cmp
stos
in
orb
rorb
insl
mov
cmp
add
lret
xor
cmp
or
cs
lods
or
rcl
loopne
ljmp
xchg
or
xchg
inc
insb
lock
jnp
in
test
pushf
clc
lods
fs
icebp
mov
scas
dec
cmpsb
inc
hlt
or
aam
test
mov
lret
push
cmc
push
pop
stos
fstpt
mov
xlat
lods
push
scas
cmp
lea
aas
push
lret
fcomps
jbe
sti
sub
pop
and
divb
xor
testb
cwtl
cwtl
mov
lahf
dec
lock
jmp
ljmp
mov
test
icebp
clc
in
call
pop
jmp
xchg
std
cld
fstl
call
adc
std
sub
pop
inc
mov
push
lods
test
mov
mov
loopne
jne
insb
pushf
pop
aad
pop
aad
or
add
loope
cwtl
std
lea
fdivr
push
test
push
sbb
mov
inc
cwtl
jecxz
ret
mov
les
insb
fisubrs
jne
add
or
push
jmp
addr16
aam
dec
loopne
pop
pop
add
pop
sbb
cwtl
lcall
add
int
sub
sub
and
fsubrl
push
pop
cmp
pop
add
push
cld
jo
ds
pop
rclb
rorb
aas
aad
xor
sahf
sub
call
push
mov
andl
cli
out
dec
mov
adc
or
lret
outsb
pop
mov
test
frstor
hlt
mov
adc
int3
fisubrl
pop
jecxz
sahf
mov
pop
xor
adc
icebp
or
mov
and
arpl
cmp
int
jbe
xor
jg
sub
dec
sub
jb
or
sub
push
and
call
out
jo
cmp
ret
jne
xor
mov
test
push
pop
je
sbbl
or
ja
or
cld
loop
sbb
repnz
cmc
sti
call
or
ficompl
into
sub
push
fcmovnb
in
repz
mov
dec
fbstp
push
xor
fisubl
pop
fisubl
loopne
push
cmc
lods
rcrb
sub
outsb
test
out
dec
fmull
push
fs
and
lods
pop
jp
int3
mov
and
loop
dec
in
cmpsl
or
mov
sbb
pusha
and
frstor
push
sub
adc
jmp
push
jle
jecxz
jae
out
sbb
add
ja
cs
inc
sti
call
dec
mov
pop
adc
lea
shl
sub
nop
sti
mov
ret
jge
daa
pushf
mov
and
ficompl
cld
je
shll
ljmp
inc
imul
pop
cmc
push
mov
pop
out
adc
xor
cld
push
cmp
pop
xchg
inc
loop
das
or
ficoml
iret
mov
jbe
sti
cmp
push
call
in
aas
dec
jbe
outsb
mov
adc
pop
xchg
subl
lock
and
sub
xor
notl
dec
pushf
xchg
push
add
mov
fldl
insb
std
dec
leave
pop
fimuls
int
push
sbb
or
push
addr16
mov
xchg
sub
lret
or
mov
push
fbstp
movl
ret
repz
outsl
incl
in
loopne
int
fadds
pop
push
shl
shrd
push
outsb
xlat
xlat
idivl
icebp
add
loope
sbb
adc
test
push
in
fdivs
lret
cmpsb
mov
aaa
jns
dec
add
lea
xor
icebp
setg
clc
add
or
popa
cmc
push
push
mov
test
in
cli
adc
dec
sbb
dec
sbb
ret
and
sbb
cmp
or
or
or
les
inc
lea
pushf
fs
pusha
jns
add
and
mov
inc
ljmp
fisubs
call
in
sub
imul
adc
and
push
subb
aam
pusha
ss
mov
and
dec
outsb
pop
call
test
arpl
repz
pushf
das
adc
je
or
xchg
or
test
push
and
jnp,pn
loopne
idivb
addr16
mov
or
push
fimull
xchg
dec
leave
rcr
add
stc
fiadds
in
push
cmpsl
rcrl
pusha
adc
stc
outsl
pop
lods
jle
clc
push
imul
call
jp
cld
lcall
sub
shlb
cltd
jl
repnz
or
add
mov
and
fstpt
ja
cmc
subb
push
jmp
sub
jmp
adc
ds
dec
push
rolb
sbb
pop
add
sbb
outsl
loop
hlt
icebp
push
fnstenv
push
call
aaa
out
int
adc
push
jle
jl
mov
sub
es
lods
outsb
test
mov
xchg
test
jmp
pop
sub
xadd
jo
mulb
rcr
push
out
inc
stc
rorl
push
push
jge
sbb
mov
dec
daa
mov
imul
jle
dec
loopne
stc
jne
xchg
and
test
and
pusha
neg
fs
scas
push
add
test
push
std
popa
push
lock
inc
mov
das
inc
out
clc
mov
jge
lods
add
ljmp
aaa
xchg
add
aaa
sub
jmp
mov
test
int3
and
clc
sbb
xchg
xlat
pop
or
xchg
sti
push
push
loop
add
fnsave
xor
daa
cmp
pop
mov
in
fs
cmpsl
pop
inc
fiaddl
decl
data16
cwtl
add
add
jp
push
in
push
add
push
std
out
std
mov
cmp
icebp
and
push
cmp
cmpsb
pusha
xor
fnsave
mov
cmc
push
les
maxps
pcmpgtd
divb
out
cli
loope
jmp
add
adc
je
inc
dec
das
icebp
ljmp
incl
sbb
cltd
lahf
gs
push
dec
inc
leave
add
mov
in
xor
xor
std
movsb
inc
call
ds
nop
in
shll
insl
pop
sahf
incl
fstpt
in
hlt
stos
adc
mov
jo
sub
jg
inc
and
push
push
popf
push
cmc
jno
popf
mov
or
outsl
fimuls
std
jnp
in
ds
and
cmp
or
addr16
je,pt
fsts
inc
dec
dec
sti
lcall
sahf
add
jp
dec
aaa
outsl
mov
icebp
roll
push
cltd
loope
push
adc
mov
cmpsl
adc
sub
aaa
jae
jnp
inc
and
mov
jle
sti
test
adc
adc
dec
cltd
fwait
lea
inc
jmp
into
adc
int
ret
mov
sbb
mov
push
cmp
aam
mov
pop
shlb
decl
incb
pop
inc
aam
mov
pop
fisubrl
xchg
test
sub
adc
push
jno
and
pop
adc
filds
and
fldl
orl
xor
inc
xlat
push
xchg
inc
imul
lret
pushf
and
rcrl
mov
nop
xor
mov
int
mov
and
test
jmp
rol
pushf
stc
sub
jo
dec
xor
or
out
dec
inc
xor
mov
ljmp
cltd
ljmp
mov
mov
in
push
inc
scas
xchg
mov
popa
xor
outsl
cmc
call
or
roll
aam
std
cmp
add
pop
push
aaa
fistpll
repz
sahf
in
pop
add
mov
push
or
decl
mov
mov
test
dec
lods
sahf
push
mov
push
sarb
in
cmpsb
test
pop
pop
adc
out
pop
add
dec
push
and
std
repz
idiv
lcall
sti
ret
jecxz
jmp
mov
movsb
xor
mov
stos
arpl
out
fistl
call
mov
jb
mov
pusha
ljmp
cwtl
pop
xchg
or
into
shrl
das
icebp
mov
push
ljmp
adc
and
mov
and
aaa
add
in
sahf
mov
out
sub
pushl
push
adc
push
outsb
pop
movsb
inc
lcall
and
jne
fnstsw
mov
cmpsl
lret
adc
dec
clc
pushl
popf
jae
outsl
jge
cmp
add
mov
or
or
negl
mov
mov
pop
rcll
cltd
mov
loope
jg
jno
jne
imul
test
pop
adc
add
clc
or
sub
out
rcrb
outsb
insb
bound
xor
sbb
push
stos
pop
ljmp
xor
imul
lods
scas
gs
jecxz
mov
std
pop
mov
jnp
or
cmp
test
mov
lea
lock
insl
mov
lret
mov
insb
lock
inc
comiss
stc
cltd
popa
in
or
mov
mov
das
and
push
mov
jmp
ljmp
out
stos
mov
fdivs
les
and
jmp
mov
jns
and
das
pop
mov
out
in
or
js
lcall
mov
pop
insl
jae
push
lret
pop
add
test
imul
clc
push
incl
fcompl
mov
shr
call
and
pop
or
or
daa
sub
les
dec
incl
movsl
pop
mov
stc
fs
int
jno
inc
jmp
push
insl
mov
jns
or
cmc
or
sub
or
pop
imul
inc
or
sbb
in
mov
inc
sbb
mov
xchg
mov
mov
xchg
lock
pop
aas
ss
ret
dec
sub
pusha
jle
pushf
mov
inc
inc
fildll
cwtl
dec
cltd
mov
sbbl
jmp
cmpsl
iret
or
icebp
negl
dec
fucom
or
mov
fnstcw
inc
lcall
push
sti
insl
fldenv
addr16
jb
or
sbb
mov
adc
jbe
fildll
std
pushl
das
push
imulb
add
mov
adc
js
inc
sbb
push
cmp
icebp
jmp
mov
test
cmc
inc
adc
adc
sub
lock
cs
mov
jle
cli
mov
jle
jmp
fistpll
jge
mov
sbb
loop
fs
mov
jp
pushl
jmp
dec
jns
or
xlat
add
cmp
sub
mov
je
test
cmp
mov
out
push
pop
test
sbb
pop
mov
jo
ljmp
cmp
jae
push
in
cli
sub
adc
jns
and
outsb
scas
inc
test
negb
in
clc
jg
fstl
test
out
scas
mov
jae
jp
std
ffreep
push
scas
lcall
scas
imul
xchg
popf
xchg
add
jp
inc
test
jb
mov
repz
and
insl
lahf
xor
in
js
cmp
xchg
stos
xor
xor
mov
mov
popf
jg
js
repnz
add
dec
into
mov
fsub
pop
jp
sti
add
cld
sahf
call
xor
pop
mov
inc
mov
in
stos
inc
aas
in
or
push
cmp
shll
jle
push
xor
das
mov
movsl
jno
iret
mov
jns
fdivrs
out
mov
jo
pushf
push
push
jb
push
pushf
pop
sub
pushf
sahf
pushf
xor
andl
sbb
sub
int
pushf
sub
mov
pushf
inc
stos
lock
push
sbb
mov
jp
fsub
mov
mov
outsl
xchg
sub
mov
and
xchg
in
dec
mov
aaa
popa
imul
push
and
repnz
iret
and
fdivrp
push
and
dec
scas
roll
push
cmp
sbb
push
repnz
mov
or
pusha
mov
jmp
jg
mov
pusha
loop
lahf
out
fwait
rorl
mov
xor
jg
sti
in
loopne
das
outsl
fdivl
scas
cmp
out
rolb
cmpsb
nop
stos
call
xchg
mov
xor
fbld
pop
stc
dec
xchg
cmpsl
clc
push
int3
mov
sbb
adc
je
aas
scas
sbb
dec
pshufw
dec
lret
mov
lods
mov
mov
jnp
imul
aad
out
clc
sbb
adc
sarl
outsl
loope
push
clc
std
cmpsb
cli
pushl
sbb
clc
jp
sahf
and
mov
xlat
stc
cld
jge
fsubrp
xchg
out
jbe
cld
xlat
imul
fdivr
sbb
jmp
pop
cli
call
mov
mov
sti
xchg
cmp
dec
fidivrl
lcall
pop
inc
cmc
cltd
jns
xchg
enter
mov
inc
in
pop
jmp
sbb
clc
call
fisttpl
pop
jbe
inc
sub
sbb
add
ds
outsb
sub
mov
jno
aas
mov
repnz
jmp
das
popf
aad
xchg
cltd
lea
mov
or
fdivrs
sbb
push
lret
mov
das
roll
cmp
pop
lods
js
xor
jmp
or
jecxz
and
mov
out
cwtl
aad
jl
push
sub
loopne
cli
pusha
sahf
pushf
cwtl
pop
in
shr
data16
out
mov
jb
lret
sbb
jg
jg
into
dec
pop
clc
mov
cltd
mov
add
or
test
cmp
aam
fs
divb
and
push
imul
dec
out
repnz
lods
pop
call
adc
jo
mov
push
lahf
int3
inc
sbb
loope
cmpb
mov
xchg
outsl
lds
test
and
mov
movsb
enter
sub
push
lods
push
sub
mov
fildll
sub
xchg
or
je
dec
xchg
inc
lahf
push
rcrb
js
incl
sbb
sahf
or
idivb
fcomip
in
test
jmp
cli
mov
add
sub
aam
cli
jo
mov
pop
test
inc
xor
subb
in
cmp
popf
stos
add
repz
xrelease
jns
cmp
mov
cmc
inc
inc
sbb
cmp
sbb
sbb
mov
stos
call
loopne
or
adc
test
add
pushf
out
icebp
incl
mov
lret
and
xor
xor
dec
xchg
sub
xchg
stos
test
sub
insb
stos
sub
pop
push
je
lds
test
sti
mov
dec
loope
movsb
push
cmpsl
pop
int
jge
testb
jbe
pop
arpl
or
call
sbb
or
jb
aad
lock
scas
push
sbb
push
xor
adc
inc
out
inc
xchg
cmpsb
jle
mov
jle
sub
sub
dec
scas
dec
jo
jo
std
add
sbb
clc
lock
add
iret
adc
pop
fisubrl
icebp
or
adc
jmp
ret
push
fucomi
fnop
sub
push
cltd
adc
lods
insl
push
clc
les
xchg
int3
iret
pop
mov
push
mov
mov
aam
gs
sub
add
dec
push
xorl
loope
popa
dec
push
and
daa
xchg
adc
and
push
scas
mov
pop
mov
add
pop
adc
and
xor
imulb
adc
mov
mov
subl
fwait
arpl
mov
sti
ljmp
dec
nop
push
mov
repnz
aad
stos
popa
xchg
jmp
fdivrs
mov
cmp
fmuls
fs
shlb
add
call
test
repnz
faddl
mov
lcall
fisttps
inc
flds
iret
jg
das
fs
loopne
pusha
lcall
lods
dec
lret
or
adc
sbb
cmp
mov
call
ret
fmuls
xchg
cli
add
sub
popf
xchg
sbb
add
test
in
ja
mov
in
mov
jp
push
mov
das
lock
pop
jne
mov
outsl
and
or
lret
jnp
dec
pop
bound
outsl
rcll
fs
add
add
pop
xchg
inc
pop
lods
aas
call
push
fnstsw
mov
imul
pop
cmc
repz
push
outsl
mov
fucomi
jmp
pop
sbb
out
cmp
mov
repnz
ficompl
mov
rcrb
xchg
mov
jo
in
rorl
inc
je
sahf
push
adc
mov
loopne
das
fists
stos
sbb
in
nop
lret
xor
ret
ljmp
dec
push
or
not
repnz
mov
int3
and
into
mov
hlt
stc
adcb
cmp
add
fnstenv
push
cwtl
lea
das
std
pushl
add
fidivs
mov
lahf
push
or
mov
js
sbb
in
cmp
ds
cli
adc
lock
divb
mov
jnp
fistpll
ret
xchg
push
imul
jmp
cmp
pop
xor
add
sahf
lret
push
or
sbb
xchg
nop
and
xchg
call
lcall
sar
add
mov
pop
pop
dec
addb
add
call
decl
test
add
lock
dec
sbb
jl
mov
in
aam
sbb
mov
mov
xor
inc
js
dec
xor
sahf
or
push
das
xor
xchg
fdivs
dec
jp
decl
cld
cmp
push
push
mov
cs
repnz
mov
repnz
imul
pusha
mov
aam
fneni(8087
ljmp
mov
notl
pop
jmp
mov
iret
push
add
call
push
into
and
cli
lods
or
jns
loopne
mov
stos
mov
sub
jb
pop
mov
fiaddl
fcmovb
in
lahf
xorl
movups
cmc
push
pop
dec
push
push
inc
adc
sbb
cwtl
jle
inc
dec
sbb
or
mov
daa
test
lds
in
add
sti
xchg
and
sub
sti
pop
cli
insl
addr16
pop
jne
push
sub
outsb
hlt
mov
sahf
in
test
push
test
dec
jl
pop
std
push
or
cmp
or
hlt
movsl
dec
imul
sti
or
mov
xor
mov
mov
call
xchg
sbb
sub
out
andl
loopne
aas
icebp
std
xor
call
mov
pop
loop
push
adc
or
outsl
movl
out
jmp
jle
and
push
hlt
mov
mov
push
pop
mov
mov
xor
xchg
xchg
cltd
ss
pop
cmpsb
jo
inc
push
mov
ss
xchg
popf
cmp
inc
out
dec
push
xchg
mov
mov
jae
jnp
mov
mov
pop
ljmp
mov
pop
scas
daa
adc
lods
lods
idiv
lcall
pop
cmp
pop
pop
idivl
bound
ljmp
scas
out
in
dec
add
adc
in
xchg
test
lret
addr16
adc
mov
pop
mov
out
ficompl
adc
mov
xor
fcoms
cmp
add
or
incl
cmp
adcb
loope
xchg
clc
jg
push
lods
lds
xor
popf
adc
or
loopne
jmp
jmp
mov
adc
sub
xor
ss
dec
nop
or
dec
cmp
out
mov
repnz
das
hlt
sbb
mov
mov
mov
aaa
pushl
xchg
icebp
sbb
fs
outsb
mov
pop
cmp
mov
jg
pop
out
in
in
sub
jg
in
rorl
movl
fstp
mov
jo
sub
sbb
mov
decl
dec
test
mov
pop
jne
enter
movsb
or
jae
lcall
iret
jmp
cmp
iret
mov
pop
pop
or
leave
imul
cmp
ficoml
pop
inc
mov
and
out
movsb
lret
incb
lcall
outsb
and
je
jle
je
xor
sub
cld
mov
loop
out
fsubr
lcall
dec
jecxz
pop
fldl
adc
inc
leave
sub
adc
xor
popf
push
cmp
mov
adc
lss
inc
repz
stc
pushf
das
jl
inc
das
jecxz
sbb
out
cmp
cld
inc
lods
sbbb
ret
call
push
push
mov
pop
ret
add
mov
imul
rcll
sub
dec
testb
xor
inc
arpl
add
je
push
ret
cmpsb
imul
movsl
call
push
inc
add
add
outsb
addr16
aaa
clc
jg
dec
adc
cmp
adc
mov
imul
movsl
inc
jl
das
cld
rcrl
xor
iret
fmuls
mov
xor
popf
jmp
insb
jne
outsl
std
das
mov
les
insb
inc
mov
fcompl
xchg
into
lods
pushl
test
bound
js
fstp
scas
dec
mov
scas
fmuls
outsl
adc
and
jnp
cli
push
daa
mov
cmpsb
cmp
lds
icebp
jnp
xchg
mov
orl
movsl
decl
inc
and
jae
fisubrl
mov
pop
xchg
scas
xchg
add
fsub
loope
sub
push
decl
std
incl
aaa
push
ja
andb
cltd
push
data16
sarl
mov
cli
test
and
dec
adc
xchg
in
pop
les
mov
mov
jbe
cmc
sbb
out
jcxz
pop
int3
fsubrl
pop
bound
cmpsb
jb
push
fstpl
cmp
mov
sbb
push
mov
or
test
mov
hlt
aas
add
jb
push
scas
mov
mov
xchg
cmp
adc
mov
fstl
out
repz
shl
sbb
stos
inc
mov
jmp
shr
push
push
aaa
lock
xchg
cmpsl
gs
std
sbb
lea
outsl
mov
push
inc
inc
ljmp
mov
sbb
repnz
pushl
daa
xorl
jp
sti
cmp
push
lods
cmp
ss
and
cmp
hlt
fwait
dec
cmpsl
add
xchg
pop
fwait
cmpl
mov
lcall
dec
mov
push
jl
data16
ljmp
pop
test
popf
mov
out
inc
in
mov
mov
xchg
pop
orl
mov
fstpl
jmp
jmp
pop
movsl
mov
jecxz
addr16
and
jg
and
pushl
jecxz
outsl
std
mov
das
test
aas
test
cmp
mov
xor
loop
std
in
idivb
imul
rol
mov
out
sub
cli
in
incb
sub
insl
and
adc
clc
faddl
lock
ljmp
push
imul
shl
jl
ss
das
lds
cmp
das
xor
xchg
loope
leave
and
cld
cmp
push
xor
pushl
shll
pop
ds
aas
dec
jb
cmpsb
rcrl
in
sbb
xor
xor
mov
jg
movsl
cli
xchg
sub
cmc
ror
mov
int
stc
arpl
inc
sar
push
in
rcr
out
cmp
pushf
jbe
and
enter
fwait
mov
fistpll
or
shrb
call
mov
mov
add
icebp
xor
xchg
rorb
inc
nop
push
cld
push
sbb
jp
jno
int
jg
lods
adc
xlat
cwtl
mov
shr
or
ror
dec
pop
mov
inc
push
loop
xchg
jp
cmp
dec
dec
bound
pop
mov
cltd
sar
mov
jmp
ret
pop
mov
rcrb
pusha
shlb
sub
push
mov
outsl
lock
pushl
push
pushf
add
add
inc
daa
mov
jmp
ret
lahf
loope
jge
inc
in
push
call
sub
or
pop
out
pop
cltd
jne
mov
in
adc
pushf
jae
cmpsl
test
ds
dec
dec
jb
fbld
sub
jbe
cmp
adc
jge
dec
mov
incl
cltd
fwait
inc
lds
rcr
adc
xor
jp
ja
enter
cmp
push
dec
and
adc
sub
cld
ss
cmc
fcompl
pop
repnz
inc
lret
inc
mov
push
jne
and
and
mov
pop
pop
ficoml
call
xor
dec
call
imul
jns
es
out
das
test
mov
outsl
mov
xlat
push
imul
fcoms
cmp
sbb
call
push
jmp
test
lock
dec
fcomps
sbb
idivb
mov
in
fwait
call
stos
test
cmp
adc
mov
pusha
cmpsb
test
and
mov
repz
mov
call
mov
lock
es
adc
fistl
dec
mov
lock
rcll
xlat
pop
cs
adc
mov
bound
repnz
mov
int3
jmp
cltd
scas
push
dec
mov
dec
stos
fsubs
aam
mov
push
js
leave
sbb
push
pushl
in
sub
out
outsb
test
stos
pop
add
push
stos
add
decl
inc
sbb
push
mov
lret
test
mov
jb
incl
xchg
fidivl
ss
xchg
rcll
jg
fwait
sbb
lods
iret
enter
xchg
out
int
sbb
fstpt
pop
jecxz
pop
movsl
xchg
or
lea
lock
in
decl
jg
add
mov
jecxz
cs
ljmp
xchg
mov
addb
je
pop
out
roll
and
cmpsl
jno
pushl
shll
imul
push
icebp
mov
push
inc
push
es
das
mov
pusha
fucomp
shrl
pop
and
movsb
les
mov
fistps
inc
sub
add
negl
pop
lahf
jmp
mov
arpl
dec
daa
lds
xchg
pop
das
les
jg
jg
lds
mov
data16
test
mov
cmp
aam
mov
int3
pop
sbb
sub
mov
inc
cld
xor
jnp
int3
jecxz
std
imul
ljmp
ja
and
outsl
pop
jecxz
cmp
mov
aad
dec
pop
xor
mov
mov
sub
mov
jecxz
movsl
movsl
orb
ret
ja
das
and
cmp
push
das
loopne
clc
outsl
xor
mov
cs
or
and
add
mov
movsb
popa
xchg
fs
inc
mov
shlb
ljmp
cwtl
stos
mov
test
and
imulb
add
cld
fstps
mov
stos
dec
std
ficomps
call
cwtl
sub
fnsave
and
test
scas
jmp
add
les
sbb
push
lahf
adc
or
orl
mov
das
sbb
or
rcl
inc
xchg
leave
push
aam
sub
pop
mov
sti
loope
lods
icebp
or
jne
movsl
rcl
xlat
mov
jmp
add
mov
bound
jl
push
repnz
rolb
mov
cmp
push
mov
dec
push
into
inc
push
mov
jl
jbe
shlb
std
xchg
pop
jg
addb
ss
shl
insb
mov
stos
rcrl
insl
inc
adc
pop
dec
cld
bnd
js
je
sub
decl
lock
push
insb
cmp
inc
or
inc
push
std
mov
inc
xchg
clc
mov
mov
out
int3
fucom
call
int
dec
inc
popf
fistl
clc
fwait
stc
cld
add
out
jns
xchg
leave
cmp
mov
incl
loop
or
clc
das
mov
in
and
add
mov
lret
xor
or
mov
mov
sbb
das
and
scas
aas
insl
mov
sub
dec
into
add
ljmp
call
out
sbb
shlb
sbb
icebp
pop
inc
cmp
cmp
fsubp
and
jo
add
ja
push
cmp
imul
cli
xor
ljmp
mov
cld
sbbl
sbb
mov
aas
or
or
ja
sub
mov
aas
xorl
inc
pop
insb
loop
fistpl
decl
mov
jb
hlt
mov
cli
push
xchg
mov
pop
std
lret
fstl
sbbl
popa
hlt
testl
mov
lods
pop
in
imul
std
test
push
xchg
mov
xchg
stos
enter
and
adc
cmp
lds
sbb
fmuls
mov
mov
inc
pusha
les
sarl
movsb
push
xchg
insl
xchg
jbe
xor
push
fistpl
mov
in
mov
or
sub
cmpb
xchg
sar
data16
lcall
mov
fwait
and
sbb
push
and
ja
or
out
jmp
outsl
cmc
xchg
incb
mov
jno
repz
insl
in
dec
cmp
mov
adc
mov
mov
cli
and
cmpsb
sbb
jg
push
mov
sub
fmul
mov
dec
or
xchg
fcompl
mov
jmp
cmp
ljmp
mov
jo
mov
sub
jmp
dec
mov
outsb
pop
fwait
ja
aas
push
hlt
jge
fucomp
sbb
jl
arpl
or
and
test
mov
add
mov
push
cld
ds
insl
jbe
and
ja
and
in
std
adc
aad
push
pusha
push
add
mov
insb
pop
add
add
sti
pop
mov
sub
int3
nop
mov
adc
mov
fmull
jmp
sbb
sbb
fsts
or
out
jne
and
mov
insb
push
clc
repnz
lcall
mov
hlt
into
sub
sub
and
not
fcom
loopne
mov
stc
jmp
ljmp
jg
jg
pop
daa
add
or
outsb
fs
jne
call
pop
scas
lret
test
mov
call
push
mov
gs
jg
pop
jnp
mov
adc
xor
xchg
decb
loope
pusha
in
mov
rol
inc
or
fs
daa
inc
inc
cli
outsl
fimuls
insl
jbe
popf
arpl
imul
jnp
pop
loop
mov
cmc
inc
arpl
in
dec
clc
lcall
call
outsb
jg
test
repz
adc
xor
sub
out
xchg
cmp
pop
ret
jns
mov
fstpl
mov
cmp
adc
add
test
fstpl
sarl
leave
test
sbb
icebp
and
popa
jg
dec
sahf
out
mov
sbb
sahf
movsb
push
cmp
mov
clc
or
xor
xor
pop
adc
push
cmpsl
sub
aaa
xor
outsl
sbb
outsb
or
jmp
fistl
fistl
or
outsb
pop
lods
push
mov
xor
cli
outsl
cmc
mov
leave
dec
mov
sbb
sbb
sbb
push
aaa
jp
scas
jmp
test
push
xor
jle
jp
add
pop
sub
push
loop
add
lcall
pop
fisubrs
test
iret
dec
mov
das
loop
jmp
or
pop
fcomps
adc
imul
push
repz
fcmovnu
clc
xchg
insl
sbb
or
pop
es
push
dec
mov
sbb
mov
lods
pop
or
lret
movsb
stos
rorb
and
add
mov
hlt
push
mov
dec
test
pop
aaa
icebp
jae
xchg
dec
orb
jge
cmpsl
enter
mov
andb
fstps
xorl
jb
xchg
shrb
jmp
in
rclb
je
jbe
ds
or
inc
fsubrp
pushl
dec
inc
fdivl
xlat
lret
cld
test
mov
std
adc
fildll
aad
aad
scas
push
jg
pop
popa
into
test
dec
test
sahf
sbb
lods
out
push
mov
pop
pusha
stos
fisubrl
jmp
push
and
mov
inc
push
mov
xor
mov
xchg
dec
mov
sub
ja
mov
inc
xor
out
jnp
in
loopne
fsubp
ljmp
cld
cmp
dec
adc
mov
pop
cld
loope
pushl
mov
add
ds
xchg
xchg
shll
and
scas
xchg
mov
outsl
sti
dec
push
das
adc
fsub
loopne
insb
mov
jle
sbb
cmp
das
dec
jb
jge
xchg
dec
adc
mov
lods
fstpt
fiaddl
rol
mov
sub
lock
je
mov
mov
sbb
rorl
fstl
jecxz
and
pushl
jo
fcoml
sub
mul
xchg
fs
out
es
xor
xchg
or
push
cmp
sbb
dec
adc
les
cltd
and
push
fimull
dec
sub
pop
inc
aaa
adc
mov
sbb
shll
insl
push
sub
cmc
bound
roll
jg
test
insb
pop
imul
ret
mov
sub
push
and
out
movsl
das
dec
inc
dec
jbe
aam
notl
call
ds
add
filds
fwait
imul
in
mov
ss
mov
mov
push
and
sbb
ret
jg
ljmp
mov
sbb
xlat
push
push
scas
out
push
push
fs
lret
in
call
jmp
into
movsb
daa
sbb
push
inc
stos
and
std
jmp
inc
xchg
clc
enter
daa
mov
cmpsl
jge
shlb
add
xchg
movq
jb
push
mov
cmp
cmp
jle
jo
xchg
cmpsb
inc
lock
je
lods
fwait
stc
clts
adc
fstpl
call
aaa
jns
sti
ja
xor
ret
cld
xchg
push
test
xorb
incl
pop
mov
into
int3
mov
dec
pop
and
fwait
dec
jmp
sbb
fistpll
pop
imul
mov
sbb
icebp
addr16
jg
jg
out
xor
test
cmp
jns,pt
xor
pop
mov
or
mov
pusha
xchg
push
roll
dec
shrb
incl
out
dec
gs
xchg
jge
aam
fisubrl
ja
sub
pop
push
sbb
call
xor
mov
ljmp
lods
add
fistl
push
mov
subb
sarb
sbb
mov
and
das
shrb
insl
add
arpl
in
push
sarb
bound
pop
les
mov
sub
mov
xchg
xchg
inc
je
sbbb
repnz
jg
inc
mov
mov
xorb
hlt
inc
iret
xchg
out
out
pop
sar
cld
ds
xchg
inc
mov
int
fwait
mov
xchg
xchg
or
test
test
mov
dec
aam
call
sub
sbb
cmpsl
loopne
fbld
clc
lea
mov
fbld
shl
insb
push
nop
fwait
scas
mov
mov
test
imul
push
sti
push
test
adcl
pop
scas
or
aas
push
int3
mov
mov
lea
mov
cmp
mov
mov
mov
mov
dec
lods
push
movsl
insl
adc
cmc
fnstcw
pop
cmp
jle
imul
clc
cmp
push
stc
pop
xor
fs
jge
std
dec
cltd
mov
ud2
or
insl
arpl
sahf
pop
repnz
lcall
push
fdiv
js
test
lcall
rorb
hlt
in
xor
test
xor
shll
mov
mov
xor
sub
loop
cmp
mov
stos
jg
andl
mov
divl
repnz
loop
pushl
cmp
cs
sahf
ds
iret
push
lahf
cwtl
scas
add
cmpsl
je
push
loopne
aam
std
fbld
dec
stc
gs
mov
pop
cld
lcall
adcl
leave
inc
out
dec
inc
inc
outsl
fiaddl
outsl
jl
pop
iret
sbb
xchg
je
xchg
or
xor
jge
pop
jmp
mov
cmpb
mov
dec
xor
outsb
mov
sarl
fmulp
rcr
insb
adc
xchg
mov
addr16
je
cmpsb
xchg
fwait
push
add
jmp
in
test
xchg
inc
sbb
ss
lcall
ja
push
or
aas
xor
cmp
rclb
shrl
push
cmp
xchg
sbb
xor
adc
pop
mov
outsl
movsl
inc
mov
mov
ja
mov
test
frstor
mov
ja
and
pop
mov
leave
xchg
inc
mov
addr16
call
jb
cmpsl
int
cmc
test
sahf
mov
add
aam
push
or
adc
push
lods
in
mov
jae
mov
jmp
fsubrp
xor
ljmp
jg
mov
mov
mov
jle
sub
outsl
add
mov
stos
pop
ret
pop
jno
cmp
call
mov
add
daa
push
xchg
sub
aaa
pop
adc
fsubr
push
push
mov
sbb
arpl
push
fwait
mov
sar
pop
pop
lods
lret
pop
push
jmp
jae
xchg
mov
jae
mov
mov
test
mov
jmp
idivl
inc
orl
cli
and
sbb
rorb
mov
sbb
aaa
inc
jg
test
ret
data16
pop
fistps
fcoms
sub
outsb
incl
loope
xor
addr16
mov
les
in
or
cmp
out
dec
stos
xor
out
jmp
test
outsl
mov
addr16
xor
lahf
cs
call
call
mov
cs
out
out
leave
sbb
push
lock
std
std
andb
ret
sar
fsubs
dec
and
into
out
or
cltd
adc
ljmp
out
jbe
sub
jge
jns
loope
dec
jo
mov
add
mov
sbb
std
cmp
stos
add
inc
push
stos
inc
in
xchg
push
test
mov
mov
mov
leave
test
ret
enter
aam
insl
gs
decl
mov
ret
jb
inc
aad
rcr
das
push
or
jmp
out
aad
loopne
das
sub
jge
sbb
jno
dec
inc
add
aam
push
shl
jg
fldt
adc
test
mov
inc
xor
mov
mov
arpl
pushl
stos
in
pop
jno
jb
into
test
repnz
mov
repnz
jmp
xchg
outsl
xchg
inc
in
stos
lret
int
cmp
xlat
repnz
dec
pop
xlat
xchg
jge
cmp
orl
cmp
pop
pop
outsl
in
fildll
adc
lea
adc
inc
pop
out
imulb
insl
mov
add
movsl
xor
inc
mov
test
ret
pushf
sbb
mov
xchg
arpl
mov
fbld
cld
test
pop
rcrl
push
aaa
insl
pop
mov
aad
lods
dec
adc
push
pop
insl
stc
ljmp
mov
xchg
es
cmp
jae
in
jbe
push
ret
mov
xchg
push
lea
cmpsl
sub
xlat
dec
mov
jg
xchg
insl
adc
xor
mov
push
pop
sahf
add
dec
notl
iret
out
mov
mov
incl
pop
shlb
sahf
es
test
pop
sub
ljmp
mov
stos
outsl
js
fistl
and
clc
jp
cld
mov
jmp
pop
or
flds
xlat
xchg
insb
sahf
mov
ret
jno
jp
enter
iret
lret
repnz
addr16
or
adcb
cmp
lcall
shrl
and
aam
pop
in
shlb
test
fistpll
xchg
mov
ds
push
and
fistl
test
add
ljmp
pop
int
inc
nop
jl
aaa
xchg
imul
lcall
adc
rcrl
cs
and
inc
pop
in
dec
jmp
xor
jbe
test
dec
cmpsb
and
aam
pop
lret
shll
ljmp
adc
test
orl
fs
and
lret
fisttps
stos
inc
and
xchg
js
push
adc
int3
sbb
inc
inc
jg
pop
xchg
bound
inc
js
loopne
lret
ret
sub
ja
jg
jg
mov
jo
jg
sub
mov
aam
push
call
and
xchg
jge
add
out
inc
outsl
jg
push
mov
in
out
mov
lret
mov
mov
pop
sbb
inc
decl
inc
xchg
pop
push
rcll
jmp
pop
jg
loopne
in
enter
pushl
xor
js
insl
push
mov
push
xchg
imulb
imul
pop
ljmp
dec
stos
fmulp
out
cltd
inc
pop
jae
mov
sahf
xor
cmpsl
push
pop
hlt
pop
test
jg
ds
mov
jp
rolb
fcomps
jg
subw
dec
jg
int
int
arpl
repnz
mov
and
daa
mov
dec
fsubr
jge
test
add
dec
mov
aam
push
in
imul
sub
xchg
inc
test
icebp
cmp
fistps
and
mov
xchg
xchg
add
dec
in
mov
loopne
sbb
dec
andb
outsb
pop
ret
jg
mov
orl
sarl
cmpsl
pop
cld
push
lock
lret
jmp
jge
jl
dec
xchg
and
aam
push
mov
loop
sub
aaa
test
outsb
add
stc
lcall
ret
sub
adc
or
sub
pop
clc
sbb
inc
xor
into
push
into
pop
repnz
ljmp
dec
fisttps
mov
sub
adc
les
cmp
jl
or
incl
fwait
push
insl
jne
lahf
fidivrl
movsb
test
jp
stos
in
inc
mov
iret
xchg
ljmp
aas
lahf
xchg
push
xchg
push
jmp
push
mov
call
call
ss
pop
test
fcompl
pop
in
jg
fnstenv
shlb
movsb
or
notb
xchg
outsb
adc
jp
inc
outsb
push
mov
dec
sbb
xchg
lock
push
xor
adc
pop
pop
mov
movsb
sar
mov
pop
lods
jns
inc
lea
mov
call
clc
mov
adc
neg
ror
sub
xor
push
push
push
sar
mov
inc
mov
pushl
mov
outsb
xchg
xor
jo
push
cmp
dec
or
xchg
stc
imul
lcall
or
mov
xor
imul
test
mov
dec
jle
gs
push
pop
sbb
adc
add
es
test
ja
push
les
mov
decl
sbb
inc
sub
shrb
cmp
ror
pop
pop
popa
push
mov
out
lahf
out
addr16
ljmp
leave
cmpsl
pop
cmpsl
cmpl
add
out
jmp
pop
loopne
lahf
jmp
popf
xchg
stos
xorl
outsb
fnstenv
jmp
std
dec
out
push
ja
and
fcompp
frstor
mov
das
jg
lock
ja
or
and
dec
int3
jbe
xchg
pushf
mov
outsl
add
movsb
lods
in
pop
dec
ljmp
fsubrl
loope
lret
arpl
cmp
es
sbbb
xchg
dec
lret
push
test
shrl
and
imul
ficoml
ljmp
lahf
lea
ficoml
jns
sbb
iret
aas
icebp
lods
mov
pop
loope
xor
jo
mov
ljmp
imul
aaa
or
xchg
jg
mov
addl
imul
jecxz
jle
call
and
jb
xchg
cltd
cmp
repnz
fsubrs
jmp
jp
push
scas
mov
clc
adc
in
push
aaa
pop
xor
xor
add
jbe
clc
mov
nop
shrb
inc
jecxz
in
xchg
ret
push
in
cmp
ljmp
icebp
pop
jne
mov
xchg
fwait
push
or
es
jbe
push
insl
push
mov
mov
je
pop
xlat
jmp
aaa
aas
and
xchg
or
push
jo
or
add
lods
adc
daa
push
dec
jae
stc
inc
cmp
jbe
mov
insl
xor
pop
pop
and
enter
mov
ret
shll
pop
call
adc
out
fdivp
cmp
shl
orb
mov
rorb
cwtl
add
jg
test
aaa
test
les
fdivrs
cmp
clc
cmp
es
pop
lods
ds
loopne
out
ds
ds
aas
mov
out
lcall
jl
xor
inc
xor
xorb
xor
xor
add
lcall
ja
mov
iret
xor
xor
xor
outsb
xor
xor
call
xor
xor
xor
xor
xor
xor
jge
mov
mov
mov
xor
xor
xor
xor
xor
xor
xor
divl
inc
bound
mov
ss
je
jnp
xchg
xor
xor
call
xchg
xor
cmp
sti
xor
xor
xor
xor
pushl
pushl
xor
xor
cmp
cmp
ds
ss
loopne
pushl
jl
fnstenv
mov
aaa
out
jmp
pop
cmp
mov
ljmp
mov
cmpsl
cmp
cmp
cmp
mov
cmp
cmp
cmp
incl
cmp
mov
mov
cmpb
ds
xchg
jmp
aas
cmp
insb
aas
xchg
aas
enter
jmp
push
xor
xor
jns
xorl
movsb
xor
ret
pushl
repnz
xor
xor
xor
xor
push
xchg
lea
xchg
loope
jg
xor
xor
xor
xor
xor
xor
xor
bound
insl
cmp
jnp
xorb
xor
xlat
push
xor
xor
xor
xor
xor
xor
xor
mov
call
push
xor
xor
stos
xor
jg
or
push
filds
ss
lds
imul
cmp
cmp
cmp
cmp
fisttpll
lock
cmc
adc
lahf
cmp
cmp
cld
mov
inc
aas
inc
aas
xchg
aas
cltd
aas
mov
aas
ret
aas
in
std
hlt
dec
mov
jo
sbb
xor
cmp
out
std
xor
xor
out
cs
xor
mov
xor
xor
jo
imul
repz
pushl
or
xor
xor
xor
xor
xor
xor
xor
xor
cwtl
xor
ljmp
sbb
scas
xor
add
xchg
sbb
int
das
cmp
ret
cmp
cmp
cmp
cmp
jnp
xchg
cmp
cmp
fnstsw
cmp
cmp
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
jmp
cmp
cmp
cmp
and
cli
ds
push
aas
sbb
sub
push
aas
gs
sahf
aas
popa
shrl
mov
sub
jg
mov
xor
or
adc
push
fcomip
dec
mov
mov
xor
sbbl
insl
xor
data16
iret
or
sub
call
pushl
xor
xor
xor
xor
dec
xor
xor
xor
xor
xor
sub
xor
xor
adc
ss
or
mov
repnz
fcomip
ljmp
and
daa
aaa
cmp
aaa
pop
aaa
imul
in
lock
adc
cmp
jb
test
sbb
and
outsb
cmp
mov
cld
cmp
cmp
cmp
sbb
and
sub
xor
cmp
test
sar
incl
into
add
cmp
cmp
cmp
cmp
repnz
fistps
ds
mov
sti
nop
mov
pop
pop
xor
xor
lahf
mov
mov
in
insb
fdivs
jecxz
mov
jne
test
mov
xor
mov
xor
xor
xor
lcall
shll
jmp
xor
and
xor
xor
cmpsb
jmp
jl
mov
xchg
xor
xor
fcomip
in
xor
and
xor
lds
xor
xor
xor
xor
outsl
mov
sbb
xchg
mov
mov
cltd
xor
xor
out
xor
xor
pushl
outsl
add
ss
ss
ss
ss
leave
pop
ss
test
xchg
ss
or
pushl
movsl
ss
ss
in
ss
or
push
aaa
adc
andb
pushl
push
aaa
dec
aaa
dec
aaa
push
aaa
pop
aaa
arpl
imul
mov
movsl
aaa
stos
aaa
scas
aaa
mov
mov
jmp
lock
cli
aaa
pcmpgtw
sub
add
pushl
clc
pop
cmp
js
cmp
cmp
cmp
cmp
cmp
imul
cmp
cmp
cmp
cmp
add
mov
cmp
cmp
xchg
adc
sahf
dec
ljmp
xor
cmp
inc
cmp
push
cmp
imul
cmpl
std
cmp
cmp
cmp
cmp
je
cmpsl
cmp
inc
cmp
cmp
ljmp
icebp
insl
cmp
cmp
push
cmp
and
jnp
pushf
cmp
push
pop
loopne
ret
cmp
mov
aaa
wrmsr
xor
xor
lea
xchg
xor
xor
mov
mov
xor
xor
xor
push
xor
sahf
xor
xor
xor
xor
xor
xor
xchg
scas
xor
stos
je
sbbl
fnsave
xor
scas
adc
pop
inc
cmp
ss
pop
jo
js
lea
xchg
ss
or
filds
push
ss
sarl
push
aaa
or
adc
aaa
push
cmp
fbstp
in
aaa
sbb
cmp
cmp
cld
cmp
cmp
xor
cmp
cmp
cmp
pop
ret
push
lock
pusha
cli
jo
mov
mov
sarb
cmp
or
stos
lret
or
or
sub
or
adc
xor
ds
test
mulb
and
adc
sarl
movsb
cmp
inc
addb
dec
add
leave
fdivrs
mov
cltd
add
xor
jp
pop
popf
rcrl
repz
cltd
cmp
popf
fstps
cltd
cmp
add
and
cltd
ds
and
add
inc
repnz
dec
adc
or
add
sbb
das
xchg
xchg
add
andb
in
mov
jo
daa
pop
and
das
push
ret
xor
cmp
rolb
mov
add
je
js
data16
jmp
jge
push
mov
sub
pusha
push
xor
pop
jnp
or
jb
jb
inc
add
add
arpl
daa
inc
loopne
aaa
dec
out
insb
lahf
pusha
and
movntps
inc
or
push
mov
add
inc
sub
std
pushf
or
inc
fstl
das
or
fs
aam
inc
add
and
push
icebp
add
arpl
in
adc
das
or
pop
inc
mov
adc
pop
adcb
std
push
pop
mov
or
movsl
or
adc
int
inc
mov
and
stc
movsl
movsw
movsb
cli
jbe
add
stos
inc
add
and
test
adc
lea
mov
pop
sahf
inc
mov
push
push
inc
xchg
or
add
out
jne
inc
sub
dec
adc
push
push
or
mov
pop
out
or
cmp
add
fsubrs
sbb
or
xlat
cmp
jnp
add
push
lods
or
inc
data16
fisttpll
adc
add
fistpl
jne
sbb
shr
cmp
addr16
ja
pop
push
mov
stc
fidivs
sbb
es
insl
andb
aaa
cmpxchg
mov
adc
xchg
and
test
xor
xchg
leave
into
out
adc
and
mov
or
sbb
jnp
jge
loopne
pusha
mov
shll
or
sbb
or
mov
pop
es
mov
mov
lret
pop
and
fs
dec
or
loop
subb
sbb
loop
sbbb
add
jbe
jge
hlt
imul
add
idivl
clc
xor
cs
fs
insb
mov
adc
cld
insb
xor
sub
je
insl
jae
je
dec
inc
popf
insb
fmul
mov
inc
jg
repnz
or
add
adc
loopne
xchg
andl
pop
xchg
gs
gs
dec
inc
movsb
imul
popa
add
mov
movsb
push
ret
mov
add
add
inc
out
jmp
cmp
idivb
jecxz
or
ds
mov
nop
and
adc
ret
xchg
call
or
jg
fwait
sti
dec
adc
lea
push
push
or
jb
in
sbb
xor
mov
jns
in
cmp
mov
push
fs
push
push
ret
fs
jp
nop
unpcklps
mov
mov
outsl
and
jecxz
or
movsb
sub
jae
inc
fdiv
clc
subb
outsl
xchg
adc
adc
pop
sbbb
mov
jbe
push
or
push
ret
xor
sbb
or
int3
mov
fnsave
push
add
push
sbb
insl
leave
pop
adc
clc
movb
pop
xchg
pop
jae
pop
jae
ret
pop
das
jno
and
adcl
sub
adc
push
nop
daa
pop
or
ljmp
push
sbb
push
sbb
aas
fisttpll
add
and
mov
xor
lea
dec
pop
or
std
xchg
bound
inc
sbb
into
and
enter
aam
ret
into
ss
adc
mov
adc
or
jns
add
inc
das
popf
les
push
int
and
push
cmp
sub
incb
idivl
fisttps
mov
mov
mov
or
or
add
lods
repz
lods
adc
and
lods
or
outsb
sub
push
and
repnz
inc
fstp
or
lods
leave
mov
lret
jb
outsl
outsb
lret
mov
lret
gs
cs
mov
es
aad
insb
lret
mov
rcl
call
outsb
mov
push
in
lcall
cmc
mulb
jbe
mov
idiv
dec
stc
inc
cli
je
sti
xor
call
cmp
jne
mov
push
call
pmuludq
rcr
orl
pop
sbb
lock
enter
test
lret
lret
outsb
movsl
pop
mov
insb
into
xor
xor
shll
cmp
roll
cmp
clc
dec
rolb
insb
cmp
lret
enter
dec
movb
inc
outsb
aas
std
enter
test
lcall
sub
lcall
test
inc
std
js
popf
pop
js
push
ja
dec
mov
aam
int3
add
shl
pusha
lods
xchg
sbb
mov
ret
outsb
notb
sbb
push
rclb
fs
das
mov
sub
push
push
je
data16
dec
push
jge
inc
mov
out
ret
cmp
je
push
mov
mov
push
xor
sarb
flds
push
push
adc
jmp
sbb
dec
repz
shlb
in
outsl
push
add
fdivl
enter
and
popa
les
lcall
jne
je
dec
cmp
and
fs
rol
mov
inc
imul
mov
mov
lret
addr16
dec
ret
mov
je
mov
enter
mov
std
xlat
inc
xchg
mov
lods
cmp
cmp
das
pushf
cli
out
dec
test
mov
cmp
dec
xor
or
frstor
add
fldt
lret
add
inc
int3
mov
int
into
popa
iret
shrb
cmpsb
int
shrl
shll
jae
sbbb
gs
xchg
or
popa
in
pop
xchg
jne
arpl
sub
aaa
leave
gs
or
enter
xchg
imul
add
js
xchg
gs
jo
outsl
jb
lret
inc
inc
and
arpl
inc
xchg
sub
popa
pop
mov
xor
adc
cmp
pop
mov
insb
xchg
jbe
mov
adc
mov
in
or
fxtract
add
jno
xchg
inc
push
leave
ja
inc
adc
cmp
je
ds
addr16
inc
push
out
mov
stc
sub
xchg
xorb
and
push
inc
insl
lret
pop
xchg
je
testb
mov
iret
push
push
shl
out
mov
loopne
sub
fcoml
adc
js
fmulp
je
mov
ret
pop
mov
pop
push
das
push
pusha
pop
push
mov
add
test
clc
push
add
test
mov
in
jns
or
in
xchg
or
mov
jae
pop
sbb
add
es
dec
sub
lock
mov
je
add
fcoml
sbb
push
cmp
push
inc
pop
subb
dec
mov
and
cmp
cmp
ret
sbb
inc
push
push
inc
scas
add
cmp
mov
arpl
inc
add
jg
out
jae
or
mov
or
jo
add
das
sbb
sub
add
fisttps
or
or
add
push
leave
sub
add
sbb
or
jns
inc
inc
adc
shl
push
and
inc
cmp
adc
dec
inc
les
inc
add
addl
xchg
mov
test
and
scas
xor
test
and
mulb
inc
jle
inc
and
cmpsb
add
vmwrite
fcoml
xchg
or
filds
cmp
fidivrs
add
shr
mov
cmp
sbb
mov
sbb
fdivs
mov
cld
fldt
sti
jne
inc
cmp
jne
cmp
je
mov
inc
jmp
fisttps
or
je
lret
inc
shll
clc
inc
jl
add
jg
cmpl
or
stc
stc
shll
add
out
iret
pusha
fcmovnb
je
rcrl
mov
andb
addb
imul
mov
test
sub
int3
js
adc
adc
xor
orl
inc
cmpsl
add
shrl
inc
pop
imul
push
cmpsb
imul
sub
add
inc
ret
imul
test
dec
inc
cmp
cs
imul
imul
push
adc
testb
pop
add
cmp
cmp
shll
dec
fisttpl
pop
or
lea
push
pop
jmp
lods
std
outsl
adc
popa
jns
jne
jae
xor
rorl
test
inc
arpl
sub
push
fstpt
sub
outsb
xor
or
int
mov
inc
dec
dec
inc
stos
pusha
sti
mov
sbb
sub
push
push
mov
pop
adc
add
in
cltd
or
pop
inc
ss
fwait
nop
clc
inc
in
add
xorb
dec
inc
jo
add
int
and
addb
or
addb
les
pop
repz
jae
pop
sbb
pop
mov
dec
or
adc
pop
packsswb
mov
jo
mov
repz
mov
pusha
push
adc
xor
sti
sub
or
nop
xchg
jno
sti
sbb
inc
jecxz
fistps
outsw
es
loop
data16
int3
sub
adc
lcall
sbb
pop
add
jle
je
lcall
mov
push
outsb
jb
sbb
and
mov
or
inc
outsl
js
xchg
mov
xchg
leave
push
push
add
push
jo
sub
jmp
or
fs
nop
arpl
adc
adc
add
adc
dec
push
pop
fistps
push
cltd
insl
insl
dec
jae
mov
shll
xor
fldcw
sti
add
cwtl
cmpsb
pop
xlat
or
add
js
sbb
bnd
mov
cmp
cmp
sbb
or
insb
mov
pop
mov
cwtl
pop
stos
ss
xlat
xor
mov
inc
int3
dec
pop
or
je
loopne
pop
jmp
mov
pushf
je
shll
or
pop
shll
or
hlt
adc
pavgw
lea
adc
add
jne
cmp
or
dec
clc
je
inc
rclb
xchg
rorb
adc
sbb
bound
jae
sbb
adc
addb
inc
sarl
leave
adc
ss
ret
fnstcw
xor
jne
or
inc
mov
pop
fisubl
sbb
mov
push
dec
or
jnp
imul
add
add
xorl
jo
push
outsl
pop
mov
insb
pop
pop
testl
popw
loopne
pop
lds
arpl
jecxz
in
shll
imul
jns
stos
mov
add
mov
xchg
cmp
add
jle
push
and
clc
pusha
push
ja
lret
add
xor
push
add
mov
movsb
push
or
dec
mov
dec
mov
iret
jne
inc
or
add
imul
gs
xchg
mov
pop
or
add
inc
add
sub
addr16
xchg
pushf
mov
or
fucomp
and
mov
xlat
jne
jecxz
inc
and
xor
pop
movsb
jmp
jae
and
popa
jns
repz
movsl
popa
and
add
xlat
lea
or
jo
imul
outsb
es
push
fucom
xlat
add
adc
or
xor
or
jb
cmp
fldenv
jne
xor
mov
xchg
insb
popf
mov
adc
dec
or
lds
mov
addr16
mov
fucom
mov
xor
xor
mov
lret
and
sub
jbe
dec
insl
or
daa
dec
mov
orw
xlat
outsb
xchg
cli
pop
mov
daa
jbe
mov
mov
fs
outsl
pcmpeqw
and
je
and
pop
ja
adc
pop
imul
add
and
or
cmpsl
xchg
out
inc
fs
add
lock
or
xor
ljmp
xor
xor
jne
xchg
xor
xor
xor
outsl
xor
xor
xor
jle
clc
es
xor
fld
xor
xor
fdiv
adc
ss
cmp
jg
aaa
je
mov
aaa
aam
aas
cmp
cmp
cmp
cmp
cmp
sarb
cmp
mov
cmp
pop
xor
inc
ds
ds
movsl
ds
ds
xor
aas
addr16
ja
xchg
sarl
aas
aam
fwait
mov
loop
dec
xor
push
xor
and
sub
xchg
mov
jmp
stos
xchg
loopne
mov
test
jb
add
arpl
std
push
hlt
jl
xchg
out
popa
pop
inc
mov
flds
xorb
ret
divl
mov
pop
add
into
inc
jle
mov
add
adc
and
out
test
outsl
add
or
and
add
and
or
notl
cmpl
dec
daa
inc
push
dec
push
and
xchg
and
decl
mov
xor
push
das
add
imul
imul
sub
idiv
cs
sub
scas
jae
ret
sbb
in
add
fsubrs
cmpsb
imul
pop
jp
pop
sbb
pop
movsb
pusha
je
push
inc
sbb
aas
adcb
and
ret
or
incl
and
or
pop
out
and
fisubrl
xor
adc
push
bound
ljmp
imul
add
and
stos
mov
mov
test
adc
shld
sti
stc
lret
xor
adc
add
inc
test
adc
repnz
push
and
jmp
inc
or
and
fs
and
add
cmovb
das
mov
and
add
and
and
pushf
xor
das
add
sbbl
jns
xchg
es
add
or
or
shrb
push
mov
mov
idiv
out
out
sbb
fsubr
in
sub
popf
lock
mov
call
jb
fistl
push
cmp
sbbb
add
add
mov
je
jle
adc
pop
loopne
mov
test
xor
jnp
jne
add
jne
addl
inc
movsb
mov
push
pop
lahf
andb
mov
mov
mov
incl
incb
inc
mov
xor
and
mov
push
fcoml
add
or
xorb
adc
hlt
push
mov
mov
es
mov
pop
cmp
add
fsubl
cmp
out
cld
push
dec
adc
fnstcw
xor
mov
call
or
data16
pmulhuw
outsb
fbstp
sbb
pop
cmp
push
imul
xor
daa
or
hlt
push
add
dec
je
mov
inc
cmp
in
adc
jnp
je
push
or
or
cmp
lock
jnp
stc
mov
repz
call
push
mov
cli
jmp
movl
pop
cmp
mov
out
aaa
fdivrl
sbb
add
lea
inc
mov
push
cld
mov
dec
mov
jne
es
pushl
sbb
add
popf
hlt
inc
int
ljmp
jne
cltd
xor
and
push
sbb
push
pop
dec
adc
jge
pop
and
je
jl
mov
dec
mov
pop
fisubrl
mov
clc
jle
lea
jg
inc
sub
or
scas
cmp
jne
add
clc
inc
nop
add
cltd
and
outsb
scas
jecxz
xor
mov
xor
je
sub
and
in
lcall
mov
add
xchg
or
shr
push
dec
setns
sub
xor
add
pop
or
mov
push
add
lods
xor
jge
mov
push
push
xor
inc
jns
call
jge
mov
or
jne
mov
push
push
das
ss
or
in
add
in
and
sbb
add
fcoms
js
sbb
fstpt
add
mov
jge
call
movsl
lock
js
mov
jb
dec
xor
insb
mov
add
cmp
je
fnstsw
or
sarb
pop
jl
jmp
push
js
rclb
cs
addr16
and
out
jbe
mov
mov
fdivrs
je
sbb
es
popf
sub
inc
and
cmp
bound
cwtl
and
push
xchg
mov
jp
jmp
cmpl
push
insl
loopne
fimuls
ficoml
mov
push
cmp
jle
insb
mov
xor
mov
push
negb
sbb
les
call
dec
rorl
push
int3
pop
stos
lea
dec
mov
adc
and
add
sub
push
enter
mov
stos
and
int3
jo
sub
adc
push
adc
inc
jle
int3
push
push
call
je
mov
in
clc
adc
divb
sbb
inc
adc
ficomps
dec
lret
cmp
mov
inc
lahf
add
xchg
mov
int
negb
nop
int3
mov
loopne
xor
test
in
push
insl
mov
jne
imul
and
in
fxch
enter
fcmovnu
enter
fnstsw
loope
enter
jecxz
jecxz
xor
repnz
xlat
xor
xor
fcomp
fcmovu
xor
xor
or
xor
loopne
loop
mov
jae
loopne
cli
idiv
decl
int
dec
int
xor
jo
cmp
cmpsb
fwait
sbb
and
fwait
inc
sub
xor
andl
aam
mov
fsub
sar
and
idiv
pushl
or
shlb
and
dec
fisttpl
pop
push
push
push
shlb
jge
js
push
cld
out
sbb
sub
push
sbb
std
test
sbb
xchg
nop
push
add
and
adc
jl
add
adc
fbld
mov
add
mov
or
adc
les
imul
jbe
mov
xor
int
xor
outsb
cwtl
mov
mov
sub
add
push
push
rcrl
adc
and
setg
fsubl
je
or
ret
push
insl
adc
imul
inc
outsb
jbe
outsl
outsb
xchg
jb
fcmovnb
aas
jae
jle
xor
cltd
nop
or
lods
push
dec
rolb
lret
mov
and
push
jg
jbe
sarb
or
call
xchg
cmp
and
movl
mov
and
imulb
sbb
stc
pop
dec
outsb
das
call
insb
sbb
push
jns
je
outsl
insb
jae
dec
sbb
stos
add
xchg
adc
pop
cmc
stos
add
sbb
and
xor
lcall
orl
enter
lret
insl
roll
fdivs
out
shll
push
insl
xor
lret
movb
sbb
dec
das
dec
adc
xor
xor
lcall
adc
xor
xor
xor
mov
cwtl
xor
xor
xor
xor
xor
mov
ss
ss
aaa
jbe
mov
xchg
addr16
dec
loop
mov
mov
cmp
cmp
jle
or
sub
jl
mov
xchg
cmp
cmp
cmp
cmp
cmp
pushl
sub
cmp
dec
cmp
cwtl
cmp
or
inc
sbb
dec
cmp
add
test
add
bswap
xor
inc
push
lret
cltd
addb
push
add
add
outsl
jne
arpl
sub
or
mov
aaa
in
pushf
or
sub
add
sbb
push
lods
mov
les
jb
sub
jmp
cmp
push
popf
cwtl
xchg
sbbb
incb
lods
pusha
add
inc
add
adc
add
pusha
fbld
pop
insb
jmp
mov
je
xchg
push
aam
cmp
add
cld
outsb
lmsw
f2xm1
or
push
push
and
arpl
mov
adc
add
test
rolb
push
cmp
nop
fs
adc
mov
jl
push
or
lock
and
add
cs
mov
xor
in
xchg
add
adc
in
jne
push
bound
add
jle
inc
add
add
add
add
add
add
add
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
