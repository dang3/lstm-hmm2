mov
mov
mov
mov
push
mov
pop
push
push
mov
pop
ret
nop
add
pusha
push
push
mov
mov
mov
mov
pop
pop
cld
pusha
mov
test
je
xor
mov
inc
jmp
popa
xor
mov
movsb
mov
call
mov
jae
xor
call
jae
xor
call
mov
jae
mov
inc
mov
call
adc
jae
jne
stos
jmp
call
sub
jne
call
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
lods
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
mov
call
adc
call
jb
ret
sub
mov
popa
ret
inc
or
xchg
jo
xchg
inc
inc
inc
add
xor
cmpl
pop
sbb
jne
int3
pop
lock
call
add
hlt
jae
push
jmp
mov
mov
mov
add
push
stos
mov
int3
dec
adc
mov
sarl
sbb
leave
cmp
je
sbb
mov
shl
or
inc
inc
xchg
cmp
pop
xor
and
sub
jge
sbb
jbe
push
add
xor
ret
sahf
or
add
movl
jae
mov
push
mov
sbb
loope
int
xchg
test
shr
imul
fdivrs
pop
addl
xorb
shr
add
pushl
xchg
add
lea
sub
or
test
fmuls
jl
add
lock
xor
cmp
rcrl
and
xor
jo
xchg
fdivs
mov
sbb
pop
adc
shl
pushf
ficoms
decl
xor
mov
ljmp
add
push
mov
sub
shl
test
decl
sbb
rolb
mov
lea
dec
or
cmp
xor
sub
jae
insb
cli
add
or
nop
les
mov
jp
sub
xchg
pop
xchg
aaa
xchg
jmp
adcb
xor
xchg
mov
pop
sahf
hlt
mov
xor
inc
and
add
adc
or
gs
and
filds
rolb
fwait
adc
sub
push
enter
dec
or
jp
push
shrl
add
sbb
and
add
inc
cmp
inc
fmull
call
and
rcl
jecxz
setge
dec
and
stc
stc
add
enter
jmp
filds
mov
inc
mov
xor
test
xlat
inc
xchg
enter
xorl
shll
sub
andl
jmp
clc
or
jns
enter
and
inc
icebp
add
pop
dec
insb
mov
adc
pop
sbb
inc
mov
add
mov
mov
test
xorb
sbb
and
inc
or
mov
mov
lock
pop
sub
push
mov
mov
xchg
mov
adc
inc
add
mov
adc
jmp
cltd
in
xor
nop
ss
test
adc
jmp
cmpsl
push
pop
ret
shll
pushl
shrb
and
mov
adc
push
and
dec
sbb
inc
dec
mov
push
inc
or
hlt
jb
adc
or
into
or
mov
sbb
lea
or
inc
xor
xchg
adc
or
aam
dec
add
les
mov
mov
sbb
shrl
inc
adc
mov
sti
loop
sarb
push
push
aam
pop
movsl
cmc
inc
push
add
cmp
test
xor
cli
shr
mov
cmp
adc
xlat
mov
fwait
aam
or
cwtl
shl
jmp
sub
xor
adc
xor
mov
bound
adc
pop
mov
pop
cmp
out
mov
pop
loopne
lea
pop
inc
sti
add
inc
jmp
pop
lcall
bound
and
cmc
shr
popf
movsb
sub
lods
lret
xor
xor
inc
adc
out
test
adc
lea
test
cmp
inc
cmp
jl
inc
lods
shll
dec
or
add
lcall
rcrb
mov
push
sbbb
push
dec
ds
add
and
dec
addr16
pop
rorl
cmp
jb
sub
or
push
psllq
add
out
enter
stos
pop
test
xchg
movsb
xor
mov
adc
jmp
popa
shlb
sub
inc
insl
sub
xchg
sub
lea
jge
mov
gs
adc
lea
jmp
cli
pop
inc
mov
je
inc
push
mov
mov
jae
mov
dec
divl
push
enter
xorl
sbb
loope
or
subb
jecxz
mov
adcb
pushf
jne
mov
push
loope
or
mov
pop
pop
leave
ret
addb
inc
add
call
adc
add
jnp
add
mov
add
adc
add
add
add
add
add
add
add
sbb
add
add
push
add
add
add
add
add
addb
add
add
add
dec
add
add
add
add
add
les
mov
jmp
pusha
push
mov
sub
xor
movl
movl
movl
movl
mov
mov
pusha
mov
mov
mov
mov
mov
mov
mov
add
add
mov
lea
mov
mov
mov
add
dec
nop
test
nop
je
lea
mov
add
push
push
mov
add
mov
pop
repz
test
pop
jne
mov
add
mov
movzwl
mov
add
mov
add
mov
jmp
movl
popa
mov
xor
cmp
je
mov
cmp
je
lea
push
push
movb
movb
movb
movw
nop
nop
movw
nop
nop
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
nop
nop
mov
nop
nop
call
nop
add
inc
add
add
pop
mov
sub
push
push
mov
push
push
push
call
pop
mov
push
push
push
push
inc
mov
push
push
push
mov
add
mov
mov
add
mov
pop
mov
mov
add
push
mov
add
call
push
push
mov
push
push
call
pop
push
push
push
pushl
push
push
push
mov
push
push
call
pop
push
push
push
pushl
pushl
mov
push
push
pushl
push
pushl
mov
add
push
push
push
mov
call
pop
mov
add
mov
mov
push
mov
push
mov
push
mov
push
xor
mov
rep
mov
lods
mov
lods
mov
add
lods
mov
rep
dec
jne
pop
pop
pop
mov
test
je
mov
inc
sub
cmp
ja
mov
cmp
jne
xor
bswap
add
sub
stos
loop
push
lods
test
je
mov
add
push
call
mov
lods
test
jne
lods
test
je
sub
lods
test
jne
sub
push
push
call
stos
jmp
and
push
push
call
stos
jmp
pop
pop
ret
add
fimuls
nop
lea
mov
pop
cmpsb
lret
es
movsl
xchg
pop
sbb
xchg
sbb
pushf
loop
jle
notl
inc
mov
pushl
pop
shlb
enter
and
xchg
ljmp
xchg
xchg
mov
xor
mov
mov
sub
pop
dec
cmp
adc
cmp
xor
imulb
xchg
jecxz
jb
mov
jg
stos
int
pusha
dec
push
mov
push
cmp
nop
mov
pop
popf
outsl
cli
jne
mov
pop
mov
mov
pop
dec
into
pop
in
or
int3
mov
sti
loopne
sub
xor
loop
ret
dec
aas
pop
and
inc
lea
mov
repnz
rclb
sbb
mov
inc
test
fxch
das
in
jb
dec
outsb
mov
xchg
or
aaa
pushf
leave
loope
add
xor
sub
jl
mov
cmp
adc
hlt
inc
adc
daa
mov
jecxz
mov
jp
mov
stos
dec
pusha
xor
push
push
or
or
push
mov
cmp
cmp
inc
xchg
fwait
mov
frstor
sbb
push
lods
lret
ror
rolb
iret
aad
icebp
insb
mov
pushf
add
iret
imul
and
xor
push
adc
ret
in
inc
stos
loope
pop
xchg
mov
mov
lds
lock
mov
lahf
push
cmp
popf
add
pop
test
repz
test
mov
mov
mov
test
sti
mov
xchg
adc
ja
mov
or
dec
push
gs
pop
movsl
arpl
ret
insl
push
pop
pop
jl
xchg
jnp
insl
cmp
scas
pop
add
mov
adc
lahf
movsl
pop
gs
repz
push
jmp
jg
cmc
jecxz
mov
gs
mov
cmpsl
shl
repz
aad
sbb
dec
cld
sub
.byte
dec
add
add
sbb
add
add
push
add
add
add
add
add
addb
add
add
add
dec
add
add
add
add
add
les
mov
jmp
pusha
push
mov
sub
xor
movl
movl
movl
movl
mov
mov
pusha
mov
mov
mov
mov
mov
mov
mov
add
add
mov
lea
mov
mov
mov
add
dec
nop
test
nop
je
lea
mov
add
push
push
mov
add
mov
pop
repz
test
pop
jne
mov
add
mov
movzwl
mov
add
mov
add
mov
jmp
movl
popa
mov
xor
cmp
je
mov
cmp
je
lea
push
push
movb
movb
movb
movw
nop
nop
movw
nop
nop
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
nop
nop
mov
nop
nop
call
nop
add
inc
add
add
pop
mov
sub
push
push
mov
push
push
push
call
pop
mov
push
push
push
push
inc
mov
push
push
push
mov
add
mov
mov
add
mov
pop
mov
mov
add
push
mov
add
call
push
push
mov
push
push
call
pop
push
push
push
pushl
push
push
push
mov
push
push
call
pop
push
push
push
pushl
pushl
mov
push
push
pushl
push
pushl
mov
add
push
push
push
mov
call
pop
mov
add
mov
mov
push
mov
push
mov
push
mov
push
xor
mov
rep
mov
lods
mov
lods
mov
add
lods
mov
rep
dec
jne
pop
pop
pop
mov
test
je
mov
inc
sub
cmp
ja
mov
cmp
jne
xor
bswap
add
sub
stos
loop
push
lods
test
je
mov
add
push
call
mov
lods
test
jne
lods
test
je
sub
lods
test
jne
sub
push
push
call
stos
jmp
and
push
push
call
stos
jmp
pop
pop
ret
add
fimuls
nop
lea
mov
pop
cmpsb
lret
es
movsl
xchg
pop
sbb
xchg
sbb
pushf
loop
jle
notl
inc
mov
pushl
pop
shlb
enter
and
xchg
ljmp
xchg
xchg
mov
xor
mov
mov
sub
pop
dec
cmp
adc
cmp
xor
imulb
xchg
jecxz
jb
mov
jg
stos
int
pusha
dec
push
mov
push
cmp
nop
mov
pop
popf
outsl
cli
jne
mov
pop
mov
mov
pop
dec
into
pop
in
or
int3
mov
sti
loopne
sub
xor
loop
ret
dec
aas
pop
and
inc
lea
mov
repnz
rclb
sbb
mov
inc
test
fxch
das
in
jb
dec
outsb
mov
xchg
or
aaa
pushf
leave
loope
add
xor
sub
jl
mov
cmp
adc
hlt
inc
adc
daa
mov
jecxz
mov
jp
mov
stos
dec
pusha
xor
push
push
or
or
push
mov
cmp
cmp
inc
xchg
fwait
mov
frstor
sbb
push
lods
lret
ror
rolb
iret
aad
icebp
insb
mov
pushf
add
iret
imul
and
xor
push
adc
ret
in
inc
stos
loope
pop
xchg
mov
mov
lds
lock
mov
lahf
push
cmp
popf
add
pop
test
repz
test
mov
mov
mov
test
sti
mov
xchg
adc
ja
mov
or
dec
push
gs
pop
movsl
arpl
ret
insl
push
pop
pop
jl
xchg
jnp
insl
cmp
scas
pop
add
mov
adc
lahf
movsl
pop
gs
repz
push
jmp
jg
cmc
jecxz
mov
gs
mov
cmpsl
shl
repz
aad
sbb
dec
cld
sub
orl
orb
mov
xchg
cmp
jns
rcrb
mov
mov
lods
popf
and
lcall
sbb
pop
es
jno
std
adc
sbbb
pop
gs
sbb
cmp
sub
mov
fstpt
jge
inc
mov
pop
cmp
insl
scas
lods
or
mov
aad
cmp
inc
loopne
mov
inc
and
jbe
imul
pop
cmpsl
lret
jle
inc
aad
popa
test
arpl
dec
adc
cli
sti
in
jmp
iret
cmc
faddl
fdivr
js
pop
pop
cltd
sub
popf
scas
push
clc
jg
mov
mov
cwtl
add
leave
push
mov
mov
imul
ss
imul
xchg
sbb
into
mov
call
rcrl
les
aam
repz
lods
sbb
mov
push
jg
sbb
cld
pop
inc
and
xchg
jo
adc
out
aam
sbb
jmp
pop
out
xchg
pop
pop
addr16
js
mov
push
sub
pop
mov
mov
sub
sbb
cmp
dec
inc
mov
mov
loope
and
cwtl
daa
jno
hlt
inc
jg
jmp
shlb
mov
movsb
inc
sbb
ljmp
fs
rclb
xor
lods
and
mov
push
mov
aam
rcrl
popl
jo
je
cmp
icebp
mov
inc
mov
leave
fcoms
mov
dec
loope
inc
aad
adc
push
or
mov
in
dec
out
das
lret
jno
push
fdiv
add
cmpb
pop
bound
mov
and
sbb
xor
push
add
sbb
xchg
and
add
adc
pop
call
cmpsl
jle
push
scas
mov
test
or
popf
bswap
and
push
xchg
outsb
xchg
cltd
shlb
fidivrl
nop
add
cmp
dec
jb
jnp
pop
and
pop
bnd
mov
and
popf
jb
push
jae
sub
jnp
test
jnp
lods
mov
inc
cs
jae
or
and
jo
movsl
push
shl
sub
mov
and
sbb
mov
push
xlat
sbb
stos
popa
jb
pusha
mov
cmc
inc
insl
scas
add
mov
dec
repnz
add
popf
int
shrw
mov
cmpsb
push
leave
or
imul
add
add
add
arpl
bnd
imul
sti
or
nop
inc
or
dec
mov
mov
add
add
sbb
add
add
push
add
add
add
add
add
addb
add
add
add
dec
add
add
add
add
add
les
mov
jmp
pusha
push
mov
sub
xor
movl
movl
movl
movl
mov
mov
pusha
mov
mov
mov
mov
mov
mov
mov
add
add
mov
lea
mov
mov
mov
add
dec
nop
test
nop
je
lea
mov
add
push
push
mov
add
mov
pop
repz
test
pop
jne
mov
add
mov
movzwl
mov
add
mov
add
mov
jmp
movl
popa
mov
xor
cmp
je
mov
cmp
je
lea
push
push
movb
movb
movb
movw
nop
nop
movw
nop
nop
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
nop
nop
mov
nop
nop
call
nop
add
inc
add
add
pop
mov
sub
push
push
mov
push
push
push
call
pop
mov
push
push
push
push
inc
mov
push
push
push
mov
add
mov
mov
add
mov
pop
mov
mov
add
push
mov
add
call
push
push
mov
push
push
call
pop
push
push
push
pushl
push
push
push
mov
push
push
call
pop
push
push
push
pushl
pushl
mov
push
push
pushl
push
pushl
mov
add
push
push
push
mov
call
pop
mov
add
mov
mov
push
mov
push
mov
push
mov
push
xor
mov
rep
mov
lods
mov
lods
mov
add
lods
mov
rep
dec
jne
pop
pop
pop
mov
test
je
mov
inc
sub
cmp
ja
mov
cmp
jne
xor
bswap
add
sub
stos
loop
push
lods
test
je
mov
add
push
call
mov
lods
test
jne
lods
test
je
sub
lods
test
jne
sub
push
push
call
stos
jmp
and
push
push
call
stos
jmp
pop
pop
ret
add
fimuls
nop
lea
mov
pop
cmpsb
lret
es
movsl
xchg
pop
sbb
xchg
sbb
pushf
loop
jle
notl
inc
mov
pushl
pop
shlb
enter
and
xchg
ljmp
xchg
xchg
mov
xor
mov
mov
sub
pop
dec
cmp
adc
cmp
xor
imulb
xchg
jecxz
jb
mov
jg
stos
int
pusha
dec
push
mov
push
cmp
nop
mov
pop
popf
outsl
cli
jne
mov
pop
mov
mov
pop
dec
into
pop
in
or
int3
mov
sti
loopne
sub
xor
loop
ret
dec
aas
pop
and
inc
lea
mov
repnz
rclb
sbb
mov
inc
test
fxch
das
in
jb
dec
outsb
mov
xchg
or
aaa
pushf
leave
loope
add
xor
sub
jl
mov
cmp
adc
hlt
inc
adc
daa
mov
jecxz
mov
jp
mov
stos
dec
pusha
xor
push
push
or
or
push
mov
cmp
cmp
inc
xchg
fwait
mov
frstor
sbb
push
lods
lret
ror
rolb
iret
aad
icebp
insb
mov
pushf
add
iret
imul
and
xor
push
adc
ret
in
inc
stos
loope
pop
xchg
mov
mov
lds
lock
mov
lahf
push
cmp
popf
add
pop
test
repz
test
mov
mov
mov
test
sti
mov
xchg
adc
ja
mov
or
dec
push
gs
pop
movsl
arpl
ret
insl
push
pop
pop
jl
xchg
jnp
insl
cmp
scas
pop
add
mov
adc
lahf
movsl
pop
gs
repz
push
jmp
jg
cmc
jecxz
mov
gs
mov
cmpsl
shl
repz
aad
sbb
dec
cld
sub
orl
orb
mov
xchg
cmp
jns
rcrb
mov
mov
lods
popf
and
lcall
sbb
pop
es
jno
std
adc
sbbb
pop
gs
sbb
cmp
sub
mov
fstpt
jge
inc
mov
pop
cmp
insl
scas
lods
or
mov
aad
cmp
inc
loopne
mov
inc
and
jbe
imul
pop
cmpsl
lret
jle
inc
aad
popa
test
arpl
dec
adc
cli
sti
in
jmp
iret
cmc
faddl
fdivr
js
pop
pop
cltd
sub
popf
scas
push
clc
jg
mov
mov
cwtl
add
leave
push
mov
mov
imul
ss
imul
xchg
sbb
into
mov
call
rcrl
les
aam
repz
lods
sbb
mov
push
jg
sbb
cld
pop
inc
and
xchg
jo
adc
out
aam
sbb
jmp
pop
out
xchg
pop
pop
addr16
js
mov
push
sub
pop
mov
mov
sub
sbb
cmp
dec
inc
mov
mov
loope
and
cwtl
daa
jno
hlt
inc
jg
jmp
shlb
mov
movsb
inc
sbb
ljmp
fs
rclb
xor
lods
and
mov
push
mov
aam
rcrl
popl
jo
je
cmp
icebp
mov
inc
mov
leave
fcoms
mov
dec
loope
inc
aad
adc
push
or
mov
in
dec
out
das
lret
jno
push
fdiv
add
cmpb
pop
bound
mov
and
sbb
xor
push
add
sbb
xchg
and
add
adc
pop
call
cmpsl
jle
push
scas
mov
test
or
popf
bswap
and
push
xchg
outsb
xchg
cltd
shlb
fidivrl
nop
add
cmp
dec
jb
jnp
pop
and
pop
bnd
mov
and
popf
jb
push
jae
sub
jnp
test
jnp
lods
mov
inc
cs
jae
or
and
jo
movsl
push
shl
sub
mov
and
sbb
mov
push
xlat
sbb
stos
popa
jb
pusha
mov
cmc
inc
insl
scas
add
mov
dec
repnz
add
popf
int
shrw
mov
cmpsb
push
leave
or
imul
add
add
add
arpl
bnd
imul
sti
or
nop
inc
or
dec
mov
mov
out
scas
sti
iret
rcl
adcl
scas
mov
lds
daa
jne
and
lcall
mov
outsb
cwtl
push
psubusb
cltd
rcrb
and
arpl
loopne
lcall
outsl
xlat
mov
ss
das
pop
das
loopne
xchg
sarl
adcl
out
imul
fimuls
push
adc
sub
jb
pop
stc
sbb
lahf
ss
sub
out
aas
pop
mov
pop
lock
vaddsubpd
js
xlat
cmp
imul
jae
inc
add
adc
lret
lea
xchg
mov
ljmp
mov
xor
and
popf
jne
in
mov
pop
iret
rorb
jecxz
flds
iret
bound
and
mov
popf
cmp
mov
stc
aas
mov
mov
pop
xlat
insb
sbb
and
in
or
push
pop
jnp
popw
push
lea
sahf
icebp
adc
jo
fnstsw
fdivr
push
inc
negb
je
jnp
loop
mov
andb
out
mov
stc
in
cmc
jns
test
rorl
or
fsts
jmp
les
cli
aam
out
jb
sahf
sub
in
scas
sahf
mov
addr16
arpl
inc
outsb
dec
sub
fwait
mov
pop
shrb
aaa
push
push
lahf
sarb
push
fdivrs
sbb
adc
mov
mov
out
add
lock
sub
lds
xor
fcmovb
aas
cmpsb
push
mov
gs
inc
jge
inc
das
cwtl
scas
ficompl
pop
pushf
test
sbb
leave
add
adc
bound
testl
or
inc
push
aaa
and
or
hlt
leave
std
outsb
add
ja
mov
xchg
xchg
cli
scas
gs
out
fidivl
and
and
test
enter
mov
xchg
ret
sub
loopne
js
jae
xchg
push
or
mov
nop
xchg
loopne
in
mov
adc
cmp
mov
andl
bound
inc
jae
shrl
xor
imul
mov
ret
out
add
sbb
pop
test
sub
sbb
daa
mov
xor
and
sahf
fnstenv
lock
mov
adc
scas
pop
or
jp
das
jmp
push
cmpsb
push
data16
daa
inc
nop
mov
sub
xchg
negl
ret
lea
test
mov
sbb
lcall
imul
insl
sbb
xchg
cmp
sbb
sbb
or
mov
enter
sbbb
fisubl
jp
in
test
clc
and
cli
jmp
imul
movsb
pop
dec
pop
shr
push
test
or
pop
cmpsl
orb
push
push
stc
movl
xchg
cs
aas
imul
movsb
xchg
in
popa
lock
xor
sbb
add
std
lds
shrb
int
movb
adc
pop
mov
aaa
ss
sahf
ds
mov
mov
jp
test
out
pop
cld
push
cmp
daa
shrl
addl
daa
mov
dec
add
adc
inc
cmp
mov
cmp
rorb
mov
test
mov
mov
push
mov
xchg
jle
sarl
add
call
mov
inc
dec
pop
sbb
sbb
inc
dec
sub
cli
rcll
mov
fadd
inc
mov
jne
adc
ret
mov
repnz
cmp
jge
jne
cmpsb
jo
xchg
adc
arpl
movzbl
js
inc
scas
lds
int
add
cwtl
fisubrl
fisttpl
xchg
pop
sbb
inc
push
mov
jns
scas
fmulp
lret
lods
popf
cmpsl
imul
dec
aam
fs
sbb
fisubrs
aam
out
add
mov
sub
insl
cmp
jl
js
mov
test
in
hlt
xor
fcmovbe
xchg
mov
in
xor
mov
mov
dec
icebp
repnz
cmp
xchg
inc
adc
pop
andb
cmp
notl
sbb
mov
sub
insl
shlb
cli
push
push
inc
add
xor
and
call
and
and
lret
aad
or
dec
pop
add
test
add
lea
je
repnz
scas
in
add
cmp
push
pop
out
filds
das
pop
ret
jno
pop
pop
push
test
pushf
fwait
or
dec
lret
jne
andb
pop
push
ss
adcb
lea
std
push
popf
pop
push
jl
and
das
sub
cmpsb
out
mov
repz
popa
dec
ljmp
mov
and
dec
jge
sbb
js
mov
xor
ja
push
pop
cli
mov
jne
ret
fcompl
mov
enter
push
rcll
sbb
cld
or
insl
in
mov
fmuls
push
mov
mov
add
or
in
rcrl
adc
inc
shrb
sub
xchg
sbb
sub
push
and
pusha
rclb
lret
pop
shrb
xor
movsl
inc
out
xchg
cmp
test
ja
inc
sub
xor
jno
push
inc
shll
pushl
cmc
ss
jno
cwtl
rcl
js
jae
and
xor
enter
stos
pop
popf
and
or
in
sbb
dec
andb
cmp
sbb
jnp
xchg
imul
pop
jl
jb
sub
jp
jns
cmp
pop
cmp
jle
cmpsl
inc
mov
sbb
ret
ret
cmp
fwait
and
cwtl
js
inc
lret
mov
arpl
push
xchg
cmp
inc
mov
aaa
mov
lahf
jle
xor
mov
or
jbe
int3
cltd
subb
cld
cmc
jle
mov
mov
sub
mov
popa
shl
scas
and
aaa
fsubp
xchg
imul
mov
xchg
xchg
cld
mov
xor
insl
imul
cltd
pop
dec
inc
sbb
push
int
outsl
pop
or
in
cmp
out
pop
mov
dec
sbb
imul
pop
cmpsb
sub
leave
das
mov
movnti
cld
add
leave
mov
ja
pop
dec
int3
es
inc
jmp
and
int3
fxch
push
hlt
lea
jns
imul
push
xor
aas
lcall
divb
xchg
js
dec
inc
ss
scas
scas
movsb
rorl
cli
push
jns
push
addl
ret
adc
in
mov
int
dec
test
xchg
dec
insl
sub
inc
mov
int3
in
rol
or
lret
movsb
jmp
xor
cli
daa
xor
mov
repnz
or
lret
mov
lods
lods
adc
sahf
repnz
out
dec
icebp
xlat
cmp
sub
out
lret
imull
gs
sbb
in
js
cmpsb
cs
jecxz
jne
shrb
mov
ja
popa
push
push
into
push
cmpsl
add
pusha
loope
push
xor
mov
ss
outsb
push
cmp
xor
xchg
mov
or
icebp
cltd
jge
inc
sub
les
cmc
lahf
insl
cmp
addl
fstpl
insl
xchg
mov
in
push
add
out
jg
and
pop
idivl
js
dec
mov
imul
notl
rcll
jl
scas
aas
jbe
daa
popa
jno
iret
mov
jbe
insl
jecxz
sti
test
sahf
and
xor
push
addr16
insb
mov
jmp
dec
lahf
xchg
int3
jecxz
mov
add
imul
dec
xchg
cwtl
fildll
pop
lret
and
push
fisttpll
xlat
mov
inc
loope
popa
mov
fsubrp
jae
sbb
shrb
in
mov
mov
adc
and
imul
ja
or
jbe
pushf
mov
push
gs
int
sarb
ret
leave
fcmovnb
dec
add
jle
jb
xchg
sbb
outsb
jb
in
cmp
subb
sbb
dec
xor
push
pop
mov
cs
mov
cwtl
sub
and
pushf
es
ja
xchg
xchg
scas
lods
mov
loop
inc
mov
inc
fcomip
jecxz
xor
jp
push
es
rol
cmpsb
cwtl
stc
adc
fdivr
sub
dec
push
mov
int3
or
push
mov
lahf
out
lcall
gs
bound
adcl
xor
rorl
push
pushl
in
add
push
stos
xchg
aaa
mov
out
jecxz
enter
fisttpll
cltd
mov
cld
mov
mov
pop
dec
mov
out
call
fyl2x
xlat
aaa
mov
and
in
insb
jns
inc
fstps
push
ds
or
or
mov
insl
dec
pop
inc
movsb
or
dec
ret
out
sub
add
es
test
movsl
jbe
maskmovq
xor
loope
inc
in
lods
sbb
das
dec
scas
jcxz
sub
loop
cs
flds
jne
mov
mov
sub
repnz
ret
mov
xor
mov
sbb
iret
push
data16
js
pop
xor
push
add
outsl
cld
fnstsw
arpl
sbb
bound
mov
bound
int3
enter
inc
adc
mov
popf
in
cmp
div
pop
les
add
lret
lods
or
pop
xchg
cmp
mov
aam
aas
mov
mov
push
sbb
test
sub
loopne
jne
int3
pop
push
mov
inc
in
and
add
negb
mov
jbe
pop
and
pusha
jb
stos
dec
or
or
sti
std
js
test
lcall
mov
dec
jmp
repz
xor
xchg
cwtl
mov
cmp
sarl
cmp
and
sub
xlat
sbb
xor
jmp
outsl
jne
jg
enter
mov
outsb
fstl
cmp
jmp
sub
mov
test
stc
or
dec
stc
nop
and
xchg
inc
fimull
jns
popa
dec
movsb
cmp
imul
nop
lods
roll
mov
movsl
xor
movsl
sti
mov
sbb
or
scas
pop
mov
int3
push
in
cmp
mov
xchg
or
mov
nop
outsl
pop
and
lock
ret
sub
shrl
xchg
push
lods
pop
aad
pop
xchg
and
and
movsl
movsl
fcoml
mov
dec
or
icebp
xchg
int3
stc
cmpsb
add
pop
cwtl
fadds
mov
sub
pop
mov
leave
cld
imul
add
push
push
sub
mov
mov
mov
mov
cmp
shl
adc
or
hlt
loope
outsb
stos
and
sub
ljmp
mov
popf
popf
pop
pop
sbb
icebp
mov
je
cmp
cmp
add
lcall
mov
cmp
xchg
stc
pusha
test
push
xchg
cmp
and
sub
cmp
sbb
lret
sub
cmp
and
push
mov
sub
jne
out
cmpsl
leave
aaa
int
or
cmp
addb
mov
sub
or
mov
fadds
and
pop
xor
fsubl
lds
xchg
not
fstl
test
ss
js
test
push
xor
jo
lahf
lcall
xchg
add
mov
sbb
push
out
jns
mov
inc
faddl
lahf
rcll
push
jno
jno
gs
push
test
sbb
fcoms
test
jp
movsb
or
cmp
loope
push
or
lahf
std
aaa
lods
cmp
mov
sbb
insb
xchg
adc
aas
test
leave
out
insl
fcmovne
mov
adc
insl
das
push
jo
mov
push
jne
cmp
xor
mov
fnsave
push
xor
imul
divb
ret
dec
fnsave
sahf
mov
inc
mov
dec
icebp
and
imul
mov
popf
adc
inc
adc
sahf
scas
fldcw
cmp
adcb
cmp
lahf
cmp
jge
xor
in
fmull
aas
jecxz
enter
mov
out
pop
lret
push
insb
nop
fildl
pop
push
jae
jmp
cli
xor
push
xchg
or
popa
pop
jmp
pop
movsl
xchg
lcall
cmp
scas
push
loope
dec
inc
push
sbb
xor
xchg
hlt
in
mov
pushf
add
pop
addr16
sbb
fwait
sahf
jg
fmull
ficomps
adc
push
mov
push
inc
adc
cli
cmp
pavgw
dec
test
ror
cmp
mov
sti
mov
jns
cli
scas
in
jmp
je
hlt
pop
stos
cwtl
test
mov
xchg
outsl
or
sbb
lods
pop
jg
push
repnz
lock
decl
add
cltd
jnp
jmp
mov
jmp
push
out
icebp
fdivrs
and
sbb
cmpsb
movsb
movsb
aam
mov
sahf
add
mov
mov
cmpsl
cltd
lea
lret
ret
mov
scas
roll
push
aam
adc
cmp
cmp
pop
xor
and
incl
imul
xor
rcrb
mov
arpl
popf
jg
xor
aad
jmp
xchg
jbe
adc
sbb
loop
repnz
testl
cmp
les
decl
hlt
out
pop
test
arpl
shll
inc
fs
icebp
leave
sti
pop
jp
enter
or
pop
in
adc
sahf
or
sbbl
cmp
sub
cltd
aad
pop
mov
fs
xchg
pop
inc
xor
xchg
sti
arpl
ja
js
out
adc
push
test
mov
inc
sbb
test
leave
mov
push
mov
enter
lcall
leave
mov
iret
nop
lock
push
arpl
ret
xor
int
inc
lods
out
and
lock
test
xor
cwtl
roll
sbbb
xor
push
fs
jbe
aad
fadds
push
adc
test
mov
sbbl
xorl
repz
aaa
pop
lahf
and
addl
fwait
int3
mov
pop
cmp
mov
mov
lods
sbb
cmp
call
fstl
add
pop
scas
das
mov
leave
rorb
aad
insl
lods
out
leave
pusha
gs
insl
xchg
inc
loope
dec
jge
xchg
or
dec
sub
imul
stc
js
in
mov
pop
xchg
mov
enter
mov
sbb
sub
mov
outsb
imul
mov
into
jb
int
ret
mov
out
outsl
divb
xchg
or
push
lret
xchg
dec
cmpl
dec
in
loop
sbb
pusha
test
pop
jge
es
cmpsl
push
pop
iret
icebp
pop
mov
ret
clc
mov
inc
cmp
push
push
cmpsl
cmp
stc
cmp
sbb
jo
mov
divl
mov
ljmp
xor
int
mov
cmp
push
movsl
xchg
sti
mov
cltd
andl
nop
xchg
jne
test
mov
adc
mov
inc
imul
push
push
stos
xchg
enter
into
clc
fistpll
movsl
dec
sub
sub
jne
test
into
pop
mov
mov
scas
sbb
adc
push
int
pop
daa
adc
jle
pop
xchg
sahf
jmp
fmulp
inc
imul
xchg
jle
inc
aad
pop
sbb
lds
pop
stc
and
cmp
and
cwtl
xor
or
mov
loope
sub
ret
mov
push
pop
lcall
adc
dec
pop
xchg
sbb
mov
xchg
or
aaa
lret
fdivs
mov
or
sub
adc
mov
dec
stos
jmpw
not
dec
mov
in
fsubl
dec
repz
scas
and
pop
sub
cmp
lds
daa
add
ret
inc
dec
das
and
xchg
imul
popf
ret
enter
add
jmp
test
out
lcall
sub
test
fadds
xchg
es
and
lds
icebp
lds
arpl
test
cmpsl
hlt
in
xchg
dec
mov
test
test
mov
stos
jo
pop
push
stos
aas
dec
test
cmp
ret
rolb
xchg
inc
int
aam
cmp
out
fidivl
or
jno
cmp
ret
push
das
add
dec
sbb
fisubs
mov
add
pop
pop
call
xchg
add
sbb
jp
jle
in
and
scas
shl
sub
test
imul
mov
int3
lods
pop
scas
cli
jnp
pop
push
int3
push
movsl
ja
dec
or
das
lret
sub
or
js
sar
sub
cmc
mov
lods
xchg
cmp
or
das
mov
cs
fldl
pop
iret
jle
xchg
cmp
adc
mov
shll
subl
aas
xchg
mov
mov
fsubp
mov
xor
in
add
cmp
lret
stos
outsb
and
movsl
or
loopne
fcoms
mov
fmulp
sub
scas
inc
popl
mov
push
icebp
mov
jp
sar
inc
mov
xchg
mov
xor
enter
fcoms
mov
xor
mov
int3
das
add
push
iret
in
jge
stos
push
mov
nop
movsl
xlat
push
movsb
popf
ret
push
sub
xor
les
push
jb
adc
push
in
fidivs
mov
insl
lds
mov
mov
push
aad
int3
pop
pop
mov
mov
fs
inc
adc
xchg
stc
or
and
subl
sub
scas
fisttps
jecxz
adc
imul
mov
pop
jp
dec
insb
ret
out
dec
fidivrs
addr16
dec
mov
cltd
or
and
fstpt
mov
popf
xor
bound
rorb
pop
mov
push
mov
out
push
add
mov
pop
cmp
lock
fdivrs
cli
add
or
dec
mov
lods
add
push
pusha
xchg
scas
fildll
imul
mov
mov
ss
push
lds
insb
or
add
js
dec
lea
adc
orb
add
dec
enter
jge
cmp
pop
or
adc
cltd
mov
je
sub
hlt
scas
mov
aas
mov
daa
xor
lock
inc
cmpsl
add
xchg
mov
frstor
lret
iret
scas
adc
adc
ja
cmc
xor
jbe
push
movsb
filds
pop
jmp
lahf
sub
xchg
cmp
les
jno
or
not
out
pop
movsl
push
xchg
pop
inc
mov
scas
xlat
fcoml
adc
push
inc
lock
jae
and
mov
iret
sbb
cmp
rclb
mov
fstpl
mov
cs
fldlg2
incb
insb
mov
cmp
jo
clc
add
das
adc
inc
and
xchg
lea
inc
je
lods
xlat
xor
repz
stos
aaa
cmpsl
xchg
xor
inc
jmp
ljmp
mov
jle
xor
and
xchg
outsl
cli
cs
sub
outsb
mov
cmpsb
xchg
adc
mov
mov
mov
and
xor
push
je
divb
cmpb
adc
je
jo
cli
mov
cmc
jmp
enter
test
push
push
andb
push
xchg
xchg
xor
push
and
ss
sub
test
dec
aad
and
flds
push
mov
cmp
andl
mov
xchg
outsl
out
inc
cmp
inc
icebp
mov
dec
outsb
and
negl
or
std
jnp
mov
imul
lock
or
loopne,pn
je
dec
mov
adc
mov
inc
insl
mov
mov
push
add
cltd
jbe
add
cwtl
lcall
or
adc
jge
ret
sbb
xor
inc
enter
movsl
and
xlat
pop
push
xchg
or
scas
mov
js
enter
push
in
and
ja
xchg
jae
inc
inc
cwtl
mov
push
add
push
xorl
sbb
in
push
or
cmp
xchg
imul
popf
je
bnd
sub
insl
mov
pop
test
sbb
test
daa
push
aaa
gs
mov
ret
mov
mov
lcall
jmp
xchg
icebp
jbe
mov
test
add
andb
sbb
lret
dec
inc
lcall
daa
sbb
insl
clc
sbb
push
mov
pusha
cmp
xchg
aaa
rorb
addr16
mov
pop
sub
lea
cmc
pop
add
aaa
not
adc
sbb
adc
into
pop
push
push
rol
inc
mov
mov
adc
wbinvd
push
xor
xchg
fwait
dec
gs
aaa
call
insl
xor
mov
pop
jae
mov
cmp
cmpsl
jo
fidivrs
fucom
sub
and
fnstsw
js
sbb
lock
repnz
test
mov
add
pop
push
xor
pop
pop
sarb
pop
pop
add
pop
jb
add
cld
sbb
add
add
aaa
lea
stc
test
les
lods
dec
xchg
ret
stc
idivb
int3
add
or
pop
inc
pop
sub
inc
or
stc
cmp
ficompl
push
out
cmpsl
push
mov
adc
xor
push
rcr
fnsave
imulb
pop
cmp
xor
mov
call
mov
gs
arpl
fwait
xchg
mov
pop
pop
jg
rolb
mov
outsb
out
jb
xor
adc
push
mov
pop
fwait
xor
test
fisttpll
jnp
mov
or
xchg
outsl
out
test
inc
sub
lock
sti
cmp
in
or
int3
add
les
das
add
jecxz
aam
push
and
inc
aas
push
push
mov
mov
inc
add
cli
test
fdivr
jo
xchg
mov
js
lcall
mov
or
dec
out
and
xor
icebp
fstps
or
mov
fistl
in
or
inc
enter
inc
cmpsb
sbb
stos
inc
dec
loope
mov
sbb
scas
fmul
inc
not
inc
shl
cltd
or
in
loopne
push
xchg
mov
hlt
jp
push
ss
mov
fsts
mov
ds
ret
xor
and
sarb
push
movsl
mov
cltd
pop
out
and
cmc
test
jge
mov
gs
pop
xchg
jae
jae
ficoml
in
sbb
xchg
orb
loope
adc
cltd
pop
or
dec
sub
push
aad
loopne
fdivrl
nop
fistl
cmp
add
mov
daa
inc
jg
mov
fwait
shlb
popa
sbb
mov
daa
int3
shr
in
xchg
outsl
loopne
out
loop
shl
mov
imul
xor
mov
xor
arpl
out
and
cld
sahf
or
adc
in
into
jp
and
cmp
mov
or
dec
inc
fisttpl
push
jnp,pn
lds
and
sub
add
or
dec
pop
jl
rcrl
cwtl
and
adc
aas
dec
mov
popf
sarl
or
sbb
dec
pushf
fadds
sbb
lahf
xlat
dec
push
cmc
subb
adc
add
inc
lods
inc
movsl
jno
jl
movsl
xchg
inc
out
fdivs
jge
dec
mov
cmp
mov
and
mov
mov
inc
jnp
xchg
es
jns
loop
adc
mov
mov
call
sub
or
xchg
cltd
movsb
and
scas
sub
in
out
ret
rcll
movl
rcrl
push
lods
pop
lcall
sub
mov
jb
push
mov
add
jno
jb
jbe
xlat
dec
pop
inc
or
or
jo
mov
sbb
stos
test
fstps
jno
dec
mov
in
ret
movsl
dec
fcomps
out
insl
jle
mov
sti
je
aas
push
push
sti
mov
insb
mov
lcall
dec
iret
nop
pop
icebp
push
popa
or
mov
push
and
push
dec
inc
incl
adc
int
arpl
shrb
push
inc
mov
cmp
sbb
repnz
mov
push
jg
ljmp
or
rol
dec
aad
add
pop
rsm
gs
testl
add
dec
sub
out
cli
inc
pushl
cmpsl
push
subl
popf
adc
icebp
je
pop
xor
or
notb
iret
mov
aaa
jg
xchg
push
out
repnz
adc
fldl
cmp
xchg
jb
flds
sub
scas
dec
mov
scas
leave
ljmp
dec
inc
xor
sbb
sbb
jne
jg
movsl
rclb
pop
scas
cltd
negb
mulb
sub
out
mov
mov
xchg
pusha
cs
or
jecxz
icebp
xchg
xor
xor
or
xlat
loope
test
nop
das
mov
ljmp
aaa
mov
pop
mov
fldl
dec
ds
dec
pop
jnp
xlat
imul
inc
inc
add
mov
fimuls
mov
jb
fs
icebp
mov
or
push
std
push
mov
mov
pop
push
mov
dec
outsb
add
icebp
or
fisubl
mov
mov
jmp
fisubs
aas
mov
xor
shlb
xor
shrb
push
leave
xor
adc
mov
sbb
mov
lret
push
pop
or
fstps
cmc
add
jp
xchg
dec
aas
in
jno
push
xor
mov
psrlw
add
adc
out
cmp
imul
pop
cmp
or
jg
xchg
mov
stos
and
sarl
lahf
adc
cwtl
xchg
adc
and
clc
leave
push
ficoms
push
mov
adc
pop
jg
cmp
xor
cld
ret
ja
mov
add
aad
cltd
lock
cld
pop
loop
sub
pop
sub
fwait
or
inc
imul
lds
and
sub
in
aaa
xchg
bound
push
sarl
inc
cmp
pop
into
pop
push
mov
bound
and
out
xchg
mov
cmp
pop
jmp
xor
mov
inc
pop
push
mov
jne
jns
out
lahf
je
lret
jns
push
mov
mov
stos
inc
cmp
sub
outsl
fimuls
pushf
hlt
ret
pushf
xchg
mov
int3
dec
mov
fistpll
cmp
ja
ljmp
aam
call
mov
mov
pop
enter
fdivrl
pop
add
gs
jp
push
or
lods
int
addl
inc
and
in
aam
or
add
sub
imul
dec
push
leave
add
jno
push
mov
decb
movsb
adc
sbb
xor
repnz
and
sbb
adc
jbe
add
pop
xchg
mov
ja
sub
add
xor
jbe
ret
in
mov
ret
pop
cs
pop
repz
mov
and
incl
add
fldcw
adc
cmp
cmpsl
pop
repz
ret
fsubp
jns
xor
ljmp
lret
and
rclb
jge
sub
inc
xchg
jg
xor
jo
mov
fxch
or
cmpsb
fwait
add
pop
mov
adc
mov
sbb
or
push
pop
mov
push
je
pop
mov
adc
or
out
cmp
cltd
out
push
xchg
test
pop
daa
fnstsw
mov
das
aad
aas
jb
pop
cmpsl
dec
mov
clc
xchg
sbb
mov
add
sub
pop
jb
fimull
jno
sub
lods
fildll
push
xchg
or
xlat
add
jae
push
adc
jmp
fistpl
pop
stos
rcrl
inc
das
sbb
cld
cmp
loopne
jo
filds
divl
xchg
dec
fcomps
fadds
shll
in
push
scas
cwtl
insb
sbb
xchg
mov
dec
outsb
mov
dec
or
mov
xor
xchg
test
lods
inc
adc
mov
cmp
xchg
sub
std
cltd
loopne
add
jle
sbb
pop
insl
insl
test
pop
jo
scas
sub
adc
out
mov
mov
cmc
inc
xchg
orb
decb
fmull
push
and
jns
aas
pop
out
imul
pusha
and
aad
popf
cmpsl
call
imul
sti
pop
orl
jns
cs
mov
jno
mov
ljmp
loopne
lahf
mov
add
ljmp
sbb
cmp
adc
xor
and
cltd
jge
arpl
push
das
addb
shlb
test
and
sarb
adcb
cmp
mov
clc
into
cld
imul
nop
sub
jmp
jns
js
lds
push
xchg
fldt
xchg
xchg
arpl
or
jl
jle
loopne
outsl
repz
xchg
ds
mov
in
rcrl
xchg
fstpl
sub
cmp
mov
bound
cltd
jo
mov
cmp
push
pop
xor
mov
dec
aaa
xchg
inc
pop
ja
or
mov
shrb
add
outsl
lret
outsl
xchg
dec
pop
lcall
dec
jle
xchg
mov
and
cli
clc
push
nop
fmull
jmp
add
sbb
in
out
push
mov
xchg
icebp
mov
test
das
jns
out
sub
out
lcallw
xchg
pop
or
pop
les
in
and
jmp
repnz
test
jl
rcrl
lods
imul
mov
or
push
lret
das
mov
fldcw
cltd
nop
adc
repnz
and
and
inc
in
shll
iret
mov
repz
test
mov
roll
ljmp
mov
fstpl
adc
adc
cmp
mov
jge
stc
jo
add
cmp
mov
rcr
fst
repz
lcall
jmp
adc
push
fldl
fcom
loop
das
aas
cmp
aam
aaa
cld
lret
pushf
call
jno
cmpsb
push
sub
jb
gs
mov
aad
movsb
bound
call
mov
sbb
out
mov
ljmp
push
popa
adc
js
jg
lds
leave
lods
mov
push
cmpsb
and
es
dec
mov
xchg
shl
inc
pop
xor
fxch
adc
jge
fwait
aam
mov
mov
rcrl
imul
jl
je
jbe
mov
add
dec
pop
aad
xchg
faddl
ja
iret
xchg
inc
shrb
orl
out
lods
cltd
popa
xor
dec
jl
adc
xchg
and
cwtl
mov
sbb
shrl
xchg
leave
ret
dec
dec
mov
or
loope
jp
pop
je
lods
filds
pop
xchg
lret
lods
out
pop
xlat
cmpsl
inc
push
rclb
fnstsw
je
and
cwtl
test
jl
and
xchg
sbbl
inc
testb
dec
dec
sub
shr
lods
adc
push
inc
movsl
push
push
mov
jg
ljmp
push
cs
hlt
repnz
call
inc
xchg
xchg
xor
stc
mov
out
jb
sti
dec
divl
inc
js
fwait
jmp
idivl
js
cmp
icebp
stc
shrb
sub
out
adc
sub
xor
add
mov
adc
pop
xor
pop
adc
jbe
shll
cmp
push
mov
or
and
cmp
push
and
hlt
loop
sub
repnz
imulw
jp
rorb
xchg
mov
jne
jl
push
bound
sbb
loopne
jmp
call
xchg
lock
sub
movsb
dec
xchg
jbe
shll
inc
push
lds
fcoms
xor
pop
inc
mov
push
pop
push
xor
fdivl
add
or
pop
out
cvttps2pi
call
mov
lds
nop
mov
mov
push
out
xor
sahf
jge
mov
insl
push
shrl
cwtl
pop
xchg
out
divb
stos
mov
clc
mov
cvtpi2ps
sub
lcall
cli
roll
push
xor
jo
mov
jmp
lods
mov
xchg
cs
js
add
dec
movsl
mov
add
jns
inc
lcall
mov
inc
call
xor
jge
sbb
adcl
or
les
sbb
dec
cmc
jns
jl
inc
push
xor
jo
add
mov
mov
mov
out
mov
mov
aam
fidivl
push
icebp
je
and
mov
xchg
fnstcw
xchg
pushf
shll
ds
data16
mov
push
dec
cmp
out
mov
sbb
ja
jp
ret
psrad
outsl
je
int3
mov
dec
mov
or
rcrl
aam
pop
pop
mov
inc
sub
xor
aam
cwtl
pop
dec
sti
pop
dec
add
cmp
jge
int3
ljmp
addr16
push
pusha
xchg
sbb
scas
loope
inc
aas
mov
ja
int3
push
sub
sub
test
jge
in
sbb
pop
push
adc
add
movsb
pop
ficoml
imulb
pop
and
mov
fsts
pop
fisubl
mov
push
mov
icebp
sub
and
cmp
and
int
out
mov
jecxz
mov
dec
push
or
or
and
or
pushw
std
test
out
sbb
lods
or
arpl
iret
leave
stos
es
mov
or
ror
dec
leave
xlat
and
xor
mov
int3
ja
sbb
fmuls
push
push
data16
jl
lret
stc
loope
mov
cltd
adc
cmp
cmp
scas
lea
cmp
in
data16
les
push
inc
jp
push
inc
int
dec
fildl
jae
push
dec
cmp
mov
pop
js
xor
out
dec
fstpt
insl
lahf
leave
mov
aam
cmc
add
js
aad
ret
and
sbb
es
jb
int3
cmp
jmp
into
sub
inc
sbb
push
pop
push
data16
jno
push
outsb
cmp
push
std
insl
out
inc
push
mov
jge
shlb
roll
ljmp
in
or
sbb
cmp
repnz
fstpl
cwtl
cmc
movsb
test
mov
jb
int3
pop
push
ss
inc
in
pusha
sub
mov
cwtl
inc
pusha
stos
mov
ss
arpl
stos
ror
divl
fadd
mov
pop
jne
cmp
mov
jp
sti
pusha
pusha
cli
and
xorl
lods
xor
aaa
and
int3
xchg
mov
xor
cmp
and
movsl
icebp
lret
sub
jb
jno
and
sbb
hlt
jns
pop
cld
rcll
mov
fisubl
mov
sarl
cmp
in
lea
and
es
les
js
out
mov
lock
inc
int
aam
pop
mov
ret
in
or
push
movsb
mov
aam
or
xchg
sub
dec
clc
xor
inc
insl
addr16
xchg
jmp
mov
popf
clc
xchg
fdivs
out
lock
out
inc
cld
shll
out
xchg
jns
xor
cmc
in
iret
shrl
push
cld
push
xchg
mov
push
bnd
mov
testl
mov
dec
sub
loope
mov
dec
fldln2
iret
push
xchg
xor
push
xor
inc
push
jb
int3
mov
push
pop
lods
and
adc
dec
mov
out
xor
mov
in
mov
addr16
mov
loope
mov
out
push
and
movsl
xchg
jo
sub
mov
xchg
adc
cmp
inc
and
mov
xchg
cmp
filds
adc
ss
js
mov
das
add
xor
mov
mov
ds
xchg
inc
cmp
ljmp
dec
pop
jne
xchg
lret
ja
push
lret
insl
dec
mov
jns
leave
push
dec
fwait
push
lret
adc
xchg
ljmp
jl
icebp
fisttps
and
jle
push
push
mov
xchg
fcmovne
scas
fldcw
inc
pop
ljmp
push
jae
fwait
xchg
test
xchg
iret
sarb
sbb
fiaddl
shlb
pop
sub
roll
xchg
cltd
xor
jg
xor
xor
fcmovnu
pop
iret
andb
stos
addr16
test
push
out
pop
push
scas
divl
aad
in
icebp
or
adc
sbb
das
rcrb
cmp
adcb
mov
stc
loop
cld
hlt
mov
xor
shll
in
cmp
std
mov
test
test
jnp
call
std
dec
imul
mov
add
cmp
dec
lea
mov
bound
test
sar
mov
pop
sahf
cmp
inc
xor
into
iret
ficoms
sbb
loop
sbb
sti
adc
mov
xor
push
mov
jge
jne
das
pusha
mov
mov
xlat
loopne
jbe
add
or
add
mov
mov
movb
shr
inc
hlt
or
in
data16
ljmp
push
push
clc
popa
mov
pop
test
dec
push
xchg
fcomps
jg
dec
sbb
and
adc
rclb
add
inc
ss
push
xor
mov
daa
jle
mov
sbb
fiaddl
mov
xor
aad
dec
movb
mov
notb
add
xchg
insl
mov
xor
sub
and
jmp
push
pushf
insl
mov
pop
add
dec
outsb
cld
lds
scas
addr16
imulb
adc
lret
sbb
rolb
shlb
rcrl
xor
out
and
jnp
scas
fnstcw
adc
mov
loop
and
push
mov
sar
scas
aam
jnp
lcall
cmp
aaa
cmovl
js
vandnpd
fwait
nop
and
mov
dec
inc
xchg
lret
cmp
cmc
push
sub
add
push
leave
sub
mov
out
push
test
ret
xchg
and
rcl
daa
xor
xor
pop
ja
and
dec
notl
ret
repnz
push
xchg
aad
rcrl
push
pop
adc
movsb
push
frstor
dec
int3
dec
scas
mov
cmpsl
mov
xlat
shr
adc
jne
arpl
out
lds
in
ja,pt
mov
adcl
shrb
adc
fimuls
mov
mov
cmc
out
add
mov
addr16
loope
cmp
clc
add
push
inc
jl
dec
and
gs
jg
hlt
imul
insb
pop
loope
cmp
jno
cld
je
mov
jmp
movsl
rcrl
inc
push
or
inc
loope
pop
jmp
int
stos
jecxz
cmp
xor
mov
shl
adc
push
je
in
hlt
adc
rcl
out
je
inc
cmpsb
lods
adc
push
push
dec
ret
popf
xor
push
pop
pop
outsb
adc
inc
out
call
xor
pop
adc
fistpll
push
fstl
pop
pslld
add
nop
xor
in
ror
data16
pop
mov
jb
es
jmp
enter
ds
adc
mov
lcall
or
push
xor
add
adc
xor
pop
fcoms
inc
in
shlb
out
jl
sub
data16
lahf
xor
or
lea
pop
fimull
stos
andb
dec
repnz
js
adc
dec
push
and
lock
ja
mov
jbe
xor
es
dec
dec
and
mov
jno
jmp
mov
stos
movsb
loop
xchg
xor
xchg
mov
scas
testb
dec
inc
sti
rol
sbb
and
mov
cmp
push
push
mov
out
jae
add
add
imul
sbb
xchg
iret
sbb
pusha
cld
insb
out
dec
mov
push
xor
mov
and
jle
in
sub
sub
push
ret
or
mov
and
in
icebp
mov
clc
fsubrl
push
aam
int
stos
xchg
xor
mov
pop
ss
ss
data16
fs
push
adc
pop
fistpll
pop
or
pop
not
jo
and
cli
fwait
gs
add
dec
mov
xlat
mov
ret
cmp
sbb
cs
pop
cmp
or
or
lods
je
mov
lret
jp
inc
cmp
rolb
xchg
mov
xchg
mov
push
mov
and
fwait
sub
sub
std
bnd
out
loop
cwtl
lahf
adc
xlat
or
aad
mov
add
mov
mov
std
push
cwtl
pusha
push
pop
jne
imul
or
sub
pop
mov
or
ss
jmp
scas
flds
xor
insb
add
arpl
xchg
xor
movsl
mov
in
inc
and
dec
push
loope
or
jbe
or
adc
stc
mov
jbe
and
ja
push
lret
rol
push
push
aad
sbb
mov
ljmp
int3
lret
lcall
sbb
cli
mov
mov
jae
pop
fwait
mov
nop
insb
ret
sbb
sbb
loope
fldcw
or
fs
sub
add
sub
cld
into
lcall
imul
add
imul
add
sub
cmc
std
add
add
je
xlat
sub
mov
test
das
lods
fs
jmp
divb
push
pop
mov
jmp
and
cmp
nop
fwait
mov
xlat
cs
xchg
sbb
shll
jecxz
inc
jns
dec
push
call
mov
pop
push
inc
push
cmp
pop
xor
dec
loop
in
fisubl
pop
out
jl
or
mov
mov
push
xor
outsb
jle
fcmove
popa
pop
jge
rol
nop
bswap
push
and
pop
stc
xchg
test
cmp
adc
push
ficoms
ds
out
ret
mov
fs
clc
jmp
loope
stos
xlat
cmp
sbb
ror
mov
aaa
and
mov
dec
ret
lods
shlb
mov
mov
mov
xchg
xor
cld
mov
out
outsb
mov
inc
mov
inc
je
cmp
hlt
sbb
idivb
add
ds
jmp
pop
dec
jg
hlt
into
fbstp
mov
lea
push
xchg
gs
mov
ret
ret
pop
mov
jno
out
add
cld
sahf
and
mov
scas
jno
pop
shl
or
les
push
push
jns
push
or
cld
imul
test
and
sbb
jg,pt
mov
or
push
ja
addr16
aam
nop
shr
hlt
mov
pop
popa
dec
jae
inc
ljmp
in
insl
sub
mov
lret
sahf
push
loopne
outsb
add
es
imul
aam
lahf
rclb
faddl
push
shll
xchg
rcrl
push
enter
mov
test
and
push
shrb
xlat
add
or
mov
sub
ret
xchg
outsb
sub
fs
andb
aaa
adc
add
mov
lds
jae
dec
push
je
mov
out
xor
loope
andl
mov
mov
not
sub
fcompl
aas
push
push
mov
xor
push
je
popa
call
rolb
arpl
mov
ja
lret
or
daa
add
stc
leave
fs
mov
jae
lods
inc
xor
xor
stc
sbb
mov
adc
or
movb
out
test
push
ds
xchg
and
lahf
xchg
cmpb
aas
fdivp
lock
sub
push
ret
cmpsb
sub
push
mov
push
pop
cmp
movsl
xchg
out
inc
loope
fldenv
gs
mov
jae
xchg
sti
pop
movsl
sbb
imul
addb
cmp
push
push
das
mov
mov
xorl
int
fisubl
cld
mov
ret
sub
pop
push
out
popa
lods
jmp
loope
dec
cmpsb
push
mov
inc
hlt
xor
fs
sbb
dec
mov
cmp
idivb
iret
inc
out
xchg
andl
mov
into
sbb
das
push
sbb
lahf
fcompl
mov
sub
dec
aad
sub
lret
xor
and
fs
movsb
ret
sbb
fldenv
xor
ljmp
bound
loope
in
push
outsb
add
add
sbb
add
add
push
add
add
add
add
add
addb
add
add
add
dec
add
add
add
add
add
les
mov
jmp
pusha
push
mov
sub
xor
movl
movl
movl
movl
mov
mov
pusha
mov
mov
mov
mov
mov
mov
mov
add
add
mov
lea
mov
mov
mov
add
dec
nop
test
nop
je
lea
mov
add
push
push
mov
add
mov
pop
repz
test
pop
jne
mov
add
mov
movzwl
mov
add
mov
add
mov
jmp
movl
popa
mov
xor
cmp
je
mov
cmp
je
lea
push
push
movb
movb
movb
movw
nop
nop
movw
nop
nop
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
mov
mov
lea
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
cmp
je
mov
nop
nop
mov
nop
nop
call
nop
add
inc
add
add
pop
mov
sub
push
push
mov
push
push
push
call
pop
mov
push
push
push
push
inc
mov
push
push
push
mov
add
mov
mov
add
mov
pop
mov
mov
add
push
mov
add
call
push
push
mov
push
push
call
pop
push
push
push
pushl
push
push
push
mov
push
push
call
pop
push
push
push
pushl
pushl
mov
push
push
pushl
push
pushl
mov
add
push
push
push
mov
call
pop
mov
add
mov
mov
push
mov
push
mov
push
mov
push
xor
mov
rep
mov
lods
mov
lods
mov
add
lods
mov
rep
dec
jne
pop
pop
pop
mov
test
je
mov
inc
sub
cmp
ja
mov
cmp
jne
xor
bswap
add
sub
stos
loop
push
lods
test
je
mov
add
push
call
mov
lods
test
jne
lods
test
je
sub
lods
test
jne
sub
push
push
call
stos
jmp
and
push
push
call
stos
jmp
pop
pop
ret
add
fimuls
nop
lea
mov
pop
cmpsb
lret
es
movsl
xchg
pop
sbb
xchg
sbb
pushf
loop
jle
notl
inc
mov
pushl
pop
shlb
enter
and
xchg
ljmp
xchg
xchg
mov
xor
mov
mov
sub
pop
dec
cmp
adc
cmp
xor
imulb
xchg
jecxz
jb
mov
jg
stos
int
pusha
dec
push
mov
push
cmp
nop
mov
pop
popf
outsl
cli
jne
mov
pop
mov
mov
pop
dec
into
pop
in
or
int3
mov
sti
loopne
sub
xor
loop
ret
dec
aas
pop
and
inc
lea
mov
repnz
rclb
sbb
mov
inc
test
fxch
das
in
jb
dec
outsb
mov
xchg
or
aaa
pushf
leave
loope
add
xor
sub
jl
mov
cmp
adc
hlt
inc
adc
daa
mov
jecxz
mov
jp
mov
stos
dec
pusha
xor
push
push
or
or
push
mov
cmp
cmp
inc
xchg
fwait
mov
frstor
sbb
push
lods
lret
ror
rolb
iret
aad
icebp
insb
mov
pushf
add
iret
imul
and
xor
push
adc
ret
in
inc
stos
loope
pop
xchg
mov
mov
lds
lock
mov
lahf
push
cmp
popf
add
pop
test
repz
test
mov
mov
mov
test
sti
mov
xchg
adc
ja
mov
or
dec
push
gs
pop
movsl
arpl
ret
insl
push
pop
pop
jl
xchg
jnp
insl
cmp
scas
pop
add
mov
adc
lahf
movsl
pop
gs
repz
push
jmp
jg
cmc
jecxz
mov
gs
mov
cmpsl
shl
repz
aad
sbb
dec
cld
sub
orl
orb
mov
xchg
cmp
jns
rcrb
mov
mov
lods
popf
and
lcall
sbb
pop
es
jno
std
adc
sbbb
pop
gs
sbb
cmp
sub
mov
fstpt
jge
inc
mov
pop
cmp
insl
scas
lods
or
mov
aad
cmp
inc
loopne
mov
inc
and
jbe
imul
pop
cmpsl
lret
jle
inc
aad
popa
test
arpl
dec
adc
cli
sti
in
jmp
iret
cmc
faddl
fdivr
js
pop
pop
cltd
sub
popf
scas
push
clc
jg
mov
mov
cwtl
add
leave
push
mov
mov
imul
ss
imul
xchg
sbb
into
mov
call
rcrl
les
aam
repz
lods
sbb
mov
push
jg
sbb
cld
pop
inc
and
xchg
jo
adc
out
aam
sbb
jmp
pop
out
xchg
pop
pop
addr16
js
mov
push
sub
pop
mov
mov
sub
sbb
cmp
dec
inc
mov
mov
loope
and
cwtl
daa
jno
hlt
inc
jg
jmp
shlb
mov
movsb
inc
sbb
ljmp
fs
rclb
xor
lods
and
mov
push
mov
aam
rcrl
popl
jo
je
cmp
icebp
mov
inc
mov
leave
fcoms
mov
dec
loope
inc
aad
adc
push
or
mov
in
dec
out
das
lret
jno
push
fdiv
add
cmpb
pop
bound
mov
and
sbb
xor
push
add
sbb
xchg
and
add
adc
pop
call
cmpsl
jle
push
scas
mov
test
or
popf
bswap
and
push
xchg
outsb
xchg
cltd
shlb
fidivrl
nop
add
cmp
dec
jb
jnp
pop
and
pop
bnd
mov
and
popf
jb
push
jae
sub
jnp
test
jnp
lods
mov
inc
cs
jae
or
and
jo
movsl
push
shl
sub
mov
and
sbb
mov
push
xlat
sbb
stos
popa
jb
pusha
mov
cmc
inc
insl
scas
add
mov
dec
repnz
add
popf
int
shrw
mov
cmpsb
push
leave
or
imul
add
add
add
arpl
bnd
imul
sti
or
nop
inc
or
dec
mov
mov
out
scas
sti
iret
rcl
adcl
scas
mov
lds
daa
jne
and
lcall
mov
outsb
cwtl
push
psubusb
cltd
rcrb
and
arpl
loopne
lcall
outsl
xlat
mov
ss
das
pop
das
loopne
xchg
sarl
adcl
out
imul
fimuls
push
adc
sub
jb
pop
stc
sbb
lahf
ss
sub
out
aas
pop
mov
pop
lock
vaddsubpd
js
xlat
cmp
imul
jae
inc
add
adc
lret
lea
xchg
mov
ljmp
mov
xor
and
popf
jne
in
mov
pop
iret
rorb
jecxz
flds
iret
bound
and
mov
popf
cmp
mov
stc
aas
mov
mov
pop
xlat
insb
sbb
and
in
or
push
pop
jnp
popw
push
lea
sahf
icebp
adc
jo
fnstsw
fdivr
push
inc
negb
je
jnp
loop
mov
andb
out
mov
stc
in
cmc
jns
test
rorl
or
fsts
jmp
les
cli
aam
out
jb
sahf
sub
in
scas
sahf
mov
addr16
arpl
inc
outsb
dec
sub
fwait
mov
pop
shrb
aaa
push
push
lahf
sarb
push
fdivrs
sbb
adc
mov
mov
out
add
lock
sub
lds
xor
fcmovb
aas
cmpsb
push
mov
gs
inc
jge
inc
das
cwtl
scas
ficompl
pop
pushf
test
sbb
leave
add
adc
bound
testl
or
inc
push
aaa
and
or
hlt
leave
std
outsb
add
ja
mov
xchg
xchg
cli
scas
gs
out
fidivl
and
and
test
enter
mov
xchg
ret
sub
loopne
js
jae
xchg
push
or
mov
nop
xchg
loopne
in
mov
adc
cmp
mov
andl
bound
inc
jae
shrl
xor
imul
mov
ret
out
add
sbb
pop
test
sub
sbb
daa
mov
xor
and
sahf
fnstenv
lock
mov
adc
scas
pop
or
jp
das
jmp
push
cmpsb
push
data16
daa
inc
nop
mov
sub
xchg
negl
ret
lea
test
mov
sbb
lcall
imul
insl
sbb
xchg
cmp
sbb
sbb
or
mov
enter
sbbb
fisubl
jp
in
test
clc
and
cli
jmp
imul
movsb
pop
dec
pop
shr
push
test
or
pop
cmpsl
orb
push
push
stc
movl
xchg
cs
aas
imul
movsb
xchg
in
popa
lock
xor
sbb
add
std
lds
shrb
int
movb
adc
pop
mov
aaa
ss
sahf
ds
mov
mov
jp
test
out
pop
cld
push
cmp
daa
shrl
addl
daa
mov
dec
add
adc
inc
cmp
mov
cmp
rorb
mov
test
mov
mov
push
mov
xchg
jle
sarl
add
call
mov
inc
dec
pop
sbb
sbb
inc
dec
sub
cli
rcll
mov
fadd
inc
mov
jne
adc
ret
mov
repnz
cmp
jge
jne
cmpsb
jo
xchg
adc
arpl
movzbl
js
inc
scas
lds
int
add
cwtl
fisubrl
fisttpl
xchg
pop
sbb
inc
push
mov
jns
scas
fmulp
lret
lods
popf
cmpsl
imul
dec
aam
fs
sbb
fisubrs
aam
out
add
mov
sub
insl
cmp
jl
js
mov
test
in
hlt
xor
fcmovbe
xchg
mov
in
xor
mov
mov
dec
icebp
repnz
cmp
xchg
inc
adc
pop
andb
cmp
notl
sbb
mov
sub
insl
shlb
cli
push
push
inc
add
xor
and
call
and
and
lret
aad
or
dec
pop
add
test
add
lea
je
repnz
scas
in
add
cmp
push
pop
out
filds
das
pop
ret
jno
pop
pop
push
test
pushf
fwait
or
dec
lret
jne
andb
pop
push
ss
adcb
lea
std
push
popf
pop
push
jl
and
das
sub
cmpsb
out
mov
repz
popa
dec
ljmp
mov
and
dec
jge
sbb
js
mov
xor
ja
push
pop
cli
mov
jne
ret
fcompl
mov
enter
push
rcll
sbb
cld
or
insl
in
mov
fmuls
push
mov
mov
add
or
in
rcrl
adc
inc
shrb
sub
xchg
sbb
sub
push
and
pusha
rclb
lret
pop
shrb
xor
movsl
inc
out
xchg
cmp
test
ja
inc
sub
xor
jno
push
inc
shll
pushl
cmc
ss
jno
cwtl
rcl
js
jae
and
xor
enter
stos
pop
popf
and
or
in
sbb
dec
andb
cmp
sbb
jnp
xchg
imul
pop
jl
jb
sub
jp
jns
cmp
pop
cmp
jle
cmpsl
inc
mov
sbb
ret
ret
cmp
fwait
and
cwtl
js
inc
lret
mov
arpl
push
xchg
cmp
inc
mov
aaa
mov
lahf
jle
xor
mov
or
jbe
int3
cltd
subb
cld
cmc
jle
mov
mov
sub
mov
popa
shl
scas
and
aaa
fsubp
xchg
imul
mov
xchg
xchg
cld
mov
xor
insl
imul
cltd
pop
dec
inc
sbb
push
int
outsl
pop
or
in
cmp
out
pop
mov
dec
sbb
imul
pop
cmpsb
sub
leave
das
mov
movnti
cld
add
leave
mov
ja
pop
dec
int3
es
inc
jmp
and
int3
fxch
push
hlt
lea
jns
imul
push
xor
aas
lcall
divb
xchg
js
dec
inc
ss
scas
scas
movsb
rorl
cli
push
jns
push
addl
ret
adc
in
mov
int
dec
test
xchg
dec
insl
sub
inc
mov
int3
in
rol
or
lret
movsb
jmp
xor
cli
daa
xor
mov
repnz
or
lret
mov
lods
lods
adc
sahf
repnz
out
dec
icebp
xlat
cmp
sub
out
lret
imull
gs
sbb
in
js
cmpsb
cs
jecxz
jne
shrb
mov
ja
popa
push
push
into
push
cmpsl
add
pusha
loope
push
xor
mov
ss
outsb
push
cmp
xor
xchg
mov
or
icebp
cltd
jge
inc
sub
les
cmc
lahf
insl
cmp
addl
fstpl
insl
xchg
mov
in
push
add
out
jg
and
pop
idivl
js
dec
mov
imul
notl
rcll
jl
scas
aas
jbe
daa
popa
jno
iret
mov
jbe
insl
jecxz
sti
test
sahf
and
xor
push
addr16
insb
mov
jmp
dec
lahf
xchg
int3
jecxz
mov
add
imul
dec
xchg
cwtl
fildll
pop
lret
and
push
fisttpll
xlat
mov
inc
loope
popa
mov
fsubrp
jae
sbb
shrb
in
mov
mov
adc
and
imul
ja
or
jbe
pushf
mov
push
gs
int
sarb
ret
leave
fcmovnb
dec
add
jle
jb
xchg
sbb
outsb
jb
in
cmp
subb
sbb
dec
xor
push
pop
mov
cs
mov
cwtl
sub
and
pushf
es
ja
xchg
xchg
scas
lods
mov
loop
inc
mov
inc
fcomip
jecxz
xor
jp
push
es
rol
cmpsb
cwtl
stc
adc
fdivr
sub
dec
push
mov
int3
or
push
mov
lahf
out
lcall
gs
bound
adcl
xor
rorl
push
pushl
in
add
push
stos
xchg
aaa
mov
out
jecxz
enter
fisttpll
cltd
mov
cld
mov
mov
pop
dec
mov
out
call
fyl2x
xlat
aaa
mov
and
in
insb
jns
inc
fstps
push
ds
or
or
mov
insl
dec
pop
inc
movsb
or
dec
ret
out
sub
add
es
test
movsl
jbe
maskmovq
xor
loope
inc
in
lods
sbb
das
dec
scas
jcxz
sub
loop
cs
flds
jne
mov
mov
sub
repnz
ret
mov
xor
mov
sbb
iret
push
data16
js
pop
xor
push
add
outsl
cld
fnstsw
arpl
sbb
bound
mov
bound
int3
enter
inc
adc
mov
popf
in
cmp
div
pop
les
add
lret
lods
or
pop
xchg
cmp
mov
aam
aas
mov
mov
push
sbb
test
sub
loopne
jne
int3
pop
push
mov
inc
in
and
add
negb
mov
jbe
pop
and
pusha
jb
stos
dec
or
or
sti
std
js
test
lcall
mov
dec
jmp
repz
xor
xchg
cwtl
mov
cmp
sarl
cmp
and
sub
xlat
sbb
xor
jmp
outsl
jne
jg
enter
mov
outsb
fstl
cmp
jmp
sub
mov
test
stc
or
dec
stc
nop
and
xchg
inc
fimull
jns
popa
dec
movsb
cmp
imul
nop
lods
roll
mov
movsl
xor
movsl
sti
mov
sbb
or
scas
pop
mov
int3
push
in
cmp
mov
xchg
or
mov
nop
outsl
pop
and
lock
ret
sub
shrl
xchg
push
lods
pop
aad
pop
xchg
and
and
movsl
movsl
fcoml
mov
dec
or
icebp
xchg
int3
stc
cmpsb
add
pop
cwtl
fadds
mov
sub
pop
mov
leave
cld
imul
add
push
push
sub
mov
mov
mov
mov
cmp
shl
adc
or
hlt
loope
outsb
stos
and
sub
ljmp
mov
popf
popf
pop
pop
sbb
icebp
mov
je
cmp
cmp
add
lcall
mov
cmp
xchg
stc
pusha
test
push
xchg
cmp
and
sub
cmp
sbb
lret
sub
cmp
and
push
mov
sub
jne
out
cmpsl
leave
aaa
int
or
cmp
addb
mov
sub
or
mov
fadds
and
pop
xor
fsubl
lds
xchg
not
fstl
test
ss
js
test
push
xor
jo
lahf
lcall
xchg
add
mov
sbb
push
out
jns
mov
inc
faddl
lahf
rcll
push
jno
jno
gs
push
test
sbb
fcoms
test
jp
movsb
or
cmp
loope
push
or
lahf
std
aaa
lods
cmp
mov
sbb
insb
xchg
adc
aas
test
leave
out
insl
fcmovne
mov
adc
insl
das
push
jo
mov
push
jne
cmp
xor
mov
fnsave
push
xor
imul
divb
ret
dec
fnsave
sahf
mov
inc
mov
dec
icebp
and
imul
mov
popf
adc
inc
adc
sahf
scas
fldcw
cmp
adcb
cmp
lahf
cmp
jge
xor
in
fmull
aas
jecxz
enter
mov
out
pop
lret
push
insb
nop
fildl
pop
push
jae
jmp
cli
xor
push
xchg
or
popa
pop
jmp
pop
movsl
xchg
lcall
cmp
scas
push
loope
dec
inc
push
sbb
xor
xchg
hlt
in
mov
pushf
add
pop
addr16
sbb
fwait
sahf
jg
fmull
ficomps
adc
push
mov
push
inc
adc
cli
cmp
pavgw
dec
test
ror
cmp
mov
sti
mov
jns
cli
scas
in
jmp
je
hlt
pop
stos
cwtl
test
mov
xchg
outsl
or
sbb
lods
pop
jg
push
repnz
lock
decl
add
cltd
jnp
jmp
mov
jmp
push
out
icebp
fdivrs
and
sbb
cmpsb
movsb
movsb
aam
mov
sahf
add
mov
mov
cmpsl
cltd
lea
lret
ret
mov
scas
roll
push
aam
adc
cmp
cmp
pop
xor
and
incl
imul
xor
rcrb
mov
arpl
popf
jg
xor
aad
jmp
xchg
jbe
adc
sbb
loop
repnz
testl
cmp
les
decl
hlt
out
pop
test
arpl
shll
inc
fs
icebp
leave
sti
pop
jp
enter
or
pop
in
adc
sahf
or
sbbl
cmp
sub
cltd
aad
pop
mov
fs
xchg
pop
inc
xor
xchg
sti
arpl
ja
js
out
adc
push
test
mov
inc
sbb
test
leave
mov
push
mov
enter
lcall
leave
mov
iret
nop
lock
push
arpl
ret
xor
int
inc
lods
out
and
lock
test
xor
cwtl
roll
sbbb
xor
push
fs
jbe
aad
fadds
push
adc
test
mov
sbbl
xorl
repz
aaa
pop
lahf
and
addl
fwait
int3
mov
pop
cmp
mov
mov
lods
sbb
cmp
call
fstl
add
pop
scas
das
mov
leave
rorb
aad
insl
lods
out
leave
pusha
gs
insl
xchg
inc
loope
dec
jge
xchg
or
dec
sub
imul
stc
js
in
mov
pop
xchg
mov
enter
mov
sbb
sub
mov
outsb
imul
mov
into
jb
int
ret
mov
out
outsl
divb
xchg
or
push
lret
xchg
dec
cmpl
dec
in
loop
sbb
pusha
test
pop
jge
es
cmpsl
push
pop
iret
icebp
pop
mov
ret
clc
mov
inc
cmp
push
push
cmpsl
cmp
stc
cmp
sbb
jo
mov
divl
mov
ljmp
xor
int
mov
cmp
push
movsl
xchg
sti
mov
cltd
andl
nop
xchg
jne
test
mov
adc
mov
inc
imul
push
push
stos
xchg
enter
into
clc
fistpll
movsl
dec
sub
sub
jne
test
into
pop
mov
mov
scas
sbb
adc
push
int
pop
daa
adc
jle
pop
xchg
sahf
jmp
fmulp
inc
imul
xchg
jle
inc
aad
pop
sbb
lds
pop
stc
and
cmp
and
cwtl
xor
or
mov
loope
sub
ret
mov
push
pop
lcall
adc
dec
pop
xchg
sbb
mov
xchg
or
aaa
lret
fdivs
mov
or
sub
adc
mov
dec
stos
jmpw
not
dec
mov
in
fsubl
dec
repz
scas
and
pop
sub
cmp
lds
daa
add
ret
inc
dec
das
and
xchg
imul
popf
ret
enter
add
jmp
test
out
lcall
sub
test
fadds
xchg
es
and
lds
icebp
lds
arpl
test
cmpsl
hlt
in
xchg
dec
mov
test
test
mov
stos
jo
pop
push
stos
aas
dec
test
cmp
ret
rolb
xchg
inc
int
aam
cmp
out
fidivl
or
jno
cmp
ret
push
das
add
dec
sbb
fisubs
mov
add
pop
pop
call
xchg
add
sbb
jp
jle
in
and
scas
shl
sub
test
imul
mov
int3
lods
pop
scas
cli
jnp
pop
push
int3
push
movsl
ja
dec
or
das
lret
sub
or
js
sar
sub
cmc
mov
lods
xchg
cmp
or
das
mov
cs
fldl
pop
iret
jle
xchg
cmp
adc
mov
shll
subl
aas
xchg
mov
mov
fsubp
mov
xor
in
add
cmp
lret
stos
outsb
and
movsl
or
loopne
fcoms
mov
fmulp
sub
scas
inc
popl
mov
push
icebp
mov
jp
sar
inc
mov
xchg
mov
xor
enter
fcoms
mov
xor
mov
int3
das
add
push
iret
in
jge
stos
push
mov
nop
movsl
xlat
push
movsb
popf
ret
push
sub
xor
les
push
jb
adc
push
in
fidivs
mov
insl
lds
mov
mov
push
aad
int3
pop
pop
mov
mov
fs
inc
adc
xchg
stc
or
and
subl
sub
scas
fisttps
jecxz
adc
imul
mov
pop
jp
dec
insb
ret
out
dec
fidivrs
addr16
dec
mov
cltd
or
and
fstpt
mov
popf
xor
bound
rorb
pop
mov
push
mov
out
push
add
mov
pop
cmp
lock
fdivrs
cli
add
or
dec
mov
lods
add
push
pusha
xchg
scas
fildll
imul
mov
mov
ss
push
lds
insb
or
add
js
dec
lea
adc
orb
add
dec
enter
jge
cmp
pop
or
adc
cltd
mov
je
sub
hlt
scas
mov
aas
mov
daa
xor
lock
inc
cmpsl
add
xchg
mov
frstor
lret
iret
scas
adc
adc
ja
cmc
xor
jbe
push
movsb
filds
pop
jmp
lahf
sub
xchg
cmp
les
jno
or
not
out
pop
movsl
push
xchg
pop
inc
mov
scas
xlat
fcoml
adc
push
inc
lock
jae
and
mov
iret
sbb
cmp
rclb
mov
fstpl
mov
cs
fldlg2
incb
insb
mov
cmp
jo
clc
add
das
adc
inc
and
xchg
lea
inc
je
lods
xlat
xor
repz
stos
aaa
cmpsl
xchg
xor
inc
jmp
ljmp
mov
jle
xor
and
xchg
outsl
cli
cs
sub
outsb
mov
cmpsb
xchg
adc
mov
mov
mov
and
xor
push
je
divb
cmpb
adc
je
jo
cli
mov
cmc
jmp
enter
test
push
push
andb
push
xchg
xchg
xor
push
and
ss
sub
test
dec
aad
and
flds
push
mov
cmp
andl
mov
xchg
outsl
out
inc
cmp
inc
icebp
mov
dec
outsb
and
negl
or
std
jnp
mov
imul
lock
or
loopne,pn
je
dec
mov
adc
mov
inc
insl
mov
mov
push
add
cltd
jbe
add
cwtl
lcall
or
adc
jge
ret
sbb
xor
inc
enter
movsl
and
xlat
pop
push
xchg
or
scas
mov
js
enter
push
in
and
ja
xchg
jae
inc
inc
cwtl
mov
push
add
push
xorl
sbb
in
push
or
cmp
xchg
imul
popf
je
bnd
sub
insl
mov
pop
test
sbb
test
daa
push
aaa
gs
mov
ret
mov
mov
lcall
jmp
xchg
icebp
jbe
mov
test
add
andb
sbb
lret
dec
inc
lcall
daa
sbb
insl
clc
sbb
push
mov
pusha
cmp
xchg
aaa
rorb
addr16
mov
pop
sub
lea
cmc
pop
add
aaa
not
adc
sbb
adc
into
pop
push
push
rol
inc
mov
mov
adc
wbinvd
push
xor
xchg
fwait
dec
gs
aaa
call
insl
xor
mov
pop
jae
mov
cmp
cmpsl
jo
fidivrs
fucom
sub
and
fnstsw
js
sbb
lock
repnz
test
mov
add
pop
push
xor
pop
pop
sarb
pop
pop
add
pop
jb
add
cld
sbb
add
add
aaa
lea
stc
test
les
lods
dec
xchg
ret
stc
idivb
int3
add
or
pop
inc
pop
sub
inc
or
stc
cmp
ficompl
push
out
cmpsl
push
mov
adc
xor
push
rcr
fnsave
imulb
pop
cmp
xor
mov
call
mov
gs
arpl
fwait
xchg
mov
pop
pop
jg
rolb
mov
outsb
out
jb
xor
adc
push
mov
pop
fwait
xor
test
fisttpll
jnp
mov
or
xchg
outsl
out
test
inc
sub
lock
sti
cmp
in
or
int3
add
les
das
add
jecxz
aam
push
and
inc
aas
push
push
mov
mov
inc
add
cli
test
fdivr
jo
xchg
mov
js
lcall
mov
or
dec
out
and
xor
icebp
fstps
or
mov
fistl
in
or
inc
enter
inc
cmpsb
sbb
stos
inc
dec
loope
mov
sbb
scas
fmul
inc
not
inc
shl
cltd
or
in
loopne
push
xchg
mov
hlt
jp
push
ss
mov
fsts
mov
ds
ret
xor
and
sarb
push
movsl
mov
cltd
pop
out
and
cmc
test
jge
mov
gs
pop
xchg
jae
jae
ficoml
in
sbb
xchg
orb
loope
adc
cltd
pop
or
dec
sub
push
aad
loopne
fdivrl
nop
fistl
cmp
add
mov
daa
inc
jg
mov
fwait
shlb
popa
sbb
mov
daa
int3
shr
in
xchg
outsl
loopne
out
loop
shl
mov
imul
xor
mov
xor
arpl
out
and
cld
sahf
or
adc
in
into
jp
and
cmp
mov
or
dec
inc
fisttpl
push
jnp,pn
lds
and
sub
add
or
dec
pop
jl
rcrl
cwtl
and
adc
aas
dec
mov
popf
sarl
or
sbb
dec
pushf
fadds
sbb
lahf
xlat
dec
push
cmc
subb
adc
add
inc
lods
inc
movsl
jno
jl
movsl
xchg
inc
out
fdivs
jge
dec
mov
cmp
mov
and
mov
mov
inc
jnp
xchg
es
jns
loop
adc
mov
mov
call
sub
or
xchg
cltd
movsb
and
scas
sub
in
out
ret
rcll
movl
rcrl
push
lods
pop
lcall
sub
mov
jb
push
mov
add
jno
jb
jbe
xlat
dec
pop
inc
or
or
jo
mov
sbb
stos
test
fstps
jno
dec
mov
in
ret
movsl
dec
fcomps
out
insl
jle
mov
sti
je
aas
push
push
sti
mov
insb
mov
lcall
dec
iret
nop
pop
icebp
push
popa
or
mov
push
and
push
dec
inc
incl
adc
int
arpl
shrb
push
inc
mov
cmp
sbb
repnz
mov
push
jg
ljmp
or
rol
dec
aad
add
pop
rsm
gs
testl
add
dec
sub
out
cli
inc
pushl
cmpsl
push
subl
popf
adc
icebp
je
pop
xor
or
notb
iret
mov
aaa
jg
xchg
push
out
repnz
adc
fldl
cmp
xchg
jb
flds
sub
scas
dec
mov
scas
leave
ljmp
dec
inc
xor
sbb
sbb
jne
jg
movsl
rclb
pop
scas
cltd
negb
mulb
sub
out
mov
mov
xchg
pusha
cs
or
jecxz
icebp
xchg
xor
xor
or
xlat
loope
test
nop
das
mov
ljmp
aaa
mov
pop
mov
fldl
dec
ds
dec
pop
jnp
xlat
imul
inc
inc
add
mov
fimuls
mov
jb
fs
icebp
mov
or
push
std
push
mov
mov
pop
push
mov
dec
outsb
add
icebp
or
fisubl
mov
mov
jmp
fisubs
aas
mov
xor
shlb
xor
shrb
push
leave
xor
adc
mov
sbb
mov
lret
push
pop
or
fstps
cmc
add
jp
xchg
dec
aas
in
jno
push
xor
mov
psrlw
add
adc
out
cmp
imul
pop
cmp
or
jg
xchg
mov
stos
and
sarl
lahf
adc
cwtl
xchg
adc
and
clc
leave
push
ficoms
push
mov
adc
pop
jg
cmp
xor
cld
ret
ja
mov
add
aad
cltd
lock
cld
pop
loop
sub
pop
sub
fwait
or
inc
imul
lds
and
sub
in
aaa
xchg
bound
push
sarl
inc
cmp
pop
into
pop
push
mov
bound
and
out
xchg
mov
cmp
pop
jmp
xor
mov
inc
pop
push
mov
jne
jns
out
lahf
je
lret
jns
push
mov
mov
stos
inc
cmp
sub
outsl
fimuls
pushf
hlt
ret
pushf
xchg
mov
int3
dec
mov
fistpll
cmp
ja
ljmp
aam
call
mov
mov
pop
enter
fdivrl
pop
add
gs
jp
push
or
lods
int
addl
inc
and
in
aam
or
add
sub
imul
dec
push
leave
add
jno
push
mov
decb
movsb
adc
sbb
xor
repnz
and
sbb
adc
jbe
add
pop
xchg
mov
ja
sub
add
xor
jbe
ret
in
mov
ret
pop
cs
pop
repz
mov
and
incl
add
fldcw
adc
cmp
cmpsl
pop
repz
ret
fsubp
jns
xor
ljmp
lret
and
rclb
jge
sub
inc
xchg
jg
xor
jo
mov
fxch
or
cmpsb
fwait
add
pop
mov
adc
mov
sbb
or
push
pop
mov
push
je
pop
mov
adc
or
out
cmp
cltd
out
push
xchg
test
pop
daa
fnstsw
mov
das
aad
aas
jb
pop
cmpsl
dec
mov
clc
xchg
sbb
mov
add
sub
pop
jb
fimull
jno
sub
lods
fildll
push
xchg
or
xlat
add
jae
push
adc
jmp
fistpl
pop
stos
rcrl
inc
das
sbb
cld
cmp
loopne
jo
filds
divl
xchg
dec
fcomps
fadds
shll
in
push
scas
cwtl
insb
sbb
xchg
mov
dec
outsb
mov
dec
or
mov
xor
xchg
test
lods
inc
adc
mov
cmp
xchg
sub
std
cltd
loopne
add
jle
sbb
pop
insl
insl
test
pop
jo
scas
sub
adc
out
mov
mov
cmc
inc
xchg
orb
decb
fmull
push
and
jns
aas
pop
out
imul
pusha
and
aad
popf
cmpsl
call
imul
sti
pop
orl
jns
cs
mov
jno
mov
ljmp
loopne
lahf
mov
add
ljmp
sbb
cmp
adc
xor
and
cltd
jge
arpl
push
das
addb
shlb
test
and
sarb
adcb
cmp
mov
clc
into
cld
imul
nop
sub
jmp
jns
js
lds
push
xchg
fldt
xchg
xchg
arpl
or
jl
jle
loopne
outsl
repz
xchg
ds
mov
in
rcrl
xchg
fstpl
sub
cmp
mov
bound
cltd
jo
mov
cmp
push
pop
xor
mov
dec
aaa
xchg
inc
pop
ja
or
mov
shrb
add
outsl
lret
outsl
xchg
dec
pop
lcall
dec
jle
xchg
mov
and
cli
clc
push
nop
fmull
jmp
add
sbb
in
out
push
mov
xchg
icebp
mov
test
das
jns
out
sub
out
lcallw
xchg
pop
or
pop
les
in
and
jmp
repnz
test
jl
rcrl
lods
imul
mov
or
push
lret
das
mov
fldcw
cltd
nop
adc
repnz
and
and
inc
in
shll
iret
mov
repz
test
mov
roll
ljmp
mov
fstpl
adc
adc
cmp
mov
jge
stc
jo
add
cmp
mov
rcr
fst
repz
lcall
jmp
adc
push
fldl
fcom
loop
das
aas
cmp
aam
aaa
cld
lret
pushf
call
jno
cmpsb
push
sub
jb
gs
mov
aad
movsb
bound
call
mov
sbb
out
mov
ljmp
push
popa
adc
js
jg
lds
leave
lods
mov
push
cmpsb
and
es
dec
mov
xchg
shl
inc
pop
xor
fxch
adc
jge
fwait
aam
mov
mov
rcrl
imul
jl
je
jbe
mov
add
dec
pop
aad
xchg
faddl
ja
iret
xchg
inc
shrb
orl
out
lods
cltd
popa
xor
dec
jl
adc
xchg
and
cwtl
mov
sbb
shrl
xchg
leave
ret
dec
dec
mov
or
loope
jp
pop
je
lods
filds
pop
xchg
lret
lods
out
pop
xlat
cmpsl
inc
push
rclb
fnstsw
je
and
cwtl
test
jl
and
xchg
sbbl
inc
testb
dec
dec
sub
shr
lods
adc
push
inc
movsl
push
push
mov
jg
ljmp
push
cs
hlt
repnz
call
inc
xchg
xchg
xor
stc
mov
out
jb
sti
dec
divl
inc
js
fwait
jmp
idivl
js
cmp
icebp
stc
shrb
sub
out
adc
sub
xor
add
mov
adc
pop
xor
pop
adc
jbe
shll
cmp
push
mov
or
and
cmp
push
and
hlt
loop
sub
repnz
imulw
jp
rorb
xchg
mov
jne
jl
push
bound
sbb
loopne
jmp
call
xchg
lock
sub
movsb
dec
xchg
jbe
shll
inc
push
lds
fcoms
xor
pop
inc
mov
push
pop
push
xor
fdivl
add
or
pop
out
cvttps2pi
call
mov
lds
nop
mov
mov
push
out
xor
sahf
jge
mov
insl
push
shrl
cwtl
pop
xchg
out
divb
stos
mov
clc
mov
cvtpi2ps
sub
lcall
cli
roll
push
xor
jo
mov
jmp
lods
mov
xchg
cs
js
add
dec
movsl
mov
add
jns
inc
lcall
mov
inc
call
xor
jge
sbb
adcl
or
les
sbb
dec
cmc
jns
jl
inc
push
xor
jo
add
mov
mov
mov
out
mov
mov
aam
fidivl
push
icebp
je
and
mov
xchg
fnstcw
xchg
pushf
shll
ds
data16
mov
push
dec
cmp
out
mov
sbb
ja
jp
ret
psrad
outsl
je
int3
mov
dec
mov
or
rcrl
aam
pop
pop
mov
inc
sub
xor
aam
cwtl
pop
dec
sti
pop
dec
add
cmp
jge
int3
ljmp
addr16
push
pusha
xchg
sbb
scas
loope
inc
aas
mov
ja
int3
push
sub
sub
test
jge
in
sbb
pop
push
adc
add
movsb
pop
ficoml
imulb
pop
and
mov
fsts
pop
fisubl
mov
push
mov
icebp
sub
and
cmp
and
int
out
mov
jecxz
mov
dec
push
or
or
and
or
pushw
std
test
out
sbb
lods
or
arpl
iret
leave
stos
es
mov
or
ror
dec
leave
xlat
and
xor
mov
int3
ja
sbb
fmuls
push
push
data16
jl
lret
stc
loope
mov
cltd
adc
cmp
cmp
scas
lea
cmp
in
data16
les
push
inc
jp
push
inc
int
dec
fildl
jae
push
dec
cmp
mov
pop
js
xor
out
dec
fstpt
insl
lahf
leave
mov
aam
cmc
add
js
aad
ret
and
sbb
es
jb
int3
cmp
jmp
into
sub
inc
sbb
push
pop
push
data16
jno
push
outsb
cmp
push
std
insl
out
inc
push
mov
jge
shlb
roll
ljmp
in
or
sbb
cmp
repnz
fstpl
cwtl
cmc
movsb
test
mov
jb
int3
pop
push
ss
inc
in
pusha
sub
mov
cwtl
inc
pusha
stos
mov
ss
arpl
stos
ror
divl
fadd
mov
pop
jne
cmp
mov
jp
sti
pusha
pusha
cli
and
xorl
lods
xor
aaa
and
int3
xchg
mov
xor
cmp
and
movsl
icebp
lret
sub
jb
jno
and
sbb
hlt
jns
pop
cld
rcll
mov
fisubl
mov
sarl
cmp
in
lea
and
es
les
js
out
mov
lock
inc
int
aam
pop
mov
ret
in
or
push
movsb
mov
aam
or
xchg
sub
dec
clc
xor
inc
insl
addr16
xchg
jmp
mov
popf
clc
xchg
fdivs
out
lock
out
inc
cld
shll
out
xchg
jns
xor
cmc
in
iret
shrl
push
cld
push
xchg
mov
push
bnd
mov
testl
mov
dec
sub
loope
mov
dec
fldln2
iret
push
xchg
xor
push
xor
inc
push
jb
int3
mov
push
pop
lods
and
adc
dec
mov
out
xor
mov
in
mov
addr16
mov
loope
mov
out
push
and
movsl
xchg
jo
sub
mov
xchg
adc
cmp
inc
and
mov
xchg
cmp
filds
adc
ss
js
mov
das
add
xor
mov
mov
ds
xchg
inc
cmp
ljmp
dec
pop
jne
xchg
lret
ja
push
lret
insl
dec
mov
jns
leave
push
dec
fwait
push
lret
adc
xchg
ljmp
jl
icebp
fisttps
and
jle
push
push
mov
xchg
fcmovne
scas
fldcw
inc
pop
ljmp
push
jae
fwait
xchg
test
xchg
iret
sarb
sbb
fiaddl
shlb
pop
sub
roll
xchg
cltd
xor
jg
xor
xor
fcmovnu
pop
iret
andb
stos
addr16
test
push
out
pop
push
scas
divl
aad
in
icebp
or
adc
sbb
das
rcrb
cmp
adcb
mov
stc
loop
cld
hlt
mov
xor
shll
in
cmp
std
mov
test
test
jnp
call
std
dec
imul
mov
add
cmp
dec
lea
mov
bound
test
sar
mov
pop
sahf
cmp
inc
xor
into
iret
ficoms
sbb
loop
sbb
sti
adc
mov
xor
push
mov
jge
jne
das
pusha
mov
mov
xlat
loopne
jbe
add
or
add
mov
mov
movb
shr
inc
hlt
or
in
data16
ljmp
push
push
clc
popa
mov
pop
test
dec
push
xchg
fcomps
jg
dec
sbb
and
adc
rclb
add
inc
ss
push
xor
mov
daa
jle
mov
sbb
fiaddl
mov
xor
aad
dec
movb
mov
notb
add
xchg
insl
mov
xor
sub
and
jmp
push
pushf
insl
mov
pop
add
dec
outsb
cld
lds
scas
addr16
imulb
adc
lret
sbb
rolb
shlb
rcrl
xor
out
and
jnp
scas
fnstcw
adc
mov
loop
and
push
mov
sar
scas
aam
jnp
lcall
cmp
aaa
cmovl
js
vandnpd
fwait
nop
and
mov
dec
inc
xchg
lret
cmp
cmc
push
sub
add
push
leave
sub
mov
out
push
test
ret
xchg
and
rcl
daa
xor
xor
pop
ja
and
dec
notl
ret
repnz
push
xchg
aad
rcrl
push
pop
adc
movsb
push
frstor
dec
int3
dec
scas
mov
cmpsl
mov
xlat
shr
adc
jne
arpl
out
lds
in
ja,pt
mov
adcl
shrb
adc
fimuls
mov
mov
cmc
out
add
mov
addr16
loope
cmp
clc
add
push
inc
jl
dec
and
gs
jg
hlt
imul
insb
pop
loope
cmp
jno
cld
je
mov
jmp
movsl
rcrl
inc
push
or
inc
loope
pop
jmp
int
stos
jecxz
cmp
xor
mov
shl
adc
push
je
in
hlt
adc
rcl
out
je
inc
cmpsb
lods
adc
push
push
dec
ret
popf
xor
push
pop
pop
outsb
adc
inc
out
call
xor
pop
adc
fistpll
push
fstl
pop
pslld
add
nop
xor
in
ror
data16
pop
mov
jb
es
jmp
enter
ds
adc
mov
lcall
or
push
xor
add
adc
xor
pop
fcoms
inc
in
shlb
out
jl
sub
data16
lahf
xor
or
lea
pop
fimull
stos
andb
dec
repnz
js
adc
dec
push
and
lock
ja
mov
jbe
xor
es
dec
dec
and
mov
jno
jmp
mov
stos
movsb
loop
xchg
xor
xchg
mov
scas
testb
dec
inc
sti
rol
sbb
and
mov
cmp
push
push
mov
out
jae
add
add
imul
sbb
xchg
iret
sbb
pusha
cld
insb
out
dec
mov
push
xor
mov
and
jle
in
sub
sub
push
ret
or
mov
and
in
icebp
mov
clc
fsubrl
push
aam
int
stos
xchg
xor
mov
pop
ss
ss
data16
fs
push
adc
pop
fistpll
pop
or
pop
not
jo
and
cli
fwait
gs
add
dec
mov
xlat
mov
ret
cmp
sbb
cs
pop
cmp
or
or
lods
je
mov
lret
jp
inc
cmp
rolb
xchg
mov
xchg
mov
push
mov
and
fwait
sub
sub
std
bnd
out
loop
cwtl
lahf
adc
xlat
or
aad
mov
add
mov
mov
std
push
cwtl
pusha
push
pop
jne
imul
or
sub
pop
mov
or
ss
jmp
scas
flds
xor
insb
add
arpl
xchg
xor
movsl
mov
in
inc
and
dec
push
loope
or
jbe
or
adc
stc
mov
jbe
and
ja
push
lret
rol
push
push
aad
sbb
mov
ljmp
int3
lret
lcall
sbb
cli
mov
mov
jae
pop
fwait
mov
nop
insb
ret
sbb
sbb
loope
fldcw
or
fs
sub
add
sub
cld
into
lcall
imul
add
imul
add
sub
cmc
std
add
add
je
xlat
sub
mov
test
das
lods
fs
jmp
divb
push
pop
mov
jmp
and
cmp
nop
fwait
mov
xlat
cs
xchg
sbb
shll
jecxz
inc
jns
dec
push
call
mov
pop
push
inc
push
cmp
pop
xor
dec
loop
in
fisubl
pop
out
jl
or
mov
mov
push
xor
outsb
jle
fcmove
popa
pop
jge
rol
nop
bswap
push
and
pop
stc
xchg
test
cmp
adc
push
ficoms
ds
out
ret
mov
fs
clc
jmp
loope
stos
xlat
cmp
sbb
ror
mov
aaa
and
mov
dec
ret
lods
shlb
mov
mov
mov
xchg
xor
cld
mov
out
outsb
mov
inc
mov
inc
je
cmp
hlt
sbb
idivb
add
ds
jmp
pop
dec
jg
hlt
into
fbstp
mov
lea
push
xchg
gs
mov
ret
ret
pop
mov
jno
out
add
cld
sahf
and
mov
scas
jno
pop
shl
or
les
push
push
jns
push
or
cld
imul
test
and
sbb
jg,pt
mov
or
push
ja
addr16
aam
nop
shr
hlt
mov
pop
popa
dec
jae
inc
ljmp
in
insl
sub
mov
lret
sahf
push
loopne
outsb
add
es
imul
aam
lahf
rclb
faddl
push
shll
xchg
rcrl
push
enter
mov
test
and
push
shrb
xlat
add
or
mov
sub
ret
xchg
outsb
sub
fs
andb
aaa
adc
add
mov
lds
jae
dec
push
je
mov
out
xor
loope
andl
mov
mov
not
sub
fcompl
aas
push
push
mov
xor
push
je
popa
call
rolb
arpl
mov
ja
lret
or
daa
add
stc
leave
fs
mov
jae
lods
inc
xor
xor
stc
sbb
mov
adc
or
movb
out
test
push
ds
xchg
and
lahf
xchg
cmpb
aas
fdivp
lock
sub
push
ret
cmpsb
sub
push
mov
push
pop
cmp
movsl
xchg
out
inc
loope
fldenv
gs
mov
jae
xchg
sti
pop
movsl
sbb
imul
addb
cmp
push
push
das
mov
mov
xorl
int
fisubl
cld
mov
ret
sub
pop
push
out
popa
lods
jmp
loope
dec
cmpsb
push
mov
inc
hlt
xor
fs
sbb
dec
mov
cmp
idivb
iret
inc
out
xchg
andl
mov
into
sbb
das
push
sbb
lahf
fcompl
mov
sub
dec
aad
sub
lret
xor
and
fs
movsb
ret
sbb
fldenv
xor
ljmp
bound
loope
in
push
outsb
fistl
xor
jb
je
push
cwtl
or
or
adc
push
outsl
pop
punpckhwd
les
in
add
sbb
xchg
shl
add
cwtl
fptan
lods
add
mulb
aad
scas
mov
fsubp
push
or
xor
mov
mov
sbb
jbe
jo
mov
imul
rcll
jnp
sarl
je
nop
mov
enter
pop
aaa
mov
test
movsl
lea
and
and
jle
cmp
inc
aaa
push
rcrb
test
cld
cmp
jns
outsl
fisubrl
stos
movsb
dec
cmp
lock
inc
push
mov
das
mov
xor
das
arpl
sub
cmp
fisubrs
inc
leave
stos
cmpsl
mov
je
dec
add
push
sti
roll
xor
sar
mov
push
xorl
repnz
pop
clc
shll
mov
sbb
jb
mov
call
xchg
repz
test
inc
and
jb
and
xchg
cmp
test
imul
jne
sbb
nop
aad
dec
cwtl
std
ficompl
insl
aad
mov
fstps
out
pop
adc
cltd
lahf
mov
lock
mov
shr
es
jne
pop
xchg
or
cmpsl
ret
in
jle
and
ljmp
ffree
out
xchg
mov
cmpsl
jecxz
xor
or
adc
outsb
ds
jmp
jle
xchg
mov
mov
loopne
sub
scas
loop
fwait
add
inc
dec
les
rcrb
lock
sbb
es
jge
sbb
pop
sbbb
adcb
pop
cmpsl
outsl
mov
mov
jge
cmp
push
mov
aaa
adc
insl
pushf
ret
lret
mov
imul
rcrl
xlat
pop
pop
inc
inc
test
sar
pop
pop
push
pusha
ficompl
jo
lock
push
lahf
fimuls
shll
ds
xchg
or
std
aas
ss
pop
push
je
add
int3
lds
xlat
das
xchg
mov
mov
xchg
jg
stc
clc
and
inc
cs
lock
dec
daa
mov
aaa
movsb
jo
push
and
xchg
jnp
shl
mov
enter
aad
cmpsb
mov
lods
mov
push
lea
mull
mov
or
outsl
sbb
adc
fisubrl
mov
arpl
sub
sbb
in
inc
and
nop/reserved
out
xor
popf
jecxz
sub
mov
pop
mov
cli
xchg
push
sbb
mov
push
movsl
outsb
movsb
jns
xchg
push
orl
cmpsb
mulb
mov
add
dec
sahf
sub
scas
inc
pop
jnp
sbb
mov
mov
sbb
push
scas
push
inc
cmc
sarb
xchg
and
or
xchg
mov
pop
jbe
das
pop
cs
std
in
pop
lods
bound
mov
pop
imul
enter
fnstsw
icebp
icebp
outsb
push
das
rcrl
jno
loop
fsub
xor
out
inc
aaa
inc
jbe
cmp
xchg
pusha
inc
popa
pop
and
cmp
push
or
repnz
sub
adc
fdivp
mov
icebp
pushf
loope
pop
jnp
xchg
push
insl
fs
in
adc
aas
not
dec
jbe
sbb
or
negb
jp
stos
push
cmp
jb
mov
movsl
scas
pop
movb
sarb
pop
psubb
mov
faddp
jb
jecxz
or
stos
add
outsb
push
shr
sahf
out
or
ret
loope
add
cmp
pushf
ret
push
data16
push
pop
out
ss
loope
dec
sub
je
push
or
jle
inc
roll
iret
insb
xchg
mov
jb
pop
ja
mov
popf
aas
jge
rorb
loop
inc
inc
pop
jg
mov
jno
xchg
cmp
test
push
nop
scas
fdiv
mov
fs
mov
aam
test
adc
mov
clc
and
jns
int3
pop
call
or
xchg
mov
dec
mov
mov
outsb
jmp
or
es
cwtl
out
push
es
cmp
pusha
jg
lcall
test
push
mov
adc
lahf
cmp
rcll
dec
stos
push
jb
dec
aam
xchg
outsb
loope
jle
aaa
hlt
adc
lods
and
inc
jns
adc
jns
cmp
std
jnp
popl
mov
dec
test
push
adc
jle
xchg
inc
sbb
daa
out
sbb
call
xor
xlat
nop
mov
and
adc
cli
data16
push
sbb
dec
inc
test
xlat
mull
popf
std
enter
daa
push
call
inc
les
mov
pop
and
add
std
enter
push
cltd
out
push
hlt
fimull
mov
pusha
sub
push
pop
push
dec
imul
clc
clc
cmp
or
call
sub
insl
mov
rcll
inc
mov
iret
inc
movsl
out
jno
and
jle
dec
jo
adc
enter
adcl
and
shll
popf
add
mov
out
cmp
int3
ss
shrb
sti
dec
cmp
in
insl
push
imul
jle
sbb
mov
jle
lds
test
loopne
dec
rorb
aaa
or
mov
jmp
mov
clc
fldl
push
lahf
and
negb
dec
lahf
mov
mov
sbb
jnp
mov
inc
fistps
mov
mov
and
xor
enter
aaa
ss
dec
pop
aad
cs
adc
and
mov
stos
das
lea
jnp
popf
mov
cli
mov
lods
test
sub
pop
mov
dec
std
aaa
xchg
jo
outsb
in
xorl
dec
mov
add
jg
fstps
clc
sbb
jnp
pop
jne
cld
xchg
aas
push
sahf
adcl
dec
pop
ja
and
mov
mov
cmpsl
or
push
sub
mov
test
test
xor
sbb
int3
cltd
push
or
dec
pushf
mov
imul
stos
mov
sbb
xchg
sbb
dec
cmpsl
bnd
out
fcmovb
sti
and
sub
and
pop
lock
xlat
and
or
js
xor
dec
xchg
lea
cmp
loop
sbb
lret
jae
jo
jnp
or
ds
sub
jae
jnp
fildl
loop
pop
subl
rcr
pop
es
dec
imul
movsb
aam
in
jnp
xchg
int3
cmp
sub
out
adc
ret
loop
xor
cmc
test
bound
into
push
mov
aad
pop
dec
sar
jg
xlat
sti
cs
and
or
addr16
in
or
adc
lea
mov
das
test
push
mov
or
jne
loope
push
xchg
fsubs
movsb
dec
cmpsb
mov
shll
mov
hlt
icebp
jae
cmc
pop
xor
inc
push
fsts
dec
adcb
mov
inc
out
sbb
jecxz
outsl
fidivrl
pop
fucomp
clc
rcrl
pusha
arpl
clc
popa
mov
pushf
xor
ds
mov
test
outsb
pop
xchg
xor
pop
adc
cmp
pop
xchg
cmpsb
and
cmpsb
cld
fwait
mov
psubb
loope
xchg
mov
rcll
mov
mov
lods
mov
push
cwtl
push
mov
xchg
stc
add
rorb
sbb
jb
sbb
fldenv
push
sbb
nop
push
ljmp
jo
add
lea
dec
or
dec
jp
insl
lahf
bound
inc
lds
idivl
aas
jmp
add
pop
lret
sub
call
cmpl
jbe
adc
lcall
adc
mov
nop
fs
lea
push
stos
lret
test
aad
sbb
cmpsl
mov
in
pushf
aas
cmp
jo
ljmp
hlt
lcall
sbb
rcr
inc
mov
insb
inc
lret
sarl
sub
clc
gs
or
repnz
or
jo
outsb
out
add
lods
add
lahf
fisubrs
ja
jae
inc
out
sbb
lret
lock
xchg
xchg
xchg
js
jns
subl
not
popa
and
subb
push
lahf
xlat
mov
add
icebp
cmp
pop
mov
fxch
push
je
nop
mov
cmpsb
in
or
jl
jb
fucom
push
imul
mov
fs
mov
jg
mov
and
fs
xchg
imul
cltd
mov
stos
push
lock
or
inc
cltd
xlat
in
je
mov
jne
cmp
pop
mov
sarl
insl
data16
stos
lret
icebp
mov
sbb
popf
sbb
mov
xlat
mov
push
xchg
aam
dec
lods
pushf
adc
mov
fcmovne
jecxz
xchg
mov
and
nop
pop
mov
repnz
pop
test
and
in
std
cmp
mov
mov
shlb
popf
sbb
jmp
jecxz
cmp
mov
out
jecxz
inc
inc
test
sahf
cmp
mov
insl
push
push
push
fistps
lahf
into
or
adc
addr16
movsl
in
adc
dec
inc
ds
xchg
cmpsl
xchg
xor
xchg
sub
ror
repnz
cmp
clc
pop
jmp
mov
aaa
adc
movsb
pop
push
lods
lea
jb
rorl
int
cmpsb
jmp
add
cs
pop
pop
loopne
mov
mov
lret
cmp
shrl
rcrl
into
mov
or
cmp
xor
mov
inc
scas
lods
and
inc
stos
repnz
sahf
movsl
inc
pop
negl
int
lock
lret
out
fidivs
jae
repz
xor
mov
into
add
push
mov
mov
icebp
faddl
popf
dec
inc
adc
subl
sbb
call
adc
add
rcll
ds
imul
loopne
inc
aam
movsl
cmp
orb
hlt
xchg
and
addl
jo
imul
stos
adc
test
loopne
fidivrs
stos
outsl
push
inc
cli
xchg
outsb
mov
mov
push
sub
push
dec
xor
gs
loop
jb
pop
in
outsb
in
cmp
cs
and
mov
inc
sub
clc
cli
xor
sbb
sbb
fmul
jmp
ljmp
stc
and
mov
xorl
in
fimuls
in
cmp
inc
ret
cmp
int
mov
les
sahf
mov
icebp
mov
inc
sub
dec
ret
push
in
insl
push
in
dec
stos
and
hlt
xchg
jle
gs
les
cmp
popf
std
sarl
fisubrl
jl
out
xor
out
lock
les
push
ror
jbe
popf
fs
mov
stc
cld
fldcw
mov
inc
xchg
xchg
orl
dec
dec
data16
fildl
xor
outsl
xor
lods
fcoms
push
stos
dec
mov
and
sbb
mov
mov
jnp
mov
inc
adc
push
leave
dec
inc
insb
adc
loopne
xchg
out
into
add
jg
adc
mov
or
lds
or
stos
mov
jns
cmp
clc
mov
pop
test
mov
inc
movsb
aas
add
cmp
xor
aam
push
lcall
and
scas
sahf
xor
in
xchg
mov
sub
add
rcrb
addr16
addb
and
cmp
in
cmp
fcmovb
and
popf
xorb
arpl
xchg
testl
pop
mov
mov
pop
popf
hlt
xor
push
xor
test
rorb
cmp
lret
mov
aaa
clc
or
jne
dec
adc
push
ficoml
lea
sbb
xor
lea
cmp
add
rorl
dec
and
leave
stos
imul
and
jo
push
sbb
add
cli
and
ror
inc
jge
or
enter
push
mov
inc
push
out
movsb
ss
mov
daa
and
or
in
xchg
push
out
or
cmc
sti
stos
lods
test
sub
sub
iret
jmp
lea
sbb
dec
jp
or
enter
in
aaa
add
ljmp
push
mov
jo
outsl
mov
add
arpl
mov
test
push
clc
sub
xchg
cmp
es
dec
xchg
mov
dec
test
mov
mov
js
test
lea
push
add
jae
xor
loope
or
sarl
or
and
les
movsb
mov
pop
sahf
and
jbe
xor
scas
pop
jae
movsl
loope
add
stos
js
int3
int
out
movsb
adc
jg
stc
push
add
inc
dec
into
sarl
js
mov
scas
xchg
push
cwtl
es
test
jmp
xchg
push
rorb
mov
dec
dec
sbb
or
sub
add
mov
fsubl
call
cld
leave
scas
shll
mov
sahf
int
add
dec
cmpsb
lock
subb
mov
pusha
lret
sarb
aam
xchg
xor
mov
lods
cmp
addr16
je
subb
sub
mov
cwtl
push
mov
add
fidivs
add
lea
outsl
fs
mov
addr16
aam
dec
dec
cmp
push
pop
popf
adc
lock
push
push
xchg
inc
add
xchg
adc
aas
repz
repnz
pop
xor
sbb
lods
data16
push
xchg
test
aam
dec
sbb
lahf
add
jp
sbb
mov
mov
inc
jbe
in
js
mov
pop
xchg
jecxz
out
or
nop
rorl
lods
cmp
cmp
fidivs
sahf
cmpsb
pop
pop
outsb
dec
pushf
sub
int3
stos
adc
lods
lods
aaa
inc
push
lret
cwtl
jo
test
popf
jo
or
aaa
pop
cmpsl
sbb
aaa
cld
movl
rcrl
adc
stos
jl
inc
into
addr16
shrb
dec
jmp
dec
ficomps
rcl
arpl
jae
push
pop
pop
test
sub
decb
pop
xlat
lds
mov
lods
or
xchg
adc
rclb
pop
aaa
cs
xchg
outsb
out
add
xor
adc
js
call
mov
push
pop
pop
loop
mov
andl
xchg
fcompl
imul
xor
push
cmp
test
lds
mov
aad
mov
push
sarl
sahf
sbb
cli
lcallw
jno
stos
divb
hlt
push
add
mov
mov
shl
push
cmp
jmp
or
jmp
xor
or
xchg
icebp
jo
movsl
lahf
in
out
shrb
lea
cwtl
mov
sub
jae
inc
dec
rclb
mov
adc
mov
cmp
int
mov
imul
sti
and
ljmp
jnp
jnp
fsubrs
repz
sub
loopne
xchg
push
fs
adc
ret
lods
dec
and
fstps
and
cwtl
jb
mov
adc
cmp
in
inc
daa
insb
push
outsl
cld
lret
daa
or
mov
lea
ss
out
inc
push
jns
inc
inc
mov
xor
rcrb
hlt
dec
cld
aaa
fldt
lock
cmpsb
push
cltd
sub
xlat
movsl
aam
rcrb
pop
jle
cmp
loope
test
out
mov
jno
cld
dec
adc
cmc
cwtl
outsb
inc
add
and
cmp
sbb
add
movsb
adc
divl
nop
test
inc
add
lock
xchg
push
test
mov
xchg
dec
pop
rcrb
cs
insb
xchg
add
cmpl
xor
jno
mov
or
ljmp
push
pop
std
cmp
xchg
mov
adc
movsl
jo
and
std
cmp
inc
push
mov
jb
int
mov
lahf
mov
in
test
jg
fadds
add
ds
sub
push
dec
mov
push
enter
jecxz,pt
mov
outsb
jmp
imul
adc
lret
stos
sub
es
and
push
iret
sbbb
push
xor
mov
add
adc
mov
movsl
hlt
sahf
cs
or
cs
jmp
lret
cmpl
pop
xor
stos
push
push
jbe
ret
rcrb
fdivrs
aaa
jb
adc
dec
pop
mov
data16
dec
test
addr16
js
xchg
aas
inc
xchg
or
aad
mov
or
xor
jmp
loop
daa
sbb
sahf
mov
jl
ds
mov
insl
pusha
ljmp
push
xchg
sbb
and
or
jmp
pop
and
aam
sub
je
ret
fidivs
xor
cmp
out
pop
popf
dec
inc
or
negl
stc
cmp
sub
int
mov
mov
xor
pusha
push
sub
dec
pop
jle
out
xchg
mov
push
pop
sub
mov
scas
or
int3
mov
add
sub
and
jns
hlt
push
cmp
xor
lods
clc
jl
stos
hlt
cs
sahf
or
pop
rcrb
ficoml
lea
int
xchg
inc
stos
pop
cltd
adc
pop
dec
clc
out
mov
dec
movsb
js
test
dec
mov
enter
xor
divb
test
sub
xchg
xor
data16
push
mov
cmp
dec
je
js
leave
pusha
pop
pop
inc
scas
enter
fwait
jp
rcll
pop
in
inc
test
mov
and
nop
xor
fsubr
xor
jge
faddl
aaa
lods
pusha
cmp
fstps
dec
sub
gs
mov
jle
pop
mov
jnp
fistpl
test
push
push
in
cli
pop
imul
mov
adc
adc
add
pop
js
fisubrs
push
cld
les
das
leave
rcrb
test
stos
bnd
test
nop
sti
int3
push
mov
xchg
cli
xor
jmp
or
dec
fists
mov
jmp
orb
or
xor
sbb
movsl
mov
mov
xchg
lret
mov
imulb
loope
sbb
into
sbb
pushf
add
sbb
xor
fcomip
sbb
sbb
adc
fldl
mov
push
add
jecxz
pop
xor
mov
add
lahf
in
ret
aas
adc
div
das
ret
push
and
jns
js
orb
negl
pushf
dec
in
xchg
cmp
das
jg
push
sub
mov
adc
jbe
jg
push
fimuls
andl
sarl
jle
mov
gs
hlt
xchg
cmp
rcrb
scas
jge
cmpsl
das
test
cwtl
repnz
mov
enter
jl
or
cmp
fdiv
xor
push
mov
mov
pop
aad
cld
cwtl
jne
imul
push
mov
or
cmp
cmp
sarb
in
ret
push
xor
inc
mov
push
xchg
push
xchg
pushf
mov
pushf
sbb
sbb
mov
mov
sbb
fnstcw
daa
call
mov
mov
in
jl
inc
dec
mov
fildll
cmp
xlat
lods
jge
out
cmc
push
icebp
cltd
lahf
cmp
ficomps
xchg
in
arpl
fldt
sbb
pop
shr
fadds
pop
test
push
cmpsb
loopne
dec
jb
or
jmp
mov
mov
in
sub
cwtl
imul
test
lea
rcll
jne
fstp
xchg
testl
mov
gs
loop
imul
in
scas
xchg
adc
out
push
ljmp
pop
xchg
dec
cmp
into
jecxz
cmpsl
aaa
jns
fcompl
push
sbb
cmp
adc
inc
xor
pop
jnp
cmpl
push
dec
ss
jb
cmp
mov
cmpsb
push
push
inc
cmpsl
dec
mov
icebp
push
jle
js
jne
mov
lea
leave
sti
aaa
add
and
push
push
jb
push
push
lret
mov
pop
ljmp
mov
stc
dec
and
icebp
xlat
loopne
lods
neg
cld
lock
push
lea
cmpsl
les
iret
out
test
mov
int3
popf
xorl
adc
cmpsl
add
cs
push
jb
mov
push
dec
adc
rcr
dec
insl
idiv
cmovs
imul
cmp
test
into
outsl
inc
xchg
mov
dec
adc
adcl
dec
stc
aas
fcoms
and
dec
out
loope
rclb
jmp
inc
pop
int
leave
enter
push
test
jb
sub
movsl
daa
sbb
fcoml
fildll
adc
aaa
aaa
jle
cwtl
pop
pop
ljmp
and
stc
lret
popf
xchg
shr
pusha
dec
cmp
test
int
