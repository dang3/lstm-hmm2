out
call
in
sub
andb
push
push
push
push
xor
pop
lea
fcomi
stos
push
ljmp
pop
xor
jmp
mov
pop
ja
test
add
loop
mov
dec
gs
in
in
dec
mov
xor
cs
jbe
dec
mov
insb
jmp
mov
push
call
pop
mov
jg
mov
push
push
push
push
push
mov
push
push
call
mov
and
adc
clc
lea
push
add
in
and
call
jbe
adc
adc
pop
sbb
outsl
fisttps
pop
pop
pop
leave
ret
add
add
mov
mov
push
push
xchg
sub
and
data16
jbe
pop
popf
fadd
add
in
mov
je
mov
lcall
push
or
mov
ror
jge
sti
daa
pop
inc
pop
inc
aaa
and
mov
mov
jle
sub
lea
push
push
push
sbb
pop
dec
mov
or
xchg
daa
xor
clc
add
in
push
fists
push
rol
or
fxch
lock
add
push
pop
sbb
or
adc
movsb
mov
fdivr
cmp
lock
cmp
je
push
adc
clc
sbb
pop
or
inc
clc
cmp
or
push
lret
insl
or
push
xorb
je
lea
or
scas
dec
mov
pop
je
jbe
pop
out
cmp
pop
xor
or
shrb
adc
dec
mov
lods
lea
jo
push
push
scas
fildl
or
pop
or
mov
fstps
or
pop
test
cmp
adcl
add
adc
push
sub
mov
sbb
or
jno
sti
sti
int3
dec
inc
cmp
outsl
insl
out
pop
dec
mov
and
jbe
fldcw
push
mulb
divb
or
enter
cltd
add
add
fnstcw
cld
push
adc
leave
fadds
fucom
rol
inc
testb
movsb
adc
out
in
rclb
lock
mov
test
mov
or
out
in
mov
pusha
push
mov
mov
dec
or
decl
je
mov
mov
ror
mov
inc
inc
dec
dec
test
jne
push
pop
and
fldenv
in
xor
mov
pop
mov
add
mov
movl
pop
pop
mov
or
fwait
xchg
add
lret
jnp
add
cld
cltd
dec
clc
pushl
sbb
jecxz
cmp
jge
sub
cmp
adc
and
fs
leave
std
std
push
and
xlat
mov
sbb
cmp
adc
add
adc
aaa
dec
scas
mov
and
cmp
jb
out
ds
pop
push
mov
mov
cwtl
imul
lea
or
nop
in
in
mov
jae
testl
testl
sub
mov
cli
adc
dec
sub
por
xchg
lods
inc
or
mov
fistpl
mov
cmpb
inc
add
adc
cwtl
stc
sub
ss
inc
push
adc
mov
mov
xor
mov
test
je
enter
push
push
add
pop
int3
icebp
outsl
sub
andb
xor
cmp
mov
push
inc
push
jne
mov
mov
mov
inc
inc
test
jne
push
lods
out
pop
sub
push
mov
xor
inc
mov
pop
xchg
cmp
cld
push
push
std
dec
mov
dec
imul
lcall
popa
add
pop
lcall
add
sub
popw
or
cld
fstps
inc
or
xchg
dec
test
inc
add
stos
mov
mov
imul
xor
add
push
cmp
in
jmp
sbb
push
push
and
in
je
push
pusha
adc
lahf
push
push
pop
testl
lret
mov
sti
leave
std
mov
jl
mov
xor
jo
mov
std
lret
insl
mov
mov
jnp
mov
push
mov
sbb
add
push
pop
sar
pop
int3
jae
inc
in
inc
xchg
rcll
xchg
xchg
sbb
cmp
dec
loop
into
pop
iret
imul
in
and
push
rclb
dec
loop
mov
out
cmpl
mov
adc
add
idivl
mov
nop
push
insl
xor
push
int
jnp
push
lcall
ud2
mov
mov
and
push
push
out
mov
or
push
mov
ret
fistpl
push
cmp
outsl
imull
add
lret
in
je
jae
pop
sti
sbb
xor
pop
sarb
enter
pop
daa
pop
add
hlt
xlat
cmpsb
mov
jo
subl
bound
pop
xlat
lcall
fcomp
xchg
or
lock
nop
ljmp
and
push
or
cmpl
insl
ret
dec
push
push
xor
mov
push
jl
sti
or
cmpsl
addr16
jl
or
or
cmp
push
jp
xchg
xor
pusha
push
adc
push
daa
inc
jl
mov
gs
in
in
jb
fsubrl
out
pop
out
call
insb
fwait
in
gs
cs
out
and
jle
inc
out
pop
pop
lock
xor
cmc
pop
test
or
mov
add
lods
xchg
or
or
sub
inc
lcall
mov
dec
xchg
je
enter
adc
add
mov
dec
jo
adc
xor
sub
add
push
sbb
adc
adc
stos
test
inc
inc
inc
push
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
addl
in
jmp
add
xor
adc
sub
imul
imul
mov
divb
inc
push
xor
dec
shll
nop
sahf
cmpsb
imul
cmpsb
imul
xchg
inc
mov
add
xor
cld
sti
nop
add
outsl
arpl
je,pn
insw
addr16
ss
jmp
xor
xor
inc
bound
push
jb
jbe
insb
gs
jae
mov
je
insl
xor
pop
add
dec
inc
dec
dec
and
pushw
gs
add
fdivr
outsl
imul
fs
adc
adc
punpckhbw
data16
in
sarl
imul
insl
fs
aam
in
aaa
xchg
cmp
aaa
stos
xor
cmp
add
test
mov
ret
scas
insb
fdivrs
jecxz
stos
nop
adc
xchg
jle
adc
inc
dec
xor
mov
fs
insb
inc
push
push
dec
inc
dec
inc
add
adc
mov
loop
inc
jg
mov
or
add
push
mov
decl
dec
add
dec
pop
nop
inc
add
fs
gs
mov
outsb
call
push
add
dec
push
push
adc
jb
addr16
insl
and
outsb
outsb
outsl
je
bound
jb
outsb
and
mov
filds
inc
dec
push
and
fs
jne
clc
mov
jnp
ja
fcoms
add
je
in
dec
arpl
jb
addr16
fs
cmp
xchg
std
fcomp
in
daa
lret
pop
fldenv
jb
xchg
in
xchg
xchg
arpl
push
inc
dec
add
add
xor
dec
adc
mov
or
es
mov
add
adc
add
ret
add
and
ss
xchg
push
xor
pop
push
or
outsb
jnp
test
dec
pop
mov
inc
repnz
inc
and
adc
lock
imull
in
pusha
add
bound
pop
mov
pop
es
add
fs
je
jl
subl
popf
test
push
pop
mov
cld
mov
daa
shrb
jae
xor
jbe
out
ret
pop
daa
pusha
add
jb
insb
outsl
arpl
and
in
lock
add
cmp
js
test
pop
pop
movsl
insb
lcall
and
movsb
shll
jl
mov
xor
test
lret
aas
pop
shll
mov
push
and
mov
fnstenv
dec
movsb
mov
rolb
fnstenv
mov
lcall
imul
xor
mov
pop
dec
shll
jle
lcall
shl
imulb
data16
mov
cmpsb
imul
cmpsl
imul
dec
roll
insb
pop
dec
cmp
cmpsb
pop
ss
push
or
sahf
fcmove
xor
in
mov
cmpsb
add
shll
dec
xlat
xor
call
mov
js
movsl
test
push
out
clc
shll
add
sub
xor
xor
inc
dec
pop
push
cmpsb
xchg
scas
mov
dec
shll
and
mov
push
xchg
call
scas
or
add
push
add
shll
bound
sbb
ret
jbe
dec
outsb
je
insl
mov
cli
jb
gs
stc
and
and
lods
sbb
push
gs
fs
sub
and
mov
dec
jo
outsb
push
jb
inc
adc
xor
dec
dec
inc
push
and
out
push
pop
push
data16
bound
dec
inc
push
push
inc
push
inc
fdivr
mov
pop
dec
sbb
jp
data16
push
imul
sbb
jne
mov
pop
jae
mov
outsb
sbb
sbb
inc
jge
add
fwait
or
add
rolb
or
popf
mov
add
shlb
pusha
add
push
flds
add
push
or
inc
add
or
or
and
fistps
sub
or
and
test
das
pop
pop
and
cmp
shlb
ja
aas
xor
or
add
mov
or
sarl
incl
and
add
cltd
sub
test
add
xchg
adc
xchg
inc
xchg
ret
pop
test
mov
fistpl
test
lea
xchg
cwtl
fldt
int
xor
push
jg
iret
pop
xor
ud2
push
add
fbstp
test
ja
jae
push
packsswb
je
jne
jmp
repz
gs
sbb
pop
add
gs
add
ja
push
inc
jb
push
and
ja
or
push
mov
jae
pop
and
fs
addr16
xor
push
sbb
fdivrp
outsb
pop
movb
pushf
popl
idiv
outsl
call
mov
jmp
sar
push
clc
not
jmp
mov
pop
push
push
or
adc
mov
imul
add
xor
test
sbb
push
add
add
es
jb,pn
jb
arpl
enter
mov
xor
sub
inc
pop
jge
int
jb
les
out
aaa
push
enter
xchg
jno
xlat
jle
mov
sub
je
ja
lea
push
jns
stos
je
incl
orl
jge
jl
or
pop
add
aaa
daa
dec
pop
jae
inc
in
jo
into
and
popf
xchg
mov
add
mov
cli
dec
push
arpl
popa
insl
cli
std
mov
loopne
outsl
jb
inc
popa
jb
pop
insl
jns
clc
jg
cli
js
jno
jbe
mov
mov
mov
jmp
das
xor
mov
push
push
or
push
push
sbb
mov
cmp
push
mov
add
shr
std
xchg
add
and
mov
add
add
pusha
dec
jne
add
std
fisttpll
push
push
add
jne
sti
mov
test
int3
add
adc
pop
adc
add
cmp
fwait
inc
or
scas
cld
repz
or
loop
inc
adc
push
lea
sbb
and
or
lcall
and
outsb
and
inc
subb
or
nop
add
pushf
or
and
aaa
and
and
or
pushl
or
inc
imul
add
add
lea
test
js
lea
xchg
mov
sbb
mov
or
insb
xor
out
push
stc
ret
mov
sbb
mov
out
out
out
fcmovnu
mov
out
cmovs
add
data16
ljmp
aaa
int
iret
imul
fstpl
fwait
bound
adc
leave
out
dec
bound
mov
add
insl
daa
mov
and
adc
mov
pop
fsubr
enter
jecxz
and
jecxz
xor
aas
xor
mov
sub
fwait
in
rcr
loope
adc
out
loope
or
outsb
mov
roll
pop
jnp
jae
leave
mov
daa
data16
enter
cmp
adc
xor
sti
clc
std
loope
mov
in
fwait
in
mov
fucomp
out
idivl
sbb
out
push
sub
adc
cwtl
xor
sbb
je
mov
fsubs
repz
daa
pop
filds
sbb
xor
int
adc
fstps
xchg
outsb
stc
daa
fs
out
out
xchg
je
fistl
mov
subl
push
lret
nop
andl
mov
fmulp
idiv
jnp
pop
adc
stos
add
jnp
add
sbb
push
mov
mov
cmp
dec
push
mov
inc
mov
inc
xor
cmp
idivl
add
dec
daa
stc
mov
dec
jge
outsl
xchg
push
pop
dec
movl
insl
add
sub
out
idivb
in
adc
push
popl
pop
sbb
mov
lods
popf
popf
cmp
xchg
mov
add
sbb
dec
rorb
push
xor
fidivs
cmp
ja
mull
fisttpll
cli
mov
insb
insb
and
mov
ret
fcmovnu
adc
fcoms
out
inc
out
and
or
lcall
jnp
dec
ret
inc
jo
mov
or
movsb
imul
out
sbb
cmp
sub
daa
xor
fsubr
in
mov
in
cmp
idivl
js
push
xor
add
mov
inc
getsec
ja
fninit
inc
and
xchg
fistpl
cmp
loope
out
lods
insl
dec
xorl
lahf
xor
mov
xor
pop
sub
xchg
mov
jns
jmp
in
push
pop
mov
dec
and
fisttpl
stc
push
nop
and
jle
jnp
or
hlt
jmp
out
scas
push
inc
notl
dec
push
add
xor
fucomip
add
jo
decb
sub
pop
xchg
scas
iretw
daa
lahf
lock
sti
std
lcall
adc
fistps
and
fucomi
add
out
sub
sarb
testl
add
fdivrl
inc
pop
js
cmpsl
std
cltd
ret
cs
sub
lds
add
or
ss
cmp
mov
out
mov
add
or
add
mov
out
jp,pn
imul
sbb
adc
jnp
mov
cld
jnp
push
xchg
loopne
cmp
adc
fs
jnp
call
cmp
inc
cwtl
adc
sbb
ds
das
in
inc
mov
mov
leave
in
jmp
std
dec
sub
shlb
inc
outsb
push
call
inc
jb
je
inc
sbb
and
or
fstl
jbe
jo
js
add
out
cld
xchg
cli
jg
add
jmp
mov
dec
hlt
arpl
popa
je
icebp
loope
mov
mov
mov
outsl
into
mov
stos
pop
xor
xor
call
lret
xor
and
mov
mov
jmp
fcmovnu
xor
rol
fcmove
in
jmp
stos
mov
iret
mov
mov
int3
lods
ret
fadd
push
mov
mov
mov
add
pop
fidivrs
pop
sti
add
aam
lea
dec
or
andl
xchg
cmpsl
push
cmpl
dec
out
mov
mov
iret
inc
inc
dec
cmp
or
in
or
mov
jle
orb
xchg
lret
dec
outsb
pop
and
insb
sub
mov
jbe
jbe
jle
jle
pop
cs
or
adc
dec
cli
sub
mov
sub
out
push
mov
push
or
lahf
aas
mov
mov
and
push
push
mov
xorl
gs
add
inc
mov
push
mov
push
mov
data16
insl
lret
add
inc
or
mov
in
push
push
call
in
add
int3
mov
fisttpl
sub
mov
movb
inc
or
movb
jbe
add
sti
push
push
xor
lds
push
sbb
loopne
aam
sbb
cs
or
jne
rdpmc
rclb
or
nop
lods
rcl
mov
push
inc
insl
jae
mov
or
ret
int
or
ficoml
mov
add
aad
jg
es
call
xor
sbb
push
mov
je
sbb
mov
push
pop
mov
mov
adc
mov
andb
mov
or
push
negb
mov
fadds
pop
adc
mov
fcmove
mov
nop
xchg
cld
lret
adcl
add
mov
and
mov
add
push
add
add
sub
add
pop
ror
movsb
mov
loopne
add
add
fstps
je
and
sub
mov
push
lods
xor
sub
xor
mov
sti
mov
ret
cmpw
jne
dec
cmp
lret
inc
add
ja
jne
mov
sti
nop
pop
sbb
lock
pusha
repnz
add
in
pusha
jp
lock
mov
enter
push
mov
call
ret
mov
test
pop
xor
cmp
je
mov
cmp
je
or
divl
jnp
outsb
call
pop
cmp
ja
jge
add
or
jae
cmc
std
mov
pop
mov
mov
cmp
ljmp
jb
sub
mov
sub
sub
add
je
sarb
adc
pop
inc
xchg
mov
lea
or
mov
adc
xor
jmp
or
mov
leave
push
mov
mov
mov
sti
add
add
jge
push
push
push
sbb
and
jb
xorl
and
pop
mov
dec
lahf
sar
ret
fmull
pop
sbb
xchg
jne
pop
call
push
or
js
xchg
or
xchg
sti
imul
or
mov
lock
add
mov
mov
mov
mov
fidivs
mov
lock
jb
mov
jle
push
xchg
dec
dec
mov
or
or
enter
jg
sti
xchg
mov
dec
pop
mov
dec
and
xor
adcb
jle
sarl
push
inc
loope
ljmp
outsl
fiaddl
ret
xor
xor
inc
cmp
or
sbb
push
loope
lods
fnstsw
roll
mov
xchg
imul
inc
push
ds
cwtl
adc
mov
ss
push
push
jae
push
repnz
cmp
jge
push
sub
inc
cli
jb
pop
std
fcomps
pop
push
or
call
add
nop
dec
js
and
je
and
and
adc
add
inc
ds
and
nop
enter
pop
test
and
test
xor
adc
adc
repnz
push
icebp
and
nop
lock
push
or
data16
push
sub
xchg
lock
add
mov
mov
cmp
adc
js
shlb
mov
movq
popf
and
inc
jecxz
les
mov
pop
popf
jne
pop
jmp
adc
dec
popf
jnp
adc
pushf
xor
add
adc
add
in
add
add
in
adc
imulb
std
xchg
fsubl
lock
lods
pop
sti
and
push
push
cmp
repz
femms
aaa
les
mov
mov
in
fisubrs
sbbb
jne
fisubl
push
push
add
loopne
sbb
popf
gs
sub
adc
cmp
shrb
outsb
push
jae
cmc
data16
sub
mulb
pop
clc
outsl
int
popf
insb
and
cli
push
cs
fs
shrb
insb
std
lret
sbb
jge
enter
cmp
or
xor
in
lret
call
outsb
ret
xor
xlat
and
xlat
popf
iret
sub
dec
mov
jle
push
cmp
jle
pop
add
cld
fucomip
dec
sbb
in
ja
call
shll
outsl
cmp
je
test
cmp
test
das
movsb
mov
incl
mov
push
in
jne
cmpl
imul
add
inc
cld
mov
sbb
add
insl
inc
push
inc
clc
xor
dec
add
clc
jmp
andl
inc
add
cmp
pop
int3
shr
inc
cmp
mov
xchg
cltd
jmp
mov
xor
cli
fistl
mov
or
or
incb
mov
jbe
nopl
or
cld
jb
fisubl
popf
sub
inc
fdivs
adc
es
lea
scas
push
and
mov
bswap
sub
pop
mov
pop
ja
jne
data16
or
or
or
or
sbb
loop
jmp
icebp
mov
shr
mov
or
aaa
ret
add
xchg
cmp
jbe
pop
scas
loope
push
and
ret
les
lock
testb
jnp
jmp
adc
add
xor
mov
mov
popf
or
call
jbe
mov
mov
pop
inc
idiv
adc
cmc
push
or
jg
sbb
jmp
andb
mov
jmp
xor
push
push
add
ficompl
enter
adc
stc
repnz
lock
inc
jle
jl
lock
rclb
adc
rcr
dec
sti
in
call
repnz
mov
push
push
adc
and
mov
xor
cmp
movsl
mov
pop
ja
xor
dec
jbe
cmpb
ss
movb
inc
cmp
jb
std
mov
aam
imul
add
andl
push
or
std
jmp
ljmp
or
imul
mov
add
push
add
mov
push
into
aaa
inc
cmp
jecxz
push
mov
inc
mov
lea
loopne
cmp
jae
incl
lret
jmp
imul
push
cld
outsl
dec
outsl
arpl
inc
sub
inc
mov
mov
jne
or
sbb
fnstsw
mov
mov
add
loop
or
adc
mov
mov
inc
add
jne
cmp
cs
inc
pop
scas
mov
insl
aaa
push
jo
or
pop
jbe
or
jg
mov
sti
not
and
push
jl
and
or
add
mov
lea
lods
jle
sti
inc
ljmp
mov
add
repnz
not
and
cli
fcmovnu
sub
testl
mov
fdiv
shll
shl
push
js
add
push
aam
or
mov
aaa
inc
fisubs
fimull
add
lea
call
mov
shl
push
pop
inc
sub
mov
and
divl
lods
xchg
sarl
inc
fiadds
psllq
jle
out
into
mov
shr
or
add
dec
pushl
jg
push
fisttps
jl
out
lret
outsb
sbb
cli
mov
push
inc
xlat
outsl
lods
push
jle
not
and
shlb
adcb
sub
xchg
rcr
mov
jecxz
sbbb
xlat
clc
adc
sbbb
or
mov
xchg
adc
sbb
inc
xor
inc
jae
mov
or
test
pop
int3
xor
add
mov
pop
cmc
add
out
xor
add
sbb
les
fstpt
adc
fcomps
add
jns
pop
or
and
not
fisubrs
cmp
shrb
pop
scas
testl
sti
mov
pop
les
xorb
iret
sub
add
idiv
loop
fisubl
add
sub
fcomps
test
add
out
sarb
pop
mov
rcrl
les
adc
mov
or
xor
cmp
out
or
or
xchg
jno
std
stos
insb
aas
mov
lods
es
add
and
imul
cmp
pop
aaa
out
xchg
pop
das
push
mov
cmpsb
pop
mov
xor
subb
ss
xchg
sbb
and
or
popa
adc
outsb
xchg
in
jg
and
mov
mov
shl
ljmp
mov
fst
and
aad
aam
pop
bound
mov
pop
sbb
shl
add
and
sahf
pop
clc
cmp
dec
cmp
inc
rclb
push
mov
or
fadds
hlt
push
and
jl
push
pop
clc
jb
repz
pop
pop
es
adc
inc
mov
repnz
shll
and
jbe
les
lock
outsl
mov
mov
insl
mov
adc
cmp
sbb
loop
xlat
lods
mov
mov
adc
inc
add
rorb
fbstp
pop
and
out
dec
lods
clc
cmp
mov
fnstenv
mov
enter
jg
or
sub
stos
mov
mov
mov
stc
out
shl
int
and
sbb
loopne
ret
mul
mov
inc
enter
aaa
or
mov
jmp
fbstp
repz
test
xchg
insb
in
mov
cmp
gs
stc
out
sub
in
adc
inc
loop
shr
sbb
fdivs
lock
sbb
out
push
aam
mov
int
jp
daa
push
and
data16
sti
sub
aad
flds
outsl
adc
jae
movl
sahf
in
mov
lea
or
insb
pop
xor
xor
test
fstpl
cmp
sbb
test
xor
in
and
cmpb
divb
adc
or
cs
js
repnz
adc
inc
sti
xor
in
mov
repnz
or
in
mov
call
in
inc
inc
ljmp
inc
push
sbb
xchg
mov
push
adc
cltd
jb
lret
pop
sub
push
int3
pop
pop
xchg
outsl
jecxz
dec
mov
cli
xor
rcrb
mov
sti
pop
mov
jae
or
mov
mov
jle
sub
testl
mov
xor
imul
out
aaa
sub
mov
addr16
xor
mov
test
out
aam
xchg
jae
adc
mov
xor
mov
add
or
mov
jbe
push
aas
sbb
cmp
rcl
mov
out
jbe
les
in
jle
ja
idivl
outsl
call
in
clc
jl
pop
je
sub
pushl
or
jge
clc
cmp
lods
les
xor
mov
mov
insb
sbb
stos
mov
stos
rcrb
sbb
pop
das
stc
push
or
in
sbb
jl
mov
mov
push
xchg
ljmp
inc
push
or
test
jle
mov
stc
cmpsl
and
mov
hlt
cmp
push
xchg
or
mov
xor
cmp
pop
pop
gs
sbb
rcrl
mov
outsl
xchg
int3
or
push
or
mov
sbb
jge
out
call
unpckhps
sbb
jns
in
rcrl
test
sub
sbb
dec
xor
call
scas
dec
jle
outsl
jecxz
jp
sbb
int
dec
fldt
mov
sbb
out
jecxz
jp
ret
std
pop
xchg
mov
add
jbe
ja
mov
aaa
xchg
sti
jp
jle
test
sbb
ja
mov
xor
jb
shll
fiaddl
xchg
out
aam
rcl
sub
pslld
ret
icebp
fwait
sub
xchg
roll
imul
mov
pop
jge
aad
sub
push
add
movsb
mov
lret
or
or
jg
mov
pop
add
js
cmp
mov
dec
cld
cmp
hlt
xchg
cmp
jl
js
sub
push
push
push
cmp
push
testb
cltd
pop
dec
cwtd
or
insb
js
and
and
adc
or
outsb
lea
insl
test
inc
pop
inc
addr16
jge
jl
iret
jb
adc
or
testb
push
add
sbb
cmp
push
add
dec
jne
pop
outsl
test
sbb
push
cmp
mov
jmp
cmp
je
mov
adc
mov
cmp
je
movsbl
add
sub
jne
inc
cmp
jne
cmp
push
add
sub
jmp
adc
adc
rorb
pop
std
or
je
cmp
lahf
or
push
lods
cmpl
sbb
pop
ret
lea
fildl
or
repz
ret
mov
and
or
stc
stc
roll
push
mov
je
roll
mov
andb
xor
cmpb
jmp
sub
dec
lods
inc
movsb
fmuls
mov
sbb
lock
ret
imul
leave
lret
add
stos
orps
mov
into
or
dec
sub
jne
push
lea
fstpt
addb
mov
mov
in
ret
ljmp
pop
mov
je
push
out
aad
jbe
cmc
clc
call
bnd
fisttpll
or
push
cmp
icebp
outsl
pop
jbe
lea
pushl
cmpsb
in
sahf
mov
dec
cmp
out
or
testb
inc
orl
sbb
lea
clc
pop
adc
cld
adcb
jecxz
add
jnp
int3
push
loopne
pop
int3
into
mov
aam
call
inc
lcall
adc
sbb
add
jl
out
or
call
gs
lahf
iret
out
das
lock
jo
hlt
imulb
mov
mov
pushf
mov
xchg
cmp
fisttps
mov
mov
fwait
js
call
and
jnp
sbb
ja
sub
and
pop
sbb
dec
or
sarl
add
fimuls
fmull
inc
push
pop
mov
cli
enter
mov
mov
adc
cwtl
ds
push
push
movb
mov
dec
out
push
out
push
lock
mov
inc
repnz
mov
mov
pop
loopne
clc
add
push
push
adc
loope
cmp
add
inc
mov
repz
dec
mov
pop
repnz
sbb
dec
xchg
pushf
push
and
mov
rorl
dec
dec
aam
cltd
loopne
pop
jns
call
out
int
sbb
inc
push
jle
test
jo
adc
xchg
sbb
test
inc
insb
cmp
xchg
je
xor
push
cwtl
mov
lock
das
sub
pusha
mov
jecxz
or
xor
ret
adc
jnp
orl
or
cmp
dec
adc
test
mov
decb
push
cwtl
xchg
shlb
nop
imul
adc
lea
popf
and
test
adc
adc
jne
mov
mov
inc
sbb
jbe
sbb
enter
add
shlb
jle
lock
hlt
push
insl
mov
xor
jmp
pop
call
sub
adc
mov
out
fadds
hlt
lods
inc
inc
inc
inc
stos
mov
das
cmp
pop
jb
pop
js
in
mov
xor
add
mov
repnz
push
mov
dec
or
or
test
cli
push
andw
mov
sti
subl
dec
cld
pop
jb
xorb
push
push
push
loopne
nopl
sarl
mov
in
iret
mov
subb
cmp
je
dec
dec
lock
out
pop
cmp
pop
push
arpl
pop
orl
mov
push
aam
mov
mov
rcl
push
mov
push
faddl
inc
mov
or
cmp
outsl
sub
adc
sbb
movl
addl
orb
int3
dec
out
jne
mov
inc
mov
sbb
not
sbb
adc
push
subb
sub
sahf
xchg
ret
gs
lea
cmp
xchg
notl
popf
es
and
mov
xor
adc
jle
aaa
clc
inc
push
pop
cld
call
xor
jb
inc
or
mov
xor
add
repz
orb
mov
inc
out
call
shlb
mov
push
inc
call
cmp
in
outsb
or
mov
js
push
fldl
or
inc
add
mov
fiadds
mov
nop
fnsave
in
int
call
mov
add
pop
jbe
jne
add
pop
stos
int3
daa
inc
enter
adc
arpl
push
or
enter
xchg
pusha
loopne
es
data16
cmp
mov
adc
inc
mov
push
fsubl
ret
push
or
fstl
xor
mov
add
xor
insb
je
subl
mov
inc
mov
mov
or
mov
xlat
xor
aad
in
push
push
push
nop
mov
orb
and
adc
mov
xorb
push
int3
push
outsb
add
mov
add
mov
mov
cmp
mov
test
push
imul
cmp
test
mov
add
sub
mov
fs
sti
cmp
inc
mov
sub
std
or
neg
fldt
loopne
into
xor
movl
and
pusha
iret
mov
pushf
push
mov
pop
sbb
jle
fbstp
mov
ja
cmpl
cmpl
scas
or
insl
lods
std
xchg
je
jo
push
push
call
dec
fsubs
cmp
xor
sbb
fwait
or
in
sbb
pop
sti
adc
bnd
call
lcall
mov
rorl
jbe
add
adc
cs
cmpsl
push
shrb
idiv
xchg
adc
jmp
xchg
adc
xor
pop
push
fisttps
movsb
ss
mov
mov
out
test
fldl
xor
push
push
jnp
into
insl
push
pusha
stos
or
decl
sub
jge
fs
xor
leave
lods
lret
in
fldcw
scas
insl
mov
mov
pop
cs
push
mov
mov
mov
mov
xchg
lret
in
mov
mov
mov
jmp
and
fs
mov
rcl
js
shlb
insb
aad
xlat
pop
fsubrs
and
fcmovu
gs
loopne
test
insb
mov
jecxz
pop
in
push
fdivs
lret
insl
out
dec
out
call
lcall
jo
imul
je
rol
jbe
data16
ret
rol
xor
mov
add
xor
enter
insl
xlat
lret
cmp
int3
hlt
xchg
push
xchg
push
cwtl
cltd
lcall
fwait
pushf
adc
sub
int
mov
mov
cmpsb
xor
test
push
test
data16
cmc
div
clc
ds
sub
mov
mov
stos
sbbl
shrb
out
outsl
or
pop
shlb
dec
dec
and
adc
push
clc
jo
aaa
xor
in
shl
lret
pop
mov
insl
jmp
out
xor
mov
lcall
cwtl
jne
pop
xchg
xchg
hlt
sub
nop
andl
pop
fists
xor
out
shrb
jp
mov
push
inc
shlb
jge
sti
push
mov
pop
int3
push
pusha
rorl
mov
and
imul
mov
inc
push
xor
ret
insl
dec
mov
sbb
xchg
outsb
lds
inc
sub
pop
sub
aaa
sbb
fnstenv
adc
sbb
hlt
adc
ret
jmp
in
aas
mov
nop
repnz
pop
xor
rcl
or
jge
divb
pop
andb
outsb
adc
add
fwait
movsl
aaa
pop
daa
mov
mov
sbb
hlt
jb
fadds
fistl
fsub
or
in
and
mov
and
daa
lock
outsb
arpl
inc
mov
outsb
fs
adc
sbb
cmp
push
dec
les
add
negl
mov
addb
or
add
pop
lds
cmpsl
sub
jne
inc
mov
fistps
loopne
jno
fcoms
add
ret
insb
push
es
or
mov
mov
cmp
and
pop
cmp
push
mov
and
sbb
add
xor
aam
insb
stc
sarb
mov
call
sbb
mov
cld
adc
xchg
shll
adc
jbe
push
or
push
lods
outsb
add
inc
jp
lods
cwtl
sub
add
and
fwait
sub
insb
dec
sahf
push
or
dec
rol
and
cmpl
fadd
push
iret
sahf
mov
fs
jmp
imul
pop
adc
daa
jns
das
add
clc
std
xchg
imul
jnp
int
call
int3
jbe
or
in
xchg
and
cmp
sbb
mov
cmp
lahf
mov
out
mov
cmp
popl
call
cmp
out
cs
push
push
push
cmp
arpl
add
insb
adc
mov
adc
mov
cmp
sub
test
adc
jmp
and
orb
push
and
xlat
jmp
test
outsl
scas
fs
and
cmp
ret
jne
andl
jb
push
pi2fw
fcmovnu
sub
loopne
pop
sti
cs
xor
cmp
pop
xchg
fisubs
and
mov
pop
cs
subb
cmpsb
imul
imul
lcall
lret
insl
mov
das
fsubs
ja
fildl
sub
fdivs
jae
xorl
pop
fdivs
cld
std
insl
mov
lcall
mov
add
mov
mov
ss
shll
mov
xchg
imul
mov
pop
movsb
xor
enter
pop
lret
scas
in
cmp
js
out
call
sub
ljmp
pop
nop
cmpsb
inc
jb
icebp
repnz
popa
adc
jo
cmp
mov
push
ja
movl
adc
aam
sarb
sbbl
cld
mov
lea
push
xor
inc
mov
adc
push
hlt
xchg
add
mov
in
sbb
xor
mov
jmp
sbb
or
sub
out
dec
cli
inc
adcl
cmp
xor
push
jb
outsb
je
in
shll
outsb
fs
xchg
lret
out
ja
jne
bnd
shll
add
cs
insb
addb
je
sahf
clc
push
shlb
jnp
push
add
push
jne
jnp
or
push
and
push
add
inc
loopne
jb
push
fsubrl
sbb
stc
push
push
lret
add
or
or
or
idiv
xchg
addb
add
subl
es
jae
es
inc
mov
and
in
add
xchg
rolb
call
xor
test
mov
xchg
int3
idivb
jge
cmp
and
in
inc
adc
jl
push
lret
cmp
sub
repnz
nop
movsl
fwait
or
loopne
push
stos
enter
sub
mov
in
push
pop
push
adc
dec
in
push
or
data16
shll
xor
and
jo
inc
ljmp
ja
push
call
adcl
stc
dec
rcl
loope
or
lret
in
xor
jae
mov
mov
mov
dec
shll
mov
mov
mov
mov
jo
xor
mov
mov
jb
scas
imul
fnstenv
enter
lret
int3
cmpsb
imul
rcrl
rcll
aam
aad
xlat
call
fcomp
fcmovu
ja
sub
scas
jmp
fnstsw
jae
fnstenv
dec
shl
jecxz
in
pop
out
insl
lcall
jecxz
jmp
daa
in
sbb
out
fs
imul
mov
es
inc
cmp
adc
xchg
mov
mov
cs
mov
pop
and
cmpsb
jmp
jae
aad
cld
or
mov
les
push
std
aam
call
push
ds
xchg
mov
mov
mov
mov
or
sub
jno
js
mov
push
movsl
mov
push
out
arpl
subl
fisttps
cmp
push
aaa
jno
rclb
mov
cli
lcall
mov
mov
or
aam
lea
jp
sbb
mov
or
mov
or
and
std
jbe
mov
push
dec
add
jmp
aam
jnp
add
or
push
rorb
outsb
push
lock
xorb
or
and
adc
mov
fldcw
adc
mov
dec
out
or
jecxz
and
les
jbe
push
ja
sub
test
pop
add
je
pop
jg
rcrb
xchg
jne
out
jmp
je
sbb
xor
xor
and
arpl
test
int3
adc
scas
adc
data16
aas
js
je
sub
sbb
les
outsb
mov
icebp
mov
pushf
push
cmp
idivl
fcmove
int
xor
pusha
mov
pushf
pushl
adc
inc
jmp
out
inc
pushf
push
mov
push
sbb
or
fs
call
xchg
adcl
and
pop
fimuls
push
dec
shrb
or
mull
out
in
lock
in
or
repnz
test
add
cmp
cmc
push
add
pusha
out
push
mov
and
pop
shlb
loopne
pushf
jnp
push
imul
dec
lret
adc
and
xchg
shrl
adc
movb
jmp
xlat
sub
jnp
loop
ficompl
sub
imul
fists
rcrb
movb
lds
loope
ja
dec
push
push
and
in
mov
sbb
movl
or
mov
mov
push
mov
adc
pop
dec
out
jbe
in
cmp
jmp
insb
push
jmp
out
ja
cmc
and
jmp
jmp
xchg
aas
adc
mov
xlat
test
xchg
xchg
sbb
imulb
sbb
stc
add
ljmp
add
add
fcmovu
shl
sub
lea
sbb
lods
mov
sbb
ljmp
ret
notl
push
cmp
cmc
lods
imul
ds
addb
xor
pop
fistpl
push
jmp
sub
ja
mov
mov
test
stc
sub
stc
call
subb
xor
jbe
dec
xor
sti
in
push
pop
jne
loopne
push
pusha
sub
pusha
adc
add
test
mov
shl
sub
call
fbstp
inc
shr
cmp
cmp
jmp
pop
stos
pusha
shr
pusha
dec
push
inc
fldl
fstl
call
mov
out
movsl
test
adc
xchg
sahf
xchg
xchg
xchg
std
sbb
aas
std
cld
and
adc
cmp
sub
in
cli
adc
fs
daa
outsl
fstpt
xchg
fisttpll
and
out
out
pop
push
fimuls
sub
cltd
out
hlt
cli
sub
push
std
call
push
push
mov
or
negl
adc
clc
std
or
in
cmc
sti
sub
sti
into
jnp
movsl
push
mov
dec
cmp
es
push
push
flds
jecxz
adc
sub
fs
sub
bound
cmpl
cmpl
rolb
nop
xchg
fsubl
mov
or
or
add
dec
jbe
ret
jg
mov
add
clc
or
sbb
or
mov
into
mov
add
sbb
adc
out
and
adc
jmp
repz
cld
mov
ljmp
sub
xchg
sarl
or
push
pop
mov
outsl
jno
jge
ficompl
pop
inc
int3
out
fwait
push
popf
loopne
sbb
lret
push
pop
mov
inc
out
mov
in
fidivrl
loopne
or
inc
push
es
pop
inc
push
or
lahf
pop
in
mov
mov
cmpsl
adc
or
clc
std
cmc
movlps
adc
pop
lods
ficomps
mov
pop
cmpsb
stc
out
stc
sbb
add
xchg
pop
mov
movsb
sbb
je
and
inc
lds
pop
adc
push
cmp
cs
or
pop
ror
stos
ss
loop
or
pop
jo
and
push
sub
sar
push
sbb
shlb
rcll
rorl
add
scas
fldz
mov
cmp
lods
mov
push
cmp
insb
or
jo
and
xchg
mov
subb
popa
insb
push
sbbb
movswl
and
lods
inc
sahf
sub
mov
add
arpl
aad
sbb
or
sbb
mov
jne
adc
cli
imul
jmp
push
and
aas
sahf
mov
adc
lea
ret
popa
or
push
lock
ljmp
xor
pop
cmp
loope
clc
mov
or
loope
out
fwait
xchg
xor
sub
hlt
hlt
les
pop
repnz
popa
jbe
std
adc
push
inc
add
aas
inc
clc
push
pop
add
outsb
mov
pop
sbb
push
push
push
enter
adc
mov
int3
ljmp
and
sar
add
inc
inc
xor
aaa
scas
loope
sub
adc
stos
stos
das
jmp
pop
add
dec
pop
incl
sbb
and
movsb
mov
mov
outsl
mov
xchg
mov
push
je
add
sub
and
adc
fmull
push
mov
lods
pop
cs
fcoml
xor
pop
mov
push
pop
scas
push
add
sbb
in
jl
in
jb
in
xchg
jne
lods
and
push
push
mov
mov
pop
loopne
jbe
sub
push
mov
movsb
test
mov
cli
jmp
std
adc
sub
jo
or
mov
fcmovne
or
push
adc
cmc
or
mov
or
and
clc
or
cmpsl
push
callw
imul
sbb
mov
fdivl
cmpl
inc
add
xchg
lcall
xor
push
mov
fdivrl
lcall
mov
xor
push
inc
sti
sbb
pushf
xor
repz
daa
push
xlat
or
out
cltd
ljmp
jmp
outsb
jnp
cmpsb
or
xor
pop
jns
dec
pusha
fs
hlt
test
dec
pop
outsw
outsb
je
sub
lret
jae
call
movsb
arpl
fidivl
pop
adcb
clc
cld
mov
fadds
xchg
jecxz
push
sbb
mov
inc
xorl
jnp
jnp
mov
aaa
push
sub
gs
mov
and
call
insl
or
incl
inc
push
insl
outsl
outsb
insl
jl
inc
inc
addr16
xor
xor
movsl
pop
lcall
jb
pop
lcall
decl
test
or
sbb
push
enter
nop
bound
fdivr
jns
sub
mov
adc
and
add
jmp
push
ss
out
mov
es
jne
push
pop
ret
adcb
imul
enter
icebp
and
les
adc
pushf
adc
xor
or
xor
push
cmp
call
mov
hlt
xchg
cmp
or
fld
jge
push
xor
cmp
nop
push
push
cmp
and
and
push
mov
je
pop
movsl
push
push
push
pop
hlt
aas
orl
dec
push
dec
fsubs
add
cmp
je
push
dec
push
arpl
jb
aam
cmp
and
lcall
or
fildll
inc
loop
mov
pop
push
je
and
and
in
sub
push
add
pusha
push
popa
mov
inc
xchg
xlat
pop
or
adc
mov
jo
push
mov
pop
repnz
lds
popf
les
or
cmpsl
pop
cmc
outsl
sub
insl
pop
stos
or
add
rcl
add
gs
in
call
sub
pop
pop
add
or
and
sub
jo
inc
lock
mov
popf
andb
sti
mov
lea
mov
divl
xchg
pop
adc
sub
fcom
lock
push
enter
nopl
jl
les
shlb
inc
xchg
pop
les
lock
adc
data16
fisubrs
inc
sub
mov
add
cltd
mov
imul
jle
add
hlt
cmp
and
test
sub
adc
pop
xorb
and
lds
sbb
xchg
cmp
push
fnsave
sbb
mov
enter
sub
les
or
dec
add
js
je
or
pop
or
fistl
xchg
gs
push
dec
dec
dec
lcall
push
cs
cmpsb
imul
leave
fs
insb
jne
sub
mov
cs
insb
dec
subb
call
push
jb
xor
or
cmpsb
xor
cmpsl
push
gs
mov
fsts
lods
addr16
je
pop
xchg
gs
dec
jo
xchg
gs
xchg
outsb
push
gs
gs
inc
aam
mov
cmpsb
imul
pop
xlat
mov
out
mov
pushf
js
xchg
xchg
xchg
mov
xchg
xchg
xchg
inc
push
cwtl
js
xchg
je
xlat
je
inc
push
fnstsw
cmp
inc
loop
dec
shll
in
out
out
dec
shrl
mov
mov
mov
adc
mov
mov
mov
xor
add
push
arpl
jmp
mov
sbb
mov
lock
and
add
pusha
sarl
clc
and
push
adc
xor
or
xchg
and
mov
jne
imul
push
lret
repz
shrd
test
mov
mov
jmp
fwait
shrb
clc
jp
je
push
adc
out
ss
mov
je
or
imul
sub
or
xor
dec
or
add
mov
mov
ja
push
mov
mov
cmc
or
rorb
sbb
or
add
or
push
push
jecxz
jmp
pop
dec
out
mov
enter
popf
sbb
mov
or
sahf
lret
mov
lsl
out
pop
cmp
push
or
pop
mov
bound
mov
push
jae
mov
adc
sbb
lds
rolb
or
or
or
jo
xlat
mov
push
movsb
test
iret
lds
jno
shrl
sbb
push
lahf
mov
cmp
inc
sarl
sbb
mov
jnp
or
sub
sub
xor
sbb
jnp
in
rorl
sub
int3
je
add
clc
push
fsubr
mov
cmp
jmp
jle
adc
push
sub
sbb
add
dec
pop
xor
mov
inc
jg
stos
rolb
adc
inc
je
add
sub
add
repz
je
or
adc
push
pop
sub
je
insl
jne
dec
sub
add
je
sbb
mov
add
jl
push
jle
adc
outsb
insb
int3
adcb
push
push
into
adc
cmp
push
cmp
sub
add
push
jmp
aas
adc
mov
add
add
scas
cmp
sti
lods
in
inc
cld
mov
andb
sbb
cmpl
leave
inc
sbb
imul
cmp
sub
mov
outsl
arpl
jo
mov
jne
in
outsb
adc
scas
sbb
dec
out
ds
js
addb
dec
sub
dec
xchg
push
and
jbe
or
jnp
add
data16
xchg
daa
sbb
pop
jbe
sbb
rcll
dec
imulb
or
jnp
jl
js
cmp
popf
sbb
pop
ror
out
or
push
jns
push
cld
pop
clc
push
pop
inc
and
add
or
dec
add
or
mov
clc
jge
mov
add
bsr
push
sub
mov
add
repnz
outsl
lock
inc
push
mov
push
jmp
mov
and
pop
mov
push
push
lahf
adc
movb
pop
fcomp
out
inc
test
push
sub
adc
adc
adc
imul
mov
pop
push
popf
pop
jmp
mov
sahf
roll
sbb
movsl
popa
movsb
or
xor
fnstcw
popa
arpl
push
dec
shrl
cmp
sub
jb
popa
or
shll
es
or
dec
cmp
gs
mov
aas
popa
arpl
in
pop
outsl
outsb
gs
pop
xchg
gs
gs
imul
es
shrb
mov
ss
popa
arpl
jb
imul
mov
push
loopne
loope
jns
push
cmpsb
imul
push
test
imul
shll
outsb
imul
inc
data16
jp
shll
cmp
xor
jo
je
add
fsubrs
sbb
aam
adc
xor
cmpl
iret
out
std
sbb
push
adc
and
in
stc
sti
jp
and
out
adc
mov
stc
mov
add
push
test
jnp
addr16
jg
fsubrl
pop
inc
cmp
aam
jbe
jmp
scas
pop
call
sbb
lods
movsb
addr16
adc
clc
pop
xor
stc
cli
sti
cld
lock
sbb
cmp
jecxz
into
mov
iret
lcall
pop
push
data16
popa
mov
cwtl
inc
mov
add
push
push
inc
sbb
inc
inc
xchg
sub
ret
add
pushf
or
push
lcall
mov
inc
fcoml
nop
cmp
cmp
mov
cmp
mov
out
or
and
incl
scas
push
ja
jge
push
call
ljmp
mov
add
xchg
jle
add
jnp
add
loopne
pusha
mov
shlb
pop
or
cmp
xlat
cld
mov
xor
pop
jmp
call
arpl
jg
push
mov
mov
jle
pop
out
mov
lods
es
pushf
ja
je
sub
push
inc
aad
add
daa
and
std
jg
enter
cld
in
std
dec
dec
mov
cmpsb
imul
cmpsb
imul
add
cmp
jp
test
nop
sar
sub
pop
nop
cmp
mov
inc
adc
lods
jp
or
push
mov
mov
fs
sbb
les
xor
pop
mov
jne
push
or
pop
jno
out
call
push
enter
outsl
sbb
sbb
or
jecxz
cld
out
movl
test
mov
push
mov
and
jmp
enter
jne
push
and
xor
add
adc
imul
pop
pop
add
jle
enter
inc
mov
insb
fnstenv
and
ds
jo
pop
test
or
clc
push
pop
inc
mov
mov
fcoms
inc
bound
and
mov
mull
and
mov
sbb
dec
mov
dec
adc
mov
andb
cmc
cmp
pop
in
inc
adc
push
icebp
sarl
imul
mov
push
imul
push
das
adc
fcmovne
sub
mov
js
mov
jg
pop
movsl
leave
negl
nop
loopne
mov
add
test
jl
xor
push
jb
push
in
jnp
jmp
adc
push
sub
jbe
bound
jl
jo
pop
pop
xchg
sub
jl
stc
clc
popa
loopne
push
pop
adc
sti
iret
sub
test
jle
mov
incl
jae
lea
push
shl
add
ret
mov
into
xchg
xor
jge
insb
push
mov
scas
mov
cmp
and
sbb
enter
das
xor
xchg
dec
sbb
and
cwtl
pop
xchg
xchg
int
add
sub
add
gs
jbe
or
pop
fistpll
mov
scas
addb
inc
sub
mov
imul
xchg
out
fdivr
add
cld
andb
xor
lods
sahf
daa
ljmp
addb
xor
jge
or
mov
out
clc
clc
pushl
sbbb
ret
push
or
js
pop
add
and
pop
repnz
jns
out
push
arpl
out
sbb
loopne
pop
repz
std
mov
pop
dec
dec
push
inc
lods
test
push
push
push
push
mov
xlat
or
adc
pop
xor
imul
jmp
sub
adc
jbe
das
roll
divb
and
imul
les
loopne
push
int
scas
data16
leave
or
add
inc
ljmp
aad
lret
jb
call
add
addr16
mov
push
stos
add
insb
xchg
inc
pop
jb
and
jae
inc
sahf
xchg
pusha
jnp
jmp
pop
push
mov
or
repnz
cmovg
jbe
faddl
lock
jle
cmp
pop
ror
insb
mov
xor
jp
sub
or
icebp
mov
ss
pop
mov
pop
jge
idiv
lock
repz
jo
jecxz
cmpl
xor
sbb
pop
and
std
and
xchg
mov
fiadds
mov
dec
pop
pushl
add
roll
cmp
in
or
add
aaa
fwait
mov
nop
jbe
mov
xchg
push
mov
or
sub
loope
fnstsw
cmp
jb
pop
jecxz
lds
mov
xchg
and
add
cld
hlt
jecxz
push
cmpsb
imul
cmpsb
mov
xor
cs
pop
cwtl
movsl
test
xchg
jb
cli
dec
shll
arpl
jbe
arpl
aaa
xorl
insl
jne
in
inc
jnp
add
call
adc
bound
mov
sbb
jp
je
push
mov
jnp
mov
mov
out
aam
cmp
mov
mov
mov
cld
fldl
mov
cmpb
or
sub
and
mov
and
ror
lods
jo
sti
sub
and
pusha
sub
add
int3
andb
or
lods
xchg
repnz
sub
std
add
jbe
scas
inc
nop
dec
adc
nop
xchg
and
fisttpll
inc
push
adc
js
xor
push
cwtl
mov
mov
add
jo
jecxz
add
or
add
bound
sub
mov
sbb
sub
jge
movsl
movsb
push
popa
sahf
mov
in
and
ret
mov
adcb
and
push
fs
add
push
add
lds
iret
ljmp
mov
push
xchg
pop
fcoml
je
movzbl
and
push
nop
push
pop
clc
imull
arpl
out
andb
lcall
movsb
sarl
and
push
clc
add
xchg
sub
sbb
cmpsb
imul
imul
mov
inc
gs
xchg
gs
je
fs
je
imul
push
outsb
outsw
adc
loope
dec
xor
icebp
jne
and
push
pop
cwtl
orl
xchg
xchg
xchg
xchg
inc
outsl
rcll
jne
sbb
data16
lock
push
sbb
xchg
sbb
xchg
bound
and
and
lret
sbb
or
cmp
xchg
outsb
inc
nop
sbb
outsl
cmp
add
repnz
pop
xor
or
insl
pushf
in
out
or
sbb
sbb
je
sub
in
push
inc
mov
mov
sahf
push
hlt
arpl
and
pop
jle
pop
int3
push
jp
sub
punpckhdq
dec
cmp
fmuls
out
fsts
aaa
cmp
sub
adc
jmp
out
dec
pop
pop
stc
mov
xchg
dec
decl
push
lea
cmp
lea
pop
stos
and
and
mov
sub
or
lock
add
enter
push
out
pop
xor
push
lret
inc
loopne
outsl
data16
sub
or
leave
mov
lret
dec
imul
aad
insb
data16
sub
jo
push
fs
outsl
ja
sbb
push
in
push
shrb
outsl
push
mov
inc
daa
popa
cmp
lret
mov
lret
dec
push
dec
inc
popa
arpl
dec
cwtl
sub
in
sbb
mov
daa
lret
inc
mov
and
les
mov
mov
fs
xchg
sub
adc
mov
pusha
cs
js
jecxz
xor
cltd
mov
xor
dec
out
rol
adc
mov
adc
outsb
sub
jne
mov
int
or
add
les
dec
enter
lcall
dec
jo
fstpt
xchg
mov
stos
shrb
sub
dec
ss
scas
rolb
pusha
push
fs
addr16
inc
mov
loope
jg
adc
add
xchg
jecxz
xchg
cld
inc
out
stc
jns
cld
out
out
jnp
xchg
sbb
add
or
add
jno
add
jae
add
xchg
and
mov
std
inc
cs
pop
std
or
and
and
popa
and
imul
in
in
fs
pop
sub
sub
in
in
sub
outsl
outsb
dec
inc
addr16
mov
lcall
je
inc
mov
pop
outsl
inc
inc
adc
nop
movsl
cmp
dec
lret
mov
lahf
in
stos
jae
push
bound
push
mov
mov
xchg
xchg
xchg
xchg
arpl
fmulp
jbe
addr16
popl
addl
addl
mov
into
mov
mov
insl
mov
xchg
mov
addr16
adc
mov
daa
daa
daa
scas
mov
inc
push
cmp
rcrb
rol
ret
repnz
in
in
mov
movsl
mov
loope
sbb
addr16
std
nop
in
in
out
fstps
addr16
and
xor
sub
pushf
pushf
sub
jmp
in
pushf
pushf
pushf
pushf
test
out
lock
and
xor
sbb
pusha
lods
pusha
movsb
sahf
add
add
cmpsl
pusha
movsb
mov
adc
daa
daa
daa
daa
decb
fldcw
incb
lcall
and
movsl
cmp
cmp
cmp
daa
sub
sub
imul
inc
in
in
fs
inc
cmp
loopne
inc
inc
and
outsb
cmp
xor
popa
pop
in
fs
jb
gs
loopne
in
in
pushw
addr16
push
lods
lahf
push
insb
xor
nop
dec
outsb
insl
decb
mov
and
pushf
pushf
pushf
pushf
adc
pushf
pushf
mov
test
lea
mov
mov
and
xor
daa
movsl
cmpsb
cmpsl
into
cmp
fnstcw
rol
mov
into
into
into
dec
ret
sti
les
movsl
loope
mov
sub
mov
lret
int3
adc
xchg
mov
int
into
mov
rolb
add
in
xor
loope
cmp
loop
jecxz
jae
push
cmp
cmp
out
call
ret
mov
ljmp
in
push
mulb
add
mov
pop
jmp
decl
decl
stc
inc
nop
and
call
das
incl
cmp
incl
insl
idivl
pop
mov
and
dec
idiv
insl
sub
cmp
pop
sub
sub
sbb
adc
ja
cmp
inc
sti
sti
jg
out
mov
pop
pop
pop
fs
pop
mov
xchg
out
jb
pusha
pop
into
dec
xchg
popaw
dec
bound
fstps
iret
into
sub
jmpw
addr16
int
leave
leave
push
push
rcrb
fildll
fs
fxch
outsl
jo
jno
jb
xchg
movsl
jae
cltd
je
jne
out
in
test
ja
js
dec
jns
fs
jnp
jns
cmp
cmp
sarl
xor
mov
addb
xor
test
addb
stos
adc
hlt
in
inc
ds
test
daa
mov
testb
in
not
stc
aam
out
mov
jae
clc
sar
push
dec
mov
xlat
fcmovu
cld
sub
mov
fsqrt
mov
cli
push
mov
xor
or
movl
scas
mov
enter
push
sbb
push
enter
sbb
sub
mov
mov
and
add
xchg
ss
ret
jg
jl
sbb
aam
inc
adc
popa
out
inc
lock
movsb
fwait
ds
sbb
sti
roll
cmp
or
push
xchg
add
fs
xchg
gs
outsl
jne
fs
gs
insb
imul
mull
ja
je
xor
cli
sti
cld
std
add
inc
xor
insl
jb
andb
in
gs
xchg
or
jae
shll
sub
fcomp
fidivrl
lds
mov
enter
jmp
leave
test
jo
lret
int3
int
dec
inc
ror
iret
add
shll
sbbl
sub
inc
push
adc
xchg
gs
addr16
or
pop
xchg
insl
dec
popa
popa
or
xchg
gs
fs
push
adc
xor
mov
cmc
jl
mov
rorl
dec
shll
xchg
xchg
xor
shll
xchg
cwtl
cltd
lcall
popf
sahf
lahf
xor
mov
mov
loopne
pusha
iret
xchg
in
shl
adc
in
int3
idivl
nop
out
enter
stc
jno
pop
repnz
lods
cmp
pushf
mov
leave
or
cmpl
fstps
sarb
pinsrw
lea
push
jne
js
jb
test
icebp
or
or
pop
out
fwait
cmp
out
dec
ret
into
and
lcall
mov
push
jno
and
test
int3
jnp
cmp
add
repnz
js
push
lea
dec
ds
fistl
int3
fsubl
sbb
push
jns
or
jnp
notb
gs
cmpsl
ds
xor
and
out
lods
mov
and
mov
fwait
loop
sti
pop
lock
xor
jmp
bound
sysexit
aaa
test
adc
pop
popa
mov
test
imul
xor
xor
xorb
inc
jb
inc
iret
and
out
jnp
mov
xor
mov
xchg
jl
cld
pop
adc
add
adc
mov
sbb
movsb
push
xor
inc
roll
xchg
leave
mov
adc
cmpsl
or
lret
xor
cmp
roll
adc
dec
sub
mov
inc
gs
outsl
lret
inc
pop
mov
jb
push
popa
bound
insl
in
cld
sbb
push
stos
add
pop
andl
inc
pop
pushf
incb
push
xchg
gs
xchg
jns
je
insl
pop
mov
sub
hlt
test
inc
sbb
inc
ror
wbinvd
ret
add
jge
mov
push
call
inc
mov
mov
mov
push
cld
push
fwait
adc
enter
pop
pop
push
xor
push
cwtl
and
inc
mov
pushf
jno
mov
in
flds
add
insb
popa
push
jmp
and
rorb
out
scas
out
leave
int3
stc
sbb
loopne
mov
cmp
call
enter
imul
je
aam
xchg
xchg
cmp
outsb
in
in
into
adc
ds
sub
enter
stc
roll
rcrb
shlb
aam
sbb
sbb
xlat
stc
fdivr
insl
xchg
and
stc
push
or
sahf
sub
aaa
mov
enter
xchg
cmp
clc
fdivr
cmp
inc
dec
aam
aad
fdivr
push
mov
jno
aaa
add
and
xchg
sub
addr16
ds
xor
jb
test
or
pop
push
jmp
neg
sbb
add
pop
test
dec
mov
push
jae
outsl
stos
jne
daa
pop
mov
outsb
and
dec
ja
scas
mov
insb
mov
popf
popf
insb
data16
mov
push
mov
sub
rolb
popa
mov
leave
mov
sub
enter
arpl
rorb
lahf
mov
pushf
pushf
popf
mov
leave
rorb
imul
aad
or
leave
leave
leave
fsts
fs
enter
xor
pop
sub
ljmp
jo
mov
mov
ss
mull
push
enter
cmp
arpl
iret
aam
sub
xor
pop
movsb
pop
test
mov
and
pop
and
nop
out
nop
popa
stc
mov
and
pop
popf
popf
addr16
call
mov
in
cmp
or
call
jg
mov
test
push
pop
idiv
cmp
xchg
dec
shlb
mov
call
leave
leave
leave
dec
dec
dec
dec
leave
leave
leave
leave
dec
dec
dec
dec
leave
enter
push
push
cmp
leave
leave
leave
cmp
leave
leave
leave
inc
inc
inc
inc
leave
leave
enter
xor
leave
leave
leave
leave
xor
xor
leave
leave
fxch
ss
push
cmp
sub
enter
je
jns
pushf
pushf
pushf
popf
jbe
ja
jns
popf
pushf
pushf
jp
jl
jge
pushf
pushf
pushf
jle
adcb
pushf
push
push
push
push
pop
daa
daa
daa
daa
pop
pop
pop
pop
daa
daa
daa
addr16
pop
pop
pop
pusha
or
daa
and
adc
leave
leave
leave
addr16
leave
leave
imul
in
leave
leave
outsl
jo
divb
xchg
out
repz
imul
clc
adc
or
xchg
fisubl
js
pop
or
xor
jg
jnp
js
jae
cmp
sbb
or
xlat
sbb
mov
add
adc
scas
push
jae
in
add
fisttpll
xchg
test
mov
divb
fadds
je
inc
shrl
cli
push
icebp
jne
ret
and
add
outsl
ja
pusha
pop
mov
into
rolb
adc
cmpb
add
push
movsl
sbb
xchg
xor
inc
inc
mov
inc
aam
push
or
pop
shr
mov
insb
add
fadds
movsb
pop
xchg
pushf
mov
adc
dec
push
inc
cmp
shrb
andb
add
cmp
sbb
sarb
sub
movsb
pop
xor
push
sbb
and
sub
test
sub
or
fmull
dec
xchg
int
pop
aam
andb
push
sar
sahf
test
mov
pop
test
je
jo
mov
sbb
cmp
das
xor
shll
xor
adc
jne
sub
mov
imul
or
mov
insl
mov
cmp
das
push
popa
lret
mov
lret
outsb
addr16
das
je
leave
mov
outsl
jo
fs
sub
inc
gs
jae
cmp
clc
jo
sahf
push
leave
loope
pushl
shll
aam
dec
sarl
das
das
xor
shrl
shll
imul
xor
arpl
cmp
das
push
shlb
jae
lret
mov
or
das
lcall
std
dec
inc
test
popa
fs
cmp
test
notb
jl
push
mov
cwtl
pop
enter
mov
dec
faddl
xor
shll
cmp
das
push
jns
jne
cs
shll
cmp
xor
shll
arpl
cmp
xor
xor
fwait
dec
sbb
shll
jne
fwait
test
and
rcrb
cld
mov
pop
call
mov
mov
loopne
cmp
push
jmp
xlat
mov
rcrl
ds
xchg
sub
push
je
js
ljmp
dec
shrl
popa
imul
dec
insb
call
js
and
cld
xchg
or
rcrb
mov
mov
add
xor
mov
add
inc
cmp
aaa
int3
pop
cmp
add
cmp
inc
mov
loop
cmp
jbe
mov
pop
mov
add
lea
fcmovnb
fnstsw
in
mov
or
inc
xor
mov
mov
iret
daa
fbld
sti
mov
mov
iret
daa
push
mov
push
inc
mov
out
jl
pop
sbb
pop
pop
ficoms
in
stos
sbb
cmp
mov
sbb
cmp
outsb
or
cmp
xor
adc
sub
call
push
and
add
push
push
outsb
adc
loopne
mov
cmp
mov
pop
test
sbb
cltd
mov
in
sbb
pop
sbb
push
jmp
cs
mov
adcl
out
cltd
in
incl
mov
sbb
xor
xchg
dec
lea
fmuls
xchg
arpl
sahf
leave
into
xor
push
shlb
xchg
cmp
and
pop
mov
call
sbb
cmpsb
dec
mov
cmp
les
pop
mov
movsb
pop
add
adc
faddl
ss
cs
or
call
pusha
mov
ss
mov
shll
roll
push
mov
adc
sbb
inc
add
mov
jmp
pop
adc
push
push
call
test
lret
mov
push
jne
push
int3
sub
ljmp
stos
test
mov
inc
pusha
mov
fldl
push
sbb
out
rolb
sbb
pop
enter
test
js
push
add
es
js
push
icebp
xlat
dec
xchg
popf
push
pusha
push
push
xor
add
nop
ror
dec
es
fdivrl
dec
shll
adc
call
in
push
pop
ja
cmpl
push
pop
add
inc
or
movsl
dec
push
inc
or
in
leave
pushl
pusha
push
cmp
js
cmpsb
inc
ja
or
dec
pop
cmpsb
xor
add
or
icebp
arpl
shrl
call
cmp
in
push
addl
icebp
loope
aaa
pop
test
sbb
movsb
jnp
xlat
sbb
xor
pop
jp
sub
daa
jns
dec
test
add
mov
outsb
int
mov
sahf
call
jae
and
enter
push
mov
jecxz
sbbb
test
aam
adc
dec
lcall
das
sbb
ja
mov
xor
xchg
cmc
fmuls
in
xor
or
add
or
enter
and
notb
scas
js
cli
adc
fdiv
jmp
mov
outsb
mov
fisttpl
icebp
adc
pushf
jl
outsb
push
mov
jne
inc
cltd
pop
mov
divb
hlt
dec
add
sub
push
pop
and
jne
sbb
sbb
adc
jbe
mov
lea
push
lock
sbb
stos
filds
fisttpll
pop
adc
pop
cmp
jb
inc
in
cmp
jle
adc
leave
adc
mov
jb
push
mov
pop
rorl
dec
cmpsl
ds
aad
adc
mov
mov
cmp
mov
call
mov
in
andb
add
inc
xor
out
leave
add
mov
xor
xor
sbb
sub
test
and
push
push
mov
lods
nop
push
push
insb
outsl
inc
sbb
dec
cmp
add
lea
rclb
mov
lods
xor
xor
jno
or
repz
jnp
out
outsl
stos
lods
sbb
scas
pop
popa
and
jo
cmpsb
ret
xor
cs
adc
ja
dec
es
dec
daa
sbb
pushf
adc
mov
push
jb
movsb
or
jbe
add
push
sub
aaa
cmp
adc
ret
test
dec
cmp
xchg
inc
xor
inc
data16
inc
pop
mov
jmp
xchg
inc
or
mov
sbb
pop
push
dec
sahf
push
rcrl
mov
cwtl
test
pop
inc
push
inc
rcrb
push
push
push
cmp
xor
pop
push
xchg
cmpb
push
nop
addl
imul
or
cmp
and
popf
scas
cld
decl
je
in
je
add
push
mov
adc
push
sub
push
cs
sub
pushf
movsl
sub
cld
pop
push
push
call
sub
lock
push
push
inc
mov
push
cmp
mov
sub
xchg
lea
pop
ja
out
sti
sbb
inc
cmp
jmp
push
pop
add
insb
jae
mov
fs
gs
push
lret
cltd
scas
xchg
inc
inc
fs
sbb
and
pop
call
ds
jne
add
sahf
sbb
mov
push
fldl
or
or
in
fcmovnu
xor
mov
or
sbb
pop
lods
insl
fstpt
sbb
ss
dec
in
lods
std
or
lsl
mov
xor
addb
sub
fsubrp
sti
in
loop
push
imul
add
lds
push
fisubrl
and
scas
jge
dec
push
jne
jno
add
push
insb
mov
cmp
dec
sub
push
addl
aaa
ja
je
adc
mov
inc
je
push
and
dec
sbb
mov
mov
inc
andl
pusha
xor
jp
pusha
jg
sbb
and
cmc
or
push
cs
cmc
mov
push
push
dec
in
adc
es
lods
jmp
pop
push
mov
incl
jbe
cmpb
jne
cmpb
pop
pop
xchg
gs
add
push
push
cmp
add
and
std
or
push
and
lock
or
mov
addr16
cmpsb
add
mov
rolb
adc
decl
lret
and
les
mov
scas
adc
cmpw
cmp
sti
or
cmpl
xor
test
aas
outsb
fwait
mov
cmp
cmp
mov
clc
jb
sub
mov
add
cmpl
push
mov
jb
pusha
fldl
test
imulb
iret
push
xlat
and
insl
jnp
lret
or
add
mov
add
push
fnsave
sbb
mov
mov
mov
iret
dec
and
ljmp
add
test
fs
add
movl
mov
jno
dec
sbb
jne
or
das
fs
in
mov
int
add
cmpl
mov
jg
lods
mov
jno
shr
jle
movzwl
mov
mov
add
rorl
je
out
push
or
jl
adc
inc
jbe
mov
or
and
ss
sub
fisubrl
fidivrs
mov
rorb
inc
mov
sbb
add
push
cld
jl
add
jmp
jecxz
push
or
push
mov
lods
or
mov
lret
dec
shr
pusha
jnp
dec
adc
loop
aad
imul
iret
sahf
xor
lock
clc
adc
and
mov
pushl
add
push
pop
push
pop
repz
mov
sub
add
add
dec
enter
xchg
cmpb
ds
popa
and
lret
andl
mov
add
adc
rolb
mov
call
mov
test
nop
int3
sub
sbb
push
mov
fisttpl
and
ret
or
inc
imul
adc
sub
cmp
sub
cltd
cld
nop
cmp
jmp
mov
es
jge
stc
or
ret
aaa
push
js
xchg
inc
cmp
testb
outsb
out
pop
and
inc
sub
mov
and
gs
rclb
add
insb
push
ja
clc
mov
ret
inc
xchg
fstps
ja
adc
push
push
xchg
pop
push
xchg
and
or
push
roll
js
fstpl
mov
push
mov
sub
mov
push
movsb
sbb
cs
push
or
adc
call
xchg
xchg
and
gs
outsl
xchg
gs
add
jb
jb
push
fsubrl
pushl
pop
mov
or
or
pop
mov
dec
les
loopne
test
fsubl
aam
je
addl
jbe
mov
fdivl
push
adc
ret
dec
and
imul
mov
jl
mov
mov
mov
sbbb
in
mov
testl
out
data16
cmpl
jle
ss
pop
ja
mov
incl
scas
or
jbe
scas
sbb
sbb
cli
aad
mov
adc
xlat
insl
adc
sbb
sbb
sbb
jl
jecxz
cmp
icebp
dec
mov
push
adc
push
pop
sub
int
icebp
push
out
sbb
pushf
and
aam
aam
jge
aad
jge
ljmp
xchg
test
xor
insl
dec
mov
xor
ja
mov
sbb
ss
mov
and
xchg
bound
popf
push
fisubrl
imul
outsl
xlat
hlt
jbe
push
mov
dec
add
pop
add
cmp
fstpl
mov
daa
xor
addb
mov
push
test
inc
in
fdivrs
jne
fstpt
loope
rorl
jae
push
push
mov
adc
aaa
jmp
dec
add
bnd
push
and
lods
push
add
sbb
les
add
imul
fwait
push
lahf
ja
or
or
push
jne
jae
or
out
push
cmpsl
orb
add
dec
rclb
xor
xor
outsl
outsb
imul
xor
gs
inc
mov
xchg
add
xchg
xchg
xor
jae
addr16
inc
out
outsl
jne
popf
xchg
roll
mov
sub
data16
js
lret
push
int3
pop
push
xor
xor
sub
mov
jb
jns
mov
repz
and
int3
sub
mov
push
sti
rcrb
cmp
enter
mov
cmp
rol
cmp
or
loop
xchg
add
push
cwtl
xor
jo
mov
icebp
pop
insb
mov
mov
sbb
fnstenv
call
and
xor
ss
inc
xchg
sub
push
ret
fwait
cmp
inc
inc
mov
sti
jge
loopne
or
cs
and
inc
add
add
add
cmc
and
test
pusha
leave
xor
test
aad
pushf
and
gs
outsl
dec
ret
fnstcw
loop
lcall
or
sub
data16
insl
xorb
sub
jbe
mov
cmp
or
cmp
pop
jp
orb
loopne
inc
sbb
popa
or
add
xchg
xor
test
fwait
or
std
add
pop
mov
dec
push
in
cmp
sbb
inc
movsb
fs
push
addr16
rolb
add
mov
mov
mov
test
cmp
not
insl
pop
icebp
rcrb
lcall
jmp
jb
cmp
dec
rcr
adc
rclb
fsubs
or
dec
lea
or
and
and
mov
int3
add
movsb
test
sbb
sbb
lods
xor
loopne
xor
and
repnz
iret
out
push
repnz
dec
repnz
repnz
repnz
jl
repnz
repnz
shll
gs
pop
sahf
adc
lock
lods
daa
mov
movsb
inc
insb
pushf
test
or
enter
pop
movsb
mov
adc
and
jno
add
enter
xlat
push
ljmp
sub
push
sub
dec
cmp
clc
mov
inc
inc
and
jae
dec
fs
ljmp
gs
outsl
outsl
insb
push
xor
popa
jo
push
insl
out
jg
add
jb
jne
insb
and
mov
mov
dec
ss
add
inc
insb
push
insb
pop
adc
cwtl
add
inc
fnsave
testb
cs
cmovbe
aas
arpl
push
imul
sarl
add
dec
outsl
fs
adc
outsl
xchg
lds
push
add
fs
imul
popa
jb
movq
adc
shr
push
jb
inc
sub
sti
mov
dec
stc
inc
push
je
inc
jns
xor
or
and
aas
lods
int
fs
dec
into
add
and
cmp
mov
fcmovne
js
inc
js
ja
inc
outsl
jb
outsb
jge
xchg
push
push
push
gs
outsl
adc
pop
xlat
outsb
push
adc
imul
into
push
addb
orb
negb
aad
push
sub
push
push
addr16
mov
movl
inc
pop
ret
xor
lods
mov
mov
arpl
daa
dec
fistpl
je
out
and
pusha
xchg
push
ja
fisubrs
clc
add
push
add
sub
push
and
imul
je
mov
sub
dec
fsts
test
daa
sub
outsl
jbe
rorl
pop
or
adcl
out
xchg
sub
pop
in
jae
sti
adc
imul
jno
add
sbb
push
outsl
imul
mov
test
push
push
jne
jns
xchg
inc
inc
xchg
cwtl
mov
jle
imul
mov
dec
lods
inc
add
jns
filds
imul
pop
addr16
test
gs
xchg
sarl
jmp
fiaddl
imul
and
imul
push
lahf
insl
sbb
adc
jecxz
push
mov
sub
ret
adc
mov
dec
outsl
pushf
xor
add
add
inc
ret
push
cmpl
add
arpl
cmp
push
outsb
mov
movsb
push
mov
rcrl
push
dec
inc
fldt
mov
add
jae
data16
jle
sub
push
orl
mov
popa
shrl
icebp
aam
scas
push
jns
adc
addr16
fs
and
sbb
inc
imul
push
inc
xchg
add
push
shll
pop
arpl
fiadds
or
dec
mov
or
xchg
and
outsb
push
push
push
cmp
leave
out
or
add
int
pop
sub
inc
negb
movl
jecxz
je
pop
pop
not
mov
sub
sub
jbe
sti
push
pop
and
pusha
outsl
outsb
bnd
sub
lea
dec
mov
add
jne
mov
insl
inc
adc
sub
ret
adc
push
mov
pop
sub
xor
pop
faddp
mov
add
test
gs
jp
icebp
xor
int3
lock
and
xchg
repnz
cld
mov
insl
push
cmp
jno
ja
add
pop
push
inc
stos
popa
aad
adc
in
outsl
jns
sbb
pop
lods
out
adc
shrd
lods
add
adc
inc
es
lcall
repnz
ss
pop
inc
arpl
imul
inc
inc
push
inc
push
sub
insl
jecxz
jmp
add
mov
jge
arpl
mov
adc
imul
insb
xor
pop
mov
dec
in
pop
adc
rorl
add
add
sbb
pop
ss
xchg
popa
daa
mov
repnz
xor
insb
jns
adc
jo
sub
add
mov
xchg
jae
inc
or
xchg
aas
xor
gs
add
inc
loope
jae
mov
xor
nopl
sbb
xchg
ja
sti
and
and
test
or
lds
arpl
jnp
adc
outsb
sub
or
loope
cs
pop
jbe
mov
aaa
push
xor
dec
ret
ret
xor
inc
xchg
xchg
ret
inc
vmovsd
adc
insb
ja
dec
push
push
test
mov
paddusw
in
insl
outsb
inc
jns
lods
push
inc
mov
in
inc
add
sbb
pushw
xor
xchg
rol
xchg
mov
adc
xor
cwtl
cmp
popa
jbe
jecxz
xor
repnz
sub
ja
lock
lods
les
inc
dec
push
dec
aaa
into
aad
rcrl
loope
or
arpl
jp
mov
xchg
mov
jbe
mov
pushf
pushf
mov
push
call
int3
insl
in
das
rcll
data16
sbb
fmuls
in
call
sbb
or
cld
in
pop
aam
push
incb
test
add
push
les
mov
xor
shll
jmp
in
mov
add
and
push
iret
in
jb
nop
dec
dec
adc
cmpb
adc
adc
adc
stos
ljmp
xchg
adc
push
adc
inc
and
int
xchg
lret
sub
push
or
incl
mov
xorb
fistps
xor
add
and
xor
pop
pop
add
jge
cli
pop
movsb
or
out
pop
idivb
push
add
xchg
push
int
loope
sub
xchg
or
arpl
pop
sub
insb
outsl
mov
xor
push
bound
add
ljmp
pusha
sub
pop
ljmp
das
decl
addl
or
dec
es
cmp
call
mull
or
jle
mov
lea
std
fsubr
fimull
in
rolb
ljmp
fistps
inc
notb
mov
pop
cmp
test
lret
and
xchg
or
scas
ret
push
enter
notl
fcmovbe
xchg
cmp
jge
mov
stc
push
clc
stos
cmp
scas
fdivs
adc
lcall
fbld
shrb
fs
bswap
lea
cli
and
fcompl
and
mov
jmp
adc
push
ret
push
mov
ficoml
sbb
test
push
outsl
mov
mov
adc
ror
mov
aaa
push
push
sbb
inc
call
das
push
cld
pop
jns
jmp
ror
call
sarl
or
les
pop
hlt
ja
outsb
aaa
sar
add
shr
shr
push
add
not
jmp
xchg
or
fcom
push
aam
loope
mov
add
es
data16
mov
call
ret
rol
mov
pusha
sar
pop
test
or
sahf
stc
jmp
push
adc
push
ljmp
scas
or
jne
imul
fwait
mov
cmpsb
add
aad
mov
pop
pop
pop
jbe
out
lret
sub
add
cmc
call
out
jae
pushf
push
xor
mov
add
or
mov
pusha
cmc
insl
out
mov
inc
sub
ds
mov
rolb
cmc
stc
lods
or
mov
out
mov
gs
jmp
pushf
sub
outsb
push
adc
dec
xchg
aaa
arpl
and
bound
mov
pop
push
jmp
rorb
and
sub
or
nop
sar
dec
or
xor
add
lds
or
jp
add
add
mov
add
pop
xor
pushf
jl
mov
out
push
pushf
call
sub
rcl
ljmp
pop
or
ret
cmpb
outsb
mov
add
outsl
aas
mov
or
data16
add
push
div
add
inc
lea
pusha
jl
xor
int3
aam
adc
mov
pushf
jge
push
call
call
repnz
ljmp
adc
mov
jno
sub
fidivs
rclb
mov
fcomps
insl
mov
scas
sbb
mov
add
clc
mov
shl
jno
fdiv
inc
cld
jnp
pusha
test
inc
mov
sbb
ret
mov
into
xor
rcl
stc
jne
ja
sbb
scas
mov
or
clc
pop
push
mov
shr
mov
cld
adc
xchg
mov
mov
xor
sti
sub
out
neg
stc
das
sar
dec
rcl
sahf
mov
mov
fsubr
popa
jno
in
jmp
sbb
ss
pushf
arpl
ja
lahf
jle
pop
fdivs
cld
dec
inc
push
stos
dec
sub
pop
mov
mov
cmc
sub
aaa
inc
lcall
sbb
and
jae
sub
lea
aam
push
mov
aad
les
stc
pushf
dec
push
pop
sti
jmp
adc
roll
jmp
outsb
mov
ficoml
or
shl
shld
imulb
cmp
xchg
clc
mov
lea
lahf
jle
mov
mov
or
push
out
xor
cmp
cwtl
insb
stos
sbb
cmp
jl
add
cmp
cwtl
jmp
ja
std
bound
inc
cltd
inc
xor
es
fsubrp
lds
cli
cmp
fcmovb
mov
orl
or
or
lret
mov
addl
add
push
xchg
sahf
mov
or
movsb
push
jb
shr
add
shr
sub
inc
push
pusha
repnz
xchg
arpl
shlb
jl
adc
ds
imul
popf
jecxz
sti
add
sub
jne
jno
mov
dec
call
pop
mov
sub
push
jmp
lock
add
or
mov
xor
cmc
fldt
mov
push
std
cmp
loope
outsl
cld
gs
mov
xor
cli
jg
cmp
mov
test
pop
inc
push
sti
fildl
fcoml
jns
jge
loopne
push
pusha
xchg
pushf
not
stc
cs
fsubrs
shr
add
ret
jmp
mov
jo
push
or
scas
aaa
or
les
push
outsb
mov
in
add
enter
imul
push
aad
add
ljmp
pop
lods
cmp
fdivrl
les
mov
lcall
jnp
cmp
pop
xor
orb
xchg
jnp
sbb
xchg
and
repz
cmovbe
inc
xchg
dec
jmp
pop
mov
adc
adc
fwait
jae
adc
sbb
loope
push
jmp
cmp
je
or
cmp
adc
in
fdivr
xor
movsl
data16
call
jecxz
arpl
cmp
fsts
ret
pop
push
lods
xchg
test
roll
icebp
mov
imul
xchg
dec
rol
rolb
gs
push
cltd
js
fdivl
imul
pop
adc
scas
mov
cwtl
addl
mov
mov
jmp
in
mov
dec
or
leave
jl
in
jbe
frstor
push
mov
fmuls
jae
sbb
int
mov
pop
pop
sub
or
push
inc
push
mov
stos
fists
jecxz
rorb
jb
jmp
data16
pusha
jnp
push
in
dec
in
lods
adc
fs
jg
push
or
out
push
out
insl
aam
adc
insl
dec
dec
fwait
mov
ret
pusha
push
adc
ds
cmp
inc
cmpsl
sbbl
push
push
xor
shrl
sbb
push
cmp
jmp
cmpsl
add
sub
mov
xchg
jbe
icebp
or
jno
or
xor
add
daa
xor
lret
int
push
push
sub
jmp
push
stos
xor
lcall
pop
xor
xchg
jmp
sub
rcl
add
clc
xor
xchg
or
int
loopne
repnz
adc
push
adc
pop
add
ss
fsubrl
filds
mov
xchg
in
add
push
loope
enter
pushf
cmp
xchg
mov
or
push
push
adc
sti
pop
inc
mov
push
pop
xchg
sub
out
aaa
or
ror
popa
inc
mov
fiadds
jl
pop
vandnps
xlat
jbe
popa
inc
filds
int3
cmp
sbbl
add
dec
call
les
push
iret
fisttpll
mov
cmp
pushl
lods
aas
and
stc
mov
push
sar
inc
fisttpll
and
dec
pop
outsl
jnp
or
lret
fisttps
add
xor
mov
pop
mov
push
sub
mov
cmpsl
out
ljmp
sahf
shlb
pushf
jge
popf
shll
pop
aas
mov
adc
mov
stos
call
orl
fimull
and
movsb
or
inc
fstl
cmp
inc
flds
fld1
test
xchg
add
sar
leave
jp
mov
sub
les
inc
mov
not
sbb
mov
pop
fisttpl
xor
rcl
pop
pusha
cmp
les
jmp
and
inc
jno
mov
sti
ficomps
fst
fucomp
xchg
imulb
add
xchg
pusha
pop
jmp
call
or
cmc
mov
daa
loop
fsubr
pushf
insl
sub
jo
out
es
or
dec
or
push
or
fwait
push
add
rolb
out
sbb
jge
loope
ret
decb
jmp
push
cmc
jp
push
jmp
call
std
stos
xchg
push
mov
push
lock
clc
and
je
clc
in
dec
jmp
mov
add
mov
fucomip
add
sti
mov
mov
mov
out
in
aas
fmull
cmp
sub
les
push
adc
jmp
mov
xor
sbb
inc
mov
aad
pushf
repz
cmp
fcoms
cmp
push
js
fbld
fiadds
pop
mov
push
fadds
or
mov
or
push
shll
pop
push
mov
mov
push
add
into
pop
adc
ret
inc
inc
outsl
sbbb
push
in
test
clc
pop
or
jge
jmp
adc
mov
adc
call
sbb
fidivrl
pop
mov
pop
sub
shl
jmp
js
pop
scas
jmp
dec
dec
mov
sbb
int3
addl
dec
jbe
insl
mov
enter
push
stos
addps
mov
mov
and
sub
mov
xchg
cmp
lcall
cmpsl
lret
cld
test
shr
add
lock
pop
jle
add
xor
or
cmp
pop
bnd
cld
cltd
jg
jne
xor
or
or
outsl
cwtl
stc
mov
in
neg
outsl
xor
pop
or
or
sbb
sub
push
cli
or
xchg
int3
in
in
and
add
pop
xchg
fldt
out
xchg
divl
xor
outsb
clc
and
sbb
dec
cmpsb
cmp
add
outsl
in
push
aas
cmp
cli
xor
adc
pop
out
mov
loope
jmp
xor
sub
jle
mov
or
mov
iretw
push
mov
jnp
fisttps
daa
leave
or
sar
sahf
sti
fidivs
dec
out
xor
pop
cmp
iret
jle
xchg
inc
aas
das
dec
or
jae
jle
dec
outsb
fisttps
jg
sub
neg
loope
iret
dec
push
dec
inc
xchg
xor
daa
and
iretw
jle
dec
add
das
out
fincstp
xchg
jge
push
jmp
ret
mov
mov
cmpsl
lock
sbb
fisttps
or
add
mov
mov
pop
mov
insb
mov
lahf
unpcklps
aas
jno
jnp
mov
xchg
shrl
xchg
fimuls
jnp
and
stos
xchg
sbb
sub
js
push
ficoms
addr16
rcr
jnp
lock
jg
addr16
adc
arpl
adc
arpl
and
inc
xor
add
mull
aas
push
in
jnp
pop
xchg
pop
jno
leave
neg
cmp
das
mov
lahf
outsl
incl
and
xchg
ret
fimuls
jg
xlat
mov
jo
jmp
adc
imul
sbb
push
mov
dec
dec
xchg
mov
inc
icebp
xor
jmp
andl
out
cmpsl
leave
scas
test
rol
sub
pop
dec
loop
xchg
adc
shrl
loopne
outsl
mov
cmc
stos
call
pop
mov
iret
stc
test
adc
lds
or
push
sbb
lahf
dec
jge
pop
pop
sub
pop
cs
jmp
and
pusha
or
add
mov
movsb
inc
movsb
fcomip
iret
lock
rcl
push
or
inc
and
mov
sub
out
cs
inc
sbb
mov
ljmp
jnp
push
ss
lahf
inc
hlt
xchg
out
fs
jae
push
imul
iret
jno
aam
imulb
call
fisttpll
sbb
iret
sar
std
add
pop
xor
or
mov
cld
xorb
xchg
add
in
shl
mov
sbb
insl
push
stos
cmpl
xor
mov
das
setp
add
push
pop
jo
lock
push
outsl
cli
mov
shr
adc
enter
mov
fadds
xor
xchg
setg
pop
cltd
push
cmp
ret
cmp
mov
fildl
mov
hlt
push
aaa
push
dec
ljmp
pop
pushf
popf
mov
adc
hlt
sub
push
cmpsb
sbb
pushf
cmp
push
sbb
lret
pop
cmp
mov
out
mov
push
pop
pop
movsb
xchg
jg
fadds
movsl
dec
mov
rorl
mov
push
jno
fstpl
push
lret
or
aaa
cmc
and
or
cmc
les
js
jb
xor
and
cmp
jne
das
incl
push
data16
sahf
lds
ja
pushl
lea
lea
xor
call
fwait
or
jmp
daa
frstor
std
push
add
fistps
sti
jns
outsb
sub
jmp
addb
adc
add
xchg
xabort
jp
xor
or
out
test
in
pop
mov
jmp
push
pop
leave
push
call
cmpsl
popa
movsl
int3
mov
out
cmp
int3
pop
and
test
rclb
cmp
or
ja
dec
ds
pop
dec
push
loopne
xchg
aaa
dec
xor
outsb
jg
mov
cld
cmp
fcom
xor
addr16
and
push
les
stc
jmp
fisttpl
sbb
add
stc
ror
xor
loopne
jmp
xchg
or
push
dec
icebp
mov
data16
int
lret
dec
and
cmp
pop
testl
setae
outsl
clc
inc
insb
fiaddl
xchg
fs
loope
fildl
push
cmp
fs
jbe
mov
mov
ret
dec
fnsave
xchg
and
dec
das
outsb
xchg
clc
ja
inc
in
aaa
push
mov
cmp
mov
cmp
jmp
mov
lea
repz
sti
add
adc
xor
push
cld
and
cli
mov
out
pop
jg
mov
data16
mov
pop
push
cs
pusha
push
cwtl
dec
addr16
inc
test
add
or
aas
sarb
dec
push
popf
clc
mov
add
cmpsl
add
cld
popf
xchg
leave
add
add
lcall
push
xor
xor
push
mov
outsl
daa
mov
jbe
inc
movsl
and
push
fiadds
cld
and
inc
movsl
shlb
and
pop
ret
scas
int3
xor
and
push
cmp
adc
jmp
mov
sbb
xor
mov
pop
add
mov
mov
mov
push
push
push
push
jmp
inc
cmc
push
mov
aam
aaa
rolb
cmp
add
sub
fdivr
call
push
shll
push
xchg
mov
into
mul
clc
cmc
jmp
or
adc
xor
subb
aaa
inc
cld
pop
enter
and
push
add
je
fildll
loop
out
lock
pushf
setnp
test
mov
push
jno
mulb
mov
scas
mov
mov
push
int
push
pop
test
xor
fdivrl
int
sub
and
mov
mov
inc
mov
cmp
cwtl
jb
inc
lods
jmp
push
in
js
jnp
mov
inc
nop
inc
sbb
push
test
lock
icebp
jge
cld
outsl
adc
dec
shl
neg
aam
test
sub
push
sti
out
sti
insb
inc
int3
sub
add
out
jmp
push
or
mov
mov
sbb
push
iret
xor
xchg
scas
push
pop
jae
or
pop
add
fldcw
aaa
jae
lods
cwtl
add
xor
pop
cmp
ffree
aas
mov
inc
fidivrs
sbb
hlt
inc
stc
test
in
test
cbtw
adc
mov
or
pushf
push
lods
cmc
or
cmc
out
mov
es
cli
clc
shl
call
jo
mov
push
mov
stos
mov
xlat
mov
setp
stc
mov
push
cmc
pushf
add
stos
push
sub
mov
lret
mov
rcl
lock
mov
cmp
or
add
orb
dec
frstor
jecxz
sbb
add
xchg
idiv
mov
mov
call
ljmp
addr16
dec
mov
mov
jbe
neg
fildll
or
movsl
test
xchg
mov
ljmp
mov
mov
orl
into
inc
xchg
icebp
mov
jle
and
subb
mov
push
mov
ret
cli
lahf
stos
fcoms
mov
adc
lahf
call
dec
hlt
faddl
addr16
mov
pushf
sbb
jg
out
loope
in
adc
stc
and
fadds
pusha
xor
sub
push
xor
aas
mov
aas
aam
ds
rcl
mov
hlt
sbb
and
pop
incb
jmp
or
jl
gs
aas
daa
fs
mov
and
arpl
xchg
outsb
adc
pusha
incb
addl
pop
test
xor
pop
out
ret
test
clc
adc
adc
in
mov
arpl
push
add
cmp
sbb
popf
push
cmp
loope
or
jae
inc
gs
test
jl
add
xlat
mov
sbb
cmp
sbb
or
jae
push
push
add
push
or
lcall
push
jmp
popf
out
rol
or
in
imul
call
out
sbb
adc
add
push
pop
les
pop
aaa
adc
out
pop
repnz
push
lret
push
and
pusha
pop
icebp
adc
sub
push
test
xchg
clc
jns
outsb
jl
sub
in
inc
jmp
cmpsl
jnp
pop
jmp
loopne
icebp
cwtl
loopne
cli
dec
sbb
mov
inc
inc
push
fists
daa
cmc
test
mov
xchg
xchg
inc
pushf
jmp
repnz
jge
andl
and
inc
pusha
cmp
addr16
iret
scas
rcrb
ljmp
shll
inc
mov
sahf
xor
mov
cwtl
sahf
and
mov
jmp
sbb
sbb
sub
inc
jp
push
push
cmpsl
sub
mov
xchg
outsb
daa
add
push
addl
loope
ret
push
std
push
push
dec
jo
fiaddl
adc
xor
sub
idiv
pop
test
jo
rol
hlt
xor
xchg
xchg
flds
xchg
adc
jmp
xchg
cmp
into
lcall
or
cwtl
pop
mov
adc
pop
fadds
sub
jno
aas
mov
adc
imull
sub
inc
ficoms
jp
out
test
fwait
xor
lea
pop
pushl
fucomp
or
mov
mov
cmp
out
dec
int
ficompl
movsl
dec
pop
ljmp
dec
lods
xchg
je
ss
cmpsl
push
stos
nop
jae
xchg
sbb
jl
cld
incl
es
rolb
loop
shl
pop
adc
pop
fcompl
cld
mov
pushl
das
jecxz
lahf
mov
dec
inc
pop
loop
mov
nop
adc
aad
jg
stc
sbb
push
mov
ja
and
fwait
xchg
push
push
pop
movsb
insb
stos
mov
insb
incl
scas
xor
es
loop
and
ror
mov
dec
inc
fistpll
inc
adc
cmp
cmp
pop
xor
aam
mov
fsubrs
push
sbb
cs
decl
dec
xor
mov
xchg
mov
jg
xchg
pop
arpl
stos
adc
lret
repz
in
jg
orb
dec
sub
cmp
adcb
add
jmp
add
push
stos
xor
push
loopne
stos
or
jns
shlb
push
out
push
pushf
dec
std
ret
inc
cmp
fstpl
icebp
dec
and
sub
repnz
mov
mov
pop
xlat
or
mov
sbb
xchg
iret
mov
push
xchg
out
lahf
jnp
out
pushf
cwtl
stos
js
dec
fnstsw
cmpsb
sub
inc
xchg
scas
push
test
push
ja
push
dec
lcall
or
jg
pop
stc
mov
out
mov
add
mov
popf
in
pusha
movsb
sbb
jns
sub
add
sbb
jg
sarb
in
out
xchg
xor
cmp
outsb
aas
ja
popf
sbb
fisttps
mov
repnz
cmp
lods
xor
adc
imul
inc
das
lock
cmp
or
ret
adc
xor
int
xlat
int
mov
add
fldt
scas
pop
push
arpl
aas
imul
xor
lret
loop
aaa
clc
adcb
cwtl
rorb
mov
call
cmp
inc
xchg
adcl
cmp
lock
push
or
dec
adc
pop
push
int
add
mov
aaa
sbb
and
aas
or
mov
add
cmpsb
sub
sub
andl
dec
mov
cmpsb
out
aad
lret
into
aam
adc
sub
cmp
out
cli
push
and
in
and
and
dec
arpl
xchg
mov
lret
negl
outsl
push
stc
mov
ret
mov
mov
dec
jb
test
incb
mov
lods
sbb
fstp
push
decl
xchg
mov
mov
mov
and
mov
pushl
scas
push
dec
inc
and
jnp
mov
fnsave
mov
lods
sub
decl
xlat
jl
cs
sahf
jge
fidivrs
jns
lret
leave
pop
pop
add
bound
daa
lahf
iret
mov
fildll
insl
sub
mov
mov
cmp
loop
sbb
fisttps
sub
pop
out
jbe
adcl
xor
adc
add
testb
add
inc
mov
adc
xchg
sti
cmp
cs
jae
cmp
loope
shl
jg
ljmp
jno
lret
mov
mov
mov
mov
ficompl
mov
test
fnstcw
inc
mov
xor
jmp
lods
inc
xor
repnz
test
inc
inc
push
cld
cltd
jnp
pushf
sar
cmp
xor
adcl
sub
xor
xor
pop
inc
loopne
gs
cmpsl
push
mov
mov
jl
out
test
jg
lea
fldl
mov
push
jo
push
pop
movsb
addr16
stos
adc
incl
xor
push
mov
or
xchg
sti
xchg
adc
mov
roll
push
stos
test
das
adc
fisubrl
test
insb
imul
mov
xchg
call
scas
in
or
pusha
xchg
orb
xlat
imull
std
push
ret
jp
push
or
xor
fmull
jg
call
fdivl
idivb
or
lds
fucomip
mov
cmp
jge
insl
call
fistpll
and
xchg
mov
ret
push
pop
packssdw
adc
dec
imull
lret
lcall
sbb
jge
add
fs
repz
sarb
add
jb
pop
std
mov
aas
sahf
js
mov
jle
icebp
sub
imul
cmp
adc
inc
insb
ds
repz
fistps
jle
outsb
jne
pop
or
mov
add
mov
mov
sahf
push
mov
imul
sub
pop
dec
mov
cmpsb
das
loope
decb
and
cld
dec
call
mov
loope
dec
ficoms
push
ljmp
sub
stos
fisubrl
std
shl
mov
in
add
scas
add
push
out
or
pushf
xor
out
aas
fwait
jg
incl
push
ja
lock
inc
dec
pushf
sti
or
inc
les
pushl
shll
popf
insb
neg
bound
cwtl
test
fbld
out
add
mov
inc
test
sbb
mov
out
xchg
std
icebp
mov
fcoml
sbb
ljmp
jmp
mov
jmp
out
rcl
fbld
and
leave
push
call
mov
pop
xlat
in
inc
sub
cwtl
test
sbb
in
pop
enter
sbb
cli
imul
sub
test
das
add
sbb
inc
cmpsl
or
or
outsb
add
sbb
notb
pop
pop
fsubl
test
fdivl
outsl
fisubl
jecxz
test
test
mov
outsb
cld
mov
test
in
adc
sti
sbb
pop
daa
mov
mov
lock
lcall
cmpsb
ljmp
sbb
push
lds
mov
pop
in
ljmp
cmp
adc
iret
mov
push
adcl
cwtl
adc
push
pop
xchg
push
inc
dec
cld
mov
test
sahf
mov
imul
decl
jmp
push
push
ds
jnp
pop
sub
cltd
pop
mov
stos
inc
fldcw
xchg
sti
dec
inc
testb
outsb
pop
sub
stc
das
or
sti
jb
xor
cld
pop
jo
outsb
jmp
or
mov
out
add
dec
jg
inc
mov
adcb
mov
inc
xor
jp
jg
cltd
mov
xchg
mov
cmp
or
sbb
jg
pop
test
pop
adc
or
test
xchg
out
jmp
insb
aaa
pop
push
lcall
or
xor
imul
add
or
jg
or
dec
das
push
fistl
pop
ret
test
xor
push
jo
test
test
mov
je
jg
jmp
xchg
sahf
ret
jge
xor
lods
ret
dec
push
and
out
cltd
shrl
jle
pop
inc
xchg
mov
push
popa
fmull
mov
aam
popf
lods
icebp
mov
out
scas
inc
stc
sahf
push
mov
stos
sahf
outsb
pop
and
dec
mov
lods
shr
mov
inc
stc
ljmp
jns
cli
insb
stos
shrb
mov
or
jbe
call
cwtl
jg
outsl
cmc
xchg
pushf
mov
stos
sarl
cmp
push
pop
and
movsl
pop
sub
sub
cmp
leave
outsl
cld
mov
xchg
add
mov
jp
ret
adc
out
clc
call
fucomip
cmp
pop
lcall
mov
outsl
and
mov
jmp
pop
jp
loopne
idivl
out
fisubrl
or
push
dec
test
outsl
out
das
sbb
loope
sbb
out
push
cmpsl
and
repz
jmp
cmc
mov
in
stos
mov
test
in
xchg
shrb
mov
mov
lahf
xchg
fwait
fwait
add
and
movsb
pusha
icebp
ds
push
jne
dec
iret
sti
aad
sbb
push
jge
jmp
fmull
sbb
ret
jbe
ljmp
add
or
cli
add
aad
idiv
push
add
aas
arpl
pop
popf
pop
sti
pop
cmpsl
jb
cmp
inc
or
mov
outsb
loop
ror
push
cld
fwait
scas
out
mov
mov
pop
movsb
inc
imul
pushl
data16
mov
daa
ss
stos
dec
pop
jae,pt
mov
leave
aas
incb
repnz
push
mov
testl
adc
insb
lcall
test
shll
push
jnp
sbb
pop
dec
pusha
aaa
jb
push
fwait
aad
and
xchg
cmp
stc
jbe
inc
scas
cmpsl
arpl
push
sub
pop
in
nop
sarl
adc
cs
subb
mov
jle
mov
icebp
add
jecxz
movsl
rcl
cmpsl
jnp
pop
fstpl
inc
lcall
mov
pop
xchg
and
jbe
jb
pop
add
fdivr
pushl
sub
push
pop
xor
ja
ret
mov
sar
pushl
fcomps
sahf
dec
cmc
test
push
insl
sbb
cmpb
rcrb
adc
imul
andb
fildll
stc
mov
adc
sub
or
or
xlat
stos
mov
inc
push
pusha
out
mov
shlb
out
ja
jne
scas
xlat
ljmp
rol
into
cwtl
outsl
lcall
insb
mov
pop
mov
ljmp
jge
jl
pop
pop
pop
dec
adc
mov
pop
xchg
data16
repnz
pop
daa
dec
xor
add
jecxz
mov
inc
out
pop
clc
add
cs
dec
aam
xor
dec
loope
pop
mov
scas
pop
cmp
push
and
xchg
rorl
jg
pop
xor
bnd
data16
mov
jb
or
out
ds
mov
jnp
mov
frstor
pusha
push
pushf
das
lock
add
scas
sbb
ljmp
mov
xchg
push
xor
fwait
mov
rorb
inc
xor
pushl
nop
push
test
adc
push
sbb
mov
shl
or
pop
jmp
outsb
xchg
push
ljmp
out
mov
jno
test
or
mov
push
adc
adc
pushf
scas
mov
adc
bound
int3
test
fnstcw
dec
add
in
or
hlt
das
hlt
call
jg
fdivrl
dec
mov
sub
jmp
inc
and
call
roll
ds
mov
pop
add
pop
imul
loopne
xchg
sahf
ds
lock
hlt
push
int
mov
scas
jg
push
incl
incl
cli
inc
cmp
inc
xchg
negb
add
fnsave
add
scas
xchg
adc
mov
adc
das
hlt
out
jmp
out
aad
bound
cli
pop
cli
ljmp
es
push
lret
pop
cwtl
loopne
add
scas
pop
mov
pushl
push
fists
adc
negl
arpl
ss
popf
int
jbe
loop
faddp
pushf
out
mov
inc
mov
std
lcall
aas
call
gs
in
fisttps
dec
testl
pop
clc
cmpsb
push
or
call
and
mov
loopne
loopne
mov
repnz
ss
lcall
dec
int3
scas
add
scas
fistpll
add
adc
outsb
and
sub
daa
add
mov
or
outsb
ret
push
push
sarb
cmp
adc
push
sbb
inc
arpl
jae
rcrb
jmp
sub
rcrb
push
stos
out
mov
movsb
aaa
adc
fistl
cmp
not
leave
cmpl
dec
rcrl
test
jmp
int
ds
sbb
gs
mov
ret
push
imul
in
inc
outsl
cmc
jg
dec
repz
notl
idivl
cmp
fwait
repz
decl
stos
mov
pop
xchg
cmpsl
ret
or
cmp
dec
icebp
sub
xchg
imul
lods
pushf
dec
mov
sbb
test
sti
lcall
cmpsb
fdivrl
pop
testb
cmp
jno
sahf
and
aaa
mov
das
cmc
imul
jecxz
and
dec
ljmp
adc
in
and
outsl
daa
mov
int3
push
cwtl
repnz
fs
lcall
lret
sbb
lahf
lcall
movsl
stos
loope
xchg
and
loop
in
stc
push
aaa
xchg
sti
and
icebp
push
pop
test
sbb
mov
adc
imul
icebp
ljmp
mov
gs
shl
clc
jl
and
test
es
mov
dec
pop
inc
outsl
xor
mov
sub
dec
icebp
fdivr
pushl
data16
mov
in
sub
adc
out
lcall
stos
inc
les
and
in
std
xchg
adc
mov
jmp
xor
push
add
sub
in
mov
das
or
mov
ficoms
jecxz
sub
inc
or
add
arpl
push
mov
decl
mov
outsb
sbb
repz
out
sub
sbb
xchg
jmp
std
test
dec
shrb
aam
jno
decb
xchg
mov
mov
aas
repnz
pop
out
jg
pop
cli
aas
mov
xorl
dec
xchg
insl
test
pop
adc
popa
lea
xchg
sub
pusha
popa
mov
cld
fildll
fdivrs
hlt
xor
imul
cld
lret
movsb
cwtl
shll
sub
loopne
push
xlat
ja
imul
cld
mov
cmovno
jne
data16
pop
call
ficoml
inc
dec
push
outsl
sbb
lock
sbb
jb
cli
ret
or
cltd
inc
jecxz
aaa
out
repz
adc
inc
pop
xor
and
dec
aas
shrl
loopne
out
idiv
incl
outsl
push
push
movsl
add
adc
hlt
cmp
outsl
std
lcall
incb
and
lahf
test
adc
fmuls
sbb
imul
decl
fdivs
adc
push
cltd
ljmp
cmpsb
leave
push
cmpsl
imul
pop
aaa
clc
incl
jno
sub
xchg
sbbl
mov
xor
xor
mov
arpl
mov
shll
imul
cmpsl
jns
sub
push
lods
push
call
push
ret
test
jle
and
mov
cli
loop
clc
mov
mov
sarl
cmp
cmp
cmp
call
ljmp
cld
repnz
cmp
lods
push
arpl
lods
or
out
fadds
jg
push
or
pop
loope
test
dec
insl
dec
aas
aaa
idivb
ret
sbb
xchg
add
sub
lahf
dec
fidivrs
addr16
outsl
icebp
decl
lahf
push
mov
idivl
mov
aas
sub
rcr
xchg
lret
add
mov
bnd
adc
lds
decl
je
xchg
jg
sub
sbb
jp
inc
mov
movsb
push
sub
jmp
into
outsb
mov
xor
dec
cmpsl
cs
mov
lods
jb
test
inc
xor
outsb
pop
mov
sbb
mov
aaa
repz
mov
cli
lcall
lods
and
and
loopne
jle
pop
add
int
jmp
xor
dec
mov
push
andl
xchg
leave
cmpsb
shll
cmp
dec
cmp
cmc
nop
dec
mov
aas
sbb
cwtl
cmp
dec
aad
in
dec
push
jnp
adcb
push
addb
cs
rclb
and
call
repz
inc
mov
fucomip
inc
into
or
loop
pop
loopne
jnp
add
or
sub
pushf
xchg
and
ljmp
repz
repnz
lcall
dec
mov
add
jno
lret
lods
fmull
push
sub
pop
ret
cld
call
imul
xlat
sub
cli
xlat
push
adc
xor
negl
pushl
push
or
dec
divl
insl
pop
push
inc
cmpsl
pop
fdivrp
inc
mov
sbb
fwait
or
stos
decl
int3
pusha
mov
ds
test
pushf
mov
ret
mov
aam
pop
inc
dec
xchg
dec
cltd
fsubr
dec
sbb
int
decl
xchg
push
adc
mov
mov
hlt
lcall
adc
into
add
sbb
inc
and
lret
mov
sub
mov
inc
pop
aaa
mov
icebp
pusha
xchg
shrb
pop
js
push
jmp
mov
fcomp
lods
push
in
push
call
add
jb
lcall
mov
cmpsb
fcmovbe
adcb
movsl
push
cli
mov
sub
push
inc
leave
lds
mov
incl
dec
outsb
bound
cmp
push
andl
lcall
test
ljmp
and
iret
leave
cwtl
xchg
mov
nop
pop
xor
adc
xor
sbb
out
fisttpl
lahf
stos
es
imul
sbb
clc
pop
loopne
fnsave
pushf
incl
out
dec
outsl
lods
in
std
cltd
insl
xchg
mov
repz
push
mov
or
pop
lds
inc
out
cmp
cltd
adc
test
mov
cs
mov
rcl
outsl
ficomps
sar
loop
rcrl
sub
outsl
jge
sbb
or
pop
aas
pusha
push
call
adc
and
mov
aaa
or
mov
cmp
and
inc
add
aam
outsb
movsl
add
sub
push
decb
xor
add
jmp
rcl
out
pushf
lds
and
xlat
inc
or
jo
sub
jle
fs
xor
es
jbe
in
xchg
push
loope
lret
sbb
jmp
jnp
mov
cli
fistpll
inc
cmp
insb
arpl
js
lret
jns
loopne
movsb
cli
cmc
ljmp
xlat
mov
pop
cltd
mov
add
sti
repnz
lock
adc
imul
fmull
mov
not
gs
push
mov
dec
addr16
adc
lods
leave
punpckhdq
add
dec
fstpt
mov
icebp
and
cld
xchg
push
inc
sbb
pop
ret
shlb
hlt
je
lret
jg
call
jno
or
ljmp
inc
pop
lods
or
jge
sbb
icebp
cmc
pushl
adc
ds
push
test
and
add
mov
inc
mov
jo
cmp
incb
loop
out
aas
jecxz
push
test
sbb
inc
pushl
or
mov
sbb
sti
inc
push
sti
sbb
pop
cmp
inc
in
or
jl
add
test
ds
cmp
fildl
adc
inc
and
add
pushf
xor
pop
sbb
and
in
fistpll
hlt
and
sbbl
or
jo
incl
jle
leave
mov
dec
add
sub
jmp
sbb
ss
call
in
mov
lret
cmpb
dec
or
sbb
loopne
jg
and
and
mov
outsl
cli
inc
dec
mov
clc
mov
out
sbb
decl
adc
dec
jmp
and
out
or
jle
adc
jmp
popa
jns
sti
adc
push
mov
push
fcom
sub
push
mov
push
dec
insb
fisubrs
call
call
stos
cli
decl
cmp
inc
or
xor
add
pop
test
popf
hlt
sarl
add
je
xchg
notl
outsw
pop
adcb
mov
pop
clc
jmp
pop
in
pusha
add
push
push
add
nop
fistpll
inc
addr16
mov
fisttps
cwtl
sti
cmp
push
mov
stos
insl
add
mov
jnp
and
popa
lods
or
mov
stc
cltd
aas
pop
mov
xchg
lea
sub
int3
adc
and
pusha
jp
mov
xchg
aas
sbb
pop
shlb
jp
adc
mov
push
cwtl
mov
jne
jmp
add
hlt
das
icebp
ror
and
pop
sub
idivb
in
or
hlt
push
cmp
mov
std
push
loopne
sub
or
mov
pop
jp
mov
addr16
insl
pop
lock
test
ficoml
jecxz
inc
mov
cmp
xchg
pop
cwtl
addr16
nop
testb
xchg
lea
addr16
add
das
rcll
jns
sti
out
mov
inc
iret
add
sub
shll
xor
bound
jg
or
shrb
mov
fisubl
test
test
popf
xor
sub
in
mov
enter
xlat
jo
cli
std
nop
mov
mov
dec
jg
push
xchg
and
mov
loop
mov
sub
jno
xchg
jo
jecxz
jmp
fucomip
mov
cwtl
test
aaa
movsl
or
movsl
jns
and
cmc
jmp
mov
cmpsl
adc
inc
popf
mov
push
test
jnp
inc
inc
fmulp
pop
mov
pop
mov
pusha
mov
push
xlat
cwtl
lret
jbe
test
push
fistpll
jge
xchg
lcall
decl
mov
outsb
push
cmp
jle
dec
adc
or
insl
xlat
sbb
lock
lcall
dec
sbb
sub
aad
or
xor
popa
push
sbb
sbb
fucomip
in
push
mov
lret
les
pop
daa
dec
xlat
dec
push
pop
out
data16
cmc
decl
test
aas
imul
push
cmp
clc
test
out
aaa
inc
xchg
mov
cmp
icebp
dec
sub
fildl
mov
adc
sarb
or
xor
popa
xor
bnd
xor
dec
and
add
gs
fisubl
add
mov
lcall
dec
std
inc
mov
aas
int3
sub
mov
data16
ljmp
pop
or
mov
test
mov
mov
xchg
sarl
fcompl
fs
jnp
jge
xchg
pop
outsl
mov
jg
mov
scas
push
pop
out
iret
mov
out
ja
adcb
jg
aaa
mov
or
sbb
cltd
cltd
in
aad
jge
add
jg
fstpl
stc
fildl
aaa
push
rclb
test
sbb
loopne
xchg
jge
sbb
jge
mov
pop
pop
sahf
rcl
dec
mov
popa
xchg
push
ljmp
std
aaa
mov
into
jmp
outsl
aas
mov
sbb
loop
mov
lock
jmp
add
repz
mov
in
addr16
or
push
std
stos
lret
sahf
jl
and
das
decl
dec
jno
jecxz
cmp
jne
int
xchg
mov
hlt
dec
addr16
sbbb
sarb
and
sarb
jl
mov
pop
sbb
in
push
rcll
cmpsl
fs
pushl
sbb
insb
out
push
test
cmp
mov
out
ja
dec
or
sti
and
in
out
mov
std
inc
xchg
stos
gs
lods
push
fdivr
out
xchg
lea
outsl
sub
shlb
pop
in
mov
aad
xchg
xchg
imul
fists
xchg
xchg
mov
fists
mov
jmp
lcall
sub
fisttpll
cmpsl
lahf
dec
test
dec
cmpsb
sub
in
lcall
fs
jno
push
mov
push
xor
clc
sub
fdivs
shlb
or
pushl
add
jg
hlt
jmp
cld
inc
cltd
dec
mov
sub
jb
rcrb
ljmp
jno
nop
cmp
rorb
jmp
cmp
or
imul
jg
mov
insl
push
mov
push
cmpsl
xchg
pop
xchg
pop
mov
decl
std
ret
hlt
cmpsb
bound
mov
push
jl
mov
lret
mov
incl
lock
adc
adc
sarb
mov
mov
or
jmp
xor
dec
inc
fucomip
ljmp
jmp
or
or
or
adc
mov
dec
hlt
jmp
rolb
mov
or
imul
add
push
adc
mov
outsl
das
testl
sbb
inc
sbb
repz
icebp
call
sbbb
shlb
add
adc
push
fldcw
div
xchg
dec
adc
xchg
adc
std
jmp
out
mov
filds
mov
jle
and
sbbb
mov
inc
es
mov
rorb
and
jo
pop
and
hlt
fcompl
ljmp
mov
push
mov
std
int
xlat
icebp
ret
rcrl
xchg
xor
lcall
xchg
aam
outsb
adc
xchg
gs
jnp
cmpsb
std
popf
sub
sub
jge
arpl
call
imul
call
lahf
adc
mov
popa
or
pop
call
decl
test
inc
xor
xor
in
aas
push
jne
push
or
mov
inc
mov
pop
mov
popa
ljmp
insb
lcall
mov
dec
inc
outsb
mov
fisubs
call
push
aaa
adcl
xchg
add
outsl
cmpsb
xchg
inc
mov
mov
or
enter
clc
ljmp
inc
jbe
mov
fisttps
inc
push
adc
jge
bound
jg
and
movsb
loope
shl
mov
iret
mov
mov
adc
add
mov
mov
clc
and
pop
mov
std
push
dec
inc
xchg
stc
mov
in
xchg
jbe
jecxz
push
ja
dec
pusha
and
fnstsw
les
orl
mov
popf
sub
jmp
jno
adc
inc
decb
inc
lea
imul
xchg
fs
xor
mov
call
mov
stos
mov
xor
xchg
xchg
fidivrs
jbe
jo
lds
pushl
js
rcll
imul
ljmp
test
dec
lock
call
das
inc
sub
push
push
ds
pandn
jns
mov
xchg
mov
sbb
scas
imul
ret
nop
mov
pusha
aam
or
xchg
test
out
jecxz
data16
sbb
mov
sub
jmp
nop
aaa
rolb
xchg
mov
cld
sub
loop
inc
jl
mov
jmp
mov
push
in
or
pop
call
or
cmp
add
lcall
clc
jns
ja
lock
aas
hlt
xlat
add
es
inc
mov
xor
jnp
aam
mov
or
test
mov
sbb
mov
test
fildll
aaa
ffreep
mov
xchg
adc
int3
mov
outsl
aas
jl
in
xlat
add
mov
jmp
xchg
mov
popl
pop
sbb
xor
push
push
mov
fdivrs
test
mov
mov
jb
jno
pop
ljmp
rolb
lret
and
mov
lahf
adc
ljmp
lea
outsl
mov
or
add
sub
aaa
call
cmp
sub
add
test
repz
rolb
in
mov
lcall
cld
ljmp
loop
sub
repnz
shr
jge
mov
leave
subl
push
arpl
notb
push
dec
les
pusha
inc
sbb
mov
sbb
or
jnp
stos
std
mov
jne
scas
call
stos
les
inc
rcrl
enter
xor
jns
movsb
clc
jno
call
addb
jg
sbb
push
in
push
sub
adc
shll
xchg
mov
roll
addl
jg
out
notl
sbb
xchg
in
push
adc
mov
ss
dec
jmp
lods
jbe
fwait
mull
outsb
push
jg
mov
incb
ret
lret
sub
mov
adc
adc
cmp
pop
call
pop
and
and
hlt
movsl
lods
sti
xchg
mov
push
push
xor
clc
decl
pop
pop
popa
cmp
rcr
mov
mov
stos
pop
cmc
push
jmp
mov
testl
or
lret
push
lock
std
std
test
inc
cs
jl
mov
daa
imul
ss
push
iret
cld
ljmp
loope
dec
inc
mov
push
lret
out
and
call
test
sbb
aad
mov
add
xchg
mov
xchg
push
ss
les
std
call
and
fadds
lea
leave
mov
ret
je
das
lret
incl
js
int
lea
insb
xor
pop
pop
sbb
adcb
das
aas
insb
sub
inc
dec
mov
aam
adc
int
call
test
xchg
xlat
add
pusha
inc
mov
outsb
cmpsl
test
mov
push
std
xor
sbb
inc
fisttpl
mov
ret
xchg
xchg
in
jno
nop
dec
rorb
ja
enter
clc
jo
jg
lea
sbb
icebp
dec
insl
andl
repz
mov
call
and
mov
repz
jb
inc
xchg
or
arpl
jg
scas
add
pop
lods
add
and
adc
dec
fildl
arpl
mov
ret
jge
mov
and
push
jp
jmp
lock
jns
call
pop
jbe
mov
insl
shrl
dec
nop
out
test
sahf
xor
pushl
scas
test
cmpsb
adc
mov
in
xchg
sbb
add
jo
clc
in
dec
sub
filds
xchg
push
dec
ret
pop
clc
hlt
lock
scas
mov
pop
sbb
cmpsl
pop
out
in
in
dec
ja
or
fdivrl
in
insl
inc
cli
and
aam
push
jg
ljmp
fbld
adc
test
sbb
add
fcomip
inc
inc
int
mov
mov
push
sub
pushl
in
fisttps
xchg
sbb
inc
dec
dec
lret
insl
sub
repnz
daa
pop
cmp
jge
test
dec
in
mulb
pop
shrl
sub
pushl
popa
fimuls
outsl
jecxz
lods
test
mov
sarl
xchg
push
sub
inc
dec
cld
call
jns
ret
data16
mov
jno
mov
es
lcall
outsb
cltd
xor
frstor
push
mov
dec
cmp
xchg
inc
arpl
jmp
cmc
aaa
fdivrl
sar
les
fnsave
xchg
std
or
cld
pushl
xor
ds
fcmovnu
cmp
lods
test
xchg
and
out
fidivrl
mov
xchg
mov
ret
ja
es
js
dec
iret
scas
lea
push
dec
add
xchg
nop
adc
stc
jl
jge
dec
mov
jae
jl
pop
sarb
and
sbb
xchg
add
repnz
or
cwtl
out
incl
xor
inc
loopne
fldl
dec
or
mov
mov
dec
lcall
imul
cmp
push
add
subps
in
lret
out
mov
and
aam
push
frstor
xchg
es
test
decl
cld
add
rorl
mov
sbb
jg
cld
test
and
and
dec
dec
pop
dec
push
iret
pop
jl
stc
call
sub
adc
int
cmp
jns
cmpsb
push
pop
mov
adc
movsb
cmpsl
loopne
fwait
ja
imul
inc
test
lea
cltd
bound
cmp
pop
cli
mov
in
shr
cmp
jg
adc
pop
push
jle
jns
sbb
outsl
cli
mov
jns
stc
inc
lods
adc
cmp
les
pop
sub
popf
mov
and
dec
das
call
dec
das
pushf
int
in
jns
push
and
dec
lret
pushl
fisubs
adc
test
inc
push
xchg
adc
xchg
or
dec
mov
mov
cld
jg
mov
loopne
sbb
inc
inc
pop
fisubrs
xchg
mov
dec
shlb
insl
outsl
mov
les
cmp
jnp
es
mov
int
decl
jbe
xchg
mov
movsl
outsb
pminub
and
daa
in
dec
mov
out
mov
xor
cmp
mov
pop
movsl
fld1
arpl
lock
jne
sahf
rorb
je
inc
daa
fstl
leave
add
push
jmp
ja
in
mov
mov
std
ret
and
mov
mov
pusha
push
mov
cltd
lds
fidivrl
movsb
mov
out
push
sbb
mov
jg
mov
stos
cltd
mov
out
decl
nop
loopne
ja
mov
cltd
call
jp
rcrb
pop
jle
out
fisubrs
dec
sub
dec
xchg
jle
stc
or
push
jp
cmp
fistpll
adc
shrb
loope
xor
sbb
int
mov
dec
dec
jbe
xchg
mov
aaa
movsb
lods
jecxz
inc
stos
cs
mov
test
decl
mov
push
or
and
adc
and
fdivrs
jb
incl
das
ss
stc
sbb
mov
sbb
dec
mov
ret
jnp
aad
iret
minps
add
cmc
mov
xor
lahf
dec
in
stc
in
pop
dec
inc
xor
mov
pop
int
jmp
arpl
rorl
mov
sub
add
xor
fists
ret
adc
lock
fiadds
dec
ja
mov
imul
mov
xchg
pop
and
adc
xor
loope
cmp
jmp
frstor
push
dec
sahf
jbe
xchg
inc
test
fidivl
movsb
stos
loope
dec
stos
cmp
xlat
jl
decl
test
add
fldenv
fsts
lds
out
outsl
daa
sbb
sub
jo
xchg
fs
ja
push
rcll
fwait
push
fbld
decl
mov
outsb
fdivl
loope
cmp
push
mov
cld
aaa
cld
xchg
insl
imul
dec
inc
stos
inc
ret
xchg
mov
mov
mov
cli
or
scas
push
repnz
and
sahf
inc
jb
xchg
aad
xchg
decl
mov
cwtl
rcll
dec
aaa
add
enter
lods
fistps
inc
push
and
push
shrl
loope
cmp
dec
xor
adcb
fidivl
movsb
movsl
call
ret
cli
in
aas
inc
mov
xorb
cmpsb
and
push
sub
dec
jp
ficoml
adcb
dec
mov
imul
arpl
imulw
scas
fdivrp
outsl
aaa
lock
mov
in
xor
jo
int
sub
out
popa
mov
sbb
xchg
pop
adc
mov
decl
inc
les
pop
shrl
adc
xor
xchg
pop
mov
data16
movsl
sbb
bound
sbb
cmpsb
into
fmuls
imul
pop
sub
insb
ja
scas
cmpsb
pop
fsubl
pop
jb
lods
jl
idiv
inc
ret
lret
mov
lcall
movsb
mov
pop
incb
outsb
idivl
cmova
popf
pop
add
fisubl
decl
pusha
outsl
sub
dec
push
push
or
xchg
xchg
rorb
jae
inc
mov
sti
fmull
cmp
add
jg
inc
sti
and
clc
ds
xor
dec
aas
push
xchg
aas
mov
aas
hlt
aas
and
xchg
nop
cmp
cmp
cmp
cmp
cmp
jmp
cmp
cmp
cmp
cmp
or
adc
sbb
and
sub
inc
cmp
jp
mov
cmp
cmp
call
mov
fstpt
or
sub
aaa
cmp
jle
mov
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
ljmp
cmp
cmp
push
cmp
or
adc
push
ds
jmp
xchg
ds
mov
loope,pt
repz
sbb
aas
cmpl
aas
into
aas
fistpll
mov
pop
xchg
out
inc
aaa
xor
xor
pushl
insl
xor
mov
xchg
xor
xor
xor
xor
xor
xor
xor
xor
popa
xor
add
xor
xor
xchg
xor
xor
ljmp
out
xor
ds
inc
mov
mov
xor
xor
jg
dec
xor
sub
xchg
xor
xor
xor
bound
xchg
xor
pop
sarl
xor
xor
xor
xor
sbb
push
ss
pushl
ja
xorb
ss
aaa
inc
aaa
in
adc
cmp
pusha
scas
decl
std
xchg
popf
cmp
xchg
xchg
cmp
pushl
cld
cmp
pop
cmp
cmp
cmp
cmp
cmp
fs
idivb
ds
ds
ds
loopne
cld
add
pop
pop
aas
fs
imul
aas
nop
insb
and
mov
aas
out
xor
fists
xor
and
sub
inc
xor
pop
xor
imul
xor
popa
ret
xor
or
xor
dec
xor
pop
xor
stos
xor
mov
cmp
push
xor
jns
pushl
adc
and
xor
xor
xor
xor
xor
std
ljmp
xorl
in
add
or
xor
popa
xor
out
clc
jg
xor
fnstcw
xorb
aaa
mov
or
jg
sub
cmp
jl
clc
cmp
cmp
xchg
cmp
cld
cmp
cmp
sbb
cwtl
ds
ds
stc
jne
out
das
jge
or
sbb
and
gs
insl
outsl
aas
int3
inc
rcr
and
pop
ret
decl
xor
xor
xor
xor
xor
mov
xor
xor
xorl
dec
xor
xor
xor
test
xor
xor
xor
sbb
xor
xor
xor
decl
xor
xor
xor
xor
mov
mov
ss
ss
sbb
dec
cld
jmp
aaa
cmp
inc
aaa
dec
aaa
insb
aaa
test
mov
aaa
outsl
cmp
call
test
cmp
arpl
mov
jmp
cmp
cmp
cmp
cmp
cmp
cmp
ja
aaa
cld
cmp
cmp
cmp
ret
sarl
cmp
cmp
imul
jg
cmp
jl
mov
mov
push
fistpl
add
je
push
xor
jb
jns
jle
xchg
ja
fnsave
mov
shll
sti
xor
xor
xor
xor
out
outsl
clc
mov
sub
mov
xor
lods
ljmp
fidivs
pop
sub
cmp
inc
ss
jg
divb
sbb
fisttpll
dec
aaa
imul
lahf
fwait
aaa
mov
aaa
sti
aaa
add
pand
cmp
cmp
cmp
jno
mov
pushf
cmp
cmp
sbb
jg
cmp
xor
dec
cmp
bound
imul
cmp
fwait
aas
sar
cmp
cmp
jae
mov
jmp
cmp
cmp
cmp
shll
cmp
mov
int3
cmp
div
cmp
cmp
hlt
jg
cmp
push
cmp
pushf
cmp
call
cmp
jp
and
daa
xor
cmp
dec
ds
ds
mov
jb,pt
xchg
nop
mov
aas
sub
aaa
aas
inc
aas
dec
aas
mul
jmp
insl
aas
jnp
cmpl
mov
enter
stc
sbb
add
lcall
scas
stos
jecxz
xor
xorl
xor
xor
xor
xor
shrl
cld
inc
out
xor
dec
xor
xor
jmp
xor
xor
xor
pusha
xor
xor
adc
das
cmp
pop
gs
push
inc
mov
sbb
addr16
pop
jo
popw
jmp
xor
xor
xor
mov
ss
aaa
out
fidivrs
aaa
sbb
cmp
lret
les
jmp
push
out
lcall
xor
xchg
xorb
divb
add
xor
lret
arpl
dec
cld
data16
xor
xor
lahf
xor
xor
xor
rclb
xor
inc
fbstp
xor
xor
xor
jae
xor
mov
and
xor
jecxz
push
xor
xchg
add
mov
mov
xor
fidivl
lock
add
or
adc
pop
sbb
es
xor
aaa
ss
outsb
dec
sbb
imul
outsl
ss
andl
aam
insl
loope
push
pushl
cmc
ss
ss
aaa
push
aaa
adc
and
pop
aaa
jno
jge
xorl
aaa
sahf
aaa
jl
mov
cmpsl
aaa
scas
aaa
mov
ret
aaa
shrb
cmp
sar
ja
jl
cmp
cmp
cmp
decl
mov
imul
test
mov
sarl
cmp
pop
call
cmp
inc
or
outsl
cmp
pushl
fdivrp
mov
add
push
cmp
cmp
cmp
cmp
clc
mov
cmp
cmp
cmp
cmp
cmp
sbb
decl
cmp
cmp
cmp
cmp
cmp
cmp
sub
pop
cmp
popa
mov
cmp
out
push
cmc
cmp
aaa
fsubs
ds
pop
sub
inc
arpl
sar
arpl
push
jns
cmpb
ds
ds
ds
ds
jecxz
fsubrl
jo
pop
jge
pop
aas
aaa
lret
or
jecxz
add
nop
in
sub
sub
call
xor
xor
xor
divl
sub
fbstp
lock
loop
jmp
xor
arpl
inc
xlat
xor
xor
mov
xchg
mov
mov
push
mov
js
jg
sbb
ljmp
cmp
inc
ss
jns
test
ss
ss
in
aaa
repz
push
cmp
pop
cmp
cmp
cmp
daa
cmp
cmp
sbb
pop
cmp
imul
outsb
aam
test
push
cmp
pop
mov
das
ljmp
cmp
cmp
add
jg
cmp
cmp
cmp
cmp
cmp
cmp
inc
cmp
cmpsw
pushf
cmp
outsb
adc
xor
inc
cmp
pop
cmp
cmp
jo
imul
cmp
cmpb
cmp
mov
xor
test
jmp
or
cli
ss
push
cmp
add
push
add
cmp
add
adc
test
xchg
or
fdivrs
mov
lret
rcrb
dec
pop
pop
aaa
fistpll
cmp
rcrl
cltd
cmp
popf
fld
cmp
int
cmp
cltd
ds
sbb
out
aas
gs
push
adc
mov
inc
xor
xchg
and
and
insl
and
xor
testb
andb
inc
daa
pop
and
mov
js
pop
xor
mov
add
cmp
inc
aaa
loopne
or
enter
inc
rcrb
jmp
pop
mov
fs
and
les
cmp
jnp
or
xchg
insb
add
and
jb
push
ss
add
jae
daa
inc
test
adc
movsb
sub
pop
mov
daa
inc
incl
and
int3
int
cmp
js
and
inc
and
inc
and
add
and
add
jns
jl
inc
and
sbb
sub
inc
and
add
stos
sbb
inc
sahf
inc
mov
mov
push
leave
xchg
push
add
mov
sbb
popa
inc
int3
notb
inc
push
addb
pop
push
mov
or
lcall
sub
test
push
adc
int3
adc
inc
and
in
xor
inc
and
stc
xchg
cld
adc
adc
pop
repnz
adc
and
and
pop
subb
and
jl
inc
sbb
and
aas
jl
inc
gs
mov
and
add
nop
inc
adc
add
adc
push
call
cld
xor
rclb
add
je
stos
xor
adc
data16
add
insb
sahf
insl
push
pop
or
xor
adc
and
sbb
int
push
out
int3
pop
enter
xor
add
stc
jns
dec
add
xor
inc
inc
and
inc
and
xor
cmp
adc
fs
repnz
leave
enter
xchg
adc
adc
repz
mov
aaa
and
int3
enter
and
fistl
add
or
jae
and
mov
and
test
xor
xor
das
or
and
ficoml
add
and
xchg
jl
inc
and
inc
and
and
cmp
inc
and
insb
mov
pop
mov
mov
or
movsl
or
or
lret
jp
pushl
mov
cmc
test
add
push
rdpmc
fcmovne
scas
or
adc
jns
or
aam
mov
jnp
les
les
arpl
mov
mov
fcoms
adc
ret
mov
ja
aad
sbb
xlat
fidivrl
jae
test
jmp
imul
fcomi
xor
push
sbb
shr
mov
dec
pop
pop
push
ds
pop
lock
sbb
pusha
jle
xchg
or
jno
adc
mov
xor
add
lret
push
fdivrs
inc
sarb
movsl
lcall
or
cld
inc
or
aaa
subl
push
in
shll
pusha
out
jnp
shll
xchg
jnp
fcomps
mov
sub
xor
and
das
pop
and
adc
leave
dec
les
jne
popa
sbb
add
adc
add
lret
push
inc
subb
test
sub
pop
xchg
dec
insl
insl
jae
adcb
xchg
fsts
dec
dec
inc
jg
arpl
or
rolb
and
cmpsb
inc
cwtl
gs
inc
inc
imul
dec
popa
insl
push
fwait
test
cmp
faddl
dec
daa
shl
pop
inc
or
jns
fs
adc
add
jle
lea
dec
sub
dec
inc
cld
sbb
aaa
dec
call
adc
ja
or
outsb
iret
popf
je
cmp
notl
add
push
push
enter
out
sbb
repnz
in
or
dec
mov
adc
sahf
stc
lea
fs
dec
sbb
jne
sbbb
add
in
and
push
xchg
negb
pop
mov
or
dec
xor
bound
outsl
clc
lods
xor
sub
js
or
xor
push
cld
inc
inc
xor
push
out
cmp
adc
add
aam
cli
jne
in
adc
pop
mov
jbe
enter
repz
or
and
sbb
xchg
shlb
icebp
push
std
leave
add
push
push
ljmp
adc
das
and
mov
das
rcrb
push
jecxz
add
int
inc
add
cmp
jl
ds
mov
inc
or
add
sub
lods
add
ljmp
sub
test
mov
pop
push
mov
mov
xchg
add
or
addr16
in
pop
outsl
outsb
gs
outsb
xchg
gs
cs
aam
and
mov
aad
insb
xlat
popa
pop
xchg
gs
push
jne
arpl
aam
dec
aaa
cmp
loopne
loop
mov
add
js
bound
cmpl
sti
xor
call
or
lahf
addr16
sbb
sub
je
dec
call
dec
leave
lret
sub
dec
nop
int3
adc
push
into
dec
dec
dec
into
jp
rcl
shlb
jno
roll
adc
xor
cmp
fcmovne
enter
outsl
popa
aas
int
mov
test
imul
bound
int
into
inc
andl
inc
mov
mov
int3
add
incl
xchg
mov
sti
outsb
flds
push
inc
sub
insb
sub
mov
pop
inc
jp
dec
push
jge
les
mov
sbb
add
lods
jns
jne
into
mov
sar
pop
or
pop
ljmp
push
adc
push
dec
push
decl
jne
in
sub
out
sub
and
add
in
push
call
push
repnz
inc
inc
and
jmp
js
push
rclb
xor
xor
fistl
xor
xor
arpl
add
and
push
shrl
xor
pop
jae
inc
mov
mov
daa
nop
push
xchg
std
pop
xchg
sbb
sbb
mov
out
lret
xchg
std
mov
gs
xchg
sarb
outsl
shll
jb
jb
jnp
jo
dec
mov
add
lcall
jl
inc
inc
push
enter
add
push
dec
xor
sbb
sbbl
xchg
or
mov
push
lods
insl
test
jns
dec
rorl
cld
std
in
shlb
jns
xor
push
and
ja
shll
repz
hlt
cmc
div
or
add
insb
xchg
addl
xor
sub
mov
fs
xchg
gs
dec
xchg
gs
mov
push
sarl
mov
sub
outsb
insb
popa
jne
arpl
mov
push
imul
cmpsb
sbb
imul
js
fildll
lret
mov
gs
outsl
sub
lret
mov
gs
xchg
or
arpl
xor
bound
fs
out
call
mov
std
push
xchg
push
add
notl
sub
data16
int
in
add
les
lret
call
addr16
push
scas
je
inc
push
mov
mov
xorl
dec
dec
adc
je
xchg
mov
jge
pusha
mov
add
or
add
inc
andl
mov
arpl
fsubr
loop
or
out
sbb
xchg
xchg
mov
insl
sbb
repnz
loop
int
add
sub
sbb
adc
stc
outsb
lea
adc
mov
push
push
or
sbb
sbb
push
and
fcmove
aaa
adc
add
es
inc
or
xchg
or
or
or
int3
mul
pop
or
out
mov
push
sbb
add
es
enter
inc
int
lock
shlb
test
push
insb
sbb
add
add
add
rcrb
shll
pusha
mov
test
aaa
dec
mov
and
repz
push
stc
cmp
xchg
int3
jg
sbb
call
sete
jbe
add
into
sub
std
xor
pop
mov
push
stos
js
push
lret
neg
or
mov
or
jo
add
xor
xchg
mov
pop
pop
or
inc
sbb
jo
add
push
xchg
inc
and
add
mov
aaa
leave
push
sbb
loopne
adc
or
jno
or
repnz
mov
mov
inc
and
adc
ret
nop
stos
lds
and
sub
pusha
repnz
push
enter
add
cli
movsb
hlt
nop
lret
push
and
adc
push
sbb
xchg
test
push
adc
or
inc
ss
test
add
imul
pushf
int3
add
mov
lea
sub
or
jae
sub
mov
or
loope
sbb
xchg
or
and
inc
dec
cmp
shll
stos
add
insb
add
or
mov
xor
mov
add
inc
push
pusha
dec
shll
lods
ret
shll
shl
lock
fisubrs
cmpsb
imul
pushf
insl
lcall
jae
shll
jle
cmp
pop
bound
shll
push
xor
in
and
aaa
imulb
xchg
sub
aaa
xor
xor
dec
dec
jo
inc
add
mov
mov
and
data16
inc
add
push
outsl
pop
mov
pop
mov
mov
test
jns
jne
jae
xor
mov
adc
outsb
dec
push
push
js
adc
pop
mov
jp
js
outsl
mov
push
dec
jae
push
sub
push
push
push
dec
add
test
rorb
add
fdiv
mov
inc
inc
inc
adc
fldcw
mov
test
imul
sbb
xchg
or
pop
mov
inc
enter
push
or
pop
xchg
xor
and
adc
xchg
adc
and
inc
ret
xchg
and
adc
push
xor
aaa
fs
xchg
movsl
pop
unpcklps
out
aaa
adc
sbb
bound
pop
addl
xor
sbb
xor
push
popf
nop
mov
or
sub
movsl
cmpsl
inc
jp
pop
sub
es
mov
mov
sub
adc
mov
push
or
addr16
clc
add
or
outsl
lcall
les
push
mov
push
outsb
jb
xchg
mov
add
inc
inc
and
outsl
js
or
mov
inc
push
adc
xchg
jne
and
mov
sub
adc
fs
xchg
or
ret
push
and
mov
sub
mov
inc
lods
andb
push
rcll
sbb
dec
sbbb
lock
insl
dec
jae
jg
sbb
or
fldl
aaa
fcomp
cmp
inc
inc
add
or
arpl
mov
pop
imul
daa
fwait
and
sbb
aaa
pop
enter
xchg
test
mov
lock
cld
add
dec
sbb
xor
cmpsb
sub
dec
shll
loopne
out
clc
jmp
dec
and
or
pop
jge
call
xchg
add
add
or
add
xchg
pop
imul
fstl
mov
inc
jl
adc
fwait
dec
push
je
inc
push
push
add
leave
jne
pop
adc
and
jb
jne
adc
mov
jg
sub
call
inc
or
mov
dec
outsl
jecxz
clc
push
in
adc
jnp
sub
or
adc
insb
dec
add
pop
lock
adcb
mov
enter
test
mov
addr16
mov
insl
mov
xchg
outsl
or
jns
pop
push
mov
test
xor
inc
test
mov
int3
xchg
adc
movsl
fcmovnbe
xor
cmovno
imul
dec
outsl
sbb
jae
pop
rorl
add
fs
add
add
inc
sbbb
cmp
pop
int
mov
push
adc
fcmovnb
adc
scas
or
push
fsubrs
add
fldlg2
cld
mov
jae
nop
outsb
sbb
add
pop
or
or
dec
mov
push
int
dec
pop
jecxz
mov
jns
and
mov
cmp
xor
jecxz
inc
jmp
insl
add
outsb
inc
jae
and
mov
popa
jns
popa
and
ss
cmp
add
addr16
xlat
jne
jg
inc
imul
xchg
or
notl
sbb
sub
add
push
jmp
gs
jb
cmp
fnstenv
xor
popa
lea
outsb
xchg
insb
popf
xchg
pop
iret
jge
scas
dec
or
lds
popf
sbb
or
addr16
pop
adc
xchg
xchg
outsb
jae
pop
xor
xor
cmpsb
fcmovnu
gs
push
sub
shll
insb
or
daa
dec
dec
sub
fs
xlat
outsb
xchg
mov
jl
in
push
daa
jbe
mov
ret
fs
outsl
pcmpeqw
lret
je
and
xor
inc
push
imul
and
arpl
loope
push
insb
cmpsl
xchg
out
fildl
add
adc
rorb
xor
xor
xor
fisttps
mov
xor
xor
pusha
xor
lea
outsl
push
ja
cmp
xor
xor
std
lret
pushl
mov
xor
xor
lea
xor
xor
inc
sbb
mov
xor
xor
iret
pushl
mov
ss
ss
outsl
push
pushl
jg
mov
fwait
ss
inc
xchg
aaa
pushf
aaa
mov
pop
aam
adc
inc
cmp
xchg
mov
cmp
cmp
cmp
cmp
cmpl
dec
hlt
ljmp
mov
cmp
lret
cmp
cmp
push
cmc
inc
sti
out
cld
sub
mov
xor
dec
xor
xchg
xchg
xor
xor
xor
jg
cli
lods
adc
jg
test
lahf
xor
xor
xor
xchg
mov
xor
fnstenv
add
ljmp
push
ss
ss
ss
inc
and
outsb
adcl
cmp
cmp
adc
loop
and
sub
add
sub
sub
xor
xor
adc
dec
add
lret
nop
xchg
and
or
inc
cwtl
xchg
add
inc
inc
add
mov
xor
push
arpl
ret
pmaddwd
push
inc
cmp
sbb
ljmp
jae
jne
pop
sbb
jle
or
jecxz
cmp
mov
mov
dec
add
inc
sub
mov
addb
call
add
mov
test
test
adc
mov
insb
dec
lds
iret
pushf
test
stc
cld
inc
inc
jno
popf
add
push
dec
and
add
imul
or
mov
add
push
shr
push
mov
lods
ds
and
lret
inc
sub
dec
sidtl
cmp
loop
jg
aaa
aaa
pop
and
stos
in
mov
add
and
add
xor
or
dec
and
adc
xor
and
mov
in
or
add
and
push
mov
mov
add
add
shlb
daa
xchg
sbb
sbb
add
and
add
add
add
nop
add
add
add
add
add
popa
add
call
int
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
