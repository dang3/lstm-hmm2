ret
shlb
cwtl
ds
mov
shlb
mov
pop
nop
popf
jae
xor
shl
fcmove
hlt
mov
es
cld
jo
sub
xor
xchg
add
call
dec
shl
out
fcmovu
cmpsb
imul
lcall
scas
mov
cmp
cld
lcall
shrb
cmpsb
imul
cmpsb
imul
cmpsb
imul
shll
test
lcall
pop
ss
xchg
sbb
xchg
add
test
adc
sahf
cltd
add
stos
out
shl
xor
cmpsb
test
dec
shll
dec
inc
dec
push
fdivs
add
xor
pusha
in
sbb
shll
jl
dec
shll
in
decb
xor
rol
inc
leave
in
cmp
sbb
sarb
or
adc
cwtl
fwait
rol
ljmp
in
mov
arpl
sahf
sbb
push
jl
inc
sbb
sub
sub
arpl
mov
ljmp
push
mov
jp
xchg
push
cmpsb
leave
stos
test
inc
les
mov
or
cwtl
daa
pop
cmp
xchg
add
shr
mov
imul
or
sub
dec
int
loop
and
out
test
lcall
loopne
dec
test
bnd
jl
add
stos
push
xor
sbb
rclb
into
test
pop
add
rolb
adc
or
and
xor
cmp
into
pop
add
and
daa
and
add
mov
gs
push
inc
dec
xchg
add
inc
inc
insb
or
mov
push
je
into
push
add
fcoms
pop
jp
dec
jns
inc
int3
and
mov
ror
fld
ret
xchg
and
add
lods
lods
fcmovnbe
mov
fwait
bound
mov
mov
add
out
cli
add
cmc
lock
mov
add
xor
xchg
ret
iret
fcomi
fst
rclb
test
fst
iret
and
push
or
faddp
cwtl
xorb
lcall
repnz
push
pop
push
int3
mov
ficoml
fimuls
dec
inc
enter
mov
es
enterw
popa
adc
or
jne
test
lock
add
push
jp
add
and
ret
les
adc
push
push
mov
and
add
mov
mov
mov
jmp
push
and
lods
cmpsl
mov
jmp
push
cmp
dec
mov
rcl
repnz
sbb
repnz
ret
idiv
out
mov
loopne
loopne
mov
pop
add
sbb
inc
movsl
pop
test
sub
sbb
popa
xor
lret
mov
and
and
xchg
inc
jge
lods
pop
cli
mov
arpl
add
repz
pushf
jecxz
xchg
lea
sub
dec
dec
inc
push
adc
pop
jge
lods
int3
and
addr16
or
sub
fwait
add
sbbb
mov
or
xor
add
add
nop
repz
add
add
mov
sub
sbb
cmp
mov
add
popl
add
add
pop
shr
cmp
fs
xor
inc
cltd
sub
dec
inc
sbb
bound
pushf
stc
pop
ds
push
lret
mov
adc
sbb
mov
pushf
incl
repz
and
adc
fcoml
repz
ja
out
aad
insb
inc
sbbl
jo
jbe
add
add
mov
fs
out
fdivrs
add
dec
fcomip
mov
outsb
jo
dec
stc
add
add
add
inc
int3
pop
dec
sbb
ret
nop
loopne
testb
and
fwait
lods
cmpsl
dec
pop
fcmovnu
jecxz
jnp
add
add
or
and
sbb
dec
nop
addr16
repz
xor
adc
lret
sbb
add
pop
xchg
out
rcrl
aam
pop
aas
sbb
dec
mov
jae
in
enter
or
add
or
pop
push
sbb
add
jae
sbb
add
xlat
sbb
lret
xlat
les
ficoml
cli
test
stc
dec
pop
pop
xchg
mov
pop
lock
add
and
and
xorb
sub
mov
movsl
aad
cld
mov
push
sbb
and
push
cltd
inc
mov
push
cwtl
mov
push
dec
lcall
lcall
mov
fwait
or
add
sahf
push
mov
push
repz
pusha
mov
pop
pop
mov
pop
mov
add
adc
stc
scas
fcoml
mov
dec
mov
mov
lahf
dec
push
inc
dec
dec
sbb
add
enter
lock
ror
inc
std
aam
js
inc
add
add
daa
dec
sbb
and
cs
frstor
or
lcall
popa
sub
pushf
xor
add
fdivrl
inc
xchg
ljmp
or
lret
mov
loop
les
outsl
pop
add
add
loop
js
lock
sbb
hlt
jno
sahf
jmp
sbb
das
add
add
fldt
fs
jecxz
cld
rcr
push
xor
mov
in
push
dec
jae
movsb
sbb
push
mov
or
sub
mov
dec
mov
push
adcb
push
cmpb
push
ljmp
lcall
sahf
jp
mov
sbb
mov
xchg
stos
add
sbb
mov
push
addb
mov
test
and
inc
das
lcall
add
add
jge
inc
stos
scas
jg
pushf
mov
lret
cmpsl
aam
aad
push
adc
add
add
xor
fnstsw
inc
mov
adc
push
int3
push
add
in
pop
sbb
shl
pop
jge
push
add
mov
sbb
xor
push
jo
lret
jp
shl
mulb
es
add
and
adc
xchg
in
inc
jg
into
cmc
aaa
ss
fistl
add
and
cmp
pop
sub
fsubp
stos
mov
les
hlt
xor
add
add
daa
jmp
sub
inc
jge
mov
mov
push
xchg
pop
mov
mov
mov
add
add
pop
test
mov
add
fistpll
push
adc
or
jge
add
add
pusha
pop
cmpb
je
cmp
jp
xchg
jbe
add
add
pop
mov
add
bound
lods
jmp
sbbb
loope
mov
xor
add
stos
test
mov
enter
push
fists
aaa
add
add
lret
sbb
dec
xor
cmp
cmpsl
cmp
push
or
sub
sti
cmp
roll
add
rclb
cwtl
xchg
lahf
lret
and
test
sbb
xor
add
pop
xchg
xor
cmp
sub
sub
and
add
cli
push
xchg
test
xor
cmp
jmp
xorb
xor
push
sbbb
pop
mov
add
into
movsl
push
mov
daa
jbe
jg
pop
xor
imul
sub
inc
push
icebp
mov
adc
insl
or
add
xchg
sub
outsb
daa
sub
inc
xlat
push
add
insl
adc
repnz
into
lcall
add
add
imul
imul
and
jl
fildll
adc
add
jae
pop
mov
orb
xorl
stos
stos
lret
mov
sti
lahf
arpl
add
add
push
addr16
arpl
add
sbb
sbb
pop
sub
jno
stos
rcrl
add
add
or
cmp
in
push
out
add
fcoms
xchg
mov
xchg
stos
add
add
add
cmp
cltd
add
xor
push
mov
cmpsl
xchg
addl
add
add
mov
outsl
sahf
lds
mov
dec
push
call
push
outsb
dec
stc
lea
jnp
mov
mov
add
inc
cli
into
lods
mov
pop
inc
mov
push
lods
mov
stos
lods
push
push
outsl
jge
dec
mov
bound
inc
je
pop
xchg
imul
cmp
pop
jecxz
mov
mov
je
add
add
ja
mov
jg
jno
dec
jg
nop
movsl
es
jo
subl
scas
hlt
sahf
jo
push
mov
jp
cmpsl
push
insb
and
lods
mov
push
mov
add
mov
ficompl
iret
xchg
aaa
add
in
aam
ds
or
lret
or
pop
pop
icebp
sub
sbb
hlt
cmp
add
add
push
jge
sbb
cwtl
sub
cmp
out
cmp
sbb
iret
or
sbb
adc
add
add
out
cld
int3
add
cmp
add
je
mov
mov
add
out
shll
addr16
into
sbbl
sub
rol
cli
cmp
add
mov
das
mov
push
lds
xchg
es
pushf
lcall
dec
andb
pusha
ljmp
imul
inc
mov
pop
jbe
dec
pop
inc
hlt
aad
lahf
jp
add
cs
lock
decl
mov
ja
xor
sbb
add
inc
test
repz
xchg
idivb
scas
popa
lea
mov
adc
loopne
and
mov
stos
les
dec
lods
mov
push
push
cmpsb
mov
aas
test
add
lock
test
add
cmp
jmp
xor
fcoms
sub
rorb
sbb
add
add
repnz
loopne
fwait
mov
bound
test
xchg
sbb
out
push
nopl
repnz
add
add
clc
cmp
mov
lock
sbb
cmp
pop
adc
das
push
sub
add
add
in
sahf
xor
add
mov
stos
movsl
xor
sub
cmp
lds
add
lret
stc
pop
push
and
mulb
dec
test
add
add
lcall
imul
scas
mov
mov
scas
mov
adc
pop
add
cmpl
scas
je
nop
jle
popf
cltd
movsb
pop
call
add
mov
repnz
pushf
inc
xchg
mov
add
add
ja
scas
nop
push
mov
pop
sbb
jl
cmpsb
pop
scas
xchg
push
mov
push
push
push
pop
scas
fcoms
pop
stos
push
mov
dec
mov
xchg
jne
shll
add
dec
cmpsb
add
add
ret
loope
add
add
mul
push
lret
fsts
sub
out
push
daa
fisubs
sbb
sub
fistl
adc
cmc
shrb
add
mov
cltd
movb
cld
or
insb
std
push
test
test
imul
je
xor
jmp
sbb
pop
xchg
dec
inc
movsb
inc
or
xchg
xchg
test
test
add
sbb
cmpsl
cmp
lret
lret
das
sbb
xlat
dec
fmull
div
sti
cmc
cld
jmp
out
cld
loop
mov
sbb
sbb
sbb
test
pusha
mov
dec
sbb
cltd
jp
and
cmp
fimuls
adc
and
push
mov
pop
push
add
rcl
add
xor
mov
les
add
add
jecxz
in
jnp
cmpsb
fstpl
jno
add
push
dec
dec
or
jno
loopne
cli
mov
test
cmp
adc
inc
inc
and
sbb
lods
lods
and
inc
movsb
mov
xor
andb
aad
sti
std
call
in
adc
sbb
jecxz
in
dec
sbb
lods
test
inc
mov
rcr
xlat
rol
sub
xchg
ja
ds
pop
sub
orl
pop
and
pop
dec
push
and
sbb
outsl
cmp
mov
adc
jg
jp
xor
cmp
push
add
jo
push
or
adc
inc
push
inc
sbb
loopne
lret
cmp
sub
jge
fs
inc
adc
cltd
mov
sbb
mov
cs
xor
in
pop
mov
loopne
mov
incb
in
test
ficoml
test
repz
div
mov
lcall
sahf
in
loope
xchg
loop
lods
stos
into
ret
fsubrs
daa
icebp
movsl
leave
fdivl
inc
mov
mov
cli
les
xor
ss
cmc
jne
movsl
daa
push
bound
icebp
cli
mov
data16
cs
inc
jae
jbe
mov
into
push
jae
dec
inc
dec
add
cmp
dec
pop
dec
inc
xor
cmp
add
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
xor
add
pop
pop
pop
pop
pop
pop
pop
pop
pop
gs
popa
gs
cltd
xchg
xchg
xchg
xchg
xchg
xchg
cltd
cltd
test
test
xchg
fcmovu
fcmovbe
rcl
rcl
fcmovu
lret
lock
stos
push
rorl
sarb
ret
outsl
stos
shlb
sbb
fdivs
sub
pop
sbb
retw
add
adc
sti
lock
daa
sbb
mov
jl
movsl
fimull
add
dec
inc
pop
push
push
push
jle
popa
jl
and
pusha
movsb
jns
repz
xchg
add
push
mov
adc
scas
sahf
lret
ss
mov
fistps
inc
sbb
adc
jo
mov
inc
mov
sub
or
jmp
add
out
xlat
sbb
sub
repnz
cmp
in
jnp
add
mov
xchg
mov
cmc
push
add
enter
popf
mov
mov
adc
aas
and
push
adc
pop
and
mov
sbb
loopne
xor
pop
jno
pop
mov
cmpsl
push
push
ja
push
fwait
adc
jl
arpl
jns
sub
mov
scas
mov
push
lret
aaa
xor
xchg
cmp
cmp
xlat
push
add
aaa
mov
mov
mov
fnstsw
push
hlt
xor
cwtl
fcom
scas
xor
mov
jge
pop
or
or
stc
jb
dec
cmp
in
pop
test
mov
xchg
or
pop
ss
rcr
sbb
jle
push
mov
mov
jg
pop
push
nop
adc
fcomip
and
test
xchg
xor
push
push
push
lods
add
subb
xor
xchg
push
jge
jnp
push
sub
xchg
outsl
jae
shll
sub
out
flds
dec
popf
adc
mov
cmpsb
mov
out
sbb
pop
jmp
rcr
lcall
lds
fists
mov
mov
and
push
mov
dec
dec
pop
andb
scas
add
loopne
inc
imul
test
repz
jnp
and
add
or
add
adc
adc
cltd
cs
xor
sbb
adc
imul
fwait
fwait
popa
addr16
push
pop
movsl
insb
fsub
cmpl
popf
scas
bound
popa
push
lahf
orl
fcomps
xchg
mov
cmpsl
mov
adc
cmc
repnz
dec
push
mov
mov
cmpsl
adc
inc
dec
pop
push
lcall
mov
sbb
mov
cmp
jns
jnp
push
xor
or
sub
or
and
iret
bound
pop
push
dec
xchg
adc
adc
inc
pop
sbb
pushl
dec
inc
aas
jo
push
mov
into
sub
gs
lret
sahf
xor
adc
out
cmovge
fidivs
enter
xchg
jecxz
loopne
xchg
mov
scas
mov
call
negb
js
sbbb
iret
rol
mov
or
enter
xor
sub
je
sub
repz
ret
jo
push
fists
test
les
push
insl
push
inc
add
je
mov
dec
pop
inc
cmp
sub
mov
adc
jo
push
mov
add
arpl
adc
push
push
xchg
lds
jne
clc
push
cmpl
dec
push
push
int3
and
js
fistps
add
cmc
mov
add
xchg
nop
cmpb
fcomps
js
xlat
leave
mov
or
leave
pop
data16
jns
cmp
push
adc
and
loop
jb
and
and
xor
xchg
cltd
push
push
adc
mov
lea
or
fcmovbe
pop
orb
adc
mov
roll
fdivrs
mov
inc
mov
sbb
repz
cs
jg
and
testl
and
jnp
call
rcrb
int3
add
adc
and
add
jp
mov
add
xor
push
inc
lahf
clc
and
fmuls
fwait
push
cmp
cmp
and
sbb
fs
cmp
in
mov
adc
in
sub
dec
xchg
outsl
loopne
outsb
cwtl
loopne
push
mov
add
into
mov
arpl
xor
cwtl
test
je
movl
push
int3
sbb
int3
sbb
ret
adc
add
dec
or
pop
aas
in
cmp
clc
add
push
or
sub
sbb
gs
jno
cmp
sarb
add
add
pusha
pop
fwait
mov
cmp
shr
sub
gs
aad
int3
or
adc
scas
lcall
sbb
mov
hlt
xorb
out
jo
mov
jmp
movsb
pop
mov
lret
push
inc
jp
jnp
jl
and
or
adc
pusha
push
dec
je
xor
inc
cmp
lock
mov
out
inc
cmp
add
add
outsl
outsb
divl
int3
push
jne
fmull
and
pop
pop
aam
int
push
clc
sbb
sbb
add
add
dec
ret
orb
sbb
shrl
inc
push
cld
xorl
rcl
clc
hlt
adc
add
andb
loop
out
or
mov
push
xchg
adc
test
test
push
movsb
pop
sbb
mov
add
scas
aam
pushf
mov
or
push
jp
push
mov
pop
outsb
and
lahf
das
pop
add
add
inc
repnz
sbb
mov
xor
lahf
jb
pop
sub
adc
orl
or
cltd
mov
inc
cs
dec
faddl
add
rcrb
cmp
add
jbe
jbe
xchg
arpl
sbb
dec
lods
mov
inc
mulb
mov
add
add
bound
mov
xchg
stc
aaa
adc
push
cmc
sub
cmpsb
fisttps
ljmp
add
rcll
popf
lret
es
dec
mov
outsb
mov
ss
repz
and
inc
ss
ret
fs
ss
sahf
mov
fs
ss
mov
sub
push
add
call
cs
push
add
repz
mov
xchg
inc
or
pop
sbbb
ret
lds
movups
push
cmp
xor
add
insb
clc
cli
jmp
lcall
add
aaa
arpl
push
xchg
mov
aad
ret
adc
fiadds
in
cmp
inc
mov
xchg
inc
and
add
push
xchg
pop
cwtl
loop
cmp
mov
mov
mov
mov
and
mov
int3
push
push
test
adc
jo
and
cmp
push
jl
call
mov
mov
xor
aaa
movsb
dec
cmp
jecxz
sbb
cmp
lcall
call
sbb
inc
testl
js
cwtl
xor
fwait
mov
or
push
sbb
das
adc
cwtl
insb
mov
enter
dec
and
lahf
dec
popa
inc
shrl
jne
pop
imul
add
jmp
mov
bnd
ja
popa
sbb
or
cld
scas
aad
sbb
pop
lret
sbb
fidivl
push
fadd
mov
sbbb
adc
leave
aaa
aaa
and
sbb
mov
test
addb
fists
sbb
int3
mov
cmpb
dec
and
dec
xchg
lcall
gs
xor
dec
xchg
xor
dec
insl
movsb
fwait
bound
lret
xchg
gs
mov
push
mov
shlb
outsl
outsl
dec
jbe
dec
ja
rcrb
or
arpl
xor
lods
or
or
movsb
adc
subb
xor
cmpsl
les
mov
or
add
xor
call
mov
lock
rorl
add
roll
out
sar
dec
leave
cmp
inc
loop
dec
push
cmpsb
outsb
sub
or
push
push
adc
push
hlt
cltd
cwtl
adc
add
orl
and
xchg
test
pusha
push
orl
loopne
gs
mov
and
push
xchg
adc
xor
push
loopne
or
ret
std
pop
movsb
sub
jnp
cmpsl
call
adc
push
and
cli
sub
adc
sbb
and
into
push
adc
lods
aaa
cltd
cli
mov
push
test
mov
jmp
in
and
cmpsl
leave
out
and
cmp
push
inc
sbb
lods
lcall
mov
inc
roll
rolb
adc
mov
subb
notl
dec
cmp
inc
xchg
pusha
aaa
xchg
dec
mov
lret
inc
cmovae
jl
lds
xchg
mov
push
xchg
or
xor
dec
inc
or
mov
cmp
add
in
sub
pop
jno
outsb
fsubrl
dec
mov
or
lods
loopne
das
sub
mov
int
mov
pop
and
sbb
shll
sub
mov
and
inc
fiaddl
xchg
sbb
xchg
pop
add
cs
xchg
inc
cmp
jno
mov
popf
jno
jnp
stc
jnp
adcl
es
add
cmpsb
jp
adc
out
mov
sub
adc
lret
lret
leave
js
or
cmp
into
fldl
movl
mov
push
pop
jno
sbb
sub
xchg
ret
dec
test
pushf
xchg
test
xchg
popa
lods
rorl
xchg
push
xor
jg
xchg
data16
fs
leave
jo
jbe
pop
arpl
jnp
push
outsl
rorb
enter
popf
xor
fwait
xor
cwtl
imull
push
push
and
pop
push
clc
mov
subb
fwait
or
popa
cwtl
sbb
or
or
add
push
push
dec
imul
add
sub
daa
pop
cmp
and
mov
jnp
add
enter
dec
insb
cmp
test
js
je
sub
inc
aam
mov
push
push
imul
sub
mov
lea
mov
mov
xlat
or
jno
in
das
sbb
jnp
movsl
jb
mov
mov
fwait
jle
inc
push
movl
xor
pop
dec
or
in
iret
popa
mov
xor
sub
mov
into
and
pusha
fld
ficoms
xchg
sub
cli
lock
mov
push
adc
faddl
bound
xchg
rcr
push
mov
fstpt
xor
sub
mov
dec
mull
je
jo
mov
jp
sbb
dec
dec
mov
das
pop
add
mov
xchg
add
in
adc
sbb
pop
imul
in
sbb
xor
push
ds
sbb
and
ljmp
dec
les
ds
xchg
xor
push
cmp
cmp
aaa
lea
sub
pop
jnp
pop
inc
sub
or
push
movsl
dec
aad
pop
je
lcall
sub
xchg
xor
inc
lcall
in
daa
ret
pop
pop
movsb
pushf
pushf
jmp
adc
mov
pop
sub
add
xor
sbb
and
jge
or
jno
xchg
sbb
push
mov
lods
xor
subl
xchg
daa
dec
sub
cltd
stos
or
js
mov
cs
inc
mov
adc
and
jne
or
scas
jo
das
xchg
pop
in
or
scas
fimull
scas
jb
sahf
sti
push
scas
fstpt
test
dec
and
xchg
popa
rcll
pop
jmp
lcall
mov
pushf
shrl
mov
aaa
mov
int
inc
mov
fsubrs
inc
ret
ljmp
mov
or
sbb
xor
dec
nop
inc
iret
mov
aas
enter
fs
push
out
xchg
or
fmuls
push
mov
dec
mov
push
leave
dec
je
es
adc
subb
jecxz
dec
xchg
std
fwait
xor
ret
jg
scas
in
and
mov
shll
frstor
test
dec
cmp
push
andb
sahf
jno
add
sub
add
in
gs
fisubrs
test
sub
fnsave
daa
lods
outsl
int
add
lods
mov
adcl
imul
in
loop
xchg
mov
cmpsl
push
fsubl
push
enter
in
dec
and
fistpl
rcrl
scas
aam
lock
inc
mov
adc
inc
xorl
dec
dec
aad
xchg
sbb
dec
bound
jno
xor
data16
shrb
int3
stos
fsubrs
sahf
loopne
and
xor
repz
cmc
pop
into
std
push
xchg
jae
add
and
hlt
push
jno
pop
and
jb
xor
jns
shrb
cmpsb
mov
subl
bound
cwtl
nop
push
hlt
mov
xor
into
mov
or
jo
data16
push
push
inc
add
dec
fstps
push
pop
inc
sub
rcl
sbb
push
pop
or
lea
adc
pusha
add
lea
jp
xor
inc
mov
popa
sbb
add
mov
scas
xor
and
adc
hlt
cmp
stos
loop
or
or
mov
jecxz,pn
mov
push
mov
es
push
mov
cmp
fstpl
test
xor
add
js
subl
pop
mov
sub
repz
pop
jo
dec
rclb
mov
filds
inc
xlat
sub
or
pop
sub
lret
cld
xor
fisttpl
ss
mov
and
stc
aad
mov
adc
sbb
sub
movsb
inc
pop
add
addr16
xor
sub
scas
test
les
pop
push
popa
fsubrl
cmpsl
rcrl
nop
add
cwtl
loopne
or
lret
mov
mov
push
pop
mov
jo
mov
pop
ud0
and
jp
mov
adc
fiadds
unpckhps
into
orl
jbe
mov
jg
xor
xchg
addr16
nop
fdivrs
mov
out
dec
orb
leave
ret
aas
xchg
test
mov
sahf
pop
mov
inc
adc
scas
sub
mov
jmp
and
push
adc
sbb
push
push
inc
adc
inc
mov
sub
insl
fwait
lods
mov
mov
shll
cmpsb
mov
popfw
jmp
push
lods
loope
sub
sub
and
fwait
push
mov
adc
dec
mov
js
pop
lea
mov
mov
notl
xchg
sbb
mov
orb
adc
cmp
leave
in
mov
pusha
and
movsb
addb
test
xor
mov
pop
mov
dec
cmp
add
and
push
scas
inc
push
xor
ret
mov
icebp
pop
mov
call
mov
lods
andl
jecxz
sbb
mov
jl
out
nop
cmp
cwtl
pop
adc
lea
fdivs
loop
aad
cmpb
mov
out
and
inc
mov
rorl
lret
les
adc
adc
imul
outsb
or
xor
adc
add
push
pop
push
aad
push
mov
push
outsb
push
add
leave
fidivs
adc
xchg
subl
loop
ret
test
mov
jmp
enter
imul
mov
mov
cmp
mov
daa
push
shl
xchg
mov
aas
jae
push
pop
outsb
in
cltd
jnp
or
push
pop
popa
f2xm1
fidivs
jb
xor
mov
cmp
scas
mov
inc
mov
xchg
imul
add
test
call
inc
push
subb
inc
dec
movb
int3
ret
std
loopne
nop
subb
ljmp
pushf
ja
mov
sub
repz
pushf
xchg
dec
clc
and
mov
dec
rcrb
cmp
aas
sbb
xchg
btc
popf
movsl
inc
shrl
dec
sub
outsb
in
dec
fwait
int
sub
xor
inc
jb
movlps
dec
adc
es
push
outsl
add
notl
iret
pop
and
mov
jno
popf
stos
pop
popa
cmp
fadds
clc
add
push
clc
popa
mov
sub
lods
add
inc
mov
or
pop
dec
mov
stos
and
into
lret
pop
imul
jns
pushf
push
adc
adc
xchg
mov
xor
jmp
pop
cmp
inc
cwtl
dec
xchg
jbe
cs
xchg
mov
mov
adc
xchg
cld
sbb
rorl
movsb
fisubrl
mov
pop
cmp
xchg
movsl
push
mov
adc
mov
lret
call
cmp
je
and
mov
lcall
sti
shlb
mov
mov
add
adc
dec
sbb
popf
cmpsl
mov
or
jne
sub
sub
inc
sub
inc
test
jge
int3
arpl
scas
dec
jg
jecxz
stos
jmp
cmp
sub
and
daa
jecxz
sub
test
fdivl
xchg
xchg
loop
inc
leave
popa
mov
inc
add
mov
or
jp
nop
sarb
pusha
pusha
jg
int
and
and
cmp
fs
or
add
daa
cltd
lahf
cwtl
push
ret
cltd
sub
lods
inc
pause
pop
bound
pop
fwait
je
cmp
ret
shll
aam
or
add
addl
mov
outsb
pop
mov
iret
stc
insl
mov
dec
cmc
and
and
mov
repnz
les
movsb
dec
and
movsl
mull
call
and
push
push
loope
das
cltd
loope
sbb
arpl
push
xor
jbe
or
xlat
cmp
inc
cs
mov
inc
mov
xor
push
mov
inc
mov
pop
and
mov
lea
adc
hlt
ret
sub
scas
cwtl
push
outsb
xlat
addl
insl
xor
add
loopne
out
lret
xor
es
and
dec
sti
cmp
mov
xchg
fs
test
mov
mov
int3
add
mov
mov
pop
lea
mov
es
in
pop
dec
cmpsl
sbb
int3
inc
clc
stos
int
iret
xor
mov
sub
xchg
xchg
fisubl
push
outsb
fstpl
jle
fwait
mov
mov
push
jl
out
and
sub
into
pop
out
stos
lock
adc
mov
daa
pop
shlb
xor
lock
es
sub
mov
xchg
scas
sub
add
mov
and
and
in
daa
jecxz
xchg
loop
adc
sbb
dec
adcl
lea
les
out
inc
cmc
sbb
cmpsl
shrb
push
push
sub
pop
sub
insl
aas
push
add
pop
sub
jbe
fstp
lcall
out
mov
and
dec
dec
rcrb
cmp
aam
in
out
cmp
and
inc
scas
clc
xor
pop
repz
inc
rolb
inc
sub
js
movsl
xchg
pop
push
cmpsb
lods
adc
push
adc
and
cmp
mov
addr16
jns
movsb
int3
push
lods
xchg
push
ja
mov
or
daa
data16
dec
jg
loop
insl
sahf
ss
imull
mov
mov
js
addr16
dec
lahf
scas
in
or
test
ret
les
adcb
and
dec
in
adc
jmp
out
jo
sarl
adc
push
mov
adcb
fists
test
ds
arpl
or
and
sbbl
pop
xor
test
ljmp
stos
xchg
rorl
xor
scas
out
dec
adc
mov
dec
jecxz
add
adc
add
jl
sbb
test
sbbl
nop
loopne
mull
out
push
movsl
inc
lods
add
ja
mov
add
je
loope
lahf
stos
cwtl
mov
vxorps
outsl
pop
jno
leave
cli
push
jle
dec
rcrl
test
leave
repnz
pusha
sub
ret
cmp
sahf
fimull
andl
sbb
push
hlt
or
sarb
push
jl
push
jecxz
adc
adc
leave
ds
addr16
pop
mov
sub
inc
mov
roll
sub
test
adc
pop
imull
or
sbb
js
addb
adc
cs
jecxz
push
cli
cmp
loopne
and
mov
adc
dec
mov
adc
mov
stos
pop
sbb
fistps
push
lea
negl
pop
or
mov
test
shr
or
mov
cmp
mov
cmpsl
add
push
pop
insb
test
add
aad
aaa
sub
pop
cmpsl
or
lock
push
js
xchg
int
movsb
xchg
mov
arpl
xchg
insl
mov
sbb
andb
mov
pushf
setbe
jmp
aad
andl
inc
in
lock
push
jp
movsl
pusha
push
mov
lods
mov
std
mov
js
jmp
sbb
dec
pop
pop
push
lock
sub
add
sbb
addr16
scas
sbb
stos
mov
ljmp
sbb
cmp
xchg
addr16
mov
cmp
fcmovu
sbb
or
test
daa
adc
pusha
add
out
test
mov
inc
sub
xchg
dec
push
pop
leave
mov
or
loope
rclb
loopne
add
sub
and
xchg
outsb
or
mov
mov
into
mov
out
lock
adc
enter
cmpsl
xor
adc
ljmp
pop
arpl
rclb
fimull
fs
enter
or
sbb
inc
iret
repz
pusha
inc
clc
test
inc
mov
push
imul
sbbb
sarl
xchg
mov
push
jle
icebp
adc
rcrb
pop
in
cmpsb
test
xlat
jecxz
add
mov
push
out
sbb
je
out
fs
push
cmpsl
gs
fiaddl
aad
bnd
mov
in
mov
lahf
add
outsl
hlt
ds
sbb
mov
cmpb
push
push
jmp
xlat
mov
in
jb
outsl
es
push
lret
enter
xchg
inc
dec
mov
mov
popw
jle
dec
mov
jae
shl
pushf
shll
test
ljmp
xchg
push
imul
out
cmp
movl
xlat
out
out
push
pusha
les
loope
push
cmp
dec
push
push
dec
aad
lock
sub
sbb
jb
sti
pop
add
and
xchg
mov
scas
gs
lahf
mov
adcb
rol
scas
jmp
or
test
xor
aad
fwait
mov
fs
clc
movsl
jmp
stc
add
adc
and
repnz
popa
aad
sbb
mov
adc
outsl
in
and
outsl
xchg
xor
dec
mov
and
mov
push
std
sub
or
add
gs
cli
dec
push
pop
stos
cs
push
into
jns
imulb
daa
cmp
mov
arpl
xor
and
pop
mov
loope
stos
or
adc
ds
stos
sbb
sbb
and
adc
es
sbb
add
fisttps
push
subl
push
scas
les
dec
push
dec
jno
fs
repnz
scas
sub
dec
and
dec
sahf
bound
fs
sub
je
jno
es
in
and
roll
push
cli
stc
inc
push
pop
dec
rcll
sbb
shl
outsb
mov
dec
jo
hlt
test
xor
inc
cmpsb
stc
aaa
test
pop
arpl
pusha
mov
sub
sbb
aaa
or
pop
xchg
adc
loop
pop
xchg
mov
jne
xor
push
ds
dec
stos
les
dec
mov
in
shrl
inc
fdivl
stos
cmp
in
addr16
xor
and
pusha
push
lods
dec
cvtdq2ps
pop
jge
push
adc
aam
xchg
arpl
jl
push
xchg
mov
std
sbb
adc
cli
inc
mov
add
jno
in
adc
sub
insb
mov
jo
add
inc
mov
cli
adc
xor
aad
dec
fistpl
inc
push
cmp
clc
insb
testl
add
sbb
bound
fidivl
in
pop
xor
addb
jne
push
loopne
cmp
pop
enter
mov
pusha
cmp
lods
stos
fsts
sahf
loope
ds
imul
sub
sub
pop
and
pop
orb
cmpsl
mov
lods
or
mov
into
add
sbb
std
ror
jl
cmp
xchg
stc
fwait
adc
or
push
aaa
sahf
xchg
lret
adc
es
aaa
jl
cmp
mov
sbbl
push
lods
mov
addl
orl
sub
icebp
dec
pop
sbb
xor
or
sbb
adc
jne
lret
or
cli
cmp
or
icebp
daa
repz
movsb
outsl
sub
push
popf
push
mov
mov
pushf
or
scas
bound
fnstenv
fidivrs
cld
add
sbb
insb
lock
pop
push
cmpl
jae
dec
inc
sbb
mov
xlat
jb
daa
sbb
xor
insb
mov
add
sub
add
mov
je
aad
or
dec
adc
xchg
popa
push
rorb
or
adcb
scas
cmp
es
mov
sub
inc
push
xchg
mov
add
je
cmp
lea
ficompl
test
mov
dec
mov
push
stos
add
mov
xor
pop
sub
push
cmp
pop
inc
dec
mov
daa
popa
stos
jmp
inc
sbb
add
loopne
pop
push
addr16
sbb
imul
xchg
xor
lock
imul
dec
in
in
push
dec
cmp
cmpsl
scas
pusha
sub
pop
aad
pop
cmp
add
inc
pop
rclb
outsl
xor
sbb
ja
jne
into
push
pusha
arpl
out
cmp
pop
lret
adc
adc
or
movsb
outsb
push
mov
aas
mov
and
in
mov
dec
popa
mov
stos
les
fcmovne
cmp
dec
or
sbb
mov
roll
pop
dec
inc
mov
ja
jbe
fwait
xchg
insb
jg
orl
push
cs
pushf
push
stc
xorb
push
or
pop
pop
jl
cli
stc
dec
test
and
cmp
lods
dec
inc
les
add
stos
cmp
or
fdivs
push
ud0
sbb
movsl
movsb
dec
gs
rclb
xor
lea
and
adc
shll
mov
test
pop
outsl
fucom
push
mov
inc
pop
stc
mov
enter
push
inc
sub
cli
ret
jne
push
add
inc
mov
lods
pop
es
ror
xor
xor
xchg
imul
lret
repnz
shrb
adc
aam
mov
fidivrl
push
pusha
push
jo
dec
test
sbb
fs
mov
push
xchg
xchg
push
imul
pop
test
stos
mov
es
push
jns
inc
mov
test
xchg
aad
or
adc
or
aas
jb
sub
adc
inc
imul
in
daa
cmp
mov
movsb
xor
inc
push
dec
fwait
insb
sbb
or
out
outsl
jg
mov
push
mov
xchg
enter
int
xchg
cmp
stc
sbb
fs
rcrl
or
mov
push
in
add
dec
push
mov
stc
ss
push
or
mov
test
cmc
or
aam
movsb
movl
sub
mov
repnz
dec
adc
mov
push
dec
nop
in
int
mov
dec
mov
dec
jne
andb
clc
and
inc
test
inc
les
or
in
sub
ds
loop
cli
jnp
or
cld
jp
adc
push
out
in
add
cmp
jge
adc
mov
por
push
and
xchg
or
push
es
insb
js
cmp
fistpl
cmp
pop
jg
stos
xor
cmp
jmp
addr16
bound
sbb
lds
popa
push
inc
lcall
jmp
pop
sub
mov
mov
lahf
mov
pop
add
arpl
lods
jo
mov
mov
sbb
mov
jae
mov
and
sbb
jo
adc
imul
mov
cltd
das
pop
cmc
jle
adc
add
xor
mov
adc
int
jbe
pusha
movsl
push
rcrl
sub
mov
mov
popa
push
mov
add
push
and
add
adc
mov
xor
dec
adc
jo
xor
inc
popf
out
jmp
cmpl
mov
outsb
cli
nop
lcall
or
aam
hlt
das
inc
pop
xor
lea
push
js
ljmp
nop
pusha
sub
fdiv
pop
mov
ret
out
movsl
fldcw
push
loope
push
push
gs
imul
movsl
pop
push
fadd
lcall
jmp
out
push
sub
sahf
mov
jge
mov
inc
sbb
lods
loop
dec
movsb
push
add
sbb
fsub
movsb
xor
cmp
xchg
ljmp
sub
jmp
add
mov
jge
cmp
lret
cs
adc
xchg
mov
dec
push
mov
lahf
scas
loopne
pop
mov
xor
sahf
jno
xchg
ret
or
mov
test
repnz
ljmp
or
xlat
push
cwtl
inc
inc
insb
in
inc
int
push
mov
ret
add
insb
js
mov
ja
xchg
lock
das
rorl
sbb
sbb
loope,pt
xchg
xor
stos
shl
ja
push
dec
jno
aaa
mov
icebp
stc
ljmp
in
or
out
jbe
cmp
movsl
and
jl
cld
lret
mov
test
cmp
mov
outsb
sahf
sub
dec
push
dec
movsl
push
or
cltd
mov
lods
cmp
subl
shr
popa
sub
cwtl
inc
fisubrl
clc
jle
popa
movsb
sbbb
or
cmp
pusha
jo,pn
clc
pusha
inc
mov
mov
negb
lds
jmp
arpl
or
pusha
leave
and
test
sub
pushf
mov
mov
inc
xor
fs
adc
inc
mov
or
inc
sub
cmp
sbbb
pop
add
cmp
xor
push
push
jle
mov
addl
cli
push
in
fidivl
rorl
push
and
jae
stc
xchg
out
mov
out
jmp
xchg
push
inc
dec
cmpl
mov
add
fnop
aam
lret
sahf
xor
jae
xor
scas
cld
xchg
and
arpl
sub
mov
aas
inc
pop
out
popf
pop
jg
cmp
ror
je
scas
call
push
test
fbstp
push
data16
test
push
sbb
cmp
inc
sub
sbb
mov
or
inc
sbb
aam
and
adc
jl
orb
mov
mov
cmpsl
jnp
push
repnz
movsl
pop
nop
lahf
pop
je
push
or
mov
inc
mov
add
mov
lock
les
fs
add
rorl
pop
in
add
bound
call
pop
fimull
movsb
loopne
xchg
mov
xor
lret
lods
xor
xchg
cs
sbbb
add
push
jecxz
add
jg
add
dec
or
pusha
pop
mov
and
inc
or
les
inc
xchg
add
mov
sbb
xchg
data16
pop
xchg
stos
shll
dec
push
mov
dec
fistl
cmp
jge
mov
in
repz
ret
mov
popf
shlb
push
dec
std
xchg
js
fnsave
sti
imul
push
sti
lea
jns
dec
out
fwait
dec
shrl
xchg
pop
pop
ss
loopne
add
inc
scas
test
es
mov
adc
xor
xor
ss
pusha
inc
mov
pop
aad
andl
mov
pusha
jnp
pop
mov
sub
or
and
lahf
cld
mov
push
mov
pop
jmp
stos
ja
xor
push
mov
xorl
dec
mov
aad
pop
jge
and
mov
pop
popf
sub
mov
in
mul
addl
push
test
loopne
mov
inc
mov
pop
stos
push
and
enter
or
out
fldcw
xchg
xor
movsb
push
cmp
add
enter
lock
push
mov
addr16
pop
shrb
and
inc
or
sbb
cmpsb
inc
sbb
xchg
repnz
loop
xchg
sub
sub
or
loopne
cli
popf
sub
cwtl
xor
mov
xor
stos
lret
inc
repz
push
stos
lcall
or
pop
adc
hlt
lods
in
and
mov
insl
pop
dec
pop
add
pop
jnp
les
inc
xor
push
int3
lock
xchg
xchg
and
daa
js
test
jns
dec
jl
push
or
arpl
and
jb
fs
jae
inc
imul
jmp
lock
loopne
lahf
mov
jb
add
mov
mov
push
sbb
xchg
sub
pop
and
push
xchg
mov
adc
xchg
cpuid
pusha
cmp
enter
cld
push
ret
leave
pop
cmp
lods
or
lret
mov
adc
jb
lods
loop
movsl
jo
ljmp
rcrl
mov
rol
inc
test
pop
ds
mov
dec
aaa
pop
push
mov
jno
xor
mov
xor
or
gs
ret
aad
adc
pop
mov
xor
push
lods
push
addl
push
icebp
mov
push
shll
shlb
sbb
pop
inc
pop
mov
outsb
in
dec
dec
rolb
insl
mov
addr16
clc
sub
bound
push
or
add
out
mov
inc
mov
dec
push
pop
push
adc
xchg
inc
add
popa
xor
pop
inc
out
pop
pop
inc
aaa
or
ja
add
cmp
xchg
lods
test
fnsave
rcrl
sti
adcl
dec
jle
lahf
or
cmpsb
xchg
stos
adc
mov
aaa
jbe
insl
mov
pop
mov
popa
inc
xchg
rcll
fld
pop
sbb
jne
in
xchg
daa
mov
sub
or
push
rcll
adcl
ret
adc
xchg
adc
imul
loope
xchg
jne
jg
cld
lds
out
jbe
out
pushl
or
rcl
fistps
jl
mov
mov
insl
mov
cld
and
mov
adc
leave
xchg
push
mov
push
std
stc
dec
pop
or
and
lcall
pop
fstps
mov
sbb
add
dec
pop
rol
and
mov
pusha
xchg
adc
jne
mov
test
ja
pop
es
rcrb
js
push
sub
cmpsb
jmp
push
ret
fwait
mov
or
adcl
mov
in
inc
inc
rcr
lahf
mov
xor
ret
loope
mov
mov
je
scas
dec
pop
push
scas
das
daa
fisubl
leave
xor
xlat
push
lcall
xchg
jno
mov
mov
clc
inc
mov
lods
jns
rclb
adc
mov
or
xor
xchg
xchg
out
fbstp
shlb
lret
jl
stos
cmp
stos
je
pop
pushf
dec
lds
cmp
es
ds
or
cli
sbb
mov
cmpsb
push
jle
pusha
call
cs
or
mov
ljmp
pop
dec
adc
add
adc
xchg
push
stos
and
xchg
cmpsl
stc
mov
rorb
fisubs
add
add
dec
mov
xchg
push
fldt
push
data16
or
push
pop
dec
je
int3
push
mov
mov
shlb
fsts
lock
dec
push
or
sti
jns
adc
or
and
pop
mov
adc
ljmp
xchg
pop
inc
rcl
jo
adc
sahf
nop
and
inc
dec
enter
push
cmp
sub
rclb
mov
jo
jp
cltd
dec
jnp
lock
lret
cwtl
nop
push
sbb
loope
xor
sub
ja
test
xchg
jl
inc
arpl
pop
adc
jnp
push
cltd
fdivrl
adc
and
xor
decb
push
mov
add
imul
add
dec
push
jmp
cwtl
sbb
mov
sbb
js
xchg
inc
add
jp
rcll
push
scas
lret
ret
xchg
sub
mov
jmp
sti
adcl
jne
cmpl
dec
cli
jbe
movsl
inc
adc
aaa
sbb
stos
dec
ret
jecxz
or
movsb
push
shl
leave
sbb
dec
pand
pop
lahf
and
int3
mov
in
jb
aaa
fdivrp
aad
push
adc
lods
imul
cwtl
xchg
fistpll
gs
mov
inc
jne
movsl
ljmp
jle
out
adc
outsb
bound
jne
out
jo
cli
xchg
out
sub
mov
out
shrb
ja
mull
outsl
cwtl
mov
iret
push
movsl
es
bound
xchg
push
xchg
pop
mov
idivb
ret
adc
addr16
lock
popf
sbb
loop
nop
cmpsb
outsb
jo
sbb
enter
flds
mov
inc
mov
mov
push
test
fistpl
push
inc
adc
jle
stc
sub
popf
add
fwait
mov
or
add
cmp
lods
enter
xchg
cwtl
push
das
ljmp
sub
shr
mov
popf
xchg
inc
ljmp
stos
mov
dec
inc
mov
adc
cmp
adc
pop
test
cs
push
in
ljmp
fldcw
lcall
mov
and
nop
pusha
pop
inc
ds
in
pop
add
std
ret
lds
stc
cmpsb
adcl
cmp
and
jnp
stos
jecxz
js
gs
lods
pop
and
lahf
sub
xchg
sbb
sbb
xchg
adc
pop
cltd
adc
mov
les
add
lret
jmp
pinsrw
hlt
repz
fistl
adc
xchg
add
aas
mov
popa
gs
dec
push
jmp
sbb
fldcw
data16
pop
fstpl
or
mov
dec
enter
jge
sub
mov
roll
stc
sbb
divl
inc
das
lock
and
jge
cltd
inc
push
in
outsl
mov
fwait
cltd
das
mov
mov
mov
lock
or
mov
sahf
jo
inc
inc
imul
jb
xchg
std
lcall
loope
push
or
scas
sbbb
mov
dec
pop
jp
push
dec
lods
and
fadd
push
out
push
daa
popa
rcll
loope
pusha
movsl
lods
push
pusha
idiv
mov
adc
movsl
mov
scas
test
mov
mov
push
sbb
mov
adc
insb
andl
scas
pop
push
iret
inc
mov
push
call
jmp
pop
out
xchg
cmp
xor
pusha
push
loop
rorb
sub
ss
jecxz
xchg
aam
mov
mov
xchg
je
jg
xchg
movsl
pop
imul
or
dec
cmpsb
inc
push
push
or
lds
mov
cwtl
xchg
mov
adc
push
dec
pop
subl
andl
bound
mov
push
mov
adc
loop
or
ret
cmp
fldt
add
mov
pop
aam
dec
lods
gs
sub
rorb
push
fiadds
adc
divb
fstpt
cmpb
adc
imul
cli
es
stc
jg
and
fldl
mov
sbb
leave
xchg
adc
jl
jnp
imul
xor
add
sub
out
dec
mov
pop
push
add
add
or
orl
and
pop
cmp
shl
fiadds
and
imul
mov
push
pop
dec
gs
fcmovbe
nop
jmp
out
aaa
cs
adc
push
sti
ds
loopne
pop
lods
adc
push
cmc
fs
add
jo
add
jg
dec
data16
gs
or
orb
mov
sbb
outsb
lret
repnz
in
out
lret
fs
int3
sbb
cmc
adc
ret
sbb
imul
icebp
movsb
mov
inc
rcl
iret
mov
scas
xchg
lock
add
xchg
jl
jne
push
add
jbe
xchg
jb
jge
jbe,pt
or
sbb
xor
ss
test
daa
add
mov
repnz
frstor
in
or
and
add
push
and
arpl
aam
repz
mov
fwait
pusha
or
jae
ss
rcl
rcll
push
in
jecxz
cs
jns
adc
xchg
loop
mov
xchg
decl
ret
outsb
dec
dec
cmp
mov
fcoms
pushf
mov
push
or
xchg
mov
cli
and
sbb
lcall
sbb
daa
out
jno
inc
stc
inc
add
pop
adc
xor
ss
pop
test
ret
gs
jp
std
loop
clc
xor
mov
mov
cmp
in
lret
shl
pop
ror
jle
push
je
mov
cmpsl
pop
sbb
dec
and
xor
repz
imul
mov
mov
push
push
mov
push
mov
icebp
mov
rcrb
add
out
sahf
mov
pop
mov
jg
scas
push
cmc
pop
mov
data16
es
inc
xor
jo
mov
inc
jae
fistl
add
andl
in
lods
outsl
or
mov
nop
sti
mov
ljmp
jbe
mov
pop
xchg
sub
mov
js
ret
pop
test
inc
inc
sbb
xor
cmpsb
mov
push
pop
xor
or
mov
mov
pop
aaa
mov
decb
inc
add
lret
jbe
leave
insl
loop
pusha
aad
insb
sub
sti
push
xor
ret
movntq
out
dec
ds
add
sbb
push
lea
sbb
test
push
cmp
imul
into
mov
push
mov
inc
outsl
sti
iret
push
adc
inc
add
aam
sub
sub
adc
xchg
call
icebp
inc
fcomps
xor
shr
mov
mov
adc
add
dec
loope
jl
mov
jns
jbe
pop
sbb
imul
fsubl
sub
jl
cltd
xorl
push
divb
mov
popa
mov
xchg
aad
jae
xchg
cmp
or
inc
xchg
sbb
cmp
scas
jo
lea
pop
movsl
scas
andl
es
mov
adc
leave
fimuls
mov
enter
rorl
and
and
test
sub
sub
and
out
ja
add
das
sbb
or
popf
add
adcb
gs
fmul
dec
out
pusha
mov
pusha
mov
pusha
mov
mov
mov
pusha
addl
sbbl
lea
test
cmc
fildll
int3
and
daa
pop
lods
mov
push
pusha
dec
mov
stos
pop
fs
xor
out
iret
push
xor
or
adc
fcoml
mov
inc
inc
fs
or
dec
std
stos
clc
push
andl
addr16
mov
mov
push
xor
rcl
add
or
jp
sarl
sub
cld
sub
iret
jg
sbb
mov
mov
mov
icebp
psrlw
ja
xor
aaa
into
jns
push
mov
sbb
lcall
pusha
pop
hlt
fwait
lea
ds
lods
cmp
mov
pop
aad
ja
lea
pop
push
in
push
xlat
jl
mov
sub
adc
ljmpw
cmp
pop
push
icebp
cmp
test
daa
pop
mov
inc
cmpsl
xor
aad
and
test
mov
mov
xchg
movsb
loop
push
pop
xchg
xor
mov
sub
mov
cmp
push
and
sub
rol
mov
push
xor
or
jmp
adc
dec
lret
xchg
mov
cmpsb
repnz
jmp
dec
xor
push
add
jno
jae
mov
stos
push
ret
int3
jnp
push
cmp
xchg
dec
nop
es
push
pop
insl
test
arpl
popf
dec
gs
xchg
pop
data16
loopne
bound
stos
mov
test
repz
and
push
sub
push
je
pop
push
inc
and
dec
mov
pop
gs
popf
js
test
outsl
xchg
xchg
inc
mov
test
lock
je
push
and
xchg
ljmp
inc
sbb
cmc
mov
xchg
cli
pop
es
rorb
pop
scas
mov
xor
inc
decl
or
push
or
and
imul
cld
in
stos
aad
es
adc
sub
add
sbb
shl
mov
adc
fldl
pop
lcall
and
lcall
mov
mov
popa
inc
add
inc
inc
movsb
sbb
mov
or
sub
dec
sbb
out
aad
push
sahf
push
nop
pop
xchg
je
push
mov
test
lea
jo
cmp
and
push
mov
lret
addb
orl
dec
push
mov
or
inc
addb
cmpsl
inc
adc
inc
cmpsl
mov
jno
sti
call
adc
push
mov
cmpsl
movsl
push
mov
add
icebp
push
pop
xor
dec
or
push
inc
enter
fcmovnu
jp
and
xlat
adc
fists
pop
or
dec
mov
add
mov
xchg
lret
lcall
js
dec
cmpsl
lret
imul
xchg
testb
pop
xchg
ret
aad
bound
ja
or
xchg
mov
sbb
or
bound
shlb
scas
daa
lods
cmpsb
sub
mov
jno
rorb
loopne
mov
mov
add
test
mov
mov
cmp
lcall
mov
cmp
xchg
cmp
xor
lcall
scas
xor
pop
stos
mov
jecxz
dec
hlt
xchg
aas
mov
inc
and
mov
pop
ret
xchg
sub
mov
push
fists
scas
push
jb
xor
or
mov
shl
mov
lods
mov
jb
stos
fdivrl
fbld
sub
loopne
fdivs
or
cmpsb
dec
cmp
pop
adc
idivb
sub
mov
sbb
cmp
mov
inc
mov
adc
pop
inc
jo
movsl
pop
movsb
dec
test
cmpsl
andl
sbb
orb
sbb
inc
aaa
add
push
add
xor
push
sbb
or
inc
sbb
mov
mov
push
in
mov
pop
mov
mov
xchg
add
and
fwait
movl
lcall
add
popa
loopne
inc
pusha
ret
jno
inc
cld
lock
lcall
sbb
inc
mov
ficoms
mov
lcall
loop
sbb
cs
xor
inc
int3
jo
arpl
dec
xor
addr16
mov
and
pop
xchg
imul
lret
or
roll
adc
gs
jb
lret
shl
mov
or
push
push
in
fwait
dec
in
add
jle
rorl
sub
sub
pop
jns
popa
push
cwtl
dec
inc
cmp
aad
andl
pop
es
mov
mov
cmp
stos
stos
mov
dec
inc
out
lods
cmp
jae
adc
outsb
insb
mov
xor
mov
jecxz
mov
enter
fldcw
into
pusha
xor
mov
mov
fdivrl
cmp
lea
dec
or
xchg
and
mov
loopw
push
enter
lcall
out
nop
pop
pushf
mov
add
inc
out
mov
negl
sbb
push
pop
es
pop
sub
add
fs
adcb
loopne
pop
or
add
sub
ljmp
leave
loopne
js,pn
sarb
cwtl
and
mov
sub
ljmp
add
std
cli
int
test
inc
xor
into
shll
pusha
sub
xchg
add
in
jmp
loope
mov
mov
mov
popf
es
and
and
inc
adcb
or
or
out
ss
loopne
xchg
adc
add
ja
push
inc
test
jb
inc
push
je
and
jns
jle
jg
add
inc
test
adc
fnstcw
or
inc
jbe
dec
dec
jp
ja
in
adc
adc
inc
shlb
data16
cmp
mov
mov
pop
sbb
inc
enter
cmpb
mov
mov
arpl
andb
cld
add
nop
repnz
ret
popa
add
imul
imul
popl
jge
cmp
jb
stos
pop
dec
sbb
jecxz
push
gs
stc
inc
jmp
xor
mov
adc
push
sti
adc
xor
push
adc
mov
nopl
scas
inc
mov
cwtl
lcall
pop
or
mov
add
rcrb
addl
jmp
fcmovnu
and
iret
das
leave
add
lods
cmc
rcrb
ss
std
pop
fucomip
fisubrs
cmp
in
roll
sbbl
add
and
inc
rcrl
imul
subl
push
mov
testb
ja
ret
repz
addl
outsb
insb
jge
inc
push
hlt
outsb
push
clc
or
cli
mov
jle
pop
outsb
dec
xchg
out
mov
push
aad
inc
or
mov
mov
xchg
dec
movsl
data16
fldcw
or
mov
jne
stc
inc
inc
or
or
bts
imulb
fistpll
arpl
hlt
cmpsl
mov
pop
and
roll
push
mov
insb
mov
out
xchg
add
in
sbb
push
sahf
push
xchg
outsl
dec
xor
sub
jnp
mov
sub
adc
mov
sub
sub
dec
dec
jle
jmp
loop
dec
dec
or
dec
pop
or
or
mov
outsl
sbb
mov
fs
roll
inc
push
adc
cmp
ja
iret
rclb
push
mov
add
mov
dec
int3
xchg
lds
sbb
aas
dec
or
shl
lahf
cmp
and
jp
xor
dec
out
out
dec
outsl
or
mov
fwait
add
add
jb
or
mov
or
dec
rol
mov
in
inc
adc
arpl
popl
mov
jo
sub
fs
movsb
mov
push
cwtl
aas
out
or
rorl
aas
cltd
ret
mov
iret
sub
xchg
dec
and
cmp
inc
aaa
pop
inc
sahf
je
jnp
push
xlat
jl
movsl
fmuls
and
addr16
nop
test
sbb
push
aad
inc
call
push
pop
dec
cmp
int3
adcb
pop
sub
sbb
add
or
lea
mov
pop
ret
lds
loope
outsl
push
dec
inc
ja
xchg
leave
and
and
cmp
jns
imull
adcb
xchg
mov
xlat
lods
emms
xchg
inc
adc
scas
and
xor
lret
fisttps
aaa
fisttpll
mov
popf
fs
pop
aam
push
cwtl
fdiv
pop
pop
cwtl
iret
loop
cmc
or
lea
dec
sbb
mov
pop
adc
or
jns
cmp
push
pop
dec
inc
and
xor
inc
push
adc
inc
loopne
sbb
jl
aaa
or
sti
push
movswl
push
push
iret
mov
aas
xchg
or
and
sbb
test
lea
mov
or
fbld
jne
sbb
sub
jge
inc
mov
adc
in
mov
clc
test
call
xor
outsl
push
sub
xchg
dec
xor
xchg
inc
in
add
cmp
jae
inc
push
add
pop
xor
out
dec
sti
and
dec
outsl
test
inc
lahf
ja
enter
mov
add
out
mov
lock
adc
xchg
jmp
out
fcompl
xchg
xchg
adc
divb
das
cmp
into
jge
jle
xchg
or
cmp
les
out
mov
lods
outsl
adc
push
sub
sar
inc
enter
add
rol
mov
adc
loopne
loopne
imul
pop
out
mov
insl
imull
and
enter
inc
mov
or
add
push
dec
adc
push
or
test
cmpsl
cli
jo
sbb
arpl
std
jecxz
push
mov
xchg
imull
inc
mov
out
adc
test
push
cmp
lods
in
lcall
popf
pop
sub
stc
loop
in
sarl
iret
sub
jbe
loopne
insb
test
dec
ljmp
mov
jecxz
sub
aam
xchg
push
inc
mov
sub
sub
and
cmpsl
pop
cld
cmc
xor
pop
gs
push
mov
pop
int3
inc
je
imul
repnz
add
out
jns
aam
xchg
sbb
int3
adc
movsl
add
mov
inc
fs
ljmp
mov
ret
mov
lock
mull
outsb
das
inc
sub
add
popf
inc
xchg
sbb
xlat
insl
pop
lods
pop
test
dec
xlat
add
sbb
or
jle
rcrl
subl
sub
mov
popa
add
cmpsb
jo
in
daa
testb
dec
leave
leave
or
addl
xchg
xchg
sub
in
sti
cwtl
test
aad
push
out
fwait
lock
das
adc
filds
int
fmuls
leave
jne
bound
add
lods
out
lds
shll
jmp
loopne
out
sahf
mov
adc
rcrb
jno
loop
aam
insb
popa
stos
mov
sbb
outsb
cvtpi2ps
std
adc
cmp
mov
outsl
add
push
dec
outsl
jb
pop
jae
aas
or
shlb
xor
iret
jo
andb
movb
fistl
mov
loop
and
data16
xchg
xchg
add
call
add
dec
push
inc
push
dec
enter
pop
iret
inc
cli
pop
test
fidivrl
divb
aad
scas
fwait
sbb
lds
pop
mov
js
repnz
jge
xorl
xchg
mov
jae
cmovbe
add
sub
and
cmp
imul
mov
sub
rsm
mov
push
mov
popa
xor
inc
dec
ja
push
sub
or
sub
xchg
aam
ss
fs
mov
incl
imul
pop
inc
cwtl
sub
je
jl
sbb
cld
push
sbb
or
xor
adc
mov
mov
xor
je
sbb
pop
push
imul
push
push
sub
aam
test
in
fdivl
lcall
fwait
lahf
roll
ret
scas
cwtl
mov
out
xchg
scas
mov
bound
xchg
sbb
repz
xchg
sbb
scas
test
mov
ficompl
push
or
pusha
mov
and
push
or
popa
cmc
sub
imull
and
cmp
int
lods
rclb
or
int3
xchg
sub
xor
sbb
popf
cmpl
mov
dec
es
xor
popa
adc
popa
inc
repnz
push
cmc
mov
jge
js
adc
jg
sub
dec
and
iret
pop
xchg
sbb
and
mov
add
add
jns
sub
mov
add
inc
pop
cmp
fsubl
lock
xor
push
jo
push
pushf
push
add
mov
xor
pusha
loop
add
inc
pop
mov
cltd
sub
sbb
call
sarl
push
jge
hlt
fidivs
bound
and
add
pusha
or
fidivl
sub
jge
xor
jne
stos
lds
or
fildl
lods
cs
or
movsb
jecxz
lret
and
mov
mov
mov
cmp
enter
fmuls
adc
xchg
sub
mov
int3
cmc
cli
push
orl
out
sti
xchg
std
mov
push
lea
repz
pop
testl
dec
dec
scas
cbtw
dec
nop
arpl
xor
scas
repz
xor
sbb
lret
add
xor
test
iret
popf
ljmp
mov
cmpsb
push
mov
mov
test
inc
adc
pop
jle
test
dec
jg
ss
fiadds
jne
sbb
fwait
rcl
rcrb
fstps
in
ret
dec
aaa
repz
inc
mov
lahf
pop
pop
adc
jae
dec
shrl
fcmovnb
jne
loopne
xchg
or
pop
mov
movsl
inc
mov
test
clc
sub
shr
gs
sub
mov
aas
dec
jg
sub
and
test
and
lret
mov
test
mov
cmp
inc
inc
scas
add
xor
ret
and
pop
or
stos
orb
les
push
arpl
mov
stos
divb
sub
xor
stos
pusha
inc
pop
cmp
notb
and
jo
das
add
cld
nop
lds
cli
mov
decl
inc
insb
xor
mov
stos
inc
xchg
shll
mov
shrb
xor
mov
add
mov
sub
add
xchg
sbb
add
mov
shll
mov
arpl
and
push
insb
mov
cmp
mov
bound
mov
xchg
movsb
push
dec
js
xchg
mov
mov
cmpsb
loope
inc
jo
cmp
nop
stc
push
or
lods
jecxz
shlb
mov
stc
int3
repz
xlat
push
mov
cmp
fistpll
sbb
test
dec
shl
pop
das
push
or
fdivrl
xor
adc
outsl
sahf
add
stos
adc
sbb
popf
xchg
push
cltd
in
dec
loop
je
lods
dec
dec
fsub
out
pusha
inc
cmp
out
int
sub
adcb
fadd
pop
push
test
outsb
mov
mov
in
out
adc
or
nop
data16
rolb
stc
cltd
xor
sub
push
dec
push
push
mov
nop
fstps
in
mov
lea
jnp
test
mov
push
or
cmp
pop
sbb
cltd
cmp
data16
cmp
decb
in
pop
popa
sub
xchg
pop
adc
pop
and
mov
loop
or
and
xchg
icebp
jns
mov
movsl
clc
dec
mov
adc
sub
wbinvd
cmc
or
xorl
stc
inc
push
xchg
negl
lcall
nopl
or
adc
je
xchg
pop
lock
rol
inc
ret
popf
and
mov
pop
jl
xor
xor
cmp
and
add
xor
xchg
fcomi
cld
mov
sub
testb
sub
xchg
inc
test
in
xchg
inc
xchg
lcall
and
mov
fnsave
into
jne
ret
xchg
fs
arpl
xchg
mov
sub
jg
rorl
cmpsb
push
insb
shlb
jl
insb
subl
mov
push
add
mov
or
jb
mov
mov
decl
dec
cli
scas
and
cmp
out
nop
jge
lahf
push
sbb
cmp
dec
sub
pop
pop
dec
xchg
or
movsb
stc
inc
push
es
inc
sub
popa
pop
nop
sti
jle
rcr
mov
ret
inc
jg
mov
jge,pt
imul
sar
dec
or
dec
or
adc
push
leave
mov
adc
adc
jb
dec
sarl
faddl
xor
fldcw
pop
sbb
add
aas
or
loopne
das
popa
jno
xor
or
push
jmp
and
scas
add
bound
push
lret
fidivl
push
je
into
fdivs
into
rcll
lods
ficoms
and
mov
or
adc
test
or
xor
xchg
mov
and
test
pop
pusha
push
cmp
mov
iret
jb,pn
addr16
loopne
ss
xchg
jp
ja
xor
dec
mov
rolb
popa
push
jnp
mov
ljmp
adc
out
iret
push
sbb
pop
push
or
lods
pop
js
jno
cmpsb
loope
mov
loope
xchg
inc
jnp
in
imul
sbb
add
mov
test
xchg
int3
adcb
loope
mov
pop
dec
cmpsb
mov
xor
adc
adc
leave
mov
adc
push
adc
lock
jmp
test
adc
ret
pushf
lods
push
loope
lods
nop
sub
decl
fcomi
add
xchg
daa
jl
mov
data16
in
dec
push
dec
sub
sbb
pop
mov
shr
das
mov
decl
jle
push
push
mov
inc
sbbl
in
mov
dec
mov
imul
sub
adc
push
sti
gs
vmwrite
sbb
test
add
orl
fldenv
dec
adc
pop
pop
mov
test
xor
xchg
cmp
out
sub
mov
mov
daa
mov
test
adc
pop
mov
in
jl
cmp
dec
or
imul
or
rclb
jo
inc
push
mov
std
int
nop
push
adc
inc
std
lret
in
cmp
mov
or
or
jnp
mov
add
sbb
push
out
or
cmp
jo
push
imul
paddusw
ret
das
pop
mov
sub
aaa
roll
int
daa
sub
jo
rorb
push
sbb
and
addl
and
sub
enter
and
and
out
cli
clc
and
and
out
xchg
xchg
lods
and
and
mov
mov
or
into
int3
sub
or
or
ss
or
or
cmp
cmp
or
or
xor
mov
or
or
or
or
test
or
pop
or
or
pop
push
or
or
adc
push
or
or
or
jbe
or
or
inc
js
jl
or
or
xchg
cs
push
inc
dec
test
into
test
inc
test
push
test
jb
test
mov
cli
test
mov
mov
test
fninit
push
adc
dec
enter
nop
adc
nop
nop
nop
nop
cli
lock
cld
nop
nop
nop
nop
repnz
xchg
mov
fcoms
fcoms
cmp
push
addr16
add
mov
hlt
add
and
cs
push
sub
pop
lds
loope
mov
dec
in
test
jp
test
test
lret
test
shrl
add
je
repz
xchg
lret
in
xchg
cmp
pop
adc
pop
movl
pop
pop
xor
lock
inc
inc
nop
sahf
xchg
jg
into
adc
sti
repz
pop
ret
pushf
xor
sub
incl
loope
mov
cwtl
popa
sbb
mov
inc
inc
inc
mov
cmp
inc
inc
push
pusha
and
loopne
inc
inc
inc
out
ljmp
dec
jbe
std
mov
in
dec
push
dec
cmpsl
mov
jno
fisttpl
imul
sbb
out
fsubp
lea
add
add
pop
sbb
mov
pop
stos
int3
mov
loope
pop
rclb
test
mov
mov
push
lea
add
or
call
test
add
icebp
adc
adc
cli
or
repz
adc
aaa
mov
lock
jmp
mov
ret
dec
mov
mov
xchg
scas
test
stos
arpl
cmp
pop
add
mov
sbb
lock
into
sbb
gs
and
xchg
adc
lcall
pop
jns
jbe
sbb
insb
cltd
inc
dec
or
pop
dec
and
sbb
push
jo
in
sbb
add
fcomp
fsubl
and
push
adc
add
and
and
hlt
repnz
lock
cli
cmpsb
xlat
mov
call
or
xchg
mov
mov
cltd
push
adc
pusha
add
cmpsl
sub
sahf
jne
mov
adc
mov
stc
pushf
mov
mov
out
sbb
mov
sub
mov
or
pusha
xlat
aad
xlat
movsb
addr16
sub
sub
addr16
xor
aad
outsl
jns
xor
push
call
mov
mov
xor
call
xor
call
lret
dec
sub
inc
dec
insb
adc
clc
adc
mov
sbb
inc
push
test
add
ljmp
sbb
adc
cltd
loopne
inc
and
loopne
loopne
rol
adc
pop
and
fcom
push
ret
cld
mov
aam
mov
adc
popa
sbb
out
enter
dec
jno
mov
push
jne
mov
dec
inc
shrl
scas
mov
imul
lret
push
loope
in
xchg
jp
jo
adc
xchg
xchg
pop
je
push
dec
jo
fsubrl
add
je
inc
pop
dec
push
mov
inc
dec
sub
cli
dec
mov
push
add
dec
adc
sub
pop
lahf
inc
jo
leave
jo
lods
xor
movsl
es
es
xchg
adc
add
adc
mov
sbb
xchg
aas
repnz
push
mov
pop
jg
push
adc
xor
popa
push
bound
frndint
jmp
inc
stos
sub
fwait
or
mov
jo
and
das
jo
inc
cs
push
dec
inc
xor
adc
ja
insb
cwtl
jg
xchg
xchg
insl
enter
xchg
loopne
xchg
insb
or
inc
inc
sbb
sahf
lods
add
mov
into
xchg
sbb
sbb
and
loop
cmp
fmuls
pop
xchg
mov
and
movb
dec
mov
or
insb
cltd
push
popa
daa
jge
lods
mov
inc
mov
repnz
inc
cmpl
mov
adc
xchg
push
or
jnp
dec
sbb
jg
cmpl
xor
sbb
push
sub
ljmp
fidivs
sub
lods
push
add
test
movb
es
lcall
push
pushf
cwtl
xor
fs
jmp
jg
scas
fadds
mov
xchg
jge
adc
pop
sbb
cs
les
and
lds
push
fisubl
mov
subl
sbb
and
sahf
idivb
sub
lds
xor
or
pop
mov
mov
and
push
cmp
lds
mov
cmp
adc
out
sahf
sub
adc
pop
gs
sbb
sbb
and
push
inc
adc
and
mov
outsb
sub
aam
aas
inc
or
cltd
mov
mov
int3
mov
sbb
jne
aam
jecxz
pop
mov
mov
pop
xor
orl
popl
lret
xchg
mov
push
jno
sbbl
rol
fstp
push
cwtl
insb
shll
ret
jns
in
fwait
andl
in
mov
aam
aad
cmp
pushf
les
jb
mov
mov
adc
inc
test
and
inc
or
xor
inc
sub
or
mov
cmp
sarb
sub
jne
fists
mov
push
jle
es
fiadds
pop
push
scas
jp
mul
sub
xchg
stos
call
aad
cmp
bound
jno
jo
outsb
mov
xchg
adc
aad
mov
mov
or
andb
mov
sub
es
sub
rorb
mul
repz
std
idiv
cmc
ljmp
adc
mov
stc
jmp
push
pop
lcall
sub
inc
pop
and
mov
mov
xor
pop
aas
mov
xor
cmp
clc
or
addr16
pop
pop
inc
dec
inc
inc
push
dec
jnp
pop
sub
push
push
imul
jbe
inc
jmp
or
cmp
or
addl
arpl
insb
add
subl
mov
sbb
cltd
push
stos
leave
fwait
ss
enter
nop
sbb
xor
call
ret
scas
xor
mov
and
push
sbb
into
or
push
daa
enter
lret
mov
inc
xchg
pop
inc
test
cli
inc
mov
push
data16
inc
mov
pushf
xchg
and
lods
ret
lahf
jmp
mov
or
lods
push
xchg
sub
int3
xchg
addr16
clc
mov
ret
and
in
sarl
xor
flds
out
out
ds
pop
in
sub
xchg
aad
mov
xchg
dec
add
or
jno
fnstsw
aaa
es
daa
mov
subb
inc
sub
loop
mov
lcall
mov
xchg
fdivrs
sahf
push
inc
test
and
pop
inc
mov
xchg
mov
dec
mov
pusha
pop
or
shlb
xor
adc
jmp
adc
js
dec
or
pop
je
insb
pushw
int3
lock
cmp
repnz
fbstp
cmc
popf
mov
adc
sbb
imul
cli
add
outsl
mov
ljmp
pushf
pop
jb
insb
jo
in
or
mov
orb
mov
xchg
leave
fbstp
cmpsl
or
add
adc
sub
jnp
lds
daa
rcll
es
imul
jno
and
xor
rol
pop
lahf
ret
mov
fisubrs
adc
pop
xor
scas
xchg
nop
xchg
and
popa
pop
cld
lahf
xchg
out
notl
movhps
sbb
cmc
push
mov
fcmovnu
call
mov
mov
scas
lcall
adc
push
js
cli
cmp
and
push
fcompl
ja
cs
cmp
inc
jae
xchg
test
shrb
nop
bound
mov
movsb
cmp
call
aad
xchg
fwait
int3
mov
cmc
scas
mov
adc
neg
mov
pop
push
mov
mov
lret
mov
aam
xchg
lret
sub
xchg
sub
add
out
push
cmp
lods
push
xor
das
sbb
cmp
daa
cmc
roll
cmp
ds
mov
mov
mov
mov
or
pop
das
push
negb
shl
cli
arpl
xor
popa
pop
pop
or
pop
jbe
adc
arpl
pop
fbstp
push
arpl
fnstsw
xor
pop
dec
cmp
xor
orb
xor
push
xor
cvttps2pi
in
popf
mov
leave
dec
cmp
bound
cmp
test
dec
repz
leave
movsl
int
mov
enter
add
mov
xchg
adc
xor
jno
jle
bound
icebp
cmp
push
and
jge
jle
xor
leave
xor
pop
testl
mov
push
lock
adc
mov
roll
jo
loopne
sbb
pop
and
hlt
ffreep
lahf
sbb
inc
repz
mov
lods
inc
leave
shr
pop
mov
pop
aad
sti
fsubrl
push
dec
and
xor
rcl
jno
ljmp
xchg
pop
adc
add
mov
arpl
lods
dec
xor
adcb
xchg
lea
sahf
test
mov
cmp
xchg
outsb
test
insl
outsl
lods
filds
jge
test
sub
push
fwait
jns
scas
mov
sbb
and
xchg
stos
add
pusha
dec
add
sbb
xor
fs
in
lea
xor
shlb
jle
inc
jns
les
mov
or
mov
and
rcll
push
sahf
sub
mov
pop
sbb
adcl
jbe
xchg
jb
jne
jecxz
iret
or
clc
int
jo
add
and
sub
mov
cmp
cmp
jnp
jae
jae
sub
insb
xor
sbb
lds
add
arpl
imul
insb
outsl
inc
jne
les
test
xor
cs
xor
xchg
addr16
mov
rcll
test
lret
out
add
mov
mov
out
cmpb
test
mov
add
dec
cmpb
xchg
cmpl
mov
aaa
add
addl
int3
test
outsb
cmp
jbe
outsb
arpl
jne
add
shlb
dec
fs
outsl
jp
pusha
dec
gs
insl
push
push
push
pop
dec
push
push
jae
addb
les
push
inc
das
dec
ja
je
orb
dec
pop
jne
inc
aaa
cmp
cmp
aas
xor
sbb
insb
fildl
push
add
and
and
xor
mov
aaa
xor
add
add
ror
push
jp
push
pop
add
sbb
movsb
add
repnz
lldt
mov
icebp
fst
jmp
out
lret
lock
rorl
dec
mov
pop
xlat
or
es
shlb
out
ret
ficompl
add
fcoms
movsb
xchg
mov
roll
mov
test
bound
sti
xchg
popl
or
xchg
mov
mov
movsl
out
scas
add
sbbb
pop
pop
xchg
jb
imul
inc
jb
fidivrl
pusha
add
imul
jg
inc
pop
adcb
arpl
pop
inc
xor
je
andl
stos
inc
push
dec
inc
popa
jb
in
mov
inc
inc
pop
push
pusha
dec
jp
sbb
fiaddl
sub
sub
mov
push
and
sbb
sub
jbe
cmp
mov
cmp
movsl
pop
adc
jl
sub
add
add
sbb
nopl
ljmp
loope
fucomi
rcl
call
movl
sti
fildl
roll
mov
imul
ficoml
add
mov
cmpsl
fxch
lret
inc
ror
lahf
sahf
lahf
cmpsl
mov
test
notl
push
jno
add
mov
mov
dec
pushf
and
cltd
mov
gs
mov
inc
fucomp
pushf
stos
nop
xchg
cmpsb
insl
push
inc
iret
mov
test
xlat
pop
inc
jb
mov
loopne
pop
aam
pop
inc
jbe
xor
arpl
repz
imul
sub
inc
ret
mov
imul
dec
push
insb
push
loop
jns
cmpsb
push
popf
sub
das
das
daa
xor
out
xor
pop
add
add
and
test
sub
push
cwtl
es
cmp
dec
sub
das
jns,pt
insl
cmp
int
add
sbb
sbb
loopne
sbb
push
aam
mov
rclb
rcrl
mov
iret
pop
int
mov
imul
xchg
movsl
test
mov
and
pop
push
movsb
scas
mov
and
and
xchg
mov
leave
xchg
mov
andb
add
adcb
test
or
pop
or
cmp
fildl
fisubrl
and
pusha
pop
cmp
pop
jmp
jne
bt
push
adc
inc
js
mov
mov
pop
test
sbb
add
sub
std
and
test
push
lret
push
or
sub
xor
xor
mov
cmp
jge
inc
pshufw
sbb
daa
sbb
cmpsl
cmp
dec
icebp
sti
push
out
mov
xchg
lock
jecxz
push
mov
push
push
pop
jp
push
dec
cmp
jo
adc
and
shll
aaa
cmp
roll
xor
jb
cwtl
pop
adc
sbb
xchg
xchg
and
and
jne
gs
add
sbbb
sbb
insb
int3
mov
les
cmp
movsb
or
hlt
and
sbb
or
pop
add
add
or
sub
sub
and
and
add
adc
add
or
jp
add
addr16
pusha
adc
add
jo
cmpsl
xor
js
lods
inc
push
add
jmp
jg
add
shll
add
pop
icebp
cwtl
lods
or
sarb
addb
push
add
lods
lods
je
mov
sbb
lea
or
mov
pop
mov
fimull
add
f2xm1
fsubrl
sarb
inc
xor
popf
popa
add
mov
test
clc
int
and
xchg
lcall
add
lods
lods
stc
scas
ret
adc
sub
mov
insl
xlat
cmp
or
inc
xchg
or
ljmp
data16
mov
mov
push
daa
pop
add
add
push
imul
mov
aam
mov
sub
pop
push
fisttpll
push
xchg
push
inc
sbb
jecxz
lds
movb
stos
add
pop
jno
aad
imul
push
push
cmp
insl
sbb
sbb
ret
mov
cli
push
adc
or
push
push
xor
add
adc
add
pop
sub
scas
int
call
push
fcmovbe
pop
jp
mov
xlat
aad
iret
int
sub
inc
int
add
add
inc
test
int3
enter
fwait
iret
scas
cmp
mov
push
dec
mov
sbb
mov
xchg
rclb
inc
xchg
scas
inc
dec
jne
js
push
int
nop
pop
push
adcb
push
sub
xchg
mov
das
sub
pop
fs
jo
jp
inc
pop
add
push
xchg
pop
push
mov
popa
jge
push
lret
mov
outsb
fisubrs
xor
cmpsl
xlat
jo
insb
inc
movsb
aam
sub
fimull
cmpsb
daa
cld
adc
in
inc
dec
pop
in
or
inc
je
push
sub
jne
ja
adc
lcall
lcall
nop
mov
xchg
mov
test
call
pop
roll
stos
mov
stos
shll
call
push
or
add
add
dec
ret
or
dec
outsb
out
nop
in
jbe
add
js
rorb
test
inc
fwait
xchg
imul
enter
movsl
cmpsb
or
test
sbb
add
pop
push
jnp
popa
fsubrl
mov
add
aaa
xchg
cmpsl
inc
mov
inc
or
jnp
aam
repnz
pop
and
cmp
mov
and
rcrl
and
inc
xchg
int3
pop
cmp
mov
hlt
push
push
lock
add
andl
adc
add
add
add
dec
xor
add
add
sbb
add
pop
popf
mov
add
add
les
lea
add
push
mov
add
push
push
push
mov
call
push
call
inc
push
push
dec
push
and
inc
outsl
jb
jne
je
inc
popa
je
and
mov
push
pushl
mov
pushfw
pusha
push
mov
add
push
push
call
mov
push
mov
mov
add
lea
mov
push
mov
mov
push
push
push
push
push
push
push
push
push
push
call
sub
pop
rep
pop
add
add
rep
call
pop
lea
mov
add
mov
test
je
mov
lea
mov
mov
mov
mov
push
rep
mov
mov
add
jmp
pop
pop
pop
pop
pop
je
jmp
add
jne
mov
sub
adc
ret
inc
call
adc
call
jb
ret
cmp
jae
push
push
push
jmp
push
push
push
push
xor
xor
movsb
xor
dec
jle
call
jae
xor
call
sub
jae
mov
inc
jmp
mov
mov
call
adc
loop
xor
cmp
adc
cmp
adc
mov
call
adc
call
adc
jne
call
add
add
push
sub
lea
rep
pop
jmp
nop
addr16
add
add
add
add
sbb
add
fiadds
add
add
add
lcall
add
add
add
sbb
add
add
add
add
call
adc
add
adc
add
add
add
add
or
add
pop
adc
add
and
add
cs
add
cmp
add
inc
adc
add
dec
adc
add
pop
adc
add
adc
nop
adc
add
add
cwtl
adc
add
add
mov
add
add
adc
add
adc
add
adc
add
add
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
add
add
add
add
inc
adc
add
add
add
add
add
add
add
addb
add
fs
add
add
add
add
addb
add
je
add
add
add
nop
adc
add
add
add
add
add
add
add
add
adc
add
add
add
adc
add
add
add
add
imul
jae
add
dec
outsl
popa
fs
imul
add
add
inc
gs
jb
arpl
fs
jae
add
add
push
imul
jb
je
arpl
add
inc
insb
outsl
bound
inc
insb
insb
outsl
arpl
add
inc
insb
outsl
bound
inc
jb
add
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
add
dec
gs
popa
addr16
outsl
js
add
add
jo
imul
add
je
insb
je
add
add
addr16
jo
outsb
dec
gs
add
add
dec
outsb
imul
add
add
dec
outsb
je
jb
gs
jo
outsb
inc
add
add
je
jb
arpl
jae
insl
popa
addr16
imul
add
add
push
popa
je
inc
imul
jae
add
add
jae
add
inc
imul
add
add
je
fs
jo
gs
dec
outsb
outsw
add
add
imul
add
add
push
dec
inc
gs
outsl
insb
fs
popa
je
inc
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
inc
push
xor
cs
insb
add
dec
xor
cs
insb
add
push
inc
push
dec
xor
cs
insb
add
xor
cs
insb
add
inc
inc
push
push
xor
cs
insb
add
dec
dec
dec
inc
push
cs
insb
add
xor
xor
fs
insb
add
inc
push
dec
cs
dec
dec
add
dec
push
inc
push
dec
cs
insb
add
push
inc
push
push
cs
insb
add
imul
insb
insb
add
push
imul
push
push
inc
push
push
xor
fs
insb
add
inc
dec
dec
xor
cs
insb
add
add
add
add
jg
dec
add
add
adc
add
add
add
add
add
add
add
rclb
add
adc
add
out
add
dec
push
add
ficoms
add
pop
push
add
add
add
add
aas
inc
gs
push
inc
push
je
insb
imul
pop
pop
add
dec
inc
inc
dec
dec
inc
push
inc
push
pop
pop
inc
push
dec
dec
pop
add
jne
inc
jae
xor
je
insb
bound
fs
insb
