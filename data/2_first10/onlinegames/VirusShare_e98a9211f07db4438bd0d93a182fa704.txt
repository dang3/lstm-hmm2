lcall
or
outsb
gs
xor
cs
insb
push
jle
jae
or
sbb
sti
lcall
push
gs
bound
push
jb
jbe
insb
gs
jns
je
out
fidivs
and
pushw
outsl
imul
sti
out
adc
bound
xor
cs
and
jl
imull
gs
jo
insl
fs
out
outsl
arpl
bound
cmp
xor
push
mov
sub
in
sti
sub
call
movb
in
fs
mov
out
popa
lock
imul
jbe
xor
hlt
cs
imulb
xchg
fmuls
gs
fldt
push
mov
fnsave
outsl
fbld
mov
ss
jae
loop
push
pop
in
imul
outsb
pusha
pushf
popf
inc
inc
nop
inc
popa
nop
lea
add
push
daa
jnp
std
call
push
je
mov
and
jne
sti
pop
mov
add
call
pop
pop
pop
leave
ret
mov
ss
xlat
mov
mov
std
mov
inc
dec
les
rorb
xchg
les
lcall
xlat
enter
lret
scas
jmp
int
into
push
pop
xlat
rorb
rcl
shl
rcl
inc
cmpsb
jmp
cmp
jo
jae
lcall
push
jb
arpl
cltd
cmpsb
imul
xor
daa
ljmp
dec
shll
hlt
cmc
mov
shll
idiv
stc
dec
pop
cli
aas
ret
sti
js
je
mov
call
mov
pop
adc
mov
mov
mulb
cmp
je
pop
decl
push
push
call
mov
jmp
mov
cmp
add
shr
lea
sbb
or
add
orl
mov
test
je
sbb
jge
imul
jne
lea
add
fildll
incl
pop
inc
cmp
test
fs
mov
xchg
sbb
and
jne
incl
cld
push
push
push
call
les
jp
fstps
and
xor
pop
xlat
es
add
inc
mov
lods
jo
mov
adc
lea
add
fnstcw
add
cmp
add
fsubl
clc
mov
stos
pop
sub
mov
mov
and
or
or
jmp
mov
es
sbb
adc
sbb
sbb
xchg
jne
mov
jmp
push
movsl
add
inc
sub
cmp
imul
test
mov
sbb
push
dec
and
jnp
aaa
gs
add
adc
fbld
xchg
andl
pop
fimuls
pop
hlt
cmp
jp
add
hlt
mov
enter
inc
lock
jno
jo
daa
dec
inc
hlt
add
xor
push
jmp
push
sbb
decl
mov
cmp
subb
xchg
int
stos
jo
inc
sub
dec
jb
xor
or
cmpl
leave
fimull
cmp
or
mov
pop
mov
call
dec
pop
xchg
mov
or
fstpt
int3
add
cld
push
cmp
call
jbe
in
pop
call
leave
cmp
cmp
push
mov
or
or
add
aas
imul
push
sbb
data16
and
in
sub
fdivrs
pop
xor
pop
rcpps
add
add
mov
sub
sub
add
addl
fiadds
push
jae
mov
cmpl
jne
push
mov
es
mov
add
fcoms
imul
pusha
int3
fmull
or
lcall
push
shl
out
popf
mov
nop
js
clc
popf
gs
xchg
sbb
push
sub
add
in
ljmp
push
pop
mov
pop
outsb
jg
cmp
pop
or
inc
inc
push
pop
lcall
outsb
call
sub
movsl
push
add
je
popa
int
sub
add
add
sub
sub
sub
popw
insb
int
popf
or
jne
insb
inc
or
cmp
clc
mov
ficoml
fsubl
xor
mov
sahf
lods
mov
add
push
int
in
pushf
pop
xlat
dec
or
imul
loope
aam
jb
xchg
data16
arpl
addr16
dec
aaa
fcomp
data16
sub
daa
dec
mov
sbb
cs
das
movq
fbld
mov
stos
stos
xor
cld
adc
iret
insl
imul
pop
adc
sub
xchg
rolb
mov
dec
jne
outsb
shll
int
jmp
insb
mov
xor
mov
std
xchg
flds
gs
or
jg
std
idivb
jo
sar
add
pop
jb
in
std
dec
add
push
mov
stos
call
clc
shll
sbb
push
dec
mov
mov
cli
or
fcoms
pusha
repz
sbb
pushf
insb
and
arpl
mov
rcrl
push
ss
adc
aaa
aad
lods
jns
popa
adc
mov
cmp
insl
jbe
sbb
pop
mov
lcall
das
ror
sbb
xor
jbe
add
stc
cld
push
out
dec
mov
arpl
cwtl
in
in
xor
mov
sti
lea
xchg
out
fistpll
sar
aaa
mov
xor
push
cs
in
daa
cmp
leave
shll
gs
shll
jb
aaa
mov
testl
idivb
mov
inc
imul
dec
js
aad
jge
pushf
xor
and
negb
xchg
adc
or
in
pop
fdivl
clc
pusha
pop
sbb
mov
adc
shrl
push
cmp
or
imul
sub
in
sub
enter
mov
or
loope
or
add
xchg
loopne
mov
dec
sbb
sar
fadds
dec
cs
dec
dec
add
lret
mov
add
add
nop
add
add
sub
jbe
mov
mov
pop
mov
int
mov
decl
push
addr16
insl
and
outsb
outsb
outsl
je
bound
sar
sti
jb
outsb
and
inc
dec
push
and
fs
fdivr
popa
decl
jo
lds
fcoms
xchg
dec
pop
movsl
push
fdivrl
das
push
lret
xchg
dec
pop
fsts
xchg
dec
xchg
push
imul
mov
xchg
inc
dec
add
pop
inc
adc
loopne
lods
jnp
mulb
or
push
or
in
aad
pop
adc
jbe
mov
sbb
add
in
int3
sub
adc
sub
in
or
xor
and
inc
add
ds
insb
push
and
fsubrs
bound
mov
inc
adc
sbbb
out
popa
je
push
jl
fists
mov
loopne
jb
insb
outsl
arpl
sbb
dec
dec
sbb
imul
mov
fwait
cmpsb
ret
xor
test
add
aam
repnz
shll
bound
shll
enter
shll
ljmp
mov
mov
jp
pop
push
xlat
xor
roll
push
push
push
das
xor
imulb
mov
or
sub
ss
shll
push
dec
xor
lahf
cmp
add
jg
pop
and
arpl
jg
scas
loopne
outsl
outsb
mov
aaa
fwait
mov
push
or
pop
insl
xchg
add
pop
jb
push
xor
mov
pop
adc
add
jae
sub
lea
cmp
lahf
pushf
and
push
movsb
lahf
or
in
in
imul
dec
pop
add
adcb
cmpl
je
pusha
fildl
sahf
test
sbb
or
dec
push
mov
sbb
test
cmp
adcl
or
dec
js
out
fs
or
dec
xchg
push
push
lock
cmpsl
and
add
pop
decb
and
adcl
cmpsl
add
in
add
add
jl
stc
shll
and
adc
inc
jle
inc
and
adc
sarl
add
mov
and
adc
add
rorb
jns
and
adc
lea
pop
sbb
or
adc
mov
data16
imul
pop
or
es
pop
or
cld
fld
pop
inc
test
pop
stos
popa
mov
cmp
adc
stos
or
add
fwait
push
inc
and
adc
bound
pop
jl
mov
mov
mov
sbb
iret
testl
es
and
je
hlt
fcoms
cmp
xchg
pop
call
sbb
or
je
or
mov
push
fistpl
xchg
or
int
add
xchg
inc
or
xor
cmp
pushf
stos
xor
mov
adc
xor
nop
fs
or
mov
clc
lods
fmull
call
call
mov
adc
adc
ds
fmuls
das
lret
in
test
test
pop
mov
push
push
sub
sbb
mov
fs
add
cmp
jl
sti
adc
call
idiv
nop
pop
pop
sbb
add
xchg
icebp
idiv
mov
sbb
icebp
addr16
dec
idiv
adc
pushf
pop
dec
jne
add
adc
sub
call
push
mov
js
into
test
rorl
xlat
xchg
fdivr
pusha
ja
add
sbb
mov
lcall
push
leave
shl
shlb
loopne
mov
fucomi
mov
push
add
in
jae
adc
and
xchg
fs
adc
push
sbb
call
sahf
sarl
jne
push
scas
pop
or
adc
ljmp
and
test
sti
cmp
je
xor
imul
or
jbe,pt
or
jmp
cmp
outsb
adc
add
arpl
lahf
aam
or
jp
outsl
mov
fxch
cmp
sub
je
xor
sub
enter
sti
mov
jbe
adc
adc
push
and
or
dec
xor
xchg
out
xor
jmp
pop
int
call
and
stos
mov
loope
pop
sbb
rorb
lds
jne
cmp
aaa
scas
fistl
popa
ds
cmpsb
adc
add
out
in
or
hlt
or
push
loope
push
mov
nop
sbb
fdivr
pushf
adc
popa
mov
insb
cwtl
aad
popa
or
mov
inc
adc
pop
imul
push
mov
or
mov
push
icebp
xor
push
scas
ret
jo
data16
fbstp
pop
leave
ret
push
cmpb
in
push
mov
pop
sub
pop
lock
mov
dec
xchg
flds
jb
xchg
gs
gs
gs
mov
mov
into
ja
push
imul
push
pusha
loopew
jecxz
jecxz
mov
adc
mov
inc
stos
push
push
or
and
jne
inc
call
add
sti
or
das
push
and
gs
lret
xchg
add
push
push
clc
cmp
or
push
jmp
sub
add
mov
cmp
or
mov
adc
jmp
inc
jne
call
dec
test
movsl
mov
add
mov
push
pop
js
jns
dec
lock
or
xlat
mov
cmpw
jne
jnp
pop
cld
dec
cmp
cmp
out
xor
rcrb
mov
mov
mov
mov
cmp
jl
je
inc
cmp
sub
cmpb
outsl
mov
cmc
js
xchg
jge
jo
xchg
cmpl
jb
sbbl
dec
leave
je
add
push
stos
leave
mov
outsb
jmp
mov
test
je
add
mov
add
cld
insl
fisttpl
push
inc
dec
sbb
mov
mov
adc
test
das
xorb
dec
or
roll
sub
movsb
decb
sub
pushl
inc
cs
adc
jne
mov
imul
mov
sub
mov
lods
inc
cmpl
int3
fstpl
mov
jle
loop
add
andl
or
jmp
jle
movzwl
mov
jne
daa
add
ljmp
xorl
sti
mov
adc
add
mov
add
data16
lock
jne
or
sub
fistpl
jne
inc
adc
xlat
jbe
clc
ss
or
add
lock
add
cmp
jmp
inc
jl
add
jmp
lods
dec
orb
mov
shrb
arpl
repz
jbe
jnp
pop
fdivl
push
adc
dec
adc
push
push
cli
pop
outsb
outsb
inc
adc
iret
aaa
cld
ret
inc
xor
je
and
mov
pushl
pop
clc
ja
add
push
scas
clc
add
jbe
add
ret
or
sub
sbb
loope
or
mov
popa
icebp
push
mov
sub
or
mov
xor
mov
jle
sbb
pop
lods
push
mov
pop
adc
sbb
jne
fwait
xor
ss
movsl
push
arpl
testb
les
in
fmuls
push
inc
nop
lock
in
push
push
out
test
sub
cltd
xor
and
push
call
mov
dec
mov
mov
dec
std
cmp
mov
xchg
inc
cmp
testb
je
cs
es
inc
sub
js
sub
decb
jmp
mov
xor
sti
gs
ret
mov
call
mov
enter
cmpsw
bound
push
adc
mov
hlt
hlt
call
mov
lcall
add
sarl
nop
sbb
lds
call
mov
push
in
fisttpl
sub
mov
lret
gs
insb
outsl
jb
lret
mov
gs
gs
lds
gs
push
das
or
jl
push
push
jge
pushf
icebp
popa
or
call
adcl
cmc
stc
mov
andl
add
lret
push
scas
sbb
outsl
add
or
jne
into
and
push
out
movups
jne
mov
hlt
add
and
xchg
mov
std
inc
jmp
adc
mov
add
xchg
int
sbb
enter
xchg
loop
inc
xor
sbb
hlt
adc
sbb
add
test
nop
shlb
outsl
sbb
inc
or
mov
filds
inc
fs
cmpsl
push
add
fs
imul
loop
mov
and
outsl
fs
gs
push
dec
popa
ja
insl
gs
jae
dec
popa
outsb
adc
arpl
out
mov
sbb
push
sbb
je
lock
jbe
cwtl
add
xor
dec
gs
add
add
dec
mov
js
insl
jo
sbb
mov
push
push
jb
push
outsl
outsl
insb
cmpsb
not
std
push
outsb
popa
jo
push
inc
jne
and
mov
fsubrs
scas
mov
push
cs
mov
add
lcall
rorb
pusha
xchg
std
outsl
mov
or
inc
dec
gs
js
nop
add
imul
and
push
arpl
mov
insl
outsl
xchg
push
xchg
insl
lods
sub
orb
cmp
addb
fidivrs
mov
int3
insb
outsb
xchg
dec
jo
negl
push
xchg
outsl
ja
inc
xor
push
and
mov
sti
mov
inc
jno
dec
pcmpeqb
data16
mov
sti
push
loopne
adc
das
push
push
sti
dec
clc
push
les
gs
movb
push
clc
inc
fldlg2
pusha
pop
bound
popa
fistl
push
or
sub
push
dec
inc
dec
lods
mov
movsb
xor
sbb
imul
pop
pop
add
xchg
loop
mov
xchg
imul
es
add
jne
push
mov
lods
fistl
mov
arpl
dec
pop
mov
xchg
popf
inc
dec
outsb
or
insl
mov
dec
mov
push
or
sub
arpl
fdivs
pop
arpl
jo
inc
popa
arpl
lods
fisttpll
imul
sub
inc
inc
push
jp
mov
inc
ja
sbb
or
and
push
es
popa
mov
add
in
fimuls
ret
add
insb
ja
add
insl
sbb
cltd
or
inc
mov
push
adc
pop
cmp
dec
cltd
inc
push
push
gs
adc
in
and
loopne
filds
sub
mov
pushl
sbb
inc
xor
popf
xor
xor
xor
xor
xor
jmp
xor
xor
xor
xor
xor
xor
xor
xor
je
mov
call
xor
pop
ss
xorl
out
ss
ss
aaa
jnp
mov
mov
aaa
cmc
jmp
aaa
or
and
cmp
bound
test
pushf
cmp
cmp
cmp
push
cmp
ljmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
std
cmp
cmp
dec
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
pop
cmp
pop
cmp
mov
push
ds
es
ds
imul
push
aas
or
aas
cmpl
xchg
mov
cmc
aas
loop
jno
xor
xor
xor
xor
pop
xor
push
xor
test
dec
add
std
scas
dec
push
clc
mov
cmpsl
iret
repnz
pushf
fdivrl
add
sub
pushf
repz
sbb
cmp
int
jno
pushf
lock
cmp
pushf
cli
das
enter
fsubs
xchg
pushf
cmc
daa
ret
pop
int
mull
in
mov
or
arpl
daa
add
lods
inc
addb
out
mov
in
sbbb
ja
nop
sub
xchg
mov
subb
push
daa
dec
add
in
call
mov
mov
jnp
out
sbb
enter
ja
pop
push
test
lods
imul
jb
imul
xor
sbb
rolb
mov
dec
in
or
rol
xor
shrl
jb
nop
mov
lods
mov
imul
cmpsb
imul
xchg
mov
imul
mov
sub
pop
dec
shll
mov
xor
fsubr
cld
or
dec
xlat
scas
sbb
add
xor
rol
mov
mov
insb
xlat
xor
push
ja
mov
xor
out
add
sahf
les
stos
mov
in
fldcw
inc
or
sbb
lcall
push
cmpsb
imul
imul
cmpsb
imul
ret
shll
xor
je
je
inc
dec
fwait
push
int3
or
dec
shll
cmp
push
sub
inc
cmpsb
jmp
mov
into
push
add
lcall
xor
add
mov
je
mov
cmp
inc
push
push
adc
mov
or
aaa
testl
mov
mov
cmpl
sbb
mov
cmp
adc
mov
add
add
dec
fcmovnu
mov
adc
orl
mov
and
jne
test
decl
cmpsl
and
push
pop
add
sbb
insb
xor
dec
aaa
js
push
adcb
xor
or
mov
nop
or
int
add
or
jae
insl
imul
xor
jne
mov
or
arpl
das
inc
add
push
add
out
xchg
fs
push
lock
inc
inc
icebp
jge
adc
dec
outsb
je
je
xchg
insb
sbb
int
mov
and
je
jo
jne
jns
fmull
lods
inc
aaa
call
insb
adc
ffreep
adc
push
dec
dec
add
mov
dec
sbb
add
mov
test
push
data16
bound
sub
dec
inc
push
push
inc
push
inc
pop
dec
cmp
lock
movsl
and
pop
mov
push
outsb
jae
sbb
addr16
das
push
inc
leave
nop
mov
or
gs
pop
or
mov
fstps
sbb
mov
imul
mov
pop
push
or
fiadds
add
movsl
adc
add
and
xchg
or
sbb
and
inc
or
xchg
add
pop
mov
ret
shlb
ja
aas
and
aas
add
pop
rcr
or
test
and
mov
jbe
push
sbb
and
push
xor
insb
test
pop
mov
fistpl
lret
pop
add
sbb
or
jp
mov
dec
add
push
dec
push
and
fbstp
mov
pop
dec
push
push
push
out
mov
cmp
pop
outsl
int3
add
jnp
addr16
adc
sub
jp
sbb
dec
outsl
jp
insb
popa
das
xor
xor
inc
std
cmp
mov
outsl
fs
and
jo
and
data16
mov
and
jne
rorb
lods
inc
and
icebp
sbb
in
mov
sbb
imul
bound
je
adc
or
je
sbb
insb
sub
roll
insl
jae
xor
sbb
sub
jo
fiaddl
mov
fstpl
sub
sub
fstl
push
sti
hlt
push
dec
push
push
adc
push
add
add
insl
dec
fdiv
push
jns
cmp
ja
pusha
stos
out
sub
setge
adc
xor
fsubrp
jnp
inc
pop
adc
xor
or
xor
add
fs
imul
pcmpeqw
shll
inc
jne
punpcklwd
pop
inc
or
push
pop
ja
cmpsl
in
jne
jb
aas
push
inc
jb
ret
mov
dec
pop
ja
or
push
lret
test
inc
add
adc
and
push
pop
mov
aas
aas
je
add
dec
pop
pop
cs
add
cmp
test
push
ret
mov
lret
lret
jne
mov
dec
and
loope
outsb
sahf
imul
jl
push
xchg
xor
push
addl
add
fbld
insl
insb
push
stc
adc
in
mov
movsl
push
imull
pop
aas
jne
les
mov
nop
add
push
cmpsl
and
jge
jnp
es
add
inc
arpl
dec
imul
cmp
data16
xor
add
xor
xor
xor
cmp
xor
dec
mov
in
str
add
cs
pop
mov
pop
jb
leave
jge
dec
sahf
cmovle
xchg
pop
sti
mov
mov
pop
sbb
dec
cli
xchg
out
jg
or
xor
add
stc
decl
in
and
pushf
xchg
push
call
xchg
sub
test
push
push
cmp
jne
lods
data16
mov
xchg
dec
add
insb
in
frstor
inc
adc
ss
leave
repnz
add
adc
sbb
xor
je
mov
and
add
fwait
add
call
adc
adc
cmpsb
jo
mov
sbb
cmp
and
idivb
sub
call
pop
je
mov
call
mov
jmp
mov
push
loopne
ja
xor
mov
fists
hlt
call
or
add
xor
xchg
push
cmpsl
frstor
sbb
pop
xchg
leave
cmc
call
rorb
pop
les
jne
push
push
shlb
adcl
shrb
fsubs
jbe
cmpl
pop
sbbl
cmp
pop
push
inc
fidivrs
cwtl
adc
mov
aaa
iret
and
mov
mov
movsb
sbb
mov
mov
mov
lahf
cmp
mov
and
lahf
cmp
add
mov
pushf
mov
das
mov
pop
shr
jo
mov
sti
cpuid
cmpsl
add
or
and
lds
cmp
aaa
add
add
jbe
xchg
lahf
pushf
or
fcoml
adc
mov
adc
lock
or
add
cmp
iret
gs
mov
adc
xor
lahf
test
push
cltd
in
flds
cmp
jae
pop
sub
mov
push
pop
adc
cld
mov
sahf
in
adc
and
mov
daa
lock
sub
sbb
xor
add
ds
sbb
cmp
sbb
pop
int3
popa
jmp
clc
cmpl
cs
aaa
mov
or
or
js
in
mov
fdivl
mov
add
jmp
movsl
sub
loopne
cmp
pop
rcll
or
loope
cmp
and
movl
fmuls
pop
ret
pop
push
xchg
lock
int
addb
sbb
cmp
inc
xchg
lock
xlat
mov
push
rorl
orl
mov
or
mov
mov
lock
test
je
add
push
push
push
jl
mov
jge
jp
adc
fcoml
push
les
mov
mov
push
sbb
daa
imul
outsb
push
mov
shll
xor
push
mov
adcl
and
sub
jne
and
inc
cmc
xor
mov
jae
das
testb
fstl
or
cmp
push
lret
and
add
add
sbb
push
xchg
add
dec
inc
cs
fsubs
adcb
cltd
call
push
push
xor
int3
and
dec
add
adc
cwtl
pop
and
xor
dec
push
push
ret
aaa
ret
mov
xchg
data16
ret
cwtl
mov
add
sbb
flds
push
rcrl
mov
std
push
in
push
and
mov
int
repnz
push
jne
cmp
jne,pt
mov
in
adc
mov
cmp
and
sbb
adc
scas
addb
jns
lock
clc
dec
lods
adc
lds
nop
xor
sbb
outsl
loopne
sbb
push
push
call
mov
push
lods
or
push
push
push
cmp
shrl
add
outsl
or
data16
imul
push
and
push
adc
fsubs
jecxz
jle
iret
int3
mov
mov
xlat
sub
call
or
sbb
mov
or
or
add
sbb
sbb
sbb
inc
add
jb
pushf
mov
sub
nop
shrl
sub
adc
jo
adc
mov
adc
inc
pop
mulb
lock
jge
push
stos
stos
inc
xchg
mov
pop
stos
pop
mov
sub
mov
setns
call
lods
cmp
inc
or
jge
sub
loop
cmp
je
rcrl
adc
addr16
cmp
add
dec
leave
sahf
sbb
cld
repnz
in
inc
jl
add
jg
mov
cmp
jl
cmp
inc
inc
pop
mov
jl
jns
test
cmp
lea
popf
xchg
ja
rcll
mov
pop
and
add
push
mov
mov
mov
xchg
addr16
adc
out
sbb
mov
popf
mov
xor
push
inc
and
or
mov
flds
daa
sbb
rorl
arpl
stos
cmc
iret
hlt
and
jmp
and
clc
ds
les
adc
adcb
and
test
push
pop
outsl
add
aaa
les
sti
xchg
pop
push
push
jnp
pop
pop
jge
nopl
jl
pop
jno
insb
das
std
andb
lea
sub
test
adcl
mov
xchg
jge
out
jp
jae
imul
mov
adc
in
icebp
in
fstpt
pop
daa
push
sub
subb
pop
dec
outsb
inc
sbb
fs
inc
bndstx
lret
sti
imul
cmp
insl
mov
jbe
dec
add
sbb
xor
aad
adc
or
lock
mov
xchg
push
gs
jne
dec
rorl
insb
push
outsl
imul
jno
jb
dec
aaa
and
lret
cld
push
pop
or
popa
fs
insb
pusha
xchg
add
push
sbb
xchg
xchg
mov
push
bound
inc
imul
jae
je
cmp
xor
bound
int3
xchg
sbb
or
jb
or
add
xchg
dec
add
pop
dec
aaa
push
in
adc
push
out
mov
mov
mov
ror
mov
inc
inc
dec
dec
test
jne
push
or
add
pop
jmp
xchg
xor
lret
stos
pop
andb
jmp
push
jmp
aaa
stos
sbb
je
inc
popf
shll
push
adc
pop
adc
add
and
jge
dec
je
xchg
gs
or
adc
clc
outsl
inc
shlb
movl
sub
enter
neg
push
sbb
inc
jnp
pushf
clc
std
mov
stos
sbb
adc
lea
dec
mov
fstl
add
push
sub
push
mov
xor
mov
sub
icebp
jle
pop
sub
test
mov
push
out
xchg
call
imul
cmp
ss
outsb
dec
xchg
jnp
pop
hlt
cmp
cmp
jl
mov
insl
rol
adc
cmpl
pop
icebp
mov
push
jle
pusha
mov
cltd
div
jmp
cmp
add
or
dec
jae
sarb
aas
cmp
mov
jne
dec
jmp
sti
out
lods
jle
hlt
lea
psubsb
add
jno
or
sub
pop
or
sub
pop
js
sbb
xlat
xchg
add
imul
out
sbb
hlt
push
add
shl
ficompl
movsl
mov
fsubrl
pusha
je
add
imul
mov
loopne
clc
repz
mov
add
sbb
add
cli
dec
push
mov
andb
push
pop
stc
shrl
adc
push
dec
inc
or
add
addb
sub
or
mov
je
push
add
mov
mov
inc
adcl
call
call
icebp
jne
data16
or
push
negl
fildll
idivb
fsubrs
and
dec
or
leave
pop
scas
cmpl
mov
bound
or
out
jne
dec
adc
outsb
outsb
adc
pushl
or
pop
mov
or
jne
mov
ficomps
pop
mov
sbb
popa
xorl
sub
push
je
outsl
stc
es
je
jp
rclb
dec
test
fcompl
jne
pop
insl
mov
adc
mov
mov
mov
pop
mov
aaa
int
ficomps
aaa
mov
ja
and
mov
pop
xor
jl
or
sub
sub
lods
rol
mov
or
cmp
fwait
jae
fcomip
cmp
out
je
mov
mov
add
cmp
pop
add
into
mov
jmp
inc
into
lret
add
mov
das
add
ja
jbe
cmp
outsl
mov
je
pop
push
adc
sbb
add
and
mov
mov
adc
pop
jnp
mov
add
jmp
cld
add
xor
jo
xor
inc
or
repnz
mov
cld
lock
push
cwtl
jnp
sahf
enter
push
or
cmc
sbb
jnp,pn
dec
mov
imul
mov
dec
or
or
or
mov
or
lret
adc
test
insb
cmp
or
cmp
repz
dec
push
add
mov
cmpl
jne
mov
jecxz
mov
test
fcoml
add
cmp
jne
mov
cmp
cmp
arpl
sbb
add
sub
into
push
push
aaa
dec
pop
mov
je
push
push
jae
sbb
jecxz
mov
negb
lret
call
adc
sti
fsub
fcoml
pop
adc
pop
es
sarb
dec
aas
or
and
add
add
cltd
mov
or
lcall
push
jmp
adc
rorb
jmp
sub
mov
cmp
dec
xchg
movsb
outsb
subl
inc
dec
cmp
jge
jne
mov
ret
dec
mov
fstpt
sbb
aas
and
call
jo
adc
push
mov
test
mov
enter
jae
sub
insl
push
jno
sbb
cltd
pop
or
xor
je
aad
popa
add
adc
push
add
adc
fbstp
inc
push
add
dec
mov
inc
push
add
or
inc
mov
dec
add
into
push
pop
fwait
mov
xchg
xchg
lea
mov
and
or
out
or
adc
fcmovnu
int3
inc
or
xchg
out
xchg
ljmp
sbb
mov
js
xlat
sub
mov
adc
cmp
clc
mov
cld
mov
mov
ret
pop
stc
push
jmp
js
mov
or
inc
or
push
leave
in
inc
xor
or
xlat
movsl
or
cmpsb
cmpsb
mov
andl
or
lret
je
add
pop
and
in
inc
mov
mov
xchg
jle
lea
loop
outsl
jmp
popa
sub
xchg
fdivr
add
push
jmp
scas
mov
into
lea
push
popl
popa
call
loopne
in
sbbb
mov
or
add
push
push
push
push
pop
fadds
add
and
lock
adc
and
cmp
mov
jmp
in
nop
outsb
fs
adc
scas
push
outsb
or
cmp
adcb
je
adc
nop
lahf
push
inc
hlt
adc
add
hlt
dec
xor
cld
cmp
rcrl
test
dec
inc
xchg
inc
test
inc
mov
jo
inc
mov
inc
mov
add
addb
and
daa
in
repz
and
mov
add
and
cmp
pop
fs
rorb
or
xchg
xchg
push
and
mov
cmp
clc
pop
add
dec
cmp
lret
xchg
sarl
jnp
mov
sub
mov
xor
add
mov
add
mov
sbb
cmp
add
push
fdivl
jp
js
ret
fdivs
sbb
pop
sub
aad
lea
mov
inc
in
and
cmp
jg
add
jge
lds
and
push
push
sbb
int
xchg
push
push
shll
sbb
sub
ret
dec
mov
sti
xor
inc
negb
sbb
push
and
pop
jge
pop
push
sbb
lea
movsl
add
mulb
movsl
mov
movsb
mov
inc
mov
lahf
pop
cmp
fidivrs
mov
adc
add
out
lock
enter
or
in
aas
xor
fdivrs
pop
dec
pop
mov
jo
inc
call
mov
mov
fsubrs
sbb
je
push
push
push
pop
idivb
inc
pop
fdivrs
push
push
test
jbe
aad
xchg
mov
jg
xchg
add
xor
outsb
imul
jbe
jmp
mov
push
lea
hlt
add
push
sub
dec
hlt
arpl
divl
cli
pop
cmp
insb
out
pusha
inc
lea
pop
sbb
mov
add
or
imul
push
dec
dec
adc
inc
sarb
pop
ja
mov
pop
shll
rolb
xchg
push
push
stos
or
mov
fstpt
mov
mov
lcall
mov
cmpsb
call
or
and
hlt
or
in
jecxz
jbe
ror
movsbw
aam
rcr
movzwl
cltd
idiv
imul
jne
insl
in
jne
sbb
xor
call
enter
decb
push
inc
cmp
cmpl
sbb
sbb
pop
inc
mov
push
pushf
push
pusha
test
push
mov
sub
add
xor
lds
in
inc
pop
out
xchg
inc
pop
orb
data16
add
mov
push
xor
xor
mov
mov
mov
jne
xchg
add
inc
and
or
mov
sbbb
xlat
aam
dec
cmp
xor
pop
outsb
fcmovne
add
mov
cmp
pop
and
pop
adc
xor
add
cwtl
sbb
addl
push
dec
cld
pop
jb
sbb
cmp
lods
pop
jne
aas
add
pusha
mov
sar
or
sub
xor
insb
data16
jne
add
adc
sbb
sbb
cmp
jne
pop
jno
test
or
add
out
jbe
mov
jo
loope
fcmovnb
add
call
xor
jo
or
fcoml
in
add
iret
sahf
adc
mov
arpl
or
cltd
pop
or
movl
ds
inc
call
out
or
add
popa
fs
ret
add
push
popf
sub
pop
and
test
je
ret
lahf
enter
push
push
add
test
mov
faddl
pop
repnz
or
pop
push
inc
sahf
outsl
jg
cmp
jl
add
jg
add
adc
inc
cmp
out
enter
and
jp
sbb
add
xor
divb
or
adc
les
cwtl
xchg
leave
test
adc
sub
mov
sbbb
xchg
sbb
cltd
mov
dec
xor
adc
pmulhuw
pop
fs
push
jb
mov
pop
ljmp
adc
roll
and
jge
adc
sti
and
pop
lock
mov
das
cmp
xorl
xchg
push
jecxz
lret
adc
add
popl
arpl
push
inc
push
lock
xor
sbb
add
fcomi
in
in
cld
inc
int
or
xchg
xchg
push
or
or
and
outsl
lock
and
fs
push
push
test
clc
adc
pop
sub
or
cld
mov
negb
add
push
pushl
hlt
cmc
or
test
out
cld
leave
ss
negl
jmp
and
int
sub
cli
push
cs
fs
insb
push
iret
in
sub
lret
stos
xor
call
cmp
lcall
push
dec
data16
aas
jae
push
push
mov
imul
push
cld
hlt
dec
enter
jle
jae
or
push
push
sbb
pop
sbb
rol
pop
adc
cmp
ja
mov
jl
cli
add
or
cmp
jne
sub
ss
inc
hlt
push
es
in
jne
js
jne
incl
add
dec
or
cld
jne
dec
cmp
lcall
cmp
das
addb
insl
lods
cmp
pusha
mov
jo
cltd
sbb
lock
mov
pop
push
clc
or
movsb
pusha
inc
mov
mulb
xchg
and
push
dec
arpl
mov
popf
pop
jp
dec
inc
sbbl
js
loopne
push
xor
cmp
movsl
xchg
nop
sbb
ss
adcl
or
into
xor
add
fs
mov
test
xchg
pop
ja
clc
daa
aaa
or
or
leave
imul
cmpl
fildll
adc
repz
adc
or
loope,pn
les
and
test
shlb
jbe
jmp
adc
test
push
aam
cld
mov
cld
and
or
int
pop
insb
ja
xchg
inc
jb
mov
inc
out
push
leave
mov
jae
lcall
push
enter
push
mov
cld
or
xor
push
pop
lret
test
xor
and
nop
dec
sahf
pop
clc
cld
js
adc
pop
pop
jmp
decb
nop
add
push
sbb
lcall
or
clc
pop
je
pusha
and
clc
in
or
inc
mov
insl
les
insb
dec
cld
jmp
imul
pop
idivb
push
inc
push
pop
xor
icebp
fwait
cmp
movl
pop
push
mov
lods
clc
je
mov
pop
std
movsl
sbb
mov
mov
ror
push
outsb
mov
es
pop
sub
inc
mov
sub
cmp
jb
pop
aam
fisubrl
or
mov
cs
loope
xor
lds
jl
mov
or
lock
push
jmp
push
mov
outsl
fbld
push
mov
dec
add
fldl
call
inc
or
outsb
lock
pop
outsb
add
gs
lahf
pop
daa
rclb
outsl
mov
repz
push
out
xchg
mov
sbb
mov
pop
fdivrp
jo
add
je
cmp
loop
into
std
imul
xor
or
sbb
out
sub
and
daa
add
push
inc
push
push
loopne,pn
inc
test
xchg
mov
pop
test
fadd
outsb
sarl
jg
and
inc
mov
int3
daa
xor
push
sub
adc
lret
fisubrs
fucomi
cmpb
pusha
jnp
add
pop
repz
push
je
sbb
out
or
push
mov
inc
jmp
jmp
insl
add
push
out
xlat
sub
mov
add
push
push
sbb
adc
jge
xor
adc
inc
mov
push
mov
dec
mov
insb
jecxz
leave
ret
fimuls
sbb
int3
or
xor
and
test
hlt
mov
cmpsb
mov
pop
xor
push
cmp
adc
mov
inc
stos
cwtl
jae
cmpps
sub
inc
jae
repz
push
clc
loope
enter
stos
jne
push
push
or
xchg
lcall
into
popw
sub
into
push
fsubl
pop
xchg
popf
push
les
pop
push
mov
push
xor
neg
adc
push
mov
mov
cwtl
push
push
push
dec
out
fidivrs
stc
call
stc
sbb
cmp
sbb
mov
push
and
jne
mov
pop
inc
nop
arpl
xor
dec
inc
push
in
cmp
sbb
nop
arpl
mov
inc
add
add
pop
add
je
nop
pusha
rcrl
fdivp
std
mov
ss
xor
push
shlb
adc
fwait
and
cld
adc
pushf
clc
lods
inc
clc
add
lahf
mov
pushl
inc
ret
pop
cmpb
sbb
xor
gs
push
jl
in
cmp
jne
fbstp
and
cmpsb
cltd
rdpmc
inc
mov
dec
inc
xlat
pop
add
cmp
not
test
lea
push
leave
pop
call
add
or
and
mov
out
sti
gs
add
pop
lds
inc
pop
jge
frstor
sbb
je
or
ja
or
jmp
cwtl
jne
inc
cmp
pop
add
inc
jg
shlb
add
ja
icebp
call
adc
cmp
hlt
sbbl
movsb
add
mov
jne
cmp
mov
push
push
fcomip
outsb
stos
mov
das
sbb
rol
push
cmc
jnp
sbb
adc
pop
sub
pusha
imul
js
sbb
jno
es
rcll
add
jno
push
cwtl
inc
sub
and
adc
stos
filds
push
cmp
jne
loopne
mov
je
mov
xor
je
mov
push
imul
shlb
adc
dec
jmp
dec
jbe
outsl
test
lock
sbb
clc
orb
adc
push
adc
cs
add
pop
sbb
mov
dec
ret
hlt
xchg
fucomi
test
sbb
cli
push
out
scas
mov
clc
call
xlat
adc
std
pop
mov
push
dec
push
cmp
jbe
lea
pushl
das
adc
lock
cld
fisttpl
jb
jmp
imul
cli
lea
xor
mov
adc
rorl
xor
pop
adc
sar
jae
outsl
cwtl
add
fistl
push
xchg
je
outsb
dec
int3
push
pop
mov
mov
add
push
sub
rolb
or
mov
jns
inc
inc
mov
in
adc
enter
in
push
inc
test
mov
push
push
inc
andl
inc
in
mov
jb
js
pop
imul
int3
test
pop
pop
xor
push
push
xor
je
cmp
insb
leave
int3
fisubrs
push
stos
iret
call
inc
shlb
lahf
iret
out
push
int
imul
popa
addr16
jl
fsubs
das
fsubrl
fidivs
mov
loop
in
addr16
pop
ffreep
mov
loopne
or
mov
dec
push
fisubrs
adc
ror
mov
adc
les
mov
jge
js
cmpsl
add
ja
fisttpl
pop
pop
pop
nop
jnp
lods
push
nop
into
xchg
inc
mov
cmp
mov
out
or
xlat
movsb
call
outsl
pop
mov
add
call
and
dec
and
ret
mov
dec
inc
outsl
sbb
int
fstps
std
clc
std
std
cld
add
add
push
jmp
inc
jns
mov
push
leave
lret
andb
sbb
sbb
lea
je
add
xchg
sbb
xorb
pop
adc
xchg
xor
pusha
add
mov
ret
xchg
mov
orl
repnz
jge
testb
jno
push
ljmp
sbb
js
push
lock
ret
add
adc
cmpsl
icebp
in
mov
arpl
and
dec
in
and
test
pop
aaa
jge
sbb
push
push
sub
cmp
mov
call
enter
faddl
lahf
sub
jg
dec
cmpw
repz
int
sbb
outsb
cmp
add
jno
fsubrl
cs
sbb
mov
lret
in
fisttpll
shrb
cmp
mov
test
aad
pop
fisubrl
xor
sub
sub
cmp
test
aaa
sbb
pop
mov
pop
adcl
xor
push
aaa
jns
jbe
je
arpl
cmc
dec
mov
push
add
addr16
in
jnp
xchg
outsb
das
xchg
test
cld
clc
mov
stc
push
arpl
loop
push
call
jb
testl
lds
sbb
cmp
mov
or
jecxz
std
sbbl
ja
push
iret
dec
lcall
int3
pushw
pop
mov
mov
in
in
or
dec
in
sub
jb
insb
fs
xchg
sub
fs
sahf
cld
addb
mov
jb
sub
test
lcall
mov
mov
lea
mov
xor
cmp
xchg
xchg
fldcw
je
cwtl
pushf
in
gs
xchg
gs
lahf
mov
pop
xchg
mov
test
or
mov
xchg
adc
int
pop
xchg
gs
iret
rcl
rcl
mov
xchg
gs
xlat
js
fsubrs
add
ss
jo
insl
sub
jne
out
fwait
mov
push
lods
scas
scas
je
mov
xor
mov
mov
lfs
xor
mov
inc
orl
push
pushf
sbb
sbb
insb
fcoml
nop
xchg
or
addl
push
ss
xchg
test
mov
pop
jbe
rol
ret
outsl
fcmovne
leave
mov
ja
js
movsl
lret
mov
mov
push
push
andb
push
lock
daa
jnp
sahf
mov
mov
add
sub
xchg
movsb
lcall
and
mov
sub
xchg
sub
sbb
test
adc
add
xchg
dec
mov
mov
or
add
or
add
fsubrl
xchg
xchg
jbe
cmpl
add
mov
into
pop
pop
jne
and
xlat
pop
cli
jo
cmpsb
cmp
xor
insl
shrb
sbb
rorb
insb
inc
xor
imul
es
push
rclb
mov
call
out
cmp
jne
je
add
mov
xor
push
jmp
call
xchg
inc
mov
sub
or
sbb
push
nop
sbb
orb
push
and
mov
leave
mov
and
jb
out
insl
clc
push
insl
dec
mov
fdivl
push
setle
dec
push
or
mov
lcall
dec
push
movsl
fsts
insl
push
addr16
movsl
pop
lcall
lcall
push
push
jb
lcall
pop
mov
pop
pop
ds
push
push
mov
movsl
pop
pop
outsb
pop
fsubrs
es
jge
gs
cmpsb
imul
imul
shll
push
popa
imul
dec
shlb
aam
jo
imul
insl
fnstenv
fldt
fnstcw
fiadds
fildll
mov
pop
mov
xor
xor
cmpsb
pop
cmpsb
cmpsl
test
stos
sbb
xor
mov
out
call
jmp
lcall
icebp
repnz
cmp
hlt
push
xor
dec
xor
adc
xor
xor
ss
push
aaa
outsl
cmp
pop
sbb
insb
cmp
sub
adc
push
jo
xor
mov
inc
inc
mov
push
jae
mov
popa
inc
test
adc
pusha
popa
bound
addr16
dec
ja
jl
fs
sbb
addr16
addr16
imul
sub
imul
insl
in
call
add
lret
xchg
outsl
xchg
arpl
fsub
mov
xor
or
adcb
push
mul
lcall
popf
rol
xor
rol
ret
shll
lret
xorb
test
xchg
shlb
mov
pusha
push
mov
or
orb
popa
inc
jo
jno
cmp
movsb
adc
jae
je
jne
pop
sbb
jbe
fs
mov
jns
jp
jnp
js
fwait
aam
jl
dec
jge
imul
addr16
js
jp
add
sbb
or
test
inc
xor
or
inc
add
mov
dec
scas
cmc
outsb
lock
push
pop
aas
push
bound
xchg
pop
mov
std
push
outsl
xchg
push
mov
adc
pusha
scas
je
paddb
adc
fstpl
jmp
push
out
fadds
in
cs
dec
push
mov
es
xor
icebp
adc
imul
repnz
jb
inc
test
rorb
add
add
mov
mov
sti
cmc
cmp
pop
int3
cmp
mov
mov
sbb
fwait
lea
jg
pop
or
fldl2t
lea
lea
divb
cmp
push
leave
push
flds
jmp
pop
test
fmuls
fs
ds
sbb
pop
cmp
jmp
mov
xchg
mov
add
test
scas
inc
pop
negb
xchg
or
enter
jmp
mov
lock
inc
andb
mov
lea
add
lock
sbb
enter
icebp
cld
hlt
arpl
dec
cmc
lret
je
mov
je
pop
xchg
ljmp
or
fdiv
aam
mov
add
cmc
mov
cs
and
xorb
cmp
sub
pop
xchg
adcb
mov
unpcklps
mov
call
adc
push
ss
adc
sbb
sbb
icebp
push
cmc
or
lret
shll
and
push
pushf
add
movsb
pop
mov
pop
xchg
mov
lds
out
xchg
cmp
ss
add
fisttps
cmpl
add
inc
outsl
add
cmpsl
call
mov
mov
inc
xor
adc
addr16
dec
hlt
fildl
mov
out
enter
ret
jo
je
sub
es
xor
test
aaa
inc
cmpsb
inc
mov
and
fs
std
add
push
stos
mov
pop
cmp
pop
orb
lods
pop
aad
cld
aad
adc
orb
add
lret
mov
xchg
pusha
test
pop
cmp
cmpl
arpl
cmp
and
add
add
pop
mov
daa
stc
jmp
ljmp
mov
lea
inc
xchg
rolb
xor
pop
and
sbb
or
insb
and
adc
fiaddl
inc
add
inc
call
or
or
ficoml
dec
jno
insb
cld
sub
push
sbb
xchg
mov
inc
xor
pop
inc
mov
sbb
push
xor
push
push
jg
cmp
andl
pop
in
ss
push
pop
or
mov
mov
dec
and
mov
bound
ljmp
mov
in
mov
mov
mov
mov
arpl
vmwrite
lcall
inc
sahf
dec
movb
dec
mov
pusha
sub
fs
movsb
dec
dec
dec
cmc
ds
jle
mov
fstpt
and
insb
mov
push
sbb
fcmovne
cltd
sub
adc
sbb
loopne
adc
int3
mull
inc
xchg
jl
push
aam
push
adc
daa
push
xchg
pushf
outsb
mov
je
xor
enter
lahf
xchg
or
jl
cmp
and
xor
jbe
sub
push
pusha
test
jae
js
inc
sbb
mov
or
ss
int3
rorb
inc
bound
leave
inc
clc
cltd
test
cmpl
xchg
sarb
addl
imull
ds
add
push
call
or
push
sbb
or
imul
insb
mov
jns
insl
sub
add
inc
pop
xor
push
stos
iret
loopne
xchg
ret
lret
lock
cld
leave
iret
in
mov
leave
cld
dec
pop
imul
imulb
adc
iret
aam
inc
sbb
xor
dec
push
add
pop
je
lods
fprem1
fisubrs
push
rcrb
ror
lock
aas
xor
add
movsb
push
cwtl
jle
xchg
fidivs
test
jno
loop
test
les
push
jnp
cmp
jne
addb
mov
mov
sbb
arpl
cltd
test
sub
mov
add
shrl
aas
adc
xchg
fildl
hlt
insb
rolb
jno
outsl
cld
stos
xchg
orl
aam
fidivs
pop
pop
jge
push
pushf
and
shrb
frstor
call
addr16
mull
jnp
or
pop
pop
mov
cmp
mov
in
imulb
jg
aaa
sbb
aaa
or
mov
mov
jmp
in
pop
add
and
inc
push
pusha
add
or
mov
sbb
jmp
cmpsl
or
add
jno
mov
pop
rcrb
lea
xor
js
aam
pusha
pop
fdivl
pusha
sub
fwait
add
rorb
lock
push
fs
hlt
mov
notl
mov
aam
jo
aas
movsl
movsb
mov
adcl
push
xor
xchg
arpl
lock
xor
mov
push
mov
inc
test
inc
add
pop
sarb
dec
xor
and
push
pop
clc
div
loopne
orl
pusha
sub
pop
mov
int3
push
sbb
mov
fistpl
xchg
push
push
cmpl
pop
xor
mov
shlb
aas
les
ret
jmp
mov
push
adc
sub
pop
inc
movsb
std
leave
push
sbb
dec
jl
hlt
cmp
ja
and
cwtl
imul
cmp
subb
pop
sahf
ret
leave
ss
enter
adc
jle
addr16
adc
push
xchg
dec
outsb
in
sub
push
mov
push
cmp
sbbl
jo
imul
or
stc
xchg
gs
mov
xchg
cmp
popa
jo
sub
rcrl
mov
cmpsl
inc
gs
shll
popa
mov
je
pop
call
outsb
ds
inc
dec
lods
addl
pop
test
push
jne
xlat
add
or
pop
cwtl
xchg
xchg
inc
or
inc
dec
sub
jne
push
mov
dec
fs
lods
rorl
addl
addl
push
add
dec
push
pop
mov
mov
cmp
test
ja
push
inc
mov
scas
pop
or
gs
pusha
ljmp
mov
pop
mov
jmp
jl
out
jl
jle
add
std
cmp
pop
aam
add
fdivl
mov
movsl
les
movsl
mov
or
adcb
fimuls
add
adc
cmpb
or
xor
cmpsl
movsb
sub
add
ss
mov
jno
mov
mov
shlb
aaa
jmp
push
sbb
mov
push
das
cltd
pop
inc
idiv
cmp
ret
jle
inc
inc
jmp
add
mov
xor
enter
jnp
js
lcall
decl
dec
xchg
sbb
decl
push
mov
push
mov
lcall
mov
imul
push
push
jno,pt
add
dec
dec
sub
repnz
sbb
sub
jb
push
loop
andl
lcall
jae
es
sahf
adc
mov
movsb
dec
mov
lcall
stos
xor
xlat
xor
lods
pop
lods
pop
scas
scas
imul
mov
sub
cmpsb
mov
mov
mov
gs
cld
lret
mov
lret
cmp
insl
lret
mov
sub
es
mov
je
cmp
lret
push
push
es
bound
and
add
jecxz
loope
push
inc
push
insl
insb
lds
cmp
lret
mov
es
mov
xorl
mov
dec
shll
cmp
add
lret
arpl
jo
sub
mov
and
mov
lret
jae
cmp
lret
mov
inc
inc
cmp
pop
std
dec
test
pop
aas
push
lahf
mov
push
pushl
lea
fistl
rolb
nop
sbb
in
xor
jo
mov
mov
je
sub
push
dec
pop
pusha
pusha
cld
jo
xor
aad
pop
and
push
mulb
loopne
mov
test
add
fs
call
fdivs
pushf
lea
in
or
daa
lret
mov
sbb
aam
pushf
stc
inc
or
fs
sbb
cmp
mov
test
sbb
in
call
pxor
aaa
aam
sbb
lret
cld
call
inc
cs
fcomps
push
je
cmp
mov
jb
roll
or
push
sub
or
adc
sbb
je
pop
mov
push
rol
daa
in
popf
add
mov
into
dec
cld
cmp
iret
cmp
jo
mov
out
lea
jle
insb
mov
add
xchg
imul
cld
mov
int
xchg
dec
enter
int3
add
pop
mov
lret
aam
fsub
jae
mov
dec
call
dec
pop
adc
and
and
bound
mov
add
push
inc
add
in
adc
pop
js
inc
lret
xor
mov
mov
cmp
inc
pop
or
xchg
push
or
ret
stos
inc
xor
sub
inc
iretw
add
subb
test
adc
mov
xchg
loop
das
leave
mov
inc
jg
dec
xor
add
sub
xlat
push
sar
and
sub
jge
outsb
outsl
pusha
movsl
cmpb
add
mov
scas
add
int
xchg
adc
adc
adc
inc
push
fnstsw
shll
push
xor
fstl
dec
gs
orb
inc
push
push
gs
xchg
cs
insb
inc
jo
insb
adc
jo
sub
mov
insb
jne
cs
into
clc
jbe
shll
gs
xor
and
aas
shlb
loope
jecxz
inc
inc
in
xor
ror
dec
outsb
je
jb
add
dec
leave
mov
lret
jo
outsb
push
jb
ss
mov
je
pop
xchg
gs
push
jne
pop
xchg
mov
outsl
xor
inc
inc
dec
dec
outsb
fnstsw
xor
je
jb
sbb
mov
adc
and
inc
inc
inc
push
popa
fs
imul
sub
jb
jb
cs
in
inc
sbb
jb
je
fs
insb
outsl
jae
out
fs
popa
outsb
fs
jae
popf
mov
aas
add
sbb
dec
outsb
je
cmp
cmp
jmp
jb
jmp
sbb
popa
dec
into
dec
dec
pop
bound
fs
into
into
inc
jl
jge
jle
jg
pop
andb
jo
pushf
outsb
push
jno
xchg
mov
mov
xor
xor
dec
je
imul
gs
pop
inc
rcrb
iret
dec
aam
popf
pushf
xlat
dec
dec
push
jno
xchg
xchg
mov
mov
xchg
xchg
xchg
je
js
mov
xchg
mov
mov
inc
mov
rol
dec
shll
ret
leave
push
rol
clc
dec
adc
push
xchg
jb
xchg
xchg
or
pop
mov
cltd
outsl
lcall
push
movsl
cmpsb
pop
sahf
lahf
mov
scas
or
enter
pushf
in
cld
push
in
pause
xchg
inc
call
in
enter
inc
hlt
jmp
or
nop
xchg
fwait
rorl
mov
call
add
add
mov
aad
push
flds
xchg
jnp
and
and
push
test
push
cmpsl
or
jnp
sbb
ret
jmp
lcall
cmp
adc
pop
test
adc
imul
loopne
ljmp
cs
cs
inc
cmpsb
stos
push
mov
jnp
jmp
adc
or
testl
je
mov
mov
ja
push
jne
scas
es
or
jge
ret
fwait
movsl
lea
sub
inc
dec
movsl
add
xchg
and
mov
add
push
mov
sub
loop
or
jno
mov
gs
mov
testb
jg
xchg
lods
push
je
jmp
int3
out
push
cmp
insl
out
addr16
cmovp
out
cmp
push
test
and
mov
sbb
dec
inc
shrb
insb
or
int
push
mov
add
ss
adc
pop
or
mov
rcll
or
fs
inc
xchg
push
xchg
mov
mov
ljmp
add
fnstsw
dec
shll
jb
adc
xor
insb
xor
sbb
imul
in
and
fwait
inc
popa
pop
xchg
gs
adc
push
gs
fs
xchg
cwtl
add
in
add
or
xchg
imul
cmpsb
imul
flds
insb
imul
lcall
or
jae
cmp
push
xor
test
cwtl
pusha
ljmp
mov
call
mov
imul
std
cmp
jbe
adc
mov
pop
mov
sub
jmp
jb
movsl
sbb
out
movb
insl
and
int
ljmp
fisttpll
les
cmpl
jecxz
lock
imul
adc
and
arpl
jb
add
daa
arpl
data16
xchg
insl
jne
xlat
loopne
rolb
fst
fsubp
cs
push
test
mov
movl
les
xchg
xor
pop
pop
ss
mov
pusha
fimuls
push
inc
xor
cmp
sub
xchg
ljmp
mulb
sub
fidivrs
ja
jae
push
jne
rcll
fildll
and
pop
or
adc
xchg
or
subl
sbb
call
inc
inc
lods
push
sub
dec
lahf
and
xor
lea
je
jg
xor
cld
adc
movl
jl
ror
movsl
mov
fs
push
sub
mov
cwtl
out
lcall
loopne
cmp
xor
loop
jmp
mov
or
pushf
movsl
bound
jae
rcll
xor
jae
popa
ja
dec
shll
dec
je
fisubrs
jo
dec
shll
jae
insl
bound
jne
and
shll
insl
bound
mov
adc
shll
andb
inc
add
push
cmp
std
cmc
and
fisttpl
mov
and
cltd
lods
mov
call
dec
ror
and
dec
xlat
and
imul
xorl
sub
jae
jne
clc
push
scas
push
jmp
mov
pop
ja
xchg
andb
mov
icebp
push
mov
adc
mov
bound
ja
scas
jge
jge
mov
fcomps
stos
sahf
cmp
rolb
or
mov
add
xchg
int
shrb
and
cs
stos
add
sub
ret
jge
ret
je
push
js
inc
es
fs
gs
popa
arpl
gs
je
outsl
outsb
cmp
jo
and
mov
mov
int
mov
push
pusha
shr
lcall
dec
and
cld
fisttpl
xlat
push
in
in
push
sub
push
call
adc
sub
add
in
cmpw
movsl
push
pop
repnz
cmp
mov
jae
xchg
cmpsl
or
cs
sub
int3
scas
dec
rol
ret
sbb
sbb
mov
pusha
pushf
or
mov
int3
les
and
jae
je
xor
shll
arpl
jne
mov
sahf
cs
les
ror
add
or
lret
adc
inc
icebp
stos
mov
xor
fs
out
jl
adc
test
or
sub
add
ret
sahf
pop
mov
orl
cmp
or
ret
dec
popa
xor
mov
sarb
or
cli
push
insl
in
adc
add
leave
pop
setne
pusha
dec
sub
or
popf
in
inc
push
jg
adc
call
std
adc
inc
adc
mov
lret
mov
imul
lret
bound
gs
imul
sub
imul
push
mov
sub
mov
aas
popa
arpl
sub
mov
outsb
cmp
sub
arpl
je
outsl
outsb
leave
mov
outsb
es
fdivs
int3
sti
pop
xchg
lods
in
je
outsl
outsb
xchg
gs
xchg
cmp
jb
in
pop
outsl
jns
cmp
roll
cmp
ret
dec
rorl
insb
data16
jp
add
xor
outsb
push
std
roll
dec
je
add
jne
in
rcl
dec
mov
push
push
jmp
adc
xchg
xchg
jmp
mov
adc
cmpsl
arpl
leave
push
xchg
push
call
or
mov
mov
pop
and
push
incb
daa
push
in
add
dec
adcb
pop
push
inc
xchg
sub
push
popa
jns
ss
shll
es
mov
xor
and
sbb
mov
dec
inc
and
outsl
ja
js
dec
insl
pop
cmp
pop
sbbl
adc
shll
mov
mov
popa
push
mov
mov
add
aad
push
push
or
or
push
xor
lea
push
test
cmpsb
and
or
pusha
int3
rol
mov
mov
dec
shlb
pop
mov
lret
arpl
cli
sub
int
lret
gs
int
pop
into
jb
xor
push
xlat
shrb
ror
rcl
aam
jp
rcl
sbb
lods
pcmpgtb
shll
or
clc
xor
add
call
lock
jnp
ret
add
push
mov
jecxz
popa
mov
cmp
xor
addr16
je
xor
mov
or
imul
jae
xor
shll
je
sbb
loope
jmp
imul
shll
mov
jbe
sub
adc
lock
sbb
popa
fs
mov
pop
icebp
lock
add
pop
je
xchg
add
sub
les
adc
sbb
push
insb
adc
and
stc
sbb
dec
jmp
sti
repnz
insl
aam
addr16
cmp
xchg
add
sub
or
pop
pusha
pusha
or
movsl
das
mov
and
cmp
js
bound
mov
je
addb
jne
popf
xor
rolb
imul
jne
jo
mov
std
push
xor
popf
call
inc
jle
out
rorl
push
icebp
aas
es
mov
jmp
cltd
mov
roll
out
inc
jo
mov
mov
cs
out
pop
add
bound
pop
push
addl
jl
pop
and
pop
xor
add
enter
mov
enter
rol
ror
enter
jne
mov
popa
push
push
mov
jp
test
sub
out
mov
cmc
push
outsl
data16
dec
shll
popa
jb
pop
shll
jb
xor
xor
data16
push
mov
lret
adc
imul
lret
ja
pop
push
push
and
dec
outsl
push
lea
loope
hlt
outsl
pop
lea
or
mov
lcall
push
dec
inc
jo
cmpsb
imul
imul
mov
pop
mov
xchg
addr16
lods
test
cmp
and
sbb
stos
mov
mov
test
or
xchg
mov
jmp
mov
fdivl
movsb
jb
sar
cmp
inc
mov
lds
cmp
adc
ret
into
js
mov
mov
adc
leave
ret
mov
mov
stos
jo
xchg
mov
adc
ja
cmp
or
cmp
push
xor
push
mov
mov
inc
and
imul
pop
or
pop
inc
jecxz
rolb
mov
les
and
in
pop
cmp
dec
dec
ss
in
out
dec
dec
dec
call
dec
dec
dec
in
in
out
out
pop
movsl
mov
cmp
push
inc
dec
or
stos
mov
call
sub
dec
cmp
xor
adc
or
mov
xor
or
push
leave
xor
cmp
push
lahf
jle
mov
sub
add
sbb
and
icebp
inc
insb
xor
out
xchg
xchg
xchg
popa
arpl
or
adc
roll
push
les
in
jmp
mov
or
dec
pop
test
push
call
and
push
adc
clc
js
inc
stc
mov
sub
adc
ss
mov
sub
lahf
push
inc
jnp
fsubp
push
pushl
mov
mov
call
fwait
in
xchg
data16
imul
push
mov
ret
sahf
decl
and
cmp
adc
sti
cmp
pop
mov
push
inc
ds
cmc
dec
sbb
mov
lods
xor
into
sbb
pop
rorl
add
sub
add
jnp
cmp
enter
std
loop
jecxz
hlt
inc
mov
std
in
out
shrb
std
cs
xchg
dec
out
insb
adc
and
in
std
pxor
in
std
imul
dec
xor
dec
dec
dec
jb
jae
fmull
dec
fs
insb
outsb
out
dec
in
cmp
ds
stos
sub
sti
int
sub
flds
jae
outsl
leave
sub
outsb
and
fdivrp
pop
mov
jb
sti
loopne
loope
loop
sbb
sti
push
pop
add
inc
sub
cmp
jno
dec
xchg
imul
sbb
loopne
scas
lea
mov
jb
icebp
shlb
mov
or
xor
xchg
mov
aaa
leave
and
or
and
inc
sti
mov
pop
add
mov
or
or
ret
or
and
add
pop
decl
hlt
lahf
int
pop
shlb
nop
mov
pop
sub
cmp
adc
lock
mov
and
mov
sbb
roll
ret
xor
pushl
lds
fsubrs
mov
outsl
mov
add
pop
clc
and
cmp
xlat
jg
mov
sbb
lock
popa
ret
pop
rcll
int3
add
pop
dec
cmp
and
out
fstpl
add
cmp
xor
iret
int3
add
pop
sub
loope
mov
sub
inc
mov
cmp
cmp
inc
cs
dec
sbb
cmc
pop
adc
sbb
scas
inc
pop
mov
xchg
jp
mov
and
fwait
mov
mov
aad
cmovo
push
xorb
out
xchg
mov
push
add
pop
lods
pop
sub
mov
data16
cmpl
pusha
cmpsl
lods
pop
xor
ss
push
pop
gs
stos
add
scas
add
movzwl
mov
insb
divps
push
and
daa
sub
sub
sahf
pop
enter
inc
inc
push
or
or
call
push
or
subb
push
aam
test
mov
push
sbb
iret
mov
push
das
mov
je
ret
shlb
push
or
mov
xchg
inc
sbb
mov
jg
fadd
pop
mov
out
inc
adc
sub
bound
mov
loop
and
loop
adc
jge
or
sub
or
push
call
mov
mov
sahf
sbb
decb
mov
into
mov
xchg
data16
lcall
mov
add
mov
push
pop
push
call
jg
movl
jle
fnstenv
pop
sbb
sarb
add
pop
xor
pop
movb
add
adc
add
ja
xor
lea
div
imul
stos
push
push
std
pop
stos
push
cmp
jbe
push
add
fidivs
jo
mov
push
or
out
jle
mov
mov
and
sbb
and
scas
or
enter
call
cmp
inc
rcrb
pop
dec
push
cmp
jl
pop
cli
mov
dec
or
dec
inc
mov
add
and
or
shrb
sbb
fcomps
fcompl
unpckhps
sbb
and
aaa
aaa
jnp
and
xorl
jle
sbb
gs
fdivrs
enter
mov
sub
mov
mov
dec
inc
nop
ret
add
mov
sub
shlb
cmp
fstpt
adc
push
xlat
xchg
sbb
mov
cld
cmp
sbb
sbb
shrl
dec
dec
aaa
jnp
rol
rorl
addr16
outsl
adc
clc
pop
or
adc
or
inc
and
into
inc
mov
cmp
rclb
jnp
xor
scas
jo
mov
incl
xor
sbb
sbb
rolb
or
mov
inc
or
mov
push
jle
xor
jne
push
jmp
push
sarl
push
imul
mov
in
sahf
test
mov
sub
or
je
cmp
fimull
inc
outsl
sub
push
pop
pop
lds
scas
clc
adc
test
inc
cld
inc
dec
dec
push
test
mov
xor
sbb
in
out
push
cmp
push
push
dec
sbb
cltd
sbb
dec
inc
insb
adc
bnd
inc
insl
or
jns
push
and
adc
movsl
jbe
adc
add
adc
addb
add
push
call
pusha
adc
inc
adc
pop
mov
shlb
jbe
sub
pop
sbb
inc
popa
arpl
insb
inc
stos
pmaxub
dec
stos
or
rolb
inc
call
and
shl
imul
frstor
mov
push
mov
and
or
mov
pop
and
jne
fsubrs
add
sahf
jae
xchg
mov
out
push
add
mov
sahf
test
push
inc
pop
jo
sbb
pop
test
jns
adc
sbb
js,pn
or
test
sbb
or
cmp
add
inc
lcall
and
and
push
call
fsubrs
leave
and
adc
ja
pop
adcb
mov
mov
inc
sub
xor
mov
add
int3
or
cmp
adc
jno
nop
adc
cmp
adc
and
cmp
push
lock
or
test
insb
dec
and
cmp
cs
and
add
inc
push
xor
push
enter
or
jb
stc
sbb
and
sbb
pop
in
push
jo
xchg
scas
inc
ds
and
xor
add
add
add
add
xchg
out
add
xor
sbbl
ljmp
add
test
icebp
or
xor
cmp
jnp
inc
inc
lea
repnz
iret
push
xchg
lahf
pop
aam
mov
jns
mov
test
or
insb
or
incl
push
sbb
add
jl
cmp
int3
mov
cmp
lock
dec
push
out
adc
out
xor
push
ljmp
test
add
or
add
repnz
pop
mov
add
test
xchg
mov
mov
mov
pop
jo
mov
dec
and
sub
out
int
cmp
mov
add
mov
jp
xor
dec
jbe
adc
mov
into
daa
adc
xor
shrl
ret
in
mov
leave
pop
sbb
mov
loop
cmpsb
pop
out
push
xchg
out
in
cmpsl
sub
in
pop
mov
inc
fucomip
inc
pop
jbe
data16
pop
dec
dec
mov
movd
xor
cmpsl
add
cmpsl
xchg
and
adc
xchg
sbb
cld
inc
jge
fdivrp
adc
sbb
call
mov
cmpb
mov
xchg
mov
sbb
cltd
nop
and
lock
and
fcompl
cmpl
and
js
cmpl
je
xchg
and
arpl
fmull
jo
mov
push
cli
orl
push
and
mov
inc
and
cmpsl
jo
or
orl
add
aam
push
nop
dec
xor
sub
sub
gs
xchg
in
jo
gs
notl
in
mov
cmp
mov
stos
cmp
or
into
lods
adc
popf
nop
add
dec
mov
leave
xchg
and
adc
adc
mov
lea
dec
cmp
mov
xchg
add
push
adcb
shrb
push
push
dec
data16
aas
inc
cmp
testl
ret
pushf
loope
into
add
shrl
jecxz
fldcw
pop
adc
rolb
xor
dec
mov
jb
rol
jno
adc
mov
jne
pop
rcr
cmp
adc
mov
enter
repnz
and
push
add
pusha
push
enter
jo
xorb
in
or
inc
inc
shr
scas
ret
push
and
fdivrl
mov
insb
mov
mov
cmpsb
pop
add
ret
inc
mov
xchg
xor
adc
vmptrld
lods
and
and
xchg
xchg
xchg
xchg
sub
adc
xchg
xchg
xchg
adc
or
and
inc
inc
sahf
and
cmp
fs
inc
inc
xor
outsl
pusha
mov
push
push
aaa
mov
cld
mov
fdivs
push
shrl
pop
mov
mov
pusha
int
inc
pop
ret
inc
dec
adc
xchg
dec
xor
or
jae
inc
daa
cli
loopne
push
push
dec
inc
xchg
les
jl
inc
push
inc
adc
jge
fisttps
and
aas
inc
outsl
insl
insl
adc
adc
mov
pop
mov
popa
adc
sbb
sub
mov
gs
inc
adc
add
adc
mov
inc
adc
inc
lods
sbb
nop
leave
mov
cmp
mov
jo
mov
ss
mov
imul
sub
imul
mov
mov
fisttps
sub
arpl
jl
ss
and
mov
jo
pop
push
ja
clc
add
inc
add
add
lock
lods
cmp
je
sub
jae
inc
mov
jbe
inc
dec
orl
inc
leave
mov
pop
nop
mov
mov
lock
imul
adc
dec
insb
cs
cs
mov
outsb
lock
jecxz
inc
add
push
les
das
fdivr
or
movsb
and
sbb
data16
sbb
mov
pop
outsb
adc
jns
sti
mov
sub
add
ficompl
mov
adc
jb
fldl
pusha
and
dec
push
popa
mov
addr16
aad
sbb
test
stos
aas
push
inc
inc
inc
dec
packsswb
adc
es
rcrl
movl
push
adc
sub
sub
push
mov
scas
adc
pop
sub
jbe
sbb
insb
pop
and
outsw
outsb
bnd
sub
lea
dec
mov
sub
or
pop
cmp
dec
gs
or
push
and
lock
aam
adc
int3
test
addr16
outsb
jne
push
adc
mov
pop
add
aas
aas
xor
inc
pop
xadd
xlat
push
adc
imul
ret
or
pop
or
xchg
inc
lds
rolb
add
pop
xor
data16
xchg
cmp
sub
xor
jge
push
lods
add
imul
mov
jae
jecxz
jnp
fcmovb
fsubp
or
add
jae
divb
jno
cmp
jbe
outsb
mov
cmpsl
add
jae
imul
and
adc
add
mov
call
cmpsl
bound
push
adc
mov
add
or
stos
ja
fdivl
inc
cmc
push
rcrl
sbb
sub
std
dec
mov
inc
dec
fs
inc
push
inc
inc
inc
add
adc
sub
ficomps
push
xor
xor
femms
add
insb
pop
adc
rolb
add
jo
dec
insl
lcall
and
pop
add
jbe
push
sbb
sbb
imul
push
lcall
jbe
mov
dec
mov
pop
xchg
outsb
mov
dec
inc
dec
push
dec
orb
imul
je
mov
psadbw
ret
mov
sub
and
or
adc
sub
ret
repnz
movsb
or
call
lcall
mov
or
lret
outsb
add
movsl
add
mov
add
and
icebp
jg
adc
xor
xor
xor
xor
out
push
sub
mov
pushf
xor
outsl
pushl
call
xor
adc
add
or
or
adc
sbb
and
sub
xor
cmp
in
inc
xor
xor
pusha
xor
xorl
xor
xor
xor
sar
pushl
das
xor
cmp
push
xor
pop
xor
imul
mov
xor
xor
xor
xor
xor
xor
xor
ljmp
add
or
xor
xor
xor
xor
xor
xor
pushl
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
mov
xor
and
xor
pop
push
cld
pushl
lea
mov
xor
repz
sbb
inc
ss
ss
cmpsl
ss
ss
ss
ss
pushl
pop
aaa
inc
aaa
pop
aaa
arpl
jno
xorl
aaa
xchg
aaa
fwait
aaa
mov
mov
aaa
divb
decl
iret
sub
xor
cmp
lcall
jbe
jnp
xchg
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jno
jg
mov
mov
cmp
cmp
push
aad
cmp
cmp
cmp
cmp
cmp
cmp
cmp
fdivrs
fnstsw
loop
out
in
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
loop
call
cmp
cmp
cmpsb
cmp
sbb
pop
ds
aad
lcall
jo
xchg
ds
in
ds
aas
xchg
aas
insb
clc
mov
dec
xor
xor
xor
xor
push
xor
xor
stc
inc
cmp
inc
xor
pop
mov
cltd
xor
xor
xor
jg
pushl
and
js
jg
mov
xor
xor
xor
xor
xor
xor
ret
pushl
cmp
inc
ss
ss
ss
ss
ss
aaa
sub
xor
push
adc
aaa
dec
aaa
pusha
aaa
jae
stos
pop
into
aaa
fnsave
lock
adc
mov
sub
push
imul
and
cmp
cmp
cmp
ljmp
inc
loope
cmp
cmp
imul
cmp
cmp
cmp
cmp
cmp
cmp
cmp
movsl
cmp
les
bnd
cmp
sbb
daa
add
imul
mov
jge,pt
mov
ds
xor
out
cld
notl
mov
xor
xor
pop
xor
xorb
xor
xor
decl
xor
xor
jnp
fwait
xor
xor
xor
xor
xor
xor
xor
aaa
xor
inc
inc
pusha
xor
jecxz
pop
ss
aaa
aaa
inc
repz
std
pop
cmp
popa
cmp
cmp
cmp
pop
cmp
cmp
cmp
cmp
sbb
sub
movsl
cmp
inc
cmp
cmp
cmp
test
cmp
ds
ds
jg,pt
xchg
in
fnstcw
jne
pusha
insb
cmpsb
test
xor
xor
xor
insl
xor
xor
jg
inc
xor
xor
xor
xor
xor
xor
scas
xor
xchg
xor
and
sub
jg
ss
test
push
cmp
cmpb
cmp
ds
decl
arpl
push
aas
outsb
aas
pushf
aas
mov
inc
fwait
lcall
xor
popa
xor
xor
xor
xor
xor
rcr
xor
mov
sbb
inc
xor
xor
xor
and
xor
xor
xor
xor
dec
dec
aaa
xor
or
dec
cmp
cmp
cmp
cmp
jnp
mov
mov
jmp
or
sub
sub
cmp
mov
loope
cmp
push
cmp
mov
mov
into
cmp
cmp
cmp
cmp
cmp
mov
push
mov
in
cmp
decl
rclb
xor
xor
jbe
xorl
xor
mov
mov
stos
or
xor
out
mov
ss
xor
xor
xchg
scas
xor
push
xor
xor
xor
mov
cmp
cld
fistps
repnz
cmp
cmp
sbb
cmp
cmp
popf
sarl
in
cmp
cmp
cmp
cmp
mov
add
cmp
cmp
cmpsb
mov
cmp
cmp
mov
push
in
stc
cmp
fwait
insl
loope
ss
push
mov
stos
push
dec
xor
xor
xor
inc
iret
xor
mov
mov
sbb
or
and
fstp
aam
test
getsec
cmp
cmp
leave
mov
lock
jno
cmp
cmp
sbb
aas
les
loope
inc
adc
cmp
xchg
stc
sbb
cmp
dec
xor
arpl
nop
mov
xor
inc
fcomip
xor
xor
fwait
add
or
jle
int3
cmc
aaa
inc
aaa
mov
xchg
aaa
xchg
test
scas
cltd
test
lahf
xor
pop
in
cmp
test
sarb
cmp
cmp
cmp
cmp
xchg
cmp
and
push
sbb
add
clc
decl
xor
push
xor
xorl
xor
xor
daa
xor
ljmp
fwait
xor
xor
and
xchg
cld
sbb
sbb
xor
xor
xor
jns
xchg
xchg
xor
or
dec
xor
xor
daa
xchg
xor
aaa
or
lock
xor
mov
mov
outsl
cli
inc
xor
imul
xor
xor
cmp
inc
ss
ss
mov
xchg
cmpsb
ss
fidivs
add
sub
inc
aaa
push
aaa
les
sbb
or
pop
push
cmp
and
add
push
mov
inc
cmp
push
cmp
jle
sarb
loop
call
loope
cmp
fldenv
imul
cmp
mov
xor
cmp
inc
cmp
sub
xor
push
xorl
add
lahf
or
test
add
push
or
prefetch
jae
or
jo
dec
mov
or
add
add
add
or
add
hlt
xor
add
add
add
add
add
and
or
mov
int
add
jg
ret
insb
unpcklps
add
cwtl
lods
cld
add
add
add
sbb
sbbl
enter
test
test
dec
mov
ss
in
aad
cmp
xor
push
addr16
in
add
xor
xchg
push
inc
mov
add
in
push
repnz
and
sub
inc
add
add
cmovb
add
pushf
push
push
or
or
cmpsb
sbb
pop
add
aaa
xchg
xchg
push
add
mov
add
add
add
add
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
