sbbl
mov
iret
incl
xchg
gs
imul
xchg
sbb
in
fcmovnbe
lds
stos
fwait
xorl
lret
mov
pop
dec
aaa
sub
cltd
les
xchg
gs
add
mov
incl
jmp
add
mov
lea
rcrl
js
js
xchg
repnz
stos
mov
out
adc
add
lcall
lea
cwtl
lcall
lcall
mov
imul
xchg
fwait
call
cwtl
xchg
xchg
sahf
xchg
fwait
call
inc
test
cwtl
popf
mov
iret
leave
rcrl
cmpsl
lcall
cli
adc
lock
lock
imul
mov
xchg
clc
test
popf
lea
mov
in
add
loope
iret
lret
je
jle
xchg
idivl
inc
lret
fwait
lcall
je
mov
and
add
test
por
scas
lods
cmp
mov
sbb
sahf
aaa
mov
hlt
xor
xchg
cld
xor
xor
xchg
xor
xor
das
hlt
cs
cld
sub
adc
and
mov
les
call
and
and
aam
enter
scas
cld
push
mov
sbb
sbb
and
push
mov
fcoms
mov
enter
or
mov
or
or
pop
or
cld
add
add
xchg
push
xchg
dec
subb
pop
cmp
subl
aaa
out
paddusw
or
add
sub
pop
les
mov
test
je
adc
je
idivl
mov
int3
aas
and
dec
add
jb
addr16
cmp
xlat
stos
scas
test
ljmp
aas
mov
in
ljmp
inc
inc
lret
cmpsb
mov
icebp
repz
out
pop
fsubl
xchg
and
add
xor
cmp
repnz
movsb
ss
jl
jecxz
rorb
insb
ljmp
test
inc
bound
out
repz
notl
je
jbe
stc
pop
cli
adc
ficomps
test
cmp
xchg
stc
orl
xchg
mov
mov
loopne
dec
mov
inc
xor
add
int3
and
or
loop
out
fbld
pop
in
loope
les
pushf
xor
xchg
cld
xchg
movsb
mov
jl
dec
mov
test
jmp
mov
movsb
adc
fdivrs
mov
jge
scas
jg
ret
mov
movsb
pop
das
dec
mov
push
jmp
pushf
mov
repz
dec
dec
lret
xor
in
pop
scas
jae
ds
jae
scas
sub
iret
in
xor
xchg
push
shl
mov
call
bnd
repz
xchg
nop
jp
cmpsl
mov
testl
loopne
or
pop
in
inc
repz
dec
cmp
dec
cmpsl
sti
movsl
iret
and
jmp
jecxz
inc
fwait
lock
pop
mov
fistps
xchg
mov
jl
ss
cmp
mov
out
mov
hlt
negl
jnp
dec
pushl
jmp
pusha
imul
ret
dec
push
inc
and
dec
and
repz
push
jp
repnz
out
mov
in
stos
jmp
outsb
out
stc
jne
sub
mov
mov
cmp
loopne
sbb
cmp
stos
dec
adcl
std
ljmp
iret
jmp
lock
ljmp
loopne
std
fildl
jb
push
stos
in
xchg
add
mov
inc
sub
mov
mov
movsl
in
mov
aad
xlat
inc
int3
fildl
dec
test
dec
inc
aam
pop
or
outsl
ljmp
push
pop
and
cmp
ds
mov
scas
and
mov
lods
cmp
call
test
aam
fildll
sub
stos
fsubs
arpl
sbb
shr
pop
dec
shrb
push
adc
das
test
inc
mov
mov
sti
aas
into
add
and
jb
jae
mov
mov
or
lods
test
jb
dec
dec
sti
jg
pop
out
aas
inc
out
adc
jb
push
repnz
cltd
push
inc
xor
lods
push
xchg
xor
inc
xchg
or
jne
cld
cmp
adc
lret
cmp
jl
dec
mov
andl
test
sub
cmp
and
int
xor
cmpsl
pop
jmp
mov
pop
iret
test
adc
cmpsl
rorl
aad
jnp
das
lds
call
jne
cmpsl
mov
or
xchg
mov
test
cmpsb
push
push
add
leave
mov
cmpsb
repz
cmp
test
and
add
push
and
fimuls
pop
cmpsb
gs
iret
cld
mov
cmpsb
gs
lcall
cmpsb
inc
idiv
mov
xchg
cmc
mov
hlt
inc
hlt
stc
xor
jl
xor
dec
cli
hlt
adc
jb
scas
lods
pushl
cld
ljmp
ss
imul
pop
sbb
scas
or
repz
ljmp
hlt
cmp
mov
shll
sub
stc
adc
jb
stc
xor
xor
shll
pushf
xor
inc
xchg
ja
cs
lods
repnz
dec
repnz
inc
cli
add
mov
inc
addr16
push
xchg
sub
jb
ljmp
test
cld
add
mov
ds
aas
cli
in
inc
lret
cmp
inc
jnp
lea
pushf
cmp
lock
add
add
xor
popf
xor
fmull
pop
add
mov
lret
int3
sub
sub
and
push
sub
xchg
repnz
add
lea
addr16
push
ljmp
cltd
add
push
or
fsubrl
or
outsl
xlat
das
xchg
inc
push
xchg
inc
stc
sub
inc
xor
ss
xchg
dec
test
add
fcoml
hlt
leave
imul
dec
or
xchg
mov
nop
ror
mov
xchg
mov
dec
insl
iret
rolb
inc
stos
mov
xchg
hlt
xchg
push
out
fwait
pushf
or
hlt
dec
ds
leave
popf
rorb
lret
cli
je
add
xchg
arpl
bnd
mov
inc
sarl
add
in
mov
cmp
inc
lahf
push
cmp
xchg
push
jl
aaa
xchg
jae
dec
jmp
stc
push
mov
nop
int3
aaa
cmp
lcall
or
popf
shl
xchg
cld
ret
mov
pop
loopne
cltd
mov
ss
lahf
stc
mov
popf
inc
add
jb
scas
stc
pop
inc
scas
pushf
inc
pop
mov
pop
push
ret
out
mov
lods
fadd
fwait
scas
mov
sbbl
mov
loopne
sbb
push
ds
mov
roll
mov
adc
movhps
ret
inc
jle
in
out
push
or
xchg
pop
int3
cmp
push
out
jmp
inc
add
fdivrp
ret
sub
mov
jmp
je
loopne
hlt
xor
fidivrl
fidivl
xor
hlt
lock
xchg
outsl
out
imul
xorb
jmp
push
hlt
sar
int
and
cmpsl
call
je
repz
je
mov
push
cmp
arpl
fisttps
in
jnp
mov
scas
jp
aam
dec
fwait
ds
mov
mov
xchg
jge
stos
aad
mov
mov
fildll
scas
mov
mov
jmp
call
xchg
out
std
stos
stos
es
incl
fcom
fwait
cld
ljmp
pushl
ja
repz
sti
cld
add
inc
loopne
stc
aas
stc
mov
loopne
icebp
shr
nop
add
dec
divb
fiadds
mov
stos
xchg
xchg
inc
lea
add
sahf
xchg
xchg
nop
mov
popf
lcall
std
mov
nop
fwait
lcall
repnz
fstpt
or
cld
push
pushf
rorb
clc
cmp
data16
dec
and
or
data16
adc
inc
data16
clc
lods
xchg
pushf
xchg
and
out
or
pop
scas
mov
out
dec
inc
adc
jbe
dec
icebp
fdivp
stc
repz
cmovb
out
cld
cli
clc
std
rcll
clc
scas
repz
daa
ds
out
clc
stc
outsl
das
jb
pop
test
mov
fs
loope
leave
or
popf
mov
popf
aas
jg
rcrl
lcall
jmp
pop
cmp
lea
adc
jecxz
les
hlt
hlt
fdivrs
pop
inc
into
cld
jae
sbb
leave
jge
add
loopne
ror
mov
xchg
cld
push
dec
cmp
adc
mov
daa
std
iret
add
aad
mov
mov
mov
lret
mov
dec
inc
xor
sub
mull
mov
mov
test
fwait
stos
inc
adc
mov
lret
lcall
imul
xchg
jge
scas
movsl
xchg
jmp
mov
and
jge
dec
cltd
movsb
outsl
add
iret
int
aad
int3
sub
mov
and
ret
mov
in
insb
shll
scas
popl
inc
xlat
jle
xlat
jp
sub
xchg
out
repz
xchg
out
test
data16
lret
push
shl
in
out
repz
leave
sti
sti
shll
insb
cli
jmp
aam
jmp
outsb
jmp
cmpb
in
sbb
cld
jmp
repz
mov
bnd
sbb
jmp
cld
jmp
out
daa
aam
jecxz
mov
pop
and
daa
xor
dec
mov
cmc
add
ficoml
int
test
or
test
xor
ret
mov
jl
out
jne
cmp
stc
mov
test
scas
cmp
sub
lock
inc
add
rcl
cmp
stos
pushf
and
in
lahf
dec
scas
stc
pop
fucomi
xchg
out
jnp
mov
sub
inc
lahf
js
aas
sub
mov
rorb
mov
pop
sbb
in
gs
xor
sbb
pop
add
lret
sbb
push
fbld
repz
int3
and
mov
fwait
fwait
dec
imul
lret
jg
les
out
lods
pop
pop
aaa
dec
and
in
inc
stc
pop
rolb
mov
jmp
add
dec
xlat
mov
loop
sti
notb
mov
out
mov
mov
scas
outsb
sbb
lahf
jnp
mov
lock
faddl
inc
ret
inc
out
idivl
pop
cli
testb
or
cmp
cld
mov
insb
int3
jne
in
test
add
adc
cwtl
dec
out
je
jns
mov
inc
mov
pop
fwait
rclb
bound
xchg
xchg
mov
loope
adc
lcall
inc
out
cli
sbb
test
dec
pop
fidivrs
test
push
lods
adc
mov
ret
mov
hlt
cs
inc
jbe
add
int3
inc
sub
hlt
jle
pop
test
js
dec
lock
test
adc
push
xchg
aad
add
jbe
mulb
cmp
and
push
or
mov
shrb
scas
add
cltd
iret
scas
int3
imul
sti
dec
adc
cmp
mov
cmp
fstpt
push
in
inc
or
cmpsb
in
add
test
lret
shl
cmc
xlat
mov
mull
xchg
std
pop
stos
adc
ret
sub
pop
iret
loop
dec
pop
js
cli
push
push
bound
loop
fdivr
in
cmc
mov
and
mull
fcompl
sbb
inc
dec
and
lahf
lock
movsl
cli
dec
rorl
mov
mov
mov
in
repz
ljmp
cwtl
loopne
lcall
cmp
icebp
dec
repz
ret
addr16
pusha
jno
cli
lds
lods
pop
ret
in
cmp
sub
test
out
repnz
mov
cltd
push
sub
inc
adc
mov
cmp
imul
lahf
xchg
pop
sar
fwait
pop
test
cmp
loope
jbe
clc
sbb
fwait
nop
cmpsb
imul
mov
imul
rcll
imul
lcall
lret
and
inc
xchg
and
cwtl
cld
and
and
pop
lret
push
inc
in
pop
sbb
outsl
add
add
xchg
push
ret
divl
scas
cli
daa
scas
in
jl
mov
jl
jmp
lds
and
cli
pop
xchg
imulb
scas
lahf
push
shr
sub
xor
pop
sbb
clc
xor
lods
lods
cld
mov
cmp
adc
aad
push
out
mov
jns
lahf
out
jge
jae
pop
mov
cmp
subb
ljmp
sub
aam
sti
cmp
fcomi
xchg
shlb
dec
mov
mov
or
cltd
jle
and
ret
fldcw
mov
shl
mov
popf
pusha
jbe
and
or
mov
mov
lock
sub
out
xorb
or
adc
mov
mov
adc
testl
loope
xchg
and
and
cld
and
mov
scas
mov
bound
cld
in
aad
xchg
mov
roll
cld
sahf
in
idiv
jl,pt
std
scas
and
pop
int
push
loopne
clc
jl
sti
jl
adc
sbb
dec
jbe
cmp
mov
mov
jbe
adc
dec
fwait
push
mov
repz
cli
je
ja
pop
inc
cmp
jl
out
jno
mov
adcl
nop
lock
stc
je
mov
ds
mov
je
and
and
imul
out
cltd
outsb
mov
cltd
out
test
and
pmaddwd
mov
imul
hlt
sti
mov
mov
loope
std
mov
sbb
leave
lret
imul
testb
xchg
mov
mov
cld
mov
test
xchg
mov
jnp
mov
and
cld
or
add
dec
push
cmp
mov
dec
inc
hlt
add
mov
and
hlt
in
out
sbb
je
add
push
cld
cmp
push
pop
cld
mov
rcl
fstpt
and
jecxz
push
cmpsb
xrelease
xchg
push
scas
jbe
mov
mov
xchg
mov
int3
je
adc
repz
jecxz
cmp
push
jp
or
and
shr
xchg
in
xor
enter
jnp
mov
pushf
jae
sub
cmp
lods
arpl
fmull
ljmp
fmuls
xchg
xchg
sti
xchg
lods
xor
lock
sbb
mov
insb
fiadds
into
cmp
cmc
notl
scas
add
imul
ja
add
daa
fcmovnb
cmp
loop
fnstenv
mov
or
movsb
mov
sub
mov
in
lock
iret
je
dec
dec
mov
cld
pop
jmp
cltd
xchg
fldl
mov
loop
aaa
jmp
jmp
das
enter
inc
pop
mov
pop
cmp
sarb
jge
mov
inc
loopne
scas
sti
negl
inc
mov
arpl
mov
or
test
test
jg
xlat
lcallw
xchg
sub
mov
clc
pop
push
push
hlt
cli
cltd
cpuid
add
mov
notl
mov
orl
jmp
imulb
aaa
bound
je
pushf
dec
iret
mov
fdivr
repnz
pop
dec
mov
sbb
mov
jle
xor
rcrl
jmp
scas
pop
out
push
mov
or
inc
sti
js
cli
repz
cli
lods
mov
ficoml
or
cli
mov
cmp
cmp
cmp
aaa
cli
inc
in
push
dec
pop
jle
push
aas
fstpt
dec
push
mov
xor
in
int3
test
rcl
in
dec
xor
in
in
mov
cld
leave
jmp
in
push
filds
jbe
cld
movsb
lret
mov
mov
inc
mov
xchg
fwait
xchg
lcall
nop
pushf
mov
nop
add
repnz
fwait
mov
popf
lea
sbb
nop
aas
or
mov
lcall
mov
rol
cmpsb
in
je
icebp
sahf
mov
fldl
xchg
mov
xchg
lock
in
xchg
mov
sub
hlt
cld
loop
jnp
test
add
rcrl
test
xchg
jecxz
lea
cwtl
fidivs
mov
xchg
mov
cli
xchg
es
adc
push
aam
lcall
in
cld
scas
mov
xchg
xchg
out
pushl
jb
xchg
nop
inc
adc
jns
mov
testl
mov
adc
mov
cmp
push
xchg
dec
sahf
dec
mov
mov
lock
or
lock
jo
out
jb
shlb
sub
das
inc
ljmp
vfrczss
lods
cmp
xchg
xchg
repz
mov
popf
push
loop
ds
jmp
jo
int
xor
jmp
les
shrb
out
xchg
sahf
mov
out
fsubrp
mov
adc
adc
or
les
xchg
push
inc
pushf
shl
test
mov
lods
mov
cmc
hlt
lock
inc
push
std
fmuls
and
cltd
cmp
lods
in
call
inc
mov
xchg
lcall
mov
mov
and
jp
lahf
movsb
ror
mov
pushf
nop
mov
es
push
sahf
sbbb
stos
mov
cltd
xchg
adc
dec
xchg
pop
lods
ljmp
sbb
xchg
inc
mov
sahf
pushf
jne
call
ljmp
push
lcall
in
les
std
jp
pop
out
outsb
jbe
and
xchg
iretw
mov
in
data16
mov
xchg
lock
fsubrs
idivb
std
testb
mov
mov
into
lret
test
fdivs
mov
ljmp
add
test
ja
push
arpl
xor
pop
into
add
ljmp
add
add
int
int
int
int
int
int
int3
ljmp
int3
add
add
mov
pusha
int3
push
int3
add
icebp
lret
loopne
lret
jae
gs
push
lret
out
lret
movsl
lret
jp
add
or
lret
sti
leave
out
leave
out
pushf
leave
popa
leave
cmp
sub
adc
pop
cmpsl
add
add
leave
jmp
in
fcmovne
aam
leave
enter
enter
enter
enter
fadd
int
cmpsb
add
add
sahf
xchg
movl
inc
loop
mov
les
add
add
test
ret
rol
ret
xchg
ret
dec
ret
inc
ret
aas
ret
fadd
enter
ret
push
add
ret
jno
imul
ret
push
ret
or
jp
add
lock
arpl
es
or
insl
jp
clc
dec
nop
inc
push
pop
mov
jp
movsl
mov
jp
inc
push
jp
fdivrl
jp
fcoms
and
into
popl
jp
or
ret
and
push
and
and
dec
inc
add
je
pop
cld
and
add
aaa
hlt
out
scas
jecxz
or
bound
sub
mov
mov
stc
inc
arpl
std
add
leave
stos
xor
ljmp
lahf
popf
jle
test
pop
mov
lahf
add
aas
fcoms
xor
repz
and
stc
addr16
arpl
aaa
fmuls
add
pop
xchg
gs
jnp
sub
lds
sti
and
cld
aad
lods
es
xchg
gs
mov
inc
and
mov
stc
add
cld
pop
test
lret
mov
xchg
cld
mov
xchg
xorl
inc
das
and
add
int
and
mov
scas
cltd
subl
les
dec
cld
xor
pop
cmpsb
leave
stc
and
xchg
gs
xchg
popf
lea
gs
dec
aas
xor
adc
pop
testl
gs
adc
arpl
jne
mov
pop
jmp
idiv
or
pop
cld
mov
fcomip
adc
cwtl
es
lret
bound
sub
in
sbb
mov
ror
ror
push
cld
sub
mov
sbb
mov
mov
jmp
int
lret
mov
lret
mov
sub
mov
mov
imul
lret
mov
dec
inc
xor
add
xchg
sbb
sub
pop
stos
dec
cmp
jmp
enter
push
jmp
xor
addr16
dec
pop
and
imulb
in
sahf
mov
je
fistpll
dec
jo
ret
in
test
call
mov
xchg
sub
stos
scas
mov
inc
in
out
test
mov
mov
decl
cltd
pushf
mov
add
cmpsb
lods
mov
stos
test
lods
mov
jge
out
int3
pop
cltd
mov
mov
and
test
cwtl
xchg
icebp
ja
pushf
xor
mov
dec
mov
jle
out
xchg
sti
ss
idiv
dec
jl
jmp
cld
jl
jae
out
xor
xor
mov
sarl
pop
out
cmpsl
xlat
std
fisttps
jb
adc
rcr
fists
shrl
fisttps
std
jnp
mov
jmp
dec
cld
out
leave
cmp
rcrl
fildll
in
clc
notl
cld
add
jge
cld
in
add
mov
cld
mov
insb
mov
dec
loopne
jnp
daa
fwait
mov
fisubrs
incl
pop
negl
int
hlt
jg
sar
iret
dec
dec
mov
fucomip
cmp
cwtl
mov
test
xchg
incl
in
push
ljmp
pushf
decl
adc
cmpsl
sahf
loop
mov
loopne
call
inc
add
movsb
inc
daa
add
mov
mov
cwtl
hlt
mov
mov
ficompl
lock
dec
decb
enter
cmpsl
cld
invlpg
inc
mov
call
in
jmp
mov
mul
mov
movsl
mov
add
call
xchg
mov
xchg
fistl
movsl
xchg
and
mov
int
loope
daa
lahf
lret
daa
repz
pop
mov
in
rcl
mov
clc
jae
movsb
out
in
mov
stos
mov
xorl
push
xchg
int
into
incl
int3
lds
xchg
jb
inc
pusha
hlt
rcrl
xchg
add
imul
popl
jne
add
pop
mov
lock
lock
sub
idiv
out
lods
add
daa
xsaveopt
daa
jle
push
ret
es
add
aad
call
in
xor
jl
testl
cmp
je
fldt
cltd
out
inc
adc
cli
je
adc
mov
imulb
divl
pop
dec
sbb
xchg
stos
repz
cld
ffreep
mov
fcmovnbe
data16
cmc
pop
jb
jmp
stc
jb
insb
nop
or
xor
or
fninit
jb
add
xchg
jb
ficomps
call
cmc
push
mov
cmp
lock
jmp
cmpsb
icebp
fdivp
mov
cltd
out
fcomip
divl
shl
loopne
fwait
xchg
in
cli
add
fwait
jl
sub
clc
loopne
hlt
out
and
les
and
cmp
nop
in
lret
adc
sbb
and
inc
out
xchg
add
jle
adc
xor
mov
stc
jo
xor
in
xchg
js
add
pushf
and
into
sbb
or
xchg
fcomps
push
dec
inc
fs
fs
inc
inc
in
popf
in
dec
adc
les
incb
xchg
in
out
inc
dec
push
les
in
in
mov
stc
and
sbb
frstor
sbb
pushf
inc
inc
and
xchg
xchg
xlat
mov
mov
push
sbbl
pusha
jge
dec
xchg
cmp
cmp
inc
ds
sub
inc
loop
adc
fdivrs
inc
test
repz
in
mov
add
and
in
fwait
sarb
stc
mov
lods
inc
inc
jle
in
adc
lcall
jle
test
dec
pop
adc
imull
lock
int3
inc
into
les
or
adc
sahf
dec
cwtl
fdivr
and
xor
add
leave
mov
in
sbb
pusha
add
push
in
fwait
daa
ss
jbe
sbb
and
add
adc
inc
mov
dec
jl
cld
in
lods
je
dec
outsb
xchg
jl
mov
fistps
or
xor
in
push
ljmp
jns
push
mov
incl
adc
pop
call
in
test
jne
xor
inc
fists
out
jnp
or
or
insl
add
div
mov
decl
add
cmp
cmp
cmp
scas
loopne
cmp
std
cmp
jo
cmp
mov
sbb
or
lods
jo
loopne
adc
mov
loop
inc
dec
call
in
lcall
inc
js
inc
mov
loope
inc
inc
jmp
in
mov
dec
xor
push
inc
jl
lods
scas
je
cmp
out
jae
mov
incb
dec
stc
inc
cmp
sahf
pushf
in
cmpsb
pusha
inc
cmp
in
sbb
xchg
aas
jns
mov
ret
jecxz
sub
in
inc
test
mov
push
jnp
mov
sahf
fnstenv
out
dec
jp
test
fmul
in
xchg
cwtl
and
into
fsubs
sbb
les
jae
or
add
pushf
int
hlt
shl
and
ss
lock
xchg
es
sub
mov
and
in
push
mov
adc
and
or
in
lret
pusha
lret
popf
mov
in
sub
mov
fisubrs
xchg
sub
sbb
inc
in
ficoml
and
dec
cld
lcall
add
cmp
jnp
in
mulb
or
sbb
push
stc
cmp
pop
test
in
inc
and
pop
lods
pop
inc
clc
sarb
popl
mov
cltd
fldlg2
orb
inc
popf
or
in
add
xlat
fsubs
pusha
pusha
dec
nop
mov
cmp
lahf
mov
aam
fucomip
js
mov
add
clc
sbb
add
ret
push
adc
mov
fcom
in
and
cli
inc
and
and
pop
out
push
add
shlb
mov
or
shr
dec
and
mov
je
adc
in
test
or
xchg
xchg
add
mov
jo
cwtl
or
add
test
jnp
inc
or
bound
jge
bound
xchg
cmp
dec
xchg
and
inc
adc
mov
in
in
jecxz
shll
xor
adc
fldl
lods
fistpll
cli
inc
mov
and
and
scas
loope
mov
fwait
mov
and
xchg
popf
or
icebp
mov
rcr
out
cmp
add
adc
test
dec
sub
into
int
lret
lret
add
mov
sub
xor
pop
dec
call
dec
push
dec
add
xor
xor
xor
adc
and
push
pop
mov
jge
xchg
mov
divl
fadds
inc
adc
out
ds
jl
mov
mov
adc
xchg
mov
mov
out
int3
jecxz
enter
add
push
xchg
hlt
dec
xchg
lock
hlt
jae
adc
ja
and
ficoml
mov
push
lock
dec
hlt
push
dec
lock
sub
hlt
add
dec
sbb
arpl
mov
adc
cmpsb
scas
aaa
jge
xor
mov
test
pusha
adc
pop
jns
sub
push
pop
mov
jle
cmpsl
push
xchg
mov
push
pushf
sbb
push
mov
jg
imul
mov
hlt
pop
mov
jl
mov
imul
mov
and
insb
sbb
jmp
add
cmpsb
call
mov
fstp
mov
mov
mov
dec
lods
outsl
xchg
mov
mov
movsb
add
inc
adc
cli
scas
xchg
xchg
lret
repnz
jbe
sbb
mov
jb
cmp
add
sub
jl,pn
cli
jbe
cmp
repz
pop
xchg
lods
inc
and
mov
xchg
adc
adc
pop
pop
int3
xchg
int3
pop
add
test
mov
mov
sbb
sti
xchg
push
enter
test
mov
fs
aaa
cld
inc
icebp
hlt
testl
call
lds
test
fcmovne
add
repz
inc
ss
xchg
mov
out
roll
xchg
add
mov
decb
lcall
test
push
inc
adc
rolb
cmpsb
addl
xchg
fidivrs
enter
mov
pop
aas
scas
out
mov
push
pop
sti
pop
out
sar
pop
fnstsw
jne
pop
in
pop
fidivrl
js
jle
iret
pop
aas
jg
mov
cli
in
pop
cmpsl
lds
lret
outsb
pop
jge,pt
aaa
nop
cmp
jle
and
ret
cld
xor
mov
out
cmp
push
insl
push
scas
shrl
mov
scas
rorl
scas
xchg
cmp
push
cmc
repnz
out
sub
mov
mov
cwtl
adc
and
add
les
mov
mov
mov
add
sbb
mov
or
adc
add
out
sbb
jmp
icebp
shl
mov
jl
push
scas
cmpsl
adc
out
sahf
jns
cld
add
jl
cmpsb
adc
mov
icebp
imul
data16
xchg
sarb
add
push
pop
jb
fldt
add
sti
jmp
fstl
lret
inc
adc
dec
stc
mov
je
mov
idivl
leave
test
mov
loopne
clc
rcl
mov
cmpl
xchg
push
mov
out
add
jns
lds
data16
cvtps2pd
cltd
pop
inc
pop
repz
inc
out
pop
pop
inc
das
pop
out
or
in
cli
andl
inc
or
jg
cmp
mov
sub
dec
jb
roll
inc
icebp
inc
dec
rorl
fcompl
pop
inc
lock
arpl
out
sub
jno
cli
int
sub
jmp
xlat
data16
in
add
test
or
pop
cmc
fwait
mov
in
fdivp
jns
je
mov
add
shlb
mov
repz
les
scas
je
xchg
or
adc
loopne
dec
and
clc
pop
adc
out
enter
mov
and
std
or
mov
dec
jno
push
jbe
rol
out
cmpsb
lea
xlat
cmpl
cmpsb
and
aaa
mov
je
jg
sub
addr16
mov
push
ret
idiv
sub
in
test
jl
mov
sub
jmp
xchg
std
test
push
jbe
mov
cmpsb
lock
jle
ljmp
iret
scas
scas
cld
mov
aam
mov
incb
mov
rcrb
int3
ds
inc
fstps
pushf
incl
das
or
repz
lds
cli
hlt
jecxz
stos
fidivrs
sets
push
aad
fiadds
sbb
inc
loop
dec
in
imul
loopne
sbb
lea
mov
nop
sbb
cld
cmp
or
popa
ljmp
cld
cmp
iret
jne
and
fwait
xchg
popf
test
les
sbb
imul
mov
adc
dec
xchg
sbb
lcall
mov
aam
shrl
jg
mov
fcomps
fidivrs
scas
jnp
jg
aaa
faddp
filds
inc
mov
scas
inc
xlat
xrelease
mov
xchg
stos
rcl
sahf
pop
jg
ficompl
mov
pop
fwait
push
mov
out
sub
inc
negl
call
or
out
outsl
inc
ret
xchg
add
ja
arpl
lcall
xchg
pop
iret
mov
xor
lret
icebp
movsb
ljmp
fsubp
adc
dec
cmp
mov
popa
jecxz
frstor
adc
and
ja
adc
in
jno
jae
pushf
ljmp
xor
fidivl
fcoml
out
mov
adc
xchg
pop
lock
xchg
xlat
out
cmp
ret
xchg
movsb
int3
out
sub
mov
pop
fwait
andb
scas
scas
and
jl
and
cs
add
or
mov
xor
or
mov
fldl
incb
and
mov
xchg
xor
bound
aaa
mov
outsl
jns
fsubrl
xor
iret
lcall
xor
sbb
in
mov
in
call
arpl
fists
sub
pop
orl
in
add
mov
je
or
mov
mov
fiaddl
push
inc
test
jnp
les
add
jbe
movsbl
je
fsubrl
xchg
das
add
iret
mov
add
je
les
repnz
pop
sahf
cmp
lock
inc
aas
cmpsb
outsb
cmp
jecxz,pt
into
in
dec
nop
cwtl
andl
test
mov
scas
stc
or
fstpt
sub
add
jbe
sub
mov
push
add
add
loopne
hlt
in
shr
pushf
mov
scas
ret
out
jl
aaa
outsl
repz
lret
xchg
jg
cmp
lock
inc
ja
xchg
push
jmp
xchg
out
les
les
mov
test
ret
testb
push
aas
and
xor
enter
pusha
jge
push
push
push
subb
xchg
fs
shl
dec
mov
jbe
ret
arpl
in
sbb
cmp
aam
into
sti
movsb
adc
pop
sti
fdiv
arpl
scas
push
scas
cld
shl
push
nop
dec
add
cmpsb
mov
stos
hlt
pop
or
mov
lods
or
fdivr
push
std
int
scas
jg
pop
mov
test
ret
popa
sub
push
pop
cmp
popa
das
mov
fildll
popa
jnp
push
addr16
lea
fisttpll
popa
jle
pop
cmp
popa
scas
fwait
test
in
out
movsl
ret
aaa
test
mov
popa
push
cmpsl
add
xchg
adc
fiadds
cmpsb
mov
int3
ss
inc
or
jno
lock
into
fldcw
mov
push
lea
adc
sub
dec
add
jl
pop
jbe
imul
mov
int
adc
and
out
repz
jle
mov
jmp
mov
cmp
pop
je
je
ds
ret
jl,pn
cli
or
add
les
mov
add
ds
loop
mov
push
mov
test
mov
pop
and
jmp
nop
pop
mov
stc
call
jp
in
jb
in
mov
out
add
sub
pop
dec
adc
cmpl
hlt
sub
add
xchg
lret
sti
mov
and
shrl
int
cmp
cmp
dec
cli
jle
test
movsb
mov
mov
or
cmpsb
mov
stos
ret
or
faddl
icebp
sbbl
out
fmull
add
out
jb
call
push
repz
ds
sti
cld
or
cs
scas
or
hlt
or
cld
out
mov
fiaddl
jb
enter
adc
sbb
jmp
xchg
or
shl
cmpsb
add
and
cli
cmpsb
jmp
and
adcb
ds
jmp
pcmpeqb
fmull
inc
adc
xor
and
lock
and
adc
inc
ds
jge
ds
hlt
or
or
mov
mov
inc
cld
and
in
and
or
orl
je
adc
add
dec
inc
jmp
stos
push
andl
inc
dec
shl
cld
in
stos
in
aad
js
sub
and
sbb
jmp
jge
inc
mov
movsb
sahf
sub
and
inc
push
mov
pop
jb
sub
fisubl
aam
leave
idivl
mov
ror
loope
push
add
or
push
pop
aam
adc
out
aam
arpl
fnstcw
ds
and
xchg
jl
lret
pop
daa
daa
addr16
adc
sub
das
and
nop
and
and
xlat
loopne
or
dec
jb
rclb
sub
mov
xchg
aad
xlat
aas
sti
dec
movsb
stos
xchg
pusha
sbb
out
sar
aad
lret
sahf
daa
stc
sub
and
daa
cli
inc
sub
inc
mov
pop
adc
stos
cmp
fcoml
sub
out
outsl
xchg
adc
sub
cltd
push
icebp
xchg
repz
and
repz
or
mov
push
push
test
mov
cld
stos
add
add
sub
adc
pop
mov
rolb
arpl
jno
xchg
movsb
je
ret
int
test
in
fcomi
js
and
cmp
cmp
jmp
add
std
fdivp
dec
mov
cmp
cmp
stos
mov
sub
stos
call
call
adc
in
cli
hlt
lret
pushf
adcl
andb
mov
call
cld
or
movsl
xchg
stc
scas
pop
lea
mov
scas
movsl
mov
or
sti
ds
and
in
cmpb
cmp
push
adc
xchg
xchg
dec
jb
mov
inc
movsb
or
xchg
dec
push
or
jae
dec
js
aam
sub
js
dec
or
jns
jmp
std
lahf
jo
test
sarb
das
jo
fisubl
and
inc
loopne
sbb
sub
icebp
pop
jl
push
jp
inc
and
test
shll
sub
xorb
inc
pop
insb
push
push
dec
and
inc
inc
mov
das
dec
sbb
push
ficoms
outsb
pop
nop
and
cmp
cld
sub
hlt
shrb
dec
enter
jo
in
cmp
mov
int
or
js
sub
sub
icebp
jl
bound
negl
es
scas
dec
adc
je
jmp
mov
mov
mov
sub
andb
and
mov
xchg
jo
dec
cmovle
icebp
lcall
fstpt
aaa
or
je
add
or
es
nop
cwtl
sub
xchg
adc
xor
cmp
mov
jo
bnd
jne
aad
jae
adc
fs
mov
das
out
push
xchg
push
pop
das
mov
ret
sti
push
loop
inc
dec
add
int3
add
jle
gs
sbb
mov
jge
jge
roll
xchg
rcr
bound
leave
dec
out
mov
int3
lret
enter
repz
sbb
fildl
push
repnz
or
dec
adc
je
leave
cmp
mov
inc
iret
xor
in
push
xor
mov
lea
xchg
lcall
mov
arpl
xor
lahf
mov
or
mov
add
lods
cmpsl
dec
stc
add
popl
inc
inc
sbb
cmpl
sub
iret
cmp
or
or
cmp
pop
daa
push
cmp
adc
repnz
mov
cwtl
int3
and
sub
xchg
adc
and
sbb
shll
push
xchg
imul
pusha
cmpsb
inc
ja
adc
fcoml
sub
shl
mov
cmp
sbb
mov
push
and
inc
or
xor
add
lods
sbb
xchg
loop
adc
push
inc
push
adc
repz
lcall
xlat
imul
nop
int
xchg
xor
out
mov
xchg
in
das
in
push
stc
hlt
loope
xchg
pop
dec
push
out
int3
jg
dec
dec
ret
mov
mov
jnp
pushf
sbbl
push
pop
fsubrl
out
test
xchg
repnz
in
test
loopne
pop
insb
add
adc
ljmp
sbbl
cmp
movsb
lcall
sbb
lcall
insl
xor
jo
mov
jp
xor
and
lcall
adc
lock
or
loop
out
adc
mov
jns
sbb
adc
mov
push
inc
jl
and
push
nop
mov
stc
xchg
dec
or
shlb
add
pop
sbb
add
cmc
test
out
outsb
and
les
pop
adc
or
mov
loopne
out
divl
mov
subl
sub
sub
daa
pop
lret
xchg
adc
adc
daa
pop
xor
and
sub
aad
in
ds
cmpb
das
sbb
outsb
sub
adc
into
lods
add
jbe
movsb
adcb
mov
push
stos
movsb
pop
jbe
outsl
stos
mov
repz
repz
mov
mov
stc
je
aaa
das
fnstcw
mov
jg
add
cmp
xchg
xchg
ja
in
in
scas
or
cltd
mov
les
xchg
leave
or
xchg
jb
xchg
and
mov
and
xchg
outsl
xor
ds
adc
out
icebp
clc
out
jnp
and
les
out
scas
mov
loope
loopne
pop
arpl
scas
fsubr
xor
clc
pop
cmpsb
lods
lods
and
out
cmp
xabort
aam
test
std
cmpb
mov
aaa
mov
mov
add
adc
xchg
or
pop
ljmp
test
pop
cmpsb
in
fld
idiv
lret
pop
std
mov
in
lods
daa
xchg
mov
daa
add
sub
aas
cmpsb
leave
xchg
inc
cmp
jmp
inc
mov
push
hlt
stos
lcall
fs
les
mov
cmc
cli
clc
jo
gs
add
sbb
icebp
mov
packssdw
push
testb
movsl
shl
in
mov
and
test
loopne
lods
jmp
cmpsl
mov
out
pop
in
jo
out
pop
scas
repnz
nop
push
dec
or
fcoms
pop
das
out
das
loop
dec
cltd
dec
das
xchg
jg
sbb
adc
sub
sahf
sub
daa
lcall
pop
lcall
stos
sbb
nop
ret
movsb
xchg
and
mov
mov
aas
mov
xlat
jbe
jbe
mov
pop
in
lahf
lea
inc
fdivp
or
mov
jle
mov
stos
dec
inc
xchg
xchg
mulb
jge
test
xor
mov
sti
dec
jmp
pop
in
movb
jno
push
pop
adc
cmc
pop
and
iret
ljmp
jecxz
lahf
imull
cmc
mov
je
xor
out
mov
push
xor
pop
dec
not
scas
hlt
dec
imul
rorl
lret
xor
or
add
jb
jle
inc
jp
xchg
and
cltd
inc
icebp
enter
jp
lods
scas
loope
aam
hlt
xchg
pop
cld
scas
rcr
in
aaa
jmp
into
hlt
aas
pop
loop
mov
fcoms
shll
xchg
cli
mov
je
xlat
or
test
cld
test
fneni(8087
cmp
in
test
sarl
jg
into
sbb
cmp
pop
adc
and
les
mov
xor
inc
les
add
out
cltd
loope
lea
lds
cltd
xchg
dec
in
je
sti
cltd
mov
mov
push
xchg
and
je
outsb
xor
xchg
dec
mov
sbb
xchg
addr16
clc
mov
std
add
mov
mov
outsb
cmp
jne
dec
repnz
pusha
inc
and
test
mov
dec
jle
mov
jno
mov
mov
mov
sti
ret
rorb
sbb
adc
lods
jb,pt
js
pop
aad
es
dec
cli
xor
fildl
push
aas
push
fwait
cli
ss
jmp
cmpsl
aad
or
iret
dec
aas
cld
aaa
rcrb
jl
mov
and
and
jmp
jmp
test
xlat
ret
stos
and
push
inc
sarb
in
lret
sub
dec
jge
dec
xchg
std
xchg
cmp
daa
jp
jns
dec
jae
jp
lcall
adc
mov
clc
enter
rcrl
xchg
jecxz
outsl
icebp
rorl
dec
bound
les
push
leave
push
mov
repz
test
jge
fisttps
sbb
fiaddl
push
jp
add
lret
fdivs
jo
cli
test
mov
adc
pop
inc
lret
jno
test
inc
xor
shll
xchg
rol
in
daa
pop
mov
push
stos
iret
add
dec
inc
rclb
dec
adcb
movsb
ds
push
loopne
pushl
sti
call
negl
xchg
popa
push
cmp
sysret
outsl
filds
push
hlt
sbb
arpl
jb
sub
or
cld
arpl
mov
adc
add
xor
dec
fimuls
clc
sti
mov
pop
xor
mov
outsl
sub
and
mov
sarb
stc
call
out
jae
out
fstl
dec
sbb
icebp
cli
mov
sub
sbb
jecxz
clc
pop
jno
adc
pop
xlat
push
pop
push
sbb
add
negb
aas
jmp
fdivrs
das
xchg
mov
notb
inc
add
push
jge
dec
shr
inc
ds
ret
jbe
insb
out
test
adc
mov
aam
leave
je
lods
jae
and
in
xchg
filds
jecxz
nop
test
inc
dec
cmpl
and
lods
add
in
test
xchg
mov
cmp
mov
mov
in
daa
sub
xchg
xor
shrl
xchg
push
xchg
cld
push
mov
xchg
dec
cwtl
dec
test
dec
mov
mov
push
lcall
pop
push
push
inc
faddl
cld
inc
xchg
ja
lcall
xchg
xchg
nop
lea
lcall
lcall
scas
sahf
imul
lcall
mov
test
in
adc
femms
or
and
or
aas
sarb
sub
mov
dec
adc
idivb
lret
xor
shll
iret
iret
iret
iret
lds
dec
rol
xor
pop
inc
push
sarl
bound
fstpl
test
and
cmp
sahf
jbe
xlat
jg
push
dec
cmpsb
xchg
add
fcmovnb
cmpsb
and
lods
out
or
shll
ljmp
js
adc
shld
sub
inc
push
arpl
out
pop
rcl
push
and
adc
xchg
daa
mov
add
xorb
ret
loop
and
divb
imul
adc
nop
cmp
int
jo
dec
sbb
jb
out
movsb
or
ds
ss
mov
insb
push
in
addr16
mov
mov
sub
cs
fstpt
add
jne
ret
add
add
insl
subb
scas
adc
push
push
adc
enter
ds
sub
cmpsb
vcvtss2sd
jecxz
xor
cmp
add
lea
iret
push
js
and
dec
xchg
push
out
data16
jge
outsl
jge
xorl
addr16
out
or
dec
out
or
or
pushf
clc
pop
lret
inc
stos
mov
dec
jp
les
daa
xlat
jne
xchg
lret
mov
frstor
and
in
lock
lods
les
pop
rorl
xchg
cmc
imul
popf
or
sub
and
scas
push
and
jle
test
mov
fsubl
and
movsb
addr16
push
shlb
icebp
jge
cmp
sub
inc
in
xchg
or
cmpsb
inc
dec
xchg
lods
es
idiv
ss
iret
sbb
cltd
sub
std
shlb
out
xchg
pop
inc
call
mov
add
jmp
add
cmpsl
mov
push
or
and
lahf
mov
in
cwtl
add
jno
notb
cld
movsl
pop
mov
xor
jne
je
stc
pop
ror
mov
xor
xchg
mov
cmp
and
cli
in
mov
jb
push
inc
loopne
jns
rcll
clc
jge
and
jns
aas
mov
lcall
pop
or
in
mov
pop
ljmp
mov
dec
add
pop
mov
jl
fisttpl
xchg
daa
xchg
fists
pop
mov
jne
mov
test
daa
mov
and
js
sub
inc
jmp
aas
jl
test
js
test
flds
repz
jnp
fsubrs
sbb
adc
cli
in
xchg
push
pop
mov
push
or
jbe
mov
pop
imul
xchg
shll
pop
xchg
test
dec
jle
sti
cmp
cmp
jge
ds
xor
leave
je
test
rolb
jno
notl
idivl
mov
js
jo
arpl
call
push
stc
std
pushf
dec
cmc
sub
mov
sarl
pop
loopne
add
outsl
sub
jecxz
sub
insb
pop
sbb
imul
adc
add
jl
in
pop
jge
decb
add
push
fcmovnbe
cld
cmp
xchg
scas
xchg
fwait
push
cmp
and
xchg
imul
ljmp
mov
clc
pop
aaa
fistpll
or
mull
clc
fbld
cmc
mov
popa
mov
push
stos
loop
pop
fcomi
mov
sti
jecxz
lcall
pop
lahf
jge
push
pop
xchg
gs
xchg
xchg
sahf
mov
into
fsubrp
imul
pop
jbe
lods
xchg
xor
lcall
xchg
inc
push
rcrb
mov
pop
sub
cltd
std
iret
stc
dec
xchg
nop
sti
scas
pop
jecxz
mov
cmp
loope
ss
data16
addr16
outsl
mov
stc
nop
dec
out
adc
add
or
aaa
movsb
cmpsb
mov
mov
fstpt
daa
js
js
js
int3
aaa
fistpll
sarl
pop
xchg
das
jecxz
and
inc
jmp
in
push
out
aam
js
sbb
mov
in
std
loope
mov
stc
std
das
gs
shr
xlat
decb
sub
mov
out
push
aad
js
and
repnz
pop
in
pop
test
cmp
sub
lret
mov
je
ja
mov
and
mov
aam
pop
xchg
movsb
out
pushf
dec
jmp
mov
cmp
add
loopne
mov
jb
outsb
push
ds
imul
scas
lcall
sub
imull
out
fmuls
pusha
adc
sub
pop
jmp
jg
mov
std
dec
adc
push
pop
out
mov
lods
ror
inc
stc
sbb
adcb
push
jg
mov
mov
aas
inc
scas
push
mov
test
inc
fldln2
pusha
ja
jg
lret
adc
js
out
pop
jecxz
or
and
pop
add
push
leave
es
rol
fcmovnu
cld
nop
or
or
add
pop
fstp
or
sbb
add
mov
fwait
daa
daa
fwait
ud1
ljmp
insl
ds
sti
insb
ds
in
mov
mov
rcll
and
jbe
jae
ret
outsb
and
add
pop
rcr
fistl
adc
inc
jp
cltd
out
or
nop
ds
xchg
call
pushf
adc
jecxz
outsl
sbbw
in
dec
mov
and
ret
xchg
rorl
std
stc
cmp
mov
cmpsl
call
mov
mov
and
sahf
mov
mov
cmp
adc
les
lahf
loop
fidivrl
lock
test
js
pop
xor
ret
or
icebp
jbe
and
in
out
mov
add
pop
dec
hlt
fsts
dec
imul
addr16
xor
sbb
mov
add
rcrb
jmp
shlb
aam
fdivrp
orl
and
loopne
stc
sbb
mov
sahf
test
jno
icebp
inc
es
scas
mov
cmp
mov
add
out
pop
out
or
into
in
aas
mov
jnp
and
movl
and
inc
daa
mov
shrl
mov
dec
jle
xchg
addr16
ret
ficompl
imul
clc
popa
in
pusha
mov
adc
hlt
pop
in
pop
mov
pop
in
pop
pop
sub
das
lret
pop
pop
cmp
push
mov
lret
push
push
clc
push
call
sub
dec
lock
call
mov
lret
mov
dec
dec
dec
fiadds
sub
out
in
inc
xchg
mov
leave
cmpsb
popf
call
mov
das
cmp
cmp
out
mov
cmp
shll
ret
xor
adc
push
adc
xor
mov
push
sub
sub
sub
sub
sub
jl
adc
daa
es
inc
and
dec
xchg
inc
push
and
push
fldcw
xor
ret
lret
mov
mov
notl
inc
jns
mov
fcoms
in
adc
pmulhuw
into
or
in
les
pop
inc
push
gs
fiaddl
loop
call
mov
shr
pop
mov
into
jae
test
mov
rol
push
iret
mov
xor
and
in
hlt
movb
adc
cld
add
test
lock
adc
aam
movb
lret
ja
jb
loope
scas
stc
das
outsl
mov
jb
jo
xor
scas
repz
jae
mov
jge
das
mov
scas
ss
dec
mov
xchg
iret
mov
pop
leave
mov
mov
cmp
and
out
jl
je
stc
in
sub
ret
cmp
ljmp
das
pop
push
inc
testb
mov
sbb
mov
jmp
stos
arpl
mov
int
stos
clc
mov
out
in
mov
fidivrs
mov
jne
popa
rclb
aaa
test
lahf
lods
daa
les
test
fcomps
lods
xchg
mov
lock
in
ja
cli
test
sbb
inc
push
mov
in
cmpsb
or
repz
gs
adc
cmp
imul
jns
rolb
je
jmp
dec
mov
inc
sub
jns
push
test
in
test
sti
in
test
cld
fucomp
or
inc
icebp
or
das
je
stc
pop
jl
ret
and
cmp
cmp
dec
je
xchg
arpl
push
out
xchg
movsb
push
cmc
aaa
std
xor
xchg
push
cmpsl
imul
pop
aas
dec
out
mov
sub
mov
xchg
push
aad
cmp
cmp
jbe
jmp
sbb
cmp
jle
jns
dec
mov
mov
push
addr16
and
hlt
push
out
add
and
out
xor
mov
jns
cmp
bound
mov
pushf
jnp
ja
sbb
cs
div
dec
lahf
std
outsl
cmpsb
out
xchg
incb
xor
add
or
cli
ror
add
xor
push
test
sarb
push
fsubrs
mov
xchg
push
hlt
cmpsb
or
aad
jmp
mov
inc
sub
fiaddl
xchg
mov
int
aam
sub
adc
mov
scas
scas
test
adc
aas
leave
jecxz
lods
in
das
cmp
xchg
jmp
je,pn
or
sbb
ja
xchg
sub
mov
or
mov
mov
mov
mov
pop
int
add
push
inc
pop
cwtl
fwait
xor
repnz
sub
jns
mov
pmulhuw
in
or
loop
movsb
pop
xchg
pop
scas
clc
in
mov
sub
mov
mov
sub
mov
test
xchg
mov
mov
push
les
repnz
mov
mov
mov
dec
lcall
lcall
xchg
mov
dec
adc
jbe
jne
je
jae
cld
jb
jno
xchg
sub
mov
gs
inc
inc
arpl
imul
mov
jne
push
imul
data16
outsl
pop
xchg
pop
add
out
mov
sub
hlt
sbb
lret
mov
mov
mov
lea
sub
mov
xchg
xchg
lcall
mov
daa
int
or
imul
aas
jb
int
daa
das
dec
ljmp
loop
xor
sar
test
add
mov
repz
mov
int3
std
add
dec
pop
aad
roll
xlat
jge
mov
idivl
lret
pop
sysexit
jo
hlt
shlb
mov
rcrb
das
ja
nop
scas
cmpsl
aas
lods
scas
pop
call
popa
aad
sub
mov
ja
xchg
pop
loop
xor
push
pop
mov
jg
fwait
add
repz
das
data16
mov
lea
test
loop
push
ja
cli
imul
mov
test
pop
shl
mov
lea
cld
stc
popf
call
mov
xchg
adc
into
int3
cs
in
shl
aaa
pop
push
add
or
inc
int
leave
rorl
cld
aas
mov
cli
outsb
jg
jle
aad
lea
pminsw
popf
idiv
fidivrs
fimull
mov
mov
xchg
dec
stc
sbb
shrl
in
sbb
add
or
cmp
daa
cli
decb
bound
shlb
adc
icebp
mov
loopne
das
pop
mov
cs
mov
int
int3
jb
lds
rorl
mov
cld
pop
lea
xchg
add
adc
mov
adc
xor
setns
lds
adc
es
add
add
pop
and
mov
xor
sub
cmp
cmp
adc
sbb
sbb
mov
out
push
pop
sahf
jle
in
setg
or
cmc
dec
call
jno
fcmovnu
clc
rcrl
pop
xlat
ret
ss
push
in
pop
add
xlat
repz
mov
cmp
inc
aam
mov
test
pop
push
sub
cmp
test
aas
dec
add
lea
jp
stc
pop
xchg
dec
test
loop
iret
pop
lock
jbe
adc
or
push
add
test
popa
add
movb
data16
ja
iret
idivb
xchg
jl
jae
push
adc
pop
repz
in
iret
repnz
in
push
ret
cltd
mov
in
popl
pop
fnstcw
mov
lret
mov
sbb
rolb
jb
sbb
loope
adc
jge
rorb
mov
fcomps
je
jg
cli
ret
js
mov
rorb
pop
push
clc
pop
or
in
cld
jl
mov
lret
std
mov
neg
xor
cmp
push
xor
jecxz
ljmp
icebp
mov
repnz
icebp
fsubl
jns
mov
enter
push
xchg
icebp
aam
jmp
ret
out
add
add
bnd
dec
jnp
popa
sbb
outsb
loop
or
pop
je
mov
jle
pop
jmp
rcrl
mov
cltd
xchg
psadbw
js
lret
clc
add
jle
xchg
lahf
inc
flds
pop
cmp
jnp
push
push
js
std
rclb
aaa
idiv
movsb
in
xor
aaa
lahf
push
jl
pop
and
adc
cmpsb
mov
pop
aaa
out
fwait
clc
cmp
icebp
xchg
adc
sub
gs
xchg
fiaddl
lret
repnz
sbb
lret
lret
lret
shlb
nop
pusha
mov
sub
lret
lret
nop
pop
mov
repnz
fcomps
pop
mov
sti
daa
mov
push
fcoml
and
ret
stos
dec
das
sub
lds
inc
inc
lds
popf
inc
roll
mov
sub
sbb
cmp
mov
popf
aaa
imul
xor
inc
push
push
popf
sub
mov
adc
inc
pop
daa
es
add
inc
push
and
and
and
pop
xchg
lahf
mov
jne
xchg
and
sbb
cmp
aaa
lret
or
or
push
sbb
push
movsb
adc
ror
mov
std
in
mov
mov
jle
jne
cmc
in
adc
icebp
jecxz
clc
or
adc
addr16
mov
push
xor
fcmovb
or
lock
pop
xchg
push
cmpsl
jne,pt
push
sbb
lret
sub
bound
and
insb
jno
jo
scas
sub
push
icebp
notb
push
sbb
push
fstpl
adc
ss
adc
push
pop
out
repnz
lcall
gs
xchg
xchg
cwtl
mov
fnstcw
repz
icebp
and
push
gs
aas
dec
aad
in
mov
pop
push
and
push
pop
lret
cld
in
sub
addb
es
fisubrl
sub
adcl
das
mov
jg
cs
sub
and
aad
jp
lods
jge
aad
mov
out
inc
add
cmp
dec
repnz
cmp
out
ss
sti
jg
xor
xor
pushf
cmp
sub
movsb
bound
scas
loop
loope
jp
add
scas
imul
push
aas
std
in
jne
mov
push
sub
jae
inc
imul
enter
mov
ficoml
hlt
sete
push
negb
jg
pushf
lea
push
ss
or
or
cmp
adc
mov
fsubl
mov
popf
inc
dec
xlat
jecxz
in
mov
and
lock
fwait
jp
or
and
jge
pop
sahf
fs
sub
hlt
out
and
addr16
add
cli
loop
iret
cmc
pop
jbe
mul
jmp
push
xchg
lock
ljmp
inc
lahf
testl
adcl
roll
inc
cmp
pop
addl
cli
sub
pop
inc
mov
cmp
jge
pop
filds
mov
and
clc
push
ljmp
mov
lret
xchg
std
mov
jno
lret
pop
jle
fwait
leave
cmp
out
xor
mov
aaa
movb
aaa
pop
scas
out
cmc
or
cltd
push
je
mul
xchg
fwait
in
aas
mov
jne
xor
mov
pop
scas
sbb
inc
xchg
pop
mov
jg
xor
int
ror
sub
jg
mov
subb
sub
sahf
lea
mov
and
and
notl
shlb
mov
enter
imul
js
sbb
test
iret
xchg
mov
mov
nop
lods
clc
or
push
mov
mov
in
jl
mov
stos
fisttpl
mov
push
pop
add
in
add
ljmp
in
xchg
xchg
xchg
test
ret
fdivr
call
xchg
sub
push
jno
dec
loop
pusha
xor
pop
hlt
and
cld
out
repnz
jge
loopne
sbb
add
aam
lock
mov
xor
lds
adc
xchg
dec
push
dec
add
jp
js
test
shlb
movb
mov
fsubr
icebp
leave
in
xlat
mov
pop
es
lcall
scas
push
aaa
clc
xor
pop
pop
and
mov
cmp
push
sar
scas
std
jns
jnp
mov
mov
fbld
cmp
ja
pop
leave
mov
mov
stc
sbb
in
and
stc
pop
mov
push
out
push
push
cmp
push
adc
adc
xchg
int3
and
adc
pop
out
loope
rorl
or
pop
pop
cmp
ret
rcll
int3
mov
hlt
inc
xchg
jo
mov
pop
ss
xchg
test
add
jmp
lock
xchg
sbb
or
jbe
in
inc
pop
aam
js
in
xor
mov
inc
adcb
cs
int3
hlt
ljmp
repnz
sub
ljmp
ljmp
pop
dec
lods
mov
fistpl
call
add
sbb
jae
stos
lret
xchg
xchg
lcall
jae
mov
lcall
fnsave
fsts
jmp
mov
adcl
in
sub
xlat
xor
test
and
pop
in
dec
shrl
push
icebp
dec
out
mov
push
sti
cmp
iret
scas
lock
out
popf
cmpsb
pusha
out
cmpsl
add
add
adc
inc
adc
mov
mov
out
or
jns
cmp
out
inc
cmp
mov
scas
dec
cmp
cmp
fisubs
cmpsb
mov
xchg
ds
mov
sbb
add
sbb
repz
repz
add
test
cmp
push
aad
mov
jne
mov
jecxz
push
outsb
fsubl
add
cmpsb
inc
and
xchg
and
mov
cmpsb
gs
rcrl
sub
mov
sbb
mov
push
xchg
stc
sub
gs
mov
aam
arpl
sbb
sbb
lea
mov
fwait
xchg
les
cmp
mov
mov
and
dec
pushf
fsubrs
add
sub
mov
dec
xor
daa
aaa
frstor
adc
and
and
add
and
stc
dec
cmp
sbb
sbb
cmp
bound
scas
sbb
sbb
scas
pop
add
add
cmp
repz
fildll
push
mov
ljmp
adc
in
insl
push
mov
add
sub
stc
int3
pop
add
cli
jg
sbb
pop
pop
sub
dec
mov
aas
test
lea
out
push
xchg
xchg
cld
mov
mov
ss
loopne
lods
stos
push
repz
dec
je
test
testl
add
cmc
jp
je
mov
pop
mov
add
fsubr
outsb
push
mov
pop
test
je
mov
jle
leave
dec
shr
cmpsl
pop
bswap
daa
xchg
jle
push
out
aam
sub
add
or
cli
push
int3
cs
cmp
out
and
add
fcmovnb
mov
fsubr
jbe
adc
jl
decb
inc
inc
pop
out
dec
sbb
test
add
push
leave
inc
sahf
cld
xcrypt-ctr
cmpsl
sahf
cmp
cs
mov
and
xchg
mov
mov
ret
lock
mov
pop
xor
ljmp
push
sub
aaa
cmp
mov
repz
jnp
adc
xchg
addr16
jle
mov
inc
aaa
jns
mov
pop
jb
xchg
dec
jge
xor
test
sub
pop
mov
in
sub
adcl
aam
inc
pop
jle
aaa
jns
mov
jmp
pop
sub
xchg
sbb
mov
xchg
dec
repz
repz
test
lret
jmp
xor
ret
fstpt
dec
je
in
xor
iret
push
mov
adc
xorb
je
xlat
fcmovbe
fucomip
lock
repz
jbe
xlat
loopne
sarl
daa
lahf
push
or
in
popa
jmp
xor
xchg
jecxz
mov
jg
jmp
fnstcw
pop
add
sub
stc
inc
pop
jbe
sti
jbe
je
lret
leave
add
je
clc
test
mov
cmp
aas
int3
mov
push
popf
adc
jmp
mov
add
orb
pop
cli
jecxz
jns
imul
andb
mov
in
inc
mov
imul
mov
cmc
sub
xchg
pop
mov
out
jb
xlat
mov
mov
div
pop
inc
mov
inc
push
and
cwtl
pop
cmpsb
cltd
mov
pop
mov
cmpsb
pop
push
or
jmp
xchg
xlat
push
out
jmp
or
ss
mov
lar
ret
pushf
orl
push
mov
jecxz
jmp
add
pop
add
mov
or
movsb
or
jb
out
or
lock
ds
add
int3
adc
je
cltd
xchg
stc
mov
adc
clc
push
stc
push
cmp
test
in
lock
fucomip
fistpll
out
mov
idiv
int
xor
jmp
push
leave
inc
jg
mov
xchg
add
call
andl
popa
fdivs
cmp
scas
cli
push
das
divl
sbb
das
sub
icebp
cs
les
jno
jae
cmp
cmp
mov
ds
cmpsl
out
jnp
mov
dec
cmpl
jg
sub
mov
mov
jge
push
pop
cmp
inc
test
adc
out
or
sahf
loop
movsb
sbb
sub
fadds
ss
and
andl
pop
cmp
xchg
xlat
enter
cld
aas
mov
jg
push
or
clc
repz
or
cmp
loop
pop
adc
clc
les
cmc
dec
call
add
jecxz
test
popa
xchg
je
cltd
add
clc
ds
sub
dec
xor
mov
push
leave
jbe
xchg
stos
push
imul
idiv
mov
test
cmp
inc
and
jmp
cwtl
mov
mov
mov
mov
mov
pushf
adc
xor
leave
push
push
dec
cmpsl
rol
jbe
and
cmp
mov
xchg
icebp
and
in
add
mov
icebp
scas
cwtl
or
and
lret
inc
in
lahf
adc
sbb
out
jecxz
in
leave
sbb
push
and
jp
in
repz
js
jge
xchg
icebp
mov
mov
test
cmp
scas
dec
inc
jp
insb
lahf
out
xlat
jg
rclb
pop
je
iret
cmc
inc
jb
ret
cmp
inc
mov
dec
jp
lock
mov
mov
stos
pop
mov
add
adc
cmp
mov
xchg
outsb
out
lret
ret
scas
mov
lret
mov
out
call
sub
dec
es
decl
fsubp
xchg
mov
jge
outsl
fprem
shrb
sbb
mov
mov
pop
dec
pop
jp
dec
enter
add
scas
cmp
jb
push
enter
xchg
repz
pop
test
out
mov
xchg
jnp
mov
out
out
xchg
cmp
lcall
pop
mov
rclb
shl
lcall
fisubs
movsb
mov
mov
pop
add
mov
je
cmp
sub
sub
pop
cwtl
pushf
clc
mov
pop
mov
out
out
mov
out
adc
mov
mov
cs
clc
out
negb
push
mov
aam
shlb
jg
repz
aam
jg
pop
stc
ds
mov
jne
adc
out
jne
mov
sub
mov
int
repz
mov
add
dec
push
mov
mov
mov
xchg
mov
rorl
xlat
out
sub
iret
sub
ljmp
cmpsb
fidivrs
in
and
mov
xlat
inc
sub
fldt
mov
scas
std
ds
add
and
dec
cmp
aad
cmpsb
sar
adc
jle
in
aad
loopne
jmp
jg
std
mov
sti
out
inc
add
stc
cmp
or
xor
addr16
lret
ja
mov
jl
sar
repz
dec
rolb
push
lret
jne
int
push
iret
addl
xor
push
xor
les
lea
mov
pop
testb
fsubs
add
xchg
and
pop
add
sub
jg
push
out
hlt
icebp
sti
jmp
cwtl
je
lret
adc
jge
subl
mov
mov
pop
das
mov
sarb
mov
clc
or
dec
out
hlt
inc
pop
jecxz
add
xchg
add
add
add
aas
xchg
push
and
ds
repz
dec
mov
pop
cmp
dec
adc
outsb
loop
xchg
in
jl
mov
jns
or
cld
enter
nop
cld
or
jecxz
inc
repnz
cld
cmp
in
call
mov
and
or
pop
fcomi
pop
out
hlt
inc
out
cwtl
xor
and
daa
or
fmul
mov
cmp
loope
repnz
pop
cltd
mov
fdivrs
std
and
mov
jle
jbe
push
push
sarb
into
mov
cmp
aaa
inc
add
push
jecxz
cli
push
fiadds
pushf
lcall
jl
fucomp
ds
in
pop
jg
add
add
pop
cs
clc
xchg
nop
ds
aaa
out
push
inc
push
pop
push
aam
pop
inc
hlt
pop
push
mov
es
cmp
in
loop
lahf
repnz
or
adc
jge
test
xchg
jmp
shlb
push
mov
mov
test
add
and
scas
into
push
in
js
mov
sbb
leave
ret
mov
push
dec
or
ds
inc
ret
leave
sub
flds
mov
or
pop
mov
jg
mov
dec
dec
mov
push
cmp
jb
int3
aas
jl
sbb
and
jle
mov
in
aad
scas
shrb
aas
adc
fwait
cli
pop
loopne
cmp
lahf
shll
out
rcrl
stos
adc
cmp
les
ljmp
rcrb
call
cmp
lret
add
adc
pop
aam
lock
dec
arpl
rcrl
pop
sahf
out
pop
cmp
arpl
es
test
in
xchg
mov
std
mov
orb
mov
inc
adc
aas
push
adc
cwtl
aaa
dec
and
fs
mov
scas
lahf
jg
aaa
fistps
push
jge
outsl
fldl
mov
xchg
loop
mov
pop
in
xlat
xchg
cmc
stos
cmp
jge
xchg
hlt
out
jl
cmpsb
mov
cli
cld
std
mov
pop
repnz
out
ss
lret
stos
push
adc
mov
mov
mov
inc
testb
sbb
out
push
das
mov
push
jmp
addr16
xchg
dec
scas
mov
push
test
loop
mov
clc
xchg
loopne
popa
sbb
pop
mov
mov
mov
repz
and
jbe
push
cmpsb
cli
aas
or
sti
adc
out
adc
stos
jnp
mov
insb
pusha
xchg
jmp
sub
aad
push
jecxz
inc
push
xchg
cs
lahf
lods
and
cmc
sarl
cli
pop
mov
xlat
ljmp
sub
add
cmp
out
dec
mov
add
clc
lods
push
mov
inc
jbe
stc
int3
mov
cld
ds
xchg
mov
es
neg
xor
pop
sahf
or
jno
les
mov
jne
mov
ja
mov
mov
gs
cld
shrb
andl
hlt
hlt
out
mov
mov
push
inc
pop
ret
mov
clc
jg
jle
fsubrp
leave
test
loop
jg
add
les
push
leave
es
push
xchg
add
es
jb
pop
lret
scas
adc
gs
adc
push
sbb
aas
and
add
int3
add
sti
enter
add
mov
add
adc
filds
xor
cmc
dec
ljmp
into
insl
arpl
iret
push
or
xor
int3
dec
or
sub
add
out
xchg
jge
jno
nop
jecxz
repnz
inc
mov
fildl
and
jns
pop
cmp
fcmovbe
push
jmp
pop
lock
into
xchg
popl
or
ret
xlat
popf
stos
lcall
fcomp
icebp
lret
sub
call
and
repz
std
icebp
dec
cmp
popa
lock
add
mov
lret
stos
inc
jo
and
add
pop
mov
push
jmp
mov
xchg
inc
pop
out
push
rorl
nop
ffreep
lea
adc
inc
cwtl
push
jge
icebp
xchg
inc
mov
int3
or
insl
negl
xor
scas
mov
sub
fistpll
lock
pop
jae
pushf
mov
pop
fists
fistpll
jnp
lods
out
jle
cmc
xchg
xchg
out
dec
and
sti
loopne
cmp
incb
xchg
outsl
fcmovnu
cmp
lock
sub
icebp
icebp
mov
fdivrp
inc
jb
pop
cli
loop
pushf
scas
jno
pop
scas
mov
or
mov
repnz
lahf
push
je
or
inc
rolb
jae
cld
xchg
mov
or
aam
scas
shr
stos
aad
mov
mov
and
jmp
and
enter
xchg
stos
ret
ffreep
fwait
adc
cmp
cld
shr
pop
stos
lock
jecxz
in
clc
das
repnz
ja
clc
lds
adc
pop
and
inc
cmp
mov
adc
lods
xor
sub
push
cli
orb
mov
sarb
xchg
jns
cmpsl
pop
out
pop
fadd
add
lahf
jle
mov
std
sub
mov
inc
fcoml
repz
notb
jno
inc
inc
repz
jmp
mov
test
xchg
mov
jp
data16
movsl
imul
jbe,pt
sar
scas
scas
imul
xchg
fwait
adc
dec
cmpsl
hlt
out
mov
add
adc
stc
jbe
dec
lret
lock
cmpsl
cs
sbb
fistpll
push
call
xchg
xchg
insl
pop
sub
std
into
pop
gs
cmpsb
push
jmp
std
outsb
mov
adc
test
mov
in
mov
shl
test
stos
xchg
adc
and
rclb
cld
xor
out
test
jmp
jno
mov
jecxz
mov
andb
jp
xorb
adc
inc
fscale
decb
sar
mov
je
repnz
fbstp
aad
jmp
sbb
mov
leave
cs
loope
mulb
mov
xchg
outsb
lods
or
jecxz
dec
or
loopne
cmp
cmpsl
jle
sub
pop
inc
outsl
cmc
pop
or
es
xor
add
mov
scas
shrl
sbb
outsl
testl
fildll
std
loope
cmp
scas
incl
scas
out
inc
jmp
es
pop
mov
mov
mov
lret
push
cmp
pop
std
add
pop
mov
add
std
push
jg
dec
push
cwtl
cmp
lds
fidivrs
rcrl
inc
scas
mov
add
scas
or
inc
dec
cwtl
push
jnp
icebp
lods
cmp
pop
pop
negl
dec
push
stc
fistpl
push
jmp
repnz
sahf
cmp
push
popf
fimuls
push
mov
stos
insb
push
cli
inc
cmc
cli
and
jno
out
pop
js
lcall
lea
mov
pop
out
jns
cli
push
rcll
mov
push
jmp
in
mov
notl
test
repz
pop
lahf
adc
lret
cmc
sbbl
loope
fistl
pop
and
int
sub
in
jae
sti
clc
lods
xchg
mov
push
out
sbb
sti
push
adc
cmp
cli
mov
out
fistl
push
fmuls
pop
pop
jle
inc
mov
aad
bnd
scas
push
push
ds
out
shl
mov
js
repnz
mov
not
testb
mov
pop
xor
xor
sub
dec
in
sbb
data16
bound
and
xor
pop
into
cltd
iret
movsb
sub
add
inc
out
and
cld
ss
pandn
xlat
idivl
arpl
fisttps
pop
cld
mov
fdivp
xlat
scas
mov
push
fnstcw
mov
arpl
ja
adc
inc
inc
iret
fistpl
lods
xor
mov
push
les
aad
pushf
cld
movsl
pop
fs
jl
pop
int
mov
fnsave
mov
sti
pop
in
faddl
or
int
push
out
cmpl
in
xchg
stc
inc
jmp
test
jb
mov
xchg
test
fisubrl
cmp
incl
scas
mov
scas
pop
lock
outsb
mov
cli
push
lret
pop
mov
adc
sub
int3
and
and
jecxz
pop
sarb
jnp
lea
daa
xchg
mov
inc
scas
mov
mov
js
dec
iret
std
push
mov
add
add
cli
xor
stos
lcall
cmpsl
lds
lcall
sahf
sbb
inc
aas
sub
cmpb
lds
sub
pop
push
in
mov
mov
mov
push
xorl
push
loop
aaa
add
jp
scas
clc
test
loopne
icebp
mov
mov
jns
in
test
ds
cli
fimull
mov
mov
out
out
jbe
xor
pop
cmp
jp
je
scas
cs
dec
imul
stos
das
pop
jb
out
jmp
adc
push
cmpsb
outsl
insb
jbe
mov
aas
jmp
or
mov
hlt
dec
jg
frstor
and
ret
cmp
daa
scas
cli
pop
pop
scas
push
mov
dec
dec
inc
in
fstpt
jge
pushf
rolb
jae
and
add
fsubrp
lods
out
cli
mul
out
out
mov
mov
out
out
mov
out
jns
fnstcw
movsb
adc
in
sub
dec
movsb
dec
jmp
fcomps
inc
mov
outsl
in
aaa
and
lahf
aas
cltd
in
mov
inc
scas
scas
sbb
cmp
lahf
fdivrl
cmp
mov
jno
das
fscale
aam
hlt
fwait
mov
arpl
std
sub
sti
push
les
lcall
mov
sahf
mov
std
daa
fstp
inc
mov
shr
cld
sti
mov
jge
jns
mov
ja
rcr
pushf
out
sub
aam
pop
mov
mull
clc
xchg
cld
jle
mov
dec
lcall
jg
cli
mov
jp
out
xchg
xchg
dec
sbb
add
and
decl
loop
cmpsl
out
pop
sub
mov
scas
mov
sti
cmpsl
out
dec
pop
pushl
testl
shrb
stos
out
lods
lcall
arpl
mov
fsubl
mov
jle
jl
mov
mov
xchg
je
scas
femms
sahf
subb
fimuls
mov
jbe
mov
cmc
mov
mulps
sahf
mov
pop
pop
push
cs
jmp
movsb
nop
popl
sub
in
data16
sarb
xchg
out
mov
scas
mov
dec
mov
push
loopne
int3
jmp
adc
mov
out
add
jnp
and
push
out
enter
cltd
fmull
in
mov
movsb
leave
fldt
out
jmp
jbe
pop
out
xlat
and
add
xchg
mov
arpl
je
ficompl
fisubl
into
mov
jno
ds
fsubl
xor
xorl
xchg
mov
jmp
enter
hlt
mov
outsl
xchg
out
loop
mov
lret
lods
out
out
dec
xchg
mov
fidivrs
sahf
sbb
adc
aad
cmpsb
ficompl
dec
adc
xor
pop
fbld
movsb
jb
mov
aas
and
cmp
mov
movsb
test
pusha
int
mov
in
filds
shr
lock
cwtl
out
repnz
cmp
xchg
lock
pop
lea
inc
adc
stc
data16
mov
xchg
mov
lock
lea
in
sti
and
in
out
mov
cmpsb
scas
lock
leave
mov
mov
pushf
mov
ljmp
cmp
cmc
mov
xorb
and
in
cli
inc
inc
into
xchg
jmp
and
jle
mov
pop
jmp
ljmp
push
xchg
outsb
mov
pushf
mov
sbb
test
idivb
ds
xchg
xlat
mov
std
xchg
adc
pop
inc
imulb
mov
xchg
xor
inc
cmp
popf
and
push
xor
mov
or
out
out
out
push
nop
mov
sbb
xchg
adc
or
jl
ss
jns
cli
nop
hlt
cwtl
std
add
div
mov
cmp
xor
xchg
test
mov
xchg
dec
ljmp
scas
cmp
bound
icebp
ljmp
vmptrst
mov
je
dec
loopne
sub
mov
lock
fwait
and
jmp
test
fisubrs
call
dec
xchg
jmp
mov
cltd
jo
rcl
sahf
mov
mov
adc
mov
xchg
mov
mov
mov
push
std
loop
das
xchg
pop
cmc
test
cmp
cs
ljmp
idiv
cmp
pop
imul
xchg
jge
sub
lock
scas
jg
jg
xor
cmpsl
pop
mov
movsl
sti
notb
or
add
imul
mov
mov
outsl
ds
add
push
shll
sbb
shl
mov
jae
jge
sub
push
sti
movl
out
fcmovnb
xlat
lret
mov
cmpsl
fwait
xchg
xor
add
add
sbb
ret
mov
test
push
movb
popf
lds
inc
lds
lds
les
les
add
add
les
fld
ret
nop
ret
push
ret
dec
ret
cmp
ret
icebp
ret
fadd
rol
daa
ret
add
fadd
scas
shrl
mov
jnp
imul
inc
shll
rcll
push
shl
sar
call
xor
adc
jb
subb
push
iret
add
call
into
test
into
mov
into
jo
pop
into
inc
into
sub
push
into
in
ror
ret
int
int
int
int3
leave
add
ds
ret
int3
xchg
int3
xchg
jle
pop
int3
add
loopne
add
add
aaa
lret
sub
pop
lret
test
lret
mov
addr16
mov
leave
imul
xor
stos
bswap
sub
or
enter
add
sbb
int
int
int
int
int
int
int
add
add
addr16
pop
int3
adc
or
ror
ror
lret
push
lret
inc
lret
adc
add
clc
lret
ror
test
add
add
lret
sbb
adc
or
fmul
ror
push
leave
push
leave
scas
enter
enter
enter
add
scas
cmp
cs
test
lds
pop
lds
mov
cmpsb
les
les
add
loopne
int3
mov
ret
sbb
loop
mov
ret
inc
push
add
inc
ret
sbb
adc
out
fld
mov
mov
mov
roll
add
rcrl
sarl
xadd
rcl
sarb
bnd
add
rclb
shlb
and
or
add
pop
pop
add
jp
pop
mov
fxch
ror
int3
iret
iret
mov
iret
mov
iret
cltd
iret
je
dec
iret
inc
iret
cmp
sbb
repnz
mov
into
or
mov
inc
out
outsl
int
int
int
int
int
int3
int3
movsb
int3
fwait
int3
in
add
xor
sub
es
and
push
int3
or
out
into
lret
in
daa
lret
add
jns
push
lret
test
fucomp
xchg
mov
lret
sub
add
add
cld
leave
jecxz
fcmovne
leave
into
leave
mov
test
leave
cmp
xor
or
stc
enter
enter
in
enter
repz
jecxz
cwtl
xchg
xor
lds
add
add
jns
pusha
lds
and
lds
cmp
les
lock
ffree
stos
ret
js
inc
ret
sub
add
ret
and
roll
repz
test
dec
adc
add
push
pop
sub
out
iret
out
fisubs
mov
add
gs
pop
iret
push
iret
inc
iret
inc
cmpsb
and
sbb
xchg
into
xchg
jnp
add
add
insl
into
addr16
dec
into
inc
into
aaa
into
xor
daa
into
adc
dec
ljmp
int
int
int
add
and
int
int
clc
push
int3
dec
int3
jp
outsl
lret
cmp
sub
inc
leave
inc
leave
aaa
add
cmpb
and
sbb
adc
add
enter
enter
mov
pop
add
add
movl
sub
and
push
adc
or
clc
vpandn
mov
lds
lds
push
sbb
sub
in
add
ret
mov
ret
test
or
into
ret
sub
div
sub
add
test
rcll
rclb
dec
xor
outsb
add
inc
jmp
xchg
iret
imul
iret
aam
int
int
int
int
int3
out
incb
add
test
mov
int3
ja
jno
push
int3
push
int3
dec
int3
mov
lretw
or
repnz
inc
sbb
lret
jge
jae
jne
xchg
push
ds
sub
sbb
add
cli
es
lret
add
call
lds
les
adc
cli
outsb
add
add
outsb
scas
ret
lahf
ret
xchg
ret
add
stc
ret
mov
cmpsl
ret
pop
ret
inc
ret
xor
es
pop
ret
adc
or
add
shl
jmp
loop
ffree
push
push
sbb
rol
mov
cmp
fwait
roll
jns
shlw
rcll
sarl
cmp
sub
adc
add
outsb
adc
or
add
std
shr
fcmovb
aad
iret
ror
mov
add
add
rcrb
add
shlb
shrb
rcrb
rorb
in
sbb
aas
shlb
sub
rclb
fwait
add
add
in
iret
fcmovne
aad
into
sbb
iret
fwait
iret
mov
push
add
add
pop
iret
dec
iret
aas
iret
cmp
xor
push
iret
adc
iret
dec
lock
les
cwtl
into
or
into
inc
cld
das
pop
into
or
clc
add
test
mov
int
add
int
int
int
int
int3
hlt
int3
jecxz
int3
mov
xchg
int3
or
int3
push
int3
add
cmp
bswap
add
test
lret
pop
lret
ds
and
add
lret
adc
lret
fmulp
ret
lret
mov
mov
lret
push
in
hlt
mov
lret
call
add
leave
ror
leave
stos
leave
xchg
leave
leave
or
leave
insb
leave
pop
pop
cmp
sub
or
sbb
enter
mov
add
adc
enter
enter
enter
enter
enter
std
inc
and
or
mov
jo
add
cmp
add
mov
hlt
les
add
xor
add
sti
ret
ffreep
int3
ret
xchg
add
add
mov
pop
ljmp
add
ret
jg
js
push
dec
sarl
and
pop
cmp
or
scas
and
add
stos
iret
jnp
insb
iret
push
iret
dec
iret
inc
iret
cs
sub
add
add
rorb
into
inc
into
cmp
cli
in
pop
into
in
int
mov
stos
int
int
int
int
repz
jmp
loope
inc
aad
inc
into
cmp
jge
pop
inc
lahf
push
nop
pop
dec
int3
inc
int3
aas
cmpsb
xor
sub
stos
jmp
iret
xor
dec
mov
out
add
jmp
or
test
in
in
pop
mov
xchg
inc
xchg
or
inc
in
clc
outsl
inc
test
mov
inc
ljmp
xor
inc
jmp
inc
addl
lods
out
outsb
shl
mov
fildll
sahf
std
push
push
lock
push
ffreep
cwtl
push
cli
mov
lea
xchg
dec
movsb
fisttps
rcll
pop
iret
cld
jo
aaa
mov
enter
cmpsl
lock
std
inc
ljmp
jmp
jl
mov
fsub
fadd
cmpsl
mov
std
and
lods
int
fsub
sub
aad
lock
into
or
outsl
xchg
and
dec
loop
out
loopne
clc
adc
mov
mov
pop
push
mov
jl
cld
jg
mov
movsl
mov
ror
enter
fdivrs
dec
imulb
sub
inc
clc
xchg
fdivl
mov
idivl
mov
mov
pop
mov
mov
scas
pop
in
repnz
lods
mov
nop
decl
and
fbstp
mov
in
mov
andb
nop
lcall
lahf
imul
add
inc
lock
mov
lcall
std
pop
mov
pop
jle
pushl
ljmp
adcb
or
in
daa
and
xor
inc
jmp
not
out
das
lock
mov
push
lds
sub
mov
jmp
jne
pop
or
cli
in
jbe
repz
fnstsw
aaa
out
lock
sbb
inc
pop
pop
or
je
imull
mov
je
in
jmp
and
lds
jp
stc
jge
and
notl
jb
fnstsw
jmp
mov
xor
pop
mov
cmp
std
fwait
addr16
ret
mov
lods
pusha
call
sub
jecxz
negl
sti
adc
fs
adc
xchg
mov
add
dec
pop
pop
push
push
push
mov
pop
rolb
int
orb
lock
or
cmp
add
cmp
adc
int3
and
test
lahf
dec
inc
adc
jmp
idivl
popf
out
roll
subb
mov
pushf
outsb
jne
repnz
inc
es
jb
test
sub
leave
es
repnz
mov
cmp
sahf
dec
out
lret
pop
sbb
out
pop
lds
or
iret
mov
mov
xchg
add
and
sbb
cli
xor
into
pusha
mov
imul
inc
sub
das
mov
adc
adc
scas
xor
mov
pop
scas
pop
cwtl
fisubrs
mov
ja
pop
xchg
sub
loopne
cld
sbb
gs
les
addr16
mov
rclb
loopne
push
sbb
xchg
jns
hlt
in
cmp
in
shl
pop
add
mov
pop
std
cs
mov
lods
add
std
mov
jo
add
mov
adc
xchg
icebp
pop
pop
enter
fsubrp
imul
xor
mov
hlt
lds
dec
jnp
dec
inc
xchg
movsb
cwtl
movsl
gs
jecxz
mov
jecxz
jae
sarl
jb
out
ss
sti
aam
fsubrp
ret
arpl
jb
je
das
scas
inc
mov
jg
aas
aam
cli
aad
mov
mov
fwait
pop
mov
mov
popf
jnp
stos
xlat
fidivs
add
das
mov
add
pop
test
loop
fcomi
sti
push
out
sub
cmp
pop
mov
lock
lahf
jg
call
jge
mov
jecxz
hlt
cmc
jmp
push
xlat
movl
insb
popa
stos
xor
add
fstps
add
jge,pt
das
lods
ja
add
pop
jg
mov
in
cmc
test
stos
push
test
xchg
mov
outsl
jne
or
incl
ljmp
insl
cld
ret
scas
push
mov
jae
mov
call
rcrl
fsubrl
in
mov
aam
lahf
push
cmp
push
psubd
mov
insl
cld
ss
pop
cli
mov
and
sbb
cld
stos
inc
stos
shrl
jp
outsl
cmpsl
sbb
cmpsl
cli
and
hlt
xchg
stc
dec
mov
dec
test
cmpsl
out
pushf
out
rorl
dec
shrb
sar
inc
nop
rcll
inc
cld
inc
bnd
movsb
xchg
pop
mov
pushf
push
push
cwtl
push
add
stos
clc
dec
stc
dec
add
dec
add
add
negb
in
push
cmpsl
repz
incl
cmp
jbe
dec
int
push
jge
out
pushf
cmp
push
add
fnsave
aaa
divl
dec
lcall
xchg
sub
push
jle
xchg
mov
and
or
repz
or
dec
cli
jns
jge
xlat
xchg
jmp
mov
test
xlat
aas
push
inc
inc
div
and
sub
cmpl
and
cmp
pop
cmpsl
xchg
js
cmp
iret
aam
adc
cs
scas
mov
das
mov
cld
xor
xor
xor
jl
mov
push
jno
inc
pop
jg
dec
enter
test
dec
mov
pushf
xchg
pop
test
push
inc
push
inc
enter
enter
and
mov
mov
mov
rorl
int3
xchg
aam
lcall
sbb
sbb
sub
adc
je
imulb
mull
in
pop
ror
lea
daa
push
out
or
popf
sub
dec
cmpsl
out
in
jge
cmp
sub
rol
lock
pop
mov
sub
adc
pushf
arpl
jb
scas
cmc
xchg
mov
push
xchg
jmp
imul
cmp
adc
int3
shl
pop
aad
or
movsl
fdivrl
xchg
faddl
stos
xor
push
mov
jmp
hlt
in
xor
xchg
shll
repnz
das
sub
jo
incl
dec
scas
add
cmp
stc
daa
daa
aad
stos
cli
ja
stos
scas
adc
jne
call
ja
xchg
aad
lret
stos
fstpl
fdivrp
mov
add
pcmpeqd
jbe
lret
sti
mov
out
das
adc
cmp
sti
leave
xor
ficomps
ja,pt
je
lret
test
jge
pop
mov
mov
xchg
repz
iret
inc
in
aas
jle
hlt
cmpsl
add
ljmp
aas
push
test
call
negl
adc
pop
push
cmc
div
dec
mov
jbe
addb
pop
or
je
cmpsb
mov
cli
divl
stos
das
or
out
xchg
aaa
jg
aaa
shl
jae
ss
shrl
dec
pop
adc
iret
pushl
jl
out
aad
lcall
das
stc
lret
or
lret
int
or
xchg
jg
xchg
fistl
xor
xchg
xlat
pop
inc
push
mov
push
iret
in
gs
sbb
mov
mov
or
fdivs
cld
sub
popf
in
fbld
fcomip
leave
cld
inc
lahf
filds
xlat
inc
pop
in
cmpsl
in
neg
ljmp
push
into
add
fstpt
or
pop
imul
pusha
imull
mov
std
scas
arpl
mov
push
rorb
cli
jge,pt
rolb
xchg
lcall
mov
jecxz
lea
adc
loopne
push
gs
aam
mov
adc
or
inc
fsubrp
pusha
scas
cs
pop
rcr
cmp
mov
mov
test
ljmp
je
mov
mov
xchg
mov
jg
sahf
sti
mov
mov
mov
aas
std
xlat
cmpsb
push
fdivs
out
inc
ret
jle
mov
inc
call
pushf
out
clc
sbb
js
cld
mov
div
lahf
cld
inc
daa
sarb
inc
cld
sarb
leave
aad
hlt
fmul
cwtl
mov
clc
test
sub
cld
adc
aaa
ss
shld
test
loope
pop
aad
gs
xchg
gs
inc
aaa
scas
pop
movsb
ja
xchg
adc
repz
push
inc
xchg
xchg
hlt
into
clc
xorb
das
and
xor
jbe
pop
ja
cmc
adc
repnz
inc
dec
ja
or
or
rorb
fs
dec
cmc
push
shlb
cmc
out
fnstcw
das
std
daa
cmp
cmp
leave
and
mov
ds
mov
jecxz
xchg
cwtl
out
mov
insl
outsb
jne
jne
mov
push
out
cmp
test
fwait
in
shl
faddl
in
mov
insb
std
lahf
daa
cmp
stos
mov
xor
cltd
xchg
cwtl
mov
jnp
lcall
jns
mov
xchg
stos
xor
pop
pop
dec
jge
or
in
lcall
mov
push
sarl
cwtl
xchg
xchg
cli
mov
aad
popf
and
cltd
xchg
jmp
es
pop
in
jg
xchg
xchg
incl
mov
inc
mov
std
scas
xchg
cld
add
test
hlt
lret
lods
divb
lock
mov
hlt
incl
adc
sub
sub
rclb
pop
hlt
movsb
sar
fidivl
inc
push
push
mov
int3
lret
gs
sbb
repnz
xchg
dec
sub
sbb
inc
cld
lret
inc
push
fs
iret
sbb
mov
cmp
cs
mov
cmp
lcall
mov
xchg
cwtl
mov
daa
jmp
xchg
enter
xchg
insb
and
adc
lcall
in
push
movsb
mull
push
mov
mull
into
iret
cli
in
cltd
insb
jg
and
int3
xchg
push
xchg
bound
loopne
hlt
and
inc
cmpsl
cwtl
out
popl
cwtl
jo
and
cld
daa
in
xlat
push
int
fsts
shlb
cmc
xlat
mov
sbb
clc
fwait
lock
clc
hlt
xchg
lahf
jl
jmp
jo
imul
dec
scas
fmuls
ror
ljmp
loopne
cmp
call
mov
lahf
loopne
mov
lods
and
loopne
jbe
movsb
out
dec
mov
pushf
out
adc
add
call
xchg
test
lcall
outsb
sbb
sti
subb
pop
push
add
or
int
int
int
int
push
push
int
pop
add
mov
int3
lret
mov
daa
filds
mov
xchg
fsubrs
add
fcmovne
cmpsb
leave
fwait
leave
xchg
leave
ja
jb
dec
add
enter
xchg
enter
enter
enter
call
mov
sub
adc
add
add
add
lds
lds
lds
lds
lds
mov
ret
adc
ret
iret
jmp
mov
ds
inc
ja
cmc
cwtl
std
shl
sub
pop
daa
pop
bound
xchg
ljmp
push
push
mov
cld
out
out
dec
subb
mov
in
es
std
fimull
jno
dec
nop
cltd
lock
inc
rcl
mov
test
ds
out
mov
lahf
mov
jle
divb
dec
jge
mov
div
repz
lea
pop
out
mull
sti
ss
lock
pop
mov
add
lahf
sub
lods
inc
jl
out
xchg
pop
stos
jl
mov
gs
jle
or
test
negb
decl
jnp
scas
sbb
jae
clc
popl
daa
cmp
or
sbb
cs
fidivrl
rcrb
xchg
dec
pop
jne
dec
in
jmp
lock
pop
lcall
loop
pop
cli
sub
sbb
mov
jnp
out
fldl
xor
jmp
pop
ljmp
leave
daa
jg
iret
sub
fdivrs
inc
dec
lahf
mov
sbb
xchg
xchg
jecxz
std
repnz
jmp
idiv
incl
jmp
add
inc
add
call
int
jmp
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
pusha
mov
mov
xor
mov
inc
cmp
jb
popa
jmp
