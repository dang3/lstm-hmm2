out
call
in
sub
andb
push
push
push
push
xor
pop
lea
fcomi
stos
push
ljmp
pop
xor
jmp
mov
pop
ja
test
add
loop
mov
dec
gs
in
in
dec
mov
xor
cs
jbe
dec
mov
insb
jmp
mov
push
call
pop
mov
jg
mov
push
push
push
push
push
mov
push
push
call
mov
and
adc
clc
lea
push
add
in
and
call
jbe
adc
adc
pop
sbb
outsl
fisttps
pop
pop
pop
leave
ret
add
add
mov
mov
push
push
xchg
sub
and
data16
jbe
pop
popf
fadd
add
in
mov
je
mov
lcall
push
or
mov
ror
jge
sti
daa
pop
inc
pop
inc
aaa
and
mov
mov
jle
sub
lea
push
push
push
sbb
pop
dec
mov
or
xchg
daa
xor
clc
add
in
push
fists
push
rol
or
fxch
lock
add
push
pop
sbb
or
adc
movsb
mov
fdivr
cmp
lock
cmp
je
push
adc
clc
sbb
pop
or
inc
clc
cmp
or
push
lret
insl
or
push
xorb
je
lea
or
scas
dec
mov
pop
je
jbe
pop
out
cmp
pop
xor
or
shrb
adc
dec
mov
lods
lea
jo
push
push
scas
fildl
or
pop
or
mov
fstps
or
pop
test
cmp
adcl
add
adc
push
sub
mov
sbb
or
jno
sti
sti
int3
dec
inc
cmp
outsl
insl
out
pop
dec
mov
and
jbe
fldcw
push
mulb
divb
or
enter
cltd
add
add
fnstcw
cld
push
adc
leave
fadds
fucom
rol
inc
testb
movsb
adc
out
in
rclb
lock
mov
test
mov
or
out
in
mov
pusha
push
mov
mov
dec
or
decl
je
mov
mov
ror
mov
inc
inc
dec
dec
test
jne
push
pop
and
fldenv
in
xor
mov
pop
mov
add
mov
movl
pop
pop
mov
or
fwait
xchg
add
lret
jnp
add
cld
cltd
dec
clc
pushl
sbb
jecxz
cmp
jge
sub
cmp
adc
and
fs
leave
std
std
push
and
xlat
mov
sbb
cmp
adc
add
adc
aaa
dec
scas
mov
and
cmp
jb
out
ds
pop
push
mov
mov
cwtl
imul
lea
or
nop
in
in
mov
jae
testl
testl
sub
mov
cli
adc
dec
sub
por
xchg
lods
inc
or
mov
fistpl
mov
cmpb
inc
add
adc
cwtl
stc
sub
ss
inc
push
adc
mov
mov
xor
mov
test
je
enter
push
push
add
pop
int3
icebp
outsl
sub
andb
xor
cmp
mov
push
inc
push
jne
mov
mov
mov
inc
inc
test
jne
push
lods
out
pop
sub
push
mov
xor
inc
mov
pop
xchg
cmp
cld
push
push
std
dec
mov
dec
imul
lcall
popa
add
pop
lcall
add
sub
popw
or
cld
fstps
inc
or
xchg
dec
test
inc
add
stos
mov
mov
imul
xor
add
push
cmp
in
jmp
sbb
push
push
and
in
je
push
pusha
adc
lahf
push
push
pop
testl
lret
mov
sti
leave
std
mov
jl
mov
xor
jo
mov
std
lret
insl
mov
mov
jnp
mov
push
mov
sbb
add
push
pop
sar
pop
int3
jae
inc
in
inc
xchg
rcll
xchg
xchg
sbb
cmp
dec
loop
into
pop
iret
imul
in
and
push
rclb
dec
loop
mov
out
cmpl
mov
adc
add
idivl
mov
nop
push
insl
xor
push
int
jnp
push
lcall
ud2
mov
mov
and
push
push
out
mov
or
push
mov
ret
fistpl
push
cmp
outsl
imull
add
lret
in
je
jae
pop
sti
sbb
xor
pop
sarb
enter
pop
daa
pop
add
hlt
xlat
cmpsb
mov
jo
subl
bound
pop
xlat
lcall
fcomp
xchg
or
lock
nop
ljmp
and
push
or
cmpl
insl
ret
dec
push
push
xor
mov
push
jl
sti
or
cmpsl
addr16
jl
or
or
cmp
push
jp
xchg
xor
pusha
push
adc
push
daa
inc
jl
mov
gs
in
in
jb
fsubrl
out
pop
out
call
insb
fwait
in
gs
cs
out
and
jle
inc
out
pop
pop
lock
xor
cmc
pop
test
or
mov
add
lods
xchg
or
or
sub
inc
lcall
mov
dec
xchg
je
enter
adc
add
mov
dec
jo
adc
xor
sub
add
push
sbb
adc
adc
stos
test
inc
inc
inc
push
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
addl
in
jmp
add
xor
adc
sub
imul
imul
mov
divb
inc
push
xor
dec
shll
nop
sahf
cmpsb
imul
cmpsb
imul
xchg
inc
mov
add
xor
cld
sti
nop
add
outsl
arpl
je,pn
insw
addr16
ss
jmp
xor
xor
inc
bound
push
jb
jbe
insb
gs
jae
mov
je
insl
xor
pop
add
dec
inc
dec
dec
and
pushw
gs
add
fdivr
outsl
imul
fs
adc
adc
punpckhbw
data16
in
sarl
imul
insl
fs
aam
in
aaa
xchg
cmp
aaa
stos
xor
cmp
add
test
mov
ret
scas
insb
fdivrs
jecxz
stos
nop
adc
xchg
jle
adc
inc
dec
xor
mov
fs
insb
inc
push
push
dec
inc
dec
inc
add
adc
mov
loop
inc
jg
mov
or
add
push
mov
decl
dec
add
dec
pop
nop
inc
add
fs
gs
mov
outsb
call
push
add
dec
push
push
adc
jb
addr16
insl
and
outsb
outsb
outsl
je
bound
jb
outsb
and
mov
filds
inc
dec
push
and
fs
jne
clc
mov
jnp
ja
fcoms
add
je
in
dec
arpl
jb
addr16
fs
cmp
xchg
std
fcomp
in
daa
lret
pop
fldenv
jb
xchg
in
xchg
xchg
arpl
push
inc
dec
add
add
aam
adc
mov
or
es
mov
add
adc
add
ret
add
and
ss
xchg
push
xor
pop
push
or
outsb
jnp
test
dec
pop
test
mov
ss
repnz
inc
and
adc
lock
imull
in
pusha
add
bound
pop
mov
pop
es
add
fs
je
insb
mov
mov
lahf
loopne
inc
push
push
pop
mov
cld
mov
daa
shrb
jae
xor
jb
std
out
pop
je
dec
pusha
jb
insb
outsl
arpl
dec
ss
sti
add
xor
lock
jmp
pop
dec
movsl
pop
ss
mov
cmp
es
movsb
in
cmpsb
imul
imul
cmpsb
jmp
in
sbb
mov
and
movsb
movsb
lahf
mov
lret
cmpsb
imul
dec
shll
dec
pop
jo
shll
scas
fnstenv
dec
in
adc
lcall
pop
outsb
jle
imul
jmp
mov
lcall
pop
sbbb
ror
imul
shll
and
fwait
cmpsb
pop
ss
sahf
loopne
mov
xchg
notl
test
cmpsb
add
dec
cmpsb
mov
into
fdivs
ljmp
roll
push
mov
imul
imul
add
and
cmpsb
imul
cmpsb
lcall
mov
jp
bound
cmpsb
imul
or
sub
nop
testb
jmp
push
add
add
lcall
cmpsb
imul
adc
je
jb
gs
stc
dec
fsubs
and
gs
fcos
rcr
inc
sub
dec
jo
outsb
push
jb
inc
adc
xlat
dec
dec
dec
dec
inc
push
and
les
pop
jae
data16
loopne
ja
bound
dec
inc
push
push
inc
push
inc
pop
dec
sbb
jp
or
je
push
imul
pop
inc
jne
mov
insl
imul
outsl
outsb
sbb
rorl
scas
push
inc
dec
xchg
or
inc
add
add
or
and
lahf
out
into
ficoms
and
lcall
negl
push
pop
pop
add
inc
add
add
and
add
cmp
or
xchg
add
sub
add
mov
cwtl
pop
aas
mov
aas
add
pop
and
rorl
incl
and
add
sbb
xchg
dec
xchg
add
sub
enter
pop
imul
sbb
add
inc
xchg
ret
dec
int3
addb
fwait
data16
xor
xchg
xor
adc
paddusw
mov
out
add
add
jae
push
xlat
std
add
fs
jb
punpcklwd
pop
inc
or
push
pop
ja
xchg
sbb
add
jb
push
and
mov
ja
or
push
mov
jae
pop
and
xor
fistpl
or
sbb
lcall
sbb
pushf
mov
push
lea
jmp
incl
shlb
mov
push
inc
call
inc
lret
add
push
and
pusha
pop
call
fisubs
fs
mov
cli
pop
push
mul
sbb
arpl
push
fnstcw
push
je
jo
cs
add
jb
jb
arpl
inc
xchg
pop
sub
and
gs
in
loopne
dec
dec
push
out
dec
rcrl
xor
jno
gs
mov
mov
inc
dec
xor
outsl
je
ja
jns
loopne
mov
xor
mov
add
imul
jl
mov
jg
or
pop
add
dec
pop
jae
push
cmp
into
and
pop
cs
push
daa
in
push
add
push
in
and
insl
fisttpl
decb
imul
fs
insl
jns
js
jno
jbe
pop
mov
mov
mov
mov
loope
mov
movzbl
push
push
or
push
push
sbb
mov
and
cmp
movsb
push
sub
push
mov
add
addb
pop
jne
add
jg
arpl
or
jne
in
or
mov
inc
mov
mov
mov
adc
add
cmp
xchg
inc
or
jno
arpl
inc
adc
push
lea
stc
add
jg
sbb
and
or
sub
and
movsb
sbb
outsl
data16
push
mov
add
pop
cwtl
or
sbb
mov
xor
jbe
or
ret
adc
sbb
scas
repnz
add
in
and
lea
test
js
lea
cmp
mov
sbb
cld
outsb
mov
mov
xor
stc
ret
mov
lock
out
out
fcmovnu
mov
out
enter
add
data16
cld
orb
xchg
out
ss
repz
push
fwait
bound
cmpsl
mov
adc
repnz
popf
insl
daa
adc
mov
mov
mov
jbe
and
adc
mov
sub
and
loope
pusha
mov
out
popf
and
outsb
mov
adc
mov
roll
mov
divb
mov
mov
std
loope
mov
dec
outsb
cmp
mov
nop
inc
incb
mov
outsb
ret
push
jae
xchg
insb
repz
je
xorl
and
filds
int
adc
pop
jmp
std
add
daa
fs
out
mov
fistl
mov
adc
dec
xlat
sub
mov
arpl
out
lods
cmp
mov
jnp
pop
adc
stos
add
and
push
mov
je
add
mov
mov
inc
mov
cmc
mov
cmp
ja
add
dec
daa
sbb
jle
stc
mov
dec
jge
mov
xor
repnz
movl
insl
add
push
hlt
sti
cs
test
out
div
push
popl
mov
sbb
mov
lods
popf
popf
cmp
mov
add
pusha
add
mov
in
insl
xchg
mov
push
cmp
ja
clc
xor
inc
idivl
cli
mov
shlb
pop
popa
mov
ret
lahf
mov
or
and
orb
sbbl
jnp
lds
movsb
inc
fisttpl
push
in
daa
pop
pop
out
sbb
std
sub
daa
into
mov
mov
daa
frstpm(287
sbb
cmp
idivl
pop
adc
filds
mov
movsb
mov
getsec
ja
es
inc
fistpl
repnz
loope
xorl
cli
bound
dec
xor
jecxz
pop
arpl
mov
and
add
stos
mov
je
push
pop
mov
add
das
add
dec
and
pop
xchg
sub
jmp
in
out
scas
push
lods
mov
push
idivl
and
jnp
mov
push
push
pop
jo
xorl
scas
jo
out
pop
xchg
scas
iretw
daa
bound
cmpl
aas
fistps
mov
add
out
sub
imul
inc
adc
xchg
add
lcall
add
in
xchg
out
rcrl
daa
fwait
lds
fcmovnb
lock
cmp
fucom
addl
das
out
mov
push
testl
add
mov
out
es
jp,pn
sbb
sahf
sti
mov
pop
daa
cld
adc
add
fbstp
cmp
popa
dec
popf
inc
aas
lahf
fs
mov
add
add
cmp
adc
jle
pop
adc
fstpt
inc
adc
mov
leave
in
jmp
fwait
rorb
inc
outsb
push
and
ja
mov
jo
sbb
push
push
dec
movsl
cs
fsubl
jbe
jo
mov
add
mov
push
cld
fs
call
lret
dec
and
insb
bound
jnp
ret
loope
iret
xor
mov
jnp
ror
outsl
into
mov
stos
pop
xor
xor
lods
fwait
dec
mov
mov
mov
jmp
pushl
fcmove
in
jmp
stos
mov
iret
mov
mov
int3
lods
ret
fadd
jmp
mov
inc
lret
loope
mov
inc
mov
aad
add
pop
fidivs
sbb
addr16
sbb
dec
nop
sbb
movsb
andl
xchg
cmpsl
test
jge
lahf
dec
dec
dec
out
outsb
dec
push
dec
cmp
or
in
or
stc
int
movd
or
daa
and
and
insb
sub
jb
leave
in
jbe
jbe
jle
jle
mov
push
fwait
mov
pop
sbb
pushf
fstpl
push
icebp
out
out
push
mov
push
rorb
push
fisubl
mov
sbb
outsl
hlt
mov
mov
andl
inc
loopne
push
mov
push
mov
ss
sbb
iret
add
inc
aam
mov
or
inc
in
push
push
call
test
or
cmp
lds
ljmp
in
movb
inc
or
movb
sti
push
push
dec
pop
inc
add
lea
loop
pop
loopne
pop
orl
push
ljmp
add
mov
xor
add
mov
adcb
rcll
cwtl
outsb
inc
xor
mov
push
or
mov
adc
add
es
call
xor
sbb
push
sbb
mov
adc
adc
mov
divb
outsb
mov
or
push
aas
fnstcw
int
inc
pop
pop
adc
mov
add
pop
mov
nop
daa
xchg
pop
sbb
ja
add
popa
nop
pop
xchg
bswap
add
mov
and
push
add
add
jbe
and
aaa
jmp
push
sub
mov
pop
ror
push
push
adcl
je
add
pop
sub
dec
testl
xor
aaa
ja
pop
push
mov
jne
loopne
incl
ret
cmpw
jne
dec
cmp
lret
jns
sub
clc
jne
mov
jp
pop
repnz
lock
pusha
repnz
and
mov
cmpb
and
enter
jae
mov
push
mov
leave
sbb
and
ret
mov
xor
jle
cmp
je
mov
cmp
je
or
divl
adc
pop
cmp
fucomi
jne
ja
jge
add
or
jae
cmc
mov
loopne
push
or
or
inc
jmp
cmp
jb
sub
push
test
push
sub
add
je
rcrb
testb
int
adc
roll
xchg
push
cwtl
jmp
or
push
add
mov
push
push
call
mov
cmp
jg
js
mov
add
jge
push
push
push
sbb
and
jb
push
fidivrs
mov
push
push
and
pop
mov
dec
ret
in
xor
insb
dec
loop
sbb
loopne
mov
call
push
or
js
rcll
lods
dec
or
xchg
cmp
fidivrs
jge
movsl
add
mov
xchg
xchg
aaa
movsl
movsb
mov
jo
int
ret
je
mov
lock
jb
push
divb
shrl
dec
dec
mov
or
enter
mov
mov
outsl
jo
pop
dec
pop
mov
dec
and
xor
add
cmp
not
jle
push
inc
outsl
cmp
in
fiaddl
ret
xor
xor
inc
cmp
or
sbb
push
mov
push
push
fs
add
cmp
cmp
inc
inc
push
adc
adc
adc
clc
or
mov
mov
push
push
neg
in
jae
push
repnz
push
sub
loope
sub
inc
cli
jb
pop
pop
pop
push
add
or
call
addl
repnz
je
and
xor
xchg
jl
mov
and
mov
and
or
push
or
pop
test
and
xor
adc
adc
dec
jl
and
push
icebp
and
lea
and
push
ficoml
sub
cwtl
sub
xchg
cld
or
push
push
add
str
push
xchg
add
add
js,pt
shlb
mov
negl
cltd
outsl
sbb
insb
or
mov
out
jne
mov
mov
adc
cmp
pushf
xor
nop
cmovo
inc
sbb
add
add
push
out
mov
lock
adc
fcompl
jg
push
push
cmp
repz
or
sub
fsubr
ljmp
lock
push
loop
imul
clc
popf
lock
les
adc
sub
iret
add
outsb
push
xor
mov
jae
cmc
data16
xor
clc
outsl
and
mov
dec
ja
push
cs
fs
mov
std
lret
enter
hlt
dec
push
sarl
lea
jo
in
int3
aad
cli
call
pop
xor
test
popf
and
inc
xor
sub
adc
jg
std
ret
push
cmp
jle
pop
jmp
sbb
or
jno
ja
call
mov
pop
je
test
cmp
movsb
mov
incl
push
in
hlt
mov
push
in
jne
cmpl
daa
jge
lods
xor
inc
cld
mov
sbb
push
inc
clc
or
insb
xor
clc
mov
aas
jmp
andl
inc
add
cmp
sahf
inc
cmp
mov
xor
es
cltd
jmp
in
cwtl
cmpsb
xlat
out
mov
and
fistl
sbb
pop
pop
imul
jbe
nopl
cmp
shlb
push
popf
sub
enter
adc
xor
mov
and
ja
push
and
into
dec
shlb
int3
sub
add
ja
jne
data16
cwtl
lods
ja
or
or
or
or
sbb
adc
mov
shrl
daa
mov
cmp
mov
aaa
ret
add
xor
push
cmp
mov
in
jb
and
pop
and
adc
les
lock
push
mov
enter
adc
add
xor
sbb
call
or
call
sub
cltd
pop
inc
idiv
adc
idiv
pop
lods
jg
sbb
jmp
andb
mov
jmp
xor
ficoml
enter
enter
adc
enter
add
add
lock
rorb
repnz
in
and
rclb
adc
add
call
nop
aaa
add
push
and
inc
fwait
jl
push
icebp
and
mov
sbbb
adc
das
std
test
adc
jo
movb
push
pop
cld
jl
cmp
jb
std
mov
fcom
imul
add
andl
push
or
inc
sub
ja
xor
and
or
imul
adc
lods
mov
shll
add
aaa
in
mov
inc
cmp
jecxz
push
add
shr
lea
loopne
cmp
jae
incl
lret
shr
push
or
sbb
leave
mov
pushl
dec
or
sub
inc
mov
mov
push
js
ret
rcll
sbb
outsl
mov
pop
lock
rolb
or
rorl
pop
cmp
adc
or
jne
cmp
cmp
push
cs
pop
scas
mov
cmpsb
es
jo
or
pop
jbe
jle
jbe
or
cmp
mov
not
and
push
jl
adc
adc
repz
add
lea
mov
jmp
shl
or
mov
add
hlt
mov
std
repnz
not
and
testl
mov
jnp
imull
fdiv
shr
shl
push
js
add
push
aam
outsl
mov
outsb
or
fisubs
fimull
add
lea
and
out
xadd
adc
pop
inc
sub
lock
and
not
cmp
add
repz
xor
into
mov
shr
or
add
outsl
fcmovnbe
jne
daa
pop
jg
push
fists
xchg
sbb
mov
push
lods
loop
mov
adc
push
jle
not
and
mov
and
adc
movb
mov
fidivl
add
mov
fiaddl
ficompl
xchg
adc
sbb
inc
xor
scas
roll
mov
or
or
sbbl
int3
xor
sub
sbb
add
out
out
or
test
xor
add
sbb
jns
cs
les
repz
fcomp
cwtl
subb
repnz
sbb
add
rcr
jle
jnp
das
pusha
adc
pop
scas
testl
sti
mov
pop
les
sbb
rolb
pushl
movups
sub
subl
add
jns
fdivrs
pop
repz
inc
imul
negl
jns
adc
xor
fisubrs
and
or
xchg
jno
std
jle
xchg
lods
es
add
outsb
pop
push
fsubs
cld
fidivrs
movntq
push
mov
cmpsb
pop
mov
add
faddl
xor
cmp
or
and
or
popa
cs
adc
add
or
mov
ret
lods
mov
and
aad
aam
pop
imul
mulb
push
imul
sbb
shl
mov
shlb
clc
jg
jge
dec
cmp
inc
rorb
cmp
or
fadds
hlt
push
fisubrs
clc
jb
repz
pop
pop
or
push
repnz
sar
mov
movsb
and
mov
and
lock
fwait
icebp
imull
mov
lcall
call
xlat
lods
mov
inc
jnp
fdivs
push
adc
test
rorb
arpl
pop
and
sahf
pop
mov
clc
cmp
mov
clc
in
int3
cli
fnstcw
out
adc
cmp
or
add
int
lods
fidivl
and
sbb
loopne
in
lret
outsl
pop
ret
inc
enter
aaa
or
mov
mov
mov
push
fbstp
ret
fimuls
xchg
imul
gs
int
push
fsubrp
mov
adc
inc
loop
or
repz
out
or
fcmovbe
fdivs
faddl
sbb
shlb
cld
lcall
push
and
cld
not
daa
sub
aad
flds
outsl
adc
int
movl
mov
mov
adc
mov
mov
xor
test
data16
pop
pusha
sbb
test
dec
outsb
mov
call
divb
ret
lret
adc
js
in
aaa
fadd
and
insl
adc
inc
jns
jno
sti
xor
mov
repnz
or
in
inc
ja
fstpt
mov
inc
es
xchg
ljmp
sub
push
adc
cltd
jb
push
outsb
gs
fmuls
xchg
int3
pop
pusha
dec
mov
cli
cld
idivb
sbb
mov
insb
or
or
mov
incb
fwait
sub
repz
testl
imul
outsb
pop
xor
addr16
xor
ja
cmc
test
xchg
jae
popa
fidivl
sub
xor
je
pop
out
cmp
gs
or
push
aas
sbb
jae
push
clc
cmp
rcl
fstps
push
stc
mov
in
jle
ja
mov
push
in
clc
jl
pop
pop
push
lret
jecxz
pushl
sti
fdivp
xor
gs
lods
les
sub
jne
cli
mov
mov
fisubs
stos
mov
stos
shlb
mov
stc
push
or
in
sbb
jns
loope
jl
inc
int3
or
inc
push
or
movsb
mov
jns
and
repz
jb
hlt
cmp
sub
cltd
or
les
aas
cmp
pop
pop
or
stc
push
sbb
rcrl
fisubrs
xchg
int3
or
push
or
ja
jno
dec
insl
data16
jge,pt
out
call
unpckhps
mov
adc
rcrl
test
sub
jmp
dec
xor
in
out
loopne
scas
dec
jle
outsl
jecxz
jp
addb
xor
outsb
repz
fistpl
loopne
sub
jecxz
jp
sti
ffree
cmp
mov
add
add
ja
mov
div
out
cmpb
lds
jp
in
dec
arpl
sbb
repnz
imul
loopne
mov
fwait
in
xor
aam
rcl
sub
getsec
pop
mov
repnz
repz
rclb
shl
jmp
xor
mov
pop
jge
pop
cli
lret
out
xlat
pop
add
pop
movsb
mov
jno
pop
or
or
pusha
inc
imul
inc
js
cmp
mov
fucomip
or
cmp
jl
js
sub
inc
aaa
jb
push
push
push
testb
lcall
inc
outsb
dec
push
insb
js
adc
sub
xlat
pop
fisubrl
jle
lods
pop
mov
jl
inc
pop
inc
addr16
clc
inc
fldt
iret
jb
adc
mov
mov
push
adc
add
sbb
cmp
dec
jne
pop
scas
adc
add
sbb
fidivs
cmc
push
cmpsl
push
cmp
mov
jmp
jg
jne
cmp
je
sbb
mov
cmp
je
pop
idiv
in
mov
sub
jne
inc
cmp
jne
cmp
xchg
pop
sub
add
add
xor
sub
push
and
or
mov
je
cmp
lahf
pop
pop
jg
or
into
sub
neg
sbb
pop
ret
jne
test
inc
out
test
jl
add
jg
shlb
or
stc
mov
je
stc
shll
add
je
roll
mov
andb
jl
insl
mov
cmpsl
or
ss
aaa
aas
sub
fmuls
sub
sbb
data16
ljmp
leave
lret
add
stos
orps
pushf
xchg
jg
sub
mov
add
jne
push
lea
jp
dec
aam
sub
dec
sbb
jmp
out
sub
clc
bound
int
cwtl
fiaddl
loop
push
push
or
xchg
mov
cld
call
sub
cmpsb
outsl
outsl
dec
mov
cld
dec
cmp
out
cltd
mov
testb
mov
lret
xchg
xor
rorl
clc
pop
adc
jecxz
add
jnp
int3
push
loopne
lret
mov
sbbl
add
fsubr
mov
out
xchg
push
push
jmp
adc
rclb
mov
jl
in
out
or
or
call
iret
out
in
gs
das
lock
jo
hlt
rolb
gs
ret
lods
pushf
mov
mov
cmp
je
inc
and
add
mov
jns
jnp
and
sub
or
mov
lods
mov
or
mov
lods
outsb
les
mov
addr16
mov
or
pop
scas
adc
jae
pop
mov
cmc
fildl
or
adc
cwtl
ds
pop
cs
push
push
movb
in
dec
out
push
out
push
mov
jb
lock
icebp
inc
repnz
mov
mov
sbbb
pop
daa
push
pushf
test
lock
push
cmp
add
mov
aam
mov
jo
repnz
sbb
dec
insl
pop
adc
push
mov
or
lock
add
and
jae
out
je
sbb
bound
outsl
inc
push
push
aas
mov
test
clc
cmp
xchg
and
int
je
imul
scas
mov
fcmovnb
icebp
sub
or
xor
cmp
xor
pop
adc
inc
xchg
jb
push
mov
mov
sbb
pop
mov
daa
test
pop
les
push
dec
pusha
roll
adc
enter
and
in
mov
lea
mov
adc
add
mov
sbb
jbe
fidivs
push
mov
pop
loopne
clc
add
jle
lock
pop
or
hlt
push
shlb
data16
pop
insl
fnstenv
in
adc
insb
jmp
inc
inc
inc
dec
outsl
pop
fldt
adc
xlat
fnsave
mov
jne
icebp
add
mov
test
rorl
pop
or
add
xchg
push
andw
mov
fnsave
ret
subl
dec
cld
pop
jb
or
mov
popf
push
push
pop
adc
cmp
mov
cmp
sub
mov
out
fcmovnu
mov
dec
dec
pop
cmp
pop
push
arpl
jb
mov
cmp
das
fsubrl
imul
aam
mov
in
xchg
push
mov
imul
push
aad
push
loop
shrl
push
ficompl
cwtl
cmp
test
xchg
movl
adc
sub
cli
int3
adc
fwait
outsb
dec
fidivs
inc
add
sahf
lods
adc
jb
adc
push
or
pop
andb
incb
or
lea
cmp
clc
add
push
mov
xchg
pop
lcall
in
test
aaa
clc
inc
push
pop
cld
call
sub
filds
or
fists
test
xor
sahf
sub
or
cmp
lahf
je
je
shlb
mov
push
inc
call
pop
or
outsb
or
lret
xchg
popa
test
cmp
dec
xorb
movq
inc
add
mov
push
repnz
lods
int
pop
shll
filds
les
jbe
pop
stos
int3
in
cmp
xchg
and
jae
dec
mov
pop
push
or
enter
sahf
mov
cs
sub
adc
scas
cmp
loopne
mov
inc
xchg
xor
je
add
xor
aaa
fldenv
insb
test
pop
es
mov
pop
scas
jl
and
mov
out
mov
enter
xor
push
push
nop
fldt
fwait
ljmp
mov
in
push
rolb
mov
jl
jbe
cwtl
and
pop
or
mov
jl
fisubrs
daa
mov
xchg
sbb
sub
xor
add
inc
jne
dec
add
fsubrs
adc
pop
and
xor
sub
mov
sbb
aaa
jg
xor
jmp
test
ret
in
insl
into
xor
hlt
jb
mov
sub
clc
cmp
and
mov
mov
or
pushf
inc
out
pop
cmp
push
fdivr
dec
je
cmp
sti
ja
cmpl
cmpl
scas
or
push
jo
mov
jo
add
sbb
pop
dec
fsubs
pop
or
sbb
add
mov
insl
xchg
in
sbb
pop
pop
mov
pop
call
call
jne
pop
mov
cmpb
dec
inc
in
jbe
cmp
jmp
pop
inc
fisubrl
xchg
adc
xor
jmp
dec
mov
sbb
movsb
ss
je
mulb
mov
test
pop
sub
ja
dec
fdivrs
stos
or
jmp
pop
jno
xor
leave
mov
lods
push
insl
mov
xchg
lret
in
mov
mov
mov
mov
mov
jb
pop
cs
mov
mov
fdivl
mov
add
xchg
fsts
rcl
js
shlb
insb
mov
outsl
aad
xlat
pop
fsubrs
xchg
insl
shrl
fcmovu
gs
loopne
lcall
gs
pop
in
in
push
out
dec
out
call
shll
jo
fwait
int
dec
imul
scas
fxch
push
repnz
ret
shll
add
xor
enter
lcall
int3
hlt
xchg
push
fwait
cmpsb
jmp
xchg
xchg
mov
inc
jbe
xlat
insb
mov
pushf
adc
sub
push
mov
insb
add
test
push
test
es
cmc
div
clc
or
inc
xlat
ds
hlt
cli
jns
lea
xor
mov
aad
cmpsb
scas
push
aam
or
pop
loopne
das
es
and
adc
push
clc
jo
aaa
xor
jb
push
int3
xchg
lret
out
jmp
out
cltd
dec
lcall
fstpl
lcall
mov
daa
pop
cwtl
jne
pop
xchg
xchg
pop
cmp
sbb
ror
cmc
adc
shrl
orl
jg
mov
pop
mov
clc
andl
imul
push
pop
adc
push
pusha
cmpsb
jae
fcom
loopne
into
imul
pop
mov
or
ret
and
test
aaa
jmp
push
push
inc
sub
push
mov
aaa
sbb
in
cltd
mov
sbb
jp
jnp
mov
pop
shl
inc
aas
mov
nop
repnz
scas
sbb
rorl
testb
sarl
andb
aaa
or
add
int
sbb
mov
mov
sbb
hlt
jb
fadds
fistl
fsub
or
jae
out
arpl
inc
or
mov
and
daa
lock
outsb
arpl
inc
mov
outsb
fs
adc
sbb
cmp
push
dec
les
add
negl
mov
addb
or
add
pop
lds
cmpsl
sub
jne
inc
mov
fistps
loopne
jno
fcoms
add
mov
push
es
or
mov
mov
cmp
and
pop
cmp
push
mov
and
sbb
add
xor
aam
insb
stc
sarb
mov
call
sbb
mov
cld
adc
xchg
shll
adc
jbe
push
or
push
lods
outsb
add
inc
jp
lods
cwtl
sub
add
and
fwait
sub
insb
dec
sahf
push
or
dec
rol
and
cmpl
faddp
push
push
pop
in
addr16
pop
jmp
imul
pop
adc
add
xchg
mov
subl
cmp
mov
sub
jb
xchg
and
add
in
lea
in
jo
leave
xchg
cmp
cld
shr
decb
mov
cmpb
mov
andl
add
pop
cs
adc
inc
push
push
push
cmp
push
aaa
fdivrs
add
xor
xor
push
adc
or
or
pushf
test
cld
adc
sbb
in
imul
and
add
mov
and
xlat
jmp
test
js
fs
add
cmp
mov
in
andl
jb
push
pop
push
mov
fcmovnu
sub
loopne
xor
mov
adc
mov
mov
xchg
fisubs
inc
lock
mov
test
pop
loop
lea
int
rol
gs
jp
imul
shll
xchg
das
fsubs
ja
fildl
pop
outsb
mov
fstp
jae
fbstp
push
imul
lcall
insl
je
insb
mov
mov
mov
xchg
dec
shll
mov
cmpsb
mov
xchg
push
shll
pop
pop
insl
mov
enter
pop
lret
pop
mov
in
cmp
js
out
scas
mov
xor
pop
inc
jb
icebp
add
push
jb
inc
mov
pop
popa
push
js
fnsave
mov
aam
push
cmp
shrb
sbb
xor
ret
pop
rcrl
hlt
add
xor
xor
adc
mov
mov
mov
rclb
jmp
fldcw
out
add
sub
lret
cmpsb
imul
imul
xchg
lret
in
outsl
out
ja
jne
repnz
imul
xor
xchg
je
sahf
clc
push
leave
insb
jge
jnp
push
add
dec
testl
adc
push
add
push
push
add
sbb
or
or
les
pop
idiv
add
lods
roll
and
xchg
rorb
ret
es
inc
arpl
push
push
mov
or
adcl
or
or
test
push
in
mov
in
xchg
fsts
and
cmp
and
fldl
or
lret
pop
xor
fisttpl
sbb
clc
inc
in
in
xor
mov
stos
enter
sub
inc
sub
fildl
push
pop
push
adc
dec
in
push
or
jo
bound
jne
xor
cwtl
loopne
inc
and
and
jnp
lcall
jmp
and
xor
add
mov
imul
fwait
cmpsb
imul
dec
shrl
mov
lcall
mov
int
ret
ret
imul
lret
shrl
int
int
das
into
iret
rcrb
xor
adc
or
pop
xor
aaa
fcomp
fcmovu
ss
rcl
ja
mov
ficomps
fnstsw
jae
lcall
in
call
mov
mov
in
sbb
out
fs
dec
shl
es
shll
inc
inc
mov
and
cmp
xchg
mov
rorl
or
or
and
test
aad
cld
or
mov
aam
call
outsb
jo
mov
pop
cmp
lods
push
sub
fisttps
rol
movsl
mov
xor
cmp
loope
in
scas
out
push
arpl
and
popa
add
and
int
jl
cmp
rclb
mov
inc
jmp
orl
inc
jmp
adc
das
out
ss
adc
jmp
jmp
in
fisttpll
xor
rorb
mov
in
pusha
pushf
xchg
jmp
sbbb
push
clc
lock
push
stos
mov
or
or
and
pop
mov
jnp
push
adc
mov
daa
testl
jecxz
and
adc
sbbb
jbe
scas
notb
cmpb
add
add
jmp
rcrb
xchg
jne
ss
scas
adc
add
xor
xor
inc
inc
dec
call
cmp
out
jb
adc
int3
ret
js
je
movl
push
sbb
shll
int
push
and
filds
push
cli
in
fildl
mov
xor
add
int
and
or
xchg
aad
repz
pushf
push
jne
sbb
xor
pop
js
lods
fs
call
or
mov
andb
cmp
push
mov
xor
push
dec
rolb
pop
sub
pop
movsb
outsl
sar
neg
das
lahf
shl
shr
mov
add
shll
adc
std
incl
and
stc
shl
pusha
pushl
mov
pop
or
fnstsw
dec
mov
fisubrs
out
or
add
pop
add
ret
push
subl
push
sbb
jns
inc
xlat
sub
inc
cwtl
push
jnp
test
pushf
mov
pop
and
mov
cld
repnz
fnstcw
daa
mov
pusha
ja
fdivl
lea
or
outsl
fidivs
cltd
ret
push
test
loope
mov
inc
add
cli
add
decb
call
insb
data16
and
ret
ret
mov
insl
mov
jge
xor
mov
jnp
stos
fst
stos
gs
mov
cmpsl
int
int3
fldl
adc
mov
xor
sbbl
stc
frstor
pop
scas
jmp
cltd
aas
push
mov
imul
jmp
notb
sub
mov
sub
cmp
inc
push
in
movb
or
rolb
fdivl
push
pushf
shld
inc
push
jne
jl
jecxz
testl
or
dec
rcrl
ret
outsb
fldenv
mov
mov
stos
cmc
push
shl
lock
push
scas
out
xchg
xchg
stc
cmc
push
jle
std
mov
rol
push
jmp
or
jmp
push
andb
push
call
ja
jb
dec
inc
clc
sbbl
sub
and
clc
cmc
xor
dec
mov
iret
leave
enter
or
std
cld
adc
push
sub
lods
adc
cld
sub
fcomip
cli
adc
mov
and
outsl
fstpt
xchg
jnp
xchg
adc
and
pop
iret
xchg
int
push
fimuls
sub
outsb
xor
xchg
cli
sub
push
std
call
sbb
mov
jns
pushf
call
in
stc
std
xchg
std
adc
cmc
sti
sub
sti
pop
mov
dec
inc
add
lahf
fwait
add
jae
into
push
push
push
add
adc
sub
pop
add
pop
pop
jg
adc
psadbw
movsb
orl
add
xchg
js
fldenv
mov
and
jg
add
mov
clc
or
mov
fsubr
andb
jmp
add
adc
nop
push
dec
lock
test
sub
mov
jne
out
pop
mov
jo
adcb
ja
in
mov
in
stos
cs
outsl
push
pop
mov
pop
fwait
push
popf
loopne
sbb
lret
inc
pop
mov
inc
out
mov
in
fidivrl
loopne
or
inc
push
es
pop
inc
push
add
movsb
mov
mov
cmpsl
adc
sbb
out
std
cmc
pusha
adc
rolb
jae
mov
dec
and
out
int
nop
sbb
xchg
pop
sbb
mov
inc
cmpsl
stos
push
roll
jo
out
or
cmp
popa
in
call
pop
sarb
mov
or
orl
jmp
push
lods
sar
mov
xchg
mov
mov
mov
fnstenv
ja
cld
add
ds
or
sahf
or
or
inc
dec
lret
popf
test
mov
adc
popa
insb
push
adc
sbb
mov
xor
mov
inc
cmp
inc
scas
mov
loopne
stos
hlt
push
out
mov
mov
jne
adc
mov
call
sbb
and
mov
mov
cmp
or
gs
lea
jl
das
outsl
sti
test
cmpl
fidivs
xchg
in
or
cmp
test
jnp
sbb
xchg
add
or
jb
loope
hlt
mov
enter
addr16
std
adc
push
inc
nop
cmp
push
bound
inc
jo
xor
clc
outsb
mov
pop
inc
adc
out
sbb
push
jno
jmp
fidivs
or
ror
inc
or
rclb
and
inc
out
sub
xor
aaa
scas
popl
in
adc
stos
scas
mov
add
and
adc
mov
movsb
mov
mov
push
xchg
xchg
std
dec
addr16
dec
mov
push
je
add
xor
ja
sub
and
or
fmull
push
shll
data16
fcoml
rolb
pop
mov
push
gs
hlt
inc
into
fimuls
fs
in
xchg
cltd
xchg
dec
in
cmpsb
ds
adc
out
inc
lds
je
add
push
push
mov
nop
mov
cli
lods
sbb
inc
push
call
or
inc
pop
xchg
rcr
int
sbb
test
or
stc
push
mov
jmp
xlat
cmpsl
push
callw
imul
fcomps
pop
mov
fnstsw
cmpl
inc
add
divl
clc
sbb
arpl
loop
or
cmp
add
cmp
inc
sti
sbb
pushf
xor
cltd
paddd
push
xlat
or
jnp
push
scas
pop
lock
and
pop
pop
jae
cmpsb
or
xor
pop
jns
lea
and
test
xchg
pop
outsw
outsb
je
mov
push
pop
pop
call
and
fcomp
mov
in
leave
out
adc
clc
cld
mov
in
xchg
or
jnp
outsb
xorl
mov
aaa
inc
in
or
push
sub
gs
mov
andl
sbb
push
hlt
cmp
sbb
sbb
outsl
outsb
insl
addr16
sbb
xor
xor
or
imul
lods
leave
sub
add
pop
ss
xchg
leave
rolb
sbb
push
cli
in
or
fs
sbb
test
sbb
shl
jns
sub
je
add
enter
jmp
push
mov
out
clc
mov
push
stos
pop
pop
ret
repnz
imul
and
adc
push
sub
gs
hlt
jns
adc
xor
fstpl
sub
mov
dec
fsubrp
stc
cmp
dec
mov
fld
jge
test
in
add
pop
lods
test
nop
push
inc
sbb
mov
cmp
je
pop
dec
in
lods
mov
pop
hlt
in
pop
rolb
dec
add
pop
sbb
fdivrs
fidivs
dec
push
test
arpl
cmp
in
cmp
and
push
mov
adcb
xchg
or
mov
inc
into
mov
push
je
add
push
add
sahf
fadds
inc
xchg
mov
imul
jo
push
xor
mov
pop
cmp
lds
cmp
sbb
or
add
mov
lret
mov
aam
fsub
gs
clc
call
pop
add
or
insb
mov
adc
sbb
sub
inc
inc
mov
inc
cmpsl
and
sub
push
sti
inc
btc
push
fsts
mov
xchg
push
jns
rcrb
sbb
aaa
mov
pop
jb
xor
inc
and
pop
les
testb
inc
lock
adc
inc
sub
das
outsb
ss
mov
mov
idiv
add
push
out
jle
hlt
cmp
or
out
hlt
xor
mov
sub
adc
inc
test
mov
and
xor
mov
dec
lock
fnsave
inc
mov
ret
add
in
test
and
push
gs
pop
sub
icebp
cmpsb
or
fistl
push
dec
dec
rol
mov
dec
pushf
dec
inc
push
xor
xor
fs
insb
and
or
pop
xchg
gs
ljmp
cs
and
call
add
dec
outsb
je
jbe
mov
push
jb
mov
push
cs
pop
cmpsl
push
gs
pop
stos
stos
push
lods
lods
mov
lret
mov
dec
je
jo
lret
mov
lret
jo
outsb
push
gs
outsb
mov
jne
das
roll
aam
dec
shrl
mov
mov
mov
gs
mov
out
mov
insl
shll
xchg
inc
push
lret
push
xor
cwtl
js
lcall
sub
inc
push
fistps
cmp
inc
loop
in
lcall
push
mov
mov
int
imul
imul
add
sub
mov
mov
mov
mov
and
enter
sbb
sub
aad
jmp
push
lock
push
or
and
or
push
jmp
dec
dec
push
shll
adc
scas
pop
inc
mov
and
cmp
fadds
xchg
pop
rep
shrd
test
pop
add
movsl
pop
jmp
das
mov
xlat
mov
je
push
adc
sahf
lret
xor
loop
dec
mov
pcmpeqb
imul
fldenv
sub
or
movsb
or
xor
adc
or
add
push
mov
into
leave
or
shlb
sub
jo
add
lcall
call
orb
enter
or
sbb
sbb
or
push
aas
adc
shlb
pop
add
incb
jp
subl
sub
add
push
cltd
xchg
ret
jbe
adc
aam
rcrl
or
rolb
pop
push
adc
cld
push
mov
or
sahf
movsl
add
add
mov
jae
test
xchg
push
push
sub
inc
sarl
sbb
int3
push
mov
or
sub
pusha
ret
sbb
cmpl
sahf
popa
cmpsb
jnp
sub
dec
mov
clc
push
cmp
mov
sub
and
mov
adcl
cmp
mov
mov
push
popf
dec
adc
jg
xor
push
xor
aam
inc
je
inc
loope
mov
push
sbb
pop
je
adc
cmp
add
and
or
dec
sahf
outsl
or
adc
pop
pop
sub
je
bound
sbb
add
je
sbb
adc
or
jle
arpl
mov
pop
jg
push
push
jns
jb
push
into
adc
sub
or
push
jmp
aas
jae
jecxz
adc
cmp
fs
and
loop
les
lods
in
andb
inc
add
sbb
push
lret
in
popa
je
xchg
gs
imul
in
gs
outsl
arpl
imul
in
mov
scas
sbb
call
or
incb
or
popa
dec
jmp
dec
sub
push
mov
jne
scas
push
lds
mov
dec
fimull
daa
adc
jbe
pop
push
ret
xchg
pop
inc
mov
shll
jo
iret
pop
push
mov
or
cltd
cmpsl
fwait
add
decb
sbb
out
or
lock
jl
pop
clc
push
xchg
in
lret
call
dec
or
rclb
add
push
xchg
mov
inc
jge
mov
add
lgs
add
mov
jle
lock
outsb
push
push
adc
cld
jg
push
mov
sbb
sti
inc
in
push
mov
mov
adc
push
cwtl
add
out
inc
lahf
and
push
adc
and
xor
loope
shll
imul
mov
push
popf
adc
jmp
roll
sbb
sahf
cmp
popa
movsb
shlb
arpl
rorl
outsl
outsb
cmp
lcall
xor
shll
imul
shll
and
push
xchg
aas
popa
arpl
fs
xchg
je
outsl
outsb
gs
gs
xchg
js
gs
imul
es
mov
je
shlb
aas
popa
arpl
jb
sub
imul
sub
push
loopne
loope
lcall
in
out
cmpsb
imul
shll
sub
outsb
imul
cmp
shll
es
lret
xor
cmp
je
add
scas
and
dec
jne
jmp
xor
cmpl
adc
out
and
push
js
in
fisubl
out
jp
adc
stc
mov
add
jne
jne
call
adc
xlat
fstl
addr16
out
jg
fdivl
aam
push
jbe
jbe
scas
cmp
inc
pop
call
fs
lods
movsb
adc
je
jb
xor
shrl
clc
stc
cli
sti
cld
lock
rcrl
cmp
into
lcall
push
std
mov
popa
iret
push
pop
push
mov
mov
and
inc
lods
xchg
xor
mov
adc
push
ret
dec
inc
mov
stc
mov
cmp
sbb
repz
mov
je
cmp
mov
mov
push
incl
scas
push
ja
jge
push
call
sub
adcl
sbb
outsb
sub
inc
jnp
faddl
adc
pusha
mov
shlb
ja
fdivs
fildl
add
loop
xor
pop
jmp
call
cmp
push
or
call
sub
mov
mov
in
push
push
pushf
ja
shll
pop
pushf
mov
and
and
cld
in
std
cmp
or
sub
cmpsb
imul
insb
popa
lcall
insb
outsl
sbb
movsb
imul
mov
test
add
mov
in
jg
repnz
in
mov
inc
adc
cmc
inc
xor
push
mov
movsl
adc
mov
sbb
cmp
ret
and
enter
jne
push
jae
fs
pop
addr16
aas
mov
cmp
add
push
push
push
inc
inc
mov
or
add
cmc
add
pop
jp
iret
mov
and
hlt
andl
dec
jl
fs
into
jne
push
jb
add
or
int3
jle
cmp
jp
adc
imul
pop
pop
add
jle
in
xor
sbb
sbb
addr16
pop
test
or
clc
mov
sub
mov
les
or
sub
cmc
mov
jnp
and
mov
sbb
dec
mov
dec
adc
mov
andb
cmc
sbb
sub
mov
icebp
call
pop
sbb
xorl
xchg
push
fcoms
or
jge
fcmovne
sub
mov
mov
incl
jg
pop
shl
jnp
jecxz
nop
loopne
fadd
mov
jnp
jmp
dec
insb
dec
xor
push
jb
push
idivb
call
jbe
mov
ds
xchg
push
daa
rolb
popa
lock
lods
adc
sti
iret
sub
test
jle
mov
jmp
or
lea
push
shl
add
loope
mov
and
inc
dec
xor
daa
insb
push
mov
cmc
lcall
and
sbb
subl
xor
cmp
sbb
and
mov
js
int
add
popf
inc
sub
daa
and
pop
loope
hlt
gs
cmc
push
fistps
cmp
test
sub
or
jge
cmp
xchg
into
in
push
clc
fdivr
dec
pop
jns
add
cld
andb
or
mov
daa
ljmp
add
sub
or
test
cld
ret
xorb
je
sub
push
das
enter
mov
js
pop
add
push
xor
insb
xor
push
push
lahf
xchg
push
aas
out
sbb
pop
std
add
mov
mov
pop
dec
cmp
out
pop
aam
js
push
push
push
mov
adc
jb
in
cmp
pop
xor
dec
xor
and
sub
inc
mov
mov
jbe
das
sbb
aam
pop
divb
and
mov
xor
xor
push
push
mov
push
inc
ljmp
xor
cmp
mov
pop
add
movsb
jo
cmpsl
loop
lods
movsb
lds
and
xor
dec
into
insb
pop
and
arpl
enter
jnp
jmp
pop
push
push
jo
or
repnz
in
mov
jns
repz
loopne
jle
cmp
add
mov
ss
pop
push
stos
pop
scas
bound
mov
jno
test
icebp
mov
mov
cmp
iret
idiv
lock
sbb
jo
jecxz
pop
sbb
lea
cmp
lea
pop
and
std
mov
push
bound
fiadds
mov
xor
pushl
mov
sbb
cmpl
loopne
or
dec
pushf
sub
add
fdivrl
sbb
mov
push
sbbb
in
cmp
cmp
jb
icebp
lds
add
bound
mulb
ljmp
inc
hlt
jecxz
push
mov
shll
pop
xor
xor
xor
cs
insb
xchg
lcall
arpl
jbe
inc
lcall
push
addb
in
sub
mov
jecxz
mov
mov
stos
jo
je
push
mov
ljmp
mov
cmp
jle
test
mov
and
and
leave
mov
sbb
outsb
pop
pusha
cmpb
and
icebp
pop
enter
and
inc
sti
adc
cmp
sti
sub
cmp
xor
dec
mov
enter
add
stos
and
repnz
or
cmp
sub
inc
jbe
scas
inc
push
fs
nop
dec
and
fldl
sub
push
cmp
fdivl
scas
gs
sahf
push
push
push
pop
sbb
and
jecxz
adc
xor
sbb
and
and
and
push
iret
fmull
mov
hlt
ds
lods
loopne
movsb
mov
div
call
lods
sub
and
mov
adc
add
inc
das
add
je
iret
in
push
xor
rcr
mov
xchg
pop
fcoml
dec
notl
je
movzbl
orl
div
scas
sarl
stos
arpl
je
es
xchg
stos
and
stos
cmp
and
push
insl
in
sbb
add
mov
push
lcall
jo
imul
push
insb
insb
lret
xchg
gs
gs
fs
lret
sbbb
outsl
jmp
inc
lret
adc
out
lret
lods
icebp
jne
add
or
dec
cwtl
xchg
xchg
xchg
pop
je
and
pop
cmp
jne
lock
dec
inc
xchg
xchg
cwtl
jo
adc
rcrb
and
adc
cltd
daa
icebp
pop
sbb
or
inc
les
outsb
inc
cmp
add
repnz
in
std
xchg
rolb
insl
sbbb
xor
pop
mov
sbb
in
push
insl
pop
and
sahf
push
hlt
push
add
jae
sbb
jp
sub
punpckhdq
dec
mov
stc
cmpb
fsts
xor
sub
adc
int3
xchg
out
dec
pop
pop
insl
fstps
stc
xchg
xchg
dec
decl
mov
lea
orb
xchg
stos
push
outsb
and
lods
cmpsb
icebp
xlat
jbe
mov
xchg
jnp
sub
sub
lock
add
or
pop
add
ds
push
push
loopne
outsl
pop
dec
push
bound
jb
gs
xchg
gs
dec
imul
outsl
outsl
insb
data16
loopne
gs
push
fs
outsl
cmp
pop
push
in
push
gs
dec
dec
pop
mov
outsl
push
popa
cmp
pop
xchg
gs
dec
push
dec
inc
xchg
xor
popa
arpl
sbb
dec
xchg
xchg
add
mov
popa
jmp
mov
jae
sbb
int3
add
mov
xor
mov
inc
popf
or
icebp
ret
ds
xor
cltd
mov
and
xchg
mov
addb
int3
mov
in
adc
fs
jne
lea
fisubl
mov
mov
fldl
enter
lcall
dec
ja
cmp
jo
lcall
add
mov
stos
sarb
sub
mov
test
or
fs
andb
addr16
loope
jg
clc
add
cld
xchg
cld
into
out
and
cld
out
out
cld
or
sbbl
dec
dec
or
xor
add
jae
mov
add
dec
add
enter
std
or
cs
popf
lea
cmp
push
popa
and
int
sub
jb
jne
leave
shrb
daa
pop
sub
leave
leave
leave
fldcw
jo
sub
repnz
dec
inc
addr16
mov
push
imul
dec
ja
sbb
outsl
inc
inc
dec
ja
je
insl
dec
dec
lret
fstpt
stos
jae
push
bound
mov
mov
mov
daa
daa
dec
xor
gs
in
adc
addr16
jo
mov
sbbb
orb
and
xchg
addr16
mov
mov
mov
pusha
daa
daa
daa
mov
push
fisubrl
jecxz
dec
dec
into
into
mov
scas
mov
jbe
cmpsb
cmp
rcr
leave
rcrb
ret
repnz
inc
jae
xor
loopne
loope
into
into
and
std
nop
in
in
xor
into
jmp
fucom
and
xor
cmp
jmp
in
cmp
cmp
in
test
out
lock
xchg
icebp
sbb
pop
rorl
add
dec
rorl
mov
orb
xlat
jns
sbb
hlt
fldcw
xor
dec
pop
inc
arpl
and
dec
ja
and
jb
mov
daa
sub
mov
sub
push
inc
inc
leave
fxch
shlb
inc
cmp
leave
inc
inc
inc
and
jno
in
pusha
mov
leave
rcrb
arpl
jb
gs
pushw
addr16
push
shrl
imul
insl
decb
push
and
cmp
popa
adcl
test
xchg
and
mov
sbb
and
les
imul
xor
movsb
movsl
cmpsb
cmpsl
jno
mov
ds
mov
popf
or
dec
ret
sti
les
rorb
mov
daa
leave
lret
int3
daa
addr16
xor
mov
shlb
es
sarl
xchg
ljmp
xor
loop
jecxz
jae
jb
jbe
push
out
call
jmp
xchg
adc
enter
add
dec
mulb
add
in
incl
jmp
decl
incl
decl
call
outsb
jb
repnz
incl
mov
xchg
mov
pushl
addr16
mov
idiv
insl
sub
mov
je
sub
sub
or
sub
push
ljmp
sti
sti
jg
push
mov
pop
push
std
pop
rcrb
pop
pop
mov
leave
pop
pop
jb
pusha
popf
sub
rcrb
bound
sahf
popf
popf
mov
sub
jmpw
mov
xchg
mov
popa
push
cmp
imul
fildll
mov
xchg
movsl
outsl
jo
jno
dec
mov
mov
aaa
jae
cltd
je
jne
daa
jbe
ja
js
dec
leave
rcrb
push
jnp
jbe
ret
jge
sarl
lcall
adcl
cmpsb
test
or
out
jl
adc
hlt
shl
testl
jl
enter
enter
aam
popa
sar
sar
push
lcall
ficoml
inc
xor
sbb
daa
in
stc
add
cli
fdivr
push
mov
push
inc
adc
movl
scas
mov
data16
gs
sbb
push
pop
lds
fmuls
sbb
and
add
popf
insl
push
sbb
ret
jg
or
or
aam
inc
ret
fimuls
sub
dec
rcll
sahf
jns
sbb
sti
lds
push
or
and
sub
mov
jae
jne
mov
fs
insb
mov
fs
mull
ja
imul
push
jmp
sbb
je
gs
in
out
sub
add
imul
jmp
sub
fmul
mov
lcall
push
mov
insl
xlat
jne
enter
lret
lret
int3
xchg
andb
push
and
jne
jbe
jb
xchg
imul
sub
push
adc
addr16
mov
lret
popa
insl
dec
popa
popa
mov
lret
adc
addr16
xchg
orb
fs
push
adc
xor
outsb
cmc
jl
mov
mov
imul
imul
cmpsb
imul
lahf
xor
mov
or
loopne
in
shl
push
enter
int3
idivl
add
enter
pmulhuw
stc
adc
pop
jecxz
imul
xchg
lods
arpl
cmpl
fs
sarb
sbb
push
jne
addr16
js
sbb
mov
or
or
cmc
lock
pop
out
inc
cmp
push
dec
lcall
insb
enter
push
jno
jb
stos
pop
int3
jnp
add
aam
jl
xor
rcll
lea
mov
xchg
aad
adc
mov
in
sbb
mov
add
push
jnp
mulb
add
iret
mov
lret
inc
mov
xchg
nop
cld
cmpsl
adc
lds
icebp
sti
pop
lock
inc
hlt
fwait
adc
xor
invd
xchg
sub
adc
data16
in
jbe
fs
addr16
inc
mov
xchg
cmp
out
adc
inc
es
adc
dec
out
push
addl
add
push
xor
sti
lods
stc
fiadds
cld
pop
adc
add
or
xchg
mov
adc
in
dec
rcll
inc
or
loope
imul
pop
sub
push
xchg
insb
xor
orb
aam
adc
gs
fmull
gs
test
jb
inc
rorl
push
popa
insl
jecxz
clc
xor
dec
xchg
dec
push
dec
test
pop
inc
cwtl
popl
sbbl
lret
mov
lret
push
jns
je
insl
das
lret
mov
pop
imul
hlt
test
inc
test
cli
ror
adc
and
cmp
outsb
push
cmp
mov
sub
inc
ljmp
pop
sub
cld
pop
adc
pop
mov
push
cwtl
and
sbb
adc
dec
and
pop
add
ret
push
jmp
or
rorb
xor
sbb
addr16
fsubrl
loope
lret
in
push
jae
std
mov
xchg
es
movsb
push
imul
je
dec
leave
dec
popf
in
jle
in
out
out
out
ds
xchg
outsb
in
call
rorb
imul
mov
push
push
pop
stc
xlat
stc
fdivr
mov
xchg
and
stc
push
pusha
push
cmp
fwait
push
adc
jns
dec
push
leave
clc
fdivr
pushf
in
daa
aam
aad
fdivr
cs
nop
xchg
sti
cmpl
sbb
and
imulb
mov
std
adc
pusha
jmp
sbb
outsl
dec
neg
sbb
add
cs
add
imul
fs
lods
scas
or
xchg
out
mov
insb
mov
mov
cmp
fstps
mov
push
mov
jb
movsl
pop
lcall
xchg
xchg
xchg
mov
cmp
pushf
mov
sahf
dec
insl
cmp
xchg
lahf
mov
dec
cmp
cmp
mov
xchg
movsl
sbb
aad
mov
mov
or
xchg
dec
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
sub
sub
or
mov
cmp
cmp
mov
cmp
sahf
add
insb
movsb
adc
clc
pop
jns
enter
inc
aam
xor
iret
add
sti
and
in
mov
pushf
fsubs
icebp
inc
sbb
mov
test
mov
mov
aas
pop
xlat
call
popf
popf
call
mov
mov
call
shlb
cltd
push
pop
idiv
cmp
xchg
inc
call
dec
push
loope
dec
jb
jb
dec
dec
dec
dec
jb
jb
dec
dec
dec
push
jb
jb
push
push
cmp
jb
jb
ds
inc
inc
jb
jb
inc
inc
inc
inc
jb
xor
xor
xor
jb
xor
jbe
push
cmp
cmp
dec
aaa
jb
je
jns
jbe
daa
daa
addr16
ja
jns
daa
addr16
daa
jnp
pop
jge
daa
and
daa
jg
push
push
leave
leave
or
push
push
push
pop
fxch
leave
leave
pop
pop
pop
pop
pop
enter
pop
pop
pop
pusha
jb
leave
leave
fs
jb
jb
push
jb
jb
insl
pusha
outsb
outsl
cmp
js
jo
divb
mulb
sti
clc
clc
adc
push
or
fs
add
adc
inc
incl
and
push
or
call
sbb
les
repnz
add
shll
push
push
sub
add
mov
mov
jnp
mov
pop
shlb
add
insb
pop
inc
jge
js
bnd
push
or
jbe
mov
add
dec
adcb
rolb
dec
das
icebp
sub
cmpb
add
push
rorb
mov
inc
mov
mov
jb
pop
push
std
lock
add
and
mov
je
xchg
mov
stos
xchg
cmpsl
test
cmp
call
add
fistl
add
cmp
sub
loopne
adc
or
sbb
mov
and
dec
adc
push
add
adc
cmpsl
lret
push
aam
subb
loopne
incb
xchg
jns
pop
xchg
lods
ret
je
jo
pop
xchg
or
xor
cmpsb
mov
xor
or
xor
gs
xchg
js
xor
arpl
insl
jle
cmp
gs
cmp
push
popa
gs
xchg
outsb
addr16
das
mov
outsl
jo
cmp
movsl
xor
mov
jge
jo
lcall
lcall
je
jo
nop
cmpsb
imul
cmpsb
mov
push
imul
imul
imul
cmpsb
imul
pop
mov
jo
aaa
pop
xchg
das
insl
aad
out
inc
les
xchg
fs
pushf
jmp
push
sti
or
aad
pop
arpl
xchg
xchg
mov
or
aad
lcall
das
das
push
jns
jne
cmpsb
imul
imul
cmpsb
imul
int
mov
sbb
mov
jne
fwait
push
or
push
adc
pop
call
fadds
pop
adc
in
call
pop
mov
repnz
inc
rcl
adc
sub
sub
push
inc
mov
dec
cltd
insl
imul
fldcw
call
mov
pop
pop
push
push
push
pop
inc
mov
mov
leave
mov
rclb
cmovno
mov
jne
sbb
or
aaa
and
cmp
jbe
mov
out
mov
push
pop
mov
dec
or
fldl
out
mulb
mov
in
adc
fstp
sti
inc
xor
mov
mov
sbb
stc
push
sti
mov
mov
jns
push
mov
push
inc
mov
jl
cmp
int3
pop
pop
stos
imulb
enter
cmp
or
test
sbb
cmp
add
or
xor
sbb
xchg
push
sbb
pop
pop
and
add
push
push
jo
add
cmp
loopne
or
sbb
insl
mov
pop
jbe
and
sbb
push
jmp
dec
scas
mov
mov
and
adcl
inc
mov
jns
pop
sbb
dec
cmp
lea
fmuls
dec
mov
iret
mov
jns
cmp
rcl
insb
dec
test
sbb
and
pop
je
pop
testb
push
aaa
rolb
in
pop
mov
mov
les
push
imul
lcall
mov
cmp
or
negl
mov
in
mov
add
mov
cmp
jbe
add
mov
fldt
sbb
inc
add
mov
fisubl
cmp
and
push
call
es
adc
inc
ljmp
sub
out
rcl
xchg
call
or
and
inc
or
out
add
adc
fnstcw
stos
fdivl
sbb
sbb
js
or
sub
scas
popf
push
pusha
push
push
sub
roll
loop
mov
push
imul
jno
jbe
jp
and
repz
pop
ja
cmpl
fneni(8087
push
sub
mov
cld
inc
or
in
leave
pushl
lods
rorb
js
add
je
hlt
cld
adc
cmp
jne
out
fyl2x
rcrl
add
imul
push
ja
adc
test
cmp
loope
aaa
pop
test
sbb
movsb
jnp
xlat
sbb
xor
pop
jp
sub
daa
jp
dec
test
add
mov
js
sbb
mov
loop
mov
call
jae
and
enter
push
mov
fnstcw
dec
test
jne
fisttpll
lcall
aaa
insb
lds
mov
xor
cmp
neg
mov
mov
lcall
add
or
enter
and
fs
adc
fdiv
jmp
mov
outsb
mov
fisttpl
icebp
adc
pushf
nop
jl
outsb
push
jnp
push
push
cmp
pushf
clc
pop
mov
divb
hlt
dec
stc
pusha
ss
push
pop
and
jbe
sbb
sbb
adc
jbe
mov
lea
push
lock
sbb
mov
test
in
cmp
jb
inc
in
cmp
jle
adc
leave
adc
mov
jb
push
mov
add
adc
cmpsl
ds
aad
or
es
jb
imul
and
mov
adc
bound
add
inc
xor
out
leave
add
mov
xor
xor
sbb
sub
test
and
sub
inc
jecxz
dec
mov
lods
nop
push
push
insb
jo
insl
rclb
inc
cmp
add
aaa
rcrb
cmpxchg
insb
mov
adc
push
adc
add
cmpsb
repz
jnp
push
mov
mov
xchg
data16
inc
mov
testb
ja
aas
es
xchg
dec
xor
jae
xlat
sub
push
jb
movsb
or
jbe
add
push
xorl
test
jge
jo
push
jno
cmp
xchg
inc
xor
and
pushf
out
test
add
loopne
or
dec
or
add
mov
cwtl
push
pop
or
ret
pop
inc
dec
xchg
and
push
push
mov
adcb
test
push
push
push
xor
sbb
push
cmpsb
mov
adc
icebp
inc
mov
or
or
decl
test
je
test
je
add
inc
je
and
lds
data16
mov
push
sub
sub
cld
pop
push
push
fsubl
and
aam
loopne
in
iret
push
push
cmp
push
lahf
je
lret
test
jbe
orb
sbb
aaa
insb
les
inc
loop
cmp
jmp
push
outsb
sbb
add
std
insb
fs
gs
fnstenv
pop
out
lret
ds
dec
js
cmp
xor
call
add
mov
push
lea
dec
push
psubsw
mov
popa
mov
mov
loope
dec
sbb
mov
sarl
sbb
out
test
or
or
jmp
sub
cwtl
in
addb
pop
pop
jp
push
imul
add
push
int
or
pushl
jne
jno
add
push
ja
push
or
loopne
xor
addl
sub
lahf
adc
inc
je
push
sbb
sbb
mov
pop
sub
ffreep
inc
sub
push
push
in
das
push
add
pop
sub
push
or
cs
mov
mov
push
dec
in
adc
and
mov
push
mov
jo
adc
push
jbe
cmpb
jne
cmpb
lret
mov
add
push
pusha
loopne
cmp
mov
std
or
in
sub
shrb
adc
lock
or
push
lahf
inc
pushf
add
mov
sar
push
sbb
sbb
cwtl
adc
pop
ffreep
mov
scas
adc
or
sub
sub
cmpl
daa
add
push
lret
mov
sub
cmp
je
pop
subb
clc
clc
jb
sub
je
mov
add
cmpl
mov
shrl
iret
push
xlat
and
repnz
add
fcmovnu
push
add
mov
add
push
inc
dec
sbb
test
sbb
add
sub
jmp
dec
or
shll
repnz
test
loope
fs
add
movl
cmc
jae
aas
mov
jne
incb
mov
rorb
das
lods
ja
outsb
mov
add
imul
mov
faddl
jle
jno
shr
jle
movzwl
mov
jne
daa
add
or
popa
sbb
mov
mov
jne
or
jl
adc
mov
jbe
lock
pop
or
sub
mov
ss
push
sub
aam
lea
jae
adc
mov
add
jo
incl
push
cld
jl
add
jmp
subb
push
jae
inc
add
lods
push
imul
jno
push
fcomps
je
adc
cmp
or
mov
add
mov
xor
add
sub
sbb
mov
pushl
add
push
scas
push
xor
mov
sub
loope
enter
rorb
sbb
sbb
lret
clc
les
movsb
andl
jle
sbb
pop
orl
inc
mov
aaa
and
sbb
js
ret
add
pop
inc
lret
mov
les
ret
mov
rclb
test
testl
roll
cld
shl
sub
mov
loopne
push
fcomps
pop
adc
jge
pop
pop
mov
mov
or
mov
testb
je
pop
inc
sub
dec
inc
shr
or
sub
pop
cmpsl
push
fcomps
insl
add
mov
xchg
xor
enter
push
mov
xchg
mov
mov
xchg
aaa
mov
sub
mov
mov
push
sub
mov
cmp
sbb
sbb
and
pop
roll
sub
in
gs
lret
mov
sub
or
jb
mov
rcl
pop
mov
mov
xchg
push
push
or
or
ja
call
sti
jmp
xchg
loopne
lds
or
out
shlb
lret
or
pop
stos
xchg
insl
dec
add
or
popf
pop
hlt
adc
movsb
jae
imul
clc
sub
adc
subb
mov
or
mov
daa
loopne
add
icebp
push
mov
cltd
int
mov
jecxz
or
and
push
mov
ja
clc
pop
orb
mov
ret
push
stos
cli
aad
adc
cltd
cmpsb
pop
push
mov
mov
inc
sbb
pop
push
sbb
jl
jecxz
cmp
push
cmpsb
jb
icebp
add
ret
mov
add
xor
push
in
push
test
sbb
test
test
jge
stos
sbb
adc
push
or
sub
or
and
push
popa
adc
inc
lock
and
mov
sahf
xor
mov
mov
sbb
mov
popa
call
mov
iret
pop
mov
fisubrs
mov
xchg
or
xor
add
or
cmp
cmp
scas
push
mov
daa
xor
and
or
mov
or
outsb
mov
fdivs
mov
inc
mov
insb
out
mov
add
outsl
fwait
add
bnd
lods
inc
test
js
stos
iret
and
xor
insb
push
test
inc
imul
sbb
push
je
push
imul
out
or
pop
push
pusha
and
add
ds
andb
sub
fs
outsb
imul
addr16
mov
out
dec
inc
daa
add
lea
and
arpl
jae
outsl
cltd
or
jne
popf
mov
mov
lea
mov
pop
xchg
lods
cwtl
dec
pop
xor
xor
pop
xchg
gs
popa
jns
je
test
repz
inc
js
fdivr
pop
cwtl
push
xchg
xorl
mov
jl
std
mov
cmp
pop
adc
les
jo
xor
adc
loope
mov
icebp
mov
xchg
or
mov
mov
call
inc
add
xor
lcall
mov
cmp
test
adc
xorb
jne
cltd
and
adc
push
mov
pop
cmp
xchg
or
popf
pusha
repnz
pop
xchg
movsl
xchg
gs
outsl
or
jb
int3
loope
inc
shll
jecxz
jnp
sbb
push
xor
ret
and
or
mov
jbe
mov
test
in
or
pop
pusha
or
sbb
leave
push
insl
pop
adc
xchg
sbb
test
mov
xchg
fdivrs
cmp
aaa
add
dec
inc
push
sbb
or
and
and
push
inc
inc
mov
addr16
in
sbbb
inc
mov
push
fistl
jp
test
jnp
mov
cs
icebp
rcrb
lcall
lret
sbb
pop
dec
nop
or
cmp
rclb
stos
bound
fmuls
sbb
cmpsl
or
fcompl
dec
add
fwait
xchg
pushf
mov
test
mov
loopne
and
mov
repz
cld
ds
repnz
dec
repnz
repnz
inc
repnz
repnz
jnp
mov
sahf
adc
mov
pop
mov
daa
dec
mov
inc
pop
pushf
je
or
sub
fnstcw
mov
nop
dec
xchg
xor
add
cmpsl
xor
sahf
lods
adcb
adc
push
mov
mov
add
inc
bound
popa
ljmp
jmp
jae
dec
add
adc
jg
je
push
outsl
outsl
insb
push
xor
popa
jo
push
add
in
jne
sti
jb
jne
insb
and
mov
insl
sbb
jo
adc
pop
inc
insb
jnp
mov
movsb
cwtl
add
inc
dec
gs
pushf
outsb
mov
dec
jae
arpl
pop
inc
mov
push
jnp
out
mov
jge
dec
outsl
fs
adc
mov
fildl
dec
outsl
popa
fs
imul
fwait
sub
xlat
adc
sub
inc
add
imulb
sub
imul
or
jnp
dec
push
and
mov
lods
fstp
fs
dec
into
add
mov
bound
xchg
fimuls
pop
je
js
loope
divb
jb
outsb
and
push
jne
in
push
push
gs
outsl
outsb
push
sbb
into
loopne
or
push
addb
xor
jae
mov
outsb
mov
jo
push
push
ficompl
inc
mov
cmp
imul
pop
ret
andb
arpl
jge
inc
jno
dec
pcmpeqb
and
pusha
xchg
push
das
clc
add
inc
icebp
sbb
sub
jnp
push
sbb
push
gs
je
mov
bound
jae
sub
or
hlt
sub
push
mov
loope
jbe
rorl
or
mov
sub
out
push
sti
inc
movb
push
fmull
mov
push
imul
push
ss
sbb
jbe
les
mov
loope
push
push
jne
jns
andl
inc
xchg
cmp
xchg
insl
adc
insb
xor
add
push
loope
outsl
jo
cmpsl
filds
jne
mov
pop
mov
sbb
jbe
xchg
data16
popa
js
es
and
lahf
insl
sbb
add
add
aaa
push
mov
jbe
loop
outsl
pushf
xor
add
sub
dec
jae
ret
mov
insl
insb
jg
add
add
arpl
lods
hlt
mov
dec
push
outsb
push
aas
mov
pop
dec
inc
push
lea
push
lods
add
gs
mov
aaa
push
orl
fisubrl
mov
popa
test
push
inc
rcrl
jp
adc
jb
fs
popa
xor
scas
add
pop
cmp
inc
pop
pop
and
push
inc
xchg
add
push
shll
shrl
pop
inc
fiadds
jmp
rorb
popa
addr16
ret
fisubrl
and
push
push
fmull
imul
xchg
inc
negb
pusha
sbb
jns
add
je
pop
mov
xor
test
insl
js
lret
sub
pop
and
dec
xchg
inc
and
aad
sbb
mov
add
jne
dec
mov
mov
imul
cwtl
in
mov
adc
push
add
jne
pop
adc
push
jnp
xor
pop
add
test
gs
das
fstpt
je
out
fldenv
jb
and
xchg
nop
aas
xchg
sbb
and
outsb
jne
and
ss
push
ja
add
and
pop
inc
stos
popa
ficompl
adc
dec
sbb
fsubrl
bound
cld
shrd
adc
adc
push
paddd
fadds
arpl
imul
inc
inc
push
inc
push
sub
cmp
and
cltd
add
inc
movsl
scas
mov
arpl
lret
lret
pop
lret
adc
insb
in
jno
add
or
xor
add
dec
in
pop
xor
aam
imul
lret
mov
data16
popa
daa
mov
add
xor
insb
jns
test
out
adc
sub
inc
sub
cmp
mov
into
mov
mov
dec
cmpb
xor
pop
push
add
dec
aaa
jbe
inc
loope
jae
nopl
out
in
jmp
dec
sbb
push
and
fistpll
or
lds
adc
outsb
pop
stc
fdivr
sub
or
loope
pop
jbe
gs
and
add
xor
ret
cmp
loope
xor
xchg
xchg
ret
pop
insb
ja
pop
push
mov
lds
dec
sbb
paddusw
push
mov
or
inc
jns
xor
sbb
jecxz
dec
loop
pop
add
push
sub
inc
and
popa
js
xor
push
add
jecxz
inc
sub
lcall
or
inc
dec
push
dec
aaa
rcrl
jmp
lea
bts
cmp
sbb
fwait
dec
repz
xor
dec
mov
mov
dec
push
and
dec
adc
cmc
idiv
add
cmpsl
clc
not
cmc
stc
sbb
sub
cwtl
add
jmp
das
mov
inc
mov
add
sbb
inc
insb
mov
or
inc
jmp
mov
fisttpl
dec
add
xor
scas
push
pop
sbb
insb
mov
pop
add
test
add
mov
and
or
and
sbb
adc
and
mov
inc
adc
inc
fcomps
push
loop
inc
xchg
mov
inc
lea
jne,pt
in
psubsw
ljmp
xchg
cld
jge
or
les
jl
sarb
les
add
inc
call
loopne
xor
test
shll
fcompp
jg
jmp
addr16
repnz
jno
adc
pop
xchg
lcall
cmp
jp
lcall
loope
jge
in
es
aaa
loope
add
pop
mov
xchg
lock
cs
pop
inc
dec
into
adc
sbb
mov
pop
orb
rcl
cwtl
pop
cmp
decl
dec
fcomip
jo
push
add
lods
f2xm1
data16
notl
jge
dec
arpl
mov
add
and
mov
je
jne
push
push
and
xorb
movsl
mov
lret
push
mov
inc
sbb
mov
mov
ffreep
loope
int
cli
mov
cmp
xchg
cmpb
leave
incl
push
fimull
jnp
jmp
push
and
and
and
test
add
push
cmp
pop
orl
xchg
ret
xor
test
inc
mov
xor
adc
pushf
adc
xor
jmp
mov
dec
and
roll
hlt
push
ss
rcr
cmp
shll
pusha
call
sbb
das
push
out
adc
xor
lock
jge
std
shr
cmp
notl
nop
rorb
ret
cbtw
jno
sbb
push
mov
shr
call
mov
mov
ss
push
pusha
ja
or
mov
les
jne
fs
adc
push
add
in
fucom
fcoms
pop
or
addb
and
insl
out
mov
sbb
push
jmp
jbe
je
roll
rolb
and
cmp
and
loopne
sbb
pushf
jbe
icebp
call
sub
popl
jns
push
xchg
inc
push
ror
cmp
pop
jmp
out
pop
loop
incb
ja
fstpt
jecxz
mov
cmp
ljmp
adc
in
lret
push
loope
stc
fstpl
pop
mov
stc
mov
sub
cmp
rcrb
inc
xor
or
test
ret
call
sub
or
inc
imul
pushf
repz
push
into
push
call
and
sbb
or
and
xor
fistl
dec
lahf
cli
jg
sub
push
cs
mov
mov
pushf
mov
mov
jle
inc
mov
inc
jmp
lods
fldl
add
or
jbe
cmp
pop
inc
dec
jmp
mov
dec
not
sbb
fistpll
not
mov
jg
jno
mov
shll
in
rcl
xor
mov
call
iret
mov
aad
ja
call
mov
ret
pop
hlt
cmpsl
mov
popf
pusha
jmp
pop
clc
jg
sub
rolb
ret
push
xor
stc
call
imul
repnz
jne
and
not
sar
ret
cmpsl
lds
lret
xor
pop
jnp
pop
pop
xlat
adc
xor
negl
mov
shll
fadds
pushf
call
outsl
and
pop
push
dec
jmp
add
mov
sub
or
jle
movsl
and
cld
daa
and
push
cmp
jg
aaa
and
mov
shll
dec
add
pusha
pusha
mov
mov
push
shl
inc
mov
mov
add
adc
cmp
sbb
mov
mov
insl
pop
ljmp
jp
cmc
push
lea
pop
sbb
mov
push
call
inc
push
out
rolb
cmp
mov
aas
pop
movsb
xor
pusha
movsb
pop
xor
stos
xchg
inc
les
ret
sbb
push
lds
inc
jb
pop
in
add
sub
in
mov
adc
add
dec
in
ja
insl
xchg
and
sbb
clc
pushf
push
outsl
push
fdivp
sahf
or
xor
jmp
inc
bound
mov
push
sub
fildl
sub
jmp
stc
inc
pop
push
xchg
pushf
out
cld
insl
out
dec
out
jmp
push
xchg
pop
pusha
lods
dec
mov
ds
jp
loope
xlat
lret
cmc
pop
and
sub
jne
pusha
xchg
and
dec
int
sub
mov
xchg
push
jb
cltd
inc
jmp
jne
xlat
out
or
rolb
push
stc
jmp
add
ja
in
test
push
cmp
cmp
mov
paddusw
jge
fnstenv
dec
and
push
mov
mov
mov
xchg
or
adc
fstl
aad
mov
pushf
push
leave
mov
or
pop
add
jbe
testb
jl
push
rorl
popl
ret
mov
adc
ja
or
loope
mov
cmpb
stos
test
or
jmp
inc
cmp
and
rcl
xor
mov
scas
shlb
add
push
fsubl
or
testl
aad
add
je
outsb
push
or
push
add
cmp
in
stc
not
clc
popf
or
inc
ret
cmc
clc
cli
clc
daa
in
aaa
lock
daa
setge
rcr
xchg
in
sub
push
ja,pt
inc
aaa
jl
or
or
ret
fstpl
push
das
mov
xor
sub
sub
loope
ret
outsb
or
push
add
lock
or
and
cmp
push
inc
inc
cmp
inc
test
aaa
mov
aaa
shl
jmp
aaa
call
ret
loope
sbb
xchg
loop
push
mov
movsb
mov
sbb
call
or
ret
push
hlt
adc
adc
movsb
cs
ja
dec
scas
or
icebp
test
pushf
clc
idivb
outsl
test
xor
xor
fsubr
mov
jmp
mov
pushf
and
push
pop
add
pop
mov
push
sete
roll
lret
or
and
fcompl
xchg
nopl
mov
out
mov
pushl
aas
and
call
jbe
push
pushf
ss
cmp
mov
push
jge
call
scas
shr
scas
in
dec
bts
rol
push
mov
jecxz
stc
push
sub
or
pop
imul
inc
dec
pop
cmp
sbb
enter
outsb
fnstsw
sbb
shrb
mov
jmp
xchg
enter
test
mul
mov
mov
ret
out
shl
out
fcoms
mov
xchg
or
jmp
stos
insl
test
xchg
ds
sub
icebp
fwait
push
xlat
insb
mov
push
xor
push
aaa
push
subl
insl
sub
mov
push
stc
rol
pop
ret
pop
xor
stc
cmc
repz
pop
ret
mov
outsb
les
call
aad
push
sub
or
frstor
xor
call
scas
in
cmpsb
xchg
dec
ficomps
inc
inc
mov
xchg
rorb
out
dec
sub
clc
jno
int
cmp
das
jnp
inc
dec
mov
or
shlb
mov
sub
xchg
fmul
loop
jmp
xor
aaa
lcall
dec
add
fcomps
jns
data16
gs
mov
xor
stos
push
fists
daa
mov
or
test
ret
rorl
xchg
adc
jo
cmp
call
jle
jnp
inc
or
mov
sub
sbb
or
adc
add
mov
sub
xor
pop
add
popf
mov
in
in
popf
sbb
pop
push
xchg
jo
push
test
dec
jmp
xchg
mov
daa
xchg
inc
sbb
dec
cmc
sub
pusha
adc
cmp
push
and
test
pusha
push
out
rolb
xchg
cmp
out
and
out
clc
jmp
outsb
and
or
add
sbb
fists
push
test
addl
or
mov
pop
movsl
jg
cmpl
movsl
mov
cmc
add
lea
in
xchg
inc
lods
out
rorl
arpl
iret
nop
cmpsb
test
xchg
addb
pop
fisttps
cli
and
or
out
push
and
pop
cmp
mov
lea
and
pop
or
mov
lods
jmp
iret
std
inc
std
fwait
xlat
mov
insl
cli
std
add
das
lahf
jge
lea
jne
xor
mov
xacquire
xor
mov
adc
outsb
sbb
pop
shl
ljmp
das
mov
mov
jb
pop
rcl
fldcw
les
mov
push
xchg
xchg
mov
mov
add
or
outsb
das
jge
ja
mov
call
cld
clc
jle
movsb
pop
pop
or
push
mov
adc
push
push
pop
incb
notl
shll
in
movsb
sbb
lods
fldl
mov
fisttpl
into
cmc
out
jmp
xor
and
lea
mov
adc
rcr
sub
fucomip
or
fnsave
mov
out
lret
lahf
aam
jne
shld
xchg
adc
mov
push
sbb
idivb
jmp
adc
imul
add
repnz
mov
in
and
cs
pusha
jmp
out
pop
sarl
push
mov
xor
clc
rcll
aaa
icebp
jle
fsubrl
cmp
sbb
popf
cmp
sub
in
std
adc
cmpsl
sbb
adc
mov
insl
ficoml
mov
cmp
nop
stc
ret
insb
in
push
jmp
sbb
or
jmp
fisttps
adc
int3
or
or
test
push
add
in
add
stos
adc
push
and
imull
push
mov
sub
cld
inc
pushf
testb
orl
pop
orl
push
and
lods
add
add
sbb
mov
xchg
pushf
ficoml
push
aaa
into
loopne
sbb
jo
sub
mov
aaa
jno
mul
jle
icebp
rorb
xchg
loopne
jbe
je
mov
cltd
xor
in
adc
leave
add
lds
mov
cs
shrl
push
enter
mov
leave
insl
data16
adc
xchg
sub
aam
mov
jmp
lret
int
addr16
pop
mov
fistpl
mov
sub
mov
lret
add
fisttpl
enter
ja
neg
fwait
in
jae
ret
repz
sbb
imulb
jae
int3
aad
jle
ret
rorb
stos
out
int
inc
push
xor
test
jnp
iret
pop
ja
dec
jg
neg
fwait
in
pop
xchg
rorb
jmp
cmp
dec
xor
fwait
jo
push
shlb
mov
in
dec
mov
mov
sub
lret
daa
stos
cmp
jge
mov
push
mov
lahf
int
das
fwait
aas
push
outsl
ret
push
dec
ret
and
inc
jnp
mov
das
daa
arpl
jg
or
repz
shlb
aas
ja
inc
clc
ja
pop
or
daa
jecxz
fiadds
ret
jnp
sub
xchg
testl
mov
and
or
dec
mov
mov
inc
cmp
sbb
pop
out
or
xor
out
xchg
xchg
neg
in
les
stos
add
ret
jnp
pop
daa
sbb
xchg
fsubp
cmp
xcrypt-cbc
cmpsl
adc
jnp
sub
ret
xchg
js
mov
lock
out
int
add
or
jp
sbb
stos
push
cmp
xchg
mov
xchg
cmp
call
push
mov
jb
dec
push
hlt
dec
inc
mov
dec
aas
cmc
loop
xchg
gs
sub
cld
cwtl
sub
fcompl
gs
mov
sbb
pusha
mov
pop
jge
and
dec
sub
scas
scas
dec
xchg
or
shr
inc
lret
cltd
push
sub
jmp
push
sbbb
in
dec
adc
add
xor
clc
sbb
lea
mov
cmp
cwtd
xchg
push
pop
loop
add
mov
jno
test
xor
test
mov
fnsave
loopne
dec
pop
sub
pop
fisubrl
lea
sbb
pop
cmc
pop
cmpb
pushf
jp
add
addr16
faddl
je
cmp
and
cmp
mov
pop
sub
or
sub
inc
jmp
sub
push
aad
addr16
enter
add
imul
push
das
pusha
les
outsb
pop
inc
ret
adc
sub
push
cs
ja
test
mov
fdivrl
ret
aam
mov
jmp
pop
sbb
mov
add
fucomi
xchg
sub
mov
or
xor
std
push
aam
ret
cmp
pushf
xchg
cmp
pop
cs
adc
inc
out
push
lods
cmp
push
mov
js
push
pop
cmpsl
inc
neg
leave
icebp
loop
jg
addl
dec
cli
push
sub
add
xor
shll
adc
loope
test
ror
idiv
call
cmp
fisubrl
ror
call
loope
sbb
cmp
inc
inc
mov
outsl
in
aaa
sbb
push
dec
cmp
jmp
cmp
scas
mull
push
or
mov
add
fucomi
xchg
sbb
call
addr16
test
sub
sub
loopne
loope
push
gs
or
shll
lret
sub
es
out
xabort
gs
ficompl
rcll
or
or
sbb
cwtl
in
and
pop
push
xor
aam
xchg
mov
dec
cmp
sbb
inc
pop
loopne
es
xchg
aad
xchg
xchg
fcmove
mov
adc
pop
cmp
mov
or
std
cmp
call
fisubs
in
push
and
dec
sbb
je
mov
xchg
jbe
mov
adc
pop
fs
popa
mov
pop
adc
mov
jmp
in
sub
dec
test
xor
aaa
push
cmp
addb
jnp
mov
mov
add
dec
lcall
and
das
xor
and
add
frstpm(287
mov
and
cmp
jp
mov
push
imul
inc
rorb
and
js
call
fistpll
pop
add
lea
sbb
pop
call
leave
lahf
dec
sub
xchg
mov
pop
lock
in
test
cmc
fcompl
repnz
test
pop
test
xchg
sbb
addl
call
out
or
pushf
cld
jmp
nop
stos
in
mov
lods
sbbl
jp
test
lret
fucomp
std
iret
add
aaa
std
pushl
shll
lea
setge
inc
lret
setle
nop
cmpsb
push
pcmpgtd
lret
xchg
jnp
lcall
loop
ljmp
repz
mov
jle
cmp
jecxz
jmp
lahf
jmp
cmp
orb
rcrl
mov
das
fldenv
test
ss
mov
sbb
push
push
ret
or
or
pop
push
mov
push
nop
test
jg
cmpsb
cmp
jno
dec
ret
inc
hlt
int3
add
push
mov
xchg
adc
jmp
stos
int
pushf
aad
pop
fistpll
push
mov
hlt
push
push
lods
call
or
lea
or
aam
mov
push
lea
push
into
mov
push
push
ret
or
out
pop
jo
pushf
dec
bound
or
sbb
pop
or
std
fstpl
adc
stc
fcoml
pushf
dec
call
test
jmp
mov
jge
popa
js
or
or
jp
test
adc
sbb
sbb
push
aas
adc
call
cmp
data16
push
call
mov
mov
pop
jl
pushf
sbb
and
mov
cmp
fiaddl
mov
in
mov
lods
movsl
loope
fidivl
pop
mov
xor
leave
mov
sbb
std
lcall
xchg
call
pop
mov
popa
cmp
lret
js
push
and
xorl
or
std
push
aaa
cmc
jae
jmp
sbb
mov
das
lock
push
in
ljmp
mov
dec
cli
and
in
xlat
loopne
inc
xchg
or
enter
push
ficoms
or
loope
jnp
dec
xor
jo
cld
ljmp
mov
and
mull
ror
cli
fistpll
repnz
mov
cs
enter
mov
jne
loop
dec
lock
daa
cwtl
dec
aaa
repnz
mov
inc
les
int3
xchg
call
inc
popf
xor
jo
test
sub
mov
inc
dec
cmc
fistps
mov
lock
fnstsw
push
xor
jb
das
and
sti
out
mov
shlb
outsl
cmp
mov
sub
push
jg
xchg
insb
jle
addl
aas
pop
push
push
cld
adc
adc
lcall
fistl
aas
mov
ret
notb
fistl
outsb
insl
ja
rol
mov
push
xchg
push
in
js
movsl
xchg
or
test
adc
cld
pop
mov
lcall
push
xor
push
cmpsl
outsl
pop
mov
push
cmpsl
mov
daa
in
cmp
jmp
and
pop
mov
dec
movhlps
in
and
mov
in
sbb
repnz
mov
movsb
out
pop
dec
adc
mov
ds
add
leave
mov
jge
push
xor
adc
in
pop
jg
mov
inc
lahf
ja
jmp
mov
inc
lock
sub
out
lods
imul
scas
adc
lret
xor
movsl
jge
out
dec
xchg
cltd
or
ret
loope
pop
loope
push
movsb
pop
sub
jmp
sbb
in
fnsave
sub
add
mov
push
aaa
sub
adc
xchg
outsl
push
bound
jl
xbegin
sbb
out
ljmp
sbb
jmp
push
inc
aad
mov
clc
out
mov
sub
inc
lahf
add
data16
ret
out
fidivs
adc
cmc
loope
pop
mov
hlt
leave
mov
jae
xlat
ljmp
xchg
outsl
mov
inc
es
cmp
jno
sti
enter
push
movsl
cmpsb
jg
jmp
subb
xchg
lret
add
pusha
movsb
adc
xor
or
testb
inc
outsb
stos
xchg
push
and
xchg
sbb
ja
imul
outsb
mov
pop
loop
outsb
in
xorl
cmp
fs
jmp
sub
dec
pop
stos
mov
and
sbb
ret
jle
es
add
lret
mov
push
xor
es
mov
aam
xchg
mov
xor
mov
sub
dec
sub
jle
imul
jg
incl
in
gs
frstor
ljmp
pop
xchg
xor
js
aam
test
xor
jmp
inc
mov
mov
xchg
cmpsl
sbb
lcall
lret
mov
cmp
pop
cmp
stos
lcall
xchg
outsl
jg
movsb
orb
push
popa
rolb
jg
pmullw
imul
cmpsb
jne
pop
inc
jle
fisubrl
mov
inc
jmp
popf
push
imul
push
push
and
pop
out
jle
test
xor
pop
fsts
test
sub
iret
push
in
imul
cmp
in
pop
mov
jmp
mov
hlt
dec
or
xchg
sbbb
call
mov
xchg
cmp
out
sub
xchg
testl
int3
xchg
mov
cmp
in
fsts
cli
jecxz
xchg
test
xchg
jle
sar
stc
add
inc
xchg
xchg
test
sbb
mov
cmp
xchg
lcall
push
push
cs
imul
mov
add
pushl
xchg
in
in
lahf
pop
mov
pop
push
call
cs
lods
sub
or
cmp
test
outsb
pop
inc
es
lret
mov
jge
mov
jo
test
addr16
cld
cld
inc
cwtl
arpl
call
jp
cld
call
xchg
mov
cmc
fdivl
jo
push
insl
lahf
aam
inc
xlat
or
stos
mov
cmp
and
ljmp
clc
jno
subl
jns
jl
dec
or
inc
xor
lds
add
leave
ljmp
cld
mov
lahf
pop
pop
out
push
or
lret
dec
xchg
mov
pop
adc
jmp
enter
jbe
inc
jb
decb
adc
cmp
cli
int
mov
sbb
inc
xchg
clc
sub
testl
pusha
das
outsb
mov
cli
push
das
or
daa
or
orl
mov
mov
jle
pop
push
xchg
das
aas
into
sub
dec
or
or
xchg
shll
js
pushl
mul
and
test
sti
push
xor
pop
adc
mov
jmp
add
cwtl
push
push
jmp
scas
push
lods
loope
mov
inc
jo
push
inc
out
cmpl
mov
xor
inc
dec
mov
adc
pop
mov
call
hlt
lcall
push
push
cmpsl
and
fucomip
pop
ret
inc
lcall
jbe
dec
out
fisttpll
popf
mov
clc
js
ljmp
jo
inc
and
adc
inc
pop
test
xor
cwtl
sarl
jb
pop
int
pop
inc
xor
push
push
out
outsl
call
mov
aam
add
outsb
mov
mov
dec
adc
fs
loopne
test
ljmp
cld
adc
popf
in
mov
mov
and
faddp
ffreep
adc
clc
fmul
loop
cmp
ret
lret
ret
outsl
jmp
push
xchg
ljmp
dec
cmp
sbb
loop
xor
mov
fs
incl
pop
xchg
pop
and
repz
xor
jnp
jecxz
xor
dec
mov
incl
cmpsl
dec
cmpsl
cltd
lods
imul
sbb
or
push
cmp
adc
fld
stos
jg
dec
icebp
dec
adc
xor
repz
pop
mov
jbe
cwtl
mov
loopne
in
sahf
arpl
movsb
mov
jmp
add
mov
push
fwait
imull
xchg
jmp
mov
dec
pop
fdivrp
mov
xor
in
xchg
or
ds
mov
mov
test
mov
test
jmp
out
push
pushl
cmpb
sub
cmp
mov
stos
xchg
std
or
das
xchg
jmp
leave
popf
pop
dec
mov
inc
xcrypt-ecb
cmpsl
mov
fildll
dec
and
lcall
rolb
scas
enter
adc
jmp
and
lods
xchg
gs
mov
addr16
outsl
insl
mov
sarb
daa
lret
adcl
out
insl
cli
ljmp
xchg
push
and
mov
sbb
and
and
dec
sub
filds
loopne
test
dec
inc
inc
lret
and
jne
lods
idiv
jg
cmp
fucomi
jbe
aaa
push
ss
jns
and
lcall
or
sbb
sub
xor
mov
scas
xchg
mov
sub
outsl
mov
rcr
push
or
pop
jle
adc
ss
sub
fstpl
stc
adc
aaa
ss
out
es
or
pop
push
loopne
jmp
loop
daa
add
sbb
das
call
or
gs
fcompl
inc
add
sti
dec
mov
sti
dec
push
push
divl
mov
clc
pop
clc
push
push
jno
bound
js
jg
lea
adc
xor
flds
aaa
and
stos
pop
iret
mov
fildl
xchg
cmpb
push
es
xchg
or
sarl
fstpl
add
popf
fldt
paddusb
jbe
aaa
rcr
dec
incl
fisubs
cli
adc
xchg
ficomps
out
mov
push
rcll
cmpl
std
sub
add
in
cmp
cmpl
test
jno
and
mov
arpl
mov
inc
movsb
xchg
outsb
pop
dec
and
or
notl
ret
cmp
test
cwtl
test
fsubrs
lcall
repnz
add
inc
adc
lds
jl
mov
fnstenv
jo
adc
mov
xor
sbb
arpl
cld
mov
loope
or
out
shrl
in
jmp
cmp
rorl
in
adc
pop
into
daa
jp
mov
decl
movsb
jle
cli
into
mov
repz
and
nop
mov
outsl
dec
andb
addr16
lret
xchg
insl
push
das
daa
add
ficompl
popf
cmp
pop
cld
out
cltd
mov
movsl
fs
stc
lret
mov
push
xchg
lods
shrb
push
add
inc
push
fdiv
add
sub
lods
ja
jg
decl
mov
into
aas
cld
sub
cmp
or
mov
test
mov
cld
sbb
pop
mov
or
ffree
movsl
xchg
jge
in
cmp
or
cld
repnz
cmp
data16
mov
std
shll
addr16
repnz
popa
xchg
jecxz
jb
rclb
jmp
xchg
mov
mov
pop
push
sub
std
repz
xchg
insl
cmc
test
inc
adc
xchg
stc
incl
pop
push
pop
xor
cvtps2pd
sahf
fiaddl
jbe
scas
lret
inc
adc
adc
stos
ds
sbb
push
push
dec
hlt
mov
imul
push
js
icebp
aam
sub
jl
xchg
cmp
clc
pushl
adc
rcrl
pop
and
mov
or
enter
cmp
inc
adcl
xchg
iret
ds
jae
jne
out
sub
mov
push
jns
je
cmp
stos
and
mov
pop
shr
inc
push
notb
les
mov
jmp
out
and
dec
daa
clc
sbb
xchg
incl
sahf
push
mov
mov
lock
ds
in
test
cmc
sub
dec
adc
les
pop
clc
outsl
popf
cli
call
xor
push
aad
dec
dec
pop
loopne
scas
xchg
test
daa
fs
push
pop
cld
lcall
mov
in
test
sub
sbb
roll
arpl
sar
fnsave
enter
push
popf
hlt
call
mov
adc
and
mov
and
call
inc
sub
in
mov
xchg
stc
in
xor
in
mov
lret
and
cmp
sub
mov
lcall
fistps
xchg
aaa
fidivs
cs
popa
pop
and
outsb
pop
mov
clc
dec
bound
clc
out
lret
mov
jne
test
jge
add
mov
mov
xor
jmp
sub
loop
xchg
icebp
clc
push
sub
testb
cmpsb
fwait
pushl
xchg
loope
xor
std
ret
xchg
jle
push
aas
push
cmp
in
ljmp
pop
inc
in
fs
cli
xor
sbb
mov
int
addb
roll
test
and
lahf
push
aas
fmull
xor
xchg
sub
call
jg
fbld
cltd
jecxz
and
adc
aad
clc
int3
xchg
in
and
les
jg
xor
stos
cltd
sbb
mov
out
pop
mov
sub
ret
push
cli
fimuls
jb
dec
sub
xchg
cmpsl
push
insl
out
daa
inc
jg
outsl
lock
into
cmp
mov
jae
fs
out
mov
outsl
hlt
call
mov
mov
ljmp
pop
test
push
lcall
dec
cwtl
int3
mov
xlat
mov
daa
arpl
fildl
ljmp
mov
out
or
xchg
dec
and
sub
lcall
out
mov
cmp
int3
je
cmpl
pop
cli
lcall
inc
inc
jnp
aam
mov
aam
push
sti
push
adc
test
push
das
cld
mov
mov
sub
loop
dec
sub
adc
iret
sahf
mov
into
shld
popf
in
call
push
pushf
hlt
cmp
call
loopne
jnp
add
xchg
pusha
into
adc
mov
daa
cmp
das
cmc
inc
call
imul
test
push
les
cli
lcall
add
lret
mov
aas
sbb
dec
outsb
aam
cmp
mov
fisttpll
jle
sti
jmp
addr16
jg
ljmp
ljmp
adc
pop
ljmp
jne
rorb
lods
pop
mov
xor
mov
icebp
das
cmc
mov
jg
jg
mov
add
incl
or
int
mov
dec
test
inc
call
mov
subb
inc
push
or
mov
push
mov
icebp
pop
mov
test
mov
sub
lcall
in
mov
fiadds
inc
push
mov
xchg
inc
and
mov
stos
stc
adc
add
jg
imul
jnp
mov
cmp
int3
sti
cltd
push
movsl
sahf
xchg
xchg
icebp
ljmp
cmc
sbb
jmp
pop
sub
mov
stc
or
dec
insl
outsb
or
push
jo
call
repz
out
dec
popa
aaa
sahf
bound
sbb
mov
orl
xor
call
cmc
out
sti
mov
jp
testb
int3
or
testb
cmpsl
cwtl
js
jg
mov
shl
sub
xchg
call
aas
push
mov
daa
enter
aam
jae
int3
and
mov
fwait
add
jo
cld
pop
outsb
cmc
push
insl
xor
aaa
loopne
mov
sbb
outsl
lock
pushf
pushf
sub
jno
shr
lock
out
push
jo
and
jo
out
call
jmp
jnp
fisubl
dec
ljmp
stos
cli
pop
jg
das
dec
jge
faddl
xor
je
dec
sub
rcrb
loopne
mov
jl
fwait
lret
and
cld
ljmp
adc
xlat
es
mov
imul
or
lcall
xchg
in
push
call
mov
out
jb
cld
dec
push
adc
pop
shrl
lcall
cwtl
iret
aaa
dec
pop
mov
imul
lahf
lock
sbb
push
sbb
push
stos
pop
test
sub
pusha
pop
dec
xchg
adc
std
pop
std
ljmp
sbb
or
shll
insb
push
insl
dec
mov
sahf
mov
icebp
jb
ficomps
icebp
dec
xor
adc
pop
pop
push
gs
mov
xorl
rcrl
bnd
in
sub
jo
pop
and
dec
jecxz
incb
push
cmp
jg
call
and
jbe
outsb
fwait
xchg
imul
or
cmp
fsubrl
and
testb
ljmp
test
shll
sbb
movb
adc
xlat
or
push
or
xor
sar
dec
mov
inc
pop
rcl
cli
dec
clc
dec
ljmp
jns
sarl
incl
mov
and
fldenv
mov
leave
aad
mov
into
xchg
jg
jmp
ja
je
jbe
lock
cwtl
push
test
lds
cmp
pop
add
sbb
sbb
fwait
xchg
js
xchg
adc
rorb
insl
push
mov
out
insl
aas
rcll
out
into
pop
ss
jg
xor
ret
dec
iret
ja
aam
ljmp
loop
lret
inc
pop
enter
push
gs
add
or
hlt
rol
stc
push
mov
pop
sub
psllw
js
call
enter
jmp
push
clc
sub
inc
jbe
jg
jbe
std
jg
cmc
jmp
loop
lahf
stos
nop
push
clc
jg
xor
addb
cwtl
ss
cmp
push
aas
xchg
sub
cld
or
pop
mov
sbb
out
aad
mov
sbb
std
inc
and
sbb
mov
mov
xor
daa
aad
xor
and
ss
data16
les
pop
mov
call
xorl
lcall
pop
or
push
adc
mov
pushf
mov
add
cmp
test
cmp
stc
mov
std
incl
sub
mov
xchg
jle
mov
test
dec
lret
nop
pop
and
mov
mov
test
aas
pop
xor
ror
test
lea
or
mov
aam
pusha
dec
mov
scas
std
and
mov
jl
lods
mov
mov
pop
add
fpatan
rclb
call
negl
cmp
push
mov
mov
push
loopne
add
jge
or
sbb
repnz
addl
lods
mov
incl
lret
xchg
push
add
adc
mov
mov
jb
out
ljmp
xchg
jmp
dec
jae
xchg
mov
sbb
in
fs
leave
inc
xchg
mov
sbb
jecxz
jne
jo
adc
dec
insb
aad
hlt
in
or
xor
aam
inc
jae
sbb
int3
js
repz
jbe
aam
call
pop
movsl
fld
sbb
xor
movsb
lods
rolb
incl
mov
ret
jno
push
jge
jg
iret
das
les
inc
incl
imul
je
shl
cli
ss
and
sub
repz
setbe
out
pop
es
jnp
sbb
incb
es
jns
pop
scas
sub
mov
pop
dec
jne
pop
jo
inc
and
testl
sub
push
lea
movsl
clc
mov
and
lahf
jno
pop
into
cltd
jl
jg
stc
in
dec
pop
cmc
aaa
test
jnp
sbb
jp
lcall
cmp
adc
fcmovne
mov
or
push
pop
hlt
mov
push
push
cmp
xchg
fidivl
gs
inc
sub
fwait
in
adc
sbb
pop
icebp
cltd
sbb
cmp
enter
cs
adc
decl
jns
inc
xlat
sbb
mov
or
push
js
push
push
fldenv
ret
stc
xchg
cli
ret
cmp
or
fbld
scas
std
jmp
aas
shll
jg
cmp
or
fnstsw
inc
or
dec
or
inc
pop
pop
xor
or
movsl
test
adc
mov
mov
mov
sbb
dec
push
lcall
xchg
in
daa
cwtl
jge
pop
xchg
jle
dec
aaa
sub
sar
jmp
ret
lahf
jl
orb
mov
sarb
push
mov
incl
loop
jge
ret
loop
jnp
jp
push
aam
jbe
xchg
aas
xorb
dec
mov
ljmp
icebp
mov
lock
mov
paddsb
movsb
and
call
sub
cmp
fcoms
mov
call
inc
jnp
shll
imul
jne
movsl
xchg
jb
inc
xor
out
lret
mov
push
fdiv
movsl
and
mov
add
dec
int
pop
ss
dec
adc
mov
inc
addl
fimuls
mov
das
lock
sub
and
imul
cld
incl
ss
movsl
icebp
popf
mov
cwtl
clc
push
ljmp
and
test
cld
aaa
adc
fbstp
sbb
insb
cmpsl
xlat
sub
call
movd
out
out
adc
int3
out
push
jg
rorb
fcomip
aaa
cmc
scas
scas
push
test
xchg
cmpsb
fs
sub
lret
insl
test
mov
outsl
imul
dec
rolb
fcomps
stos
incl
xor
nop
ja
or
mov
push
xor
or
popf
mov
mov
sub
mov
daa
sbb
adc
pop
inc
sub
mov
mov
sti
mov
jne
push
adc
mov
inc
test
inc
movsl
xor
out
imul
imul
cmp
rcll
fsubr
mov
call
rcl
aam
sar
mov
incl
testl
mov
fistpll
sub
push
xor
andb
cld
das
lock
sbb
ss
cmc
into
jle
xor
cmp
fadd
cli
pushl
hlt
dec
js
jecxz
jne
jecxz
imul
test
xchg
out
mov
mov
clc
js
shlb
cmpsb
add
push
jne
inc
sub
add
lds
mov
inc
and
xor
ret
icebp
mov
mov
ffreep
test
mov
xchg
adc
xlat
mov
inc
test
sar
call
or
sub
mov
movsb
cs
iret
ljmp
call
pop
nop
jns
test
shrl
flds
imul
or
mov
call
cli
push
in
fsubrl
cmp
xchg
or
mov
pop
scas
fildll
cld
rorl
inc
sub
mov
mov
sub
add
incl
fildll
or
sub
mov
push
add
bound
cmp
cmc
inc
adc
rorb
or
jmp
outsl
xlat
add
inc
mov
in
mov
cmp
in
mov
fst
mov
or
es
incl
or
fstl
or
loope
notb
ror
add
mov
imul
aam
arpl
and
mov
or
inc
and
lock
icebp
movq
loope
clc
aaa
outsl
in
in
dec
mov
push
inc
add
fstps
jg
sar
negl
ljmp
nop
rorl
idivb
add
cld
dec
sahf
lds
mov
adc
in
lods
push
in
inc
or
pop
pop
shr
cwtl
outsl
lods
sub
sub
jecxz
inc
stos
inc
mov
mov
stos
add
js
add
ficoms
arpl
xchg
push
mov
mov
js
inc
ss
popl
lcall
lret
out
enter
push
push
push
pop
testb
shrb
clc
push
cld
call
and
mov
lods
ja
push
pop
clc
inc
add
testb
enter
sbb
hlt
mov
cmc
pop
push
sbb
push
sbb
call
mov
push
mov
jbe
aam
ljmp
jg
cmpb
xchg
pusha
sbb
ret
out
jg
xchg
jnp
outsl
inc
sti
in
push
cmp
sar
pop
loop
xchg
jle
dec
cs
stc
rol
cmpsl
jle
inc
push
lret
push
jg
add
pop
jmp
push
test
pushl
cmp
ret
nop
bound
jmp
jno
pop
inc
je
xor
sar
add
int3
xor
flds
lds
int
push
aaa
xchg
push
sbb
in
call
icebp
bound
iret
nop
xorb
pop
lods
xchg
into
sbb
cmc
mov
shrb
xor
dec
inc
and
mov
lcall
data16
xchg
insb
daa
out
mov
or
das
sarb
or
xor
icebp
loopne
lods
xor
cld
pop
loopne
or
pop
mov
sti
push
insb
fists
sbb
fucomi
lock
xor
add
out
test
rclb
sub
call
inc
push
aad
jl
add
test
and
decl
pushf
fildll
ds
adc
mov
cmc
fisubrl
fisttpll
mov
jne
mov
fiaddl
decl
cld
movl
adc
xlat
pop
mov
pop
jne
aas
mov
sub
sbb
mov
dec
jmp
test
cltd
push
lods
arpl
inc
fsubl
dec
mov
dec
xor
js
insb
pop
fidivrl
xchg
iret
mov
inc
inc
jecxz
inc
pop
mov
adc
ss
repnz
fwait
jg
clc
mov
xchg
in
push
adc
or
or
lods
faddl
lock
aas
sbb
sti
pop
push
xor
int3
loop
lods
mov
mov
outsl
pop
sahf
fdiv
or
into
or
mov
fists
fnsave
test
paddd
dec
rcrb
sbb
leave
sbb
hlt
call
push
inc
and
jg
push
rcll
dec
cmp
mov
rcrl
inc
lahf
adc
decl
pop
cs
mov
push
xchg
mov
push
lahf
addr16
scas
pop
loope
jle
or
aaa
in
add
int3
xchg
push
mov
ffree
in
jp
sub
ja
jne
repz
mov
inc
mov
dec
in
fcoms
mov
incl
push
mov
xchg
cltd
stc
mov
test
pop
inc
xchg
adc
dec
aas
mov
mov
jmp
ret
adc
loopne
ss
mov
stos
xchg
xchg
cmp
call
frndint
mov
jne
mov
push
popl
or
subl
lock
sbb
rolb
insb
mov
xchg
inc
pop
ret
ds
lock
incb
mov
add
fwait
or
pop
add
bound
movsl
std
xor
cmpb
sbb
cld
fistpll
idivl
fwait
and
mov
call
arpl
fsubrl
add
dec
jg
or
movsb
je
fidivs
jnp
int
mov
hlt
shll
or
jne
add
push
dec
cmp
les
das
jge
les
popw
fmull
repz
jmp
cmpb
cmc
inc
xor
into
mov
fldl
mov
mov
adc
fists
push
daa
ljmp
popf
fs
loope
jnp,pt
sahf
dec
lcall
test
dec
fs
sarl
dec
rorl
and
ljmp
rol
lock
jae
mov
inc
xor
jmp
jg
xchg
cld
loope
out
cmpsb
fildll
add
repnz
push
mov
in
das
cld
jmp
push
mov
pop
mov
pop
rcrl
dec
dec
xorl
decl
and
jmp
jl
add
sub
jl
cmp
mov
or
clc
or
idivl
aas
mov
mov
stc
mov
call
pop
ret
mov
dec
or
addr16
aad
jo
in
or
jns
or
mov
pop
rclb
mov
jno
mov
dec
lret
add
arpl
mov
call
call
push
pusha
push
cltd
adc
xor
pushf
jle
loopne
sbb
jmp
insl
int
xchg
add
push
icebp
mov
pop
dec
pusha
sbb
pop
call
repnz
shrl
jl
frstor
rorl
ret
adc
addr16
or
xchg
pop
jle
incl
outsb
insl
mov
daa
cmpsb
sbb
loop
push
aaa
stc
test
and
stos
xchg
je
pop
int
pop
repz
ds
daa
lods
jg
dec
and
mov
cltd
xchg
cmp
and
sub
push
inc
jmp
mov
cmp
js
aaa
insl
pop
stos
mov
sarl
mov
xchg
push
inc
xlat
adc
movsl
std
jecxz
ja
into
add
outsb
gs
lock
jmp
mov
lock
iret
or
push
leave
jno
jnp
frstpm(287
inc
daa
push
sar
lcall
cmpsb
inc
xchg
loope
inc
push
aam
adc
into
rcl
sub
mov
mov
ds
sub
jnp
je
aaa
daa
pmaxsw
cmpsb
xchg
xchg
insb
push
rcrl
pop
clc
lret
jmp
mov
mov
push
inc
mov
sub
adc
ret
stc
js
mov
push
out
scas
js
push
fstps
ljmp
adc
mov
ret
into
nop
ffreep
aaa
inc
addr16
inc
and
pop
sbb
xchg
in
mov
sar
mov
push
xor
push
aad
testl
frstor
outsb
mov
xchg
in
push
sbb
push
add
aam
outsl
icebp
decl
fmul
mov
jns
push
cmp
add
sarl
movsl
adc
or
pop
or
arpl
call
lock
jo
mov
pop
std
std
test
ljmp
fs
mov
sbb
jne
or
or
mov
pop
mov
xor
lods
dec
dec
fnstsw
test
push
and
aam
push
ret
add
jmp
fisubrs
adc
test
rorl
add
fs
push
sub
push
data16
movsl
mov
arpl
jmp
push
loopne
into
test
add
jmp
sbb
dec
insl
xchg
xchg
imul
and
adc
outsl
jno
aaa
pop
add
movsl
repnz
pushl
jge
stc
in
call
fcmovnbe
pop
push
pop
pop
cli
dec
jmp
testl
mov
cmpsb
push
jge
mov
and
ja
lods
icebp
test
cwtl
enter
sub
fimuls
lcall
fildl
ret
jg
push
ret
int3
iret
das
popf
sub
mov
xlat
rcrb
insl
jge
mov
adc
and
jmp
pop
push
shl
and
test
std
lahf
mov
movb
jl
lcall
aad
or
test
mov
adc
inc
repnz
jmp
dec
mov
popa
sbb
inc
push
fmul
les
imul
push
pop
addr16
pusha
pusha
pop
cld
int
jno
in
mov
mov
jmp
repnz
pop
ret
cltd
aaa
test
dec
or
call
push
fistpll
jno
inc
ss
fs
dec
xchg
push
xchg
and
pop
bnd
lods
adc
dec
xchg
mov
insl
nop
jle
mov
pop
sub
repz
xchg
out
mov
jp
dec
dec
jmp
cld
jmp
push
push
int3
jecxz
sub
test
int
adc
xchg
inc
mov
and
mov
mov
fdivr
jg
pop
fiadds
xchg
xchg
insb
push
mov
ret
jle
push
mov
vminsd
addr16
jns
add
pop
sub
adc
pop
fildll
mov
push
mov
rorl
pop
into
fucomi
fsubrl
adc
call
xchg
add
xor
jg
xchg
insl
movsl
add
aas
repnz
xor
test
or
lcall
cmpsl
xchg
insl
mov
mov
ret
jge
mov
iret
into
iret
mov
sub
and
ja
in
cmp
pop
out
pop
loopne
and
or
jecxz
daa
cwtl
out
test
out
jmp
popa
int
push
inc
push
push
add
adc
stos
push
cmc
pop
rcrb
lcall
add
aas
repnz
in
pop
xlat
inc
lcall
push
int
jo
mov
test
pop
std
lock
lret
outsb
repz
jnp
adc
cs
push
mov
rcrb
lcall
fidivl
movsb
movsb
dec
dec
stos
pop
out
incl
xchg
je
outsl
stc
push
test
sahf
scas
lock
femms
mov
inc
mov
sbb
and
arpl
xchg
xor
dec
push
push
or
sub
iret
ret
iret
bnd
jp
lret
sub
cwtl
rcrl
stc
and
pop
mov
mov
aam
je
ljmp
ljmp
mov
loope
inc
add
in
mov
xchg
loopne
test
sbb
rcrl
shrb
dec
jg
xchg
push
into
pop
jbe
mov
fucomi
or
das
or
les
loopne
ss
sub
mov
jbe
lahf
dec
call
xor
fidivl
movsb
cmpsl
out
mov
pop
cld
mov
push
ss
dec
push
or
add
out
adcb
cs
fisttps
iret
push
cmpsb
jmp
not
cmp
in
dec
aaa
je
mov
out
ja
lods
mov
jmp
adc
iret
outsb
add
imul
rorl
jbe
xchg
dec
imul
push
repz
movsb
mov
add
mov
leave
push
enter
movsl
test
add
roll
pop
sbbb
push
adc
fnsave
pusha
push
cs
pop
mov
insl
xchg
ja
out
jge
add
push
ja
cmp
mov
inc
shlb
test
cmp
cmp
jb
mov
mov
mov
bound
movsb
stos
loop
sub
out
mov
or
outsl
xchg
test
jge
inc
mov
out
pop
cmc
cltd
call
xor
testb
out
fcmove
cmp
cmpsl
loopne
jg
mov
dec
lock
or
ret
or
cld
scas
inc
cmp
jle
addr16
jg
dec
cltd
in
sub
cs
incl
and
aam
pop
int3
call
movb
dec
lahf
add
or
test
cltd
mov
incb
inc
nop
cmp
filds
mov
add
pop
decl
jns
aas
mov
dec
mov
in
fwait
rol
shrb
loope
aas
cld
jne
push
sub
mov
push
xor
cmp
jmp
out
leave
mov
je
cmp
sbb
push
ds
call
jno
fcoms
in
cs
std
out
fcomp
pop
imul
push
ljmp
add
push
jg
cmpsl
mov
paddd
adc
shrl
loope
xor
iret
decl
mov
dec
add
xchg
mov
and
movsb
mov
or
xchg
insb
imul
inc
aas
xchg
jne
jmp
mov
push
push
jne
call
stc
mov
bound
stc
pop
dec
xchg
push
push
test
mov
out
aas
aas
pop
push
es
daa
mov
cs
lods
mov
pop
cli
mov
popf
cmp
push
addr16
shlb
leave
sbb
in
pushl
loope
xchg
mov
ja
push
shlb
sub
fsubp
mov
decl
adc
jnp
push
scas
aam
dec
stos
add
outsl
mov
sahf
push
jl
mov
das
icebp
lods
mov
ret
addr16
xchg
leave
outsb
cmp
loope
xor
mov
push
ljmp
cmc
outsl
adc
movsb
mov
mov
mov
and
pushf
call
out
in
adc
fidivrs
or
pop
lods
inc
push
cs
ud0
jge
dec
fucomp
jmp
outsb
nopl
les
mov
notb
hlt
sub
pop
xor
out
outsb
xor
jb
fdiv
ljmp
fs
mov
dec
dec
jbe
cltd
int
test
pop
stos
in
dec
outsl
lods
mov
and
mov
xor
jbe,pt
fcoml
das
iret
lcall
cs
cmc
fld1
mov
cs
das
push
xlat
mov
xchg
xlat
xchg
les
dec
lahf
jcxz
aad
pop
cmp
add
mov
sbb
pop
push
pop
dec
dec
or
push
rcl
mov
jle
popf
movl
xor
js
inc
out
add
lods
in
push
xor
xchg
mov
data16
inc
lods
inc
addr16
popa
shr
push
dec
jae
cmp
mov
cmpsb
mov
js
fnstsw
jmp
gs
mov
inc
sahf
inc
outsl
inc
push
cmpsb
jecxz
jnp
daa
pop
jmp
push
adc
mov
and
push
mov
dec
push
aaa
das
jo
cmp
push
dec
cs
sbb
add
ja
add
fdivrl
ds
ds
xor
dec
aas
push
aas
mov
aas
and
xchg
mov
enter
fdivrs
in
call
cmp
or
adc
sbb
and
sub
incl
dec
cmp
mov
cmp
cmp
mov
fstpt
or
sub
aaa
cmp
jle
mov
xchg
cmp
inc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
push
incl
cmp
push
ds
ds
ds
mov
loope,pt
repz
sbb
cmp
js
cmpl
aas
into
aas
fistpll
out
inc
aaa
xor
cld
decl
push
xor
insl
xor
mov
xchg
xor
xor
xor
xor
xor
pushl
sbb
xor
popa
xor
xor
xchg
xor
pop
loop
add
xor
ds
inc
mov
lcall
xor
xor
sub
xchg
xor
fistps
push
xor
xchg
xor
call
fists
xor
pop
xor
sbb
push
ss
xchg
pushl
xorb
ss
aaa
inc
aaa
in
adc
cmp
pusha
cmp
rclb
popf
xchg
cmp
cmp
cmp
cmp
outsl
clc
decl
pop
cmp
cmp
cmp
cmp
cmp
fs
idivb
decl
loopne,pt
cld
add
push
aas
pop
aas
fs
imul
aas
nop
aas
sahf
aas
scas
aas
mov
mov
pop
loope
pushl
mov
xor
xor
or
fcomip
xor
inc
pop
pop
xor
imul
out
dec
cld
popa
ret
xor
or
xor
call
pushl
pop
xor
stos
xor
aad
xor
push
xor
jns
mov
and
xor
xor
jg
addr16
xor
xor
xor
xor
xor
or
dec
xor
imul
xor
out
clc
jg
aaa
xorb
aaa
mov
or
sub
xor
inc
cmp
pushl
jl
clc
cmp
cmp
cmp
stos
cmp
mov
cmp
loope
sbb
cwtl
ds
ds
stc
cmpl
and
add
gs
insb
mov
in
aas
rolb
fsubrl
ja
and
pop
out
repz
xor
pushl
xor
xor
xor
jmp
das
xor
xorl
xor
loope
mov
xor
xor
xor
xor
sbb
xor
xor
jl
lea
xor
xor
xor
mov
mov
ss
ss
ss
call
lcall
aaa
and
cmp
inc
aaa
mov
aaa
test
mov
aaa
outsl
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sbb
ljmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sarl
mov
loope
pop
imul
cmp
mov
mov
add
inc
add
je
push
xor
sbb
xor
jle
xchg
jnp
xor
pushl
sti
xor
xor
xor
xor
xor
xor
xor
xor
mov
inc
aaa
jg
xor
xor
pushl
sub
cmp
inc
ss
addl
aaa
dec
aaa
imul
xchg
cli
fisttpll
iret
aam
jmp
sti
aaa
out
cmp
jg
ljmp
cmp
cmp
cmp
cmp
sar
ljmp
cmp
cltd
cmp
xor
dec
cmp
bound
imul
cmp
jg
ljmp
cmp
jae
mov
jmp
cmp
cmp
cmp
cmp
out
decb
sarl
xlat
div
cmp
cmp
jmp
cmp
addr16
cmp
lcall
cmp
pop
notrack
ds
xor
cmp
dec
ds
ds
out
icebp
mov
xchg
nop
ds
ds
and
sub
aaa
aas
sub
aas
arpl
insl
aas
jnp
cmpl
aas
enter
stc
sbb
arpl
out
xor
xorl
xor
cmpsb
pop
clc
pushl
jmp
xor
xor
dec
xor
xor
decl
test
shlb
adc
xor
xor
pusha
xor
xor
sub
pop
jo
pop
gs
push
inc
cmc
je
push
xor
jo
lcall
xor
xor
xor
mov
hlt
jmp
aaa
arpl
mov
ds
ds
push
pop
xor
aas
sub
inc
aas
push
aas
pop
aas
mov
xorb
mov
imul
std
xor
dec
xor
xor
xor
and
ja
xchg
xor
xor
xor
xchg
mov
mov
fwait
loop
jmp
lock
xor
add
mov
xor
push
cmpsb
pop
jb
xor
outsl
addl
xchg
test
decl
mov
xor
xor
cli
pushl
push
ss
adc
sbb
and
daa
ss
inc
jg
sbb
pop
ss
xorl
ss
mov
ss
mov
jmp
hlt
ss
ss
or
or
push
aaa
addr16
jae
jns
fcomip
aaa
in
aaa
popf
aaa
movsl
aaa
lods
adc
or
sbb
pushl
jge
cmp
jb
cwtl
cmp
cmp
cmp
clc
jg
fildll
cmp
jae
sahf
cmp
cmp
cmp
cmp
ljmp
xchg
test
inc
cmp
cmp
mov
popf
cmp
cmp
call
push
dec
cmp
cmpb
cmp
cmp
cmp
push
cmp
mov
sbb
cmp
cmp
cmp
cmp
cmp
cmp
mov
cmp
call
cmp
cmp
es
ja
xchg
cmp
mov
fnstsw
icebp
arpl
mov
pop
dec
imul
clc
pop
pusha
outsl
js,pt
jge
mov
ds
jge
sub
inc
xlat
ds
sub
push
aas
dec
fincstp
add
nop
fildll
and
and
mov
xor
xor
xor
xor
xor
add
pushl
fdivs
fbstp
sti
xor
das
pop
inc
add
cmp
jg
xor
xor
pop
xor
xor
or
xor
outsb
mov
and
xor
cmp
ss
push
loope
out
gs
aaa
loop
jmp
cmp
adc
cmp
dec
cmp
pop
lea
addl
xchg
cmp
cmp
jne
lcall
in
cmp
cmp
cmp
cmp
cmp
popf
mov
hlt
fistpll
cmp
cmp
cmp
inc
cmp
leave
xor
pop
jge
stos
cmp
fcoml
imul
push
cmp
inc
cmp
dec
cmp
cmp
cmp
js
xchg
clc
jg
cmp
cmp
addr16
or
xor
mov
out
add
and
push
add
sbb
add
fcomps
idivb
lret
rcrb
fistpll
pop
pop
popf
rcrl
paddd
repnz
aad
fstps
cltd
cmp
cltd
loop,pt
add
out
aas
dec
push
adc
out
cmp
shlb
repnz
sbb
or
add
add
testb
inc
andb
inc
daa
mov
and
pop
js
pop
xor
add
and
cmp
or
enter
loopne
testb
sbb
xorb
and
mov
leave
pop
pusha
push
and
add
cmp
jnp
insb
add
add
pop
push
ss
jb
jb
inc
add
jae
daa
addl
push
inc
out
push
dec
dec
sarl
sub
mov
ds
xor
js
and
inc
and
inc
and
push
add
nop
jno
jo
add
enter
addb
sbb
inc
and
adc
add
adc
mov
dec
ds
mov
sahf
adc
and
add
add
adc
and
pop
inc
ds
add
les
add
fwait
sbb
rcrb
jns
add
enter
mov
inc
xor
add
and
add
in
repnz
adc
nop
inc
and
and
inc
and
enter
sbb
int3
mov
and
cmp
pop
lods
adc
add
push
push
out
ret
push
call
cld
nop
pop
cmp
add
cld
adc
add
out
jns
xor
push
data16
add
aas
int
jno
add
gs
stc
pop
int3
pop
adc
add
xor
leave
or
xor
xor
xor
das
aas
das
xor
inc
inc
and
adc
xor
adc
push
adc
jbe
inc
pop
or
xor
sti
adc
mov
ljmp
adc
add
jo
aaa
mov
add
sbb
and
ds
cmp
adc
add
notb
and
dec
ds
inc
add
xor
addb
adc
and
adc
xchg
cld
inc
adc
add
inc
repnz
pop
inc
and
mov
add
inc
cmp
cmp
int3
imulb
rep
or
jp
pushl
mov
pop
sbb
xor
lret
jbe
loop
cwtl
adc
ffree
or
dec
sbb
pusha
mov
mov
mov
mov
sbb
pushf
cmp
push
lock
adc
adc
sub
push
dec
fisttps
xlat
cmp
out
popf
cmpsb
fldl
lods
cld
sub
inc
dec
rdpmc
pop
mov
adc
add
cmp
shr
cmp
pop
out
mov
fistpl
dec
cmp
lock
sbb
jbe
fxch
mov
fisttpl
pop
inc
lock
push
mov
xor
cld
xor
add
push
jno
mov
mov
xor
insb
outsb
jnp
adc
and
dec
cwtl
or
popa
inc
sub
mov
jae
cmp
mov
shll
mov
add
ret
mov
stos
ds
mull
sbb
add
fs
in
mov
les
push
add
inc
push
aaa
pop
bound
repnz
hlt
imul
xor
dec
insl
insl
cmp
mov
insb
pop
xchg
or
dec
pop
insb
inc
jg
mov
fdivs
or
rorb
or
loopne
loop
lcall
je
dec
inc
imul
inc
lcall
xchg
test
faddl
ljmp
push
cmp
pop
inc
jns
fs
aas
mov
mov
cmp
cmp
aad
dec
sub
fidivl
dec
sbb
push
adc
jle
or
aas
sub
jg
add
fs
jae
push
out
xchg
inc
sbb
xor
cmp
mov
push
dec
mov
outsb
adc
xor
cmp
xor
or
test
adc
lcall
push
repz
or
negb
pop
jno
and
or
clc
lods
xor
sub
js
or
jbe
mov
inc
inc
xor
sbb
icebp
cmp
or
adc
jb
lea
or
les
cmp
in
or
mov
xchg
dec
inc
ret
test
dec
push
push
cltd
in
jl
outsb
or
hlt
das
dec
stos
mov
cmp
jmp
cmp
add
cmp
jl
aaa
pop
lock
cmp
lcall
xchg
lods
add
imul
lret
mov
je
adc
fldt
xor
mov
or
outsl
sub
jb
outsb
gs
cs
leave
mov
js
aam
aad
add
xlat
popa
pop
jne
sub
mov
arpl
cmp
loopne
loop
gs
ss
js
bound
fs
dec
je
sti
xor
call
inc
imul
mov
adc
hlt
xchg
je
pushf
test
dec
daa
je
mov
lret
int3
addr16
addr16
push
into
jp
daa
daa
daa
daa
rcl
rcl
xchg
cmp
stos
enter
dec
outsl
popa
aas
std
xchg
jmpw
sbb
and
push
movsb
int3
int
add
or
mov
roll
std
fsubp
ja
xor
aam
jne
add
incl
lret
ret
add
xchg
xchg
inc
mov
push
xchg
insb
ret
mov
jl
lock
mov
xor
push
jp
fisttpl
rolb
loop
cwtl
shll
mov
nop
sub
jne
into
ret
or
cld
or
mov
push
push
push
adc
xor
orl
decl
jne
in
jnp
cld
pop
sahf
inc
and
push
in
rolb
sub
xchg
inc
inc
and
jmp
mov
or
pusha
add
xor
test
stos
stos
lods
lods
arpl
xor
scas
scas
test
cmp
and
mov
mov
mov
push
movsl
xor
inc
rcrl
addr16
dec
mov
cmpsb
je
test
test
std
pop
stos
mov
lods
lods
lret
scas
std
pop
cs
lret
jnp
js
jo
insb
xor
jb
shrb
jb
rcl
sub
xlat
fsubrs
inc
pop
ret
cmpsb
cmp
mov
rol
into
pop
inc
je
push
jo
xor
mov
or
insb
inc
in
call
mov
lret
mov
popa
outsl
outsb
fwait
insb
push
jne
push
jae
and
cmpsb
enter
pop
dec
xchg
xchg
fs
popa
jne
fs
xchg
outsb
arpl
cmp
mov
leave
mov
jno
outsl
imul
subl
xchg
gs
xchg
gs
insb
outsl
jb
dec
rorl
in
out
xchg
sub
add
arpl
xchg
xchg
std
push
lock
inc
out
xchg
lea
out
cmp
add
xchg
inc
ss
repz
in
add
lcall
clc
vpunpckldq
cmp
cmp
inc
psrld
fwait
je
push
and
aam
std
int3
sbb
pop
inc
ja
and
pop
inc
sahf
sahf
addl
arpl
pop
or
or
mov
jb
cmpsb
mov
pop
std
xchg
jecxz
xchg
mov
pop
mov
cmpsl
push
or
or
filds
icebp
mov
sbb
xor
lcall
adc
les
sbb
sbb
sub
sbb
jo
mov
add
mov
push
fdivr
and
loopne
inc
fstps
or
jl
ss
lds
call
enter
test
mov
lea
add
push
push
sbb
in
ret
js
rcr
mov
add
test
mov
daa
sub
push
bound
mov
rorb
idivb
cmp
xchg
rclb
jae
sti
in
xchg
sbb
leave
pop
mov
push
stos
js
in
mov
mov
or
jo
add
xor
pop
xchg
mov
pop
pop
or
inc
sbb
jo
add
push
lock
pop
in
addb
inc
and
adc
int
aaa
leave
push
sbb
loopne
adc
pop
push
jo
or
repnz
mov
mov
inc
and
adc
adc
test
lds
and
push
push
adc
inc
push
enter
add
fs
hlt
nop
lret
push
and
adc
push
sbb
add
nop
mov
sbb
xor
lcall
xor
mov
xorl
jmp
std
add
add
jae
sub
mov
or
loope
stos
xor
push
mov
push
cwtl
cmp
mov
cwtl
inc
and
stos
add
int3
or
mov
mov
add
imul
imul
insb
lcall
ret
shll
cmpsb
lcall
jb
inc
jae
xchg
add
jle
cmp
mov
insb
xchg
dec
stos
pop
add
lcall
pop
and
xor
xor
mov
xchg
xor
xor
pop
adc
mov
dec
jo
test
mov
add
and
adc
lds
pop
or
lods
and
std
das
mov
dec
popa
jns
jne
jae
xor
jbe
add
xor
push
push
pop
add
cmp
aaa
jp
add
call
pop
pop
xor
inc
push
sub
push
push
dec
sub
rorb
lea
cli
pop
insb
imul
inc
fwait
push
inc
adc
inc
rolb
xchg
sbb
xchg
xor
movsb
inc
enter
adc
mov
and
add
add
inc
sub
inc
add
and
enter
shll
jecxz
inc
or
nop
cmc
inc
fstl
packsswb
inc
adc
or
popa
je
mov
daa
lea
adc
sub
andb
inc
jae
adc
je
sub
std
jno
xor
or
dec
outsb
outsw
es
mov
sub
adc
and
addr16
loope
adc
and
les
push
mov
push
outsb
jb
dec
sub
and
adc
mov
and
int
sub
xchg
test
lods
dec
test
stc
mov
dec
inc
out
xchg
inc
inc
mov
rcll
xchg
sub
aaa
mov
and
mov
shr
pop
adc
sub
outsl
adc
insl
insl
add
rorb
jg
pusha
add
frstor
jmp
inc
inc
add
or
pusha
cmp
je
mov
es
data16
and
fcmovne
and
pop
mov
and
add
adc
sub
out
lock
cld
add
dec
sbb
sub
ss
shll
pop
out
clc
or
imul
xor
jge
add
mov
add
jle
add
xchg
pop
fistps
lea
jno
adc
sub
scas
or
pop
ret
or
out
sbb
pop
adc
and
inc
icebp
movsl
lea
jne
jge
add
icebp
adc
adc
and
mov
inc
or
adc
pop
adc
mov
fstpt
push
in
adc
enter
or
add
test
pop
adc
mov
adcb
pop
bound
mov
jnp
addr16
xchg
mov
sbbl
ret
jp
pop
jns
pop
push
xor
or
and
int3
insl
btr
adc
stc
jnp
mov
cmovno
imul
mov
jno
jns
add
flds
and
incb
sbb
xor
inc
add
dec
push
mov
fsts
xor
fistpl
test
dec
add
into
aas
xlat
jne
dec
add
add
and
xchg
int
jae
xchg
add
sub
add
adc
loopne
mov
xchg
dec
pop
jecxz
or
jns
and
mov
xlat
mov
pop
inc
and
push
nop
scas
outsb
inc
jae
and
popa
int3
arpl
and
add
aaa
insl
ret
addr16
jo
jnp
jnp
imul
xchg
pop
add
pop
leave
nop
dec
loope
adc
add
jb
cmp
mov
pop
xor
xor
add
popa
xchg
insb
jmp
xchg
xchg
pop
dec
or
cmp
pop
lds
popf
addr16
xlat
mov
sub
jbe
pop
xor
cltd
outsb
jae
pop
fs
or
push
fwait
in
sub
dec
dec
imul
push
daa
sbb
icebp
mov
test
sbb
dec
je
dec
or
fwait
and
xor
cmp
gs
imul
and
mov
cmpsl
dec
fidivl
add
lods
mov
push
es
mov
cmp
xor
xor
mov
xor
xor
out
mov
xor
jle
lea
cmp
xor
cli
xchg
fbstp
mov
xor
xor
lea
xor
xor
cmpb
ror
xor
out
divb
jmp
fidivrl
xor
js
filds
ss
ss
pop
xchg
aaa
pushf
aaa
mov
cmp
cmp
adcb
les
add
hlt
mov
pushl
cmp
cmp
cmp
cmpl
cmp
lods
cmp
aam
call
daa
cmp
lret
cmp
cmp
stos
cmp
out
test
sub
push
cmp
dec
xor
jp
ljmp
xor
xor
xor
pcmpeqw
jg
test
test
or
xor
xor
xor
mov
and
and
pop
push
call
xor
sub
pusha
ss
pop
jmp
and
aaa
xor
push
movsl
sahf
mov
or
fisttps
stc
push
add
add
add
or
inc
mov
inc
add
pop
dec
inc
mov
sub
or
ret
movsb
xor
mov
or
adc
cmovo
inc
or
shlb
push
and
mov
mov
outsl
jne
pop
sbb
xchg
cmp
sbb
push
push
inc
add
push
add
push
inc
push
add
add
push
push
mov
es
add
add
pop
dec
jb
add
adc
add
xchg
adc
adc
ja
mov
es
cmp
ret
cld
popf
add
add
add
loopne
cwtl
fs
shlb
add
addl
aas
mov
lods
add
sub
loop
and
push
aam
add
insl
test
push
aaa
aaa
pop
and
and
inc
add
lret
push
leave
shlb
add
dec
insl
and
sub
pop
xor
and
scas
xchg
and
or
sub
call
jnp
add
xchg
cmpsb
addb
push
ja
in
rclb
daa
in
xchg
xchg
addb
add
and
mov
and
addb
incl
add
add
add
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
